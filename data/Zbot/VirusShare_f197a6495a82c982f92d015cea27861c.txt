push
mov
sub
mov
xor
mov
mov
push
mov
mov
lea
xor
push
movl
movl
mov
movl
push
call
push
push
lea
push
call
mov
shl
mov
push
call
mov
mov
test
je
mov
mov
push
push
push
lea
mov
push
call
mov
sub
push
push
mov
sub
push
pushl
pushl
push
push
pushl
call
push
call
test
jne
mov
push
sar
push
mov
call
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
push
push
call
mov
pushl
call
test
je
lea
push
mov
pushl
call
lea
push
push
call
pushl
call
mov
mov
test
je
mov
push
pushl
call
push
mov
call
cmp
je
push
push
call
lea
push
pushl
call
push
push
push
lea
push
push
push
push
pushl
call
push
pushl
call
pushl
pushl
call
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
push
push
mov
call
test
je
push
push
call
push
push
push
push
call
push
call
push
call
xor
inc
pop
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
call
lea
push
lea
push
call
mov
xor
call
leave
ret
push
push
call
mov
pop
ret
push
push
push
push
call
mov
pop
ret
sub
mov
xor
mov
lea
push
call
mov
xor
call
add
ret
push
push
push
push
call
add
push
call
push
call
mov
mov
push
push
push
call
pop
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
push
pop
push
mov
pop
mov
mov
mov
push
mov
xor
lea
push
push
call
add
push
lea
push
push
lea
push
push
mov
push
call
mov
mov
test
jg
push
lea
push
push
call
add
push
lea
push
push
lea
push
push
push
call
mov
mov
test
jg
push
lea
push
push
call
add
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
call
mov
lea
push
push
push
lea
push
pushl
call
mov
mov
test
je
lea
push
push
call
mov
mov
test
je
lea
push
lea
push
call
mov
xor
call
leave
ret
push
push
push
push
push
push
call
mov
push
push
xor
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
lea
push
call
push
push
pushl
pushl
push
push
call
push
call
pop
pop
pop
pop
pop
pop
ret
push
push
push
push
push
push
call
mov
push
push
xor
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
lea
push
call
push
push
pushl
pushl
push
push
call
push
call
pop
pop
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
lea
push
lea
push
movl
call
lea
push
lea
push
movl
call
mov
xor
call
add
leave
ret
push
lea
push
call
pop
ret
push
push
push
xor
push
call
push
push
push
push
call
mov
push
push
push
call
push
push
push
push
call
push
call
push
push
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
call
push
push
call
ret
push
push
xor
push
push
push
push
push
push
push
call
push
push
push
push
push
call
push
mov
push
push
push
call
push
add
push
push
call
push
push
push
call
pop
pop
ret
push
mov
push
push
push
pushl
call
xor
push
push
push
pushl
mov
push
push
call
mov
cmp
jle
lea
lea
push
push
call
pop
push
mov
push
pushl
pushl
push
push
call
xor
mov
mov
pop
jmp
xor
pop
pop
leave
ret
push
push
push
mov
push
push
call
xor
push
push
push
push
push
push
push
push
mov
call
mov
cmp
jle
lea
push
push
call
pop
push
push
push
mov
push
pushl
push
push
push
call
mov
mov
pop
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
push
pushl
call
pushl
mov
call
add
push
xor
push
push
mov
call
pop
push
call
add
cmp
jle
mov
mov
push
pushl
pushl
call
add
test
je
addl
inc
cmp
jl
xor
pop
pop
pop
leave
ret
lea
jmp
push
mov
push
push
push
pushl
mov
call
lea
push
push
push
call
pop
push
call
add
push
call
cmp
jle
push
call
lea
mov
test
je
lea
push
pushl
push
call
add
test
je
decl
sub
cmpl
ja
xor
pop
pop
leave
ret
mov
inc
jmp
pushl
mov
push
push
call
add
ret
push
push
mov
push
call
push
mov
push
push
call
push
push
pushl
mov
push
push
call
add
test
jle
xor
mov
mov
jmp
xor
pop
pop
ret
pushl
mov
push
push
call
add
ret
push
mov
sub
mov
xor
mov
mov
push
lea
push
push
push
mov
push
mov
mov
call
add
mov
cmp
je
incl
mov
shl
push
call
mov
mov
shl
push
push
push
call
push
call
push
push
push
mov
call
add
cmpl
jne
pushl
call
dec
push
pushl
pushl
call
lea
push
pushl
call
pushl
call
lea
push
call
mov
pop
mov
pushl
mov
mov
mov
pushl
call
incl
mov
shl
push
pushl
call
push
push
pushl
mov
call
add
lea
push
pushl
mov
push
push
call
add
test
jne
decl
pushl
jmp
andl
andl
push
push
push
mov
call
mov
add
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
mov
lea
push
mov
push
lea
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movb
movl
movb
mov
call
lea
mov
lea
push
push
lea
call
push
call
push
mov
push
push
call
add
lea
push
lea
push
push
call
pop
push
lea
push
call
pop
push
push
push
push
push
mov
call
mov
add
neg
sbb
not
and
pop
xor
pop
call
leave
ret
push
push
mov
push
call
push
mov
push
push
call
push
push
push
push
mov
call
add
push
call
cmp
jne
xor
mov
mov
pop
pop
ret
push
push
mov
push
call
push
mov
push
push
call
push
push
push
push
push
mov
call
add
test
jle
xor
mov
mov
jmp
xor
pop
pop
ret
push
mov
push
push
push
mov
push
call
push
mov
push
push
call
lea
push
pushl
mov
push
push
push
mov
call
add
test
jne
push
pushl
mov
push
push
call
add
neg
sbb
and
jmp
xor
pop
pop
leave
ret
push
mov
cmpl
jge
xor
pop
ret
pushl
call
cmp
jle
pushl
call
jmp
mov
push
lea
push
push
call
push
mov
push
push
call
push
pushl
push
call
add
xor
mov
mov
pop
pop
pop
ret
cmp
jge
xor
ret
pushl
call
cmp
jle
mov
ret
push
push
lea
push
call
push
mov
push
push
call
add
push
pushl
call
mov
sub
lea
push
push
call
xor
mov
add
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
push
lea
mov
lea
push
xor
push
lea
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movw
call
push
push
push
push
lea
push
push
push
mov
call
mov
add
xor
pop
call
leave
ret
push
push
mov
call
pop
pop
ret
push
mov
push
mov
add
mov
cmp
je
movl
jmp
movl
mov
leave
ret
push
push
mov
call
pop
test
jne
push
mov
call
pop
test
jne
push
mov
call
pop
test
jne
pop
ret
xor
inc
pop
ret
push
mov
sub
mov
xor
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movb
movl
call
mov
lea
mov
lea
push
push
lea
call
pop
pop
test
jne
push
call
test
jle
lea
push
call
push
push
call
add
test
je
xor
inc
jmp
xor
mov
xor
pop
call
leave
ret
push
push
xor
inc
push
mov
call
pop
test
jne
push
call
pop
test
jne
push
mov
call
pop
test
jne
push
mov
call
pop
test
jne
push
mov
call
pop
test
je
mov
pop
pop
ret
push
push
mov
call
pop
test
jne
push
mov
call
pop
test
jne
push
mov
call
pop
test
jne
push
mov
call
pop
test
jne
mov
call
test
jne
pop
ret
xor
inc
pop
ret
push
mov
sub
mov
xor
mov
lea
mov
lea
push
push
lea
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movw
movb
movl
movl
movl
call
lea
push
call
push
push
push
mov
call
mov
xor
add
call
leave
ret
push
mov
push
push
push
push
push
push
mov
mov
push
mov
call
add
rdtsc
mov
rdtsc
sub
push
cmp
je
pop
cmp
jb
movl
jmp
movl
push
push
push
mov
call
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
movl
movl
movl
movl
call
push
xor
mov
push
push
call
lea
push
push
push
push
push
mov
push
mov
push
mov
call
add
test
jne
push
call
movl
call
mov
movl
call
lea
push
push
push
push
pushl
mov
pushl
push
push
call
add
test
jne
push
call
push
push
push
push
mov
call
add
test
je
pushl
push
call
pop
pop
test
jne
inc
cmp
jb
pushl
mov
push
push
call
add
xor
pop
pop
pop
leave
ret
pushl
mov
push
push
call
xor
add
inc
jmp
push
lea
push
push
push
push
push
mov
call
neg
sbb
inc
add
ret
push
push
mov
push
call
push
mov
push
push
call
push
push
push
push
push
mov
call
add
test
je
push
push
call
pop
pop
test
jne
push
push
call
pop
pop
test
je
xor
inc
jmp
xor
pop
pop
ret
push
mov
push
push
mov
push
push
push
movb
call
pop
push
call
mov
push
call
push
push
push
mov
call
add
test
je
push
push
push
push
push
mov
call
push
push
mov
mov
call
push
push
lea
push
push
push
push
push
mov
call
add
pop
test
je
cmpb
jne
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
push
push
mov
push
call
push
mov
push
push
call
lea
push
push
push
push
mov
mov
call
add
test
je
mov
push
xor
push
mov
call
test
jne
inc
jmp
xor
pop
pop
leave
ret
push
push
mov
push
call
push
mov
push
push
call
push
push
push
push
push
mov
call
add
test
jle
push
xor
push
mov
call
test
jne
inc
jmp
xor
pop
pop
ret
push
push
call
andl
mov
pop
or
inc
cld
inc
inc
cld
pushl
rolb
xor
inc
ret
mov
movl
xor
call
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
movl
mov
movl
mov
add
push
mov
mov
cltd
pop
idiv
mov
call
cmpl
mov
je
mov
test
jle
incl
pushl
call
push
push
jmp
mov
add
mov
pushl
call
push
push
push
mov
push
mov
call
mov
xor
add
call
leave
ret
push
lea
sub
mov
xor
mov
push
push
push
push
push
pop
push
mov
push
mov
push
mov
mov
call
lea
push
push
push
push
mov
mov
movl
call
add
test
je
push
call
push
push
push
mov
push
mov
call
lea
push
pushl
push
mov
push
mov
call
add
jmp
lea
push
call
push
lea
push
push
push
mov
call
add
pushl
lea
push
call
test
je
lea
push
pushl
mov
push
push
call
add
test
jne
pushl
mov
push
push
call
add
xor
mov
pop
pop
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
sub
push
push
mov
mov
push
movl
push
movl
movl
push
call
pop
push
call
add
incl
cmpl
je
mov
mov
cmp
jne
push
call
push
jmp
push
call
push
call
pop
push
mov
call
sub
mov
push
mov
call
incl
cmpl
pop
mov
jne
mov
mov
cmp
jne
mov
jmp
push
call
push
call
mov
mov
dec
push
push
call
add
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
push
xor
lea
push
push
push
push
push
push
push
push
push
push
lea
push
push
mov
push
mov
mov
movw
call
add
mov
cmp
je
lea
push
pushl
mov
push
push
push
call
add
test
jne
mov
pushl
mov
push
push
call
add
mov
mov
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
lea
push
xor
lea
push
push
push
push
push
push
pushl
mov
mov
call
pop
push
pushl
mov
push
push
mov
call
add
test
jne
pushl
call
add
push
pushl
mov
push
push
pushl
pushl
push
push
call
pushl
mov
push
push
call
add
pop
pop
leave
ret
push
mov
push
push
push
pushl
mov
push
push
mov
call
add
mov
cmp
jne
push
pushl
mov
push
push
call
add
pushl
pushl
call
mov
pop
pop
test
je
push
push
pushl
pushl
call
push
call
add
cmpl
je
pushl
mov
pushl
push
push
call
add
xor
inc
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
pop
push
xor
lea
push
push
call
push
lea
push
push
call
mov
push
mov
call
mov
push
mov
call
add
push
push
call
push
push
call
lea
push
lea
push
push
push
push
push
push
push
push
push
push
mov
push
mov
call
add
test
je
push
push
pushl
call
push
pushl
mov
push
push
push
call
pushl
mov
push
push
push
push
mov
mov
call
push
push
add
push
push
push
push
push
mov
mov
call
add
push
push
push
push
pushl
mov
push
push
mov
mov
call
add
push
pushl
pushl
call
pop
push
mov
add
push
pushl
mov
push
push
call
push
push
push
pushl
mov
push
push
pushl
push
push
call
add
push
push
push
mov
call
push
push
mov
call
add
pop
pop
pop
leave
ret
push
lea
mov
call
push
push
mov
push
sub
mov
xor
mov
push
push
push
push
lea
mov
mov
mov
push
mov
or
call
test
je
push
push
call
mov
mov
test
je
push
lea
push
push
call
push
lea
push
push
call
push
pop
push
lea
push
lea
push
movl
call
push
lea
push
lea
push
movl
call
mov
add
push
xor
pop
test
jle
lea
jmp
mov
add
mov
mov
mov
inc
cmp
jl
test
jle
lea
lea
mov
mov
push
lea
push
push
movl
call
push
pushl
inc
inc
push
call
sub
add
add
add
decl
jne
mov
push
lea
push
lea
push
movl
call
inc
sub
lea
sub
push
lea
push
lea
sub
push
mov
call
push
lea
push
add
lea
push
movl
call
xor
add
push
push
push
push
mov
lea
push
call
mov
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
mov
ret
or
jmp
push
mov
push
mov
andl
push
mov
push
mov
imul
test
je
cmpl
je
push
call
lea
push
push
pushl
mov
push
push
push
push
push
mov
call
add
test
jne
mov
mov
push
pushl
mov
call
mov
pop
xor
pop
inc
jmp
xor
pop
pop
leave
ret
push
lea
sub
mov
xor
mov
mov
push
push
xor
push
push
push
push
push
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
call
add
mov
cmp
je
push
push
push
push
push
push
push
push
mov
call
add
mov
cmp
je
mov
push
lea
push
push
call
lea
push
push
lea
push
pushl
mov
push
push
call
add
jmp
mov
add
pushl
pushl
call
pushl
lea
push
mov
add
push
mov
call
mov
push
mov
lea
push
push
call
lea
push
push
lea
push
pushl
mov
push
push
call
add
cmp
ja
pushl
mov
push
push
mov
call
pushl
mov
push
push
call
mov
mov
add
mov
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
push
mov
mov
mov
or
mov
inc
inc
test
jne
mov
mov
cltd
idiv
mov
inc
movsbl
mov
cmp
jl
xor
mov
lea
mov
add
add
and
jns
dec
or
inc
mov
lea
mov
mov
lea
mov
cltd
sub
sar
add
lea
cmp
jl
xor
xor
mov
cmp
jle
jmp
mov
inc
and
jns
dec
or
inc
lea
mov
add
and
jns
dec
or
inc
mov
lea
mov
mov
mov
mov
lea
mov
cltd
sub
mov
mov
sar
add
add
and
jns
dec
or
inc
mov
xor
cltd
push
pop
idiv
push
pop
cltd
idiv
incl
lea
mov
cmp
jl
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movw
movb
mov
xor
inc
cmp
jbe
push
lea
push
push
call
add
push
lea
push
push
call
mov
add
cmp
jne
cmpl
jne
push
pop
push
lea
push
push
call
push
lea
push
push
call
push
lea
push
push
call
mov
mov
lea
mov
lea
push
shr
push
lea
mov
movl
mov
call
mov
push
call
push
mov
push
push
call
add
pushl
push
call
pushl
push
call
lea
push
lea
push
push
push
push
push
push
push
push
push
push
mov
push
mov
call
add
cmp
je
push
push
mov
push
mov
call
add
pushl
mov
pushl
push
push
call
add
cmp
jne
pushl
mov
pushl
push
push
call
add
push
push
push
mov
call
add
xor
inc
cmp
jbe
push
pop
push
mov
push
pushl
mov
pushl
pushl
push
push
call
add
cmp
je
push
push
push
mov
call
add
lea
push
pushl
mov
pushl
pushl
pushl
push
push
call
add
xor
inc
cmp
jbe
movzwl
cmp
jae
mov
imul
add
lea
push
mov
push
push
lea
push
push
push
lea
call
mov
add
lea
push
push
lea
push
call
mov
add
lea
push
pushl
mov
add
push
push
pushl
mov
push
push
call
add
lea
push
pushl
mov
push
lea
push
push
push
lea
call
add
inc
mov
jmp
push
push
push
mov
call
add
lea
push
pushl
mov
push
push
mov
call
add
lea
push
push
lea
push
mov
add
push
pushl
mov
push
push
call
mov
add
add
lea
push
pushl
mov
push
push
mov
call
add
pushl
mov
push
push
call
add
pushl
mov
push
push
mov
call
add
pushl
mov
push
push
call
add
push
push
push
mov
call
add
call
ret
pushl
mov
push
push
mov
call
add
pushl
mov
push
push
call
add
push
pushl
mov
push
push
call
add
jmp
xor
cmp
je
pushl
mov
push
mov
push
mov
call
pushl
mov
push
push
call
push
pushl
mov
push
push
call
add
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
movl
mov
jmp
mov
mov
cltd
inc
idiv
push
pop
mov
cltd
idiv
cmp
jne
mov
mov
shl
add
jmp
incl
mov
mov
cltd
inc
idiv
mov
cltd
sub
sar
sub
mov
mov
xor
mov
incl
mov
cmp
jl
movl
mov
jmp
mov
mov
cltd
inc
idiv
push
pop
mov
cltd
idiv
cmp
jne
mov
mov
mov
lea
mov
jmp
incl
mov
mov
cltd
inc
idiv
push
pop
mov
cltd
idiv
sub
mov
mov
cltd
idiv
mov
incl
mov
cmp
jl
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
pop
mov
lea
rep
movsw
mov
lea
movsl
lea
movsl
mov
lea
push
push
lea
movsl
call
mov
lea
movsl
lea
movsl
mov
lea
push
push
lea
movsb
call
add
lea
push
lea
push
call
push
call
mov
mov
mov
mov
mov
lea
mov
lea
push
push
lea
call
pop
pop
lea
push
lea
push
call
push
call
mov
mov
mov
mov
mov
lea
mov
lea
push
push
lea
call
pop
pop
lea
push
lea
push
call
push
call
mov
pop
xor
mov
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
pop
mov
lea
rep
mov
lea
movsl
movsl
movsl
movsw
push
pop
mov
lea
rep
lea
mov
lea
push
push
lea
movsb
call
lea
mov
lea
push
push
lea
call
add
lea
push
lea
push
call
push
call
push
pop
mov
lea
rep
mov
lea
mov
lea
push
push
lea
movsb
call
pop
pop
lea
push
lea
push
call
push
call
mov
pop
xor
mov
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
pop
mov
lea
rep
movsw
mov
lea
movsl
movsl
movsl
movsw
mov
lea
movsl
lea
movsl
mov
lea
push
push
lea
movsw
call
lea
mov
lea
push
push
lea
call
add
lea
push
lea
push
call
push
call
mov
lea
movsl
mov
lea
movsl
mov
lea
push
push
lea
movsw
call
pop
pop
lea
push
lea
push
call
push
call
mov
lea
movsl
mov
lea
movsl
mov
lea
push
push
lea
movsw
call
pop
lea
pop
push
lea
push
call
push
call
mov
lea
movsl
mov
lea
movsl
mov
lea
push
push
lea
movsw
call
pop
pop
lea
push
lea
push
call
push
call
mov
lea
movsl
movsl
mov
lea
movsw
mov
lea
push
push
lea
movsb
call
pop
pop
lea
push
lea
push
call
push
call
mov
lea
movsl
movsl
mov
lea
movsw
mov
lea
push
push
lea
movsb
call
pop
pop
lea
push
lea
push
call
push
call
mov
pop
xor
mov
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
pop
mov
lea
rep
mov
lea
movsl
movsl
lea
movsl
mov
lea
push
push
lea
movsw
call
pop
pop
lea
push
call
xor
test
setne
mov
pop
pop
mov
mov
xor
call
leave
ret
push
mov
and
sub
mov
xor
mov
andl
push
push
push
mov
push
lea
push
push
call
add
push
lea
push
push
call
add
call
mov
call
call
push
pop
mov
lea
rep
call
test
jne
call
call
call
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
lea
movsl
movsl
lea
movsl
mov
lea
push
push
lea
movsl
call
pop
pop
lea
push
pushl
call
mov
mov
test
jne
call
call
jmp
mov
lea
movsl
movsl
lea
movsl
mov
lea
push
push
lea
movsw
call
pop
pop
lea
push
pushl
call
andl
mov
mov
test
jne
call
call
call
call
call
call
call
call
call
call
jmp
mov
lea
movsl
lea
movsl
mov
lea
push
push
lea
movsl
call
mov
lea
movsl
movsl
movsl
lea
movsl
mov
lea
push
push
lea
movsb
call
add
lea
push
lea
push
call
push
call
mov
test
je
pushl
mov
call
call
call
mov
call
push
call
call
lea
push
push
pop
call
pop
mov
test
je
cmpl
jbe
pushl
lea
push
lea
call
mov
push
push
mov
push
call
mov
add
push
push
push
call
add
cmpl
jne
cmpl
jne
mov
push
push
mov
push
call
add
push
add
push
push
call
add
cmpb
movl
jne
mov
xor
cmp
jbe
movzwl
mov
imul
push
call
pop
mov
mov
cmp
jbe
mov
mov
push
add
push
push
lea
call
mov
add
add
push
push
mov
add
push
call
movzwl
add
incl
add
cmp
jb
jmp
mov
lea
mov
jmp
mov
mov
test
je
movzwl
mov
imul
push
call
xor
pop
mov
mov
cmp
jbe
mov
mov
lea
mov
push
add
push
push
call
mov
add
add
push
push
mov
add
push
call
movzwl
add
incl
add
cmp
jb
add
mov
cmpb
jne
mov
push
call
pop
push
push
push
mov
call
mov
add
add
pushl
push
pushl
call
add
xor
inc
jmp
push
mov
and
sub
mov
push
push
push
xor
push
mov
mov
push
mov
mov
mov
call
cmp
mov
jmp
mov
cmp
jbe
mov
sub
xor
mov
jmp
mov
mov
imul
lea
mov
imul
cmp
jl
cmpb
jne
cmpl
je
cmpl
je
cmpb
jne
mov
call
incl
movb
incl
movzwl
cmp
jb
xor
push
push
push
mov
call
add
push
push
mov
call
mov
movzwl
cmp
pop
pop
ja
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
push
lea
pop
mov
lea
movzwl
push
push
lea
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movb
movl
movl
movl
movw
movl
movl
movl
movb
movl
movl
movl
movb
movl
movl
movl
movw
movb
movl
movl
movl
movb
movl
movl
movl
movl
movb
call
lea
mov
lea
push
push
lea
call
lea
mov
lea
push
push
lea
call
lea
mov
lea
push
push
lea
call
lea
mov
push
lea
push
lea
call
lea
mov
lea
push
push
lea
call
lea
mov
lea
push
push
lea
call
add
push
push
push
call
mov
test
jne
xor
jmp
push
push
lea
push
push
lea
call
mov
add
test
je
push
push
call
test
je
push
call
mov
test
je
push
call
mov
mov
mov
mov
pop
xor
pop
call
add
leave
ret
push
mov
sub
push
push
push
mov
xor
mov
push
mov
mov
mov
mov
call
pop
push
mov
push
push
mov
call
add
cmpb
lea
push
jne
lea
push
call
pop
mov
call
movl
push
mov
call
push
push
mov
call
pop
pop
push
push
call
push
push
push
call
add
push
push
call
push
push
push
call
add
jmp
mov
call
pop
mov
movzbl
dec
je
dec
je
dec
dec
je
dec
jne
pushl
lea
lea
push
call
pushl
lea
push
lea
call
add
jmp
pushl
lea
push
lea
call
pop
pop
pushl
test
je
call
pop
pushl
mov
pushl
push
call
add
pushl
lea
push
lea
call
pop
pop
movzbl
xor
sub
je
dec
jne
movzbl
sub
je
dec
je
dec
je
dec
jne
cmp
je
cmp
je
lea
push
call
pop
jmp
pushl
lea
push
lea
call
pop
pop
test
je
pushl
call
pop
pushl
mov
pushl
push
call
add
jmp
cmp
je
cmp
je
movzbl
push
add
push
call
push
jmp
cmp
je
cmp
je
call
mov
push
call
pop
test
je
movzbl
push
add
push
push
jmp
cmp
je
cmp
je
push
call
pop
push
push
call
push
push
call
push
lea
lea
call
cmpl
pop
je
mov
cmp
je
jmp
mov
push
push
push
call
mov
add
pushl
push
call
push
push
call
push
call
pop
test
jne
dec
cmp
jg
jmp
movzbl
push
add
push
push
mov
call
add
jmp
movzbl
dec
mov
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
lea
push
call
pop
push
push
call
push
call
pop
test
jne
push
push
push
push
push
mov
call
add
jmp
call
jmp
push
jmp
push
call
pop
push
push
call
push
jmp
push
jmp
push
jmp
push
call
pop
push
push
call
lea
push
push
call
movzbl
push
push
pushl
pushl
push
call
add
test
je
push
call
pop
test
je
cmpb
je
movzbl
push
xor
push
lea
push
push
push
push
push
push
mov
call
add
movzbl
dec
je
dec
je
dec
jne
push
call
pop
mov
push
mov
push
push
call
add
push
push
call
push
push
call
push
push
call
push
call
pop
push
push
push
push
call
add
jmp
push
push
mov
call
push
push
push
push
jmp
push
push
mov
call
push
push
push
push
call
add
pop
pop
pop
leave
ret
call
test
je
push
push
xor
push
push
mov
call
xor
pop
inc
pop
cmp
je
push
push
push
mov
call
add
test
jne
cmp
je
call
test
je
push
push
cmp
je
call
test
jne
call
test
jne
call
test
jne
call
test
jne
cmp
je
call
test
jne
call
test
jne
call
test
jne
call
test
jne
call
test
jne
call
test
jne
cmp
je
call
test
jne
call
test
jne
call
test
jne
call
test
jne
cmp
je
call
test
jne
cmp
je
call
test
jne
cmp
je
mov
cmp
jbe
xor
xor
cmp
jae
movzwl
imul
add
movzbl
dec
je
dec
je
dec
je
dec
jne
inc
push
push
push
mov
call
add
jmp
push
lea
call
pop
jmp
push
jmp
lea
call
test
jne
inc
cmp
jb
push
push
movzwl
push
call
add
call
mov
movzbl
dec
je
dec
je
dec
jne
mov
push
call
push
mov
push
push
call
add
push
push
call
push
push
call
push
push
call
push
push
push
push
call
xor
add
inc
jmp
cmp
je
movzbl
movzbl
inc
shl
add
push
push
push
push
push
push
mov
call
add
cmp
je
movzbl
sub
je
dec
je
dec
jne
push
push
jmp
push
push
mov
call
push
push
push
push
jmp
push
push
mov
call
push
push
push
push
call
add
cmp
je
push
push
call
pop
push
call
mov
mov
cmp
jne
push
call
pop
test
je
push
push
push
mov
call
add
push
push
jmp
cmp
jne
push
push
pushl
call
push
pushl
push
call
add
cmp
je
call
pop
pop
push
push
mov
call
pop
pop
pop
pop
xor
ret
cmp
jne
repz
jmp
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
inc
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
dec
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
rorb
in
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pusha
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
movsb
dec
inc
add
dec
inc
add
dec
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ja
inc
add
add
add
add
add
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
dec
inc
add
dec
inc
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
xor
add
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
rorb
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
push
push
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
mov
mov
push
push
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
add
add
sub
cmp
jae
add
add
cmp
ja
jmp
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
xor
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
jmp
xor
pop
pop
pop
ret
mov
pushf
push
inc
add
inc
add
pop
inc
add
bound
and
add
pop
inc
add
popa
inc
add
pop
inc
add
pop
inc
add
popa
inc
add
push
inc
add
pop
inc
add
pusha
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
inc
add
push
inc
add
pop
inc
add
pop
inc
add
push
inc
add
inc
add
inc
add
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
call
mov
test
je
call
jmp
push
push
call
pushl
call
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
int3
push
call
mov
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
mov
push
mov
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
leave
ret
pop
pop
xchg
jmp
mov
push
mov
push
push
push
push
push
mov
mov
movl
push
pushl
pushl
pushl
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
mov
mov
pop
ret
mov
push
mov
push
cld
mov
mov
xor
call
push
push
pushl
pushl
push
pushl
pushl
pushl
call
add
pop
pop
ret
mov
push
mov
sub
push
cmpl
jne
mov
mov
mov
xor
inc
jmp
andl
movl
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
andl
mov
mov
mov
mov
lea
mov
movl
mov
mov
mov
mov
call
mov
mov
lea
push
mov
pushl
call
pop
pop
andl
cmpl
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
leave
ret
mov
push
mov
push
push
cld
mov
mov
xor
call
mov
mov
and
je
mov
movl
xor
inc
jmp
jmp
push
mov
pushl
mov
pushl
mov
pushl
push
pushl
mov
pushl
pushl
call
add
mov
cmpl
jne
pushl
pushl
call
push
push
push
push
push
lea
push
push
call
add
mov
mov
mov
mov
jmp
xor
inc
pop
leave
ret
mov
push
mov
push
push
push
push
mov
mov
mov
mov
mov
jmp
cmp
jne
call
mov
dec
mov
imul
add
cmp
jge
cmp
jle
cmp
jne
decl
mov
mov
cmpl
jge
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
mov
imul
add
pop
pop
pop
leave
ret
mov
push
mov
mov
push
mov
mov
call
mov
mov
call
mov
mov
pop
pop
ret
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
test
jne
inc
pop
ret
xor
pop
ret
mov
push
mov
push
call
mov
cmp
jne
call
mov
mov
pop
pop
ret
call
mov
jmp
mov
cmp
je
mov
cmpl
jne
pop
pop
jmp
mov
mov
jmp
mov
push
mov
sub
mov
andl
lea
xor
mov
mov
mov
mov
mov
inc
movl
mov
mov
mov
mov
lea
mov
pushl
push
pushl
call
mov
mov
mov
mov
leave
ret
push
pushl
lea
sub
push
push
push
mov
mov
mov
xor
push
mov
pushl
movl
lea
mov
ret
push
pushl
lea
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
pushl
movl
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
mov
xor
call
jmp
movl
jmp
mov
push
mov
push
mov
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
test
je
lea
cmpb
je
mov
mov
cmp
je
add
push
push
call
pop
pop
test
je
xor
jmp
testb
je
testb
je
mov
mov
test
je
testb
je
test
je
testb
je
xor
inc
pop
pop
pop
ret
mov
push
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
call
andl
jmp
call
cmpl
jle
call
decl
xor
pop
ret
push
push
call
mov
mov
cmpl
jg
movsbl
jmp
mov
mov
call
incl
andl
cmp
je
cmp
jle
cmp
jl
call
mov
mov
mov
mov
movl
cmpl
je
mov
push
push
mov
pushl
call
andl
jmp
pushl
call
pop
ret
mov
andl
mov
mov
mov
mov
jmp
movl
call
cmp
je
call
mov
call
ret
mov
mov
call
cmpl
jle
call
decl
ret
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
jne
cmpl
jne
call
xor
inc
mov
mov
ret
xor
ret
push
push
call
mov
test
je
cmpl
jne
mov
test
je
mov
test
je
andl
push
pushl
call
movl
call
ret
xor
cmp
setne
ret
mov
call
int3
mov
push
mov
mov
mov
push
mov
add
cmpl
jl
mov
mov
mov
mov
add
add
pop
pop
ret
mov
push
mov
sub
test
jne
call
call
andl
cmpl
movb
jle
push
push
mov
mov
mov
mov
lea
test
jle
mov
shl
mov
mov
pushl
mov
push
mov
add
push
call
add
test
jne
dec
add
test
jg
jmp
movb
incl
mov
cmp
jl
pop
pop
mov
leave
ret
push
mov
call
call
cmpl
je
call
andl
call
orl
call
call
mov
push
push
mov
call
int3
push
push
call
mov
mov
mov
mov
andl
mov
mov
pushl
lea
push
call
pop
pop
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
andl
xor
inc
mov
mov
pushl
pushl
push
pushl
push
call
add
mov
andl
jmp
mov
call
ret
mov
call
andl
mov
mov
cmpl
jg
movsbl
jmp
mov
mov
andl
mov
cmp
jae
imul
mov
cmp
jle
cmp
jg
mov
mov
push
push
push
push
call
add
andl
andl
mov
movl
movl
call
mov
call
ret
incl
jmp
mov
mov
mov
mov
pushl
call
pop
call
mov
mov
call
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
jne
cmpl
jne
cmpl
je
pushl
call
pop
test
je
pushl
push
call
pop
pop
ret
push
push
call
xor
mov
mov
mov
cmp
je
cmp
je
mov
cmp
jne
testl
je
mov
mov
test
js
lea
mov
xor
inc
push
test
je
mov
pushl
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
mov
add
push
push
call
pop
pop
mov
jmp
mov
mov
pushl
test
je
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
mov
pushl
push
call
add
cmpl
jne
mov
test
je
add
push
jmp
cmp
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
add
push
mov
pushl
call
pop
pop
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
call
pop
test
je
testb
push
pop
setne
inc
mov
jmp
call
movl
mov
jmp
xor
inc
ret
mov
call
xor
call
ret
push
push
call
mov
testl
je
mov
jmp
mov
mov
lea
andl
mov
push
push
pushl
mov
push
call
add
dec
je
dec
jne
push
lea
push
pushl
call
pop
pop
push
pushl
push
call
jmp
lea
push
pushl
call
pop
pop
push
pushl
push
call
movl
call
ret
xor
inc
ret
mov
call
int3
mov
push
mov
cmpl
je
pushl
push
push
pushl
call
add
cmpl
pushl
jne
push
jmp
pushl
call
pushl
pushl
pushl
push
call
mov
push
pushl
inc
pushl
mov
pushl
mov
push
pushl
call
add
test
je
push
push
call
pop
ret
mov
push
mov
sub
push
mov
cmpl
je
push
call
cmpl
je
call
lea
call
cmp
je
mov
cmp
je
cmp
je
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
test
jne
mov
cmpl
jne
call
mov
lea
push
lea
push
push
pushl
push
call
mov
add
cmp
jae
add
mov
push
lea
cmp
jl
cmp
jg
mov
shl
add
mov
test
je
cmpb
jne
lea
testb
jne
pushl
mov
pushl
push
pushl
pushl
pushl
pushl
call
mov
mov
add
incl
mov
add
mov
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
mov
push
push
movb
cmp
jg
movsbl
jmp
mov
mov
cmp
jl
cmp
jl
call
mov
mov
cmp
jne
cmpl
mov
jne
mov
cmp
je
cmp
je
cmp
jne
cmpl
jne
call
cmpl
je
call
mov
mov
call
mov
push
push
mov
call
pop
pop
test
jne
call
cmp
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
jne
cmpl
jne
call
call
cmpl
je
call
mov
call
pushl
xor
mov
call
pop
test
jne
xor
cmp
jle
mov
mov
push
call
test
jne
inc
add
cmp
jl
call
push
pushl
call
pop
pop
lea
push
lea
movl
call
push
lea
push
movl
call
mov
mov
cmp
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
jne
mov
cmpl
jbe
lea
push
lea
push
pushl
pushl
push
call
mov
add
cmp
jae
lea
mov
mov
lea
mov
cmp
jg
cmp
jg
mov
mov
mov
mov
test
jle
mov
mov
lea
mov
mov
test
jle
pushl
mov
push
pushl
mov
call
add
test
jne
decl
add
cmp
jg
decl
addl
cmpl
jg
jmp
pushl
mov
pushl
mov
pushl
movb
pushl
pushl
pushl
push
mov
call
mov
mov
add
incl
mov
add
mov
cmp
jb
mov
cmpb
je
push
push
call
pop
pop
cmpb
jne
mov
and
cmp
jb
mov
test
je
push
call
pop
test
jne
call
call
call
mov
call
cmpl
mov
mov
push
jne
pushl
jmp
pushl
call
mov
push
push
pushl
pushl
call
add
pushl
call
mov
cmpl
jbe
cmpb
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
push
call
add
call
cmpl
je
call
pop
pop
pop
leave
ret
mov
push
mov
push
pushl
mov
call
movl
mov
pop
pop
ret
mov
push
mov
push
push
push
call
cmpl
mov
mov
mov
mov
mov
jne
mov
cmp
je
cmp
je
mov
and
cmp
jb
testb
jne
testb
je
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
add
jmp
cmpl
jne
mov
and
cmp
jb
cmpl
je
cmp
jne
cmpl
jb
cmp
jbe
mov
mov
test
je
movzbl
push
pushl
pushl
push
pushl
pushl
pushl
push
call
add
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
push
call
add
xor
inc
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
pushl
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
mov
test
jne
mov
ret
mov
push
mov
cmpl
push
mov
je
push
pushl
call
lea
push
call
pop
pop
mov
test
je
pushl
push
push
call
add
movb
pop
pop
pop
ret
mov
push
mov
cmpb
je
pushl
call
pop
andl
movb
pop
ret
mov
push
mov
mov
push
mov
andl
movl
movb
pushl
call
mov
pop
pop
ret
mov
push
mov
push
mov
push
mov
cmp
je
call
cmpb
je
pushl
mov
call
jmp
mov
mov
mov
pop
pop
pop
ret
movl
jmp
mov
push
mov
push
mov
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
pushl
mov
andl
movl
movb
call
mov
pop
pop
ret
mov
push
movl
call
pop
ret
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
add
push
add
push
call
neg
pop
sbb
pop
inc
pop
ret
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
pop
mov
pop
test
je
testb
je
movl
lea
push
pushl
pushl
pushl
call
leave
ret
mov
push
mov
xor
inc
cmpl
jne
xor
pop
ret
push
push
call
push
call
pop
andl
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
pushl
call
pop
andl
movl
call
call
ret
mov
jmp
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
insb
lock
pop
lock
dec
lock
lock
xor
add
and
add
or
add
cli
out
add
add
add
in
add
fsubr
add
int3
out
add
ret
add
out
add
cwtl
out
add
mov
add
jle
add
insb
out
add
pop
out
add
push
out
add
inc
out
add
add
add
mov
repz
xchg
add
jo
add
pusha
repz
inc
repz
repz
sbb
add
or
add
lock
out
add
fdiv
add
lret
add
repnz
cwtl
repnz
jo
add
pop
repnz
repnz
adc
add
icebp
add
repnz
add
loop
add
aam
add
mov
icebp
add
mov
icebp
add
test
add
jo
add
push
icebp
add
inc
icebp
add
and
add
push
icebp
add
xacquire
loopne
add
lret
add
repz
loopne
add
in
repz
div
add
add
add
adc
add
sbb
add
sub
add
xor
add
inc
in
add
inc
hlt
add
pop
hlt
add
insb
hlt
add
xor
add
sbb
add
or
add
clc
in
add
call
in
add
mov
in
add
lcall
add
add
data16
add
push
in
add
inc
repnz
mov
add
lcall
add
add
add
out
add
sbb
add
add
add
imul
add
call
out
add
lret
add
out
add
lcall
add
add
insb
out
add
pop
out
add
dec
out
add
cmp
add
sub
add
sbb
add
push
out
add
add
add
out
in
add
in
add
shr
add
add
mov
add
jp
add
insb
in
add
pop
in
add
push
in
add
shrb
ja
inc
add
jo
add
or
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
inc
add
add
add
lret
or
add
ror
add
add
add
inc
add
add
add
leave
inc
add
add
add
enter
add
add
inc
add
add
add
enter
add
add
add
add
inc
add
add
add
movb
add
add
add
add
movb
add
add
lds
pop
add
add
lds
and
add
rol
add
add
add
ret
js
add
mov
inc
add
add
xchg
ret
jp
add
js
inc
add
add
add
inc
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
ja
dec
jo
outsb
add
add
inc
insb
outsl
jae
add
add
outsb
and
jb
jae
popa
arpl
add
jbe
and
jb
jae
popa
arpl
add
outsl
jae
and
jb
jae
popa
arpl
push
popa
jbe
add
add
push
popa
jbe
and
add
jbe
and
insb
add
add
inc
js
je
add
add
add
add
dec
add
add
add
add
inc
add
add
add
add
jo
add
and
push
add
jb
imul
add
popa
add
add
add
add
popa
add
add
add
outsl
add
imul
add
popa
add
add
add
add
insb
add
jae
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
add
add
add
popa
add
add
add
jae
add
push
add
jbe
add
add
insb
add
add
add
js
imul
add
inc
push
cmp
xor
inc
ss
xor
push
push
inc
pop
popa
je
push
imul
pop
pop
imul
inc
outsl
outsl
imul
jne
dec
jo
dec
imul
add
jb
push
push
arpl
push
ja
dec
xor
aaa
push
inc
jns
jno
arpl
push
dec
inc
push
push
dec
dec
insl
insl
cmp
dec
ja
dec
data16
imul
inc
xor
jns
xor
pop
push
jb
add
add
push
push
push
push
push
add
add
add
add
add
add
push
outsb
cmp
inc
dec
je
cmp
fs
je
push
dec
push
outsl
pop
imul
aaa
dec
inc
jbe
imul
cmp
push
arpl
add
leave
out
jb
cmp
add
loop
jle
sub
mov
add
add
loop
js
sub
jle
sub
dec
inc
inc
je
inc
dec
inc
jo
push
push
jns
push
cmp
ja
inc
inc
inc
jae
inc
inc
push
add
lds
lret
add
ljmp
mov
jb
cmp
add
add
rclb
cmpsb
cltd
add
addr16
add
push
dec
inc
jno
jb
inc
dec
imul
outsl
push
outsb
imul
push
ss
push
xor
ja
jns
jae
xor
add
or
shlb
mov
mov
mov
add
jg
sub
mov
add
or
sub
mov
add
or
sub
mov
add
or
sub
test
add
or
sub
test
add
or
sub
mov
ljmp
imul
dec
xor
push
xor
cmp
jne
insb
ss
jae
push
pop
js
dec
outsl
xor
addr16
jno
dec
imul
xchg
ds
lods
cltd
sbb
pop
add
add
adcl
cltd
add
add
xchg
gs
xchg
loop
push
in
add
add
nop
jae
pusha
lods
sub
aam
insl
sub
mov
js
ficoms
add
add
ja
bound
add
add
sub
add
popa
add
add
add
jmp
in
add
test
add
inc
add
and
arpl
je
outsl
outsb
add
add
inc
add
mov
add
inc
add
imul
outsb
and
arpl
je
outsl
outsb
add
add
inc
add
insl
loopne
add
add
add
add
add
add
add
add
and
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
outsl
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outsb
popa
gs
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
insl
imul
imul
jne
je
jb
outsw
jb
daa
add
add
pusha
fs
popa
insl
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outsb
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
insl
popa
outsb
popa
gs
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
cmp
fs
gs
add
outsb
gs
add
add
jne
popa
insb
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
gs
bound
add
arpl
popa
insb
insb
add
add
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
inc
add
loop
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
loop
add
int3
inc
add
loop
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loop
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
loope
add
inc
add
loope
add
loopne
add
loopne
add
loopne
add
inc
add
add
loopne
add
inc
add
filds
filds
test
inc
add
filds
mov
inc
add
add
inc
add
inc
add
add
inc
add
filds
clc
fiadds
rcr
inc
add
fiadds
push
fiadds
cmp
inc
add
inc
add
fldl
fldl
cwtl
fldl
jl
inc
add
int3
inc
add
inc
add
add
fldl
sbb
inc
add
faddl
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
add
add
inc
add
in
add
add
add
or
add
inc
add
add
add
inc
add
add
adc
inc
add
add
add
add
add
incl
add
add
add
add
inc
add
or
incl
add
add
add
pop
in
add
add
add
inc
add
add
xor
inc
add
inc
add
inc
add
add
add
add
add
add
add
in
add
add
add
inc
add
incl
add
add
add
cwtl
in
add
add
add
cwtl
add
lock
add
aas
cmpsb
add
sarl
add
and
add
incl
add
add
add
add
ljmp
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
insb
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
jns
add
incl
add
add
jns
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
addl
incl
add
add
incl
add
add
decl
addl
incl
add
add
incl
add
add
filds
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
addl
add
add
incl
add
add
incl
add
add
incl
add
add
xchg
add
add
incl
add
add
incl
add
add
cmp
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
cwtl
inc
add
add
push
sub
incl
add
add
incl
add
add
add
add
add
add
xchg
sbb
add
add
add
int3
out
add
add
add
add
add
incl
add
add
incl
add
add
call
and
aad
inc
add
add
shlb
inc
add
incl
add
add
incl
add
add
add
add
add
add
inc
add
add
add
xor
inc
add
add
add
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
inc
stos
inc
add
inc
add
incl
add
add
incl
add
add
ljmp
inc
add
add
add
lods
inc
add
incl
add
add
incl
add
add
add
add
add
add
call
xchg
sbb
add
add
call
add
in
inc
add
add
add
add
add
incl
add
add
add
incl
add
add
inc
add
add
add
lods
inc
add
incl
add
add
incl
add
add
pushl
scas
inc
add
scas
inc
add
add
add
incl
add
add
incl
add
add
dec
scas
inc
add
scas
inc
add
add
add
test
add
add
add
add
mov
jmp
add
adc
inc
add
add
add
incl
add
add
add
ret
add
add
add
or
add
add
incl
add
add
add
adc
incl
add
add
incl
add
add
incl
add
add
mov
add
inc
in
add
pop
rolb
enter
ss
add
jo
add
jl
add
lock
add
and
add
pop
ljmp
add
add
xor
add
rolb
insb
lock
pop
lock
dec
lock
lock
xor
add
and
add
or
add
cli
out
add
add
add
in
add
fsubr
add
int3
out
add
ret
add
out
add
cwtl
out
add
mov
add
jle
add
insb
out
add
pop
out
add
push
out
add
inc
out
add
add
add
mov
repz
xchg
add
jo
add
pusha
repz
inc
repz
repz
sbb
add
or
add
lock
out
add
fdiv
add
lret
add
repnz
cwtl
repnz
jo
add
pop
repnz
repnz
adc
add
icebp
add
repnz
add
loop
add
aam
add
mov
icebp
add
mov
icebp
add
test
add
jo
add
push
icebp
add
inc
icebp
add
and
add
push
icebp
add
xacquire
loopne
add
lret
add
repz
loopne
add
in
repz
div
add
add
add
adc
add
sbb
add
sub
add
xor
add
inc
in
add
inc
hlt
add
pop
hlt
add
insb
hlt
add
xor
add
sbb
add
or
add
clc
in
add
call
in
add
mov
in
add
lcall
add
add
data16
add
push
in
add
inc
repnz
mov
add
lcall
add
add
add
out
add
sbb
add
add
add
imul
add
call
out
add
lret
add
out
add
lcall
add
add
insb
out
add
pop
out
add
dec
out
add
cmp
add
sub
add
sbb
add
push
out
add
add
add
out
in
add
in
add
shr
add
add
mov
add
jp
add
insb
in
add
pop
in
add
push
in
add
add
add
enter
je
popa
je
inc
outsl
jb
popa
je
add
dec
add
outsb
fs
gs
jne
arpl
add
inc
jb
gs
gs
jne
arpl
add
dec
outsl
popa
fs
gs
jne
arpl
add
add
je
jne
jb
outsb
je
jb
arpl
jae
movb
gs
popa
je
inc
outsl
jb
popa
je
add
push
add
je
jb
arpl
jae
imul
inc
imul
outsl
push
jns
je
insl
push
imul
inc
gs
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
push
add
imul
outsl
jne
arpl
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
ja
inc
gs
jns
je
insl
push
imul
dec
inc
dec
xor
cs
insb
add
push
add
jo
push
arpl
das
add
imul
je
jo
add
add
outsb
fs
imul
movsb
add
je
outsl
jns
outsb
jne
add
inc
fs
jae
push
imul
arpl
fadds
inc
outsb
popa
bound
imul
jle
inc
gs
jns
je
insl
dec
gs
imul
inc
imul
push
imul
jae
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
gs
imul
jae
add
inc
jb
popa
je
inc
popa
jb
je
or
inc
jo
outsb
fs
outsb
jne
add
add
fs
imul
add
gs
je
push
outsl
jo
jo
outsb
jne
and
inc
gs
jne
jae
jb
outsl
jae
add
inc
gs
jns
inc
outsl
insb
outsl
jb
fwait
add
push
imul
outsl
arpl
add
push
gs
gs
jae
inc
inc
add
add
jo
outsb
fs
outsb
jne
add
add
arpl
outsl
jo
jo
outsb
jne
js
add
push
jns
inc
outsl
insb
outsl
jb
add
std
add
imul
outsl
ja
jo
popa
je
add
flds
push
push
jb
je
xchg
add
je
outsl
arpl
add
faddl
dec
jae
imul
popa
bound
add
add
fs
imul
add
je
outsl
arpl
add
xchg
add
je
outsl
jb
addr16
jne
fs
imul
add
je
imul
add
imul
arpl
push
inc
push
xor
cs
insb
add
aaa
add
je
gs
dec
jne
inc
add
inc
gs
imul
add
je
gs
inc
insb
imul
inc
gs
gs
dec
gs
imul
push
gs
popa
jo
outsl
fs
fwait
add
je
imul
add
je
outsb
inc
outsl
js
mov
push
je
gs
push
add
push
gs
inc
outsl
insb
outsl
jb
add
add
gs
outsl
add
in
add
je
popa
jns
jne
add
dec
popa
jns
jne
add
add
jbe
push
outsl
inc
js
add
dec
xor
cs
insb
add
inc
gs
jae
jb
popa
insl
gs
add
mov
dec
outsl
outsl
imul
arpl
jne
je
popa
insl
gs
add
and
inc
gs
arpl
outsw
jb
popa
je
outsl
outsb
add
add
je
arpl
add
dec
outsb
imul
inc
arpl
add
push
popa
insb
imul
add
je
jae
jb
popa
insl
gs
add
das
add
je
imul
imul
push
inc
push
dec
xor
cs
insb
add
lret
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
gs
insb
insb
outsl
arpl
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
gs
imul
outsl
arpl
jae
add
add
outsb
push
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
inc
js
je
jb
arpl
jae
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
int
dec
gs
jo
jb
popa
je
add
ljmp
gs
outsl
imul
add
popa
jo
jb
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
jmp
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
xchg
add
je
imul
je
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
insb
gs
sbb
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
mov
push
popa
imul
jo
.byte
outsl
outsb
add
add
dec
out
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
or
inc
add
lcall
or
inc
add
lcall
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
hlt
rolb
lock
in
rolb
call
rolb
loopne
inc
add
rolb
aam
inc
add
rolb
rolb
mov
rolb
movsb
rolb
cwtl
rolb
xchg
rolb
nop
rolb
mov
inc
add
rolb
adc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
rolb
sbb
inc
add
inc
add
rolb
cld
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
add
add
add
add
add
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
inc
add
add
into
inc
add
inc
add
add
add
inc
add
into
inc
add
inc
add
into
inc
add
into
inc
add
int
add
int
add
inc
add
add
add
add
add
or
cmp
inc
add
or
cmp
inc
add
or
add
add
add
add
mov
add
add
add
add
roll
adc
add
fadds
inc
or
test
inc
add
add
add
ljmp
add
add
add
add
sbb
add
inc
add
sbb
add
inc
add
sbb
add
inc
add
sbb
add
inc
add
sbb
jg
jg
jg
jg
pushf
or
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
roll
cli
roll
add
add
and
add
fcomp
inc
add
add
add
aas
inc
push
bound
pop
gs
gs
imul
inc
inc
add
faddl
add
add
cs
inc
push
gs
gs
imul
inc
inc
add
add
add
faddl
add
add
cs
inc
push
je
jo
pop
imul
cld
roll
add
add
add
add
add
add
add
pop
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbbb
add
call
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
jle
add
cmp
add
add
add
add
add
add
add
or
add
push
add
addb
add
pop
add
add
add
addb
addb
add
add
add
add
add
add
add
jl
add
cwtl
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
jnp
add
loopne
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
xchg
aaa
add
aam
add
push
xor
add
add
and
add
in
add
add
add
mov
add
add
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
clc
decl
clc
decl
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
clc
div
add
jg
clc
divl
add
ja
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rorb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
mov
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
clc
clc
jg
jo
add
pop
clc
clc
jg
add
add
pop
clc
clc
js
add
add
pop
clc
clc
pushl
add
add
pop
clc
clc
pushl
add
add
pop
ja
ja
ja
ja
ja
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
jmp
add
incl
add
incl
add
add
add
add
or
addb
add
add
cmp
mov
add
add
inc
add
outsl
add
je
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
incl
add
add
push
add
mov
add
add
add
incl
add
arpl
add
add
add
outsb
add
insb
add
jae
push
add
outsb
add
je
add
add
je
popa
add
add
sub
add
add
add
jle
lods
xor
and
std
ja
push
bound
pushf
xor
jmp
xor
dec
lcall
or
sub
jge
outsl
arpl
pop
pop
shrb
shll
test
inc
lcall
jle
rol
dec
or
clc
call
push
mov
jne
mov
xchg
lock
imul
mov
mov
aad
imul
sub
mov
call
or
ds
std
aad
addr16
rcrb
or
mov
addr16
cmp
insl
pop
and
add
in
ret
adc
ja
addr16
ja
or
aam
adc
inc
pop
andl
mov
lods
xor
leave
aas
or
sahf
push
lcall
lcall
hlt
inc
idivb
testb
inc
sahf
sbb
ret
cli
mov
push
enter
stc
xor
jno
push
sub
mov
in
cmp
xor
dec
jmp
out
and
das
xchg
insb
lds
fwait
enter
jecxz
dec
push
imul
lret
jb
push
sbb
pop
je
dec
add
jge
stos
xor
pop
sub
popf
ja
out
add
movsl
mov
mov
cld
pop
mov
push
nop
imul
jmp
mov
enter
cli
xor
adc
cmc
sub
test
xlat
aaa
jne
sahf
fadds
jo
out
jnp
fcoml
xchg
push
jp
stc
cmp
lds
xlat
push
push
pop
test
sbb
dec
sbbl
dec
mov
shrb
stos
insl
faddl
lret
mov
add
adc
aas
xor
mov
addl
in
dec
das
cmp
pop
pop
or
inc
sbb
xor
sub
pop
shlb
mov
int3
popa
es
fldcw
sbb
or
ljmp
mov
xchg
mov
out
jae
mov
cmpsl
inc
imul
mov
cmp
cmp
stos
jae
fs
and
and
sbb
cmc
stos
je
das
repnz
pop
call
bound
pop
jp
stc
push
shrb
std
adc
or
insb
out
mov
ds
or
cmp
push
pop
dec
add
fmull
or
mov
daa
in
or
cwtl
xchg
push
mov
adc
pusha
pop
out
cmp
out
xor
mov
sub
dec
push
lcall
fidivs
pop
and
jo
push
je
orb
daa
subb
and
adc
xor
jmp
push
pop
mov
cli
sbb
pop
ficoml
pushf
xor
inc
xchg
ret
sbb
fsub
and
xor
aam
cli
sbb
push
adc
mov
cmp
dec
pop
pop
mov
and
mov
hlt
ljmp
in
push
fwait
stc
ja
test
mov
or
ss
lds
ljmp
pushf
xor
fisttps
dec
or
mov
cmp
clc
test
inc
pop
aaa
dec
out
push
or
push
loop
das
jle
push
push
cmp
adc
dec
std
xchg
cmc
push
hlt
in
jl
add
cmpsb
ja
or
push
or
mov
mov
mov
xor
pop
ret
add
sbb
pop
fistpll
in
cmc
popf
jp
xchg
fdivrl
adc
cltd
sbb
and
push
adc
enter
mov
cwtl
addr16
lcall
cmp
sbb
test
std
xchg
imul
ljmp
xlat
stos
in
lods
sbb
xchg
xorb
lods
pop
or
dec
lock
dec
pop
std
dec
pop
ljmp
je
lods
xchg
test
jns
push
insl
das
int
mov
std
ds
dec
ss
scas
lcall
iret
xorl
movl
mov
or
push
insb
inc
or
mov
stc
xor
iret
mov
cs
int
hlt
fnsave
inc
fildl
out
xchg
fcoms
sub
mov
les
fwait
test
xchg
jp
dec
cs
xor
mov
pop
jne
mov
fnstcw
xchg
ffree
js
popf
adc
jne
push
lcall
xchg
shll
or
and
push
imul
xor
mov
add
pop
fistpll
subl
jne
add
loope
jo
imul
lea
sahf
xor
mov
dec
insl
hlt
push
bound
mov
inc
sub
enter
cmpsl
insl
xor
call
jg,pn
mov
jo
xchg
xor
mov
xchg
dec
popf
sub
mov
jp
lock
fstl
mov
lea
or
xchg
mov
sub
or
jmp
jo
push
fsts
cmp
inc
add
imul
mov
leave
rorb
scas
xor
sti
cmp
push
sbb
loopne
cli
ljmp
aam
mov
loopne
cli
push
std
leave
adc
push
cmp
cwtl
mov
pop
and
add
lcall
mov
jnp
hlt
xchg
xor
dec
sub
pop
pop
fs
jnp
mov
inc
cmp
lret
jae
stos
push
push
and
loope
in
xlat
shr
cwtl
push
push
cmp
jae
xchg
add
push
repnz
lock
lods
push
insb
or
ficoms
jb
pushf
adc
ljmp
jp
shll
add
push
pop
cmp
inc
and
xor
xchg
adcb
std
pop
insl
xchg
pop
sbb
bound
imul
pop
in
mov
leave
adc
andl
shr
fld
mov
rcll
pushf
mov
push
push
mov
ljmp
ret
dec
movsb
mov
je
lods
xor
fs
loope
xor
mov
aas
scas
fbld
je
int3
aaa
mov
push
jbe
sub
sbb
iret
xchg
xchg
lock
insb
bnd
jle
xchg
xchg
adc
imul
lret
pop
add
jbe
xchg
add
nop
into
test
and
into
dec
mov
addr16
bound
rol
ljmp
mov
out
lahf
pusha
ret
xchg
popa
inc
xchg
jl
mov
test
lock
sub
aaa
dec
pop
xchg
or
cwtl
inc
ret
mov
mov
inc
sahf
ljmp
out
bound
aaa
or
movsb
int3
lret
inc
cmpsb
pop
test
xor
xlat
stos
mov
inc
popa
cmp
mov
xchg
sbb
in
sbb
dec
jle
jl
rclb
pop
data16
sub
scas
sbb
fld
xor
pop
jmp
mov
push
mov
in
ds
inc
pop
fimull
push
lcall
aaa
sub
xchg
lret
jp
lret
and
cmp
sarb
dec
insb
cmpsl
scas
fstps
aas
loopne
mov
shrb
push
in
push
repnz
lds
lds
pop
cmp
lahf
jnp
pop
decb
std
jnp
imul
push
pop
sub
iret
cmpsb
sarb
sti
ss
pop
cmp
adc
jecxz
mov
neg
je
dec
mov
mov
leave
mov
decl
cmpsl
xchg
pop
fnsave
sub
sub
fld
or
push
mov
xor
mov
addr16
cwtl
repnz
sub
add
pushf
test
xchg
movsb
ret
sti
xor
lods
cwtl
mov
cltd
jne
push
push
cltd
cmp
jp
outsw
pop
les
push
xchg
repz
fistpl
inc
lret
sbb
aaa
loope
xor
hlt
sub
fwait
psrld
ja
das
aam
dec
inc
clc
int
sti
xchg
sbb
fnstcw
sbb
out
fcoml
mov
pop
jnp
in
stos
shlb
lea
pop
addb
push
mov
and
mov
aaa
add
pop
out
seta
mov
mov
mov
mov
les
pop
xchg
shll
fstpt
mov
lods
in
add
inc
out
andl
jp
add
sub
mov
push
loop
cli
addr16
pop
ret
std
pop
xor
sbb
cltd
cmc
xchg
push
mov
mov
inc
mov
ss
mov
pop
imul
jb
xlat
jle
cmpsb
sarb
ss
mov
push
xorb
and
aad
and
enter
call
in
stos
dec
dec
repz
sbb
and
jg
xchg
mov
es
shlb
data16
pop
outsl
cmp
insl
fcom
add
jmp
sahf
push
inc
cmpsb
cmp
popa
xchg
mov
xchg
mov
loopne
jb
imul
add
adc
sub
push
in
lds
mov
lea
movb
mov
adcb
jmp
aam
popa
rcl
xchg
addb
aaa
gs
jo
andb
mov
fidivrs
ret
pusha
ret
cli
pusha
flds
cmpb
insl
clc
test
sub
icebp
in
fmul
adc
setge
arpl
shlb
dec
pop
inc
stos
and
push
inc
pop
mov
nop
loop
cmpsb
cmp
scas
jae
lea
pop
fwait
shlb
add
subb
mov
pop
test
clc
inc
scas
mov
ret
mov
adc
pop
fistps
insl
iret
popa
mov
sbb
jmp
into
std
lea
push
xor
lret
pop
aad
cmp
lock
sub
cmpsl
dec
mov
dec
pushf
out
push
mov
jle
insb
adc
pop
and
sub
mov
out
mov
testl
inc
and
push
inc
cmp
dec
jle
cld
sti
out
rclb
pop
mull
cli
pop
outsb
fs
jmp
add
ret
fldt
ret
jno
fnsave
inc
daa
mov
je
imul
xchg
inc
addr16
mov
push
enter
insl
pop
mov
xlat
sub
mov
jg
xor
dec
cmpsb
popf
popf
bound
xor
push
andb
std
mov
inc
jge
in
xor
adc
ficoms
jnp
or
les
cmp
fsubrs
adc
cmp
xor
pop
xchg
add
adc
ficoms
sbb
fsubr
out
xor
jae
outsl
out
ds
popa
jp
ret
sub
ja
mov
jno
jmp
lock
imul
sub
call
call
mov
pusha
or
cmc
cwtl
rolb
pop
rolb
sub
mov
outsb
cltd
es
adc
lods
imul
mov
or
das
push
mov
dec
repnz
sub
sbb
or
dec
mov
pop
push
sub
or
mov
adc
mov
cltd
out
adc
mov
adc
enter
xchg
add
loope
pop
pop
stos
shrb
xchg
fstpt
push
mov
lret
push
jge
mov
es
jecxz
and
aaa
insl
pop
addr16
dec
fistps
mov
push
sbb
push
bound
pop
adc
les
xor
mov
mov
insb
lods
lods
test
cmp
fiadds
aad
aaa
mov
pop
mov
cmpsb
or
arpl
into
xchg
mov
les
push
cmp
inc
arpl
in
xchg
or
mov
leave
or
mov
jb
adc
jnp
out
dec
inc
xchg
cmp
and
out
test
inc
push
mov
popa
fcompl
mov
arpl
inc
lahf
push
rcrb
add
movsb
lods
jns
out
ja
jo
add
pop
scas
pop
rol
std
jbe
adc
add
imul
push
inc
popf
adc
shr
xchg
aam
xor
stc
jl
xchg
sti
push
shll
add
rorb
push
cmpsl
test
or
int3
mov
adc
shll
and
cli
int
pusha
pop
cltd
repz
fidivrs
outsl
sbbl
outsb
and
arpl
sbbl
mov
xchg
imul
outsl
pop
xor
mov
lahf
shrb
xchg
mov
push
push
jl
pusha
mov
push
cwtl
xchg
dec
mov
insl
clc
xlat
cs
icebp
loope
jno
push
add
adc
cmpsl
sub
lcall
xor
mov
cmp
in
sub
jbe
mov
cmp
inc
inc
inc
mov
sbb
pop
stc
aaa
dec
adc
addr16
loop
cmp
test
aaa
fldcw
mov
add
je
push
pop
mov
iret
nop
mov
inc
pusha
jbe
loop
jl
jo
mov
in
push
aam
or
sub
pusha
lahf
jno
dec
lcall
xchg
cld
fldt
push
popw
xor
ja
mov
jo
jecxz
pop
test
ret
call
jne
je
lea
cltd
inc
pop
jge
rorb
pusha
inc
jp
stos
push
and
mov
mov
divb
add
out
int3
mov
dec
data16
fcompl
and
inc
inc
addr16
inc
subb
enter
mov
imul
in
cmp
mov
out
dec
sbb
push
cmpsl
pop
xor
subb
ficomps
cmc
inc
es
pushf
int
sub
leave
or
int
in
ret
data16
ds
xlat
out
add
aad
jae
data16
std
out
or
stos
clc
sahf
aad
movsb
jecxz
subl
dec
mov
mov
lods
push
sbb
loop
call
mov
mov
loope
lock
jbe
imul
xchg
mov
out
mov
xchg
mov
enter
mov
fisubs
out
jne
std
dec
jl
sub
cld
fadd
mov
test
mov
and
xlat
mov
lea
sub
inc
xchg
jnp
decb
jno
cmp
mov
mov
mov
out
test
js
insb
fbld
test
pop
xchg
imul
push
mov
sbb
jge
roll
call
addr16
mov
and
aas
mov
sub
sbb
addr16
ror
adcb
daa
pop
es
in
cmp
jnp
and
mov
iret
add
and
pop
in
add
lock
push
divl
int3
packuswb
nop
scas
lock
insl
sti
lret
jns
mov
ljmp
push
mov
fnop
sahf
ret
scas
sbb
out
je
pusha
insw
js
adc
sbb
push
push
xor
in
cmp
mov
xchg
shrl
cmpsl
aad
mov
dec
cltd
push
and
test
xchg
xor
mov
push
or
mov
aam
pop
fsubl
in
ss
push
fnstenv
xor
pop
dec
icebp
and
pop
sub
int3
ds
stos
test
xchg
je
inc
sub
cmpsl
mov
sbb
scas
out
sub
jbe
or
push
lock
ja
xchg
test
adcl
xor
push
adc
shll
push
clc
sbb
andl
inc
lods
push
rcrb
add
loopne
popf
pop
mov
push
sbb
adc
jne
fidivs
dec
lret
and
in
shll
jle
lret
fildll
call
out
add
imull
xor
sub
xlat
sub
rcr
movsl
mov
mov
xor
lods
push
das
dec
lahf
dec
push
mov
imul
lret
or
push
or
mov
xchg
outsb
in
dec
or
imul
in
dec
push
pop
jns
adc
xchg
out
fstpt
dec
aaa
test
mov
xor
arpl
ret
filds
cmp
dec
fbld
repz
in
fmull
mov
push
fsubrs
in
dec
or
pushf
movsl
in
scas
jmp
push
int3
cli
shrl
lods
orb
incl
mov
dec
adc
pop
xchg
lods
fidivrl
xchg
test
repnz
into
and
push
mov
xor
cmp
ds
xchg
sbb
insl
cmc
dec
push
sub
lods
ljmp
mov
sub
loopne
in
push
mov
std
mov
mov
movsb
lods
and
add
and
aaa
and
push
arpl
loop
sti
cltd
sbb
mov
sub
daa
inc
pop
push
push
es
adc
shrl
scas
leave
gs
cmc
and
jg
mov
sbb
je
mov
imul
xchg
mov
daa
sbb
and
sub
pop
xchg
add
xchg
sbb
xchg
inc
mov
push
mov
lods
xor
jecxz
iret
scas
sti
aam
xchg
inc
jecxz
pop
jnp
xor
test
rolb
mov
mov
cmp
xchg
xchg
push
pop
js
stos
js
sub
iret
xchg
and
jp
mov
jne
scas
scas
test
xchg
jno
xchg
mov
push
xchg
sbb
fstpt
ss
xchg
xchg
push
xor
fdivs
mov
and
cwtl
test
xor
test
cwtl
jg
pop
andl
pop
lock
adc
mov
call
imul
rcll
test
sub
out
movl
cmp
test
pop
push
mov
stos
imul
cmp
xchg
adc
shll
lea
dec
dec
clc
lds
or
mov
jo
pop
enter
pop
xlat
dec
sar
lea
test
push
loop
pop
lahf
hlt
mov
sarb
sub
dec
adc
repz
ss
ljmp
imul
outsl
ret
lds
repnz
loope
fidivrl
je
adc
insl
cltd
mov
and
pop
cmc
lods
jg
xor
enter
and
fwait
pop
and
test
mov
test
or
cwtl
cwtl
push
ret
sbb
inc
clc
sub
fistpl
aam
and
xchg
pop
inc
sub
mov
iret
jecxz
jbe
cmp
or
shll
push
xor
outsl
lret
sbb
lock
xor
sar
mov
fwait
add
sbb
shr
movsb
add
popf
jb
push
outsl
ficomps
mov
mov
ret
rcrl
xor
dec
xchg
xor
aas
jo
add
nop
pushf
add
mov
adc
xchg
in
push
sub
sub
dec
inc
xchg
mov
xor
mov
mov
imul
dec
xchg
loopne
mov
loop
cmpsl
cmp
pusha
in
inc
scas
jae
rorb
dec
xor
dec
test
inc
sub
push
lods
mov
jl
sbb
xchg
jbe
pop
and
sbb
fwait
mov
sub
or
mov
lods
sbb
jno
push
clc
fmulp
loop
inc
cmpsb
sbb
subl
mov
test
mov
enter
xorb
jle
orb
cmp
jns
dec
xor
push
stos
je
jg
sub
cld
and
lret
hlt
pop
imul
bound
dec
aam
lea
xorl
fdivrl
mov
lcall
daa
adc
xor
fmull
and
fwait
js
clc
int3
outsb
pusha
shlb
xor
out
cwtl
ficoml
ficoml
dec
popf
push
cmp
adc
push
mov
pop
into
or
js
cmp
sbbl
jmp
adc
jbe
sub
in
push
dec
push
inc
pop
jnp
mov
fsubr
xchg
subl
movsl
loope
and
gs
rcll
cmc
push
ror
xchg
cmp
push
jmp
pop
fistpl
pop
jle
daa
or
mov
popa
xor
push
push
xor
fmuls
sbb
mov
adc
stc
ret
movsb
jns
mov
mov
ja
mov
shll
xor
clc
xchg
sbb
push
pop
jle
mov
cld
push
mov
sub
dec
sti
cmpsl
push
call
sahf
call
scas
shll
xor
adc
push
add
lods
jecxz
in
popa
mov
xchg
sar
sub
ss
outsb
mov
mov
icebp
addr16
or
mov
adc
mov
push
ficoml
cs
stc
ja
sbb
xchg
and
in
pop
out
sub
add
movsb
sbb
inc
adc
mov
mov
mov
out
xchg
stc
or
test
jbe
addr16
jb
mov
push
mov
and
xlat
aad
jns
add
fucomip
mov
add
movsl
cmp
fstps
fistps
push
hlt
push
push
pusha
cmpsb
mov
dec
inc
mov
cmp
stc
scas
nop
xor
ret
xchg
mov
mov
ds
movsb
notl
inc
mull
dec
push
je
sbb
inc
insl
and
fldcw
adc
cmc
ret
jns
shlb
push
ljmp
add
dec
sbb
lods
loop
mov
std
jno
xchg
stc
enter
inc
jnp
pop
pop
loop
inc
inc
push
in
mov
movb
jmp
fsubrp
mov
adc
mov
pop
fdivr
incb
hlt
add
hlt
lahf
pop
in
mov
mov
xchg
dec
and
add
push
pusha
andb
pop
std
fs
jbe
jbe
cld
aaa
fwait
dec
lahf
shrl
or
and
adc
cltd
and
or
out
data16
int3
sbb
int3
xor
insl
aam
push
cmp
les
stos
push
jb
and
inc
lret
insb
cmpsl
movsl
int
ss
imul
std
cmp
jo
shll
fnstcw
insb
add
mov
scas
hlt
psllq
arpl
test
cmovnp
jbe
mov
iret
cmc
push
xlat
mov
inc
imul
push
or
dec
mov
jle
jae
cmp
xor
xor
xor
cmp
and
pop
xor
sti
xchg
pop
push
aad
fwait
loop
cmpl
cmp
pop
outsl
mov
insb
fdivrs
pop
pop
neg
mov
inc
ffree
call
enter
decl
call
xor
mov
popf
pop
add
loope
pop
jecxz
int3
mov
pop
push
les
jp
aas
cmc
mov
scas
adc
sbb
scas
js
mov
mov
fists
movsb
scas
in
xchg
outsb
dec
jl
pop
pop
jmp
aad
into
push
adc
xor
cmpsb
sub
and
imull
mov
xchg
dec
push
clc
fnsave
or
dec
loopne
push
in
jle
idivl
jno
cmp
rcrb
mov
cmpsb
out
in
xchg
shl
pop
add
fidivl
int
dec
add
insb
arpl
inc
sahf
and
dec
in
pop
in
iret
shlb
xlat
es
cmp
cmp
sub
inc
adc
popf
test
sub
mov
jl
outsl
xor
out
push
or
push
gs
ds
cmp
stos
push
orl
cmp
dec
in
out
sbb
arpl
enter
arpl
mov
gs
loope
repz
adc
nop
jmp
stos
enter
jns
iret
add
pop
xor
xorl
sbb
aam
je
nop
push
stc
fldenv
sbb
add
push
push
jmp
ret
mov
mov
xchg
mov
fisttpll
icebp
adc
mov
out
imul
rorb
sub
es
jl
cld
and
shlb
mov
iret
jle
xor
adc
push
jl
movb
add
std
mov
jo
mov
lods
cli
lods
testl
inc
inc
int3
aad
and
push
iret
fidivl
ret
sti
loop
lret
and
and
dec
filds
xchg
cmp
clc
add
data16
andl
fs
dec
flds
enter
imul
sbb
add
jne
adcl
sub
mov
or
jg
mov
inc
lret
popf
les
fidivl
pop
push
inc
fidivl
daa
adc
jo
jo
add
adc
ds
adc
and
bound
cmpsb
shlb
aaa
icebp
mov
mov
imul
and
inc
jno
int3
cmp
pop
roll
cltd
mov
or
pop
add
out
outsb
sti
hlt
fildl
sbb
adc
mov
inc
imul
cs
aas
sbb
enter
mov
sbb
ret
cltd
fs
sbb
les
xchg
sbb
mov
sarl
fistpl
jno
mov
test
add
mov
add
sub
jmp
enter
out
and
inc
sub
xchg
push
je
fidivrs
or
mov
add
adc
cmp
daa
fmul
mov
pushf
xchg
mov
int
inc
ds
icebp
outsl
sub
out
nop
sub
lcall
pop
notb
js
test
leave
sub
xchg
jno
fbld
adc
stc
arpl
data16
or
mov
cmp
push
and
ja
mov
cwtl
or
rcrb
dec
jecxz
xor
push
xchg
xchg
xor
mov
and
leave
adc
inc
push
rcrb
fisttps
cmpsl
js
outsl
mov
inc
mov
scas
inc
push
sbbl
fxch
jg,pn
mov
movsl
mov
inc
jle
xchg
push
jae
pop
jno
adc
xchg
adc
int
outsb
int3
sti
mov
jns
sub
ja
loopne
shl
mov
push
mov
xor
jne
adc
mov
adc
xor
mov
dec
cltd
sahf
faddl
or
push
pop
xchg
mov
dec
out
push
sub
push
mov
or
aad
mov
jbe,pn
inc
push
push
insl
cli
sub
loopnew
add
sub
ror
push
fdivl
subb
mov
pop
ss
cmp
enter
insb
sbb
ret
addr16
mov
jmp
adc
pop
sub
pop
mov
cmp
xchg
int
lock
loop
dec
enter
rclb
es
jb
cmp
xor
inc
add
cmp
leave
cmp
nop
pop
jno
imulb
or
leave
lea
cwtl
aad
jp
cli
outsb
pop
cmc
out
jae
enter
hlt
je
push
or
mov
mov
lds
imul
xchg
add
mov
sbb
jecxz
fstps
and
fldl
adcb
sahf
arpl
pop
aad
xorl
cmpsl
mov
int
and
jmp
xchg
push
cld
outsb
mov
cmp
xor
or
fistl
cmpl
in
or
shlb
xabort
iret
sti
pop
or
je
add
sub
in
mov
and
inc
add
repnz
std
andb
pop
shlb
and
mov
and
addl
fnstsw
cmpsb
xchg
call
mov
push
mov
iret
mov
loopne
imul
cli
lret
popf
mov
sbb
ja
lahf
adc
jmp
scas
lret
sub
test
inc
push
and
xor
xor
orb
scas
add
pop
adc
popf
ljmp
stc
cmpsl
dec
cmp
test
add
or
dec
idiv
mov
imul
aad
jb
mov
push
push
lahf
imul
xor
lahf
test
sub
pop
insl
gs
push
test
mov
pop
xchg
jp
cld
int
adc
mov
cmp
mov
add
add
dec
testb
bound
enter
mov
push
pop
loope
adc
or
adc
cmp
clc
and
push
mov
mov
jp
mov
or
mov
pop
jbe
or
jo
popa
or
lret
pop
adc
fisttpl
mov
andl
mov
ljmp
roll
notl
shrb
sbb
out
stos
cmc
loop
xor
mov
test
pop
add
adc
adc
fwait
gs
push
sbb
inc
dec
loopne
xor
fistps
push
data16
xchg
arpl
inc
imul
gs
mov
das
cmp
and
fs
mov
imul
pop
xor
mov
cli
pop
jle
or
adc
pop
xor
ljmp
push
pop
and
fcoml
shl
iret
jl
int3
stos
lods
adcb
out
mov
mov
mov
popa
pop
xchg
es
pop
outsl
xchg
dec
cmovns
mov
pop
outsb
xchg
jle
insb
xchg
insl
sub
xchg
cmp
xor
xchg
mov
and
fisubrs
das
jmp
fisubl
add
jl
loopne
je
add
sub
test
lods
xor
pop
aad
and
aas
aas
mov
shrl
pop
jnp
xchg
pop
inc
inc
lret
sub
fisttps
rcll
gs
add
mov
test
dec
popa
adc
movsb
cld
movsb
cmp
and
call
jne
dec
add
or
stos
icebp
mov
mov
out
call
mov
movsl
ret
mov
lcall
inc
lahf
shlb
dec
add
lea
sub
mov
push
pop
mov
add
sbb
xchg
inc
shrb
sub
fs
inc
dec
lret
std
and
jle
nop
jle
aaa
push
inc
push
mov
cmp
or
nop
ror
pusha
push
push
pop
dec
repz
sti
int
push
setg
xchg
sbb
bound
sub
xor
inc
add
inc
out
mov
inc
xor
movsb
fistpll
mov
lods
push
push
inc
mov
mov
mov
jne
into
mov
jg
ljmp
mov
out
mov
inc
sub
xor
in
inc
jg
fidivrs
mov
loope
mov
das
mov
das
push
in
and
filds
fnsave
iret
pop
and
mov
insl
icebp
lret
fstpt
fcmovu
add
inc
mov
sti
and
push
jbe
roll
mov
inc
out
in
out
cmp
fmuls
push
inc
in
andl
cmp
and
insl
ds
loope
or
pop
in
fisubs
xor
fcmove
xchg
pop
push
inc
mov
pop
imulb
iret
add
jge
or
ss
inc
iret
fcoms
div
hlt
aas
jmp
lahf
pop
das
mov
out
cmp
ja
cmp
icebp
dec
addr16
sbb
xchg
sub
pop
out
lds
cmp
pop
cmc
xor
aam
inc
and
xor
pop
sub
out
ds
cmp
jno
jns
pop
push
int
pop
inc
outsl
cmp
mov
sub
mov
out
mov
pop
scas
mov
xor
pop
pop
clc
aas
sub
std
push
data16
xchg
xchg
cmp
cld
pop
xchg
cmp
xchg
std
lret
mov
adc
in
sbb
out
out
aas
mov
aam
adc
cmc
or
test
scas
mov
add
pop
xor
movsl
mov
pop
in
mov
add
lahf
in
xchg
xchg
jmp
pop
daa
aam
insl
pop
in
test
leave
ljmp
xchg
push
sbb
jge
jmp
test
mov
add
jecxz
loopne
xchg
mov
mov
out
sbb
fdivrs
jecxz
add
cltd
ret
data16
or
daa
cmpsb
jne
sti
or
cmp
outsl
imulb
add
insb
int
xor
mov
test
inc
jo
lret
pop
out
outsl
sbbl
lret
mov
xchg
lea
pop
lock
ljmp
sbbl
daa
das
push
xor
inc
xchg
out
sub
test
mov
mov
adc
repz
ror
dec
mov
pop
inc
decb
and
loope
lea
xchg
adc
arpl
cmpsl
cmp
jno
dec
and
hlt
std
jp
fildl
roll
stos
mov
out
movb
insb
xchg
fimull
call
dec
insb
loop
xchg
leave
jp
add
or
cmp
dec
lods
je
inc
inc
imul
adc
jns
test
cs
lahf
stc
cmpsl
push
jb
sbb
pusha
mov
xchg
jns
cld
shll
adc
js
pop
pop
xor
mov
int
pop
xor
fdivrl
jb
jecxz
stc
sub
inc
xor
xchg
lret
call
push
rcl
sbb
std
int
hlt
loope
adc
loop
dec
dec
inc
mov
dec
in
lret
and
inc
test
pop
or
inc
xchg
das
push
ss
jle
ja
xor
jecxz
cmp
mov
sub
lcall
mov
cmp
lret
inc
add
adc
cmp
rorl
inc
or
push
ss
out
push
jp
jle
add
cmpsl
out
or
lock
int3
mov
out
push
jge
or
je
push
mov
or
mov
cmpsl
dec
in
mov
stos
retw
xchg
mov
cmc
es
add
hlt
ljmp
ret
xor
fsts
cli
push
aas
scas
iret
sub
sub
mov
cmp
imul
sub
and
and
inc
loopne
mov
cs
jbe
sbb
xlat
jns
xchg
mov
sub
sub
sub
pop
lcall
scas
push
xchg
dec
jmp
inc
mov
mov
das
mov
sarl
jno
sub
push
add
inc
aad
scas
les
cwtl
imul
adc
insb
mov
pop
inc
jge
lods
mov
orl
insl
jb
sbb
in
xor
fistpl
fsubrs
mov
pop
adc
and
repnz
clc
outsb
sub
xchg
insl
rcrl
in
aam
aaa
or
adc
test
xlat
lods
pop
jo
les
call
repz
repnz
stos
dec
add
scas
cmp
inc
iret
in
jb
gs
cmpsl
jb
or
mov
mov
cltd
fwait
mov
imul
pop
mov
or
push
pop
das
gs
sbb
and
aam
sbb
jae
lods
ds
pop
push
gs
mov
lcall
or
sahf
aas
stos
push
inc
jmp
pop
mov
xchg
pop
movb
into
lahf
pop
ret
cli
movsl
sti
dec
jle
rep
adc
fdivl
insb
fcoml
fnstsw
sarl
or
idivl
mov
dec
dec
pop
push
or
imul
add
jl
std
mov
fsubs
or
mov
aad
cltd
adc
xchg
orb
outsb
out
std
inc
int3
add
fistps
das
pop
dec
dec
fisubrl
jp
ret
mov
mov
push
jns
std
mov
push
stc
decl
cmpsb
xchg
cmp
push
ret
in
jp
sbb
out
add
pop
sub
loop
addr16
add
repz
mov
sbb
rolb
shlb
xchg
sub
add
jp
lods
out
add
in
cmc
sbb
sub
push
inc
lcall
fildll
dec
pop
xchg
or
pop
sbb
adc
pop
xchg
cmpsb
or
xor
dec
adc
add
movsl
pop
lcall
push
lds
mov
xor
icebp
and
cmpsb
cs
pop
jp
aam
cmp
ljmp
xchg
mov
add
mov
push
imul
shrb
cmp
roll
in
push
xor
push
fmuls
sarb
cltd
loop
mov
in
or
pushf
bound
test
pop
scas
inc
jmp
add
jns
js
xchg
dec
fs
sbb
and
inc
testl
int3
popf
jl
or
inc
dec
mov
arpl
add
xor
and
loopne
push
in
add
dec
pop
aaa
push
cmp
pop
push
xchg
jge
inc
outsl
call
xchg
inc
rorb
mov
dec
mov
inc
mov
mov
lret
out
mov
frstor
jmp
popa
mov
div
xor
adc
jp
jmp
aad
fwait
inc
mov
xor
loope
aam
mov
xchg
cwtl
sbb
fwait
ja
push
mov
ja
dec
jo
push
repnz
xor
sarl
lds
fsubr
mov
in
dec
in
mov
push
addr16
and
push
movsb
clc
ds
xchg
fst
dec
jno
add
stos
icebp
xchg
loopne,pn
and
je
decb
popa
imul
inc
enter
test
cmc
repz
push
and
aad
mov
push
cmp
aam
rcrl
adc
pop
je
fistpll
push
ds
pop
mov
mov
test
faddl
sahf
aaa
fprem
in
lret
sbb
scas
arpl
cmp
subb
in
aas
mov
iret
sub
xor
pushf
dec
rol
pop
mov
movsb
mov
sub
xorb
xchg
adc
mov
clc
fcoml
movsb
cmc
shlb
cmp
mov
data16
dec
not
imul
cmp
sub
mov
inc
mov
loopne
adc
mov
loopne
push
dec
fwait
sub
nop
jb
ret
inc
pusha
xor
dec
or
cmp
imul
ds
push
in
xchg
cltd
add
js
mov
sub
xchg
clc
fdivrp
out
out
mov
shrb
insb
ljmp
add
mov
mov
out
sarb
adc
dec
or
jb
cli
xor
mov
popa
jecxz
repz
frstor
sub
and
jg
push
pop
push
xor
cld
loop
stos
xchg
rolb
mov
or
and
inc
mov
pop
inc
sti
rorb
cs
mov
idiv
into
mov
dec
ljmp
je
cwtl
sub
cs
cld
mov
jne
or
mov
jno
adc
push
push
sbb
js
sub
outsl
cmp
push
jb
jmp
hlt
jmp
ret
mov
jmp
pop
cmpl
fnstsw
icebp
negl
sbb
iret
mov
adcb
xor
or
lcall
add
test
cmpsb
jne
pop
xchg
insb
inc
push
lock
xchg
scas
dec
ds
pop
or
adcl
ud1
push
sbb
daa
push
scas
mov
popl
sub
lret
mov
stos
or
jns
sub
jl
push
out
add
add
mov
ret
loop
out
imul
rclb
mov
and
push
xorb
ret
pop
cmp
movsl
or
add
rcrb
push
or
fs
jne
sbb
dec
jecxz
mov
stos
out
add
and
fnstcw
xchg
sarl
pop
xchg
adc
adc
push
or
lea
push
pop
sbb
and
repz
shrb
push
adc
cmc
push
sub
push
jl
pusha
push
xlat
movsl
push
stos
push
sub
sbb
pusha
mov
movsl
xchg
cmc
push
fistpl
imul
xor
into
mov
sub
sbb
pop
incb
push
cld
pushf
cmp
out
pop
in
pusha
int
sub
mov
fincstp
dec
loopne
cmp
adc
pop
stos
stos
xchg
cs
and
call
inc
sarb
cmp
test
rcrl
sub
sti
mov
dec
mov
or
testl
cmpsl
leave
and
xor
and
mov
mov
jns
mov
pop
or
mov
adc
push
nop
add
cmpl
in
lret
mov
adc
inc
mov
or
cmp
pop
test
jl
mov
ja
icebp
mov
int3
jbe
sbb
pop
sbb
in
out
imul
sbb
sub
pop
das
xchg
out
xchg
adc
aas
xor
sub
sbb
mov
mov
stos
daa
cmp
imul
jp
cmp
dec
cmc
cmp
js
jae
push
enter
lea
repnz
insb
xchg
enter
jnp
adc
loop
ret
inc
or
push
sbb
leave
cmpsl
je
rorl
fadds
pushf
mov
or
push
push
xor
ficomps
test
xor
adc
xor
rclb
pop
mov
scas
sahf
js
xchg
push
lret
push
cwtl
sbb
lock
jne
or
inc
call
aam
mov
or
add
cld
and
mov
roll
rcrb
xor
fisubl
insl
jbe
mov
xor
mov
mov
test
mov
aam
xchg
in
or
lahf
mov
popa
sbb
je
xor
add
inc
sbb
rcrl
sub
jp
ret
push
insb
sub
daa
fs
sub
cmp
mov
movsb
out
cmp
ret
jbe
jnp
add
ja
and
cmp
movsl
lret
repnz
sub
rol
fbld
mov
shrb
sti
movsb
bound
mov
mov
push
mull
cmp
pop
inc
int3
mov
jbe
in
and
push
pusha
es
imulb
aaa
scas
xor
push
cltd
test
pop
push
xor
sbb
or
mov
icebp
hlt
ret
sub
popa
adc
popa
lcall
mov
ja
aad
xor
pop
mov
mov
xchg
mov
pop
adc
stos
cmpsl
cmp
pop
add
rolb
xor
lahf
lret
bound
mov
ret
mov
pop
popa
pop
rorl
adc
adc
adc
sub
fcmovnu
rcrl
push
sub
stc
rcll
dec
add
loopw
out
and
ret
pop
addr16
pop
adc
fstpl
xor
xchg
cmpl
mov
inc
pop
xchg
adc
add
mov
and
stos
stos
lahf
jo,pn
test
movsl
pop
pushf
mov
in
lea
cmp
arpl
stos
roll
outsb
popa
out
cmc
and
insb
sbb
das
jb
pop
fisubs
fnstenv
sub
mov
or
jecxz
cmp
test
lods
addr16
mov
jp
sahf
cmc
fiaddl
ja
lret
js
pop
fimuls
cmp
pop
xor
and
mov
loopne
sub
push
jno
dec
ss
and
cmp
and
sti
sub
add
rcll
push
inc
push
adc
xor
pusha
outsl
ret
addr16
stos
jb
mov
shrb
out
sbb
mov
add
bound
popa
jge
fbstp
pop
xchg
dec
cmp
pusha
adc
and
movsl
xor
xor
xchg
cmpsb
out
in
ret
and
cmp
jg
js
adc
insb
or
pushf
sub
gs
sbb
jl
repnz
push
dec
fnstsw
js
cs
dec
out
inc
sbb
mov
add
push
sti
push
lahf
and
negl
rcrl
sub
insb
scas
repnz
insb
in
sub
outsl
pop
rcll
jnp,pn
xor
xor
mov
sbb
xor
aad
ss
cmp
loopne
cs
push
out
imulb
scas
fsubs
push
shll
fcoml
xchg
ds
pop
and
mov
pop
push
adc
fdivrs
scas
je
mov
gs
mulb
and
adc
push
test
ja
xchg
mov
adc
lock
hlt
cwtl
addr16
mov
lea
movsl
int
and
inc
mov
push
push
jns
sub
in
dec
mov
adc
out
movsl
mov
lds
shll
xchg
jp
ljmp
fistps
jmp
jp
jo
movsb
ds
sub
or
stc
fistpll
testl
hlt
add
push
or
imul
popf
out
mov
and
ret
sub
jg
ret
lock
mov
inc
into
imul
xchg
xor
jbe
sbb
sbb
fmull
enter
popf
sarl
rcr
cmp
cs
mov
jle
push
data16
vaddpd
lock
rolb
jge
in
jb
outsb
aad
gs
mov
testl
lret
addr16
aas
dec
xlat
cwtl
mov
cwtl
mov
jmp
int
cltd
lds
sub
insb
lds
jmp
cmc
repz
cmp
loopne
xchg
pop
push
pushf
arpl
aad
pusha
cwtl
ja
push
js
jae
leave
jne
in
fisubrs
out
inc
outsl
leave
mov
das
jno
sub
clc
je
xchg
ljmp
and
inc
sbb
mov
mov
jg
mov
movsb
cmp
cltd
pop
push
in
adc
jge
bound
mov
leave
xchg
sbb
and
dec
por
addb
pop
lods
mov
lods
sub
lret
nop
test
jg
xor
and
movaps
pop
xchg
inc
orl
xor
jbe
inc
repz
xchg
adc
shll
movsl
mov
in
outsl
mov
stos
push
enter
or
pop
jbe
lock
pop
xchg
lahf
into
or
lea
xchg
push
enter
clc
push
cltd
or
js
daa
iret
shrb
rol
in
jb
std
and
push
and
mov
adc
sbbb
into
subb
cmpsl
enter
loopne
cmp
cwtl
in
xor
jle
pop
mov
mov
test
mov
cmp
popf
mov
sub
sub
pop
adc
xor
es
mov
xchg
xchg
cmp
mov
outsl
mov
movsl
cli
pop
fcos
add
xchg
sbb
mov
add
out
and
cmp
imulb
in
sbb
sbb
dec
or
jp
pushf
rcr
outsb
mov
pop
mov
sbb
xchg
pusha
cmp
cmp
sbb
push
and
cmp
mov
mov
psubd
enter
xchg
add
in
push
roll
dec
lret
cmp
adc
int3
pushf
mov
push
sub
adc
mov
daa
cmc
xchg
push
mov
xchg
sbb
ljmp
test
or
nop
xchg
cmp
mov
enter
loop
ret
dec
xchg
clc
cmp
and
shrb
clc
adc
shrb
pop
sub
cmp
sbb
js
ficompl
aad
int3
push
mov
mov
add
fsts
mov
loop
out
cltd
pop
lods
icebp
lock
je
shlb
mov
sub
movsl
popa
cltd
mov
sub
sub
incl
pop
xor
das
lds
dec
mov
and
mov
mov
mov
mov
mov
and
xchg
inc
daa
ljmp
sub
outsb
mov
arpl
ret
dec
nop
xor
int
ljmp
jo
daa
aam
and
jp
and
jp
shrb
jl
fucomip
inc
inc
and
sub
imul
xor
daa
out
shl
jge
in
push
mov
popa
sbb
movsl
and
imul
inc
fucomp
mov
loopne
cmp
adc
adc
gs
push
lahf
cs
cli
loope
pop
jmp
inc
pop
daa
daa
ret
mov
mov
test
stos
jae
je
cmp
inc
neg
aam
js
xchg
jmp
or
sbb
inc
sbb
lcall
adc
jb
fisubrs
jle
outsb
mov
fwait
arpl
jnp
es
mov
mov
sbb
mov
jnp
jmp
mov
in
js
jle
push
xor
sub
dec
dec
int
adc
inc
xchg
jb
add
pop
jns
aas
pop
jb
orb
mov
sbb
mov
dec
mov
mov
or
adc
jnp
sbb
mov
je
add
and
stc
sbb
lock
out
shlb
pop
sbb
mov
dec
push
cwtl
push
pop
sarb
mov
adc
mov
adc
mov
add
mov
xchg
mov
push
test
pop
fidivrl
icebp
movsl
jnp
pushf
push
mov
inc
cmp
and
shlb
sahf
and
cmc
xchg
shl
out
mov
add
or
aaa
xlat
movsb
xchg
adcl
inc
push
pusha
outsl
scas
mov
mov
ja
add
incb
sub
cmp
inc
lock
mov
mov
cli
je
scas
xor
push
mov
push
cltd
jb
jp
or
dec
cwtl
inc
jb
cs
bound
divb
dec
lds
lret
shll
jp
cmp
ficompl
push
addr16
stc
outsb
cmp
test
inc
or
lahf
mov
in
sbb
das
fcoms
les
sub
jb
and
add
mov
sub
out
insl
mov
sub
rclb
imull
mov
les
fidivl
imul
push
sahf
inc
mov
nop
outsl
and
repnz
fsts
xor
cmp
jmp
dec
mov
fcom
mov
aad
xor
gs
or
and
pop
pop
mov
imul
lods
loope
cmpsb
sarb
jp
or
dec
jmp
in
or
cmp
bound
pop
cmpsb
dec
push
mov
push
aad
mov
outsb
jno
xor
aaa
sub
es
cmpsb
enter
mov
repnz
xchg
shlb
jae
mov
pop
enter
dec
test
mov
sar
cmp
ljmp
hlt
adcl
fldt
lea
aas
sbb
mov
repnz
xor
subb
cmp
loopne
addr16
push
pop
push
push
pop
add
in
mov
pushf
push
lret
push
lahf
mov
sbb
push
or
xchg
sbb
sti
in
cmpsb
dec
jne
mov
jl
out
mov
sub
push
ss
cmp
das
mov
lret
iret
lods
lret
out
xchg
pop
push
mov
sbb
cli
int
mov
sub
js
dec
insl
xchg
pop
xchg
pop
jne
pop
loope
mov
cmp
mov
dec
out
out
push
xchg
lds
push
add
xor
stos
inc
aas
jmp
cmpsl
dec
stos
mov
jecxz
push
add
xor
or
add
aam
cmp
loop
mov
inc
addr16
dec
inc
insl
insb
inc
iret
sub
adc
stc
pop
in
adcb
aad
dec
add
xchg
shll
mov
enter
inc
je
xorl
leave
cmp
ret
bound
and
in
jmp
xor
imul
pushf
mov
ficoml
mov
xchg
call
movsb
icebp
xor
cwtl
mov
lds
lcall
pop
ja
jae
rorl
or
mov
cmp
addl
adc
or
mov
add
cltd
pop
fisubl
shl
dec
push
pop
aas
fmulp
test
mov
or
push
dec
xchg
mov
jae
in
movsl
sbb
xorl
pop
mov
jae
aaa
out
test
daa
mov
pop
sub
cltd
inc
mov
dec
and
cli
and
out
mov
xor
adcb
int3
add
push
adc
pop
and
je
dec
dec
or
out
or
clc
mov
iret
sti
xor
fs
mov
pushf
nop
inc
int3
sbb
lods
fsubrs
decb
cmp
xchg
mov
inc
and
sub
jne
cli
jg
mov
mov
in
jl
mov
jns
cwtl
jbe
scas
addb
lds
imul
jl
push
int
xor
pop
mov
jo
cmp
ljmp
fsts
int3
aaa
jae
in
sbb
push
xor
add
ret
sahf
push
repz
jmp
cmp
es
out
lods
cmp
inc
mov
nop
aaa
jo
in
ja
cli
cltd
dec
jmp
or
ljmp
cmp
fwait
mov
sbb
pop
lcall
icebp
mov
mov
fldenv
mov
and
in
push
dec
adc
sub
fstp
or
aas
es
or
out
sbb
xchg
nop
push
jmp
icebp
push
decl
lea
daa
mul
bound
push
lea
mov
xor
repnz
shll
inc
mov
nop
jge
sbb
fwait
shl
jmp
adc
sbb
sub
repz
rcl
aas
push
cltd
mov
push
adc
movsb
in
mov
sbb
cld
mov
gs
jp
cmp
cmp
inc
jne
mov
pop
pop
adcb
jne
dec
xchg
add
mov
lahf
cmp
and
rorl
call
mov
lods
xchg
movsl
add
ret
call
addb
xchg
sbb
jno
sbb
add
call
xor
enter
enter
push
out
stos
or
adc
out
jg
jno
sbbl
nop
inc
or
js
in
adc
daa
mov
push
cmc
or
movsb
xchg
insb
mov
test
ljmp
adc
mov
sub
push
or
push
adc
cld
test
adc
sub
les
jmp
and
cmc
sub
xor
jp
mov
mov
pop
inc
dec
les
push
lock
push
aad
out
xchg
dec
out
mov
mov
dec
test
lods
lea
mov
lods
mov
pop
pusha
cld
sub
mov
inc
outsb
xor
fldl2e
mov
sbb
mov
sub
jle
adc
iret
popa
aaa
inc
aas
and
xor
pmulhw
adc
rcll
cmp
call
inc
fstpl
cmpb
mov
cmp
out
cmc
je
push
mov
push
push
dec
jp
sub
daa
adc
push
imul
xchg
popf
ret
pop
test
addl
push
inc
or
inc
testl
push
cld
mov
jo
push
pusha
or
loop
cmpsb
and
mov
scas
adc
fsub
sti
js
cmpb
pop
sbb
jmp
cmp
inc
pop
repnz
icebp
out
adc
xor
std
dec
adc
repnz
xor
dec
cld
ss
cmp
adc
cltd
xchg
xor
mov
mov
pop
data16
shlb
sbbl
ficoml
jl
add
sub
outsb
out
les
lea
ffreep
mov
add
pushl
cwtl
xor
cmp
push
rcl
inc
inc
rolb
lcall
and
outsb
jo
enter
orl
fsubl
sbb
fs
leave
sbb
ss
jl
or
test
fisttpl
cltd
xchg
clc
xor
ret
push
fcmovbe
repnz
cmp
xor
repnz
and
mov
movsl
repz
push
loopne
mov
or
push
shlb
je
ss
mov
add
xchg
add
mov
adc
push
mov
out
push
insl
daa
popf
sbb
dec
sub
test
je
fcmovnbe
in
cs
hlt
shlb
cmpsl
xorb
fcoms
je
xchg
cmpsl
cltd
add
aas
xorb
rcrb
fdivr
and
dec
call
sub
xchg
bound
out
and
adc
pop
add
cmpl
pop
jnp
scas
adcl
cmp
icebp
inc
xor
pushw
push
js
jne
stos
icebp
mov
jbe
xor
and
cmpb
fcmovbe
push
jne
push
lods
xchg
loop,pn
xor
sub
rcrl
xchg
inc
roll
nop
adc
xor
rclb
jno
xor
ror
pminsw
stc
stos
frstor
adc
shl
lock
cwtl
xchg
lahf
jg
jno
negb
leave
add
lret
mov
lcall
xor
rorb
pop
aaa
rorl
cmc
in
jns
sahf
adc
dec
lahf
ret
jecxz
jnp
jecxz
xchg
add
int
imul
and
arpl
insb
orb
sbb
jg
mov
cltd
insl
and
leave
cmp
mov
or
jp
aaa
js
mov
mov
cld
dec
decl
pop
es
dec
subb
pop
add
mov
mov
xor
pop
xor
xchg
mov
popf
rorb
fdivs
fwait
push
std
repnz
loope
stos
and
pop
aam
sub
inc
adc
and
xchg
jge
xchg
stos
or
push
ljmp
mov
inc
jo
ret
mov
xchg
xor
xchg
dec
cmp
fxch
dec
imul
cmp
cmp
andl
test
arpl
les
cli
adc
xor
lcall
xchg
xlat
xor
daa
inc
movsl
fwait
lods
mov
xchg
jbe
and
test
outsb
out
pop
add
jno
or
cs
pop
pushf
notl
andl
cmp
sbb
push
clc
push
les
sub
pop
popa
arpl
fs
sbb
or
or
out
imul
leave
mov
arpl
mov
test
lods
xor
jecxz
test
stc
and
or
add
and
lret
mov
or
outsb
mov
aaa
outsl
add
pushf
jmp
sub
pop
sti
pop
mov
js
adc
ss
aad
jb
lea
sbb
adc
fdivp
out
stos
xor
mov
sbb
ret
and
testb
pushf
arpl
clc
xchg
mov
loop
mov
or
cmc
inc
cmpsl
add
aaa
jbe
aaa
jbe
xchg
jg
inc
cmp
and
lods
dec
adc
mul
imul
sub
addr16
addr16
dec
je
enter
cmp
sbb
loop
lods
cwtl
mov
ret
ficoml
js
mov
mov
aad
jp
inc
pop
mov
cmp
stos
xchg
loopne
bound
jecxz
mov
fwait
push
data16
sub
push
and
fmull
xchg
mov
or
sbb
sbb
in
add
lahf
mov
inc
sbb
sahf
scas
add
sub
fists
jge
ror
push
lcall
das
dec
les
push
and
push
in
fsubrs
inc
mov
push
and
ss
add
aas
ljmp
int
orb
sub
fs
mov
loop
inc
mov
xor
mov
lea
push
std
jae
subl
adc
ret
mov
mov
scas
sub
mov
push
dec
cmp
mov
adc
sbb
sub
aad
add
jo
inc
imul
and
xor
inc
jl
in
dec
ret
inc
loopne
jp
pop
je
add
jp
cmc
loopne
pop
test
jge
mov
pop
pushf
add
outsb
clc
pop
inc
out
cmp
and
in
xorl
or
inc
cwtl
shl
and
xor
dec
push
test
or
mov
notl
mov
popf
insb
mov
cltd
adc
sti
inc
and
cmp
enter
sub
in
or
mov
jne
or
inc
rcrb
mov
fildll
xchg
out
iret
popf
xor
test
fisubs
loopne
jl
call
mov
enter
pop
and
insl
sbb
outsl
mov
pushf
mov
cmpl
jnp
out
jmp
cmp
imul
mov
add
scas
xchg
out
mov
mov
push
xchg
outsb
xor
fcoml
ja
push
jb
xor
or
cmpsl
lcall
xchg
mov
sub
xchg
adc
lea
and
dec
andb
ss
inc
adc
xchg
sbb
mov
xchg
outsb
cs
lock
int
xchg
jp
and
push
dec
cltd
add
sbb
jecxz
xchg
js
inc
push
xlat
sahf
js
or
add
jae
push
mov
push
push
sbb
dec
xchg
outsl
loopne
mov
dec
or
sbb
scas
nop
arpl
subb
add
xor
cmpsl
movsb
or
jmp
mov
sbb
pushf
lea
aaa
scas
ret
aad
sbb
push
cwtl
outsl
mov
and
lret
and
xchg
and
bound
push
in
lea
xchg
mov
mov
mov
mov
cmp
cmp
add
and
xchg
ja
jge
adc
cmp
icebp
scas
movl
cli
aas
lret
jae
jo
push
cmp
test
fnstcw
or
mov
test
out
xchg
lahf
roll
push
test
pop
andl
rcll
sub
mov
ficoml
in
sub
sub
js
ljmp
jle
jns
imul
adcb
inc
pop
int3
and
or
cmp
imul
add
scas
fsubl
or
adc
loop
in
andb
add
pop
lock
mov
xchg
pop
xchg
mov
dec
xchg
xor
xchg
add
push
imulb
cmp
stos
and
xchg
adc
shlb
lods
fwait
adc
jns
lea
mov
or
cwtl
push
mov
adcl
ds
fstl
push
outsb
stos
gs
jl
in
leave
adc
aad
cmp
sbb
push
icebp
dec
rcll
and
mov
pop
pop
and
jecxz
xchg
pop
pop
pop
cmp
jae
out
mov
subb
sar
mov
push
cwtl
xor
xor
mov
bound
in
pop
pop
insl
test
mov
test
sbb
imul
movsb
stos
or
out
stc
push
jmp
jecxz
ja
fwait
push
ljmp
in
mov
jg
ret
lock
loope
push
cmpsb
jno
mov
loopne
into
sub
stc
dec
lock
or
mov
stos
cmpsb
jnp
rclb
pop
bound
mov
lcall
cmp
loop
mov
das
notl
cmp
adc
lcall
sti
rol
shrb
jmp
jb
cmp
inc
xchg
cmp
pop
mov
and
and
fisttpll
ds
xor
lea
and
pop
or
jns
scas
mov
add
addr16
mov
lock
lods
sub
jnp
inc
test
inc
mov
lods
es
test
add
push
mov
xchg
jnp
loop
out
jmp
dec
dec
in
cmp
idivl
push
pop
rclb
pop
mov
shl
idivl
cltd
cmc
jnp
pop
stc
sahf
mov
mov
fldln2
rorl
into
bound
rcr
mov
pop
jmp
jle
push
xchg
push
loope
test
mov
mov
or
mull
aad
mov
jmp
into
mov
js
add
sbb
lret
mov
xchg
push
sub
push
test
add
js
mov
push
pushf
int3
xchg
shll
mov
fisttpll
pop
cli
adc
adc
lds
mov
mov
jae
repz
dec
fadd
call
xchg
fwait
sub
ret
jmp
mov
fsubl
lds
outsb
pop
inc
sarb
xchg
mov
subl
xchg
mov
sub
cmp
push
stos
lahf
daa
lret
lds
bound
cmp
xchg
jp
les
xor
push
add
and
xor
dec
les
outsl
cld
mov
ficompl
xchg
shl
mov
sub
push
shll
sbb
lods
push
mov
popf
lods
inc
ret
mov
aas
fiaddl
sbb
jne
lret
ror
push
icebp
cwtl
mov
sbbb
outsb
pusha
lea
push
ljmp
ret
or
dec
adc
into
test
cmpsb
add
ss
test
mov
iret
pop
aad
sub
inc
sub
test
push
jnp
jo
push
shl
xchg
xchg
dec
cli
push
dec
or
movsl
inc
es
lds
pop
enter
dec
mov
pop
bound
incb
outsb
mov
jnp
addr16
cltd
xor
mov
es
lock
mov
nop
sub
mov
cmpsb
lds
xor
dec
jg
lds
adc
inc
push
pop
out
xchg
mov
or
cltd
and
cmp
or
into
mov
add
mov
ficomps
pop
negl
dec
testb
jo
mov
push
xchg
lock
cmp
imul
loope
lret
or
xchg
dec
pusha
adc
sbb
cwtl
aaa
adc
decl
inc
xchg
ja
loopne
pop
jo
mov
jge
inc
and
pop
xchg
xor
adc
std
mov
xor
inc
inc
mov
adc
jecxz
jae
fwait
icebp
cwtl
js
sub
mov
fisubl
pop
sbb
mov
lods
lds
fistps
es
or
dec
into
fsubrl
cmp
add
cmp
imul
hlt
mov
hlt
push
mov
pop
ret
cmp
insb
adc
lock
popf
dec
mov
jae
cmp
je
push
cmp
add
addr16
cmp
jecxz
push
bound
xchg
mov
fwait
dec
testb
clc
ficompl
xchg
fwait
cmpb
cmp
inc
or
lods
xchg
mov
jl
loope,pt
daa
call
pusha
stos
sbb
lret
mov
jne
fdivrl
sbb
or
sub
stos
ljmp
test
mov
or
repz
call
jae
dec
jne
aam
mov
inc
js
shll
test
jecxz
dec
les
loop
mov
pop
add
cmpsb
adcl
sbb
mov
and
and
xchg
cltd
outsb
xor
adc
stos
dec
sub
movsl
test
daa
dec
or
bound
cmpsl
icebp
cli
or
jbe
mov
bound
adcl
jmp
mov
js
add
aam
fldenv
shll
repz
gs
dec
or
adc
dec
add
out
ret
lods
insb
xchg
add
and
outsl
add
ss
lock
or
mov
jae
fldcw
jns
js
in
push
sti
push
push
cmp
lret
jmp
fimull
sub
fwait
das
adc
stc
mov
mov
test
inc
pop
outsb
sbb
adc
xor
div
pop
lock
lret
cmpsl
xlat
inc
add
ret
pop
jg
and
in
adc
pop
clc
lret
lahf
sub
fisubs
loop
jecxz
cs
pop
stc
cmp
dec
fstpt
out
loopne
aas
imul
daa
stos
cltd
repz
add
mov
xor
sbb
xchg
out
sahf
nop
mov
out
test
out
xchg
sub
add
and
mov
inc
int
push
or
stos
push
into
loope
mov
push
loope
in
sbb
shrl
cltd
mov
sub
loop
fsubs
add
lahf
sbb
dec
lret
int3
push
mov
jbe
add
xlat
mov
call
mov
jnp
xchg
hlt
aad
xchg
sahf
and
dec
fidivrs
and
mov
inc
lods
push
pop
loop
fisubrs
add
inc
fucomp
cmc
xor
outsb
in
in
mov
or
fstl
dec
pushf
dec
or
xor
fisubrs
pop
mov
outsb
in
cwtl
adc
sub
pop
dec
xchg
cmp
rolb
scas
jb
and
cmp
sahf
cltd
lods
pop
addr16
add
cld
fbstp
mov
mov
sahf
in
pop
adc
dec
adc
lret
xchg
mov
cltd
js
int3
mov
out
xchg
call
in
decb
mov
inc
add
jo
das
stos
mov
sub
loopne
lea
xchg
cmp
sub
out
dec
rcl
dec
repz
into
into
or
pop
pop
mov
jno
mov
notl
loope
push
repnz
lahf
out
sub
ds
out
inc
cmpsl
fidivrs
sub
mov
xor
test
inc
hlt
repz
sub
inc
call
jle,pt
sub
sub
pop
mov
jmp
pop
nop
inc
sub
xor
bound
pop
inc
mov
push
fimull
sbb
in
add
jne
outsl
sbb
es
and
xchg
cmp
in
push
mov
int
mov
jecxz
dec
and
loop
dec
adc
xor
mov
out
stos
pushf
data16
dec
xchg
ficoml
jmp
shr
test
xor
xor
or
mov
adc
sub
fsubl
push
or
inc
dec
sbb
rcrl
fsubrl
mov
clc
push
pop
push
sar
and
in
push
push
pusha
jne
das
inc
cmp
rorl
ss
in
outsl
adc
jbe
mov
cli
test
xlat
loopew
add
pop
and
imul
lret
pop
dec
xchg
sarl
dec
rorl
jle
cmp
mov
pop
cld
push
and
std
clc
sahf
cmp
mov
or
push
or
les
fdivrs
cmp
inc
pop
jecxz
or
push
push
add
repnz
mov
jb
cli
mov
mov
inc
push
roll
xor
mov
jo
and
adc
sub
in
sbb
fbld
gs
jno
xor
aas
fbstp
scas
mov
arpl
inc
fisttpll
adc
mov
mull
dec
push
cld
cmp
xlat
jne
out
insb
das
std
and
cwtl
sbb
cmp
jbe
jae
dec
je
clc
pushf
jg
rolb
ljmp
sub
or
test
in
jmp
cmp
xchg
aad
lahf
rolb
mov
arpl
mov
cmp
arpl
pop
rcrl
jb
xchg
xchg
stc
push
mov
xor
iret
xor
sbb
les
int3
xchg
lods
xchg
int
jns
pusha
repnz
lods
outsl
add
adcl
cmp
mov
aaa
pop
jp
cli
fisttpl
test
jo
gs
clc
scas
jge
push
enter
out
cs
push
mov
jns
fistl
fbstp
and
inc
xchg
push
cwtl
and
int
dec
lds
jl
sbb
mov
adc
testl
mov
shrb
push
pop
inc
movsb
sbb
push
imul
rcrl
sbb
into
or
or
das
cld
jo
pop
and
test
and
mov
push
push
or
push
jno
inc
lahf
js
adc
inc
cmp
or
adc
es
sub
add
dec
xlat
sbb
mov
sti
jmp
ja
pop
mov
mov
cmp
insl
push
clc
xrelease
or
sub
rolb
inc
cmpsb
push
pop
std
stos
dec
rorb
jecxz
jge
push
jns
aam
jb
jp
out
inc
mov
pop
jmp
pop
mov
in
stos
lods
cmp
scas
and
adc
call
pop
lods
pop
push
jg
xchg
pop
fstpl
push
mov
std
stos
xor
hlt
push
mov
mov
inc
aaa
adc
aad
sub
mov
push
dec
popf
inc
int3
sub
in
xor
pushf
fmul
dec
bsf
in
cmp
cltd
mov
hlt
mov
mov
leave
jns
sbb
lock
imul
jno
test
push
in
lcall
pop
roll
imul
sub
xchg
pop
out
pop
pop
data16
in
push
mov
sbb
xchg
jl
cltd
daa
outsb
mov
adc
jg
pop
ret
inc
fdiv
cmp
xor
push
jno
cmpl
movsb
das
stc
stc
repz
fcmove
push
imul
push
dec
int3
xchg
out
jno
fsub
jb
adc
int3
mov
pop
sbb
std
jl
lods
mov
ljmp
mov
aaa
mov
test
mov
lcall
and
negb
xchg
dec
outsb
push
dec
xor
rcrl
cmp
jno
das
sbb
and
mov
xor
lods
fidivrl
aaa
sbb
and
test
lock
mov
xchg
ja
pop
add
dec
popa
jmp
pop
jg
in
cs
jb
fld1
sub
push
cmp
insl
jge
jge
mov
jle
sbbl
lret
and
mov
in
loopne
add
inc
hlt
pop
mov
pop
ljmp
inc
cmpsl
bound
inc
sarb
mov
jmp
dec
or
lock
mov
popf
adc
cmp
lahf
pushf
es
or
dec
test
ret
popf
xchg
mov
push
pop
and
shll
cmp
mov
jl
aam
std
in
int
ds
sub
outsl
out
imul
in
or
sub
dec
popa
andb
add
movsl
sub
add
inc
inc
dec
push
fcomps
cwtl
sbb
fidivrs
out
test
add
sbb
mov
adc
xorb
pop
enter
stc
fs
fildl
aaa
xchg
push
pop
lods
fiadds
stc
cld
cltd
adc
add
jno
aaa
xor
add
jno
jg
xchg
lret
add
es
iret
jbe
cmp
cmp
push
scas
adc
and
jle
rcrb
sbb
cmpsl
cmp
or
xchg
mov
xchg
aaa
pusha
mov
add
daa
in
stos
mov
repnz
jle
sub
sbb
xchg
stc
pop
cmc
gs
insb
subb
std
into
test
mov
es
icebp
cmp
mov
repnz
xlat
scas
xor
sbb
imull
jp
mov
push
add
jmp
inc
jae
push
mov
xchg
add
push
js
xchg
sti
sahf
or
sub
fcmovnu
arpl
popf
nop
push
xorl
inc
adc
mov
push
jmp
pop
mov
jnp
jb
jbe
inc
int3
icebp
test
fldcw
cmp
in
sbb
stos
stc
stos
and
scas
sub
outsb
stos
and
stc
mov
mov
inc
mov
push
inc
aas
fstp
or
aaa
inc
pop
lods
movsb
testb
pushf
addl
pop
out
mov
push
xlat
lea
jecxz
mov
int
fbld
cmp
in
xchg
mov
xchg
fucom
push
dec
mov
xchg
fnstsw
mov
lahf
std
lods
mov
sahf
lcall
fidivs
loop
inc
add
cld
aas
pushf
mov
sbb
stos
test
and
cli
jmp
push
push
push
xchg
or
jo
dec
test
adc
cli
scas
out
imul
mov
cmpl
add
mov
mov
cmc
gs
ja
push
sti
repnz
out
dec
loopne
sbb
jb
push
sbb
pop
lods
push
push
sbb
cmpsl
lret
mov
jno
into
sahf
cwtl
inc
lods
and
sbb
cmp
mov
ret
movsb
in
inc
pushf
aam
mov
sub
sub
nop
out
pop
xor
jae
cld
pop
cmp
add
jmp
adc
adc
mov
lcall
push
cwtl
push
mov
loopne
pop
popf
adc
subb
std
dec
lds
inc
bound
or
fwait
xchg
mov
mov
dec
cmp
femms
icebp
imul
dec
repz
ljmp
je
push
sarl
fwait
mov
sub
inc
xor
mov
jp
or
xor
into
xchg
out
sahf
outsl
movsl
push
fidivrs
out
pop
mov
aaa
add
push
sti
lods
mov
testb
sbb
cs
dec
jp
inc
inc
mov
sbb
jo
dec
mov
rorl
stos
add
mov
cltd
fcoms
sahf
imul
jle
and
inc
addb
inc
push
pusha
adc
or
jnp,pt
fs
das
pusha
out
adc
pop
pop
cmpsl
xorb
mov
jb
icebp
lock
and
jmp
out
jb
mov
push
xor
jo
mov
das
jbe
cmp
sub
add
pop
jno
nop
dec
xchg
push
fldt
pop
rcrl
mov
jmp
or
int
aas
jg
dec
out
clts
dec
adc
lahf
js
inc
lret
je
jnp
and
dec
cmp
ds
pop
and
mov
fidivl
mov
scas
mov
mov
mov
aad
sbb
ljmp
dec
mov
out
fldt
movb
jmp
psrlq
sbb
aam
jbe
shrl
fisubs
cmp
pop
cli
xchg
sub
add
ret
cmp
cmc
out
xor
and
cmp
adc
sbb
inc
xor
adc
and
mov
sub
lods
hlt
orb
mov
mov
xor
and
fs
push
fdivs
out
cmp
je
and
out
cmc
imul
mov
popa
rolb
or
lret
jmp
inc
push
adc
xlat
call
notb
push
mov
pop
js
lret
aam
xor
push
pop
lret
mov
fwait
push
fs
xlat
pop
clc
fwait
mov
pop
mov
fwait
in
push
inc
sbb
and
arpl
decb
mov
cld
imul
int3
sahf
push
gs
push
pop
iret
lods
pop
pop
sahf
clc
xchg
push
dec
icebp
mov
or
jmp
sti
jg
rcl
push
xchg
or
jb
sub
fwait
xchg
in
xchg
icebp
jbe
in
addr16
and
nop
add
xchg
inc
test
imul
test
cmpsl
shrl
test
jge
pop
inc
mov
add
mov
sub
scas
dec
jecxz
dec
shl
fs
addr16
dec
mov
push
into
scas
xchg
xor
aam
test
sarl
arpl
into
cwtl
lret
mov
mov
cmp
push
or
lret
aad
pop
mov
cwtl
lods
push
jmp
enter
sbb
push
push
lds
cmp
mov
push
add
xchg
push
pop
repz
es
mov
add
aaa
ss
or
adc
iret
mov
mov
aad
push
inc
testb
inc
dec
inc
cli
in
aad
jl
std
or
mov
pop
insb
fbstp
sbb
je
push
cmp
aaa
xchg
mov
add
in
push
fnstsw
xchg
pop
ss
ss
imul
mov
xchg
loope
pop
lea
gs
dec
stc
mov
sub
or
pop
add
popf
test
sarl
mov
sub
sti
out
cmp
sub
rcrl
jmp
mov
repz
add
cmp
dec
lock
cmp
xchg
and
mov
jecxz
cli
cmp
push
mov
mov
popf
mov
stos
ds
xor
mov
popa
add
stos
out
rorb
lods
lret
cld
inc
sub
cltd
pop
adc
mov
repz
xor
jne
mov
cmp
sbb
in
and
fstpl
aam
adc
add
and
stos
pop
pop
push
and
fmuls
rcrb
fdivrs
insb
lret
xchg
push
fcoml
cmpsb
mulb
mov
dec
out
or
pop
mov
or
dec
pop
sbb
sbb
mov
xchg
rol
mov
int
push
out
cmp
mov
mov
out
out
cltd
fmuls
add
add
mov
insb
dec
mov
cmpsb
mov
adc
inc
pop
mov
pop
rclb
xchg
mov
popa
sub
pop
jecxz
mov
pop
adc
lods
aad
push
loope
pop
inc
jb
pop
xor
aad
xchg
les
sub
add
js
insl
cmp
data16
lods
lods
fsub
xchg
ficompl
mov
dec
push
dec
subb
mov
int
sub
dec
cmp
xchg
push
mov
in
iret
adc
cmp
pop
and
adcb
pop
scas
je
cmp
vpshlq
and
push
es
sub
fistps
pop
mov
xchg
mov
rcrl
andb
sub
cmp
arpl
mov
out
psubsw
dec
lret
pop
dec
jb
or
movsb
jne
add
lahf
push
and
aaa
pop
jg
cmp
or
mov
mov
dec
cltd
gs
sbb
push
cwtl
mov
mov
outsl
imul
out
fs
push
lea
out
jns
hlt
outsl
dec
jge
xchg
int
push
loop
aad
add
lods
add
mov
aaa
push
xchg
jge
arpl
outsl
nop
rclb
adc
xorb
adc
adc
fists
mov
out
push
sub
je
loopne
bnd
sub
sahf
fwait
pop
loop
push
jo
and
insb
push
push
adc
mov
pop
out
mov
push
bound
fstpl
in
jae
pushf
xchg
dec
jb
xchg
xor
mov
das
sbb
xor
sbb
iret
and
mov
push
ja
xchg
sub
movq
sub
out
push
mov
adc
cmp
add
sahf
adc
push
jp
xor
mov
and
jbe
adc
adc
xchg
add
imul
mov
or
cld
cltd
cli
cmpb
adcl
pusha
notb
or
std
inc
scas
jp
mov
stc
gs
jmp
dec
xchg
cmp
adc
ja
add
cmp
loopne
ds
dec
sub
test
push
ljmp
pop
scas
mov
mov
cltd
mov
int
mov
jo
test
xchg
inc
xchg
jns
test
lea
sbb
sbb
loop
sbb
xor
sub
outsb
scas
jmp
push
imul
ret
pop
bound
sbb
je
imull
sbb
cmp
sbb
pop
xchg
mov
sti
pop
or
mov
mov
jge
jo
lea
push
sarb
les
lods
sbb
sbb
push
mov
cmp
mov
cmp
add
cmpsl
psrld
frstor
cltd
or
mov
push
test
xchg
push
shll
add
xchg
jo
cmc
adc
clc
jnp
leave
addr16
enter
sub
leave
inc
lcall
inc
and
push
inc
xchg
imul
jecxz
push
inc
out
enter
pop
gs
cmp
faddl
in
push
sub
dec
push
cmp
out
leave
and
test
jg
mov
mov
lret
test
sti
sub
add
xor
jl
into
push
push
in
dec
iret
inc
test
pop
rclb
aaa
and
add
lds
xchg
xor
data16
gs
dec
fidivs
loopne
pop
outsl
sbb
rcl
mov
push
and
mov
mov
jne
mov
clc
push
dec
adc
jp
xor
mov
sub
adc
hlt
jne
ret
fwait
mov
cld
and
rcll
inc
insb
loopne
xor
sub
stc
and
and
cli
pop
loopne
std
lods
jmp
jmp
loop
bnd
mov
ror
pop
mulb
mov
imul
pop
sub
jbe
scas
dec
aad
rorl
push
arpl
push
mov
mov
cmp
jmp
pusha
xchg
cli
les
aad
clc
push
mov
xor
adc
adc
les
inc
inc
inc
push
lret
mov
cmc
pop
mov
sub
aam
nop
sub
std
pushf
movsl
out
dec
popf
rcr
subl
mov
ret
sbb
in
push
push
or
inc
sbb
fwait
pop
pop
inc
jmp
neg
mov
dec
popf
les
xchg
push
sub
cltd
fmull
xchg
and
jecxz
ret
lret
push
repnz
clc
adc
push
push
stos
pusha
popa
add
int
lea
or
rorb
push
es
in
jp
push
or
ret
nop
test
xor
mov
mov
adc
orb
xchg
or
lea
jno
push
cltd
mov
or
xor
xchg
add
lock
lods
sti
mov
mov
popf
mov
cmpl
shr
lret
lods
jmp
cmp
aad
rolb
inc
adc
pop
xor
aas
and
repnz
bound
and
stc
sbbb
lods
lock
xorl
mov
xlat
inc
jmp
aam
cs
inc
xor
lds
dec
in
cld
cmp
pop
cli
jle
out
push
pop
mov
flds
pop
push
in
popa
or
gs
ret
sbb
std
mov
test
pop
pop
cs
xchg
jg
xchg
sub
sub
jno
lods
jmp
insb
inc
popf
sarb
lods
or
jbe
or
jecxz
mov
mov
add
cmp
add
out
jbe
sahf
sbb
loope
mov
lods
add
pushf
cmp
xchg
adc
xchg
mov
popl
xchg
mov
arpl
jg
mov
imul
into
mov
pusha
sub
adc
ret
test
out
pop
les
stc
or
push
and
dec
mov
movsb
bound
jecxz
dec
or
mov
inc
pushf
cmpsb
gs
xor
fwait
dec
or
or
outsb
inc
mov
xchg
sub
mov
xchg
sub
mov
cltd
in
mov
adc
jne
lcall
scas
and
sub
jecxz
int
les
movsb
test
arpl
inc
into
mov
orl
jns
sub
mov
and
cmp
push
mov
xor
movsb
push
mov
lods
mov
push
xor
rorb
test
mov
ljmp
or
scas
lahf
jl
mov
push
add
pop
shll
jae
lcall
rcrl
cmp
pop
jle
jne
mov
shlb
xchg
pusha
and
int
push
inc
cmpsb
test
daa
cmpsb
outsl
stos
jle
repz
test
mov
sbb
xchg
or
mov
sbb
and
mov
cmc
push
push
adc
cwtl
daa
movsb
imulb
not
repz
pop
xor
adcl
mov
hlt
jge
ror
in
inc
imul
movsl
scas
jg
inc
and
inc
out
push
lcall
sbb
out
or
and
pop
xlat
pop
movsl
int
ret
mov
mov
and
mov
std
mov
or
xchg
mov
add
dec
jg
clc
inc
dec
std
mov
adc
or
adc
popa
sbb
inc
stos
jae
dec
fistl
insl
mov
mov
mov
mov
fsubl
xor
mov
dec
fldt
xor
dec
xchg
xchg
dec
jnp
test
fdivl
loopne
adc
outsb
dec
fwait
xchg
cmpsl
push
adc
inc
cmp
loop
int3
shrb
ret
sti
fnclex
mov
mov
in
test
xor
lret
xchg
stos
sahf
notb
mul
inc
push
cmp
mov
cmp
outsb
add
sar
xchg
push
jne
cmpsb
xor
bound
frndint
or
fwait
ja
out
dec
pop
cmp
test
sbb
mov
xor
lea
mov
mov
mov
loop
mov
es
lock
xchg
push
addr16
push
fsubr
mov
andl
mov
xchg
aad
sbb
and
inc
call
das
mov
mov
mov
les
push
mov
imul
sbb
xchg
inc
icebp
arpl
mov
jbe
les
mov
into
out
sub
sub
push
ja
nop
shll
mov
adc
pop
mov
inc
mull
lcall
nop
jb
push
es
adc
and
sub
pop
into
or
fdivl
sub
loopne
adc
jo
xchg
fs
mov
pop
xchg
xor
pop
xor
pop
stos
lock
enter
cld
sbb
stc
mov
shlb
stos
int3
rclb
add
jae
sub
jne
out
in
pop
add
lds
in
mov
cmp
or
fistps
rorb
sbb
dec
fcomip
fdivr
push
aad
cmp
mov
push
fucomip
lods
pop
jb
mov
cmp
shlb
popa
testb
dec
addb
sbb
lret
pop
cmp
jecxz
repnz
repnz
dec
in
push
and
sti
adc
mov
xchg
xor
mov
pop
or
std
jle
mov
and
adc
fs
sahf
mov
icebp
pop
and
outsb
adc
mov
stos
aam
mov
cmpsl
cld
pop
cmpsl
sbbl
and
lcall
mov
pop
das
popf
xchg
xchg
dec
xchg
fnstsw
push
hlt
cmc
inc
aam
daa
cli
adc
and
faddl
add
loopne
std
loop
jmp
bound
imul
je
dec
jne
scas
ret
es
aam
xor
loopne
and
xchg
sbb
push
mov
fucomp
cmp
insl
mov
xchg
sbb
loopne
and
test
adcb
dec
sbb
mov
push
inc
insb
pop
pop
cmp
jo
xchg
lds
insb
mov
nop
int3
xlat
push
ljmp
mov
roll
loopne
in
ret
hlt
testl
jge
add
jmp
ss
cmp
popf
cmp
scas
in
xor
clc
scas
testl
jmp
out
xor
lret
dec
push
pop
xchg
xchg
pop
shll
push
pushf
aas
cmp
push
mov
xor
jae
adc
dec
hlt
clc
sarl
push
out
int
ja
xor
jp
push
mov
dec
fiadds
stos
add
lods
inc
push
notb
leave
xchg
push
dec
pop
lods
inc
dec
testl
clc
xchg
add
loopne
or
mov
repnz
jb
sarl
insl
xor
pusha
mov
cmp
adcl
mov
cli
dec
xlat
repnz
mov
adc
cmp
sub
adc
pop
repz
mov
mov
add
dec
mov
pop
ret
and
movsb
cmp
xor
pop
pop
jge
sub
ret
or
cmp
call
add
dec
push
xchg
repnz
fildl
add
mov
lcall
mov
loopne
mov
je
cmp
leave
push
pushf
sub
fisubl
pop
push
fldt
push
sahf
out
pop
inc
addr16
and
pop
mov
jmp
inc
mov
dec
add
stc
pop
mov
fnstsw
sti
insl
js
mov
xor
addl
icebp
adc
mulb
add
dec
cmp
sarb
mov
xor
fbld
addr16
xorl
adc
clc
bound
sub
js
mov
mov
sbb
or
test
scas
aaa
andl
adc
cld
sbb
loope
xchg
mov
pusha
cmp
int3
rolb
mov
jno
cmp
push
jle
mov
ja
pushf
push
adc
jg
sbb
sbbb
pop
subl
xlat
shlb
jbe
mov
insb
pushf
inc
adcl
iret
leave
fsubs
test
ja
aam
xor
inc
orl
push
fdivrp
cmp
outsb
and
mov
hlt
mov
mov
mov
loop
jns
sub
cli
aad
movsl
lret
adc
adc
mov
sub
loopne,pn
out
cltd
iret
or
add
out
les
fcompl
enter
addb
shll
cmp
cmpb
inc
iret
lret
mov
mov
mov
add
in
lock
mov
mov
add
and
mov
mov
repz
mov
mov
cld
aaa
or
sub
insb
and
mov
roll
and
rcr
cmpsl
xchg
mov
lods
add
dec
sbb
jp
shlb
sti
xchg
cmpsb
mov
mov
and
int
xchg
loope
sarl
mov
in
push
pop
pop
cmpsl
scas
stos
pushf
jne
rclb
pusha
lret
mov
push
test
xor
aad
or
repnz
push
xor
std
xchg
jp
jg
dec
push
dec
adc
rol
sarl
adcb
shlb
jno
add
mov
inc
mov
loop
clc
pushf
fisubl
mov
mov
xorl
xor
cmc
adc
leave
pop
sbb
add
pop
in
push
mov
sbb
cmc
jb
xchg
shll
into
imul
mov
push
test
cmpsb
roll
dec
dec
jb
data16
push
mov
push
mov
cmp
mov
add
lret
pop
das
sbb
loop
jbe
jo
inc
imul
je
push
fisubs
jnp
shll
xchg
xor
mov
leave
mov
pop
test
cmp
ret
in
dec
insl
xchg
ret
addr16
in
lods
ja
cmc
movsb
cmp
inc
loope
pop
mov
daa
mov
xorl
cltd
out
sbb
aad
jge
pop
adc
mov
fucomi
jmp
repnz
je
je
mov
test
push
lcall
push
lods
fld
mov
call
cmp
rorb
pushf
out
mov
hlt
icebp
xchg
in
add
hlt
dec
loopne
mov
sub
jnp
cltd
repnz
out
dec
and
fstp
xchg
loopne
jecxz
mov
mov
outsb
js
or
jo
jbe
push
add
test
add
mov
and
cltd
mov
add
rorb
aad
push
les
adc
data16
jle
xchg
or
leave
adc
arpl
mov
loopne
sbb
fwait
in
push
repz
js
adc
mov
rorl
faddl
cmp
in
in
jae
xor
or
sbb
scas
sub
push
jecxz
movsl
daa
cmp
outsb
dec
add
aas
mov
mov
inc
mov
js
sbb
movsb
cmp
arpl
pmaxub
cmpsl
xor
inc
rolb
cmpsb
xchg
mov
roll
jmp
and
cmpsb
icebp
nop
adc
push
cmpb
ds
in
inc
mov
cmpsb
add
add
and
lret
shr
xchg
sub
pushf
mov
flds
mov
xor
addr16
mov
mov
in
cmp
cs
ljmp
or
and
cmc
jl
mov
sbbb
leave
rcll
xor
lods
ljmp
jmp
dec
ret
nop
xor
insl
xchg
sub
lods
push
in
jp
or
ljmp
bound
sub
cmpsb
mov
mov
in
je
mov
xchg
cmc
sub
jae
imul
jbe
adc
mov
cmp
cmp
insb
fcoms
sahf
or
cltd
adc
mov
cmc
repz
xor
test
sub
jns
mov
testl
pop
in
test
add
and
test
mov
iret
imul
hlt
mov
or
cmc
iret
leave
push
das
sbb
pop
repnz
lods
mov
sub
sarb
cmp
loope
mov
lea
push
dec
clc
add
cmc
shrb
or
xchg
add
mov
inc
insb
push
pop
pop
ljmp
test
inc
mov
lods
cmp
and
push
arpl
aaa
dec
lahf
movsl
scas
pop
div
adc
lea
or
pop
mov
lock
stos
and
out
in
insb
cs
lcall
gs
lods
pop
ret
push
sarb
xchg
adc
dec
cmp
dec
add
leave
xchg
lret
cs
in
cmp
mov
loopne
stos
rcll
ljmp
pushf
mov
cmp
js
inc
xchg
and
xchg
lahf
jne
clc
xchg
jp
jl
push
or
loopne
adc
ret
dec
arpl
loope
push
jb
and
test
push
adc
imul
pop
lahf
mov
imul
loope
data16
or
mov
sub
mov
sahf
rorl
add
divl
xchg
jge
imul
js
jmp
jle
in
pushf
dec
add
stos
add
mov
ffree
sub
repz
fsincos
cmpsl
aam
add
repz
into
dec
in
ret
lea
inc
jg
jecxz
push
test
les
enter
adc
push
leave
sbb
jb
fnstenv
ret
fldt
addr16
ss
sbb
test
pop
aas
pop
bound
push
mov
push
mov
cmpsl
pop
pop
add
pop
jle
xchg
xchg
sbb
push
add
ret
push
push
inc
adc
dec
mov
jle
iret
cwtl
loopne
imul
mov
push
mov
cmpsl
sbb
cmp
mov
dec
push
lahf
cltd
out
fisttps
dec
ret
scas
fstl
adc
bnd
ficoms
and
movsl
mov
xchg
mov
push
retw
sub
mov
mov
inc
xchg
mov
pop
ds
jno
decl
sarl
xchg
fxam
in
jo
jae
wrmsr
aas
stc
and
cmpl
lods
xchg
cmp
aam
bnd
lods
mov
mov
rorb
pop
fdivl
add
inc
xorb
shr
lea
popa
aaa
inc
adc
add
cli
divb
ljmp
sbb
xorl
stc
lock
movsl
mov
mov
xor
cmp
ljmp
test
adc
mov
push
ja
lock
add
popa
mov
and
xchg
rcrb
cmp
in
icebp
push
mov
jo
dec
push
std
fsubs
call
lret
pop
mov
daa
mov
orb
dec
shlb
pop
pop
hlt
out
loop
dec
stos
sub
push
cmpsb
adc
imul
cli
mulps
fsts
dec
jo
cltd
scas
pop
adc
sub
add
mov
and
pusha
xor
in
dec
rorb
xchg
insl
test
rcll
mov
dec
and
sahf
daa
dec
add
cwtl
mov
cli
aaa
push
add
popa
outsb
sub
aam
sub
lods
mov
data16
mov
int3
xchg
movsl
sub
and
lods
leave
xchg
jb
mov
dec
mov
pushf
push
mov
decl
mov
mov
mull
mov
mov
mov
repnz
xchg
cs
adc
sbb
dec
xchg
pusha
pop
imul
das
out
andb
pop
arpl
sbb
cmpsb
fisubl
mov
notb
or
push
dec
adc
fwait
sbb
out
cmp
lds
adc
and
mov
sub
push
pop
outsl
inc
xchg
mov
jae
xchg
sarb
loope
out
subl
jp
cltd
push
lahf
ficoml
rclb
fsubs
sbb
jmp
clc
mov
mov
cmpsl
daa
mov
adc
jle
fcoms
jl
stc
xorb
cmp
xlat
mov
nop
decb
cmp
adc
inc
jb
cs
cmp
push
add
in
sbb
xchg
xchg
stc
sbb
mov
cld
sub
imul
and
inc
es
pushf
xchg
inc
pop
push
sub
dec
adc
or
or
aaa
sti
out
aam
mov
mov
jl
addr16
in
pusha
mov
sbb
adc
jle
dec
js
and
add
mov
rorb
fwait
xor
imul
dec
mov
and
push
lea
cs
xor
arpl
cs
pop
jmp
pop
shrb
jno
int3
dec
lea
mov
aad
jp
sbb
jns
pop
cwtl
mov
push
in
xchg
cmp
xchg
or
push
pop
mulb
mov
cmc
mov
outsb
mov
and
pop
xchg
jmp
sub
pushf
xor
mov
mov
clc
in
rclb
int
mov
inc
cmc
jb
sub
xchg
push
fisttpll
pop
mov
cwtl
ficompl
mov
and
int3
xchg
cmp
js
leave
lock
mov
pop
mov
push
cmpsb
dec
pushf
jno
mov
ja
test
mov
dec
mov
stc
mov
add
stc
sbb
push
mov
mov
push
xchg
gs
insb
cmpsl
ss
loopne
lods
filds
mov
test
dec
test
push
push
lods
insl
mov
add
hlt
pop
int
sti
push
adc
les
or
aam
pushf
mov
push
insl
jmp
mov
and
sbb
and
pusha
jge
fildl
xor
popa
push
jp
iret
mov
leave
cs
scas
mov
daa
push
dec
into
sbb
imul
cmpsb
mov
mov
dec
ss
addb
scas
iret
data16
sub
adcl
lcall
loopne
sbb
jnp
cli
pusha
ljmp
jae
mov
out
repz
jns
in
or
add
in
cmpsb
mov
jg
jno
sbb
pop
xchg
shl
add
cmp
les
sub
jl
repz
daa
cmc
aad
cmp
sub
aas
mov
mov
std
es
jp
out
imul
jge
fnstcw
jg
out
clc
mov
mov
push
adc
nop
mov
dec
mov
movsl
xchg
fwait
push
or
jae
gs
stc
stos
fcmovu
pop
jp
pop
add
mov
nop
lods
pop
ja
and
test
mov
and
nop
cmp
stc
scas
sub
repnz
cmp
aam
jns
insl
adc
into
mov
ret
add
push
mov
cmp
mov
repz
movsl
les
or
stc
and
jb
test
cld
fcoml
mov
lods
cmp
mov
pushf
ljmp
les
pop
mov
add
int
xor
mov
cbtw
xor
mov
sub
das
es
cmpsb
pushf
xchg
iret
adc
push
mov
ret
hlt
pushf
cmp
adc
jae
rorl
adc
jmp
into
sti
mov
dec
or
or
out
mov
movsl
insb
data16
mov
adc
xor
xchg
outsl
inc
inc
gs
ret
outsb
jp
mov
xchg
cltd
push
cmpl
cmp
mov
sar
ret
sub
enter
dec
cmp
clc
push
jmp
adc
inc
stos
adc
add
repz
icebp
cmp
fidivrs
adcl
insb
aam
test
jge
fwait
jle
aam
mov
sbb
and
es
mov
mov
mov
jg
adc
repnz
repnz
mov
js
out
les
pop
jecxz
jp
cmp
jns
push
pop
jmp
sub
and
in
push
movsb
pop
xor
add
arpl
je
loop
sbb
cmp
dec
adc
sub
jle
es
or
neg
pop
push
sub
push
cmpsb
inc
dec
in
inc
sub
ljmp
in
inc
addr16
test
mov
xor
mov
sub
lahf
push
adc
repnz
mov
jns
push
pop
fistpll
imul
xchg
sub
xor
sbb
orl
mov
sub
dec
push
sbb
data16
in
sti
mov
jmp
jmp
xor
and
jno
repnz
pop
dec
jle
xor
jbe
popf
adc
fdivrs
add
sbb
clc
pop
sub
bound
push
repnz
inc
orl
ja
or
repnz
mov
fsts
or
js
negl
jge
movsb
jbe
iret
rolb
mov
repnz
push
adc
cmp
inc
ja
sub
mov
fidivrl
aad
mov
in
xchg
dec
cld
popf
sbb
dec
shll
inc
outsb
jo
dec
cld
ret
sbb
movsb
pop
int
fsubrs
cmp
xchg
mov
les
jge
sahf
jge
xor
pop
out
pop
stc
cmp
jmp
lock
ret
and
cs
adc
loop
or
outsl
aad
and
xchg
xchg
ljmp
mov
daa
gs
out
mov
adc
xchg
cmp
jmp
cmpsb
lret
xchg
das
int3
mov
push
test
std
jecxz
inc
icebp
dec
sbb
cmpsb
lds
mov
data16
dec
xchg
lahf
or
sub
insl
add
out
adc
adcl
push
mov
fsubrl
or
add
lcall
pop
data16
jge
push
into
daa
xchg
movsb
sbb
add
pop
push
add
stos
xchg
sbb
mov
push
pop
pop
daa
mov
dec
pop
or
xchg
pushf
adc
sbb
jns
push
outsb
iret
jo
out
sbb
cmp
outsl
xchg
es
adc
out
lret
pusha
daa
xrelease
adc
test
push
jp
les
sbb
imul
push
hlt
inc
cld
ja
xor
xorl
out
ret
daa
hlt
mov
into
mov
clc
push
xor
fwait
lods
jno
push
data16
lcall
push
and
push
je
faddl
jle
cmpl
mov
add
jne
push
imul
daa
cltd
in
pop
xor
in
sbb
test
out
lret
or
sub
pop
and
sub
sahf
outsl
lods
cmp
adc
mov
dec
pop
add
test
and
dec
mov
xor
sarl
xor
inc
jo
or
dec
cmovnp
adc
inc
cmp
jle
mull
sub
flds
inc
jnp
lock
sbb
cli
bound
xor
sub
jmp
mov
jnp
cmpsl
xchg
pop
iret
and
popa
xor
mov
in
sub
hlt
jge
lcall
mov
xchg
mov
pusha
hlt
or
mov
out
or
mov
adc
xchg
pop
leave
xor
cmp
adc
dec
sahf
icebp
dec
fists
mov
and
lea
mov
add
data16
hlt
fidivl
outsl
jnp
outsl
xchg
pop
ds
dec
xchg
popa
pushf
aas
out
les
lret
cmp
and
and
inc
cmpsb
int
in
adc
cwtl
mov
mov
sarl
inc
lea
jnp
insl
xor
lahf
sbb
xchg
repz
push
cwtl
mov
xor
js
shlb
imul
pop
lea
scas
inc
gs
or
sti
pushf
push
cmp
lods
sbb
sbb
xchg
jno
jo
add
stc
pop
popf
mov
adc
and
jo
pop
cwtl
test
jne
daa
adc
cmp
sub
push
mov
repnz
imul
sub
mov
sub
cmp
sub
into
push
loope
inc
cmc
stc
popf
push
movsl
pop
mov
mov
mov
imulb
subl
inc
in
shrl
jo
les
and
mov
push
roll
in
jg
aas
les
add
sbb
pop
mov
mov
inc
mov
xor
scas
nop
jne
mov
enter
adc
xlat
jbe
xorl
fidivs
mov
ja
in
and
sub
clc
mov
add
mov
pusha
mov
push
mov
and
push
out
xchg
sbb
mov
pop
fnstcw
pop
lods
call
jmp
shlb
mov
out
sti
jnp
pop
cmp
jne
xchg
sahf
rolb
add
loopne
dec
aad
lock
cmpsl
shrl
test
and
mov
mov
jmp
movsb
xchg
sub
aad
dec
jae
or
lret
inc
in
lods
lcall
jns
cmpsl
pmulhuw
push
test
jge
and
data16
and
sub
in
xchg
or
push
mov
pop
sub
mov
inc
or
ja
in
adc
in
adc
xor
inc
std
jl
mov
mov
outsb
outsb
scas
mov
ljmp
outsl
repnz
outsl
adc
adc
jne
mov
fistpll
mov
cld
lcall
cmp
dec
dec
cmovns
xchg
adc
in
test
xor
mov
inc
dec
testl
and
je
lret
fldl
and
push
xlat
cmpsl
fiadds
pop
mov
dec
pusha
ret
mov
add
sub
push
sub
mov
stc
ret
mov
pop
sbb
mov
add
cmp
lcall
shll
mov
test
pop
adc
sarl
in
xchg
jns
imul
jle
jmp
cli
loop
dec
inc
mov
push
cs
shrl
mov
sbb
jnp
mov
cltd
ds
jne
dec
rorl
xor
lret
out
adc
cltd
aam
mov
push
mov
cmp
push
push
mov
cwtl
push
lods
xchg
das
mov
fsubs
xchg
sub
loopne
loop
jle
sbb
stc
jbe
shrb
pop
xor
xchg
outsb
addr16
hlt
jnp
adc
and
fmuls
mov
adc
jecxz
shlb
inc
xchg
ljmp
dec
daa
pusha
into
mov
into
in
jl
call
ss
in
je
cli
enter
out
jns
cwtl
adc
jo
mov
and
pushf
mov
dec
pop
xchg
adc
outsl
mov
lock
push
adc
out
adc
test
cmp
imul
enter
test
xor
mov
enter
sub
pop
adc
shll
shlb
dec
xor
push
add
std
gs
add
and
inc
jp,pn
in
or
add
inc
ficoms
ja
push
add
or
leave
xchg
pop
xor
and
inc
bound
icebp
xor
sbb
mov
mov
in
dec
add
sbb
jo
adc
icebp
fwait
sbb
push
jmp
ror
jno
jbe
aam
adc
fldcw
hlt
loope
je
jns
es
push
dec
pop
cmp
inc
rcr
inc
sub
shll
fwait
arpl
dec
dec
arpl
pop
xor
stos
lret
insl
or
or
mov
pop
dec
jmp
inc
std
pop
scas
ds
aam
cmpb
pop
ss
push
or
push
adc
mov
jo
jno
mov
test
xor
xchg
fisubs
push
fsubs
xor
mov
lahf
dec
in
iret
shll
lods
ljmp
xchg
pop
scas
mov
jecxz
cmpsb
dec
daa
outsb
or
dec
clc
lods
cmp
movsl
mov
std
pushf
pushf
lcall
sub
int
mov
int
push
loop
scas
fnsave
rorb
ss
dec
rorb
dec
stc
popa
and
in
xchg
aas
hlt
mov
push
fwait
hlt
in
ret
cmp
sub
shlb
inc
inc
xor
cmp
arpl
pop
insb
cmovbe
mov
sub
xchg
mov
adc
test
push
pop
cmc
rcrb
ds
gs
add
and
mov
cwtl
in
adc
ss
mov
xor
cmc
xor
ds
dec
ljmp
jl
pusha
inc
clc
or
adc
cmc
call
mov
jg
dec
sbb
lock
pop
adc
or
stos
outsl
nop
pop
or
popf
cli
cmpsl
outsb
mov
sbb
jns
sub
push
cld
sbb
push
add
aaa
lock
push
mov
lea
stc
cmp
jge
lcall
outsb
lahf
sbb
jg
ror
sti
xchg
mov
sbb
dec
js
pop
in
popa
push
xor
cmpsl
das
push
mov
cltd
leave
dec
inc
push
xorl
scas
add
stos
xor
popa
push
test
js
inc
pusha
cmp
rol
ficomps
push
cmp
insb
push
xor
lods
jmp
mov
jp
push
aad
push
mov
repz
addr16
jmp
inc
and
lret
popf
xchg
push
clc
aaa
add
and
dec
imul
cmp
mov
xor
lds
cmpsb
mov
ds
and
lds
cld
adcb
cld
inc
dec
add
popf
mov
xchg
pusha
outsb
add
mov
and
add
cmp
or
das
push
ds
in
adc
mov
inc
sub
testl
dec
fadd
mov
in
test
dec
aaa
add
push
cmovns
pop
icebp
lods
push
icebp
jecxz
sub
ljmp
or
out
inc
jns
push
mov
cmp
inc
inc
jg
loope
pop
jle
mov
cmpsb
js
pop
cwtl
cmpsb
call
daa
and
adc
mov
sahf
test
iret
dec
adc
lds
gs
dec
xchg
pop
dec
mov
jg
adc
xchg
sub
fnsave
mov
add
jo
mov
mov
and
repz
aad
out
subl
fs
or
jo
pop
mov
loope
adc
mov
ljmp
popa
jne
mulb
mov
into
inc
test
popf
enter
sub
lret
sub
sahf
adcl
out
test
fildll
jno
cs
sar
pop
xchg
jns
in
inc
dec
aas
xor
imul
mov
jg
inc
dec
scas
clc
shl
leave
pop
or
jg
scas
lret
adc
lock
repz
mov
aaa
mov
movsb
imulb
sub
fdivrp
lret
test
cmp
lret
iret
idiv
mov
mov
jbe
ss
adc
adc
pop
daa
lcall
adc
add
xchg
fdivrl
mov
jl
push
add
sbb
dec
cmp
test
clc
fsub
mov
inc
fsubr
dec
sub
aas
xchg
fwait
mov
pop
and
lock
data16
cs
lcall
fsubl
xchg
scas
xlat
outsb
xchg
cmp
jb
and
mov
insb
xchg
rcll
dec
xor
xchg
lea
fdivs
push
mov
jecxz
ljmp
fisttps
das
xor
jne
insb
sbb
and
into
out
mov
mov
es
pushf
lds
fs
adc
cmp
rcrl
inc
es
sbb
in
xlat
sarl
add
inc
call
jb
mov
add
mov
and
leave
and
mov
mov
lods
in
pop
pop
cs
add
lret
jmp
adc
mov
movsl
pop
movsb
adcb
sbb
push
mov
jne
daa
fsts
shll
adc
mov
mov
daa
jnp
into
jg
cmpsl
hlt
mov
popf
cmp
dec
pop
push
add
je
in
add
pop
jl
mov
and
subl
ret
pop
add
lea
cmp
jo
dec
addl
aaa
roll
loop
pop
mov
inc
repz
out
popa
mov
push
mov
xchg
ss
je
das
mov
mov
lcall
sbbl
sbb
aad
mov
mov
jbe
jecxz
pop
imul
test
xor
outsl
scas
mull
outsl
call
negl
js
out
jae
imul
cwtl
dec
das
mov
xor
pop
add
inc
ljmp
ja
jecxz
sbb
sub
add
fidivrs
dec
mov
adcb
icebp
jne
lea
mov
xchg
xchg
adc
add
inc
pop
sub
jmp
jns
shlb
sub
mov
pop
fadd
sbb
dec
out
push
sbb
inc
fwait
cmp
out
or
mov
mov
jecxz
jnp
mov
sbb
loope
jb
mov
out
cs
fadds
dec
mov
sbb
pop
sahf
xor
popl
mov
mov
leave
cmp
out
mov
dec
stos
jbe
ja
cli
jl
mov
push
mov
cmc
fbstp
push
inc
scas
test
push
fdecstp
imul
addl
fdiv
add
jge
inc
adc
fcompl
loope
sbb
xchg
dec
jns
ret
test
fidivl
push
aad
subb
pop
push
xor
pop
dec
into
fwait
jne
nop
push
add
popf
add
mov
jge
jl
dec
in
push
notl
mov
popf
ljmp
push
mov
test
mull
repnz
mov
pop
pop
inc
rclb
cmp
es
mov
dec
fwait
adc
and
jle
xchg
test
dec
pop
xchg
mov
fwait
aam
popa
imul
cmp
test
sbb
push
arpl
imull
and
scas
dec
cmp
jp
ja
into
mov
xor
and
cltd
nop
je
jp
dec
dec
add
push
pusha
ret
bound
jmp
pushf
mov
into
xchg
mov
ja
std
mov
push
subb
sahf
std
xlat
in
lea
lahf
push
cmc
or
lds
pop
adc
clc
inc
loop
cli
push
loop
sub
adc
fldenv
pop
cmp
fidivl
inc
and
dec
mov
mov
addr16
mov
enter
push
rol
or
lea
insb
add
mov
out
push
lret
mov
loop
mov
adc
cs
mov
aad
mov
jnp
mov
cmc
fidivs
or
mov
jbe
in
xchg
mov
es
sti
jle
mov
jl
jle
mov
jmp
out
xchg
xor
push
jge
jmp
bound
cmp
pushf
rcll
jle
out
cmp
jne
mov
mov
cmp
mov
aas
xor
sahf
loop
aad
ret
jmp
mov
mov
imul
cmp
out
inc
fidivrl
xor
xor
dec
mov
data16
ficompl
fcmovne
rorl
std
mov
adc
mov
imul
jns
dec
in
lret
xchg
sub
cmp
xchg
outsl
and
arpl
push
test
cltd
push
mov
mov
mov
cmpsl
mov
outsb
mov
jge
adc
hlt
sbb
shlb
das
outsl
out
scas
je
mov
push
push
fwait
push
je
int3
sti
dec
daa
jns
loop
cmp
out
dec
xchg
testb
enter
int
test
loopne
push
frstor
les
rcrb
xlat
ret
xor
mov
cmpsl
ds
xor
fidivrs
call
push
sbb
mov
in
test
bound
push
icebp
sbb
mov
rcl
ljmp
in
enter
cmp
dec
push
gs
adc
or
out
adc
pop
paddusb
jle
dec
adc
scas
add
lds
mov
loopne
xchg
jecxz
or
push
mov
lret
adc
dec
sbb
stos
dec
stc
in
jnp
fstpt
mov
jns
cmp
mov
inc
mov
xor
sub
lahf
int3
andl
xor
xchg
fimuls
dec
push
call
iret
fst
xchg
data16
adc
je
jae
into
cltd
xor
xor
push
sbb
xor
mov
mov
sub
inc
cmp
pop
and
push
sbb
addr16
or
add
imul
push
or
lods
mov
pop
xor
sbb
jb
mov
mov
into
xchg
add
or
pop
cmp
gs
jnp
std
iret
xlat
jno
push
pop
xchg
jno
mov
xchg
mov
movsl
leave
sbb
or
jmp
push
std
test
cmpsb
mov
aas
push
lcall
cmp
es
jg
fldl
mov
lods
call
sub
mov
call
push
cmpb
and
decb
fstl
test
inc
dec
mov
jecxz
fdivrs
mov
mov
jae
push
fs
push
pusha
out
inc
les
mov
bound
mov
xor
outsb
rol
or
insl
mov
ss
push
pop
scas
pop
sub
sbb
loopne
add
adc
inc
nop
and
int3
repz
fldenv
adc
sar
sbb
fnsave
out
cld
jbe
fstpt
test
test
lret
repnz
popa
gs
test
cmp
jmp
js
xchg
in
xchg
ret
lret
ficompl
popf
sti
and
dec
mov
cmp
pop
inc
jmp
or
arpl
sbb
fistl
jmp
fdivrl
dec
addr16
stos
push
jecxz
mov
inc
mov
jne
xorb
ds
daa
mov
or
push
dec
in
aaa
movsb
mov
xor
or
out
into
inc
pop
in
loope
in
sbb
scas
icebp
mov
sbb
enter
mov
popa
mov
mov
cmp
adc
repnz
and
loope
mov
outsl
mov
int3
pusha
dec
in
test
xor
int3
shll
ficomps
or
cmp
and
inc
pop
ror
bound
aad
push
movsb
mov
jp
popa
cwtl
adc
int3
test
arpl
jg
mov
sbb
mov
test
imul
push
dec
mov
cmp
clc
jmp
add
jl
fcoms
mov
in
outsl
dec
xchg
dec
adc
inc
jne
daa
fcom
push
and
or
xor
pop
mov
enter
or
mov
dec
js
lea
xchg
add
sti
mov
addr16
cmp
cmp
and
in
gs
push
mov
mov
pop
mov
add
cmpsl
jns
or
scas
sete
test
ret
lock
mov
jnp
jecxz
dec
inc
pop
psllq
sbb
jb
fisttpll
test
mov
xor
in
mov
push
inc
or
sbb
ret
leave
andl
pop
in
mov
mov
adc
data16
cmpsl
mov
mov
and
loopne
xchg
mov
push
ja
or
ja
fwait
mov
repnz
fwait
lods
mov
inc
adc
leave
arpl
mov
dec
or
rclb
dec
sti
fsubl
inc
cli
and
addr16
outsl
inc
sbb
xchg
push
in
push
sarb
jae
xchg
sub
sub
scas
inc
outsl
popa
mov
pusha
add
not
sbb
out
aam
lods
and
pop
dec
lds
cmpb
mov
xor
imul
aaa
add
cltd
cli
je
mov
fadds
subb
andl
lcall
add
arpl
rcl
arpl
shr
push
inc
and
movups
rol
xor
xchg
adc
jnp
pop
gs
sbb
dec
aad
or
stc
call
movsb
shl
pushf
pop
mov
out
ja
mov
test
push
stos
lahf
insl
cs
mov
and
lea
cmp
subb
xor
push
jne
adc
dec
ljmp
mov
ret
mov
lret
into
cmp
sarb
fwait
in
xor
inc
dec
pushf
push
xchg
and
sbb
or
outsb
ret
push
sub
inc
xchg
push
fs
std
jne
jmp
psadbw
xchg
lahf
les
xchg
iret
out
xchg
mov
loop
mov
js
popf
ret
subl
aam
mov
fcom
sbb
dec
loope
fisttps
or
sarb
sub
leave
inc
out
pop
mov
sarl
push
jmp
xlat
shll
add
iret
sti
lret
xor
mov
mov
cwtl
das
movsl
cmc
sarb
test
loop
dec
add
mov
ja
imul
out
rcrb
sbb
mov
sahf
sub
sbb
xchg
mov
mov
dec
ficompl
dec
push
cli
in
mov
push
mov
mov
out
sarb
push
pop
ret
or
sub
add
inc
push
push
push
fsubs
push
fcmovnbe
subb
in
push
aad
inc
enter
fwait
scas
jb
sti
add
mov
popa
cmc
or
movsb
xor
scas
stos
mov
mov
sub
xor
or
lret
or
sbb
dec
push
shrl
pop
adc
gs
add
test
mov
stos
test
daa
repz
or
lds
data16
in
int
push
gs
mov
aas
mov
lret
inc
push
sti
pop
iret
xor
lods
adc
xorb
repnz
sub
sub
jb
sbbb
mov
and
xor
and
sub
fimull
sbb
lock
loope
cs
or
cmc
sbb
js
push
std
jnp
cltd
call
xchg
data16
and
lcall
adc
fwait
js
data16
and
rclb
mov
jbe
fcmovbe
outsl
cmpsl
into
popa
rolb
stc
ja
loope
sti
or
mov
xor
xor
dec
mov
push
insb
mov
aad
mov
adc
xchg
notb
sbb
jle
jno
inc
push
sub
xchg
out
into
pop
adc
fnstsw
addb
sub
iret
int
jge
fmulp
stos
jo
add
in
dec
outsb
jmp
pushf
mov
jge
pop
push
add
imul
fs
fwait
or
add
push
lock
dec
andl
cmp
sahf
cld
mov
out
jnp
loop
pop
cmpsb
mov
cmp
sub
ret
pop
mov
adc
pop
lcall
jge
stc
movsl
jbe
jb
cmp
aaa
mov
mov
es
push
lahf
dec
rcll
ss
inc
out
dec
mov
mov
iret
pop
push
nop
xor
add
lock
icebp
jno
ret
mov
add
loope
mov
addl
lock
jo
xchg
inc
cli
mov
jg
jge
test
in
mov
cmp
stos
jg
sbb
sar
xor
mov
xorb
lods
out
xchg
adc
in
dec
test
mov
or
or
add
insl
mov
jle
int3
pop
dec
movb
sbb
or
inc
mov
ret
nop
int
mov
ljmp
cmp
xor
fisubs
sbb
movsl
popl
or
jnp
ficompl
jb
pop
adc
test
insl
push
jg
sub
pusha
subl
popf
int
or
push
ds
and
outsb
icebp
inc
add
pusha
ficoms
xchg
or
call
mov
add
mov
fimuls
in
imul
and
adc
dec
icebp
xchg
dec
xchg
jnp
mov
xchg
jno
cli
and
rcrb
stos
inc
divb
sub
push
andl
scas
movsb
aas
andb
jnp
pushf
es
mov
xchg
test
test
inc
xor
inc
ljmp
jp
mov
inc
push
js
xchg
cwtl
lods
mov
xor
in
in
push
sub
aas
fwait
cmpsl
arpl
scas
mov
cmpsb
ja
pop
repnz
add
sbb
xchg
cwtl
mov
cli
ret
rclb
push
dec
out
in
mov
cld
xchg
lahf
and
pushf
icebp
xchg
adc
jae
loope
loopne
addr16
std
xchg
pop
and
push
dec
pop
insb
je
sub
mov
adc
mov
in
mov
pop
loopne
cmp
xchg
call
in
test
fidivs
out
out
shrb
int3
xchg
repz
sbb
and
jnp
scas
mov
negl
cs
pop
fwait
push
cli
xchg
add
and
mov
sbb
cmp
aaa
pop
ljmp
outsl
ljmp
ss
and
jge
testl
mov
sub
mov
xor
jmp
pop
and
mov
cmp
push
fwait
cli
jnp
xchg
xchg
cmp
dec
or
mov
sti
dec
lods
mov
xchg
jmp
mov
addr16
xor
xor
or
mov
mov
aam
push
scas
sbb
cmp
pop
pop
enter
push
add
push
mov
cmp
enter
iret
adc
xor
sub
push
loop
mov
inc
pop
inc
cmova
dec
xchg
rcr
cmp
neg
daa
jnp
and
jp
xchg
xchg
int3
movsb
loopne
fsubrs
shll
lds
adcb
and
adc
loopne
std
test
add
lock
in
outsl
xchg
notl
mov
push
stc
movsb
fsts
mov
in
mov
nop
pushf
push
inc
mov
pop
dec
imul
roll
lods
mov
fcmovbe
int3
sub
fidivl
or
jae
sbb
mov
aad
out
add
icebp
mov
cmpsl
xor
dec
aam
rclb
or
aam
jmp
sbb
fwait
roll
dec
xor
xor
loope
sbb
xchg
jno
mov
mov
jno
lock
dec
fbstp
inc
sbb
repnz
insl
mov
std
daa
rcll
addb
pop
cld
stos
xchg
subb
ljmp
xchg
and
dec
in
and
subl
mov
or
mov
xor
and
pop
cwtl
ss
lods
pushf
ret
fnsave
cmpl
mov
ret
and
popa
xchg
pop
sub
stos
xchg
push
ror
iret
test
fmuls
xchg
notb
or
es
pop
std
fwait
ret
or
xchg
enter
bnd
cmp
lea
ljmp
dec
sbb
sbb
lret
sub
lea
jmp
repz
fcoml
sbb
and
and
sbb
adc
or
push
imul
test
call
addr16
pusha
pop
sub
jbe
add
xchg
mov
cltd
rcll
cltd
es
fistps
mov
sbbb
enter
ss
dec
xor
mov
sti
jb
out
out
ljmp
dec
pop
mov
push
insl
pop
fldl
fdivrl
jno
sub
sub
sbbb
ror
mov
popf
and
xlat
lock
pop
xchg
aas
ja
fwait
leave
test
in
push
in
xchg
xor
aad
mov
push
pusha
mov
andl
dec
sbb
xchg
sbb
sbb
ret
cli
shll
inc
mov
js
ffree
mov
out
mov
jns
jne
jp
mov
lds
xchg
in
add
cmp
gs
adc
sbb
xor
adc
adcb
pop
fisubrl
fmull
out
fldcw
out
addr16
test
bnd
in
jecxz
cmc
test
adc
shl
stos
lret
mov
pop
es
jmp
les
xchg
test
inc
call
jl
adc
adc
xchg
imul
fs
cmp
or
pop
cmovo
jno
repz
dec
rcrl
xchg
push
ffree
jnp
aaa
sub
fdivl
nop
int3
out
ret
popl
in
dec
wrmsr
push
mul
push
into
test
out
stc
test
mov
shlb
iret
pop
lods
lods
test
pop
daa
dec
inc
loop
pop
out
cmc
push
mov
jmp
cltd
scas
cli
mov
push
arpl
fcmovnbe
pop
arpl
xchg
les
xchg
je
dec
shl
adc
sub
push
js
pop
cs
push
pop
pusha
shrl
pop
loopne
sbb
movsl
out
mov
xor
lds
mov
sbb
cs
push
sbb
cmp
adc
sub
adc
lock
shll
mov
or
test
rcr
clc
int3
mov
mov
scas
imul
test
cwtl
mov
movsb
sbb
int3
mov
mov
in
mov
mov
ret
sub
aad
sbb
add
fwait
hlt
insl
adc
xchg
push
xchg
cmp
cld
push
dec
sbb
fs
std
pusha
push
movsl
mov
push
sbb
jno
clc
call
xchg
scas
lea
dec
fisttpl
lock
ljmp
inc
loop
xchg
out
cli
mov
add
mov
imull
xchg
xchg
insl
inc
lret
stc
or
push
call
cmp
out
xchg
inc
loop
jecxz
jo
cwtl
jecxz
cwtl
out
rorb
xchg
adc
and
addr16
or
loopne
push
repnz
pop
pop
mov
cltd
xor
stc
jo
dec
pushf
xchg
addb
imul
adc
out
cmc
cmc
mov
daa
and
inc
sub
test
inc
int
xchg
pop
push
aad
es
adc
addr16
xchg
int
call
adc
paddusb
nop
std
and
cmpl
adc
les
inc
jo
popf
jbe
mov
xchg
pop
nop
cs
ss
mov
or
loopne
xchg
arpl
add
and
mov
out
push
dec
push
cmp
movsl
test
jbe
shl
adc
popf
mov
or
lods
je
jmp
pop
xor
mov
scas
idivl
lea
or
stos
fmull
pop
inc
sub
mov
sti
sub
xchg
xchg
mov
cmp
rcrl
test
not
mov
mov
imul
sahf
mov
push
xchg
push
xor
and
mov
inc
jle
pop
out
xchg
pop
sbb
loopne
je
outsl
fimuls
arpl
popa
les
movsl
mov
pop
add
insl
pop
add
rorl
adc
push
inc
pop
cmp
orl
lret
ffree
fwait
lretw
sarb
inc
icebp
sub
sbb
ds
push
out
fdivrl
call
iret
cmpsl
push
cld
and
add
pop
lret
cmpsl
addr16
stos
cmpsb
mov
dec
push
mov
cmp
lds
gs
testb
jno
push
mul
sub
pop
lods
and
sub
adc
xor
mov
xor
inc
pushf
xor
imul
jo
data16
jge
fcoms
stos
lods
dec
jo
xlat
jle
jae
or
push
repnz
into
iret
cmp
les
jnp
mov
sbb
jg
xorb
lret
jnp
fidivl
jo
mov
stos
std
out
pushf
push
int3
lods
call
add
pcmpgtb
int
dec
or
imul
jge
mov
pop
movsl
dec
out
sti
push
ss
fildll
test
mov
sub
call
imul
lds
shlb
mov
pop
out
ss
pop
and
arpl
jle
ret
imul
testb
xor
fwait
inc
aam
sbb
sbb
rol
mov
inc
cmc
and
cmp
mov
xor
sbb
rcl
aaa
cmp
xor
mov
cwtl
ret
fstl
pop
loope
xor
cmp
imul
sbb
dec
add
leave
or
loopne
scas
clc
lods
stc
in
inc
add
stos
mov
data16
pop
int
mov
mov
fisubrl
popf
pushf
pop
addl
xor
rcrb
pop
enter
sub
sub
outsl
add
inc
dec
and
xor
adc
push
cmc
jl
jno
jmp
push
int3
and
scas
sbb
sbb
sub
mov
out
cmc
std
jnp
dec
scas
jg
pushf
mov
fcmovbe
outsl
push
pop
pusha
loop
lods
cmp
sub
addr16
popf
push
ljmp
jb
je
les
add
sub
std
out
pushf
add
sub
fcmovbe
and
dec
push
lods
dec
ljmp
cli
clc
out
fs
dec
aaa
dec
gs
imul
mov
jp
mov
fcomps
ljmp
fldt
push
push
push
cmp
repnz
xchg
out
test
lods
inc
stos
jl
mov
icebp
mov
xchg
aaa
sub
push
pusha
mov
adc
hlt
jp
and
int
lret
out
mov
ret
jbe
adc
sub
mov
lods
out
stos
cmp
mov
adc
cmpsb
or
mov
fs
mov
push
or
in
mov
icebp
sbb
xchg
inc
ss
push
mov
mov
dec
test
xchg
jae
dec
mov
push
sub
push
inc
in
push
jo
inc
mov
xlat
jnp
lcall
sub
test
mov
aas
lods
pushf
fucomp
aaa
sarl
sarb
jmp
or
mov
lods
je
sbb
and
ret
cmp
and
cmp
jbe
cmp
xor
mov
cs
pop
pop
xchg
test
lods
sahf
mov
sub
and
push
push
out
mov
mov
mov
pop
mov
lret
rol
orb
and
push
mov
mov
inc
pop
es
ret
into
out
pop
sub
aaa
cmp
sub
mov
popf
sub
cmpsb
or
daa
pop
xchg
adc
mov
cmp
sbb
pop
sbb
gs
into
xchg
idivb
arpl
adc
or
std
jne
mov
mov
inc
fucomp
mov
push
xchg
icebp
cwtl
adc
fists
pushf
jle
fidivrl
lcall
or
ret
add
jb
add
decb
dec
test
pop
mov
dec
clc
sbb
sub
cmp
cli
push
ficomps
mov
inc
clc
push
loopne
ror
sahf
aad
sti
call
aas
jge
mov
xorb
sahf
mov
push
or
scas
aaa
inc
sbb
xchg
push
data16
jge
pop
mov
mov
leave
adc
lock
and
dec
inc
mov
rorb
jg
push
pushf
mov
jl
test
stos
mov
mov
fiaddl
pop
cmp
popa
adc
lcall
out
rcrb
mov
call
mov
lahf
lods
pop
sbb
xor
mov
enter
mov
lret
out
orb
push
pop
dec
popw
xor
fwait
xlat
xchg
jle
jns
out
xor
xorb
mov
xchg
adc
ljmp
inc
insl
inc
add
cmc
and
dec
mov
xor
adc
sub
cs
inc
pop
jg
fisubl
xchg
out
cmp
loopne
dec
jp
sahf
je
dec
adc
cltd
push
js
ljmp
push
cli
inc
pop
stos
aaa
daa
mov
push
sbb
lret
addr16
aas
stc
lcall
mov
outsl
inc
mov
cmp
insb
pop
pop
seta
jae
ret
sub
out
lcall
fwait
outsl
jbe
jno
jle
sbb
pop
cwtl
test
aas
test
popf
repnz
ss
lcall
push
jecxz
inc
popa
sbb
lcall
dec
mov
dec
or
test
in
addr16
imul
xorl
cltd
mov
inc
jno
xor
sar
cli
mov
rorb
lods
dec
mov
sub
js
jle
sbb
ret
mov
mov
rorl
add
jno
sbb
push
iret
hlt
jle
sub
cld
inc
push
flds
push
or
sbb
push
cwtl
inc
mov
aas
dec
ja
add
jl
pop
or
popa
jge
jbe
mov
shrl
mov
lahf
mov
jnp
xchg
aam
jecxz
iret
hlt
outsl
add
mov
cmovns
ja
jb
xor
ja
aam
or
cmpl
pavgb
push
jge
aad
dec
mov
les
jns
cmp
in
dec
xchg
lea
inc
std
call
in
mov
loop
daa
dec
jmp
sub
adc
fs
xchg
insb
in
cmp
outsl
into
pop
jl
or
xchg
push
push
and
iret
sti
push
mov
loope
insl
les
js
leave
jle
call
js
fcoms
movsl
fnstenv
pop
lret
das
mov
cmp
out
mov
dec
xchg
hlt
popf
mov
dec
pop
shrb
inc
push
aad
push
fnstcw
aam
sbb
pop
movsl
nop
push
inc
orb
and
das
sbb
adc
sbb
aam
and
dec
mov
movsl
pop
movsb
add
ja
xor
adc
and
push
pop
inc
mov
insl
shll
aam
pop
subb
jno
icebp
lea
shrl
mov
int3
add
jmp
mov
divb
sbb
mov
push
shll
sahf
push
dec
pop
pop
jle
movsl
pop
loopne
adc
pushf
sub
and
in
stos
cli
xor
dec
xchg
mov
jno
out
adc
loop
mov
inc
stos
fmulp
jo
push
addl
and
mov
mov
adc
or
xor
dec
enter
fidivl
repnz
sub
cli
xor
in
sbb
pop
es
fcomps
push
rorb
push
iret
mov
pop
pop
pop
lods
or
fbld
mov
or
adc
sub
test
cli
ret
movsb
dec
jmp
sbb
adc
pop
sub
jo
and
cmp
and
dec
scas
cmpsb
pushf
xor
sub
xchg
call
sub
insb
lret
jg
adc
daa
sbb
imul
mov
bound
insl
aas
sub
adc
inc
sub
scas
cmp
pop
fdivs
push
es
mov
sbb
push
cmp
sub
push
mov
out
cmpsb
std
mov
xlat
arpl
icebp
jns
add
ret
xor
push
and
repnz
or
push
orb
shl
cmp
inc
push
jg
and
push
int3
mov
sarb
sahf
jecxz
mov
or
arpl
and
mov
inc
mov
es
jbe
mov
mov
seta
pop
ja
daa
inc
inc
bound
add
adc
add
mov
insb
mov
cmp
lret
inc
stc
shl
inc
rcr
jecxz
xor
sbb
mov
cmp
cmpsl
and
int3
or
leave
add
lock
fisubl
push
bsr
test
dec
scas
xchg
je
xor
aad
mov
ds
and
dec
js
in
sub
cltd
mov
outsl
fsubrp
adc
pop
jo
cmp
sti
jl
outsl
sbbl
sbb
popa
xchg
mov
inc
adcb
pop
add
adc
mov
adc
shl
sbb
sahf
jns
mov
mov
pop
and
clc
pop
mov
inc
add
popf
pmulhw
clc
pusha
push
std
jnp
and
fidivrl
xchg
sub
push
xchg
push
push
jl
mov
lea
xor
test
mov
pop
enter
adc
adc
std
or
xlat
inc
xor
adc
and
jmp
das
pop
ljmp
cmp
pop
inc
add
mov
jl
insb
and
pop
loop
loope
jmp
sbb
shrl
pop
sub
iret
in
cwtl
dec
imul
sahf
pop
pop
push
arpl
xchg
cmc
pop
int3
js
out
sub
xchg
sti
xor
and
jg
cmp
dec
sub
out
fadd
into
xor
mov
fwait
ds
xchg
mov
ret
insl
jg
negl
cmp
lcall
orb
test
cmp
adc
rolb
and
sti
inc
hlt
ds
lock
cltd
in
or
call
inc
mov
notl
or
mov
xchg
pop
push
cmp
hlt
movntps
sbb
jl
cmp
pusha
dec
pop
push
dec
inc
mov
je
test
ds
mov
pop
roll
sbb
call
inc
call
cmp
push
xor
mov
sub
rorb
fisubrs
ljmp
dec
xchg
mov
push
adc
int3
xchg
mov
imul
xchg
add
enter
fs
scas
mov
arpl
int3
in
jge
pop
mov
and
fbstp
jge
lea
cmp
pop
inc
mov
xchg
pop
or
js
nop
inc
ds
nop
ret
cmc
cld
fwait
popf
out
adc
call
sub
cmp
aas
inc
mov
mov
mov
mov
jae
lret
ljmp
int3
sarb
es
mov
sub
insl
jno
dec
repz
std
sbb
loopne
mul
pop
test
repz
loope
mov
pop
inc
cli
ror
push
leave
das
push
out
test
adc
in
rolb
notl
mov
and
insb
inc
and
outsb
xor
es
adc
daa
xor
or
out
sahf
lods
xchg
cltd
andl
mov
jg
dec
and
jb
mov
xchg
xchg
mov
int3
addr16
xchg
insl
fidivrs
imul
jg
jp
push
mov
push
xor
xchg
push
cmp
mov
inc
xchg
adc
push
jmp
push
xchg
xchg
int
jnp
pushf
sahf
mov
cmp
or
mov
adcl
out
sbb
sbb
fildll
arpl
lahf
mov
jo
out
fmull
sarb
mov
cwtl
mov
out
inc
iret
sub
cmp
push
adc
lea
and
cli
xchg
shlb
daa
in
je
jnp
mov
fcomps
movsl
mov
daa
daa
loopne
xchg
adc
pop
xorl
les
and
pop
cs
aas
jge
fcompl
cwtl
xor
repnz
in
xchg
out
icebp
dec
pop
das
mov
in
icebp
adcb
jmp
mov
testb
sti
sub
xchg
call
fdivr
mov
mov
lds
mov
fwait
sbb
fwait
iret
or
push
fstl
notl
lahf
out
test
adc
decb
scas
test
std
sbb
sbb
je
out
xlat
adc
loopne
dec
jbe
xchg
pop
lea
sub
push
fldenv
cmc
icebp
add
or
lret
push
xchg
mov
stos
push
inc
in
inc
mov
push
int
repnz
aad
xor
or
sti
push
pop
mov
xor
rcll
addb
pop
cwtl
dec
ret
ret
inc
loopne
jo
push
xor
xchg
inc
cmpsb
ja,pt
push
lret
shr
mov
shlb
movl
mov
xor
mov
ret
or
rcl
in
in
popa
xchg
rol
fiaddl
insl
and
lds
jp
push
xchg
aam
rcrb
xchg
lret
mov
popa
in
orl
inc
clc
ljmp
adc
stos
jge
rorb
out
negb
mov
or
ret
inc
addr16
pop
test
icebp
lea
shrb
jo
pandn
xor
mov
cmp
jecxz
nop
and
int
add
adc
dec
fldcw
mov
lret
jnp
dec
mov
dec
jl
add
or
out
loopne
sbb
sub
aaa
int
ja
adc
icebp
insb
jbe
lret
xchg
mov
sub
roll
xchg
or
push
outsb
mov
pop
nop
mov
mov
clc
insl
or
sarb
imul
xchg
mov
adc
dec
ss
jbe
negl
iret
daa
adc
jo
push
aam
pop
roll
jo
adc
cmp
xchg
test
inc
outsl
mov
test
push
int3
pop
mov
mov
clc
cmpsb
mov
sub
jo
jge
or
mov
push
jmp
mov
mov
jnp
lcall
xlat
and
ja
int3
pop
arpl
lods
dec
jmp
add
outsb
mov
fildl
push
add
rol
ja
movsl
imul
xchg
loop
mov
rcll
pushl
jbe
cmp
push
test
xlat
lcall
adc
or
lahf
jne
aas
call
or
inc
scas
lods
out
imull
jo
cmpsb
scas
pop
xor
jle
jmp
mov
rcr
dec
push
out
cmp
test
in
mov
lock
stos
sub
push
xchg
out
and
insb
push
loope
jae
inc
int3
add
js
jp
xorl
jmp
jnp
push
sbb
sub
xor
int
in
mov
out
gs
dec
pop
xor
test
daa
pop
push
add
push
xchg
ss
loope
popf
xchg
mov
push
lea
call
maxps
push
shlb
xchg
dec
xchg
je
inc
add
jne
outsb
or
push
clc
stc
repnz
jbe
adc
mov
arpl
test
xor
push
and
sbb
lret
stc
lahf
mov
xor
sbb
arpl
imul
sub
mov
lds
cmp
popa
scas
in
add
inc
inc
xchg
mov
sbb
mov
mov
adc
clc
jl
xchg
in
je
shl
addb
jo
daa
shlb
pop
imul
mov
repz
test
or
sbb
adc
popf
insl
cmp
sub
or
jmp
xor
insb
sub
loop
out
pop
fidivl
adc
pop
mov
dec
rolb
and
pop
jl
cmp
xchg
xchg
outsl
xlat
pop
adc
mov
mov
fdivl
mov
rorl
lods
xor
adc
xchg
xchg
push
xchg
dec
pop
shlb
dec
push
cmpsl
aas
inc
pop
lods
cmpsb
push
out
cmc
icebp
pop
inc
xor
movsb
xchg
mov
cld
fisttps
scas
or
stos
inc
xorb
dec
push
xchg
jle
jp
sbb
cmc
frstor
rcll
inc
sub
and
xor
inc
mov
dec
jmp
dec
jecxz
daa
dec
mov
fisubs
loope
scas
and
lods
sub
popa
cmp
je
push
lcall
daa
add
je
add
js
sub
ljmp
lcall
shrw
idivb
pop
mov
lods
xor
bound
cmp
out
inc
outsb
jmp
loopne
dec
fsubl
sub
xchg
das
jge
mov
add
and
ja
cli
fidivrl
in
out
sbb
mov
ret
mov
loope
ljmp
jne
int
and
push
scas
cmp
push
fs
adc
fnstcw
mov
fbld
mov
orb
xchg
das
sahf
mov
mov
xor
fcmovne
in
or
ja
or
push
sub
mov
cmp
sti
push
out
sbb
ljmp
into
mov
inc
jno
inc
lcall
in
into
scas
icebp
jge
or
mov
cmp
sub
mov
pop
shll
in
jae
pop
adc
dec
ret
lods
inc
ss
jg
push
movsb
fldenv
mov
xor
push
dec
jnp
push
test
mov
mov
push
loop
push
cs
mov
and
mov
js
fstsw
dec
sbb
jb
sbb
mov
mov
in
aaa
sahf
jle
xchg
aas
repz
cld
push
push
xchg
xor
cmpsl
pop
cs
shrb
in
clc
add
dec
lea
xlat
jne
sbb
cld
lods
sub
sbb
mov
xchg
dec
sub
shll
and
out
arpl
gs
adc
icebp
and
sahf
mov
int3
stc
pop
or
push
andl
xchg
mov
loope
inc
inc
imul
pop
lods
ret
cwtl
and
bound
lahf
imul
adc
mov
in
push
enter
in
mov
cmpsb
xor
xchg
aam
jmp
cwtl
mov
mov
xchg
pop
jne
cmp
mov
lret
sub
xchg
imul
adc
sub
test
jno
push
hlt
movsl
jle
sub
lcall
cltd
ss
mov
inc
push
jnp
mov
loopne
pop
les
out
pop
lock
cwtl
cwtl
shlb
les
rorl
pop
dec
data16
pop
hlt
movsl
out
test
enter
test
and
adc
aad
cmp
xor
xchg
rcr
js
cmpsb
popf
int
outsb
jl
cli
aam
jo
pop
sub
or
fdivrl
stc
shll
xchg
mov
es
lret
adc
daa
fwait
sub
inc
dec
outsb
stc
data16
push
push
sub
xchg
dec
xor
sub
inc
fs
aad
rclb
popw
flds
dec
pop
in
cmp
xchg
adcl
shrb
or
aad
lcall
mov
xor
jno
shlb
push
out
scas
int3
ss
js
push
jmp
jg
jl
jns
mov
mov
ljmp
sti
ja
aas
mov
dec
sbbb
dec
rcrb
ficoms
inc
cli
add
add
cmc
bound
add
or
mov
lods
les
xor
inc
xchg
pushf
inc
es
mov
jg
lcall
out
sbb
mov
and
mov
leave
or
jnp
push
push
sub
ja
in
stos
hlt
scas
xor
push
clc
sbb
ja
ss
je
pop
sbb
inc
push
aad
divl
inc
dec
or
gs
lods
ljmp
and
push
inc
push
or
add
inc
dec
mov
mov
stos
dec
or
push
pop
xchg
es
jl
add
popa
sbb
sub
stos
pop
adc
ret
mov
fsubl
mov
jnp
lock
incl
mov
iret
insb
push
test
add
out
and
dec
sub
sub
lahf
imul
movsl
lret
fwait
enter
cmova
or
inc
daa
xor
xchg
add
movsb
clc
js
aad
jb
add
push
sub
mov
push
mov
test
push
jne
jp
push
jmp
rolb
aad
mov
pusha
ljmp
dec
jp
and
dec
cmp
push
inc
xlat
icebp
stc
popf
add
and
sub
fldcw
gs
mov
addr16
push
and
sti
mov
bndstx
or
mov
stos
adc
inc
aam
adc
ret
jle
pop
mov
pop
and
lods
ret
fstpl
adc
push
mov
inc
jo
js,pn
dec
fsubrs
push
push
mov
push
sub
shl
jle
mov
mov
mov
pop
xor
sub
mov
roll
filds
aaa
aas
cld
test
lods
mov
pop
mov
xchg
mov
mov
arpl
xchg
dec
clc
movsl
adc
mov
scas
add
in
add
xchg
push
sub
icebp
push
xor
xchg
in
imul
mov
lcall
push
std
sbb
stc
sbb
lretw
xchg
out
fistpl
push
fnstcw
fwait
mov
ret
xor
xor
or
sub
adc
mov
repnz
jp
incb
pop
add
mov
int
xor
jge
mov
cli
or
iret
cmp
loop
lods
pop
adc
out
fistps
mov
fsub
and
mov
daa
jo
sub
cli
out
push
push
xchg
mov
sahf
jnp
xchg
mov
lret
cmp
out
pop
pop
das
pop
cmp
mov
adc
lcall
xchg
xchg
dec
pop
pop
pushf
loope
scas
movsb
pop
adc
inc
jae
or
mov
sbbb
fstl
push
cmp
mov
sub
mov
repz
int3
add
mov
ljmp
mov
add
cmpsb
pop
les
addr16
mov
adc
and
hlt
jmp
daa
int3
jge
sub
ficoms
mov
lds
je
stc
mov
jg
mov
fistl
jno
icebp
andb
jns
mov
rorl
mov
pop
jbe
loope
push
dec
mov
mov
shrl
dec
cld
inc
jnp
sbb
pop
xchg
pushl
ficompl
cmpb
rcl
into
cmp
push
add
sub
inc
adc
push
push
jg
jno
inc
andl
lea
popf
jo
pop
fwait
xor
sub
test
jp
add
data16
or
aas
fiadds
xor
or
cwtl
inc
push
outsl
shrb
mov
lods
add
sub
jnp
arpl
jnp
int
and
jb
sbb
jns
add
hlt
sahf
jo
dec
xor
add
xchg
ret
lea
inc
mov
push
cmp
inc
cmpsb
lds
sbb
movsb
and
sahf
or
mov
je
rorb
mov
inc
jno
xchg
mov
into
mov
out
xchg
or
adcl
test
fmull
stos
dec
pop
xor
shrb
clc
or
and
lret
test
mov
lea
mov
insb
dec
decb
mov
cs
sahf
loope
out
imul
dec
lret
push
adc
pushf
ljmp
sub
int3
pop
push
test
xchg
subb
mov
push
stos
daa
pop
test
cld
xchg
aam
pop
lret
outsl
pop
into
xchg
pop
sbb
xchg
arpl
shrl
out
cmp
outsl
push
lock
add
jne
fdiv
daa
aad
fsubp
jne
mov
jo
mov
jno
mov
inc
scas
add
ficoml
jno
pop
xchg
jge
adc
mov
fs
lret
inc
dec
or
dec
adc
or
enter
xchg
cmp
aas
mov
ljmp
out
mov
pop
stc
mov
in
loop
pop
shrb
stc
sub
in
add
pop
jae
call
inc
and
mov
dec
xor
pop
mov
adc
sub
dec
insb
add
adc
mov
push
or
xor
adc
mov
mov
push
sbb
rolb
leave
std
dec
imul
dec
out
ss
fcomip
lea
pop
jg
sub
in
fidivl
pop
xor
inc
and
sbb
push
jmp
scas
push
pusha
les
inc
jb
pop
cmpb
push
fst
aam
flds
lods
mulb
arpl
insl
enter
hlt
mov
mov
fldt
cmp
inc
dec
xchg
inc
xlat
test
in
cmp
jbe
add
test
lret
out
jb
ljmp
in
jl
or
roll
testl
push
add
push
sub
mov
sbbb
cs
and
sub
add
shl
xchg
movsb
enter
es
aad
addb
mov
xchg
sbb
idivl
insb
jo
fimull
ja
push
sbb
sub
or
pop
sarb
mov
pop
sbb
clc
mov
testl
rol
and
jnp
sub
rcl
daa
cwtl
in
mov
enter
dec
pop
fldl
mov
inc
fcompl
stos
sbb
mov
mov
std
imul
rorl
ljmp
shrb
in
xchg
adc
fsub
sbb
adc
fisubrs
stos
inc
outsl
mov
mov
add
add
xchg
sbb
mov
jmp
sbb
adc
mov
inc
fnsave
push
dec
mov
jp
dec
in
jnp
add
cltd
popa
pop
adc
adc
cld
ds
rcrl
xchg
scas
mov
xchg
pop
mov
inc
arpl
cli
and
popfw
cs
and
rep
inc
sar
out
xor
les
xchg
or
inc
dec
mov
pop
cmp
push
int
adc
dec
cmc
fcmovnb
lods
mov
loope
insb
xor
arpl
inc
xchg
std
dec
add
mov
xchg
fs
mov
test
aas
sbb
adc
subl
outsb
and
dec
hlt
and
jo
add
out
mov
cmp
pop
pop
cmp
cmp
mov
lahf
xchg
insl
jge
ffree
imul
out
inc
jmp
pop
jno
stos
mov
push
dec
add
pop
lock
mov
cmpsl
fidivrs
jle
push
or
out
cwtl
or
imul
int
add
js
ljmp
cmpsb
aam
icebp
faddl
lods
fcomps
aas
cltd
iret
pop
mov
mov
fldcw
ss
sub
aas
push
adc
xchg
test
orl
cmpl
test
xchg
xchg
insb
fucom
mov
jbe
popf
in
test
sahf
pop
cltd
jno
cmp
pop
pop
mov
jae
fucomp
sub
movsb
out
push
mov
sub
call
lahf
loop
dec
or
outsb
movsb
or
iret
aas
shll
inc
jecxz
jne
adc
and
jbe
pop
jmp
sub
ds
pop
data16
cs
adc
loopne
lock
mov
add
sub
and
adc
sarb
lahf
rcl
pop
lock
pop
stos
or
rorl
loopne
lahf
ffree
pop
in
jg
mov
and
loope
cmpl
lds
es
test
addr16
jmp
stc
addr16
sub
pop
gs
out
cmpb
xor
aad
stos
jp
subl
sbb
dec
or
xchg
testb
in
mov
push
lea
pop
dec
insl
cmp
push
sti
push
add
rcl
dec
sub
inc
pushf
test
rcrb
sbb
inc
es
jo
test
paddq
pop
mov
test
dec
xchg
cs
xlat
fistpl
out
or
ret
dec
jge
loop
fsubs
std
lods
outsl
pop
sarl
jmp
mov
sbb
mov
mov
inc
mov
frstor
xorb
das
insb
not
mov
xor
fidivrs
mov
dec
push
adc
jo
push
adc
sub
mov
push
enter
pop
xor
faddl
js
pop
cld
loopne
jle
rorl
push
adc
inc
sbb
out
ret
xor
sub
fistl
add
mov
cmpsb
pop
ss
in
or
pop
mov
cmp
push
mov
subb
cli
push
nop
stos
adc
in
mov
movsl
mov
stc
xlat
insb
inc
addb
sahf
ljmp
jmp
push
lds
push
dec
push
xchg
jl
pop
je
jmp
mov
aaa
jno
dec
call
mov
pushf
dec
lcall
das
nop
add
ja
gs
fs
and
xorb
adc
sbb
jmp
fisubl
sarl
cs
adc
push
or
sbb
inc
jo
loop
push
mov
cmp
sub
push
loopne
fucom
repnz
out
int3
mov
lahf
mov
fnstenv
jmp
je
popa
sub
mov
jae
pop
insb
fldl
xchg
int3
jmp
repz
push
add
sbb
js
sub
sub
mov
popf
jae
sub
xor
lds
pop
dec
dec
inc
pop
xor
mov
out
fdivs
push
fldenv
cmp
and
ds
and
mov
push
push
inc
xchg
dec
les
and
int
fists
dec
sub
iret
jle
call
mov
out
jmp
sub
pop
testl
xlat
xchg
sub
hlt
add
and
mov
sbb
mov
mov
dec
inc
push
ret
xorb
das
sbb
cwtl
in
repz
push
arpl
je
ds
jae
adc
xorb
mov
in
mov
xchg
icebp
test
push
cs
movsb
and
shrl
loopne
pusha
imul
pop
xor
nop
daa
out
insl
lret
pop
mov
movb
scas
mov
xor
and
cs
mov
loop
rep
pusha
mov
sub
or
add
faddl
fildl
mulb
and
xor
stos
sbb
pop
adc
push
mov
xchg
in
xchg
mov
xchg
dec
adc
push
mov
xchg
ret
addr16
hlt
inc
sub
jne
aad
push
mov
dec
add
out
cltd
rol
into
jl
cmp
sub
cld
sub
dec
stos
out
insl
jb
stos
daa
pop
fldenv
xchg
ljmp
or
loopne
cmc
push
lret
inc
and
in
xchg
inc
in
outsl
test
inc
adc
rcrb
stos
sub
mov
or
cmc
cltd
fs
mov
inc
ljmp
js
and
cli
push
sti
jns
or
rorb
xor
xor
cwtl
lret
enter
dec
lret
lret
outsb
test
jmp
insb
mov
pop
pop
lds
insb
adc
ss
outsl
in
js
xchg
movsb
pop
or
add
add
push
inc
dec
push
add
js
push
xor
cmp
arpl
cmc
clc
or
addr16
fstps
cwtl
cli
fsubr
mov
clc
out
test
mov
xor
push
std
call
bound
jg
mov
enter
sahf
sbb
inc
or
and
incb
sub
push
or
mov
in
fimull
lods
fidivl
mov
in
sbb
gs
stos
iret
stos
into
push
aam
ljmp
mov
sub
pop
pop
in
sub
pop
jecxz
inc
xchg
fsincos
icebp
jmp
jl
jne
inc
test
dec
aas
xor
adc
mov
aad
and
lods
into
pushl
pop
idivb
sub
and
pop
xchg
pop
addb
and
xor
mov
fs
jmp
je
imul
in
inc
lock
pop
mov
movl
xor
adc
fdiv
outsb
xor
jns
fmul
jbe
jo
add
push
nop
nop
in
mov
scas
mov
outsb
out
pop
sub
cltd
imull
push
push
rcrb
sbb
and
test
adc
xchg
popa
dec
test
pop
rcrb
xchg
adc
jae
lret
xlat
mov
rcr
inc
inc
sub
fildll
popa
sbb
outsb
faddl
mov
jp
jg
fwait
xchg
push
lods
push
push
imul
mov
cmp
xchg
jmp
cmc
dec
mov
mov
and
push
add
daa
call
jecxz
xor
shl
pop
xchg
aaa
push
arpl
jge
pop
mov
adc
mov
adc
xchg
decl
repnz
xor
mov
inc
sbb
jno
dec
lock
fcomi
cmc
cmpsb
jg
push
iret
dec
jg
out
mov
ja
call
push
mov
loop
inc
enter
in
out
sub
pop
repnz
lahf
inc
outsb
mov
inc
add
test
xchg
lret
mov
push
lea
inc
sub
or
dec
push
mov
jns
inc
stos
mov
cmpsl
out
add
lock
repnz
adc
cmp
pop
dec
sub
xor
xchg
push
inc
cmpsb
lea
in
fwait
inc
rolb
mov
jo
arpl
xchg
or
and
or
mov
pop
lods
lds
fdivl
lcall
adc
add
inc
rcl
dec
pop
ds
fsubrl
scas
push
add
pop
repz
push
leave
jns
aad
lds
mov
pushf
inc
push
mov
lret
mov
jecxz
adc
xor
cmp
push
shll
jbe
jo
pop
dec
mov
cmp
aad
pusha
xchg
aas
mov
add
cmpsb
idivb
push
adc
insb
push
iret
out
sub
lods
pop
mov
cmpsb
test
mov
inc
es
push
int3
enter
mov
rep
jge
inc
fnstcw
mov
adc
cmp
mov
out
sbb
arpl
mov
cltd
lcall
out
daa
ljmp
bound
add
xor
cmp
sahf
adc
ss
dec
dec
clc
xchg
pushf
mov
sbb
mov
cs
add
push
mov
cmpsb
sub
outsl
pop
sub
pop
cmp
inc
push
cli
negb
sbb
xor
outsb
les
into
adc
xor
xor
xchg
pop
int
lahf
jbe
in
call
cmp
push
mov
mov
lcall
hlt
dec
pop
test
mov
daa
cmp
add
jns
dec
jge
push
add
fdivs
test
outsb
jo
mov
mov
jg
push
pop
pop
out
mov
es
stos
cli
enter
inc
xchg
dec
fisttpl
jle
xchg
add
stc
pop
js
cmpb
sbb
ret
lock
aad
popf
mov
loope
aaa
ljmp
nop
jecxz
scas
jb
lods
scas
cmp
ret
jns
insl
pop
cltd
adcl
push
xchg
scas
dec
in
and
sbb
sub
xchg
not
sub
mov
mov
mov
push
mov
ja
aam
xor
inc
stos
and
xor
lds
cmp
iret
cmp
cmp
sub
aas
add
push
fisubrs
push
fsub
pop
xorl
das
std
sbb
mov
lds
adc
cmovp
lea
add
xchg
dec
sub
aaa
sbb
popf
jae
jp
sbb
lea
nop
adc
std
adc
flds
cmp
addr16
lods
enter
mov
aad
adc
call
fs
mov
cltd
cs
add
loop
inc
clc
test
mov
dec
xor
sbb
loop
sbb
xor
sub
add
sub
bound
into
fs
inc
movsb
pusha
pusha
add
dec
dec
int
ficomps
jno
test
mov
pop
ds
fs
mov
mov
lea
cs
fbld
into
cmpl
lds
and
push
int3
xor
xor
cmp
sbb
lret
imul
pop
nop
stos
push
js
fnstsw
cwtl
out
pop
pop
pextrw
subb
and
out
out
subl
aam
divl
and
cmpsl
test
mov
jl
or
lods
or
mov
pop
addr16
cmpsb
pextrw
pop
std
inc
sub
pop
lahf
inc
pop
pushf
cld
xchg
es
xlat
int
dec
cs
inc
or
adc
roll
and
outsl
shl
mov
xchg
cltd
mov
repnz
push
mov
pop
setbe
arpl
test
adc
and
xor
mov
es
cmp
rcll
jge
and
sub
adc
cmp
rcrb
outsb
loope
dec
insl
jge
cs
push
cmp
sbb
sbb
inc
dec
cmc
pop
or
fcoms
test
ljmp
scas
scas
lds
sub
fidivl
loope
dec
mov
jle
xchg
enter
cld
jae
test
xor
cli
ja
push
daa
mov
mov
mov
dec
mov
mov
sbbb
cmp
inc
xchg
dec
pop
push
mov
adc
pushf
and
xor
dec
xchg
roll
lods
or
mov
je
push
jae
cmp
outsl
xor
pusha
pop
and
insl
inc
mov
je
mov
nop
dec
add
mov
inc
es
ss
mov
push
cli
mov
sub
ja
jae
insb
jp
xor
lret
enter
push
orb
or
enter
enter
dec
push
xchg
fsubrp
nop
xchg
shlb
pop
loopne
push
cwtl
mov
lock
cmp
inc
pop
shlb
sbb
fs
sub
repnz
stc
and
inc
cmpsb
inc
sbb
or
cltd
fcmovnu
mov
pop
push
add
xchg
mov
pop
xchg
lock
mov
js
push
int3
hlt
test
inc
adc
mov
mov
popw
mov
jne
mov
mov
sbb
sbb
ljmp
mov
pushf
cmpsl
data16
push
insb
mov
push
mov
jge
out
sbb
xchg
adcb
je
cmp
dec
xchg
pop
xlat
and
popl
jge
xchg
stos
inc
mov
std
test
fistps
fldenv
inc
ret
test
fs
mov
xchg
in
jecxz
add
dec
lea
lods
jge
xlat
out
pop
psllw
in
mov
inc
cmp
imul
add
loope
or
out
jge
insb
push
repnz
xchg
pop
jg
adc
sub
push
stc
push
xor
sub
jo
mov
fdivr
xchg
fs
dec
sbb
out
gs
mov
cwtl
push
test
fnstcw
dec
inc
arpl
out
lock
jns
outsb
pop
fidivrl
mov
popa
mov
push
jnp
mov
mov
push
fists
sub
add
or
sbb
outsl
push
dec
test
pop
or
pop
stos
sarb
cmp
es
dec
cmpsl
or
das
mov
inc
mov
movsl
mov
call
clc
mov
lods
out
ljmp
dec
ja
jbe
dec
stos
mov
es
adc
test
pop
jl
push
and
sub
sahf
cld
add
pop
fnsave
jno
mov
push
mov
inc
scas
push
lods
mov
mov
push
loopne
imul
mov
daa
adc
jge
jmp
mov
movsb
loope
stc
and
incl
add
cld
popf
inc
mov
add
sbb
jecxz
out
lahf
xlat
and
inc
or
xor
mov
mov
or
xchg
or
dec
push
xor
sbb
fsubrl
inc
xchg
push
xor
scas
jle
das
mov
je
push
push
mov
out
pusha
or
push
push
cld
mov
out
enter
sti
sub
ret
imul
jp
push
loope
arpl
sarb
or
in
leave
add
cmpl
out
sbb
cmp
cmp
xchg
int
jle
mov
pushf
sub
mov
leave
cmp
fnstsw
out
cmp
xor
pop
ret
pop
stos
push
ljmp
push
rcrl
out
mov
pop
das
sub
push
dec
cpuid
dec
stc
or
xchg
xchg
addr16
sbb
mov
in
mov
mov
cmpsl
mov
nop
or
hlt
jmp
sub
pop
out
jg
add
xor
adc
or
std
jmp
add
lahf
leave
add
push
cli
int
xchg
lret
xor
or
jmp
mov
arpl
mov
pop
test
or
inc
pushf
mov
inc
xchg
aad
add
mov
inc
call
cmpsl
ds
mov
mov
imul
cmp
lods
in
movsb
fnstenv
xchg
ret
xchg
push
mov
popa
adc
int3
inc
or
fidivl
ret
push
mov
fstps
pop
loope
xchg
and
gs
jg
js
dec
in
push
jecxz
sbb
cmp
das
inc
lock
pop
jmp
cmp
sbbb
pop
stos
jg
xchg
cwtl
lds
lahf
xchg
fsts
outsl
das
fldt
sbb
add
adc
or
sub
call
cmc
cmp
dec
mov
cmpsb
mov
cli
roll
lds
sbb
and
add
lods
test
xchg
xchg
arpl
inc
ljmp
and
add
leave
jbe
adc
jecxz
mov
mov
das
and
outsb
jle
adc
pcmpgtd
enter
sti
pop
dec
data16
repz
add
insb
pushf
mov
push
in
loope
mov
dec
jnp
aas
out
xor
sarl
notb
loopne
ror
adc
leave
in
and
sub
inc
push
ror
ljmp
js
jg
cmpsl
adc
pop
adc
movsb
loope
push
mov
mov
push
stc
bnd
push
out
pop
insb
insl
push
fcmovbe
add
sbb
fstps
lret
add
daa
subl
aad
cmpsl
sub
push
pop
sbb
sahf
inc
jmp
or
pusha
xchg
xchg
test
or
out
dec
call
xchg
in
sbb
and
out
stos
xlat
adc
rcrb
xor
int3
cld
in
fnstsw
rcrl
jns
sahf
or
push
test
fwait
pop
mov
in
cltd
inc
xchg
mov
cmp
orl
les
scas
mov
fstps
dec
arpl
aam
cmp
mov
pop
jns
add
xchg
sti
pop
sub
jb
outsl
pushf
inc
mov
mov
or
mov
dec
andb
aad
inc
das
xor
and
push
push
sub
xchg
shll
fdivs
and
xor
sti
and
data16
xor
fimull
and
fcompl
mov
ss
testl
push
mov
std
insb
fwait
jmp
ret
and
stos
icebp
insl
js
in
test
mov
lods
push
js
xchg
aas
pop
cmp
sbb
inc
sub
dec
scas
sbb
xor
lods
mov
sub
cmpsl
pop
cli
xor
jge
gs
jmp
loopne
inc
cli
xor
adc
bound
les
push
sbb
cwtl
mov
in
mov
int3
mov
and
loope
xchg
sub
nop
add
pop
ret
xor
cmp
inc
jae
push
inc
push
clc
xchg
popa
aaa
leave
add
inc
push
jl
ret
ss
out
cmp
and
nop
mov
std
daa
insb
jp
out
push
push
pop
aas
fistps
mov
loope
dec
outsl
dec
pop
sarl
jp
add
xchg
push
mov
xchg
loopne
stc
pop
subl
loope
dec
and
sub
push
pop
mov
shlb
sub
pop
leave
ja
mov
push
insb
sar
rorl
repz
es
stos
jecxz
or
shl
jns
ja
adc
push
mov
test
cwtl
inc
push
lcall
push
das
mov
xor
add
jae
mov
out
and
scas
les
mov
jbe
xchg
cld
mov
add
call
sbb
pop
add
mov
mov
adc
cmpsb
repnz
popf
push
rcll
in
pop
sbb
les
cmp
cmp
adc
nop
aad
pusha
push
push
jl
data16
mov
aas
jge
push
jns
jns
xor
aad
cmp
mov
sti
stos
ss
pusha
xor
imul
sbb
xchg
xor
aad
inc
mov
ds
sub
je
jmp
popa
push
lods
jl
imul
les
xlat
push
aad
les
adc
adc
cltd
in
repnz
pop
adc
push
mov
mov
insl
ljmp
int3
and
pop
sbb
aaa
fyl2x
jne
sub
lcall
scas
sub
loope
test
inc
sbb
jle
dec
and
pop
adc
repz
cld
data16
mov
inc
cmc
pop
add
loop
cmp
xchg
loope
pop
das
xor
mov
loopne
add
pop
loopne
push
mov
loop
and
jp
mov
test
cmp
pop
pop
loop
nop
and
sbb
aas
jmp
mov
icebp
out
xchg
xchg
xor
jo
or
incb
dec
aas
xor
sub
outsl
push
bound
mov
into
add
xchg
insl
xor
push
pop
stos
cli
sub
add
add
mov
fcmovnu
int3
push
xorb
int
lods
mov
add
add
jge
mov
cli
add
mov
mov
push
lea
jae
fiadds
rolb
xchg
sbb
inc
rorb
mov
test
inc
push
mov
inc
movsb
xchg
mov
push
pop
icebp
outsb
popa
dec
ljmp
mov
aam
lock
mov
add
or
mov
mov
jbe
inc
push
lods
mov
inc
rclb
int3
cmp
sub
jo
test
or
mov
cs
cmp
ss
xor
pop
push
lock
repz
addr16
xchg
in
out
sub
imul
mov
mov
jns
jo
lcall
mov
gs
rcrb
fs
into
push
sbb
push
sub
lods
vpackusdw
mov
push
ss
rclb
xchg
int3
jb
adc
dec
and
fistpl
mov
clc
adc
imul
inc
arpl
loope
xor
clc
push
int3
lock
cltd
imulb
and
lcall
add
dec
cwtl
xchg
pop
push
nop
push
add
loope
xchg
mov
cmp
sbb
push
dec
dec
les
adc
add
mov
imul
or
sbb
aaa
xchg
repz
leave
pop
testl
xchg
mov
fisubrl
scas
push
popa
insb
sar
sub
sub
sub
js
mov
cmp
dec
roll
pop
insl
push
pop
imul
int3
bound
xor
int
je
cmpsb
mov
lds
ret
or
or
and
loope
jg
das
cld
jae
push
adc
xor
push
loop
ljmp
cmp
in
neg
mov
cmp
inc
inc
mov
fwait
inc
xchg
lahf
in
ds
popf
cltd
outsl
daa
push
xor
testl
jp
jmp
ret
fstpt
cwtl
dec
mov
enter
sti
mov
add
mov
out
pop
mov
push
jo
jo
jo
dec
shrb
cmpsl
mov
mov
jb
mov
mov
inc
push
lods
lods
daa
pop
cmp
loopne
popa
adc
jb
or
fwait
imul
jecxz
sbb
pop
rclb
push
jnp
lahf
cmp
dec
fidivs
mov
adc
ffreep
xor
out
cmp
ror
cwtl
popa
adc
mov
sub
xlat
xchg
imull
push
lahf
lock
pop
sbb
test
inc
enter
je
jbe
xchg
popa
fsub
mov
mov
dec
stos
enter
mov
fsubrs
addr16
loop
cwtl
push
cmp
or
sbb
ljmp
shrb
testb
scas
sub
push
les
or
add
hlt
icebp
mov
rolb
cltd
lods
hlt
jae
or
pop
jecxz
push
jo
push
add
rcll
imul
int
push
pop
pop
push
lds
pop
cld
pop
enter
dec
les
or
ret
mov
xchg
cmc
js
dec
mulb
movsb
dec
or
cmp
cmp
shlb
add
lret
push
sub
push
or
xor
gs
adc
jbe
sbb
iret
data16
lds
and
sbb
or
push
in
jbe
add
xor
pop
mov
js
ja
in
push
lret
cwtl
inc
pushf
aas
adc
lret
pushf
jg
pop
fadds
lods
sbb
loopne
adc
mov
mov
cmp
sub
mov
or
push
add
jnp
inc
add
xchg
cmpsl
pop
cld
or
sti
sub
inc
fnsave
scas
mov
enter
adc
test
dec
lret
test
lods
test
cwtl
push
je
push
mov
rcrb
movd
mov
xchg
mov
test
outsl
xchg
inc
push
dec
or
cmp
sbb
ja
fiaddl
pop
jmp
inc
xor
out
call
mov
es
inc
clc
xchg
push
je
inc
mov
lahf
jb
daa
je
cmpsb
dec
and
adc
in
xor
xchg
aas
loop
inc
cmpsb
xor
sbb
inc
fisttpl
ret
jp
iret
leave
lcall
sub
push
loope
cwtl
push
shll
jae
adc
dec
mov
pop
push
mov
dec
inc
dec
pop
push
clc
jo
push
pushf
sti
mov
test
rclb
inc
inc
fiadds
call
adc
pop
dec
data16
xlat
push
add
lods
sti
int
inc
shlb
add
gs
stc
gs
xor
and
adc
cmp
and
fistpl
lds
addb
int
mov
outsb
and
rol
add
or
or
push
les
xor
stos
push
pop
mov
jae
xor
xor
or
pop
push
stc
xor
adc
sub
shrl
dec
sub
xchg
mov
ficompl
mov
ljmp
dec
loopne
push
sbb
or
repnz
sbb
xor
xor
xchg
pop
mull
rorl
adc
mov
mov
loop
adc
pop
push
pop
inc
rorl
or
inc
testl
pop
das
inc
inc
or
clc
or
pushf
adc
mov
pop
bound
push
leave
mov
popl
cltd
xor
outsb
loopne
xchg
inc
lahf
xlat
out
popf
push
in
lods
xchg
add
out
imul
psubsw
aad
push
mov
push
popa
jle
js
add
lret
sub
cmp
imul
mov
arpl
dec
pop
mov
mov
in
rorb
imul
mov
loop
cmp
pop
sbb
popf
in
jae
sub
repz
inc
dec
sbb
adc
repz
mov
cmp
and
xchg
cmpsb
cmp
sbbb
pop
gs
mov
xchg
paddusw
xor
les
pusha
inc
ss
inc
cmp
sub
fiadds
fst
mov
cmpsb
dec
jno
cmp
dec
inc
std
cwtl
xor
ret
cld
lods
icebp
xchg
mov
cmp
aad
mov
frstor
pop
rcrb
lock
shl
inc
outsl
pop
push
adc
test
xor
sbb
jno
ficomps
mov
sbb
insl
xchg
fdivs
into
js
ja
xchg
mov
jecxz
test
jecxz,pn
test
cs
push
mov
in
outsb
pusha
ret
rorb
test
inc
clc
jge
push
test
je
mov
rcrl
mov
jo
pop
int3
push
inc
fnstcw
fwait
pop
push
orl
dec
cmp
mov
out
cmpsb
imul
lret
jno
mov
test
sub
xor
inc
mov
daa
adcl
out
jno
mov
js
jns
inc
adc
fdivs
or
nop
scas
in
inc
sub
dec
orb
aas
movsl
and
inc
jae
das
sarl
xchg
pop
jbe
shrl
cmp
xorl
cmp
and
aaa
add
test
lret
inc
mov
add
mov
sahf
pop
gs
and
add
xor
cmp
ss
mov
gs
pop
push
pop
int
push
les
xor
sahf
pop
ret
shrl
out
dec
call
fucomip
std
xchg
pusha
or
jmp
push
push
xchg
push
ljmp
js
inc
mov
mov
mov
xchg
mov
push
adc
cld
add
adc
mov
mov
insl
leave
adc
push
adc
jae
imull
mov
mov
pop
lahf
jp
mov
int
or
pop
es
or
lds
jle
xor
adc
add
in
mov
hlt
les
leave
pusha
mov
mov
push
and
lret
leave
gs
add
aaa
xchg
jae
shr
xlat
and
in
movsb
stos
xchg
mov
leave
push
aad
cmp
lahf
push
js
scas
push
test
push
dec
mov
mov
pop
cmp
jl
mov
icebp
xor
mov
rcll
inc
dec
push
push
clc
les
mov
pop
pop
ret
push
cmpsl
repz
sub
out
scas
lds
scas
lock
mov
cmpsl
mov
dec
in
pop
scas
jecxz
iret
into
pop
ljmp
out
and
pop
jno
mov
xchg
pusha
inc
lcall
out
imul
xor
cwtl
test
pop
mov
xor
xchg
aas
dec
dec
fistps
movsb
lock
and
push
lret
gs
xor
inc
mov
mov
aad
ficompl
in
dec
xlat
lods
and
mov
mov
nop
mov
mov
cmp
adc
shl
jae
add
adc
jle
adc
adc
add
call
adc
adc
and
xor
pop
mov
pop
adc
jno
ljmp
mov
mov
dec
notl
cmp
fisttpll
int3
mov
mov
cli
xchg
arpl
pop
jno
test
inc
pusha
push
fwait
fwait
push
into
xor
mov
mov
orl
and
lahf
out
adc
mov
fwait
jp
loopne
mov
mov
adc
je
push
les
addr16
mov
jle
hlt
dec
add
sub
lcall
sti
mov
sarb
fisubs
push
out
lds
addl
or
insl
shl
jbe
movsb
sub
es
ja
jns
insb
cmpsl
fcoml
sub
pop
jns
icebp
cli
bound
ss
mov
into
jo
outsl
in
dec
and
sbb
lcall
retw
inc
vmovdqu
rcll
roll
mov
jle,pn
outsl
mov
pop
aas
cld
jno
cmp
add
pop
sub
dec
jle
dec
mov
adc
pop
xor
xor
mov
cwtl
mov
jmp
mov
cmp
test
xchg
xor
ljmp
ss
dec
xchg
jns
or
loop
pop
pop
jecxz
ss
pop
cmp
mov
mov
pop
mov
or
shl
enter
pop
jp
mov
cmp
sub
mulb
in
sub
push
pop
push
mov
or
leave
inc
or
in
push
jp
fwait
subl
lds
and
cmp
inc
in
mov
movhps
sbb
push
lret
popa
rorb
popa
xchg
addb
add
jmp
stos
cmc
jmp
insb
bound
mov
xlat
pop
test
xor
jae
loope
std
das
jb
xor
gs
adc
aaa
loop
fsubr
sub
push
add
testb
sbb
push
sub
cmpl
sbb
hlt
mov
and
imul
daa
insb
rcr
or
repnz
add
pop
call
and
push
sub
cwtl
push
pop
cs
ja
cmp
bound
stc
fcoml
pop
sbb
xlat
or
inc
int3
xor
xorb
add
cwtl
out
into
mov
int
inc
xor
push
pop
push
xchg
daa
out
cs
ficompl
fiadds
outsb
dec
fbstp
inc
cmpsl
sub
jno
pop
push
shrl
in
fstp
outsl
test
js
jmp
test
lods
cwtl
loope
sbb
mov
mov
aas
push
or
clc
adc
pop
aam
sub
lret
movsl
fsub
fistl
lret
mov
popw
mov
sbb
inc
pop
movsb
lds
cmp
mov
push
mov
push
mov
test
enter
add
out
je
les
and
popa
or
movsl
pop
fdivr
cmp
cmp
addl
dec
sbb
enter
stc
push
mov
jb
pop
sub
scas
out
mov
push
pop
fisttpll
dec
inc
push
mov
cld
or
aas
cwtl
fst
pop
mov
cmpsl
cld
jno
push
xchg
mov
mov
mov
adc
fwait
add
mov
pop
popa
jnp
bnd
jmp
aam
sbb
xchg
add
mov
or
outsb
mov
and
cmp
xchg
test
dec
imul
push
adc
or
stc
fnstcw
das
adc
inc
sub
shrl
push
inc
addb
fadd
add
mov
mov
mov
lock
ss
cmp
arpl
jle
and
inc
mov
pop
lods
into
es
nop
into
sbb
test
push
add
cmp
outsl
cmp
sti
cmpsb
push
or
pop
rol
call
add
dec
pop
inc
sbb
sub
mov
sbb
ret
shll
add
sub
and
inc
loopne
addr16
orl
mov
cmp
push
cmc
push
pushf
sub
popf
and
pop
push
lret
pop
inc
orl
dec
xchg
mov
ret
pushf
les
sarb
or
dec
mov
in
daa
xchg
loopne
pop
inc
push
and
mov
cmp
or
xchg
mov
fsubp
dec
pop
and
and
sbb
jl
loop
dec
or
lcall
xlat
arpl
test
scas
int
decl
daa
push
adc
les
pop
push
cmp
je
mov
push
adc
sti
or
es
js
push
push
dec
cmp
dec
loop
adc
sbb
sub
push
xchg
cmp
or
mov
xor
in
or
dec
movsb
in
xor
addb
sbb
lds
arpl
push
or
lret
xor
lds
push
fldcw
push
mov
ds
adc
xchg
dec
aaa
mov
xlat
sbb
and
push
or
imul
sub
inc
arpl
xor
sub
mov
or
and
popf
roll
dec
pop
mov
in
pusha
jecxz
jmp
aam
fists
int3
pop
mov
cmpb
enter
jge
mov
jns
push
les
xchg
ss
test
filds
and
mov
cmpb
imul
pusha
push
in
aaa
add
icebp
jmp
cltd
scas
test
sbb
leave
dec
vpunpckhqdq
frstor
mov
mov
lret
les
mov
xor
out
jbe
sub
sub
mov
dec
or
mov
mov
or
arpl
dec
pop
sbb
jae
mov
loop
jg
mov
fdiv
ljmp
out
pop
jnp
inc
bound
out
popf
mov
shlb
cmpsb
pop
inc
sbb
arpl
mov
aas
popa
in
mov
test
mov
and
sbb
push
add
inc
outsb
sub
mov
jns
mov
icebp
hlt
lods
mov
loopne
pop
loopne
adcb
mov
sbb
ja
adc
lods
and
mov
daa
xchg
in
insb
mov
jo
jo
dec
cltd
imul
xor
and
inc
rorb
mov
ss
loop
inc
mov
shrb
stc
cmc
or
in
dec
cmc
mov
adc
and
fdivp
lcall
scas
cwtl
sbb
xchg
jno
sbbl
add
sub
in
mov
sub
aas
inc
lcall
enter
mov
adc
addr16
sbbl
sub
mov
ret
and
test
ds
cmpsb
and
addr16
pop
dec
mov
sub
orb
in
push
mov
es
lds
add
push
fsubrl
jo
pushf
lret
int
xchg
cltd
loope
aad
pop
lahf
xor
sbb
lret
and
sub
pop
sbb
xor
mov
cmp
inc
rolb
orl
xchg
in
mov
mov
cmp
mov
cltd
xchg
sub
pop
xchg
and
movsb
test
pop
fidivs
aaa
popa
fs
xchg
jge
lcall
inc
in
xchg
add
xchg
inc
inc
je
shrl
aad
out
call
dec
sbb
ljmp
test
jmp
and
sub
or
icebp
sbb
bound
ret
mov
sub
fiadds
mov
decl
imull
popa
inc
insl
cmpsb
pop
pushf
pop
add
dec
outsb
and
int3
mov
cs
cmp
inc
sbb
pop
cmp
push
or
insl
stos
rcll
stos
dec
xchg
andl
pop
sbb
orb
incl
fsubs
mov
lock
out
fnstcw
cltd
out
outsl
lds
xchg
cmp
pushf
cli
aaa
mov
cwtl
mov
mov
les
ret
sbb
jg
or
xchg
sub
mov
mov
sub
daa
jmp
sahf
xchg
fsubrs
fucom
mov
jb
mov
dec
mov
int3
into
popa
or
popa
cmp
cmp
test
fs
sti
and
adc
jbe
add
add
call
decl
dec
js
cmp
mov
jns
int
mov
dec
loop
shlb
ret
push
scas
fwait
adc
test
mov
mov
mov
jns
mov
sarl
inc
popa
xchg
int3
cmc
insb
mov
dec
and
sub
inc
je
jno
or
in
sbb
aaa
mov
pushf
test
aaa
and
jle
pop
jp
xor
cltd
dec
out
cmpb
and
lea
popa
addr16
fisubrs
clc
jge
add
or
xchg
iret
les
fsubr
xchg
incl
cs
ds
mov
mov
pop
rorl
pusha
dec
mov
aaa
mov
push
scas
jne
out
mov
cmp
cmp
sti
xchg
push
mov
inc
dec
mov
lcall
xor
std
dec
and
dec
xchg
icebp
xchg
sub
iret
popf
andl
mov
or
pop
xor
pop
sub
out
pop
pushf
jge
aas
pop
es
pop
pop
or
scas
xchg
adc
je
mov
xchg
and
jp
sub
cltd
test
pushl
pop
aaa
fdivl
inc
test
dec
dec
sbb
pop
cld
clc
mov
daa
insb
xchg
jge
jne
fnsave
mov
xchg
ds
jbe
jle
stos
sub
xchg
loope
pusha
es
insl
stos
shlb
lcall
arpl
push
add
daa
jnp
in
and
push
push
into
add
sarb
ret
dec
mov
ljmp
sub
jnp
sahf
sub
xor
mov
sbb
rcll
div
xor
decl
mov
adc
clc
sub
out
sbb
into
pop
push
fs
fs
add
int3
fst
dec
mov
popf
mov
cmp
jge
inc
loopne
push
popf
pop
jg
add
pusha
mov
aam
cmp
add
cmp
cld
lahf
mov
pop
scas
mov
push
mov
cmp
push
add
jb
push
out
xor
or
loop
push
xchg
dec
push
sub
dec
add
sbb
push
sbb
jp
out
lods
or
jl
ljmp
mov
repz
cmp
lret
cmp
push
lcall
das
popf
int3
mov
scas
inc
inc
xchg
mov
jmp
sarb
jnp
fnstsw
enter
xchg
push
adc
jp
mov
dec
in
add
fldcw
and
mov
movsl
sbb
or
lds
in
mov
and
fdivl
pop
cmpsl
cltd
lods
inc
cmpsl
or
movsl
xor
out
jl
push
mov
loopne
mov
ficoms
mov
jg
clc
jmp
iret
xor
test
push
mov
xchg
mov
scas
pop
sub
push
sub
push
das
outsl
push
lods
fsubr
or
imul
cmc
mov
bound
and
xchg
in
in
push
mov
xchg
and
mov
cwtl
sbb
jg
cmpsl
outsl
inc
xor
adc
outsl
jge
lahf
stc
mov
shl
push
test
andb
repz
sbb
cmpl
stos
mov
inc
sbb
sbb
xchg
mov
jbe
rcrl
fwait
adc
stos
jp
pop
mov
mov
test
lock
ret
push
int3
adcb
add
loopne
sub
push
cmp
sbb
rep
stos
ss
mov
pop
aaa
aas
push
stos
lcall
cmp
push
mov
aas
push
js
pushf
jb
mov
sbb
push
lock
in
cmp
mov
pop
jbe
lret
sub
stos
inc
cmpb
js
xchg
jecxz
jne
out
int
pop
push
mov
jb
fwait
dec
pop
aad
and
mov
test
mov
xchg
movl
imul
sarb
loope
push
outsl
sbb
xlat
jo
iret
dec
or
and
mov
dec
addr16
sbb
sbb
add
inc
adc
stos
clc
enter
test
mov
xor
insl
shlb
add
mov
je
ret
push
inc
ljmp
loop
cltd
cwtl
jecxz
pusha
xchg
cmc
ret
fnsave
rclb
arpl
lock
lods
fimull
rcrl
ss
or
pop
sbb
stos
push
inc
lret
adc
push
adc
out
xchg
pop
or
pop
or
int3
push
xchg
adc
out
jb
sbb
stc
call
dec
test
sbb
xor
jl
jnp
lret
pop
fmull
pop
shll
jge
and
push
shll
orl
push
movsl
faddl
pop
mov
dec
mov
adc
push
xchg
mov
es
cld
dec
push
mov
push
rep
mov
or
and
sti
dec
dec
js
adc
push
xchg
xchg
dec
pmulhuw
push
hlt
aaa
jmp
in
mov
cmp
cmp
popf
in
add
test
sar
and
xchg
mov
inc
insl
and
adc
push
repnz
in
cwtl
mov
add
xor
arpl
and
pop
cmp
add
repz
nop
fidivrl
and
dec
mov
mov
in
cld
dec
and
ljmp
mov
mov
mov
scas
and
outsl
mov
daa
mov
int
and
sbb
sub
pop
incb
ror
adc
int
push
sti
es
pushf
jl
pop
push
xchg
pop
mov
push
lcall
adc
and
lahf
cld
xor
push
fnstcw
jg
lods
mov
xor
cmpb
sbb
sti
in
xor
mov
jle
push
lret
jnp
inc
pop
sarl
arpl
push
xchg
iret
outsb
mulb
or
xor
mov
shr
ds
jo
ficoml
sbb
insb
shll
sbb
cmp
sarl
cmc
xor
mov
in
aas
lret
mov
mull
and
incl
mov
nop
xorb
xor
fwait
rcrl
mov
sbb
mov
mov
out
ret
and
mov
pop
inc
lret
inc
push
rcll
adc
insl
test
xor
int
mov
lret
loope
sub
mov
xchg
cmp
outsl
arpl
mov
pushf
dec
and
mov
xchg
lods
or
xchg
add
jl
loopne
adc
into
xor
arpl
mov
sbb
arpl
jecxz
scas
xchg
sarl
jae
mov
aam
xor
rorb
mov
or
daa
mov
sarl
xchg
sti
nop
js
lea
mov
sbbb
pop
lret
sti
insb
or
pushf
fcmovu
outsb
mov
inc
sbb
jae
mov
fists
push
cmp
xor
inc
adc
add
cld
xchg
pop
aad
sub
push
lcall
jle
enter
popa
or
jle
std
mov
lahf
sar
cmp
jne
mov
into
pop
dec
mov
adc
out
mov
mov
or
data16
loopne
aam
xor
pop
adc
sub
push
push
push
adc
lret
jecxz
cmp
int3
orb
ds
mov
dec
pop
mov
call
and
mov
push
mov
pop
repz
mov
sbb
or
push
or
or
and
inc
push
addr16
inc
loopne
mov
mov
and
sbb
add
ds
xchg
divl
orb
insl
xchg
mov
dec
mov
popf
pusha
imul
and
std
add
mov
into
sti
movsb
icebp
popa
xchg
arpl
imul
push
sub
rcrb
cmp
lods
outsb
cmpsb
dec
enter
movsb
icebp
push
insb
push
in
js
cltd
sub
outsl
xor
mov
inc
in
daa
inc
add
jo
gs
repz
adc
loop
cs
jp
mov
call
push
hlt
popa
and
aad
sahf
mov
sbbb
cmp
jbe
movsl
xlat
or
sbb
xchg
push
out
test
lcall
ja
add
pop
add
arpl
ret
cmpsl
and
repz
sar
cmpsb
into
inc
xchg
fs
lods
sub
push
shlb
mov
xadd
cmp
adc
lock
mov
imul
cmp
fcoml
push
jg
clc
stos
ja
repnz
xchg
hlt
and
mov
jnp
mov
maskmovq
notl
jns
arpl
testl
add
or
aas
cld
xor
outsl
loop
and
mov
imul
mov
push
sbb
pop
or
fsubrs
ret
daa
mov
nop
dec
test
fs
mov
inc
lea
adc
out
repz
ja
inc
jnp
mov
adc
push
emms
mov
into
push
cmp
dec
loop
pop
shr
xchg
inc
mov
mov
das
mov
psadbw
xor
ret
jo
sahf
sti
int
lret
popa
fstpl
ja
int
mov
leave
and
mov
repnz
inc
mov
nop
lock
into
cs
jo
push
and
sahf
xor
hlt
mull
jns
add
add
filds
jo
ret
loopne
adc
sbb
inc
mov
xchg
mov
xor
and
roll
cmp
arpl
cmp
stos
sahf
subb
fdivs
scas
je
pop
jo
test
dec
jecxz
dec
sub
pushf
ljmp
cmc
aam
push
push
mov
mov
int3
ja
lods
loop
insl
mov
or
adc
outsb
in
and
divb
jb
lea
rorl
enter
push
fwait
jnp
mov
bound
add
pop
xchg
push
or
shl
ja
fs
pop
adc
mov
jmp
sbb
sar
mov
iret
stos
sbb
fmull
sub
jae
jg
and
cmc
loop
xor
ja
push
pop
pop
subb
mov
adcl
stc
std
pop
lods
popa
outsb
dec
sahf
mov
mov
or
mov
and
push
shl
pusha
mov
xchg
lock
add
enter
xchg
scas
cltd
daa
push
add
adc
repnz
testl
sbb
nop
lahf
jno
movsl
push
sbb
ficoms
or
es
add
andl
pop
jp
add
and
lahf
pop
addb
mov
dec
shl
lds
call
or
push
aad
fdivrp
push
cltd
pop
xor
jne
out
sbb
adcb
mov
inc
popf
sbb
mov
xor
loop
mov
push
js
mov
pop
popf
ret
movsl
push
or
mov
mov
ja
add
add
enter
adc
shrl
popa
lret
adc
mov
lret
mov
mov
call
and
mov
mov
cmp
lods
jmp
cmp
sbb
bnd
jae
push
stc
loopne
ljmp
mov
or
ret
xlat
cmp
cmpb
xchg
mov
cmp
mov
xchg
inc
ffreep
cmovnp
scas
and
ret
and
ret
push
add
pop
xor
repz
mov
les
lcall
push
daa
testl
jle
sub
xchg
push
fildll
cld
jns
js
fwait
mov
xchg
insb
cmp
imul
mov
sarb
arpl
shll
std
push
loope
xlat
push
ficoms
scas
sub
jl
mov
pop
movsl
ret
jbe
cmpsl
mov
inc
out
jns
sbb
fsubrp
scas
push
add
sbb
test
mov
ficomps
lock
sub
mov
inc
fisubl
fnstenv
pusha
pop
cmp
sub
fildl
push
fadds
xchg
dec
scas
pop
lods
pop
cmp
xor
cmp
xor
movsl
add
aaa
mov
fldl
aad
xchg
sub
cmpb
ja
inc
leave
dec
icebp
mov
test
insl
icebp
popa
je
imul
lea
inc
negb
add
cmp
push
jne
cmp
daa
jb
aad
jns
pop
pop
push
mov
add
aas
lcall
pop
sbb
cmc
cld
das
nop
jl
fdivs
pop
fistl
xchg
mov
ljmp
jne
mov
outsb
mov
stos
dec
outsb
add
push
adc
or
cli
add
aas
int
popf
mov
push
inc
mov
hlt
icebp
push
clc
stos
repz
mov
and
sbb
cmp
iret
mov
and
jno
or
jg
xor
pop
iret
mov
je
repnz
jmp
loope
fdivl
lea
mov
or
outsb
mov
mov
lahf
mov
test
aas
mov
lret
orb
pop
imul
xchg
push
rorb
hlt
add
dec
push
jge
shrl
imul
loopne
xchg
cmp
inc
pop
pop
fsubrs
sub
and
clc
arpl
fmulp
pop
leave
or
inc
pop
iret
imul
out
xchg
mov
sub
pop
and
dec
jo
das
cmp
hlt
faddl
add
push
sti
clc
and
ljmp
pop
push
mov
lds
stos
insb
mov
fs
aam
cli
dec
xlat
cmp
sub
adc
jbe
add
mov
push
popf
ffree
push
test
loopne
lret
adc
add
scas
add
mov
out
push
xlat
and
xor
sub
mov
mov
mov
pop
or
nop
outsb
sbb
mov
movsl
mov
mov
dec
inc
mov
push
xor
mov
pop
pop
xor
fcoml
cmpb
bound
ds
shll
xchg
pop
fwait
cmp
jnp
mov
and
xor
push
lock
das
das
push
in
add
jno
ret
int3
insb
jne
cmp
outsb
pop
mov
dec
fnstcw
inc
and
insl
mov
add
fistpll
aam
add
dec
sub
mov
fs
inc
cs
notl
addr16
add
inc
fdivr
mov
sbb
cmp
xor
inc
popa
repz
into
push
sub
sub
das
in
jnp
xchg
leave
clc
aaa
stos
lret
int3
push
and
mov
out
jo
fists
cmp
jecxz
dec
orb
lahf
cmp
dec
pop
outsl
fildll
add
cld
pusha
ficomps
xchg
outsb
repz
lock
test
fldt
enter
mov
xchg
mov
insl
jge
jae
xchg
push
iret
push
outsb
int3
jmp
repnz
leave
scas
cmp
test
outsl
insl
mov
dec
mov
pop
add
sbb
adc
push
mov
xlat
orb
lret
je
aas
xchg
inc
or
and
jmp
jnp
ljmp
push
rorb
adc
stos
fildll
cwtl
jnp,pt
movsb
pop
lcall
xor
pop
cmp
bound
xor
add
push
lcall
test
push
leave
inc
sub
pop
mov
jns
fisubl
in
sbb
or
jns
scas
or
ds
mov
or
icebp
mov
push
pop
stos
in
sbb
inc
push
xchg
ja
enter
jae
xchg
xor
lods
lcall
xchg
sbb
push
repnz
jl
mov
pushl
or
sub
sub
out
xor
add
xor
adc
test
sbb
jmp
mov
sbb
sti
imul
xchg
popf
pop
ret
jb
push
push
push
pop
sub
and
imul
cmpsb
or
incl
adc
mov
cmpsb
sub
adc
mov
addl
pop
jmp
or
cmp
push
or
sbb
aam
sub
xchg
cltd
xchg
nop
inc
mov
cld
pop
pop
cs
aam
or
push
out
xchg
jle
shlb
pop
roll
push
insb
add
cmp
ss
xchg
js
mov
pop
cmpsb
jl
jb
enter
mov
xchg
dec
mov
push
nop
clc
jmp
sbb
and
jae
cli
fisttpl
outsl
mov
bound
insb
jne
jbe
es
jp
xchg
add
push
mov
mov
lock
push
std
jb
fnstcw
jg
mov
out
movsl
sub
lock
inc
mov
and
dec
push
mov
cmp
ljmp
or
mov
repz
push
sahf
je
or
xor
adc
fcoml
jae
pusha
mov
fsubl
mov
cmpsl
inc
pop
xor
push
mov
scas
jmp
js
mov
shll
loop
sahf
sbb
sbb
xchg
push
movsb
lock
xor
xchg
pop
inc
fbstp
inc
hlt
icebp
add
jnp
leave
lock
je
dec
imul
push
mov
stos
in
adc
cmpsb
mov
jae
sbb
repz
push
pop
cs
push
add
inc
testb
es
gs
sbb
pusha
test
fistl
fwait
add
xchg
mov
and
xchg
inc
stos
xor
mov
insl
shlb
jp
pusha
rcll
jo
dec
addr16
lods
pop
mov
in
push
in
push
inc
shlb
jno
mov
test
xor
xchg
mov
push
mov
pop
arpl
popa
test
lret
in
ja
or
inc
jbe
pop
jae
add
jmp
int3
and
sub
pop
jp
cld
jp
pop
pusha
fdivrs
popa
and
jbe
xchg
fistpll
sub
js
movsl
sub
mov
lahf
fwait
adc
in
ds
mov
outsb
jns
pop
mov
push
or
aas
cli
push
shrl
cld
xchg
mov
test
push
dec
in
jae
repnz
mov
scas
xor
scas
lahf
push
mov
outsl
and
scas
out
in
int
or
cli
mov
mov
dec
cmp
subl
nop
cmc
ret
jp
adc
or
outsb
iret
jl
rclb
addr16
xchg
jno
fdivs
outsb
fnstenv
and
mov
push
je
shr
or
add
cmp
xchg
clc
sub
ret
mov
xor
enter
jecxz
xor
sub
sahf
push
int
inc
push
mov
pop
lcall
xchg
ret
stc
cld
mov
xorb
lahf
and
pop
pop
out
pop
mov
or
call
lods
mov
add
cwtl
movsl
dec
inc
into
pop
mov
repnz
xchg
out
out
ds
push
xor
mov
lods
dec
clc
arpl
or
jae
push
mov
add
push
cltd
addl
inc
pop
cmpl
enter
mov
cmp
bound
jo
sub
sbb
pushf
ffree
or
int
push
cli
insl
sbb
xchg
jmp
in
out
sub
popf
sub
sub
repz
and
negl
out
call
ret
adc
mov
imul
and
aas
test
outsb
scas
jecxz
sub
sub
sbb
ret
cmp
addb
fwait
cmp
pop
enter
insl
addb
nop
repnz
jp
or
jge
xchg
mov
or
pushf
daa
js
add
cmp
ret
scas
mov
jbe
push
and
xor
jmp
or
cld
push
xorl
es
push
cmpsb
add
mov
lcall
scas
adc
les
adc
jecxz
push
and
std
jle
jecxz
sub
pop
cli
adc
outsl
cmp
rclb
aam
stc
xchg
mov
sub
cmp
mov
mov
inc
lock
das
pop
inc
ds
lcall
add
pop
xorb
test
jns
lcall
lods
hlt
sbb
aad
out
sbb
clc
inc
xchg
scas
ljmp
mov
sbb
xchg
jp
pushf
xor
data16
pop
outsl
std
cwtl
jae
adc
jmp
xchg
insb
fnsave
push
xchg
xchg
jne
imul
cli
jmp
ret
xchg
jns
pop
fwait
push
test
cmp
ret
sub
in
and
jg
push
mov
out
fsts
insl
aas
sarb
mov
pushf
sub
dec
hlt
mov
jb
xchg
jns
aad
jp
xor
mov
inc
cmpl
cmpsl
outsl
adc
mov
nop
jg
xor
and
push
add
push
loope
mov
xchg
les
sub
xor
adc
push
mov
in
ficoms
mov
testb
cmp
popf
orb
xor
lods
lock
sbb
sub
adc
and
jle
push
fsub
xor
lahf
jne
lock
add
mov
out
or
dec
adc
es
lock
dec
pop
mov
pop
shll
adc
and
out
pop
jno
into
movl
call
inc
stos
pop
mov
mov
outsl
shl
aas
cltd
aas
outsb
je
cmp
xor
mov
lret
fs
xor
loop
popa
lret
in
mov
mov
clc
pop
stc
jae
rorb
ret
add
and
stos
push
inc
inc
push
les
aad
xor
stos
jl
pop
mov
stos
push
add
mov
les
lret
jmp
stos
cmpsl
test
push
subb
sbb
cmp
call
cwtl
ror
cmp
sbb
or
sar
pop
add
xor
and
xchg
pushf
fs
mov
sti
cmp
xchg
sbb
jp
sub
add
dec
not
mov
mov
jne
roll
loopne
cltd
sub
lcall
xchg
or
pop
push
xchg
out
test
outsb
mov
push
cwtl
mov
cmc
lods
adc
xor
bound
cmpsb
int3
mov
xor
cmp
neg
shl
dec
add
arpl
lahf
pushf
mov
sbb
rclb
adc
pop
jae
cwtl
jp
cmp
mov
jle
inc
cmp
and
cmpsl
push
and
loop
and
sub
inc
fdivrs
popf
das
mov
or
adc
sti
adcl
fcoml
mov
mov
popa
fistps
xchg
inc
daa
loopne
sub
sub
out
test
out
sub
in
in
outsb
adc
jl
orb
daa
test
mov
sbb
clc
scas
fwait
iret
scas
mov
xor
or
add
cli
push
inc
mov
xchg
rcrb
int
or
xor
leave
mov
lods
mov
inc
in
push
sbb
testl
lea
fisubrs
fnstcw
and
jnp
out
jl
scas
out
pushf
popf
pop
fcmovnbe
iret
loope
push
dec
pop
aam
adc
and
jecxz
pop
push
xchg
cli
cmpsl
add
sub
cmp
mov
push
repz
je
jns
add
je
or
outsb
add
outsl
shlb
sbb
adc
inc
pop
pop
pop
lods
or
stos
fldenv
roll
add
fistps
insl
mov
out
in
aaa
jb
mov
cmp
imulb
adc
pop
cmp
je
jp
aaa
sti
mov
mov
sbb
fistl
inc
in
in
xor
mov
jbe
or
stc
js
in
pop
jp
ret
insl
add
fisttpll
cmp
and
call
and
xlat
xchg
rclb
in
icebp
lret
inc
dec
mov
xor
or
jnp
xchg
mov
mov
and
repnz
add
mov
rcr
jge
test
adc
sub
push
rep
movsl
rolb
std
jmp
shr
dec
ss
ret
xchg
out
xor
repz
sbb
push
cwtl
pop
lods
sti
lds
mov
inc
pop
add
loopne
mov
xchg
mov
sti
subb
jns
dec
jecxz
and
and
add
adc
adc
ret
xchg
test
xchg
or
cmpl
mov
ret
lods
mov
mulb
adc
lds
sti
in
jne
pop
lods
or
push
int
arpl
jbe
test
insl
bound
cli
pushf
push
sahf
jno
movsl
pop
decl
scas
push
cmpsb
push
mov
add
mov
lahf
je
sbb
fists
or
jecxz
stc
shr
mov
in
jae
sarb
popa
and
cli
sub
in
hlt
add
jl
jns
call
jg
push
inc
sub
leave
loope
and
hlt
shld
jmp
movsb
or
push
add
stos
and
fs
xor
in
repz
rcll
cmp
hlt
lea
push
testl
sarb
popa
sbb
ret
lods
adc
adc
mov
daa
xchg
lret
push
into
xor
pop
stos
popa
push
and
adc
sub
in
into
cmpsl
push
les
dec
xor
test
bound
movsb
mov
mov
or
push
insb
cld
les
or
and
pop
out
testl
xor
xchg
xor
imul
mov
popf
mov
adc
loop
mov
ret
ret
mov
mov
daa
cwtl
sbb
or
mov
fdivs
aad
inc
idivb
pop
cs
stc
sub
xor
jmp
insb
lods
cld
cld
sbb
pop
fidivrl
dec
fs
dec
out
lret
jbe
sbb
mov
ret
adc
lods
pusha
sub
fnsave
loope
insl
rcrl
lds
adc
sbb
mov
out
push
adc
push
das
aas
add
rclb
in
or
in
push
sbb
sar
fisttpl
into
negl
pop
cmp
jg
inc
cmp
inc
push
or
mov
push
dec
mov
cli
dec
arpl
jg
insl
dec
jmp
cmpb
mov
imul
imul
xchg
cmp
lret
test
lret
ret
ret
movsb
pop
adc
imul
push
mov
xchg
xchg
ja
cmp
in
in
mov
add
pop
mov
mov
ficoml
or
dec
pop
or
push
cmp
fwait
or
xchg
bound
cmpsl
jo
rorb
add
cmp
pop
push
sahf
mov
cli
dec
stos
int3
jae
sbb
psrld
aas
shr
xchg
push
sub
aam
pop
dec
mov
stc
arpl
xchg
inc
xchg
push
sahf
and
test
jp
pop
js
add
inc
and
popf
ss
movsb
push
xor
lds
sbbl
mov
out
push
sbb
jmp
outsl
outsb
dec
inc
and
cli
mov
aad
xor
es
jecxz
clc
bnd
out
jecxz
and
loop
cmp
scas
ret
cli
and
test
jge
mov
mov
outsb
mov
jle,pn
jne
enter
iret
subl
push
sub
push
shl
jno
jne
leave
mov
mov
inc
out
fstps
dec
adc
jg
push
mov
aad
mov
insb
mov
movsb
call
push
push
ljmp
jne
ret
pop
mov
xchg
cmp
das
xor
add
ss
mov
pusha
loope
in
insb
or
inc
in
push
jae
mov
push
iret
out
xchg
jnp
je
cmp
ds
mov
xor
push
sub
dec
add
lcall
shrl
dec
lret
ja
push
cmp
bound
leave
imul
pop
mov
or
adc
push
pop
push
adcl
lea
sar
or
pop
clc
mov
in
addr16
jae
xchg
xchg
sub
scas
inc
mov
push
rcrl
lret
fistps
dec
clc
mov
std
divb
fdivrl
cltd
insb
add
mov
cmp
xor
cmp
mov
mov
rcll
sub
jl
std
fstl
lcall
mul
movsl
xor
popa
sub
push
lods
sbb
mov
xor
xchg
push
test
or
int3
inc
jns
adc
inc
test
xchg
push
push
pop
jmp
daa
insb
rolb
push
out
dec
loop
inc
aas
mov
push
out
and
ret
sbb
mov
inc
xchg
inc
vminss
shlb
xchg
or
mov
xlat
or
insb
and
adc
cwtl
lahf
lret
jge
push
push
mov
push
addr16
outsb
out
test
push
xor
pop
out
xchg
aaa
and
xorl
shrb
pop
repz
adc
mov
adc
imul
xor
inc
xchg
out
inc
cmpsl
in
faddl
lods
mov
or
lcall
insb
push
push
ret
cli
arpl
in
xchg
in
scas
test
mov
fs
cmpsb
jne
add
push
xor
lret
sbb
xor
inc
ja
daa
sbbl
mov
sub
popf
jg
add
cwtl
andl
test
cmp
inc
sbb
pop
stos
addr16
andb
sbb
adc
jg
icebp
pop
popf
out
aas
push
push
xchg
ret
pop
inc
pop
mov
mov
xchg
sub
hlt
cmp
cmc
inc
jge
int3
xchg
test
aad
fidivrl
push
ret
pop
ret
xor
push
jmp
mov
and
sbb
les
or
cs
lock
adc
in
pcmpgtw
jle
sbbl
adc
add
cmp
lods
push
loope
testl
lods
adc
add
pop
mov
xor
inc
iret
mov
cmpsb
arpl
mov
ja
fdivrs
dec
je
test
and
push
nop
and
add
sub
pushf
mov
inc
mov
stc
pop
aas
inc
push
pop
testb
adc
divb
dec
lea
cmc
and
int3
jmp
cs
pop
jb
bound
mov
and
dec
aas
push
clc
ret
jmp
scas
mov
mov
cli
out
cmp
subl
jle
sti
pop
movsb
in
es
repnz
jnp
pop
or
js
push
dec
xor
mov
or
arpl
push
jo
cmp
mov
jae
adc
jecxz
jmp
push
adc
filds
push
push
leave
js
out
shlb
imul
push
fsubp
stos
inc
clc
pop
scas
pop
push
cmpsl
pushf
ret
int3
dec
aaa
mov
shll
hlt
or
jecxz
xorl
and
pop
add
pop
outsb
adc
lahf
lret
insl
push
sti
scas
pushf
xchg
mov
mov
adc
mov
or
xchg
cmp
mov
hlt
in
ss
arpl
cmp
and
jp
scas
repnz
mov
ljmp
out
movsl
mov
notb
sti
jle
adc
rclb
pop
daa
movsl
adc
repnz
mov
xor
mov
push
hlt
pop
or
insb
movsb
scas
push
mov
cmp
push
mov
aam
or
ret
ljmp
out
ljmpw
mov
imul
sbb
shlb
jmp
jl
cltd
xchg
in
jp
fwait
scas
repz
ljmp
and
filds
push
sahf
out
sub
ret
loop
xchg
and
movsl
add
mov
add
jo
inc
mov
test
inc
jecxz
and
cmp
pop
sbb
push
icebp
mull
cmp
sub
cmpsl
mov
test
inc
outsl
stc
and
loope
inc
call
mov
pop
and
and
add
adc
add
mov
mov
shl
or
jp
jne
jmp
test
outsb
pop
push
daa
lods
mov
and
dec
and
cmp
mov
xor
pusha
xchg
push
insb
cwtl
sahf
inc
or
sti
gs
jg
and
test
call
insb
aaa
dec
mov
jmp
push
repz
inc
mov
aam
cs
ljmp
lcall
mov
call
sub
test
iret
das
out
out
xchg
sub
insb
mov
data16
jnp
cmp
leave
dec
xchg
xor
sar
sbb
push
push
inc
jmp
add
add
xchg
fcmovnb
and
lret
movsl
mov
movsb
sbb
jecxz
mov
push
aaa
cmp
push
sub
cmc
ret
iret
je
mov
fwait
dec
inc
mov
mov
push
sahf
and
mov
or
jl
mov
mov
mov
jb
dec
addr16
mov
imul
sysenter
and
lods
sarb
es
jge
jmp
call
cmp
jp
arpl
into
out
adcl
arpl
aaa
int3
xchg
fcompl
push
mov
xor
adc
or
inc
jmp
xor
push
lds
orb
mov
shlb
push
fwait
into
inc
imul
pop
xor
mov
pop
loop
arpl
std
loopne
jb
stc
add
push
aam
mov
or
fsubl
in
outsl
dec
mov
push
push
ljmp
xor
push
cmp
or
cli
arpl
sub
mov
orb
mov
mov
aaa
dec
dec
xchg
in
push
in
push
ss
xchg
fwait
lds
loope
das
insl
sbb
ds
test
xchg
es
jge
lea
dec
pop
fmull
imul
xor
aam
cs
mov
pop
push
adc
jns
repz
pop
or
mov
jb
roll
dec
xchg
xor
test
sbb
or
jns
sub
pop
or
dec
lcall
add
adc
addr16
fst
inc
xchg
mov
mov
stos
ja
enter
inc
xlat
add
loope
lea
in
popa
sbb
mov
xor
xchg
test
sub
push
pop
fnstenv
mov
inc
dec
insb
inc
add
and
in
shlb
pusha
xchg
mov
mov
fld1
shrl
sbb
sti
xorl
jge
push
and
sub
mov
es
loopne
lds
dec
cmpsb
mov
sub
out
cmp
jmp
inc
mov
or
push
mov
adc
add
xchg
data16
lcall
dec
mov
or
jmp
fs
rorl
push
test
sahf
jo
rcr
lahf
test
or
push
hlt
xchg
call
jnp
pop
xor
dec
mov
fld
daa
mov
jle
mov
testb
es
pop
test
repnz
ss
mov
or
test
inc
stc
pop
cmp
ficomps
xchg
sbb
mov
push
mov
push
push
xchg
loope
dec
dec
inc
addr16
jmp
push
and
add
rcl
out
aas
dec
addb
fs
push
out
add
fcoms
and
xor
add
jo
bound
pop
xlat
aam
in
cmpsl
outsl
adc
sub
mov
push
mov
lock
xchg
jo
or
cmp
inc
sahf
or
xchg
jecxz
sub
das
adc
test
xor
mov
sub
in
insb
out
cwtl
sub
insl
sbbl
push
clc
push
pop
adc
addr16
loope
cmp
dec
mov
stos
xor
sub
movsb
lahf
shrb
or
in
daa
or
sbb
jg
xor
and
pusha
sub
xchg
cmp
mov
outsl
inc
addr16
mov
cmp
jg
xchg
jne
mov
pop
movsb
mov
stos
fadds
jp
roll
mov
into
movsb
add
popf
cltd
sbb
xchg
daa
mov
stos
cmp
xchg
dec
lds
xor
fidivrs
mov
in
or
pushf
add
stc
push
pop
pusha
iret
mov
inc
lea
xor
incb
or
push
mov
rcrl
inc
test
stos
repnz
sti
xor
cmpsb
repnz
and
faddp
mov
jecxz
sub
int3
roll
adc
popa
cmpb
ss
subl
rcrb
xchg
test
pop
adc
ds
push
xchg
dec
sub
jle
jne
test
dec
mov
push
mov
in
inc
cmpsl
inc
pushf
jmp
orl
ljmp
stos
cmp
mov
and
aaa
add
xchg
outsl
idiv
sbb
sbb
cmp
mov
mov
js
cmp
add
cmp
je
push
lods
cmpb
pop
pop
dec
and
push
aad
or
pop
inc
fsts
cmp
ja
out
mov
adc
inc
push
mov
lcall
sub
js
add
mov
mov
pop
pop
sti
push
mov
movsw
and
pop
dec
and
lock
ja
push
pop
push
pop
cmp
repz
xchg
loop
adc
or
push
pop
mov
and
subb
and
sbb
div
jle
xchg
in
adc
fsubrl
push
jo
adc
leave
push
popa
daa
not
dec
xor
pop
push
sbb
loopne
mov
mov
fdivrp
mov
pop
cmp
xor
sub
push
pushf
cmp
hlt
test
insl
shld
mov
dec
and
hlt
insl
mov
mov
out
xchg
rcl
jae
mov
push
push
push
aaa
push
out
andb
lock
sarl
mov
push
push
in
adc
adc
cmc
jp
adc
cmp
loopne
jnp
push
gs
stc
mov
mov
xchg
mov
shlb
pop
or
rcll
out
es
xchg
pop
hlt
test
scas
push
bound
add
outsb
pop
pop
fs
push
int
jp
adc
jne
js
in
lods
in
cmpsb
leave
mov
mov
adc
andb
pop
daa
mov
aas
pop
lahf
xchg
or
das
and
mov
enter
or
vrcpps
mov
pop
sbb
pusha
iret
out
push
push
push
mov
xlat
ror
or
and
in
cmp
or
in
sbb
inc
push
test
loopne
pop
loopne
loope
aas
lock
and
jb
inc
cld
or
loope
and
ljmp
add
fmul
xchg
pop
jnp
xchg
pop
hlt
mov
pop
or
push
arpl
addr16
fidivl
orb
cmpsl
sub
push
aam
push
test
nop
cmp
je
testb
test
adc
jne
push
inc
insl
fs
cs
ss
push
nop
js
jns,pt
dec
cmpsl
pop
nop
lea
cltd
test
cmp
inc
fcoml
inc
and
notl
fbstp
inc
and
jno
or
lods
aad
xchg
test
mov
lret
aam
lods
sub
aad
movsl
aad
cwtl
int
sub
cmp
outsb
rorl
push
sbb
addr16
add
xor
stos
jbe
jle
in
out
cltd
xor
push
jbe
int3
pusha
sub
inc
stc
outsl
aad
jb
das
pop
and
gs
jns
std
xor
push
push
push
mov
mov
and
and
mov
jle
or
cmp
cli
push
jle
adc
sbb
push
aas
cmp
cld
in
xchg
rolb
sbb
jecxz
add
subb
outsb
jp
pusha
adc
adc
inc
imul
rolb
mov
lea
and
inc
cmp
mov
jb
sarl
rcrl
fidivs
loopne
mov
mov
add
lret
fistpl
hlt
sub
mov
pop
decb
cld
and
pusha
test
pop
mov
lret
cmp
push
mov
mov
jae
cwtl
lds
cmc
cwtl
pop
icebp
sub
mov
add
jecxz
mov
mov
out
cmc
psubusw
lcall
stc
icebp
jp
xchg
loop
sti
imul
int
cmp
xchg
lret
ss
loope
fsts
jae
add
cmp
call
ds
adc
js
movsl
pop
mov
lahf
mov
and
xchg
scas
bound
push
mov
ljmp
xor
mov
fwait
repz
test
es
cltd
sub
ljmp
lcall
xchg
rorl
cltd
iret
lahf
gs
aad
mov
mov
loope
add
es
adc
xor
out
sbb
pusha
mov
pop
adcb
push
pop
pop
pusha
or
mov
mov
cmp
push
addr16
cmp
imul
or
in
jns
mov
jne
subb
push
jnp
xchg
or
sbb
das
mov
hlt
sbb
inc
push
aaa
add
test
add
loop
subb
loope
test
add
mov
fs
dec
ja
les
adc
stc
cmp
pop
popa
push
fs
jns
push
mov
xchg
je,pt
dec
ss
sub
push
fildl
in
jb
inc
mov
fwait
cmc
pop
xchg
jb
sub
mov
pop
xlat
out
push
push
dec
add
xchg
inc
ret
shrb
mov
xlat
data16
jae
inc
cmp
jo
or
fcmovnb
push
push
jmp
sbb
mov
add
inc
fwait
mov
push
out
jle
or
push
push
pushf
sub
xchg
push
dec
insl
adcb
mov
fsubr
jmp
add
jmp
mov
outsb
ficomps
or
imul
mov
mov
or
push
mov
pop
in
inc
neg
jb
pushf
aaa
xchg
add
dec
mov
pusha
push
xchg
int3
pop
push
mov
lock
repnz
xchg
push
shrl
add
inc
sti
sbb
mov
and
mov
lret
xchg
out
loopne
dec
inc
inc
add
repz
cmp
orl
mov
daa
inc
and
test
dec
fisttps
sbb
cmc
shrb
scas
lret
adc
sbb
mov
hlt
mov
and
clc
scas
aas
pop
or
mov
xchg
movsl
jae
stc
sub
rorl
fstpt
pop
cmp
ficompl
mov
fsubl
adc
pop
inc
std
orl
dec
scas
pop
mov
lods
aam
icebp
out
mov
movsl
mov
mov
push
inc
lock
int3
mov
mov
jae
fwait
inc
push
cmp
fs
sub
fwait
mov
call
sbb
jp
leave
sub
xor
sbbl
push
inc
cwtl
or
ja
popa
out
aad
icebp
jne
in
sbb
shlb
ret
add
icebp
je
js
pop
bound
adc
out
adc
sub
sahf
cltd
mov
fildll
adc
pop
stos
jb
aaa
adc
negl
lock
int
sub
ljmp
test
adc
xchg
inc
fldenv
mov
mov
testl
jecxz
das
out
adc
dec
push
cs
push
push
jnp
or
pop
jb
jns
cli
mov
movsl
or
sarb
xor
mov
rcll
pop
cmp
jmp
xor
je
addb
es
lea
out
jmp
jge
loop
or
cmp
dec
or
data16
mov
nop
bound
adc
clc
fdivrs
add
bound
fcoms
push
mov
rorl
mov
outsl
mov
out
adc
mov
jne
inc
sbb
mov
data16
test
add
jns
andl
pushf
cmp
ss
insb
cmc
dec
out
mov
inc
sbb
lea
pop
cmp
jnp
repz
sbb
fiaddl
lods
negb
movsb
imul
aad
xchg
jo
imull
es
push
jnp
gs
add
sub
push
mov
add
ror
push
xchg
jns
jp
not
cli
in
push
imul
nop
adc
loope
jne
jmp
and
mov
in
xor
fwait
aad
cs
cmp
cli
cmpsb
fucomip
dec
adc
outsl
xchg
xchg
cmp
inc
fs
cwtl
jecxz
push
pop
sbb
ret
jle
nop
popa
sbb
mov
adc
in
lds
lods
shrl
outsb
pop
ljmp
icebp
inc
adc
out
movsl
dec
adc
mov
or
dec
pop
lret
sahf
movsl
add
cwtl
fistpll
rep
aad
hlt
lcall
out
or
idiv
andl
push
mov
mov
cmp
push
loop
popa
and
mov
add
jno
loop
clc
out
out
into
fidivrs
imul
push
mov
sbb
mov
sub
fcoms
or
sbb
xor
aaa
lds
mov
push
fnsave
and
mov
dec
popa
jge
mov
jle
pop
popa
mov
pop
pop
lahf
mov
mov
lock
jbe
dec
inc
fsts
int
cmp
movsb
mov
cltd
push
idivl
xor
jg
popa
hlt
cmp
int3
add
dec
sbb
jnp
lea
mov
sub
mov
dec
nop
sub
addr16
mov
gs
sbb
xchg
cmp
inc
es
inc
fdivs
dec
sub
pusha
mov
imul
cwtl
test
sbb
rorb
inc
stos
ss
pop
jns
fwait
pop
dec
mov
sub
cmp
mov
shl
sbb
aam
cmpsl
insl
jne
add
add
xor
xchg
lcall
aad
cld
adc
push
sbb
insl
dec
test
xchg
testb
int3
push
int
fiaddl
fnstenv
cs
sbb
dec
aad
shl
insb
cwtl
addr16
fs
popf
mov
int3
pop
and
out
push
pop
aaa
sbb
mov
sahf
pop
ret
pop
jo
movsl
clc
mov
jge
jno
pushf
push
mov
mov
fidivrs
in
les
fisttps
dec
lret
fdivrs
sti
pop
lcall
popf
xchg
fsub
movsl
in
rcll
popa
scas
lds
dec
mov
push
sbb
lock
jge
in
cmpb
fadds
xor
adc
adc
stos
or
push
xlat
mov
or
xchg
outsb
into
xchg
mov
arpl
dec
ss
sbb
aad
enter
push
push
test
fldenv
cwtl
out
testb
xlat
jae
repz
jb
arpl
jnp
mov
mov
mov
push
ss
jne
xorb
adc
jle
adc
jno
mov
sti
aaa
jecxz
fistpl
and
push
jle
outsl
xor
mov
mov
pop
test
pop
and
dec
outsb
movsl
xchg
ret
lds
in
inc
fsubrl
loope
jb
dec
loop
jne
push
sub
xor
xchg
movsl
and
dec
dec
xchg
adc
nopl
in
fisubrl
stos
fidivl
lods
sub
fcoml
mov
push
xchg
test
pushf
fcmovbe
add
xor
imul
sbb
insl
sbb
sub
mov
jl
sarl
xor
mov
stos
jge
add
push
xchg
dec
inc
xor
stos
mov
dec
or
fnstcw
mov
add
scas
mov
loope
mov
mov
pop
sbb
dec
rorb
push
fadds
xor
push
adc
iret
inc
jmp
xchg
push
imul
xorb
mov
lods
push
add
push
loope
sti
sub
or
fcompp
icebp
sub
aam
sbb
inc
movups
xor
test
add
ja
outsb
add
int
dec
pop
dec
fldt
shll
and
add
icebp
mov
nop
jl
xchg
pushf
dec
or
mov
sub
cs
adc
sub
adc
or
in
or
pop
jb
cs
mov
push
jg
xchg
cli
xor
insb
jl
jnp
insl
jae
outsl
mov
add
pop
movsl
pop
dec
xchg
test
xchg
inc
cmp
sbbb
mov
push
aam
add
jbe
pop
xor
outsl
and
out
push
xor
jecxz
cmp
out
mov
arpl
mov
in
or
fiadds
lahf
imul
lea
lock
mov
icebp
pusha
xchg
or
fidivs
vpavgw
xor
xchg
subl
pop
cs
xchg
int
pushf
clc
pusha
stos
out
xchg
int3
dec
dec
inc
xor
repnz
ret
iret
jns
in
xor
insl
mov
inc
popf
jno
scas
lods
xor
ljmp
cmpsb
roll
rcrl
xor
clc
jecxz
xlat
mov
test
sub
pop
aad
sub
repz
cmp
and
out
cmc
stos
lcall
push
pop
adcb
mov
dec
and
outsl
arpl
xchg
pop
lods
mov
sub
es
nop
mov
or
pop
pusha
and
jb
mov
adc
xchg
sub
in
jne
and
jns
adc
add
mov
aam
lcall
mov
jnp
clc
fisttpl
insb
mov
sbb
push
dec
stos
shr
dec
aas
or
push
js
nop
fstpt
js
roll
fisubrl
rcrl
popf
mov
add
outsl
xlat
mov
jge
inc
iret
adc
add
cmp
int
gs
ret
mov
ret
das
dec
cmp
pop
xchg
or
mov
mov
mov
loope
xchg
jae
pop
lret
pop
insb
push
negl
or
in
icebp
rolb
xchg
fcompl
test
pop
push
fxch
repnz
jae
das
inc
xchg
es
pop
push
cmp
outsb
aas
xchg
imul
adc
dec
js
cs
xchg
mov
sbb
ret
es
sub
xor
lods
xchg
cmpsl
in
jle
sub
ret
andb
jg
pop
push
cmp
push
cwtl
cmpsb
jmp
lods
sti
or
stos
sarl
fisubrs
or
test
fnstcw
jo
stc
aas
pusha
or
test
xchg
cmp
push
jp
call
adc
xor
mov
and
xor
mov
push
ja
inc
sbb
jb
push
xchg
in
addb
arpl
jbe
mov
jge
repz
add
mov
sbb
icebp
enter
mov
mov
or
jns
mov
fidivrs
push
in
mov
mov
push
aam
push
mov
mov
dec
dec
insb
jo
aas
dec
js
inc
std
xor
sti
xchg
js
xchg
stc
jno
jg
movsb
icebp
push
and
dec
testb
mov
mov
imul
add
stos
daa
cmp
mov
or
cmp
bound
mov
and
mov
and
mov
loopne
pop
fsubr
mov
out
leave
test
sub
popa
adc
outsl
das
xor
test
iret
mov
stos
dec
cli
arpl
mov
shrb
push
js
pop
aaa
sub
add
inc
test
outsb
sti
popf
movsb
lret
nop
in
lcall
pop
cs
test
inc
scas
movsl
rol
cmc
add
lock
push
sbb
jne
mov
cmp
mul
or
add
inc
dec
push
call
or
inc
and
pop
inc
mov
inc
sbb
mov
and
not
cmp
pop
mov
xor
add
mov
push
pop
cmp
add
jno
inc
mov
and
mulb
xor
xlat
jbe
ja
mov
xchg
xor
sub
repz
mov
aam
add
adc
bound
imul
rcl
enter
adc
das
cmp
mov
and
xchg
insl
jae
jne
jge
jo
hlt
push
pop
dec
jb
cmp
xchg
arpl
and
fsubrs
mov
movsb
mov
fstl
add
or
das
xchg
inc
addr16
outsl
fidivrs
pop
mov
xlat
fcompl
pop
js
sub
push
cmp
or
adc
xchg
jb
jp
or
outsb
adc
ret
outsl
add
mov
sbb
add
xchg
mov
push
push
add
andb
jecxz
ficomps
adc
aad
gs
mov
add
adc
int3
lock
ret
or
xor
dec
and
push
loope
push
sub
jns
push
nop
pop
in
pop
xor
int3
fadds
int3
in
in
cwtd
sbb
call
pop
sub
scas
aam
rolb
nop
or
fs
lcall
icebp
xor
into
mov
sti
call
cmp
sarb
lea
daa
les
mov
pusha
into
lods
jmp
das
inc
popf
adc
lds
cmp
xchg
and
or
aad
sbb
pop
incl
jae
movl
mov
or
cmp
push
lret
int
pop
or
mov
enter
loopne
push
push
and
lret
pop
jnp
mov
and
cmp
sub
cmp
data16
loop
subl
inc
fdivl
sub
mov
cmp
gs
test
pop
xor
mov
pop
push
aam
fsubp
in
push
mov
adc
out
jbe
push
mov
mov
mov
sti
adc
mov
jmp
mov
mov
mov
mov
jns
sahf
cmp
xchg
xchg
imull
jmp
jmp
cltd
push
imul
cmp
clc
adc
cmp
ret
in
and
push
cmpsb
mov
sbb
inc
aad
fsubrs
mov
popf
stc
aas
push
mov
and
rcll
add
iret
shlb
es
test
loope
xchg
push
insl
xor
cwtl
cmp
jae
nop
adc
sbbl
mov
xlat
fistl
lock
xor
es
adc
dec
sub
sbb
lret
scas
lds
jae
or
add
mov
mov
into
sti
or
pushf
popa
mov
sbb
cmp
adc
test
mov
leave
cmpsb
gs
cltd
fsubl
inc
xor
shrl
push
push
in
shrb
dec
mov
mov
sbb
imul
mov
mov
mov
push
sub
mov
insb
sarl
push
mov
arpl
add
in
popf
jmp
inc
xchg
icebp
fldt
fmuls
dec
pop
and
cld
inc
imul
xchg
es
jmp
jae
xchg
pusha
mov
mull
mov
sahf
jle
ret
and
inc
inc
lea
xchg
jp
jp
out
xor
in
sbb
popf
jge
cmp
mov
jp
std
js
sbb
lahf
aas
sar
outsb
fwait
test
pop
jno
adc
xchg
mov
mov
call
inc
dec
lahf
les
mov
push
dec
aam
mov
outsb
add
clc
xchg
lock
inc
cwtl
jmp
xor
jae
adc
xorl
dec
mov
xchg
jbe
test
jp
or
ret
test
negl
mov
jp
iret
mov
push
push
dec
inc
sub
add
mov
frstor
insb
mul
xchg
and
inc
pop
cmp
xor
jb
icebp
sub
sub
xchg
ja
int3
push
push
lods
fcoml
lcall
jbe
cmp
add
xor
pop
add
in
bound
sub
and
scas
adc
cmc
fucom
inc
pop
inc
xor
fsubs
or
cmpsb
fldt
stos
cld
jbe
aam
add
cltd
lds
es
imul
mov
push
subb
mov
test
sub
rep
cmp
xchg
test
pop
cwtl
xchg
cltd
int3
xor
cld
jbe
inc
inc
enter
mov
data16
lcall
and
mov
cmp
mov
xor
jns
in
and
test
mov
mov
imul
out
pusha
add
jbe
or
or
xor
dec
lahf
cmp
mov
test
flds
xchg
xor
mov
in
cmp
pop
insl
imul
mov
xor
cmpl
dec
sub
mov
push
push
push
push
dec
fs
sbb
mov
pop
push
mov
gs
out
pop
add
hlt
movsb
orl
movsb
mov
out
jns
clc
push
mov
push
inc
sbb
push
inc
or
imul
push
fnstcw
sahf
jmp
and
sahf
les
frstor
movsl
inc
and
dec
push
or
jg
out
jmp
mov
pop
adcb
inc
addr16
sub
testl
inc
xlat
aas
cmp
dec
add
aad
adc
andb
lods
fistpl
or
sub
push
imul
out
push
mov
nop
pop
or
das
xchg
imul
jne
cmp
sbb
pop
movl
mov
adc
mov
lds
into
lret
fs
ret
jo
or
mov
popa
aas
xor
lea
and
les
in
out
and
subb
das
inc
add
mov
xchg
inc
inc
push
mov
mov
and
sbb
incb
xchg
loope
imul
int
push
cmpsl
inc
pop
lea
lcall
je
mov
xor
and
iret
out
and
add
sbb
sub
mov
fists
andb
arpl
inc
mov
mov
jmp
mov
popa
mov
out
int3
xchg
push
ljmp
or
lea
ret
jbe
pop
lods
xchg
cld
inc
xchg
in
scas
data16
fisttpll
and
sbb
jo
or
repz
les
dec
and
js
xchg
ljmp
jno
call
aaa
or
fs
iret
and
out
inc
jmp
inc
mov
mov
xchg
int
jb
jg
andb
mov
inc
aad
push
xchg
mov
xchg
cli
dec
add
insb
add
out
push
mov
xchg
ficoml
adc
mov
out
xor
adc
jb
shll
push
ret
jae
xchg
mov
cli
pop
rcll
lea
or
das
cld
and
mov
rcrb
into
xchg
push
leave
incl
lods
stos
out
mov
inc
or
jb
xchg
xchg
mov
jnp,pt
dec
add
mov
sub
les
test
stos
xchg
je
mov
cmpsl
dec
repz
jno
fwait
bound
or
popa
test
jmp
mov
test
std
mov
pushf
popf
test
push
xchg
loope
adc
addb
movsb
xchg
inc
out
dec
pop
cmp
pusha
mov
jns
sub
or
lods
imul
cld
pop
mov
mov
add
pop
mov
mov
jns
js
pop
push
gs
push
xchg
jg
cmp
int3
dec
xchg
aas
in
scas
sub
jmp
out
cmp
xor
aam
sbb
sbb
push
push
lret
pop
subb
out
out
jecxz
cmp
pop
or
mov
mov
fiadds
addr16
jmp
sub
adcb
xchg
push
es
stos
cmp
inc
daa
jbe
test
mov
pop
dec
in
cmpl
std
shll
jb
jmp
sub
incb
int3
add
push
leave
push
sub
pop
stos
lods
sub
mov
push
add
cmp
cmp
xor
imul
mov
mov
inc
les
packuswb
inc
sti
push
mov
xor
faddp
jmp
mov
mov
out
fbld
in
jle
nop
xchg
pushf
enter
pop
js
rcl
stc
jge
pop
add
stc
adc
push
jne
inc
lea
jo
dec
xor
and
hlt
push
add
pusha
xor
aas
lods
and
sahf
jecxz
cs
test
mov
and
jbe
xlat
xchg
dec
push
pop
ret
push
mov
mov
xor
lock
mov
adc
jae
inc
bound
sti
push
into
xor
jae
inc
lods
inc
push
fsubrl
sbb
data16
mov
iret
dec
notb
pop
jnp
push
jle
jg
sbb
xlat
cmp
stos
xchg
cmp
cmpsb
mov
lods
pop
leave
mov
outsb
test
roll
adc
nop
ljmp
inc
sarl
outsl
mov
ss
leave
ja
mov
aam
push
sti
sub
mov
pop
mov
push
xchg
and
sub
cs
lret
pop
pushf
into
add
mov
mov
cld
out
lcall
int3
mov
xchg
xor
mov
pop
xor
mov
and
pop
lds
or
lret
jns
fimuls
dec
xchg
and
mull
dec
push
xchg
out
xchg
cmp
mov
and
pop
sbb
cmp
lahf
sbb
mov
xor
sbb
fdivrl
jl
adc
jne
dec
jge
rorb
xchg
test
std
stos
mov
lock
xlat
shl
lods
pop
pop
out
call
xchg
push
pop
jle
push
mov
xchg
lea
daa
push
cmpsb
mov
shll
aam
js
lock
xchg
mov
mov
gs
mov
add
add
imul
into
and
popa
aam
imul
mov
inc
ror
test
out
insb
pusha
fcmovnb
inc
sbb
push
lea
ret
fdivs
orl
mov
mov
popf
push
aam
fldenv
imul
std
test
mov
inc
mov
jge
push
add
sti
cwtl
push
in
les
jnp
mov
outsl
jle
add
out
mov
sbb
dec
push
fld
push
mov
mov
xchg
loope
cmp
mov
cmp
xchg
cld
mov
imul
xor
sbb
imul
outsb
jge
pop
mov
es
imul
imul
hlt
repnz
jne
push
push
mov
andb
inc
pop
sub
dec
cmp
imul
sub
mov
pop
loopne
fmuls
xlat
mov
popf
mov
cmp
test
push
aam
inc
add
lea
out
movsl
pop
push
push
ficompl
inc
test
jb
jge
mov
pop
pushf
pop
fs
aam
in
sbb
mov
and
mov
lret
xor
sub
test
fsubl
jno
push
inc
jne
jecxz
inc
adc
mov
lds
pop
jcxz
pushf
mov
rcrb
in
push
outsl
push
sub
pop
pop
loop
aad
mov
and
xchg
push
fsubrs
fstpt
cmp
movsb
inc
mov
sbb
cmovb
inc
shlb
dec
mov
fmulp
adc
xchg
sub
mov
ficompl
dec
nop
dec
pop
push
daa
xor
js
loope
outsl
outsb
xor
xchg
pushl
adc
pop
out
test
dec
loope
dec
jo
or
xorb
sbbl
sahf
adc
cmpsl
pusha
pop
xchg
les
push
cli
mov
sbb
dec
adc
loopne
fistpll
jns
xor
dec
xor
loopw
std
es
into
mov
lret
jne
in
pop
mov
aad
daa
shll
jle
sub
xor
pop
arpl
add
outsl
xchg
lods
jecxz
jecxz
xchg
cltd
mov
lahf
pop
shlb
xor
sahf
ret
scas
addr16
and
xchg
pusha
jbe
rcrb
enter
and
sbb
jg
fwait
js
inc
xor
inc
ret
pusha
push
cwtl
outsl
adc
imul
frstor
insl
aam
daa
out
inc
shlb
lret
or
mov
cli
xchg
xchg
xchg
lret
pop
pop
popf
xchg
or
sarb
int3
ret
push
pop
pop
prefetch
or
jae
rclb
mov
dec
cli
shrl
testl
and
out
imull
notl
fisttpl
push
cmp
loope
out
push
jg
dec
data16
pop
inc
aas
pop
je
pushf
lcall
lods
and
jg
add
into
ljmp
jb
mov
cmp
scas
mov
cmpsl
jmp
pop
movl
mov
insl
aaa
xchg
jo
pop
hlt
dec
clc
or
int3
mov
cmp
add
outsl
sub
dec
xchg
pusha
aad
dec
mov
inc
sub
pop
mov
xchg
cmp
mov
pop
mov
cltd
outsb
shll
arpl
and
xor
cld
jmp
dec
cmp
and
sub
scas
je
mov
jg
sbb
dec
out
imul
cmp
pushf
lock
and
or
aad
std
or
jne
insb
cmp
mov
lods
fimull
pop
add
xchg
sahf
pop
and
xor
add
add
orl
pop
mov
mov
mov
in
stos
and
enter
sarl
iret
sub
lock
mov
ss
testb
sub
lods
push
fsts
push
mov
adc
bound
fwait
gs
adc
test
sbb
mov
stos
push
push
push
or
out
lcall
push
in
enter
mov
ja
lret
jl
cli
iret
mov
pop
mov
sarb
stos
dec
cmpsl
push
adc
cmpsl
in
mov
pop
and
sub
sbb
cmp
sbb
mov
sub
dec
inc
or
cmp
jl
sarl
lret
cmp
sahf
ja
pop
in
xor
or
lret
sbb
dec
mov
je
pop
cmpsb
loopne
lea
cmpsb
mov
pop
out
pop
iret
loope
mov
push
lock
adc
jp
out
movl
scas
inc
out
mov
aas
dec
and
add
pop
das
add
push
sub
xor
lods
adc
push
cmp
push
mov
pop
icebp
stos
sti
pusha
insl
mov
xchg
mov
sbb
push
push
dec
popf
in
sti
or
add
nop
push
jno
out
aaa
jmp
and
mov
jae
rclb
jo
pop
xchg
mov
out
xchg
or
popf
pushf
mov
mov
popa
pop
lret
mov
cld
dec
push
mov
cmpb
testb
jle
pusha
in
jp
cmpsl
std
push
js
inc
in
mov
add
fisubrs
cmp
xchg
cwtl
jne
in
push
in
popa
stc
jno
adc
out
cmpsb
jb
mov
lcall
ss
and
adc
aaa
cli
sti
mov
int
aad
pop
inc
loop
push
stos
sub
adc
imul
jecxz
sub
mov
mov
mov
inc
jg
cwtl
push
daa
fldcw
push
or
stos
add
cmp
dec
cmpsb
ret
lret
movsb
jg
xchg
shrl
ffree
scas
sbb
addl
popa
je
je
cld
lock
cmp
add
mov
imul
pop
pop
mov
cmp
idivb
add
mov
stos
mov
inc
insl
push
ds
pop
outsl
fstpt
dec
sbb
iret
push
in
pusha
icebp
sbb
sbb
mov
pop
jnp
rol
xchg
and
movsb
nop
pop
and
adc
push
push
les
ret
dec
xor
push
loop
xchg
imul
jne
xchg
loope
wrmsr
sbb
sbb
loope
sbb
sub
add
xor
js
pop
das
xchg
xor
jmp
call
push
int3
subl
jno
shrd
dec
cmp
leave
xchg
inc
cmpsb
lock
call
cmpb
lret
movsl
call
sbb
aad
cmp
dec
in
jb
mov
ss
inc
scas
lods
mov
sti
leave
push
cmp
cmp
pop
loope
test
mov
mov
pop
pop
repnz
stos
fsub
int
xchg
in
pop
xor
popf
loop
mov
add
or
repnz
mov
stc
icebp
mov
add
imul
lahf
mov
add
sarl
mov
and
pop
addr16
icebp
mov
xchg
mov
jl
test
lock
adc
int
lods
gs
xor
inc
cld
jle
arpl
cwtl
in
jge
cmp
loop
sbb
and
or
les
fcmovu
psadbw
sub
movsb
adc
xchg
je
sarb
push
jnp
sbb
mov
testb
lds
dec
aam
adc
sbb
pop
push
add
incl
orb
push
mov
jecxz
xchg
sbb
xchg
mov
insb
fcmovnu
stos
int
pop
fsubl
das
inc
jo
adc
inc
pusha
sub
arpl
ret
jg
aam
and
inc
pusha
jle
outsb
xchg
mov
popa
or
imul
push
mov
sub
dec
xchg
dec
mov
cmp
xchg
inc
je
pushf
jo
cs
daa
lds
mov
xchg
mov
int3
pushf
jp
test
fmul
xchg
jns
xor
or
add
xchg
mov
mov
gs
mov
xor
push
insl
xchg
fisubs
loope
pushf
lods
lock
mov
push
sub
fstp
mov
jbe
mov
test
inc
aam
testl
imul
mov
imul
jnp
outsl
pop
xor
mov
stos
mov
pop
out
xchg
cmp
pop
loopne
pop
test
pusha
xor
out
dec
shrl
cs
bound
dec
mov
test
outsl
xchg
adcb
stc
rorl
cmp
mov
nop
mov
hlt
push
out
lods
stc
sub
cmpsb
jnp
xor
cltd
xchg
std
xchg
pop
movsb
cwtl
popf
mov
xchg
in
shll
stos
inc
movsb
cmpsl
lock
fnstcw
rcrb
lret
ret
and
cmp
jl
jmp
sti
aam
adc
and
xchg
decl
push
jo
xchg
ja,pt
mov
mov
rcrl
jns
jecxz
inc
lret
inc
sbbl
xchg
add
pop
push
sub
popl
or
and
and
lahf
mov
hlt
daa
lods
push
push
or
inc
imul
mov
mov
cmp
add
cmp
ret
sbb
cmp
imull
cmp
cmp
jp
mov
push
adc
ret
bound
out
cld
inc
dec
lret
xchg
mov
out
mov
or
mov
cs
je
mov
lods
or
push
mov
repnz
adc
jae
mov
add
inc
sbbb
cmp
jg
inc
pop
lret
test
mov
mov
fstpt
sbb
in
add
push
out
add
adc
dec
xchg
mov
enter
out
mov
and
mov
into
mov
loopne
xor
jno
cmpsb
sarb
jne
out
mov
inc
xchg
mov
add
jl
or
pop
clc
inc
jnp
push
in
mov
mov
jmp
inc
xchg
addr16
adc
dec
inc
push
xor
ret
push
mov
and
sbb
push
cmp
push
cltd
jle
notl
mov
lock
or
cmp
mul
mov
pop
dec
sub
loopne
mov
push
xchg
out
dec
jge
ret
mov
adc
pop
in
scas
fidivs
scas
dec
imul
add
pushf
add
loop
and
in
adc
cld
imul
sub
xor
leave
out
or
imul
icebp
push
and
cmp
xchg
sub
mov
xchg
cli
sti
rcrl
mov
and
sbb
dec
ds
into
dec
stc
dec
push
outsl
mov
xchg
dec
pminsw
xor
test
movsb
das
add
jae
or
jne
lret
mov
xor
add
dec
out
mov
ret
or
xchg
out
jno
cli
pop
jns
xchg
mov
imul
decb
adc
mov
movsl
dec
jne
dec
cmpsb
inc
cmpsb
gs
mov
mov
je
xchg
xchg
sbbb
aas
inc
jecxz
jnp
frstor
jmp
adc
cmp
inc
aam
jg
pop
ss
pop
dec
xor
call
add
cmp
icebp
pop
sahf
out
add
push
lods
fisttps
mov
mov
cld
insl
cmp
in
sub
xchg
bound
repnz
pop
push
shlb
pop
add
outsb
scas
ficoml
push
mov
mov
lods
inc
out
push
cs
jmp
jl
insl
mov
xchg
in
fldl
sbb
and
test
in
push
cld
movsl
jno
cwtl
mov
jecxz
push
jno
pop
imul
loope
mov
ss
iret
push
inc
pop
cs
jge
jae
jnp
adc
adc
push
inc
add
cmp
jmp
push
sbb
push
pop
insb
add
or
mov
sub
scas
addr16
cmp
lds
ja
pop
aas
fwait
lods
daa
push
sub
inc
push
pushf
inc
fisttpl
push
xchg
jo
sbbl
mov
sbb
xchg
rolb
popa
sub
loopne
dec
daa
aam
sub
xchg
stos
mov
cs
add
insl
aaa
clc
clc
cld
lcall
jns
fisubrs
jnp
insb
jge
sarl
xlat
push
aas
push
fldcw
out
cmp
jns
dec
sub
test
pop
sub
cwtl
aas
or
insl
pop
inc
mov
pop
ss
xchg
jp
jae
movsl
jp
cld
ljmp
jmp
in
int3
ret
xor
mov
and
enter
and
push
ss
pop
stc
arpl
xor
cmpsb
add
dec
pop
cmp
es
lods
aam
mov
les
sub
fwait
cmp
cmp
cs
into
adc
cwtl
rep
loop
out
xor
leave
cmp
mov
gs
jb
jne
shlb
test
test
mov
cmp
cmc
jne
mov
and
sbb
jge
ficomps
fmuls
lcall
dec
dec
aaa
xor
sub
push
lcall
cmp
mov
xchg
cmpsl
pop
and
cs
scas
jns
inc
stos
popf
xor
jae
push
mov
roll
cs
sub
push
dec
sbb
pop
dec
rolb
dec
mov
xchg
sbb
rcll
les
or
and
vmaxsd
mov
ret
inc
and
and
int
roll
test
mov
jl
sub
pop
mov
xor
push
pop
xor
inc
cs
cmp
lret
mov
mov
mov
dec
in
pop
lret
jl
sahf
dec
dec
clc
or
mov
or
lret
mov
fnstenv
test
dec
call
push
sbb
stos
insb
popa
or
in
stos
into
dec
adc
orl
xor
outsl
ret
cmp
push
dec
loopne
push
cmp
xor
or
lods
ljmp
lods
in
dec
insb
in
jp
addl
pop
mov
pop
jle
cmp
sbb
aas
imul
daa
add
es
lds
mov
cmc
mov
mov
sub
pop
xchg
xchg
lods
loopne
ds
flds
or
or
stc
jecxz
mov
clc
movsb
cwtl
jo
jne
inc
and
loope
cwtl
into
dec
dec
sbb
cmp
gs
test
ljmp
lcall
inc
stc
push
jle
loopne
in
mov
pop
les
sub
sbb
dec
mov
mov
xor
ljmp
mov
cmp
out
mov
add
add
jmp
or
pop
out
xor
mov
call
loopne
cmp
jmp
and
xor
cmp
cmpl
cwtl
into
scas
jle
out
out
daa
inc
test
lahf
pusha
cwtl
pop
ror
inc
shrl
mov
pop
jae
cmp
dec
and
mov
sbb
jb
es
into
insb
sbb
fwait
cmc
xchg
in
pop
je
jg
mov
ss
pop
aas
popa
imul
pop
push
stc
dec
stos
fdivrl
xor
outsl
pop
lds
push
scas
push
fcomi
xor
aad
pop
cmp
sar
cwtl
repnz
fwait
out
aas
mov
lods
sub
cwtl
mov
das
sbb
sbb
xchg
inc
dec
push
test
inc
aad
and
fstps
adc
hlt
adc
aas
lret
ftst
and
pop
jb
sti
les
sub
ds
mov
mov
pop
or
test
pop
jmp
xchg
and
cmp
mov
imul
push
cmp
cmp
xchg
sub
rcrl
inc
nop
movl
mov
xor
push
popa
cmp
xor
xor
stc
push
mov
daa
lret
dec
ja
imul
cmpsl
or
sbb
fisttps
mov
arpl
and
mov
scas
xchg
icebp
push
xchg
jg
aad
divl
inc
mov
pop
dec
lock
inc
and
or
mov
add
fs
jnp
outsl
lahf
ja
pop
mov
gs
andl
insl
and
push
imul
cmp
pop
not
pop
sbb
aas
scas
sbb
js
push
nop
or
lods
push
jbe
repnz
decl
les
and
dec
stos
int
sub
xchg
cmpsb
cmpsb
lea
ja
mov
bound
and
cmp
dec
xchg
aas
sub
insl
cmc
out
ret
dec
dec
popa
popa
mov
bound
ror
scas
cmp
xchg
pusha
adc
pushf
cmp
ret
pusha
xchg
jp
or
sub
mov
dec
fimuls
lcall
or
push
and
add
test
fwait
aad
dec
int3
rolb
ljmp
pop
dec
and
xor
adc
xor
and
mov
push
mov
add
enter
nop
xchg
pushf
jne
jns
inc
insl
lret
jmp
pop
das
jns
nop
xchg
jge
sbb
mov
fidivrl
outsb
adc
call
out
fisttpll
cmp
and
iret
icebp
and
div
mov
pushf
lods
mov
xor
sarl
xor
aas
jbe
imul
jo
jns
scas
movsb
daa
iret
mov
lret
js
repz
push
cmpl
lods
stos
add
cmp
cmp
mov
pop
jmp
push
int
jo
sub
imul
sti
mov
inc
int
shrl
enter
push
sub
sub
mov
ror
into
pop
xchg
jle
test
push
lds
xchg
mov
int3
adc
loop
sbb
mov
aaa
pop
js
xor
xor
mov
mov
das
pop
aam
mov
ss
clc
enter
mov
fcmovnb
mov
add
movsb
add
sbb
and
dec
popf
cmp
sub
dec
out
push
icebp
insl
or
xor
mov
lea
mov
leave
out
rcrl
cld
pushf
aas
push
inc
pusha
jle
adc
sub
dec
mov
lock
rclb
stos
xor
pop
xor
adc
lds
xlat
or
mov
leave
in
push
stos
clc
pusha
mov
jne
movsl
lahf
scas
xchg
adc
fisubrl
cmp
loope
jne
call
sub
mov
scas
fsubr
outsl
add
setbe
dec
cld
and
push
push
jmp
cmp
lret
jo
ss
push
outsl
xchg
pop
loopne
jb
mov
testb
xchg
cld
mov
outsl
in
xor
mov
dec
mov
aas
or
test
out
test
insb
push
push
xor
rolb
push
adc
mov
jae
pusha
lcall
inc
mov
les
aam
dec
adc
mov
dec
mov
aam
mov
inc
popf
imul
cmp
and
ja
ljmp
sti
push
xchg
arpl
sub
push
add
rorb
les
sti
movsl
inc
fdivl
sub
and
es
and
hlt
jb
lock
cmp
lret
cmc
leave
or
or
dec
pop
add
mov
dec
adc
sbb
and
push
sahf
xchg
cmp
icebp
or
mov
loope
mov
out
cmpsb
clc
cmp
orb
sub
movsl
push
cld
mov
nop
outsb
mov
cs
mov
out
fists
and
stos
shr
das
and
aaa
pusha
and
arpl
cwtl
popa
leave
mov
push
add
add
lea
das
cmpsl
dec
fcmovnu
dec
sub
mov
inc
ja
sbb
call
or
sub
shrb
shufps
cmp
cmc
hlt
xlat
outsl
lods
inc
pop
jno
mov
lcall
cmpsl
mov
cmc
mov
mov
test
test
sub
or
and
fwait
xchg
sbbl
dec
push
pusha
cmc
stc
ret
jo
call
insb
daa
repnz
fbstp
sub
sub
mulb
sub
pop
jbe
fistpll
xchg
sbb
bound
sahf
test
idivb
mov
outsl
cld
push
xchg
cwtl
xor
lcall
or
ja
xor
fwait
dec
inc
adc
cmp
ja
xchg
sub
cli
and
out
xlat
stc
outsb
sbb
sub
out
cmpsb
adc
xorb
inc
jae
ret
popf
push
mov
outsb
mov
jl
cmpsl
insl
jae
jb
shlb
movsl
imul
and
dec
push
out
push
stos
cmpsl
mov
mov
add
pop
dec
psrlw
test
push
xlat
ja
lret
jge
outsl
mov
pop
or
push
xchg
mulb
mov
scas
sbb
dec
leave
sub
test
fsubl
mov
test
mov
push
jle
daa
pop
je
imulb
cmp
enter
lcall
push
xor
std
ss
dec
mov
hlt
cmpsl
xor
imul
dec
cmp
out
mov
mov
xor
push
cmpsl
dec
add
ds
cwtl
mov
or
js
movsb
push
dec
lret
push
rclb
fsubp
xchg
sbb
int3
mov
mov
xchg
adc
cmp
rol
jmp
cli
fcmovu
or
sbb
aas
xchg
mov
insb
add
mov
xor
pusha
push
and
jle
test
add
imul
addb
mov
in
enter
cltd
jecxz
xor
push
scas
std
push
mov
inc
mov
mov
out
call
dec
repnz
inc
sub
or
xchg
mov
xchg
dec
aas
push
popa
icebp
repnz
mov
xchg
ds
ss
cmp
cmc
push
sahf
pop
cmpsb
int3
mov
push
mov
jp
jne
mov
cmp
arpl
lahf
sahf
jle
push
pop
dec
sub
stos
lds
adc
mov
outsb
inc
movsl
mov
or
lds
dec
rorb
loop
bound
outsl
and
and
idivl
cmp
cmc
mov
test
inc
sub
jo
jae
or
jb
clc
jmp
cs
mov
adc
adc
xlat
cld
add
iret
sub
andl
xor
mov
fisubl
sbb
jle
jae
inc
inc
and
fwait
addb
pop
jae
insb
ret
rorl
xchg
fcomps
sbb
movsl
in
movsl
fists
idiv
pop
jbe
add
jge
push
jecxz
fstps
cmp
jns
bnd
sub
shl
sti
jnp
daa
add
out
dec
push
add
cli
jbe
add
movsl
mov
xor
test
jmp
sbb
jbe
fidivl
dec
int3
or
outsl
pop
xchg
sub
fsubl
or
dec
sbb
adc
shrb
sbb
xor
or
iret
loopne
xor
mov
int
adc
bound
test
das
fisubl
jg
inc
push
cmp
jns
lods
shl
adc
dec
aad
and
pop
xor
icebp
or
mov
addb
xor
sahf
adc
mov
pop
pop
data16
stos
loop
push
jecxz
cmc
push
sbb
dec
popf
dec
outsl
xchg
out
mov
loope
insb
sbb
adc
mov
inc
xchg
mov
pop
das
insb
loope
sahf
xor
xchg
icebp
cs
push
iret
jae
out
mov
sub
lcall
mov
xorb
sbb
outsl
xor
sub
inc
pop
jl
test
jb
cmp
popa
je
imull
sbb
xchg
add
in
into
mov
mov
lcall
in
lea
test
bound
or
pusha
lret
popf
imul
stc
and
xchg
inc
test
jno
shlb
sub
cmpsl
mov
xchg
mov
dec
ror
sub
push
stc
inc
aaa
loope
sti
jbe
add
and
cwtl
add
mov
push
sbb
inc
push
mov
ds
add
fs
add
out
pop
bound
rcll
movsb
pop
sbb
negl
lret
enter
xor
nop
push
and
icebp
mov
test
cwtl
jle
rorb
imul
arpl
dec
lods
and
cld
paddb
dec
xchg
in
outsl
xchg
lds
push
mov
mov
cld
cwtl
fdivrl
adc
insl
xor
int3
repz
insb
mov
jmp
sub
inc
pop
mov
inc
cltd
adc
inc
mov
mov
sbb
xor
or
push
mov
lret
add
mov
mov
dec
sarb
dec
add
inc
aas
push
pop
aas
dec
daa
push
push
jae
test
stos
lock
icebp
push
pop
cmp
and
or
xchg
les
cli
mov
pop
test
loope
shl
rcrb
dec
bound
cmp
or
repnz
les
aas
pushf
mov
fisubl
push
lock
mov
or
ljmp
mov
lds
fcomip
popa
sub
mov
gs
mov
ja
stc
fisubrs
push
mov
cltd
pop
mov
in
sbb
leave
adc
dec
pop
fimull
outsl
stos
les
xchg
sub
imul
subl
xor
js
rclb
fisttpll
add
rorl
xor
lock
les
js
xor
icebp
sarl
push
push
sahf
jge
pop
iret
adc
je,pt
lret
push
ret
pop
add
sbb
mov
out
pusha
mov
cmp
inc
lret
xor
mov
inc
mov
fwait
jle
cvtps2pi
dec
in
jae
jmp
imulb
dec
js
test
mov
lahf
xor
aad
dec
cld
xchg
loopne
sbb
push
sbb
cmp
jns
and
fdivs
call
lcall
mov
sbb
out
shlb
push
inc
add
dec
repnz
mov
inc
cmp
in
loope
lcall
out
adc
add
aad
aam
in
cmp
adc
daa
mov
inc
mov
popa
mov
mov
insl
sahf
mov
jmp
outsl
cwtl
push
aaa
push
mov
mull
jns
sub
fsubrs
xor
lds
lds
and
daa
adc
repnz
xor
lods
sub
testb
and
mov
jmp
enter
xchg
mov
stos
mov
inc
sub
dec
dec
lods
bound
cmp
cmp
loop
and
push
rcl
popf
in
jnp
sbb
cmc
lcall
je
jns
cltd
mov
sub
add
xchg
mov
int3
rorb
or
arpl
mov
jae
inc
mov
add
in
ret
xor
movsb
loop
and
ss
inc
mov
hlt
fcmovnu
lcall
stos
jo
lcall
sbb
loope
insl
inc
dec
out
push
lds
mov
jg
mov
add
add
fistl
dec
inc
dec
dec
xorb
push
mov
pop
cli
out
pop
ljmp
pop
jecxz
fwait
mov
repz
dec
cld
in
lret
cmp
fbstp
jge
imul
aaa
cs
cmp
mov
sbb
or
sub
lahf
pop
out
filds
arpl
gs
addl
aas
js
push
add
mov
adc
movsl
jo
lock
icebp
dec
cmp
push
stos
cmc
mov
mov
loop
jecxz
lds
icebp
push
inc
pop
inc
cmpsl
fidivs
jmp
insl
in
insb
out
int
dec
push
insl
push
mov
sub
adc
jl
push
in
and
jae
sarb
orb
xchg
lods
adc
lods
lret
and
clc
aaa
jno
outsb
filds
pop
aam
rcll
insl
mov
jp
iret
xchg
bound
dec
xor
ret
imul
jle
xchg
scas
adc
rol
add
out
add
pusha
cmp
pop
mov
jl
fwait
and
loopne
movsb
add
add
imul
adc
les
xchg
shlb
jne
rorl
inc
jne
or
sbb
mov
or
imul
lret
push
popa
pop
jg
jbe
add
aam
test
mov
dec
cmp
xchg
movsl
mov
xchg
dec
test
loope
sbb
sbb
cmp
jle
push
pop
cltd
daa
ljmp
pop
mov
xchg
in
xor
repz
or
aas
adc
xchg
out
xchg
ficomps
pop
mov
lcall
dec
insb
jecxz
push
lea
stos
leave
xor
dec
pop
and
popa
xchg
jbe
pop
mov
or
rcll
xor
cmp
hlt
filds
add
int
sub
pop
add
aam
jl
mov
or
xchg
adc
xchg
mov
sub
pop
mov
rcl
js
mov
jae
fbstp
pop
cmpsl
inc
test
imul
mov
mov
in
pop
addr16
lret
sub
jnp
outsl
adc
stos
mov
loope
cld
stc
xchg
mov
mov
inc
lods
es
shrb
dec
sbb
or
gs
testl
out
out
dec
push
inc
sub
mov
pusha
mov
lcall
mov
push
insl
pop
nop
jecxz
es
add
test
mov
jge
es
inc
sub
int3
orb
mov
outsl
ret
popf
orl
xor
mov
mov
xor
lds
cwtl
mov
mov
loope
lods
pop
in
es
ret
push
pop
in
cmpsl
loop
fidivrs
mov
mov
push
sbbl
jle
mov
jmp
sbb
adc
test
cs
ficoms
sbb
ss
inc
cmp
mov
addr16
jo
std
dec
pop
rol
inc
xchg
jl
loope
gs
xor
cltd
fsubr
out
sub
sbb
mov
fcmovu
out
pop
and
pop
hlt
call
xor
push
call
das
loopne
in
cmp
xchg
daa
lds
idivl
movsl
daa
xorb
sbb
adc
adcl
nop
enter
dec
mov
push
popw
test
pop
sbb
pop
int3
push
pop
sbb
jae
inc
insb
mov
cwtl
pop
fsin
lahf
hlt
lds
subps
xor
mov
mov
clc
in
out
xor
fwait
rorl
cltd
adc
mov
lea
cld
xchg
cwtl
out
cmp
xchg
insb
bound
dec
and
xor
movsl
ss
jg
shrb
lods
push
lea
icebp
and
cld
cwtl
test
lods
xchg
or
imul
rcrb
adc
in
sub
into
mov
and
dec
and
cmp
pop
cs
orl
outsl
dec
daa
mov
push
fcmovb
adc
mov
cmp
jl
pop
cltd
pop
fs
in
rclb
add
movsl
pop
push
int3
add
lock
gs
cmp
mov
aam
decb
mov
pop
sub
sahf
xor
sbb
add
cmp
pop
sub
mov
xchg
mov
cmp
insb
icebp
mov
aaa
push
cmp
lret
mov
sbb
pusha
or
repz
outsb
cmc
insl
into
gs
pop
pop
cmp
push
pop
imul
push
or
sbb
iret
leave
and
push
in
in
outsl
adc
and
adc
sbb
int
and
negl
test
mov
in
or
mov
or
pop
lea
push
arpl
filds
imul
cwtl
inc
lcall
add
cwtl
shlb
xchg
jb
ja
mov
fistps
mov
sub
rclb
pop
stos
aam
jno
hlt
out
outsl
mov
push
xchg
ds
pop
and
xor
xchg
outsl
pxor
mov
and
mov
dec
iret
mov
pop
fstpt
shr
out
mov
adc
movb
inc
xchg
mov
mov
dec
out
testb
xor
mov
cltd
push
mov
int
rcrl
ds
test
jp
jno
test
jl
add
out
or
jae
pusha
xor
test
cmp
mov
jne
xchg
and
es
fwait
orl
movsl
aad
cld
fimuls
dec
sub
ss
inc
mov
mov
push
cmp
and
adc
mov
adc
xchg
sti
xchg
or
int3
xchg
dec
repz
pusha
les
inc
outsb
test
ss
ds
mov
dec
xor
push
mull
lds
mov
test
mov
adc
call
test
insb
into
inc
sub
call
jle
pushf
xor
jns
pop
mov
daa
pop
xor
andl
sbb
push
push
mov
sti
jns
mov
bswap
adc
push
pushf
popf
push
and
cmpsl
dec
cmc
arpl
jmp
pushw
lods
xchg
sbb
insb
sar
daa
enter
movsl
lds
mov
jbe
sahf
inc
pop
jb
enter
and
and
pusha
jne
popf
in
adc
test
mov
adc
shlb
add
jns
je
fs
aaa
fidivs
aas
jl
xchg
cmp
adc
lods
mov
push
mov
in
or
adc
or
jecxz
pop
sub
mov
sub
add
and
dec
push
fidivrl
adc
inc
add
push
imulb
add
insb
cs
inc
jle
push
dec
xor
mov
jo
mov
add
insb
lahf
out
cmc
adc
xchg
cli
xchg
adc
cltd
sbb
inc
scas
fidivrs
out
sub
mov
imul
ds
jmp
push
push
and
outsb
arpl
jle
pop
fdiv
mov
lods
fisttpll
adc
rorb
fabs
mov
and
popf
pop
nop
mov
mov
jmp
outsl
sahf
jg
cmc
adc
mov
cmp
sub
sahf
inc
dec
jo
push
lret
cmp
sahf
popa
cmpsb
or
in
les
sub
xorl
xchg
sub
sbb
xchg
xchg
iret
xchg
push
out
and
adc
jb
idivl
jmp
jg
fs
xor
jmp
ret
cltd
add
pop
aas
push
ds
fildll
adc
lods
fdivl
jecxz
test
ds
fcoms
pusha
adc
test
jmp
lahf
nop
ja
in
inc
inc
mov
xor
mov
cmp
pop
mov
je
xchg
outsb
fwait
decl
ds
push
jp
add
inc
les
and
fistpll
fists
add
xchg
sbb
adc
pop
test
std
pusha
xor
sbb
or
and
mulb
jno
icebp
das
or
mov
mov
xor
mov
arpl
cmp
push
nop
das
jno
and
mov
fnstenv
mov
xor
push
dec
out
adc
mov
and
xlat
sub
mov
pop
adc
ret
mov
sub
add
jg
jns
mov
cld
add
mov
pop
xchg
xor
notl
arpl
cmp
seta
xchg
loope
pop
xor
bound
jns
inc
je
mov
jp
lds
cltd
ljmp
std
dec
in
inc
xchg
push
cwtl
push
pop
dec
jg
lods
adc
mov
pop
jns
sbb
popl
aaa
in
into
enter
aam
sahf
sub
xchg
bound
jle
insb
cmp
mov
jns
rolb
pushf
and
loope
xchg
jmp
adc
cmpsl
mov
mov
xchg
add
xor
or
and
inc
fdivl
imul
sti
pop
or
jecxz
shl
mov
das
mov
add
dec
and
cmp
in
arpl
push
ret
mov
adc
dec
rcrl
mov
pop
pop
leave
cmp
xor
leave
popa
and
in
sahf
nop
lahf
adc
dec
frstor
xor
jne
push
cmc
jle
negl
ja
or
imul
fwait
movsb
enter
maskmovq
leave
fnstcw
mov
lea
out
dec
clc
ror
cs
add
stos
sub
lret
jne
idivl
ds
inc
inc
jle
or
fistl
sbb
add
push
and
lahf
sub
lret
jns
push
add
inc
pop
push
inc
inc
aad
xor
ret
push
sbb
loop
and
push
xor
or
jne
pusha
rorl
pop
lcall
pop
cmp
mov
fcmovb
test
pop
das
fmull
loopne
dec
cmp
cmp
cmp
mov
rorl
cmc
sbb
pop
repz
andb
lock
out
cmpsb
adc
mov
inc
jnp
addr16
or
sti
jae
mov
insl
nop
cld
mov
inc
lret
push
mov
cmp
daa
decb
ret
xchg
jecxz
and
popa
and
dec
test
mov
add
mov
push
cmpsb
repnz
adc
add
xchg
arpl
ret
stos
xchg
repnz
fisttpll
jae
les
mov
pop
add
xchg
fcmovb
lahf
insl
mov
inc
fstpt
cmp
xchg
adc
test
call
mov
mov
and
outsl
sub
mov
sub
mov
push
cmp
adc
enter
cltd
out
or
hlt
ja
mov
pop
popf
dec
stos
or
xor
mov
sub
jmp
popa
shl
nop
dec
movsl
pushf
mov
lds
push
xor
adc
es
lock
mov
dec
dec
pushf
ret
push
insb
aaa
adc
jecxz
and
dec
dec
add
push
add
mov
jl
mov
testl
ja
mov
inc
lcall
xor
mov
pop
fstpt
sti
push
xchg
adc
mov
sub
push
in
xor
and
in
addr16
add
sbb
mov
jge,pt
jnp
cmpsl
cltd
and
inc
xor
mov
scas
mov
loop
add
je
adc
and
test
pusha
mov
and
pop
loopne
insl
xchg
mov
jbe
ficompl
pusha
dec
lcall
imul
aaa
std
xchg
shrl
loop
and
nop
adc
push
outsb
pop
inc
or
push
popa
pop
adc
push
out
jbe
leave
cwtl
stos
test
sbb
ljmp
mov
adc
xchg
lea
push
mov
and
sbb
mov
les
shll
loop
faddl
inc
jb
je
popa
repz
push
sbb
and
fistpl
mov
dec
es
jg
add
pushl
mov
mov
mov
nop
pop
xorl
movsl
inc
and
clc
mov
jno
mov
xchg
popf
dec
fisttps
push
loopne
cwtl
movsl
jnp
and
pop
out
mov
pop
mov
sbb
sbb
fcomps
and
inc
iret
std
daa
or
outsb
pop
sahf
adc
push
jae
lcall
fidivl
ss
lret
add
test
enter
push
out
out
repz
enter
pop
stc
jge
pop
outsl
cmp
andb
hlt
pop
lcall
repz
pop
enter
movsl
xor
sbb
fs
xor
xchg
lea
cld
push
leave
and
mov
lahf
data16
xor
lret
out
cltd
imul
dec
out
cs
daa
ret
jl
jb
jg
xchg
and
mov
mov
lahf
insl
stos
ds
int
xor
sahf
lret
andl
xor
jnp
push
dec
push
clc
iret
lock
mov
cmp
xchg
mov
aad
jae
decl
out
pandn
test
popf
iret
sbb
xlat
mov
fwait
cmpsb
cmp
movaps
adc
xor
push
mov
pop
jmp
inc
mov
xor
xchg
cmc
sbb
add
ljmp
adc
aam
xchg
sahf
inc
sarl
pop
jg
int
cmp
test
push
push
movsb
loop
pop
aas
stos
psllw
jl
mov
cmp
xchg
mov
or
imul
pop
mov
mov
mov
test
insl
js
icebp
xor
push
inc
pop
mov
adc
popl
mov
push
mov
mov
ja
hlt
je
lret
inc
aas
test
xor
fimuls
stc
sub
out
mov
push
lahf
sarb
adc
or
add
cwtl
mov
sub
mov
cmc
shl
push
sbb
stos
mov
sbb
out
sbb
stos
mov
pop
gs
imul
outsb
int
inc
add
stos
mov
in
sub
iret
in
pop
repnz
xchg
or
jae
jg
xor
mov
loopne
jp
in
fidivrs
mov
mov
and
pop
pop
and
repz
movsl
pop
sub
and
mov
add
adc
pop
jg
mov
sbb
push
push
xchg
adc
stos
fisttps
pop
pop
data16
and
aad
outsb
pop
nop
aaa
pop
test
push
sub
fdivs
imul
lea
fiaddl
sar
mov
xor
hlt
push
shlb
lods
push
sbb
inc
adc
cs
gs
mov
ret
out
mov
or
jle
push
sbb
or
push
dec
ss
push
fdivrp
mov
ja
ljmp
inc
test
repz
push
add
sbb
pop
push
shl
call
cmpl
mov
mov
sahf
imul
xchg
lcall
in
call
std
mov
fstpl
int3
fld
ffree
adc
or
jge
movsl
pop
loopne
mov
mov
out
adc
stos
dec
imul
mov
imul
jnp
pop
inc
imul
out
mov
inc
sub
jnp
push
jecxz
scas
mov
jbe
sbb
lcall
arpl
push
push
xor
xchg
mov
pop
scas
add
ss
add
jnp
das
loopne
int3
mov
sub
adc
sbb
inc
mov
andb
dec
jp
rcll
shrb
mov
ja
inc
xchg
xchg
rorl
das
push
leave
xchg
pop
sbb
orl
in
inc
negl
and
lret
mov
orl
xchg
rclb
rolb
data16
in
mov
lahf
mov
mov
pop
jbe
jmp
popf
mov
push
stos
mov
mov
movsl
call
scas
imul
fwait
mov
cmp
dec
movsb
xor
sbb
gs
loop
cmpsl
gs
subb
mov
xor
mov
xchg
shrb
andb
xchg
push
cmp
pop
pop
xor
cmp
nop
sub
jmp
mov
mov
fimull
sbbl
mov
pop
xor
fisubl
adc
jb
sub
loope
add
or
xchg
outsl
dec
lods
cmpsb
xor
int3
mov
lret
bound
into
shll
or
push
ss
jge
push
mov
mov
lock
ret
push
cmc
les
jge
pusha
cwtl
dec
pop
cmc
mov
mov
enter
push
pop
stos
shrl
arpl
cs
jmp
add
inc
adc
mov
or
sub
xchg
outsl
sahf
jns
and
out
xor
xor
or
xchg
dec
loopne
lahf
pop
cmp
or
mov
add
mov
jno
jne
push
lods
js
push
sub
xchg
repnz
or
mov
fwait
pop
imul
jg
mov
jecxz
jl
jnp
adc
sub
iret
aad
jne
sbb
das
clc
xlat
mov
lds
test
inc
hlt
js
test
cmp
xchg
dec
jecxz
jp
out
ror
xchg
xor
enter
lods
and
pop
jnp
mov
push
push
sbb
and
out
xchg
jmp
sbb
data16
dec
pop
fisttps
xchg
inc
fwait
in
lds
sub
sbb
push
loope
adc
insb
cmp
push
push
mov
fcompl
sbb
jns
inc
popf
pop
fstpt
repnz
inc
les
sti
mov
push
jbe
lret
sahf
outsl
fs
mov
cmpb
push
adc
stos
add
mov
xchg
mov
idivl
and
sub
xor
ret
lods
xchg
lret
xchg
or
aas
and
adc
mov
pop
fisttpl
push
mulb
jae
mov
dec
insb
dec
jbe
loop
outsb
lods
jae
push
mov
add
test
ret
std
xor
dec
popa
inc
sbb
xadd
xor
mov
sbb
adc
bound
jne
and
in
shrl
push
mov
enter
sbb
in
add
aaa
jae
xchg
js
push
xchg
pop
addr16
ljmp
test
mov
sbb
or
inc
or
popa
ret
mov
and
push
mov
lret
stos
or
xor
fsubs
sbb
lds
out
mov
dec
mov
and
ja
fcom
repz
notb
xchg
out
xor
dec
push
jg
andb
shl
xchg
insl
sbb
sbb
cltd
ljmp
dec
bound
pop
pop
dec
pop
repz
mov
cmp
xchg
imul
test
lret
imul
jne
mov
cld
test
and
icebp
mov
lods
push
xor
lds
jge
sub
xor
loop
adc
rolb
lods
jg
jl
mov
jmp
andl
jae
outsb
and
adc
rcrb
ret
pop
pop
add
les
cmc
mov
ss
dec
roll
hlt
imulb
shll
aam
sub
sub
in
lret
mov
mov
lret
push
insl
jmp
pop
sub
ja
cli
outsb
mov
ja
aaa
jo
mov
jmp
leave
rclb
loopne
jo
clc
fnstcw
inc
fildl
das
cmp
cmp
push
pusha
bndldx
dec
out
push
cltd
xchg
adc
outsl
push
sub
dec
fisttps
je
xor
scas
out
pop
add
fsqrt
andl
ds
push
or
in
or
and
or
popa
or
fnstsw
stc
xlat
es
mov
icebp
xchg
lahf
inc
dec
mov
cld
mov
mov
cld
mov
movsl
or
arpl
xchg
xor
xchg
mov
je
shll
insb
lock
enter
cld
repz
test
js
lods
ljmp
enter
mov
inc
in
out
movsb
stos
mov
mov
pushf
cld
push
addr16
jmp
xor
sbb
into
and
pop
push
les
push
jl,pn
movsb
pop
aas
aas
fcmovne
push
addb
sub
cli
je
daa
jns
cmp
mov
mov
push
jbe
sub
lods
and
mov
fs
add
out
fisubrl
out
cmc
sbb
cwtl
jae
repnz
cltd
pop
push
and
pop
ret
and
push
sub
push
les
lret
sub
cwtl
aaa
rcrl
pusha
ret
scas
adc
jl
cld
inc
mov
test
jl,pn
fisubl
push
push
sbb
or
sahf
cli
jnp
ljmp
cmp
fiaddl
imul
hlt
int
addr16
insb
imul
arpl
iret
filds
aam
inc
mov
js
or
lods
mov
ja
leave
add
mov
popa
mov
sub
jl
dec
mov
adc
jmp
fisubl
mov
push
xchg
xchg
out
das
inc
lods
icebp
push
arpl
mov
ss
push
ja
int3
cli
jp
js
xchg
cwtl
xor
pop
repnz
cmp
dec
xor
fistpl
test
xchg
fstpt
pop
int3
stc
jl
lock
push
mov
xor
popa
mov
lret
test
mov
cwtl
dec
lea
fcmovb
leave
lea
xor
or
pop
dec
add
subl
dec
push
or
mov
shrb
mov
jno
or
fstpl
mov
jne
mov
and
jbe
outsb
std
inc
leave
adc
daa
sub
mov
or
cwtl
repnz
cmp
mov
jl
pop
inc
jnp
adc
filds
movsl
xor
adc
sbb
xchg
incl
jb
nop
adc
jbe
insb
xchg
xor
and
mov
rcll
lock
test
xlat
and
sbb
out
fdivrs
jbe
les
xor
ror
lret
push
fisttpll
push
in
lods
in
jb
loop
insl
scas
jns
jg
cmp
sbb
push
clc
push
scas
jo
mov
mov
movb
inc
maskmovq
inc
imul
push
sbb
mov
imul
jge
or
xor
xchg
test
inc
mov
ror
pop
jge
ret
jl
call
cmp
popa
icebp
hlt
and
shll
sbb
stos
jno
mov
lea
adc
push
pop
test
nop
leave
sbb
das
pop
jmp
pop
mov
xor
repnz
in
lock
sbb
out
roll
sub
mov
mov
push
cmp
clc
repz
enter
or
xchg
adc
xchg
dec
add
jle
lret
dec
test
mov
pusha
stos
ret
jo
push
ret
and
mov
inc
aas
and
icebp
jne
jle
add
arpl
inc
mov
cmc
inc
fxch
inc
mov
ficompl
push
adc
leave
push
add
out
ss
add
movaps
arpl
stos
lods
pop
jae
or
inc
outsb
or
inc
mov
rol
imul
inc
das
int
or
xor
pop
pop
ss
movsb
jns
cmpsb
mov
mov
andb
mov
cld
add
je
inc
jg
ss
aad
xchg
js
sub
and
adc
roll
fbld
mov
out
js
sub
xor
lods
xchg
jmp
mov
mov
and
ss
shl
std
in
cmp
xchg
pop
inc
xor
sbbb
loop
gs
cmp
sbbl
mov
loopne
xchg
cwtl
adc
push
sbb
xor
sbb
push
cmpsb
cli
ret
dec
mov
stc
and
pop
mov
fwait
in
xchg
imul
aaa
loope
fs
aam
dec
xchg
mov
cld
xchg
push
lds
repz
hlt
mov
mov
scas
add
ret
jge
xor
jge
add
mov
push
test
push
push
ljmp
dec
ja
shl
or
sahf
xchg
adc
sbb
je
or
jl
xchg
clc
in
idivb
and
orl
cld
jecxz
bound
outsl
movsl
pop
xor
mov
arpl
mov
mov
test
and
lcall
xchg
out
ljmp
fldt
lods
mov
das
imulb
jcxz
clc
inc
or
mov
add
mov
pop
shrb
movsl
frstor
imul
lahf
loope
mov
ss
adcl
jno
sub
dec
inc
adc
mov
push
adc
divb
dec
pusha
push
inc
nop
outsl
insl
add
mov
imul
or
loope
xchg
cmpsb
jnp
ljmp
daa
or
dec
popf
xchg
mov
xchg
inc
xchg
shll
jns
pop
mov
xor
xor
mov
add
push
aam
cltd
jb
arpl
int3
push
pop
stos
roll
cmp
repnz
jge
lds
xorb
cs
mov
xor
lods
mov
ds
sbb
and
pop
out
dec
cmp
outsb
loope
rcrb
imul
adc
pushl
lar
iret
daa
or
mov
sbb
hlt
cmp
mov
inc
bound
add
icebp
roll
fildl
sub
xchg
test
pop
lcall
push
fldcw
dec
mov
not
movsl
pop
xchg
pop
cmpsb
pop
int
inc
dec
adc
fidivs
or
xchg
ja
xchg
imul
adc
fidivrs
insb
adc
mov
mov
ficompl
mov
out
dec
sahf
dec
aam
lcall
lcall
shufps
fstp
test
mov
lret
or
mov
outsb
xor
mov
data16
sbb
mov
lcall
and
sub
sub
push
pop
int
xchg
add
cmpsb
sub
mov
ret
fsts
jb
xor
popa
mov
lods
xchg
mov
or
or
pop
cs
jne
xchg
das
fsubp
je
xchg
or
dec
inc
push
pop
mov
insl
push
bnd
mov
xchg
pop
insb
xchg
stc
negl
lcall
pop
test
xchg
stc
in
or
dec
mov
xchg
jb
xchg
mov
and
mov
adc
adc
out
sbb
lea
push
sub
in
cwtl
test
lods
lds
loope
xchg
dec
jbe
jg
xchg
sub
int
cmp
shrb
pop
xchg
in
into
rorb
jns
xchg
and
lahf
push
dec
or
cmp
jmp
addr16
les
lods
mov
or
insl
jl
mov
xchg
mov
inc
pop
pop
jg
mov
mov
adc
hlt
cli
out
in
popa
jb
mov
in
daa
sub
fimuls
or
pop
into
aaa
adc
fcompl
inc
mov
cmp
mov
inc
scas
add
fabs
add
sub
fldt
pop
sub
xchg
or
cli
test
clc
mov
jmp
aad
add
xchg
enter
xchg
out
pushf
test
xor
sti
lret
out
pop
push
jo
add
iret
pop
std
dec
cmp
xchg
arpl
addr16
inc
xchg
jecxz
push
jbe
dec
mov
jecxz
icebp
sbb
jle
inc
xor
mov
sub
or
adc
pop
pop
add
lret
hlt
rcrb
mov
lods
or
sub
inc
out
ljmp
cs
mov
push
mov
cmp
mov
xchg
jp
xor
fs
inc
jge
mov
cmp
test
push
xchg
out
push
push
scas
imul
mov
sbb
mov
pop
sub
xchg
loope
xchg
push
je
push
clc
ja
or
les
jp
jmp
cmpsl
aad
test
andl
cmp
inc
enter
into
and
movsb
lret
xchg
sbb
and
out
mov
or
icebp
mov
andb
jl
pop
imul
pushl
cmp
inc
push
xor
sbb
addr16
add
out
jno
scas
popf
aad
xchg
jge
leave
adc
lods
mov
jg
loope
xor
loopne
sbb
push
lahf
leave
jno
hlt
push
scas
mov
pop
jb
dec
pop
cmp
clc
dec
sub
cmp
out
xchg
push
jge
sub
call
insb
test
pop
insl
lods
fidivs
shrl
mov
inc
jnp
cmpsl
sub
or
push
mov
aas
xor
mov
je
out
mov
pop
dec
inc
add
fimull
scas
testb
or
lods
sub
aad
adc
pop
sub
in
cld
adc
loopne
iret
popa
jno
or
mov
jne
cli
pop
test
aas
push
rol
imul
sub
mov
int3
lret
addl
cli
cltd
mov
in
lahf
shlb
adc
push
mov
jmp
jecxz
or
push
sti
imulb
mov
ss
fdiv
mov
ret
repz
jge
push
push
dec
adc
stos
notl
xor
mov
push
push
lea
cmp
push
call
adc
shrb
into
jecxz
mov
dec
cmpsl
sub
xchg
cmp
fiaddl
sti
fsubrp
movsl
aaa
cld
int3
leave
or
stos
cmpsb
loope
push
inc
fnstsw
xchg
xchg
out
mov
data16
inc
cld
push
sti
lret
fcmovnb
aam
xchg
divl
iret
ljmp
lret
push
mov
or
push
pop
sub
dec
sarb
ret
lahf
inc
jmp
adc
jno
das
cwtl
outsb
xor
sbb
fcos
pop
test
lock
in
out
jo
jno
data16
add
lahf
sbb
sub
xor
jge
hlt
mov
aaa
inc
repz
mov
cmpsl
mov
pop
xor
mov
fwait
inc
daa
fidivrs
ret
fisubs
xchg
xchg
lods
sub
pop
cmp
adc
adc
jbe
movsb
int
sub
push
loop
xor
jnp
addr16
int
ljmp
push
iret
xchg
lea
adc
adc
cmp
push
sbb
jle
shll
aaa
cmp
mov
int
push
push
sub
or
repnz
sbb
push
xlat
mov
sbb
sahf
cmp
iret
lods
sbb
int3
sbb
gs
ret
or
dec
xchg
and
mov
mov
adcl
mov
vmread
test
aam
cmp
push
fwait
pop
imul
jecxz
mov
loopne
aas
jno
popa
incl
jo
sar
or
out
adc
cmp
dec
popa
inc
or
mov
cmpsb
xchg
jge
mov
stos
cmp
shl
jae
dec
popa
dec
cld
mov
jbe
jmp
clc
andb
push
repnz
ss
sbb
jne
mov
dec
repz
inc
cmp
gs
std
push
ds
je
arpl
adc
aas
cmp
leave
mov
jmp
negb
xchg
fildl
leave
mov
cltd
pushf
push
mov
add
aaa
mov
add
dec
mov
or
add
push
push
and
pushf
icebp
jae
inc
out
adc
cmc
mov
scas
aam
leave
lahf
jg
out
fistl
jbe
push
cld
push
push
rcrb
and
mov
fisubrl
push
shll
mov
pop
adc
pusha
mov
test
insb
sbb
push
shlb
sbb
pop
int
pop
xchg
lds
xchg
xchg
add
xor
insb
pop
icebp
and
shl
les
out
or
std
fcomp
mov
imul
push
pop
les
jle
ss
test
int
or
sar
fnstenv
fs
dec
nop
mov
push
testl
mov
dec
xchg
popa
or
pop
stos
add
mov
imul
inc
scas
pop
addb
and
cmpl
jecxz
pop
pop
jne
sub
sbb
sar
sbb
mov
nopl
xchg
das
fcompl
js
fidivs
fstps
mov
mov
push
movups
in
push
out
add
icebp
cmpsb
js
cmp
in
nop
or
test
std
mov
push
stc
rclb
jne
mov
cmp
add
pop
sbb
test
movsb
mov
mov
sbb
js
sbb
movb
inc
aas
mov
mov
icebp
mov
shll
imul
inc
stos
fsubl
out
es
sbb
pop
cwtl
out
mov
lods
push
test
push
add
ret
mov
jmp
in
xchg
push
lcall
insl
sub
push
pop
push
mov
pop
fildl
dec
pop
mov
push
jg
je
popf
jmp
cmpl
jmp
pop
xor
pushf
xchg
std
sub
xchg
jns
mov
jae
mov
xchg
daa
stos
cmpsb
add
mov
xchg
imul
in
or
cmp
jl
sarl
jmp
jecxz
inc
adc
jmp
or
repz
jecxz
pop
inc
jno
fs
pusha
mov
xor
out
lret
nop
xchg
or
mov
dec
bnd
in
int
mov
sbb
jp
fsubp
xchg
pop
flds
cmpb
jge
out
cmpb
mulb
or
lcall
ret
push
adc
cmpsb
push
scas
or
dec
mov
mov
je
shr
testb
jo
push
lods
aam
fidivrl
setp
sbb
sahf
ret
in
das
and
xchg
add
dec
and
outsb
sub
inc
mov
push
inc
pop
or
int
xchg
xchg
into
bswap
lret
jle
cmc
pusha
les
pop
push
sub
and
mov
jp
cmp
std
movsb
mov
bound
pop
lret
mov
imul
popa
push
and
xlat
bound
insb
sti
cld
add
gs
mov
jmp
incb
sbb
xchg
push
xchg
jecxz
push
mov
clc
leave
and
cltd
cmpsb
shlb
pop
aaa
and
pop
jae
in
mov
push
xchg
add
pop
lods
fxch
or
pop
xchg
aas
mov
ret
movsb
rcrb
cmp
inc
lahf
xchg
push
subl
fcomps
push
stos
mov
xchg
pop
mov
xchg
shll
pop
gs
test
shrb
ss
dec
xchg
cwtl
cltd
dec
xor
mov
mov
push
adc
mov
cmp
sbb
fs
lret
cwtl
stos
push
sub
mov
pop
daa
data16
repz
xor
fs
push
mov
sbb
pusha
pop
imul
imul
jmp
mov
das
out
push
push
cmp
rcr
xor
jns
push
jbe
insb
cwtl
mov
aad
arpl
fstl
mov
inc
in
inc
push
xchg
add
ret
pop
or
mov
sbb
push
rorl
sub
cwtl
sub
sbb
pusha
sbb
mov
mov
cli
packuswb
insl
xchg
mov
shll
inc
mov
mov
sar
dec
push
dec
insb
or
pusha
pop
test
loope
or
test
bound
cmp
mov
imul
outsb
movsb
jmp
add
pop
or
cmp
fmul
fadd
aaa
fwait
insl
enter
out
jnp
pop
call
cmp
adc
sub
in
dec
xchg
je
cwtl
mov
cld
mov
es
jmp
out
cmp
es
cltd
mov
mov
cmp
cmp
cwtl
or
leave
sbb
sbb
mull
out
fs
into
test
das
je
imul
adc
sti
lds
fwait
orb
ret
imul
sub
cmpsl
int
mov
inc
aaa
mov
sub
xchg
jbe
mov
daa
rolb
ds
loop
shrb
fsubs
mov
fcom
aaa
ss
cltd
cmp
sarl
cmpsl
cwtl
in
clc
inc
ror
push
xor
adc
jae
lahf
sbbl
xchg
icebp
push
push
lods
xor
xchg
in
xchg
ja
xchg
xor
and
push
mov
push
loope
inc
or
adc
ljmp
lods
and
ja
out
mov
loop
ficoml
ljmp
jbe
mov
cmc
mov
xchg
mov
test
jno
jo
cmp
mov
jae
lds
mov
ds
xor
xchg
mov
test
or
aaa
daa
jns
push
ds
pushf
scas
dec
jecxz
jle
or
jmp
stos
mov
adc
push
sbb
sub
adc
mov
xchg
sbb
fistl
flds
into
aaa
cld
adc
jle
xor
in
push
pop
sub
cltd
enter
or
leave
mov
test
and
out
push
gs
mov
mov
mov
lock
push
mov
dec
fdivl
daa
sbb
dec
inc
and
and
cmp
add
xchg
cmp
sahf
lcall
sbbl
clc
divb
pop
in
incl
outsb
xchg
add
ret
mov
jmp
adc
pop
mov
inc
xorl
dec
fnclex
jmp
cli
mov
add
fldenv
jbe
leave
out
dec
or
leave
fdivl
repnz
jg
imul
mov
xor
lcall
sbb
and
mov
push
loop
cld
out
dec
adc
pop
xor
xlat
notl
xchg
clc
fbstp
jmp
pop
fisubrl
jnp
pop
pop
inc
pop
and
cmp
cli
loope
pop
inc
aaa
cltd
movl
pop
mov
stos
aam
stc
mov
fisubrl
and
add
dec
xor
cmp
jl
fildl
mov
into
mov
xchg
cmp
cmp
inc
cs
mov
or
dec
mov
adc
fadds
ret
xor
ljmp
mov
push
je
pop
adc
add
das
call
jle
xchg
pop
push
and
inc
bound
data16
or
add
xchg
xchg
xor
dec
sub
jecxz
pusha
into
fbld
or
aam
pop
mov
or
mov
xchg
xor
push
test
push
pop
cmp
leave
xor
test
dec
sbb
xor
std
inc
or
inc
add
inc
insl
inc
pop
lret
adc
sub
push
das
adc
push
mov
adc
pushf
aad
sbb
sbbb
stos
mov
aam
inc
jae
push
mov
pop
sub
inc
xchg
fsub
add
stc
cltd
push
ja
pop
xor
jmp
adc
or
or
in
sbb
xchg
inc
lods
fidivrl
repnz
jnp
lret
cld
xor
popa
pop
cmp
cmp
pop
loopne
call
rcll
push
test
and
pop
xchg
xchg
bsr
inc
dec
lret
fldenv
enter
sub
mov
fstl
mov
dec
leave
and
jl
icebp
cmpb
sbb
movsl
loopne
dec
aas
or
dec
hlt
aam
out
xchg
ljmp
idivb
inc
push
xchg
jmp
ficompl
scas
cmpsb
push
rorb
jae
push
lea
mov
nop
cmpsl
cwtl
loop
repz
shlb
hlt
or
cmc
push
sbb
adc
mov
cld
js
pop
push
xchg
cmp
xorb
in
sub
jbe
or
ret
movsl
dec
jmp
repz
pop
fdivrl
das
xor
inc
fmul
mov
std
loopne
imul
adc
inc
xlat
mov
xlat
addw
test
in
ds
out
dec
inc
das
stc
lret
out
stc
or
fidivl
mov
push
cltd
mov
mov
fidivl
inc
call
xchg
inc
push
jbe
jo
cmp
pop
pop
adc
pop
adc
adc
adc
mov
mov
mov
cwtl
inc
pop
xchg
mov
mov
fldcw
jo
push
fcomip
movsb
lds
fwait
adc
sub
mov
mov
mov
imul
inc
xchg
sub
es
mov
fs
aad
pusha
scas
scas
sbb
mov
sti
pop
movsl
inc
pop
leave
inc
and
mov
aaa
xchg
scas
inc
repnz
cli
mov
fstpl
mov
add
shll
xchg
or
je
out
push
jbe
negl
int
je
xchg
push
push
mov
push
cmc
mov
cmpsl
push
dec
call
cmp
jge
hlt
out
mov
loopne
sub
jns
cld
std
mov
ja
lock
push
popf
enter
add
add
std
std
mov
aam
or
movsb
test
add
call
push
mov
jae
inc
push
jae
add
fidivs
jmp
mov
dec
inc
xchg
push
lcall
jnp
pop
push
stos
das
leave
out
or
dec
out
sbb
fisttpl
shrl
mov
jge
inc
add
enter
daa
jg
cmp
xchg
mov
mov
push
push
mov
mov
pusha
ss
sahf
mov
push
daa
inc
jmp
xchg
cmp
es
iret
ja
in
dec
sub
sbb
cmpb
pop
repz
pushf
jne
cmp
or
jmp
xchg
sbb
insl
push
jp
jecxz
pop
mov
adc
cltd
xor
push
les
adc
in
popf
aas
jmp
pop
jge
jmp
or
ss
sbb
sbb
test
movsl
rcrb
fidivrs
mov
jnp
scas
or
insl
jno
imul
push
mov
gs
mov
out
es
cwtl
fldenv
lods
daa
inc
loop
aas
xchg
jb
push
jo
sbb
ja
enter
add
insl
ds
mov
fnstsw
lods
adc
sbb
lret
xchg
imul
sbbb
cmp
pop
xchg
and
push
ret
mov
dec
hlt
pop
and
pusha
adc
add
fs
bound
fsubp
pop
or
xor
bound
xor
enter
dec
fsubp
aad
xor
lods
sub
aaa
std
sub
fiaddl
scas
fdivr
in
push
stos
dec
adc
stos
mov
pop
xlat
cmp
test
mov
xchg
pop
or
outsb
sub
fwait
notl
and
rolb
xor
cwtl
and
inc
inc
test
fcmovnu
jae
es
xchg
fildl
popa
ret
cmp
and
mov
adc
shrl
lods
jmp
jecxz
sbb
out
ljmp
hlt
push
int3
inc
cli
or
int3
dec
test
mov
push
add
pop
adc
push
or
cmc
sbb
adc
dec
push
pop
test
out
mov
and
lock
mov
aad
and
adc
lcall
xchg
repz
mov
push
iret
jmp
jbe
dec
push
popf
repnz
dec
cld
cmp
enter
jmp
dec
addr16
pop
nop
lods
inc
outsl
fistl
xchg
pop
mov
and
jno
out
shlb
in
mov
mov
out
push
lret
mov
adc
andb
pop
int
cmc
pop
pop
xchg
test
out
imull
sbb
and
mov
add
mov
and
push
pop
mov
ret
dec
mov
sahf
pop
lods
jecxz
push
std
std
int3
xor
sbb
sbb
mov
jbe
cs
dec
fstl
jge
std
xchg
sahf
and
mov
mov
dec
mov
cmpsl
in
and
mov
ds
dec
jnp
popa
push
rorl
push
dec
jle
rolb
mov
dec
push
lock
mov
xlat
bts
cs
inc
jne
jge
pop
push
fisubrs
cld
imul
cmp
decl
jg
xchg
and
push
in
out
inc
dec
pop
push
pop
xchg
cli
jb
mov
jg
jne
pop
inc
or
nopl
xchg
inc
mov
xchg
dec
pusha
out
jmp
inc
stos
add
pop
ret
xchg
jp
xlat
sub
iret
ret
jns
mov
mov
dec
mov
pop
and
xor
jb
add
test
repnz
or
dec
adc
push
add
push
jb
xchg
stos
out
icebp
cmp
sbb
notl
adc
test
sahf
mov
xlat
in
cwtl
push
inc
adc
subl
sbb
adc
outsb
sbb
sti
xchg
or
scas
mov
cltd
sbb
das
scas
adc
idiv
loopne
ljmp
mov
sub
addr16
fnstcw
sbb
jmp
adc
cli
call
sahf
dec
inc
scas
dec
loopne
fsubl
mov
sbb
out
add
shlb
ds
mov
mov
mov
xchg
sbb
notb
pop
imul
insl
lret
sar
sbb
inc
cmpsb
outsl
pop
xor
std
mov
jae
les
add
dec
mov
cmp
and
aas
push
xor
mov
xchg
aam
dec
and
les
mov
push
or
sbb
cmpsb
xchg
sar
inc
int
dec
mov
js
outsl
lret
push
cwtl
push
inc
fmuls
inc
clc
cltd
imul
cmc
pop
mov
mov
in
inc
shlb
iret
xor
inc
int
adc
and
leave
scas
push
mov
aad
call
shlb
push
aad
pop
mov
lahf
repnz
mov
mov
in
or
cmp
and
cli
cmp
xlat
stos
and
mov
cmpl
mov
imul
out
pop
in
aam
fldcw
pop
or
xlat
or
add
cmp
xor
outsb
xchg
pop
pop
fst
and
andb
aas
adc
fsubl
test
sub
or
aad
mov
xor
mov
sahf
sahf
jmp
inc
pop
cmp
lret
mov
les
call
pop
xchg
xor
mov
add
test
popf
or
out
mov
test
aad
inc
addr16
fwait
cmp
jae
imul
ljmp
lcall
subl
lock
inc
mov
xchg
nop
and
gs
mov
mov
loope
pusha
icebp
sub
sbb
ja
add
ja
bound
or
jns
int3
sbb
call
pop
in
xor
sub
imul
sbb
test
xchg
pop
mov
jo
push
xor
push
hlt
mov
das
mov
stc
orl
popf
xor
fcoms
sbb
in
mov
and
push
pop
mov
mov
pop
xor
pop
mov
cwtl
xchg
dec
daa
out
in
cmp
outsb
das
add
sub
hlt
ss
lcall
call
xchg
and
test
mov
negb
push
cmp
push
pop
loopw
dec
inc
pop
mov
in
jno
jg
mov
cmp
cmp
rcr
pop
sub
mov
mov
cmp
iret
jg
in
lahf
adc
push
test
xor
mov
jne
popf
cmc
inc
xor
or
sbb
jo
push
loope
lods
mov
lock
mov
and
sahf
sub
ja
shl
or
sub
mov
xor
xchg
in
sbb
js
jp
dec
arpl
mov
push
or
mov
jae
add
pmulhuw
lea
mov
rcrb
aaa
out
jle
inc
inc
popa
icebp
aas
movsb
xchg
sahf
sbbl
test
adc
int
pop
insl
orb
add
scas
inc
loop
cs
sub
dec
xchg
rclb
xor
test
in
and
pop
jae
cli
sbb
xchg
ljmp
add
jmp
or
dec
orl
out
pusha
sub
mov
test
iret
je
jo
test
lods
test
and
cltd
and
mov
enter
int3
sub
aas
je
or
es
imul
xor
test
pop
push
jnp
inc
mov
inc
bound
add
mov
insb
mov
mov
mov
outsb
inc
adc
mov
add
sub
jae,pn
mov
lcall
clc
fildl
mov
sbb
push
pop
xor
test
cwtl
dec
xchg
xchg
xchg
sub
jmp
xchg
pusha
lcall
push
sub
ret
push
js
icebp
mov
push
fmull
add
mov
or
nop
adc
xchg
cmp
icebp
enter
sub
iret
adc
mov
test
call
and
lret
pop
shll
cld
in
into
addr16
mov
sbb
in
sub
lcall
xchg
mov
mov
push
xchg
or
cmp
inc
cwtl
mov
les
ljmp
adc
xor
mov
sub
mulb
movsl
fdivrs
and
test
mov
inc
clc
ds
jne
add
mov
jge
pop
mov
xchg
lret
mov
in
sarl
push
call
push
movl
pop
setno
iret
hlt
cwtl
sbb
repnz
jo
jmp
or
xchg
jecxz
pop
fsubs
mov
push
stos
sub
divb
popa
pop
cld
fistpl
sbb
pop
std
mov
xchg
lods
sbb
movups
push
push
ret
sub
loopne
fiadds
fmuls
adc
cltd
aaa
or
dec
pop
imul
push
mov
iret
scas
dec
lret
cmc
lods
mov
sbb
jnp
mov
loop
test
push
pop
pop
insb
lods
add
inc
fwait
mov
push
mov
and
pop
and
push
inc
add
jbe
mov
jmp
gs
sbb
adc
imul
daa
jle
aam
push
xchg
rorb
outsl
push
jl
fwait
sub
push
movsl
sbb
lcall
cmp
rolb
mov
adc
fmuls
xlat
scas
push
jp
push
aas
stos
pop
sbb
xchg
or
stos
sub
fdivrl
repz
pop
cltd
mov
xor
aaa
fwait
mov
xor
jp
add
adc
and
xchg
hlt
cmpsb
cwtl
pushf
mov
aas
xchg
or
dec
stos
xchg
xchg
subl
jp
rorb
push
cmp
jno
in
repnz
pop
inc
or
lds
inc
das
adc
out
pop
pop
jg
outsb
add
pop
or
xchg
iret
icebp
adc
xor
xor
lods
mov
rorl
mov
dec
pop
lahf
call
aam
movsl
pushf
lea
dec
fcos
xlat
mov
mov
lahf
ret
ljmp
test
rorb
mov
stos
loop
mov
xchg
sbb
and
push
jp
cmp
adc
mov
jno
push
push
pop
jmp
int3
ret
das
test
mov
popa
push
pop
sub
sbb
aam
inc
dec
push
adc
adc
call
mov
sub
movsl
xchg
jge
fstpt
dec
sub
call
dec
lock
mov
mov
mov
mov
jbe
adc
jmp
pop
sub
imull
pusha
cltd
mov
cmp
cmpsb
repnz
push
out
in
pop
pop
jg
insb
jmp
xchg
scas
jns
xchg
dec
jbe
loope
adc
int3
mov
rcr
push
pop
movsb
lock
lcall
lret
mov
lock
xchg
xchg
clc
int
cmp
mov
dec
sahf
add
sub
add
push
push
inc
test
lahf
pop
mov
cld
push
add
pop
in
aaa
xchg
fdivl
mov
xchg
mov
inc
or
sub
cmp
push
mov
in
popa
repnz
test
jmp
or
pop
add
push
push
or
jnp
ret
test
adc
mov
push
add
jl
cmpsb
xor
push
mov
fidivrs
je
popf
fdivrl
push
testl
imul
jp
cmp
jge
and
xlat
scas
push
add
mov
ja
mov
mov
cmp
inc
jo
nop
ds
add
sti
divb
outsb
mov
adc
dec
or
das
ds
pop
icebp
xor
pop
lods
addl
test
repnz
test
mov
sub
mov
mov
sub
sahf
or
stos
sub
adc
push
stos
lods
sti
xor
dec
jmp
movsl
lds
cmpsl
cmp
mov
mov
daa
and
je
mov
scas
and
xlat
jnp
inc
sub
loop
sbb
sbb
jmp
or
inc
jmp
jle
outsl
inc
pop
je
adc
adc
insl
ljmp
stc
xchg
inc
lcall
shrb
test
mov
add
xchg
mov
mov
jae
push
mov
adc
cmp
cmp
in
cmc
lahf
ja
shrl
jge
mov
cmp
int3
and
mov
lcall
mov
xchg
lcall
scas
gs
in
pusha
sti
push
sarl
aas
ret
cli
cmp
cmpsl
or
mov
fadd
pop
xor
das
addl
add
pop
testl
frstor
inc
pop
sbb
loope
ss
xchg
cmp
gs
jo
mov
sahf
add
push
sbb
jne
mov
xor
mov
test
and
jns
inc
sbb
dec
and
sbb
pop
cmp
imulb
fcmove
push
mov
dec
subb
ljmp
add
outsb
lea
mov
js
lock
aam
aaa
mov
scas
mov
fidivl
decb
aas
aaa
inc
pop
push
dec
jno
mov
cmp
jb
stos
dec
out
jle
sbbl
fidivs
ret
and
out
jnp
add
add
sbb
push
imul
xor
xchg
xchg
popa
pop
or
xchg
jns
jmp
es
loop
mov
adc
adc
push
or
scas
in
and
fimuls
lock
fildl
je
push
mov
and
adc
insl
int
mov
jp
jmp
loope
sti
cmp
je
aaa
sbb
pop
inc
sbb
add
in
and
pop
push
mov
inc
test
and
sbbb
shll
cmp
sub
in
shlb
mov
imul
bound
ret
js
js
stc
cmc
int3
cmpsb
movsl
or
lods
rolb
popf
mov
add
out
mov
cwtl
in
xor
mov
test
jo
incb
in
mov
mov
xor
or
sub
cmp
jmp
int3
jmp
mov
icebp
or
sbbb
ficoms
mov
popf
push
loope
dec
in
decl
mov
stc
adc
jmp
cmp
cmpsb
aad
andb
or
lret
jo
jg
adc
aad
ret
jmp
mov
lods
mov
jbe
adc
and
push
add
ljmp
aas
mov
stc
gs
mov
push
fs
sub
stc
pop
push
lock
dec
dec
out
leave
popa
int
addr16
mov
sbb
vdivsd
call
fisttpl
dec
inc
sub
lea
fisubl
pusha
mov
cmp
repz
adc
xchg
add
mov
enter
add
ficompl
lret
xor
icebp
out
inc
std
push
mov
lcall
dec
pushl
jle
push
adc
dec
shrb
xlat
leave
adc
pop
dec
imul
inc
ljmp
sbb
icebp
add
inc
xor
lds
les
dec
cmc
rorl
cmc
test
repz
or
mov
xchg
xor
pop
cwtl
pop
jp
push
dec
negb
mov
pop
lahf
adc
lret
scas
add
cmp
mov
xchg
pusha
mov
out
dec
sahf
ss
ret
sbb
push
fidivrl
push
sti
out
jge
mov
adc
mov
inc
and
xchg
xchg
or
jmp
sbb
icebp
repz
cmc
mov
mov
jp
xchg
push
popf
jmp
loope
dec
jmp
mov
test
negb
clc
pop
pop
fnsave
or
sbb
push
cltd
cvtps2pd
xchg
mov
mov
mov
into
xchg
mov
inc
push
pop
dec
data16
ds
in
into
in
add
outsl
mov
or
push
mov
mov
pop
dec
cmp
jge
adcb
adc
aad
add
jmp
out
jne
mov
stos
add
add
push
rorl
not
decb
xchg
sub
xchg
xor
jp
dec
xchg
mov
sub
stos
lcall
and
mov
ja
icebp
enter
xor
stos
xor
mov
and
lods
xor
or
das
xchg
mov
jge
or
jmp
test
sbb
sbb
call
jg
fbstp
mov
ds
hlt
mov
lds
out
das
negl
je
movsl
sub
test
les
mov
sbb
jl
loopne
sub
dec
or
push
jo
scas
xor
cmp
sub
popf
jecxz
outsl
pop
pop
adc
adcb
mov
cmp
sub
inc
in
or
xor
cmp
mov
adc
push
xchg
sub
mov
fstl
xchg
movsb
out
mov
ret
repz
stos
iret
mov
add
and
sub
lret
mov
rcl
sub
cmp
sbb
shrl
or
cmp
or
or
push
shrl
jno
mov
mov
and
sub
xchg
loopne
jae
inc
pop
cmpl
xchg
xor
daa
leave
or
push
lahf
sbb
push
loope
fadds
cs
in
jbe
fldl
dec
and
jl
sbb
stos
push
sbb
loopne
pop
add
in
mov
mov
scas
dec
pusha
pop
push
mov
push
int3
push
or
jle
mov
jecxz
insl
std
out
jg
call
mov
push
shr
mov
int
je
ret
mov
imul
xor
mov
lcall
lcall
xchg
pop
out
or
push
push
or
ret
xor
push
sub
cld
outsb
stos
inc
adc
cmp
cmp
xchg
jne
mov
cs
pop
out
movsb
jno
sbbb
dec
sbb
push
or
orl
cwtl
xchg
aam
push
loop
or
mov
in
jle
mov
int3
mov
xlat
adc
or
out
mov
sub
bound
or
or
call
add
pusha
movsb
mov
and
negl
shll
std
mov
add
push
in
push
cmp
int3
fisttpl
and
push
mov
mov
sbbb
sti
frstor
dec
pop
mov
add
push
dec
add
shrb
and
or
xchg
fsts
mov
inc
mov
xor
pop
xor
mov
sub
stos
mov
iret
sbb
adc
jae
repz
lcall
fs
inc
jns
add
out
aam
mov
pop
pushf
scas
ficoml
xor
xor
fucom
inc
jo
int3
insb
sub
mov
hlt
dec
cmp
ja
mov
jp
push
fisttps
sub
xchg
add
enter
popa
push
push
cld
mov
in
cmpsb
mov
mov
sbb
dec
push
pusha
fwait
mov
aas
sub
cmc
xchg
je
idivb
or
cli
jb
xor
sti
mov
pushf
push
lds
inc
loop
aas
mov
mov
scas
lret
mov
mov
dec
sbb
and
cmc
add
scas
ficomps
mov
xorl
adc
out
jle
adc
cltd
cwtl
js
daa
js
cltd
imul
icebp
ja
or
push
mov
mov
in
jno
pop
aaa
dec
orb
mov
fstpl
inc
jne
inc
pop
add
inc
xor
and
mov
xchg
pop
loop
and
dec
addr16
daa
fmull
mov
pop
pop
rcrb
jge
mov
or
cmp
mov
pusha
and
sahf
addr16
scas
inc
mov
out
fcomps
push
fs
adc
push
fisubrl
cs
es
hlt
xor
and
xor
aas
repz
imul
push
inc
push
adc
outsl
cltd
adc
push
aad
or
fs
pop
mov
std
mov
outsb
xchg
mov
fstpt
mov
ja
lcall
or
das
sbb
sbb
adc
sub
fldcw
xchg
mov
mov
scas
rclb
scas
and
jnp
add
jge
out
mov
and
mov
repnz
popf
xchg
andl
sub
mov
xchg
xchg
fbld
mov
std
inc
pop
adcb
sub
movsb
cltd
xlat
test
push
stos
pop
mov
in
mov
mov
sub
cmp
daa
aam
add
pop
imul
cmpsl
mov
inc
loopne
repnz
push
sti
ljmp
sbb
dec
ret
xchg
cmc
pop
cmp
xchg
fisttpl
mov
adcb
mov
int
dec
out
in
pop
pop
iret
ja
imul
lcall
xchg
xchg
sbb
faddl
mov
xchg
orl
jecxz
push
addr16
cs
and
sbb
mov
lea
neg
dec
add
popf
xchg
cmp
or
xchg
adc
insb
xor
cmpsl
call
lcall
lods
test
loopne
scas
fsts
jp
jns
cmp
stos
loope
and
fnstsw
mov
xchg
sbb
and
jo
and
loope
add
lret
sub
pop
push
out
mov
mov
and
int
sbb
stc
xchg
std
popf
pop
pushf
and
sbb
bound
pop
xchg
ljmp
pop
xchg
rcr
jbe
arpl
mov
mov
mov
movsl
or
mov
ficomps
or
pop
jo
pop
outsb
imul
leave
xor
cs
out
jle
pop
ss
mov
pop
cmp
jecxz
mov
sbb
xchg
cmp
push
mov
pop
es
lock
push
push
xchg
mov
jbe
sbb
test
xchg
pop
imul
mov
mov
fwait
nop
mov
pop
cmpsl
and
mov
adc
push
adc
or
lods
inc
push
lcall
into
adc
movsb
lahf
jl
loop
out
leave
cli
arpl
xor
sahf
cld
push
orl
push
push
jns
cli
loopne
into
inc
sub
push
push
or
lock
testl
out
xchg
cmp
dec
je
adc
out
lret
mov
movsl
lahf
push
test
ret
add
pop
push
dec
data16
outsl
or
jmp
shl
push
pop
jbe
or
pusha
clc
stos
ret
sub
lds
inc
mov
xchg
and
or
in
fcomi
out
out
scas
and
insl
mov
jmp
mov
in
inc
hlt
decb
dec
inc
adc
pop
cld
or
inc
in
inc
inc
scas
out
pop
or
test
loope
insb
outsl
xchg
fisttps
jl
jmp
arpl
jl
test
movsl
push
push
and
nop
adc
dec
stos
or
ss
lcall
mov
mov
hlt
insb
xor
ret
fstpt
stos
adc
sub
pushf
je
stos
mov
pushl
loop
mov
add
adc
stos
inc
inc
pop
call
jno
nop
out
aaa
dec
repnz
and
in
rolb
xchg
cmpl
bound
mov
in
loopne
push
fstps
nop
push
add
xor
fwait
sti
andb
std
cmpsb
mov
jbe
sub
aaa
and
pop
aas
out
mov
jne
loopne
mov
and
ficomps
inc
mov
or
mov
or
push
int
sub
pushf
outsb
shr
leave
cmpsb
mov
ret
pop
popf
jecxz
inc
loope
mov
mov
dec
and
lret
pop
scas
sbb
cwtl
add
cmp
inc
xor
cmc
aas
mov
or
mov
sub
mov
addb
mov
sub
push
adc
inc
add
movsb
fidivrs
pop
sti
icebp
ret
dec
mov
movsb
popf
movhps
cli
dec
pushf
test
ret
std
add
dec
not
clc
xchg
jge
pop
scas
in
outsb
arpl
fistl
adc
jmp
dec
mov
fmul
push
aaa
xlat
jb
cmp
mov
mov
push
dec
jecxz
test
xchg
dec
clc
sbb
xchg
and
repz
cs
ret
xchg
and
arpl
mov
jmp
in
cwtl
xchg
xchg
add
call
movsl
leave
add
mov
out
shr
mov
push
jle
xchg
xchg
cs
and
gs
mov
cmp
subb
js
cmp
sub
mov
cmpsl
jae
arpl
sub
dec
mov
add
mov
setbe
push
and
scas
jge
out
pop
pop
int3
jae
cmp
add
in
xor
push
dec
sub
out
pop
int3
jmp
fildl
and
mov
push
or
xchg
dec
cld
xchg
sub
sbb
fists
jbe
or
aaa
push
or
mov
mov
loope
or
push
add
sbb
xor
int
ss
lret
stos
and
or
roll
popa
xor
xchg
faddp
pop
push
xchg
lret
out
shll
sub
popf
jbe
pushf
in
jno,pt
out
insl
sti
xor
pop
pop
aam
jle
into
pop
ljmp
mov
pop
insl
scas
jg
or
mov
call
shrb
test
sub
push
jnp
and
and
jnp
jnp
ret
add
das
inc
in
push
xor
fs
movsl
or
lock
jmp
jg
pop
test
pop
fcoms
test
jns
jecxz
xor
xchg
jle
std
add
cli
test
add
addl
shl
ret
inc
adcl
push
and
std
hlt
fisubl
imul
fsubrp
negl
test
jle
mov
mov
mov
mov
stos
dec
lret
xchg
sahf
cmp
and
sti
mov
dec
ds
stc
jae
xchg
nop
pop
mov
cmp
jno
cmpsl
jge
mov
das
in
repz
gs
dec
xor
cli
adc
cld
call
lods
push
cld
add
mov
sub
sub
lret
xchg
enter
add
repnz
stos
push
jp
dec
std
pop
mov
cld
test
jb
mov
dec
loop
rorb
push
lods
mov
mov
inc
dec
jle
jg
loopne
sarb
xor
mov
and
aam
loopne
out
bound
test
xor
or
xor
mov
adc
sub
sbb
jmp
xchg
out
adc
sahf
xchg
int3
fcmovnbe
sub
push
add
and
mov
mov
popl
mov
test
lea
and
add
ret
sbb
ljmp
jp
cld
clc
push
cwtl
int3
leave
lods
xchg
or
arpl
fadds
or
outsl
add
cmp
add
sbb
subl
decb
stos
aam
push
fistl
jb
xchg
pusha
mov
sub
jmp
sub
dec
stos
xorb
daa
pop
adc
or
lret
cltd
test
cwtl
inc
sub
pop
lods
rcl
fsubrl
jae
lods
mov
cs
ss
aad
jae
loope
pushf
xor
enter
dec
test
xor
dec
sbb
daa
ret
mov
pop
fidivl
mov
sahf
sbb
or
push
into
inc
insb
out
mov
daa
es
jno
pop
aam
in
movsb
push
shrl
shll
arpl
sbb
dec
or
inc
push
pop
add
fildl
pop
fisubrl
xchg
adc
inc
sbb
cmc
mov
mov
inc
xchg
repnz
cmp
addr16
es
or
aad
mov
push
mov
xor
js
adc
sub
cmpsl
add
cwtl
mov
test
andl
sbb
in
aas
push
movl
and
jg
add
shll
ljmp
dec
fmuls
mov
cmp
sub
push
push
xchg
call
out
adc
jno
mov
sti
addb
mov
in
pop
xor
cmp
mov
stos
cmp
inc
mov
cmp
mov
es
cmp
push
adc
lods
lods
pushf
mov
push
push
dec
mov
mov
in
inc
jno
inc
push
jno
jp
stc
adc
jae
push
rcrl
jnp
jmp
pop
test
xlat
sbb
rcll
and
jp
imul
rcl
sbb
out
into
push
mov
in
sbb
or
mov
outsl
clc
push
das
jne
sbb
sub
sub
es
dec
xchg
xchg
mov
fldt
iret
jne
add
and
push
push
mov
sbb
jae
in
cmp
push
mov
dec
adc
fwait
inc
adc
push
cltd
push
or
movsl
roll
mov
sbb
fiaddl
jne
ljmp
movsl
xchg
test
iret
mov
jge
enter
push
xor
nop
and
push
or
pop
sti
pop
cmp
or
cmp
mov
pop
out
xor
mov
jl
and
iret
shl
jge
sarb
repnz
hlt
test
pop
ficompl
gs
push
in
mov
ret
or
imul
mov
mov
pop
fisubl
xchg
out
jns
mov
loop
sub
push
movsl
enter
sbb
push
out
out
mov
pop
aad
mov
push
sar
pusha
push
loope
lds
inc
cmp
jge
fwait
and
sbb
or
push
ret
lds
sub
das
divl
es
nop
xchg
add
mov
inc
push
dec
jnp
jecxz
cmp
sbb
sub
lds
imulb
inc
pop
shr
jae
mov
mov
xchg
sub
and
cmp
jno
test
pop
lods
sub
outsb
in
out
mov
pop
lcall
adc
int3
inc
lds
or
lahf
jge
rcrl
sub
mov
sub
std
outsl
test
in
mov
incl
mov
sbb
pop
add
xlat
in
cmpsb
out
inc
imul
adc
rorb
mov
iret
mov
fsts
test
push
sub
add
cmpsl
xor
mov
inc
ds
movsb
jecxz
imul
divb
mov
add
push
add
shrl
pop
in
mov
fmul
lods
pop
jb
cmpsb
into
mov
je
push
cltd
xor
test
jp
add
sbb
test
test
aam
inc
loope
mov
scas
orb
sahf
int3
mov
scas
arpl
fdivl
data16
and
jg
xor
adc
fwait
or
sbb
xchg
push
dec
nop
pop
adc
cmp
sbb
cmpsl
sub
or
lea
jmp
into
adc
jmp
subb
fs
int
in
scas
dec
xor
frstor
cltd
sbb
and
cmovne
push
mov
cmp
out
mov
int3
pop
cmpsl
int3
lea
pop
mov
cmp
mov
lds
daa
fs
dec
enter
xchg
jae
inc
addr16
fs
divb
out
mov
mov
mov
scas
sub
mov
fnstsw
mov
xor
mov
adc
stos
push
and
cwtl
roll
shll
icebp
shl
pop
sarb
mov
aad
stc
fdivr
xor
or
test
in
dec
movsl
pop
lods
test
test
imul
call
push
dec
or
dec
andl
add
pushf
sub
roll
jb
arpl
xchg
cltd
add
pop
push
inc
cmp
js
sub
ljmp
sbb
cld
cltd
pusha
inc
leave
jne
shr
mov
inc
in
addb
cmp
scas
inc
shrb
call
xchg
enter
out
inc
push
ja
iret
test
push
or
mov
sbb
dec
sub
and
ds
fistl
and
push
das
push
pand
adc
mov
pop
ja
ret
xchg
das
mov
sahf
jmp
sub
inc
jg
xchg
fwait
mov
pop
mov
daa
arpl
mov
sbb
stos
pop
fcoml
add
inc
push
dec
out
ret
xor
out
mov
popa
loop
push
rorb
ljmp
push
data16
pusha
xlat
cmp
loop
out
mov
fsubs
mov
cmp
jmp
in
mov
xor
adc
inc
outsl
fstps
lret
jns
xchg
iret
adc
push
xlat
ja
ret
fwait
das
add
jne
push
xchg
or
stc
sbb
loop
stos
test
pause
mov
cmp
mov
or
mov
mov
xchg
jno
out
imulb
or
es
sub
push
leave
or
lcall
scas
and
dec
inc
jbe
int3
or
push
fbstp
loope
fwait
lret
lods
mov
fstl
and
addb
stos
sub
js
jmp
jecxz
fildll
bound
push
inc
sub
sbb
and
test
mov
js
test
mov
es
sahf
stos
lods
or
mov
loope
bound
gs
pop
and
popf
js
push
es
adc
pop
xor
inc
mov
sbb
pop
sbb
dec
sub
xchg
out
dec
jne
ja
fs
cmc
mov
dec
iret
jnp
das
aas
icebp
mov
stos
lods
pop
cmpsl
sbb
mov
xchg
and
popf
cmpl
pop
mov
xchg
xor
push
ror
add
or
xchg
in
hlt
stos
cmp
jecxz
fldt
mov
mov
jns
push
inc
xor
xor
push
test
and
mov
push
enter
push
out
dec
imul
roll
pop
push
pop
xor
mov
clc
fmuls
pop
push
sub
int3
icebp
mov
xor
jl
inc
cmpsb
jp
popf
mov
mov
int
add
ja
inc
out
negl
adc
adc
lds
inc
pop
out
rcrb
sbb
dec
pop
push
push
inc
shll
mov
cmp
push
movsl
lret
jp
xchg
cmpsb
adc
adc
sub
mov
es
jmp
add
pop
idivb
ficoms
pop
dec
cld
or
add
imul
dec
xor
mov
xchg
push
jmp
xorb
sti
xor
inc
lea
dec
inc
push
jae
cmc
fstps
das
mov
jbe
arpl
jns
incb
mov
gs
mov
sub
mov
bnd
mov
aam
push
dec
mov
push
fsubs
ljmp
ss
dec
cmc
aaa
sub
mov
loope
in
jp
in
inc
popf
pop
icebp
clc
adc
push
ljmp
rol
inc
adc
insb
lods
scas
xor
add
push
mov
inc
shl
test
in
jo
sub
xor
adc
inc
adc
jge
sarl
xchg
jl
jne
pop
popa
mov
adc
add
addb
mov
js
inc
loope
dec
sahf
inc
fidivrs
mov
test
dec
jecxz
adc
popa
lods
xchg
icebp
cmc
cmp
xchg
xchg
inc
dec
adc
ret
test
push
and
mov
cmpsl
push
aam
add
pop
aas
scas
cwtl
in
dec
inc
mov
pop
test
scas
enter
xor
or
inc
add
mov
and
out
mov
outsb
or
int
mul
add
scas
pop
and
cs
dec
mov
dec
dec
push
sub
rclb
pop
hlt
daa
int
or
jl
cmp
sbb
mov
mov
mov
popa
mov
push
icebp
xchg
mov
cmp
jne
imul
dec
dec
jne
or
hlt
push
adc
sbb
daa
xor
pushf
mov
out
in
xchg
pop
cwtd
imulb
mov
les
loope
arpl
dec
leave
stos
pop
jbe
fldl
lahf
aad
test
dec
pop
xrelease
test
mov
insb
mov
div
mov
add
or
pop
test
insl
test
arpl
dec
xor
js
add
lret
cmp
mov
mov
call
mov
iret
add
xchg
sarb
sbb
fwait
ret
bound
jecxz
push
or
stos
je
sti
subl
ror
insb
jo
jmp
mov
adc
jle
sub
fs
push
fldcw
outsb
sub
scas
test
jmp
dec
cmp
lahf
dec
inc
push
test
dec
jge
popa
sub
push
pop
sub
out
dec
data16
mov
mov
inc
dec
push
scas
dec
cs
sub
push
xor
jmp
je
dec
adc
nop
jnp
pop
leave
imul
jg
rorb
sub
jmp
insb
fidivs
mov
out
out
cmc
lcall
inc
fnstcw
dec
icebp
in
cmp
das
sub
or
lahf
mov
pop
mov
cmpsl
rol
add
orb
test
xchg
leave
cld
jb
xor
jge
sub
mov
enter
cmp
cmp
push
sub
pop
pop
xor
jo
mov
stos
mov
mov
not
es
push
or
scas
mov
out
adc
lahf
adc
and
dec
popa
inc
pop
jbe
jp
push
jae
pop
fadds
popa
sub
adc
push
and
jl
or
xor
mov
leave
roll
inc
add
imul
outsb
push
stos
scas
hlt
mov
cmp
cwtl
imul
adc
jg
subl
lret
xchg
popf
or
pop
push
int
push
js
mov
test
pop
mov
inc
nop
stc
into
inc
add
vmwrite
xchg
dec
ret
xlat
mov
mov
in
sub
in
inc
nop
mov
push
ret
imul
icebp
repnz
orl
repnz
pop
mov
repnz
sbb
testl
sbb
xchg
cpuid
aas
and
lcall
pop
inc
pop
inc
xor
in
inc
and
push
pop
xchg
imull
test
push
mov
decl
rcll
repz
dec
repz
xlat
cltd
push
cmc
scas
ss
aad
xor
push
ljmp
out
mov
inc
or
mov
rorl
mov
out
clc
aam
fcomp
pop
mov
sar
push
adc
inc
and
pop
xor
xor
lods
add
xchg
sbb
std
mov
hlt
and
mov
pop
pop
cmp
adc
jmp
lcall
and
sub
in
add
sub
dec
ret
sti
inc
out
jl
jno
dec
cli
lods
hlt
jb
adcl
ljmp
loop
sar
loopne
test
shrl
mov
out
or
jne
sub
mov
loope
pop
pop
stos
imul
xor
mov
sub
cli
or
arpl
mov
sbb
movsl
jb
sub
add
fimuls
xor
and
cmpl
es
cmp
push
insl
lsl
jmp
iret
and
mov
mov
sub
inc
inc
hlt
filds
mov
push
lock
inc
or
loop
loope
das
sub
pop
adc
mov
les
mov
arpl
popa
stos
adc
xlat
and
popa
cmpsb
xchg
idivl
pop
test
sub
push
jns
addr16
xchg
call
in
jne
and
sbb
je
das
xchg
mov
sarb
into
fisttpl
mov
cmp
cmp
mov
jmp
fistl
mov
dec
mov
cmp
jle
ljmp
movsl
inc
inc
xchg
dec
enter
jle
sub
pop
dec
push
inc
jge,pt
mov
mov
and
adc
movsl
subb
cwtl
add
add
push
pop
iret
add
outsb
inc
pusha
testb
movsl
push
scas
ret
loop
and
ja
imulb
repz
mov
xor
daa
sbb
lods
stc
orl
pop
mov
sub
and
int3
subl
push
dec
mov
add
jnp
sti
sub
cli
cmpsb
aam
mov
push
dec
addr16
inc
insb
cmp
mov
out
movsb
and
jbe
in
stc
outsl
pop
adc
testb
mov
dec
in
mov
out
aaa
stc
sbb
adc
pop
sub
xchg
cmp
xchg
jo
lahf
stc
sub
mov
es
lret
push
pop
push
cmpb
mov
mov
dec
cltd
mov
dec
outsl
ret
test
clc
sbb
or
pop
sub
sbbl
xchg
jnp
xor
inc
pop
add
mov
movsl
add
adc
es
adc
rcrb
dec
inc
dec
push
push
push
jae
pop
addr16
je
pop
mov
push
dec
sub
jns
xchg
push
cmc
dec
mov
push
lock
push
pop
adc
gs
mov
mov
mov
pop
adc
imul
sbb
mov
jbe
xchg
iret
push
icebp
pop
popf
cmpsb
xchg
xor
iret
add
xlat
push
lds
insl
push
dec
xchg
adcb
xchg
out
popf
jb
popf
or
or
std
mov
outsb
int
add
jle
xchg
inc
mov
jns
sarb
xchg
popa
dec
out
sub
in
loope
xchg
dec
push
imul
mov
dec
mov
and
jmp
cmp
sbb
das
jp
sub
test
and
lea
adc
add
and
pop
xor
pushf
jl
loop
and
mov
adc
pop
cmp
and
imul
jle
repz
and
leave
pop
inc
hlt
mov
fwait
cmpsl
dec
into
lret
pop
insb
popa
or
cmp
loopne
loopne
xor
cmc
sub
pushf
pop
bound
xchg
jecxz
or
stos
mov
inc
clc
in
hlt
loop
clc
mov
xchg
jae
fwait
movsb
mov
bound
xchg
popl
lcall
mov
pop
imul
add
loopne
sar
fcomps
inc
pop
push
in
inc
xchg
mov
dec
sarl
in
or
xor
lds
movsb
mov
aaa
ljmp
scas
inc
and
push
sub
mov
sub
add
rol
int
aaa
test
outsb
mov
pop
imul
or
sti
test
call
icebp
pushf
fadd
xor
andb
xchg
sub
lock
pop
aaa
jmp
or
insl
das
fucomip
dec
push
jle
sub
jge
enter
addr16
add
dec
ret
repnz
jnp
push
dec
jmp
inc
push
sub
mov
sub
dec
adc
cli
clc
and
xorb
pop
adc
out
or
sub
sub
pop
popf
pop
sbb
imul
inc
mov
mov
mov
incb
mov
scas
mov
xor
out
jl
cli
cmp
ljmp
loop
pop
ds
ss
sbb
mov
sub
ss
push
paddsw
sub
sub
je
iret
adc
mov
push
mov
loope
fucomip
mov
lret
lcall
jns
imul
ret
incb
pop
sbb
repz
fldl
pop
and
sbb
imull
outsl
dec
addr16
mull
mov
lock
insl
add
jae
mov
out
dec
xor
pop
jecxz
lods
adc
shll
out
adc
mov
xchg
xchg
jg
sub
mov
pop
lcall
in
pop
cmp
sbb
lcall
xlat
mov
mov
mov
out
cmp
pop
adc
cmpl
jmp
xchg
lahf
inc
cltd
mov
pop
fcompl
scas
dec
sub
es
imul
aad
mov
push
sti
test
movsb
dec
fcmovbe
je
xchg
and
xor
lahf
lods
jae
subb
lock
test
push
popf
stos
ret
in
mov
adc
fnstsw
mov
cs
adc
adc
repnz
fisttps
sbb
mov
movsl
mov
mov
out
mov
scas
cmp
and
mov
scas
adc
sub
mov
sub
mov
mov
es
iret
jae
clc
dec
imul
jns
faddl
lcall
je
imulb
sub
mov
xchg
fscale
es
sbb
add
sub
pop
pop
cmp
mov
push
iret
lahf
cmp
popf
and
je
lds
xor
loope
popl
mov
adc
or
dec
sub
std
dec
popf
iret
cmp
pop
movsl
dec
add
jnp
push
jmp
jne
ljmp
sub
cmpsb
and
ret
rcr
and
addr16
mov
cld
pop
push
push
xchg
imul
mov
lret
rcr
jo
imul
lcall
add
aas
adc
lods
adc
mov
mov
rclb
outsl
lret
pusha
fbstp
and
pop
mul
dec
int
xchg
mov
movsb
mov
fistl
xchg
lea
and
lods
iret
data16
inc
cmpsb
sub
xor
dec
fistps
inc
test
movsb
cs
repz
lret
in
push
inc
loop
or
out
pop
inc
sti
out
ret
xorb
cltd
stc
and
jp,pt
aaa
xchg
mov
dec
sub
outsb
fcomp
or
int
out
mov
lea
or
jae
dec
xchg
mov
je
cli
adc
pop
ja
cmp
in
enter
xchg
xor
popa
xchg
test
scas
push
loop
and
es
nopl
inc
popf
popa
outsl
test
in
or
js
mov
cmp
in
out
jo
lock
and
repz
pop
dec
movsl
push
inc
out
or
pop
mov
sbb
test
into
mov
clc
pop
sub
mov
fcoml
adc
insl
lds
sti
out
js
out
inc
jle
xor
mov
fstpt
clc
mov
push
in
adc
jno
or
mov
test
arpl
int
outsb
sub
aad
sub
hlt
inc
addl
stos
out
nop
test
setp
lods
push
hlt
or
shrb
movsb
fildl
cmp
test
mov
mov
cmp
sub
ret
in
xor
mov
sbb
xor
dec
insl
jecxz
test
adc
insb
xor
push
pop
push
push
sub
mov
stos
mov
jno
add
lfs
cld
cld
pop
pop
pop
jle
lock
popa
imul
xor
cmp
jns
in
stc
cwtl
arpl
das
mov
sub
cmp
les
shlb
sahf
pop
cmp
repnz
scas
sti
ljmp
push
push
or
imul
or
cmp
dec
lock
inc
sti
xchg
jmp
mov
cmp
adc
insl
push
mov
or
dec
sbb
popa
cmpsl
mov
add
inc
int
mov
xor
clc
jp
loope
push
rolb
cmp
arpl
pop
or
push
jno
dec
xchg
sarb
js
cmp
pop
movsb
or
mov
mov
push
or
add
add
and
cmp
test
mov
movsb
and
call
mov
out
mov
mov
jb
adc
add
fs
cmp
rol
sbb
mov
add
xchg
ficoml
repz
loope
sbb
in
sub
adc
pop
addr16
test
fists
push
or
inc
dec
mov
push
pop
add
int
icebp
adc
sub
popf
stos
ret
out
push
fstpt
push
loop
cmp
xor
add
lock
xor
sub
cmp
push
mov
int3
mov
notl
in
orps
dec
add
cmp
cli
lcall
pop
xorb
out
insl
xchg
add
mov
nop
add
mov
inc
xor
and
mov
sbb
dec
sbb
loop
sbb
rcl
cwtl
ja
cmp
arpl
out
mov
pop
cmpsb
neg
cltd
dec
jp
mov
lret
pop
xchg
hlt
xchg
mov
xchg
int3
add
jo
popf
jle,pt
stos
imul
adc
int3
xchg
or
fcomps
pop
in
mov
sbb
lea
fdivs
xchg
cmpsb
fstpt
faddl
sbb
lcall
imul
ds
mov
adc
rcrl
mov
sar
test
cmp
cmp
div
jb
aaa
hlt
mov
dec
pop
mov
test
jno
or
nop
and
and
rorl
popa
push
arpl
popl
sbb
in
inc
dec
sysexit
call
fs
cmpsl
int3
icebp
add
mov
lcall
in
pop
inc
fsubr
aaa
lods
xchg
pop
push
imulb
lock
mov
xchg
mov
push
fdivrs
jl
xor
sub
ret
mov
ret
loopne
lcall
cwtl
out
sarb
xchg
xor
clc
mov
and
mov
je
sbb
or
cwtl
popf
out
arpl
in
lcall
and
push
push
jns
push
jno
jnp
mov
and
mov
jb
mul
sti
mov
or
jmp
or
pop
lds
loopne
enter
add
mov
shrb
inc
adcb
stos
cmp
or
call
out
dec
jg
add
lea
ss
mov
jge
lret
pcmpeqd
xor
adc
arpl
cmp
std
inc
sbb
lret
test
mov
pop
dec
mov
loop
jmp
and
ret
inc
cmpsl
or
out
pop
cwtl
subl
xchg
cwtl
shll
or
int3
dec
cmpsl
stos
imull
test
dec
xchg
sub
leave
jp
dec
push
push
or
xorl
mov
sbb
push
push
cltd
leave
mov
add
mov
sbb
arpl
mov
cmp
aaa
mov
cld
pushf
enter
popf
in
ja
jns
push
test
or
sbb
adc
jl
pop
rol
push
mov
sti
mov
adc
js
mov
jmp
imul
fwait
or
shrb
xlat
inc
dec
fldcw
in
fdivrp
scas
pop
and
inc
ffree
repnz
mov
mov
das
add
lds
adc
mov
pusha
dec
test
jne
jnp
fsubl
sbb
insb
jp
jecxz
pop
mov
mov
lcall
mov
pop
sbb
aam
call
clc
ljmp
stos
insb
sbb
aam
ss
out
dec
xor
sbb
js
cmp
out
xchg
mov
mov
sub
lret
sub
fcoms
movsl
jecxz
mov
inc
add
or
ljmp
daa
sahf
xchg
sbb
xor
and
inc
loopne
and
cmp
pushf
jb
stos
inc
sahf
pop
dec
sbb
pop
loope
aad
cld
pusha
mov
nop
sub
flds
mov
aas
pop
sbb
push
adc
bnd
add
sbb
aas
aam
repz
mov
flds
jns
xchg
addr16
dec
pop
dec
and
aaa
sbb
imul
in
stos
lret
jns
aad
adc
or
jmp
jge
cli
jl
push
inc
add
sahf
jb
dec
push
stos
fstp
inc
and
jle
int
xor
sbb
xchg
pop
lds
or
push
fcoml
imul
lahf
aaa
daa
xchg
jae
dec
xchg
add
and
and
aam
mov
rcll
push
or
aad
xor
in
mov
jp
or
repz
mov
fs
jbe
sbb
inc
fcoml
add
hlt
fs
roll
xchg
xor
frstor
lds
mov
testl
arpl
jbe
daa
lods
push
add
sub
divl
xlat
mov
cwtl
mov
sbb
or
sbb
or
push
add
inc
mov
data16
sub
push
imulb
jecxz
push
xchg
jle
dec
and
shrl
out
adc
lods
lods
mov
sbb
ret
sub
mov
rorb
add
jecxz
xchg
sti
ret
sti
inc
cmpsl
mov
ljmp
inc
push
js
into
imul
mov
lods
ljmp
xor
test
jb
sub
mov
aad
adc
and
push
mov
sub
push
push
sub
in
imul
test
in
and
mov
pop
or
push
ds
jns
aad
iret
mov
add
fcoms
dec
inc
mov
dec
cmp
xchg
push
or
sub
push
mov
pop
scas
in
push
cmp
or
mov
sub
popf
dec
mov
pop
mov
loopne
push
and
arpl
test
movsl
jmp
mov
cmp
imul
stos
push
mov
push
xchg
mov
ja
lret
xchg
aad
sub
sub
adc
dec
cmp
in
je
sub
shlb
pusha
jp
and
lahf
jnp
daa
inc
and
mov
fidivs
mov
dec
push
cmpsl
cmp
shr
hlt
rcll
out
push
push
mov
aam
addr16
test
ja
jg
inc
dec
and
cs
movsb
repnz
push
clc
inc
lret
pop
jne
es
cmp
mov
dec
cmpsl
push
dec
rclb
sbb
push
xorb
loope
mov
and
dec
es
sub
pop
add
jl
cwtl
xchg
add
inc
jl
sbb
xchg
sahf
mov
rclb
cmc
arpl
mov
in
insb
stc
and
push
pop
cli
fwait
dec
out
int3
pop
sub
sub
cmp
jmp
and
ret
fsubrs
ja
add
fcmovnb
ret
repnz
jg
mov
bound
dec
ret
inc
inc
outsb
insl
pop
inc
push
in
mov
inc
push
push
enter
pop
mov
andl
mov
sub
fsubr
shll
add
sub
call
mov
push
fdivrs
adc
je
jo
pushf
sti
pop
dec
jp
rcll
push
cltd
orl
cmpsb
jbe
add
repz
push
adc
adc
add
inc
shlb
push
out
xlat
lret
sub
test
or
adc
notl
inc
inc
jle
push
push
or
jmp
jb
rclb
test
dec
adc
repz
js
ds
in
push
es
push
fs
xchg
adc
addr16
fnstenv
cmp
mov
sahf
pop
fisubl
cmp
xlat
popa
mov
add
data16
inc
jp
mov
cwtl
cmp
cmpsb
fidivs
ret
in
xchg
mov
xchg
mov
xor
lret
out
lahf
out
leave
inc
add
aas
test
or
lret
or
mov
test
and
adc
out
fisubrs
adcl
push
or
das
xchg
pop
sub
pusha
int3
aas
hlt
aam
popa
sub
mov
aaa
into
sub
iret
mov
or
pusha
xor
outsl
mov
mov
push
test
sub
dec
imul
addr16
mov
or
mov
xor
jne
cmp
mov
stos
and
mov
pop
and
lock
fwait
cld
mov
pop
adc
sub
aad
mov
ds
or
lret
adcl
push
push
roll
notb
push
lret
push
test
and
inc
pop
aam
fldenv
lock
add
or
cmp
inc
loope
addr16
sub
cmc
test
aad
lods
adc
sbb
pop
mov
mov
aad
enter
cmp
clc
sarl
std
fldenv
push
stc
lahf
fisubl
mov
adc
ss
stc
push
aaa
and
mov
fucomp
jo
fs
mov
mov
out
push
ja
cmp
pop
stos
je
jb
jle
loop
pusha
mov
jb
mov
pop
xchg
fistps
adc
test
imul
repz
cli
add
sbb
test
pop
and
or
lods
stc
fsubrs
lods
add
testl
sbb
stos
mov
push
clc
mov
push
add
cld
das
int3
jbe
jecxz
sarl
sub
in
add
cmc
pop
in
aad
ja
mov
pushf
mov
mov
pop
ja
jnp
mov
fdivs
test
adc
int3
adc
aas
insl
into
and
cld
lcall
jae,pt
data16
fwait
ja
lea
rorb
lret
adc
push
loop
andl
das
enter
dec
das
mov
push
jne
ret
or
addr16
jl
add
sub
dec
ret
pop
jmp
movb
sub
or
cmp
cmp
test
cmp
scas
mov
jbe
add
fs
std
outsb
scas
ret
shrb
ja
test
hlt
test
adc
inc
xorb
mov
pop
sub
fdivrs
hlt
and
pop
sub
imul
add
ljmp
xchg
lret
fsubp
negl
popa
xlat
push
movaps
inc
cltd
je
and
pop
adc
das
lds
movsl
imul
dec
cmp
sbb
pop
psubusb
xlat
xor
pop
mov
sub
mov
xchg
and
dec
adc
jb
push
inc
cmc
lahf
jne
adc
rolb
push
adc
cmp
jmp
pop
sub
cmpl
dec
mov
int3
pop
jbe
mov
rcrl
xchg
xchg
mov
lock
mov
bound
stos
mov
pop
test
pop
mov
push
adc
movups
mov
iret
loope
in
pop
inc
xlat
or
xchg
dec
pop
fistl
in
sub
sbb
ret
pop
cwtl
popa
push
nop
test
ja
and
add
push
mov
jno
mov
imul
shll
pop
or
test
cmp
ss
lds
insb
adc
fs
mov
xlat
push
adcb
inc
les
cmpsl
orb
out
add
cs
je,pt
rolb
dec
mov
dec
fldt
xor
and
mov
pop
adc
dec
test
syscall
lds
leave
pusha
clc
dec
lods
jno
mov
sti
lods
xchg
xchg
scas
mov
or
shlb
sub
push
push
cmpsl
mov
or
pop
ja
scas
cmp
movsl
nop
pop
lcall
jne
test
push
movsbl
dec
xchg
rorb
out
sbb
sbbl
movsl
push
mov
jecxz
repnz
push
inc
cmp
cmp
xchg
popa
mov
add
push
shr
mov
in
outsl
sbb
insb
add
insb
and
adc
and
dec
mov
mov
inc
mov
subl
jmp
imull
rcrl
fbld
pop
inc
jge
jmp
mov
mov
leave
ja
mov
lret
sbb
push
gs
add
lds
sbb
lea
xor
imul
cli
in
sbbb
cs
rcrb
pop
dec
stos
pop
mov
jl
jl
sub
jns
push
inc
test
lret
insl
rorl
inc
cmp
cmp
stos
cmp
or
cmp
jecxz
repnz
icebp
sbb
and
testb
mov
mov
mov
repz
movsl
push
inc
dec
mov
ja
icebp
out
lds
sahf
fsubr
push
adc
dec
insb
ret
movsl
lods
hlt
mov
or
jecxz
cmp
xchg
xor
in
xor
pop
or
or
mov
xchg
push
cld
dec
dec
sub
sti
sbb
mov
fadds
mov
rol
int
sub
cmp
pop
mov
out
add
sub
dec
jecxz
mov
xor
cld
aas
rcr
outsl
xchg
popf
cwtl
sbb
cld
dec
add
insb
in
push
es
pop
dec
adc
mov
cmp
xchg
fwait
cmc
js
mov
jae
inc
imul
js
notl
pop
fs
dec
adc
bound
xchg
into
inc
inc
xor
sti
pusha
inc
inc
add
jae
sahf
jmp
fmull
ror
lods
dec
mov
dec
in
das
mov
lret
cmp
sti
pop
js
insl
xchg
cmp
pop
xlat
adc
insb
jp
mov
aaa
jne
adc
fcomps
cwtl
lahf
push
sub
leave
jp
add
out
mov
inc
pop
aaa
jnp
loope
nop
lret
and
push
mov
cwtl
iret
stc
cmpsb
sbb
lcall
popf
outsl
int
jle
mov
push
stc
or
xor
adc
add
jle
sti
cmp
mov
stos
dec
push
or
or
xchg
push
insb
pop
xchg
outsb
cmc
les
mov
ficoms
ljmp
dec
loop
jl
pop
pop
arpl
mov
insb
into
xchg
popf
pop
out
jne
fldt
xchg
cmp
cld
cmp
add
xchg
outsb
pop
pop
rol
jmp
mov
jno
icebp
movsb
push
inc
inc
fisubrl
fldcw
js
lds
cwtl
jae
aas
cltd
jg
mov
xchg
and
scas
lret
sbb
jo
icebp
ret
dec
or
cmp
mov
pop
dec
in
or
out
dec
fwait
pushf
and
iret
xchg
sbb
scas
or
mov
xchg
loop
sub
mov
add
and
movsb
insb
aaa
jp
jle
cmpsl
cli
pop
mov
jns
dec
inc
loop
mov
and
adc
pop
pusha
cmp
lods
outsl
js
popa
in
or
outsl
jp
inc
sbb
adc
add
bound
cwtl
std
es
push
sbbb
bnd
rcll
int3
fldt
das
sarb
cltd
imul
fldenv
in
testb
mov
xchg
mov
cwtl
fisubs
inc
lcall
ljmp
cmp
inc
sub
jne
push
push
adc
dec
and
pop
int3
loope
inc
out
loope
jbe
cmp
bound
sub
cmp
inc
xor
nop
or
add
pop
cmp
dec
mov
iret
or
stc
adc
jne
adc
cmp
repz
addb
lret
mov
test
mov
cli
jb
cmp
sbb
addr16
cmp
xor
cld
iret
jnp
xchg
arpl
imul
mov
mov
dec
repnz
loopne
push
movsl
push
pop
jae
mov
xchg
stos
pop
decl
jne
ret
add
inc
sub
cld
push
sbb
adc
shrb
fs
les
and
cmpsb
stc
push
cmp
je
dec
in
cmpl
ret
or
cmp
add
mov
cmp
std
idivb
sbb
lret
lea
jge
mov
push
in
mov
hlt
stos
incl
inc
jl
repz
sbb
lods
jae
pushw
adcl
dec
stos
xor
cmp
xchg
mov
push
and
mov
mov
or
jp
push
mov
enter
sarl
test
inc
std
dec
push
data16
lret
fdivrp
mov
sub
mov
lods
xor
cmp
lea
xchg
sti
rclb
mov
xchg
mov
sub
outsl
inc
fs
sub
enter
inc
es
cmpsl
enter
push
or
add
repz
rcll
lods
mov
fwait
movaps
pop
aad
sti
sahf
and
data16
push
fimuls
lock
xchg
dec
or
jge
dec
xchg
jns
push
arpl
cmp
add
and
test
pop
jp
in
jae
fildll
mov
gs
sti
test
inc
arpl
clc
aaa
dec
sub
imul
adc
xor
add
xchg
jbe
push
das
jle
and
hlt
inc
shl
aaa
lods
mov
or
and
dec
xchg
jmp
inc
cmc
add
ret
jbe
lcall
add
jle
popa
aaa
leave
mov
movsl
xor
push
mov
xor
and
cwtl
xchg
sub
jmp
jae,pt
jno
pop
jo
leave
loop
mov
mov
xlat
cmc
insb
cltd
xor
jnp
mov
out
fsubrs
cltd
xchg
adc
std
fmuls
push
lret
cltd
mov
push
dec
add
dec
out
push
call
js
adc
repz
or
scas
es
jle
jo
out
xor
aaa
sbb
xchg
mov
jns
ficoml
xor
dec
push
lahf
cld
stos
cld
jl
xor
mov
xchg
cmp
je
add
cmp
inc
repz
mov
test
jge
mov
push
or
rorb
push
aam
cmp
push
sbb
jae
mov
cmp
jmp
lret
mov
add
call
out
sbb
jge
jmp
sub
ss
dec
in
inc
pusha
sbb
mov
mov
adc
lahf
sbb
icebp
arpl
cs
lds
ljmp
mov
mov
je
jae
pushf
push
add
das
fsubrp
insl
pop
inc
lahf
test
rcll
daa
mov
mov
stos
add
pop
loop
leave
lock
rorb
popl
sbb
or
pop
out
int
pop
mov
aaa
enter
in
mov
loopne
sbb
test
ja
mov
xchg
push
pop
shrb
test
gs
cltd
xor
repz
xchg
fwait
cmc
sbb
cmpsl
arpl
into
cmp
shlb
sti
xor
mov
push
sti
and
loop
outsl
insb
out
test
outsb
repz
popf
adcl
push
dec
das
call
into
adc
pushf
or
mov
sbb
lcall
adc
pop
test
mov
lret
das
mov
or
mov
rcrb
popf
hlt
jno
cmpsl
xchg
out
pop
xchg
dec
shlb
icebp
popa
in
ja
sub
mov
dec
xchg
movsb
lods
add
xor
or
inc
stos
xchg
mov
mov
mov
out
cltd
add
stos
cmp
out
in
scas
jbe
dec
lods
loop
or
es
sbbb
add
sub
lods
cmp
ficoms
mov
xlat
dec
iret
xchg
je
aad
pop
xchg
sub
imul
jle
sub
xchg
sti
jge
fnstsw
fisubrl
mov
push
mov
adc
in
push
bound
mov
pop
bound
loopne
test
xor
sub
lods
and
movsb
pop
adc
loopne
ja
enter
sub
je
mov
sahf
ljmp
test
mov
jnp
repnz
mov
std
nop
jne
nop
clc
call
idivl
and
xchg
pop
jl
inc
pop
test
stos
aad
call
pop
cmp
cltd
cmpsb
popa
cmp
mov
sub
ss
cmp
inc
sub
movsl
push
mov
adc
jno
neg
and
stos
cs
mov
out
or
enter
sub
scas
jbe
sub
mov
sbb
mov
jbe
adc
lret
pop
xor
mov
adcb
pop
scas
cmp
rorl
xchg
sub
inc
mov
xchg
mov
and
out
pushf
mulb
loopne
clc
movsb
notb
inc
push
mov
add
mov
push
leave
mov
cmp
and
loop
mov
in
popf
mull
ret
push
xchg
or
mov
cmpsb
test
fwait
popf
outsl
or
push
cltd
cmpsl
pushf
fs
loopne
and
mov
sbb
xchg
cwtl
or
movsb
mov
xchg
imul
sti
scas
roll
cmp
fsubs
xabort
mov
cmp
jnp
xchg
mov
data16
jns
js
test
pusha
popf
std
in
sub
mov
aad
lret
jle
push
insb
push
jge
mov
fldcw
das
push
rcrb
xchg
fbld
je
xchg
hlt
clc
push
lret
or
mov
lea
icebp
mov
push
gs
xchg
loopne
cmp
jb
lds
aam
lock
icebp
sub
out
mov
aam
push
test
mov
mov
in
int3
movsb
shl
push
dec
out
leave
lret
push
jo
fs
adc
push
rol
test
sub
mov
faddl
xor
dec
ret
jb
and
jp
adc
cmpsb
and
stos
dec
jg
imul
das
dec
movsl
jl
sbb
das
mov
das
loopne
cmpsl
lea
mov
sahf
add
xor
push
xchg
icebp
js
dec
mov
add
fidivrl
out
and
shrl
fwait
popa
iret
xor
mov
lods
addr16
pop
in
aad
sbb
add
shrb
mov
or
call
mov
cmc
call
add
psrlw
and
cs
and
pop
and
into
inc
jbe
dec
rcll
jle
add
mov
or
leave
xchg
inc
sub
mov
dec
add
movsb
stos
ficompl
call
and
xor
lods
test
aas
and
mov
jae
push
lcall
cmpsb
lea
mov
and
inc
xor
jnp
pop
fdivl
jge
pop
loop
sahf
pop
icebp
push
mov
push
cwtl
ljmp
hlt
xchg
cmp
mov
out
mov
push
pop
cmp
adc
mov
mov
mov
imull
in
dec
dec
sbbl
pushf
adc
and
into
les
jae
pop
daa
pop
shlb
cmc
xor
ljmp
mov
sub
imul
mov
mov
test
scas
xchg
into
pop
and
inc
into
test
cmpsl
pop
xchg
pop
rcll
comiss
nop
pop
das
sbb
mov
sub
push
outsl
fimull
stos
loope
nop
cltd
push
jge
sub
call
xor
arpl
fnsave
mov
inc
es
sbbb
mov
and
call
pop
push
sbbb
flds
fidivrs
insb
shlb
push
stc
iret
pop
aaa
cmpsb
int
sarl
inc
xor
sub
movsb
addl
and
scas
ljmp
push
pop
call
mov
das
jo
int
hlt
and
sbb
cmp
ficoms
add
clc
out
and
and
andb
add
je
sbb
fiaddl
push
xchg
fdivs
inc
ja
push
scas
adc
sub
sarb
mov
scas
loop
insb
add
and
and
popf
scas
sarl
popl
push
mov
ljmp
test
push
aam
add
lods
out
lret
mov
push
in
leave
xor
mov
xorb
ret
cmpsb
ja
cmp
or
or
mov
pop
rolb
inc
outsb
shrb
shll
lds
cmp
faddl
test
in
mov
stos
movsl
shr
adc
mov
pop
mov
inc
push
lods
mov
inc
xchg
lret
dec
sti
sub
lea
jmp
in
mov
inc
mov
push
push
jo
xor
mov
pop
sub
in
mov
push
add
inc
xchg
push
dec
aad
call
mov
jmp
ss
pop
test
jae
imul
push
sub
leave
adc
mov
pop
or
enter
mov
cs
jne
dec
mov
cmp
ds
jmp
cmp
movsl
leave
jl
mov
mov
xchg
or
adc
icebp
lods
push
in
les
test
into
icebp
fiadds
mov
rorl
mov
push
fnstenv
push
ss
call
lret
mov
jle
xchg
es
rorb
imul
push
adc
xchg
and
dec
adc
jmp
imul
clc
cs
adc
dec
mov
add
inc
and
push
xor
jo
insb
cs
int
push
rep
mov
shll
fisttpl
rcrb
bound
xor
sti
mov
dec
jbe
in
jecxz
add
jge
push
inc
insb
sahf
push
cltd
pushf
pop
outsl
sub
out
cltd
xchg
dec
jmp
jno
orl
cwtl
dec
jne
rol
pop
es
in
ja
shll
sbb
dec
insl
jb
and
jg
scas
and
xchg
lret
mov
in
mov
xor
enter
inc
sbb
mov
int3
pusha
sub
push
out
jmp
push
je
cmp
insl
lahf
xor
imul
push
stc
adc
xchg
sub
pushf
adc
xchg
pop
sub
mov
leave
adc
push
scas
cmpsb
xlat
leave
mov
movsb
roll
sbb
or
lahf
dec
out
decb
stc
add
stos
lds
cmp
sbb
in
or
cmp
mov
lock
xchg
sbb
aad
cmp
outsb
jo
add
inc
imul
addl
adc
xchg
jmp
lret
icebp
cltd
sahf
sarb
push
mov
or
cmpsb
xchg
insb
bound
loop
inc
xchg
fmul
sbb
and
add
cmpsl
dec
mov
jbe
dec
push
inc
std
cmpsb
pop
faddl
test
dec
dec
lret
jne
cmpsb
xor
sub
movsl
sahf
subl
fisttpll
rorl
in
cmp
orb
cmpb
lods
push
adc
xchg
add
xchg
mov
aad
cmc
jne
test
push
fistpl
std
xchg
mov
push
sbb
test
jno
out
int
lcall
sti
shlb
mov
cwtl
dec
gs
push
lret
dec
bound
pop
and
sub
cmpsb
test
mov
movsb
dec
push
or
nop
or
out
jle
inc
push
mov
mov
push
xor
adc
insb
pop
pushf
loopne
lahf
sahf
add
daa
pop
call
test
loop
sub
pop
outsw
fmuls
inc
icebp
xlat
xchg
xchg
icebp
add
stos
rorl
inc
out
fwait
mov
iret
mov
mov
test
enter
add
frstor
jb
cmp
mov
mov
inc
xor
or
cwtl
movsb
lea
shll
xchg
aaa
mov
add
stc
mov
mov
lock
sbb
adc
push
outsl
mov
popa
sbb
fildll
sti
and
js
xchg
cli
loope
insb
cmp
jnp
pop
jmp
lods
stos
pushf
pop
pop
mov
mov
scas
outsb
movsl
out
dec
mov
push
adc
loop
push
sbb
jnp
notl
push
in
cmc
xor
sub
das
or
dec
jne
stos
test
fcmovnbe
push
cmpsl
xchg
cld
lods
dec
xchg
inc
mov
fnstsw
jmp
out
sub
cmpps
in
mov
inc
inc
cmpsb
jb
mov
fwait
push
and
xchg
xchg
cmpsb
fstps
mov
and
mov
lds
aas
xchg
fs
ret
lods
pop
cs
aas
fistpll
imull
xor
adc
lea
adc
push
setns
into
mov
test
lret
mov
std
dec
dec
pop
outsb
pop
and
iret
mov
gs
fucomip
test
mov
fdivr
mov
push
push
and
and
call
cmp
dec
xor
loopne
leave
enter
sub
popa
insb
loopne
mov
adc
sub
inc
daa
pop
pop
or
lahf
ljmp
sub
inc
repz
fwait
sbb
xchg
ljmp
in
mov
std
xchg
jne
and
push
ja
cwtl
call
add
pop
mov
or
lock
lock
aaa
mov
xor
push
dec
sub
jp
call
divl
cmp
mov
jnp
shl
mov
add
pushl
stos
inc
cmp
adc
aad
adc
sbb
lea
data16
out
sub
roll
and
push
adc
xchg
pop
mov
mov
idivb
repnz
jp
xchg
jno
out
lcall
jge
imulb
pop
push
pop
and
cwtl
xchg
mov
gs
and
lret
mov
outsb
fucomip
and
js
cmpsb
sub
jp
adc
xor
xchg
ja
mov
js
mov
pop
add
test
dec
pop
aaa
mov
cs
ja
and
mov
test
in
adc
mov
data16
rorl
jg
xchg
mov
sub
nop
and
xchg
call
daa
insl
add
es
stc
cmp
aas
mov
mov
sbb
mov
push
lds
pop
adc
movsl
jle
mov
outsb
push
iret
add
jecxz
out
movsl
pop
inc
add
mov
stos
fsub
loopne
push
clc
fwait
dec
pop
inc
shlb
scas
sub
push
lea
and
call
ret
cmp
jo
cs
inc
les
leavew
or
cmc
mov
inc
mov
stos
mov
pop
clc
xlat
push
mov
push
test
mulb
jp
aaa
hlt
orl
adc
cwtl
cltd
pusha
out
add
or
and
cwtl
in
sub
dec
push
jb
xchg
es
mov
rorl
adc
pop
or
mov
mov
clc
icebp
xor
mov
inc
mov
loop
ret
fdivrs
call
cs
flds
xor
cmpsl
mov
jp
adc
cmp
neg
enter
xor
insl
test
mov
or
push
sarl
add
push
aam
inc
lods
mov
sbb
adc
jae
mov
pop
xor
push
lret
xor
xor
cmc
mov
or
mov
jbe
mov
push
cmp
fsubs
lret
cmp
testb
xor
mov
add
and
inc
xor
popf
mov
xchg
adc
sub
sub
fucomp
cmp
mov
repnz
lret
jno
jno
in
cmpsb
dec
test
mov
pop
popf
jl
arpl
mov
push
popf
loope
repnz
lret
cwtl
cs
enter
push
and
dec
mov
sbb
xor
sbb
sbb
test
test
clc
push
das
jp
dec
fs
notl
xchg
sbb
mov
imul
dec
sub
jnp
lcall
dec
xchg
sbb
popf
cmp
mov
add
sub
push
sub
mov
aad
push
cld
loopne
sbb
sub
push
call
out
jge
scas
mov
adcl
in
ret
jne
mov
bound
xchg
nop
jo
testb
push
inc
jns
dec
pop
insb
or
mov
push
sbb
jge
cs
int
pop
jae
fstpt
negb
push
cmpsb
frstor
jnp
cmp
roll
push
popa
jbe
xchg
dec
arpl
xor
aad
adc
imul
pop
adc
push
pushl
jbe
xor
mov
call
ss
push
xchg
fstps
sbb
inc
arpl
add
sbb
sub
mov
jp
mov
mov
xor
push
je
cltd
int3
dec
in
fcmovnu
lret
stos
push
xchg
sub
jne
sub
sbb
xor
xchg
cwtl
pop
xchg
cmc
cmp
jo
sbb
stc
fists
scas
xlat
movsb
sub
into
stos
pop
fcmovne
pushf
mov
pusha
scas
iret
andb
push
and
pop
jp
orb
jecxz
leave
pop
cld
jmp
pop
ret
inc
cwtl
xor
in
mov
adc
dec
fs
jle
cmp
xchg
rcrb
jmp
cmp
icebp
add
out
test
arpl
ds
lcall
mov
vaddps
leave
pop
cmp
inc
rolb
imul
into
rcr
mov
adc
xchg
and
cltd
sahf
mov
sahf
gs
cmp
in
mov
fdivs
imulb
movsl
call
sti
inc
stc
ret
sub
inc
cmpb
ret
fistps
cmp
movl
incb
loop
xor
call
mov
jle
jae
arpl
cli
fbstp
pushf
jge
xchg
xchg
sub
in
in
or
jmp
fstpt
sti
pop
pop
jl
inc
xchg
lret
mov
int
cld
call
in
xchg
adc
mov
test
addr16
repnz
sbb
gs
inc
cmc
lcall
sbb
push
and
and
inc
ss
xor
lret
xor
les
leave
les
xor
xchg
mov
aam
push
lods
xor
out
das
push
lds
xchg
push
test
dec
sahf
mov
add
fildl
fsubs
outsl
jmp
push
ja
cmpl
aaa
scas
sarb
mov
out
enter
stos
fsubl
or
xchg
jmp
fists
cmp
bound
insl
cmp
lods
push
mov
cmp
fmuls
mov
pop
jle
imul
pop
mov
jmp
sbb
dec
dec
inc
mov
enter
shlb
jne
push
movsb
jae
add
ret
aaa
jecxz
stos
dec
jns
outsb
xchg
jp
sub
cwtl
movsl
sarb
xchg
int3
mov
les
fldt
clc
clc
jg
add
mov
and
loope
insb
mov
xor
sbb
push
fiaddl
push
mov
adc
lods
mov
mov
call
xorb
and
out
cmp
mov
xchg
fiaddl
push
bound
adc
sub
pop
sub
jbe
fnstenv
mov
mov
out
jbe
int
jmp
and
test
mov
notl
das
aaa
mov
out
lret
mov
ror
fwait
cmp
mov
rcrb
inc
lret
xchg
dec
inc
jle,pn
push
jno
xchg
jmp
push
pmuludq
sub
cltd
pushf
out
xorl
int3
cmp
cli
sub
cmp
pushf
xchg
add
xor
cmp
imul
dec
lahf
or
and
xchg
push
inc
movsl
lahf
fwait
aad
shll
lahf
and
lods
outsb
hlt
into
in
mov
mov
jl
or
xor
push
mov
jg
addr16
xchg
test
popa
dec
jecxz
pop
sub
jns
mov
mov
ret
mov
jb
fdivp
cmp
jae
imul
out
pop
mov
jmp
mov
out
cmpb
addr16
sti
xchg
aad
push
out
mov
pushf
fiaddl
xchg
iret
cmp
in
xchg
cmpsb
fucomip
or
add
aaa
mov
jl
rcr
lods
add
cmpl
fcmove
sub
add
and
insl
mov
mov
daa
pop
sbb
or
or
aas
sti
mov
and
ss
cmpsb
push
int3
aad
cmc
mov
push
out
push
inc
rcrb
xor
dec
inc
lock
or
nop
cmc
mov
int
leave
bound
dec
inc
jg
push
rorb
cli
push
sbb
xor
xchg
push
sbb
stos
lret
mov
popf
xlat
inc
imul
stos
xlat
push
xlat
pop
mov
dec
lods
sbbl
add
or
dec
sub
cmp
dec
pop
push
aaa
xor
pushf
pop
scas
cmp
movsl
cmp
dec
cld
xor
add
repz
inc
pop
push
adc
sub
lods
ret
je
dec
ja
movsb
mov
or
add
mov
push
lods
ds
lock
cmp
jl
rorb
aas
push
mov
pop
shll
push
movsl
jp
iret
mov
or
ss
je
cs
out
movb
pop
mov
out
inc
xor
stc
mov
sub
mov
leave
iret
sub
aam
mov
cmpsb
push
lods
lds
sub
addr16
subl
scas
xchg
in
repz
popf
insl
fdivp
out
sbb
movsb
in
dec
leave
mov
sub
xchg
test
test
cs
out
stos
cmc
jne
inc
cmpsl
cmp
orb
pop
and
in
into
rcl
int
pop
mov
and
insl
icebp
int
mov
in
pop
loope
cltd
mov
aam
lds
add
cmpl
lds
adc
fsts
dec
cmp
jle
add
ljmp
xchg
jns
ljmp
pop
or
jge
push
inc
sti
xor
mov
mov
mov
out
lahf
andb
lods
cmpsb
out
sub
xchg
push
into
loop
shll
jb
sub
xchg
xor
pop
rclb
lea
mov
cltd
mov
inc
clc
stos
add
cmp
dec
sub
or
jge,pt
xchg
stos
sbb
lret
mov
sbb
inc
nop
pop
mov
mov
xchg
mov
lods
pop
cltd
mov
and
jne
call
das
mov
pop
fsubrs
pop
cmc
mov
iret
mov
shll
out
lret
xor
enter
ds
xor
in
xor
jno
int
push
inc
adc
sti
xchg
xchg
jbe
out
mov
sub
fmulp
repz
int3
mov
fwait
mov
pop
stos
aam
in
add
std
mov
int
dec
enter
jmp
pusha
xchg
mov
xor
lcall
fstpl
lahf
push
sbb
sbb
out
cmp
gs
lret
lds
test
stc
repnz
ret
mov
stos
dec
call
push
ljmp
cmp
jbe
into
or
ljmp
ds
push
xchg
mov
inc
cmp
mov
mov
jo
inc
ljmp
ret
add
adc
push
mov
sub
sbb
jne
mov
push
mov
mov
or
movsb
scas
movsl
dec
dec
stc
cmpl
inc
subl
dec
sarb
jmp
test
out
sub
dec
inc
mov
bound
aaa
lds
push
sub
loope
fstpl
push
sub
cmp
mov
aam
ds
and
and
cltd
xor
test
pushf
xchg
push
in
xchg
push
or
xlat
and
bound
sub
and
ja
jmp
xchg
aaa
insb
jg
lret
dec
mov
and
popf
in
mov
pop
rcll
and
je
dec
ss
inc
shll
and
mov
cmp
xor
and
arpl
gs
adc
shrb
sbb
jmp
ds
pop
and
stc
movsl
dec
mov
mov
inc
cld
adc
das
fst
das
aad
add
loope
mov
in
testl
mov
leave
out
dec
aas
fsubs
ss
xor
xlat
or
or
sti
xor
pop
iret
mov
jno
subl
inc
push
and
es
fdivr
pusha
push
pop
fisttpl
inc
xlat
xor
inc
jmp
or
lret
cld
sbb
xor
dec
movsb
mov
cmp
enter
and
fisubrl
cmc
xor
test
dec
pop
aaa
inc
mov
push
adc
cmp
xor
jbe
cltd
dec
andl
movsl
inc
sbb
push
gs
mov
fcmovb
les
outsb
call
or
idivb
cmp
rclb
xlat
xlat
mov
xor
outsb
aas
mov
pushf
out
lret
pusha
push
pop
fwait
clc
jp
dec
push
push
jle
fidivs
nop
int
lock
aam
mov
cmp
mov
repz
jge
sbb
adc
stos
pop
sahf
push
clc
push
and
xchg
in
iret
sbb
pop
pop
jnp
shlb
mov
inc
inc
jno
pop
clc
ret
push
mov
daa
mov
loope
int3
inc
mov
daa
sub
dec
mov
arpl
or
cli
dec
inc
mov
jg
nop
cmp
fwait
test
and
pop
lcall
mov
in
cmc
fmul
mov
xlat
mov
rcrb
jae
mov
leave
add
pop
addr16
fcmovb
lea
cmp
cltd
data16
divb
aaa
xchg
fs
push
outsb
xor
adc
mov
insl
test
pop
jae
aam
or
cmc
fbstp
pop
mov
out
je
ja
jmp
cli
jne
push
leave
movsl
ret
fstpl
stc
push
cbtw
int
fs
in
in
pop
aad
testl
clc
mov
adc
movsl
sub
adc
leave
dec
add
cmc
jg
and
icebp
adc
pop
ret
gs
mov
enter
xorb
dec
enter
aam
mov
pop
add
sub
xorb
loop
xor
sub
int3
ljmp
daa
out
adc
movsb
inc
clc
popa
int3
mov
cltd
movsl
cmpsb
inc
bound
lret
xorb
cmpsl
pop
sbb
stos
fsubrs
arpl
cmp
pop
lock
push
icebp
or
sub
ficoml
pop
mov
xor
fists
repnz
mov
push
jle
out
mov
mov
and
notb
test
adc
sbb
pop
mov
stos
jge
push
cmpsl
fisttps
dec
adc
arpl
dec
or
imul
jo
add
xchg
sbb
sub
out
sbb
sbb
add
or
in
pop
adc
cmp
in
out
or
insb
ja
loop
inc
jl
cltd
push
mov
movsbl
xchg
lcall
loope
mov
ret
and
mov
dec
mov
jle
jns
shl
push
mov
cli
testb
cwtl
pop
fdivrl
jae
int3
insb
test
sub
xchg
pop
push
sbb
cmp
mul
cmpsb
lret
dec
push
cli
loop
lret
mov
mov
mov
shl
fnstenv
sub
fldenv
adc
push
sbb
add
mov
mov
test
add
add
popf
cltd
idivb
repnz
test
cmp
daa
sbb
leave
xor
repz
xor
or
flds
mov
mov
mov
aad
dec
push
inc
les
push
dec
mov
cs
add
xor
sub
inc
jae
xlat
inc
xchg
leave
aaa
mov
sbb
in
inc
lcall
inc
das
outsb
mov
inc
in
mov
outsl
mov
ds
jmp
push
in
add
mov
xchg
jg
in
mov
pop
add
loop
or
ja
xor
push
imul
pop
hlt
xor
outsb
mov
xchg
lahf
out
jg
push
dec
std
mov
and
movsb
sbb
aas
mov
inc
incl
imul
shlb
enter
mov
out
movsb
int3
xchg
dec
dec
int3
lock
test
pusha
sub
test
push
cmpb
ja
shl
xchg
jmp
dec
stc
movsl
xor
sbb
pop
jae
add
sbb
add
push
das
and
ljmp
aas
push
shl
cmc
rorb
pop
in
fs
mov
pop
pop
xor
and
and
call
xor
fwait
cmp
adc
movsl
mov
pusha
pushf
xchg
enter
inc
test
enter
fidivrl
pop
pop
cmp
push
mov
xchg
dec
inc
xor
push
mov
push
push
stos
popf
lds
xchg
popa
iret
cmpsb
daa
aaa
cmp
popf
das
test
arpl
loope
out
outsl
jg
lods
jno,pn
sahf
or
sbb
cmp
lds
cmp
xor
fwait
or
movsl
std
ja
push
test
mov
mov
cli
jecxz
sarl
add
or
sbb
shrl
mov
cmpsl
insb
dec
mov
imull
sahf
insb
std
jmp
sub
xchg
frstor
or
sub
pop
and
enter
sbbl
dec
add
sbb
daa
leave
mov
mov
js
daa
cmp
pop
cltd
test
nop
insl
cmp
xor
dec
fistpll
loope
and
inc
jo
lret
pop
ficoms
movsb
fidivrl
sub
add
jge
notl
dec
sbb
sbb
and
lahf
push
insb
lret
inc
incb
loope
pop
or
shrb
outsl
shrl
sbb
pop
cmp
jg
pushf
aad
dec
out
jns
mov
xchg
add
out
mov
rcl
jp
ss
fstpt
lods
imull
mov
mov
xor
pop
hlt
sti
mov
aad
test
cmpsb
jle
int3
mov
pop
mov
gs
jl
sar
gs
lret
pop
cmp
les
int
xchg
popf
int3
cld
push
xchg
sbb
sub
mov
or
add
xor
jbe
fisubrl
pop
adc
dec
pop
mov
push
xchg
or
push
xchg
enter
sbb
pop
inc
jmp
pusha
test
adc
mov
inc
xchg
nop
push
lcall
ljmp
push
das
and
xchg
shll
clc
fistpll
orl
or
iret
xchg
and
xor
inc
pop
adc
sub
int
add
mov
ja
sub
fdivl
and
push
vpermi2w
mov
xchg
xor
stos
xchg
jne
add
cld
aad
sbb
imull
cli
popa
mov
dec
sbb
out
xchg
mov
lret
inc
adc
fwait
outsl
popf
popf
inc
dec
dec
shl
mov
mov
xchg
mov
sbb
jmp
mov
test
mov
ja
fadd
test
dec
mov
andb
fbld
cmp
out
ja
mov
iret
out
xor
ja
mov
imulb
inc
or
fldt
sbb
imul
dec
mov
scas
or
inc
shll
xor
jge
jb
js
push
jo
mov
lods
mov
jecxz
aam
pusha
pop
xor
pushf
push
and
jns
push
movsb
dec
sti
cltd
sti
daa
or
int3
rolb
stc
mov
pop
movsb
sbb
lea
mov
std
not
enter
sub
call
pop
pop
push
leave
cmpsb
loopne
cli
loope
aad
fdivl
mov
xchg
mov
add
fwait
pop
subb
ret
xchg
pusha
inc
orb
mov
mov
lock
mov
or
cmp
lods
aad
fs
pop
pop
xor
push
mov
aad
icebp
jb
xor
scas
cwtl
lcall
push
fbld
shll
xchg
lahf
rcl
push
rorb
cmp
out
mov
into
add
mov
mov
test
icebp
cli
mov
icebp
test
lock
xor
xchg
sbb
pop
mov
jp
insl
cmp
fstp
and
xor
cmp
jle
jmp
jp
pop
mov
aas
dec
sbb
inc
incb
dec
mov
lds
ret
and
pop
xlat
aad
pop
bound
sub
loope
jns
or
scas
dec
ljmp
loopne
testl
rcll
pushf
adc
xor
outsb
stc
imul
add
mov
insb
pop
loop
dec
out
packuswb
into
mov
cmc
push
push
inc
mov
adc
jno
addr16
jae
or
or
mov
ret
rolb
std
mov
cltd
out
sbb
push
mov
das
sub
add
push
mov
jnp
arpl
or
inc
fs
out
incb
sub
scas
idivb
adc
sub
cli
dec
in
lret
inc
mov
rcrl
push
lea
xor
shlb
loopne
popa
inc
out
pop
test
pop
and
sub
xchg
test
leave
push
test
mov
xchg
in
jle
sub
mov
and
add
out
imul
icebp
pcmpeqd
or
mov
push
inc
in
testl
xor
jb
mov
mov
push
scas
mov
test
out
or
xchg
nop
les
sbbl
lods
fisttps
lret
bound
inc
test
xchg
fstps
pop
jne
mov
push
cmpsl
add
push
mov
faddl
sbb
movl
push
fstps
out
cli
stos
xchg
imul
jmp
insl
add
mov
sbb
repnz
stos
das
rorl
into
repz
rcrb
xor
enter
inc
mov
mov
scas
ja
mov
fists
inc
iret
cmpsl
in
sub
aas
jns
cs
nop
jge
mov
repz
or
popa
fwait
add
cltd
xchg
or
or
mov
mov
sub
sbb
aas
dec
mov
inc
stc
incl
stos
or
cmc
insl
pop
push
mov
out
out
mov
xchg
vunpcklps
sub
mov
enter
cmp
mov
sbb
cld
test
lret
in
push
sub
cwtl
sahf
push
mov
cmpsb
add
in
add
andb
mov
cs
push
std
scas
xchg
dec
inc
scas
adc
pushf
test
inc
pop
ret
ljmp
aam
and
fsub
fwait
pop
mov
mull
imul
push
lret
ret
xor
push
aad
jl
aad
push
ss
adc
dec
aad
xchg
jg
dec
and
test
pop
jno
and
push
mov
pop
cmp
sbb
and
les
mov
xchg
add
test
stos
fistpll
stos
imull
inc
daa
cs
jae
mov
pop
inc
mov
and
lret
sbb
daa
mov
sub
pusha
test
les
sbbl
xor
xlat
xor
mov
pop
jae
test
test
repnz
movb
pushf
add
push
lahf
fisubrl
ja
ds
sbbb
mov
std
cmp
add
adc
movsl
leave
jo
cld
in
inc
sbb
dec
loopne
test
pushf
stc
arpl
scas
inc
sbb
mov
fucom
jb
and
les
rep
popf
xchg
insb
daa
outsl
add
in
or
scas
fnstcw
movsb
lds
sbb
popa
push
mov
es
push
test
xor
outsl
and
subl
pop
ficomps
popf
and
lods
lods
daa
inc
leave
mov
pop
leave
addr16
xchg
inc
jb
adc
mov
sub
pop
push
add
or
outsb
sarb
addr16
push
jne
jp
scas
push
lcall
push
push
mov
mov
ret
outsl
repz
fimuls
insb
js
mov
lret
mov
pop
aad
int
or
pop
cmpsl
push
test
xchg
jno
into
mov
inc
push
leave
push
cmpsl
shlb
iret
pop
dec
cwtl
lock
xor
in
ja
loop
adc
mov
out
mov
fnsave
push
imul
pusha
inc
int
inc
fcmovne
loopew
cs
mov
inc
lea
jns
xor
push
out
mov
mov
fisubrl
out
test
jp
mov
jb
jg
mov
lea
mov
lods
int3
cmp
insb
jge
fisttpl
sub
aam
add
mov
mov
jle
mov
mov
and
push
inc
lret
pop
mov
mov
js
aam
adc
rcr
scas
and
cltd
jle
lcall
push
add
pop
jbe
stos
mov
or
or
sub
loopne
sub
inc
jmp
mov
stos
inc
sbb
lock
sub
iret
stos
push
sbb
lret
das
bound
scas
iret
pop
cmp
push
adc
pop
fsub
icebp
cmp
jmp
mov
sti
popf
fs
jbe
aam
pop
adc
cmpsb
push
jne
pop
cmp
xor
in
movsb
or
insb
jbe
cs
cs
xlat
out
xchg
jb
icebp
mov
rolb
dec
dec
mov
and
mov
jnp
mov
push
sbb
outsb
icebp
inc
add
jns
jmp
sbb
mov
test
pop
inc
shr
pop
outsb
pop
out
hlt
and
jns
mov
inc
jns
iret
dec
inc
or
sub
or
nop
imul
stos
xor
out
push
pop
push
ss
lds
inc
mov
lcall
mov
xor
push
icebp
and
dec
push
mov
inc
pop
out
icebp
loop
scas
ror
mov
dec
add
mov
mov
mov
js
adc
pop
fnstsw
cwtl
mov
scas
dec
stos
popf
repnz
outsl
pop
cmp
test
dec
movsl
mov
cmp
xor
mov
inc
or
aas
popa
adc
js
xchg
or
data16
adc
inc
cld
xor
insb
insb
in
les
and
and
or
fwait
pop
out
mov
hlt
cmp
std
rorb
fs
pop
ss
xchg
bound
xor
clc
push
inc
pop
mov
std
mov
test
adc
xchg
jecxz
pop
fnstsw
gs
and
lret
js
push
dec
fdivrl
xchg
jae
test
addr16
pop
std
dec
out
rcr
dec
int3
out
icebp
gs
fwait
das
stos
in
sti
or
stc
sub
scas
push
inc
lea
je
jmp
pusha
mov
js
pop
shll
sub
in
ret
xor
add
lods
fwait
sbb
push
dec
test
in
jl
mov
ss
hlt
repz
inc
jg
orb
adc
cmc
hlt
mov
push
test
xor
sub
add
ret
popf
and
pop
jno,pn
rclb
sub
dec
pop
sti
dec
and
cltd
adc
cmp
fsts
test
fxch
movsb
insb
jp
jo
arpl
arpl
dec
imul
jb
mov
jmp
jl
lret
fisttps
xchg
imul
jb
fisubrs
mov
cmp
in
pusha
mov
pop
or
inc
or
movsb
jno
pop
test
cwtl
xchg
frstor
sbb
icebp
sbb
into
repz
jp
inc
sub
hlt
push
add
sarb
andb
lock
dec
bound
into
adc
inc
mov
hlt
sbb
xor
adc
mov
fwait
movl
pushf
xor
lret
adc
inc
fwait
mov
in
pop
sub
mov
int
mov
adcl
out
sub
scas
jne
sbb
cmp
or
inc
fsubs
mov
sti
xchg
cmp
jge
push
mov
pop
xchg
add
jmp
rcrl
mov
rcl
xchg
ds
bound
add
in
mov
xchg
push
sub
dec
roll
jg
pop
fidivrs
das
shrl
testl
xchg
push
mov
xchg
pop
shr
mov
inc
mov
sub
jae
push
movsl
jno
add
add
dec
fstl
int
inc
pop
mov
cmp
lds
subb
xchg
repnz
jo
dec
ljmp
and
psllq
stos
fistpll
cmp
popa
cli
daa
mov
sbbb
xchg
loope
data16
xchg
push
lret
movsb
pop
mov
mov
call
dec
cltd
xor
dec
insb
inc
ret
in
sbb
divl
clc
fidivs
sbb
enter
jo
mov
and
adc
dec
test
and
push
shrb
cltd
ss
mov
fldcw
cmp
jne
cmp
lds
cmp
imul
lock
adc
inc
mov
mov
push
pusha
jmp
scas
insl
add
xchg
add
jecxz
jl
adc
insb
mov
das
jno
xor
bnd
test
mov
jae
adc
jb
test
mov
xchg
dec
or
or
loopne
call
mov
mov
les
clc
cltd
jno
pop
jnp
lods
dec
call
test
push
das
or
jecxz
repnz
repnz
and
fcmove
mov
xchg
mov
jmp
cmp
fisttpl
mov
mov
and
xchg
std
inc
and
fst
out
test
fistl
and
jnp
and
or
sub
dec
lock
rcrb
push
adcl
jnp
jmp
cli
push
mov
jle
mov
fisttpl
mov
dec
jle
aad
out
scas
pop
fs
imul
pop
jl
cmp
out
inc
sti
movsb
test
dec
hlt
push
or
adc
in
adc
push
inc
out
cmp
aad
adc
out
mov
in
popf
pop
jmp
xacquire
fstl
jnp
xchg
xchg
movups
cmp
imulb
mov
add
loop
xor
in
cli
mov
push
xchg
jl
sbb
mov
mov
mov
pop
pop
gs
sub
xchg
sub
in
fcoml
cmpb
cmp
or
cmp
inc
xchg
cmp
pushf
mov
mov
outsl
ret
out
ret
cltd
or
mov
imul
or
xchg
int
fmul
push
fsubrs
gs
clc
cld
into
stos
dec
adc
sti
xchg
mov
mov
push
jb
cwtl
jge
push
imul
inc
jns
or
xor
xchg
or
sub
icebp
add
push
dec
stc
mov
mov
outsl
in
mov
and
cmpsl
int
push
mov
jns
ds
cltd
sbbb
mov
inc
pop
les
fbstp
pop
aam
lcall
adc
ja
xor
sub
or
push
mov
mov
je
jl
mov
int3
pop
mov
jge
test
mov
iret
cmp
jmp
push
add
movsl
mov
loope
add
mov
idivl
loope
or
mov
adc
ja
push
es
in
cmpl
cs
pop
repnz
mov
clc
fs
jb
lahf
pop
or
add
inc
cmp
mov
out
jl
xchg
jle
inc
and
pop
jg
jecxz
dec
mov
push
mov
sbb
pop
fwait
jp
adc
mov
add
xchg
ret
and
mov
movsb
xchg
sti
sub
cwtl
pushf
dec
cmpsl
adc
mov
push
scas
ja
dec
xchg
inc
pop
add
sub
test
sub
ret
adc
mov
cmp
adc
fstps
jge
jnp
dec
xchg
sub
jmp
and
scas
outsb
inc
repz
dec
adc
pop
in
data16
jle
xor
pop
and
ret
cli
pusha
pop
jae
clc
out
insb
inc
jo
cmp
or
sub
pusha
jp
sbb
mov
movl
or
in
popl
pop
add
incb
or
pop
jle,pt
jl
in
sbb
sahf
jecxz
loop
int3
fcompl
sbbb
or
xor
xor
jbe
add
shl
andb
jge
inc
xchg
ds
sbb
pop
xchg
jmp
popf
pop
in
mov
and
cs
cmp
jo
dec
or
xchg
test
outsb
pop
pop
sbb
inc
subb
inc
test
nop
dec
jge
cmpsb
push
xor
in
fisubrs
jbe
or
mov
insb
cli
jno
add
jae
mov
cmp
mov
sbb
aaa
pop
dec
mov
inc
mov
mov
cmpsl
push
mov
add
shlb
xor
push
cmp
dec
jns
xchg
cmp
dec
decb
mov
imul
mov
jnp
add
lods
xor
and
pop
lret
cli
inc
inc
dec
xor
insb
test
xlat
lods
mov
test
movsl
sbb
jne
adcb
jecxz
cmc
mov
stos
push
mov
lods
push
and
imul
in
mov
lret
inc
xchg
add
push
addl
lret
mov
scas
and
scas
ret
cmovb
inc
adc
xlat
fdivs
sub
jg
fldl
loop
push
rolb
sarl
divb
pop
adc
aaa
cs
sub
fmull
dec
int
sbb
inc
mov
push
dec
jo
mov
insb
xor
icebp
xchg
insb
inc
jp
lock
xchg
lock
lods
js
sbb
rolb
sbb
test
pop
jle
int
xchg
rcrb
cltd
movsl
lods
imul
mov
shl
repnz
push
jmp
cwtl
lahf
popf
pusha
sub
popa
enter
test
inc
pop
push
cli
push
add
sbb
data16
jge
pushf
lea
mov
pop
or
sbb
dec
jl
sub
pushf
das
cmc
mov
sbb
insl
add
ret
adc
lock
and
cmp
add
mov
lods
jb
leave
fbld
fisubl
fs
jecxz
mov
add
inc
fisttpl
push
inc
xchg
xchg
stos
fcoms
pop
adc
pop
mov
xchg
or
xchg
inc
sub
aam
pusha
setae
pop
sub
mov
cmp
jb
mov
push
mov
xchg
cwtl
aas
xor
add
mov
add
mov
outsb
add
stc
jnp
out
fcomi
xchg
mov
iret
pop
pop
mov
icebp
in
pop
pop
cmp
lock
jg
rolb
pop
xor
out
cli
mov
xor
cwtl
ljmp
or
lea
ja
mov
mov
stc
sbb
mov
xor
and
cmc
push
dec
jns
fisttpl
dec
adc
sub
xor
movsl
fiaddl
fbstp
push
lds
int
sbb
mov
loop
add
mov
es
cmc
popf
sub
push
lret
mov
jge
mov
aad
shll
mov
mov
aaa
inc
hlt
ret
mov
or
dec
out
cmp
inc
pop
mov
adc
mov
add
mov
xor
int
pop
int3
push
das
scas
xchg
in
cs
lock
push
add
lods
or
cld
fcomip
pop
movsl
aad
sub
enter
into
aas
loope
jno
mov
aad
out
cld
hlt
pop
xor
ficoml
mov
adc
xor
push
clc
jmp
inc
or
mov
in
loop
gs
mov
icebp
xchg
popa
les
fs
cmpsb
fmulp
movsl
mov
in
mov
lea
ret
mov
mov
pop
fdivr
movsb
jns
xlat
je
mull
fldt
inc
ret
fs
ss
cmpsb
xchg
or
out
lret
and
aaa
ficoms
jne
in
popf
or
or
and
cli
nop
xchg
cmpsl
ss
jg
int3
jge
lea
out
mov
push
xchg
fnstsw
mov
nop
jp
js
and
jnp
push
rcrl
mov
sub
or
movsl
inc
xlat
fwait
inc
jae
movsb
adc
mov
pop
test
add
outsb
rclb
fsubrs
push
sub
sti
adc
xor
je
cmp
enter
js
push
dec
adc
add
inc
insl
fidivrl
cmp
fdivrs
in
jno
and
jg
dec
imul
daa
sub
cmpsb
fimuls
fbstp
scas
mov
xchg
dec
leave
cmp
xchg
cltd
mov
enter
es
sbb
xor
ja
cmc
jbe,pn
lcall
aaa
lods
jnp
or
jne
cmp
inc
adc
cli
cmc
xchg
adc
and
sbb
ds
lcall
sbb
add
outsb
es
adc
pop
mov
js
outsb
cmpsb
stos
gs
sar
fstp
add
adc
outsb
cmp
mov
cmpsb
hlt
loope
sbb
or
mov
popa
pop
int
dec
sbb
dec
std
cmp
jnp
jno
jno
xchg
pop
fsubs
cli
test
outsb
cmp
cltd
or
jmp
inc
sti
dec
nop
or
fstps
inc
adcb
rolb
fdivrl
inc
stc
mov
fidivrs
adc
imul
lcall
sbb
cmpsl
icebp
mov
push
xchg
and
jns
mov
cld
cmp
imul
xchg
jbe
iret
ja
xchg
out
data16
in
dec
or
rolb
cld
cmp
jge
pop
adc
test
xor
cmp
test
mov
out
xchg
xor
fucomi
ljmp
xor
mov
xor
push
xor
leave
push
mov
lahf
adc
adc
aam
cmpsl
mov
mov
stos
and
loope
sahf
jl
sti
daa
imul
cmp
sbb
cld
push
xor
pop
repz
cmc
nop
cmp
stc
div
adc
and
mov
dec
rclb
stos
out
test
repz
xor
push
jl
cmpsb
fidivrs
xchg
jnp
test
fsubrs
dec
dec
xor
jl
cwtl
jno
pop
sub
jl
mov
repnz
mov
out
mov
adc
add
mov
push
jp
pop
cmc
jle
sbb
movsb
aas
or
divb
fnstenv
or
mov
fstps
or
mov
jmp
roll
test
pop
clc
test
xchg
or
std
ss
cs
ds
pushf
icebp
cli
sbb
adc
fwait
scas
adc
dec
lds
inc
aad
nop
ss
push
fmulp
inc
inc
leave
addr16
cwtl
movsl
aas
in
inc
xor
hlt
sub
xchg
jbe
bnd
rolb
insb
bound
add
inc
pop
jg
cmp
icebp
push
sti
push
xor
aaa
fdivrs
push
popa
pop
jbe
cs
sbb
call
test
jb
jns
ficoml
inc
jne
sti
cmp
jecxz
scas
jne
lahf
mov
jnp
add
cmpsb
aas
xor
dec
cwtl
xchg
or
xchg
xor
xor
and
and
dec
ljmp
es
add
stos
pop
movsl
push
add
push
fsubs
bswap
push
test
mov
loopne
jl
mov
inc
insb
pop
imul
xor
and
repz
jmp
jno
cwtl
adc
ss
jecxz
out
cli
int3
jae
mov
iret
inc
cmp
jb
ret
sbb
dec
mov
cmpsb
cmc
adc
and
fldt
pop
cmp
lcall
into
das
add
lock
stc
mov
sbb
test
enter
scas
das
out
sub
inc
repnz
out
cmp
lret
stos
aas
popa
cmp
mov
stos
sbb
mov
imul
not
arpl
out
mov
scas
lea
lea
or
sub
sub
fstl
sub
lods
leave
rcl
ret
pop
add
and
xchg
aaa
int
fstps
sbb
jnp
pushf
lcall
insb
cmp
and
pop
add
test
adc
fidivrs
faddl
inc
cmp
push
ficompl
iret
xor
in
rol
loop
and
aaa
sar
pop
gs
lahf
cmp
inc
es
iret
clc
ja
or
pop
dec
and
inc
mov
ficoms
scas
lahf
jns
and
loope
jle
jl
inc
pop
jb
mov
out
jle
adcl
ret
icebp
mov
outsl
push
xchg
jecxz
inc
andl
leave
and
mov
fstpt
das
dec
jo
xor
fs
mov
sbb
outsl
mov
xchg
enter
cwtl
push
dec
or
jmp
and
rcll
jge
mov
fstpl
cld
mov
lock
inc
push
inc
fmul
xor
je
inc
xor
and
fmull
lret
xor
hlt
jmp
mov
into
out
jmp
adc
prefetch
xor
stc
sarb
jg
mov
mov
loope
cmpsl
in
into
addr16
inc
inc
cld
jge
push
xor
cmp
ret
push
fwait
push
pop
mov
outsl
or
andb
clc
jo
and
ljmp
or
mov
jl
mov
ja
daa
push
and
mov
ja
xchg
cmc
jne
into
mov
mov
adc
aad
icebp
jo
xchg
addr16
hlt
add
cmc
adc
fwait
mov
test
in
xchg
mov
cs
push
int
movsl
inc
xchg
in
sahf
ficompl
mov
rclb
pop
popa
adc
loope
test
cli
or
scas
xlat
decl
push
sub
inc
das
test
in
mov
cmp
lock
mov
xchg
outsb
hlt
sub
pop
outsb
mov
jno
popf
bound
lods
mov
mov
jmp
fadds
and
and
mov
xchg
andb
lock
mov
mov
lret
or
mov
cmpsl
movsb
mov
push
inc
push
dec
loopne
xchg
test
push
sbb
sarb
mov
mov
mov
or
das
mov
scas
not
aaa
lock
inc
cli
pop
or
xor
add
sub
imul
loop
cmp
lcall
sub
call
jp
xchg
adc
into
clc
enter
sarl
sbb
cmpsl
lcall
decl
adc
sbb
inc
mov
pop
int
pop
loop
outsb
sar
decb
inc
mov
in
pusha
jb
jmp
adc
mov
iret
imull
inc
mov
push
lods
xchg
xlat
dec
jne
dec
ds
out
push
xor
inc
mov
lods
insb
inc
mov
mov
popf
cmp
pop
mov
push
mov
xor
xor
sbbl
lods
fidivl
outsl
jne
cltd
fidivrs
jns
bound
aaa
adc
push
adc
push
out
testb
rorl
das
clc
iret
imul
clc
daa
jmp
lods
jo
and
ret
movsb
and
test
sarb
shr
loopne
and
fisubrs
pop
pushf
jmp
cmp
fnstsw
fsubrl
xsavec
push
or
adc
xchg
and
sbb
hlt
cltd
push
cld
cmc
inc
or
sarl
mov
dec
icebp
inc
jecxz
xchg
rolb
sub
lret
lcall
dec
jb
xchg
hlt
call
loope
rcll
inc
mov
sti
sub
or
jae
mov
clc
and
fadds
dec
test
repz
roll
mov
es
in
out
andl
and
jns
dec
ss
and
lock
xlat
and
sbb
cltd
repnz
fstps
sti
inc
sarl
push
mov
adc
push
sub
lea
incb
ret
cld
lods
rcrl
push
enter
out
mov
inc
insl
jg
mov
outsb
mov
jb
fnstsw
jb
test
fcomps
cmpb
jne
rcll
sub
xor
add
mov
sahf
sub
clc
addl
lds
out
xchg
pop
dec
out
mov
jp
aad
xor
fcoml
ljmp
incb
popf
loope
jb
neg
out
mov
fs
sub
mov
lds
rcll
mov
xor
dec
mov
movl
add
xor
xchg
adc
xchg
outsb
push
imul
adc
mov
ja
lock
andl
pushf
imul
inc
adc
enter
fisttps
xchg
out
call
inc
dec
scas
iret
scas
inc
push
insl
jp
push
aam
sahf
cmp
or
add
cmp
mov
addr16
add
sbb
popa
add
mov
aad
test
mov
xchg
ss
mov
dec
pop
pop
jbe
dec
sbb
insl
inc
aad
orb
pop
xor
cmc
adc
rcl
lahf
lcall
out
jb
dec
lods
sbb
int
jg
outsl
mov
add
and
data16
shlb
daa
jmp
jg
hlt
adc
sbb
rcrl
jno
push
jge
insl
and
arpl
in
mov
popa
test
cmp
in
fistpll
mov
cmp
jecxz
pushf
fndisi(8087
push
mov
jnp
leave
testl
xchg
push
mov
push
mov
negb
aam
xor
inc
dec
sbb
lods
push
xlat
cmc
mov
push
or
add
popa
xor
in
jmp
push
sbb
fsubrl
lods
and
add
ljmp
lret
subl
shll
out
outsb
cmp
aam
dec
pusha
mov
dec
inc
inc
lahf
enter
dec
out
sub
lcall
add
sti
adc
or
adcb
push
in
lods
push
insb
mov
xchg
adc
and
cmp
fsubrl
out
mov
xchg
push
test
sbb
out
in
lret
pop
in
das
movsl
std
xor
into
out
xchg
xor
lock
aam
enter
cmp
movb
xlat
out
adc
mov
mov
bound
xchg
and
xor
in
mov
ja
and
arpl
ljmp
shlb
jnp
outsb
gs
addr16
mov
add
std
dec
ror
mov
jmp
mov
add
enter
test
mov
mov
cs
fs
pop
mov
pop
jmp
sbb
jmp
mov
sbb
jae
das
icebp
repnz
xchg
mov
xchg
jle
fmull
cmp
push
addr16
in
js
mov
jl
jae
popa
mov
cmp
fwait
rorl
xchg
inc
sub
sub
ja
dec
stos
scas
js
cmp
popf
push
dec
es
jo
mov
into
cld
adc
lods
push
ret
pop
les
mov
push
sub
add
andl
out
sahf
xchg
bound
std
dec
int
xlat
jo
sbb
test
jg
pop
fists
xor
inc
add
cmpsl
mov
sbb
push
inc
into
add
dec
inc
sub
sbb
sub
movsb
or
lds
sahf
lods
imul
push
mov
mov
ljmp
mov
xor
icebp
fbstp
or
rolb
daa
add
clc
xor
aam
dec
int3
add
lret
fisubrl
cmp
shr
pushw
add
icebp
xor
jb
jbe
xor
outsl
lods
lock
sbb
mov
sti
ljmp
and
mov
and
xor
aad
mov
sub
push
pop
ficoml
popf
stos
dec
jo
mov
cmp
popa
imul
adc
cwtl
rol
scas
xor
lea
cwtl
test
andb
sub
rcrb
mov
mov
cmp
popf
ret
nop
lods
outsb
jns
mov
mov
sub
lcall
sbb
xchg
data16
in
and
test
jp
jle
sbb
js
xchg
std
incb
aad
or
mov
jns
les
dec
pop
xchg
inc
adc
imul
mov
mov
sbb
and
xchg
and
or
adc
xor
sub
out
mov
cmp
add
rcr
cmp
or
add
dec
cmpsb
cmp
shrb
mov
mov
xchg
sbb
and
aaa
jne
out
call
dec
lret
xchg
xchg
mov
xlat
and
cld
pcmpgtd
pop
inc
sti
shll
push
add
push
inc
testl
push
je
add
in
add
jb
pop
inc
sbbl
pop
and
arpl
and
push
mulb
fs
mov
xlat
or
jge
push
popf
fwait
push
stos
adc
fstps
addl
js
loopne
adc
dec
mov
mov
xchg
data16
xor
mov
push
pop
and
and
pop
jns
cli
jbe
lret
and
jnp
cmp
test
xchg
arpl
xchg
rol
jno
inc
loop
test
repnz
push
jne
and
fwait
dec
cmp
aas
fsubrl
mov
scas
cmp
imul
mull
add
in
dec
dec
adc
lds
adc
mov
dec
bound
aaa
or
mov
out
push
dec
dec
nop
inc
or
lcall
mov
jle
scas
lock
lahf
or
movl
je
xchg
xor
ret
arpl
repz
outsl
sbb
adcl
dec
dec
jle
and
mov
jae
lret
cmpsb
mov
or
idiv
xchg
sbbl
xchg
fimuls
xor
push
outsb
adc
inc
jae
pop
mov
jmp
inc
fneni(8087
sub
mov
xor
std
or
jnp
inc
movsb
sbb
ds
pop
imul
aaa
or
popf
lret
popa
dec
pop
inc
push
popa
xor
inc
stos
push
fsubl
fadds
mov
push
roll
push
push
ljmp
mov
sbb
jo
jbe
or
mov
lock
sbb
push
jp
xchg
roll
outsl
js
daa
iret
pop
je
ret
pop
xlat
fnstsw
in
in
inc
inc
adc
cmp
push
jbe
mov
mov
mov
scas
cmpsb
je
imul
int3
cs
in
inc
ja
fcomip
push
mov
jb
push
pop
jno
pop
inc
and
outsl
jne
popa
or
addb
cmp
insb
mov
fwait
aas
xchg
mov
cmp
xchg
mov
xchg
roll
inc
cwtl
mov
nop
enter
inc
into
cmpsb
pop
movsl
inc
jmp
cld
pop
scas
enter
inc
btl
rorl
mov
adc
icebp
mov
es
fstps
pop
stc
xor
sub
mov
in
out
xor
or
jecxz
ja
lods
or
scas
adc
xor
out
mov
int
push
mov
mov
enter
jmp
cmp
fninit
ret
or
push
dec
mov
sti
xchg
decb
jns
mov
movsb
mov
push
mov
das
add
in
mov
mov
les
das
push
pop
ja
fldl
fwait
into
jne
nop
push
mov
cld
mov
ljmp
les
push
pop
mov
pop
lahf
xlat
out
test
pop
aas
and
sub
in
fneni(8087
clc
inc
mov
aad
jg
fwait
mov
mov
lds
mov
sub
xchg
movsl
fldl
sar
aad
ffreep
mov
shrb
xor
das
or
jo
inc
cld
jecxz
clc
std
dec
mov
cmp
push
rcrl
std
or
adc
imul
mov
push
out
daa
loop
jle
sub
ret
mov
inc
jle
inc
call
pop
pop
outsl
mov
pushf
dec
clc
jo
push
das
arpl
pushf
adcb
adc
out
or
in
sub
outsl
mov
fdiv
js
xor
ficomps
inc
sub
mov
jg
fistps
aas
arpl
lods
lahf
add
es
adc
bound
leave
adc
jmp
ss
pop
and
lea
push
and
push
aad
adc
pop
sbb
cmp
and
into
nop
cs
pop
outsb
pop
jmp
clc
cmc
popf
xlat
shll
lea
sbb
jnp
xchg
test
ret
loop
jb
cmp
test
aam
out
in
add
ja
ret
xchg
xchg
movsb
inc
cld
or
sub
mov
and
inc
ret
mov
ret
push
pop
push
adc
call
scas
lret
movsb
loopne
sbb
mov
xchg
mov
sarb
addl
in
popf
ljmp
fidivl
xor
movsl
pop
push
adc
sub
aaa
sub
dec
dec
fsts
dec
mov
push
and
xor
repnz
daa
jb
push
pop
and
add
cmp
cmpsb
pop
jg
mov
add
pop
inc
and
mov
into
mov
pusha
es
mov
icebp
xchg
xchg
mov
sbb
xchg
jb
cmpsb
pushf
sbb
mov
xchg
mov
lds
jb
jge
lret
pop
js
aam
adcb
clc
xorb
ds
jbe
mov
mov
fbstp
stos
inc
adc
or
cmp
enter
inc
push
xchg
sbb
add
inc
or
out
and
and
push
pop
lds
adc
lds
mov
cltd
in
cmp
ja
std
jmp
test
test
mov
or
sub
mov
out
ret
loope
push
xchg
push
add
fwait
pop
jnp
cmp
adc
sub
cmp
adc
jmp
sbb
popa
dec
jl
pop
cmp
in
icebp
cmp
mov
or
stos
fldcw
xchg
sub
ror
push
cmp
xchg
xchg
scas
cltd
call
mov
push
fwait
cwtl
and
cmp
les
xchg
stos
xor
hlt
lahf
push
enter
jo
sub
or
dec
adc
adc
scas
sbb
xchg
or
mov
jnp
fdivp
loop
cltd
cltd
test
jno
or
mov
ret
icebp
sahf
imul
shll
inc
pop
dec
nop
jecxz
cmp
jmp
es
rorb
addr16
icebp
adc
pop
les
aas
mov
pusha
lods
mov
in
push
ret
shlb
lods
mov
call
dec
iret
fdivl
lret
xor
jns
xchg
adc
mov
fsub
push
ljmp
shrb
sbb
lods
pop
mov
or
jno
movsb
fadds
jge
mov
stos
pop
cmpsl
inc
jae
pop
sub
xor
aaa
mov
aaa
mov
shll
jmp
fs
sbb
mov
arpl
mov
mov
lock
adc
adc
test
ret
jg
mov
jg
sub
xlat
iret
in
mov
jmp
insl
mov
xchg
or
fidivrl
mov
jecxz
or
sub
sub
pop
or
out
hlt
adc
inc
inc
mov
xchg
or
push
stos
fwait
mov
ljmp
mov
stos
push
test
inc
fisttpll
sub
push
daa
test
jnp
dec
out
xchg
pusha
pop
dec
mov
data16
jle
sbb
and
cmp
rorb
mov
js
pop
mov
jae
mov
adcl
dec
imull
scas
out
or
test
dec
into
sbb
cmpsl
lret
data16
mov
mulb
and
pop
mov
call
icebp
vandpd
setbe
popa
xchg
jnp
cmc
mov
cmp
pop
imul
dec
mov
rorl
mov
and
outsl
lods
out
fs
push
pop
jb
xchg
mov
bound
cmp
jle
xchg
xor
bound
xor
int3
push
notl
dec
jb
mov
out
pop
add
mov
pop
out
xchg
jge
ljmp
mov
mov
ljmp
test
std
scas
iret
adc
push
js
pop
mov
cmp
sub
arpl
in
pop
xchg
inc
mov
lods
daa
mov
int3
mov
in
roll
stos
jno,pn
je
ja
lahf
jge
popf
jnp
ds
xchg
cmpsl
xlat
fdivrl
xor
sahf
or
push
sub
xor
jo
rorl
in
js
jb
push
in
jecxz
push
idivb
pop
cmp
xchg
inc
cli
xchg
nop
inc
pop
pushf
inc
jecxz
sahf
test
sub
cmp
fs
enter
fnstcw
mov
jns
pop
mov
mov
add
iret
jecxz
or
or
push
push
inc
pop
mov
insl
lret
jb
xchg
add
push
pusha
cmp
xchg
mov
mov
cmp
lds
popa
xor
add
jp
mov
dec
stos
fs
push
and
push
mov
mov
call
lcall
lock
fwait
sbb
cmc
push
inc
mull
mov
sbb
clc
pop
xchg
fnstsw
and
mov
test
jp
add
cmp
dec
xor
xlat
lea
adc
icebp
std
pop
xorb
mov
mov
js
fsub
scas
cwtl
test
test
ljmp
insl
xor
shlb
dec
mov
or
aam
jnp
add
addr16
adc
in
test
and
xor
push
jle
lcall
movsb
push
adc
in
shll
sbb
cmp
lcall
les
mov
int3
lret
adc
bound
xorl
arpl
test
in
fnclex
xchg
pop
stos
adc
idivl
push
or
je
lret
jb
popf
jp
push
pop
or
mov
mov
adc
mov
adc
movsl
insl
mov
adc
fbstp
shrb
rcrb
lods
sahf
fwait
scas
fwait
out
shrb
js
aas
push
gs
dec
mov
loopne
cmp
movq
push
cmp
scas
ds
xchg
loopne
fidivl
add
mov
or
jbe
push
bound
sbb
sub
and
clc
xchg
or
aam
das
mov
xchg
sarl
stc
mov
cmpsb
sub
pop
ds
scas
jbe
add
shlb
sbb
in
out
mov
cmp
xor
xchg
adc
lret
addr16
mov
dec
dec
dec
icebp
addr16
inc
push
lret
sbb
icebp
jnp
mov
sub
jmp
std
pop
loope
rcl
popf
xorb
adc
nop
adc
inc
and
mov
jp
sbb
lock
or
outsl
cmp
pop
pusha
push
inc
loopne
or
adc
arpl
fwait
and
fidivs
fs
jb
mov
sbb
dec
mov
inc
test
and
cs
dec
xchg
inc
adcl
jno
gs
out
out
sbb
enter
mov
sub
jecxz
mov
push
or
flds
cltd
jbe
imulb
bound
pop
xchg
sub
cmpsl
add
std
outsl
cmp
push
imul
movsb
movsl
jno
add
je
jb
xchg
push
jl
mov
cld
in
insb
adcl
jecxz
rol
xchg
ljmp
cmp
inc
dec
mov
call
mov
cli
and
xchg
gs
push
sub
ficompl
pop
push
int
es
in
and
iret
or
xchg
nop
jmp
fs
cmpsb
movl
inc
jp
popa
sub
mov
mov
aaa
and
repz
mov
out
fs
lahf
orb
sub
dec
sbb
repnz
mov
add
fnstenv
xchg
fildl
aas
fildl
les
psrlw
cmp
fisttps
fmull
out
dec
jge
ds
sub
jne
pop
inc
jbe
mov
jge
decb
fmul
iret
push
cmp
push
pop
jnp
pop
ja
jnp
in
dec
mov
sahf
xor
adc
repnz
lea
xchg
call
scas
imul
mov
add
sbb
add
sti
xchg
ds
jmp
mov
cs
adc
inc
mov
mov
xor
mov
and
sub
and
inc
push
jmp
sti
pop
and
out
mov
repz
mov
mov
movsl
add
push
sbb
fmull
xchg
lds
rolb
icebp
push
rolb
lds
jp
push
pop
sti
inc
or
lea
cs
sti
lds
and
pushl
popa
cmpsb
push
push
push
dec
cmpsl
adc
pop
daa
cmp
sbb
xchg
mov
std
mov
cmp
roll
lds
into
jmp
mov
push
mov
std
xor
sub
js
mov
mov
cmp
lods
dec
lea
xlat
lret
das
cmc
nop
lock
jo
inc
pop
lds
cmp
mov
lahf
fistpll
lahf
pop
pop
outsl
es
daa
outsb
fildl
lcall
xchg
push
jl
xchg
xchg
xor
andb
jae
ds
mov
ret
enter
mov
jo
cmpsl
add
hlt
gs
mov
add
mov
mov
push
xchg
fsubl
test
cli
icebp
add
lcall
orb
imul
arpl
xchg
out
stc
add
sub
mov
add
mov
xchg
mov
push
push
enter
cld
xor
xorl
xchg
mov
xlat
mov
cmpsb
inc
test
push
aad
xchg
xor
pop
in
cmp
test
sub
jae
mov
push
add
and
pusha
lahf
or
mov
sbb
out
fcompl
add
mov
sbb
mov
and
and
cwtl
pop
fildll
dec
mov
mov
xor
mov
sahf
sub
mov
jne
loop
jl
or
xor
inc
out
out
hlt
insb
jp
int
iret
xor
fnstsw
add
scas
inc
cmpsb
call
js
cmc
jmp
lds
adc
outsb
int3
int3
lret
xlat
in
jns
push
add
lock
ss
xchg
sub
xchg
or
lret
mov
adc
and
sbb
sbb
cmp
sahf
add
inc
push
jno
xchg
call
gs
mov
pop
lock
not
jae
mov
pushf
xchg
inc
setno
cmpl
cmp
pop
movsl
adc
push
out
sbb
push
pop
imul
fbstp
inc
imul
fsts
lods
test
xlat
inc
ror
mov
cmp
add
xor
sahf
push
cmc
gs
push
pusha
stos
and
hlt
lcall
jns
push
lods
cmpl
out
push
ss
xor
test
lcall
jmp
mov
pop
xor
add
pop
outsl
xchg
or
lea
inc
push
in
repnz
test
out
stos
jmp
pop
mov
jae
mov
sbb
cmp
daa
mov
faddl
shl
cli
pop
mov
sub
fwait
in
xor
mov
mov
jo
aam
pop
outsb
sub
incb
xchg
les
out
and
and
jns
mov
add
loopne
int3
ljmp
sbb
dec
jne
sbb
add
test
les
mov
mov
lret
ret
mov
or
pop
mov
dec
add
ficompl
jne
fs
in
mov
dec
sbb
mov
jns
pop
cmp
sahf
aaa
inc
scas
cmp
sbb
mov
mov
mov
fisubs
xchg
and
inc
mov
das
xor
pop
pop
in
jo
in
ret
iret
popa
mov
repnz
rcrl
icebp
xchg
dec
xchg
popf
ret
dec
fwait
imul
inc
repnz
mul
mov
xchg
add
inc
mov
out
ret
add
pop
pcmpgtb
test
mov
fnsetpm(287
sbb
idivb
into
je
insl
xor
loop
cmp
testb
cli
fwait
out
jb
jb
in
mov
xchg
and
shr
lock
and
cmp
stc
inc
mov
mov
mov
push
cs
xchg
lcall
inc
inc
xlat
mov
popa
iret
scas
enter
sub
push
mov
mov
in
std
jecxz
in
popf
dec
adc
pop
jno
inc
pop
out
cmp
dec
pop
scas
and
cmp
popa
add
sbb
adc
loope
cmpsl
aaa
adc
adc
xor
enter
inc
loope
loopne
xor
push
xor
inc
xor
push
out
and
fistps
fwait
lret
jecxz
cmp
xor
movsl
lock
cmovne
and
pop
or
inc
nop
mov
inc
loope
rorl
movsb
ja
push
jno
mov
aam
cmpsl
loopne
cmp
out
adc
sbb
mov
dec
aaa
ja
mov
mov
aam
dec
pop
mov
adc
xor
add
mov
rcr
push
sub
dec
mov
andl
sub
inc
push
add
push
lea
xor
loope
fnstenv
jecxz
inc
mov
inc
ret
rcrb
es
ljmp
lds
sub
inc
aad
inc
repz
pop
or
xor
les
pop
lea
popa
dec
test
lret
or
pusha
cs
clc
cld
add
xor
inc
inc
mov
xchg
xchg
pop
dec
cmp
mov
sahf
jne
aas
or
add
sub
dec
leave
push
dec
cs
test
push
xor
mov
ss
mov
jecxz
not
dec
push
dec
pop
fsubrl
lea
mov
inc
lds
popa
ds
idivl
and
add
sbb
sbb
mov
inc
push
fs
pop
xchg
fcompl
fwait
shl
mov
mov
repz
adc
aam
popa
icebp
dec
cmp
xor
adcl
pop
ror
daa
push
xchg
imul
adc
push
sarl
in
cmp
ret
test
int3
mov
inc
push
jle
mov
add
mov
mov
test
sbb
test
enter
out
xor
adc
dec
pop
mov
test
jle
outsb
sahf
mov
or
jle
aam
sub
fwait
cmpsl
stos
shrl
adc
adc
std
lret
mov
mov
pushf
cmp
push
push
mov
out
cmp
rclb
lret
stos
xchg
cmc
out
jge
in
jp
mov
cmp
sub
inc
and
outsb
xor
mov
push
sarb
outsb
push
jg
adc
push
cmpsl
jns
sbb
cltd
pop
stos
mov
dec
cmc
mov
pop
jle
je
xchg
adc
dec
insb
incl
cmp
inc
xchg
sbb
sub
hlt
pop
sub
shr
mov
push
xor
lea
mov
daa
out
jbe
push
pop
dec
xlat
lret
ret
pushf
mov
inc
iret
ljmp
pop
loop
jns
dec
dec
or
aaa
jecxz
pop
sub
addl
xchg
popf
or
xchg
mov
pop
add
xchg
loop
jge
fs
jmp
popa
popf
sbb
mov
cli
and
aam
lcall
fwait
in
and
xchg
jecxz
jo
outsl
fisttpl
mov
pop
insl
les
pop
jg
fmuls
jmp
mulb
imul
aad
loope
lods
push
adc
data16
rorb
ret
add
push
add
mov
lds
fsts
aad
cmpsl
into
fdivl
inc
fdivl
mov
mov
popf
or
lret
jnp
les
mov
inc
in
push
push
outsl
inc
or
xchg
xchg
jmp
cmpsb
or
lret
adc
in
repnz
xor
or
push
lock
movsb
cmp
je
add
les
mov
mov
add
rcrb
mov
std
or
push
jp
cmp
xchg
sahf
es
sub
pop
add
push
gs
jp
push
add
iret
sub
jno
jne
loopne
sub
fstps
inc
dec
lods
xchg
out
adc
cmp
ret
and
jmp
sahf
pusha
mov
push
stc
pop
lcall
jge
jne
or
fimull
sub
iret
mov
rclb
test
mov
mov
scas
roll
jb
out
add
push
scas
push
inc
lahf
dec
test
cwtl
jg
sti
xchg
orb
or
das
inc
dec
les
sbb
in
idivl
sub
add
adc
sbb
push
xchg
cmp
xchg
dec
xchg
scas
add
call
cwtl
push
or
addr16
popf
imulb
cmp
cli
push
inc
shlb
or
adc
mov
xchg
inc
hlt
adc
cmc
into
hlt
addr16
mov
jnp
fmuls
and
mov
lds
fsubl
jmp
sarb
mov
out
mov
mov
push
push
pop
or
cmpsl
xchg
mov
mov
sub
addb
jl
hlt
pop
jp
je
repnz
lods
lahf
outsl
jns
jl
or
xchg
pop
cmp
mov
or
xchg
loope
in
rcrb
lcall
js,pt
notl
fcomp
ss
cmp
adc
dec
xchg
popa
xchg
mov
leave
lret
movl
jle
sbb
cld
sbb
gs
mull
fstps
stos
inc
adc
push
imul
xchg
imul
mov
loop
jnp
push
xchg
sbb
push
fistpll
popf
cld
icebp
xlat
or
adc
pop
std
mov
sbb
js
xor
pop
stc
call
imul
cmp
mov
push
xchg
popf
mov
pop
cs
xor
xchg
dec
fnstsw
jnp
out
ret
xor
outsl
lret
cmp
inc
fcmovne
sub
pop
repnz
pop
mov
cs
in
pop
cltd
pop
cwtl
cmp
xor
icebp
fldl
mov
out
sbb
jbe
fcompl
in
scas
add
sbb
adc
jl
and
fidivs
mov
in
out
fwait
xchg
lods
cwtl
or
xor
push
xchg
rclb
in
inc
sbb
shld
lock
or
je
ret
sub
xchg
cli
jae
add
in
insb
or
push
mov
jno
dec
inc
dec
mov
shrl
inc
bound
stc
shl
inc
lahf
or
mov
insl
sub
sahf
mov
les
call
in
sub
jbe
ja
push
js
insl
bswap
movsb
scas
or
ds
inc
add
and
test
aad
std
fsubr
repz
sbb
lret
sub
in
push
jbe
orb
addl
mov
jl
out
pop
lahf
sbb
sub
cltd
pop
imul
inc
insb
aam
dec
sbb
test
data16
outsb
ljmp
bnd
dec
jp
je
cmpsl
mov
outsb
lods
leave
jmp
or
or
fists
ss
lcall
xor
xchg
jg
popf
lcall
sub
pop
sbbb
xchg
arpl
and
xchg
push
mov
inc
mov
sahf
call
xor
mov
in
ja
pop
add
sub
lret
movsl
xchg
sbb
cmp
addr16
ds
jbe
in
xchg
out
nop
and
sahf
jns
jl
jnp
cmpsb
fnstcw
ret
sbbb
xchg
iret
fcmovnbe
out
insl
jo
es
push
sub
mov
pop
int
cmpsb
outsb
imul
mov
push
mov
fbstp
push
scas
and
stos
stos
out
pop
ret
xor
mov
xchg
dec
push
adc
sub
movsl
or
das
cwtl
insl
pop
repz
dec
repnz
sub
sbb
xchg
bound
insl
push
loope
dec
cmp
ljmp
push
psubsw
jl
cmp
mov
jnp
push
cmp
subb
xchg
pushf
inc
addr16
xchg
fbld
dec
fildll
lcall
cltd
movsb
pushf
sbb
repz
cmp
jnp
imul
rorl
fstpl
xor
es
div
and
cmp
jnp
mov
aaa
stc
push
add
mov
icebp
adc
push
mov
push
jbe
add
inc
sti
stos
jae
adcl
int3
pop
int3
jno
lods
add
cmc
test
lcall
xor
dec
jle
or
or
and
mov
pop
pop
xchg
leave
push
sbb
insb
leave
sbb
dec
mov
push
lea
outsb
xchg
cltd
xchg
outsb
out
jno
xchg
pushf
adc
pop
mov
fadds
xor
xchg
jmp
pop
lahf
dec
pop
xor
push
xor
mov
daa
rcrl
jo
orb
es
pop
sub
adc
sub
cmp
lret
xchg
or
adc
aas
outsb
cmpsb
jo
stc
sbb
ja
xchg
popa
clc
xor
sti
xor
cmc
bnd
and
les
mov
imul
int
pusha
lock
mov
and
ss
mov
pushw
push
xchg
repnz
jbe
push
mov
lea
xchg
inc
adc
jo
subl
and
xor
lahf
add
repnz
lahf
xor
popf
je
fptan
pop
pop
mov
mov
ds
into
inc
into
add
jnp
jg
cmp
add
or
icebp
mov
pop
shlb
out
dec
push
fists
and
ret
test
adc
ja
xchg
insl
dec
je
ds
pop
push
xor
out
outsl
in
dec
push
adc
js
pusha
sbb
test
es
orb
adc
pop
into
adc
rcrl
stos
dec
fdivrl
std
mov
xchg
jo
in
pop
cmp
push
rorb
cmp
jae
pop
or
daa
loop
mov
or
inc
inc
and
sahf
dec
mov
and
mov
or
and
mov
cmp
fistpll
shrb
sbb
cld
add
aas
dec
pusha
pop
push
pusha
rol
or
or
or
adc
dec
mov
add
and
ja
es
and
ja
xchg
fldcw
in
xor
clc
cmp
fldenv
push
and
cmp
mov
jg
sbb
pop
push
stc
lcall
dec
cmp
xchg
push
pop
push
sub
and
mov
lods
cli
or
nop
dec
inc
sbb
sahf
jne
cli
xchg
or
cmc
test
dec
dec
xor
subb
cmpsb
aam
push
mov
xchg
mov
jb
ret
leave
gs
lods
push
push
pusha
iret
rolb
hlt
jmp
and
and
pusha
mov
push
push
cld
movb
bound
in
jmp
pop
mov
in
add
mulb
push
adc
or
ja
jo
cmp
xor
and
jae
test
inc
imul
mov
lea
or
push
xchg
cmp
pushf
xchg
mov
fldl
fldcw
dec
jno
xchg
add
xor
cmc
cmp
mov
loop
xor
idivb
bound
mov
out
fists
lock
cmp
outsb
fs
pop
ja
xor
xor
add
adc
dec
pop
mov
iret
das
ret
cmp
adc
inc
xchg
mov
mov
push
cmp
add
pushf
mov
mov
or
repnz
push
pop
popa
into
in
out
daa
jg
xor
mov
mov
mov
adc
popa
hlt
xorl
ljmp
repz
and
inc
flds
arpl
sbb
rorl
mov
lods
scas
xor
or
mov
int3
inc
jle
sbb
mov
pop
std
xchg
mov
loop
fucomp
ja
mov
stos
inc
xchg
jo
sub
inc
iret
push
addr16
mov
or
jmp
shll
or
mov
mov
xchg
lea
jg
repnz
js
out
mov
mov
jo
out
hlt
loope
popa
inc
jle
hlt
add
or
mov
mov
inc
jge
negl
jae
pop
fstpt
lods
pop
into
das
push
fistl
aaa
xor
das
hlt
das
xchg
cli
push
imul
jle
shrl
inc
jnp
xlat
imul
dec
test
repz
xchg
push
jl
add
rcrb
int3
in
daa
ret
adc
adc
fsubrl
xchg
mulps
rolb
mov
clc
aaa
stos
test
std
or
ficomps
jno
sub
push
std
pop
add
adc
icebp
lret
xchg
mov
pop
push
outsl
inc
xchg
and
adc
add
inc
push
std
cmp
sbb
mov
sarl
fisubl
loope
enter
jns
out
mov
js
inc
lea
ss
xchg
mov
fwait
iret
shrl
push
add
sub
cltd
sbb
mov
das
movsl
int3
out
adc
jle
loopne
insl
lcall
rcrl
stc
jp
pop
and
lahf
insb
fs
xchg
mov
lds
add
lods
jno
fidivl
inc
lds
mov
jmp
pop
push
aam
lock
jnp
sbb
pop
shll
pushf
or
clc
xchg
in
pusha
int3
push
ror
cmp
in
add
sarb
lods
jae
movsl
and
mov
lock
cmpsb
into
inc
inc
call
sub
jp
mov
ss
mov
adc
and
jle
or
push
pop
sub
adc
test
push
fsubr
ss
add
xor
cld
push
push
mov
inc
mov
in
mov
and
cmp
push
les
lcall
and
clc
xchg
popa
mov
inc
xchg
data16
xor
adc
dec
shlb
ffreep
out
in
mov
inc
cmp
dec
jp
rcrl
xchg
insl
sub
add
adc
push
sbb
jno
fistpl
lods
out
and
and
cmp
and
jbe
xchg
dec
dec
loope
jnp
mov
pop
cmp
mov
mov
cmpsl
ret
jmp
pop
lock
call
movsl
insl
push
cmpsl
sub
ljmp
lods
push
popa
fisubs
jmp
and
mov
test
jo
push
xchg
dec
pushf
pop
fldt
jbe
hlt
xchg
mov
cmp
xchg
or
jno
fnsave
imul
mov
mov
lea
xchg
stos
mov
aad
xor
mov
mov
das
mov
mov
cmpsb
inc
div
push
aam
cmc
pop
pop
enter
sahf
pop
cld
jns
sbb
insl
adc
dec
imul
cmpsb
dec
cmpsb
sub
mov
bound
inc
and
pop
lret
insb
lret
ret
xor
fisttps
shl
outsb
mov
xor
cmpsl
sub
add
or
mov
loope
dec
jae
jnp
int3
sbb
rorl
xchg
mov
aam
add
cmp
xor
out
test
lret
and
mov
pop
mov
xchg
xor
jle
inc
xchg
and
rclb
cltd
ret
and
pop
loop
rorb
lods
lcall
fstpt
into
jecxz
xor
les
dec
cmp
cmpl
pop
iret
fsts
push
arpl
jns
pop
push
adc
idivb
fsubl
and
sbb
sub
loope
lret
cmp
jle
scas
xchg
ds
ret
call
jp
inc
cmp
push
mov
rorb
push
mov
xchg
adc
jnp
pop
and
negb
iret
test
aam
bound
sahf
xor
jbe
dec
les
orl
xor
sarl
sbb
roll
fdivl
push
xor
sahf
dec
mov
xchg
imul
or
and
sar
inc
test
inc
std
cmp
xor
std
faddp
sti
adc
stos
push
jecxz
call
imul
pop
cli
iret
mov
pop
pop
add
movsb
movsb
cld
call
out
lret
push
mov
jae
andb
ret
es
push
adc
cmpsb
call
mov
mov
add
iret
ret
jmp
int
inc
lds
fsqrt
xor
stos
cld
inc
ja
test
sbb
mov
in
adcl
push
dec
ds
xor
mov
sarb
inc
cmp
push
mov
sub
push
mov
stos
jge
mov
in
and
popf
subl
lret
ret
jg
push
ret
cmp
pop
adc
es
xor
mov
mov
jb
dec
outsb
xchg
pop
inc
add
sbb
js
cmp
int3
xor
cmpl
jg,pt
push
xchg
dec
mov
ret
push
push
les
testb
jbe
fsubrs
ret
cltd
cltd
repz
xchg
popl
xchg
xchg
inc
repz
stos
push
xlat
cs
mov
loope
inc
sbb
popl
sbb
lret
cwtl
dec
sahf
jmp
das
bound
fcmovnb
push
and
sbb
xchg
clc
push
outsb
fsubrl
cmp
xor
jg
pop
push
xchg
jp
xorb
mov
jns
cmp
xchg
push
dec
or
mov
or
out
xor
dec
sub
mov
pop
mov
aam
imul
and
popa
jle
mov
xchg
mov
cs
add
aad
ucomiss
dec
xchg
mov
pop
inc
mov
or
shlb
sarb
mov
mov
xchg
xor
cmpsl
clc
ss
pop
data16
insb
clc
add
sbb
clc
out
jbe
sbb
adc
fidivrs
sub
test
sbb
cmp
or
ror
fimull
lret
jae
jge
rclb
pop
leave
in
js
mov
cmp
leave
fildll
lahf
xorb
or
cltd
ret
cmp
pop
pop
stos
xor
or
jp
mov
mov
jecxz
das
addl
mov
jp
jmp
fimuls
ljmp
sti
ret
jg
xor
rcr
popa
les
negl
or
adcb
jg
inc
inc
aas
icebp
imul
pop
jp
pop
dec
mov
xchg
or
and
scas
hlt
push
add
xor
dec
outsl
or
ret
adc
sbb
leave
add
dec
xchg
add
movsb
mov
mov
push
ljmp
dec
lds
faddl
sub
jl
imul
cmp
and
into
in
or
in
xor
lahf
loope
jge
cmp
lret
push
es
into
push
pop
push
mov
fucomp
pop
pop
or
jo
adc
add
mov
pop
in
pop
aaa
ljmp
sbb
and
mov
in
leave
pop
sub
int3
inc
popa
add
std
xor
push
adc
jb
mov
sbb
push
jmp
xchg
sahf
das
jg
pushf
sbb
mov
and
cmp
lods
mov
insb
clc
fsub
mov
sub
dec
ja
add
movsl
adc
scas
push
rcl
shrl
mov
pop
lret
mov
loop
mov
nop
push
mov
or
dec
dec
enter
dec
fs
dec
stos
aad
in
js
cmp
pop
or
cwtl
sbb
ret
pop
mov
in
push
sbb
mov
jecxz
cmp
in
movsl
jae
loope
push
mov
data16
jne
xor
insl
mov
cs
xor
int3
jmp
bound
push
movsb
sub
insl
aad
ja
mov
ja
in
adc
fildl
sbb
mov
and
ret
add
mov
mov
cmc
sahf
push
mov
inc
dec
jecxz
cmp
cmpps
mov
mov
mov
mov
add
stos
push
test
in
lock
hlt
repz
std
jg
int3
fs
setns
test
cmp
push
lods
test
dec
test
ret
ss
lods
shrb
mov
mov
xchg
add
arpl
lods
pop
mov
dec
jmp
jp
aam
add
adc
mov
and
cltd
mov
leave
out
fistl
scas
push
dec
push
sbb
je
call
ljmp
popa
push
mov
rcll
pop
enter
xchg
pushf
add
jo
call
ret
mov
pop
pop
mov
es
shll
add
cli
jmp
mov
nop
or
scas
sahf
loopne
adc
push
push
lds
lret
js
jg
mov
inc
mov
movsb
push
out
stos
sarl
loop
and
jns
push
xor
repnz
stc
sub
inc
in
sub
mov
mov
aad
sub
test
in
pop
sarb
fbld
adc
xlat
je
movsl
xchg
sbbb
pop
enter
push
adc
les
stc
cmpsb
notb
lds
outsb
mov
push
cmp
add
sbb
mull
shlb
mov
lcall
fisttpl
fidivl
cmpsl
imul
mov
fisubl
mov
cmp
fstl
mov
movsl
cs
push
sbb
pop
fnstenv
int3
je
adc
sub
imulb
rorb
cmp
lret
loope
cmp
into
inc
jp
jnp
jg
xor
scas
enter
ret
add
rclb
scas
scas
leave
and
pop
cmp
inc
imul
mov
movsl
dec
nop
cld
add
push
ss
icebp
in
repnz
mov
stc
cli
fwait
xchg
jmp
sub
sbb
aam
push
jns
cmpsb
movsb
in
frstor
and
adc
jne
aam
xchg
jne
inc
mov
xlat
sar
out
push
sarl
insl
int3
sbb
icebp
inc
aaa
push
xchg
adc
out
dec
xchg
inc
dec
loop
jno
xor
fsincos
shlb
pop
cli
or
int
jno
mov
and
sarl
decl
cmc
xor
xchg
ja
mov
fadds
aam
addr16
cmc
dec
bswap
pop
lea
out
fwait
xchg
leave
add
aad
rcll
ret
cld
aaa
rcl
rorl
push
add
paddsw
movsb
pop
jp
push
test
decl
xchg
ljmp
mov
sbb
fcomps
push
xchg
mov
pop
sub
rcrb
mov
mov
shrl
shrl
jmp
cmp
pop
jae
fiadds
hlt
fcmovbe
dec
push
mov
push
insl
outsb
sbbb
iret
gs
inc
add
sbb
jmp
std
fcoms
sub
sub
xchg
das
push
out
movsb
lock
stos
out
adc
jmp
mov
daa
jmp
sahf
fiadds
jno
cmp
pop
xchg
js
js
mov
or
mov
shl
push
xor
test
add
adc
out
jnp
cmp
shlb
js
lods
push
add
je
jge
lahf
ds
or
lahf
jnp
hlt
in
loopne
sbb
cmpsl
inc
xor
inc
cs
imul
imul
jmp
inc
jb
fstpl
jbe
mov
and
inc
pop
stc
cli
loop
addr16
lcall
adc
lods
cmpsl
arpl
rclb
notl
cli
mov
push
inc
pop
push
sbb
jecxz
imul
inc
popf
sbb
dec
push
mov
xchg
imul
sub
fst
mov
jb
cmpsl
imul
in
mov
jns
in
xchg
or
push
in
sub
jmp
dec
gs
lahf
mov
ds
push
pop
repz
mov
test
or
lea
mov
mov
hlt
xchg
mov
xor
pop
mov
sub
mov
movsb
jbe
add
loop
out
movsb
xchg
int3
lret
pop
das
adc
xchg
jb
lcall
imul
repnz
mov
and
xchg
jmp
pop
popl
xor
fisubrl
sarb
aad
mov
es
push
scas
cmpsb
sarb
sti
inc
iret
std
mov
mov
sbb
loope
shll
xchg
lret
lahf
test
mov
ja
outsl
in
xor
dec
gs
ret
inc
push
gs
fcomps
les
sbb
mov
push
sbb
icebp
fldl
mov
push
sub
les
xchg
xchg
mov
inc
fistl
int
or
inc
sbb
xchg
xor
pop
push
and
jmp
aas
push
pop
ja
jnp
sbb
adc
dec
cmp
test
cmpsl
jle
sahf
pushf
push
les
jle
daa
xchg
popa
fdivs
mov
mov
pusha
pop
or
xor
add
pop
xor
jg
ret
imul
iret
je
aad
enter
call
adc
sub
repz
shufps
jmp
sub
ss
rorl
pop
mov
movsb
ss
or
iret
pop
add
dec
jge
sub
mov
lret
mov
clc
and
push
xor
xchg
out
pop
outsl
jle
scas
adc
xchg
les
xor
sti
stos
movsl
inc
das
dec
xchg
push
frstor
lea
dec
bound
mov
je
lds
leave
repnz
insl
pop
or
sub
dec
xchg
rorl
mov
mov
inc
ss
and
jl
popf
popa
test
aad
sub
xor
sbb
lahf
push
insl
clc
dec
je
sbb
jo
scas
push
ret
dec
fimull
sbb
insb
nop
vphaddbq
jecxz
aam
xchg
xchg
or
jge
rcrl
jp
lret
test
loope
fdivl
fisubl
pop
add
pop
mov
push
sahf
push
pop
mov
mov
mov
fwait
push
jge
loope
movsb
sub
push
push
add
lahf
add
lret
push
shll
xor
sarb
loope
std
cmp
or
sbb
adc
leave
push
scas
fmuls
ret
cmp
dec
lret
add
mov
insb
out
dec
enter
lods
jmp
test
xor
outsb
sbb
push
out
jae
xor
imul
adc
jnp
push
jmp
mov
mov
jbe
mov
rclb
jl
mull
fmulp
jae
push
push
jp
pop
inc
shrl
int
mov
imul
std
cwtl
cmc
push
mov
aad
incb
jp
push
insl
push
mov
lods
pop
inc
lea
subl
jmp
fwait
mov
push
je
pop
inc
cli
xor
xchg
inc
sbb
daa
push
jmp
xor
sti
js
gs
stos
dec
xchg
pop
jne
pop
pop
xor
xor
jne
cli
sbb
push
test
int3
scas
mov
pop
daa
xor
xchg
fdivrl
dec
and
xor
hlt
fisubrl
jg
push
icebp
add
push
push
iret
sarl
mov
dec
xchg
pusha
xchg
mov
ret
outsl
lcall
sub
inc
push
inc
pop
mov
inc
jne
aaa
hlt
inc
pop
pop
iret
aad
imul
scas
push
mov
cmp
push
test
jbe,pn
and
or
and
xchg
fcmovb
mov
rolb
mov
mov
sbb
xchg
ret
outsl
imul
shll
sbb
xor
adc
sub
inc
repnz
arpl
mov
push
sub
mov
pop
sbb
sub
adc
mov
push
and
cmp
xor
fcmovbe
outsb
mov
and
mov
push
xor
dec
mov
pop
xchg
push
jecxz
pop
mov
pop
cmp
mov
sub
das
in
outsb
test
out
insl
pop
dec
jp
fs
xchg
adc
dec
roll
loopne
inc
repz
inc
pop
ret
popf
incl
pop
sub
sbb
in
ljmp
jmp
push
jmp
jecxz
jmp
push
outsb
ja
mov
gs
out
jge
xor
scas
xchg
push
dec
dec
push
and
mov
test
inc
jnp
jno
push
gs
dec
xlat
xor
lea
out
aam
sbb
out
js
or
push
jle
push
cli
cmp
fstl
mov
insl
outsl
std
outsb
leave
dec
sti
inc
xchg
out
sub
sub
outsl
enter
push
es
addr16
sar
push
fndisi(8087
xor
lret
xchg
rolb
lods
iret
mov
jmp
push
cmp
jo
cmpsl
test
mov
sahf
push
jnp
inc
or
xchg
ret
dec
fdiv
rcr
int
out
lahf
bound
mov
mov
fs
mov
xchg
xchg
subb
cmp
hlt
mov
outsl
xchg
rorb
push
lret
add
or
movsl
cmpsl
dec
fwait
rclb
mov
cmp
jge
and
in
cltd
into
dec
jae
mov
scas
int
xchg
das
fbld
add
jp
xchg
cltd
pop
push
sahf
call
jl
dec
sbb
fldenv
in
jmp
cmp
mov
push
lods
test
shrb
jg
nop
lea
icebp
shlb
cs
jns
and
sti
jl
cmp
dec
subb
mov
rorb
jg
inc
inc
pop
das
mov
adc
jg
fiaddl
and
aas
or
and
idiv
adc
movb
daa
mov
xchg
in
jnp
mov
pushf
or
adc
mov
dec
dec
mov
mov
add
les
jmp
ljmp
sub
lcall
jg
icebp
pop
into
aad
xor
pop
add
add
jecxz
or
push
repz
insb
pop
aas
leave
repz
sti
push
out
push
mov
adc
xor
ret
pusha
jnp
sbb
jge
movsl
sbb
shlb
sub
push
movsl
adc
xchg
sbb
push
aad
jns
pop
or
mov
mov
in
and
mov
lds
stos
mov
or
pop
out
mov
or
outsb
or
mov
lds
push
add
sbb
repz
jmp
jbe
xchg
out
push
fcmove
dec
fs
push
leave
jae
nop
cld
into
cli
jg
jmp
xor
incb
dec
icebp
inc
fnstcw
mov
xlat
insb
fs
push
iret
daa
rorb
leave
adcb
movsl
push
jmp
xor
lods
pop
faddl
jns
out
mov
or
fstps
push
push
inc
jnp
dec
les
cmp
cltd
int
std
and
add
adc
dec
xchg
icebp
je
mov
in
aad
scas
mov
rorb
cmpsb
or
sub
sbb
jae
add
inc
mov
bound
push
leave
mov
jecxz
jp
cmp
sub
cmp
sub
cmp
add
aam
sbb
lea
ja
cmpsb
mov
xor
sub
sbb
std
fwait
sub
add
add
pop
xchg
add
cmp
in
pop
or
dec
call
dec
jo
leave
ret
lret
ss
mov
lcall
adc
scas
daa
push
enter
cmpsl
shrb
cmpsl
pop
pop
xor
xchg
adc
adc
roll
int
negb
adc
loopne
and
pop
sbb
lods
arpl
and
repnz
ficomps
sub
repnz
mov
xchg
jp
stos
pop
jl
test
sbb
or
stc
fwait
scas
rcr
callw
mov
js
xor
cld
fistl
xor
faddl
loope
cmp
push
xor
loop
and
add
dec
push
xor
xlat
fnstcw
sbb
mov
jbe
enter
int
xor
out
or
loope
sub
jno
lods
cmpsb
mov
mov
mov
sub
mov
nop
sbb
mov
sub
xor
and
xchg
je
fdivrs
push
fwait
scas
cmp
cwtl
pop
aam
pop
xchg
xor
xchg
in
insl
pop
and
jmp
push
sub
insl
sub
fistpl
lret
loopne
stos
and
sub
add
lock
and
loope
mov
ret
pusha
mov
jbe
aas
in
lods
daa
xor
mov
xchg
pop
cmp
clc
or
fimull
add
jmp
mov
lods
mov
push
dec
divl
dec
stos
add
out
in
jne
mov
jmp
movsb
fiaddl
mov
push
jb
std
cmp
div
loopne
mov
sub
scas
adc
dec
lret
mov
jg
int3
cmp
cmpsl
xor
sbbb
aas
add
sbb
jp
ja
inc
xchg
pop
rolb
lret
pushf
ret
adc
mov
inc
out
stc
adc
int
cwtl
push
scas
inc
sbb
inc
mov
lea
cmc
push
push
add
pop
xor
je
sti
test
push
or
clc
ss
xor
fwait
or
push
movsl
ja
std
test
lock
pop
pop
mov
into
stos
add
mov
mov
shl
inc
xchg
mov
dec
jmp
mov
aaa
cmpsl
mov
mov
jmp
sbb
nop
jecxz
addl
cmp
or
add
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
enter
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
cmp
jae
gs
bound
fs
je
je
or
and
and
insl
gs
jb
jae
data16
push
imul
dec
jns
outsl
outsl
insb
inc
jo
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
jb
imul
xor
xor
xor
or
and
and
gs
xor
and
ds
cmp
gs
jb
jo
imul
insb
imul
and
arpl
jo
imul
gs
fs
jb
jo
imul
and
cmp
gs
outsb
fs
arpl
or
and
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
cmp
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
das
ds
and
and
fs
outsb
fs
je
jae
gs
bound
or
cmp
fs
outsb
fs
arpl
or
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
arpl
imul
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
and
gs
gs
gs
js
arpl
imul
insb
or
and
and
and
and
and
and
insb
gs
insb
cmp
outsb
jbe
imul
or
and
and
and
and
and
and
jne
inc
arpl
jae
cmp
jae
and
ds
and
and
and
cmp
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
jae
arpl
imul
and
je
jne
je
outsb
outsw
ds
jae
gs
bound
