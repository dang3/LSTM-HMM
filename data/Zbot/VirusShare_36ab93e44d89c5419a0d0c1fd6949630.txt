rcr
xchg
cmpsl
pusha
rol
jg
fld
cmp
lods
gs
out
add
xchg
roll
or
sub
add
popf
in
hlt
or
jge
mov
jmp
mov
dec
mov
lret
gs
jae,pt
fcom
and
inc
int3
sbb
rcl
sub
mov
push
jmp
addr16
sbb
push
cmpsb
movsl
out
jns
pop
arpl
inc
mov
aaa
xchg
mov
icebp
call
mov
sahf
xchg
enter
push
add
mov
popf
scas
ds
dec
stos
pop
or
enter
loope
cmpsb
movsl
out
jns
pop
arpl
inc
mov
aaa
xchg
mov
icebp
call
mov
shlb
push
add
jle
dec
sarb
dec
stos
pop
or
sbb
cltd
inc
ret
jae
or
mov
add
cld
add
arpl
out
ja
cltd
pop
arpl
inc
enter
xchg
dec
rolb
loop
stc
and
adc
fbstp
lea
lahf
pop
pop
daa
or
sbb
mov
push
mov
mov
inc
mov
adc
inc
aad
dec
loop
push
xchg
xchg
xchg
inc
ret
pop
pop
fstpt
xor
dec
insl
dec
mov
into
push
test
cwtl
fcomip
into
push
nop
insl
adc
cmp
hlt
repnz
dec
rolb
mov
int3
jb
fildl
dec
imul
sar
inc
call
push
dec
add
push
test
and
setg
mov
pop
sub
arpl
fstpl
repnz
or
gs
testb
les
clc
xchg
fcoml
inc
mov
in
int
cld
fstpl
mov
jns
jecxz
sti
mov
out
lahf
icebp
stc
adc
dec
adc
or
loopne
cmp
arpl
cwtl
fisttpll
dec
in
rorb
lds
loop
lahf
pop
fiaddl
shll
sub
loope
or
out
dec
outsb
in
int
add
pusha
jmp
pop
jne
rorb
push
js
ud1
test
in
les
adc
mov
les
aas
mov
pop
shrl
cs
add
mov
adc
loop,pn
sub
and
nop
mulb
xchg
jmp
leave
in
decl
mov
add
cwtl
lock
out
in
pop
adc
xchg
sti
xorl
shll
adc
jecxz
mov
shlb
es
loope
cld
shr
or
loope
push
mov
daa
out
jg
pop
or
push
lds
sub
adc
push
mov
push
fcom
js
push
lahf
xor
dec
mov
pop
sub
and
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
test
je
push
call
mov
mov
movzbl
movl
call
mov
test
je
push
push
call
mov
or
mov
mov
movzbl
mov
mov
mov
sub
mov
movzbl
or
sub
mov
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
or
mov
mov
or
xor
mov
call
movzwl
cmp
je
push
push
push
push
call
cmp
je
push
push
push
call
mov
shl
mov
movzbl
or
or
movzwl
mov
xor
xor
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzwl
push
call
mov
mov
mov
mov
movzwl
mov
and
mov
imul
movzwl
movzbl
shl
mov
mov
mov
xor
sub
mov
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
imul
mov
mov
imul
imul
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
or
movzbl
mov
shr
mov
mov
call
mov
sub
movzbl
mov
or
movzbl
mov
xor
sub
mov
mov
mov
sub
mov
mov
shl
mov
mov
or
movzwl
xor
mov
mov
or
xor
mov
mov
sub
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
movzwl
mov
movzbl
mov
mov
and
add
mov
mov
sub
mov
movl
mov
imul
mov
movzbl
mov
mov
mov
test
je
movzwl
movzwl
xor
mov
mov
and
mov
cmpl
jge
mov
xor
movzwl
xor
mov
movw
mov
movzwl
xor
mov
movzbl
mov
mov
mov
movb
mov
xor
mov
mov
add
mov
movzwl
or
mov
movw
mov
add
mov
movzbl
mov
movw
movw
mov
sub
mov
movzbl
mov
jmp
movw
movb
movzbl
shl
mov
movzwl
and
movzwl
imul
mov
movzbl
shl
mov
movzwl
add
mov
mov
add
mov
mov
movw
movzbl
shl
mov
movb
movw
mov
add
movzbl
add
mov
mov
mov
mov
mov
movzwl
mov
movzwl
and
movzwl
imul
mov
movl
movw
movzbl
movzwl
xor
mov
mov
mov
cmp
jne
movzwl
movzbl
xor
movzwl
or
mov
movw
mov
mov
cmp
jne
movzwl
movzbl
add
mov
mov
movzwl
and
xor
mov
movl
movzwl
mov
movzwl
xor
mov
mov
test
je
movzbl
mov
movzwl
sub
mov
mov
mov
sub
mov
movw
mov
add
mov
movzwl
imul
mov
mov
add
movzbl
add
mov
movw
jmp
movw
movw
movzwl
or
mov
movzbl
mov
mov
mov
movzbl
sub
add
mov
movzwl
sub
mov
mov
imul
add
mov
mov
add
mov
mov
movzwl
movzbl
imul
mov
mov
movzwl
sub
sub
mov
mov
add
mov
mov
and
movzwl
add
mov
movzwl
movzbl
and
movzwl
imul
mov
mov
sub
mov
movzwl
xor
add
mov
jmp
movzwl
shl
mov
movzbl
movzwl
and
imul
mov
mov
xor
mov
movzbl
xor
or
mov
mov
sub
shr
mov
movzbl
shl
mov
movzbl
sub
mov
movzwl
xor
movzwl
sub
mov
movzbl
and
movzwl
and
mov
movzbl
imul
mov
movzwl
sub
mov
movzbl
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
xor
mov
mov
mov
movl
movl
mov
shl
mov
movl
mov
xor
movzwl
mov
mov
movzwl
sub
mov
mov
add
movzbl
mov
imul
mov
movl
movl
movzwl
and
add
mov
mov
add
mov
mov
mov
mov
mov
mov
test
je
mov
movzwl
mov
movzbl
mov
mov
mov
mov
mov
and
mov
mov
movzwl
mov
add
mov
mov
xor
mov
mov
add
mov
mov
sub
movzwl
movl
mov
or
mov
mov
sub
mov
mov
add
mov
mov
add
movzwl
jmp
mov
sub
mov
movzwl
shl
mov
movzwl
movzwl
imul
movzwl
add
mov
movl
mov
mov
movzwl
sub
movzbl
movzwl
mov
movzwl
add
mov
mov
mov
mov
mov
mov
movzwl
imul
movzbl
movzwl
mov
movl
mov
mov
imul
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
push
call
mov
shl
mov
movzbl
mov
mov
xor
sub
mov
mov
imul
movzwl
add
mov
mov
xor
mov
movzbl
or
add
mov
movzbl
and
movzbl
imul
movzwl
movb
movzwl
or
mov
push
push
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
or
movzwl
mov
xor
mov
add
mov
mov
and
sub
mov
mov
or
mov
movl
mov
xor
or
mov
mov
imul
sub
movzwl
mov
mov
mov
mov
movzwl
xor
or
mov
mov
add
mov
mov
and
or
mov
mov
imul
mov
movzbl
movzbl
movl
movzwl
imul
mov
add
mov
movb
mov
test
je
mov
xor
mov
mov
sub
mov
mov
movzbl
mov
mov
mov
sub
mov
mov
or
mov
mov
add
mov
mov
and
imul
mov
mov
add
mov
movb
mov
sub
mov
movb
movzbl
and
movzbl
xor
mov
movb
jmp
mov
add
movzwl
sub
movzwl
mov
mov
and
mov
mov
mov
movzwl
sub
mov
movzwl
movzbl
and
mov
mov
or
imul
mov
mov
and
xor
mov
mov
or
or
mov
mov
mov
mov
or
mov
sub
mov
mov
sub
mov
mov
movzbl
add
mov
movw
movzwl
and
mov
mov
and
mov
push
call
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
mov
add
mov
mov
imul
sub
movb
movzbl
mov
movzwl
mov
mov
mov
mov
mov
and
mov
imul
mov
mov
add
mov
mov
or
add
mov
movw
movb
mov
mov
mov
sub
mov
movw
movzwl
mov
mov
and
mov
movl
mov
xor
or
mov
mov
movzwl
xor
movzbl
sub
mov
movzbl
and
and
mov
movl
movzbl
sub
mov
mov
mov
mov
test
je
movzbl
sub
mov
mov
add
mov
movzwl
add
mov
mov
mov
xor
mov
mov
movzwl
mov
mov
sub
mov
mov
mov
xor
mov
mov
mov
and
sub
mov
mov
xor
imul
mov
mov
imul
mov
mov
add
mov
mov
and
sub
mov
mov
or
imul
mov
mov
movzbl
or
mov
mov
sub
mov
movzwl
imul
movzwl
sub
mov
mov
xor
mov
jmp
movzbl
or
movzbl
imul
mov
mov
and
mov
mov
mov
movzbl
or
movzbl
add
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
and
mov
mov
shl
mov
movzbl
xor
mov
movzbl
shr
mov
mov
add
add
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
add
mov
mov
mov
mov
sub
mov
call
movzwl
mov
shl
mov
mov
mov
mov
and
and
mov
mov
movzwl
mov
shr
mov
mov
add
mov
mov
mov
movzbl
mov
movzbl
mov
mov
or
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzbl
mov
push
push
call
mov
or
sub
mov
mov
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
call
mov
mov
shr
mov
movzwl
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
xor
and
movzbl
mov
or
movzbl
mov
shl
mov
cmp
je
push
movzwl
push
push
push
call
mov
movzwl
mov
or
mov
sub
movzbl
mov
imul
mov
movl
cmp
je
push
movzwl
push
call
mov
movzbl
cmpw
je
push
call
mov
add
movzwl
cmpw
je
push
call
mov
add
sub
mov
mov
xor
imul
mov
mov
imul
movzbl
mov
xor
mov
movzwl
mov
cmpw
je
push
push
movzwl
push
movzwl
push
call
mov
mov
mov
imul
movzwl
mov
movzwl
and
movzwl
add
movzwl
mov
mov
mov
mov
mov
movzwl
shl
movzwl
mov
test
je
push
movzwl
push
call
mov
test
je
push
push
movzwl
push
call
mov
sub
movzwl
mov
and
and
mov
mov
movzwl
sub
mov
mov
mov
mov
or
mov
movzwl
and
movzwl
movzwl
movzwl
mov
sub
mov
mov
mov
movzwl
cmp
je
movzwl
add
mov
mov
sub
mov
jmp
mov
mov
mov
mov
movzbl
mov
movzbl
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
test
je
mov
or
movzwl
sub
movzwl
mov
xor
imul
movzbl
mov
mov
add
mov
movzwl
and
movzwl
movl
mov
movzwl
and
mov
mov
or
and
movzbl
mov
imul
mov
mov
movzbl
test
je
mov
mov
mov
shl
mov
shr
or
mov
mov
add
mov
mov
movzbl
xor
mov
add
mov
mov
movzwl
or
movzwl
xor
movzwl
mov
add
mov
jmp
cmpl
jne
mov
mov
sub
mov
mov
mov
mov
add
mov
cmpb
je
push
push
push
call
cmpw
je
push
push
push
call
mov
xor
movzwl
imul
mov
mov
movzbl
mov
and
movzwl
mov
mov
movzwl
mov
movzwl
mov
mov
sub
mov
mov
imul
mov
mov
mov
mov
mov
add
mov
movzwl
xor
movzbl
xor
mov
movzbl
shl
mov
mov
add
movzbl
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
movzwl
mov
and
mov
mov
add
mov
mov
sub
sub
movzbl
mov
sub
mov
jmp
movzwl
shl
movzwl
mov
sub
movzwl
add
movzwl
mov
cmpw
je
movzbl
push
push
call
mov
and
mov
mov
movzwl
xor
mov
add
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
movzbl
mov
push
call
mov
xor
or
movzbl
mov
shl
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
add
mov
push
call
mov
xor
mov
imul
mov
movzwl
and
movzwl
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzwl
mov
shl
movzwl
mov
push
push
call
mov
shr
mov
mov
sub
movzwl
mov
and
movzbl
add
movzwl
mov
xor
xor
mov
mov
mov
sub
movzwl
mov
add
movzwl
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
and
mov
movb
movw
call
mov
mov
xor
mov
sub
movzbl
movl
mov
sub
mov
mov
xor
movzbl
or
mov
mov
and
mov
mov
add
mov
push
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
movzwl
mov
mov
mov
mov
movzwl
or
xor
mov
push
push
push
call
mov
movzwl
mov
sub
mov
mov
add
mov
movzwl
xor
movzwl
sub
mov
movw
mov
imul
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
sub
movzbl
mov
mov
add
mov
mov
or
xor
mov
movzwl
add
mov
movzwl
imul
movzwl
imul
mov
movzwl
and
movzwl
sub
mov
mov
imul
mov
mov
add
mov
movzwl
mov
mov
mov
movl
movzbl
add
mov
movzwl
movzbl
movzwl
add
mov
movl
mov
xor
mov
movzbl
movzwl
sub
sub
movzbl
mov
mov
movzwl
add
mov
movzbl
add
mov
movl
mov
imul
movzbl
add
mov
movzbl
add
movzbl
pushl
pushl
pushl
push
call
mov
mov
movzbl
movl
movb
mov
imul
mov
sub
movzbl
mov
movzwl
or
imul
mov
movzbl
mov
mov
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
sub
mov
mov
movl
mov
add
movzwl
mov
imul
add
mov
mov
mov
mov
mov
movzbl
imul
movzbl
imul
mov
movzbl
mov
movl
movl
movzbl
or
movzbl
xor
mov
mov
add
mov
movzbl
and
add
mov
mov
xor
or
mov
movl
mov
xor
mov
mov
test
je
mov
and
mov
mov
movzbl
mov
mov
movzbl
mov
mov
add
mov
mov
and
and
mov
mov
or
movzbl
sub
mov
mov
add
mov
mov
movzbl
add
mov
movzbl
or
mov
movzbl
and
mov
sub
mov
mov
sub
mov
mov
and
imul
mov
mov
mov
movzbl
add
mov
jmp
mov
xor
mov
mov
or
mov
mov
mov
movzbl
or
imul
mov
movb
mov
mov
mov
xor
movzbl
imul
mov
movzbl
shl
mov
mov
and
imul
mov
mov
mov
movzbl
xor
mov
mov
shl
mov
movzbl
movzwl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
mov
shr
movzbl
mov
mov
mov
mov
or
movzbl
sub
mov
movl
mov
and
mov
imul
mov
or
sub
mov
and
imul
mov
movzbl
imul
sub
mov
mov
mov
mov
sub
mov
movzwl
sub
mov
mov
shl
mov
movzbl
xor
movzbl
imul
mov
mov
sub
mov
mov
movl
mov
mov
add
movzbl
sub
mov
mov
add
mov
mov
test
je
mov
xor
mov
mov
movzbl
mov
mov
mov
xor
mov
mov
add
mov
mov
or
mov
mov
and
movzbl
and
mov
mov
add
mov
movzbl
or
mov
movzbl
or
add
mov
mov
sub
mov
mov
imul
add
mov
jmp
mov
movzbl
movzwl
add
mov
movzwl
shl
mov
mov
or
xor
mov
mov
mov
mov
sub
movzbl
mov
mov
mov
and
mov
mov
movzwl
xor
mov
imul
mov
mov
shr
mov
mov
sub
mov
mov
or
movzbl
xor
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
shr
mov
mov
movzwl
movzbl
mov
push
push
call
mov
mov
xor
mov
mov
movzwl
sub
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzwl
mov
mov
sub
mov
push
push
push
call
mov
and
sub
mov
mov
imul
mov
mov
movzwl
sub
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzbl
mov
xor
mov
push
push
push
call
mov
mov
or
or
mov
mov
mov
movw
mov
mov
mov
add
add
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
push
call
mov
sub
movzwl
mov
imul
sub
mov
mov
mov
and
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
jmp
jmp
lock
add
outsb
add
or
add
add
and
add
xor
add
dec
outsl
add
push
outsl
add
pop
outsl
add
bound
add
add
jp
add
mov
add
outsl
add
mov
outsl
add
into
outsl
add
fsubrs
add
outsl
add
imulb
add
jo
add
jo
add
add
add
jo
add
add
push
jo
add
add
je
add
xorb
cwtl
jo
add
jo
add
jo
add
jo
add
decl
adc
add
imul
or
lock
jo
cltd
xchg
jbe
sbb
xor
pop
gs
shr
lods
out
lods
std
js
cltd
cli
jne
in
das
xchg
jns
dec
popl
sub
lret
pop
jle
lret
imul
fldt
subb
xchg
xor
mov
cltd
lahf
mov
cmp
out
push
cmpsl
lea
jp
dec
mov
rcl
in
rol
pop
loope
scas
push
addr16
inc
sub
mov
or
mov
fisubrl
leave
out
push
add
in
in
xlat
mov
cwtl
outsb
out
outsl
ds
inc
mov
rcll
das
add
adc
mov
mov
in
sahf
popf
sbb
sub
out
sub
aaa
sbb
mov
inc
inc
jmp
jl
in
rorb
cwtl
shrl
add
push
imul
mov
or
ds
mov
cli
add
xchg
mov
adc
shll
inc
call
mov
rclb
mov
pop
lock
inc
jbe
aam
xor
xor
cmp
lcall
sbb
push
rcrb
xchg
in
int
add
cmpsb
sub
cwtl
lds
sarb
dec
mov
or
int
or
dec
dec
adc
or
rol
push
adc
je
cltd
iret
insb
or
xchg
inc
cwtl
xchg
fucom
ja
inc
out
sub
rorb
cwtl
in
mov
push
enter
sub
sbb
jg
dec
adc
data16
mov
mov
push
insl
mov
pop
in
jge
inc
xor
rcl
add
xchg
in
ljmp
pushf
insl
xchg
movsb
sbb
xor
jne
mov
rorl
in
push
mov
in
jle
pop
in
rorb
adc
adc
mov
popf
mov
inc
cs
inc
es
pusha
call
int
xchg
xor
dec
adc
mov
out
in
pop
mov
and
cmc
adc
out
mov
xor
jns
fwait
sbb
mov
sub
sbb
sub
roll
and
sub
dec
mov
lea
adc
and
adc
or
shl
xor
xchg
cld
in
shlb
mov
fadd
vphaddubw
sbb
outsb
sub
or
xchg
push
std
or
in
int
cmpb
mov
ds
mov
sub
lods
push
jp
mov
pusha
xor
pop
aad
ja
out
mov
pop
in
sbb
lods
pslld
xor
push
sbb
pop
fildl
lret
and
in
jmp
je
mov
push
pop
cltd
sub
dec
jne
loope
mov
mov
ret
sbb
andl
pop
mov
out
add
out
add
xor
push
mov
into
xchg
ds
movsbl
jnp
mov
int3
cmp
pop
stc
inc
pop
or
roll
out
cmc
sbb
fld
or
fcomps
fstpl
add
sti
xlat
ds
pop
int3
push
out
pop
xchg
dec
sahf
lret
sub
inc
das
insl
pop
orb
lret
rclb
dec
xor
stos
dec
in
imul
xlat
push
inc
ret
mov
hlt
cmp
iret
jbe
push
jo
in
loopne
ret
lds
popa
adc
imul
iret
lcall
mov
push
call
ffreep
ret
push
cmp
in
or
movsb
outsb
cmp
add
cmp
xchg
pop
inc
leave
test
push
orl
xor
aad
movsb
call
mov
add
jmp
pop
or
in
push
mov
pop
and
out
pop
jle
out
es
lock
fwait
sub
xor
leave
inc
notl
lock
jl
lds
cmp
push
aaa
pop
outsb
mov
jbe
xor
rorw
loopne
xchg
add
lcall
adcb
ljmp
mov
iret
sub
xor
ss
jl
cld
push
out
push
add
rcrl
leave
and
inc
add
out
lret
dec
stos
mov
ret
lods
movsb
fs
iret
adc
dec
add
sub
out
push
jne
ss
out
test
and
jp
lcall
or
in
push
orps
and
and
sbb
inc
das
sbb
rcrb
pop
lahf
sub
gs
fs
jp
ret
movsl
cmc
pop
enter
jl
cltd
addb
xchg
loop
add
add
test
add
cld
xchg
mov
into
adc
mov
nop
imulb
gs
call
popf
int
inc
sub
scas
lret
adc
in
xlat
cmc
fildl
stc
leave
repz
testl
or
les
pusha
inc
inc
xchg
iret
mov
jle
leave
jmp
movsb
dec
aaa
les
add
gs
lcall
inc
mov
insb
pop
mov
out
add
pop
cmp
mov
enter
jl
lds
xchg
jp
rcrl
cld
cs
and
les
sub
dec
pop
fistps
imul
xchg
rcl
test
mov
lock
sub
mov
in
jbe
into
sbb
cmpsl
dec
inc
ja
outsb
mulb
mov
rclb
stos
clc
jge
sbbb
push
inc
mov
in
inc
insb
cwtl
ret
sub
test
mov
mov
cmp
cmp
outsb
sbb
test
cmp
and
inc
loopne
ja
insl
jbe
mov
scas
ss
xor
je
fisubs
hlt
mov
insl
xchg
or
add
frstpm(287
faddp
mov
dec
dec
rcrb
in
ffree
in
fildl
std
xor
sub
xchg
lcall
mov
lds
test
mov
push
mov
dec
out
addb
lea
pop
sbb
inc
insl
fwait
int
js
cld
leave
ret
xchg
movsb
mov
shlb
loopne
out
pcmpeqw
xor
sbb
icebp
mov
add
inc
push
sub
insl
shl
and
sti
pushf
fdivr
pusha
add
shlb
adc
add
push
dec
fcomip
repz
ror
mov
pop
or
push
arpl
out
loopne
aas
movsb
aad
shr
shl
dec
add
fs
in
in
mov
inc
int3
pop
dec
push
sbb
pop
xor
arpl
mov
jo
lds
popa
cmp
push
insl
iret
mov
mov
das
lock
and
fs
aad
mov
jmp
push
sub
loop
and
xorb
xchg
add
xchg
jl
sahf
dec
inc
out
cmpl
call
xchg
pop
ljmp
mov
cmpl
imul
outsl
mov
fwait
aas
aad
mov
pushf
daa
dec
or
xor
dec
roll
dec
sbb
xor
mov
inc
jo
test
aad
cwtl
orb
pop
fidivs
stc
popf
push
add
mov
in
xchg
movsb
xchg
jb
fdivl
outsl
push
lods
hlt
arpl
stos
insb
pop
mov
stos
pop
orb
imul
and
jne
mov
inc
xor
das
xchg
in
mov
lcall
imul
insb
pusha
xchg
xchg
mov
adc
lret
dec
add
inc
push
xor
mov
and
loop
pop
or
ljmp
cwtl
in
dec
lcall
lods
xor
jmp
push
mov
inc
dec
sbb
out
mov
test
shl
mov
cli
aaa
mov
clc
push
xchg
jle
ret
incb
cmp
inc
cld
xor
mov
gs
in
je
or
cmpb
ret
movsl
pushl
mov
popa
pusha
mov
add
cmpsl
and
inc
rorl
out
or
dec
push
cld
popa
out
adc
fwait
sub
inc
call
pushl
jae
xchg
int
jbe
xor
push
inc
int
mov
out
shrb
xchg
or
mov
mov
pop
push
pop
jbe
pop
cmpsb
adc
subl
in
ljmp
dec
test
std
daa
sbb
test
cltd
mov
xchg
or
mov
or
in
push
fisttps
push
mov
roll
push
scas
adc
inc
cmp
in
add
adc
int
mov
es
jecxz
push
out
xchg
test
sbb
cmpsl
cmp
cmp
adc
inc
xchg
push
loop
sbb
sub
and
jmp
fs
add
sub
imul
mov
add
adc
rcr
in
scas
inc
pop
inc
scas
add
test
shlb
xchg
xor
mov
pop
sub
push
jecxz
and
aad
mov
add
imul
cmpsb
jge
mov
ret
adc
jecxz
into
ja
push
add
pop
pop
sbb
push
lods
lods
mov
int
loop
cmp
int
scas
adc
test
cmp
out
enter
cmp
or
jl
inc
aas
adc
loop
fstl
sbb
into
ror
add
pop
sub
ftst
loop
lahf
and
adc
adc
nop
or
fstpt
out
cmc
mov
dec
sbb
adc
mov
lods
daa
call
loop
lock
out
rol
pand
push
fdiv
repz
lret
repz
cltd
insb
dec
dec
in
xchg
and
and
add
jbe
repz
leave
pusha
jmp
cld
sbb
cmp
jb
mov
add
or
or
in
in
scas
cmp
mov
sbb
jge
daa
dec
jmp
fistl
rcr
mov
mov
push
mov
loopne
repnz
sbb
pushf
cld
mov
sti
inc
lods
inc
dec
mov
pop
fsubs
push
inc
rolb
pusha
xor
in
icebp
sti
ja,pt
or
pop
push
cmp
enter
loop
out
rclb
xchg
fstpl
repz
rclb
pushf
or
mov
cmp
mov
ljmp
mov
addr16
mov
leave
aad
pusha
rcrb
repz
lcall
or
out
aad
dec
int
rclb
adc
test
out
rcr
fcmovne
push
sahf
shrb
pop
ret
call
int
pop
or
loopne
mov
add
jb
rcrb
and
sbb
movsl
repz
push
cmp
into
mov
rcll
lea
notb
lods
xlat
mov
popf
adc
push
mov
dec
leave
dec
fs
add
jecxz
int
enter
or
pop
out
xlat
adc
mov
movsl
int3
movsb
imul
pop
ret
adc
outsb
aaa
mov
shlb
push
in
in
xchg
daa
je
xor
int
push
into
mov
mov
filds
out
outsb
jmp
inc
pop
jno
mov
adc
es
or
mov
iret
sbb
loope
int
out
loopne
imul
push
loopne
test
loopne
idivl
dec
push
lods
enter
jae
outsl
fsts
jae
or
mov
sub
xorl
and
mov
push
push
aam
jg
adc
test
push
loope
pusha
push
rorb
scas
sub
sub
imul
push
jge
outsb
in
add
movsbl
jne
inc
ret
cld
sub
int
aas
jmp
or
daa
sbb
arpl
ret
loopne
movsl
xchg
inc
push
mul
pushf
into
js
movsl
fnstsw
add
lret
and
sbb
xor
xchg
inc
es
adc
mov
mov
xchg
mov
lret
sub
fldt
cmc
orl
push
jmp
jb
ret
std
push
roll
loopne
rolb
out
inc
xchg
popa
js
insl
fadd
lods
jl
pop
arpl
shll
nop
popf
cwtl
shrb
popa
idivb
sub
int
aam
sbbb
pop
dec
test
adc
cld
or
es
roll
aad
sbb
fldl
push
arpl
mov
jo
rclb
std
xor
mov
or
sbb
fcompl
dec
out
pop
ja
mov
pop
sbb
pop
inc
ljmp
divb
jae
push
jecxz
hlt
push
in
push
pop
inc
and
jle
pop
or
fcompl
pusha
je
inc
sbb
adc
lea
dec
mov
add
std
divl
aaa
mov
dec
lret
outsl
shlb
and
bound
mov
ret
push
sbbb
mov
xchg
test
mov
mov
add
jbe
cld
push
fistpll
into
ficompl
dec
mov
mov
fistps
test
fs
add
aam
sbb
out
and
inc
sub
dec
movsl
aad
fs
loopne
addr16
outsb
mov
cs
push
inc
fcmovnb
aad
repnz
clc
cvtpd2dq
xor
insb
repz
inc
ret
inc
add
loop
dec
push
stos
jecxz
pop
test
cli
jmp
mov
je
movsb
fwait
sub
pop
ror
jns
cltd
mov
inc
and
sbb
orl
or
testb
fdiv
ret
rcll
jge
and
lods
fcom
push
lods
jp
frndint
add
xchg
clc
ret
sub
fadd
mulb
mov
hlt
sub
xchg
xor
sbb
rcr
cmp
leave
sub
cltd
ror
ffreep
lock
pop
jmp
out
movsl
pop
fildll
ret
in
push
push
idivb
fsubrl
mov
lret
pop
lahf
cmp
andl
lea
push
sbb
push
jmp
or
push
adc
pop
out
loope
jnp
stos
ret
repz
fildll
faddl
das
cmpl
xchg
fbstp
inc
iret
in
jg
push
ret
pop
push
gs
std
mov
bound
jle
add
add
mov
std
mov
insb
popf
ret
cmp
aaa
je
cmp
lods
in
mov
fdivl
add
mov
xorb
xchg
je
testb
inc
mov
ret
cs
mov
push
ret
mov
lret
jne
sub
mov
add
jne
jle
std
subl
out
inc
sbb
pushf
jg
rclb
adc
xor
push
and
dec
mov
pop
or
cld
loopne
shlb
cs
pop
stos
int3
lods
push
ret
inc
jg
cmpsb
pop
aas
popf
testb
mov
mov
sbb
sbb
mov
cld
subb
xor
stos
cmpsl
ljmp
idivb
subb
std
mov
xor
inc
pop
push
mov
insb
js
mov
aas
rcr
adc
pop
loop
ret
je
rclb
cmpsl
sub
add
pop
jnp
sbb
cld
xor
fdivs
sbb
hlt
pop
pop
cld
mov
stos
leave
cli
neg
int
fadds
int
sbb
adc
repz
mov
inc
fs
lcall
imulb
cld
mov
push
inc
sbb
rcl
sbb
dec
div
aam
test
in
into
repz
jne
pushf
xor
mov
fmull
ficomps
fwait
es
pop
cmp
std
mov
pop
cld
mov
shl
adc
outsl
lahf
out
sbb
jbe
ret
cmpsl
pop
vhaddpd
fisubrs
fistpl
pop
in
or
fists
jbe
xor
ret
add
sub
xchg
jle
add
push
pop
jge
mov
and
ret
pop
fdivrl
cmp
mov
mov
in
leave
jp
jmp
dec
mov
mov
sub
lods
mov
xchg
add
or
lods
mov
or
add
or
in
adc
repz
mov
sbb
lods
sub
mov
je
lods
das
outsl
push
mov
je
int
adc
cltd
xchg
push
dec
mov
in
mov
sub
dec
insl
and
lods
push
insl
and
inc
insl
cmp
lods
or
mov
je
sbbl
adc
push
rcll
mov
jne
rcrb
jne
shl
fsubr
rcl
jne
rol
fsub
ror
jne
rcl
fsub
rcr
jne
rcr
fdivr
rcll
fdivr
roll
fdiv
sarl
fdiv
shll
inc
ret
lret
ja
shll
cmp
sub
push
shl
call
repnz
lods
rclb
aas
stos
jbe
sbb
adcb
and
push
dec
adc
fisttpl
pop
comiss
push
aam
dec
sub
outsb
negl
sti
aad
xor
rolb
or
jbe
out
push
outsl
lods
ficoms
sub
push
sub
adc
cltd
ss
notl
and
fidivrl
call
cmp
outsl
cmpb
jns
in
sbb
or
gs
das
lock
int
pop
inc
adc
mov
dec
and
ret
jmp
je
dec
push
inc
pushf
dec
inc
ljmp
inc
sbb
dec
pop
mov
test
pushf
inc
inc
inc
test
hlt
sub
adc
mov
adc
xor
pop
mov
adc
jbe
mov
adc
mov
adc
jns
movsb
adc
jge
add
add
mov
popa
mov
adc
gs
adc
sub
lret
je
lahf
xor
mov
sub
jmp
daa
sub
daa
pop
lea
in
subl
in
subl
xor
in
test
xor
fwait
sub
or
repz
in
lahf
sub
add
popf
sub
push
in
xchg
sub
add
xchg
sub
add
xchg
sub
ja
xchg
cmp
jmp
popf
testb
repz
test
pop
mov
pop
pushf
enter
lret
pushf
lret
test
pop
sbbl
sbbl
inc
sub
ret
test
pop
fwait
pushf
faddl
test
pop
cltd
pushf
fiadds
test
pop
lahf
pushf
fadds
test
pop
popf
pushf
fiaddl
test
pop
xchg
pushf
aam
cmp
pushf
lods
inc
push
test
inc
add
scas
pop
scas
pushf
test
pop
lods
pushf
stos
inc
add
movsl
inc
push
test
inc
or
cmpsl
pop
cmpsb
pushf
mov
pop
movsb
pushf
mov
pop
mov
test
inc
inc
xlat
enter
mov
push
jne
mov
push
je
mov
pop
je
mov
fldcw
mov
je
mov
mov
cmpl
repnz
sub
jnp
mov
sub
shlb
adc
test
shlb
orl
repnz
sub
add
loopne
push
rolb
shr
adc
inc
shr
adc
pop
shlb
push
rolb
call
or
rcl
adc
out
mov
or
adc
sub
aam
es
or
adc
add
jae
lods
notl
xor
push
jbe
std
lock
jbe
scas
lcall
add
outsl
lods
mov
jbe
scas
sahf
pop
scas
adc
outsl
outsl
mov
scas
nop
pop
fisubl
fwait
jbe
scas
xchg
outsl
mov
and
push
stos
cmp
or
std
mov
sbb
add
jbe
add
adc
push
add
mov
das
sbb
shl
adc
cmp
sti
icebp
jecxz
loop
cmp
sti
repz
sti
int3
jecxz
loop
cmp
sti
into
and
sub
and
sti
shlb
loop
cmp
sti
sti
mov
loop
cld
or
loop
cmp
sti
lret
and
or
lock
stc
test
repnz
clc
scas
rcrb
mov
inc
clc
mov
rcrl
jbe
pop
ss
repz
push
rcll
mov
repz
mov
repnz
clc
mov
roll
mov
pop
push
stos
repnz
clc
mov
bound
repnz
lret
repz
push
shl
pop
clc
leave
repz
push
xlat
repnz
clc
iret
repz
push
aad
pop
clc
int
inc
push
fcomi
push
clc
ret
repz
push
fptan
push
clc
shl
push
fcomip
push
clc
repz
push
push
clc
push
ret
repnz
clc
fcomi
jae
rol
clc
fdivp
jbe
mov
clc
fmul
scas
popf
outsl
dec
mov
jbe
scas
xchg
outsl
inc
mov
jbe
scas
test
pop
mov
mov
scas
scas
outsl
pop
mov
mov
scas
lods
xchg
or
sti
add
repnz
cmp
sti
push
and
out
int
xor
cmp
data16
sbb
push
push
stc
sbb
or
lcall
or
std
push
xor
jmp
add
mov
sub
inc
ss
inc
cli
adc
dec
rol
adc
dec
rolb
inc
int
or
roll
inc
int
add
add
or
sarb
int
or
sarb
inc
int
or
rorb
pop
int
or
lret
push
adc
orb
or
int
adc
stc
int
adc
fcmovne
and
or
sub
and
sti
cmp
push
ret
gs
and
loop
cmp
sti
xor
pusha
loop
cmp
sti
xor
add
xor
fstp
adc
dec
ja
adc
adc
lds
or
mov
or
jne
push
and
dec
or
in
int3
add
mov
adc
lret
push
div
cmp
sub
and
sub
cld
sub
cli
sbb
dec
pop
clc
sub
loopne
jo
sub
mov
test
mov
rep
and
sbb
test
mov
jmp
xor
in
jmp
xor
jecxz
stc
cs
jmp
into
jmp
in
enter
mov
and
stc
jmp
xor
jmp
xor
std
jmp
xor
icebp
adc
in
pop
lret
vmaskmovdqu
ret
or
sti
xor
into
cwtl
mov
xchg
nop
fwait
int3
nop
mov
ficoml
hlt
xchg
sub
sub
pop
cmp
inc
sub
fcmovnbe
lret
je
rcl
ror
je
loop
fsubl
imul
cmc
ss
icebp
adc
repz
aam
sbb
clc
ljmp
fwait
jbe
scas
test
jbe
scas
scas
mov
int3
xor
add
dec
cmp
mov
add
test
add
sub
add
sub
push
test
jbe
stos
imul
push
sbb
mov
daa
outsl
sbb
or
mov
jbe
enter
cmc
push
out
push
xlat
inc
hlt
mov
icebp
xchg
lods
pushf
in
xor
jl
rcrl
ja
sarb
fwait
into
jl
ss
xchg
fwait
rclb
fwait
les
xor
in
pushf
loope
xor
nop
loope
sarl
dec
and
push
icebp
lds
ljmp
icebp
sub
pusha
jmp
sub
and
sub
cmc
sub
and
sub
and
sub
stc
sub
and
sub
ljmp
adc
out
jge
in
or
and
sub
loope
das
and
sub
out
sub
ljmp
aaa
in
sub
std
sub
and
sub
jmp
loope
inc
addr16
mov
dec
outsl
dec
mov
jbe
scas
dec
outsl
dec
mov
jbe
scas
dec
outsl
inc
mov
jbe
scas
inc
outsl
inc
insb
push
mov
sbb
push
cmpsl
pop
cmp
dec
repnz
cli
jmp
xor
clc
jmp
xor
jmp
xor
cld
jmp
xor
bnd
xor
lock
xor
imul
icebp
xor
hlt
jmp
xor
mov
int
es
mov
iret
xor
mov
leave
sub
lret
sub
repnz
sub
xor
xchg
shll
jmp
xor
lcall
sub
repnz
sahf
jmp
xor
pushf
jmp
xor
xchg
jmp
xor
nop
jmp
xor
xchg
jmp
xor
stos
jmp
xor
test
repnz
scas
jmp
xor
lods
jmp
xor
mov
repnz
sub
repnz
xor
mov
repnz
xor
mov
repnz
xor
mov
mov
inc
neg
xor
out
fbld
inc
neg
and
out
fnstenv
inc
repnz
in
jmp
xor
loop
aad
dec
repnz
loopne
xlat
xor
out
shll
in
shll
cli
jmp
xor
clc
jmp
xor
jmp
xor
cld
jmp
xor
bnd
xor
lock
xor
imul
mov
sub
jmp
xor
mov
mov
sub
repnz
xor
mov
mov
sub
repnz
sub
xor
xchg
mov
sub
mov
test
mov
sub
mov
lcall
sub
repnz
out
in
neg
add
leave
sarl
ret
shl
xchg
jmp
dec
add
sub
outsl
xor
sub
cs
notb
ffree
sti
shr
push
repnz
push
test
loop
or
aas
mov
outsb
cs
and
push
repnz
and
repnz
sub
repnz
mov
repnz
mov
jg
div
callw
fwait
cmp
loop
inc
jne
loop
out
dec
scas
xlat
sahf
fnstenv
leave
inc
inc
dec
inc
jmp
lods
gs
mov
jge
push
pop
pop
ljmp
into
fimuls
push
aas
jmp
push
shll
sbb
test
sbb
lret
lcall
int
ret
xor
lcall
dec
lods
hlt
es
ret
sub
scas
outsb
daa
jge
and
ret
or
lret
out
mov
fcompl
movsb
inc
pop
pop
sub
inc
pop
push
sahf
pop
outsb
incb
movsl
pop
jbe
into
dec
push
xor
inc
iret
sbb
imul
xchg
push
xchg
into
decl
mov
inc
dec
sbb
fmull
add
aaa
addb
inc
andb
mov
sti
aaa
mov
stc
push
mov
outsb
outsb
jbe
jnp
insb
into
gs
je
inc
sbb
and
xor
jae
icebp
movd
adc
movsl
or
into
pop
push
sub
sub
xor
pop
popf
sub
mov
ror
add
jl
lods
test
insl
lcall
outsl
add
xchg
jl
xor
imul
add
test
call
or
cmp
loope
or
clc
mov
or
mov
pop
je
nop
xchg
pop
xorl
jp
xchg
enter
mov
lcall
mov
inc
lcall
outsb
jns
pop
cltd
ret
mov
xchg
add
xor
mov
lcall
inc
andb
jno
sbbl
jmp
add
cmpsl
jne
divb
adc
push
add
cmp
dec
sbb
in
cmpsl
pop
outsl
mov
sub
pop
in
sub
inc
cmp
je
stc
mov
mov
adc
cmpsl
aaa
out
test
pushf
loop
or
sub
jg
mov
mov
mov
or
xor
gs
mov
subb
or
mov
and
pop
mov
mov
and
or
mov
movsl
or
mov
into
or
out
xchg
push
jl
inc
push
cmp
test
jg
aad
pop
shrb
xchg
int
test
movsb
fisttpll
adc
mov
outsl
lcall
mov
sbb
push
fisubrs
in
xchg
jl
mov
aam
ds
cmpsl
mov
push
mov
mov
or
ss
mov
adc
int3
ret
loop
inc
pop
out
loop
jl
repz
je
movsl
jae
test
push
aad
xchg
ret
inc
pusha
cmc
ret
call
add
fneni(8087
sbb
fcomp
adc
stc
or
add
loop
repz
pop
or
fists
repnz
aaa
insl
lods
cmpl
inc
stos
dec
notl
mov
push
pushf
xchg
ret
leave
xchg
push
insl
cld
mov
addr16
jecxz
inc
xor
mov
movsl
lods
inc
push
xchg
testb
xchg
mov
mov
push
xchg
sahf
or
cmpl
cbtw
imul
jne
adc
addr16
sub
or
jl
insl
lahf
push
fnsave
fcompl
inc
mov
and
out
fcompl
mov
push
aaa
add
in
push
ret
and
jg
cs
mov
bound
test
out
sbb
fiaddl
insb
mov
pop
pop
mov
adc
dec
xor
lds
inc
jmp
sbb
sbb
in
sub
es
and
mov
sub
ret
cmp
cmp
ljmp
sarb
fcoml
dec
jp
mov
push
jb
lods
es
out
in
sti
xorb
xor
adc
mov
xlat
mov
flds
and
movsb
shr
mov
push
dec
in
mov
add
add
inc
outsl
icebp
test
adc
push
jne
repz
jb
push
dec
push
push
rol
ja
xchg
push
int
out
sbb
fwait
les
pmulhuw
cmp
xchg
and
aaa
fiaddl
or
xor
sub
fwait
lds
cmp
out
push
and
xlat
adc
in
and
ret
cmp
test
xchg
sub
mov
xchg
xchg
scas
inc
jne
dec
jno
lret
gs
push
jo
rcl
test
inc
mov
add
outsl
lret
hlt
lods
out
imul
mov
jge
pop
cmc
int
fidivl
add
lcall
and
sbb
mul
in
sbb
in
fidivrs
lcall
or
shrl
mov
sub
xor
push
and
imul
sbb
dec
ficoml
push
dec
mov
jg
inc
mov
fs
adc
xchg
pop
sbb
lods
imul
xchg
jno
int3
nop
insl
shll
addr16
fildll
dec
stos
cmpsb
in
cmp
mov
mov
push
lret
sbb
andb
mov
pop
call
mov
scas
nop
dec
jae
push
dec
jb
lret
jmp
orb
sahf
jle
in
addr16
sti
nop
imul
xchg
mov
push
push
mov
push
jp
lret
pop
jb
mov
aad
push
divb
inc
pushf
repnz
mov
jg
jmp
add
fdiv
les
push
mov
insl
cmp
jge
dec
in
inc
bound
test
dec
faddl
jo
or
ficoms
sub
sarb
loopne
jbe
iret
shr
jb
or
lds
fmuls
pop
daa
push
in
cmp
jmp
cwtl
data16
add
insl
and
not
xor
je
shrl
dec
bound
movb
add
mov
repz
mov
inc
push
popa
mov
in
insl
sub
bound
out
sub
sar
div
dec
call
fsubs
adc
pop
adc
outsb
add
add
arpl
or
push
cld
jo
shrb
cmp
popf
sub
dec
sub
insl
xchg
addr16
outsl
sar
test
imul
icebp
adc
in
lret
push
jmp
mov
sub
pop
mov
das
mov
fs
mov
or
sbb
into
cmp
xchg
mov
mov
out
sbb
into
xor
gs
enter
in
mov
pop
iret
out
pop
push
fs
mov
imul
cmpsb
sbb
push
imul
enter
fstl
xor
iret
jnp
xchg
mov
xor
lret
push
std
in
cmpsl
imul
mov
addb
mov
xchg
add
mov
push
ljmp
or
ret
xor
jmp
aas
shl
mov
dec
mov
fs
jne
adc
and
mov
sub
mov
push
sub
in
into
jmp
inc
leave
push
popf
jo
xchg
add
ja
add
aam
pushf
inc
out
sub
bound
mov
add
xor
insb
jl
dec
cmpsl
popf
or
jmp
out
in
add
ret
movsb
aaa
mov
mov
add
adcb
lret
lods
add
adc
xor
popf
or
mov
adc
pushf
sbb
adc
nop
adc
lds
add
cli
pushf
popa
dec
jl
xorl
adc
mov
add
inc
mov
int
lea
inc
rorb
lcall
mov
mov
or
add
sbb
mov
xorb
adcl
bound
mov
into
outsb
repnz
mov
jbe
in
jb
mov
push
popa
mov
int3
jl
mov
sbb
orl
imul
cmpl
das
and
in
bound
fscale
aam
int3
loopne
jmp
mov
dec
roll
adc
jcxz
in
sbb
das
push
mov
ret
and
clc
fs
shr
shl
xor
cmc
shl
add
in
sbb
clc
iret
dec
push
loope
pop
inc
cs
lcall
sbb
mov
ret
hlt
jecxz
out
dec
push
jecxz
pop
in
mov
pop
int
mov
pop
fistl
push
rcrl
mov
sub
jg
movsl
xor
test
out
das
push
fwait
aam
mov
xchg
leave
in
mov
xor
mov
push
adc
outsl
scas
pop
mov
js
bound
test
jp
lahf
add
clc
in
rcll
imul
jge
mov
rcrl
jns
notl
adc
out
xchg
jne
test
outsb
repz
push
arpl
dec
out
mov
pop
mov
inc
jge
stos
int3
dec
stc
mov
insb
pop
outsl
gs
inc
xor
mov
push
dec
add
dec
test
xor
adc
ret
push
ja
mov
and
dec
imul
push
pop
mov
xchg
cmpl
cmp
mov
mov
adc
mov
add
sbb
cmc
jbe
out
or
loope
push
xor
xor
push
cmp
sbb
xor
and
xchg
in
es
mov
add
add
inc
scas
mov
push
adc
sbb
rorl
loopw
in
jl
lods
pop
jge
lods
pop
in
mov
into
mov
stos
or
push
movsl
mov
jge
cmpsb
xor
leave
orl
icebp
sub
push
out
push
scas
shll
mov
jae
lret
adc
xor
daa
out
xor
popf
int3
sub
js
in
lods
fisubrl
adc
pop
nop
inc
int
sub
jmp
aas
lods
lds
and
repz
jge
sbb
test
push
out
sub
mov
mov
in
xor
and
fadds
mov
xchg
cmpsl
sbb
mov
test
inc
pushf
aad
jl
cmp
ret
ss
push
sub
out
daa
sbb
in
cli
cmp
sti
jae
enter
xlat
or
out
push
out
rcll
loopne
xor
sbbl
int
test
mov
data16
aad
movsl
dec
mov
lds
mov
jae
je
add
cmpb
xchg
sub
cmpsl
dec
jle
packssdw
fwait
xchg
jnp
inc
sub
mov
mov
in
mov
out
jle
faddl
or
out
cmp
mov
xor
sub
shrl
iret
hlt
shlb
fstl
or
pop
mov
in
or
mov
adc
or
imul
jp
dec
mov
jbe
dec
dec
aas
fdivs
in
push
mov
inc
shll
cwtl
jns
sbb
je
mov
scas
pop
jo
mov
dec
inc
pmulhuw
out
shl
inc
aaa
test
popl
imul
lea
push
xlat
fmull
ss
cmp
xlat
xor
out
sub
push
lret
mov
adc
ljmp
int
jae
jnp
addr16
int3
mov
push
jae
shlb
ljmp
stos
push
mov
arpl
xlat
dec
adc
gs
leave
mov
popa
subb
pop
movsl
jmp
cmp
out
sub
cs
int3
or
or
leave
xchg
jne
sub
incb
mov
push
test
push
mov
jecxz
sub
sub
push
xor
fs
or
mov
xchg
jle
jns
jns
push
push
push
push
mov
out
sbb
pop
lods
sub
or
inc
pop
fisubrl
xor
adc
out
fnstsw
fdiv
xor
pop
pop
in
mov
add
mov
jp
out
leave
sti
mov
loopne
cmp
testb
hlt
hlt
and
jmp
loop
and
mov
jae
inc
cli
enter
mov
in
cwtl
scas
ret
cmc
stos
xchg
lods
cmp
and
call
lret
mov
cmc
push
bound
das
or
loop
fistl
out
test
add
orl
inc
scas
outsb
xchg
inc
jne
mov
xor
push
mov
push
in
iret
push
call
mov
test
ds
push
clc
jmp
ucomiss
out
loop
jbe
push
int
jp
cmpsl
sub
movsl
gs
jmp
cmpsl
iret
jbe
scas
ljmp
je
mov
inc
lea
cmc
dec
cmpsb
rcrl
mov
mov
icebp
jnp
js
inc
or
ret
out
add
data16
mov
push
sub
in
xchg
in
cmp
dec
or
cmp
and
int
dec
fsubr
and
lea
das
inc
lods
mov
or
test
arpl
and
ficoms
scas
pop
int
aad
inc
lret
xchg
in
inc
cmp
cmp
addr16
mov
cmp
add
mov
cmp
fists
nop
movsb
sbb
ret
and
add
je
arpl
rclb
stc
testb
lcall
xor
aam
or
lds
xor
dec
xor
jmp
dec
push
out
loope
sub
fcmovbe
icebp
pop
repz
mov
scas
and
cmp
in
inc
fcmovu
adc
out
cs
mov
dec
cmp
and
hlt
add
pop
test
int3
test
and
inc
ljmp
mov
in
aaa
mov
lock
loope
and
dec
ja
popf
xor
cmp
cmpsb
pop
arpl
jne
jmp
ja
sub
and
mov
xchg
dec
or
fdivr
dec
dec
hlt
adc
sti
xor
mov
fstpl
or
dec
stos
cmc
jnp
xchg
dec
dec
hlt
mov
adc
mov
bound
mov
push
sub
out
negl
repz
and
roll
test
aaa
sbb
aaa
mov
jmp
adc
scas
fcoml
sbb
test
jne
clc
push
les
mov
lods
xor
loop
xchg
les
and
movsb
lea
sub
cmp
lahf
xchg
add
mov
add
lret
das
sbb
jmp
mov
add
cmpsl
std
mov
rcrb
xchg
xlat
push
jmp
jp
out
in
mov
fldl
pop
mov
mov
pop
jmp
mov
or
xchg
mov
movsb
push
push
int3
sub
sub
or
sbb
adc
push
cmp
cli
jle
pop
mov
add
fsubs
inc
dec
movsl
test
outsb
stc
outsb
or
fs
dec
pop
in
push
pop
push
lea
pop
xchg
je
aad
popf
inc
lret
dec
mov
inc
sub
leave
movsl
inc
cmp
sbb
xchg
mov
lahf
pusha
lret
mov
lret
push
loop
jle
in
jbe
cmpsb
push
add
scas
mov
pop
sbbl
push
push
fdiv
mov
jno
add
mov
hlt
movb
sti
cmc
or
aam
adc
popf
lret
aad
sub
cmp
mov
sub
xor
cmp
adc
and
or
or
out
cmp
xchg
lahf
adc
sub
cmp
addl
mov
mov
xlat
out
sbb
xor
xor
sub
and
leave
loop
xchg
fdivl
nop
pusha
xlat
and
fcoms
add
lcall
or
mov
add
clc
jle
inc
mov
xor
and
push
cmpsb
xchg
sbb
sub
sbb
negb
dec
xchg
lods
jae
ficoms
divl
addr16
xor
jo
jo
and
imul
xchg
aad
pop
mov
ficompl
add
jmp
lock
fcompl
shl
daa
and
icebp
jp
sbb
jo
inc
int3
add
cld
test
repz
ljmp
test
ret
sti
lds
push
xlat
push
sbb
test
imul
sbb
shl
sbb
jmp
mov
jbe
mov
mov
ljmp
and
or
xor
xchg
rol
test
pop
mov
popa
pop
xlat
sbb
dec
popa
dec
xchg
adc
push
sbb
jecxz
das
aam
adc
xor
test
das
loope
incl
sub
push
testb
or
addr16
adc
iret
cmp
or
cltd
into
adc
inc
fsubr
cs
std
iret
loop
mov
jg
inc
test
into
movsb
jg
nop
add
repnz
test
inc
push
out
mov
test
andb
inc
addl
sbb
xor
mov
loopne
ds
adc
pop
jmp
add
push
cli
bound
dec
ljmp
or
mov
push
xor
jo
jae
sbb
in
pop
cmp
rclb
lea
add
or
jmp
int
out
push
jp
mov
out
cmp
sub
pusha
sar
pop
int3
inc
cmpsl
push
cmp
mov
push
sub
pop
mov
or
push
ret
add
or
xor
push
mov
fisttpll
fidivrl
cwtl
adc
inc
push
addr16
inc
cs
xlat
xor
cmp
mov
pop
out
push
insl
imul
push
mov
stc
sbb
cmp
inc
pop
popf
fstl
sti
xlat
daa
xchg
into
subb
push
push
ds
pop
sub
and
test
fcmovb
cmp
fsubl
es
fldcw
mov
pop
jp
std
dec
sub
xchg
cmp
aaa
dec
hlt
out
inc
or
loope
xchg
stc
jmp
jmp
inc
loop
mov
and
mov
lock
push
adc
mov
fsubs
xchg
push
inc
mov
out
add
mov
lods
push
addb
lock
dec
jl
mov
and
push
mov
call
outsb
push
pop
dec
je
mov
inc
testb
imul
xchg
jmp
ret
into
insb
push
mov
inc
xor
pusha
inc
mov
add
jecxz
fimuls
push
int3
gs
popf
xchg
inc
sub
mov
das
data16
outsb
pop
imul
insl
in
outsb
sub
cmpsl
cmpsb
xor
jecxz
and
xor
stos
in
in
decl
mov
add
inc
adc
lret
frstor
pop
frstor
sbb
xchg
adc
cs
in
cmp
out
or
test
in
imul
addr16
stos
dec
ds
or
aam
inc
or
loopne
clc
rolb
pop
sti
nop
aaa
dec
sbb
fimull
lock
xor
sub
rcl
aaa
xchg
test
mov
pop
jae
pushf
xchg
lret
imul
or
jae
cmp
into
imul
negb
mov
arpl
out
pop
popa
lret
int
push
mov
nop
popf
pop
pop
mov
adc
jnp
mov
lock
mov
in
add
in
mov
mov
push
lret
mov
mov
mov
movsb
sub
in
rcrl
add
cmpsb
fistpll
mov
iret
sar
push
lret
xchg
lea
adc
aam
pop
loop
std
arpl
sub
jmp
xchg
int3
shrl
lods
fs
mov
pop
xlat
sahf
bound
or
mov
jmp
hlt
enter
scas
xor
ret
loopne
xchg
mov
mov
push
fs
xor
in
jne
or
xchg
inc
or
fldenv
insl
testl
cmpsb
outsb
repnz
pusha
sahf
in
stos
jmp
and
daa
mov
xchg
sbb
test
mov
aam
rolb
xchg
loope
fs
addr16
les
sbb
addl
and
test
test
imul
sub
jp
jbe
popf
sbb
jmp
aad
jbe
cltd
movsb
pushf
mov
pop
xchg
imul
cltd
cwtl
repz
jmp
outsb
rcr
cmp
jb
push
pop
mov
out
aas
movsb
out
and
jmp
dec
mov
repz
jno
out
shrl
mov
mov
ljmp
popf
jno
rcr
adc
xchg
dec
push
stos
mov
adc
sbbb
stc
cwtl
mov
int3
push
adc
xchg
fwait
ds
lea
jb
scas
subl
sub
cmpw
or
jnp
shl
xchg
and
scas
or
stc
mov
arpl
or
xor
pop
in
mov
mov
cmpsb
dec
mov
je
mov
mov
aam
xor
and
sub
idivl
lock
movsb
add
cli
ret
dec
out
negl
jmp
das
jo
adc
xchg
mov
and
and
sbb
push
movsb
dec
mov
jle
loopne
mov
cwtl
inc
les
enter
push
mov
push
je
inc
pop
mov
dec
pop
mov
in
cmp
ret
sub
iret
add
jge
outsl
pop
aaa
ljmp
fimuls
in
fs
test
cmpsl
in
mov
xor
adc
add
mov
outsl
test
div
push
lods
stos
mov
and
fisttpl
in
sub
les
pop
aam
cpuid
adc
and
int
cld
cmp
and
in
scas
inc
ret
ficoms
mov
mov
add
xor
mov
push
inc
loop
js
mov
stos
mov
pop
mov
sub
jge
jbe
xchg
std
or
adc
pop
pop
mov
pop
inc
mov
pop
test
jns
mov
jns
mov
loopne
or
cwtl
or
rcrb
leave
jmp
push
xor
mov
push
gs
adc
scas
testl
sahf
scas
jecxz
pushf
cmpsb
dec
jge
arpl
xor
xor
cmp
sub
test
andl
cmp
in
pusha
or
mov
aaa
sbb
cmp
jnp
into
or
sbb
popf
mov
jo
shrl
mov
jb
divl
xor
mov
mov
xchg
cs
mov
inc
mov
cltd
les
xor
jp
xchg
lock
ja
inc
andb
lret
data16
nop
fistpll
sbb
push
aam
sarl
and
push
sbb
add
add
movsb
and
xor
mov
jo
or
push
jge
lret
bound
and
rcr
inc
aaa
int3
out
adc
cs
lock
sbb
testb
stc
hlt
or
addr16
repz
or
add
outsb
pop
cmp
ror
outsl
leave
shrl
lret
xor
out
lcall
push
clc
stc
dec
inc
iret
mov
outsl
sub
jmp
invd
leave
lea
das
leave
in
addr16
xor
fnstsw
loope
sti
jge
daa
and
loop
arpl
outsb
mov
movsb
jns
add
or
cmp
adc
shlb
mov
inc
sub
mov
or
stos
in
add
or
pop
mov
add
pop
sbb
aas
adc
pop
and
in
jge
aam
sbb
pop
pop
lea
out
xor
mov
mov
pop
call
rol
push
in
inc
dec
data16
pop
adc
dec
adc
leave
mov
arpl
in
sti
mov
adc
fwait
inc
jg
push
je
mov
sub
add
mov
or
in
or
jb
jle
xchg
xchg
xor
cmp
xor
inc
ret
or
mov
adc
xchg
adc
test
inc
sub
pop
jmp
rorl
mov
mov
mov
or
add
push
lahf
lret
aas
cwtl
mov
pop
pop
add
mov
fs
cmp
movb
push
xchg
ret
imul
fidivl
xchg
sub
cmpsb
xchg
addr16
subl
jg
and
sbb
shrd
mov
push
and
dec
sbb
mov
in
lret
mov
popf
and
jno
push
std
mov
hlt
xchg
mov
push
movb
lcall
push
pop
cmpxchg
arpl
jne
test
dec
cmp
mov
scas
rorb
dec
arpl
xchg
test
and
push
lret
sub
sti
lahf
cmp
es
dec
inc
push
aaa
xchg
sbb
test
test
pop
sub
adc
jne
adc
push
xchg
rcl
mov
add
shlb
ret
mov
lea
test
inc
cmpl
and
popf
pop
ret
outsb
jnp
mov
add
mov
cld
les
cwtl
rorl
and
add
int3
adc
test
add
mov
jmp
int3
jmp
xchg
dec
jge
or
xor
into
push
xchg
mov
mov
subl
push
scas
jge
push
pop
mov
mov
mov
pusha
cmp
vmwrite
cmp
cmc
xchg
inc
insl
and
cld
and
incb
or
mov
xchg
sub
push
sbb
fistps
dec
cs
xor
mov
movsb
jo
movsb
fs
sti
mov
lcall
pop
and
add
push
ljmp
pop
push
cld
jmp
push
movd
jne
arpl
lds
add
xor
lock
fldcw
fists
enter
cmpsl
xlat
sbb
pushf
or
pop
sbb
lock
inc
inc
in
int
lock
sbb
push
scas
in
iret
inc
movsl
lcall
mov
in
cwtl
pop
lods
int3
inc
pop
pop
sahf
cmc
and
jle
enter
dec
jg
sbb
xchg
fimuls
int3
inc
das
mov
ret
cwtl
xlat
shlb
cli
inc
inc
in
inc
push
push
fcomi
cmp
mov
and
lea
mov
pop
test
mov
sbbl
aaa
lea
or
push
out
scas
dec
mov
or
push
imul
aaa
mov
in
iret
or
pusha
inc
xor
leave
leave
pop
jg
xor
mov
dec
adc
xchg
mov
mov
addb
andl
shlb
mov
loope
add
outsl
xchg
bound
sub
mov
shrb
addr16
rcrb
das
fnstenv
pop
leave
jne
out
mov
fldcw
enter
inc
jp
fs
loope
or
lcall
cmp
fisubl
out
and
pop
xchg
outsl
pop
dec
jmp
mov
mov
mov
les
orl
xchg
xchg
repnz
int3
into
and
roll
gs
pop
leave
mov
nop
in
leave
sbb
pop
rcr
jo
pop
and
daa
push
test
mov
mov
or
xchg
sbbl
mov
cmpsl
mov
pop
call
pop
into
or
mov
icebp
scas
pushl
push
mov
ficomps
ret
sub
fistl
mov
rcll
pop
pop
sti
pop
cwtl
cmc
pop
push
loop
loop
mov
add
push
leave
sti
pushf
adc
lret
aam
and
rcll
pop
loope
pop
push
in
inc
sbb
aad
cmp
loop
jmp
sub
mov
cmp
fs
inc
mov
mov
loopne
push
ljmp
adc
shll
inc
in
popf
test
push
fisubrs
sahf
bswap
mov
xchg
scas
inc
stos
push
insb
mov
push
cmp
pop
and
nop
cmc
mov
aaa
std
or
rolb
mov
fmull
fcomip
mov
pop
mov
movsl
dec
push
jecxz
mov
in
decl
stos
scas
jmp
popa
lahf
mov
das
out
mov
movb
mov
out
cmp
cmpsb
loope
mov
mov
mov
aas
shll
mov
xor
add
jns
stc
shlb
push
add
insl
jle
es
fcmovbe
sti
and
and
hlt
add
dec
data16
dec
jb
fs
push
lcall
sbb
popl
mov
mov
jae
add
jae
lcall
sbb
das
int
movsl
lret
cmp
jnp
pop
test
jle
sahf
es
xchg
and
pop
stos
jae
inc
shr
adc
iret
mov
inc
fidivrs
push
xor
mov
loop
gs
in
cld
ds
adc
enter
filds
push
call
insb
jne
push
data16
mov
cld
sbb
push
ret
test
and
sbb
aam
sbb
inc
andl
scas
mov
cmp
pop
cli
mov
cmpsb
or
dec
cmc
les
pop
in
lea
push
subb
inc
repz
mov
in
negl
mov
inc
jo
mov
not
and
mov
in
mov
xchg
inc
sub
test
jb
cmp
xchg
movsl
imul
jns
hlt
fs
test
mov
call
fistps
lcall
or
push
nop
sbbb
inc
inc
and
xchg
jnp
mov
mov
popa
mov
push
xor
ja
mov
repnz
rcrb
cmp
push
orl
inc
add
push
pop
jg
mov
jne
sub
mov
lea
dec
iret
dec
jecxz
addr16
mov
jnp
nop
jo
mov
push
cmpb
gs
xor
jecxz
push
cmc
test
pop
popa
push
sbb
adc
lea
les
adc
xchg
sbb
aas
jae
and
ljmp
iret
inc
xchg
addl
inc
ret
and
es
movsl
xchg
sub
mov
clc
loopne
mov
bound
in
push
cmp
inc
sbb
mov
cmp
push
stos
pusha
orb
decl
pop
xchg
adc
icebp
hlt
jnp
outsb
loopne
and
jmp
xor
lcall
push
dec
ror
mulb
js
subb
and
inc
cli
or
and
test
and
mov
lcall
pop
popa
sbb
dec
loope
movsl
xchg
and
dec
ret
loop
xor
flds
sahf
lret
fwait
pop
pop
sti
jg
int
ret
rol
cmp
insb
push
add
cmc
xor
xor
jmp
jecxz
in
pop
paddsw
insb
leave
mov
pop
dec
jg
popf
pop
mov
fistl
adc
or
pop
mov
imul
add
lret
pop
iret
xor
or
fs
pmullw
add
pop
iret
outsb
hlt
pop
jg
jne
cli
fwait
and
xlat
sub
xor
stc
pop
add
cmp
insb
cli
mov
fdivl
lcall
and
inc
cld
add
adc
ja
lcall
pop
outsl
dec
pop
xlat
pavgw
mov
push
jno
cltd
cli
xorl
movsl
aad
or
js
jl
xchg
xor
add
test
push
aaa
icebp
xchg
icebp
int3
out
sti
mov
xor
test
or
mov
mov
mov
inc
test
mov
pop
mov
add
in
add
insl
aad
cwtl
in
sbb
int
cmc
mov
shrl
push
pop
dec
cwtl
ss
sbb
cli
mov
insb
aad
das
add
lret
mov
sahf
sbb
fnsave
cltd
and
xchg
loop
mov
mov
out
push
popa
in
andl
add
and
aas
mov
jge
mov
int
sub
pop
lds
call
or
jle
ljmp
lods
insb
es
xor
xchg
mov
xor
add
mov
aad
test
cmp
call
sbb
pop
xor
dec
and
repz
sub
adc
dec
insl
or
popa
test
lds
add
out
or
mov
jl
mov
iret
add
sbb
out
icebp
mov
dec
inc
or
das
dec
inc
std
inc
lods
jge
and
insl
pop
push
sbb
mov
fsubr
mov
inc
aam
jge
add
fnstsw
jge
mov
shl
jne
sbb
adc
sub
ret
inc
mov
jecxz
jge
pop
nop
pop
cli
or
mov
cs
jae
xchg
sar
movsl
xchg
call
popa
out
sub
sbb
dec
jp
mov
mov
or
cld
inc
mov
adc
sub
arpl
and
repnz
cmp
ret
call
loopne
fwait
outsb
or
push
sbb
mov
pop
inc
mov
jl
inc
xchg
fcomps
inc
pop
lret
jb
sub
rcr
dec
insb
enter
adc
mov
out
cli
jno
adc
out
scas
loope
iret
cmp
pop
jne
mov
out
sbb
fcmovnu
xchg
inc
inc
bound
jle
jl
dec
or
in
sub
jge
shll
popa
jmp
dec
ret
mov
push
dec
cs
xor
mov
add
daa
aas
stos
repnz
inc
mov
jae
cmp
aam
add
fmull
ss
imul
or
enter
gs
int
mov
sti
dec
sub
out
fdivrp
mov
jns
pop
mov
cld
sbb
dec
cmp
stos
sub
xlat
fwait
lea
and
inc
rorb
icebp
jmp
cli
xchg
into
add
cmp
out
std
cmp
lcall
xchg
adcl
or
loope
movsl
mov
or
jo
sbb
xor
push
hlt
mov
test
adc
les
push
into
cmp
iret
insb
int
pop
adc
rorb
adc
and
xchg
pop
das
nop
or
in
adc
loopne
ds
lret
dec
rolb
mov
sbb
imulb
sub
pop
sahf
ds
js
jmp
or
jle
mov
lea
adc
iret
decl
or
inc
push
inc
push
and
pop
addr16
push
pop
lea
inc
pop
nop
push
movsl
les
fnsave
push
repz
icebp
cmp
push
and
sub
aad
lods
lcall
mov
fldcw
pop
cltd
xor
aaa
or
aaa
ss
movsl
lods
lock
xlat
inc
inc
ret
cmp
mov
adc
lock
push
rolb
std
pavgb
lea
stos
and
faddl
and
mov
popa
push
out
push
add
je
hlt
pop
mov
push
les
out
jmp
xor
adcb
aad
inc
enter
test
f2xm1
shlb
mov
push
xchg
outsb
mov
fldcw
sahf
clc
or
fbld
push
dec
addr16
add
mov
outsb
adc
xchg
pushf
adc
push
push
sbb
mov
xchg
push
jecxz
xchg
sub
push
and
movsb
rol
test
out
gs
in
inc
inc
enter
add
loop
xor
test
mov
inc
dec
lcall
mov
push
cmpsb
call
or
lahf
sbb
hlt
mov
xor
dec
push
push
inc
jl
and
movsb
mov
push
jle
pop
sbb
insb
outsl
ljmp
push
cmp
mov
mov
sub
cmp
popa
cltd
mov
cli
out
lret
lods
lcall
call
test
add
push
rcll
xchg
pop
inc
nop
insl
flds
stc
sbb
insb
cmp
jae
orb
push
mov
cmp
aas
inc
xor
loop
out
pushaw
pop
pop
stos
xor
out
popf
or
or
out
std
je
pop
lods
loope
outsl
xchg
mov
inc
enter
clc
jne
pop
ret
fucomi
imul
add
in
inc
xchg
push
mov
inc
pushf
push
call
mov
rorb
mov
jp
adc
add
cmpsl
jno
cld
mov
jecxz
loopne
daa
jle
inc
and
in
int3
lret
insb
jno
jmp
xor
push
out
or
fwait
jg
sbbb
xchg
mov
into
and
sti
dec
and
xchg
add
mov
and
jae
insl
jl
push
cwtl
cmpsl
xchg
popa
ljmp
pusha
mov
stos
push
ja
pop
bound
jg
in
xchg
sbb
push
lret
je
adc
lret
sbb
loop
inc
mov
dec
or
sub
inc
outsb
lods
es
push
or
mov
jns
sti
xchg
nop
sub
mov
loope
in
xchg
add
dec
pushl
test
stos
push
dec
aas
ret
xchg
or
xchg
cmpsb
jae
popf
addr16
or
jecxz
and
and
xchg
and
nop
inc
push
mov
lahf
sub
shll
mov
daa
dec
jecxz
repz
mov
xchg
xchg
dec
pop
test
je
xchg
ljmp
out
pushf
and
mov
push
inc
fwait
icebp
ret
sti
outsl
iret
cmc
ja
dec
fiaddl
mov
dec
ljmp
jb
adc
pop
xor
jg
scas
inc
and
xchg
fisttpll
test
dec
sahf
arpl
adc
mov
add
lcall
aad
mov
sub
fwait
jmp
into
scas
or
jae
fisubrs
pop
in
ss
scas
in
aad
mov
in
arpl
sbb
hlt
sbb
das
es
sub
fs
inc
fisubl
hlt
test
pop
and
fdivrs
iret
lea
icebp
sub
mov
fwait
sbb
dec
imul
ret
push
inc
sbb
stos
push
inc
lods
dec
dec
popa
jmp
ret
into
outsl
add
out
filds
enter
or
loop
push
cld
xchg
pop
out
ss
inc
mov
das
fcomps
nop
and
loopne
fbld
jne
jl
mov
or
pop
and
lret
lock
xchg
adc
les
loope
jns
jecxz
push
inc
rcr
adc
aam
sub
cld
leave
in
sahf
push
pop
aam
add
rcll
les
push
testl
imul
sti
outsl
leave
jb
lcall
pop
aaa
shll
stos
arpl
ss
imul
out
sbb
mov
sarl
jo
lock
test
jmp
leave
pop
xchg
add
mov
decb
pop
jo
fdivrs
filds
shlb
fistpll
jae
xor
xchg
add
movsb
or
out
jae
push
loopne
inc
mov
int3
xor
std
fadd
bound
or
xchg
add
inc
jbe
add
and
jnp
add
pop
fstpt
pop
and
dec
mov
test
cmc
ror
loop
pop
push
jae
mov
cmpsl
xchg
mov
lock
sarl
sbb
push
adc
mov
in
repz
or
pop
sub
rcrl
xchg
push
imul
mov
test
mov
or
aad
xor
notb
shll
aaa
popa
sbb
fs
mov
pop
in
mov
outsl
fwait
shrl
xor
pusha
aad
popf
cmp
fstpt
frstpm(287
pop
popa
sub
add
inc
pop
std
ffree
push
loopne
mov
cmp
addl
ror
test
sbb
call
mov
inc
addl
dec
mov
jmp
shr
push
sbb
cld
rcrb
push
movsb
or
imul
jne
lret
fiaddl
sbb
mov
shlb
jp
bound
mov
out
lock
inc
mov
inc
jg
xchg
imul
loopne
fadd
mov
jbe
sub
or
xchg
and
frstpm(287
mov
cli
pop
mov
repz
sbb
sbb
gs
sbb
clc
mov
add
mov
and
scas
adc
inc
xchg
mov
and
pop
pop
and
fwait
dec
repz
jnp
dec
test
cmc
sbb
mov
js
mov
insb
aad
xlat
adc
dec
std
pop
adc
xchg
mov
shr
push
xlat
adc
call
out
roll
loop
cld
mov
push
cmp
sbb
aam
add
fisubrs
aas
push
add
lahf
ljmp
pop
mov
adc
outsb
sbb
adc
dec
jmp
mov
das
in
leave
cmp
or
leave
call
cmp
sub
push
dec
lods
out
scas
mov
mov
xchg
mov
outsl
rorl
cmp
xchg
int
lods
stos
int3
dec
imul
jg
inc
out
std
jae
nop
shl
addr16
mov
push
xorb
or
pushf
sbb
lods
leave
push
or
fcomps
stc
shl
dec
rolb
mov
pop
sti
shrb
push
cwtl
bound
dec
and
lret
dec
call
cmpsl
xor
push
mov
pop
ss
mov
sbb
and
jmp
pop
dec
xchg
cltd
leave
pop
sbb
push
shlb
push
test
lods
jae
mov
fs
mov
and
pushf
mov
add
xor
xlat
loope
js
das
scas
aaa
mov
cmp
pushl
les
dec
imul
mov
addb
adc
dec
pop
xchg
mov
ficoms
test
lcall
in
add
pop
push
cmc
inc
shl
cmp
outsb
pop
cmp
orl
add
xchg
out
setb
xchg
sbb
mov
ret
mov
leave
sbb
sub
pusha
cwtl
sub
into
inc
dec
push
jge
loop
or
jo
fdivl
mov
rorb
nop
adc
outsb
xchg
arpl
scas
cld
sahf
sub
mov
sub
movsl
js
aas
aam
add
lret
scas
add
mov
cmpsl
enter
or
js
add
adc
ret
mov
mov
sub
addl
loope
mov
sbb
xchg
sbb
or
hlt
fmul
je
cs
out
enter
sbb
aam
mov
jmp
lea
push
stos
fsave
in
dec
enter
lods
nop
std
pusha
in
into
rcr
movsb
dec
ds
in
aam
jl
sbb
jp
out
rcrl
scas
in
outsb
fcmovnu
jno
fdivp
rol
cli
add
jmp
sub
add
test
adc
pushf
push
or
cmp
cmp
loop
sbb
sbb
or
sbb
ret
ds
mov
mov
in
jne
xchg
adc
hlt
sbb
jp
add
push
pop
xor
out
push
and
ja
sti
pusha
sbb
addb
test
js
xchg
xchg
push
adc
fisttpl
adc
dec
or
andb
xchg
inc
in
push
inc
scas
clc
push
lods
repnz
add
lret
ret
pop
leave
stc
iret
pop
test
push
push
push
mov
shll
cmpsb
hlt
jmp
mov
aas
in
and
add
lds
xchg
rorl
lret
out
sbb
testb
dec
shl
add
jp
inc
mov
addr16
sahf
jg
add
mov
lcall
or
mov
cmp
xchg
sbb
xor
mov
pop
cmc
repnz
test
mov
es
lahf
jo
mov
adcb
xor
lock
sub
into
rcl
nop
and
cmpsb
daa
mov
repz
xor
add
aaa
pop
jns
call
scas
inc
xlat
mov
out
pop
negl
je
sub
lcall
lds
xorl
outsl
hlt
mulb
sbb
ja
adc
mov
or
popf
and
sub
jl
dec
dec
mov
push
hlt
cmp
int3
fbstp
add
cmp
roll
imul
nop
dec
sub
xlat
push
adc
adc
ds
and
sti
insb
sbb
cmpb
jne
test
mov
mov
ret
add
mov
xor
adcb
insb
inc
inc
pop
xchg
sub
mov
inc
pusha
sbb
sub
dec
add
neg
scas
cli
pop
adc
call
fimuls
rcll
cli
test
add
xchg
fimuls
fstl
inc
in
mov
lret
in
xor
ss
aad
push
stos
icebp
pop
andl
sbb
pop
ja
test
jmp
push
sbb
mov
cld
sub
daa
fsubrl
int3
loope
lcall
mov
lds
add
leave
iret
push
ljmp
push
fidivrl
sbb
imul
stc
mov
dec
loopne
je
push
sahf
cmp
inc
mov
sub
pop
lea
mov
mov
jecxz
jno
jae
jnp
adc
jl
inc
incl
sahf
pop
pop
push
sti
mov
clc
mov
cli
add
mov
cld
dec
jae
fcompl
sub
xchg
push
por
repnz
sbb
clc
int3
xchg
out
xlat
sbb
sbb
shr
loope
pop
xor
or
cwtl
inc
test
loope
or
xchg
dec
jns
inc
movsb
cli
scas
mov
add
add
push
push
in
fstpt
insl
push
and
jmp
mov
out
mov
cld
and
mov
ja
add
sub
push
test
test
jno
cld
negl
sbb
inc
cmpsb
adc
dec
mov
loope
or
and
mov
mov
sbb
test
out
or
ret
mov
insb
stos
ds
int
pop
push
imul
jg
testl
pop
ret
gs
adc
mov
and
xchg
scas
or
addr16
jge
int
lahf
and
movsl
imul
popf
shrl
sbb
jle
test
xor
push
xor
add
repz
pop
pop
stos
dec
xchg
dec
jl
push
or
mov
adc
jp
push
insl
jbe
mov
mov
xor
pop
loop
and
imul
dec
xchg
dec
push
jecxz
xor
inc
lea
into
mov
adc
pop
add
mov
and
cmpsb
sbb
cmp
daa
insb
xchg
rol
stc
push
xlat
and
adcb
push
insl
push
or
ds
fdivl
xor
sbb
xchg
fisubl
mov
pop
rcrl
int3
popa
int
inc
xchg
push
hlt
mov
mov
fcompl
dec
xchg
data16
dec
add
xor
sbb
shrl
hlt
stc
mov
or
mov
sbb
pop
mov
arpl
jl
fcmove
test
cwtl
sub
addl
xchg
dec
jecxz
xchg
btr
sbb
into
sahf
add
sub
iret
mov
rcrb
cli
out
push
mov
std
inc
add
clc
ret
mov
jl
xorl
adc
mov
inc
jl
filds
lds
dec
mov
mov
lcall
daa
into
into
pop
fs
stos
xor
out
ret
int
sub
push
loope
shlb
lret
stos
or
pop
ljmp
and
jae
sbb
mov
sarb
mov
sbb
or
mov
int3
push
sbb
roll
xchg
mov
dec
pop
adc
mov
js
add
in
filds
mov
push
outsl
ds
call
mov
and
test
xchg
je,pt
mov
int
ljmp
es
xlat
mov
jo
ljmp
push
xor
and
cmpb
outsb
jle
inc
xchg
xchg
movl
push
addr16
lret
loop
sahf
mov
sub
and
and
jo
pop
sub
stos
stc
xor
dec
cli
lcall
push
pushf
dec
add
ret
add
scas
int
cwtl
scas
stos
cli
outsb
aaa
test
push
mov
es
fstps
jne
jg
xchg
cmp
and
dec
inc
push
xchg
mov
clc
popf
xchg
dec
add
cwtl
lods
mov
imulb
vdivpd
scas
jp
and
movb
add
xchg
and
add
or
sub
out
cmp
add
pop
sub
movsb
mov
popf
in
mov
insl
dec
pop
stc
pop
or
call
movl
sbb
and
or
fisubl
aas
add
movsb
repnz
movsl
arpl
push
jl
loope
ja
popa
mov
push
int3
ljmp
dec
mov
shll
das
fiaddl
add
add
test
pushfw
lcall
ljmp
subb
shrb
sub
mov
jge
sbb
std
mov
dec
adc
cwtl
andb
out
and
cmp
jno
in
test
dec
or
sub
mov
inc
ror
add
inc
aad
scas
pop
mov
cmp
jmp
fprem
push
cmp
xchg
mov
iret
shl
js
cmp
mov
mov
pop
mov
mov
out
fistps
mov
xchg
cmp
xor
add
xor
sahf
lds
test
and
in
add
xorl
or
lret
lret
xor
jmp
fdivl
adc
imull
jns
jbe
mov
xchg
adc
js
inc
push
fstpl
movsb
pop
sahf
ljmp
shrb
pop
and
rorl
and
popf
dec
out
sysret
shll
sarl
stc
ljmp
lret
sub
sub
sbb
mov
fisubl
cli
rcll
cmc
cmpsl
mov
stos
or
adc
rclb
sub
cmpsb
or
shrl
xlat
mov
imul
test
data16
xchg
jae
out
lcall
loope
int3
pop
pop
push
scas
idiv
rcrb
iret
leave
sbb
xchg
lock
into
pop
add
xchg
lods
dec
push
fidivrl
shrl
mov
shl
scas
scas
sub
fld1
test
leave
mov
add
sub
je
outsb
shrl
std
pop
sub
cmp
cmp
movlps
add
stos
xchg
mov
push
xchg
mov
loope
scas
dec
cmp
push
add
lods
testl
nop
and
pop
cmpb
jg
sub
mov
add
push
repz
out
push
add
mov
mov
into
add
pop
xchg
ss
stos
stc
jmp
dec
dec
inc
or
pop
cmp
inc
xor
ds
cmpsl
sahf
sbb
outsb
cmc
lret
test
cld
push
add
insl
mov
stos
dec
popf
push
out
adc
stc
mov
or
fsubrl
test
dec
in
test
mov
cmp
xor
adc
xor
andb
sbb
insl
xchg
in
shr
inc
fwait
mov
jns
push
jge
fcmovbe
test
ja
insl
pop
orb
cmp
aaa
cmp
dec
pop
sbb
dec
push
push
pop
lods
lahf
push
hlt
adc
fwait
icebp
jmp
outsl
or
mov
sbb
sbb
adc
pop
aam
sub
jb
aam
dec
jmp
sbb
inc
xor
cs
dec
inc
cmp
out
rolb
std
pop
or
les
fwait
aad
in
mov
add
mov
pop
push
dec
push
lret
jno
add
loopne
stc
addb
sub
in
cli
inc
push
and
fisubl
push
das
adcl
loope
mov
mov
lds
inc
add
shll
leave
in
pop
mov
andb
pop
xchg
mov
mov
repnz
je
xchg
fmull
test
stc
xchg
xor
add
pop
fwait
cmp
cli
imul
push
xchg
insl
mov
xlat
rolb
cwtl
push
mov
cmc
or
insl
jge
lods
adc
cmp
or
cmp
lret
cmpsl
xlat
aam
sub
mov
dec
pop
or
filds
mov
imul
fsub
hlt
inc
sub
push
call
fnsave
adc
rcl
stos
cmc
insb
movsb
jecxz
mov
push
push
rclb
js
mov
pop
and
ret
fnstenv
adc
jmp
pop
lret
out
adc
insb
xor
jmp
cmp
mov
mov
jl
jbe
mov
int
jae
pushl
or
pusha
jecxz
or
hlt
add
mov
and
mov
out
adc
in
add
ud0
add
sbb
or
sti
cli
test
int3
push
pop
mov
and
dec
shll
cld
es
scas
and
je
sbb
leave
xchg
or
add
cmp
dec
pop
out
faddl
xor
inc
push
cmp
xor
lods
pop
push
mov
das
pop
xor
into
push
sbb
xor
aam
add
or
stos
test
stos
cmp
out
test
sub
add
movsl
cmpsb
in
std
add
or
lea
out
cs
in
cmp
push
fsubrs
mov
push
xor
leave
nop
mov
imul
mov
pop
dec
rcr
sbb
out
add
lret
jmp
sbb
sbb
ss
int
test
pop
cmp
int3
xor
jb
popf
add
hlt
push
lds
test
adcl
leave
sub
mov
lret
arpl
or
mov
sbb
push
inc
fwait
mov
sub
in
int
cmpsl
mov
push
or
jo
ja
int
pop
stos
and
sub
jae
mov
add
jmp
mov
out
fldt
pop
iret
xor
prefetcht0
adc
xor
add
adc
push
push
lods
cmp
sahf
cltd
push
cli
sub
lcall
lahf
sbb
roll
mov
shl
push
aam
shll
inc
cmp
adc
jne
arpl
adc
movsb
inc
lahf
add
push
mov
push
inc
push
cmpsb
and
add
js
sub
push
js
xchg
adc
sub
and
mov
fsubrs
std
cld
mov
adc
pop
mov
arpl
aaa
mov
push
pop
jae
adc
pop
and
aam
and
mov
mov
mov
jae
jns
or
sub
in
add
or
push
inc
lds
add
cld
adc
sub
jbe
int3
bound
xor
xor
cmpb
xchg
lret
sub
inc
repnz
xchg
or
pop
enter
mov
add
ret
hlt
xor
imul
outsb
add
mov
lret
repz
cmpsb
sbb
lds
into
and
test
hlt
and
or
xor
dec
cmpb
dec
mov
cmp
sub
scas
add
std
sub
cs
loop
orb
std
cmp
out
jle
clc
add
notl
popl
push
jp
scas
hlt
fcoms
push
jo
adc
or
iret
andb
lea
movsl
jo
and
loope
mov
lahf
mov
push
dec
push
and
push
inc
xlat
dec
daa
je
mov
in
mov
into
sti
jns
ljmp
add
or
adc
xchg
add
jae
or
inc
dec
inc
jg
jle
loopne
dec
jg
jge
xchg
sbb
push
mov
xchg
adc
or
roll
bound
add
pop
dec
adc
pop
arpl
scas
test
and
pop
inc
jae
in
fisubs
or
adc
adc
js
lret
int3
fildl
adc
call
mov
sbb
es
psrlq
xor
push
or
out
call
jecxz
cmp
fwait
dec
out
cld
rcr
push
out
push
fwait
ret
cmp
test
cmp
xchg
cmp
xlat
ret
pop
adc
xor
push
int3
xchg
or
cmp
addr16
adc
dec
xchg
push
ret
inc
push
int3
rolb
sbb
aas
sbb
ss
mov
cwtl
ss
sbb
dec
mov
mov
pop
jmp
imul
or
sub
push
mov
cmp
insl
lret
inc
adc
mov
notl
inc
rcll
or
mov
dec
jmp
add
loopne
popa
inc
ret
rorl
pop
sbb
cli
or
adc
int3
cmpsb
mov
clc
jmp
lea
enter
leave
add
adcl
jle
les
mov
pop
negl
pmaxsw
rcll
mov
adc
std
ljmp
test
cld
imul
mov
jmp
dec
ficomps
dec
mov
into
imul
and
xchg
inc
rcr
sub
xchg
jle
or
scas
stos
jb
push
adc
imul
jl
xor
lahf
iret
js
cmpsb
cmp
movsl
adc
movsb
lcall
xchg
rcr
mov
xor
div
enter
sbb
cmp
mov
aam
scas
sub
sub
cmp
mov
jb
sub
inc
rorb
test
dec
xchg
lret
hlt
or
mulb
jge
mov
jp
xor
shr
test
push
push
cltd
xlat
pusha
adc
mov
mov
xor
aas
roll
push
roll
cmp
pop
mov
daa
ficoml
jnp
les
shrb
cld
lds
adc
dec
add
mull
sbb
mov
ds
push
lods
add
pop
outsb
loope
lcall
int3
fs
dec
jmp
mov
cmp
inc
fnstcw
aas
mov
pop
xor
jno
mov
pushf
mov
lcall
clc
call
xchg
clc
mov
clc
xchg
lods
rorl
cmpsl
jmp
xchg
add
in
or
adc
cli
jge
psubsw
sbb
lock
push
arpl
cs
stos
notl
ds
dec
lods
lds
les
or
pop
js
xor
insl
push
xchg
add
push
sarl
cmp
add
lods
dec
mov
shrb
xchg
add
jge
pop
mov
pop
dec
pop
push
and
stos
inc
stc
mov
or
test
hlt
fnstenv
outsb
pushf
xchg
scas
jl
int
hlt
push
and
mov
inc
sbb
sbb
add
pop
addr16
and
add
xchg
mov
mov
into
outsl
inc
jmp
frstor
push
movsb
scas
dec
cltd
stos
ret
push
int3
pop
dec
into
cld
mov
sub
add
pop
mov
inc
mov
xchg
pushf
outsb
xor
pushf
mov
daa
cmp
lahf
push
aad
clc
dec
pop
mov
sub
mov
push
mov
push
cli
jmp
or
int3
sub
repz
and
lret
add
mov
sbb
dec
test
out
cmpsb
mov
aam
mov
in
repnz
add
shll
jl
pop
in
fwait
xchg
imull
ljmp
frstor
setb
cld
out
lcall
or
sbb
xchg
fstpl
adc
and
icebp
outsl
mov
inc
mov
inc
into
jae
imul
add
icebp
out
sbb
add
xor
pop
cld
cmpsb
inc
jecxz
push
sub
psrlq
sbb
jae
mov
xor
inc
lods
out
jo
ja
mov
mov
inc
in
jbe
shrl
hlt
jno
mov
ja
adc
in
dec
lods
outsb
lds
lods
int
jmp
add
lock
faddl
clc
dec
dec
divpd
lds
cmp
ret
push
loope
fildll
mov
add
movd
pop
loop
jmp
jae
xor
push
fdiv
mov
cmp
push
rorb
je
sbb
push
lret
xchg
leave
inc
xchg
cmp
int
lock
icebp
add
xorl
xor
icebp
aam
in
rol
mov
test
push
rcll
jge
dec
xchg
movsl
mov
mov
insl
jmp
or
mov
xchg
adc
jp
pop
pop
fs
test
insb
ja
jg
paddusw
loop
test
xorl
or
shl
mov
mov
add
xchg
ja
inc
and
in
xchg
je
in
lds
or
or
xchg
jnp
jge
pusha
cmp
push
std
dec
shld
idivb
sbb
cmpsl
cmp
inc
aam
adc
dec
jns
xchg
arpl
add
outsl
and
dec
lret
push
ds
add
push
neg
ja
add
addb
leave
push
ret
daa
mov
add
add
rcr
bswap
ret
mov
rcrb
xor
cltd
loope
out
xor
int3
shrl
rcl
mov
in
jbe
mov
rorb
mov
inc
mov
inc
movsl
cmc
dec
or
add
cltd
fistps
out
jg
loop
icebp
mov
fsubrp
mov
ret
add
jl
fsubl
insl
loopne
rcll
fisttpll
adc
iret
mov
jno
sbb
pop
add
sarl
icebp
add
call
syscall
imull
outsb
add
bound
pop
std
ret
lret
leave
roll
lds
xchg
push
lret
sbb
mov
mov
inc
inc
lahf
pop
outsl
leave
jl
ret
cmc
jne
lods
pop
mov
sub
lret
ds
fists
adc
push
out
inc
std
es
bound
fstl
mov
imul
jbe
inc
xchg
mov
aad
jl
dec
sbb
xchg
pop
add
mov
dec
mov
adc
and
fld
ret
in
enter
lret
lcall
or
mov
inc
les
mov
pop
mov
movsb
cwtl
and
mov
lock
jo
and
les
mov
xlat
lea
and
enter
pop
lret
insb
lock
lods
fnstenv
mov
ror
pushl
xor
repnz
cwtl
lret
dec
lods
in
test
insl
xchg
pop
out
bound
lock
xchg
cs
push
push
fsub
inc
dec
shlb
dec
clc
jecxz
testl
pop
dec
sbb
pop
jmp
in
es
mov
adc
test
jp
lods
pop
cld
in
push
inc
loopnew
sub
mov
add
ret
leave
adc
adc
or
pushf
lahf
add
mov
popa
pop
mov
js
lcall
add
mov
and
push
xchg
jb
iret
xchg
pop
fiadds
xchg
inc
iret
lcall
frstor
cmp
and
out
push
pop
movsl
loope
adc
cs
scas
les
out
and
and
imul
push
and
pop
lret
or
addb
ja
sub
fisubrl
test
jg
fimuls
in
inc
adc
ret
add
xchg
adc
xor
sbb
jns
dec
xchg
sahf
testb
inc
stos
add
lcall
xor
pusha
in
inc
push
and
dec
cltd
fiadds
pop
out
in
ss
inc
aam
lods
addb
mov
xlat
es
jl
aas
push
mov
out
test
lret
mov
adc
lds
mov
xchg
imul
cs
add
cwtl
sub
mov
push
fidivs
adcl
lods
pop
mov
inc
sub
ljmp
push
or
rcll
push
aad
adc
out
pop
test
and
movsb
mov
pop
call
jne
push
add
outsl
inc
mov
js
xchg
cs
test
sbb
enter
inc
xor
pop
jne
repnz
inc
xchg
scas
push
icebp
jns
sbb
in
bound
cmp
cmp
rcrl
ds
fs
outsb
jg
cmpsl
mov
mov
mov
loope
fs
fiaddl
cwtl
xchg
sti
mov
jg
vorps
scas
jle
push
mov
outsb
mov
aad
jp
sbb
push
loopne
mov
pop
dec
push
lods
and
lock
sahf
enter
pop
lods
test
push
lahf
sbb
sbb
iret
push
pop
or
int
pop
jl
push
mov
imul
mov
test
lcall
add
add
divl
mov
fs
jmp
out
sub
lock
xchg
in
jp
pop
movsl
aam
mov
lods
xchg
adc
repnz
inc
cmpsb
movsl
inc
add
jb
leave
es
fsubrs
daa
sbb
mov
mov
mov
pop
push
and
dec
stos
push
in
popl
subb
repz
data16
inc
dec
sahf
repnz
sub
sbb
mov
je
add
pop
out
cmp
rcll
add
clc
dec
or
rcr
push
add
test
and
adc
lret
pop
adc
mov
hlt
add
test
inc
push
int
clc
mov
cltd
pushf
and
je
ja
inc
xchg
cwtl
cltd
aad
cs
mov
pop
push
add
cli
dec
mov
mov
test
sub
pop
clc
inc
test
fwait
cmp
adc
fcmovne
jmp
dec
sahf
mov
mov
mov
jp
mov
cmp
push
lds
in
std
mov
out
fimuls
fdivrp
pop
adc
out
push
psubw
pop
add
jl
in
fwait
ljmp
and
fidivl
andl
push
call
out
xchg
fadd
mov
mov
daa
mov
scas
push
xchg
mov
je
loop
mov
es
scas
test
mov
imulb
cmp
add
push
rclb
aaa
mov
push
xor
adc
mov
cwtl
ret
ljmp
inc
decl
xchg
xor
test
pushf
and
sub
cmpsb
dec
mov
test
mov
mov
and
cmpsl
add
inc
mov
cmc
push
bound
jecxz
or
mov
jg,pn
loop
das
ja
sub
lea
scas
hlt
popf
pop
inc
mov
je
xor
sub
shrl
lahf
pop
push
add
cmp
dec
dec
mov
add
xchg
mov
push
fs
sub
lds
jmp
arpl
xlat
sbb
nop
ret
cmp
pop
popa
cltd
mov
adc
pop
cmc
movsb
out
cwtl
mov
in
xor
dec
ror
lcall
xchg
outsb
add
stos
dec
push
into
mov
mov
mov
push
pop
sbb
sbb
cmpsl
push
add
mov
mov
insb
mov
pop
lret
hlt
cmp
dec
out
fistpl
sbb
in
movsl
or
pop
add
adc
cmp
inc
and
cmp
cmp
cmpb
dec
pop
sub
aam
dec
or
dec
sbb
fwait
mov
fidivrs
xchg
repnz
popa
dec
adc
stos
sub
rol
pop
and
mov
sbb
scas
shll
shlb
push
push
cli
cmp
push
dec
and
or
sbb
stc
cmpsl
arpl
or
jne
in
je
and
mov
popa
push
adc
paddusb
pop
stc
push
sarb
enter
in
pop
cmp
inc
or
xchg
les
in
push
xchg
fstps
sbb
xchg
mov
mov
jge
es
sti
scas
mov
mov
mov
ret
mov
or
dec
ss
push
xchg
and
lea
enter
lcall
dec
stc
jle
push
test
jbe
mov
mov
fdivs
dec
rcrl
push
mov
jle
sub
lods
and
out
cli
clc
iret
inc
mov
int
cmpsl
sbb
xchg
mov
lret
sub
xchg
pop
xor
jmp
mov
repnz
rorb
rcll
jmp
sbb
add
add
dec
das
enter
adc
cs
movsl
mov
cmpsl
sbb
mov
mov
rcrb
dec
jae
rcrb
rcrb
test
jo
call
mov
hlt
maskmovq
imull
sahf
movsl
cmp
das
test
mov
sbb
dec
in
dec
in
pop
pop
stos
into
repnz
loop
jmp
insl
inc
sbb
cli
push
aaa
dec
in
movsb
jle
dec
inc
inc
sbbl
mov
dec
pop
mov
insl
addr16
clc
pop
jg
pop
sub
scas
lret
pop
in
xlat
fmul
jae
xor
push
fwait
jmp
and
mov
add
mov
mov
inc
lds
dec
lcall
repz
es
adc
iret
fidivrl
dec
inc
in
push
sub
mov
cmp
scas
mov
adc
frstor
mov
pusha
nop
out
xor
mov
cmp
dec
sbb
inc
nop
test
pop
mov
in
mov
and
shlb
repnz
push
lcall
xchg
fs
das
pop
test
les
rolb
call
aas
sbb
add
xchg
push
cwtl
loopne
inc
scas
movsl
lret
pop
into
xchg
filds
lods
data16
mov
jno
ret
jmp
les
mov
ret
add
mov
cmp
cli
ret
lahf
call
shrb
lds
mov
dec
push
sub
mov
fldcw
bound
in
push
jb
xlat
or
ficompl
and
mov
adc
popa
mov
sbb
xlat
stos
or
loop
cmpsl
out
inc
aad
fildll
jmp
pop
gs
sbb
sbb
push
leave
xchg
mov
aaa
roll
sub
sbb
cltd
xchg
insl
mov
xor
mov
leave
cmp
out
adc
mov
arpl
and
sub
push
aam
xor
pop
dec
xchg
mov
insb
leave
ss
sahf
pop
pop
insl
pop
and
inc
pop
hlt
aad
sbb
enter
repz
cmp
outsl
shrl
arpl
dec
popa
mov
call
movsb
popf
push
faddl
mov
lcall
jns
int
cmpsb
cmp
xchg
lock
mov
dec
cmpsb
sbb
aaa
lock
and
dec
ficomps
push
jecxz
cmp
sbb
adc
je
stos
add
repnz
sub
dec
fnstenv
lods
ds
scas
cld
mov
mov
imul
or
xchg
jmp
jmp
mov
mov
xchg
les
leave
test
inc
loop
dec
pop
sarb
or
adc
inc
mov
dec
fcomps
mov
and
sarb
stc
pop
test
out
lds
push
and
mov
xchg
dec
push
aaa
aaa
cmp
mov
scas
or
and
jb
adc
movl
shl
inc
push
add
jp
shll
mov
push
sbb
pushf
mov
imul
jecxz
clc
adc
sahf
xchg
test
cltd
testl
inc
data16
adc
pop
cmp
insl
fadds
jecxz
stos
mov
xchg
dec
push
in
and
fwait
xor
adcl
data16
cli
adc
and
xlat
or
push
insl
and
scas
fdivrl
mov
pop
sub
in
nopl
les
xchg
sbb
ret
dec
pusha
jnp
xchg
mov
inc
enter
gs
insb
dec
divb
xchg
mov
lret
or
jo
sub
add
add
inc
xchg
sbb
push
xor
test
out
lds
aad
iret
cmp
xchg
add
mov
jbe
cltd
leave
fwait
testb
mov
xchg
jg,pt
sti
mov
cwtl
imul
data16
test
mov
mov
ret
scas
jo
sbb
xchg
loopne
sub
cs
push
aam
adc
ss
out
subl
mov
adc
outsl
out
mov
mov
sbbl
psadbw
stos
fildll
les
js
ss
xchg
fdivs
ja
lods
lea
pop
loope
mov
dec
sbb
mov
sub
dec
jp
jl
jge
mov
mov
rol
or
mov
inc
push
add
mov
gs
cmpsl
jp
sub
mov
lea
push
dec
sub
pop
xor
int3
or
and
xlat
push
xchg
adc
sub
mov
cmp
cld
in
mov
repnz
pop
mov
icebp
stos
sub
dec
inc
outsl
imul
imul
mov
cs
inc
ret
out
cmp
xor
adc
pop
pop
popf
addr16
dec
cmc
scas
pop
cmp
cmp
pop
hlt
leave
invd
popf
mov
lret
xchg
cwtl
push
mov
cltd
lret
nop
paddusw
inc
outsl
btr
repnz
push
icebp
call
xor
adc
inc
iret
jnp,pt
movsl
scas
xlat
aas
pop
sarl
dec
fsubrp
test
hlt
and
mov
xor
scas
movsb
mov
sub
inc
lcall
loope
rcll
outsl
in
jbe
mov
pusha
int
pusha
jmp
movsl
sahf
mov
xchg
shll
lret
adc
pop
out
lahf
mov
sub
push
xchg
scas
into
icebp
xor
and
mov
out
data16
mov
add
add
add
push
adc
lahf
push
sbb
and
sbb
mov
ret
jp
test
cmp
xchg
adcl
xor
fwait
test
inc
outsl
adc
inc
sbb
adc
and
pop
and
or
cmp
sub
enter
mov
leave
mov
in
bound
add
push
dec
aam
jb
jle
std
pop
in
xor
add
or
dec
mov
popf
sbb
subl
outsb
iret
es
mov
sbb
fsubrp
adc
pop
daa
push
xchg
mov
ja
add
ret
dec
push
push
cmp
dec
shrl
add
xchg
push
jbe
mov
ret
pushf
inc
sahf
mov
clc
xchg
push
fdivrl
icebp
in
shl
jne
xchg
or
jle
add
push
mov
les
clc
jmp
push
imul
sbb
jae
sbb
ljmp
cmpl
psrad
loope
ss
mov
cmpsl
rcr
scas
ret
mov
test
jmp
aad
cs
pop
or
mov
fisubl
stos
sub
inc
mov
repnz
pusha
das
push
mov
aam
inc
inc
divl
push
mov
jne
test
push
and
add
add
test
repnz
repz
test
lcall
push
jecxz
mov
test
repz
jne
dec
std
inc
add
pop
mov
sti
pop
xchg
push
mov
xlat
hlt
xchg
sub
xchg
pop
ss
ljmp
mov
sahf
je
test
adc
dec
in
xor
cli
and
inc
roll
xchg
or
fldenv
in
int3
mov
dec
cmpsl
jmp
dec
sahf
xorl
fsubp
and
inc
mull
mov
mov
mov
dec
inc
repz
jle
sbb
les
cmp
sar
xchg
mov
test
dec
pop
mov
cld
or
subb
leave
mov
cmp
cld
sbb
adc
inc
inc
xlat
ja
out
mov
mov
cmpsl
mulb
add
insb
mull
push
fscale
xchg
gs
inc
pop
clc
sahf
iret
pcmpgtd
adc
loope
inc
and
inc
pop
loopne
sahf
xchg
and
lahf
adc
mov
dec
push
sub
dec
ror
sbb
js
daa
add
sbb
fs
push
cli
lods
aaa
imul
syscall
and
inc
cmp
jl
test
add
popa
inc
add
pop
sti
popa
cmp
sub
inc
inc
push
cmc
rcrb
ljmp
pop
in
ljmp
dec
mov
dec
mov
out
inc
pop
fadd
pop
mov
nop
es
cld
in
jae
push
ret
pop
jne
and
lcall
fstl
cli
out
loop
and
jo
mov
sub
add
lods
push
out
fsubr
mov
clc
dec
mov
mov
imul
add
sbb
mov
loop
jbe
lret
rcrl
push
pusha
rcrb
and
push
jl
aam
and
lret
fbstp
xchg
mov
scas
add
mov
out
mov
adc
dec
aas
jbe
or
ffreep
js
and
sbb
mov
jno
or
ds
xchg
xor
les
pushf
arpl
test
scas
inc
scas
mov
testl
sub
ret
inc
dec
fnstenv
popf
int
jg
jmp
out
outsb
clc
xchg
cwtl
rep
cmpsl
test
push
sub
adc
sub
xor
jno
test
aad
cwtl
xchg
add
add
jmp
mov
or
pop
dec
push
dec
sbb
fdivl
add
adc
shrl
and
mov
ljmp
dec
mov
scas
std
leave
lsl
mov
cmp
insl
ror
pop
inc
jp
xor
sub
lahf
lods
loop
xchg
movsb
inc
sahf
lret
stos
shrb
adc
popa
fcoms
dec
cli
je
sbb
out
adc
fwait
aam
push
aad
in
pusha
leave
jecxz
jne
mov
pop
int3
sbb
cmp
mov
cmp
movsb
sub
mov
das
push
dec
xchg
cmpsl
mov
mov
pop
push
xor
push
dec
cmpsb
cs
xor
lret
fldl
mov
in
mov
add
jge
in
jg
jae
adc
sbb
mov
test
push
popf
ja
lods
fs
pop
in
shl
cwtl
sti
inc
add
mov
imul
jmp
cmpl
push
mov
mov
ljmp
fidivrs
mov
or
mov
pop
fsubl
subl
out
loope
loop
mov
mov
sub
pop
cs
adc
inc
pop
in
ret
ret
sub
sub
inc
inc
arpl
inc
sbb
xchg
sub
repnz
aad
mov
pop
fimull
or
cmpsb
inc
sbb
jb
rol
bound
test
jl
push
jg
push
int3
in
pop
aas
xchg
movsb
movsl
je
xchg
pop
push
xchg
cmc
cwtl
into
inc
xchg
mov
ljmp
outsb
stos
jmp
dec
jecxz
mov
cltd
rorl
aaa
aad
mov
jge
jb
mov
sub
sbb
sub
mov
fldl2t
push
pop
hlt
mov
je
mov
scas
arpl
mov
iret
aad
scas
cmc
lahf
mov
sbb
cli
insl
add
add
mov
and
cli
push
shll
out
repnz
jl
push
push
in
in
cmp
mov
fnsave
jg
add
clc
nop
jl
movsl
cltd
aas
divb
popf
mov
or
movsb
dec
data16
mov
pop
bound
mov
leave
sti
jmp
test
out
xchg
or
std
ret
lret
ud0
movsb
aaa
aam
mov
add
or
push
ljmp
mov
in
pop
aad
push
ds
fcmovnb
and
sahf
mov
rcrl
sbb
pop
mov
push
adc
xchg
push
push
lods
add
fnsave
fidivl
sti
lock
sbb
cmp
xlat
add
mov
or
idivl
aas
jmp
add
aad
in
cli
out
out
pusha
jb
idivl
dec
int
ds
add
xchg
pop
and
scas
insb
cmpsl
xchg
mov
out
mov
xchg
or
xor
inc
cmpsb
inc
ffree
std
insb
push
mov
in
jmp
cvtps2pi
push
fldl
pusha
or
dec
pusha
enter
inc
dec
mov
and
mov
les
add
dec
mov
icebp
and
xor
lret
push
fwait
mov
cmp
inc
setnp
add
fidivrl
shrl
insb
test
lret
mov
shr
lods
fs
and
movsl
iret
mov
das
cwtl
enter
out
and
mov
mov
mov
sbb
in
pop
shrb
push
sti
inc
inc
cmp
fistps
inc
push
pop
sti
es
add
mov
movups
xchg
xchg
push
cld
xchg
or
xchg
lods
xchg
jg
mov
add
add
imul
xor
fwait
pop
sbb
notb
or
fdivrs
mov
or
lcall
mov
cmp
stc
xlat
pop
push
int3
lods
inc
adc
adc
loop
inc
pop
sti
cwtl
mov
pusha
jmp
stos
fidivrs
incb
clc
mov
negl
push
jl
sbb
add
movsb
cmp
cmc
int3
xchg
push
add
mov
orb
cmp
xor
xlat
paddsb
xchg
sbb
push
rcrb
imul
fs
pop
pop
adc
mov
sbbl
cld
mov
inc
and
in
movsl
rorl
andl
xchg
jl
lods
pop
aad
scas
xor
mov
pop
inc
dec
sbb
mov
rcrb
push
jb
push
pushf
lcall
shr
sub
and
inc
or
aaa
or
out
lods
lea
sbbb
cmpsl
pop
pop
or
pop
fnstsw
mov
outsl
mov
cmp
inc
jg
fmuls
fsubrs
add
adc
out
dec
add
out
push
cltd
xor
or
mov
adc
orl
clc
frstor
xchg
mov
or
mov
cld
xchg
jecxz
xor
movsb
add
pop
cli
test
pop
pop
lcall
cmpsb
or
lret
xor
cwtl
test
fucomi
mov
cli
add
mov
orb
mov
fidivrs
cwtl
jl
inc
shrb
cmp
ret
ja
sub
or
add
cmp
fucom
hlt
add
es
cld
sarl
mulb
test
in
mov
jl
xor
xchg
or
jb
mov
mov
cli
xchg
inc
mov
jbe
push
decb
mov
push
cs
jmp
add
sbb
mov
int
mov
sub
mov
lcall
and
ficomps
repz
loop
and
xor
mov
jno
dec
xchg
nop
cs
mov
xchg
jnp
andl
outsb
lock
cmp
out
mov
adc
aam
and
xchg
insl
ret
mov
je
shrb
movsl
mov
aad
movb
nop
fwait
mov
movsb
mov
add
loop
inc
loope
gs
movsb
cmp
jbe
jmp
or
subl
mov
mov
xchg
fwait
or
push
sbb
mov
inc
mov
inc
dec
ss
aaa
mov
in
out
xchg
movsl
ss
bound
inc
push
sbb
xlat
js
add
and
or
xor
outsb
mov
mov
pop
cmc
inc
sub
mov
fcmovbe
fisubl
gs
mov
test
imul
xchg
jno
in
repz
sbb
adc
push
xor
adc
push
sub
sub
jo
sub
in
fwait
jle
repnz
in
out
test
sub
adc
mov
inc
inc
lods
ret
ret
lock
ds
mov
pop
into
and
or
test
or
int3
sbb
xchg
lods
in
rclb
stos
jne
std
in
das
cmp
xor
iret
enter
mov
xchg
xchg
jb
and
imull
out
jmp
mov
pushf
lock
xor
sbb
push
pop
stos
repz
nop
addr16
ret
lock
sub
push
dec
movsl
sbb
mov
jl
ficoml
push
mov
ret
mov
xor
pop
idiv
adc
mov
dec
loop
inc
lret
pop
pop
enter
mov
pop
lds
add
add
sub
es
je
pop
cld
mov
mov
std
cmp
cwtl
lods
and
loop
add
sbb
sub
fadds
aad
ja
sub
push
jecxz
mov
shll
dec
xchg
mov
add
pop
mov
jne
ret
in
sbb
sbb
imul
jb
loopne
sub
sbb
sbbl
insb
mov
or
dec
mov
push
cld
outsl
mov
sbb
int3
dec
sbb
jbe
enter
rcll
mov
sub
insl
fimull
add
pop
pop
jnp
scas
push
xor
xor
roll
mov
insb
out
adc
sti
pop
jg
xchg
adc
mov
pop
or
mov
adc
shll
sbb
push
and
out
xchg
cmc
and
pusha
mov
aaa
out
adc
push
sti
int3
orb
add
dec
push
xor
imull
lods
sahf
sbb
mov
xor
int3
xlat
sub
cld
and
arpl
call
lret
cmp
push
mov
lcall
push
push
ficoms
inc
mov
lods
xchg
sbb
in
pop
movsb
fdivrs
push
bound
adc
lret
stos
inc
ret
lret
mov
stos
adc
mov
movl
adc
fmull
jnp
lods
xor
fsubs
fldl
jns
jb
xor
call
sub
mov
jno
stc
sub
imul
mov
ja
fcmovnb
mov
adc
and
aas
mov
call
test
inc
bound
loop
jbe
icebp
testl
add
push
pop
add
aad
ljmp
dec
inc
gs
add
pop
mov
mov
mov
loope
jb
and
mov
push
xchg
adc
push
ret
sub
dec
loope
push
pop
sarb
bound
mov
icebp
xor
mov
clc
scas
mov
lret
lds
int3
sub
out
out
push
les
stc
fdivp
xor
pusha
push
push
cmc
imul
pusha
mov
outsb
fucomip
dec
xor
mov
lock
orb
mov
out
ret
fadds
xchg
mov
and
pop
mov
dec
cmp
or
ret
inc
je
cmc
xchg
add
mov
xor
jno
xchg
lcall
inc
jmp
leave
popa
clc
jnp
add
pop
push
enter
addb
cwtl
cmp
insb
xchg
cmpsb
and
shlb
out
or
cmp
repz
sbb
push
bound
lea
cmp
out
das
xchg
jmp
lret
mov
jae
scas
or
ret
dec
sahf
jmp
mov
sti
mov
addl
add
enter
ljmp
std
stc
lods
pop
jmp
scas
dec
cmpsb
xchg
out
adc
dec
subl
stc
popf
mov
adc
insl
aas
bnd
jl
xor
ljmp
mov
inc
inc
dec
cmp
sbb
mov
and
in
lods
insb
dec
xchg
cmp
push
push
and
sbb
insb
jns
loop
pop
out
std
aas
insb
icebp
jns
fs
rol
mov
test
jno
inc
test
inc
mov
push
lods
jmp
insl
dec
mov
mov
pop
mov
jmp
outsl
fcomps
jb
sbb
inc
ljmp
rcrb
sbb
push
fisttpl
push
in
insb
in
xlat
pop
movsl
fstpl
cmp
fisubs
mov
mov
aaa
dec
sub
clc
fnstsw
lea
cld
inc
sbbb
cltd
sarb
mov
adc
sub
jp
jb
test
mov
fidivrl
test
sti
mov
jecxz
lock
stos
dec
int
pushf
lock
cltd
xlat
and
fs
pop
call
out
out
int3
sahf
addr16
fwait
cld
leave
call
xor
outsb
cmpsl
push
aas
mov
and
loope
test
cwtl
add
inc
add
mov
ja
test
testl
adc
jecxz
inc
jg
adc
sahf
mov
out
push
push
negl
aad
pop
testl
pop
adc
cmpl
push
arpl
jne
rorl
pop
call
mov
or
xorb
add
pop
popf
es
pop
cwtl
out
xchg
cmpsl
lods
jbe
xchg
decl
cmp
jp
jo
sub
subb
mov
lret
call
rolb
rol
in
daa
call
sbbl
sarb
cs
cltd
aad
and
or
jns
or
xor
pop
cwtl
clc
adc
jb
mov
dec
push
cli
push
mov
mov
mov
out
jae
fstpl
xor
pop
mov
cs
jmp
dec
repz
mov
push
mov
inc
test
loope
imul
cmp
loopne
jnp
pop
pop
adc
jp
outsl
or
mov
ss
jle
jl
loopne
xchg
mov
out
call
push
stos
xor
sbb
mov
outsl
inc
ret
mov
sbb
out
and
clc
inc
jae
popf
jmp
add
add
nop
shll
addr16
fwait
pop
push
lock
mov
mov
cwtl
xor
push
sub
lods
add
iret
repnz
dec
rol
mov
inc
add
push
xchg
stos
insb
ja
push
jo
xchg
mov
add
sbb
scas
inc
jae
sub
push
add
setns
and
rclb
and
mov
ret
mov
addr16
lods
xchg
add
mov
cmp
scas
cmp
sub
mov
or
andl
or
repnz
rorl
movsb
add
testb
push
cmc
pop
xor
dec
mov
adc
or
pop
subl
lcall
sbb
and
sbb
or
cmp
test
fld
dec
popa
inc
jb
pop
fs
jle
enter
jmp
shr
shll
out
xor
jp
sti
leave
lods
or
and
fwait
lret
scas
dec
fcompl
arpl
pop
hlt
ds
jmp
outsb
dec
ret
dec
adc
lods
add
push
ljmp
mov
repz
dec
adc
jl
mov
aad
push
dec
stc
mov
cmc
dec
mov
aad
stos
adc
push
push
lcall
shrl
sbbb
sbb
out
and
rcl
inc
add
lds
dec
lods
out
push
xor
sub
out
mov
add
adc
inc
arpl
jl
in
stos
push
das
in
lret
dec
arpl
scas
and
sub
xchg
mov
mov
loopne
pop
ss
arpl
lret
lock
lods
bswap
mov
add
xor
loope
add
scas
mov
inc
jmp
push
jne
push
and
cmpb
in
dec
and
mov
rcll
loopne
lahf
add
push
cmpsb
push
scas
jbe
mov
sbb
sub
jecxz
sbb
lret
mov
cli
leave
notl
ss
std
scas
push
bound
jp
stc
movsb
push
lret
lods
rol
insl
rolb
cltd
jb
out
icebp
scas
dec
aad
or
in
nop
sub
jae
ja
or
test
dec
cld
test
pop
ficompl
stos
and
jno
mov
es
cmc
imul
movb
daa
sbbl
mov
movsl
aas
push
jno
bswap
pop
mov
pop
jle
lds
iret
push
ret
daa
testb
testl
push
cltd
cs
mov
inc
gs
and
xor
shlb
fidivs
iret
sub
pusha
or
loope
mov
andl
std
imul
push
sbb
mov
cmc
sbb
lock
mov
dec
push
cs
sahf
leave
sbbb
adc
outsb
test
lahf
fwait
loope
outsb
pop
enter
ret
xor
in
sbb
popa
rorb
testl
xchg
dec
add
insl
lret
test
adc
fstl
jnp
xchg
repz
imul
lret
fistpll
das
cld
xchg
nop
loope
xchg
or
movsl
cld
adc
and
lods
adc
dec
xchg
cs
stos
or
jmp
cmp
add
sbb
inc
and
adc
mov
repnz
inc
cwtl
jbe
push
xor
int
int3
pop
outsl
push
imul
sub
mov
xor
cmp
flds
pop
aam
pop
sti
fwait
sub
jge
ret
lret
bound
shl
push
stos
shrl
movsl
insl
add
loopne
mov
add
add
in
xchg
push
mov
jo
arpl
pusha
inc
iret
andl
iret
test
mov
aas
aaa
push
lahf
fdivs
dec
clc
jecxz
fmul
mov
jg
sbbl
shll
mov
or
lcall
fildl
fisttpll
fs
outsl
mov
jmp
movsl
mov
inc
mov
xchg
aaa
push
adc
fldl2e
ljmp
in
sub
ljmp
inc
add
fsts
insb
sub
pop
sbb
add
inc
ficoml
popf
xchg
popf
pushf
pop
mov
nop
fxch
insb
xchg
pop
sbb
icebp
in
or
push
mov
rolb
inc
mov
int3
nop
popa
dec
lods
dec
test
outsl
fwait
scas
cld
jl
roll
sub
xor
popa
push
jmp
or
aam
mov
decl
loopne
add
aaa
push
mov
and
lahf
lds
stc
outsb
lods
addr16
subb
jbe
int3
and
aaa
push
lods
mov
mov
dec
es
shll
int
jmp
sbb
mov
icebp
jo
dec
xlat
insb
adc
in
stc
lcall
cmp
inc
cld
rorb
aaa
pushl
mov
std
loop
mov
adc
and
sub
das
aam
or
lea
repnz
rcl
or
jbe
mov
cwtl
fsub
mov
dec
mov
cli
pop
fsubrl
mov
imul
cmovbe
or
test
xchg
cli
lcall
icebp
push
cmp
in
fsts
mov
data16
clc
aas
or
mov
add
xchg
mov
push
in
xchg
or
movsb
adc
mov
cmp
mov
jo
inc
in
mov
popf
and
mov
cmc
jge
mov
test
stos
pushf
xchg
mov
jo
sub
inc
data16
jl
aam
ret
pusha
mov
pop
das
adc
and
frstor
push
sbb
movsl
inc
inc
lahf
leave
lods
jns
add
cmp
add
pusha
pop
fsubrl
cmp
fdivs
dec
add
aam
sbb
and
push
std
inc
or
aad
out
jl
ret
xor
push
inc
add
pop
mov
jg
in
popfw
or
xchg
pop
sbb
lods
mov
ret
mov
inc
jmp
inc
push
add
add
leave
cwtl
mov
mov
adc
leave
out
cmp
rclb
cmc
loopne
xor
loopne
popf
mov
xadd
aaa
stc
shlb
mov
ds
push
fsubrl
in
inc
mov
hlt
pop
pusha
adc
inc
xchg
decl
xor
or
lds
cmp
push
mov
sarb
sub
push
ljmp
mov
aam
in
and
jns
rcr
pop
fwait
push
add
popf
inc
xchg
pusha
out
mov
pop
je
mov
ret
mov
shrb
push
xchg
sbb
outsl
sbb
pop
sti
data16
push
out
out
ret
clc
xor
add
or
std
ret
mov
xor
pop
push
and
mov
sti
fwait
jne
pop
les
rorl
jmp
arpl
jnp
xorl
data16
out
dec
xor
sub
pop
cmp
push
aaa
decl
push
adc
jnp
pop
xchg
xor
in
in
sbb
add
add
es
ss
pop
push
cmp
mov
push
push
movsl
addr16
out
add
jne
hlt
lods
jns
out
inc
fwait
add
roll
add
leave
push
xchg
xchg
cmp
mov
lock
andl
lea
sub
sub
je
pop
pop
dec
xchg
sarb
enter
cmpsb
dec
cmpsl
pop
jb
out
repnz
es
cmp
into
sti
scas
negb
push
and
subb
test
dec
gs
out
rcr
sub
stos
or
and
sbb
fadd
mov
cmpsl
inc
jmp
xor
movsl
or
dec
fwait
outsl
divb
jp
xlat
xor
pop
enter
pop
adc
orb
fs
push
sbb
imul
hlt
pushf
mov
aaa
sbb
push
pop
rorb
jecxz
dec
hlt
xchg
fcomi
push
adc
add
inc
cmp
imul
lcall
stos
into
stc
mov
adc
loopne
cmp
jae
dec
jl
dec
imul
pop
dec
push
push
sbb
push
jle
dec
mov
in
push
test
aad
pop
outsl
cmp
mov
test
pop
jge
fsubrs
test
int3
js
addr16
cwtl
loop
je
push
andb
mov
jno
insl
jb
jns
inc
sub
sub
mov
jmp
cmp
loopne
cmp
inc
int
and
xchg
push
xchg
imul
popa
cltd
stos
mov
pusha
xchg
cmp
inc
adc
mov
divb
xor
fcmove
add
add
sbb
add
mov
fmuls
inc
jns
mov
out
add
fsubrl
notl
out
jmp
cli
in
add
jo
push
js
gs
out
cld
rclb
sbbl
add
add
dec
dec
dec
mov
ja
cmp
add
lods
push
xchg
mov
fwait
xor
and
add
sbb
xlat
in
xchg
jle
sar
xor
outsb
bswap
ret
jbe
cli
pop
lods
fs
loop
jno
add
dec
add
dec
dec
pop
xchg
and
aam
push
cld
fadd
mov
xor
or
pop
inc
lods
popa
fsubrp
negl
lock
stc
movaps
sbb
lcall
mov
dec
and
dec
adc
mov
adc
cmp
ljmp
mov
pop
into
aas
jbe
sbb
mov
fsubrl
push
rorl
in
mov
dec
push
call
push
sbb
mov
incl
mov
movsl
push
add
ss
lods
pop
jae
incb
shl
mov
fwait
popf
test
fwait
in
cltd
lret
test
xchg
sarb
rorl
dec
and
sbb
mov
sbb
mov
negb
out
mov
mov
pop
ja
icebp
inc
loopne
push
adc
pop
jp
cmpsb
mov
dec
xorb
pop
mov
ficomps
or
mov
hlt
dec
mov
add
dec
sbb
testl
idivb
adc
sub
jae
loop
dec
test
loop
jp
leave
dec
inc
clc
es
jnp
ret
stc
mov
sbb
push
ss
lcall
aad
jb
enter
fnstenv
mov
dec
in
dec
jne
lret
and
mov
sub
or
in
mov
and
es
fimull
or
jno
aam
inc
mov
pop
cmpl
add
xor
cld
cmpsb
cltd
mov
sarb
clc
adcb
int
dec
test
aaa
cmp
fucomp
mov
stos
int
pop
mov
rorl
inc
xchg
lcall
dec
jbe
add
loop
lods
mov
rorb
push
push
mov
ret
cs
push
je
dec
cmpsl
dec
xchg
iret
jb
aaa
pop
adc
adc
sbb
push
lret
ret
dec
jb
insb
mov
aam
fidivrs
cmp
dec
jae
or
lods
shll
xchg
lret
jge
stos
and
inc
mov
add
mov
cmp
sti
or
jmp
test
outsb
pop
in
jbe
add
inc
fists
xchg
bound
mov
ret
mov
jmp
sbb
into
rcrb
and
nop
or
in
mov
cmpb
xor
cmp
ss
xchg
cmp
lods
test
loop
xor
insl
inc
pusha
scas
dec
sub
mov
xor
out
sahf
call
repnz
sbb
cmp
jmp
sti
push
je
push
mov
sbb
mov
lock
sbb
cmpsl
and
xor
inc
ret
nop
gs
loope
incl
cmp
or
cmpsl
lods
fsubrl
int
xchg
push
add
sub
sbb
jp
rorl
cld
movsb
icebp
sbb
lahf
sahf
cmp
fs
call
fisubs
loope
sbb
into
add
pop
out
sub
jno
sub
inc
lret
cli
mov
aam
iret
dec
xor
pop
testb
cmc
jmp
mov
dec
jl,pn
fnstenv
sti
fcmovu
pop
push
mov
mov
mov
enter
sub
push
push
mov
sti
pop
mov
jge
mov
daa
outsb
adc
xchg
stos
in
out
rolb
add
add
fcoml
add
je
xchg
loop
push
ss
jae
cli
popf
or
or
or
xchg
dec
adc
stos
fldl
and
sbb
inc
jne
std
data16
mov
jecxz
das
cmpsl
adc
push
idivl
mov
das
mov
loope
add
inc
jmp
xchg
jbe
jg
or
cmpsl
aas
and
add
cmpsb
outsb
sub
bound
roll
lahf
lcall
sbb
push
push
fiadds
jnp
mov
es
adc
add
adc
push
pop
push
push
dec
add
mov
imul
sti
push
scas
and
test
jbe
fsub
adc
or
mov
ret
jmp
inc
or
xor
and
dec
iret
add
les
push
xorps
call
rorb
lods
loope
fsub
in
cmp
and
lds
mov
je
xchg
test
jb
jmp
ret
jmp
cmpsb
jno
dec
in
subb
insl
dec
adc
mov
jne
or
xor
and
daa
lret
lds
inc
jp
mov
pop
jmp
je
ja
push
stc
mov
movsl
push
sti
add
into
dec
arpl
cmpsl
fmuls
filds
inc
imul
xchg
punpcklwd
adc
shl
sub
mov
into
mov
jns
cmp
dec
mov
xor
jbe
fisttps
add
pop
mov
dec
and
aad
xor
or
lret
mov
jo
popf
mov
pop
pusha
aaa
es
imul
enter
rcll
sbb
scas
out
cmp
enter
test
jns
xlat
mov
clc
sbb
sti
cmp
cs
add
ja
add
add
cmp
inc
inc
clc
rolb
jge
unpcklps
popa
mov
pop
aad
repnz
ss
or
icebp
imul
cmp
ja
loopne
pop
mov
mov
bound
fistpl
rcrl
xor
cmc
ljmp
out
stos
fucomi
pop
inc
lcall
outsl
lock
mov
lea
xchg
jo
daa
mov
pop
sub
daa
jmp
mov
pop
shl
enter
out
pop
fistps
mov
daa
mov
outsb
mov
es
xchg
repz
mov
mov
cmp
jb
lds
dec
andb
out
iret
jns
mov
xrstors
jae
pop
inc
pop
ret
insl
movsl
cmpsl
add
push
and
aas
add
push
add
jae
mov
xor
ja
daa
xor
cmpsl
leave
es
es
cmp
testl
lcall
adc
add
mov
lcall
std
xorl
or
xor
ret
add
ds
into
dec
and
jp
or
mov
cld
repz
imul
mov
repz
jo
xor
lea
add
add
cmpsl
pop
leave
outsb
pop
leave
cmp
push
adc
fdivr
je
int3
push
das
aaa
push
dec
jl
sbbb
cs
into
aas
xor
lods
and
push
cmp
aam
jmp
jae
or
sub
lods
push
in
arpl
jnp
pop
call
sub
or
lods
imul
inc
data16
and
mov
lods
push
jmp
fmulp
push
lds
bound
mov
cmp
add
aam
aam
mov
fsubr
push
mov
std
std
jno
in
mov
inc
sbb
pop
test
xor
dec
dec
inc
enter
scas
and
and
aaa
sbb
xchg
mov
jnp
add
fidivs
mov
cltd
pop
inc
jge
rcrb
add
cmp
into
xchg
cmpsl
xchg
jbe
mov
add
je
icebp
pop
iret
add
jne
sahf
les
and
dec
pop
jecxz
cs
clc
push
sub
jae
fisubrs
out
add
lcall
sub
push
and
dec
js
cmp
pop
cmpb
cmp
sbb
in
and
push
jno
inc
les
mov
adc
or
psllq
ret
lret
mov
out
sub
shll
test
cwtl
aas
mov
push
adc
pop
cltd
ljmp
inc
mov
clc
js
popf
jl
push
jne
pushf
pop
adc
stos
or
push
xorl
xor
insl
cmp
push
adc
lds
and
cmc
in
jle
mov
xor
popf
adcl
mov
cmp
or
dec
lds
negl
int3
ja
mov
test
jg
sbb
les
rcll
mov
call
sub
frndint
fcoml
cmp
push
das
mov
in
bound
push
and
fcomip
push
rcll
xchg
add
xchg
es
enter
in
mov
mov
sti
xlat
adc
sahf
cmp
sub
ljmpw
push
out
sbb
leave
cmp
aaa
clc
pushf
aam
test
xchg
push
hlt
push
adc
xor
std
push
pop
hlt
fs
movsb
pop
mov
and
insl
mov
sbb
jno
adc
leave
rclb
mov
sbb
jns
cmpsl
and
out
imulb
and
leave
lods
dec
stos
jmp
aam
cmpsl
cmp
pop
add
inc
or
pushf
xorl
enter
out
out
sbb
outsl
mov
add
adc
mov
inc
xor
lock
adc
aaa
ret
rorl
sbbb
dec
xor
add
mov
xchg
jle
xchg
dec
subl
test
ret
xchg
push
xchg
jo
add
cmp
cmp
or
notb
mov
pushf
mov
idiv
es
sub
mov
sub
push
ja
cmp
notl
aaa
mov
cwtl
inc
pop
ljmp
sub
jns
cltd
push
sbb
ljmp
dec
push
add
xchg
push
test
push
int3
icebp
negb
cli
mov
inc
pop
jp
insl
sub
test
mov
sbb
lret
and
loop
movsl
adc
das
cmpsb
cmp
xor
mov
loop
pusha
or
add
test
inc
mov
push
les
push
sbb
andb
divl
call
or
xor
stc
sahf
enter
movsb
adcl
mov
leave
fiadds
inc
shll
mov
mov
pop
incl
cmc
out
dec
cmc
sbb
js
pop
iret
aam
mov
lret
loop
dec
pop
shll
fdiv
icebp
arpl
mov
mov
dec
dec
push
hlt
lret
lds
sub
sti
insb
dec
mov
adc
fwait
mov
dec
jp
enter
lcall
movsb
lret
dec
and
cwtl
or
adc
bound
sbb
adc
into
loope
out
enter
test
leave
mov
or
add
mov
sub
jl
xlat
out
push
mov
xor
xor
xlat
cmp
cmc
mov
mov
cmpsb
loope
fisubl
xchg
icebp
enter
mov
xchg
push
mov
add
fs
scas
outsb
lods
inc
sbb
mov
inc
add
mov
and
cli
cmp
ret
mov
push
sub
lods
add
outsl
cmp
xor
and
jecxz
mov
adc
pushf
jno
inc
lds
das
sub
cwtl
shrl
scas
stos
xlat
mov
sub
or
xlat
mov
sbb
lret
mov
xchg
xchg
inc
cltd
hlt
call
pop
fwait
cmc
pop
idivb
test
inc
add
in
mov
cmp
mov
lahf
nop
xor
adc
vpunpckldq
clc
pop
pop
lahf
call
jle
adc
cmpsl
xor
scas
push
jnp
into
mov
or
call
arpl
sub
jnp
cld
and
sahf
fnstsw
pusha
adc
jecxz
movsl
inc
repz
mov
push
cli
inc
lahf
push
mov
dec
movsl
jge
jl
jg
into
test
int3
inc
vaddsd
cwtl
mov
fstps
mov
mov
add
adc
rcl
xchg
pop
enter
mov
sbb
xchg
inc
add
testb
inc
dec
or
lea
mov
push
mov
lods
in
hlt
xchg
xor
cmc
enter
cmp
roll
cld
mov
pop
dec
xor
add
lock
xchg
insl
lods
data16
xor
inc
mov
cmpsb
add
and
add
or
adc
push
jbe
outsl
test
pop
leave
mov
pop
imul
xor
jge
add
add
shll
enter
jmp
sbb
bound
test
gs
ret
jno
inc
mov
lahf
fisttps
sahf
pop
cmp
mov
pop
leave
cld
dec
sti
xchg
cltd
rclb
popa
dec
push
nop
pop
imul
mov
icebp
sub
scas
nop
xchg
addr16
loopne
push
in
loop
jp
mov
cmc
scas
imul
insl
mov
push
out
fcmovu
punpckhwd
testl
fistpll
mov
sub
cmp
push
test
lods
hlt
enter
aam
xchg
push
addb
dec
imul
push
xor
mov
mov
and
js
sbb
neg
repz
cltd
jo
push
std
js
sub
popf
pushf
sbb
mov
and
adc
mov
sbb
arpl
xor
mov
out
mov
xchg
fstpt
lock
or
ficoms
push
xchg
outsb
inc
js
mov
or
popf
push
pop
bound
imull
hlt
xor
xor
xchg
test
xor
in
inc
arpl
div
adc
xchg
mov
shlb
push
jno
sbb
add
ss
ret
cltd
pop
push
std
push
mov
add
cld
xchg
sar
jns
mov
and
adc
mov
jae
sub
pop
repz
popf
data16
loopne
js
mov
ret
into
mov
mov
mov
insl
ja
clc
xor
fisubs
loopne
mov
jno
adc
cmp
out
xor
ds
inc
ss
ds
adc
and
cmp
sbbb
add
add
inc
push
mov
imul
cmc
jnp
dec
xchg
inc
inc
addl
pop
mov
out
mov
xchg
xchg
inc
in
cmp
push
push
test
sarb
inc
or
sub
cltd
xchg
and
sbbl
mov
insl
push
sbb
inc
xor
xchg
inc
popa
mov
pop
int3
cmpsb
mov
cld
icebp
test
shlb
out
push
imul
ret
in
test
mov
push
mull
mov
pushl
sarl
ds
mov
xchg
repnz
arpl
inc
jnp
ret
and
mov
mov
pop
mov
sub
cwtl
and
add
mov
cwtl
dec
icebp
shl
adcb
sub
ja
mov
adc
ret
jne
lahf
enter
push
cmp
mov
pop
xor
repnz
lret
enter
or
scas
iret
mov
pushf
test
div
jp
incl
loope
fs
gs
stc
adc
xchg
loop
call
les
inc
xor
and
dec
and
pushf
call
mov
test
add
jne
icebp
out
imul
std
mov
push
mov
aaa
jo
jp
add
dec
subl
adc
cmp
push
aas
cmp
daa
lods
cmc
mov
shrb
and
push
or
inc
out
adc
push
inc
sti
dec
cmc
dec
inc
orl
ficompl
xor
fildl
jg
cmp
pop
pop
cmp
mov
push
push
dec
stos
lahf
sbb
xor
xchg
out
sahf
mov
jno
jb
fbld
repz
mov
inc
or
jne
flds
xor
push
into
mov
fdivs
ja
xor
and
hlt
loope
aam
das
add
pushf
in
aaa
in
add
xor
sbb
cmp
xor
cwtl
test
inc
mov
cs
mov
shr
add
cmp
shlb
js
ljmp
mov
push
add
or
js
sbb
add
pop
pavgw
xchg
or
cltd
cmp
jmp
mov
clc
push
test
xor
pop
cs
cmpsl
pushf
sbb
inc
mov
pop
cmp
push
insl
add
js
xor
adc
repz
xchg
lds
and
cmp
aas
pop
jmp
inc
xchg
sub
adc
dec
push
ret
mov
popa
mov
xor
cmpsl
movsl
imul
js
out
dec
xchg
adc
ficoml
and
mov
pop
inc
mov
movsl
test
mov
mov
mov
shll
cmpsb
dec
pop
cmp
lods
imul
repnz
outsl
mov
lock
movsl
mov
lahf
cmpsb
test
xchg
sti
xchg
loopne
outsl
jns
push
inc
subl
ljmp
ror
xorb
push
popf
inc
imul
cmc
inc
sahf
push
lret
mov
xor
and
lret
fstpt
fimuls
popa
iret
push
in
cmpsl
lret
add
adc
add
inc
push
nop
dec
add
mov
mov
daa
cwtl
inc
mov
mov
fildll
xchg
je
stc
test
fnstcw
pop
lock
jbe
int
ja
movsb
add
outsb
jmp
fmull
and
jle
test
fiaddl
add
add
arpl
dec
add
cwtl
push
cmp
lock
inc
xchg
pop
enter
jbe
loopne
inc
jp
jns
in
data16
icebp
or
es
test
fisubrs
rcrb
mov
cmp
pop
outsl
rorb
lea
int
or
and
jmp
pop
jle
lret
mul
pop
scas
jmp
ret
lds
cli
sbb
sub
stos
xchg
js
aad
loopne
mov
out
out
imul
scas
gs
jg
dec
add
push
jns
jecxz
aas
or
cmp
mov
push
push
push
loopne
sbb
sub
les
cld
pop
dec
js
cmp
js
lock
xor
sbb
ds
out
jle
cmp
pusha
les
in
sbb
inc
cmp
shlb
fadds
mov
jns
or
xchg
repnz
mov
jle
scas
mov
xchg
into
xchg
mov
fisttps
fwait
sbb
jle
shlb
sub
les
push
int
mov
mov
sbb
aad
pop
repz
inc
pop
adc
addb
inc
pushf
sti
adc
pop
aas
xor
push
push
jmp
das
mov
mov
add
cmovs
cmp
loope
jecxz
sbb
or
jb
cld
adcl
lahf
out
addr16
stc
movsl
xchg
push
hlt
fnsave
call
std
imul
loope
rcll
lahf
inc
inc
notl
shlb
inc
or
out
mov
cmc
dec
fstpt
in
stc
mov
rol
jle
call
lock
sti
loope
jmp
in
pop
mov
std
call
push
sub
inc
arpl
xor
stc
inc
inc
icebp
fwait
jle
insb
mov
xchg
mov
insb
pop
cmpsl
xor
stos
lock
jbe
lret
bound
adc
call
out
hlt
std
mov
lock
adc
or
pop
ljmp
push
jecxz
jg
insb
test
das
fnsave
jecxz
cmpsb
cld
hlt
push
ljmp
daa
mov
popf
mov
shl
jbe
sub
mov
dec
mov
and
push
sub
pushf
loop
insb
cltd
and
fwait
movsl
aam
outsl
mov
xlat
call
aam
je
cli
adc
repz
jle
hlt
lea
mov
movsb
pusha
mov
jmp
sbb
out
negb
fistpll
je
mov
mov
nop
add
or
addr16
xor
pop
mov
stos
aam
push
jae
push
dec
sub
shr
sub
xchg
mov
mov
dec
pop
mov
and
dec
movsb
icebp
mov
ss
lcall
bound
push
pop
pop
sbb
daa
or
push
iret
mov
or
dec
cltd
stos
in
dec
stos
sbb
jo
pop
or
ret
inc
daa
ficoml
jno
in
cmp
mov
in
int3
outsb
xor
xor
cmp
mov
pop
adc
movsl
cli
pop
hlt
popa
cwtl
and
push
clc
and
xor
xor
movsl
shrb
movb
xor
fdivrl
mov
scas
jo
icebp
mov
push
popa
sbb
push
les
aad
test
call
lea
scas
out
inc
lods
sbb
push
mov
adc
addr16
stc
orb
xchg
lcall
repz
add
mov
mov
divb
cmp
sbb
push
xor
sub
push
fldl
push
dec
arpl
add
add
loope
cltd
adc
push
ss
pop
icebp
outsl
lcall
call
stos
loope
adc
cmpl
jle
inc
sub
add
mov
scas
in
fistl
ja
push
out
mov
test
or
add
imul
pop
lret
jp
inc
decb
push
jmp
add
rcll
xchg
xlat
das
pop
pop
jp
xchg
sbb
aas
inc
lock
or
xor
ret
jno
cmp
hlt
mov
sbb
lret
int
das
aas
cmp
in
loopne
int3
jl
jo
call
fildl
and
insb
pusha
push
loope
popa
insb
mov
loopne
jle
sbb
ficoml
fmulp
ja
sti
mov
sub
les
ret
jmp
in
shlb
fisubrl
fildl
add
adc
push
push
add
pop
push
jp
or
call
cmp
sub
call
dec
jmp
fisttps
insb
hlt
cmp
xchg
push
push
xor
int3
and
jmp
jae
scas
xor
push
cld
mov
xchg
mov
out
pop
insb
test
outsb
std
sbb
loope
jns
inc
sbb
xlat
movsb
popa
rcr
fisubl
pusha
fnstsw
int3
mov
add
dec
lret
pop
divl
popa
jae
mov
ss
push
pop
orb
in
pushl
and
out
push
mov
cmp
iret
sub
xor
outsb
idivl
popa
jae
repz
jnp
in
push
jp
pusha
cmpl
xchg
xchg
jecxz
ds
inc
jp
add
mov
xchg
jmp
and
push
jb
mov
jecxz
gs
in
inc
cmpsb
lret
or
test
cmp
mov
bound
add
add
add
fildl
pop
cmp
aad
lods
and
aas
and
loopne
mov
pop
inc
dec
daa
add
call
ret
rorl
dec
pop
xchg
movsb
fnop
mov
mov
push
lods
jns
and
adc
mov
xchg
mov
push
mov
xchg
test
jne
sub
negl
popa
outsb
subb
and
mov
int
add
pop
shr
mov
mov
shll
push
rol
subl
xor
sahf
test
jo
insb
out
pop
jne
cmp
test
jmp
mov
adc
inc
ret
mov
xchg
outsl
mov
fldenvs
xor
aad
pop
add
repz
add
daa
lock
or
mov
fidivrl
mov
sarb
add
jae
jne
jno
push
jnp
mov
dec
mov
je
arpl
cmp
xchg
ds
notb
and
xchg
dec
fbstp
fbld
sahf
mov
push
call
wrmsr
cld
cmp
stos
xor
lcall
jbe
movsb
jmp
jbe
pusha
xchg
mov
arpl
scas
orb
in
mov
bound
cli
shlb
scas
ret
mov
add
cli
dec
stc
shl
mov
imul
add
lret
cmpsb
out
jae
mov
push
nop
out
jne
ljmp
and
lret
mov
bound
iret
push
mov
imul
loop
inc
sti
xchg
subb
adc
mov
clc
xchg
enter
pop
mov
out
xchg
jae
in
imull
mov
and
addb
movsb
or
mov
or
out
mov
xlat
cmc
mov
push
test
add
sub
cld
test
dec
jmp
jecxz
adc
mov
add
jno
fistpl
int3
dec
push
adc
pop
xchg
ret
sbb
scas
bnd
ret
popf
add
clc
adc
nop
sbb
xchg
xlat
cmpb
add
mov
push
test
inc
out
ljmp
ds
or
sbb
scas
aad
out
ret
icebp
add
adc
stc
push
orl
push
and
xor
fstpt
and
lods
out
jnp
xchg
cmp
sbb
outsl
ret
inc
test
cld
and
sbb
es
imul
cmp
mov
and
mov
movsl
roll
lods
add
dec
cwtl
inc
or
shl
in
cmp
adc
aad
scas
pop
mov
insb
mov
inc
gs
inc
pop
fistps
xchg
cld
jno
cmpsb
test
add
mov
in
loope
inc
push
jge
mov
outsb
imul
adc
mov
push
push
mov
mov
jae
fstpt
push
stos
imul
or
loope
adc
or
test
ljmp
in
orl
outsl
mov
scas
call
loope
pop
pop
adc
scas
lods
push
dec
fistl
sbb
rol
cmp
mov
cmp
fdiv
add
jnp
stc
add
mov
popa
outsb
out
movsl
outsl
xor
arpl
notb
jp
gs
stos
xor
lret
cltd
push
mov
hlt
mov
shr
leave
cwtl
cli
ret
outsb
lahf
insl
stos
pop
idiv
lds
push
cltd
lahf
adc
xor
jne
sub
xor
xor
shll
imul
mov
mov
inc
popf
cmc
ror
dec
mov
sub
rorl
and
push
push
js
scas
push
add
adc
and
xor
in
cmp
sti
pusha
push
ds
stos
fcomp
mov
lods
jno
dec
lods
jb
sbb
inc
out
cmpsb
insb
pop
addr16
outsl
out
jmp
iret
jae
push
pop
mov
ficoms
scas
xchg
dec
cmp
sbb
test
cltd
mov
mov
jae
push
jno
lcall
xor
xchg
add
xor
cmp
xor
fwait
add
adc
insb
stos
int3
mov
std
lret
jg
sub
jb
inc
sub
mov
out
add
stos
lret
adcl
sbb
sahf
fbstp
jnp
lea
mov
mov
push
dec
xor
mov
inc
push
add
mov
pop
jo
lahf
adc
movsb
sub
ret
shr
aam
jl
flds
sub
sub
xchg
cld
dec
outsb
jle
push
repz
pusha
mov
mov
cmp
adc
add
xchg
mov
fcmovu
sub
jl
cld
cld
inc
les
mov
add
sahf
fidivrs
mov
jae
mov
add
cmpsl
lcall
dec
cli
mov
mov
ret
ret
jge
lds
pop
sub
jb
pop
shrl
loopne
fidivrl
dec
dec
mov
cmp
cmp
xchg
xor
stos
pushf
jge
adc
xchg
cmp
fwait
fs
inc
enter
mov
inc
orb
movsl
cs
sub
push
shr
js
mov
shlb
fimuls
aaa
mov
xor
mov
add
enter
gs
jg
stc
jp
mov
out
dec
daa
out
lods
in
pop
call
nop
ret
mov
lods
stos
sbb
xchg
fsubr
cmc
push
popf
pop
lcall
clc
push
stos
std
mov
clc
jecxz
pop
mov
push
cmp
inc
pop
cs
movb
shl
mov
idivl
or
adc
bnd
xor
mov
dec
fcom
inc
into
jge
test
enterw
mov
and
xlat
sbb
cli
inc
loope
xchg
les
push
push
loopne
enter
cmpsl
xor
popa
add
cld
shrb
call
lcall
iret
mov
daa
pop
mov
add
frstor
xchg
cmp
xchg
popf
lea
rcrl
dec
fs
sti
sahf
sar
xchg
in
inc
lods
push
cmpsl
cmp
push
fsubr
fmuls
jl
sub
dec
andb
inc
adc
jle
xchg
lods
xchg
lret
add
and
repz
mov
scas
and
lock
repnz
stc
pop
xlat
repnz
dec
and
lock
and
call
push
push
and
cmp
add
cmp
std
scas
push
out
mov
or
mov
fcoms
inc
jp,pn
int3
cmp
ffree
insb
imul
jbe
mov
dec
pop
pusha
ss
cmp
adc
jbe
dec
xchg
xchg
sarl
pop
cmp
mov
push
mov
adc
sub
lods
push
or
loope
push
int3
mov
repnz
out
push
in
repnz
scas
add
xchg
push
pushf
xor
jmp
mov
les
rcrb
lret
mov
cmpsb
cmc
ja
stc
stos
fdivrl
push
rcr
outsl
or
sub
hlt
and
xchg
xchg
in
imul
int3
and
pop
pop
inc
xchg
mov
dec
test
adc
sbb
sti
inc
pop
out
adc
xchg
adc
or
lret
in
push
dec
ss
shlb
adc
in
vpsrlw
btr
or
xchg
sbb
sarb
xchg
push
mov
outsb
push
test
cld
xchg
lahf
cs
inc
lods
or
jbe
pop
cmc
divl
test
pop
dec
ds
jecxz
add
in
bound
cltd
out
imul
inc
mov
dec
add
dec
stc
push
adc
pop
hlt
xchg
ret
pop
int3
lcall
xchg
adc
push
sbb
into
xchg
jmp
xlat
out
repz
push
ds
push
cld
pop
repnz
pop
push
inc
fimull
movsl
mov
in
insb
xchg
aaa
scas
inc
cs
pop
inc
xchg
mov
loope
cmp
or
fwait
addl
jmp
and
xor
call
rorl
rcrl
in
mov
cltd
adc
cmp
movsb
cmpsb
sub
out
push
loop
outsb
or
mov
and
inc
mov
push
pop
jne
dec
cmp
pusha
fcmovb
mov
push
inc
popa
and
lods
idiv
addr16
les
push
push
andb
sti
arpl
lock
cld
addr16
and
cmpsl
loope
mov
adc
mov
jae
outsb
js
pop
or
push
pop
jge
incl
scas
mov
aam
inc
orl
adc
pushf
out
daa
sbb
sub
pop
pop
sti
inc
rcll
jo
mov
mov
testb
decb
dec
lea
outsl
push
add
jge
push
xchg
dec
lahf
scas
sub
loop
js
add
add
sub
lock
repnz
out
dec
push
out
mov
mov
sbb
push
lods
sbb
xchg
mov
enter
xchg
sbb
push
mov
or
aas
mov
xor
pop
in
in
dec
mov
leave
outsl
sarl
fs
les
paddusw
outsl
jb
fs
sub
mov
pop
in
sbbb
stc
outsb
cmp
int3
adc
je
mov
add
movsb
pop
pop
jo
negb
jl
sub
dec
cld
mov
sarb
fnstenv
inc
xchg
imul
adc
mov
mov
jnp
clc
jge
int
jae
test
les
sub
fsubrs
mov
aam
rolb
mov
dec
mov
pop
clc
xor
call
rcrl
mov
leave
xchg
ret
adc
pop
dec
sub
in
add
or
jle
push
mov
adc
cmp
sti
fwait
or
movsl
rol
ret
andb
in
sub
jno
sbb
mov
sub
mov
adc
inc
sub
fnstenv
pop
cltd
fincstp
cli
push
pushf
jecxz
and
xor
mov
inc
ret
fdiv
mov
shr
sub
stc
es
icebp
or
or
cmp
xchg
or
pop
fists
or
pop
bound
nop
jp
pop
push
call
cmpsb
dec
or
into
sahf
add
push
pop
ja
in
mov
xor
mov
pop
test
mov
ret
rorl
addr16
add
sahf
jns
fnstsw
mov
mov
into
adc
outsb
xor
xchg
xchg
cli
stc
push
outsb
aad
xor
sahf
rclb
inc
xchg
loopne
movd
int3
iret
call
add
cmp
push
xor
cmp
div
dec
cli
aas
clc
cmpsb
pop
push
in
lea
test
mov
and
mov
and
sbb
jne
cmp
cmpsl
or
jge
repnz
ret
prefetch
or
xchg
push
mov
fwait
loope
push
packssdw
xchg
loopne
lea
mov
jecxz
xlat
inc
or
push
clc
dec
subl
in
enter
dec
cwtl
dec
and
iret
add
loope
or
int3
aam
inc
es
outsl
loop
mov
jb
test
mov
add
and
popf
add
push
add
fidivrl
cli
aas
aaa
mov
hlt
adc
sbb
adc
aas
jb
test
outsb
adc
pop
leave
lds
sub
xchg
sbb
sbb
test
jg
hlt
dec
ficoms
imul
or
sbb
sbbl
clc
or
mov
cmp
daa
jns
sub
add
fimull
inc
inc
lcall
ret
jb
out
jne
sbb
into
jge
lret
sbb
subb
sbb
iret
mov
repz
ret
pop
jns
mov
push
and
repz
mov
mov
cli
mov
jge
fbld
lahf
jg
mov
ret
ljmp
aam
das
je
ret
adc
mov
jbe
mov
add
inc
xchg
xchg
enter
jo
insl
test
adc
outsl
pop
mov
imul
inc
jp
fisubs
adc
cmp
clc
jae
lcall
lahf
aas
scas
or
sbb
xchg
push
cwtl
inc
mov
sti
jae
add
add
lods
ret
pop
pusha
notb
fidivrs
dec
test
leave
gs
dec
cmpb
pop
rcrl
pusha
sarb
inc
fildl
aaa
or
xor
xchg
sbb
sti
mov
jle
rcrb
fmuls
lds
daa
out
lcall
pop
xchg
addb
adc
or
ret
inc
pop
jmp
xchg
inc
stc
ss
mov
mov
out
fstl
insb
cltd
in
inc
xchg
insl
addr16
pop
mov
mov
dec
inc
test
mov
xor
popf
adc
ret
dec
inc
fldl
test
aas
bound
sbb
insl
outsl
mov
out
cmp
in
in
cld
dec
adc
lret
lret
lds
out
xchg
int3
inc
pop
mov
mov
mov
adc
jae
enter
cmp
adc
push
pop
pop
fsubp
adc
test
dec
aam
inc
mov
and
fdivp
xor
aam
inc
enter
xchg
popf
faddp
fisubl
mov
lahf
adc
int3
insb
shlb
push
inc
mov
inc
jns
mov
test
sub
sahf
mov
sti
mov
aaa
inc
loop
jecxz
lcall
std
lret
push
incl
add
call
xor
xchg
dec
pop
and
outsl
jnp
gs
sbb
jmp
mov
xchg
inc
out
test
add
jae
pop
sahf
mov
dec
in
xchg
out
mov
pop
clc
push
pop
in
jb
fidivs
out
addr16
mov
and
scas
rclb
add
cs
enter
lahf
sbb
jno
or
sbbl
int
cmc
mov
push
adc
pop
fldl
lods
movsb
pop
adc
iret
jl
subl
nop
dec
push
cmp
andl
imul
imul
mov
subb
outsb
dec
pop
adc
or
pop
dec
mov
lahf
fimuls
jecxz
bound
mov
add
mov
sbb
ret
ret
lods
xor
push
pop
cs
sti
and
int3
cmp
mov
push
mov
mov
pusha
int3
inc
fdivrl
mov
xlat
mov
push
dec
push
mov
fimull
xor
aam
insl
sbb
sub
jecxz
dec
lahf
sub
ficoms
fld1
add
push
fs
mov
and
shlb
std
xor
scas
jg
mov
ret
cs
push
add
pop
insb
in
int3
rcrl
cltd
ret
mov
xchg
test
inc
nop
mov
fmuls
lret
enter
sahf
psubw
mov
out
mov
inc
push
outsl
add
push
pmulhrsw
ja
xor
sbb
pop
imul
aad
adc
clc
add
dec
sahf
jg
in
mov
fildll
mul
cmp
mov
lahf
adc
roll
je
mov
mov
dec
cmp
and
sub
loop
stos
mov
jbe
pop
jecxz
dec
in
orb
repz
enter
xor
mov
movsb
sahf
mov
fdivrl
cmp
ret
fimuls
sbbb
pop
fadds
daa
add
mov
xchg
cli
mov
scas
add
inc
lret
outsl
dec
xlat
jne
adc
inc
inc
push
into
lods
out
fistpl
mov
xor
add
lds
cmp
cmpb
cmp
popa
pop
sbb
mov
out
in
add
xchg
adc
fildl
add
add
test
lock
jg
add
subl
aam
and
push
pop
ffreep
xorps
adc
sbb
inc
inc
mov
mov
adc
lds
nop
push
aas
inc
inc
loop
adc
jle
mov
and
mov
push
or
mov
loop
and
cwtl
jo
cs
or
and
leave
addr16
fidivl
xchg
into
data16
push
aad
push
sub
push
mov
es
and
or
cmp
scas
jns
mov
sahf
shl
and
ret
sti
movsl
pop
cmpsl
xor
or
inc
inc
push
mov
adc
inc
sbb
cmp
push
fidivrl
cltd
push
lahf
cld
enter
test
add
pop
dec
lds
mov
dec
or
cld
dec
imul
rolb
out
dec
push
adc
mov
dec
jns
fstpl
mov
xchg
pop
lahf
call
cld
jmp
mov
xlat
xor
push
cmpsb
and
jge
cmp
add
aad
cld
add
add
jb
ret
mov
mov
sbb
ss
aad
repz
sti
mov
lret
add
inc
lods
sti
loop
mov
nop
test
sbb
fstps
add
lds
and
mov
cmp
lret
ljmp
js
sub
mov
and
mov
stc
sbb
jno
out
fsubr
ficoml
mov
pop
ficomps
cs
shlw
and
outsb
xor
inc
cltd
push
dec
pop
out
sub
stc
pop
jo
subl
lcall
lahf
outsb
sbb
dec
xlat
mov
cmpsl
xchg
xor
xlat
jg
adc
push
insl
push
xor
push
or
mov
movsl
xor
add
add
cli
add
lods
loope
dec
out
je
repz
rcr
inc
jnp
mov
mov
shr
and
call
ss
add
push
loopne
jne
es
pop
cmp
jmp
xchg
lret
mov
fistl
and
loope
es
clc
add
iret
mov
rorl
sub
loop
and
mov
jle
mov
add
mulw
jg
mov
arpl
add
xor
insb
push
out
sbb
dec
call
loopne
pop
stc
gs
jo
push
push
jnp
aam
cltd
xor
outsl
repz
mov
jg
jns
pop
fimuls
jecxz
movsb
mov
sub
mov
and
cmc
cmp
jne
outsl
cwtl
inc
sub
popa
mov
lods
repz
mov
mov
jecxz
mov
xchg
ss
push
out
leave
insl
pop
movsl
pop
mov
mov
out
sahf
std
call
push
rcrb
mov
mov
sub
test
into
and
xchg
xchg
xor
les
insl
inc
rclb
int3
jae
bound
inc
jecxz
or
stos
loopne
lret
addr16
test
lahf
sbb
mov
nop
int3
cmp
pop
dec
loope
lret
xchg
in
cwtl
faddp
push
iret
mov
pop
inc
lcall
shrl
and
xor
mov
adc
xchg
loopne
les
sbb
xchg
xchg
xchg
shl
fstps
push
sbb
dec
mov
mov
in
loop
push
rol
sub
sub
inc
fsubrp
into
xlat
testl
andb
dec
data16
push
mov
or
jmp
out
cwtl
cmpsl
and
xor
inc
pop
adc
lock
cmpsl
mov
push
in
das
dec
mov
aas
sbb
push
or
imull
insb
xchg
or
xchg
movl
sbb
jns
cmc
lret
jecxz
cmp
mov
mov
pop
in
enter
movsl
fmuls
mov
pop
sbb
mov
push
jmp
cli
cmp
push
pushf
daa
insb
lock
sub
adc
push
jno
ss
loop
push
icebp
loope
jnp
movsb
mov
pop
cmpsb
or
xchg
imul
pop
movsl
and
or
out
dec
test
push
shlb
xor
imul
sbb
dec
mov
adc
cmc
dec
pop
movsb
push
pop
aaa
xor
lods
std
cmp
or
imulb
loopne
bound
std
subl
mov
xor
sub
jns
xchg
xor
pop
ret
xchg
test
fcoml
jne
cmp
dec
xchg
push
xor
cmp
inc
lcall
xor
mov
adcb
out
lahf
nop
js
xor
pavgb
or
inc
rcrb
test
mov
adc
push
mov
pop
xor
imul
add
cmpb
scas
ds
lea
add
sub
pop
in
mov
scas
sarb
sbb
lods
add
js
enter
dec
out
or
dec
pop
bound
hlt
add
insl
repz
stc
jle
adc
lods
aas
xchg
cmp
ret
jae
cmp
je
lcall
loope
cwtl
pop
xor
mov
out
sti
out
data16
rcrl
push
jle
sbb
fldt
adc
sub
cwtl
dec
jb
push
or
or
fstpl
add
add
hlt
inc
fldt
mov
aad
loop
lods
insb
add
cvtpi2ps
mov
mov
sbb
push
cmp
stos
dec
and
addl
fmull
out
cmp
data16
dec
cmp
into
adc
data16
sbb
roll
cmpsb
imull
jns
fwait
dec
adc
cmp
stc
cmp
and
add
pop
adc
mov
sub
inc
pop
xchg
test
mov
pop
dec
fmulp
out
je
xchg
leave
sub
scas
in
fdiv
negl
add
sbb
pushf
mov
lret
int3
test
fmuls
ja
lock
int
mov
dec
nop
push
sub
repz
cvtps2pd
adc
or
xorl
sub
jmp
pop
rolb
pop
push
add
lcall
arpl
cmpsb
popa
mov
xchg
jecxz
adc
jne
cmp
or
push
inc
fwait
mov
rcrb
jg
cmp
jne
out
shlb
into
es
push
aam
das
aas
js
ja
cltd
fimuls
cmp
pop
xor
ret
popf
cmc
inc
shrb
xor
movsb
cli
ljmp
xchg
mov
jne
sahf
hlt
mov
mov
shr
pop
push
cmp
aad
dec
or
shr
xor
rcrl
push
rcl
leave
inc
ds
faddl
fs
mov
lods
or
or
cwtl
stos
mov
xchg
pop
pop
shll
ficomps
insb
sbb
sahf
or
loop
pop
sahf
adc
dec
dec
or
data16
mov
pop
sbb
jo
sbb
cmp
nop
cmp
adc
mulb
add
cmp
push
sbb
mov
sbb
test
aas
xorb
popf
or
out
int
addl
in
mov
dec
xchg
adc
dec
xor
fcompl
iret
xchg
xchg
and
cmp
pop
xlat
jl
add
mov
in
push
test
and
test
sub
mov
xchg
adcb
cs
add
mov
pop
test
and
repz
outsb
jbe
imul
icebp
or
mov
fs
rol
loope
xchg
xlat
add
idivb
pop
or
mov
pop
int
push
push
test
inc
pop
aam
shlb
mov
adc
lea
cmpsl
stos
mov
xchg
or
test
insb
xchg
mov
out
inc
push
test
cmp
cmp
int
mov
lret
icebp
xor
fnstenv
test
decl
pusha
mov
testb
sbb
fstps
inc
cmc
aas
and
sub
jecxz
pop
and
cmpsb
lds
push
scas
cmpsb
loope
inc
loope
mov
jns
push
popf
out
mov
push
xchg
jmp
and
add
add
mov
add
jg
sub
jg
mov
cmp
fs
jle
lcall
enter
ljmp
add
enter
lcall
xor
scas
arpl
test
inc
int
sub
add
mov
sti
nop
sub
in
jno
inc
popa
pop
jge
push
dec
cld
fsubrs
add
in
jno
int
mov
xor
jecxz
subb
leave
adc
cwtl
push
notb
addr16
pop
aaa
ret
fbstp
loop
aas
mov
arpl
add
xchg
out
hlt
adc
mov
add
add
dec
inc
xchg
es
icebp
mov
test
mov
lds
pushf
lcall
daa
out
frstor
xchg
cwtl
push
rcll
mov
push
std
mov
cwtl
cltd
out
mov
notl
in
ret
movsb
int3
cmp
xchg
sub
cltd
aad
ja
mov
cs
sub
add
les
sti
xor
sbb
adc
cmp
lret
es
jmp
lods
sbb
outsb
push
sbb
shll
movsb
mov
and
inc
pop
inc
mov
in
sub
mov
subb
rorb
mov
out
ss
lret
inc
movsb
mov
jbe
jp
jb
pop
fwait
in
add
aad
or
popf
sub
jg
rol
jp
ficomps
cld
jp
repz
inc
cmc
xchg
inc
cmp
imul
dec
lds
ret
outsl
sub
popa
pop
xor
testb
aam
movsb
push
pop
pop
or
mov
imulb
dec
scas
push
repz
or
mov
sub
xor
cmp
cmc
repnz
xchg
les
adc
mov
pusha
repz
adc
shr
ret
sub
adc
lcall
cmp
test
mov
mov
rcrb
in
mov
fwait
cmpsb
pop
enter
xlat
outsb
and
fldcw
mov
jp
sbb
jle
mov
hlt
stos
adc
xor
test
xor
cmc
pop
dec
int3
pop
push
scas
lods
notb
stc
repz
leave
inc
addr16
lock
std
lds
scas
imul
repnz
ljmp
addr16
std
jecxz
jae
in
negl
push
out
xlat
sbb
lds
push
out
inc
push
pushf
fiaddl
add
add
mov
dec
out
fdivr
inc
inc
lahf
imul
daa
sub
sbb
movsl
ljmp
test
fwait
std
mov
sbb
dec
movsl
xchg
push
or
popf
divl
mov
jnp
mov
into
xor
movsl
lcall
in
xchg
jae
dec
insb
daa
add
push
or
int3
inc
imul
mov
in
jp
loope
xchg
scas
ffree
xchg
cld
repnz
sti
and
sbb
adc
lcall
mov
addr16
insb
cs
bound
aad
pop
inc
xchg
int
add
or
fisubl
aaa
mov
jae
sti
push
test
xor
jno
movsb
mov
cmpsb
mov
inc
mov
loop
cld
sbb
inc
add
push
and
cli
push
mov
cli
adc
pusha
xchg
xchg
xor
and
ljmp
fcoms
enter
mov
cld
cmp
sub
xchg
xchg
adc
cmp
sub
pusha
fcoms
add
fldenv
testl
xchg
mov
pop
loopne
adc
movl
fidivrs
addb
sub
dec
lcall
cwtl
fcompl
out
push
sti
cmp
sbb
fildll
sbb
cmp
das
jmp
sbb
loop
lea
in
cmc
jge
mov
add
mov
xchg
in
out
push
and
adc
xor
add
outsl
push
outsb
adc
sbb
aas
insl
xor
stos
js
out
sbb
sbb
fnstcw
outsl
imul
mov
ja
lds
xchg
out
arpl
xchg
enter
ret
ret
bound
bound
add
add
pop
leave
xchg
fdivrs
sub
mov
pop
in
gs
sub
clc
inc
data16
inc
xlat
jecxz
out
mov
dec
and
inc
and
inc
ret
out
loopne
or
mov
mov
inc
fsubp
push
jge
mov
add
jno
pop
sbb
lret
pop
inc
clc
xchg
jne
sbb
das
inc
divl
xchg
adc
pop
inc
add
cmp
jb
fsubrs
mov
addr16
push
mov
jns
sbb
int3
int3
xchg
inc
adc
rcrl
leave
bswap
sbb
sub
push
add
js
pop
stos
fcoml
and
rclb
jns
dec
mov
mov
xchg
cmp
inc
jge
mov
lea
call
imul
insl
lds
std
push
lahf
fs
pop
xor
cmc
jecxz
mov
adc
out
xor
pop
xchg
xchg
jns
pop
jnp
repz
dec
pop
push
and
mov
push
mov
ret
jb
popa
inc
loope
les
or
xor
pop
lds
in
fldenv
insb
xor
aam
xchg
sbb
cmpsb
in
jmp
adc
xlat
and
outsl
not
sbb
fwait
mov
adc
add
jns
dec
mov
and
sub
jp
stos
es
clc
lock
lcall
in
push
jbe
lds
icebp
repnz
popa
mov
insb
push
adc
mov
xchg
pop
cmpsb
and
ja
mov
fnstenv
mov
iret
incb
xor
fcmovnu
bound
in
subl
mov
push
or
loop
into
lea
push
or
push
and
xchg
cltd
sti
pop
test
mov
mov
aaa
sub
add
add
jns
xlat
loope
call
aas
push
mov
mov
push
call
cs
adc
mov
jl
mov
fs
outsl
jmp
js
arpl
scas
add
dec
pop
das
das
fisttpll
les
push
repnz
cmp
mov
adc
push
dec
ret
aam
xor
imul
aad
adc
in
sbb
shll
jo
out
cmovo
shrb
ljmp
inc
enter
stos
gs
inc
cmpsb
push
jae
jb
loop
mov
dec
cmp
sbb
add
enter
js
imul
jb
lds
push
sti
pop
arpl
fnstsw
loopne
jb
lods
push
and
movl
faddl
stc
dec
call
aaa
push
iret
lret
fwait
push
aam
das
push
das
in
fiaddl
mov
in
push
imul
jle
in
add
test
jmp
inc
cli
rcl
and
vmulpd
lahf
jle
mov
scas
stos
sbb
sbb
inc
sub
ljmp
xchg
ds
in
push
xor
ret
adc
push
jns
adc
dec
and
stc
ret
sbb
pop
xchg
fisubrs
xlat
popa
sti
int3
cs
out
xchg
lock
jns
xchg
mov
sbb
aaa
popa
mov
adc
repnz
bound
mov
xlat
jne
mov
mov
sti
xchg
dec
mov
mov
jnp
jg
es
call
mov
add
mov
adc
mov
mov
lret
push
sbb
vmulps
pop
test
xchg
mov
push
aas
cmp
push
push
xlat
inc
lret
clc
push
add
mov
loopne
cmpl
sbb
imul
sti
add
das
inc
add
imul
out
ljmp
repz
push
mov
inc
lock
ja
add
sub
decl
outsb
inc
xchg
add
xlat
stc
hlt
push
mov
push
add
xchg
sbb
movsb
adc
es
sub
sub
fstl
fnstsw
pop
and
lds
add
cmp
sbb
imul
dec
and
mov
ret
rorb
mov
mov
test
mov
leave
pop
mov
lret
sti
fsubs
push
pop
divb
xchg
lods
dec
add
movsl
add
imul
rorb
mov
ret
pop
or
lds
cld
ret
inc
leave
dec
jg
jns
sub
pop
dec
into
xchg
pop
xorl
outsl
add
dec
dec
add
push
in
daa
lahf
ljmp
sub
stos
mov
in
fwait
stos
mov
xchg
pushf
adc
cld
das
mov
cmp
icebp
fmul
mov
lods
sub
xor
test
pop
add
xchg
out
ljmp
fiadds
lods
leave
mov
scas
push
cmpsl
sbb
test
pop
iret
in
jecxz
dec
cmp
jno
mov
jge
pop
comiss
js
cltd
mov
dec
ljmp
out
cli
dec
sbb
loopne
out
add
je
loop
adc
adc
or
pop
or
outsl
jge
sbb
mov
test
repnz
pop
xor
data16
add
add
dec
fstpl
mov
dec
lret
pushf
movsb
mov
stos
xor
clc
repz
push
rolb
xchg
jo
enter
hlt
dec
cmp
cld
push
adc
cmc
dec
lea
fistpl
loope
lods
inc
mov
mov
hlt
rcll
dec
call
divl
loope
jge
leave
movsl
movsl
dec
in
xchg
and
pop
or
fdivrs
pop
out
inc
cmpsb
in
mov
in
adc
mov
movsl
adc
cmc
jp
cmp
das
shr
sbbl
sbb
cmp
push
in
bnd
int
out
mov
mov
jge
int
lret
dec
dec
jl
mov
sbb
fldt
ljmp
loop
xlat
test
out
sbb
jge
xor
lds
test
mov
sbb
jecxz
lea
and
mov
or
sbb
xor
aaa
push
lea
ss
jge
sbb
clc
lods
mov
add
loop
faddl
xchg
dec
pop
stos
jns
adc
data16
test
clc
pop
idivl
mov
out
adc
xchg
cmpsl
sub
push
dec
testl
push
popa
xor
jecxz
fsubrs
fstps
divb
xor
and
arpl
shll
inc
clc
mov
icebp
jbe
aaa
call
inc
xor
mov
ljmp
xor
test
test
sub
rcl
or
scas
cmp
and
leave
in
imul
and
or
xchg
lods
mov
pop
pop
repnz
dec
dec
mov
dec
push
call
es
cmpl
frstor
std
push
gs
repz
rol
dec
ror
lea
cmc
jecxz
xchg
cmpsl
rcrb
jecxz
ret
outsb
and
adc
scas
das
subl
in
fcompl
into
or
mov
mov
cld
push
jno
inc
fs
sbb
mov
lds
hlt
pop
in
loope
scas
and
fisttps
inc
fst
xor
xchg
popf
scas
xchg
jg
xor
or
jmp
out
cmpsl
mov
or
jl
fldt
int3
daa
push
pop
shrl
mov
sub
jp
stos
repz
repz
jmp
push
push
cs
ret
push
cmpsb
pushf
jp
shll
add
sub
jl
test
leave
lods
fdivrl
jmp
hlt
in
jns
dec
rcrl
and
lods
inc
pop
jns
xor
mov
push
dec
repz
sbbb
cmp
lcall
mov
pusha
stc
adc
mov
sbb
mov
add
jle
pop
and
mov
stos
pop
std
jmp
ret
mov
loopne
xchg
inc
cs
inc
int
mov
shl
jle
mov
push
push
test
xchg
cvtps2pd
mov
ja
mov
popa
jecxz
ret
loope
cld
call
and
stc
cmp
inc
inc
push
xor
out
loope
shll
push
sbb
inc
std
and
push
js
dec
mov
jmp
int3
shl
push
rcll
and
mov
fwait
jns
into
dec
jl
imul
lcall
xor
add
pop
push
out
idivb
in
cli
ds
mull
add
cmpsb
dec
sbb
cmpsb
daa
into
xor
xchg
mov
fwait
add
or
and
cmp
pop
daa
sub
xchg
inc
call
int3
arpl
mov
xchg
push
sub
jmp
ret
gs
ret
fs
jp
ret
push
add
call
insl
lret
lods
sbb
cmp
sbb
mov
lahf
fsubl
xor
das
jecxz
popa
fildll
in
add
popa
inc
out
imul
mov
je
jl
in
pop
stos
or
xor
dec
sub
xchg
push
insb
push
add
mov
loop
nop
call
and
mov
pop
push
sti
pop
mov
mov
pop
adc
std
cmp
test
xchg
stos
mov
or
ret
ret
add
jbe
adc
jo
jae
icebp
int
pop
dec
sub
push
scas
pop
ret
fidivl
dec
sbb
cvtpi2ps
dec
adc
push
insb
andl
cs
outsb
sub
bound
sub
cmpsb
sub
les
ja
pop
inc
jge
jle
push
mov
cltd
cmp
add
ret
mov
rcrb
sbb
or
xchg
into
das
es
adc
cmp
xor
sbb
sbb
mov
lds
mov
ret
lret
mov
fsubrs
mov
shr
mov
rorb
movsl
call
enter
lahf
add
jns
xchg
fwait
sub
movsl
icebp
pop
sub
out
popa
fidivs
shll
jmp
in
int3
je
add
inc
int3
pushf
out
out
sbb
in
mov
in
jbe
add
test
and
mov
or
out
mov
cli
dec
jno
push
jns
inc
mov
push
sbb
pop
cmp
xor
imul
pop
rclb
push
and
cmpsb
mov
out
adc
pop
push
bound
cmp
es
mov
cltd
daa
mov
sbb
je
outsl
jecxz
sbb
rclb
out
xchg
push
ljmp
and
test
fstpt
lcall
xchg
rcrl
push
xlat
rcll
inc
inc
aas
lods
in
ret
mov
shl
add
lock
jl
das
repz
mov
xchg
cmpsl
into
out
xor
or
xchg
out
repnz
mov
loop
lcall
lods
mov
ret
sbb
shlb
in
sti
cmp
adc
call
mov
or
adc
push
cmp
cltd
fs
inc
push
mov
enter
jnp
fstl
jb
pop
movsb
rolb
dec
daa
in
mull
ret
or
inc
mov
or
mov
popf
arpl
jne
sbb
sbb
inc
mov
loop
aaa
cmpl
popf
fcmovne
lret
xor
fwait
push
adcb
jb
inc
out
and
fdivs
mov
push
sub
sbb
outsb
mov
inc
mov
sub
add
inc
and
sbb
hlt
cmp
jecxz
out
and
clc
adc
test
out
pop
xchg
mov
pushf
sbb
dec
loop
inc
loopne
jbe
addr16
lcall
aas
cmp
outsl
jp
pop
adc
test
ret
jl
pop
outsl
popf
pop
jno
xchg
dec
fiaddl
fistps
shll
gs
fmul
test
int
sti
xchg
dec
pop
bound
insb
pop
pop
arpl
add
add
inc
cmp
pop
stc
mov
les
lods
mov
xchg
dec
je
cmp
int3
push
add
add
add
mov
stc
xor
fwait
rcrl
incb
dec
inc
repnz
xor
lret
adc
arpl
test
fwait
hlt
shll
out
mov
popa
pop
or
mov
les
jo
xchg
das
pop
stos
or
pop
or
rorl
add
fisttpl
cli
aas
cmp
leave
jb
setl
mov
push
out
jecxz
push
or
flds
cmp
loope
mov
movhps
repnz
loopne
inc
xor
xchg
push
test
lret
inc
mov
mov
pop
popa
mov
push
pop
and
jo
lcall
mov
ret
addr16
or
push
adc
cmp
sub
add
fwait
les
xlat
movsl
es
ljmp
adc
scas
inc
mul
xchg
mov
lahf
xchg
out
dec
mov
adc
xchg
imul
outsl
sub
cld
inc
shlb
sarl
push
push
movsl
jns
push
inc
sub
xor
lret
cmpsl
iret
pop
sbb
adc
rol
or
std
jo
push
pushw
cmovae
call
mov
inc
fdivs
insb
loop
es
jecxz
add
adc
xor
and
push
xchg
in
xlat
mov
lahf
subb
cmp
adc
aad
loopne
cli
jl
aas
ss
clc
lcall
sbb
mov
cld
jb
dec
daa
repnz
lret
xchg
cs
or
scas
mov
push
decb
and
insb
sub
add
into
cmpsl
push
fwait
rclb
call
sbb
ret
cmp
ret
xor
and
repnz
lret
repnz
les
inc
cmpsl
mov
cmpsl
cmp
iret
daa
fistl
cmp
jl
ja
mov
jae
test
dec
leave
testl
push
pop
mov
xor
push
ficompl
ljmp
pop
adc
enter
sbb
fs
push
into
mov
popa
into
ret
pop
mov
cmp
scas
pop
loope
cmc
insl
ljmp
hlt
ja
incl
and
push
sub
les
dec
aaa
push
pop
push
xchg
xor
jbe
mov
dec
shr
mov
in
sbb
and
mov
cwtl
stos
pop
or
scas
mov
repz
xrelease
fimull
mov
jae
dec
in
jns
and
add
push
add
cld
aad
shrb
das
sbbb
movsl
cwtl
sub
xchg
std
das
mov
loop
fidivrs
pop
sub
push
cwtl
cs
pop
adc
mov
orl
mov
gs
std
fmuls
loopne
pop
adc
xchg
and
mov
inc
stc
sub
loope
sti
cmp
mov
movb
or
int3
xor
or
jbe
sbb
sub
mov
and
hlt
add
cmpsl
ret
sub
pushf
cmpsb
cmc
iret
and
js
inc
add
cmp
and
out
or
jecxz
pop
cmp
testb
movl
pop
xchg
mov
xchg
xchg
push
mov
jl
loope
mov
or
movsb
dec
pop
sub
fists
data16
lock
inc
adc
push
cmp
pop
cld
enter
out
cmpb
lret
rorb
mov
sbb
scas
inc
jbe
jl
xchg
jb
insb
testl
jns
into
mov
xchg
cmp
add
add
xchg
out
lcall
loopne
popf
cld
xor
repz
fwait
or
sbb
mov
jp
cs
pop
test
sbb
fs
push
mov
jo
enter
out
jg
fcompl
loopne
imul
in
sbb
leave
sub
mov
addl
into
xor
test
inc
std
ds
lahf
and
aaa
push
mov
aad
xchg
movsl
cwtl
push
xchg
fsts
icebp
push
xchg
or
sti
push
scas
xchg
loop
dec
jl
xchg
nop
mov
sar
stc
pop
pop
outsb
pop
daa
lahf
notl
jmp
push
add
aas
mov
mov
scas
cltd
push
call
mov
mov
jno
in
lock
fwait
add
add
mov
es
mov
movsl
cld
jmp
in
add
mov
xchg
mov
pop
mov
daa
lods
jmp
fldenv
sbb
xchg
mov
add
out
jns
aam
pop
lret
or
mov
loop
pushf
out
inc
jns
xlat
leave
or
pop
cwtl
in
les
sub
xchg
sub
daa
testb
ret
rclb
icebp
in
jb
and
fwait
mov
or
mov
push
jae
jge
or
fnstcw
and
pop
ss
and
paddw
and
xor
sub
and
stos
shlb
std
mov
adc
adc
repz
xor
cmp
out
push
or
dec
popa
xor
ljmp
xchg
mov
mov
sub
shl
repz
inc
mov
lods
add
fiaddl
repz
iret
call
push
testb
jae
add
movb
add
inc
xchg
loope
outsl
pop
adc
jmp
test
add
push
std
sahf
cmpsb
jb
mov
push
shlb
andps
leave
cmpsl
add
fbstp
cltd
xor
fistps
jmp
xchg
test
xchg
push
enter
fs
or
xor
push
jg
aam
adc
outsb
lcall
push
loop
inc
out
adc
mov
pop
jl
sahf
sub
insb
hlt
jb
mov
push
mov
test
cld
sbb
inc
xor
add
add
cli
fwait
jecxz
lahf
mov
jb
mov
and
push
pop
jbe
mov
cmp
adc
sbb
clc
pop
divl
lds
sub
and
pop
dec
ficomps
out
aas
je
out
stos
test
mov
pusha
push
sub
inc
inc
lahf
pop
fsts
daa
ljmp
xchg
insl
out
ljmp
xchg
int
stos
daa
shll
xor
out
mov
pop
loopne
xlat
scas
not
ret
shlb
les
and
int3
sti
mov
add
or
gs
or
nop
adc
sub
mov
call
mov
repz
jp
mov
out
xor
nop
jl
xchg
cmp
in
dec
and
or
jecxz
add
push
mov
dec
jecxz
xchg
inc
sub
stos
pop
cwtl
loope
int
lods
add
add
sbb
enter
adc
stos
adc
shrl
testb
movsb
cmc
stos
and
push
jnp
mov
xchg
movb
adc
vpcmpeqw
hlt
ficoml
dec
jp
xor
pop
mov
in
lret
test
inc
xchg
icebp
scas
pop
xchg
bound
add
add
out
call
lock
pop
sarb
stos
or
pop
addr16
mov
sar
ffree
cmp
push
mov
jmp
cmp
or
aaa
xchg
mov
sbb
std
xlat
rcl
mov
mov
cmp
out
scas
aaa
ficompl
movsl
push
add
xchg
jge
sub
mov
imul
movl
mov
ret
loop
xor
scas
rcr
dec
enter
roll
cmc
loope
xlat
call
mov
out
sub
jmp
add
dec
add
insb
push
movsl
mov
cmp
pushl
cs
fldt
repz
in
ret
std
loope
xchg
mov
dec
inc
mov
xchg
pop
mov
xchg
cmp
sbb
fimull
stos
cmc
ljmp
cli
push
pop
dec
xchg
jecxz
mov
in
jmp
xchg
cmp
in
cli
ljmp
or
push
xchg
adc
bound
xor
stos
adc
xchg
loopne
mov
or
jno
decb
lods
sahf
mov
jne
dec
imul
xchg
outsl
in
ljmp
add
add
inc
add
pop
out
loop
sub
fwait
cmp
push
outsl
mov
push
mov
js,pn
ret
jp
pop
mov
inc
mov
test
xchg
sbb
loop
mov
jo
mov
call
std
mov
fisubrl
xchg
fstpt
mov
adc
mov
cmpsl
js
jo
repz
insl
xor
cs
mov
mov
mov
xchg
pop
push
push
sbb
adc
pushf
sti
daa
inc
in
sbb
mov
jb
iret
in
shrb
lods
cmp
jecxz
adc
cmpsb
sar
mov
scas
ret
movl
rorb
jecxz
stos
and
cli
sub
inc
xchg
push
lahf
je
sub
repnz
adc
repz
cmp
cmpsb
mov
sub
xchg
insl
sbb
jmp
xchg
push
mov
push
dec
mov
pop
mov
sbb
imul
pop
insb
stc
or
sbb
jo
push
adc
out
mov
cltd
ss
imul
jbe
sub
xor
jg
pop
pop
aad
out
pop
sbb
shlb
pop
fwait
inc
inc
xchg
and
xchg
push
sar
inc
mov
ds
and
cmp
sub
call
push
push
pop
sub
or
jecxz
cmc
js
aas
es
mov
lcall
adc
fdivs
add
ret
arpl
in
ud0
lea
lcall
mov
loop
daa
sbb
inc
les
or
jp
ds
cmpsl
incb
roll
jge
lahf
push
mov
scas
mov
and
pop
jnp
pop
ret
and
cmp
leave
fstp
and
ret
in
pop
mov
add
fcmovb
leave
sti
pop
leave
imul
sti
xlat
adc
or
shr
jg
xorl
jno
fcomp
and
rcrl
cmpsb
shrb
testb
jns
mov
jae
inc
lds
setne
rclb
fs
cmpsl
jge
push
jno
lods
aaa
scas
pop
dec
cmpsb
fwait
mov
lcall
ss
push
subl
mov
fcom
cmpsl
sub
jecxz
cmp
add
xchg
jns
xor
leave
xchg
outsl
cmp
imul
add
push
pop
test
sbb
and
xor
rcrl
lret
daa
lcall
mov
add
sub
mov
and
jne
inc
cmpps
aaa
rcll
add
in
movb
stos
cld
mov
pushf
pop
xchg
ficompl
lret
jbe
rorb
mov
sbb
mov
mov
jg
aas
ljmp
push
cmp
push
popf
inc
sbb
dec
daa
insl
sbb
sub
imul
imul
sub
fadd
movsb
push
dec
inc
sbb
lret
sub
mov
push
orl
push
xchg
lods
cltd
mov
cld
movsb
sbb
ret
adc
cmpsb
cmp
fwait
ljmp
in
outsl
lea
dec
mov
lods
or
out
fldl
popa
xor
in
jnp
cmp
nop
jae
lds
cld
add
push
mov
push
mov
arpl
jb
test
ljmp
sbb
test
jne
mov
mov
lcall
pop
push
jo
xor
stc
or
cmpsb
adc
add
nop
ljmp
dec
cmc
push
pop
in
cmpsb
outsl
xchg
test
cmp
ret
push
lret
push
pop
popf
cmp
stos
imul
push
add
hlt
adc
jno
test
pop
lcall
rcll
jmp
mov
adc
jmp
xor
pop
les
enter
imulb
movsl
aad
std
add
jo
negb
jecxz
scas
add
dec
xchg
pushf
jmp
and
fld
pop
in
mov
cwtl
enter
or
jl
dec
sbb
pop
fldz
push
lcall
testb
int3
pop
fnstsw
xchg
xchg
inc
inc
and
in
jp
das
outsb
fs
xchg
jp
in
push
xlat
xchg
mov
jg
lret
and
push
addr16
jp
mov
inc
mov
adc
fdivs
ja
aaa
cmpsb
pop
xchg
sub
aas
mov
int
pop
jbe
pop
adc
inc
cmp
into
pop
dec
inc
sub
dec
mov
push
movl
push
inc
pop
jg
xchg
pop
scas
jecxz
fmulp
lock
cmp
mov
push
and
inc
mov
test
cmpsb
lret
icebp
iret
mov
in
and
jp
test
mov
ds
stos
xchg
cli
int3
pop
mov
loopne
sub
push
mov
push
fdivl
cli
push
into
pop
mov
mov
push
ljmp
fsubr
fcomi
fnclex
cli
mov
pop
ljmp
jle,pt
fmulp
cmpsb
js
aad
scas
inc
in
mov
int3
mov
loope
cmp
cmc
push
ja
cltd
cmp
adc
loope
jecxz
mov
pop
out
xchg
or
lock
inc
loopne
or
mov
cld
pop
push
and
popa
pop
enter
xor
xor
jmp
shll
lahf
xlat
cltd
std
inc
or
dec
loope
jp
fwait
hlt
enter
xchg
push
add
lret
jl
dec
clc
mov
movsb
jmp
sub
cli
xchg
xor
add
push
loope
mov
cld
pop
lcall
pop
sbb
scas
int3
sarl
and
mov
inc
cld
incl
add
aam
jmp
push
ret
or
cwtl
popl
pop
xchg
and
add
out
or
jle
adc
xor
xchg
rcr
and
in
xor
fnstsw
enter
leave
mov
ljmp
xchg
cld
fmuls
insl
mov
or
adc
loop
xchg
insb
lods
dec
subl
add
pop
stc
sti
xchg
mov
push
rcrb
movsl
aam
test
pop
aaa
mov
xlat
test
ret
scas
mov
roll
out
dec
adc
push
jmp
int
es
aad
mov
sbb
les
and
in
sub
shrb
mov
push
int
in
mov
or
loop
ja
inc
and
out
mov
xor
adc
sub
fistps
cmp
and
xor
add
jo
cmp
dec
push
sbb
rorb
in
aad
stos
scas
push
stos
pop
fcomip
inc
and
addl
pop
add
adc
repnz
cmpsb
adc
test
stos
shlb
sub
adc
mov
add
or
push
inc
sub
mov
xchg
or
dec
push
ss
push
dec
xor
outsl
lods
cmovae
scas
adc
test
xchg
pop
jo
mov
into
xor
lods
mov
jnp
lahf
xchg
roll
testl
cmp
xor
push
cmc
mov
dec
pop
mov
cli
inc
lcall
cmp
jecxz
iret
dec
jmp
ja
push
mov
pop
addl
inc
add
mov
movsb
out
mov
into
out
mov
mov
dec
push
cmp
mov
add
int
fs
cmpsl
cmp
fidivl
insl
push
or
cmp
pop
mov
loope
adc
movsb
cwtl
popa
xchg
lcall
repnz
loop
das
sbb
sbb
xor
arpl
add
inc
test
test
movd
push
std
jbe
push
shl
ljmp
ljmp
inc
xor
sahf
movsb
outsb
sarl
adc
sub
loope
out
orb
xchg
in
add
xchg
insl
repz
scas
stos
cmc
inc
pop
aam
mov
inc
cmp
cmp
inc
jnp
inc
jecxz
jle
mov
add
sbb
cmp
mov
repnz
hlt
sahf
les
aas
jecxz
mov
xchg
fs
pop
sti
and
mov
or
pop
lret
mov
cwtl
cmp
inc
push
int
sahf
cmp
mov
lcall
ss
or
xchg
jg
fimull
or
add
jmp
ret
and
das
jecxz
in
push
push
addr16
sbb
das
push
cmp
sub
mov
ljmp
sub
sub
int3
or
cltd
push
out
mov
dec
sub
lret
cmp
xchg
jp
lods
outsl
shll
sub
es
in
sub
aas
shll
mov
test
xchg
out
loope
cltd
adc
and
mov
sbb
mov
dec
mov
test
in
mov
in
mov
std
leave
mov
lcall
lret
mov
rolb
stos
sbb
add
cmc
out
out
cld
inc
sub
and
xlat
add
jmp
xor
cld
xor
repnz
movsb
xchg
xchg
stc
in
inc
mov
mov
enter
mov
shr
xor
and
mov
mov
cmp
icebp
je
mov
lods
sbb
out
andl
cmp
aad
nop
or
mov
add
add
mov
and
out
bound
data16
xchg
das
sbb
push
out
mov
sti
call
jne
outsb
cwtl
repz
adc
jns
or
inc
mov
mov
sbb
data16
mov
push
sub
mov
ljmp
push
add
cmp
sti
sbb
std
push
mov
jp
int
fdivr
mov
add
adc
adc
cmp
dec
loop
imul
decb
xchg
adc
orb
adc
mov
gs
std
imul
lea
mov
inc
mov
nop
pop
into
lock
test
add
adc
push
xchg
sub
jno
es
aam
push
arpl
popf
rolb
pop
mov
mov
in
iret
push
mov
add
mov
jmp
dec
mov
popf
inc
mov
mov
mov
lods
loopne
push
pop
fisttpll
cmc
enter
inc
adc
lret
jecxz
push
aad
shl
adc
dec
ror
pop
ss
lods
sbb
leave
rcll
or
xchg
fimull
pop
cld
sbb
fldcw
xchg
ss
inc
cmp
cli
rcll
jno
mov
push
mov
cld
pop
dec
pop
fst
and
xor
mov
idivb
adc
mov
sub
movsb
lcall
add
hlt
loop
xor
imul
rorl
lods
or
cwtl
dec
and
pop
sub
push
sub
mov
ficomps
sbb
ljmp
stc
lea
cmp
xchg
repz
hlt
out
hlt
out
mov
jno
movsl
mov
rcl
pop
mov
pop
xchg
scas
test
scas
inc
add
push
mov
jg
jmp
fiadds
fsubrl
sbb
xor
push
or
fnstenv
or
in
in
cwtl
imul
adc
add
cli
ret
sbb
inc
iret
pop
mov
push
xor
mov
mov
sbb
fnstenv
loopne
aad
or
test
pop
add
mov
push
pushf
ret
xlat
and
xchg
sbb
int3
ds
cs
out
add
je
lahf
dec
or
ljmp
mov
jns
pop
xor
in
mulb
xor
mov
scas
add
inc
sub
mov
mov
xchg
ret
testb
aad
mov
adc
pop
mov
ror
cs
or
test
xchg
mov
decb
dec
push
mov
dec
cwtl
adc
sbb
out
pop
sbb
and
xchg
loopne
dec
sbb
fwait
xor
ss
add
loope
iret
sbb
push
mov
xchg
dec
cli
imul
inc
sbb
dec
jecxz
jns
add
jp
or
ficoms
pushf
shl
dec
or
sbb
cld
test
sahf
xchg
and
dec
into
mov
xor
pusha
outsl
dec
mov
sub
movsb
ret
push
add
xor
and
or
jp
insl
push
and
jb
nop
fisubrs
mov
mov
mov
xchg
data16
adc
jb
loopne
adc
shl
data16
cmc
inc
jmp
das
movsl
adc
jmp
in
test
int3
sbb
push
into
dec
call
fwait
mov
or
mov
sbb
mov
pop
fldcw
adc
sub
and
add
pop
or
fistpll
loope
inc
add
int3
imull
gs
push
pop
in
sbb
enter
hlt
test
test
mov
mov
sub
mov
je
cmp
xchg
pop
mov
push
icebp
jnp
out
inc
arpl
cmp
xchg
loop
inc
test
mov
ljmp
cmc
loop
dec
call
or
cmc
data16
inc
arpl
ljmp
pop
icebp
lods
or
jbe
mov
stos
cs
xor
jg
shll
pop
mov
ljmp
fs
out
jecxz
outsl
pushf
test
mov
mov
push
cld
cmp
pop
cltd
mov
ljmp
mov
movsb
dec
into
dec
adc
sti
icebp
inc
sbb
dec
andl
movsb
js
lret
in
jl
loope
int
fidivs
cli
and
mov
shl
cmc
or
push
cmp
out
insl
lea
inc
ficomps
or
xchg
leave
aad
pop
outsb
ds
pusha
test
jnp
ret
call
dec
xor
in
in
and
and
and
or
push
icebp
loope
pop
jecxz
test
repnz
js
jb
movsl
mov
jnp
test
and
pusha
lret
cmp
repz
dec
mov
stos
mov
in
cmp
loope
rcr
sub
push
cmp
mov
dec
sbb
dec
mov
ja
mov
inc
jecxz
cwtl
icebp
sbb
test
xchg
loopne
aam
test
call
ret
out
test
jmp
js
iret
cmp
movsl
push
sbb
cmc
add
mov
lahf
int3
dec
fdivrl
jp
lahf
dec
dec
cmpsl
jbe
mov
dec
inc
cmp
lods
aam
test
xor
icebp
js
pushl
test
add
fs
dec
int3
inc
shr
xlat
lea
mov
or
dec
xchg
pop
or
std
jle
sbb
jno
mov
loopne
or
clc
je
add
jbe
jp
push
adc
aas
jno
stos
pop
loope
xor
pop
or
in
imull
xchg
out
dec
ja
add
inc
testl
cmpsl
dec
adc
pusha
adc
dec
adc
adc
mov
outsl
sbb
pop
stc
aam
dec
iret
pop
js
cli
jno
jmp
cs
xor
repz
xor
scas
insl
adc
aam
add
dec
jp
pop
call
xchg
mov
jecxz
sub
fcompl
lret
ret
pop
in
pop
and
dec
shr
fbstp
xor
std
pop
inc
push
or
sbb
js
loopne
popf
push
adc
mov
cmp
mov
int
sub
data16
lock
mov
call
lods
push
jecxz
push
mov
xor
add
out
and
sahf
mov
xor
sti
mov
mull
test
and
or
lds
xor
ret
inc
mov
sti
mov
pop
dec
lahf
inc
cmp
xor
in
adc
cwtl
push
outsl
push
push
xor
sub
jp
fnstsw
inc
imul
or
jo
mov
xchg
xlat
adc
or
push
loopne
cs
mov
mov
call
add
bt
mov
xchg
sbb
and
or
icebp
inc
insb
leave
in
popf
notb
sti
pop
sbb
in
mov
in
sbb
and
arpl
test
pushf
incl
pop
int3
mov
push
lock
js
dec
cwtl
insb
push
xchg
or
ret
mov
lcall
mov
ficoml
adcl
add
pop
inc
sub
pop
mov
aad
add
jns
pop
push
std
repnz
cld
adc
mov
jl
pop
test
data16
loop
ljmp
jle
lock
fldln2
mov
scas
mov
out
adc
sub
sub
sub
add
mov
insl
sub
sub
out
push
sbb
pushf
pop
in
insl
aad
shll
data16
loopne
push
fcompl
push
mov
cli
leave
inc
outsl
and
aas
cmp
mov
xchg
push
cld
xlat
pop
stos
xchg
clc
mov
sarl
insb
scas
push
test
inc
push
lahf
adc
fisttpl
inc
test
movsl
mov
pop
call
mov
jne
jbe
test
inc
xchg
lds
cmpb
jne
mov
lods
insl
scas
sub
fs
ret
sar
movl
out
mov
test
sbb
xchg
sbb
lea
add
sub
stos
mov
int3
xchg
mov
cld
pusha
call
loop
es
nop
mov
mov
jl
mull
jecxz
or
pop
popa
xlat
jge
inc
jmp
cld
pop
mov
cmp
aas
pop
test
rcrb
mov
loope
dec
jo
pop
inc
jnp
push
pop
test
xchg
sub
mov
mov
cwtl
xor
flds
cmpl
movb
cltd
flds
inc
sub
jp
mov
scas
stos
cmpsb
ret
mov
addl
cmc
push
cpuid
inc
inc
rol
lret
jae
sbb
pop
jg
lret
in
push
ljmp
inc
pop
mov
jb
inc
popa
lret
mov
add
add
fpatan
xor
xchg
add
out
fcoml
stos
aas
mov
mov
lds
and
cmp
lea
xchg
test
fstps
xor
push
stos
aam
inc
std
popf
popa
inc
cmpsb
push
or
sbb
idiv
pop
insl
push
jmp
outsl
sub
insl
mov
cmove
cs
ljmp
mov
je
cwtl
mov
dec
xchg
jns
xchg
pop
cmp
dec
or
cmp
mov
mov
cmp
ds
sub
add
mov
pusha
stos
mov
sub
aad
push
push
pop
adc
mov
inc
dec
hlt
inc
jecxz
push
mulb
cltd
bnd
add
in
mov
xor
mov
mov
stc
cmpb
mov
push
shr
sarl
ret
scas
std
leave
xor
pushf
pushf
inc
das
xchg
bound
xchg
and
fcompl
daa
or
mov
fs
call
xchg
cmp
mov
push
add
sbb
cmc
push
sbb
jbe
aad
mov
jbe
and
lret
pop
mov
dec
outsb
das
lock
sbb
sti
pop
pushf
sbb
push
pop
pop
jmp
add
adc
imul
inc
cltd
shll
pop
sbb
jl
pop
cmp
iret
bound
sub
jmp
adc
js
mov
xchg
ss
xchg
mov
stc
cld
sti
jb
lds
xor
adc
andb
jo
xchg
cmc
pop
push
stc
out
jno
mov
in
scas
bound
jns
fwait
xor
ds
ljmp
sub
dec
divl
mov
dec
test
add
mov
sbb
add
mov
or
inc
inc
mov
popf
orl
fsubl
fnstenv
jle
jo
xchg
dec
cwtl
dec
inc
lcall
lds
aam
dec
outsl
out
fnsave
gs
xchg
clc
cmp
sarl
rcrl
adc
or
pop
adc
xor
push
mov
neg
add
dec
xchg
rcrb
rcrl
add
cmp
push
bound
mov
cmpsb
mov
dec
jecxz
lods
adc
jmp
sbb
lret
mulb
push
dec
xchg
or
filds
dec
in
jecxz
sbb
jns
test
inc
pop
adc
movl
pop
popa
cmp
orb
mov
mov
pop
loop
rcll
push
adc
and
and
and
loopne
push
xor
rorb
mov
clc
jp
xor
pop
lods
mov
loop
loopne
call
lret
loopne
mov
lock
ffreep
enter
push
or
and
add
xor
movsl
test
or
cmpsl
std
adc
es
call
fsubrs
and
in
xchg
jmp
call
mov
dec
xchg
pop
cld
inc
in
push
mov
xlat
mov
jecxz
loopne
fs
loop
psrlq
cmpsl
pop
jg
daa
and
xlat
and
push
gs
icebp
and
in
jno
sbb
xor
mov
adcb
pop
cmp
sbb
cmp
arpl
jmp
xor
xlat
test
mov
in
les
cmp
int
outsb
mulb
gs
sbb
popl
mov
adc
jo
add
lea
insb
and
mov
or
jle
and
push
cmp
sahf
push
adc
add
insb
inc
mov
add
aaa
jb
ja
ret
dec
pop
inc
pop
and
addr16
aad
lea
call
jns
sbb
pop
addr16
call
xor
jl
dec
clc
mov
pop
out
pop
add
jbe
cmc
lcall
mov
roll
dec
jge
or
xchg
push
lcall
in
sbb
cli
pop
jns
sti
cmp
icebp
push
lds
lret
mov
sbb
mov
sti
insb
dec
jle
xchg
push
or
out
inc
fld
inc
loopne
mov
pusha
xchg
std
and
push
inc
sub
mov
ficompl
jne
jmp
fnstcw
mov
icebp
mov
js
push
pop
xchg
das
or
push
sub
sarl
cli
rcr
lods
rolb
pop
lret
cmp
dec
out
mov
imul
push
shrl
pop
insb
into
mov
jle
jns
call
sub
or
incl
sub
xchg
fidivrs
dec
das
mov
jg
inc
xlat
fcompl
outsb
int
sbb
iret
div
lret
pop
cmc
and
lret
dec
enter
insb
fadds
hlt
dec
mov
inc
and
pop
mov
xchg
add
dec
and
xchg
sarb
mov
mov
movsl
adc
dec
pop
mov
lcall
hlt
and
lock
mov
mov
add
dec
push
lcall
outsl
nop
cmc
mov
cld
cli
stos
xor
stc
cli
testb
add
iret
out
je
push
xor
test
add
mov
lock
call
rcrl
leave
fnsave
sub
pop
xorl
out
cmp
add
mov
pop
push
addb
and
call
adc
adc
cmp
add
add
lods
test
or
movsl
in
in
lahf
pop
mov
sbbl
in
cwtl
andl
pop
in
xchg
and
jmp
and
mov
mov
hlt
xchg
test
push
inc
inc
sub
jne
cmpsl
sbb
fadd
cmpsb
insl
int3
jns
dec
std
and
xor
mov
lret
jne
imul
ficoms
cmp
test
xorl
sahf
nop
outsb
pop
out
and
xchg
push
dec
outsb
sahf
test
rorb
mov
and
cmp
inc
xor
popf
jbe
ret
add
cwtl
dec
add
pop
xchg
stc
sti
inc
test
sbb
inc
scas
mov
aas
mov
shld
add
cmc
dec
mov
xor
sbb
dec
and
jg
jecxz
int3
push
aam
cmpsb
push
inc
js
xchg
pop
insl
dec
std
cltd
test
add
adc
inc
insl
mull
sub
out
inc
inc
cmp
mov
dec
shlb
subb
mov
xchg
clc
mov
lahf
inc
sub
es
sbb
movsb
mul
in
sbb
mov
xor
inc
mov
out
outsb
add
jno
mov
repnz
insb
movsb
push
jmp
push
cmp
aas
ja
sub
ja
movsl
shl
cmp
shl
dec
outsl
ja,pn
loop
loopne
xor
js
ss
dec
xor
int
das
pop
sub
enter
in
cmp
push
mov
cmp
fdivrs
lret
adc
outsb
inc
cmp
xchg
int3
test
jge
ljmp
sbb
xchg
jl
sbb
leave
into
sbb
ds
cmpsb
sbb
iret
insl
inc
mov
fadd
push
arpl
sti
scas
ljmp
cmc
mov
sbb
or
pop
cmp
xchg
fisubrs
pushl
mov
cmpsl
das
stos
popa
cmpsb
enter
popf
pop
andb
push
sbb
fwait
and
fidivs
xorb
sub
cltd
mov
int3
aaa
mov
xor
shlb
sbb
ss
pop
add
stos
into
stos
int3
in
adc
or
push
xchg
xor
dec
push
pop
imul
loope
aaa
loope,pt
lds
xchg
lret
cmc
adc
aam
mov
adc
sti
test
ret
fwait
sbb
push
fcmove
addr16
xor
pop
lcall
add
mov
pop
lods
inc
out
xchg
mov
push
cmpsb
add
mov
pop
jge
loopne
mov
clc
negb
in
mov
push
add
aaa
pop
mov
insb
xchg
sub
lock
ret
jbe
cwtl
push
test
fwait
stos
shrb
sbbl
xchg
jnp
pop
and
scas
mov
mov
je
adc
in
bnd
dec
insb
pop
scas
xlat
divb
cmp
outsb
mov
inc
or
pop
lea
loop
nop
addr16
pop
lret
out
fidivrl
fucomp
or
push
test
mov
mov
xor
jns
fstl
lahf
nop
mov
lock
add
lcall
sbb
mov
jnp
fiadds
mov
out
xor
aaa
shl
insb
sti
mov
push
repnz
aam
sbb
ret
je
inc
nop
enter
loope
bound
fldpi
shl
dec
pop
and
sbb
jo,pt
xor
dec
addb
dec
test
xchg
fiaddl
sarl
fisubl
repnz
mov
aas
mov
fbld
movsb
enter
out
mov
std
jae
ret
mov
cmp
add
add
sbb
hlt
mov
and
mov
repnz
sbb
and
mov
rorl
xor
cmp
push
or
xchg
xchg
and
jae
inc
stos
inc
hlt
cmpsb
cli
add
add
sbb
pop
mov
dec
aaa
mov
mov
in
mov
imul
notb
jo
inc
test
push
pop
cmc
pop
std
std
cltd
pusha
cmp
cmc
xrelease
ret
pop
clc
jb
ror
adc
movsl
shrl
pop
mov
xchg
cld
mov
dec
mov
adcl
inc
sub
sbb
dec
sub
stos
cmpsb
loopne
loopne
mov
lods
pop
add
popa
push
add
popf
adc
cmpsb
cltd
cmp
cmp
loopne
ljmp
addr16
pop
sbb
stc
leave
and
mov
addr16
sbb
repz
mov
sbb
data16
test
stc
fmul
adc
add
imul
inc
call
xchg
jb
pop
jno
cmpsl
push
xorl
cmp
jno
jg
addl
inc
out
or
xchg
and
out
pusha
cmpsl
push
movsb
xchg
lret
pop
aaa
rcl
sub
pop
sbb
imul
std
incl
daa
loop
and
call
sub
popa
fwait
xchg
call
sbb
neg
bound
ljmp
push
add
enter
cmp
movsl
sbbl
stos
mov
cmp
xchg
cmp
adc
and
das
lcall
push
jns
pop
das
mov
push
out
pop
clc
jge
push
push
mov
aam
push
cmpsl
stos
or
dec
inc
mov
xor
ja
pop
xor
mov
mov
xchg
mov
inc
outsl
mov
and
xchg
inc
clc
je
fwait
test
adc
in
cmpsb
xchg
clc
mov
inc
pop
movsl
in
push
jg
lds
lods
sbb
xor
inc
repz
jo
popf
mov
dec
xor
dec
in
lcall
aas
mov
and
call
pop
rcll
mov
insb
push
das
sbb
cli
jl
gs
adc
testl
and
in
imul
addr16
ficoml
push
jecxz
int3
push
or
aad
mov
mov
call
mov
decb
xor
sub
test
pop
out
pop
adc
and
and
clc
jnp
push
stos
fxam
sbb
push
leave
out
inc
stos
inc
scas
sahf
rcll
mov
fst
fstl
cmpsb
movsb
xchg
loope
push
jle
fsubs
loopne
add
adc
out
mov
mov
mov
jg
mov
xchg
lahf
sbb
xchg
insl
call
xchg
pop
cmp
push
jecxz
jb
sbb
sub
ja
ja
mov
dec
or
sub
xor
mov
sahf
loop
jl
add
lock
test
cmpsb
jg
pusha
and
mov
adc
pop
push
inc
out
jle
jmp
push
pop
insb
sub
fldln2
pushl
cli
cs
fisttps
sahf
pop
jg
pop
rcl
ror
push
pop
sub
cmp
int3
in
lret
add
dec
pop
repnz
sub
lds
loopne
jmp
loop
gs
xor
movsb
add
sahf
add
sbb
sub
mov
popa
jae
icebp
mov
repz
mov
dec
fnstsw
lds
lcall
pop
lods
mov
jecxz
movswl
mov
mov
out
nop
outsl
add
fildll
dec
dec
gs
dec
cmp
adc
mov
mov
pusha
or
xor
inc
or
popa
out
sbb
iret
and
sbb
xorl
pop
mov
cltd
inc
mov
xor
lret
dec
lods
sbb
outsb
xor
push
ss
int
fwait
xor
roll
add
and
es
mov
shll
push
test
inc
adc
and
push
xchg
push
int3
in
std
ret
jnp
push
push
adc
push
call
mov
fwait
mov
mov
cmp
call
push
loop
ffree
jno
dec
scas
outsl
pop
jno
outsb
sahf
inc
pop
inc
dec
dec
mov
sbb
lcall
sbb
pop
sbb
push
xor
mov
jg
inc
pop
test
sbb
fadd
sahf
pop
xchg
aas
cld
lcall
movsl
leave
adc
or
lcall
cmc
cltd
xor
dec
xchg
shl
pop
mov
fimuls
cmp
jg
push
repnz
ret
cmp
das
int
hlt
loop
gs
loopne,pn
out
sti
shlb
outsl
add
mov
pop
cli
add
mov
shrl
sbb
xchg
push
or
jmp
sub
loope
jnp
mov
pusha
cmp
stos
and
push
aaa
jno
test
roll
xchg
int3
inc
jbe
dec
push
jo
addr16
wrmsr
adc
lods
cmp
pusha
pop
daa
cmpsb
xchg
pop
ja
lds
aad
cmp
pop
dec
sub
sub
pop
stos
scas
push
pusha
in
push
xchg
scas
sti
in
div
lods
cli
out
iret
dec
add
cmpsb
arpl
loopne
cmp
push
xchg
adc
add
out
ja
xchg
std
xchg
sahf
lea
arpl
das
pop
sub
dec
fwait
or
and
popf
mov
mov
daa
dec
call
dec
sbb
outsl
cli
ret
xchg
mov
ljmp
lcall
and
fmuls
mov
mov
push
addr16
jnp
push
lahf
lcall
fcmovb
fsubl
leave
jg
lret
es
pop
fcomp
sbb
mov
aas
sbb
notl
mov
fmull
cmp
sub
adc
inc
mov
or
jbe
scas
aad
pop
pop
sahf
insb
push
and
inc
ljmp
movsb
inc
add
add
in
sbb
fwait
cs
jbe
fldenv
mov
xchg
mov
cmp
sub
pop
xchg
inc
test
hlt
ficompl
cmc
pop
sbb
decb
sarb
negb
fists
out
fucom
loope
cmpsb
xor
dec
cmp
mov
and
mov
xchg
int3
cli
idivb
fs
pusha
inc
fsubrs
xor
inc
sbb
lea
push
out
in
out
adcl
dec
out
mov
repnz
xor
or
jp
leave
pop
xlat
dec
out
aad
mov
int
in
push
into
add
js
xor
cltd
jge
cmp
push
push
lret
pop
cmp
add
out
lock
rcrb
imul
jne
jmp
mov
adc
adc
int
xor
sub
mov
mov
mov
or
sub
xchg
cmp
xchg
das
cld
sub
dec
icebp
cmp
xchg
addr16
jmp
shlb
clc
push
xor
add
sbb
decl
push
add
icebp
sbb
or
iret
sub
testl
movsb
pop
xlat
icebp
push
mull
in
sub
lods
xor
sbbb
negb
data16
mov
xor
loop
cwtl
ja
lret
add
sbb
mov
mov
add
sbb
fst
stos
cmp
shl
cmp
mov
xchg
inc
push
lret
xchg
outsb
sbb
lret
stos
xchg
dec
dec
xor
xchg
fidivl
sbb
rcrl
test
push
mov
test
pop
mov
cs
mov
pop
lahf
je
xor
jo
das
icebp
push
repz
fdiv
sub
stos
and
adc
xorl
inc
test
push
andl
xor
movsb
xchg
mov
cmp
outsb
mov
pusha
nop
std
in
test
mov
sbb
rorb
pop
jno
ljmp
cmp
dec
push
sarl
cmp
test
push
mov
pop
loop
lcall
mov
cmc
movsl
push
mov
lock
or
mov
jne
lret
sbb
mov
cwtl
fistl
jb
jns
lret
xor
pop
mov
pop
mov
cmp
fbstp
mov
cmpsl
cld
cmp
sbb
push
or
adc
je
push
gs
sbb
cltd
sti
fiadds
jg
sbb
inc
icebp
mov
ds
inc
or
shrl
insl
in
mov
movsb
inc
and
mov
pop
mov
xchg
dec
add
adc
test
adc
rcll
dec
rcr
rcl
mov
xchg
jnp
subl
movsb
cld
lcall
dec
pushf
insl
xchg
push
leave
in
cmpsl
popf
loope
in
test
jo
xchg
icebp
subl
dec
ja
xchg
cmp
and
mov
xchg
adc
in
test
test
mov
mov
lret
addr16
jge
jmp
iret
aam
xor
add
add
or
inc
mov
mov
aad
subb
jnp
sbb
mov
jae
add
leave
subb
jb
stos
mov
cmp
ss
add
mov
pop
xlat
mov
push
xor
push
mov
xor
mov
repnz
cs
sbb
pop
push
adc
and
stos
mov
inc
xor
jo
jmp
inc
inc
movsb
cmp
jmp
cmp
jg
int3
jge
pop
cli
lea
data16
leave
je
push
cmpsb
add
movsl
stos
sub
adc
add
xchg
cltd
pop
add
cltd
inc
fwait
scas
addr16
push
add
inc
imull
xchg
adc
mov
mov
mov
in
insb
add
push
pop
dec
jns
pop
stc
sti
test
jge
loop
scas
or
rorl
les
mov
jle
mov
and
out
sbb
icebp
or
mov
xchg
push
ret
int
and
push
xchg
rclb
pop
sbb
out
fidivs
mov
and
inc
xchg
push
mov
push
fdivrs
in
in
sbb
dec
arpl
jae
pop
insb
popa
xchg
xor
sbb
outsl
insl
push
sbb
sbb
adc
push
rolb
lret
shl
push
xchg
in
nop
fs
mov
fwait
sub
dec
stc
inc
fnsave
sbb
add
cltd
inc
jne
in
add
mov
and
shlb
shl
out
dec
dec
jne
lahf
jmp
out
dec
mov
pop
adc
test
pop
pop
lea
in
fimuls
jp
jo
in
jnp
in
sbb
pop
ret
inc
loop
adc
inc
in
in
mov
lea
cmp
jp
xchg
jge
test
add
test
cwtl
aas
push
das
and
pop
dec
aas
jb
mov
xchg
dec
adc
cmp
scas
push
leave
div
adc
pushf
pop
xor
bound
sbb
sub
adc
fadds
mov
or
cmp
or
pop
mov
mov
pusha
adc
das
dec
movsl
sarl
mov
mov
sbb
xchg
stc
push
pop
jns
dec
inc
cmc
stc
outsb
pushf
into
ja
pop
mov
inc
rolb
js
hlt
cmp
pop
push
xor
push
lret
addl
and
aad
xorl
jmp
out
fcomps
sbb
jp
sub
xor
xchg
lret
xor
loop
das
sarb
sbb
dec
ss
jae
dec
mov
jle
enter
arpl
lret
sarl
cmpsl
dec
loopne
push
pusha
bound
mov
dec
lcall
xor
mov
pop
sti
dec
div
enter
je
stos
loop
notb
jne
lods
movsb
push
lcall
sbb
cmp
fbstp
add
and
xchg
es
or
loope
xchg
inc
pop
pop
jnp
fidivrl
jl
push
mov
jns
and
dec
mov
add
lock
cwtl
and
aad
in
stos
cld
cmp
sarl
in
cwtl
fidivrl
out
mov
adc
mov
push
inc
clc
push
jne
cmc
sbb
and
add
and
pusha
out
jge
mov
add
in
scas
ja
cmp
pop
movsl
pop
pop
out
cmp
cld
jge
stos
outsb
fiadds
sbb
xor
add
add
xor
pushf
gs
jl
inc
leave
lcall
outsb
scas
adc
xchg
cld
jbe
inc
sahf
cmpsb
inc
movsb
rcr
les
mov
sbb
fidivrs
std
mov
pop
mov
inc
jmp
dec
add
pop
mov
xor
jg
inc
dec
fsubs
fidivrl
repnz
scas
cltd
icebp
leave
popa
cmc
mov
add
push
adc
xchg
stc
mov
andl
pop
xor
test
in
movsb
into
ret
pop
jmp
jb
out
add
test
dec
stc
xchg
int3
ljmp
in
sbb
add
imul
out
fsubr
mov
leave
dec
cmpsl
aad
sub
std
jne
mov
dec
cltd
pop
pop
lcall
xlat
push
test
adc
js
xor
insl
ret
insl
mov
sub
push
cmp
ud0
push
scas
enter
hlt
movsl
push
cwtl
shll
xchg
fldenv
inc
orl
in
adc
pop
fdivrl
mov
and
adc
nopl
loope
pop
inc
jmp
das
mov
or
sub
aad
inc
xor
xor
fidivrl
out
ficompl
cmp
xor
or
mov
in
fstps
add
jp
stos
leave
out
cmp
repz
xchg
outsl
push
jp
push
mov
xchg
clc
outsl
jl
mov
movsb
inc
jb
cmpsb
movsl
cmp
pop
clc
out
gs
and
flds
aaa
inc
xchg
and
pop
movsl
lcall
mov
mov
repnz
inc
cwtl
dec
sub
xchg
and
push
pop
fwait
rol
das
push
push
aas
pusha
test
adc
out
out
pop
fs
mov
fisttpl
inc
out
ljmp
or
adc
xchg
pop
mov
ljmp
mov
jp
pusha
or
pop
cli
popf
mov
adc
adc
shl
jnp
popf
les
iret
xchg
dec
sub
fcomps
xchg
sbb
lahf
imul
sbb
adc
pop
out
fmuls
pop
adc
jno
and
arpl
iret
or
es
ret
shlb
mov
jg
inc
push
out
dec
scas
ret
lds
iret
jo
or
outsl
in
dec
cltd
mov
pushf
lret
enter
mov
lods
sbb
dec
cs
ss
imul
xlat
fisubrs
loope
rclb
aam
pop
sbb
sub
mov
lock
jg
push
mov
jp
push
mov
push
add
stos
mov
push
xor
cwtl
cld
mov
or
ret
adc
je
cltd
adc
mov
sbb
sub
dec
ss
leave
pushf
sbb
sbb
ds
cmpsl
inc
aas
js
dec
xlat
push
cmp
adc
lahf
push
scas
jle
test
mov
lret
mov
cmc
rcrl
mov
pop
sbb
in
inc
cltd
and
mov
mov
lock
sahf
xor
xor
movsb
jmp
cmpsb
lea
cmp
fstpl
or
repnz
scas
insb
jg
rclb
jae
jecxz
push
fmull
add
push
jge
fisttpll
dec
sti
imul
into
lret
or
adc
arpl
clc
cld
push
mov
rorb
or
ret
push
movl
cmp
mov
icebp
sub
inc
ss
xchg
adc
cmp
add
in
leave
xor
pop
cmp
push
fiaddl
cmp
add
add
dec
xor
repz
sarl
xor
je
add
xchg
add
pop
xchg
les
push
mov
dec
orl
movsl
lods
jmp
push
lea
nop
mov
dec
and
cmp
add
mov
push
nop
mov
mov
fbld
xlat
jecxz
outsb
jb
cwtl
test
andb
mov
jp
shrl
adc
sub
outsb
jmp
gs
mov
fcoms
cli
sub
inc
popa
add
adc
sbb
js,pt
ljmp
callw
or
fbstp
jge
mov
adc
pop
insl
imul
idivb
ror
mov
inc
int3
negb
xchg
xchg
clc
jge
xchg
hlt
adc
stos
out
jae
lahf
jnp
ds
and
jbe
xchg
sub
sbb
cmc
gs
lea
mov
sarl
cmpsb
dec
sbb
push
sbbl
sti
cwtl
and
push
ljmp
xchg
pop
dec
cmp
test
je
outsl
push
jae
testl
sahf
pop
daa
fnsave
into
jecxz
sahf
outsl
cs
adcl
hlt
jb,pt
sub
fadds
lds
mov
cmp
mov
shrb
rclb
in
sub
ljmp
xchg
out
mov
push
cs
pop
cmpsb
jb
ljmp
mov
inc
xorl
mov
pop
xchg
ret
pop
cmp
lret
cmp
rcr
pushf
sbbb
sarb
dec
or
xchg
sbb
mov
inc
imul
add
add
add
xchg
ret
in
pop
sbb
sbb
loop
es
or
add
popa
lea
insl
push
pop
notl
clc
sub
mov
jae
sahf
pop
adc
sub
dec
aam
dec
mov
popa
ret
in
sbb
sahf
add
test
sbb
dec
mov
test
cmpsl
jnp
xor
dec
in
jge
jp
fidivrs
or
in
dec
fs
fwait
dec
mov
push
out
lahf
loop
dec
loopne
lcall
lods
stos
loop
int
inc
mov
xchg
pusha
fwait
in
pop
add
jmp
out
ror
or
push
cmpsb
mov
xchg
in
or
shrl
and
adc
mov
stc
jae
dec
cli
jl
pop
in
pop
lcall
sti
jns
andb
xchg
fldl
mov
lahf
lds
cmpsl
mull
sbb
or
fisttps
popf
cmp
pop
in
jg
sti
outsl
lock
fdivrs
xchg
out
stos
jnp
push
dec
fdivp
lcall
lahf
sbb
lods
mov
into
gs
mov
cmpb
dec
mov
cld
adc
mov
loopne
pop
sub
xor
mov
aaa
mov
jo
call
push
push
ss
out
insb
cmp
adcl
cmp
jmp
push
mov
js
mov
jecxz,pn
inc
mov
sub
fucomip
jmp
add
imul
jae
xlat
or
sbb
sub
cs
icebp
int
repz
hlt
out
and
cli
fnstsw
xchg
inc
repnz
cmp
sbb
jns
xor
fbstp
outsl
data16
pop
mov
sbb
jne
pop
insl
inc
sub
inc
idiv
pop
movsb
or
fdivl
pop
sbb
push
cli
dec
jmp
outsb
mov
sbb
test
push
jbe
pop
ss
add
outsl
out
rolb
and
cmp
xchg
push
in
pop
lret
push
inc
sti
pop
push
ds
dec
dec
ret
rcrb
ffreep
or
sub
stos
and
mov
fstl
stos
fwait
fstpt
pusha
iret
adc
push
or
dec
push
fisttpl
mov
popa
push
sbb
xor
in
pop
sbb
fildl
stc
mov
jo
mov
and
enter
loop
insl
inc
lahf
loope
jmp
push
mov
and
cmp
xor
and
lcall
pop
lds
rol
or
cmp
add
cmp
lds
insb
adc
push
mov
mov
fwait
pop
std
out
dec
insb
mov
and
dec
insb
push
dec
sbb
mov
adc
push
mov
mov
push
aam
lods
jne
fdivrs
lcall
out
mov
cmpsb
sbb
out
or
rclb
loope
push
xor
lcall
loope
mov
jns
jb
pushf
mov
aam
push
mov
xchg
xchg
mov
lret
test
scas
xor
mov
fnstcw
and
adc
enter
iret
inc
shlb
push
mov
mov
out
pop
iret
jl
data16
loop
leave
adc
xchg
inc
fstps
mov
mov
aad
inc
sti
and
xor
movsb
push
inc
adc
xchg
test
cli
clc
out
push
rcll
jecxz
imul
mov
inc
xor
mov
cmp
ret
insl
mov
jo
dec
pop
ljmp
mov
dec
push
add
addr16
dec
and
stos
xchg
mov
lahf
adc
mov
mov
mov
mov
or
push
cmp
lcall
push
push
adc
int3
adc
or
push
imul
xor
lods
fdiv
inc
dec
fdivp
add
in
stc
cmp
sti
pop
and
dec
push
pop
int3
inc
push
cmp
push
fucom
test
imul
inc
dec
inc
fldt
mov
xor
inc
lcall
test
add
lret
mov
jbe
adc
mov
pop
lret
fldcw
push
lds
sbb
lret
push
testl
or
je
add
xor
mov
pop
inc
icebp
mov
add
dec
rcrb
xchg
push
mov
push
cs
dec
iret
into
jecxz
xchg
inc
and
mov
hlt
adc
test
or
fs
fucomip
insb
push
sbb
cmpb
mov
dec
xor
mov
inc
popf
add
pop
ret
pop
and
or
cmc
mov
cmovl
dec
push
pushf
inc
bound
cmp
movsb
adc
pop
adc
sub
pusha
rorl
fwait
nop
mov
jge
pop
adc
cmp
dec
add
mov
sbb
mov
imul
insb
jns
cmp
rcll
add
xchg
pop
int3
dec
enter
inc
xchg
sarl
add
pop
lods
insl
inc
cltd
out
sbb
sarl
jnp
aad
in
jge
jne
clc
push
sub
push
and
lods
xchg
xchg
outsb
js
ljmp
cmpsb
ljmp
lods
in
sub
xchg
lret
cmpsl
ret
stos
ds
sbb
test
inc
pop
inc
or
scas
jmp
inc
out
push
pop
add
lret
int3
add
mov
js
sbb
movsl
push
adc
sbb
nop
fwait
icebp
ret
popa
inc
shlb
sbb
jno
or
push
out
pop
mov
cltd
test
pop
adc
fs
pop
into
fstps
test
sbb
lret
decb
dec
jmp
or
mov
jmp
jmp
leave
ret
add
testb
add
cmp
in
aad
out
mov
push
xchg
push
mov
rcll
pop
test
jmp
pop
jmp
and
xchg
test
sub
cmp
imul
cli
mov
in
pop
and
cmpsb
call
sub
and
cmc
jne
push
or
lea
xchg
insb
lea
dec
negl
lods
loop
jecxz
mov
inc
insl
jg
cmp
xchg
sbb
lcall
mov
aam
sbb
mov
pop
pop
pop
push
dec
inc
cmc
mov
dec
hlt
std
test
rol
repnz
fwait
icebp
enter
push
add
add
lods
scas
insb
aaa
aam
mov
inc
cmpsl
test
sbb
subb
ljmp
add
cmp
inc
ljmp
adc
xchg
and
push
xor
sub
test
xchg
mov
loopne
xchg
fbld
push
bound
inc
popf
sbb
add
mov
pop
pop
rorl
mov
rcrl
xchg
arpl
jecxz
arpl
cmp
xor
test
repz
push
cmp
faddl
inc
ss
push
sub
adc
or
mov
push
pop
mov
cwtl
dec
jae
mov
adc
movl
bound
ret
xchg
ja
add
push
test
movsl
cmp
shlb
test
pop
cmp
mov
ss
mov
sub
xchg
jecxz
scas
cmp
add
add
cmpsb
push
pop
pop
jno
out
mov
inc
xchg
daa
andl
push
aaa
jecxz
lcall
jns
cs
in
jecxz
pop
pop
aad
cmpl
bsr
out
hlt
adc
and
xor
popa
outsl
mov
std
mov
ficompl
mov
cmc
pusha
mul
mov
push
sub
in
mov
add
data16
scas
lods
add
ds
xor
mov
mov
or
shl
and
push
xchg
jle
cmp
aas
mov
cmp
cmpsb
jg
or
sbb
les
sub
std
mov
xor
in
push
negb
js
int3
sbb
cmp
sub
xor
push
int3
push
lock
sbb
xchg
mov
arpl
fistps
outsb
dec
pop
imul
push
pop
cli
xchg
sbb
addr16
repnz
xchg
in
and
mov
in
imul
inc
sti
int3
mov
jae
hlt
push
mov
fidivrl
ficoms
popa
cmpsl
dec
sbb
loopne
push
outsl
popa
mov
sub
movsl
jb
jbe
cmpsb
jge
jg
call
sarl
out
outsb
lcall
xchg
inc
imul
mov
aas
pop
add
loopne
cmp
cltd
mov
sbb
xor
ret
push
xor
popf
cmpb
cld
sub
xchg
jns
mov
int
lret
sub
inc
das
mov
mov
xadd
xor
test
add
clc
sub
fwait
mov
mov
or
mov
push
icebp
int3
fnstenv
lcall
xchg
cmp
loope
adc
ret
jecxz
aad
dec
aam
cmpsb
cltd
cmpsl
cmp
loop
push
lret
ffree
cli
movsl
xor
push
int3
lahf
adc
dec
cld
pop
mov
sbb
or
pop
mov
fwait
outsl
and
stos
pop
pop
xor
sub
ror
dec
and
ret
push
push
out
add
js
sti
mov
inc
rcrb
lds
or
leave
jnp
dec
fwait
int
call
sub
fstpt
ljmp
cmp
loopne
pop
push
shlb
xor
add
stos
insb
pusha
cltd
fcomps
mov
cmp
inc
sbb
jo
add
pop
in
repnz
out
imul
sbb
and
dec
xor
in
sbb
scas
lods
test
fsubl
clc
sub
mov
cmp
ja
cs
pop
push
pop
divl
iret
cmp
js
incb
loop
pop
hlt
jecxz
push
adcl
stos
std
dec
cmp
sub
shll
xchg
pop
push
inc
and
mov
mov
lock
lds
and
ror
shlb
mov
fisubl
pop
lods
out
push
push
popf
xor
add
inc
mov
lods
xchg
dec
sub
outsb
push
loopne
les
clc
mov
incb
jb
push
inc
pusha
mov
inc
in
int
and
cli
add
push
mov
sti
sub
stos
cmp
cli
fsub
mov
lock
cltd
sbbb
or
ljmp
push
je
es
lcall
enter
cmpsb
inc
clc
fs
fdivs
mov
or
es
sub
sub
pop
cmp
popf
sar
and
mov
rorb
adc
jge
cli
push
fidivs
roll
add
sbb
push
mov
and
inc
xor
in
add
sahf
divl
pop
xchg
int3
jnp
bound
loopne
sbb
push
imul
sub
subb
adc
inc
mov
jecxz
stc
movsl
sahf
cmp
mov
lods
icebp
nop
lods
call
push
pop
xchg
rcll
push
or
adc
lods
dec
jp
out
pop
push
jmp
mov
or
shrl
mov
aaa
jg
sbbb
xchg
aad
stos
testl
cmpl
data16
cwtl
dec
ljmp
insl
or
cltd
push
xlat
frstor
inc
cmpsl
ficomps
sbb
popf
outsb
and
push
mov
pop
imul
mov
dec
cmpsb
into
and
push
pop
mov
dec
lds
or
cmp
cwtl
pop
pop
dec
test
sbb
loop
jbe
push
ret
pop
adc
insl
addr16
addr16
xchg
mov
adc
pop
stos
sub
or
jbe
ds
or
stc
xchg
in
mov
pop
push
repnz
cli
aad
jbe
sub
adc
repz
insl
scas
cltd
add
dec
pusha
mov
js
push
sti
xchg
out
mov
stc
mov
sub
hlt
dec
mov
mov
add
out
stos
clc
fisubrs
lds
cld
push
loopne
shlb
arpl
fldenv
imul
int3
call
aam
cmpl
gs
mov
cld
popf
and
mov
xchg
push
addb
add
test
inc
ficomps
pop
push
std
shll
or
push
lods
lods
pop
or
jnp
outsl
ss
jbe
jg
sarb
repz
sahf
pop
mov
fwait
pop
in
imul
lret
lcall
push
mov
scas
jl
mov
jns
and
pop
adc
dec
nop
cltd
iret
inc
xor
sbb
test
iret
sbb
imul
pop
dec
adc
add
orb
jmp
add
xchg
rcrl
lret
cmp
incl
mov
nop
ret
shr
sbb
movsl
mov
mov
mov
enter
out
xor
xor
nop
xor
psubb
negl
mov
test
mov
ror
mov
cli
idivl
cs
cmc
jns
mov
mov
ljmp
sub
or
push
cltd
cs
mov
loope
push
mov
icebp
call
hlt
int3
std
setns
add
enter
loop
pop
jmp
jle
sahf
imul
fwait
lcall
lret
pushf
fildll
xchg
jbe
sbb
icebp
dec
push
sbb
add
push
jb
fimuls
jmp
pminsw
push
jnp
insb
sbb
inc
mov
sub
pop
insb
xchg
inc
dec
pop
jmp
fbld
inc
lret
insb
dec
pop
fsubrp
mov
testl
stc
sub
fisubs
jnp
mov
sub
test
rcll
iret
mov
bound
ljmp
cli
mov
cs
mov
cmpsl
call
lock
jns
fdivrl
add
lds
es
cmpsb
dec
sahf
jecxz
or
addr16
leave
shlb
nop
js
insb
fnstenv
add
leave
aas
ds
jg
out
mov
popa
jne
cmc
xlat
cmpsb
shl
adc
add
mov
push
xlat
jb
push
xor
repz
movsl
outsb
cmp
mov
jle
aas
lret
je
addr16
mov
pop
loope
hlt
data16
add
outsb
mov
es
inc
jo
xchg
push
jmp
jmp
add
add
add
or
pop
aam
fsubrl
xor
mov
mov
bound
aas
std
push
xor
or
lahf
fmuls
movsl
mov
loop
xor
std
stc
arpl
mov
gs
xlat
shlb
mov
push
out
stos
push
sbb
data16
dec
inc
ret
popa
jb
push
xor
cmp
imul
pop
jg
pop
dec
ja
push
and
sbb
test
add
mov
push
add
aaa
ljmp
into
cmp
sti
iret
and
scas
pop
jmp
pop
xor
lods
dec
mov
das
fwait
or
xor
loop
pop
test
mov
adc
jp
mov
jecxz
and
pop
xlat
cmp
pop
push
cmp
lcall
loop
sub
out
insl
xor
sub
inc
jmp
xor
test
hlt
fidivl
fs
add
data16
out
rsqrtps
shll
aad
mov
movsb
cmp
mov
pop
popa
icebp
lods
fwait
jmp
xor
call
jbe
or
loop
pushf
or
imul
out
es
scas
lret
iret
shrl
pop
mov
push
ss
push
push
add
jmp
lea
pop
movl
cmp
jmp
mov
mov
int
jmp
mov
dec
sbb
loopne
mov
jns
xor
cmp
lods
cmp
test
inc
rorb
jnp
fstl
fcompl
pop
mov
xchg
pop
fbld
sub
je
lret
js
in
mov
jecxz
sarb
imul
ljmp
dec
push
in
repnz
loop
add
add
imul
mov
cmp
mov
es
lds
and
or
add
jb
pop
outsb
daa
pop
in
ljmp
arpl
scas
xor
cmp
xor
inc
fs
andl
loope
sub
push
push
xchg
into
pop
xor
std
xor
sti
inc
mov
call
sub
and
test
outsl
pusha
sub
mov
mulb
mov
fisubl
sti
lret
rcrb
sbb
cltd
inc
push
lock
aas
add
sub
verr
xor
sarb
or
add
adc
xor
cmpl
or
adc
add
popf
scas
dec
addr16
outsb
stc
cmp
imul
js
adc
lock
push
lods
xor
push
in
ds
aas
insb
add
popf
jecxz
ljmp
movsb
inc
jp
leave
push
bnd
xorl
lcall
dec
jbe
lcall
test
leave
gs
sub
cmp
aas
shll
jg
xlat
sub
arpl
es
dec
les
mov
lds
dec
ja
int
ret
mov
pop
adc
xor
outsl
loopne
jne
and
in
or
mov
outsb
jnp
repz
push
ret
xchg
xchg
add
mov
insl
loop
sbb
enter
fistl
insb
jl
xchg
pop
push
call
pop
ret
cli
lds
push
inc
sbb
mov
jae
xchg
mov
adc
mov
stc
sahf
pop
mov
insb
jnp
sbb
pushf
iret
push
pop
icebp
or
mov
js
push
jb
leave
mov
push
mov
shl
movsb
out
imul
ljmp
fs
shl
xor
lods
sub
add
add
pop
mov
xchg
adc
hlt
loope
insb
lods
push
adc
popf
testl
or
or
add
add
and
test
push
outsb
call
or
stc
mov
sub
xchg
pop
xor
mov
sub
repz
jge
lods
push
xor
or
add
fisttps
and
inc
add
cmp
mov
inc
mov
mov
cmpsb
adc
cwtl
inc
mov
std
jmp
mov
shll
clc
add
mov
repz
cli
mov
lods
pop
inc
adc
mov
mov
inc
repz
inc
loop
ss
push
xor
psubq
adc
outsb
mov
iret
mov
cltd
out
ss
pop
hlt
pop
xor
dec
xchg
test
sti
movb
mov
aam
loope
sbb
xlat
pop
or
je
push
enter
lcall
mov
call
and
out
adc
nop
mov
jbe
mov
push
mov
cmp
pushf
test
sbb
popa
cmc
cli
insl
sbb
mov
mov
or
lret
insb
add
out
pop
and
push
jnp
lock
xchg
inc
lods
bound
sarl
pop
sub
clc
mov
push
enter
pop
test
pusha
lret
popa
clc
movsl
lret
dec
jns
sbb
mov
ret
dec
jne
les
movsl
inc
in
pop
fisubs
and
add
sbb
sahf
push
sahf
into
inc
jo
mov
cltd
scas
or
push
loopne
xor
imul
pop
adc
mov
jns
mov
jg
insl
pop
lret
nop
iret
fwait
std
add
dec
xchg
push
sti
mov
lods
pop
das
sub
dec
push
cwtl
rorl
lods
inc
cmpsb
adc
cld
pop
das
mov
cmp
add
add
add
xor
shl
cmp
push
push
xor
pop
es
ljmp
in
push
mov
jns
mov
mov
punpcklwd
mov
int3
and
sub
imul
andb
inc
xchg
mov
frstor
and
shll
mov
aad
lahf
fnstenv
test
mov
movl
and
ret
sub
pop
testb
dec
imul
incl
or
pusha
andb
mov
or
ret
and
xchg
pop
mov
cwtl
xchg
pop
adc
adc
pop
xor
xchg
cli
cmpsb
mov
dec
les
pop
or
das
insl
iret
data16
mov
jmp
fisubs
adc
adc
out
pop
stos
cmp
cld
pop
leave
aam
pop
pop
sbb
xchg
mov
loopne
jne
int
mov
sub
nop
in
adc
jl
jecxz
ret
or
adcb
ret
loopne
sbb
in
pop
inc
sbb
fidivrl
dec
dec
and
mov
inc
mov
sub
pop
jge
repz
inc
rcrb
add
std
or
addr16
xchg
std
adc
in
or
or
xchg
add
shrl
dec
xor
push
movsb
mov
inc
outsl
movsl
add
mov
cmp
out
imul
add
iret
in
add
test
popa
push
cwtl
pop
jnp
std
jns
xorb
mov
int3
sub
out
add
ja
in
imul
mov
dec
and
xchg
test
dec
and
fdivr
dec
sub
mov
repnz
negb
leave
rsqrtps
push
mov
roll
test
xbegin
test
gs
dec
jmp
movsb
xchg
sbb
inc
mov
imul
inc
and
ja
adc
scas
mov
push
test
dec
ljmp
lea
sbb
push
dec
outsb
dec
rclb
push
loop
loopne
xor
inc
push
movsl
mov
inc
fsub
enter
mov
fldl
rcl
jbe
ror
popf
bnd
dec
faddl
mov
lret
int
out
jecxz
pop
pop
sub
fcmovnb
call
jecxz
ja
jmp
fimuls
lahf
lahf
xchg
outsl
ret
mov
sub
leave
cmp
dec
stos
xchg
xor
int3
mov
dec
outsb
push
xchg
psrlq
shrl
xor
pusha
lea
xchg
imul
idivb
out
outsl
lret
mov
inc
test
jg
std
inc
push
jns
push
fiaddl
cltd
outsb
dec
out
data16
ror
lret
cmpsl
sub
in
outsl
push
pop
cli
jge
int3
add
dec
mov
jno
sti
mov
jnp
jnp
jns,pn
movsl
xchg
jmp
daa
cmpsl
scas
sbb
or
sbb
mov
aas
lcall
cmc
jg
lcall
xchg
pop
testb
insb
cmpsb
adc
loop
rorb
in
pop
ss
xchg
xchg
sub
mov
gs
pop
sbb
hlt
loop
inc
inc
fiaddl
std
movsb
xchg
pop
out
cmp
sbb
fld
test
insl
mov
cmpsl
xchg
cltd
adc
push
clc
adc
push
push
movsl
movb
aad
dec
jne
xchg
arpl
fisubs
mov
cmpsl
loopne
xchg
xor
mov
js
fstl
ss
cmp
mov
pop
xchg
cmp
jmp
lods
inc
repz
stos
inc
lret
inc
sub
out
sldt
add
mov
lods
out
push
int3
lret
lahf
cs
loope
add
pop
adc
pop
xlat
xlat
mov
xchg
out
sbb
fistpll
daa
int3
es
stos
bound
pop
xor
fwait
push
jns
pop
cmp
cmc
cmpsl
aad
and
pop
adc
inc
jno
pop
push
fwait
cltd
les
cwtl
pop
lea
and
leave
add
sbb
xor
ss
push
sbb
cmp
cli
cmp
sbbb
sbb
repz
sbb
popf
mov
mov
dec
adc
xchg
ds
movsb
sti
arpl
mov
scas
js
out
xor
mov
jbe
sahf
out
push
in
adc
xchg
push
test
stc
push
pop
in
pop
adc
xchg
les
mov
inc
imul
xor
xor
sbb
jge
ret
sbb
mov
orb
sub
imul
mov
add
push
adcl
in
popf
es
push
lods
test
cltd
mov
jne
std
mov
in
cmp
jo
adc
push
fsts
decl
dec
cli
inc
or
inc
sub
mov
sbb
pop
dec
or
out
fldt
or
pop
lahf
imul
sub
jo
imul
adc
add
push
outsb
pop
ret
add
jo
daa
cld
mov
dec
cwtl
mov
outsb
pop
into
and
mov
sahf
scas
xor
mov
pop
rol
mov
mov
dec
pop
cmpsb
push
cli
pop
jle
popa
push
loope
jecxz
addps
inc
inc
sbb
inc
jl
fwait
add
adc
adc
or
adc
xor
inc
jp
mov
iret
mov
xchg
mov
inc
test
jb
push
mov
outsb
push
cld
adc
xor
push
fwait
jne
mov
out
and
repz
cmp
cmp
scas
dec
negl
dec
mov
push
xchg
push
lret
rcrb
jmp
cmpsl
ficomps
jns
lock
pop
lock
add
and
inc
sub
pop
inc
mov
mov
xor
jne
sub
pop
movsl
and
out
sub
rorl
out
xchg
inc
mov
andnps
clc
jb
sub
inc
jnp
mov
scas
mov
and
sub
idiv
lret
inc
dec
loop
xor
push
sbb
sub
jo
mov
aaa
movsl
mov
pop
xchg
popl
xlat
loopne
sub
in
scas
add
xchg
sti
sbb
imul
daa
push
cmp
divl
sub
repz
pop
add
mov
jecxz
sbb
cmp
test
add
or
mov
cltd
add
fistl
mov
inc
gs
pop
pusha
adc
outsb
jb
out
es
push
mov
jp
addr16
add
sbb
outsb
xchg
xchg
mov
adc
clc
sub
mov
xchg
jp
jp
mov
xchg
pop
mov
adc
push
fwait
pop
cwtl
lret
outsl
outsb
or
push
les
push
arpl
out
jae
in
jmp
jb
daa
outsl
outsl
scas
push
push
filds
add
jmp
cmp
fbld
pop
imul
dec
in
adc
pop
lret
and
out
ja
icebp
push
xor
ret
cmp
ja
add
dec
lds
ror
sti
or
jmp
scas
daa
cmp
aam
pop
sbb
aad
test
fists
out
xchg
imul
pop
push
cmp
sbb
jle
iret
mov
dec
dec
xchg
xchg
xor
fadds
out
jne
insl
popf
std
out
mov
lods
shl
lea
xor
lret
cmp
clc
mov
hlt
out
inc
push
ja
bound
xor
data16
jns
or
mov
dec
cmp
and
aaa
mov
pop
sbb
dec
jle
lods
call
test
call
loop
cmp
add
push
lcall
pusha
add
jle
outsl
stc
lahf
addr16
xor
pop
das
out
mov
and
xor
int
scas
and
lods
xor
sbb
adc
test
mov
loope
sbb
lock
pusha
add
filds
repnz
cmp
insb
cmc
pop
fisubl
js
je
xchg
mov
mov
dec
jmp
test
sbb
xor
bswap
addb
jmp
std
out
xor
arpl
dec
cmpsl
fimull
lahf
fsubl
cld
jg
sbb
fisubrs
mov
jne
movsb
sub
inc
add
ret
popa
sbb
addr16
dec
or
cmp
out
mov
lahf
pop
movsb
mov
repz
jge
lret
push
test
arpl
fldenv
call
repz
das
cmp
ljmp
out
xor
sbb
int3
in
lcall
inc
xlat
rcll
xor
pop
xchg
das
fildll
sub
pop
adc
or
cmp
sti
mov
adc
push
xchg
jl
mulps
inc
in
ljmp
sbb
enter
jo
pusha
or
movsb
push
mov
xor
jnp
or
fiadds
enter
inc
mov
xor
fldl
addb
dec
mov
imul
mov
nop
sub
inc
push
xor
aad
loop
ds
push
pop
stos
js
jae
mov
repz
mov
pop
add
pop
or
aad
mov
stos
sub
or
lods
lods
movsl
xor
jecxz
sbb
cli
dec
mov
cmp
dec
and
data16
pop
mov
andl
popa
pop
sbbl
add
and
test
mov
mov
fstl
mov
lcall
aaa
icebp
cmc
cmp
mov
add
cwtl
xor
xor
dec
movsl
mov
sbb
sub
jb
xor
popf
lds
or
inc
scas
outsb
jo
cmpsl
adc
jo
xchg
stc
xlat
outsl
call
cwtl
inc
cmpsl
mov
mov
jno
stos
push
sub
pop
pop
mov
ret
sbb
das
xchg
fsubrp
pop
in
mov
in
ljmp
push
mov
push
daa
in
cmp
in
and
mov
popa
push
inc
addr16
test
mov
or
iret
ds
repz
lds
push
repnz
out
aam
cmp
xchg
imul
enter
repnz
cmpsb
sbb
out
in
jmp
inc
mov
cmp
scas
stc
mov
into
sub
and
xor
xchg
lods
out
sub
mov
dec
cmp
xor
pop
mov
stos
popf
dec
lods
movsb
mov
aas
mov
out
mov
adc
insl
adc
lods
out
into
negl
xchg
idivb
sarb
push
arpl
repz
inc
mov
push
push
sti
sub
mov
pop
mov
or
xor
inc
in
and
out
pop
jmp
xchg
push
sbb
sti
lret
push
inc
xchg
mov
mov
adc
push
pop
rclb
xchg
add
jmp
xchg
out
xchg
adc
dec
or
lds
mov
adc
stos
sub
xchg
pop
aas
sbb
xchg
ret
cmp
push
pop
sbb
idiv
into
pop
mov
ljmp
mov
fistl
pop
movl
out
imul
arpl
add
xchg
push
mov
inc
jnp
mov
add
jg
and
sub
les
cmp
incl
sbb
jmp
daa
jg
inc
sbb
and
sbb
mov
mov
and
into
arpl
jnp
imul
jns
jb
lock
jp
xlat
xlat
sti
jbe
ljmp
jb
imul
sbb
push
inc
mov
jb
sbbb
cmp
jb
cmc
in
in
je
iret
push
ret
and
std
pop
xchg
and
imul
mov
xor
ret
xor
sbb
ja
outsl
xchg
adc
fstpt
les
outsl
adc
inc
fstpt
fisubs
rcll
sbb
mov
fwait
jo
stos
pop
cmp
data16
mov
mov
adc
iret
lret
cs
int3
pop
bound
shlb
nop
jae
pop
mov
imul
or
aas
rcrb
sub
adc
stc
ds
adc
inc
cmovb
sbb
popf
fldenv
dec
xchg
data16
shlb
dec
loop
pop
popf
xlat
fcompl
xlat
int
roll
das
scas
mov
inc
lea
imul
sbb
notb
pusha
fwait
leave
push
dec
add
adc
mov
les
pushf
jg
nop
call
jae
add
subb
xor
add
add
clc
xchg
movsl
cmpsl
sbb
push
cmp
mov
mov
adc
xchg
mov
ss
or
leave
dec
inc
lock
mov
out
aam
std
lock
dec
test
rcl
test
lods
lock
aad
outsb
dec
scas
outsb
jnp
hlt
std
push
int3
ret
push
fnsetpm(287
aad
push
xchg
cs
jmp
mov
push
dec
sbbb
sar
and
lock
lret
test
sub
sar
sub
inc
stos
test
or
jl
inc
fwait
in
push
lods
mov
fsubl
nop
aaa
cltd
xchg
mov
outsl
loopne
inc
daa
popf
out
bound
push
pop
popa
outsb
mov
rorl
bswap
aad
push
push
push
inc
lcall
mov
mov
sbb
cmpsb
jne
cmp
sbb
sti
pop
sbb
ljmp
mov
push
cmpsl
jl
lds
dec
fistpll
je
fiadds
fs
ret
xchg
pushl
fdivp
lea
sbb
mov
lock
cmc
outsb
ds
loop
aas
movsl
in
inc
std
ret
jl
sub
xchg
push
pop
fs
push
lret
adc
or
fsubl
int3
cs
push
adc
jecxz
sbb
fildll
iret
in
scas
fiadds
push
or
sub
notb
jns
dec
pop
jle
mov
movsb
dec
fisttpl
jae
imul
test
xchg
pop
sbb
add
testb
mov
js
cld
lea
test
jle
int
sti
fwait
hlt
lock
je
pushf
rolb
rolb
outsl
add
out
sub
adc
and
jmp
fcmovne
iret
adc
inc
jne
fs
sub
add
movsl
jne
mov
cld
ds
les
xlat
aam
inc
js
adc
in
push
subb
sbb
mov
arpl
jae
les
lcall
inc
or
lret
stc
pop
imull
loopne
inc
pop
gs
repz
fmulp
jmp
cmp
cli
movsb
ds
iret
sub
pop
or
dec
outsb
fstpt
push
daa
inc
push
inc
inc
stos
iret
jns
mov
dec
pop
negl
sbb
int3
outsb
pop
ja
fdivrl
push
dec
xchg
sbb
fbstp
cs
sub
add
push
subl
fistps
shl
cs
repnz
shld
jbe
into
ret
in
jecxz
into
repnz
test
shlb
or
xchg
push
xor
push
outsb
outsb
push
stos
pop
inc
sbb
mul
pop
dec
pop
inc
sbb
outsl
push
fdivl
xchg
int
inc
fwait
lcall
mov
add
xor
movsl
mov
add
in
lret
outsb
fs
stos
dec
loop
imul
bnd
ud0
ret
push
movsb
ret
iret
lds
sbb
xor
push
cmpsl
cld
inc
sahf
and
sahf
out
in
push
inc
cld
sbb
mov
dec
push
imulb
leave
pop
scas
lcall
lods
cld
repnz
sbb
add
xor
test
adc
mov
inc
add
xor
imull
test
shrb
test
fwait
clc
lock
push
loope
cmpsl
add
push
pop
and
xor
or
mov
sub
scas
repz
ror
push
add
jl
aam
insl
push
js
sub
lcall
inc
jbe
push
mov
jnp
je
push
xchg
imul
test
insl
pop
fwait
sub
cmc
lret
push
lea
outsb
inc
movsl
xorl
roll
fdiv
aam
mov
pushf
movsb
inc
shrl
les
mov
push
push
cmp
call
push
lcall
pop
jno
cmp
mov
sbb
idivb
orl
jl
aam
out
rcr
lret
lahf
sbb
sub
sti
push
fnsetpm(287
fildll
cmpsb
iret
les
inc
jnp
mov
cmp
or
pop
mov
pop
ret
fwait
movsb
pop
fistpl
xchg
pop
xor
cwtl
jmp
imul
jbe
into
pusha
push
mov
dec
not
pop
ja
jno
jle
les
enter
jl
lds
mov
test
mov
adc
mov
pop
xor
call
mov
add
jmp
pop
xor
mov
hlt
enter
gs
sbb
lock
loopne
xor
icebp
movsl
adc
into
add
shll
sub
pop
push
pop
pop
sub
clc
mov
enter
jl
lds
fbld
outsb
lcall
sahf
mov
ret
push
iret
fwait
mov
add
inc
jo
fisttpl
pop
xor
jge
push
and
dec
aaa
out
mov
add
sub
in
aas
mov
add
jmp
pushf
xor
mov
shlb
ror
jae
mov
fs
orl
aaa
jae
jge
jp
fcoms
inc
outsb
mov
push
outsb
insl
movsl
mov
jl
mov
sbbl
mov
mov
mov
mov
dec
enter
jl
lds
test
pusha
lcall
push
cmp
cmc
sub
aad
cmp
add
or
sub
or
les
sbbl
movsb
aaa
pop
test
fwait
push
lock
push
aaa
sbb
sbb
fldenv
insb
push
test
xchg
dec
je
scas
scas
push
jge
push
andl
cltd
in
cmc
mov
jmp
aam
ret
dec
and
xchg
into
mov
dec
mov
mov
mov
pop
out
or
nop
imul
loopne
cmp
movsb
lock
pop
inc
add
jmp
mov
test
shlb
lock
push
aaa
sbb
std
pop
dec
adc
fs
cs
fnsetpm(287
ja
mov
inc
inc
inc
sbb
aam
ja
jno
jle
les
enter
jl
lds
mov
test
mov
adc
out
dec
sbb
in
js
xlat
shrl
ficomps
rorl
ret
or
fcmovnb
sbb
in
adc
dec
jmp
jge
push
xorl
nop
aaa
cmp
adcb
outsb
mov
push
jbe
into
js
mov
inc
jns
jbe
fcompl
pop
imul
fs
jo
movsb
add
mov
sub
mov
out
lods
dec
stos
nop
ret
sub
movsb
loopne
cmp
into
pop
push
add
jmp
inc
xor
mov
or
xchg
pop
fists
cs
lcall
push
or
leave
lcall
ret
fsubs
mov
add
push
inc
inc
inc
loopne
dec
mov
gs
pop
test
pop
scas
test
push
adcl
mov
xchg
outsb
push
incb
inc
into
xchg
push
push
roll
js
ret
pop
int
lret
or
enter
jl
lds
shlb
and
movsl
daa
jbe
into
xor
int
inc
xor
lock
add
imul
shrb
add
lds
repz
add
jmp
stos
xor
mov
fbld
pop
fmulp
add
iret
jge
push
sbbl
aaa
inc
test
mov
dec
cmp
mov
int3
fcomi
dec
aam
iret
outsb
leave
fmull
mov
adc
insb
dec
xchg
sub
push
or
mov
cmp
stc
popa
xchg
ret
push
push
push
insl
inc
push
fcomp
jns
test
lods
int3
ret
xchg
ja
push
mov
sbb
inc
stc
cmp
mov
adc
outsb
pop
loop
stos
xchg
or
lock
movsl
gs
xor
imul
cli
adc
sub
lret
loopne
test
fs
and
inc
leave
in
add
jne
adc
mov
xor
sub
out
add
sbb
push
sub
xor
daa
in
ss
std
pop
cmp
push
test
jg
add
xlat
imul
cmpsl
sbb
fistl
push
jp
iret
nop
test
mov
and
sarb
mov
inc
ljmp
sub
cmp
dec
xchg
imul
mov
daa
mov
out
xchg
xchg
add
repnz
shl
lret
imul
adc
mov
aam
dec
adc
xchg
cmp
push
les
ficomps
dec
out
and
jo
pop
sbbb
movsl
loop
jle
cmp
rcrb
movsb
pop
imul
sbb
xchg
mov
scas
mov
in
dec
jbe
xchg
shrl
adc
mov
adc
cmpsb
sbb
lea
push
sti
push
xor
push
adc
or
add
pop
dec
xchg
and
mov
jmp
mov
fs
add
jecxz
cld
call
adcl
out
lods
push
test
push
out
adc
cmp
lock
push
leave
sbb
xor
insl
into
inc
out
pop
outsb
adc
cmp
add
jo
mov
and
out
push
int
imul
repz
mov
jg
int
sbb
fs
mov
mov
pop
push
test
sahf
sahf
xlat
das
jge
add
adc
clc
mov
adc
inc
push
and
lcall
scas
cmp
lcall
call
xor
call
cld
jmp
lods
mov
pop
js
mul
popa
jmp
neg
ljmp
stos
addr16
lock
jae
test
mov
push
mov
movsl
and
and
test
das
adc
mov
fistl
fistpl
and
adc
in
mov
push
xor
pop
xrelease
adc
push
fs
mov
lahf
out
test
scas
xchg
pop
fs
sbb
mov
aaa
jbe
add
and
lds
filds
repnz
xor
xlat
mov
push
mov
adc
repnz
sub
sub
popf
add
iret
mov
in
icebp
sub
and
xor
dec
adcb
cmp
mov
mov
or
mov
pop
imul
in
xor
adc
jae
sub
sub
addr16
cmp
pop
sbb
jmp
out
jo
pop
pop
in
dec
xchg
imul
fiaddl
xchg
jg
mov
aam
pop
cld
xabort
daa
xchg
ret
das
pop
scas
imul
clc
aam
add
cmp
insb
ret
mov
dec
add
fldt
cmp
push
movsb
or
lret
push
add
test
out
cmpsl
mov
push
scas
stos
aam
rcrl
xor
cmpb
cld
lea
sub
lea
sub
lea
fistpl
data16
daa
addb
imul
mov
repnz
imul
xor
xchg
cltd
sub
sub
pop
aam
les
test
lods
push
push
inc
sbb
lock
daa
inc
xor
movsb
dec
ss
cmp
dec
nop
test
shl
or
push
xchg
fcmovne
repnz
icebp
pop
push
adc
insl
mov
imul
cwtl
sub
std
jo
popa
xchg
inc
pop
fsubr
fistpl
jmp
jnp
loop
shll
lret
rorl
add
jecxz
push
inc
add
mov
jle
loop
and
gs
rcrl
fimuls
add
ljmp
and
xor
or
or
scas
push
add
fs
mov
fidivl
xor
mov
inc
xchg
decl
cmp
aaa
into
jae
xlat
clc
push
xchg
push
or
repnz
jmp
enter
jmp
jmp
pop
int3
xchg
inc
fsubl
gs
mov
pop
sahf
iret
push
popa
push
dec
cmp
outsl
sti
movsb
dec
stc
pop
and
mov
outsl
dec
xor
repz
xor
pop
pop
ja
test
xchg
js
pop
rcrl
sub
jmp
jno
loope
add
sahf
fwait
shrl
adc
dec
jecxz
pop
repz
lds
mov
push
or
imul
leave
dec
repz
fwait
pushf
clc
xchg
mov
jne
into
jbe
dec
out
xor
mov
add
add
pop
fdivrl
or
fucomp
mov
push
inc
push
pop
popa
test
mov
lret
dec
packssdw
and
push
lahf
imul
cli
cmp
out
jnp
and
mov
dec
cmc
test
fs
jl
fcoms
leave
imull
mov
movsl
inc
jbe
into
sbb
icebp
pop
inc
icebp
adc
pop
jae
cmpsl
scas
mov
push
adcl
or
in
fistpl
shr
sub
iret
push
iret
sub
adc
imulb
hlt
shr
dec
call
and
or
testb
lret
aaa
jns
out
loop
cmp
in
mov
add
inc
out
xor
and
gs
in
shr
int3
lcall
mov
ret
pop
sahf
sbb
pop
out
dec
xor
ret
out
cld
shr
repnz
stos
pop
lea
xchg
xchg
fdivl
enter
jl
testl
int
outsb
dec
call
pop
ret
sbb
movsl
gs
into
push
push
jns
inc
movsl
sbb
loope
shl
stc
rclb
lock
mov
dec
or
fldt
shlb
xchg
loop
mov
idivb
jnp
outsl
fwait
nop
lock
imull
inc
gs
out
sti
into
fildl
xchg
lods
outsb
jge
lods
jbe
into
ljmp
insl
cmp
leave
or
push
andb
mov
call
or
pushf
lret
cld
cmp
ljmp
mov
fldt
push
stos
push
inc
mov
inc
das
add
xor
negb
ret
in
or
sub
pop
xchg
leave
mov
cmp
sub
push
push
and
idiv
push
mov
mov
movsl
pop
jbe
into
mov
cmpsl
sbb
hlt
jbe
test
cmp
sub
out
mov
std
test
jg
xchg
cmc
dec
ret
lret
cmp
les
add
leave
testl
test
shr
jge
gs
xor
push
mov
sub
adc
into
fcmovnbe
ja
jl
inc
fldt
dec
mov
push
add
fisubs
sub
stos
in
shrl
in
push
pop
frstor
push
fisttpl
push
push
lcall
inc
dec
ret
cltd
pushl
fistpl
icebp
mov
sti
cmp
lds
push
mov
mov
subl
and
fldl
push
xlat
out
out
sub
ret
repnz
outsb
outsb
mov
inc
jbe
into
orb
movl
leave
add
xchg
in
mov
jns
in
aad
clc
fistpl
addr16
mov
pop
jl
lds
les
xor
sbbl
add
jmp
or
test
int3
insb
jnp
sub
dec
mov
xor
jecxz
lea
out
xor
pop
hlt
mov
xchg
pusha
xchg
mov
adc
mov
adc
mov
sahf
xchg
xor
mov
dec
aaa
imul
stc
lahf
xchg
int3
stc
jmp
dec
jne
xchg
inc
mov
decl
push
push
mov
cmp
push
movsb
sub
sub
pop
mov
in
mov
mov
pop
xor
das
in
xchg
pop
jae
mov
cmp
clc
scas
icebp
pop
inc
inc
scas
jl
arpl
mov
fisubl
sysexit
mov
pop
jmp
pop
cld
ret
pop
add
aam
leave
adcl
es
repz
add
cwtl
sub
aad
ret
sqrtps
xchg
inc
movsb
daa
push
jecxz
xor
cmp
fisubrs
jmp
or
inc
mov
inc
and
cltd
mov
pop
insb
seta
pop
ss
lods
pop
mov
aad
gs
xchg
cs
imul
cmpsl
xlat
lret
mov
in
and
iret
js
pop
test
lret
std
cmp
xchg
sub
dec
lret
xlat
mov
andl
inc
jp
loopne
arpl
inc
xor
aad
push
dec
loop,pn
xchg
out
test
aad
ret
sub
add
mov
out
stos
mov
mov
xor
mov
xlat
fdivl
lea
mov
cmpsl
xchg
pop
std
xor
fucomi
pop
sbb
inc
mov
js
xchg
je
fisubs
movsb
dec
push
mov
add
mov
ljmp
lcall
pop
aaa
mov
inc
mov
jecxz
cmp
ficoms
loopne
in
pushf
mov
jecxz
jl
sbb
mov
jnp
fdivrp
mov
mov
mov
int
loop
leave
dec
mov
push
sub
in
aas
add
enter
addb
roll
ss
lock
arpl
mov
int3
mov
imul
add
sub
add
mov
sarb
sti
outsl
add
mov
lret
in
test
xlat
dec
test
roll
pop
pop
jg
dec
mov
push
add
cmc
push
xchg
jl
push
mov
pop
xor
int3
mov
gs
data16
xlat
imul
inc
push
into
fsubs
mov
jmp
test
jp
stos
dec
popf
mov
cmp
pop
in
enter
int3
test
xchg
cwtl
mov
ficomps
add
aad
pop
stos
gs
stos
mov
cmp
jp
and
push
jb
daa
orb
fidivs
jae
movsb
scas
lahf
and
mov
inc
mov
fwait
inc
arpl
adc
pop
add
scas
in
stc
pop
pop
pushf
bound
into
addl
shrl
jbe
xor
test
inc
jle
pop
pop
cld
dec
imul
call
or
cmp
es
imul
lock
int3
shrl
test
mov
adc
push
out
jg
xor
push
bound
mov
and
in
lret
imul
cwtl
aam
mov
jo
repnz
outsb
cltd
sbb
sbb
test
inc
add
stc
iret
pop
jecxz
ret
popa
popl
fs
adc
pop
int3
xchg
fsubl
and
xchg
dec
xchg
je
rcrl
lret
mov
cwtl
add
inc
push
pop
push
mov
mov
lds
and
cmpsb
mov
decl
stos
lds
inc
cmpsb
stc
aaa
push
inc
jle
pop
push
push
dec
sti
fwait
in
sbb
leave
mov
sbb
xor
paddd
sub
push
loope
jmp
aad
shrl
jo
add
loope
scas
sbb
test
mov
xchg
or
adc
daa
das
fs
mov
push
sub
ljmp
mov
pop
xlat
sbb
fistpll
popl
adc
or
xchg
flds
enter
cmpb
dec
flds
add
fisubrs
in
dec
sub
fwait
or
popa
push
or
loop
arpl
mov
xor
sahf
je
enter
adc
pop
dec
pop
dec
repnz
stos
jb
pop
fisttpl
mov
dec
scas
outsl
jecxz
nop
fidivl
mov
jecxz
xlat
or
lahf
push
push
fadd
or
lret
je
pop
ljmp
jb
add
in
mov
dec
into
pop
push
sbbl
mov
xchg
nop
test
add
dec
add
ror
in
lods
cltd
sbb
jbe
fcmovne
enter
xchg
lcall
loopne
cld
pop
sub
dec
lods
push
mov
orl
or
flds
ljmp
sbb
adc
pop
cli
jb
xor
sbb
mov
pop
shrl
dec
out
or
pop
ja
popa
out
sub
lahf
stc
clc
inc
jle
arpl
and
call
mov
xor
mov
imul
fldl
fwait
loop
ficompl
dec
pop
shlb
addb
inc
jnp
test
cmp
sub
jp
dec
js
pusha
push
dec
test
pop
mov
arpl
mov
daa
std
test
inc
push
mov
pop
int3
shll
cmp
insl
arpl
fmul
jne
orl
add
jmp
inc
ja
inc
xabort
js
pop
ret
pop
inc
adc
push
imul
fwait
sarl
mov
mov
fdivp
mov
cmpsb
int
addr16
es
mov
jo
pop
ja
ficomps
les
movsl
bound
or
jge
nop
enter
mov
shll
ret
adc
gs
xchg
movsb
andb
aaa
icebp
icebp
or
bound
cmpsl
xchg
notb
sarb
fstpt
ss
cwtl
push
cli
and
nop
loop
ror
and
pusha
int3
or
cmp
pop
in
fs
cltd
movsb
mov
mov
popf
sub
xchg
pop
or
adc
orl
jg
roll
pop
outsb
mov
add
lret
mov
outsl
dec
mov
mov
incl
stc
cmc
shlb
fidivs
or
fsubl
mov
imul
enter
aad
imul
jns
add
jno
in
movsb
int3
mov
push
mov
aam
insb
jo
xchg
push
or
push
sbb
pop
mov
mov
fstp
push
notl
test
pop
pop
rcrb
icebp
shl
imul
xor
inc
pop
mov
pavgb
inc
pushf
sbb
std
inc
mov
outsl
add
cld
stos
mov
stos
mov
daa
xor
scas
lret
sub
lea
mov
or
ljmp
adc
enter
xlat
dec
rcrb
push
jge
les
mov
pusha
push
fwait
mov
cltd
js
xchg
movsl
mov
sbb
sub
push
adc
pop
adc
into
push
lods
mov
or
xchg
popa
nop
cmpsl
stos
xor
stc
add
xlat
into
mov
jae
mov
inc
andb
pop
and
mov
mov
movsb
jg
push
jg
or
idivl
addl
rcrl
inc
push
test
sbb
int3
test
jnp
sbb
pop
stos
inc
mov
pusha
xor
repnz
in
popa
sub
repz
outsb
es
xor
rcrb
add
bound
mov
jle
inc
rolb
sbb
mov
mov
stos
push
xchg
jne
fdivs
cld
jbe
jnp
dec
dec
mov
fisubl
fwait
out
sbb
gs
xchg
xchg
into
jp
add
and
or
jnp
sub
sbb
xchg
push
mov
aam
cwtl
ret
push
mov
pop
in
add
push
mov
lds
sub
inc
dec
push
cmpb
pop
push
lret
clc
xchg
inc
fbld
sbb
stc
fsub
out
pop
sbb
out
out
pop
mov
fists
jb
movsb
fwait
jg
sarl
in
sbb
cmpsb
adc
xchg
pop
sbb
jmp
js
dec
add
mov
rcrb
pop
sbb
inc
adc
fcomp
xor
addb
mov
stos
push
enter
jp
aad
and
xor
movsl
into
mov
mov
js
push
aad
push
xor
sbb
cmpsb
setb
mov
shll
xchg
mov
gs
inc
std
lods
fisttpl
loope
xchg
roll
insl
lcall
push
jb
add
mov
push
and
int
push
mov
jmp
and
movb
bound
in
int
loop
jnp
mov
addl
xor
fdivrp
dec
mov
mov
bound
in
sbbl
aam
lods
pop
movl
notb
fwait
and
add
addl
pop
fs
aas
shr
and
fdivp
fistps
loop
es
jg
xor
pop
jp
cmpsl
push
pop
out
cmp
fisttpl
adc
mov
out
add
aam
push
lahf
cwtl
sbb
xchg
fs
push
mov
or
jp
pop
or
mov
jne
and
inc
fsubs
fisubs
filds
cld
sub
jle
pop
jg
outsb
dec
stos
aad
shrl
mov
cmp
lret
add
add
xchg
jo
call
js
fcomi
cmp
add
popf
add
push
out
in
orb
mov
lock
push
sub
fildll
int
shlb
idivb
loope
push
mov
sbb
dec
fbstp
adc
incb
adc
lods
fldcw
push
jle
cmp
mov
pop
mov
ljmp
inc
adc
pop
pop
push
bound
inc
push
ja
jle
into
mov
mov
pop
cmp
lock
mull
xchg
pushf
or
xor
dec
sbb
xchg
mov
pop
dec
testb
out
andl
movsb
lods
push
cmpsl
and
addr16
cmpsb
xchg
mov
mov
mov
int
sbb
pop
leave
rorb
jns
add
xchg
movsl
cmp
dec
repz
and
dec
pusha
inc
pop
jns
pop
aaa
adc
fildl
pushf
dec
push
mov
sahf
fcoms
in
lret
adc
add
xchg
xchg
and
mov
decl
sti
adc
sbb
pop
imul
xchg
sub
in
dec
addr16
int3
jmp
mov
cli
mov
push
xor
clc
sbb
out
arpl
adc
outsl
pop
adc
push
das
inc
int3
imul
icebp
imull
das
test
loop
rol
nop
or
ss
stos
jnp
js
push
add
jp
mov
xchg
cltd
xlat
int
lahf
js
pop
jg
sbb
clc
sub
xor
lods
rorl
mov
jl
pop
mov
jae
and
dec
stos
xor
int3
imul
stos
jbe
sub
lcall
add
mov
push
sub
cmp
xchg
negl
aam
stos
inc
xchg
shl
aad
fcmovbe
fsubr
popa
mull
dec
cli
dec
sub
cmp
adc
loope
repz
or
shll
shrb
push
ljmp
cs
into
ljmp
out
ljmp
mov
xor
xchg
out
cwtl
ds
xchg
xor
push
rcr
xlat
pop
lock
repnz
aad
shlb
cltd
dec
xchg
sahf
xor
xchg
xchg
cltd
outsb
xchg
mov
cltd
mov
push
cltd
scas
xchg
jle
cmpsl
xchg
jno
into
xchg
push
xor
xchg
adc
out
xor
push
rcr
xlat
pop
lock
repnz
aad
repnz
js
jae
aad
jb
js
jae
aad
jb
js
jae
aad
jb
js
jae
aad
jb
js
jae
aad
jb
js
jae
aad
jb
pusha
push
rcr
insl
pop
stos
roll
daa
sub
add
sahf
lods
inc
or
lods
or
or
xchg
push
pusha
fisttps
jle
cmpsl
or
into
or
lods
or
add
or
lods
out
xor
lcall
xlat
push
lret
or
es
out
das
or
lods
dec
or
lods
outsl
or
xchg
inc
lods
cmpsb
or
scas
or
add
or
lods
iret
or
add
or
lods
out
or
push
and
jmp
mov
inc
adc
test
mov
adc
push
xchg
imul
scas
adc
push
adc
sub
out
es
adc
cmpsb
pop
gs
mov
jo
scas
jle
shll
push
insl
mov
xorl
insl
xchg
mov
je
lods
fisubrs
mov
je
lods
insl
push
mov
je
lods
sahf
insl
xor
mov
cmp
dec
pop
push
icebp
push
ret
adc
dec
jle
rcll
xchg
mov
push
adcl
push
arpl
jno
inc
xchg
inc
dec
decb
dec
sahf
mov
push
add
adc
loopne,pt
pop
push
icebp
stos
ret
sarb
adc
mov
and
fwait
xchg
cmp
rol
jecxz
fadds
mov
mov
das
notl
mov
jo
xor
incb
push
mov
xchg
ret
dec
add
cmp
gs
shr
sar
mov
popf
or
nop
jno
and
ss
sub
push
xlat
mov
jle
mov
mov
data16
shlb
fdiv
loop
ja
mov
mov
dec
xchg
jmp
fldl
adc
jmp
sbb
je
xlat
insl
or
fmuls
sbb
inc
daa
decl
xor
jp
cmpsb
xchg
mov
add
jno
pop
test
dec
xchg
mov
push
adc
xor
mov
mov
or
jmp
jmp
fimull
cmp
shr
cmp
inc
xchg
xchg
xchg
ja
test
xor
dec
xlat
cmpsb
xlat
cwtl
lock
jns
repnz
fcomip
sbb
jae
fstps
stc
out
jle
xchg
xor
pop
fwait
rclb
ficompl
jno
pop
mov
shll
jg
mov
push
push
and
mov
jns
mov
shrl
jo
jb
aad
jb
js
jae
aad
jne
mov
sub
adc
add
inc
xchg
fnstenv
add
arpl
pushf
loopne
inc
and
fildl
mov
sbb
divb
hlt
inc
fs
jle
enter
mov
aad
test
shl
xor
ljmp
add
push
pop
sub
test
cs
jg
call
loop
out
cmp
add
psrlq
jno
mov
cwtl
dec
and
in
add
sahf
ret
push
ret
scas
sub
into
add
aad
sub
mov
daa
stos
sub
loop
fdivrl
aam
test
push
xlat
shlb
mov
jp
and
or
jno
or
add
mov
xor
or
pop
mov
or
xlat
outsb
jmp
in
mov
int
jo
lods
pop
xor
scas
cmp
je
lods
icebp
insl
cmp
xor
movsl
sbb
aad
sub
cmc
jbe
rorb
jne
rcrb
lods
cmp
adc
stc
int3
sub
xchg
dec
inc
lods
pop
adc
pop
in
sbb
gs
fildl
out
mov
insb
sti
inc
fldt
xlat
in
ljmp
fwait
mov
stos
dec
jne
rorb
add
or
and
or
xchg
sti
sbb
loop
or
shll
jb
inc
xor
rorl
adc
jmp
out
mov
jmp
cmp
repnz
jecxz
pop
movsb
mov
mov
mov
sbb
jp
jmp
jle
lret
xor
xchg
subl
lods
or
mov
and
rcr
pop
lret
inc
cmp
xchg
cmp
fldenv
sahf
aam
or
popa
fnsave
jns
mov
insl
mov
ss
aam
frstor
clc
je
test
inc
cmpb
xchg
test
test
push
xchg
dec
and
pop
cmc
test
mov
shrb
and
loopne
jle,pt
jb
lret
jne
lret
enter
add
pop
imul
cld
js
xchg
popa
xchg
adc
int3
mov
jge
xchg
test
cs
aam
jg
jmp
cltd
aas
gs
sbb
sub
jecxz
and
lahf
shrb
pushf
sbb
mov
jno
jnp
fcoms
sbb
aad
or
inc
jmp
lcall
scas
xor
mov
push
push
jmp
and
and
sahf
sub
movsl
inc
cmp
xor
outsl
jo
mov
pop
mov
ljmp
pushf
stos
inc
arpl
add
jmp
xchg
xchg
outsl
xchg
pop
jb
fiaddl
jmp
sub
xchg
inc
das
ja
push
out
imulb
push
paddsw
dec
test
push
and
fisttpl
std
imul
cwtl
clc
out
cmp
cmc
sbb
mov
ret
lcall
shl
pusha
jg
je
add
mov
je
and
dec
sbb
adc
test
push
out
mov
testl
dec
ja
xor
inc
loop
adcb
sbb
loope
in
ds
sti
cmp
ds
or
mov
mov
shll
jne
shlb
mov
sbb
shrb
fsub
loop
jae
mov
inc
jo
and
cli
jle
les
test
ja
mov
xchg
cmc
jae
push
repz
aas
repz
cmpsl
jo
out
icebp
jae
ds
cli
cmc
ret
and
mov
stos
push
fwait
xchg
cwtl
fwait
xchg
push
xor
dec
and
pop
into
leave
jbe
mov
inc
cmc
mov
jmp
xchg
outsb
lds
gs
fidivrl
inc
mov
cmp
sub
push
adcl
mov
lock
xchg
or
mov
js
dec
rolb
popf
xchg
subb
out
jge
lahf
add
push
lods
xchg
or
cwtl
or
mov
imul
movsl
or
leave
or
lods
rorb
add
add
imul
pop
sub
push
sbb
xor
push
jno
call
rcrb
mov
loopne
xchg
ja
scas
dec
scas
lea
pop
hlt
mov
xchg
push
xor
add
scas
xor
add
repnz
jne
pushf
mov
sub
push
sub
movb
aas
lods
add
lds
inc
loop
ficoml
mov
add
in
fsubrl
enter
popf
push
pinsrw
adc
lret
sbb
das
lods
push
insb
adc
neg
xchg
mov
xchg
je
dec
movsl
clc
mov
push
sub
push
mov
pop
sub
xchg
rorl
femms
out
jecxz
jecxz
hlt
or
xor
sub
ja
aad
lret
cmp
and
pop
push
aas
add
and
fstpt
jb
push
insl
imul
adc
mov
fdivl
xor
pop
cmp
adc
repnz
pop
lret
mov
pop
mov
push
pop
xchg
push
xchg
dec
ss
imul
or
shlb
aas
stc
xor
test
cmp
push
sti
adc
cwtl
movsb
repz
lret
das
jecxz
and
lds
icebp
lret
sarb
lea
fdivrl
cmc
mov
jns
stos
ljmp
fsubr
jbe
popf
sub
loopne
inc
xchg
mov
push
mov
and
jb
iret
adc
pusha
cmp
jg
movsb
std
cmc
shrb
sbb
dec
push
mov
insl
jnp
adc
lock
xchg
icebp
cltd
dec
xchg
xchg
xor
xchg
popf
stos
pop
aam
adc
or
imulb
fmuls
push
jno
ja
add
das
icebp
jle
jle
inc
cmp
out
mov
repz
xor
repz
sub
ljmp
jae
int3
neg
xor
jecxz
add
xlat
push
decb
fcomps
adc
xor
xor
mov
fcmovne
movsb
sbb
fsubl
jecxz
ficoms
mov
and
cld
or
jmp
les
jno
jle
inc
add
cltd
fiadds
xchg
fiaddl
mov
flds
and
lea
pop
das
sti
xchg
aam
js
xor
jl
rclb
cmp
or
cmp
inc
sub
xlat
ret
add
or
dec
cmp
in
mov
or
sub
scas
es
push
push
inc
cs
in
jo
out
mov
into
push
into
sbb
inc
rcrb
lahf
nop
and
sbb
pusha
popf
rcrb
data16
jb
arpl
aam
cli
or
call
sub
push
dec
sub
add
comiss
je
jno
out
and
aas
fisubl
xchg
lahf
dec
xor
sbb
lahf
inc
test
xor
mov
inc
int
inc
lahf
lds
repz
xor
pop
mov
int
pop
jae
adc
call
inc
nop
dec
sub
and
mov
cli
aad
push
dec
addb
movsb
cmp
les
outsb
stos
in
rolb
jmp
push
idivl
hlt
call
or
sub
jbe
pop
cli
adc
shrl
adc
and
outsb
int
push
dec
or
xchg
mov
jle
pop
mov
mov
add
dec
inc
mov
sub
or
jg
fcom
jo
gs
data16
push
jmp
cli
mov
add
mov
je
lods
in
insl
inc
mov
je
lods
movsl
pop
in
ret
xchg
push
bound
lods
arpl
cmc
and
sub
fidivl
xor
mov
pop
dec
stos
jmp
leave
cmp
xorb
cld
xlat
jp
or
mov
or
int3
and
cli
ret
add
dec
stos
dec
pop
cltd
mov
push
jecxz
and
sahf
add
jge
add
popa
cmp
testl
add
loope
xorb
mulb
aam
mov
sbb
cs
sub
add
test
cmp
jecxz
xchg
sarb
push
rcrb
dec
das
loopne
pop
in
repz
cmpsb
jle
stos
mov
jo
scas
xchg
insl
add
or
cmp
pushf
jo
pop
lahf
mov
testl
stos
push
loopne
mov
setp
pop
sbb
xor
sub
loop
insb
shl
and
stc
cmpsb
aas
sahf
or
adc
ret
jno
movsl
cmpb
dec
jp
aad
and
xor
dec
push
mov
cs
adc
xor
or
mov
push
inc
jecxz
add
fucomp
pop
pop
lea
add
sub
mov
js
shrl
out
scas
jb
repz
das
jns
dec
pop
push
lahf
sbb
aad
fimull
push
cmp
ds
test
fildll
daa
inc
fld1
xchg
imul
jae
shr
cltd
xchg
push
ljmp
outsb
push
loope
lcall
sarb
in
add
test
jmp
cmp
loop
xor
cs
sti
scas
pop
add
jp
lods
cmc
daa
cmp
fs
add
cmp
jne
or
cmovno
cmpsl
mov
mov
sbb
ds
inc
lahf
adc
scas
inc
add
sub
xor
dec
loop
ds
mov
test
mov
ja
shlb
mov
call
pop
push
fimull
dec
lods
lods
or
add
bound
mov
and
je
lods
nop
insl
add
in
mov
adc
or
dec
and
rcll
cs
xchg
fwait
test
int3
jp
lret
cmc
iret
mov
shll
or
scas
ret
or
jbe
cmp
and
mov
sahf
insb
sub
sahf
ucomiss
rcl
fisttpll
xchg
rolb
fwait
imul
hlt
push
sub
and
lcall
cmpsb
jae
xorb
push
adc
and
pop
scas
ret
arpl
xchg
pop
sub
repz
dec
sub
xlat
xchg
sub
mov
out
pop
push
jmp
sub
loop
test
inc
jle
dec
adc
inc
jne
xchg
mov
mov
ss
or
out
lret
pop
dec
push
mov
cmc
loope
jno
dec
adc
popa
call
test
cmpsb
int3
faddl
mov
xchg
pop
pusha
outsb
loop
fdivrl
push
fwait
fwait
icebp
in
sub
lahf
vfnmsubpd
test
jp
mov
mov
and
ljmp
aad
jno
in
cld
jge
aad
sub
jecxz
test
adcb
fildl
jns
pop
lods
sbb
pop
cs
out
scas
lods
add
out
jl
lods
fistpll
repnz
in
sbb
push
rcrl
mov
or
jecxz
loope
cmp
andl
add
add
sbb
push
jo
outsb
lcall
rol
mov
test
add
xchg
cmpsl
sbb
dec
fistps
scas
fbstp
cli
shlb
xchg
vcvtps2dq
leave
out
xor
push
push
xchg
les
test
adc
sbb
leave
adc
jmp
testl
push
xchg
cmp
cmpsl
test
pushf
repnz
pop
out
rorb
in
int
or
add
push
jo
add
inc
add
shrb
bnd
add
add
lock
add
outsb
add
or
add
add
and
add
xor
add
dec
outsl
add
push
outsl
add
pop
outsl
add
bound
add
add
jp
add
mov
add
outsl
add
mov
outsl
add
into
outsl
add
fsubrs
add
outsl
add
imulb
add
jo
add
jo
add
add
add
jo
add
add
push
jo
add
add
je
add
xorb
cwtl
jo
add
jo
add
jo
add
jo
add
add
add
or
imul
jb
je
mov
pop
imul
insl
add
pop
popa
arpl
insb
outsb
add
pop
jo
pop
arpl
insl
outsl
fs
loop
pop
pop
addr16
popa
imul
leave
adc
js
gs
pop
push
gs
add
les
insl
gs
arpl
add
sbb
add
mov
pop
jae
popa
je
insb
add
jo
je
add
add
fs
imul
xor
pop
add
fs
jae
pop
imul
add
jae
je
jae
jb
popa
je
gs
add
lea
pop
insb
outsl
outsb
addr16
jo
js
add
popa
jae
imul
pop
jo
pop
insw
outsl
fs
push
pop
pop
gs
je
icebp
adc
jae
push
add
pop
jae
je
popa
jo
pop
je
jo
add
jge
pop
addr16
arpl
add
mov
insl
imul
or
arpl
inc
imul
pop
arpl
je
outsl
insb
data16
add
push
inc
push
push
cs
insb
add
push
push
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
adc
je
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
jne
bound
inc
outsl
jb
popa
je
add
or
popa
insb
inc
jb
add
jo
jb
popa
je
add
xor
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
jg
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
outsl
push
gs
jne
arpl
add
or
je
push
inc
outsl
outsb
je
js
add
dec
inc
push
dec
inc
dec
xor
cs
insb
adc
mov
ret
scas
pop
cs
add
add
add
adc
insb
dec
add
add
add
add
add
add
push
add
addb
add
and
add
adc
insb
dec
add
add
add
add
add
add
cmp
add
adc
insb
dec
add
add
add
add
or
add
add
add
add
adc
insb
dec
add
add
add
add
add
add
push
add
add
push
insb
dec
add
add
add
add
add
add
addb
add
push
add
sub
add
sbb
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
push
xchg
add
adc
add
push
mulb
aaa
mov
shrl
mov
inc
add
pop
