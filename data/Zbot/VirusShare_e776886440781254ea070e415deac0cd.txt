sbb
add
push
lcall
mov
xor
push
imul
lahf
cwtl
lcall
movsb
and
pop
cmp
mov
mov
sti
dec
xchg
hlt
or
adc
xchg
pop
std
and
sbb
xor
scas
xor
insl
loope
daa
dec
rcrl
adc
in
fwait
jle
inc
and
ficoms
int
hlt
pushf
jge
pushf
sbb
enter
cmp
push
mov
fistl
loop
cmpl
xlat
cmp
int
mov
push
jp
mov
xlat
mov
cmp
sarl
sbb
push
pop
jge
cmp
movsb
insl
jp
pop
int3
mov
and
cmp
out
adc
movsl
inc
push
les
dec
pop
mov
les
test
jp
scas
jg
out
in
pop
cmpsl
xchg
roll
push
mov
and
push
out
sub
lds
movsb
nop
js
push
mov
icebp
pop
inc
adc
mov
mov
gs
cmc
mov
ja
insb
inc
inc
mov
int3
cmp
xchg
and
mov
sbb
movsl
or
sbb
sub
pop
jge
sbb
dec
and
sahf
inc
out
jb
popf
add
mov
and
iret
cmp
xchg
fnstsw
dec
int
pop
ljmp
aas
fsubl
fcomps
scas
aas
cmp
cs
arpl
cltd
stos
lods
add
lods
idivb
xor
sub
scas
mov
pop
out
and
data16
xchg
mov
mov
stos
repz
fisttps
sub
xchg
outsl
lods
push
addr16
jbe
add
inc
mul
jmp
fs
lret
ds
stc
ja
mov
addr16
xor
lret
cld
arpl
fisubs
mov
fcompl
mov
movsb
lds
imul
inc
fucompp
movsl
pop
inc
jg
cmp
xchg
cli
xchg
sti
aas
test
lods
jg
stos
mov
roll
in
clc
sbbl
cltd
xor
xchg
pop
movsl
add
ss
mov
aas
inc
test
stos
pop
dec
mov
dec
sbb
cmp
rclb
in
rol
fwait
stc
ljmp
xchg
ret
lret
inc
test
jecxz
enter
fmuls
sub
sub
mov
push
or
lret
add
aam
aas
jnp
mov
add
pop
iret
sbb
push
push
mov
mov
mov
js
int
fdivl
fldcw
cmpsb
test
pop
addr16
leave
inc
fnstsw
test
mov
and
adc
xor
ljmp
test
ret
dec
jecxz
jmp
stos
in
fwait
pop
sbb
xor
push
int3
sbb
push
out
call
scas
push
idivb
and
outsl
addl
mov
mov
jb
lret
cmp
or
mov
mov
add
or
bound
jg
adc
cmpsl
mov
adc
jmp
pop
jne
loop
dec
out
clc
sahf
mov
flds
flds
lret
ficomps
popf
jge
mov
roll
inc
call
cs
sub
lock
iret
loope
sub
leave
ss
sbb
ss
push
cmp
jnp
and
sbb
mov
movsl
add
hlt
jg
dec
movl
jmp
iret
cltd
in
mov
das
xchg
outsb
out
mov
or
cli
loope
jo
fwait
ds
mov
ja
pop
or
outsb
jle
push
xchg
sbb
push
cs
lods
test
daa
xchg
aad
aas
pop
xchg
pop
mov
pop
pop
xchg
in
pop
dec
inc
inc
imul
add
jg
data16
inc
ss
sbb
inc
dec
iret
sub
cmpsb
insl
divb
cs
int3
inc
arpl
fwait
cs
enter
dec
sbb
iret
rcrb
jp
push
mov
pushf
mov
in
inc
enter
lds
out
cmp
das
in
out
inc
mov
loop
add
fxch
je
dec
rcr
pop
adc
data16
cltd
mov
cwtl
inc
pop
enter
out
xchg
dec
repnz
cwtl
jo
loopne
in
add
add
jmp
rcl
push
jg
dec
pop
cmp
ret
jno
fs
xchg
movsl
push
loope
adc
mov
das
shll
xor
inc
inc
mov
or
div
ret
and
jp
stc
popa
and
lods
insl
sahf
adc
push
and
in
xchg
rcrb
push
js
bound
fistpl
shlb
incl
and
out
xchg
mov
je
je
js
jo
fisttpl
add
bound
pop
and
pop
sbb
ss
fdivr
gs
jb
outsb
ljmp
xchg
adc
icebp
insb
gs
add
mov
inc
mov
inc
adc
sahf
orl
xor
repz
mov
jecxz
es
out
in
cmp
inc
testl
int3
leave
frstor
mov
inc
popa
stos
jns
ret
mov
xor
in
xor
cmpsb
xchg
loope
lock
test
mov
scas
jbe
push
sbb
inc
inc
addr16
jp
mov
adc
cwtl
jecxz
rclb
xor
std
xor
orb
cli
bound
mov
fldt
inc
ja
mov
jb
test
jge
stc
insb
xor
orl
inc
adc
xor
dec
xor
lea
jg
push
cmp
pop
xchg
ds
sbb
fisubrs
bound
int3
mov
push
or
jno
xchg
add
push
mul
mov
mov
in
or
xor
xchg
mov
shll
cmp
add
sub
pop
inc
mov
fdivp
bound
mov
je
add
andl
stc
pop
push
arpl
es
jmp
stc
adc
mov
sbb
jb
and
xor
mov
aaa
add
repnz
test
outsl
mov
adc
outsb
out
fistpl
pop
subl
std
arpl
cmc
mov
add
loope
xor
scas
adc
fs
lret
pop
jl
scas
dec
mov
sbb
adc
rorb
rol
aad
cs
add
inc
and
sahf
pushf
movsl
lock
stos
bound
or
sti
or
loop
or
and
cmpsl
pushf
push
daa
fldcw
and
sbb
out
add
sbbb
sub
pop
int
lock
jns
xchg
add
testb
cmpsl
jl
pop
sbb
push
dec
rol
adc
or
inc
aas
inc
cltd
jg
loop
in
and
test
sbb
push
int3
mov
sub
push
iret
sbb
xchg
jno
div
xchg
pop
push
test
jbe
sbb
sbb
mov
int
mov
cmp
nop
les
mov
jp
es
push
leave
or
sbb
push
mov
lcall
add
aaa
inc
sbb
add
repz
add
xchg
cs
pushf
or
push
in
sub
movsl
push
xchg
mov
lods
cld
pop
cmp
stc
lea
fwait
popa
ficoml
xchg
mov
mov
mov
call
mov
mov
lea
in
mov
gs
push
inc
adc
cmpl
mov
test
pop
xchg
adc
sub
jg
arpl
sbb
adc
lret
cmc
iret
sub
scas
scas
xchg
ja
test
movsl
push
pop
mov
loope
cmp
cmp
cmpsl
xchg
xchg
xchg
addr16
cmp
push
xchg
aaa
push
mov
push
andb
repz
in
and
inc
scas
out
xchg
xor
popa
sub
aam
xor
jge
push
ret
in
lods
adc
dec
aad
jg
lret
sbb
or
rorl
ret
mov
push
pop
push
es
test
test
jae
lods
sub
call
mov
push
lods
fistl
xchg
cmp
out
loope
mov
push
shl
jnp
dec
xor
jns
adc
push
lds
lods
cmp
adc
loopne
push
movb
sti
mov
pop
les
int3
cmp
loopne
daa
cmp
mov
shr
mov
or
les
lods
push
pop
mov
jns
shll
add
shrb
popf
sub
fldt
rcl
lock
mov
cmp
mov
push
mov
or
cmc
pop
mov
jl
jge
iret
xchg
or
push
arpl
xchg
sub
je
repz
inc
nop
fwait
shrl
adc
mov
push
arpl
mov
jmp
gs
mov
cld
add
rorl
xor
mov
sbb
movsl
fwait
and
sub
pop
push
cmp
insl
mov
adc
jl
pop
mov
popa
pop
xlat
jg
adcl
sub
mov
or
in
sbb
adc
adc
mov
mov
icebp
jns
cld
push
dec
movsb
push
aam
js
push
ja
mov
xor
pop
mov
mov
jg
loop
mov
push
jmp
fnsave
je
push
lds
pushf
frstor
out
fmul
punpcklwd
stos
sub
mov
mov
clc
mov
int
sub
cwtl
dec
mov
pop
push
push
nop
add
and
ss
outsl
icebp
xor
inc
test
cmpsl
pop
mov
scas
xchg
sub
cwtl
mov
or
mov
outsb
cli
push
insb
lds
into
loope
and
adc
cmp
pop
aas
aad
filds
mov
out
addl
loopne
add
inc
mov
aad
jecxz
push
mov
pop
shrb
pop
or
mov
xor
arpl
xor
mov
push
iret
shlb
jne
out
insb
mov
leave
lea
dec
cs
mov
jle
push
js
mov
push
movsl
outsb
stos
pop
loop
out
xchg
mov
add
sahf
imul
js
or
mov
sub
fsubs
sub
adc
or
push
bound
mov
ljmp
inc
sarb
stos
xchg
xor
push
cmp
inc
inc
mov
sbb
mov
jno
sahf
jne
mov
lret
fimull
mov
push
imul
push
mov
pop
repnz
sub
mov
ds
movsl
std
mov
pushf
cmp
pop
sti
add
repz
push
aas
data16
dec
jno
pushf
ljmp
jae
stc
cli
sbb
xchg
cmpsb
cmpl
neg
and
jp
xor
lds
mov
pop
dec
insb
mov
fnstcw
mov
push
imul
cmp
jge
movsl
ds
add
add
lods
and
lea
inc
push
sbb
jmp
sub
mov
jo
inc
inc
ss
and
mov
sub
adc
jecxz
mov
push
mov
ja
jne
das
jp
lods
pop
sub
cs
sub
in
lahf
push
mov
shrl
daa
bnd
test
add
test
adc
adc
insb
mov
outsl
mov
cld
mov
xchg
and
adc
push
xchg
cli
imul
in
mov
insl
pop
pop
mov
fiadds
xchg
inc
das
jmp
push
xor
mov
sub
das
xchg
imul
dec
xchg
insl
hlt
scas
lcall
int3
les
pop
lahf
dec
xchg
repnz
orps
pop
aam
sti
sub
fnsave
jbe
adc
jle
test
pop
insl
sti
and
rorl
imul
out
in
cmp
sar
push
and
sub
push
scas
push
inc
inc
mov
pop
mov
lcall
sbb
push
sbb
setle
xor
pop
lcall
addr16
jle
pop
andb
cmp
out
jns
inc
arpl
ds
cmp
push
pop
and
mov
imul
push
sbb
cmp
xor
arpl
xor
cmp
inc
rorl
push
loope
mov
ja
inc
jmp
imul
pop
pop
mov
js
fnstsw
mov
pusha
jb
push
inc
dec
jge
jmp
enter
dec
xchg
lock
mov
dec
rcrb
mov
sub
pusha
xchg
mov
in
repnz
mov
stc
pop
leave
imull
mov
sub
lret
mulb
jp
hlt
sub
sub
lods
test
or
xor
rclb
add
inc
fidivs
mov
push
andw
or
adc
dec
xor
ja
sub
imul
xchg
mov
aam
sub
or
jg
xor
notl
mov
inc
inc
aad
ljmp
cli
ret
dec
call
jmp
mov
cs
cld
ds
outsb
xor
insl
mov
push
shlb
pop
aas
repnz
adc
mov
or
aam
xchg
jne
cmp
out
in
sbb
icebp
in
inc
cld
push
stos
lahf
mov
lret
leave
mov
jb
and
lock
sbb
loopne
repnz
ret
subb
mull
icebp
jg
add
xchg
shrl
mov
aaa
loop
mov
cmpsb
push
jle
add
test
cmp
sbb
jp
icebp
jns
mov
rcl
and
and
ljmp
xchg
aad
mov
scas
insb
adc
and
lret
enter
leave
dec
mov
jmp
push
jbe
mov
fdivp
ss
mov
scas
lods
cli
loope
add
sub
push
inc
sub
pop
push
add
out
add
jg
cltd
dec
jmp
filds
rcrb
clc
dec
stos
lret
scas
sbb
sarl
int
pop
jmp
out
fldcw
xchg
cmp
jnp
mov
shll
daa
inc
scas
leave
sbb
mov
loop
cld
nop
ja
mov
fisttpll
and
mov
insl
mov
mov
lcall
mov
add
pushf
cmp
dec
mov
addb
mov
fiaddl
les
sub
sub
push
and
les
test
cmpsl
jns
inc
jns
xlat
sub
fs
add
das
popa
fs
add
iret
xchg
mov
call
adc
jmp
rcrl
jg
mov
jo
jnp
lods
ret
jg
cmp
push
js
ret
fldl
inc
daa
add
and
jo
je
ret
shlb
nop
inc
jmp
and
out
gs
lock
mov
inc
cld
fidivl
pop
cld
jl
or
dec
popl
dec
sub
cmpl
ja
mov
nop
int
push
imul
pusha
lds
xchg
filds
dec
mov
sbb
adc
add
mov
rcr
int3
push
jmp
shl
lret
sbb
movsb
adc
std
cmp
or
imul
adc
cmp
cwtl
ss
les
mov
mov
adc
inc
mov
jae
ja
lock
roll
fnstenv
pop
cmp
dec
mov
push
xor
xchg
test
lret
and
mov
and
sbb
xor
adc
jno
inc
or
and
pop
sub
and
dec
outsb
and
or
mov
rorl
sti
cmpsl
mov
sub
inc
mov
jnp
inc
push
pop
fcoms
dec
leave
pop
in
cwtl
mov
sbb
enter
hlt
cmp
movsb
cmp
mov
push
push
or
or
mov
mov
or
rep
pop
movsb
in
jae
or
ljmp
jg
dec
push
cmpsl
in
aad
sbb
xor
jae
ljmp
pop
or
xchg
mov
mov
xor
pop
push
enter
fnstenv
js
cli
in
add
xchg
in
sbb
pop
pop
lds
out
bound
roll
jbe
xor
inc
andl
jmp
shlb
out
imul
xor
push
fidivrs
scas
and
jns
mov
inc
push
mov
clc
xchg
add
pop
mov
cli
and
jl
jbe
stc
mov
sbb
push
mov
arpl
clc
lock
leave
mov
xor
lods
mov
pop
cmp
test
rol
aam
jo
cmovg
push
inc
outsb
and
dec
shll
xorl
adc
xchg
movsb
push
out
out
int3
jmp
ljmp
sbb
sub
outsl
mov
rclb
add
iret
dec
rcr
fnsave
or
cmpsl
mov
test
jp
out
add
mov
test
dec
pop
out
and
test
dec
scas
lods
das
sub
sub
int
jecxz
fincstp
inc
push
cld
jbe
gs
inc
int3
sbb
sub
mov
cmc
and
jle
jmp
shl
and
fs
xlat
in
inc
sbb
cmpb
xchg
repnz
sbb
fwait
xlat
sbb
lods
rclb
ljmp
mov
jns
cli
iret
aad
lcall
inc
subl
pop
jbe
sub
xor
adc
das
jecxz
movsb
rcrl
insl
outsb
sarb
pop
inc
and
test
pop
and
and
lret
cli
cltd
shrl
push
lods
das
popf
data16
sub
mov
mov
lret
movsl
fnstenv
cli
scas
lock
cmp
mov
xlat
outsb
in
inc
iret
mov
sbb
push
sbb
imull
imul
inc
jne
lret
xor
cmp
adcb
xor
push
lds
cwtl
in
jecxz
mull
stos
mov
xlat
ja
mov
push
aaa
test
jb
shrl
mov
pop
push
adc
fmull
repz
shr
cli
cmp
notl
lods
mov
cmp
sbb
dec
mov
popa
daa
cmpl
popl
stos
imul
in
sbb
das
and
dec
fcmovnu
add
ds
ljmp
jmp
in
divl
rorb
xor
daa
icebp
push
mov
add
dec
cmp
decb
scas
xchg
mov
test
int
lods
adc
cmp
daa
xor
lret
fs
in
pop
jecxz
mov
inc
ds
int3
aas
insb
xchg
fstpl
std
adc
stos
rorl
clc
inc
enter
mov
js
pop
cbtw
pop
jne
scas
xchg
push
repnz
mov
dec
pop
pushf
xchg
test
aad
cmp
adc
pop
rcll
mov
xor
arpl
jnp
xor
xor
imul
mov
scas
scas
leave
rcrl
lods
data16
clc
sub
push
mov
arpl
adc
mov
cli
mov
repnz
dec
add
pop
push
xchg
sti
js
scas
pop
test
add
loope
pop
fcmovbe
sahf
int
sbb
push
out
cmp
cs
fildl
push
lahf
adc
mov
mov
push
cltd
push
mov
idivb
aam
lret
push
add
enter
add
xchg
add
fldenv
movsb
lret
inc
pop
adc
inc
clc
cmp
sbb
and
pop
dec
rcr
cld
pop
mov
mov
aad
test
aad
jb
pushf
addl
add
xlat
mov
aas
out
or
out
sub
mov
cwtl
add
addl
pop
mov
xchg
pop
sbb
bound
pop
inc
jmp
jb
xchg
fldenv
pop
push
dec
or
int
loop
jnp
addb
aaa
inc
and
dec
call
jp
pop
into
lcall
sub
push
nop
mov
cwtl
js
xchg
mov
out
mov
mov
cmp
push
movsb
cmp
or
data16
sub
movl
cli
lods
fwait
jns
fcoms
sub
leave
xchg
adc
adc
inc
lret
shlb
xchg
push
movsb
movsb
xor
push
add
xor
fnsave
popf
mov
sbb
into
insb
fcoml
in
sbb
js
add
fdivs
fadds
icebp
movsb
sbb
lods
inc
decl
xchg
mov
inc
jmp
pop
aam
mov
testb
or
jbe
jg
aaa
add
adc
test
popf
or
mov
loop
jecxz
cltd
cli
aad
stc
jae
push
jmp
mov
imul
call
pop
pop
adc
xchg
call
sar
sbb
fucomi
and
mov
mov
call
push
mov
imul
fisttpl
and
stos
add
inc
in
call
jge
push
fiaddl
cmp
cmc
jmp
push
clc
data16
mov
push
mov
push
fwait
rcll
xor
les
sahf
pop
lea
mov
cli
mov
add
mov
inc
jmp
mov
pop
mov
xor
or
cmpsl
cmp
mov
dec
icebp
leave
repnz
fisubs
add
and
scas
out
out
popa
sahf
fs
movb
pop
inc
out
test
mov
imul
mov
mov
mov
daa
sbb
cmp
mov
and
mov
sarb
add
cmc
loope
cmp
daa
je
mov
cmpb
sbb
xchg
jecxz
and
dec
jmp
in
aam
inc
pop
push
in
cmp
pusha
fcomps
adc
sbbl
dec
push
jno
icebp
in
push
ret
out
push
or
dec
popa
pop
jbe
mov
stos
dec
xchg
dec
cmp
mov
sub
lock
into
sbb
int3
or
aaa
mov
xor
jmp
mov
std
jb
add
jge
pop
xor
sbb
push
sbb
cmp
jae
mov
aam
push
aaa
dec
into
cmc
in
sbb
or
sbb
dec
inc
xor
sbb
out
lcall
test
insb
jecxz
ss
or
cld
hlt
push
sarl
fisubl
sbb
pusha
jl
sarl
mov
addr16
xchg
loope
cli
or
pop
icebp
sbb
pop
leave
sbb
fsts
adc
outsl
sub
testb
xor
ficoml
dec
or
jb
ret
dec
lock
fstps
sbb
movsl
and
mov
mov
js
daa
fistps
mov
les
mov
push
push
ficomps
jo
and
mov
cmp
push
mov
int
clc
and
pop
pushl
and
ret
movsb
add
jnp
fistl
xchg
call
dec
or
xlat
jnp
or
push
sahf
inc
push
dec
loope
adc
out
pop
popa
xrelease
push
cmp
fwait
test
insl
pop
add
jbe
test
jne
orl
jnp
push
leave
mov
pop
sti
sti
ja
mov
mov
lods
inc
jae
rcrl
shlb
jl
ljmp
sub
mov
in
rorb
mov
push
and
mov
inc
sti
xor
mov
gs
js
enter
fnstcw
rcr
adcl
stc
sub
pop
xchg
adc
sbb
mov
adc
cmpsb
rcl
mov
xchg
int
cmp
lret
cli
addr16
pop
mov
sbb
push
fstpl
insb
insb
xchg
and
mov
fs
int3
jle
mov
cmp
cmp
sub
pop
dec
outsb
add
out
jae
repnz
mov
repz
dec
xchg
call
in
fcmovu
movsb
fstpt
outsl
test
and
popf
xor
out
aad
stos
push
orb
fmuls
xchg
mov
cmpsl
jb
mov
lret
xlat
in
jae
adc
jb
out
pop
aaa
lret
cmp
rorl
dec
mov
sub
outsb
pusha
stos
push
adc
dec
sbb
jge
cmpsl
rorb
cmpsl
sbb
jmp
sar
adc
inc
lahf
push
pop
mov
aad
insl
adc
stos
sbb
push
inc
inc
data16
mov
lods
add
xchg
inc
jns
jge
mov
test
popa
xor
int3
lods
cltd
xchg
fs
add
popf
push
sbb
out
adc
pop
lahf
fwait
mov
cmpsl
jmp
mov
mov
orb
cmpsb
push
fadd
jnp
xchg
lods
stos
cs
mov
pop
dec
pop
cltd
jecxz
mov
hlt
cmp
lret
cltd
lock
stos
subb
mov
bound
jne
mov
cmp
iret
insb
testl
pop
mov
sub
and
inc
ror
and
mov
or
cmp
addr16
jnp
ret
cli
adc
aam
mov
or
push
mov
cmpsl
scas
xchg
xchg
lgs
ds
arpl
lret
xor
int3
cwtl
jge
dec
daa
pop
stc
pop
aam
jl
cwtl
inc
dec
mov
mov
pop
jb
out
ret
mov
bound
mov
data16
imul
jmp
xor
or
pop
scas
fcoml
pop
pop
js
sti
data16
xchg
mov
mov
inc
setge
dec
adc
call
imul
sbb
clc
stc
loope
mov
test
mov
fwait
enter
or
aas
push
leave
mov
out
idivb
rorb
cmc
add
pop
cmp
mov
dec
jg
xchg
scas
leave
into
jmp
ss
insl
pop
movsl
dec
inc
into
jl
push
lea
jmp
leave
xchg
mov
sbb
inc
incb
cmpsb
rcl
roll
dec
daa
mov
leave
mov
cmpl
jecxz
jmp
cmpsl
pusha
cmp
and
add
xor
mov
xor
dec
push
stos
imul
push
out
jmp
jmp
outsl
and
push
jbe
shr
xchg
mov
sahf
pop
test
pop
fldl2e
test
in
push
sub
cs
ror
inc
dec
ret
lret
pop
xchg
sub
dec
inc
aaa
sar
cmp
pop
mov
jmp
and
rcrb
mov
loop
or
xor
mov
sub
or
nop
cld
ljmp
mov
rorb
jge
outsb
aam
call
push
loopne
movsb
pop
decb
pop
gs
push
pop
addb
dec
movl
loope
push
repnz
add
in
data16
movsb
test
aam
adc
es
iret
add
sbb
shll
mov
pop
hlt
sti
int3
cltd
lcall
jns
ljmp
xchg
es
int
bound
jp
not
xchg
jge
test
mov
in
mov
mov
iret
jp
push
push
repnz
lea
stos
jecxz
movsb
xor
inc
push
imul
lods
clc
inc
lcall
cmp
lret
or
push
jno
lahf
cmp
adc
and
jne
leave
mov
mov
andl
push
sbb
and
je
push
mov
bound
ss
sbb
jns
jl
out
inc
jo
fldenv
cli
adc
mov
int3
dec
shlb
add
fnstsw
repnz
xchg
jb
rorl
rolb
jmp
and
bound
stos
scas
mov
push
sub
stos
pop
lcall
invd
cld
lret
pusha
jle
mov
pop
jno
jmp
rorl
cmp
cmp
mov
and
shl
sti
movups
jne
sub
inc
mov
mov
sub
or
repnz
callw
aad
cmpsl
mov
push
inc
and
xchg
in
xchg
daa
and
jns
lds
repz
stc
xor
inc
inc
test
add
aaa
jae
mov
lcall
or
lret
xchg
jmp
mov
iret
mov
mov
lea
into
sub
mov
mov
fs
rcl
imul
sbb
pushf
xchg
mov
je
sahf
pop
daa
cmpb
mov
cli
xchg
sbb
push
nop
loopne
bound
mov
test
test
mov
lret
inc
mov
xor
and
mov
and
mov
rorl
dec
std
add
popa
les
push
jno
mov
movsb
and
shr
sarb
pusha
mov
jg
imul
stos
imul
sbb
lock
add
addr16
jge
sub
ret
ss
nop
fsub
xor
roll
pop
outsb
mov
sbb
mov
push
adc
mov
jne
aas
inc
or
and
in
or
pop
xchg
sub
jge
iret
xchg
loopne
and
sub
jmp
cmc
xchg
cmc
jecxz
mov
sbb
icebp
mov
add
cmp
ljmp
cmp
in
add
int3
cwtl
in
xor
js
push
or
test
scas
cmp
sahf
or
inc
test
out
dec
jo
mov
iret
and
xchg
lahf
iret
scas
cltd
mov
cltd
xchg
andl
push
cmp
movsb
popf
mov
mov
xchg
rcll
repz
mov
mov
push
cltd
xor
daa
push
outsb
loop
jg
loop
int3
mov
pop
push
push
out
inc
and
add
cmpl
dec
iret
mov
and
dec
jp
add
aam
mov
add
pop
jl
shrl
mov
rcll
cmp
jb
sub
popa
aam
mov
xchg
popf
xchg
aas
dec
or
rcl
mov
xor
mul
sbb
sbb
sub
rcl
adc
pushf
mov
sarl
push
mov
lods
aad
test
or
mov
mov
pop
push
sti
movswl
repnz
les
mov
or
mov
cwtl
xchg
mov
dec
cmc
nop
mov
jnp
cltd
mov
add
mov
loope
mov
sbb
stc
mov
push
movsb
js
neg
pop
fs
cld
push
repz
lret
cli
aas
bound
ja
or
or
and
lcall
inc
pop
add
cld
adc
int3
xchg
decb
add
mov
xchg
nop
stos
mov
sbb
pop
pop
pop
rclb
mov
dec
pop
pop
sbb
cwtl
sub
ja
pop
sub
inc
ret
stos
ret
xchg
xor
jp
mov
popf
testb
scas
shl
and
sbb
stc
shl
dec
pop
mov
jb
mov
cmp
ffree
add
cmp
inc
lret
xchg
or
iret
test
rcr
std
int
pop
mov
std
jge
shr
cmpsl
ss
cmp
test
scas
sbb
inc
and
jle
les
in
cmpsb
push
push
int
adc
pushf
out
cmpsb
lds
and
mov
jmp
leave
insb
jae
mov
ror
shll
mov
iret
fcoml
mov
adcl
pop
std
sahf
pusha
cmp
aas
mov
inc
int
dec
fs
mov
mov
xchg
cli
and
inc
jns
iret
mov
xor
inc
pop
jae
jne
js
addr16
shlb
lahf
sbb
inc
sbbb
pop
in
cs
add
sbb
std
add
cmc
inc
imul
scas
xor
dec
notb
and
xchg
fists
jae
dec
lea
lret
sbb
mov
jae
ficoms
pop
pop
ja
shl
test
scas
out
xchg
mov
xlat
enter
mov
add
xchg
ficoms
outsl
fistpl
mov
add
pop
dec
popf
dec
int
pop
std
hlt
inc
cmp
dec
push
sub
xchg
inc
jo
mov
push
aaa
cli
mov
test
cmp
inc
loope
pop
mov
sbbb
sahf
and
in
rorl
movsl
push
mov
clc
icebp
or
jp
nop
push
add
shll
add
in
mov
jo
mov
add
jp
shl
pop
mov
or
shrl
push
enter
cmp
bound
sahf
inc
xchg
outsl
mov
nop
dec
ja
pop
popa
mov
in
fldcw
push
arpl
rorb
lcall
push
hlt
lahf
inc
rorl
rcr
gs
aad
lcall
out
sbb
mov
ficoms
lds
sub
repnz
push
and
inc
mov
adc
push
xlat
pop
cmc
daa
sub
stc
hlt
pop
add
inc
sbb
adc
sti
inc
push
das
adc
push
adc
xchg
cwtl
add
xor
rorl
xchg
cmp
pushf
sbb
xchg
jp
and
mov
push
call
outsl
jl
test
sbb
pop
subl
mov
out
dec
jno
mov
jmp
xor
pop
stc
xlat
sbb
ja
mov
cmpsl
jl
xor
mov
inc
cmp
and
lea
xchg
fstpt
xor
sbb
movl
sub
dec
push
iret
movsl
cmp
test
pop
dec
lcall
push
inc
mov
jg
andl
mov
bnd
sbbb
xchg
fnstsw
jge
inc
sbb
inc
xchg
jg,pt
sahf
out
mov
xchg
cmpsb
push
popa
stc
mov
in
dec
mov
cmc
repnz
jp
lcall
add
mov
or
cld
ret
ficompl
add
mov
in
jle
pop
xchg
push
sub
sarb
lret
fs
loopne
and
dec
sub
rorb
idivb
lret
lock
pop
and
icebp
jmp
sub
sbb
adc
mov
pop
imull
pop
mov
mov
iret
xor
jg
cmp
xchg
adc
mov
mov
outsl
push
int
jne
dec
xlat
test
cmp
cmp
lret
dec
xor
jg
das
push
fcoml
in
pop
mov
rol
mov
insl
jo
mov
push
pop
mov
pusha
or
inc
fiadds
movsl
cltd
mov
stc
popa
loop
push
js
push
mov
rolb
jge
cmc
movsb
lods
xchg
or
sbb
pop
add
cmp
or
push
push
jge
jns
shrb
jo
js
mov
mov
xchg
mov
xor
mov
fcomip
fwait
cmp
ljmp
jno
mov
mov
ret
push
xor
inc
loope
xchg
mov
sti
or
adc
fadds
and
sub
mov
xlat
sbb
xor
fs
lea
sub
mov
cltd
leave
mov
add
adc
cmp
xor
push
add
jp
xchg
push
lock
adc
dec
mov
inc
in
iret
lahf
int
stc
test
mov
ljmp
clc
xor
insl
dec
icebp
xchg
cli
jb
rcrb
jg
adc
outsb
jne
push
je
pop
or
mov
filds
cmp
dec
clc
inc
and
bt
mov
loopne
pop
int
flds
dec
fcmovbe
sub
cmp
sbb
dec
dec
call
xor
cmpsb
add
mov
mov
jle
fidivrl
push
jo
gs
push
mov
jo
add
lock
pusha
xchg
test
in
sub
testb
dec
mov
pop
pop
xchg
add
pusha
shll
repz
jmp
out
jecxz
leave
jb
xchg
jbe
xor
imul
mov
xor
xlat
lahf
mov
adc
cwtl
pop
or
jo
lcall
loope
icebp
sbb
sbb
dec
rcrb
gs
add
xlat
rorb
push
xor
mov
outsb
push
mov
roll
xorb
mov
popf
push
leave
xchg
add
and
andl
in
push
mov
cmpb
pop
and
pop
iret
cmpsl
jae
or
hlt
or
mov
mov
pushf
stc
xor
sahf
jmp
xchg
sub
sub
out
push
js
pop
cld
test
jae
xchg
cltd
or
push
lea
jp
in
push
inc
sub
out
in
mov
loopne
rcrl
into
and
jne
je
into
add
add
push
js
and
mov
stos
cmp
sahf
fstpl
imul
icebp
dec
sub
ljmp
pop
xchg
popf
pop
dec
push
dec
pop
enter
inc
xchg
and
std
mov
mov
imul
push
ds
dec
sahf
dec
jne
sub
cmp
mov
in
les
dec
leave
push
inc
int
mov
out
adc
enter
ret
cmpsl
hlt
adc
cmp
test
rcll
xor
adc
test
inc
and
lock
mov
fidivl
cmpsl
xor
jne
jnp
inc
adc
bound
frstor
sbb
jg
or
incb
xchg
and
inc
lahf
fucomi
mov
sub
xchg
popa
dec
mov
fisttpl
cmp
push
loopne
jb
dec
imul
mov
inc
mov
das
dec
stos
push
loope
jmp
mov
push
mov
enter
adc
rclb
xchg
inc
mov
aam
repz
iret
sbb
cmpsl
dec
mov
fidivs
mov
fmulp
sahf
inc
pop
xchg
dec
nop
loop
bound
cmp
add
mov
mov
cmp
add
outsb
pop
shl
aas
dec
or
mov
sbb
mov
jae
aas
daa
xor
or
cmc
sub
sub
xchg
mov
out
mov
stos
and
scas
jns
sub
sbb
or
fisttps
jecxz
xchg
mov
rolb
in
daa
cmpsb
mov
shr
pop
out
cmp
add
mov
jge
mov
inc
les
cwtl
les
jp
lods
mov
mov
iret
push
in
shlb
mov
dec
mov
pop
mov
jmp
push
mov
outsl
es
xor
xchg
fsts
lods
in
leave
sub
push
jno
fmull
fistpll
stos
notl
insb
adc
in
pusha
lcall
xor
push
xchg
mov
cld
mov
mov
xor
mov
mov
adc
cwtl
lret
cs
ret
sub
mov
sub
test
dec
mov
mov
testl
push
cs
and
dec
jb
cmp
imul
adc
insb
inc
xchg
mov
mov
insb
insl
addl
xchg
or
and
add
mov
add
test
arpl
lret
dec
enter
xor
push
pop
pop
mov
mov
cmp
cli
xchg
hlt
iret
xchg
inc
cmp
in
adc
mov
fdivl
push
fwait
outsl
mov
xor
test
mov
add
mov
mov
enter
das
test
cld
xor
test
ds
clc
clc
int
fwait
and
hlt
in
js
lret
pop
mov
and
pushf
movsb
lahf
inc
jge
cmp
roll
mov
lock
adc
cmpsl
out
mov
xor
fmuls
jns
mov
in
add
sbb
leave
mov
xchg
ret
adc
push
sbb
push
ret
pop
and
or
cmc
sahf
int3
mov
sbb
ljmp
adc
xor
pop
push
fmul
cmpsb
sbb
mov
lcall
fs
cmp
hlt
call
fdivp
cmp
outsb
les
fdivs
sbb
outsb
test
xchg
loope
inc
outsl
jno
out
outsb
in
pop
notl
arpl
lock
or
or
insb
insl
arpl
lods
mov
popf
inc
dec
add
dec
sbb
lds
dec
jne
mov
aad
adc
xor
out
and
dec
or
in
imul
xchg
fdivrl
xor
vsubss
jns
cld
or
ficoms
orl
inc
mov
jge
jg
hlt
ret
sbb
cmp
gs
mov
xor
and
pop
adc
cmpsb
jl
push
fsubrl
dec
out
cmp
cwtl
in
adc
mov
mov
jnp
pushf
andb
or
xchg
mov
call
nop
dec
int
push
cmc
loop
flds
lret
mov
sbb
popa
out
test
mov
mov
jnp
pop
sahf
std
inc
rclb
out
sbb
xor
movsb
xchg
add
inc
lret
test
sahf
and
fcomps
pop
sub
sahf
sbb
pop
fcomi
push
jnp
jl
out
out
sbb
out
cmp
jl
sbb
cltd
cmpl
addr16
and
dec
das
fidivrl
xchg
loop
push
xor
push
in
loopne
sub
and
icebp
addr16
cmpsb
mov
mov
inc
outsb
test
loope
mov
aad
imul
aas
aas
ja
jo
mov
jmp
pop
sub
hlt
loop
fcomp
dec
insb
arpl
test
test
and
jg
subl
sbb
and
mov
add
xchg
sub
ss
sbb
jne
loope
mov
inc
pop
fwait
pop
cltd
and
and
das
inc
mov
int
adc
jbe
jns
lret
push
mov
or
xor
push
and
ds
sahf
fwait
cs
int3
mov
dec
lock
shll
add
rolb
inc
adc
pop
stc
decl
mov
sbb
call
xchg
dec
sbb
inc
xor
es
mov
add
pop
js
stos
push
xchg
mov
lea
mov
cs
in
adc
xor
mov
push
call
fwait
cmp
mov
imul
mov
iret
in
and
in
imul
frstor
mov
cmpsl
lret
inc
sub
sbb
mov
repz
and
cs
jmp
jmp
call
push
ret
add
js
fwait
push
leave
mov
and
or
shlb
mov
iret
push
inc
or
call
clc
xor
xor
pop
sti
or
lods
sbb
push
or
or
jge
xchg
das
mov
mov
inc
push
stos
incb
subl
or
xchg
or
pop
mov
movsl
mov
cmp
fadd
popf
in
out
insl
mov
mov
mov
cli
ja
pop
in
scas
lods
lea
int3
push
fldt
xor
xor
pop
fistps
aad
fwait
lock
xchg
popa
mulb
pop
mov
fldl
mov
shll
mov
add
xchg
mov
mov
or
jo
jecxz
int3
pop
or
or
inc
je
dec
jo
or
cmp
mov
fisubrs
mov
pop
sub
fcmovne
push
aad
jge
insb
jg
or
mov
inc
gs
sbb
es
dec
inc
int3
xor
xchg
and
push
shll
jecxz
and
xor
push
pop
push
add
pop
sbb
aad
push
dec
inc
shlb
scas
pop
outsl
jp
imul
stos
xlat
mov
jp
xorb
cmpsl
sub
lcall
stc
lret
rcrb
in
mov
xchg
push
popf
pop
paddsw
lcall
dec
mov
mov
inc
pusha
aam
dec
inc
push
aaa
push
lret
outsl
dec
push
jae
sub
fistps
les
push
pop
mov
sbb
mov
jnp
std
rcll
dec
iret
jns
pop
fadd
xor
in
mov
jge
cltd
cld
push
mov
xor
test
mov
notb
repnz
and
jbe
imull
ss
loop
push
push
xchg
fsub
pop
out
jnp
ret
cmp
jne
out
call
push
sti
repnz
inc
cli
movd
test
push
adc
shll
mov
push
adc
lcall
xor
loop
jecxz
mov
mov
inc
sti
or
push
inc
and
mov
fcmovb
mov
adc
imul
outsb
mov
xor
pop
xor
movsb
and
mov
nop
push
enter
fwait
ljmp
shrb
push
outsl
mov
and
in
sahf
loopne
push
out
arpl
int3
enter
stos
roll
leave
push
cli
lods
and
push
jg
xchg
out
je
jmp
xchg
sahf
xor
pop
dec
xchg
cld
jge
in
mov
clc
xor
jle
nop
xor
fwait
sahf
pop
in
cmp
inc
pop
lea
movsb
xor
mov
pop
push
mov
int
scas
out
lret
pop
xchg
lods
mov
sti
cltd
xchg
xor
dec
mov
or
mov
fnstsw
xchg
xor
inc
dec
sbb
data16
insb
sbb
shrl
push
pop
and
call
mov
mov
decl
popa
sub
xchg
insb
jae
adc
daa
enter
loopne
repnz
movsb
jo
and
ljmp
and
jmp
dec
das
ret
mov
sub
cmp
cmp
lret
mov
mov
pop
test
xor
adc
ss
add
rorl
js
pop
inc
js
push
sub
leave
popa
jns
inc
test
mov
inc
js
pop
inc
dec
xchg
dec
jae
add
sub
xlat
inc
fidivrs
push
xor
sub
jae,pt
xor
adc
inc
push
push
and
push
dec
icebp
push
cli
mov
mov
and
shrl
dec
insl
pushf
aam
push
fdiv
lods
sub
out
outsb
push
pushf
pop
nop
sub
sbb
dec
test
clc
into
movsl
sub
xchg
push
lcall
sub
aas
dec
mov
ret
rcrb
pushf
push
sbb
push
mov
fidivl
mov
pop
dec
cmp
cmp
aam
insb
mov
data16
mov
lcall
addb
mov
sbb
mov
leave
sbb
mov
das
je
pushf
push
and
jno
fcoms
add
fistl
cmp
inc
and
push
jp
pop
ret
mov
jo
mov
mov
push
cmp
arpl
sbb
mov
aaa
mov
xlat
lea
cld
enter
fsubs
cld
push
in
push
or
mov
cltd
pop
lcall
mov
and
jnp
mov
mov
stos
and
push
push
mov
push
loop
xlat
add
test
shll
adc
les
and
enter
add
pop
xchg
scas
cmp
loopne
cmp
fnstcw
insl
ljmp
imul
sbb
lods
int
cmp
inc
lcall
inc
pop
insl
mov
es
xor
cmc
sahf
frstor
sbb
mov
dec
add
jo
dec
ds
dec
in
mov
pusha
into
nop
bound
call
das
adcl
lods
lock
mov
aaa
sub
or
loope
out
lock
and
push
imul
cmc
ds
push
pop
push
das
jp
and
out
inc
jmp
jl
inc
sub
or
jo
xchg
jae
mov
pop
rcll
xchg
push
mov
xor
loope
fs
fstpl
mov
push
jge
cli
loopne
add
mov
mov
rcl
adc
add
out
gs
sub
movsl
mov
ret
push
scas
decb
dec
jne
rcrl
decb
subl
inc
ljmp
ret
lret
stos
outsb
shlb
fldt
cmp
inc
lahf
pushf
scas
mov
out
mov
or
xchg
notl
push
cmp
lcall
add
push
pop
mov
xchg
xor
sbb
cmpsl
stos
sbb
jp
mov
lcall
add
xchg
pop
xor
mov
sub
cmpsb
mov
jae
cmp
out
mov
rcrb
insb
stos
push
fs
fcoms
icebp
sbbl
ja
inc
arpl
ljmp
nop
imul
push
std
loopne
sarb
add
movsw
xor
pusha
lods
jae
sahf
inc
fnstsw
cmpsb
push
repz
imul
and
rcrl
jg
stc
fnstsw
js
jno
pop
or
ljmp
arpl
mov
dec
and
daa
jno
mov
jg
and
push
mov
and
lds
aad
cli
add
xor
xor
sub
jecxz
sub
mov
mov
dec
mov
in
jle
aam
mov
or
mov
mov
xor
push
fxrstor
xor
mov
xchg
and
adc
pop
iret
movsl
mov
out
mov
cmc
mov
shlb
mov
shrb
mov
lock
pusha
and
jno
xchg
jle
fnsave
sbb
dec
adc
stos
and
sbb
aaa
jo
push
push
add
add
cmpxchg
nop
addr16
jb
mov
push
psllq
jb
inc
dec
scas
or
push
mov
sub
repz
call
scas
clc
enterw
ret
cld
les
mov
ljmp
in
adc
push
aaa
stos
iret
xchg
jo
xor
mov
ret
lret
out
dec
jmp
xor
push
nop
lret
mov
xchg
ds
cmp
sbb
out
cmp
mov
sbb
aad
outsb
xor
fstpt
sbb
pop
adc
mov
sub
stos
fmul
sbb
xor
addl
sub
push
xor
hlt
inc
mov
cmp
fsub
mov
sub
ficoms
and
out
sub
pop
lods
jns
jo
mov
push
test
jno
ficompl
out
hlt
xchg
mulb
mov
cmp
or
pop
nop
mov
loope
cmp
cmp
xor
ret
jp
pop
push
insl
adc
inc
cmp
mov
xchg
inc
add
sbb
iret
dec
movsb
sub
stos
scas
and
lea
sbb
mov
out
or
sub
test
pop
cwtl
ljmp
push
jbe
jecxz
xor
jbe
push
mov
lds
sub
xor
lret
inc
arpl
ficomps
ret
out
and
sbb
push
push
das
arpl
das
ja
or
mov
mov
sub
lock
add
add
cmp
in
and
and
cmp
push
jp
mov
pop
das
adc
ds
fsubrl
push
loope
sbb
dec
xor
sbb
test
pusha
inc
cmp
xlat
mov
insl
pop
jae
fcomps
call
test
xchg
push
addr16
out
outsl
imul
insl
sahf
adc
jge
clc
sbb
roll
push
imul
xor
dec
fisubl
push
clc
imul
and
into
mov
sbbl
movsb
lods
push
repnz
test
cmp
in
loope
imul
sub
pop
jg
iret
sbb
lretw
mov
dec
adc
orl
mov
mov
dec
xlat
inc
popa
mov
push
mov
andl
xor
lcall
pop
add
ret
hlt
divl
mov
mov
lock
dec
ficompl
jbe
sub
inc
aas
jae
test
xor
mov
jp
insb
lahf
push
lods
inc
stos
out
cltd
jno
ret
inc
mov
mov
das
inc
sti
imul
mov
aad
dec
mov
jb
dec
test
push
mov
xchg
popa
call
or
dec
add
mov
jmp
push
push
movsb
push
hlt
mov
mov
lret
mov
or
inc
mov
mov
xlat
mov
insb
dec
pop
or
ja
mov
popf
xchg
xchg
cmp
cli
rcrb
add
cmp
out
lods
pop
mov
dec
sti
pop
sbb
movsl
aad
mov
andl
mov
add
push
outsb
add
mov
int3
add
jmp
enter
mov
cli
dec
repnz
inc
dec
cmpsb
xchg
mov
imul
mov
jne
pop
sti
xchg
cli
push
fstpt
mul
sub
inc
in
xchg
cmp
and
mov
in
jne
pushl
stos
sbb
or
add
or
mov
xchg
ds
lret
and
cli
xchg
mov
daa
in
add
inc
pop
outsb
lret
xlat
cld
cmpsl
dec
aaa
ret
dec
mov
mov
cmp
mov
test
popa
rorl
dec
dec
mov
pop
mov
roll
mov
js
or
cmp
xor
add
push
mov
call
mov
cmp
jb
sub
jns
or
mov
call
dec
loopne
dec
and
fisttpl
lock
pop
mov
dec
jb
xor
repz
lods
lea
mov
jo
lds
push
sub
sti
jge
mov
cmc
fdivrs
pop
ret
xor
aaa
imul
and
jmp
mov
movsb
mov
or
mov
inc
lret
push
ja
fidivrs
cmpsb
pop
jp
xlat
cmp
nop
jmp
push
in
mov
lea
or
and
and
adc
neg
push
xchg
fisubrl
sti
call
adc
sbb
aaa
pop
imul
mov
jmp
xchg
mov
int3
test
sub
cs
in
stos
inc
jns
cmpsl
dec
repnz
data16
sahf
movsb
jle
out
xchg
sahf
out
sub
pop
lret
mov
pop
sbb
adc
jg
push
in
out
popa
int3
jae
cld
incl
jge
loope
add
cmp
rclb
movsb
xchg
mov
ret
or
stos
or
jge
xchg
ss
adc
fs
adc
and
inc
lock
push
out
into
dec
pop
and
xchg
pop
dec
cmpsb
cmpsl
push
inc
pop
mov
roll
lea
in
sti
imul
pop
jne
aas
dec
js
and
cmp
std
cld
iret
gs
fwait
rcrl
sbb
push
notl
dec
out
add
sbb
cmp
or
stos
add
xchg
scas
mov
mov
lcall
mov
rorb
fdiv
xchg
cs
icebp
arpl
mov
cmp
add
rclb
cld
ss
adc
or
mov
mov
jp
or
ljmp
enter
push
cwtl
movsl
mov
nop
cmp
js
stos
aam
jge
jle
sti
fsubl
ror
in
loop
cs
cmpsb
in
or
shrl
out
fsubr
jge
dec
cs
and
lcall
mov
loope
inc
nop
push
test
into
mov
jo
mov
dec
or
xchg
cli
pop
and
andb
cmp
adc
out
sbb
mov
cli
sub
cmpsl
push
xor
and
xlat
mov
sub
jmp
push
mov
divl
icebp
jne
scas
lea
add
adc
jl
pop
aad
scas
add
or
lret
jne
sahf
mov
out
lret
fmuls
jecxz
sub
repnz
sbb
xchg
push
fwait
icebp
cltd
sbb
rolb
lds
and
enter
mov
clc
loope
shlb
xor
mov
das
mov
loopne
add
pop
mov
sbb
push
js
mov
mov
lock
or
icebp
add
stos
daa
stos
mov
repz
push
push
cwtl
jnp
cmp
into
push
ds
pushf
push
fdivrl
test
in
add
add
repnz
dec
andl
outsl
pop
int
fcoml
mov
cmp
adc
mov
stos
stc
pop
pop
addb
pusha
divb
mov
sbb
loop
inc
loope
out
push
or
sbb
out
inc
insl
or
and
sbb
loopne
mov
outsb
je
inc
xchg
popa
test
in
pusha
xlat
loope
sub
cmc
jl
fmull
fnstcw
imul
repz
or
pop
jbe
into
inc
xchg
out
add
scas
notl
sbb
xor
push
in
icebp
lods
insb
jle
jmp
pop
in
push
test
pop
mov
add
xor
sbb
xor
outsl
adc
rclb
shrl
pop
scas
and
push
pop
sub
lock
int
lods
push
adc
les
dec
test
xchg
movsb
xor
pop
outsl
and
dec
fmull
cmp
cwtl
cmp
ljmp
adc
add
inc
sub
pop
subb
js
inc
mov
in
aaa
and
xchg
push
sbb
popa
lods
push
or
add
sar
fwait
addr16
idiv
jae
xor
or
jg
mov
mov
leave
mov
roll
enter
add
sbb
and
ja
jle
loopne
nop
loop
into
mov
push
fsubl
cmpsl
dec
mov
dec
pop
or
push
mov
or
ret
pop
push
subl
sub
mov
jle
lahf
bound
cmp
push
test
out
in
insb
stos
lea
mov
aad
mov
pop
add
ss
sub
mov
negl
lea
inc
xor
lods
movsb
scas
daa
call
dec
aam
mov
popa
dec
in
pop
clc
cli
adc
lcall
in
pop
mov
mov
mov
xchg
cmp
int3
sub
pushf
mov
js
mov
jl
or
sbb
sarb
cmp
push
sbb
popa
add
dec
sarl
dec
pop
int
enter
fs
dec
cltd
and
mov
addr16
aam
nop
cmpsl
and
into
or
xor
cmpl
call
pop
jbe
scas
sahf
pop
xor
push
fbstp
push
aaa
xchg
ljmp
or
cmp
lea
or
repz
nop
pop
xchg
mov
into
ds
cmp
pop
repz
aaa
cmp
icebp
cmp
jo
adc
jmp
mov
adc
adcb
insl
pushf
fsts
arpl
or
xchg
xchg
jo
mov
lret
xchg
fdivr
sbb
push
dec
mov
xor
push
dec
or
mov
subl
dec
les
out
sub
cwtl
scas
int
sbb
jnp
push
cmp
dec
push
or
lret
mov
cmp
push
push
dec
mov
dec
mov
loop
ds
fs
jp
and
popa
pop
pcmpeqb
popa
imul
adcb
mov
ljmp
inc
mov
in
in
es
add
insb
jo
lock
pop
fs
call
mov
mov
test
fsub
lret
inc
jne
mov
mov
mov
ret
jae
pop
sub
mov
cmp
mov
shll
rcrl
int3
jo
mov
jle
loopne
inc
xchg
push
pop
cmp
gs
inc
cmc
test
xorb
adc
in
xor
mov
aaa
lds
xchg
mov
adc
into
test
mov
mov
arpl
add
mov
push
mov
and
push
call
sbb
jp
sbb
mov
scas
xchg
add
inc
int3
cmpsl
mov
jno
mov
js
push
rclb
cmp
fstpt
clc
push
fwait
jmp
dec
pop
pop
xchg
push
clc
xchg
ljmp
inc
lret
cltd
push
push
mov
cli
jns
scas
or
push
xor
push
xchg
pop
jge
shlb
nop
xchg
jae
add
out
int3
sbb
test
into
aaa
mov
loopne
in
sub
add
cmpsb
mov
das
add
sub
dec
push
lea
aaa
add
or
rclb
cld
inc
sbb
inc
pop
inc
insb
daa
aam
mov
inc
mov
mov
jae
jp
shr
mov
jg
jmp
and
out
mov
add
fsubrl
iret
outsl
pop
mov
push
bound
pop
dec
sti
mov
or
push
mov
xchg
or
bound
xor
pop
sub
cmp
push
and
xlat
sbb
add
cmp
ja
add
or
mov
in
fdivrs
jmp
inc
sti
mov
ja
jle
pmaxsw
icebp
pop
pop
xchg
or
pop
andl
inc
sub
cli
cmp
sbb
aas
loopne
ret
add
add
sbb
sbb
xlat
inc
out
cmpsl
push
rolb
scas
mov
fidivs
or
or
sbb
cmp
popf
xor
in
push
std
cmp
inc
push
call
xchg
inc
mov
mov
inc
insb
xchg
push
lcall
adc
push
push
shrb
lret
sub
rcl
ret
pop
out
test
ja
jle
cmp
lcall
adc
lahf
jns
cltd
cltd
pusha
sub
push
adc
out
mov
lret
sahf
stos
sbb
mov
leave
adc
jae
hlt
jmp
lea
mov
out
ret
rorl
push
dec
jns
pop
subl
addr16
push
js
mov
testl
ljmp
pop
int
test
aam
dec
mov
pop
rcrl
out
mov
jecxz
pop
lahf
jne
hlt
inc
and
aaa
mov
ficoml
es
pop
push
xlat
mov
lods
ja
scas
xchg
xchg
pop
test
pop
rcl
sbb
fcoml
cltd
cmp
dec
lea
mov
sub
fsubrs
sub
rcll
mov
lock
jg
test
fnsave
pop
fwait
jae
test
nop
xchg
push
lret
mov
jo
mov
pop
jecxz
cmpsl
rcll
push
mov
adc
out
call
fldln2
push
mov
jg
lret
xor
cmc
movl
into
ja
aad
out
fldenv
and
or
xor
mov
movsb
jmp
xor
dec
jne
out
icebp
cmp
idivl
pop
cmp
xor
in
xchg
inc
or
cmp
xchg
out
aam
adc
jno
xor
and
call
mov
sbb
inc
mov
dec
jecxz
sub
sbb
repz
cmp
fistps
inc
aas
daa
push
mov
xchg
xlat
mov
int
stos
mov
dec
sbb
mov
xlat
lds
push
stc
in
adc
jb
das
lock
push
mov
jge
adc
lret
lods
mov
mov
cli
or
pop
cmpsl
cmp
jnp
xor
jg
icebp
mov
repz
rcll
xchg
jne
xorl
dec
push
pop
mov
xor
fstpt
pop
xor
and
dec
mov
fisttps
cmp
fistps
jp
rcrb
cmp
adc
mov
dec
pusha
mov
inc
lods
in
cwtl
movsl
push
pop
pop
cmp
mov
inc
pop
or
jl
xlat
mov
and
cmpb
idivl
cmc
push
and
xor
xchg
jmp
scas
push
dec
test
lds
in
test
fcomip
int3
adc
testb
pusha
sub
rcrl
fistpll
cmc
xor
cmc
sub
and
iret
push
shll
ficoms
into
push
std
imul
jno
dec
sbb
jmp
cmp
xlat
imul
xor
mov
scas
loope
pop
and
cwtl
and
jg
dec
aad
mov
mov
aaa
xchg
mov
dec
jo
mov
fists
mov
stos
leave
mov
ds
push
pushf
js
aas
xchg
add
mov
push
sbb
out
xor
jne
mov
or
xlat
jno
notb
daa
cmpsl
lods
stos
js
clc
mov
add
call
cmpsb
or
add
pop
test
jl
dec
push
xor
mov
out
test
cltd
push
pop
adc
repz
inc
add
mov
es
jp
or
repnz
das
jge
mov
lcall
cmp
xchg
dec
jmp
jbe
inc
sbb
cmc
data16
sub
into
mov
movsb
in
inc
lods
adc
inc
aad
pushf
in
test
push
fcomps
push
cs
dec
out
out
inc
sub
iret
aad
into
sti
rolb
in
rcr
movsb
add
add
adc
xor
dec
cli
pop
mov
stc
push
es
cmp
lahf
addr16
movb
dec
push
push
pop
int3
add
add
int
push
nop
xor
shrl
sbb
jbe
mov
mov
jl
fwait
popa
lock
xchg
jns
xlat
sbb
rolb
in
cltd
mov
int3
push
pusha
scas
mov
arpl
xor
aaa
ffreep
lret
mov
cmpsb
negb
lret
subl
gs
loop
ret
and
add
imul
push
add
std
daa
in
jg
dec
imul
sahf
add
inc
test
std
inc
ret
push
mov
xlat
jbe
inc
mov
dec
or
fnsave
lcall
movsb
push
push
sbb
pause
pop
fimull
pop
std
push
fwait
inc
int3
scas
ss
jecxz
push
sbb
jge
push
movsb
daa
xor
xchg
addr16
pop
ljmp
mov
jmp
insl
in
mov
pop
imul
int3
xlat
arpl
add
jne
fistpl
nop
out
inc
ret
lret
shll
sbb
xor
xor
sbb
push
inc
fs
stos
int3
mov
inc
and
addl
aad
pop
js
aas
sbbb
push
xor
scas
mov
jb
push
jnp
push
push
aaa
jb
jge
fcomps
mov
es
unpckhps
ret
mov
and
out
jp
lahf
mov
jne
addr16
pop
ret
push
repz
adc
icebp
lods
adcb
popf
in
jg
idiv
pop
mov
jbe
add
repnz
dec
dec
das
and
pusha
cmp
dec
push
daa
es
push
xchg
pop
aam
xor
test
pop
test
mov
mov
shlb
pop
fnstenv
das
out
mov
jo
dec
lcall
insl
pop
push
loopne
sub
add
cmpsb
mov
mov
stos
fnsave
das
push
adc
cmp
jecxz
repnz
xchg
and
lret
jae
or
addr16
adc
jmp
outsl
push
xor
and
mov
pusha
mov
xchg
pop
shl
sub
pop
jmp
fmul
and
fldenv
aaa
push
xchg
adc
cwtl
sub
fstpt
xor
lcall
xchg
call
jmp
jns
adc
and
adc
push
nop
decb
outsl
and
sbb
test
pop
cmp
ljmp
cmp
gs
mov
jne
add
orb
lret
fucom
icebp
aam
in
gs
icebp
jl
add
jnp
test
test
xchg
mov
imull
jle
push
stos
xor
test
outsb
rorl
xchg
lods
nop
pushf
inc
xchg
shrl
movsb
leave
inc
xor
and
inc
mov
xor
push
push
out
in
push
in
pop
jmp
or
aam
sbb
and
push
xchg
out
and
adc
push
fsts
xchg
dec
push
adc
xchg
in
mov
pop
mov
shll
dec
insl
test
nop
inc
ret
pop
adc
jl
or
pop
add
sub
imul
xchg
dec
icebp
cld
sub
pop
sub
adc
add
in
mov
dec
inc
xlat
jnp
std
cmc
sub
xchg
pop
xlat
cmp
enter
pop
mov
cmpsb
es
mov
call
ret
loop
fs
js
icebp
cmpsb
pop
shll
pop
jnp
ror
mov
adc
or
xchg
decl
fucompp
xchg
jp
adc
xor
flds
test
pop
mov
jge
imul
fistl
cmp
sbb
adc
inc
insl
gs
adc
xor
ja
test
mov
mov
shrl
frstor
int3
dec
lcall
icebp
cmpsb
push
cltd
shlb
push
pop
lea
push
pop
jae
addr16
cmc
and
stc
movsb
stc
loope
push
cwtl
addl
adc
sub
imul
add
push
fsubl
into
imul
fistpl
jns
mov
std
mov
sti
les
pop
int3
loop
shrb
push
xchg
push
xacquire
pop
sbb
jp
clc
xchg
enter
imul
into
iret
mov
pop
mov
add
jae
fistl
push
lret
push
inc
cmp
cmp
pop
mov
and
xchg
aam
jns
lret
test
xor
out
test
dec
sub
mov
adc
mov
cmp
lock
push
cmc
mov
dec
arpl
xchg
shrl
sahf
lret
inc
hlt
push
test
or
push
mov
loope
js
mov
or
fnstsw
fcomps
data16
or
sub
xor
arpl
mov
dec
fwait
es
fwait
out
mov
hlt
pusha
push
fidivl
pop
fs
shlb
popl
xor
fwait
int3
add
icebp
pop
jge
inc
ficoms
add
pop
mov
jo
dec
mov
mov
pop
mov
int3
lds
jp
lea
cmpsl
mov
aas
imul
jo
iret
lcall
jno
fstl
rcll
aaa
jg
ds
add
in
mov
call
sub
lret
push
gs
and
push
fiadds
cmc
test
jno
jns
xchg
outsl
ljmp
fidivrs
push
insl
mov
jle
cwtl
mov
pop
ret
push
push
lods
mov
mov
gs
jp
nop
pop
fcmovne
cmc
add
pusha
pop
addr16
insl
xor
cmp
frstor
cmp
scas
lds
stos
jp
in
push
xor
cmc
es
add
lret
daa
jnp
popf
and
and
pop
scas
mov
mov
dec
add
cmpsl
mov
daa
int
lcall
jle
dec
mov
or
std
pop
push
xor
adc
or
jecxz
iret
mov
repz
pusha
mov
sahf
sub
stos
mov
das
xor
stos
mov
push
ss
push
loopne
lcall
je
out
sbb
dec
lods
jmp
js
adc
mov
inc
int
fs
xlat
mov
add
int3
pop
inc
stos
inc
jo
xor
mov
adc
mov
cmp
xor
in
sub
nop
inc
orl
or
push
pop
sub
icebp
xor
mov
jge,pn
icebp
add
mov
fimuls
daa
cmp
jle
aas
xchg
ds
mov
cmp
pop
pusha
and
pop
sbb
jle
xchg
lea
and
and
sub
push
stos
stc
inc
fcmovnb
ljmp
adc
cmp
mov
xchg
nop
cmp
test
pop
fimull
xchg
daa
movsb
push
mov
xchg
adc
xchg
xchg
sbbb
fsubl
fcmovb
adc
rcl
nop
sub
lahf
shll
mov
nop
push
repz
inc
dec
and
xlat
enter
and
int
outsb
mov
arpl
pop
push
std
xor
and
cwtl
leave
daa
cmp
loope
not
fsubrl
inc
cwtl
cld
inc
fcmovb
mov
subl
sub
cmp
idivl
arpl
push
cmp
ret
stos
movsb
fistl
inc
mov
jp
push
xor
adc
testb
ficoms
shll
mov
in
roll
sub
mov
or
cmp
xor
ficomps
in
pop
enter
sub
cmpsb
pop
and
mov
das
sbb
push
jnp
movsl
test
xor
decb
add
mov
cmp
nop
iret
xor
idivl
leave
popf
sub
jno
mov
adc
ficoml
aam
pop
mov
cli
xchg
add
aam
sub
in
jmp
sarb
add
and
pusha
fucomip
mov
negb
push
or
inc
orl
add
xchg
adc
jo
jge
imul
fs
sbb
fnstcw
ja
xchg
add
inc
dec
scas
sbbb
cwtl
popf
hlt
mov
inc
mov
rol
xor
sbbb
and
mov
das
xor
xchg
push
fildll
xchg
or
jbe
outsl
insl
inc
cmp
int
js
loop
mov
sbb
adc
inc
mov
jnp
xor
cld
nop
add
ffreep
jno
rcrl
test
push
mov
daa
arpl
cltd
int3
fldenv
jnp
sub
push
sub
push
cmp
xor
jmp
sbb
jl
fcoms
sahf
int3
mov
push
inc
mov
cmp
and
std
sub
adc
xchg
push
cmp
adc
dec
fiaddl
inc
inc
sbb
lds
ret
fs
fisttpll
inc
mov
je
fldt
jnp
push
iret
test
shrl
cmp
adc
test
inc
movaps
aas
sbb
lea
xorb
notb
mov
lcall
push
mov
lahf
insl
xabort
imul
inc
ret
adc
or
mov
xchg
aam
dec
jno
mov
inc
jmp
mov
sbb
pop
jg
pop
mov
pop
cmp
int
xor
or
push
or
jbe
xchg
aad
hlt
jp
outsl
sbb
jo
inc
leave
aaa
stos
das
shll
jmp
xor
shll
loop
jmp
pop
pop
mov
sti
out
xchg
sarl
jnp
push
imul
adc
lss
sbb
mov
xlat
sbbl
sbb
mov
inc
fwait
jle
adc
shll
cmpl
addb
andl
loop
cmp
das
push
repnz
daa
jb
lea
or
xor
incl
mov
and
push
into
pop
pop
popf
out
testl
ret
fiaddl
add
nop
nop
clc
movsl
into
cli
ret
loopne
mov
inc
add
inc
push
fcompl
es
adc
lods
inc
addr16
clc
jge
inc
push
mov
inc
jo
mov
lret
imul
icebp
inc
pop
lcall
in
loop
pop
lcall
jb
sbb
add
or
ja
pop
stos
dec
imul
shlb
out
cmp
dec
jae
aaa
mov
inc
push
mov
pop
insl
pop
ret
lret
sbb
sub
or
xlat
lcall
xchg
xor
mov
mov
in
test
shl
jo
outsl
sub
cmpsb
sbb
dec
shrb
cli
mov
dec
repnz
ljmp
mov
sbb
movsb
mov
mov
enter
ljmp
jge
pop
popf
inc
scas
xchg
or
jecxz
inc
sarb
add
test
sub
cmp
loop
fs
lods
xchg
movsb
repnz
negb
mov
orb
in
rcrl
movsl
shll
xor
in
in
push
fisubs
xchg
cmp
in
and
into
cld
sub
mov
dec
dec
cmpsl
mov
sti
xorl
pop
cmp
movsl
sti
int3
out
push
xchg
cmpl
addr16
xchg
nop
loopne
iret
ret
cwtl
jp
jl
aam
xorl
outsb
cmp
xor
mov
cld
rcl
test
frstor
push
pushf
in
sti
aam
repz
or
in
dec
call
sub
scas
test
mov
add
xchg
dec
add
or
les
xlat
enter
xchg
fdivp
pop
mov
test
pop
xchg
xchg
ror
xor
aaa
mov
xchg
and
pop
loopne
repz
mov
dec
jne
mov
xor
test
std
mov
dec
jle
lret
mov
out
mov
lea
and
repnz
mov
jle
fs
std
mov
lods
cltd
and
shl
sub
dec
jo
xor
clc
jns
jg
cmpsl
dec
push
mov
mov
pop
pop
adc
xor
xchg
adc
dec
pop
pop
mov
sbb
jge
mov
out
jnp
std
lea
outsl
mov
push
es
dec
sbb
add
insl
xor
cld
shll
pusha
jne
push
add
loop
add
pop
inc
mov
dec
push
pop
mov
and
ret
int
pop
leave
aam
add
les
adc
sbb
je
fisubl
mov
cmpsb
pop
xor
xchg
pop
ja
mov
pop
jno
xchg
in
mov
int3
xor
lahf
jle
xor
xchg
mov
adc
cmp
push
jle
sti
xchg
insb
jg
icebp
and
push
popf
push
fstps
adc
ja
stos
stos
sti
cmp
or
xchg
dec
out
int
inc
cmp
xorb
popa
mov
pusha
pop
imul
xchg
leave
fbld
mov
pop
xchg
fiaddl
lods
hlt
xchg
sbbb
enter
scas
lret
addr16
popa
rorl
test
cmp
imul
jns
fisubl
mov
dec
sti
xchg
adc
inc
mov
sub
sti
push
arpl
xchg
dec
jecxz
daa
mov
rcl
pushf
mov
stc
mov
mov
jns
in
fnstcw
pop
lods
cmp
pop
into
aam
in
sbb
stc
inc
sbb
je
jp
jmp
mov
sub
inc
push
add
push
adc
nop
scas
push
lock
je
jnp
adc
clc
xor
xchg
scas
sarl
aad
mov
mov
push
pop
js
mov
mov
mov
fimull
jae
aad
test
sbb
fcmovb
push
jo
loop
inc
xor
jns
cmp
movsl
jne
adc
sti
fstpl
mov
loopne
fisubs
and
pop
dec
aaa
mov
mov
or
int3
into
fmul
shr
out
mov
dec
iret
pop
out
std
out
fs
addr16
sub
xchg
cmp
lret
mov
outsb
or
mov
xor
jge
inc
movsb
pop
loop
notb
cmp
cmp
fwait
xchg
sub
jecxz
mov
xor
stos
loop
xor
testb
xor
mov
ss
or
std
rorl
ds
imul
mov
xchg
inc
jnp
xchg
je
adc
outsb
sti
adc
test
mov
cmp
mov
popf
jecxz
push
test
xor
outsl
mov
out
stos
jnp
stos
lock
pop
aas
pop
scas
mov
cmc
aam
cli
sub
xor
pop
pop
dec
and
test
sbb
mov
outsb
std
cmc
inc
sbb
leave
loopne
insb
bound
clc
pop
movsb
js
cwtl
das
push
ret
push
add
cmp
bound
mov
xchg
cmp
shll
stos
sub
mov
xrelease
aas
push
lods
mov
lahf
and
sbb
stos
stos
cwtl
cwtl
test
mov
sahf
ret
fstl
or
or
push
ss
fcoms
int
repnz
mov
cli
xlat
pop
roll
jmp
rcrl
ss
and
push
ret
ret
pop
push
push
or
jns
pop
pushf
inc
mov
std
in
movb
ror
enter
push
sub
and
mov
jnp
insb
lods
jmp
subl
dec
daa
xor
sbb
sub
cmp
shll
cmp
sahf
cld
pop
mov
mov
inc
adc
inc
cltd
mov
arpl
fbstp
push
cmp
jmp
and
sub
in
push
and
dec
les
call
fld
mov
icebp
leave
out
subb
pop
pop
push
sbb
add
fiadds
outsl
fcoml
push
or
pop
add
or
xchg
cmpsl
xlat
dec
sbb
out
pop
clc
jecxz
push
lcall
aas
push
shll
inc
subl
scas
mov
popa
jnp
adc
mov
sub
ljmp
test
inc
pop
daa
jle
out
sbb
sbb
mov
sbb
jmp
ret
shl
js
scas
xor
sbb
cmp
clc
outsb
mov
xchg
aas
push
push
ds
mov
call
pop
bound
sahf
out
xchg
imul
push
aaa
call
rcrb
stos
mov
lods
cmp
rclb
insl
rcrb
div
outsb
lret
dec
andl
xchg
pop
inc
sti
pop
iret
dec
jl
cmc
xlat
adc
pop
adc
xchg
ret
adcb
push
stos
roll
cmp
adc
xor
loop
idivb
push
xorl
call
roll
or
mov
jb
inc
sub
and
xlat
mov
jmp
add
cld
or
adc
lods
aam
pop
push
mov
push
pop
sub
mov
shr
jae
xchg
leave
repnz
or
add
aaa
and
add
mov
sub
pop
and
xor
mov
jb
jo
inc
loope
xor
xlat
repnz
inc
adc
cmpsb
xlat
inc
pusha
mov
ljmp
ljmp
stos
add
jbe
shlb
jo
in
cmc
dec
iret
or
xlat
mov
cmpsl
adc
mov
loop
add
shr
je
mov
jl
stc
inc
aaa
leave
jmp
int
lar
lea
adc
dec
mov
mov
push
les
scas
fs
mov
xchg
cmp
sbb
jae
in
mov
mov
mov
mov
xchg
mov
mov
jecxz
and
scas
and
mov
and
aaa
test
jbe
xor
loopne
add
dec
jecxz
test
jl
faddl
loope
in
push
xchg
sarb
movsb
add
or
add
cmp
aam
jmp
shll
add
mov
xchg
jnp
int
xchg
cmp
in
sbb
sbb
inc
aad
pusha
fistps
subl
push
idivb
mov
and
daa
add
or
sub
or
aaa
mov
push
sahf
lea
pop
mov
cwtl
xchg
add
jecxz
cltd
mov
cmc
jnp
push
and
inc
mov
lret
lahf
push
jo
fadd
xor
mov
enter
fnstsw
xchg
lahf
mov
fbstp
ret
xor
andb
ret
mov
movsl
mov
jae
jp
mov
out
shll
imul
sub
xor
or
mov
loopne
sub
sub
outsb
aas
xlat
or
sbb
fdivs
pop
pushf
sub
in
add
lods
lds
loopne
xchg
lods
ret
notl
fwait
jo
xchg
pop
and
pop
xchg
cmpsl
test
je
add
push
rcrl
stos
sbb
push
xor
mov
xor
jno
popf
xchg
fcom
lea
nop
pop
into
sti
rorl
shll
jbe
mov
and
neg
bound
cmp
imul
push
jno
hlt
dec
xor
pop
mov
scas
add
ficomps
adc
pushw
lcall
push
in
enter
cmp
xchg
lods
lret
sub
jne
pop
cmp
pop
mov
test
test
mov
push
insb
insl
in
xchg
dec
xchg
jmp
pop
xor
scas
stos
out
jp
cltd
imul
ss
mov
and
test
mov
push
fisttps
sub
xchg
mov
and
inc
loope
pop
or
cli
and
push
dec
testl
jne
push
xor
cltd
push
sbb
fisttps
repnz
mov
test
push
fists
inc
stc
ss
ffreep
xor
xchg
mov
pop
out
daa
mov
rcrl
je
out
and
stos
mov
loop
aad
mov
jo
sbbl
mov
sbbl
int3
mov
fiaddl
sbb
inc
jmp
or
dec
ret
push
stc
and
popa
push
xorb
aas
stc
jp
jge
int3
ds
xor
popf
insl
and
jno
sarl
inc
cmp
add
sarl
sbb
inc
jecxz
sbb
ret
inc
push
loop
pop
adc
adc
xchg
das
dec
jo
jle
mov
enter
in
dec
adc
jb
adc
enter
push
push
mov
loop
pop
bound
cmp
push
mov
cmc
mov
jle
leave
dec
dec
aas
imul
ret
insb
push
fildl
inc
insl
es
les
cmp
mov
xchg
fmuls
es
xor
popa
shrl
lods
in
int
jge
roll
xchg
ljmp
jb
and
test
inc
xchg
test
into
aas
add
movl
xchg
pop
add
cld
adc
xlat
lods
inc
or
jp
in
cmp
mov
ret
lods
inc
mov
cmp
mov
inc
out
or
jl
xor
push
arpl
arpl
stc
pop
push
jae
push
push
imul
ss
or
cmp
cmc
jge
mov
shll
leave
shl
pop
or
aas
push
pop
sub
pop
push
and
and
or
push
xor
pop
pop
aaa
push
adc
in
leave
pop
mov
dec
xlat
lcall
pushfw
dec
xchg
sub
add
push
or
xchg
int
test
fistpll
mov
push
addr16
das
mov
out
fwait
es
ljmp
add
rcl
push
aas
mov
mov
jp
jmp
pop
mov
fmuls
and
and
mov
add
gs
cmp
add
mov
or
push
mov
int
dec
xlat
andl
fiadds
mov
pusha
test
push
rorl
jge
out
cltd
dec
mov
xchg
lods
rorb
ss
aad
sbbb
xor
test
hlt
out
lret
mov
add
xlat
je
fmuls
pushf
jp
in
pop
pop
fistps
pushf
push
inc
sub
mov
mov
hlt
mov
data16
mov
sbb
push
xor
jg
negl
mov
pop
mov
ljmp
pop
xor
fwait
adc
lret
out
inc
mov
cltd
cmp
mov
xchg
jbe
in
mov
mov
into
aad
mov
sub
je
int3
ds
arpl
mov
dec
mov
push
inc
adc
lcall
les
push
pop
rcll
ljmp
leave
sub
pop
mov
xlat
and
repz
test
mov
pop
loop
xor
jae
imul
int3
push
sbb
xchg
outsl
sub
dec
xchg
xchg
dec
or
mov
mov
lods
cli
cld
cltd
aam
pop
jp
jmp
lods
xchg
push
jno
cmpb
dec
dec
xchg
loop
cmpsb
jns
ret
jg
cmp
mov
in
mov
or
push
int
lea
jg
lahf
or
cmc
and
sub
loope
inc
push
and
in
jbe
xor
dec
sub
sbb
cs
idiv
sahf
std
dec
scas
popf
ret
push
inc
mov
ljmp
pop
push
lahf
outsb
icebp
fisubrl
push
test
loop
cmp
xchg
and
xchg
stc
call
repnz
sbb
sub
xchg
sub
das
pop
sub
sti
jle
test
xchg
aad
mov
sti
mov
or
xchg
cmpsl
movsb
push
aaa
dec
xor
ss
das
pushf
and
add
or
xor
jmp
ret
dec
dec
pop
xor
xlat
testl
pop
aam
pop
nop
inc
fisubl
cld
push
push
jns
shr
popf
ffree
je
or
inc
adc
push
insb
imul
dec
daa
xchg
add
cmp
clc
out
or
je
test
jl
outsl
data16
dec
in
dec
xor
xor
or
ss
icebp
add
daa
aaa
jb
jb
ds
lret
gs
lret
dec
shl
outsb
aaa
xchg
enter
push
cmp
push
xchg
pushf
add
in
xor
push
sarl
icebp
mov
lds
adc
lock
and
sub
loope
mov
jle
push
mov
repnz
inc
jnp
sub
lods
pop
mov
shl
push
std
out
test
sbb
hlt
mov
int
out
add
jmp
mov
xchg
je
notl
pop
mov
sbb
movsb
pop
xchg
std
aas
mov
ret
xor
or
push
aad
sbb
push
ds
loop
sbb
sarb
dec
pop
xchg
and
push
push
inc
outsl
or
jle
stos
mov
out
outsl
aad
push
or
cmp
cli
xlat
call
mov
testb
fldenv
mov
fadd
and
adc
mov
pushl
lds
inc
push
mov
lds
jecxz
xchg
mov
dec
test
into
or
mov
mov
daa
inc
mov
out
inc
icebp
rorl
mov
pop
loopne
and
or
int3
cmp
dec
inc
pop
hlt
jge
popf
pop
call
ja
repnz
dec
dec
pop
pop
adc
mov
sub
scas
or
lock
aad
sbbb
lret
push
test
cwtl
mov
mov
movsb
jle
and
dec
popf
cs
pop
push
xchg
test
mov
jns
pop
icebp
aam
sbb
mov
mov
scas
xor
mov
sub
dec
stos
mov
sbb
adc
shll
mov
adc
mov
jbe
xchg
adc
sahf
in
in
jno
insb
call
lcall
adc
mov
sbb
xlat
jmp
dec
test
add
rolb
adc
popa
sub
xchg
mov
sbb
insb
xchg
sbb
mov
jbe
mov
aas
mov
pop
das
out
testb
xor
and
iret
mov
xor
jge
xlat
mov
and
dec
and
mov
aam
insb
jge
lods
aad
insb
pushf
xlat
mov
pop
cmp
das
je,pn
pop
push
test
js
jne
push
sub
mov
pusha
cmp
jbe
add
call
push
pop
test
outsb
dec
leave
or
ret
mov
fildl
cmpsl
cmpl
test
cli
out
pusha
push
cmc
adc
or
inc
ljmp
stos
add
pop
add
imul
fistl
call
jecxz
repnz
cmp
mov
fistpl
inc
mov
dec
lahf
js
repnz
fxch
mov
push
jbe
test
cmovg
hlt
sub
test
lea
loope
scas
inc
enter
icebp
jg
jmp
jns
insl
cmc
fwait
out
cwtl
and
mov
pop
cmc
cmpsb
testb
out
jbe
aam
push
mov
stos
notb
xchg
adc
mov
jno
gs
in
dec
mov
stos
inc
pop
push
fwait
fwait
std
jl
or
dec
push
arpl
movsb
pop
out
or
jne
and
lods
dec
adc
aam
xor
arpl
in
and
loopne
mov
aad
cmp
cli
data16
ds
test
int
mov
popl
pop
movsl
adc
push
adcb
xchg
cli
mov
mov
add
hlt
or
pusha
push
xchg
dec
add
and
sbb
push
sbb
fld
pushf
out
orl
jb
test
dec
stos
test
inc
sti
dec
mov
das
jns
in
xchg
xchg
dec
insl
mov
test
ret
ja
iret
lahf
lcall
and
cmp
iret
scas
movsl
add
sub
fsubrs
in
imul
stos
sbb
inc
cli
jno
mov
repz
mov
mov
sti
movsl
sub
imul
xchg
xor
idivl
pop
mov
jmp
rorl
popf
faddl
arpl
xor
cmp
push
cmp
push
jmp
add
jle
stc
and
xor
lret
outsl
xchg
lcall
mov
mov
push
pop
inc
popa
cltd
rcl
cmp
jno
adc
lods
xchg
movsb
and
and
int3
pop
mov
ljmp
sbb
ja
xchg
mov
dec
leave
aam
lds
into
shlb
sti
aaa
and
jl
cmpsb
faddp
add
mov
dec
sub
jo
ljmp
in
or
dec
cmp
jnp
cmc
push
and
adc
push
mov
xor
cmp
in
fsts
xchg
sti
pop
sub
jmp
int3
pop
cltd
fxch
adcl
adc
push
mov
cs
mov
xorl
jge
dec
repnz
jge
out
pop
xchg
hlt
or
ds
adc
rol
push
in
imul
or
sbb
push
dec
jle
mov
xchg
mov
push
mull
and
pop
mov
sub
inc
rclb
mov
stos
jno
adc
adcb
insb
push
xchg
cmp
xchg
mov
xor
out
roll
fistpl
test
add
aaa
lret
jae
and
movsl
lea
andb
lcall
stos
mov
jno
sbb
pop
test
shlb
les
mov
adc
in
stos
movsb
pop
mov
mov
xchg
mov
sbb
push
lods
scas
cmp
test
stc
imul
jl
or
push
inc
in
mov
xchg
push
xlat
adc
mov
xlat
lret
jo
lahf
imul
fstpl
mov
hlt
arpl
pop
dec
lahf
imul
test
mov
xchg
daa
sub
xchg
mov
das
mov
arpl
cwtl
pop
xchg
jns
popa
pop
pop
jmp
pop
jnp
jl
jo
push
lea
mov
inc
hlt
imul
and
in
sbb
or
stos
stos
lret
fsubrp
xchg
gs
enter
mov
mov
inc
test
jb
inc
xchg
icebp
mov
fs
fadds
pop
das
or
and
add
xchg
in
ljmp
stos
or
or
mov
sahf
repz
jno
aam
pop
push
rorb
into
fs
xchg
insl
mov
subl
stos
bnd
insb
sbb
stos
outsl
shll
pop
xor
push
addb
cmp
adc
ss
or
push
sub
stc
xchg
ds
aam
aad
aad
push
cmpsb
sbb
mov
jg
fdivrl
cmp
les
imul
inc
sub
pop
xchg
add
sbb
pop
mov
jae
pop
xor
jno,pn
xlat
inc
or
dec
pop
mov
aad
out
add
jne
leave
mov
je
mov
pop
and
idivl
lahf
mull
test
rcrl
push
fmul
fs
xor
adc
test
icebp
push
inc
test
cld
cmpl
test
jne
iret
jl
aaa
mov
push
aaa
popf
mov
xchg
push
data16
cmpsl
xchg
aas
mov
ja
sti
mov
out
insl
pop
shrb
enter
cmp
outsb
sbb
inc
sti
test
mov
test
add
mov
fidivrl
test
jbe
aas
ljmp
push
and
aas
mov
cmp
mov
mov
mov
xlat
fimull
mov
outsb
sahf
in
inc
xor
xchg
xor
movsb
jmp
negl
loopne
lret
mov
cmp
cmp
sbb
xor
and
outsl
hlt
ret
testb
daa
fnstsw
lea
inc
pop
mov
dec
loope
orb
add
js
test
outsl
lahf
adc
pop
sahf
gs
sbb
outsl
cmc
sub
mov
paddd
add
push
pop
inc
push
stos
push
out
dec
pop
insl
push
push
pusha
xchg
mov
xchg
leave
xchg
sbb
pop
pop
push
orb
push
das
jp
aaa
cmp
divl
aam
movsl
addl
xchg
cmp
fsubs
lret
pop
int
xor
inc
add
xchg
dec
sbb
xor
cwtl
test
je
and
or
stos
sbb
lahf
insb
addb
sub
pcmpgtd
cmp
ljmp
aam
sbb
mov
mov
jge
movb
sahf
lds
sbb
movsb
mov
in
dec
lcall
xchg
or
imul
jmp
xchg
push
fiaddl
xchg
adc
inc
js
inc
enter
sub
enter
rcl
pop
pop
mov
outsl
pushf
mov
imul
mov
and
aad
mov
leave
fmuls
jmp
imul
sub
stos
movsb
aas
push
clc
adc
pop
push
cwtl
insb
push
es
mov
loopne
lret
aad
test
idivl
lcall
cmc
dec
sbb
aas
push
int
xchg
pushf
fdivs
jbe
jns
xchg
adc
mov
sbb
cli
sub
or
adc
lods
je
push
test
ret
pusha
adc
ret
sbb
inc
push
or
push
mov
mov
ljmp
pushf
sub
pop
jb
jno
xor
sub
rclb
out
sbb
mov
mov
or
repnz
movsl
add
add
stos
jns
mov
adc
ficoml
mov
rolb
out
push
leave
adcl
loopne
cwtl
imulb
orl
out
ja
sub
and
push
movsl
rolb
cmp
cmpsl
and
jne
jbe
or
push
sub
fisttpll
push
sbb
pop
mov
vshufps
movsl
subb
scas
test
push
add
sbb
stc
sub
sbb
iret
jbe
rcr
pop
dec
jg
jle
ret
pop
out
stos
sub
out
int3
mov
or
stos
mov
rolb
add
gs
subb
lds
fsts
fdivrl
or
push
mov
repnz
sub
jnp
mov
xchg
loopne
xor
icebp
push
mov
std
repnz
adc
ljmp
jge
push
dec
or
ret
mov
mov
popf
imul
add
pop
dec
adc
add
data16
mov
in
mov
sub
inc
add
cmpsl
xchg
test
leave
outsl
adc
jmp
rcrl
mov
sti
push
mov
pusha
or
sub
xor
loop
js
mov
ficompl
in
dec
fwait
pushf
mov
push
inc
rcr
pushf
pop
push
shlb
ret
jl
into
jno
jecxz
jg
cmp
cmp
lahf
or
int3
pop
ds
cmpsl
in
loop
negl
repnz
jae
lods
lcall
add
rcrb
pop
sti
test
or
addr16
add
call
mov
je
insl
cwtl
inc
mov
or
inc
jb
ja
sbb
jne
jmp
and
mov
lods
sarl
rcll
dec
jp
push
mov
and
xchg
imul
push
sub
das
lds
out
mov
daa
cltd
in
pop
jno
xchg
jb
add
cmpsl
sub
or
mov
stos
test
dec
push
and
orl
mov
push
enter
push
jno
fildll
mov
add
stos
lods
xchg
xor
pop
ss
pushf
imul
ja
add
cmpl
pop
and
xor
mov
idiv
int3
ret
ds
jle
mov
lds
push
ret
mov
mov
or
mov
mov
xor
xlat
leave
cmpsl
nop
xchg
mov
jmp
stos
jne
adc
dec
xchg
xchg
out
loopne
popa
xchg
push
jo
add
loope
and
ja
jns
jl
sub
sub
xlat
pop
dec
mov
inc
push
lods
adc
adc
or
xchg
mov
mov
jecxz
push
leave
mov
jp
cmp
in
lahf
inc
mov
fsts
adc
mov
mov
addl
sti
popf
adc
mov
inc
sub
cmp
pop
push
pop
jbe
push
bnd
shlb
jne
fmul
hlt
test
neg
popa
or
popf
adc
add
cs
es
test
dec
mov
lds
out
ficompl
fcoms
cwtl
fwait
adc
stos
sbb
adc
jg
mov
add
popa
xchg
and
mov
xchg
stos
inc
dec
lcall
and
sub
outsl
mov
das
data16
cmovbe
pop
inc
mov
jg
sub
cmpsb
movsbl
sahf
pop
ss
pop
mov
test
fwait
subb
or
mov
sarl
fstpt
daa
popf
and
incl
xchg
ja
mov
adc
pop
inc
jbe
xchg
cltd
test
mov
insl
push
aad
pop
mov
xchg
out
addr16
and
sub
daa
or
inc
fdivs
fisubrs
pop
push
dec
sub
mov
add
push
ficomps
xor
jmp
mov
mov
popf
outsl
add
add
fdivrl
ret
dec
rcrb
inc
inc
dec
and
xchg
rcrl
test
ret
in
pop
mov
mov
imul
es
dec
mov
fsubrs
into
fcompl
xchg
adc
dec
mov
or
lret
ja
shr
cwtl
fnsave
cmpsb
dec
sub
dec
ficoml
mov
add
mov
inc
loopne
pop
rcll
in
inc
cmc
mov
cmpsl
adc
std
and
lock
jle
jg
sub
adcb
out
arpl
aaa
jmp
cmp
mov
je
pop
icebp
jecxz
pop
mov
lea
push
sbb
xchg
mov
loope
and
das
mov
outsl
or
data16
mov
enter
inc
push
pop
and
cmp
notb
jns
mov
daa
inc
imul
add
xor
jns
sbb
nop
test
push
data16
push
sub
pop
lcall
push
mov
xor
or
or
out
out
adc
cmp
ds
dec
sub
cltd
inc
in
mov
sahf
push
xchg
pushf
sbb
or
mov
test
cmp
in
fldl
cmp
cmpsb
dec
popf
sub
push
xor
clc
fs
popa
call
mov
or
mov
shll
fwait
outsb
adc
pop
add
repnz
imul
out
movsl
js
pushf
or
mov
aad
rolb
and
and
adc
imul
ret
lcall
shl
mov
es
js
push
pop
aad
ljmp
sarl
add
sub
xchg
loope
mov
add
outsl
cld
loope
dec
test
fcmovnbe
jp
ljmp
js
xor
stc
enter
mov
jb
adc
aam
push
sbb
in
call
dec
ret
dec
add
push
mov
clc
loopne
mov
cmp
push
pusha
push
les
ss
jae
cmp
mov
jmp
pop
lret
cltd
and
or
or
fbstp
jo
cs
in
mov
shrl
jnp
pop
mov
mov
ds
and
xchg
sub
rolb
js
adc
cmovp
into
lea
cmpsl
daa
cmpsl
xor
imul
and
stos
cli
adc
aad
in
and
nop
push
adc
mov
jne
sbb
push
std
or
xor
push
bound
add
adc
insb
pop
out
or
iret
pop
and
incb
jl
cmp
leave
mov
cmc
adc
scas
inc
cwtl
cmp
sbb
mov
pop
push
cmc
loopne
lahf
scas
fistpl
ss
or
mov
fsubl
not
or
pop
fisttpl
mov
pop
je
divl
add
inc
arpl
xor
mov
mov
out
push
inc
mov
mov
jl
insb
inc
xchg
dec
insl
in
ficoml
and
cmp
scas
mov
add
mov
jae
aas
in
mov
sti
into
cmpsl
mov
mov
bound
pop
add
out
pushf
and
push
fucomi
int
int3
inc
jb
adc
pop
bound
jne
pop
sub
add
aad
jns
bound
std
pop
stos
xor
dec
aad
and
cmp
fnsave
inc
es
jnp
ja
icebp
cmpsb
mov
les
mov
jbe
dec
hlt
stc
out
fstpl
sbb
das
adc
test
cmp
xchg
cmp
inc
stc
dec
or
and
xchg
add
jno
adc
push
out
jl
cld
js
loopne
out
or
push
cwtl
jo
pushf
daa
data16
ficompl
jg
enter
daa
hlt
rcl
push
inc
scas
sarl
or
mov
daa
in
add
and
daa
mov
lods
out
scas
cld
xorb
and
jne
adc
call
xchg
jno
dec
sub
ljmp
pmaddwd
rclb
sbb
sub
xor
lock
push
jo
test
das
pop
imul
mov
push
addr16
das
pop
or
int3
test
cmp
cmpsb
ljmp
jmp
loop
mov
sarl
testl
pop
into
popf
and
adc
test
adc
int
bnd
add
int
idivl
xchg
stos
call
ljmp
or
pop
mov
fisubrl
jmp
das
cli
je
push
enter
rclb
mov
add
xchg
loope
adc
mov
popf
cmp
idivl
push
rcl
in
daa
ljmp
aas
aam
pop
ja
cmc
mov
xor
push
lds
int
dec
out
lahf
stc
mov
rcll
mov
bound
sub
inc
add
clc
cmpl
sti
pop
push
inc
jns
ficoms
dec
iret
sahf
stos
mov
jns
and
xchg
sub
testl
mov
daa
testb
pop
fwait
popa
pusha
xor
lcall
lret
cmp
adc
test
sti
pop
push
and
ljmp
push
mov
mov
imul
jp
sub
xchg
bnd
jecxz
lret
out
sbb
dec
jne
fldln2
mov
mov
aad
sbb
pop
lods
mov
add
les
mov
jo
xor
xchg
cmp
add
sbbl
mov
mov
rcl
lcall
test
sbb
divl
subw
dec
test
and
andb
pop
and
mov
xor
push
in
mov
xchg
push
jbe
push
test
xorl
pusha
adc
repz
xchg
out
test
push
test
jmp
mov
xor
sub
lret
dec
adc
mov
sub
jl
mov
int3
sbb
aaa
jne
in
add
and
dec
roll
pop
sub
mov
dec
pop
test
mov
pop
mov
sub
js
or
leave
cmp
inc
jle
adc
inc
enter
push
je
sti
adc
mov
dec
pop
pop
or
mov
push
lods
jg
js
clc
pop
dec
jbe
repz
frstor
mov
es
jl
stc
xor
xor
cmpsb
iret
repnz
or
fcoms
int
lcall
xlat
pop
pop
sahf
movnti
je
cwtl
popf
cmp
xchg
jp
ret
adc
ret
and
shr
jmp
dec
pop
rcrl
pop
iret
loop
jbe
aad
jo
pop
adc
pushf
xor
push
adc
sarl
or
scas
cmp
les
add
loopne
xchg
das
rcrb
testl
jo
mov
or
sbb
add
add
jo
mov
mov
mov
out
pop
fnclex
or
jge
push
xor
add
test
dec
test
push
inc
cmp
mov
dec
sahf
imul
aaa
aaa
push
push
push
xor
imul
xchg
cmc
lret
cwtl
mov
jne
inc
lods
outsl
dec
dec
sbb
sub
out
cmpsb
cmpl
ja
insl
add
jae
int3
add
pop
pop
psllq
jmp
ret
iret
jl
inc
xor
ljmp
scas
test
mov
add
aas
scas
fdivrs
jae
dec
cmp
mov
mov
jge
lea
adc
sbb
or
es
fidivl
das
dec
pop
sbb
jnp
loop
out
cmp
comiss
popa
sahf
jo
shll
cltd
rcrb
pop
in
in
mov
ljmp
add
lahf
dec
or
sahf
mov
and
cwtl
pop
or
ja
and
jnp
imul
push
cmc
aaa
push
cwtl
ljmp
mov
mov
pop
fs
sbb
jne
sbb
mov
xor
sbb
subl
hlt
cmp
xchg
pusha
xor
sbb
aas
pop
in
pop
inc
mov
rcrl
inc
ficomps
pop
ja
adc
mov
fcoml
xor
sub
test
roll
test
sub
fxtract
add
inc
lods
into
add
fdivp
repz
jg
lret
scas
bound
dec
xchg
in
movsl
mov
xchg
cmpb
mov
jge
pop
and
pusha
fisttps
call
inc
xchg
call
das
adc
adc
imul
pop
pop
xor
and
mov
add
jle
lret
int
nop
loop
scas
aad
push
movsl
cmp
jnp
add
in
pop
push
xor
push
pop
push
mov
pop
roll
ja
or
int
pop
out
orl
orb
roll
lret
imul
loop
jecxz
sbb
push
cwtl
scas
adc
mov
push
push
ret
data16
test
pop
enter
cld
mov
add
in
bound
cmp
imul
aaa
js
push
jp
mov
add
lcall
jo
jle
xchg
ss
pop
add
das
dec
imul
cmp
in
imul
sub
enter
daa
mov
and
and
inc
add
repnz
out
jg
xchg
ds
in
push
fdivrl
sbb
jno
pop
mov
push
sub
jns
jb
dec
push
out
lahf
sbb
fimuls
inc
das
adc
sub
jl
add
movsb
lea
fists
imul
xor
in
mov
mov
mov
jo
scas
setge
pop
xchg
adc
or
adcb
sub
sbb
sub
scas
jge
shlb
ret
loope
xchg
xchg
fwait
loop
in
mov
lds
je
adc
loop
dec
add
sbb
sub
mov
cmpl
and
nop
inc
push
imul
or
xor
cmc
aad
icebp
adc
stos
ret
lret
xor
sub
jbe
add
dec
cmpsb
jns
ret
or
das
scas
adc
cs
lret
mov
pop
scas
push
and
movsb
fdivr
sarb
rep
popf
out
leave
mov
cs
sub
xor
cs
xchg
ja
aad
fisttpl
sti
dec
imull
daa
adc
pop
pop
int
into
cmp
fld
lods
sub
fstpt
adc
loope
mov
lcall
ljmp
lret
cs
ljmp
push
enter
push
push
push
and
inc
mov
inc
imul
jl
sub
fsubrl
inc
and
mov
jno
sarl
outsb
popa
jmp
sbb
jle
mov
jae
mov
test
pusha
and
cmp
outsl
pop
jb
clc
lds
out
push
pop
in
mov
insb
pop
or
or
arpl
push
das
dec
add
loop
aas
or
jbe
inc
xchg
mov
jae
pop
dec
or
test
test
push
mulb
xchg
outsb
out
out
push
bound
js
out
push
inc
and
add
ret
lea
sub
sbb
call
add
in
xor
pop
cmp
lahf
sbb
push
ljmp
lcall
mov
mov
xchg
repz
mov
push
aaa
test
orb
imul
pop
fmull
mov
stos
and
cs
in
rorb
mov
fidivrs
imul
or
lods
cwtl
test
cli
push
mov
popf
data16
fcmovbe
popf
and
xlat
in
push
aad
push
imul
cmc
dec
mov
mov
ret
mov
mov
les
mov
lahf
int3
dec
leave
stos
out
clc
enter
cli
decl
sahf
subb
push
adcb
mov
aas
cmpsl
mov
mov
into
cmp
shrd
pop
xchg
repz
in
outsl
sar
stc
fistl
ja
jmp
mov
adc
test
fmul
xor
mov
shl
sbb
jne
and
add
pop
mov
jo
sub
or
nop
icebp
inc
mov
xchg
ja
pop
cmp
sub
xchg
bound
mov
pop
out
movsl
js
xchg
fisttps
jp
test
mov
lods
mov
nop
les
cmp
adcl
stos
cmpb
mov
adc
mov
nop
mov
sahf
mov
repz
adc
lea
inc
ret
jne
out
or
mov
icebp
sbb
loopne
xchg
push
inc
repz
adc
rcll
and
push
push
jp
mov
jl
adc
insb
in
cmc
sbb
jl
pop
pop
push
mov
mov
jo
std
inc
pop
cmpsl
and
push
adc
mov
roll
jb
mov
fists
mov
test
repz
arpl
jnp
dec
bound
mov
mov
daa
jb
xchg
inc
mov
jge
imul
xchg
mov
mov
pop
int
test
jp
fwait
push
xchg
adc
mov
movsl
xor
xor
lds
pop
sti
test
incb
push
push
pop
xchg
out
test
xchg
pop
sbb
push
lds
ret
cli
fsubrl
orl
or
lea
in
fmul
sbb
adc
push
pusha
push
jb
loop
ds
mov
out
mov
js
arpl
in
adc
shl
xor
aaa
fnsave
imul
les
fidivrl
out
sub
stos
xchg
hlt
jnp
pop
aam
ret
outsl
or
pop
sub
sub
or
lret
adc
arpl
mov
dec
adc
push
add
incb
pop
or
mov
inc
or
mov
inc
inc
cmp
and
dec
jno
add
mov
or
leave
mov
test
data16
repnz
cmp
pop
in
jno
shl
cmp
clc
xchg
lahf
aam
xchg
and
inc
push
jmp
in
data16
leave
fdivrl
loop
add
mov
and
fisttpll
jmp
stos
mov
jne
add
xchg
je
mov
outsb
subl
mov
test
push
or
mov
loope
mov
rcrb
mov
pushf
cmpsl
jl
call
iret
lea
in
adcb
insb
and
cmp
out
xchg
inc
icebp
mov
cmp
lock
fmul
cmp
pop
pop
xchg
and
and
push
cmp
lock
les
subl
cmp
mov
mov
das
jle
sub
in
cmpsl
imul
fsin
add
aam
dec
mov
out
mov
xchg
mov
xchg
sub
sub
xchg
fmull
popf
fst
clc
mov
pop
lea
xchg
mov
or
enter
iret
sub
out
add
adc
adc
enter
xchg
mov
inc
icebp
sub
fmuls
and
jge
add
repz
test
sbb
mov
cwtl
jge
fisubrl
sahf
push
cmp
fidivrs
mov
push
and
and
adc
ja
sbb
push
rcrl
mov
clc
divl
push
push
sub
popa
rclb
cmp
and
pop
adc
or
lahf
ret
cmp
bswap
cmp
fldcw
pop
pop
adc
xchg
movsb
lods
xor
das
out
pcmpgtw
adc
inc
xchg
pop
aam
imul
icebp
bound
adcb
shll
adc
lods
mov
outsl
mov
xlat
fimull
mov
pop
pusha
xor
dec
mov
sbb
in
in
sbb
mov
jno
jno
sub
insb
dec
xor
in
mov
cli
addr16
icebp
aad
ret
cmp
xchg
mov
popf
cwtl
std
stos
les
shl
jbe
loope
push
xchg
imul
call
mov
mov
or
inc
rcrb
test
out
stc
test
addb
fs
fisttpll
and
push
pop
xor
mov
shr
repnz
xchg
ja
out
inc
push
pop
test
inc
sub
mov
test
fistpll
into
addl
and
adc
rorb
mov
sub
xchg
cli
push
add
lock
and
shl
in
lods
dec
inc
dec
sub
mov
and
fs
sub
dec
in
add
loop
cwtl
lahf
movsl
push
cmp
push
pop
ja
loopne
movsb
into
mov
push
bound
out
dec
lret
mov
addr16
aaa
fbstp
stc
xorl
xor
int
inc
cmp
cmp
jbe
push
data16
icebp
int
es
mov
mov
jmp
pop
xor
mov
aas
movsb
jecxz
adc
ss
cmc
or
outsl
dec
xchg
mov
rolb
sub
jp
and
clc
mov
add
daa
cmp
daa
sbb
in
dec
cmp
dec
mov
inc
aas
jecxz
das
lret
scas
xchg
xor
jo
ret
or
sbb
sub
jmp
jae
cli
dec
jge
inc
inc
sub
xor
xlat
or
sbb
mov
fists
fwait
or
cmp
jo
dec
mov
mov
int3
popa
loope
and
data16
mov
cmpsl
je
nop
ret
jns
aas
pushf
mov
jle
test
mov
pushf
jg
jo
aaa
xchg
xchg
push
rcrb
jo
mov
bound
fldcw
inc
out
cmpsl
pop
int
xor
outsb
pop
insb
or
and
mov
fdivrs
arpl
ret
push
jg
pushf
pop
bound
inc
jb
mov
adc
je
xorb
jmp
mov
daa
mov
mov
inc
ljmp
mov
add
xor
incb
leave
ss
out
pop
or
jmp
or
adc
fsubrs
add
arpl
adc
das
xor
test
ja
mov
loop
jne
js
fstpt
call
pop
cli
notl
jp
xor
clc
lds
mov
push
inc
xchg
dec
js
cld
aas
std
push
xchg
test
gs
mov
ficoms
in
add
mov
stos
pop
dec
lret
xlat
sahf
add
jo
aam
xchg
xchg
mov
xchg
jecxz
mov
movsl
inc
sahf
push
ret
adc
mov
scas
mov
mov
mov
push
dec
xchg
push
dec
xchg
xchg
out
fwait
lock
mov
orl
cmp
mov
push
aad
repz
mov
sahf
lods
dec
push
scas
inc
negb
mov
fdivrs
pop
lods
or
or
mov
sbb
arpl
pop
fadds
negb
push
out
les
lods
inc
jp
loop
cmpl
ret
or
popl
stos
insb
sub
sub
xchg
shlb
mov
mov
arpl
arpl
push
mov
shll
sbb
pusha
fdecstp
cmpsb
push
add
dec
push
mov
xor
cmp
sbb
das
sbb
xchg
fldl
jp
cwtl
dec
aas
in
sbbb
fdivrs
int3
push
fiaddl
mov
addr16
roll
dec
cmp
push
cmpsb
mov
push
xchg
xor
cmp
or
inc
mov
aad
loopne
in
lods
icebp
mov
popa
data16
jl
mov
pop
push
sti
scas
movsl
mov
ljmp
fstps
lea
sub
in
cmp
inc
push
ret
push
insl
jl
sbb
cltd
mov
pop
stc
pop
and
mov
mov
sbb
int3
in
ret
data16
dec
push
sub
mov
push
mov
adc
pop
es
or
adc
pop
dec
movb
jae
ja
and
push
je
test
push
cld
movsb
out
clc
pop
scas
push
in
notb
xlat
pop
scas
mov
cmp
loop
popf
mov
fcomps
push
push
lret
jmp
adc
sub
insb
lret
out
mov
mov
pop
mov
out
and
mov
ljmp
cmpb
pop
test
aad
fs
cltd
pop
dec
mov
scas
loopne
xchg
push
cmp
hlt
je
aaa
push
or
or
cmovne
and
and
push
rcrl
mov
ret
into
dec
cwtl
adc
std
sti
lods
and
cmp
nop
into
push
scas
mulb
mov
hlt
mov
js
sti
out
scas
in
movb
add
icebp
in
sbb
jge
lods
mov
shl
cmpsb
add
bound
xor
adc
cmp
inc
jmp
ret
push
push
adc
sarl
push
adc
ret
mov
dec
or
adc
movb
in
pop
or
sar
stos
add
push
enter
aad
jo
sahf
out
out
lcall
dec
shl
fdivrl
ret
xchg
outsl
aaa
mov
xlat
out
hlt
jbe
mov
pop
push
jo
inc
insb
ss
lea
ficoml
dec
in
cmpsl
or
or
mov
in
jge
movsb
lds
sbb
sbb
inc
push
push
outsb
inc
pop
jno
repz
ret
ds
adc
xchg
dec
jb
shrb
lea
rorl
stos
jmp
lcall
mov
clc
and
jae
out
daa
or
shll
sbb
mov
push
movsb
mov
push
int3
jp
stos
fildll
gs
sbb
fildl
xchg
imul
dec
add
mov
xor
mov
rorl
mov
push
mov
push
enter
test
fadd
jge
or
fiadds
arpl
stc
fildll
push
ljmp
mov
outsl
scas
xchg
leave
xorb
jecxz
inc
jbe
ficoms
lahf
inc
inc
sbb
scas
fwait
push
sub
incl
sbb
rolw
and
add
xor
xchg
push
xorl
shll
sahf
shll
push
adc
mov
cmp
inc
leave
xlat
ja
push
lock
adc
in
outsb
dec
sub
data16
xchg
xchg
pop
and
shrb
leave
mov
out
daa
jae
mov
push
cmp
xlat
notl
std
addr16
mov
lret
imul
cmpb
mov
xorl
and
sub
stos
js
push
les
rclb
cmp
fidivrs
xlat
aaa
cmp
scas
cs
test
mov
adc
xor
sub
loop
movsb
sbb
adc
add
in
stc
mov
sub
mov
nop
sahf
jnp
icebp
xchg
hlt
fxtract
mov
pop
cmp
mov
pop
dec
clc
mov
sub
jmp
loop
mov
xchg
in
stc
movsl
adc
or
jmp
sub
jo
push
adc
or
shll
and
les
xor
call
push
cmp
adc
cltd
push
jne
dec
xchg
aas
daa
out
insb
xchg
mov
push
arpl
int3
pusha
jmp
out
ss
repz
iret
push
lods
dec
lds
inc
popf
or
xchg
jno
adc
rclb
fnstsw
xorl
jle
sub
test
into
ja
lea
inc
jecxz
xchg
fldenv
pop
rcr
inc
dec
xlat
mov
sub
add
nop
mov
cs
push
movsb
shr
mov
mov
popa
and
cmp
arpl
cmpsl
push
and
fisttpl
jnp
mov
jecxz
adc
lahf
lahf
shll
lods
mov
outsb
fiaddl
icebp
add
pop
fidivl
lahf
jmp
cld
fcomip
push
inc
or
mov
pop
flds
out
imul
add
push
in
lahf
jnp
xchg
cld
mov
movb
addl
daa
cld
leave
incb
test
sbb
or
add
mov
mov
add
adc
push
movsb
popf
shll
inc
pusha
push
enter
into
scas
dec
std
insl
pusha
xor
jbe
insb
xchg
xor
push
gs
or
cmpl
xchg
mov
lock
pop
lock
loop
mov
mov
xor
daa
cmp
cltd
dec
add
dec
cld
fwait
pop
jl
inc
pop
mov
insl
mov
pop
stos
into
pop
adc
aad
or
sub
xor
imull
push
daa
sbb
xlat
in
mov
cmp
ret
sahf
daa
add
stos
cwtl
jge
xchg
or
jmp
jge
mov
pop
mov
cmp
mov
pop
cmc
ret
or
insl
dec
test
icebp
xlat
hlt
pop
hlt
push
fsubrs
orb
push
cmpsb
les
out
test
test
out
pop
int3
subb
das
inc
stc
mov
xor
in
cmc
mov
int3
js
mov
lcall
or
addr16
cmp
and
pop
out
or
nop
addb
pusha
and
cmp
sub
mov
jb
pop
pop
je,pt
in
sarb
pop
xor
cmpsl
notb
aaa
call
mov
or
insb
test
in
sbb
add
mulb
mov
ds
iret
push
or
gs
lahf
push
mov
call
es
stos
scas
push
out
lock
pushf
dec
lcall
js
loopne
sbb
mov
and
mov
jle
shll
cmp
xor
xchg
pop
out
repnz
sbbl
push
mov
lahf
xchg
and
push
pop
mov
mov
data16
mov
cli
mov
cmp
fs
lret
cmp
loope
inc
cli
pop
lods
mov
nop
loop
test
test
shr
negl
push
jbe
out
stc
mov
sub
scas
aas
dec
pop
fldl
stos
dec
ds
inc
mov
jnp
jae
loop
add
bound
daa
xor
cmpsl
pop
add
mov
iret
pop
movsb
push
dec
stc
out
insl
dec
and
aas
test
mov
adcl
mov
xchg
aad
cltd
jge
lods
and
lea
add
dec
repnz
cmpl
out
iret
xchg
mov
fnstcw
dec
mov
out
outsl
int3
imul
jno
rorb
jo
test
jno
loope
jp
cltd
push
jmp
sti
test
xchg
mov
loop
jo
daa
pop
andl
iret
push
jg
lods
mov
mov
xor
pop
add
cmp
push
xchg
loopne
loop
cltd
xchg
sbb
out
or
test
xlat
adc
inc
pushf
pop
je
stc
test
faddl
in
push
cmp
call
imul
xchg
inc
xlat
test
mov
ret
rcll
outsb
pop
jle
outsb
outsl
mov
jge
es
out
out
mov
lock
push
push
out
pusha
sti
es
xchg
fstps
mov
and
adc
dec
pop
ret
out
test
and
push
arpl
shll
scas
mov
add
mov
je
shl
hlt
dec
mov
mov
call
pop
loope
or
or
xchg
push
sahf
jbe
jns
add
jns
fistps
lock
xchg
push
xor
and
fwait
and
push
loopne
daa
movsb
adc
lds
gs
das
adc
sub
or
insl
jnp
lods
and
add
rcll
stc
mov
inc
xchg
push
orb
sbb
lret
mov
fldenv
in
or
jns
sbb
sahf
cmp
dec
ja
push
lock
fdiv
adc
popf
adc
popf
cmpsl
mov
and
and
jnp
fcmovnbe
lock
mov
insb
sub
mov
enter
add
inc
daa
sub
sbb
pop
ret
sub
fs
mov
mov
sbb
cmpsb
jge
clc
cli
mov
inc
mov
rcl
and
sbb
and
inc
je
outsb
mov
sub
sub
xor
cmpsb
jb
icebp
addr16
in
push
jbe
ret
push
sbb
faddp
shl
xchg
mov
test
lcall
fcompl
push
iret
pop
lea
pushf
dec
sub
aas
stc
sub
push
cmpsb
jp
lods
adc
mov
sbb
in
pop
dec
shll
mov
dec
or
sub
mov
add
sbb
cmp
and
push
movsl
test
lea
xchg
js
stos
cmc
mov
xor
mov
mov
mov
mov
stos
jge
inc
sub
sbb
mov
test
pop
lods
inc
into
cmp
push
and
mov
cmp
fisttpl
out
xchg
jne
adc
scas
or
xchg
push
or
and
aas
in
inc
outsb
shlb
dec
mov
xchg
lods
imul
dec
mov
jle
sbb
xchg
repnz
sahf
and
lods
mov
gs
jle
outsb
pop
xchg
mov
mov
pop
mov
lds
aas
push
test
push
pop
mov
cmp
lret
in
das
mov
mov
or
lret
and
cmpsb
clc
inc
lock
aam
rorl
sahf
mov
andb
jbe
xlat
mov
pop
adc
mov
inc
cwtl
mov
jb
pop
sbb
lods
test
bound
outsb
jp,pn
cmp
mov
hlt
mov
je
jnp
scas
mov
cmc
inc
push
adc
stos
cltd
int3
jecxz
loope
pop
cld
xchg
push
ss
cmpsb
add
sub
es
mov
shr
xchg
enter
xchg
adc
icebp
rorb
insb
sahf
icebp
or
cmpsb
adc
sub
pushf
lcall
add
out
inc
je
xor
leave
adc
add
ss
and
xor
mov
lock
aas
inc
scas
xchg
adc
sbb
cmpsb
mov
iret
mov
lock
sbb
shll
and
and
call
push
lret
mov
inc
ss
rclb
inc
aad
lds
lods
into
bnd
push
mov
shr
pop
push
iret
and
test
inc
aad
inc
cmc
in
jge
pop
pop
xchg
icebp
out
adc
inc
sub
dec
into
push
inc
lods
repnz
fucompp
xchg
nop
lea
stos
sbb
mov
dec
call
sbb
aas
call
pop
mov
ret
pop
jne
push
push
pop
xchg
ror
cmpsb
xchg
mov
push
push
insl
leave
jno
adc
pop
push
int
or
adc
aaa
or
xchg
pop
icebp
inc
add
mov
in
call
adc
scas
adcl
adc
jae
es
fdivl
data16
in
inc
pop
mov
push
hlt
aad
sbb
mov
inc
jg
sbb
bound
mov
pop
jb
fnsave
or
in
pop
das
gs
push
data16
out
lret
push
inc
push
jb
inc
pop
mov
fwait
inc
xor
xor
adc
sub
cmp
mov
jns
xor
mov
dec
call
cs
xor
or
sbb
out
lret
and
std
jmp
sarl
add
lds
jecxz
in
inc
and
mov
ss
cmp
xchg
jg
imul
or
push
pop
add
mov
in
jae
adc
push
mov
jecxz
jmp
sahf
or
xchg
add
push
pop
cmpsl
xor
insb
lods
xlat
inc
mov
fwait
insb
fwait
mov
out
mov
mov
mov
mov
test
mov
fnsave
cmp
xchg
jnp
lret
popa
stos
push
xchg
jbe
jne
inc
popf
or
or
cmpsb
pop
roll
icebp
pop
jg
jae
imul
rcrb
cmp
xor
adcl
out
mov
insb
mov
leave
lret
enter
repnz
rcrb
movsb
push
mov
cmp
in
mov
mov
lds
ljmp
bound
pop
mov
xlat
in
repz
mov
push
cmpsl
lahf
and
icebp
push
aas
xchg
mov
cld
lea
in
push
dec
enter
push
outsl
loopne
add
sub
or
fwait
push
gs
in
xchg
mov
enter
dec
add
pop
scas
dec
sti
jnp
int3
sbb
test
xchg
jb
fs
nop
xchg
mull
xchg
mov
adcb
add
jmp
js
imul
jp
xchg
rol
xor
pushf
repz
stos
dec
push
mov
jge
sub
sbb
out
ljmp
adc
cs
test
push
push
push
std
andb
add
xlat
outsl
jmp
jnp
cmpsl
mov
cmp
loop
mov
insb
gs
cmp
clc
cmpsb
mov
fimuls
outsb
arpl
push
test
jnp
mov
mov
subl
pop
stos
mov
pop
cli
nop
mov
dec
sbb
stos
or
mov
mov
jbe
pop
sub
push
aam
fs
and
das
xchg
mov
std
fadds
bound
pop
ficoms
aad
subl
int
and
dec
dec
or
mov
hlt
ljmp
imul
outsl
cmp
pop
mov
adc
inc
adc
xchg
imul
movsl
push
shl
jl
adc
pushf
mov
or
stc
adc
jne
pusha
jbe
fs
hlt
cli
mov
adc
xchg
das
out
inc
jbe
enter
push
pop
push
bound
mov
sub
int3
cmp
push
xchg
xchg
inc
fwait
rol
inc
inc
xchg
ljmp
fsts
stc
adc
in
mov
add
xchg
jge
std
sbb
adc
push
je
je
sahf
insl
jp
in
lods
shrl
shlb
pop
pop
add
mov
sbb
ret
add
pushf
cmpsb
iret
jl
mov
inc
dec
data16
sar
pop
fcmove
hlt
int
ret
sub
in
pop
loopne
jl
call
cmp
sbb
mov
sbb
inc
mov
mov
cmp
sub
xchg
mov
cs
loopne
int
xchg
pop
cmp
push
out
push
sbb
jb
mov
and
ficompl
cmpsl
fidivl
gs
mov
ja
add
adc
jl
insb
loop
inc
sahf
faddl
test
cmp
sahf
adc
fstl
xor
aaa
dec
push
lock
sti
jl
fcoms
jae
push
out
arpl
je
gs
shrb
stc
xor
aas
mov
adc
insb
nop
sub
add
shll
mov
jbe
xor
dec
sbb
mov
xor
jl
insb
notl
cmp
xor
mov
xor
aas
jmp
stc
and
cmp
add
aad
mov
xor
push
dec
or
mov
xchg
shr
and
fadds
inc
mov
adc
jge
mov
ret
inc
dec
jns
pop
adc
or
mov
adc
outsl
fstl
mov
mov
adc
add
jb
nop
shlb
and
aas
push
xchg
pop
cld
or
stos
or
fisubrs
add
and
xchg
mov
loopne
enter
and
cmp
inc
jle
jmp
dec
fistps
or
es
sbb
mov
inc
jbe
movsl
or
inc
cmp
push
bound
and
push
xor
sbb
sub
imul
in
and
jg
add
xchg
cmp
or
pop
mov
enter
sbb
outsb
adc
shrl
cmpsb
lock
inc
ds
cld
inc
dec
mov
mov
sub
mov
or
icebp
mov
xchg
cmpsl
lock
ds
sti
addb
add
adc
mov
cmp
dec
push
and
push
daa
xchg
pop
adc
adc
gs
ret
adc
insb
pop
sub
push
popa
lcall
sub
mov
cmpsb
mov
cmp
and
pop
popf
int3
cltd
adc
pop
mov
pop
outsb
scas
mov
cld
push
xchg
stos
jb
inc
loope
push
cmpsl
cld
add
pop
lock
out
dec
cmp
cld
daa
js
dec
test
scas
icebp
mov
leave
push
sarl
cmp
movsb
mov
adc
sbb
jo
sbb
sub
cmp
mov
pop
xor
in
add
mov
jne
adc
xchg
inc
cmp
mov
pop
push
xor
jae
in
dec
mov
arpl
inc
pop
icebp
mov
shl
sub
adc
test
rclb
adcb
xlat
fcomps
lret
dec
int3
daa
pop
xor
cmc
dec
mov
lods
sahf
cmp
pop
and
cwtl
jne
mov
out
mov
popa
std
sahf
sbb
xor
inc
push
jle
lock
lahf
mov
pop
bound
adc
add
inc
push
lods
into
test
and
filds
into
push
test
dec
push
lods
sub
xchg
mov
loopne
xchg
ljmp
pop
sub
ds
push
xor
jnp
mov
dec
mov
aaa
int3
push
jno
lret
loope
jmp
pop
iret
jle
movsb
mov
popa
test
mov
mov
pop
out
out
cmc
inc
mov
jecxz
cmp
xchg
scas
pushf
dec
sbb
inc
jnp
leave
stos
cld
mov
imul
sbb
mov
cmpb
xchg
xchg
mov
stos
jns
clc
and
cmpsb
scas
in
inc
das
xor
test
push
mov
ds
cmp
hlt
add
int
ja
or
add
inc
pop
mov
lods
adc
in
fistpll
mov
lods
xchg
std
jmp
ds
mov
jle
les
ja
test
mov
mov
lret
mov
mov
incl
push
lods
ret
mov
bound
shr
shrb
roll
sbb
mov
sbb
push
fldcw
ja
pop
inc
into
and
xchg
mov
jae
pop
out
fwait
aam
fidivrs
mov
jge
lahf
pop
pop
pop
hlt
gs
roll
ds
ficoms
xchg
mov
shrb
and
push
jg
xchg
loop
add
and
adc
dec
xchg
inc
sbb
pop
addr16
iret
pusha
or
outsb
movsb
jb
jle
adc
loope
lock
jno
repz
pop
je
adc
lds
clc
fwait
mov
in
jle
pop
pop
sub
stc
cmp
cmpl
dec
fistps
push
and
or
sub
mov
push
cli
in
in
out
mov
aaa
fidivrs
adc
mov
je
imull
mov
fdivs
fs
cmp
or
sub
lcall
ja
ret
pop
and
sub
or
aad
xchg
push
mov
add
std
rorl
aaa
int
test
xchg
xchg
scas
inc
jns
xchg
cs
or
clc
pop
pop
repz
push
pop
jecxz
or
cmpsb
sbb
sub
mov
jae
adc
jmp
test
or
into
stc
aas
jge
imul
test
or
gs
lods
sbb
pop
pop
push
ljmp
dec
iret
stos
aad
imul
loope
xchg
add
sub
fdivl
fstpl
or
pop
imul
and
jmp
dec
sub
std
scas
ret
mov
sahf
xchg
cs
inc
xor
pop
inc
leave
test
sub
in
push
icebp
mov
cmp
inc
outsb
push
or
jno
push
add
push
mov
sti
test
incl
lea
scas
cwtl
into
pushf
add
xor
mov
adc
insl
pop
sbb
pop
mov
cs
push
in
das
xlat
in
and
mov
sti
mov
out
or
and
add
sub
xchg
insb
aad
push
or
sbb
adc
fwait
and
aam
mov
cmp
mov
cmp
adc
push
xchg
mov
add
outsl
loop
xor
jnp
xlat
mov
mov
xor
imul
rclb
sti
outsb
mov
adc
mov
lds
sarl
push
sub
adc
movsb
adc
shll
rclb
aas
mov
aam
dec
test
insl
out
dec
leave
call
xor
xor
or
test
pop
scas
jmp
jmp
xchg
in
sub
mov
mov
jb
pop
mov
push
lret
hlt
adc
and
jne
enter
jo
call
das
mov
adc
mov
jo
add
lret
rcll
cli
loop
inc
pop
jo
jmp
pushf
mov
mov
mov
mov
push
xchg
sti
hlt
ja
lock
cmp
push
push
push
loope
test
popf
psubusw
loopne
lahf
out
ret
push
pop
outsl
mov
xlat
push
nop
loop
jno
addr16
test
popf
test
push
lods
mov
sub
gs
xlat
adc
jno
mov
scas
ja
sub
fistps
pop
add
clc
mov
sarl
mov
mov
int3
inc
test
or
loopne
or
or
sahf
lret
shll
cmp
push
xchg
decl
xchg
cli
out
cltd
mov
inc
aaa
jb
enter
js
aad
pop
push
aaa
add
adc
xchg
je
lret
outsb
cmp
jbe,pn
inc
cmc
add
inc
imul
cmc
insb
xlat
pusha
insb
sub
std
repnz
mov
fwait
xor
ret
mov
mov
fiadds
imul
dec
mov
imul
decl
stos
mov
xchg
nop
inc
jno
fimuls
scas
push
mov
or
lahf
dec
push
jmp
pop
adc
lods
mov
jno
jno
add
nop
je
pop
or
aad
je
cmp
int
imul
mov
in
xchg
mov
icebp
pop
or
int
mov
clc
or
sub
and
pop
out
mov
pusha
mov
in
jns
mov
mov
cmp
rep
repnz
imul
dec
sub
aas
movsl
cld
in
in
push
and
in
std
fmuls
test
inc
aam
push
or
inc
mov
in
aam
xchg
clts
push
add
insl
sub
js
lret
cwtl
and
pop
push
xor
clc
outsb
sbb
sbb
sbb
mov
adc
and
pop
and
push
sub
add
stos
push
les
jp
xor
in
cli
movzbl
cmp
in
repz
xor
cmp
pop
pop
notb
in
movsb
push
sbb
fnsave
test
stos
push
cmp
nop
data16
das
les
lock
mov
inc
jno
inc
cmp
inc
call
aam
aas
sbb
mov
mov
push
call
mov
xchg
mov
popa
sub
sbb
and
xchg
and
fwait
test
sbb
xor
mov
notb
dec
mov
jbe
inc
xor
testl
mov
xor
nop
cld
jecxz
adc
iret
cs
xchg
lods
aas
popa
adc
fmul
outsl
jp
repnz
xor
mov
test
daa
out
lds
repnz
sbb
fmul
sbb
mov
adc
nop
mov
mov
fs
aaa
jae
sahf
aam
out
push
daa
jb
xchg
pop
sbb
jp
adc
inc
divb
mov
pop
mov
cs
test
xchg
sbb
pop
jae
xchg
jbe
stc
inc
inc
fiadds
cld
xor
aas
in
bound
movsb
inc
call
cmp
loope
dec
xchg
push
mov
add
jbe
push
nop
mov
stc
shlb
ljmp
imul
insl
and
fdivrs
xchg
in
lea
mov
test
pop
and
out
negb
jo
and
shrl
add
sub
rorb
xchg
cli
je
cmpsb
in
js
sub
inc
push
dec
in
mov
fs
shufps
pusha
fwait
pusha
xchg
add
inc
mov
sub
sbb
bswap
adc
pop
ret
imul
inc
adc
outsl
pop
mov
xlat
iret
sbb
imul
mov
jo
cs
or
rorb
sub
xchg
repz
mov
cmp
lock
mov
sar
lret
jmp
hlt
push
fidivl
xchg
xor
jns
loope
and
add
pop
mov
inc
mov
dec
dec
sbb
pop
mov
jo
or
xor
xchg
xor
adc
add
iret
mov
jb
lods
dec
sbb
or
cwtl
aas
push
outsb
push
and
ja
cwtl
xchg
jne
cmc
fs
stc
lods
iret
mov
xchg
sbb
mov
adc
dec
cmpsb
adc
fnstenv
dec
xchg
pop
inc
mov
leave
mov
jmp
inc
mov
lods
push
sahf
repnz
push
cmp
add
sbb
lock
mov
imull
dec
ret
cmp
jbe
mov
ss
and
push
lea
jnp
cmp
xchg
sti
jae
sahf
adc
adc
in
adc
data16
jge
ret
int
jb
pop
ljmp
xchg
lock
inc
sahf
fldcw
dec
dec
jb
fldenv
lock
cltd
movsb
int
imul
ficomps
sub
adc
add
cltd
ret
je
push
dec
mov
mov
jnp
fisubs
jl
cltd
mov
jp
scas
lret
adc
inc
pop
adc
sbb
ljmp
repz
adc
adc
pop
sub
loopne
push
scas
movsb
jnp
push
pop
popaw
insl
push
pop
inc
push
stos
cwtl
loope
cmp
outsl
lret
dec
push
das
fbld
mov
rcl
insb
cltd
inc
or
xor
sti
subps
aad
lods
lock
dec
sahf
adc
aaa
aaa
mov
sub
and
xchg
xchg
jo
les
shll
dec
movsl
jnp
mov
push
adc
loope
out
rcll
sub
cmpb
fcmovne
repnz
jbe
repz
cmp
jmp
sub
pop
outsl
mov
pop
les
inc
jl
adc
inc
and
xchg
cmp
cltd
pop
bound
xor
sbb
inc
sub
inc
mov
mov
subl
lcall
je
imul
fdivr
pop
jne
scas
push
je
popa
add
arpl
mov
int3
adc
or
jge
lea
xchg
int3
mov
js
in
sbb
xchg
enter
dec
inc
imul
fmull
or
imul
in
sub
imul
jecxz
aaa
add
sbb
push
rolb
aam
pop
dec
fidivrs
cmp
iret
sbb
pop
dec
mov
in
ds
mov
movl
out
push
or
mov
mov
pusha
or
repnz
test
jnp
repnz
dec
jb
pop
sbb
popa
mov
orb
jnp
cmpsl
push
mov
daa
lock
sbbl
cmp
add
sbb
fiaddl
out
cwtl
pop
xor
sarl
repz
push
pop
jl
repnz
xchg
in
cmpsl
pop
aas
jge
sbb
outsl
cmc
daa
les
xchg
fcomps
dec
or
sub
pop
dec
hlt
int3
inc
push
sub
jno
sbb
xchg
inc
cli
mov
dec
int
cmpsl
pusha
xlat
mov
into
mov
xor
xchg
lret
sub
cmp
fs
and
push
dec
bound
fistps
mov
and
mov
mov
xor
scas
add
push
or
fcmovu
lea
insb
mov
je
ljmp
add
mov
xor
inc
add
jmp
cmp
push
dec
xchg
mov
dec
mov
xor
je
cmp
inc
jecxz
stos
xchg
mov
dec
add
xchg
cmp
mov
ds
mov
into
cmp
mov
and
sbb
dec
and
fnstsw
sub
sub
lds
push
dec
loope
xchg
mov
or
popa
lcall
cmp
jbe
adc
cmpsb
cmc
scas
jne
sub
gs
mov
push
and
in
xchg
xchg
repnz
push
repz
ss
push
lahf
shrl
cs
xchg
jecxz
pop
pop
sbb
mov
inc
ljmp
idivl
mov
fldl
sub
cwtl
xlat
and
fstps
in
nop
bound
mov
arpl
jecxz
mov
mov
pushf
mov
out
roll
mov
call
inc
mov
adc
sub
lock
xor
xchg
ficomps
xor
jmp
ret
xor
rcrb
test
push
xor
fiadds
loope
cld
aam
jo
jo
dec
xlat
popf
mov
xor
sbb
xchg
loop
jae
inc
sub
test
loop
into
and
pop
lock
sti
cs
sahf
xchg
mov
int
test
lret
adc
push
pop
dec
sbb
fs
cmp
mov
lcall
js
fwait
and
test
dec
pop
sub
sahf
or
movnti
mov
into
int
cmp
sbb
outsl
inc
xchg
fwait
scas
clc
and
xlat
lea
mov
mov
sbb
movsl
mov
cmp
xchg
push
dec
or
or
stos
adc
testb
xor
add
dec
movsb
decb
fwait
inc
or
jp
js
fdiv
fimull
mov
pusha
xlat
ficompl
push
cmp
mov
push
imul
sti
mov
and
cld
mov
popa
fcmovu
sbb
loopne
int
ljmp
cmp
xor
inc
sbb
mov
ljmp
mov
out
and
insl
lods
cmpsb
scas
in
mov
in
sbb
xchg
xchg
ret
arpl
pop
jbe
lcall
cmp
inc
je
pusha
lret
push
pop
lret
not
ret
add
push
inc
sub
push
inc
sub
ds
aas
mov
cld
xor
rcll
adc
mov
mov
pop
xchg
das
pop
data16
sti
lahf
addb
jp
adcl
sbb
cmp
inc
int3
inc
inc
xchg
icebp
sbb
pop
and
aad
fxch
loop
or
lods
arpl
les
je
fadd
or
add
xor
lods
mov
in
loopne
cmp
push
lea
push
xchg
add
loope
xchg
js
mov
loopne
loop
movsl
inc
mov
andw
xchg
aas
mov
dec
and
cmp
repnz
stc
pop
scas
and
xchg
adc
pop
jmp
cmp
adc
test
mov
jbe
mov
jecxz
mov
fsubl
inc
dec
pop
loopne
dec
jb
cmp
popf
loope
or
std
mov
xchg
pop
lds
push
add
clc
xchg
cwtl
movsb
mov
das
fwait
daa
scas
mov
push
les
ret
xchg
fsubrs
sub
dec
pop
adc
daa
mov
push
mov
test
fcompl
sub
jne
adc
gs
call
sub
add
jb
rcrl
scas
mov
mov
andl
push
out
xchg
or
and
xchg
sbb
ret
repz
and
lahf
hlt
fs
test
sahf
and
pop
mov
push
outsl
and
pop
adc
cmp
gs
mov
push
rclb
pop
adc
out
cmp
inc
pop
push
sub
loope
mov
cmp
bound
int3
mov
jbe
stos
fs
int
cltd
push
cld
rclb
fmull
inc
stos
divb
out
dec
sub
pop
or
add
xchg
stc
outsl
xchg
ret
ss
push
negb
inc
xor
pop
push
int
stos
sbb
xchg
xchg
push
in
pop
repnz
add
les
ret
xchg
in
mov
sub
mov
pop
sub
cmpsb
cwtl
out
arpl
pop
rclb
popf
orb
incl
mov
mov
stos
xor
adc
ja
cmp
movsb
test
sahf
xor
adc
pop
adc
lods
dec
movl
mov
mov
or
frstor
inc
jl
sbb
cmp
xor
std
or
sub
pop
into
in
xchg
jns
mov
lcall
pop
mov
jecxz
jmp
cmpsb
sbb
xchg
loop
cmp
sbb
mov
nop
and
jo
out
sub
adc
test
mov
js
mov
xlat
popf
xchg
jne
into
jbe
mov
push
stos
imul
das
mov
jb
cmp
rcrb
addl
call
sub
mov
adc
lods
xchg
sti
jg
cli
shll
lret
jecxz
sbb
lods
adcb
ljmp
mov
mov
push
or
sub
roll
test
or
inc
pop
sti
fisubrl
adc
and
xor
insl
decl
sub
push
iret
xorb
lahf
fistpll
fiadds
jae
jl
enter
cmp
inc
and
push
lods
xor
js
cmp
mov
lret
movsl
ja
ljmp
into
push
popa
or
int3
pop
cs
mov
cmp
in
out
adc
jnp
ds
sahf
sub
xor
xor
sbb
mov
inc
mov
lds
sub
lret
daa
std
jge
enter
pop
add
cmpsb
outsb
out
decl
push
repz
dec
pop
xor
int3
aas
jo
xchg
mov
xor
test
iret
out
push
cltd
dec
cld
push
mov
insl
aad
sbb
cwtl
mov
or
mov
ss
mov
push
xor
pop
adc
ror
mov
sbb
mov
ds
int
add
movsl
or
imul
sbb
sbb
mov
sub
lock
adc
sub
shlb
mov
sti
dec
loopne
imul
cmp
rcll
push
in
sahf
mov
and
adc
popa
cmp
mov
cmc
iret
repz
inc
sub
outsl
xchg
dec
out
jg
jmp
je
cmp
mov
stos
or
push
and
pop
fwait
xchg
pop
adc
rorb
repnz
inc
subb
ljmp
fbld
mov
dec
in
cltd
aas
or
mov
pop
fwait
xchg
pop
and
add
cmp
push
ret
sub
cmp
mov
test
out
add
movsl
icebp
pop
enter
ja
cmp
xor
dec
ja
mov
test
movsl
jle
mov
dec
inc
loopne
pop
cld
stos
repnz
sbb
xchg
or
clc
add
pop
in
push
or
sub
iret
push
sahf
enter
out
pop
push
jmp
jo
hlt
push
unpcklps
int
rcr
mov
add
mov
jge
test
xor
xchg
sbb
int3
mov
data16
cmp
or
dec
add
xchg
popf
jnp
rclb
hlt
lods
jle
lret
sarb
sub
or
dec
or
addr16
add
pop
loope
fwait
mov
mov
loope
loop
add
or
je
adc
mov
popf
sbb
sub
addb
mov
stos
andb
pop
sbb
aam
push
sbb
push
fistpll
aaa
lock
sbb
adc
pushf
sbb
les
std
mov
or
aaa
fs
repnz
lgs
dec
test
xchg
mov
jne
xchg
push
in
loop
ret
subl
fdivr
sbb
adcl
jb
xchg
push
fbstp
jno
das
lods
test
jne
shrl
dec
mov
and
dec
sbb
inc
jle
into
inc
in
dec
lret
insl
dec
imul
stos
lock
dec
adc
jg
push
push
pop
mov
sub
outsl
imul
bnd
arpl
clc
push
leave
adc
in
jg
test
fwait
lods
adc
pop
int3
and
jns
mov
mov
ret
inc
mov
pop
and
dec
ljmp
or
sbb
push
or
jae
popf
test
dec
xchg
jmp
mov
lcall
jno
aaa
fadd
pop
andl
mov
xor
push
daa
inc
pop
dec
or
xchg
lret
xchg
adc
mov
mov
mov
pushf
aad
outsb
pushf
popf
jl
in
adc
test
jl
xchg
jecxz
jecxz
xor
popa
pop
mov
mov
lea
adc
cmpsb
fiadds
cmp
test
jns
cmp
daa
lcall
movsb
push
cmp
and
lods
jae
adc
or
shll
mov
repz
cmp
in
jbe
pop
imul
mov
push
sub
add
rcrb
pop
lret
sbb
cltd
rclb
enter
push
and
call
pop
dec
inc
or
rclb
cmpsb
call
scas
cld
dec
jg
outsl
or
jnp
icebp
scas
mov
dec
sti
daa
pop
mov
lds
sub
call
pop
pop
and
xor
outsl
xchg
stos
inc
jno,pn
xchg
in
xchg
or
add
jecxz
sbb
aaa
jl
or
mov
adc
dec
sbb
stc
push
xor
push
mov
mov
test
or
loopne
jmp
dec
jp
fldt
lods
loope
outsl
jnp
daa
fsubrs
sarl
mov
or
push
fs
dec
mov
aad
enter
pop
std
or
mov
stc
hlt
test
lahf
lcall
call
es
sub
push
mov
sahf
adc
les
pop
xor
lods
clc
lock
incl
test
xchg
mov
js
jno
cmp
push
stos
sbb
and
xor
or
jl
jg
fldl
jae
addr16
dec
cli
loop
out
cli
push
ljmp
push
sub
cmp
test
pop
rorl
pop
arpl
into
mov
mov
notb
lea
pop
inc
movsb
pop
in
and
dec
dec
js
out
mov
xchg
pop
testb
inc
lock
cmc
outsb
cmpb
mov
xor
movsb
sub
imul
cmc
lods
fs
or
fisubrs
sbb
and
add
mov
pop
mov
in
push
push
in
inc
rcll
std
mov
lock
xchg
aas
sbb
sbb
adc
push
pop
gs
or
loope
mov
adc
fcoms
je
int
mov
cmp
mov
cmp
sbb
pop
mov
xchg
out
adc
nop
pop
push
mov
xchg
inc
dec
cmp
mov
xor
sbb
push
or
lret
and
pop
pop
mov
inc
cmp
jp
add
sbb
pop
mov
outsl
lahf
dec
and
cmpsb
pop
rcrb
xchg
daa
inc
pop
shl
cmp
fldcw
iret
cltd
rcrb
int3
push
rcll
cmp
in
pop
sbb
jns
std
mov
inc
lods
xchg
js
inc
or
ud1
and
jns
popa
xor
jge
rcrl
add
stos
adc
add
aad
loope
enter
bound
je
xor
test
out
jecxz
clc
mov
in
aaa
ja
pop
and
pop
lea
cmpl
mov
hlt
outsb
pusha
xchg
pop
cltd
fcoml
lcall
push
mov
sbb
ss
into
pop
add
aam
mov
mov
sbb
adc
daa
in
xor
clc
or
jle
cs
pop
fmull
js
inc
shrb
leave
ljmp
mov
jecxz
push
jae
cmp
daa
arpl
fs
add
test
dec
fnstsw
cmp
add
lods
in
dec
add
jnp
sahf
pop
lods
test
or
jmp
dec
inc
pusha
pusha
push
into
test
or
xor
es
scas
jo
inc
nop
xchg
mov
fmul
dec
sub
adc
mov
cmp
cmp
aad
jns
stc
adc
adc
aam
push
lods
jnp
sbb
ret
aas
and
mov
fimuls
xor
icebp
cmp
jns
xor
push
pop
ret
ja
icebp
cwtl
dec
testb
jmp
arpl
scas
mov
add
dec
sbb
inc
clc
scas
push
mov
jl
lea
je
stc
hlt
inc
sbbb
mov
or
jp
xchg
pop
mov
pop
push
stos
into
mov
lret
jnp
mov
out
out
cli
sbb
sbb
dec
mov
dec
bound
inc
imull
outsb
xchg
fs
jmp
cs
fstpt
mov
pop
mov
in
fldl
cmp
xchg
scas
mov
pop
es
movsb
inc
popa
cmp
sbb
xchg
sbb
out
push
pop
and
xchg
insb
sbb
outsb
mov
jl
roll
loopne
and
pop
push
lock
lods
insb
jo
lea
mov
or
xchg
cmpsl
inc
stos
das
fcmovnbe
mov
cwtl
mov
dec
mov
cmpsl
sarl
adcb
out
push
pop
in
jl
and
mov
shll
sar
aad
pop
sbb
dec
pop
xor
mov
cmp
in
ja
dec
xchg
aam
iret
or
cmp
mov
dec
sbb
xchg
in
push
mov
shl
xlat
inc
push
decb
jne
mov
ljmp
xlat
dec
adc
movsl
adc
xor
test
mov
mov
stos
fldt
xchg
sbb
mov
in
mov
add
sbb
lret
int
pop
jnp
jbe
loope
mov
insl
inc
mov
daa
ret
and
mov
mov
loop
mov
xchg
daa
push
int3
scas
lods
mov
cwtl
lcall
out
mov
or
sbb
sub
pop
pop
mov
divb
mov
inc
jo
mov
andl
in
ret
sub
sub
movb
xchg
jo
cltd
fwait
mov
dec
pop
addr16
enter
lds
jne
aad
push
cmp
movsb
fstps
pop
ja
mov
gs
mov
cmp
or
dec
pop
adc
sahf
jbe
icebp
jg
and
sbb
sub
je
ss
mov
jge
dec
sbb
xor
jp
adc
shll
push
mov
xorl
inc
add
lret
push
inc
pusha
ljmp
pop
pop
jge
sbb
push
jge
jmp
sub
jl
or
enter
inc
test
and
insb
insl
pop
lods
push
pop
mov
xchg
sub
aas
imulb
push
mov
fldl2t
xchg
inc
xor
movsb
push
mov
pop
lods
fadd
dec
pop
fimull
or
adc
je
xor
xchg
push
ljmp
rcr
jle
cltd
dec
imul
out
shrb
mov
fs
lret
push
hlt
popf
or
bound
inc
ja
lret
fs
outsl
adc
out
push
int3
test
mov
push
sub
xor
pusha
fildll
xor
sarb
push
repnz
push
jmp
push
hlt
es
cmp
sub
sahf
inc
mov
or
jecxz
es
addb
int
adc
in
sub
neg
repnz
stos
and
cmp
in
add
pop
pop
xchg
sbb
call
in
data16
leave
inc
sub
push
sti
lock
pop
jae
jmp
pop
sub
jnp
pop
cli
inc
ljmp
mov
data16
adc
pop
push
mov
cs
jmp
inc
sub
pop
jp
add
jg
xor
daa
jno
fisubrl
das
mov
insl
xorb
out
fisttps
mov
pop
movsb
scas
push
push
sbb
sbb
cmpsb
icebp
js
outsb
aas
pop
adcb
xor
out
mov
dec
mov
jnp
cmp
adc
popf
mov
loope
sub
or
ret
unpcklps
daa
xchg
fnstsw
out
xchg
ret
faddp
arpl
idivl
jge
fimull
cwtl
daa
into
das
sub
sub
int3
jo
cwtl
mov
xchg
pop
pop
xor
in
sbb
push
sbb
xor
xchg
jnp
lret
push
in
fwait
push
mov
cmp
mov
cs
jo
adc
movsb
notb
push
insl
andb
jbe
js
mov
mov
pop
xchg
pop
out
aas
cmpl
mov
sub
mov
push
out
test
fs
pop
inc
pop
push
xchg
out
and
xchg
add
jno
add
sbb
jne
inc
imul
mov
test
aas
rorl
rorb
mov
shlb
jbe
mov
inc
dec
das
inc
cli
call
pop
inc
rcll
adcb
fsub
mov
imul
movsb
test
int3
push
mov
lods
dec
jl
fsubrl
shrb
mov
cmp
dec
ret
mov
test
divl
push
test
je
movsb
insb
insb
bound
lret
pop
int
dec
xchg
icebp
jnp
les
iret
mull
enter
sbb
mov
ret
shlb
insl
cs
push
adc
cwtl
mov
inc
outsl
aad
cmpsl
aam
ds
push
mov
mov
lods
jle
pop
push
mov
jb
out
push
push
add
jle
sub
pop
jno
cmp
cmp
fdivl
mov
adc
lods
out
inc
cmp
notl
lods
sub
mov
pushf
sti
mov
pop
aas
imul
mov
or
negb
mov
mov
dec
jo
xor
pushf
repnz
outsl
push
aas
xchg
lods
lahf
inc
roll
adc
cmp
adc
lcall
ficoms
ss
mov
les
cmp
jmp
test
imul
push
fldl2e
fwait
ja
xor
mov
call
rorl
lret
xchg
cmp
rcrl
popa
cli
cmp
loope
pop
aam
les
fistpll
adc
hlt
adc
aad
lock
adc
cmp
push
mov
subb
outsb
icebp
add
in
xor
and
and
inc
mov
stos
sbb
push
or
lret
pop
push
xlat
add
pop
adc
xor
and
xchg
dec
inc
cltd
xor
inc
pop
sti
std
cld
or
adc
dec
shlb
push
lods
push
imul
mov
mov
pop
mov
arpl
sub
mov
xor
adc
js
mov
sti
xor
fisttpl
dec
xchg
test
jbe
fsubs
les
mov
aam
jecxz
jbe
int
sub
lock
jae,pn
test
cmp
cld
fsubs
dec
loop
adc
or
push
sbb
leave
testb
bound
pop
jp
repz
mov
jl
std
fisubl
add
jae
add
mov
testb
add
lret
shl
into
pop
mov
fcoms
xchg
std
repnz
mov
push
int
cmp
and
lret
adc
cmpsb
int
in
mov
or
cmp
mov
es
push
xchg
push
fmuls
imul
scas
jnp
push
mov
xor
lea
jge
imul
mov
dec
lret
xchg
push
sub
push
push
push
xchg
pop
fildl
pop
test
xor
pop
add
mov
lret
inc
jbe
pop
mov
js
out
adc
stos
sti
cmp
sub
gs
and
out
lahf
lret
pop
xchg
sbb
jge
pop
inc
and
pop
inc
hlt
insl
or
pop
pop
or
add
cmc
in
jno
in
jmp
adc
negb
lahf
in
pusha
mulb
add
pop
sub
ds
mov
cwtl
cmp
int3
out
jne
jg
or
sbb
ret
fs
js
in
jmp
fs
aam
inc
and
stos
cmp
push
call
and
adc
dec
inc
sub
sti
or
sub
popf
push
push
push
inc
cld
push
mov
lcall
xchg
mov
sub
in
fwait
cmp
pop
mov
adc
shlb
adc
xor
sub
mov
loop
out
icebp
js
fsts
scas
shr
adc
cmp
jb
dec
icebp
out
adc
insl
inc
das
inc
int3
jge
sub
add
int
or
popa
sarl
jb
add
test
jae
pop
in
ljmpw
arpl
inc
adc
cmp
mov
dec
push
outsl
sub
sub
test
cmp
repnz
inc
inc
mov
mov
stos
jle
mov
int3
loope
jbe
push
add
jns
push
shrl
pop
scas
gs
fdivrl
cli
push
or
push
sub
imul
pop
push
pop
dec
neg
xor
icebp
push
scas
les
repnz
add
stos
popf
lcall
shll
hlt
in
sub
push
dec
jns
push
fistpl
xchg
mov
fidivrs
lret
daa
sbb
xchg
jecxz
jecxz
mov
pop
cli
xor
dec
adc
sub
icebp
and
mov
and
pop
adc
aaa
mov
mov
mov
mov
popf
lret
or
out
ret
kmovw
lods
mov
xchg
fnstenv
inc
or
and
push
inc
push
cld
js
push
es
stos
inc
mov
testl
into
sbb
xorb
stc
movb
cmp
adcb
sbb
mov
sub
jmp
cmp
aaa
sti
sbbl
rorl
in
xchg
lret
mov
jo
cld
xor
fsubrs
mov
lods
fmul
mov
es
jle
mov
pop
sub
test
std
jbe
pop
mov
jae
dec
into
arpl
std
push
or
jbe
mov
dec
scas
inc
cmp
mov
in
arpl
and
push
icebp
sbb
pop
sub
sbb
push
push
xadd
push
sete
sub
icebp
lret
sub
sahf
leave
cmp
adc
mov
repnz
dec
pop
xor
push
loope,pn
jae
cmc
ds
cmp
lds
dec
pop
or
icebp
rolb
cmp
out
and
sarl
jp
fisubs
push
jae
push
int
mov
mov
lret
xchg
movsb
in
or
xor
jge
fs
and
movsb
es
push
push
inc
inc
hlt
push
fidivrs
sbb
std
push
mov
data16
push
fdivrl
inc
hlt
popf
adc
movl
addr16
cmp
or
fsubrl
fmulp
fcoml
pop
test
aad
sarb
addr16
jo
fwait
ret
or
in
push
out
sub
fisubrl
xor
scas
jbe
or
sub
mov
test
andl
xor
jl
adc
fs
pusha
sbbb
add
mov
sub
push
out
ret
add
jmp
dec
sbb
enter
jp
dec
jecxz
mov
fistpll
mov
jp
xchg
divb
psubusb
in
jb
sbb
dec
and
or
gs
andb
inc
jg
mov
adc
adc
mov
jb
xchg
dec
data16
jnp
test
pop
mov
lret
popa
adc
mov
into
pop
loopne
mov
js
lods
xchg
pushf
dec
xor
lret
jnp
das
loopne
adc
pop
dec
pop
add
stos
lock
adc
mov
shll
add
xchg
mov
pop
out
sub
stc
out
push
pop
sahf
cmp
pop
sub
int
out
mov
sbb
enterw
jmp
push
mov
frstor
dec
stos
adc
lds
pop
xchg
inc
mov
js
jl
icebp
cli
push
push
aas
mov
adc
xchg
or
in
lds
pop
pop
sbb
mov
js
lea
movsb
jg
and
in
mov
mov
fwait
stc
jne
icebp
and
aad
push
and
sbb
push
movsb
add
inc
sub
inc
pop
popa
push
jecxz
cld
in
cmp
mov
jmp
loopne
push
sbb
mov
jl
out
sbb
popa
testb
mov
mov
mov
mov
mov
jecxz
pop
iret
pop
and
insb
imul
int3
mov
xor
xchg
sbb
leave
movsl
xchg
leave
popf
fs
lret
leave
rclb
xor
adc
sbb
out
xchg
mov
dec
imul
dec
lds
insb
iret
imul
lahf
inc
cmp
test
sbb
out
sub
push
xchg
stos
xchg
cmpl
mov
add
bound
sub
imul
int3
in
sub
inc
push
dec
cmp
and
dec
cli
xchg
cmpl
adc
cmp
cmc
cmp
aaa
shl
jae
iret
sub
pop
mov
fistpl
idiv
mov
nop
mov
or
mov
xchg
jecxz
std
xchg
jmp
adc
out
mov
xchg
xchg
xchg
and
pop
add
xchg
mov
mov
add
xor
or
jg
rcrl
dec
stos
outsl
out
mov
jnp
shl
shll
movsl
inc
xchg
sahf
mov
lods
pop
mov
call
les
imul
or
jb
mov
stos
dec
pop
fiaddl
aam
pushf
lret
icebp
mov
cmp
popf
sbb
dec
je
and
xor
sub
fisttpll
xchg
mov
xor
call
sarb
mov
jns
fldz
rorl
cld
mov
add
adc
dec
jns
iret
scas
add
out
sub
mov
inc
add
test
insl
lock
imul
pop
sbb
outsb
and
jb
sbb
out
fdivrl
or
into
shlb
xchg
pop
inc
dec
cmpsl
not
xlat
mov
push
dec
sub
ljmp
loope
insl
mov
lds
add
sti
mov
in
nop
sbb
movsl
scas
dec
or
lret
cli
rcrl
stos
daa
jb
sub
in
xchg
jge
rclb
mov
or
xchg
mov
mov
out
repnz
mov
xor
inc
and
cmp
inc
pop
pop
cld
xlat
out
add
add
xchg
mov
mov
mov
ja
mov
xchg
jns
fidivrl
cli
ret
fldcw
jne
sub
ja
push
xor
push
sub
xchg
mov
or
test
pop
cmpb
movsb
cli
aad
jb
jo
mov
jmp
das
enter
je
in
or
add
cmp
dec
add
cs
inc
scas
fimull
add
inc
sbb
push
ret
je
push
adc
jecxz
add
mov
int3
arpl
iret
mov
in
rcrl
pusha
dec
aas
dec
jnp
xchg
popf
outsl
outsb
push
fldcw
dec
mulb
loopne
pop
inc
jo
jo
jnp
xlat
xchg
rclb
movsl
test
cmpb
jmp
cli
cmp
icebp
sub
imul
push
mov
fsubr
jmp
mov
int3
push
xchg
pop
add
std
fmull
dec
dec
nop
inc
daa
xchg
dec
pop
xchg
and
insb
xorl
xor
outsl
pop
ljmp
cs
mov
inc
adc
test
test
push
mov
out
fldcw
scas
push
pop
sbb
and
imul
imul
aas
push
out
imul
xchg
fldt
sub
xor
mov
mov
cmpsl
dec
jecxz
mov
jae
push
dec
jno
or
adc
popa
push
xor
inc
out
mov
scas
sbb
mov
inc
fwait
mov
xchg
pop
pop
jp
or
insl
out
int3
or
xor
or
dec
xor
mov
xor
out
jb
test
loop
mov
in
popa
in
mov
icebp
mov
les
dec
aad
jns
dec
or
mov
sti
xor
xor
jae
jno
int3
jmp
and
cli
and
sahf
jo
push
int3
mov
jl
sarl
sbb
cmc
push
xor
mov
sub
fstpt
lret
add
sbb
popf
mov
and
adc
adc
dec
cld
cld
repnz
mov
pop
das
push
cld
cwtl
out
aas
pop
push
je
loop
pop
lea
into
fists
movl
test
adc
inc
adc
jecxz
xor
push
test
jb
in
cmp
js
adc
push
lret
jl
jne
lahf
sub
add
and
fldl2t
or
ret
dec
jnp
add
test
test
fs
cmp
clc
push
sbbl
jg
int3
push
leave
lea
pop
imul
mov
js
xor
mov
int3
sbb
jo
scas
mov
sbb
loope
push
pop
xchg
adc
xchg
daa
sarb
xchg
test
add
push
push
adc
lahf
mov
idivb
in
mov
fadds
dec
sti
ss
lods
push
in
mov
xor
xchg
aam
jo
cs
ret
fistl
inc
sbbl
mov
adcb
inc
enter
sbb
icebp
or
sbb
test
and
cwtl
fcompl
lods
sbb
xor
hlt
push
push
daa
push
cmp
jbe
adc
mov
dec
rolb
push
xor
in
pop
inc
sbb
push
fstpl
fildl
in
rolb
sbb
pushw
int3
mov
cmp
sub
lret
mov
stos
lret
or
fisttps
addr16
mov
les
inc
push
mov
mov
and
sti
jne
xor
mov
outsb
inc
mov
mov
and
mov
jecxz
pop
jp
sub
jmp
addl
je
call
scas
mov
inc
int3
fs
sbb
xor
test
xor
push
jmp
pop
fyl2xp1
ljmp
mov
mov
adc
push
test
fcmovne
push
pop
movsl
mov
jp
mov
xchg
aaa
lods
add
mov
out
inc
mov
ljmp
pop
dec
xchg
ds
or
fsts
sti
outsl
pop
cmc
cmp
arpl
push
inc
insl
test
in
mov
in
fadds
mov
fs
es
jbe
mov
std
and
int
int
jb
fcomps
sbb
cmpsl
out
call
sub
dec
lds
andb
repnz
mov
or
rcll
ret
sbb
cmc
push
lea
push
nop
sub
outsl
push
in
ss
popa
rcrl
int
repz
clc
jns
sbb
inc
icebp
adc
pop
sbb
cmp
mov
test
jle
jno
and
push
or
mov
push
imul
test
pusha
mov
or
sub
iret
mov
nop
pop
jbe
jle
pushf
test
je
lahf
cmpsb
inc
and
mov
jp
aad
pop
cmp
cmp
cli
jecxz
nop
das
or
adc
mov
xchg
jecxz
in
sahf
inc
ficoml
mov
es
cmpl
add
nop
mov
mov
inc
rcll
cmpsl
not
cmp
fidivl
push
loopne
mov
mov
popa
jp
cs
js
push
jp
inc
add
mov
insb
dec
fbstp
in
mov
xor
lods
in
adc
pop
stc
pop
filds
xor
pop
sub
aas
loopne,pn
shll
loopne
scas
ljmp
insb
rorl
int3
add
cltd
dec
minps
lock
push
jo
dec
xor
jp
mov
pusha
repnz
cmp
je
filds
mov
icebp
mov
lahf
mov
push
gs
jecxz
iret
imul
or
test
stc
outsl
in
pop
inc
rcrl
sub
addr16
out
sar
xchg
jb
xchg
mov
iret
add
aaa
or
mov
pop
popf
data16
xchg
xchg
push
scas
pop
inc
mov
outsb
mov
jmp
jg
jecxz
neg
adc
cmp
adc
mov
jno
mov
xchg
repz
xorl
popa
push
jle
outsb
insl
lret
inc
mov
orl
out
add
push
pop
mov
leave
adc
cmp
insb
xlat
push
ds
jge
jge
xor
repz
inc
repnz
and
inc
hlt
lds
test
push
sarl
pop
rcrb
repnz
out
dec
leave
hlt
mov
icebp
mov
ljmp
xor
das
mov
add
or
out
mov
ret
popa
pusha
cmp
or
xchg
add
pop
xlat
insl
cs
fildll
mov
stos
jg
or
jae
adc
cmp
stos
mov
sbb
icebp
arpl
mov
cmpsl
fcomip
fnclex
rcrl
into
nopl
lods
out
popf
stos
add
ds
mov
xchg
jns
sub
ret
call
fcmovne
sbb
fistps
popa
outsb
lds
xor
sti
pushf
sub
push
pop
or
out
out
dec
out
xchg
push
mov
mov
or
xchg
pop
icebp
out
mov
mov
lods
lds
mov
lcallw
pushf
cmp
xor
test
xor
clc
je
imul
ljmp
dec
outsl
insl
and
pop
and
sub
ret
xchg
adc
adc
or
jl
sti
clc
fimull
push
test
jle
inc
jecxz
and
sbb
pusha
jle
sarl
test
mov
add
mov
popa
mov
dec
stc
pop
or
popf
arpl
adc
jbe
fdiv
sahf
mov
adc
mov
and
push
cmp
imul
jb
sub
fstpl
pop
mov
dec
fcompl
ret
fnstenv
adc
sbb
outsb
push
sub
fiadds
pop
xchg
pop
xchg
mov
jne
es
sub
push
test
imul
stos
dec
xorb
add
mov
sub
jae
clc
mov
testl
push
mov
or
lds
push
cmpsl
enter
pop
movsb
xchg
pop
push
rcll
aaa
lret
scas
xchg
test
test
fs
inc
cld
loop
sahf
sub
cmp
mov
scas
pop
pop
and
push
std
repnz
pushf
sbb
push
xor
or
rorl
out
fdivrs
mov
mov
xchg
and
jp
inc
xchg
shrl
xchg
fnstcw
stos
js
or
xlat
hlt
lret
lods
rep
ret
or
loopne
dec
push
ljmp
mov
jne
loop
dec
iret
insb
or
inc
imul
push
int3
adc
lret
movsl
adc
jge
mov
and
in
push
insl
mov
sbb
gs
sub
xchg
mov
enter
mov
inc
outsb
ja
pop
or
ds
js
sbb
add
adc
je
dec
jp
imul
xchg
cli
add
mov
cmp
push
mov
sbb
adc
aam
mov
sub
mov
or
and
movsb
mov
loopne
rcrb
repz
or
aas
aaa
or
sbb
enter
sahf
sub
fsubl
pop
dec
dec
std
pusha
aad
imull
xor
mov
and
aam
ss
adcl
jno
sbb
adc
pop
adc
aam
xchg
dec
push
sbb
and
das
jmp
adc
mov
jo
add
aaa
xor
jnp
cmp
push
fisubrl
jge
int3
scas
mov
sbb
jecxz
add
test
sub
inc
imul
dec
dec
lret
mov
jmp
mov
dec
arpl
xchg
sbb
sbb
lds
jne
cmp
leave
or
icebp
cli
mov
or
inc
jle
aad
jne
sbb
cltd
leave
lods
inc
psubsb
inc
scas
cwtl
xchg
pop
mov
stos
add
adc
je
mov
mov
stos
lods
test
dec
push
cld
push
test
push
lcall
subl
add
lret
mov
pop
shlb
adc
jb
fimuls
push
aaa
sahf
data16
jae
add
bnd
xchg
mov
int
in
mov
mov
stos
aad
inc
dec
ret
xchg
adcb
jae
mov
pop
rcll
ss
sub
jae
mov
push
lock
test
push
frstor
imul
push
jp
dec
jmp
inc
inc
ficoms
jne
push
mov
iret
insb
std
mov
xchg
jbe
xor
add
cs
mov
cmpsb
push
inc
mov
jbe
add
sub
add
xor
std
movsb
fldcw
cmp
fucomp
dec
xchg
outsb
aaa
and
mov
add
ret
shll
push
ficompl
push
les
xor
jmp
ret
pop
lds
and
jmp
mov
xor
fcoml
inc
daa
das
int3
cs
cld
rorb
dec
and
push
or
add
lods
mov
shlb
js
mov
mov
inc
inc
xchg
scas
xchg
mov
lds
cmp
or
nop
jnp
pop
in
cmp
cli
cld
fadd
cmp
mov
cmpsb
jg
sbb
cmp
into
cmc
push
mov
aam
dec
call
xor
stos
andl
movsl
sarl
mov
in
rcr
pop
sub
inc
rolb
pop
jo
pop
cmp
minps
lcall
outsb
lods
cli
or
inc
mov
push
mov
shll
bound
mov
mov
add
out
sbb
xor
push
inc
mov
adc
lea
jge
inc
mov
sbb
scas
xchg
lods
or
dec
ret
ljmp
lods
movsl
inc
cmp
out
pop
cmp
jge
mov
ficoml
pop
cmp
sub
in
mov
inc
jle
pop
loop
negb
adc
add
xchg
mov
and
add
push
push
push
mov
adc
sub
pop
and
scas
ret
call
cmpsb
out
sub
rcrl
mov
rclb
addl
sahf
adc
gs
adc
mov
xchg
push
sbb
sub
dec
mov
stos
sarb
xchg
xor
cmp
lret
cmp
sub
pop
notl
mov
movsl
mov
sbb
mov
setns
in
ja
loopne
sahf
fs
xchg
mov
inc
call
icebp
pop
sbb
daa
adc
push
movsl
or
sub
cmp
jge
add
add
mov
add
add
dec
lret
adc
jnp
es
mov
fnstenv
shlb
adc
push
jmp
jecxz
hlt
hlt
leave
shll
test
inc
push
test
fs
push
pop
pop
and
leave
lcall
cwtl
ficompl
cmpb
push
jns
repnz
cld
xor
cmc
test
cli
icebp
ret
push
lods
and
fsubrs
andl
fsubrs
movsb
sbb
or
movb
movsb
addb
jno
jge
je
mov
arpl
or
push
aas
sub
lcall
add
add
sbb
xchg
aas
imul
or
aas
sub
stos
cmp
ret
pop
leave
jae
pop
test
mov
jb
xor
sbb
repz
and
or
pop
ja
decl
and
pop
daa
cwtl
add
sbb
pop
jns
hlt
in
ret
das
push
or
sbbl
cmc
mov
inc
pcmpgtb
call
int3
cs
mov
mov
jle
ret
jl
jg
xchg
insl
xchg
pop
add
inc
push
mov
aaa
jmp
xor
cmpsb
roll
ljmp
sub
jl
add
stos
jg
mov
xchg
in
jmp
jae
sub
sub
cmpl
sbb
loope
cs
dec
scas
lcall
mov
ret
sub
pop
inc
cmp
jb
lods
mov
push
mov
pop
mov
enter
lea
pop
mov
loopne
inc
xor
ficomps
lret
or
sub
sbb
fcoml
shr
jg
negl
inc
js
sub
dec
popf
pop
mov
cmp
xor
ljmp
ljmp
sbb
mov
inc
hlt
mov
cli
mov
push
adc
dec
xor
mov
cmpsb
add
xchg
push
sub
pop
or
xor
dec
filds
dec
out
mov
jmp
inc
loopne
popa
push
ds
xchg
cld
adc
mov
out
xor
lock
adc
add
mov
mov
icebp
and
jecxz
xor
std
sub
test
loopne
icebp
jno
inc
in
pop
mov
arpl
or
jmp
pop
mov
mov
adc
scas
mov
add
mov
pop
jg
loop
bswap
stos
rcll
mov
mov
gs
stc
jp
mov
repnz
sub
cmc
scas
pop
cmc
pop
mov
inc
pushf
inc
mov
imul
cmpsb
test
lcall
ficompl
cwtl
repnz
sahf
fs
imul
xchg
in
bound
stos
inc
ss
jp
pushf
xor
imul
int3
pop
mov
sbbb
push
int3
cmp
addb
pop
xchg
inc
test
movsl
jne
cs
mov
movsl
add
or
mov
sbb
repnz
xor
addb
or
fsubrl
fnsave
jecxz
fstl
sbb
inc
ja
push
sbb
lods
cmp
inc
ja
arpl
les
add
mov
fdivrl
das
mov
mov
push
mov
xchg
or
lret
mov
sahf
rolb
and
fcmovnu
jne
dec
jg
jecxz
inc
je
inc
jmp
or
mov
xchg
negl
mov
mov
jae
dec
inc
mov
call
lods
mov
push
sbb
test
xchg
mov
aaa
or
insb
aaa
mov
push
fnstcw
xchg
movl
xchg
movsl
lods
sub
outsb
in
scas
aas
xchg
popa
es
mov
push
xor
sbb
mov
clc
cmp
jno
das
test
iret
mov
add
xor
pop
dec
mov
leave
push
inc
popf
pop
scas
mov
sbb
sub
cmpsl
rorb
and
mov
xor
in
cmc
mov
lahf
pushf
aam
test
or
mov
cmp
ret
xchg
sti
dec
jne
mov
insl
lea
pushf
pop
mov
jns
movsl
les
ljmp
push
push
rclb
mov
push
xchg
jnp
jo
aad
dec
in
push
dec
and
daa
pop
add
loope
jno
in
sbb
out
push
test
push
lods
or
pop
ja
sbb
mov
dec
std
push
adc
adc
push
and
inc
dec
push
rorl
clc
and
mov
sbb
rorb
cmp
std
in
aam
mov
stos
loop
mov
popa
push
sub
movsl
pushaw
test
jp
mov
ja
or
gs
in
lret
sahf
int
ret
xor
jae
sub
jle
sub
clc
fwait
test
in
in
movsl
das
sarb
lds
stos
jmp
adc
stos
cli
pop
xchg
xchg
loop
jg
popa
mov
notb
stos
push
cmp
pop
mov
dec
adc
je
lea
lods
paddsw
outsl
ss
xchg
ja
std
mov
lahf
mov
or
pop
push
pop
sbb
jecxz
pop
xchg
mov
jecxz
stc
push
jae
aaa
pop
jbe
xor
inc
loop
lds
loopne
arpl
pop
or
and
jg
sbb
cmp
cmp
imulb
jmp
jle
insl
push
jo
outsb
out
mov
xor
inc
adc
push
iret
xchg
jns
or
mov
cmp
arpl
pop
push
adc
sbb
pushl
adc
lahf
mov
push
or
insl
aam
cmpsl
lock
xchg
push
in
mov
mov
js
insl
cmp
xor
fiaddl
insl
add
xchg
xlat
push
loopne
test
fs
movsb
leave
cld
nop
divb
loop
push
pop
mov
push
in
out
cli
adc
out
push
push
sbb
mov
xor
and
jae
sub
cmpsb
sti
sbb
orb
cmpsl
pop
push
mov
cld
out
ret
mov
cmc
push
test
add
jbe
aaa
lods
inc
add
aaa
jmp
lock
decw
inc
pop
push
test
fisttpl
iret
jmp
insl
dec
call
das
pop
jne
aad
icebp
mov
sbb
stc
jno
inc
xchg
xlat
xor
jge
jae
xchg
mov
ds
xor
dec
ret
outsb
nop
mov
jae
mov
push
jnp
hlt
std
test
xor
and
hlt
int3
or
xchg
pop
popa
ret
jecxz
into
clc
mov
sub
jb
bound
mov
inc
jmp
arpl
sbb
lahf
sub
jecxz
and
mov
pushf
mov
jnp
rorb
popa
sbb
push
cmpl
test
mov
xlat
dec
adcb
aaa
and
ficoml
outsb
inc
mov
push
loop
adc
mov
imul
adc
sarb
dec
xchg
in
sub
mov
xor
repz
je
psraw
cmp
jecxz
mov
dec
sbb
inc
mov
ss
ss
ds
test
int
fistl
mov
ljmp
add
lea
add
cmp
xchg
ror
insl
daa
and
sbb
lahf
xchg
xchg
jmp
int
insb
xor
mov
in
shlb
pop
xor
pop
icebp
pop
shll
dec
cmp
icebp
test
ss
das
mov
int
jl
leave
cmpb
dec
xor
into
out
dec
add
jne
in
cwtl
mov
mov
dec
imul
or
ret
aad
cwtl
fisubrl
sub
cmp
inc
add
cmp
into
fnstcw
imul
jge
sub
cmp
rolb
ja
sbb
jge
pop
ret
and
push
jl
pop
sbb
push
or
aad
outsb
loopne
xor
je
add
xchg
mov
xchg
bound
dec
clc
fcoml
push
adc
jnp
mov
or
add
adc
insl
subl
or
dec
int3
mov
cmp
sub
repnz
js
mov
clc
push
shrb
in
mov
mov
popa
pop
and
add
outsl
lea
popa
mov
nop
sbbb
mov
rclb
adc
push
jbe
xchg
xor
or
dec
imul
push
test
xchg
ficoms
mov
popf
xor
ficomps
test
jg
adc
jge
push
out
add
mov
xchg
ljmp
mov
mov
aad
push
pusha
mov
scas
inc
mov
or
fwait
ret
scas
addl
fdiv
dec
sarb
arpl
add
lods
aad
mov
call
push
scas
fldcw
repz
or
mov
pop
mov
rolb
mov
pop
mov
popa
out
dec
and
fcoms
push
insb
loopne
pop
xlat
lret
inc
movsl
mov
js
stos
aas
movsl
in
dec
int
das
add
jb
or
xor
psubsw
mov
imul
xchg
test
push
insl
flds
lcall
rorl
pop
push
out
or
cmp
fisubrl
lss
jnp
mov
sbb
movsl
or
adc
mov
in
jns
imul
sarb
push
das
mov
jp
jmp
jle
pop
cmp
ret
sbb
dec
fwait
xor
outsb
test
xor
pusha
dec
rcr
mov
aaa
push
scas
loope
dec
mov
push
loopne
mov
out
pop
jle
adc
aas
adc
mov
mov
xchg
std
mov
push
bnd
and
dec
outsl
push
ds
push
mov
cwtl
mov
xor
popl
inc
push
scas
test
adcb
jge
lods
or
push
sbb
inc
loope
sbb
or
lret
mov
pop
sbb
shl
call
inc
stc
jb
push
ret
xchg
inc
call
lcall
cld
push
mov
filds
in
add
pop
aas
hlt
pop
mov
sbb
pop
je
cmp
arpl
lahf
in
ret
add
mov
mov
dec
arpl
lret
out
ss
imul
dec
cmp
inc
daa
cli
jb
and
jae
mov
pop
dec
addb
hlt
push
inc
dec
mov
test
push
mov
add
mov
jo
jle
pop
insl
and
pop
in
call
jne
push
jle
xor
lret
push
pop
arpl
sbb
dec
dec
dec
pop
jmp
lret
pop
add
ljmp
sbb
cmpsb
pushf
dec
outsb
xor
rorl
inc
push
out
loopne
int3
pop
out
adc
jbe
cmp
cltd
loopne
out
out
or
in
test
mov
xchg
push
movsl
mov
mov
hlt
and
jb
std
inc
pextrw
xchg
and
out
pop
ds
sub
jg
inc
mov
imul
aas
pop
and
cmpsl
lahf
xchg
xor
test
mov
mov
subl
jne
xor
push
hlt
cmp
ja
push
es
pop
jecxz
jg
imul
push
push
inc
xor
sub
aad
xchg
enter
inc
jo
mov
movsl
adc
pop
pop
adc
jge
cmp
popa
pop
lock
jae
inc
xchg
jns
jb
sbb
mov
outsl
mov
cs
mov
test
hlt
xchg
mov
adc
or
or
dec
pop
xchg
enter
mov
push
sub
adc
outsl
lret
and
pushf
push
mov
mov
subb
imul
push
sub
lock
outsl
push
les
dec
test
data16
sbb
adc
repnz
sbb
and
les
es
push
es
js
inc
shlb
sbb
loop
test
inc
mov
sbb
sahf
fmuls
scas
sbb
jge
repnz
xchg
aaa
push
xchg
mov
jae
dec
popa
popf
inc
xchg
lods
sub
std
icebp
shlb
mov
or
push
sbb
xchg
inc
adc
pop
push
mov
adc
das
push
pop
dec
pop
lea
cli
out
faddl
xor
icebp
in
jno
test
adc
push
push
jg
clc
ljmp
je
mov
call
push
push
xchg
pop
mov
test
push
mov
xchg
push
cmp
cmpl
nop
int3
jne
hlt
pushf
jne
jecxz
sub
jmp
cmp
cmp
sub
or
jo
outsb
lahf
int3
jns
sbb
sti
cli
push
adc
dec
std
xchg
xor
leave
jae
repnz
mov
mov
data16
cmp
jae
jge
xor
loopne
adc
sbb
or
out
cltd
add
dec
cmp
hlt
xchg
or
xor
cwtl
popf
cmpsl
clc
cmp
cmp
into
sbb
mov
cmp
sbb
add
mov
enter
lcall
int3
das
adc
inc
xchg
sub
into
push
and
lods
rorb
cmp
push
gs
incl
clc
js
push
sbb
pop
ret
adc
cmpsl
add
lret
xlat
outsl
xorb
mov
jbe
mov
push
mov
out
bound
add
pusha
inc
addl
js
shlb
pop
loope
jp
jge
jno
push
pop
mov
mov
lahf
add
icebp
leave
inc
jecxz
inc
pushf
pop
jo
aas
or
scas
aad
push
mov
or
push
and
sbb
sub
xor
push
pop
cwtl
js
cli
jb
insl
xor
sbb
or
push
mov
fstpl
and
subl
movsb
xchg
int3
fstps
jnp
bound
sahf
inc
xor
insb
enter
push
mov
jl
push
call
inc
add
xchg
adc
xchg
xchg
dec
popa
cmpsb
jl
inc
jecxz
adc
xchg
cmpsl
imul
idivl
push
xor
js
adc
inc
dec
in
sbb
push
cmpb
test
imull
push
cmp
cmc
jl
out
test
rcl
push
mov
dec
pop
call
fucom
aaa
sub
lcall
div
out
inc
nop
dec
je
fstl
push
pusha
lahf
imul
and
xchg
jno
pop
push
add
xchg
int3
push
jb
mov
daa
jns
stos
enter
adc
or
in
mov
shl
cmp
in
out
jg
xchg
daa
test
shrl
loop
imul
test
sub
in
fistpl
mov
mov
add
cmp
mov
jle
test
sbb
stc
sub
xor
pop
push
repz
lcall
orb
lds
leave
jae
xchg
es
push
negb
cmp
jno
adc
out
aaa
adcl
imul
xchg
or
pop
popf
cmpsb
jecxz
out
xchg
orl
pop
jg
mov
lcall
in
and
sub
das
imul
xor
push
pop
outsb
xchg
idiv
xor
in
mov
sub
add
lahf
or
dec
sbb
bound
and
loopne
ret
adc
mov
lahf
xorl
shlb
sub
test
jecxz
mov
add
push
leave
push
sub
pop
out
test
mov
sahf
lds
pop
rcr
sbb
pop
xor
lret
daa
into
test
mov
xchg
ss
test
pop
es
add
mov
mov
cld
sub
jl
das
jae
mov
les
js
and
xchg
xchg
pop
or
into
pop
stos
adc
aad
cld
and
outsl
push
sub
sub
testb
sbb
push
sbb
cmpsb
mov
dec
cmpb
jl
imul
jo
sbb
mov
mov
cmp
popa
mov
or
test
push
mov
mov
pop
mov
imul
out
xor
pop
lahf
cmp
mov
jne
test
adc
push
es
outsl
jmp
repz
fldt
les
add
push
adc
jno
jl
lret
dec
push
lea
adc
scas
mov
lcall
mov
popa
mov
mov
add
cli
jo
aam
mov
iret
mov
out
ljmp
push
out
outsl
xchg
arpl
cmp
arpl
jb
stos
rolb
xchg
pop
lret
ja
xlat
cltd
clc
jo
add
pop
js
jne
test
cltd
inc
stos
loopne
lret
incb
imul
sub
test
inc
jge
incb
or
sub
shlb
fists
and
adc
sbb
aas
fimull
or
or
stos
cmp
push
xchg
lret
lods
sub
mov
cmp
outsl
sti
shrl
jmp
adc
or
jl
mov
ret
mov
in
iret
xadd
les
out
sbb
cli
pop
cmp
out
mov
mov
jo
bound
sbb
mov
ret
mov
sbb
mov
mov
dec
dec
lods
js
cmp
dec
xor
dec
nop
lcall
mov
int
push
cmc
je
dec
adc
loop
pop
or
int
jae
push
adc
sbb
mov
movl
imul
out
cltd
cmc
dec
cmp
bound
gs
mov
mov
cmp
lret
mov
shr
mov
jmp
push
pop
push
leave
mov
aad
ss
pop
xchg
mov
pushf
popf
enter
or
andb
ljmp
aaa
cs
enter
ljmp
test
inc
jo
addr16
cmp
aas
mov
inc
mov
fldcw
cmp
arpl
cld
push
sbb
pop
cmp
mov
jmp
dec
jl
jle
xlat
ds
mov
jne
sbb
push
insl
fnsave
push
xor
inc
mov
sbb
sbb
out
std
divb
movsl
dec
inc
rcrb
pop
pop
ud1
out
jg
scas
hlt
out
fxtract
add
inc
mov
jae
cli
push
lods
lock
in
pop
leave
dec
cmpsl
daa
aad
test
rcrl
in
mov
mov
imul
test
pop
push
rolb
imul
push
cmc
xchg
gs
dec
or
mov
push
sbb
inc
mov
mov
je
bound
aad
and
pop
and
dec
stc
sbb
out
push
dec
adc
lret
popa
jb
leave
fdiv
gs
add
in
outsb
or
cmp
into
push
mov
subb
sub
ja
mov
cmp
pop
adc
dec
adc
fbld
roll
jecxz
dec
adc
lcall
mov
inc
rorl
push
and
in
loope
cs
lods
bound
jecxz
std
mov
push
iret
std
adc
and
add
sub
jbe
ret
hlt
lods
push
dec
cmpsl
loope
xchg
push
adc
pop
lcall
xor
es
mov
jmp
mov
lret
fsubrl
aaa
outsb
inc
pushf
xchg
ljmp
push
jo
sub
aas
xor
adc
mov
inc
pop
aad
xchg
mov
cli
popl
inc
mov
rclb
and
rorl
cltd
lods
push
fidivl
lret
push
or
das
inc
mulb
test
and
mov
pop
cmp
sub
add
iret
out
hlt
loopne
adc
sti
adc
inc
orl
rorl
fadd
lret
rcrl
repz
cs
divb
jg
lret
and
out
push
xor
add
daa
pop
cmpl
jns
aas
lcall
jbe
sahf
rorb
push
insl
addb
stc
inc
xchg
mov
test
cmp
es
rorl
cltd
sub
lock
filds
movsb
aam
arpl
sbb
pop
jno
lds
sbb
mov
mov
mov
mov
rorb
ret
pop
jnp
jecxz
mov
mov
xor
movsl
mov
xchg
ss
imul
and
sar
hlt
add
mov
cld
ror
hlt
fistpll
jge
mov
add
adc
mov
sub
push
aad
mov
movsb
aaa
je
sbb
xor
popf
sbb
sub
sbb
cmpsb
sbb
and
mov
pusha
mov
mov
movsb
mov
push
punpckldq
in
js
xor
lret
add
scas
ret
test
stc
xlat
arpl
aad
test
into
xchg
mov
mov
lret
jge
ret
iret
lds
lods
pushl
lea
sbb
fistpl
dec
jns
fidivrs
push
xchg
inc
jbe
dec
jmp
loope
push
das
push
aad
push
xchg
jnp
mov
add
cwtl
inc
push
mov
pop
dec
xor
adc
aad
rcrb
adc
jg
push
add
loope
jo
andb
push
xor
inc
rcrl
sub
mov
dec
call
mov
pop
sti
and
and
scas
adc
jnp
inc
rcll
lret
fwait
jno
mov
in
lcall
mov
sub
jno
jmp
les
push
or
dec
movsb
sub
int3
mov
and
int
mov
mov
xor
dec
sbb
outsl
adc
shll
push
xor
cs
mov
daa
mov
pop
mov
dec
mov
iret
fs
cmp
push
pop
push
lods
mov
test
jp
push
shrl
mov
sbb
sub
sarb
xchg
fisubrl
test
dec
xchg
cmpsb
stos
aas
add
je
mov
clc
sub
xlat
xchg
xchg
mov
andb
arpl
xchg
xchg
loope
ljmp
lahf
lea
les
int
out
dec
pop
jne
mov
inc
xor
jge
mov
jg
cmp
add
js
movsb
sbb
insb
stos
lret
orl
outsl
mov
scas
adc
sbb
scas
pop
push
jmp
arpl
xorl
mov
data16
gs
inc
movl
nop
or
mov
insb
fldcw
lock
dec
je
and
cmp
and
aas
imul
and
insl
push
sbb
rcrb
inc
cmpsl
decl
movsb
or
stos
aaa
mov
mov
mov
dec
test
sub
cmpsb
popf
mov
out
dec
mov
hlt
mov
add
vminps
aas
mov
ret
lods
mov
adc
mov
add
sbb
gs
or
aaa
push
scas
popf
jl
jnp
mov
xchg
add
pop
xor
pop
scas
and
in
cmp
mov
in
push
cs
push
pushf
loopne
sub
pop
and
add
cmp
xor
mov
daa
lods
lds
imul
and
in
push
stos
push
cld
aaa
in
cld
cld
je
cli
into
andb
mov
pusha
mov
icebp
loop
lods
inc
fcoml
aad
adc
mov
sbb
cmp
fnsave
insl
aam
push
mov
leave
push
jae
call
lahf
sbb
out
popf
mov
dec
sbb
dec
sub
jmp
xor
jge
cmp
cwtl
adc
add
xlat
mov
mov
jb
push
inc
push
ret
xor
pop
or
stos
inc
scas
mov
push
mov
in
mov
out
jae
out
adc
mov
xor
leave
sbb
data16
pop
mov
push
or
cmp
out
fcomip
sub
sbb
sub
fcompl
dec
mov
fcoml
rorb
aas
mov
jne
or
dec
jo
and
or
add
sub
mov
mov
xchg
mov
js
jl
insb
test
and
cmp
mov
ret
xorl
dec
inc
adc
fs
push
ljmp
adc
int
lret
fdivl
cmp
leavew
mov
bound
daa
inc
and
enter
cmp
cltd
adcb
popa
sub
repnz
ret
roll
mov
das
fnstcw
jle
aas
fidivrs
daa
mov
and
mov
pop
bound
lret
mov
je
xor
or
sub
mov
cld
in
xchg
sahf
test
or
movsb
je
leave
and
cmp
or
inc
leave
call
sbb
mov
fsin
outsb
and
mov
xchg
xchg
sub
jg
lock
inc
sarb
cmp
lcall
int3
mov
arpl
dec
cmp
mov
mov
pop
lock
jmp
lret
fs
aad
fisttpll
rcll
iret
or
lock
loop
lcall
lret
push
out
xchg
mov
test
cld
push
jle
inc
cmpsl
ja
leave
or
scas
sbb
fidivrl
scas
dec
cmp
cld
imul
test
andb
cld
cmp
jne
int3
lret
jg
xchg
test
push
cmp
dec
xchg
mov
movsl
dec
std
out
insl
xor
xor
pop
ret
pop
dec
pop
push
mov
push
arpl
andl
cs
jne
dec
in
out
pop
push
jnp
sbb
ljmp
outsb
jns
cmc
shl
xchg
push
test
loop
mov
push
cmp
insb
in
jbe
pop
cmp
dec
outsb
xchg
sbb
and
aam
mov
cmp
rcl
js
mov
mov
add
add
mov
stos
int3
mov
xlat
testb
dec
enter
das
out
or
outsl
aas
dec
cld
lcall
pop
iret
push
jp
les
adc
out
pop
jno
adcl
sub
mov
sahf
mov
icebp
cld
mov
mov
cwtl
push
or
sbb
mov
and
adc
push
dec
aad
pusha
dec
inc
stos
repz
push
stc
jl
or
loope
pop
dec
pop
mov
add
mov
in
int3
pop
inc
pop
imulb
sbb
push
sub
roll
pushf
push
jp
aas
pushf
insl
pushf
or
and
cmp
or
dec
or
lds
inc
push
stos
xchg
sbb
iret
pop
sub
scas
pop
sub
xchg
cmp
sub
repnz
loope
lcall
lcall
mov
or
and
sbb
push
mov
jns
push
js
rorl
je
jno
or
jle
mov
add
negb
push
jns
cld
pushl
or
ljmp
fisubrs
pop
mov
ja
lret
inc
and
jle
jne
stos
int3
lret
pushf
push
mov
sub
aam
adc
negl
inc
jb
pop
cmp
mov
test
pop
and
cmp
test
fs
fisttpl
sbb
inc
fdivrs
hlt
inc
dec
pop
xchg
fistps
call
or
fcoms
add
leave
aam
mov
cmp
xor
xlat
mov
roll
and
pop
int3
dec
xchg
aam
jb
out
aad
cmpsl
jl
aaa
cmp
mov
pop
sub
jb
mov
and
gs
sub
movsb
cli
mov
xor
xchg
shr
and
xchg
jg
mov
movsb
repz
lcall
outsb
mov
adc
push
push
sbb
mov
sbb
aas
repz
pop
mov
movsb
adc
enter
xchg
push
sbb
fiadds
cltd
mov
popa
mov
pushf
xchg
js
sahf
mov
adc
test
shr
ss
aam
ret
push
pop
xchg
sbb
mov
ja
cmp
popf
lret
movsl
xchg
cmp
sti
add
or
cmp
pop
xchg
mov
cltd
pop
xor
inc
test
push
aam
lods
adc
mov
inc
xchg
xchg
xchg
push
leave
sti
cmp
sbb
sbb
add
sbb
mov
xor
js
nop
int
pushf
movsb
cmpsl
sbb
inc
pop
rcrl
int3
xor
mov
shll
xor
lret
rorb
pop
adc
lea
inc
lods
jl
call
mov
cmc
inc
shlb
jbe
pop
fidivrl
add
cmp
jo
aad
adc
mov
daa
outsb
push
lea
ljmp
push
lods
mov
adc
xlat
ljmp
and
pop
pushf
xchg
cmc
add
js
or
mov
sub
dec
sbb
or
mov
out
daa
cmp
adc
dec
int3
mov
pop
push
test
dec
and
repnz
movsl
popf
ror
lods
movl
shll
insb
idivl
cmp
out
scas
mov
das
mov
or
or
pop
xor
scas
inc
lret
dec
inc
out
lret
sub
ror
jbe
fdivl
cmc
pop
jne
int
jnp
pop
push
hlt
fisubl
inc
mov
gs
inc
test
cmp
add
scas
ret
nop
subl
sub
out
and
test
lahf
fiaddl
and
push
fildll
das
xor
movsl
jge
push
out
pop
jecxz
inc
push
aam
mov
or
push
pushw
aam
popa
out
sbb
loop
jae
jmp
and
daa
or
nop
pop
mov
pop
mov
mov
in
popa
inc
fidivs
xor
dec
scas
outsb
xchg
sub
scas
loop
popa
subl
pop
push
fnstcw
fwait
mov
inc
decl
repz
enter
cmp
pushw
xchg
fs
push
dec
mov
fdivr
and
mov
jns
xchg
or
mov
sbb
scas
xor
xor
adc
in
sub
adc
sub
insl
call
mov
aaa
mov
inc
jae
mull
cmp
push
add
inc
leave
fcmove
pop
push
push
sub
aad
pop
jno
popf
bswap
shlb
aam
mov
adc
pop
mov
xchg
dec
pop
xchg
xchg
add
jge
pop
cmp
lods
jl
mov
push
sub
mov
sub
mov
and
fildl
mov
mov
popf
sahf
dec
ljmp
lea
and
jo
push
fwait
xchg
mov
int
aam
push
aas
rolb
mov
in
adc
dec
mov
sub
cwtl
in
jno
in
lods
enter
movsl
aaa
cmpsl
mov
test
ret
xor
cmc
inc
cmp
or
call
mov
jo
roll
push
mov
mov
lcall
push
cmpsb
or
adc
daa
cmpsb
subb
rol
pop
and
lods
jle
outsb
out
inc
das
add
decb
and
pop
xchg
xchg
aas
mov
lds
inc
pop
bound
ljmp
daa
xchg
jle
int3
jae
cltd
cmp
sbb
aas
mov
pop
mov
sarb
arpl
adc
add
testl
popl
das
int3
or
push
fs
test
fdivrl
inc
out
aas
push
mov
cmp
cld
dec
jb
adc
dec
filds
push
sub
lods
popa
cmp
es
sub
mov
jecxz
adc
and
xchg
imul
mov
loopne
pop
mov
out
fnsave
mov
cld
idivb
cmc
in
es
jecxz
mov
mov
xchg
cmp
sbb
xor
leave
inc
rclb
or
rcrb
push
scas
cmp
lods
jmp
pop
push
xchg
cld
aas
adc
mov
xor
test
pushf
data16
add
inc
cmp
shlb
scas
push
fidivrl
int3
sbb
popf
scas
adc
fdivrs
xchg
xchg
xor
test
push
cmpsl
cmc
jge
popa
popa
dec
mov
cmc
sbb
xchg
jmp
rcll
push
popa
into
sub
cld
cmp
fisttpll
sbb
out
lds
cli
jae
cmp
cs
stos
int
clc
aaa
mov
xorb
test
in
sub
and
fcoml
add
jae
lods
aas
test
add
mov
sbb
mov
mov
mov
cmpsb
xchg
push
mov
lahf
pop
and
push
incb
loop
push
xlat
cmp
int3
sbb
inc
dec
loope
xorl
addb
pop
inc
mov
stc
dec
pop
enter
or
push
xor
ss
ss
lods
cmp
movsb
jo
int
ljmp
adc
sbb
dec
imul
scas
or
ja
jns
or
sbb
das
pop
sbb
pop
jg
out
pushf
addr16
xlat
ror
rcl
lret
jne
pop
jbe
sbb
jle
fs
xlat
xor
cli
loope
lds
sbbl
stc
add
add
push
pop
pop
adc
xor
test
movsl
in
lret
mov
xor
jmp
pushf
aaa
push
getsec
rclb
mov
push
fdivl
push
or
int
shrl
dec
lahf
fiaddl
xor
outsl
fnstcw
push
pop
loopne
mov
sbb
les
push
test
mov
repz
push
iret
adc
lcall
stc
jne
int3
fmul
test
mov
adc
and
jle
sub
inc
pop
aad
sbb
push
or
xor
sbb
add
push
aas
mov
mov
out
mov
fwait
imul
in
dec
xor
xlat
stos
imul
int
jl
test
adc
xchg
pop
mov
sbb
sti
mov
mov
jg
daa
popf
cmp
cmp
outsb
fnstsw
jg
stos
jle
stos
push
jo
rcl
mov
jmp
idivl
push
inc
jo
inc
jns
repnz
xor
or
pusha
mov
stc
xor
ret
je
mov
xchg
mov
sub
push
sbb
int
xor
xchg
xchg
std
fwait
push
out
hlt
lods
sub
jo
or
int3
xor
inc
jne
in
jmp
pop
jle
push
jne
lods
dec
sub
je
cwtl
mov
into
mov
cmc
pushf
shll
pop
push
in
cmp
mov
and
cwtl
xchg
nop
adc
out
push
sbb
test
sub
shl
stc
pop
mov
cs
lods
cmp
mov
rol
sbb
int3
mov
sti
lret
repnz
xchg
into
inc
sahf
mov
test
es
push
push
cs
pop
outsl
adc
xchg
arpl
shlb
inc
jns
add
movsb
dec
mov
inc
inc
adc
jo
push
xor
lock
nop
fwait
sti
bound
inc
ret
stos
fnsave
std
inc
addl
jg
mov
lods
divl
aaa
cmp
outsl
inc
mov
push
imul
jmp
loop
xchg
mov
fcoms
ja
out
pop
dec
jmp
aas
pusha
jmp
add
or
js
pop
jo
testl
out
bound
test
in
cmpsl
out
fimuls
sar
xchg
dec
jns
je
aaa
xchg
mov
cltd
ljmp
cwtl
test
mov
pop
test
xor
dec
pusha
cmc
push
out
mov
inc
imul
dec
imul
mov
or
stc
dec
or
in
pop
dec
mov
jg
jecxz
popa
test
sub
enter
add
and
adc
aad
cmp
push
dec
std
adc
jmp
fldl
loope
cwtl
jbe
mov
or
xchg
add
inc
mov
ret
repz
dec
pcmpgtw
pop
fldt
mov
mov
orb
inc
mov
out
call
outsl
cmp
lds
cmp
lock
cs
dec
or
or
das
lret
nop
and
je
push
psubb
dec
jae
mov
mull
cmpsb
cmp
scas
mov
jbe
xor
stc
cmp
mov
push
test
int3
mov
sti
shll
jae
cmp
mov
push
mov
jnp
cs
and
sbb
sub
rcll
sbb
inc
lret
mov
lahf
int3
test
and
mov
jmp
fcomi
test
sbb
sub
sub
clc
push
inc
mov
jne
jo
mov
mov
add
mov
add
fucomip
hlt
insl
jnp
inc
and
or
nop
mov
dec
pop
push
jne
mov
jbe
adc
loop
sub
call
push
movl
mov
loop
sbb
jne
cmp
imul
add
sub
add
ret
jo
pop
faddp
mov
cld
out
adc
xlat
fmull
xchg
mov
ds
pushf
ret
std
cld
xchg
std
push
add
xor
ds
arpl
fs
pushf
mov
push
ljmp
mov
dec
sbb
lcall
out
clc
and
out
stc
and
push
and
jmp
mov
movsl
int
inc
scas
stos
add
or
imul
decl
stos
adc
lods
xor
ds
jmp
lods
icebp
push
rolb
enter
lcall
jp
sub
dec
mov
adc
sub
jne
lods
sbb
mov
in
jge
jns
daa
sub
ret
adc
cli
lods
mov
in
imul
ficoms
inc
in
bound
pop
lea
or
and
cld
inc
pop
je
push
outsl
jns
fs
xchg
popa
sbb
push
ficoml
ja
scas
xlat
dec
mov
lea
aas
pushf
ds
lret
mov
sub
pop
call
cli
scas
inc
ret
jge
ret
loope
sub
scas
subl
or
sub
mov
mov
movsb
jo
push
cmc
sub
not
mov
icebp
inc
mov
inc
sbb
dec
sbb
or
jbe
mov
je
enter
adc
push
or
dec
out
cld
push
pop
loope
movsl
lea
mov
int3
push
cmpsb
clc
cwtl
push
clc
push
lods
sub
sahf
push
in
cmp
inc
shrl
scas
jle
aam
xchg
xor
xor
mov
fnstenv
or
les
shll
or
jae
push
push
rolb
mov
xor
roll
xor
jo
pop
cmp
or
xor
ljmp
pop
fwait
insl
or
adc
add
adc
mov
inc
daa
and
out
rolb
or
mov
mov
ret
jnp
push
cmp
sbb
push
call
mov
sbb
fs
outsb
aad
repnz
or
lahf
cwtl
or
mov
add
cmp
dec
mov
outsb
xchg
rcr
mov
jns
shrb
push
int
ror
cmpsl
mov
cmc
cmp
call
insb
loopne
icebp
mov
jle
pop
or
fldl
int
xlat
cwtl
call
fs
push
sub
rcll
pop
ja
dec
cli
xchg
jne
adc
cs
pop
dec
inc
xchg
das
aas
test
ret
mov
lds
mov
and
sbb
out
jo
cli
cmpsl
js
cmpsb
arpl
cmpsb
pop
call
fsubl
pushf
lcall
popf
nop
and
loope
cmp
mov
jbe
cmp
cmp
and
mov
loop
add
je
xor
sarb
aaa
mov
inc
cmc
pop
cmp
cmp
das
shll
jp
aas
add
ss
mov
repz
rclb
mov
fs
add
aad
hlt
pop
arpl
ljmp
addr16
bound
add
lock
mov
push
mov
add
lcall
xchg
mov
xchg
pop
mov
pop
into
adc
cmp
push
lret
cmp
mov
push
pushf
adc
js
das
ret
and
mov
pop
pusha
push
mov
mov
push
cltd
pushf
jnp
lods
sbb
mov
ss
mov
or
test
dec
aas
sbb
and
rcrl
sub
xor
pusha
jo
or
push
clc
popf
negb
mov
and
js
insb
pop
jmp
aam
test
stos
cmpsb
adc
lods
pop
pop
sub
and
fbstp
cmpxchg
fisttpll
xlat
mov
out
cmp
adc
aad
dec
outsl
adc
xor
push
out
mov
cmp
or
push
inc
out
jmp
shrb
add
cmpsl
js,pn
jp
aaa
in
stos
add
call
or
sbb
cwtl
mov
jo
cmp
lods
mov
pop
ljmp
js
cmp
push
sub
cmp
mov
push
mov
test
sbb
movb
movsl
push
int3
sub
int
pop
or
in
scas
and
adc
jge
in
jne
jno
or
inc
mov
xchg
in
push
adc
lret
sbbl
sahf
shll
lahf
adc
stos
div
sbb
pop
jb
js
adc
das
fcmovb
ljmp
lret
mov
sbb
fidivrl
gs
movsb
lds
mov
jns
insb
mov
pop
ljmp
ret
bound
int
es
stos
hlt
mov
pushf
int
insb
cwtl
cli
mov
jo
test
mov
add
push
in
mov
cmpsb
cmp
gs
aas
or
adc
xchg
popf
bound
xlat
xor
inc
xchg
scas
mov
mov
pop
xchg
cli
mov
mov
out
lcall
ss
dec
mulb
mov
cmp
sbb
xchg
sub
ljmp
loope
lret
sub
cmpsl
lods
lea
jnp
insb
sbb
movsl
popf
js
in
stc
jnp
ljmp
out
bound
or
pop
push
mov
xor
stc
adc
push
fistps
push
repnz
aam
in
rorb
fst
divl
mov
and
call
mov
aad
sbb
cmpsb
sub
add
notb
push
shrl
daa
sub
les
lea
std
push
ja
data16
data16
mov
addr16
or
lret
jp
adc
lahf
and
xor
cwtl
mov
outsl
mov
stos
jle
shll
mov
mov
mov
and
jns
mov
test
add
es
fstps
adcl
out
enter
jbe
nop
shlb
je
cwtl
dec
pop
pop
inc
sbb
jne
repnz
add
push
cmp
fnsave
mov
jmp
jmp
fidivs
cld
imul
std
inc
jg
std
or
add
sbb
repnz
std
ja
xor
fs
push
or
mov
shlb
push
jnp
addr16
adc
in
add
sbb
push
cmp
cld
out
int3
lretw
push
cmp
pop
cmp
dec
pop
pop
iret
mov
add
add
loopne
cmp
out
push
xor
pop
lret
adcl
xchg
popa
inc
inc
pop
xlat
test
into
stos
jl
iret
mov
adc
dec
bnd
push
add
out
push
repz
outsl
mov
into
insl
mov
adc
shll
push
mov
or
rcrb
sbb
fs
ss
push
push
mov
leave
sti
push
addr16
pop
out
sbb
popa
adc
js
or
loop
add
int3
sub
cs
cld
mov
pop
mov
aaa
lcall
es
xchg
xchg
xchg
push
cmp
xorb
ja
dec
dec
mov
cli
mov
sbb
jp
ficoml
xchg
mov
mov
mov
fsubrp
xchg
insb
xchg
jne
jae
shlb
test
nop
fcom
daa
xor
fisubrl
push
lods
sbb
std
fcomps
add
pusha
lret
fdivrs
hlt
mull
repnz
mov
jge
push
mov
xchg
xor
xchg
sbb
inc
push
or
rep
sahf
inc
hlt
mov
iret
mov
out
sub
or
xor
mov
iret
pop
arpl
jne
pop
cmp
gs
mov
push
push
pushf
and
aad
pop
fisttpll
push
dec
stc
cmp
scas
aas
jg
in
xor
cmpsl
clc
std
adc
pop
mov
out
pop
stos
push
pop
jl
fwait
movb
sub
sbb
xchg
jne
dec
jnp
jb
mov
pusha
bnd
out
pop
jnp
movsl
xor
outsb
sub
jg
mov
adc
push
jb
rclb
addb
mov
sbbb
cmpsl
icebp
xchg
call
jae
or
sbb
ds
sbbl
call
sub
jne
mov
enter
jno
sbb
int3
testl
test
mov
in
repz
in
test
and
adc
and
dec
sub
mov
jae
mov
insb
jmp
adcl
mov
nop
in
cmp
loop
pop
popa
cmc
sbb
lahf
lret
add
jg
dec
or
out
addl
add
push
jle
jbe
mov
pop
cmp
fadds
cmpsl
flds
fisttps
xorl
xchg
pop
neg
ds
inc
test
inc
push
push
insl
jecxz
aad
pop
into
cmp
in
inc
mov
mov
cld
lods
mov
fldenv
lret
stos
sub
mov
pop
in
xorl
push
mov
movl
jae
adc
rorl
jne
cmpb
sbb
out
repnz
mov
jmp
pop
inc
aad
mov
pop
pop
repnz
loop
dec
pop
xor
std
adcl
add
mov
scas
mov
cs
rcrl
cmp
loope
mov
cmp
js
sub
call
es
fsubl
rcr
cmp
dec
mov
jne
data16
mov
cmc
mov
out
and
mov
cmp
jno
and
mov
mov
mulb
stc
mov
or
loope
cld
jmp
pop
inc
sub
daa
mov
leave
sbb
jecxz
or
lods
and
out
lcall
mov
ret
mov
xchg
or
sub
mov
mov
call
add
mov
xchg
pop
fistl
add
fisttpll
mov
mov
sbb
fstps
cmp
sbb
cmp
adc
inc
in
iret
movsb
add
in
into
insl
push
mov
push
inc
sub
bound
arpl
mov
push
jmp
xchg
ret
adc
cmp
hlt
cmp
notb
pusha
jne
clc
je
ja
fs
mov
push
xchg
cmpsb
pushf
outsl
sbb
dec
mov
jmp
cmp
push
mov
jae
int
scas
mov
jl
fwait
mov
adc
sti
add
dec
pop
sbb
roll
es
cmp
rclb
xchg
or
jno
js
inc
inc
and
mov
ret
mov
pop
adc
mov
sub
mov
stc
xor
scas
and
mov
outsl
and
repz
xchg
lods
lahf
mov
imul
cmp
pop
xor
rcrb
sub
xor
inc
xchg
loop
incb
dec
dec
mov
and
xchg
pop
out
push
mov
gs
imul
ret
push
dec
aam
fisubl
sbb
imul
shr
arpl
add
call
fisubrs
cmp
aaa
repz
jecxz
icebp
cld
das
inc
add
addb
das
push
xchg
inc
or
fsubr
pop
mov
iret
inc
mov
scas
fs
loope
dec
sub
jecxz
aas
imul
xchg
pop
pusha
or
or
or
scas
loop
inc
pop
cli
add
mov
sub
sahf
popf
scas
test
push
loopne
pop
xchg
jns
push
lret
cmp
daa
adc
xchg
out
mov
pop
mov
lds
insl
loop
hlt
test
test
push
add
xchg
inc
test
pop
pop
cltd
inc
lock
popf
les
fisubrl
inc
sub
jnp
mov
or
mov
xchg
iret
sbb
xorl
sub
movsb
sub
stos
pop
mov
or
pop
in
fists
fldt
pushf
push
ret
call
and
mull
mov
cmpl
mov
xchg
lret
sbb
mov
push
pushf
mov
int3
cld
pop
jmp
aaa
or
popa
xlat
pop
ret
je
icebp
or
shrb
inc
mov
lahf
arpl
push
mov
cmpsl
lcall
cmp
imul
xchg
mov
outsl
outsl
cmp
loopne
cmp
cli
loopne
mov
rol
fisubrl
adc
pop
xor
cmp
insl
cmp
pop
pop
sahf
test
xor
dec
jg
ret
scas
push
push
outsb
sub
cld
push
dec
fldl
pop
sbb
inc
lea
lock
jnp
xor
or
in
jecxz
adc
mov
mov
subb
dec
ljmp
inc
push
aas
lcall
rcr
cli
and
mov
or
adc
dec
xchg
dec
add
bound
inc
mov
std
dec
cmpsl
das
add
sbb
std
jns
data16
ffree
sub
and
sbb
and
into
mov
loop
xor
cs
pop
lcall
pop
xchg
cwtl
push
jb
repnz
xorl
or
je
jae
cmp
popa
jmp
ret
out
inc
pop
nop
jae
mov
pop
stc
lret
and
inc
ds
bound
stc
cmp
arpl
xor
into
fidivrl
rorl
enter
test
xchg
sub
or
movb
sub
leave
sbb
sub
call
or
sbb
and
and
xor
ja
addr16
push
enter
les
arpl
nop
mov
mov
xchg
imul
pop
push
gs
gs
rclb
add
jecxz
shr
ret
mov
push
cmpsl
or
cmp
push
and
xchg
mov
sub
xchg
add
lods
addl
data16
fbld
popf
adc
fistpll
ja
outsl
adc
and
sub
test
test
ret
stc
adc
push
add
rorl
scas
movsb
out
in
sub
fldt
ret
pusha
or
mov
movsw
jg
pop
in
xchg
mov
xor
xchg
mov
cld
push
xorl
jbe
jmp
mov
xchg
or
jae
sbb
loope
sub
in
sub
cmp
cmp
jmp
add
fldcw
lahf
ja
repnz
cmp
loop
jae
mov
xor
pop
in
int
xor
push
push
aad
jl
pop
movsb
stc
repnz
sbb
and
cltd
and
dec
push
jne
mov
or
iret
daa
xchg
pushf
jbe
adc
inc
mov
ja
scas
mov
scas
je
and
jg
leave
add
sbb
pop
and
inc
add
insb
loopne
mov
stc
and
sub
negl
int
adcl
std
cmp
sub
jp
sbb
xlat
fcmovu
ja
mov
jp
and
xor
push
and
dec
testb
in
sub
cs
xor
mov
jns
add
xor
paddw
and
popf
jne
and
mov
sarb
push
mov
int
and
int
sbb
add
cld
add
mov
jns
sbb
mov
jae
sub
lret
incl
or
not
fstpt
mov
loop
adc
or
xor
scas
mov
scas
mov
and
in
or
leave
push
lret
lret
or
je
adc
stos
fs
jo
or
and
int3
and
pop
sahf
pop
movsb
ja
cmpsb
mov
jne
jb
inc
jl
inc
adc
mov
je
push
jecxz
movsb
jle
lds
fs
dec
idivb
xchg
sub
stos
xlat
inc
xchg
jmp
lods
pop
rclb
gs
stos
test
sub
mov
or
insb
push
sti
push
int3
ds
mov
sbb
xchg
and
sti
push
jno
mov
mov
inc
pop
out
add
push
repz
xchg
leave
jl
repz
mov
movl
std
outsb
inc
pop
mov
mov
xor
or
mov
jl
fstpl
mov
or
movb
in
fs
nop
push
or
sti
jmp
mov
dec
ret
dec
movsb
in
mov
testb
icebp
cmc
in
arpl
out
pop
push
mov
subb
add
rclb
jmp
aam
sub
fwait
aad
dec
ss
test
int3
fwait
pop
or
lret
and
inc
stos
inc
out
mov
daa
adc
je
lods
mov
out
cmp
add
lods
push
es
or
push
les
les
call
push
sbb
icebp
xchg
arpl
inc
je
jecxz
ljmp
lret
pop
les
cmp
push
pop
daa
push
out
inc
clc
scas
lock
fldenv
outsb
icebp
mov
and
andb
sarb
mov
xor
cmp
aad
call
int3
test
lea
adc
das
push
mov
les
mov
in
add
mov
in
mov
xchg
test
jp
or
jg
pop
and
xor
xchg
dec
stos
push
xor
xchg
mov
ret
mov
sub
or
jbe
divb
movsl
sbb
dec
jno
shll
andps
adcb
inc
leave
stos
add
jge
into
adc
je
ret
jge
add
pop
xlat
add
jg
ret
into
fisttps
shlb
mov
pop
xchg
mov
mov
add
arpl
xlat
inc
inc
decl
mov
xchg
jae
scas
cld
sub
lock
in
xorb
xchg
jns
nop
addr16
cmc
imulb
sub
xor
push
sbb
fiaddl
hlt
ds
dec
js
addr16
and
aad
xor
sbb
xlat
xchg
leave
xchg
push
fwait
dec
fistps
adc
mov
mov
xor
pop
adc
sbb
and
push
jmp
mov
push
sub
sbb
in
cwtl
mov
addr16
notl
mov
cmpb
pop
xlat
rcrl
inc
cmp
pusha
sub
test
xchg
pop
xor
xor
fsubr
sbbb
mov
dec
mov
popa
movsb
popf
sub
inc
sahf
imul
jns
inc
in
ja
sub
fcos
add
push
scas
in
pop
cmp
je
add
push
ss
pop
inc
pop
popf
pop
insl
dec
push
mov
jne
bound
out
xchg
cmpsl
out
out
fisttpll
dec
stc
jno
into
ja
jmp
fwait
dec
das
mov
sbb
roll
xor
and
push
pop
xchg
xorl
fdivs
sub
leave
mov
inc
inc
ret
mov
sbb
mov
push
inc
push
aad
add
shlb
xchg
cmp
lds
sbb
push
in
jnp
mov
inc
add
dec
mov
or
test
dec
adc
aam
jmp
test
pop
ret
push
into
jae
fstpt
sub
hlt
xchg
insl
and
pop
xor
inc
or
loopne
mov
inc
inc
adc
cli
cltd
dec
xor
jb
xchg
bound
sub
stos
mov
jmp
adc
push
pop
mov
fmuls
scas
inc
push
xchg
mov
pusha
fsts
xor
test
cmp
push
hlt
add
fiadds
int3
out
inc
ss
setbe
mov
shll
push
xchg
aad
mov
xlat
push
sbb
lds
xor
imul
pop
cli
je
adc
data16
adc
das
cmc
movsb
inc
pop
add
or
xchg
outsb
hlt
mov
movsl
cmpsb
add
cs
ljmp
loop
imul
inc
pop
inc
and
jecxz
inc
in
aam
ret
sub
jbe
sbb
cmp
sahf
sub
cltd
inc
jle
or
in
in
sbb
hlt
push
fwait
imul
popf
mov
dec
neg
addr16
adc
mov
or
dec
adc
psubb
sbb
leave
mov
mov
rclb
int3
or
lcall
mov
push
and
xor
jns
cmp
pop
sub
ja
lret
or
xchg
into
jge
orb
sarl
xchg
nop
add
xchg
cmc
iret
mov
icebp
int3
xchg
mov
loopne
add
in
lret
adc
mov
xchg
lret
fbld
xorw
iret
cwtl
ss
or
push
scas
addr16
ss
repnz
out
dec
por
insl
shrl
xchg
je
push
outsl
jmp
push
jl
dec
ds
or
sub
test
jmp
dec
es
xchg
inc
push
mov
lret
loope
mov
sbb
lret
shll
lods
lret
cs
push
mov
sbb
adc
pop
pop
or
roll
aas
sti
in
aam
std
mov
sub
push
pop
sbb
aad
ds
pop
dec
int3
sub
adc
cmp
pop
subb
sti
mov
out
leave
outsb
out
rolb
dec
or
call
das
rol
xchg
fwait
jmp
incl
popa
or
pop
outsl
jbe
mov
pushf
fnsave
imul
cmp
sbb
sbbl
or
aam
lahf
xchg
xchg
mov
xchg
mov
mov
loopne
ficoml
mov
repz
pop
daa
add
and
dec
xchg
push
pop
or
mov
cmp
inc
push
repnz
mov
and
or
lds
or
mov
jg
cmpsl
in
repz
div
loop
pop
inc
inc
and
add
cli
sub
leave
adc
lahf
arpl
adc
movsl
in
lret
jp
iret
addl
fldl
pop
sahf
adc
in
loope
ret
loope
cmp
fdivrs
idivl
pop
ret
jmp
add
add
scas
xchg
pusha
inc
andl
inc
push
popa
add
fmuls
sub
sub
or
rol
dec
lods
sub
mov
sti
das
pop
adc
xor
pop
pop
mov
mov
push
push
aam
and
jecxz
jl
fcomps
pop
jae
and
es
cmpsl
movsl
js
mov
dec
outsl
pop
test
insb
repz
fbstp
inc
or
or
dec
dec
pop
mov
pop
jge
test
push
outsl
xor
mov
iret
inc
daa
and
jnp
out
leave
stc
mov
stos
lret
inc
mov
or
push
xchg
outsb
test
fsubrs
sarb
lcall
pop
push
or
and
mov
mov
cltd
ret
cli
adc
outsb
cmpsb
mov
rclb
in
and
xchg
add
lds
mov
inc
mov
jne
fldl
cmp
out
mov
xchg
pop
xchg
das
ljmp
jb
xchg
pusha
popf
mov
das
adc
gs
cmc
fs
popf
out
insl
dec
in
xchg
cmp
and
or
lahf
fsubl
sbb
cmpsb
fwait
cmpsb
scas
into
push
out
enter
outsl
repnz
sar
repz
sbb
insl
xchg
ljmp
in
and
xor
mov
in
pop
adc
fstps
in
idivl
push
push
mov
inc
loop
notl
cltd
es
cs
daa
out
dec
adc
jg
negb
sbb
outsb
insl
mov
insb
mov
xor
fisubl
clc
sahf
dec
mov
inc
roll
add
sbb
mov
imul
xchg
sar
orl
fs
jo
inc
adc
jb
mov
enter
jno
jo
add
pop
shl
sbb
push
mov
push
push
test
inc
mov
push
repnz
fmuls
and
dec
cmp
cmp
xchg
add
out
and
sbb
lret
mov
arpl
arpl
or
fidivs
sub
fwait
mov
and
out
jb
inc
sub
pop
pop
insl
sub
push
std
bound
dec
or
imul
add
std
sbb
fbld
xorl
xchg
repz
out
leave
push
cwtl
cmp
int3
mov
or
jg
loop
xor
data16
pusha
in
addl
xor
insb
add
loope
sarb
add
ret
jecxz
mov
dec
sub
adc
daa
arpl
loopne
mov
cltd
leave
pop
fcmovnbe
xor
sbb
xor
mov
repnz
adc
adc
dec
ficompl
jle
sub
xlat
jb
bt
inc
clc
movsl
mov
and
xor
add
sub
cmpsl
pop
in
fsubrl
push
addl
subl
jne
mov
jnp
mov
nop
add
xchg
cld
mov
ljmp
ja
mov
mov
add
lcall
ret
xor
mov
jp
sbb
inc
cmp
dec
ds
or
out
outsb
adc
outsb
xorl
je
or
aam
out
adc
rolb
test
sub
dec
fildl
das
stos
dec
scas
fimuls
aas
mov
fs
in
fildl
js
sbb
hlt
and
xor
mov
xchg
sub
inc
ds
sub
adc
daa
jo
lret
adc
lds
mov
jns
mov
cmpsb
lds
jnp
or
sbbl
lret
cs
cmpsl
in
pop
sbb
std
pop
mov
inc
imull
mov
inc
lret
mul
mov
test
in
imul
mov
pop
inc
cld
movsb
sub
cmp
sub
inc
push
pop
mov
sub
pop
or
mov
testl
in
add
xchg
mov
ja
lret
pop
arpl
push
jnp
aas
mov
test
stc
pop
iret
in
inc
dec
fistpll
push
lahf
sub
jmp
fcomip
adc
mov
push
ret
out
sub
ds
xor
loope
daa
pop
push
adc
int3
jnp
sub
lret
pusha
dec
fcomp
dec
fcomps
mov
jae
gs
xor
je
nop
mov
lret
repz
pop
idivb
or
cmp
xchg
mov
jns,pn
cmp
jnp
imull
repnz
push
sti
pop
add
cld
add
into
cmp
adc
in
mov
test
xor
sbb
dec
jge
xor
sbb
iret
icebp
and
mov
mov
cltd
jnp
mov
add
mov
ret
cs
pop
mov
xor
daa
lods
sbb
pop
mov
xor
into
add
mov
fisubl
mov
in
jae
lret
repnz
xchg
jecxz
push
jmp
das
adc
sbb
fbld
insl
test
and
push
xor
stos
pop
adc
outsl
sbb
mov
mov
test
xor
sbb
ds
ja
mov
fdivrs
or
out
pop
loop
sub
dec
mov
pusha
scas
and
mov
lret
rcrb
lahf
xchg
add
test
and
lret
mov
jle
add
or
rcll
adc
sbb
sti
inc
ja
mov
pusha
dec
mov
xchg
or
shll
add
stos
aam
ss
pop
int
or
clc
lds
imul
push
sbb
sti
adc
jmp
test
lods
clc
and
testl
sub
adc
pushf
add
cmp
loope
pop
and
xchg
outsl
mov
and
xchg
in
out
cmpl
xchg
std
sub
test
push
dec
xchg
xorl
mov
dec
int3
popf
popw
and
cmp
cmp
in
push
add
lret
cmp
inc
aas
dec
pop
sub
pop
enter
aaa
xchg
sbb
test
xchg
sbb
lods
ja
jne
push
fdivrs
mov
cltd
cld
insl
imulb
inc
sub
lea
mov
pop
mov
inc
pushf
mov
jne
xchg
jno
rcrl
mov
push
scas
xchg
xchg
jle
sbb
hlt
cmpsl
scas
xor
shl
fiadds
gs
mov
sbb
jg
jp
pop
mov
test
adc
fwait
jne
testb
inc
hlt
xor
push
dec
xor
and
cld
xor
div
pop
jo
ret
cli
pop
push
icebp
cmc
pop
repnz
cs
test
cmovle
add
into
jmp
arpl
pop
pop
cmp
inc
rcl
xor
dec
jns
mov
lcall
scas
add
pop
push
outsb
xchg
and
jae
mov
faddl
mov
test
pop
insl
loop
push
sbbb
repnz
mov
push
sbb
sahf
adc
xchg
jmp
or
inc
fimuls
in
leave
inc
popa
aas
adc
pop
sbbl
mov
fsubs
pop
mov
arpl
jmp
adc
pop
cmp
cmp
fsubr
push
dec
shlb
cmp
jo
cmpb
push
jle
hlt
es
lahf
mov
aam
add
push
incl
adc
and
outsl
dec
hlt
leave
dec
flds
addr16
fists
divb
stc
mov
in
ret
filds
and
test
cmp
lcall
dec
sarl
push
xchg
mov
add
fs
icebp
test
out
imul
add
xchg
into
std
fcompl
gs
dec
sbb
xchg
roll
adc
fwait
rep
icebp
sbb
jp
ja
xor
push
insb
or
shll
icebp
cltd
mov
outsb
cwtl
xchg
push
dec
add
mov
out
aad
sub
jne
fildl
sub
insb
jle
jnp
jmp
cli
cld
test
lret
ss
xlat
test
inc
je
jo
inc
and
pop
xor
ss
sub
pushf
jecxz
cmp
stos
test
lret
dec
cld
xchg
dec
inc
in
pop
in
jns
jns
std
scas
add
dec
ret
call
sub
cmpsb
testb
adc
popf
mov
xor
mov
jb
mov
add
cmc
test
cmp
mov
xchg
outsl
fsubl
cs
mov
lcall
adc
stos
ja
pop
out
lret
test
out
fdivp
sbb
mov
lods
icebp
pop
sbb
sahf
jne
cld
mov
xchg
xchg
mov
in
shrl
mov
aas
cmp
push
les
fcoms
aam
adcb
and
sub
cs
dec
xchg
pop
sub
push
push
lret
xor
in
loopne
rcrb
inc
fbld
adc
int3
call
mov
or
mov
filds
dec
fildll
cwtl
xor
call
mov
inc
mov
ja
cmp
mov
adc
jb
fst
or
mov
cmpsb
fs
in
test
pop
push
andl
out
xor
sahf
shr
jl
xchg
jecxz
stos
popf
mov
fs
sbb
mov
lea
cmp
flds
icebp
in
mov
mov
push
fwait
adc
les
sbb
roll
jecxz
outsb
mov
mov
or
outsl
sbb
sub
pop
adcb
fldl
dec
push
sub
stc
gs
push
lcall
mov
jnp
adc
arpl
sbb
inc
fmul
or
aad
xchg
mov
les
aas
outsb
sahf
iret
stos
sti
or
jb
fdivl
lret
mov
pop
insb
adc
inc
sti
adcb
loope
push
shrl
clc
inc
pop
cmp
xchg
xchg
stos
mov
lds
inc
mov
inc
jb
mov
mov
test
xlat
jp
xchg
push
mov
xor
xchg
lea
pop
mov
inc
pop
dec
ret
xchg
sti
pushf
push
dec
pop
sti
orl
jp
jmp
jecxz
inc
sahf
dec
lds
xchg
lock
mov
add
lods
and
adc
mov
pop
xchg
push
sahf
mov
cmp
cmpsl
xor
ss
scas
sub
or
fs
test
pop
out
jle
push
sub
add
xchg
lock
pop
mov
ja
xor
mov
mov
and
adc
push
xor
popl
pop
popf
adcb
add
cmp
pop
mov
mov
sbb
insb
jbe
les
mov
jnp
es
cmp
and
xchg
and
jl
xor
or
dec
leave
jmp
jg
lds
imul
loope
out
mov
insl
in
cltd
adc
adc
subb
iret
scas
sub
enter
mov
xchg
je
cmpsb
lods
repnz
mov
adc
xchg
bound
adc
js
sbb
aad
dec
stc
sti
xchg
das
fildll
fldl
stos
sub
sbb
aaa
in
xchg
aad
adc
mov
addl
sbb
test
or
mov
or
loope
sarb
cmpsb
lret
inc
stos
ss
dec
push
enter
inc
xchg
jp
mov
pop
push
mov
mov
fisttps
pop
jecxz
sub
mov
cmpsl
push
gs
fsub
bound
xchg
out
sbb
movsb
shr
faddp
dec
test
movsl
dec
add
add
enter
or
xchg
inc
bound
jl
sbb
out
jge
push
idiv
test
stos
int
push
sbb
lods
sar
mov
fistl
lods
cmpsb
dec
mov
jno
popf
xchg
add
fists
aas
mov
into
ret
iret
repnz
and
ret
adc
mov
push
es
push
add
adc
lock
test
inc
jae
shl
mov
inc
loop
aaa
cmp
adc
pop
ljmp
pop
add
or
pop
ljmp
clc
addr16
nop
add
push
lock
cmp
pop
or
push
int
pop
cli
stc
stos
xor
loope
jecxz
and
sub
movsl
jmp
lea
mov
stc
repz
lcall
mov
icebp
int3
aaa
push
pop
movsl
dec
adc
fisttps
xor
insb
inc
inc
mov
cmp
fists
lcall
push
aaa
sbb
sarl
ret
push
pop
push
mov
cmpsb
out
mov
fidivl
push
add
mov
pop
pushf
scas
cmc
adcl
test
loopne
mov
std
das
sbb
dec
mov
mov
add
xchg
adc
pop
dec
imul
jbe
je
fprem1
add
movsl
cmpb
into
and
aad
jbe
fbstp
fcoms
sbb
movl
out
lds
or
mov
pop
add
cwtl
xlat
jecxz
adc
notb
cmpsl
pop
mov
xor
outsl
add
pusha
lods
or
cmp
sbbl
mov
xor
cltd
test
into
mov
in
ret
pop
push
mov
lods
push
jg
outsl
jmp
cmp
adcl
outsb
cmp
movsb
cmpsb
push
test
fcmovnb
mov
sub
xchg
daa
pop
jbe
fists
adcb
push
push
add
inc
push
subl
mov
xlat
mov
xchg
xor
mov
xchg
data16
hlt
push
push
fsub
jnp
xor
in
hlt
fstps
mov
imul
xlat
subb
push
and
mov
dec
mov
jo
and
mov
cmp
mov
in
mov
add
jp
clc
stos
sar
xchg
lds
push
inc
mov
loopne
mov
aas
lods
pop
addb
rcrl
mov
dec
fistl
and
jmp
xor
mov
leave
jecxz
sub
xor
hlt
leave
cmc
in
mov
cmp
into
pushf
dec
fwait
xor
in
subb
sbb
jo
lret
xor
sub
mov
shlb
pop
daa
inc
pushf
sub
or
call
subb
jecxz
add
push
mov
cmpsb
addr16
clc
cld
scas
cli
iret
dec
jge
xchg
incb
fmull
jg
ret
insb
popa
ret
std
hlt
icebp
mov
or
std
mov
fnstenv
add
repnz
repz
push
inc
cmp
ja
push
dec
mov
mov
mov
sbb
inc
xchg
xor
and
cli
push
arpl
sub
inc
rcrb
mov
clc
call
mov
int3
dec
gs
enter
mov
dec
test
cld
xlat
ljmp
ljmp
mov
or
or
lcall
test
addr16
imul
fidivrl
repnz
pop
js
adc
xchg
jnp
das
mov
shlb
int
mov
sbb
stos
sbb
xor
pop
and
call
insl
mov
push
pop
sub
mov
inc
xor
push
cmc
lds
mov
cs
imul
push
test
outsl
sbb
test
mov
mov
inc
xchg
dec
pop
and
xor
cmpsl
adc
pop
rclb
cwtl
sarb
aam
call
mov
xor
es
xor
push
sub
pop
test
ret
ljmp
sbb
pop
mov
movsb
xchg
jo
fists
nop
popa
cmp
mov
fstpt
enter
or
mov
xchg
jge
add
xchg
add
je
enter
mov
cmc
xchg
xor
xchg
ljmp
cmp
inc
xlat
roll
jno
loope
fisubs
pop
in
arpl
imul
mov
aaa
cmp
icebp
insl
daa
mov
loop
adc
mov
mov
test
nop
pop
mov
push
stc
insl
pop
pop
std
pop
repz
stos
and
jnp
pop
ret
fistps
cmp
jae
cld
leave
pop
mov
ror
push
lret
xor
add
enter
adc
jg
pushf
aas
push
adc
push
fucom
push
mov
ret
push
sub
insb
test
lds
outsb
popf
in
and
push
das
push
add
in
mov
xlat
cmpsb
sub
out
lds
es
jg
int
fmull
mov
mov
shlb
mov
mov
mov
mov
dec
popf
sub
es
xor
orl
pop
mov
insl
mov
jle
sub
cmp
int3
daa
push
not
repz
scas
xor
fistpll
mov
pop
mov
and
mov
mov
ds
pop
sbb
add
cmp
jecxz
xchg
dec
sbb
jns
call
adc
cmpsb
mov
outsb
xor
add
push
push
mov
gs
add
jle
xchg
lahf
pushf
loope
fidivl
inc
dec
mov
xor
add
jp
movsl
pop
out
aam
aam
ja
or
xchg
xor
outsb
sbb
sbb
repnz
inc
out
aaa
or
mov
inc
adc
movsb
dec
mov
int3
and
scas
and
dec
push
and
fadds
mov
sub
push
popa
test
or
idivb
aad
dec
fmulp
xchg
mov
lods
cwtl
and
dec
js
ret
loope
movsl
push
or
cltd
insb
movl
push
adc
xchg
lods
test
cmp
jecxz
xchg
lds
sbbb
mov
mov
mov
not
or
xor
or
sub
loop
fwait
adc
mov
pop
adc
jecxz
sub
xchg
sub
push
lcall
sbbl
bound
mov
add
negl
andl
scas
lock
loope
out
stos
mov
movsw
inc
sbb
lods
mov
and
fstps
sahf
mov
push
push
mov
test
iret
in
cwtl
sbb
fisttps
mov
pop
sbb
push
in
and
mov
or
push
add
bound
xchg
fimull
add
dec
cmpsl
test
add
and
mov
and
xor
mov
xchg
lea
mov
inc
lods
sti
ret
jno
iret
lds
mov
push
cwtl
fldcw
les
mov
sbb
dec
mov
gs
fists
xchg
das
jp
sbbl
inc
ret
adc
les
and
hlt
mov
sub
mov
jle
imul
mov
or
xchg
cmp
or
lahf
mov
jns
xlat
dec
jle
dec
je
sub
in
and
xlat
insb
mov
xchg
ljmp
sub
pop
cmp
cmc
call
push
mov
xor
int
addr16
adc
mov
sub
xchg
push
pop
jo
addl
add
cwtl
roll
mov
int
dec
out
outsl
gs
std
cld
aaa
gs
mov
sub
out
divl
fcoms
xor
nop
stc
cmpsl
mov
xor
jbe
iret
cmp
lods
gs
bound
fs
addl
sbb
das
aad
insl
jg
cmpsl
cmp
in
popa
xchg
mov
adc
movb
add
scas
cmp
jge
mov
cld
imul
push
adc
pop
aaa
sahf
sbb
mov
mov
shll
into
and
push
ds
test
imul
or
cmp
sahf
enter
mov
cli
mov
pop
add
outsl
cmp
mov
fadds
dec
dec
sbb
arpl
mov
ret
test
lods
pop
inc
loop
xor
pop
sbb
xlat
les
loope
out
pop
xor
sbb
xchg
lahf
cld
ja
inc
out
push
rol
adc
or
pop
lea
bound
mov
loopne
hlt
cwtl
sti
test
or
cmpsl
cmp
aad
pop
das
xorb
mov
rclb
sbb
test
mov
xor
cmpsl
jbe
loopne
lret
pop
int3
jecxz
inc
je
shrl
adcb
icebp
in
arpl
imul
push
add
sbb
jp
sbb
xlat
hlt
movsl
ret
mov
mov
sbb
jbe
out
ret
iret
dec
xchg
pop
jbe
ja
mov
in
pop
jp
ret
mov
cmp
pop
adc
push
movsl
xchg
enter
dec
test
fwait
add
insb
mov
xchg
cmp
adc
out
push
mov
mov
loop
aas
xor
cmp
xchg
xor
in
pop
andb
clc
inc
push
mov
push
xchg
jge
testb
fadds
incb
in
jg
jg
add
shrl
push
sbb
mov
cld
mov
dec
push
leave
enter
and
pop
mov
or
rcr
pop
pop
inc
jae
jns
jmp
mov
dec
mov
cli
or
sahf
pop
dec
mov
fucomip
les
ret
popa
push
push
sbb
jp
bound
dec
jae
mov
push
add
aam
movsb
cmp
stos
mov
loope
mov
push
mov
jne
bound
add
mov
cmp
adc
adc
popa
mov
sbb
pushf
data16
adc
aaa
push
cmp
mov
insl
bound
mov
orl
insl
sub
nop
imul
ljmp
pop
inc
push
in
pop
arpl
ds
lods
sahf
aad
push
pusha
fiaddl
sbb
jp
xlat
dec
insb
pop
movsb
and
inc
insb
lods
cli
aas
adc
cmp
add
jp
xchg
sub
addr16
xchg
push
cmp
aas
movb
adc
fbld
iret
push
xchg
xchg
add
pop
outsl
lret
jp
xor
leave
ficompl
bound
sahf
test
shlb
outsb
xchg
cmp
in
loope
test
push
in
scas
dec
adc
test
dec
nop
push
scas
je
rorl
cwtl
xor
push
enter
insb
iret
lret
pop
mov
inc
mov
pop
inc
pop
pop
leave
mov
adc
push
mov
sub
and
jno
push
arpl
and
cmp
out
and
or
add
fnsave
filds
mov
xchg
popa
pop
and
xchg
cs
sahf
cmp
or
test
mov
cmc
in
icebp
movsl
testl
fs
push
jl
es
jge
push
sti
push
ret
ja
adc
sbb
dec
pushf
or
int3
xchg
popa
mov
mov
cli
xlat
xchg
fistpl
adc
jno
mov
ljmp
shlb
in
shll
inc
cmp
jae
cmc
cwtl
lock
in
lret
inc
iret
stos
out
pop
dec
sub
cmpsb
sbb
adc
int
xor
das
les
lods
push
stos
xor
movsl
cmpsl
xchg
lret
sahf
lock
mov
mov
rcrb
jmp
inc
add
nop
repz
push
stos
xor
rcll
lret
rcll
sub
xor
or
scas
in
jnp
mov
mov
sbb
xchg
stc
gs
les
imul
enter
mov
push
cmp
out
cmp
add
lahf
and
dec
in
std
xor
cmp
jno
rolb
adc
ret
pop
adc
adc
sbb
sub
into
js
decb
jns,pn
notl
mov
push
dec
xor
mov
sbb
int
repnz
into
hlt
mov
mov
jne
inc
fsubp
loope
xor
in
add
pop
outsb
add
or
jne
mov
pushl
cmpsb
inc
or
inc
pushf
mov
sub
stc
ret
adc
jne
es
scas
mov
cs
jmp
fsubrl
jecxz
ret
pop
dec
add
lods
dec
aam
lock
mov
or
add
mov
lcall
push
jmp
stos
ja
and
cmp
sbb
xchg
cmpsb
push
movsl
xchg
out
push
mov
xor
in
push
call
cld
sub
inc
fwait
shlb
push
push
mov
dec
imul
mov
and
mov
addr16
jecxz
pop
adc
inc
fisubl
add
into
pop
lcall
mov
pop
sub
pop
jmp
or
xchg
sub
fimull
cmp
add
pop
pop
imul
lock
sub
and
fucomip
xchg
stc
mull
ss
add
dec
mov
shrl
outsl
add
daa
jne
xchg
sub
in
inc
push
enter
int3
dec
cwtl
jo
aas
lahf
xchg
imul
mov
mov
cli
sbb
sub
test
pop
adc
push
imul
mov
dec
and
push
dec
cmpsb
pop
mov
addr16
jge
lods
add
mov
xor
test
pushf
faddl
xchg
push
cmp
icebp
sub
mov
bound
sub
outsl
andb
push
inc
stc
jp
repz
mov
mov
bound
mov
int
sub
imul
loop
fdivrl
xchg
xchg
jne
loop
imulb
test
pop
aaa
roll
xor
xchg
xor
mov
daa
mov
gs
pop
sub
mov
dec
lods
pop
cs
mov
mov
lea
and
test
sbb
add
es
mull
pop
dec
loope
inc
and
rcll
cmp
ret
inc
lods
rcll
icebp
pop
iret
xchg
jp
jo
fs
les
repz
jle
clc
mov
mov
insl
dec
mov
sub
sbb
test
cmpsl
or
pop
inc
mov
xchg
cld
loope
dec
mov
mov
mov
mov
cltd
rol
jle
push
fstps
jmp
icebp
call
and
out
cld
mov
imul
mov
test
sbb
sbb
sar
pop
push
or
ret
cmc
xchg
pop
xchg
push
push
jae
xchg
add
outsb
out
xor
add
jnp
movsl
sub
pop
push
jnp
and
out
sbb
pop
fisttpll
cli
jno
jno
pop
mov
stc
jl
lret
sub
pop
leave
mov
xchg
stc
xchg
xor
sbb
fwait
and
cli
push
inc
mov
test
std
or
dec
push
insb
cmp
push
xor
jle
insl
push
in
fcoml
xchg
repz
call
sarb
aas
movsb
daa
aad
or
pop
aas
ret
in
lret
inc
pop
mov
push
mov
fs
ret
push
jne
add
divb
sbb
cmp
xchg
iret
imul
mov
and
and
jle
mov
mov
int3
das
inc
ret
out
imul
aam
mov
cmp
and
test
rcrl
push
pop
popa
lahf
xchg
iret
test
int
push
decl
js
stos
cmp
rorl
push
push
lret
xor
fcmovne
cld
dec
loope
mov
stc
mov
xlat
fnstsw
inc
pop
lea
add
and
jno
or
lock
xchg
mov
pop
push
or
pop
lock
popa
inc
sub
jp
sub
in
inc
movsl
add
aam
sub
fisttps
mov
cld
mov
gs
cmc
push
sbb
adc
outsb
sbb
scas
dec
loop
adc
mov
jl
dec
pop
mov
inc
sub
out
lret
push
sti
mov
or
push
lret
test
xchg
test
and
testl
aaa
subl
inc
pushf
loopne
mov
scas
pushl
and
pop
xor
mov
fnstcw
lahf
in
or
movsb
dec
push
cmp
xor
dec
inc
pop
jge
sti
pop
sarb
nop
push
lds
sbb
sub
pop
mov
nop
out
jecxz
lcall
pop
jmp
xlat
mov
xchg
in
lea
test
mov
daa
xchg
or
jne
jg
dec
lods
mov
push
fidivl
jmp
pop
dec
mov
daa
mov
dec
push
shlb
mov
mov
sahf
subb
stos
call
xorb
fstps
daa
push
adc
xchg
xor
jmp
sbb
inc
xchg
loope
pop
repz
imul
aas
daa
iret
cmp
adc
xchg
inc
and
xlat
mov
cwtl
sub
arpl
scas
lock
outsl
jecxz
icebp
inc
jmp
push
lea
ds
jg
mov
or
pop
push
adc
pop
sbb
jbe
clc
nop
mov
jae
and
loop
ja
pop
mov
nop
fsubrs
iret
cmp
cld
xor
xchg
rcl
and
sahf
in
xor
in
inc
adc
sub
mov
push
pop
jecxz
mov
push
test
ret
jns
mov
adc
push
out
fs
or
cmp
imul
je
mov
inc
dec
out
out
loop
push
inc
loopne
sbb
std
and
lcall
sub
dec
rcrb
xchg
mov
cs
xchg
jecxz
sbb
outsb
out
pmaxub
push
cmp
lret
test
mov
xor
adc
xchg
mov
es
xchg
addr16
mov
jno
int3
jmp
pop
fwait
insl
or
out
adc
and
jns
pushf
sbb
das
sbb
or
xor
mov
lret
pop
cmp
in
and
fwait
xlat
subb
arpl
lret
in
push
les
fists
rclb
sbb
stos
lcall
je
scas
fcomip
jp
fsts
pusha
push
shll
test
jge
frstor
and
dec
cmpsb
jns
mov
push
jge
jecxz
and
sbb
repnz
int3
xor
ret
cmp
sub
stc
aas
int3
lret
repnz
cmpsb
sbb
sbb
mov
in
insb
pop
cmp
add
xorl
sub
in
mov
dec
lcall
call
daa
pop
inc
xchg
fsubrl
mov
pop
jg
js
flds
cmc
pop
cmpb
lret
or
mov
es
push
ficomps
scas
pop
fsts
add
cs
loopne
movsl
rorl
cmc
and
add
push
mov
dec
sbb
push
and
push
dec
stos
clc
sub
and
mov
ret
enter
xchg
mov
cmp
mov
mov
sbb
jecxz
fisttps
pushf
or
mov
ret
jle
xor
pop
xor
xchg
stos
push
mov
jne
push
into
add
push
pop
out
mov
cmp
aam
xlat
adc
pop
and
adc
sub
ja
sub
ret
test
sbb
fs
orb
sub
cmp
stc
dec
sti
dec
xchg
xchg
dec
xor
fwait
addb
sbb
inc
pop
mov
jl
sub
adcl
mov
dec
push
gs
push
cmp
and
fsubrp
clc
lea
shrl
or
mov
and
xlat
sahf
jne
outsl
add
add
and
xor
xchg
setge
int3
cmc
xchg
xchg
incl
dec
sub
pop
cli
pusha
mov
xchg
xor
loopw
fiaddl
and
movsl
dec
and
insl
push
loope
nop
add
js
pop
in
popa
jp
pop
cmp
fcomps
xor
or
arpl
xchg
mov
ss
dec
sti
data16
es
arpl
inc
xor
gs
inc
stc
cmpsb
jne
dec
jne
add
pop
xchg
jnp
xor
iret
mov
dec
push
mov
cmp
xchg
and
lds
popa
add
xor
mov
sti
es
in
pushf
insb
or
imul
inc
jmp
pop
mov
cwtl
lahf
jle
add
movl
jbe
daa
scas
push
push
xchg
jbe
sbb
sbb
push
or
sub
mov
dec
mov
outsl
push
add
gs
xor
mov
mov
fisubrs
inc
or
xlat
sti
jl
and
out
or
sbb
jl
pop
int
push
outsl
and
push
mov
cmp
cmp
aaa
lahf
adc
push
sbb
push
pop
add
es
fcoml
imul
sarb
in
mov
jnp
adc
mov
xchg
push
mov
mov
mov
dec
aam
out
and
mov
pop
mov
popa
dec
scas
jp,pt
sbb
mov
add
stc
mov
xorl
sets
fimull
in
cmp
testb
jle
addr16
out
in
jbe
js
fiaddl
dec
inc
mov
andl
cmpsl
sub
cwtl
jno
add
clc
jecxz
into
loop
pop
push
jo
div
out
jae
sete
mov
mov
mov
sahf
lock
mov
outsl
loopne
aad
adc
and
add
push
mov
jne
xchg
int
mov
loop
jle
jno
fstl
fwait
test
push
test
test
mov
in
addb
js
mov
cmp
mov
cmp
inc
loop
fisubrs
push
adc
cmpsl
orb
mov
push
icebp
mov
es
adcl
in
frstor
sub
leave
icebp
adc
rolb
shl
int
divl
in
xor
jecxz
rcrb
adc
hlt
scas
call
jns
in
mov
icebp
adc
lods
leave
pop
ret
mov
clc
cmpsb
fxch
scas
cmp
xchg
cmp
loope
and
in
push
arpl
inc
pop
mov
fldcw
mov
ljmp
inc
push
jnp
adc
mov
test
lea
lret
shr
ja
jg
test
in
std
arpl
sub
mov
jne
jge
insb
pop
mov
test
cmc
xor
xlat
mov
xchg
pushf
mov
and
jb
out
mov
xor
dec
icebp
pushf
jecxz
and
leave
negb
dec
inc
lret
jnp
pop
push
fs
cltd
lcall
clc
pushf
jns
inc
jnp
jge
pop
xlat
mov
mov
xchg
mov
lods
push
push
mov
and
outsb
fcomip
loope
dec
pusha
and
in
mov
outsb
in
sub
in
push
push
mov
fisubl
sub
in
dec
mov
sbb
push
push
test
mov
comiss
xor
sub
cmp
ret
lcall
mov
mov
or
cmp
pop
sub
cmp
add
push
xchg
scas
xchg
cmp
lock
adc
xchg
adc
cmp
and
movsl
scas
adc
fcmovnb
fyl2x
mov
iret
aaa
inc
fwait
or
out
loopne
or
icebp
inc
jl
mov
sti
adc
push
dec
iret
push
data16
sub
sub
or
lret
push
pop
pop
jns
mov
mov
ja
lods
popf
mov
idivl
in
loopne
lds
daa
ja
ret
test
push
mov
adc
push
test
add
sbb
repnz
dec
cwtl
jb
in
lods
push
iret
pop
fnstsw
cmpsl
add
mov
mov
iret
test
test
push
in
xchg
test
or
addr16
jo
test
and
loop
pop
jmp
mov
dec
das
mov
and
xchg
cmpsb
jp
shrl
sbb
cmp
push
stos
mov
xor
or
call
or
mov
es
mov
into
dec
stos
pop
pusha
add
aaa
bound
pop
xchg
sbb
cli
ja
in
fs
aas
dec
orb
aad
add
push
leave
in
in
xlat
add
pop
fnsave
mov
and
lcall
sbb
pop
inc
test
pop
mov
or
xchg
lahf
lcall
cmpb
int3
mov
fsubrs
mov
outsb
inc
push
adc
sub
aam
jg
pop
cmp
pop
shrl
aas
and
mov
adc
dec
cwtl
testb
sbb
or
adc
pusha
add
adc
or
nop
cmp
cmp
mov
shl
bound
add
incl
arpl
scas
in
or
cmp
inc
adc
push
sub
pop
leave
mov
aam
mov
je
mov
push
outsb
sbb
inc
cmp
pushf
sbb
add
pop
sub
ljmp
insb
mov
jns
and
inc
ljmp
inc
aas
pushf
jae,pn
sbb
fisubl
xchg
ds
es
adc
sub
imul
jle
or
push
mov
cltd
xchg
testl
push
outsb
pop
out
inc
mov
pushf
test
rol
test
sbb
int
stos
dec
mov
pushl
or
mov
test
jae
sbb
call
bound
and
xchg
ret
call
jl
sub
jmp
lods
add
inc
popf
inc
sahf
or
lret
imul
xor
mov
das
repz
fsubl
movsb
fistpl
pop
xor
xor
inc
enter
jecxz
pusha
repz
adc
mov
dec
and
jmp
xchg
inc
std
out
loop
into
xor
popf
shl
sub
mov
cwtl
jbe
sbb
push
iret
and
js
pop
xchg
dec
xchg
in
push
test
mov
cmp
jno
orps
push
mov
adc
adcl
lret
dec
mov
inc
push
xchg
les
das
or
cmc
and
xchg
mov
mov
xchg
xor
daa
mov
sbb
push
jne
cmp
ret
push
shl
pop
out
ljmp
stos
pusha
xor
adc
ficompl
mov
and
mov
daa
inc
test
outsb
iret
xchg
mov
call
cmpl
rclb
les
push
inc
mov
inc
shlb
popa
fucomp
inc
roll
sub
inc
dec
mov
lea
jbe
adc
into
bsr
jbe
push
enter
sub
data16
pop
lds
dec
aam
adc
sbb
popf
push
mov
enter
mov
add
pusha
pushf
adc
push
ret
and
pop
pop
jnp
push
test
cmp
std
cmp
dec
dec
shrl
jp
and
and
sahf
pop
push
rclb
mov
jle
shll
jae
cmc
cmpsl
adc
mov
jl
in
out
nop
xchg
jo
pop
movb
lds
xchg
es
ret
test
and
out
pop
push
pop
lret
jbe
add
xor
lret
js
push
cmp
sub
dec
adc
out
rolb
pop
daa
mov
aad
pop
mov
mov
or
push
ficoml
mov
daa
jle
repz
jge
dec
jno
jno
push
cmpsb
mov
fisttps
in
cli
push
test
testl
sbb
cmp
push
push
int
filds
pop
aad
out
inc
inc
fcomps
mov
push
jae
adc
jge
push
sub
jp
cmp
imul
inc
je
xchg
or
push
push
les
dec
jno
sbb
pop
outsb
xor
and
rolb
es
lcall
insb
push
fldt
add
mov
test
dec
cs
mov
mov
mov
in
and
cltd
add
fidivrl
bound
shrb
pusha
popa
cmc
in
adc
outsl
mov
pop
loopne
test
outsb
push
cmpsl
imul
add
clc
insl
in
movsb
xor
xlat
in
fdivp
scas
mov
lods
or
ja
sarb
int
cmpsl
loopne
push
dec
jns
jp
sbb
mov
xor
jbe
push
das
add
pop
in
out
insl
mov
lock
insl
orl
cwtl
pop
sub
inc
pop
out
inc
cmpl
out
or
in
pop
or
in
ja
xchg
popf
adc
popa
mov
xchg
mov
inc
stc
sarb
push
flds
insb
stos
xor
sti
andb
leave
dec
popf
cltd
es
test
cld
inc
push
xchg
cwtl
add
in
add
pop
sbb
push
iret
adc
dec
jbe
mov
jnp
pop
mov
sub
xchg
push
inc
push
into
xchg
sub
mov
repnz
mov
ret
subb
cltd
clc
cmp
pop
dec
int3
sbbl
pop
mov
add
jae
arpl
lret
fcoml
addr16
dec
push
int
out
mov
push
mov
imul
call
xor
ficomps
mul
mov
stos
in
repz
ja
lret
or
sbb
and
mov
je
cmpsl
pop
out
pop
jge
dec
dec
or
pushf
push
dec
arpl
aaa
dec
call
test
out
shrb
and
stos
add
sbb
push
hlt
ret
and
pop
sbbl
std
jmp
xor
imul
dec
xchg
mov
inc
js
dec
in
ffreep
inc
pop
dec
stc
ljmp
leave
sbb
pop
fucomip
jne
xchg
cmpl
pop
clc
les
mov
push
lea
scas
stc
adc
popf
sahf
out
mov
ret
mov
xchg
cmpsl
add
cwtl
rolb
stos
nop
pusha
dec
test
es
mov
dec
mov
cmp
lock
icebp
sub
inc
add
hlt
imul
mov
aaa
xlat
iret
xor
xor
mov
jle
xchg
movsl
loop
and
call
lea
mov
nop
test
pop
xchg
iret
lea
stos
std
mov
mov
mov
cld
mov
jecxz
mov
outsl
rolb
fstp
arpl
negl
sarb
in
jl
add
pop
inc
stos
xchg
or
mov
cmp
das
ljmp
data16
mov
pop
mov
xchg
pop
cmp
xchg
inc
or
sub
jnp
mov
dec
sub
mov
push
es
pusha
shl
sbb
inc
scas
inc
icebp
stos
fs
or
jmp
pop
or
adc
or
and
cpuid
sub
jne
mov
lock
push
mov
sarl
sbb
cmpsb
enter
xlat
shlb
loop
test
aad
mov
loopne
mov
jo
into
jp
push
and
xor
mov
in
adc
add
jae
mov
out
iret
mov
dec
ret
push
xchg
shll
adc
xlat
or
mov
mov
fstpt
mov
jno
pusha
imul
dec
in
stos
ffreep
add
push
or
dec
stc
or
mov
mov
dec
mov
or
int3
fdivrp
repz
daa
pop
xchg
cwtl
ret
push
insl
js
mov
aam
test
aam
ljmp
jl
aas
pop
cmc
jmp
dec
jae
mov
xchg
test
test
popa
rcrb
bound
pop
and
and
or
pop
jmp
mov
xor
mov
lock
push
add
notl
xor
fldl
test
test
adc
or
loopne
mov
jbe
cmp
cld
cld
idiv
or
rcll
cmp
jns
mov
into
jo
test
xor
in
rorl
insb
xchg
lret
inc
int3
adc
xchg
jl
pop
fistl
add
neg
add
jge
outsl
test
outsb
ret
adc
cli
pop
mov
dec
pop
test
test
pop
fnsave
dec
bound
xor
fdivs
fs
movntq
out
or
push
jmp
fldcw
in
shlb
push
mov
call
mov
mov
cmpxchg
mov
cmpsl
sub
jns
mul
into
mov
sub
fisttpl
lcall
jno
mov
clc
mov
add
xchg
stos
xor
pop
push
js
fstl
jl
push
fsubrl
add
lret
push
jmp
jl
mov
push
insb
or
arpl
mull
in
jl
inc
stos
cmpsl
data16
mov
bswap
vphaddbd
lea
mov
or
push
and
arpl
jmp
rcrl
lcall
repnz
dec
stc
push
jp
adc
add
mov
dec
mov
mov
clc
push
pushf
fiaddl
xchg
outsl
arpl
lcall
mov
pop
or
pop
test
push
xor
loop
movsl
imul
jecxz
adc
cmp
inc
loopne
out
cmp
call
xchg
aas
mov
push
fidivrl
js
iret
int
push
mov
jns
test
lret
in
mov
sbb
pop
add
cmp
int3
sarb
xlat
inc
into
mov
das
cmpsl
sub
inc
lret
cli
xchg
adc
xchg
cmp
add
mov
loopne
pop
out
es
push
dec
inc
aaa
mov
sub
fildll
nop
lods
loop
jb
or
mov
add
inc
pusha
repnz
mov
mov
add
aam
xor
lret
outsl
cltd
sub
adc
in
cmp
shlb
ud0
lcall
mov
movsl
and
cmp
push
and
das
xor
cmpsl
or
add
sbb
cmp
cld
fidivl
cs
sbb
adc
mull
mov
aad
fs
inc
push
je
inc
fidivs
push
popa
imul
jge
sbb
shll
dec
adc
inc
pop
pop
sub
and
pop
xchg
lret
sti
mov
aas
scas
jbe
jp
mov
outsl
jmp
out
push
push
data16
cs
xor
icebp
mov
and
mov
mov
cmp
sub
fsubrs
mov
pop
jl
sub
dec
repnz
enter
lods
sub
adc
sbb
scas
gs
cli
prefetchw
jmp
loop
stos
mov
mov
dec
sbb
add
xchg
arpl
or
stos
pop
cmp
stos
pop
sbb
push
repz
xchg
jp
loop
adc
adc
sbb
mov
pop
cli
mov
leave
cmpsb
cmp
mov
pop
sbbb
fimull
jmp
push
dec
aaa
and
pop
push
fidivl
inc
pop
shrl
mov
cmp
subl
mov
loop
ficoms
loopne
lods
fisubrs
popa
mov
push
cwtl
lret
dec
push
call
push
dec
mov
jno
test
hlt
adcb
insl
sbb
jle
popa
into
add
data16
xchg
arpl
adc
ljmp
aam
rolb
enter
fnstenv
sub
adc
into
jg
test
iret
sarb
pop
mov
jno
je
push
mov
addb
jns
mov
and
cltd
lds
mov
dec
fisttpl
push
xlat
lcall
and
jg
xlat
faddp
sbb
push
or
das
xchg
outsl
popf
pmaxub
cmp
jle
je
cmpsl
orb
xor
aas
mov
xchg
repnz
mov
fst
adc
xor
or
sti
sub
sub
sub
or
jne
into
pop
shr
ljmp
cmp
das
push
jle
pop
cs
and
and
inc
pop
pop
adc
subl
movsb
loopne
jo
jmp
dec
arpl
jmp
jecxz
mov
cmpsb
loope
loope
daa
adc
sbb
data16
mov
rcrl
fisttpl
mov
xor
mov
or
pusha
mov
mov
iret
xor
cmpl
es
jns
leave
pop
add
bound
lock
dec
xchg
mov
jo
inc
shrb
mov
pop
mov
push
and
mov
xchg
or
std
into
xor
jl
fwait
sub
push
adcb
nop
xchg
pop
push
scas
push
jmp
int3
in
jmp
rcrb
mov
add
mov
cmp
lret
loopne
adc
test
pop
aaa
mov
sub
jmp
dec
pop
lret
jl
cmp
add
rcrl
xor
or
js
jecxz
jl
mov
rolb
cwtl
xchg
je
mov
push
mov
adc
jl
stos
dec
dec
inc
fdivr
int
push
xchg
lock
fs
xchg
and
adc
mov
sub
ret
in
add
clc
ret
popa
add
xchg
loope
jle
scas
daa
dec
jo
adc
rolb
pop
sub
inc
dec
sub
loope
and
loopne
mov
ret
pop
adcl
xchg
push
out
or
jbe
imul
das
push
fldcw
mov
ret
out
push
arpl
pop
jmp
pop
mov
test
test
and
sbb
inc
mov
mov
vmwrite
cmpsl
push
cmc
xlat
mull
and
push
cmp
push
je
push
in
pop
fildll
pop
inc
repnz
pusha
ljmp
loop
sbb
inc
shll
mov
add
mov
out
or
cwtl
stc
xchg
cmp
cmp
pop
cltd
sub
add
sbb
popf
cmp
and
gs
adc
mov
cmpsb
dec
jnp
sub
es
stos
dec
mov
fnsave
xor
jg
sbb
je
sbb
shlb
popf
mov
dec
mov
sahf
and
xchg
je
inc
push
mov
or
mov
loopne
sub
imull
dec
xor
fbld
loope
inc
add
mov
outsb
and
das
ja
addl
mov
add
dec
add
sbb
or
test
sub
or
push
incb
outsl
pop
mov
mov
hlt
and
mov
mov
popa
sbb
mov
cmp
and
jnp
sub
mov
lock
test
sub
fucomip
adc
ja
sahf
ss
inc
mov
mov
fmul
cwtl
cmp
arpl
lcall
push
push
cwtl
mov
sub
in
cmp
pop
sarb
nop
sub
mov
xchg
mov
pop
xchg
or
cltd
lock
mov
scas
mov
sub
ljmp
daa
test
push
jno
lea
shll
mov
cmp
jno
js
push
scas
push
enter
ss
aas
sti
pop
inc
push
and
scas
add
and
pop
cmpb
cli
loopne
xchg
cld
jmp
in
fidivrs
mov
jp
adc
frstor
or
pop
mov
xlat
or
aaa
int3
sarb
mov
ret
add
push
push
cli
int3
int
fninit
das
pop
inc
decb
cmp
or
movsb
popa
and
jmp
into
lods
dec
arpl
into
dec
pusha
pop
dec
jnp
sbb
call
mov
sub
enter
iret
into
xor
imul
shll
andb
add
loop
jns
xchg
cs
enter
adc
cmpl
xchg
mov
inc
dec
adc
jno
or
aad
lret
pop
daa
sub
push
mov
subl
cmc
adc
jno
cmp
jo
mov
in
stc
xchg
xchg
aas
pop
jmp
ljmp
stc
out
in
arpl
aam
sbb
lods
jno
in
and
and
lock
ret
ret
into
idivl
cmpsl
mov
inc
imul
pop
daa
push
outsl
fwait
xchg
add
pop
mov
sbb
les
pop
mov
cli
mov
mov
mov
xchg
lret
mov
add
mov
sbb
ja
mov
inc
scas
loope
xchg
xorl
iret
jmp
lea
js
mov
outsb
sbb
mov
jb
pop
mov
pop
dec
push
leave
cli
sbbl
cmc
scas
add
loope
xlat
movsb
or
je
and
push
xor
shlb
mov
loop
call
mov
mov
out
leave
jg
cmpsl
inc
cld
jnp
jae
out
int
xchg
jno
addl
inc
cmp
testl
ret
daa
popf
in
fstl
xlat
mov
xor
adc
scas
out
xchg
push
jmp
pop
stos
inc
aam
push
mov
push
fcmovnu
in
fmul
inc
pusha
add
call
ud1
hlt
or
dec
mov
jg
cmp
add
scas
cwtl
lea
or
imul
push
jp
movsb
push
jg
sbb
cmp
adc
cmp
xor
dec
mov
std
inc
aas
jp,pt
cmp
jl
sub
js
int3
jne
ljmp
push
dec
outsl
pop
pop
xchg
cmc
inc
or
add
xor
repnz
jg
cmp
cmp
cs
adc
stos
movsl
adc
and
xlat
fcmovne
xor
jmp
push
es
and
scas
xchg
and
stos
jbe
adc
xor
adc
mov
sbb
cmc
push
ds
dec
sbb
pop
jmp
arpl
std
lret
rolb
insl
xchg
popf
sub
ret
ficoml
out
mov
mov
mov
sub
add
lahf
js
mov
stos
xchg
cmp
loopne
ss
lock
cld
lea
sbb
xor
jo
cmp
mov
rclb
sub
arpl
outsl
or
sahf
xchg
sti
pop
mov
xchg
es
inc
mov
cmc
dec
xor
loop
mov
leave
add
test
shlb
adc
std
icebp
lret
xlat
data16
add
pop
mov
push
xchg
mov
mov
cmpsl
mov
call
push
pop
imul
popa
pop
sbb
pop
dec
aad
mov
sbb
repz
subb
sub
cmp
movsb
shl
add
gs
iret
jo
mov
mov
in
call
push
pop
test
ret
mov
bnd
inc
xor
or
mov
mov
lods
lock
jle
mov
sbb
repz
rorb
mov
test
leave
xchg
lods
cmpsl
das
pop
jbe
out
lret
cmpsl
data16
fcoml
pop
pop
lcall
pop
cmp
xor
xor
mov
mov
stos
arpl
jge
adc
ret
sar
adc
ljmp
shll
mov
pop
mov
pop
sub
push
or
imul
push
pop
dec
lods
and
dec
jae
movsl
jmp
in
sbb
sbb
loope
cmc
cmp
neg
data16
cltd
gs
gs
insb
and
sbb
call
pushf
dec
loop
es
nop
or
pop
leave
ret
lahf
or
mov
pop
adc
shlb
inc
push
mov
cmp
sub
cmp
mov
les
leave
and
rcrb
and
push
pop
mov
in
scas
test
push
mov
sarb
js
adc
sub
jns
and
pop
repz
mov
mov
notl
mov
pop
popa
ljmp
sub
popf
or
in
cmp
fsubp
cmp
sbb
xchg
sbb
or
orps
fbstp
cmp
jne
cwtl
fidivl
pop
and
pop
pop
mov
mov
dec
andb
outsb
arpl
scas
out
scas
inc
fbstp
inc
jno
mov
push
aad
out
mov
jo
xchg
push
arpl
fcmovnbe
add
out
sub
mov
push
push
pop
dec
out
shrb
repnz
cltd
mov
adcl
daa
mov
pusha
lret
cmp
lahf
push
sti
ljmp
ds
and
stos
xor
jmp
jbe
push
idivl
andb
inc
xor
popf
inc
lret
jo
adc
sub
add
sbb
mov
dec
ss
ficoml
ljmp
adc
in
fwait
roll
or
bound
jge
add
and
stos
int
or
xchg
xchg
lds
jle
in
xlat
mov
shll
push
shr
sti
mov
pusha
icebp
scas
fidivrl
mov
mov
pop
xchg
inc
fs
clc
stc
in
aad
push
and
and
dec
fimuls
arpl
pop
mov
orb
push
loop
dec
add
sbb
cmc
add
daa
mov
add
aas
ja
js
repnz
setbe
loop
inc
dec
pop
movsl
aad
inc
test
inc
mov
mov
xor
pop
or
mov
mov
jo
xchg
test
fsts
aas
inc
pop
pop
lods
jl,pn
add
add
xchg
jb
into
xor
push
add
adc
inc
inc
into
leave
sbb
sub
stos
icebp
cmp
icebp
out
popf
inc
or
test
pusha
xor
mov
dec
lahf
xor
xor
mov
cltd
aam
aam
jno
aaa
cmp
pusha
cmp
cmp
cmp
shrb
jno
jmp
jb
movsb
xchg
cmp
xchg
jg
mov
inc
stos
pop
fwait
cli
and
inc
push
mov
pop
xor
adc
push
mov
jg
pop
jecxz
inc
aas
fs
pop
shlb
outsb
cmp
dec
aad
sahf
pop
xor
aaa
lahf
and
pop
ja
stos
sub
roll
out
push
or
out
cwtl
or
call
jmp
cmpsl
jns
daa
repnz
push
fistpll
aaa
insb
out
loop
cmpsl
call
push
push
repnz
mov
xchg
ljmp
push
or
test
mov
jecxz
mov
mov
push
xchg
dec
out
pop
xor
roll
mov
push
push
push
mov
jnp
or
out
jo
jbe
push
xchg
cltd
mov
lcall
dec
mov
jp
pop
sbb
lods
cmp
outsl
pop
dec
mov
pop
je
inc
dec
loop
dec
jnp
and
xchg
mov
setno
inc
adc
in
add
push
pop
shll
fisubs
xor
pop
sub
out
ljmp
dec
fdivrp
jnp
pop
lods
jge
stos
shlb
std
jo
test
and
mov
mov
mov
roll
push
push
push
sti
lcall
cmc
or
addr16
movsb
ret
adc
mov
lahf
test
xor
dec
mov
ljmp
lret
pop
loop
adc
das
pop
dec
add
lahf
mov
gs
or
inc
lds
jecxz
lds
push
js
scas
cmpsb
aad
adc
scas
sbbl
or
push
xor
cli
pusha
jbe
popf
inc
adc
adc
dec
insb
scas
inc
shrl
movl
cmp
cwtl
jae
ret
cmp
xorb
adc
clc
lods
lret
lods
faddl
stos
add
add
inc
std
mov
and
ljmp
aas
adc
push
rcr
push
pop
add
mov
or
les
adc
jg
adc
sub
adc
mov
pop
jmp
fidivs
jne
sahf
gs
mov
mov
clc
int3
push
or
push
clc
xchg
fdivrl
mov
cld
xchg
jae
pop
insb
repnz
jnp
pusha
lock
push
gs
out
rcrb
inc
pop
pop
mov
add
push
mov
cmp
add
push
fimull
fiadds
push
pop
mov
lcall
pop
jo
xchg
sbbl
add
data16
je
push
sbb
mov
jmp
movsl
push
test
je
notb
cmp
testl
insb
int3
in
jae
add
cmp
icebp
add
and
add
fldz
inc
cmpsl
pop
add
mov
fidivs
fiadds
stos
xchg
loop
pushf
addb
adc
pop
shlb
arpl
mov
loop
jl
or
dec
sarl
pop
dec
addr16
xchg
jge
cltd
or
inc
lods
add
call
mov
dec
test
sub
popf
aas
adc
push
jl
dec
xchg
cmpsl
mov
mov
push
sub
jge
push
bound
mov
sahf
out
hlt
or
mov
movsl
aam
sub
jns
mov
push
call
ds
push
lods
mov
mov
fstpl
mov
rorl
mov
jo
out
fnstcw
adc
dec
mov
jae
pusha
dec
fcomps
jp
push
dec
xchg
inc
repnz
stc
sub
rcll
pushf
in
jmp
xor
push
mov
add
incl
sub
pop
popa
sarb
stos
aas
or
mov
jo,pn
inc
push
les
add
cmp
test
mov
add
fldl
nop
add
mov
pop
loope
imul
gs
mov
xchg
jmp
or
in
icebp
sub
sbb
aaa
or
push
push
xlat
rcrb
push
sub
fdivl
cs
hlt
aaa
cmpsl
push
aas
or
in
outsb
pop
xor
jne
jl
xor
mov
or
outsl
inc
xchg
dec
cli
fisubs
les
pop
dec
test
out
rcrl
push
add
mov
rcrb
cmp
pusha
and
xchg
fwait
jecxz
inc
cmp
es
scas
int
xor
adc
mov
jns
or
dec
xor
ret
adc
xor
dec
add
dec
sub
movsl
adcb
in
in
xchg
fdivrl
icebp
xor
out
inc
xchg
jne
lea
cmc
aad
pushf
dec
push
adc
cli
sub
stos
inc
sub
popa
outsb
sub
mov
loope
lock
fmuls
into
pop
fistl
push
enter
enter
cmp
in
and
orl
sbb
mov
pop
push
pop
push
xor
push
jl
fcmovne
xchg
lcall
cs
sbb
es
mov
faddl
pushf
call
popf
and
jb
imul
fldt
pop
pop
fldl2t
mov
es
lret
inc
shll
ss
push
out
popa
pushf
dec
subl
arpl
dec
adc
ficoml
jle
push
mov
push
out
iret
ds
fidivl
jne
pop
popf
imul
lock
dec
mov
pop
jge
mov
push
mov
std
sahf
rorb
pop
into
xor
jle
in
clc
ja
ds
js
add
dec
or
movsl
repnz
xchg
cltd
mov
cmc
jne
jge
add
lcall
mov
test
pop
in
sbb
nop
lods
mov
mov
scas
ret
xor
push
lahf
inc
ffreep
and
and
xchg
mov
sub
and
add
push
push
or
enter
and
pusha
fbstp
sbb
push
xchg
out
jg
pop
in
into
fsub
aad
add
mov
mov
int
out
cld
lock
in
pop
mov
pop
inc
or
movsb
xchg
mov
mov
jg
push
dec
jp
pop
xor
push
fisubrs
pop
mov
fidivl
jbe
sub
xor
and
dec
mov
mov
cmp
sbb
mov
cmp
mov
pop
mov
sub
push
test
or
insl
scas
adc
xchg
sub
pushf
mov
pushf
in
xor
in
add
xchg
movsl
adc
pop
mov
jb
mov
jecxz
enter
mov
enter
test
fsubrs
les
or
push
cli
add
rorl
jp
sbb
and
pop
xchg
ret
inc
ds
repnz
mov
push
insb
idivl
pop
outsb
int
push
add
ljmp
adc
mov
sub
sbb
out
dec
dec
dec
pop
dec
xchg
push
in
cmp
jp
fists
mov
cmp
in
adc
pop
pop
rclb
popa
fimuls
cmp
or
ljmp
push
lret
jp
adcb
xor
mov
mov
dec
ja
loope
dec
push
and
in
dec
mov
push
pop
into
fs
shll
cmp
hlt
sbb
and
xor
insl
push
dec
dec
insb
dec
pop
xor
adc
sbb
inc
into
inc
pop
and
jecxz
movsl
repnz
jle
fdivrl
xor
jno
dec
mov
and
xorl
add
jb
mov
or
xlat
shrl
sub
cli
push
inc
cmp
inc
pusha
rcrb
in
mov
mov
pop
in
rclb
jne
xchg
mov
lds
adc
lcall
sbb
loop
xorb
je
push
jbe
sbbl
cmp
cli
jg
cli
jns
rclb
pop
out
int
pop
mov
jg
pop
into
enter
pop
lret
inc
movsl
pop
mov
jbe
pop
cwtl
or
loope
add
jle
lcall
rcll
pop
inc
ret
loop
mov
jmp
adc
cmp
ficompl
cmpsl
cmc
mov
lds
scas
xor
mov
pusha
sub
mov
es
mov
mov
mov
cmp
push
rcl
test
sub
add
pop
cmp
add
lock
jae
shll
and
xor
lcall
daa
mov
xor
out
xor
cmp
call
rol
or
cmp
inc
fsubs
adc
gs
and
jne
clc
pop
dec
ljmp
ds
mov
inc
sbb
leave
icebp
lock
shll
mov
lea
sub
mov
jmp
int3
adcl
fwait
notl
in
cmp
add
clc
fnstenv
sub
pushf
sub
mov
enter
pushf
fs
int
lods
jbe
push
mov
cltd
and
cmp
or
lahf
sahf
cmp
lret
add
xorl
adc
inc
sbb
ja
daa
sbb
or
xchg
inc
xchg
jmp
xor
in
mov
das
test
mov
call
int3
jno
and
jo
mull
mov
jno
adc
xchg
xchg
sbb
mov
test
mov
jge
pop
mov
adc
xchg
jl
lret
movsl
mov
inc
addr16
adc
mov
inc
and
xor
out
jno
out
xor
mov
clc
test
cmp
lcall
push
rorb
je
dec
mov
cltd
outsl
inc
int
mov
rcll
or
test
pop
jno
jo
and
into
mov
jge
xor
repnz
cltd
insl
pop
add
je
push
lcall
mov
add
mov
jbe
pop
and
ja
inc
jg
inc
daa
push
xor
lret
sub
and
pop
lcall
xor
push
test
sub
xor
scas
sbb
cld
popf
mov
gs
push
xlat
sahf
insl
pop
sub
jle
shl
stc
cwtl
push
xor
mov
and
push
scas
sar
movsl
jge
aad
bound
mov
sbb
or
repz
push
mov
icebp
mov
mov
sahf
cmc
arpl
cmp
mov
imul
add
fbld
and
mov
sti
rol
faddl
movsb
inc
ficomps
mov
ret
xchg
cwtl
jns
dec
cmp
jmp
dec
fmull
addr16
lcall
pop
cmp
adc
addr16
mov
push
loope
je
sbb
cltd
loope
xor
hlt
xchg
int
sub
xchg
cmp
dec
in
sbb
inc
aaa
test
jp
or
mov
leave
cmpsb
repz
xchg
ljmp
or
xor
and
leave
pop
push
out
jno
imul
andl
pop
push
cmp
negb
call
pop
leave
or
dec
ret
in
adc
fistl
repnz
aam
pop
sarl
cmp
lret
sahf
pop
cmp
dec
pop
test
dec
cmp
pop
ja
sbb
mov
or
mov
lock
push
dec
ja
inc
mov
jl
xlat
push
adc
out
jp
imul
pop
cmp
dec
sbb
addr16
jg
lcall
add
fs
add
xchg
xchg
imull
out
xchg
add
pop
popa
and
xchg
in
push
mov
push
stos
push
addb
add
cmp
push
adc
mov
out
lcall
popf
cmc
sub
jae
mov
ljmp
xor
fdivs
jno
sbbb
push
inc
pop
push
sbb
int3
test
mov
inc
gs
push
int3
cwtl
sbbl
push
sbb
adc
js
add
sub
mov
lods
pusha
fs
pusha
xchg
stc
jecxz
cld
f2xm1
jne
popf
mov
jo
pop
in
or
inc
add
out
into
fwait
in
sbb
lcall
repnz
jg
imul
lret
xor
cltd
ja
lods
mov
dec
fidivs
push
mov
movsl
stc
inc
xlat
outsb
sbb
mov
lea
test
sbb
and
hlt
push
push
les
lea
or
cmp
inc
push
in
mov
shl
jbe
imul
lcall
aas
ret
cltd
scas
dec
movsb
in
inc
int
ljmp
sbb
sbb
jnp
punpckhwd
xchg
lret
add
popf
cmp
sub
push
insb
icebp
ljmp
mov
mov
inc
adc
xlat
lret
sarl
push
aas
je
cmp
stos
movsl
insb
dec
int3
push
mov
mov
aas
ret
pop
std
mov
sahf
aaa
je
popf
xchg
pop
movl
pop
sub
test
mov
in
inc
mov
js
bnd
xchg
cmp
push
rcl
xor
jmp
mov
xor
fcmovne
sub
popl
outsb
scas
xor
mov
or
stos
iret
cli
pop
mov
lfs
stc
sub
xor
sub
jbe
fdivr
rolb
popf
je
and
pop
lret
ret
insl
push
les
mov
div
lods
or
rcrb
andb
add
xchg
cmpsb
jmp
loop
sub
into
mov
out
fstps
add
iret
into
ds
incl
mov
fists
push
jle
repz
inc
adc
inc
mov
aaa
icebp
pop
fwait
mov
pop
cld
cmpsb
xor
in
xchg
add
xchg
jbe
xchg
dec
adc
and
and
jo
mov
push
sbb
ljmp
mov
mov
push
sbb
ja
out
or
ja
or
test
rol
aad
aaa
inc
pop
push
cmp
push
repnz
and
xchg
out
fistl
and
popf
je
les
adc
fisubrl
pop
push
sub
in
scas
fisubs
fmul
test
xor
cld
frstor
je
fistpll
pop
push
sbb
push
pusha
icebp
fcmovnu
ja
stos
fcoml
jge
xor
xchg
in
cmp
mov
or
jb
cmp
int
sbb
inc
xor
mov
cmp
mov
shlb
mov
aam
jle
jg
in
aad
xor
cmp
loop
sbb
faddp
into
pusha
pop
push
jl
jge
fwait
mov
nop
sarl
repz
xor
jmp
mov
shlb
adc
mov
loop
ss
popa
sub
mov
and
sbb
loopne
es
loopne
mov
je
and
cltd
out
repz
scas
push
lret
lods
cltd
mov
das
cli
inc
pop
mov
mov
scas
sbb
leave
sahf
addr16
push
es
mov
insl
mov
mov
movb
xor
inc
or
fnstenv
gs
push
shlb
or
xor
outsb
xlat
outsb
addr16
outsl
jge
jns
sbb
xor
jne
repnz
mov
pop
push
push
cs
sub
mov
cltd
sbb
sub
lods
pusha
imul
mov
pop
xor
mov
fsts
pop
add
jge
lret
add
sbb
stc
out
cmp
imul
push
std
pop
pop
adc
scas
or
mov
or
adc
mov
mov
daa
movsb
lea
add
ret
cmpsb
movsl
rcrl
jle
push
test
scas
push
out
rorl
scas
add
out
ret
jo
jo
pop
sbb
idiv
sub
mov
fimull
icebp
or
sub
movsb
stos
pop
mov
jg
ficoms
sti
adc
sub
pop
mov
inc
sub
and
out
daa
cld
sbbb
xchg
sbbl
mov
das
daa
filds
out
add
sub
push
jl
mov
sub
mov
push
fnsave
je
aad
out
hlt
jg
shrb
mov
clc
shll
std
std
mov
pop
sbb
cs
fisubrs
mov
add
dec
xor
jmp
rcr
pop
xor
or
jb
jge
ja
jo
jbe
repz
sarl
mov
lret
mov
rolb
cwtl
sbb
xor
fisubs
ret
push
mov
jmp
ret
pop
jns
pop
add
movsb
jl
fcompl
xor
xchg
jl
test
xchg
xchg
mov
fsubrl
test
mov
les
sbb
dec
dec
xor
xchg
push
mov
nop
arpl
scas
cmpsl
xchg
pop
mov
jno
cmpsl
and
je
xchg
mov
ror
jb
mov
and
cmp
ret
sub
jbe
xchg
cmp
push
push
aam
dec
mov
cwtl
sbb
jbe
lahf
jg
das
or
pop
insb
leave
mov
js
lods
roll
cltd
int
pop
pop
cwtl
sbb
in
xor
add
xchg
pop
mov
adc
mov
lea
jg
mov
adc
cmc
xor
aam
inc
cs
rcrb
sub
xor
addb
insb
xor
out
adc
pushf
or
and
pop
cmpsl
sti
fs
inc
pop
mov
push
rolb
jmp
pop
out
data16
mov
fistpll
loope
je
ficompl
jp
js
jne
cmp
inc
scas
fwait
jg
add
push
mov
movsb
fadds
sbb
subl
add
sbb
decb
cwtl
or
test
jmp
cmp
and
adc
popf
test
outsl
out
movsb
fs
add
mov
aas
mov
push
imul
sbb
xlat
cltd
leave
inc
lods
pop
or
scas
imul
test
dec
cltd
cwtl
dec
popa
cld
leave
cld
shlb
cltd
jg
in
sahf
out
movsb
aas
pop
push
cmp
or
cs
out
lea
xchg
ret
int3
adc
mov
jno
fdivrl
jmp
jmp
mov
jmp
sbb
mov
mov
jecxz
and
imul
es
mov
lods
aaa
lock
cmp
cli
iret
or
and
xchg
addr16
ret
mov
jmp
xor
test
sbb
rcl
idivl
imul
or
movsl
leave
ret
mov
pop
push
jb
mov
lds
xor
lock
sbb
or
idivl
mov
sbb
cs
ret
mov
outsb
fnstsw
cmp
mov
sub
and
sbb
and
sub
stos
jo
inc
nop
sub
add
adc
scas
lock
mov
dec
out
loopne
popa
or
imul
in
and
or
pushf
sub
dec
sbb
mov
jno
in
xor
loope
jge
push
sbb
xchg
out
jp
mov
out
cs
adc
enter
add
jno
daa
adc
outsb
fdiv
add
fnsave
push
inc
fs
cmpsl
dec
std
inc
rorb
or
outsl
mov
or
clc
ds
or
out
rcll
loopne
adc
xchg
outsl
lahf
push
cmpsb
leave
inc
adcl
dec
jmp
or
lcall
dec
xor
ficoml
sub
xor
xor
cmpsb
out
pop
cmpsl
test
mov
sbb
cmp
cmpsl
add
into
test
enter
or
lods
insl
fsubr
fwait
xchg
lahf
cmp
stos
push
jg
ljmp
adc
aaa
or
jns
xchg
loop
test
pop
lahf
jmp
clc
aad
push
movsl
jl
push
pop
gs
cld
insl
adc
das
or
mov
cmpsb
mov
dec
es
mov
pop
mov
int3
mov
je
push
sti
push
es
iret
mov
pushl
xor
xchg
pop
repnz
cmp
lods
aad
dec
xchg
pop
add
inc
gs
and
leave
pop
stos
outsb
insl
mov
movsl
lock
xor
adc
movsl
mov
jbe
test
jecxz
sbb
and
nop
xchg
mov
jnp
and
imul
fistpll
in
jbe
addr16
ja
pop
scas
int
cmp
push
dec
loop
bswap
jge
addr16
jg
cmp
shl
call
jmp
xor
adc
movsl
and
xor
ljmp
xchg
pushf
adc
aam
xchg
rcll
jge
xor
add
adc
jo
jp
mov
inc
inc
jecxz
fsubrl
push
data16
xchg
addr16
aaa
lock
xchg
in
je
lds
arpl
addr16
mov
leave
jnp
xor
arpl
and
or
or
jbe
test
gs
and
cld
jp
sub
pop
inc
ja
dec
movl
xchg
loope
shll
clc
jbe
and
dec
add
cmc
dec
push
jb
and
cmc
or
sub
call
cli
test
aaa
test
inc
jne
jbe
popf
adc
cs
mov
add
pop
in
loop
add
and
icebp
dec
in
push
movsb
sbb
jmp
ficomps
and
mov
xchg
mov
insl
jge
fwait
ds
and
dec
cmp
xor
addb
cmp
xorb
icebp
pop
repnz
pop
and
pop
sbb
inc
inc
clc
pop
mov
push
mov
in
in
shll
push
lret
sahf
add
icebp
xchg
pusha
pushf
xor
rorl
out
rclb
pushf
xor
cmp
sbb
nop
inc
mov
push
cmp
pop
mov
dec
inc
fmull
inc
push
in
pushf
test
mov
fs
sub
and
inc
jmp
daa
dec
inc
add
roll
sbb
xchg
pop
out
inc
int
scas
std
sub
cmp
mov
test
pop
fsub
sub
bound
js
arpl
test
pop
cmpsb
pusha
pop
jbe
scas
test
add
sub
jb
adc
imul
sbb
adc
pop
and
adc
popf
push
lret
dec
xorb
sub
stc
js
stos
mov
pop
pop
nop
je
cs
push
imul
stos
inc
cmp
gs
adc
les
jae
sbbl
push
jnp
add
xor
hlt
xchg
jnp
sub
fisttpl
ljmp
sub
in
jae
sub
or
lahf
jno
and
in
xchg
xlat
imul
ss
xchg
popa
lahf
mov
mov
cmp
rcll
mov
mov
pop
mov
add
push
inc
jo
jecxz
negb
les
xor
inc
mov
and
test
sub
int
jo
mov
addr16
fmuls
xor
cmc
cmp
rcrb
add
jg
rcrb
push
mov
imul
in
lret
push
divb
xchg
js
cmp
cld
loop
cmc
cmp
out
flds
adc
inc
in
fldt
or
push
icebp
fisttpl
popl
sub
dec
push
stc
je
rolb
mov
add
lret
mov
xchg
fcoms
aad
pop
adc
pushf
out
popf
shll
mov
push
jae
adc
mov
aaa
pop
arpl
sbb
jge
in
xor
push
pop
ss
jl
xchg
into
cld
inc
mov
ret
stos
fcoms
mov
xor
sahf
push
push
in
mov
inc
data16
je
ds
add
sbb
int3
push
daa
xchg
out
loopne
mov
or
cltd
int3
pop
loope
push
pop
adc
int3
dec
inc
out
negb
push
xor
pop
and
ret
fstpl
mov
add
cmp
ret
nop
pop
aaa
xchg
jnp
sbb
mov
sub
fldl
fisubl
inc
sub
pusha
sub
inc
adc
inc
imul
lahf
in
dec
cltd
cmp
divl
pop
cmp
popf
push
data16
sub
cld
jbe
sti
push
or
fdivl
dec
push
xorl
adc
shlb
fmull
iret
or
jae
syscall
mov
shrl
rcrb
mov
sub
pop
in
ret
pop
sbbl
test
inc
pop
adc
aas
mov
repz
insb
imul
add
scas
aad
adc
add
inc
add
mov
adc
adc
xor
mov
cmpsb
out
stos
cmp
jp
pop
xor
shlb
jg
jno
popf
mov
mov
jnp
or
pusha
fwait
test
std
mov
mov
fistps
outsl
mov
push
xchg
sbb
adc
andb
add
ret
mov
cmp
scas
and
add
push
sub
mov
fstps
out
add
lock
push
rolb
insw
dec
cmp
push
outsb
nop
test
inc
sti
addr16
or
sub
rorl
jmp
xor
out
call
in
add
aad
outsb
push
iret
add
cltd
push
popl
jle
jl
cmp
or
pop
jae
sbb
ljmp
in
stos
push
dec
add
movb
xor
into
dec
adc
outsl
fcom
add
or
das
sbb
jne
jecxz
iret
adc
pop
popf
xor
pusha
pop
cmp
jle
cmp
mov
pop
pusha
pop
cmp
mov
imul
ljmp
repnz
cltd
ds
and
and
incl
jno
sub
enter
ljmp
in
push
xchg
xchg
or
lret
out
fbld
movsb
cmpb
mov
cmp
adc
movsl
mov
shl
push
xchg
mov
jmp
xor
inc
jo
inc
fstp
sub
out
aam
inc
sub
and
insl
xchg
push
pop
int3
inc
sub
add
into
sub
dec
push
andb
adc
xchg
jnp
sbb
lods
dec
cmpsb
and
loopne
push
dec
testb
adc
xor
sahf
inc
incl
adc
jo
push
lahf
mov
dec
sub
pushf
inc
nop
loop
dec
movsb
jnp
repnz
ret
je
inc
es
xor
cwtl
test
jo
jle
out
out
cmp
pop
clc
adc
push
mov
jle
inc
sti
es
fiaddl
cltd
out
loope
xor
and
or
or
mov
arpl
and
fldenv
fcoms
nop
adc
test
sar
mov
sbb
push
out
mov
lods
add
and
jns
push
cld
lods
cmpsb
lods
iret
jle
push
mov
test
js
xor
jge
lods
scas
data16
rcll
pop
lcall
dec
sbb
outsl
sbb
out
mov
sti
lods
xor
cmp
add
cmp
sbb
scas
mov
mov
mov
sbb
cmpsb
imul
and
cmp
sub
sti
dec
addl
gs
aam
mov
xchg
sbb
jb
pushl
mov
mov
jmp
imul
cwtl
push
jmp
out
adc
push
xchg
clc
fcmove
sti
aaa
dec
outsl
push
sti
loopne
inc
insl
outsl
lds
inc
lret
push
cmpsl
mov
fsubs
dec
mov
add
into
pop
outsb
roll
push
inc
int3
fildl
out
pop
out
mov
mov
dec
jb
lahf
inc
sub
pop
xchg
testb
xchg
push
in
push
mov
add
jb
clc
cmp
lcall
jmp
in
fcmovu
add
jnp
pop
sub
jne
sub
sbb
push
jbe
mov
out
jae
insb
lret
sbb
shll
clc
pop
and
push
movsl
sbb
push
cld
pop
insb
pushf
adc
pop
mov
les
sub
pop
outsl
dec
insl
nopl
test
add
push
xchg
repz
rorl
dec
jmp
xor
jne
fdivs
movsl
aas
stos
movsl
movsl
xor
lcall
mov
add
add
lods
push
sub
or
movsb
movsb
enter
daa
adc
xchg
aad
daa
push
xor
pop
pop
pusha
repz
bound
aam
fcoms
int3
faddl
sub
into
cltd
pop
pop
or
jl
mov
repnz
adc
in
fistpl
xlat
sahf
enter
xchg
movl
js
pusha
or
mov
jb
inc
test
sub
xchg
int3
xchg
xlat
xor
mov
leave
cmp
push
mov
fimuls
push
jae
pop
mov
xor
cmp
cmpsl
loop
push
and
and
mov
mov
inc
add
cs
cltd
ret
insl
inc
adc
jnp
js
repnz
pop
mov
jge
mov
jnp
xchg
out
into
movsl
inc
sub
xchg
mov
or
sbb
insb
pop
mov
xchg
sbb
testb
jne
addl
mov
xor
into
fwait
int3
stc
out
fists
pusha
mov
repz
insb
test
enter
fwait
rcl
mov
lods
xlat
push
mov
subb
push
lods
xchg
xchg
arpl
and
mov
es
cli
jae
inc
inc
xchg
jge
cmpsb
mov
rcll
bound
sti
pop
les
mov
mov
xor
and
daa
lret
push
in
popa
mov
femms
jno
dec
xchg
sub
pop
and
shll
inc
outsl
jae
push
int
push
jl
and
xchg
xor
xorl
mov
sub
xchg
lcall
lea
bound
loope
push
movsl
xchg
out
fcmovnbe
add
mov
mov
mov
call
adcb
mov
fwait
js
shlb
jno
or
subb
jbe
loop
popa
fs
pusha
adcl
fwait
cmc
insl
lods
repz
ss
pop
sarb
icebp
popa
inc
mov
mov
fildll
fisttps
and
push
push
mov
sbb
mov
adc
adc
sub
xchg
shrl
and
adc
shlb
mov
inc
or
test
aaa
or
inc
pop
outsl
jp
jb
and
inc
jle
jno
adc
and
mov
cmp
js
mov
negb
das
mov
nop
rcr
and
out
adc
pushf
or
pop
push
mov
inc
test
inc
in
sbb
mov
pause
xchg
pop
jmp
inc
jle
inc
dec
je
and
cmp
jecxz
cmpsl
orl
stos
pop
iret
mov
sub
ljmp
lds
and
movsl
xor
sbb
lret
addb
push
adc
movsb
ficoms
stc
insl
pop
shll
test
and
jge
or
test
sti
adc
mov
jnp
and
orl
push
jns
push
mov
xor
pop
adc
pop
ja
int3
test
les
aam
in
idivb
adc
fmuls
incb
adc
psubw
sbbl
les
cmpsl
aad
mov
out
sti
pop
rcrb
fnstenv
xchg
cmp
inc
in
dec
or
fnstcw
mov
cmp
jl
dec
jno
lcall
bound
mov
and
mov
or
push
iret
or
xchg
mov
sub
loope
loope
xor
mov
jbe
test
dec
arpl
inc
std
mul
or
imul
sub
mov
jg
out
push
pusha
stos
loopne
out
addl
adc
sbb
push
repnz
add
inc
push
mov
pop
dec
scas
lods
push
or
dec
scas
cld
mov
and
test
sub
mov
and
cld
dec
mov
mov
xor
mov
jbe
lcall
xor
invd
sbb
test
pop
jo
test
inc
ret
aad
add
outsl
ja
pop
dec
xchg
decl
fwait
inc
sub
xor
mov
fistpl
imul
inc
out
push
adc
mov
ds
push
mov
jbe
jmp
mov
sbb
fnstenv
in
cmp
cmp
dec
push
push
iret
sbb
sub
int3
or
fidivl
push
addl
stc
inc
pop
scas
adc
and
insl
mov
mov
cmpsb
popf
push
push
out
daa
loop
xor
pop
sub
rol
aam
into
mov
bound
clc
mov
repnz
gs
push
and
cltd
dec
or
mov
shl
popf
mov
fcoms
add
push
cmp
mov
push
push
sbb
xlat
xchg
xorb
scas
adc
lret
xchg
sbb
jns
ret
les
sub
push
jecxz
dec
fcmovb
fwait
test
adc
jno
cmp
sub
cmp
in
sub
push
cwtl
sbb
xor
js
jmp
xor
inc
mov
push
xor
andl
dec
pop
je
sahf
xorb
mov
xchg
scas
dec
sbb
mov
out
loop
scas
mov
clc
xchg
loope
sbb
out
or
out
in
insl
jge
stos
test
pop
add
maskmovq
push
mov
inc
jp
jns,pn
cltd
xor
or
pop
mov
loopne
mov
cli
xlat
mov
jno
sbb
sbb
inc
sbb
xor
pushf
ret
cmpsl
lcall
or
daa
inc
or
insl
ucomiss
mov
lods
xchg
lods
mov
js
xchg
xlat
stos
loope
andl
xchg
cmpsl
inc
dec
das
jne
clc
popf
add
fldl
clc
xchg
insb
popw
jbe
xor
fcoml
sbb
movsb
pushf
sarb
sti
mov
push
fdivl
clc
xor
inc
cmp
fisttps
leave
int3
mov
stos
cmpsb
ficomps
sub
mov
push
sbb
inc
aaa
inc
add
ret
sub
inc
orb
rcr
sti
and
scas
dec
dec
dec
outsl
loopne
push
test
das
leave
cwtl
shl
orb
lods
mov
xchg
add
je
enter
pop
fcoms
sub
dec
fstpl
movsb
cli
sahf
pop
fdivs
push
dec
sbb
or
pop
cwtl
add
lcall
dec
pop
xor
push
and
adc
ljmp
in
dec
popf
pop
mov
inc
mov
ljmp
das
inc
imul
in
adc
inc
in
mov
cmp
scas
cmp
sub
inc
cmp
rol
lock
and
arpl
out
push
mov
stos
cmpsb
mov
push
sub
dec
mov
dec
fptan
ja
daa
es
sbb
pop
lret
sub
ret
fmuls
in
fwait
xlat
jp
cld
push
jbe
shlb
pushf
in
xchg
rcl
xor
decb
cwtl
adc
je
inc
xchg
inc
add
nop
jb
icebp
orl
pop
and
repz
test
mov
lcall
sub
jae
cmp
cld
repnz
ljmp
hlt
imul
cli
into
cmp
adc
pusha
cmpsb
mov
outsl
pop
or
arpl
add
xorb
ror
push
and
mov
movsl
mov
add
cmpsl
jle
cld
adc
push
test
and
into
shrb
mov
mov
mov
js
cmp
fdivp
jb
sahf
mov
sub
inc
lcall
negl
int3
fisttpll
stos
arpl
sti
ror
ds
insb
inc
xor
scas
mov
daa
mov
xchg
sub
addr16
mov
loopne
jns
sbb
aam
add
dec
bound
bound
adc
ds
xchg
and
ret
mov
in
inc
xchg
lock
movsl
out
mov
mov
jne
jmp
daa
push
sarb
xchg
imul
mov
outsb
mov
cltd
test
pop
insl
and
adcl
jns
adc
pop
push
loop
ss
jle
mov
or
or
jl
and
insb
sub
dec
xchg
push
add
mov
fbld
inc
xor
lds
or
clc
jl
fstl
dec
and
loope
jle
movsb
fldt
adc
rcll
ds
or
jecxz
cltd
xchg
idiv
lahf
es
out
fidivl
fwait
sub
test
sub
mov
ljmpw
cli
aaa
mov
cld
hlt
or
inc
sub
xchg
arpl
loop
mov
psubusb
bound
mov
inc
cmc
dec
and
leave
and
repnz
push
imulb
ret
imul
out
xchg
xchg
jl
add
jo
iret
push
push
cld
sti
int3
fucom
xchg
out
add
jecxz
lret
test
je
mov
out
mov
and
int3
push
loopne
jge
sub
iret
call
mov
sub
out
and
jno
xchg
xor
sub
fistpll
sub
in
rorb
iret
and
in
imul
enter
add
xor
js
mov
cmp
add
outsl
dec
ret
insb
pop
sbb
xchg
xchg
clc
and
ret
jns
adc
loopne
test
idivl
arpl
out
inc
or
je
pusha
in
insl
dec
lret
push
mov
sahf
jg
rcpps
cmp
das
xor
repz
ds
sbb
xchg
mov
jmp
jnp
push
xchg
mov
pop
aad
je
xchg
sbbb
lret
push
leave
cmpsl
movsb
add
cmp
in
ja
pop
cmp
in
shlb
lds
rcll
cmpsb
push
enter
jmp
add
leave
incb
shll
pop
sbb
pop
cmc
int
pop
mov
inc
out
ds
cmpsb
cmp
stc
sub
in
sti
sahf
pusha
adc
or
dec
jmp
loope
icebp
enter
test
mov
jo
nop
jmp
dec
mov
nop
jl
push
cld
push
mov
mov
es
ret
mull
iret
sbb
mov
repz
mov
pop
sbb
add
xchg
adc
mov
aad
or
or
mov
sub
jnp
stos
mov
or
lock
rcr
fsqrt
or
sti
sbb
xor
and
imul
dec
sub
push
scas
dec
inc
xchg
sbb
jg
clc
pop
jl
cli
sbb
movsb
outsb
jo
sbbl
imul
sub
sarl
or
sub
or
es
orl
pop
movsb
aaa
and
mov
cmpsb
jo
sysenter
lods
pop
dec
aas
mov
push
jl
pop
xadd
ficomps
add
jnp
xchg
sub
mov
int3
lret
cmp
mov
fucomi
xchg
push
add
mov
mov
mov
mov
cmp
sbb
test
in
stos
push
clc
in
cli
out
outsl
push
loop
lods
rcll
push
add
pop
mov
insl
xchg
mov
xchg
cmp
mov
sbb
xor
aam
mov
gs
ja
add
cmp
adc
lods
jge
mov
into
jp
sub
test
xor
xchg
movsb
xchg
clc
push
into
or
xchg
lds
fsubl
dec
mov
or
insl
aam
add
add
shll
cmp
in
bound
dec
add
adc
dec
mov
sti
cld
shrb
outsl
data16
cwtl
mov
mov
pop
jno
in
jp
scas
pop
cmp
fiadds
cmpsb
cs
adc
arpl
jno
pop
push
or
cmp
aaa
adc
jo
imul
inc
mov
adc
pusha
test
sahf
sbb
mov
mov
aad
sub
pushf
imul
lea
jp
pop
arpl
push
push
mov
out
sub
add
or
lods
in
fdivl
ljmp
orb
dec
xor
rcr
sbb
sub
loopne
adc
pop
addr16
call
inc
bound
xor
add
insb
shll
push
dec
repnz
outsb
cmpsl
dec
add
clc
xor
sbb
lea
xchg
ss
pop
pop
hlt
in
mov
sub
out
dec
add
xor
mov
xchg
mov
jne
mov
adc
sub
clc
dec
insb
jge
in
stos
cmp
add
cmp
cmp
push
add
into
into
insb
pop
pushf
pop
mov
mov
add
test
pop
push
xor
cmp
adc
inc
jecxz
or
fadd
dec
or
push
stc
xlat
ljmp
add
cltd
js
add
xchg
lea
cmp
in
jb
je
sbb
mov
shrb
mull
out
dec
xchg
xchg
mov
in
xor
push
pop
push
icebp
shrb
jno
pop
roll
xor
xchg
sub
andl
push
pop
test
inc
inc
sbb
loop
dec
push
sbb
xor
cmp
jecxz
les
repz
cmp
lret
cmp
jmp
icebp
icebp
dec
fdivrl
mov
test
mov
fucomi
loope
test
mov
jb
ss
pushf
test
call
fwait
mov
and
inc
call
out
cli
sbb
ljmp
or
cs
inc
in
sub
pop
scas
xor
shr
pop
or
fldcw
cwtl
pop
sbb
loop
in
imul
mov
fstl
mov
filds
and
loop
and
or
jo
insb
mov
cwtl
roll
adcb
jmp
mov
jbe
mov
icebp
dec
xchg
push
xchg
add
mov
les
mov
sub
xchg
daa
sbb
add
xchg
das
mov
pop
sub
jns
xchg
lcall
outsl
mov
shlb
mov
pusha
insl
jecxz
pop
sbb
pushf
sub
or
dec
jp
and
jg
popa
les
lock
outsb
mov
dec
push
js
ficomps
iret
adc
jmp
pop
jle
inc
sbb
mov
setg
hlt
push
xor
bound
scas
adcb
dec
clc
divb
push
sbb
pop
fidivs
cli
pop
xor
mov
xchg
cmp
push
mov
hlt
inc
inc
or
jnp
hlt
test
add
and
xchg
jo
cmp
jo
jmp
jno
iret
lcall
add
loopne
xor
ljmp
fcmovnu
repz
and
stos
pop
jge
gs
sub
leave
cmp
xor
das
pop
xor
pop
mov
cmp
add
enter
in
push
or
jb
mov
push
xor
jl
mov
mov
popa
lcall
fdivl
xor
ss
mov
xor
jo
jae
fs
ret
add
add
xorl
mov
popf
sub
push
clc
inc
call
mov
add
add
pop
lods
pop
inc
pusha
jmp
mov
pop
xor
xor
test
xchg
mov
mov
andb
mov
lahf
dec
mov
mov
ret
cli
push
outsb
fwait
lock
pop
mov
xchg
mov
pusha
aas
fisubrs
pop
inc
push
fisubs
mov
pushw
xchg
loope
pusha
jno
into
in
jo
dec
movsb
fistl
int3
iret
jbe
insl
repnz
lods
andb
test
lods
stos
out
test
sbb
sub
push
call
test
mov
mov
mov
clc
sbb
in
sub
clc
aam
xor
mov
jecxz
sub
jp
lret
popa
movsb
mov
cwtl
mov
adc
or
mov
fisubrl
lret
ds
into
mov
xchg
loopne
xor
sub
out
dec
lahf
cmp
adc
mov
pop
xlat
jp
add
inc
inc
into
cli
mov
dec
mov
cmp
pop
or
aad
test
add
lods
push
sbb
or
adc
and
test
sbb
pop
into
loope
mov
fwait
and
jae
fwait
int3
lds
jmp
fisttpl
adc
mov
movsl
loopne
mov
es
pop
xlat
in
loop
jns
repz
jp
popa
xchg
repnz
ja
mov
cmp
jmp
adc
out
and
mov
loop
fs
jb
shll
or
xchg
in
mov
popf
push
imul
push
jo
mov
mov
dec
lret
push
cld
inc
outsb
sarl
or
sub
shr
rcrb
dec
sahf
repnz
jb
test
imul
aam
or
and
andb
xlat
cwtl
lret
push
sub
fxch
sub
jmp
testb
cmp
es
xor
cmc
push
inc
outsl
test
mov
insb
aam
mov
es
mov
fsubs
jmp
imul
xchg
lea
xor
fldt
int3
pop
movsb
call
xchg
pop
es
or
add
push
mov
sbb
jbe
mov
in
stos
jl
insl
sub
nop
inc
or
int
mov
inc
pop
mov
loopne
sbb
bound
sbb
movnti
jmp
outsl
add
dec
push
fistpl
and
mov
mov
mov
jmp
inc
enter
mov
sbb
js
or
insl
int3
cmpsb
jmp
add
adcb
sbb
imul
push
mov
adc
jno
cs
mov
icebp
pushf
jmp
outsl
push
clc
test
lret
cmpsl
mov
adc
icebp
adc
insb
fcmovnbe
mov
jno
add
xchg
stc
aad
adc
adc
xchg
adc
push
and
adc
adc
pop
in
adc
mov
jno
popf
lcall
xchg
sti
jnp,pt
leave
dec
mov
sbb
xorl
xchg
cld
jnp
push
scas
fstl
adc
pop
xchg
sbb
xor
out
jg
lret
jp
fildll
mov
xlat
xor
push
pop
movsl
adc
jb
add
jb
loop
stos
addr16
adc
addr16
movaps
roll
cltd
xchg
sub
ret
rol
js
add
lea
std
stos
adc
jge
fdivrs
repz
pop
aad
test
mov
pop
mov
lahf
scas
mov
outsl
sub
add
enter
popf
cmpsb
movsb
add
mov
add
xor
adc
adc
lret
shlb
push
push
push
das
jmp
xorl
push
pop
mov
pushf
cmp
sahf
lcall
xchg
ss
jge
mov
mov
add
daa
cmp
dec
push
daa
popl
dec
cltd
adc
cli
mov
xchg
cmp
outsb
addr16
mov
das
ret
loopne
lock
repz
cltd
xchg
std
or
hlt
sahf
xor
adc
insb
test
ret
aaa
inc
or
hlt
mov
jns
lcall
cld
push
and
mov
mov
lds
mov
add
xor
xchg
inc
test
push
and
pop
mov
repnz
push
mov
out
sub
sbb
xor
cmc
in
rorl
sbb
in
sbb
dec
aad
add
shll
jns
or
xor
fisubs
jmp
xchg
xor
push
and
ja
or
dec
adc
lods
cmpsl
aas
cli
into
add
inc
jg
mov
jo
out
mov
fsubl
in
xchg
cmp
dec
lret
jbe
cmp
sbb
push
sub
sbb
inc
popl
xorl
movsl
inc
sub
xchg
inc
fldt
mov
pusha
call
lahf
sbb
lock
xchg
jp
fdiv
pushf
dec
inc
add
dec
lcall
xor
mov
lahf
popa
in
fisubrl
mov
pop
push
push
add
cltd
xchg
push
cmp
jecxz
xor
les
imul
ds
adc
xor
loop
cs
cli
adc
sbb
enter
dec
aam
jae
test
push
movsl
lahf
icebp
sbb
mov
mov
inc
sbb
ljmp
into
sub
push
adc
push
jecxz
mov
scas
pusha
mov
sbb
xor
or
lahf
xor
dec
mov
fwait
loope
ss
jmp
std
mov
out
cli
xchg
mov
xchg
aas
nop
adc
xor
stc
xchg
arpl
xor
into
fldenv
aaa
leave
mov
iret
int3
shl
repz
mov
jmp
push
xor
mov
lods
ja
jle
sbb
and
or
xor
push
nop
out
shll
inc
inc
xchg
pop
es
fisubrl
push
adc
ror
lea
and
sahf
fisttpl
rolb
std
jb
jne
loopne
push
mov
sub
xchg
ds
pop
cmp
pop
xchg
xor
outsb
js
enter
xchg
mov
jb
mov
out
or
xchg
xor
and
cmpsl
std
and
or
mov
add
jmp
xor
cmc
scas
jo
mov
imul
out
or
push
outsb
mov
fstps
lods
cmp
out
jns
jmp
in
adc
cmc
or
cmc
xchg
lret
sub
cmpsl
popa
or
jecxz
fwait
cmpsl
mov
push
cmp
jae
cs
pop
dec
cmp
movsb
jbe
sub
xchg
pop
out
aam
in
loope
dec
mov
out
movb
in
dec
dec
adc
jp
aad
pop
mov
dec
dec
fninit
decl
fidivrs
xor
loope
pop
or
addr16
or
clc
clc
int3
mov
mov
repz
ss
pop
lahf
mov
rcr
mov
push
xor
aaa
addr16
fdivs
imul
push
pop
aad
jns
lods
xchg
or
pop
jl
and
mov
sub
std
fbstp
mov
test
repnz
add
mov
xor
scas
repz
xor
in
js
loop
sub
insb
fisttpl
les
jle
push
int3
insb
or
lods
sub
std
push
fdivp
enter
pop
sbbb
flds
movsl
pop
xchg
push
xor
dec
xchg
bnd
jne
cmovl
clc
mov
mov
mov
xor
ja
aas
cmp
mov
pop
mov
sti
ss
js
jmp
mov
pop
push
jle
inc
xchg
cmc
fadds
lret
jnp
daa
mov
iret
sub
inc
inc
mov
popa
cmp
jmp
icebp
orl
cmc
jle
mov
ljmp
movsb
mov
inc
push
xchg
andb
add
inc
mov
cmp
imul
jle
ss
idiv
or
je
clc
and
and
fcmovu
jnp
fsubrs
mov
push
sbb
scas
xchg
mov
pop
ret
push
movsl
leave
aas
mov
dec
mov
mov
inc
insl
addl
lods
pop
test
std
xchg
lods
decl
xor
mov
movsb
fdivp
testb
push
push
jg
test
lret
out
jmp
aaa
or
jnp
fisubl
rolb
aaa
and
fucom
inc
rolb
xchg
shrb
loopne
inc
stc
inc
sahf
fldcw
mov
jl
xor
loope
jns
adc
negl
xchg
lods
or
adc
sahf
adc
push
stos
jne
mov
xchg
mov
arpl
imul
stos
and
ljmp
mov
adc
in
imul
xchg
lahf
pop
cwtl
stos
ljmp
cmp
add
flds
sbb
dec
stos
dec
pop
dec
sbbl
add
sbb
mov
mov
addb
sub
stos
cmp
les
movsb
xchg
aaa
mov
cld
clc
inc
xchg
mov
adc
pop
sub
dec
pushf
sbb
pop
insb
hlt
ficompl
or
xor
push
loop
dec
jns
scas
scas
xor
xchg
mov
dec
xchg
into
add
frstor
ljmp
outsb
inc
or
js
cwtl
jnp
adc
gs
add
and
mov
cmp
sbbl
push
xchg
mov
addl
pushf
dec
ffree
cmp
mov
lcall
pop
clc
ret
imull
lcall
jns
jne
inc
repz
pop
jle
paddusw
mov
test
call
sbbl
xchg
ljmp
ret
lcall
shll
test
jb
insb
mov
clc
aaa
add
loop
lock
push
or
mov
sbb
daa
mov
xlat
lea
or
cmp
lods
pop
mov
xchg
mov
jnp
insl
pop
rcrb
mov
lock
or
hlt
js
lods
mov
xorb
mov
pop
add
sahf
jns
jno
inc
outsb
sub
inc
xor
es
sbb
adc
sbb
adc
pop
mov
and
repz
lret
xlat
push
orb
test
addr16
insb
mov
out
adc
mov
and
xchg
sbb
jns
lret
movsl
arpl
mov
pop
fwait
mov
rcr
insl
mov
insl
jns
aam
mov
pop
pushf
inc
xchg
fs
xchg
out
popf
xchg
movsb
sbb
xor
cwtl
rcll
lods
mov
ds
insl
sub
jecxz
pop
xchg
xor
add
xchg
inc
fs
dec
sbb
clc
idivb
mov
inc
mov
popa
mov
call
shrb
add
cld
push
cs
idiv
stos
dec
sbb
loop
xchg
into
mov
dec
packssdw
cmp
jno
or
pop
lock
rolb
in
sbb
inc
adc
fisubs
shrb
or
push
cltd
loop
js
out
pop
lret
into
sub
and
pop
inc
ret
xchg
mov
xor
gs
orl
mov
fsubrp
push
mov
sbb
mov
in
out
or
sub
popa
call
out
cli
lret
sbb
sbb
cmp
int3
pusha
repnz
icebp
sbb
lock
fcomps
jle
push
arpl
cmp
loope
inc
mov
pop
js
les
fwait
jo
pop
cmp
xchg
in
cs
imul
xlat
cmp
imulb
jle
fs
pop
pop
mov
imul
pop
incb
fdivp
stos
push
sub
lahf
dec
std
test
lahf
pop
pop
xchg
lcall
inc
outsl
int
cmpsb
or
rcr
scas
mov
inc
ss
shr
sub
fsubrl
lods
test
and
testb
repnz
push
adc
addb
or
in
lea
dec
mov
and
fidivrl
pop
aam
mov
cmc
push
je
and
cs
add
scas
mov
call
xor
mov
push
sbb
dec
push
std
scas
xchg
sub
dec
inc
xchg
stos
mov
loope
adc
jge
cmp
std
pushf
stc
xlat
jge
jae
or
cmp
add
int3
addr16
sti
push
call
fcmove
jnp
ss
inc
dec
xchg
ljmp
insl
int3
cmp
mov
out
mov
cs
cs
lods
gs
outsl
pop
lahf
lret
int3
mov
imul
insl
mov
xor
add
fnsave
repz
es
inc
mov
roll
mov
enter
popf
les
cmp
pop
mov
pushf
test
jmp
fidivrl
cmpsb
fsubrp
lahf
sub
xchg
aam
inc
jae
or
adc
cmp
add
aad
call
mov
mov
in
add
mov
mov
lds
dec
sub
enter
cli
clc
pop
int
test
push
dec
and
pavgw
shll
jno
cmpsb
mov
pop
pop
or
dec
mov
jp
pushw
pushf
sarb
popf
mov
add
lds
xchg
push
das
xchg
push
pop
jns
test
pop
icebp
xchg
jnp
gs
pusha
jp
fst
mov
inc
lret
adc
aaa
aaa
mov
loopne
pop
pop
mov
lock
jno
rorb
or
test
push
xchg
frstor
mov
jb
fcoml
cwtl
adc
push
out
xor
inc
insb
mov
and
clc
mov
sbb
cli
in
xchg
push
popa
js
dec
lock
dec
mov
pop
sbb
jnp
sub
push
fdivrs
scas
sbb
out
js
sub
mov
xchg
out
xchg
push
ret
stos
sbb
in
add
push
in
cmp
push
xor
jecxz
cld
scas
xor
adc
cld
mov
mov
and
fadds
js
in
sar
in
scas
xchg
mov
aas
loop
adc
cmpsb
in
dec
pop
dec
inc
nop
fdivl
add
ret
ret
pop
push
pop
lcall
in
fldenv
xlat
push
ret
dec
mov
ficoms
mov
test
dec
into
icebp
mov
test
xchg
in
or
sbb
mov
xor
pop
lds
ja
sbb
xchg
add
sub
xchg
sub
lahf
sarb
daa
js
lds
in
mov
in
and
mov
out
aam
and
les
hlt
int3
mov
je
mov
and
jl
and
xchg
cmp
ror
sahf
loope
xor
lcall
sbb
push
cmp
push
pop
stc
jno
dec
pop
inc
in
std
sarl
push
inc
outsb
movsl
clc
std
mov
cmp
push
and
adc
xchg
add
jnp
repnz
xlat
mov
roll
adc
cld
add
mov
jge
mov
cmp
inc
fcomps
sub
and
lds
repz
jne
das
dec
inc
jle
and
inc
jge
loope
fildll
xor
mov
andl
leave
jmp
mov
fdiv
ljmp
xor
sub
mov
ljmp
lret
int3
adc
fbstp
jl
sub
imul
cmp
inc
out
enter
js
mov
lods
arpl
je
dec
imul
loopne
shlb
or
mov
pop
je
pushf
mov
inc
mov
mov
pop
imul
xlat
dec
fistpll
sbb
or
arpl
stos
dec
aas
stos
out
jle
mov
mov
mov
fwait
and
jo
xchg
pop
outsl
dec
mov
std
rorb
jbe
lods
and
lods
aam
or
cmc
xor
hlt
xchg
xchg
in
push
and
cmpsl
shrl
je
xor
lea
sub
pop
nop
sub
cmp
or
xchg
add
inc
adc
arpl
mov
ds
dec
mov
adc
or
popf
add
xchg
nop
inc
arpl
xor
sub
push
xchg
mov
pop
or
mov
mov
jbe
mov
aam
inc
mov
sub
ret
xchg
loope
lcall
xchg
sbb
mov
cmc
pop
jle
out
rclb
andl
in
mov
xor
or
lods
lds
mov
fcoml
clc
in
into
scas
lahf
and
jo
insb
push
mov
std
test
mov
pop
js
push
jg
and
cwtl
dec
xor
cltd
div
inc
loopne
mov
push
pop
inc
xor
shlb
xchg
push
int3
push
add
movb
in
in
or
stos
dec
fldcw
add
clc
into
loopne
in
mov
or
mov
or
or
push
add
sahf
mov
sub
cmp
xor
and
ss
pop
push
leave
ja
lods
popa
dec
mov
mov
pop
aad
jmp
mov
inc
scas
inc
inc
jne
fs
insl
negl
and
loop
hlt
lods
mov
mov
cmp
bound
cld
push
lock
inc
test
ljmp
in
lock
jmp
jb
pop
xchg
imul
ds
and
jmp
std
ds
dec
outsl
shlb
lods
jge
mov
xor
lock
inc
fldenv
push
xchg
fidivs
pusha
sbb
nop
pop
xchg
subb
call
jecxz
dec
imul
mov
inc
lods
notl
push
sub
sub
sbb
sbb
clc
repz
jb
lcall
jge
mov
ss
xchg
cmp
dec
cmpsl
and
inc
mov
aam
int
mov
movsl
inc
mov
call
mov
into
xchg
add
fdivp
push
jmp
xlat
xchg
sub
std
cld
mov
mov
mov
pop
in
lret
or
jp
adc
jnp
add
lods
jle
and
adc
imul
push
mov
cmp
mov
lret
mov
in
dec
jne
xor
adc
mov
xor
pop
and
call
sahf
dec
cwtl
sbb
sub
push
mov
push
lcall
push
sbb
inc
lea
outsl
sbb
mov
adc
loop
push
mov
out
jns
push
dec
adc
xchg
or
addr16
pop
xchg
adc
jle
es
cmp
xor
popa
adc
aaa
popf
rorb
cs
pop
adc
icebp
mov
nop
or
adc
les
loopne
mov
aad
cmp
xchg
adcb
sub
jmp
sub
es
pop
cs
out
pusha
pop
mov
inc
lods
out
popw
xor
mov
inc
aas
push
jl
mov
ret
mov
scas
sub
inc
sarb
dec
outsl
mov
dec
or
mov
cmp
adc
test
rclb
xor
lret
jp
call
sub
rolb
arpl
jnp
int3
mov
pop
insb
ds
mov
out
sbb
xchg
xor
dec
repnz
popa
xor
clc
dec
push
xchg
icebp
pop
and
add
daa
mov
pop
mov
or
adc
lock
sbb
xor
test
add
jbe
add
pushf
jne
jbe
mov
cmp
adc
cwtl
add
jne
inc
xchg
repz
dec
data16
fdivs
nop
inc
test
jg
jmp
pop
lods
lret
adcl
into
iret
fcomi
cli
cs
outsb
mov
pop
and
fsubr
sbb
mov
xchg
mov
lcall
rcrl
rolb
cwtl
mov
sbb
out
inc
enter
fdivs
mov
xchg
icebp
pop
pop
pop
and
rolb
inc
call
push
adc
cli
inc
lahf
adc
xor
sub
inc
jg
popl
pop
pop
cltd
sub
adc
stos
ds
shrl
mov
inc
or
xchg
je
jp
je
in
jl
leave
sbb
iret
adc
push
lock
or
and
lahf
fsubs
int
scas
out
sub
adc
mov
cmp
jecxz
mov
jne
jno
test
orb
sbb
mov
jle
mov
loopne
scas
mov
enter
xor
jne
fwait
in
cld
cmp
scas
pop
sub
xchg
xchg
sub
repz
ffreep
mov
insb
pop
aaa
push
pop
imul
cs
call
mov
ficoml
cld
sbb
test
ret
stos
and
fs
fsubl
insl
xchg
repnz
pop
and
jo
mov
adc
add
test
inc
push
adc
push
cmp
hlt
lods
shrb
xchg
loope
cmp
xchg
stos
mov
clc
xchg
daa
xchg
xchg
or
sub
insb
push
mov
js
gs
out
fldl
mov
pop
push
sub
mov
movsl
in
call
lret
fwait
lcall
add
push
outsb
jae
push
mov
fs
mov
dec
sub
or
outsb
or
ja
imull
movsb
fwait
mov
bound
mov
push
shrl
repnz
insb
faddl
sahf
cmp
add
pop
cs
sub
mov
push
stos
add
xor
shlb
subl
popf
dec
leave
test
inc
push
pop
cmpsb
mov
adc
sbb
jmp
adc
outsl
sub
fisubl
mov
xor
movsb
push
sub
popa
mov
pop
jmp
mov
adc
xor
dec
xchg
pusha
mov
iret
lcall
stc
fildll
cmp
fwait
push
dec
xchg
jle
adc
in
cmp
mov
mov
pop
sub
or
aam
sbb
push
ret
xlat
outsb
in
sbb
mov
ja
sbb
std
mov
jno
out
jmp
mov
sbb
stos
jbe
popa
push
push
push
shl
jl
sahf
adc
mov
or
xor
out
jl
sar
jg
std
int
das
cltd
xchg
stc
and
in
sbb
cmpsl
inc
into
mov
pop
xchg
xchg
and
cmpsb
cltd
popa
daa
sub
ret
lock
dec
dec
insl
lcall
imul
repz
dec
mov
dec
fildl
cmp
cmp
test
shr
mov
icebp
int3
push
sbb
inc
sbb
lods
or
pop
pop
or
jl
pop
popf
jo
movsl
or
out
jl
pusha
xchg
stos
pop
and
out
jae
dec
into
es
es
js
or
inc
idivb
cmp
inc
test
mov
inc
jo
fistpl
sbb
mov
cs
int3
push
or
addl
mov
cmp
xchg
push
fiaddl
cwtl
popf
dec
repnz
add
sbb
mov
bound
bound
lahf
inc
test
jne
loopne
and
filds
and
and
int
mov
cld
imul
and
add
and
jno
adc
mov
jbe
into
lcall
std
js
fsts
imul
pop
xor
fidivrl
add
ss
pop
push
addr16
iret
js
lret
xchg
adc
mov
pop
jae
push
mov
movb
insb
mov
pushf
shll
cli
insl
cli
xor
sbb
pusha
mov
or
pop
ljmp
jl
and
xlat
iret
gs
dec
repnz
push
xchg
shlb
pop
ret
inc
faddl
add
lret
sbbb
mov
iret
xchg
lods
mov
out
bnd
lds
fisttpl
push
mov
inc
fwait
mov
push
push
sub
rorb
cwtl
and
mov
cltd
ja
ljmp
pop
inc
jbe
fwait
aaa
idivb
and
in
ret
cltd
add
push
xchg
sbb
adc
idivl
in
popa
xchg
or
daa
add
icebp
jae
mov
cmp
mov
rcr
sbb
arpl
leave
loopne
orb
test
dec
xor
fwait
pushf
push
inc
inc
push
in
popf
push
or
sub
jle
cmp
addr16
mov
pop
dec
bound
hlt
adc
fistpll
subl
fdivrs
sub
rorl
xor
pop
je
mov
adcb
adc
mov
add
adc
inc
out
es
push
divl
std
or
push
jmp
movsb
inc
movsb
movsl
nop
add
push
imul
and
cmp
add
test
mov
jne
jg
mov
inc
sarb
mov
js
lret
mov
mov
mov
daa
js,pn
adc
pop
stc
mov
adc
and
cmp
ficoml
jne
rclb
push
push
inc
pop
out
iret
cltd
addr16
sub
pop
inc
adc
rorl
xchg
mov
popf
stos
inc
pop
lods
ja
xor
sbb
and
mov
sub
jecxz
out
pop
or
dec
mov
imulb
mov
in
and
mov
negl
pop
lret
and
add
and
jge
icebp
sbb
fisubl
pop
negb
xlat
jne
jnp
repnz
rorl
mov
mov
mov
mov
or
sub
hlt
jb
shlb
hlt
cmc
outsb
mov
aam
xor
jg
imul
out
add
inc
inc
jecxz
ja
into
call
ret
js
or
imul
mov
add
jno
mov
div
sub
xchg
push
sub
into
xchg
jl
cmp
adc
jb
dec
enter
inc
es
ljmp
mov
sub
cmp
pop
stos
pop
adc
pop
loope
mov
adc
mov
mov
push
aaa
adc
push
push
test
daa
xorl
inc
sub
mov
jbe
xchg
cmpb
pop
inc
adc
jae
scas
aam
dec
ds
jmp
dec
test
and
rcr
mov
mov
xorl
pop
push
popa
sub
cmp
lods
sub
stos
out
fadd
shlb
inc
loope
pusha
rorb
pushf
jns
dec
popa
cmp
dec
test
sub
lock
mov
cmpsl
mov
mov
and
fisubl
test
pop
ljmp
lea
scas
sub
add
cli
xchg
jl
cltd
int3
and
loope
dec
cli
fildll
push
jecxz
xsaveopt
arpl
mov
cmpsb
xor
out
sub
fucomp
pop
dec
jecxz
stos
jg
jae
add
dec
out
hlt
inc
movsb
insl
mull
push
les
stc
cltd
inc
dec
cs
cmpsb
daa
push
sub
inc
jno
sar
mov
fisttpl
and
push
loope
push
popl
jge
jecxz
sbb
xchg
dec
xlat
icebp
hlt
xchg
sbb
stos
jg
pop
xor
or
loop
enter
or
and
rcrb
xchg
test
iret
jg
jae
lret
pop
push
pop
and
test
test
movsb
scas
cld
das
cmp
pop
mov
lcall
inc
cld
fisttps
mov
aam
pop
push
les
mov
out
pop
test
lods
push
mov
mov
pop
fiadds
scas
int3
add
clc
push
sbb
mov
add
cwtl
jecxz
jb
and
sub
in
push
outsb
fstpl
stos
dec
stc
jmp
mov
adc
scas
gs
popf
sbb
icebp
test
mov
call
xorb
xor
test
ret
jns
push
jecxz
cs
rcr
int3
gs
mov
cmpsb
ret
push
xor
test
and
push
adc
xchg
xchg
dec
cmp
dec
mov
repnz
inc
int
xchg
mov
rcrl
xchg
mov
mov
sub
cmpsb
adc
ljmp
hlt
inc
sbb
scas
mov
scas
das
and
mov
call
out
stos
dec
or
rolb
lock
lods
jp
mov
mov
cwtl
adc
ss
jg
adc
jae
mov
xor
cltd
aad
xchg
out
jnp
lods
and
es
lcall
and
push
add
add
jl
dec
jle
inc
push
imul
sub
xchg
add
ret
pop
aaa
scas
cld
ror
mov
ja
add
xor
add
jb
aad
push
popa
and
push
icebp
mov
in
adc
xor
cwtl
push
frstor
shrl
push
fidivrs
cmpsl
pop
insb
mov
xchg
mov
idiv
xor
dec
push
gs
push
out
cwtl
test
inc
loopne
push
push
sub
addl
imul
and
insb
xchg
pop
sub
jae
scas
sub
int3
pop
dec
mov
push
xchg
or
cwtl
mov
fimuls
lret
in
mov
insb
movsl
nop
ljmp
lahf
or
pop
sbbl
pop
pop
jecxz
adc
pop
inc
adc
add
shlb
pop
cs
jl
lock
xchg
or
add
add
and
sbb
dec
out
xor
jnp
xor
xchg
orb
jns
and
sub
test
mov
add
leave
fst
jbe
lret
and
repnz
repz
mov
mov
xor
ficompl
cmp
add
mov
sub
jg
lcall
jle
aas
fnsave
jg
icebp
sub
popa
sbb
and
xchg
adc
data16
adc
mov
dec
fwait
jno
xchg
outsl
inc
hlt
adc
fs
sahf
mov
pop
rorl
jge
dec
inc
push
adc
test
adcb
fdivr
add
push
mov
dec
xor
jge
sahf
and
test
push
lret
call
aad
xchg
in
lea
psrlw
mov
jae
jne
push
js
popa
pop
iret
cmp
sub
sub
jbe
arpl
mov
jmp
inc
sub
in
sub
sbb
je
add
nop
pop
fsubrl
loope
cs
imulb
pop
movsb
mov
and
data16
ja
faddp
cmpsb
outsl
je
ljmp
rorb
insb
in
push
jns
std
mov
daa
push
dec
lret
push
imul
xchg
lret
fcmovu
mov
adc
arpl
push
repz
jle
clc
hlt
dec
pop
rcrl
pop
jbe
or
sarb
cmp
int
ds
xchg
int
jbe
aaa
int3
push
and
dec
inc
add
pop
jne
fsubs
or
testl
or
pusha
or
test
repz
roll
test
lret
add
adc
xor
int
ss
xlat
stos
fcmovb
xor
dec
pop
xor
sbb
lahf
mov
leave
xchg
xor
adc
rclb
mov
xor
mov
insl
in
js
inc
push
cmpb
adc
sahf
jbe
fsubrs
mov
xchg
outsl
repnz
enter
mov
jl
xchg
gs
push
adc
dec
lcall
mov
fistpl
cli
xchg
add
cs
mov
dec
push
aad
push
lret
mov
loopne
jecxz
pop
pop
sub
cli
ja
cmpsb
jg
mov
or
push
icebp
adc
cmp
and
movsb
into
or
testb
lock
inc
das
cld
dec
movsb
in
and
xor
repnz
add
xchg
hlt
fcmovnbe
mov
mov
mov
repnz
ror
fwait
clc
cmc
divb
cmpb
dec
push
aam
in
push
mov
std
lret
push
mov
mov
pop
push
add
in
jns
stos
clc
lds
lock
push
xchg
fs
push
xchg
xchg
or
xchg
pop
jae
ss
or
inc
stc
dec
test
out
or
dec
cmpsb
nop
insl
icebp
push
push
seto
jnp
cld
mov
add
mov
inc
fcomip
add
fistl
lahf
inc
cmc
inc
cmp
clc
inc
scas
mov
mov
dec
idiv
sbb
xchg
mov
jmp
movsb
pusha
fs
loope
loop
sti
adc
cmpsb
mov
mov
ja
push
push
mov
je
sbbb
xchg
sub
inc
fsubrl
ret
jno
pop
popf
popf
aaa
int3
inc
aam
jno
push
xor
test
mov
mov
mov
jnp
jo
mov
shl
and
push
outsb
data16
jecxz
mov
loop
cmpsw
cmp
mov
sti
jge
mov
jo
mov
sti
rorl
cmp
js
mov
lret
dec
xchg
push
mov
push
int
sub
ret
outsl
test
push
inc
xchg
adc
fistps
in
mov
push
xor
test
xchg
cmc
shl
or
or
cmc
sbb
test
sub
push
mov
outsl
push
fisttpll
orb
sbb
lea
addb
mov
fsubrl
pop
cmp
mov
fwait
mov
or
mov
mov
or
insb
ret
lahf
les
and
int
ljmp
xchg
inc
cmpsb
xlat
cmc
pop
jne
lock
dec
mov
inc
test
flds
jle
sbb
out
icebp
mov
pop
pop
dec
mov
fwait
push
inc
pop
daa
jbe
pop
gs
imul
jo
fwait
in
jae
lret
inc
das
cmp
or
mov
fcomps
jg
mov
add
push
mov
leave
jo
adc
jmp
jo
lcall
test
sub
dec
out
mov
or
inc
and
add
sub
test
stos
cmp
mov
cmp
mov
icebp
sub
lahf
sub
imul
pushf
sub
or
adc
or
add
in
mov
test
ficomps
loopne
or
jge
jne
add
and
add
roll
push
sub
lods
mov
adc
or
xchg
inc
xchg
and
insb
ja
loope
pop
addr16
xor
inc
push
dec
rorl
jl
inc
inc
push
sbbl
add
push
fsubr
dec
adc
xor
xlat
std
test
xor
add
outsb
mov
movsb
out
jle
pop
xchg
in
adc
dec
xor
clc
stos
ljmp
push
sbb
scas
cli
std
mov
loop
mov
notb
shll
leave
add
mov
add
std
or
jmp
loopne
add
mov
in
lahf
add
mov
inc
js
mov
aaa
jp
stos
repnz
mov
int
std
daa
pop
imul
pop
fwait
rcrl
test
mov
cmc
outsb
sub
arpl
mov
repz
xor
xchg
mov
shrb
aad
push
dec
push
sub
mov
xchg
repz
dec
pusha
mov
inc
sbb
lea
push
cmp
ret
jle
cmp
popf
mov
mov
push
pop
mov
sub
test
jp
std
in
lods
inc
je
aam
cmpsl
daa
ret
pop
fdivrs
cmp
pusha
adc
jns
stos
loopne
scas
sub
jo
jno
and
into
xor
pop
scas
in
mov
imul
sub
sub
cli
sbb
sbb
push
lods
mov
mov
aam
popa
out
call
pop
dec
test
inc
ret
jno
lods
fstps
sub
fwait
sbb
or
xchg
jecxz
sti
fsub
xchg
cmp
xor
sub
xor
ljmp
lea
call
jo
sti
stos
pop
and
pushf
cmp
xchg
and
pop
inc
inc
test
fbstp
sub
aas
pop
dec
pop
test
popf
sub
add
xchg
sub
cmp
push
clc
pop
pop
outsl
and
and
cmpsl
xchg
cltd
data16
mov
cs
pop
dec
sbb
in
xor
cmp
aaa
ja
in
test
je
jae
jl
loope
loopne
cld
pop
hlt
mov
xchg
cs
push
repnz
rcrl
push
mov
push
and
jnp
inc
popa
push
adc
push
pop
ljmp
int
rcr
int3
push
lahf
sti
leave
sub
imul
loop
mov
sbb
pop
mov
arpl
inc
daa
xor
jge
dec
or
push
rorl
imul
arpl
insb
jg
sbb
cltd
jo
imull
out
data16
fs
sahf
inc
dec
lea
int3
imul
dec
and
xchg
pop
mov
gs
addr16
sbb
or
rcll
pop
in
jae
pusha
addb
or
xor
and
xor
or
fdivp
cmp
add
inc
outsb
add
pop
sbb
jecxz
sub
stos
jle
lcall
fwait
jg
out
test
pop
xchg
push
jbe
cli
lea
xor
cltd
push
jae
daa
movsl
push
jmp
sar
xchg
mov
int
mov
jae
mov
shlb
sti
jns
mov
mov
or
adc
bound
xor
pusha
mov
fdivrl
mov
mov
daa
add
cmp
push
add
shrb
in
lcall
mov
jnp
mov
adc
mov
aam
fldt
addr16
xlat
sbb
imul
pop
jl
and
inc
popf
stc
xchg
fisttpl
or
popa
add
lret
xlat
dec
into
xor
imul
mov
das
push
out
pop
ret
popf
ficoms
xor
pop
cmp
loopne
int
xorb
lcall
lock
lock
or
inc
gs
cmp
test
ret
outsb
lret
outsl
sbb
loop,pn
ljmp
rcll
outsl
dec
sub
mov
ror
fldenv
mov
push
mov
ljmp
pusha
add
mov
jge
sub
je
in
adc
repz
mov
sub
iret
mov
fistpl
sbb
push
jmp
jae
jne
jl
mov
loope
rcl
sub
inc
or
or
xchg
and
pop
mov
jae
pop
es
sub
jmp
ljmp
scas
or
sbb
jnp
mov
pusha
jg
mov
leave
sahf
je
pop
fidivl
das
out
leave
int
xchg
pushf
xchg
pop
jl
mov
pop
and
out
in
push
dec
test
mov
fs
adc
in
inc
push
sbb
cmpb
pushf
inc
pop
push
sti
nop
fistpl
ds
movsl
out
and
jno
rorl
mov
rclb
pushf
lds
add
sar
pop
loop
lcall
cmc
ja
xorl
test
dec
pusha
andb
mov
add
mov
mov
je
and
fwait
pop
movsl
popa
out
xor
inc
mov
int3
adc
jo
push
dec
xchg
xchg
mov
shl
lahf
mov
stos
pop
xchg
out
leave
sub
jno
pop
or
and
fwait
out
mov
je
add
cmc
jns
cli
xor
push
xorb
js
mov
pop
push
cmpsb
xchg
rorb
rclb
enter
dec
push
xor
imull
xchg
jle
fdivr
jns
cld
pop
push
nop
mov
push
popl
and
cltd
pop
out
bound
xchg
push
scas
mov
sbb
icebp
insb
out
fidivrl
pop
cmp
xor
or
dec
out
decb
imull
sbb
sub
pop
out
pop
add
sbb
fisttpl
sti
jae
fwait
inc
dec
loop
add
mov
call
outsl
aam
xlat
mov
cmp
fsts
xchg
mov
sub
jnp
cmp
mov
cmp
ljmp
xchg
pop
and
ljmp
js
mov
lods
pop
and
arpl
pop
ljmp
lret
mov
xchg
dec
in
push
cwtl
stos
fcmovb
dec
enter
insb
mov
mov
jle
jge
cmp
mov
or
push
lds
inc
and
push
loop
or
andb
lock
popf
push
jp
es
xchg
mov
cltd
pop
mov
and
popf
clc
cmp
push
int
mov
aad
cmp
sbb
aaa
les
sbb
lds
mov
js
fwait
int3
push
adc
fmull
bound
mov
adc
mov
pop
enter
in
lds
idivb
leave
leave
subb
arpl
sbb
inc
dec
test
sbb
test
add
sbb
mov
mov
sbb
cmp
icebp
mov
mov
dec
push
push
hlt
in
lahf
in
fnstcw
bnd
xor
out
cmp
test
inc
sbbb
mov
int3
lds
rcl
es
adc
and
push
push
mov
xchg
aaa
sahf
fcomp
lahf
xchg
and
mov
adc
pop
mov
leave
fildll
ss
jno
mov
mov
mov
mov
out
cmp
in
iret
sbb
pop
xlat
pushl
out
neg
pop
aaa
mov
in
mov
cld
mov
test
pop
or
xchg
repnz
adc
aaa
and
mov
pushf
nop
sti
jno
dec
mov
sbb
inc
ret
pop
hlt
dec
add
mov
imul
jo
push
lods
rorb
cmp
insb
pop
insl
mov
dec
adc
jle
mov
push
xor
cmp
cwtl
sbb
xlat
jmp
jecxz
movsb
inc
test
test
pushf
fcmovnu
imul
rcr
shrl
fsubrs
jle
adc
lods
dec
push
xchg
test
call
cmp
repnz
mov
mov
jb
push
and
scas
sbb
dec
mov
mov
imulb
xchg
inc
popa
sbb
aad
mov
push
mov
pop
inc
pop
repz
mov
loope
sbb
cmp
mov
sub
adc
jmp
pop
loop
icebp
and
shrl
dec
xchg
add
sahf
mov
adc
xor
sbb
cltd
dec
adc
mov
aaa
or
leave
dec
pop
out
or
push
inc
push
jg
push
xor
int
xchg
xor
das
xchg
call
sub
cmp
mov
xchg
push
cs
dec
stos
xchg
xchg
inc
mov
popf
adc
add
cmp
jno
aam
push
mov
je
fisubl
add
fstps
filds
xlat
fistl
lret
adc
mov
jno
nop
ljmp
xchg
sbb
xlat
pushf
in
mov
adc
cmpsl
lret
jmp
jns
in
subb
mov
icebp
inc
mov
and
dec
cltd
pop
mov
jge
adc
mov
data16
push
and
cwtl
xor
popf
rolb
mov
dec
sub
xchg
lahf
sbb
or
lock
mov
xor
test
addb
mov
sbb
jo
dec
pop
sub
imul
mov
adc
imull
mov
cmpsb
xchg
xor
fwait
stos
or
insl
iret
inc
dec
sbb
lea
push
add
sbb
jmp
popa
or
dec
cwtl
dec
mov
shll
pop
jb
jae
push
jb
push
mov
shll
adc
dec
test
or
clc
cs
in
add
addl
add
mov
mov
scas
rcl
add
pop
jg
mov
mov
pop
sub
push
jge
jno
movsw
call
pop
mov
dec
dec
hlt
push
pop
mov
xchg
cmc
imul
or
rep
and
jg
pop
out
cmc
fdiv
and
sub
mov
cs
sbb
mov
ss
mov
es
jle
push
aad
and
rcrb
push
cmp
gs
mov
sbb
aas
data16
out
pop
imul
outsb
sti
fsubs
jae
pop
push
xor
scas
push
dec
xchg
pop
jo
xor
mov
pushf
jmp
mov
repz
dec
divb
push
aad
adc
stos
cmc
adc
arpl
in
jae
cs
add
sub
add
xor
mov
and
data16
pop
mov
cmp
stc
out
cmpb
cwtl
pop
mov
fwait
ja
mov
mov
jbe
pop
pop
push
js
cmp
lock
cmp
call
dec
xchg
and
fwait
sub
jbe
je
mov
mov
in
repz
ljmp
jp
sar
lea
cltd
cmpsb
inc
jno
testl
mov
add
test
jnp
lahf
add
mov
mov
pop
aad
call
pop
stos
sbb
gs
cmpsl
out
adc
cmp
add
shll
aas
out
mov
aaa
dec
shlb
imul
sarb
inc
roll
repz
mov
pop
lds
or
push
imul
add
mov
sub
outsb
jl
jae
lret
dec
push
adc
sub
mov
inc
sub
sub
repnz
shll
scas
fwait
aam
rcl
or
out
scas
add
movsl
sub
cmc
cmp
mov
std
jne
sbb
ljmp
inc
and
hlt
outsl
and
out
sub
andl
inc
stos
jnp
or
out
mov
fwait
in
iret
ret
loop
sbb
rcll
mov
or
in
dec
icebp
and
jae
pop
or
mov
rcl
dec
lock
xorl
xchg
sbb
jmp
int
pushf
adc
mov
les
sbb
sbb
test
dec
sbb
bound
imul
ja
pop
outsl
and
out
fwait
mov
pop
cmpsl
inc
jp
jecxz
shrb
sub
cwtl
or
and
in
sub
xchg
jo
popf
sbb
faddl
mov
xor
or
adc
push
outsb
enter
pop
sti
imul
mov
ds
cmp
push
int3
leave
push
mov
pop
imull
adc
xor
dec
ret
cmc
or
mov
cmp
adc
sti
lret
dec
or
in
cmp
lea
ja
pusha
cmpsb
mov
roll
cwtl
push
xchg
insl
insb
hlt
fs
xlat
cmpsl
push
insb
fs
mov
or
lcall
in
inc
mov
inc
fmull
out
arpl
int
sub
sub
popf
loopne
jbe
aas
xchg
push
insl
test
jb
jb
mov
lods
insl
push
pop
xlat
inc
ds
js
push
scas
lock
cmpsl
cmp
insb
leave
mov
push
nop
stos
push
mov
jmp
xchg
pusha
xlat
imul
jnp
sub
arpl
aad
data16
xchg
scas
adc
inc
push
sbb
cltd
pop
inc
icebp
pop
push
pop
sub
bound
pop
loopne
loope
push
adc
mov
aas
int
sbb
fnstenv
dec
sub
test
or
mov
testb
xchg
inc
jl
cli
mov
mov
clc
push
mov
dec
push
flds
cs
cmp
xchg
mov
xor
mov
xchg
jb
add
or
into
xor
push
mov
lret
ljmp
loopne
or
adc
pop
pusha
addr16
daa
dec
or
xchg
dec
dec
arpl
cmp
cwtl
sub
push
dec
sahf
mov
push
imul
cld
pop
inc
and
xor
test
out
mov
mov
clc
and
outsb
ret
insb
andl
fs
cmpsb
pop
xor
divl
out
xor
adc
mov
jo
std
add
jg
cltd
xchg
dec
and
mov
push
loope
mov
lods
jmp
sti
loopne
negl
movaps
icebp
mov
popa
hlt
sarb
fildll
xchg
lcall
std
push
xor
cmpsb
je
sbb
add
cmp
push
test
popa
fwait
mov
dec
jmp
lea
mov
movsb
pusha
push
sbb
jmp
sti
test
xchg
xchg
enter
sahf
jno
pop
mov
xchg
and
fisubrs
aad
addb
mov
pop
ja
cmp
repnz
xchg
add
fsub
mov
mov
nop
dec
push
bound
cmp
sbb
ret
fstps
cmp
stos
or
mov
push
out
fsts
pop
gs
cmpsb
xchg
and
dec
lods
or
push
sub
jmp
fsubs
inc
imul
pushf
into
ja
fildll
fsts
repz
loopne
xor
add
div
dec
lcall
pop
sub
dec
inc
sarl
or
xchg
sbb
mov
add
int
cmc
insl
or
stos
leave
mov
lods
pop
sub
pop
shr
sbb
pop
cs
sub
xchg
dec
fs
adc
mov
sub
dec
repz
fistpl
mov
sub
ljmp
xchg
sub
pop
mov
mov
incl
add
in
mov
push
pop
jnp
jns
mov
in
or
aam
pop
adc
addr16
gs
mov
mov
pop
pop
mov
fs
xor
outsl
add
pop
out
rolb
in
mov
outsb
and
cltd
xchg
sbb
inc
xor
sub
push
mov
outsl
lock
movsl
rorl
dec
lea
sahf
cmpsb
mov
xor
and
inc
adcb
mov
es
pop
shl
jae
xlat
xchg
inc
xor
add
and
les
xor
xchg
adc
jb
pop
add
cmp
in
das
leave
cmpsl
add
stos
int3
stos
xchg
int
ret
lock
xor
pop
rcll
lds
mov
or
push
inc
push
adc
lret
stos
inc
bound
xor
jg
inc
lock
cmpb
pop
push
daa
aam
adc
pop
fs
cld
push
daa
mov
adc
pushf
push
cmpsb
mov
and
dec
or
pop
cwtl
lds
jecxz
ficompl
cmpsb
cmpsb
hlt
mov
test
lock
xchg
in
or
xchg
push
cmpsb
stos
stc
and
xor
fsub
insb
lock
fcmovu
pop
pop
into
aas
scas
sub
mov
leave
cmpsl
sub
icebp
lods
pop
mov
cmp
mov
and
fnstenv
adc
test
push
sbb
push
or
jne
push
cs
inc
call
dec
xor
gs
push
lock
push
push
pop
enter
addl
push
and
testl
push
mov
pop
aaa
dec
stos
cmc
inc
rolb
fdivl
mov
daa
test
mov
mov
add
xor
call
jns
xchg
fidivrl
or
bound
int
sub
imul
add
repnz
call
popf
xchg
mov
xchg
shll
frstor
aaa
data16
fidivrs
gs
dec
frstor
shlb
loop
xor
and
js
jle
push
add
inc
mov
mov
fwait
dec
add
into
mov
sahf
and
jbe
shl
mov
filds
cs
negl
fcoms
clc
or
repnz
cmp
push
mov
cld
jne
leave
sub
test
and
movsb
inc
imul
adc
xchg
mov
push
mov
inc
push
pop
jle
mov
lret
rclb
sbb
sub
int3
in
jmp
sbb
push
ja
shlb
push
or
xchg
rcll
cmp
addl
mov
push
ljmp
mov
int3
adc
jns,pt
cmp
jbe
add
test
fiaddl
out
pop
xlat
lret
mov
inc
mov
scas
icebp
lret
mov
fcmovnbe
push
pop
add
push
movsb
mov
xchg
adcl
xchg
cmp
cmpsl
add
jne
icebp
scas
jae
out
add
xor
sub
or
das
insb
xor
aad
add
mov
icebp
dec
subb
inc
enter
ds
popa
popf
mov
dec
push
pop
ja
das
inc
jle
push
ficomps
or
pop
pop
ss
adc
push
sub
mov
push
push
sub
push
in
out
pop
das
sub
fistl
testb
fnsave
das
into
and
cmpsb
insl
idiv
push
push
stos
popa
push
jmp
popa
adc
fs
pop
cmp
inc
arpl
arpl
out
mov
movsb
std
std
and
cmpsb
mov
mov
jns
adc
xor
in
out
add
and
xchg
imul
dec
lock
arpl
jns
fstpl
fldcw
test
mov
inc
out
or
jp
cli
inc
mov
cmpsb
shll
mov
loopne
in
push
pop
mov
sbb
pushf
jge
lret
add
repz
outsl
data16
fisttpl
outsb
push
cs
adc
popl
sbb
mov
mov
xchg
jl
mov
sub
lds
mov
mov
mov
cmp
or
test
psllw
inc
add
pop
lret
out
push
push
sub
lods
iret
fwait
push
rorl
or
push
ret
push
aas
jl,pt
push
data16
pop
inc
arpl
push
mov
cmp
jg
dec
xor
shlb
stos
or
cmp
inc
dec
push
daa
xchg
dec
stos
fwait
xorl
rcrl
adc
es
pushf
stos
pop
cmc
test
xor
pop
aad
pop
pushf
pop
les
es
cli
mov
jmp
fisubl
sbb
int3
out
pop
cs
test
mov
xor
mulb
in
lcall
ss
xchg
out
jmp
loope
in
mov
sbb
push
movsl
imul
jl
outsl
jp
test
jg
and
pop
and
leave
adc
mov
imul
insb
pop
fwait
test
push
jmp
push
xchg
push
popa
int
cli
insb
adc
or
pop
outsl
jbe
xchg
mov
mov
pop
mov
xchg
out
pushf
mov
out
xlat
stc
je
and
mov
data16
jge
adc
in
push
add
orl
mov
in
pop
cmp
jmp
jg
cmpsl
shl
ja
xchg
or
sti
sub
mov
adc
xchg
mov
cs
sbb
mov
arpl
mov
pop
repz
fdivs
inc
data16
xorb
mov
lods
out
add
mov
mov
cmp
aas
arpl
and
xchg
jno
push
jp
sahf
xor
inc
stc
mov
adc
mov
into
cmp
jns
mov
jb
fwait
sub
lds
addr16
mov
loope
cmpsl
or
and
pop
test
pushf
jno
shlb
sarl
push
sub
insb
push
push
mov
pusha
cmpsb
sbb
lock
std
cmpsl
cmp
and
arpl
mov
mov
add
in
dec
es
push
mov
pop
adc
cs
daa
xchg
loope
xchg
and
push
inc
cmp
sti
out
inc
lods
iret
push
andl
pop
fisubrs
cmp
jl
mov
xor
aam
call
in
call
and
in
test
fst
pop
and
cmp
loopne
add
mov
cmp
add
dec
arpl
shr
mov
adc
int3
les
pop
add
arpl
ja
mov
fs
insl
sub
or
bound
mov
add
mov
and
insb
push
push
lods
cmp
mov
jle
sbb
jne
jns
push
push
cmc
mov
cmc
imul
std
mov
cld
sub
ret
bound
daa
adc
popa
ret
jbe
lret
mov
jo
adc
sbb
jo
push
mov
pop
jecxz
int
outsb
cmp
icebp
fs
adc
ds
mov
sub
add
adc
pop
mov
aam
cmp
repz
scas
in
fwait
ja
xchg
loopne
sub
inc
lods
data16
sti
jns
mov
aas
rolw
outsb
es
jl
jae
adc
cli
add
cs
lock
add
mov
push
loope
rol
mov
cwtl
or
push
fldlg2
les
sarl
orb
enter
test
mov
pop
pop
xchg
and
and
xlat
shll
ja
aad
out
outsb
push
mov
jle
pop
cmp
test
sti
push
or
xchg
push
seto
nop
call
and
pop
fsubrl
mov
inc
iret
sarl
mov
push
ficompl
test
mov
inc
jb
rcrl
lds
dec
cmp
out
lret
das
sub
outsb
add
pusha
jg
adc
mov
fs
addr16
dec
fimull
jb
mov
jl
fcmovnu
mov
cmp
nop
je
popf
cmp
cltd
stos
int
lock
push
sub
aas
insb
adc
or
xchg
aad
add
inc
mov
test
xchg
or
sbb
fdivrp
fwait
scas
lods
mov
pushf
sbb
push
std
pop
mov
mov
push
adc
incb
movsl
stc
inc
icebp
mov
insl
dec
pop
push
fdivs
pop
sub
dec
sbb
sub
adc
adc
out
mov
in
lahf
pop
popf
adc
jmp
inc
fs
mov
rcrl
outsb
mov
fistpll
fstpl
lret
icebp
mov
cmp
mov
mov
cwtl
sarl
push
push
decb
outsb
or
inc
test
pop
popa
cmpsl
aaa
fiaddl
enter
in
push
test
lret
jns
ljmp
test
in
pop
call
mov
repnz
loop
mov
lcall
pop
ss
cmp
fldcw
popf
add
jbe
les
or
popf
adc
cmp
inc
test
arpl
pop
jne
xchg
jmp
js
fs
ret
mov
push
outsl
pop
popa
pushf
jne
lds
cld
in
ss
jmp
xor
mov
fcomp
outsb
cmpsb
stos
repz
fs
ss
push
mov
mov
adcl
movsb
jbe
ja
ret
sahf
cld
mov
dec
mov
cmpsl
jnp
es
lods
dec
cmp
test
mov
xchg
push
adcl
lcall
scas
jns
lds
int3
xlat
jmp
test
cmp
stc
sbb
insb
jb
jbe
inc
jg
fstl
inc
aam
sub
sub
sub
xchg
aaa
mov
mov
stc
outsb
pop
lahf
sub
dec
xor
repz
dec
xchg
mov
and
add
cli
mov
sbb
daa
pop
xor
and
movsl
mov
loope
imul
es
add
pop
xchg
jp
inc
mov
fdiv
adc
mov
mov
pop
leave
push
mov
and
inc
pusha
or
sbb
lcall
add
adc
push
mov
jae
das
std
inc
pop
pop
mov
in
dec
mov
orl
loope
in
pop
add
lret
mov
mov
vsubss
mov
xchg
inc
enter
clc
movsl
cs
popa
stos
clts
push
inc
aas
push
lcall
xchg
pop
push
inc
sub
arpl
xor
mov
mov
inc
jae
inc
in
mov
jge
jae
out
cmp
lods
push
fwait
iret
inc
in
movsb
repnz
push
cld
jnp
rorb
sub
fs
push
inc
scas
add
ss
daa
push
fistl
mov
mov
setp
stos
and
push
aas
ja
fwait
ljmp
xchg
sbb
sbb
and
popf
xlat
imul
adc
fwait
cmpsb
xchg
dec
cli
imul
pop
mov
pop
insl
push
jns
dec
or
mov
xor
inc
sarl
mov
aad
push
xor
inc
cmp
mov
sub
mov
and
out
jle
jecxz
out
aas
cmp
xchg
dec
push
pop
add
mov
lods
mov
and
sub
or
jl
jne,pn
and
cli
mov
popf
mov
nop
mov
xor
cmp
push
cmp
xor
outsl
test
js
out
nop
int
dec
sub
and
les
cmp
push
int
mov
out
out
mov
add
std
push
jne
bswap
ss
andl
sbb
hlt
scas
sub
adc
push
test
test
idiv
push
jae
xchg
or
add
leave
xor
jae
cmp
popf
mov
aaa
test
inc
iret
mov
filds
faddp
rol
xchg
mov
pushl
into
ret
call
or
ja
aad
es
out
push
cmp
mov
mov
jno
lahf
push
lea
inc
insl
inc
push
add
or
adc
cmp
je
test
mov
jb
mov
adc
or
mov
imul
ja
cwtl
nop
sub
mov
and
cld
adc
xchg
fnstenv
adc
stc
push
add
neg
push
addr16
jecxz
sbb
mov
fnstenv
call
xchg
inc
xchg
pop
inc
xchg
inc
push
mov
test
popa
je
test
push
mov
push
xor
sub
push
jno
cmp
push
cmp
mov
ror
faddl
stos
test
aam
les
sbb
movsb
ss
ljmp
jo
fwait
cmp
gs
mov
incl
mov
push
pop
dec
pop
jl
bound
and
pop
xchg
aam
xchg
rcr
push
arpl
out
jg
push
add
movsl
xchg
addl
cltd
xor
add
inc
pop
aaa
outsl
inc
push
or
sub
pop
in
sub
stos
loopne
push
jne
aad
add
inc
add
and
pop
fdivl
inc
xor
cmp
push
icebp
xor
ds
fisttpl
pop
shll
sub
mov
aam
mov
imul
add
inc
push
fwait
lock
fisttps
jmp
cltd
mov
test
iret
and
in
clc
xchg
imul
subb
pop
sub
sbb
mov
mov
es
pop
clc
adc
and
xchg
jo
mov
lods
mov
push
leave
add
pusha
fstps
ja
andl
test
dec
lahf
jge
push
test
or
or
xor
and
and
test
scas
dec
push
adc
sbb
test
xor
sbb
and
inc
aad
in
out
in
sub
inc
jg
aaa
das
cwtl
fisttps
inc
xor
aad
cmp
test
or
lock
push
jle
pop
mov
jg
aas
mov
cld
mov
sbb
int3
cmp
hlt
flds
or
dec
lret
and
or
ss
div
mov
notl
movsb
jo
ficompl
or
sahf
sahf
mov
xlat
add
xchg
jmp
ret
inc
or
inc
out
and
jae
imul
sbb
stos
scas
fsub
mov
jno
insl
pop
call
je
cmp
pushf
pop
leave
out
or
mov
test
icebp
mov
xchg
sti
inc
jbe
sub
jo
lock
jns
xchg
sub
jns
imul
orb
in
daa
dec
pop
dec
in
in
or
push
aaa
fwait
in
stos
dec
out
jle
cmp
mov
pop
loopne
adc
ds
lock
cli
mov
xorl
push
dec
push
rep
sti
clc
mov
ds
cs
jmp
and
movsb
das
push
iret
call
out
sarb
cmpsl
aaa
xchg
cmp
push
cmc
lods
push
out
into
pop
shll
bound
lods
test
test
cli
rclb
adcb
in
roll
hlt
sub
jecxz
ret
je
out
stc
flds
sbb
ja
adc
nop
in
mov
mov
add
cli
cli
pop
or
add
pusha
cli
pushf
iret
adc
in
rol
jge
sub
jns
adc
push
sub
leave
or
xor
ret
aam
call
inc
je
add
scas
mov
cmp
int3
push
sbb
hlt
dec
pop
rcrb
inc
xchg
rorb
add
fistpl
fldt
vmovq
jmp
cmp
js
leave
psrlq
jmp
in
pop
lods
dec
gs
cli
lock
push
inc
inc
ds
lcall
enter
pop
lods
or
jmp
shll
clc
aam
cld
xor
xor
push
jne
push
xchg
ljmp
pusha
jbe
mov
inc
dec
add
test
lods
cmp
xor
xorl
daa
pop
call
and
jp
xor
dec
mov
push
outsb
jecxz
lock
xor
push
nop
fwait
call
popf
fnstcw
fwait
mov
popf
out
pmulhuw
inc
sahf
inc
cmp
jnp
jo
mov
xor
jns
dec
cmp
inc
mov
fwait
in
or
adc
lods
lods
xchg
fiaddl
and
and
cmpsb
push
inc
aam
int
add
cltd
inc
push
fsubl
idivl
cwtl
iret
cltd
and
or
mov
sub
or
and
mov
mov
stos
aam
cmp
cmp
jns
js
jecxz
inc
cmp
dec
sbb
loop
insl
and
mov
pop
mov
sub
cmp
loopne
xchg
cmp
jge
enter
mov
test
lock
fbstp
addl
mov
fdivl
xchg
push
push
jnp
aas
mov
xchg
insb
fs
test
push
mov
std
and
imul
and
xchg
dec
mov
sbb
sar
xor
idivb
nop
inc
mov
dec
outsl
jne
je
loop
fimull
pop
lcall
xor
mov
dec
adc
inc
inc
dec
mov
pop
or
insl
loop
jge
loopne
int
mov
xchg
pop
inc
movsb
aad
adc
mov
pop
dec
hlt
cmp
fstpl
std
and
mov
jae
idiv
data16
orb
and
push
fs
and
inc
and
dec
icebp
pop
sub
testb
in
enter
mul
call
mov
push
out
test
rcr
lcall
adc
push
cmp
loop
mov
aaa
xor
bound
mov
and
pop
adcb
xor
bound
clc
lods
dec
in
clc
call
mov
scas
and
and
jge
shlb
hlt
push
das
insl
xor
dec
or
inc
and
mov
xor
sub
push
in
call
cmp
aas
xor
mov
dec
mov
jo
sbb
sub
adc
fs
mov
dec
shrb
std
cld
cmp
or
xor
lods
outsl
inc
pop
lock
adc
mov
loop
jle
xor
mov
xor
lcall
sarl
add
adc
inc
enter
push
sbb
js
mov
lahf
push
loop
std
push
fisttps
cmp
cmpsb
sbb
add
out
xor
enter
pop
inc
xor
movsl
pop
aad
mov
arpl
add
cmp
pop
adc
jnp
mov
adc
hlt
movsl
enter
daa
sahf
adc
pop
xlat
lret
push
mov
js
pop
test
or
pop
repz
cld
pushf
mov
mov
aaa
or
loopne
cmp
outsb
int3
aad
add
jle
add
stos
movsl
sarl
rclb
jge
cmpsl
sbb
filds
push
bound
or
add
loope
jle
test
outsb
pop
repnz
mov
cwtl
out
out
add
and
cmp
loope
data16
pop
sub
cmp
jbe
dec
insb
das
stos
js
push
mov
idivl
ss
cmp
mov
push
orb
frstor
fsubs
cmp
pop
dec
ucomiss
shll
sbb
and
xchg
test
mov
inc
xor
inc
xchg
inc
lcall
xor
jl
mov
jo
ror
rcrb
cld
jl
dec
daa
jo
mov
jb
aam
pop
sub
int3
shll
jb
cltd
leave
jae
mov
xor
sbb
into
lock
cli
and
mov
mov
cltd
aam
xor
pusha
pop
hlt
inc
int
icebp
rol
loop
fdivp
sbb
sbb
push
cli
push
movsl
mov
mov
pop
and
int3
pushf
andb
nop
mov
aam
and
or
stc
jnp
outsl
shlb
inc
xchg
arpl
sbb
sbb
arpl
mov
push
fsubs
mov
xor
sti
fistps
outsl
fidivl
inc
xchg
and
aas
enter
test
call
dec
je
mov
sub
fnstsw
ds
and
out
loope
aad
jno
mov
in
sub
add
fmul
jp
inc
cmp
lahf
sbb
xchg
shrl
xchg
mov
ljmp
dec
imul
sbb
movsb
movsb
movsb
mov
or
fdivr
testl
rorl
shrl
jp
inc
or
lds
mov
mov
lock
sahf
pop
out
push
movsb
cmp
add
shll
outsb
push
mov
leave
cmp
daa
fs
nop
pushf
icebp
or
call
xchg
mov
out
xchg
pop
jne
outsl
xchg
add
fcmovne
jbe
inc
fsubs
lea
jbe
sub
das
sbb
mov
test
lret
push
aad
out
fnsave
push
pop
aad
dec
out
lret
push
jns
push
mov
inc
pop
insb
stc
xchg
pop
cwtl
push
push
sub
dec
shrb
sahf
mov
mov
or
mov
scas
and
adc
loope
mov
je
mov
lods
xor
dec
mov
or
jp
ljmp
lods
in
maxps
jmp
cmp
rcl
pop
sbb
fcompl
bound
and
cmp
inc
popa
or
mov
shlb
xchg
cmp
outsl
mov
push
xor
pop
ret
jle
cwtl
decl
test
pop
into
push
lcall
pushf
test
dec
adc
mov
mov
inc
and
subl
or
test
mov
stc
iret
or
mov
add
into
mov
cmpb
stos
xor
daa
iret
lds
and
clc
mov
adc
lret
sbb
xor
and
fiaddl
mov
enter
xorb
and
test
shrb
inc
sbb
fs
inc
int
rcr
and
cmpsl
lds
sbb
jmp
lea
xor
sub
jge
dec
cmp
daa
fstpt
pop
lods
loop
jmp
pop
lods
jb
push
mov
jno
faddl
das
out
sti
inc
xor
mov
dec
cmc
hlt
xchg
xor
mov
sahf
and
dec
xor
push
jle
mov
cs
lods
lret
testl
enter
sub
xor
jl
divb
sbb
jecxz
in
hlt
dec
popa
pop
add
mov
push
imul
outsb
cld
subb
push
ret
adc
jbe
mov
xchg
clc
push
inc
dec
movsb
push
imul
test
clc
push
fistpll
add
sahf
int
jl
int
int3
cli
mov
cmpsb
ficomps
pop
cmpb
xor
mov
imul
icebp
cmp
out
aam
into
xchg
mov
ds
xchg
mov
andb
push
sbb
pop
pop
xchg
icebp
sbb
jnp
mov
popf
outsl
add
or
push
mov
mov
out
fcmovnb
nop
in
mov
xchg
adc
push
cld
out
push
mov
push
jae
and
aad
cmp
lods
imul
push
mov
jl
or
adc
cmpsl
mov
aas
or
mov
lcall
rcrl
sbb
fdivrs
inc
int3
pushf
inc
add
mov
sahf
ret
add
adc
add
inc
jmp
dec
jl
jnp
fldcw
mov
add
addb
cmp
loop
add
test
outsb
loop
test
sti
into
sbb
push
and
jecxz
aas
dec
orb
fdivrp
in
popf
inc
adc
sub
je
mov
add
jle
popf
enter
add
cltd
fcoms
movsb
mov
lock
jge
loopne
enter
inc
dec
sub
scas
xchg
imull
dec
dec
js
cmp
fwait
cmp
stc
andb
jge
dec
imul
repnz
lea
adc
mov
xor
int3
arpl
xor
stos
sub
scas
and
icebp
cltd
ret
out
mov
jbe
pushf
jge
or
sbb
aad
lds
stos
shr
lods
rclb
and
mov
dec
in
inc
repz
push
and
outsb
sub
mov
das
mov
and
xor
sti
dec
dec
jge
cli
mulb
mov
lahf
pop
imulb
mov
enter
js
inc
lea
clc
mov
pop
pop
adc
faddl
xchg
fs
dec
and
cmp
outsl
lret
sbbb
xchg
movsl
mov
and
cmp
out
jg
cltd
out
ss
mov
dec
add
pop
mov
js
out
jle
negl
push
out
inc
dec
cli
push
filds
les
xchg
push
dec
enter
loopne
int3
pop
daa
ret
pusha
bound
jae
sub
into
lods
mov
pop
xchg
adcb
ds
es
popa
xchg
je
stos
inc
sbb
mov
imul
jmp
cmp
cmp
imul
fsts
sub
mov
xlat
mov
aam
jp
xchg
and
insb
out
mov
pushf
ret
mov
outsl
push
sub
mov
sbb
pop
sbb
xchg
loop
fdivr
adc
pop
jecxz
loop
xor
out
and
test
cmc
xlat
stc
repnz
xchg
mov
pushf
mov
mov
popf
shll
mov
or
adc
arpl
iret
adc
ret
pop
inc
adc
pop
mov
stos
dec
dec
outsl
pop
sub
cmc
out
aad
lret
addb
add
xor
jno
int3
dec
cmc
addr16
faddl
je
dec
push
or
cmp
xlat
xchg
out
xor
jmp
cmp
pop
iret
inc
or
iret
loop
cmp
ficompl
repz
xchg
fmulp
pop
js
arpl
cmp
shlb
mov
and
add
gs
movl
and
sbb
mov
pop
push
pop
lea
inc
pop
mov
add
mov
pop
pusha
inc
jge
dec
loopne
push
inc
lds
push
in
push
sar
push
idivb
inc
dec
in
cltd
or
mov
data16
xor
out
pop
or
lock
mov
popf
and
mov
mov
adc
pop
ss
loopne
pop
mov
jno
cwtl
std
je
cld
scas
orl
dec
aam
or
push
je
gs
cmp
mov
dec
rol
data16
add
xchg
sbb
add
lods
rorb
clc
daa
cmp
adc
jge
xchg
shl
addr16
cmp
clc
mov
and
mov
mov
jne
add
mov
xor
or
push
dec
das
push
stc
cmp
dec
mov
lds
out
mov
adc
mov
pop
movsb
jle
mov
dec
xor
dec
int
jg
lock
pop
xchg
jl
pop
mov
or
lret
push
sti
inc
adc
popa
mov
or
in
dec
out
daa
jp
adc
notl
test
idivl
jnp
orb
lcall
test
cmp
popf
dec
mov
je
jp
xchg
sti
test
push
or
popa
mov
leave
push
hlt
inc
sub
jbe
cltd
loope
sahf
pusha
jne
sub
ret
pop
sub
idiv
in
sub
or
mov
xor
test
pop
dec
daa
ret
cltd
sub
dec
in
pop
insl
push
int
mov
addr16
pop
lds
or
cmp
fcmovu
fadd
out
sub
mov
inc
call
sbb
rcrl
push
nop
sbb
mov
lahf
pop
mov
and
aas
adc
mov
xor
ljmp
fs
adc
in
xor
pusha
scas
ja
js
into
jle
mov
mov
out
mov
mov
jne
aad
scas
mov
in
scas
jle
mov
and
test
outsl
ds
pop
xchg
mov
mov
adc
push
lds
adc
add
mov
stos
jb
push
inc
adcl
mov
cmp
push
fwait
mov
cmp
dec
jae
into
xchg
pop
addr16
mov
mov
xor
add
or
ret
popa
lock
xchg
xlat
js
lret
push
cmp
out
jo
dec
inc
movsl
sub
mov
ljmp
test
and
mov
or
mov
add
or
and
imul
divl
dec
idivb
lds
jns
pop
mov
mov
movsb
sbb
dec
sbb
dec
push
pop
fisttps
adc
shrl
sbb
rol
pop
mov
fiaddl
ficoms
loop
xor
nop
popf
pop
ss
adcl
jecxz
aam
leave
xchg
in
jecxz
add
lods
pop
push
push
sbb
pop
sbb
ljmp
push
lcall
ds
and
dec
in
rcrl
fsubrl
lret
add
inc
out
adc
insb
imulb
cmp
push
div
sbb
les
lods
sbb
out
stc
cmp
push
sbb
or
push
mov
icebp
stos
push
scas
cld
cmpb
pop
push
xchg
or
sbb
xor
sbb
ja
lods
cltd
hlt
cmp
bound
add
push
push
sti
fiadds
icebp
and
adc
icebp
dec
lds
mov
adc
enter
add
ljmpw
push
jnp
insb
das
scas
pop
test
xlat
push
dec
xor
cmp
scas
adc
mov
mov
cs
lea
pop
popa
mov
xor
ljmp
cmp
mov
fdivs
jae
and
cld
cmpsb
push
sub
adc
sbb
repnz
add
lds
mov
ljmp
xor
and
leave
pop
xlat
leave
mov
out
ja
in
or
fdivrl
sbb
xor
cmp
sarl
movsb
lods
push
lods
mov
sub
rcrl
fildl
xchg
jns
arpl
pop
in
dec
arpl
cltd
repnz
adcb
std
in
and
jo
cmpsb
push
nop
fcmovnb
pop
fldcw
dec
test
lret
insb
or
and
popf
iret
fnstcw
hlt
ret
jmp
loopne
aaa
mov
repnz
movsl
push
lods
push
xchg
mov
xlat
cmp
pop
test
das
xchg
lock
sub
cmp
mov
fsubrs
jnp
hlt
add
stos
and
jno
xchg
loop
cmc
mulb
push
out
xor
mov
dec
pop
mov
les
rolb
pop
xchg
fsts
and
or
cmpsb
enter
rol
xor
add
cs
push
imul
adc
push
imul
mov
pushf
jl
xor
icebp
push
xchg
and
dec
test
popa
outsb
loop
adc
cmc
sarl
arpl
jg
push
ret
mov
xchg
cmp
fs
mov
lock
push
insb
fscale
roll
mov
scas
fucomp
ret
mov
push
mov
stc
fstpt
push
adc
mov
adc
or
mov
xchg
push
sbb
divb
je
lcall
jmp
lahf
imul
add
fwait
stos
adc
pop
sbb
repz
mov
rorl
and
loope
sub
pop
adc
jge
xor
mov
add
repz
aas
sub
inc
push
fadds
cmp
test
jb
imul
jle
xlat
lods
psubq
xor
sub
xlat
inc
subb
mov
dec
or
pop
in
xchg
push
cmp
imul
fnstsw
pop
inc
sbb
mov
cmpsl
jle
insb
xorl
stc
imul
xor
dec
not
in
mov
pop
das
ljmp
enter
add
mov
inc
les
pop
aas
xchg
into
sub
sbb
fistps
or
je
sti
sbb
stos
cmp
lea
cmp
sub
xor
push
data16
sub
xchg
xor
mov
orl
pop
jns
jle
pop
or
add
adc
pop
ret
adc
stos
and
data16
jge
pop
push
lods
cltd
pop
xor
subl
jns
add
mov
pop
frstor
lahf
pop
push
or
outsl
sbb
mov
daa
mov
outsb
stos
ljmpw
mov
stc
pop
mov
xchg
decb
les
adc
cmp
or
into
pop
shrl
mov
cmc
jl
mov
testl
scas
add
leave
jbe
fisubs
or
sarb
sub
pusha
lods
rcrb
lret
push
bound
sub
push
xor
test
jbe
in
mov
jno
icebp
es
add
jg
out
out
inc
xchg
leave
fcoms
xchg
and
sbb
inc
adc
jae
xchg
or
push
pop
and
loop
jecxz
je
clc
addb
or
xchg
inc
jg
sbb
clc
pmulhw
add
xor
setb
mov
dec
adc
sbb
and
jns
push
lods
repz
jno
push
sub
ret
daa
sbb
insl
xlat
cmp
mov
inc
jmp
xchg
dec
sbb
adc
sbb
mov
cmp
mov
pop
out
lock
lods
dec
pop
icebp
out
xor
subl
cltd
push
rcrb
mull
cmp
cmp
cli
jp
sbbb
push
jns
movsb
dec
push
jge
inc
std
cmp
jge
bound
adc
xor
popf
mov
mov
dec
lods
add
int3
shrb
loopne
mov
shlb
mov
int
xchg
adc
loopne
pop
lds
add
mov
dec
aad
xchg
ds
pop
sbb
jl
lods
push
xor
inc
rcrb
xchg
inc
dec
in
imul
adc
in
cmp
jne
and
add
rcrl
sbb
jecxz
cmpsl
insl
jbe
gs
pop
jns
adc
jne
cmc
dec
push
cs
and
imul
in
or
hlt
es
addr16
adc
add
je
test
dec
xor
dec
mov
xchg
push
sub
fidivrl
std
jge
pop
jno
xchg
loopne
mov
xor
add
or
es
negb
pop
movsl
nop
mov
jge
pop
push
aam
mov
test
pop
test
sub
sub
sarb
push
int3
xor
sbb
divl
rcll
pusha
sti
js
cmp
inc
outsl
hlt
imul
sti
or
ret
divl
inc
outsb
hlt
push
fisubrl
push
loopne
sbb
popf
jb
add
dec
fisubs
fsub
out
mov
leave
lock
stos
push
movl
sbbl
xor
inc
fiaddl
sbb
mov
int
add
aam
mov
ljmp
cltd
mov
stos
cwtl
cmp
sub
push
mov
mov
jge
cmp
repz
pushf
pop
adc
push
xor
lods
fldlg2
movsl
out
inc
in
fistpl
out
fsubr
cmp
cli
inc
inc
cmp
inc
dec
xchg
xor
xor
jl
maskmovq
divl
jbe
insl
ja
sarb
xor
xchg
pop
sub
push
data16
int
in
aad
sbb
jnp
hlt
popf
stos
popf
cmp
mov
insl
mov
ret
mov
addr16
fs
cwtl
mov
lcall
push
push
aad
imul
in
fxch
stos
outsb
mov
jo
jle
xchg
push
int3
enter
mov
dec
ret
mov
insb
jb
lret
sbb
dec
cmp
insl
sub
or
add
or
test
cmp
ja
mov
mov
jge
scas
mov
test
push
and
lock
cmp
pop
push
or
stc
mov
dec
adc
dec
mov
cltd
mov
sub
pushf
je
inc
xorl
sbb
in
mov
push
push
xchg
add
cltd
imul
shlb
sar
rcrl
jmp
imul
adc
and
sbb
sbb
sahf
cmp
and
je
cmp
jge
test
test
adc
gs
pop
or
lcall
iret
cwtl
push
std
push
cld
mov
jno
push
out
pop
push
inc
movsl
sub
mov
adc
xchg
ja
filds
aas
nop
sub
stos
rclb
mov
mov
cmpsl
mov
jb
jne
insb
fldcw
fst
int3
adc
rorb
adc
jbe
xchg
cmp
test
and
inc
inc
movsb
idivb
mov
inc
leave
fcompl
jp
lock
push
ret
das
pop
xor
push
adc
jmp
dec
cwtl
movsl
cltd
lahf
ret
je
xchg
and
cmp
cmp
jmp
mov
insl
xchg
lods
push
xchg
gs
push
mov
sbb
aaa
sbb
jbe
xchg
mov
xchg
scas
pushf
jmp
cmp
push
jp
enter
nop
pop
lods
sbb
cmpsb
mov
dec
imul
ss
push
cmpb
push
ss
test
or
in
aam
movsl
adc
insb
in
arpl
ja
cli
dec
fsubl
scas
pop
dec
mov
fadds
jmp
sbb
sub
xchg
dec
mov
dec
test
jecxz
mov
mov
push
pop
inc
addl
lret
movsb
pop
inc
pushf
dec
mov
add
mov
stos
fadds
add
aad
xor
shll
add
nop
jnp
xchg
xor
scas
adc
cmp
fbstp
repnz
sub
jle
pop
sbb
cld
dec
scas
imul
ljmp
daa
xchg
call
jp
fcomps
fmul
les
outsl
scas
ljmp
xor
sti
shr
cmp
cli
fstpt
push
loopne
out
dec
sbb
cwtl
and
dec
and
push
mov
mov
xchg
scas
call
loopne
je
enter
adc
dec
repz
jno
and
mov
mov
xchg
insl
or
ss
out
fmull
out
popa
out
or
cltd
cmp
inc
ja
sti
mov
fcoms
nop
in
add
outsb
dec
movsb
add
sub
hlt
push
add
sub
pushf
data16
les
data16
lea
inc
clc
and
jle
mov
enter
pop
push
jae
jo
enter
jae
jecxz
scas
jo
cltd
out
and
into
xlat
leave
hlt
sti
pop
je,pt
int
lds
sti
ja
sub
aad
xchg
sahf
sub
xchg
lret
roll
mov
cs
dec
inc
xor
or
sbb
dec
jge
sbb
in
out
inc
dec
lret
pop
inc
xlat
dec
pop
mov
jecxz
mov
lods
andl
xchg
add
outsb
mov
aad
or
cmp
int3
xor
mov
add
cmc
sbb
jo
pushf
lahf
test
and
rcll
xor
jle
sub
cmp
cmc
scas
xchg
outsb
arpl
outsb
sahf
lret
pop
push
cmpb
lret
xor
in
negb
jbe
ret
fmull
adc
jl
cmpsb
mov
mov
pop
out
lret
sub
mov
gs
adc
jle
dec
pop
stos
xor
lcall
pop
scas
rcll
cmc
pop
sbb
fisttpl
sub
pop
pop
cmpsb
lods
push
mul
push
in
pop
and
cmp
fstpl
push
aam
rolb
call
mov
mov
mov
lods
rcl
xchg
sti
loopne
popa
cwtl
xorl
mov
add
pushf
mov
inc
or
push
mov
xor
sarb
pop
fdivl
pop
idivl
dec
pop
in
aas
cmpsb
jb
icebp
fiadds
adc
fnstcw
nop
clc
js
sub
mov
adc
fcompl
cmp
or
mov
fs
ljmp
test
mov
mov
xchg
cs
ret
cwtl
ficoml
lret
adc
decl
or
inc
push
pop
mov
inc
cwtl
push
insb
xor
cmp
push
jmp
mov
out
in
adc
jae
pop
movsb
andb
pop
test
dec
jb
rorl
outsb
adc
fldenv
jmp
jae
mov
stos
jp
xor
stc
mov
mov
and
ja
jle
lahf
mov
imul
cmc
push
inc
and
scas
rcrl
or
lcall
hlt
movsl
push
ret
lcall
outsl
mov
shrb
dec
scas
stos
xor
notl
xor
cld
sahf
jno
jmp
lea
hlt
call
cmp
pop
jnp
or
daa
xor
cmc
loop
fadd
mov
fcomps
stc
dec
jmp
ret
push
dec
jo
adc
out
into
sbb
and
jl
popf
dec
andl
ja
inc
int3
repnz
lcall
fwait
int3
and
popa
pusha
mov
xorl
leave
xchg
xchg
mov
rol
cmp
ds
pop
inc
xor
cmpsb
int
nop
jo
add
in
push
jae
inc
sarb
rcrb
clc
cwtl
sbb
jg
xchg
xchg
cwtl
cmp
sub
stos
test
inc
sub
test
jmp
rol
cli
imul
push
jb
mov
pop
ret
ja
mov
mov
in
je
lock
ret
jb
shll
test
lock
shr
orb
in
jnp
test
sub
js
cmp
loope
fsub
lds
xchg
sbb
mov
pop
scas
clc
pop
je
jmp
or
mov
movsb
sbb
mov
cs
notb
lret
dec
dec
push
bound
sub
lret
mov
and
pop
in
mov
fnstsw
test
mov
xlat
pushf
xor
inc
es
jg,pt
lret
pop
push
idiv
adc
std
cli
or
and
daa
pop
adc
mov
push
inc
orl
imul
in
ljmp
mov
rcll
jns
into
dec
out
jns
js
push
mov
mov
xchg
je
mov
inc
clc
or
and
xchg
mov
xor
push
out
fisubl
hlt
das
add
mov
rcll
addb
rclb
adcb
movb
cmp
push
int
sbb
jne
adc
mov
aaa
xor
jecxz
push
sub
mov
pop
pop
adc
out
leave
inc
cmpsl
shll
mov
sub
push
inc
push
je
mov
dec
cs
inc
cmp
loopne
jbe
or
jp
add
adc
stos
xchg
insb
xlat
imul
sbb
fcoml
adc
insl
out
out
ja
or
cmpsb
sbb
aaa
mov
clc
sbb
pop
xor
xchg
int3
cmp
out
bound
fs
lock
adc
je
dec
add
js
rorb
inc
addr16
pop
imul
xor
push
je
xchg
or
cmp
push
and
xchg
pop
inc
inc
xchg
add
xchg
mov
mov
or
or
jl
pop
repnz
mov
lea
push
dec
adc
scas
in
dec
mov
jnp
add
call
mov
or
imul
loope
out
mov
or
fdivrl
push
out
js
push
sub
add
sub
jae
insb
or
cld
stos
inc
mov
cmpsb
iret
and
fstl
pop
mov
xor
dec
out
xor
repnz
jbe
sub
mov
loop
notl
sub
aaa
test
push
and
cmpsl
xor
adc
imul
push
popa
cmp
call
add
or
dec
push
sub
cmp
ret
inc
add
adc
out
pop
fsts
push
push
jle
pop
std
mov
das
shlb
into
loop
push
scas
add
lods
lcall
inc
cmp
pop
lds
push
scas
lahf
pop
jbe
movsl
mov
sahf
lret
lcall
sub
lret
lds
mov
ss
jp
loope
fnstenv
stos
sub
lods
pop
xor
and
in
rolb
cwtl
pop
out
test
leave
loopne
inc
je
int3
out
jecxz
add
ss
sbb
jl
adc
mov
test
dec
jb
aaa
inc
loop
jecxz
js
bound
outsb
ss
dec
xor
ret
cmp
cmp
push
in
and
dec
fwait
out
mov
jae
or
sub
lods
push
lcall
shrb
xor
movb
xchg
mov
loopne
push
sub
int3
add
popa
test
cmp
stos
sub
pop
sbb
sbb
mov
pop
inc
xor
jns
call
inc
sbb
push
xchg
inc
mov
adc
dec
mov
xor
insb
aad
je
mov
xchg
push
sahf
push
xor
adc
fbld
outsl
mov
add
cld
movsl
daa
jl
mov
cltd
cmpsl
andb
inc
mov
push
xlat
stc
cmpl
sbb
add
sub
subb
cmp
jbe
jmp
nop
mov
xor
push
inc
sarb
mov
dec
cmp
jae
shll
mov
sub
adc
pusha
fistps
xchg
xor
xor
rcl
and
loope
xor
mov
cmp
rol
push
push
xor
sti
shll
fisubrs
inc
pushf
fimull
xchg
adc
add
ret
imulb
test
push
mov
dec
int3
jno
call
xchg
xchg
movsb
cmp
into
gs
sub
shrl
sbb
insl
sub
test
int3
xor
test
inc
sub
cmp
fnstcw
sub
aaa
cmovle
enter
cmp
fldenv
xchg
cmpsl
pop
xchg
out
loop
jbe
pop
rolb
lcall
aad
out
fiadds
mov
addr16
pop
ds
cmp
and
inc
popf
jmp
inc
push
xchg
arpl
in
sub
loope
push
sub
jecxz
mov
sub
cltd
shll
push
mov
cltd
cwtl
inc
and
idivl
int3
push
inc
pop
add
sbb
add
lods
xor
test
repnz
jp
or
insb
sbb
lds
sbb
xchg
sar
cmp
sbb
loopne
in
bound
pop
icebp
andb
push
xor
shll
imul
mov
int3
fdivrl
fists
or
fldcw
pop
es
xlat
or
push
mov
push
xchg
pop
add
xchg
and
xchg
ljmp
test
pushf
aad
cld
mov
out
outsl
mov
les
les
pop
jo
sbb
jne
aad
add
repz
out
outsl
or
jno
push
push
cli
cmp
jno
inc
pop
and
je
ljmp
pop
inc
pop
mov
insl
pop
inc
dec
xchg
cmp
shrb
jae
out
in
pusha
loopne
xchg
dec
cmp
mov
je
addr16
enter
mov
insl
pop
das
aas
adc
add
and
nop
mov
jmp
fdivrp
sub
lcall
push
xor
xchg
cmp
cmp
pop
add
fwait
aad
add
mov
mov
fwait
js
mov
inc
inc
and
cmp
mov
pushf
sub
dec
cmp
mov
faddp
cwtl
roll
cld
loopne
jge
ljmp
cltd
ret
loop
xchg
dec
movsl
fdivl
dec
lahf
daa
fs
lods
or
lods
pop
cmp
imul
mov
scas
es
mov
pop
pop
inc
inc
repz
xor
gs
movsb
test
test
mov
iret
call
jo
cmpsl
pop
inc
pop
push
sbb
rcrl
lcall
add
stos
dec
cli
cld
and
cmp
icebp
sbb
imul
xchg
test
mov
repnz
push
hlt
push
shrl
inc
loopne
mov
loope
and
add
test
in
arpl
pop
xchg
mov
sahf
pop
dec
stos
pop
pop
cld
cwtl
lods
xor
out
add
inc
mov
ja
test
cmp
movsl
xchg
fcomp
push
pop
fstpt
xor
jg
cli
or
adc
push
stc
dec
sbb
fisubrs
push
jne
loope
hlt
fldt
dec
mov
jbe
mov
stos
push
bound
loopne
xchg
push
pop
js
jp
cmp
or
xchg
cmp
jmp
stc
and
outsb
pusha
rorl
sbbl
sbb
mov
add
pop
je
inc
cs
sub
icebp
mov
inc
cmp
push
dec
add
mov
int
rcrb
hlt
enter
push
addr16
pusha
call
lock
cmpsb
xor
fstps
jne
inc
xor
cmpsl
mov
test
mov
jb
in
add
imul
push
sub
jae
rolb
loop
inc
mov
test
mov
fidivrs
xchg
les
add
in
movsl
enter
mov
sbb
xor
xchg
mov
sbb
push
inc
dec
dec
lea
sbb
call
inc
fisttpll
and
lock
jns
hlt
fs
bound
mov
push
out
adc
cwtl
fidivl
iret
subl
add
jo
cli
imul
mov
dec
mov
mov
fisttpll
dec
dec
xor
daa
jl
dec
sbb
gs
adcb
lcall
lcall
xchg
enter
sbb
out
jg
inc
clc
imul
fnstsw
lds
mov
jmp
lret
aas
mov
scas
mov
cli
imul
lcall
gs
push
xlat
iret
mov
hlt
xchg
imul
test
inc
fiadds
pop
add
xchg
testb
lods
fimull
or
mov
push
cmpsl
xchg
out
nop
out
mov
jp
cmp
jmp
outsb
dec
fs
mov
jnp
call
push
dec
fadd
lret
loope
inc
test
and
dec
jp
dec
push
pop
pop
jb
push
mov
mov
sub
shll
clc
jo
xor
or
mov
cmp
mov
xchg
decb
pop
scas
pop
jg
int3
arpl
xchg
stc
push
mov
ret
ret
nop
aaa
lahf
les
aad
sub
stos
adcl
je
mov
enter
popf
ljmp
jge
mov
out
dec
xor
lret
mov
inc
pop
dec
fs
fwait
stc
jl
mov
mov
in
rol
mov
out
jmp
sub
movb
mov
lahf
inc
repnz
mov
mov
cli
inc
aam
xor
loop
cmp
cmp
pop
or
fcom
fcoml
ds
ds
mov
inc
lds
enter
test
loope
add
lea
pop
adc
movsb
cltd
js
push
cmp
push
xor
lcall
les
cwtl
std
pop
sbb
fbld
push
test
mov
insb
pop
mov
cmpsb
lahf
jbe
js
outsb
in
inc
xchg
jo
aad
sbb
lret
jns
mov
push
bound
lcall
xor
sbb
or
mov
add
add
or
fnsave
xchg
pop
gs
jnp
mov
mov
std
push
data16
jae
push
push
loopne
out
sahf
jle
leave
fistpll
inc
clc
inc
adc
lods
jns
insl
xor
cmc
cwtl
insl
mov
jp
mov
movsl
jns
aas
pop
dec
xchg
pop
jnp
xor
sub
xor
sbb
or
js
cmp
testb
push
dec
xor
mov
jp
loope
jne
inc
bound
negb
into
fdivrl
cmpsb
mov
and
xor
add
pushf
lods
cmp
pop
fistl
pop
jne
addr16
sbb
xchg
test
imul
and
neg
pop
and
pop
arpl
add
dec
cmp
out
push
fdivrs
imul
xor
jge
mov
add
inc
add
jecxz
mov
fdivp
jbe
dec
mov
mov
testl
test
mov
xchg
stos
lahf
sub
int
lret
xchg
xor
push
xchg
outsb
imul
mov
mov
sbb
notl
iret
imulb
scas
sub
sbb
pop
je
push
sbb
dec
jno
clc
sub
je
mov
xor
pop
mov
xchg
sub
popl
inc
cmc
repnz
aam
dec
and
scas
pop
push
popf
xor
adc
aas
rcrl
rcr
aaa
xor
in
stos
and
or
lret
repz
pop
test
mov
stc
dec
adc
push
dec
sub
cwtl
addr16
ljmp
gs
fucomi
cmc
jle
push
cwtl
or
adcb
idivl
and
adc
pushf
fs
push
dec
pop
mov
inc
flds
xchg
test
fs
loop
movsb
pop
aad
insb
daa
arpl
lods
push
das
xchg
sbb
mov
mov
movl
cmp
inc
cmp
push
push
mov
cs
cmc
dec
add
fcoml
dec
lods
lcall
sub
jg
or
out
xor
mov
cld
sti
mov
lock
ror
shlb
mov
int
and
cmp
nop
and
out
cmp
sbb
test
sahf
dec
leave
adc
outsb
push
std
ret
imul
or
inc
jb
jecxz
mov
ss
xor
out
outsb
xor
sub
insl
jp
cmp
clc
cmpsb
mov
mov
sbb
cmp
shlb
pusha
xchg
and
ss
roll
in
dec
mov
xor
pop
mov
mov
push
sbb
mov
sub
push
mov
add
enter
pop
js
jge
movl
in
push
pop
aam
sbb
out
es
mov
mov
popf
lock
mov
inc
lea
mov
lahf
cmp
push
jns
mov
mov
push
cmp
or
aas
xlat
dec
test
enter
lock
xor
mov
shll
js
add
mov
mov
add
dec
or
fnstenv
or
ja
pop
fsubl
cs
pusha
jb
gs
test
jecxz
xchg
mov
dec
dec
sub
xor
dec
push
leave
subb
jp
sub
fldenv
sub
pushf
jb
fs
rcll
inc
fsubl
jns
ds
stos
jle
mov
sbb
or
addr16
dec
frstor
push
push
loope
lds
lret
push
push
popf
jmp
bound
inc
loopne
scas
adc
cltd
addr16
xchg
jbe
sub
call
mov
test
out
aas
sti
inc
mov
and
sub
mov
arpl
add
jnp
fcoml
fidivrl
mov
xor
je
test
sbb
arpl
sbb
leave
fwait
gs
insb
jge
test
fs
and
int
stc
sub
mov
leave
sbb
enter
loop
inc
mov
lcall
pop
mov
sarl
xor
sti
loop
shrl
les
jl
out
push
ret
xor
pop
adc
mov
and
fidivrs
mov
fbld
mov
xchg
jecxz
cmp
lahf
jp
lcall
sbb
jno
dec
cli
push
mov
hlt
outsl
or
out
xlat
aas
imul
jo
js
call
mov
sub
push
scas
mov
insb
pop
adc
imul
jecxz
or
popf
or
cmpsb
mov
jnp
xor
fcmovu
ds
movsl
aas
sbbl
or
dec
stos
mov
lea
xchg
mov
aaa
add
push
push
call
insb
xchg
sti
or
and
fwait
jle
add
rcll
jcxz
mov
lahf
sub
jo
and
xlat
addr16
adcb
pop
lahf
dec
sub
pop
sbb
fisubrl
in
adc
or
in
mov
fsts
and
sub
cs
and
dec
dec
or
pop
cmp
ficompl
and
aam
and
fcompl
or
clc
adc
dec
in
sub
nop
xchg
xor
jbe
mov
jnp
movsl
dec
incb
pop
pop
ret
pop
or
jo
shll
iret
xorb
in
mov
xor
mov
or
popa
les
sarl
mov
sbb
sub
sub
mov
inc
jecxz
pop
jmp
cltd
mov
pop
ret
in
movsb
das
pop
adc
adcl
scas
xchg
push
jo
xchg
xor
dec
loopne
mov
jne
addl
or
bound
inc
sti
push
pop
xchg
sbb
jp
jne
std
push
outsl
dec
cmp
xor
sbb
pop
cltd
inc
jns
push
xchg
fcomip
inc
xchg
hlt
mov
adc
insb
jno
xchg
sub
iret
mov
push
cmpsl
xchg
pop
in
dec
push
xchg
xchg
lahf
mov
and
adc
gs
pusha
ja
hlt
add
fistpll
pop
cmp
xchg
pop
and
ds
push
hlt
repz
xchg
rcr
push
push
sub
shrb
xchg
out
dec
or
stos
lcall
push
mulb
mov
jl
pop
jb
andb
fs
sub
pop
ljmp
xchg
lret
lea
cmp
lahf
add
pop
mov
cmp
loope,pt
das
pop
jb
cmp
and
icebp
nop
fstps
xchg
jo
pushw
jmp
or
xor
mov
dec
leave
mov
cltd
mov
dec
adc
in
or
repnz
xchg
fnsave
mov
push
jno
rcll
std
fs
push
in
addr16
xchg
push
fimull
mov
pop
fs
pop
sbb
popa
xchg
mov
adc
cmp
jp
pop
fxam
icebp
mov
je
in
jmp
jns
pushf
cmp
sahf
pop
mulb
hlt
adc
mov
fisubs
sub
pop
mov
in
addr16
repz
sbb
cltd
or
arpl
push
xor
cmp
pushf
lret
repnz
lock
jl
cmp
pushf
test
and
fstpl
dec
cs
clc
lods
jp
dec
ficoml
fs
fadd
mov
adc
sti
push
arpl
fcmovnu
into
inc
bound
sub
add
loope
sbb
pop
xor
inc
mov
mov
into
icebp
aad
call
adc
pop
pusha
call
rcl
stos
add
pop
sbb
js
xor
mov
and
mov
ret
aad
je
mov
std
dec
dec
dec
data16
sbb
into
cmp
add
jne
mov
cli
and
and
icebp
call
lea
jge
data16
mov
mov
jne
push
insl
dec
xchg
rclb
adc
enter
inc
xchg
mov
enter
repnz
xchg
jmp
sbbl
push
jae
fcmovb
or
dec
push
enter
xor
adc
inc
add
jmp
lret
cltd
out
cmp
dec
ret
rcrl
sub
adc
mov
in
aad
std
gs
mov
xchg
outsl
inc
icebp
xchg
inc
mov
cmp
fildl
or
add
fwait
sbb
dec
push
fistpll
fdivrp
push
and
jg
test
leave
mov
push
lahf
cmp
in
push
and
lcall
add
jnp
cmp
jmp
repnz
call
adc
and
cmpsl
into
out
cmc
jecxz
icebp
shl
jno
inc
sub
mov
push
lcall
push
pushf
xor
push
pusha
sbb
incb
cli
xchg
push
pop
adc
je
cmp
lret
adcb
shr
imull
out
and
aam
cmp
sbb
fcmovnbe
movsl
sbb
test
xchg
inc
fwait
inc
insb
andb
push
push
push
ss
out
out
push
fmul
xchg
and
pop
xor
push
xor
inc
lret
and
and
mov
or
popf
lods
adc
mov
pop
aaa
sub
push
call
ficompl
jl
xlat
sbb
pusha
mov
sbb
arpl
test
lret
jno
cmp
bound
das
nop
cmp
mov
adc
int3
add
negb
jle
sub
add
or
in
jnp
or
adc
fistl
inc
push
flds
adc
xchg
xchg
xor
and
stos
jo
test
xchg
jp
out
movsb
data16
sub
sub
rolb
or
inc
and
test
repz
js
jge
pop
mov
mov
adc
sbb
jl
pop
jne
mov
ror
imul
push
mov
and
pushf
incb
xchg
data16
insb
pop
mov
cld
movsb
mov
xchg
imul
xchg
xchg
mov
addr16
in
test
xorl
icebp
test
pop
sti
mov
test
jmp
std
popa
out
and
repnz
dec
mov
dec
in
or
dec
scas
imul
mov
test
int3
jle
aad
cmpsb
pop
mov
or
shr
dec
test
clc
aam
sahf
pop
push
icebp
push
jo
scas
jae
fildl
xlat
stos
xor
sti
pop
push
dec
out
addr16
lret
mov
repz
push
inc
xor
dec
subl
mov
and
pop
jb
std
pop
ja
insl
xor
adc
out
and
lret
mov
dec
mov
lea
cmp
or
aad
jnp
jp
ljmp
cli
ret
or
push
nop
mov
mov
hlt
pop
xchg
shlb
daa
sub
shrl
ficoms
sub
jb
mov
dec
pop
cmp
fwait
cmp
fs
push
push
push
adc
addr16
xor
je
mov
test
repnz
in
fisttpl
push
sub
push
mov
mov
jg
dec
xor
xchg
push
mov
aam
push
dec
pushf
cmp
add
inc
cltd
lds
jo
push
outsb
lret
sbb
rol
int3
aam
loop
imul
nop
in
cmc
out
fs
lea
push
cs
cmp
nop
ss
jno
or
ljmp
dec
popa
insb
cmpsl
push
fcoml
movsl
dec
mov
mov
jnp
mov
test
jae
sub
movb
pop
lods
adc
test
push
loopne
pop
jne
adc
cmp
int
lea
fdivr
outsb
push
fmuls
jg
push
pop
fcoml
movsl
pop
jge
lea
xchg
fnstsw
jnp
dec
cmp
outsb
fnstenv
es
fstp
xchg
pop
sub
ret
inc
push
leave
sub
in
das
pop
push
fnstcw
emms
aam
loope
mov
lea
rolb
adc
dec
lret
lcall
lods
ljmp
lea
sub
sub
xchg
sbb
stos
pop
ds
jnp
gs
sub
out
and
or
das
aad
test
mul
loop
xlat
orl
jb
ja,pn
addr16
stos
push
lret
fs
loope
ret
adc
cmovl
xchg
leave
sub
ja
mov
out
pop
outsl
jl
sub
dec
pop
fcomps
cmp
add
out
scas
jns
pop
outsl
xchg
cmpsl
and
cs
aas
add
stos
mov
mov
addr16
mov
sub
mov
pop
cltd
mov
adc
xchg
xchg
fwait
nop
jg
jmp
mov
cmp
movsb
or
popf
mov
bound
jnp
push
adc
cli
mov
test
rcrl
mov
lret
jne
mov
and
xchg
jle
cltd
enter
xor
push
lahf
arpl
hlt
ja
push
loopne
cmpsb
gs
dec
sub
push
scas
fildl
xor
stc
inc
ds
rcrb
mov
inc
mov
test
and
fiadds
clc
push
out
ss
in
xchg
push
or
roll
ds
cli
xchg
push
rclb
or
mov
mov
outsb
stos
inc
add
adc
lds
sbb
pop
pop
in
adc
inc
into
or
jbe
xor
leave
mov
hlt
rolb
add
xorb
mov
xchg
loop
adc
sub
out
jbe
or
mov
ret
push
mov
and
dec
mov
and
fisttps
xchg
jecxz
sub
add
das
int
sub
outsl
lea
jb
stos
jbe
cmp
ja
scas
inc
outsb
loopne
fnstsw
adc
push
cltd
inc
cmp
jns
dec
repnz
pop
mov
ret
adc
js
enter
adc
inc
aam
rorl
push
sbb
dec
inc
push
lcall
testb
imul
inc
add
insl
sbb
out
outsb
mov
bound
add
xchg
or
jmp
sub
imul
dec
xorb
mov
add
cwtl
sbb
pop
arpl
icebp
mov
lods
clc
movsl
insb
mov
movb
in
push
inc
and
iret
pop
arpl
sbb
imul
mov
mov
pop
sahf
inc
adc
jl
in
sahf
ret
roll
cmp
mov
mov
and
inc
fimull
pusha
inc
das
add
out
or
mov
in
jae
push
fildl
dec
add
cmpsb
std
imul
out
push
xchg
insb
mov
lock
push
pop
pop
sbb
cmp
xchg
pusha
push
xor
enter
or
dec
adc
xor
mov
rorb
pop
jge
rorl
or
mov
push
and
jnp
loop
adc
test
xchg
mov
mov
sbbb
and
loopne
addb
enter
movsb
test
cld
ret
imul
aam
stos
das
mov
or
mov
test
mov
ljmp
scas
in
mov
jmp
sbb
push
loope
and
add
xor
and
inc
sbb
aaa
or
jecxz
mov
test
fsubrl
cmc
dec
mov
and
push
aad
sub
sahf
ds
mov
sbb
rorb
jbe
imul
int3
xor
cli
add
pop
gs
ljmp
loop
xchg
sbb
ja
fldcw
shll
jae
pop
jp
mov
jne
and
and
jns
pop
mov
jo
dec
into
xlat
sub
das
mov
fsubrs
push
into
cltd
jge
inc
lds
inc
sti
xchg
cmp
ret
jae
push
jo
pop
jp
popf
sbb
in
lret
and
shrl
out
daa
gs
and
mov
nop
mov
pusha
mov
mov
sub
pusha
es
out
xor
or
cmp
or
mov
and
pop
mov
pusha
inc
stc
loop
inc
bound
subb
cs
scas
sbb
mov
repnz
add
pop
xchg
orb
xchg
sub
test
cmp
cmp
jno
add
sbb
and
inc
mov
mov
jle
fistpl
cli
xchg
inc
inc
mov
and
outsl
jne
pusha
andl
mov
xor
out
lret
xchg
pusha
cmpb
add
mov
xchg
int
std
test
dec
push
jge
and
test
fildl
jae
icebp
repnz
call
jno
pop
aam
js
add
mov
inc
in
jbe
mov
cmp
sbb
and
popa
pop
bound
aas
lcall
out
ror
fwait
outsl
pop
and
add
pop
push
mov
mov
xchg
dec
cmpb
fimull
ficompl
mov
add
rcll
push
test
and
psrlq
sbb
or
cmp
fdivrl
add
push
sbbb
lock
outsl
int
push
mov
xchg
js
jmp
adc
push
gs
pushf
and
movsb
push
in
xor
and
out
sbb
data16
push
mov
pop
dec
sub
mov
es
repnz
and
cltd
dec
imul
shrb
dec
pop
cltd
js
shrb
inc
cmp
je
pop
adc
or
test
cltd
pop
nop
ljmp
ja
jl
jbe
rcl
fyl2x
dec
cmpsb
cwtl
loopne
jns
push
aam
js
mov
in
push
fnstsw
or
and
push
mov
add
xor
xor
ja
push
xor
inc
mov
pop
aad
adc
lods
or
mov
sbbb
inc
iret
mov
inc
jl
es
popf
int
stos
aaa
or
rcr
pop
shl
fisttpl
sub
inc
xor
sti
aas
xchg
adc
movsb
jns
cmp
pop
out
inc
leave
out
or
sbb
jmp
daa
imul
mov
adc
adc
sub
shll
addr16
xchg
ret
int
mov
stos
lea
loopne
push
push
sub
das
fimuls
shlb
adc
aad
and
add
dec
mov
je
pop
push
in
lret
fsubrs
sbbl
fldenv
aam
popf
xor
in
popf
pop
push
pushf
cmpl
push
lds
mov
push
fbstp
cmp
lods
cmpsl
ja
popl
sti
inc
inc
loop
sub
ret
test
bound
movsb
jp
adc
std
leave
mov
push
inc
es
xchg
ficoml
mov
es
packuswb
pusha
lcall
jge
imul
dec
bound
push
mov
dec
imul
mov
sbb
mov
rorl
jbe
leave
inc
mov
mov
pusha
aam
jl
orl
cmp
lret
addr16
scas
call
lods
and
inc
orl
roll
rcr
push
mov
cwtl
cmpb
out
mov
jns
mov
push
add
or
jg
sbb
stc
aad
imul
test
bound
ret
mov
pop
and
cmp
inc
ljmp
ds
lcall
clc
cmp
cmpsb
adc
stos
add
je
push
loop
arpl
in
inc
lods
cmpsl
xchg
lret
xor
adc
and
cmp
sbb
mov
fldt
mov
pop
jnp
pop
jle
mov
outsb
lods
loope
cmpsb
rep
test
movsl
fwait
outsb
or
mov
xor
mov
jl
or
jb
xlat
or
ja
pop
add
mov
pushf
sbb
adc
mov
push
sbb
insb
arpl
lods
sbb
stos
scas
xor
aaa
shrl
mov
adc
in
jnp
inc
test
stos
mov
hlt
fxam
jl
push
orb
mov
iret
popf
int3
sbb
jl
arpl
xlat
mov
enter
pop
mov
call
das
cli
pop
iret
mov
inc
jns
add
psubd
movsb
dec
jno
out
sub
rcll
jb
ljmp
stos
loope
pop
mov
in
cltd
jne
jnp
push
aas
mov
rcll
mov
fwait
mov
mov
jbe
mov
sbb
jg
stos
adc
sub
sub
movsl
sub
int
frstor
addr16
pushf
xor
mov
in
push
enter
pop
pop
pop
insb
sbb
lock
scas
sub
adc
xchg
fwait
xchg
lds
fldenv
dec
popf
push
lea
data16
addr16
dec
ljmp
pop
inc
stos
stos
dec
and
xlat
cmp
sbb
xor
js
cld
in
push
fdivl
jo
in
mov
sub
pop
xchg
xor
dec
cmp
sbb
sbb
sbb
and
mov
sub
inc
sbb
cltd
xor
lret
int3
sbb
cmp
sti
into
push
out
insb
xchg
sub
xor
inc
mul
fwait
popf
fwait
repnz
and
data16
jo
ret
pusha
xor
add
loop
push
cli
ja
sahf
faddl
cmpsl
xor
roll
xchg
sti
loopne
aam
arpl
test
fcomip
arpl
mov
or
add
xorb
xchg
xor
in
in
push
aad
mov
push
call
jg
into
sbb
sub
ret
lret
cmpsb
faddp
sub
mov
fs
lcall
dec
jb
mov
test
ja
pop
push
mov
dec
add
jae
pop
ja
cmp
pop
lret
pushf
aam
sbb
dec
les
test
arpl
xchg
rclb
add
cmpsb
mov
or
int3
mov
arpl
mov
sti
js
jb
lock
loope
push
sbbl
push
das
inc
inc
dec
outsl
sarl
push
and
pusha
out
lret
cli
push
andb
mov
sub
xchg
add
push
test
das
cmp
push
bound
pop
fstps
xchg
div
adc
adc
shr
adc
ds
push
enter
add
sub
jns
ret
ret
push
outsl
imul
imul
push
sbb
xchg
sbb
mov
mov
inc
fwait
loope
mov
lods
push
or
push
add
dec
stos
cmc
cmp
jge
test
movsl
rolb
in
mov
jmp
leave
cltd
je
sbb
mov
and
rorl
shll
stos
mov
mov
cmp
into
sahf
or
xchg
rolb
mov
call
dec
pop
mov
addr16
gs
push
mov
fistpl
ret
xchg
xor
fsts
ds
aad
ds
pop
in
ret
pop
outsb
pop
or
out
das
rol
or
mov
adc
insb
and
jno
lcall
out
mov
icebp
test
ljmp
sti
push
jo
cmpsl
mov
mov
cmp
xchg
lea
pushf
lea
repz
xchg
fwait
mov
scas
outsl
out
mov
call
test
add
je
lods
negl
push
fwait
xchg
shl
push
cwtl
fbld
jmp
mov
les
cmp
lcall
hlt
ds
imul
xchg
mov
cltd
jb
jecxz
movsb
jae
sub
les
or
pop
lret
in
mov
mov
ja
mov
sub
pop
cmp
adc
sub
jge
loopne
call
cs
dec
outsb
fldlg2
mov
ljmp
ret
ret
aas
push
lret
cmp
xchg
xor
adc
mov
sub
ret
inc
inc
test
mov
jno
iret
jno
push
jle
push
push
pop
pop
rclb
jns
aam
mov
inc
hlt
pop
out
pop
pop
lods
insl
js
jnp
and
mov
jp
add
in
sbb
test
mov
push
popf
lea
pop
mov
cltd
jae
inc
xchg
mov
push
popf
xchg
fcmovu
jo
popa
cmp
es
test
cmp
ret
pop
int3
aaa
cltd
jns
inc
adc
ds
xchg
pop
and
hlt
xchg
rorl
dec
clc
sub
enter
xor
shlb
loope
inc
out
fs
popa
ja
pop
cwtl
xchg
xor
hlt
push
js
into
shlb
pop
std
jae
neg
adc
ds
dec
cwtl
cmp
mov
add
and
xlat
in
sti
cmp
mov
jecxz
int
jb
jmp
push
movsb
inc
orb
sub
repnz
rcrb
sbb
jmp
pushf
jb
movsb
out
and
xchg
andl
imul
insb
or
and
jle
loope
into
pop
inc
ret
push
pop
jne
xchg
es
pop
jb
sub
lds
mov
faddp
pop
xchg
pop
pop
iret
ficoms
mov
sbb
cmpsb
add
or
je
lahf
jmp
fisubrl
and
or
jl
push
cld
gs
add
adc
mov
jne
loope
pop
mov
loopne
in
push
call
jmp
add
fcoms
into
sar
and
cwtl
cwtl
insl
shr
lret
inc
sbb
jo
mov
push
jno
inc
pusha
aad
adc
rcrl
pop
mov
fildll
dec
outsb
jb
int3
das
sahf
mov
jmp
repz
mov
push
cmp
push
inc
push
repnz
daa
mov
mov
arpl
xor
sbb
movsl
je
dec
cltd
add
add
pop
push
fstpl
jge
int
push
pushl
inc
sti
adc
enter
jbe
daa
sub
push
scas
into
xchg
icebp
jns
lahf
pop
push
lods
xchg
dec
sbb
mov
outsl
push
sbb
ficompl
xor
mov
lods
mov
ret
int3
mov
inc
dec
add
sub
sbb
fidivs
insb
sbb
push
dec
adc
xor
stos
pop
push
hlt
inc
ret
pop
push
test
inc
fsubrs
sbb
lahf
mov
push
jl
jmp
xchg
jbe
test
push
popf
mov
loop
lea
jge
add
jecxz
mov
idivb
pop
in
in
fisubs
fdivs
sub
add
mov
cli
add
aad
sub
call
adcb
or
push
jecxz
jo
cmpsb
sti
jae
sarl
push
mov
mov
sub
out
pop
xchg
and
int
mov
push
fmul
mov
clc
or
popa
out
mov
push
clc
xchg
imul
iret
push
stos
sub
mov
adc
inc
xor
push
cmp
adc
cltd
sub
xor
lea
stos
sbb
xlat
push
mov
fsubrs
xor
out
mov
xor
fimuls
cmpsl
fwait
test
pop
add
mov
cs
inc
outsb
leave
bound
mov
js
mov
jnp
dec
test
and
push
mov
fstpt
es
inc
inc
push
mov
jb
adc
mov
fwait
pop
sub
mov
and
ja
inc
fcoms
fiadds
inc
imulb
inc
lods
or
js
add
int
lret
push
mov
dec
in
dec
movsb
mov
test
xchg
xchg
rcrb
pop
mov
push
push
jmp
clc
xchg
outsb
fisubl
sub
push
cmc
bound
nop
ret
push
rorl
out
sbb
push
push
repz
rep
mov
push
jmp
leave
sahf
in
add
xchg
call
pop
cmc
jb
mov
loope
rcll
xchg
cmpsl
insl
rcrb
and
jg
pop
aaa
mov
loop,pn
in
fisttps
add
xlat
jl
add
cmp
push
out
outsb
sbb
mov
test
adc
out
rcll
jb
sbb
ret
aas
inc
push
ljmp
in
jb
pop
adc
hlt
push
mov
or
mov
ja
ret
inc
jae
mov
subl
sub
mov
out
mov
push
inc
pop
imul
pop
gs
fnsave
push
xor
adc
jmp
out
cmpsb
push
add
gs
inc
out
das
inc
mov
fnstcw
loope
cld
dec
cmp
stos
mov
jo
jecxz
xor
enter
out
loope
push
push
gs
movsb
daa
rorb
adcb
call
mov
jno
mov
rclb
sarb
xchg
nop
inc
inc
lahf
roll
mov
or
adc
mov
adc
mov
insb
pop
adc
mov
xor
rcrb
adc
inc
xor
pop
call
mov
fdivl
cli
nop
stc
movsl
cmp
add
into
rcl
cmp
and
mov
sub
push
loope
dec
jmp
cli
or
setl
pop
xchg
arpl
pop
add
das
mov
xlat
mov
mov
xchg
xchg
add
out
xor
dec
push
test
lea
fimuls
xor
dec
sub
inc
pop
ljmp
mov
sbb
push
inc
insl
sub
fxam
push
pop
sti
es
xchg
jnp
ja
addr16
fcmovbe
xchg
lods
mov
pop
ja
outsl
mov
inc
add
dec
jb
inc
xchg
cmp
out
subb
push
fisttpl
dec
jp
cmp
mov
fwait
mov
aad
sub
shr
icebp
movsl
roll
call
add
call
xchg
cmp
out
pop
jnp
clc
aaa
out
in
add
leave
cli
pop
and
and
mov
pushf
cmp
cmp
and
pop
fistpl
cmp
push
inc
jl
jbe
xchg
in
mov
fsubs
stc
adc
or
lret
lret
clc
mov
dec
iret
jns
cmpsl
outsb
xor
lods
bound
add
cmp
stc
jmp
shlb
add
sbb
pop
mov
and
cltd
cmp
fldenv
and
push
jo
cli
mov
mov
sbbl
fadds
push
mov
mov
aam
jl
out
stc
mov
adc
leave
inc
jmp
pop
add
push
and
jg
aas
mov
ret
popf
repnz
daa
scas
add
jmp
sbb
out
int
mov
mov
orl
push
pop
cmpsb
fistl
and
inc
adc
aam
sbb
mov
sub
fiaddl
add
in
imul
out
jno
mov
fistpll
notl
xor
out
add
out
fs
dec
ret
sbb
cmpsb
or
cwtl
add
lds
aas
data16
xor
shrb
fcmovnu
les
int
cmp
push
mov
fimuls
test
insl
insb
cmp
sbb
es
push
shl
and
jns
sub
or
sub
aad
loop
or
xor
hlt
out
cmp
pop
in
and
dec
xchg
and
shll
movsb
lea
push
mov
push
adc
cltd
sub
sbb
mov
jge
push
outsl
enter
add
cwtl
andl
test
sbb
cwtl
pop
shlb
dec
imul
and
or
mov
mov
icebp
sbb
jg
dec
xchg
push
jnp
ffreep
mov
imull
mov
lods
in
in
int
andb
mov
push
add
inc
aam
push
cmp
int
insl
ljmp
pop
pushf
cwtl
repnz
adc
sbb
adc
lret
jb
jae
xchg
outsb
mov
xor
cmp
je
mov
lcall
stos
cmp
in
aas
dec
pushf
jb
push
out
dec
lcall
clc
cltd
std
test
cmp
dec
xchg
or
cmp
inc
pop
mov
cmp
outsl
mov
adc
jg
cmp
ret
pop
and
test
or
dec
inc
cmp
mov
xchg
mov
xorl
and
movsb
jnp
xor
ret
adc
pcmpgtd
adc
inc
sub
ret
mov
push
shr
orb
sbb
adc
xor
addr16
pop
hlt
inc
ljmp
int3
mov
inc
addb
jnp
pop
icebp
das
xorl
in
into
add
xchg
addr16
sbb
pop
lock
mov
cmp
sub
mov
push
jbe
push
aad
scas
pop
std
loopne
test
dec
cmp
cmp
loop
mov
test
mov
push
xlat
sbb
sbb
bound
lods
push
jle
dec
mov
loope
xchg
rorb
push
pop
pop
sbb
cmp
push
das
fisubl
fwait
sub
xchg
cmpsb
xchg
or
je
jnp
repz
shlb
pop
mov
push
add
sahf
les
addr16
jmp
sub
pop
fadds
fmuls
or
mov
adc
jge
test
add
pop
mov
mov
or
jg
leave
or
gs
add
lds
hlt
xor
insb
test
inc
shl
dec
ficoms
push
fwait
mov
inc
stos
cld
jnp
call
rorb
sub
loopne
push
xchg
inc
js
lods
mov
mov
cmp
sub
and
mov
sarl
lods
xchg
pop
rclb
je
insb
mov
je
rcrb
sbb
adc
add
and
fidivl
mov
mov
sbb
ret
mov
sbb
loopne
xchg
cmpsl
ds
push
and
xchg
xor
inc
sub
sbb
adc
int
nop
nop
push
and
cld
pop
sub
bound
jns
int3
mov
xorb
mov
xchg
cmp
jle
fsts
jnp
push
dec
or
mov
lods
cli
inc
aad
cwtl
mov
das
aam
popf
cmp
lock
sub
pop
lahf
lods
sbb
pop
mov
in
in
pop
rolb
sbb
sbb
push
jns
lea
lods
xchg
xor
cmpsb
mov
push
xchg
xlat
sbb
idiv
sub
add
loopne
fsubr
dec
inc
int3
test
pop
rcl
ret
pusha
ret
add
cmp
mov
or
je
jg
inc
or
push
mov
int
inc
nop
jp
inc
inc
pop
xor
dec
push
xchg
push
stos
pop
jbe
dec
ss
pusha
lods
mov
pop
aam
data16
cmp
fcomps
xchg
adc
add
cmp
add
ss
inc
test
dec
xor
sbb
or
xor
jne
push
scas
xchg
dec
add
loop
mov
xchg
pop
push
add
and
xchg
lods
cmp
xlat
aam
xlat
pop
mov
inc
add
fsubrl
jmp
fadd
les
mov
fistl
out
mov
inc
test
sbb
adc
add
adc
inc
pop
in
mov
xchg
fiaddl
sbb
je
test
push
or
rol
dec
cmp
adc
xchg
lret
not
mov
loop
mov
add
insb
cmp
into
xor
outsb
inc
dec
push
lods
ja
inc
sbb
insb
cmp
rol
push
lods
adc
daa
aaa
in
dec
stos
mov
pop
jl
test
in
mov
jnp
js
test
fmull
jbe
mov
and
sub
fsubs
xor
cmp
popf
cmp
or
lahf
loop
mov
mov
ja
xchg
xlat
adc
or
adcl
fwait
xchg
sub
mov
jns
pop
cmp
mov
arpl
fnsave
rcrb
mull
mov
xor
fwait
or
hlt
xchg
pop
push
loope
mov
ret
push
mov
mov
pushf
leave
adc
ret
cmp
push
in
sbbl
sbb
imul
inc
inc
icebp
push
add
lods
clc
xor
mov
aam
push
mov
ret
js
inc
arpl
push
les
loope
aas
sub
add
leave
je
mov
mov
cwtl
xor
add
push
inc
dec
outsl
gs
pop
int3
lcall
jmp
stos
insb
lahf
or
shlb
or
sub
clc
push
dec
jp
jecxz
pop
mov
cmp
js
sub
mov
xchg
xor
inc
aas
add
pushl
xchg
lahf
jmp
fcoml
out
outsb
inc
testb
xlat
push
sub
lret
dec
dec
fs
push
scas
xchg
aaa
push
ret
int3
jns
aas
sbb
data16
push
xchg
imul
sbb
por
loope
insl
in
mov
aas
cwtl
inc
lods
mov
clc
mov
rolb
sbb
xchg
std
mov
aam
mov
push
lret
push
sub
add
je
dec
adc
add
data16
push
jns
dec
rcrl
or
jl
mov
xor
lock
push
dec
call
sbb
pop
cmpsl
shlb
std
fsubs
je
aas
ret
fwait
pop
insb
jae
jl
aad
lods
sub
lods
jmp
out
cmp
mov
dec
inc
dec
push
inc
out
rcrl
lods
repz
pushf
dec
mov
sahf
mov
ljmp
pop
out
inc
fistpl
xchg
inc
in
xlat
cmc
rorl
or
rol
iret
dec
ds
movsb
pusha
xchg
sub
cmp
les
sbb
fsubr
adc
repz
inc
pop
out
dec
fstpt
dec
cs
sbb
das
imul
rorb
mov
cmpsl
jmp
jge
mov
clc
inc
push
mov
popa
clc
dec
out
add
out
repnz
cltd
daa
xchg
bound
js
mov
sbb
pop
cmp
xchg
aas
test
mov
fisubs
xchg
add
mov
mov
mov
sbb
jno
outsb
xlat
mov
xor
xlat
inc
cmp
xchg
arpl
xor
popa
push
repnz
addb
or
lea
fs
imul
lcall
jecxz
mov
ds
arpl
cmp
xor
mov
fsubrp
movsb
cld
mov
mov
pop
cmpsl
cmpsl
lods
xchg
out
addr16
mov
movsl
in
mov
inc
arpl
or
ja
add
pop
mov
out
aaa
xlat
cmpsl
imul
sub
iret
dec
xlat
daa
shll
pushf
ror
leave
insl
inc
sti
pusha
lcall
rorb
dec
lcall
jmp
mov
mov
imul
mov
sbb
push
jp
dec
sub
adc
mov
mov
sub
pushf
mov
cld
pusha
cltd
adc
ror
dec
cltd
pop
bound
mov
inc
fucomip
cmp
inc
dec
flds
lahf
pop
cmpsb
xchg
pop
pop
add
fisttps
sub
lret
mov
sbb
popa
sbb
mov
mov
gs
push
push
sbb
nop
pop
and
shrb
mov
out
movsl
and
push
ja
mov
jnp
pop
sbb
imul
das
add
das
bound
xor
lds
pop
rolb
mov
div
add
pop
lea
in
orl
xor
adc
mov
cmp
scas
out
call
mov
jne
iret
sub
bound
xchg
inc
mov
sub
inc
jns
aam
mov
sar
out
cmp
mov
sub
stos
push
jecxz
cmp
ss
fwait
pop
filds
fstpl
mov
nop
jns
xor
mov
sub
into
push
test
mov
add
jo
or
je
cmp
in
adc
loopne
jno
ret
inc
sbbl
mov
aad
int
hlt
xchg
stc
sub
or
loope
jns
mov
test
push
push
enter
loopne
nop
enter
and
fs
loop
shll
jnp
xor
pop
jae
pop
cmpsl
lea
movsb
std
cmp
insl
cmp
adc
mov
sbb
lahf
mov
adc
icebp
push
push
popa
and
push
fs
push
je
in
mov
xchg
outsl
xchg
dec
xor
push
sub
ljmp
in
in
xchg
lahf
loop
aas
mov
pop
dec
dec
icebp
or
iret
ljmp
loope
ficoml
sbb
xchg
dec
mov
in
cmp
fnstsw
rcl
inc
scas
hlt
mov
mov
fstl
adc
or
cmp
rclb
sbb
stos
ror
sarb
dec
js
fists
rcr
mov
repnz
add
mov
jno
push
faddp
fisttpll
scas
jo
push
seta
dec
add
pop
movsb
push
xlat
xchg
dec
sahf
and
rcrl
imul
les
push
add
loopne
add
xor
addr16
stos
clc
sahf
or
mov
and
jo
jp
jbe
in
iret
mov
test
mov
mov
sarl
xor
orb
clc
push
mov
xor
in
jo
lds
jp
dec
mov
xor
or
fidivrl
lahf
xchg
cli
leave
ud0
xchg
fcmovb
in
push
outsb
rclb
adc
aaa
sbb
sbb
je
dec
sbb
adc
mov
pushf
mov
sbb
or
cli
jmp
lock
mov
dec
es
cmp
push
cld
and
xchg
jns
jno
stos
xor
nop
jne
leave
repz
or
xor
push
outsl
cltd
xchg
lcall
cwtl
add
les
clc
mov
pop
pop
mov
mov
or
imul
cmpsb
push
jle
call
jg
pop
xlat
jne
fcmovbe
jo
or
add
jecxz
mov
fwait
test
stos
xchg
inc
pop
mov
dec
orl
fidivs
sbb
adc
push
fs
sub
pop
outsb
mov
pop
stos
lret
xchg
and
jg
xchg
mov
inc
add
mov
repnz
add
jne
xor
shrb
inc
push
lods
ljmp
mov
add
jnp
mov
movsl
lahf
iret
lock
push
add
test
pop
push
daa
adc
jp,pn
lcall
in
insl
add
xchg
adc
int3
es
cwtl
std
lcall
dec
sbb
ret
jl
in
testl
scas
and
adc
imul
int3
std
ficomps
xchg
push
mov
pop
dec
jp
and
ljmp
push
add
rcr
arpl
scas
lds
aas
add
das
andl
inc
test
cs
sub
mov
jecxz
bswap
aaa
cltd
adc
cmp
push
mov
push
jns
mov
mov
add
push
ret
mov
mov
jne
sub
and
mov
cli
rorl
dec
sbb
incb
dec
adcb
mov
fs
fwait
cmp
dec
mov
inc
jbe
cli
cmp
cmp
and
fwait
das
mov
test
mov
add
or
push
push
pop
repz
push
or
arpl
in
or
pop
dec
or
pop
sbb
cltd
push
imul
xor
cmp
loope
or
dec
stc
fimull
sub
in
stc
repnz
xchg
int3
movsb
and
insl
mov
fwait
add
inc
push
je
mov
dec
sub
or
jae
into
incl
dec
fwait
clc
js
push
loop
test
hlt
xchg
inc
hlt
out
dec
outsl
aam
dec
push
dec
push
sbb
into
fdivl
repnz
xchg
shl
dec
in
jl
sbb
arpl
cmp
fidivrs
out
mov
test
loope
and
bnd
pop
xor
push
push
sub
data16
xchg
push
adc
sub
imul
pusha
xchg
pop
cltd
pushf
lds
lea
mov
or
mov
push
imul
popa
rcrl
xchg
fbstp
inc
pop
ljmp
movsb
add
mov
mov
rorl
xlat
orl
imul
ja
mov
inc
cli
adc
mov
inc
mov
push
and
fbld
xlat
rorl
pop
dec
aad
ret
xchg
ret
aad
xchg
mov
dec
mov
add
push
jecxz
add
fwait
push
cli
jp
sti
inc
add
pop
sti
push
repnz
fists
or
or
mov
rolb
ret
stc
pop
call
push
stc
pop
jae
pop
sbb
lret
push
ljmp
cmp
or
pusha
dec
js
pop
pop
sahf
push
adc
rol
lods
pop
fadd
pop
js
sahf
clc
mov
ficoml
mov
shll
mov
or
fucomi
lcall
outsb
pop
cmpsl
push
loope
mov
xor
lea
fidivrs
loopne
cltd
int3
add
enter
inc
lods
and
in
pushf
nop
mov
xchg
jnp
xchg
or
mov
arpl
mov
div
cmp
cltd
mov
js
cwtl
inc
pop
adcb
jmp
scas
cmpsb
not
sub
dec
imul
xor
jbe
mov
pop
movsl
outsl
inc
fldcw
test
int3
push
hlt
or
mov
inc
les
dec
xchg
cld
jo
in
xor
pop
xlat
mov
xchg
cli
xchg
or
push
bound
dec
repz
sub
js
sbb
mov
sbb
loop
test
insb
and
insb
sbb
push
add
cmpsl
inc
decl
nop
push
add
pop
push
lea
les
cli
adc
push
inc
or
jbe
cmp
mov
nop
je
or
movsl
les
movsb
subl
out
fdivr
sub
mov
stos
in
stos
inc
test
imul
in
test
inc
mov
xlat
and
movsl
mov
imul
test
test
mov
inc
dec
bound
divb
mov
inc
fstpt
int
ljmp
bound
add
xlat
or
inc
mov
adc
adc
mov
add
or
mov
xchg
cltd
repnz
out
cmpsl
cmp
sub
lods
mov
push
ja
mov
daa
fidivs
jge
xor
and
and
jns
imul
lret
movsb
sbb
mov
pop
loope
mov
int
cmp
sbb
roll
insb
mov
fmul
push
inc
pushf
cmpsl
mov
cmc
stc
cmp
fiadds
mov
mov
inc
lea
jb
cltd
pop
dec
clc
xor
pop
ret
or
mov
sbb
jae
das
inc
je
rorb
fildl
insl
and
pop
ss
pop
inc
mov
movsb
jge
pop
sbb
mov
icebp
mov
ficoms
inc
jmp
push
push
cmc
daa
pop
jp
push
add
scas
bound
jns
ljmp
adc
xchg
push
cltd
int
ljmp
dec
mov
imul
mov
insb
ljmp
rcr
fnstsw
iret
mov
xchg
pop
jg
mov
test
pop
jge
enter
sub
or
dec
mov
adc
ja
dec
jg
out
stos
leave
clc
pop
inc
mov
sbb
mov
test
mov
mov
dec
fidivrl
aam
loop
sbb
or
addr16
in
mov
test
stos
dec
xchg
mov
jmp
mov
mov
add
movsl
xor
mov
xor
test
jl
adc
jns
mov
subb
or
sbb
daa
push
loopne
push
in
ljmp
aam
rcrl
in
xchg
fbstp
mov
sbb
clc
ret
xchg
insl
sbb
cwtl
arpl
jmp
adc
mov
ja
fiaddl
das
bound
es
ja
and
test
incb
arpl
mov
inc
mov
mov
pop
or
roll
xchg
in
mov
insl
dec
or
xor
jl
lea
mov
ret
loopne
movsb
xlat
jp
push
mov
sbb
mov
sahf
sub
gs
mov
mov
sub
push
xchg
or
adc
or
jbe
repnz
fwait
mov
dec
inc
je
or
out
out
jmp
push
sti
shl
dec
sub
mov
lcall
repnz
mov
movsb
xchg
mov
or
add
lahf
enter
inc
sub
mov
ss
stos
pop
lock
arpl
popa
mov
jns
lret
adc
inc
cmpl
sub
adc
push
cmp
xchg
or
arpl
pop
cltd
aaa
mov
movsbl
repz
xchg
ror
mov
insb
ss
dec
or
inc
lods
xor
enter
mov
cmpsb
mov
mov
repz
jbe
push
insb
mov
jg
fldl
rcl
xchg
out
fcompl
dec
cmp
cmpb
shrl
xchg
cs
outsl
cli
mov
pop
repz
dec
sub
clc
push
xlat
movsb
neg
scas
data16
in
lods
test
bound
dec
sbb
push
mov
lar
sub
stc
sahf
push
pop
mov
mov
jle
out
es
ljmp
in
mov
sub
call
sbb
sub
xchg
mov
jp
cmp
fadds
cmp
xchg
xor
lret
xlat
pushl
cmp
pop
popf
test
jmp
adc
insl
lods
or
push
cmp
mov
xchg
lds
loope
sub
pop
out
add
push
test
fwait
sub
ja
xor
xor
adc
jmp
les
xlat
pop
or
fucomi
adc
arpl
fldcw
ret
ficoms
lds
mov
cltd
adc
gs
mov
adc
shrl
ss
in
scas
lcall
imul
pop
adc
mov
imul
lods
aas
jbe
inc
xor
ss
int
cli
fistl
sbb
sbb
sbb
push
pushfw
push
adc
test
mov
and
jnp
pop
push
mov
leave
mov
xchg
clc
ret
lahf
scas
jae
cmpsb
add
xor
sbb
add
cmp
repnz
dec
shlb
inc
lret
lock
ret
dec
pop
xor
fs
cmp
xor
jns
lock
sub
sbb
sub
pop
out
icebp
movsl
push
sbb
add
adcl
mov
mov
cmp
pop
xor
aaa
adc
sub
mov
and
sub
mov
out
cmp
lock
mov
scas
insl
js
sahf
ret
cmpsb
jne
mov
movb
or
push
divl
jecxz
rcr
std
out
imul
out
xchg
push
mov
jo
lret
popf
pushf
pop
jl
movsb
and
jle,pt
cmp
jo
pop
push
add
aas
lock
loopne
sbb
pop
test
repz
not
push
cmp
outsb
out
pop
dec
mov
push
shrl
push
push
ja
movsl
mov
fdivs
mov
roll
aad
xlat
xchg
pop
es
adc
push
cs
popf
adc
or
das
mov
fisubl
mov
test
sbb
aaa
ret
xchg
pop
out
mov
arpl
cld
loop
into
pop
out
movsl
inc
mov
cmp
mov
xor
jecxz
jmp
aas
mov
lea
jnp
add
push
dec
push
cmp
sbb
ret
testl
mov
movl
or
in
fdiv
out
ror
jno
sbb
fistpl
dec
mov
shll
jg
pop
cmp
cmc
jp
push
add
outsl
leave
inc
subl
aam
out
aad
mov
jle
inc
das
xchg
daa
cmpsl
notb
jg
sbb
mov
cmp
clc
imul
dec
mov
mov
nop
mov
das
dec
cwtl
ss
pop
jge
repnz
lds
jmp
dec
adc
mov
dec
lret
inc
not
xchg
inc
fbstp
aas
mov
mov
fdivp
out
jne
pop
into
jl
sbb
shl
lock
outsl
or
lods
or
adc
daa
enter
push
stos
comiss
jle
dec
sbb
cwtl
mov
push
int3
jmp
push
int
xor
cmp
cmp
aas
xor
cmp
sbb
jecxz
rcl
adc
addr16
inc
mov
lret
jle
and
push
lcall
lahf
fs
nop
pop
cwtl
repz
mov
mov
dec
mov
movsl
dec
jno
adc
cmp
fs
pop
scas
dec
rorb
mov
repnz
sbb
rcl
out
jge
mov
rorl
add
xor
cmp
movsl
in
inc
out
adc
sbb
xchg
les
ficoms
pop
lods
or
pop
in
inc
mov
dec
wbinvd
pop
jno
repnz
xor
stos
mov
lock
add
insl
pop
cmp
adc
pop
mov
xor
jl
sbb
jge
push
aad
cmp
xchg
xor
aam
and
scas
mov
xchg
push
jns
pushf
mov
cmp
out
aaa
sbb
fidivrs
push
js
lods
jg
dec
xor
lea
inc
add
cmp
mov
mov
gs
sub
nop
jl
adc
xor
cmpsb
xchg
popa
int3
or
mov
adc
lods
lret
mov
cmc
push
popa
inc
insb
int
out
jb
mov
mov
mov
xchg
add
nop
pop
inc
repnz
jecxz
push
loop
outsl
sub
sbb
shrl
dec
xlat
nop
stc
jmp
push
xor
cmpsl
mov
testb
jno
ljmp
iret
outsb
cld
jmp
or
xchg
das
leave
mov
sub
sbb
hlt
adc
mov
dec
cld
popf
mov
mov
pop
xchg
sbb
mov
enter
pop
outsb
mov
add
es
xor
nop
sbbl
repnz
aam
or
lret
sub
cmpsb
pushf
push
sbb
fwait
lret
xor
add
jbe
div
fstpl
incb
loope
inc
sbb
lahf
scas
adc
into
or
mov
dec
gs
addb
jbe
and
test
xor
filds
ficoml
loope
inc
es
jae
cmpsl
and
jl
movsl
das
mov
idiv
xchg
ss
imul
xchg
mov
or
cmpsl
outsl
push
scas
rclb
dec
pop
subb
push
shr
push
push
insb
cmpb
test
add
or
xchg
sub
push
sbb
mov
std
jo
std
jp
xchg
lods
scas
inc
scas
in
lret
pop
movsb
mov
frstor
pmaxsw
popa
mov
shl
cmp
iret
scas
inc
lcall
pop
sbb
stos
and
loopne
lret
outsb
lock
fstpl
add
pop
or
sbb
out
test
rolb
fisubrs
rcll
push
dec
outsl
and
imul
pop
out
cmp
fsubs
xor
gs
and
pop
pushf
pusha
int3
pusha
cmp
cmp
ljmp
cli
push
mov
sub
sti
daa
mov
jg
mov
lods
mov
stc
lret
lods
shrl
pop
dec
pop
jl
scas
loopne
or
hlt
jo
inc
pop
enter
outsb
aas
ja
mov
call
jbe
sub
shll
cli
js
lret
hlt
mov
rcl
je
addr16
adc
pop
test
outsl
aam
clc
loope
xor
or
and
push
jge
sarl
jg
adc
jle
xchg
popa
addr16
pop
add
mov
daa
inc
push
jmp
lcall
sbb
xchg
testb
inc
xor
mov
mov
out
xor
movsl
lret
movsb
enter
in
xor
daa
lea
movsb
cwtl
xor
xchg
cltd
xor
fimull
xor
insl
adc
insl
add
dec
inc
int3
repnz
sbb
xlat
push
cmpsb
ss
mov
mov
or
xchg
sub
push
mulb
stos
lret
mov
adc
dec
insl
outsl
movsl
lds
inc
je
inc
or
sbb
and
jbe
mov
sbb
sarb
xor
sbb
sbb
push
sbb
jg
pop
aaa
test
pop
xor
call
stos
mov
lcall
test
xor
and
inc
adc
rcll
or
ljmp
dec
xor
in
adc
rclb
mov
sbb
addr16
adc
lock
data16
adc
rorb
jo
push
adc
xchg
lea
pop
mov
inc
lret
xchg
cwtl
cmpsb
addr16
stos
dec
push
notb
cmpsl
mov
outsl
jp
and
lds
cltd
fstl
ljmp
sbb
bound
sahf
cwtl
rolb
and
in
test
mov
pop
ret
popa
aad
js
sbb
xlat
xchg
cmp
popa
pop
idivb
sbbb
mov
dec
jecxz
adc
test
sbb
pop
sahf
pop
jmp
xor
mov
xchg
xchg
call
xchg
mov
cltd
mov
adc
or
add
jl
int3
push
test
pop
out
mov
add
push
sub
pop
repz
cmp
push
and
mov
bound
cmpsb
cmp
mov
push
inc
aad
push
sub
push
and
shr
jp
je
enter
mov
xchg
push
pop
mov
cmpl
xlat
out
mov
or
pop
cmp
addr16
mov
mov
sub
adc
arpl
pop
idivl
out
inc
pop
pushf
fisubrl
mov
jle
pushf
fwait
jp
mov
jbe
pop
mov
inc
inc
or
jg
inc
inc
test
das
xchg
fmul
mov
or
mov
les
mov
or
or
mov
and
push
lcall
jecxz
adc
popf
xorl
movsb
aaa
push
and
lock
jo
dec
mov
mov
push
jl
aad
cmp
jecxz
in
cmp
gs
mov
cmp
sub
sti
pusha
aam
andb
xlat
shr
sbb
dec
inc
pop
xchg
ret
out
das
lret
push
scas
and
addr16
sbb
sbb
sub
mov
scas
loopne
add
push
pop
dec
iret
sahf
sbb
ret
mov
in
push
dec
mov
das
pop
outsb
popa
mov
in
popa
fldcw
mov
sti
mov
aas
mov
push
and
add
pop
mov
fcmovnb
enter
mov
shrb
jb
push
or
lods
push
mov
mov
lcall
inc
enter
fcompl
stc
pop
lds
sbb
jmp
test
pop
pop
pop
pop
iret
mov
cwtl
push
data16
movsb
mov
sbb
mov
add
cltd
negb
stos
std
leave
push
push
dec
sti
lods
mov
daa
inc
inc
fucomip
out
jg
rorl
push
jb,pt
push
lret
in
sub
out
mov
fistpll
xchg
test
fcomi
or
add
clc
push
arpl
xchg
or
cwtl
jge
xchg
or
test
repnz
lods
das
popa
cmc
ret
lret
test
hlt
pop
imul
adc
push
enter
cmpsl
cld
fistpl
mov
inc
pop
in
xchg
sub
cltd
mov
out
xor
lret
xchg
andl
popa
or
jecxz
test
jnp
cmpsb
in
lahf
stos
and
cli
push
das
add
mov
or
arpl
or
inc
mov
pop
sub
inc
jge
and
ret
inc
dec
fldenv
adc
out
xor
mov
in
daa
fxch
outsl
test
jo
scas
cmpb
and
cmpsb
push
and
mov
sbb
xor
mov
lods
sub
jmp
rcll
stos
dec
mov
das
push
xchg
out
mov
scas
adc
jo
test
inc
xor
jle
xor
pushf
orb
mov
jle
sub
dec
push
cs
hlt
bound
out
mov
xor
fidivl
inc
mov
ret
imul
into
add
jg
xchg
and
pop
stos
fs
push
jg
mov
cmp
mov
mov
repnz
shll
push
dec
imul
in
and
fldl
add
xor
dec
pop
fnsave
bound
jecxz
fcomp
out
sbb
cmp
ds
repz
je
and
cld
jmp
imul
pop
mov
jo
mov
pop
lods
sahf
fwait
div
lods
jl
inc
mov
pop
mov
fsubrs
cmp
movsb
sub
push
insb
out
mov
jbe
sub
mov
out
lcall
sub
inc
mov
gs
push
icebp
out
mov
mov
in
das
cmp
xor
enter
xchg
sbb
call
fbstp
lods
pop
dec
ret
xchg
inc
add
insl
mul
mov
xchg
aam
jl
mov
xor
shl
xchg
jnp
add
push
loop
aam
fistps
popa
jecxz
sub
mov
aad
insb
aad
or
cmp
test
mov
int3
pop
nop
aam
mov
iret
outsl
push
jno
stos
mov
faddl
lods
cmp
cltd
xchg
jae
ret
xchg
jge
push
mov
hlt
fnclex
adc
dec
ds
decl
lahf
mov
je
sbb
dec
in
pushf
mov
imul
push
inc
or
push
aam
or
fcoms
ljmp
xchg
in
jl
aaa
repz
jbe
movhps
insb
dec
aam
or
sti
hlt
pop
movsl
sub
sub
aam
out
loopw
outsb
cmpsl
and
jmp
jp
jb
in
sub
lahf
xlat
ds
adc
sahf
mov
pop
arpl
lea
and
lret
jae
inc
adc
mov
js
dec
pop
dec
ja
lock
sbb
or
inc
adc
dec
push
popa
xchg
xchg
cmc
aas
xor
mov
adc
inc
mov
clc
adc
cmp
add
inc
dec
frstor
dec
jo
out
pop
ss
lret
mov
pop
adc
test
adc
and
sbb
subl
inc
fidivrs
dec
jb
jp
mov
in
das
mov
fisubs
repz
xchg
rorb
mov
lods
jnp
pushf
out
jb
jae
movsb
and
lcall
dec
xlat
mov
cmp
jbe
in
sbb
xor
pop
sub
xor
sahf
aaa
pop
jmp
imul
sti
or
adc
loop
push
sub
fdivrl
test
adc
into
ss
and
inc
mov
add
leave
sbb
into
jle
mov
shl
inc
gs
dec
xorb
mov
jno
bound
push
pop
insb
dec
sarl
rcrl
scas
push
inc
iret
les
and
mov
jae
add
add
dec
xchg
jecxz
xor
adc
pop
out
sub
jge
ljmp
rcrb
adc
push
lret
out
ret
inc
or
in
xchg
mov
mov
out
adc
adc
xorl
and
iret
cld
dec
jnp
hlt
out
xor
aad
xchg
scas
pop
scas
mov
jo
adcl
icebp
out
fisttps
inc
inc
pop
or
int
inc
xor
mov
out
sbb
ss
in
ja
mov
into
in
cmpsb
adc
jb
mov
dec
repz
cmp
mov
imul
mov
dec
and
sbbb
test
scas
ret
in
nop
xor
icebp
cwtl
xor
jp
sbb
sti
popf
or
in
lcall
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
nop
push
push
nop
mov
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
add
add
add
add
mov
add
and
add
push
add
orb
add
nop
add
adcb
add
pusha
add
addb
add
lock
add
add
mov
add
add
add
or
add
add
mov
add
add
add
add
add
add
lds
call
add
add
add
add
add
xor
add
clc
add
addb
add
or
add
add
add
rolb
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
add
add
or
add
add
js
add
sub
add
or
add
loopne
add
add
or
add
add
add
loop
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
repnz
cmpsb
add
add
add
add
add
rolb
xor
add
call
add
add
add
sub
add
cmp
add
add
add
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
dec
cmc
add
cwtl
add
add
add
add
add
add
add
or
add
xor
add
cmc
add
les
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
insb
add
imul
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
imul
add
and
inc
add
push
add
add
outsl
add
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
popa
add
add
outsl
add
add
push
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
je
push
add
jb
jae
outsl
add
sub
and
xor
xor
xor
xor
sub
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
popa
add
add
add
js
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
popa
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
ss
add
ss
add
ss
add
aaa
add
add
aaa
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
gs
arpl
dec
outsb
outsw
