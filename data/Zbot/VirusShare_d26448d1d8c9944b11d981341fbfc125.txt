fdivr
push
mov
add
mov
pop
ret
or
push
push
push
call
incl
sub
or
push
pushl
or
inc
es
sub
in
jg
daa
xor
inc
bound
push
or
xchg
and
inc
addr16
jns
loopne
and
mov
add
push
or
and
in
jle
add
push
daa
out
dec
mov
in
jg
push
sbb
popa
adc
outsb
enter
in
and
stos
push
pop
jb
in
jl
mov
in
mov
or
pop
lock
sub
mov
ds
mov
sarb
push
jno
nop
int
das
movl
push
and
lret
or
ds
add
jns
dec
push
outsl
xor
xlat
mov
push
pop
dec
testl
xchg
outsb
inc
dec
fs
popa
rolb
lods
push
into
loopne
adc
idivl
cmp
lea
outsl
adc
shl
push
mov
xor
adc
or
stc
xor
add
push
push
push
xor
push
roll
inc
sti
adc
xor
xor
jnp
xor
or
xor
push
insl
sub
add
ja
and
hlt
push
push
vpsubsb
pop
adc
in
push
js
add
sbb
or
addb
xchg
in
dec
jb
push
lea
jg
adc
xlat
mov
dec
xor
cmpsl
fstl
movsl
scas
pop
mov
popf
pop
add
jl
or
mov
push
insb
gs
and
hlt
sbb
call
inc
jne
leave
mov
out
fisttps
mov
sub
jl
cli
xor
sarb
call
lea
jb
mov
lret
push
ret
pop
fisttpl
sbb
cld
xchg
loopne
outsb
jne
and
in
nop
mov
push
or
push
pusha
mov
adc
call
call
xchg
xchg
cmp
pop
mov
push
push
pushf
add
incl
lock
dec
inc
adc
sub
push
and
rclb
roll
adc
subl
clc
push
or
je
ljmp
xchg
push
mov
mov
push
add
lods
pop
popa
dec
dec
daa
mov
jno
sub
pop
movsb
adc
jb
push
jg
jmp
into
and
adc
xor
or
xchg
cld
cmp
mov
daa
adc
mov
sub
push
mov
call
add
lret
insb
add
jbe
jle
mov
push
sub
sbb
add
insb
add
or
push
mov
pop
mov
add
sbb
inc
and
dec
inc
cmp
push
inc
rolb
sbb
in
icebp
shll
movsb
addl
xchg
test
pop
sbb
cli
push
and
inc
iret
push
inc
hlt
mov
mov
add
sti
cs
sbb
xor
pusha
sbb
es
sbb
mov
rclb
mov
jno
inc
hlt
cs
adc
xlat
stos
repz
add
cmp
mov
mov
mov
sti
push
push
sub
xchg
in
xlat
in
paddd
push
push
dec
add
or
dec
pop
xor
fisubrl
ds
inc
push
addr16
sbb
frstor
or
or
xor
aaa
mov
loope
inc
cmp
cmp
lds
xor
push
fs
gs
xchg
pop
jecxz
jecxz
lahf
add
push
aad
decb
or
addr16
bound
fadd
xor
imul
enter
stc
and
inc
xchg
and
push
scas
fdivl
and
add
jb
mov
and
rorl
insl
shrl
and
inc
pop
and
jle
and
shrl
pop
aad
int
sub
push
out
testb
add
bound
repz
inc
sbb
mov
fs
push
adc
ret
in
fldcw
daa
js
fs
adcl
sbb
out
or
popa
lock
sti
push
mov
es
push
dec
cwtl
add
xchg
inc
call
cld
sub
add
mov
daa
push
cli
pop
imul
push
add
mov
or
test
push
arpl
mov
pushf
push
jle
in
xor
and
mov
and
inc
pusha
arpl
rclb
pushf
bound
cmpsl
lret
inc
xor
mov
in
nop
inc
mov
int
mov
add
jns
insl
gs
lahf
mov
and
imul
jmp
inc
add
orl
inc
pop
jmp
daa
adc
or
xor
and
andb
in
lea
cld
adc
and
dec
fdivs
xorl
push
leave
or
adc
adc
imul
pop
pop
int
sbb
jno
movsb
cmpsl
or
xor
push
xor
call
or
gs
addl
jle,pt
and
mov
mov
or
and
in
test
lea
je
pop
aaa
xchg
dec
inc
mul
push
aaa
dec
dec
ds
jno
in
and
loope
gs
dec
popa
xchg
in
ja
in
lock
xor
lods
mov
cmp
mov
pop
inc
outsl
and
push
adc
mov
cmp
dec
mov
sub
add
out
mov
pop
push
pushw
popa
push
or
ret
adc
lret
push
fdivs
sbb
or
pop
push
fsub
sar
cs
or
in
mov
xor
mov
push
mov
sbb
lret
sub
frstor
lock
or
push
jle
cmp
hlt
out
dec
es
mov
add
js
andb
inc
ss
push
repz
ljmp
push
xor
addb
xor
mov
cmp
in
fucomp
inc
jno
add
pop
rep
push
inc
enter
pop
cmp
mov
lods
test
jg
add
sbb
mov
cmp
pop
pop
adcl
mov
in
jo
push
add
aaa
push
xchg
nop
sub
or
daa
sub
xchg
stos
movb
imul
das
xchg
das
mov
jbe
xor
daa
fs
pop
loopne
jb
sbb
fs
or
orl
and
je
sbb
mov
lret
pop
pusha
in
imul
mov
hlt
mov
jnp
andb
sbb
sbb
outsb
inc
repnz
fistpl
sub
mov
and
add
cli
or
mov
nop
push
call
rorl
stos
or
pop
sti
inc
sbb
call
fldenv
jo
loope
dec
pop
adc
ret
nop
pop
subb
divb
jo
outsl
xor
inc
dec
ja
out
insb
daa
or
xor
ret
outsl
xchg
outsl
test
pop
or
es
mov
shrb
or
push
jmp
pop
iret
shrl
add
aad
fisttps
fs
push
adc
pop
and
test
push
adc
mov
ss
sbb
dec
andl
and
sbb
outsl
insb
dec
enter
push
xchg
cmpsl
test
in
jle
xchg
add
xor
es
jne
js
xchg
les
jl
stc
loop
inc
insl
inc
pop
push
fwait
sbb
adc
shrb
dec
scas
add
data16
ss
pop
jns
insl
push
cmc
enter
aaa
jae
jmp
inc
mov
jp
adc
xor
sbb
sbb
fidivrl
add
dec
adc
pop
push
mov
test
fcompl
sbb
popf
mov
push
push
wbinvd
sahf
or
movsl
fldenv
sbb
fists
shll
push
adc
push
imul
enter
or
mov
cmp
lcall
dec
push
push
pop
das
push
insl
mov
mov
and
push
ret
outsb
mov
test
adc
xor
push
cld
sti
pusha
lds
icebp
xor
xor
or
mov
mov
sub
jae
out
and
repnz
push
jle
int
nop
lea
sbb
fs
push
cwtl
add
je
push
popa
test
or
out
xchg
or
data16
nop
addr16
call
mov
or
jbe
addr16
pop
pop
add
lret
sub
mov
rorl
add
mov
or
xchg
fcoml
test
dec
ja
mov
ret
mov
dec
cld
pop
mov
and
inc
adc
rcll
add
and
xchg
adc
xchg
sbb
push
arpl
iret
push
cmp
fstl
or
incb
out
popa
inc
inc
enter
mov
inc
add
adc
push
and
test
test
cmovp
adc
jo
sti
shrb
and
xchg
loope
mov
sub
push
push
mov
loopne
lods
or
dec
xchg
shlb
ficompl
sbb
mov
mov
xor
shr
and
add
pop
iret
push
pop
jl
mov
in
lret
cmp
daa
dec
push
cmp
ja
enter
jno
push
sarb
dec
sbb
xchg
out
in
xor
add
adc
pop
subl
sbb
or
call
jg
int
aas
imul
imul
icebp
jge
and
pushf
xorl
inc
insl
xor
outsb
push
mov
nop
mov
cmc
jae
sbb
cmp
mov
and
jl
imul
pop
push
jge
clc
ds
fwait
pop
shrb
pusha
jnp
das
add
push
jo
push
nop
loopne
jo
adc
cmp
jl
mov
xor
mov
in
test
sub
test
call
sbb
inc
repnz
or
mov
or
clc
inc
mov
cld
sbb
loopne
pop
dec
das
pushw
js
inc
jge
and
call
addl
ret
leave
xchg
shlb
or
mov
and
mov
mov
lret
std
dec
push
dec
adc
jg
jo
mov
add
xor
mov
fistps
idivl
andl
xor
push
or
or
outsb
loop
jbe
sbb
inc
push
dec
outsl
nop
enter
push
xchg
lock
test
movsb
push
stc
fistpl
nop
cmpsb
sub
pop
mov
cmp
or
add
push
adc
jg
incl
pop
add
and
out
decl
mov
andl
push
inc
pusha
sbb
push
mov
rorl
xor
push
cmp
dec
addr16
mov
insl
fs
or
pop
fld
xor
in
imul
mov
mov
and
dec
push
fisttps
mov
sbb
in
call
lock
jnp
insl
or
xchg
push
iret
sbb
sub
movsb
mov
push
adcb
sbb
sbb
jb
nop
lea
lods
or
xor
push
mov
jmp
dec
loop
add
sub
add
fnstenv
push
xchg
dec
or
mov
add
push
push
push
clc
dec
and
sbb
push
xor
inc
js
or
pop
mov
adc
and
ss
call
cmc
into
mov
in
mov
movsb
movsb
sub
sbb
movsb
mov
cld
jno
stos
and
and
clc
pop
push
adc
or
loope
pop
fidivrs
movsb
notl
inc
dec
imul
add
pusha
pop
mov
push
sahf
push
insl
insb
dec
mov
cltd
or
jecxz
pop
pop
cmp
push
dec
push
jo
and
add
pop
mov
stos
repnz
cs
and
aam
adc
and
mov
setle
add
outsb
pop
adc
nop
adc
or
sbb
add
incl
incl
adc
les
dec
add
call
mov
mov
jmp
mov
mov
inc
inc
dec
or
jne
pop
inc
jp
push
add
sbbl
ja
xor
sahf
push
xor
rcll
sbb
aam
or
enter
mov
call
pop
aam
repnz
outsl
adc
add
add
lea
stc
fadds
sub
xchg
sbb
aaa
pop
jb
movb
dec
adc
iret
adc
mov
push
or
or
outsb
inc
arpl
ret
or
addb
mov
adc
mov
nop
lret
add
les
aaa
sbb
xor
add
shr
lods
lock
dec
aaa
push
dec
adc
aad
das
mov
jb
inc
dec
loop
xor
adc
push
add
out
or
xor
dec
inc
jp
mov
ret
outsb
dec
add
cmp
stc
add
bnd
inc
xchg
pop
nop
add
push
jl
rep
mov
roll
mov
out
or
push
sbb
test
xchg
rcl
movsb
xlat
mov
clc
mov
push
and
ljmp
or
xor
outsb
xchg
push
mov
pop
sub
pop
jbe
and
add
data16
orl
push
sbb
and
mov
fisubl
jmp
jl
cmpb
adc
inc
fs
pop
adc
sbb
add
sbb
in
add
repnz
and
insb
clc
mov
adc
rcrl
jnp
repnz
and
in
jbe
inc
inc
fs
add
push
xchg
js
jb
fdivrp
adc
test
and
addb
stc
addl
fwait
scas
pop
push
insb
outsb
loop
xchg
sbb
xsha1
cmpsb
mov
adc
pop
mov
cmp
into
outsl
shlb
les
mov
xchg
outsl
push
ja
pop
fsubl
or
adc
sbb
ljmp
add
in
fnstcw
popa
add
bound
add
mov
push
ja
scas
pop
dec
jne
adc
pop
sub
and
fwait
pusha
fld
js
inc
inc
and
sub
test
pop
mov
addr16
jbe
push
sbb
sbb
push
test
fs
sub
jb
sbb
pop
or
cmpsl
stos
or
rclb
add
cmp
jb
add
cmc
sbb
into
push
jnp
mov
dec
add
call
sar
xor
sub
and
and
jle
cmp
sub
push
and
leave
aaa
add
clc
out
add
in
test
cmp
dec
push
push
xor
es
pmaxsw
cli
push
add
hlt
loopne
push
lock
rorb
inc
arpl
lds
rolb
test
rolb
stc
push
add
xchg
mov
and
and
testl
push
into
adcb
shlb
jle
push
clc
lock
cmp
and
mov
mov
popf
fdivl
cmpsl
inc
or
xorl
das
lock
xor
pop
jo
xchg
loopne
loope
sub
pop
enter
aad
jae
dec
lds
stc
jo
in
icebp
adc
jmp
js
loop
ret
punpckhwd
add
push
aad
push
cwtl
lock
cmp
enter
or
dec
test
sahf
vminss
insb
dec
test
sbb
ds
sbb
and
sub
cmp
inc
pop
pop
or
in
sub
lea
loop
push
adc
xor
adc
cmp
pop
mov
push
outsb
or
push
and
setb
inc
je
add
sub
mov
aad
pop
jb
add
or
and
call
daa
sbb
push
outsl
mov
ret
out
adcb
and
sbb
adc
push
sbbl
jae
dec
jne
jo
data16
dec
outsl
dec
push
add
lcall
sub
xor
gs
ss
add
insb
inc
ja
push
add
push
push
push
inc
dec
incl
std
testb
dec
adc
imul
inc
cmp
xor
lcall
add
arpl
dec
push
inc
pop
dec
push
dec
inc
outsl
push
push
jg
cli
inc
push
push
push
popf
jo
push
insb
je
add
jns
insl
jb
mov
outsl
jbe
gs
outsb
cmp
imul
jb
call
incl
gs
imul
inc
cmp
push
add
jbe
std
imul
jo
add
outsl
inc
push
jo
dec
arpl
push
add
jg
jle
push
dec
push
push
test
imul
popa
insb
dec
inc
add
std
xor
and
inc
jns
add
js
js
sbb
ljmp
jbe
jbe
dec
inc
arpl
dec
inc
push
inc
pop
push
inc
inc
pop
push
push
inc
dec
pop
add
push
dec
outsb
sub
cmp
add
xor
push
insb
push
mov
dec
popa
outsb
fs
outsl
inc
push
inc
in
xor
xor
cmp
std
das
sbb
xor
js
js
aaa
xor
xor
mov
mov
inc
inc
push
dec
dec
add
inc
inc
push
call
dec
dec
push
add
dec
mov
dec
inc
push
data16
xor
xor
fstpt
lea
outsl
jb
gs
inc
jbe
lods
std
incl
push
xor
aaa
add
aaa
xor
jns
pop
jbe
dec
inc
pop
or
mov
mov
imul
js
popa
jne
gs
dec
popa
mov
aaa
inc
jno
pop
fidivrs
outsl
repz
cmp
jns
jle
incl
add
dec
inc
arpl
jbe
bound
push
outsl
insb
sbb
sbb
bound
jb
jge
outsl
push
push
je
dec
jno
xor
cmp
clc
push
fmuls
fnstenv
push
bound
push
mov
push
push
push
pop
inc
dec
push
push
test
jne
je
outsb
cld
mov
je
inc
push
xor
gs
inc
push
cmp
jbe
or
je
imul
pop
jne
push
les
jno
mov
fisttpl
pop
jo
imul
jae
addr16
inc
sbb
fmulp
push
jno
push
jb
fs
mov
pop
cmp
out
js
imul
neg
mov
push
jae
push
dec
insl
pop
outsl
inc
jae
dec
inc
popa
arpl
aaa
sbb
inc
dec
push
inc
inc
pusha
dec
clc
imul
inc
push
push
pop
dec
int
repz
popf
mov
addr16
push
jae
add
xor
gs
mov
add
jnp
sti
sbb
outsl
insl
test
push
jb
sti
incl
dec
inc
push
dec
push
dec
push
dec
dec
inc
inc
push
fs
in
push
push
add
mov
icebp
imul
arpl
test
jbe
push
clc
inc
mov
push
inc
inc
jnp
orps
pop
ja
adc
leavew
in
gs
cmp
push
lods
push
push
inc
xchg
jbe
std
dec
js
dec
outsb
outsb
cmp
push
xor
xor
xor
mov
idivb
dec
aaa
push
sub
push
pop
jne
xor
push
daa
mov
inc
loope
xor
shr
je
xor
jo
fldt
sub
js
push
pop
pop
fcomp
or
popa
je
outsb
jle
mov
insl
imul
ja
test
aaa
xchg
arpl
inc
addr16
sub
dec
dec
gs
xchg
dec
mov
jecxz
aaa
pushf
dec
dec
imul
xor
fldl
aaa
or
outsl
arpl
data16
insb
fwait
push
jns
pop
cmc
dec
sbb
pop
jo
push
jb
jb
xor
dec
inc
movsl
dec
jg
test
cmp
dec
fnstenv
jb
push
jno
je
bound
test
inc
ja
bound
inc
or
inc
pop
or
mov
je
jo
xor
test
imul
scas
arpl
imul
jb
outsl
mov
push
jne
in
dec
push
push
dec
scas
pop
jns
pop
dec
dec
fwait
outsl
es
lock
xor
dec
pop
pop
pop
push
lods
cmp
adc
dec
arpl
sub
stos
adc
dec
or
fiaddl
imul
add
jp
add
lock
ja
mov
outsb
dec
dec
push
dec
add
push
imul
insb
bound
pop
jb
pop
das
sub
push
cmp
pop
inc
dec
dec
mov
dec
mov
cmp
outsb
bound
insl
push
test
js,pn
inc
pop
jmp
addl
testb
dec
imul
xor
fs
push
js
outsb
push
insl
bound
sarb
aam
xor
or
int3
data16
xor
dec
dec
push
dec
dec
dec
inc
push
inc
cmp
insb
mov
outsb
xor
inc
pop
jae
pop
imul
jmp
pusha
cltd
lcall
jb
xor
fisubl
int
sbb
dec
and
sub
pop
push
jns
pop
xor
add
push
push
inc
out
dec
pop
dec
shrl
sbb
jbe
jae
insb
outsb
mov
jnp
aaa
pop
add
fsubl
inc
jno
mov
gs
inc
arpl
adc
push
xlat
dec
dec
xor
aaa
leave
xor
xor
fcmovnu
outsb
pusha
imul
ja
inc
repz
fildll
loopne
popa
ret
jbe
aad
dec
pop
push
push
dec
inc
jae
test
dec
inc
dec
xor
dec
or
in
dec
mov
scas
xor
outsl
addl
sub
sub
xchg
fcomps
push
pop
inc
pop
jge
imul
jno
push
jns
mov
sub
xor
mov
loopne
movsl
cmp
inc
xor
popa
sldt
shrl
fcmovnbe
add
rorb
pop
mov
jno
negb
js
js
fstpt
outsb
inc
bound
jecxz
inc
orl
adc
fidivl
icebp
popa
push
push
and
push
jne
adc
jb
js
fldt
dec
inc
outsl
dec
push
popa
addr16
gs
insl
insl
addr16
js
xor
imul
or
jbe
loopne
sbb
mov
mov
js
test
jne
outsb
pop
sub
pusha
dec
adc
cltd
outsb
dec
fs
andl
cmpsb
inc
adc
out
sub
xchg
lock
jbe
std
inc
push
ss
xor
push
fs
jae
push
xor
inc
sub
ret
mov
push
sbb
in
mov
push
inc
jo
push
inc
je
das
arpl
dec
mov
pop
xor
push
inc
add
cmp
push
sub
insb
inc
jl
addr16
bound
decb
dec
jno
xor
popa
push
push
jbe
sbb
imul
push
aaa
fsubl
mov
inc
push
jo
pop
add
xchg
pop
pop
call
js
jbe
inc
jmp
lods
jns
sbb
adc
lods
jecxz
add
call
jae
insl
shlb
test
cmp
iret
xlat
rcl
adc
paddq
mov
adc
test
ss
add
dec
ret
jg
push
divb
aad
inc
inc
dec
inc
dec
jp
jmp
imul
das
push
sub
aas
inc
push
mov
outsl
mov
clc
jns
push
push
test
and
push
push
or
ss
push
imul
ss
test
or
inc
je
dec
push
push
into
js
sub
xor
mulb
data16
jo
pop
push
jnp
aam
in
jb
adcl
mov
cld
mov
mov
xor
xor
push
insl
xor
aaa
mov
jne
inc
jns
jle
inc
dec
movsl
fildll
push
pop
dec
inc
dec
inc
jecxz
mov
fldt
push
arpl
enter
pop
adc
clc
js
jbe
dec
test
cs
jno
mov
push
data16
insb
pop
cmp
test
push
movsl
ficompl
push
pop
cmc
push
test
add
ja
das
es
sub
mov
inc
sbb
inc
imul
cli
in
mov
imul
dec
push
insb
inc
fsubrs
fcomps
dec
jno
addr16
mov
push
sub
inc
mov
mov
inc
mov
cwtl
push
pop
lcall
or
push
js
dec
push
pop
inc
les
or
jb
imul
add
push
push
imul
sub
jne
sahf
daa
jns
jbe
test
dec
stos
shll
out
addr16
mov
sub
xor
aam
push
pop
xchg
jo
dec
inc
mov
lock
dec
insb
push
push
test
adc
insl
insb
inc
and
push
inc
pop
pop
inc
push
aaa
mov
fidivs
dec
pop
shll
jne
xchg
sub
popa
inc
cmp
in
dec
pop
xchg
mov
jle
pop
lods
mov
dec
arpl
fists
xchg
aaa
push
pop
adc
dec
mov
scas
lods
dec
fiaddl
inc
outsb
in
inc
outsb
stos
cmc
add
pop
imul
push
inc
mov
shll
mov
inc
dec
cmpsb
pop
cmp
clc
jae
in
xchg
jmp
mov
mov
lds
nop
sbb
bound
pop
and
push
insl
pop
jo
lret
popa
pop
dec
pop
stos
rclb
dec
pusha
adc
pop
push
push
pusha
out
push
loopne
fadd
inc
add
addl
jae
and
adc
inc
push
inc
lds
fcmovbe
push
enter
jno
or
xchg
push
adc
dec
inc
stos
mov
inc
sub
lods
or
add
clc
shrl
lea
cs
add
ret
or
arpl
xor
je
jbe
mov
jns
aaa
in
or
pushf
xor
xor
add
xor
lods
or
dec
lea
push
inc
or
push
mov
outsl
aam
pop
gs
cmc
jp
push
push
sbb
push
push
push
inc
imulb
bound
xchg
xor
sub
shrl
push
fistpl
push
icebp
push
pop
adcl
adc
push
pop
push
test
cwtl
jne
xor
inc
push
outsb
dec
gs
xor
inc
cmp
outsl
test
dec
and
push
inc
push
jbe
mov
gs
xchg
pushl
outsl
xor
mov
jo
ds
push
cmp
shrl
imul
enter
push
daa
pop
lods
movsl
push
fildl
mov
inc
mov
mov
inc
sti
jno
inc
inc
dec
add
aad
insl
imul
jle
dec
mov
push
jb
xchg
stc
jo
insb
or
xchg
sub
ds
pop
addr16
out
test
aaa
rcll
cld
imul
outsb
xor
adc
insb
add
sbb
aaa
imul
push
mov
hlt
inc
orl
bound
pop
push
ja
movsl
dec
insl
mov
jb
xchg
fbstp
or
arpl
int3
adc
cmp
adc
and
fcompl
mov
mov
pop
add
bound
sub
xchg
pop
lret
push
sub
shl
stos
addl
popf
push
add
xchg
mov
movsl
loop
notl
sbb
clc
and
jne
push
xor
fiaddl
rcll
xchg
mov
inc
push
mov
addl
ljmp
dec
stos
inc
imul
insl
sub
xchg
mov
and
inc
adc
cs
mov
popa
cli
in
inc
inc
xchg
out
push
inc
insb
pop
mov
jbe
push
mov
dec
jmp
dec
std
or
dec
fs
mov
sbb
cltd
pop
das
sub
sbb
pop
dec
dec
je
dec
insl
jp
xor
fisttpl
dec
shrb
pop
inc
mov
jle
or
rolb
mov
push
jb
insl
cli
loopne
arpl
inc
push
js
aam
jmp
out
adcb
push
sub
add
outsl
aad
inc
mov
cld
and
xchg
arpl
xchg
cmp
popa
pop
stos
mov
add
outsb
dec
xchg
push
push
inc
mov
sbb
cmp
sub
lret
push
mov
mov
repnz
ret
movq
add
xchg
pop
mov
imul
jmp
dec
insl
add
ret
pop
fdivl
and
jae
adc
push
or
dec
dec
push
mov
push
pop
mov
pop
inc
pop
jo
inc
dec
push
mov
decl
xchg
decl
aas
ja
sar
in
ret
and
mov
aad
imul
inc
xor
lods
add
addl
out
jmp
iret
add
sti
mov
jne
sub
lods
leave
xor
cs
mov
mov
leave
mov
ljmp
cltd
in
sub
pusha
mov
mov
lret
adc
jmp
je
pop
xchg
mov
pop
inc
lods
push
sbb
dec
push
jmp
sbb
test
cwtl
jmp
pop
push
aam
cmp
mov
adc
in
call
inc
xor
imul
filds
sub
into
loopne
shll
inc
jg
aaa
shrl
xor
push
hlt
pop
clc
out
in
mov
push
mov
jge
imul
adc
adc
ret
icebp
jecxz
fisttpl
ljmp
sub
push
int
or
lock
addr16
mov
nop
push
lret
push
hlt
out
roll
aam
inc
lods
jecxz
adc
std
fisttpl
call
decl
pushl
movsb
ss
out
imul
cmpsl
pop
mov
mov
mov
ret
inc
imulb
fwait
cs
cmc
cli
out
in
stos
aam
mov
mov
addr16
ljmp
int3
pop
into
pop
les
sti
int3
or
in
dec
call
xchg
dec
xchg
decl
push
int
xor
imul
aam
loope
jp
and
jmp
mov
arpl
push
dec
xor
insl
repz
jo
xor
xchg
jb
inc
in
jg
in
push
inc
mov
mov
outsl
rcl
rolb
add
jg
out
inc
cmp
mov
cmc
in
mov
mov
lcall
fs
dec
into
jl
sub
or
in
push
loope
xchg
enter
repnz
sub
cmc
mov
pop
mov
push
mov
adc
push
imul
adc
pushf
add
cmc
jbe
fmull
ljmp
push
scas
or
lcall
rol
mov
mov
jbe
lock
xchg
in
sub
jbe
or
ljmp
mov
aad
mov
sbb
pop
jns
pushl
and
test
movsb
imul
mov
bound
es
mov
jge
dec
test
mov
pop
decl
and
sbb
mov
inc
jmp
mov
xchg
push
jmp
and
notb
repz
mov
mov
adc
fnstsw
pop
hlt
push
xchg
pop
cli
out
inc
pusha
ret
leave
test
loopne
decb
test
outsl
push
cwtl
pop
hlt
and
push
adc
push
add
imul
mov
mov
sbb
out
cltd
cmp
mov
in
fmul
cmp
pushl
int3
in
fs
push
sbb
nop
xlat
or
clts
cld
lahf
mov
shll
xorl
mov
adc
out
aad
mov
sbb
pop
loopne
and
and
xorb
xchg
xchg
mov
jo
mov
pop
int3
pop
xchg
mov
repnz
das
cld
add
jecxz
outsb
enter
mov
lret
call
cmp
xor
pop
or
or
stos
lds
mov
cmp
jg
pushl
sub
test
mov
loopne
jecxz
inc
jecxz
ds
incl
sti
jl
mov
dec
lret
and
jne
mov
sbb
sub
adc
or
jmp
inc
loop
rcrl
dec
les
add
pop
jbe
sbb
stos
pop
add
xor
sub
std
xchg
clc
js
sub
test
fcompl
enter
sahf
dec
or
sbbb
ljmp
or
xchg
mov
pop
xchg
pop
push
dec
ret
aam
incl
insb
fcoms
cwtl
mov
cltd
sti
mov
jbe
repnz
dec
xor
adc
add
jl
xor
cmc
cmp
jge
in
ja
and
and
dec
adc
repnz
data16
push
test
mov
cltd
js
mov
pop
enter
sbb
xchg
das
push
clc
jmp
fnop
aad
or
loope
pop
outsl
pop
movsl
ret
loop
cmp
adc
mov
dec
fsubl
sarl
test
xor
adc
pushl
mov
mov
mov
mov
lock
mov
repz
adc
cld
jg
jg
scas
movsb
lcall
push
add
mov
or
fdivrs
fwait
or
push
jbe
call
push
push
adc
decl
ret
fwait
adc
dec
push
dec
inc
outsl
cmc
lahf
pop
or
out
in
mov
mov
add
dec
jno
pop
lea
sbb
in
in
aam
test
repnz
jnp
insb
mov
hlt
inc
cmp
adc
scas
pusha
bswap
lea
jl
iret
cmp
pop
lods
add
incl
cmp
or
not
cmp
cwtl
mov
jge
add
and
sbb
cli
call
pusha
mov
insl
lods
cli
sbb
pushf
cmp
pop
call
add
xor
stc
test
bnd
mov
jae
jl
lcall
ficoms
or
add
xchg
cmp
xchg
adc
out
push
xlat
lahf
das
dec
fisubs
decl
or
inc
cmp
mov
pop
xchg
add
imul
jae
sbb
jg
cmc
cmp
mov
scas
stos
mov
mov
xchg
inc
mov
call
loopne
cmp
and
loope
stos
je
xorl
mov
push
xchg
adc
addl
int3
xor
fwait
jae
jne
inc
push
cmp
adc
dec
mov
loope
or
mov
mov
mov
adc
jecxz
fdivr
jg
incl
lods
mov
mov
or
add
lret
or
incl
mov
mov
test
mov
dec
jg
inc
sbb
lea
sti
jmp
xor
mov
xchg
test
xchg
cmp
xchg
and
cwtl
out
call
pop
push
xchg
inc
inc
leave
scas
cmp
mov
push
out
cmp
out
xorl
notb
fidivrl
adc
jmp
push
add
push
push
sub
adc
jg
pop
out
pmuludq
push
dec
pop
outsl
bound
std
incl
dec
inc
aaa
jg
sbb
dec
faddp
mov
inc
imul
pop
call
cld
sbb
imul
inc
out
dec
mov
mov
sbb
test
xor
aaa
in
or
sub
xlat
bswap
pop
xchg
push
js
call
pop
jp
incl
xor
je
fists
iret
fst
enter
and
jnp
mov
cmp
lcall
jp
fidivrs
mov
mov
cmp
aaa
mov
or
jns
adc
mov
inc
dec
or
out
test
jns
inc
push
mov
fcmovnbe
jecxz
int3
lods
ljmp
pop
dec
pop
add
jne
jmp
mov
les
aad
fisubrs
or
adc
adc
add
out
cmp
sbb
mov
lods
aas
mov
sbb
push
lahf
in
pop
mov
jmp
jle
mov
outsl
icebp
pushl
sub
div
jmp
mov
pop
xchg
xchg
mov
mov
scas
popf
dec
sti
cli
icebp
cmp
add
int
mov
mov
jbe
decl
repz
or
jns
xlat
adc
outsl
imul
or
mov
das
lcall
cld
jb
push
mov
jbe
dec
pop
sti
ljmp
pop
loop
cmp
cwtl
adc
xchg
push
loopne
mov
repnz
call
fistpll
sub
pusha
rorb
lea
jne
pop
mov
pushl
jne
rep
shl
jnp
xor
xorl
xchg
ds
divb
popf
cmp
and
push
mov
outsl
imul
decl
daa
jp
lcall
sub
cmp
xor
mov
dec
lea
clc
push
lods
loopne
mov
or
cld
insb
enter
or
subb
or
lcall
int
aaa
mov
cld
push
div
ljmp
decb
std
and
scas
inc
aas
sbb
dec
rcrb
icebp
sbb
pop
cwtl
decl
sbb
arpl
or
cmp
and
call
mov
xor
pop
stos
aad
aad
adcl
and
mov
outsl
lock
mov
mov
add
clc
jl
inc
dec
das
dec
inc
cmp
push
shrb
fucomip
mov
pop
mov
and
mov
pop
xchg
mov
daa
mov
fildl
lods
mov
jg
add
popa
call
fistpll
push
xchg
push
rcrl
inc
cmpsb
test
mov
in
push
ljmp
sub
or
push
imul
jge
mov
jle
fisttps
jg
scas
cmp
in
jnp
jg
and
mov
stc
push
gs
movsl
das
loopne
repnz
jp
cli
decl
mov
sub
popf
dec
pop
clc
sub
fs
inc
repnz
pop
stos
js
insl
les
cmpl
pushf
mov
loop
or
mov
xor
call
add
jg
or
jmp
repnz
addr16
popa
push
mov
jae
cmp
fiaddl
outsl
lock
xchg
push
hlt
push
stos
xchg
pop
mov
lcall
push
cld
mov
add
dec
lcall
mov
push
shufps
dec
inc
and
or
pop
std
adc
jb
ljmp
popf
or
imul
fisttps
add
dec
fxch
ret
cmpsl
pushf
xchg
mov
mov
jecxz
sub
jmp
pop
cltd
push
cs
fisttpll
sahf
stos
jb
jg
or
insb
xchg
and
cltd
dec
dec
mov
adc
fsubl
lret
mov
mov
lea
pushf
push
lock
aad
arpl
repz
decl
decb
mov
add
cld
repz
es
pop
fnstsw
icebp
pop
addb
addr16
sbb
sbb
fcomp
dec
adc
rep
jnp
jbe
cmp
call
mov
push
push
or
push
int
sub
lret
outsl
test
pop
jg
ret
and
je
sbb
xlat
loopne
enter
cmpsl
sbb
jl
pushl
cli
ljmp
mov
inc
cmp
stos
jmp
inc
clc
push
fwait
adc
in
cmc
bound
repnz
jno
inc
lahf
inc
inc
ss
cmp
jle
stc
shl
mov
mov
cld
decl
fisubl
loop
int
inc
mov
push
dec
jge
jmp
sahf
jp
lcall
movsl
fisttpl
mov
fbld
xor
fs
movsl
incl
fisubrs
xchg
test
mov
or
movsl
mov
xchg
mov
pop
sti
popf
ja
pop
insl
xchg
data16
inc
pop
jl
push
sub
and
sbb
fcomps
popf
pop
imul
aad
cli
mov
or
cmpsl
stc
pop
cld
jg
dec
imul
jge
jg
arpl
and
icebp
sub
cld
outsl
jo
nop
xchg
icebp
out
mov
movsl
pop
adc
mov
cli
mov
sbb
sub
icebp
ret
cld
das
push
int3
push
cmp
mov
or
or
push
arpl
or
outsl
in
dec
pop
jecxz
fdivr
dec
sahf
mov
mov
fisubrs
sub
xor
mov
inc
xchg
setnp
popf
bound
or
mov
lock
enter
push
ja
out
mov
aaa
daa
mov
orb
std
or
fimuls
shrl
jle
out
pop
pop
dec
scas
inc
mov
incl
clc
aas
iret
dec
ror
mov
js
jne
in
fisttpl
mov
inc
jnp
add
add
cli
inc
and
push
aam
inc
sub
fcmovu
xchg
mov
into
scas
cmpsb
cmpsl
sahf
xchg
pop
or
jge
daa
outsl
sti
dec
cld
sar
xchg
mov
popa
roll
pop
mov
out
sar
xor
idiv
out
out
pop
adc
adcb
cmpsl
push
pop
std
pop
shrb
cltd
xchg
mov
mov
push
adc
inc
mov
test
mov
subb
jns
mulb
je
stos
xor
lock
mov
out
sahf
popf
xchg
fucomi
sub
fildll
xchg
sub
jecxz
jbe
sarl
movsl
dec
lcall
add
xor
jl
js
xchg
lcall
hlt
adc
popf
mov
mov
mov
adc
lock
mov
or
mov
or
sbb
cmp
jns
imul
js
call
fistpll
addl
sub
in
paddd
testl
sub
shlb
pop
pop
push
mov
popf
mov
and
fidivrs
mov
pop
imul
inc
ljmp
inc
push
add
pop
inc
pop
dec
push
dec
add
mov
test
js
push
outsl
add
insl
inc
pop
adc
ss
mov
outsl
push
jne
imul
je
pushw
mov
xor
xor
xchg
ss
add
inc
inc
js
outsb
dec
ja
jmp
xor
dec
push
push
add
mov
imul
bound
insl
push
sarb
arpl
js
add
insb
bound
jo
jbe
lods
outsb
aad
in
dec
inc
dec
push
and
mov
fldt
sub
jne
push
jo
fbld
outsb
jb
push
jae
mov
das
mov
je
dec
inc
push
dec
dec
outsl
xchg
mov
inc
fs
mov
gs
xchg
in
bound
outsl
dec
push
js
cmp
jo
push
dec
imul
mov
jns
addr16
xor
cld
adc
inc
or
push
fldl
push
imul
push
inc
insb
insb
outsl
nop
loop
lcall
mov
dec
inc
inc
insb
jns
dec
dec
jo
mov
cld
mov
imul
addr16
incl
mov
and
dec
jne
outsb
push
sub
insb
imul
xor
push
mov
clc
add
xor
xor
popa
jbe
push
test
decl
hlt
xor
push
and
jo
inc
add
push
push
inc
fisttps
mov
rclb
push
push
cmp
cwtl
inc
arpl
js
add
popa
dec
insl
and
jno
add
jne
addr16
imul
dec
xor
dec
dec
push
movl
jle
add
bound
bound
mov
pop
inc
dec
adc
ss
xor
lahf
fists
call
ss
into
inc
js
dec
push
inc
insb
sarb
dec
sub
push
jbe
ja
addl
or
or
inc
push
push
bound
addr16
stos
xor
test
call
jb
or
mov
outsl
incl
ja
insl
insb
imul
js
jmp
mov
add
jne
lret
shlb
hlt
xchg
in
push
add
data16
outsb
imul
push
fidivrl
pop
dec
bound
and
jae
in
in
mulb
add
je
pop
popa
add
roll
outsb
jno
pop
fs
xchg
push
insl
loope
addr16
mov
popa
sbb
shrl
jecxz
dec
jno
xor
jbe
outsl
dec
xchg
dec
imul
imul
sbb
jno
pop
sub
outsb
inc
dec
je
dec
inc
mov
fs
movsl
bound
or
inc
pop
aam
mov
int3
jmp
mov
sbb
dec
dec
dec
insl
push
or
mov
arpl
xor
imul
adc
jae
cli
xor
lods
iret
jmp
dec
arpl
push
or
je
push
jbe
push
push
push
push
outsl
pop
clc
sbb
dec
dec
inc
popf
jo
inc
imul
mov
fidivs
js
mov
jae
inc
push
adc
outsl
pop
jb
dec
inc
jbe
xor
fs
mov
je
insl
int
bound
mov
mov
inc
jbe
inc
dec
jp
std
jae
cli
jne
inc
push
jns
jns
addr16
mov
push
bound
shl
and
inc
dec
leave
push
dec
push
push
xorb
bound
push
inc
inc
push
or
fcmovu
pop
dec
imul
dec
lretw
push
bound
dec
imul
add
jecxz
push
cmp
mov
mov
pusha
imul
pop
cli
and
push
jb
pop
jmp
inc
sbb
inc
jo
imul
push
outsl
mov
xchg
outsl
bound
pop
jae
fs
cs
lea
mov
push
popa
clc
insl
jne
test
push
scas
add
aas
outsl
decl
aaa
inc
push
push
dec
dec
pop
mov
sbb
push
mov
jae
push
pop
mov
push
push
int
ja
mov
jp
popa
ret
inc
les
std
mov
add
sar
decl
sbb
xorl
and
push
sub
fs
jecxz,pt
mov
pop
xor
mov
in
fstl
add
or
insb
or
bound
add
test
lods
rolb
xlat
or
add
int3
negb
cmp
add
push
xor
add
lock
fldt
or
xlat
sub
jbe
lods
inc
xchg
or
push
shll
negl
mov
push
sti
outsl
jg
add
cmp
xchg
add
popl
add
data16
adc
add
dec
roll
pop
mov
jge
call
iret
sub
lods
pop
add
mov
mov
pop
cli
lcall
or
mov
jge
sub
outsb
and
add
add
mov
mov
jle
mov
movb
into
add
add
add
xchg
jne
lods
adc
nop
incl
jg
jle
inc
jnp
or
je
lods
movsl
popa
sub
incl
outsl
in
cmp
cltd
adc
or
push
popa
mov
nop
or
sbb
ljmp
rcll
or
loop
mov
scas
lea
add
mov
jge
ljmp
ret
and
adc
pushl
sbb
mov
sub
sub
add
pop
pop
sahf
push
sti
out
pop
ja
adc
add
mov
mov
add
cmpb
sbb
sbb
inc
push
adc
xchg
mov
hlt
aas
push
sbb
jp
jne
outsb
mov
push
clc
sub
mov
pop
enter
inc
out
mov
add
mov
cltd
jle
add
sbb
add
pop
mov
out
cmp
pop
and
xor
outsb
cld
inc
das
outsb
scas
push
scas
mov
and
xchg
mov
sub
subb
je
xchg
cmp
pop
popf
cmpsb
out
in
movsb
adc
rcrl
pop
cwtl
and
lds
pop
jg
pop
cli
xchg
bound
jge
push
add
mulb
fiaddl
or
lea
inc
mov
pop
aad
jge
fdivrs
icebp
jbe
insl
cs
push
movsl
add
xor
lods
mov
mov
or
add
outsl
adc
mov
add
sbb
jmp
add
stos
aad
mov
dec
pop
inc
mov
sub
mov
mov
mov
adc
in
mov
movsl
push
or
icebp
add
clc
lock
popa
pop
sub
hlt
cmpps
add
push
xchg
push
mov
std
outsl
dec
and
in
insl
aaa
pop
pop
jecxz
push
push
mov
imull
test
push
push
repz
dec
mov
mov
mov
scas
lock
xor
pop
pushf
shlb
rcrl
call
add
pop
fimuls
es
fcompl
mov
add
lcall
pop
or
adcl
jg
sbb
inc
mov
xlat
cld
mov
stc
inc
push
xchg
add
aas
out
int3
push
or
dec
pop
ret
fnsave
cltd
pop
lock
lods
std
add
xchg
inc
roll
jp
mov
ljmp
xor
sub
lret
add
push
fisttps
in
jg
xchg
in
lret
xchg
lds
and
pop
dec
pop
inc
pop
cmp
shlb
mov
test
mov
in
testb
rcll
mov
clc
add
or
scas
push
ja
clc
dec
cmc
aad
dec
sub
iret
xchg
xor
and
je
out
cmp
stos
scas
sub
fstpt
sub
in
ljmp
inc
xorl
sub
test
fsubl
cmp
cwtl
outsb
xchg
jg
xchg
lcall
mul
dec
mov
ds
pop
pop
sub
mov
movsb
or
lock
pop
imull
and
aad
xchg
adc
fldl
int
mov
insb
repz
mov
lods
xchg
cmp
pop
mov
sahf
mov
repnz
insb
xor
movsb
inc
lods
lret
jbe
dec
ss
cmp
sub
mov
sub
mov
push
fnstenv
pop
mov
mov
adc
push
fsubrs
fsubrl
into
and
or
daa
jg
jae
icebp
push
repnz
or
repz
lret
add
mov
ja
add
sbb
in
push
add
pop
and
clc
or
repnz
mov
xchg
mov
mov
mov
lds
dec
adc
sub
pop
or
and
jecxz
loopne
inc
loope
shlb
mov
pop
fidivl
lahf
or
push
adc
in
jae
cli
mov
in
dec
xchg
dec
jecxz
mov
pop
mov
call
andb
adc
cmp
or
in
mov
das
sub
data16
in
icebp
divb
fs
push
dec
jmp
rolb
lea
clc
xchg
jb
imul
mov
outsb
mov
sbbl
mov
aad
outsl
xchg
andb
daa
or
icebp
mov
dec
daa
pushf
faddl
out
jmp
adc
aad
fs
lret
and
shr
mov
loopne
fdivrl
xchg
jmp
xor
pop
fwait
sbb
xlat
loope
loope
jne
dec
je
adc
lock
fstl
pop
lar
mov
sbb
cmc
add
int3
and
add
mulb
loope
adc
sub
sbb
jmp
scas
dec
mov
out
xor
daa
stos
add
ja
mov
dec
jo
and
andl
adc
xchg
outsb
aam
mov
imul
in
in
cmp
push
add
insl
fnsave
or
insb
arpl
clc
shlb
mov
mov
mov
add
popf
sub
int
outsl
mov
jno
lds
xor
xchg
outsb
dec
aad
or
and
mov
cld
inc
leave
out
xor
call
mov
xchg
andl
cmp
lds
xor
lahf
push
sarb
popf
outsl
faddl
mov
outsb
jge
fcoms
mov
mov
in
push
push
in
in
aam
fwait
gs
adc
mov
push
ficoml
scas
stos
repz
cmp
jne
pop
fdivs
das
cmp
movsb
push
in
pop
ss
daa
xor
mov
mov
pop
enter
fcmovnu
lcall
and
rolb
jecxz
jno
aad
ds
daa
inc
jl
push
push
add
lock
adc
add
adc
lcall
jp
hlt
cmp
addr16
mov
and
scas
mov
jmp
dec
sbb
pop
imul
push
pop
jmp
push
lods
mov
mov
enter
sub
mov
cld
icebp
dec
loop
sub
divb
fcmovnbe
mov
jns
pop
daa
sub
outsb
jmp
dec
sub
or
fidivrs
jb
insl
addl
movsl
cmp
rolb
sti
mov
cwtl
outsb
mov
inc
push
xor
sahf
out
in
add
sub
xor
add
clc
cmp
popa
loope
mov
in
sbb
jns
xor
dec
in
fwait
gs
ss
xor
adc
lcall
movntq
out
jle
cmp
xlat
mov
jmp
dec
insb
jb
test
xor
or
addr16
ret
loope
leave
ror
in
addr16
testl
sti
fcoms
int
movsb
aam
shl
or
and
mov
lock
js
daa
sbbl
cmp
mov
xchg
inc
dec
ret
mov
in
cmp
in
icebp
inc
pop
adc
xchg
xlat
xchg
add
inc
test
add
outsl
out
arpl
arpl
xchg
xor
test
mov
jmp
xor
sub
bound
lret
sub
addr16
and
cli
cmp
call
and
mov
cwtl
out
lock
mov
inc
ds
or
sbb
bnd
call
divl
pusha
add
mov
test
fwait
pop
mov
insl
dec
inc
add
test
inc
mov
ret
outsl
mov
xchg
pushf
push
push
shl
fldcw
mov
mov
sbb
fisttps
cwtl
sub
push
xor
loope
lret
xor
and
push
dec
cld
test
ja
out
xchg
jns
mov
pop
call
lods
cmc
push
add
in
adc
jnp
add
fwait
push
fsub
insl
arpl
in
andb
adc
lar
rorb
push
mov
ds
jl
jb
stos
push
clc
fwait
jo
inc
arpl
stos
hlt
popf
xlat
cwtl
nop
inc
imull
mov
adc
push
push
xchg
pop
call
or
jl
sub
jl
jmp
fsubs
cmp
cld
aam
je
jne
lock
pop
cltd
insl
jmp
jle
out
int3
scas
inc
or
cld
shrb
xchg
add
test
mov
daa
cpuid
cmp
movl
fisubrs
das
mov
js
data16
or
push
adc
mov
daa
lcall
mov
data16
pop
mov
mov
int3
popf
add
mov
add
adc
mov
mov
icebp
test
adc
clc
mov
pusha
pusha
mov
test
add
jge
jns
sub
popw
iret
xor
add
jle
cs
imulb
push
mov
loope
std
mov
cmpsb
mov
out
xchg
imul
mov
mov
clc
xchg
mov
sub
cmpsl
ficoms
cwtl
nop
test
fs
sahf
cmp
ss
add
or
pusha
sbb
or
fucomi
pop
jb
dec
stc
mov
stos
iret
add
jg
jb
es
and
mov
incl
rorb
fcomps
pop
pushf
sbb
and
out
scas
adc
cmp
std
mov
je
dec
loopne
je
clc
movsl
mov
loop
data16
pop
sarb
sbb
mov
dec
pop
aaa
adc
pand
cmp
out
cmc
or
add
push
lds
jl
sub
jo
mov
or
sub
addr16
and
mov
dec
lahf
cmp
fdivp
sub
fcmovbe
add
je
jle
icebp
shl
jp
xor
add
sub
push
in
sub
sbb
push
xlat
mov
fcmovu
cmc
insl
or
and
push
cli
mov
lret
cmp
and
jg
pop
dec
dec
mov
lahf
xlat
mov
adc
xchg
inc
cmp
pop
scas
cs
movsb
dec
and
clc
test
fsub
push
xor
mov
aam
rolb
dec
ss
fchs
nop
repnz
inc
xchg
and
jecxz
sti
pop
or
test
push
push
or
xor
mov
std
icebp
adc
dec
popf
and
pop
insb
mov
xchg
jle
mov
sbb
add
out
xchg
add
outsl
pop
outsb
hlt
xorb
nop
inc
repnz
das
fidivs
pop
pushf
in
jl
lret
mov
jg
xlat
jp
aas
repz
add
xchg
imul
out
mov
inc
pop
fs
push
icebp
pop
mov
or
xchg
cmc
cmp
jge
pop
in
mov
cld
in
cmp
push
mov
fistpll
cmp
lahf
push
mov
xchg
pop
inc
jmp
and
cmc
or
jns
addr16
in
js
xor
fwait
out
xlat
xor
mov
sbb
into
hlt
pop
mov
cmp
lds
mov
repnz
add
testl
cmp
test
outsb
xchg
cld
rclb
sahf
ret
das
push
pop
cs
cmc
dec
out
ficoms
incb
pop
pop
xchg
dec
mov
loope
test
pop
sub
xchg
test
or
cltd
arpl
popa
cli
mov
inc
xor
clc
mov
loopne
ljmp
jnp
cwtl
inc
sbbb
jmp
inc
jl
pop
imul
push
sbb
cld
xor
mov
adc
fildl
inc
mov
inc
pop
addr16
pop
mov
out
pop
cli
rcll
jle
sub
aam
xchg
das
fs
and
jg
pop
jo
xor
xor
cmp
push
inc
push
add
jp
shrl
xchg
push
movzwl
test
aad
aad
or
test
jg
mov
jb
pop
shl
clc
xchg
add
mov
test
insl
or
ljmp
sub
jmp
mov
ret
pop
dec
sbb
cmp
movsb
int3
add
test
aaa
fnstsw
sahf
fld1
mov
inc
adc
and
fdivrs
lret
ds
jo
xchg
rsqrtps
clc
mov
mov
imul
or
cld
cld
aam
jbe
popa
imul
jp
hlt
lret
sub
cmpsb
add
rsqrtps
inc
sti
inc
xor
cmp
push
mov
mov
gs
or
rclb
push
shll
mov
inc
lahf
sub
or
repnz
or
adc
ds
or
fld
iret
dec
std
les
mov
cmp
xchg
push
sbb
jmp
mov
dec
pop
insb
push
in
sbb
mov
push
mov
iret
in
test
sbb
aam
iret
push
bound
decb
sti
fst
and
adc
adc
add
insb
mov
mov
add
push
mov
testb
xchg
sub
icebp
mov
pushl
outsl
inc
inc
lcall
in
les
mov
xor
xlat
xor
pop
xor
int3
sub
xor
call
adc
inc
loopne
insb
lret
and
sub
sbb
or
push
dec
mov
pop
mov
mov
std
bound
addr16
hlt
inc
add
mov
mov
in
mov
ljmp
mov
adc
stc
mov
cmpsb
dec
cmp
das
cmp
inc
push
push
or
lock
pop
mov
jno
add
and
sub
shlb
xchg
jg
leave
cmp
outsl
test
lock
mov
cmp
adc
faddl
sti
push
shl
push
sub
pop
pop
call
dec
ja
repz
pop
mov
ret
imul
rclb
cmp
cmp
cli
lea
and
adc
out
push
adc
cmpb
outsl
jo
aad
loopw
decl
scas
adc
dec
sbb
mov
jo
adc
push
cltd
jnp
xor
jno
push
mov
test
inc
shrl
push
test
in
dec
test
sbb
sub
lock
and
pop
in
andl
mov
push
out
divl
jmp
jge
fsubrs
cmc
cmpsl
scas
dec
test
inc
jns
sbb
mov
push
push
push
mov
and
xor
mov
movsl
ret
lret
push
shrb
lret
fstps
push
and
jmp
dec
movsl
add
jge
xchg
mov
mov
adcb
cld
data16
dec
enter
in
fsubs
mov
and
cs
je
repnz
pusha
and
mov
js
push
punpckldq
add
inc
gs
orl
sub
les
and
mov
cmp
fidivrs
test
push
sbb
jl,pn
fidivs
mov
popa
popa
jmp
shrl
mov
pusha
lcall
sbb
inc
sbb
cmpsb
mov
inc
add
pop
xchg
std
lods
fimull
inc
es
cld
xchg
jle
xlat
cwtl
or
imul
jl
loopne
cmp
mov
aam
fsubrl
mov
mov
mov
add
jbe
data16
fnsave
lret
xchg
xlat
cli
rol
pop
or
lods
jmp
popf
xchg
popa
or
mov
clc
dec
add
pushf
mov
cltd
jae
test
cld
ret
push
and
mov
sub
sbb
mov
mov
sbbl
and
test
pop
push
movsb
fld
xor
push
outsb
sbb
out
pop
push
pop
scas
xor
subl
mov
add
dec
dec
scas
arpl
stc
rcrl
mov
sbb
mov
push
enter
mov
lret
inc
push
jp
fstps
push
xor
in
sub
xchg
dec
iret
fwait
loop
scas
in
pop
fmull
add
ficompl
xchg
jb
mov
mov
adc
ret
mov
jle
jecxz
test
nop
out
jl
sbb
aaa
pop
adc
sub
push
outsb
inc
mov
stos
arpl
lret
mov
clc
enter
or
test
rolb
ficomps
xor
sahf
jnp
in
adc
cmpsl
int
movsl
jle
lea
mov
movsl
inc
adc
test
aas
insl
daa
subb
cwtl
and
fdivr
in
mov
pop
and
sub
movsb
adc
or
fdivs
dec
lds
outsl
or
idivl
inc
shrb
stc
in
ljmp
or
sti
in
hlt
in
das
and
outsb
push
xchg
xor
push
sbb
push
and
mov
pop
adc
fwait
jmp
fdivrs
sbb
popf
inc
fnstcw
and
pop
xchg
insl
rcr
push
into
nop
add
out
jno
test
test
lock
jecxz
std
imul
sbb
pop
jbe
stos
jge
incl
mov
push
sub
and
outsl
push
push
pop
lret
cwtl
xchg
shl
shll
pop
sahf
xchg
out
xor
ret
fs
shlb
inc
in
shrb
adc
adc
dec
add
js
sbb
ret
push
popa
jmp
xchg
add
pop
sbb
push
sbb
xlat
ja
out
mov
dec
add
mov
test
pop
and
jae
adc
or
in
mov
les
push
sarb
xor
int3
pop
arpl
mov
add
testl
fs
insl
jle
push
dec
mov
cmc
dec
shrb
mov
lret
sub
add
arpl
or
sbb
les
inc
in
daa
and
fdivrp
mov
test
pop
xchg
sahf
lods
or
pop
loope
mov
and
inc
add
sub
pusha
hlt
icebp
add
shlb
rolb
xor
mov
inc
call
cltd
or
pusha
cmc
push
fistps
xor
aaa
lds
das
inc
cmpl
pop
pop
cld
stos
ret
mov
push
ret
das
popa
xchg
and
push
xor
add
mov
out
into
ret
dec
aaa
insb
in
sub
dec
dec
inc
jo
ret
cmp
fdivl
or
int3
xor
lock
ret
add
push
mov
cmpsb
clc
aas
hlt
nop
sbb
orl
mov
lods
stos
ret
sbb
jecxz
mov
fimull
dec
sub
push
sbb
dec
pop
pop
push
sub
jg
rol
inc
ret
xchg
add
leave
sbb
and
lods
sbb
sbb
rorl
jae
and
xchg
je
dec
test
fucomip
hlt
adc
fadd
movsl
icebp
inc
and
mov
mov
mov
lods
data16
scas
addb
xor
and
mov
aam
loopne
sub
aad
rcrb
and
jg
push
push
fcmovbe
nop
daa
shr
cld
adc
cmp
or
popa
scas
inc
addb
movsl
insl
pushl
pop
or
inc
and
mov
lods
sub
or
jns,pn
dec
outsl
cwtl
push
es
pop
adc
insl
mov
mov
rol
inc
arpl
mov
popa
push
ss
jns
pop
cs
sbb
mov
hlt
fucomi
dec
pop
rcll
jnp
push
add
add
scas
scas
lret
testb
gs
push
adc
xchg
aaa
loop
inc
ret
dec
and
lcall
incb
push
mov
leave
inc
pop
jno
in
push
das
inc
movsb
push
push
shrl
jno
jnp
mov
repz
jo
filds
fidivrs
mov
sbb
ret
mov
pop
shll
in
mov
lcall
lret
mov
fldl2e
or
mov
sbb
xor
enterw
leave
popa
test
ljmp
sub
xchg
dec
movsb
jno
xchg
mov
fnstsw
rol
push
mov
jno
jne
adc
aaa
andb
xor
rolb
in
mov
fsub
inc
or
lods
clc
jbe
sub
out
cwtl
adc
jle
sti
fsubrs
lds
js
add
dec
mov
push
pop
lcall
lods
mov
sub
popa
jne
les
lods
dec
push
add
jecxz
sbb
rcr
mov
push
nop
jl
cwtl
jg
movsb
mov
push
filds
dec
lret
aaa
sbb
sti
cld
testl
push
sbb
nop
out
shrb
push
mov
jbe
icebp
and
pop
cltd
pop
xor
push
divps
inc
jecxz
sbb
jle
dec
scas
leave
and
pushf
test
xchg
lcall
decb
dec
movsl
mov
mov
lods
add
bound
adc
shrb
dec
mov
jb
push
push
mov
popf
jge
adc
lods
jecxz
adc
jns
push
lea
mov
and
mov
inc
sti
jmp
or
fstps
enter
out
mov
stc
mov
js
mov
int
arpl
ljmp
cmp
pop
mov
adc
scas
or
inc
mov
aad
sbb
imul
mov
adc
inc
ret
fdivrp
add
mov
xor
push
xchg
jg
outsb
push
imul
lock
out
arpl
xchg
push
js
push
sub
lahf
movsl
jns
stc
jbe
mov
mov
sub
mov
lock
jo
rcrb
in
or
xchg
bound
mov
xchg
mov
ss
and
sti
ja
mov
pusha
sarl
sub
in
jl,pn
les
sbb
aam
enter
dec
pusha
pop
loopne
pop
stc
mov
mov
pop
out
push
out
loopne
movsl
aam
xchg
rolb
mov
cmp
hlt
scas
lcall
insl
push
push
mov
and
dec
push
sub
add
cmp
dec
or
cmpsb
orb
ja
inc
add
imul
shlb
cli
js
clc
fsub
jnp
sub
ret
cmc
movsl
sbb
add
andb
arpl
push
xor
cwtl
mov
call
clc
cmpsl
pop
ja
sbb
insb
mov
pop
sahf
cmpl
clc
aam
cmpsb
mov
mov
fstl
xor
and
ret
cmp
or
aam
sbb
fwait
sub
jmp
jmp
ret
adc
add
rcrb
icebp
mov
mov
push
xchg
or
outsl
jg
jge
and
adc
jns
pop
subps
add
or
sub
clc
xchg
mov
fiadds
fstps
nop
mov
add
inc
add
das
sbb
int
loope
adcl
xchg
test
aam
pop
lea
mov
stos
clc
out
adc
xlat
sahf
movsb
cmpb
clc
jb
andl
add
or
pop
add
adc
mov
fnstenv
popa
enter
std
pop
mov
or
int3
pop
outsl
stos
or
movsl
cmp
inc
inc
or
adc
jecxz
mov
movsl
jmp
pop
and
push
imul
mov
loopne
mov
jmpw
maxps
cmp
jl
inc
outsb
adc
ljmp
sbb
mov
or
mov
sbbl
test
xor
xor
jo
ss
xor
mov
jne
repnz
rolb
nopl
mov
inc
clc
sbbl
sub
popf
sub
insl
jle
jg
xchg
pop
scas
or
mov
dec
mov
mov
inc
add
out
pop
sbb
push
in
out
insl
add
fists
es
jno
push
dec
dec
rolb
loope
dec
das
negl
rol
gs
push
and
pop
xor
mov
or
mov
jne
mov
ljmp
xor
ss
cmp
cmp
mov
pop
call
fildll
sbb
pop
fstpl
sti
add
cmp
jbe
ja
fnstenv
push
pop
dec
sbb
repnz
arpl
dec
lea
scas
out
add
add
jp
data16
mov
jbe
faddp
mov
shll
std
lea
sbb
adc
bound
or
sub
xchg
mov
push
jne
mov
mov
outsb
frstpm(287
jo
gs
cs
nop
jbe
xchg
xor
orb
pushf
fstl
out
pop
dec
add
sbb
arpl
jecxz
ljmp
push
or
jg
popf
push
sbb
rcll
cld
dec
push
test
cmp
loop
and
jg
xchg
sub
or
cmpsl
pop
das
pop
test
je
push
mov
ljmp
mov
add
loope
fmul
lret
push
fsubr
clc
mov
bound
or
adc
scas
inc
das
dec
jg
fisttpll
cmpsl
add
jns
outsl
add
or
push
push
lock
dec
add
pop
call
lcall
sbb
mov
jo
scas
mov
fisttpl
dec
cmc
mov
or
adc
jge
aas
sarl
sarl
push
sbb
mov
jo
inc
data16
adc
push
inc
sbb
lock
leave
outsb
or
addr16
dec
mov
xlat
pop
xor
jno
add
pop
test
out
lret
jl
cmp
cmp
aas
sahf
or
cwtl
movsb
cmp
xchg
xor
and
cmc
push
xchg
or
test
pushf
or
jb
loope
cmpsl
test
aam
dec
mov
insl
or
dec
mov
in
cmp
pop
xchg
les
imul
inc
test
lods
in
call
and
adc
inc
bound
adc
mov
incl
insb
out
sbb
int
cmc
addr16
stos
sarl
inc
sbb
and
clc
dec
into
stos
sub
orl
lds
incl
mov
xchg
clc
and
and
cli
mov
pop
or
idivb
in
insl
and
pushl
das
les
lea
lret
lods
insb
scas
adc
push
stc
and
stc
push
pop
or
xor
adc
outsl
repz
jmp
aam
mov
jmp
inc
nop
push
aad
cmp
sub
testb
mov
or
pop
mov
das
sbb
cmp
push
mov
mov
outsl
addr16
jl
fstpl
fiadds
add
jg
mov
adc
fstl
mov
or
pop
xor
sub
push
sub
pop
xchg
jo
cmpsl
jno
cmpsl
sbb
mov
mov
cmc
mov
cltd
sbb
push
jb
insb
push
add
push
add
mov
mov
dec
fwait
dec
adc
and
ljmp
jno
js
sbb
movsl
out
ficompl
push
enter
fs
in
lahf
jo
push
push
call
das
mov
inc
xor
dec
inc
repnz
push
xchg
ss
clc
dec
addr16
and
inc
jb
or
pushl
icebp
out
pusha
cmp
lcall
jp
cmc
in
or
mov
fwait
pop
mov
xor
mov
fwait
push
iret
inc
add
test
hlt
mov
adc
roll
jb
cld
insl
aas
aam
rcrl
and
mov
or
jecxz
lock
cmp
pop
insl
aam
jmp
lcall
nop
sub
popf
mov
dec
cmp
fcomi
push
sub
adc
mov
jo
nop
mov
or
and
imul
jbe
fbstp
stos
pop
jo
pop
in
sbb
out
inc
mov
add
cmp
insb
inc
push
cmpsl
fsubl
enter
mov
sub
test
pop
push
cmp
lret
aas
lds
adc
mov
sub
aaa
shl
push
mov
sqrtps
inc
jo
jmp
or
arpl
movb
push
inc
and
inc
scas
sbb
not
mov
mov
xchg
lret
gs
lock
loop
mov
adc
dec
movl
or
sbb
sub
loop
je
and
and
fistpll
sbb
mov
pop
add
and
mov
ficoml
sbb
mov
fnsave
sub
add
push
rcrb
mov
aaa
aas
mov
dec
ror
sahf
jle
fsts
cmc
mulb
sbb
fisubl
jb
loopne
fimuls
pop
fs
dec
ret
or
cmp
cmpsl
inc
orl
add
pusha
rorl
cwtl
or
dec
adc
aas
push
mov
hlt
lret
jbe
mov
cmp
or
lahf
decb
dec
lods
scas
inc
fdivr
lds
bound
loopne
mov
subl
mov
push
fisubs
sub
pop
test
fdivs
leave
pop
sub
fcom
pop
in
call
cmp
mov
sub
mov
xchg
nop
repnz
loope
mov
cmpsl
dec
push
sub
xchg
add
insl
mull
xor
jecxz
add
popa
sbb
vmovshdup
and
and
jnp
inc
test
cwtl
int3
es
mov
mov
dec
lods
insb
mov
out
mov
push
scas
ret
in
fdivrl
add
inc
dec
push
test
and
pop
fs
jg
pop
fstpl
mov
mov
inc
incl
rcr
outsb
fildll
sbb
lods
inc
fcomps
push
cmp
mov
pusha
lret
scas
movaps
out
adc
mov
xor
in
orl
xor
jne
je
das
cmp
xor
and
inc
mov
cltd
movsb
loope
sub
lea
ss
cmp
inc
and
add
in
ret
xchg
mov
std
incl
pop
sub
mov
int3
inc
pop
mov
popf
mov
out
xor
inc
and
cltd
cmp
push
stc
jg
adc
lret
inc
xchg
lods
scas
shlb
jl
xor
adc
rcl
movsl
shll
ret
fwait
xor
push
lcall
outsl
xor
nop
rcl
xchg
stos
insb
ljmp
mov
jo
xchg
scas
imul
aam
data16
mov
pop
xchg
ret
adc
pop
sub
int
inc
add
bound
adc
sahf
pop
xor
fildl
iret
lcall
shrl
dec
sahf
dec
fistpl
adcb
xchg
pop
xor
mov
jp
sbb
or
pop
ss
hlt
ds
cmp
call
mov
mov
or
lea
fildl
cmp
jge
adc
je
dec
aaa
lcall
inc
jge
inc
dec
adc
pop
pop
jns
sbb
mov
fs
adc
mov
fdivs
fstps
bound
pop
sbb
mov
out
inc
adc
mov
nop
enter
adc
jge
je
pop
sub
pop
or
mov
and
mov
xor
test
mov
pop
stos
add
out
cmpsb
mov
adc
fisttpl
and
ss
mov
call
mov
fsts
dec
loopw
loopne
mov
inc
sbb
adc
sub
aaa
subb
movsb
fs
cmp
shll
adc
jne
mov
imul
jge
fidivl
mov
fs
or
rol
out
pusha
mov
push
cli
xchg
cmp
dec
repz
xlat
aas
repnz
adc
rorb
add
sti
fbld
dec
push
mov
aaa
and
mov
les
and
jg
or
pop
jl
and
add
fsubrp
mov
iret
xchg
jnp
loopne
pop
mov
icebp
jge
or
push
adc
gs
lock
mov
sub
adc
test
in
inc
cmp
stc
sti
cwtl
addl
cmpl
mov
scas
sbb
int3
xchg
mov
or
fs
jecxz
pop
jb
mov
xchg
push
xchg
adc
sub
lcall
xchg
push
mov
adc
push
loope
sahf
add
xor
inc
or
int3
dec
fisubrs
sub
sub
inc
fdivrp
fwait
adc
fwait
movsl
jl
addl
orb
ret
fcmovnu
jbe
adc
ret
test
out
int
leave
or
hlt
mov
pop
add
out
cmp
inc
in
or
dec
and
xchg
cmpsb
mov
and
scas
or
fcmovu
ud1
dec
les
sbb
test
ss
ljmp
lret
call
rcll
mov
sti
dec
add
sbb
push
jge
adc
jecxz
aas
push
lock
out
xor
lods
daa
or
je
stc
fisttpll
rep
popa
pand
loope
outsl
or
popf
add
outsl
sub
test
or
ret
popf
add
pushl
sti
adc
xor
mov
and
loope
pop
or
pop
jl
out
push
orw
adc
add
add
push
in
ljmp
pop
repnz
xchg
mov
cld
lea
shr
jmp
xorl
out
pop
cli
stos
add
das
mov
into
inc
pop
sub
push
cmc
shlb
loop
push
cmp
xor
in
pop
js
sub
lds
mov
in
icebp
push
cmc
and
lods
ffreep
ret
movsl
inc
fidivl
adc
and
leave
dec
inc
rcll
push
mov
lods
mov
xchg
sub
mov
sbb
lods
das
pushf
push
push
adc
jmp
jl
cmc
sbb
cmc
inc
push
mov
lds
sub
subl
dec
dec
insl
loopne
out
or
sbb
and
shrl
outsl
pop
daa
in
outsb
lret
sbb
mov
cmc
or
lock
mov
cmpl
sti
pop
xchg
ds
shlb
xor
mov
ljmp
shrb
dec
test
and
subb
mov
adc
test
ret
pop
fs
cltd
pop
push
inc
mov
pop
jbe
fdivl
and
xchg
dec
jmp
fptan
pushl
mov
jb
sub
inc
icebp
cmp
mov
rcl
fwait
call
inc
add
inc
inc
push
lret
and
or
pop
mov
push
sub
mov
popa
push
lahf
outsb
and
prefetch
pop
xchg
das
xchg
test
fdivrs
nop
add
jmp
add
out
mov
test
scas
bound
xor
incl
add
pushf
test
mov
xor
ss
scas
sub
jmp
add
mov
shl
inc
loopne
jno
add
mov
inc
fistpll
cmp
mov
sbb
scas
arpl
imul
in
inc
aaa
mov
aam
sahf
sub
xchg
mov
dec
test
loope
add
pusha
sarl
test
xchg
xor
dec
sarl
or
mov
inc
mulb
mov
pop
inc
mov
mov
lret
ficompl
fbld
jo
add
push
call
andb
adc
test
fwait
clc
fmul
jne
out
out
push
mov
inc
mov
loopne
add
jl
mov
pushf
xchg
add
jl
repz
aaa
jo
addl
js
stos
fsqrt
dec
insb
jge
aaa
jg
loopne
and
sbb
dec
cld
aad
fisttpl
jb
ds
cmpsb
into
jbe
cmp
imul
lret
pop
pop
sub
xor
mov
jl,pn
dec
xor
mov
aam
in
call
nop
sahf
fcoml
mov
and
clc
fnsave
mov
mov
int
gs
cmpsl
outsl
fdivl
iret
in
pop
xor
cmp
lock
test
pop
ret
sbb
inc
or
xchg
movsl
subb
xchg
outsb
popl
roll
lods
jmp
stos
lods
gs
push
rclb
mov
adc
push
push
add
lret
or
fwait
push
daa
fisttpl
mov
jp
mov
mov
pop
aam
test
fistpll
jp
pop
ss
mov
mov
aas
cmp
clc
xchg
int
not
or
imul
pushf
out
jo
outsl
fsubs
dec
jg
inc
inc
inc
test
rorb
orl
jmp
daa
pop
sub
xlat
inc
mov
addb
call
jns
sarl
inc
mov
mov
push
fst
dec
pop
xchg
cld
push
add
ja
fisubrl
inc
test
std
lret
rcll
je
shrl
lcall
push
xchg
sbb
stos
subl
and
dec
inc
add
mov
xor
std
rcrb
daa
mov
sarl
int
iret
fistps
or
popa
test
xchg
arpl
in
dec
sub
scas
in
roll
jb
jl
or
or
in
stos
adc
nop
sub
shlb
andb
movl
pusha
fs
lds
scas
xchg
sub
inc
pop
pop
cmpsb
sbb
mov
loopne
in
or
xchg
push
add
lds
call
xlat
insl
sbb
push
adc
je
push
dec
xlat
insl
and
ret
mov
js
jno
es
jno
mov
push
shll
xchg
xor
cmp
mov
xchg
push
cmpsl
mov
filds
xchg
jb
add
into
test
cmp
insl
pop
aaa
fnstsw
mov
sub
sahf
je
das
test
or
mov
add
xchg
and
add
xchg
stos
std
push
negb
cmpsb
outsl
insb
add
mov
cmp
xchg
ss
sub
scas
push
sbb
pop
outsl
cmc
xor
mov
mov
xchg
negl
lea
jle
jle
clc
ljmp
pop
adc
xchg
pop
mov
push
ss
aaa
sub
insb
pop
aad
xchg
mov
mov
pusha
adc
xchg
cmp
add
in
mov
cmpsb
adc
adc
dec
test
xor
adc
out
insl
jecxz
pop
dec
mov
shll
ljmp
mov
mov
adc
add
adc
mov
nop
jo
aad
inc
test
fadds
cmpsb
mov
imul
mov
ficompl
mov
lahf
cmp
fldenv
ret
push
sbb
mov
outsl
mov
je
jp
fsubl
cmp
mov
xchg
fsub
adcl
ss
les
pop
mov
mov
jl
mov
ret
and
jecxz
test
enter
mov
loop
inc
lret
mov
and
arpl
dec
mov
inc
mov
inc
loope
push
xor
subb
aad
out
xor
scas
andl
mov
sbb
adc
jmp
push
adc
xlat
xchg
mov
and
lcall
int
rcrb
bound
sbb
or
mov
pop
mov
adc
push
jge
xchg
xor
mov
cli
mov
jae
fwait
dec
icebp
aas
jecxz
pop
and
ja
push
add
sub
pop
cmp
cmpsb
jbe
xchg
test
into
mov
mov
pop
fdivrs
cmpsb
sarl
adc
jge
jmp
das
insb
scas
imul
xor
loop
popa
jnp
adc
lea
push
adc
test
fdiv
lcall
mov
cwtl
fidivrl
or
xor
lcall
scas
sbb
jbe
dec
shrb
jb
inc
mov
xchg
stos
inc
and
adc
dec
adc
mov
fnsave
push
dec
cmp
adcb
rolb
nop
mov
es
cld
sub
cli
dec
out
jge
jp
xchg
cmp
pop
xlat
xor
imul
in
adc
lret
dec
jp
xchg
cld
dec
xor
sarl
xchg
and
aad
dec
in
ss
lock
sbb
mov
pushl
test
and
icebp
ss
cli
xchg
loope
adc
lret
int3
push
ds
jbe
push
push
pop
rol
js
xor
std
pop
nop
and
jmp
adc
cld
jbe
and
sbb
cmp
pop
shr
shrb
sbb
fistl
test
pop
add
pop
test
je
cli
scas
sub
mov
stos
inc
mov
js
mov
shl
fbstp
scas
jb
aaa
and
mov
rolb
cmpsl
aas
jg
or
cmp
leave
test
mov
popl
xor
sub
cmc
ret
movl
mov
mov
cmp
pop
inc
roll
xchg
cmc
out
out
add
mov
lahf
or
lahf
mov
jae
cmp
test
and
outsb
and
ret
jnp
sarl
arpl
das
outsb
ljmp
jo
jmp
add
and
nop
xor
lock
ljmp
loope
sub
lods
shrb
jnp
add
addr16
out
jo
push
sahf
xchg
push
test
mov
pop
mov
mov
lea
adc
pop
jle
and
insb
outsb
scas
or
push
mov
sub
in
aaa
cmp
leave
sub
sbb
xchg
test
jno
cld
mov
inc
mov
jmp
mov
outsl
test
xor
pushl
icebp
xchg
xchg
dec
bound
lea
je
inc
adc
inc
ss
mov
outsb
daa
jecxz
pop
push
mov
jo
rcrl
adc
mov
xchg
cltd
inc
xor
out
in
mov
dec
mov
dec
out
jne
sti
or
pusha
sbb
sbb
adc
enter
cmp
repz
push
fldcw
and
imul
xor
test
cmp
add
lods
sbb
orl
mov
mov
push
fcmovnb
pop
sbb
ret
sbb
adc
add
or
sub
inc
pushw
pop
pop
call
icebp
jns
adc
xor
testb
cmp
imul
lahf
inc
les
pop
mov
sub
sbb
shll
fs
jg
xchg
sub
jle
mov
pop
pop
add
les
clc
pop
push
call
push
fiadds
adc
sbb
jmp
add
lods
xchg
mov
shll
int
das
push
movl
fsubp
cmp
mov
inc
cmc
xchg
mov
stos
notl
outsb
clc
jg
movsb
xor
dec
movq
repz
sbb
les
out
sti
lret
xor
les
mov
lds
pop
mov
pop
jmp
jb
mov
leave
dec
jbe
mov
into
fsubrs
rclb
mov
mov
pop
in
insl
pop
add
or
mov
or
push
push
mov
rsqrtps
sub
cs
cmp
add
mov
adc
fdiv
inc
dec
in
pusha
cmp
shl
mov
add
call
loopne
dec
mov
repz
subb
lods
sub
mov
dec
out
lret
jmp
dec
outsb
inc
insl
push
mov
adc
aas
dec
dec
jg
pop
lea
xchg
clc
or
xchg
in
shlb
adc
lea
jecxz
add
adc
scas
pop
sub
shlb
mov
leave
or
outsl
sti
test
fsubs
jns
dec
fwait
andl
and
jo
inc
je
mov
mov
in
or
pop
mov
sbb
rclb
and
int3
loopne
mov
xchg
mov
adc
icebp
and
fdivl
ret
in
mov
enter
mov
mov
jg
pop
roll
mov
inc
push
fwait
iret
pop
bound
ret
sub
and
bound
stc
lds
xchg
or
or
fldl
in
mov
rclb
clc
in
push
add
cltd
cld
je
imul
or
notb
mov
xlat
push
das
aas
push
cmp
sub
fidivs
mov
add
and
outsb
sbb
inc
pop
mov
or
adc
sub
jl
sbb
stos
and
sbb
fistpl
cmp
sub
cmp
mov
xor
mov
pop
mov
mov
test
test
rolb
xchg
push
inc
mov
shl
sbb
or
mov
ss
jo
dec
mov
push
incb
mov
cld
and
outsb
cli
outsl
push
push
fld
inc
or
dec
negl
shr
xchg
pop
pop
out
mov
out
jmp
sahf
nop
mov
mov
out
cmp
icebp
cli
aam
or
pop
aad
push
inc
gs
sbb
rcrb
iret
test
jg
xor
push
add
dec
xchg
sbb
mov
inc
sbb
das
insb
test
lea
jmp
test
dec
scas
bt
cmp
adc
mov
mov
test
mov
loopne
jb
jbe
cmp
adcl
mov
cltd
negl
push
lahf
and
jecxz
push
je
movb
lods
and
sub
adc
enter
jle
adc
xchg
push
addl
push
mov
xorl
mov
scas
push
xor
dec
jmp
add
mov
mov
cltd
jmp
jmp
fildl
lea
outsb
xchg
dec
sti
adc
icebp
and
xor
popf
decb
add
inc
mov
testb
cmp
cmpsb
xchg
mov
dec
push
add
or
movsl
fdivl
out
lcall
push
enter
add
mov
push
cmc
bound
push
add
adc
cmc
pop
mov
inc
lahf
ret
cmpl
jg
cmp
push
in
pop
in
push
mov
outsb
mov
test
cs
mov
ret
adc
inc
mull
xor
dec
aaa
cmp
lret
pop
rclb
dec
push
push
inc
insl
add
enter
inc
aaa
lock
push
rcrl
xor
ja
mov
mov
clc
fbstp
jne
and
aaa
js
jl
mov
ficoms
in
fisubrs
mov
test
idiv
scas
or
and
aad
jl
fdiv
sbb
cmp
stos
imul
mov
mov
mov
push
pop
cli
add
jp
int3
dec
sbb
xor
cmpsb
cmp
jle
pop
xorl
call
jle
cwtl
loope
fdiv
cmp
and
jo
das
imul
imul
out
fiaddl
loopne
sbb
sub
scas
gs
pop
mov
push
push
loop
xchg
cmpsb
shl
outsb
cltd
ss
inc
and
jp
push
add
cli
fidivrs
jmp
xchg
ljmp
icebp
shll
out
push
fwait
mov
mov
and
jg
fstl
dec
dec
bnd
mov
add
ljmp
lret
or
push
xor
add
mov
sub
xorl
icebp
lds
test
dec
adc
mov
test
imull
sub
inc
stc
ljmp
add
add
mov
mov
pop
xchg
cltd
pop
pop
aad
push
pop
bt
stc
ds
or
nop
cmp
pop
loop
or
jl
dec
cmp
dec
jo
ja
mov
xchg
jl
jmp
lahf
push
mov
addl
ds
lds
xor
adc
insb
pop
inc
jp
fidivrl
add
movsl
cmpsl
pop
adc
cmp
divl
fwait
mov
fs
je
loope
lds
iret
gs
lock
icebp
into
rcrb
add
mov
xchg
push
xlat
dec
adc
xor
cmp
movsl
js
xorb
test
push
aas
fdivs
in
pop
xchg
loop
cmpsl
rcll
imul
push
loopne
lds
mov
add
mov
scas
nop
fs
dec
in
or
insl
mov
les
js
shrl
pop
outsb
jecxz
adc
icebp
jmp
insl
roll
dec
test
push
sarb
push
mov
rorb
es
cmp
inc
mov
jg
clc
fisttps
mov
cs
fwait
imul
outsb
adc
mov
pop
jp
mov
rcr
popa
xchg
mov
fidivl
adc
xor
pop
mov
and
inc
loop
test
add
mov
das
test
clc
fsubrl
jae
mov
clc
aaa
mov
or
xor
fwait
js
cmp
rcrb
call
mov
imul
repnz
lock
and
add
mov
ljmp
mov
mov
lahf
jl
out
adc
insb
js
adc
adc
mov
cmp
xor
mov
dec
testl
xor
sahf
jmp
or
sarb
mov
jmp
sbb
testb
lods
insl
and
orb
sub
pop
pusha
sbb
icebp
inc
mov
stos
inc
pop
cmpl
loopne
push
es
andl
repz
ljmp
es
outsl
out
fisubl
push
pop
arpl
dec
or
rdpmc
shr
xor
les
loopne
addr16
loope
fdivl
fisttps
mov
mov
ficoml
mov
mov
loopne
outsl
or
icebp
lret
push
ss
mov
mov
insl
aad
cmp
lea
mov
dec
insl
inc
lcall
aaa
fdivrl
out
sub
cmp
push
xchg
clc
jo
adc
test
add
inc
out
fcmovnu
mov
into
and
inc
adc
xchg
jecxz
xchg
pop
fadd
jbe
sbb
ljmp
mov
into
sub
add
movsl
xchg
mov
dec
in
fisubrl
mov
and
jo
cld
stc
mov
xchg
push
add
dec
stos
je,pt
and
stos
pop
sub
push
out
mov
mov
lds
mov
inc
mov
add
jns
mov
aaa
movsb
shlb
test
cmp
clc
add
inc
dec
jno
pop
mov
mov
jmp
addl
sub
pop
call
adc
sub
addr16
imul
in
das
xor
mov
stos
jecxz
jno
mov
inc
cmpsb
pop
lds
cmpsb
cmp
subl
hlt
cli
mov
rorl
sub
xor
mov
hlt
int
popf
out
adc
push
jle
adc
xchg
add
xor
in
pushl
and
pop
and
in
rol
lock
popa
cltd
loopne
sbb
insl
pop
cld
das
shrb
push
std
sbb
rol
call
and
shlb
adc
push
in
aaa
fs
repnz
shll
pop
cmp
addr16
fsubrl
add
mov
movb
test
push
loope
inc
mov
mov
and
hlt
sbb
add
sbb
in
aas
adc
dec
daa
xchg
clc
hlt
ja
pop
imul
into
test
mov
fcmovnu
pop
inc
sbb
das
or
jecxz
xlat
mov
xlat
sbb
xor
push
and
jbe
jge
fs
jae
out
xchg
lea
rorb
in
testb
faddl
popf
lret
jae
push
and
and
jno
sub
mov
mov
cld
xor
pop
sub
idivb
incl
mov
sbb
mov
jecxz
adc
xchg
or
cmp
repnz
ret
pop
add
mov
xor
or
test
xchg
jno
add
stos
lds
adc
test
mov
jle
into
and
xchg
push
rorl
mov
add
test
rcrb
fiaddl
lcall
push
jne
outsl
stc
xchg
xchg
int3
ss
call
out
loop
cmp
vmovdqu
leave
xor
int3
faddp
dec
mov
pop
and
mov
mov
jo
pop
out
cs
push
arpl
mov
jge
xchg
cmp
subb
std
repnz
inc
mov
pop
cmp
mov
inc
imul
jle
mov
call
cli
iret
xor
push
insl
pusha
inc
mov
sbb
fcompl
or
jmp
inc
mov
mov
movsl
mov
mov
icebp
aas
clc
inc
adc
clc
fwait
outsb
pop
adc
lea
jns
fwait
jle
addr16
pop
or
insb
xchg
push
push
test
inc
out
cmpsb
fisubl
push
sbb
andl
or
sub
jbe
jns
mov
and
push
loopne
mov
adc
add
push
cmp
sbb
je
sub
push
in
insl
lea
test
pop
pop
clc
mov
mov
fcoml
push
js
cmp
imulb
sbb
dec
mov
inc
and
sarb
in
and
cmp
repnz
jbe
loop
stc
mov
lret
inc
xchg
sbb
mov
push
inc
mov
lahf
sub
mov
jecxz
push
cli
mov
cli
inc
mov
jbe
mov
push
pop
jne
popf
xor
sbb
stos
sub
mov
int
loope
fcmovnu
enter
in
ss
ljmp
adcl
mov
gs
in
sahf
enter
adc
cmpsb
ja
add
xchg
xor
or
and
mov
js
das
lock
xchg
hlt
pushf
idiv
inc
bound
rdmsr
aam
outsl
imul
push
ret
cwtl
sbb
inc
aam
xor
jp
rorl
adc
clc
inc
jo
outsb
dec
sarb
fbstp
movsb
shrd
rorl
out
and
ss
add
ret
cld
adc
arpl
gs
mov
mov
int
fucom
icebp
les
cmc
push
ror
in
js
mov
adc
cs
rcr
add
push
and
push
jmp
filds
leave
lods
es
mov
inc
mov
icebp
add
dec
lods
push
sub
out
addl
call
xchg
mov
xchg
pusha
xchg
xor
pushf
xchg
ficomps
or
mov
add
in
or
add
test
shl
xchg
add
shlb
jl
push
jo
pop
je
or
adc
mov
cmp
ljmp
insb
adc
jbe
mov
decl
cmp
adcl
mov
inc
loopne
mov
pop
imul
push
fstps
lock
xchg
loopne
sbb
push
add
dec
push
pop
fsubrs
cmp
or
mov
test
out
out
mov
ss
pop
mov
inc
sti
cmp
fstpl
outsb
shrb
pop
lds
mov
insb
repnz
mov
dec
fistl
lock
mov
addr16
ja
cmpsl
jbe
push
inc
les
sub
mov
adc
es
inc
testl
mov
mov
jle
inc
imul
mov
ja
dec
lock
int
daa
xor
xlat
pop
faddl
inc
mov
xor
ret
fucomi
pop
mov
popf
adcb
pushf
pop
mov
sbbl
adc
and
jbe
push
pop
rcll
imul
lret
pop
or
cmp
fwait
outsl
fwait
or
mov
aam
ret
cmp
es
jecxz
lock
pop
in
pop
mov
inc
mov
das
mov
fcompl
cld
mov
aas
cmpsb
jnp
dec
sbb
inc
pop
outsl
mov
sbb
je
inc
call
inc
cmp
or
inc
lock
stos
adc
xor
mov
in
js
pop
add
mov
hlt
imul
jb
aas
xchg
pop
int
mov
sbbl
shll
inc
mov
int
fs
lret
mov
mov
xlat
sub
shl
movsb
fimuls
cmpsb
fwait
pop
pop
rorl
mov
pop
rcll
ret
xlat
push
adc
movsl
or
add
jecxz
jns
xchg
lock
mov
and
or
enter
pop
in
push
idiv
adc
nop
je
adc
xor
repz
call
fwait
xchg
adc
adc
add
data16
cmp
jge
int
outsl
shrl
sub
inc
es
add
adc
cltd
inc
add
push
xchg
mov
test
mov
cmp
stos
rcrb
cmc
sbb
push
pop
test
sbb
mov
or
into
jl
insb
stos
cmp
jle
cltd
sbb
push
cmp
mov
out
xchg
mov
mov
mov
inc
lea
mov
jg
aaa
outsl
xor
mov
rcll
pop
mov
cli
jno
stos
popa
xchg
inc
cmpsb
pop
mov
loope
je
sub
pop
and
lret
lock
aam
movsb
in
mov
mov
or
and
stos
daa
sbb
push
or
adc
icebp
in
and
push
push
test
cmpb
ds
js
xchg
sbb
mov
mov
adc
cmpsb
adc
in
ds
xchg
jp
or
cmp
mov
pop
dec
out
jne
bswap
int
xor
mov
pop
dec
pop
imul
insl
inc
and
mov
cmp
pop
clc
dec
jb
add
push
nop
into
sahf
lock
fldt
jbe
test
lea
pop
or
clc
mov
rcll
js
mov
inc
filds
mov
push
roll
sub
mov
or
jge
xchg
jg
lahf
xchg
lods
mov
in
test
pop
adc
adc
mov
dec
xor
or
cltd
dec
clc
test
loopne
das
dec
imul
cmpsl
popa
xchg
test
icebp
call
addps
aad
mov
mov
clc
scas
insb
mov
frstor
or
outsl
push
and
fwait
scas
adc
fcmovb
dec
es
sub
sahf
push
testl
mov
sbb
or
jge
pop
hlt
sbb
cmp
and
ds
in
rcpps
pop
movsl
xor
popf
aaa
popf
aam
push
inc
fldl
shlb
testb
or
jmp
and
xor
mov
xor
int
adc
je
aas
sbb
popf
mov
jno
xchg
pop
insb
incb
adc
and
pop
movsb
mov
jae
mov
xchg
ret
add
sahf
mov
mov
std
inc
in
fmulp
and
inc
dec
xchg
and
pushf
fstl
sbb
inc
sti
dec
and
sub
lahf
cs
xlat
jo
imul
ret
cmp
sbb
cmpsb
or
inc
pushf
stos
xchg
push
or
add
sub
ret
lock
xlat
jnp
mov
mov
sti
imul
pop
repz
test
hlt
fildl
ret
test
push
inc
or
pop
xchg
fildl
lods
cli
add
dec
inc
pop
fnstsw
pop
int3
mov
mov
xorb
loop
mov
pop
mov
imul
aaa
ds
lods
rcrl
or
lock
or
xchg
push
adc
das
xor
add
inc
sbb
ss
cmp
outsb
sar
xor
cli
pusha
mov
test
stos
shll
fdivs
aam
arpl
sub
jne
adc
lea
push
add
into
shll
or
lret
in
icebp
push
arpl
push
xchg
sbb
and
lea
pop
aam
ret
std
sub
call
mov
mov
add
cld
inc
jne
arpl
mov
arpl
flds
shlb
push
adc
push
xchg
repnz
lret
push
dec
pop
das
adc
xchg
cmp
jo
push
mov
sbb
fdivrp
ret
jne
dec
sbb
bound
in
mov
fldl
rcrl
or
mov
test
xor
rorb
cmc
daa
pop
outsl
rolb
mov
dec
or
mov
addr16
mov
and
into
cmp
jg
test
mov
dec
adc
in
dec
jle
iret
jne
pushf
sahf
mov
pop
xor
and
xchg
out
outsb
mov
jecxz
pusha
sti
mov
rcr
cmc
cld
dec
adc
daa
sub
adc
pop
jno
mov
inc
enter
in
pop
bound
push
jbe
lret
ret
inc
xor
ret
ffree
leave
inc
mov
mov
aas
ret
and
or
jb
adc
test
ret
jo
push
pop
insb
test
or
mov
pop
cld
push
js
pop
xchg
dec
cmpsl
dec
adc
rcl
testb
ljmp
shr
sbb
add
lea
pushf
outsb
das
or
test
rcrb
shrl
inc
aad
shll
stos
out
cli
add
cltd
scas
or
dec
add
xor
lahf
adc
mov
add
out
js
cltd
mov
mov
inc
mov
mov
xchg
in
les
in
push
jnp
lcall
or
rcl
ds
sub
pop
int
shr
stc
sti
mov
rcrb
scas
push
out
and
popa
ds
rcll
in
setle
push
je
dec
push
dec
shlb
sbb
lods
test
xor
adc
xchg
cmc
insl
insl
or
sbb
cmpsl
shlb
sti
and
jp
add
push
jno
stos
std
pmullw
mov
in
movsl
and
ret
push
outsl
das
mov
add
or
or
popf
loope,pt
fwait
push
fwait
jmp
gs
add
xor
mov
pop
xchg
test
mov
add
dec
push
xchg
xor
add
dec
shrb
push
lods
dec
cmpsb
pop
dec
sub
push
aaa
aam
ljmp
mov
mov
or
push
daa
in
in
xchg
jecxz
orb
sti
push
sub
inc
rolb
test
negb
ret
add
mov
adc
dec
imulb
inc
out
dec
sbb
xor
sahf
lds
mov
aas
data16
repnz
xchg
mov
or
dec
push
inc
adc
xchg
loope
in
enter
out
call
xchg
inc
out
arpl
insb
das
insl
push
cmp
popf
lret
or
scas
push
ja
arpl
or
clc
sbb
icebp
xchg
int
xlat
mov
jecxz
jl
mov
add
or
or
sub
ret
cmp
jle
adc
and
cwtl
pop
push
leave
push
shll
outsl
rcrl
mov
roll
daa
mov
add
xor
dec
mov
outsl
mov
push
push
cld
dec
mov
jbe
and
sbb
xchg
loopne
inc
mov
xchg
inc
cmp
or
add
in
inc
jge
bound
mov
jb
pop
pusha
cmc
scas
popa
add
loope
inc
mov
dec
dec
sbb
push
fldt
into
cmp
pop
scas
fsubrl
aaa
mov
pop
push
test
cltd
jnp
inc
or
inc
movsl
inc
sbb
ds
fildll
les
push
mov
adc
out
xor
lea
and
cmp
aam
repz
out
xor
mov
jmp
outsl
lds
fistpl
dec
mov
sbb
call
mov
cmp
cwtl
sbb
push
mov
cli
lock
inc
adc
mov
rolb
mov
fimuls
xor
movsl
sub
mov
sbb
dec
rcrb
push
fwait
test
test
cmpsb
les
mull
cmp
loopne
outsb
push
enter
mov
pop
inc
xchg
aam
push
or
inc
pop
sbb
xor
inc
pop
push
mov
clc
push
ret
mov
push
stos
lahf
shll
imul
repz
add
jg
inc
adc
or
aad
jnp
push
cmpb
icebp
rclb
push
in
mov
lahf
cltd
cmpsb
jns
aam
lods
push
jb
out
scas
nop
fcoml
jg
mov
insb
movsl
call
inc
dec
cld
mov
adc
dec
jg
scas
les
insl
call
adc
and
xlat
xchg
cmp
leave
notb
fnstenv
insl
jnp
pop
inc
or
cmp
pop
sub
xchg
jle
cld
and
cmpb
mov
lret
cmpsl
add
mov
rcrl
pop
frstor
pop
xchg
or
lahf
fcmovb
inc
lea
mov
mov
push
mov
xorl
lret
mov
add
sub
cs
add
mov
mov
jp
pop
cmpsl
add
fdivs
push
sbb
sbb
pop
pop
hlt
mov
push
xchg
addr16
push
xchg
xchg
jbe
test
cltd
cmp
inc
roll
in
out
ljmp
and
add
rcll
cmp
dec
or
adcb
mov
sbb
add
fstpl
cld
scas
push
mov
add
mov
pop
xorl
xor
sbb
js
out
fucomp
sbb
xorl
sbbl
or
add
push
mov
bound
sbb
inc
xchg
pop
in
cs
sub
and
stos
ja
test
mov
mov
or
jns
arpl
mov
mov
or
bound
sub
jae
mov
xchg
lods
sub
in
pop
dec
ret
aaa
and
aad
lock
cmp
subb
fbld
adc
push
mov
xor
rcrl
xchg
add
aaa
pop
push
pop
repnz
outsb
xchg
mov
push
jecxz
popa
xchg
mov
add
jg
push
jge
dec
daa
insl
mov
pushl
xchg
daa
sub
jae
mov
lods
aaa
adc
add
repz
mov
mov
jmp
lds
pop
or
loop
dec
decb
pop
loopne
rorl
inc
lret
sbb
loop
insl
and
sub
outsl
push
pop
aaa
cmp
je
jmp
out
scas
inc
inc
lcall
xor
push
imul
add
pop
xchg
mov
mov
imul
fadds
xchg
and
out
into
test
xchg
lock
or
pop
aam
popf
fidivrl
test
adcl
cs
jge
insb
sbb
loopne
inc
inc
add
mov
fimull
loopne
add
push
mov
dec
enter
push
mov
inc
adc
in
movb
bound
movsl
jne
lock
shrb
dec
mov
xchg
inc
pop
sahf
movsl
fiaddl
inc
jo
out
adc
push
mov
arpl
mov
push
inc
jl
cltd
xor
jge
icebp
std
cmpsl
fstp
inc
and
jo,pn
push
ret
pop
fcom
and
rorl
and
cmpb
mov
gs
addl
mov
cmp
mov
or
in
adc
js
mov
aam
es
and
xor
lea
xchg
pusha
int
shll
jle
pop
or
lods
ffree
add
push
push
jo
fcomip
inc
dec
hlt
hlt
jecxz
enter
rcl
and
gs
scas
addr16
and
fbstp
xchg
mov
or
push
or
mov
lahf
pusha
aad
ffree
rorl
jle
xor
test
adc
mov
cmc
pop
faddl
cmp
sti
push
xchg
mov
rcrl
stos
das
mov
stc
xchg
mov
inc
or
icebp
mov
push
or
es
roll
cmp
mov
mov
in
or
or
shll
mov
cmpsb
lahf
clc
test
jle
call
fdivrs
add
mov
mov
in
stos
gs
mov
or
nop
call
ja
aam
or
test
movsb
cmp
testb
mov
push
cmp
xchg
ret
or
movsl
push
filds
jecxz
sub
dec
dec
add
daa
in
arpl
xchg
not
sbb
clc
fmull
cmpsl
cmp
icebp
jecxz
gs
adc
adc
sbb
mov
jbe
cmp
sbb
xchg
test
sub
mov
sysenter
into
ss
jb
insb
call
add
movsl
jl
pop
inc
lahf
movsb
sbb
jb
push
fidivrl
test
xlat
cmc
int3
pushf
test
inc
jmp
xchg
fs
push
jge
test
add
nop
movl
sub
test
clc
add
jmp
inc
fcomip
aam
jno
adc
sbb
push
cmp
and
sub
sub
out
sbb
sub
jns
mov
jecxz
pop
jle
cmpsb
and
test
dec
fcoms
pushl
xor
test
sbb
dec
sbb
fst
mov
mov
hlt
adc
fs
adc
aas
fidivs
mov
or
movsl
jne
aas
fcmovb
outsl
pop
clc
in
add
out
inc
jns
xchg
adc
shl
xor
test
aam
das
jge
push
cmp
or
dec
dec
xor
pop
xchg
in
mov
inc
fistps
mov
push
lret
add
scas
push
push
mov
rcll
mov
mov
mov
sbb
pop
mov
xchg
sub
cwtl
stos
popa
inc
pop
jle
loopne
inc
jb
sahf
adc
subb
clc
testb
cmpsl
adc
mov
jecxz,pt
jmp
ljmp
fmuls
dec
xchg
jecxz
cwtl
sbb
xchg
pop
sub
mov
xor
sbb
orl
lgdtl
mov
shl
dec
xchg
addl
add
shlb
dec
outsl
call
sahf
ds
push
filds
lret
inc
jecxz
sbb
rorl
leave
pop
and
mov
inc
or
test
shrl
clc
repz
push
dec
jmp
andb
pop
or
sub
jbe
add
sbb
arpl
add
jo
stos
clc
mov
dec
inc
add
stc
sbb
inc
sbb
cmpxchg
cmpb
fdivrl
mov
add
ret
inc
jge
fidivl
testl
in
test
or
mov
jbe
repnz
rcll
lret
outsb
and
ret
ret
xor
js
xchg
dec
insb
test
sbb
cmp
outsl
cmp
mov
mov
and
inc
test
js
es
inc
fldz
push
jmp
cmp
fisttps
mov
outsb
lods
dec
pushf
and
fistpll
cmp
adc
jle
or
cs
sub
rorb
or
cmp
in
sub
sbb
jns
add
push
rcrl
mov
mov
mov
call
dec
jo
notb
test
int
push
movsb
pop
inc
inc
aam
mov
adc
push
and
std
cmp
jmp
mov
add
mov
test
or
xor
pop
jb
orl
fisubs
fnsave
iret
and
dec
and
push
mov
stos
fsin
adc
in
mov
pop
lcall
fcompl
rcrb
jo
outsb
and
fcmovne
rorb
sti
cmp
pop
sub
push
or
lcall
cld
pop
js
and
cmpsb
dec
mov
xor
jg
jb,pt
or
push
dec
add
test
das
mov
cltd
clc
fstpt
xadd
mov
adc
mov
sbb
adc
cmpsb
out
dec
mov
imulb
pop
push
inc
aaa
push
in
fcoms
shrl
push
aad
or
and
bound
jbe
or
mov
jl
jb
lea
lock
add
dec
jg
sarb
push
lock
mov
lret
lret
push
and
inc
filds
jmp
bound
inc
jle
loope
filds
dec
push
xor
ret
pop
imul
cmp
gs
int
aas
xor
jne
pop
mov
sub
cmp
jno
adc
push
jge
jmp
mov
jmp
cmpsb
or
adc
aad
call
lea
int3
add
nop
mov
xchg
xlat
or
push
mov
push
jno
js
in
js
sub
lock
xchg
add
mov
mov
fbstp
jbe
je
ds
ret
push
or
arpl
jecxz
xchg
fists
insb
xor
cmp
mov
insl
sbb
dec
or
dec
ret
in
dec
fdivl
jge
xor
mov
sti
add
pop
out
pushf
cmpsb
fwait
js
out
xlat
jne
cmp
jmp
dec
mov
in
mov
lea
addl
add
icebp
sti
sbb
jae
sbb
cmc
sub
sbb
dec
into
dec
cmp
push
in
xchg
aaa
les
fnstcw
aaa
ljmp
icebp
pop
mov
add
aaa
sub
sub
cwtl
push
mov
add
push
sti
jmp
xchg
or
std
lcall
dec
cmp
out
sub
imull
imul
and
inc
ljmp
cld
cmp
cld
ljmpw
cmp
rol
inc
mov
rcr
js
loop
sbb
pop
popf
push
std
test
pop
lods
adc
adc
and
pusha
push
repnz
mov
loope
scas
pop
adc
test
fucom
mov
dec
and
test
into
xchg
jg
jle
js
mov
mov
inc
push
pop
sub
scas
jg
into
int3
inc
mov
pop
mov
cs
lcall
gs
add
push
lcall
outsb
fstpt
adc
push
adc
sbb
cld
in
jg
scas
or
push
adc
sbb
mov
push
pop
and
push
mov
js
sbb
or
jp
push
mov
mov
lcall
mov
std
pop
lock
mov
xchg
ja
mov
cmpsl
mov
mov
inc
lea
shlb
xlat
sahf
iret
test
push
cwtl
add
in
enter
leave
addb
adc
lret
pop
adc
jg
adc
orb
pushf
scas
je
pop
rcr
in
call
loope
pop
or
mov
ret
push
ret
jnp
stc
dec
fisttpl
fistl
loopne
pop
data16
xchg
cmp
add
scas
and
dec
incl
sarl
loope
jp
mov
cmp
shll
bound
imul
mov
bound
lods
sub
sahf
cld
sbb
ljmp
xor
outsl
inc
sbb
push
sub
xchg
xchg
mov
xor
inc
sub
fwait
sbb
sarb
xchg
mov
mov
xor
sub
dec
or
shlb
sbb
and
push
mov
clc
fisttps
incl
jae
stos
in
iret
sub
sti
sbb
pop
ret
xchg
imull
dec
inc
jbe
mov
outsb
mov
fnop
inc
add
cmp
inc
sti
ja
and
data16
cmp
add
cli
arpl
adcb
jmp
jnp
iret
inc
enter
test
xchg
fiaddl
jmp
dec
jb
cli
jb
jmp
ficoms
pop
mov
mov
pop
mov
xchg
in
mov
lock
pop
outsl
cmp
lock
je
test
pusha
add
test
jecxz
mov
adc
and
out
mov
movsl
xchg
gs
xchg
loopne
cmpsl
div
pushl
mov
or
fisttps
jl
repz
popf
inc
mov
pop
jg
jbe
fs
aaa
jb
fcompl
mov
notb
test
cmpb
mov
and
mov
das
in
push
adc
test
mov
pushf
mov
fidivs
popf
adc
dec
clc
push
lock
mov
push
sub
jnp
dec
popa
lea
outsl
push
rclb
add
sbb
dec
fldt
rcrl
pop
outsl
adc
and
xor
xor
ffreep
pop
sub
out
hlt
arpl
movsb
pop
cmpsl
push
add
mov
mov
mov
std
stos
pop
cmp
inc
imul
or
test
push
mov
add
movsl
push
aam
ds
or
ds
addr16
push
mov
bound
push
popl
lret
push
mov
dec
cmpb
jns
enter
push
push
xchg
cli
mov
test
jle
pop
outsl
ds
xor
nop
leave
and
aam
cmp
filds
or
sbb
ret
data16
sbb
mov
sub
daa
and
aam
cs
push
test
pop
test
or
mov
das
cmpsb
decb
mov
xor
jnp
inc
clc
or
addb
jne
test
loopne
inc
stc
and
push
cmc
adc
push
jo
cli
add
and
add
and
ss
pushl
dec
shrb
and
call
imul
pop
or
mov
and
inc
add
adc
out
fnsave
sbb
out
jmp
outsb
dec
insb
pop
inc
test
inc
pusha
pusha
cltd
test
je
aas
sub
inc
mov
jge
scas
lcall
nop
push
and
ja
popa
mov
enter
movsl
push
filds
mov
nop
cmpl
and
xchg
outsl
stos
std
imulb
fs
stc
lret
adc
push
rclb
test
test
aam
mov
sbb
packuswb
mov
add
add
mov
jb
sub
xchg
push
inc
fidivl
orl
jo
sub
nop
add
fldt
loopne
je
std
sub
adc
push
cmp
pop
pop
adc
inc
aaa
sbb
test
das
rcr
cmp
sahf
lods
loopne
ja
lods
pop
dec
mov
mov
mov
lock
arpl
ja,pn
mov
mov
pop
pusha
cmpsb
fists
ret
cli
sbb
cmpsl
ds
pop
mov
js
int3
les
sbb
into
mov
movsl
loop
xchg
pop
mull
push
mov
iret
sub
sbb
mov
mov
cmc
mov
xchg
jnp
and
dec
jno
push
out
add
mov
push
mov
add
jg
push
test
pop
cmp
mov
in
std
inc
lock
sub
push
sub
jo
pushf
rcrb
inc
fwait
cli
ljmp
pop
testl
lods
inc
adc
insl
adc
pusha
mov
cmp
push
movsl
mov
dec
popf
jae
loope
adc
and
xor
sbb
sub
rcll
sub
inc
adc
inc
push
cld
shrb
daa
stos
xchg
add
mov
mov
fmulp
test
adcl
out
aad
mov
jmp
in
pcmpeqb
in
addl
inc
push
jl
shrb
sbb
fisubs
mov
inc
loop
shll
push
test
dec
imul
aam
mov
iret
adc
xchg
and
or
and
sub
or
fildll
outsb
lods
sub
add
push
mov
inc
jp
push
mov
and
fcoms
dec
pop
sbb
pop
sbb
jl
dec
cld
rclb
xchg
push
loop
add
inc
aam
or
adcl
shrb
call
test
sbb
mov
jns
pop
rorl
sbb
mov
mov
add
or
mov
testl
mov
lods
ja
mov
inc
test
push
xlat
test
sbb
fcmovb
fwait
rclb
cmp
jnp
xorl
int
push
cli
ljmp
stos
dec
jne
ja
mov
repz
nop
pop
daa
dec
jnp
mov
decl
test
stc
add
clc
ja
xor
aas
mov
shrb
sub
sbb
push
mov
or
mov
mov
outsl
mov
out
leave
mov
inc
inc
xchg
scas
inc
mov
test
popl
mov
fs
mov
imul
jg
mov
adc
loope
call
addr16
cmp
push
popl
or
mov
sbb
push
push
test
in
scas
bound
iret
loope
pop
fimull
insl
and
cmpl
stos
xchg
sbb
pop
xchg
test
loopne
fmuls
pop
mov
jl
pop
clc
adc
push
xchg
add
pushf
pop
das
inc
sub
decl
mov
jbe
xchg
dec
addl
cs
dec
in
adcb
adc
and
adc
insl
jecxz
ret
pop
push
in
sbb
mov
outsl
or
cs
or
loope
int
dec
pusha
cmp
adc
movlps
out
mov
jne
and
add
scas
fistpll
sqrtps
aaa
cmpsb
test
push
jo
pop
outsb
jecxz
mov
inc
leave
movsl
stos
xchg
mov
insl
fstpt
mov
ljmp
cld
push
mov
fucomip
lods
mov
sub
adc
inc
add
aad
outsl
test
or
idivb
sub
sbb
xor
sub
mov
or
addr16
mov
add
lock
pusha
sbb
mov
jne
fsubr
or
sub
cwtl
sub
mov
push
adc
xor
test
arpl
stos
adc
ret
jb
mov
jl
xchg
mov
jg
js
mov
adc
mov
hlt
aaa
js
shlb
add
pop
neg
dec
jge
inc
or
shll
pop
loop
std
outsl
ja
mov
add
mov
dec
mov
push
incl
frstpm(287
addr16
or
mov
adc
cmc
int3
int3
popl
js
fs
pop
push
clc
pop
cli
in
rorl
dec
or
mov
jmp
jnp
out
mov
popa
lock
sbbl
clc
mov
jecxz
or
into
ss
cwtl
jo
dec
scas
bnd
in
es
adc
pop
adc
clc
adc
ret
popa
sub
lea
scas
lea
fisttpll
aaa
outsl
pop
sar
movsl
jp
loope
iret
mov
cmp
add
lahf
jecxz
icebp
mov
out
sub
add
loop
cmp
cmp
or
sub
shlb
add
stos
insb
enter
in
test
sub
insb
lea
das
fstl
inc
popf
or
ret
jno
icebp
cmc
cmpsl
in
icebp
clc
and
in
mov
push
pusha
inc
jne
xor
cli
push
xor
fcoms
and
jl
pop
mov
adc
leave
les
ret
mov
test
lret
or
insb
cmp
ds
dec
stc
push
sbb
cmpsl
stc
in
mov
and
fs
fs
cwtl
mov
jbe
mov
push
xchg
inc
out
jnp
lock
push
loopne
xor
mov
mov
mov
or
sub
pop
daa
and
pop
jg
push
mov
sbb
cltd
popf
push
mov
mov
mov
xor
ss
dec
pop
movsb
sub
pusha
push
jo
lea
jbe
sub
push
mov
in
add
inc
jb
dec
fildl
sbb
mov
add
int3
les
mov
stos
cmp
sub
mov
loop
scas
adc
fcoms
fmull
pop
inc
jle
inc
test
inc
push
ret
mov
and
mov
sbb
xchg
rolb
mov
cmc
enter
push
sub
adc
fistl
mov
mov
insl
push
lahf
out
aas
push
mov
jecxz
outsl
movsl
mov
inc
cmpsl
in
enter
inc
jmp
mov
pop
clc
stos
mov
xchg
jnp
rolb
aad
mov
int
xor
loope
push
leave
dec
sbb
mov
mov
sub
dec
inc
fildl
je
or
lea
sbb
mov
push
adc
das
lds
jmp
mov
push
aaa
inc
pop
mov
scas
xorl
mov
insl
shlb
mov
lods
std
jg
mov
lods
inc
sbb
cmp
adc
mov
mov
push
push
lods
pop
aad
dec
scas
je
cmp
icebp
outsl
pusha
push
fstl
cltd
cs
mov
fs
adc
push
idiv
test
icebp
fbld
xchg
cmp
notb
inc
outsl
mov
mov
aam
xchg
movsl
dec
pop
mov
cmp
inc
lret
push
fwait
mov
xor
shrl
sub
mov
cs
jno
movsbl
mov
fpatan
sbb
pop
test
rolb
sbbb
adc
mov
push
inc
fsubs
icebp
or
mov
ret
mov
cmp
add
jns
add
or
bound
outsb
mov
mov
mov
xchg
pushf
paddd
xchg
std
outsl
pop
mov
sub
push
mov
fld
pop
bound
test
sbb
dec
lea
rcrb
iret
sub
jo
cmpsb
mov
jle
add
sti
les
rcrl
bound
mov
mov
test
and
rclb
je
sbb
addr16
rcrb
mov
mulb
in
jno
js
push
ja
aad
adc
mov
jbe
xor
lods
jno
xchg
mov
arpl
add
lds
or
mov
js
cwtl
clc
mov
lahf
fistl
jle
sbb
inc
hlt
inc
add
or
cmc
fcomi
jbe
push
sub
push
jl
and
ljmp
hlt
and
pop
rclb
aad
cwtl
jb
push
mov
mov
icebp
lods
or
dec
call
inc
and
loopne
into
std
mov
adc
loope
les
jecxz
lods
pusha
ret
add
pop
adc
sub
xchg
repnz
pop
lods
aaa
adc
lods
cwtl
stc
dec
clc
mov
xor
lcall
shrb
mov
jbe
lret
mov
push
notb
clc
push
hlt
inc
adc
jno
test
lea
push
insb
adc
push
mov
into
in
mov
mov
mov
xor
jge
std
add
insb
mov
mov
test
push
iret
jmp
shrl
bound
roll
int
aad
sbb
mov
xorl
fs
cmp
inc
lock
xchg
add
std
icebp
lea
mov
jmp
and
mov
xor
xor
sbb
cs
mov
imul
pop
and
cmp
icebp
mov
lods
inc
test
xchg
aaa
xor
repz
pop
ja
fistl
cs
or
outsb
test
cmpsb
push
in
in
stos
jcxz
fucomip
sub
push
cmp
test
std
xchg
hlt
add
sahf
fldenv
dec
or
fistpll
test
xor
inc
in
fildll
or
jle
stos
js
addr16
in
sti
dec
cmpsb
mov
outsl
incb
cmp
and
push
add
mov
pop
fcomip
ret
adc
pop
faddl
pop
hlt
inc
clc
in
mov
inc
add
pop
sti
clc
dec
add
adc
enter
mov
mov
rol
xchg
outsb
fbstp
jp
add
lods
cwtl
lcall
in
xchg
fdivl
ret
fbld
pop
imul
inc
sub
and
fs
mov
sbbb
xor
push
or
adc
fs
or
iret
xchg
call
ret
pushf
adc
cmpsl
fnstenv
js
sub
jmp
pop
sub
jge
or
cld
or
add
push
or
xchg
movsl
jecxz
mov
pop
mov
imul
outsl
sub
push
mov
and
xchg
aaa
xlat
sbb
cld
nop
xchg
add
call
test
aad
popa
mov
loop
repnz
xor
xor
and
add
cmc
inc
and
ret
popl
dec
cmp
out
sub
pop
js
dec
mov
inc
icebp
or
dec
mov
test
sbb
mov
gs
dec
call
cmpsb
push
pop
sbb
add
cmp
out
jg
sar
push
mov
rcll
loope
ljmp
or
mov
push
loop
dec
js
inc
ds
iret
out
out
push
xchg
jle
test
mulb
loope
movsl
ljmp
push
adc
scas
jp
data16
je
adc
xor
lcall
pop
and
loopne
mov
push
mov
sbb
test
aaa
or
or
pop
inc
add
jnp
fcmovbe
pop
cmp
rolb
subps
push
jp
ss
outsl
jmp
inc
push
in
push
dec
mov
add
xor
fcoml
mov
xchg
cmp
and
sti
or
lock
ljmp
mov
inc
mov
arpl
cmp
std
aad
sbb
gs
push
xchg
or
sub
push
test
dec
mov
test
pop
call
add
loopne
lahf
rorb
cmp
es
fcoms
pop
xchg
add
scas
xchg
roll
sub
fs
cmp
xorb
mov
fcoml
and
sbb
mov
aad
mov
js
push
ja
push
pop
clc
aaa
sbb
sarb
mov
shrl
outsl
ret
add
sub
out
or
movsb
pop
aam
pop
outsb
or
in
mov
mov
enter
dec
xchg
push
movsb
jl
xchg
lods
movsl
js
sub
jg
xlat
mov
jl
sti
dec
lds
mov
fsincos
sub
shlb
lods
or
iret
dec
pop
int3
insl
or
add
sub
pop
loop
push
xor
mov
sub
and
test
mov
cmp
jg
js
and
push
loopne
inc
pop
pop
and
jmp
push
nop
push
mov
mov
sbb
adcl
mov
adc
fwait
mov
psadbw
dec
incl
mov
or
ficompl
loopne
or
dec
sbb
ljmp
insb
cmc
or
fbld
and
ret
and
mov
jne
add
leave
ja
add
fisttps
test
rolb
jns
push
xor
pop
js
int3
sbb
and
dec
push
xor
or
push
inc
pop
dec
movsb
test
je
cwtl
push
push
inc
mov
das
ret
out
dec
popa
mov
jo
or
jmp
jb
dec
repz
jae
out
dec
rclb
addr16
fistpll
add
lock
push
mov
in
jnp
je
rcl
les
ret
lret
mov
cmp
fistpl
sbb
inc
xchg
orl
pop
or
cmp
adc
aad
xor
jecxz
loope
cmp
into
mov
lock
mov
ja
cwtl
push
push
jmp
push
fistpll
adc
int3
inc
movsl
in
mov
push
or
mov
mov
xor
aaa
and
das
mov
addr16
mov
lea
cwtl
sbb
inc
es
fsubl
lret
or
leave
jle
lret
jne
jbe
lret
repnz
push
outsb
sbb
add
outsl
insb
and
outsb
loopne
rclb
stc
or
cmp
sub
or
shlb
mov
repz
sub
mov
adc
fimull
lods
popa
jno
inc
mov
inc
cmpl
aad
jmp
shll
xchg
xchg
fidivrs
jg
pop
ja
rolb
xor
lcall
sub
jo
xchg
mov
jp
push
sub
aam
lods
cli
je
in
outsb
fdivrl
loopne
loop
mov
call
xor
pop
jo
or
jo
in
mov
dec
mov
dec
sarl
inc
xor
leave
sarl
shrb
imul
mov
or
xchg
mov
mov
cmp
mov
xchg
and
mov
lret
and
shr
dec
pop
loopne
rorl
or
push
cmp
xchg
outsb
les
imul
fistpll
sub
and
test
and
mov
negb
mov
lcall
sub
jp
xchg
imul
hlt
cs
and
dec
ss
pop
xor
inc
arpl
jle
mov
loop
in
clc
je
mov
stos
js
adc
hlt
add
sbb
mov
imul
in
xchg
mov
sarb
push
cmp
loop
xor
pop
and
mov
fistps
cmpsl
xchg
gs
fs
mov
xlat
jns
leave
scas
les
outsl
xor
adc
add
dec
decl
sub
stos
lret
outsl
push
pop
lahf
or
out
inc
mov
mov
popa
ret
xor
data16
movsb
or
inc
push
sub
pop
add
bound
mov
mov
dec
shrl
ja
std
mov
loope
mov
add
dec
add
mov
xchg
inc
pop
sub
inc
shlb
push
imul
sarl
jle
loopne
decl
dec
sbb
mov
and
cmpsb
xor
scas
cmp
jno
imul
loope
jo
inc
popl
jo
cmp
and
push
fsubs
loope
clc
cmp
sahf
mov
pop
mov
sbb
and
jo
or
sbb
dec
sarl
and
sub
mov
mov
and
or
sub
adc
ss
clc
xchg
mov
adc
sbb
xor
xor
pop
daa
add
add
push
add
and
sbb
add
or
cli
or
insl
in
loop
mov
int
fimuls
inc
in
jmp
out
xor
scas
addl
aam
mov
fdivl
out
les
and
sti
add
movsl
imul
cmc
inc
mov
adc
outsl
rorl
dec
mov
andl
popf
pop
out
pop
and
mov
push
cs
sbb
push
sbb
add
jp
mov
mov
adc
pop
xchg
adc
pop
mov
dec
repz
adc
aam
test
mov
mov
mov
mov
push
xchg
jnp
inc
mov
test
loope
push
pop
adc
jle
cmp
lock
rorb
fldcw
mulb
addl
lret
mov
adc
movsb
jbe
mov
add
xlat
cmpsb
cmp
mov
sbb
inc
mov
in
xlat
mov
pop
mov
sbb
xorb
je
loop
pop
push
add
or
fidivrl
mov
insl
push
fwait
gs
call
mov
int3
add
inc
cli
mov
sub
xor
mov
sahf
orb
insl
mov
and
and
pop
clc
rorl
inc
add
and
mov
or
gs
sbb
lret
jle
mov
inc
sbbl
aam
lock
dec
push
push
jo
xor
popf
sub
pusha
pop
rcrl
ds
incb
mov
pop
out
mov
ljmp
mov
pop
push
outsb
outsl
icebp
xchg
sub
cmp
mov
das
insl
add
sbb
inc
pop
push
jge
lcall
sub
add
xlat
or
mov
jb
add
add
jb
loop
jbe
add
push
or
icebp
fwait
jecxz
pop
and
out
sbb
push
mov
cmc
dec
pop
adc
pop
rcrb
lea
les
jmp
insl
es
repz
jl
dec
jle
ret
jl
scas
outsb
push
and
movsl
mov
add
mov
dec
mov
cmp
jl
sbb
aam
adc
punpckhwd
gs
roll
lds
jo
ret
mov
cld
mov
shrb
mov
addr16
inc
mov
pop
loopne
xor
test
jbe
lds
lea
push
mov
dec
push
inc
mov
pop
mov
loopne
jo
or
mov
adc
stc
ret
fmull
inc
icebp
push
sbb
inc
mov
mov
adc
pop
add
or
aaa
scas
pop
ja
jb
jo
mov
jge
add
mov
roll
xor
ljmp
stos
int
sub
jbe
out
push
lods
popf
and
xorl
xchg
pop
adc
stos
dec
sahf
and
dec
or
mov
pop
mov
ljmp
lods
jne
and
cmp
dec
xor
pop
pop
add
jns
jge
imul
rcr
pop
and
push
push
shrl
mov
out
xchg
fnsave
stos
cli
mov
sbb
test
pop
pop
mov
xor
xchg
push
das
jl
sti
jecxz
xor
test
dec
insb
shll
not
loop
push
mov
xlat
repnz
sti
popa
push
jg
or
ds
pop
mov
fsubrl
and
add
nop
lea
cli
std
inc
xor
mov
xchg
mov
jnp
xor
sahf
mov
jno
cmp
push
sub
push
adc
arpl
or
mov
mov
xor
or
jl
adc
dec
mov
arpl
fs
cmpsb
mov
inc
fisttps
inc
cltd
leave
and
mov
push
loopne
inc
shlb
mov
cld
movsl
jbe
pop
in
mov
rcrb
jl
inc
std
filds
insl
xchg
dec
leave
sbbb
lods
fisttpl
xlat
push
inc
inc
call
sahf
adc
nop
cli
cmpsl
add
mov
or
aaa
xor
jg
pusha
push
into
subl
xor
rcll
mov
mov
sbb
fidivrs
pop
andb
mov
add
repz
lret
mov
mov
xchg
dec
mov
stos
iret
pop
xor
jle
jo
push
adc
aas
mov
pop
inc
mov
stos
subl
add
ja
in
xor
mov
dec
adc
jns
repz
ss
inc
mov
pop
pop
push
and
push
xchg
push
shrl
ja
adc
mov
lds
out
dec
dec
mov
aaa
pop
push
adc
in
arpl
lret
add
fs
or
pop
test
pop
clc
cmpsb
test
pushf
pop
xor
mov
xchg
stos
cmp
pop
movsb
mov
fnsave
fsubrp
mov
mov
mov
sbb
clc
cmp
in
call
push
and
loope
cld
les
xchg
rorl
movsl
mov
pop
mov
movsl
clc
in
es
mov
xor
xchg
enter
jle
mov
cli
aas
mov
inc
sub
dec
mov
add
mov
inc
inc
cwtl
test
and
sbb
add
sbb
aaa
pop
sub
ja
rcrb
adc
js
lock
int3
sbb
enter
xlat
jno
in
xchg
and
addb
sbb
lds
std
mov
and
or
iret
jecxz
ds
adc
aaa
mov
mov
inc
jl
fmuls
cmp
shl
mov
mov
call
call
cmp
js
xor
les
jge
cmpsl
scas
sub
mov
push
stos
jp
jne
ret
sbb
call
mov
inc
fsubr
in
scas
pop
pop
push
aad
cmpsb
mov
push
rcrb
int
or
andb
jnp
mov
andl
mov
mov
jmp
lret
inc
push
es
xor
fimull
push
adc
out
loope
cltd
enter
fnstcw
mov
dec
pop
and
out
mov
arpl
adc
and
jp
cmp
xchg
fsubs
dec
sub
xor
pop
mov
dec
pop
adc
addb
dec
jg
sub
jmp
lds
hlt
inc
pop
mov
or
jno
adc
sbb
repz
into
data16
test
inc
fisubrl
mov
inc
cmp
cmp
icebp
mov
push
lcall
dec
loope
cli
in
xor
push
add
fildl
loope
cmp
sub
or
push
inc
cmp
subl
in
sbb
sbb
and
and
sub
dec
mov
cli
xor
jle
in
lods
ljmp
shr
mov
jbe
add
cld
popa
mov
dec
std
fistpl
inc
test
push
mov
js
add
sub
jg
jecxz
add
pushf
mov
inc
and
into
and
rorl
xlat
pop
jnp
adc
jns
inc
repz
lahf
jo
pop
or
adc
xchg
inc
cmpsl
lds
out
xor
jg
dec
cs
inc
xor
lods
xchg
and
pushf
lret
pop
mov
cmpsb
mov
testl
adc
xor
adc
xchg
bound
adc
lea
xchg
ret
xchg
lea
jo
push
ss
mov
aaa
cs
pop
sbb
test
pop
and
pop
into
xor
xchg
jo
xchg
ljmp
pop
fwait
push
adc
inc
mov
adcl
adc
jl
testb
mov
xchg
push
push
push
sub
cmp
jecxz
dec
jl
pop
sbb
pushf
mov
pop
cltd
push
fwait
nop
dec
loope
rolb
leave
ljmp
jp
jle
in
fsts
inc
jp
xchg
mov
dec
jo
cmp
into
loop
notl
add
test
mov
mov
sbb
push
and
sub
cmp
mov
inc
add
jp
mov
mov
pushf
clc
std
jg
add
xchg
adc
clc
push
je
ficoml
std
scas
or
pop
ss
stos
cld
std
inc
repz
mov
jb
add
xchg
cmp
add
pop
mov
mov
xorl
cli
add
xchg
pop
mov
movsl
aas
mov
das
fucomip
rorl
push
leave
aam
aaa
adc
loop
pop
sub
pop
or
and
push
sub
fnstsw
sbb
mov
lock
movsb
cmpsb
push
push
mov
leave
addr16
sub
pop
lock
outsb
icebp
pop
jge
inc
jg
pop
sub
push
xchg
out
cltd
xchg
xor
add
mov
adc
enter
loop
enter
dec
xchg
mov
popa
add
pop
cmp
jl
adc
outsl
dec
jae
out
test
mov
imul
fiadds
lods
xchg
in
mov
mov
jne
icebp
jno
xor
scas
sbb
mov
mov
mov
fiadds
stos
bound
pop
dec
test
mov
pop
pop
sub
mov
mov
mov
pop
scas
xchg
xor
mov
cmp
mov
mov
call
sub
sbb
ret
adc
sub
jns
loope
adc
mov
repz
shlb
cli
jo
sub
nop
pushl
mov
inc
test
and
sti
jl
in
and
jb
cltd
les
jo
push
popa
aaa
mov
lock
shll
cmp
inc
and
mov
add
insl
mov
or
pop
adc
mov
shl
cmp
mov
xchg
or
nop
add
adc
or
lock
jno
sub
push
sbb
push
aam
mov
fwait
ret
fdivp
pop
pop
scas
mov
adc
cltd
popf
insb
fisubrl
push
dec
sbb
hlt
xchg
xor
pop
out
inc
rcrb
mov
out
fdivr
xchg
aaa
aad
mov
jp
jmp
lds
adc
or
inc
lods
mov
mov
cmp
ss
jno
fnstsw
pop
mov
mov
mov
xor
mov
adc
dec
fistpll
jne
inc
mov
pop
sbb
push
ss
adc
jl
int
call
fcoms
jle
xor
and
insl
push
xor
push
pop
mov
mov
add
orb
xchg
inc
jno
daa
dec
test
mov
es
adc
loopne
cmp
fimuls
push
insl
jnp,pn
and
insb
xor
sub
pop
or
loopne
outsb
ffree
loopne
cltd
xchg
iret
aam
in
add
das
mov
dec
sub
in
enter
jge
ljmp
mov
pop
adc
mov
push
into
push
popf
pop
sbbl
aad
nop
bound
inc
fcomp
adc
push
out
fcmovnu
cli
outsl
cmp
lcall
int3
xor
mov
rorb
mov
les
lds
sub
ds
mov
movsb
push
jl
in
fists
icebp
stos
inc
adc
xorb
shrb
jbe
xchg
sbb
xchg
jmp
cwtl
mov
mov
push
cmpsl
mov
std
inc
ret
inc
mov
push
dec
add
or
js
xlat
mov
dec
pop
iret
or
push
jo
xor
push
outsl
jg
jns
lock
lahf
cmc
mov
and
cwtl
shll
inc
mov
js
loop
pusha
cwtl
les
xlat
das
std
ret
pushf
aas
dec
sub
jmp
adc
sahf
adc
jp
shl
dec
inc
add
and
aad
mov
or
lods
adc
pop
test
mov
add
mov
pop
and
adc
iret
inc
cmp
clc
out
test
mov
xchg
jns
loopne
or
push
adc
sub
mov
fidivrl
lods
shll
jge
icebp
mov
pop
in
inc
int3
xor
orb
push
sbb
addr16
out
data16
pop
jo
rclb
insl
fstpt
fcomp
ds
repz
and
inc
jmp
mov
and
and
insb
push
pop
mov
fdivr
mov
fsubrl
stos
or
fstpl
or
mov
es
mov
xchg
adc
xchg
mov
dec
add
push
inc
jge
rcr
push
and
movsl
push
mov
mov
cmp
push
push
sub
shl
test
jbe
add
or
dec
mov
aaa
mov
sbb
clc
ffreep
mov
lock
inc
jmp
xchg
adc
mov
repz
jno
dec
inc
jl
clc
arpl
cmpsl
addr16
test
loope
std
jnp
out
in
lds
bound
hlt
fisubs
push
fwait
xor
add
inc
lods
pusha
mov
add
hlt
add
inc
mov
mov
lock
inc
mov
out
push
test
mov
mov
cwtl
mov
xchg
inc
jo
add
jle
sub
cwtl
sub
mov
adc
push
mov
dec
lods
je
repz
fimuls
mov
or
add
or
or
cmpsb
lods
push
lds
in
mov
cmp
test
pop
stc
push
pop
and
cwtl
add
bound
sub
inc
mov
fsubrl
in
cmp
and
cmp
mov
lahf
fs
xchg
sbb
pop
pop
dec
test
sbb
cmpsb
std
das
cld
or
mov
out
ljmp
cwtl
icebp
aas
xlat
inc
mov
std
ds
push
aad
and
lret
pop
add
cs
insb
mov
push
dec
sub
jbe
mov
jae
xchg
mov
adc
aaa
inc
fistps
mov
loopne
fbstp
pusha
push
call
sub
rorb
mov
cmp
mov
outsl
add
xor
dec
outsl
pop
cmp
mov
js
cmc
cmp
mov
leave
iret
out
rolb
sub
stos
mov
mov
add
neg
mov
dec
push
lea
aaa
cmp
icebp
mov
in
dec
push
xchg
out
cmp
add
rcr
xchg
mov
mov
or
leave
mov
pushf
test
inc
mov
ds
sbb
jp
add
adc
int
cmp
fimuls
inc
stc
in
adc
test
dec
daa
mov
in
call
fs
jl
fbstp
pop
stos
cmp
push
cmpsb
into
jecxz
pop
fwait
adc
jmp
out
mov
jle
test
mov
sbb
leave
xor
mov
mov
lret
and
aaa
add
mov
mov
cltd
and
sub
inc
testb
sub
cld
sbb
addl
mov
idivb
test
loope
cli
pusha
dec
mov
and
test
es
mov
mov
scas
imul
pop
sub
jl
add
cmp
sar
sub
int3
ss
mov
xchg
push
inc
inc
imul
mov
sub
or
or
test
lods
imul
jo
push
xchg
sub
mov
sbb
xchg
call
adc
pop
frstor
inc
or
lahf
nop
sub
fistpl
jbe
xor
jl
and
fsts
fstpl
inc
xor
sbb
and
sub
mov
and
jo
push
jno
jecxz
pop
jnp
jbe
xor
fildll
mov
in
lds
cmpsl
fcmovnb
add
cwtl
mov
inc
dec
inc
or
jge
dec
pop
cltd
ficompl
cmpsl
cmp
or
imul
andb
mov
repnz
mov
sbb
xchg
add
dec
mov
dec
sub
outsb
dec
cmpsl
test
into
popf
push
push
js
out
jno
mov
sub
add
xchg
push
pop
cmp
mov
leave
dec
or
xchg
or
int
inc
xor
sbb
repnz
cmpsl
jge
sbb
mov
aad
and
subb
fistps
mov
movsl
push
cmp
push
call
mov
imul
sub
or
mov
das
push
cltd
shrb
out
daa
xor
jb
xchg
test
addl
add
decb
pop
cmp
gs
fimuls
push
pop
jmp
shlb
pop
or
cli
adc
aas
dec
lock
mov
popw
cltd
notb
or
mov
scas
arpl
sub
out
in
xchg
and
divb
orl
aaa
lret
or
mov
mov
cmp
mov
aaa
adc
lret
mov
xor
ret
addr16
scas
inc
movsb
xor
int3
dec
inc
pop
lock
push
mov
inc
loopne
pop
push
imul
outsb
ret
ud0
cmp
loop
pop
sbb
cmp
pop
inc
lret
rcll
and
pushf
iret
out
cmpl
fwait
and
pop
push
mov
mov
mov
push
pop
or
and
xor
fisubrs
push
call
inc
jmp
iret
xchg
gs
adc
or
sbb
lahf
pop
xor
fwait
out
pop
mov
popa
add
cmpb
aaa
test
push
push
popa
pop
push
out
add
jb
dec
or
sbb
pop
pop
jmp
movsl
pop
je
das
rcrb
call
adc
cmp
add
sub
jmp
jmp
or
ret
es
mov
cwtl
insl
dec
push
lcall
aad
mov
andb
pop
std
dec
inc
or
inc
mov
out
and
mov
sbb
push
test
push
pop
cmp
outsb
ljmp
das
enter
js
in
mov
add
fnstsw
imul
mov
adc
mov
pop
sbb
push
ss
cli
loop
jae
fimull
mov
or
rcll
fsubrp
inc
pop
pop
imul
adc
push
test
in
notb
jecxz
js
call
outsl
mov
add
or
dec
subb
in
popa
test
test
xchg
ror
rol
inc
shl
fiadds
jmp
jg
testl
es
and
jbe
jnp
imul
mov
and
ja
insl
mov
nop
rorb
addb
scas
cli
or
mov
je
movsb
xchg
sbb
xchg
stos
lret
popf
cmp
fistps
test
call
inc
mov
sbb
mov
push
or
sbb
scas
jmp
out
pop
mov
dec
mov
leave
mov
fstpt
ficomps
lret
mov
pop
rcll
jge
push
test
cmp
aam
sub
js
nop
push
cld
in
fdivrp
push
push
jecxz
in
push
mov
xchg
movsl
loop
loop
mov
push
adc
test
adc
pop
pop
lds
imul
arpl
aad
pushf
or
dec
loopne
js
sub
test
fdivrs
pop
lcall
dec
and
cmp
dec
dec
dec
ret
inc
xchg
push
mov
fadds
cmp
jns
mov
mov
mov
inc
push
cld
lock
xor
cmp
push
push
mov
dec
adc
shlb
push
clc
push
les
in
adc
imul
stos
mov
pusha
lea
ss
and
sub
mov
fst
in
pop
inc
pusha
data16
mov
lods
mov
jnp
loopne
loope
popf
or
fiadds
call
sub
andps
pushf
mov
ss
insl
adc
pop
mov
cltd
xor
data16
movsl
mov
out
inc
cli
push
int
fisttpl
dec
aam
rol
adc
jno
in
push
or
ljmp
xchg
je
mov
cli
ror
mov
popf
mov
xor
jnp
scas
sub
stc
testb
mov
inc
mov
mov
pop
insb
mov
fidivrs
adc
push
jns
or
add
bound
les
add
push
in
aaa
rorl
in
sbb
push
fisubl
jne
cmc
xor
or
sbbl
push
call
xor
mov
out
mov
push
dec
lret
push
xchg
and
add
das
hlt
outsl
jae
call
adc
jns
xor
inc
and
add
loopne
and
cs
xor
inc
mov
mov
mov
mov
and
add
outsl
in
xor
jle
insw
loopne
mov
mov
int3
mov
fmull
xchg
jo
push
psllw
add
clc
ss
xor
push
sar
adc
sbb
lea
iret
dec
fldt
lcall
adc
mov
mov
outsb
mov
scas
movsl
dec
mov
sub
sub
test
cmp
mov
mov
or
clc
pop
or
incl
dec
or
rorl
stos
pop
das
jp
mov
insl
orl
nop
mov
fistl
push
inc
inc
adc
inc
jecxz
je
aam
stos
adc
mov
aam
push
test
call
negl
adc
test
outsl
pop
pusha
test
sbb
clc
adc
pop
or
pushf
sbb
mov
pop
push
loope
jg
pop
adc
mov
inc
mov
push
sbb
adc
pop
xor
mov
sbb
popf
ja
push
les
inc
fs
jne
xor
cli
pop
cli
ret
rcl
mov
ja
lods
or
das
lahf
ss
or
aas
xchg
mov
ljmp
dec
and
rcr
sbb
fmuls
sahf
jo
dec
mov
jge
movsl
gs
add
dec
outsl
jg
inc
test
xchg
or
movsl
popl
xorb
jecxz
and
mov
dec
mov
xor
ret
andb
and
mov
xchg
mov
imul
mov
mov
adc
into
aaa
mov
mov
notl
stos
std
mov
std
test
mov
inc
mov
inc
sub
shlb
addl
mov
add
repnz
jge
fnstsw
mov
inc
xor
mov
xor
push
cwtl
sub
test
in
outsl
adc
fcomi
mov
mov
aaa
test
fucomp
sbb
and
push
les
jge
addr16
je
repz
mov
ficomps
inc
sub
aaa
ret
arpl
stos
fcomps
enter
jo
sub
mov
ljmp
mov
out
arpl
mov
mov
test
jo
popa
mov
jmp
aam
jbe
and
js
and
cwtl
push
jecxz
outsl
icebp
sbb
sub
push
imul
dec
jl
push
sbb
mov
insl
push
sbb
ret
ja
iret
ja
adc
jb
test
push
je
inc
pop
in
add
lahf
and
and
sbb
jb
inc
cs
inc
mov
sti
inc
push
cmpsl
mov
or
mov
fwait
push
cmp
add
cli
cmpsb
movsb
pop
and
lahf
push
jbe
mov
and
cli
mov
jl
inc
or
outsl
fs
mov
jo
sbb
pop
out
mov
jnp
sub
jo
cmp
addb
fisttpl
jp
adc
mov
int3
lea
das
xchg
jns
add
insb
frstpm(287
js
fildll
cmp
sbb
mov
and
and
pop
adc
adc
push
mov
test
xchg
aaa
enter
stos
pop
mov
mov
xor
test
inc
jnp
or
jl
stc
in
fildll
xlat
jmp
inc
and
aam
ret
adc
cld
imul
sbb
dec
inc
mov
jl
push
mov
adc
or
lods
sbb
cmpsb
adc
aad
rorb
data16
jecxz
pusha
mov
cmp
push
or
inc
iret
mov
inc
shlb
dec
push
add
das
mov
push
icebp
inc
ror
orb
mov
add
lret
dec
sbb
test
inc
lcall
int
icebp
roll
fwait
mov
dec
cmp
sbb
call
add
out
scas
mov
and
jecxz
adc
sub
pusha
incl
clc
lock
aam
rcrl
dec
mov
roll
movsl
inc
push
pop
aad
add
sbb
jl
pop
cmp
popf
mov
fiaddl
sbb
pop
push
push
dec
dec
sbb
pushl
or
or
out
hlt
icebp
les
adc
shlb
fsubs
hlt
mov
in
dec
xor
lods
or
inc
popf
push
rol
pop
les
mov
xchg
ss
arpl
mov
mov
int3
pop
mov
mov
cmc
and
clc
and
out
or
in
sbb
push
xor
jbe
clc
movsl
out
fstp
xrelease
loope
cmp
push
ret
stos
push
add
push
insl
mov
xor
jg
ds
clc
adc
sub
or
pop
inc
jecxz
lock
nop
adc
movsl
mov
int
cmpsl
or
adc
push
aaa
pop
push
cmp
add
stc
dec
iret
xchg
mov
inc
cld
mov
lret
fs
cmp
jl
loop
test
test
aam
jl
sbb
xor
push
leave
and
mov
jp
sbb
jo
mov
test
rorb
roll
test
or
mov
repnz
nop
xchg
sub
mov
int3
mov
sbb
mov
xchg
out
cwtl
sbbl
cli
ror
cmp
pop
int
mov
sub
fdivl
clc
jmp
mov
sti
mov
stos
cs
cmp
pop
rcll
mov
dec
inc
pop
enter
mov
je
add
aad
out
cs
xor
sbb
mov
fisubl
loop
fimull
push
jmp
cltd
imul
sub
add
cmp
cmp
pushf
dec
cmpsl
push
ljmp
push
cmp
aad
pop
into
ljmp
mov
icebp
add
sti
adc
and
test
jge
cmp
push
push
mov
pop
sbb
pop
or
dec
inc
cmpsb
mov
les
adc
cmp
pop
adc
xor
ficompl
outsl
push
lock
hlt
stos
jbe
orb
mov
jmp
scas
push
cmp
and
std
sbb
sarb
push
stos
scas
nop
cld
inc
sti
outsl
out
or
adc
sub
loop
int
aam
outsb
js
adc
addl
scas
testb
and
xor
jg
dec
add
push
repz
outsb
ja
add
cli
pop
outsl
and
add
jg
shr
lahf
imul
add
sbb
push
idivl
mov
mov
movsl
aaa
icebp
arpl
dec
jns
notb
lret
aaa
outsl
pop
in
outsb
jl
lock
jecxz
sbb
xchg
mov
mov
test
ss
adc
jne
inc
lahf
hlt
call
test
call
hlt
in
sbb
jecxz
movb
xchg
lock
sub
sub
inc
add
jl
out
xchg
jo
jo
add
cmovl
mov
pop
xchg
fildl
loope
icebp
outsl
aam
xchg
scas
in
ja
or
pop
xchg
int3
sbb
test
xchg
loope
aad
cmpsl
call
sbb
xchg
pop
push
add
mov
jo
and
les
stos
or
cmc
movsb
and
mov
push
mov
push
fisubrl
xchg
add
jbe
in
xchg
hlt
and
dec
nop
into
js
sbb
pop
outsb
aas
aaa
push
and
cld
mov
sbb
fnstsw
pop
cmp
sbb
dec
loope
dec
sub
call
shlb
mov
jle
jno
addb
jmp
lods
mov
sub
loop
ret
dec
fs
jge
push
into
pop
xor
subb
sbbl
push
fstpt
sbb
outsl
clc
xchg
dec
sti
icebp
push
xchg
lcall
rorb
push
dec
jb
jl
popa
adc
mov
push
nop
cld
call
push
stos
jl
dec
cs
js
cmp
xchg
lahf
imul
sbb
mov
popa
aad
roll
push
lret
adc
cmpsl
sahf
loop
imul
mov
or
sub
jg
rorb
rorb
jo
mov
in
hlt
testl
aas
mov
add
jmp
and
outsb
add
repz
sarb
out
cli
or
cmp
adc
mov
inc
std
adc
sub
test
pop
jb
int
and
pop
lods
xor
pop
ja
jmp
out
mov
jnp
loopne
cmp
insb
mov
icebp
mov
test
mov
js
inc
sub
jo
shl
pop
fsub
push
mov
sbb
mov
cli
pop
call
xchg
les
adcb
dec
inc
andl
fsts
or
sbb
push
out
mov
mov
cld
xlat
sbb
mov
and
aam
nop
mov
mov
out
cmp
mov
add
cmp
sbb
aad
orl
aam
mov
mov
lods
inc
dec
fidivrs
cmp
cwtl
insl
xor
dec
leave
cmp
repnz
mov
inc
and
mov
jb
sti
popf
cmc
push
fs
out
scas
jbe
mov
sub
xor
jbe
pop
roll
and
fisttpl
dec
sti
iret
repz
lcall
movsb
movsb
out
add
mov
mov
jne
clc
pop
test
fsubrl
or
xchg
or
pop
cs
arpl
mov
mov
sub
jns
push
inc
dec
cmp
pushf
aaa
pop
mov
push
lods
dec
outsl
mov
push
push
pushf
add
adc
sahf
pop
cmp
in
mov
rorb
mov
std
jae
loopne
mov
cmpsb
out
jge
ds
sti
std
loop
aam
adc
mov
inc
jo
mov
sbb
xchg
mov
pop
sbb
sarb
sub
out
fistpll
mov
mov
scas
pop
or
ja
mov
out
xchg
mov
sub
lret
jno
xor
xchg
mov
call
jbe
pop
mov
cmp
aad
mov
decl
jb
lret
mov
sub
and
xor
inc
xchg
add
lret
jg
mov
icebp
inc
xchg
mov
fiadds
jg
cs
popa
shll
inc
xor
iret
jge
aad
pusha
les
push
lcall
stos
mov
mov
loop
call
enter
sub
jecxz
lea
pop
scas
xor
rclb
or
test
lock
or
movsb
icebp
mov
and
pop
rcrl
push
out
pop
push
lds
fnsetpm(287
mov
rolb
cwtl
loop
pop
jno
rolb
jge
xorb
clc
push
and
icebp
push
cli
in
aam
xchg
jl
jmp
push
scas
arpl
cmp
cmpsl
lods
dec
and
hlt
adc
fistpll
or
pop
aam
push
jl
dec
add
cld
shrb
dec
dec
pop
mov
or
sahf
inc
mov
movsl
and
jae
jb
insb
mov
loope
cmp
xor
adc
inc
jg
loopne
into
xchg
xlat
daa
jecxz
outsb
in
jb
std
loope
decl
xchg
lret
lret
push
inc
mov
das
mov
aas
leave
ljmp
xchg
mov
pop
lock
imull
xchg
mov
loopne
mov
rcl
adc
popa
loope
mov
mov
jno
mov
pop
out
pop
mov
mov
stc
adc
xor
xlat
inc
outsb
adc
and
pop
sbb
cmp
loopne
mov
or
xor
lret
testl
pushl
lods
dec
fs
sub
push
aam
jbe
sahf
bound
jl
xchg
sti
addr16
pop
test
dec
or
push
xlat
cs
movsl
mov
or
push
sbb
shlb
jbe
xchg
cmpsb
mov
fmuls
fldt
insl
in
mov
jg
gs
daa
lahf
push
or
je
jecxz
test
adc
imul
cmp
movsb
loop
and
mov
pop
jmp
filds
imul
lds
stos
inc
incl
sbb
sbb
rcrl
das
insb
inc
jbe
stos
and
popa
subl
aaa
adc
sbb
rcll
cli
or
push
les
push
jg
mov
dec
clc
mov
sbb
fisttpll
push
repz
adc
and
pop
jb
add
pusha
mov
jae
outsl
mov
call
pushf
cmp
enter
sbb
outsl
adc
dec
pop
test
sbb
sbb
jnp
cmp
push
push
mov
std
popa
std
ret
clc
sub
cli
shll
jecxz
push
js
clc
mov
sub
push
pusha
inc
xchg
or
rcr
cli
les
repz
cmp
dec
adc
inc
addr16
jecxz
or
test
or
mov
jp
mov
std
jmp
mov
cmp
cmp
or
insl
inc
xor
add
inc
js
and
mov
ret
out
test
test
je
pop
mov
das
std
xchg
xor
hlt
push
mov
sub
jno
sub
xor
pop
fbld
aas
fisubrl
lods
imul
push
inc
mov
pop
mov
push
ja
and
pop
adc
pop
loope
aad
jg
sbb
orb
loop
rcll
rorl
in
shlb
mov
dec
inc
imul
push
out
loop
mov
pop
les
jnp
mov
push
jp
mov
dec
int3
adc
sbb
loop
or
and
lcall
adc
pop
xchg
cld
mov
or
fbstp
into
add
jmp
mov
or
cmp
mov
insb
adc
pop
lods
fwait
sbbb
jl
xchg
pop
orl
xchg
int3
and
cmp
mov
jo
adc
mov
inc
jne
bound
subl
dec
inc
ret
mov
mov
dec
cmc
popf
adc
mov
push
inc
xor
jbe
aaa
mov
sbb
dec
sar
push
aad
popf
inc
mov
sbb
adc
mov
and
jl
sbbl
pop
movsb
incl
push
push
and
stos
int
pop
pop
ret
cwtl
adc
outsl
or
pop
stos
dec
xor
mov
test
jmp
outsl
cmp
bsr
je
push
xchg
xchg
fwait
outsl
add
add
xchg
sub
sub
mov
stos
sbb
inc
add
sub
mov
mov
movsl
xor
cmpsl
adc
ss
mov
jp
xchg
inc
mov
push
cmp
xchg
in
decb
arpl
in
or
and
in
out
insl
dec
pop
cmp
and
jae
sahf
dec
addr16
cmc
mov
mov
inc
sti
pushf
call
lds
inc
cli
add
outsl
mov
jb
lcall
scas
fadd
scas
jl
rcl
aam
push
inc
test
push
and
fxch
adc
aam
push
sub
inc
jecxz
pop
adc
inc
mov
dec
cmc
fisttpll
in
push
nop
ljmp
jmp
out
mov
mov
pextrw
xor
repz
cld
movb
cmp
and
icebp
pusha
lds
sbb
push
dec
std
test
and
pop
xor
xor
mov
clc
cmpsl
mov
daa
xor
les
out
nop
jmp
adc
in
or
adc
pop
jle
sbb
lret
stos
xchg
inc
add
mov
adcb
ret
mov
mov
mov
jl
fs
ja
mov
stc
mov
jns
mov
popl
clc
int
pop
icebp
mov
aaa
jge
insl
and
jge
sub
xchg
test
enter
mov
aad
ret
adc
push
or
jno
ror
mov
jge
jno
outsb
loopne
lods
out
or
sbb
mov
leave
mov
or
adc
inc
push
rorl
add
adc
ss
call
pop
aaa
shr
push
pop
cmpsb
dec
push
xor
daa
lds
cs
mov
cmc
push
mov
lock
cld
mov
jl
test
lea
or
subl
xchg
ret
std
inc
roll
pop
mov
or
mov
cwtl
and
bound
pop
and
add
divl
mov
or
out
sbb
push
or
mov
sbbl
inc
frstpm(287
adc
in
sbb
jne
rorb
or
cwtl
mov
clc
iret
test
mov
xchg
xor
ss
outsl
jne
or
int3
adc
sbb
mov
pop
push
sub
loope
int3
push
subl
xorb
push
inc
popa
arpl
and
pushl
scas
in
inc
push
popf
pusha
mov
rcrl
call
arpl
dec
loopne
mov
ljmp
jl
push
mov
jno
or
or
scas
movsl
dec
mov
mov
dec
mov
out
inc
mov
imul
sahf
mov
mov
cmp
mov
sbb
fiadds
dec
scas
add
fsubrs
push
sarb
pop
lock
cmp
icebp
movsb
lods
movsl
push
sar
xchg
lds
movsb
mov
popl
or
and
decl
js
cmp
dec
ret
jnp
push
jle
and
mov
lods
or
cld
out
xor
adc
xor
mov
movsl
mov
dec
sbb
inc
sbb
es
push
mov
fiaddl
jl
inc
and
cli
insl
and
jno
pop
das
xor
jmp
inc
adc
or
ret
hlt
inc
fwait
shll
cwtl
mov
outsl
icebp
jmp
push
icebp
mov
pop
add
fstpt
aas
fwait
or
mov
pop
adc
imul
test
gs
jg
jbe
cmp
dec
gs
xor
ret
andl
mov
xor
popa
mov
cmp
jne
push
jl
or
push
jl
bound
mov
jp
inc
lahf
outsl
or
push
inc
mov
xor
test
out
mov
js
jbe
bnd
cmp
icebp
ret
mov
jae
fsubrs
pusha
fmuls
mov
jp
in
incl
ljmp
std
sti
pop
and
jp
add
ret
fcompp
pop
shll
incl
test
xchg
mov
xor
jp
bswap
xor
loop
mov
fidivs
dec
or
nop
mov
dec
adc
scas
sarb
ljmp
jno
leave
sub
rcrb
in
std
inc
mov
adc
xor
enter
cwtl
ljmp
ljmp
pop
jnp,pt
xchg
sbb
clc
adc
lret
cmp
mov
or
add
gs
test
jo
mov
and
fwait
lahf
lahf
jno
jmp
hlt
and
add
mov
jnp
sbb
out
popf
in
pop
push
jns
jg
lret
push
inc
jl
stos
add
das
cld
xchg
loop
test
dec
and
xorb
cmp
push
mov
or
add
testb
jecxz
out
pop
add
push
or
xchg
lods
mov
sbb
test
scas
and
ret
das
push
movb
mov
jp
add
and
clc
inc
call
lret
push
pop
lcall
push
jecxz
cmp
roll
sbbb
aad
inc
mov
mov
lea
in
into
and
cli
fcmovbe
cmp
ss
dec
outsl
dec
inc
test
mov
push
test
pop
fimull
push
adcb
les
xor
fistps
add
mov
call
movsl
out
shll
mull
or
mov
imul
xchg
jecxz
loope
xor
nop
mov
mov
insl
cltd
pushf
cmp
xor
jmp
jo
add
loope
nop
mov
and
cmpsl
inc
out
push
fstl
sarb
mov
and
rol
sub
xor
repnz
cmp
or
daa
mov
adc
add
pop
push
out
mov
mov
jbe
jge
jecxz
insl
or
ss
adc
loope
push
cmp
mov
fadds
mov
test
sub
adc
dec
out
clc
popf
enter
into
in
xchg
cmp
test
fdivs
and
or
ja
popa
mov
cmpsl
outsb
inc
mov
and
dec
mov
scas
test
imul
fists
pusha
loope
sti
ds
or
push
in
push
incl
jmp
dec
fdivs
test
add
imul
adc
out
or
cld
mov
jecxz
adc
mov
das
mov
mov
dec
cmp
stc
add
insl
ljmp
sub
lea
lods
shrb
test
lret
fcomps
fisttpl
lcall
test
mov
mov
loopne
cmp
add
adc
push
fdivrl
cmp
das
stos
fsubr
mov
cli
xchg
dec
ja
dec
cmpsb
repnz
jno
outsl
push
jmp
mov
xchg
cmp
inc
and
jmp
inc
rcl
loopne
jno
rolb
aaa
jp
fldt
decl
inc
roll
xchg
inc
xor
push
mov
pop
inc
outsl
in
mov
add
ret
insl
repnz
sub
out
push
mov
fwait
orb
mov
addr16
sub
movsb
loopne
sbb
je
inc
fwait
pop
incl
lcall
xchg
push
clc
jmp
jo
insl
in
ret
out
in
mov
jbe
orb
jl
mov
inc
or
jb
cli
jmp
jne,pt
xor
sahf
ds
rcr
pop
outsl
push
les
arpl
mov
push
xor
gs
or
repnz
or
and
add
mov
ljmp
leave
push
or
jmp
mov
mov
out
push
es
jne
jl
or
pop
adc
adc
mov
imul
push
leave
pop
adc
inc
pop
mov
fwait
push
mov
mov
aam
js
and
shrl
fs
adc
jno
clc
ljmp
xor
fnstcw
jle
push
cmp
inc
mov
pop
ja
pop
mov
inc
add
push
repnz
mov
stos
add
loopne
ja
mov
std
outsl
add
aas
jg
cmp
push
xlat
shrl
xor
icebp
jno
data16
pop
cmc
pop
add
mov
pop
fimull
push
scas
in
xor
xor
xor
dec
sub
nop
or
mov
nop
add
movsb
test
fwait
insb
in
in
pushl
cmp
dec
xchg
cmp
dec
mov
jne
push
aaa
fdivrp
ret
mov
mov
add
mov
ret
out
add
mov
sbb
jo
mov
test
jp
cmp
sarb
js
fcoms
xchg
or
stc
in
pop
fdivs
je
std
andl
addl
adcl
test
push
rcrb
sub
cmpsb
sub
testl
out
pop
fdivrs
dec
addr16
stos
sbb
outsb
xlat
and
loope
mov
add
mov
ss
jmp
test
nop
adc
fwait
int
mov
inc
inc
dec
cltd
jmp
test
push
cmpsl
xor
add
cltd
dec
adc
pop
mov
mov
push
bound
add
add
mov
cmc
pop
push
imul
mov
mov
and
aam
jmp
jmp
sahf
scas
insl
push
mov
inc
mov
dec
inc
lea
xor
jl
test
mov
push
pop
ficomps
sub
loopne
sti
lock
ja
mov
loopne
pop
adc
cli
incl
test
mov
jne
les
outsb
push
lods
out
shll
and
fsub
repnz
jbe
decl
lret
or
sub
scas
add
int3
adcb
lret
call
out
out
jae
dec
mov
mov
mov
or
cmp
dec
mov
clc
or
xor
mov
loope
bound
and
xchg
fidivs
fidivrs
mov
rolb
mov
shl
test
xor
adc
or
push
inc
add
push
nop
mov
push
mov
inc
mov
les
pop
mov
hlt
push
mov
or
pop
jp
add
push
popf
sub
lahf
or
adc
roll
mov
xor
repnz
pop
mov
cwtl
pop
fs
or
lea
aam
outsl
push
fs
jmp
inc
movsl
test
pop
data16
xchg
inc
xchg
pop
fwait
cli
jg
lret
fcom
push
dec
mov
jmp
mov
clc
and
mov
xchg
sahf
and
push
dec
ficomps
jns
pop
call
movsb
xor
iret
add
jmp
repz
loope
xchg
pop
or
sahf
movsl
shll
mov
fcomps
stos
aam
mov
mov
jp
dec
mov
fdivl
mov
fisttpll
inc
rcrl
or
jo
test
ljmp
mov
cmp
popa
and
rcr
xchg
and
or
iret
mov
mov
ljmp
ror
mov
xchg
inc
adc
sti
decl
and
inc
out
imul
cmpsb
mov
sub
in
rcr
sub
dec
cs
shrb
mov
lahf
ds
sbb
rolb
lcall
mov
pop
inc
cltd
pop
pushf
sbb
inc
lret
jo
lret
shll
addr16
jae
sbb
pop
mov
mov
std
adc
pop
outsl
cld
nop
inc
xchg
lods
adc
xor
gs
loope
lds
cmp
mov
rorb
loope
and
adc
insb
fadd
pop
mov
das
js
call
xchg
or
mov
aad
or
pop
aad
mov
pop
lea
pop
ja
cmp
mov
popf
dec
xchg
leave
push
cmc
rol
outsl
cltd
push
dec
sbb
mov
jb
xor
or
push
mov
sub
jmp
jb
xchg
xchg
xchg
xor
mov
pushl
mov
jnp
push
int
gs
push
call
xchg
mov
stc
lods
inc
das
mov
insb
dec
dec
pop
xchg
clc
adc
cmpsb
or
add
rcrl
lds
std
imulb
push
mov
inc
in
xchg
and
add
push
insb
cmpl
pop
push
addb
icebp
lahf
divl
fcoms
movsl
push
mov
or
jne
push
rcrl
jmp
ljmp
in
mov
mov
add
scas
loopne
mov
icebp
add
pop
mov
repz
sub
lcall
flds
in
imul
push
cs
push
cmp
mov
jg
sbb
fistl
shll
mov
pushl
inc
sub
jmp
adc
sbb
clc
inc
xchg
xorl
mov
add
jg
push
mov
adc
sahf
and
jns
push
ds
mov
ret
aad
mov
adcb
fwait
sub
and
test
sub
pop
mov
int3
mov
mov
std
roll
insl
adcl
inc
add
pop
inc
xchg
aam
cmc
dec
push
ret
add
push
mov
jo
insl
sub
cmc
mov
lock
push
scas
push
cmpsb
and
mov
dec
inc
test
insb
mul
mov
sti
mov
jo
cli
test
dec
or
ljmp
and
fiadds
jp
mov
lea
idivl
adc
movsl
fildl
dec
adc
pop
lods
xor
push
cmpsb
or
push
lds
mov
mov
and
jle
clc
fimuls
jmp
jne
shlb
xchg
push
je
add
jbe
cmpsl
push
or
push
imul
dec
push
and
stos
mov
push
xchg
mov
dec
mov
clc
call
repz
adc
jl
fwait
jo
pop
pop
xor
loopne
push
loope
dec
call
popa
push
dec
pop
dec
hlt
or
test
mov
js
leave
stos
fs
push
rcr
js
cld
lock
aad
insb
outsl
sub
and
dec
cmc
addr16
in
mov
pop
mov
adc
movsb
dec
incl
cmp
push
ds
jmp
mov
imul
push
pop
cld
pop
add
jno
in
lea
ds
imul
sti
loop
arpl
mov
xor
and
mov
inc
add
jecxz
dec
pushf
ficomps
movsl
in
xchg
dec
call
push
sbb
mov
add
cmpb
in
inc
mov
push
jl
inc
das
cld
mov
inc
push
hlt
and
mov
lods
notl
add
mov
call
sub
ficomps
sub
mov
andb
out
ljmp
icebp
int
mov
or
leave
xchg
repnz
hlt
jg
sbbl
int3
mov
jp
andb
fs
jbe
outsb
call
mov
into
rcrl
inc
mov
add
mov
gs
les
insb
ja
scas
pcmpgtd
pusha
mov
dec
xchg
adc
dec
cmpsb
add
jbe
cmp
cmc
mov
aas
push
add
or
es
out
sub
das
add
mov
jmp
cmovo
or
cmp
or
push
dec
or
out
je
pushf
add
in
outsb
lcall
or
repnz
enter
aad
cmp
sbb
push
push
loopne
jl
xor
aam
lock
out
leave
xchg
pop
into
mov
cwtl
in
lea
and
ljmp
xor
mov
testl
cltd
mov
cmp
mov
cmpsb
stos
icebp
jmp
pusha
xor
cmp
fs
add
sti
push
jle,pt
fadds
iret
mov
sbb
idivb
jmp
js
mov
jns
or
pusha
lods
xlat
jg
int
lcall
push
xchg
hlt
sub
lea
outsl
xchg
shrb
cld
and
jne
cld
or
push
icebp
push
mov
xor
rol
popa
xor
xchg
xorl
mov
xchg
xor
jne
or
push
andb
jmp
out
mov
inc
movsl
lret
sub
mov
sti
aad
sbb
dec
sbb
adcl
ds
into
pop
inc
fwait
js
ljmp
jae
rcr
es
loop
mov
cwtl
push
leave
dec
lretw
outsb
pop
push
jnp
ds
xchg
shrb
push
add
xchg
stos
dec
fnsave
outsl
pop
mov
and
adc
push
xor
test
fcoms
mov
shlb
adc
sbb
test
out
mull
push
mov
mov
jmp
insb
stos
aas
movsl
movsl
pusha
leave
mov
cli
ds
push
decl
cmpb
nop
test
fsubrl
cmc
pusha
and
mov
xchg
test
mov
pop
shll
adc
sub
test
mov
ds
jge
std
ffreep
andb
mov
push
sbb
pop
jp
outsl
add
jecxz
inc
mov
adc
and
jle
mov
roll
sbb
pop
jmp
or
mov
out
add
mov
in
add
addr16
mov
jecxz
xchg
test
int
imul
in
mov
out
movsb
mov
sub
cmp
shrb
add
add
dec
test
xchg
pop
dec
fnstsw
xor
inc
ret
icebp
shlb
cwtl
clc
test
sbb
or
sub
or
pop
pop
push
and
push
aam
pop
neg
outsb
scas
fcoms
adc
or
fwait
mov
insb
pop
clc
int3
ljmp
int3
dec
push
add
mov
jge
pop
stos
lock
pusha
mov
or
mov
mov
xchg
cli
clc
sub
push
jle
dec
adc
repz
out
xchg
add
pop
pop
popf
fcmovnbe
dec
std
xchg
dec
pop
cld
pop
fwait
jno
rcrl
jl
movl
test
fcmovnu
cmp
insl
dec
pop
xor
popa
daa
mov
das
insl
cmc
pop
sbb
test
lret
cmp
int3
xchg
add
adc
ret
mov
inc
sub
sub
lock
adc
hlt
in
in
add
xchg
push
stos
mov
sub
sbb
mov
outsb
ret
xlat
dec
addb
fisubrl
movsb
mov
jns
das
pop
test
daa
lds
hlt
fisttps
add
shll
fldenv
sub
adc
fwait
cltd
cmp
inc
test
mov
mov
adc
addr16
push
jne
ss
ficompl
pop
add
sbb
testl
je
fistpll
push
pop
jne
cmp
mov
lock
mov
cltd
fldcw
subb
push
aaa
mov
movsl
insl
push
fldcw
mov
cmpb
lahf
cmpsl
inc
jecxz
dec
push
sahf
mov
inc
mov
fwait
and
mov
xchg
push
pushf
outsl
in
and
cmp
adc
jae
adc
or
test
cmp
mov
jne,pt
shlb
shlb
shl
mov
subl
mov
out
push
cmp
mov
xchg
lock
lcall
mov
inc
xor
push
jne
fsub
mov
outsl
mov
in
cmpsb
aaa
xchg
das
pop
mov
fs
inc
cld
aaa
dec
enter
inc
jecxz
sbb
subl
ja
test
cwtl
push
sbbb
add
out
js
nop
mov
movzbl
ret
sub
data16
aad
pop
sbb
pop
jo
add
jo
push
inc
dec
add
ljmp
pusha
pop
loopne
outsl
test
push
push
pop
js
inc
push
pushf
cltd
mov
leave
fistps
inc
push
push
cld
jl
xchg
sbb
fadds
push
sub
psubsb
push
xchg
insb
aas
pop
popf
mov
cmp
mov
xchg
xor
rcrl
jb
jmp
mov
pop
pop
jnp
aas
inc
push
push
cltd
cs
sbb
lods
in
pop
rcll
mov
jbe
mov
jae
mov
add
mov
popf
mov
jne
clc
imul
cmp
adc
xor
cmp
insl
push
mov
sub
add
in
popa
cmp
mov
inc
std
vmovq
pop
add
mov
xchg
mov
xlat
dec
fwait
clc
les
lea
xor
adc
pop
xchg
jl
subb
jle
mov
outsl
ljmp
ljmp
je,pn
push
pop
adc
cli
fisttps
into
jb
and
cmpsb
add
jne
dec
bts
out
repz
push
add
dec
dec
push
lods
loop
sbb
sub
into
cld
stc
ds
xchg
mov
pop
mov
in
mov
movsl
add
movsl
incb
push
or
mov
and
cwtl
test
or
aas
enter
dec
fsubrl
and
add
outsl
mov
adc
sbb
icebp
and
or
adc
jge
adc
les
jecxz
mov
shll
rorl
jl
fdivl
lods
outsl
and
fwait
sbb
in
cmpb
sbb
ret
out
dec
push
xor
das
adc
jle,pt
das
movsl
jmp
pop
push
gs
mov
pop
scas
je
cli
mov
adc
insb
repz
fmuls
out
or
cmp
push
imul
sbb
out
push
jns
sbb
jle
inc
sti
mov
push
js
push
jl
inc
sub
shlb
das
call
sbb
jp
and
mov
stos
call
xor
lock
jae
sti
jo
or
inc
inc
hlt
mov
jns
in
fdivrp
lods
cli
push
in
add
jno
stc
jbe
or
les
mov
lods
stc
sbb
add
mov
aaa
push
cmpb
fstpt
mov
pop
mov
sub
inc
hlt
add
inc
inc
and
fstpt
lahf
push
cmp
add
out
std
sub
sub
fstpt
decb
andl
lods
mov
fists
leave
mov
ret
fwait
push
pop
outsl
sub
cmpb
mov
mov
imul
popa
sub
push
outsl
rcll
push
lea
clc
mov
inc
dec
out
inc
adc
push
clc
lods
fsubrs
xchg
push
fidivl
mov
mov
sbbb
inc
cmova
mov
cli
shlb
cmc
popf
adc
fdivrl
pop
sub
inc
mov
cltd
fs
mov
adc
jne
jno
pop
orb
insb
adc
push
imul
mov
sub
pushf
push
test
sub
and
add
shl
inc
sbb
mov
adc
cwtl
cmpsb
lock
sbb
xchg
jb
push
sub
add
lea
jecxz
pop
sbb
add
ds
adcl
push
lods
mov
cmp
pop
loop
or
xor
xchg
push
or
sbb
rcll
les
ficompl
insb
loopne
adc
lds
sti
or
sarl
ret
scas
mov
ljmp
pop
mov
mov
mov
mov
push
in
movups
stos
mov
es
mov
dec
hlt
icebp
mov
stos
sbb
lds
mov
inc
dec
mov
ror
mov
sbbb
add
es
idivb
xor
fcoml
sub
sbb
and
pop
into
mov
insl
rolb
push
dec
mov
mov
jno
inc
outsb
xor
jmp
inc
jno
cmpsl
mulb
add
popa
fbstp
cmpsl
jno
pop
dec
jle
mov
sbb
pop
repnz
pop
movsb
inc
lret
outsl
mov
je
jb
or
xorb
sbb
xchg
cmpsb
jmp
and
hlt
xorb
cmpsb
popf
sahf
aam
fistps
rorl
in
call
ds
adc
mov
dec
or
dec
mov
jo
je
fistpll
fistpll
cmpsb
mov
add
cwtl
mov
add
inc
sub
jecxz
or
adc
xchg
mov
and
sub
and
imul
pop
outsb
and
cmp
dec
push
sub
imul
leave
mov
mov
push
outsl
fucomip
iretw
jp
dec
notl
notb
aaa
dec
sub
pusha
xor
mov
pop
jns
sub
es
pop
icebp
xchg
jno
dec
jl
imul
add
fidivs
sub
adc
stos
int3
cmp
loope
inc
pop
mov
ret
cld
test
outsl
sbb
insl
lods
add
mov
sub
inc
dec
mov
pop
imul
push
sub
imul
adc
or
fisubrl
in
jo
sti
scas
or
leave
xchg
stos
fdivrp
imulb
xor
cmp
xchg
ljmp
mov
test
sbb
mov
shl
fiadds
cmpl
ljmp
iret
lock
ds
ss
outsb
inc
cld
inc
adc
daa
cmpb
jecxz
adc
adc
jge
dec
imul
or
in
xchg
or
xchg
sbb
movsb
outsl
cli
sub
adc
push
aad
call
aam
sbb
inc
mov
or
sbb
mov
xchg
mov
pop
rorb
sti
imul
mov
lcall
jecxz
test
or
decb
popf
jecxz
inc
xchg
xchg
mov
dec
mov
pop
outsl
aaa
mov
mov
mov
mov
xchg
mov
sub
dec
clc
push
in
shlb
push
int
shl
mov
lcall
push
adc
std
cmp
jb
cltd
jecxz
fdivr
pop
cmpsb
push
add
cmp
fistps
repz
inc
pop
aad
xor
add
jmp
or
or
test
int3
insb
xorl
mov
pop
pop
xchg
jle
arpl
fwait
inc
add
mov
add
push
jecxz
sub
repnz
loope
in
cmp
pop
mov
sarl
dec
je
loopne
fsubrs
ficoms
int
or
sbbl
dec
xor
jbe
push
cmp
xor
fwait
call
aad
sub
cmp
fmull
dec
std
and
testb
and
add
mov
mov
cmpps
jg
aad
inc
dec
fmull
sub
pop
cs
lahf
cmp
filds
mov
sub
cmp
movsl
cli
adc
inc
mov
test
addr16
push
inc
loope
push
or
inc
aaa
adc
dec
sbb
dec
mov
pushf
adc
sahf
mov
push
lock
push
inc
sbb
lcall
mov
rorb
pop
cmp
dec
jb
enter
mov
sar
lret
ficompl
push
rclb
push
shr
mov
sahf
fidivl
jmp
pop
les
jmp
dec
jl
add
adc
jg
stos
pop
or
jmp
xor
mov
ja
jge
idivb
xor
sbb
mov
push
fs
das
out
jae
insl
cmp
hlt
push
mov
pop
mov
mov
mov
push
push
js
xchg
jecxz
xchg
xchg
jbe
cltd
lea
cmp
inc
hlt
mov
lds
sbb
das
push
pop
out
dec
or
stos
repz
add
jo
sub
leave
push
adc
fistl
test
or
nop
pop
adc
aaa
adc
jnp
jae
sbb
inc
cmp
ficompl
and
loopne
push
mov
jbe
adc
push
fucomp
rclb
sahf
adc
imul
adc
ljmp
pop
fsub
xorl
inc
push
ret
mov
imul
mov
jp
mov
mov
call
xor
mov
jmp
das
cmp
std
dec
mov
and
mov
inc
ds
push
daa
shr
push
xlat
push
psubq
jg
mov
fnsave
xchg
adc
or
add
cmpsl
cmp
fwait
bound
mov
test
push
jb
imulb
icebp
push
fdivr
outsl
js
push
xchg
pop
leave
mov
iret
pop
test
loop
mov
and
inc
test
movsl
sbb
arpl
addr16
cmp
mov
icebp
lret
cmpb
jbe
mov
mov
js
mov
stos
stc
xchg
aam
push
add
mov
xchg
push
sbb
pop
mov
or
or
jbe
stc
rcrb
cmp
add
stc
je
div
popf
adc
das
mov
nop
shlb
add
es
jo
in
sti
loopne
push
and
dec
mov
sarb
adc
cmp
imul
jle
mov
pop
inc
inc
add
xor
incl
int
subl
jbe
aam
das
and
dec
dec
jp
jl
push
push
ja
jg
jns
pop
pusha
ss
or
pusha
mov
xchg
mov
test
call
std
dec
mov
and
shlb
stc
dec
adc
jle
sbb
jle
fcomps
or
jo
push
push
out
popa
mov
pop
mov
pop
inc
out
or
adc
cmp
push
mov
sbb
inc
xchg
fcmove
cmp
les
inc
adc
int3
stos
jmp
or
push
test
incl
jns
repnz
and
icebp
decl
add
mov
adc
xor
sbb
addr16
or
js
lods
loope
push
lahf
pop
mov
daa
test
rcll
lock
movsb
fnsave
cmp
push
mov
movsl
int
call
dec
mov
ret
outsb
push
jnp
mov
mov
push
mov
cmp
stos
and
push
les
and
int3
arpl
adc
inc
aad
fldl
pop
test
adc
addr16
sub
jnp
movsl
incb
adc
daa
mov
mov
add
ret
inc
pop
test
pop
ss
xor
scas
inc
mov
sub
call
jbe
cld
mov
test
pop
mov
cmp
out
jbe
jecxz
push
icebp
mov
ret
movsb
mov
das
popa
std
and
sbb
xor
mov
cs
lods
mov
fstpl
cwtl
pop
hlt
jbe
dec
xchg
jo
sbb
xchg
subb
sbb
andb
mov
xlat
or
pop
ret
mov
addr16
mov
rcr
bound
icebp
xchg
loopne
ljmp
add
jg
decb
inc
hlt
pusha
or
stc
jecxz
jo
jp
pop
xchg
out
or
lret
cs
push
push
push
lods
adc
repnz
das
mov
fs
inc
mov
divl
das
inc
mov
movsb
adc
gs
add
and
fnstcw
fisubrl
pusha
cmp
inc
lock
adc
add
stos
dec
stos
decb
ret
add
add
xchg
imul
add
xchg
ja
aam
and
adc
mov
xchg
and
scas
popa
shll
jmp
lock
xlat
lahf
les
loop
or
das
sbb
add
pushf
popf
add
sti
dec
fcmovnb
out
xor
fldlg2
dec
and
fiaddl
xchg
in
lds
add
nop
flds
into
xor
pop
pop
mov
inc
loope
fstpl
sbbl
lret
jge
inc
add
idiv
pop
cmpsb
ficoms
movsl
xchg
in
test
cmc
and
sbb
mov
push
fsts
mov
dec
mov
test
cmp
ret
pop
vshufps
mov
popl
add
xchg
sub
rolb
adc
outsb
sbb
cmpsb
dec
inc
fisubrs
in
imul
notb
add
loope
lods
lret
ss
sbb
loopne
rolb
mov
test
push
sub
ss
inc
test
incb
mov
dec
cs
inc
mov
movsb
xorl
xchg
call
mov
inc
repnz
data16
mov
sbb
pop
dec
leave
filds
stos
adc
sbb
and
add
and
pop
clc
faddp
fidivl
out
pop
lret
stos
pop
shrb
pusha
sbb
jne
aas
shrb
cmp
jo
orb
or
clc
shrl
js
ficoml
les
sahf
cmp
mov
pop
push
inc
mov
shll
xchg
fadds
adc
pop
dec
roll
lret
out
pop
fmuls
mov
and
in
lea
pop
in
sub
sti
fidivs
sarl
lds
or
jne
das
std
push
movsb
dec
mov
sub
insb
adc
sbb
push
inc
int
sbb
pop
lea
and
imul
push
iret
out
pushl
test
add
inc
adc
and
adcb
mov
cmp
jp
mov
outsl
push
dec
xor
repz
push
or
cmp
popf
cmp
mulb
inc
mov
push
das
rcrb
sub
sbb
push
shlb
inc
xchg
inc
movsb
sbb
push
test
sbbl
call
add
movsb
pop
scas
push
jge
pop
dec
out
into
loope
pop
ret
xchg
and
mul
gs
loopne
insb
or
and
dec
jb
jmp
cwtl
pusha
add
movsl
jo
xchg
js
movsb
fstpt
xchg
arpl
rorb
mov
clc
inc
repnz
inc
loop
cwtl
cmpsl
test
lea
mov
mov
testl
aaa
add
popa
imul
les
pop
mov
mov
ss
jae
or
adc
movsl
shrb
aad
add
or
in
loopne
sub
repnz
adc
add
mov
pop
dec
testb
shrl
pop
test
fcmovb
insl
mov
jmp
lods
lret
movsl
mov
add
pop
pop
cld
ja
or
pop
aad
cmp
sbb
aad
jnp
mov
test
mov
pusha
inc
mov
ret
repz
jns
or
sub
dec
nop
or
adc
xchg
scas
loop
testb
addb
rorl
out
xchg
pop
rcrb
jno
cwtl
bound
cltd
call
xchg
mov
or
mov
xchg
xchg
lcall
xorb
fabs
sbb
jle
sub
cmpsb
and
pop
inc
shlb
rorb
push
xchg
pop
fmull
fcoms
jmp
outsb
mov
inc
repnz
or
adc
inc
pushf
jbe
and
lods
add
cltd
loope
les
push
jb
pushl
test
mov
push
pushf
mov
outsl
mov
sub
cltd
dec
mov
icebp
es
push
scas
vpmaxub
clc
or
mov
add
adc
cmp
adc
or
aaa
jb
stos
and
pop
mov
xor
mov
lock
jecxz
int
into
inc
push
mov
add
lods
fstpl
cmp
mov
mov
mov
mov
push
shlb
adc
clc
push
std
insl
jae
inc
dec
stc
xor
mov
shrl
loope
or
inc
adc
stos
loope
inc
xchg
xor
es
int3
adc
out
inc
adc
jg
mov
js
cmp
push
nop
test
lods
fstpt
push
lahf
es
mov
flds
mov
pop
mov
cmpsl
dec
out
adc
xchg
sbb
addr16
lock
cmp
test
xlat
push
xor
icebp
jbe
jp
push
in
jecxz
sub
test
aad
mov
imul
add
mov
push
mov
mov
or
loop
jp
jp
test
jmp
pop
or
js
mov
push
in
mov
in
lcall
cmp
mov
sub
mov
fucomp
out
clc
mulb
adc
pop
dec
imul
call
test
cmpsb
ret
ljmp
pop
mov
jp
adc
inc
sbb
mov
insl
jmp
rclb
xchg
pop
sbb
loope
xchg
lock
gs
lcall
jno
fstps
sub
pop
mov
cmp
mov
inc
cld
inc
les
mov
and
ja
in
mov
icebp
adc
xor
dec
mov
test
nop
outsb
out
shrb
lods
icebp
inc
xchg
push
aaa
adc
pop
imul
movsl
xchg
mov
jo
cld
or
test
push
jo
das
or
fldt
jle
pop
dec
shlb
je
push
lret
insl
sub
push
lret
jbe
aaa
adc
stos
push
std
push
pop
xor
push
test
mov
fcoml
jl
movaps
or
dec
mov
or
clc
aas
sbb
or
adc
fstpt
push
jmp
paddsw
push
mov
or
stos
pusha
xor
and
xor
sarl
jg
mov
and
sbb
mov
sbb
aam
mov
adc
cwtl
pop
das
or
inc
sbb
ficoms
frstor
xchg
push
stos
in
and
loope
outsl
sbb
cli
add
sub
xchg
xchg
sub
push
cmp
test
test
xchg
mov
loop
pop
push
fs
inc
ja
xor
push
jmp
sti
inc
sub
mov
in
xor
test
ret
push
lods
lock
push
shl
pop
cwtl
in
hlt
inc
push
decb
aam
fsub
add
dec
inc
ss
mov
stos
mov
and
inc
icebp
ret
push
ss
dec
rcr
jg
push
push
stc
incb
pop
adc
or
sbb
and
jg
aaa
pusha
pop
sub
cmp
sbb
cmpsl
add
inc
sub
insl
pop
and
outsl
push
shl
lcall
xchg
sub
push
es
inc
inc
into
leave
sbb
inc
xor
mov
pop
test
fs
ficompl
sar
sbb
jbe
jmp
mov
scas
jne
push
in
lock
lret
push
adc
and
push
scas
clc
test
mov
push
inc
cmp
lahf
sub
cmp
jo
iret
insl
fstl
adc
cmpsl
or
mov
iret
shrl
sub
inc
les
xchg
movsl
mov
dec
or
jp
leave
push
pop
mov
and
loope
mov
test
lret
data16
dec
mov
push
and
andl
clc
pusha
outsb
cli
inc
cmp
mov
jbe
inc
add
out
call
mov
inc
aaa
push
rorb
jne
adc
jl
enter
clc
push
ja
sub
mov
xlat
and
pop
daa
rorl
dec
insb
das
in
loopne
dec
lcall
and
or
call
ret
andl
add
popa
jbe
jge
imul
int3
ljmp
fstpl
or
pop
xchg
push
ret
jge
jno
xor
clc
pop
sbb
das
imulb
lock
xchg
mov
adc
xor
insb
mov
ja
xadd
add
adc
lcall
fnsave
mov
test
lods
push
sbbl
mov
stc
arpl
fnstsw
jo
and
pop
mov
add
pop
dec
test
and
sbb
dec
or
lahf
mov
inc
mov
add
fwait
pop
dec
pop
mov
pop
mov
out
pop
mov
ror
or
push
mov
out
pusha
lods
test
addl
adc
movsb
and
pushf
xlat
lcall
pop
or
es
sbb
pop
jg
notb
out
jo
jo
add
mov
dec
cwtl
call
mov
dec
das
loopne
in
ljmp
sub
xchg
push
dec
lea
adc
les
mov
mov
popa
les
sti
sbb
loop
lcall
fdivl
inc
test
xchg
or
movsl
mov
cli
fisttpl
in
inc
or
or
ret
jb
stc
push
in
or
adc
call
jl
pop
pop
scas
mov
cmc
inc
aam
or
inc
imul
pop
xchg
xchg
lcall
cs
xchg
popa
mov
mov
ja
mov
xor
int
pop
negl
jmp
cld
lods
sbb
mov
jg
push
inc
les
pop
rcl
sub
idiv
lea
xchg
pop
dec
fstps
lea
in
adc
hlt
mov
fbstp
xchg
or
push
xchg
outsb
fwait
dec
loopne
mov
dec
sub
stos
mov
fcmovnb
push
sub
adc
aad
push
fdivl
cltd
testb
mov
stos
repz
scas
xor
loopne
fists
cwtl
mov
arpl
scas
or
xchg
mov
push
mov
cmp
dec
testl
inc
fildll
dec
or
mov
mov
push
rolb
sbb
test
mov
test
xchg
mov
dec
jle
pop
cmc
test
xor
out
cmpsl
mov
fadds
cmpsb
mov
aaa
push
in
mov
sbb
cmp
test
test
sbb
push
mov
mov
add
out
sbb
and
fstpt
gs
or
repnz
dec
jae
arpl
pop
jp
js
enter
flds
scas
adc
push
cmp
xchg
or
push
or
sub
dec
mov
cmp
lods
inc
loope
dec
ljmp
cmp
mov
add
pop
roll
fisttps
icebp
and
or
adc
das
xlat
sub
mov
xlat
ja
xchg
push
jecxz
pop
stc
push
dec
mov
es
ljmp
fldenv
jp
and
sbb
xor
push
clc
mov
inc
pop
scas
loopne
mov
add
std
inc
mov
popa
test
mov
jb
imul
mov
out
ficompl
std
xor
pop
scas
mov
pop
fdivs
out
push
mov
inc
es
xchg
cmp
push
and
aas
das
shl
aaa
sub
sti
repz
xor
imul
push
and
lret
inc
not
cmp
sti
mov
sbb
add
mov
fidivrl
test
sub
push
push
dec
bnd
lock
inc
ret
mov
and
call
sbb
mov
xchg
and
int3
push
lea
lret
jle
push
pop
cltd
lret
cmpsl
sub
xchg
adc
ret
mov
js
imul
aaa
shl
cs
clc
push
cltd
push
adc
xor
in
lods
movsl
in
cmp
js
adc
push
sarl
fstpt
add
dec
mov
pop
test
xchg
adc
xor
inc
and
add
decl
ja
lods
sbb
aas
sti
cmc
sbb
fisubrs
jle
add
adc
push
pop
idivl
mov
ss
push
cmp
cmpsb
or
in
and
fwait
lock
pop
lds
leave
add
pop
outsl
fiadds
rcl
out
test
sbb
mov
xchg
inc
xchg
and
adc
cs
cmp
shl
xchg
out
xor
shlb
and
stc
xchg
adc
call
addr16
ret
decl
fmul
orb
adc
and
push
cmp
mov
leave
in
jg
inc
pop
mov
add
stos
fsubr
add
shrl
sub
xlat
jmp
fcmovnu
imul
xor
xchg
push
push
cmp
sbb
fsts
or
push
frstor
dec
scas
pushf
mov
or
xor
jle
push
sbb
and
mov
mov
jg
mov
fisubl
sbb
jle
jg
push
outsl
ja
xor
push
dec
push
xor
lahf
push
or
out
cs
mov
fistpl
push
push
pop
dec
sarl
cmp
cmp
jge
rcrb
adc
mov
sbb
ljmp
inc
mov
xchg
lods
test
push
call
and
dec
sbb
lods
lahf
lcall
ficoms
push
adc
mov
nop
fwait
rcl
mov
jg
test
mov
clc
or
mov
cli
push
icebp
add
fldt
mov
mov
mov
mov
push
mov
push
inc
add
sub
push
sbb
daa
sub
popf
lock
add
idivb
decw
enter
mov
xor
int
test
out
inc
rcr
gs
mov
add
loope
xchg
mov
pusha
cmp
call
icebp
loop
inc
bound
mov
shlb
jle
or
dec
jg
pop
mov
cmp
jnp
dec
in
fwait
stos
and
loope
push
xchg
fadds
push
mov
push
pop
aad
mov
mov
nop
or
rorb
mov
into
sbb
xchg
sub
or
mov
movsb
mov
ficoms
mov
lock
push
push
and
mov
add
jp
and
jbe
mov
shll
aad
xchg
push
or
movb
sub
ljmp
adc
cwtl
push
push
test
inc
push
lcall
push
mov
scas
insb
add
mov
push
aam
lods
ja
rol
test
dec
arpl
ss
xchg
or
xchg
xor
sub
xchg
aas
mov
add
and
sub
jl
outsl
insl
aam
adc
rcrb
je
pop
sub
test
adc
sbb
mov
pop
fidivrl
fcmovnbe
in
ss
clc
or
xor
mov
push
pop
imul
cmc
push
rcll
lods
xchg
mov
inc
and
loop
das
clc
cmp
aas
inc
jnp
sub
adc
js
sub
popf
mov
mov
cli
cmc
push
nop
shrl
in
fucomip
imul
test
mov
inc
mov
mull
loop
sub
adc
jae
aad
out
jg
push
jns
jecxz
test
push
dec
enter
mov
mov
pop
rorb
icebp
insl
push
pop
add
clc
xchg
cmp
inc
pop
out
loope
cmpxchg
or
data16
push
or
movsl
loope
mov
mov
adc
adc
add
mov
jg
je
shlb
scas
or
pop
jae
icebp
pop
lods
je
imull
add
mov
out
mov
pop
cld
fsubrl
les
pushf
xor
movsb
push
ret
mov
add
ljmp
iret
jg
add
into
je
iret
je
fs
xor
push
push
mov
das
mov
jmp
or
fisttpll
ret
xor
cmp
pop
in
mov
jne
sbb
mov
mov
sub
cmpsl
xchg
sbb
out
lods
ss
dec
or
out
ret
decl
rclb
pop
dec
jno
in
cmc
outsl
cld
jae
int
push
jp,pn
lcall
test
iret
or
insl
ror
dec
jl
cmp
mov
xor
ljmp
cli
sbb
sub
mov
cmc
ret
shll
pop
mov
cmp
std
out
call
stos
iret
cmp
stos
aam
sub
imull
outsb
movsb
cmpsb
cmp
aam
and
mov
jmp
and
jge
add
push
outsl
mov
sub
leave
mov
test
jle
lcall
xchg
adcl
in
cld
cmp
test
movsb
test
or
dec
lock
outsb
xchg
call
push
adc
loope
xchg
ret
mov
jno
pop
inc
dec
adc
mov
pop
in
aam
or
xor
or
cwtl
pushl
and
or
pop
push
sahf
xor
inc
or
out
inc
add
sti
pop
mov
cmp
in
movsl
mov
mov
push
dec
subb
jae
push
fimull
leave
adc
inc
loopne
rorl
mov
xor
nop
mov
data16
loop
adc
insb
sbb
std
idivb
push
repnz
jle
jle
ljmp
and
imul
add
inc
es
data16
pop
push
sbb
cli
ljmp
lcall
dec
push
adc
push
subb
mov
or
sbb
fcmovnu
ljmp
pop
xor
inc
cmp
push
in
sbb
push
xor
test
cltd
mov
test
jne
mov
je
mov
loopne
je
je
xorl
xor
pop
inc
jmp
inc
add
out
mov
lds
mov
test
iret
xor
xor
repnz
insl
mov
aad
rorb
or
lret
ret
dec
rorb
in
inc
std
outsl
lea
pop
sahf
pop
jno
pop
mov
jmp
faddl
pop
clc
sub
testb
insl
cmp
pop
dec
and
xor
sbb
clc
lahf
cmpsb
and
inc
test
mov
jae
add
clc
loope
add
push
popa
fldenv
cmpl
das
jl
decl
flds
insb
ret
add
xor
fdivs
cld
aaa
adc
jl
movsl
test
mov
ljmp
jle
add
imul
mov
cmp
push
out
cld
xorb
mov
sbb
lahf
aam
hlt
cmp
mov
mov
sbb
dec
outsl
mov
and
or
jbe
jmp
pop
sub
addr16
cmp
mov
addl
mov
insl
and
push
stos
dec
test
pop
clc
ss
popa
add
movsl
push
bound
sub
fistpll
fdivrl
xor
lods
mov
lcall
xchg
cld
fists
es
int3
or
adc
lods
shll
mov
mov
sub
adc
pop
cli
sbb
std
xchg
lcall
ds
out
stc
xchg
in
xchg
adcb
adc
sub
iret
pusha
xlat
stos
rcll
mov
cmp
pop
outsl
iret
push
mov
add
dec
jne
and
add
incl
xchg
insl
bound
in
inc
jge
inc
dec
mov
adc
jge
jnp
sub
js
sbb
cli
filds
mov
jl
stos
fsubp
sub
shr
mov
stos
pop
dec
pop
enter
ret
loopne
pop
cmp
cmp
cs
adc
cmc
mov
ret
adc
xchg
ror
out
inc
outsl
push
pop
fsts
jmp
xor
sarb
icebp
mov
adc
rcrl
mov
in
xchg
or
dec
jg
pop
mov
aaa
mov
or
call
cmpsb
sti
outsb
out
xchg
and
inc
scas
or
mov
cmp
inc
rolb
fadds
dec
dec
cmp
dec
hlt
jbe
mov
stos
add
adc
fadd
jle
data16
fsubs
dec
pop
push
dec
mov
ds
movsb
adc
sbb
std
mov
inc
cltd
jae
mov
stos
popa
add
pop
mov
add
test
inc
lea
paddw
ljmp
lock
dec
inc
cwtl
inc
sub
inc
lea
xchg
ja
call
sbb
cmp
pop
out
loopne
stos
xor
pop
or
pop
sub
cmp
mov
test
jge
dec
mov
or
dec
mov
aaa
push
xchg
xchg
sbb
mov
add
repnz
add
das
insb
aam
mov
idivl
mov
dec
xlat
iret
sarb
adc
sbb
aaa
ja
mov
pop
in
andl
ljmp
mov
imul
lds
movb
addl
sub
inc
outsl
mov
xchg
inc
fwait
cmp
mov
dec
pusha
arpl
test
aaa
ret
or
lea
xchg
add
insl
mov
mov
xor
rolb
push
aas
loopne
xchg
cmp
enter
outsl
inc
sub
arpl
icebp
mov
arpl
scas
sub
jecxz
push
xchg
and
mov
xchg
incb
aaa
mov
icebp
fisttpl
jge
dec
jmp
movsb
push
push
jae
mov
iret
int
mov
into
sbb
mov
pop
mov
mov
pop
hlt
int
fistpll
nop
into
fstps
iret
xchg
outsl
loopne
mov
or
popa
jnp
inc
xchg
aaa
push
add
lret
fnstsw
aas
mov
and
add
inc
mov
pop
stos
dec
fstpl
mov
adc
arpl
sbb
dec
mov
lret
insb
test
adc
popa
push
aad
sub
inc
ljmp
sbb
adc
es
mov
nop
out
add
inc
sbb
push
call
xchg
cltd
andnps
mov
push
push
pop
xor
add
fistpl
leave
fwait
sub
push
pop
push
fs
mov
js
jge
adc
stos
sub
xlat
pop
sbb
aad
mov
cmpsb
mov
popa
cmc
jg
mov
lahf
stc
adc
mov
addr16
ljmp
sbb
pop
fistl
push
or
lret
loop
and
cmp
push
daa
mov
lret
push
pop
sarl
insl
int
icebp
adc
and
dec
adc
and
stc
push
aas
scas
and
jg
ret
push
xchg
adc
hlt
out
push
xchg
mov
repz
incb
rcll
mov
add
inc
hlt
lcall
push
push
push
jno
inc
sbb
daa
or
cmp
out
dec
mov
loop
sbb
xchg
inc
push
icebp
clc
movsl
pop
clc
add
fnsave
xchg
or
dec
and
jne
andb
pop
loope
bound
in
enter
and
je
lods
push
add
cs
das
fimuls
test
outsb
xlat
mov
jno
xchg
push
push
aaa
fisubrl
es
addr16
out
mov
hlt
mov
cmc
inc
fildl
popf
vmovups
fidivrs
mov
popa
sub
and
in
arpl
aaa
jne
sbb
mov
inc
pop
mov
fstl
cli
addb
xchg
sbb
xchg
jbe
fistpll
into
mov
xchg
pushw
dec
cld
jnp
andb
mov
jecxz
andb
mov
adc
and
or
xor
mov
xor
scas
mov
bound
lods
repnz
mov
mov
or
lcall
mov
shrl
bound
test
jmp
mov
xorb
sub
xchg
mov
cmp
cmovae
mov
adcl
sbb
jmp
cltd
sbb
jb
int3
gs
addl
dec
sbb
sub
jbe
insl
scas
movsl
test
aaa
pushf
dec
mov
pop
inc
adc
dec
lods
mov
addl
pop
bound
cmp
stos
insl
loope
push
xchg
pop
loop
gs
decb
mov
adc
pop
ret
mov
jge
pop
xchg
imul
hlt
and
pop
fisubrs
jo
call
sbb
push
xor
incb
mov
fstl
mov
loop
lods
shl
shrb
shll
jl
enter
pop
mov
or
adc
pop
insb
sub
adc
pop
xor
lods
dec
cs
into
sub
and
mov
ja
ljmp
xchg
jne
jl
xor
pop
and
fwait
or
aaa
cmc
pop
add
mov
mov
lods
stos
inc
sub
test
je
push
inc
xor
mov
and
sti
add
sti
ret
mov
xor
mov
cmc
push
jne
inc
setnp
mov
jp
test
or
and
std
out
clc
mov
aad
rcll
aam
cwtl
aad
test
add
cld
mov
and
jo
and
or
sbb
rcrb
xor
ret
outsl
and
push
xchg
cmp
mov
jmp
jo
sbb
add
adc
sbb
adc
xor
mov
aam
xor
sbb
sbb
xchg
mov
into
pop
cmp
dec
and
pop
add
ss
cltd
adc
jnp
imul
movsb
sbb
fildl
xchg
push
call
adc
mov
push
push
sub
jbe
jg
jbe
pop
out
xchg
cmp
dec
push
fs
mov
mov
push
inc
les
fidivs
sarb
loope
roll
sub
mov
sub
adc
shrb
mov
int3
decl
pusha
movsb
rcll
inc
in
dec
adc
ljmp
and
add
sub
mov
shrd
sub
adc
das
jno
and
and
ljmp
and
outsl
mov
pop
pop
push
adc
dec
test
test
mov
ret
xor
and
cld
and
cli
jbe
shrl
xchg
popa
push
mov
incb
push
aaa
scas
add
sbb
je
data16
in
push
shrb
lea
sbb
jbe
push
push
sub
testb
pop
mov
shrl
fildl
hlt
mov
mov
call
fsubrl
sbb
xor
or
pop
inc
inc
fwait
test
push
sub
insl
add
push
pop
xor
mov
mov
dec
sub
ret
mov
ljmp
mov
movsl
jae
adc
xchg
add
dec
mov
ja
pop
mov
cltd
inc
sub
out
outsb
mov
mov
jle
jno
cs
test
scas
lcall
inc
lcall
dec
push
mov
push
or
iret
and
cli
fcomps
stos
pop
mov
aaa
push
cmp
or
lret
xor
ret
push
aas
loopne
adcl
push
jmp
xchg
fisttpl
jno
xor
.byte
clc
fdivr
push
mov
add
mov
pop
ret
or
push
push
push
call
incl
sub
or
push
pushl
or
inc
es
sub
in
jg
daa
xor
inc
bound
push
or
xchg
and
inc
addr16
jns
loopne
and
mov
add
push
or
and
in
jle
add
push
daa
out
dec
mov
in
jg
push
sbb
popa
adc
outsb
enter
in
and
stos
push
pop
jb
in
jl
mov
in
mov
or
pop
lock
sub
mov
ds
mov
sarb
push
jno
nop
int
das
movl
push
and
lret
or
ds
add
jns
dec
push
outsl
xor
xlat
mov
push
pop
dec
testl
xchg
outsb
inc
dec
fs
popa
rolb
lods
push
into
loopne
adc
idivl
cmp
lea
outsl
adc
shl
push
mov
xor
adc
or
stc
xor
add
push
push
push
xor
push
roll
inc
sti
adc
xor
xor
jnp
xor
or
xor
push
insl
sub
add
ja
and
hlt
push
push
vpsubsb
pop
adc
in
push
js
add
sbb
or
addb
xchg
in
dec
jb
push
lea
jg
adc
xlat
mov
dec
xor
cmpsl
fstl
movsl
scas
pop
mov
popf
pop
add
jl
or
mov
push
insb
gs
and
hlt
sbb
call
inc
jne
leave
mov
out
fisttps
mov
sub
jl
cli
xor
sarb
call
lea
jb
mov
lret
push
ret
pop
fisttpl
sbb
cld
xchg
loopne
outsb
jne
and
in
nop
mov
push
or
push
pusha
mov
adc
call
call
xchg
xchg
cmp
pop
mov
push
push
pushf
add
incl
lock
dec
inc
adc
sub
push
and
rclb
roll
adc
subl
clc
push
or
je
ljmp
xchg
push
mov
mov
push
add
lods
pop
popa
dec
dec
daa
mov
jno
sub
pop
movsb
adc
jb
push
jg
jmp
into
and
adc
xor
or
xchg
cld
cmp
mov
daa
adc
mov
sub
push
mov
call
add
lret
insb
add
jbe
jle
mov
push
sub
sbb
add
insb
add
or
push
mov
pop
mov
add
sbb
inc
and
dec
inc
cmp
push
inc
rolb
sbb
in
icebp
shll
movsb
addl
xchg
test
pop
sbb
cli
push
and
inc
iret
push
inc
hlt
mov
mov
add
sti
cs
sbb
xor
pusha
sbb
es
sbb
mov
rclb
mov
jno
inc
hlt
cs
adc
xlat
stos
repz
add
cmp
mov
mov
mov
sti
push
push
sub
xchg
in
xlat
in
paddd
push
push
dec
add
or
dec
pop
xor
fisubrl
ds
inc
push
addr16
sbb
frstor
or
or
xor
aaa
mov
loope
inc
cmp
cmp
lds
xor
push
fs
gs
xchg
pop
jecxz
jecxz
lahf
add
push
aad
decb
or
addr16
bound
fadd
xor
imul
enter
stc
and
inc
xchg
and
push
scas
fdivl
and
add
jb
mov
and
rorl
insl
shrl
and
inc
pop
and
jle
and
shrl
pop
aad
int
sub
push
out
testb
add
bound
repz
inc
sbb
mov
fs
push
adc
ret
in
fldcw
daa
js
fs
adcl
sbb
out
or
popa
lock
sti
push
mov
es
push
dec
cwtl
add
xchg
inc
call
cld
sub
add
mov
daa
push
cli
pop
imul
push
add
mov
or
test
push
arpl
mov
pushf
push
jle
in
xor
and
mov
and
inc
pusha
arpl
rclb
pushf
bound
cmpsl
lret
inc
xor
mov
in
nop
inc
mov
int
mov
add
jns
insl
gs
lahf
mov
and
imul
jmp
inc
add
orl
inc
pop
jmp
daa
adc
or
xor
and
andb
in
lea
cld
adc
and
dec
fdivs
xorl
push
leave
or
adc
adc
imul
pop
pop
int
sbb
jno
movsb
cmpsl
or
xor
push
xor
call
or
gs
addl
jle,pt
and
mov
mov
or
and
in
test
lea
je
pop
aaa
xchg
dec
inc
mul
push
aaa
dec
dec
ds
jno
in
and
loope
gs
dec
popa
xchg
in
ja
in
lock
xor
lods
mov
cmp
mov
pop
inc
outsl
and
push
adc
mov
cmp
dec
mov
sub
add
out
mov
pop
push
pushw
popa
push
or
ret
adc
lret
push
fdivs
sbb
or
pop
push
fsub
sar
cs
or
in
mov
xor
mov
push
mov
sbb
lret
sub
frstor
lock
or
push
jle
cmp
hlt
out
dec
es
mov
add
js
andb
inc
ss
push
repz
ljmp
push
xor
addb
xor
mov
cmp
in
fucomp
inc
jno
add
pop
rep
push
inc
enter
pop
cmp
mov
lods
test
jg
add
sbb
mov
cmp
pop
pop
adcl
mov
in
jo
push
add
aaa
push
xchg
nop
sub
or
daa
sub
xchg
stos
movb
imul
das
xchg
das
mov
jbe
xor
daa
fs
pop
loopne
jb
sbb
fs
or
orl
and
je
sbb
mov
lret
pop
pusha
in
imul
mov
hlt
mov
jnp
andb
sbb
sbb
outsb
inc
repnz
fistpl
sub
mov
and
add
cli
or
mov
nop
push
call
rorl
stos
or
pop
sti
inc
sbb
call
fldenv
jo
loope
dec
pop
adc
ret
nop
pop
subb
divb
jo
outsl
xor
inc
dec
ja
out
insb
daa
or
xor
ret
outsl
xchg
outsl
test
pop
or
es
mov
shrb
or
push
jmp
pop
iret
shrl
add
aad
fisttps
fs
push
adc
pop
and
test
push
adc
mov
ss
sbb
dec
andl
and
sbb
outsl
insb
dec
enter
push
xchg
cmpsl
test
in
jle
xchg
add
xor
es
jne
js
xchg
les
jl
stc
loop
inc
insl
inc
pop
push
fwait
sbb
adc
shrb
dec
scas
add
data16
ss
pop
jns
insl
push
cmc
enter
aaa
jae
jmp
inc
mov
jp
adc
xor
sbb
sbb
fidivrl
add
dec
adc
pop
push
mov
test
fcompl
sbb
popf
mov
push
push
wbinvd
sahf
or
movsl
fldenv
sbb
fists
shll
push
adc
push
imul
enter
or
mov
cmp
lcall
dec
push
push
pop
das
push
insl
mov
mov
and
push
ret
outsb
mov
test
adc
xor
push
cld
sti
pusha
lds
icebp
xor
xor
or
mov
mov
sub
jae
out
and
repnz
push
jle
int
nop
lea
sbb
fs
push
cwtl
add
je
push
popa
test
or
out
xchg
or
data16
nop
addr16
call
mov
or
jbe
addr16
pop
pop
add
lret
sub
mov
rorl
add
mov
or
xchg
fcoml
test
dec
ja
mov
ret
mov
dec
cld
pop
mov
and
inc
adc
rcll
add
and
xchg
adc
xchg
sbb
push
arpl
iret
push
cmp
fstl
or
incb
out
popa
inc
inc
enter
mov
inc
add
adc
push
and
test
test
cmovp
adc
jo
sti
shrb
and
xchg
loope
mov
sub
push
push
mov
loopne
lods
or
dec
xchg
shlb
ficompl
sbb
mov
mov
xor
shr
and
add
pop
iret
push
pop
jl
mov
in
lret
cmp
daa
dec
push
cmp
ja
enter
jno
push
sarb
dec
sbb
xchg
out
in
xor
add
adc
pop
subl
sbb
or
call
jg
int
aas
imul
imul
icebp
jge
and
pushf
xorl
inc
insl
xor
outsb
push
mov
nop
mov
cmc
jae
sbb
cmp
mov
and
jl
imul
pop
push
jge
clc
ds
fwait
pop
shrb
pusha
jnp
das
add
push
jo
push
nop
loopne
jo
adc
cmp
jl
mov
xor
mov
in
test
sub
test
call
sbb
inc
repnz
or
mov
or
clc
inc
mov
cld
sbb
loopne
pop
dec
das
pushw
js
inc
jge
and
call
addl
ret
leave
xchg
shlb
or
mov
and
mov
mov
lret
std
dec
push
dec
adc
jg
jo
mov
add
xor
mov
fistps
idivl
andl
xor
push
or
or
outsb
loop
jbe
sbb
inc
push
dec
outsl
nop
enter
push
xchg
lock
test
movsb
push
stc
fistpl
nop
cmpsb
sub
pop
mov
cmp
or
add
push
adc
jg
incl
pop
add
and
out
decl
mov
andl
push
inc
pusha
sbb
push
mov
rorl
xor
push
cmp
dec
addr16
mov
insl
fs
or
pop
fld
xor
in
imul
mov
mov
and
dec
push
fisttps
mov
sbb
in
call
lock
jnp
insl
or
xchg
push
iret
sbb
sub
movsb
mov
push
adcb
sbb
sbb
jb
nop
lea
lods
or
xor
push
mov
jmp
dec
loop
add
sub
add
fnstenv
push
xchg
dec
or
mov
add
push
push
push
clc
dec
and
sbb
push
xor
inc
js
or
pop
mov
adc
and
ss
call
cmc
into
mov
in
mov
movsb
movsb
sub
sbb
movsb
mov
cld
jno
stos
and
and
clc
pop
push
adc
or
loope
pop
fidivrs
movsb
notl
inc
dec
imul
add
pusha
pop
mov
push
sahf
push
insl
insb
dec
mov
cltd
or
jecxz
pop
pop
cmp
push
dec
push
jo
and
add
pop
mov
stos
repnz
cs
and
aam
adc
and
mov
setle
add
outsb
pop
adc
nop
adc
or
sbb
add
incl
incl
adc
les
dec
add
call
mov
mov
jmp
mov
mov
inc
inc
dec
or
jne
pop
inc
jp
push
add
sbbl
ja
xor
sahf
push
xor
rcll
sbb
aam
or
enter
mov
call
pop
aam
repnz
outsl
adc
add
add
lea
stc
fadds
sub
xchg
sbb
aaa
pop
jb
movb
dec
adc
iret
adc
mov
push
or
or
outsb
inc
arpl
ret
or
addb
mov
adc
mov
nop
lret
add
les
aaa
sbb
xor
add
shr
lods
lock
dec
aaa
push
dec
adc
aad
das
mov
jb
inc
dec
loop
xor
adc
push
add
out
or
xor
dec
inc
jp
mov
ret
outsb
dec
add
cmp
stc
add
bnd
inc
xchg
pop
nop
add
push
jl
rep
mov
roll
mov
out
or
push
sbb
test
xchg
rcl
movsb
xlat
mov
clc
mov
push
and
ljmp
or
xor
outsb
xchg
push
mov
pop
sub
pop
jbe
and
add
data16
orl
push
sbb
and
mov
fisubl
jmp
jl
cmpb
adc
inc
fs
pop
adc
sbb
add
sbb
in
add
repnz
and
insb
clc
mov
adc
rcrl
jnp
repnz
and
in
jbe
inc
inc
fs
add
push
xchg
js
jb
fdivrp
adc
test
and
addb
stc
addl
fwait
scas
pop
push
insb
outsb
loop
xchg
sbb
xsha1
cmpsb
mov
adc
pop
mov
cmp
into
outsl
shlb
les
mov
xchg
outsl
push
ja
pop
fsubl
or
adc
sbb
ljmp
add
in
fnstcw
popa
add
bound
add
mov
push
ja
scas
pop
dec
jne
adc
pop
sub
and
fwait
pusha
fld
js
inc
inc
and
sub
test
pop
mov
addr16
jbe
push
sbb
sbb
push
test
fs
sub
jb
sbb
pop
or
cmpsl
stos
or
rclb
add
cmp
jb
add
cmc
sbb
into
push
jnp
mov
dec
add
call
sar
xor
sub
and
and
jle
cmp
sub
push
and
leave
aaa
add
clc
out
add
in
test
cmp
dec
push
push
xor
es
pmaxsw
cli
push
add
hlt
loopne
push
lock
rorb
inc
arpl
lds
rolb
test
rolb
stc
push
add
xchg
mov
and
and
testl
push
into
adcb
shlb
jle
push
clc
lock
cmp
and
mov
mov
popf
fdivl
cmpsl
inc
or
xorl
das
lock
xor
pop
jo
xchg
loopne
loope
sub
pop
enter
aad
jae
dec
lds
stc
jo
in
icebp
adc
jmp
js
loop
ret
punpckhwd
add
push
aad
push
cwtl
lock
cmp
enter
or
dec
test
sahf
vminss
insb
dec
test
sbb
ds
sbb
and
sub
cmp
inc
pop
pop
or
in
sub
lea
loop
push
adc
xor
adc
cmp
pop
mov
push
outsb
or
push
and
setb
inc
je
add
sub
mov
aad
pop
jb
add
or
and
call
daa
sbb
push
outsl
mov
ret
out
adcb
and
sbb
adc
push
sbbl
jae
dec
jne
jo
data16
dec
outsl
dec
push
add
lcall
sub
xor
gs
ss
add
insb
inc
ja
push
add
push
push
push
inc
dec
incl
std
testb
dec
adc
imul
inc
cmp
xor
lcall
add
arpl
dec
push
inc
pop
dec
push
dec
inc
outsl
push
push
jg
cli
inc
push
push
push
popf
jo
push
insb
je
add
jns
insl
jb
mov
outsl
jbe
gs
outsb
cmp
imul
jb
call
incl
gs
imul
inc
cmp
push
add
jbe
std
imul
jo
add
outsl
inc
push
jo
dec
arpl
push
add
jg
jle
push
dec
push
push
test
imul
popa
insb
dec
inc
add
std
xor
and
inc
jns
add
js
js
sbb
ljmp
jbe
jbe
dec
inc
arpl
dec
inc
push
inc
pop
push
inc
inc
pop
push
push
inc
dec
pop
add
push
dec
outsb
sub
cmp
add
xor
push
insb
push
mov
dec
popa
outsb
fs
outsl
inc
push
inc
in
xor
xor
cmp
std
das
sbb
xor
js
js
aaa
xor
xor
mov
mov
inc
inc
push
dec
dec
add
inc
inc
push
call
dec
dec
push
add
dec
mov
dec
inc
push
data16
xor
xor
fstpt
lea
outsl
jb
gs
inc
jbe
lods
std
incl
push
xor
aaa
add
aaa
xor
jns
pop
jbe
dec
inc
pop
or
mov
mov
imul
js
popa
jne
gs
dec
popa
mov
aaa
inc
jno
pop
fidivrs
outsl
repz
cmp
jns
jle
incl
add
dec
inc
arpl
jbe
bound
push
outsl
insb
sbb
sbb
bound
jb
jge
outsl
push
push
je
dec
jno
xor
cmp
clc
push
fmuls
fnstenv
push
bound
push
mov
push
push
push
pop
inc
dec
push
push
test
jne
je
outsb
cld
mov
je
inc
push
xor
gs
inc
push
cmp
jbe
or
je
imul
pop
jne
push
les
jno
mov
fisttpl
pop
jo
imul
jae
addr16
inc
sbb
fmulp
push
jno
push
jb
fs
mov
pop
cmp
out
js
imul
neg
mov
push
jae
push
dec
insl
pop
outsl
inc
jae
dec
inc
popa
arpl
aaa
sbb
inc
dec
push
inc
inc
pusha
dec
clc
imul
inc
push
push
pop
dec
int
repz
popf
mov
addr16
push
jae
add
xor
gs
mov
add
jnp
sti
sbb
outsl
insl
test
push
jb
sti
incl
dec
inc
push
dec
push
dec
push
dec
dec
inc
inc
push
fs
in
push
push
add
mov
icebp
imul
arpl
test
jbe
push
clc
inc
mov
push
inc
inc
jnp
orps
pop
ja
adc
leavew
in
gs
cmp
push
lods
push
push
inc
xchg
jbe
std
dec
js
dec
outsb
outsb
cmp
push
xor
xor
xor
mov
idivb
dec
aaa
push
sub
push
pop
jne
xor
push
daa
mov
inc
loope
xor
shr
je
xor
jo
fldt
sub
js
push
pop
pop
fcomp
or
popa
je
outsb
jle
mov
insl
imul
ja
test
aaa
xchg
arpl
inc
addr16
sub
dec
dec
gs
xchg
dec
mov
jecxz
aaa
pushf
dec
dec
imul
xor
fldl
aaa
or
outsl
arpl
data16
insb
fwait
push
jns
pop
cmc
dec
sbb
pop
jo
push
jb
jb
xor
dec
inc
movsl
dec
jg
test
cmp
dec
fnstenv
jb
push
jno
je
bound
test
inc
ja
bound
inc
or
inc
pop
or
mov
je
jo
xor
test
imul
scas
arpl
imul
jb
outsl
mov
push
jne
in
dec
push
push
dec
scas
pop
jns
pop
dec
dec
fwait
outsl
es
lock
xor
dec
pop
pop
pop
push
lods
cmp
adc
dec
arpl
sub
stos
adc
dec
or
fiaddl
imul
add
jp
add
lock
ja
mov
outsb
dec
dec
push
dec
add
push
imul
insb
bound
pop
jb
pop
das
sub
push
cmp
pop
inc
dec
dec
mov
dec
mov
cmp
outsb
bound
insl
push
test
js,pn
inc
pop
jmp
addl
testb
dec
imul
xor
fs
push
js
outsb
push
insl
bound
sarb
aam
xor
or
int3
data16
xor
dec
dec
push
dec
dec
dec
inc
push
inc
cmp
insb
mov
outsb
xor
inc
pop
jae
pop
imul
jmp
pusha
cltd
lcall
jb
xor
fisubl
int
sbb
dec
and
sub
pop
push
jns
pop
xor
add
push
push
inc
out
dec
pop
dec
shrl
sbb
jbe
jae
insb
outsb
mov
jnp
aaa
pop
add
fsubl
inc
jno
mov
gs
inc
arpl
adc
push
xlat
dec
dec
xor
aaa
leave
xor
xor
fcmovnu
outsb
pusha
imul
ja
inc
repz
fildll
loopne
popa
ret
jbe
aad
dec
pop
push
push
dec
inc
jae
test
dec
inc
dec
xor
dec
or
in
dec
mov
scas
xor
outsl
addl
sub
sub
xchg
fcomps
push
pop
inc
pop
jge
imul
jno
push
jns
mov
sub
xor
mov
loopne
movsl
cmp
inc
xor
popa
sldt
shrl
fcmovnbe
add
rorb
pop
mov
jno
negb
js
js
fstpt
outsb
inc
bound
jecxz
inc
orl
adc
fidivl
icebp
popa
push
push
and
push
jne
adc
jb
js
fldt
dec
inc
outsl
dec
push
popa
addr16
gs
insl
insl
addr16
js
xor
imul
or
jbe
loopne
sbb
mov
mov
js
test
jne
outsb
pop
sub
pusha
dec
adc
cltd
outsb
dec
fs
andl
cmpsb
inc
adc
out
sub
xchg
lock
jbe
std
inc
push
ss
xor
push
fs
jae
push
xor
inc
sub
ret
mov
push
sbb
in
mov
push
inc
jo
push
inc
je
das
arpl
dec
mov
pop
xor
push
inc
add
cmp
push
sub
insb
inc
jl
addr16
bound
decb
dec
jno
xor
popa
push
push
jbe
sbb
imul
push
aaa
fsubl
mov
inc
push
jo
pop
add
xchg
pop
pop
call
js
jbe
inc
jmp
lods
jns
sbb
adc
lods
jecxz
add
call
jae
insl
shlb
test
cmp
iret
xlat
rcl
adc
paddq
mov
adc
test
ss
add
dec
ret
jg
push
divb
aad
inc
inc
dec
inc
dec
jp
jmp
imul
das
push
sub
aas
inc
push
mov
outsl
mov
clc
jns
push
push
test
and
push
push
or
ss
push
imul
ss
test
or
inc
je
dec
push
push
into
js
sub
xor
mulb
data16
jo
pop
push
jnp
aam
in
jb
adcl
mov
cld
mov
mov
xor
xor
push
insl
xor
aaa
mov
jne
inc
jns
jle
inc
dec
movsl
fildll
push
pop
dec
inc
dec
inc
jecxz
mov
fldt
push
arpl
enter
pop
adc
clc
js
jbe
dec
test
cs
jno
mov
push
data16
insb
pop
cmp
test
push
movsl
ficompl
push
pop
cmc
push
test
add
ja
das
es
sub
mov
inc
sbb
inc
imul
cli
in
mov
imul
dec
push
insb
inc
fsubrs
fcomps
dec
jno
addr16
mov
push
sub
inc
mov
mov
inc
mov
cwtl
push
pop
lcall
or
push
js
dec
push
pop
inc
les
or
jb
imul
add
push
push
imul
sub
jne
sahf
daa
jns
jbe
test
dec
stos
shll
out
addr16
mov
sub
xor
aam
push
pop
xchg
jo
dec
inc
mov
lock
dec
insb
push
push
test
adc
insl
insb
inc
and
push
inc
pop
pop
inc
push
aaa
mov
fidivs
dec
pop
shll
jne
xchg
sub
popa
inc
cmp
in
dec
pop
xchg
mov
jle
pop
lods
mov
dec
arpl
fists
xchg
aaa
push
pop
adc
dec
mov
scas
lods
dec
fiaddl
inc
outsb
in
inc
outsb
stos
cmc
add
pop
imul
push
inc
mov
shll
mov
inc
dec
cmpsb
pop
cmp
clc
jae
in
xchg
jmp
mov
mov
lds
nop
sbb
bound
pop
and
push
insl
pop
jo
lret
popa
pop
dec
pop
stos
rclb
dec
pusha
adc
pop
push
push
pusha
out
push
loopne
fadd
inc
add
addl
jae
and
adc
inc
push
inc
lds
fcmovbe
push
enter
jno
or
xchg
push
adc
dec
inc
stos
mov
inc
sub
lods
or
add
clc
shrl
lea
cs
add
ret
or
arpl
xor
je
jbe
mov
jns
aaa
in
or
pushf
xor
xor
add
xor
lods
or
dec
lea
push
inc
or
push
mov
outsl
aam
pop
gs
cmc
jp
push
push
sbb
push
push
push
inc
imulb
bound
xchg
xor
sub
shrl
push
fistpl
push
icebp
push
pop
adcl
adc
push
pop
push
test
cwtl
jne
xor
inc
push
outsb
dec
gs
xor
inc
cmp
outsl
test
dec
and
push
inc
push
jbe
mov
gs
xchg
pushl
outsl
xor
mov
jo
ds
push
cmp
shrl
imul
enter
push
daa
pop
lods
movsl
push
fildl
mov
inc
mov
mov
inc
sti
jno
inc
inc
dec
add
aad
insl
imul
jle
dec
mov
push
jb
xchg
stc
jo
insb
or
xchg
sub
ds
pop
addr16
out
test
aaa
rcll
cld
imul
outsb
xor
adc
insb
add
sbb
aaa
imul
push
mov
hlt
inc
orl
bound
pop
push
ja
movsl
dec
insl
mov
jb
xchg
fbstp
or
arpl
int3
adc
cmp
adc
and
fcompl
mov
mov
pop
add
bound
sub
xchg
pop
lret
push
sub
shl
stos
addl
popf
push
add
xchg
mov
movsl
loop
notl
sbb
clc
and
jne
push
xor
fiaddl
rcll
xchg
mov
inc
push
mov
addl
ljmp
dec
stos
inc
imul
insl
sub
xchg
mov
and
inc
adc
cs
mov
popa
cli
in
inc
inc
xchg
out
push
inc
insb
pop
mov
jbe
push
mov
dec
jmp
dec
std
or
dec
fs
mov
sbb
cltd
pop
das
sub
sbb
pop
dec
dec
je
dec
insl
jp
xor
fisttpl
dec
shrb
pop
inc
mov
jle
or
rolb
mov
push
jb
insl
cli
loopne
arpl
inc
push
js
aam
jmp
out
adcb
push
sub
add
outsl
aad
inc
mov
cld
and
xchg
arpl
xchg
cmp
popa
pop
stos
mov
add
outsb
dec
xchg
push
push
inc
mov
sbb
cmp
sub
lret
push
mov
mov
repnz
ret
movq
add
xchg
pop
mov
imul
jmp
dec
insl
add
ret
pop
fdivl
and
jae
adc
push
or
dec
dec
push
mov
push
pop
mov
pop
inc
pop
jo
inc
dec
push
mov
decl
xchg
decl
aas
ja
sar
in
ret
and
mov
aad
imul
inc
xor
lods
add
addl
out
jmp
iret
add
sti
mov
jne
sub
lods
leave
xor
cs
mov
mov
leave
mov
ljmp
cltd
in
sub
pusha
mov
mov
lret
adc
jmp
je
pop
xchg
mov
pop
inc
lods
push
sbb
dec
push
jmp
sbb
test
cwtl
jmp
pop
push
aam
cmp
mov
adc
in
call
inc
xor
imul
filds
sub
into
loopne
shll
inc
jg
aaa
shrl
xor
push
hlt
pop
clc
out
in
mov
push
mov
jge
imul
adc
adc
ret
icebp
jecxz
fisttpl
ljmp
sub
push
int
or
lock
addr16
mov
nop
push
lret
push
hlt
out
roll
aam
inc
lods
jecxz
adc
std
fisttpl
call
decl
pushl
movsb
ss
out
imul
cmpsl
pop
mov
mov
mov
ret
inc
imulb
fwait
cs
cmc
cli
out
in
stos
aam
mov
mov
addr16
ljmp
int3
pop
into
pop
les
sti
int3
or
in
dec
call
xchg
dec
xchg
decl
push
int
xor
imul
aam
loope
jp
and
jmp
mov
arpl
push
dec
xor
insl
repz
jo
xor
xchg
jb
inc
in
jg
in
push
inc
mov
mov
outsl
rcl
rolb
add
jg
out
inc
cmp
mov
cmc
in
mov
mov
lcall
fs
dec
into
jl
sub
or
in
push
loope
xchg
enter
repnz
sub
cmc
mov
pop
mov
push
mov
adc
push
imul
adc
pushf
add
cmc
jbe
fmull
ljmp
push
scas
or
lcall
rol
mov
mov
jbe
lock
xchg
in
sub
jbe
or
ljmp
mov
aad
mov
sbb
pop
jns
pushl
and
test
movsb
imul
mov
bound
es
mov
jge
dec
test
mov
pop
decl
and
sbb
mov
inc
jmp
mov
xchg
push
jmp
and
notb
repz
mov
mov
adc
fnstsw
pop
hlt
push
xchg
pop
cli
out
inc
pusha
ret
leave
test
loopne
decb
test
outsl
push
cwtl
pop
hlt
and
push
adc
push
add
imul
mov
mov
sbb
out
cltd
cmp
mov
in
fmul
cmp
pushl
int3
in
fs
push
sbb
nop
xlat
or
clts
cld
lahf
mov
shll
xorl
mov
adc
out
aad
mov
sbb
pop
loopne
and
and
xorb
xchg
xchg
mov
jo
mov
pop
int3
pop
xchg
mov
repnz
das
cld
add
jecxz
outsb
enter
mov
lret
call
cmp
xor
pop
or
or
stos
lds
mov
cmp
jg
pushl
sub
test
mov
loopne
jecxz
inc
jecxz
ds
incl
sti
jl
mov
dec
lret
and
jne
mov
sbb
sub
adc
or
jmp
inc
loop
rcrl
dec
les
add
pop
jbe
sbb
stos
pop
add
xor
sub
std
xchg
clc
js
sub
test
fcompl
enter
sahf
dec
or
sbbb
ljmp
or
xchg
mov
pop
xchg
pop
push
dec
ret
aam
incl
insb
fcoms
cwtl
mov
cltd
sti
mov
jbe
repnz
dec
xor
adc
add
jl
xor
cmc
cmp
jge
in
ja
and
and
dec
adc
repnz
data16
push
test
mov
cltd
js
mov
pop
enter
sbb
xchg
das
push
clc
jmp
fnop
aad
or
loope
pop
outsl
pop
movsl
ret
loop
cmp
adc
mov
dec
fsubl
sarl
test
xor
adc
pushl
mov
mov
mov
mov
lock
mov
repz
adc
cld
jg
jg
scas
movsb
lcall
push
add
mov
or
fdivrs
fwait
or
push
jbe
call
push
push
adc
decl
ret
fwait
adc
dec
push
dec
inc
outsl
cmc
lahf
pop
or
out
in
mov
mov
add
dec
jno
pop
lea
sbb
in
in
aam
test
repnz
jnp
insb
mov
hlt
inc
cmp
adc
scas
pusha
bswap
lea
jl
iret
cmp
pop
lods
add
incl
cmp
or
not
cmp
cwtl
mov
jge
add
and
sbb
cli
call
pusha
mov
insl
lods
cli
sbb
pushf
cmp
pop
call
add
xor
stc
test
bnd
mov
jae
jl
lcall
ficoms
or
add
xchg
cmp
xchg
adc
out
push
xlat
lahf
das
dec
fisubs
decl
or
inc
cmp
mov
pop
xchg
add
imul
jae
sbb
jg
cmc
cmp
mov
scas
stos
mov
mov
xchg
inc
mov
call
loopne
cmp
and
loope
stos
je
xorl
mov
push
xchg
adc
addl
int3
xor
fwait
jae
jne
inc
push
cmp
adc
dec
mov
loope
or
mov
mov
mov
adc
jecxz
fdivr
jg
incl
lods
mov
mov
or
add
lret
or
incl
mov
mov
test
mov
dec
jg
inc
sbb
lea
sti
jmp
xor
mov
xchg
test
xchg
cmp
xchg
and
cwtl
out
call
pop
push
xchg
inc
inc
leave
scas
cmp
mov
push
out
cmp
out
xorl
notb
fidivrl
adc
jmp
push
add
push
push
sub
adc
jg
pop
out
pmuludq
push
dec
pop
outsl
bound
std
incl
dec
inc
aaa
jg
sbb
dec
faddp
mov
inc
imul
pop
call
cld
sbb
imul
inc
out
dec
mov
mov
sbb
test
xor
aaa
in
or
sub
xlat
bswap
pop
xchg
push
js
call
pop
jp
incl
xor
je
fists
iret
fst
enter
and
jnp
mov
cmp
lcall
jp
fidivrs
mov
mov
cmp
aaa
mov
or
jns
adc
mov
inc
dec
or
out
test
jns
inc
push
mov
fcmovnbe
jecxz
int3
lods
ljmp
pop
dec
pop
add
jne
jmp
mov
les
aad
fisubrs
or
adc
adc
add
out
cmp
sbb
mov
lods
aas
mov
sbb
push
lahf
in
pop
mov
jmp
jle
mov
outsl
icebp
pushl
sub
div
jmp
mov
pop
xchg
xchg
mov
mov
scas
popf
dec
sti
cli
icebp
cmp
add
int
mov
mov
jbe
decl
repz
or
jns
xlat
adc
outsl
imul
or
mov
das
lcall
cld
jb
push
mov
jbe
dec
pop
sti
ljmp
pop
loop
cmp
cwtl
adc
xchg
push
loopne
mov
repnz
call
fistpll
sub
pusha
rorb
lea
jne
pop
mov
pushl
jne
rep
shl
jnp
xor
xorl
xchg
ds
divb
popf
cmp
and
push
mov
outsl
imul
decl
daa
jp
lcall
sub
cmp
xor
mov
dec
lea
clc
push
lods
loopne
mov
or
cld
insb
enter
or
subb
or
lcall
int
aaa
mov
cld
push
div
ljmp
decb
std
and
scas
inc
aas
sbb
dec
rcrb
icebp
sbb
pop
cwtl
decl
sbb
arpl
or
cmp
and
call
mov
xor
pop
stos
aad
aad
adcl
and
mov
outsl
lock
mov
mov
add
clc
jl
inc
dec
das
dec
inc
cmp
push
shrb
fucomip
mov
pop
mov
and
mov
pop
xchg
mov
daa
mov
fildl
lods
mov
jg
add
popa
call
fistpll
push
xchg
push
rcrl
inc
cmpsb
test
mov
in
push
ljmp
sub
or
push
imul
jge
mov
jle
fisttps
jg
scas
cmp
in
jnp
jg
and
mov
stc
push
gs
movsl
das
loopne
repnz
jp
cli
decl
mov
sub
popf
dec
pop
clc
sub
fs
inc
repnz
pop
stos
js
insl
les
cmpl
pushf
mov
loop
or
mov
xor
call
add
jg
or
jmp
repnz
addr16
popa
push
mov
jae
cmp
fiaddl
outsl
lock
xchg
push
hlt
push
stos
xchg
pop
mov
lcall
push
cld
mov
add
dec
lcall
mov
push
shufps
dec
inc
and
or
pop
std
adc
jb
ljmp
popf
or
imul
fisttps
add
dec
fxch
ret
cmpsl
pushf
xchg
mov
mov
jecxz
sub
jmp
pop
cltd
push
cs
fisttpll
sahf
stos
jb
jg
or
insb
xchg
and
cltd
dec
dec
mov
adc
fsubl
lret
mov
mov
lea
pushf
push
lock
aad
arpl
repz
decl
decb
mov
add
cld
repz
es
pop
fnstsw
icebp
pop
addb
addr16
sbb
sbb
fcomp
dec
adc
rep
jnp
jbe
cmp
call
mov
push
push
or
push
int
sub
lret
outsl
test
pop
jg
ret
and
je
sbb
xlat
loopne
enter
cmpsl
sbb
jl
pushl
cli
ljmp
mov
inc
cmp
stos
jmp
inc
clc
push
fwait
adc
in
cmc
bound
repnz
jno
inc
lahf
inc
inc
ss
cmp
jle
stc
shl
mov
mov
cld
decl
fisubl
loop
int
inc
mov
push
dec
jge
jmp
sahf
jp
lcall
movsl
fisttpl
mov
fbld
xor
fs
movsl
incl
fisubrs
xchg
test
mov
or
movsl
mov
xchg
mov
pop
sti
popf
ja
pop
insl
xchg
data16
inc
pop
jl
push
sub
and
sbb
fcomps
popf
pop
imul
aad
cli
mov
or
cmpsl
stc
pop
cld
jg
dec
imul
jge
jg
arpl
and
icebp
sub
cld
outsl
jo
nop
xchg
icebp
out
mov
movsl
pop
adc
mov
cli
mov
sbb
sub
icebp
ret
cld
das
push
int3
push
cmp
mov
or
or
push
arpl
or
outsl
in
dec
pop
jecxz
fdivr
dec
sahf
mov
mov
fisubrs
sub
xor
mov
inc
xchg
setnp
popf
bound
or
mov
lock
enter
push
ja
out
mov
aaa
daa
mov
orb
std
or
fimuls
shrl
jle
out
pop
pop
dec
scas
inc
mov
incl
clc
aas
iret
dec
ror
mov
js
jne
in
fisttpl
mov
inc
jnp
add
add
cli
inc
and
push
aam
inc
sub
fcmovu
xchg
mov
into
scas
cmpsb
cmpsl
sahf
xchg
pop
or
jge
daa
outsl
sti
dec
cld
sar
xchg
mov
popa
roll
pop
mov
out
sar
xor
idiv
out
out
pop
adc
adcb
cmpsl
push
pop
std
pop
shrb
cltd
xchg
mov
mov
push
adc
inc
mov
test
mov
subb
jns
mulb
je
stos
xor
lock
mov
out
sahf
popf
xchg
fucomi
sub
fildll
xchg
sub
jecxz
jbe
sarl
movsl
dec
lcall
add
xor
jl
js
xchg
lcall
hlt
adc
popf
mov
mov
mov
adc
lock
mov
or
mov
or
sbb
cmp
jns
imul
js
call
fistpll
addl
sub
in
paddd
testl
sub
shlb
pop
pop
push
mov
popf
mov
and
fidivrs
mov
pop
imul
inc
ljmp
inc
push
add
pop
inc
pop
dec
push
dec
add
mov
test
js
push
outsl
add
insl
inc
pop
adc
ss
mov
outsl
push
jne
imul
je
pushw
mov
xor
xor
xchg
ss
add
inc
inc
js
outsb
dec
ja
jmp
xor
dec
push
push
add
mov
imul
bound
insl
push
sarb
arpl
js
add
insb
bound
jo
jbe
lods
outsb
aad
in
dec
inc
dec
push
and
mov
fldt
sub
jne
push
jo
fbld
outsb
jb
push
jae
mov
das
mov
je
dec
inc
push
dec
dec
outsl
xchg
mov
inc
fs
mov
gs
xchg
in
bound
outsl
dec
push
js
cmp
jo
push
dec
imul
mov
jns
addr16
xor
cld
adc
inc
or
push
fldl
push
imul
push
inc
insb
insb
outsl
nop
loop
lcall
mov
dec
inc
inc
insb
jns
dec
dec
jo
mov
cld
mov
imul
addr16
incl
mov
and
dec
jne
outsb
push
sub
insb
imul
xor
push
mov
clc
add
xor
xor
popa
jbe
push
test
decl
hlt
xor
push
and
jo
inc
add
push
push
inc
fisttps
mov
rclb
push
push
cmp
cwtl
inc
arpl
js
add
popa
dec
insl
and
jno
add
jne
addr16
imul
dec
xor
dec
dec
push
movl
jle
add
bound
bound
mov
pop
inc
dec
adc
ss
xor
lahf
fists
call
ss
into
inc
js
dec
push
inc
insb
sarb
dec
sub
push
jbe
ja
addl
or
or
inc
push
push
bound
addr16
stos
xor
test
call
jb
or
mov
outsl
incl
ja
insl
insb
imul
js
jmp
mov
add
jne
lret
shlb
hlt
xchg
in
push
add
data16
outsb
imul
push
fidivrl
pop
dec
bound
and
jae
in
in
mulb
add
je
pop
popa
add
roll
outsb
jno
pop
fs
xchg
push
insl
loope
addr16
mov
popa
sbb
shrl
jecxz
dec
jno
xor
jbe
outsl
dec
xchg
dec
imul
imul
sbb
jno
pop
sub
outsb
inc
dec
je
dec
inc
mov
fs
movsl
bound
or
inc
pop
aam
mov
int3
jmp
mov
sbb
dec
dec
dec
insl
push
or
mov
arpl
xor
imul
adc
jae
cli
xor
lods
iret
jmp
dec
arpl
push
or
je
push
jbe
push
push
push
push
outsl
pop
clc
sbb
dec
dec
inc
popf
jo
inc
imul
mov
fidivs
js
mov
jae
inc
push
adc
outsl
pop
jb
dec
inc
jbe
xor
fs
mov
je
insl
int
bound
mov
mov
inc
jbe
inc
dec
jp
std
jae
cli
jne
inc
push
jns
jns
addr16
mov
push
bound
shl
and
inc
dec
leave
push
dec
push
push
xorb
bound
push
inc
inc
push
or
fcmovu
pop
dec
imul
dec
lretw
push
bound
dec
imul
add
jecxz
push
cmp
mov
mov
pusha
imul
pop
cli
and
push
jb
pop
jmp
inc
sbb
inc
jo
imul
push
outsl
mov
xchg
outsl
bound
pop
jae
fs
cs
lea
mov
push
popa
clc
insl
jne
test
push
scas
add
aas
outsl
decl
aaa
inc
push
push
dec
dec
pop
mov
sbb
push
mov
jae
push
pop
mov
push
push
int
ja
mov
jp
popa
ret
inc
les
std
mov
add
sar
decl
sbb
xorl
and
push
sub
fs
jecxz,pt
mov
pop
xor
mov
in
fstl
add
or
insb
or
bound
add
test
lods
rolb
xlat
or
add
int3
negb
cmp
add
push
xor
add
lock
fldt
or
xlat
sub
jbe
lods
inc
xchg
or
push
shll
negl
mov
push
sti
outsl
jg
add
cmp
xchg
add
popl
add
data16
adc
add
dec
roll
pop
mov
jge
call
iret
sub
lods
pop
add
mov
mov
pop
cli
lcall
or
mov
jge
sub
outsb
and
add
add
mov
mov
jle
mov
movb
into
add
add
add
xchg
jne
lods
adc
nop
incl
jg
jle
inc
jnp
or
je
lods
movsl
popa
sub
incl
outsl
in
cmp
cltd
adc
or
push
popa
mov
nop
or
sbb
ljmp
rcll
or
loop
mov
scas
lea
add
mov
jge
ljmp
ret
and
adc
pushl
sbb
mov
sub
sub
add
pop
pop
sahf
push
sti
out
pop
ja
adc
add
mov
mov
add
cmpb
sbb
sbb
inc
push
adc
xchg
mov
hlt
aas
push
sbb
jp
jne
outsb
mov
push
clc
sub
mov
pop
enter
inc
out
mov
add
mov
cltd
jle
add
sbb
add
pop
mov
out
cmp
pop
and
xor
outsb
cld
inc
das
outsb
scas
push
scas
mov
and
xchg
mov
sub
subb
je
xchg
cmp
pop
popf
cmpsb
out
in
movsb
adc
rcrl
pop
cwtl
and
lds
pop
jg
pop
cli
xchg
bound
jge
push
add
mulb
fiaddl
or
lea
inc
mov
pop
aad
jge
fdivrs
icebp
jbe
insl
cs
push
movsl
add
xor
lods
mov
mov
or
add
outsl
adc
mov
add
sbb
jmp
add
stos
aad
mov
dec
pop
inc
mov
sub
mov
mov
mov
adc
in
mov
movsl
push
or
icebp
add
clc
lock
popa
pop
sub
hlt
cmpps
add
push
xchg
push
mov
std
outsl
dec
and
in
insl
aaa
pop
pop
jecxz
push
push
mov
imull
test
push
push
repz
dec
mov
mov
mov
scas
lock
xor
pop
pushf
shlb
rcrl
call
add
pop
fimuls
es
fcompl
mov
add
lcall
pop
or
adcl
jg
sbb
inc
mov
xlat
cld
mov
stc
inc
push
xchg
add
aas
out
int3
push
or
dec
pop
ret
fnsave
cltd
pop
lock
lods
std
add
xchg
inc
roll
jp
mov
ljmp
xor
sub
lret
add
push
fisttps
in
jg
xchg
in
lret
xchg
lds
and
pop
dec
pop
inc
pop
cmp
shlb
mov
test
mov
in
testb
rcll
mov
clc
add
or
scas
push
ja
clc
dec
cmc
aad
dec
sub
iret
xchg
xor
and
je
out
cmp
stos
scas
sub
fstpt
sub
in
ljmp
inc
xorl
sub
test
fsubl
cmp
cwtl
outsb
xchg
jg
xchg
lcall
mul
dec
mov
ds
pop
pop
sub
mov
movsb
or
lock
pop
imull
and
aad
xchg
adc
fldl
int
mov
insb
repz
mov
lods
xchg
cmp
pop
mov
sahf
mov
repnz
insb
xor
movsb
inc
lods
lret
jbe
dec
ss
cmp
sub
mov
sub
mov
push
fnstenv
pop
mov
mov
adc
push
fsubrs
fsubrl
into
and
or
daa
jg
jae
icebp
push
repnz
or
repz
lret
add
mov
ja
add
sbb
in
push
add
pop
and
clc
or
repnz
mov
xchg
mov
mov
mov
lds
dec
adc
sub
pop
or
and
jecxz
loopne
inc
loope
shlb
mov
pop
fidivl
lahf
or
push
adc
in
jae
cli
mov
in
dec
xchg
dec
jecxz
mov
pop
mov
call
andb
adc
cmp
or
in
mov
das
sub
data16
in
icebp
divb
fs
push
dec
jmp
rolb
lea
clc
xchg
jb
imul
mov
outsb
mov
sbbl
mov
aad
outsl
xchg
andb
daa
or
icebp
mov
dec
daa
pushf
faddl
out
jmp
adc
aad
fs
lret
and
shr
mov
loopne
fdivrl
xchg
jmp
xor
pop
fwait
sbb
xlat
loope
loope
jne
dec
je
adc
lock
fstl
pop
lar
mov
sbb
cmc
add
int3
and
add
mulb
loope
adc
sub
sbb
jmp
scas
dec
mov
out
xor
daa
stos
add
ja
mov
dec
jo
and
andl
adc
xchg
outsb
aam
mov
imul
in
in
cmp
push
add
insl
fnsave
or
insb
arpl
clc
shlb
mov
mov
mov
add
popf
sub
int
outsl
mov
jno
lds
xor
xchg
outsb
dec
aad
or
and
mov
cld
inc
leave
out
xor
call
mov
xchg
andl
cmp
lds
xor
lahf
push
sarb
popf
outsl
faddl
mov
outsb
jge
fcoms
mov
mov
in
push
push
in
in
aam
fwait
gs
adc
mov
push
ficoml
scas
stos
repz
cmp
jne
pop
fdivs
das
cmp
movsb
push
in
pop
ss
daa
xor
mov
mov
pop
enter
fcmovnu
lcall
and
rolb
jecxz
jno
aad
ds
daa
inc
jl
push
push
add
lock
adc
add
adc
lcall
jp
hlt
cmp
addr16
mov
and
scas
mov
jmp
dec
sbb
pop
imul
push
pop
jmp
push
lods
mov
mov
enter
sub
mov
cld
icebp
dec
loop
sub
divb
fcmovnbe
mov
jns
pop
daa
sub
outsb
jmp
dec
sub
or
fidivrs
jb
insl
addl
movsl
cmp
rolb
sti
mov
cwtl
outsb
mov
inc
push
xor
sahf
out
in
add
sub
xor
add
clc
cmp
popa
loope
mov
in
sbb
jns
xor
dec
in
fwait
gs
ss
xor
adc
lcall
movntq
out
jle
cmp
xlat
mov
jmp
dec
insb
jb
test
xor
or
addr16
ret
loope
leave
ror
in
addr16
testl
sti
fcoms
int
movsb
aam
shl
or
and
mov
lock
js
daa
sbbl
cmp
mov
xchg
inc
dec
ret
mov
in
cmp
in
icebp
inc
pop
adc
xchg
xlat
xchg
add
inc
test
add
outsl
out
arpl
arpl
xchg
xor
test
mov
jmp
xor
sub
bound
lret
sub
addr16
and
cli
cmp
call
and
mov
cwtl
out
lock
mov
inc
ds
or
sbb
bnd
call
divl
pusha
add
mov
test
fwait
pop
mov
insl
dec
inc
add
test
inc
mov
ret
outsl
mov
xchg
pushf
push
push
shl
fldcw
mov
mov
sbb
fisttps
cwtl
sub
push
xor
loope
lret
xor
and
push
dec
cld
test
ja
out
xchg
jns
mov
pop
call
lods
cmc
push
add
in
adc
jnp
add
fwait
push
fsub
insl
arpl
in
andb
adc
lar
rorb
push
mov
ds
jl
jb
stos
push
clc
fwait
jo
inc
arpl
stos
hlt
popf
xlat
cwtl
nop
inc
imull
mov
adc
push
push
xchg
pop
call
or
jl
sub
jl
jmp
fsubs
cmp
cld
aam
je
jne
lock
pop
cltd
insl
jmp
jle
out
int3
scas
inc
or
cld
shrb
xchg
add
test
mov
daa
cpuid
cmp
movl
fisubrs
das
mov
js
data16
or
push
adc
mov
daa
lcall
mov
data16
pop
mov
mov
int3
popf
add
mov
add
adc
mov
mov
icebp
test
adc
clc
mov
pusha
pusha
mov
test
add
jge
jns
sub
popw
iret
xor
add
jle
cs
imulb
push
mov
loope
std
mov
cmpsb
mov
out
xchg
imul
mov
mov
clc
xchg
mov
sub
cmpsl
ficoms
cwtl
nop
test
fs
sahf
cmp
ss
add
or
pusha
sbb
or
fucomi
pop
jb
dec
stc
mov
stos
iret
add
jg
jb
es
and
mov
incl
rorb
fcomps
pop
pushf
sbb
and
out
scas
adc
cmp
std
mov
je
dec
loopne
je
clc
movsl
mov
loop
data16
pop
sarb
sbb
mov
dec
pop
aaa
adc
pand
cmp
out
cmc
or
add
push
lds
jl
sub
jo
mov
or
sub
addr16
and
mov
dec
lahf
cmp
fdivp
sub
fcmovbe
add
je
jle
icebp
shl
jp
xor
add
sub
push
in
sub
sbb
push
xlat
mov
fcmovu
cmc
insl
or
and
push
cli
mov
lret
cmp
and
jg
pop
dec
dec
mov
lahf
xlat
mov
adc
xchg
inc
cmp
pop
scas
cs
movsb
dec
and
clc
test
fsub
push
xor
mov
aam
rolb
dec
ss
fchs
nop
repnz
inc
xchg
and
jecxz
sti
pop
or
test
push
push
or
xor
mov
std
icebp
adc
dec
popf
and
pop
insb
mov
xchg
jle
mov
sbb
add
out
xchg
add
outsl
pop
outsb
hlt
xorb
nop
inc
repnz
das
fidivs
pop
pushf
in
jl
lret
mov
jg
xlat
jp
aas
repz
add
xchg
imul
out
mov
inc
pop
fs
push
icebp
pop
mov
or
xchg
cmc
cmp
jge
pop
in
mov
cld
in
cmp
push
mov
fistpll
cmp
lahf
push
mov
xchg
pop
inc
jmp
and
cmc
or
jns
addr16
in
js
xor
fwait
out
xlat
xor
mov
sbb
into
hlt
pop
mov
cmp
lds
mov
repnz
add
testl
cmp
test
outsb
xchg
cld
rclb
sahf
ret
das
push
pop
cs
cmc
dec
out
ficoms
incb
pop
pop
xchg
dec
mov
loope
test
pop
sub
xchg
test
or
cltd
arpl
popa
cli
mov
inc
xor
clc
mov
loopne
ljmp
jnp
cwtl
inc
sbbb
jmp
inc
jl
pop
imul
push
sbb
cld
xor
mov
adc
fildl
inc
mov
inc
pop
addr16
pop
mov
out
pop
cli
rcll
jle
sub
aam
xchg
das
fs
and
jg
pop
jo
xor
xor
cmp
push
inc
push
add
jp
shrl
xchg
push
movzwl
test
aad
aad
or
test
jg
mov
jb
pop
shl
clc
xchg
add
mov
test
insl
or
ljmp
sub
jmp
mov
ret
pop
dec
sbb
cmp
movsb
int3
add
test
aaa
fnstsw
sahf
fld1
mov
inc
adc
and
fdivrs
lret
ds
jo
xchg
rsqrtps
clc
mov
mov
imul
or
cld
cld
aam
jbe
popa
imul
jp
hlt
lret
sub
cmpsb
add
rsqrtps
inc
sti
inc
xor
cmp
push
mov
mov
gs
or
rclb
push
shll
mov
inc
lahf
sub
or
repnz
or
adc
ds
or
fld
iret
dec
std
les
mov
cmp
xchg
push
sbb
jmp
mov
dec
pop
insb
push
in
sbb
mov
push
mov
iret
in
test
sbb
aam
iret
push
bound
decb
sti
fst
and
adc
adc
add
insb
mov
mov
add
push
mov
testb
xchg
sub
icebp
mov
pushl
outsl
inc
inc
lcall
in
les
mov
xor
xlat
xor
pop
xor
int3
sub
xor
call
adc
inc
loopne
insb
lret
and
sub
sbb
or
push
dec
mov
pop
mov
mov
std
bound
addr16
hlt
inc
add
mov
mov
in
mov
ljmp
mov
adc
stc
mov
cmpsb
dec
cmp
das
cmp
inc
push
push
or
lock
pop
mov
jno
add
and
sub
shlb
xchg
jg
leave
cmp
outsl
test
lock
mov
cmp
adc
faddl
sti
push
shl
push
sub
pop
pop
call
dec
ja
repz
pop
mov
ret
imul
rclb
cmp
cmp
cli
lea
and
adc
out
push
adc
cmpb
outsl
jo
aad
loopw
decl
scas
adc
dec
sbb
mov
jo
adc
push
cltd
jnp
xor
jno
push
mov
test
inc
shrl
push
test
in
dec
test
sbb
sub
lock
and
pop
in
andl
mov
push
out
divl
jmp
jge
fsubrs
cmc
cmpsl
scas
dec
test
inc
jns
sbb
mov
push
push
push
mov
and
xor
mov
movsl
ret
lret
push
shrb
lret
fstps
push
and
jmp
dec
movsl
add
jge
xchg
mov
mov
adcb
cld
data16
dec
enter
in
fsubs
mov
and
cs
je
repnz
pusha
and
mov
js
push
punpckldq
add
inc
gs
orl
sub
les
and
mov
cmp
fidivrs
test
push
sbb
jl,pn
fidivs
mov
popa
popa
jmp
shrl
mov
pusha
lcall
sbb
inc
sbb
cmpsb
mov
inc
add
pop
xchg
std
lods
fimull
inc
es
cld
xchg
jle
xlat
cwtl
or
imul
jl
loopne
cmp
mov
aam
fsubrl
mov
mov
mov
add
jbe
data16
fnsave
lret
xchg
xlat
cli
rol
pop
or
lods
jmp
popf
xchg
popa
or
mov
clc
dec
add
pushf
mov
cltd
jae
test
cld
ret
push
and
mov
sub
sbb
mov
mov
sbbl
and
test
pop
push
movsb
fld
xor
push
outsb
sbb
out
pop
push
pop
scas
xor
subl
mov
add
dec
dec
scas
arpl
stc
rcrl
mov
sbb
mov
push
enter
mov
lret
inc
push
jp
fstps
push
xor
in
sub
xchg
dec
iret
fwait
loop
scas
in
pop
fmull
add
ficompl
xchg
jb
mov
mov
adc
ret
mov
jle
jecxz
test
nop
out
jl
sbb
aaa
pop
adc
sub
push
outsb
inc
mov
stos
arpl
lret
mov
clc
enter
or
test
rolb
ficomps
xor
sahf
jnp
in
adc
cmpsl
int
movsl
jle
lea
mov
movsl
inc
adc
test
aas
insl
daa
subb
cwtl
and
fdivr
in
mov
pop
and
sub
movsb
adc
or
fdivs
dec
lds
outsl
or
idivl
inc
shrb
stc
in
ljmp
or
sti
in
hlt
in
das
and
outsb
push
xchg
xor
push
sbb
push
and
mov
pop
adc
fwait
jmp
fdivrs
sbb
popf
inc
fnstcw
and
pop
xchg
insl
rcr
push
into
nop
add
out
jno
test
test
lock
jecxz
std
imul
sbb
pop
jbe
stos
jge
incl
mov
push
sub
and
outsl
push
push
pop
lret
cwtl
xchg
shl
shll
pop
sahf
xchg
out
xor
ret
fs
shlb
inc
in
shrb
adc
adc
dec
add
js
sbb
ret
push
popa
jmp
xchg
add
pop
sbb
push
sbb
xlat
ja
out
mov
dec
add
mov
test
pop
and
jae
adc
or
in
mov
les
push
sarb
xor
int3
pop
arpl
mov
add
testl
fs
insl
jle
push
dec
mov
cmc
dec
shrb
mov
lret
sub
add
arpl
or
sbb
les
inc
in
daa
and
fdivrp
mov
test
pop
xchg
sahf
lods
or
pop
loope
mov
and
inc
add
sub
pusha
hlt
icebp
add
shlb
rolb
xor
mov
inc
call
cltd
or
pusha
cmc
push
fistps
xor
aaa
lds
das
inc
cmpl
pop
pop
cld
stos
ret
mov
push
ret
das
popa
xchg
and
push
xor
add
mov
out
into
ret
dec
aaa
insb
in
sub
dec
dec
inc
jo
ret
cmp
fdivl
or
int3
xor
lock
ret
add
push
mov
cmpsb
clc
aas
hlt
nop
sbb
orl
mov
lods
stos
ret
sbb
jecxz
mov
fimull
dec
sub
push
sbb
dec
pop
pop
push
sub
jg
rol
inc
ret
xchg
add
leave
sbb
and
lods
sbb
sbb
rorl
jae
and
xchg
je
dec
test
fucomip
hlt
adc
fadd
movsl
icebp
inc
and
mov
mov
mov
lods
data16
scas
addb
xor
and
mov
aam
loopne
sub
aad
rcrb
and
jg
push
push
fcmovbe
nop
daa
shr
cld
adc
cmp
or
popa
scas
inc
addb
movsl
insl
pushl
pop
or
inc
and
mov
lods
sub
or
jns,pn
dec
outsl
cwtl
push
es
pop
adc
insl
mov
mov
rol
inc
arpl
mov
popa
push
ss
jns
pop
cs
sbb
mov
hlt
fucomi
dec
pop
rcll
jnp
push
add
add
scas
scas
lret
testb
gs
push
adc
xchg
aaa
loop
inc
ret
dec
and
lcall
incb
push
mov
leave
inc
pop
jno
in
push
das
inc
movsb
push
push
shrl
jno
jnp
mov
repz
jo
filds
fidivrs
mov
sbb
ret
mov
pop
shll
in
mov
lcall
lret
mov
fldl2e
or
mov
sbb
xor
enterw
leave
popa
test
ljmp
sub
xchg
dec
movsb
jno
xchg
mov
fnstsw
rol
push
mov
jno
jne
adc
aaa
andb
xor
rolb
in
mov
fsub
inc
or
lods
clc
jbe
sub
out
cwtl
adc
jle
sti
fsubrs
lds
js
add
dec
mov
push
pop
lcall
lods
mov
sub
popa
jne
les
lods
dec
push
add
jecxz
sbb
rcr
mov
push
nop
jl
cwtl
jg
movsb
mov
push
filds
dec
lret
aaa
sbb
sti
cld
testl
push
sbb
nop
out
shrb
push
mov
jbe
icebp
and
pop
cltd
pop
xor
push
divps
inc
jecxz
sbb
jle
dec
scas
leave
and
pushf
test
xchg
lcall
decb
dec
movsl
mov
mov
lods
add
bound
adc
shrb
dec
mov
jb
push
push
mov
popf
jge
adc
lods
jecxz
adc
jns
push
lea
mov
and
mov
inc
sti
jmp
or
fstps
enter
out
mov
stc
mov
js
mov
int
arpl
ljmp
cmp
pop
mov
adc
scas
or
inc
mov
aad
sbb
imul
mov
adc
inc
ret
fdivrp
add
mov
xor
push
xchg
jg
outsb
push
imul
lock
out
arpl
xchg
push
js
push
sub
lahf
movsl
jns
stc
jbe
mov
mov
sub
mov
lock
jo
rcrb
in
or
xchg
bound
mov
xchg
mov
ss
and
sti
ja
mov
pusha
sarl
sub
in
jl,pn
les
sbb
aam
enter
dec
pusha
pop
loopne
pop
stc
mov
mov
pop
out
push
out
loopne
movsl
aam
xchg
rolb
mov
cmp
hlt
scas
lcall
insl
push
push
mov
and
dec
push
sub
add
cmp
dec
or
cmpsb
orb
ja
inc
add
imul
shlb
cli
js
clc
fsub
jnp
sub
ret
cmc
movsl
sbb
add
andb
arpl
push
xor
cwtl
mov
call
clc
cmpsl
pop
ja
sbb
insb
mov
pop
sahf
cmpl
clc
aam
cmpsb
mov
mov
fstl
xor
and
ret
cmp
or
aam
sbb
fwait
sub
jmp
jmp
ret
adc
add
rcrb
icebp
mov
mov
push
xchg
or
outsl
jg
jge
and
adc
jns
pop
subps
add
or
sub
clc
xchg
mov
fiadds
fstps
nop
mov
add
inc
add
das
sbb
int
loope
adcl
xchg
test
aam
pop
lea
mov
stos
clc
out
adc
xlat
sahf
movsb
cmpb
clc
jb
andl
add
or
pop
add
adc
mov
fnstenv
popa
enter
std
pop
mov
or
int3
pop
outsl
stos
or
movsl
cmp
inc
inc
or
adc
jecxz
mov
movsl
jmp
pop
and
push
imul
mov
loopne
mov
jmpw
maxps
cmp
jl
inc
outsb
adc
ljmp
sbb
mov
or
mov
sbbl
test
xor
xor
jo
ss
xor
mov
jne
repnz
rolb
nopl
mov
inc
clc
sbbl
sub
popf
sub
insl
jle
jg
xchg
pop
scas
or
mov
dec
mov
mov
inc
add
out
pop
sbb
push
in
out
insl
add
fists
es
jno
push
dec
dec
rolb
loope
dec
das
negl
rol
gs
push
and
pop
xor
mov
or
mov
jne
mov
ljmp
xor
ss
cmp
cmp
mov
pop
call
fildll
sbb
pop
fstpl
sti
add
cmp
jbe
ja
fnstenv
push
pop
dec
sbb
repnz
arpl
dec
lea
scas
out
add
add
jp
data16
mov
jbe
faddp
mov
shll
std
lea
sbb
adc
bound
or
sub
xchg
mov
push
jne
mov
mov
outsb
frstpm(287
jo
gs
cs
nop
jbe
xchg
xor
orb
pushf
fstl
out
pop
dec
add
sbb
arpl
jecxz
ljmp
push
or
jg
popf
push
sbb
rcll
cld
dec
push
test
cmp
loop
and
jg
xchg
sub
or
cmpsl
pop
das
pop
test
je
push
mov
ljmp
mov
add
loope
fmul
lret
push
fsubr
clc
mov
bound
or
adc
scas
inc
das
dec
jg
fisttpll
cmpsl
add
jns
outsl
add
or
push
push
lock
dec
add
pop
call
lcall
sbb
mov
jo
scas
mov
fisttpl
dec
cmc
mov
or
adc
jge
aas
sarl
sarl
push
sbb
mov
jo
inc
data16
adc
push
inc
sbb
lock
leave
outsb
or
addr16
dec
mov
xlat
pop
xor
jno
add
pop
test
out
lret
jl
cmp
cmp
aas
sahf
or
cwtl
movsb
cmp
xchg
xor
and
cmc
push
xchg
or
test
pushf
or
jb
loope
cmpsl
test
aam
dec
mov
insl
or
dec
mov
in
cmp
pop
xchg
les
imul
inc
test
lods
in
call
and
adc
inc
bound
adc
mov
incl
insb
out
sbb
int
cmc
addr16
stos
sarl
inc
sbb
and
clc
dec
into
stos
sub
orl
lds
incl
mov
xchg
clc
and
and
cli
mov
pop
or
idivb
in
insl
and
pushl
das
les
lea
lret
lods
insb
scas
adc
push
stc
and
stc
push
pop
or
xor
adc
outsl
repz
jmp
aam
mov
jmp
inc
nop
push
aad
cmp
sub
testb
mov
or
pop
mov
das
sbb
cmp
push
mov
mov
outsl
addr16
jl
fstpl
fiadds
add
jg
mov
adc
fstl
mov
or
pop
xor
sub
push
sub
pop
xchg
jo
cmpsl
jno
cmpsl
sbb
mov
mov
cmc
mov
cltd
sbb
push
jb
insb
push
add
push
add
mov
mov
dec
fwait
dec
adc
and
ljmp
jno
js
sbb
movsl
out
ficompl
push
enter
fs
in
lahf
jo
push
push
call
das
mov
inc
xor
dec
inc
repnz
push
xchg
ss
clc
dec
addr16
and
inc
jb
or
pushl
icebp
out
pusha
cmp
lcall
jp
cmc
in
or
mov
fwait
pop
mov
xor
mov
fwait
push
iret
inc
add
test
hlt
mov
adc
roll
jb
cld
insl
aas
aam
rcrl
and
mov
or
jecxz
lock
cmp
pop
insl
aam
jmp
lcall
nop
sub
popf
mov
dec
cmp
fcomi
push
sub
adc
mov
jo
nop
mov
or
and
imul
jbe
fbstp
stos
pop
jo
pop
in
sbb
out
inc
mov
add
cmp
insb
inc
push
cmpsl
fsubl
enter
mov
sub
test
pop
push
cmp
lret
aas
lds
adc
mov
sub
aaa
shl
push
mov
sqrtps
inc
jo
jmp
or
arpl
movb
push
inc
and
inc
scas
sbb
not
mov
mov
xchg
lret
gs
lock
loop
mov
adc
dec
movl
or
sbb
sub
loop
je
and
and
fistpll
sbb
mov
pop
add
and
mov
ficoml
sbb
mov
fnsave
sub
add
push
rcrb
mov
aaa
aas
mov
dec
ror
sahf
jle
fsts
cmc
mulb
sbb
fisubl
jb
loopne
fimuls
pop
fs
dec
ret
or
cmp
cmpsl
inc
orl
add
pusha
rorl
cwtl
or
dec
adc
aas
push
mov
hlt
lret
jbe
mov
cmp
or
lahf
decb
dec
lods
scas
inc
fdivr
lds
bound
loopne
mov
subl
mov
push
fisubs
sub
pop
test
fdivs
leave
pop
sub
fcom
pop
in
call
cmp
mov
sub
mov
xchg
nop
repnz
loope
mov
cmpsl
dec
push
sub
xchg
add
insl
mull
xor
jecxz
add
popa
sbb
vmovshdup
and
and
jnp
inc
test
cwtl
int3
es
mov
mov
dec
lods
insb
mov
out
mov
push
scas
ret
in
fdivrl
add
inc
dec
push
test
and
pop
fs
jg
pop
fstpl
mov
mov
inc
incl
rcr
outsb
fildll
sbb
lods
inc
fcomps
push
cmp
mov
pusha
lret
scas
movaps
out
adc
mov
xor
in
orl
xor
jne
je
das
cmp
xor
and
inc
mov
cltd
movsb
loope
sub
lea
ss
cmp
inc
and
add
in
ret
xchg
mov
std
incl
pop
sub
mov
int3
inc
pop
mov
popf
mov
out
xor
inc
and
cltd
cmp
push
stc
jg
adc
lret
inc
xchg
lods
scas
shlb
jl
xor
adc
rcl
movsl
shll
ret
fwait
xor
push
lcall
outsl
xor
nop
rcl
xchg
stos
insb
ljmp
mov
jo
xchg
scas
imul
aam
data16
mov
pop
xchg
ret
adc
pop
sub
int
inc
add
bound
adc
sahf
pop
xor
fildl
iret
lcall
shrl
dec
sahf
dec
fistpl
adcb
xchg
pop
xor
mov
jp
sbb
or
pop
ss
hlt
ds
cmp
call
mov
mov
or
lea
fildl
cmp
jge
adc
je
dec
aaa
lcall
inc
jge
inc
dec
adc
pop
pop
jns
sbb
mov
fs
adc
mov
fdivs
fstps
bound
pop
sbb
mov
out
inc
adc
mov
nop
enter
adc
jge
je
pop
sub
pop
or
mov
and
mov
xor
test
mov
pop
stos
add
out
cmpsb
mov
adc
fisttpl
and
ss
mov
call
mov
fsts
dec
loopw
loopne
mov
inc
sbb
adc
sub
aaa
subb
movsb
fs
cmp
shll
adc
jne
mov
imul
jge
fidivl
mov
fs
or
rol
out
pusha
mov
push
cli
xchg
cmp
dec
repz
xlat
aas
repnz
adc
rorb
add
sti
fbld
dec
push
mov
aaa
and
mov
les
and
jg
or
pop
jl
and
add
fsubrp
mov
iret
xchg
jnp
loopne
pop
mov
icebp
jge
or
push
adc
gs
lock
mov
sub
adc
test
in
inc
cmp
stc
sti
cwtl
addl
cmpl
mov
scas
sbb
int3
xchg
mov
or
fs
jecxz
pop
jb
mov
xchg
push
xchg
adc
sub
lcall
xchg
push
mov
adc
push
loope
sahf
add
xor
inc
or
int3
dec
fisubrs
sub
sub
inc
fdivrp
fwait
adc
fwait
movsl
jl
addl
orb
ret
fcmovnu
jbe
adc
ret
test
out
int
leave
or
hlt
mov
pop
add
out
cmp
inc
in
or
dec
and
xchg
cmpsb
mov
and
scas
or
fcmovu
ud1
dec
les
sbb
test
ss
ljmp
lret
call
rcll
mov
sti
dec
add
sbb
push
jge
adc
jecxz
aas
push
lock
out
xor
lods
daa
or
je
stc
fisttpll
rep
popa
pand
loope
outsl
or
popf
add
outsl
sub
test
or
ret
popf
add
pushl
sti
adc
xor
mov
and
loope
pop
or
pop
jl
out
push
orw
adc
add
add
push
in
ljmp
pop
repnz
xchg
mov
cld
lea
shr
jmp
xorl
out
pop
cli
stos
add
das
mov
into
inc
pop
sub
push
cmc
shlb
loop
push
cmp
xor
in
pop
js
sub
lds
mov
in
icebp
push
cmc
and
lods
ffreep
ret
movsl
inc
fidivl
adc
and
leave
dec
inc
rcll
push
mov
lods
mov
xchg
sub
mov
sbb
lods
das
pushf
push
push
adc
jmp
jl
cmc
sbb
cmc
inc
push
mov
lds
sub
subl
dec
dec
insl
loopne
out
or
sbb
and
shrl
outsl
pop
daa
in
outsb
lret
sbb
mov
cmc
or
lock
mov
cmpl
sti
pop
xchg
ds
shlb
xor
mov
ljmp
shrb
dec
test
and
subb
mov
adc
test
ret
pop
fs
cltd
pop
push
inc
mov
pop
jbe
fdivl
and
xchg
dec
jmp
fptan
pushl
mov
jb
sub
inc
icebp
cmp
mov
rcl
fwait
call
inc
add
inc
inc
push
lret
and
or
pop
mov
push
sub
mov
popa
push
lahf
outsb
and
prefetch
pop
xchg
das
xchg
test
fdivrs
nop
add
jmp
add
out
mov
test
scas
bound
xor
incl
add
pushf
test
mov
xor
ss
scas
sub
jmp
add
mov
shl
inc
loopne
jno
add
mov
inc
fistpll
cmp
mov
sbb
scas
arpl
imul
in
inc
aaa
mov
aam
sahf
sub
xchg
mov
dec
test
loope
add
pusha
sarl
test
xchg
xor
dec
sarl
or
mov
inc
mulb
mov
pop
inc
mov
mov
lret
ficompl
fbld
jo
add
push
call
andb
adc
test
fwait
clc
fmul
jne
out
out
push
mov
inc
mov
loopne
add
jl
mov
pushf
xchg
add
jl
repz
aaa
jo
addl
js
stos
fsqrt
dec
insb
jge
aaa
jg
loopne
and
sbb
dec
cld
aad
fisttpl
jb
ds
cmpsb
into
jbe
cmp
imul
lret
pop
pop
sub
xor
mov
jl,pn
dec
xor
mov
aam
in
call
nop
sahf
fcoml
mov
and
clc
fnsave
mov
mov
int
gs
cmpsl
outsl
fdivl
iret
in
pop
xor
cmp
lock
test
pop
ret
sbb
inc
or
xchg
movsl
subb
xchg
outsb
popl
roll
lods
jmp
stos
lods
gs
push
rclb
mov
adc
push
push
add
lret
or
fwait
push
daa
fisttpl
mov
jp
mov
mov
pop
aam
test
fistpll
jp
pop
ss
mov
mov
aas
cmp
clc
xchg
int
not
or
imul
pushf
out
jo
outsl
fsubs
dec
jg
inc
inc
inc
test
rorb
orl
jmp
daa
pop
sub
xlat
inc
mov
addb
call
jns
sarl
inc
mov
mov
push
fst
dec
pop
xchg
cld
push
add
ja
fisubrl
inc
test
std
lret
rcll
je
shrl
lcall
push
xchg
sbb
stos
subl
and
dec
inc
add
mov
xor
std
rcrb
daa
mov
sarl
int
iret
fistps
or
popa
test
xchg
arpl
in
dec
sub
scas
in
roll
jb
jl
or
or
in
stos
adc
nop
sub
shlb
andb
movl
pusha
fs
lds
scas
xchg
sub
inc
pop
pop
cmpsb
sbb
mov
loopne
in
or
xchg
push
add
lds
call
xlat
insl
sbb
push
adc
je
push
dec
xlat
insl
and
ret
mov
js
jno
es
jno
mov
push
shll
xchg
xor
cmp
mov
xchg
push
cmpsl
mov
filds
xchg
jb
add
into
test
cmp
insl
pop
aaa
fnstsw
mov
sub
sahf
je
das
test
or
mov
add
xchg
and
add
xchg
stos
std
push
negb
cmpsb
outsl
insb
add
mov
cmp
xchg
ss
sub
scas
push
sbb
pop
outsl
cmc
xor
mov
mov
xchg
negl
lea
jle
jle
clc
ljmp
pop
adc
xchg
pop
mov
push
ss
aaa
sub
insb
pop
aad
xchg
mov
mov
pusha
adc
xchg
cmp
add
in
mov
cmpsb
adc
adc
dec
test
xor
adc
out
insl
jecxz
pop
dec
mov
shll
ljmp
mov
mov
adc
add
adc
mov
nop
jo
aad
inc
test
fadds
cmpsb
mov
imul
mov
ficompl
mov
lahf
cmp
fldenv
ret
push
sbb
mov
outsl
mov
je
jp
fsubl
cmp
mov
xchg
fsub
adcl
ss
les
pop
mov
mov
jl
mov
ret
and
jecxz
test
enter
mov
loop
inc
lret
mov
and
arpl
dec
mov
inc
mov
inc
loope
push
xor
subb
aad
out
xor
scas
andl
mov
sbb
adc
jmp
push
adc
xlat
xchg
mov
and
lcall
int
rcrb
bound
sbb
or
mov
pop
mov
adc
push
jge
xchg
xor
mov
cli
mov
jae
fwait
dec
icebp
aas
jecxz
pop
and
ja
push
add
sub
pop
cmp
cmpsb
jbe
xchg
test
into
mov
mov
pop
fdivrs
cmpsb
sarl
adc
jge
jmp
das
insb
scas
imul
xor
loop
popa
jnp
adc
lea
push
adc
test
fdiv
lcall
mov
cwtl
fidivrl
or
xor
lcall
scas
sbb
jbe
dec
shrb
jb
inc
mov
xchg
stos
inc
and
adc
dec
adc
mov
fnsave
push
dec
cmp
adcb
rolb
nop
mov
es
cld
sub
cli
dec
out
jge
jp
xchg
cmp
pop
xlat
xor
imul
in
adc
lret
dec
jp
xchg
cld
dec
xor
sarl
xchg
and
aad
dec
in
ss
lock
sbb
mov
pushl
test
and
icebp
ss
cli
xchg
loope
adc
lret
int3
push
ds
jbe
push
push
pop
rol
js
xor
std
pop
nop
and
jmp
adc
cld
jbe
and
sbb
cmp
pop
shr
shrb
sbb
fistl
test
pop
add
pop
test
je
cli
scas
sub
mov
stos
inc
mov
js
mov
shl
fbstp
scas
jb
aaa
and
mov
rolb
cmpsl
aas
jg
or
cmp
leave
test
mov
popl
xor
sub
cmc
ret
movl
mov
mov
cmp
pop
inc
roll
xchg
cmc
out
out
add
mov
lahf
or
lahf
mov
jae
cmp
test
and
outsb
and
ret
jnp
sarl
arpl
das
outsb
ljmp
jo
jmp
add
and
nop
xor
lock
ljmp
loope
sub
lods
shrb
jnp
add
addr16
out
jo
push
sahf
xchg
push
test
mov
pop
mov
mov
lea
adc
pop
jle
and
insb
outsb
scas
or
push
mov
sub
in
aaa
cmp
leave
sub
sbb
xchg
test
jno
cld
mov
inc
mov
jmp
mov
outsl
test
xor
pushl
icebp
xchg
xchg
dec
bound
lea
je
inc
adc
inc
ss
mov
outsb
daa
jecxz
pop
push
mov
jo
rcrl
adc
mov
xchg
cltd
inc
xor
out
in
mov
dec
mov
dec
out
jne
sti
or
pusha
sbb
sbb
adc
enter
cmp
repz
push
fldcw
and
imul
xor
test
cmp
add
lods
sbb
orl
mov
mov
push
fcmovnb
pop
sbb
ret
sbb
adc
add
or
sub
inc
pushw
pop
pop
call
icebp
jns
adc
xor
testb
cmp
imul
lahf
inc
les
pop
mov
sub
sbb
shll
fs
jg
xchg
sub
jle
mov
pop
pop
add
les
clc
pop
push
call
push
fiadds
adc
sbb
jmp
add
lods
xchg
mov
shll
int
das
push
movl
fsubp
cmp
mov
inc
cmc
xchg
mov
stos
notl
outsb
clc
jg
movsb
xor
dec
movq
repz
sbb
les
out
sti
lret
xor
les
mov
lds
pop
mov
pop
jmp
jb
mov
leave
dec
jbe
mov
into
fsubrs
rclb
mov
mov
pop
in
insl
pop
add
or
mov
or
push
push
mov
rsqrtps
sub
cs
cmp
add
mov
adc
fdiv
inc
dec
in
pusha
cmp
shl
mov
add
call
loopne
dec
mov
repz
subb
lods
sub
mov
dec
out
lret
jmp
dec
outsb
inc
insl
push
mov
adc
aas
dec
dec
jg
pop
lea
xchg
clc
or
xchg
in
shlb
adc
lea
jecxz
add
adc
scas
pop
sub
shlb
mov
leave
or
outsl
sti
test
fsubs
jns
dec
fwait
andl
and
jo
inc
je
mov
mov
in
or
pop
mov
sbb
rclb
and
int3
loopne
mov
xchg
mov
adc
icebp
and
fdivl
ret
in
mov
enter
mov
mov
jg
pop
roll
mov
inc
push
fwait
iret
pop
bound
ret
sub
and
bound
stc
lds
xchg
or
or
fldl
in
mov
rclb
clc
in
push
add
cltd
cld
je
imul
or
notb
mov
xlat
push
das
aas
push
cmp
sub
fidivs
mov
add
and
outsb
sbb
inc
pop
mov
or
adc
sub
jl
sbb
stos
and
sbb
fistpl
cmp
sub
cmp
mov
xor
mov
pop
mov
mov
test
test
rolb
xchg
push
inc
mov
shl
sbb
or
mov
ss
jo
dec
mov
push
incb
mov
cld
and
outsb
cli
outsl
push
push
fld
inc
or
dec
negl
shr
xchg
pop
pop
out
mov
out
jmp
sahf
nop
mov
mov
out
cmp
icebp
cli
aam
or
pop
aad
push
inc
gs
sbb
rcrb
iret
test
jg
xor
push
add
dec
xchg
sbb
mov
inc
sbb
das
insb
test
lea
jmp
test
dec
scas
bt
cmp
adc
mov
mov
test
mov
loopne
jb
jbe
cmp
adcl
mov
cltd
negl
push
lahf
and
jecxz
push
je
movb
lods
and
sub
adc
enter
jle
adc
xchg
push
addl
push
mov
xorl
mov
scas
push
xor
dec
jmp
add
mov
mov
cltd
jmp
jmp
fildl
lea
outsb
xchg
dec
sti
adc
icebp
and
xor
popf
decb
add
inc
mov
testb
cmp
cmpsb
xchg
mov
dec
push
add
or
movsl
fdivl
out
lcall
push
enter
add
mov
push
cmc
bound
push
add
adc
cmc
pop
mov
inc
lahf
ret
cmpl
jg
cmp
push
in
pop
in
push
mov
outsb
mov
test
cs
mov
ret
adc
inc
mull
xor
dec
aaa
cmp
lret
pop
rclb
dec
push
push
inc
insl
add
enter
inc
aaa
lock
push
rcrl
xor
ja
mov
mov
clc
fbstp
jne
and
aaa
js
jl
mov
ficoms
in
fisubrs
mov
test
idiv
scas
or
and
aad
jl
fdiv
sbb
cmp
stos
imul
mov
mov
mov
push
pop
cli
add
jp
int3
dec
sbb
xor
cmpsb
cmp
jle
pop
xorl
call
jle
cwtl
loope
fdiv
cmp
and
jo
das
imul
imul
out
fiaddl
loopne
sbb
sub
scas
gs
pop
mov
push
push
loop
xchg
cmpsb
shl
outsb
cltd
ss
inc
and
jp
push
add
cli
fidivrs
jmp
xchg
ljmp
icebp
shll
out
push
fwait
mov
mov
and
jg
fstl
dec
dec
bnd
mov
add
ljmp
lret
or
push
xor
add
mov
sub
xorl
icebp
lds
test
dec
adc
mov
test
imull
sub
inc
stc
ljmp
add
add
mov
mov
pop
xchg
cltd
pop
pop
aad
push
pop
bt
stc
ds
or
nop
cmp
pop
loop
or
jl
dec
cmp
dec
jo
ja
mov
xchg
jl
jmp
lahf
push
mov
addl
ds
lds
xor
adc
insb
pop
inc
jp
fidivrl
add
movsl
cmpsl
pop
adc
cmp
divl
fwait
mov
fs
je
loope
lds
iret
gs
lock
icebp
into
rcrb
add
mov
xchg
push
xlat
dec
adc
xor
cmp
movsl
js
xorb
test
push
aas
fdivs
in
pop
xchg
loop
cmpsl
rcll
imul
push
loopne
lds
mov
add
mov
scas
nop
fs
dec
in
or
insl
mov
les
js
shrl
pop
outsb
jecxz
adc
icebp
jmp
insl
roll
dec
test
push
sarb
push
mov
rorb
es
cmp
inc
mov
jg
clc
fisttps
mov
cs
fwait
imul
outsb
adc
mov
pop
jp
mov
rcr
popa
xchg
mov
fidivl
adc
xor
pop
mov
and
inc
loop
test
add
mov
das
test
clc
fsubrl
jae
mov
clc
aaa
mov
or
xor
fwait
js
cmp
rcrb
call
mov
imul
repnz
lock
and
add
mov
ljmp
mov
mov
lahf
jl
out
adc
insb
js
adc
adc
mov
cmp
xor
mov
dec
testl
xor
sahf
jmp
or
sarb
mov
jmp
sbb
testb
lods
insl
and
orb
sub
pop
pusha
sbb
icebp
inc
mov
stos
inc
pop
cmpl
loopne
push
es
andl
repz
ljmp
es
outsl
out
fisubl
push
pop
arpl
dec
or
rdpmc
shr
xor
les
loopne
addr16
loope
fdivl
fisttps
mov
mov
ficoml
mov
mov
loopne
outsl
or
icebp
lret
push
ss
mov
mov
insl
aad
cmp
lea
mov
dec
insl
inc
lcall
aaa
fdivrl
out
sub
cmp
push
xchg
clc
jo
adc
test
add
inc
out
fcmovnu
mov
into
and
inc
adc
xchg
jecxz
xchg
pop
fadd
jbe
sbb
ljmp
mov
into
sub
add
movsl
xchg
mov
dec
in
fisubrl
mov
and
jo
cld
stc
mov
xchg
push
add
dec
stos
je,pt
and
stos
pop
sub
push
out
mov
mov
lds
mov
inc
mov
add
jns
mov
aaa
movsb
shlb
test
cmp
clc
add
inc
dec
jno
pop
mov
mov
jmp
addl
sub
pop
call
adc
sub
addr16
imul
in
das
xor
mov
stos
jecxz
jno
mov
inc
cmpsb
pop
lds
cmpsb
cmp
subl
hlt
cli
mov
rorl
sub
xor
mov
hlt
int
popf
out
adc
push
jle
adc
xchg
add
xor
in
pushl
and
pop
and
in
rol
lock
popa
cltd
loopne
sbb
insl
pop
cld
das
shrb
push
std
sbb
rol
call
and
shlb
adc
push
in
aaa
fs
repnz
shll
pop
cmp
addr16
fsubrl
add
mov
movb
test
push
loope
inc
mov
mov
and
hlt
sbb
add
sbb
in
aas
adc
dec
daa
xchg
clc
hlt
ja
pop
imul
into
test
mov
fcmovnu
pop
inc
sbb
das
or
jecxz
xlat
mov
xlat
sbb
xor
push
and
jbe
jge
fs
jae
out
xchg
lea
rorb
in
testb
faddl
popf
lret
jae
push
and
and
jno
sub
mov
mov
cld
xor
pop
sub
idivb
incl
mov
sbb
mov
jecxz
adc
xchg
or
cmp
repnz
ret
pop
add
mov
xor
or
test
xchg
jno
add
stos
lds
adc
test
mov
jle
into
and
xchg
push
rorl
mov
add
test
rcrb
fiaddl
lcall
push
jne
outsl
stc
xchg
xchg
int3
ss
call
out
loop
cmp
vmovdqu
leave
xor
int3
faddp
dec
mov
pop
and
mov
mov
jo
pop
out
cs
push
arpl
mov
jge
xchg
cmp
subb
std
repnz
inc
mov
pop
cmp
mov
inc
imul
jle
mov
call
cli
iret
xor
push
insl
pusha
inc
mov
sbb
fcompl
or
jmp
inc
mov
mov
movsl
mov
mov
icebp
aas
clc
inc
adc
clc
fwait
outsb
pop
adc
lea
jns
fwait
jle
addr16
pop
or
insb
xchg
push
push
test
inc
out
cmpsb
fisubl
push
sbb
andl
or
sub
jbe
jns
mov
and
push
loopne
mov
adc
add
push
cmp
sbb
je
sub
push
in
insl
lea
test
pop
pop
clc
mov
mov
fcoml
push
js
cmp
imulb
sbb
dec
mov
inc
and
sarb
in
and
cmp
repnz
jbe
loop
stc
mov
lret
inc
xchg
sbb
mov
push
inc
mov
lahf
sub
mov
jecxz
push
cli
mov
cli
inc
mov
jbe
mov
push
pop
jne
popf
xor
sbb
stos
sub
mov
int
loope
fcmovnu
enter
in
ss
ljmp
adcl
mov
gs
in
sahf
enter
adc
cmpsb
ja
add
xchg
xor
or
and
mov
js
das
lock
xchg
hlt
pushf
idiv
inc
bound
rdmsr
aam
outsl
imul
push
ret
cwtl
sbb
inc
aam
xor
jp
rorl
adc
clc
inc
jo
outsb
dec
sarb
fbstp
movsb
shrd
rorl
out
and
ss
add
ret
cld
adc
arpl
gs
mov
mov
int
fucom
icebp
les
cmc
push
ror
in
js
mov
adc
cs
rcr
add
push
and
push
jmp
filds
leave
lods
es
mov
inc
mov
icebp
add
dec
lods
push
sub
out
addl
call
xchg
mov
xchg
pusha
xchg
xor
pushf
xchg
ficomps
or
mov
add
in
or
add
test
shl
xchg
add
shlb
jl
push
jo
pop
je
or
adc
mov
cmp
ljmp
insb
adc
jbe
mov
decl
cmp
adcl
mov
inc
loopne
mov
pop
imul
push
fstps
lock
xchg
loopne
sbb
push
add
dec
push
pop
fsubrs
cmp
or
mov
test
out
out
mov
ss
pop
mov
inc
sti
cmp
fstpl
outsb
shrb
pop
lds
mov
insb
repnz
mov
dec
fistl
lock
mov
addr16
ja
cmpsl
jbe
push
inc
les
sub
mov
adc
es
inc
testl
mov
mov
jle
inc
imul
mov
ja
dec
lock
int
daa
xor
xlat
pop
faddl
inc
mov
xor
ret
fucomi
pop
mov
popf
adcb
pushf
pop
mov
sbbl
adc
and
jbe
push
pop
rcll
imul
lret
pop
or
cmp
fwait
outsl
fwait
or
mov
aam
ret
cmp
es
jecxz
lock
pop
in
pop
mov
inc
mov
das
mov
fcompl
cld
mov
aas
cmpsb
jnp
dec
sbb
inc
pop
outsl
mov
sbb
je
inc
call
inc
cmp
or
inc
lock
stos
adc
xor
mov
in
js
pop
add
mov
hlt
imul
jb
aas
xchg
pop
int
mov
sbbl
shll
inc
mov
int
fs
lret
mov
mov
xlat
sub
shl
movsb
fimuls
cmpsb
fwait
pop
pop
rorl
mov
pop
rcll
ret
xlat
push
adc
movsl
or
add
jecxz
jns
xchg
lock
mov
and
or
enter
pop
in
push
idiv
adc
nop
je
adc
xor
repz
call
fwait
xchg
adc
adc
add
data16
cmp
jge
int
outsl
shrl
sub
inc
es
add
adc
cltd
inc
add
push
xchg
mov
test
mov
cmp
stos
rcrb
cmc
sbb
push
pop
test
sbb
mov
or
into
jl
insb
stos
cmp
jle
cltd
sbb
push
cmp
mov
out
xchg
mov
mov
mov
inc
lea
mov
jg
aaa
outsl
xor
mov
rcll
pop
mov
cli
jno
stos
popa
xchg
inc
cmpsb
pop
mov
loope
je
sub
pop
and
lret
lock
aam
movsb
in
mov
mov
or
and
stos
daa
sbb
push
or
adc
icebp
in
and
push
push
test
cmpb
ds
js
xchg
sbb
mov
mov
adc
cmpsb
adc
in
ds
xchg
jp
or
cmp
mov
pop
dec
out
jne
bswap
int
xor
mov
pop
dec
pop
imul
insl
inc
and
mov
cmp
pop
clc
dec
jb
add
push
nop
into
sahf
lock
fldt
jbe
test
lea
pop
or
clc
mov
rcll
js
mov
inc
filds
mov
push
roll
sub
mov
or
jge
xchg
jg
lahf
xchg
lods
mov
in
test
pop
adc
adc
mov
dec
xor
or
cltd
dec
clc
test
loopne
das
dec
imul
cmpsl
popa
xchg
test
icebp
call
addps
aad
mov
mov
clc
scas
insb
mov
frstor
or
outsl
push
and
fwait
scas
adc
fcmovb
dec
es
sub
sahf
push
testl
mov
sbb
or
jge
pop
hlt
sbb
cmp
and
ds
in
rcpps
pop
movsl
xor
popf
aaa
popf
aam
push
inc
fldl
shlb
testb
or
jmp
and
xor
mov
xor
int
adc
je
aas
sbb
popf
mov
jno
xchg
pop
insb
incb
adc
and
pop
movsb
mov
jae
mov
xchg
ret
add
sahf
mov
mov
std
inc
in
fmulp
and
inc
dec
xchg
and
pushf
fstl
sbb
inc
sti
dec
and
sub
lahf
cs
xlat
jo
imul
ret
cmp
sbb
cmpsb
or
inc
pushf
stos
xchg
push
or
add
sub
ret
lock
xlat
jnp
mov
mov
sti
imul
pop
repz
test
hlt
fildl
ret
test
push
inc
or
pop
xchg
fildl
lods
cli
add
dec
inc
pop
fnstsw
pop
int3
mov
mov
xorb
loop
mov
pop
mov
imul
aaa
ds
lods
rcrl
or
lock
or
xchg
push
adc
das
xor
add
inc
sbb
ss
cmp
outsb
sar
xor
cli
pusha
mov
test
stos
shll
fdivs
aam
arpl
sub
jne
adc
lea
push
add
into
shll
or
lret
in
icebp
push
arpl
push
xchg
sbb
and
lea
pop
aam
ret
std
sub
call
mov
mov
add
cld
inc
jne
arpl
mov
arpl
flds
shlb
push
adc
push
xchg
repnz
lret
push
dec
pop
das
adc
xchg
cmp
jo
push
mov
sbb
fdivrp
ret
jne
dec
sbb
bound
in
mov
fldl
rcrl
or
mov
test
xor
rorb
cmc
daa
pop
outsl
rolb
mov
dec
or
mov
addr16
mov
and
into
cmp
jg
test
mov
dec
adc
in
dec
jle
iret
jne
pushf
sahf
mov
pop
xor
and
xchg
out
outsb
mov
jecxz
pusha
sti
mov
rcr
cmc
cld
dec
adc
daa
sub
adc
pop
jno
mov
inc
enter
in
pop
bound
push
jbe
lret
ret
inc
xor
ret
ffree
leave
inc
mov
mov
aas
ret
and
or
jb
adc
test
ret
jo
push
pop
insb
test
or
mov
pop
cld
push
js
pop
xchg
dec
cmpsl
dec
adc
rcl
testb
ljmp
shr
sbb
add
lea
pushf
outsb
das
or
test
rcrb
shrl
inc
aad
shll
stos
out
cli
add
cltd
scas
or
dec
add
xor
lahf
adc
mov
add
out
js
cltd
mov
mov
inc
mov
mov
xchg
in
les
in
push
jnp
lcall
or
rcl
ds
sub
pop
int
shr
stc
sti
mov
rcrb
scas
push
out
and
popa
ds
rcll
in
setle
push
je
dec
push
dec
shlb
sbb
lods
test
xor
adc
xchg
cmc
insl
insl
or
sbb
cmpsl
shlb
sti
and
jp
add
push
jno
stos
std
pmullw
mov
in
movsl
and
ret
push
outsl
das
mov
add
or
or
popf
loope,pt
fwait
push
fwait
jmp
gs
add
xor
mov
pop
xchg
test
mov
add
dec
push
xchg
xor
add
dec
shrb
push
lods
dec
cmpsb
pop
dec
sub
push
aaa
aam
ljmp
mov
mov
or
push
daa
in
in
xchg
jecxz
orb
sti
push
sub
inc
rolb
test
negb
ret
add
mov
adc
dec
imulb
inc
out
dec
sbb
xor
sahf
lds
mov
aas
data16
repnz
xchg
mov
or
dec
push
inc
adc
xchg
loope
in
enter
out
call
xchg
inc
out
arpl
insb
das
insl
push
cmp
popf
lret
or
scas
push
ja
arpl
or
clc
sbb
icebp
xchg
int
xlat
mov
jecxz
jl
mov
add
or
or
sub
ret
cmp
jle
adc
and
cwtl
pop
push
leave
push
shll
outsl
rcrl
mov
roll
daa
mov
add
xor
dec
mov
outsl
mov
push
push
cld
dec
mov
jbe
and
sbb
xchg
loopne
inc
mov
xchg
inc
cmp
or
add
in
inc
jge
bound
mov
jb
pop
pusha
cmc
scas
popa
add
loope
inc
mov
dec
dec
sbb
push
fldt
into
cmp
pop
scas
fsubrl
aaa
mov
pop
push
test
cltd
jnp
inc
or
inc
movsl
inc
sbb
ds
fildll
les
push
mov
adc
out
xor
lea
and
cmp
aam
repz
out
xor
mov
jmp
outsl
lds
fistpl
dec
mov
sbb
call
mov
cmp
cwtl
sbb
push
mov
cli
lock
inc
adc
mov
rolb
mov
fimuls
xor
movsl
sub
mov
sbb
dec
rcrb
push
fwait
test
test
cmpsb
les
mull
cmp
loopne
outsb
push
enter
mov
pop
inc
xchg
aam
push
or
inc
pop
sbb
xor
inc
pop
push
mov
clc
push
ret
mov
push
stos
lahf
shll
imul
repz
add
jg
inc
adc
or
aad
jnp
push
cmpb
icebp
rclb
push
in
mov
lahf
cltd
cmpsb
jns
aam
lods
push
jb
out
scas
nop
fcoml
jg
mov
insb
movsl
call
inc
dec
cld
mov
adc
dec
jg
scas
les
insl
call
adc
and
xlat
xchg
cmp
leave
notb
fnstenv
insl
jnp
pop
inc
or
cmp
pop
sub
xchg
jle
cld
and
cmpb
mov
lret
cmpsl
add
mov
rcrl
pop
frstor
pop
xchg
or
lahf
fcmovb
inc
lea
mov
mov
push
mov
xorl
lret
mov
add
sub
cs
add
mov
mov
jp
pop
cmpsl
add
fdivs
push
sbb
sbb
pop
pop
hlt
mov
push
xchg
addr16
push
xchg
xchg
jbe
test
cltd
cmp
inc
roll
in
out
ljmp
and
add
rcll
cmp
dec
or
adcb
mov
sbb
add
fstpl
cld
scas
push
mov
add
mov
pop
xorl
xor
sbb
js
out
fucomp
sbb
xorl
sbbl
or
add
push
mov
bound
sbb
inc
xchg
pop
in
cs
sub
and
stos
ja
test
mov
mov
or
jns
arpl
mov
mov
or
bound
sub
jae
mov
xchg
lods
sub
in
pop
dec
ret
aaa
and
aad
lock
cmp
subb
fbld
adc
push
mov
xor
rcrl
xchg
add
aaa
pop
push
pop
repnz
outsb
xchg
mov
push
jecxz
popa
xchg
mov
add
jg
push
jge
dec
daa
insl
mov
pushl
xchg
daa
sub
jae
mov
lods
aaa
adc
add
repz
mov
mov
jmp
lds
pop
or
loop
dec
decb
pop
loopne
rorl
inc
lret
sbb
loop
insl
and
sub
outsl
push
pop
aaa
cmp
je
jmp
out
scas
inc
inc
lcall
xor
push
imul
add
pop
xchg
mov
mov
imul
fadds
xchg
and
out
into
test
xchg
lock
or
pop
aam
popf
fidivrl
test
adcl
cs
jge
insb
sbb
loopne
inc
inc
add
mov
fimull
loopne
add
push
mov
dec
enter
push
mov
inc
adc
in
movb
bound
movsl
jne
lock
shrb
dec
mov
xchg
inc
pop
sahf
movsl
fiaddl
inc
jo
out
adc
push
mov
arpl
mov
push
inc
jl
cltd
xor
jge
icebp
std
cmpsl
fstp
inc
and
jo,pn
push
ret
pop
fcom
and
rorl
and
cmpb
mov
gs
addl
mov
cmp
mov
or
in
adc
js
mov
aam
es
and
xor
lea
xchg
pusha
int
shll
jle
pop
or
lods
ffree
add
push
push
jo
fcomip
inc
dec
hlt
hlt
jecxz
enter
rcl
and
gs
scas
addr16
and
fbstp
xchg
mov
or
push
or
mov
lahf
pusha
aad
ffree
rorl
jle
xor
test
adc
mov
cmc
pop
faddl
cmp
sti
push
xchg
mov
rcrl
stos
das
mov
stc
xchg
mov
inc
or
icebp
mov
push
or
es
roll
cmp
mov
mov
in
or
or
shll
mov
cmpsb
lahf
clc
test
jle
call
fdivrs
add
mov
mov
in
stos
gs
mov
or
nop
call
ja
aam
or
test
movsb
cmp
testb
mov
push
cmp
xchg
ret
or
movsl
push
filds
jecxz
sub
dec
dec
add
daa
in
arpl
xchg
not
sbb
clc
fmull
cmpsl
cmp
icebp
jecxz
gs
adc
adc
sbb
mov
jbe
cmp
sbb
xchg
test
sub
mov
sysenter
into
ss
jb
insb
call
add
movsl
jl
pop
inc
lahf
movsb
sbb
jb
push
fidivrl
test
xlat
cmc
int3
pushf
test
inc
jmp
xchg
fs
push
jge
test
add
nop
movl
sub
test
clc
add
jmp
inc
fcomip
aam
jno
adc
sbb
push
cmp
and
sub
sub
out
sbb
sub
jns
mov
jecxz
pop
jle
cmpsb
and
test
dec
fcoms
pushl
xor
test
sbb
dec
sbb
fst
mov
mov
hlt
adc
fs
adc
aas
fidivs
mov
or
movsl
jne
aas
fcmovb
outsl
pop
clc
in
add
out
inc
jns
xchg
adc
shl
xor
test
aam
das
jge
push
cmp
or
dec
dec
xor
pop
xchg
in
mov
inc
fistps
mov
push
lret
add
scas
push
push
mov
rcll
mov
mov
mov
sbb
pop
mov
xchg
sub
cwtl
stos
popa
inc
pop
jle
loopne
inc
jb
sahf
adc
subb
clc
testb
cmpsl
adc
mov
jecxz,pt
jmp
ljmp
fmuls
dec
xchg
jecxz
cwtl
sbb
xchg
pop
sub
mov
xor
sbb
orl
lgdtl
mov
shl
dec
xchg
addl
add
shlb
dec
outsl
call
sahf
ds
push
filds
lret
inc
jecxz
sbb
rorl
leave
pop
and
mov
inc
or
test
shrl
clc
repz
push
dec
jmp
andb
pop
or
sub
jbe
add
sbb
arpl
add
jo
stos
clc
mov
dec
inc
add
stc
sbb
inc
sbb
cmpxchg
cmpb
fdivrl
mov
add
ret
inc
jge
fidivl
testl
in
test
or
mov
jbe
repnz
rcll
lret
outsb
and
ret
ret
xor
js
xchg
dec
insb
test
sbb
cmp
outsl
cmp
mov
mov
and
inc
test
js
es
inc
fldz
push
jmp
cmp
fisttps
mov
outsb
lods
dec
pushf
and
fistpll
cmp
adc
jle
or
cs
sub
rorb
or
cmp
in
sub
sbb
jns
add
push
rcrl
mov
mov
mov
call
dec
jo
notb
test
int
push
movsb
pop
inc
inc
aam
mov
adc
push
and
std
cmp
jmp
mov
add
mov
test
or
xor
pop
jb
orl
fisubs
fnsave
iret
and
dec
and
push
mov
stos
fsin
adc
in
mov
pop
lcall
fcompl
rcrb
jo
outsb
and
fcmovne
rorb
sti
cmp
pop
sub
push
or
lcall
cld
pop
js
and
cmpsb
dec
mov
xor
jg
jb,pt
or
push
dec
add
test
das
mov
cltd
clc
fstpt
xadd
mov
adc
mov
sbb
adc
cmpsb
out
dec
mov
imulb
pop
push
inc
aaa
push
in
fcoms
shrl
push
aad
or
and
bound
jbe
or
mov
jl
jb
lea
lock
add
dec
jg
sarb
push
lock
mov
lret
lret
push
and
inc
filds
jmp
bound
inc
jle
loope
filds
dec
push
xor
ret
pop
imul
cmp
gs
int
aas
xor
jne
pop
mov
sub
cmp
jno
adc
push
jge
jmp
mov
jmp
cmpsb
or
adc
aad
call
lea
int3
add
nop
mov
xchg
xlat
or
push
mov
push
jno
js
in
js
sub
lock
xchg
add
mov
mov
fbstp
jbe
je
ds
ret
push
or
arpl
jecxz
xchg
fists
insb
xor
cmp
mov
insl
sbb
dec
or
dec
ret
in
dec
fdivl
jge
xor
mov
sti
add
pop
out
pushf
cmpsb
fwait
js
out
xlat
jne
cmp
jmp
dec
mov
in
mov
lea
addl
add
icebp
sti
sbb
jae
sbb
cmc
sub
sbb
dec
into
dec
cmp
push
in
xchg
aaa
les
fnstcw
aaa
ljmp
icebp
pop
mov
add
aaa
sub
sub
cwtl
push
mov
add
push
sti
jmp
xchg
or
std
lcall
dec
cmp
out
sub
imull
imul
and
inc
ljmp
cld
cmp
cld
ljmpw
cmp
rol
inc
mov
rcr
js
loop
sbb
pop
popf
push
std
test
pop
lods
adc
adc
and
pusha
push
repnz
mov
loope
scas
pop
adc
test
fucom
mov
dec
and
test
into
xchg
jg
jle
js
mov
mov
inc
push
pop
sub
scas
jg
into
int3
inc
mov
pop
mov
cs
lcall
gs
add
push
lcall
outsb
fstpt
adc
push
adc
sbb
cld
in
jg
scas
or
push
adc
sbb
mov
push
pop
and
push
mov
js
sbb
or
jp
push
mov
mov
lcall
mov
std
pop
lock
mov
xchg
ja
mov
cmpsl
mov
mov
inc
lea
shlb
xlat
sahf
iret
test
push
cwtl
add
in
enter
leave
addb
adc
lret
pop
adc
jg
adc
orb
pushf
scas
je
pop
rcr
in
call
loope
pop
or
mov
ret
push
ret
jnp
stc
dec
fisttpl
fistl
loopne
pop
data16
xchg
cmp
add
scas
and
dec
incl
sarl
loope
jp
mov
cmp
shll
bound
imul
mov
bound
lods
sub
sahf
cld
sbb
ljmp
xor
outsl
inc
sbb
push
sub
xchg
xchg
mov
xor
inc
sub
fwait
sbb
sarb
xchg
mov
mov
xor
sub
dec
or
shlb
sbb
and
push
mov
clc
fisttps
incl
jae
stos
in
iret
sub
sti
sbb
pop
ret
xchg
imull
dec
inc
jbe
mov
outsb
mov
fnop
inc
add
cmp
inc
sti
ja
and
data16
cmp
add
cli
arpl
adcb
jmp
jnp
iret
inc
enter
test
xchg
fiaddl
jmp
dec
jb
cli
jb
jmp
ficoms
pop
mov
mov
pop
mov
xchg
in
mov
lock
pop
outsl
cmp
lock
je
test
pusha
add
test
jecxz
mov
adc
and
out
mov
movsl
xchg
gs
xchg
loopne
cmpsl
div
pushl
mov
or
fisttps
jl
repz
popf
inc
mov
pop
jg
jbe
fs
aaa
jb
fcompl
mov
notb
test
cmpb
mov
and
mov
das
in
push
adc
test
mov
pushf
mov
fidivs
popf
adc
dec
clc
push
lock
mov
push
sub
jnp
dec
popa
lea
outsl
push
rclb
add
sbb
dec
fldt
rcrl
pop
outsl
adc
and
xor
xor
ffreep
pop
sub
out
hlt
arpl
movsb
pop
cmpsl
push
add
mov
mov
mov
std
stos
pop
cmp
inc
imul
or
test
push
mov
add
movsl
push
aam
ds
or
ds
addr16
push
mov
bound
push
popl
lret
push
mov
dec
cmpb
jns
enter
push
push
xchg
cli
mov
test
jle
pop
outsl
ds
xor
nop
leave
and
aam
cmp
filds
or
sbb
ret
data16
sbb
mov
sub
daa
and
aam
cs
push
test
pop
test
or
mov
das
cmpsb
decb
mov
xor
jnp
inc
clc
or
addb
jne
test
loopne
inc
stc
and
push
cmc
adc
push
jo
cli
add
and
add
and
ss
pushl
dec
shrb
and
call
imul
pop
or
mov
and
inc
add
adc
out
fnsave
sbb
out
jmp
outsb
dec
insb
pop
inc
test
inc
pusha
pusha
cltd
test
je
aas
sub
inc
mov
jge
scas
lcall
nop
push
and
ja
popa
mov
enter
movsl
push
filds
mov
nop
cmpl
and
xchg
outsl
stos
std
imulb
fs
stc
lret
adc
push
rclb
test
test
aam
mov
sbb
packuswb
mov
add
add
mov
jb
sub
xchg
push
inc
fidivl
orl
jo
sub
nop
add
fldt
loopne
je
std
sub
adc
push
cmp
pop
pop
adc
inc
aaa
sbb
test
das
rcr
cmp
sahf
lods
loopne
ja
lods
pop
dec
mov
mov
mov
lock
arpl
ja,pn
mov
mov
pop
pusha
cmpsb
fists
ret
cli
sbb
cmpsl
ds
pop
mov
js
int3
les
sbb
into
mov
movsl
loop
xchg
pop
mull
push
mov
iret
sub
sbb
mov
mov
cmc
mov
xchg
jnp
and
dec
jno
push
out
add
mov
push
mov
add
jg
push
test
pop
cmp
mov
in
std
inc
lock
sub
push
sub
jo
pushf
rcrb
inc
fwait
cli
ljmp
pop
testl
lods
inc
adc
insl
adc
pusha
mov
cmp
push
movsl
mov
dec
popf
jae
loope
adc
and
xor
sbb
sub
rcll
sub
inc
adc
inc
push
cld
shrb
daa
stos
xchg
add
mov
mov
fmulp
test
adcl
out
aad
mov
jmp
in
pcmpeqb
in
addl
inc
push
jl
shrb
sbb
fisubs
mov
inc
loop
shll
push
test
dec
imul
aam
mov
iret
adc
xchg
and
or
and
sub
or
fildll
outsb
lods
sub
add
push
mov
inc
jp
push
mov
and
fcoms
dec
pop
sbb
pop
sbb
jl
dec
cld
rclb
xchg
push
loop
add
inc
aam
or
adcl
shrb
call
test
sbb
mov
jns
pop
rorl
sbb
mov
mov
add
or
mov
testl
mov
lods
ja
mov
inc
test
push
xlat
test
sbb
fcmovb
fwait
rclb
cmp
jnp
xorl
int
push
cli
ljmp
stos
dec
jne
ja
mov
repz
nop
pop
daa
dec
jnp
mov
decl
test
stc
add
clc
ja
xor
aas
mov
shrb
sub
sbb
push
mov
or
mov
mov
outsl
mov
out
leave
mov
inc
inc
xchg
scas
inc
mov
test
popl
mov
fs
mov
imul
jg
mov
adc
loope
call
addr16
cmp
push
popl
or
mov
sbb
push
push
test
in
scas
bound
iret
loope
pop
fimull
insl
and
cmpl
stos
xchg
sbb
pop
xchg
test
loopne
fmuls
pop
mov
jl
pop
clc
adc
push
xchg
add
pushf
pop
das
inc
sub
decl
mov
jbe
xchg
dec
addl
cs
dec
in
adcb
adc
and
adc
insl
jecxz
ret
pop
push
in
sbb
mov
outsl
or
cs
or
loope
int
dec
pusha
cmp
adc
movlps
out
mov
jne
and
add
scas
fistpll
sqrtps
aaa
cmpsb
test
push
jo
pop
outsb
jecxz
mov
inc
leave
movsl
stos
xchg
mov
insl
fstpt
mov
ljmp
cld
push
mov
fucomip
lods
mov
sub
adc
inc
add
aad
outsl
test
or
idivb
sub
sbb
xor
sub
mov
or
addr16
mov
add
lock
pusha
sbb
mov
jne
fsubr
or
sub
cwtl
sub
mov
push
adc
xor
test
arpl
stos
adc
ret
jb
mov
jl
xchg
mov
jg
js
mov
adc
mov
hlt
aaa
js
shlb
add
pop
neg
dec
jge
inc
or
shll
pop
loop
std
outsl
ja
mov
add
mov
dec
mov
push
incl
frstpm(287
addr16
or
mov
adc
cmc
int3
int3
popl
js
fs
pop
push
clc
pop
cli
in
rorl
dec
or
mov
jmp
jnp
out
mov
popa
lock
sbbl
clc
mov
jecxz
or
into
ss
cwtl
jo
dec
scas
bnd
in
es
adc
pop
adc
clc
adc
ret
popa
sub
lea
scas
lea
fisttpll
aaa
outsl
pop
sar
movsl
jp
loope
iret
mov
cmp
add
lahf
jecxz
icebp
mov
out
sub
add
loop
cmp
cmp
or
sub
shlb
add
stos
insb
enter
in
test
sub
insb
lea
das
fstl
inc
popf
or
ret
jno
icebp
cmc
cmpsl
in
icebp
clc
and
in
mov
push
pusha
inc
jne
xor
cli
push
xor
fcoms
and
jl
pop
mov
adc
leave
les
ret
mov
test
lret
or
insb
cmp
ds
dec
stc
push
sbb
cmpsl
stc
in
mov
and
fs
fs
cwtl
mov
jbe
mov
push
xchg
inc
out
jnp
lock
push
loopne
xor
mov
mov
mov
or
sub
pop
daa
and
pop
jg
push
mov
sbb
cltd
popf
push
mov
mov
mov
xor
ss
dec
pop
movsb
sub
pusha
push
jo
lea
jbe
sub
push
mov
in
add
inc
jb
dec
fildl
sbb
mov
add
int3
les
mov
stos
cmp
sub
mov
loop
scas
adc
fcoms
fmull
pop
inc
jle
inc
test
inc
push
ret
mov
and
mov
sbb
xchg
rolb
mov
cmc
enter
push
sub
adc
fistl
mov
mov
insl
push
lahf
out
aas
push
mov
jecxz
outsl
movsl
mov
inc
cmpsl
in
enter
inc
jmp
mov
pop
clc
stos
mov
xchg
jnp
rolb
aad
mov
int
xor
loope
push
leave
dec
sbb
mov
mov
sub
dec
inc
fildl
je
or
lea
sbb
mov
push
adc
das
lds
jmp
mov
push
aaa
inc
pop
mov
scas
xorl
mov
insl
shlb
mov
lods
std
jg
mov
lods
inc
sbb
cmp
adc
mov
mov
push
push
lods
pop
aad
dec
scas
je
cmp
icebp
outsl
pusha
push
fstl
cltd
cs
mov
fs
adc
push
idiv
test
icebp
fbld
xchg
cmp
notb
inc
outsl
mov
mov
aam
xchg
movsl
dec
pop
mov
cmp
inc
lret
push
fwait
mov
xor
shrl
sub
mov
cs
jno
movsbl
mov
fpatan
sbb
pop
test
rolb
sbbb
adc
mov
push
inc
fsubs
icebp
or
mov
ret
mov
cmp
add
jns
add
or
bound
outsb
mov
mov
mov
xchg
pushf
paddd
xchg
std
outsl
pop
mov
sub
push
mov
fld
pop
bound
test
sbb
dec
lea
rcrb
iret
sub
jo
cmpsb
mov
jle
add
sti
les
rcrl
bound
mov
mov
test
and
rclb
je
sbb
addr16
rcrb
mov
mulb
in
jno
js
push
ja
aad
adc
mov
jbe
xor
lods
jno
xchg
mov
arpl
add
lds
or
mov
js
cwtl
clc
mov
lahf
fistl
jle
sbb
inc
hlt
inc
add
or
cmc
fcomi
jbe
push
sub
push
jl
and
ljmp
hlt
and
pop
rclb
aad
cwtl
jb
push
mov
mov
icebp
lods
or
dec
call
inc
and
loopne
into
std
mov
adc
loope
les
jecxz
lods
pusha
ret
add
pop
adc
sub
xchg
repnz
pop
lods
aaa
adc
lods
cwtl
stc
dec
clc
mov
xor
lcall
shrb
mov
jbe
lret
mov
push
notb
clc
push
hlt
inc
adc
jno
test
lea
push
insb
adc
push
mov
into
in
mov
mov
mov
xor
jge
std
add
insb
mov
mov
test
push
iret
jmp
shrl
bound
roll
int
aad
sbb
mov
xorl
fs
cmp
inc
lock
xchg
add
std
icebp
lea
mov
jmp
and
mov
xor
xor
sbb
cs
mov
imul
pop
and
cmp
icebp
mov
lods
inc
test
xchg
aaa
xor
repz
pop
ja
fistl
cs
or
outsb
test
cmpsb
push
in
in
stos
jcxz
fucomip
sub
push
cmp
test
std
xchg
hlt
add
sahf
fldenv
dec
or
fistpll
test
xor
inc
in
fildll
or
jle
stos
js
addr16
in
sti
dec
cmpsb
mov
outsl
incb
cmp
and
push
add
mov
pop
fcomip
ret
adc
pop
faddl
pop
hlt
inc
clc
in
mov
inc
add
pop
sti
clc
dec
add
adc
enter
mov
mov
rol
xchg
outsb
fbstp
jp
add
lods
cwtl
lcall
in
xchg
fdivl
ret
fbld
pop
imul
inc
sub
and
fs
mov
sbbb
xor
push
or
adc
fs
or
iret
xchg
call
ret
pushf
adc
cmpsl
fnstenv
js
sub
jmp
pop
sub
jge
or
cld
or
add
push
or
xchg
movsl
jecxz
mov
pop
mov
imul
outsl
sub
push
mov
and
xchg
aaa
xlat
sbb
cld
nop
xchg
add
call
test
aad
popa
mov
loop
repnz
xor
xor
and
add
cmc
inc
and
ret
popl
dec
cmp
out
sub
pop
js
dec
mov
inc
icebp
or
dec
mov
test
sbb
mov
gs
dec
call
cmpsb
push
pop
sbb
add
cmp
out
jg
sar
push
mov
rcll
loope
ljmp
or
mov
push
loop
dec
js
inc
ds
iret
out
out
push
xchg
jle
test
mulb
loope
movsl
ljmp
push
adc
scas
jp
data16
je
adc
xor
lcall
pop
and
loopne
mov
push
mov
sbb
test
aaa
or
or
pop
inc
add
jnp
fcmovbe
pop
cmp
rolb
subps
push
jp
ss
outsl
jmp
inc
push
in
push
dec
mov
add
xor
fcoml
mov
xchg
cmp
and
sti
or
lock
ljmp
mov
inc
mov
arpl
cmp
std
aad
sbb
gs
push
xchg
or
sub
push
test
dec
mov
test
pop
call
add
loopne
lahf
rorb
cmp
es
fcoms
pop
xchg
add
scas
xchg
roll
sub
fs
cmp
xorb
mov
fcoml
and
sbb
mov
aad
mov
js
push
ja
push
pop
clc
aaa
sbb
sarb
mov
shrl
outsl
ret
add
sub
out
or
movsb
pop
aam
pop
outsb
or
in
mov
mov
enter
dec
xchg
push
movsb
jl
xchg
lods
movsl
js
sub
jg
xlat
mov
jl
sti
dec
lds
mov
fsincos
sub
shlb
lods
or
iret
dec
pop
int3
insl
or
add
sub
pop
loop
push
xor
mov
sub
and
test
mov
cmp
jg
js
and
push
loopne
inc
pop
pop
and
jmp
push
nop
push
mov
mov
sbb
adcl
mov
adc
fwait
mov
psadbw
dec
incl
mov
or
ficompl
loopne
or
dec
sbb
ljmp
insb
cmc
or
fbld
and
ret
and
mov
jne
add
leave
ja
add
fisttps
test
rolb
jns
push
xor
pop
js
int3
sbb
and
dec
push
xor
or
push
inc
pop
dec
movsb
test
je
cwtl
push
push
inc
mov
das
ret
out
dec
popa
mov
jo
or
jmp
jb
dec
repz
jae
out
dec
rclb
addr16
fistpll
add
lock
push
mov
in
jnp
je
rcl
les
ret
lret
mov
cmp
fistpl
sbb
inc
xchg
orl
pop
or
cmp
adc
aad
xor
jecxz
loope
cmp
into
mov
lock
mov
ja
cwtl
push
push
jmp
push
fistpll
adc
int3
inc
movsl
in
mov
push
or
mov
mov
xor
aaa
and
das
mov
addr16
mov
lea
cwtl
sbb
inc
es
fsubl
lret
or
leave
jle
lret
jne
jbe
lret
repnz
push
outsb
sbb
add
outsl
insb
and
outsb
loopne
rclb
stc
or
cmp
sub
or
shlb
mov
repz
sub
mov
adc
fimull
lods
popa
jno
inc
mov
inc
cmpl
aad
jmp
shll
xchg
xchg
fidivrs
jg
pop
ja
rolb
xor
lcall
sub
jo
xchg
mov
jp
push
sub
aam
lods
cli
je
in
outsb
fdivrl
loopne
loop
mov
call
xor
pop
jo
or
jo
in
mov
dec
mov
dec
sarl
inc
xor
leave
sarl
shrb
imul
mov
or
xchg
mov
mov
cmp
mov
xchg
and
mov
lret
and
shr
dec
pop
loopne
rorl
or
push
cmp
xchg
outsb
les
imul
fistpll
sub
and
test
and
mov
negb
mov
lcall
sub
jp
xchg
imul
hlt
cs
and
dec
ss
pop
xor
inc
arpl
jle
mov
loop
in
clc
je
mov
stos
js
adc
hlt
add
sbb
mov
imul
in
xchg
mov
sarb
push
cmp
loop
xor
pop
and
mov
fistps
cmpsl
xchg
gs
fs
mov
xlat
jns
leave
scas
les
outsl
xor
adc
add
dec
decl
sub
stos
lret
outsl
push
pop
lahf
or
out
inc
mov
mov
popa
ret
xor
data16
movsb
or
inc
push
sub
pop
add
bound
mov
mov
dec
shrl
ja
std
mov
loope
mov
add
dec
add
mov
xchg
inc
pop
sub
inc
shlb
push
imul
sarl
jle
loopne
decl
dec
sbb
mov
and
cmpsb
xor
scas
cmp
jno
imul
loope
jo
inc
popl
jo
cmp
and
push
fsubs
loope
clc
cmp
sahf
mov
pop
mov
sbb
and
jo
or
sbb
dec
sarl
and
sub
mov
mov
and
or
sub
adc
ss
clc
xchg
mov
adc
sbb
xor
xor
pop
daa
add
add
push
add
and
sbb
add
or
cli
or
insl
in
loop
mov
int
fimuls
inc
in
jmp
out
xor
scas
addl
aam
mov
fdivl
out
les
and
sti
add
movsl
imul
cmc
inc
mov
adc
outsl
rorl
dec
mov
andl
popf
pop
out
pop
and
mov
push
cs
sbb
push
sbb
add
jp
mov
mov
adc
pop
xchg
adc
pop
mov
dec
repz
adc
aam
test
mov
mov
mov
mov
push
xchg
jnp
inc
mov
test
loope
push
pop
adc
jle
cmp
lock
rorb
fldcw
mulb
addl
lret
mov
adc
movsb
jbe
mov
add
xlat
cmpsb
cmp
mov
sbb
inc
mov
in
xlat
mov
pop
mov
sbb
xorb
je
loop
pop
push
add
or
fidivrl
mov
insl
push
fwait
gs
call
mov
int3
add
inc
cli
mov
sub
xor
mov
sahf
orb
insl
mov
and
and
pop
clc
rorl
inc
add
and
mov
or
gs
sbb
lret
jle
mov
inc
sbbl
aam
lock
dec
push
push
jo
xor
popf
sub
pusha
pop
rcrl
ds
incb
mov
pop
out
mov
ljmp
mov
pop
push
outsb
outsl
icebp
xchg
sub
cmp
mov
das
insl
add
sbb
inc
pop
push
jge
lcall
sub
add
xlat
or
mov
jb
add
add
jb
loop
jbe
add
push
or
icebp
fwait
jecxz
pop
and
out
sbb
push
mov
cmc
dec
pop
adc
pop
rcrb
lea
les
jmp
insl
es
repz
jl
dec
jle
ret
jl
scas
outsb
push
and
movsl
mov
add
mov
dec
mov
cmp
jl
sbb
aam
adc
punpckhwd
gs
roll
lds
jo
ret
mov
cld
mov
shrb
mov
addr16
inc
mov
pop
loopne
xor
test
jbe
lds
lea
push
mov
dec
push
inc
mov
pop
mov
loopne
jo
or
mov
adc
stc
ret
fmull
inc
icebp
push
sbb
inc
mov
mov
adc
pop
add
or
aaa
scas
pop
ja
jb
jo
mov
jge
add
mov
roll
xor
ljmp
stos
int
sub
jbe
out
push
lods
popf
and
xorl
xchg
pop
adc
stos
dec
sahf
and
dec
or
mov
pop
mov
ljmp
lods
jne
and
cmp
dec
xor
pop
pop
add
jns
jge
imul
rcr
pop
and
push
push
shrl
mov
out
xchg
fnsave
stos
cli
mov
sbb
test
pop
pop
mov
xor
xchg
push
das
jl
sti
jecxz
xor
test
dec
insb
shll
not
loop
push
mov
xlat
repnz
sti
popa
push
jg
or
ds
pop
mov
fsubrl
and
add
nop
lea
cli
std
inc
xor
mov
xchg
mov
jnp
xor
sahf
mov
jno
cmp
push
sub
push
adc
arpl
or
mov
mov
xor
or
jl
adc
dec
mov
arpl
fs
cmpsb
mov
inc
fisttps
inc
cltd
leave
and
mov
push
loopne
inc
shlb
mov
cld
movsl
jbe
pop
in
mov
rcrb
jl
inc
std
filds
insl
xchg
dec
leave
sbbb
lods
fisttpl
xlat
push
inc
inc
call
sahf
adc
nop
cli
cmpsl
add
mov
or
aaa
xor
jg
pusha
push
into
subl
xor
rcll
mov
mov
sbb
fidivrs
pop
andb
mov
add
repz
lret
mov
mov
xchg
dec
mov
stos
iret
pop
xor
jle
jo
push
adc
aas
mov
pop
inc
mov
stos
subl
add
ja
in
xor
mov
dec
adc
jns
repz
ss
inc
mov
pop
pop
push
and
push
xchg
push
shrl
ja
adc
mov
lds
out
dec
dec
mov
aaa
pop
push
adc
in
arpl
lret
add
fs
or
pop
test
pop
clc
cmpsb
test
pushf
pop
xor
mov
xchg
stos
cmp
pop
movsb
mov
fnsave
fsubrp
mov
mov
mov
sbb
clc
cmp
in
call
push
and
loope
cld
les
xchg
rorl
movsl
mov
pop
mov
movsl
clc
in
es
mov
xor
xchg
enter
jle
mov
cli
aas
mov
inc
sub
dec
mov
add
mov
inc
inc
cwtl
test
and
sbb
add
sbb
aaa
pop
sub
ja
rcrb
adc
js
lock
int3
sbb
enter
xlat
jno
in
xchg
and
addb
sbb
lds
std
mov
and
or
iret
jecxz
ds
adc
aaa
mov
mov
inc
jl
fmuls
cmp
shl
mov
mov
call
call
cmp
js
xor
les
jge
cmpsl
scas
sub
mov
push
stos
jp
jne
ret
sbb
call
mov
inc
fsubr
in
scas
pop
pop
push
aad
cmpsb
mov
push
rcrb
int
or
andb
jnp
mov
andl
mov
mov
jmp
lret
inc
push
es
xor
fimull
push
adc
out
loope
cltd
enter
fnstcw
mov
dec
pop
and
out
mov
arpl
adc
and
jp
cmp
xchg
fsubs
dec
sub
xor
pop
mov
dec
pop
adc
addb
dec
jg
sub
jmp
lds
hlt
inc
pop
mov
or
jno
adc
sbb
repz
into
data16
test
inc
fisubrl
mov
inc
cmp
cmp
icebp
mov
push
lcall
dec
loope
cli
in
xor
push
add
fildl
loope
cmp
sub
or
push
inc
cmp
subl
in
sbb
sbb
and
and
sub
dec
mov
cli
xor
jle
in
lods
ljmp
shr
mov
jbe
add
cld
popa
mov
dec
std
fistpl
inc
test
push
mov
js
add
sub
jg
jecxz
add
pushf
mov
inc
and
into
and
rorl
xlat
pop
jnp
adc
jns
inc
repz
lahf
jo
pop
or
adc
xchg
inc
cmpsl
lds
out
xor
jg
dec
cs
inc
xor
lods
xchg
and
pushf
lret
pop
mov
cmpsb
mov
testl
adc
xor
adc
xchg
bound
adc
lea
xchg
ret
xchg
lea
jo
push
ss
mov
aaa
cs
pop
sbb
test
pop
and
pop
into
xor
xchg
jo
xchg
ljmp
pop
fwait
push
adc
inc
mov
adcl
adc
jl
testb
mov
xchg
push
push
push
sub
cmp
jecxz
dec
jl
pop
sbb
pushf
mov
pop
cltd
push
fwait
nop
dec
loope
rolb
leave
ljmp
jp
jle
in
fsts
inc
jp
xchg
mov
dec
jo
cmp
into
loop
notl
add
test
mov
mov
sbb
push
and
sub
cmp
mov
inc
add
jp
mov
mov
pushf
clc
std
jg
add
xchg
adc
clc
push
je
ficoml
std
scas
or
pop
ss
stos
cld
std
inc
repz
mov
jb
add
xchg
cmp
add
pop
mov
mov
xorl
cli
add
xchg
pop
mov
movsl
aas
mov
das
fucomip
rorl
push
leave
aam
aaa
adc
loop
pop
sub
pop
or
and
push
sub
fnstsw
sbb
mov
lock
movsb
cmpsb
push
push
mov
leave
addr16
sub
pop
lock
outsb
icebp
pop
jge
inc
jg
pop
sub
push
xchg
out
cltd
xchg
xor
add
mov
adc
enter
loop
enter
dec
xchg
mov
popa
add
pop
cmp
jl
adc
outsl
dec
jae
out
test
mov
imul
fiadds
lods
xchg
in
mov
mov
jne
icebp
jno
xor
scas
sbb
mov
mov
mov
fiadds
stos
bound
pop
dec
test
mov
pop
pop
sub
mov
mov
mov
pop
scas
xchg
xor
mov
cmp
mov
mov
call
sub
sbb
ret
adc
sub
jns
loope
adc
mov
repz
shlb
cli
jo
sub
nop
pushl
mov
inc
test
and
sti
jl
in
and
jb
cltd
les
jo
push
popa
aaa
mov
lock
shll
cmp
inc
and
mov
add
insl
mov
or
pop
adc
mov
shl
cmp
mov
xchg
or
nop
add
adc
or
lock
jno
sub
push
sbb
push
aam
mov
fwait
ret
fdivp
pop
pop
scas
mov
adc
cltd
popf
insb
fisubrl
push
dec
sbb
hlt
xchg
xor
pop
out
inc
rcrb
mov
out
fdivr
xchg
aaa
aad
mov
jp
jmp
lds
adc
or
inc
lods
mov
mov
cmp
ss
jno
fnstsw
pop
mov
mov
mov
xor
mov
adc
dec
fistpll
jne
inc
mov
pop
sbb
push
ss
adc
jl
int
call
fcoms
jle
xor
and
insl
push
xor
push
pop
mov
mov
add
orb
xchg
inc
jno
daa
dec
test
mov
es
adc
loopne
cmp
fimuls
push
insl
jnp,pn
and
insb
xor
sub
pop
or
loopne
outsb
ffree
loopne
cltd
xchg
iret
aam
in
add
das
mov
dec
sub
in
enter
jge
ljmp
mov
pop
adc
mov
push
into
push
popf
pop
sbbl
aad
nop
bound
inc
fcomp
adc
push
out
fcmovnu
cli
outsl
cmp
lcall
int3
xor
mov
rorb
mov
les
lds
sub
ds
mov
movsb
push
jl
in
fists
icebp
stos
inc
adc
xorb
shrb
jbe
xchg
sbb
xchg
jmp
cwtl
mov
mov
push
cmpsl
mov
std
inc
ret
inc
mov
push
dec
add
or
js
xlat
mov
dec
pop
iret
or
push
jo
xor
push
outsl
jg
jns
lock
lahf
cmc
mov
and
cwtl
shll
inc
mov
js
loop
pusha
cwtl
les
xlat
das
std
ret
pushf
aas
dec
sub
jmp
adc
sahf
adc
jp
shl
dec
inc
add
and
aad
mov
or
lods
adc
pop
test
mov
add
mov
pop
and
adc
iret
inc
cmp
clc
out
test
mov
xchg
jns
loopne
or
push
adc
sub
mov
fidivrl
lods
shll
jge
icebp
mov
pop
in
inc
int3
xor
orb
push
sbb
addr16
out
data16
pop
jo
rclb
insl
fstpt
fcomp
ds
repz
and
inc
jmp
mov
and
and
insb
push
pop
mov
fdivr
mov
fsubrl
stos
or
fstpl
or
mov
es
mov
xchg
adc
xchg
mov
dec
add
push
inc
jge
rcr
push
and
movsl
push
mov
mov
cmp
push
push
sub
shl
test
jbe
add
or
dec
mov
aaa
mov
sbb
clc
ffreep
mov
lock
inc
jmp
xchg
adc
mov
repz
jno
dec
inc
jl
clc
arpl
cmpsl
addr16
test
loope
std
jnp
out
in
lds
bound
hlt
fisubs
push
fwait
xor
add
inc
lods
pusha
mov
add
hlt
add
inc
mov
mov
lock
inc
mov
out
push
test
mov
mov
cwtl
mov
xchg
inc
jo
add
jle
sub
cwtl
sub
mov
adc
push
mov
dec
lods
je
repz
fimuls
mov
or
add
or
or
cmpsb
lods
push
lds
in
mov
cmp
test
pop
stc
push
pop
and
cwtl
add
bound
sub
inc
mov
fsubrl
in
cmp
and
cmp
mov
lahf
fs
xchg
sbb
pop
pop
dec
test
sbb
cmpsb
std
das
cld
or
mov
out
ljmp
cwtl
icebp
aas
xlat
inc
mov
std
ds
push
aad
and
lret
pop
add
cs
insb
mov
push
dec
sub
jbe
mov
jae
xchg
mov
adc
aaa
inc
fistps
mov
loopne
fbstp
pusha
push
call
sub
rorb
mov
cmp
mov
outsl
add
xor
dec
outsl
pop
cmp
mov
js
cmc
cmp
mov
leave
iret
out
rolb
sub
stos
mov
mov
add
neg
mov
dec
push
lea
aaa
cmp
icebp
mov
in
dec
push
xchg
out
cmp
add
rcr
xchg
mov
mov
or
leave
mov
pushf
test
inc
mov
ds
sbb
jp
add
adc
int
cmp
fimuls
inc
stc
in
adc
test
dec
daa
mov
in
call
fs
jl
fbstp
pop
stos
cmp
push
cmpsb
into
jecxz
pop
fwait
adc
jmp
out
mov
jle
test
mov
sbb
leave
xor
mov
mov
lret
and
aaa
add
mov
mov
cltd
and
sub
inc
testb
sub
cld
sbb
addl
mov
idivb
test
loope
cli
pusha
dec
mov
and
test
es
mov
mov
scas
imul
pop
sub
jl
add
cmp
sar
sub
int3
ss
mov
xchg
push
inc
inc
imul
mov
sub
or
or
test
lods
imul
jo
push
xchg
sub
mov
sbb
xchg
call
adc
pop
frstor
inc
or
lahf
nop
sub
fistpl
jbe
xor
jl
and
fsts
fstpl
inc
xor
sbb
and
sub
mov
and
jo
push
jno
jecxz
pop
jnp
jbe
xor
fildll
mov
in
lds
cmpsl
fcmovnb
add
cwtl
mov
inc
dec
inc
or
jge
dec
pop
cltd
ficompl
cmpsl
cmp
or
imul
andb
mov
repnz
mov
sbb
xchg
add
dec
mov
dec
sub
outsb
dec
cmpsl
test
into
popf
push
push
js
out
jno
mov
sub
add
xchg
push
pop
cmp
mov
leave
dec
or
xchg
or
int
inc
xor
sbb
repnz
cmpsl
jge
sbb
mov
aad
and
subb
fistps
mov
movsl
push
cmp
push
call
mov
imul
sub
or
mov
das
push
cltd
shrb
out
daa
xor
jb
xchg
test
addl
add
decb
pop
cmp
gs
fimuls
push
pop
jmp
shlb
pop
or
cli
adc
aas
dec
lock
mov
popw
cltd
notb
or
mov
scas
arpl
sub
out
in
xchg
and
divb
orl
aaa
lret
or
mov
mov
cmp
mov
aaa
adc
lret
mov
xor
ret
addr16
scas
inc
movsb
xor
int3
dec
inc
pop
lock
push
mov
inc
loopne
pop
push
imul
outsb
ret
ud0
cmp
loop
pop
sbb
cmp
pop
inc
lret
rcll
and
pushf
iret
out
cmpl
fwait
and
pop
push
mov
mov
mov
push
pop
or
and
xor
fisubrs
push
call
inc
jmp
iret
xchg
gs
adc
or
sbb
lahf
pop
xor
fwait
out
pop
mov
popa
add
cmpb
aaa
test
push
push
popa
pop
push
out
add
jb
dec
or
sbb
pop
pop
jmp
movsl
pop
je
das
rcrb
call
adc
cmp
add
sub
jmp
jmp
or
ret
es
mov
cwtl
insl
dec
push
lcall
aad
mov
andb
pop
std
dec
inc
or
inc
mov
out
and
mov
sbb
push
test
push
pop
cmp
outsb
ljmp
das
enter
js
in
mov
add
fnstsw
imul
mov
adc
mov
pop
sbb
push
ss
cli
loop
jae
fimull
mov
or
rcll
fsubrp
inc
pop
pop
imul
adc
push
test
in
notb
jecxz
js
call
outsl
mov
add
or
dec
subb
in
popa
test
test
xchg
ror
rol
inc
shl
fiadds
jmp
jg
testl
es
and
jbe
jnp
imul
mov
and
ja
insl
mov
nop
rorb
addb
scas
cli
or
mov
je
movsb
xchg
sbb
xchg
stos
lret
popf
cmp
fistps
test
call
inc
mov
sbb
mov
push
or
sbb
scas
jmp
out
pop
mov
dec
mov
leave
mov
fstpt
ficomps
lret
mov
pop
rcll
jge
push
test
cmp
aam
sub
js
nop
push
cld
in
fdivrp
push
push
jecxz
in
push
mov
xchg
movsl
loop
loop
mov
push
adc
test
adc
pop
pop
lds
imul
arpl
aad
pushf
or
dec
loopne
js
sub
test
fdivrs
pop
lcall
dec
and
cmp
dec
dec
dec
ret
inc
xchg
push
mov
fadds
cmp
jns
mov
mov
mov
inc
push
cld
lock
xor
cmp
push
push
mov
dec
adc
shlb
push
clc
push
les
in
adc
imul
stos
mov
pusha
lea
ss
and
sub
mov
fst
in
pop
inc
pusha
data16
mov
lods
mov
jnp
loopne
loope
popf
or
fiadds
call
sub
andps
pushf
mov
ss
insl
adc
pop
mov
cltd
xor
data16
movsl
mov
out
inc
cli
push
int
fisttpl
dec
aam
rol
adc
jno
in
push
or
ljmp
xchg
je
mov
cli
ror
mov
popf
mov
xor
jnp
scas
sub
stc
testb
mov
inc
mov
mov
pop
insb
mov
fidivrs
adc
push
jns
or
add
bound
les
add
push
in
aaa
rorl
in
sbb
push
fisubl
jne
cmc
xor
or
sbbl
push
call
xor
mov
out
mov
push
dec
lret
push
xchg
and
add
das
hlt
outsl
jae
call
adc
jns
xor
inc
and
add
loopne
and
cs
xor
inc
mov
mov
mov
mov
and
add
outsl
in
xor
jle
insw
loopne
mov
mov
int3
mov
fmull
xchg
jo
push
psllw
add
clc
ss
xor
push
sar
adc
sbb
lea
iret
dec
fldt
lcall
adc
mov
mov
outsb
mov
scas
movsl
dec
mov
sub
sub
test
cmp
mov
mov
or
clc
pop
or
incl
dec
or
rorl
stos
pop
das
jp
mov
insl
orl
nop
mov
fistl
push
inc
inc
adc
inc
jecxz
je
aam
stos
adc
mov
aam
push
test
call
negl
adc
test
outsl
pop
pusha
test
sbb
clc
adc
pop
or
pushf
sbb
mov
pop
push
loope
jg
pop
adc
mov
inc
mov
push
sbb
adc
pop
xor
mov
sbb
popf
ja
push
les
inc
fs
jne
xor
cli
pop
cli
ret
rcl
mov
ja
lods
or
das
lahf
ss
or
aas
xchg
mov
ljmp
dec
and
rcr
sbb
fmuls
sahf
jo
dec
mov
jge
movsl
gs
add
dec
outsl
jg
inc
test
xchg
or
movsl
popl
xorb
jecxz
and
mov
dec
mov
xor
ret
andb
and
mov
xchg
mov
imul
mov
mov
adc
into
aaa
mov
mov
notl
stos
std
mov
std
test
mov
inc
mov
inc
sub
shlb
addl
mov
add
repnz
jge
fnstsw
mov
inc
xor
mov
xor
push
cwtl
sub
test
in
outsl
adc
fcomi
mov
mov
aaa
test
fucomp
sbb
and
push
les
jge
addr16
je
repz
mov
ficomps
inc
sub
aaa
ret
arpl
stos
fcomps
enter
jo
sub
mov
ljmp
mov
out
arpl
mov
mov
test
jo
popa
mov
jmp
aam
jbe
and
js
and
cwtl
push
jecxz
outsl
icebp
sbb
sub
push
imul
dec
jl
push
sbb
mov
insl
push
sbb
ret
ja
iret
ja
adc
jb
test
push
je
inc
pop
in
add
lahf
and
and
sbb
jb
inc
cs
inc
mov
sti
inc
push
cmpsl
mov
or
mov
fwait
push
cmp
add
cli
cmpsb
movsb
pop
and
lahf
push
jbe
mov
and
cli
mov
jl
inc
or
outsl
fs
mov
jo
sbb
pop
out
mov
jnp
sub
jo
cmp
addb
fisttpl
jp
adc
mov
int3
lea
das
xchg
jns
add
insb
frstpm(287
js
fildll
cmp
sbb
mov
and
and
pop
adc
adc
push
mov
test
xchg
aaa
enter
stos
pop
mov
mov
xor
test
inc
jnp
or
jl
stc
in
fildll
xlat
jmp
inc
and
aam
ret
adc
cld
imul
sbb
dec
inc
mov
jl
push
mov
adc
or
lods
sbb
cmpsb
adc
aad
rorb
data16
jecxz
pusha
mov
cmp
push
or
inc
iret
mov
inc
shlb
dec
push
add
das
mov
push
icebp
inc
ror
orb
mov
add
lret
dec
sbb
test
inc
lcall
int
icebp
roll
fwait
mov
dec
cmp
sbb
call
add
out
scas
mov
and
jecxz
adc
sub
pusha
incl
clc
lock
aam
rcrl
dec
mov
roll
movsl
inc
push
pop
aad
add
sbb
jl
pop
cmp
popf
mov
fiaddl
sbb
pop
push
push
dec
dec
sbb
pushl
or
or
out
hlt
icebp
les
adc
shlb
fsubs
hlt
mov
in
dec
xor
lods
or
inc
popf
push
rol
pop
les
mov
xchg
ss
arpl
mov
mov
int3
pop
mov
mov
cmc
and
clc
and
out
or
in
sbb
push
xor
jbe
clc
movsl
out
fstp
xrelease
loope
cmp
push
ret
stos
push
add
push
insl
mov
xor
jg
ds
clc
adc
sub
or
pop
inc
jecxz
lock
nop
adc
movsl
mov
int
cmpsl
or
adc
push
aaa
pop
push
cmp
add
stc
dec
iret
xchg
mov
inc
cld
mov
lret
fs
cmp
jl
loop
test
test
aam
jl
sbb
xor
push
leave
and
mov
jp
sbb
jo
mov
test
rorb
roll
test
or
mov
repnz
nop
xchg
sub
mov
int3
mov
sbb
mov
xchg
out
cwtl
sbbl
cli
ror
cmp
pop
int
mov
sub
fdivl
clc
jmp
mov
sti
mov
stos
cs
cmp
pop
rcll
mov
dec
inc
pop
enter
mov
je
add
aad
out
cs
xor
sbb
mov
fisubl
loop
fimull
push
jmp
cltd
imul
sub
add
cmp
cmp
pushf
dec
cmpsl
push
ljmp
push
cmp
aad
pop
into
ljmp
mov
icebp
add
sti
adc
and
test
jge
cmp
push
push
mov
pop
sbb
pop
or
dec
inc
cmpsb
mov
les
adc
cmp
pop
adc
xor
ficompl
outsl
push
lock
hlt
stos
jbe
orb
mov
jmp
scas
push
cmp
and
std
sbb
sarb
push
stos
scas
nop
cld
inc
sti
outsl
out
or
adc
sub
loop
int
aam
outsb
js
adc
addl
scas
testb
and
xor
jg
dec
add
push
repz
outsb
ja
add
cli
pop
outsl
and
add
jg
shr
lahf
imul
add
sbb
push
idivl
mov
mov
movsl
aaa
icebp
arpl
dec
jns
notb
lret
aaa
outsl
pop
in
outsb
jl
lock
jecxz
sbb
xchg
mov
mov
test
ss
adc
jne
inc
lahf
hlt
call
test
call
hlt
in
sbb
jecxz
movb
xchg
lock
sub
sub
inc
add
jl
out
xchg
jo
jo
add
cmovl
mov
pop
xchg
fildl
loope
icebp
outsl
aam
xchg
scas
in
ja
or
pop
xchg
int3
sbb
test
xchg
loope
aad
cmpsl
call
sbb
xchg
pop
push
add
mov
jo
and
les
stos
or
cmc
movsb
and
mov
push
mov
push
fisubrl
xchg
add
jbe
in
xchg
hlt
and
dec
nop
into
js
sbb
pop
outsb
aas
aaa
push
and
cld
mov
sbb
fnstsw
pop
cmp
sbb
dec
loope
dec
sub
call
shlb
mov
jle
jno
addb
jmp
lods
mov
sub
loop
ret
dec
fs
jge
push
into
pop
xor
subb
sbbl
push
fstpt
sbb
outsl
clc
xchg
dec
sti
icebp
push
xchg
lcall
rorb
push
dec
jb
jl
popa
adc
mov
push
nop
cld
call
push
stos
jl
dec
cs
js
cmp
xchg
lahf
imul
sbb
mov
popa
aad
roll
push
lret
adc
cmpsl
sahf
loop
imul
mov
or
sub
jg
rorb
rorb
jo
mov
in
hlt
testl
aas
mov
add
jmp
and
outsb
add
repz
sarb
out
cli
or
cmp
adc
mov
inc
std
adc
sub
test
pop
jb
int
and
pop
lods
xor
pop
ja
jmp
out
mov
jnp
loopne
cmp
insb
mov
icebp
mov
test
mov
js
inc
sub
jo
shl
pop
fsub
push
mov
sbb
mov
cli
pop
call
xchg
les
adcb
dec
inc
andl
fsts
or
sbb
push
out
mov
mov
cld
xlat
sbb
mov
and
aam
nop
mov
mov
out
cmp
mov
add
cmp
sbb
aad
orl
aam
mov
mov
lods
inc
dec
fidivrs
cmp
cwtl
insl
xor
dec
leave
cmp
repnz
mov
inc
and
mov
jb
sti
popf
cmc
push
fs
out
scas
jbe
mov
sub
xor
jbe
pop
roll
and
fisttpl
dec
sti
iret
repz
lcall
movsb
movsb
out
add
mov
mov
jne
clc
pop
test
fsubrl
or
xchg
or
pop
cs
arpl
mov
mov
sub
jns
push
inc
dec
cmp
pushf
aaa
pop
mov
push
lods
dec
outsl
mov
push
push
pushf
add
adc
sahf
pop
cmp
in
mov
rorb
mov
std
jae
loopne
mov
cmpsb
out
jge
ds
sti
std
loop
aam
adc
mov
inc
jo
mov
sbb
xchg
mov
pop
sbb
sarb
sub
out
fistpll
mov
mov
scas
pop
or
ja
mov
out
xchg
mov
sub
lret
jno
xor
xchg
mov
call
jbe
pop
mov
cmp
aad
mov
decl
jb
lret
mov
sub
and
xor
inc
xchg
add
lret
jg
mov
icebp
inc
xchg
mov
fiadds
jg
cs
popa
shll
inc
xor
iret
jge
aad
pusha
les
push
lcall
stos
mov
mov
loop
call
enter
sub
jecxz
lea
pop
scas
xor
rclb
or
test
lock
or
movsb
icebp
mov
and
pop
rcrl
push
out
pop
push
lds
fnsetpm(287
mov
rolb
cwtl
loop
pop
jno
rolb
jge
xorb
clc
push
and
icebp
push
cli
in
aam
xchg
jl
jmp
push
scas
arpl
cmp
cmpsl
lods
dec
and
hlt
adc
fistpll
or
pop
aam
push
jl
dec
add
cld
shrb
dec
dec
pop
mov
or
sahf
inc
mov
movsl
and
jae
jb
insb
mov
loope
cmp
xor
adc
inc
jg
loopne
into
xchg
xlat
daa
jecxz
outsb
in
jb
std
loope
decl
xchg
lret
lret
push
inc
mov
das
mov
aas
leave
ljmp
xchg
mov
pop
lock
imull
xchg
mov
loopne
mov
rcl
adc
popa
loope
mov
mov
jno
mov
pop
out
pop
mov
mov
stc
adc
xor
xlat
inc
outsb
adc
and
pop
sbb
cmp
loopne
mov
or
xor
lret
testl
pushl
lods
dec
fs
sub
push
aam
jbe
sahf
bound
jl
xchg
sti
addr16
pop
test
dec
or
push
xlat
cs
movsl
mov
or
push
sbb
shlb
jbe
xchg
cmpsb
mov
fmuls
fldt
insl
in
mov
jg
gs
daa
lahf
push
or
je
jecxz
test
adc
imul
cmp
movsb
loop
and
mov
pop
jmp
filds
imul
lds
stos
inc
incl
sbb
sbb
rcrl
das
insb
inc
jbe
stos
and
popa
subl
aaa
adc
sbb
rcll
cli
or
push
les
push
jg
mov
dec
clc
mov
sbb
fisttpll
push
repz
adc
and
pop
jb
add
pusha
mov
jae
outsl
mov
call
pushf
cmp
enter
sbb
outsl
adc
dec
pop
test
sbb
sbb
jnp
cmp
push
push
mov
std
popa
std
ret
clc
sub
cli
shll
jecxz
push
js
clc
mov
sub
push
pusha
inc
xchg
or
rcr
cli
les
repz
cmp
dec
adc
inc
addr16
jecxz
or
test
or
mov
jp
mov
std
jmp
mov
cmp
cmp
or
insl
inc
xor
add
inc
js
and
mov
ret
out
test
test
je
pop
mov
das
std
xchg
xor
hlt
push
mov
sub
jno
sub
xor
pop
fbld
aas
fisubrl
lods
imul
push
inc
mov
pop
mov
push
ja
and
pop
adc
pop
loope
aad
jg
sbb
orb
loop
rcll
rorl
in
shlb
mov
dec
inc
imul
push
out
loop
mov
pop
les
jnp
mov
push
jp
mov
dec
int3
adc
sbb
loop
or
and
lcall
adc
pop
xchg
cld
mov
or
fbstp
into
add
jmp
mov
or
cmp
mov
insb
adc
pop
lods
fwait
sbbb
jl
xchg
pop
orl
xchg
int3
and
cmp
mov
jo
adc
mov
inc
jne
bound
subl
dec
inc
ret
mov
mov
dec
cmc
popf
adc
mov
push
inc
xor
jbe
aaa
mov
sbb
dec
sar
push
aad
popf
inc
mov
sbb
adc
mov
and
jl
sbbl
pop
movsb
incl
push
push
and
stos
int
pop
pop
ret
cwtl
adc
outsl
or
pop
stos
dec
xor
mov
test
jmp
outsl
cmp
bsr
je
push
xchg
xchg
fwait
outsl
add
add
xchg
sub
sub
mov
stos
sbb
inc
add
sub
mov
mov
movsl
xor
cmpsl
adc
ss
mov
jp
xchg
inc
mov
push
cmp
xchg
in
decb
arpl
in
or
and
in
out
insl
dec
pop
cmp
and
jae
sahf
dec
addr16
cmc
mov
mov
inc
sti
pushf
call
lds
inc
cli
add
outsl
mov
jb
lcall
scas
fadd
scas
jl
rcl
aam
push
inc
test
push
and
fxch
adc
aam
push
sub
inc
jecxz
pop
adc
inc
mov
dec
cmc
fisttpll
in
push
nop
ljmp
jmp
out
mov
mov
pextrw
xor
repz
cld
movb
cmp
and
icebp
pusha
lds
sbb
push
dec
std
test
and
pop
xor
xor
mov
clc
cmpsl
mov
daa
xor
les
out
nop
jmp
adc
in
or
adc
pop
jle
sbb
lret
stos
xchg
inc
add
mov
adcb
ret
mov
mov
mov
jl
fs
ja
mov
stc
mov
jns
mov
popl
clc
int
pop
icebp
mov
aaa
jge
insl
and
jge
sub
xchg
test
enter
mov
aad
ret
adc
push
or
jno
ror
mov
jge
jno
outsb
loopne
lods
out
or
sbb
mov
leave
mov
or
adc
inc
push
rorl
add
adc
ss
call
pop
aaa
shr
push
pop
cmpsb
dec
push
xor
daa
lds
cs
mov
cmc
push
mov
lock
cld
mov
jl
test
lea
or
subl
xchg
ret
std
inc
roll
pop
mov
or
mov
cwtl
and
bound
pop
and
add
divl
mov
or
out
sbb
push
or
mov
sbbl
inc
frstpm(287
adc
in
sbb
jne
rorb
or
cwtl
mov
clc
iret
test
mov
xchg
xor
ss
outsl
jne
or
int3
adc
sbb
mov
pop
push
sub
loope
int3
push
subl
xorb
push
inc
popa
arpl
and
pushl
scas
in
inc
push
popf
pusha
mov
rcrl
call
arpl
dec
loopne
mov
ljmp
jl
push
mov
jno
or
or
scas
movsl
dec
mov
mov
dec
mov
out
inc
mov
imul
sahf
mov
mov
cmp
mov
sbb
fiadds
dec
scas
add
fsubrs
push
sarb
pop
lock
cmp
icebp
movsb
lods
movsl
push
sar
xchg
lds
movsb
mov
popl
or
and
decl
js
cmp
dec
ret
jnp
push
jle
and
mov
lods
or
cld
out
xor
adc
xor
mov
movsl
mov
dec
sbb
inc
sbb
es
push
mov
fiaddl
jl
inc
and
cli
insl
and
jno
pop
das
xor
jmp
inc
adc
or
ret
hlt
inc
fwait
shll
cwtl
mov
outsl
icebp
jmp
push
icebp
mov
pop
add
fstpt
aas
fwait
or
mov
pop
adc
imul
test
gs
jg
jbe
cmp
dec
gs
xor
ret
andl
mov
xor
popa
mov
cmp
jne
push
jl
or
push
jl
bound
mov
jp
inc
lahf
outsl
or
push
inc
mov
xor
test
out
mov
js
jbe
bnd
cmp
icebp
ret
mov
jae
fsubrs
pusha
fmuls
mov
jp
in
incl
ljmp
std
sti
pop
and
jp
add
ret
fcompp
pop
shll
incl
test
xchg
mov
xor
jp
bswap
xor
loop
mov
fidivs
dec
or
nop
mov
dec
adc
scas
sarb
ljmp
jno
leave
sub
rcrb
in
std
inc
mov
adc
xor
enter
cwtl
ljmp
ljmp
pop
jnp,pt
xchg
sbb
clc
adc
lret
cmp
mov
or
add
gs
test
jo
mov
and
fwait
lahf
lahf
jno
jmp
hlt
and
add
mov
jnp
sbb
out
popf
in
pop
push
jns
jg
lret
push
inc
jl
stos
add
das
cld
xchg
loop
test
dec
and
xorb
cmp
push
mov
or
add
testb
jecxz
out
pop
add
push
or
xchg
lods
mov
sbb
test
scas
and
ret
das
push
movb
mov
jp
add
and
clc
inc
call
lret
push
pop
lcall
push
jecxz
cmp
roll
sbbb
aad
inc
mov
mov
lea
in
into
and
cli
fcmovbe
cmp
ss
dec
outsl
dec
inc
test
mov
push
test
pop
fimull
push
adcb
les
xor
fistps
add
mov
call
movsl
out
shll
mull
or
mov
imul
xchg
jecxz
loope
xor
nop
mov
mov
insl
cltd
pushf
cmp
xor
jmp
jo
add
loope
nop
mov
and
cmpsl
inc
out
push
fstl
sarb
mov
and
rol
sub
xor
repnz
cmp
or
daa
mov
adc
add
pop
push
out
mov
mov
jbe
jge
jecxz
insl
or
ss
adc
loope
push
cmp
mov
fadds
mov
test
sub
adc
dec
out
clc
popf
enter
into
in
xchg
cmp
test
fdivs
and
or
ja
popa
mov
cmpsl
outsb
inc
mov
and
dec
mov
scas
test
imul
fists
pusha
loope
sti
ds
or
push
in
push
incl
jmp
dec
fdivs
test
add
imul
adc
out
or
cld
mov
jecxz
adc
mov
das
mov
mov
dec
cmp
stc
add
insl
ljmp
sub
lea
lods
shrb
test
lret
fcomps
fisttpl
lcall
test
mov
mov
loopne
cmp
add
adc
push
fdivrl
cmp
das
stos
fsubr
mov
cli
xchg
dec
ja
dec
cmpsb
repnz
jno
outsl
push
jmp
mov
xchg
cmp
inc
and
jmp
inc
rcl
loopne
jno
rolb
aaa
jp
fldt
decl
inc
roll
xchg
inc
xor
push
mov
pop
inc
outsl
in
mov
add
ret
insl
repnz
sub
out
push
mov
fwait
orb
mov
addr16
sub
movsb
loopne
sbb
je
inc
fwait
pop
incl
lcall
xchg
push
clc
jmp
jo
insl
in
ret
out
in
mov
jbe
orb
jl
mov
inc
or
jb
cli
jmp
jne,pt
xor
sahf
ds
rcr
pop
outsl
push
les
arpl
mov
push
xor
gs
or
repnz
or
and
add
mov
ljmp
leave
push
or
jmp
mov
mov
out
push
es
jne
jl
or
pop
adc
adc
mov
imul
push
leave
pop
adc
inc
pop
mov
fwait
push
mov
mov
aam
js
and
shrl
fs
adc
jno
clc
ljmp
xor
fnstcw
jle
push
cmp
inc
mov
pop
ja
pop
mov
inc
add
push
repnz
mov
stos
add
loopne
ja
mov
std
outsl
add
aas
jg
cmp
push
xlat
shrl
xor
icebp
jno
data16
pop
cmc
pop
add
mov
pop
fimull
push
scas
in
xor
xor
xor
dec
sub
nop
or
mov
nop
add
movsb
test
fwait
insb
in
in
pushl
cmp
dec
xchg
cmp
dec
mov
jne
push
aaa
fdivrp
ret
mov
mov
add
mov
ret
out
add
mov
sbb
jo
mov
test
jp
cmp
sarb
js
fcoms
xchg
or
stc
in
pop
fdivs
je
std
andl
addl
adcl
test
push
rcrb
sub
cmpsb
sub
testl
out
pop
fdivrs
dec
addr16
stos
sbb
outsb
xlat
and
loope
mov
add
mov
ss
jmp
test
nop
adc
fwait
int
mov
inc
inc
dec
cltd
jmp
test
push
cmpsl
xor
add
cltd
dec
adc
pop
mov
mov
push
bound
add
add
mov
cmc
pop
push
imul
mov
mov
and
aam
jmp
jmp
sahf
scas
insl
push
mov
inc
mov
dec
inc
lea
xor
jl
test
mov
push
pop
ficomps
sub
loopne
sti
lock
ja
mov
loopne
pop
adc
cli
incl
test
mov
jne
les
outsb
push
lods
out
shll
and
fsub
repnz
jbe
decl
lret
or
sub
scas
add
int3
adcb
lret
call
out
out
jae
dec
mov
mov
mov
or
cmp
dec
mov
clc
or
xor
mov
loope
bound
and
xchg
fidivs
fidivrs
mov
rolb
mov
shl
test
xor
adc
or
push
inc
add
push
nop
mov
push
mov
inc
mov
les
pop
mov
hlt
push
mov
or
pop
jp
add
push
popf
sub
lahf
or
adc
roll
mov
xor
repnz
pop
mov
cwtl
pop
fs
or
lea
aam
outsl
push
fs
jmp
inc
movsl
test
pop
data16
xchg
inc
xchg
pop
fwait
cli
jg
lret
fcom
push
dec
mov
jmp
mov
clc
and
mov
xchg
sahf
and
push
dec
ficomps
jns
pop
call
movsb
xor
iret
add
jmp
repz
loope
xchg
pop
or
sahf
movsl
shll
mov
fcomps
stos
aam
mov
mov
jp
dec
mov
fdivl
mov
fisttpll
inc
rcrl
or
jo
test
ljmp
mov
cmp
popa
and
rcr
xchg
and
or
iret
mov
mov
ljmp
ror
mov
xchg
inc
adc
sti
decl
and
inc
out
imul
cmpsb
mov
sub
in
rcr
sub
dec
cs
shrb
mov
lahf
ds
sbb
rolb
lcall
mov
pop
inc
cltd
pop
pushf
sbb
inc
lret
jo
lret
shll
addr16
jae
sbb
pop
mov
mov
std
adc
pop
outsl
cld
nop
inc
xchg
lods
adc
xor
gs
loope
lds
cmp
mov
rorb
loope
and
adc
insb
fadd
pop
mov
das
js
call
xchg
or
mov
aad
or
pop
aad
mov
pop
lea
pop
ja
cmp
mov
popf
dec
xchg
leave
push
cmc
rol
outsl
cltd
push
dec
sbb
mov
jb
xor
or
push
mov
sub
jmp
jb
xchg
xchg
xchg
xor
mov
pushl
mov
jnp
push
int
gs
push
call
xchg
mov
stc
lods
inc
das
mov
insb
dec
dec
pop
xchg
clc
adc
cmpsb
or
add
rcrl
lds
std
imulb
push
mov
inc
in
xchg
and
add
push
insb
cmpl
pop
push
addb
icebp
lahf
divl
fcoms
movsl
push
mov
or
jne
push
rcrl
jmp
ljmp
in
mov
mov
add
scas
loopne
mov
icebp
add
pop
mov
repz
sub
lcall
flds
in
imul
push
cs
push
cmp
mov
jg
sbb
fistl
shll
mov
pushl
inc
sub
jmp
adc
sbb
clc
inc
xchg
xorl
mov
add
jg
push
mov
adc
sahf
and
jns
push
ds
mov
ret
aad
mov
adcb
fwait
sub
and
test
sub
pop
mov
int3
mov
mov
std
roll
insl
adcl
inc
add
pop
inc
xchg
aam
cmc
dec
push
ret
add
push
mov
jo
insl
sub
cmc
mov
lock
push
scas
push
cmpsb
and
mov
dec
inc
test
insb
mul
mov
sti
mov
jo
cli
test
dec
or
ljmp
and
fiadds
jp
mov
lea
idivl
adc
movsl
fildl
dec
adc
pop
lods
xor
push
cmpsb
or
push
lds
mov
mov
and
jle
clc
fimuls
jmp
jne
shlb
xchg
push
je
add
jbe
cmpsl
push
or
push
imul
dec
push
and
stos
mov
push
xchg
mov
dec
mov
clc
call
repz
adc
jl
fwait
jo
pop
pop
xor
loopne
push
loope
dec
call
popa
push
dec
pop
dec
hlt
or
test
mov
js
leave
stos
fs
push
rcr
js
cld
lock
aad
insb
outsl
sub
and
dec
cmc
addr16
in
mov
pop
mov
adc
movsb
dec
incl
cmp
push
ds
jmp
mov
imul
push
pop
cld
pop
add
jno
in
lea
ds
imul
sti
loop
arpl
mov
xor
and
mov
inc
add
jecxz
dec
pushf
ficomps
movsl
in
xchg
dec
call
push
sbb
mov
add
cmpb
in
inc
mov
push
jl
inc
das
cld
mov
inc
push
hlt
and
mov
lods
notl
add
mov
call
sub
ficomps
sub
mov
andb
out
ljmp
icebp
int
mov
or
leave
xchg
repnz
hlt
jg
sbbl
int3
mov
jp
andb
fs
jbe
outsb
call
mov
into
rcrl
inc
mov
add
mov
gs
les
insb
ja
scas
pcmpgtd
pusha
mov
dec
xchg
adc
dec
cmpsb
add
jbe
cmp
cmc
mov
aas
push
add
or
es
out
sub
das
add
mov
jmp
cmovo
or
cmp
or
push
dec
or
out
je
pushf
add
in
outsb
lcall
or
repnz
enter
aad
cmp
sbb
push
push
loopne
jl
xor
aam
lock
out
leave
xchg
pop
into
mov
cwtl
in
lea
and
ljmp
xor
mov
testl
cltd
mov
cmp
mov
cmpsb
stos
icebp
jmp
pusha
xor
cmp
fs
add
sti
push
jle,pt
fadds
iret
mov
sbb
idivb
jmp
js
mov
jns
or
pusha
lods
xlat
jg
int
lcall
push
xchg
hlt
sub
lea
outsl
xchg
shrb
cld
and
jne
cld
or
push
icebp
push
mov
xor
rol
popa
xor
xchg
xorl
mov
xchg
xor
jne
or
push
andb
jmp
out
mov
inc
movsl
lret
sub
mov
sti
aad
sbb
dec
sbb
adcl
ds
into
pop
inc
fwait
js
ljmp
jae
rcr
es
loop
mov
cwtl
push
leave
dec
lretw
outsb
pop
push
jnp
ds
xchg
shrb
push
add
xchg
stos
dec
fnsave
outsl
pop
mov
and
adc
push
xor
test
fcoms
mov
shlb
adc
sbb
test
out
mull
push
mov
mov
jmp
insb
stos
aas
movsl
movsl
pusha
leave
mov
cli
ds
push
decl
cmpb
nop
test
fsubrl
cmc
pusha
and
mov
xchg
test
mov
pop
shll
adc
sub
test
mov
ds
jge
std
ffreep
andb
mov
push
sbb
pop
jp
outsl
add
jecxz
inc
mov
adc
and
jle
mov
roll
sbb
pop
jmp
or
mov
out
add
mov
in
add
addr16
mov
jecxz
xchg
test
int
imul
in
mov
out
movsb
mov
sub
cmp
shrb
add
add
dec
test
xchg
pop
dec
fnstsw
xor
inc
ret
icebp
shlb
cwtl
clc
test
sbb
or
sub
or
pop
pop
push
and
push
aam
pop
neg
outsb
scas
fcoms
adc
or
fwait
mov
insb
pop
clc
int3
ljmp
int3
dec
push
add
mov
jge
pop
stos
lock
pusha
mov
or
mov
mov
xchg
cli
clc
sub
push
jle
dec
adc
repz
out
xchg
add
pop
pop
popf
fcmovnbe
dec
std
xchg
dec
pop
cld
pop
fwait
jno
rcrl
jl
movl
test
fcmovnu
cmp
insl
dec
pop
xor
popa
daa
mov
das
insl
cmc
pop
sbb
test
lret
cmp
int3
xchg
add
adc
ret
mov
inc
sub
sub
lock
adc
hlt
in
in
add
xchg
push
stos
mov
sub
sbb
mov
outsb
ret
xlat
dec
addb
fisubrl
movsb
mov
jns
das
pop
test
daa
lds
hlt
fisttps
add
shll
fldenv
sub
adc
fwait
cltd
cmp
inc
test
mov
mov
adc
addr16
push
jne
ss
ficompl
pop
add
sbb
testl
je
fistpll
push
pop
jne
cmp
mov
lock
mov
cltd
fldcw
subb
push
aaa
mov
movsl
insl
push
fldcw
mov
cmpb
lahf
cmpsl
inc
jecxz
dec
push
sahf
mov
inc
mov
fwait
and
mov
xchg
push
pushf
outsl
in
and
cmp
adc
jae
adc
or
test
cmp
mov
jne,pt
shlb
shlb
shl
mov
subl
mov
out
push
cmp
mov
xchg
lock
lcall
mov
inc
xor
push
jne
fsub
mov
outsl
mov
in
cmpsb
aaa
xchg
das
pop
mov
fs
inc
cld
aaa
dec
enter
inc
jecxz
sbb
subl
ja
test
cwtl
push
sbbb
add
out
js
nop
mov
movzbl
ret
sub
data16
aad
pop
sbb
pop
jo
add
jo
push
inc
dec
add
ljmp
pusha
pop
loopne
outsl
test
push
push
pop
js
inc
push
pushf
cltd
mov
leave
fistps
inc
push
push
cld
jl
xchg
sbb
fadds
push
sub
psubsb
push
xchg
insb
aas
pop
popf
mov
cmp
mov
xchg
xor
rcrl
jb
jmp
mov
pop
pop
jnp
aas
inc
push
push
cltd
cs
sbb
lods
in
pop
rcll
mov
jbe
mov
jae
mov
add
mov
popf
mov
jne
clc
imul
cmp
adc
xor
cmp
insl
push
mov
sub
add
in
popa
cmp
mov
inc
std
vmovq
pop
add
mov
xchg
mov
xlat
dec
fwait
clc
les
lea
xor
adc
pop
xchg
jl
subb
jle
mov
outsl
ljmp
ljmp
je,pn
push
pop
adc
cli
fisttps
into
jb
and
cmpsb
add
jne
dec
bts
out
repz
push
add
dec
dec
push
lods
loop
sbb
sub
into
cld
stc
ds
xchg
mov
pop
mov
in
mov
movsl
add
movsl
incb
push
or
mov
and
cwtl
test
or
aas
enter
dec
fsubrl
and
add
outsl
mov
adc
sbb
icebp
and
or
adc
jge
adc
les
jecxz
mov
shll
rorl
jl
fdivl
lods
outsl
and
fwait
sbb
in
cmpb
sbb
ret
out
dec
push
xor
das
adc
jle,pt
das
movsl
jmp
pop
push
gs
mov
pop
scas
je
cli
mov
adc
insb
repz
fmuls
out
or
cmp
push
imul
sbb
out
push
jns
sbb
jle
inc
sti
mov
push
js
push
jl
inc
sub
shlb
das
call
sbb
jp
and
mov
stos
call
xor
lock
jae
sti
jo
or
inc
inc
hlt
mov
jns
in
fdivrp
lods
cli
push
in
add
jno
stc
jbe
or
les
mov
lods
stc
sbb
add
mov
aaa
push
cmpb
fstpt
mov
pop
mov
sub
inc
hlt
add
inc
inc
and
fstpt
lahf
push
cmp
add
out
std
sub
sub
fstpt
decb
andl
lods
mov
fists
leave
mov
ret
fwait
push
pop
outsl
sub
cmpb
mov
mov
imul
popa
sub
push
outsl
rcll
push
lea
clc
mov
inc
dec
out
inc
adc
push
clc
lods
fsubrs
xchg
push
fidivl
mov
mov
sbbb
inc
cmova
mov
cli
shlb
cmc
popf
adc
fdivrl
pop
sub
inc
mov
cltd
fs
mov
adc
jne
jno
pop
orb
insb
adc
push
imul
mov
sub
pushf
push
test
sub
and
add
shl
inc
sbb
mov
adc
cwtl
cmpsb
lock
sbb
xchg
jb
push
sub
add
lea
jecxz
pop
sbb
add
ds
adcl
push
lods
mov
cmp
pop
loop
or
xor
xchg
push
or
sbb
rcll
les
ficompl
insb
loopne
adc
lds
sti
or
sarl
ret
scas
mov
ljmp
pop
mov
mov
mov
mov
push
in
movups
stos
mov
es
mov
dec
hlt
icebp
mov
stos
sbb
lds
mov
inc
dec
mov
ror
mov
sbbb
add
es
idivb
xor
fcoml
sub
sbb
and
pop
into
mov
insl
rolb
push
dec
mov
mov
jno
inc
outsb
xor
jmp
inc
jno
cmpsl
mulb
add
popa
fbstp
cmpsl
jno
pop
dec
jle
mov
sbb
pop
repnz
pop
movsb
inc
lret
outsl
mov
je
jb
or
xorb
sbb
xchg
cmpsb
jmp
and
hlt
xorb
cmpsb
popf
sahf
aam
fistps
rorl
in
call
ds
adc
mov
dec
or
dec
mov
jo
je
fistpll
fistpll
cmpsb
mov
add
cwtl
mov
add
inc
sub
jecxz
or
adc
xchg
mov
and
sub
and
imul
pop
outsb
and
cmp
dec
push
sub
imul
leave
mov
mov
push
outsl
fucomip
iretw
jp
dec
notl
notb
aaa
dec
sub
pusha
xor
mov
pop
jns
sub
es
pop
icebp
xchg
jno
dec
jl
imul
add
fidivs
sub
adc
stos
int3
cmp
loope
inc
pop
mov
ret
cld
test
outsl
sbb
insl
lods
add
mov
sub
inc
dec
mov
pop
imul
push
sub
imul
adc
or
fisubrl
in
jo
sti
scas
or
leave
xchg
stos
fdivrp
imulb
xor
cmp
xchg
ljmp
mov
test
sbb
mov
shl
fiadds
cmpl
ljmp
iret
lock
ds
ss
outsb
inc
cld
inc
adc
daa
cmpb
jecxz
adc
adc
jge
dec
imul
or
in
xchg
or
xchg
sbb
movsb
outsl
cli
sub
adc
push
aad
call
aam
sbb
inc
mov
or
sbb
mov
xchg
mov
pop
rorb
sti
imul
mov
lcall
jecxz
test
or
decb
popf
jecxz
inc
xchg
xchg
mov
dec
mov
pop
outsl
aaa
mov
mov
mov
mov
xchg
mov
sub
dec
clc
push
in
shlb
push
int
shl
mov
lcall
push
adc
std
cmp
jb
cltd
jecxz
fdivr
pop
cmpsb
push
add
cmp
fistps
repz
inc
pop
aad
xor
add
jmp
or
or
test
int3
insb
xorl
mov
pop
pop
xchg
jle
arpl
fwait
inc
add
mov
add
push
jecxz
sub
repnz
loope
in
cmp
pop
mov
sarl
dec
je
loopne
fsubrs
ficoms
int
or
sbbl
dec
xor
jbe
push
cmp
xor
fwait
call
aad
sub
cmp
fmull
dec
std
and
testb
and
add
mov
mov
cmpps
jg
aad
inc
dec
fmull
sub
pop
cs
lahf
cmp
filds
mov
sub
cmp
movsl
cli
adc
inc
mov
test
addr16
push
inc
loope
push
or
inc
aaa
adc
dec
sbb
dec
mov
pushf
adc
sahf
mov
push
lock
push
inc
sbb
lcall
mov
rorb
pop
cmp
dec
jb
enter
mov
sar
lret
ficompl
push
rclb
push
shr
mov
sahf
fidivl
jmp
pop
les
jmp
dec
jl
add
adc
jg
stos
pop
or
jmp
xor
mov
ja
jge
idivb
xor
sbb
mov
push
fs
das
out
jae
insl
cmp
hlt
push
mov
pop
mov
mov
mov
push
push
js
xchg
jecxz
xchg
xchg
jbe
cltd
lea
cmp
inc
hlt
mov
lds
sbb
das
push
pop
out
dec
or
stos
repz
add
jo
sub
leave
push
adc
fistl
test
or
nop
pop
adc
aaa
adc
jnp
jae
sbb
inc
cmp
ficompl
and
loopne
push
mov
jbe
adc
push
fucomp
rclb
sahf
adc
imul
adc
ljmp
pop
fsub
xorl
inc
push
ret
mov
imul
mov
jp
mov
mov
call
xor
mov
jmp
das
cmp
std
dec
mov
and
mov
inc
ds
push
daa
shr
push
xlat
push
psubq
jg
mov
fnsave
xchg
adc
or
add
cmpsl
cmp
fwait
bound
mov
test
push
jb
imulb
icebp
push
fdivr
outsl
js
push
xchg
pop
leave
mov
iret
pop
test
loop
mov
and
inc
test
movsl
sbb
arpl
addr16
cmp
mov
icebp
lret
cmpb
jbe
mov
mov
js
mov
stos
stc
xchg
aam
push
add
mov
xchg
push
sbb
pop
mov
or
or
jbe
stc
rcrb
cmp
add
stc
je
div
popf
adc
das
mov
nop
shlb
add
es
jo
in
sti
loopne
push
and
dec
mov
sarb
adc
cmp
imul
jle
mov
pop
inc
inc
add
xor
incl
int
subl
jbe
aam
das
and
dec
dec
jp
jl
push
push
ja
jg
jns
pop
pusha
ss
or
pusha
mov
xchg
mov
test
call
std
dec
mov
and
shlb
stc
dec
adc
jle
sbb
jle
fcomps
or
jo
push
push
out
popa
mov
pop
mov
pop
inc
out
or
adc
cmp
push
mov
sbb
inc
xchg
fcmove
cmp
les
inc
adc
int3
stos
jmp
or
push
test
incl
jns
repnz
and
icebp
decl
add
mov
adc
xor
sbb
addr16
or
js
lods
loope
push
lahf
pop
mov
daa
test
rcll
lock
movsb
fnsave
cmp
push
mov
movsl
int
call
dec
mov
ret
outsb
push
jnp
mov
mov
push
mov
cmp
stos
and
push
les
and
int3
arpl
adc
inc
aad
fldl
pop
test
adc
addr16
sub
jnp
movsl
incb
adc
daa
mov
mov
add
ret
inc
pop
test
pop
ss
xor
scas
inc
mov
sub
call
jbe
cld
mov
test
pop
mov
cmp
out
jbe
jecxz
push
icebp
mov
ret
movsb
mov
das
popa
std
and
sbb
xor
mov
cs
lods
mov
fstpl
cwtl
pop
hlt
jbe
dec
xchg
jo
sbb
xchg
subb
sbb
andb
mov
xlat
or
pop
ret
mov
addr16
mov
rcr
bound
icebp
xchg
loopne
ljmp
add
jg
decb
inc
hlt
pusha
or
stc
jecxz
jo
jp
pop
xchg
out
or
lret
cs
push
push
push
lods
adc
repnz
das
mov
fs
inc
mov
divl
das
inc
mov
movsb
adc
gs
add
and
fnstcw
fisubrl
pusha
cmp
inc
lock
adc
add
stos
dec
stos
decb
ret
add
add
xchg
imul
add
xchg
ja
aam
and
adc
mov
xchg
and
scas
popa
shll
jmp
lock
xlat
lahf
les
loop
or
das
sbb
add
pushf
popf
add
sti
dec
fcmovnb
out
xor
fldlg2
dec
and
fiaddl
xchg
in
lds
add
nop
flds
into
xor
pop
pop
mov
inc
loope
fstpl
sbbl
lret
jge
inc
add
idiv
pop
cmpsb
ficoms
movsl
xchg
in
test
cmc
and
sbb
mov
push
fsts
mov
dec
mov
test
cmp
ret
pop
vshufps
mov
popl
add
xchg
sub
rolb
adc
outsb
sbb
cmpsb
dec
inc
fisubrs
in
imul
notb
add
loope
lods
lret
ss
sbb
loopne
rolb
mov
test
push
sub
ss
inc
test
incb
mov
dec
cs
inc
mov
movsb
xorl
xchg
call
mov
inc
repnz
data16
mov
sbb
pop
dec
leave
filds
stos
adc
sbb
and
add
and
pop
clc
faddp
fidivl
out
pop
lret
stos
pop
shrb
pusha
sbb
jne
aas
shrb
cmp
jo
orb
or
clc
shrl
js
ficoml
les
sahf
cmp
mov
pop
push
inc
mov
shll
xchg
fadds
adc
pop
dec
roll
lret
out
pop
fmuls
mov
and
in
lea
pop
in
sub
sti
fidivs
sarl
lds
or
jne
das
std
push
movsb
dec
mov
sub
insb
adc
sbb
push
inc
int
sbb
pop
lea
and
imul
push
iret
out
pushl
test
add
inc
adc
and
adcb
mov
cmp
jp
mov
outsl
push
dec
xor
repz
push
or
cmp
popf
cmp
mulb
inc
mov
push
das
rcrb
sub
sbb
push
shlb
inc
xchg
inc
movsb
sbb
push
test
sbbl
call
add
movsb
pop
scas
push
jge
pop
dec
out
into
loope
pop
ret
xchg
and
mul
gs
loopne
insb
or
and
dec
jb
jmp
cwtl
pusha
add
movsl
jo
xchg
js
movsb
fstpt
xchg
arpl
rorb
mov
clc
inc
repnz
inc
loop
cwtl
cmpsl
test
lea
mov
mov
testl
aaa
add
popa
imul
les
pop
mov
mov
ss
jae
or
adc
movsl
shrb
aad
add
or
in
loopne
sub
repnz
adc
add
mov
pop
dec
testb
shrl
pop
test
fcmovb
insl
mov
jmp
lods
lret
movsl
mov
add
pop
pop
cld
ja
or
pop
aad
cmp
sbb
aad
jnp
mov
test
mov
pusha
inc
mov
ret
repz
jns
or
sub
dec
nop
or
adc
xchg
scas
loop
testb
addb
rorl
out
xchg
pop
rcrb
jno
cwtl
bound
cltd
call
xchg
mov
or
mov
xchg
xchg
lcall
xorb
fabs
sbb
jle
sub
cmpsb
and
pop
inc
shlb
rorb
push
xchg
pop
fmull
fcoms
jmp
outsb
mov
inc
repnz
or
adc
inc
pushf
jbe
and
lods
add
cltd
loope
les
push
jb
pushl
test
mov
push
pushf
mov
outsl
mov
sub
cltd
dec
mov
icebp
es
push
scas
vpmaxub
clc
or
mov
add
adc
cmp
adc
or
aaa
jb
stos
and
pop
mov
xor
mov
lock
jecxz
int
into
inc
push
mov
add
lods
fstpl
cmp
mov
mov
mov
mov
push
shlb
adc
clc
push
std
insl
jae
inc
dec
stc
xor
mov
shrl
loope
or
inc
adc
stos
loope
inc
xchg
xor
es
int3
adc
out
inc
adc
jg
mov
js
cmp
push
nop
test
lods
fstpt
push
lahf
es
mov
flds
mov
pop
mov
cmpsl
dec
out
adc
xchg
sbb
addr16
lock
cmp
test
xlat
push
xor
icebp
jbe
jp
push
in
jecxz
sub
test
aad
mov
imul
add
mov
push
mov
mov
or
loop
jp
jp
test
jmp
pop
or
js
mov
push
in
mov
in
lcall
cmp
mov
sub
mov
fucomp
out
clc
mulb
adc
pop
dec
imul
call
test
cmpsb
ret
ljmp
pop
mov
jp
adc
inc
sbb
mov
insl
jmp
rclb
xchg
pop
sbb
loope
xchg
lock
gs
lcall
jno
fstps
sub
pop
mov
cmp
mov
inc
cld
inc
les
mov
and
ja
in
mov
icebp
adc
xor
dec
mov
test
nop
outsb
out
shrb
lods
icebp
inc
xchg
push
aaa
adc
pop
imul
movsl
xchg
mov
jo
cld
or
test
push
jo
das
or
fldt
jle
pop
dec
shlb
je
push
lret
insl
sub
push
lret
jbe
aaa
adc
stos
push
std
push
pop
xor
push
test
mov
fcoml
jl
movaps
or
dec
mov
or
clc
aas
sbb
or
adc
fstpt
push
jmp
paddsw
push
mov
or
stos
pusha
xor
and
xor
sarl
jg
mov
and
sbb
mov
sbb
aam
mov
adc
cwtl
pop
das
or
inc
sbb
ficoms
frstor
xchg
push
stos
in
and
loope
outsl
sbb
cli
add
sub
xchg
xchg
sub
push
cmp
test
test
xchg
mov
loop
pop
push
fs
inc
ja
xor
push
jmp
sti
inc
sub
mov
in
xor
test
ret
push
lods
lock
push
shl
pop
cwtl
in
hlt
inc
push
decb
aam
fsub
add
dec
inc
ss
mov
stos
mov
and
inc
icebp
ret
push
ss
dec
rcr
jg
push
push
stc
incb
pop
adc
or
sbb
and
jg
aaa
pusha
pop
sub
cmp
sbb
cmpsl
add
inc
sub
insl
pop
and
outsl
push
shl
lcall
xchg
sub
push
es
inc
inc
into
leave
sbb
inc
xor
mov
pop
test
fs
ficompl
sar
sbb
jbe
jmp
mov
scas
jne
push
in
lock
lret
push
adc
and
push
scas
clc
test
mov
push
inc
cmp
lahf
sub
cmp
jo
iret
insl
fstl
adc
cmpsl
or
mov
iret
shrl
sub
inc
les
xchg
movsl
mov
dec
or
jp
leave
push
pop
mov
and
loope
mov
test
lret
data16
dec
mov
push
and
andl
clc
pusha
outsb
cli
inc
cmp
mov
jbe
inc
add
out
call
mov
inc
aaa
push
rorb
jne
adc
jl
enter
clc
push
ja
sub
mov
xlat
and
pop
daa
rorl
dec
insb
das
in
loopne
dec
lcall
and
or
call
ret
andl
add
popa
jbe
jge
imul
int3
ljmp
fstpl
or
pop
xchg
push
ret
jge
jno
xor
clc
pop
sbb
das
imulb
lock
xchg
mov
adc
xor
insb
mov
ja
xadd
add
adc
lcall
fnsave
mov
test
lods
push
sbbl
mov
stc
arpl
fnstsw
jo
and
pop
mov
add
pop
dec
test
and
sbb
dec
or
lahf
mov
inc
mov
add
fwait
pop
dec
pop
mov
pop
mov
out
pop
mov
ror
or
push
mov
out
pusha
lods
test
addl
adc
movsb
and
pushf
xlat
lcall
pop
or
es
sbb
pop
jg
notb
out
jo
jo
add
mov
dec
cwtl
call
mov
dec
das
loopne
in
ljmp
sub
xchg
push
dec
lea
adc
les
mov
mov
popa
les
sti
sbb
loop
lcall
fdivl
inc
test
xchg
or
movsl
mov
cli
fisttpl
in
inc
or
or
ret
jb
stc
push
in
or
adc
call
jl
pop
pop
scas
mov
cmc
inc
aam
or
inc
imul
pop
xchg
xchg
lcall
cs
xchg
popa
mov
mov
ja
mov
xor
int
pop
negl
jmp
cld
lods
sbb
mov
jg
push
inc
les
pop
rcl
sub
idiv
lea
xchg
pop
dec
fstps
lea
in
adc
hlt
mov
fbstp
xchg
or
push
xchg
outsb
fwait
dec
loopne
mov
dec
sub
stos
mov
fcmovnb
push
sub
adc
aad
push
fdivl
cltd
testb
mov
stos
repz
scas
xor
loopne
fists
cwtl
mov
arpl
scas
or
xchg
mov
push
mov
cmp
dec
testl
inc
fildll
dec
or
mov
mov
push
rolb
sbb
test
mov
test
xchg
mov
dec
jle
pop
cmc
test
xor
out
cmpsl
mov
fadds
cmpsb
mov
aaa
push
in
mov
sbb
cmp
test
test
sbb
push
mov
mov
add
out
sbb
and
fstpt
gs
or
repnz
dec
jae
arpl
pop
jp
js
enter
flds
scas
adc
push
cmp
xchg
or
push
or
sub
dec
mov
cmp
lods
inc
loope
dec
ljmp
cmp
mov
add
pop
roll
fisttps
icebp
and
or
adc
das
xlat
sub
mov
xlat
ja
xchg
push
jecxz
pop
stc
push
dec
mov
es
ljmp
fldenv
jp
and
sbb
xor
push
clc
mov
inc
pop
scas
loopne
mov
add
std
inc
mov
popa
test
mov
jb
imul
mov
out
ficompl
std
xor
pop
scas
mov
pop
fdivs
out
push
mov
inc
es
xchg
cmp
push
and
aas
das
shl
aaa
sub
sti
repz
xor
imul
push
and
lret
inc
not
cmp
sti
mov
sbb
add
mov
fidivrl
test
sub
push
push
dec
bnd
lock
inc
ret
mov
and
call
sbb
mov
xchg
and
int3
push
lea
lret
jle
push
pop
cltd
lret
cmpsl
sub
xchg
adc
ret
mov
js
imul
aaa
shl
cs
clc
push
cltd
push
adc
xor
in
lods
movsl
in
cmp
js
adc
push
sarl
fstpt
add
dec
mov
pop
test
xchg
adc
xor
inc
and
add
decl
ja
lods
sbb
aas
sti
cmc
sbb
fisubrs
jle
add
adc
push
pop
idivl
mov
ss
push
cmp
cmpsb
or
in
and
fwait
lock
pop
lds
leave
add
pop
outsl
fiadds
rcl
out
test
sbb
mov
xchg
inc
xchg
and
adc
cs
cmp
shl
xchg
out
xor
shlb
and
stc
xchg
adc
call
addr16
ret
decl
fmul
orb
adc
and
push
cmp
mov
leave
in
jg
inc
pop
mov
add
stos
fsubr
add
shrl
sub
xlat
jmp
fcmovnu
imul
xor
xchg
push
push
cmp
sbb
fsts
or
push
frstor
dec
scas
pushf
mov
or
xor
jle
push
sbb
and
mov
mov
jg
mov
fisubl
sbb
jle
jg
push
outsl
ja
xor
push
dec
push
xor
lahf
push
or
out
cs
mov
fistpl
push
push
pop
dec
sarl
cmp
cmp
jge
rcrb
adc
mov
sbb
ljmp
inc
mov
xchg
lods
test
push
call
and
dec
sbb
lods
lahf
lcall
ficoms
push
adc
mov
nop
fwait
rcl
mov
jg
test
mov
clc
or
mov
cli
push
icebp
add
fldt
mov
mov
mov
mov
push
mov
push
inc
add
sub
push
sbb
daa
sub
popf
lock
add
idivb
decw
enter
mov
xor
int
test
out
inc
rcr
gs
mov
add
loope
xchg
mov
pusha
cmp
call
icebp
loop
inc
bound
mov
shlb
jle
or
dec
jg
pop
mov
cmp
jnp
dec
in
fwait
stos
and
loope
push
xchg
fadds
push
mov
push
pop
aad
mov
mov
nop
or
rorb
mov
into
sbb
xchg
sub
or
mov
movsb
mov
ficoms
mov
lock
push
push
and
mov
add
jp
and
jbe
mov
shll
aad
xchg
push
or
movb
sub
ljmp
adc
cwtl
push
push
test
inc
push
lcall
push
mov
scas
insb
add
mov
push
aam
lods
ja
rol
test
dec
arpl
ss
xchg
or
xchg
xor
sub
xchg
aas
mov
add
and
sub
jl
outsl
insl
aam
adc
rcrb
je
pop
sub
test
adc
sbb
mov
pop
fidivrl
fcmovnbe
in
ss
clc
or
xor
mov
push
pop
imul
cmc
push
rcll
lods
xchg
mov
inc
and
loop
das
clc
cmp
aas
inc
jnp
sub
adc
js
sub
popf
mov
mov
cli
cmc
push
nop
shrl
in
fucomip
imul
test
mov
inc
mov
mull
loop
sub
adc
jae
aad
out
jg
push
jns
jecxz
test
push
dec
enter
mov
mov
pop
rorb
icebp
insl
push
pop
add
clc
xchg
cmp
inc
pop
out
loope
cmpxchg
or
data16
push
or
movsl
loope
mov
mov
adc
adc
add
mov
jg
je
shlb
scas
or
pop
jae
icebp
pop
lods
je
imull
add
mov
out
mov
pop
cld
fsubrl
les
pushf
xor
movsb
push
ret
mov
add
ljmp
iret
jg
add
into
je
iret
je
fs
xor
push
push
mov
das
mov
jmp
or
fisttpll
ret
xor
cmp
pop
in
mov
jne
sbb
mov
mov
sub
cmpsl
xchg
sbb
out
lods
ss
dec
or
out
ret
decl
rclb
pop
dec
jno
in
cmc
outsl
cld
jae
int
push
jp,pn
lcall
test
iret
or
insl
ror
dec
jl
cmp
mov
xor
ljmp
cli
sbb
sub
mov
cmc
ret
shll
pop
mov
cmp
std
out
call
stos
iret
cmp
stos
aam
sub
imull
outsb
movsb
cmpsb
cmp
aam
and
mov
jmp
and
jge
add
push
outsl
mov
sub
leave
mov
test
jle
lcall
xchg
adcl
in
cld
cmp
test
movsb
test
or
dec
lock
outsb
xchg
call
push
adc
loope
xchg
ret
mov
jno
pop
inc
dec
adc
mov
pop
in
aam
or
xor
or
cwtl
pushl
and
or
pop
push
sahf
xor
inc
or
out
inc
add
sti
pop
mov
cmp
in
movsl
mov
mov
push
dec
subb
jae
push
fimull
leave
adc
inc
loopne
rorl
mov
xor
nop
mov
data16
loop
adc
insb
sbb
std
idivb
push
repnz
jle
jle
ljmp
and
imul
add
inc
es
data16
pop
push
sbb
cli
ljmp
lcall
dec
push
adc
push
subb
mov
or
sbb
fcmovnu
ljmp
pop
xor
inc
cmp
push
in
sbb
push
xor
test
cltd
mov
test
jne
mov
je
mov
loopne
je
je
xorl
xor
pop
inc
jmp
inc
add
out
mov
lds
mov
test
iret
xor
xor
repnz
insl
mov
aad
rorb
or
lret
ret
dec
rorb
in
inc
std
outsl
lea
pop
sahf
pop
jno
pop
mov
jmp
faddl
pop
clc
sub
testb
insl
cmp
pop
dec
and
xor
sbb
clc
lahf
cmpsb
and
inc
test
mov
jae
add
clc
loope
add
push
popa
fldenv
cmpl
das
jl
decl
flds
insb
ret
add
xor
fdivs
cld
aaa
adc
jl
movsl
test
mov
ljmp
jle
add
imul
mov
cmp
push
out
cld
xorb
mov
sbb
lahf
aam
hlt
cmp
mov
mov
sbb
dec
outsl
mov
and
or
jbe
jmp
pop
sub
addr16
cmp
mov
addl
mov
insl
and
push
stos
dec
test
pop
clc
ss
popa
add
movsl
push
bound
sub
fistpll
fdivrl
xor
lods
mov
lcall
xchg
cld
fists
es
int3
or
adc
lods
shll
mov
mov
sub
adc
pop
cli
sbb
std
xchg
lcall
ds
out
stc
xchg
in
xchg
adcb
adc
sub
iret
pusha
xlat
stos
rcll
mov
cmp
pop
outsl
iret
push
mov
add
dec
jne
and
add
incl
xchg
insl
bound
in
inc
jge
inc
dec
mov
adc
jge
jnp
sub
js
sbb
cli
filds
mov
jl
stos
fsubp
sub
shr
mov
stos
pop
dec
pop
enter
ret
loopne
pop
cmp
cmp
cs
adc
cmc
mov
ret
adc
xchg
ror
out
inc
outsl
push
pop
fsts
jmp
xor
sarb
icebp
mov
adc
rcrl
mov
in
xchg
or
dec
jg
pop
mov
aaa
mov
or
call
cmpsb
sti
outsb
out
xchg
and
inc
scas
or
mov
cmp
inc
rolb
fadds
dec
dec
cmp
dec
hlt
jbe
mov
stos
add
adc
fadd
jle
data16
fsubs
dec
pop
push
dec
mov
ds
movsb
adc
sbb
std
mov
inc
cltd
jae
mov
stos
popa
add
pop
mov
add
test
inc
lea
paddw
ljmp
lock
dec
inc
cwtl
inc
sub
inc
lea
xchg
ja
call
sbb
cmp
pop
out
loopne
stos
xor
pop
or
pop
sub
cmp
mov
test
jge
dec
mov
or
dec
mov
aaa
push
xchg
xchg
sbb
mov
add
repnz
add
das
insb
aam
mov
idivl
mov
dec
xlat
iret
sarb
adc
sbb
aaa
ja
mov
pop
in
andl
ljmp
mov
imul
lds
movb
addl
sub
inc
outsl
mov
xchg
inc
fwait
cmp
mov
dec
pusha
arpl
test
aaa
ret
or
lea
xchg
add
insl
mov
mov
xor
rolb
push
aas
loopne
xchg
cmp
enter
outsl
inc
sub
arpl
icebp
mov
arpl
scas
sub
jecxz
push
xchg
and
mov
xchg
incb
aaa
mov
icebp
fisttpl
jge
dec
jmp
movsb
push
push
jae
mov
iret
int
mov
into
sbb
mov
pop
mov
mov
pop
hlt
int
fistpll
nop
into
fstps
iret
xchg
outsl
loopne
mov
or
popa
jnp
inc
xchg
aaa
push
add
lret
fnstsw
aas
mov
and
add
inc
mov
pop
stos
dec
fstpl
mov
adc
arpl
sbb
dec
mov
lret
insb
test
adc
popa
push
aad
sub
inc
ljmp
sbb
adc
es
mov
nop
out
add
inc
sbb
push
call
xchg
cltd
andnps
mov
push
push
pop
xor
add
fistpl
leave
fwait
sub
push
pop
push
fs
mov
js
jge
adc
stos
sub
xlat
pop
sbb
aad
mov
cmpsb
mov
popa
cmc
jg
mov
lahf
stc
adc
mov
addr16
ljmp
sbb
pop
fistl
push
or
lret
loop
and
cmp
push
daa
mov
lret
push
pop
sarl
insl
int
icebp
adc
and
dec
adc
and
stc
push
aas
scas
and
jg
ret
push
xchg
adc
hlt
out
push
xchg
mov
repz
incb
rcll
mov
add
inc
hlt
lcall
push
push
push
jno
inc
sbb
daa
or
cmp
out
dec
mov
loop
sbb
xchg
inc
push
icebp
clc
movsl
pop
clc
add
fnsave
xchg
or
dec
and
jne
andb
pop
loope
bound
in
enter
and
je
lods
push
add
cs
das
fimuls
test
outsb
xlat
mov
jno
xchg
push
push
aaa
fisubrl
es
addr16
out
mov
hlt
mov
cmc
inc
fildl
popf
vmovups
fidivrs
mov
popa
sub
and
in
arpl
aaa
jne
sbb
mov
inc
pop
mov
fstl
cli
addb
xchg
sbb
xchg
jbe
fistpll
into
mov
xchg
pushw
dec
cld
jnp
andb
mov
jecxz
andb
mov
adc
and
or
xor
mov
xor
scas
mov
bound
lods
repnz
mov
mov
or
lcall
mov
shrl
bound
test
jmp
mov
xorb
sub
xchg
mov
cmp
cmovae
mov
adcl
sbb
jmp
cltd
sbb
jb
int3
gs
addl
dec
sbb
sub
jbe
insl
scas
movsl
test
aaa
pushf
dec
mov
pop
inc
adc
dec
lods
mov
addl
pop
bound
cmp
stos
insl
loope
push
xchg
pop
loop
gs
decb
mov
adc
pop
ret
mov
jge
pop
xchg
imul
hlt
and
pop
fisubrs
jo
call
sbb
push
xor
incb
mov
fstl
mov
loop
lods
shl
shrb
shll
jl
enter
pop
mov
or
adc
pop
insb
sub
adc
pop
xor
lods
dec
cs
into
sub
and
mov
ja
ljmp
xchg
jne
jl
xor
pop
and
fwait
or
aaa
cmc
pop
add
mov
mov
lods
stos
inc
sub
test
je
push
inc
xor
mov
and
sti
add
sti
ret
mov
xor
mov
cmc
push
jne
inc
setnp
mov
jp
test
or
and
std
out
clc
mov
aad
rcll
aam
cwtl
aad
test
add
cld
mov
and
jo
and
or
sbb
rcrb
xor
ret
outsl
and
push
xchg
cmp
mov
jmp
jo
sbb
add
adc
sbb
adc
xor
mov
aam
xor
sbb
sbb
xchg
mov
into
pop
cmp
dec
and
pop
add
ss
cltd
adc
jnp
imul
movsb
sbb
fildl
xchg
push
call
adc
mov
push
push
sub
jbe
jg
jbe
pop
out
xchg
cmp
dec
push
fs
mov
mov
push
inc
les
fidivs
sarb
loope
roll
sub
mov
sub
adc
shrb
mov
int3
decl
pusha
movsb
rcll
inc
in
dec
adc
ljmp
and
add
sub
mov
shrd
sub
adc
das
jno
and
and
ljmp
and
outsl
mov
pop
pop
push
adc
dec
test
test
mov
ret
xor
and
cld
and
cli
jbe
shrl
xchg
popa
push
mov
incb
push
aaa
scas
add
sbb
je
data16
in
push
shrb
lea
sbb
jbe
push
push
sub
testb
pop
mov
shrl
fildl
hlt
mov
mov
call
fsubrl
sbb
xor
or
pop
inc
inc
fwait
test
push
sub
insl
add
push
pop
xor
mov
mov
dec
sub
ret
mov
ljmp
mov
movsl
jae
adc
xchg
add
dec
mov
ja
pop
mov
cltd
inc
sub
out
outsb
mov
mov
jle
jno
cs
test
scas
lcall
inc
lcall
dec
push
mov
push
or
iret
and
cli
fcomps
stos
pop
mov
aaa
push
cmp
or
lret
xor
ret
push
aas
loopne
adcl
push
jmp
xchg
fisttpl
jno
xor
jmp
movsl
test
mov
push
jg
ds
lea
pop
cmp
pop
stos
test
or
imul
mov
lods
addb
push
lds
and
and
pop
pop
cs
dec
popf
sarb
fstpt
cwtl
js
out
or
push
or
jo
nop
jle
out
out
fdiv
jg
dec
mov
and
xchg
adc
mov
fisttpll
stos
mov
and
lcall
flds
mov
les
lods
lcall
popa
outsl
xchg
outsb
pop
inc
sub
and
xor
int3
movb
imul
mull
dec
lods
test
push
adc
arpl
sub
mov
rcrl
ret
adc
rcrb
mov
popa
fsin
pop
lahf
xchg
out
shl
cmc
or
popa
adc
pop
test
xchg
inc
pop
sub
mov
or
ret
jo
je
push
push
loopne
xchg
dec
cmpb
jmp
std
clc
mov
xchg
std
mov
icebp
insl
mov
out
addl
sbb
cmp
sarl
jnp
mov
mov
enter
lock
ljmp
mov
push
push
js
and
xor
popa
push
leave
out
push
mov
xorb
movsl
sbb
inc
mov
or
sbb
popa
inc
mov
jnp
mov
sub
sub
jecxz
cmpsl
in
lret
xchg
push
cmp
mov
in
sub
jns
mov
inc
stc
leave
popa
xor
jo
fcomp
rcrb
sub
jp
push
sub
mov
incb
adc
push
fcmovnb
cwtl
out
fisttpl
jg
mov
jl
and
sub
in
out
loopne
or
mov
shlb
pop
push
imul
outsl
std
or
dec
sahf
scas
je
sbb
pop
jno
js
js
push
rcrb
mov
mov
add
dec
push
inc
cld
negl
push
inc
xor
mov
mov
data16
decl
mov
sub
mov
aad
jmp
push
xchg
sub
jl
clc
or
xchg
or
xchg
aad
cmpsb
push
inc
aaa
lret
sub
and
or
add
xchg
mov
jne
nop
pop
arpl
cld
ret
and
popl
call
out
mov
push
divl
add
std
lcall
cmc
addr16
cs
mov
repz
bound
fs
out
add
nop
push
jae
out
sbb
int3
out
or
iret
or
in
sbb
sub
push
pop
das
out
das
cmp
aas
ja,pn
jecxz
sbb
inc
jle
mov
ljmp
push
mov
aam
or
decl
pop
sbb
out
sub
add
sar
inc
adc
lea
cmp
and
stos
std
mov
add
icebp
dec
rcrb
pop
jmp
out
mov
xor
inc
stos
inc
mov
xor
lcall
mov
sbbl
enter
movsb
push
xchg
jbe
mov
icebp
fstp
xchg
xor
sbb
mov
fsubl
out
adc
add
jo
outsl
loop
bound
cs
data16
xchg
sbb
pop
cmpsl
xchg
inc
mov
cwtl
mov
mov
or
mov
cmp
leave
daa
iret
shll
mov
mov
aad
xor
add
sbb
mov
lods
xor
sub
xchg
das
mov
popa
mov
and
pop
pop
mov
mov
pop
mov
cmp
lret
pop
add
lods
pop
je
and
clc
push
ret
aad
cmp
mov
div
or
clc
cli
outsl
insb
pop
lods
sub
push
or
stos
inc
jp
inc
imul
jg
test
arpl
push
jo
mov
push
mov
adc
push
push
addr16
adc
pop
rclb
aam
in
sub
call
ffreep
jmp
pop
out
mov
mov
pop
mov
adc
cmp
cltd
bound
jbe
push
pop
pop
push
mov
mov
adc
xchg
xchg
sub
jns
add
lods
sbb
ficoml
call
inc
push
rorb
rol
out
mov
mov
pop
cmp
lea
xchg
jle
out
jp
ja
pop
test
cmp
xchg
mov
out
fidivs
push
mov
lahf
ljmp
outsl
mov
lock
movsb
in
jecxz
adc
dec
fwait
mov
xchg
adc
fidivrl
cmpsb
aas
inc
into
cld
inc
inc
mov
sbb
add
popa
ret
add
std
mov
test
mov
push
push
and
mov
jmp
xor
js
jno
jp
shlb
js
test
add
fbstp
into
repz
xchg
jb
sbb
pop
xor
jno
jns
lods
scas
out
aaa
mov
sbb
push
pop
push
xor
add
mov
ret
and
cs
cmp
mov
sub
cmp
sbb
mov
test
sbbl
pop
mov
mov
or
ret
push
lds
xchg
jmp
xor
mov
fs
dec
imul
mov
addb
mov
into
roll
push
mov
push
std
adc
sbb
ds
pusha
insb
mov
pop
pop
adc
dec
cld
fs
lods
add
pushl
or
xchg
in
push
cld
mov
pop
lods
lods
movsb
scas
outsb
or
icebp
imul
fcomi
fwait
or
in
mov
movsb
xchg
cmc
je
in
sti
stos
fnsave
das
scas
mov
je
lcall
pop
adc
repz
cmp
ja
pop
mov
sbb
inc
test
mov
rcrb
mov
adc
and
jg
ss
add
roll
nop
in
repnz
xchg
test
or
xlat
jl
lock
jbe
sub
test
inc
arpl
adc
lock
or
sub
xor
pop
push
dec
xchg
jmp
xchg
aaa
xchg
lods
jae
cmp
lcall
add
sahf
mov
lret
mov
insb
inc
aam
fists
dec
mov
mov
fcmove
popf
push
loop
addb
inc
pop
adc
xlat
cld
out
ret
pop
pop
bound
push
push
sbb
test
xor
mov
stos
jecxz
push
in
out
push
inc
lds
xor
imul
shr
mov
adc
cmpsl
or
in
cli
pop
dec
or
sbb
les
clc
inc
push
lcall
sbb
push
add
mov
loop
ljmp
stos
mul
repnz
hlt
sbb
popf
jle
out
in
adc
cmp
jge
loope
adc
adc
ss
outsl
cmc
out
cmp
add
frstor
pop
push
cld
jle
hlt
loope
xor
mov
ja
add
lock
mov
cltd
or
loop
mov
or
ljmp
jbe
in
sti
pop
mov
lahf
adc
out
sbb
insb
adc
nop
repz
add
inc
lcall
jge
out
call
push
out
fldcw
imulb
jmp
test
shlb
aam
push
call
jg
pop
adc
dec
andl
xor
mov
pop
fwait
test
push
cmp
inc
inc
inc
shlb
xor
subl
cltd
outsl
daa
mov
stos
add
xor
pusha
mov
jl
sub
xchg
jl
mov
dec
in
sub
ljmp
test
cli
pop
push
lods
or
lahf
ja
lea
mov
mov
dec
pop
test
popf
subl
mov
sbb
xchg
add
pop
mov
lret
stos
add
adc
mov
ret
xor
push
pop
add
xchg
pusha
and
adc
andb
in
xchg
nop
mov
ja
stc
pop
mov
mov
pop
decl
push
add
popa
inc
sub
push
pop
push
push
outsb
pop
add
aaa
dec
outsl
je
mov
popf
decl
push
mov
ret
inc
das
jno
mov
inc
inc
xchg
adc
mov
push
inc
ss
imul
jmp
icebp
lea
xor
xor
jle
outsl
mov
jecxz
out
lods
jl
adc
xlat
jecxz
sbb
int3
ret
xchg
xchg
stos
mov
outsl
fwait
push
lock
subb
fwait
pop
jns
inc
aaa
cmc
mov
and
jae
push
sbb
mov
push
dec
mov
in
mov
mov
lea
pop
cmp
mov
sarb
rcrb
fisttps
sub
fildll
mov
jg
inc
stos
jecxz
mov
stos
cwtl
xchg
jge
add
xor
shrl
cwtl
adc
icebp
negb
cli
mov
iret
cli
inc
dec
xor
cwtl
adc
lret
or
mov
fimuls
outsl
jns
push
pop
ret
xor
fdivs
pop
pop
cmpxchg
fldln2
clc
or
xor
enter
sbb
or
iret
mov
jl
jmp
ljmp
jg
pop
lock
in
ret
inc
jne
jb
adc
and
ljmp
sbb
mov
stos
lret
scas
rcll
cmp
fisubl
addl
mov
and
ljmp
test
xor
pop
aas
mov
outsl
jl
ljmp
fisttpll
pop
mov
ret
dec
mov
iret
pushl
add
cmp
add
bound
push
in
std
pop
jbe
xchg
dec
push
push
rcl
dec
dec
pop
lahf
fildll
dec
push
fisttpll
jne
jecxz
fdivl
add
rolb
call
outsb
sub
inc
mov
push
push
xchg
sbb
mov
sbb
das
mov
mov
aam
scas
or
aam
je
xchg
sub
sti
xor
mov
jns
inc
xchg
rclb
mov
or
fndisi(8087
movsb
movq
cwtl
hlt
loop
sahf
mov
xor
dec
popl
add
push
jne
fldt
ret
movsb
daa
add
pop
data16
jmp
test
stos
mov
mov
fimuls
aad
mov
adc
add
or
cwtl
loopne
insl
add
repnz
mov
jg
lea
fidivl
jbe
mov
or
scas
aad
push
test
insl
arpl
pop
fistpll
out
mov
outsl
adc
pop
pop
pop
repz
mov
scas
pop
mov
jne
pop
rorl
jnp
add
or
inc
xchg
dec
jo
popa
lods
rorl
adc
gs
out
outsb
xchg
fs
lcall
outsl
lret
push
dec
mov
scas
insl
fstp
outsb
mov
repz
cmp
push
add
pop
inc
inc
adc
cmp
sahf
lods
ret
dec
push
cmp
or
xchg
add
repz
push
ret
sub
sbb
aaa
call
fcoms
adc
out
pop
call
dec
mov
sbb
jge
cmp
in
and
push
inc
loope
xchg
pop
sub
pop
push
cmp
out
and
xor
mov
nop
test
mov
int
icebp
sbb
dec
xlat
fs
xor
icebp
or
or
xor
cmp
adc
pushl
sbb
test
pop
inc
outsl
fucomip
ljmp
xor
arpl
inc
push
call
xchg
out
loopne
sbb
je
and
iret
xchg
inc
jo
cmc
mov
mov
mov
sbb
ljmp
xchg
out
add
mov
subl
das
sub
pop
xchg
fnstenv
xchg
add
fisubs
leave
fldcw
orl
pusha
sbb
sbb
lret
dec
mov
loopne
clc
inc
mov
jo
cmpsb
sub
dec
aas
add
xor
aaa
lock
mov
jne
loop
pop
inc
fcmovu
dec
fdivr
enter
dec
fisttps
aas
repnz
bound
aad
pop
gs
dec
sub
cmp
insl
test
xlat
ljmp
shll
aaa
mov
add
out
inc
leave
push
jg
push
push
cmp
and
pop
or
sub
cld
xchg
xchg
imul
push
in
jno
and
fldt
pop
push
jne
mov
pop
xor
nop
push
push
int
xlat
and
mul
sbb
or
jbe
out
and
dec
aaa
push
xor
jo
or
icebp
fwait
mov
pop
add
outsl
mov
inc
lock
or
sub
or
cmpb
push
xchg
push
cmpb
cmp
nop
aam
mov
daa
mov
ljmp
scas
or
add
out
cmpb
or
addl
jg
inc
sbb
cli
jb
lcall
popf
sbb
push
aad
sarl
rcll
cmp
mov
hlt
inc
jg
or
arpl
inc
jp
outsb
icebp
outsl
aad
call
std
mov
out
bnd
mov
ja
pushl
jne
mov
in
push
loope
imul
xchg
rorb
leave
loop
push
fists
test
bound
and
mov
pusha
fbstp
push
fldt
push
xchg
mov
and
push
push
or
xor
popf
inc
dec
sbbb
rolb
push
adc
sbb
test
loopne
hlt
mov
add
orl
cmp
mov
call
cmp
or
and
and
mov
push
hlt
sub
lods
ror
cs
aaa
daa
jg
jmp
fildll
clc
cli
lahf
jno
sbb
adc
rcrl
repz
or
sbb
add
test
out
xor
xor
outsb
push
sbb
mov
adc
cmpsl
mov
jbe
loopne
jne
sar
in
sbb
outsb
cpuid
push
pop
jno
xor
pop
jle
outsb
pushf
jmp
std
add
jg
fdivrs
dec
jmp
in
pop
icebp
and
fnsave
xchg
jno
out
test
add
hlt
jg
and
cmp
inc
sub
call
pop
and
test
mov
dec
lods
sub
popa
andl
stos
icebp
lods
sub
notl
pop
xor
xorl
adc
jno
add
jb
imul
incb
scas
jl
mov
xchg
cmc
inc
mov
and
das
inc
fs
xor
repz
xchg
cmc
xchg
mov
lods
or
jmp
push
or
mov
push
insb
mov
fdivrs
repnz
and
sahf
pop
jge
mov
fwait
lcall
cld
ss
xor
lret
sub
pop
jl
test
push
mov
stc
or
loope
push
hlt
pushl
jg
movsb
in
movl
stos
movsl
js
xchg
in
pop
inc
inc
mov
add
inc
and
adc
imul
arpl
andl
out
lret
add
repnz
add
jns
insl
pop
inc
arpl
jl
inc
push
insb
pop
rorl
pop
dec
prefetcht2
jb
movsb
dec
aas
mov
mov
pop
xor
ficoml
mov
or
pop
mov
sbb
add
mov
sub
rclb
out
mov
and
or
cmpl
jne
mov
ljmp
ret
shl
pusha
cmp
mov
sti
and
std
push
mov
pop
pop
call
out
mov
ss
cmp
sub
adc
lods
xor
fildll
sbb
push
pop
mov
add
lods
lcall
lock
jle
jle
sub
jmp
nop
iret
jbe
sub
add
mov
cmc
or
jl
jns
std
jg
orb
push
adcl
xchg
jmp
mov
mov
ds
push
jae
cmpsl
cmp
mov
fldenv
or
jle
adc
add
pop
dec
dec
or
or
xorb
cmp
loopne
std
or
insl
rorl
and
mov
mov
pop
add
mov
jmp
or
lock
lcall
sub
lods
sbb
jo
inc
and
xchg
mov
addl
clc
test
mov
mov
nop
in
adc
inc
arpl
cs
pop
pop
int
shl
cmc
imul
adc
and
mov
mov
jno
out
pop
sbb
jb
sti
movsl
out
clc
inc
lods
shrb
insb
xchg
or
ljmp
pop
movsl
popa
stos
inc
ret
dec
icebp
ret
ss
daa
inc
pop
mov
jnp
insl
test
sahf
push
ss
test
fbstp
xor
sub
jnp
xchg
add
adc
pop
jl
ljmp
mov
mov
push
pop
loopne
mov
or
cmpsb
sarl
sti
fistpl
aad
mov
out
dec
xchg
add
mov
sbb
or
mov
cmp
jp
push
pop
mov
and
fcmovu
idivb
js
icebp
inc
fstl
or
sub
rorl
jb
mov
lods
mov
in
xchg
push
test
pushf
das
xchg
pop
push
fistl
data16
jnp
jp
pop
jnp
test
cwtl
out
add
inc
mov
pop
inc
xchg
xchg
mov
loopne
aam
or
or
pusha
mov
ljmp
aad
cmp
pusha
push
imul
clc
xor
ss
xchg
imul
adc
shlb
lock
adc
insl
adc
loopne
and
push
ret
cmp
mov
ss
movsb
mov
lds
jnp
xlat
decl
inc
lds
pusha
jbe
movsb
pushf
jne
stc
into
gs
clc
outsl
pusha
jae
or
or
add
jl
push
and
mov
mov
shll
pusha
inc
aas
xor
mov
in
outsl
leave
cmpb
ficompl
push
sti
inc
inc
in
repz
mov
rcl
push
jle
fs
add
lock
enter
sub
adc
sbb
push
aaa
mov
fs
xchg
xor
in
ret
adcl
lods
inc
clc
cwtl
pushf
addr16
jne
lret
sbb
pusha
int
mov
inc
jne
call
in
out
orb
pop
nop
mov
sahf
fcoms
pop
ja
and
mov
hlt
popa
push
stos
sub
jp
mov
add
out
cmp
mov
push
movsl
gs
lea
inc
adc
xchg
sub
lea
es
daa
mov
aaa
dec
sub
inc
sbb
xchg
dec
cmpps
xor
jnp
push
push
pusha
pusha
rolb
xor
movsl
mov
out
arpl
add
jmp
jmp
popa
or
jg
stos
inc
and
sub
xchg
sar
fildl
cmp
mov
cs
pop
mulb
or
lahf
cltd
or
orl
fwait
jecxz
loopne
jnp
test
mov
dec
mov
cmpsb
stos
push
arpl
incl
mov
jge
inc
cs
inc
subl
mov
int3
jno
cli
testb
inc
mov
push
add
pop
pop
mov
les
or
icebp
pop
xorl
xchg
inc
mov
xchg
push
pop
xchg
je
das
adc
or
jecxz
andb
loope
jo
shrl
nop
psrld
adc
out
cli
sub
jno
mov
xlat
pop
sbb
aaa
ficompl
aas
fdivr
cwtl
jmp
ja
jne
inc
cmp
or
cmc
sbb
cmp
cmpb
cmpsb
addb
xchg
and
or
aas
sub
xchg
fwait
mov
mov
xchg
mov
popa
fiadds
jg
lock
cmp
dec
dec
neg
adc
fists
adc
icebp
ljmp
xor
outsl
fucomip
aaa
pop
sub
mov
mov
push
aaa
push
rclb
mov
or
outsb
ds
jbe
imul
mov
inc
adc
ss
sahf
pop
xchg
std
and
inc
xor
adc
mov
push
insl
sbb
pop
outsl
fidivrl
mov
jb
mov
mov
mov
test
jge
mov
lds
mov
pop
sbb
xchg
imulb
mov
mov
mov
xlat
rclb
cli
sbb
push
cs
movsb
inc
js
and
pusha
jnp
aaa
xchg
ficomps
adc
push
shrl
cltd
cmpsb
cmc
mov
loop
das
icebp
dec
and
cmp
imul
in
sub
dec
stc
or
mov
or
jb
cli
pushf
and
adc
insl
les
sub
addr16
mov
enter
fisttps
cmp
and
mov
mov
sbb
fsubrs
clc
push
inc
rol
fisubl
outsb
mov
outsb
jae
pop
sti
int
mov
je
fs
pop
outsl
in
jg
mov
jae
test
sahf
adc
mov
inc
and
xchg
enter
cli
jg
scas
and
icebp
sti
jge
fsubrl
outsb
adc
xchg
scas
and
mov
xchg
cmp
inc
mov
and
mov
xchg
inc
cmpsb
test
pusha
mov
bound
pop
stc
inc
mov
dec
js
gs
xchg
add
pop
aad
or
pop
or
dec
pop
repz
inc
sub
sbb
mov
dec
mov
xchg
ficompl
or
inc
inc
add
aad
xchg
sbb
pop
imul
lods
jmp
jg
or
loopne
fdivrs
sti
xor
jg
mov
and
ds
lret
adc
scas
fdiv
andb
incb
xor
jbe
pop
mov
decl
adc
pop
stos
cmp
adc
adc
mov
jp
divb
dec
sbb
and
push
test
sbb
jle
int
jno
shlb
jno
mov
mov
add
outsb
pop
outsl
mov
add
xlat
jge
jb
push
pusha
sti
push
fbld
xor
add
enter
inc
cld
pop
inc
jae
cltd
jecxz
int3
aas
movsb
mov
ret
outsb
jnp
mov
aam
xchg
fwait
stos
sbb
incb
sbb
mov
fiadds
mov
or
sahf
dec
mov
aaa
in
repnz
popa
dec
xor
inc
xor
scas
and
imulw
push
int
mov
or
pop
ja
or
insl
mov
subb
arpl
inc
push
jmp
cwtl
daa
out
pop
scas
pop
pop
mov
orb
jno
push
jmp
ljmp
adc
mov
shrb
mov
les
pop
imulb
cmp
ret
pop
pop
jg
mov
add
mov
or
in
ss
lahf
sub
xchg
mov
lods
add
mov
in
inc
fs
jecxz
cmp
rolb
cmp
mov
out
inc
std
pop
and
nop
mov
or
stos
cwtl
lock
mov
xchg
dec
cwtl
lods
call
ror
xchg
repz
cmpsl
xchg
call
mov
jge
or
mov
xchg
pop
sbb
hlt
lods
jbe
scas
je
fildll
adcb
fstpt
js
cmp
imul
pop
xorb
add
fs
push
sub
add
inc
mov
imul
push
cltd
pop
test
mov
cwtl
cmp
push
inc
scas
push
mov
das
je
orb
or
cmp
imul
cltd
iret
adc
pop
sub
repz
sbb
outsl
clc
out
lea
std
push
inc
cmc
aas
push
pusha
add
pop
aam
cmpl
add
xchg
icebp
lods
push
mov
push
test
inc
in
push
sbb
test
lods
sbb
pop
in
and
pop
pusha
dec
mov
mov
mov
daa
push
xor
push
mov
or
das
sbb
lret
ja
push
mov
sbb
push
mov
pop
lods
fs
or
pusha
push
stos
jbe
rcrl
push
mov
cmp
repz
add
sub
cmp
outsl
clc
mov
incl
pop
aas
shr
jge
sub
cmp
in
add
cltd
loopne
add
xor
cs
mov
cmpb
adc
scas
lret
and
xorb
in
sbb
mov
adc
ss
xchg
gs
jae
out
fdivrp
adc
and
out
mov
decb
mov
js
and
pop
jo
mov
mov
or
add
cmp
je
jmp
jg
cmp
cmp
add
je
rcll
nop
pop
int3
inc
insb
mov
iret
pop
leave
mov
jecxz
imul
sbb
mov
fldt
ss
pop
mov
add
xorb
clc
ja
call
cmp
dec
or
pop
push
je
pop
jle
call
cmp
push
sub
in
or
rorb
xor
adc
dec
ja
pop
sbb
icebp
arpl
xchg
push
sbb
lret
daa
jnp
cmpsb
add
jno
shll
xchg
sub
imull
adc
xor
test
cltd
cmpsl
loope
xchg
lock
cwtl
pop
dec
add
out
push
cmp
xchg
sbb
insb
xor
push
sbb
mov
xor
or
in
mov
jecxz
mulb
jns
mov
inc
sub
movsl
jg
das
aam
xchg
mov
inc
cmp
test
lret
mov
shrb
gs
mov
das
pop
fildll
push
inc
push
fs
jmpw
mov
sub
add
xchg
sbb
inc
and
outsb
inc
aaa
mov
adc
xorb
mov
sub
xchg
and
inc
test
movsl
jae
xchg
loopne
in
lods
shlb
popf
lahf
inc
add
sub
mov
pop
mov
in
fwait
pop
ljmp
or
cmp
arpl
push
repnz
addb
mov
pop
call
cmp
sub
or
add
cs
add
scas
inc
sub
scas
jmp
mov
sub
sbbl
aad
in
inc
mov
or
mov
loop
mov
shll
push
mov
and
outsb
ret
jno
aaa
push
cmpsl
cmc
out
inc
cmp
push
adc
std
insl
inc
lods
int3
jae
enter
xchg
icebp
lods
insb
aaa
jno
lret
add
cwtl
mov
cli
lret
xchg
mov
mov
into
mov
jae
int3
xchg
xor
inc
outsl
dec
subl
pop
test
adc
fdivs
dec
push
lea
jmp
push
iret
imul
test
in
pop
sbb
rolb
loope
dec
cmc
sub
sahf
mov
mov
sub
mov
cmp
push
ja
mov
scas
lret
or
enter
stos
pushf
xchg
push
jg
test
addr16
lret
sbb
and
mov
test
std
push
jg
push
pop
pop
lock
insb
inc
sbb
or
xor
xor
fwait
mov
dec
iret
sti
test
sbbl
pop
and
popf
leave
xchg
sbb
hlt
push
mov
int
outsl
cmp
cmc
fildll
cmp
mov
lds
hlt
ret
dec
xor
scas
in
test
pop
xor
out
cmp
adc
ret
jg
mov
or
xchg
mov
mov
xor
out
pop
lea
push
xchg
in
xor
aad
int3
aad
mov
fisubs
shl
lret
push
jbe
and
je
popa
fcomps
lock
pop
repnz
nop
jne
adc
cbtw
test
add
mov
cs
rcll
jge
sbb
push
dec
mov
and
rorl
adc
lods
add
sbb
cmpsb
clc
neg
xchg
scas
movsl
push
aad
bound
push
roll
fldt
aas
lret
jp
add
imul
jg
lret
or
fists
lds
sbbl
sbb
mov
out
sbb
jecxz
or
pop
bsf
mov
jle
or
inc
xlat
mov
push
mov
leave
andl
mulb
push
sarl
lods
lret
in
add
stc
ss
push
sub
cld
sub
push
lods
and
popa
fcoml
ds
nop
push
andl
test
bound
lods
out
mov
xor
xor
or
pop
loop
clc
xchg
mov
out
mov
je
adc
aad
hlt
cmpsl
and
pop
mov
xlat
lods
clc
fildl
inc
dec
cmpsb
xchg
sti
test
rcl
dec
popa
push
bnd
cli
pop
and
mov
roll
dec
jecxz
adc
lods
rcll
mov
inc
faddl
je
xlat
sbb
inc
outsl
or
test
pop
mov
pop
jne
mov
mov
add
add
out
loopne
aad
clc
jb
pushl
sbb
jo
fldl
sbb
sub
popf
out
pop
xchg
mov
lods
or
push
jb
push
and
fdivrp
scas
mov
lds
or
outsl
add
inc
sub
fwait
and
push
jns
into
xchg
jo
cwtl
xchg
test
jne
and
fwait
push
mov
pop
sbb
mov
mov
inc
daa
lret
outsl
mov
sub
imul
movsl
add
cld
ret
outsb
or
insb
ficomps
or
clc
ja
push
mov
dec
std
sahf
or
call
adc
mov
sbb
pop
inc
pop
jne
aas
aad
pop
clc
filds
outsb
and
xor
jns
jg
das
mov
add
push
pop
jb
push
inc
inc
jg
pop
adc
test
and
push
out
push
repnz
fcompl
push
xchg
fiaddl
dec
xor
call
lock
cli
fildl
shll
jae
sbb
cli
dec
std
les
jp
pop
xor
mov
arpl
cmc
orb
test
movsb
or
jne
movl
push
mov
outsl
jmp
mov
loopne
push
daa
adc
mov
adc
stc
pop
in
mov
dec
mov
sub
adc
ljmp
pop
clc
idivl
add
adc
stos
pop
mov
ds
decl
xchg
scas
cmpsl
inc
push
xor
mov
push
and
sbb
fisttpll
adc
out
cli
and
pop
inc
das
adc
clc
mov
and
mov
jl
dec
adc
inc
test
nop
add
dec
scas
or
and
pop
or
pop
lods
in
xchg
test
adc
push
call
lcall
and
movsl
jo
call
add
sti
movsl
mov
idivb
std
cmp
push
xchg
dec
add
adc
stos
mov
mov
mov
cmpb
out
jbe
imulb
jo
mov
imul
sub
mov
fwait
mov
xor
mov
sbb
adc
lea
and
lods
mov
mov
sbb
cmp
and
addr16
mov
jecxz
mov
mov
in
or
lahf
xlat
mov
adcl
sub
std
lret
or
inc
xor
test
outsl
fdiv
ret
bts
out
dec
loope
add
add
inc
mov
push
scas
cmpsb
inc
xor
mov
iret
mov
das
adc
test
pop
jb
test
add
push
shl
push
xor
lds
xchg
jmp
mov
int3
dec
inc
pop
and
inc
cmpl
insl
or
inc
push
loope
sbb
pop
pop
mov
mov
pop
cli
mov
sbb
add
push
cmp
sbb
ljmp
jl
mov
jge
mov
jne
mov
mov
or
dec
or
push
movsb
sub
movsl
push
notl
mov
jmp
pop
pop
xor
add
jbe
sub
out
xor
pop
adc
pop
hlt
xorl
js
std
sar
in
xchg
xor
inc
cld
and
les
cli
adc
mov
scas
jle
lods
negb
mov
iret
nop
dec
push
loopne
xchg
sbb
or
aaa
mov
pop
push
jbe
movsl
cmp
cs
add
pop
jp
out
sbb
push
mov
dec
jmp
mov
stos
pop
inc
mov
rcrb
jne
cmp
bound
sub
adc
stos
jle
and
popl
repz
fists
pop
pop
or
sub
xchg
ja
or
pop
mov
pushf
xor
sbb
mov
imul
mov
dec
pusha
xchg
aad
sub
lcall
xor
in
mov
or
cltd
pushf
insl
add
aad
pop
clc
test
mov
push
xor
arpl
das
sub
fstl
movsl
sub
and
addb
inc
std
push
push
ljmp
inc
jge
gs
ss
jp
and
cmp
pop
popf
insb
push
jnp
data16
add
xor
sub
dec
out
stc
repnz
sub
das
ss
je
push
add
cli
incl
scas
mov
dec
cltd
or
adc
xor
fnstsw
inc
gs
movsl
sub
jnp
call
insb
shlb
push
rcr
adc
int
daa
clc
ffree
mov
decb
imul
sti
and
icebp
mov
test
dec
repnz
adc
in
xor
inc
push
mov
jbe
or
push
in
adc
inc
cmpsb
outsl
xor
stos
aad
xchg
dec
mov
sub
fbld
rorb
inc
repz
inc
adc
cmp
mov
push
xchg
fmuls
push
push
sbb
shr
pop
lods
shlb
cmp
popf
jb
int3
adc
xor
mull
cmc
addb
fs
lcall
push
jmp
rclb
into
sti
jg
inc
cwtl
xor
pop
mov
outsb
inc
insl
pop
orl
in
lods
fildll
test
push
ja
shrl
testb
outsb
mov
dec
pop
jmp
shl
clc
push
loop
add
stos
stos
gs
xchg
push
ljmp
add
dec
jle
inc
fcoms
lods
incl
test
sbb
and
and
scas
mov
dec
les
mov
add
mov
or
lock
out
outsb
adcb
xchg
test
sub
ss
movb
cmp
std
mov
clc
xlat
jg
mov
popf
jo
stc
in
clc
hlt
out
aad
lcall
push
imul
mov
loop
push
ds
xlat
xchg
add
pusha
movsl
mov
in
adc
dec
adc
add
icebp
sub
pop
inc
das
add
hlt
lret
das
sar
hlt
pop
into
je
sbb
scas
je
adc
fists
ds
inc
popa
je
mov
sbb
mov
mov
fbstp
dec
pushfw
les
inc
or
mov
mov
push
call
sub
xchg
and
inc
mov
ds
into
sbb
mov
pop
add
and
test
adc
sahf
out
mulb
mov
repnz
pop
les
mov
jle
aad
push
xlat
lea
jo
bound
add
pusha
loopne
loope
popf
or
das
iret
sahf
lret
jno
popf
xchg
lods
insb
pushf
icebp
xor
adc
fsubl
sbb
xchg
mov
pusha
pop
inc
scas
fbld
jo
lcall
aaa
sahf
cli
mov
repz
insb
les
das
in
pop
daa
outsb
cmp
in
dec
jnp
sbb
outsl
xchg
into
xchg
test
mov
inc
add
jne
jecxz
add
and
rorl
aad
inc
mov
mov
push
pcmpeqb
xchg
lahf
push
out
decb
in
movsl
mov
rcrl
subl
cmc
aad
sti
cmpb
inc
xchg
in
fiaddl
cmc
sbb
out
dec
in
std
sbb
cmp
adc
mov
fcmovne
add
test
sbb
jo
push
jle
gs
sub
outsl
sti
or
mov
push
jmp
push
repz
pusha
jo
aaa
mov
jle
lret
jbe
sbb
pop
testl
add
out
imul
mov
sti
mov
xor
lcall
outsl
inc
lea
ja
pop
lods
hlt
test
mov
dec
lcall
add
inc
or
mov
push
cli
lock
push
je
outsb
aam
ja
jo
arpl
jb
adc
inc
xchg
inc
sbb
fwait
dec
nop
inc
mov
inc
in
mov
pop
nop
inc
orb
aaa
jae
jmp
outsl
or
lods
push
or
inc
and
xchg
jle
orl
cmpsb
sbb
js
imul
xor
stos
mov
mov
mov
push
push
mov
sub
daa
sbb
cmp
push
pop
lock
nop
xor
ret
dec
xchg
adc
icebp
outsl
cld
fidivs
dec
adc
jno
mov
loope
xor
lds
mov
lret
movsl
and
jle
clc
or
push
in
inc
movsb
mov
push
aad
mov
jb
inc
xor
aaa
sub
in
ret
cli
mov
ret
pop
mov
xchg
mov
or
pop
leave
into
adc
pop
ljmp
sbb
jmp
xor
inc
ror
push
dec
mov
pop
and
inc
nop
test
jg
outsl
lods
shrb
push
cltd
cmp
mov
sbbl
orb
decl
adc
in
cmp
mov
test
cmp
shll
cmp
jg
dec
mov
push
jge
add
loope
shll
adc
add
cs
sub
lods
mov
sti
ljmp
xchg
xor
rcrl
call
mov
push
cs
add
test
xchg
mov
test
imul
loope
fistpl
dec
jg
mov
jbe
xlat
je
jmp
sub
sbb
dec
cmp
push
call
add
aas
cmpsb
stc
xor
popf
cwtl
cwtl
cmpsb
xor
in
push
ljmp
leave
pop
pusha
inc
dec
orl
dec
mov
int
cmp
dec
mov
xchg
adc
push
pop
or
sub
pop
add
outsl
cmp
dec
dec
or
sbb
adc
jne
push
aam
int
sbb
sbb
xorb
lods
fldt
pop
xchg
adc
push
subl
mov
icebp
sbb
mov
int3
or
pop
popf
repz
dec
shlb
pushl
mov
ds
push
jp
lods
cltd
cwtl
xchg
inc
lcall
outsl
sbb
in
push
int
jge
leave
push
xor
pop
rcll
in
xor
sub
jl
fiadds
movsl
out
cmp
repz
mov
incb
inc
repz
adc
jg
fstp
and
lahf
jmp
aam
push
call
and
les
xchg
cmp
inc
inc
in
adc
push
mov
pusha
add
sbb
mov
shlb
mov
in
sbb
cmpsl
inc
xchg
inc
test
popf
pop
out
incb
stos
xchg
in
lds
xchg
ljmp
ljmp
mov
mov
cld
inc
jl
std
outsb
mov
or
ljmp
test
test
lock
xor
outsl
mov
sbb
adcb
mov
icebp
incl
mov
popa
mov
mov
shll
adc
mov
and
testb
loop
idivb
mov
adcb
xchg
mov
push
addr16
inc
insb
clc
or
dec
test
sbb
icebp
inc
add
and
insb
fldl2e
out
pushf
cli
pop
push
in
fisubrs
fwait
pop
sbb
incb
xor
sub
stos
mov
add
jl
aas
sar
call
cmpl
das
add
cltd
mov
mov
cmpsb
adc
mov
pop
cwtl
push
mov
repnz
and
sub
inc
in
bndstx
push
inc
test
xchg
loopne
test
bound
outsb
push
add
pop
pop
push
pop
data16
pop
pop
test
aam
icebp
mov
lcall
sub
cli
xchg
sbb
ljmp
sub
pushl
push
out
lds
cmp
fs
test
add
lods
mov
les
dec
mov
mov
cmp
jg
jge
icebp
cwtl
daa
cmp
loopne
or
cwtl
pop
push
testl
cli
je
insl
stos
xor
inc
mov
rcrl
mov
push
imul
pop
mov
loopne
mov
nop
insl
aaa
mov
rcll
dec
bound
cltd
and
in
cs
jno
sbb
stos
xchg
jo
lcall
xor
push
or
jae
mov
out
push
lods
lahf
jp
test
jmp
inc
mull
pop
fldenv
dec
add
pop
xor
loop
or
cli
outsl
bound
adc
cmp
add
cmp
xchg
cli
aam
cld
lock
lea
shrb
dec
or
xor
push
popa
ja
dec
jl,pn
dec
mov
sbb
mov
mov
xchg
ss
adc
mov
or
scas
lods
pop
sbb
stos
mov
outsl
icebp
or
jp
mov
xchg
xchg
pop
ljmp
jp
daa
add
dec
dec
xor
xor
inc
xor
pop
subb
fsts
dec
mov
mov
xor
xor
repnz
rcr
scas
jb
enter
sbb
cmc
outsb
sbb
mov
xchg
push
inc
cmp
mov
lock
dec
fs
loopne
adc
push
pop
lcall
insb
mov
stos
xor
mov
shlb
stc
xchg
lods
je
repz
int3
aaa
add
sub
add
pushf
sub
shrb
popw
insb
ljmp
mov
and
or
add
cmpsl
adc
mov
movsl
or
push
movsl
pop
cmp
lcall
mov
adc
push
fiaddl
fucomip
pop
push
in
hlt
pop
in
mov
aad
mov
sbbb
fnstsw
sbb
and
out
pop
sti
outsb
call
dec
mov
je
pushl
jmp
inc
adc
cwtl
mov
sub
xchg
and
fsts
jecxz
outsb
and
test
xor
icebp
jns
enter
inc
test
cmpsb
stos
xchg
mov
mov
mov
jmp
jmp
mov
cmp
and
inc
in
nopl
jp
cmc
mov
mov
cmp
mov
xor
testb
fdiv
sub
sub
mov
dec
sbb
nop
pusha
imul
in
mov
addr16
lods
pop
jl
push
push
rclb
adc
repz
lods
xchg
int3
and
add
mov
pop
adc
aam
and
scas
cmp
rcr
or
cmp
mov
mov
andl
stc
add
filds
scas
mov
repnz
clc
and
outsl
aad
dec
mov
test
lret
je,pt
jg
das
fistpl
aas
lea
outsl
test
cwtl
xor
cmp
lock
sub
add
inc
xchg
pop
in
inc
dec
dec
jo
xchg
jno
jno
jle
push
inc
orb
iret
inc
push
mov
outsl
pop
test
stos
jb
mov
pop
adc
lock
nop
sarl
mov
lea
inc
pop
addl
xor
dec
push
clc
cmp
loopne
add
in
jae
std
and
hlt
xor
sub
aaa
mov
push
mov
daa
in
pop
inc
fisubl
mov
movb
test
jbe
xchg
sbb
cmp
rcrb
sbb
shrb
adc
lods
push
pop
fdivs
mov
xchg
movsl
nop
adc
in
sbb
add
stc
mov
xchg
mov
or
adc
ljmp
mov
xchg
outsb
out
inc
aaa
xchg
les
sbb
cmpsb
es
ljmp
push
in
add
and
pop
jg
popf
or
cmpsl
mov
jle
stc
fbld
push
pop
xchg
cmp
pop
lret
jp
add
sbb
push
pop
and
mov
cmp
mov
adc
add
enter
dec
bound
imul
cld
add
xchg
push
mov
testb
mov
out
ficoml
mov
pop
inc
setns
pop
das
mov
pop
repnz
inc
or
sub
inc
ljmp
add
in
sahf
or
mov
sbb
lret
outsl
insb
push
xchg
dec
push
mov
outsl
fisttps
cmp
adc
push
push
adc
das
insl
sub
mov
jg
inc
adc
popf
aam
in
sub
nop
xchg
cmp
xor
or
pop
inc
out
icebp
icebp
dec
mov
bound
scas
scas
les
ret
shrl
push
ljmp
std
and
fs
andb
mov
mov
or
adc
push
cmp
mov
mov
inc
push
mov
sti
lcall
shrl
inc
mov
loope
or
aaa
inc
addb
icebp
incl
xchg
stos
pop
lret
add
cmpsl
or
js
inc
and
aaa
repnz
cmpsl
inc
jecxz
and
or
jl
push
cmpb
push
jmp
pusha
lea
and
int3
bound
xchg
loop
sub
dec
decl
adcb
and
insl
cmpl
cmp
and
mov
fisubrs
push
imul
fcompl
test
dec
cltd
and
xor
mov
andl
dec
pop
sbb
xchg
push
or
jl
dec
adc
rol
inc
dec
filds
sub
inc
rorb
sbb
pop
ja
lahf
stos
insl
out
mov
shrb
icebp
das
std
jmp
and
jae
inc
or
test
sbb
stos
jl
cmp
xchg
jno
jecxz
test
dec
sub
cwtl
je
in
hlt
adc
jg
bound
ds
sub
fildl
push
xor
and
push
xchg
add
inc
jmp
or
xor
mov
pop
sarl
repnz
leave
scas
loopne
in
add
lea
cmp
mov
lock
push
inc
jnp
xchg
mov
es
scas
mov
xor
or
add
sbb
jo
and
cmp
outsl
cld
in
cli
out
jns
fwait
cwtl
cmp
dec
dec
mov
push
mov
jb
mov
movsb
fs
cwtl
cmpsb
fcom
ljmp
cmp
outsb
in
call
fnstenv
add
hlt
sarb
call
push
push
add
cld
push
cmp
movsb
dec
cmc
movsb
addb
xor
in
cld
das
std
loopne
adc
jb
dec
adc
sbb
insl
xchg
lcall
inc
dec
jns
rol
ljmp
push
adc
pop
in
push
pop
jge
mov
mov
cmp
movsl
sbb
add
jmp
ficoml
das
fcompl
roll
sahf
in
out
dec
popa
int
sub
fidivs
sbb
jb
lret
aad
sub
aaa
fadds
sbb
rcl
push
cwtl
out
and
mov
stos
test
inc
cmp
pop
sbb
mov
jg
nop
inc
daa
fnstcw
sub
add
test
jae
mov
mov
sub
incb
pop
push
xchg
ljmp
xor
xor
xchg
adc
and
out
fwait
insl
decl
mov
dec
int
test
movsb
inc
call
icebp
test
cmp
out
jo,pn
lds
sub
test
jae
fwait
or
or
sahf
push
lock
or
sbb
cmc
pop
aas
inc
mov
in
push
jo
addb
mov
cmp
pop
push
out
pop
mov
test
out
pop
add
mov
xadd
mov
rcl
arpl
gs
incl
mov
int3
mov
enter
lcall
lods
outsl
iret
xor
sbb
hlt
loope
fwait
sarb
and
test
movsl
outsb
mov
fs
jo
sti
ljmp
push
push
adc
cmc
cmpsb
jg
dec
popf
shll
orb
mov
ja
push
dec
pop
rorb
icebp
fcmovnu
je
xchg
mov
xor
je
mov
push
mov
jg,pt
push
push
push
lret
int3
push
jns
pop
call
inc
insl
popa
sub
pop
jecxz
pop
xor
push
mov
out
mov
adc
or
mov
xchg
dec
inc
cmp
rcrb
imul
das
in
jne
clc
in
incl
mov
fsub
loop
pop
outsb
sub
fcmovnbe
mov
adc
push
inc
jecxz
js
test
push
sbb
pop
pop
subb
dec
xchg
das
lods
div
mov
sub
push
mov
xchg
popl
sub
add
movsl
insl
sarb
cs
out
loop
pop
aam
into
dec
mov
and
stos
subb
push
and
xor
xor
adc
shll
xchg
fisttpl
arpl
xchg
xchg
test
xlat
jmp
pop
push
ljmp
scas
push
xchg
movsb
fisttpll
dec
aas
mov
adc
pop
jns
lcall
ret
sub
push
movsb
loope
sbb
pop
mov
stc
push
shlb
hlt
mov
test
mov
in
call
cmpb
loope
int
fisttps
test
xchg
icebp
out
pusha
addr16
lock
xchg
and
lock
lds
push
or
in
add
sub
and
cmp
jne
das
mov
or
hlt
popa
sti
and
outsb
ret
pop
insb
int
adc
inc
std
or
je
imul
mov
lret
iret
cmp
add
fcomi
pop
jmp
or
andl
sub
divb
push
inc
or
popa
std
mov
push
jno
mov
rorb
xor
xor
push
adc
inc
or
mov
mov
mov
adc
cmc
xor
sar
mov
seta
mov
jo
push
dec
jmp
xchg
daa
ljmp
sub
xchg
jecxz
in
je
sbb
call
cld
mov
sub
add
cltd
call
js
xchg
fld
clc
insl
jmp
fidivl
mov
inc
sub
jp
aam
sub
sub
cmp
xor
dec
xchg
xlat
mov
and
dec
rolb
movl
movsl
das
popa
shlb
ja
js
rcr
xlat
sub
add
mov
sub
and
mov
sahf
imul
in
inc
or
sub
adc
jg
ret
and
add
inc
aam
aam
decb
stc
stc
add
mov
or
ret
mov
push
js
xlat
out
xor
punpcklwd
cld
in
lea
lret
inc
shlb
call
or
roll
test
xor
add
lret
incl
out
add
mov
jl
clc
bound
pusha
inc
xchg
cli
cmpsb
dec
hlt
decl
mov
cwtl
arpl
pop
shl
scas
repz
xlat
les
pop
mulb
dec
jle
cmp
push
mov
pop
mov
fdivs
inc
lcall
in
mov
xor
sub
cld
sbb
push
mov
sbbl
clc
xchg
loope
sbb
popa
rorl
push
call
gs
in
in
in
mov
inc
cmpl
inc
in
sbb
fadds
xchg
outsb
shl
ljmp
stc
xor
xchg
test
in
sbb
mov
pop
aad
aas
fsubr
cli
mov
pusha
gs
loop
adc
outsl
je
fists
push
inc
in
call
sbb
push
xor
test
pop
inc
mov
das
xchg
int3
out
fstpt
pop
jae
xor
sarl
in
loopne
mov
int3
mov
cs
sub
adc
clc
jno
ret
inc
test
pop
lret
mov
gs
push
es
push
or
popa
mov
adc
imul
and
and
lods
adc
adcb
jb
icebp
xchg
shlb
pop
jns
add
mov
mov
add
js
push
loopne
addb
ja
stos
mov
sbb
notl
out
jl
and
mov
inc
sbbb
cmp
pop
mov
cmp
jns
sub
or
jns
xlat
push
es
jnp
sti
inc
mov
or
icebp
popa
ret
inc
sub
enter
cmp
je
inc
mov
popf
std
ja
lock
sub
fisubrl
push
lds
push
adcl
jg
add
adc
sub
inc
std
incl
imul
mov
xchg
push
repz
cmpsb
and
daa
inc
xor
cli
outsb
lods
mov
xchg
inc
jo
mov
pop
and
repz
mov
inc
sbbl
xlat
inc
cld
mov
addr16
or
mov
lods
movsl
cmp
mov
js
imul
std
mov
int3
jmp
dec
imull
insb
in
pusha
cmpsl
pop
jno
into
xorb
or
dec
push
loope
clc
and
and
push
xchg
and
arpl
jbe
push
fildll
adc
inc
icebp
mov
mov
rcrb
in
cli
inc
jl
xor
shlb
push
mov
xchg
mov
dec
dec
xor
pop
jp
cmp
mov
inc
xor
clc
outsl
fdivr
loope
mov
adc
fwait
das
xchg
int
or
and
loopne
stos
aam
mov
inc
mov
test
out
cs
push
sbb
mov
call
ret
xchg
adc
or
imul
stos
mov
notl
add
push
pop
xor
mov
adc
jo
movsb
rep
jg
cwtl
inc
out
and
add
leave
xor
test
push
sbb
xor
ljmp
jo
ds
jg
mov
stc
mov
mov
lahf
jb
mov
and
pushl
add
adc
pop
mov
xchg
clc
dec
push
adc
test
std
mov
test
inc
aas
or
lods
pop
js
push
add
nop
adcl
cli
inc
roll
fwait
push
dec
xor
sub
inc
jecxz
int
jns
in
jnp
mov
lcall
scas
popa
fstl
loopne
sub
fwait
clc
mov
cli
lods
push
or
repz
add
fcmovnu
test
out
mov
or
daa
insl
jae
and
add
out
cmp
mov
outsl
lea
test
sahf
or
and
jl
js
pop
stos
sbb
dec
aam
decl
in
inc
ret
pop
movsb
fdivl
loope
outsb
fildl
popa
or
mov
and
ljmp
inc
pop
inc
inc
inc
pop
test
mov
cs
fidivrs
pop
and
add
or
fidivrl
add
adc
aam
lock
sbb
pop
in
inc
pop
clc
test
arpl
lods
dec
xor
loope
inc
or
push
lock
loope
enter
bound
js
icebp
test
in
fiadds
icebp
fbstp
mov
insb
inc
fidivrl
jge
rol
push
sbb
sub
mov
dec
mov
dec
mov
mov
xor
ljmp
frstor
xchg
cltd
xchg
jb
cmpl
sub
inc
sar
into
in
sar
xchg
or
mov
faddl
push
pusha
sub
inc
test
xor
and
fiadds
xchg
inc
or
inc
push
add
inc
lods
pop
aam
and
inc
rcl
les
rolb
clc
jmp
sub
mov
in
aam
out
inc
adc
int3
addr16
push
clc
dec
shr
pop
sbb
mov
lock
fistpl
outsl
cmp
popf
in
mov
stos
xchg
clc
sbb
out
adc
dec
mov
sarl
rcr
and
call
clc
jl
sbb
outsl
xchg
inc
jge
shll
jle
sub
inc
push
lods
mov
fidivrs
push
sub
lret
lret
adc
lcall
bound
hlt
push
xchg
lods
das
mov
mov
jl
push
lret
sbb
pop
dec
insb
or
rcr
pop
jp
scas
jg
outsl
icebp
adc
je
dec
xchg
lret
bound
push
mov
aaa
adc
add
shrb
in
test
es
mov
mov
pop
mov
add
das
cltd
stos
enter
decl
mov
sbb
subl
loop
gs
mov
test
jmp
in
lea
jmp
xchg
xor
loope
popa
icebp
movsl
stc
cltd
sub
cwtl
push
sti
add
dec
xor
adc
mov
ljmp
add
pop
pop
fldenv
mov
aaa
xlat
sbb
incl
push
inc
dec
fidivl
sub
addr16
lods
movsb
cmp
push
jge
adc
icebp
push
test
push
cmp
outsl
mov
add
lret
push
xor
add
addr16
stc
addl
adc
or
test
pop
bound
lods
decl
or
pusha
icebp
dec
adc
dec
pop
inc
push
jns
mov
dec
pushf
fs
insl
cwtl
and
push
add
add
inc
cmc
mov
fcomip
ljmp
outsl
xchg
pushl
sbb
lret
nop
shll
arpl
cld
push
imull
xchg
add
xchg
lea
mov
mov
sbb
loopne
mov
cwtl
mov
decl
inc
push
subb
ficompl
js
and
push
inc
push
movsl
add
idiv
addl
mov
push
test
addr16
or
hlt
adc
fs
insb
xchg
repz
jne
cli
and
rclb
and
icebp
ret
mov
xor
jecxz
mov
inc
xor
pop
mov
xchg
es
sbb
js
inc
adc
lock
clc
pop
pop
add
or
pushf
lock
sub
jg
in
inc
add
aad
sbb
sub
cmp
out
sbb
add
dec
ror
cmc
add
xchg
outsb
adc
and
mov
sahf
fildl
adc
push
icebp
ret
adc
sbb
or
xchg
add
add
mov
ljmp
or
or
pop
sar
push
ret
sbb
mov
mov
pop
call
inc
or
clc
mov
in
fwait
incb
jmp
aaa
cmc
sbb
mov
out
int
cmp
push
outsl
ss
adc
or
mov
das
pop
sub
call
jge
sahf
cmpsb
mov
jne
outsb
push
in
xor
pushf
xchg
sbb
arpl
repz
in
xchg
xchg
out
bound
sbb
imul
mov
jg
movsb
in
das
jmp
inc
dec
ret
mov
jecxz
pop
push
in
jle
push
add
mov
rolb
loop
cld
fwait
sub
dec
sbb
dec
push
mov
cltd
incb
ja
testb
adc
mov
push
sub
cwtl
inc
mov
cld
test
scas
mov
ret
orl
dec
cli
inc
je
adc
pop
notl
and
or
dec
mov
or
imull
jg
mov
test
push
pop
insl
inc
add
push
shll
sub
loopne
insl
pop
add
insb
fwait
jp
scas
add
scas
andb
add
daa
ds
sbb
inc
call
or
or
andl
lds
xchg
inc
cmc
fistpll
mov
ret
lret
adc
inc
ffree
fdivrl
mov
lds
adc
cli
sbb
ljmp
adcb
aam
sub
pop
adc
and
jae
stos
mov
and
fs
xchg
add
rol
or
or
cmp
enter
cmp
aaa
shll
cmp
and
pushl
out
sub
jecxz
inc
stos
pop
negb
push
fwait
je
pop
mov
in
jno
ljmp
xchg
into
movsb
dec
mov
mov
jb
inc
jne
pop
js
inc
xor
xor
test
pop
aaa
and
lock
fmul
dec
pop
pop
xlat
adc
fisubrs
loop
mov
add
inc
rcrb
hlt
push
pop
add
aas
dec
xchg
push
loope
jne
sbb
sub
sbb
stos
cs
aaa
lretw
test
arpl
dec
push
cmp
cmp
sub
push
fimuls
cmp
push
and
sub
or
lea
lret
ret
pop
sbb
mov
lods
aad
mov
jae
lcall
pop
xor
push
nop
je
xchg
daa
lods
jno
xchg
cmp
adc
arpl
or
call
insl
std
and
inc
inc
imul
aad
lret
cwtl
inc
pop
dec
testl
test
mov
aas
sub
scas
in
xchg
fidivl
mov
aaa
xchg
xchg
mov
dec
mov
mov
insl
das
lret
rolb
lods
fidivrs
mov
or
loop
jo
pop
inc
in
bound
clc
in
or
cmp
xorb
jmp
insl
cmc
mov
push
in
or
jbe
imul
xchg
pop
adc
imul
lds
es
vmovhps
das
mov
inc
stc
cmp
inc
or
xor
clc
outsl
mov
and
shr
sbb
mov
cmp
add
iret
mov
jmp
push
mov
xchg
pop
mov
inc
sbb
stos
mov
mov
mov
dec
stos
push
pop
inc
fbstp
lret
or
fistpll
frstor
js
data16
inc
in
xor
ljmp
mov
and
sidtl
or
in
jge
mov
mov
cs
mov
push
dec
mov
out
add
aas
mov
inc
jmp
mov
push
mov
out
stc
inc
mov
rclb
in
outsl
jge
jb
aas
andnps
std
sbb
adc
mov
test
sub
inc
sub
ja
jle
mov
push
jne
sub
add
mov
xchg
jno
daa
sbb
cmpb
or
fldcw
cmc
lcall
es
lret
push
cwtl
xor
jbe
sbb
test
movb
aaa
xchg
mov
add
or
sub
lea
cmpl
mov
push
inc
cmp
xchg
or
or
jnp
leave
fsubrs
outsb
filds
bound
inc
sarl
mov
dec
adc
aaa
outsl
mov
icebp
ljmp
ret
lcall
push
xchg
je
movsl
aaa
jle
lret
aas
cmp
loopne
sarl
add
enter
addl
rolb
xor
pop
push
jecxz
enter
fidivl
cld
dec
call
mov
push
mov
shll
test
pop
pop
outsl
sbb
cld
rorl
inc
ret
pushl
adc
rorl
les
loopne
inc
dec
cmp
and
pop
xchg
and
sar
jnp
orb
adc
and
jb
sbb
sub
imul
xlat
idivb
loope
xchg
lret
popa
xlat
aad
jne
das
test
addb
mov
inc
sub
add
in
mov
std
lcall
enter
movsl
mov
and
ret
cmovge
mov
in
aad
fchs
movlps
movsl
shrb
xchg
sub
jne
and
rorb
push
test
pop
push
cld
xchg
push
mov
das
outsb
cmc
sahf
out
jle
and
cmc
imul
push
aad
xor
mov
adc
mov
iret
mov
cmc
nop
daa
test
imul
mov
mov
xlat
js
or
push
mov
test
repnz
in
vpmuludq
xchg
je
dec
js
outsl
outsl
std
mov
cmp
pop
lock
xchg
sarb
stos
shlb
push
test
adc
jecxz
ja
or
or
dec
lret
push
push
stos
mov
stos
jno
sbb
cmpsb
inc
popf
ds
lea
sub
push
aaa
add
lods
incb
and
and
xor
mov
adc
pop
sub
or
or
insb
cld
in
jnp
mov
lret
push
test
inc
hlt
lods
cli
filds
and
or
or
sbb
test
sub
lock
pop
and
xchg
fwait
jb
or
pop
decl
mov
push
push
dec
jecxz
lret
mov
or
notb
push
lock
loopne
mov
mov
pop
fbld
mov
mov
call
jbe
inc
cltd
pop
mov
repnz
test
mov
insb
add
aaa
hlt
test
mov
lea
cmp
add
leave
bound
xchg
and
cmp
cmp
decl
test
pop
mov
call
fucomip
fwait
mov
incb
or
bound
pop
mov
imul
fs
xchg
push
cld
push
loop
pusha
test
cli
xorl
fists
or
shrl
adc
or
adc
jle
test
pop
shrb
in
push
inc
ds
int3
jns
xchg
sub
jg
mov
out
pop
cmpsb
fidivs
mov
ret
cmpb
or
lahf
pop
nop
adc
sbb
stc
lcall
jae
rcr
out
add
xor
addr16
repz
xchg
gs
jmp
out
and
cmp
mov
mov
push
enter
outsb
ror
shlb
and
outsl
jno
ljmp
jb
inc
and
dec
fidivs
decl
sbb
data16
mov
outsl
ja
mov
clc
pop
cmp
ss
out
xchg
shll
inc
mov
pop
popf
cld
cwtl
fldt
xor
mov
pop
mov
ljmp
sub
and
xchg
sbb
dec
das
inc
pop
sbb
mov
adc
inc
test
xchg
aam
mov
sbb
lods
lods
mov
insb
dec
xlat
call
fists
pop
mov
sahf
mov
or
and
adc
js
lods
push
and
jecxz
or
push
hlt
aad
fistl
cmpsb
insl
add
adc
call
aad
mov
scas
imul
inc
and
dec
loop
in
cmp
xchg
ret
and
adc
sti
sub
comiss
imul
dec
fildll
add
push
sub
andb
hlt
lcall
in
stos
iret
cmp
aaa
ds
push
mov
sub
lock
and
pop
push
cld
inc
adc
pop
inc
xchg
lar
adc
mov
adc
stos
xchg
lods
int3
shr
imul
cmp
pushf
mov
mov
mov
cld
or
in
mov
xlat
jnp
adc
nop
pop
test
pop
les
inc
and
push
jecxz
mov
sar
in
or
adc
daa
lea
jbe
lock
mov
dec
and
inc
cmp
inc
fs
push
push
pusha
data16
sub
filds
mov
jne
xor
wbinvd
cli
and
popf
or
fstpt
xor
inc
and
mov
scas
pusha
loop
in
rcrb
xlat
push
add
iret
std
sbb
cmp
xchg
jmp
mov
xor
dec
inc
sub
lret
sbb
loop
and
dec
stos
mov
mov
xor
cwtl
popf
or
aas
mov
mov
mov
fwait
mov
rolb
lods
xchg
hlt
test
mov
add
stos
sub
push
outsb
cmpsb
mov
dec
in
or
imul
add
cwtl
mov
inc
ficompl
or
cs
lret
je
ljmp
xchg
and
mov
lock
std
js
dec
dec
movsl
dec
aas
push
pop
aad
jb
or
fisubrs
mov
leave
mov
mov
ljmp
dec
call
jo
lret
push
cmpb
mov
mov
shrl
pusha
mov
inc
add
cmp
push
movsb
loope
fadds
adc
sbb
pusha
mov
inc
cmc
mov
jge
sarb
add
das
adc
fcompl
sahf
xchg
mov
jbe
les
jl
dec
aam
push
mov
push
inc
jp
sbb
mov
push
pop
and
aaa
mov
inc
daa
add
jno
or
lock
push
xchg
neg
mov
fcmovne
subb
loop
mov
adc
mov
mov
in
movsl
pop
mov
jae
lea
fbstp
push
movsb
inc
cld
adc
cs
pusha
xor
iret
sti
leave
cmp
inc
lds
push
dec
sbb
xchg
jle
scas
std
fsubl
mov
shll
jg
aad
pop
or
pop
lcall
inc
or
mov
sbbl
sub
loopne
stos
add
das
add
cmpsl
aam
add
or
inc
hlt
and
mov
sbb
int
mov
test
das
sub
movsb
mov
mov
and
loope
shll
inc
data16
mov
pop
cltd
jmp
mov
xchg
cmp
gs
cwtl
aas
mov
jbe
cmp
mov
dec
add
push
add
aas
test
sti
lea
or
jo
pop
mov
ljmp
enter
mov
cmp
in
or
xor
inc
sub
gs
push
mov
and
mov
inc
mov
add
xor
inc
adc
mov
xchg
les
or
sub
push
pop
clc
outsl
aas
xlat
cmpl
add
adc
inc
decl
outsl
add
ss
sbb
leave
jmp
cli
push
sti
xor
cmpsl
movb
stos
or
xor
push
je
inc
jo
or
xorb
mov
jge
movsl
pushf
sub
scas
add
adc
hlt
ljmp
inc
xor
inc
bound
mov
mov
test
xchg
dec
outsb
lock
add
lods
sbb
std
jle
icebp
data16
fdivs
cmp
outsl
add
mov
imul
hlt
es
dec
xchg
xor
sub
cmp
xor
loope
mov
or
sub
jae
in
jg
and
cs
lret
xor
jno
das
scas
ret
mov
cwtl
cld
push
loopne
xor
insl
les
lret
out
or
int3
mov
xchg
fisttpll
push
jae
stc
jle
xchg
enter
stos
cs
idivb
mov
js
push
and
push
adcb
call
xor
and
inc
das
fucom
or
inc
fcoms
mov
clc
scas
xor
inc
xchg
dec
popa
test
cwtl
clc
push
xchg
mov
mov
mov
jmp
jp
adc
xor
cmpb
in
test
add
rcr
mov
or
stos
adc
call
decb
loopne
call
xchg
pop
gs
jg
jmp
sbb
adc
inc
xchg
ds
cmp
cmp
in
cmp
incl
push
inc
mov
inc
stc
std
dec
xchg
icebp
jg
imul
jns
jle
sbb
push
ret
clc
adc
or
mov
cs
push
les
in
in
lods
ja
add
sbb
ss
shr
and
xorl
sbb
jp
std
adc
inc
inc
cli
xor
movsl
dec
mov
xchg
push
fcmovne
adc
mov
enter
push
pop
fsubrs
push
adc
movsl
or
test
pop
addr16
pop
fmulp
mov
sbb
pop
js
jb
sbb
add
aas
pusha
leave
fs
cmpsl
clc
mov
ljmp
xchg
jmp
fldl
ss
inc
or
cmp
out
jl
mov
inc
and
and
or
lcall
jp
mov
loope
sbb
jge
fisubl
xor
and
arpl
sub
ljmp
pop
push
outsb
sub
xor
arpl
jno
dec
mov
je
cmp
test
push
push
iret
sbb
pop
movsl
or
jns
ss
sub
cmp
loopne
push
jae
pop
mov
pop
scas
sarl
adcl
fnsave
addr16
mov
cmp
or
jecxz
outsb
pop
or
jle
shll
and
push
bound
rol
push
and
cmpsb
sahf
mov
movsb
and
cmp
loope
fdivs
mov
out
shr
push
pop
mov
inc
movb
push
mov
repz
je
sub
lret
xchg
mov
data16
jno
adc
xchg
xor
aad
sbb
enter
dec
or
pop
push
lock
not
mov
imul
push
dec
scas
mov
scas
add
dec
cmpsl
adc
enter
jmp
addl
push
or
test
jecxz
add
out
mov
add
ret
ret
aaa
in
push
movsb
mov
icebp
test
mov
push
or
dec
ss
cmp
das
mov
inc
aam
push
out
or
outsl
sbb
push
jbe
and
daa
popa
dec
sub
sbb
leave
xchg
in
and
data16
inc
mov
inc
sub
loop
adc
js
jmp
and
mov
mov
arpl
jns
jnp
cmpsl
in
adcl
stos
xchg
std
sbb
or
xchg
lret
mov
cwtl
push
xlat
and
stc
nop
mov
fsubrl
cmp
fisubrl
push
rcrb
mov
jne
mov
sub
fnstcw
jp
sbb
in
xor
mov
xchg
jp
test
int3
insl
mov
notl
dec
in
cs
test
aaa
ds
repz
fisubrl
in
jp
lahf
rol
add
aaa
lcall
fsub
fs
leave
sub
xor
sbb
test
pop
cmp
or
pop
cmp
ja
fdivl
xor
pusha
jecxz
or
mov
push
movsl
iret
xchg
in
clc
inc
fucomip
inc
arpl
loope
jae
jbe
mov
sbb
in
pop
out
xchg
cltd
pop
dec
hlt
mov
jp
shrb
push
bound
sbb
inc
pusha
cli
jno
rcrl
test
dec
lods
xor
ret
jge
jae
mov
mov
daa
test
xlat
outsb
notl
fiadds
sbbb
mov
fdivr
mov
enter
fstl
jo
pop
jmp
popa
mov
leave
insl
mov
aam
inc
adc
dec
call
imull
fnsave
outsb
ds
add
sbb
dec
fldl
cld
mov
jns
stos
jnp
cmp
fisubs
ljmp
stc
and
sets
jle
mov
mov
pop
jns
loopne
xor
cmp
jp
inc
shlb
xchg
cli
shlb
mov
push
into
xor
dec
mov
imul
pop
and
lods
out
das
pop
mov
out
testl
and
fwait
shll
hlt
add
lea
push
negl
or
or
sbb
nop
insl
imul
jne
pop
jb
int3
add
fstpt
es
hlt
mov
dec
iret
sbb
in
fs
adc
ljmp
mov
into
sti
mov
xlat
xor
cmc
pop
xchg
adc
ja
testl
sarb
bswap
adc
jp
dec
rcrl
lcall
call
cmpsl
mov
cs
icebp
sbb
outsl
shlb
push
dec
inc
aad
shll
fnsave
mov
sbb
shl
add
inc
push
rclb
mov
dec
push
pop
sub
cwtl
loope
scas
enter
inc
dec
mov
shll
xor
adc
push
mov
jo
sub
bound
mov
call
movsb
push
pop
out
popf
sti
adcl
sub
sarb
rcrb
push
xor
cwtl
lahf
loopne
cld
push
push
cmc
stos
sbb
xor
xchg
addb
and
fstpt
je
in
add
into
mov
jecxz
or
xchg
mov
stos
jno
cmp
loopne
fildll
add
inc
push
xchg
inc
repz
loope
or
push
jbe
push
sub
outsb
push
push
push
hlt
pop
adc
push
outsb
jne
lods
xchg
mov
jbe
mov
test
pop
add
cmc
ja
inc
ret
mov
lahf
adc
dec
mov
mov
xor
loopne
mov
shlb
hlt
sarl
adc
pusha
iret
lods
mov
insl
inc
xchg
sbb
fdivrs
aas
scas
mov
icebp
jo
filds
inc
out
adc
fdivs
mov
cmc
and
or
addl
sti
cmp
clc
jnp
loopne
or
adc
mov
scas
pop
repz
xchg
mov
pushf
or
jmp
sub
imul
and
sbb
int
stos
push
mov
and
pop
pusha
lret
ljmp
mov
sbb
insb
cli
ficompl
push
adc
jns
mov
dec
cmpsl
daa
lods
xchg
scas
xchg
jp
test
add
xor
and
lock
jecxz
iret
adc
jno
out
push
les
inc
pop
pop
shll
and
cmp
les
xchg
push
jo
fidivrl
and
scas
clc
push
mov
fmulp
xchg
sbbb
cmp
mov
push
add
xor
flds
mov
fistl
add
xor
pop
aam
sub
shlb
repnz
add
adc
test
fnstcw
popa
cwtl
xlat
inc
arpl
push
cltd
jo
dec
adc
fidivl
clc
jecxz
lret
pop
call
out
or
fsubs
daa
push
rorl
stos
jae
inc
and
jl
cmp
dec
mov
cltd
scas
jb
rorl
enter
mov
aaa
mov
fildll
es
test
loopne
add
xchg
mov
xor
nop
adc
xchg
push
dec
xchg
push
hlt
cwtl
or
lods
xor
jns
sbb
mov
and
jo
mov
addr16
mov
inc
enter
sti
rcl
mov
xchg
xor
andb
adc
xchg
xlat
pop
popa
ja
in
and
lds
jne
outsl
out
adc
fnstenv
fwait
jo
inc
rcll
xor
loop
mov
push
lret
xlat
pop
mov
outsb
xchg
push
loopne
out
pop
mov
pop
lea
mov
sahf
dec
sbb
fisubrl
sub
sbb
xor
nop
aaa
dec
std
mov
lcall
push
das
or
cld
jno
std
pop
aas
leave
sub
or
inc
xchg
mov
fadds
add
aaa
fsubrl
dec
add
in
int
xchg
mov
add
jge
sbb
jle
push
mov
lret
add
out
decl
psrlq
cmc
es
mov
dec
loope
sbb
cmp
roll
lret
cwtl
cld
mov
call
sahf
xchg
adc
push
pushf
cmpl
sbb
imul
fidivrl
and
inc
das
cld
fadds
push
and
loope
or
mov
mov
clc
add
ja
loopne
imulb
xchg
cmc
xchg
fcomi
fs
mov
and
pushf
and
sbb
jecxz
in
push
cmpsb
inc
mov
mov
add
aad
lock
js
call
iret
mov
insl
lods
call
pop
call
sub
mov
scas
mov
push
jl
out
movsl
pop
add
cmp
mov
les
sbb
or
fcomp
push
imul
cwtl
adc
and
or
andb
dec
popf
lods
fbld
in
test
jbe
and
cmpsb
sahf
cmp
in
fisttpll
xchg
test
fstp
adc
sti
rcrb
mov
fnstcw
cmp
push
push
mov
dec
sbb
mov
pop
dec
mov
loop
fsubrl
cltd
shll
mov
push
scas
rcrb
lock
or
push
mov
cmp
mov
pop
and
lea
je
lcall
lret
cmp
sub
jl
jb
xchg
xchg
aas
jl
shll
fldenv
test
out
mov
pop
pop
jge
and
add
push
lods
jo
rcl
xchg
lret
push
adc
andl
jg
sub
and
mov
insl
pop
fwait
pop
gs
sub
sbb
test
mov
stos
push
jb
mov
insl
sbb
xchg
xor
sahf
jno
or
orb
cld
fwait
or
fmul
scas
je
xchg
mov
xor
dec
leave
push
xor
daa
inc
lock
push
fnsave
sbb
push
and
xor
add
jb
shrl
xchg
sub
sub
sub
inc
insl
push
in
push
fistpll
or
lahf
mov
xlat
sbb
lods
add
movsl
cmp
fwait
or
push
ret
sbb
push
mov
sub
pop
xchg
xchg
or
mov
push
mov
inc
aas
ds
mov
mov
xchg
push
mov
push
clc
ljmp
pop
mov
mov
cmp
cmp
push
jecxz
push
scas
inc
les
sbb
fstl
dec
outsb
jle
jno
mov
js
and
popf
fnstsw
lods
mov
sub
mov
lcall
xor
pop
mov
gs
sbb
pop
or
daa
stos
mov
mov
mov
push
pop
dec
jmp
pop
push
push
push
subl
xor
adc
stos
jb
mov
cmp
mov
inc
xor
out
cmpsl
sub
test
in
pop
xor
pop
jnp
xchg
sub
lods
je
push
xchg
jnp
sbb
or
mov
jge
lcall
sub
test
push
xor
cld
lods
fdivs
lock
into
clc
jp
mov
mul
sbb
insl
inc
imul
jle
mov
loopne
jne
mov
sub
pop
in
out
ret
imul
iret
ljmp
dec
mov
pop
fwait
or
repnz
stos
inc
jge
or
or
dec
mov
xor
or
jg
push
roll
in
and
mov
shll
add
jmp
or
aaa
hlt
add
aad
add
mov
in
xchg
fucomip
call
in
aaa
inc
mov
mov
pop
mov
adc
or
lcall
fstpl
pop
sub
pop
out
insl
or
jecxz
iret
mov
in
mov
sbb
loop
push
adc
fcomps
call
rcl
jmp
addr16
pop
loopne
pushf
rolb
rcrl
fistl
adc
in
pop
or
int3
lock
cmpsb
mov
jge
inc
push
jecxz
xchg
les
in
add
add
xchg
or
fstpt
dec
cmpsl
jo
jecxz
or
shlb
adc
mov
dec
jae
dec
cwtl
push
jbe
in
inc
sub
andb
ret
jne
sbb
popa
mov
testb
aas
dec
dec
movsl
or
mov
imul
or
loopne
push
add
rorb
pop
cmc
mov
popf
cs
lea
jnp
loope
scas
sahf
push
loope
cmc
mov
cmpsb
mov
sbb
cmp
arpl
shr
addr16
jge
sub
jae
stc
in
out
loop,pn
repz
xchg
ss
mov
pop
shl
push
push
cli
mov
bnd
mov
ss
mov
mov
sub
pop
jnp
mov
or
je
icebp
xchg
es
popa
rcrl
orb
fsubl
cltd
lret
test
ss
ja
adc
cmp
dec
ljmp
cmc
sbb
dec
inc
inc
inc
lret
adc
xlat
xchg
mov
mov
movb
xchg
icebp
add
test
push
add
fildll
dec
xchg
or
aam
pop
mov
jge
imul
mov
jmp
jno
inc
icebp
mov
xor
subb
or
in
leave
les
adc
cmc
clc
push
adc
fwait
push
sti
fisttps
icebp
inc
jns
push
mov
lahf
out
sbb
sub
stos
mov
mov
jbe
scas
cmp
test
inc
push
add
daa
outsl
xchg
mov
fists
cmp
mov
dec
or
jmp
jmp
leave
pop
jo
arpl
adcb
pop
jle
fwait
push
or
adc
mov
fnstenv
hlt
aam
sbb
sub
lret
sbb
pop
decl
popa
xchg
push
inc
loop
inc
cs
lret
inc
add
xchg
sbb
test
xchg
adc
push
push
adc
loope
xchg
pop
cmp
jo,pn
aad
push
jb
and
inc
sti
jmp
fidivl
fldcw
jb
pop
pop
jecxz
ret
outsb
cs
dec
dec
xchg
jmp
out
std
jo
lods
std
inc
cwtl
sbb
xchg
jmp
rolb
je
jbe
inc
xor
sub
push
inc
dec
outsb
jo
inc
pop
or
stos
scas
pop
cmp
jmp
xchg
lods
daa
test
sbb
jae
or
xor
ficoml
xchg
test
xchg
adc
and
loop
and
jb
cmp
aad
add
jle
pusha
lahf
mov
addr16
cmpsb
gs
inc
arpl
xor
nop
pop
dec
cmp
idiv
clc
xor
jnp
es
jne
xlat
dec
sbb
cmp
jbe
stc
scas
xor
repnz
mov
pop
fwait
pop
fcoms
cmp
push
sbb
or
pop
insl
dec
stos
cmpsb
mov
xchg
lods
sbb
ja
ffree
push
and
and
pop
jle
xchg
push
adc
jecxz
pop
pop
out
pop
dec
inc
lds
mov
cmc
repz
sub
scas
and
andb
ss
scas
jge
call
cmp
mov
out
mov
test
sbb
scas
dec
pop
add
and
mov
les
fiadds
jmp
ret
stos
cs
push
push
sub
imul
cltd
jg
sti
in
push
dec
inc
loop
mov
or
adc
sub
mov
loopne
rcrb
pop
stos
mov
push
xchg
pop
lret
push
adc
and
xor
mov
sbb
pop
add
xorl
ret
xlat
push
aas
sbb
lret
mov
xchg
neg
aam
xchg
mov
adc
mov
add
mov
jle
mov
imul
fwait
stos
and
sub
dec
cs
or
push
xchg
fdivp
cmp
stc
fdiv
fisubrl
arpl
popf
das
loope
and
enter
push
sbb
aas
ret
flds
mov
xor
cmp
push
pop
cmp
repnz
outsb
scas
jae
int
movsb
mov
les
jnp
sub
mov
pop
mov
ss
or
and
mov
fisubl
mov
nop
cmc
sbb
loop
sbb
sub
je
and
add
pop
cmp
xchg
mov
cmpsl
pusha
sub
mov
jle
stos
lods
mov
or
popa
mov
cmp
jnp
stos
add
dec
pop
and
push
fisttpll
sbb
mov
lock
icebp
jg
iret
movsb
sub
cmp
and
mov
mov
cs
ficompl
negl
jo
cld
inc
and
pop
jp
fwait
sbb
scas
add
mov
lods
cmc
or
loopne
cmp
jo
gs
sub
cld
push
lods
cs
fwait
xor
daa
jecxz
fldcw
mov
adc
fsubr
jle
out
je
ret
pop
les
shr
mov
test
add
pop
mov
and
jge
mov
int
cmp
mov
daa
sub
lcall
test
popf
pop
mov
xchg
mov
lea
mov
mov
jmp
mov
push
outsb
inc
testl
and
and
sub
bound
push
out
outsl
daa
and
jp
inc
sar
nop
inc
inc
aas
xlat
mov
dec
add
lea
push
es
fisubl
cli
daa
cmp
mov
sbb
cmp
pop
inc
js
xchg
jle
sbb
and
pop
and
aam
loope
adc
out
popf
push
ss
jbe
iret
push
dec
or
sub
mov
xor
shlb
js
mov
mov
mov
dec
int3
aaa
mov
insb
mov
dec
pop
dec
push
fdivrs
cmp
stos
mov
stc
ret
sub
mov
popf
jb
call
push
negl
pop
jo
inc
stc
cmc
out
cmpsb
pushf
ja
test
movsl
stos
xchg
add
popa
in
ja
mov
or
js
push
xchg
mov
pushf
ret
outsb
inc
scas
adc
mov
inc
jmp
sbbb
out
ret
cmpl
loopne
cmp
mov
and
hlt
jns
inc
outsb
jne
sbb
jmp
jnp
jns
or
bound
cmp
cltd
and
in
adc
mov
in
sti
xchg
pop
sbb
dec
pop
loopne
sub
iret
push
clc
enter
jecxz
shl
dec
out
adc
push
lock
ds
jne
addl
cmpsb
in
or
inc
clc
xor
adc
inc
mov
fbld
adc
add
sub
push
dec
inc
jb
test
add
stos
roll
jbe
jp
xchg
rolb
icebp
inc
ret
mov
mov
xor
fistpll
fstpt
push
xchg
and
mov
mov
js
mov
dec
xchg
stos
dec
je
dec
mov
rolb
scas
sbbl
pop
icebp
and
push
inc
cmp
push
mov
test
push
push
jmp
int
jae
cs
jnp
xor
inc
lcall
sbb
adc
adc
mov
mov
loopne
or
outsl
xor
adcb
pop
cmp
pop
jo
faddl
xor
and
and
xor
and
adc
push
push
xor
mov
xlat
mov
add
sbb
mov
sub
aad
adc
hlt
pusha
fwait
jmp
ds
scas
stos
mov
testl
push
lods
mov
pop
pop
subb
aaa
inc
xchg
ljmp
mulb
addr16
lods
rcl
cltd
dec
rcrb
sbb
fcoml
mov
push
sti
add
fdivs
xchg
push
pop
xchg
loop
cli
bound
inc
divb
movsl
mov
xor
mov
cs
shrb
movsb
insl
jecxz
or
adc
out
mov
in
jp
fs
inc
xchg
inc
stos
es
not
sub
pusha
push
mov
clc
lcall
xchg
lods
mov
subl
and
pop
loop
pop
pop
dec
adc
sub
pusha
pusha
movl
sbb
gs
mov
dec
add
dec
inc
jecxz
mov
sub
mov
mov
loope
pop
push
sbb
pop
sarb
pop
sub
xchg
cs
shll
in
or
pop
repz
insb
scas
in
mov
mov
mov
mov
ljmp
pusha
adc
mov
sub
push
sub
out
daa
outsb
pop
stos
in
or
cmp
adc
xchg
shll
or
sbb
ja
xor
mov
cld
mov
add
ds
fimull
loop
decb
shl
adc
mov
inc
outsl
push
xchg
sub
sbb
lock
push
stc
jb
ficomps
sarb
xchg
cmc
push
mov
pop
pop
mov
pushf
cmp
xchg
mov
jo
jmp
or
ret
jge
fistps
mov
sub
mov
aas
inc
xlat
loope
movsl
sub
pop
ret
in
mov
and
dec
xchg
sub
lds
pop
or
rclb
or
pop
aas
jbe
negb
cltd
idivl
sub
gs
mov
shl
mov
push
lods
loopne
out
ret
cmpb
mov
add
rorl
popl
mov
pop
pop
push
cmpl
xchg
xor
xchg
jle
jmp
sub
push
shll
fidivs
xlat
mov
mov
xchg
popf
cwtl
push
je
cpuid
inc
pop
gs
js
sub
ja
inc
and
or
lret
adc
mov
jmp
mov
aad
mov
scas
out
jg
cmp
rorb
call
xor
jbe
mov
xor
lods
ljmp
mov
xor
ds
rcrb
insl
fwait
pop
into
mov
cmpsb
data16
cmpb
jnp
dec
shlb
jecxz
mov
lds
dec
das
xor
mov
pop
imull
xor
scas
iret
jns
leave
xchg
mov
pop
push
movl
outsb
incl
sub
jle
pop
mov
pop
cmc
inc
jmp
add
cmpsb
lds
push
lea
insl
sub
stos
or
xchg
mov
adc
xchg
nop
inc
lods
adc
add
mov
cmc
jnp
or
ljmp
adcl
pop
fsubl
lods
xchg
out
outsl
xorl
mov
mov
fldenv
add
cmp
and
mov
mov
adc
in
jecxz
shrb
sub
cmc
scas
jmp
mov
pusha
sbb
jmp
rolb
aad
or
dec
sub
sub
orl
imul
shr
mov
push
lret
adc
insb
scas
jecxz
pop
icebp
in
add
cmpsl
lcall
and
mov
enter
fildll
ds
aam
cs
fisttpl
jmp
push
sbb
bound
call
inc
mov
push
xchg
je
mov
push
push
dec
shll
mov
outsb
cmp
frstor
pop
aaa
test
add
or
xor
adc
pop
lods
aaa
xchg
mov
mov
sti
lods
jmp
xor
repz
jne
adc
lret
and
mov
js
add
dec
js
cmp
adc
inc
icebp
pop
aaa
adc
scas
insb
and
mov
sub
mov
test
dec
adc
and
loop
test
stc
jp
lds
lret
cld
mov
mov
or
cmpsl
add
jmp
add
mov
pop
popa
lret
gs
cwtl
add
fiadds
sbb
daa
push
fwait
or
imul
pop
cmp
pop
push
adc
and
repnz
or
out
add
jmp
dec
xor
jl
push
icebp
jb
xor
mov
lds
xchg
inc
inc
mov
inc
rep
in
es
xlat
cltd
dec
add
mov
adc
decb
dec
dec
repnz
jecxz
mov
and
mov
lahf
addb
inc
inc
dec
int3
adc
in
or
mov
hlt
js
insb
xchg
xchg
xor
popl
cld
jbe
outsb
pop
mov
dec
inc
sarl
inc
cmp
mov
stos
add
shrb
in
add
arpl
int
in
scas
xchg
or
or
push
scas
cmc
loop
pop
xchg
xchg
outsb
mov
std
rcl
aam
inc
add
and
movsl
lods
mov
xchg
or
lea
ljmp
enter
and
nop
jb
nop
xchg
push
es
shrl
sahf
jg
cltd
fcomps
insl
insl
sahf
js
cmpsl
inc
shll
ret
stos
loop
mov
sahf
in
xchg
imul
mov
aaa
rcrb
inc
adc
mov
stos
das
ret
mov
insl
mov
in
and
aad
mov
jle
mov
out
pop
out
icebp
in
mov
mov
int
aad
stos
loope
pop
cmp
sub
mov
ds
pop
mov
push
bound
xchg
jge
fisubrl
sbb
inc
and
or
lea
add
dec
std
lea
and
pop
int
hlt
adc
inc
aad
loop
pushf
push
jp
cmpb
pop
sub
dec
push
inc
imul
xchg
rcrb
xor
test
sbb
mov
mov
adc
mov
xchg
mov
outsb
mov
or
push
jl
loop
mov
xchg
cli
arpl
adc
in
or
cltd
inc
jge
sub
jecxz
dec
les
in
sub
or
ret
jle
and
mov
cmpsb
rcll
jge
xchg
inc
push
ljmp
push
das
cmp
mov
or
sarl
xchg
adc
jnp
adc
mov
fwait
pop
out
mov
add
and
sub
inc
sub
xor
pop
fldt
outsb
inc
sub
loope
and
lds
je
jbe
xchg
cld
sbb
sbbl
rorb
std
jne,pn
push
and
stos
in
ffreep
sub
cs
fstps
js
aas
cmpsb
jle
js
hlt
call
or
dec
movsl
mov
in
rcl
lcall
call
shrl
add
outsl
jg
addl
iret
jl
and
jp
repz
lods
pop
fists
mov
js
jno
repnz
mov
nop
or
pusha
aad
fidivrs
push
aaa
mov
andl
iret
xchg
test
insl
jnp
xor
sub
inc
push
cwtl
mov
adc
mov
sbb
pop
outsl
xchg
add
sub
loope
xor
mov
hlt
pop
mov
sub
mov
dec
loope
mov
xchg
mov
out
in
mov
sub
stos
pop
ret
ret
out
xadd
mov
pop
in
xor
mov
shrl
cwtl
mov
fwait
loope
or
and
outsl
xchg
fdiv
mov
adc
jecxz
mov
clc
ljmp
fwait
outsl
pusha
mov
mov
bound
mov
dec
lods
mov
in
xor
pop
mov
rcl
jo
or
push
mov
arpl
negb
nop
sbb
adc
jo
mov
lock
sbb
test
rcrl
lret
ljmp
in
mov
mov
mov
jg
and
cmp
mov
movsl
das
mov
sbb
dec
pop
xchg
pop
mov
xchg
and
adc
push
ljmp
hlt
addr16
mov
jmp
aas
jae
xchg
shll
mov
hlt
lds
xchg
mov
les
fistpll
sbb
add
pop
push
mov
fsubrl
pop
imul
inc
adc
mov
inc
ret
xchg
push
xor
add
and
or
jp
ret
pop
inc
or
out
jbe
sub
pusha
test
cld
mov
lods
xchg
sbb
add
lods
shl
adc
call
push
loope
jp
pop
mov
popfw
push
or
aam
inc
fmull
dec
testl
mov
fiaddl
cld
lret
fimuls
lock
mov
mov
lods
and
cmp
subl
fucomi
xchg
sub
dec
pop
movsl
leave
movsl
incl
mov
jge
cmpb
rorb
les
and
in
loope
mov
xor
scas
adc
decb
jnp
sbb
fstpl
dec
pop
fwait
shr
mov
int3
dec
add
imull
fwait
ret
cmpsb
xchg
hlt
xchg
popa
cs
adc
daa
dec
bound
lcall
stos
add
push
inc
push
adc
xor
or
xor
xorl
lods
addb
cmpl
les
mov
mov
and
mov
lea
lea
les
leave
jle
pop
mov
jns
testb
sarl
sti
jo
mov
inc
gs
jb
test
add
lods
xor
cltd
fwait
nop
cld
pop
adc
sbb
mov
pop
icebp
push
mov
cs
jno
xor
in
mov
and
test
dec
xor
mov
shlb
pop
jl
lret
xchg
jae
inc
mov
jmp
push
jae
ret
push
pop
movsb
jno
adc
fldt
es
popf
sahf
subb
test
movsb
call
iret
call
jb
js
or
data16
dec
lea
inc
out
subb
cmpsb
lcall
or
add
shrl
mov
or
cmp
cli
push
xchg
xor
mov
jne
xlat
pop
sub
movsl
nop
faddl
mov
and
pcmpeqw
in
shl
xor
mov
mov
test
and
cmpl
notl
lret
pop
xchg
outsl
mov
cwtl
daa
lods
mov
or
dec
int
cmp
and
mov
add
inc
mov
add
cli
push
dec
mov
push
shl
js
mov
call
in
sub
jle
pushf
mov
cmpsb
mov
nop
adc
or
jbe
lock
test
or
clc
mov
lret
or
mov
add
aas
and
cmp
loopne
fistl
cmp
xor
inc
lea
cmpsb
or
pop
cmp
mov
or
pop
nop
loope
sub
fsts
subb
cli
cmpsl
ret
ffree
out
mov
icebp
sti
xor
inc
mov
stos
cs
sbb
jnp
mov
push
shlb
nop
cmpsl
mov
sbb
xor
pop
outsb
lods
mov
sbb
lods
orb
and
mov
rolb
xorb
rcl
cmc
add
addb
mull
mov
mov
sbb
cmp
push
movups
jne
push
outsl
mov
inc
adc
sub
push
icebp
es
loope
mov
and
rclb
sbb
xchg
dec
mov
adc
and
mov
push
subb
cmpb
add
sub
push
or
push
push
call
mov
push
jl
mov
pop
ret
imul
cli
mov
shr
jne
mov
sub
dec
pop
nop
cmc
sbb
push
jmp
lods
stos
sub
sbb
jb
add
in
notl
and
mov
push
sbb
icebp
inc
sbb
lods
dec
dec
push
inc
popf
mov
mov
or
shlb
dec
jne
pop
jo
dec
shlb
scas
sbbb
pop
outsl
mov
popa
in
xor
cmp
shll
sub
pop
outsl
out
jp
xchg
loopne
mov
and
in
jmp
fdivrl
push
ljmp
js
ljmp
loopne
jns
notl
loope
and
lds
movsl
sbb
insb
in
js
add
les
into
jl
cs
cld
out
loop
insl
out
or
imul
sbb
das
mov
fcmovne
test
push
pop
xchg
subb
subb
push
lods
cld
adc
sbb
mov
xor
les
mov
loop
out
dec
and
ret
pop
push
imul
dec
jne
mov
orl
std
das
add
mov
mov
sbbl
and
incl
insb
call
mov
repnz
stos
sbb
das
inc
sub
scas
add
sub
sbb
push
pop
jge
jmp
std
out
mov
inc
ret
and
mov
fcoms
fcoml
xchg
loope
scas
cmpsb
cmp
cld
aas
inc
inc
xchg
lcall
sub
adc
or
sbb
nop
ds
push
fisttps
inc
das
lock
jmp
lds
or
dec
fwait
fwait
dec
mov
call
jae
movsl
lahf
clc
mov
js,pn
lods
pop
sbb
sub
out
jmp
xor
ffreep
mov
data16
jno
jmp
sbb
push
fdivrl
loopne
add
or
mov
movb
or
jmp
cmp
mov
xor
xchg
xchg
enter
xchg
inc
jmp
addr16
cs
scas
sbb
sbb
paddw
insb
jg
test
ds
nop
dec
xchg
xor
movsl
cmp
pop
iret
add
jnp
insb
sahf
or
jecxz
pop
ljmp
mov
cmpb
es
sahf
shrl
adc
outsl
addb
push
sbb
iret
xchg
iret
dec
lcall
pop
dec
mov
fcmovnu
aaa
pop
mov
sbb
jle
mov
lods
orl
inc
or
std
movsb
fcoml
cmp
out
xchg
push
push
and
sub
and
fiaddl
clc
and
addb
add
cmp
insl
jmp
test
mov
jecxz
leave
lock
push
add
minps
loop
pop
sbb
jo
cli
push
insb
sbb
shl
jbe
jo
shrl
repz
lret
sub
mov
rcrl
mov
cmp
rcl
and
dec
mov
test
xchg
shll
push
sbb
repnz
mov
mov
sti
aad
push
sahf
cmpsb
jne
sar
roll
lret
or
mov
pop
sti
jb
mov
orl
addr16
pop
outsl
jl
inc
push
xor
push
adc
mov
mov
fstpt
gs
mov
insb
sbb
pop
in
loopne
lea
mov
cmpsb
adc
pop
jmp
push
jnp
rclb
out
lds
mov
and
aas
pop
add
pop
icebp
cs
les
mov
and
rcr
and
sub
js
arpl
or
jmp
xchg
or
mov
sbb
imul
fstpt
inc
add
or
inc
gs
xor
fs
sti
out
push
inc
sub
xor
gs
in
inc
frstor
dec
or
cmpsb
push
push
mov
cmp
sahf
std
fmull
inc
addr16
enter
shll
mov
das
adc
stos
mov
fisttpl
xlat
and
pop
jo
movsl
ljmp
mov
sub
cmp
inc
sahf
pop
mov
push
cs
jmp
inc
arpl
jno
popf
adc
xor
cmp
aam
mov
dec
dec
sub
outsb
and
pop
fdivs
stos
out
mov
mov
mov
push
xchg
shll
mov
push
and
cmp
in
mov
and
xchg
outsb
stos
inc
sbb
fxch
in
andb
adc
cmp
loope
xorb
adc
repz
jmp
jge
aaa
dec
aaa
mov
sub
je
cld
dec
ja
xor
fsubrs
gs
mov
cmc
pop
fistpl
mov
setno
add
cs
jnp
xor
into
enter
push
inc
jbe
add
push
fdivs
shlb
outsl
insb
dec
fimull
push
xor
test
or
rclb
outsb
mov
in
and
or
enter
fwait
test
ret
mov
add
mov
pop
daa
push
mov
sarl
sbb
out
aaa
push
mov
sbb
mov
inc
lahf
mov
jbe
mov
mov
jp
inc
arpl
mov
pop
fcmovnu
push
fnsave
add
jbe
sub
lea
push
mov
or
cmpsb
fsubs
or
pushf
movsb
test
inc
shll
xor
sbb
xchg
sbb
pop
mov
into
fwait
xchg
mov
push
loope
mov
shrb
add
xchg
sbb
in
push
addr16
lret
jge
fldcw
push
pop
cmc
dec
sbb
add
cmp
fisubrs
or
sti
stc
mov
inc
and
push
decl
and
inc
scas
lahf
movsl
cwtl
loope
add
push
xor
pop
mov
gs
insl
xorb
sub
daa
or
mov
sub
jg
mov
mov
jle
push
sbb
stos
pop
xor
aad
sub
sub
lods
in
inc
psubusb
sub
ljmp
adc
jno
ficoms
in
jle
dec
das
and
mov
call
cmp
cli
dec
cs
clc
lret
dec
sub
roll
cmc
cmp
jl
adcb
scas
les
lods
cs
and
clc
mov
ror
lods
pop
pop
nop
pop
lcall
aad
into
js
lds
fcoml
xor
push
xor
pop
loop
fcompl
icebp
sbb
sahf
xor
adc
push
movsl
daa
mov
cmp
pop
cmpsb
inc
outsb
lods
push
cmc
mov
push
push
daa
push
sub
fdivrs
fidivl
test
into
sub
ret
or
xor
jbe
push
nop
lahf
ja
xor
insl
or
fwait
rcll
cmc
mov
test
daa
push
xchg
cwtl
pop
or
push
mov
mov
repz
cwtl
ss
cmp
mov
sbb
enter
xor
in
loop
sahf
bnd
mov
jecxz
sbb
cmpsb
and
outsb
mov
push
sub
inc
mov
ret
pushf
and
iret
inc
xorb
daa
cwtl
add
divb
ret
jmp
outsb
mov
mov
aad
imul
push
or
ret
mov
mov
or
aam
jg
int
out
xor
pop
sub
sub
into
fcompl
xchg
fcoms
mov
or
mov
fmull
mov
pop
mov
add
loop
adc
sahf
jle
movsl
fildll
es
dec
aam
out
pop
cld
adc
pop
mov
jle
icebp
adc
sub
dec
out
out
add
sbb
outsb
push
imul
mov
rcll
loopne
sbb
sbb
sbb
fisubs
push
hlt
movsl
pop
insb
pop
outsb
sub
les
test
fisubrl
dec
jno
fistpll
jbe
and
push
mov
sub
push
mov
loope
push
shll
jle
pop
jo
mov
out
mov
push
jne
lea
mov
iret
outsl
jl
sbb
jbe
add
rcrb
es
inc
inc
mov
sbb
cmp
aaa
lcall
cmpb
pop
push
push
add
loop
sbb
sub
sub
push
loopne
test
outsl
jle
push
mov
shl
fidivl
in
mov
and
lret
call
cli
shlb
stc
out
jmp
popl
in
aas
in
les
les
lea
repz
jo
adc
ret
mov
out
outsl
mov
jmp
lods
popa
pand
xchg
mov
icebp
or
enter
insb
in
add
sbb
lret
sbb
sbb
jp
mov
cmp
pop
scas
add
inc
loop
pop
aam
add
ja
pop
ret
fsts
dec
leave
mov
cs
loop
jb
loopne
and
mov
or
rcr
out
sbb
roll
mov
mov
mov
dec
or
xor
outsl
inc
inc
fsubl
cmpsl
dec
jbe
mov
or
addb
pop
sbb
hlt
add
aad
add
cmc
and
xorl
add
push
sub
test
fistl
cmp
mov
iret
add
add
roll
leave
inc
movsl
inc
clc
in
test
dec
jnp
dec
into
sbb
js
outsb
aam
cmpb
xor
lret
ret
xor
xor
sbb
or
test
push
and
rcrl
cmp
lret
push
outsb
scas
dec
aaa
xor
adc
adc
outsl
pop
hlt
and
push
lcall
inc
out
mov
ljmp
sbbl
mov
cmp
mov
mov
push
fiaddl
mov
loope
pushf
js
cltd
mov
pop
loope
inc
call
aad
cli
add
test
rorb
mov
mov
loopne
rolb
ljmp
xor
mov
lock
hlt
scas
shrb
adcb
mov
dec
ss
rcrb
pop
adc
push
inc
push
stos
push
jmp
xlat
or
mov
jbe
leave
jmp
pop
dec
rolb
clc
adc
cmp
xchg
hlt
jmp
aam
add
clc
sub
push
pop
xchg
cmpsb
cwtl
adc
das
sub
lods
js
cmp
dec
xchg
and
add
sub
pop
call
fs
mov
inc
out
fmuls
lret
cmp
xchg
mov
xchg
pop
fnstenv
push
aaa
aaa
jb
mov
and
imul
stc
clc
inc
lret
sub
scas
pop
icebp
push
and
sbb
xchg
sbb
cmc
dec
cmp
insb
sbb
xchg
jmp
mov
ret
xchg
sub
bound
aam
rclb
or
push
xchg
xchg
adcb
stos
cmp
and
or
test
xchg
mov
cmp
iret
xor
scas
sub
inc
sub
add
inc
ja
loope
ret
dec
aam
xor
repnz
test
add
push
mov
mov
je
nop
xor
pop
fstpt
and
mov
out
push
mov
mov
aad
mov
jmp
adc
push
ret
lds
mov
loope
pop
jo
sub
divps
and
add
push
outsb
ss
fdivl
mov
rorb
lock
xchg
pop
jno
xchg
fwait
bound
or
xor
sarl
mov
sbb
mov
and
pop
inc
test
cmc
xchg
daa
cmp
xchg
or
push
add
test
fldl
xor
mov
mov
jns
mov
lea
sub
ja
outsl
ss
imul
inc
insb
mov
outsb
fsts
inc
mov
lcall
test
and
lods
imul
dec
xor
mov
call
cltd
add
out
shlb
inc
adc
jb
jge
dec
push
pop
iret
cmp
and
orb
fwait
jmp
xor
out
fmuls
fistpl
push
mov
add
nop
pop
lahf
dec
inc
lock
mov
in
out
imul
into
into
or
or
int3
jecxz
ljmp
and
insb
mov
push
jno
lds
hlt
callw
mov
stc
dec
and
add
dec
cmp
fs
ret
inc
pop
fcmovnb
popf
mov
cwtl
icebp
lret
sub
mov
xor
cwtl
or
add
sub
and
dec
subb
ds
or
push
jle
rolb
insl
data16
sub
and
je
ret
mov
mov
dec
pop
pop
pushf
out
mov
fidivl
push
and
xorl
cld
sub
jmp
loope
jle
lds
cs
pop
daa
rcl
dec
jb
sbb
in
cld
loope
sub
popa
fs
pop
cmp
and
psrad
xchg
pop
mov
clc
dec
mov
jge
lret
cmp
dec
jo
pop
je
pop
ret
jbe
jle
pop
inc
sahf
cmc
gs
mov
iret
in
cmp
mov
mov
leave
std
mov
sub
fisubl
icebp
sbb
xchg
rorl
sahf
outsb
insl
scas
mov
cli
stc
inc
lods
icebp
mov
movsl
push
push
and
adc
mov
or
mov
mov
sbb
xor
dec
adc
sbb
mov
and
sub
call
dec
add
inc
dec
sbb
or
scas
and
cld
bound
lcall
cmp
clc
xor
mov
jge
faddl
aam
mov
or
jg
sti
rcr
rolb
pushf
mov
pop
fsub
add
xchg
pop
xchg
xchg
dec
push
mov
rcl
das
jae
push
jmp
fwait
ljmp
mov
sub
mov
mov
roll
fistpl
cmp
in
add
faddl
xlat
lods
addr16
sbb
fstps
dec
js
xchg
or
lods
arpl
ret
xor
add
inc
dec
pop
or
inc
sbb
outsl
lret
ss
loope
call
jge
mov
xor
xchg
hlt
sub
ljmp
xchg
imul
testb
add
adc
pop
sbbl
or
dec
pushf
loope
insl
pop
pop
dec
mov
ficomps
adc
nop
data16
stos
scas
icebp
mov
and
aad
sub
jne
sbb
movsl
outsb
and
addr16
mov
pop
sbb
aas
orb
lock
cs
add
jnp
cwtl
sub
adc
dec
adc
cwtl
popa
push
adc
cld
cmp
push
out
enter
fnstenv
mov
sub
dec
mov
jg
xchg
cmp
fsubrs
pop
inc
cmpsb
add
pop
dec
pop
stos
notl
nop
test
sbbb
mov
out
xor
fsubrs
lret
rcrb
imul
cmp
aaa
push
jecxz
mov
ss
push
jo
loopne
mov
lods
pop
xor
jmp
movb
lock
adc
push
ljmp
inc
test
ja
adc
insl
mov
loopne
int
fcomps
fldt
les
mov
mov
cli
push
add
mov
mov
mov
in
jg
jo
adc
push
lds
or
sbb
lods
movsl
fisttpl
fildll
pop
sub
in
std
push
sti
sar
daa
dec
ret
ror
rolb
stos
mov
shl
adc
push
ljmp
fsubrs
adc
or
and
les
mov
loope
bound
or
iret
rclb
aam
adc
cwtl
pop
mov
xchg
sub
popa
clc
std
test
push
xchg
xor
cmc
sahf
testb
jecxz
ret
or
xlat
outsl
sbbl
xchg
mov
lea
push
sbb
pusha
add
push
minps
dec
mov
mov
mov
mov
dec
pop
mov
fiaddl
sub
xchg
shrb
inc
mov
xor
int
push
sub
pop
cwtl
xchg
jo
mov
push
xchg
aaa
mov
mov
push
sarl
xor
cmpl
sbb
or
and
shll
vcvttsd2si
cmp
rcrl
lret
ds
and
mov
insb
or
jge
fwait
sub
loop
jle
in
and
pop
sbb
inc
cmpsb
cmp
xchg
and
pop
pop
sub
cmp
lods
aam
std
inc
pop
jns
mov
pusha
sbbb
stos
or
in
mov
aaa
xchg
mov
repnz
xor
lods
sub
push
push
imul
push
jecxz
lods
lock
xchg
test
addr16
mov
dec
push
je
pop
call
das
clc
aam
lods
sbb
sbb
add
and
outsb
pop
mov
sub
inc
mov
xor
xchg
inc
push
pop
jmp
subl
in
call
lds
rcrb
lcall
test
jg
call
je
addl
or
icebp
add
fs
outsb
lret
insl
add
fnstenv
pop
adc
aad
pushf
add
mov
or
push
dec
sbb
insb
sub
mov
in
outsb
ret
mov
sub
arpl
inc
xor
cmp
inc
jle
aaa
mov
push
cmp
cmpl
push
inc
andl
clc
mov
pop
loope
rolb
adc
cli
dec
xchg
mov
ljmp
sbb
icebp
ret
scas
add
sbb
add
sub
mov
sub
push
pop
aaa
ss
xchg
outsl
and
push
sarb
dec
shlb
pop
inc
add
mov
pop
or
sub
jecxz
mov
fnsave
mov
inc
adc
subl
arpl
sub
and
cmp
push
mov
ss
mov
xor
cmp
in
jns
mov
mov
dec
pop
adc
addr16
fdivrs
inc
add
push
insb
shl
pminub
sub
fwait
popa
popa
sub
mov
jle
xchg
dec
and
shlb
jecxz
lea
ret
adc
cmpsl
dec
bound
int
inc
pop
add
sbb
pop
fsubl
loop
mov
loope
jle
cwtl
dec
ja
or
xor
jl
jo
mov
imul
subb
aaa
push
mov
test
pusha
scas
push
je
mov
dec
fildl
cmpsb
ret
fs
sbb
mov
mov
movsl
jno
cmp
inc
pop
scas
sub
icebp
and
insl
hlt
imul
outsb
jge
sbb
cmp
shr
ret
jb
push
inc
aas
or
push
inc
xchg
movsb
pop
fcmovnb
test
cmp
pop
push
insb
cmpsb
mov
sub
cmp
mov
pop
pop
cmp
push
xor
push
aaa
jecxz
and
and
inc
test
leave
movl
push
pop
arpl
pop
add
test
cltd
ficompl
aas
bound
ja
inc
gs
inc
scas
inc
shll
pusha
test
rcrl
mov
or
ret
lcall
lret
faddl
out
cmp
cmp
aad
adc
mov
fidivs
adc
mov
fdivs
roll
xchg
jl
jl
in
loope
jecxz
mov
jp
je
in
loopne
adcl
push
cmp
loope
subl
movsb
cmp
and
je
cmp
jge
dec
icebp
retw
rolb
jl
xchg
push
mov
ret
mov
in
je
adc
aas
sahf
adc
loop
hlt
cmp
xchg
jbe
mov
and
cli
fisubrl
xchg
push
in
mov
fisttpl
stc
jge
loopne
fimull
loope
inc
in
jl
dec
pop
sbb
rol
icebp
cltd
jo
sub
stos
push
jnp
mov
jbe
notb
pop
push
cwtl
xor
shrb
sub
fdivs
scas
movsl
mov
sbbl
loope
lock
cmp
mov
push
xchg
push
xor
and
pop
or
mov
dec
inc
pop
xor
lahf
incl
jp
outsb
jg
flds
add
xor
mov
stos
and
add
jl
jl
jl
call
pusha
and
repz
out
push
jo
cmp
add
inc
scas
jp
mov
je
xchg
inc
sbb
pop
and
mov
inc
xor
dec
int3
xchg
cmpsb
or
jae
test
ret
mov
loopne
xor
mov
bound
adc
leave
or
cmp
popf
sub
bound
scas
push
mov
rol
in
hlt
rcll
adc
or
aas
sub
or
xor
test
add
ja
mov
shl
jecxz
pop
mov
lret
sbbb
push
add
xchg
leave
mov
rclb
pop
popf
jno
ja
cmpsl
int
lcall
and
fmuls
loope
rolb
or
fstpl
lcall
js,pt
movsb
inc
rcrb
cmp
stc
pop
mov
push
gs
xchg
sbb
imul
push
inc
mov
and
mov
lds
pop
add
pop
test
push
das
pop
cmp
inc
jmp
orb
cmp
pop
mov
mov
mov
arpl
pop
gs
arpl
push
mov
mov
sub
fldt
pop
inc
mov
or
hlt
sub
icebp
daa
test
mov
pop
mov
imul
xor
rcr
sbb
ret
sbb
push
divb
or
mov
insb
lahf
xor
test
add
or
loop
jae
cmp
shlb
sbb
loopne
sub
das
fimull
mov
lds
ljmp
fs
mov
test
rorb
jg
int
dec
xlat
fldl
jle
cmp
out
jns
sbb
cmpb
and
fdivl
roll
icebp
push
cli
test
and
push
inc
and
sub
loopne
rcll
mov
mov
sbb
jbe
bound
hlt
loop
bound
ss
add
fdivrl
inc
xor
add
or
cmp
jae
mov
ret
jne
jl
jmp
mov
fdivrs
es
cld
mov
adc
mov
push
push
push
je
aas
fbstp
cmpsl
or
insb
in
pop
scas
xor
dec
in
leave
pop
cli
xor
inc
inc
dec
pop
jno
call
cmp
fldenv
test
ret
xor
sub
inc
inc
ja
pop
icebp
or
fcom
aaa
fmull
pop
xchg
aaa
mov
pop
cmp
loope
arpl
stos
cmpsb
push
ret
lret
inc
mov
mov
fldenv
jmp
push
icebp
add
imul
mov
inc
lods
outsb
xor
sbb
fidivs
or
iret
dec
dec
fisttpll
push
cmp
insb
outsb
les
iret
bound
xchg
in
fnsave
das
std
mov
cmp
push
mov
insl
push
imul
enter
sbb
pop
stos
mov
mov
dec
clc
insl
test
xchg
ljmp
int3
push
rorl
rorl
loope
test
push
mov
cmp
test
mov
sub
or
enter
jo
and
and
cwtl
or
dec
movsb
rcrl
add
lcall
pop
dec
fwait
push
add
aas
mov
js
rep
cli
adc
dec
or
lret
in
adc
inc
jp
cs
lret
or
popa
imul
pop
mov
adc
ja
sbbl
xor
push
mov
mov
fnstcw
rcr
jecxz
in
pop
xor
mov
pop
mov
adc
sbbb
or
shrl
mov
inc
inc
fnsave
ret
outsb
shll
stos
cmp
rcrl
mov
add
adcl
cs
ror
outsl
insl
aam
bound
fcomi
call
jecxz
sub
adc
lea
test
adc
pop
lea
xchg
push
faddl
and
stos
push
jle
mov
std
or
lock
je
mov
or
aas
sti
mov
mov
jg
rcll
adc
push
dec
and
jp
arpl
out
ja
ja
stos
add
rorb
sub
cmp
pusha
jg
xchg
or
mov
push
add
mov
xorb
cmc
loopne
push
and
xor
pop
les
stos
xor
or
test
insb
mov
add
dec
sbb
arpl
test
add
add
das
mov
jl
inc
push
push
adc
into
aas
lcall
aas
insb
adc
cmp
lds
adc
xorb
testb
shlb
push
mov
mov
insb
lcall
inc
or
scas
movl
les
test
pop
fwait
arpl
dec
pop
hlt
mov
jle
sbb
cmpsl
sub
cmp
ss
pop
xlat
leave
adc
jecxz
lods
adc
aas
push
imul
in
cs
mov
dec
adc
xchg
add
arpl
lds
mov
xchg
addb
sahf
ffree
lods
rcrl
mov
outsl
aad
push
cmpsb
pop
push
lods
push
outsl
pop
jno
pop
cmp
mov
or
cmc
shlb
add
cltd
and
rcr
test
stos
and
mov
daa
scas
pop
cmpl
fadds
inc
int
leave
add
repz
fstpt
add
outsb
ljmp
loope
sbb
pop
cmpb
jne
aaa
dec
out
mov
cmp
push
fistpl
mov
test
lock
jp
adc
mov
cmpb
sbb
sub
clc
adc
mov
push
sbbl
adc
cmp
out
enter
xchg
incl
fsubrl
fsubrl
sahf
cmpsb
ss
insl
test
shll
adc
cmp
pop
gs
add
lock
imul
pop
mov
stos
mov
outsb
mov
cmp
movsb
loope
mov
push
sbb
test
fld
aas
add
push
out
sti
les
les
enter
jns
in
mov
lcall
sub
sarl
std
cmpb
or
ljmp
pop
add
add
mov
add
cwtl
mov
jge
jbe
jge
inc
out
xchg
lcall
xor
andl
pop
jecxz
aam
or
stc
movsw
hlt
lock
pop
xchg
es
cld
pop
jno
mov
lret
fsubs
cmp
xchg
pusha
dec
xor
xchg
lock
fildll
shlb
sahf
leave
sbb
mov
repnz
mov
or
roll
dec
stos
add
or
mov
jne
je
sbb
adc
fsubrl
push
and
pop
fidivrl
cmp
cs
and
mov
xlat
clc
icebp
fwait
push
fdivrs
daa
adc
fisttpl
orb
sbbl
jne
fucom
aam
mov
mov
cmp
and
push
popf
in
ret
stos
je
mov
lock
sbb
xor
sub
addr16
sbb
xchg
and
test
xor
nopl
mov
movsb
and
xchg
iret
rcrb
ss
ret
sti
sbb
pop
mov
inc
incl
lods
xchg
push
nop
mov
cs
insb
inc
jbe
inc
and
xor
sub
pushf
fmuls
dec
iret
inc
mov
das
jne
inc
leave
sti
dec
sub
jle,pn
mov
sub
popa
jne
ret
jno
mov
int
dec
jne
in
ja
xchg
and
xchg
cmp
push
dec
pop
pusha
es
mov
jle
sbb
aas
shlb
out
mov
into
and
xchg
fidivl
test
in
orl
dec
icebp
or
xchg
jbe
pop
mov
fistpll
push
adc
nop
scas
jns
into
andl
roll
jg
movsl
cld
add
mov
dec
mov
push
out
cmpsb
and
dec
cmp
pop
shl
shrb
das
jp
xor
push
shll
loopne
jp
pop
mov
mov
mov
xor
or
jecxz
mov
mov
adc
rcr
inc
adc
aam
test
mov
and
xchg
scas
pop
js
cld
fsubs
mov
movsl
sbb
inc
js
scas
ret
aam
inc
fwait
data16
fst
inc
nop
pushf
icebp
jo
repnz
stos
out
sbb
cmc
pop
hlt
cmp
mov
pop
inc
rorl
scas
arpl
push
push
mov
out
lods
xlat
adc
mov
xlat
stos
adc
jo
lea
xchg
push
add
inc
cltd
mov
in
addr16
sbbl
pop
mov
dec
shll
push
dec
ret
addr16
and
jb
loopne
out
bound
bnd
dec
bound
iret
mov
movsl
adc
pop
or
movsl
scas
call
adc
data16
insl
cltd
rol
sti
or
les
out
ficompl
std
mov
in
or
or
xor
dec
fcompl
sarb
clc
cmpsl
jnp
xlat
cs
mov
sub
mov
aas
loop
lock
rcrb
xor
mov
sub
jns
push
arpl
les
test
test
imul
mov
cs
pop
and
lahf
lods
dec
pop
ficoml
dec
and
bound
ljmp
sub
and
pop
pop
ss
lcall
adc
cmp
sub
pop
lahf
loope
xchg
xchg
push
ret
inc
push
adc
push
jl
dec
inc
mov
test
ds
inc
imull
sbb
or
mov
jb
pop
mov
daa
xchg
ret
iret
and
push
mov
and
movsb
dec
sub
adcl
in
dec
fstpl
inc
inc
dec
frstor
mov
loop
xor
add
xchg
or
mov
in
int3
dec
xor
xchg
sub
popf
mov
iret
ss
fisubrl
xor
ret
sbb
and
in
xchg
mov
xchg
xlat
push
jbe
cmp
fisttpll
scas
mov
pop
inc
pop
ljmp
xchg
leave
out
jno
ret
xchg
notl
out
pop
mov
push
mov
jecxz
shl
xchg
mov
dec
and
lock
xchg
and
mov
push
or
inc
mov
test
sub
push
adc
xchg
neg
push
push
test
je
ret
stc
out
mov
cmp
in
jg
mov
push
adc
push
pop
je
add
test
je
jge
mov
add
test
pop
movsb
dec
lahf
cltd
sbb
dec
push
or
xchg
and
mov
test
repz
xor
xor
js
mov
sub
les
mov
mulb
add
enter
pop
xor
insb
or
xor
jae
fdivrl
testb
add
test
mov
mov
or
add
or
jo
jmp
mov
mov
rol
jbe
and
mov
lret
in
jbe
lea
sub
push
pop
sub
icebp
push
xchg
pop
mov
insl
leave
je
dec
jae
fsubl
or
nop
js
incb
cltd
dec
and
jbe
fisttpl
xor
jae
std
push
outsl
inc
mov
xchg
and
js
and
shll
test
je
mov
xchg
adc
push
rol
test
push
jl
cmp
inc
cs
testb
lods
fnstcw
add
push
rcll
xchg
sub
fstps
sbbb
movsb
daa
inc
push
mov
jmp
add
cltd
jp
fidivs
mov
add
lret
pusha
mov
hlt
or
push
insl
rclb
xchg
push
sub
dec
inc
and
fisttpl
sub
and
imul
mov
push
xchg
cmc
or
inc
in
xchg
flds
test
sbb
jecxz
and
bound
mov
mov
add
rclb
add
mov
out
sbb
fst
negb
movsl
push
and
addr16
add
add
mov
add
add
aam
lea
inc
cltd
xor
xlat
stos
sbb
push
test
mov
stos
shlb
lret
in
lret
outsb
push
stos
lock
into
mov
pop
xchg
mov
out
mov
and
push
outsb
sbb
mov
lods
mov
jb
dec
mov
cwtl
pop
mov
ret
neg
dec
cmpsb
add
jno
iret
mov
push
mov
mov
mov
xor
imul
push
cli
dec
loopnew
pop
clc
lock
mov
jnp
shlb
dec
stc
insb
stos
and
stc
call
or
push
fistps
gs
sbb
sub
fdivr
test
jns
imul
xchg
fdivs
ljmp
dec
xorl
dec
popa
mov
push
jne
aaa
sbb
push
sarb
adcl
mov
cmc
pop
push
insl
mov
xchg
sub
push
sub
pop
mov
inc
cmp
out
pushf
jmp
rcrb
mov
mov
imul
cmpb
and
enter
push
js
cld
outsl
push
xor
add
push
ret
lcall
mov
cmpsb
mov
test
inc
xchg
mov
sti
ss
sbbl
cld
push
jo
adc
gs
mov
flds
jle
or
xor
sti
fistpll
sbb
and
nop
or
mov
jge
outsl
push
ss
cwtl
push
and
jg
cs
or
rcl
aas
xchg
sahf
mov
popa
mov
xchg
fcomp
add
jecxz
repz
xchg
and
mov
push
and
iret
ja
cs
and
xchg
stc
stc
sbb
bound
test
fidivs
add
mov
cmp
pop
xor
push
sahf
mov
push
mov
cmp
add
push
mov
clc
mov
add
mov
push
jg
leave
adc
sbb
pop
mov
push
cli
add
pop
cli
pop
aam
and
sub
add
loope
cmp
jl,pn
aam
cmpsl
out
adc
mov
sbb
push
iret
jmp
rcll
data16
ljmp
inc
mov
int3
push
fcmovnb
mov
jae
add
mov
add
pop
shrl
dec
leave
push
sub
mov
inc
mov
lock
adc
and
in
ss
xor
adc
int3
push
lds
test
jne
add
sub
cmp
jmp
fwait
xchg
push
mov
add
pop
cmpb
test
or
add
mov
and
aam
mov
and
cmp
pop
lahf
sub
das
push
adc
nop
fs
lahf
push
lods
loope
clc
test
repnz
inc
pop
mov
imul
outsl
xchg
xlat
push
mov
das
adc
insl
aas
loopne
pop
xorb
xchg
add
mov
rcrb
stos
dec
or
and
iret
lods
cmp
cltd
iret
or
in
insl
test
loopne
cmc
cmpsb
cli
adc
or
push
icebp
inc
mov
in
mov
jp
add
xchg
fmull
pop
dec
and
add
mov
aad
and
inc
sti
mov
push
lret
mov
and
jmp
jecxz
loope
das
movsb
psubd
sahf
adc
nop
or
push
push
filds
or
or
add
pop
outsb
sbb
mov
adc
xor
insl
mov
push
xchg
addb
and
xchg
xor
cmp
jg
mov
dec
inc
and
int3
data16
jne
fcmovu
imul
daa
push
sbb
mov
mov
mov
sbb
loope
pushf
mov
add
fsts
jp
mul
push
fwait
cli
pop
mov
cmpsl
mov
lret
es
subl
push
dec
add
es
cmp
rclb
out
inc
inc
pushf
mov
arpl
ds
in
push
aaa
faddl
lret
aaa
mov
dec
cmpsb
in
inc
adc
xchg
push
add
lea
hlt
sub
lcall
mov
loop
push
mov
outsb
scas
xchg
cltd
jp
adc
aaa
jnp
fwait
mov
cli
inc
test
sub
xchg
popf
icebp
push
rorl
in
and
mov
push
outsb
bound
popf
push
aam
out
cmp
mov
xchg
push
sbb
mov
mov
xorb
shl
and
leave
in
mov
fistpl
xor
sbb
adcl
jmp
ljmp
roll
add
pop
fldenv
cmp
add
ja
pusha
adc
popf
sub
adc
or
jae
push
aas
lock
loopne
das
pop
mov
cs
xchg
das
push
cmp
fcom
loope
mov
icebp
pop
aam
push
fisubrl
rolb
xchg
out
or
mov
jae
lea
mov
mov
ret
mov
xchg
insl
mov
mov
ret
mov
pop
aad
or
jo
pop
push
push
jne
loop
xchg
into
push
leave
xchg
out
test
inc
pop
js
adc
lea
mov
jns
cltd
xchg
add
imul
mov
outsb
add
cmp
pop
orb
repz
cmp
movsl
dec
scas
fmull
xor
andl
aad
fisttpl
cmp
sbb
daa
xor
xchg
adc
mov
jge
push
icebp
mov
sqrtps
push
insb
pushl
clc
inc
mov
aaa
cs
les
push
xchg
pop
or
sahf
sbb
icebp
adc
mov
xor
cld
fiadds
jp,pn
and
frstor
call
nop
xor
pop
aaa
mov
sbb
scas
mov
pop
sub
cwtl
sahf
or
pusha
mov
push
std
pop
clc
mov
int
lock
pop
in
push
lcall
call
and
push
imul
call
adc
or
jno
push
and
xlat
inc
movsl
in
cmp
fsubrp
xlat
fxch
add
adc
nop
adc
add
loop
repz
cltd
push
adc
mov
enter
pushf
push
movb
sti
adc
dec
jp
push
lock
sub
jmp
movsl
jae
push
push
push
adc
mov
hlt
pop
fbld
push
mov
aam
popl
cli
xchg
inc
fists
sbb
xchg
jb
mov
test
sub
inc
inc
dec
je
test
insb
mov
dec
movsl
or
add
dec
jns
mov
test
xorl
push
sbb
mov
cld
and
pop
fwait
sub
rcrb
aad
loopne
loop
cmpsl
stos
add
roll
pop
sbb
std
mul
into
test
fildll
shr
fxch
nop
ljmp
mov
nop
sub
pop
sahf
lods
pop
jmp
mov
insb
push
aaa
shrl
jmp
sbbl
shlb
loope
cli
dec
imul
adc
fisttpll
inc
mov
jne
mov
mov
fdivrs
or
add
or
mov
cmpb
idivb
push
and
jp
mov
sbb
adc
push
mov
cmp
cmpsl
js
sub
nop
loopne
sbb
dec
and
push
push
pop
arpl
neg
lcall
movsl
imul
std
push
repnz
cmp
jns
fisubs
mov
push
aam
jb
dec
addl
inc
mov
aad
xchg
cmp
sbb
add
mov
or
js
repz
or
cwtl
push
bound
cmc
or
sbb
ja
xchg
jo
frstor
inc
jle
push
xchg
sub
inc
jmp
jne
lret
sub
testl
xchg
imul
cmc
hlt
xchg
push
es
or
idivl
xor
insb
add
in
pop
xlat
dec
xor
data16
enter
ficomps
mov
sub
and
pcmpeqd
dec
shrl
test
jmp
addr16
mov
dec
mov
repz
pop
aam
mov
mov
cmpsb
sub
test
pop
clc
dec
xor
xor
cmp
dec
roll
add
jbe
aad
shl
jl
sub
roll
in
ljmp
cs
and
fisubrs
icebp
lods
aam
ret
add
jl
ffree
adc
and
sub
leave
fwait
jmp
mov
stos
aas
in
fs
out
loope
mov
add
sbb
loop
cmp
inc
cmp
stc
in
mov
push
sarl
mov
mov
mov
mov
pop
cmc
dec
loope
in
pop
lahf
inc
popa
push
mov
xchg
adc
fdivrl
mov
enter
push
gs
les
add
mov
sub
stos
loopne
add
sub
dec
xchg
test
repz
xor
rorl
pop
addb
mov
outsb
scas
xchg
dec
insb
bound
test
mov
ja
mov
pop
nop
xchg
or
mov
scas
inc
in
roll
shrl
fwait
call
mov
lock
sar
add
jo
mov
ds
cmpsl
dec
inc
daa
add
pop
int
in
push
sbb
frstor
rorl
dec
movq
es
hlt
adc
js
or
fsubrl
mov
sbb
xor
mov
inc
in
lret
call
mov
imul
ror
fstpl
adc
loopne
lcall
jg
sbb
mov
cmp
in
mov
dec
pop
xchg
popf
cmp
or
lock
pop
ret
insl
dec
dec
mov
pop
add
sbb
push
and
push
push
mov
fbstp
cmp
les
out
mov
mov
push
xabort
inc
mov
fiadds
out
or
mov
xchg
ds
ss
cld
lret
cmp
mov
shll
fdivrs
xlat
xor
mov
adc
add
inc
mov
ljmp
cli
mov
mov
cmp
aam
sub
mov
lds
outsl
and
pop
pop
inc
xchg
mov
adc
xchg
cli
mov
in
jl
ror
mov
mov
or
fsubl
add
and
fidivrs
sarl
inc
data16
push
xor
push
fcomps
scas
add
sub
xor
cmpsl
xor
push
push
or
mov
or
pop
les
in
pop
pop
pop
inc
mov
ret
arpl
and
cmp
pop
cmp
jl
sbb
insl
outsl
push
inc
or
je
out
movsl
mov
ss
addr16
pop
xor
jle
insl
mov
mov
inc
orb
loope
mov
lcall
imul
pop
jmp
lret
add
push
shlb
insl
je
sbb
inc
lods
fs
and
jo
outsb
sahf
inc
neg
ss
shll
enter
mov
xlat
and
addr16
pop
adc
add
xchg
xchg
push
arpl
fnstcw
add
push
inc
out
mov
es
repz
and
subl
call
cmc
fcoml
lahf
sub
call
lea
out
out
jp
cmpsl
mov
xor
and
ret
xorb
movsb
mov
leave
mov
hlt
mov
lods
lods
aaa
pop
sbb
les
jl
div
cmp
fildl
xchg
imul
js
or
pop
mov
mov
nop
les
adc
cmp
ss
incl
and
xor
fidivrl
sahf
pop
jne
mov
jmp
xor
push
aaa
mov
lods
inc
leave
adc
fsubr
pop
push
xchg
pop
jo
test
aam
push
add
int
xorb
lret
imulb
lods
or
push
ret
jbe
aad
das
fdivl
jnp
push
cmp
jbe
mov
fistl
add
lock
push
or
insl
or
push
adcl
in
and
mov
repnz
sbb
adc
dec
pop
outsl
pop
call
inc
data16
jne
cmp
jle
dec
sub
enter
push
push
mov
mov
nop
push
aaa
xchg
pusha
sub
aad
loop
repnz
sub
push
stc
call
or
icebp
pop
mov
xor
lock
test
outsb
mov
fiadds
test
add
xchg
cmp
xorb
stos
pmaddwd
sbb
cmpsl
addl
out
add
sbb
or
aam
repnz
push
testl
imul
cmp
add
mov
in
xchg
sbb
arpl
rcrl
jno
call
fsubrs
add
sarl
mov
int3
nop
or
cmp
ficompl
shll
push
push
xchg
ds
es
mov
mov
in
rolb
dec
test
jg
fs
adc
sub
mov
orl
dec
fcoml
and
and
popa
jl
lock
incb
andl
add
mov
push
in
or
cwtl
movsl
mov
jae
mov
adc
mov
inc
stc
and
adc
sub
sbb
push
pop
popa
dec
push
lret
repz
scas
dec
fcomi
inc
repz
mov
in
loope
jle
rorb
adc
xor
dec
imul
in
cli
aad
mov
addr16
test
inc
mov
mov
dec
psubsw
and
arpl
scas
jo
xchg
cmp
add
mov
inc
lods
sbb
sti
xchg
push
sbb
fistl
mov
in
or
lods
xlat
mov
mov
shll
xlat
xor
js
shrl
pop
push
rcll
add
ret
roll
out
das
test
loopne
orl
pop
or
test
mov
push
cmpsb
mov
loope
in
mov
test
adc
lds
lret
inc
cltd
jb
cmp
jns
xor
pop
dec
imul
dec
test
cmpsl
ficompl
pop
mov
stos
dec
dec
mov
add
and
xchg
lcall
jmp
inc
inc
push
loope
and
scas
mov
loop
sub
insl
jg
lods
incb
out
sbb
adc
ret
sbb
push
pushf
lods
bound
jmp
xchg
cmpsb
add
mov
cmp
jo
xor
xor
popa
and
testl
negb
leave
add
popf
inc
sbbl
daa
sbb
loope
pop
es
or
mov
gs
pop
dec
and
pusha
mov
and
jbe
xchg
in
jo
inc
nop
adc
sub
jle
lret
in
add
movsl
mov
std
mov
aaa
mov
insl
test
adc
or
mov
mov
push
cmc
incl
in
jp
fldcw
shll
dec
and
arpl
jo
icebp
push
fs
mov
sti
cli
outsb
adc
popf
lret
sbbl
rcrl
mov
and
insl
fst
data16
pop
lahf
inc
rorl
int
outsb
loop
cmp
clc
xchg
repz
movsb
addr16
mov
sbb
push
pop
lea
add
jl
lcall
lcall
les
aaa
cmp
mov
mov
sbb
ljmp
inc
lock
and
movsl
out
inc
inc
adc
lret
sub
sbb
xchg
or
add
dec
sbb
jge
int3
mov
insb
lds
repz
movsl
lea
jno
xchg
add
mov
push
push
jge
cmc
xor
lock
sar
incl
fdivr
mov
mov
mov
push
stos
inc
sbb
insl
dec
push
les
cmpsb
pop
jne
out
imul
cmpsl
je
xchg
mov
add
adc
mov
xchg
mov
or
aaa
dec
xchg
jle
in
imull
sbb
jecxz
movb
push
push
inc
push
fidivrl
call
clc
jg
clc
push
jle
lahf
inc
incl
push
adc
mov
add
std
popa
cmp
shrl
pop
ret
in
testb
xchg
fsubl
sti
dec
dec
mov
jo
aad
rolb
cli
movsl
sbb
enter
and
shll
dec
or
pop
cld
mov
sub
out
in
xor
mov
ja
cmpsb
mov
cmp
int
cmp
mov
cs
jle
cmpsl
add
push
fidivs
ficoml
dec
mov
lahf
sbb
add
mov
lcall
xchg
movsb
sub
fisttpl
sarl
in
add
cwtl
sub
shlb
scas
mov
pop
clc
aam
or
pop
out
lods
lret
sub
push
mov
inc
xorb
cmp
pop
sbb
cmp
icebp
out
mov
lds
adc
cmpsb
sbbl
add
scas
push
pusha
ret
push
dec
dec
out
data16
shr
fstps
cmpsb
into
rol
mov
mull
cmp
jne
jecxz
pop
add
xchg
fcmovbe
sahf
pop
xchg
adc
cld
inc
sbb
xchg
sub
addb
mov
mov
xor
lods
mov
in
cmp
lret
add
sbb
outsl
sub
adc
cmc
fdivrs
push
out
xchg
mov
daa
inc
pop
subl
int3
call
pusha
arpl
lahf
xlat
enter
xor
pushf
xlat
in
jmp
rcl
aad
add
cwtl
add
cmp
mov
add
dec
xor
sti
js
inc
mov
fistpl
push
daa
push
jb
jmp
sub
mov
pop
mov
cmp
lahf
inc
pop
mov
or
lods
call
push
push
mov
negb
in
push
adc
scas
fistpll
cmc
testb
inc
inc
mov
faddl
add
adc
jae
mov
insb
clc
cmp
addb
ljmp
jg
mov
mov
stos
dec
mov
cmp
stos
mov
adcw
lret
icebp
stos
mov
jge
lods
mov
cld
je
stos
in
pop
cwtl
jp
sub
movsl
fsubs
sbb
dec
pop
dec
mov
push
mov
mov
daa
outsb
jns,pn
movsl
sbb
dec
in
mov
inc
cmpl
shrl
stc
test
dec
les
inc
pop
lcall
xchg
insl
xchg
pop
loope
sbb
inc
cmp
or
scas
cmp
popa
les
or
dec
cmp
repz
cld
xchg
in
dec
push
test
jle
xor
xor
xchg
xchg
test
clc
mov
ds
xchg
push
inc
les
test
ret
pop
in
fldt
push
into
cmp
jle
fdiv
ss
loopne
lret
jecxz
xor
sarl
cmp
lds
in
push
lods
scas
add
sub
je
lcall
lcall
push
js
divl
pushf
add
inc
test
cmc
int
mov
out
call
mov
xor
cmpsb
and
sti
shrl
adc
adc
filds
lods
xchg
cmp
adc
fistpll
sbb
lret
stos
lcall
push
aad
lea
add
adcl
mov
rcll
lea
sbb
daa
lods
idivl
addr16
jo
mov
lret
inc
dec
pop
fdivl
cmpsl
adc
outsb
and
ds
stos
jge
xor
mov
push
inc
lahf
mov
mov
sbb
sub
scas
cmp
jp
push
mov
mov
loope
sub
mov
xchg
mov
adc
inc
je
mov
xlat
lds
dec
push
dec
jbe
cmc
add
in
jne
xchg
sti
mov
test
pop
call
and
xor
sbb
push
sub
jecxz
inc
mov
jo
mov
inc
cltd
loopne
pop
sbb
fldcw
sub
sbb
fcmove
jae
mov
ss
ds
cli
pop
or
clc
xchg
xchg
rorl
jb
cmc
cld
std
das
adc
daa
jp
jmp
dec
push
xchg
outsb
xchg
sbbb
cmp
and
outsb
in
jo
rcl
or
push
mov
pop
xorl
sub
pop
pop
push
ljmp
xchg
lahf
xor
scas
add
fwait
pop
xchg
mov
add
aam
rorw
rolb
pushf
add
cli
xor
movl
fwait
mov
mov
cmpsl
mov
push
ljmp
xlat
xor
cs
inc
repz
movsl
cwtl
jns
xchg
or
mov
cmpl
inc
mov
adc
call
lock
cmp
outsb
leave
loope
loop
sbb
insl
xchg
jp
mov
mov
cmp
adc
insb
out
imul
dec
repnz
mov
push
fmuls
or
pop
sub
cltd
dec
fldl
dec
loopne
mov
pop
js
test
inc
mov
dec
test
push
and
add
jp
add
push
mov
cmp
lret
scas
pop
pop
outsb
loope
inc
insl
mov
je
shrl
and
dec
shll
data16
enter
sbb
xor
or
cmp
dec
test
or
test
xchg
xor
rolb
cs
fdivrl
mov
push
and
aam
mov
mov
sub
ret
mov
sahf
inc
decl
push
mov
loop
lea
adc
and
loop
adc
lea
loopne
outsb
jmp
pop
shll
add
sbb
sbb
int3
and
adc
inc
jecxz
mov
jnp
test
nop
lret
xorl
in
xchg
aam
push
mov
data16
fstpl
cmp
clc
bound
mov
arpl
lcall
xchg
sbb
xor
xor
adc
ret
pop
push
inc
mov
mov
add
fs
add
lcall
insl
mov
mov
cwtl
dec
lods
sbb
mov
loop
popf
loop
arpl
test
sbb
xor
call
xchg
mov
out
inc
xor
mov
cs
xor
push
ljmp
fs
inc
shlb
add
lea
sub
lahf
stos
pop
repz
lret
xorl
es
aaa
xor
arpl
out
arpl
mov
test
dec
inc
out
sub
add
leave
mov
lock
mov
mov
adc
lock
inc
mov
sbb
mov
cwtl
out
adc
call
mov
jl
popa
xchg
sub
dec
adc
mov
sub
xchg
add
sub
jbe
cwtl
dec
into
mov
push
inc
lock
fdivrs
and
fldenv
push
dec
call
jecxz
push
notb
cmp
sbb
inc
cmpb
pop
jae
dec
mov
fcmovb
in
jl
push
mov
or
and
test
push
push
mov
xchg
loop
daa
dec
call
or
mov
iret
inc
add
inc
clc
lock
inc
jnp
test
or
fwait
loopne
stos
cmpsb
mov
and
in
scas
mov
sbb
test
sbb
pushf
ss
pop
push
out
push
jmp
test
add
xorl
fwait
mov
out
out
movsb
pop
imul
push
add
xor
test
jb
aas
loopne
sbb
fsubrl
push
mov
jecxz
mov
push
ret
insl
jmp
push
push
cmc
sbb
sbb
aad
mov
add
sub
shlb
pusha
roll
push
dec
iret
and
and
dec
mov
sbb
lcall
faddp
ret
pop
jo
cmp
dec
pusha
cmp
mov
sbb
xchg
xchg
adc
test
jp
fcomp
mov
mov
insl
jge
aaa
lret
xchg
push
mov
and
sti
and
mov
jle
inc
push
mov
inc
jge
cld
subb
xor
push
mov
loop
jno
push
mov
repz
aas
adc
ret
cltd
aaa
xor
dec
sti
dec
xor
mov
mov
inc
pop
loope
aad
shl
outsl
addr16
lcall
inc
sub
addr16
movsb
addb
dec
fldl
lods
loope
adc
cmp
enter
and
sahf
fs
ret
mov
fmul
cwtl
imul
xchg
pop
stc
ds
and
in
sbbb
adc
xchg
ret
ss
add
stos
pop
imul
cmp
stos
out
or
sarl
scas
mov
dec
xor
or
movd
lock
loopne
or
pop
and
sub
movsb
sub
ficoms
cmc
mov
les
insb
sbb
xor
cmp
ret
ss
in
or
push
test
outsb
xchg
sbb
inc
in
stos
pop
push
sub
cmpsl
dec
sbb
xchg
icebp
stos
insl
rolb
sbb
xor
js
out
sahf
jge
and
call
or
lcall
rcr
jecxz
icebp
jo
stc
cmp
nop
fucomi
stc
popf
repnz
mov
popf
pop
push
movsb
mul
xchg
jle
pushf
je
adc
jmp
push
and
jnp
sub
dec
ss
rolb
das
pop
lret
adc
inc
ljmp
xorl
call
jmp
xchg
mul
xor
lods
add
adc
cmpsb
add
inc
sbb
cmpsb
out
shrl
in
out
mov
jns
imul
pop
jg
xchg
add
lds
cmp
push
push
inc
push
cli
lock
je
dec
pop
and
xchg
and
nop
inc
cmp
push
test
fstps
push
mov
lds
sbb
bound
pop
xor
fimull
cmp
add
mov
jbe
loopne
fmull
stos
popf
lods
jmp
test
mov
cmc
xchg
ss
mov
lock
xor
pop
scas
cli
cmp
hlt
in
dec
xchg
andl
stos
or
sahf
push
inc
mov
or
scas
dec
dec
fnstsw
mov
mov
addr16
add
and
inc
rcll
mov
xchg
and
shlb
int
iret
jnp
lahf
js
mov
popl
lcall
das
cli
adc
mov
subl
push
cs
cmp
or
and
push
das
jb
dec
hlt
jne
insl
or
mov
shrb
stc
stos
jns
fdivs
inc
dec
xor
js
aad
fisttpll
hlt
shl
lds
jg
jge
push
jmp
mov
sub
sbb
dec
in
std
jmp
repz
push
jb
mov
mov
pop
in
cmpsb
cmp
and
movsb
and
dec
scas
inc
pop
sbb
int
pop
push
push
push
sarl
fnsave
in
ficompl
subl
movsb
cld
addb
clts
pop
mov
outsl
movsb
sbb
loope
jmp
popf
mov
loopne
paddusb
dec
sbb
imul
adc
aaa
and
ja
sub
popf
or
sti
jecxz
or
xlat
mov
lea
fwait
sbb
pop
movsb
adc
ficomps
xchg
lods
jg
and
push
ss
sbb
inc
push
jbe
rol
cmp
xchg
pusha
add
mov
mov
cmpsl
ja
pop
hlt
sbb
ret
or
and
pop
and
testb
pop
outsb
xchg
stc
repz
inc
add
mov
push
jae
mov
dec
les
mov
loopne
and
imul
pop
lcall
push
rcll
arpl
enter
pop
xor
es
pusha
test
and
push
insl
aas
and
mov
faddl
insl
rcll
push
hlt
movsl
shlb
lret
es
fimuls
mov
or
and
clc
movsl
lcall
aam
dec
cmpsb
push
dec
add
xor
xchg
pop
dec
push
xor
inc
dec
mov
mov
mov
daa
cld
inc
mov
pop
inc
das
inc
push
fwait
adcb
ffreep
hlt
into
aas
push
pop
push
lods
or
sbb
ret
loopne
dec
sub
add
lret
adc
jo
das
push
or
mov
jl
and
push
shrb
push
in
push
sub
jbe
into
sbb
add
cmp
loopne
jnp
mov
stc
cmpsb
xchg
jno
sbb
mov
fldcw
push
fstps
push
je
cmp
push
dec
xor
mov
lods
xchg
push
divl
sub
jb
xchg
outsb
dec
dec
push
jle
mov
packsswb
in
inc
divb
cmp
add
pop
addb
jns
testl
xchg
ljmp
jmp
ja
or
push
sub
inc
arpl
out
push
pop
or
xor
adc
jl
mov
mov
sbb
inc
sub
xor
mov
icebp
and
leave
jnp
jmp
lret
push
into
sbb
or
cmp
testb
subb
bound
js
mov
fisttpll
adc
inc
scas
add
fistpl
hlt
fiaddl
nop/reserved
mov
pop
jg
inc
ds
adc
scas
sbb
sbb
fidivl
mov
sarl
inc
shl
rcll
jbe
and
push
inc
or
push
jecxz
xchg
and
or
leave
sub
push
aam
loop
in
popl
mov
jecxz
mov
clc
sarl
gs
int3
jmp
inc
dec
aad
popa
in
jmp
dec
or
ljmp
pop
cs
fisttpll
add
xchg
sbb
inc
shll
xchg
push
scas
mov
sub
cmpl
in
stos
jbe
call
sub
dec
mov
sub
jb
xchg
fneni(8087
sti
mov
add
mov
xlat
mov
mov
test
push
sbb
mov
and
roll
das
mov
add
xchg
loope
mov
aad
in
shll
or
xor
outsl
jne
repnz
lock
and
add
mov
cmp
les
mov
push
sbb
push
das
mov
add
imul
xor
lods
dec
and
push
add
cmp
push
xchg
test
adc
rcll
xor
fdivl
push
mov
mov
int
cli
lea
cmp
xchg
dec
jle
pushf
inc
push
shll
mov
jl
enter
shr
mov
adc
push
jmp
mov
in
fstpl
mov
rorl
mov
lods
sbb
movsb
or
mov
mov
push
push
arpl
pop
loopne
cmp
jo
les
adc
mov
sub
pop
cmp
in
push
pcmpeqw
in
insb
cltd
cmp
jb
adc
xchg
in
add
pop
aam
leave
cmpl
and
pop
xchg
jo
or
push
mov
ret
mov
mov
repz
cmp
insl
add
js
push
mov
dec
jge
cltd
cld
ret
adc
cmp
imul
mov
bound
mov
cli
add
push
and
push
cmp
out
and
and
cmp
push
inc
je
sti
in
xchg
add
adc
xchg
jmp
das
mov
inc
sbb
ds
adc
pop
mov
sbb
testl
or
in
jle
adc
sahf
jge
sbb
testl
negb
std
in
add
mov
pop
pop
insl
push
loopne
dec
xor
data16
in
sbbb
xchg
jecxz
or
mov
jl
add
adc
lret
test
pop
in
mov
mov
ljmp
lods
pop
jp
sbb
jae
fidivrs
jle
out
jg
jmp
pop
xor
in
add
imul
mov
lcall
fs
pushf
adc
ret
cs
addb
testb
xchg
fcompl
or
jno
sub
aam
mov
push
arpl
xchg
or
pop
sbb
push
subb
sub
fcmovu
sahf
jb
xchg
mov
mov
aaa
pop
jle
insb
fidivl
iret
pop
or
ss
mov
sbb
stos
cwtl
jne
call
and
xor
mov
pusha
cmp
scas
mov
cmpb
clc
xchg
sub
mov
out
push
das
rorl
push
xlat
pop
aas
mov
pop
push
mov
repnz
das
mov
mov
jmp
sub
mov
sbb
cs
imul
pushl
imul
xchg
or
add
push
add
inc
out
xchg
outsb
xchg
lock
in
or
rolb
sti
xchg
xor
sbb
xlat
cmpsb
lods
fisubrs
pop
pop
push
dec
test
jecxz
fsub
dec
sbb
mov
and
push
push
sti
inc
pop
jg
push
sub
leave
jge
inc
cmp
ret
adc
fdivrl
ss
cmp
push
sahf
shlb
fcmovb
mov
hlt
pop
in
xor
xchg
je,pn
jo
cmp
mov
std
inc
inc
jnp
add
push
cld
jne
int3
loop
loopne
jo
aad
pushf
jnp
xchg
jb
or
lcall
fcomps
lret
rolb
ss
sbb
je
mov
dec
or
movsl
push
jmp
test
jb
push
flds
mov
fdivrl
jge
sub
lods
sub
lahf
mov
jg
dec
lret
push
aas
mov
sub
aad
pushfw
push
call
add
and
loope
test
xchg
sahf
mov
fildl
repz
jle
inc
lods
or
inc
cltd
or
leave
aam
jb
xor
aas
mov
mov
mov
je
xchg
leave
mov
js
push
out
and
lock
cwtl
in
scas
imul
pop
xchg
in
aaa
les
add
rclb
cwtl
addr16
add
jecxz
mov
in
movsb
fisttpll
add
sti
jl
inc
fstpt
mov
jae
xchg
sub
shll
jge
cmp
mov
or
sbb
or
test
mov
xchg
daa
iret
adc
movsl
lods
call
fisttpll
push
out
sub
lds
xchg
out
bound
js
jle
hlt
mov
aaa
xchg
lahf
andl
inc
mov
andl
jne
data16
push
or
aad
adc
mov
adc
cmp
lds
dec
inc
jno
push
insb
cmp
popf
push
push
lock
test
ror
test
mov
pop
icebp
fisttps
mov
fwait
add
inc
push
divb
pop
dec
ret
xor
mov
iret
mov
lea
pop
cmp
jmp
out
mov
jnp
dec
das
mov
lods
push
sbb
mov
pop
fsub
pushf
dec
xor
rorb
lret
mov
call
adc
push
sub
inc
fiaddl
mov
xor
mov
arpl
leave
cmpxchg
data16
fsubrl
lods
adc
push
loop
dec
outsb
movsb
cli
test
adc
adc
jmp
in
and
push
loop
add
mov
or
jl
or
pop
flds
dec
arpl
sbb
sbb
rcr
cmp
or
sbb
pop
lock
cmp
xor
or
mov
ds
xchg
call
mov
rcrl
lcall
repnz
xor
jmp
jb
xor
mov
xchg
in
imul
push
mov
push
cmp
jo
iret
loopne
mov
xchg
test
aad
movsl
push
pop
jnp
stos
dec
add
mov
das
insl
mov
in
mov
outsb
decl
std
or
ss
andl
pop
lds
je
sub
cwtl
add
je
fcomps
out
dec
cmp
addr16
pop
pop
pop
inc
rclb
push
and
inc
mov
pop
adc
sub
mov
or
cmp
mov
pop
fiaddl
add
xor
mov
push
dec
ret
scas
push
mov
in
add
cmpsl
mov
xchg
ret
and
loop
aam
outsb
lahf
loop
loopne
push
aas
repnz
fmull
cmp
cmpsb
inc
icebp
scas
shll
sarb
mov
mov
data16
inc
inc
test
push
adc
loop
loopne
add
aas
ljmp
mov
mov
mov
stos
inc
jne
lock
loope
in
adc
enter
clc
divl
or
aaa
popa
sub
mov
or
xor
test
adcl
xchg
push
mov
or
or
lods
sbb
sub
mov
aad
imull
dec
push
sti
pop
xorb
and
push
iret
jmp
lret
cmp
scas
nop
bsr
dec
fcomps
or
scas
ss
mov
sub
ffree
shll
pusha
sbb
loopne
push
nop
mov
dec
push
int3
cmp
ja
or
aam
loope
push
rcr
js
add
add
or
lods
ss
pop
js
jl
mov
mov
clc
jb
xor
adc
cmp
rorl
aam
push
stos
cmp
jb
ljmp
jecxz
pop
outsb
jo
cmp
sub
push
sti
mov
mov
ds
outsl
roll
dec
mov
lds
adc
fadd
sbb
jae
lods
lods
call
jecxz
adc
test
dec
popf
push
xchg
xor
mov
rcll
mov
out
ljmp
and
roll
out
pop
subl
push
jle
adc
and
jnp
jle
arpl
das
inc
mov
mov
pop
fists
sbb
mov
test
mov
pop
mov
xor
test
sub
jmp
les
daa
les
rcrb
cmp
popa
jmp
pop
sub
xchg
and
dec
ss
lcall
mov
pop
imul
mov
fdivrl
adc
test
scas
stos
add
xor
lds
jae
add
and
sbb
sbb
test
adc
lods
mov
mov
push
test
loope
in
pusha
ret
shll
add
xchg
cmc
pusha
xchg
add
popa
mov
in
or
xor
in
pop
xor
ljmp
sub
sbb
sbbl
cmpsl
push
jle
insb
xor
mov
pop
jle
ret
scas
stos
aaa
movsb
jmp
jb
incb
jl
adc
add
loopne
inc
dec
sub
mov
jecxz
jne
dec
pop
add
aad
andl
xor
cs
bound
cwtl
leave
pop
inc
adc
dec
or
sahf
ret
sub
loope
inc
add
incl
push
pop
mov
jge
add
add
imul
outsb
aad
adc
mov
pop
mov
push
sub
mov
insb
mov
push
pop
popf
jae
lret
xchg
fmuls
dec
dec
jmp
xchg
pop
xchg
sbb
mov
adc
or
jae
rorb
ret
ret
add
xchg
shlb
adc
popl
sarb
shll
xor
xor
push
mov
and
adc
enter
into
mov
sub
pop
mov
lods
clc
dec
jns
fcomp
pop
mov
or
inc
cs
sbb
imul
push
jo
lods
test
cld
jo
xor
incb
test
loop
or
adc
loopne
jae
ret
in
clc
jg
into
test
or
outsb
sub
lods
jle
pop
loope
jle
sub
sub
movsl
add
dec
sbb
mov
stos
and
jb
or
fistpl
pop
push
popf
xlat
mov
jmp
repz
pop
out
insl
mov
icebp
sub
call
mov
jle
add
and
cmp
sahf
sbb
inc
inc
in
mov
or
push
xchg
repz
sub
dec
push
dec
push
pop
xchg
shl
lods
adc
sub
jmp
xchg
sahf
pop
push
cmp
dec
rcl
addr16
adc
push
in
cs
lahf
ret
out
sub
rorl
xchg
insb
mov
test
pop
push
stc
xor
sub
sbb
mov
dec
and
jae
push
pop
into
mov
mov
sahf
jbe
pop
jp
sbb
iret
fisttpll
sahf
push
pop
mov
and
popa
out
add
icebp
sub
fistpll
adcb
cmp
fstp
pusha
pop
mov
mov
jge
mov
inc
loopne
xlat
inc
mov
loopne
mov
sbbb
pop
nop
lahf
jb
cs
lret
xchg
adcl
lods
jl
movsl
inc
pop
mov
dec
dec
cmpsl
cmp
js
leave
sub
mov
jne
jns
or
fs
cmp
movb
rcrl
dec
inc
mov
mov
mov
es
jo
clc
ror
lret
cmp
call
in
dec
jb
sub
lcall
adc
adc
add
push
hlt
arpl
jbe
or
ret
loopne
sahf
aam
mov
inc
daa
add
ret
pop
mov
cmp
insl
push
add
cli
add
adc
and
fisubrl
mov
add
repnz
sbbl
lds
sbb
lods
insb
inc
push
sub
mov
adc
and
sbb
inc
lock
lock
loope
jbe
fcoml
adc
shll
js
rcll
dec
shll
and
pop
cli
es
ret
pusha
sbbl
sbb
jnp
sti
cmp
ret
out
popf
push
das
sbb
inc
in
jne
add
mov
xchg
push
xor
pop
cmp
dec
push
push
jp
dec
sbb
add
test
test
inc
bound
imul
adc
loopne
mov
loop
mov
or
mov
push
jmp
jg
jmp
divb
fists
fisttpl
cmp
add
les
pop
js
mov
aas
pop
test
das
jg
or
pop
bound
notb
movl
das
mov
xchg
or
aaa
mov
adcb
outsb
fcmovnu
pushf
inc
and
sbb
mov
and
xchg
fisttpl
and
sbb
nop
sbb
jbe
lds
outsl
nop
in
dec
fs
lea
jmp
inc
xchg
inc
iret
pop
leave
std
inc
mov
push
dec
xor
mov
sub
stos
sbb
jg
mov
cmp
add
push
movsl
addl
inc
xchg
popf
adc
sub
popa
add
lods
jle
push
cs
push
xchg
lock
popa
push
push
repz
pushf
sbb
inc
jno
fdivrs
mov
outsb
loopne
push
je
clc
jecxz
add
lea
mov
test
sbb
insb
inc
pop
or
jle
test
jne
inc
xor
ret
xor
mov
bound
fwait
lea
pop
pop
jns
fdivl
sti
inc
and
sbb
rcrb
out
in
xor
lds
mov
out
mov
cmp
shll
xor
add
lock
xlat
arpl
arpl
cmp
mov
movsl
fwait
rclb
test
pop
dec
xor
jnp
loop
jbe
int
xchg
add
mov
movsb
push
jo
cmp
dec
pop
ds
cmc
ret
sbb
sarl
outsb
cmp
std
outsl
push
inc
cli
and
jge
fs
dec
inc
mov
cmp
cmp
mov
daa
sub
jl
xor
nop
out
sbb
ja
add
inc
dec
flds
pop
shll
int
nop
in
push
shrb
add
and
mov
arpl
neg
movsb
in
shrl
scas
inc
sub
xchg
ficoml
push
rcl
mov
arpl
arpl
stos
lds
sbb
mov
mov
pop
inc
cmpxchg
push
dec
les
hlt
push
dec
adc
je
xlat
popf
dec
test
repnz
mov
nop
or
or
aam
fwait
ds
add
outsb
inc
push
hlt
cmp
xor
adc
push
xchg
loope
orb
sbb
mov
sbb
aas
test
xor
aaa
dec
mov
rorb
mov
jl
adc
fnstsw
sbb
lahf
mov
mov
cmc
out
xchg
pop
sub
add
inc
cmpl
jb
and
inc
jle
aam
sbbb
pop
aas
sbb
lds
hlt
pop
lret
pop
nop
lret
lret
cmp
dec
xor
movsl
mov
out
fdivrs
hlt
hlt
hlt
lods
xchg
push
or
outsb
mov
jns
push
movsb
mov
xor
movsb
sbb
mov
test
xor
pop
int
jl
inc
addr16
cmpl
cwtl
cmp
cmc
sub
dec
dec
pop
ja
add
pop
aam
sub
mov
shrl
adc
add
jecxz
adc
push
fadd
xchg
lods
pop
mov
daa
hlt
or
and
pusha
cmp
mov
mov
jbe
adc
mov
inc
cmp
dec
divb
ror
std
push
leave
int3
test
scas
out
sbb
mov
sbb
negb
pop
arpl
fiaddl
cli
jo
and
push
jecxz
fnsetpm(287
jbe
jecxz
xlat
subb
repnz
je
inc
cmp
mov
rclb
inc
cld
xchg
shlb
xchg
movsl
pop
dec
lret
xchg
adc
jle
nop
insb
std
loop
push
dec
cld
adc
mov
mov
push
mov
orb
mov
adc
pop
xor
add
mov
jne
rcrb
push
jne
scas
adc
fcompl
jo
iret
iret
add
jnp
and
jmp
pop
pop
imul
test
pushf
sti
xchg
jnp
data16
xchg
pop
jne
out
cwtl
das
test
jo
outsb
je
mov
fnsave
cmp
push
push
add
adc
inc
xchg
push
lock
hlt
sub
bound
out
jmp
insl
sub
gs
xchg
loopne
xchg
ljmp
mov
shr
xchg
inc
inc
push
jno
add
out
push
mov
pop
loope
fsubl
pop
inc
mov
arpl
pop
scas
pop
inc
jl
pop
dec
aaa
testb
mov
outsl
andl
stc
xchg
add
mov
scas
adcl
mov
push
add
icebp
sbb
push
mov
pop
mov
scas
add
mov
mov
cmp
aad
clc
repz
sbb
or
dec
mov
mov
inc
aaa
xor
inc
lret
cmp
test
cmpsb
xchg
cs
aad
or
adc
outsl
xor
in
adc
call
shl
jb
cmc
inc
bound
inc
jne
loope
pop
and
pushf
push
mov
je
cli
push
js
nop
xlat
mov
notl
daa
or
jg
push
mov
pop
shrl
hlt
push
lcall
bound
adc
adc
inc
pop
int
testl
pusha
fldcw
ss
imul
inc
fstl
sbb
or
inc
incl
jge
push
or
sbb
sbb
push
lods
and
jp
add
add
pop
test
test
sub
movsl
cmpl
jo
or
jns
xbegin
arpl
jb
jnp
inc
dec
das
outsb
cmp
loop
test
lods
sub
mov
push
inc
fldl
and
xlat
mov
testl
cmp
mov
xor
int3
add
stos
and
jmp
xchg
xchg
arpl
mov
sbb
stos
and
bound
rolb
ljmp
jo
insl
inc
pop
sbb
sbb
mov
inc
inc
lea
andl
mov
jb
stos
add
mov
or
add
test
pushf
xlat
cwtl
mov
fwait
shrb
in
or
popf
test
cltd
inc
pop
cli
jb
pop
shrl
sbb
sub
pop
ret
fdivl
cmpsb
fisttpl
mov
adc
or
xchg
xchg
bound
ljmp
cli
sub
jmp
cmp
pop
lret
push
es
mov
mov
or
dec
xor
pop
das
push
or
pop
lret
adc
jo
jl
xchg
jl
js
pop
icebp
cmpl
mov
mov
xchg
mov
int3
push
mov
push
mov
xlat
dec
pusha
jmp
xlat
and
loop
cmp
and
mov
fldt
cli
mov
popf
lret
cmp
ficoml
inc
ljmp
loop
xchg
fnsetpm(287
xchg
stos
jo
sbb
push
mov
mov
xor
inc
pop
imul
cld
shll
adc
dec
xlat
loope
sbb
movsl
pop
filds
push
sbb
daa
les
in
sbb
add
jl
jp
mov
mov
aad
lea
cld
inc
xlat
fmul
pop
icebp
jecxz,pn
sbb
push
nop
mov
pop
clc
call
cli
mov
jae
test
push
xchg
mov
movsl
lods
scas
xchg
iret
repz
scas
mov
pop
js
push
rcll
sub
clc
sbb
mov
inc
pop
bswap
loop
pop
fsub
pop
push
inc
pop
push
not
jmp
add
std
fisttpl
in
int3
cmp
jmp
jne
addr16
sub
add
rcrl
ret
push
ret
test
mov
or
andb
adc
lods
pop
push
xchg
clc
loopne
bound
rcrb
push
cmp
stos
imul
cld
jnp
test
ret
lahf
pop
inc
dec
and
sub
fidivrs
xchg
int
adc
pushf
inc
jg
adc
inc
add
mov
jb
adc
fcmovbe
push
mov
lock
mov
sbb
insl
fwait
lds
test
xchg
rcrb
outsl
cld
sbb
cmp
sti
js
movsb
outsl
or
inc
rol
lahf
adc
or
mov
lret
push
lds
hlt
outsl
rolb
xor
pop
fiadds
and
mov
pop
dec
adc
outsl
or
cmp
mov
xor
add
ret
test
sub
xchg
sbb
out
fistpl
adc
jp
rolb
test
add
push
xchg
outsb
pop
insb
outsb
jo
lcall
fildl
cmp
mov
lds
xor
push
lock
jbe
fldl
dec
sbb
pop
arpl
loop
dec
ret
add
mov
pop
dec
out
leave
mov
xchg
adc
and
xchg
xor
jne
xchg
inc
xchg
jle
int3
mov
push
cmpsb
lods
ret
insl
cmpsl
push
movl
es
jmp
hlt
jmp
push
pop
call
into
movb
loope
js
mov
imul
addr16
sbb
js
xchg
fsubrp
jecxz
push
stos
or
lea
mov
inc
orl
xlat
xchg
fwait
adc
fsubrl
insl
adc
push
xor
rorb
xor
cmp
pusha
into
xor
sbb
sbb
arpl
or
xlat
and
in
aaa
push
popa
outsb
cmc
ror
add
mov
ror
nop
cli
adc
pop
mov
callw
mov
into
mov
sub
jp
push
insl
or
mov
rcr
xor
mov
dec
mov
or
sbb
jae
xchg
sbb
mov
pop
push
xor
rolb
push
loope
inc
sub
jbe
addr16
push
cmp
cmp
xchg
bound
pop
aaa
mov
xor
enter
push
pop
pop
les
daa
daa
sbb
cmp
fcoms
std
rol
xor
sbb
push
call
mov
popf
mov
or
mov
dec
mov
in
fimuls
mov
gs
gs
xor
jo
sti
stos
ret
shlb
mov
aad
xor
bswap
in
xchg
rcr
add
loope
in
cmpsb
mov
gs
ret
cmp
mov
pop
dec
push
dec
es
sbb
dec
dec
das
jae
insb
fistpl
xchg
shlb
add
mov
or
pop
icebp
jno
xchg
call
xlat
out
cmp
imul
lods
and
aaa
fiadds
push
mov
sti
call
shlb
imul
or
mov
rorl
dec
xchg
leave
jo
mov
push
sub
cmp
adc
xor
sbb
mov
daa
jne
add
pop
andl
orb
adc
sub
test
ret
rol
repz
xchg
and
outsb
lock
pop
sarb
aad
add
mov
jl
mov
cmp
rolb
push
jne
cli
sbb
out
pop
cmp
add
dec
push
mov
push
inc
popf
mov
xchg
add
movsb
xchg
in
dec
pop
test
arpl
cmp
sbb
push
inc
push
push
xor
xchg
push
inc
cmp
pusha
and
jnp
lock
cli
call
pop
xchg
sbb
imul
bound
fwait
mov
mov
lods
add
lock
mov
ret
pusha
push
inc
adc
es
imul
inc
jnp
adc
xchg
movsl
sbb
sub
mov
jbe
in
lock
mov
aad
ret
inc
adcb
sub
mov
mov
adc
arpl
mov
mov
xchg
adcl
test
fnsave
cmp
xchg
inc
lds
xor
ret
mov
push
pop
sub
inc
jne
jne
je
lahf
adc
in
jp
aas
sub
je
push
inc
lcall
imul
xor
and
fimull
test
pop
aas
fadds
mov
dec
mov
aam
cmp
arpl
jo
pop
push
leave
out
xchg
pop
add
xchg
test
push
lcall
add
pop
or
ja
hlt
pop
mov
outsl
in
inc
adc
rcl
dec
mov
lds
xor
hlt
pop
addr16
or
mov
cmovne
rcr
xchg
cmpsb
mov
popf
push
iret
jmp
jnp
inc
cwtl
add
fistl
aad
mov
push
dec
mov
add
jge
cmp
flds
dec
or
sub
cmpsl
sub
adc
push
call
scas
or
pop
push
mov
sbb
outsb
arpl
dec
pop
das
jecxz
xchg
cmp
jbe
orb
and
inc
fnsave
add
in
mov
and
sahf
and
fsts
sbbb
outsl
cmp
stc
mov
orl
xchg
andl
jo
jecxz
out
lret
ret
addl
pop
mov
outsb
pop
clc
shll
adc
popf
hlt
push
and
loopne
fcmovb
repz
lds
loop
in
imul
out
jl
xor
or
cmp
jge
aaa
jecxz
add
pop
xchg
xorl
dec
adc
dec
shlb
repnz
loopne
push
push
pop
jmp
mov
pop
cli
push
push
xchg
pop
pushf
jbe
shl
sarb
popa
mov
pop
daa
jb
push
adc
mov
xchg
negb
push
push
scas
insl
mov
add
xlat
sbb
jno
xor
xchg
push
addl
daa
cli
daa
loopne
inc
push
and
pop
xlat
pop
in
or
pop
lock
je
mov
push
jl
xchg
or
mov
mov
xor
pop
jnp
fwait
jl
pop
insl
stos
push
jp
notl
mov
divb
push
mov
pop
dec
dec
cmp
xchg
pusha
ret
adc
pop
scas
inc
clc
je
hlt
pop
jmp
mov
jge
dec
pop
cmpsl
nop
cmp
enter
and
movsl
and
aad
les
outsb
mov
fdivr
sub
push
jae
popa
ret
sbb
ja
fwait
div
push
rcr
fwait
mov
gs
mov
lret
push
pop
ds
ret
loope
das
inc
xchg
adc
stos
mov
sub
push
cs
cmp
mov
imul
jno
rcr
jbe
push
lret
out
and
mov
mov
scas
pushf
adc
sub
inc
insb
jbe
xor
clc
and
test
les
je
sbb
ds
dec
outsl
pusha
cmp
inc
arpl
lods
mov
insl
sbb
xchg
or
scas
pop
imul
mov
addb
js
rcrl
lret
cmp
cwtl
push
pop
cmc
lahf
lahf
clc
int
mov
lcall
mov
andl
xchg
movsl
ret
fidivl
vmread
push
aam
xor
loop
mov
mov
out
adc
ljmp
push
cmp
fwait
mov
ja
push
scas
or
je
xchg
popa
stos
jbe
lret
bsr
or
mov
sahf
mov
and
and
xchg
sub
cld
cmp
shrb
call
imul
and
sahf
sbb
push
or
add
call
push
xor
jnp
scas
inc
bound
mov
pop
jbe,pn
cmp
dec
sbb
sub
mov
cltd
adc
int
and
push
daa
scas
jne
push
adcb
mov
sbb
sbb
shll
inc
mov
jne
add
jo
ss
add
and
out
pop
outsb
faddl
mov
xchg
push
xchg
cmp
and
adc
lret
testl
mov
ret
test
cmpb
mov
xchg
pop
xlat
or
cmpsb
into
clc
orl
insb
push
repnz
cmc
popf
aad
adc
out
mov
stos
dec
adc
scas
lret
lea
loopne
xor
sub
cs
mov
or
push
lcall
adc
aaa
sbb
and
popa
int3
adcb
cmp
cmpsl
in
and
and
push
add
and
fidivs
aas
mov
pop
pop
pop
ds
in
cmp
fdivrs
div
orb
pusha
shll
jbe
bound
cli
sbb
push
push
xchg
sbb
add
mov
or
repz
or
push
sub
rolb
cmp
scas
icebp
inc
jl
sbb
add
mov
test
in
pop
mov
daa
rcll
iret
add
aad
cmp
cmp
fwait
js
pop
add
popf
fistpl
push
aaa
mov
fprem
adc
pop
sub
int3
adc
lret
jbe
mov
fwait
out
scas
mov
call
xorl
mov
in
shlb
popf
jne
insl
pop
jne
pop
sub
xor
mov
xchg
cmp
movsb
adc
push
cwtl
cld
push
mov
mov
pop
in
jp
testl
or
cmp
lods
pop
sbb
lret
or
adc
xcrypt-ecb
cmpsl
or
push
jne,pn
adc
andb
push
lret
xor
and
add
in
pop
ja
xchg
dec
jmp
in
mov
xchg
mov
cmpsl
push
cmp
stos
add
adc
fldt
cmp
push
repz
mov
jbe
fimull
jmp
xorb
push
pop
lea
inc
mov
push
mov
pop
loop
or
sbb
inc
mov
inc
addr16
outsl
inc
je
sbb
xchg
xchg
call
scas
subl
lock
ss
cmp
sar
dec
inc
mov
pop
and
fcmovb
fsubrl
add
mov
in
fsubrs
sbb
popa
or
push
out
lahf
cmp
cwtl
inc
inc
lds
sub
incl
cld
push
arpl
push
push
inc
dec
dec
push
outsb
jns
dec
in
mov
dec
imul
ja
outsb
jb
xor
arpl
dec
inc
dec
inc
ja
sbb
movsl
xor
bound
data16
sub
addr16
jae
popa
aaa
jle
loop
je
popf
push
fs
xor
ja
adc
dec
jno
mov
das
cld
fists
addr16
push
je
inc
dec
push
push
dec
dec
push
pop
push
clc
call
push
dec
push
push
dec
pop
inc
inc
mov
inc
insl
inc
xor
xor
jo
insl
outsl
pop
jp
cmp
add
xor
push
xor
outsb
jno
addr16
dec
lcall
gs
jo
inc
inc
fwait
imul
or
in
push
mov
in
in
dec
dec
inc
or
dec
inc
or
insb
inc
imul
xor
lods
lock
or
mov
outsl
jg
fistps
inc
dec
gs
imul
je
mov
in
dec
dec
pop
dec
push
inc
push
inc
inc
pop
sub
xor
jns
push
push
cmp
je
dec
dec
xor
sarl
mov
jbe
imul
and
jbe
xor
xor
xor
inc
inc
adc
or
aaa
xor
in
fcmovnbe
ss
aaa
inc
push
cmp
xor
cmp
add
mov
jo
jae
jns
bound
ja
arpl
push
ljmp
jae
lds
inc
push
push
ja
arpl
inc
js
inc
pop
cli
jbe
sub
xor
jne
jo
push
insb
insb
outsb
es
jns
outsl
les
xor
pop
fcmovnu
pusha
xor
xor
add
push
jbe
adc
pop
lea
push
insl
mov
inc
flds
dec
dec
pop
push
pop
sbb
negb
inc
dec
push
addr16
or
movsl
mov
jo
lcall
fs
pusha
sbb
jl
inc
test
dec
xor
push
xlat
mov
pop
outsb
xor
sub
arpl
xchg
mov
push
dec
push
adc
dec
pop
popa
push
outsl
fistps
arpl
arpl
ss
bound
fs
pop
outsl
xor
pop
inc
cmc
mov
pop
js
inc
dec
out
push
inc
dec
cmp
imul
in
jno
xor
push
push
dec
inc
dec
push
mov
jb
scas
shlb
jne
jo
xchg
sub
or
pop
enter
std
inc
popa
arpl
jb
or
bound
cs
testl
jns
sub
mov
addr16
jno
ja
ja
push
jp
xchg
outsl
popa
loope
ret
xor
ja
popa
imul
dec
fiaddl
dec
adc
insl
mov
inc
imul
inc
bound
sbb
or
ja
xor
lock
xor
xor
test
dec
dec
mov
push
push
inc
mov
inc
arpl
mov
arpl
push
sub
dec
inc
dec
mov
mov
sbb
jno
cmp
xor
jno
fcomp
jle
inc
cmp
jbe
xor
jo
xor
fnstsw
inc
gs
pop
jno
jns
fs
push
push
test
inc
push
jb
outsl
jo
frstor
rol
xchg
dec
inc
adc
rolb
push
inc
js
push
dec
in
push
outsl
xchg
push
test
test
jo
mov
ret
fildll
popa
popa
loop
jle
inc
arpl
fstp
add
addr16
imul
bound
pop
insl
mov
jne
push
mov
fildll
jns
aaa
push
inc
push
push
xor
dec
push
push
push
fimuls
sub
mov
lcall
inc
inc
push
push
pop
dec
dec
inc
pop
shlb
jo
inc
bound
jne
pop
push
out
fs
sbb
jo
bound
cmp
ss
xor
jbe
push
into
xchg
push
dec
jno
insl
ss
mov
mov
dec
inc
inc
push
push
dec
inc
xor
inc
or
dec
inc
jno
cmp
inc
xchg
mov
leave
and
jns
jmp
ss
xor
jno
dec
popa
insb
inc
inc
sbb
pop
add
push
pop
cmp
mov
fs
mov
mov
je
xor
jb
push
js
dec
js
nop
xor
aaa
jbe
mov
mov
stc
hlt
dec
dec
outsb
jne
incl
push
pop
push
jno
xor
gs
jmp
mov
sub
xor
arpl
outsl
push
sub
or
shll
lods
jb
inc
dec
je
insb
std
mov
mov
bound
aaa
jo
inc
repz
xchg
aas
jbe
push
ds
dec
add
mov
and
jb
push
jbe
xor
aaa
into
ss
ret
in
push
inc
dec
dec
pop
js
dec
xor
pushl
outsl
push
inc
inc
dec
ja
push
mov
push
pop
inc
fs
jne
pop
movsl
jbe
jns
inc
jns
cmp
rolb
outsb
je
push
bound
push
bound
faddl
hlt
rorb
aam
dec
dec
dec
sbb
aad
mov
outsb
adc
or
jo
ret
push
inc
insl
dec
popa
jo
push
xor
lret
lock
pop
push
inc
jns
jne
outsl
outsl
jae
cmp
jg
jo
je
mov
imul
dec
repnz
push
push
and
mov
pop
push
jne
add
fimull
sbb
mov
stos
inc
sub
outsl
sub
dec
scas
imul
jno
push
xor
push
addr16
push
adcl
mov
jmp
cmpsl
push
int
movsl
add
cmp
outsl
xor
push
jmp
pushf
adc
push
pop
add
jno
dec
insl
aaa
dec
imul
inc
jno
dec
sbb
rcrb
sbb
and
ss
sub
in
jae
mov
insl
mov
sub
repz
inc
aam
ret
imul
dec
imul
lods
lock
cmp
and
or
pop
popa
dec
pop
lds
dec
aaa
pop
aad
insl
dec
aaa
pop
jno
adc
jb
push
mov
mov
insl
je
or
or
inc
cltd
data16
mov
dec
ss
jbe
pop
push
inc
mov
pop
inc
sbbl
pusha
mov
ja
push
sbbl
fs
out
pop
inc
add
push
shlb
mov
gs
push
js
dec
or
push
and
xchg
ficoml
outsb
jb
jne
mov
dec
mulb
inc
std
push
pop
pop
aam
arpl
mov
push
adc
dec
in
mov
mov
je
outsb
dec
xlat
imul
gs
stos
fwait
addl
mov
mov
xor
or
sub
sub
push
pop
mov
ja
jg
mov
inc
adc
imul
push
and
mov
add
pop
fmuls
add
scas
fneni(8087
sbb
jae
fldl
jo
std
jbe
pop
xor
jno
mov
or
imul
movsl
mov
xor
add
insl
js
lods
lock
mov
je
xor
dec
adc
je
or
jp
pop
in
push
mov
push
in
inc
dec
js
jp
lods
sbb
adc
dec
dec
dec
jb
push
jno
fsubrp
push
jbe
xor
sbb
dec
mov
pop
in
leave
push
rolb
das
les
mov
dec
inc
dec
out
cs
les
add
push
or
sub
push
adc
aas
xorl
inc
inc
push
ret
inc
sbb
ret
pop
dec
xchg
dec
mov
lea
dec
mov
stos
lock
xor
shrl
push
xor
jmp
cmp
dec
push
pop
cmp
adc
ret
jo
xor
fstl
sbb
jns
jbe
insb
add
insb
lock
outsl
jno
push
add
inc
cmp
push
pop
push
mov
adc
jmp
insl
cmc
lea
shrl
jns
inc
rclb
sbb
jb
xor
push
ss
mov
jo
and
jae
pop
insb
insb
aaa
ja
inc
imul
ss
push
sbbb
cmc
sbb
bound
outsl
jbe
outsb
lods
push
mov
and
mov
dec
pop
js
cmp
add
shrl
push
je
rorl
test
mov
mov
outsl
add
xchg
cwtl
ret
pop
fildll
push
pop
stc
lods
imul
xor
int3
push
mov
sub
mov
xchg
sub
mov
movsl
sub
dec
lods
outsl
or
pop
dec
xchg
jae
cli
mov
mov
dec
xor
dec
pop
dec
lock
jo
sub
xor
push
push
dec
inc
test
or
xchg
cmpb
or
or
fidivl
pop
push
pop
dec
outsb
push
pop
mov
lret
push
jp
pop
mov
fdivrl
push
clc
je
push
pop
sub
and
test
sub
sbb
fdivs
orb
insl
lea
push
inc
jmp
arpl
or
outsl
and
pop
bound
sub
jb
sarb
xor
pop
inc
int3
repnz
jns
lret
rep
mov
jg
rol
pop
dec
js
inc
jno
dec
imul
add
xor
or
jle
pop
push
sub
pop
loopne
scas
test
lea
xor
pop
xchg
ss
mov
inc
or
dec
pop
aas
push
inc
popf
adc
sub
jl
sub
jno
call
loope
push
and
inc
sahf
sbb
movsl
xchg
mov
imul
bound
dec
push
and
and
int
cmp
lcall
jo
outsl
push
inc
pop
cwtl
outsb
jbe
inc
jb
push
dec
pop
add
push
jo
push
mov
js
outsl
insl
dec
bound
adc
jne,pt
push
ss
test
push
outsl
jb
inc
arpl
dec
mov
stc
outsl
mov
jno
xor
push
insl
sbb
mov
imul
sbb
push
jbe
js
adc
aaa
mov
dec
push
pop
dec
sbb
add
movsl
sub
xchg
gs
arpl
mov
push
inc
inc
notl
test
les
or
inc
lock
hlt
insb
sbb
sub
xchg
arpl
loop
ret
xchg
dec
js
dec
jge
mov
mov
mov
sub
dec
in
add
arpl
jnp
fisubrl
imul
jo
scas
ja
or
inc
dec
push
ja
or
test
test
movsb
and
je
sub
outsl
insb
add
pop
pop
pop
cmp
insl
mov
dec
dec
push
push
fcoms
dec
les
popa
call
test
or
mov
mov
sbb
orl
push
fs
lock
and
and
pop
sub
fs
arpl
push
add
ja
jno
inc
sub
fsubrs
movsb
jmp
sub
mov
dec
movsl
push
ss
jo
inc
insl
movsb
js
sbb
mov
or
push
jno
lea
lods
flds
jbe
push
aad
push
addl
insl
test
imul
pop
dec
insl
lock
push
pop
sahf
clc
mov
mov
push
pushf
mov
out
insl
test
add
fs
fistl
push
push
dec
out
inc
push
pop
mov
push
insb
push
outsb
inc
pop
push
imul
lods
dec
pop
cli
jae
dec
dec
out
push
sub
sbb
cmp
ret
in
or
test
mov
mov
push
pop
mov
cld
push
sbb
data16
outsl
imul
push
mov
bound
arpl
push
insb
inc
jns
adc
rcrl
rclb
push
xchg
ret
add
push
ss
push
dec
inc
inc
dec
outsl
add
xlat
imul
push
test
iret
inc
xchg
xlat
xchg
push
add
pop
dec
inc
push
mov
push
or
dec
jo
push
addr16
shlb
ss
ret
add
pop
arpl
pop
icebp
pop
or
mov
pop
and
ss
xor
outsl
add
sub
dec
or
mov
push
push
outsl
add
int
push
sbb
cmpsl
xor
pop
mov
pop
mov
js
lods
lahf
test
mov
inc
push
pop
push
push
mov
dec
push
and
out
rcr
mov
xor
pop
sub
push
xor
push
xor
testb
sbb
dec
push
push
in
aam
push
fldt
sub
or
pop
mov
ret
inc
fstpt
arpl
xor
push
popa
test
jle
add
push
or
dec
addr16
loopne
pop
stos
inc
and
popa
mov
imul
push
jo
xor
xor
adc
cmpsb
pop
mov
cli
dec
jno
out
push
ss
push
mov
xor
push
daa
aaa
clc
sub
pop
inc
mov
cs
xor
in
addl
insl
push
outsl
or
js
inc
push
or
pop
fimull
sub
ja
popa
mov
inc
cli
dec
dec
push
push
dec
or
inc
fldt
ja
jl
sbb
jne
out
pop
mov
adc
jmp
jp
mov
mov
addr16
outsl
pop
push
xchg
ss
xor
jae
lea
xor
mov
popa
pop
sub
jae
dec
push
push
stos
push
mov
push
js
mov
jns
push
xor
mov
pop
dec
inc
dec
jns
push
push
push
scas
inc
movsb
inc
rcr
xchg
mov
loope
sbb
inc
adc
aam
aas
dec
jns
push
dec
push
cmc
inc
jnp
or
cmc
outsl
pop
inc
inc
or
shrl
and
inc
int
mov
cmp
outsl
fcmovnb
or
xor
dec
lods
push
lods
or
push
mov
sbb
push
pop
dec
pop
inc
cmpsb
dec
dec
fbstp
cmc
outsb
push
push
sbb
push
jecxz
shrb
mov
push
movsl
inc
jb
push
arpl
arpl
imul
push
push
mov
push
pop
stos
dec
lcall
jo
inc
cs
hlt
push
ja
mov
es
xchg
dec
in
pop
test
inc
push
dec
mov
push
shlb
mov
subl
push
cwtl
push
jbe
mov
inc
ss
js
inc
mov
loopne
dec
stos
inc
stc
pop
push
rcl
lock
add
jae
push
and
add
xchg
addr16
add
jb
outsb
inc
jg
jo
outsb
adc
jo
gs
jb
arpl
fcmovnb
incb
fs
jae
cmovge
jne
dec
popa
outsb
fs
and
or
jb
add
jle
mov
cs
xor
jne
sbb
add
or
sti
cld
xchg
sub
push
pop
dec
add
jno
les
fbld
sidtl
add
in
rolb
jmp
add
add
iret
gs
or
cmp
add
ror
mov
sbb
xor
pop
jae,pt
flds
add
inc
sub
pop
sarb
rolb
xor
sub
les
lret
flds
and
jb
ds
sti
mov
das
enter
xor
push
push
jmp
insb
inc
cs
push
pop
xor
test
daa
rorb
or
dec
leave
mov
dec
jle
add
js
test
add
add
add
adc
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
xchg
out
and
xchg
dec
ret
sub
add
fldt
xchg
rorb
pop
ret
or
and
xor
outsl
and
sahf
fs
shr
test
rorl
inc
sti
or
inc
rorl
push
les
cmp
jg
adc
push
jne
sbb
mov
xor
addr16
inc
push
flds
addr16
ja
mov
and
and
inc
lret
mov
sbb
xchg
sti
or
cmpsl
bound
pop
cmp
pop
mov
outsl
adc
sti
or
push
sbb
fwait
into
daa
mov
push
push
and
cld
paddsw
mov
sti
adc
movsb
inc
fsubrs
fisttps
bound
push
jbe
pop
cmpsb
arpl
arpl
xor
add
pop
lock
xor
stos
cmp
or
fidivrs
sbb
js
mov
ljmp
jo
pop
jbe
and
pop
fcoml
dec
out
pop
adc
xchg
mov
dec
leave
xor
mov
ja
in
ja
mov
sbb
lcall
les
push
cmp
or
fsts
out
data16
jb
push
pop
bound
les
mov
adc
les
stos
inc
nop
sbb
aaa
std
or
enter
out
dec
mov
mov
adc
repnz
mov
dec
bnd
jp
enter
adc
das
les
jne
adc
pop
cmpsl
into
pop
inc
push
fistps
adcb
push
mov
pop
pop
add
adc
loope
cwtl
sub
inc
pop
pusha
cltd
sti
je
mov
mov
or
popf
cmp
sub
pop
lret
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
sbb
add
add
fdivl
add
insb
push
push
add
add
add
add
add
add
addb
add
clc
add
addb
add
add
addb
add
jo
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
jl
add
push
add
add
add
add
popf
add
test
add
add
add
mov
add
add
add
sbb
add
add
add
add
fcoms
add
popa
add
add
add
add
sbb
add
add
inc
push
add
test
jp
jmp
sti
push
add
sub
ljmp
adc
decl
movsb
inc
repz
xor
dec
enter
jmp
jmp
incl
loop
call
xchg
hlt
addps
cwtl
pushl
dec
xchg
call
cli
inc
pop
les
test
call
jmp
in
jmp
ljmp
scas
xor
inc
and
jle
call
les
outsl
das
decl
cs
incl
lret
lcall
imul
or
decl
cmc
inc
loope
lcall
dec
xor
jg
jmp
jmp
jmp
inc
dec
lcall
mov
jle
ret
cmp
jl
dec
ljmp
out
push
out
add
xor
sti
add
pop
inc
xchg
pushl
mov
ds
push
mov
push
incl
cmp
lahf
ret
lods
ljmp
aaa
call
adc
incl
cmp
movsl
xor
lcall
add
iret
incl
lcall
inc
or
incl
incl
dec
das
pushl
ljmp
shr
xchg
dec
jae
sahf
call
jne
push
dec
out
jge
inc
jmp
sbbl
call
ds
call
xchg
into
push
ljmp
jg
ljmp
jmp
repnz
push
push
popf
xchg
mov
lcall
pop
fs
xchg
sub
inc
inc
jne
call
cmp
or
imul
xor
sti
mov
mov
gs
fiaddl
incl
mov
movsb
insb
push
jl
decl
incl
call
incl
jmp
mov
push
push
cmpsb
and
mov
mov
call
xchg
clc
call
jno
cmc
jno
jmp
outsl
pushf
xlat
jnp
call
stos
ljmp
push
lcall
xchg
incl
ret
adc
jmp
loopne
pop
push
mov
out
inc
in
outsl
fstpt
mov
call
sbb
add
call
dec
stos
cmp
inc
clc
jae
or
jnp
xor
cmpsb
enter
fnstcw
gs
jle
call
fildl
jmp
js
and
cs
push
inc
inc
lcall
arpl
ljmp
js
pop
jmp
inc
mov
sti
or
xchg
fiaddl
sar
xor
call
decl
imul
insl
pushf
inc
pushl
mov
cmp
cmp
call
imul
imul
mov
call
mov
jl
xchg
int
jbe
ret
and
xlat
sbb
fldcw
lcall
push
fisttpll
xchg
incl
push
sub
pushl
mov
clc
xchg
in
xchg
jmp
push
mov
stos
jp
jl
and
xchg
aam
aam
in
ljmp
call
in
cmc
inc
das
sbb
cmpsl
stos
jge
ljmp
inc
call
js
pushl
ljmp
sti
push
jne
loopne
pushl
call
call
cmpsb
xchg
call
sbb
mov
sbb
popf
push
add
int
pusha
sar
lock
inc
test
jnp
dec
cmp
movsb
call
pop
pop
repnz
decl
jmp
push
fisubrl
mov
rclb
or
out
push
jge
pop
int
mov
fs
imul
mov
loop
pop
pushl
xchg
decl
fs
ret
cld
pushl
ljmp
fdivl
mov
xor
lock
out
jmp
in
call
and
aas
test
jmp
lcall
call
mov
ret
jg
jp
ljmp
and
repnz
sahf
ja
sti
lcall
inc
incl
mov
pushl
faddp
movsl
ljmp
ljmp
incl
ljmp
aaa
repnz
fidivrl
js
jmp
ja
cld
cmp
incl
adc
incl
push
mov
add
adc
repz
cli
xor
decl
mov
push
push
bnd
or
arpl
decl
stos
jmp
aam
or
arpl
xor
es
push
mov
ljmp
ja
xor
pop
add
aam
incl
in
call
mov
shll
sbb
scas
pop
cmp
mov
lcall
pushl
out
pushl
stos
pop
add
frstor
or
js
call
addr16
xor
pusha
fbld
jmp
mov
sbb
shl
adc
adc
js
mov
je
jae
sar
jl
je
push
mov
lods
loop
ljmp
mov
aaa
mov
shlb
leave
mov
inc
xchg
aas
push
in
test
sub
mov
cwtl
ljmp
fadds
or
vsqrtps
incl
jmp
mov
imul
lcall
or
xor
lahf
inc
pop
sub
icebp
pop
mov
test
decl
call
and
pushl
decl
adc
int3
jnp
dec
lcall
decl
dec
push
mov
jmp
jmp
sahf
loopne,pt
push
test
and
ljmp
xchg
ljmp
iret
lret
out
aaa
call
dec
and
pushl
cmpsl
adc
mov
mov
ud0
dec
mov
dec
movsl
incl
call
add
notl
imul
jb
iret
lcall
jmp
dec
jmp
jne
and
mov
aaa
fdivrs
and
nopl
insl
rorl
ljmp
dec
and
popf
decl
pushl
cli
push
and
fcoml
mov
divb
in
idivb
and
pushl
sub
cmp
xor
pushw
pop
push
cmp
incl
aad
cmp
push
mov
jbe,pt
call
rol
ret
pop
xchg
dec
ljmp
pushl
test
jmp
sar
inc
push
jmp
lea
mov
push
lcall
sbb
shll
push
jmp
call
mov
js
pop
sbb
mov
add
adc
jl
inc
mov
inc
cmpsb
dec
in
decl
adc
call
mov
movmskps
scas
push
scas
xchg
mov
pushl
mov
insb
and
sbb
jmp
sbb
loopne
lock
adc
mov
lods
incl
data16
adc
mov
lcall
loop
cmp
icebp
xor
scas
inc
push
pushf
pushl
push
mov
ljmp
xchg
scas
push
xor
inc
ss
or
decl
jmpw
cmc
sbb
inc
incl
cmp
xchg
lcall
cmp
punpcklwd
incl
pop
out
adc
push
mov
pushl
pushl
add
pop
inc
dec
scas
imul
outsb
decl
pushf
es
ljmp
call
shll
jne
ljmp
pushl
fs
dec
decl
jnp
cmp
adc
decl
in
in
pop
jmp
mov
xor
xlat
std
xchg
in
pushl
sbb
sub
jmp
aad
and
inc
mov
jmp
lcall
cmp
cmp
clc
in
mov
xor
mov
pushl
pop
pushl
fs
mov
dec
jecxz
leave
pushl
outsl
lcall
or
ret
sbb
or
lcall
and
push
arpl
dec
cli
ja
cmc
pop
rolb
stos
decl
dec
in
adc
mov
add
mov
and
mov
push
sub
incl
mov
adc
sbb
pusha
inc
sub
ljmp
xchg
fdivrl
pop
cmp
sbb
aaa
gs
incl
xchg
mov
add
fistpll
add
jge
or
int
push
xor
and
sbb
add
sti
ljmp
pushl
pop
or
call
stc
sahf
fsts
sbb
fadd
call
pushl
into
ljmp
decl
pushl
cmp
adc
mov
or
or
or
inc
icebp
ljmp
inc
dec
js
pushl
decl
call
pop
push
cmp
lcall
sub
jg
icebp
cmp
fs
ljmp
incl
mov
mov
mov
ret
ljmp
sar
mov
call
repz
out
out
stos
call
mov
hlt
pop
jmp
lcall
ficoml
jmp
out
jmp
leave
dec
out
mov
and
ljmp
add
xchg
test
push
decl
cli
test
push
call
ljmp
xor
push
popa
testb
int
mov
in
lcall
call
ljmp
or
push
lcall
add
ljmp
jmp
out
fdivrp
mov
jns
cmc
pushl
incl
inc
incl
js
decl
icebp
dec
insl
mov
adc
lcall
or
dec
xor
popf
inc
dec
arpl
cs
xor
bound
incl
add
inc
xorb
mov
dec
or
sar
mov
jns
incl
pop
ljmp
jmp
mov
push
mov
jb
mov
xor
lock
jmp
or
mov
jnp
pop
xchg
jge
or
decl
xor
icebp
stos
jmp
lret
decl
push
call
lret
nop
stos
dec
push
cltd
test
decl
call
pop
pushl
xor
jmp
ljmp
push
jmp
incl
jg
jmp
dec
pushl
mov
ljmp
lcall
adc
jae
roll
cmpsb
int
mov
dec
lods
jmp
jmp
jmp
clc
dec
imul
lods
rorl
xor
jle
daa
call
fisubs
popa
add
ljmp
add
scas
inc
outsl
xor
daa
add
push
dec
outsb
jmp
lods
push
mov
out
cmp
scas
ffreep
stc
cs
lcall
push
add
decl
xor
push
call
fstl
decl
jmp
in
push
pop
pushl
pop
fyl2xp1
lods
inc
loopne
dec
fcoml
xlat
mov
push
mov
lcall
xchg
sub
das
ffreep
pushl
jmp
adc
cmp
arpl
lcall
decl
sub
pop
jae
nop
call
ficomps
call
out
and
cmp
rclb
cmc
pop
inc
pop
sti
test
and
inc
test
icebp
and
mov
dec
repz
ljmp
push
add
add
call
push
incl
sar
lcall
je
sub
cmpsb
mov
add
mov
adc
shlb
push
int3
inc
enter
incl
inc
mov
pushl
add
or
lahf
mov
sbb
adc
push
inc
push
pop
decl
inc
or
incl
fiadds
or
or
push
call
incl
out
push
in
jns
jmp
decl
xchg
jns
stc
aas
sbb
popa
or
and
out
incl
jmp
inc
lock
lcall
hlt
xchg
fiadds
incl
inc
mov
mov
jg
mov
decl
lods
jmp
dec
decl
jae
cmp
pusha
jo
sbb
mov
decl
aad
aaa
imul
incl
call
call
fsubr
cmp
aas
imul
inc
cmpsl
jno
fldcw
pop
xlat
pop
jmp
out
fmulp
incl
add
je
incl
decl
inc
jp
mov
into
mov
sub
ljmp
xchg
add
call
or
push
daa
cmpsb
sbb
inc
sub
mov
aaa
sub
inc
outsl
daa
sbb
add
ljmp
ljmp
pushl
lcall
push
popa
lcall
out
ljmp
mov
test
sub
in
dec
xlat
mov
mov
setno
mov
mov
movsl
pushl
cmp
mov
push
mov
or
adc
pushl
call
test
idiv
adc
in
in
mov
mov
jns
test
cmp
mov
incl
jmp
mov
lcall
pop
pusha
call
in
sub
pushl
lcall
and
dec
repnz
mov
stc
xor
jb
inc
sbb
sub
pop
cli
adc
ljmp
mov
jmp
call
daa
lahf
call
mov
in
in
jmp
aaa
call
bound
decl
xor
inc
cmpsb
cmpsl
ljmp
xor
jmp
call
add
pushl
adc
pop
aam
stc
incl
les
push
lea
loopne
pushl
aad
pop
inc
add
mov
dec
cli
xchg
mov
and
lcall
pusha
sub
fistpl
sbb
xchg
lcall
lcall
mov
jmp
lret
inc
push
jmp
push
call
push
insl
inc
lcall
push
call
es
jl
ljmp
inc
inc
dec
sbb
mov
call
out
push
lcall
in
scas
cld
call
jmp
aam
mov
pushl
fldt
pushf
decl
fsubs
jbe
out
cmp
lcall
cwtl
add
cld
cmp
or
orl
decl
adc
ljmp
les
cli
xchg
pop
cmpsb
lcall
in
add
incl
ljmp
adc
jnp
and
fs
sti
lret
jae
jmp
add
cli
jle
push
call
lcall
sub
mov
jns
lcall
scas
cmp
push
decl
jmp
mov
fsts
mov
rcl
popf
xchg
scas
ljmp
sub
cwtl
cmp
sub
aaa
jmp
int3
pushl
mov
mov
add
pop
fnstsw
leave
call
push
sub
pop
out
jle
push
pop
jb
mov
call
xchg
fdivrp
push
divl
cmp
decl
or
push
lcall
jne
jmp
dec
outsb
popa
and
test
loope
iret
push
es
push
mov
scas
xorb
ljmp
dec
out
adc
mov
xor
push
fnstenv
das
xchg
jo
ljmp
mov
decl
add
adc
xor
pop
inc
dec
jbe
lcall
pop
ret
push
idivl
pushl
inc
xchg
ljmp
pop
rclb
outsl
add
enter
jmp
cmc
and
scas
mov
mov
jg
jg
lcall
bound
mov
mov
mov
push
inc
ud0
mov
add
xor
std
xor
aam
inc
jmp
sbb
push
je
jne
pushl
cld
mov
mov
push
call
dec
outsl
mov
inc
mov
push
lcall
cmp
jp
push
fiadds
cmp
push
bound
decl
gs
stos
std
add
enter
lret
fdivr
and
push
repz
lcall
call
enter
mov
dec
loopne
icebp
jge
xlat
lcall
stc
mov
jmp
xchg
stc
xchg
decl
stos
scas
out
stos
ljmp
pop
js
scas
clc
mov
sbb
andb
stos
pushl
inc
incl
loop
sti
adc
and
pushl
mov
call
push
std
xchg
call
inc
xchg
cli
jmp
cwtl
incl
inc
dec
decl
lcall
mov
decl
enter
add
or
call
scas
mull
test
cltd
xchg
mov
incl
cmp
jmp
lea
adc
pop
ljmp
push
push
inc
ljmp
adc
test
jp
inc
jo
call
sbb
or
call
stos
push
fdivr
lret
clc
push
and
cld
ljmp
jmp
jmp
mov
xor
adc
outsl
addl
sub
jmp
call
dec
loop
xchg
or
leave
aas
mul
jmp
sti
sub
inc
dec
call
xor
xor
int3
das
jmp
or
lcall
lods
cmp
jmp
imul
call
fimull
push
jmp
pusha
lcall
call
cmp
decl
or
jbe
pushl
jo
jmp
gs
jb
sti
fcmovb
or
decl
decl
jns
call
dec
mov
lock
jmp
faddl
cmp
cmpsb
rorl
and
negb
lcall
scas
push
je
loope
fisubrl
dec
fdivrs
test
decl
ljmp
add
movsl
mov
arpl
decl
aam
daa
data16
jmp
das
dec
divl
lcall
mov
paddsb
lcall
call
jl
dec
inc
fsubrp
xor
sar
add
push
pop
dec
cmp
popf
jmp
mov
lcall
ficompl
pushl
mov
iret
incl
jae
incl
jmp
enter
pop
jmp
push
cld
cmc
jnp
call
enter
push
in
nop
mov
push
lock
aad
dec
ss
incl
xchg
sbb
pop
mov
cwtl
cmc
decl
incl
jmp
inc
lcall
pushl
pusha
lcall
pushl
in
mov
jg
xchg
jmp
jmp
pushl
adc
mov
pop
pushl
inc
stos
push
lcall
pushl
fimull
push
mov
test
hlt
dec
pushl
pop
aas
lcall
les
decl
mov
pop
inc
sti
lock
decl
incl
inc
jp
decl
adc
and
rorl
cmp
jmp
push
decl
pop
push
pushl
outsb
mov
incl
mov
mov
push
mov
call
stos
sub
add
and
xchg
push
push
data16
call
mov
lcall
filds
jp
dec
pop
incl
jmp
call
stc
jbe
in
mov
dec
cmpsl
add
cli
pushl
mov
ljmp
or
fdivr
push
fcos
push
pop
call
add
clc
decl
mov
and
decl
cmp
call
dec
call
or
jb
push
jae,pn
mov
decl
xchg
repz
dec
mov
insb
je
add
add
jmp
idiv
dec
jmp
pushl
fidivs
mov
pop
lcall
jno
es
cmp
subl
sub
pop
dec
leave
cld
xchg
cltd
outsb
call
clc
incl
pop
call
jnp
jne
cmp
jo
cld
shll
ret
mov
repz
sub
fbstp
ljmp
test
xor
scas
cmp
push
es
xchg
call
fbld
mov
mov
and
and
out
sbb
cmp
lock
aam
test
jecxz
incl
mov
add
rol
pusha
cmp
cmpsl
incl
xor
and
jecxz
and
lcall
jmp
mov
call
test
repnz
mov
mov
jns
push
mov
rcrl
inc
adc
cmp
cmc
jbe
lcall
jl
mov
push
lcall
pop
test
mov
call
mov
jmp
add
sti
jnp
mov
dec
mov
jmp
mov
into
movsb
dec
jecxz
inc
fldl
dec
pushl
je,pn
incl
lret
repz
jmp
decl
jp
ljmp
mov
test
ds
fcos
jmp
dec
int
aaa
call
add
lcall
lcall
ss
jb
idiv
mov
fdivr
xchg
jmp
scas
and
lret
sbb
lods
mov
dec
jb
xchg
gs
fisubrs
lcall
push
cmc
aaa
and
js
add
ljmp
cld
call
mov
ljmp
sbb
or
neg
call
cmpsb
add
outsl
ss
jmp
pop
jmp
in
ljmp
pushl
cwtl
sbb
cwtl
adc
movsb
dec
dec
sbb
lods
subl
test
aad
cmp
js
incl
mov
popa
mov
in
ljmp
fdivs
incl
mov
outsl
lock
decl
dec
inc
stc
jmp
gs
out
ljmp
push
in
je
scas
dec
decl
les
adc
jmp
inc
jnp
add
mov
idiv
inc
iret
ret
cltd
xor
mov
adc
incl
pop
push
repz
dec
incl
stos
out
fisttpll
movsl
cmp
xor
xor
stos
call
dec
popf
pop
mov
int
jmp
sub
sbb
call
mov
xchg
dec
sahf
add
push
dec
ljmp
xchg
mov
and
lock
dec
push
sub
call
leave
inc
incl
into
sti
mov
fs
mov
mov
rcll
imul
lcall
scas
incl
or
stc
sub
enter
call
js
jns
jmp
decl
call
pushl
call
mov
decl
loopne
stos
incl
fisttpll
pop
push
and
mov
jmp
outsl
mov
and
and
add
mov
aas
shlb
mov
lods
decl
and
lock
jge
cmpb
mov
jmp
sahf
inc
ja
mov
sti
hlt
mov
add
repnz
js
incl
loop
push
mov
jo
cld
cltd
jmp
jg
repz
std
push
pop
lcall
call
call
incl
pop
mov
mov
mul
inc
jmp
or
pushl
add
decl
ljmp
idiv
incl
lahf
test
fcos
dec
incl
mov
scas
lcall
hlt
push
sar
jo
rcr
out
cmp
incl
lcall
mov
mov
sar
rcrb
inc
push
aaa
cli
add
ljmp
ja
pushl
xor
call
xchg
idiv
scas
mov
mov
jge
fs
pushl
mov
test
push
jmp
aam
pushl
xor
ljmp
lahf
call
jp
dec
call
jno
decl
jmpw
inc
in
jg
aaa
add
call
and
insl
inc
inc
incl
jns
out
pop
add
jmp
rol
decl
jbe
jae
xchg
cmp
decl
loopne
ljmp
ljmp
xor
in
push
dec
pushl
mov
mov
imul
incl
adc
leave
pop
dec
pop
add
je
aad
fstpl
fistpl
adc
andb
sub
incl
jo
mov
decl
lea
mov
adc
xor
xlat
test
decl
out
push
ljmp
dec
mov
pushl
inc
xchg
jp
out
repz
pop
xchg
loope
mov
incl
orb
xchg
pop
call
outsl
lock
fs
call
mov
rol
sahf
mov
and
ljmp
jp
jae
std
call
xor
aam
pushl
push
sbb
ljmp
or
int
push
lods
decl
lret
push
push
outsb
lcall
xor
jns
incl
sti
adc
inc
add
fistps
jmp
test
mov
sub
mov
xchg
xchg
jmp
xor
push
ljmp
mov
xchg
pushl
idiv
cmpsb
loopne
pushl
sub
int3
ljmp
adc
call
dec
jmp
sub
incl
jge
imul
cmp
sar
clc
decl
inc
call
aaa
call
pushl
add
sbb
jmp
jb
adc
shl
cmp
lods
xor
cmp
jmp
jae
lcall
test
insb
pushl
jb
ljmp
push
incl
gs
pop
mov
xchg
xchg
jmp
xchg
and
jmp
mov
xchg
call
dec
aaa
push
idiv
out
call
sub
out
outsb
call
adc
mov
push
incl
inc
inc
inc
pushl
push
add
fstps
decl
mov
sar
clc
xchg
je
pushl
incl
loope
xor
inc
or
cmp
call
pop
jmp
sbb
pop
push
ljmp
decl
jmp
inc
sahf
jns
int
add
call
jg
pushl
incl
adc
sub
sar
pop
not
incl
scas
lea
incl
incl
stos
leave
and
fwait
outsb
add
movsl
call
roll
out
cmp
incl
sbb
pop
cmp
inc
dec
lds
decl
insl
fcoms
sar
lock
and
xor
push
popf
jmp
xchg
push
test
in
cli
pusha
and
sbbl
ljmp
incl
jp
inc
out
pushl
loop
cmp
dec
daa
mov
decl
pop
mov
int
call
push
js
push
call
lcall
ljmp
sub
call
pushf
xchg
pop
xchg
mov
cmp
adc
jg
loop
sub
incl
and
add
fbstp
call
imul
xchg
gs
ljmp
ljmp
mov
decl
and
pop
mov
pop
call
inc
add
dec
xor
incl
out
sbb
pop
aas
jmp
jle
pushl
decl
xlat
ljmp
lods
jmp
jmp
ljmp
lcall
ljmp
jmp
cmpsl
stos
nop
aad
mov
dec
jo
ljmp
cmp
jp
mov
das
test
push
jge
cmp
mov
mov
push
insb
cmp
jmp
ljmp
push
test
mov
lcall
xchg
mov
daa
imul
xor
popa
mov
call
incl
cmp
call
mov
pop
pop
fdivl
push
call
fcos
lods
add
xor
cli
xor
lods
or
decl
pushl
lcall
dec
mov
push
dec
cwtl
popl
jmp
add
lcall
ja
out
fwait
pop
idiv
daa
sub
xchg
fdivr
xchg
and
mov
call
dec
pushl
out
cmp
out
or
decl
cmpsb
cmp
xchg
sti
inc
jmp
jle
dec
mov
jle
das
sbb
dec
inc
xor
jge
ljmp
ljmp
mov
testl
out
clc
push
and
pushl
popa
and
and
or
and
call
insl
and
pop
jo
mov
lcall
mov
jne
stc
movl
adc
push
lods
decl
mov
xchg
ret
inc
stos
repnz
pushl
into
pop
push
lcall
mov
mov
lcall
mov
mov
incl
mov
call
incl
psubsb
xchg
sub
push
ljmp
and
xor
decl
mov
inc
pop
jmp
scas
sbb
push
les
incl
inc
sbb
dec
pop
out
adc
or
cmp
pushl
push
sbb
loop
dec
add
push
sarl
and
cmp
cmp
fs
pop
ret
enter
adcl
push
push
push
mov
push
in
decl
lahf
incl
sar
jle
in
mov
pop
sub
push
pushl
notb
enter
push
into
jmp
add
pusha
cmc
fwait
call
fs
sbb
pop
cli
push
ds
jp
in
ljmp
decl
incl
cmpsb
mov
add
sub
ljmp
pop
sahf
sti
ljmp
insl
call
incl
incl
decl
pop
xor
sub
jbe
push
xor
inc
out
mov
push
jecxz
incl
xor
mov
incl
add
ljmp
out
cmp
cmp
xchg
dec
scas
cmp
mov
pushl
xchg
dec
mov
adc
decl
cmpsb
jb
popa
pop
mov
lcall
xor
xchg
mov
xor
incl
jbe
inc
xchg
scas
ljmp
or
cmp
cld
idiv
push
into
dec
sbb
jle
push
xchg
adc
push
lret
lcall
mov
ljmp
mov
imulb
jmp
sar
xor
cmp
adc
pushl
inc
call
in
arpl
xchg
incl
call
call
dec
dec
cmp
call
imul
mov
jmp
stc
inc
mov
sub
pushl
cmc
dec
incl
cmpsb
decl
cmp
ss
js
dec
incl
push
jmp
ljmp
incl
loop
inc
jmp
or
daa
decl
js
stos
lret
call
xor
pushf
pop
aam
add
pop
js
clc
mov
call
pushl
pushl
lcall
aam
pushl
mov
jge
inc
decl
lods
fdivrs
inc
jmp
enter
in
xchg
lcall
decl
jb
call
mov
jmp
jecxz
ljmp
cltd
add
lcall
xor
and
xchg
cmpsl
push
aam
call
cmp
insl
inc
ljmp
ljmp
jle
sbb
sbb
sti
jmp
sub
fs
cmp
mov
lcall
sub
call
fdivrs
and
mov
int3
dec
fdivr
or
cmpsl
push
pushl
sub
decl
pop
jmp
std
jne
lcall
ljmp
add
imul
pop
dec
insl
mov
xchg
mov
out
incl
cwtl
mov
mov
jp
decl
jg
in
incl
in
inc
call
sub
decl
add
ret
jg
cs
push
xor
jmp
into
decl
push
jmp
mov
add
scas
ret
sub
pop
add
fs
dec
insl
dec
dec
dec
call
mulb
jge
dec
call
and
stos
cli
mov
cmp
incl
mov
push
lods
cmp
in
lcall
dec
push
decl
adc
stos
idiv
ljmp
pop
dec
jl
xor
data16
call
inc
ljmp
dec
sub
je
jmp
orb
incl
movsb
inc
pushf
cwtl
incl
popa
pop
in
fistpl
jge
nop
jl
repz
test
dec
add
mov
or
jmp
les
ljmp
mov
ss
fdivr
into
sahf
mov
inc
fwait
decl
pop
incl
push
call
decl
loope
lea
shll
dec
decl
cld
repnz
cmp
pushl
test
decl
pushl
xchg
and
mov
decl
out
pushl
mov
call
inc
sbb
mov
ljmp
incl
jecxz
out
in
jecxz
sti
jmp
iret
push
jl
pop
sub
jg
jae
push
call
call
lods
incl
call
aaa
outsb
ljmp
out
lcall
jmp
insb
mov
lea
mov
push
lcall
sbb
cltd
mov
add
and
decl
addr16
lock
ljmp
fistpl
sbb
iret
mov
movsl
add
dec
ss
jle
call
pop
in
inc
imul
cmp
mov
lcall
sub
call
cmp
cmp
sub
inc
pusha
jmp
sbb
add
mov
gs
jns
decl
lret
jmp
xor
ljmp
jge
call
decl
jmp
mov
adc
jp
incl
fcmovu
lcall
popf
sbb
test
lcall
into
insb
pushl
fdivrl
dec
jmp
jno
mov
mov
incl
mov
stc
incl
dec
jno
add
sub
andb
ljmp
add
call
rolb
dec
aad
lcall
or
incl
pop
aas
sti
adc
ljmp
or
dec
ljmp
ds
scas
pushf
xchg
mov
xor
cld
inc
shr
mov
fidivl
lcall
mov
dec
jecxz
mov
add
pop
jl
cltd
pop
call
and
push
cmpsb
sbbl
in
jp
cmp
icebp
call
jmp
loop
add
mov
dec
sub
ss
dec
push
decl
dec
sbb
push
inc
ja
sbb
sti
lcall
xlat
pushl
cmp
inc
nop
lcall
sub
incl
sar
mov
incl
push
fdivr
add
call
mov
pop
incl
incl
ljmp
daa
sub
imul
fsubl
adc
dec
jno
sbb
mov
incl
jmp
push
outsb
adc
sti
jmp
call
xchg
pop
stos
pushl
jmpw
and
sti
incl
pop
decl
jmp
call
dec
add
icebp
lcall
sub
loop
pushl
cmp
es
mov
mov
jmp
mov
decl
fadd
incl
and
mov
xor
lret
decl
sbb
mov
scas
decl
aad
push
fcmovu
push
psrlq
icebp
std
inc
arpl
cmp
and
jle
pusha
mov
push
mov
ss
pop
sbb
fs
inc
ljmp
lcall
inc
jmp
push
or
lea
mov
into
mov
adc
stos
cs
incl
push
lcall
adc
mov
push
jmp
cmp
cmp
pushl
call
dec
lds
cmc
call
call
sub
aas
sbb
fadd
movsl
push
lcall
stc
jns
in
addr16
out
call
adc
cmpsl
sub
js
pop
inc
incl
leave
and
into
mov
dec
xorb
incl
sbbl
sbb
imul
push
jae
mov
dec
test
mov
test
sbb
add
inc
vmovdqa
xchg
lcall
pushl
cld
dec
les
decl
xchg
cmpsb
jmp
andl
xor
xor
nop
push
mov
call
lods
ret
mov
lcall
lcall
decl
push
jmp
incl
fidivl
arpl
jb
mov
jge
lods
mov
cmp
and
aas
lcall
mov
movsl
incl
call
lcall
in
mov
lcall
jbe
ljmp
gs
lcall
dec
push
popa
pushl
pushl
call
jp
dec
xor
decl
cld
ret
mov
pop
and
adc
xor
call
int
outsb
mov
test
fsubs
push
fdivr
std
gs
stc
or
ljmp
add
xchg
sub
pop
mov
js
mov
dec
cmp
mul
pushl
test
dec
aaa
fmull
decl
incl
int3
popf
pop
aam
jl
sbb
push
xor
mov
pop
inc
ljmp
mov
add
cmp
inc
jnp
call
jle
fdivrp
leave
jp
jne
pop
cld
pop
sbb
sbb
in
cmp
xor
mov
pop
ret
pop
lret
jmp
mov
data16
xor
adc
sbb
incl
xlat
jmp
aam
inc
cli
fisubl
sub
lcall
push
insl
add
mov
jmp
push
mov
adc
call
jge
pushl
xlat
adcb
call
sub
out
out
cmp
clc
pop
mov
call
scas
ljmp
ret
ljmp
jmp
jl
imul
sar
pushl
outsl
out
or
mov
inc
es
inc
xchg
and
and
sbb
jmp
lcall
mov
subb
sbb
add
mov
decl
arpl
jmp
ljmp
push
jno
popf
cwtl
jmp
imul
sbb
and
pop
lcall
ja
pushl
pushl
ljmp
jmp
frstor
jg
add
ljmp
mov
jmp
call
dec
mov
cwtl
mov
adc
push
out
push
decl
push
call
lcall
movsb
call
cmp
lea
lds
xchg
add
jmp
push
incl
out
adc
push
mov
repnz
jmp
adc
jg
call
or
adc
mov
fiadds
pop
call
fcos
mov
fcos
mov
mov
mov
pop
decl
push
call
ljmp
cli
arpl
or
xchg
sbb
aas
dec
pop
push
call
fcos
insb
fdivr
mov
inc
fldt
fisubrl
daa
jg
add
lcall
pop
push
fdivr
das
ljmp
lcall
xor
inc
mov
pop
call
push
pop
call
in
out
pushl
decl
call
pop
push
inc
pushl
scas
call
add
iret
gs
jnp
xchg
or
ljmp
dec
dec
incl
jnp
call
dec
lcallw
cmc
call
cmpsb
jmp
sar
repnz
mov
mov
mov
andb
jmp
fisttpll
cmp
push
fstl
push
fisubs
sub
ljmp
incl
push
clc
call
inc
mov
sub
imul
call
jp
xor
ljmp
test
jne
lods
incl
and
mov
decl
daa
jmp
daa
jmp
decl
pushl
pushl
test
lcall
mov
mov
call
fistpll
ljmp
idiv
test
add
jo
js
inc
andl
sub
pop
push
call
decl
fistpll
jmp
jmp
incl
mov
pop
call
popw
xor
pop
sbb
push
call
push
aas
mov
mov
push
jl
cmp
jmp
pop
pushl
nop
inc
add
pushl
pushl
xor
jmp
mov
pushl
ljmp
call
sbb
call
and
xor
inc
subb
cli
stc
int
push
or
jae
imul
or
cmp
call
and
push
lcall
sub
lock
cmp
xor
mov
or
icebp
mov
xor
nop
scas
call
mov
lcall
shrl
call
hlt
pushl
jle
inc
daa
add
leave
call
adc
sub
mov
mov
lcall
jmp
ret
pusha
test
add
jl
js
push
ds
pop
call
aad
xchg
cmp
jmp
pushl
fistl
sar
into
sahf
mov
cltd
call
stos
mov
jnp
pusha
decl
decl
dec
cmp
mov
xor
repz
inc
in
ljmp
push
popa
cmpsl
xchg
xchg
lcall
fcompl
dec
pusha
decl
sub
sub
testl
jl
add
call
mov
pop
sarl
mov
aam
cli
mov
dec
movsl
sbb
jmp
js
decl
inc
call
xchg
incl
cwtl
call
lret
call
call
lock
nop
pushl
cmp
or
and
adc
lcall
cmp
data16
mov
or
push
jmp
mov
test
dec
repz
cmp
cmp
sub
ljmp
loope
pop
pop
lcall
scas
es
scas
lcall
pushl
outsl
mov
push
sbb
cmpsb
decl
mov
lcall
incl
fcomps
incl
xlat
adc
das
decl
out
movl
decl
aaa
jmp
test
mov
lods
lcall
add
incl
lea
mov
insb
sar
out
notl
inc
out
aaa
xchg
mov
test
push
mov
push
ljmp
fcoms
or
fsubrs
inc
in
mov
jmp
jne
imul
fdivr
jnp
dec
ss
loop
inc
gs
das
pushf
xor
push
mov
dec
ret
xor
and
ss
imul
incl
jbe
popf
pushl
mov
inc
incl
xor
das
and
xchg
fcmovu
mov
jo
add
movsb
call
call
dec
fdivr
decl
jmp
pop
jns
decl
jmp
pop
push
jmp
fwait
push
inc
pushl
add
push
stos
hlt
dec
push
sub
sub
ficoms
out
scas
mov
dec
xchg
dec
xor
mov
push
adc
add
mov
adc
call
ret
incl
call
lock
decl
jle
or
mov
scas
incl
gs
inc
fnsave
int
jnp
decl
mov
cmp
lcall
lcall
dec
call
mov
mov
and
in
xor
decl
mov
iret
std
mov
ja
les
or
sub
jmp
sti
mov
jmp
call
data16
cmp
adc
mov
out
jmp
sub
jmp
lcall
out
cmp
aam
cmc
pop
lcall
sbb
adc
lcall
fisubrl
ljmp
mov
xor
call
pop
xchg
mov
cmp
outsb
incl
cwtl
push
fdivp
or
pushl
incl
add
aam
pushl
ljmp
shrb
out
subl
mov
cltd
sti
mov
pop
or
lcall
jmp
ret
imul
pushl
lcall
stc
inc
scas
sub
xor
xor
cmc
incl
sbb
push
pushl
into
in
jge
xchg
jmp
decb
ljmp
incl
push
adc
jg
decl
es
test
pushl
jg
push
test
and
lds
pushl
pushl
push
and
and
mov
scas
xchg
jl
sarb
mov
lds
or
pop
lret
outsb
decl
pushl
decl
mov
inc
jmp
call
inc
sbb
icebp
insb
xchg
inc
test
pop
jmp
ljmp
lea
decl
mov
mov
pusha
addb
sbb
pop
lcall
std
mov
in
mov
push
jp
sbb
mov
dec
decl
inc
int3
or
lods
inc
push
js
push
pushl
fwait
dec
lods
cmp
push
gs
lcall
pusha
and
push
push
mov
scas
sub
mov
dec
lret
or
jnp
imul
jmp
jle
decl
icebp
dec
push
lods
ljmp
and
pop
lcall
push
movsl
imull
shll
daa
pushl
jnp
push
pushf
cs
fdiv
jmp
clc
cmp
mov
jno
pop
jecxz
lret
addr16
sti
out
xor
popf
stos
incl
mov
ljmp
sbb
push
fidivl
pop
cs
or
cli
push
inc
adc
adc
fcos
test
jmp
pop
pushl
enter
jmp
cmpl
test
inc
call
mov
addr16
lods
dec
call
popf
dec
sub
pop
call
ljmp
pushl
mov
push
pop
inc
cmp
ljmp
jmp
push
push
sub
adc
cli
xor
xchg
fisttpll
in
xchg
sub
movsl
scas
mov
jmp
in
sbb
mov
dec
pushl
lcall
adc
mov
sbb
jmp
or
call
test
cmp
pop
inc
call
mov
push
cmp
dec
dec
call
xchg
xor
inc
mov
nop
call
fdivr
stc
sbb
arpl
pushf
mov
aaa
aam
jg
decl
jmp
cld
pushl
and
decl
ljmp
inc
call
push
shrb
call
cmp
dec
push
or
jecxz
jno
mov
sub
xchg
ret
cli
call
jge
pusha
xchg
ljmp
pop
jl
in
jg
pushl
jns
test
rcrb
incl
jmp
adc
movsl
ljmp
loopne
mov
adc
dec
daa
push
xor
aaa
jmp
sbb
lret
jmp
jno
mov
pop
cmp
mov
js
ljmp
dec
sbb
xchg
xchg
movsl
std
lahf
ljmp
jmp
mov
pushl
inc
xchg
outsl
cmc
cmp
mov
call
push
jmp
sti
or
ret
fimuls
cmp
lea
cmp
test
jle
ljmp
mov
xchg
idiv
mov
inc
push
sub
jnp
ret
pushl
incl
test
add
decl
imull
cmpsb
loopne
lcall
cltd
mov
xor
or
incl
call
xor
scas
mov
call
lods
add
incl
fdivr
mov
pushl
mov
sub
sub
lcall
decl
mov
or
decl
adc
jmp
pushl
pushf
xchg
mov
lcall
dec
push
jle
dec
jmp
fcos
mov
lcall
sub
pop
sbb
push
test
mov
lcall
pusha
jmp
divb
cmp
pushl
in
jmp
xchg
shlb
push
or
push
xchg
lock
add
dec
call
and
xor
inc
decl
jl
pushl
js
mov
cmp
leave
outsb
call
daa
ret
jmp
sub
loop
ret
call
dec
adc
adc
pop
or
mov
incl
mov
jecxz
sbb
ljmp
decl
popa
push
popa
stos
pushl
jmp
dec
jge
jae
sar
cmpsl
decl
sar
and
call
leave
test
popf
lret
sti
jno
call
jmp
fbstp
or
dec
adc
call
pusha
cmpb
call
pop
mov
mov
sbb
push
pushl
lret
mov
cwtl
decl
sbb
mov
int3
dec
sbb
loop
sbb
mov
jmp
pop
ret
sahf
inc
inc
cwtl
call
ja
add
out
lcall
mov
pushl
inc
cmpsb
lcall
dec
imul
test
push
test
fbld
sub
call
pop
xor
ss
cmp
ljmp
incl
or
shr
pushl
incl
ficoml
mov
leave
scas
pushl
mov
sbb
idiv
sarb
pop
ds
pushl
cmp
incl
jae
mov
lock
out
sbb
pop
loop
mov
call
aaa
incl
push
mov
mov
fdivrp
and
pushl
divb
jmp
pushf
fcos
fs
jnp
addr16
in
int
ret
clc
incl
int
call
pop
lods
inc
rcrl
std
mov
popa
inc
jge
pop
pop
jmp
jb
xchg
inc
bound
loop
fsts
std
adc
dec
sarl
mov
mov
out
popa
decl
mov
add
push
decl
call
jmp
sbb
and
jmp
jmp
lods
je
push
xchg
ljmp
add
cmp
mov
push
dec
cmpsl
jnp
or
ljmp
push
cld
dec
lcall
decl
jmp
mov
popfw
pop
incl
call
fidivrs
or
decl
aad
lcall
jp
decl
aas
add
sub
jl
decl
pushl
cli
int
cmp
stc
push
decl
jecxz
jmp
testb
push
jno
cmp
lret
jmp
sarl
mov
push
xchg
pusha
lahf
incl
test
push
sub
ret
call
sbb
jmp
jne
or
stc
sar
mov
mov
mov
mov
dec
ljmp
jns
pushl
call
jg
jp
dec
faddl
mov
mov
enter
mov
incl
lret
shll
and
in
xor
and
fld
ljmp
add
mov
pushl
incl
xor
lds
repz
inc
fdivr
lods
sar
pop
movsb
repnz
scas
mov
decl
cld
xor
incl
ja
mov
fdivr
lcall
adc
sub
pusha
or
push
xor
pop
sub
pop
ljmpw
pop
ss
callw
inc
js
mov
decl
cld
or
inc
push
pushl
call
jmp
pop
loopne
ds
ljmp
jmp
aaa
pushl
cmp
mov
xchg
fdivr
into
pop
ud0
in
xchg
cmc
loope
gs
fdivs
rorb
call
stc
sub
mov
in
sbb
call
cmp
inc
sbb
jmp
test
lahf
push
outsl
ljmp
pushl
adc
call
aas
pop
ds
pop
rorb
out
jmp
adc
xchg
decl
incl
into
pushf
mov
incl
in
pop
mov
insl
pushl
lods
mov
push
jae
imul
sbb
inc
ljmp
mov
pushl
push
adc
test
mov
sub
int3
fs
call
outsb
mov
jle
call
jp
inc
loopne
dec
jmp
mov
mov
or
sub
callw
je
fbstp
incl
dec
imul
push
call
ficomps
jns
inc
mov
call
xor
or
mov
out
mov
jge
cmpsl
ljmp
mov
dec
inc
adc
scas
cmp
leave
jmp
ljmp
decl
sti
dec
jmp
incl
jne
pushl
jle
pusha
pushl
ljmp
mov
and
mov
or
pop
cmp
pusha
notl
decl
fwait
incl
lret
mov
mov
movsl
es
and
add
inc
or
pushf
enter
scas
lcall
leave
cmp
mov
cwtl
pop
in
incl
lcall
jl
dec
adc
inc
jno
lcall
jnp
add
out
jle
jle
sub
jp
stos
mov
sub
jle
pop
aas
cwtl
sbb
jo
pop
push
incl
hlt
jp
jmp
incl
cmp
std
idiv
adc
cmp
incl
aad
push
xor
es
gs
stos
aaa
lcall
dec
jg
inc
sar
sbb
ja
popa
ljmp
shll
mov
iret
scas
fldl
fdivrp
xchg
decl
stos
incl
adc
xchg
pop
call
sub
cmc
mov
push
pop
lcall
lcall
mov
stc
xchg
add
mov
jmp
pop
pushl
sbb
push
fsubrl
or
mov
lods
jmp
int
push
mov
idiv
mov
outsb
mov
fistl
add
sub
jmp
inc
adc
sub
sub
mov
insb
out
mov
arpl
mov
lret
decl
incl
lcall
call
mov
cwtl
mov
dec
decl
in
dec
int3
xor
decl
imul
ljmp
decl
inc
jo
dec
icebp
ljmp
mov
jecxz
test
rcrb
sub
mov
jle
mov
call
rcr
jmp
call
cmp
loop
cs
push
jne
sub
mov
popf
cmp
pop
sahf
out
decl
push
call
pusha
decl
mov
mov
cmp
dec
adc
into
loopne
ljmp
in
sbb
ja
pop
fcos
cmp
cmp
jmp
push
outsb
decl
in
xor
and
pop
and
jg
jmp
mov
repnz
incl
stos
aas
push
jg
incl
mov
das
lret
out
test
pop
sbb
jge
pushf
xlat
lret
dec
dec
enter
mov
jmp
inc
jmp
ljmp
dec
cmpsl
incl
enter
fisubrl
mov
pop
push
lcall
mov
jmp
lret
lods
lahf
mov
cmp
adc
dec
fdivr
mov
inc
cmc
and
mov
adc
fstps
imul
je
jmp
dec
call
xchg
and
lcall
loope
mov
cmp
movsb
or
nop
jns
and
sub
mov
mov
jns
ljmp
lcall
jmp
adc
and
mov
lods
call
pushl
insl
jmp
test
xlat
xchg
pushl
mov
das
xlat
jmp
jnp
mov
enter
divb
xor
pushl
jmp
arpl
xchg
incl
pushl
push
jmp
sbb
xchg
xchg
dec
js
sbb
pop
mov
test
cmp
add
mov
in
scas
mov
add
incl
leave
lods
push
inc
fcoml
push
inc
mov
lret
test
and
jb
in
xchg
pushl
mov
ud0
iret
call
jnp
sar
cmp
dec
pop
imul
cmp
jecxz
mov
scas
mov
add
icebp
add
call
loopne
cwtl
decl
pop
insl
mov
mov
xchg
push
test
scas
cmp
incl
cmp
push
and
das
lods
adc
xchg
pop
mov
lret
ljmp
xlat
rolb
pushl
mov
pop
outsl
dec
jmp
cmc
mov
sub
inc
mov
icebp
ds
andb
pop
incl
push
dec
mov
mov
lcall
mov
dec
ljmp
ljmp
push
adc
inc
stc
sbb
jmp
addr16
jmp
fistpll
adc
sub
jmp
jmp
lcall
mov
lcall
incl
mov
jmp
rclb
mov
call
cmp
lods
loop
ljmp
out
in
jne
cmp
adc
lock
test
out
mov
call
xor
negb
ret
popf
mov
mov
xor
inc
cmp
xchg
popf
and
pushl
into
mov
incb
imul
cmc
popa
cwtl
mov
adc
cmp
jmp
xchg
call
decl
jae
inc
inc
les
ret
ljmp
cmpsl
jmp
call
scas
ljmp
jbe
decl
mov
push
mov
sar
inc
incl
pushl
fistl
decl
adc
cld
adc
ljmp
push
lcall
xchg
inc
ljmp
lea
push
gs
aaa
decl
xor
sub
xchg
test
sbb
clc
arpl
repz
call
xchg
pushl
incl
jae
inc
jge
movb
shlw
mov
testb
clc
jmp
incl
decl
rclb
pop
push
lcall
cltd
lcall
in
call
decl
cmp
nop
repz
dec
aam
add
loopne
incl
movsl
or
and
add
adc
lcall
rcl
mov
ljmp
decb
adc
incl
les
inc
repnz
xchg
dec
repz
add
xor
jo
inc
ds
lcall
ljmp
call
pushl
incl
leave
in
pushl
in
ljmp
mov
into
and
xlat
fmuls
and
das
dec
jmp
jo
sub
inc
cli
xlat
jmp
lret
push
sub
js
sar
adc
call
repz
xor
push
decl
outsl
call
ljmp
incl
mov
mov
call
mov
cli
lcall
sti
adc
dec
cld
stos
int3
lods
cmp
lcall
xor
lcall
cwtl
lock
add
incl
es
adc
cmp
testl
call
cmp
icebp
jge
loopne
dec
dec
jae
scas
xchg
cmp
clc
mov
decl
jns
fdivrp
mov
aas
xchg
decl
lret
pushl
call
call
scas
ss
call
cwtl
sti
add
out
outsb
xor
and
and
ljmp
inc
pop
mov
mov
scas
sub
decl
jmp
pop
out
mov
dec
scas
mov
mov
ret
adc
cld
inc
push
mov
mov
pop
push
ljmp
hlt
imul
jmp
xchg
cmp
mov
inc
fcomps
inc
les
jns
mov
decl
jns
mov
loop
push
je
inc
xchg
adc
cmpsb
jmp
aad
imul
arpl
sbbb
decl
call
pop
pushl
mov
xor
sbb
in
dec
subl
inc
or
xchg
jmp
cmp
cmp
mov
hlt
pop
aam
incl
mov
das
decl
decl
pushl
mov
jns
lcall
pop
jbe
cmp
and
dec
pushl
dec
call
push
movsb
jns
sub
cmp
enter
incl
call
jg
decl
jecxz
mov
xchg
call
call
jbe
lcall
push
pushl
lret
lcall
add
push
sti
call
pop
ljmp
ljmp
call
rcll
pushl
lcall
and
incl
call
push
adc
pushl
lahf
movsb
js
rcrb
call
pusha
cmp
cs
test
sbb
mov
decl
aas
pop
xor
lret
je
call
lret
std
pop
decl
xor
sbb
lcall
aaa
cmp
and
mov
lcall
loope
cmp
jle
fwait
bound
lods
sbb
ljmp
call
pop
ja
xchg
aaa
jg
cmp
incl
fstpt
pushl
or
rcll
jmp
stos
and
je
cld
mov
fsubs
xchg
sub
lret
decl
push
popf
call
iret
sbbb
or
call
jle
lds
add
ljmp
jmp
jbe
ljmp
cs
cmp
rolb
or
jmp
sbb
sub
cmpsl
arpl
lcall
mov
subb
pop
mov
push
mov
jmp
ljmp
in
jmp
imul
cwtl
dec
add
jmp
and
inc
sub
movsl
test
nop
mov
aaa
jno
push
adc
jg
call
pushl
imul
ja
in
xchg
aam
call
pushl
es
out
repz
dec
pop
lock
jmp
pop
fstl
incl
push
outsl
popa
jnp
mov
or
sub
call
ljmp
stos
or
pop
decl
dec
faddl
jmp
xchg
ljmp
call
test
call
shrb
out
lcall
or
pushl
stos
lret
stc
idiv
call
aam
pushf
es
mov
pop
cmp
ja
decl
and
lods
lods
clc
sti
les
xor
lcall
dec
fisubrs
push
decl
xchg
js
movsb
arpl
call
incl
push
repnz
lcall
lcall
lcall
loop
cmpsb
jns
mov
pushl
add
jne
jns
sbb
in
daa
push
or
or
xor
mov
push
call
incl
aad
ljmp
fucomp
jmp
incb
push
scas
incl
cmp
inc
lods
jmp
rcrb
or
cltd
dec
ss
orb
fildl
std
lcall
push
add
popa
lahf
incl
push
xlat
xor
or
dec
xor
inc
jne
sbb
repz
incl
shlb
push
icebp
idiv
stc
dec
decl
das
clc
jns
inc
out
jp
cmp
xor
cmc
call
das
aam
shrl
push
ds
jmp
mov
jle
idiv
mov
dec
movsl
fdivrp
incl
jle
call
cmp
jne
call
push
incl
decl
jmp
and
sbb
mov
cmpb
jbe
jecxz
or
sub
loop
xchg
or
int3
mov
es
jmp
dec
pop
xor
mov
mov
popa
jmp
ljmp
xchg
nop
xchg
clc
lcall
out
lret
ljmp
pushl
incl
loopne
xchg
lcall
cld
incl
ja
in
mov
cmp
into
mov
cli
call
popf
ljmp
add
mov
push
iret
add
xchg
sub
int3
xlat
call
decl
sar
push
inc
mov
mov
add
call
mov
inc
mov
test
imul
mov
and
stos
hlt
push
fs
inc
mov
jns
cld
sbb
imul
and
stos
push
jne
test
cwtl
xor
std
loop
decl
idivb
enter
push
aad
js
ljmp
call
incl
dec
mov
sub
and
mov
cmpb
ja
mov
mov
dec
and
add
inc
fstl
lcall
sub
mov
fdivrp
ret
cmpsb
outsl
adc
shll
push
add
scas
pop
ljmp
decl
inc
addr16
fwait
mov
enter
lahf
int
jmp
lcall
ljmp
fdivr
xrelease
push
jns
call
iret
xor
cmpl
aaa
lcall
mov
jl
lahf
pop
ljmp
rcrl
repnz
push
lods
loop
test
lcall
fnstcw
jmp
idivb
mov
jmp
ljmp
inc
add
lcall
aas
push
sahf
out
dec
ja
out
cmp
lcall
mov
jge
mov
aaa
pushl
xlat
decl
repnz
jns
ljmp
es
in
push
aas
cmp
decl
dec
mov
adc
call
jnp
jmp
jmp
arpl
scas
and
pop
call
stc
push
call
mov
sub
add
pushl
and
pop
push
lret
fucom
cs
lcall
fmul
sahf
xlat
push
imul
mov
or
test
cmp
sub
pushl
pop
push
xor
inc
scas
aas
loopne
cmpsl
inc
jmp
push
lock
incl
jl
les
call
into
mov
pushl
and
fdivr
pop
jmp
lahf
incl
push
aam
dec
dec
fwait
dec
test
sub
push
test
scas
pop
test
inc
sbb
in
pop
mov
lcall
xor
mov
or
push
imul
lcall
sbb
jmp
push
mov
pop
mov
cmp
inc
incl
sbb
ret
popf
ljmp
movsl
pusha
testb
mov
es
decl
jmp
loopw
or
loop
jmp
leave
pushl
call
les
jge
inc
pop
pushl
xchg
bound
cld
fs
jmp
sub
incl
cmp
decl
call
mov
inc
jns
jmp
lcall
ljmp
ffree
jmp
hlt
incl
pop
incl
call
sbb
out
pushf
add
call
rorb
decl
mov
sbb
aad
cmp
or
or
call
xchg
incl
lock
ljmp
call
out
add
int
daa
movsb
fdivr
add
in
fcom
sub
dec
incl
ljmp
clc
test
fidivl
xchg
or
ficoml
cmpsb
decl
dec
push
xchg
add
push
imul
inc
int
mov
call
add
rcl
mov
pushl
jl
jae
movsb
sub
cmp
jno
adc
jmp
nop
sbb
stos
jne
jmp
ljmp
sti
loop
aaa
incl
jmp
jecxz,pt
pop
call
jge
jmp
ljmp
jmp
in
jle
cmp
decl
scas
sub
push
popa
in
push
repz
int
call
xchg
mov
sbb
scas
decl
mov
call
shlb
adc
add
jmp
in
hlt
cmp
rorl
cltd
push
scas
sti
jbe
or
lcall
dec
scas
mov
shr
lcall
into
cmp
cld
jae
lods
jae
mov
ds
lock
inc
pushl
jmp
jne
incl
push
add
decl
decl
std
std
push
incl
pushf
test
inc
cltd
pushw
negl
sub
jl
cmp
sbb
lcall
xor
add
jb
sbb
push
ljmp
scas
and
and
pushl
movsl
mov
cmp
lcall
jnp
adc
xor
ret
les
ljmp
jge
xchg
dec
sbb
sbb
jmp
cmp
arpl
jnp
sbb
adc
and
sub
popa
fdivr
clc
sbb
cmp
call
pusha
fbld
incl
sub
iret
xor
mov
mov
gs
xchg
dec
mov
pop
push
decl
add
mov
cmpsb
ja
out
inc
xchg
jmp
jle
jno
jmp
push
sbb
and
inc
ljmp
sar
hlt
dec
ud0
pop
test
and
sti
test
decl
jg
dec
neg
cld
cmc
sar
fldcw
jmp
or
mov
ljmp
jle
mov
mov
xor
call
or
pushl
push
stc
mov
push
js
js
add
js
mov
decl
jge
icebp
call
decl
mov
pushf
jge
sbb
pusha
mov
lock
vpshab
dec
push
ficompl
pushl
decl
jmp
cltd
sar
incl
ss
aas
popf
out
and
xchg
mov
in
je
xchg
inc
je
call
mov
mov
ljmp
call
jl
jmp
fcos
pushf
mov
push
or
jmp
icebp
dec
mov
and
ret
sbb
repnz
es
incl
push
sub
arpl
inc
addb
jmp
fdivl
shl
decl
ljmp
call
cmp
jns
sub
movsl
daa
pushl
adc
add
in
fcos
lcall
cld
ret
out
incl
stc
pushl
jmp
pop
push
xchg
icebp
fadds
pop
rcrb
daa
pop
pop
dec
int
xor
dec
mov
mov
add
pop
decl
jl
and
clc
xor
pop
rcl
inc
decl
push
inc
lcall
pop
inc
or
lods
xchg
push
xor
mov
call
ljmp
lcall
rcll
fs
idiv
stc
xchg
pushl
and
scas
pop
jmp
call
jmp
daa
pop
mov
int
shl
ljmp
clc
xchg
push
addr16
gs
fbstp
ljmp
hlt
call
mov
mov
ljmp
cli
adcl
sbb
lcall
call
insb
decl
cmp
decl
sub
mov
dec
xchg
push
dec
ljmp
decl
xchg
lcall
test
hlt
decl
js
add
outsb
jle
and
call
mov
mov
incl
incl
int
xchg
bound
call
xchg
ds
loope
ljmp
cwtl
sbb
inc
pop
mov
ljmp
outsl
mov
pop
mov
xchg
and
lcall
cwtl
sti
shrb
decl
dec
incl
add
incl
scas
lcall
decl
lret
lds
mov
cwtl
adc
inc
mov
sahf
and
insl
jmp
loopne
pushl
add
ljmp
decl
decl
cmp
pusha
rorl
cmpsl
add
inc
jecxz
decl
icebp
or
push
sti
cmp
lcall
popf
andb
adc
lret
jnp
ja
data16
mov
lcall
addr16
popf
jmp
pushl
or
out
data16
aas
ljmp
roll
cmp
decl
inc
mov
pop
call
push
push
mov
mov
outsl
loopne
mov
jmp
xor
hlt
push
push
mov
in
jmp
push
incl
call
stos
sub
inc
incl
dec
or
int3
push
jmp
jle
fcomps
stos
ss
cmpsb
push
ljmp
lcall
repz
mov
call
inc
and
std
movsl
decl
jmp
sar
incl
jl
sar
bound
xchg
inc
inc
iret
cmp
inc
push
mov
sbb
add
jmp
call
xor
imul
pop
jge
inc
mov
mov
ljmp
sahf
or
dec
test
aaa
mov
ljmp
lret
xor
push
jo
fisubl
data16
std
pminsw
inc
jbe
pushl
jmp
jp
adc
bound
movsb
mov
jae
cmp
adcb
jmp
jmp
xchg
mov
scas
pushl
sti
or
cwtl
jl
testl
push
sub
lcall
jmp
incl
mov
pop
ljmp
xchg
imul
sbb
call
or
sbb
loop
ljmp
outsb
ljmp
mov
call
cld
in
shll
jnp
mov
lcall
and
incl
lret
sbb
call
imul
sar
lcall
dec
pusha
jo
int
jns
dec
into
loopne
jge
nop
repz
clc
cli
jmp
jg
inc
mov
mov
xchg
jmp
in
push
call
adc
ljmp
std
pushl
loop
leave
inc
movsl
incl
sub
pop
out
fnstenv
pushl
push
call
lcall
mov
stos
ret
jle
cli
inc
sub
aam
scas
fildll
jbe
add
daa
incl
decl
xchg
dec
dec
adc
jmp
add
adc
xchg
and
incl
mov
mov
out
pushl
call
xchg
cltd
cld
lcall
mov
into
frstor
mov
xlat
jge
call
mov
dec
insb
stos
call
lock
cli
push
dec
lcall
decl
in
mov
fisttps
movsb
incl
in
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
xchg
mov
mov
pushl
jg
jg
cld
iret
cld
int3
js
int3
cld
iret
int3
cld
iret
js
int3
cld
iret
int3
cld
iret
js
int3
cld
iret
cld
int3
js
js
cld
int3
dec
cld
iret
js
int3
cld
iret
int3
cld
iret
js
int3
cld
iret
int3
cld
iret
js
cld
int3
dec
cld
mov
incl
js
ja
ja
ja
jo
clc
jmp
lock
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
cli
add
stc
cmc
add
div
add
cmc
jmp
icebp
in
out
loopne
in
faddl
jmp
rolb
in
add
loop
add
ffreep
add
fnstsw
add
ret
mov
fldt
test
movsl
mov
aad
addl
sahf
addl
enter
lds
js
mov
xchg
incl
add
mov
inc
add
incl
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
push
push
push
sbb
sbb
adc
push
push
pop
pop
or
push
push
push
push
or
push
sbb
add
sbb
sbb
or
sbb
sbb
push
sbb
add
sbb
sbb
pop
sbb
or
sbb
sbb
add
sbb
sbb
sbb
or
sbb
push
sbb
add
sbb
sbb
pop
sbb
sbb
or
sbb
add
push
push
pop
or
or
push
sbb
add
sbb
add
sbb
pop
sbb
or
sbb
sbb
add
sbb
sbb
sbb
or
sbb
add
sbb
sbb
add
sbb
sbb
pop
push
sbb
add
sbb
sbb
add
sbb
sbb
sbb
sbb
add
add
add
add
add
push
sbb
sbb
adc
add
add
add
add
add
adc
decb
paddd
clc
jmp
lock
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
call
jmp
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
or
addb
add
mov
add
mov
addb
add
addb
or
testl
mov
testl
ja
ja
jg
testl
push
addb
int3
dec
int3
int3
push
addb
int3
clc
int3
int3
int3
push
addb
int3
dec
int3
dec
int3
push
addb
int3
dec
int3
dec
int3
push
addb
int3
dec
int3
dec
int3
push
addb
int3
dec
int3
dec
int3
push
addb
int3
clc
int3
int3
int3
push
addb
int3
dec
int3
int3
push
addb
push
addb
push
addb
dec
int3
dec
int3
push
addb
dec
int3
dec
int3
push
addb
int3
dec
int3
dec
int3
push
addb
int3
dec
int3
dec
int3
push
addb
int3
dec
int3
dec
int3
push
addb
int3
dec
int3
dec
int3
push
addb
dec
int3
dec
int3
clc
addb
dec
int3
dec
enter
xchg
push
ja
add
push
ja
add
push
mov
add
pushl
add
xchg
ja
ja
ja
ja
ja
add
add
mov
mov
add
add
inc
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
jg
out
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
add
add
add
cmpsl
test
std
std
add
cld
sti
add
sti
cli
add
sti
testl
clc
repnz
imul
add
cmc
in
add
repz
add
lock
into
fwait
jg
xchg
jp
fsubs
add
stc
cmc
add
clc
repnz
div
add
cmc
in
add
hlt
jmp
add
out
filds
mov
ret
mov
mov
mov
clc
add
add
add
cmc
in
add
repz
sahf
addl
repnz
in
fildl
call
jg
stc
testb
imul
add
lock
jmp
add
in
add
cltd
jle
clc
repz
div
add
icebp
jecxz
out
loopne
ljmp
enter
div
add
cmc
out
add
out
loopne
in
fldl
in
flds
jmp
rolb
out
add
in
add
loop
add
xchg
jnp
imul
add
icebp
in
jmp
add
jmp
movb
loope
add
mov
hlt
jmp
out
loope
ljmp
ffreep
add
repz
add
call
movl
mov
in
fiaddl
jmp
into
add
fnstsw
mov
out
fiadds
in
fiaddl
ljmp
out
add
in
add
fidivl
add
fdivs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sbb
and
add
add
add
add
and
and
and
and
add
add
add
add
and
pop
pop
pop
sbb
add
add
add
add
and
sbb
sbb
sbb
and
add
add
add
pop
pop
pusha
pusha
pop
sbb
add
and
and
and
and
pop
pop
pop
pop
pop
sbb
and
and
and
and
pusha
pusha
pop
sbb
add
push
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
push
push
pop
pop
pop
sbb
add
push
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
pop
pop
pop
sbb
add
push
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
push
push
push
push
push
push
push
push
push
push
pop
sbb
add
push
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
dec
pop
push
push
push
push
push
push
pop
push
push
push
pop
sbb
add
dec
dec
dec
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
add
dec
dec
dec
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
add
inc
inc
inc
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
sbb
add
inc
inc
inc
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
push
push
push
dec
dec
push
sbb
add
aas
inc
inc
push
push
push
push
inc
inc
push
push
push
push
inc
inc
inc
pop
push
push
push
push
push
push
pop
inc
inc
inc
inc
sbb
add
aas
inc
inc
push
push
push
push
inc
inc
push
push
push
push
inc
inc
inc
inc
push
push
push
push
push
push
inc
inc
inc
inc
inc
sbb
add
xor
xor
and
xor
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
sbb
add
xor
xor
and
xor
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
sbb
add
sub
push
push
push
push
push
push
xor
xor
push
push
push
push
xor
push
push
push
push
xor
xor
and
add
push
push
push
push
push
push
pop
xor
xor
push
push
push
xor
push
push
push
push
xor
xor
and
add
sub
push
push
push
push
sub
push
push
push
push
sub
push
push
push
push
sub
push
push
push
push
sub
sub
and
add
sub
push
push
push
push
sub
push
push
push
push
sub
push
push
push
push
sub
push
push
push
push
sub
sub
and
add
sbb
push
and
push
push
push
push
and
push
push
push
push
and
push
es
add
and
push
and
push
push
push
push
and
push
push
push
push
and
push
es
add
sbb
add
push
push
push
push
pop
pop
and
push
push
push
push
sbb
push
push
push
push
es
add
sbb
add
push
push
push
push
pop
pop
and
push
push
push
push
sbb
push
push
push
and
and
and
add
adc
add
adc
adc
adc
pop
or
sbb
sbb
add
add
adc
add
adc
adc
adc
pop
or
sbb
sgdtl
add
add
add
add
add
pop
or
or
or
or
or
or
add
add
add
add
add
add
pop
or
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
incl
cld
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
aas
addb
jg
jmp
add
add
add
add
add
add
add
add
add
add
add
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
mov
js
add
add
add
mov
addb
add
or
add
add
add
mov
ja
ja
mov
add
add
js
add
add
or
push
js
add
or
js
add
pushl
mov
js
add
push
ja
ja
jg
js
add
js
add
js
add
cld
int3
int3
iret
cld
int3
int3
int3
int3
js
add
cld
int3
int3
iret
decl
js
add
cld
int3
int3
iret
clc
mov
int3
int3
int3
mov
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
clc
mov
int3
int3
int3
mov
js
add
cld
int3
int3
iret
decl
js
add
cld
int3
int3
iret
cld
int3
int3
int3
int3
js
add
js
add
js
add
js
add
int3
int3
int3
dec
int3
int3
cld
int3
int3
iret
js
add
int3
int3
int3
dec
int3
int3
cld
int3
int3
iret
js
add
int3
int3
int3
mov
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
cld
int3
int3
iret
dec
int3
int3
cld
int3
int3
iret
js
add
int3
int3
int3
mov
dec
int3
int3
cld
int3
int3
iret
decl
decl
dec
int3
int3
cld
int3
int3
iret
clc
mov
add
int3
int3
int3
dec
int3
int3
cld
int3
enter
addb
xchg
clc
ja
mov
add
xchg
clc
ja
addb
add
clc
ja
add
add
xchg
clc
js
add
add
xchg
decl
add
xchg
ja
ja
ja
ja
ja
ja
ja
xchg
add
mov
mov
mov
cld
add
clc
add
push
add
jmp
add
add
inc
add
rolb
incl
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
pop
inc
add
add
ud0
rolb
add
pop
inc
add
add
aas
inc
add
add
jg
inc
add
add
inc
add
add
inc
add
add
dec
std
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
add
sti
cli
add
stc
cmc
add
div
add
cmc
jmp
icebp
in
out
loopne
in
faddl
jmp
rolb
in
add
loop
add
ffreep
add
fnstsw
add
ret
mov
fldt
test
movsl
mov
aad
addl
sahf
addl
enter
lds
js
mov
xchg
incl
add
mov
inc
add
incl
sbb
sbb
sbb
sbb
sbb
adc
adc
push
push
sbb
sbb
adc
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
or
push
sbb
sbb
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
adc
or
or
sbb
push
push
pop
pop
pop
or
or
or
or
push
sbb
sbb
push
push
or
or
sbb
sbb
sbb
sbb
push
push
pop
pop
pop
or
or
or
or
or
push
sbb
sbb
sbb
sbb
push
push
or
or
sbb
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
or
or
or
or
push
push
push
push
push
push
push
push
push
or
or
or
push
sbb
sbb
pop
pop
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
sbb
sbb
pop
pop
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
sbb
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
or
or
or
sbb
sbb
sbb
sbb
sbb
or
or
or
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
or
or
or
sbb
sbb
sbb
sbb
sbb
or
or
or
or
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
or
sbb
add
sbb
sbb
sbb
push
push
push
sbb
sbb
sbb
pop
pop
pop
sbb
sbb
sbb
or
or
sbb
sbb
sbb
or
or
sbb
add
sbb
sbb
sbb
push
push
push
sbb
sbb
sbb
pop
pop
pop
sbb
sbb
sbb
or
or
sbb
sbb
sbb
or
or
sbb
add
sbb
sbb
sbb
push
push
push
sbb
sbb
sbb
pop
pop
pop
sbb
sbb
sbb
or
or
sbb
sbb
sbb
or
or
pop
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
pop
sbb
sbb
sbb
or
or
sbb
sbb
sbb
or
or
push
sbb
pop
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
pop
sbb
sbb
sbb
or
or
sbb
sbb
sbb
or
or
push
sbb
pop
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
pop
sbb
sbb
sbb
or
or
sbb
sbb
sbb
or
or
push
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
or
or
sbb
push
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
or
or
or
push
sbb
push
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
or
or
or
or
sbb
adc
add
add
add
add
add
add
add
push
push
push
push
push
pop
pop
pop
or
or
or
or
or
or
or
push
sbb
adc
add
add
add
add
add
add
add
push
push
push
push
push
pop
pop
pop
or
or
or
or
or
or
or
push
sbb
adc
add
add
add
add
add
add
add
push
push
push
push
push
pop
pop
pop
or
or
or
or
or
or
or
push
sbb
adc
add
add
add
sbb
sbb
sbb
sbb
add
add
add
sbb
sbb
sbb
pop
pop
pop
sbb
sbb
sbb
or
or
or
sbb
adc
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
pop
pop
sbb
sbb
sbb
or
or
or
sbb
adc
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
pop
pop
pop
sbb
sbb
sbb
or
or
or
sbb
adc
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
or
or
or
sbb
adc
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
or
or
or
sbb
adc
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
or
or
or
sbb
adc
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
pop
pop
pop
or
push
sbb
adc
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
pop
pop
pop
or
push
sbb
adc
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
push
push
sbb
sbb
sbb
pop
pop
pop
or
push
sbb
adc
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
push
push
push
sbb
sbb
sbb
pop
pop
or
or
sbb
adc
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
push
push
push
sbb
sbb
sbb
pop
pop
pop
or
sbb
adc
add
add
add
sbb
sbb
sbb
sbb
add
add
add
sbb
sbb
sbb
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
add
push
push
push
push
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
add
push
push
push
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
add
push
push
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
decb
paddd
cld
add
clc
add
push
add
jmp
add
add
inc
add
rolb
incl
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
pop
inc
add
add
ud0
rolb
add
pop
inc
add
add
aas
inc
add
add
jg
inc
add
add
inc
add
add
inc
add
add
pushl
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
add
add
and
or
add
add
call
add
and
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
inc
lods
add
dec
lods
add
pop
lods
add
outsb
lods
add
jl
add
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
