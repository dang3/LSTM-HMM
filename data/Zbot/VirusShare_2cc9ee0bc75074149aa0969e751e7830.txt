push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
lea
movl
call
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
lea
push
push
mov
call
test
je
mov
mov
mov
push
mov
push
push
push
push
push
mov
call
test
je
mov
mov
mov
push
push
push
push
push
push
mov
call
test
je
pop
mov
pop
ret
mov
mov
call
pop
xor
pop
ret
mov
push
call
neg
sbb
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
add
call
push
push
call
add
ret
nop
nop
push
push
call
test
jne
mov
push
mov
call
pop
pop
ret
mov
call
mov
mov
and
cmpl
jne
test
je
cmp
je
mov
push
mov
call
pop
pop
ret
mov
push
mov
call
pop
pop
ret
mov
push
mov
call
mov
add
cmp
ja
jmp
xor
cmp
mov
sete
xor
test
setne
push
mov
call
pop
pop
ret
xor
cmp
mov
sete
xor
test
setne
push
mov
call
pop
pop
ret
xor
mov
test
sete
xor
test
setne
push
mov
call
pop
pop
ret
xor
cmp
mov
sete
xor
test
setne
push
mov
call
pop
pop
ret
mov
xor
xor
test
setne
push
mov
call
pop
pop
ret
nop
into
adc
ljmp
add
nop
nop
nop
nop
nop
nop
nop
call
test
je
mov
add
cmp
ja
jmp
mov
push
push
push
push
call
ret
mov
push
push
push
mov
call
ret
mov
push
push
push
mov
call
ret
xor
mov
push
push
push
call
ret
mov
push
push
push
mov
call
ret
cltd
adc
lods
adc
mov
adc
outsl
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
push
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
nop
mov
push
mov
push
call
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
mov
call
mov
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
neg
sbb
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
call
ret
nop
nop
nop
nop
push
mov
mov
mov
push
mov
call
test
je
cmp
je
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
mov
push
mov
push
call
mov
lea
push
mov
movl
mov
push
push
call
testb
je
mov
push
push
push
mov
call
pop
ret
nop
mov
push
call
ret
nop
nop
nop
mov
mov
test
je
xor
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
lea
movl
call
lea
movb
call
lea
movb
call
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
cmp
jne
or
pop
ret
push
push
push
lea
call
test
jne
or
pop
ret
push
lea
call
xor
pop
ret
nop
nop
nop
nop
nop
push
push
push
lea
push
mov
call
push
xor
sub
xor
mov
xor
xor
push
mov
push
mov
mov
mov
mov
mov
push
call
test
je
push
mov
call
test
je
push
mov
call
push
mov
call
push
push
push
mov
call
mov
pop
pop
pop
ret
pop
pop
xor
pop
ret
nop
nop
nop
nop
mov
push
call
ret
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
mov
pop
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
ret
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
push
mov
sub
mov
mov
add
push
mov
push
mov
mov
mov
cmp
je
jne
xor
mov
jb
test
push
jmp
lea
cmpb
push
push
push
call
call
add
mov
mov
push
je
mov
push
add
pop
inc
lea
pop
push
mov
mov
push
push
ret
pushl
movb
jmp
mov
mov
cmp
push
ja
mov
mov
jb
inc
in
or
rcrb
push
jmp
jmp
push
mov
pop
mov
movb
add
jne
push
push
pop
cmpl
push
pop
call
jne
call
push
pushl
call
ret
sub
test
add
add
pushl
test
lea
push
mov
push
add
push
sete
mov
call
cmp
lea
pop
jne
push
cmpl
rorb
push
mov
sub
call
call
call
movl
adc
ljmp
pushl
lea
test
call
je
ret
cmp
mov
call
push
pushl
mov
push
mov
pushl
push
jmp
push
call
mov
cmp
xor
lea
je
push
pushl
call
jmp
push
push
mov
ret
push
push
pushl
xor
cmp
pushl
movb
call
call
mov
cmp
call
mov
jne
push
test
mov
cmpb
push
cmp
push
mov
mov
call
mov
pushl
add
pop
call
call
lea
pop
pop
xor
push
mov
push
mov
add
jl
mov
pushl
pushl
call
call
je
mov
lea
push
lea
push
jmp
lea
push
sub
call
push
push
push
push
push
mov
call
push
push
jne
cmpb
mov
push
jmp
je
mov
jbe
jl
push
call
mov
pop
mov
neg
add
push
mov
call
inc
push
call
lea
cmpl
mov
push
push
pop
je
mov
je
add
sub
mov
jmp
call
or
push
pop
lea
mov
pushl
mov
jl
jne
pop
call
ja
add
jmp
cmp
mov
push
mov
call
cmp
mov
pop
xchg
inc
add
add
cmp
push
pop
jne
push
mov
pushl
cmp
jl
jle
push
call
jne
ret
push
lea
mov
push
push
jne
mov
push
add
je
pop
push
pop
ret
call
lea
adc
mov
push
call
push
test
push
test
pushl
push
add
pop
pop
add
test
mov
jl
movzwl
dec
adc
call
sub
leave
mov
add
push
pop
pop
cmp
mov
call
add
mov
push
push
push
dec
pop
pop
test
push
call
jne
push
push
jbe
call
push
mov
push
jle
pushl
lea
lea
push
pop
pushl
lea
je
cmp
push
pushl
cmp
pop
push
lea
call
je
call
jne
pop
pop
jmp
call
mov
movsbl
mov
call
push
push
push
mov
call
sub
pop
mov
call
push
pushl
je
jne
mov
mov
add
add
les
push
add
mov
mov
pushl
jmp
dec
push
push
mov
jmp
push
push
push
push
call
call
sub
mov
pushl
jne
call
call
call
or
pushl
jmp
push
call
push
ret
cmp
call
call
push
je
jne
pushl
mov
push
lea
sub
call
lea
push
jmp
push
push
pushl
add
mov
mov
jb
push
push
mov
pushl
pop
pop
sub
call
mov
mov
add
push
xor
mov
xor
add
add
jle
push
push
lea
mov
cmp
add
inc
dec
mov
push
cmp
mov
movb
push
xor
push
push
push
push
add
cmpl
jmp
mov
cmp
lea
call
call
call
mov
push
push
je
call
mov
pushl
push
push
push
push
push
push
cmp
lea
push
je
call
mov
mov
push
mov
movzbl
mov
push
push
mov
mov
jne
pop
add
lea
push
je
pushl
push
push
push
pushl
pushl
push
push
pop
push
push
add
mov
pushl
mov
jge
call
xor
inc
add
cmp
push
add
push
push
push
pop
mov
pushl
mov
jne
add
lea
and
jne
pushl
cmp
jbe
push
mov
call
mov
movsbl
test
pop
push
jmp
lea
incl
push
pushl
pushl
pop
call
cmpl
push
lea
push
je
push
call
push
add
call
pushl
ret
xor
pushl
pop
jb
fiaddl
add
push
push
mov
pop
cmpl
mov
movzwl
pop
mov
jmp
add
call
push
push
jl
call
push
mov
push
push
push
pop
push
lea
push
push
pushl
je
ret
lea
ret
push
add
test
push
dec
jmp
add
pop
call
push
push
movzbl
call
add
lea
pop
push
mov
push
ret
push
call
cmp
dec
pushl
call
push
push
push
call
mov
pop
cmp
call
call
jmp
mov
jmp
cmp
leave
je
call
push
jmp
push
push
ret
push
mov
sete
push
xor
sub
cmp
test
and
push
pushl
je
cmp
mov
mov
push
cmpb
mov
call
push
push
lea
test
jmp
mov
mov
pop
push
push
call
pop
cmp
push
mov
call
jb
les
mov
mov
pushl
push
pop
sbb
call
mov
jmp
mov
lea
push
call
push
test
add
pop
cmp
mov
pushl
ret
call
push
push
dec
push
jne
call
call
call
test
push
push
call
pop
sbb
pop
mov
call
mov
mov
je
pop
lea
mov
dec
add
mov
pop
jne
call
push
call
cmp
mov
pop
mov
pop
add
mov
jne
mov
cmp
call
push
push
cmpb
movzbl
push
sbb
sub
lcall
add
les
popl
cmp
mov
test
push
push
push
add
mov
push
test
jmp
lea
mov
call
cmpl
push
pushl
cmpl
movsl
push
push
cmp
mov
pushl
or
push
push
push
pop
jge
push
or
add
call
push
call
push
call
push
pop
call
lea
call
call
push
sub
push
dec
jmp
push
push
push
cmp
cmp
cmpl
push
add
mov
add
push
addr16
inc
add
je
inc
xchg
inc
add
cmp
je
ret
mov
lea
jb
fadds
add
add
aas
add
push
pop
je
mov
push
xor
call
lea
cmp
mov
mov
test
mov
cmpl
push
add
mov
push
push
je
mov
je
push
mov
jl
push
add
je
cmp
mov
push
pushl
push
push
push
leave
mov
inc
pop
jle
call
call
movl
pop
je
cmp
adc
push
jb
lret
adc
test
inc
add
call
call
push
movzbl
pushl
call
jne
push
lea
cmp
push
pop
mov
cmp
push
call
sub
mov
call
cmpl
in
add
sub
je
inc
jne
pushl
mov
mov
push
ja
push
mov
leave
call
mov
add
push
pop
jne
lea
pop
je
push
mov
pop
testb
je
lea
dec
call
jne
call
pop
add
ret
call
pop
pushl
call
pop
add
pop
xchg
inc
add
pop
call
cmp
jne
lea
mov
test
call
call
mov
push
push
jne
lea
test
jmp
mov
mov
push
lea
test
pushl
mov
pop
mov
call
ret
pop
call
lea
cmp
mov
jne
push
pop
mov
cmp
jmp
cmp
pushl
push
pushl
call
lea
push
pop
pushl
jne
mov
push
pop
call
add
call
pop
push
add
lea
pop
cmp
mov
call
jmp
les
push
push
jmp
xor
push
jmp
mov
jmp
call
lea
mov
push
mov
call
test
push
push
mov
mov
mov
push
jl
call
jmp
push
popf
xchg
inc
add
jge
add
test
add
add
mov
add
pushl
pushl
pushl
cmp
mov
pop
lea
call
push
xor
pop
jbe
mov
mov
push
pop
push
mov
pushl
jl
push
cmp
mov
push
jne
inc
add
mov
push
mov
pushl
push
cmp
mov
mov
call
jne
ret
call
inc
pop
pop
push
pop
call
leave
push
call
call
movsbl
call
add
mov
cmp
mov
jb
stc
ljmp
jae
pop
mov
mov
add
mov
cmp
inc
movl
les
sbb
call
push
cmp
mov
add
lea
pop
pop
pushl
sete
pop
setge
add
call
lea
pop
push
call
mov
je
call
je
add
push
call
pop
ret
add
movsbl
sub
je
push
add
pushl
push
setne
call
lea
push
pushl
push
test
jne
push
pop
add
cmp
push
pop
mov
call
jle
push
pop
push
mov
push
mov
mov
je
push
call
call
push
add
and
add
add
push
call
call
push
pushl
pop
call
mov
je
pop
lea
js
pushl
push
pushl
sub
call
pop
pushl
test
pushl
lea
call
cmp
dec
movzwl
push
sub
mov
push
mov
pop
cmp
mov
mov
jle
push
pop
push
push
call
mov
jne
push
push
mov
jne
jle
mov
ret
push
call
pushl
pushl
pushl
push
mov
mov
call
mov
push
lea
call
mov
push
je
call
push
pop
pop
push
pushl
push
mov
test
pushl
call
push
call
call
je
mov
lea
mov
mov
jmp
pushl
pop
sub
push
push
pop
push
ret
push
pop
push
mov
setl
mov
test
pop
lea
call
add
add
movl
mov
cmp
call
mov
lea
push
call
push
jne
cmpl
pop
je
push
pop
jne
pushl
push
push
je
call
add
pop
call
mov
mov
add
jb
cmpb
mov
mov
pop
push
pushl
push
xor
push
push
je
mov
push
push
push
push
push
push
cmpb
lea
call
pop
push
call
push
mov
call
test
push
movl
les
call
test
xor
jne
mov
jmp
pop
push
mov
pop
mov
mov
lea
jne
call
cmp
push
call
jne
push
call
jne
xor
call
cmp
push
mov
je
call
ret
jl
pop
push
call
cmp
je
pop
mov
jmp
push
mov
push
add
jmp
call
pop
push
lea
lea
jne
mov
push
jmp
lea
or
sub
pushl
push
add
sub
call
jmp
push
add
mov
pop
pushl
cmp
pushl
je
movl
mov
add
add
push
test
lea
call
dec
jne
mov
push
pop
lea
call
push
mov
push
mov
mov
call
cmpb
push
push
test
call
push
mov
inc
cmp
call
jmp
cmpl
mov
mov
xor
pushl
pop
call
add
mov
push
push
call
mov
call
movzbl
mov
add
push
push
pushl
push
mov
mov
dec
mov
push
dec
sti
xchg
inc
add
bound
add
add
pushl
cmp
jmp
movl
xor
add
lea
pop
mov
lea
inc
push
call
movb
pushl
push
mov
ret
cmp
call
push
pushl
push
call
pop
push
jmp
xchg
nop
inc
add
jle
cmpl
push
cmpl
mov
add
movzbl
jmp
push
xor
push
pushl
call
ret
call
ret
pushl
jmp
push
push
lea
sub
push
mov
pop
add
add
lea
push
mov
mov
jne
push
mov
add
pop
gs
inc
add
sbb
mov
add
add
xchg
inc
add
push
mov
mov
push
mov
call
push
je
pushl
add
mov
pushl
mov
mov
call
pop
lea
mov
movl
pushl
jne
call
push
inc
push
je
call
mov
add
jne
jne
push
push
jmp
mov
push
call
mov
call
call
pop
mov
pushl
call
push
mov
pop
mov
jmp
mov
mov
sub
cmp
jne
inc
pop
mov
call
jmp
movb
push
mov
call
pop
test
jne
lea
test
push
push
mov
inc
call
push
add
jl
mov
mov
push
call
push
mov
push
push
call
cmpl
xchg
mov
pushl
push
mov
pop
pushl
movl
mov
cmp
call
sub
pushl
call
call
ret
push
push
test
mov
push
push
pop
pushl
jb
movl
xor
test
idiv
call
pushl
pop
mov
jb
dec
and
jne
cmp
call
lea
call
cmp
push
cmp
dec
push
push
push
push
add
cmp
call
pop
lea
pushl
push
pop
push
dec
push
mov
push
cmp
push
pop
push
call
push
pop
call
cmp
push
test
call
mov
push
mov
push
call
call
jmp
cmpl
shl
call
pop
mov
jne
call
call
jmp
ret
mov
call
call
inc
call
mov
pop
cmp
jne
call
je
pushl
cmp
ret
mov
push
lea
call
jb
push
lea
push
push
mov
jmp
jbe
push
push
dec
call
cmp
call
call
ret
pop
dec
pop
pushl
push
push
lea
push
mov
movzbl
add
pop
mov
call
mov
jmp
pop
pop
xchg
inc
add
xchg
inc
loope
mov
xor
lea
movw
rep
stos
lea
push
push
push
call
mov
push
lea
push
push
call
test
jne
lea
push
push
push
call
test
jne
push
push
push
push
push
lea
push
push
call
cmp
jne
push
push
push
push
push
lea
push
push
call
cmp
jne
push
push
push
push
push
lea
push
push
call
cmp
jne
leave
push
push
mov
je
movl
pushl
or
add
call
pop
mov
add
cmp
push
mov
call
add
incl
pushl
push
inc
jne
jmp
pop
push
call
call
cmp
push
pushl
lea
pushl
mov
push
mov
push
push
jne
push
push
push
call
je
call
push
push
push
inc
cmpl
push
iret
popl
pop
cmpb
lret
add
xchg
inc
add
xchg
jbe
add
outsl
add
test
push
call
je
pushl
cmpb
mov
push
push
push
jne
jl
test
pushl
jne
call
mov
mov
push
push
mov
pop
add
jge
push
test
push
call
push
mov
jne
pushl
push
pop
ss
mov
push
pushl
add
lea
cmpb
pop
movl
stc
add
arpl
add
je
inc
push
mov
push
jne
call
push
pushl
pushl
mov
push
sub
inc
sbb
push
add
movb
cmp
cmp
push
pop
add
call
mov
mov
push
add
push
mov
pop
pop
mov
je
pushl
push
call
lea
jle
mov
push
je
test
mov
jmp
push
call
call
call
jmp
add
push
push
push
push
push
je
dec
call
pop
pop
movb
nop
inc
add
jle
add
jo
push
test
lea
cmp
mov
cmp
push
call
je
cmp
mov
xor
pushl
push
decl
jle
lea
pushl
push
push
movsbl
mov
inc
call
push
je
sti
nop
inc
add
pop
call
push
je
idiv
call
je
jne
movsl
pushl
push
jl
push
mov
pushl
call
push
lea
push
push
je
push
mov
mov
mov
push
jmp
push
mov
push
imul
push
ret
cmp
push
push
pop
mov
call
mov
call
call
push
call
stos
mov
pop
ret
call
push
call
jmp
call
lea
or
call
mov
push
mov
je
add
movzbl
push
push
mov
pushl
pushl
push
call
pushl
jge
pop
push
push
push
push
add
pushl
je
pushl
mov
mov
push
jge
jmp
mov
inc
pop
push
call
mov
push
mov
mov
jne
push
call
push
push
push
push
call
jl
push
mov
mov
push
pop
lea
mov
jmp
cmpsl
nop
inc
add
call
xor
add
pop
aaa
push
xor
cmpl
mov
pop
call
mov
mov
add
jl
push
pop
lea
jne
push
jmp
push
call
jne
pushl
push
inc
ret
push
push
push
push
jne
jne
call
cmpl
les
add
call
mov
pop
mov
pop
mov
push
test
pop
cmp
sub
call
call
lea
jmp
mov
call
mov
jne
lea
mov
push
pop
call
movsl
andl
call
cmp
je
pop
pushl
je
xor
je
call
push
push
call
push
push
call
mov
push
sub
mov
cmp
call
mov
call
push
sub
call
mov
lea
test
mov
xor
pushl
jl
push
movl
add
pop
adc
inc
out
adc
pushl
push
pop
je
push
jmp
mov
je
push
pop
mov
pushl
push
push
pop
push
call
lea
aas
push
push
call
mov
movzbl
push
mov
jmp
lea
push
pushl
movb
push
add
call
push
mov
push
add
lea
je
push
add
cmp
push
cmp
pop
movl
and
push
mov
call
jge
add
sub
pop
je
push
mov
pop
das
nop
inc
add
mov
les
dec
mov
jmp
call
call
add
jge
push
push
push
ret
cmp
push
mov
lea
push
call
jne
adc
in
jge
ret
call
xchg
nop
inc
add
mov
push
push
call
call
add
jle
push
cmpl
push
mov
push
push
push
call
mov
pushl
mov
mov
mov
jl
mov
push
push
pop
test
call
pushl
jmp
je
pushl
mov
push
jne
je
push
push
push
dec
push
call
cmpl
jne
mov
jne
pop
push
inc
cmp
mov
call
jmp
call
push
mov
pop
shl
pop
je
add
call
call
push
push
xor
call
push
add
add
lea
add
je
jne
mov
mov
mov
mov
mov
push
push
call
push
call
call
cmp
mov
call
xor
call
mov
je
sub
push
mov
je
pop
call
mov
cmp
ret
jne
pushl
add
lea
mov
lea
push
mov
call
mov
dec
call
pop
mov
stos
jle
call
mov
pushl
mov
add
cmp
push
sar
push
jne
movzbl
push
push
push
mov
push
push
call
mov
pop
je
inc
dec
jle
mov
call
add
test
push
call
test
pushl
call
mov
mov
mov
pop
testb
pop
mov
jmp
cmp
inc
mov
lea
mov
push
push
push
push
push
lea
push
push
call
cmp
jne
xor
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
inc
cmp
jl
mov
call
pushl
call
pop
movb
mov
jmp
push
mov
push
ret
lea
pushl
push
push
je
jmp
mov
call
mov
call
push
mov
add
mov
pop
mov
jmp
add
push
pushl
push
jne
mov
push
shl
cmpl
push
inc
mov
mov
pushl
test
call
movzbl
push
mov
push
sub
dec
add
dec
adc
xchg
test
mov
mov
rep
dec
call
xor
dec
push
call
idiv
call
call
mov
pop
je
call
push
jmp
mov
mov
jne
pushl
mov
call
je
mov
call
push
mov
mov
pushl
and
cmp
jmp
jne
lea
call
cmp
call
cmpl
xor
add
add
push
push
mov
je
add
movl
add
pop
push
add
cmp
shlb
les
test
decl
mov
call
push
sub
pushl
pop
push
push
add
jl
mov
call
push
jne
push
pop
mov
inc
push
mov
call
call
push
mov
cmpb
stc
add
or
dec
adc
rol
inc
add
call
pushl
mov
push
pop
pushl
mov
call
pushl
jmp
push
shl
add
push
call
call
push
push
cmpl
call
pushl
cmp
call
mov
mov
jne
push
pop
call
movzbl
mov
add
push
add
call
jne
pop
cmpl
push
call
push
je
add
push
push
cmpl
push
call
push
push
push
push
mov
push
push
cmp
push
cmp
movl
and
add
add
push
call
push
mov
push
push
pushl
push
je
push
push
push
push
pushl
jmp
push
mov
jmp
mov
inc
call
pop
jne
pop
call
push
add
push
test
je
pushl
ret
push
cmp
jl
and
mov
add
mov
call
and
add
xor
call
pushl
add
mov
call
ret
push
xor
call
pushl
call
test
add
call
push
jmp
call
mov
jb
pop
jns
add
push
mov
dec
push
cmpb
call
sub
pushl
mov
jle
add
xor
ret
push
push
mov
add
pushl
cmp
call
call
movl
mov
push
push
push
call
push
ret
push
push
mov
call
ret
mov
push
pop
add
pushl
call
inc
mov
push
pushl
push
pushl
sub
jmp
add
push
mov
call
movl
test
add
add
mov
mov
mov
mov
test
push
test
andl
mov
dec
mov
push
pushl
mov
lea
mov
ret
call
cmp
mov
mov
mov
push
andl
add
push
call
ret
pushl
cmp
inc
cmp
mov
pop
push
push
call
jb
jge
add
ljmp
inc
add
jnp
test
mov
test
push
jne
mov
mov
pushl
cmpl
mov
push
je
mov
push
pop
mov
call
pushl
push
jge
jmp
push
inc
call
mov
sub
pushl
cmp
mov
mov
call
test
call
push
pop
push
xchg
inc
add
fcomps
ja
push
movzbl
stos
pop
inc
add
jne
push
call
push
add
mov
movl
pop
push
push
push
push
mov
pop
cmp
call
pop
cmpl
call
push
sbb
mov
or
add
add
xchg
sub
mov
mov
call
test
jmp
pushl
pop
cmp
push
push
cmp
pushl
push
pushl
call
shl
push
sub
or
inc
mov
push
push
pop
pop
push
push
push
push
jmp
add
push
lea
cmpl
cs
jne
je
push
add
call
sbb
add
add
mov
sar
pop
pop
push
mov
pushl
cmp
push
pop
leave
jne
jne
xor
movb
add
mov
mov
call
cmp
sub
push
test
push
pushl
movl
push
add
push
push
mov
mov
push
call
mov
mov
mov
cmpb
mov
mov
call
jmp
call
push
jmp
add
push
cmp
push
mov
push
push
push
movl
sti
sub
add
push
add
push
pushl
pop
movl
add
jne
call
push
mov
lea
mov
push
push
pushl
push
call
mov
push
cmp
xor
cmpl
jne
jne
movb
add
push
pop
je
xor
sub
push
mov
call
pushl
push
call
je
cmp
sub
jmp
push
jle
call
jl
push
sub
mov
test
mov
mov
pop
pushl
call
push
call
push
inc
mov
pop
sub
cmp
mov
mov
call
call
push
call
push
pop
inc
push
mov
push
push
pop
pop
cltd
ja
pop
push
sbb
pop
jne
mov
je
push
call
push
call
call
mov
mov
and
cmp
push
mov
pushl
mov
mov
push
cmpl
add
push
loope
call
mov
call
push
mov
mov
call
push
pop
call
jmp
call
push
lea
add
mov
push
mov
or
enter
push
push
add
push
mov
cmp
push
push
xor
mov
add
sub
add
call
add
pop
pop
push
jne
call
call
neg
mov
call
call
push
lea
push
pop
inc
pushl
call
pop
je
call
mov
mov
push
je
mov
pushl
je
jmp
cmp
push
call
call
mov
push
push
pushl
sub
pop
mov
call
inc
push
call
pop
push
add
call
jne
jge
add
push
call
cmp
jb
test
inc
add
in
mov
pushl
mov
push
call
pop
sub
push
push
push
call
mov
push
je
push
push
pop
mov
lea
mov
push
call
lea
mov
cmc
inc
add
add
call
pushl
jmp
push
mov
push
je
call
call
call
mov
pop
cmp
pushl
add
add
push
push
pop
pop
jne
push
push
jb
dec
add
out
inc
add
popl
push
push
mov
pop
push
push
mov
push
cmp
test
add
mov
call
push
push
jmp
jne
ret
pushl
push
mov
cmp
pop
add
mov
pushl
push
pop
pop
add
movl
mov
push
and
call
call
jb
mov
mov
pushl
mov
push
push
mov
pushl
pop
push
push
cmp
mov
movzbl
jmp
pushl
push
mov
pushl
je
mov
cmpl
mov
jl
mov
pushl
addl
add
int3
jmp
decl
push
ret
je
call
push
mov
push
pushl
add
pushl
mov
pushl
mov
mov
xor
add
lea
call
jmp
mov
jne
lea
xor
pop
movb
push
shl
push
push
mov
jmp
pop
mov
je
push
mov
push
pop
mov
xor
call
push
push
cmpl
push
push
call
xor
call
je
push
push
or
repz
call
xor
add
call
mov
pop
call
call
add
call
mov
dec
dec
pop
je
cmp
mov
pushl
je
pop
rep
pop
cmp
jne
call
push
pushl
or
pushl
push
ret
movzbl
in
push
push
push
jbe
pop
pop
pop
push
mov
push
call
pop
jg
mov
pop
push
push
add
push
mov
pop
xchg
xchg
inc
add
push
jb
add
push
mov
pushl
push
push
push
movb
popl
cmp
mov
or
pop
mov
mov
movl
inc
hlt
push
mov
push
call
movl
lret
add
mov
call
lea
pushl
je
jle
push
call
mov
pop
push
pop
push
shr
je
call
pop
push
mov
pop
mov
push
jne
add
mov
pushl
testb
call
push
rcll
lcall
add
add
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
lea
movl
call
lea
movb
call
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
push
mov
push
mov
push
push
mov
mov
movl
movl
pop
pushl
pop
movl
add
cmp
add
dec
or
add
xchg
add
add
mov
mov
push
push
jne
mov
pushl
dec
cmp
jb
mov
mov
ret
dec
add
sbb
push
push
pushl
inc
add
mov
test
push
call
je
push
mov
jne
call
cmp
push
jne
pop
movl
xorl
ret
mov
and
jne
mov
jmp
push
push
mov
mov
call
push
call
call
lea
mov
pushl
push
push
xor
test
and
jne
leave
mov
mov
call
push
call
je
push
mov
pop
je
test
push
test
mov
je
movl
jne
mov
mov
add
push
je
lea
pop
mov
movl
popl
pushl
mov
push
call
mov
pop
push
mov
push
mov
pushl
movl
push
add
pop
pop
cmp
push
call
push
je
test
call
push
push
jmp
jl
pop
push
push
push
pushl
cmp
mov
lea
mov
sbb
push
add
pop
add
push
mov
test
push
call
jne
ret
push
and
lea
mov
push
push
push
mov
push
add
push
jmp
push
mov
pushl
call
jne
push
mov
leave
push
mov
call
jge
cmpl
mov
add
add
jl
pushl
les
sub
call
pushl
je
mov
inc
add
add
push
call
add
push
mov
call
je
push
push
lea
mov
stc
xchg
inc
add
test
decl
testl
mov
pop
call
movsbl
push
call
ret
sub
andl
mov
jmp
call
push
cmp
sub
test
mov
mov
pop
ret
jle
dec
push
call
push
mov
pushl
jne
setne
push
push
push
call
jne
push
push
push
push
test
push
add
pushl
call
push
pop
mov
add
call
pop
mov
je
inc
call
push
push
push
pushl
pushl
push
push
push
lea
push
rep
xor
pushl
mov
cmp
pushl
pushl
push
call
shr
xor
jne
mov
jne
pop
jne
add
add
cmp
pop
mov
leave
jne
lea
call
pushl
mov
test
add
pushl
call
call
or
mov
dec
or
imul
jne
mov
call
mov
cmp
add
push
cmp
jbe
lea
call
pop
mov
call
movl
call
leave
pushl
test
push
cltd
xchg
inc
add
push
sub
fs
inc
add
adc
call
je
je
mov
push
xor
push
call
pushl
adcl
add
mov
add
add
add
ja
pop
push
call
pop
push
lea
sbb
mov
call
push
mov
jne
je
add
jmp
je
mov
call
push
call
add
push
call
xor
mov
ret
push
push
movzbl
jg
je
call
push
pushl
add
cmpl
push
mov
mov
lea
push
push
mov
je
push
push
mov
cmp
push
cmpl
add
push
push
ret
cltd
je
mov
movl
call
add
pop
mov
call
push
add
push
push
mov
cmp
mov
mov
pushl
push
lea
je
je
incl
call
mov
xor
mov
mov
movl
pop
push
call
test
call
call
push
push
mov
push
mov
push
mov
mov
mov
sub
cmp
cmp
movl
int3
inc
add
add
inc
push
push
push
pushl
movl
inc
adc
setne
mov
call
jle
pushl
mov
mov
jb
push
jmp
or
cmp
cmp
pushl
call
call
jmp
jl
call
call
call
push
mov
mov
jle
cmpl
sub
jmp
dec
cmp
add
push
push
add
test
push
jne
jne
je
jne
push
inc
je
push
mov
push
push
call
test
cmp
cmp
cmp
jmp
or
ret
jl
add
sub
jmp
push
call
pushl
incl
pop
pop
push
jne
pop
mov
mov
pop
push
mov
mov
pop
push
push
lea
push
pushl
pushl
pushl
push
pop
mov
push
incl
lea
pushl
mov
setg
mov
push
jle
mov
test
xchg
inc
add
call
push
sub
pop
push
mov
mov
call
push
push
call
jb
addr16
push
mov
call
pushl
xor
je
je
jmp
je
push
mov
cmp
push
inc
jmp
push
xor
pushl
mov
push
pop
call
call
pop
push
pop
call
pop
jl
add
push
call
push
pushl
lea
add
push
mov
adc
jne
cmp
pushl
mov
leave
push
push
call
cmp
mov
call
push
cmp
mov
push
jmp
push
call
movzbl
jne
push
pushl
jmp
jle
mov
test
add
push
mov
pop
push
pushl
jl
sbb
int3
inc
add
fcompl
add
ret
jmp
pop
cmp
pop
push
push
push
push
push
push
dec
test
inc
or
mov
call
mov
test
lea
push
cmpb
push
test
mov
pushl
jne
mov
mov
call
pushl
mov
mov
push
pushl
movb
mov
mov
pushl
add
je
mov
call
pushl
add
movl
mov
je
pushl
jne
mov
lea
jne
call
lea
mov
mov
mov
je
add
mov
mov
mov
call
mov
push
jb
jne
cmpl
mov
push
cmp
push
mov
pop
cmp
push
call
push
pop
push
push
cmp
pop
push
push
push
push
mov
push
call
mov
cmpl
push
mov
add
je
push
movzbl
call
add
pop
lea
call
call
add
call
pushl
and
call
call
pop
push
je
je
push
pushl
mov
lea
mov
pop
ret
push
push
jne
lea
pushl
inc
pushl
call
lea
cmp
push
test
pushl
inc
push
mov
call
lea
pop
mov
pushl
call
cmpb
add
add
mov
add
xor
dec
call
mov
mov
je
push
call
cmp
mov
cmpb
pushl
movl
mov
pushl
add
push
sub
add
call
call
mov
call
push
cmp
call
ret
push
push
call
pop
xor
mov
push
pushl
mov
lea
pushl
pushl
push
push
cmp
push
mov
test
jb
mov
movb
inc
dec
pushl
push
call
push
sub
cmpl
call
cmp
pushl
push
add
call
leave
pop
jmp
jne
pop
xor
pop
call
call
push
push
mov
call
mov
fmulp
jmp
jne
mov
mov
call
pushl
movl
mov
mov
push
cmpl
add
pop
je
add
pop
pop
pop
push
add
pop
ret
pushl
jne
jl
pop
push
ret
call
push
je
mov
push
call
lea
call
lea
movb
call
mov
movl
call
mov
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
mov
push
call
cmp
je
push
xor
sub
xor
mov
xor
lea
push
mov
push
push
mov
mov
mov
mov
call
test
je
push
mov
call
test
je
lea
push
push
push
mov
call
test
je
push
push
mov
call
test
je
push
mov
call
push
mov
call
push
push
push
mov
call
mov
pop
call
add
call
push
jne
pop
push
mov
push
push
movb
push
pop
pushl
pop
push
push
mov
call
cmpl
lea
call
push
call
pop
add
cmp
call
dec
je
pop
xor
mov
cmp
xor
rep
add
add
mov
call
mov
jne
inc
add
test
add
add
cmp
andl
add
push
sbb
les
xor
test
add
push
je
jmp
pushl
push
push
rcll
and
add
ja
inc
add
lea
mov
push
mov
push
mov
pop
push
mov
jne
mov
mov
pop
test
jne
inc
push
mov
jne
call
add
xor
jmp
test
call
call
mov
jne
pushl
lea
cmp
mov
mov
push
pushl
test
call
push
push
jne
pushl
pushl
pushl
or
push
push
push
mov
orl
push
dec
xchg
inc
add
sbb
add
jmp
pushl
pushl
call
call
push
mov
lea
cmp
pop
pop
pop
ret
push
push
push
call
push
add
call
push
mov
call
dec
mov
leave
push
mov
mov
pop
xor
push
mov
cmp
mov
ret
mov
lea
cmp
ret
push
push
je
jmp
cmp
mov
push
mov
pop
add
ret
mov
call
mov
mov
jne
mov
or
push
call
push
jmp
cmpl
add
pop
jne
push
movl
test
std
call
push
push
jne
call
jne
call
push
push
push
pop
jne
mov
lea
call
push
mov
je
call
push
push
push
jmp
push
cmpb
add
mov
push
movl
clc
enter
ja
push
lea
cltd
call
add
jne
cmpl
push
push
push
add
jmp
jge
mov
movzwl
call
mov
push
mov
lea
jne
cmpl
call
push
movb
add
push
je
call
call
jne
ret
pushl
call
push
call
sar
pop
inc
push
test
jne
mov
push
pushl
push
call
pushl
call
call
call
push
xor
push
mov
call
mov
call
push
push
push
ret
call
push
lea
push
mov
push
mov
cmp
jne
je
mov
push
call
call
push
jmp
pop
add
call
push
pushl
jl
call
pop
call
push
call
pop
xor
jmp
pop
call
cmp
pop
push
mov
lea
call
call
sub
je
add
lea
pushl
push
push
mov
setne
pushl
push
mov
mov
cmp
cmp
call
pop
jmp
push
xor
lea
call
call
call
ret
pop
push
add
mov
push
cmpl
add
push
push
push
mov
cmp
call
push
push
ret
push
pushl
pop
push
mov
push
call
je
lea
cmp
pop
xor
stc
xchg
inc
add
push
add
pushl
sub
call
mov
mov
mov
pushl
pushl
cmp
call
je
push
cmp
mov
je
push
mov
jne
push
pop
pop
call
mov
jne
add
jb
inc
adc
dec
ret
mov
push
mov
lea
call
push
mov
mov
pop
add
call
dec
cmp
pushl
add
push
call
cmpb
mov
pushl
cmp
shl
xor
inc
lea
shr
push
cmpb
jb
cwtl
add
add
incl
cmp
je
push
call
jmp
test
push
call
push
call
jne
push
call
push
mov
push
cmp
mov
mov
jne
inc
push
mov
call
push
push
call
pushl
mov
push
push
call
call
jmp
cmp
jmp
decl
push
leave
push
push
push
movb
cmp
decl
jne
cmp
push
push
test
pop
pop
push
push
mov
push
call
pop
call
call
jl
push
push
cmp
jl
movl
push
pushl
test
sub
pop
add
mov
add
call
jne
lea
call
mov
mov
push
pop
lea
inc
adc
jne
call
push
test
mov
idiv
sub
ret
add
mov
pushl
lea
ret
ret
test
je
cmp
mov
push
neg
push
push
push
cmp
call
mov
push
pushl
push
pushl
push
cmp
pushl
pop
mov
call
mov
xor
mov
jle
jmp
push
pop
lea
push
mov
cmpl
push
and
mov
pop
pushl
call
mov
mov
push
mov
push
call
push
iret
popl
movb
je
push
call
call
push
call
je
push
call
test
test
mov
lea
push
pushl
call
jmp
jne
mov
push
mov
pop
mov
pop
pop
test
add
push
push
push
incl
jne
jne
mov
push
push
lea
push
push
push
je
pushl
push
pop
je
dec
mov
dec
lea
call
lea
push
pop
call
push
cmp
push
cmpl
push
adc
add
add
push
add
mov
call
cmp
push
movb
mov
cmp
push
call
call
jmp
lea
lea
dec
call
add
sub
mov
push
push
call
je
pop
call
push
pop
push
xor
push
push
push
mov
mov
jmp
je
pop
mov
pushl
add
lea
add
call
pop
pushl
push
je
jne
push
mov
mov
push
incl
mov
call
push
pop
movl
jne
call
push
push
call
jne
call
push
jbe
inc
add
adc
add
push
inc
add
je
call
jne
sarl
in
lcall
je
mov
push
mov
call
mov
mov
pushl
push
push
push
push
push
call
sub
mov
mov
push
mov
call
jmp
push
mov
mov
mov
push
movb
push
push
jmp
inc
add
jne
jne
cmp
jmp
jmp
call
pushl
push
push
jne
mov
push
cmpl
pop
mov
pop
mov
lea
push
push
cmp
add
mov
jne
mov
ret
call
add
lea
cmpb
jmp
jne
call
pop
push
add
je
test
je
jne
lea
mov
push
cmp
shl
ret
push
je
push
movl
xchg
add
add
mov
push
pop
jle
incl
leave
sub
mov
pushl
ret
xor
pop
pop
pop
pop
ret
call
jne
mov
pop
push
push
call
call
inc
add
push
call
pop
je
push
cmp
sub
pop
jmp
pop
jmp
jle
call
push
cmpb
lea
push
push
call
mov
jne
mov
push
adc
jne
mov
add
push
orl
jne
add
push
test
mov
pop
mov
pop
movzbl
push
pushl
push
jne
push
push
movzwl
push
pushl
pushl
push
cmp
cmp
add
call
jne
jne
push
cmp
push
jmp
call
cmp
mov
push
pushl
mov
push
push
call
call
mov
je
test
mov
push
cmp
je
shl
call
add
je
pop
push
pushl
ret
pop
dec
push
movb
pop
push
mov
push
cmp
pushl
lea
pushl
pop
jmp
jg
mov
pop
push
mov
push
mov
xor
cmp
testb
cmpb
call
mov
test
and
push
call
mov
jne
push
pop
ret
add
push
mov
add
push
push
xor
mov
adc
dec
aam
add
add
add
mov
push
mov
call
push
cmp
xor
mov
jmp
push
inc
push
test
push
pop
call
jne
push
je
mov
mov
pop
mov
mov
mov
cmp
add
call
testb
push
pushl
push
call
movb
push
jne
pop
push
cmp
add
xor
call
test
call
call
push
push
movl
push
mov
mov
call
push
mov
mov
pushl
mov
je
cmp
je
push
or
push
cmp
push
mov
sbb
jge
sub
pop
jne
decl
pop
call
inc
push
mov
pop
cmp
xor
adc
les
push
jb
mov
or
sbb
add
jbe
cmp
je
push
push
je
mov
push
lea
push
je
push
cmp
pushl
push
leave
mov
mov
dec
lea
push
push
add
call
call
ret
push
cmp
pushl
mov
mov
call
pushl
jl
mov
movzbl
push
push
pushl
push
jmp
call
push
cmp
push
mov
pushl
movl
push
inc
xchg
inc
add
pop
inc
add
outsl
inc
add
or
xor
jne
push
mov
xor
jmp
cmp
push
pop
and
jge
pushl
call
add
jb
aam
inc
add
lea
add
push
push
sar
pushl
push
add
push
mov
lea
sub
mov
cmp
je
push
push
mov
pop
jne
call
call
pushl
push
dec
xchg
inc
add
shlb
push
sub
and
pop
pop
call
mov
or
and
call
ret
test
cmp
dec
ret
push
push
pushl
jne
pushl
mov
je
mov
pop
mov
push
jl
pop
pushl
pushl
cmp
pop
mov
push
jne
call
add
push
pushl
push
call
push
call
sub
pushl
pushl
mov
call
pop
lea
pop
pop
jmp
push
mov
pop
call
mov
mov
lea
call
pop
cmp
je
lea
cmp
push
cmp
jmp
ret
jmp
leave
cmp
pop
movb
mov
mov
call
push
pop
push
mov
movl
add
push
lea
push
mov
add
push
pop
movl
jae
je
or
gs
sub
je
push
cmp
lea
push
cmp
pop
push
pushl
xchg
inc
add
mov
add
add
jo
pushl
push
mov
jmp
pushl
mov
push
mov
pushl
push
dec
pushl
je
mov
mov
push
jl
mov
pushl
jb
jne
call
call
test
pushl
add
push
cmp
xor
test
js
ret
jne
cmp
mov
push
call
jne
push
push
mov
push
mov
xor
mov
jl
call
push
cmp
push
mov
jle
push
call
mov
pushl
mov
add
pop
xor
cmp
call
jmp
cmp
call
mov
call
mov
call
add
pop
pushl
cmp
push
pushl
push
andl
mov
push
pop
lea
push
push
cmp
test
jge
jne
movzbl
pushl
pushl
call
mov
inc
pushl
push
inc
push
pop
lea
xor
imul
push
mov
movzbl
je
ret
push
mov
pushl
push
cmp
call
call
push
push
call
mov
push
push
pushl
push
call
add
je
inc
jne
add
pop
push
add
push
push
je
ret
mov
cmpl
fiadds
add
and
cmc
inc
movl
mov
mov
jmp
call
pop
push
inc
mov
cmpl
pop
mov
push
mov
cmp
push
je
movl
add
cld
push
je
mov
push
pushl
mov
pop
mov
push
aas
xchg
inc
add
lea
push
add
push
push
mov
add
push
cmp
add
pop
call
mov
call
xor
push
add
pushl
call
cmpl
les
add
call
mov
push
mov
call
call
pushl
mov
cmp
push
leave
call
mov
mov
mov
sub
push
jne
mov
test
push
mov
mov
mov
pop
call
mov
jne
call
mov
mov
mov
mov
push
push
push
jle
lea
jmp
mov
lea
push
pushl
lea
push
pop
push
pushl
lea
push
mov
pop
pop
call
push
je
push
push
cmpl
inc
push
push
jns
inc
add
mov
jne
sub
test
push
pushl
push
jne
mov
push
mov
dec
call
lea
cmp
call
jne
call
jmp
lea
je
push
call
push
push
pushl
push
mov
push
mov
pop
push
jne
pop
mov
mov
call
lea
jne
call
push
push
push
jne
cmp
jne
push
push
mov
pushl
push
push
mov
push
jmp
push
test
xor
add
mov
jmp
mov
add
je
call
je
push
add
cmp
lea
mov
mov
pop
cmpb
call
mov
rep
push
lea
mov
push
call
leave
add
mov
call
mov
ret
jl
push
push
lea
jmp
jmp
push
call
sbb
inc
push
add
push
sub
call
inc
push
call
mov
add
pushl
add
push
mov
pop
add
ret
call
call
call
leave
ja
jbe
pop
call
je
movl
andl
add
pop
push
jl
cmpl
inc
or
add
pop
pusha
add
push
mov
push
push
pushl
push
pushl
cmp
orl
call
test
pushl
call
lea
inc
jle
push
call
push
pop
push
push
push
xor
mov
call
mov
mov
test
pop
test
call
jl
pushl
jle
jl
push
cmp
add
call
call
sub
push
push
andl
incl
mov
lea
call
call
mov
pop
cmp
je
shl
mov
lea
push
movb
jmp
call
cmp
cltd
mov
push
test
push
xor
mov
call
add
add
mov
push
je
mov
call
lea
mov
mov
push
mov
test
pop
mov
xor
pushl
push
push
cltd
call
pushl
fwait
nop
inc
add
or
and
add
les
add
jne
mov
mov
mov
mov
push
push
cmp
add
jne
push
mov
push
ret
jmp
test
imul
add
ret
push
jmp
mov
pop
call
push
jl
add
cltd
xchg
inc
add
add
lea
test
jne
mov
pushl
mov
push
mov
jmp
add
test
jne
je
call
je
pop
push
mov
push
call
add
push
mov
mov
cmpl
xorb
add
add
add
add
push
add
call
add
pop
push
push
movb
pop
mov
mov
call
mov
mov
add
push
cmp
add
pop
push
call
mov
call
mov
call
mov
cmpb
lock
mov
xor
push
push
pop
call
push
push
jb
jne
movb
pushl
push
lea
mov
test
movsbl
push
push
push
call
pushl
xor
je
movb
push
push
lea
push
pop
pushl
xor
push
push
mov
pushl
push
mov
call
pushl
pop
push
call
jmp
mov
push
je
jne
push
jmp
cmpl
inc
adc
jne
pushl
push
lea
sub
sbb
inc
add
test
add
je
call
call
pop
mov
sub
cmpb
pop
push
je
call
mov
pop
push
cmpl
push
movl
xchg
add
push
xor
je
cmp
sub
push
push
mov
mov
pushl
push
jl
push
mov
movb
pop
pop
push
push
sub
bound
add
xor
sub
addb
mov
mov
shl
pushl
pushl
jmp
sti
nop
inc
add
fistps
pushl
sub
push
je
mov
je
jne
test
je
pop
mov
jge
push
mov
cmpl
push
xor
pushl
mov
call
mov
movl
cmp
outsl
das
add
push
call
cmp
push
mov
mov
testb
cmp
call
mov
push
cmp
lea
mov
call
test
call
push
push
mov
call
mov
call
jne
movl
jne
pop
push
movl
add
call
xor
lea
mov
testb
push
sub
push
movl
pop
cmp
call
inc
mov
mov
mov
pushl
push
call
je
call
ret
mov
pushl
call
pushl
push
push
call
push
jmp
push
jne
mov
movb
les
push
incl
call
mov
lea
setne
push
pushl
mov
push
call
lea
xor
mov
je
cmp
push
cmp
push
cmp
pushl
call
pop
add
push
push
mov
push
mov
mov
mov
jle
xor
push
mov
pop
pop
push
mov
pushl
pop
lea
add
push
jne
add
pushl
pop
call
call
cmp
mov
mov
pop
add
pop
jne
call
addl
push
xor
pop
pop
call
pushl
inc
pushl
jne
mov
add
pushl
cmpl
les
call
xor
cmp
push
push
mov
pushl
add
add
jbe
ret
jne
mov
jne
push
mov
add
call
sub
push
call
orl
push
jl
push
mov
push
pop
je
pushl
mov
push
call
je
push
jmp
sar
pushl
pushl
mov
jne
mov
push
call
mov
call
pushl
push
pop
cmp
call
mov
push
call
add
add
lea
mov
push
push
push
push
inc
add
push
push
add
jmp
or
jg
jle
push
lea
mov
inc
call
lea
mov
pushl
cmp
push
mov
cmp
push
mov
push
push
push
cmpl
lea
sub
lea
pushl
push
ret
mov
je
call
xor
mov
push
jmp
pop
pushl
call
push
cmp
mov
push
leave
mov
mov
push
cmp
call
call
lea
call
ret
push
call
lea
pop
push
push
call
push
push
xor
push
cmp
call
mov
add
add
je
jmp
jge
push
push
add
add
mov
call
and
mov
mov
push
push
test
inc
mov
mov
push
push
push
ret
pop
call
incl
mov
lea
cmp
jmp
mov
lea
je
push
push
mov
add
movl
dec
fadd
add
jne
pop
push
mov
pop
cmp
cmp
call
pop
xor
mov
je
je
pop
je
jb
inc
bound
lret
nop
inc
add
pushl
pushl
add
mov
call
dec
cmp
push
push
lea
push
push
add
push
call
sub
pop
mov
pop
push
decl
mov
movzbl
xor
pop
add
push
pushl
cmpl
je
pushl
push
pop
pop
push
add
push
dec
pushl
call
push
jl
pushl
mov
mov
call
add
sub
push
push
je
call
push
or
pop
pop
pop
pop
ret
push
pop
push
pop
mov
pop
push
pop
mov
add
push
pop
pop
call
pop
xchg
inc
add
push
or
leave
push
pop
jne
pop
push
sub
int
add
ret
testb
call
xor
call
push
push
mov
push
movl
add
aas
test
pop
pop
mov
cltd
shl
push
jne
mov
cmp
mov
xor
aad
inc
add
les
mov
leave
xchg
inc
add
jne
ret
mov
movzbl
push
mov
jne
push
push
push
push
push
jmp
call
mov
jmp
sub
push
dec
push
pop
call
call
movb
call
inc
push
test
mov
mov
lea
pushl
push
call
pushl
andl
push
push
dec
push
add
mov
call
je
push
mov
mov
pushl
pushl
jl
push
pop
push
add
jne
pop
pop
popl
pushl
pushl
call
pop
push
pop
mov
call
pushl
call
cmp
push
jne
push
push
mov
mov
sub
ret
push
mov
pop
push
cmp
push
push
push
pop
cmp
cmp
pop
inc
jne
add
lea
call
mov
call
jge
call
je
push
push
jmp
cmp
push
cmp
push
jle
push
call
cmp
call
push
pushl
mov
test
push
mov
arpl
decl
push
push
decl
add
inc
or
out
inc
call
call
push
pop
call
ret
test
xor
pop
cmp
push
call
cmp
pop
add
push
push
mov
pop
mov
pushl
mov
push
xor
pop
pop
mov
push
jne
push
push
test
mov
push
jne
mov
push
push
mov
mov
jg
jmp
je
jne
push
movb
mov
jne
je
lea
mov
push
push
jmp
xor
ret
call
je
add
dec
cmp
jle
call
push
test
push
call
push
xor
call
mov
mov
push
jmp
movl
call
cmp
call
push
add
push
pop
mov
lods
xchg
inc
add
test
jb
or
jne
pop
cltd
lea
pop
call
call
mov
pop
pushl
push
mov
push
add
movb
push
or
test
je
pushl
call
push
push
mov
sub
add
in
inc
add
ljmp
lret
pop
movb
inc
add
jo
inc
add
pop
ret
je
mov
cmp
mov
movl
adc
inc
add
call
pushl
mov
pushl
call
pop
push
push
call
call
lea
je
pop
push
adc
add
add
or
mov
mov
cmp
pushl
call
push
mov
push
cmp
lea
push
pushl
pop
call
cmpl
inc
bound
add
push
ret
jbe
call
mov
leave
mov
leave
cmp
add
xor
mov
sub
inc
adc
fisttps
add
add
test
add
add
cmp
add
pop
pushl
mov
pushl
andl
leave
andl
pop
call
call
push
mov
cs
push
add
jne
mov
mov
call
add
call
cmp
mov
call
push
push
call
jmp
mov
pop
mov
call
mov
inc
pop
push
push
pop
push
pop
pushl
mov
push
mov
pushl
call
mov
push
sub
pop
mov
call
mov
call
push
lea
push
pop
call
push
xor
push
call
mov
push
mov
pushl
pushl
push
mov
push
cmp
mov
push
pop
pop
push
movl
std
ljmp
ljmp
add
call
add
pop
push
call
push
push
pushl
pop
call
pop
lea
dec
clc
pop
dec
pop
push
call
add
push
ret
je
add
push
push
push
mov
cmp
push
ret
je
cmp
push
push
add
push
test
mov
push
cmp
mov
xor
add
jne
leave
pop
pop
call
mov
cmpb
je
mov
pushl
push
xor
je
add
jne
jne
je
cmp
cmp
mov
test
push
movsbl
mov
push
push
ret
jne
push
mov
add
add
add
push
push
jne
xor
xor
pushl
mov
aas
push
push
mov
call
pushl
pop
call
inc
push
lea
call
call
push
xor
mov
movzbl
ret
push
jmp
mov
and
test
call
pop
cmp
mov
pop
pop
pop
pushl
pop
mov
add
jle
mov
mov
call
jne
mov
pop
jl
pop
call
add
rsm
add
push
mov
mov
push
pop
mov
cmpl
push
push
push
push
call
push
mov
mov
movl
add
pop
jmp
pushl
call
push
push
pop
push
jne
mov
push
mov
pushl
cmpl
pushl
lea
and
test
call
pop
mov
push
andl
sub
push
cmp
jne
sbb
mov
call
push
xor
pop
pop
or
pop
pop
ret
nop
mov
push
call
test
jne
ret
push
push
push
call
add
mov
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
call
movl
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
mov
cmp
jne
mov
mov
push
call
ret
nop
nop
nop
nop
nop
nop
mov
cmp
je
mov
push
push
call
ret
mov
mov
mov
mov
mov
mov
ret
nop
sub
push
mov
push
mov
mov
push
mov
call
push
lea
push
push
mov
call
mov
push
lea
push
push
mov
call
mov
mov
call
mov
lea
push
mov
call
test
je
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
call
pop
mov
pop
add
ret
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
call
mov
movl
mov
pop
mov
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
push
mov
push
call
test
jne
push
push
push
call
pop
pop
pop
xor
pop
mov
mov
add
ret
call
test
jne
push
push
push
call
pop
pop
pop
xor
pop
mov
mov
add
ret
push
call
add
mov
call
push
mov
call
push
mov
call
push
call
add
mov
test
movl
je
push
push
push
push
mov
call
mov
jmp
xor
or
push
mov
mov
call
push
push
push
push
mov
call
push
mov
call
lea
push
push
push
mov
call
call
push
call
add
mov
test
movl
je
mov
call
mov
jmp
xor
mov
push
push
push
push
mov
mov
call
test
jne
pop
pop
pop
pop
mov
mov
add
ret
lea
mov
call
lea
movl
push
mov
call
mov
test
jne
mov
test
jne
push
push
push
mov
call
push
call
lea
mov
push
call
test
jne
lea
mov
call
pop
pop
pop
xor
pop
mov
mov
add
ret
mov
mov
push
call
mov
push
call
lea
mov
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
lea
call
lea
movl
call
lea
movl
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
mov
movl
movl
movl
call
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
call
neg
sbb
neg
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
call
add
mov
test
movl
je
push
mov
call
pop
mov
mov
add
ret
mov
xor
pop
mov
add
ret
nop
nop
nop
mov
push
call
ret
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
ret
nop
nop
nop
sub
push
push
push
push
push
push
mov
push
push
push
mov
call
mov
test
jne
mov
mov
call
lea
mov
push
mov
call
mov
mov
pop
test
pop
je
mov
lea
mov
mov
mov
push
mov
mov
mov
push
push
call
add
ret
nop
nop
push
mov
call
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
ret
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
push
mov
call
test
je
cmp
jne
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
cmp
pop
sete
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
push
push
lea
mov
call
lea
mov
call
cmp
jne
mov
call
lea
mov
call
mov
push
movb
call
mov
add
mov
cmp
movb
je
push
call
mov
push
lea
movb
mov
call
test
jne
call
lea
call
test
jne
mov
push
push
push
mov
call
push
push
push
mov
mov
call
jmp
mov
mov
mov
test
je
push
call
push
push
push
call
mov
ret
mov
movl
call
mov
call
lea
movl
call
mov
pop
pop
mov
pop
mov
pop
ret
nop
mov
push
mov
mov
call
test
je
push
mov
call
ret
nop
nop
nop
nop
push
mov
push
mov
mov
call
test
je
cmpl
jne
mov
call
test
je
mov
call
pop
ret
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
push
mov
call
test
pop
je
push
push
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
call
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
pushl
pushl
pushl
pushl
call
ret
call
mov
mov
test
mov
mov
jne
push
call
pop
push
pop
ret
jmp
push
push
call
mov
ret
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
push
call
ret
mov
jmp
pop
cltd
cmpl
jl
mov
jl
push
cmpb
jl
add
add
cltd
jecxz
mov
xchg
jecxz
fbld
fidivs
cltd
jecxz
cwtl
dec
fidivs
xchg
jecxz
hlt
inc
fidivs
mov
fnsave
mov
jae
cmp
jae
cmp
jae
jns
jae
xlat
jecxz
in
xlat
jecxz
mov
adc
jae
and
jae
sbb
jae
sbb
jae
in
loop
insl
pop
fidivs
stos
fidivs
scas
fidivs
pop
fnsave
cmp
jae
xor
jae
fidivs
fidivs
fsub
jae
jns
jae
jae
mov
fidivs
fcmovu
jae
push
out
inc
jns
jae
jns
jae
jns
jae
xlat
jecxz
pop
lock
sbb
out
sahf
lock
push
lock
test
lock
jle
in
jle
in
inc
jns
jae
ja
jae
jg
jae
sub
jae
push
fidivs
cmp
jae
inc
fnsave
mov
jae
jle
jae
insb
fidivs
cmp
fnsave
push
fidivs
fnsave
mov
jae
add
jae
int
jae
outsb
in
fldcw
jae
outsb
in
add
jae
pusha
fnsave
and
inc
in
ja
in
jb
in
or
in
push
in
jle
in
aam
in
pop
lret
push
lret
in
in
or
in
enter
mov
in
int3
jo
jae
leave
in
jnp
out
push
test
jae
and
ret
and
pop
clc
in
out
in
sub
in
jle
in
jnp
in
sti
in
imul
fnsave
pop
in
addr16
jae
adc
in
ror
jae
popf
pop
in
test
in
push
outsl
in
ffreep
in
js
in
icebp
daa
jecxz
inc
sub
jae
or
jae
or
jae
enter
push
in
into
push
in
sub
adc
jae
adc
jae
fidivs
lret
fnsave
in
jae
pop
fnsave
lret
fnsave
adc
jae
adc
jae
and
jae
adc
jae
imul
xchg
sub
jae
xchg
out
adc
jbe
jae
aas
fidivs
movsl
out
orl
in
inc
inc
fidivs
ja
jae
pmulhw
loopne
jae
jae
jae
shl
push
cmpsb
out
out
shl
outsl
jae
fwait
in
and
jae
jecxz
jae
sbb
jae
push
jecxz
dec
fnsave
pusha
fnsave
pop
fnsave
dec
fidivs
pop
jecxz
cmp
jecxz
jmp
fnsave
push
out
jmp
fnsave
lret
fnsave
jmp
jae
jmp
jae
jns
jae
push
in
adc
jae
adc
jae
xor
jae
cmp
jae
add
jae
sub
jae
neg
jae
mov
jae
daa
fnsave
sti
in
into
mov
jae
lret
loop
jecxz
mov
jae
jg
jae
dec
fidivs
cmp
jae
sahf
jecxz
aam
jecxz
repz
jae
cmp
jae
sub
jae
aaa
fidivs
sbb
fidivs
and
jae
sbb
out
inc
fnsave
aaa
fidivs
lods
out
stos
stos
out
mov
aaa
fidivs
add
jae
insb
in
push
gs
or
in
je
in
jno
out
jno
out
xchg
jae
gs
lock
int
in
mov
arpl
jae
in
inc
jns
jae
fs
add
in
lods
fs
pushf
xor
jae
xlat
jecxz
popf
insb
in
shrb
fisubs
jae
rcr
sub
pop
jne
jae
pop
fnsave
jmp
jae
mov
jae
mov
jae
sub
jae
out
jae
repnz
addr16
jecxz
icebp
pop
fnsave
xchg
fidivs
and
jae
lahf
out
lock
jae
adc
jae
or
jae
adc
jae
push
fnsave
repz
dec
out
gs
jae
sub
jae
adc
jae
adc
jae
mov
jae
lret
out
les
fnsave
lcall
mov
xchg
out
mov
xor
jae
cmp
jae
scas
out
shrl
out
std
out
jae
sub
jae
jmp
jae
ljmp
push
mov
out
mov
fbstp
mov
jecxz
and
jnp
out
jnp
loop
stos
fidivs
or
fidivs
imul
jae
scas
fidivs
push
out
les
jae
mov
jecxz
dec
out
jae
fnsave
push
out
arpl
jae
stc
in
xchg
in
shlb
in
inc
stc
in
push
psubsb
psubsb
enter
psubsb
cmp
jae
cmp
jae
cmp
jae
xor
jae
inc
in
mov
aas
in
mov
in
jo
in
repnz
in
jle
in
push
inc
in
adc
in
addb
xor
in
inc
jns
jae
xor
jae
xor
jae
xor
jae
xor
fnsave
sbb
jae
xor
jae
sbb
jae
mov
jae
sbb
jae
xor
fnsave
clc
in
fidivs
mov
jae
mov
jae
cmp
jae
pop
fnsave
and
jae
cmp
jae
cmp
jae
fidivs
insb
fnsave
or
jae
or
jae
sub
jae
jo
jae
lcall
outsb
adc
jae
sbb
jae
xchg
fnsave
ss
out
fidivs
js
jae
insl
fnsave
cmp
jae
sub
jae
mov
jae
in
jae
jns
jae
or
jae
cmp
jae
cwtl
fnsave
call
fidivs
jmp
jae
xchg
fnsave
call
in
fs
jae
jecxz
jae
or
in
sar
in
push
xchg
loop
std
lret
mov
fnsave
jae
pop
fnsave
dec
fnsave
pop
in
loop
in
mov
loop
sti
in
jae
dec
fnsave
pop
fnsave
in
jae
loopne
jae
and
jae
fnsave
lret
in
inc
lret
in
sub
fnsave
cmp
fidivs
jle
jae
jle
jae
movsl
out
and
jae
and
add
add
jmp
shll
ret
ja
les
and
ja
icebp
shll
shll
ret
ja
pop
ret
ja
out
les
sahf
ret
ja
sub
ret
ja
sbb
ja
dec
ret
ja
dec
ret
ja
daa
ret
or
ja
pop
ja
add
add
aam
scas
loop
ja
rcl
aam
aam
add
add
and
inc
add
incl
add
adc
pusha
adc
add
add
adcb
add
cmpsb
inc
add
add
add
call
call
add
sub
add
inc
adc
adc
add
add
add
adc
add
adc
add
add
inc
add
inc
add
adc
adc
add
adc
add
adc
add
addl
addl
addl
addl
addl
addl
adc
xchg
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
adc
addl
addl
addl
addl
addl
addl
addl
addl
addl
adc
add
addl
addl
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
adc
mov
inc
add
inc
add
inc
add
inc
add
add
inc
add
adc
add
adc
inc
add
adc
add
test
mov
addl
addl
addl
addl
addl
test
xchg
inc
add
inc
add
addl
addl
addl
addl
addl
test
cmpsb
test
mov
test
xchg
test
mov
add
adc
inc
add
test
jbe
inc
add
test
push
inc
add
push
inc
add
test
pop
test
pop
test
inc
adc
inc
add
add
inc
add
inc
add
test
xor
inc
add
test
sub
add
inc
add
test
adc
add
inc
add
addl
add
add
inc
add
add
add
incl
add
push
inc
add
add
add
test
add
or
add
rclb
inc
add
add
add
add
add
add
inc
loope
add
add
adc
add
add
add
inc
loope
add
add
or
add
or
inc
add
add
add
add
add
add
inc
loope
add
add
adc
add
add
add
inc
loope
add
add
or
add
push
test
nop
push
inc
add
pop
inc
add
adc
add
adc
add
adc
add
addl
addl
addl
addl
addl
addl
push
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
mov
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
adc
add
addl
addl
test
testb
add
addb
test
fiadds
inc
add
addb
addb
addb
test
mov
addb
addb
test
push
test
pushf
addb
test
nop
addb
test
inc
test
test
inc
add
inc
add
inc
add
sbb
cmp
inc
add
test
xor
inc
add
inc
add
test
add
add
push
add
add
incl
add
sbb
and
inc
add
add
add
inc
add
stos
inc
add
add
add
add
add
loope
add
loope
add
add
ljmp
add
add
add
loope
add
loope
add
add
ljmp
add
add
add
loope
add
loope
add
add
in
inc
add
sbb
sbbb
add
adc
add
adc
add
adc
add
inc
add
addl
addl
addl
addl
addl
sbb
xchg
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
sbb
push
addl
xchg
sub
inc
add
addl
addl
xchg
adc
inc
add
addl
adc
add
sbb
inc
sbb
push
xchg
testb
add
addb
test
push
xchg
fadds
inc
add
inc
add
addb
xchg
xchg
cmp
inc
add
inc
add
xchg
and
inc
add
inc
add
xchg
and
inc
add
xchg
add
inc
add
sbb
adc
inc
add
test
and
inc
add
add
add
add
incl
add
add
add
add
add
inc
inc
add
add
add
add
add
add
add
add
add
add
inc
loope
add
add
adc
add
add
add
inc
loope
add
add
or
add
or
inc
add
add
add
add
add
add
inc
loope
add
add
cwtl
xchg
adc
add
add
add
inc
loope
add
add
or
add
adc
add
mov
inc
add
inc
add
adc
add
adc
add
adc
add
xchg
stos
addl
addl
addl
addl
addl
addl
inc
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
and
add
addl
addl
addl
addl
addl
addl
xchg
adc
inc
add
addl
adc
add
addl
addl
xchg
testb
add
addb
xchg
fiadds
inc
add
addb
addb
addb
xchg
mov
xchg
scas
addb
addb
test
pushf
addb
test
nop
addb
xchg
mov
inc
add
addb
xchg
jb
inc
add
inc
add
add
add
inc
add
add
incl
add
add
add
inc
add
add
add
inc
add
jbe
add
adc
add
adc
add
test
mov
inc
add
addl
addl
addl
test
xchg
inc
add
inc
add
addl
addl
addl
addl
addl
xchg
adc
add
inc
add
inc
add
inc
add
jbe
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
xchg
xor
inc
add
xchg
sub
inc
add
inc
add
xchg
adc
add
mov
scas
inc
add
add
add
add
add
add
inc
loope
add
add
pusha
jnp
add
add
add
add
add
loope
add
loope
add
add
mov
add
add
add
add
loope
add
loope
add
add
mov
add
add
add
add
loope
add
loope
add
add
mov
inc
add
aaa
mov
push
sahf
inc
cmpsl
cmc
pop
mov
in
out
inc
jnp
add
add
add
mov
adc
add
adc
add
adc
add
adc
add
test
mov
addl
addl
addl
addl
addl
ja
add
addl
addl
addl
addl
addl
addl
addl
addl
js
add
mov
and
inc
add
mov
sbb
inc
add
inc
add
mov
add
inc
add
xchg
out
xchg
call
xchg
faddl
inc
add
xchg
lret
add
xchg
push
mov
adc
add
adc
add
adc
add
adc
add
mov
stos
addl
addl
addl
addl
addl
addl
jnp
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
add
inc
add
addl
addl
addl
addl
addl
xchg
adc
inc
add
addl
sbb
xor
inc
add
inc
add
mov
testb
add
addb
test
testb
add
mov
dec
xchg
ljmp
add
mov
fmuls
inc
add
mov
mov
add
add
mov
add
add
incl
add
jnp
add
jl
add
add
add
inc
add
inc
add
add
add
jmp
loope
add
add
dec
mov
adc
add
jmp
loope
add
loope
add
add
inc
mov
adc
add
incl
loop
add
loop
add
add
mov
adc
add
add
add
add
add
add
add
or
add
cmp
add
incl
loop
add
loop
add
add
xor
add
add
add
add
add
add
add
or
add
sub
inc
add
add
add
call
loop
add
loop
add
add
mov
adc
add
add
add
or
add
or
add
or
add
mov
adc
add
decl
add
or
add
sub
add
and
add
pusha
jl
add
inc
add
jmp
add
add
add
incl
add
add
add
add
incl
add
add
addr16
mov
rorl
push
test
jl
add
mov
add
add
add
add
add
pushl
jl
add
jge
add
jge
add
adc
add
adc
add
inc
add
inc
add
addl
addl
jl
add
jl
add
inc
add
addl
addl
mov
pop
addl
addl
mov
xchg
mov
lock
add
jle
add
mov
orb
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
mov
xor
inc
add
mov
sub
inc
add
inc
add
mov
adc
inc
add
inc
add
mov
clc
mov
repnz
in
mov
out
inc
add
mov
fimull
inc
add
mov
enter
ret
add
mov
mov
inc
add
mov
movsb
mov
sahf
mov
cwtl
mov
xchg
mov
mov
inc
add
mov
je
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
add
incl
add
jle
add
inc
add
add
add
mov
add
add
add
add
xor
add
pop
add
add
addl
adc
add
adc
add
add
add
add
add
add
add
or
add
addb
add
add
add
addb
add
add
mov
inc
add
add
add
add
add
addb
add
add
inc
addb
add
add
add
add
loope
add
loope
add
add
ljmp
add
add
add
loope
add
loope
add
add
ljmp
add
add
add
loope
add
loope
add
add
in
inc
add
jle
add
adc
add
adc
add
adc
add
inc
add
addl
addl
addl
addl
addl
jle
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
pusha
jg
add
inc
add
addl
xchg
sub
inc
add
addl
addl
xchg
adc
inc
add
addl
adc
add
sbb
inc
sbb
push
xchg
testb
add
addb
test
push
xchg
loop
inc
add
addb
xchg
movb
add
xchg
cmp
inc
add
inc
add
xchg
and
inc
add
inc
add
xchg
lock
add
xchg
add
inc
add
inc
add
addb
addb
test
and
inc
add
mov
push
mov
add
add
add
clc
mov
or
inc
add
add
add
jmp
add
incl
add
add
add
add
mov
add
add
add
mov
add
jmp
add
inc
add
add
add
add
add
mov
add
inc
lea
and
add
mov
inc
add
jmp
lea
and
add
fdivs
add
incl
mov
and
add
add
add
jmp
mov
and
add
sub
add
incl
inc
add
add
add
push
mov
add
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
call
add
add
add
add
add
add
shlb
add
inc
mov
and
add
call
add
add
jmp
mov
and
add
adc
add
incl
popl
add
add
or
xchg
sbb
add
add
inc
add
jmp
popl
add
add
sub
xchg
sbb
add
add
inc
add
incl
inc
add
add
add
cwtl
mov
add
jmp
inc
add
add
add
sarb
add
incl
decl
call
xchg
sbb
add
add
mov
add
pushl
add
add
and
add
call
popl
and
add
dec
mov
add
push
popl
and
add
jo
inc
add
call
nop
inc
add
add
add
cwtl
mov
add
pushl
nop
inc
add
add
add
sarb
add
call
inc
add
add
add
call
add
add
pushl
inc
add
add
add
adc
add
cmp
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
add
shr
inc
add
call
inc
add
mov
add
add
add
mov
add
sbb
add
stos
roll
push
mov
add
add
add
clc
ret
add
add
inc
ret
add
mov
add
mov
ret
rol
add
out
add
scas
ret
add
add
push
or
xor
add
lock
or
add
xchg
adc
adc
add
dec
or
add
cmp
add
in
sldt
aaa
adc
xorb
orb
subb
add
add
add
pop
or
addb
add
push
adc
sbbb
addb
add
movsl
push
add
mov
or
orb
popf
adc
andb
add
jno
add
mov
or
orb
add
testb
xor
add
pop
or
xor
add
dec
adc
orb
add
cmp
add
sbb
add
xchg
subb
sbbb
add
push
pop
add
fiadds
add
dec
adc
add
cmc
push
add
mov
add
adc
add
repnz
cmpb
add
jp
add
mov
add
daa
adc
sbbb
add
bound
add
or
add
hlt
or
addb
add
add
sbb
add
movsb
add
adc
add
push
adc
andb
xor
add
lea
add
roll
andb
cmpb
add
pop
pop
add
push
adc
xorb
add
mov
add
jbe
add
jae
add
iret
add
andb
cmp
add
movsl
adc
orb
add
jecxz
add
mov
add
mov
add
xorb
cmpb
add
mov
or
addb
addb
and
add
test
addb
add
xchg
pop
add
in
adc
andb
add
cmc
adc
cmp
add
mov
add
mov
adc
xorb
add
popa
adc
orb
sub
add
stos
adc
sbbb
andb
adcb
subb
add
and
add
out
add
pusha
adc
addb
adcb
add
push
or
sub
add
je
add
cmp
add
movsb
adc
adcb
orb
sbb
add
xchg
add
xorb
addb
subb
addb
add
dec
or
add
inc
adc
orb
subb
adcb
cmp
add
hlt
adc
xorb
add
je
add
adcl
add
sldt
adc
add
in
add
subb
add
xor
add
add
add
mov
add
xchg
add
rorb
add
push
sldt
dec
adc
sbbb
adc
add
movsl
or
sub
add
mov
adc
adcb
sbbb
add
xor
add
inc
sbb
subb
xorb
add
pop
adc
subb
add
hlt
pop
add
stc
pop
add
fwait
add
cmpb
add
cmp
add
xorb
add
xchg
adc
sbbb
add
xchg
add
rorb
add
out
push
add
mov
adc
orb
orb
add
mov
add
or
add
in
add
add
addb
add
popw
add
mov
add
pop
adc
cmp
add
jae
add
test
add
pushf
adc
andb
add
mov
add
mov
add
and
cmp
add
inc
adc
and
add
adc
add
js
add
scas
or
sbbb
andb
add
sti
adc
add
lret
push
add
pop
adc
xor
add
rcrb
or
add
jl
add
roll
add
fs
adcb
add
pop
adc
cmp
add
and
add
jle
add
pop
sbb
cmpb
add
in
add
xorb
add
movl
add
add
xchg
adc
adcb
add
test
sbbb
add
loop
add
pop
push
add
mov
add
cmpb
orb
addb
add
dec
or
sbbb
cmpb
add
xor
adc
adcb
add
aaa
add
adcb
add
push
ret
push
ret
sub
add
ds
dec
ret
pop
ret
insb
ret
jle
add
xchg
ret
cld
roll
out
roll
out
add
into
roll
mov
add
xchg
roll
dec
ret
add
add
add
add
add
push
ret
add
push
ret
add
xor
add
and
add
add
add
dec
inc
inc
xor
cs
dec
dec
add
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
dec
push
push
inc
push
push
cs
insb
add
push
add
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
add
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outsl
insb
data16
add
dec
outsl
jbe
inc
imul
add
je
outsl
fs
gs
imul
add
push
add
gs
je
inc
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
dec
inc
dec
xor
cs
insb
add
cmp
push
outsb
fs
gs
popa
addr16
add
insb
add
je
arpl
add
popa
bound
imul
mov
popa
je
push
imul
push
push
inc
push
xor
cs
insb
add
stos
add
gs
bound
add
add
xchg
lea
mov
js
add
push
jb
insl
add
add
add
inc
add
add
add
add
and
add
add
add
je
bound
je
dec
je
insl
add
add
outsb
push
insb
popa
arpl
jb
insl
add
add
gs
imul
jns
push
jb
gs
imul
add
add
mov
add
test
add
xchg
add
xchg
add
mov
add
inc
add
add
add
add
roll
add
mov
add
add
add
lret
add
add
add
add
add
inc
add
add
add
add
add
add
add
jle
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
flds
add
or
add
inc
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
out
add
add
add
or
add
mov
add
xchg
add
out
add
add
add
add
add
add
add
add
add
popl
add
xchg
add
xchg
add
xchg
add
push
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
xchg
add
xchg
add
xchg
add
filds
add
or
add
movl
add
or
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
faddl
add
xchg
add
xchg
add
xchg
add
add
add
inc
add
add
add
add
add
add
add
insb
add
add
add
or
add
movb
add
add
add
add
filds
add
mov
add
add
add
add
filds
add
incl
add
filds
add
xlat
add
add
add
or
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
push
add
add
add
or
add
mov
add
filds
add
xlat
add
add
add
in
add
add
add
add
add
add
add
add
add
movsb
add
add
add
add
add
add
add
repz
add
add
add
add
addl
add
add
inc
add
add
add
add
add
add
add
add
loope
add
or
add
xchg
add
add
add
add
add
add
add
add
test
add
xchg
add
fiadds
add
fadds
add
flds
add
faddl
add
or
add
bound
add
fiaddl
add
inc
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
or
add
ret
add
add
add
add
add
add
out
add
test
add
pop
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
lret
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
bound
add
fiaddl
add
inc
add
add
add
add
add
ret
add
add
add
add
add
add
fadds
add
flds
add
push
add
add
add
add
add
add
add
add
add
add
add
faddl
add
push
add
add
add
add
add
add
add
add
imul
add
add
add
add
popl
add
addl
add
add
add
add
add
add
add
add
rolb
add
mov
add
push
add
add
add
add
add
add
add
jl
add
js
add
js
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
sti
add
add
add
mov
add
js
add
or
add
xor
add
jg
add
jl
add
js
add
js
add
or
add
inc
add
add
add
jo
add
repnz
add
add
add
add
add
add
add
add
add
add
add
add
test
add
inc
add
add
add
pop
add
add
add
add
add
jl
add
or
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
adc
add
sbb
add
jg
add
jl
add
js
add
js
add
push
add
add
add
add
add
addl
add
add
add
add
add
add
or
add
add
add
sbb
add
jg
add
jl
add
js
add
js
add
mov
add
add
add
add
add
add
add
add
add
loop
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jns
add
or
add
jge
add
or
add
add
add
cmp
add
jg
add
jl
add
js
add
js
add
or
add
xor
add
cmp
add
jg
add
jl
add
js
add
js
add
test
add
inc
add
add
add
pop
add
add
add
add
add
jl
add
or
add
add
add
add
add
add
add
or
add
pop
add
add
add
adc
add
sbb
add
jg
add
jl
add
js
add
js
add
push
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
jg
add
jl
add
js
add
js
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
or
add
addl
add
ret
add
add
add
add
push
add
add
add
jns
add
or
add
repnz
add
add
or
add
add
add
add
add
jl
add
js
add
js
add
mov
add
addl
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
rolb
add
inc
add
add
add
add
add
in
add
add
add
ret
add
add
loop
add
inc
add
add
add
add
add
cmc
add
add
add
ret
add
add
jmp
add
add
add
add
add
loop
add
inc
add
add
add
add
add
jmp
add
inc
add
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
jecxz
add
inc
add
add
add
add
add
jmp
add
inc
add
add
add
add
add
jmp
add
sgdtl
add
add
add
add
inc
add
add
add
add
add
add
add
js
add
js
add
rolb
add
add
add
add
cli
add
add
add
js
add
js
add
loop
add
inc
add
add
add
add
add
add
add
js
add
js
add
repz
add
add
add
add
clc
add
add
add
js
add
js
add
lret
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
ret
add
add
jmp
add
inc
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
ret
add
add
ljmp
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
ret
add
add
loop
add
inc
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
ret
add
add
out
add
inc
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
jmp
add
inc
add
add
add
add
add
loop
add
inc
add
add
add
add
add
rolb
add
sgdtl
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
ret
add
add
repz
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
ret
add
add
in
add
sgdtl
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
ret
add
add
roll
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
aad
add
inc
add
add
add
add
add
loop
add
inc
add
add
add
add
add
out
add
inc
add
add
add
add
add
add
add
add
ret
add
add
roll
add
add
ret
add
add
out
add
add
add
ret
add
add
jmp
add
inc
add
add
add
add
add
loop
add
sgdtl
add
add
add
add
inc
add
add
add
add
add
les
add
inc
add
add
add
add
add
jmp
add
inc
add
add
add
add
add
call
add
add
add
add
add
hlt
add
add
add
ret
add
add
loop
add
inc
add
add
add
add
add
iret
add
add
add
ret
add
add
out
add
inc
add
add
add
add
add
add
add
add
ret
add
add
jecxz
add
inc
add
add
add
add
add
jmp
add
inc
add
add
add
add
add
loop
add
sgdtl
add
add
add
add
outsl
add
add
add
add
add
js
add
js
add
fiadds
add
or
add
add
add
sti
add
add
add
js
add
js
add
fiadds
add
xlat
add
add
add
add
add
add
add
xlat
add
add
add
rolb
add
jae
add
xlat
add
add
add
rolb
add
jg
add
push
add
add
add
add
add
or
add
ret
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
rolb
add
jae
add
xlat
add
add
add
rolb
add
jg
add
or
add
ja
add
or
add
ret
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
rolb
add
jae
add
xlat
add
add
add
rolb
add
jg
add
push
add
add
add
add
add
or
add
ret
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
rolb
add
jae
add
xlat
add
add
add
rolb
add
jg
add
push
add
add
add
add
add
add
add
js
add
js
add
or
add
ret
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
rolb
add
jae
add
xlat
add
add
add
rolb
add
jg
add
push
add
add
add
add
add
add
add
js
add
js
add
or
add
ret
add
add
xlat
add
add
add
add
add
add
add
xlat
add
add
add
rolb
add
jae
add
xlat
add
add
add
rolb
add
jg
add
push
add
add
add
add
add
add
add
js
add
js
add
or
add
ret
add
add
xlat
add
add
add
add
add
add
add
xlat
add
add
add
rolb
add
jae
add
xlat
add
add
add
rolb
add
jg
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
aad
add
jp
add
js
add
js
add
loope
add
push
add
add
add
add
add
add
add
js
add
js
add
out
add
add
add
add
add
add
add
add
loope
add
sub
add
or
add
add
add
xlat
add
add
add
js
add
js
add
xlat
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
aam
add
xlat
add
add
add
push
add
add
add
add
add
mov
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
in
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
roll
add
xlat
add
add
add
rolb
add
jnp
add
add
add
dec
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
js
add
js
add
out
add
add
add
add
add
add
add
add
add
rolb
add
jnp
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
js
add
js
add
roll
add
xlat
add
add
add
rolb
add
jnp
add
mov
add
add
add
add
add
add
add
mov
add
add
add
jmp
add
xchg
add
xchg
add
xchg
add
aam
add
aam
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
out
add
add
add
add
add
add
add
add
add
rolb
add
jnp
add
mov
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
js
add
adc
add
fildl
add
js
add
js
add
js
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
incl
add
js
add
js
add
js
add
or
add
ja
add
mov
add
add
add
add
add
xchg
add
xchg
add
or
add
add
add
filds
add
js
add
js
add
js
add
aam
add
xlat
add
add
add
repnz
add
add
roll
add
js
add
repnz
add
add
js
add
adc
add
out
add
js
add
js
add
js
add
rolb
add
js
add
rolb
add
pop
add
add
add
add
add
rolb
add
pop
add
add
add
repnz
add
add
js
add
rolb
add
pop
add
add
add
add
add
rolb
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
js
add
js
add
sgdtl
add
add
add
add
add
add
js
add
js
add
je
add
sub
add
loope
add
sub
add
sub
add
add
add
or
add
cmp
add
out
add
add
add
js
add
js
add
inc
add
add
add
add
add
add
add
js
add
js
add
iret
add
add
add
add
add
loop
add
js
add
js
add
js
add
pop
add
add
add
add
add
loope
add
js
add
js
add
js
add
fildl
add
inc
add
add
add
add
add
add
add
js
add
js
add
fiadds
add
sub
add
sub
add
sub
add
sub
add
or
add
cli
add
add
add
mov
add
inc
add
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
repnz
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
repnz
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
repnz
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
repz
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
cmc
add
add
add
insb
add
add
add
add
add
test
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
rolb
add
add
add
add
sub
add
mov
add
add
add
add
add
mov
add
jno
add
or
add
add
add
add
add
add
add
add
add
js
add
js
add
roll
add
add
jns
add
xchg
add
add
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
js
add
rolb
add
xlat
add
add
add
add
add
add
add
add
add
js
add
js
add
xlat
add
add
add
add
add
add
add
jge
add
js
add
js
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
incl
add
js
add
js
add
js
add
or
add
ja
add
or
add
add
add
aas
add
add
add
js
add
js
add
rolb
add
xlat
add
add
add
add
add
sbb
add
jle
add
js
add
js
add
add
add
inc
add
add
add
add
add
fadds
add
flds
add
mov
add
inc
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
or
add
inc
add
add
add
add
add
add
add
or
add
popl
add
or
add
movl
add
xlat
add
add
add
add
add
out
add
out
add
out
add
popa
imul
add
inc
push
je
bound
jbe
dec
je
insl
add
add
popa
insb
and
jo
imul
outsb
gs
je
and
jo
imul
jae
add
incl
je
bound
add
add
inc
push
je
bound
gs
add
push
jns
dec
imul
xor
add
add
gs
and
add
or
add
cs
inc
push
inc
inc
js
gs
imul
add
add
add
or
add
cs
inc
push
je
jo
pop
imul
add
add
call
xor
ret
mov
mov
mov
dec
push
mov
test
je
push
lea
mov
mov
mov
inc
inc
dec
jne
pop
mov
pop
ret
push
mov
push
push
push
push
push
push
push
call
mov
push
push
call
mov
jmp
push
mov
push
push
push
push
pushl
pop
mov
mov
mov
mov
push
mov
push
push
call
test
je
mov
jmp
mov
push
mov
add
mov
pop
push
add
mov
mov
mov
add
add
add
mov
pop
push
add
push
pushl
push
call
test
je
add
add
jmp
pop
xor
mov
shl
add
add
pop
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
xor
xor
mov
mov
or
add
shl
add
mov
test
loopne
xor
mov
cmp
je
inc
pop
pop
pop
mov
pop
ret
mov
mov
pop
pop
mov
mov
mov
pop
mov
leave
ret
push
mov
sub
push
push
xor
push
xor
lea
mov
mov
inc
add
cmp
jl
xor
lea
mov
xor
divl
mov
movzbl
add
add
mov
cltd
idiv
mov
inc
mov
mov
mov
mov
add
movzbl
lea
cmp
mov
jl
andl
cmpl
jbe
lea
mov
cltd
idiv
mov
mov
lea
add
mov
cltd
idiv
mov
mov
mov
mov
mov
movzbl
lea
mov
mov
mov
mov
add
mov
mov
add
mov
cltd
idiv
mov
mov
xor
incl
mov
cmp
jb
mov
pop
pop
pop
leave
ret
push
mov
mov
call
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
lea
movb
push
lea
push
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
pop
lea
pop
push
lea
push
call
push
call
mov
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
call
push
call
mov
mov
xor
lea
mov
push
rep
stos
lea
push
push
call
push
lea
push
push
call
test
jne
lea
push
push
push
call
test
jne
push
push
push
push
mov
push
lea
push
push
call
or
cmp
jne
push
push
push
push
push
lea
push
push
call
cmp
jne
push
push
push
push
push
lea
push
push
call
cmp
mov
je
push
push
push
push
push
lea
push
push
call
cmp
jne
push
pushl
call
cmp
mov
je
push
add
push
push
push
call
mov
cmp
je
lea
push
push
pushl
push
pushl
call
push
call
push
call
pushl
call
push
call
mov
xor
lea
mov
rep
stos
stos
xor
lea
movb
movb
movb
movb
stos
stos
stos
stos
mov
xor
cmp
jbe
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
lea
cmp
je
inc
cmp
jb
jmp
xor
add
mov
mov
inc
cmp
jb
xor
mov
mov
inc
cmp
jb
mov
push
lea
push
push
lea
push
push
call
add
push
push
push
push
call
mov
lea
push
push
push
call
add
call
pop
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
add
jmp
ljmp
jecxz
out
js
in
in
aam
out
mov
cmpsb
popl
xchg
fsubr
xchg
or
or
cmc
mov
out
xchg
outsl
xchg
aam
xchg
or
rolb
or
int3
cmpsl
test
inc
test
imul
inc
mov
fmuls
or
aam
add
lds
addl
xor
js
add
icebp
xchg
jl
js
jl
or
xchg
js
push
xchg
or
or
jo
jg
lahf
mov
xchg
ret
ret
ret
sarb
add
push
add
add
push
or
lret
loop
out
jmp
ret
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmpps
ret
ret
ret
fisubl
es
loop
and
cs
jecxz
out
jmp
inc
inc
inc
inc
inc
inc
add
add
xor
jae
add
add
add
add
add
add
add
add
add
les
add
add
add
add
add
add
add
add
jo
adc
or
add
sub
aaa
add
aaa
add
add
add
es
add
es
add
add
add
add
add
add
add
imul
add
add
add
aaa
mov
push
sahf
inc
cmpsl
cmc
pop
mov
in
out
add
add
push
or
jae
dec
aaa
add
add
add
add
add
incl
add
add
add
or
add
add
pusha
add
addb
add
addb
addb
add
add
addb
add
jo
add
or
add
cmp
add
push
add
adcb
add
add
addb
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
adc
add
add
rolb
add
call
add
add
add
addb
add
add
addb
add
dec
add
addb
add
pusha
add
orb
add
js
add
nop
add
orb
add
test
add
rolb
orb
add
add
orb
add
or
orb
add
and
adcb
add
cmp
adcb
add
push
add
adcb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
adc
pop
add
add
add
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
push
add
mov
push
add
rolb
add
call
push
add
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
add
add
add
add
add
add
add
add
test
add
rolb
addb
add
fadds
add
lock
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
arpl
add
cmp
add
add
add
add
add
add
add
add
add
push
pop
add
push
add
add
add
add
add
add
add
or
add
addb
add
add
add
add
or
add
nop
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
or
add
rorb
add
add
add
add
or
add
rorb
add
add
add
add
add
or
add
loopne
add
add
add
add
add
or
add
lock
add
add
add
add
or
add
add
add
add
add
add
add
or
add
adc
add
add
add
add
add
or
add
and
add
add
add
add
add
or
add
xor
add
add
add
add
add
or
add
inc
or
add
add
add
add
or
add
push
or
add
add
add
add
or
add
pusha
or
add
add
add
add
or
add
jo
add
add
add
add
add
or
add
orb
add
add
add
add
or
add
nop
or
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
or
add
rorb
add
add
add
add
or
add
rorb
add
add
add
add
add
or
add
loopne
add
add
add
add
add
or
add
lock
add
add
add
add
or
add
add
add
add
add
add
add
or
add
adc
add
add
add
add
add
or
add
and
add
add
add
add
add
or
add
xor
add
add
add
add
add
or
add
inc
or
add
add
add
add
or
add
push
or
add
add
add
add
or
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
or
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
or
add
mov
add
rorb
add
add
add
add
add
add
add
push
add
in
add
add
add
add
add
add
in
add
add
add
push
add
add
add
add
add
add
pop
add
call
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
test
add
in
add
add
add
js
add
test
add
in
add
add
add
and
add
add
add
add
add
dec
add
enter
in
add
add
add
nop
push
add
or
add
in
add
add
add
cwtl
push
add
push
add
add
add
add
pop
add
test
add
in
add
add
add
test
add
push
add
add
add
add
pushf
add
test
add
in
add
add
add
mov
or
add
add
add
add
add
add
mov
add
add
add
add
mov
add
in
add
add
add
pusha
roll
push
add
add
add
add
add
add
add
mov
add
add
add
add
enter
add
add
add
add
add
add
lret
or
add
in
add
add
add
fmul
add
cld
add
add
add
add
aam
add
push
add
add
add
add
add
add
aam
add
add
add
add
add
add
add
add
js
add
in
add
add
add
inc
xlat
add
ret
add
add
add
add
add
add
ss
add
add
add
cmp
add
inc
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
out
add
add
in
add
add
add
js
add
rolb
add
in
add
add
add
dec
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
sub
add
in
add
add
add
sub
add
mov
add
in
add
add
add
mov
add
inc
add
add
add
add
add
add
repz
into
add
add
add
add
add
add
hlt
add
mov
add
in
add
add
add
pop
cmc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
testb
dec
add
add
add
add
add
add
add
add
add
add
add
add
testl
add
add
add
add
add
add
aam
add
in
add
add
add
loopne
add
cwtl
mov
add
add
add
js
add
add
add
add
add
add
add
in
add
add
add
sub
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
je
ja
ja
ja
ja
ja
ja
ja
ja
inc
inc
inc
inc
ja
ja
add
ja
ja
add
ja
ja
inc
je
inc
ja
ja
ja
inc
inc
inc
inc
ja
add
push
ja
ja
mov
ja
ja
ja
ja
ja
ja
inc
je
ja
ja
ja
je
push
jo
cmp
inc
inc
hlt
ja
ja
mov
ja
ja
jo
ja
inc
ja
ja
je
ja
ja
ja
je
add
hlt
jo
addl
ja
pop
ja
ja
ja
pop
ja
inc
ja
ja
inc
je
inc
ja
add
add
push
jo
cmp
inc
hlt
inc
ja
ja
add
ja
pop
add
ja
ja
ja
je
inc
ja
jo
push
lock
hlt
jo
addl
ja
add
ja
add
ja
inc
xchg
ja
je
ja
ja
lock
push
jo
cmp
push
inc
ja
ja
add
ja
add
add
inc
xchg
ja
ja
ja
ja
push
lock
addl
ja
mov
ja
jo
add
ja
inc
ja
ja
jo
ja
ja
lock
decl
jo
cmp
cmp
cmp
ja
add
add
jo
add
ja
inc
xchg
ja
jo
ja
jo
push
incl
addl
add
addl
jo
pop
or
add
ja
dec
ja
ja
jo
ja
jo
inc
inc
inc
ja
cmp
ja
jo
pop
ja
mov
jo
pop
ja
add
je
ja
inc
ja
ja
ja
ja
jo
decl
pop
ja
ja
addl
ja
mov
ja
add
dec
ja
inc
ja
ja
ja
ja
jo
incl
ja
ja
ja
add
mov
add
ja
mov
jo
ja
inc
ja
dec
ja
ja
ja
ja
jo
add
ja
ja
ja
ja
add
ja
ja
add
pop
ja
jo
ja
je
inc
xchg
add
add
add
add
add
add
add
add
add
sbb
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
mov
mov
mov
mov
add
add
add
mov
add
or
mov
mov
mov
add
add
add
mov
mov
mov
add
add
add
add
mov
add
dec
test
mov
inc
mov
add
push
orb
mov
mov
addb
mov
dec
dec
add
mov
mov
mov
mov
mov
push
mov
xor
mov
mov
or
mov
mov
push
xorb
xor
inc
inc
hlt
add
add
add
or
mov
inc
mov
mov
mov
mov
add
add
add
mov
mov
mov
mov
lock
xor
mov
mov
or
mov
mov
add
xorb
push
or
add
mov
test
mov
mov
mov
mov
or
orb
inc
dec
mov
push
mov
xor
or
add
or
mov
addb
add
push
xorb
xor
inc
hlt
inc
or
or
mov
test
mov
mov
dec
addb
add
add
mov
mov
mov
push
mov
xor
xor
xor
or
inc
mov
lock
hlt
xorb
push
hlt
add
add
add
or
mov
mov
dec
mov
inc
dec
mov
mov
mov
add
add
mov
lock
add
add
add
or
mov
add
push
xorb
xor
push
dec
or
addb
inc
dec
mov
dec
add
dec
dec
add
dec
dec
add
dec
addb
add
add
mov
mov
or
mov
lock
lock
mov
mov
cmp
hlt
lock
jae
inc
inc
inc
or
or
add
mov
mov
mov
mov
mov
mov
or
add
add
cmp
push
mov
mov
mov
mov
or
mov
add
decl
xorb
aaa
aaa
aaa
aaa
or
lock
mov
mov
mov
mov
add
add
add
mov
mov
mov
push
mov
add
mov
mov
mov
incl
jae
add
add
mov
add
mov
mov
mov
mov
mov
mov
xorb
addb
xchg
inc
mov
add
mov
mov
mov
mov
inc
inc
dec
mov
xorb
mov
or
mov
mov
inc
dec
mov
inc
inc
inc
inc
inc
inc
inc
inc
mov
or
inc
mov
decl
or
mov
mov
mov
mov
or
jo
or
jae
mov
or
mov
addb
mov
or
add
mov
mov
or
mov
cmp
incl
mov
orb
mov
mov
mov
mov
or
mov
push
mov
mov
mov
mov
mov
or
or
add
mov
inc
mov
mov
mov
or
add
add
mov
mov
mov
mov
add
addb
add
mov
mov
mov
mov
mov
mov
add
or
mov
add
xor
add
pusha
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
decl
mov
mov
xchg
clc
decl
mov
mov
js
js
or
mov
mov
clc
orb
inc
insb
addr16
inc
fs
fs
fs
jo
xchg
mov
popa
inc
push
jo
push
push
push
push
push
push
push
push
push
push
clc
orb
inc
inc
ja
ja
je
inc
gs
daa
inc
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
clc
jo
xchg
js
js
js
js
js
xchg
mov
enter
into
into
into
into
into
into
jle
jle
jle
jle
jle
orb
mov
jl
mov
xchg
mov
js
clc
orb
insb
insb
in
out
in
out
jle
enter
into
mov
call
or
enter
mov
call
mov
in
in
in
out
out
out
in
mov
call
jl
enter
mov
jl
jle
xchg
out
out
clc
orb
addr16
in
in
out
insb
out
mov
enter
enter
mov
mov
out
into
mov
jle
mov
ja
into
pop
out
jl
in
jl
mov
mov
out
into
mov
enter
out
out
enter
orb
in
jle
jl
jl
jl
in
jl
mov
mov
out
insb
jl
jle
enter
into
mov
enter
orb
enter
out
jl
mov
jl
xchg
enter
mov
ja
jl
in
jle
in
mov
enter
mov
xchg
into
mov
mov
enter
call
mov
mov
in
out
in
mov
enter
enter
xchg
enter
out
enter
into
mov
out
call
ja
enter
mov
out
ja
enter
call
test
in
jl
enter
jle
jle
mov
call
enter
into
jl
out
jl
enter
enter
jle
jo
idivb
into
mov
enter
out
out
enter
ja
jle
mov
enter
enter
enter
mov
into
enter
in
ja
jle
jle
jle
mov
addr16
mov
into
jl
jl
jl
mov
call
test
jl
out
insb
jl
out
jle
jl
jle
orb
ja
push
insb
jbe
insb
jbe
addr16
jle
jle
testl
ja
mov
mov
mov
decl
mov
clc
clc
mov
add
mov
mov
clc
decl
js
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
decl
mov
xchg
clc
decl
mov
js
addb
gs
gs
addr16
orb
push
inc
inc
add
and
push
push
adc
adc
jo
ja
ja
ja
ja
xchg
xchg
ja
ja
orb
js
mov
mov
mov
mov
into
into
into
into
jle
jle
xchg
clc
orb
jle
mov
xchg
mov
orb
int3
mov
in
call
call
mov
out
out
into
mov
testl
into
mov
js
mov
into
pop
mov
in
mov
enter
mov
jl
jl
into
into
jl
jle
mov
cmp
xchg
out
jle
out
enter
mov
out
into
addr16
jl
in
mov
out
in
mov
orb
mov
enter
enter
mov
mov
into
into
addr16
out
out
mov
cmp
xchg
jl
enter
enter
enter
orb
jl
jl
enter
jle
enter
mov
pop
jle
in
jle
enter
jle
cmp
jl
mov
jl
enter
jle
ja
orb
out
in
in
mov
enter
jle
enter
mov
out
ja
in
xchg
mov
enter
in
ja
enter
in
mov
jo
xchg
enter
in
jl
xchg
out
out
call
xchg
js
outsb
jl
jbe
in
jl
enter
loopne
xchg
enter
into
jl
jbe
in
out
jo
push
mov
mov
mov
mov
mov
mov
mov
clc
decl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
incl
add
incl
add
incl
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xchg
clc
mov
mov
mov
clc
pushl
insb
in
in
inc
inc
fs
inc
inc
inc
jo
arpl
inc
push
push
gs
xor
xchg
push
ja
ja
ja
jg
xchg
xchg
mov
popl
in
into
into
into
into
into
jle
enter
mov
into
jl
xchg
enter
out
jl
out
into
enter
xchg
mov
jl
ja
out
enter
orb
addr16
enter
enter
mov
into
ja
mov
enter
orb
jl
mov
out
ja
iret
addb
in
out
enter
js
addb
pop
into
jle
enter
out
addb
in
jl
jl
enter
orb
jl
into
mov
out
out
addb
out
jl
jl
mov
mov
out
in
js
xchg
jl
xchg
into
jle
in
jl
mov
iret
cmp
mov
outsb
jl
ja
mov
jle
addb
jbe
insb
addr16
jl
addb
xchg
mov
clc
mov
mov
vpmacssdql
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
xchg
addr16
gs
gs
ja
jbe
ja
jg
mov
jl
out
out
orb
call
orb
enter
jo
insb
jl
into
jl
in
mov
into
addr16
mov
jle
ja
orb
mov
enter
idivl
into
into
jle
enter
orb
mov
out
xor
mov
in
out
enter
orb
jle
enter
test
jl
mov
js
xchg
jl
into
jle
jle
call
jle
jl
mov
jl
test
mov
clc
mov
addb
add
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
sub
add
adc
add
sub
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
test
jo
jo
inc
inc
add
xchg
mov
pop
and
mov
ja
ja
ja
add
test
enter
mov
add
mov
enter
test
in
out
js
call
insb
jl
jl
mov
jle
add
xchg
insb
out
ja
enter
add
addr16
jl
mov
test
enter
jle
add
xchg
out
jl
mov
add
out
call
mov
ja
enter
xchg
mov
jle
push
movl
push
mov
clc
mov
add
push
add
push
add
push
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
popa
pusha
inc
dec
xchg
mov
or
ja
js
js
enter
js
insb
insb
mov
mov
into
js
in
mov
jl
js
jle
xchg
jle
js
jl
ja
jl
call
enter
test
data16
addr16
mov
add
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
cmp
sub
add
push
add
sbb
push
xor
add
add
daa
add
sub
push
xor
add
add
sub
push
xor
jge
or
imul
push
inc
sub
add
and
outsl
pop
sub
popa
inc
add
cmp
arpl
add
add
xor
gs
inc
add
inc
add
inc
add
push
add
push
or
scas
push
sbb
cltd
or
mov
add
cmpsl
dec
and
lods
push
sub
mov
and
mov
pop
sub
mov
pop
xor
mov
xor
mov
xor
mov
push
cmp
mov
imul
jno
add
pop
and
into
pop
and
pop
sub
into
pusha
and
bound
add
push
and
fldenv
add
push
sub
fldenv
add
insl
das
add
imul
fnsave
add
data16
shrb
lret
imul
shrl
insb
cmp
shrl
fisubrl
add
outsl
cmp
into
jo
add
jb
add
jb
add
jb
add
jb
add
jb
add
je
add
js
add
jp
add
jne
add
js
add
jnp
add
push
push
add
insl
inc
add
inc
add
jl
add
insl
push
add
js
add
jbe
add
jnp
add
jb
add
jae
add
jns
add
jge
add
jne
add
jl
add
jp
add
ja
add
jbe
add
jge
add
jp
add
jnp
add
jle
add
ja
add
jp
add
jge
add
jge
add
jg
add
jle
add
pop
add
add
sbb
in
aas
add
subb
xorl
mov
lahf
mov
mov
mov
mov
mov
mov
orl
dec
add
sbbb
adcb
adcl
mov
rolb
pop
add
mov
fistl
inc
add
xchg
call
xchg
in
dec
add
mov
jmp
dec
add
mov
in
push
add
xchg
push
add
cwtl
push
add
xchg
pop
add
cwtl
pop
add
cltd
pop
add
pushf
pop
add
lea
les
pusha
add
scas
imul
mov
addr16
test
insl
add
mov
jae
mov
add
test
vpmovm2w
int3
add
leave
incl
insb
ret
filds
lcall
add
cmpsb
test
mov
mov
xchg
add
stos
lcall
mov
add
xchg
addl
fwait
mov
int3
lahf
nop
add
mov
add
mov
cwtl
add
test
sahf
add
scas
mov
add
mov
add
mov
lods
add
mov
add
mov
add
mov
mov
lret
add
mov
mov
int
mov
int
mov
add
shlb
ffreep
mov
add
mov
add
lret
ret
add
int
add
into
leave
add
iret
leave
add
rol
add
ror
add
ror
add
roll
fstp
aam
fadds
jecxz
ret
add
ror
add
aam
add
fmul
add
rolb
jecxz
aam
jmp
aam
loop
fiaddl
in
fcompp
add
loopne
add
loopne
add
loope
add
loop
add
jecxz
add
in
add
jmp
call
add
call
ljmp
repnz
add
hlt
repz
clc
testb
incb
add
add
incl
add
mov
fsubrp
in
repz
clc
clc
clc
hlt
repz
ljmp
leave
enter
leave
enter
enter
mov
enter
mov
rcr
fsubp
in
repz
clc
clc
clc
repz
ljmp
enter
enter
enter
mov
mov
add
mov
int
rcl
xlat
xlat
fxam
in
out
jmp
out
repz
cmc
clc
clc
stc
stc
stc
cld
cld
cld
cld
cld
cld
mov
mov
jl
jnp
adc
add
or
or
or
adc
adc
or
mov
leave
mov
mov
adc
or
add
add
add
or
or
or
or
or
or
or
mov
mov
mov
sbb
sbb
push
push
push
sbb
push
sbb
push
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
std
enter
iret
leave
mov
scas
lods
sbb
addb
addb
addl
addl
mov
mov
std
enter
ror
mov
stos
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
aam
mov
rorl
push
push
push
push
push
jle
xchg
xchg
xchg
cwtl
cwtl
cltd
pushf
pushf
pushf
popf
popf
popf
cmpsb
mov
test
enter
aam
mov
cmp
cmp
aas
aas
inc
inc
push
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
pushf
pushf
popf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
cmpsb
test
cld
enter
aam
mov
cmp
cmp
cmp
inc
inc
push
push
push
push
jle
xchg
xchg
xchg
cwtl
cwtl
cwtl
cltd
pushf
pushf
popf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
cmpsb
test
enter
mov
cmp
cmp
cmp
inc
inc
push
push
push
push
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
cltd
pushf
pushf
popf
mov
cmpsb
cmpsb
test
test
enter
shll
cmp
cmp
cmp
inc
inc
inc
push
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
pushf
pushf
popf
popf
popf
popf
cmpsb
mov
cmpsb
test
add
mov
cmp
cmp
cmp
cmp
inc
push
push
push
xchg
push
xchg
xchg
xchg
cwtl
cwtl
cwtl
cltd
pushf
pushf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
test
enter
faddl
cmp
cmp
cmp
inc
cmp
push
push
push
push
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
cltd
cltd
pushf
pushf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
test
test
add
xchg
dec
cmp
cmp
cmp
cmp
inc
push
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
pushf
pushf
pushf
popf
popf
popf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
test
enter
faddl
aas
cmp
cmp
inc
inc
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
cltd
pushf
pushf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
test
add
fsubp
test
jb
dec
cmp
cmp
aas
inc
push
push
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
cltd
pushf
pushf
pushf
popf
popf
popf
mov
test
add
out
test
jb
dec
inc
cmp
cmp
inc
push
push
push
push
push
jle
xchg
xchg
cwtl
cwtl
cwtl
pushf
pushf
popf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
test
add
loopne
ja
mov
inc
inc
cmp
aas
aas
aas
push
push
push
push
push
jle
xchg
xchg
cwtl
cwtl
cwtl
cltd
pushf
pushf
popf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
test
add
call
mov
outsl
inc
aas
aas
cmp
cmp
aas
aas
push
push
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
cltd
pushf
pushf
popf
mov
cmpsb
cmpsb
cmpsb
test
leave
enter
jecxz
jne
mov
aas
cmp
aas
push
push
push
push
push
push
push
xchg
xchg
xchg
cwtl
cwtl
cwtl
popf
cltd
popf
popf
popf
popf
popf
cmpsb
cmpsb
cmpsb
cmpsb
test
leave
mov
test
nop
lea
inc
inc
cmp
aas
aas
push
push
push
push
push
xchg
push
xchg
xchg
cwtl
cwtl
cwtl
cwtl
pushf
pushf
popf
popf
popf
cmpsb
popf
cmpsb
cmpsb
cmpsb
cmpsb
icebp
mov
jecxz
jne
nop
lea
aas
aas
cmp
push
aas
push
push
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
pushf
pushf
pushf
popf
popf
popf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
in
leave
movl
je
nop
xchg
xchg
lea
inc
inc
aas
aas
inc
aas
aas
push
push
push
push
push
push
push
xchg
xchg
xchg
cwtl
cwtl
cwtl
cltd
popf
popf
mov
cmpsb
cmpsb
cmpsb
in
leave
mov
arpl
nop
xchg
xchg
lea
push
inc
inc
aas
aas
aas
aas
push
aas
push
push
push
push
xchg
push
xchg
xchg
xchg
cwtl
cwtl
cltd
cwtl
popf
popf
mov
cmpsb
cmpsb
jmp
ljmp
xchg
xchg
lcall
inc
aas
aas
push
push
push
push
push
push
push
xchg
push
xchg
xchg
xchg
cwtl
cltd
popf
cltd
popf
mov
cmpsb
cmpsb
jmp
ljmp
xchg
lcall
inc
inc
aas
aas
aas
push
push
push
push
push
jle
xchg
xchg
xchg
cwtl
cwtl
cltd
cwtl
popf
pushf
popf
popf
popf
cmpsb
mov
mov
pop
pop
jne
nop
xchg
xchg
lcall
inc
inc
inc
aas
push
aas
push
push
push
jle
jle
xchg
xchg
cwtl
cltd
cwtl
popf
pushf
popf
popf
popf
cmpsb
cmpsb
cmpsb
cmpsb
out
mov
arpl
imul
lcall
inc
aas
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
pushf
pushf
mov
popf
out
mov
pop
das
addr16
nop
nop
xchg
xchg
xchg
lea
inc
inc
inc
aas
inc
dec
dec
dec
push
push
push
jno
xchg
xchg
xchg
xchg
mov
fwait
movsb
in
mov
pop
sub
imul
nop
mov
push
cmp
inc
inc
dec
dec
dec
dec
push
push
push
jo
mov
xchg
xchg
xchg
in
mov
pop
and
pop
imul
js
js
jbe
imul
sub
aaa
sub
inc
inc
inc
dec
dec
dec
dec
imul
mov
add
out
repz
and
xor
ja
ja
ja
imul
sub
daa
daa
daa
cs
xor
xor
pop
pop
pop
pop
pop
pop
jne
fnstcw
repnz
pop
pop
pop
pop
arpl
fs
mov
mov
ret
lret
lret
lret
int
rcl
aad
xlat
mov
repz
in
out
in
in
in
jecxz
jecxz
loop
fcmovnu
fcmovnu
loopne
jecxz
out
hlt
clc
clc
clc
clc
clc
repz
mov
out
out
out
out
out
jmp
ljmp
fsubrp
ljmp
clc
out
out
call
mov
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
inc
push
add
add
add
add
add
add
add
dec
das
pop
add
or
dec
xor
add
sub
push
aaa
daa
add
sub
inc
cmp
add
cmp
jg
pop
add
cmp
outsl
pop
sub
jb
cmp
dec
inc
inc
add
inc
add
inc
add
dec
add
add
push
add
push
add
push
add
pop
add
inc
add
push
add
or
mov
add
cmpsl
push
add
xor
mov
imul
add
popa
and
add
arpl
add
data16
push
sub
xlat
imul
add
jo
add
xor
shrb
int3
insl
xor
shrl
insl
cmp
shrl
add
outsb
xor
into
jo
add
jae
add
jae
add
jno
add
jno
add
jb
add
jne
add
jns
add
jp
add
jne
add
js
add
jl
add
push
push
add
imul
insl
inc
add
inc
add
jl
add
jle
add
jle
add
outsl
inc
add
jno
add
jne
add
jp
add
jle
add
jne
add
jle
add
jl
add
jne
add
jp
add
jp
add
jl
add
jle
add
jp
add
jle
add
jle
add
jg
add
jg
add
pop
add
add
cmpb
pushf
subb
xorl
mov
mov
mov
mov
nop
jo
roll
add
addb
addl
orl
orl
int3
xchg
int
push
add
sbbl
fildl
push
add
sbbl
test
fisttpll
push
add
xchg
pop
add
addl
xchg
call
xchg
in
dec
add
mov
jmp
dec
add
test
jecxz
push
add
mov
in
push
add
xchg
push
add
cwtl
push
add
xchg
pop
add
cltd
pop
add
cltd
pop
add
pushf
pop
add
mov
ja
rorl
add
test
mov
push
mov
add
xchg
int3
add
leave
incl
insb
ret
filds
cwtl
mov
add
cmpsb
test
mov
mov
xchg
add
stos
cmpsl
add
mov
add
xchg
addl
cwtl
xchg
leave
lcall
shlb
xchg
add
cmpsb
cwtl
add
stos
pushf
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
lods
add
mov
add
mov
add
mov
mov
lret
mov
mov
leave
mov
mov
leave
mov
mov
lret
shlb
ret
mov
add
shlb
rol
mov
add
leave
mov
add
mov
rol
roll
lret
fmul
ret
add
into
lds
aad
leave
add
rol
add
ror
add
ror
add
ror
add
aad
add
ror
add
aad
add
aad
add
fcom
add
fcmovnu
add
lret
ret
iret
enter
lret
add
aad
add
fmul
add
xlat
roll
loope
roll
in
roll
loope
add
add
add
fcmovnbe
add
fstp
add
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
jecxz
add
loope
add
in
add
in
add
jmp
jmp
add
jmp
ljmp
out
in
add
out
in
add
lock
add
cmc
repz
clc
testl
incb
add
add
incl
shrl
shl
jmp
repnz
icebp
in
loopne
into
mov
mov
lods
mov
mov
mov
mov
mov
mov
loopne
repnz
in
jmp
iret
lret
mov
mov
mov
mov
mov
mov
lahf
mov
lahf
mov
or
pusha
popa
sbb
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
add
xchg
xchg
or
add
add
add
add
add
add
add
push
push
push
push
push
push
push
pop
push
std
mov
add
xchg
xchg
push
inc
dec
dec
arpl
fs
addr16
lahf
mov
inc
fwait
xchg
lcall
cltd
cltd
pushf
pushf
fwait
pushf
pushf
pushf
pushf
pushf
pushf
pushf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
mov
mov
add
mov
imul
cmp
jl
jle
addb
lea
xchg
sti
mov
add
mov
and
sub
sub
sub
cmp
jge
jle
xchg
nop
nop
nop
xchg
xchg
xchg
xchg
std
mov
add
mov
sub
sub
sub
sub
jl
jle
jle
xchg
nop
nop
xchg
xchg
xchg
xchg
cli
mov
add
mov
and
sub
sub
cmp
jl
cmpb
mov
xchg
xchg
xchg
xchg
cli
mov
add
mov
sub
daa
sub
sub
sub
cmp
jge
jle
orb
nop
nop
nop
xchg
xchg
cli
mov
add
into
lods
dec
dec
xor
sub
daa
sub
sub
cmp
jge
jle
xchg
xchg
mov
mov
add
into
stos
pop
push
push
cmp
sub
daa
sub
sub
cmp
jge
jle
jle
xchg
xchg
xchg
nop
xchg
clc
mov
stos
pop
pop
pop
push
xor
sub
sub
sub
aas
jge
jle
xchg
lea
hlt
mov
stos
pop
pop
pop
push
push
xor
daa
sub
sub
cmp
bound
jle
xchg
xchg
lea
mov
stos
pop
pop
pop
pop
push
cmp
xor
sub
sub
cmp
bound
xchg
mov
xchg
xchg
nop
repz
add
xlat
stos
pop
pop
pop
jne
pop
cmp
sub
sub
cmp
jge
jle
mov
mov
xchg
xchg
out
mov
add
xlat
stos
pop
pop
ja
jne
cmp
xor
sub
cmp
aas
jge
jge
jle
mov
xchg
mov
loopne
cmpsl
pop
pop
ja
outsl
outsl
pop
cmp
sub
sub
cmp
jge
jle
jle
mov
xchg
xchg
out
mov
loopne
cmpsl
pop
pop
ja
test
pop
cmp
sub
cmp
bound
jle
mov
lea
add
out
pop
pop
ja
test
cmp
sub
ds
jge
jge
xchg
mov
mov
pop
pop
ja
test
cmp
sub
cmp
aas
jge
jle
xchg
lea
add
jmp
dec
pop
je
js
test
pop
cmp
cmp
xor
jge
jl
jle
xchg
fildll
mov
js
jns
sbbl
cmp
xor
cmp
cmp
pop
insl
jg
addb
fsubrl
mov
pop
ja
ja
ja
pop
pop
push
xor
xor
das
das
xor
cmp
insb
insb
insb
outsb
jo
jbe
jnp
push
pop
pop
jae
pop
pop
push
push
dec
xor
push
push
push
cs
push
push
imul
dec
and
pop
pop
pop
pop
pop
pop
pop
pop
dec
inc
and
sbb
and
inc
inc
dec
push
push
fisubl
dec
dec
mov
stos
cmpsl
stos
cmpsl
test
cmpsb
movsb
cmpsl
movsl
cmpsl
stos
stos
stos
stos
lods
mov
mov
leave
scas
sahf
add
in
out
out
out
out
out
ljmp
xlat
rcl
rcl
aad
loopne
in
repnz
icebp
in
loopne
into
mov
sahf
add
in
in
loopne
loopne
call
ror
rcl
aad
out
in
div
div
in
out
mov
mov
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
incl
add
incl
add
incl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
dec
sub
and
dec
xor
add
and
dec
xor
add
add
add
sub
push
cmp
add
sub
push
cmp
add
add
xor
pop
inc
xor
pop
inc
add
add
add
inc
add
or
add
pop
sub
add
popa
sub
add
data16
mov
cmp
mov
jae
add
bound
add
imul
add
push
sub
aad
cs
imul
add
insb
sub
fisubrl
add
insl
sub
fidivs
add
xor
shrb
lret
imul
shrb
lret
outsb
cmp
shrl
add
outsb
xor
into
jo
add
jb
add
je
add
jb
add
jno
add
jb
add
je
add
js
add
jns
add
jne
add
js
add
jl
add
outsl
inc
add
outsb
inc
add
jns
add
insb
push
add
ja
add
jb
add
insb
add
jns
add
jge
add
jae
add
jne
add
jp
add
jge
add
jne
add
jle
add
jns
add
jbe
add
jp
add
jl
add
jl
add
jle
add
jp
add
jge
add
jge
add
jg
add
jle
add
mov
add
cwtl
or
rorb
add
mov
sub
rorl
add
cmpb
mov
dec
add
xorb
test
pushf
xchg
popf
mov
popf
mov
lahf
mov
mov
nop
add
mov
lret
add
addb
test
test
fadds
push
add
sbbb
sbbl
fildl
add
test
fiaddl
pop
add
nop
push
add
xchg
pop
add
addl
xchg
call
orb
mov
jmp
nop
dec
add
push
add
mov
xchg
push
add
xchg
push
add
cwtl
push
add
xchg
pop
add
cwtl
pop
add
cltd
pop
add
pushf
pop
add
mov
insl
add
mov
into
fwait
jne
les
jae
repz
imul
inc
aam
add
cltd
mov
mov
cltd
test
mov
mov
mov
mov
mov
lea
mov
mov
xchg
add
lcall
cmpsl
popf
add
test
mov
add
scas
cmpsl
add
mov
add
mov
add
mov
add
xchg
addl
enter
lret
add
mov
xchg
add
cmpsl
lcall
stos
popf
add
scas
mov
add
mov
add
mov
add
mov
add
mov
mov
enter
mov
mov
add
mov
mov
add
mov
add
lret
ror
ret
lret
ror
leave
add
int
add
iret
int3
add
ror
add
ror
add
rcl
add
aad
add
fcom
add
leave
roll
int3
les
in
enter
lret
aad
add
fcmovbe
add
fcom
add
fcmovnbe
add
add
fcompp
add
loope
add
jecxz
add
in
add
out
add
jmp
add
in
ljmp
call
call
add
out
in
add
lock
add
repz
add
cmc
repz
div
add
clc
testl
incl
mov
mov
lret
jmp
in
loopne
ror
mov
mov
mov
mov
mov
leave
int3
int
rcl
xlat
in
out
ljmp
idiv
sti
sti
std
std
mov
sbb
imul
add
add
add
or
or
or
or
or
mov
imul
or
or
push
push
push
push
push
push
adc
adc
adc
adc
adc
mov
insl
movsb
pushw
lods
push
push
push
jno
jno
jb
jne
jbe
jne
jbe
jbe
ja
mov
jns
insb
jo
test
test
lods
lods
lods
lods
lods
scas
scas
scas
scas
scas
scas
mov
mov
mov
sti
mov
popf
lahf
mov
inc
inc
inc
inc
inc
mov
xchg
xchg
mov
mov
sahf
dec
xor
and
inc
inc
inc
outsl
mov
xchg
mov
mov
sahf
popa
push
xor
and
inc
inc
inc
inc
mov
xchg
xchg
mov
stc
mov
pop
xor
and
inc
inc
inc
inc
mov
xchg
mov
mov
jnp
popa
push
xor
das
das
inc
inc
inc
outsl
mov
xchg
mov
cmc
lret
add
js
bound
sub
sub
cmp
inc
inc
outsl
mov
xchg
xchg
mov
mov
bound
cmp
sub
inc
inc
mov
xchg
mov
out
lret
add
js
bound
sub
das
das
inc
inc
inc
mov
xchg
xchg
mov
mov
arpl
sub
sub
inc
inc
outsl
inc
mov
xchg
pushf
pushf
mov
fstl
addl
sub
das
inc
inc
inc
outsl
mov
xchg
xchg
mov
add
push
dec
bound
cmp
sub
das
inc
inc
inc
outsl
mov
xchg
xchg
mov
add
push
inc
popa
xchg
cmp
sub
cmp
inc
inc
mov
fwait
fwait
fwait
pushf
call
and
xchg
xor
cmp
nop
nop
nop
cwtl
cwtl
cwtl
cltd
call
sbb
addl
xor
and
xor
cmp
pop
pop
jge
xchg
mov
ficoms
and
addl
push
sbb
sbb
xor
cmp
push
push
pop
jl
jl
in
add
dec
adc
inc
dec
arpl
inc
and
and
and
and
dec
pop
pop
in
add
dec
dec
dec
dec
push
push
push
push
js
js
jnp
rol
ret
vshufpd
leave
int
xlat
mov
loop
loope
loope
loope
fstp
aad
in
lock
repz
jmp
mov
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
add
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
pop
add
push
add
bound
mov
jno
add
jl
add
arpl
add
and
fldenv
add
data16
aam
das
add
imul
add
insb
sub
fisubrl
add
insb
sub
add
jno
add
push
add
insl
xor
add
jo
add
jno
add
jo
add
jo
add
je
add
jno
add
jb
add
jns
add
jge
add
je
add
jbe
add
jp
add
jl
add
jle
add
addr16
add
insb
pop
add
push
add
jno
add
outsl
pusha
add
jae
add
js
add
jl
add
jbe
add
jbe
add
js
add
jns
add
jns
add
jl
add
jg
add
mov
add
subl
cwtl
or
in
add
in
mov
sub
int
xor
in
aas
add
dec
add
test
mov
nop
jle
fiaddl
push
add
adcl
test
fildl
push
add
test
fildl
pop
add
mov
loope
inc
add
addb
addb
test
mov
jecxz
dec
add
mov
jmp
lea
jmp
dec
add
xchg
loopne
pop
add
mov
loopne
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
cwtl
push
add
cltd
pop
add
cltd
pop
add
lcall
icebp
sahf
pop
add
mov
les
jb
fstps
bound
in
bound
in
imul
mov
arpl
hlt
movsl
gs
test
jg
add
loope
inc
aam
add
cmpsl
cwtl
add
lods
sahf
add
scas
mov
add
mov
add
mov
add
xchg
addl
cwtl
xchg
leave
lcall
int3
lahf
nop
add
mov
xchg
add
movsb
xchg
add
test
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
stos
add
mov
scas
add
mov
cmpsl
add
mov
mov
lret
add
mov
mov
lret
shlb
les
add
ret
mov
add
mov
add
int
add
iret
movb
rol
add
ror
add
ror
add
aam
add
int
in
les
out
leave
add
xlat
into
add
aad
add
add
add
add
add
add
fstp
add
loopne
add
loopne
add
loope
add
loop
add
loope
add
in
add
in
add
call
loope
repz
ljmp
out
in
add
out
in
add
repz
add
div
add
clc
testl
incl
stos
sahf
sahf
mov
int
mov
mov
mov
popl
cmpsb
or
cmovns
or
add
add
add
add
add
or
popl
lods
cmp
push
cs
das
das
das
das
cmp
aaa
cmp
cmp
popl
mov
orb
push
jge
sub
arpl
outsb
je
jle
addl
dec
dec
pusha
and
dec
pusha
addr16
je
jle
addl
jp
pop
sub
pusha
arpl
outsb
jbe
jle
adc
and
pop
sbb
sub
pusha
outsb
outsb
je
jle
adc
inc
push
adc
adc
sbb
sub
arpl
outsb
je
jle
or
push
adc
adc
sbb
sub
arpl
outsb
jbe
jle
iret
sahf
add
xchg
pop
inc
push
adc
adc
sub
arpl
outsb
jbe
jle
lret
rclb
pop
sbb
sub
arpl
outsb
jno
jle
lret
rclb
adc
pop
sub
pusha
arpl
outsb
jbe
jle
popl
nop
pop
imul
pop
adc
sub
pusha
outsb
outsb
jbe
jle
sahf
add
js
push
push
inc
and
pop
sbb
sub
arpl
outsb
jno
jle
popl
lret
push
imul
pop
pop
sub
sub
arpl
outsb
jbe
mov
aas
pop
pop
insb
pop
inc
inc
and
and
daa
sub
fs
outsb
je
mov
lret
xor
push
push
ja
nop
xchg
xchg
xchg
cltd
lcall
lret
ror
rol
mov
int3
rcl
mov
add
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
sub
add
adc
add
sub
add
add
or
add
add
nop
add
add
add
add
add
add
add
add
ss
cmp
add
or
js
push
add
adc
jl
pop
add
sbb
jl
jbe
nop
cmp
add
dec
push
add
adc
mov
sbb
cmpsl
push
adc
mov
pop
add
inc
sub
orl
test
add
dec
xor
xchg
add
push
xor
add
push
cmp
mov
add
push
and
mov
pop
sub
mov
das
add
pusha
cmp
mov
add
addr16
add
push
cmp
mov
imul
add
jb
add
push
sbb
les
add
pop
and
add
pusha
sub
shlb
add
bound
shll
add
push
das
add
imul
add
jo
add
xor
shrl
int3
push
add
outsb
aaa
add
outsl
ss
imul
shrl
shrb
add
jb
add
jb
add
jne
add
jo
add
jo
add
jae
add
jbe
add
jp
add
jns
add
jnp
add
jne
add
jne
add
jnp
add
jl
add
jle
add
inc
add
insb
inc
add
insl
inc
add
jns
add
jnp
add
jns
add
jl
add
ja
pushl
sub
in
aas
add
mov
add
cltd
insb
add
orb
orb
test
faddl
dec
add
test
lds
push
add
mov
push
add
nop
pop
add
xchg
pop
add
xchg
pop
add
test
xchg
loopne
dec
add
lea
jmp
dec
add
xchg
push
add
xchg
pop
add
xchg
pop
add
cltd
pop
add
cwtl
pop
add
sahf
pop
add
pushf
pop
add
sahf
addr16
fwait
bound
jmp
mov
popa
add
mov
gs
test
add
stos
imul
stos
insb
add
mov
add
aas
testl
test
xchg
add
fwait
add
lods
cwtl
add
mov
add
mov
add
mov
add
mov
mov
rol
mov
rol
mov
add
ror
add
fcom
add
fcmovnbe
add
loope
add
out
add
out
add
incl
xchg
lcall
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xor
arpl
add
add
add
add
add
add
xchg
xchg
or
xor
add
add
add
add
add
add
xchg
xchg
xchg
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
add
cmpl
push
push
fs
addb
xchg
add
or
cmp
jnp
addb
add
cmp
jnp
addb
add
cmp
jnp
addb
pop
pop
adc
cmp
jnp
addb
adc
and
cmp
cmp
jnp
addb
adc
and
push
push
js
jle
addl
inc
dec
dec
dec
dec
push
insb
jns
jge
addl
inc
inc
cmp
dec
insl
jb
jbe
test
xchg
sbb
cs
inc
inc
inc
inc
inc
inc
pop
push
jo
je
cwtl
xchg
sbb
pop
pop
pop
pop
pop
sub
xor
outsb
outsl
push
cwtl
xchg
sbb
sbb
sbb
adc
adc
adc
sbb
and
push
lcall
xchg
xchg
xchg
lcall
mov
add
add
push
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
cmp
add
add
xor
add
inc
pop
add
push
adc
xchg
dec
and
xchg
push
add
push
sub
cwtl
pop
das
add
arpl
add
gs
add
jge
add
outsl
and
enter
shrl
add
imul
enter
into
jae
add
jo
add
jno
add
jb
add
jne
add
js
add
js
add
jns
add
jnp
add
jnp
add
jg
add
outsb
inc
add
jne
add
je
add
jle
add
ja
add
jp
add
jbe
add
ja
add
jbe
add
jne
add
jbe
add
jl
add
jns
add
jle
add
ja
add
jl
add
jns
add
jle
add
ja
pushl
sub
decl
pusha
add
nop
imul
roll
add
addl
mov
les
push
add
mov
fimull
pop
add
cwtl
pop
add
addl
call
push
add
xchg
push
add
xchg
push
add
xchg
pop
add
lcall
icebp
pushf
pop
add
sahf
addr16
xchg
insb
add
lcall
out
lahf
pusha
add
mov
bound
repnz
data16
test
add
mov
add
aas
testl
test
xchg
add
mov
add
mov
add
mov
movsl
add
mov
mov
ret
rol
mov
add
lret
mov
add
ror
add
ror
add
xlat
iret
add
fcmovbe
add
fcmovnbe
add
fstp
add
loope
add
jecxz
add
in
add
in
add
incl
push
jo
js
jge
js
outsl
insb
insb
insb
insb
insb
push
adc
add
add
add
add
insb
push
inc
inc
pushw
add
add
add
add
add
fs
inc
addr16
push
inc
fs
pop
sbb
pop
popa
arpl
push
or
and
push
push
pop
popa
arpl
push
adc
sbb
pop
pop
popa
pop
insb
push
sub
sbb
and
dec
push
push
pop
pusha
pop
insb
push
sub
ss
dec
dec
dec
push
inc
insb
push
sub
xor
dec
dec
dec
inc
insb
push
xor
sub
cmp
insb
push
push
push
or
or
or
adc
daa
daa
sub
push
push
jno
jp
jnp
je
outsl
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
andb
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
cltd
xchg
mov
mov
mov
mov
iret
lret
mov
mov
loope
fcmovbe
out
loop
jmp
call
ljmp
in
jmp
out
jmp
in
aad
lret
rcl
shll
mov
mov
mov
cmpsl
xchg
test
cmpsl
xchg
xorl
xchg
subl
mov
xchg
jge
lahf
nop
jl
popf
jp
pushf
lea
lcall
cmpsb
xchg
mov
xchg
xchg
xchg
test
xchg
subl
subb
outsl
pop
addb
add
add
add
mov
mov
mov
scas
movsb
inc
mov
inc
mov
mov
rol
sar
iret
leave
sar
in
ljmp
push
in
jmp
lock
jmp
out
jmp
jmp
in
out
loope
xlat
iret
call
int
call
mov
inc
mov
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
std
mov
lahf
add
add
add
add
mov
mov
mov
cwtl
call
test
call
test
pushf
call
mov
call
mov
call
mov
fdivs
scas
fstpt
faddp
mov
ffreep
mov
jmp
leave
sar
lret
ret
jmp
into
jmp
ror
jmp
ror
jmp
fcom
jmp
aam
in
out
out
loope
push
jecxz
push
in
push
out
push
jmp
call
push
out
in
push
icebp
out
clc
repz
stc
hlt
repz
cli
div
sti
clc
idiv
cld
stc
clc
std
sti
cli
std
cld
sti
std
std
mov
subb
add
sub
add
add
mov
dec
lahf
nop
cmp
xor
lcall
addl
jmp
pushl
dec
and
push
cs
push
das
sbb
push
xor
push
xor
call
push
call
pop
call
and
push
xor
call
and
push
ss
push
ss
push
aaa
and
push
cmp
call
call
call
daa
call
sub
push
cmp
call
sub
push
cmp
sub
push
ds
push
aas
sub
push
aas
sub
push
inc
sub
push
inc
sub
call
call
call
cs
std
cld
cld
mov
subl
add
add
add
mov
xchg
mov
lret
aas
sub
ljmp
or
lea
call
mov
ljmp
jmp
leave
ljmp
sub
jg
or
push
aaa
sub
dec
cs
decl
and
dec
xor
decl
decl
decl
decl
and
dec
xor
decl
and
dec
xor
decl
decl
daa
decl
daa
decl
sub
dec
cmp
decl
sub
dec
cmp
call
sub
push
cmp
call
sub
push
cmp
call
sub
push
cmp
sub
call
call
call
das
call
das
call
das
std
sti
cli
mov
test
add
add
add
add
mov
mov
dec
fwait
mov
push
ds
imul
adcb
aad
imul
popf
test
arpl
jnp
ud0
lcall
xor
jmp
aaa
jmp
aaa
jmp
cmp
bound
jmp
cmp
arpl
jmp
cmp
arpl
jmp
cmp
fs
cmp
fs
cmp
jmp
jmp
aas
jmp
aas
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
cld
cli
stc
mov
xchg
add
add
add
add
mov
mov
dec
cltd
mov
nop
js
incl
imul
sub
test
inc
jge
decl
jg
lcall
jg
lcall
jo
pushf
xorl
popf
xorb
xorl
xorl
test
test
test
sahf
xchg
lahf
xchg
lahf
xchg
lahf
mov
lahf
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
stc
idiv
mov
mov
add
add
add
add
mov
mov
xchg
lods
xchg
mov
mov
mov
jge
jmp
mov
mov
stos
xchg
decl
popf
mov
fwait
mov
mov
popf
mov
mov
sahf
mov
mov
lahf
mov
mov
xchg
mov
mov
xchg
mov
movsb
xchg
mov
movsl
xchg
mov
cmpsb
xchg
mov
cmpsl
xchg
mov
test
mov
test
cltd
mov
stos
lcall
stos
fwait
sti
div
mov
mov
add
add
add
add
mov
mov
test
mov
sub
ljmp
mov
shlb
jo
mov
and
fldt
fsubrl
fisubrs
fbstp
jmp
je
jmp
jbe
jmp
jns
jmp
jnp
jmp
jle
jmp
cmpb
out
inc
jmp
test
mov
jmp
lea
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
pop
push
lcall
repnz
pop
push
mov
push
movsb
fs
cmpsb
push
test
push
test
push
imull
cli
div
mov
mov
add
sub
add
add
scas
lahf
mov
mov
cmp
mov
pop
and
into
pop
and
aad
and
fldenv
fisubl
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jge
jmp
cmpb
out
inc
jmp
test
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
push
out
lcall
icebp
sahf
pop
push
mov
push
movsb
arpl
hlt
movsl
gs
cmpsl
addr16
test
push
imull
insl
stc
hlt
repz
mov
lea
add
add
add
add
ret
mov
mov
jg
mov
cmp
mov
pop
and
call
pusha
and
fsubs
fldenv
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
jne
jmp
ja
jmp
jp
jmp
jl
jmp
jg
jmp
addl
out
inc
call
mov
ljmp
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
popf
pop
push
lahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsb
push
test
push
stos
imul
imull
mov
lea
add
add
add
add
les
mov
mov
bound
inc
pop
sub
into
pusha
and
aad
and
fsubs
fldenv
fisubl
fldt
fsubrl
fisubrs
fbstp
jmp
je
jmp
jbe
jmp
jns
jmp
jnp
jmp
jle
jmp
cmpb
out
inc
jmp
test
mov
jmp
lea
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
pop
push
lcall
repnz
pop
push
mov
push
movsb
fs
cmpsb
push
test
push
test
push
imull
mov
jp
add
add
add
add
lds
mov
mov
addr16
bound
dec
popa
es
bound
fsubs
fldenv
fisubl
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jge
jmp
cmpb
out
inc
jmp
test
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
push
out
lcall
icebp
sahf
pop
push
mov
push
movsb
arpl
hlt
movsl
gs
cmpsl
addr16
test
push
imull
out
mov
nop
jp
add
add
add
add
mov
mov
mov
imul
enter
shlb
call
arpl
fsubs
fldenv
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
jne
jmp
ja
jmp
jp
jmp
jl
jmp
jg
jmp
addl
out
inc
call
mov
ljmp
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
popf
pop
push
lahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsb
push
test
push
stos
imul
imul
in
mov
nop
jl
add
add
add
add
leave
mov
ret
mov
mov
jo
dec
imul
shll
call
gs
fsubs
fsubs
fldenv
fisubl
fldt
fsubrl
fisubrs
fbstp
jmp
je
jmp
jbe
jmp
jns
jmp
jnp
jmp
jle
jmp
cmpb
out
inc
jmp
test
mov
jmp
lea
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
pop
push
lcall
repnz
pop
push
mov
push
movsb
fs
cmpsb
push
test
push
test
push
cmc
in
ljmp
xchg
jge
add
add
add
add
lret
mov
mov
ja
inc
je
dec
jo
call
push
call
addr16
fsubs
fldenv
fldenv
fisubl
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jge
jmp
cmpb
out
inc
jmp
test
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
push
out
lcall
icebp
sahf
pop
push
mov
push
movsb
arpl
hlt
movsl
gs
cmpsl
addr16
test
push
hlt
jmp
inc
mov
jmp
add
sub
add
add
mov
mov
jns
inc
ja
dec
je
call
outsl
cmp
xlat
imul
fldenv
fsubs
fsubs
fldenv
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
jne
jmp
ja
jmp
jp
jmp
jl
jmp
jg
jmp
addl
out
inc
call
mov
ljmp
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
popf
pop
push
lahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsb
push
test
push
stos
imul
shlb
scas
add
add
add
add
into
shlb
mov
jp
inc
jp
dec
js
call
jb
fsubrs
fldcw
fldenv
fldenv
fldenv
fisubl
fldt
fsubrl
fisubrs
fbstp
jmp
je
jmp
jbe
jmp
jns
jmp
jnp
jmp
jle
jmp
cmpb
out
inc
jmp
test
mov
jmp
lea
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
pop
push
lcall
repnz
pop
push
mov
push
movsb
fs
cmpsb
push
test
push
test
in
shlb
scas
add
add
add
add
iret
ret
ror
mov
jl
dec
jl
call
jnp
call
ja
fdivs
fisubrl
fldcw
fldenv
fisubl
fisubl
fisubrl
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jge
jmp
cmpb
out
inc
jmp
test
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
push
out
lcall
icebp
sahf
pop
push
mov
push
movsb
arpl
hlt
movsl
gs
cmpsl
addr16
test
loop
shlb
scas
add
add
add
add
rol
mov
fcom
int
mov
jl
dec
jle
call
jle
call
jnp
fidivl
fisubrl
fldenv
fldenv
fldenv
fisubrl
fldt
fsubrl
fidivs
fbstp
jmp
jne
jmp
ja
jmp
jp
jmp
jl
jmp
jg
jmp
addl
out
inc
call
mov
ljmp
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
popf
pop
push
lahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsb
push
test
push
in
inc
mov
jmp
add
sub
add
add
mov
mov
jnp
dec
jle
call
adcb
jg
fstpt
fdivl
fisubrl
fisubrl
fldcw
fisubl
fisubl
fldt
fsubrl
fisubrs
fbstp
jmp
je
jmp
jbe
jmp
jns
jmp
jnp
jmp
jle
jmp
cmpb
out
inc
jmp
test
mov
jmp
lea
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
pop
push
lcall
repnz
pop
push
mov
push
movsb
fs
cmpsb
push
test
push
loop
inc
mov
jmp
add
sub
add
add
mov
mov
jnp
dec
jg
call
adcl
fdivrl
fnstsw
fisubrl
fisubrl
fisubrl
fisubrl
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jge
jmp
cmpb
out
inc
jmp
test
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
push
out
lcall
icebp
sahf
pop
push
mov
push
movsb
arpl
hlt
movsl
gs
cmpsl
addr16
out
loopne
inc
mov
jmp
add
add
add
aad
mov
mov
jnp
dec
jg
call
sbbb
test
fldl
dec
fnstsw
fdivl
fisubrl
fisubrl
fisubrl
fldt
fldt
fsubrl
fidivs
fbstp
jmp
jne
jmp
ja
jmp
jp
jmp
jl
jmp
jg
jmp
addl
out
inc
call
mov
ljmp
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
popf
pop
push
lahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsb
data16
in
fcompp
inc
mov
jmp
add
add
add
lret
fstp
aad
mov
fs
jp
dec
jg
call
sbbb
test
fldl
dec
fidivrs
fdivl
fisubrl
fisubrl
fldt
fldt
fsubrl
fisubrs
fbstp
jmp
je
jmp
jbe
jmp
jns
jmp
jnp
jmp
jle
jmp
cmpb
out
inc
jmp
test
mov
jmp
lea
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
pop
push
lcall
repnz
pop
push
mov
push
movsb
fs
cmpsb
data16
in
mov
xchg
jle
add
add
add
add
lret
mov
pushl
jns
dec
jle
call
sbbb
test
fiadds
push
fiadds
inc
fdivl
fsubrl
fldt
fldt
fldt
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jge
jmp
cmpb
out
inc
jmp
test
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
push
out
lcall
icebp
sahf
pop
push
mov
push
movsb
arpl
hlt
movsl
gs
jmp
aad
mov
xchg
jle
add
add
add
add
fmul
mov
pushl
ja
dec
jge
call
sbbl
xchg
fisttps
push
filds
fnstsw
fdivl
fldt
fldt
fldt
fsubrl
fsubrl
fidivs
fbstp
jmp
jne
jmp
ja
jmp
jp
jmp
jl
jmp
jg
jmp
addl
out
inc
call
mov
ljmp
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
popf
pop
push
lahf
pop
push
mov
arpl
hlt
movsl
gs
ljmp
jmp
add
add
add
fxch
shrb
je
mov
jl
call
sbbb
xchg
fimuls
pop
jmp
xchg
loopne
push
fidivrs
fnstsw
fdivl
fsubrl
fsubrl
fsubrl
fidivs
fbstp
jmp
je
jmp
jbe
jmp
jns
jmp
jnp
jmp
jle
jmp
cmpb
out
inc
jmp
test
mov
jmp
lea
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
pop
push
lcall
repnz
pop
push
mov
push
movsb
fs
jmp
mov
jmp
add
sub
add
add
into
shlb
jae
mov
jnp
call
adcl
fimuls
pop
jmp
mov
loopne
push
filds
inc
fnsave
fnsave
fsubrl
fldt
fsubrl
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jge
jmp
cmpb
out
inc
jmp
test
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cwtl
push
out
lcall
icebp
sahf
pop
push
mov
push
movsb
arpl
call
mov
jmp
add
sub
add
add
into
shll
jb
mov
jns
call
adcb
test
fimuls
pop
jmp
mov
loope
pop
jmp
test
filds
inc
fnsave
fdivl
fdivl
fsubrl
fnsave
fidivs
fbstp
jmp
jne
jmp
ja
jmp
jp
jmp
jl
jmp
jg
jmp
addl
out
inc
call
mov
ljmp
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
popf
pop
push
lahf
pop
push
mov
arpl
out
lret
mov
jnp
add
add
add
add
fcmove
ret
loopne
pushl
push
inc
jbe
dec
jle
call
sbbl
xchg
fimuls
pop
fisttps
pop
fiadds
fdivrl
fidivl
fisubrl
fisubrl
fldt
fldt
fdivl
fdivl
fnsave
fidivs
fistpll
jmp
jl
jmp
jle
jmp
addl
in
inc
jmp
mov
out
dec
jmp
lea
call
xchg
push
ljmp
in
cwtl
pop
in
fwait
pop
out
popf
pop
out
sahf
pop
out
lahf
pusha
jmp
ror
mov
jp
add
add
add
add
fcmovne
ret
loope
pushl
fs
shll
lret
jp
call
adcl
flds
pop
fimull
pop
flds
push
fdivrs
ja
call
jb
call
outsb
xor
call
insb
xor
aam
das
call
outsb
das
call
outsl
xor
aad
xor
jb
call
jne
fdivs
fnstcw
fstpt
fdivrl
fldl
inc
filds
dec
jmp
mov
mov
jecxz
push
jmp
xchg
push
jmp
xchg
push
jmp
xchg
push
jmp
xchg
pop
jmp
cwtl
pop
call
into
mov
mov
add
add
add
add
ret
movsb
in
loopne
mov
push
pushl
imul
dec
jge
call
adcl
roll
pop
call
test
roll
call
jge
dec
js
dec
jae
dec
outsb
cmp
lret
dec
imul
dec
push
cs
imul
int3
insl
xor
int
xor
into
jo
dec
jae
dec
jne
call
js
call
jns
call
jl
call
jle
call
addb
orb
test
xlat
xchg
mov
push
fimull
push
fcoml
mov
lea
add
add
add
add
ret
mov
mov
push
ljmp
arpl
mov
ja
inc
jl
dec
jg
dec
sbbb
sbbl
lret
dec
jg
dec
jge
inc
jns
inc
jae
inc
outsb
aas
inc
push
mov
fs
mov
arpl
mov
fs
mov
push
xor
shrl
outsb
cmp
ret
jo
inc
jae
inc
je
inc
ja
inc
jns
inc
jp
dec
jge
dec
jle
dec
orb
orb
dec
dec
xchg
int3
mov
loop
sar
scas
movsb
jmp
add
sub
add
add
rol
mov
mov
push
jmp
pop
xor
mov
aas
mov
ja
inc
jnp
inc
jl
inc
jle
inc
jg
inc
jle
inc
jle
inc
jl
inc
jns
mov
outsl
inc
mov
gs
pushl
pusha
pushl
pop
sub
mov
sub
mov
sub
pushl
data16
mov
xor
mov
imul
mov
outsl
cmp
mov
jae
mov
ja
mov
jnp
mov
jle
inc
jg
jmp
mov
jmp
add
sub
add
add
rol
mov
scas
imul
insb
push
pushl
outsl
pop
pushl
jb
pushl
pop
pushl
js
mov
jl
mov
subb
outsb
mov
xchg
mov
mov
ret
inc
jle
les
cmp
xchg
xchg
enter
lret
dec
sahf
dec
mov
xchg
dec
cmpsb
cwtl
call
test
call
stos
sahf
call
scas
mov
call
mov
fdivs
lods
fidivrl
mov
ffree
mov
ffreep
mov
mov
mov
add
add
add
add
les
out
jecxz
out
jecxz
out
loop
out
loope
in
loopne
in
in
fdivrp
loop
loope
loope
fcos
fdivr
fcompp
fstp
aad
sar
fcmovbe
sar
into
call
ror
call
iret
leave
call
int3
call
lret
call
lret
call
int
call
iret
lret
ror
fst
sar
loop
fdivr
out
fdivrp
jmp
jecxz
out
jmp
push
in
in
push
lock
push
out
in
push
in
ljmp
loop
jmp
fcmovnbe
fcmovnbe
into
call
lret
ret
mov
inc
mov
mov
stos
mov
mov
add
add
fcmovne
ret
iret
ret
rol
mov
fcmovnbe
ret
movsb
fcmove
ret
into
shll
int3
mov
test
lret
aad
mov
stos
rol
mov
lods
iret
ret
int
mov
lret
mov
lods
mov
mov
cmpsl
mov
mov
mov
mov
mov
mov
mov
iret
ret
aam
rcl
ror
fsub
fcom
in
out
ljmp
jmp
repnz
jmp
lock
jmp
out
call
fcmovbe
out
ror
loopne
lds
aam
scas
mov
leave
lods
xchg
test
movsl
mov
sahf
mov
add
or
add
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
inc
sbb
add
incl
incl
incl
decl
incl
incl
add
add
add
add
jp
jp
inc
inc
inc
adc
and
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
or
or
push
push
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sbb
mov
xchg
mov
pop
mov
scas
mov
aam
enter
aam
jecxz
call
out
in
call
repnz
call
in
out
rcr
xlat
into
ret
ret
mov
mov
mov
test
cmpsl
cwtl
test
movsl
xchg
subl
jg
mov
nop
jnp
pushf
lea
lcall
movsb
xchg
xchg
xchg
test
xchg
subb
subb
jae
mov
add
sub
movsb
inc
mov
mov
mov
inc
mov
dec
mov
mov
jmp
fcmovbe
call
jmp
jmp
lock
jmp
in
ljmp
jecxz
sar
into
enter
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
decl
add
sub
mov
incl
cmp
pop
inc
cmp
cltd
addr16
ja
pop
jmp
pushl
pop
cmp
dec
inc
inc
decl
inc
decl
inc
decl
inc
call
inc
call
inc
call
inc
call
dec
call
dec
call
dec
call
dec
call
dec
call
call
call
dec
call
push
call
push
call
push
call
push
call
push
call
push
lcall
push
lcall
push
lcall
push
lcall
push
lcall
pop
lcall
pop
mov
subb
add
sub
mov
decl
cmp
push
pop
add
insb
ret
and
ljmp
sub
jg
pop
call
decl
pop
decl
and
dec
xor
decl
decl
decl
decl
and
dec
xor
decl
and
decl
decl
daa
decl
sub
dec
cmp
decl
sub
push
cmp
call
sub
push
cmp
call
sub
push
cmp
call
sub
call
call
call
das
call
das
std
cld
mov
subl
add
sub
mov
lcall
arpl
jg
push
ljmp
xchg
int3
call
test
inc
jge
decl
jle
lcall
jg
lcall
jo
pushf
xorl
popf
xorl
xorl
test
test
sahf
xchg
lahf
xchg
lahf
xchg
lahf
mov
lahf
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
std
sti
sti
mov
test
add
add
mov
mov
pushl
insl
pop
mov
jp
mov
stos
xchg
decl
mov
mov
mov
mov
pushf
mov
mov
popf
mov
lahf
mov
mov
xchg
mov
mov
xchg
mov
movsl
xchg
mov
cmpsb
xchg
mov
cmpsl
xchg
mov
test
mov
test
lcall
stos
fwait
cld
cli
stc
mov
xchg
add
add
mov
mov
sahf
pushl
push
es
mov
pushl
pop
and
fisubl
fldt
fsubrl
fidivs
jmp
je
jmp
ja
jmp
jp
jmp
jge
jmp
cmpb
out
inc
jmp
xchg
call
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
push
lcall
repnz
pop
push
mov
arpl
cmc
cmpsb
gs
test
push
test
imul
lods
insl
sti
clc
idiv
mov
mov
add
add
shll
call
lods
sahf
mov
bound
inc
popa
sub
iret
popa
and
fldenv
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
jns
jmp
jl
jmp
jg
jmp
addb
test
mov
jmp
mov
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
pushf
pop
push
sahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsl
addr16
test
imul
lods
insb
cli
div
mov
mov
add
add
les
mov
mov
addr16
dec
arpl
call
fs
fldenv
fisubrl
fldt
fsubrl
fisubrs
fbstp
jmp
jne
jmp
js
jmp
jnp
jmp
jle
jmp
addl
call
mov
ljmp
in
xchg
push
out
xchg
push
out
cwtl
pop
push
fwait
pop
push
popf
pop
push
mov
push
movsb
fs
cmpsb
push
test
push
stos
push
imull
mov
lea
add
add
mov
mov
ret
mov
mov
imul
shlb
call
gs
fisubl
fisubl
fldt
fsubrl
fbstp
jmp
je
jmp
ja
jmp
jp
jmp
jge
jmp
cmpb
out
inc
jmp
xchg
jmp
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
push
lcall
repnz
pop
push
mov
arpl
cmc
cmpsb
push
test
push
stos
imul
stc
repz
mov
jns
add
add
enter
into
mov
mov
outsl
inc
dec
imul
shrl
call
data16
fldenv
fldenv
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
jns
jmp
jl
jmp
jg
jmp
addb
test
mov
jmp
mov
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
pushf
pop
push
sahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsl
addr16
test
imul
icebp
out
mov
jnp
add
add
lret
mov
leave
ret
call
stos
popf
mov
jae
dec
outsl
notrack
insb
xor
xlat
imul
fisubl
fisubrl
fldt
fisubrs
fbstp
jmp
jne
jmp
js
jmp
jnp
jmp
jle
jmp
addl
call
mov
ljmp
in
xchg
push
out
xchg
push
out
cwtl
pop
push
fwait
pop
push
sahf
pop
push
mov
push
movsl
fs
cmpsl
push
test
push
stos
push
imul
in
mov
xchg
jl
add
add
int3
mov
call
test
push
inc
ja
dec
je
call
jo
fsubrs
fisubrl
fisubrl
fldt
fldt
fsubrl
fbstp
jmp
je
jmp
ja
jmp
jp
jmp
jge
jmp
cmpb
out
inc
jmp
xchg
jmp
mov
dec
in
xchg
push
in
xchg
push
out
cwtl
push
push
lcall
repnz
pop
push
mov
fs
cmpsb
push
test
push
stos
push
cmc
in
ljmp
xchg
jle
add
add
into
shll
shrb
push
inc
jp
dec
jns
call
jne
fdivs
fisubrl
fisubrl
fldt
fldt
fsubrl
fidivs
fbstp
jmp
jbe
jmp
jns
jmp
jl
jmp
jg
jmp
addb
test
call
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
pushf
pop
push
lahf
pop
push
mov
arpl
hlt
movsl
gs
cmpsl
addr16
test
out
shlb
lods
add
add
rol
mov
xlat
ror
dec
cmpsl
cwtl
inc
jnp
dec
jl
call
jl
call
jns
fidivl
fisubrl
fisubrl
fldt
fldt
fidivs
fbstp
jmp
jne
jmp
js
jmp
jnp
jmp
jle
jmp
addl
call
mov
ljmp
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
sahf
pop
push
mov
push
movsl
fs
cmpsl
push
test
in
shlb
scas
add
add
rol
mov
fcom
into
dec
movsb
xchg
inc
jl
dec
jle
call
jg
call
jge
fstpt
fdivl
fldt
fldt
fldt
fsubrl
fsubrl
fnsave
fbstp
jmp
jne
jmp
ja
jmp
jnp
jmp
jle
jmp
addl
out
inc
jmp
lea
dec
in
xchg
push
out
xchg
push
out
cwtl
push
push
lcall
repnz
pop
push
mov
fs
cmpsb
push
test
push
out
inc
mov
jmp
add
rol
mov
dec
movsb
xchg
inc
jl
dec
jg
call
adcl
fdivrl
fidivrs
fdivl
fsubrl
fsubrl
fsubrl
fidivs
jmp
je
jmp
ja
jmp
jp
jmp
jge
jmp
cmpb
out
inc
jmp
xchg
call
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
out
lcall
repnz
pop
push
mov
arpl
hlt
movsl
gs
cmpsl
addr16
in
inc
mov
jmp
add
aam
mov
dec
mov
push
dec
jg
call
adcb
adcl
adcl
fnsave
fdivl
fldt
fldt
fidivs
fbstp
loopne
xor
loop
aaa
jmp
jl
jmp
jg
jmp
addb
test
mov
jmp
mov
in
nop
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
fwait
pop
push
sahf
pop
push
mov
push
movsl
gs
cmpsl
addr16
out
loope
inc
mov
jmp
add
sub
lret
fstp
aad
int3
mov
push
dec
jg
call
sbbl
test
fiadds
fidivrs
fnsave
fdivl
fsubrl
fsubrl
fidivs
fbstp
jmp
jbe
jmp
js
jmp
jnp
jmp
jle
jmp
addl
call
mov
ljmp
in
xchg
push
out
xchg
push
out
cwtl
push
push
fwait
pop
push
popf
pop
push
mov
push
movsb
fs
cmpsb
data16
out
inc
mov
jmp
add
sub
lret
mov
dec
popf
mov
sarl
leave
jg
call
sbbl
xchg
fiadds
push
fistpll
fidivrs
fnsave
fnsave
fnsave
fidivs
fidivs
jmp
jne
jmp
ja
jmp
jp
jmp
jge
jmp
cmpb
out
inc
jmp
xchg
call
mov
jmp
dec
in
xchg
push
in
xchg
push
out
xchg
push
push
lcall
repnz
pop
push
mov
arpl
hlt
cmpsb
gs
in
mov
xchg
xorb
int3
mov
dec
fwait
mov
sarl
leave
jg
call
sbbl
xchg
fimuls
push
jmp
test
fistpll
fidivrs
fnsave
fnsave
fidivs
fidivs
fbstp
fbstp
loopne
ss
jns
jmp
jl
jmp
jg
jmp
addb
test
mov
jmp
mov
in
xchg
push
in
xchg
push
out
xchg
push
out
cltd
pop
push
pushf
pop
push
sahf
pop
push
mov
push
movsl
gs
jmp
aam
mov
xchg
jg
add
add
fmul
shlb
xchg
xchg
sarb
enter
rolb
pop
fisttps
pop
jmp
xchg
loopne
push
fistpll
fidivrs
fnsave
fnsave
fnsave
fbstp
fbstp
loopne
ss
jns
jmp
jnp
jmp
jle
jmp
addl
call
mov
ljmp
in
xchg
push
out
xchg
push
out
cwtl
pop
push
fwait
pop
push
popf
pop
push
mov
push
movsb
fs
ljmp
jmp
add
sub
int
movsl
loop
lds
inc
jl
call
adcl
fmull
pop
fisttps
push
fiadds
inc
fdivl
fdivl
fdivl
fdivl
fnsave
fidivrs
fistpll
jmp
jle
jmp
addl
in
inc
jmp
mov
out
dec
call
xchg
push
ljmp
in
lcall
out
sahf
pop
push
mov
into
mov
xchg
jle
add
add
fcmove
shll
jge
mov
jp
dec
jg
call
test
flds
pop
fiaddl
pop
flds
dec
call
jp
call
jbe
call
jb
call
jo
call
jo
call
jno
call
jb
call
je
fdivs
fnstcw
fstpt
fdivrl
fldl
inc
jmp
xchg
loope
dec
jmp
lea
jecxz
push
jmp
xchg
push
jmp
xchg
push
jmp
xchg
pop
jmp
cltd
pop
call
ror
mov
nop
jl
add
add
fcmove
ret
loop
inc
mov
mov
jbe
dec
jl
dec
sbbl
roll
pop
call
test
roll
push
call
jnp
dec
jbe
dec
jb
dec
outsb
cmp
int3
insl
xor
dec
insl
xor
int
xor
into
jo
dec
jae
dec
jne
call
js
call
jp
call
jge
call
addb
orb
test
fmuls
push
fistl
pop
jmp
iret
enter
cmpsb
jmp
add
sub
iret
shll
xorl
addr16
mov
jns
inc
jl
dec
jg
dec
sbbb
sbbl
lret
dec
jg
inc
jp
inc
jbe
inc
jno
inc
imul
mov
addr16
mov
addr16
shrb
mov
insl
ss
outsb
cmp
ret
jno
inc
je
inc
jbe
inc
jns
inc
jnp
dec
jle
dec
jg
dec
orb
dec
dec
xchg
int
push
jmp
int3
mov
mov
add
add
fcmovnbe
ret
in
mov
popa
cmp
mov
inc
mov
jns
inc
jl
inc
jge
inc
jg
inc
jg
inc
jg
inc
jge
inc
jl
mov
jb
mov
imul
pushl
arpl
pushl
fs
mov
xor
mov
xor
mov
insb
cmp
mov
jno
mov
jbe
mov
jp
mov
jle
inc
orb
sar
scas
movsl
jmp
add
sub
rol
mov
mov
mov
mov
lds
xchg
leave
fwait
mov
lret
sahf
dec
lahf
nop
dec
mov
xchg
dec
mov
xchg
dec
mov
nop
dec
popf
dec
lcall
enter
enter
leave
cltd
mov
leave
fwait
mov
lret
dec
mov
xchg
dec
cmpsb
cwtl
call
test
mov
call
mov
fdivs
scas
fdivrl
mov
ffreep
mov
mov
mov
add
add
ret
out
std
out
jecxz
out
loop
out
loope
in
loopne
in
in
fdivrp
jecxz
fdivr
loope
loopne
fcos
xlat
aad
sar
fcmovbe
sar
fcom
int
iret
lret
call
iret
lret
fcom
int3
fcmovbe
into
fst
sar
loope
fdivr
out
fdivrp
jmp
in
out
in
ljmp
lock
push
out
in
in
jmp
loope
fcmovbe
int3
call
mov
inc
mov
mov
lods
mov
mov
add
sbb
iret
shll
ret
iret
shll
into
shlb
int
movsl
xlat
int3
mov
cmpsl
aad
mov
test
rol
mov
into
shll
mov
stos
mov
mov
scas
mov
aam
mov
shl
fcom
fsub
loopne
in
out
ljmp
in
icebp
repnz
jmp
out
ljmp
loope
shl
fmul
fmulp
shlb
mov
xchg
lret
test
movsb
lea
mov
mov
add
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
movsl
fwait
pushl
mov
dec
mov
enter
ljmp
out
in
ljmp
fcmovbe
into
call
enter
mov
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
add
mov
test
fwait
call
test
call
stos
sahf
call
scas
mov
fdivs
mov
fdivrl
mov
jmp
lret
in
vcvtpd2dq
lret
aad
ljmp
out
out
loop
push
in
push
call
call
push
icebp
out
stc
repz
cli
div
sti
clc
idiv
cld
cli
stc
std
cld
cld
mov
add
add
popf
incl
insl
das
call
cwtl
or
in
add
rorb
incl
sbb
dec
sub
decl
sbb
decl
pop
decl
and
dec
xor
decl
and
dec
xor
decl
and
dec
xor
decl
and
decl
decl
decl
sub
dec
cmp
decl
sub
dec
cmp
decl
sub
dec
cmp
std
cli
cli
mov
add
add
mov
movsl
xchg
mov
mov
mov
mov
jge
call
sub
push
cmp
push
cmp
call
lcall
lcall
das
lcall
xor
pop
inc
xor
pop
inc
xor
pop
inc
xor
pop
inc
xor
pop
inc
xor
lcall
lcall
aaa
lcall
lcall
lcall
lcall
lcall
cmp
pop
dec
cmp
cld
stc
clc
mov
add
add
xchg
xchg
mov
popf
inc
mov
incl
loope
and
sbb
mov
lcall
jge
lcall
jg
lcall
subb
xorb
xorb
xorl
test
pushf
test
xchg
popf
xchg
popf
mov
popf
mov
popf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
lahf
mov
sti
div
mov
add
add
mov
inc
xchg
cmp
cltd
mov
mov
gs
nop
cmp
roll
shlb
mov
cltd
xchg
mov
fwait
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
movsb
xchg
mov
cmpsb
xchg
mov
cmpsl
xchg
mov
test
cltd
mov
cmc
repz
mov
add
add
mov
jg
mov
nop
insl
dec
fwait
jne
aad
jae
loope
pop
fisubrl
fsubrl
fbstp
jmp
jne
jmp
jns
jmp
jge
jmp
cmpb
out
inc
call
mov
jmp
dec
in
xchg
push
out
xchg
push
out
cltd
pop
push
pushf
pop
push
lahf
pop
push
mov
fs
cmpsl
addr16
test
imul
repz
mov
add
add
mov
jl
mov
push
dec
imul
shlb
call
bound
fisubl
fldt
fidivs
jmp
je
jmp
js
jmp
jnp
jmp
jg
jmp
addl
xchg
jmp
mov
in
xchg
push
in
xchg
push
out
cwtl
push
push
fwait
pop
push
sahf
pop
push
mov
arpl
cmc
cmpsb
push
test
push
stos
push
div
out
mov
add
add
mov
js
sarl
ret
jo
dec
addr16
iret
bound
call
bound
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
ja
jmp
jp
jmp
jle
jmp
addb
test
mov
ljmp
in
xchg
push
out
xchg
push
push
lcall
repnz
arpl
hlt
movsl
gs
test
push
stos
push
imul
jmp
mov
add
add
sarb
sarl
lds
dec
insl
cmp
shll
call
fs
fldt
fsubrl
fbstp
jmp
jbe
jmp
jns
jmp
jge
jmp
addl
call
mov
jmp
dec
in
xchg
push
out
xchg
push
out
cltd
pop
push
pushf
pop
push
lahf
pop
push
mov
fs
cmpsl
addr16
test
jmp
incl
add
add
ret
mov
inc
jnp
inc
jnp
dec
jae
call
imul
xlat
sub
fisubl
fisubrl
fsubrl
fidivs
jmp
je
jmp
js
jmp
jl
jmp
jg
jmp
addl
xchg
jmp
mov
in
xchg
push
in
xchg
push
out
cwtl
pop
push
fwait
pop
push
sahf
pop
push
mov
fs
cmpsb
push
test
out
mov
add
add
mov
jl
dec
jle
dec
jns
call
jno
call
imul
fisubl
fldt
fsubrl
fidivs
fbstp
jmp
ja
jmp
jnp
jmp
jle
jmp
addb
xchg
jmp
lea
nop
push
in
xchg
push
out
xchg
push
push
lcall
repnz
arpl
hlt
cmpsb
gs
test
push
out
mov
add
add
mov
inc
jl
dec
jg
call
jle
call
js
fnstenv
fisubrl
fisubrl
fldt
fsubrl
fbstp
jmp
jbe
jmp
jns
jmp
jge
jmp
addl
call
mov
jmp
dec
in
xchg
push
out
xchg
push
out
cltd
pop
push
pushf
pop
push
lahf
pop
push
mov
gs
cmpsl
addr16
in
mov
add
add
leave
mov
jl
dec
sbbb
adcb
jle
fidivl
fldt
fisubrl
fldt
fsubrl
fidivs
jmp
jne
jmp
js
jmp
jl
jmp
cmpb
out
inc
call
mov
jmp
dec
in
xchg
push
in
xchg
push
out
cwtl
pop
push
fwait
pop
push
sahf
pop
push
mov
fs
cmpsb
data16
out
loope
mov
add
add
lret
mov
jnp
dec
sbbb
sbbl
adcl
jle
fdivl
fldt
fldt
fldt
fidivs
jmp
je
jmp
ja
jmp
jnp
jmp
jle
jmp
addb
xchg
jmp
lea
nop
push
in
xchg
push
out
xchg
push
push
lcall
repnz
arpl
cmc
cmpsb
data16
in
fcompp
mov
add
add
int3
leave
pushl
js
dec
jg
call
sbbl
xchg
fiadds
fdivl
fldt
fsubrl
fsubrl
fidivs
fbstp
jmp
jbe
jmp
jp
jmp
jge
jmp
addl
call
mov
jmp
dec
in
xchg
push
out
xchg
push
out
cltd
pop
push
popf
pop
push
mov
push
movsl
gs
in
fcmovnbe
mov
add
add
into
lret
jbe
mov
jge
call
test
fimull
pop
jmp
orb
jp
fdivl
fsubrl
fbstp
jmp
jne
jmp
jns
jmp
jl
jmp
cmpb
out
inc
call
mov
jmp
dec
in
xchg
push
out
xchg
push
out
cwtl
pop
push
pushf
pop
push
lahf
pop
push
mov
fs
ljmp
incl
add
add
iret
int3
pushl
inc
inc
jnp
call
sbbl
xchg
fmull
push
fnstsw
fidivl
fisubrl
fldt
fldt
fdivl
fnsave
fistpll
jmp
jge
jmp
addb
test
mov
out
dec
call
xchg
push
jmp
push
in
cltd
pop
in
pushf
pop
out
sahf
pop
push
mov
iret
mov
add
add
ror
pushl
data16
les
dec
jg
call
test
fmuls
pop
flds
call
jae
call
outsb
xor
shrl
aad
das
call
outsl
xor
jo
call
je
fnstcw
fidivrl
fdivrl
fldl
inc
jmp
mov
loop
dec
jmp
push
jmp
xchg
push
jmp
xchg
pop
jmp
cwtl
pop
call
ror
mov
add
add
ror
pushl
pop
das
mov
jl
dec
sbbb
test
xchg
test
sarb
dec
ja
dec
outsl
cmp
lret
imul
lret
dec
imul
dec
jo
dec
je
call
js
call
jp
call
jle
call
addb
test
fadds
push
push
fcoml
enter
movsl
incl
add
add
ror
pushl
push
and
mov
cmp
shlb
jge
dec
sbbl
lret
dec
sbbb
jns
inc
jb
inc
imul
mov
fs
mov
data16
mov
imul
outsb
cmp
ret
jno
inc
je
inc
ja
inc
jp
dec
jge
dec
orb
orl
dec
dec
mov
in
mov
add
add
rcl
pushl
dec
sbb
scas
pop
sub
mov
jge
inc
jg
inc
sbbb
sbbb
jge
mov
outsl
inc
pushl
popa
xor
mov
pushl
pushl
addr16
mov
insl
cmp
mov
jae
mov
js
mov
jge
inc
jg
jmp
leave
sar
stos
mov
add
rcl
pushl
insl
push
pushl
jno
pushl
pusha
pushl
jnp
mov
subl
mov
mov
ret
inc
xchg
cmp
xchg
test
enter
lret
dec
mov
xchg
call
cmpsl
lcall
scas
mov
fdivs
mov
fdivrl
mov
mov
add
add
rcl
ljmp
sar
aam
sar
aam
sar
rcl
iret
call
ror
call
iret
int3
call
into
lret
int3
leave
dec
lret
dec
leave
mov
lret
les
dec
mov
fcmovbe
sar
loop
ljmp
push
out
in
out
jmp
call
fcom
call
lret
leave
mov
test
mov
cmpsl
popf
pushl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
lret
mov
cmpsl
inc
mov
dec
mov
call
mov
in
call
in
out
jmp
call
int
dec
shlb
mov
lods
inc
mov
stos
inc
mov
inc
mov
mov
mov
mov
mov
cmc
add
add
lret
ljmp
push
incl
insb
das
call
cwtl
or
in
add
mov
gs
call
inc
call
call
call
dec
call
dec
call
push
call
push
lcall
push
lcall
push
lcall
push
lcall
push
lcall
pop
call
push
std
sti
cli
mov
add
add
shlb
xchg
mov
mov
daa
in
mov
mov
nop
jle
andb
andb
andl
incl
imul
insb
pop
incl
outsb
pop
incl
popa
incl
jb
sti
clc
idiv
mov
add
add
les
jmp
mov
das
incl
das
loope
and
sbb
in
imul
ja
jmp
jl
jmp
addl
jmp
nop
dec
in
xchg
push
out
cltd
pop
push
popf
pop
push
mov
gs
test
push
stos
imul
div
mov
add
add
leave
mov
faddl
dec
dec
lea
roll
jmp
addb
jbe
jmp
jnp
jmp
cmpb
out
inc
jmp
mov
in
xchg
push
out
cwtl
push
push
pushf
pop
push
mov
arpl
cmc
cmpsl
addr16
stos
push
clc
repz
mov
add
add
int3
sar
mov
das
jmp
call
pushf
jb
fstps
fisubrs
jmp
je
jmp
jns
jmp
jle
jmp
addl
mov
ljmp
out
xchg
push
push
lcall
repz
push
test
in
mov
add
add
rol
dec
mov
cmp
fsubs
fisubrl
fldt
fldt
fbstp
jmp
ja
jmp
jl
jmp
addl
jmp
nop
dec
in
xchg
push
out
cltd
pop
push
popf
pop
push
mov
gs
test
push
in
jmp
incl
add
add
ror
dec
mov
inc
fldcw
fsubs
fldenv
fisubl
fsubrl
fidivs
jmp
jbe
jmp
jnp
jmp
cmpb
out
inc
jmp
mov
in
xchg
push
out
cwtl
push
push
pushf
pop
push
mov
arpl
cmc
cmpsl
addr16
call
test
add
int
int3
lahf
xchg
fiaddl
cmp
fsubs
fldenv
fisubl
fsubrl
fisubrs
jmp
je
jmp
jns
jmp
jle
jmp
addl
mov
ljmp
out
xchg
push
push
lcall
repz
push
in
inc
mov
incl
add
add
fnop
dec
popf
fildl
fisubrl
fsubs
fldenv
fldt
fbstp
jmp
ja
jmp
jl
jmp
addl
jmp
nop
dec
in
xchg
push
out
cltd
pop
push
popf
pop
push
mov
gs
out
loope
inc
mov
incl
add
add
fcmovnbe
dec
fwait
mov
faddl
push
fdivl
fisubrl
fisubl
fisubrl
fsubrl
fidivs
jmp
jbe
jmp
jnp
jmp
cmpb
out
inc
jmp
mov
in
xchg
push
out
cwtl
push
push
pushf
pop
push
mov
arpl
in
fstp
inc
mov
incl
add
add
fst
inc
cwtl
xchg
fildl
pop
fidivrs
fisubrl
fldt
fsubrl
fisubrs
jmp
je
jmp
jns
jmp
jle
jmp
addl
mov
ljmp
out
xchg
push
push
lcall
repz
sar
shlb
out
aad
lds
pop
jmp
mov
loopne
push
fidivrs
fldt
fldt
fbstp
jmp
ja
jmp
jl
jmp
addl
jmp
nop
dec
in
xchg
push
out
cltd
pop
push
popf
pop
push
mov
into
mov
add
add
inc
mov
fildl
pop
jmp
mov
filds
fdivl
fldt
fsubrl
fidivs
jmp
jbe
jmp
jnp
jmp
cmpb
out
inc
jmp
mov
in
xchg
push
out
cwtl
push
push
pushf
pop
push
mov
leave
mov
add
add
mov
adcb
mov
loopne
pop
jmp
mov
filds
inc
fnsave
fidivs
jmp
jne
jmp
jns
jmp
jle
jmp
addl
mov
ljmp
out
xchg
push
push
lcall
in
mov
add
add
loopne
mov
jbe
fildl
pop
fisttpll
pop
fildl
inc
fdivs
fsubrs
fnstenv
fnstsw
fistpll
jmp
addb
xchg
in
dec
jmp
xchg
push
call
cltd
pop
jmp
mov
incl
add
add
loope
pushl
outsb
pop
pushl
je
pushl
jnp
mov
xorl
mov
rorl
xchg
test
leave
lcall
into
movsb
xchg
call
test
mov
fnstcw
mov
ffreep
mov
incl
add
add
jecxz
icebp
call
jmp
jmp
jmp
jmp
jmp
xlat
into
fst
lret
fcmovbe
call
int
call
lret
mov
jmp
jmp
loope
icebp
out
jmp
icebp
in
ljmp
ror
dec
mov
sahf
mov
scas
mov
add
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
sub
add
adc
add
sub
add
add
and
add
add
nop
push
add
ret
mov
dec
mov
mov
jmp
fcmovnbe
jmp
loop
call
out
jmp
loopne
jmp
fcom
fcmove
ret
shll
scas
fwait
inc
lods
cwtl
inc
lods
cwtl
inc
lods
cwtl
inc
lods
cwtl
inc
lods
cwtl
inc
lods
cwtl
mov
cmp
ljmp
outsl
and
cmpsl
push
adc
ret
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lods
cwtl
mov
jns
decl
sbb
pop
inc
outsl
and
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
lods
cwtl
mov
xchg
xchg
cli
mov
decl
aas
idiv
xor
ja
decl
test
test
test
test
test
test
test
test
test
test
test
test
test
lods
cwtl
mov
xor
mov
mov
decl
addr16
fldcw
fnsave
jmp
jne
jmp
jnp
jmp
cmpb
out
inc
jmp
dec
out
cwtl
pop
push
pushf
pop
push
mov
push
stos
insb
pushl
lods
cwtl
mov
xor
call
aas
ud0
push
sbb
shlb
fldcw
fnsave
jmp
jne
jmp
jnp
jmp
cmpb
out
inc
jmp
dec
out
cwtl
pop
push
pushf
pop
push
mov
push
stos
insb
pushl
lods
cwtl
mov
ss
stos
dec
push
pushl
sbb
shlb
fldcw
fnsave
jmp
jne
jmp
jnp
jmp
cmpb
out
inc
jmp
dec
out
cwtl
pop
push
pushf
pop
push
mov
push
stos
insb
pushl
lods
cwtl
mov
cmp
ljmp
sbb
ret
push
sbb
shlb
fldcw
fnsave
jmp
jbe
jmp
jl
jmp
cmpb
out
inc
jmp
dec
out
cwtl
pop
push
pushf
pop
push
mov
gs
stos
imul
test
lods
cwtl
mov
ds
scas
push
and
mov
pop
inc
pop
and
shll
fldcw
fnsave
jmp
jbe
jmp
jl
jmp
cmpb
out
inc
jmp
dec
out
cwtl
pop
push
pushf
pop
push
mov
gs
stos
imul
test
lods
cwtl
mov
inc
and
mov
sub
mov
pop
and
fldcw
fnsave
jmp
jbe
jmp
jl
jmp
cmpb
out
inc
jmp
dec
out
cwtl
pop
push
pushf
pop
push
mov
gs
stos
imul
test
lods
cwtl
mov
inc
sub
mov
das
mov
pusha
sub
shrb
call
outsb
das
fidivl
fdivl
fistpll
jmp
jle
jmp
test
lea
jmp
pop
in
lcall
icebp
mov
push
scas
sbbl
lods
cwtl
mov
dec
sub
mov
fs
int3
push
call
outsl
xor
aam
xor
jno
fdivs
fidivrl
faddl
dec
jmp
xchg
push
jmp
xchg
pop
jmp
cltd
pop
jmp
mov
pop
inc
lods
cwtl
mov
dec
xor
mov
cmp
mov
imul
lret
dec
outsb
aaa
dec
outsl
ss
jb
dec
jne
call
jp
call
orb
mov
fimull
pop
fstl
jmp
scas
fwait
mov
push
xor
mov
imul
inc
insb
cmp
shrl
outsb
aaa
inc
outsl
cmp
ret
jb
inc
jns
dec
orb
test
int3
mov
iret
mov
rclb
push
dec
mov
mov
push
cmp
mov
dec
mov
insb
inc
mov
outsb
inc
mov
imul
mov
imul
mov
jb
mov
jl
inc
orb
test
lds
inc
dec
mov
mov
push
cmp
mov
decl
push
decl
push
xor
test
incl
push
incl
dec
sub
incl
pop
xor
mov
decl
pusha
cmp
lea
dec
mov
cwtl
mov
test
cwtl
mov
test
cwtl
mov
mov
dec
mov
mov
jmp
fcmovnbe
jmp
loop
call
out
jmp
loopne
jmp
fcom
fcmove
ret
shll
add
add
push
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
lds
call
mov
jmp
fcmovnbe
jmp
jecxz
call
loop
jmp
fcmovbe
ret
ret
mov
sarb
movsl
call
mov
movsl
call
mov
mov
ljmp
outsl
and
cmpsl
push
adc
ret
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
mov
decl
sbb
pop
inc
outsl
and
ss
ss
ss
ss
ss
ss
ss
ss
ss
mov
mov
cli
mov
decl
aas
idiv
xor
ja
decl
test
test
test
test
test
test
test
test
test
sarl
mov
mov
mov
decl
addr16
fdivl
jmp
jnp
jmp
addl
out
xchg
push
push
pushf
pop
push
mov
push
call
mov
mov
lcall
push
and
call
imul
fdivl
jmp
jnp
jmp
addl
out
xchg
push
push
pushf
pop
push
mov
push
call
mov
mov
pushl
gs
call
jo
fnstenv
fidivrs
jmp
jg
jmp
xchg
ljmp
out
lahf
pusha
push
movsl
dec
lcall
les
or
mov
insb
aas
dec
jno
dec
jae
call
jne
fdivrs
fidivrl
fldl
push
jmp
xchg
pop
call
mov
insb
call
mov
mov
mov
jb
inc
jne
dec
jne
dec
jbe
call
ja
call
js
call
jl
fmuls
push
fcoml
pop
mov
mov
mov
mov
ja
inc
jns
inc
jns
inc
ja
inc
ja
inc
jbe
inc
ja
dec
jle
dec
test
int
push
dec
mov
mov
fs
mov
mov
mov
jp
inc
jle
mov
jns
mov
jbe
mov
jp
inc
jl
inc
orl
lods
test
sarb
mov
decl
cmp
decl
inc
sbb
xchg
dec
and
xchg
push
call
pop
das
lcall
cmp
mov
outsb
inc
jmp
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
dec
mov
mov
jmp
fstp
jmp
in
call
loopne
jmp
xlat
iret
fcmovne
mov
incl
add
add
incl
add
incl
add
incl
add
add
add
add
add
add
je
imul
add
add
sub
add
outsb
add
jne
insb
add
jb
or
inc
add
add
add
add
and
add
outsl
add
jo
add
or
inc
add
add
add
add
add
and
add
outsl
add
imul
or
inc
add
add
add
add
add
and
add
insb
add
add
or
inc
add
add
add
add
add
daa
loope
add
insb
add
add
add
add
jo
es
add
imul
add
add
loop
add
jae
jmp
add
and
jne
outsb
add
add
add
outsl
add
jbe
add
add
bound
push
add
add
add
add
add
add
loop
add
add
imul
outsb
add
add
add
add
add
add
dec
add
add
add
inc
add
inc
add
and
inc
add
and
dec
add
push
add
add
add
add
add
add
data16
imul
popa
add
add
add
add
popa
add
jb
add
add
add
jne
je
imul
add
nop
add
add
add
add
add
add
jne
bound
jb
imul
add
and
add
and
insb
add
add
imul
addb
loope
add
and
jo
jb
outsl
add
outsl
add
and
add
and
jae
je
jne
bound
add
add
add
add
add
add
adc
add
imul
imul
add
add
add
add
outsl
add
jbe
add
jne
or
inc
add
add
add
add
add
add
add
jne
jbe
jb
imul
add
add
add
je
jb
insb
add
add
add
add
add
add
add
insl
add
jb
add
add
or
dec
add
jae
add
add
add
add
outsl
add
add
jb
or
inc
add
add
add
add
add
or
inc
add
jb
add
imul
jb
add
and
insb
add
and
arpl
outsl
add
imul
add
outsl
add
jae
add
add
add
add
loope
add
insl
add
jb
imul
jb
add
add
add
add
je
jb
insb
add
add
add
add
or
inc
add
add
out
jne
and
popa
add
add
popa
add
je
and
imul
jb
add
jae
imul
add
add
push
loope
add
add
outsb
add
imul
jb
popa
add
add
outsb
add
add
add
add
add
insl
add
jb
add
jae
imul
add
add
add
add
inc
add
jbe
outsl
add
add
add
add
add
add
add
loope
add
arpl
push
add
and
jb
jmp
add
je
addb
loope
add
jne
imul
add
add
adc
add
add
je
imul
add
add
sub
add
outsb
add
jne
insb
add
jb
or
inc
add
add
add
add
and
add
outsl
add
jo
add
or
inc
add
add
add
add
add
and
add
outsl
add
imul
or
inc
add
add
add
add
add
and
add
insb
add
add
or
inc
add
add
add
add
add
daa
loope
add
insb
add
add
add
add
jo
es
add
imul
add
add
loop
add
jae
jmp
add
and
jne
outsb
add
add
add
outsl
add
jbe
add
add
bound
push
add
add
add
add
add
add
loop
add
add
imul
outsb
add
add
add
add
add
add
dec
add
add
add
inc
add
inc
add
and
inc
add
and
dec
add
push
add
add
add
add
add
add
data16
imul
popa
add
add
add
add
call
popa
add
jb
add
add
add
jne
je
imul
add
addb
call
jb
jb
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
loope
add
outsl
add
jbe
add
add
and
data16
outsb
add
add
add
add
add
xor
add
popa
add
arpl
popa
add
add
add
add
loope
add
outsl
add
popa
add
add
jne
add
add
add
jmp
add
popa
add
imul
jb
and
insb
add
jae
and
imul
outsb
add
jae
add
nop
add
add
add
add
add
add
jne
bound
jb
imul
add
and
add
and
insb
add
add
imul
addb
loope
add
and
jo
jb
outsl
add
outsl
add
and
add
and
jae
je
jne
bound
add
add
add
add
add
add
adc
add
imul
imul
add
add
add
add
outsl
add
jbe
add
jne
or
inc
add
add
add
add
add
add
add
jne
jbe
jb
imul
add
add
add
je
jb
insb
add
add
add
add
add
add
add
insl
add
jb
add
add
add
add
outsb
add
add
imul
jb
add
or
inc
add
add
add
add
add
add
inc
add
add
add
imul
jb
add
and
jae
outsl
add
jae
add
add
add
add
loope
add
insl
add
jb
imul
jb
add
add
add
add
je
jb
insb
add
add
add
add
or
inc
add
add
out
jne
and
popa
add
add
popa
add
je
and
imul
jb
add
jae
imul
add
add
push
loope
add
add
outsb
add
imul
jb
popa
add
add
outsb
add
add
add
add
add
insl
add
jb
add
jae
imul
add
add
add
add
inc
add
jbe
outsl
add
add
add
add
add
add
add
loope
add
arpl
push
add
and
jb
jmp
add
je
addb
loope
add
jne
imul
add
add
nop
add
add
add
ljmp
add
add
add
loope
add
outsl
add
jbe
add
add
and
data16
outsb
add
add
add
add
add
xor
add
popa
add
arpl
popa
add
add
add
add
loope
add
outsl
add
popa
add
add
jne
add
add
add
jmp
add
popa
add
imul
jb
and
insb
add
jae
and
imul
outsb
add
jae
add
push
inc
add
add
adc
add
imul
imul
add
add
add
add
outsl
add
jbe
add
jne
or
inc
add
add
add
add
add
add
add
jne
jbe
jb
imul
add
add
add
je
jb
insb
add
add
add
push
loope
add
add
outsb
add
imul
jb
popa
add
add
outsb
add
add
add
add
add
insl
add
jb
add
jae
imul
add
add
add
add
loope
add
arpl
push
add
and
jb
jmp
add
je
addb
loope
add
jne
imul
add
add
adc
add
data16
imul
popa
add
add
add
add
call
popa
add
jb
add
add
add
jne
je
imul
add
add
add
inc
add
jb
jb
add
add
add
add
add
add
add
add
add
popa
add
je
imul
outsb
add
jb
add
adc
add
jb
popa
add
add
jae
and
imul
outsb
add
jae
add
add
adc
push
add
add
je
imul
jae
and
imul
outsb
add
jae
add
add
adc
add
add
je
add
add
add
call
jmp
add
insb
add
adc
add
jmp
add
popa
add
imul
jb
and
insb
add
jae
and
imul
outsb
add
jae
add
add
adc
add
and
add
outsl
add
jae
addb
call
jmp
add
outsb
add
jp
popa
add
add
outsb
add
add
jne
je
outsl
add
popa
add
add
jne
add
add
add
add
outsb
add
add
jb
and
insb
add
jae
and
imul
outsb
add
jae
add
nop
add
add
add
add
add
add
jne
bound
jb
imul
add
and
add
and
insb
add
add
imul
addb
loope
add
and
jo
jb
outsl
add
outsl
add
and
add
and
jae
je
jne
bound
add
add
add
add
add
add
add
add
imul
imul
add
add
add
add
outsl
add
jbe
add
jne
or
inc
add
add
add
add
add
add
add
jne
jbe
jb
imul
add
add
add
je
jb
insb
add
add
add
add
add
add
add
insl
add
jb
add
add
add
add
outsb
add
add
imul
jb
add
or
inc
add
add
add
add
add
add
inc
add
add
add
imul
jb
add
and
jae
outsl
add
jae
add
add
add
add
loope
add
insl
add
jb
imul
jb
add
add
add
add
je
jb
insb
add
add
add
add
or
inc
add
add
out
jne
and
popa
add
add
popa
add
je
and
imul
jb
add
jae
imul
add
add
push
loope
add
add
outsb
add
imul
jb
popa
add
add
outsb
add
add
add
add
add
insl
add
jb
add
jae
imul
add
add
add
add
inc
add
jbe
outsl
add
add
add
add
add
add
add
loope
add
arpl
push
add
and
jb
jmp
add
je
addb
loope
add
jne
imul
add
add
adc
add
add
je
imul
add
add
sub
add
outsb
add
jne
insb
add
jb
or
inc
add
add
add
add
and
add
outsl
add
jo
add
or
inc
add
add
add
add
add
and
add
outsl
add
imul
or
inc
add
add
add
add
add
and
add
insb
add
add
or
inc
add
add
add
add
add
daa
loope
add
insb
add
add
add
add
jo
es
add
imul
add
add
loop
add
jae
jmp
add
and
jne
outsb
add
add
add
outsl
add
jbe
add
add
bound
push
add
add
add
add
add
add
loop
add
add
imul
outsb
add
add
add
add
add
add
dec
add
add
add
inc
add
inc
add
and
inc
add
and
dec
add
push
add
add
add
add
add
add
data16
imul
popa
add
add
add
add
call
popa
add
jb
add
add
add
jne
je
imul
add
add
add
inc
add
jb
jb
add
add
add
add
add
add
add
add
add
popa
add
je
imul
outsb
add
jb
add
adc
add
jb
popa
add
add
jae
and
imul
outsb
add
jae
add
add
adc
push
add
add
je
imul
jae
and
imul
outsb
add
jae
add
add
adc
add
add
je
add
add
add
call
jmp
add
insb
add
adc
add
jmp
add
popa
add
imul
jb
and
insb
add
jae
and
imul
outsb
add
jae
add
add
adc
add
and
add
outsl
add
jae
addb
call
jmp
add
outsb
add
jp
popa
add
add
outsb
add
add
jne
je
outsl
add
popa
add
add
jne
add
add
add
add
outsb
add
add
jb
and
insb
add
jae
and
imul
outsb
add
jae
add
adc
inc
add
add
ljmp
add
add
add
loope
add
outsl
add
jbe
add
add
and
data16
outsb
add
add
add
add
add
xor
add
popa
add
arpl
popa
add
add
add
add
loope
add
outsl
add
popa
add
add
jne
add
add
add
jmp
add
popa
add
imul
jb
and
insb
add
jae
and
imul
outsb
add
jae
add
nop
add
add
add
add
add
add
jne
bound
jb
imul
add
and
add
and
insb
add
add
imul
addb
loope
add
and
jo
jb
outsl
add
outsl
add
and
add
and
jae
je
jne
bound
add
add
add
add
add
addb
add
add
add
add
jmp
aaa
add
add
add
and
jo
jb
outsl
add
outsl
add
and
add
and
jae
je
jne
bound
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
adc
incl
add
add
add
add
add
add
or
incl
add
bound
and
jbe
add
jae
imul
and
xor
add
add
push
add
add
sub
sbb
ja
or
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
pop
add
add
add
add
incl
add
add
add
pop
add
arpl
push
add
add
add
add
add
outsb
add
je
imul
imul
je
imul
and
dec
add
add
add
add
jmp
add
imul
and
jno
jne
add
add
add
and
bound
imul
imul
push
add
add
and
dec
add
add
add
outsl
add
je
and
add
and
insb
add
and
bound
outsl
add
outsb
add
and
jbe
add
jae
imul
add
add
inc
add
push
add
add
add
add
jb
jmp
add
outsl
add
and
add
and
insb
add
add
bound
push
add
add
add
jmp
add
imul
and
jno
jne
add
add
add
bound
push
add
add
jae
je
and
add
je
jb
jmp
add
outsb
add
and
insb
add
and
jb
add
imul
jb
add
add
add
add
jns
jae
je
call
add
add
add
add
arpl
push
add
add
add
add
add
outsb
add
je
imul
imul
je
imul
and
add
jae
and
jae
outsl
add
imul
add
add
add
imul
outsl
add
jae
add
add
jae
je
jne
bound
sub
or
push
add
add
or
push
add
add
or
or
or
push
add
add
add
add
jne
insl
add
outsb
add
add
je
jne
bound
and
inc
add
arpl
jne
insl
add
outsb
add
add
add
jae
je
jne
bound
sbb
push
add
jne
jb
and
insb
add
add
imul
sub
and
popa
add
jo
jne
jns
add
and
jae
jne
jb
and
inc
add
add
add
jmp
add
je
imul
outsb
add
jp
and
jne
outsb
add
add
bound
push
add
add
jne
jb
and
insb
add
jno
jne
add
add
bound
je
add
imul
add
and
insb
add
add
imul
add
push
inc
and
inc
add
jmp
add
outsb
add
add
outsl
add
jbe
add
jne
and
add
arpl
jne
insl
add
outsb
add
add
outsl
add
jbe
add
jne
and
dec
add
jbe
jb
add
add
outsb
add
add
add
jne
insl
add
outsb
add
add
js
imul
popa
add
je
or
dec
add
jbe
jb
imul
inc
add
jb
insl
add
and
insb
add
and
add
arpl
jne
insl
add
outsb
add
add
arpl
je
imul
inc
add
jb
insl
add
jb
sub
inc
add
jb
add
imul
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
arpl
je
imul
inc
add
jb
add
imul
jb
add
inc
add
outsb
add
add
imul
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
arpl
je
imul
jae
outsl
add
jae
and
jne
outsb
add
add
outsl
add
jbe
add
jne
and
outsb
add
insl
add
add
outsb
add
add
imul
jb
add
and
jae
outsl
add
jae
sub
inc
add
popa
add
add
and
insb
add
jae
and
outsl
add
je
imul
jae
and
add
add
insl
add
jb
add
jae
imul
or
dec
add
jae
add
add
outsb
add
add
popa
add
add
inc
add
popa
add
add
and
insb
add
jae
and
outsl
add
je
imul
jae
and
add
add
insl
add
jb
imul
outsb
add
add
add
je
and
add
add
insl
add
jb
add
jae
imul
or
inc
add
outsb
add
imul
jb
popa
add
add
outsb
add
add
add
add
add
insl
add
jb
add
jae
imul
and
dec
add
jo
jb
imul
and
insb
add
and
add
arpl
jne
insl
add
outsb
add
add
arpl
je
imul
dec
add
jo
jb
imul
jb
add
xor
inc
add
data16
arpl
push
add
add
and
jo
popa
add
add
and
add
je
imul
add
or
inc
add
add
out
jne
and
popa
add
popa
add
je
and
imul
jb
add
jae
imul
inc
add
add
add
add
add
outsl
add
jb
and
insb
add
and
arpl
outsl
add
je
add
add
jb
and
jo
outsl
add
jb
and
popa
add
data16
arpl
push
add
add
add
je
add
add
outsl
add
add
imul
je
imul
or
dec
add
je
je
jb
add
add
add
add
outsl
add
jb
push
add
outsb
add
add
imul
jb
add
add
outsb
add
and
arpl
outsl
add
imul
add
and
add
arpl
jne
insl
add
outsb
add
add
arpl
je
imul
jae
outsl
add
jae
and
jne
outsb
add
add
outsl
add
jbe
add
jne
and
outsb
add
insl
add
add
outsb
add
add
imul
jb
add
and
jne
outsb
add
and
arpl
outsl
add
imul
inc
add
jbe
outsl
add
add
add
add
add
add
jne
insl
add
outsb
add
add
outsb
add
add
outsl
add
jb
jae
and
jo
popa
add
and
insb
add
add
outsb
add
add
insl
add
add
add
imul
and
add
add
outsb
add
and
insl
add
jae
jae
popa
add
add
imul
jmp
add
je
jb
outsl
add
imul
add
add
outsb
add
outsl
add
add
and
jne
outsb
add
add
add
jae
popa
add
add
add
add
add
adc
dec
add
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
jbe
jb
add
add
add
add
add
jne
insl
add
outsb
add
add
data16
popa
add
add
add
add
add
jmp
add
je
imul
or
inc
add
data16
arpl
add
sbb
inc
add
data16
arpl
add
add
add
je
or
inc
add
data16
arpl
add
and
je
outsl
add
je
cmp
inc
add
jo
imul
insb
add
and
jae
jmp
add
je
imul
and
add
add
add
add
insb
add
arpl
add
add
add
jae
and
insb
add
and
push
add
add
jae
add
add
imul
jae
or
inc
add
jo
imul
aas
add
jne
jo
jo
jb
imul
and
insb
add
and
jae
jmp
add
je
imul
and
add
add
add
add
insb
add
arpl
add
add
add
jae
and
insb
add
and
push
add
add
jae
add
add
imul
jae
or
inc
add
jne
jo
add
add
add
push
add
push
add
add
add
add
je
add
add
jo
jmp
add
imul
push
add
arpl
push
add
push
add
add
outsb
add
call
add
add
add
add
outsl
add
je
add
jne
and
add
and
push
add
add
jae
add
add
imul
jae
or
inc
add
insb
add
add
push
add
outsb
add
call
add
add
add
add
outsl
add
je
add
jne
and
add
and
push
add
add
jae
add
add
imul
jae
and
add
add
outsb
add
and
insb
add
popa
add
jae
outsl
add
and
loopne
and
jae
popa
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
jb
and
popa
add
add
and
insb
add
popa
add
jae
outsl
add
inc
add
outsb
add
call
add
add
add
add
outsl
add
je
add
jne
and
add
and
push
add
add
jae
add
add
imul
jae
and
popa
add
add
and
add
jae
and
outsl
add
je
imul
jae
or
inc
add
insb
add
add
add
add
jo
jmp
add
insb
add
add
jmp
add
add
add
add
add
add
outsb
add
call
add
add
arpl
je
imul
or
push
add
add
jmp
add
cmp
add
jo
insb
add
arpl
add
add
add
add
add
je
add
add
jo
jmp
add
imul
add
add
popa
add
and
jne
outsb
add
add
add
je
add
add
add
data16
add
add
je
or
push
add
insl
add
insb
add
arpl
add
xor
push
add
add
add
je
imul
outsb
add
and
insb
add
and
add
arpl
jne
insl
add
outsb
add
add
outsb
add
add
jb
or
push
add
add
add
je
imul
outsb
add
jb
and
je
outsl
add
je
and
inc
add
outsb
add
insb
add
and
insb
add
and
add
jb
outsb
add
call
add
add
arpl
je
imul
or
inc
add
outsb
add
insb
add
jb
das
add
jmp
add
insb
add
je
and
insb
add
add
arpl
je
imul
and
jo
jb
jmp
add
add
insl
add
outsb
add
add
outsb
add
jne
insb
add
add
or
push
add
add
add
insb
add
jb
add
add
add
inc
add
jne
jbe
jb
add
add
outsb
add
and
outsb
add
jne
jbe
add
add
and
data16
outsb
add
add
add
and
jo
outsl
add
jb
and
insb
add
and
add
arpl
jne
insl
add
outsb
add
add
arpl
je
imul
dec
add
jne
jbe
add
add
and
data16
outsb
add
add
add
inc
add
jmp
add
popa
add
imul
and
insb
add
jae
and
imul
outsb
add
jae
and
add
and
bound
popa
add
and
add
and
insb
add
and
data16
outsb
add
add
add
or
push
add
add
jb
add
outsb
add
jae
add
add
add
and
imul
outsb
add
jae
sub
push
add
add
jb
add
outsb
add
jae
add
add
add
and
data16
outsb
add
add
add
jae
and
add
and
arpl
popa
add
arpl
popa
add
add
add
popa
add
arpl
popa
add
add
add
jmp
add
popa
add
imul
and
insb
add
jae
and
data16
outsb
add
add
add
jae
and
add
and
jne
outsb
add
and
insl
add
jae
popa
add
add
jne
add
add
outsl
add
popa
add
add
jne
add
add
jmp
add
popa
add
imul
and
insb
add
jae
and
data16
outsb
add
add
add
jae
and
add
and
jne
outsb
add
and
insl
add
jae
popa
add
add
jne
add
add
outsl
add
popa
add
add
jne
add
add
jmp
add
popa
add
imul
and
insb
add
jae
and
data16
outsb
add
add
add
jae
and
add
and
jne
outsb
add
and
insl
add
jae
popa
add
add
jne
add
add
outsl
add
popa
add
add
jne
add
add
add
inc
add
data16
arpl
push
add
add
and
imul
outsl
add
insl
add
je
imul
jae
and
jae
jne
jb
and
insb
add
and
jo
jb
outsl
add
jb
popa
add
insl
add
sub
and
insb
add
and
outsb
add
insl
add
add
outsl
add
add
add
add
add
jae
imul
and
add
add
add
add
outsl
add
jns
jb
imul
je
or
inc
add
add
jb
outsl
add
outsl
add
and
add
inc
add
add
insl
add
and
insb
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
jb
outsl
add
outsl
add
add
add
add
outsb
add
add
imul
jb
add
and
insb
add
jae
and
add
arpl
jne
insl
add
outsb
add
add
add
jne
imul
add
and
dec
add
jbe
jb
add
add
add
imul
or
push
add
bound
jb
imul
add
and
add
and
insb
add
add
imul
xor
dec
add
jae
je
add
add
add
and
jb
jne
bound
jb
imul
add
and
add
and
insb
add
add
imul
or
push
add
bound
jb
imul
add
and
add
and
insb
add
add
imul
cmp
inc
add
data16
arpl
push
add
add
and
imul
je
jb
jne
arpl
je
imul
jae
and
jae
jne
jb
and
insb
add
add
je
imul
jae
popa
add
add
outsb
add
add
add
add
add
imul
or
inc
add
add
inc
add
data16
imul
add
add
add
imul
and
jae
jne
jb
and
insb
add
jae
and
arpl
insb
add
arpl
jae
and
jae
jne
jb
and
insb
add
jae
and
bound
outsl
add
je
outsl
add
jae
sub
and
insl
add
outsb
add
jae
and
add
add
add
ljmp
add
or
inc
add
add
xor
add
imul
add
add
add
imul
and
jae
jne
jb
and
insb
add
and
je
loop
arpl
push
add
jne
and
arpl
outsl
add
insl
add
outsb
add
add
add
outsl
add
jb
popa
add
je
add
add
imul
add
push
inc
das
add
popa
add
jae
add
add
jne
and
jbe
outsl
add
add
add
add
add
add
ljmp
add
add
jne
imul
outsb
add
add
outsl
add
add
add
jne
imul
outsb
add
add
add
imul
je
and
popa
add
and
jbe
outsl
add
add
add
jb
jmp
add
add
je
or
push
add
insb
add
je
and
jo
jb
jmp
add
add
je
push
inc
sub
add
call
add
add
outsb
add
add
outsl
add
jbe
add
add
bound
push
add
add
outsb
add
outsl
add
jo
outsl
add
jmp
add
jne
jbe
add
add
bound
push
add
add
outsl
add
add
imul
insb
add
jae
and
outsl
add
push
add
add
add
add
add
or
dec
add
add
data16
add
and
insb
add
jae
and
insb
add
popa
add
jae
outsl
add
jae
cmp
inc
add
outsb
add
add
je
imul
insb
add
add
bound
push
add
add
outsb
add
add
outsb
add
add
add
add
add
add
data16
add
add
je
or
inc
add
outsb
add
add
je
imul
insb
add
add
bound
push
add
add
add
arpl
je
imul
and
insb
add
add
bound
push
add
add
outsb
add
outsl
add
jo
outsl
add
jmp
add
and
insb
add
jmp
add
add
arpl
je
imul
and
insb
add
add
bound
push
add
add
outsb
add
outsl
add
jo
outsl
add
jmp
add
and
insb
add
jmp
add
add
arpl
je
imul
and
insb
add
add
bound
push
add
add
outsb
add
outsl
add
jo
outsl
add
jmp
add
and
insb
add
jmp
add
add
arpl
je
imul
and
insb
add
add
bound
push
add
add
outsb
add
outsl
add
jo
outsl
add
jmp
add
and
insb
add
jmp
add
add
pop
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
push
add
add
dec
add
xor
inc
add
data16
arpl
push
add
jne
and
insl
add
jae
jno
jne
add
add
add
add
popa
add
jb
add
add
add
jne
je
imul
or
inc
add
jb
jb
add
add
add
jne
je
imul
add
data16
imul
add
add
jne
and
insl
add
jae
jno
jne
add
add
add
add
popa
add
jb
add
add
add
add
add
add
popa
add
jb
add
add
add
add
add
add
add
add
add
jmp
add
popa
add
imul
and
insb
add
jae
and
imul
outsb
add
jae
and
add
outsb
add
and
jne
outsb
add
and
add
imul
add
add
inc
add
data16
arpl
push
add
add
and
jmp
add
add
je
jae
and
jne
je
imul
jae
popa
add
je
and
insb
add
jae
and
jo
add
add
add
and
imul
outsb
add
jae
add
add
add
add
add
and
imul
outsb
add
jae
inc
add
data16
imul
add
add
add
and
jmp
add
add
je
jae
and
jne
je
imul
jae
popa
add
je
and
insb
add
jae
and
add
popa
add
add
jae
and
imul
outsb
add
jae
add
add
jb
popa
add
add
jae
and
imul
outsb
add
jae
sub
inc
add
data16
arpl
push
add
add
and
jmp
add
add
je
jae
and
add
outsb
add
and
jne
outsb
add
and
insb
add
jae
je
add
add
add
add
je
add
inc
add
data16
arpl
push
add
add
and
imul
outsl
add
insl
add
je
imul
jae
and
add
and
arpl
push
add
add
add
add
add
add
je
and
add
outsb
add
and
insb
add
and
data16
outsb
add
add
add
add
add
add
add
insb
add
add
jmp
add
popa
add
imul
and
insb
add
jae
and
imul
outsb
add
jae
and
add
outsb
add
and
jne
outsb
add
and
add
imul
add
add
add
add
add
add
add
and
imul
outsb
add
jae
and
popa
add
add
popa
add
jmp
add
jne
add
add
je
add
add
add
add
push
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
ljmp
add
add
push
add
add
add
add
add
outsl
add
imul
outsl
add
and
add
and
insb
add
and
data16
outsb
add
add
add
sbb
push
add
add
add
je
and
insb
add
and
data16
outsb
add
add
add
and
add
and
imul
outsb
add
sub
inc
add
jb
popa
add
add
je
and
insb
add
and
data16
outsb
add
add
add
and
popa
add
and
data16
jb
insl
add
je
and
add
and
insb
add
add
add
jb
popa
add
daa
add
popa
add
jae
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
jne
insl
add
outsb
add
add
jne
imul
outsb
add
add
add
popa
add
jae
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
jne
insl
add
outsb
add
add
jb
jmp
add
add
je
add
inc
add
jb
insl
add
and
insb
add
and
data16
outsb
add
add
add
and
popa
add
je
imul
and
add
add
jb
outsl
add
outsl
add
add
add
add
outsb
add
add
imul
jb
add
add
je
and
add
jae
and
add
arpl
jne
insl
add
outsb
add
add
add
add
add
sub
push
add
jae
je
popa
add
jb
add
add
add
add
add
ljmp
add
add
add
add
popa
add
add
add
insb
add
add
add
add
jb
imul
outsb
add
sbb
inc
add
je
imul
and
insb
add
and
insb
add
jae
je
add
add
add
and
je
loop
arpl
push
add
add
inc
add
je
imul
and
arpl
add
add
and
data16
outsb
add
add
add
push
inc
add
aaa
add
add
insl
add
and
insb
add
and
insl
add
add
and
add
add
jo
add
out
jne
and
popa
add
popa
add
je
and
imul
jb
add
jae
imul
or
inc
add
jb
insl
add
jb
and
insb
add
add
jo
add
out
jne
push
inc
or
pop
add
loope
add
add
and
add
or
inc
add
loope
add
add
and
add
add
loope
add
loope
add
add
add
loope
add
loope
add
add
inc
loope
add
addb
or
dec
add
loope
add
add
add
add
or
push
add
loope
add
add
pop
loope
add
add
sub
add
or
pop
add
loope
add
add
and
add
or
push
add
add
add
loope
add
loope
add
add
add
loope
add
add
push
loope
add
loope
add
loope
add
add
inc
loope
add
addb
or
dec
add
loope
add
add
add
add
or
push
add
loope
add
add
pop
loope
add
add
push
loope
add
loope
add
loope
add
add
inc
loope
add
addb
or
dec
add
loope
add
add
add
add
or
push
add
loope
add
add
pop
loope
add
add
sub
add
or
pop
add
loope
add
add
and
add
or
push
add
add
add
loope
add
loope
add
add
add
loope
add
add
push
loope
add
loope
add
loope
add
add
inc
loope
add
addb
add
add
adc
xor
or
add
add
push
add
sub
add
add
add
add
add
add
and
add
add
add
add
add
add
sbb
add
add
add
add
add
adc
or
add
add
test
add
add
add
add
add
add
add
add
xor
add
add
add
add
sub
add
add
add
add
and
add
add
add
add
sbb
add
add
add
push
add
or
adc
add
add
add
or
add
or
adc
add
add
add
push
add
xor
add
add
add
add
sub
add
add
add
add
push
add
and
add
add
add
add
sbb
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
adc
push
inc
aam
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
data16
add
add
add
cmp
adc
add
inc
add
insl
add
add
je
jae
add
imul
add
add
inc
add
jb
add
add
jb
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
and
data16
add
and
sub
inc
add
push
add
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
add
add
je
outsl
add
add
add
inc
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
bound
add
data16
bound
je
outsb
add
add
js
add
add
add
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
ja
add
jb
add
outsb
add
outsb
add
add
sbb
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
insb
add
data16
add
add
add
add
add
add
add
add
add
jns
and
inc
add
outsb
add
add
dec
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jns
je
imul
add
add
push
add
push
add
js
add
add
add
add
add
jb
imul
je
add
jne
imul
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
popa
add
push
add
push
insl
add
add
add
insl
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
adc
add
push
add
add
imul
inc
add
imul
add
jne
insb
add
push
add
push
add
add
add
outsb
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
add
xchg
insb
or
jb
jl
loope
lahf
inc
jecxz
hlt
mov
outsb
ss
cltd
gs
pop
pop
outsb
push
insb
fwait
mov
jns
fstl
hlt
aas
and
shlb
in
jle
cli
jle
cld
push
cmp
xchg
push
inc
test
jmp
rcl
or
cltd
push
push
imul
mov
stos
fisubrl
aam
cmc
push
pop
stos
jge
aam
adc
cmpsl
stc
jae
xlat
repz
cltd
fstpt
cmp
push
inc
mov
cmp
jnp
aam
xchg
enter
mov
mov
popa
jle
cs
loop
cmp
xchg
push
pop
mov
leave
mov
cmp
mov
and
mov
leave
mov
icebp
xchg
ja
cmp
sarl
das
mov
and
clc
push
dec
repz
sub
cmp
inc
push
test
xor
adc
popf
aaa
cmc
xchg
ljmp
fs
outsl
das
jmp
data16
jbe
in
popa
lods
test
mov
jg
mov
fdiv
inc
faddl
dec
lods
xor
jnp
push
pop
loopne
int
orl
ljmp
sbb
cltd
cld
in
cmp
mov
rorl
fstpt
shll
inc
das
pop
aas
cli
jp
pop
mov
int3
pop
cltd
xchg
cmp
ja
cmp
sbbb
ss
cmp
les
imul
jl
pop
clc
cmp
test
push
sbbb
leave
cmp
insb
inc
cmc
push
push
xor
mov
adc
in
cmp
scas
pop
adc
lahf
mov
or
inc
or
sbb
xor
int3
sub
push
sahf
ss
arpl
jne
outsl
fld
cmpl
mov
inc
popa
sub
xor
repz
call
imulb
dec
ja
out
jns
push
jne
xlat
fistpl
mov
iret
pop
test
adc
push
fbld
shll
jmp
mov
pop
pop
cmp
xor
insl
mov
xor
and
rorb
sbb
gs
movsb
adc
mov
imull
sub
adc
mov
ret
in
cmc
and
mov
je
aam
dec
push
js
jmp
stc
jmp
pop
mov
leave
icebp
loop
test
mov
int3
mov
sti
jge
or
xor
cmp
xor
mov
call
fnstenv
adc
jo
jmp
adc
jl
popf
in
inc
ljmp
jnp
cmc
push
jge
and
xchg
jb
adc
ljmp
sub
inc
xchg
pop
shrb
mov
cmpsb
sbb
jno
sbb
hlt
mov
mov
testb
popf
popa
mov
lods
push
int
cmp
icebp
sbb
adc
pop
xor
ja
adc
in
mov
pop
mov
fs
insb
leave
jp
mov
test
sbb
sub
pop
jae
adc
jo
sub
stc
shll
cmp
lods
shlb
les
mov
aas
cmpsb
sbb
cmp
jae
inc
jne
and
inc
movsb
xor
aam
inc
xchg
ret
or
mov
mov
stc
es
jns
jbe
lds
mov
lock
test
or
inc
into
js
dec
xchg
setle
xchg
mov
mov
xor
dec
push
push
pop
mov
xor
popf
push
xor
mov
out
cmp
out
in
pop
sbb
pop
xchg
jecxz
jl
inc
inc
and
insb
adc
cmc
aad
cwtd
mov
push
adc
mov
iret
dec
adc
cmpsl
inc
xchg
out
or
test
jge
test
inc
push
xlat
das
movsl
pop
inc
jp
nop
rcl
repnz
ret
add
mov
shl
push
push
aam
xchg
in
das
test
pop
mov
mov
push
push
bound
xchg
addr16
addl
xlat
popa
rolb
adc
stc
cmc
cld
testb
das
lds
mov
mov
mov
scas
ss
sbb
addr16
repnz
es
cltd
push
in
sub
iret
ds
ret
ret
fildl
mov
fsts
lret
mov
popa
mov
fnsave
adc
icebp
jne
xchg
mov
dec
add
pop
add
stc
sub
scas
sub
push
pop
gs
lahf
test
aaa
mov
jmp
sarl
icebp
popf
lret
ss
push
mov
cmp
xor
mov
mov
cli
loop
dec
gs
adc
and
outsb
fcom
jb
rorb
scas
xor
jbe
mov
dec
sbb
pop
popa
jo
jns
int
mov
ljmpw
xchg
jo
imul
xchg
pop
push
arpl
cltd
lret
fcomps
xchg
inc
fwait
pop
or
mov
out
stos
xchg
jb
ds
mov
mov
mov
adc
test
mov
imul
mov
jecxz
mov
mov
push
dec
add
add
xor
cmp
jns
pop
ret
push
sub
xor
or
cmpsb
sub
xor
ljmp
imul
mov
jnp
lcall
cmpsb
cmpl
mov
js
lods
and
sub
cwtl
loopne
sub
ja
lock
or
in
fwait
xchg
jbe
mov
mov
arpl
mov
dec
movsb
sahf
cld
xchg
repnz
pop
xchg
add
or
jle
test
pop
or
pop
sahf
and
aad
sbb
or
les
adc
and
pushf
xorb
aam
sbb
es
cs
jno
jns
push
repnz
xchg
dec
sub
jmp
push
inc
and
jmp
lds
push
inc
addr16
push
sti
adc
clc
popa
test
adc
test
mov
add
sbb
mov
aaa
mov
xchg
mov
sub
fs
popf
imull
fmull
cmp
mov
and
lret
jp
inc
jnp
xchg
and
outsl
popf
add
push
push
enter
int3
enter
pop
pop
loopne
out
fsts
es
movsl
dec
andb
aad
adc
loop
cld
cld
and
dec
sub
shll
xchg
pop
or
imul
in
jns
inc
and
and
xchg
pop
pusha
pop
out
inc
sti
stos
cwtl
movsl
mov
inc
in
int
mov
jecxz
or
inc
jno
scas
test
mov
add
push
fadds
outsl
or
jmp
sahf
leave
xchg
mov
repz
lods
fs
mov
cmp
lret
push
fdivs
int
xchg
or
adcl
popf
dec
push
shll
pop
add
push
pop
test
insb
es
imul
mov
inc
inc
sti
pop
sbb
inc
or
andl
mov
cli
add
je
mov
or
cmpsb
fwait
jle
and
sub
addl
lret
dec
lock
out
lea
push
js
dec
lea
mov
sub
xchg
mov
rcrb
test
jns
insb
mov
sbb
adc
repz
fldln2
mov
and
out
enter
push
stos
mov
jge
mov
sub
mov
cli
adc
cs
ss
sbb
or
or
cltd
movzwl
cmp
test
sarl
mov
dec
jo
xor
int
inc
sub
and
lods
mov
arpl
clc
mov
push
shr
into
jmp
push
pop
push
xchg
ljmp
lcall
cmp
inc
popf
int3
mov
jno
and
mov
push
cmpsl
push
mov
sub
mov
mov
icebp
out
push
push
adc
jno
xor
mov
hlt
jb
aam
scas
sbb
push
nop
test
rcrb
insb
mov
cld
cmp
inc
inc
mov
insb
data16
popa
jbe
mov
movsl
aaa
mov
sub
or
jne
xchg
lock
mov
shll
in
cwtl
rorb
pop
sbb
out
xchg
push
push
je
push
sub
ret
push
aaa
fxch
ja
xchg
push
daa
mov
aas
pop
inc
pop
xor
pop
xor
inc
mov
jmp
and
cld
loope
mov
xlat
mov
mov
jl
push
push
push
dec
xchg
mov
cpuid
test
add
sbb
xor
dec
fcmovnb
stc
imull
cmp
add
sub
inc
cmp
or
popa
mov
jle
std
push
je
fwait
call
pop
loopne
insb
pop
fnstcw
addr16
mov
dec
xlat
xchg
push
fst
das
dec
imul
and
sahf
popa
fs
stos
outsb
ret
shl
test
adc
add
mov
push
pop
jge
lea
call
jl
call
sub
and
lock
or
push
sahf
sub
in
inc
repnz
ret
enter
out
jecxz
bound
pop
data16
xchg
sub
xchg
sti
xchg
add
test
dec
in
dec
push
stos
push
push
dec
outsb
jmp
dec
push
and
mov
or
stc
leave
mov
je
scas
gs
ss
imul
call
inc
push
mov
add
and
outsb
adc
inc
je
cwtl
scas
pushf
les
fnstcw
push
push
in
mov
test
xchg
nop
push
int3
pop
xchg
insb
adc
add
stos
pop
inc
int3
xor
insb
cmp
repnz
fdivrs
pop
fs
jmp
jl
xchg
addl
inc
mov
aas
lods
aas
pop
inc
pop
xchg
mov
xchg
ljmp
scas
push
add
insb
movsb
stos
aas
adcb
push
xchg
push
stos
outsb
mov
adc
imul
and
xor
dec
iret
xor
imul
shrb
sub
pop
imul
mov
sbb
std
es
inc
jae
pop
ljmp
pop
mov
and
dec
fadd
sub
mov
dec
lahf
leave
jl
out
jae
inc
pop
ljmp
adc
pop
in
xor
jge
bound
ds
mov
dec
xor
subl
adc
or
push
imul
aam
or
mov
fcoml
in
jmp
gs
push
mov
lock
repz
cmp
loopne
in
fstp
scas
aad
fidivs
icebp
hlt
mov
stos
cmp
nop
pop
mov
cs
add
xor
adc
call
hlt
test
mov
and
sarl
add
and
and
in
push
jnp
enter
jo
adc
icebp
cwtl
rorb
das
dec
push
scas
insb
stc
jecxz
push
xchg
jecxz
cltd
and
or
inc
daa
jbe
rclb
lods
shrl
imul
xchg
pop
movsl
dec
add
jno
popa
lret
cs
xor
or
into
add
lods
call
outsl
push
je
gs
gs
data16
mov
pop
cmp
scas
pop
jno
aad
sbb
jl
cs
out
mov
cmc
mov
sbb
cltd
shrl
dec
cmpsl
fsubs
ljmp
mov
xchg
and
movsb
mov
in
ljmp
adc
addr16
mov
pop
jb
add
jmp
lahf
loope
add
ret
fistpll
aam
add
cmpsl
in
push
cs
rolb
jb
xchg
sarl
mov
lahf
adc
mov
push
add
cli
cld
sub
or
pop
push
mov
jg
rcrl
mov
xor
dec
xlat
mov
push
push
add
and
gs
sarb
sub
xor
adc
fsub
icebp
push
jno
lret
rorl
sbb
dec
or
mov
xchg
sbb
xor
pop
xchg
inc
stc
ljmp
insb
jge
out
orb
jbe
cli
mov
push
xchg
shrb
pop
test
popa
add
mov
das
or
mov
push
aas
shlb
sahf
xchg
movsl
jbe
outsl
mov
push
mov
fisubrl
loop
clc
cmp
sbb
sub
lahf
jbe
fidivl
and
lods
mov
aam
insb
dec
push
xchg
movsl
pop
pop
pop
mov
and
jl
roll
out
mov
mov
js
xlat
out
mov
insb
es
out
push
lds
adc
lods
adc
cli
addr16
cmp
bound
std
xchg
adc
sti
test
xchg
lock
mov
sbb
pushf
repz
mov
push
insl
push
push
lret
dec
in
aam
repnz
lock
xor
push
cmp
jmp
lahf
push
movsl
adcb
jno
lods
pop
shll
fbstp
inc
ljmp
outsb
mov
or
je
lea
cmp
pop
push
mov
push
repnz
into
fnsave
in
cmp
das
adc
cwtl
ja
mov
inc
insl
fwait
ja
lahf
adc
and
hlt
push
mov
or
fmuls
repz
punpcklwd
dec
mov
aas
adc
mov
sarl
xchg
mov
add
outsb
add
push
cmc
out
pop
movsl
push
fcmovnbe
lahf
pusha
aam
xor
fstpl
jmp
xchg
je
lahf
pop
adc
jne
push
jno
repnz
mov
sti
inc
and
push
jno
push
test
mov
mov
pop
and
xor
dec
daa
add
insl
leave
imul
push
jb
cmp
cwtl
mov
xor
xchg
filds
loope
add
inc
pop
mov
gs
mov
out
gs
mov
leave
sub
cltd
lret
mov
inc
push
push
sbb
adc
loope
lret
pusha
push
lds
out
sbb
sahf
jo
fsts
push
pop
sub
mov
jns
fstp
add
rcl
dec
xor
mov
fistpl
cwtl
jb
and
xchg
icebp
dec
cmpsl
ljmp
adc
loopne
xor
mov
xor
cmp
xor
cmp
fs
inc
mov
ljmp
gs
repz
or
dec
jns
fisubrs
pop
les
push
inc
dec
in
mov
or
pop
pop
mov
jne
jae
xor
and
in
inc
or
out
inc
mov
jbe
xor
addr16
xor
jg
adc
adc
ljmp
mov
in
loope
pop
dec
xchg
pop
xor
sbb
pushf
cmpsb
lahf
mov
xor
dec
push
pop
and
dec
sub
sbbb
sub
mov
inc
push
and
mov
and
out
dec
pop
sti
loop
mov
jnp
push
mov
and
mov
xor
hlt
mov
add
popf
imulb
xchg
xchg
rolb
das
bound
xchg
and
add
jl
icebp
cmpsb
hlt
divl
stc
cmp
sub
data16
mov
pop
cwtl
jae
or
xorb
xchg
clc
insb
jg
mov
mov
push
sbb
das
sbbb
lcall
sub
std
inc
aam
sbb
xchg
in
inc
lock
adc
bound
fwait
or
mov
mov
loop
call
mov
push
movsb
scas
mov
scas
push
sub
sarl
sub
test
mov
push
gs
mov
dec
leave
xchg
sbb
jmp
hlt
fnstcw
es
fs
daa
dec
mov
mov
sbb
mov
and
fnsave
scas
xchg
mov
jo
xlat
push
jns
push
out
mov
adc
leave
mov
sbb
sbb
or
adc
push
adc
sbb
insl
sub
orl
pushf
mov
test
add
lea
testl
sbb
cmp
jae
mov
mov
xor
xchg
lea
pop
push
push
xchg
aas
lret
imul
push
inc
xchg
xor
scas
mov
in
jnp
add
sahf
hlt
mov
pushf
push
mov
shrb
int
dec
sub
test
mov
jb
xor
iret
test
leave
mov
call
inc
imul
dec
dec
xorl
ljmp
dec
jo
scas
lods
xchg
cltd
sbb
xchg
push
dec
adc
mov
xchg
in
les
push
dec
shrb
stos
mov
adc
mov
or
cmp
xchg
sbb
adc
cmpsl
adc
dec
aam
pop
mov
and
sbb
adc
test
xchg
ss
inc
dec
lods
fistpll
cld
mov
rsqrtps
push
cmpsl
cs
nop
mov
add
sbb
cmpsl
jnp
adc
dec
repz
mov
call
jb
inc
aad
repnz
sub
icebp
test
jb
cs
scas
xchg
mov
sub
adc
mov
and
pop
xchg
sahf
inc
aam
push
mov
dec
mov
jp
xchg
mov
mov
pop
pop
shll
adcl
add
repz
repnz
mov
insb
movl
lret
mov
sbb
mov
lcall
cwtl
sbb
inc
ljmp
push
das
inc
outsb
sbb
in
or
negl
cmpsb
mov
sub
mov
ds
add
and
dec
call
aam
jo
add
or
pop
int3
and
mov
mov
cmpsl
repnz
xchg
cs
sub
push
add
or
test
aad
sahf
les
and
sub
daa
mov
imul
es
mov
sbb
mov
cmpsb
sub
push
ljmp
mov
cmc
xchg
cmp
mov
sbb
add
fcmove
pop
insl
jno
pop
leave
bound
or
js
mov
or
mov
aad
mov
cwtl
add
cmp
sub
add
or
mov
imul
es
les
adc
ss
pop
testb
insb
cmpsl
pop
xchg
push
jl
popa
rorb
movsb
loope
pop
cmpsl
sbb
adc
popf
mov
jl,pn
outsl
mov
sti
cmp
daa
inc
sahf
pusha
push
fsubrl
aaa
stos
jmp
loope,pt
int
inc
cli
add
xchg
xorb
movsl
xor
adc
outsl
mov
xor
push
movsb
insb
mov
xchg
js
adc
push
or
adc
lret
repnz
orb
daa
push
sub
cmp
scas
cmp
aaa
sahf
pop
movsb
dec
test
pop
adc
rcpps
aaa
ljmp
sub
and
jns
gs
jbe
sbb
cwtl
lock
dec
in
and
stos
lds
int
mov
adc
fsts
jbe
in
mov
leave
movsl
gs
cs
or
cwtl
push
adc
mov
stc
out
cmp
mov
pop
and
dec
push
or
mov
lret
inc
sbb
pushf
push
push
insb
jge
popa
or
mov
pusha
loopne
pop
decl
clc
loop
xchg
adc
cmpsl
fdivrl
icebp
xor
ljmp
mov
or
and
mov
sbb
and
mov
test
out
int3
jnp
sahf
sub
pop
in
mov
jp
hlt
js
xor
clc
aaa
cmc
jge
sbb
ret
hlt
jp
jo
mov
test
or
mov
aam
pop
push
pushf
mov
push
mov
shll
pop
mov
ljmp
aad
icebp
je
mov
pushf
fdivrl
xchg
inc
test
sti
and
xor
adc
jle
jecxz
sbb
enter
loopne
push
push
stos
fs
leave
movsl
pushf
sub
sub
pop
push
dec
jmp
adc
jmp
add
add
js
movsb
movsb
arpl
jne
ljmp
cld
xchg
sbb
dec
lock
push
lret
iret
sbb
rep
inc
pop
sub
sti
xor
loop
movsb
das
jns
in
xlat
addl
sbb
mov
dec
enter
shll
cmp
jo
push
push
lea
sub
cmpl
insb
dec
ds
jle
jmp
aaa
test
cmpb
mov
cmp
xchg
outsb
cmc
movsb
movsl
cltd
fwait
inc
pop
adc
pop
ret
mov
cwtl
mov
adc
dec
cmp
inc
scas
add
mov
push
test
call
loop
push
in
jb
movsl
inc
cwtl
int
jnp
or
sbb
leave
xchg
jecxz
mov
or
das
mov
fisubl
test
pop
pushf
nop
dec
mov
cld
dec
sbbl
bound
jecxz
test
xor
insl
push
ljmp
lds
and
pusha
inc
xchg
popa
dec
jnp
int
push
jno
insl
or
mov
ret
cmp
mov
clc
mov
idivl
cmp
adc
inc
inc
and
outsb
dec
iret
mov
scas
call
xor
int
fs
jb
ret
jns
push
aas
inc
imul
jmp
cmp
out
push
mov
test
loopne
cmp
adc
cmp
rcr
sbb
es
jecxz
outsb
cmpsb
sbb
or
das
jo
or
scas
mov
sbb
sbbl
pop
sti
in
jp
pop
mov
ret
push
and
mov
arpl
mov
push
xor
les
and
addr16
sbbl
sbb
or
and
pushf
cld
sub
cmp
gs
pop
aaa
repnz
lea
outsb
xor
xchg
inc
and
iret
pop
pop
stos
imul
push
push
jle
sahf
fcomps
xor
xchg
out
dec
daa
xor
je
add
sahf
call
roll
loope
xor
hlt
cwtl
and
mov
aam
mov
orl
dec
mov
xchg
mov
popf
xor
inc
xorb
jmp
jmp
mov
pop
incl
xor
mov
cmp
sahf
or
mov
dec
addr16
mov
icebp
xchg
outsl
inc
push
mul
loopne
lods
sub
loopne
xor
mov
inc
ret
cld
imul
lods
int3
jl
insb
mov
add
rcr
divl
jmp
cltd
sbb
mov
push
lret
mov
call
mov
push
cmp
xchg
test
subb
mov
cltd
mov
icebp
or
cmp
jmp
adcb
bound
shll
or
ljmp
dec
lock
leave
dec
cwtl
cmp
dec
pop
xor
xchg
out
movsb
xlat
jne
repz
lret
das
jne
mov
nop
sub
int
inc
out
jae
js
sub
arpl
mov
or
xchg
stos
repnz
mov
imul
out
fistl
les
dec
jp
and
int
imul
jns
daa
cmp
mov
push
lea
dec
jmp
cld
xor
in
xchg
popa
cmp
cwtl
lods
sbb
cmc
nop
pop
fcomip
popf
xchg
pop
adc
lahf
mov
adcb
and
jb
cmp
and
test
fbstp
jne
mov
in
cmp
mov
shll
add
inc
test
push
mov
cmp
ret
out
sbb
xchg
out
cli
rclb
cmc
mov
incb
and
in
sahf
subb
stc
push
fsubrl
lods
jne
nop
mov
movsb
int3
int
std
mov
mov
mov
mov
xchg
pop
enter
lret
gs
cmp
stc
mov
popa
out
cltd
pop
testl
test
cmpsl
dec
or
frstor
fistpll
and
lcall
mov
into
rcr
jp
jnp
leave
mov
inc
sti
mov
push
pop
jle
xchg
push
mov
out
stos
jb
outsl
xchg
cmpsl
sbb
scas
mov
sbbl
gs
stos
inc
push
sub
fcoml
lret
je
lea
subl
or
das
xor
pop
incl
mov
mov
xor
insb
xor
lods
mov
push
mov
popf
xchg
leave
sub
add
pop
aad
dec
push
pop
add
adc
sub
ja
push
push
push
xchg
fsts
scas
loop
mov
mov
nop
cli
bound
add
push
lahf
arpl
or
scas
add
cltd
lret
xchg
out
hlt
mov
shll
jnp
pushf
xchg
cmp
xchg
sbb
adc
or
and
pop
add
mov
je
aas
pop
xchg
or
aaa
push
leave
mov
push
cmovp
push
cmpsl
sub
test
adc
mov
or
sub
movsb
arpl
mov
mov
pop
fldcw
rcrl
add
or
loopne
scas
sahf
mov
add
aad
mov
not
add
jb
pop
pop
nop
fstps
imul
jbe
dec
lret
aaa
cwtl
sbb
inc
push
dec
pop
mov
outsb
pop
insl
gs
repnz
stos
out
cmp
into
xorb
and
call
ljmp
inc
xchg
mov
and
stc
aam
jge
sti
xchg
and
and
addr16
inc
pushf
dec
lcall
sbb
pop
pop
add
dec
xchg
popf
cmpsl
in
cmp
lods
loope
add
pop
pop
js
ja
stc
pop
pop
ret
out
mov
jne
pop
fwait
outsb
test
inc
ss
cltd
mov
sbb
add
or
mov
push
data16
or
jae
jmp
aaa
fwait
out
push
shll
push
call
sub
mov
cmp
nop
push
lock
cmpsb
in
aaa
sub
or
mov
xchg
scas
lcall
or
popf
jl
cmc
into
ja
int
pop
cmp
rolb
scas
jg
mov
push
push
repz
fisttps
jno,pt
and
mov
bound
imul
repnz
icebp
mov
mov
loopne
lods
sar
sbb
mov
mov
sbb
popf
enter
dec
outsb
lds
lahf
adc
jo
sahf
imul
enter
ljmp
pop
xchg
and
pop
sbb
add
fstps
dec
lret
jle
jo
cld
xor
clc
and
inc
ljmp
fstps
mov
or
sbbl
dec
mov
dec
mov
sub
mov
movsl
fildll
inc
jno
rcr
cli
sbb
dec
nop
lahf
xor
dec
pop
cmp
lcall
xchg
hlt
je
repz
sar
mov
jns,pn
push
inc
test
add
clc
test
mov
add
cmp
icebp
cmc
jo
xor
and
mov
sbb
clc
pushf
inc
jbe
insb
dec
and
and
jmp
add
sub
or
mov
cmpb
pop
adc
mov
add
push
cmp
mov
jle
adc
xor
cmc
xchg
int
push
sub
adc
xor
pop
rcrl
adc
test
dec
shlb
xor
cmp
mov
stc
gs
rcr
ror
test
push
addr16
or
sbb
jecxz
testl
aas
sub
and
xor
int3
jl
or
cmpsl
sub
jmp
sub
jae
sti
pop
rcrb
lds
jb
push
lcall
out
test
sub
icebp
test
call
loop
adc
fistpl
xorb
pop
sub
xor
add
in
add
or
je
ljmp
popa
stos
jb
push
sti
add
sahf
cmp
mov
adc
jge
push
fcomi
add
mov
ret
sub
lods
mov
and
inc
addl
inc
dec
aas
xchg
sti
and
stc
stos
mov
dec
pushl
or
inc
cmp
dec
or
cmp
into
insl
mov
mov
mov
test
sahf
movsb
in
stos
ljmp
mov
xchg
scas
out
mov
mov
jmp
jns
xchg
xor
mov
xchg
push
or
repz
xchg
leave
xchg
xor
lret
mov
pop
mov
fldln2
insl
movsl
mov
dec
scas
xlat
or
jnp
popf
mov
sbb
aad
popf
fildll
cmpsl
or
push
shrl
pusha
je
add
xor
orl
sub
or
pushl
dec
fldl
pusha
xlat
push
push
xor
mov
iret
push
or
or
mov
pusha
stc
push
xor
mov
inc
das
jnp
aad
adc
jb
adc
lret
ror
movsb
xchg
lds
or
mov
inc
insl
push
cwtl
imul
pushf
inc
adc
add
in
das
test
xchg
ja
addr16
and
mov
adc
pop
pop
sbb
ret
in
mov
imul
add
cld
mov
call
cmpsl
fstpl
lret
sahf
mov
jmp
xchg
cmp
fldcw
fmull
or
mov
out
push
lods
adc
push
stc
add
lea
pop
cmpl
inc
popf
push
or
enter
in
mov
gs
adc
jmp
push
sbb
mov
mov
inc
add
cltd
xor
mov
aaa
lods
test
lods
stc
fidivl
stos
jb
xchg
jl
sub
mov
adc
fisttps
icebp
push
push
out
stos
push
and
cmpsb
adc
pushf
add
push
sub
fiaddl
jne
or
dec
lods
mov
and
sbbl
sbb
int
lea
inc
shrb
cmc
icebp
pop
fimull
pop
dec
mov
cmp
push
jmp
pop
mov
test
pop
lods
lock
adc
dec
mov
sbb
mov
and
xor
xor
pushf
subb
push
das
out
stos
lahf
pop
xchg
or
daa
xchg
lret
pusha
addb
xchg
or
out
mov
test
sub
sarl
jp
test
add
xchg
bound
stos
sbb
rcrl
in
lahf
xchg
movsb
jns
fwait
sub
sub
insb
push
dec
clc
push
scas
pusha
or
ficoms
test
outsl
jae
lods
pusha
int3
mov
ljmp
dec
mov
sub
cmp
pusha
int3
xchg
dec
loopne
mov
or
mov
movsb
mov
dec
pop
push
out
leave
int3
inc
js
ret
cmp
call
test
repz
push
or
cmpsb
cmpsl
push
sbb
pop
fldenv
xchg
negl
das
shll
fwait
aad
add
xor
cli
stos
or
fcoml
leave
hlt
adc
pusha
hlt
popa
jl
dec
cld
fisttpll
loope
mov
adc
idiv
mov
mov
and
mov
dec
cwtl
adc
loope
push
mov
mov
dec
add
mov
mov
cmp
ljmp
add
xchg
pop
pop
sbb
xchg
sti
out
nop
push
xchg
xor
shrb
out
jl
imul
jns
xor
inc
test
leave
lods
or
add
mov
and
int
je
rcr
adc
push
fwait
jno
mov
negl
out
adc
sahf
aad
imul
sbb
or
xor
jle
dec
jns
jg
jp
insb
xor
jno
fdivrs
mov
sub
ret
imul
outsb
mov
stos
fstps
fs
lock
mov
aam
adc
sti
cltd
sahf
lods
xor
insl
jnp
int
jl
mov
lea
mov
mov
cld
mov
rcrl
and
sub
insb
mov
fwait
rcr
xor
sbb
jo
insb
mov
jmp
js
int3
sub
rcrl
leave
mov
dec
jo
jg
push
ljmp
dec
push
add
and
jns
ja
loop
ja
push
insb
jle
and
pop
sbb
fstl
jge
pop
pop
shll
setp
cmp
ret
mov
pop
ret
inc
push
inc
mov
adc
xor
mov
movaps
cmpsb
repnz
sbb
push
js
xchg
xor
fadd
fcomip
sbb
lea
lret
jbe
dec
daa
mov
cmp
movsl
pop
test
sub
jg
lcall
in
add
cmpb
and
stc
adc
and
ret
cmp
iret
adc
mov
xchg
pop
cli
outsb
pusha
jl
andb
cmp
js
add
push
sub
adc
lds
aam
sub
test
pop
sahf
push
pop
enter
push
test
push
jmp
cs
inc
xor
mov
jmp
popf
lret
adc
sub
cmp
cli
mov
repnz
or
mov
fwait
test
add
mov
and
out
push
push
push
and
popa
test
addr16
movsb
outsb
enter
mov
adcb
adc
xchg
ljmp
pop
hlt
aaa
nop
imul
or
hlt
pop
aas
mov
cmp
jp
repnz
idivl
mov
iret
into
and
mov
shrb
stos
pushf
fucomi
int
inc
cld
sbb
nop
repnz
arpl
pusha
mov
sbb
pop
ds
inc
std
jnp
popf
insb
jno
adc
sbb
or
dec
inc
test
dec
shl
les
addr16
add
pop
cli
stos
dec
out
jmp
xorl
pusha
push
lret
filds
mov
sub
push
pusha
out
mov
loopne
push
add
mov
push
mov
pop
xchg
out
or
outsl
out
mov
pop
inc
jns
xchg
mov
mov
data16
daa
mov
mov
mov
lret
xchg
lods
jbe
fisubrl
xchg
imul
cwtl
sub
push
xor
fwait
inc
idivb
data16
mov
add
xchg
mov
xchg
push
in
mov
in
pop
mov
push
iret
sub
outsb
push
push
fcmovnb
xchg
int3
mov
loopne
ret
ret
sub
scas
push
sub
cli
aad
jo
xor
pop
mov
jae
lock
cli
sbbb
ret
dec
dec
mov
and
fs
dec
aad
out
inc
popa
in
sbb
std
xchg
lods
cld
mov
mov
push
inc
add
movsb
cltd
addr16
sub
sub
incl
add
xchg
mov
imul
aas
xor
push
js
sub
sub
repz
cmp
lahf
sub
jns
mov
lds
add
insb
jle
or
pop
stc
push
adc
mov
imul
jb
jg
stc
xchg
popf
es
xor
push
negb
scas
sbb
mov
les
lock
inc
out
std
add
xor
inc
lcall
jns
test
aad
jl
cwtl
sbb
mov
fwait
mov
mov
mov
outsl
hlt
push
mov
ss
add
icebp
mov
sbb
sbb
aad
push
call
dec
mov
xchg
xlat
aam
hlt
push
pop
scas
jg
sub
clc
stos
sub
movsb
ss
pushaw
jge
rcrb
sub
fcoms
mov
jb
mov
data16
lods
mov
and
dec
insb
mov
pop
xchg
pushf
push
mov
jle
mov
jne
xor
dec
cmp
cmp
cmp
add
mov
push
push
jmp
das
aad
iret
xchg
cmpsl
adc
ja
cmp
push
mov
xor
stos
iret
inc
xor
imul
pop
mov
adc
inc
loopne
test
push
stos
in
add
addb
das
xorl
sbb
and
arpl
mov
inc
cmp
jns
sub
out
mov
or
lea
cs
sub
outsb
or
xchg
xchg
mov
mov
add
and
jne
pop
inc
or
ret
jno
cwtl
and
mov
cmpsl
out
bound
push
sarb
test
nop
xchg
fildll
loopne
inc
jmp
add
les
sti
jp
lret
aam
lods
lret
out
add
out
mov
adc
inc
movsl
mov
sbb
movsl
push
fimuls
adc
sbb
jmp
dec
out
mov
sbb
fisttpl
int3
jge
aas
lahf
add
daa
jp
xchg
mov
sbb
xchg
enter
or
pop
mov
iret
pop
inc
fs
push
scas
adc
out
lods
mov
push
sub
inc
mov
xor
cmp
insb
lret
push
mov
insl
pop
call
lods
or
mov
or
insl
sub
adc
sti
test
sti
sbb
push
push
xor
add
cmpsl
popa
mov
test
add
out
adc
ds
inc
push
push
jne
mov
shrl
fwait
inc
in
outsl
in
nopl
addr16
bound
rorl
test
jbe
xchg
fcomi
mov
lea
insl
stos
popl
and
xchg
mov
clc
js
sbb
cmp
mov
addr16
adc
jno
xor
shr
add
sub
push
mov
pushf
dec
shll
push
jecxz
je
xlat
repnz
sar
xor
inc
xchg
adc
sbbl
in
arpl
mov
sbb
cmovnp
push
sub
xor
push
or
mov
push
lock
mov
movsb
sti
inc
aaa
push
xlat
cli
adc
mov
lds
jnp
pop
jmp
lret
fsubrl
sbb
cld
mov
mov
enter
mov
sbb
lods
enter
repz
mov
add
outsl
aad
das
sub
push
leave
dec
sub
mov
pop
mov
add
or
mov
out
mov
xchg
dec
xchg
stc
dec
mov
pop
movsb
scas
mov
push
hlt
push
iret
fistpll
fsubl
xchg
movsl
mov
inc
xchg
push
inc
js
mov
push
jno
psubb
rcrb
or
test
cmp
pop
call
jg
mov
adc
dec
adc
cmp
nop
sbbl
xorb
imul
lea
sub
int3
mov
add
gs
jno
mov
push
and
loope
insb
loope
addr16
repnz
dec
pop
in
mov
enter
push
push
rol
and
inc
adc
sub
insb
lods
push
and
inc
sahf
movsl
arpl
call
outsb
ret
fnclex
int3
std
inc
or
push
inc
xchg
xor
xchg
mov
es
out
movsl
pop
shrb
pusha
icebp
aam
pop
sub
xchg
stos
outsl
or
sbb
mov
mov
mov
xor
push
pop
arpl
test
shr
mov
aaa
xchg
std
inc
sbb
test
ja
xor
xchg
sbb
xor
and
fs
cltd
ja
cltd
cmp
xchg
incl
adc
jecxz
mov
and
sbb
add
mov
xor
in
aad
and
mov
in
mov
jmp
les
loop
mov
mov
es
dec
pop
mov
push
fmuls
xchg
cli
test
clc
shlb
insl
clc
aad
push
xor
and
ljmp
sbb
xor
dec
mulb
inc
inc
jge
push
jge
cld
mov
pop
jne
push
pop
call
jo
scas
jge
sbb
jns
inc
add
xchg
gs
add
or
notb
pop
ret
scas
ffree
cltd
mov
outsl
lcall
mov
xchg
pop
cmp
jb
std
imul
lds
xor
rcrb
xor
cmp
hlt
lods
lods
mov
in
jb
mov
movsb
xchg
xor
add
insb
xchg
dec
jae
lods
loope
mov
std
aas
ret
push
lcall
jl
xchg
lds
scas
push
pop
jecxz
es
cmp
sub
pop
arpl
mov
cs
mov
test
ds
add
push
jno
xor
out
xchg
sub
hlt
pop
jg
bound
test
pushf
jg
cmp
and
cmp
sbbl
or
and
bound
stos
call
jbe
fidivrl
push
and
fdivs
jno
push
mov
repz
imul
xlat
xor
stc
mov
mov
mov
jne
mov
push
cmp
jg
outsl
pop
mov
inc
stc
mov
jno
jae
or
push
fcmovnb
pop
xor
loop
inc
imul
xor
in
and
insb
pusha
mov
add
stos
dec
pop
cltd
insb
loope
js
mov
dec
das
test
mov
pusha
and
sahf
mov
pop
lcall
push
xor
decb
jae
cmp
es
bound
aaa
cmpsl
push
push
add
addr16
inc
rcll
les
jo
xor
clc
xchg
add
sti
mov
pusha
xlat
popa
and
call
push
mov
inc
sbb
pushf
pop
mov
xor
cld
cmp
push
push
int
or
push
push
mov
and
rcll
mov
ficomps
fbstp
inc
jns
jno
sub
xchg
jnp
push
mov
mov
mov
add
aam
arpl
lods
pushf
cld
cmp
xchg
lock
mov
jmp
sbb
into
mov
scas
adc
pop
enter
adc
dec
dec
jmp
and
fs
or
jecxz
movb
fmull
ja
xor
aam
inc
pop
jbe
xchg
ret
pop
shl
cmpsb
xor
lret
fs
in
dec
aam
cmp
adc
fidivrs
mov
jnp
std
cmpsl
adc
jp
xchg
scas
adc
jecxz
pop
pop
sub
sub
sbb
inc
pushl
cmp
pop
sti
lods
adc
cmp
mov
pop
dec
and
and
idivb
inc
iret
insb
bound
lcall
loopne
out
dec
leave
jp,pn
mov
arpl
mov
push
int
pop
xor
jno
adc
cmp
out
mov
cmp
stos
mov
and
sbb
adc
imulb
fsubrs
dec
shrb
inc
xchg
imul
in
fistpll
mov
push
push
in
push
sbb
push
mov
dec
and
adc
add
insl
movsl
or
jmp
cmpb
sbb
lret
stos
insl
notl
xchg
jecxz
adc
mov
adc
pushf
bound
scas
or
pop
push
jnp
imul
pop
es
and
leave
add
xorl
arpl
into
mov
jb
xchg
pop
pop
jge
cmpsl
lock
sub
popf
daa
hlt
in
ss
sub
pop
std
xchg
negb
arpl
sti
sub
fdivrl
mov
fcompl
dec
in
lods
std
mov
clc
stos
adc
mov
jne
inc
and
je
das
cmp
pop
inc
lret
adc
push
jne
clc
push
push
pushf
cmp
ret
pop
push
adc
inc
mov
in
mov
ret
rorl
out
push
jns
mov
in
in
je
dec
pushf
mov
loop
mov
insl
mov
frstor
fistl
cltd
ss
push
mov
pushf
push
scas
pushf
xor
enter
loop
xchg
cmp
inc
xchg
cmp
mov
add
mov
cmp
jmp
xlat
inc
test
fs
lods
loopne
push
cli
lahf
nop
inc
mov
add
fsubr
mov
and
and
sbb
push
sbb
out
into
mov
xor
addps
fsubs
lods
mov
pop
jns
dec
sbb
dec
xor
cmp
cmp
pop
jle
jl
aas
jo
jecxz
fiaddl
adc
jne
sub
scas
push
add
arpl
mov
adc
sbb
mov
sbb
lahf
jmp
xchg
xchg
hlt
sbb
call
out
mov
add
add
jp
sarb
loopne
loope
clc
ljmp
jle
xor
lahf
mov
jnp
iret
mov
stos
add
jge
push
inc
es
xchg
iret
xchg
xchg
push
push
je
ja
aas
daa
mov
pop
sbb
test
js
adc
mov
lock
and
lret
fwait
test
inc
sbb
fmul
inc
mov
in
xchg
lret
int
cmp
aaa
aaa
movsb
adc
es
jecxz
and
mov
or
mov
pop
mov
in
call
insl
push
sub
scas
data16
dec
mov
jge
scas
adc
jl
jns
jbe
out
repz
repz
addl
arpl
pop
inc
test
stos
fsubl
dec
sbb
add
fldcw
mov
jbe
out
and
rcrb
dec
in
mov
sbb
xor
mov
sbb
and
aaa
sbb
out
stos
aam
adc
adc
shlb
mov
or
mov
arpl
pusha
dec
push
xor
cmp
pop
mov
movsb
jb
xchg
and
mov
adc
loop
call
sub
dec
pop
mov
mov
lds
or
mov
hlt
jmp
inc
mov
xchg
sub
out
lret
in
test
gs
cmp
sub
sbb
stos
sub
sub
jp
inc
adcb
loopne
pop
imul
fs
jle
lret
mov
push
ds
mov
or
cmc
sub
outsb
or
clc
dec
movups
xlat
jb
push
mov
dec
popl
mov
lods
test
jecxz
mov
add
jb
divl
mov
aaa
add
icebp
mov
arpl
pop
lcall
pop
and
int
cmp
fsubrl
out
sbb
add
inc
xchg
loope
loopne
ret
xchg
push
xor
mov
js
mull
dec
aam
hlt
out
fsubrl
out
xor
pop
jns
and
mov
in
test
pop
adc
add
lock
sub
ficomps
scas
movsl
leave
push
aaa
sbb
or
shll
mov
adc
mov
pop
xchg
and
rorb
mov
mov
adc
sahf
or
cmp
inc
jge
popa
adc
xchg
dec
test
stos
inc
call
mov
xor
dec
mov
les
cmp
dec
xor
mov
xchg
mov
in
jbe
fimull
dec
popf
in
jmp
jp
push
mov
or
jo
or
pop
inc
add
idiv
push
in
mov
jg
pop
paddusw
das
ret
xchg
jg
stos
cmp
lds
sbb
orl
pop
leave
cmovle
mov
xchg
scas
jmp
sbb
fmuls
addr16
ljmp
mov
roll
mov
bound
and
in
idivb
jmp
rcrb
pop
rolb
mov
cmc
shrb
adc
movsl
add
cmp
call
or
cmp
sbb
sub
lret
sbb
sub
nop
std
lods
pop
cs
push
inc
lods
mov
out
fstps
or
imul
xchg
xor
sarb
pop
cwtl
lods
ljmp
das
mov
pop
fstl
adc
les
bnd
les
fcompl
mov
lods
shlb
adc
sub
cmp
rolb
subl
xorl
pop
scas
in
aas
push
pop
std
mov
xor
adc
rolb
pop
sbb
stos
mov
mov
jmp
fwait
arpl
pop
and
pop
movsl
mul
add
mov
and
stc
xchg
inc
jne
fistl
mov
push
mov
xchg
pop
sub
shll
nop
imul
popf
and
mov
inc
je
mov
mov
gs
stos
aam
dec
ss
ds
xchg
jle
fnstsw
adc
divb
pop
lahf
lods
lret
les
out
mov
inc
xchg
fcompl
jno
adc
cmp
lcall
ss
add
mov
outsb
cltd
mov
punpckldq
repnz
stos
or
sbb
inc
xchg
push
ja
shlb
inc
bound
mov
lock
pop
pop
dec
insl
in
jmp
les
popa
mov
shl
fildl
fs
aas
inc
je
cmp
and
cmp
jmp
ss
icebp
popa
jbe
jns
adc
mov
mov
sbb
push
movsl
in
mov
mov
cmc
aam
cwtl
aas
bound
add
mov
sbb
mov
mov
pushf
and
mov
stos
mov
mov
std
adc
add
and
std
xor
xlat
xchg
mov
jae
sbb
scas
pop
fsubrl
shl
jo
push
cmp
fnstsw
std
xlat
inc
adc
test
and
mov
adc
sahf
lock
testb
lret
and
fwait
mov
loopne
mov
push
inc
repnz
pop
adcb
mov
out
repz
ljmp
or
xchg
inc
jo
sbb
aaa
sub
ljmp
sbb
cmp
fdivl
sti
hlt
mov
push
push
adc
loop
and
jl
adc
mov
mov
mov
push
test
cmp
leave
dec
pop
jmp
fnstsw
insb
scas
mov
jmp
imul
mov
mov
ljmp
ds
xchg
adc
outsl
and
push
jle
push
nop
sarb
mov
pop
aad
inc
jne
lret
mov
pop
out
and
fcoml
ja
xchg
mov
daa
mov
jge
pop
mov
xlat
pop
xor
add
jnp
sbb
mov
and
ss
add
mov
fcmove
jo
pop
mov
jo
das
inc
xor
daa
add
fprem
insb
adc
inc
push
xchg
arpl
cli
inc
mov
sub
jne
xor
or
adc
mov
pop
adc
sti
scas
insb
adc
sub
mov
or
mov
mov
sbb
push
sti
rorb
inc
jle
push
int3
pop
or
pop
add
xchg
fdivr
sub
imul
fidivrs
ret
enter
add
jmp
inc
sub
fnstenv
ds
mov
jo
lds
mov
fsts
loope
movsb
dec
outsl
add
test
jnp
les
dec
pop
xchg
mov
add
fstps
fstps
inc
lds
or
mov
clc
cld
mov
lret
push
sbb
push
fdivs
pushf
push
xchg
mov
outsl
pop
inc
mov
mov
mov
jg
int3
push
test
idivl
pop
push
and
push
push
movsl
scas
mov
mov
xchg
ds
aad
cld
les
xor
popf
mov
lock
push
outsb
arpl
mov
scas
and
mov
std
xchg
sub
rclb
repz
sbb
mov
ds
scas
cmpb
stos
sti
ficoml
mov
push
push
xchg
lock
cmpsb
xchg
sbb
mov
xchg
imul
add
div
cld
fiadds
mov
movzwl
negb
sahf
loopne
cmpsb
rolb
push
xor
adc
icebp
or
lea
xchg
pop
or
lahf
pop
addr16
je
cmpsl
cltd
out
inc
mov
imull
rorb
and
pusha
xchg
scas
jno
movsl
mulb
push
lcall
dec
cmp
jbe
dec
gs
daa
jp
push
sti
fisubrs
es
and
fisttpll
mov
adc
dec
in
cmp
daa
ret
hlt
hlt
mov
fisttps
fists
js
mov
inc
lahf
mov
jo
out
jno
sbb
mov
fs
outsb
or
jo
jecxz
mov
push
and
fistl
ljmp
mov
jo
fsubp
push
mov
fs
push
mov
jg
rcrb
sub
mov
sub
cs
shlb
iret
popa
jl
imul
aaa
cmp
adc
push
mov
mov
cmc
mov
ja
xor
cmp
inc
stos
mov
push
jmp
or
ljmp
pop
push
dec
mov
push
sar
or
or
pop
mov
cmp
add
fcmovb
xchg
shll
popf
pop
mov
mov
mov
xchg
jle
xchg
adc
jle
mov
lcall
call
scas
pop
sbb
mov
imul
mov
call
sbb
push
add
ljmp
arpl
pop
testb
add
call
jl
dec
cli
test
dec
aam
leave
stos
jmp
or
sti
pushf
dec
cmp
or
cmp
lea
jmp
sub
xor
pop
cmpsl
sbb
jl
jp
mov
aaa
push
and
push
sbb
scas
adc
mov
fistl
xor
add
mov
shl
cwtl
bnd
cmp
mov
add
inc
add
inc
pop
cwtl
push
sbb
lret
dec
icebp
cmp
inc
ret
push
xor
pop
ds
sub
popa
icebp
pop
stos
inc
fwait
mov
pop
outsl
cmpsl
stc
pop
mov
les
adc
inc
xchg
xchg
xor
sbb
leave
jge
subb
sub
and
fs
mulb
push
rolb
cmp
push
push
cli
cmpsl
xchg
popa
inc
lods
sahf
push
mov
roll
mov
or
cwtl
inc
add
ret
loop
scas
pop
add
gs
jae
jne
repz
das
xor
inc
or
sub
push
ds
cltd
dec
movsl
add
jno
add
push
mov
add
and
and
push
pop
shll
xchg
sahf
in
dec
scas
mov
fstpl
xchg
and
jg
mov
test
fiaddl
sub
fldl
mov
divb
test
pop
mov
cmc
pop
popa
xlat
adc
in
and
fs
jecxz
inc
mov
inc
pop
andb
or
cmp
xchg
mov
xchg
shlb
outsb
push
push
and
fwait
sub
adc
sub
or
fwait
lock
push
adc
in
ss
lds
dec
pushf
cli
push
xchg
leave
sti
movsl
mov
cmp
jno
movsl
shlb
add
addl
xor
aaa
fs
pop
inc
mov
icebp
sahf
negb
push
and
mov
sbb
jle
cmpl
popf
jg
adc
jmp
inc
inc
xchg
jecxz
mov
jmp
mov
lods
mov
int3
pop
and
outsb
jmp
int3
xchg
ror
pop
loop
popf
lea
cmpsl
jmp
dec
mov
fdiv
out
dec
pop
push
xor
dec
push
mov
sbb
stos
fs
pop
inc
in
jecxz
inc
loope
jbe
sbb
jmp
daa
lock
adc
popa
in
mov
ror
and
out
sbb
sub
dec
jmp
daa
or
stc
mov
vpmaxub
addr16
sti
pusha
test
and
fcoms
mov
enter
scas
xor
dec
or
fnstsw
and
cld
gs
push
or
scas
jbe
mov
cmpsb
ja
jo
pop
into
insb
jl
push
pop
div
sbb
repz
lods
dec
push
jns
loop
gs
jns
mov
nop
mov
mov
pop
rcl
loope
test
mov
testl
enter
lods
out
rcrb
sub
movsb
notl
xor
aam
cmpsb
xchg
add
clc
das
pcmpeqb
outsl
xor
jmp
sbb
adc
push
andb
inc
cld
or
adc
pop
add
cmp
xchg
sub
fwait
add
jne
or
cli
push
push
mov
lahf
dec
pop
add
je
into
je
lret
das
xor
cmp
inc
cmp
lds
add
in
add
outsl
shl
push
loope
or
into
in
test
inc
cmp
cli
xor
jnp
and
fwait
sbb
out
pushf
adc
lods
jbe
popf
jne
cmp
ljmp
test
ret
sub
mov
divb
jge
mov
sub
imul
cmp
int
popf
inc
call
push
pop
jne
cs
nop
aam
test
ljmp
nop
jmp
jp
and
jl
mov
pusha
lret
cmp
andl
lea
cld
adc
stos
mov
dec
aas
andl
fnstcw
enter
add
mov
ret
loop
add
js
adcl
es
jne
inc
jno
loop
and
xchg
xchg
jne
cwtl
xor
push
ljmp
pop
neg
fdivrl
test
push
rorl
xchg
shlb
xchg
sbb
fadd
stos
cmp
popf
in
or
in
xchg
adc
in
xchg
enter
jns
lret
bound
pop
xor
mov
cmp
or
xor
mov
dec
push
stc
iret
jnp
pop
test
lahf
sti
popa
jmp
insb
out
cli
or
push
std
jl
push
int3
and
mov
xchg
lahf
not
stos
mov
adc
mov
inc
lods
mov
adc
fdivrs
arpl
push
or
daa
dec
inc
clc
notb
insb
jb
mov
stos
aaa
jecxz
mov
xor
jmp
add
xchg
clc
daa
sbb
sbb
imul
adc
cmc
push
fsubrl
call
mov
cmc
inc
cmp
inc
sub
xor
lods
js
xor
in
or
inc
sarb
sti
popf
and
jmp
add
dec
rorb
out
pop
sahf
push
enter
rclb
push
les
fistl
call
cmc
mov
push
mov
pop
xchg
and
outsl
mov
rcrl
sti
inc
sbb
sub
mov
std
bnd
mov
jae
pop
pop
cmp
popa
prefetch
imul
rolb
out
xor
pop
xorb
lds
int3
or
xchg
push
push
push
mov
jg
lret
imul
mov
mov
xchg
int
mov
adc
xor
adc
repz
cmpsb
mov
les
fisttpl
ficomps
aas
mov
lods
inc
mov
adc
push
xor
aad
lods
xchg
jle
lahf
mov
in
aad
sbb
popf
xor
fcomps
xor
enter
je,pt
insl
in
dec
sub
mov
dec
cmp
out
mov
mov
cli
pusha
dec
lds
cltd
add
push
movsb
les
push
lea
mov
sbb
xchg
pop
jb
out
es
lds
mov
sahf
jno
cltd
sub
xchg
add
xlat
out
adc
addr16
roll
pop
dec
jge
jno
dec
push
jmp
cmpsb
inc
xor
mov
mov
arpl
push
jmp
repz
leave
cmpsl
lahf
pop
popa
adc
cli
test
adcb
aam
cmc
add
cli
mov
add
jmp
mov
mov
call
aaa
cmp
lret
es
xchg
xchg
das
jg
fistl
in
jbe
rorb
or
mov
push
sub
dec
adc
add
fs
das
nop
clc
cmpsb
mov
aas
xlat
xchg
insb
aad
sub
andl
test
xchg
and
pop
add
or
fimuls
jge
adcb
addr16
movsl
cmp
jge
xchg
sub
pop
cmpsl
mov
testb
dec
mov
ds
and
xchg
mov
imul
push
lcall
movsl
push
ficompl
or
pop
mov
or
outsb
jae
lret
cs
das
mov
and
mov
add
push
loop
movsb
fnsave
std
adc
shll
push
lds
in
xchg
ds
mov
dec
divb
inc
in
xor
dec
sub
jae
pop
inc
lcall
mov
jp
scas
add
jecxz
mov
mov
shr
pop
pop
inc
hlt
dec
inc
mov
cltd
pop
mov
testb
mov
sub
xchg
push
mov
push
stc
loopne
and
pusha
lahf
mov
jl
movsb
ret
rolb
notb
pop
adc
int
push
icebp
shl
repz
pop
aam
and
or
jo
leave
cmp
cmpsl
mov
jae
ss
loopne
push
sti
ret
xchg
pop
lret
pushf
sub
xchg
cwtl
cmpsl
out
xchg
pop
jae
sbb
es
mov
sti
rcrb
out
shl
lret
jg
mov
roll
xor
lret
inc
dec
cwtl
icebp
stc
mov
movl
test
add
cld
dec
sahf
stc
and
sbb
rcrl
pop
sub
push
push
dec
jns
or
dec
insl
bound
mov
dec
and
cmp
jae
push
push
push
out
imul
addb
pop
mov
push
push
jbe
adc
dec
xor
xlat
lahf
xor
inc
push
and
inc
jnp
cmc
add
lahf
popa
orl
notl
imul
pusha
pop
push
xchg
cmp
lahf
sbb
int3
lahf
sbb
push
sub
clc
ret
lods
push
std
jbe
jmp
inc
mov
imul
push
or
rcrb
ja
outsb
xchg
xchg
push
and
dec
pop
mov
xchg
out
jl,pn
adc
dec
std
cmp
jp
adc
lahf
jle
aad
or
out
mov
in
cmp
icebp
push
movsb
sbb
or
mov
mov
out
mov
pushf
loopne
pop
jle
jnp
push
fidivrl
ret
shlb
mov
leave
out
jns
jns
jo
inc
xchg
mov
dec
stos
push
arpl
imulb
aaa
push
pop
mov
and
lods
push
push
dec
hlt
inc
daa
xor
jne
aad
mov
fstpt
xor
lds
pop
movsl
inc
xchg
cld
jns
add
arpl
ja
inc
pusha
pusha
inc
xchg
push
cmp
fs
inc
or
fsubrl
imul
aas
push
mov
dec
push
xchg
dec
repz
fmull
out
mov
mov
addb
popa
rcrb
xchg
or
inc
mov
sbb
inc
add
or
jmp
fld
cs
mov
mov
mov
mov
insb
lcall
cmp
cmp
aas
aam
jb
inc
jo
push
clc
mov
mov
aaa
ret
mov
mov
ffreep
dec
inc
repz
pop
pop
jne
xchg
out
repz
mov
ret
mov
xor
push
jns
adc
jmp
fcompl
push
dec
mov
scas
aas
mov
pusha
sahf
out
jle
xorl
fistps
mov
push
pusha
jno
inc
lock
jns
bound
mov
mov
lods
and
scas
push
adc
rcrl
mulb
rolb
push
movsl
into
test
fcompl
ja
dec
adc
stos
xchg
mov
scas
test
push
lahf
subl
xor
cld
fwait
push
xor
popa
cld
shlb
mov
fdivl
shl
shl
fwait
sub
clc
cmp
or
cld
test
jl
cmp
dec
sub
dec
cmp
push
mov
xchg
pop
adcb
and
fstpt
cmp
mov
ss
mov
and
pusha
xchg
arpl
dec
fwait
das
inc
gs
mov
push
nop
pop
xchg
js
addr16
pop
fdivl
inc
and
sub
jle
jb
iret
jae
ljmp
dec
xlat
sahf
jb
loopne
fsubs
and
fidivrl
shr
imulb
mov
testb
call
dec
clc
mov
mov
out
sub
push
or
fists
cmp
es
jl
ds
out
add
mov
sbb
dec
pop
leave
cmp
push
mov
repz
lds
xor
test
sub
sbb
push
mov
addr16
cmp
xor
mov
pusha
sti
add
jecxz
jg
rep
mov
adcb
push
sahf
mov
dec
mov
sbb
jmp
jb
scas
xor
lock
push
sbb
and
imul
mov
pop
xchg
leave
push
push
mov
outsb
loope
and
dec
testl
sub
mov
stc
cmp
mov
test
daa
lock
jne
mov
dec
rol
xacquire
mov
out
jl
and
fimull
add
sarl
mov
sbb
xor
popl
cmpsb
sub
inc
andb
testl
pop
mov
inc
pop
pop
sbb
push
dec
mov
lret
pop
pop
lret
movsl
mov
pop
jns
mov
push
imul
xchg
and
adc
hlt
mov
jl
or
pusha
xchg
sub
push
int3
or
mov
cmp
xchg
icebp
cmp
shl
add
jb
pop
push
in
jp
xor
or
popa
inc
fwait
jge
cmp
mov
adc
fiaddl
xchg
out
or
movsl
jb
mov
les
pop
mov
dec
imul
jmp
pop
xchg
add
pop
outsb
jnp
insb
je
mov
mov
cld
mov
jmp
scas
pop
inc
in
outsb
mov
mov
imul
inc
lcall
push
push
in
scas
mov
xor
xchg
orl
mov
les
cs
movsb
sub
mov
ds
inc
add
repnz
fsubl
repz
cmp
cmp
mov
sub
popa
fidivrl
data16
adc
sti
jae
mov
jnp
push
and
or
or
mov
fsubs
aas
fadd
inc
iret
les
sti
pop
cmp
jae
sub
sbb
and
sbb
push
lret
in
mov
insb
fistpll
and
adc
js
push
into
dec
sub
mov
ret
pop
adc
cmp
rcll
and
loope
imul
roll
push
cs
and
xchg
arpl
inc
adc
call
loopne
dec
jg
loop
inc
js
push
jge
adc
repnz
push
push
cmp
dec
add
xor
das
loopne
adc
mov
lods
sub
jmp
sub
adc
push
mov
mov
enter
pop
adc
enter
fdivrl
pop
pop
ret
fdivrl
sub
xor
xor
std
pop
lahf
iret
stos
mov
rclb
scas
sbb
je
pop
std
cmp
aas
and
lea
xchg
adc
lcall
fwait
ljmp
lods
xlat
stos
repnz
xor
je
in
adc
mov
lods
cmc
xchg
sbb
fs
andl
shlb
ret
mov
jno
xchg
sbb
push
fidivs
shlb
inc
or
aas
add
fildll
jp
add
mov
testl
lods
inc
cwtl
xchg
sbb
cmpsl
xor
pop
jmp
adc
lds
std
add
sbb
cmp
shll
jmp
dec
adc
mov
jno
mov
inc
sbb
loope
cwtl
dec
xor
cmp
fdivrp
cwtl
push
cmp
fnstsw
cmc
and
loope
mov
lods
sub
add
gs
jge
js
shrb
and
mov
inc
mov
movsl
xor
xchg
jb
jae
add
testb
sarl
ret
xchg
jb
sub
das
mov
scas
insb
lret
sbb
pushf
pop
fldenv
ficompl
fldl
ljmp
mov
cltd
inc
popa
inc
xor
icebp
push
and
in
dec
es
cmp
mov
icebp
push
xchg
pop
cmp
mov
fimull
dec
cmp
out
rorb
fdivrp
adc
mov
call
mov
scas
imul
cmp
and
mov
ds
fimuls
sub
cmp
jb
fldenv
dec
repnz
and
xchg
cmp
pop
mov
repz
or
imul
xchg
hlt
scas
in
sub
pop
jp
iret
sbb
push
push
cmp
push
sti
jns
xchg
pop
hlt
xchg
cmc
aam
addr16
mov
and
cld
insb
xchg
inc
dec
dec
mov
ljmp
mov
addr16
cmp
jle
test
jg
mov
xchg
movups
std
aas
push
cmpsb
leave
negl
das
jnp
in
jae
fsubrs
xchg
dec
pop
push
lret
dec
sbb
movsb
aam
xor
loop
into
jne
pop
lds
dec
xchg
dec
aad
negb
js
popa
iret
loopne
pop
cli
sbb
pusha
loopne
mov
inc
mov
push
or
aad
add
jmp
sbb
jp
mov
push
mov
inc
add
psubw
fwait
lea
mov
cmp
fiadds
adc
or
lcall
dec
pop
fildll
add
in
popa
out
add
call
or
sub
ja
mov
pop
push
adc
js
jbe
shll
or
hlt
jns
in
jbe
sub
jae
jmp
pop
mov
loopne
sub
jae
cli
xchg
cmpsl
push
sub
cmp
leave
dec
repz
cmp
and
in
mov
subb
xchg
xchg
xchg
test
mov
test
mov
std
movsb
addr16
add
adc
addr16
add
pop
int
xor
add
mov
inc
xorb
xchg
pop
mov
aad
fsts
call
push
xchg
out
jnp
xchg
jae
js
dec
test
hlt
xor
xchg
xchg
mov
ret
jo
cmc
jle
insl
aaa
push
adc
popf
stos
rorb
scas
mov
out
xchg
mov
sarl
or
adc
add
mov
arpl
int3
mov
pop
cmc
sarl
repz
in
jmp
mov
pop
sahf
pop
mov
popl
mov
int3
jae
jne
dec
imul
loopne
xor
xchg
nop
add
sbb
add
dec
ret
adc
mov
xor
xchg
cmpsl
fwait
shrb
mov
or
roll
mov
loop
vmovaps
ficompl
or
mov
cs
mov
inc
mov
inc
mov
push
shll
inc
cmp
mov
loopne
mov
mov
cltd
stc
into
pop
add
lea
mov
int3
jmp
xor
mov
call
fists
lret
mov
push
shll
sahf
push
in
mov
mov
repz
loopne
push
popf
sub
int3
pop
clc
xchg
mov
push
cmp
in
test
shll
inc
push
cmp
rolb
jmp
mov
imul
mov
jmp
pop
in
add
push
mov
notb
dec
pop
aam
mov
insl
cmp
lods
cmp
xor
stos
cmpsl
inc
xor
push
popa
gs
jmp
rcl
or
push
repz
scas
insl
ljmp
mov
pop
push
scas
loop
mov
push
xor
and
imul
pop
in
cli
leave
push
xchg
or
mov
pop
pop
ljmp
push
mov
bound
scas
into
xchg
push
pop
lods
fs
pop
pop
cld
xor
xor
sbb
adc
mov
mov
push
sbb
ret
cmp
scas
mov
and
xor
stos
add
sub
scas
and
arpl
jns
xor
cmp
sub
mov
loope
jmp
pushf
loope
repnz
sub
inc
iret
cmp
rcrl
push
addr16
and
clc
mov
xchg
out
or
ljmp
in
loopne
and
arpl
fdivrl
aam
push
mov
push
pop
add
lea
daa
aam
lock
pop
outsl
push
cmc
les
adc
xor
hlt
dec
aas
das
add
xchg
dec
sbb
xlat
cmc
xor
loope
clc
gs
mov
sbbl
lock
sbb
cmp
loopne
dec
out
fcoml
sbb
mov
sar
cmpsl
sub
pusha
push
shrb
std
mov
jecxz
xchg
ret
pop
mov
or
enter
push
psllw
push
cmp
mov
xchg
xor
sbb
inc
fst
in
sub
inc
inc
add
push
dec
fidivrs
cmpsb
std
rorb
aad
pop
mov
ficoml
push
inc
jae
push
stos
inc
jg
les
dec
push
movsl
xor
xchg
cmpl
sbb
dec
fldl
je
aaa
addr16
push
add
mov
mov
lret
int
pop
jbe
in
jge
cltd
pop
mov
scas
mov
dec
data16
cmpsb
fistpll
int3
push
xchg
jno
test
add
mov
mov
int3
xor
adc
xchg
pop
or
mov
leave
xchg
xor
mov
adc
mov
out
xor
xor
sbb
mov
mov
ret
arpl
xor
pushf
lcall
fistpll
repnz
rol
fldl
dec
mov
outsb
das
xorl
loopne
scas
in
push
iret
aas
xchg
imul
inc
ficoml
adc
fdivs
ss
shrl
movsl
stos
xchg
sti
jecxz
mov
xchg
lds
int3
adc
outsl
ja
insl
mov
stos
mov
jne
sti
mov
push
adc
pop
and
ja
jge
adc
in
dec
and
ffreep
add
or
pop
sahf
das
loopne
pop
xchg
pop
jecxz
mov
and
sub
pop
add
mov
cmp
add
in
jne
inc
push
mov
mov
ds
jae
movsb
adc
pop
jb
ss
cmc
jmp
sahf
add
xchg
inc
and
jae
movsl
icebp
xchg
repz
add
lahf
xor
jge
jne
mov
cmp
and
ja
pop
in
sbb
or
loope
dec
xchg
pop
insl
into
ret
push
xchg
imul
jmp
aad
in
cmc
mov
push
stos
arpl
mov
xchg
clc
sti
ret
bound
clc
roll
mov
out
dec
fsts
mov
inc
popa
icebp
jle
loope
out
int3
cwtl
cmp
mov
cmp
fs
push
jmp
cwtl
outsb
movsb
iret
je
out
or
sub
add
test
dec
jns,pn
push
xchg
imul
in
pop
jmp
push
xor
cmp
pop
repnz
stc
xchg
fcmovnbe
std
inc
sbb
test
inc
adc
movsl
dec
aaa
cmp
imul
adc
dec
cmp
push
cltd
dec
mov
adc
out
cmp
ss
push
or
leave
mov
cmpsl
btc
add
xchg
inc
pop
or
out
pop
and
mov
or
jae
xlat
xor
mov
test
cmp
lcall
aad
dec
idivb
sub
vzeroupper
movsl
imul
xor
orl
cmp
out
and
pop
test
jl
pushf
pop
mov
or
shlb
xchg
pop
cmp
push
add
xor
mov
sbb
xor
mov
loop
pop
jo
test
pop
dec
popf
sbb
lods
dec
stos
inc
imul
mov
inc
push
sub
pop
bound
xchg
adc
clc
push
dec
popf
mov
push
jo
call
push
subb
sub
lahf
imul
enter
icebp
mov
jg
gs
fwait
test
in
popf
add
call
outsl
dec
loopne
push
mov
imul
xchg
jl
dec
popa
es
mov
inc
andb
scas
std
cmp
mov
mov
arpl
aas
int
adc
push
cs
stc
pop
mov
pop
stc
push
call
adc
push
lcall
xchg
ljmp
repz
push
or
xor
dec
jle
das
pop
xchg
out
xchg
dec
sub
jg
adc
notb
enter
out
loope
adc
sub
inc
outsb
in
pushf
xor
pushf
jbe
adc
push
push
jnp
xor
daa
or
push
or
fidivs
cmp
jnp
pop
pop
dec
mov
xchg
dec
fmulp
sub
fadds
fcmove
sub
sahf
test
jg
add
daa
arpl
les
pop
mov
out
sub
sub
fsubl
fdiv
mov
cli
leave
es
push
mov
fmull
mull
lock
add
pop
cmp
fldt
cmpsb
std
test
jecxz
mov
pop
pop
mov
pop
repz
fdivrs
cmp
enter
nop
popa
repz
sub
xchg
add
dec
adcb
mov
sbb
sarb
stos
xchg
jge
mov
xchg
mov
mov
repnz
mov
lods
add
cld
es
or
sarb
cwtl
xor
mov
mov
lods
gs
or
jmp
pop
repz
lret
test
fisttps
push
fistpll
jbe
rcr
adc
sbb
jecxz
outsl
dec
mov
mov
bound
lcall
mov
loopw
jge
outsl
mov
mov
scas
enter
sub
jno
cmp
sub
mov
inc
xchg
inc
add
pushf
mov
or
pop
sarb
pop
jge
outsb
rep
lret
add
jmp
icebp
inc
jecxz
ds
push
mov
and
pop
lods
test
jae
jne
ss
mov
out
mov
arpl
sarl
jno
or
or
adc
sub
mov
je,pn
into
sub
push
add
aad
outsb
push
jae
in
outsl
fistl
xor
ficompl
hlt
cmp
leave
dec
xchg
loope
inc
stos
shlb
pop
adc
ret
jo
cmpsl
mov
adc
pop
outsb
mov
and
sbb
lret
test
rcr
push
cmpsb
aam
lea
xor
int3
jmp
add
pop
push
dec
cmp
aam
out
or
lret
sub
fwait
xor
cld
int
fsubs
popf
sub
adcl
cli
xchg
lahf
xchg
adc
and
and
mov
out
sti
loope
xchg
fs
push
aas
mov
pop
push
stos
insl
xchg
cmp
cmp
dec
jbe
sbb
cmpsl
lcall
int
adc
mov
pop
dec
mov
push
je
subl
xchg
repz
jmp
aaa
adc
mov
decb
movsl
lahf
mov
sbb
dec
sbb
xchg
mov
inc
std
add
mov
int3
xchg
mov
dec
lcall
xlat
dec
cmp
adc
fs
out
mov
or
jmp
fdivs
dec
jp
test
or
je
push
sbb
jae
xor
sbb
mov
out
xchg
xchg
mov
mov
rcll
lock
scas
pushf
jg
mov
in
addr16
pop
sbb
cld
jmp
inc
ss
add
out
or
int
add
cltd
xor
lods
imul
push
push
stc
jle
lret
daa
jle
jo
ror
jns
iret
or
lods
insl
insl
mov
test
out
test
push
scas
push
lret
cltd
dec
lods
fwait
dec
arpl
scas
xchg
and
or
rorb
jle
iret
gs
add
and
aam
and
in
mov
test
fcoml
mov
dec
pop
push
dec
or
mov
test
inc
ret
mov
aam
push
outsl
push
nop
or
repz
push
inc
sbb
sti
sub
inc
cmp
inc
jp
push
sub
xchg
cmp
jle
sub
stos
lods
fisttps
insl
mov
scas
das
arpl
or
xor
inc
leave
xor
rcrb
cs
xchg
enter
jne
cwtl
sahf
jbe
lret
subb
mov
pop
cli
sti
mov
inc
mov
outsl
jl
xchg
test
fs
dec
inc
outsb
les
mov
dec
dec
out
lret
or
pop
mov
cwtl
mov
or
mov
cmp
shrl
mov
and
loopne
repnz
in
pushf
adc
out
adc
cld
sub
xchg
jg
xchg
stos
stc
bound
xchg
addb
aam
pusha
data16
testb
in
cmp
xor
pop
imul
fcomps
scas
ljmp
bound
popf
dec
dec
inc
xchg
push
dec
rolb
push
sub
in
ds
pop
into
jnp
add
out
fadd
pusha
lahf
fldenv
clc
push
outsl
imul
adc
push
neg
lods
fs
inc
adc
cmpsl
add
mov
nop
test
add
dec
clc
bound
pusha
adc
aaa
ffree
aas
push
push
pop
ficomps
and
pop
std
shlb
xchg
in
push
push
or
stos
lcall
mov
and
mov
adc
jae
es
sbb
pop
push
pop
test
loope
xor
mov
movsb
stos
jns,pt
pop
int3
pop
insl
into
pop
dec
xor
xchg
mov
mov
in
fildll
inc
mov
into
and
and
cmp
sbb
jge
push
xchg
add
movsl
or
sub
add
xchg
mov
push
cld
xchg
dec
add
mov
pop
adc
inc
cmpsb
mov
fisttps
pop
add
jle
sahf
cmp
popa
fldcw
ds
and
cli
lock
lret
xchg
loopne
fists
cmpl
xchg
fucom
cltd
cmp
popf
inc
outsl
stos
xchg
mov
lahf
inc
or
mov
or
fimull
xchg
inc
aas
scas
mov
les
iret
roll
pcmpeqw
inc
je
cmp
cli
sbb
pop
cmp
jecxz
ja
lcall
inc
arpl
xchg
subl
inc
and
push
mov
ret
adc
and
cld
or
add
xchg
adc
mov
pusha
sub
loopne
push
and
adc
insb
pop
or
loope
out
cmp
xchg
je
lcall
aad
stc
lods
rcll
dec
cmp
fistl
and
pop
mov
stos
test
and
dec
jl
xor
ret
add
iret
sahf
jl
mov
fisttpl
ffreep
mov
push
sub
shlb
xchg
sub
pop
or
mov
mov
out
lcall
jns
and
sub
arpl
movsl
push
sbb
or
daa
dec
outsb
div
sete
dec
adc
pop
lcall
xlat
negl
test
jae
xchg
pushf
scas
pushf
aas
stc
scas
scas
test
jl
out
lods
cli
dec
jo
inc
pop
xchg
das
and
inc
fucom
mov
repnz
jnp
sbb
jbe
adc
add
fnsave
pop
dec
mov
cli
gs
rcrl
movsl
je
sbb
pop
push
push
mov
or
jecxz
movsb
mov
push
addr16
adc
sub
popf
into
out
inc
jb
popf
icebp
inc
jno
nop
mov
push
dec
adc
dec
mov
aad
sub
sar
dec
jge
movsb
sub
mov
leave
jo
xor
push
fistps
jp
imul
out
sbb
or
mov
mov
lds
and
sbb
mov
daa
mov
fisubs
addr16
or
inc
push
xchg
mov
call
push
and
std
jns
mov
fistl
test
xchg
andl
enter
or
xlat
adc
in
std
loopne
cmp
and
std
add
fdivrl
ja
ret
lcall
and
pushf
jbe
test
mov
inc
insl
cmp
push
fldt
jo
insl
rcl
mov
addr16
adc
sahf
sarb
jle
pop
pop
cmp
xchg
iret
jle
outsb
rolb
mov
mov
movsl
stos
adc
outsb
in
cld
xchg
add
push
lea
sub
mov
scas
xor
adc
movl
and
fsubs
adc
lcall
ds
and
push
cmpsl
xchg
lods
je
or
dec
mull
add
test
sahf
jecxz
lds
add
ret
fstps
dec
or
ljmp
imul
stc
insb
stos
js
xor
iret
les
and
clc
imul
ds
or
loop
fcoms
sti
xorl
push
mov
mov
std
push
push
mov
das
imul
fs
dec
inc
inc
ljmp
and
push
or
pop
scas
in
adc
xor
insl
bound
popf
movsb
pop
and
lock
pusha
dec
jae
jp
mov
mov
mov
jae
cmp
cmp
loope
inc
push
mov
lods
outsb
aad
arpl
pop
cmp
jg
in
inc
inc
cmpsl
in
iret
cmpsl
mov
jecxz
testb
adc
inc
out
leave
push
loop
fcmovb
movlps
mov
push
sub
mov
out
sbb
pminub
xchg
sub
dec
ret
movsb
adc
sbb
mov
popf
shr
test
cmp
pusha
stos
rcl
cmp
sub
mov
ss
jge
sub
push
dec
and
inc
std
addl
fdivl
in
daa
pop
insl
jno
jno
push
out
movsb
cmpsb
imul
pop
adc
ret
push
adc
in
xchg
or
or
hlt
adc
pop
int3
outsb
mov
aam
mov
fildl
ficompl
mov
repnz
dec
push
mov
push
add
sbb
pushf
mov
shll
push
gs
in
jp
std
mov
in
xor
rcrl
adc
arpl
push
and
mov
sbb
pop
out
sub
or
sbb
scas
out
and
inc
pop
push
add
enter
mov
lcall
mov
rcrb
test
out
nop
sbbl
jmp
bnd
jo
mov
subb
out
or
pop
std
sahf
push
xchg
dec
jne
ret
shlb
xchg
cmp
mov
mov
lret
lret
jl
mov
outsb
mov
mov
ss
orb
pop
mov
ss
adc
mov
es
push
pop
mov
je
sub
push
mov
setne
pushf
out
xor
inc
test
lea
pop
mov
stos
mov
xlat
cltd
movsb
aaa
loop
mov
outsb
pop
hlt
or
mov
outsb
movsb
mov
cmc
or
xor
repz
or
jmp
les
push
daa
xchg
aaa
sub
es
hlt
or
cld
inc
cwtl
sti
aaa
insb
adc
mov
cmp
pop
push
jmp
jbe
call
inc
xchg
push
rolb
loope
ret
cmp
push
sub
lahf
xlat
cmp
outsl
imull
mov
aam
cmpsb
rcl
subb
scas
in
lret
xor
xchg
rclb
dec
inc
sbb
test
mov
ret
cmc
int3
rolb
mov
jmp
or
aam
aas
inc
sub
mov
add
mov
lock
lret
mov
enter
aas
jne
adc
cmp
mov
gs
stos
mov
lods
sbb
clc
xchg
dec
ljmp
lds
lcall
lahf
aas
scas
and
jnp
sbb
mov
add
repz
inc
inc
sbb
inc
pusha
xchg
mov
and
in
dec
ret
and
gs
inc
cld
bound
dec
aaa
test
arpl
cmp
add
xor
fcmovnu
ret
adc
xor
ret
xchg
stos
pop
xor
sahf
arpl
pop
mov
iret
mov
sub
iret
jbe
jno
lods
dec
jl
clc
mov
xor
mov
mov
or
rcr
xchg
cmpsl
mov
mov
mov
das
jecxz
jns
ret
dec
pop
mov
repz
mov
push
in
xor
mov
mov
mov
das
sarl
pop
sub
stc
sub
xor
fcompl
xchg
ja
push
xchg
aaa
cld
insl
xor
in
sub
pushf
aad
mov
jp
add
imul
push
sub
test
fldt
sbbb
and
int
popf
mov
pop
call
cli
lods
out
lea
push
add
mov
sub
jo
lret
xchg
or
mov
inc
inc
adc
jne
adc
inc
pusha
push
and
ds
ss
jl
outsl
loope
sub
mov
and
push
repz
enter
and
mov
add
adc
push
jnp
push
push
add
sbb
mov
pusha
push
sbb
jo
push
xor
xchg
jle
inc
iret
and
push
adc
popf
addr16
mov
ds
mov
mov
in
xchg
inc
call
es
enter
xchg
add
notb
xor
imul
dec
sub
push
and
les
lods
push
xchg
xchg
cmpsl
or
xchg
add
jmp
mov
lods
cmpsb
add
mov
or
dec
pop
outsb
pushaw
clc
push
daa
jne
jns
imul
sbb
and
subl
ja
cld
push
sahf
popa
imul
pop
stos
pop
in
push
mov
mov
popa
sahf
pop
push
loope
subb
dec
rcr
push
cmc
jge
adc
repz
mov
fidivs
push
sti
test
ljmp
mov
push
imul
das
inc
jmp
xchg
leave
cmp
cld
loope
icebp
lcall
sub
xlat
hlt
mov
leave
hlt
xor
repz
inc
mov
cmp
rclb
jns
loopne
mov
or
aas
pop
dec
jns
fldenv
jmp
sbb
enter
mov
fdivr
rcll
jbe
enter
aas
adc
test
sbb
jne
jle
add
cwtl
lahf
iret
dec
sub
mov
jae
orb
je
jge
push
sbb
push
loop
fs
sti
in
scas
call
mov
ljmp
push
push
jnp
pop
pushf
popf
adcl
lock
loop
mov
clc
lcall
xor
icebp
add
jmp
pop
loope
mov
cmp
insl
shr
iret
cli
cmc
inc
push
pop
mov
cwtl
sub
xchg
shrb
or
out
es
cmp
sbbb
xchg
cmp
jge
sbb
sarl
mov
xchg
push
add
out
ret
xchg
sarb
or
dec
and
mov
push
dec
fdivl
mov
test
imul
insl
mov
push
lcall
mov
sbb
inc
push
pop
popa
dec
inc
push
rcrl
mov
ljmp
aas
ljmp
je
fisubrs
add
lret
repz
cld
jno
xlat
cltd
add
loopne
adc
lret
add
push
xchg
movsb
xchg
ret
inc
xor
xchg
mov
sbb
pushl
jmp
jge
in
mov
insl
cmc
xlat
push
insb
mov
pop
dec
cli
pop
dec
pusha
scas
xlat
sbb
jecxz
cld
inc
sub
cmp
cs
jg
sub
cltd
fidivs
ss
adc
mov
adc
testb
mov
dec
mov
sbb
pop
cmp
jmp
cltd
mov
xor
mov
xor
adc
or
mov
ds
clc
shrb
mov
add
xchg
leave
stos
jne
push
pop
inc
int3
and
sbb
negl
ficomps
jmp
lock
xchg
mov
sub
sahf
jbe
int
adc
popf
insl
dec
nop
daa
dec
cwtl
scas
lods
js
mov
dec
clc
test
pop
shll
dec
xor
add
jnp
inc
xor
add
cmp
bound
loopne
fnstenv
pop
and
ja
hlt
test
xor
mov
scas
std
movsl
sub
daa
mull
int
and
clc
mov
push
in
xchg
in
xor
and
out
outsb
cmp
nop
xchg
loop
mov
dec
loope
xor
mov
rcrb
adc
int
push
fsubs
fbstp
outsl
and
ljmp
adc
out
mov
movsl
mov
shlb
movsl
adc
repnz
out
add
jp
xchg
add
shlb
outsb
xor
imul
fsubrs
pushf
fwait
dec
cmpsb
push
add
jg
dec
pop
sbb
push
add
fimuls
push
aaa
movsl
sti
sti
mov
in
cmc
jno
popa
nop
cmpsl
fs
dec
jno
xor
push
mov
mov
add
movsb
jle
and
adc
mov
adc
or
mov
push
xchg
mov
jle
fimull
cmp
sub
fwait
mov
mov
xor
jo
jg
push
mov
testl
rolb
fcoml
and
pusha
pop
push
movsl
in
hlt
mov
dec
jo
test
in
mov
out
xlat
dec
mov
xor
push
lret
mov
xor
and
add
mov
rolb
mov
add
loope
push
mov
lods
mov
add
add
inc
rorb
jb
push
stc
pop
sti
or
es
xchg
mov
push
jo
ret
mov
sahf
sti
or
aaa
xchg
jge
je
call
adc
xchg
cmp
mov
xchg
dec
and
add
jl,pt
addb
cli
pop
cmp
dec
inc
cmp
cltd
jl
mov
aas
jb
push
push
and
in
mov
jnp
repnz
xor
xor
jne
int
inc
cmp
mov
push
pop
decl
dec
mov
cmp
cmp
gs
sub
stc
mov
pop
popa
jb
pop
sbb
mov
std
mov
xor
xchg
iret
in
mov
cmp
sarb
shll
je
mov
sub
into
lods
sub
and
std
cmp
ds
lahf
add
fisttps
ljmp
fistpl
push
pusha
or
inc
repnz
inc
rep
cmp
inc
nop
cwtd
push
sub
pop
addb
shlb
cmpb
adc
sbb
dec
gs
js
mov
xchg
insb
xor
das
xchg
cltd
les
mov
add
loopne
imul
adc
fwait
mov
and
cmpsl
xlat
adc
cmp
jnp
stc
vminpd
cmp
add
lods
sub
xacquire
test
out
jle
stos
jmp
and
cs
mov
fiadds
loope
jnp
adc
mov
or
into
test
in
sbb
xchg
pslld
stos
xchg
pop
pop
add
xor
les
push
and
mov
sub
dec
js
sub
xchg
sahf
fisubrl
jns
mov
cmp
cmp
outsl
cmp
arpl
out
mov
and
xchg
insl
dec
sbb
cwtl
mov
jecxz
ret
inc
ja
xor
int3
add
jbe
sbb
cmp
mov
test
daa
inc
sbb
inc
daa
enter
out
dec
scas
xchg
push
shr
outsb
pop
aam
loop
xor
insl
aaa
es
dec
stos
fsubrl
cmp
imul
push
lock
stos
xor
cmp
add
add
bound
and
imul
inc
fistpl
ret
push
add
shl
ljmp
inc
or
test
mov
xor
je
fnstcw
ret
adc
push
inc
inc
leave
mov
add
jb
aad
dec
cmp
out
cmpsb
aas
cmpsl
sub
sbb
jecxz
clc
push
cmp
xor
adc
adc
push
mov
aam
jo
aas
sarb
testl
sti
mov
jb
add
xchg
iret
loope
jge
pop
and
movsl
std
call
rorb
or
ja
or
pop
inc
jb
xor
inc
push
adc
jbe
cltd
stos
sets
sbb
ret
out
xchg
xchg
mov
xor
fildll
and
cmpsl
jl
mov
andl
sub
movsb
loop
enter
shrb
fwait
inc
add
inc
mov
jbe
cltd
jg
out
pop
xchg
dec
mov
repnz
fists
js
ljmp
outsb
cmpsb
adc
and
fwait
ss
loopne
or
mov
inc
dec
sahf
leave
arpl
sub
mov
out
pop
jbe
les
pop
in
insl
xor
xchg
in
mov
cmp
stc
cmp
pop
fcmovbe
shll
dec
cmp
pop
add
jae
xor
shll
or
xchg
test
ja
bound
push
pop
sqrtps
dec
dec
sbb
lods
xor
mov
xchg
outsl
or
gs
xor
cltd
movsb
or
sahf
je
inc
cltd
sbb
inc
pop
dec
push
lcall
mov
in
xchg
popf
int3
cld
and
loopne
cmp
inc
dec
testb
pop
mov
mov
mov
jecxz
fisttps
xlat
xchg
pop
andb
sti
aam
in
hlt
dec
mov
mov
das
dec
lret
add
out
cmp
fmul
adc
jnp
in
shl
orl
arpl
jecxz
sbb
cwtl
aaa
pop
or
xchg
hlt
negl
outsb
fdivr
pop
fcoml
xchg
call
mov
dec
rorl
cmp
icebp
add
mov
lcall
rcll
fnstenv
mov
dec
mov
mov
and
das
popf
test
iret
pop
rcrl
mov
pop
add
add
mov
jnp
lock
addl
dec
jbe
ficompl
sbb
cmp
dec
or
xor
rolb
xchg
mov
dec
mov
xchg
mov
and
adc
loop
and
daa
jae
cwtl
xor
movsl
mov
stos
lock
pop
rclb
data16
pushl
enter
out
lret
nop
setns
stos
add
imul
mov
push
lock
sub
fincstp
pop
xchg
push
push
loop
aas
mov
add
jecxz
ss
push
push
aaa
cltd
pop
shll
xchg
xchg
sti
cwtl
lds
lods
mov
into
sub
push
push
stc
jmp
xor
repnz
aam
fwait
jl
test
and
pop
push
inc
icebp
fwait
add
sub
jb
movl
xlat
mov
cmp
subb
cmpsb
xchg
popf
loopne
loop
adc
pop
lods
orb
decb
in
jbe,pn
adc
mov
sub
pop
pushf
sahf
data16
rcrb
push
div
leave
ret
jae
insb
push
push
pop
xchg
adc
arpl
cmp
sub
xor
push
jbe
inc
and
push
adc
jb
push
add
shrl
lahf
je
rcrl
push
adc
xchg
pop
push
jne
out
adc
jmp
shrb
shll
add
nop
pop
add
jge
test
and
data16
std
mov
mov
mov
loopne
push
insb
sub
dec
loopne
mov
hlt
cs
dec
push
sub
insb
aaa
lock
pop
cmpsb
pop
adc
addl
in
je
scas
dec
int3
hlt
and
pusha
xchg
aas
leave
and
lock
adc
inc
and
mov
outsl
push
mov
pusha
fidivs
iret
push
hlt
mov
fndisi(8087
out
arpl
push
roll
clc
sahf
jns
sub
jo
sti
adc
lahf
jo
sbb
inc
test
xor
mov
push
sub
daa
add
pop
rorl
push
std
aaa
inc
pop
pop
lret
mov
notl
int
mov
cmp
push
sahf
dec
cld
fistl
inc
lods
mov
notl
hlt
in
inc
jae
pop
rorl
out
jbe
push
and
scas
mov
loop
sbb
adc
dec
inc
mov
jmp
and
jge
call
cmc
je
push
cmc
mov
in
cmp
js
push
pop
cmpps
or
inc
sbb
fdivr
and
out
mov
push
pop
cmc
outsl
ja
or
mov
push
cmpl
imul
out
ret
mov
out
xlat
daa
mov
ds
xchg
jg
mov
and
jl
sti
dec
outsl
fcomip
lds
adc
outsb
mov
dec
cmc
addl
or
xchg
and
xchg
xor
ret
mov
xchg
aad
sbb
pop
leave
paddb
lahf
cltd
or
loopne
mov
cs
push
pop
add
inc
push
movsl
mov
cmp
data16
in
sbb
dec
icebp
repz
xchg
loop
cmp
xchg
pop
dec
xor
mov
lds
adc
mov
xor
push
pop
jecxz
ds
push
cmp
out
imul
fldcw
outsl
cmp
inc
int
pop
out
xor
lret
lds
jbe
daa
aaa
insl
xchg
cmpsb
rclb
jmp
bound
inc
gs
cmp
and
mov
out
cmp
imul
fbld
push
inc
ljmp
cmpsb
mov
mov
icebp
int3
or
cmpsb
repnz
stos
sub
lcall
dec
xor
push
inc
popa
cmp
xchg
mov
cmp
fidivrs
mov
mov
mov
dec
mov
jne
push
mov
or
inc
lods
iret
jle
ret
loop
shrl
xor
lock
pop
push
xchg
pop
in
icebp
push
inc
inc
and
add
arpl
stos
cmp
cmpsl
ljmp
pop
ret
sti
aam
cmpsl
loop
in
jg
arpl
and
mov
adc
and
loop
rcl
decb
popa
and
andb
popf
das
lcall
icebp
scas
shlb
mov
js
pop
mov
iret
popf
js
sbb
sub
push
test
nop
xor
pop
rclb
sti
mov
mov
sbb
push
dec
scas
xlat
fistpl
push
xchg
pop
xor
adc
push
shlb
and
mov
stos
imul
fsub
imul
push
fs
enter
cmp
sub
cmp
push
cltd
bound
sbb
jb
shlb
jge
pop
cli
mov
pushf
jecxz
jno
jne
les
sub
sbb
leave
lahf
push
adcb
imul
aas
lea
xchg
dec
and
mov
dec
dec
aad
cmpsb
and
dec
cwtl
ljmp
push
iret
inc
pop
push
in
cwtl
xchg
adc
pop
ljmp
mov
or
in
xor
repz
mov
dec
out
xor
cmpsb
xor
push
aad
jp
sbbb
dec
icebp
icebp
mov
dec
mov
sub
lret
xchg
gs
adc
dec
pop
mov
ja
shl
xchg
ret
pop
ja
push
mov
fstl
adc
hlt
js
in
mov
comiss
fadds
or
jo
and
or
fdivrs
mov
jns
in
movsb
pop
nop
cmp
jmp
xchg
icebp
jle
pop
sub
adc
lret
lods
inc
jno
in
mov
bound
dec
popa
push
cmp
fcomps
adc
dec
movsl
mov
ret
adc
pop
pop
sub
fwait
cltd
mov
popl
xchg
jbe
xor
sub
clc
sti
xor
out
mov
add
and
stc
enter
cmp
stc
sub
cmp
jge
sbb
push
xchg
mov
sub
xor
sbb
in
inc
mov
inc
push
negb
sub
and
lods
popf
cmpsl
and
cmpsl
adc
cltd
and
stos
f2xm1
pop
sti
mov
pushf
cmp
dec
jbe
insl
into
sub
mov
lock
lds
fistl
push
movsl
in
mov
add
cld
push
push
and
add
jp
out
xchg
and
filds
and
and
xor
je
gs
cmp
int
ret
cltd
cmc
fwait
mov
cld
daa
mov
scas
das
inc
idivb
mov
mov
stc
fidivs
xchg
dec
and
or
mov
faddl
or
sbb
xor
push
jno
and
js,pn
mov
pop
mov
or
lock
xlat
push
mov
mov
cmp
ds
mov
dec
push
leave
les
in
mov
call
push
in
fsubs
push
inc
iret
jmp
inc
push
xchg
lret
xor
mov
in
imul
sbb
nop
aas
ja
mov
dec
dec
fidivrs
push
iret
lcall
repnz
xor
mov
fidivs
add
cmp
push
mov
xchg
out
jge
pop
xor
ds
imul
push
lds
pop
call
lea
lea
push
and
pop
shl
ss
decb
call
pushf
sbb
or
add
adc
jp
mov
mov
lcall
pushf
xor
adc
sbb
and
xlat
xlat
push
mov
movsl
xor
or
adc
pop
mov
aam
test
pop
adc
xor
std
lahf
sub
cmp
pop
stos
jle
cs
stos
js
and
imul
incb
sbb
or
adc
icebp
push
or
aaa
cmp
imul
xor
das
shlb
add
dec
jg
mov
mov
cmp
movsb
xchg
push
adc
inc
and
popa
xchg
mov
divl
aam
sub
push
in
sub
adc
dec
leave
aas
sahf
mov
repnz
jb
pop
mov
mov
and
pop
push
pop
loop
dec
sbb
aad
xor
dec
fcomps
mov
cld
shll
adc
push
aad
aas
bound
test
inc
cli
xchg
jb
stos
cld
sbb
ljmp
mov
jae
sahf
mov
push
xor
sub
mov
je
lret
cmp
loop
cmp
xchg
in
sub
pop
ja
xchg
iret
ds
ret
xor
xor
mov
sub
aaa
pop
jo
inc
setp
pop
cmc
call
mov
sub
pop
es
into
aam
jp
inc
mov
dec
dec
mov
test
sbb
ds
das
dec
into
dec
push
aas
rcrb
icebp
jb
inc
push
je
xor
sbbl
adc
loopne
test
repnz
mov
outsb
xchg
ds
cwtl
clc
dec
adc
xchg
ja
cmp
inc
dec
mov
dec
divb
imul
jmp
mov
inc
cmp
or
subl
fsts
adc
lock
mov
and
cmp
lods
mull
dec
and
ljmp
add
or
mov
xor
add
loop
loop
or
mov
scas
sub
or
rorl
jg
jle
fists
cmpsb
pop
jmp
sahf
sub
cs
dec
fsubl
pusha
fsubrp
iret
mov
add
dec
shrl
or
jge
pop
or
scas
cmpsl
ljmp
or
fucomip
adcb
das
pusha
ficomps
scas
rcrb
adcb
dec
in
mov
jnp
imul
pop
call
add
jnp
dec
sahf
das
orb
call
lea
push
cld
mov
roll
add
push
pop
and
gs
je
pop
push
inc
mov
push
sub
stos
mov
sbb
movsl
xchg
pop
xchg
mov
fcoms
push
pop
mov
jo
dec
push
mov
cli
fldenv
xchg
imul
outsb
scas
add
imul
loope
popl
add
sub
lahf
imul
testl
enter
pop
adc
ja
jae
xchg
push
insl
pop
bound
mov
cli
add
xchg
pop
sub
or
dec
fnsave
adc
fisttpl
pushl
or
mov
in
orl
dec
mov
sbb
cwtl
movsb
add
pop
add
xlat
addr16
imulb
dec
mov
add
or
xchg
add
ds
cmpsb
sarb
push
jns
ror
push
xchg
loope
cli
into
cwtl
scas
scas
inc
inc
mov
in
push
sbb
xchg
jecxz
xchg
fistpl
jl
adc
cmp
rcrb
xchg
mov
vminss
xchg
shll
stc
inc
jns
jp
jbe
add
repnz
mov
imul
lret
aam
iret
dec
add
movsl
fistps
mov
mov
leave
jb
mov
cmp
mov
leave
in
popf
divb
es
mov
sub
lret
jle
out
fstpt
pop
out
jmp
inc
pusha
lds
inc
dec
inc
shrl
xchg
int3
stos
inc
or
aaa
adc
stos
cmp
push
inc
dec
sbb
adcl
or
inc
dec
mov
pop
mov
jp
inc
daa
adc
call
popa
loop
mov
fistps
stos
js
mov
sub
jo
in
addb
les
shlb
arpl
or
mull
out
cmp
add
jb
popf
clc
sub
inc
mov
idivb
add
mov
rclb
xlat
xor
test
jne
test
ja
sarl
jne
insl
xor
ds
pop
xchg
test
addr16
dec
jnp
inc
std
sub
repnz
stos
shrb
or
sub
push
add
sbb
and
pop
sti
fdiv
push
sub
pusha
mov
outsl
sarl
pop
shlb
fldcw
cwtl
jmp
mov
movsl
ret
jne
addr16
mov
add
push
scas
pop
lods
mov
fisttpll
jmp
pusha
push
add
push
jb
negb
in
aad
repnz
cwtl
pusha
shll
xor
cmpl
lret
cmp
sub
in
mov
cltd
xchg
ret
xor
mov
cmp
inc
dec
add
xor
ljmp
dec
out
mov
mov
dec
loopne
adcb
mov
sub
xor
fisttpll
jno
hlt
jge
add
cs
push
fldcw
cmp
mov
rclb
pop
stos
lods
sub
inc
enter
mov
add
jle
push
in
jns
out
aam
mov
imul
and
mov
mov
int
pop
push
iret
addl
stos
mov
cmp
pop
mov
mov
ret
cmp
cmpl
fwait
xor
out
sub
out
out
mov
pop
pop
mov
adc
adc
nop
lret
addl
mov
add
mov
cmc
or
outsl
pop
push
stos
jecxz
cmpsb
test
out
lods
or
aad
and
push
lahf
mov
dec
or
aaa
and
ficomps
test
xchg
sub
sub
sub
jae
int3
lret
pop
mov
lret
mov
lahf
std
pop
lea
lret
shr
cmc
scas
inc
in
repz
xor
add
arpl
add
shufps
popa
sub
push
push
inc
mov
add
stos
in
xchg
cmp
push
xchg
pusha
repnz
adc
xchg
and
out
jo
ficomps
mov
into
lea
std
outsl
roll
sub
push
out
xor
push
sahf
cmc
sti
xchg
repnz
popf
mov
out
push
xchg
das
jbe
bound
push
xchg
sub
jbe
and
mov
and
dec
pop
push
lock
inc
mov
and
mov
fcomp
mov
add
mov
lret
cmp
cmpb
mov
mov
ds
push
repz
mov
lret
mov
dec
mov
mov
ret
aad
mov
in
aas
pop
ss
rcll
test
push
pop
mov
xchg
lret
shr
popa
xchg
xchg
movsb
dec
dec
lea
xor
mov
aad
dec
aad
int
shrl
nop
jg
imul
sbb
adc
mov
push
mov
xlat
loope
stc
mov
jno,pt
adc
pop
dec
cmp
add
outsb
add
pop
in
xor
inc
insb
movsb
cmpsb
movsb
rep
push
popf
lret
ret
sub
ds
divl
sbb
out
cltd
jmp
mov
cmp
mov
adc
push
and
dec
insb
incl
mov
cli
out
fmull
inc
lods
inc
sub
movsl
add
loopne
pushf
push
jns
push
push
or
push
or
insl
mov
push
lret
insl
pop
insb
pop
loopne
fildl
jne
xlat
xchg
adc
pop
test
pop
jne
call
mov
jno
repz
xchg
push
pop
pop
inc
jmp
leave
pop
test
or
negl
sub
mov
jno
jmp
adc
pop
add
test
incl
push
xchg
lods
das
je
add
sbb
rcrl
pop
jbe
xor
sbb
cmpb
ss
imul
inc
cltd
iret
int
mov
ja
hlt
addr16
or
cmp
xor
out
into
ss
adc
jnp
xor
in
out
lea
loop
mov
sti
sub
retw
jae
or
push
cmovns
js
negb
inc
adc
fistps
cld
lcall
pop
imul
aaa
adc
sub
gs
jmp
jge
lcall
or
scas
inc
gs
stos
in
out
pop
cld
std
jb
repnz
cltd
shll
repz
insl
jle
lock
mov
arpl
push
mov
pop
das
sbb
out
les
inc
xor
pop
sub
lcall
cmp
out
sti
push
pop
fdivs
add
fwait
daa
push
enter
jle
ss
xchg
mov
dec
mov
out
cmpsl
test
repz
dec
sub
add
add
pop
sbb
sub
inc
repnz
popf
inc
push
lds
pop
fsubl
lock
jae
sub
jmp
xor
call
mov
push
movsb
fdivs
lcall
push
icebp
jecxz
imul
test
sti
mov
mov
mov
push
js
in
and
pop
int
nop
in
xchg
test
inc
push
cwtl
lods
mov
sub
push
inc
hlt
jp
aam
push
fcoms
aad
push
mov
sub
push
mov
ds
xchg
fildl
push
mov
mov
out
fstps
mov
inc
mov
inc
xor
mov
or
mov
out
sub
sub
jnp
pop
shll
xchg
testl
cmp
inc
sub
mov
cmp
stos
rorb
shrl
cmovns
cmpb
jno
lea
add
dec
faddl
test
add
xor
ja
fwait
cmp
lret
mov
mov
outsb
mov
xchg
outsl
loope
and
sub
lea
cmp
fst
test
enter
xlat
repz
xchg
push
xchg
ret
jmp
lods
aam
xchg
test
fists
or
test
jnp
xor
aam
add
jo
push
test
and
or
mov
push
or
cmp
ss
dec
push
push
sbb
pop
mov
xchg
leave
out
push
arpl
out
jmp
aam
or
dec
addl
dec
inc
push
inc
jb
push
dec
inc
dec
push
xlat
or
leave
leave
sbb
in
movsb
dec
sahf
andl
aaa
divb
cmc
shll
out
and
and
xor
xor
lret
in
or
cmc
fwait
test
jmp
rcll
call
icebp
addr16
dec
jp
sbb
imul
and
xchg
jl
lcall
test
mov
adc
pop
xor
sub
out
js
aam
xor
pop
mov
push
pop
xchg
pushf
push
imul
cmp
movsb
shrl
push
push
into
and
sbb
or
cmpsl
jb
jnp
enter
out
jp
fidivrl
sbb
outsl
out
and
sbb
jo
cmp
and
cmpsl
ja
mov
push
push
out
fadds
xor
and
xor
fldt
inc
dec
jg
cmp
scas
inc
dec
push
sbb
iret
xchg
xchg
insl
test
ret
call
mov
lcall
rcll
inc
dec
in
or
dec
sbb
pop
mov
jae
lcall
insb
push
push
add
jnp
xor
xor
sbb
dec
or
aad
mov
sub
aad
mov
and
les
data16
dec
push
push
and
inc
jae
sub
sbb
sub
push
and
popf
into
dec
mov
ljmp
sub
bound
fidivs
mov
mov
ss
les
std
cltd
loop
xor
or
pop
or
arpl
sbb
pop
inc
xor
rorb
xlat
add
xchg
push
pop
lods
je
or
xor
mov
iret
pop
fsubl
rcll
pop
scas
mov
hlt
repz
aam
movsl
inc
enter
in
fcomp
pop
in
lds
xor
iret
div
test
pop
jl
cmp
pop
jbe
insb
scas
bound
rorb
lea
enter
test
and
hlt
or
outsl
out
mov
or
rclb
cwtl
out
into
enter
mov
into
sub
es
cmpsl
mov
sbb
ja
fs
in
cmc
and
jmp
mov
add
cmp
cwtl
hlt
push
gs
aaa
push
aas
push
cmp
mov
test
pop
stos
mov
inc
inc
dec
pop
sti
ss
cmpb
out
or
shrl
and
pop
and
add
push
sub
sub
mov
mov
rorl
out
pop
or
cmp
repnz
mov
movsl
pop
xlat
lret
dec
cwtl
jns
imul
adc
add
pusha
fimuls
pop
push
dec
sbb
out
jns
pop
aam
cli
and
add
cmp
cld
pop
mov
ret
ret
add
push
ror
mov
mov
ss
xbegin
insb
out
mov
or
ss
dec
aaa
or
insl
repz
das
mov
or
lock
pop
lret
ret
imul
xor
xor
push
rcrb
or
mov
js
test
inc
je
add
adc
sub
xchg
push
fs
idiv
mull
mov
pop
insl
add
adc
in
add
cmp
pop
jl
fs
bound
mov
add
enter
clc
or
sbb
lea
pop
mov
loopne
xchg
loop
push
pop
fwait
cmp
stos
int
cmpsb
stos
imul
divb
movsl
and
push
mov
cltd
pop
stc
dec
cmpsb
in
cmp
int3
or
mov
xchg
popf
xchg
dec
xlat
jo
sub
jne
ss
sbb
pop
imul
ret
fs
push
or
mov
lods
mov
sbb
sbb
fstps
cmp
int
xchg
dec
fnsave
cld
clc
xchg
call
repz
dec
repz
hlt
rcl
add
inc
push
stc
dec
or
int
arpl
xchg
clc
jne
or
outsl
push
add
adc
shrd
push
outsb
fwait
lahf
pop
xchg
popa
sub
push
mov
mov
fbstp
push
imul
xchg
sbb
mov
imul
jle
and
pop
test
loopne
jb
add
mov
pop
imul
popa
lret
push
test
pop
hlt
js
inc
ds
loop
hlt
out
enter
in
inc
ljmp
subb
bound
sahf
and
mov
lret
xor
push
cmc
mov
sub
in
dec
mov
iret
setl
loop
cmc
outsl
in
in
and
js
mov
cmp
jmp
cli
sbb
or
and
test
push
subl
cmc
push
jne
and
cld
lods
jl
sahf
pop
sbb
push
cmp
outsb
mov
in
jb
cwtl
fsubrs
rorb
sahf
sbb
pop
sbb
ja
xchg
push
repnz
sbb
dec
push
push
inc
ret
imul
mov
addb
push
out
pop
nop
sbb
mov
fnstcw
ljmp
cmp
xor
push
iret
bnd
pop
insb
push
push
push
stos
jp
cld
ds
ljmp
adc
inc
addr16
out
push
sbb
popaw
pop
out
cmp
xchg
or
sahf
push
in
sar
add
sub
sub
cmpsb
out
inc
cmpsb
lahf
loope
inc
sbbl
in
cld
jb
mov
inc
repz
sub
enter
cmpsl
sti
xchg
fadds
xor
xchg
sbb
call
jecxz
imul
lock
test
int
stc
repnz
in
cmp
cmpsl
in
mov
cli
stos
lahf
or
pop
lea
push
stc
dec
sbb
call
xor
sub
mov
scas
lds
movsb
mov
sub
lock
or
dec
sbb
inc
dec
jns
or
pop
inc
push
xchg
les
nop
rorb
push
or
or
cli
loopne
xchg
or
lahf
repnz
cld
push
sbb
iret
pop
and
or
ss
dec
call
push
dec
cli
xchg
cmc
sub
ljmp
repz
fidivrl
xor
inc
bound
jmp
fisttpl
out
mov
mov
mov
neg
push
mov
fwait
mov
decl
mov
lods
jecxz
dec
push
je
ret
cld
lds
inc
and
or
call
jp
push
mov
push
jbe
out
jae
movsb
scas
mov
or
push
jge
xor
into
and
stos
fsts
jno
imul
sbb
mov
or
stc
mov
jge
add
rclb
icebp
add
lret
addr16
pop
fsubs
fisubrl
jnp
aaa
in
arpl
push
push
jno
jo
dec
fsts
fyl2xp1
inc
jle
repnz
js
jo
jb
mov
sbb
or
pop
ret
hlt
xchg
inc
js
bound
sti
pusha
aam
out
cmp
iret
add
or
fxch
daa
push
push
pop
cmp
jle
pop
js
fwait
add
add
adc
pop
adc
movsb
ljmp
push
or
aas
out
shrb
decl
cmc
jae
shll
cld
fimuls
mov
outsb
rclb
hlt
sbb
enter
aam
inc
stos
sbb
sbb
lods
cli
pushf
je
add
xchg
cmp
popa
or
fadds
pcmpeqb
pop
clc
add
mov
cli
jo
sbb
test
mov
cmpb
pop
repz
mov
sbb
pop
push
fisttpll
cmp
inc
aam
in
mov
mov
mov
jl
jecxz
xor
xor
inc
aas
popf
arpl
out
or
xchg
jne
aam
out
pop
xor
arpl
pop
and
gs
xlat
xchg
test
inc
xor
js
cwtl
xchg
mov
xor
jno
xorl
inc
xchg
adc
mov
dec
fcompl
lock
xchg
loop
lea
pop
xchg
lret
cmp
xor
xchg
nop
repz
push
cwtl
xor
aad
push
outsl
adc
mov
cmpl
pop
xchg
je
les
jg
and
fisttpll
mov
fisubl
pop
mov
mov
inc
mov
cli
pop
add
aad
cld
in
push
add
outsl
inc
xchg
xchg
add
jmp
xor
mov
jbe
lcall
mov
add
sub
enter
fimull
cli
mov
mov
sbbb
mov
adc
jg
sbb
and
mov
pusha
cmp
test
mov
daa
idivl
mov
fidivl
movq
pop
inc
lahf
pusha
xchg
out
pop
add
jg
test
lahf
mov
cmp
lret
add
cmp
mov
into
push
mov
xchg
adc
negb
xchg
icebp
gs
push
or
aas
or
pop
mov
xor
cmp
gs
jl
mov
xor
test
cmpsl
pop
in
mov
test
mov
popf
push
loope
or
cs
push
fimull
jno
in
and
mov
fadd
jg
and
pop
xor
xorb
push
or
negb
mov
cltd
mov
pushf
mov
or
xchg
push
pop
cltd
mov
std
cwtl
movsl
addr16
mov
std
psrld
dec
jp,pn
aaa
popa
mov
insb
icebp
push
xor
dec
in
out
lock
jb
out
inc
ret
xor
cltd
pop
idiv
mov
or
and
clc
pop
ficompl
shr
mov
shlb
mov
jb
stos
shlb
or
hlt
xor
push
push
pop
insb
mov
sub
push
push
scas
jae
mov
or
sbbb
inc
push
lahf
testl
adc
stos
mov
adc
in
jge
daa
cld
xor
mov
outsb
ss
fst
ja
loope
sbb
fimull
loope
sbb
adc
push
movl
in
and
outsb
add
movsb
loope
inc
adcl
ss
or
repz
imul
movntq
out
jnp
xor
lea
jmp
inc
ss
xor
sub
popf
pop
add
js
or
jo
xchg
adc
mov
and
sbb
and
iret
jne
rcr
repnz
pushf
aaa
hlt
mov
int3
lods
fs
ret
gs
aas
mov
sub
in
out
test
aad
lret
ret
jp
mov
jmp
call
and
out
hlt
arpl
loope
add
mov
cmp
pusha
mov
pop
clc
pop
int
sbb
dec
lea
stos
jle
cmp
imul
in
lock
aad
test
or
sahf
mov
lahf
mov
push
push
decb
pop
cmp
or
les
xor
shlb
lock
and
test
jg
rorl
fisttpll
out
pop
cltd
mov
mov
push
add
das
jns,pt
stc
imulb
movsb
push
mov
cltd
pop
inc
pop
cmc
mov
and
mov
mov
test
mov
lods
movsl
lahf
mov
movsl
movsl
and
fcmovu
in
add
sbb
jns
aad
enter
or
pop
pop
adc
loope
testb
sbb
sub
add
dec
insl
int
jno
mov
cltd
xchg
fld
pop
lods
push
pusha
sbb
push
popa
ftst
pop
sbb
cmp
loope
dec
repnz
shll
pop
add
jns
xchg
push
ds
jno
push
imul
xorl
cmpsl
mov
xor
sti
xor
cld
sub
jle
lea
pop
hlt
and
sbb
cmp
pop
daa
xor
dec
adc
cmc
sbb
es
mov
or
imul
ljmp
clc
xor
add
jb
pop
or
shlb
lds
lcall
rol
inc
inc
je
out
xchg
shrb
inc
mov
fcmovbe
jge
mov
into
xor
jmp
pop
dec
sub
std
push
cmp
jecxz
push
repnz
mov
dec
jmp
clc
js
popf
enter
mov
cs
fstpt
idiv
cld
pop
jle
movb
call
sti
ss
inc
add
pushf
lock
adc
outsl
sbb
vmwrite
jg
inc
mov
adc
mov
outsb
idivb
push
lret
push
push
mov
dec
les
and
jb
out
outsb
adc
ds
sbb
sbb
xchg
rclb
testb
pusha
mov
or
mov
pop
push
sahf
or
enter
aam
imul
cmp
mov
sub
sub
cwtl
xor
data16
mov
idivb
inc
mov
and
sbb
rclb
jle
popf
fs
sbb
mov
mov
cmp
mov
loop
xor
jp
out
sub
adc
inc
adc
adc
inc
stos
imul
jo
and
or
fstps
push
ljmp
or
inc
dec
fimull
cwtl
mov
pop
mov
jns
pop
xchg
and
in
jb
mov
stc
pop
ja
ljmp
arpl
pop
icebp
lds
lds
push
leave
mov
test
iret
and
shlb
cltd
idivl
mov
push
xor
imul
scas
mulb
les
repz
xchg
push
cs
jae
mov
mov
rcrl
jp
in
ja
dec
and
mov
mov
jb
jae
mov
test
mov
nop
enter
mov
pop
mov
and
xchg
outsl
push
mov
fs
jl
sub
add
fsts
je
pushl
adc
ret
add
rorl
pop
cli
loopne
or
repz
and
rorl
jnp
ret
insb
pushf
mov
lahf
adc
fisttps
dec
mov
jp
sbb
shl
mov
rorl
movsl
ljmp
mov
loopew
je
adc
test
js
push
test
sbb
in
xchg
jle
enter
sbb
push
mov
xchg
cmp
or
popa
cld
pop
mov
xchg
jle
and
loopne
gs
xor
pop
cwtl
xor
jecxz
add
inc
push
stc
push
pop
arpl
cmpsl
push
fdivrs
push
pavgb
addr16
in
sti
sub
xchg
and
sbb
loopne
sub
test
cmp
xorb
fldz
pop
inc
ds
jns
roll
jnp
sub
cld
call
mov
add
mov
out
push
xchg
inc
jnp
pop
adc
push
call
adc
adc
iret
xchg
popa
cmp
lods
insl
jp
in
js
dec
dec
xchg
stos
inc
pop
push
stc
push
push
dec
sbb
movsb
jne
push
cmp
movsl
ficoml
xchg
mov
cs
add
xor
push
jb
js
pcmpeqw
out
loope
sub
dec
adc
cwtl
or
inc
repz
mov
adc
xlat
xchg
push
lds
stc
int3
xor
cmpsb
out
mov
test
int3
xchg
inc
movsb
mov
lahf
ret
scas
cmpsl
inc
ficoml
cmp
fnstcw
test
popf
mov
adc
pusha
sahf
jbe
mov
jl
push
mov
sub
sub
mov
test
loopne
jne
sub
dec
pushf
pop
cmpl
leave
or
lock
pop
inc
inc
add
mov
stc
mov
mov
dec
push
push
push
mov
out
adc
ret
jbe
mov
fwait
pop
pop
mov
je
sub
jo
push
fsubrs
cld
pop
jl
pusha
mov
int
pusha
mov
popa
fdivs
lds
inc
stos
call
nop
divl
mov
dec
cmp
fdivs
mov
sbbb
shlb
cmc
in
inc
xor
add
dec
fstp
mov
sahf
pop
ds
repz
mov
mov
dec
inc
jb
fstpt
cld
js
jp
jae
mov
add
or
mov
lods
pop
jg
movsb
loope
not
or
mov
mov
lea
inc
fidivs
mov
movsb
sbb
jns
add
lods
sbb
xor
push
cmp
xorl
lret
in
xor
loop
cld
pusha
jmp
bswap
and
pop
scas
sbb
xor
out
ljmp
cmp
push
pop
pop
pop
mov
lds
fsub
adc
test
push
repnz
mov
nop
xor
insl
lretw
push
nop
clc
pushf
push
push
push
mov
add
or
mov
call
scas
mov
sub
sub
popa
mov
jno
xor
scas
in
bound
add
repz
outsb
inc
xchg
test
int3
mov
mov
mov
out
and
mov
fbstp
jns
sbb
push
fiadds
stos
adc
sti
gs
mov
pop
cmpl
lcall
rolb
cmp
arpl
mov
mov
xlat
pop
inc
lahf
xor
inc
mov
xchg
add
xor
or
and
jbe
xor
out
xor
aad
adc
mov
inc
jp
fstpt
test
fsubr
cmp
mov
movsl
pop
stos
push
icebp
aas
inc
mov
dec
mov
and
mov
dec
mov
push
sub
mov
stos
lret
xor
outsl
mov
in
xorb
push
and
mov
es
or
fisttpl
sbb
jae
mov
jmp
mov
push
dec
pop
mov
stc
leave
add
mov
mov
mov
inc
popf
pop
ds
dec
pop
xchg
jmp
add
out
cltd
push
outsb
repz
in
leave
sti
fwait
mov
push
mulb
daa
or
inc
push
sbb
or
xor
lods
or
pop
punpckhdq
insb
adc
inc
ret
sub
mov
pop
test
loop
inc
dec
mov
and
lahf
jns
addr16
pop
inc
cmp
jno
mov
push
push
pop
add
cmp
push
fadd
out
lret
jo
aas
sbb
callw
das
xchg
cmp
cmpsl
cmp
pop
cmp
xor
pop
lahf
inc
aas
xor
mov
or
cmp
mov
popf
ljmp
loope
jecxz
inc
outsb
mov
xchg
aas
repz
out
mov
aaa
mov
ljmp
inc
movsb
outsl
adc
sbb
stc
icebp
jmp
sbb
jle
inc
mov
gs
mov
mov
fists
sbb
add
fsub
add
mov
mov
les
aam
adc
dec
test
rolb
push
cmp
sbbl
fstpt
jo
shlb
sbb
sbb
shlb
push
bound
dec
rcrb
xchg
stos
popa
xchg
movsl
cmp
rcr
rcrb
jbe
loop
fisttps
mov
lds
mov
cld
lcall
adc
and
filds
repnz
lods
jecxz
mov
fsubrl
adc
mov
js
push
or
sub
pop
or
sbb
ret
out
push
mov
fisttpll
xchg
add
test
add
mov
stos
mov
add
mov
jns
mov
scas
and
aas
jno
sahf
fsubs
imul
pop
pop
rolb
dec
into
sub
cli
test
test
cmc
inc
adc
ss
xor
xchg
sbb
xchg
mov
addl
add
mov
or
stc
arpl
ret
or
mov
out
imul
cli
ds
icebp
sahf
fidivrs
stc
mov
pop
adc
ficomps
loopne
dec
jo
frstor
subb
mov
xorb
mov
inc
int3
test
jo
xor
inc
movsl
fadds
sub
adc
ret
dec
icebp
adc
inc
ret
xchg
rorl
jns
fnstcw
push
loope
jecxz
inc
out
xor
dec
sub
sub
loop
xchg
and
testb
sub
lods
inc
pushf
add
lcall
repnz
out
nop
insb
push
push
cmp
faddl
out
pop
adc
inc
or
adc
xchg
jae
pop
cwtl
out
xor
xor
scas
jmp
mov
shrb
push
dec
clc
int3
pop
sti
pop
je
jge
jl
dec
mov
add
fs
jns
cmp
cwtl
sbb
xchg
sahf
adc
lcall
popf
loopne
fisubrs
subb
pop
cld
rcrl
mov
aad
fstpl
cltd
cmp
dec
lds
daa
popa
and
cmp
mov
xor
dec
xlat
leave
jmp
pop
sbb
fadds
xchg
loope
mov
dec
add
push
jmp
sub
push
inc
xlat
jp
xor
inc
insb
mov
test
or
mov
adc
or
lahf
xor
rcl
imul
mov
insl
ja
stc
push
sub
mov
xchg
sbb
cmp
in
jge
jmp
pop
jmp
sub
or
xorl
lcall
mov
jns
mov
cmpl
test
dec
shlb
xchg
movsb
push
clc
xor
test
sub
adc
push
das
mov
xchg
sub
mov
popa
or
mov
mov
or
xor
lds
rcl
push
adc
icebp
or
push
inc
jmp
out
adc
xlat
xlat
or
gs
push
lret
fcom
add
or
sbb
add
or
lea
jbe
xor
xor
incl
aad
mov
das
mov
jmp
dec
xchg
and
xchg
ss
sahf
inc
xchg
jle
lock
bound
lock
or
das
iret
xchg
or
aad
jbe
sub
int3
scas
out
test
movsl
inc
lods
jg
fsubrl
push
aaa
mov
jp
cmp
sbb
fwait
rcrl
lahf
rcll
daa
cmp
mov
and
clc
insl
inc
or
cli
pop
push
pop
inc
fistl
sbb
and
mov
and
jmp
xchg
mov
pop
mov
mov
pop
fidivrl
stos
xchg
push
mov
add
dec
jno
cmp
divl
inc
int
sahf
xchg
dec
out
add
test
mov
pop
sahf
pop
dec
jecxz
pusha
push
pop
and
inc
sub
movups
inc
mov
dec
movsl
lcall
imul
dec
fdivs
mov
jnp
mov
lret
ljmp
enter
lmsw
incb
jp
jno
xchg
mov
ret
iret
jl
jle
out
cmp
sar
jnp
and
pop
push
sarb
and
in
in
shrl
inc
push
inc
mov
iret
add
jl
xor
arpl
mov
or
push
aas
mov
push
sub
insl
dec
scas
adc
mov
adc
xchg
mov
insb
ficomps
cmp
orl
and
push
out
cltd
outsb
mov
cltd
dec
pop
cmp
pop
aad
xchg
mov
ss
icebp
push
xchg
in
xchg
add
inc
push
rcl
xchg
rclb
add
add
jge
inc
das
xchg
data16
inc
movsb
sub
inc
mov
aad
sahf
imul
add
mov
icebp
out
cmp
insb
cmp
sahf
shr
mov
jbe
dec
jnp
int
std
jnp,pn
into
popf
push
jne
mov
sbb
lahf
mov
xor
xchg
mov
lcall
pop
std
lods
icebp
test
popf
aaa
dec
jle
gs
jns
out
pop
mov
cmc
pop
std
mov
es
push
jb
jl
and
int
ret
icebp
mov
cltd
test
inc
cmp
cmpsb
js
jae
sbb
les
push
adc
mov
sbb
jae,pn
xor
iret
cmpsl
sbb
stos
daa
pop
popf
data16
mov
test
lahf
arpl
pushf
sbb
into
out
cmp
addr16
push
mov
or
sbb
in
dec
xor
mov
cmp
lret
out
jmp
mov
scas
mov
pop
and
sub
negl
push
dec
jle
sbbl
push
pop
movsb
dec
add
and
xchg
dec
sub
jecxz
mov
in
or
pop
rclb
ficoms
sbb
sub
test
cltd
inc
xor
sbb
xchg
fbstp
dec
jmp
aam
sahf
clc
stos
ja
mov
or
xor
adc
pop
pop
popa
out
lahf
sbb
out
push
test
or
mov
adc
cs
addr16
jno
outsb
sbb
lret
mov
pop
jmp
pop
aam
ljmp
dec
sub
fistpll
insl
or
das
pop
aaa
gs
xchg
shrb
jns
inc
inc
xchg
js
das
mov
faddl
xchg
push
and
cmp
gs
lret
hlt
jne
lea
shlb
xorb
sub
pop
inc
push
fsubs
fisttpll
dec
xor
cmpl
sti
sub
jge
scas
orl
pop
xor
and
lock
cmc
inc
sti
or
cmc
fbstp
cmpl
out
jae
nop
ret
sbb
push
mov
shr
push
or
fdivrp
mov
fs
lods
inc
jmp
push
and
mov
jae
ja
sti
or
das
call
or
shlb
ret
popf
cmp
inc
adc
mov
xor
loope
jns
fsincos
pop
mov
jl
sub
lods
fs
jnp
fsubrl
adc
mul
mov
and
lds
fwait
das
int
cwtl
sub
mov
repz
js
rcrb
lret
cmpsb
loop
clc
push
ja
xchg
in
repnz
mov
inc
sahf
mov
add
mov
cmp
daa
addr16
stos
sets
sti
sub
mov
xor
cwtl
adc
and
add
bound
stos
xor
sub
je
jns
lds
jmp
mov
lret
std
scas
lcall
outsl
inc
mov
subb
mov
mov
les
shll
dec
or
aaa
dec
cltd
pop
hlt
or
ja
mov
mov
mov
pop
jecxz
js
xor
push
std
sahf
sarl
repz
sbb
mov
jp
push
jle
pop
imul
inc
xlat
jle
jmp
mov
movb
mov
lds
pop
es
cmp
add
and
out
in
mov
push
cmp
dec
call
stos
and
pop
fcomps
dec
out
sub
jg
mov
dec
jmp
sub
inc
inc
xchg
mov
loopne
sti
jno
ficoml
mov
in
add
xchg
jge
cmpsl
cmp
dec
test
jno
pusha
sbb
loop
sbb
and
inc
cmp
mov
cmp
cmp
fidivs
pop
xchg
xchg
mov
mov
data16
pop
js
aad
or
arpl
jns
pop
add
cmc
xchg
mov
loopne
inc
lods
mov
mov
lcall
int
inc
icebp
lds
icebp
test
ss
or
cmp
xor
mov
movsl
push
imul
or
xchg
gs
mov
jle
shlb
mov
mov
mov
jno
jp
mov
daa
sahf
lret
jno
jl
mov
out
push
hlt
jg
cmp
cmp
inc
cmc
adc
xor
adc
push
cld
call
xchg
cmp
mov
xor
mov
ds
jne
ds
addr16
adc
test
adc
mov
shl
fcomps
inc
xchg
rep
ljmp
sbb
in
jne
lock
js
rcll
xor
xor
and
mov
es
test
mov
sbb
xor
mov
pop
pop
pop
or
ja
push
out
mov
or
pop
stos
xor
pop
addr16
pusha
mov
and
pop
xchg
addl
push
xchg
xor
test
dec
push
shlb
cli
inc
fidivrs
pop
pushf
pushl
daa
add
in
clc
aaa
aad
dec
cmp
mov
and
jmp
fucompp
icebp
or
adc
cltd
mov
sbb
bound
push
aam
bound
push
add
cmp
lock
cli
clc
icebp
xchg
inc
andb
mov
arpl
or
cli
sbb
icebp
sbb
sub
mov
add
inc
pop
ljmp
arpl
insl
arpl
aaa
cli
stos
lret
shrl
xor
push
xlat
sbb
mov
push
push
daa
pop
pop
pop
stc
sub
sbb
pop
mov
and
stos
jp
mov
rorb
iret
lcall
enter
nop
in
sub
cld
push
mov
push
pop
sub
sub
cmpsb
lods
mov
add
mov
cld
xor
sub
leave
inc
insl
cltd
xchg
repnz
jne
xchg
jmp
ljmp
mov
loope
dec
mov
xor
in
loope
inc
and
enter
pop
ds
je
in
test
pop
sub
data16
hlt
add
test
sub
push
cmp
rcr
mov
xlat
sub
mov
cwtl
leave
and
ficomps
in
mov
in
loope
jecxz
out
push
ds
push
xchg
int3
xor
sbb
jae
mov
pop
out
pop
mov
push
xor
cmp
cltd
dec
and
rclb
dec
and
iret
jne
cltd
repnz
insl
fistl
cmp
mov
push
push
loopne
sahf
rcrl
in
add
das
push
das
shll
out
das
scas
mov
icebp
popa
cmp
shrl
xchg
adcl
pop
dec
cwtl
and
pop
in
out
xor
adc
push
dec
mov
jno
cmpsl
pop
add
rolb
lock
adc
fiaddl
int
ss
cld
popa
cmp
mov
movsb
pop
push
inc
ja
nop
movsl
sahf
sbb
aas
xchg
loop
mov
xor
adc
mov
dec
xor
mov
sbb
or
and
rorl
push
mov
lock
in
add
xchg
cli
jg
movsb
pop
and
mov
js
in
and
jne
push
mov
xor
lahf
jmp
sub
mov
repnz
test
jno
xor
dec
popf
add
repz
adc
lret
push
xchg
test
lahf
lahf
imull
mov
or
cmp
xchg
lcall
outsl
jmp
lret
dec
stos
cwtl
incb
repz
push
jge
rorb
mov
es
nop
shll
out
dec
add
insb
pop
fidivrs
nop
sahf
mov
popf
fsubrs
mull
pusha
lods
mov
pop
and
jnp
frstor
ds
jns
add
pop
push
mov
adc
pop
mov
fadd
sub
pop
cmp
sub
movsl
and
adc
xchg
frstor
push
add
xchg
mov
mov
mov
mov
sub
xor
aad
sub
addb
dec
xor
out
lret
xor
in
adc
mov
mov
push
mov
movl
cmp
ret
xchg
repnz
mov
rolb
loopne
fsub
rorl
je
cli
test
sub
mov
je
sub
pop
sbb
lods
int
pop
add
out
fidivs
dec
push
icebp
punpckhdq
inc
push
pop
orl
sahf
xchg
adc
sti
add
in
pushf
push
leave
cmc
das
mov
mov
dec
push
push
sbb
and
popf
aaa
daa
vmptrld
cli
lret
mov
adc
mov
rcrb
nopl
xchg
cmc
notl
mov
add
aad
mov
xchg
lds
cmp
push
gs
repz
cwtl
xchg
xchg
lock
cmpl
loopne
sti
xlat
push
mov
fstpl
mov
push
mov
es
sbb
movsb
enter
mov
mov
js
push
in
adc
popf
icebp
push
jle
stc
push
dec
stos
add
inc
pop
xorb
jmp
xchg
pop
sar
push
sbb
lods
xor
in
out
fwait
int3
jl
fs
adc
sarl
cmpb
push
mov
repnz
or
out
cmpsl
lea
xor
loopne
testb
lahf
repnz
mov
push
inc
inc
xor
pop
pop
sub
pop
or
pop
push
cld
and
and
push
inc
jne
sub
cmp
sbb
loope
xor
cs
jp
aad
movsb
ret
cmpsb
pop
imul
pop
inc
jo
mov
out
pop
adc
push
pop
aad
rorl
int
loop
clc
aam
repz
aaa
js
addb
mov
arpl
repnz
jb
dec
ret
push
jo
jb
mov
xlat
aaa
add
lret
xor
xchg
lret
mov
int3
shrb
mov
out
pop
pop
add
mov
addb
int
fs
dec
sbb
xor
jl
int
jmp
out
sbb
mov
or
pushf
imul
push
adc
push
icebp
rol
dec
pop
add
fldcw
jnp
mov
fimull
mov
lret
jg
adcb
jns
adc
jne
iret
dec
dec
loopne
dec
jo
fisttps
or
addr16
xchg
sbb
dec
or
xchg
adc
into
testb
adc
pause
pusha
int3
or
cld
and
sbb
mov
leave
add
lea
je
pop
sahf
adc
enter
xor
inc
into
push
mov
mov
xchg
jne
lret
dec
add
ret
xchg
into
aad
mov
test
outsl
mov
aaa
test
adc
sbb
push
pop
jg
cmp
ret
push
adc
pop
cmc
cltd
sbb
imul
shlb
push
xor
mov
cmp
ret
push
cs
cmp
fs
scas
jge
xchg
adc
ficoml
repz
sub
aaa
pop
mov
fimuls
cmc
cmp
movsl
iret
inc
mov
add
or
push
and
push
jmp
push
arpl
pop
test
or
lahf
or
leave
fistps
imul
pop
aas
das
and
test
jp
loope
push
dec
mull
push
daa
sub
pop
stos
mov
jle
and
fwait
cld
mov
pop
mov
xchg
push
mov
or
mov
test
out
rcr
iret
lret
jge
imul
fstpt
or
jbe
jmp
push
xor
loope
add
imul
not
rcll
jns
ficomps
xor
rcrb
xchg
leave
out
out
cmpsb
sbb
lcall
or
mov
fwait
imul
dec
mov
hlt
sahf
leave
imul
cmpsl
enter
sub
mov
cmp
jg
data16
push
push
loop
xor
fisubrl
xor
sub
mov
lret
mov
and
or
push
xor
mov
fstpl
fsubrl
mov
insl
addr16
roll
push
adc
scas
pop
stos
js
or
adc
das
pop
std
ficompl
bound
fldt
aas
mov
add
dec
adc
dec
mov
pop
mov
cmp
clc
sbb
add
test
aaa
xchg
xor
hlt
mov
mov
jp
ljmp
xor
in
sahf
ffreep
mov
push
cwtl
adc
jae
push
jo
pusha
dec
mov
or
sbb
jb
mov
out
pushf
icebp
mov
call
shrl
sbb
cmpsb
mov
popf
js
cmpsl
add
push
fisubrl
xor
mov
fwait
add
push
lods
mov
jae
pop
andb
xchg
test
cwtl
loopne
xor
sub
sbb
repnz
sarl
adc
dec
sarl
arpl
mull
mov
jns
mov
sub
push
je
and
xor
or
cltd
jbe
in
testl
jle
pop
dec
mov
jge
or
inc
sbbb
cmp
mov
lahf
mov
sub
jb
inc
jno
dec
call
lds
jmp
jne
lret
gs
xor
notl
or
negl
jl
test
out
fld
xchg
adcb
pop
popa
mov
vpunpckhwd
sub
add
iret
outsb
loopne
sbb
out
enter
std
xchg
jmp
sbb
pop
add
mov
lret
addl
or
mov
add
daa
lock
addr16
lea
adc
push
and
push
cmc
jae
mov
nop
out
test
sahf
jecxz
pop
pop
or
add
shrb
in
push
xor
aad
lret
mov
fisttpl
dec
or
jo
xchg
hlt
sbb
dec
mov
mov
pop
xchg
imul
sbb
adc
dec
ja
loope
jne
js
scas
mov
inc
cwtl
dec
sarl
mov
cmp
imul
sbb
adc
mov
enter
or
mov
gs
xor
jmp
cmpsb
fisttpll
cmpsb
rcl
loope
outsl
into
insl
fsubrs
hlt
out
sub
cmp
mov
jge
imul
sub
lds
and
push
flds
mov
data16
imul
movsb
into
setb
daa
pop
decl
xor
fisttpl
dec
jmp
cmpsb
sbb
push
lock
sub
and
xor
jecxz
das
mov
or
cmp
hlt
push
les
ljmp
adc
push
addr16
sbb
cmp
pop
mov
pop
push
jns
iret
jp
in
xchg
movsl
dec
gs
xchg
stc
cmp
add
loopne
aam
cmp
cs
cmp
icebp
pop
push
cwtl
xchg
iret
xor
pop
mov
ret
out
or
sbb
jmp
pop
dec
divb
lret
mov
in
push
xor
aam
xor
pop
test
popf
xor
dec
mov
aas
mov
ret
out
js
cmp
rclb
adc
push
or
lret
into
ljmp
testl
xchg
jb
inc
test
mov
lret
sbb
inc
into
adc
cs
push
gs
test
cmpsb
ret
fsubrp
or
loope
sbb
cmpsb
and
sbb
push
mov
sub
insl
jne
sub
sti
mov
add
iret
sahf
sub
push
bound
in
cli
push
enter
cltd
xchg
cmp
fdivs
popl
mov
push
pushf
out
xchg
nop
outsl
imul
sbb
fiadds
imul
mov
push
or
popa
mov
xor
pusha
sub
cmp
lahf
jp
mov
inc
test
das
mov
inc
dec
lahf
jecxz
xchg
adc
jmp
in
in
iret
test
push
sbbb
sbb
inc
adc
out
adc
or
sub
sahf
xlat
int
fdivrp
shlb
in
push
xlat
adc
sub
and
pop
cmc
push
push
dec
jbe
add
jle
lods
frstor
lea
mov
arpl
xchg
xchg
and
in
mov
mov
repz
jecxz
popa
pop
jp
imul
fs
enter
jae
outsl
adc
inc
cmp
mov
arpl
in
imul
movsb
sub
ror
lods
outsb
mov
loopne
mov
loop
fwait
push
pop
mov
push
fwait
in
gs
xor
or
sbb
and
insb
jmp
inc
stos
iret
cmpsl
sbb
je
push
loopne
xor
dec
push
cld
adc
leave
repnz
mov
pop
test
bound
je
adcl
sbb
imul
aaa
jg
stos
jno
pop
cmp
cmp
inc
fistl
cmp
stos
lret
jns
push
sbb
lods
mov
bound
inc
inc
subl
mov
push
cmp
ret
movsl
orb
push
sbb
push
push
rorb
daa
mov
mov
or
xor
sti
fs
and
mov
dec
pop
mov
cmovae
mov
or
sub
xchg
mov
mov
stos
dec
xchg
inc
sbb
adc
sti
push
call
sbb
inc
adc
fwait
xchg
insl
sti
notb
mov
and
aas
scas
insl
outsb
sahf
dec
mov
jp
iret
sbb
and
or
aas
rcrb
in
popa
stos
nop
cmp
inc
or
popa
andl
orb
cld
adc
mov
push
imul
lcall
mov
jae
dec
dec
call
cwtl
pushf
arpl
sub
cmpb
daa
mov
imul
ret
jge
imul
jge
mov
adc
inc
jle
arpl
and
mov
popa
outsb
repnz
cmpsb
push
sti
test
iret
jae
repnz
lret
push
loopne
mov
arpl
or
orb
cmp
repz
xchg
loope
push
clc
xor
jne
scas
out
je
mov
ljmp
es
push
add
cmp
int
jae
dec
out
xlat
daa
popa
rcrb
insl
aam
inc
push
inc
push
mov
pop
sub
inc
addr16
ret
sub
inc
xchg
mov
dec
mov
nop
push
ljmp
movsl
pop
das
xorl
lahf
movb
jno
loop
mov
rorl
lock
sbb
mov
nop
xchg
sbb
popa
adc
push
pushf
cmpsl
adc
add
mov
mov
add
movsb
stc
addr16
add
sbb
inc
lock
mov
pop
jecxz
in
mov
std
cmpsl
jno
inc
aad
mov
lret
cmp
icebp
cmp
cld
in
in
add
pop
ret
jne
sarb
cld
push
call
mov
out
in
mov
sbb
dec
jne
mov
sahf
icebp
xchg
leave
cmp
dec
xchg
fwait
add
sbb
adc
inc
pop
add
jnp
xor
aas
into
stos
rorl
insl
les
inc
adc
leave
ror
fnstsw
jle
stc
add
pop
cs
imul
jl
shl
adc
scas
test
clc
jecxz
dec
mov
das
push
push
push
outsb
fs
cwtl
pop
mov
xchg
stos
pop
push
cs
mov
dec
sbb
out
js
mov
or
pop
sbb
mov
fmuls
mov
push
daa
mov
lds
mov
dec
inc
adc
negb
mov
repz
jne
push
fdivrl
cli
push
pop
xlat
push
push
pop
pop
mov
dec
es
das
shll
pop
inc
bound
mov
or
mov
inc
imul
outsb
imul
cwtl
pop
das
jmp
add
mov
add
mov
sbb
int
ret
in
pop
add
sbbb
push
int
cmp
cmp
jp
enter
mov
xchg
mov
aas
rorl
rcrl
pushf
push
sar
cmpsl
xor
popf
and
pop
orl
sbb
cmpsb
movsb
and
mov
loop
pop
sub
notl
push
lret
out
sarb
dec
dec
fimuls
dec
std
cmp
cmpsb
xchg
lret
into
decb
inc
lret
adc
jge
roll
inc
ror
fisubs
cs
cmp
push
dec
addr16
mov
cmpsb
out
xor
jecxz
rclb
subl
or
scas
mov
int
insl
and
mov
ficoms
aas
ret
pop
mov
xchg
rolb
cld
popf
add
push
ljmp
mov
cmp
insl
mov
inc
mov
mov
sbb
sbbb
xor
das
sbb
insl
fwait
shlb
call
mov
inc
outsl
scas
dec
in
pop
mov
decl
mov
adc
ficoml
sbb
and
push
xchg
iret
lock
dec
sbb
insb
inc
mov
sarb
in
jne
aas
stos
loopne
daa
pop
cmpsl
int3
cmpsb
or
int
inc
inc
in
cmpsl
jmp
call
dec
dec
adc
inc
clc
cltd
fadds
imul
jne
xorb
insb
xchg
ret
testb
es
or
inc
xor
sub
gs
mov
cld
loope
movsl
mov
lcall
outsl
loop
and
inc
addps
repz
xor
mov
push
mov
lods
lahf
mov
aas
mov
out
out
dec
mov
jne
pop
outsb
inc
sbb
pop
mov
data16
call
lds
movsl
pop
mov
ret
jle
mov
sub
pushf
in
jae
in
mov
ja
test
out
jmp
push
push
pop
jne
xchg
out
leave
mov
sub
sbb
adc
sti
inc
in
sbb
pushf
mov
cmp
pop
push
sub
mov
ss
jmp
fisubrs
inc
ret
fucomp
aam
xchg
lahf
cmp
leavew
and
das
arpl
orb
mov
jae
xchg
in
dec
test
in
mov
mov
inc
and
out
jb
syscall
mov
mov
push
jnp
sbb
mov
fimuls
dec
rclb
sbb
fwait
aam
shrl
dec
xor
sarb
jp
into
cld
adc
std
sub
jl
adc
enter
je
push
add
xor
dec
pop
fadds
loop
imul
imul
pop
aaa
into
js
push
pop
clc
js
rep
inc
inc
push
inc
lcall
cltd
inc
xor
add
dec
ds
ret
lcall
inc
repz
pop
mov
pushf
mov
xor
add
mov
nop
push
lock
sbb
inc
mov
mov
mov
pushl
loopne
cmp
ret
mov
push
scas
lock
rclb
pop
jns
sti
and
dec
lret
in
cmc
popa
in
clc
loop
add
cmp
and
fimuls
inc
sbb
mov
jae
fisttpll
xchg
adc
jb
test
mov
test
adc
cmp
mov
int3
jns
fldcw
mov
dec
jmp
mov
push
jae
xchg
jmp
aad
add
pushf
je
lea
popl
jb
sub
xor
int3
shlb
inc
adc
js
arpl
outsb
mov
sbb
scas
divb
shrb
cli
cmp
push
cmp
xor
cs
sub
test
nop
cld
test
pop
jbe
jo
jnp
cmpsl
adc
xor
sti
add
in
jno
scas
shrl
push
into
sbb
dec
dec
inc
dec
xchg
jne
mov
cmpl
imul
dec
stc
xchg
fidivs
pop
dec
data16
pop
jnp
mov
xor
xchg
rcrb
jecxz
test
ret
ret
fidivrs
enter
sbb
and
fdivl
shrl
scas
pop
xor
adc
cmpsl
inc
iret
add
add
push
and
adc
jo
test
xchg
push
jnp
jg
into
and
out
mov
xchg
popa
or
inc
arpl
cwtl
jo
add
adc
je
sbb
sub
xchg
int3
inc
pop
add
lock
and
lods
subb
cmp
out
mov
gs
mov
cmp
and
fsubl
add
xchg
cltd
or
sub
pop
xchg
pop
push
push
mov
sti
loop
lock
fdivrl
fwait
in
and
jae
jns
lods
imul
nop
shr
mov
std
jle
mov
scas
sub
popf
sbb
scas
mov
std
insl
mov
es
fadds
xchg
stos
jmp
loopne
and
mov
add
popf
dec
leave
fcomi
mov
mov
rolb
xlat
aad
popf
cmpb
mov
aam
shlb
jl
add
or
out
cmp
mov
jmp
cmp
daa
adc
mov
fisttpll
sbb
push
cmp
inc
and
js
fisttpll
cltd
data16
iret
stos
gs
push
jbe
mov
lock
push
rcr
in
mov
lea
pop
fisttpl
dec
repnz
cmp
or
push
outsl
cmp
test
inc
sub
mov
std
in
inc
ret
pop
fs
inc
fisubrl
inc
xchg
enter
mov
sbb
jnp
ret
lret
fwait
sub
push
dec
adc
incl
inc
test
ret
mov
mov
dec
scas
mov
pop
or
mov
push
fistl
add
jns
in
mov
out
sub
jle
aaa
pushf
mov
mov
scas
jno
das
outsl
push
bnd
dec
jne
in
cwtl
repz
fildll
or
clc
xlat
sbb
and
movsb
xchg
jp
xchg
mov
imul
movsl
push
add
test
mov
test
xchg
pop
xchg
ret
push
sbb
aaa
aad
mov
test
bound
cmc
lds
out
into
arpl
bswap
je
xlat
rcl
push
xor
pushf
mov
lds
pop
push
mov
sub
jo
das
jle
sbb
push
dec
pop
lods
mov
mov
inc
xor
pop
icebp
lret
mov
mov
mov
inc
jmp
je
lods
jl
mull
inc
mov
cmc
fwait
pop
xchg
dec
pop
add
mov
push
in
mov
stos
in
xor
test
adc
test
cli
stos
ja
loopne
or
dec
out
icebp
hlt
jns
push
cld
mov
jl
enter
jno
rorl
mov
imul
cmpb
jle
jle
scas
inc
cmp
insb
and
and
push
add
aas
adc
push
std
call
pop
in
push
pop
call
movb
cmp
loope
and
mov
dec
add
sarl
arpl
sub
pushf
je,pt
jecxz
cmp
rclb
out
loope
out
mov
cmp
orb
dec
into
aam
test
cmp
cmpsl
fwait
mov
cmp
scas
add
int3
popf
mov
bound
mov
call
sub
or
cs
cmpsl
int
mov
xor
hlt
adc
and
adc
movsl
sbb
jge
inc
outsl
pop
cmp
in
dec
leave
add
push
inc
addr16
repz
pop
mov
fidivrs
test
lea
inc
sbb
mov
xchg
inc
dec
jae
cld
xchg
adc
loopne
sbb
fidivl
iret
mov
movsl
inc
pop
addr16
fldl
test
fbld
enter
outsb
pushf
pop
xor
test
sbb
push
push
pop
xchg
in
lds
std
hlt
xchg
sub
dec
fildll
mov
mov
push
testl
pushf
sub
and
fcmovnu
xor
notb
or
sub
jmp
push
lods
or
sbbb
and
and
sbb
movsl
fildll
or
insl
mov
dec
in
repnz
int3
arpl
lcall
push
adc
pop
popa
xor
clc
dec
in
push
fstpl
std
sbb
cmp
stos
mov
push
jae
mov
cmp
push
dec
in
fwait
add
loope
xchg
mov
test
add
xchg
push
stos
aam
ret
jne
jbe
loopne
mov
xlat
shlb
jl
mov
lods
xorl
je
mov
subl
pop
adc
testb
fldcw
adc
stc
mov
clc
sub
addr16
or
sbb
jge
add
cmp
add
xchg
iret
add
dec
mov
xchg
jl
gs
dec
outsb
cli
dec
mov
ror
stos
gs
mov
fildl
mov
mov
inc
add
inc
dec
jmp
out
and
sahf
imul
loope
jg
xlat
in
push
jb
cmp
in
dec
xchg
mov
mov
mov
ret
lds
sub
rcrb
jmp
and
add
push
mov
add
testb
insb
enter
xor
lret
lds
cltd
les
jmp
addr16
sbb
cmp
stos
outsl
jbe
push
neg
aad
push
in
xor
nop
mov
test
ds
pusha
imul
cli
sub
or
call
rclw
dec
jns
add
mov
jp
lods
notl
test
rolb
mov
test
hlt
insb
popf
xchg
test
push
mov
push
xchg
mov
pusha
les
push
pop
aam
push
sub
fcoml
mov
test
test
fsubrl
sbb
dec
daa
stos
pop
nop
aad
mov
shl
repz
or
imul
into
or
push
fstpt
mov
lret
and
shrb
not
or
lcall
cmpsb
push
dec
jnp
inc
in
fdivs
fldenv
pop
pusha
mov
scas
std
aam
xchg
push
mov
dec
repnz
or
adc
rcrl
xor
and
xor
cmp
xchg
outsl
stc
in
sub
stos
add
pop
into
xchg
adc
incb
sti
movsl
lahf
nop
add
ret
mov
mov
xor
lock
add
je
add
js
out
xchg
clc
sub
add
dec
gs
test
mov
inc
pop
xchg
rcrl
adc
lock
sub
movl
nop
sub
aam
dec
or
out
cmpsb
mov
mov
mov
fsubl
xor
out
fimuls
test
and
in
or
call
and
je
mov
das
out
mov
sbbl
push
xorb
dec
add
subl
lcall
out
inc
pop
xchg
js
sub
push
inc
insb
lret
sbb
scas
mov
in
cmpsb
add
cmp
arpl
call
dec
shl
inc
andl
call
jne
orb
cmp
enter
and
cltd
loope
in
mov
in
icebp
mov
sbb
jecxz
movsb
jb
call
and
and
sbb
mov
enter
xchg
jne
mov
adcb
adc
xlat
pop
xchg
inc
fs
iret
fisubrl
jnp
adcl
jns
pop
test
fwait
shr
adc
filds
xor
pop
adc
jmp
adc
xchg
xchg
sub
aas
or
push
mov
ret
scas
lahf
xor
mov
mov
fildll
mov
xchg
and
ret
ret
mov
xor
cltd
aam
mov
iret
or
xchg
adc
rorb
xor
push
add
xchg
icebp
mov
adc
cmp
xchg
fdivs
lret
lret
outsl
into
jbe
loope
xor
adc
pop
pop
xchg
cltd
pop
lds
sub
lods
pusha
ja
sbb
ds
pop
xchg
inc
js
sarl
int3
jo
adc
mov
xor
or
xchg
sbb
sub
lds
dec
push
js
mov
jne
fwait
jo
adc
jl
cmpsb
xor
push
shlb
aas
and
sub
and
pop
stc
and
ds
or
cmp
pusha
mov
push
adc
mov
out
xorb
subl
outsl
das
mov
data16
push
and
mov
mov
das
out
shlb
movsw
xlat
ss
inc
pop
fsubrp
enter
or
mov
mov
int3
popf
out
fiaddl
push
gs
mov
lods
mov
sti
daa
pop
cmpsl
cmpsb
pushf
inc
sub
cli
xlat
inc
mov
mov
push
repz
or
adc
and
ljmp
out
add
sub
fbld
int
pop
sub
xchg
insl
adc
outsb
add
adcb
std
lret
sbb
mov
fisttps
push
andb
adc
subl
mov
push
test
cwtl
data16
sbb
push
mov
incl
in
fcmovbe
int3
mov
push
add
jp
pop
hlt
dec
fsubr
sub
pop
pop
sti
ss
dec
aaa
lock
adc
fstl
mov
push
ljmp
mov
mov
jne
loop
cmp
xchg
xor
std
push
ljmp
or
adc
xchg
mov
sbb
sarb
push
in
fucomp
push
call
cmpsb
leave
js
scas
nop
mov
ret
mov
or
mov
mov
xchg
int3
fdivr
pushf
adc
cmp
adc
cltd
add
lods
movsb
jmp
add
pop
dec
in
push
or
adc
roll
leave
orb
jns
jg
cwtl
adc
loop
sbb
xchg
loop
sbb
dec
out
insb
sbb
fcmovne
aas
mov
pop
das
insl
sub
push
leave
jmp
mov
ret
cmp
aam
add
xlat
pop
pop
sbb
loope
xor
pop
cmp
cmp
add
jo
cmp
sbbl
xchg
mov
je
cmp
xchg
xchg
push
cmp
xor
push
stos
repz
cli
int
or
lea
xchg
in
jle
jecxz
cli
pop
scas
dec
pushl
and
mov
es
std
je
stos
and
cmpsl
adc
push
stos
mov
xchg
jg
lds
sub
ljmp
or
repnz
inc
subb
sarb
btr
mov
lret
je
in
xchg
inc
mov
lahf
hlt
aaa
les
call
sbb
popa
dec
cmpsb
push
cmp
adc
add
rorl
arpl
mov
mov
or
sub
sbb
xrelease
push
ss
pop
and
mov
ljmp
test
addb
push
and
scas
ljmp
mov
push
fistps
lcall
hlt
pop
fcomp
int3
cltd
dec
xchg
sar
shlb
rcr
pop
sub
mov
daa
fs
mov
push
lods
pop
test
mov
and
jae
enter
adc
add
mov
mov
repz
dec
imul
mov
cltd
add
ljmp
cs
jbe
sti
in
mov
cmp
and
mov
adc
dec
movsb
adc
xchg
outsl
mov
lret
and
adc
xchg
jg
mov
xor
and
push
outsl
or
addl
aam
insl
pop
xchg
jmp
imul
cwtl
or
and
sub
andb
add
out
popa
jp
mov
push
sbb
fnsave
sub
outsl
fucomi
adc
sbb
lcall
pop
in
adc
push
mov
push
cmp
xorb
iret
mov
sub
push
shl
into
jmp
in
cmpsl
out
cmp
in
lret
adc
cwtl
test
xchg
cmp
out
repnz
imul
sbb
jmp
push
rorb
mov
aam
outsl
fdivrp
jnp
out
unpcklps
mov
movsb
stos
lcall
jno
stc
jae
lret
jmp
jnp
loop
or
roll
or
mov
cmp
inc
fidivs
repnz
dec
xor
cwtl
rorb
sbb
xor
push
inc
jp
cmc
pop
insl
insb
mov
shl
fdivs
mov
and
mov
imul
cmp
insb
int
pushf
daa
sub
outsb
bound
inc
imul
cwtl
jge
cmp
mov
mov
in
insl
add
ror
mov
sbb
mov
dec
in
push
push
call
jbe
loop
xchg
and
lret
push
lea
addr16
mov
or
popf
lcall
jecxz
cltd
addr16
push
cli
das
jmp
sub
cmp
iret
stos
dec
dec
jp,pt
insb
ficompl
xor
cld
decb
cmpsb
or
jmp
js
mov
fwait
jno
shrb
jp
xchg
out
mov
ljmp
mov
cmpsb
fwait
inc
inc
xchg
sahf
lea
stos
sbb
je
push
hlt
mov
fisttpl
jae
adc
icebp
lods
js
fiadds
movsl
flds
and
mov
cmc
inc
jae
ret
xchg
and
aas
or
xchg
nop
std
js
push
pop
pop
push
adc
ja
subl
push
mov
xchg
gs
pop
pusha
jnp
cmp
in
les
push
or
scas
enter
push
repnz
mov
out
lahf
jmp
push
adc
sub
cwtl
in
and
addr16
pop
or
mov
or
mov
or
subb
hlt
adc
or
jb
pop
jge
rcr
and
or
das
es
int3
mov
out
arpl
addl
shll
and
mov
out
mov
aas
fsubs
arpl
jecxz
mov
in
sub
pushf
xor
sti
clc
push
fadds
into
mov
or
push
jl
add
sub
dec
aaa
pop
rcr
gs
fistpll
orl
add
and
jo
xor
popl
insb
push
pop
jmp
and
sbb
cmp
popf
cmpsl
sub
push
pop
xchg
push
and
xchg
leave
je
ret
sbb
lds
mov
stc
dec
js
hlt
xor
inc
std
insb
pop
mov
dec
push
cs
mov
or
mov
ret
in
cmpsl
cmpsb
xchg
push
push
mov
dec
aas
pusha
mov
sub
jae
push
rcrl
pop
mov
cmp
or
sub
xchg
not
mov
std
mov
and
lea
xchg
push
cmpsl
lcall
stc
jle
and
dec
and
xorl
add
adc
mov
adc
xor
or
das
mov
xchg
pop
pop
int
dec
xor
and
loop
scas
inc
pop
imul
sub
jnp
or
mov
pop
addb
fstpt
hlt
cwtl
aad
jb
cli
aam
or
push
jmp
push
test
nop
fdivs
repz
ret
push
icebp
cs
jecxz
dec
xor
ljmp
xor
out
xchg
push
mov
stos
jb
mov
adc
pop
inc
dec
sbb
mov
pushf
add
sub
movsl
ret
push
aad
fstpt
add
movsl
or
push
lahf
outsb
fisubrs
mov
add
xchg
pop
iret
sub
into
pop
test
sub
xor
push
dec
push
sti
jg
aad
addr16
andb
punpcklwd
pop
mov
pop
mov
xchg
scas
xchg
pop
divb
sbb
dec
sub
ret
xchg
pop
jge
ljmp
ja
lahf
jge
fcoml
lcall
pop
insb
push
bound
pop
shrl
pushf
or
mov
dec
aas
jo
inc
dec
jmp
cli
cs
push
jl
movsb
sbbl
mov
lods
call
sub
push
in
loopne
mov
mov
mov
test
mov
xor
in
mov
push
mov
lea
cmp
stos
inc
dec
sub
jg
pop
es
xor
gs
inc
fsubl
lahf
rcrb
lea
xchg
mov
lea
fwait
mov
lret
fnsave
mov
lock
lret
add
and
lods
enter
xor
fcmovne
test
js
add
repnz
setne
flds
fsubs
fisttps
fdivrl
mov
ret
arpl
scas
pop
or
call
movsl
dec
inc
nop
ja
les
outsl
idivb
gs
adc
ljmp
add
lret
popf
xorb
fcoms
mov
lret
pop
out
mov
or
popf
aam
mov
dec
ret
mov
sub
push
neg
xchg
or
cli
xchg
ret
aaa
xor
mov
notl
sti
test
inc
cmp
stos
adc
push
clc
add
xchg
push
je
rcr
adc
lcall
ficomps
jae
ljmp
mov
mov
sbb
aas
out
xchg
sbb
mov
ljmp
mov
faddl
mov
iret
repnz
rcl
jp
scas
jb
cmp
jle
or
inc
push
lret
mov
popa
add
fs
pop
xchg
adc
add
daa
movsl
sub
in
rclb
mov
cmp
xchg
cmp
adc
int3
or
and
orl
and
cmp
icebp
pop
das
inc
push
sbb
xor
das
xor
pushf
daa
out
sbb
movsl
lret
jnp
pushl
movsb
cmc
divl
jne
leave
ret
rcrb
lahf
mov
adc
and
jge
and
in
imul
adc
data16
sub
in
sarl
daa
sahf
out
lock
je
push
movsl
addr16
mov
rcr
aaa
repnz
mov
das
mov
imul
push
push
fnsave
lods
jbe
mov
aad
pop
movsb
jne
addr16
jp
out
test
sub
dec
adc
rcl
xor
xchg
cmp
mov
push
sbb
mov
jbe
mov
in
and
into
pop
dec
pop
scas
xchg
scas
cmp
fsubl
push
push
imul
pop
or
jo
notb
push
xchg
and
mov
mov
sbbb
push
arpl
std
inc
mov
cmp
daa
icebp
inc
jmp
icebp
dec
jno
adc
lds
pop
jae
pop
push
lret
pop
push
insb
fisttps
mov
push
test
repz
enter
faddl
inc
cmp
fdivp
jge
les
stos
orb
add
pop
sbb
xchg
cmpsl
pushf
jo
sahf
lret
inc
cmc
mov
cmp
adc
mov
sub
cs
dec
out
sub
jae
js
dec
jae
jbe
dec
mov
or
sub
imul
jge
push
outsl
movb
and
fbstp
stc
adc
mov
scas
mov
mov
push
cmp
call
mov
mov
xchg
clc
cmp
dec
inc
sbb
daa
sti
sarl
and
stos
mov
clc
mov
push
pop
call
pop
mov
mov
add
add
cmp
add
lret
xchg
dec
mull
mov
data16
mov
adc
imul
add
scas
jne
ds
pop
out
xor
imul
lods
add
jno
orb
jg
scas
rcrl
outsl
movsb
test
rolb
jnp
add
mov
dec
pop
dec
loopne
mov
fsubrl
inc
shrb
and
rcr
mov
frstor
je
lea
mov
cli
xor
pusha
pop
jns
test
cwtl
je
popa
dec
sub
cmp
mov
adc
add
push
mov
lret
cmp
ret
cmc
pop
popa
js
mov
and
cmc
and
mov
xorl
xor
push
mov
sahf
call
or
fimull
push
jns
popf
fsubrs
add
or
addb
add
mov
je
xlat
inc
sbb
stos
ret
test
dec
cld
jp
xchg
cmp
hlt
leave
pusha
sbb
xor
popa
lods
sahf
lods
cmp
es
push
adcl
stos
rol
int3
mov
and
xchg
inc
inc
cmp
cmp
subb
popa
or
inc
int
pop
ret
inc
dec
scas
mov
out
lret
addr16
loope
jae
jne,pt
out
xorl
adc
jle
jb
scas
or
push
lock
jbe
paddsb
dec
pop
xchg
pop
mov
adcb
imul
ja
mov
call
and
mov
mov
enter
repz
dec
in
adc
push
push
mov
in
loopne
dec
cwtl
les
jp
pusha
stos
xchg
sbb
lock
sbb
sub
xchg
inc
scas
leave
and
add
sub
cmp
add
stos
mov
pop
and
movsl
fidivs
jo
jmp
cltd
mov
inc
inc
cli
inc
or
xor
das
and
pop
ds
mov
sub
jns
cmpsl
xor
mov
sbb
mov
mov
pushf
sbb
fidivrl
aad
in
inc
aas
jle
mov
call
rcr
mov
cwtl
cmp
inc
mov
out
addr16
les
pop
pop
fsts
dec
cmc
fnstsw
sbb
sti
popa
leave
pop
dec
dec
in
fistpl
int3
ss
daa
imul
or
lea
pop
inc
dec
add
pop
and
fisubs
mov
cli
mov
cmp
add
inc
push
adc
das
insl
xor
int3
inc
cld
lods
and
lods
lea
sbb
mov
sbb
or
jno
loope
mov
pusha
sbb
xchg
mov
loopne
lahf
seta
adc
push
and
mov
dec
hlt
fstl
and
dec
shl
and
ss
clc
cmpsl
and
shl
and
mov
mov
mov
call
push
push
inc
test
aam
sub
mov
out
sbb
popa
les
fcmovbe
sbb
cmc
ljmp
push
mov
je
add
pop
pop
out
sbb
jg
ljmp
out
xor
mov
cli
push
xchg
push
mov
xchg
negb
loopne
sti
mov
loope
add
dec
stos
push
adc
ljmp
jg
iret
movb
in
jnp
loope
push
fs
jl
adc
xor
fsubrp
adc
dec
jo
adc
lahf
xchg
mov
and
lods
mov
lea
pop
jnp
mov
pop
cld
std
gs
addr16
std
ret
push
mov
movsl
cmp
dec
pop
mov
test
je
movlhps
stos
call
adc
cmp
test
add
mov
iret
add
mov
xchg
sbb
fistps
xor
mov
rclb
arpl
jge
lea
aaa
or
ja
loopne
xchg
dec
es
xor
leave
push
fisubrl
jg
dec
inc
arpl
mov
lea
inc
mov
scas
push
ret
inc
dec
dec
push
mov
jl
hlt
and
pop
push
sti
test
mov
clc
xchg
scas
inc
lds
iret
sub
in
fsubp
push
stos
xchg
mov
xlat
cmpsb
xor
test
add
scas
dec
repz
shlb
jo
pop
push
jns
lcall
pop
cmp
daa
cwtl
add
mov
cltd
dec
sub
mov
fisubrl
or
in
clc
add
stos
lods
xchg
fdivrp
cmp
mov
std
push
rolb
cmpsb
lret
mov
in
ffreep
test
push
dec
and
push
or
cmp
cmpb
test
sub
push
xor
test
popa
jg
shrb
add
lcall
cltd
xchg
xchg
leave
pop
imul
xor
rcll
sub
sbb
out
js
inc
mov
aaa
add
push
xchg
stos
mov
movsb
xlat
jnp
xor
icebp
push
xor
std
sub
insl
jg
mov
xor
mov
lea
and
push
push
ret
scas
lea
aad
adc
push
mov
mov
xchg
xchg
imul
loope
inc
xlat
ret
add
call
sbb
jae
lock
mov
call
jne
stos
addr16
push
jo
test
adc
mov
pop
mov
mov
or
mov
icebp
imul
jno
xchg
out
cmp
adc
sbb
arpl
xchg
data16
aam
lock
jle
decb
and
es
cmp
lahf
pop
fsts
lds
pop
xchg
jle
push
movsl
test
ror
mov
test
rclb
ss
inc
push
aam
in
xor
adc
fldl
mov
push
stc
pop
shlb
pop
pop
mov
mov
xchg
addr16
xchg
sub
lock
lcall
fisttpl
mov
xchg
icebp
leave
ret
pop
dec
int3
test
mov
mov
in
mov
es
pop
pop
jmp
scas
or
xor
pushf
out
mov
les
ja
aaa
xchg
test
pop
xchg
sub
xchg
bound
push
cmp
call
aad
push
out
cmp
pmaxub
push
sbb
jo
aad
pop
aam
or
inc
sbb
repnz
inc
pushf
lcall
cwtl
push
cmp
push
push
or
stc
aam
push
aad
xchg
pop
push
mov
sbb
inc
in
lods
mov
test
daa
xchg
inc
test
outsb
and
nop
xchg
inc
lcall
mov
int3
cmp
movsb
mov
mov
pop
lock
loope
adc
into
ja
sbb
vpmacssww
sbb
xchg
dec
lds
loop
js
cltd
inc
push
lret
and
out
dec
xor
pop
loop
push
push
lahf
sub
and
mov
push
inc
mov
mov
adc
adc
call
cmpsb
xor
push
lock
sahf
jp
adc
xor
dec
pop
mov
and
mov
mov
sub
iret
push
dec
or
xchg
pop
mov
mov
repnz
scas
mov
add
insb
cmp
std
pop
jo
dec
in
mov
call
mov
js
jle
ljmp
sbb
push
fsubr
xor
ret
aad
cmp
jae
push
sti
lods
and
subb
fs
in
push
adc
sbb
rorl
and
test
jnp
loope
lds
pop
out
push
or
and
push
mov
sti
fwait
ds
movsl
imul
jbe
add
adc
shlb
mov
and
jp
popf
mov
xchg
stos
rorb
mov
inc
gs
outsl
xor
int3
jge
xlat
sub
clc
mov
or
jle
dec
xor
cmp
pop
dec
xor
push
pusha
xchg
mov
jg
sub
decl
push
je
jbe
push
or
jne
gs
xlat
pop
frstor
cmp
push
push
jb
push
xor
xchg
xchg
in
inc
fidivrs
imul
test
roll
imul
push
cmp
and
imul
fldt
sahf
pop
fdivs
pop
xor
inc
sbb
pop
mov
mov
inc
inc
and
cld
jmpw
rcl
not
push
outsb
test
in
mov
and
inc
cmp
ret
pop
pop
into
mov
loope
adcl
icebp
cltd
pushf
xchg
lcall
mov
ljmp
push
fidivrl
mov
dec
negb
mov
jne
mov
push
fsubrs
jecxz
xchg
pop
dec
jo
cmpsl
mov
popa
sahf
xor
ljmp
inc
pop
sub
lahf
and
rcrb
cwtl
pop
pusha
das
ljmp
mov
xor
pushf
in
mov
pusha
dec
mov
mov
imul
mov
fsubr
js
pushf
push
xor
push
cmp
sbb
and
scas
les
das
cmp
xorl
mov
fsubr
repz
sbb
pop
and
loope
scas
or
sub
sahf
cmpsb
ljmp
stc
cmc
out
sub
lret
out
mov
fsubs
xlat
sbb
sarb
xchg
ficomps
lcall
push
mov
cmpl
stos
mov
jp
lret
dec
mov
es
jecxz
repz
stc
mov
xorl
int3
fwait
loope
jnp
lock
and
inc
sub
xchg
jbe
pop
call
fdiv
push
fwait
rorl
add
aam
push
sub
aad
cltd
addr16
pop
ror
imul
push
into
push
mov
imul
fs
bound
call
cltd
clc
dec
or
packssdw
xor
jl
inc
aaa
jmp
rorb
jb
mov
aam
insl
adc
or
outsl
mov
int3
outsl
sub
adc
inc
jo
xchg
out
mov
lea
xchg
out
mov
dec
sub
xor
cli
jno
xchg
fs
in
pop
shll
xor
movsb
xchg
pop
movsb
fdivrs
cmp
xor
sub
sub
push
cltd
imul
xchg
cmpb
orb
xlat
in
xchg
push
lahf
clc
test
loope,pt
adc
dec
negl
in
lret
sbb
es
lods
inc
dec
push
xor
and
repz
outsl
and
sbb
hlt
nop
mov
pop
lcall
gs
jno
jbe
ss
mov
add
mov
sbb
lcall
cmp
dec
and
paddsb
xchg
jne
xchg
add
les
inc
cld
jns
cmpb
mov
mov
lods
inc
fwait
jmp
and
test
out
lcall
subb
mov
sarb
xchg
push
inc
enter
and
mov
mov
rcrb
jmp
bound
popa
xchg
dec
scas
lock
sbb
adc
xchg
mov
push
jp
inc
sbb
imul
leave
mov
cwtl
in
in
add
aas
mov
je,pn
movsl
sahf
mov
cmp
jnp
fisubl
lods
enter
jnp
sub
push
movsb
push
jo
push
test
pop
adc
adc
or
fcoml
or
rolb
sub
loop
pop
dec
push
aas
pop
jle
insb
pop
mov
stos
xor
mov
jle
cmc
cmpsl
test
xor
psubusw
test
cmpsl
out
sbb
sub
scas
rep
dec
add
cmp
orb
popa
aam
leave
int3
cmpsb
aas
jp
repz
insl
sbb
jns
sub
mov
xchg
movsb
dec
inc
jmp
test
jo
xchg
hlt
sub
xchg
imull
sbb
sbb
enter
inc
mov
and
dec
insl
dec
repz
enter
sub
push
xor
sbb
lret
and
and
cmpsl
lods
add
imul
jl
mov
and
leave
outsl
mov
mov
cmp
sbb
push
mov
lds
mov
xchg
mov
sub
dec
ret
icebp
enter
test
and
lds
or
jl
pushf
xor
adc
iret
mov
mov
iret
dec
inc
sub
enter
sbb
or
add
push
push
mov
fld
add
jp
jl
pop
sub
jmp
call
je
mov
scas
dec
push
mov
add
xorl
mov
pop
jbe,pt
in
cltd
xor
or
adc
push
js
mov
mov
mov
mov
sbb
sbb
mov
dec
sbb
neg
xor
sub
flds
mov
mov
ljmp
xchg
pushf
scas
stos
jae
out
cmp
push
aam
xchg
adc
mov
lahf
add
hlt
fiaddl
sub
pop
jno
mov
sub
aad
cwtl
push
dec
xor
les
bound
in
mov
inc
dec
cs
aaa
and
add
xchg
jg
cmp
and
scas
js
sub
mov
loope
ljmp
in
mov
imul
cwtl
cs
stos
adc
push
fcoml
ret
inc
fisubrs
sti
iret
push
ret
adcb
je
pop
inc
imul
adc
out
lods
sbb
cmpsl
xchg
mov
xor
and
push
clc
dec
test
add
xor
jmp
jbe
adc
cmp
aad
pop
mov
push
outsb
mov
inc
mov
int
scas
jmp
xor
fadd
pop
or
lahf
mov
push
repz
jo
push
aad
xchg
aam
outsl
mov
mov
icebp
mov
fistpl
mov
mov
in
fmull
push
in
inc
loop
incb
jae
pop
test
mov
dec
mov
icebp
cmp
lret
inc
nop
sub
out
adc
xor
add
fildl
mov
cmp
gs
ret
sbbb
mov
lret
add
jb
adc
xchg
pminsw
push
fsubp
cmp
in
int3
sbb
cs
orb
inc
xlat
jg
cmp
mov
cmp
jae
sbb
repz
mov
jnp
stos
shll
icebp
fsubl
cmp
faddl
mov
cmc
cmp
lret
lods
mov
dec
dec
adc
pop
jg
in
test
popf
pop
cmc
xchg
dec
sbb
xchg
cld
ljmp
test
nop
shlb
lahf
and
sbb
or
jg
push
mov
int3
out
fwait
sti
dec
test
add
pop
rcll
repz
inc
dec
push
scas
mov
pop
sbb
or
test
xor
fbld
test
xchg
cmp
jp
ljmp
ficoms
xlat
shrl
orb
ret
cmp
xor
decl
pusha
xor
pop
loop
adc
inc
dec
lods
sti
jns
loop
push
sub
lret
xchg
push
icebp
movsl
popa
adc
lds
into
fs
jo
adc
stos
adc
mov
insb
xchg
out
mov
jbe
shl
decb
cld
xchg
jb
push
push
into
fstpl
xor
leave
lret
repnz
mov
loope
aad
rorl
lods
add
lahf
ja
adc
sarb
andl
loope
popa
pop
and
repz
mov
loop
push
dec
pop
cmpsb
sub
push
pop
nop
fildll
or
sbb
fs
sarl
test
imul
out
loopne
mov
clc
cmp
testl
ret
sub
iret
ror
mov
push
movsb
add
stos
test
sub
call
aad
pop
ds
in
mov
and
mov
out
call
cmpsb
mov
ja
push
mov
rol
pop
cmp
scas
jo
fistpll
jns
pop
test
sbb
fcom
ja
out
lods
cli
les
pop
mov
pusha
mov
xchg
div
lahf
push
lods
or
mov
mov
lret
lret
femms
xchg
sbb
dec
ds
mov
mov
cli
push
cmc
aas
pop
popa
fadds
xchg
fnsave
jmp
mov
dec
mov
test
xchg
jle
cmpsb
outsl
xor
sti
jae
cmp
inc
mov
jno
aas
pusha
cltd
dec
sub
xchg
cltd
pop
fwait
add
inc
in
mov
lods
sbb
xor
ret
push
outsb
dec
sti
imul
xchg
hlt
pmaddwd
jnp
test
mov
ret
daa
pop
push
adc
mov
and
inc
add
mov
xor
aas
pop
fisubl
push
xchg
stc
and
and
pop
and
push
push
insl
and
fdivrs
movsl
sbb
sub
leave
pop
decl
andb
rcr
imul
cmp
mov
filds
bound
bound
mov
mov
xlat
scas
rorb
inc
popa
test
in
inc
xchg
jmp
lods
add
aad
pop
mov
jmp
fnop
icebp
or
loop
push
dec
adc
or
leave
mov
jp
out
fbstp
mov
push
insl
je
mov
cmp
mov
iret
scas
pop
push
xchg
imul
fwait
int3
in
daa
jle
out
sbb
pop
add
or
xchg
push
sbb
xchg
popa
mov
mov
mov
mov
std
gs
cmp
xchg
cmpsl
je
sub
mov
test
or
insb
xchg
in
mov
push
sub
mov
jge
les
pop
ficompl
out
fyl2x
repnz
out
push
add
clc
stc
mov
scas
mov
add
aaa
loope
xchg
std
inc
es
and
shlb
pop
ret
cwtl
cltd
dec
cmpsb
cmp
jmp
dec
adc
std
jl
inc
dec
jg
pop
xor
xchg
mov
incl
outsl
sbb
xchg
ljmp
lret
jmp
sub
arpl
pop
jb
subl
cli
movsl
daa
jecxz
movsl
jp
ficoms
xchg
sub
out
sub
jp
xchg
stc
das
jmp
or
fs
xlat
movsb
fiadds
loope
inc
jbe
stos
mov
je
notb
imul
arpl
fwait
or
hlt
aam
test
push
inc
adc
and
outsb
push
or
cmp
dec
inc
push
mov
test
xchg
test
adc
out
dec
jnp
xor
xchg
movaps
fwait
and
js
pop
push
cmp
stos
test
int3
jne
cwtl
mov
outsb
out
in
lods
and
andl
push
loop
faddp
sahf
xor
lret
out
scas
mov
push
movsl
bound
or
leave
or
push
sbb
loope
int3
cmpsl
adc
shlb
es
lods
ret
inc
dec
cmc
mov
mov
mov
mov
sbb
out
push
mov
les
push
test
les
cmp
push
jecxz
inc
add
ret
inc
test
jne
pop
les
sahf
outsb
shll
mov
test
sbb
mov
sbb
push
addr16
ss
jecxz
cltd
iret
adcb
aam
xchg
int
dec
or
push
push
mov
push
mov
je,pn
scas
sbb
sub
das
mov
test
jecxz
cmp
jle
dec
lock
and
stc
fstps
cmpsb
in
out
sbb
push
xchg
push
cwtl
push
fimull
push
test
inc
jns
sbb
orl
sbb
mov
call
cmp
inc
mov
push
lock
dec
fldcw
hlt
mov
add
aas
popa
jecxz
insb
mov
lret
push
jp
xor
push
adc
and
inc
mov
pop
ja
or
imul
lahf
mov
imul
in
jge
aam
stos
int
ficomps
mov
aas
loop
arpl
or
push
fisttps
test
mov
sbb
bswap
fsts
out
sub
aad
out
outsb
xchg
cmc
adc
push
clc
out
jnp
jmp
subl
pop
and
dec
lahf
cmp
sbb
sub
ljmp
and
fcomps
inc
mov
jno
pop
xor
enter
lods
mov
test
fcmovu
jp
pop
je
adc
inc
lahf
fbld
lret
rcrb
cli
outsb
scas
out
sahf
rorb
mov
data16
push
sub
add
mov
inc
jg
jmp
out
xchg
cld
imul
pushf
sub
lds
pop
in
ja
loopne
dec
xor
push
xor
pop
sbb
sub
jecxz
or
cmc
aad
rorl
or
jp
pop
add
sti
inc
dec
dec
add
ret
popa
pop
leave
pop
mov
bound
xor
lods
popf
xor
push
insl
ficoms
or
lock
mov
ja
out
mov
inc
int3
and
shl
aas
scas
scas
push
pop
shl
int3
adcb
scas
push
cmc
xchg
xchg
jnp
inc
xchg
xor
aad
pop
pop
mov
xchg
mov
xor
sbbl
adcb
jl
sub
fidivl
or
jns
ss
daa
push
imull
jl
pop
lock
repnz
pushf
mov
loop,pn
sbb
cmp
cmp
aaa
test
not
roll
in
das
out
mov
inc
aas
popa
movsl
repnz
cmp
jmp
aas
in
jns
mov
loopne
ret
add
push
mov
jecxz
mov
pop
mov
push
push
divl
popf
xchg
lods
out
notb
cmp
lret
xor
fdivs
xchg
add
mov
and
mov
mov
push
and
bound
mov
push
pop
add
pop
aaa
bound
repnz
mov
lods
mull
jle
push
in
data16
ret
adc
jmp
mov
push
xchg
mov
xchg
pop
leave
nop
sahf
stos
arpl
je
or
lock
out
mov
sti
movsb
cltd
aam
pusha
xor
int
pop
les
fimuls
jmp
adc
mov
or
addr16
xor
and
fwait
inc
popf
pop
xlat
xchg
lahf
cmp
sahf
fcompl
fsubrl
imul
js
movsl
push
sbb
add
and
mov
fsubrl
jge
outsl
add
imul
cwtl
cmp
test
mov
sub
sbb
jbe
pop
sub
ja
shrl
gs
push
test
cmovo
test
adc
ret
push
mov
dec
push
ljmp
xchg
and
pop
jb
mov
mov
ja
shl
jg
fwait
outsb
out
mov
inc
jl
out
stos
out
rorl
dec
in
push
int
insb
inc
pop
jae
inc
mov
addr16
lahf
add
ds
pop
xor
outsb
jecxz
dec
addr16
repz
cmp
aaa
orps
inc
mov
or
inc
push
cmp
mov
mov
mov
movsb
push
fisttpl
iret
add
das
xchg
or
and
jge
cmpsl
daa
inc
repnz
imul
cmpb
add
test
loop
and
outsb
inc
and
pop
stos
inc
and
xchg
adc
lock
rcll
out
lret
fwait
stc
xor
push
stos
adc
jne
xchg
adc
mov
movb
and
cmpsb
pushf
lret
push
arpl
pop
and
popa
pop
das
adc
aad
push
jecxz
xchg
inc
or
aam
outsl
fsubs
xchg
inc
pop
popa
cld
xor
cs
jne
imul
popf
popf
sbb
inc
sar
cs
test
cltd
add
xchg
dec
fcoml
cs
sbbl
pop
movsl
and
fwait
pop
inc
repz
iret
insb
arpl
jge
leave
pop
mov
les
mov
dec
inc
out
jbe
and
adc
inc
out
in
sub
push
jns
lock
push
add
push
push
dec
mov
out
clc
mov
push
enter
aas
push
or
jo
dec
mov
bound
stos
cmp
sbb
sub
dec
jge
dec
mov
frstor
xchg
sbbb
xor
mov
push
mov
scas
sbb
repz
or
cmc
lret
rolb
mov
mov
loopne
mov
add
sub
cltd
pop
cmp
shlb
mov
fnstenv
jge
mov
subb
mov
mov
sbb
aas
xchg
aad
call
or
and
jns
les
rcrl
push
ja
popf
pop
ret
int3
sbb
ss
stc
adc
rclb
mov
xor
adc
nop
and
fcmovnbe
xchg
lret
pop
outsl
cmp
fbstp
pushf
push
push
jecxz
pop
push
mov
push
lock
mov
jg
mov
push
xchg
push
cltd
notb
test
mov
ja
cmpsb
cmp
xor
icebp
fistps
push
xchg
out
mov
inc
pop
mov
mov
pop
mov
xor
adc
or
or
inc
mov
dec
popa
fisubs
jecxz
popf
cvtpi2ps
data16
fisttpl
dec
faddl
mov
addr16
std
andb
sbb
aaa
cmp
xchg
mov
mov
es
jne
dec
ss
addr16
ljmp
pop
int3
mov
inc
jns
mov
inc
lahf
cs
xchg
inc
mov
jbe
movsb
mov
mull
sub
jge
cwtl
ljmp
in
call
jmp
ficoms
testl
xchg
mov
mov
cmp
stos
inc
leave
imul
ret
stos
call
or
popf
cmp
loopne
sbb
fdivl
icebp
adc
out
pop
sbb
pop
call
inc
dec
and
roll
mov
xor
push
addb
cltd
jle
lcall
addr16
lahf
into
shl
cmpsl
and
mov
sub
sbb
jmp
mov
shrw
dec
flds
jg
mov
fwait
xchg
inc
phaddsw
inc
into
sub
jg
jbe
mov
test
mov
out
adc
dec
jo
xlat
adc
cmc
mov
lods
adc
repnz
pop
loopne
xor
aaa
jnp
inc
das
cmp
aas
mov
mov
in
test
sarb
mov
mov
push
scas
addr16
in
pop
fnstsw
dec
xchg
pop
xchg
xchg
mov
push
mov
ret
pop
imul
or
lahf
ret
outsl
cmp
aam
add
cmp
loop
sbb
cmp
out
test
imul
xchg
ja
outsl
in
push
xchg
fimull
imull
push
shll
mov
sub
jbe
jbe
sbb
push
jle
ss
std
xchg
mov
and
push
mov
xchg
int
jecxz
inc
add
movsb
je
cwtl
shlb
adc
test
jno
das
sub
push
mov
cmc
sbb
gs
sbb
mov
iret
mov
idivb
pop
cmovs
inc
xor
mov
pop
dec
sbb
mov
and
mov
loopne
sbb
sub
xor
movsb
iret
adc
mov
in
aas
dec
stos
dec
int
jb
scas
sub
orl
lods
dec
ljmp
xchg
rolb
adc
out
movsb
bound
divl
pop
adc
jp
enter
mov
xor
cmp
movsl
movsl
shll
aam
push
mov
ret
mov
cmp
inc
and
xchg
fistpll
jge
adcl
fisubrs
test
jno
ret
testl
xorb
pop
loop
andb
dec
pop
shll
inc
dec
mov
ror
gs
or
jg
out
int
inc
outsl
mov
lahf
mov
mov
add
or
adc
sbb
push
mov
fistl
adc
cmp
aas
inc
lret
push
push
push
pop
add
sbb
popl
dec
sub
ss
xchg
cld
mov
aaa
pop
adc
cltd
rcrl
mov
xchg
mov
push
add
mov
xor
loop
ljmp
ret
sbb
outsb
rcr
mov
clc
mov
lods
cmp
pop
aam
insl
sbb
mov
clc
add
std
arpl
add
mov
idivl
pop
pusha
and
fcomps
into
xchg
test
push
in
mov
pop
cmpb
push
lret
addr16
mov
fcmovnb
orl
or
push
pop
nop
jle
shl
add
sub
ficomps
sbb
shll
lcall
data16
sub
push
adc
int
dec
movsb
jae
mov
inc
out
ret
xlat
xorb
orb
ret
adcl
xchg
mov
dec
scas
cmpl
push
add
rolb
mov
les
dec
loop
js
inc
sbb
lret
inc
test
jns
jmp
adc
lods
dec
data16
xchg
adc
push
test
or
cs
roll
movb
es
test
xor
jle
push
call
mov
cmp
cmp
mov
leave
xorb
push
mov
xchg
insb
mov
icebp
into
inc
inc
jo
loopne
je
fwait
push
inc
mov
sub
xchg
xlat
out
cmp
rcr
push
xchg
fwait
jge
adc
and
dec
iret
loopne
xor
jo
dec
fmull
out
arpl
roll
cmpl
cs
mov
push
and
out
or
cmp
das
jae,pn
jb
dec
add
nop
pop
call
daa
lret
leave
sub
or
test
out
addr16
ficoml
dec
lcall
jl
pop
int
add
hlt
and
testb
push
or
sbb
daa
rcl
clc
lea
rorl
sbb
mov
in
out
stos
ja
add
stc
test
mov
loopne
fucomi
xor
mov
stc
out
movsb
dec
mov
push
pop
shlb
int
iret
pop
pop
imul
cmp
pop
inc
cmp
ficoms
inc
out
xor
dec
ret
adc
mov
push
gs
lods
inc
int
fwait
daa
loope
mov
out
and
add
aad
jg
dec
mov
faddl
adc
testb
sbb
jnp
jecxz
jns
in
push
fsubrs
adc
aas
es
cmp
cmp
jnp
test
out
rcl
sub
jge
decb
in
int3
into
movsl
mov
pop
pop
sbb
clc
fcmovb
imul
sub
fisubrs
mov
loop
pop
add
cmp
testb
xor
inc
clc
pop
sbbb
cwtl
notb
inc
js
roll
fdecstp
jbe
or
aas
ret
pop
loope
jp
js
push
sbb
sub
or
mov
push
orb
dec
pop
ljmp
cmpl
cwtl
lds
mov
nop
push
dec
aas
pop
int
sub
xor
push
scas
incb
jl
cmp
call
out
mov
cmp
sub
stos
dec
xor
xor
sub
ds
idivb
jmp
or
fxch
jnp
insl
in
pop
push
push
cmpsb
push
hlt
xchg
aam
push
mov
loope
push
ljmp
mov
rcrl
sti
scas
inc
dec
mov
jne
scas
jmp
dec
sub
in
es
lods
jp
repnz
scas
mov
call
pop
insb
ds
or
pusha
movsl
dec
jp
lcall
cmpsl
call
loop
xchg
rolb
std
sub
xchg
dec
dec
sbbb
jo
mov
jne
dec
jecxz
shll
cmp
repnz
sbb
cmp
mov
lea
push
lret
in
cmp
ljmp
in
push
fndisi(8087
cwtl
mov
push
pop
mov
cmp
shr
and
lahf
lock
icebp
cs
mov
dec
xor
sub
xchg
andl
fsubrs
sbb
cmp
jnp
jb
popa
jnp
add
test
fsts
adc
cwtl
lret
adc
imul
outsl
sti
jbe
mov
add
jmp
sbb
mov
js
rclb
nop
jb
mov
scas
or
mov
mov
out
mov
xor
inc
mov
push
push
mov
mov
pop
scas
enter
xor
inc
sub
adc
aad
jp
mov
scas
repnz
out
mov
xor
mov
lea
popl
loope
jae
dec
inc
jnp
stc
mov
jmp
push
scas
lds
mov
filds
jae
icebp
push
aad
push
aaa
add
pop
inc
cmc
mov
lret
sub
inc
pop
cmp
scas
into
jo
rorb
mov
and
roll
psubw
or
and
sbb
xor
xchg
and
xor
jns
jno
xchg
cwtl
cmc
add
sub
xor
repz
pcmpeqd
mov
icebp
inc
xlat
mov
mov
sbb
inc
mov
test
out
stc
jle
lea
gs
imul
in
jbe
mov
jmp
popa
stos
popa
inc
fsubs
aaa
jl
mov
sub
fisubrl
arpl
std
ret
sbbl
aam
mov
push
push
outsl
jmp
lock
out
lcall
xor
inc
mov
mov
aam
paddw
shlb
int3
mov
stc
lods
sbbb
int
lods
fdivrs
cmp
mov
loope
fwait
inc
add
stos
in
out
jns
xchg
or
cmc
inc
in
arpl
cmp
ljmp
cmc
push
cmp
aaa
mov
sub
mov
jle
and
dec
mov
gs
push
stos
inc
flds
pusha
into
adc
and
lahf
mov
sahf
loopne
scas
pop
xabort
lret
scas
pop
aaa
lods
icebp
mov
pop
stos
mov
jns
divb
lahf
cmp
sbb
mov
xchg
or
sbb
xchg
mov
cmp
sub
sti
push
movsl
cmp
es
subb
xchg
push
popf
sbb
xlat
bound
repz
lock
push
in
sarl
xchg
iret
popa
outsl
fcoml
mov
cltd
inc
push
add
xchg
cmp
mov
fisubrl
push
mov
jmp
fmulp
xchg
call
mov
out
mov
cwtl
testb
xor
sbb
mov
out
rorb
cmp
xor
imul
stos
mov
test
sbb
or
push
fucomi
xchg
push
jnp
insl
fsubr
clc
and
mov
jo
jns
out
sbb
in
sbb
xchg
int3
mov
jp
test
push
pop
dec
aaa
mov
pop
rorl
mov
add
subl
jge
mov
push
into
sbb
mov
cwtl
sub
adc
pop
push
add
jnp
push
aam
stos
outsb
rcrb
cwtl
test
out
int3
or
cld
leave
lcall
adc
clc
ss
lods
test
outsl
mov
vmovmskps
pushf
imul
out
les
lock
int3
enter
jecxz
add
push
push
add
cmp
lds
xorb
mov
add
subl
cltd
rorb
push
clc
prefetch
cld
flds
movsb
aaa
es
xchg
pop
mov
add
jo
dec
adc
mov
orl
xor
cmpsl
sub
in
iret
mov
sub
jl
in
mov
pop
icebp
aad
mov
dec
movsb
or
dec
mov
fdivrs
push
out
cmovge
mov
sbb
sub
les
movsl
sbb
xchg
leave
ret
adc
mov
jne
fwait
jmp
test
dec
mov
inc
roll
leave
lret
fmuls
call
and
adc
mov
xchg
lock
iret
xchg
stc
adc
sub
and
and
sbb
imul
sub
mov
mov
pop
cld
sti
fisubrs
xchg
in
in
jmp
mul
push
test
dec
bound
out
js
pop
and
sub
mov
mov
sub
inc
add
fisttpll
cmp
repnz
pop
cmp
lock
jecxz
invd
push
mulb
dec
mull
loope
mov
lret
call
in
jno
cltd
adc
dec
ja
jl
push
lock
pop
test
mov
test
jns
mov
pushf
xchg
mov
imul
std
out
mov
adc
out
mov
mov
xor
mov
pop
inc
mov
pop
fnstenv
fisttpll
inc
cld
mov
gs
ds
and
stos
pop
les
push
gs
ljmp
in
cmp
pop
cwtl
cli
pop
aam
add
sbb
fidivrl
mov
or
pop
rcrb
out
pop
pop
mov
push
xchg
fcompl
cwtl
nop
sbb
addps
add
js
imul
sub
cmpsb
mov
mov
inc
cltd
ja
push
std
push
sub
lods
mov
xchg
loope
test
loopne
jbe
or
mov
test
outsb
ja
xchg
call
repz
int3
add
sub
mov
repnz
or
and
out
in
push
xchg
fldl
or
sbb
cmp
cltd
add
adc
mov
add
push
jmp
xor
xchg
cmpsb
xchg
rcrb
dec
and
cli
scas
push
mov
mov
popf
dec
push
pusha
mov
xchg
dec
push
mov
imul
adc
leave
and
out
lock
or
jmp
lods
push
mov
leave
jmp
mov
xchg
push
push
sbb
adc
loopne
xchg
sbb
sub
xor
mov
mov
cmp
sbb
cmp
xor
inc
inc
pop
test
sub
mov
mov
test
and
lret
cmp
js
shll
mov
mov
daa
fstpt
push
inc
cmp
mov
fucomip
inc
pop
addl
mov
lret
aaa
icebp
and
popf
cmp
or
jecxz
ja
xor
pop
mov
insb
popa
mov
lea
sub
les
orl
adc
sar
in
inc
jo
std
fwait
out
sub
sub
sbb
inc
pop
cmp
daa
adc
hlt
aaa
in
out
inc
jo
movsb
mov
icebp
ret
xor
push
and
loope
inc
test
call
ja
mov
jmp
sbb
jmp
pop
mov
jge
xchg
pop
xor
add
ljmp
out
rol
pop
sbb
or
stos
or
pop
stos
jo
ja
aam
sbb
push
cs
arpl
cld
imulb
mov
inc
fiadds
into
mov
shlb
test
dec
xor
pushf
iret
ja
test
stc
sub
xchg
sub
mov
insl
cmp
sti
cmc
lcall
sub
or
inc
cmp
or
iret
fadd
fmuls
cmpsb
inc
iret
mov
cmc
sbb
pop
push
add
jle
mov
dec
mov
in
jle
adc
and
mov
sti
jnp
cmp
dec
dec
imul
jo
fiaddl
mov
or
addr16
add
pop
mov
sub
xchg
push
fs
jp
mov
adc
icebp
dec
lods
into
adc
jbe
mov
jbe
push
jmp
adc
push
out
xchg
push
adc
or
insb
es
mov
jl
lock
dec
xor
test
jne
sbbb
repz
add
pushf
sbb
movsl
mov
cmp
shl
pop
negl
or
pop
pop
loop
jo
jmp
and
scas
outsl
sbb
or
pop
cltd
cltd
sarb
inc
sub
and
and
jp
sbb
nop
gs
pop
subb
div
dec
xchg
lods
xor
out
nop
arpl
jle
sub
mov
stos
push
mov
push
add
lea
xor
xchg
mov
inc
or
add
xchg
in
mov
idivl
push
jecxz
imul
pop
push
mov
popa
shrl
mov
or
push
xchg
and
movsl
and
mov
cmp
in
xor
test
out
insl
ret
add
sbb
fnstcw
lods
dec
mov
bound
rclb
xchg
es
jae
mov
ss
mov
into
sahf
add
cmp
andl
push
push
ljmp
push
add
jl
call
int
sub
sbb
outsb
add
push
dec
icebp
test
mov
pusha
push
rcll
jmp
push
push
negb
out
pusha
or
jbe
inc
gs
cld
xor
insl
scas
jae
fidivrs
xor
jae
jne
mov
jbe
ljmp
scas
faddl
lret
je
imul
mov
cmpsb
push
xlat
xorl
sti
lea
add
push
filds
movsl
or
lods
aam
inc
mov
loop
mov
sbb
jle
pusha
xchg
ret
or
fsubrl
inc
inc
dec
test
test
lods
rcl
ret
hlt
sbb
sarl
push
pop
loope
ret
inc
cmp
jnp
jecxz
adc
and
cmp
insl
sub
push
imul
fstp
bound
push
je
xchg
lods
push
sub
adc
loopne
movl
xorb
or
lods
loop
or
adc
xchg
inc
mov
ds
divb
mov
mov
jg
mov
pop
sbb
les
bound
jb
mov
call
mov
jo
pop
mov
test
in
jle
call
aad
mov
push
xchg
mov
insl
adc
mov
out
out
or
inc
jecxz
popf
mov
mov
in
dec
notl
push
pop
bound
ja
les
xchg
mov
popa
mov
cmp
adc
sub
fisttps
mov
cmpsl
cmp
mov
scas
cltd
orb
sbb
movsl
pushf
and
loopne
pop
sarl
push
push
xchg
jg
mov
lds
add
push
clc
fstps
or
cmp
enterw
shl
cmpsl
out
pusha
ret
pop
adc
jno
adc
xor
lods
adc
in
mov
or
aad
into
leave
inc
xor
mov
inc
ds
in
and
dec
loope
mov
inc
andb
lea
jns
xor
ja
popl
ljmp
iret
enter
cwtl
sub
test
dec
cld
pop
cs
dec
mov
fwait
loop
std
ljmp
sub
xchg
das
loopne
dec
push
mov
push
imul
xor
jno
jmp
xlat
bound
adc
ss
lea
pop
cmp
mov
pop
sub
push
lcall
mov
pop
lret
dec
sbb
rclb
cmc
cmp
mov
rcrl
and
sbb
dec
cmpsl
jg
adc
pop
lock
cld
inc
jo
or
mov
pop
in
leave
cmp
aaa
repz
lret
imul
int3
adc
mov
jmp
push
xor
imul
jg
push
xor
ret
ret
pop
pop
mov
aam
add
sbb
add
jmp
and
nop
push
or
test
sahf
sub
adc
out
int3
cmp
xor
mov
jp
popf
adc
adcl
adc
pop
mov
push
shll
jne
fstps
out
adc
xchg
mov
sbb
jns
or
push
pop
aad
xor
jne
push
repz
add
sti
adc
or
dec
into
pop
add
dec
or
cwtl
lret
sbb
dec
repnz
sub
pop
inc
shrl
pop
loopne
or
js
fiaddl
sbb
push
or
ret
aam
pop
in
push
push
xor
and
int3
dec
aam
push
xchg
jle
jns
push
xchg
cmp
push
fcoms
jno
lahf
mov
xor
stos
aam
push
and
icebp
jae
lock
sbb
sahf
sbb
test
sbb
adc
std
repz
pushf
ljmp
sbb
add
fwait
and
clc
xchg
enter
dec
ret
faddl
mov
push
cmc
outsl
sub
cmpb
ret
lea
imul
xor
pop
adc
mov
popl
cld
inc
mov
sub
jg
in
jns
repz
in
inc
add
sbb
lods
ja
sbb
lahf
fwait
adc
dec
push
mov
imul
mov
jae
repnz
pop
jmp
iret
jge
sub
dec
cmpsb
add
lret
insb
push
data16
loopne
jl
shrl
push
addr16
push
jg
jmp
pop
mov
aas
mov
in
int
into
je,pt
adc
push
fdivl
xchg
cmp
sbb
jnp
cwtl
rorl
cld
adc
push
jns
mov
and
aad
adc
outsl
xchg
sar
imul
xchg
xor
call
sub
orl
xor
or
loop
leave
stc
loope
pop
cmp
fistl
dec
shrl
cltd
push
mov
sahf
in
je
scas
fidivrl
or
fdivl
xor
cwtl
dec
mov
sub
xchg
mov
xorb
addr16
mov
cmc
jp
std
popf
aad
or
in
add
and
push
jbe
out
and
lea
mov
mov
or
add
jbe
fs
xor
shll
test
stos
adc
inc
imul
inc
pusha
mov
incb
xor
adc
jl
mov
popf
repz
imul
push
out
push
imul
divl
dec
fsubrs
in
inc
sbb
lock
dec
js
outsb
aad
dec
cwtl
cmp
incb
test
pop
movsl
xor
dec
mov
jo
icebp
jae
in
jmp
ret
jb
data16
push
jp
sub
mov
jb
dec
repnz
add
scas
mov
push
pusha
int3
js
pop
bound
cltd
pop
mov
popa
in
sub
push
cmp
movsb
scas
out
test
sti
fldcw
mov
out
and
fiadds
push
xor
insb
jmp
dec
mov
enter
in
jp
dec
cli
push
mulb
mov
xchg
repnz
jg
sti
loop
sbbb
jb
pop
sahf
movsb
out
xchg
mov
jnp
lock
shrb
mov
and
addr16
jecxz
sbb
cs
shll
in
movsb
int3
pop
xorb
add
out
rcll
repnz
cwtl
cmp
mul
lea
cltd
out
test
in
xor
ror
push
inc
sub
xchg
sub
inc
and
mov
sub
pop
inc
cmp
mov
jo
adc
push
ret
xor
push
push
xchg
std
mov
lcall
cmp
dec
xchg
mov
call
xor
and
lods
imul
repnz
pusha
data16
scas
popf
adc
decl
ds
cmp
shlb
sbb
push
xchg
insl
jo
test
fisttpll
push
test
std
insl
add
xor
lcall
add
mov
in
add
das
mov
cmp
push
sbbl
pop
loopne
test
push
push
jecxz
jl
inc
cmp
mov
adcb
jecxz
pop
int3
xchg
pop
push
test
cmpsl
pusha
rclb
imul
sbb
push
mov
cmp
cwtl
dec
or
nop
fwait
jb
push
jmp
fwait
inc
cmp
and
fnsave
jecxz
stc
out
lret
pusha
cli
cmp
xchg
mov
fiadds
add
lea
dec
mov
movsl
adc
cmpsb
ficoml
inc
cmp
scas
pop
cmc
cmpsl
sub
push
adc
pop
adc
js,pn
inc
adc
mov
cltd
jne
mov
adc
push
cmp
shrl
cwtl
sub
shlb
imul
adc
shll
pop
jo
int
mov
push
negb
mov
pop
outsb
add
enter
shrb
push
fmull
jecxz
loop
jge
or
and
gs
call
inc
and
mov
xchg
rclb
sarb
fs
push
mov
sarb
test
inc
xchg
push
push
repz
push
inc
sbb
fyl2x
inc
test
cmpb
dec
dec
les
mov
loop
iret
xor
out
fidivs
push
icebp
clc
shll
adc
or
test
cmc
adc
and
xor
inc
subb
outsb
pop
pusha
in
push
jge
mov
mov
cmpsl
gs
lock
mov
imul
repz
mov
dec
adc
xchg
lds
xchg
out
sub
test
and
push
insl
xchg
lods
jns
dec
jns
fnstenv
loop
movd
leave
in
add
js
lods
arpl
inc
fnstcw
sub
ljmp
and
sbb
rcl
cmp
test
pop
mov
shrl
and
jbe
lahf
xchg
xchg
sbb
jg
ds
add
out
int3
enter
jecxz
xor
or
jnp
mov
mov
pop
out
in
sbb
aad
lock
sarb
mov
mov
js
xor
sbb
lahf
daa
xor
lret
sahf
dec
xor
inc
adc
xchg
adc
sub
adc
inc
push
push
dec
jl
xor
je
cmp
mov
mov
das
mov
pop
pop
jne
push
jno
orl
pop
cltd
jle
cmp
mov
inc
push
popa
push
jo
jle
cltd
into
test
call
in
daa
cli
scas
pop
add
mov
push
data16
mov
jecxz
imul
jnp
pusha
in
test
les
loopne
cmpsl
iret
test
in
int3
fldenv
test
cmp
or
mov
sub
xchg
xlat
imul
arpl
loopne
stc
cmp
xchg
cmp
mov
mov
ss
mulb
mov
or
mov
push
outsl
or
lret
adc
and
xchg
adcb
sub
lea
lcall
push
push
push
in
mov
popa
pop
stos
lock
xchg
push
xor
mov
movsb
loopne
gs
int
mov
or
sbb
stos
xchg
movsb
imul
xchg
mov
das
shlb
pop
cli
insb
mov
fists
cld
loopne
lock
and
cwtl
mov
sti
je
jl
gs
stos
mov
inc
clc
cmp
roll
cmpsb
xor
dec
cwtl
cmc
xor
repnz
xor
test
bound
data16
cmp
mov
imul
cmp
mov
mov
insl
ret
jmp
sahf
push
shlb
add
add
adc
mov
movsl
shl
push
sbb
inc
dec
dec
push
xchg
adc
arpl
inc
xor
sar
jo
mov
lods
outsb
inc
stc
mov
push
or
push
xor
push
sbb
push
inc
ds
dec
cltd
aaa
notl
sbb
inc
mov
add
push
mov
fiaddl
mov
cmpsb
shll
ds
pop
in
xchg
xchg
cwtl
mov
leave
sbb
lret
push
inc
push
push
inc
sti
jns
jp
sti
iret
cmp
mov
stc
stos
pop
std
dec
dec
xor
lcall
mov
adc
cs
mov
addr16
xchg
repz
jne
inc
enter
pop
sti
xchg
data16
mov
xchg
outsl
rcrb
dec
fcoms
scas
xchg
test
iret
mov
call
cltd
cmp
ljmp
jo
xor
sub
add
ds
div
pop
out
jns
inc
cmc
out
insb
repz
jbe
or
push
inc
shlb
negl
adc
nop
add
xchg
and
push
rcll
stc
jbe
mov
in
cmp
scas
mov
xchg
sbb
adc
jl
cld
enter
mov
ret
xchg
repnz
adc
loop
sbb
sub
ljmp
outsl
mov
jae
xor
test
mov
scas
mov
in
dec
lahf
ds
add
pushl
cwtl
pop
mov
and
sub
sub
mov
imul
jne
mull
fbstp
xchg
scas
push
pop
push
aas
push
sti
cmc
xchg
dec
sub
mov
mov
push
xchg
movsl
ficoml
sub
ja
call
sub
cwtl
lcall
iret
pop
pop
xor
aas
sub
call
lcall
dec
jg
imul
dec
mov
fsts
mov
push
xchg
jae
daa
jl
mov
mov
dec
mov
dec
inc
cli
pop
je
and
mov
test
pop
xor
mov
add
stos
add
or
mov
loope
hlt
ljmp
or
scas
scas
cmp
shrl
push
jp
xchg
enter
sub
inc
shlb
mov
movsl
xor
nop
fsub
pushf
fmuls
inc
cwtl
dec
cltd
lods
sbb
popa
or
mov
mov
call
cmp
mov
inc
imul
push
mov
mov
xchg
cmpsl
adcb
ds
mov
test
xorb
movl
insb
mov
rolb
fcompl
arpl
loopne
sub
test
in
scas
add
mov
mov
xchg
je
repz
jecxz
scas
ret
mov
scas
bound
or
int3
xor
out
call
stos
lahf
ror
xchg
jno
mov
repnz
das
aad
int3
arpl
mov
shlb
sbb
xor
js
push
ret
mov
pop
cmpsb
out
out
push
sti
fisttpll
repz
enter
push
mov
push
ss
incl
jno
pusha
lret
repnz
xor
jno
js
and
out
and
adc
jge
inc
sub
cmp
inc
in
dec
or
movsl
mov
xchg
nop
movsb
std
in
dec
dec
or
cmp
pop
ja
nop
stc
mov
inc
cmc
dec
or
into
popa
xor
adc
movsl
jb
bound
mov
sbb
movsl
sbb
test
enter
lock
dec
inc
lea
cmc
hlt
mov
nop
xor
stos
jae
xlat
or
or
lock
jmp
dec
mov
sub
xchg
dec
fsubrs
pop
pop
sbb
xor
cmp
mov
mov
ret
sarw
or
adc
jnp
cmp
jo
rorl
and
sbb
jecxz
js
push
cld
add
push
add
adc
adc
cmp
xor
inc
pop
rcll
sbbl
add
sahf
mov
mov
je
cmp
mov
xor
clc
stos
test
or
and
lds
jp
fwait
insl
rcrb
push
sbb
fldlg2
or
iret
sub
dec
push
daa
dec
jbe
iret
fistpll
scas
push
pop
into
fdivs
test
cmpsb
jecxz
mov
xchg
inc
push
push
or
or
out
and
mov
call
adc
push
movsl
sbb
pop
call
pop
cmp
popa
fsts
enter
jp
inc
loope
pop
loop
cmp
inc
xor
or
int3
mov
stos
xchg
icebp
les
inc
push
add
pop
pop
fisttpll
mov
lea
paddusb
stos
xor
and
lock
fiadds
inc
loopne
dec
mov
cmp
xchg
push
cmp
inc
dec
xchg
mov
mov
pop
push
jl
jmp
jg
sbb
jnp
lock
outsl
faddp
fidivs
mov
loopne
int3
adc
mov
and
mov
mov
loopne
pop
sahf
sub
ret
sti
rolb
pop
loope
mov
push
jb
fstps
pop
dec
int
or
xchg
ss
lret
bound
out
cmp
test
sub
mov
or
sti
pop
mov
lcall
mov
jmp
pop
jp
fimuls
sbb
sub
dec
js
xchg
push
pmuludq
inc
mov
cld
push
mov
push
sbb
out
ljmp
sbb
ret
jmp
and
stc
xchg
cs
xchg
fs
mov
adc
popa
sub
shrl
test
xor
mov
mov
pop
mov
adc
mov
jge
cmp
mov
test
fadds
lods
inc
lahf
bound
dec
rep
add
int
jo
cmp
sub
ja
cmp
mov
rol
add
adc
push
popa
stos
insl
xor
pop
jns
and
add
jg
sub
mov
aam
daa
mov
addl
cmp
sbb
daa
clc
fists
movsb
xor
movsl
leave
mov
jbe,pn
dec
push
andps
ret
aas
cmp
sbb
cmp
or
imul
ljmp
add
sbb
ret
sub
mov
shrl
sbb
mov
aam
sahf
cmp
imul
loopne
mov
ds
jge
adc
aad
dec
aad
rol
and
and
movsl
or
inc
jg
aas
rol
dec
pop
pop
iret
mov
stc
xor
add
xchg
out
xlat
nop
inc
jno
cmp
jno
inc
mov
lods
sub
aaa
mov
push
jns
mov
outsb
sahf
jecxz
jmp
ret
and
clc
test
inc
mov
jns
jo
idiv
pop
jo
mov
xor
lret
mov
adc
je
adc
push
sbb
sti
lcall
pop
inc
fwait
loopne
lret
push
imul
xor
push
lods
movsl
nop
and
mov
add
mov
push
in
popf
popa
aaa
cltd
jg
mov
fdivs
push
fstl
or
iret
xor
add
movsl
imul
stos
inc
sbb
out
loopne
or
lcall
push
jnp
fwait
inc
sub
mov
mov
cmpsl
sub
push
scas
lea
pushf
push
lcall
jns
mov
lods
mov
push
bound
das
add
sbb
hlt
and
sarl
loopne
sarb
pushf
aas
xor
push
push
fidivs
jb
dec
rolb
or
stc
mov
std
lods
cs
outsb
in
int3
sahf
cmp
jle
stc
lock
adc
aam
or
adc
lahf
fidivrl
cmp
sar
out
das
adc
scas
ljmp
push
mov
cmp
fcoml
xchg
test
mov
sahf
push
pop
cmp
mov
mov
clc
lret
mov
in
cmp
lea
jmp
xorb
xor
ss
pusha
sbb
insb
cmpsb
pop
and
jecxz
fmuls
imull
jl
aad
mov
std
lret
fsubrs
int
test
mov
push
sbb
lods
push
jle
subl
push
decb
push
inc
cmp
aad
pop
jne,pt
call
call
mov
mov
int3
xorl
push
stos
or
fiaddl
mov
out
jae
fsubs
ja
scas
and
jns
sbb
shrb
jnp
pop
das
ljmp
push
scas
aaa
sti
stos
iret
mov
lret
lahf
sub
stc
aam
call
ds
jg
fadds
shlb
pop
arpl
dec
lods
mov
xor
jmp
adc
lock
aad
mov
stos
xlat
orl
movb
insl
push
ficoms
dec
push
jne
push
jmp
je
or
sbb
xlat
push
and
mov
or
dec
inc
xor
lock
push
cmp
pop
and
and
addb
aas
add
lods
aad
out
push
out
or
mov
sbb
mov
and
rcrl
vpunpckhqdq
imul
sti
xor
mov
in
xchg
pop
push
jo
shlb
clc
mov
add
out
testl
push
pop
add
adc
inc
lcall
shlb
movsb
jle
jle
mov
outsb
enter
and
outsl
jecxz
xlat
out
std
mov
call
sbb
dec
add
push
shrl
jecxz
imul
pop
inc
test
fwait
pusha
rorb
cltd
xchg
shl
pushf
aad
cmp
mov
push
punpckldq
lahf
pop
mov
pushf
cmp
cmc
cmp
movsl
push
sbb
inc
in
stos
mov
sbb
cmp
inc
stos
fs
sahf
xor
xor
loop
outsl
dec
test
nop
sub
dec
clc
cmp
add
movl
jno
je
pop
push
pop
dec
mov
mov
arpl
xor
sbb
addr16
xor
push
es
fisubrl
mov
stc
sbb
in
sbb
jns
fdivs
int3
ja
sar
push
ja
imul
int
pop
cld
shl
mov
and
cmc
outsb
pusha
push
lods
aad
mov
lea
pop
sub
aad
loope
movsl
dec
and
push
int
jnp
jbe
repz
mov
xchg
xchg
aaa
jge
or
repnz
shrb
add
scas
pusha
stos
fldcw
int3
dec
pop
inc
sbb
mov
add
jno
int
xchg
push
pop
mov
mov
mov
sbb
jge
mov
das
dec
iret
pop
sbb
cmp
or
adc
xchg
icebp
sbbl
cmp
dec
les
loopne
and
out
out
push
and
inc
mov
mov
pop
sub
sahf
xlat
mov
ljmp
rorb
xor
clc
icebp
pop
xchg
sub
push
jp
int
jecxz
jp
xchg
dec
rolb
test
xorb
mov
int
gs
xchg
push
xchg
sub
pop
fnstcw
or
pusha
pop
xchg
push
lods
pop
jp
movsl
inc
xchg
mov
and
ss
mov
ret
jae
test
adc
ljmp
fdivp
mov
das
and
sbb
jp
aaa
mov
mov
inc
aas
addl
scas
xchg
fadds
ds
ret
test
shrl
jne
sub
push
rolb
adc
cmp
sbb
dec
aad
int3
jg
mov
mov
inc
test
jl
sahf
gs
sahf
jne
inc
pop
xlat
push
inc
les
cmp
das
adc
stos
hlt
test
popa
jle
rcll
push
push
movsl
push
stos
call
mov
faddl
pusha
lea
push
out
mov
inc
xor
mov
in
scas
das
and
pusha
or
xor
lret
dec
mov
sbb
fsubl
mov
lahf
movl
mov
and
inc
cmp
or
cmp
fdivl
movsl
pushf
xlat
imul
push
xor
adc
leave
pop
jmp
mov
jno
xlat
lock
mov
fbstp
mov
rcl
adc
lahf
fnstcw
xchg
inc
mov
lret
jp
lods
js
inc
loope
rcrl
jns
negb
xor
fnstcw
push
add
js
shr
pop
pop
push
ds
daa
gs
inc
scas
mov
gs
jae
repz
loope
orb
dec
xor
out
add
jmp
lret
lret
xchg
mov
aas
orw
mov
xor
cltd
cld
add
mov
sub
lods
imul
pop
jne
cwtl
dec
call
inc
cmc
push
jge
sbb
insb
je
mul
pop
push
clc
or
imul
push
shll
mov
fnstenv
jmp
xor
adc
sbb
or
inc
mov
ja
xor
lea
cmpsl
pop
pop
test
xor
mov
lahf
fnsave
es
cld
daa
lahf
andl
aas
mov
xchg
mov
pop
call
or
imul
jbe
rcll
mov
dec
add
mov
repnz
sarb
inc
pop
cwtl
xor
xor
rorb
push
mov
dec
add
xor
inc
fisttpl
push
leave
repz
add
dec
addr16
shl
add
aad
push
xlat
pushf
mov
mov
aam
call
icebp
cmp
sbb
add
divl
insl
insb
shrl
xchg
fidivrs
ss
mov
rcll
pop
out
inc
inc
or
pop
int
stc
aam
andb
cld
jp
push
or
and
sbb
shlb
and
jns
pop
ret
orl
lock
adc
fistl
shll
adc
scas
jl
lahf
gs
xchg
hlt
pop
jge
mov
xor
lcall
sub
xchg
notb
jg
ljmp
xor
pop
mov
in
repnz
pop
or
fsubrl
mov
testb
mov
sbb
stos
inc
push
or
and
sub
inc
outsl
sbb
mov
cs
fidivrs
test
nop
mov
mov
dec
roll
xchg
out
test
inc
xor
fsts
lret
push
cmp
inc
adc
es
ret
xchg
addr16
sbb
cmp
and
push
aam
pop
fsubrl
xor
scas
out
mov
xor
sbb
imull
fwait
lcall
cmp
dec
popf
inc
call
in
fnstsw
jae
adc
push
shr
inc
pop
push
pusha
cmp
and
mov
cmp
fsts
mov
cmp
aad
push
fsubs
fists
push
or
lds
jae
in
fucomi
lock
xor
xor
shll
push
cmpsb
in
cmp
adc
mov
push
and
or
cld
jmp
fmull
test
negb
call
popa
stos
nop
inc
add
sub
cmp
mov
xlat
int
mov
ja
ss
inc
jns
ljmp
addr16
and
call
lea
push
pop
add
adc
sbb
add
call
inc
xor
jge
inc
add
mov
mov
sub
aas
ret
mov
mov
add
popa
or
jg
xchg
sub
inc
aas
pop
andl
and
cli
mov
stos
lods
jmp
dec
in
lret
push
insl
and
test
cld
cmpsb
add
test
xchg
push
add
pushf
cmp
sub
out
stos
movsb
hlt
jge
push
pop
or
push
out
adc
adc
cs
loopne
sbb
adc
mov
outsb
mov
out
stos
imul
lret
scas
push
or
in
out
mov
or
xchg
dec
inc
jb
add
mov
push
cmp
fcmovnb
lock
jle
jno
scas
pop
dec
dec
lret
mov
outsl
push
arpl
nop
rcl
push
push
dec
pop
fstpt
adc
sbb
cmp
out
pop
jle
mov
pop
test
in
xor
jg
je
sar
iret
push
mov
sub
fidivrl
jb
data16
xor
mov
je
test
adc
xchg
jl
jge
and
adc
mov
adc
aas
stos
sahf
sub
movsb
mov
insb
je
loop
push
mulb
in
idivb
add
xchg
je
loop
or
pop
jbe
inc
lret
inc
mov
cmp
loop
sbb
rorb
xchg
bound
roll
pop
stos
bound
dec
cli
or
pop
test
dec
mov
in
push
push
cwtl
sahf
lds
or
jno
stos
movsl
inc
push
jbe
mov
lahf
das
shll
pop
mov
loope
push
in
test
int
and
and
cmp
and
cmp
jno
scas
pop
sub
dec
in
insl
adcl
add
int3
cmp
rcll
lcall
int
mov
insl
sub
mov
idivb
adc
cwtl
or
pop
xchg
fs
push
aam
and
push
scas
js
ljmp
icebp
push
push
pop
addr16
sbb
xchg
inc
sahf
popf
inc
jns
dec
sbb
pop
notl
or
jae
movsb
sbb
jge
cmp
cwtl
subb
ficoml
jl
mov
xor
mov
dec
es
mov
sub
shrb
push
pop
sti
rorb
pop
pop
aam
fwait
sub
test
stc
push
xchg
dec
hlt
rol
mov
push
nop
test
sub
add
push
test
jae
mov
adc
mov
mov
fs
sahf
mov
inc
adc
or
negl
loope
ret
insb
xor
lods
insl
out
loope
xchg
idivl
pushl
mov
inc
das
lods
imul
fwait
jne
stos
pop
mov
out
addr16
mov
js
fstl
cmp
adc
pop
or
mov
lock
fwait
icebp
cmpsb
pop
adc
add
daa
sti
stos
pop
les
ljmp
or
out
in
pop
daa
xchg
test
ljmp
mov
mov
mov
in
divl
call
lds
sub
jne
xorl
out
test
fnstenv
lods
xlat
lea
outsb
outsl
jl
add
dec
jae
cmp
xor
mov
xor
and
outsl
insl
jo
sahf
aad
dec
push
jbe
aas
dec
inc
sahf
lahf
jl
loopne
mov
fsubrl
std
push
fs
les
cmc
in
insl
test
cltd
popf
pop
jo
mov
lds
es
pop
add
mov
mov
jle
cmp
scas
cwtl
fnsave
inc
loop
rcrb
loop
sub
and
cmp
cli
test
push
mov
leave
cmpsb
mov
push
and
outsl
pop
scas
push
sub
decl
stos
pop
loop
dec
ds
mov
mov
mov
test
sbb
notl
addl
jns
inc
cs
jno
arpl
orb
mov
mov
xchg
cmp
lods
je
inc
and
dec
xchg
lret
add
push
leave
add
sahf
ss
mov
jecxz
mov
and
gs
mov
inc
icebp
sarl
xchg
cmp
adc
out
jae
add
insb
add
push
sub
jl
and
sbb
jp
mov
sub
and
mov
jp
xor
dec
mov
pop
mov
sarb
stos
stos
sbb
in
xchg
in
mov
bound
arpl
daa
fwait
in
adc
inc
mov
inc
icebp
cltd
xor
sub
and
sahf
out
data16
clc
sbb
push
push
into
add
inc
out
idivb
outsb
pushf
xchg
jp
pop
iret
mov
fcmovnb
pusha
repnz
jge
push
adc
in
aad
mov
lcall
jge
popa
dec
xor
jp
cmp
mov
and
movl
inc
cmpsb
fmull
in
mov
scas
hlt
add
nop
and
sub
mov
scas
cmp
dec
mov
adc
push
inc
mov
dec
and
mov
in
dec
xchg
mov
lods
loop
leave
and
arpl
dec
fists
outsl
xor
lcall
fisubrs
arpl
jecxz
cmpl
push
mov
inc
and
bound
scas
test
repnz
pop
scas
add
sbb
xor
dec
pop
lret
cmp
xor
inc
orb
cli
jb
mov
mov
sarl
fwait
pop
mov
ja
imul
mov
jp
jle
lret
mov
test
imul
sbb
or
xchg
mov
sub
clc
mov
pop
xor
in
cltd
mov
ret
sub
or
xor
xchg
fxtract
sahf
xor
and
mov
ljmp
jl
mov
mov
fwait
and
mov
popl
and
xchg
mov
into
mov
popf
xchg
or
xchg
sub
dec
inc
aas
or
popf
push
push
jl
into
push
lods
xchg
std
out
aaa
adc
rorl
dec
mov
xor
or
cmc
xor
fdivs
jle
mov
jno
dec
jns
sub
out
or
out
in
dec
push
xchg
cmp
and
stos
fiaddl
and
fldt
in
sbb
mov
inc
adc
inc
lock
sub
jbe
mov
hlt
mov
arpl
or
leave
je
sbb
cwtl
in
adc
push
je
pop
sub
fistl
arpl
sbb
insb
mov
pop
pop
push
mov
inc
pop
test
dec
fwait
or
lcall
push
mov
dec
cmpsl
adc
lods
cwtl
cmpsl
rcl
push
xor
decb
out
pusha
jae
lds
loopne
inc
add
add
andps
aas
or
mov
subl
imul
mov
pop
jmp
into
cwtl
in
lds
int
mov
or
sahf
mov
xchg
pop
mov
lret
fucomi
xor
and
test
dec
inc
pop
pop
movsl
pop
add
inc
jge
andl
mov
divb
fnstenv
es
push
mov
jo
and
negl
pinsrw
iret
aas
gs
icebp
lret
jmp
dec
daa
fsubl
jno
imul
xchg
aad
push
and
test
and
xor
pop
pop
inc
dec
into
das
fistl
movnti
inc
cmp
cli
out
dec
imul
push
cwtl
adc
sbb
jle
and
cli
jl
in
lret
shlb
sbb
ss
xchg
lahf
jo
inc
pop
rcrb
loop
xchg
or
popw
pop
xchg
xchg
cld
mov
push
jbe
in
inc
jecxz
mov
inc
fmull
mov
push
cmp
mov
mov
pusha
mov
les
jbe
xchg
std
and
push
or
mov
pop
pop
sub
lret
cmc
gs
and
mov
data16
gs
mov
shrb
fld
jle
jb
testb
addr16
aaa
mov
jo
pop
fcoms
mov
fmuls
jge
gs
mov
lret
mov
cmc
out
insl
js
xchg
xchg
rcll
cmp
lds
shrb
insl
jae
xor
sub
mov
inc
pusha
pop
and
cli
jp
hlt
push
arpl
push
in
subl
adc
adc
jbe
jno
sub
lock
jb
pop
jno
call
push
divb
ret
mov
arpl
mov
mov
mov
in
cltd
mov
ja
data16
xchg
aas
or
pop
movswl
jmp
mov
mov
add
rcl
jne
pop
jo
mov
xor
mov
and
jp
or
sub
add
mov
sahf
in
out
mov
mov
xor
mov
cld
dec
mov
popa
lret
mov
test
clc
lds
popf
lds
xchg
outsb
push
mov
inc
outsl
xor
imul
sbb
pop
aas
loope
pop
pop
jle
xor
sti
stos
das
mov
pop
pavgw
clc
jae
sbb
cmp
loopne
je
out
test
lea
jne
aad
ljmp
jbe
dec
add
std
lock
stc
mov
dec
jmp
push
xchg
into
ss
push
mov
add
movsl
push
test
mov
push
mov
or
or
roll
push
fimull
pop
dec
xchg
jge
xor
rcll
popf
jb
xor
sub
hlt
xor
fidivrs
loop
dec
outsb
and
faddl
insb
cmc
js
outsl
loope
xor
xor
mov
dec
add
jns
xchg
bound
mov
fpatan
add
adc
negl
lds
inc
stos
dec
cmp
add
ret
out
push
test
sub
mov
sbb
subl
fiaddl
push
bound
mov
inc
xor
pop
movsl
sbb
push
add
mulb
mov
pop
mov
push
mov
mov
test
movsl
out
addr16
sbb
popf
xor
in
push
inc
pop
ljmp
cwtl
ret
cmp
les
xor
adc
mov
shl
nop
mov
test
pushf
out
jbe
ficoml
xorb
lods
xor
add
inc
addr16
sbb
jl
inc
add
popa
add
leave
iret
lcall
out
dec
leave
imul
lock
jno
mov
ja
mov
xchg
ret
je
xor
pop
popa
cwtl
stos
sbb
cmpb
rolb
and
and
mov
insl
scas
inc
jbe
or
outsb
insb
pop
aaa
lods
jne
dec
jmp
roll
and
jmp
push
lret
push
or
sub
aas
mov
push
pop
sub
in
mov
jp
xchg
mov
jbe
enter
sub
sbb
mov
adc
popl
test
add
dec
dec
cmp
xlat
hlt
push
adc
add
repz
inc
xor
mov
arpl
add
lods
xchg
icebp
lea
loopne
pop
dec
inc
sbb
push
mov
mov
mov
ret
xchg
add
add
dec
mov
mov
in
xorb
ficoml
insb
insb
test
icebp
xor
rcrb
ret
lock
cltd
mov
sti
lea
hlt
xchg
jae
fdivs
adc
xchg
shrb
addl
outsl
mov
cmp
hlt
rcll
sti
cmpb
or
add
push
xor
xor
popa
in
insb
inc
data16
sahf
decl
sub
push
rorb
ljmp
pop
and
lcall
nop
jno
jg
mov
loop
cld
mov
pop
outsl
mov
mov
mov
pop
jecxz
in
pop
mov
ss
roll
jno
or
and
and
fsubr
and
std
dec
lcall
lods
leave
xor
cwtl
fistpl
test
push
push
dec
cmp
int3
ret
scas
push
call
fstpt
mov
rcl
fldcw
or
cs
aam
fistl
lock
inc
xlat
ja
vcvtpd2psx
aad
stos
pusha
xor
adc
insl
je
popa
jne
out
dec
adc
cmp
popf
iret
adc
scas
add
outsl
mov
scas
rorb
jp
pop
lock
push
dec
rorb
popa
adc
push
mov
or
adc
pop
subb
call
fiadds
mov
shll
cltd
loope
lret
rcr
xor
fs
mov
sti
mov
or
and
es
pop
sbb
jmp
in
xchg
int3
sbb
xchg
lock
das
aaa
dec
inc
xchg
push
pop
jmp
test
out
out
push
mov
ret
sbb
xor
pusha
popa
mov
outsb
iret
mov
sarl
dec
push
or
jg
or
repnz
mov
fwait
jle
pop
andl
inc
mov
loop
jae
sbb
mov
and
mov
xlat
and
dec
icebp
nop
daa
cwtl
jnp
add
adc
xor
fbld
lods
out
adc
shll
xor
add
pop
cmp
inc
iret
movsb
dec
lret
rorb
lret
mov
sbb
insl
daa
push
out
jl
mov
popa
add
les
stos
mov
and
stos
or
in
cmp
cmpsb
rcll
aas
in
sti
sbb
cmp
mov
sbb
dec
jmp
popa
bnd
stos
adc
inc
jo
inc
mov
in
das
sti
enter
pop
cmp
jmp
pop
inc
and
imul
popa
sahf
mov
arpl
jb
rcrb
insl
mov
xor
cld
ja
jmp
ret
jbe
sub
push
add
and
test
adc
femms
test
dec
mov
sub
lahf
jle
rolb
lcall
pop
stos
push
lea
add
mov
popa
push
shll
xchg
or
loop
mov
in
xchg
xor
pusha
jns
sbb
stos
xchg
cmp
jmp
lea
sub
call
mov
dec
pop
sub
push
dec
lods
mov
arpl
nop
mov
adc
imul
jb
cmc
inc
inc
inc
ja
imul
mov
pop
jecxz
fcomp
inc
sub
scas
add
inc
test
xchg
das
xchg
imul
int3
push
mov
sbb
ja
xchg
sub
cwtl
xor
adc
aam
lds
mov
imul
sti
mov
lods
test
data16
testl
push
push
lods
pop
xchg
out
pop
jae
in
dec
xor
lret
cltd
aam
cmpsl
das
pop
repnz
mov
xorl
adc
lret
mov
push
jecxz
xchg
aam
mov
idivl
aam
cmpsl
add
arpl
push
ret
adc
icebp
test
xchg
and
mov
jp
cmp
pop
fstps
push
xchg
mov
add
mov
lea
movsb
xchg
lret
pushf
test
incb
in
mov
add
in
sbb
mov
push
add
mov
movsb
pop
jl
addl
jo
mov
or
push
mov
mov
call
and
and
pushf
mov
je
fildll
decb
mov
imul
and
int3
outsl
addb
jo
subb
sbb
pop
add
mov
mov
jmp
pop
cld
jbe
outsb
adc
mov
pop
sbb
push
pop
mov
or
pushf
scas
adc
test
insl
push
pushf
cmpsl
pop
inc
xchg
xchg
sub
cmpb
test
stos
sarb
fwait
hlt
stos
mov
sbb
das
ret
adc
pop
push
cmp
cmc
and
out
sub
and
mulb
in
out
movsl
sbb
lcall
mov
mov
push
mov
or
das
pop
xor
ljmp
insb
push
icebp
push
std
lea
loopne
xor
add
pop
je
cmpsb
dec
mov
in
jle
mov
xor
and
in
cltd
jne
fdivs
int
mov
arpl
pop
and
jge
adc
mov
dec
cmp
fldl
dec
andl
xorb
cmp
fcos
outsb
pop
js
loopne
adc
mov
lds
popf
sub
gs
push
popf
lahf
jns
negl
in
jg
push
lahf
mov
shrb
adc
bound
insb
adc
dec
cmc
call
push
mov
sub
dec
inc
xorb
push
mov
and
xor
icebp
mov
mov
sub
icebp
inc
cwtl
jne
nop
and
sub
mov
mov
dec
fdivl
repnz
xchg
or
xchg
push
mov
jl
or
inc
push
sub
inc
leave
adc
jg
and
lods
leave
rclb
ret
iret
subb
popa
xchg
or
icebp
pop
sbb
adc
fimull
cmp
sbb
out
popa
sub
inc
stc
aaa
fmuls
out
jmp
sub
pop
bound
jp
stc
stos
or
idivl
xchg
je
lea
test
fwait
icebp
sti
test
adc
cmpl
lret
lods
mov
nop
jno
daa
sbb
dec
sub
sub
lods
rcrl
lret
sbb
mov
cmpsl
inc
fmul
std
push
mov
ds
mov
out
int
pop
push
rcr
ljmp
ss
mov
aaa
add
std
fildl
mov
jecxz
cmpb
cmp
pop
lret
shl
jbe
mov
ret
and
bound
and
mov
push
ljmp
fisttps
xor
push
mov
or
cmp
inc
int
aaa
push
arpl
dec
push
dec
push
mov
jne
adc
push
jg
add
hlt
push
inc
pop
pusha
sub
xchg
jnp
inc
jle
stos
inc
push
xchg
pop
xchg
outsl
fwait
and
xor
ss
dec
addr16
sub
pop
rol
out
or
out
mov
sbb
cmp
cmp
leave
adc
stos
sub
add
cli
loop
mov
inc
sub
add
mov
jp
cmp
mov
orb
and
mov
aaa
ds
xor
or
sbb
lret
icebp
and
mov
inc
pushf
std
cmp
int
sarb
add
mov
lcall
adc
js
xor
cmp
clc
cmpsl
movsl
dec
outsl
xchg
jo
lods
xor
into
lock
clc
push
dec
mov
pop
jnp
xchg
test
imul
subb
adc
stc
cmp
and
insb
jne
sub
aas
jl
inc
add
jecxz
outsb
add
and
mov
dec
pop
sbb
xor
xchg
mov
cltd
pop
hlt
xchg
sbb
mov
imul
out
dec
xchg
imul
std
cmp
mov
lahf
roll
lods
bound
ljmp
adc
es
jbe
insl
or
jge
daa
jnp
xchg
sahf
int
out
addl
or
mov
jae
dec
fs
and
add
arpl
sub
gs
fdivl
add
sti
sbb
cli
call
insb
pop
std
je
int
cli
rorb
lret
ret
push
xlat
or
dec
xchg
jg
sti
push
mov
cmp
lret
mov
fistl
fadds
xchg
mov
push
lret
movl
stos
cltd
in
push
cwtl
mov
mov
inc
stos
ss
mov
or
pop
out
mov
test
mov
out
cmp
lahf
std
outsl
or
pop
adc
sti
cli
xchg
jns
dec
xchg
fwait
mov
lret
lea
insb
je
mov
fcoms
cwtl
lea
mov
mov
inc
pop
aas
or
daa
xlat
or
mov
mov
mov
and
xchg
cmp
call
je
mov
push
iret
pop
mov
in
push
icebp
sub
inc
adc
cmp
pusha
dec
sbb
cmp
enter
xor
das
xor
mov
adc
and
pusha
ja
push
sbb
les
in
ret
out
loope
mov
xorl
pop
lods
jmp
mov
loop
les
sbb
push
fistps
gs
decb
lock
clc
jnp
std
push
or
dec
mov
push
and
lret
shrb
in
in
cmp
js
outsl
packsswb
and
leave
mov
outsb
and
xchg
enter
in
in
cmp
pop
arpl
nop
or
outsb
cmpsl
mov
pop
int3
or
xchg
jl
push
inc
sti
imul
insl
loope
pop
mov
jl
mov
enter
lock
pop
mov
stos
imul
fidivrs
xchg
lea
push
mov
or
and
jle
sub
dec
add
fs
push
mov
dec
std
mov
ljmp
mov
xor
subl
inc
popf
or
test
mov
push
mov
xor
jp
rcrl
arpl
dec
icebp
mov
xor
jno
aam
mov
xchg
dec
nop
insl
shll
add
call
mov
adc
and
xchg
fcoms
pop
pushl
push
mov
rclb
inc
fiadds
add
out
mov
fsubs
pop
jmp
jnp
mov
aas
fstpt
ljmp
inc
mov
mov
push
mov
cmp
sub
push
mov
mov
fisttps
dec
xchg
or
fstpt
into
jo
cmc
inc
insl
mov
rorl
dec
outsl
rclb
les
jae
or
rcr
aas
pushf
adc
jl
dec
lea
pusha
mov
xor
mov
inc
mov
bound
dec
std
push
mov
in
out
xchg
lret
push
push
xor
inc
movsb
jmp
xor
data16
mov
stos
std
push
scas
adc
ljmp
or
xor
cmp
dec
dec
stos
dec
push
mov
add
test
push
in
xor
cmp
cmp
cld
jge
xor
enter
js
js
mov
cmp
fcomps
popa
push
leave
sbb
mov
and
dec
pop
or
inc
sbb
xchg
pop
cli
fs
pusha
sbb
adc
es
dec
mov
jg
scas
bswap
lods
fbld
stc
adc
add
imul
pushf
dec
je
pop
les
or
pop
sub
dec
cli
negl
imul
jns
and
fisttpl
outsb
lcall
push
sbb
pushf
mov
dec
fistpll
fcomp
adc
cmpsb
mov
ljmp
into
lcall
pop
jb
cwtl
push
arpl
adc
nop
dec
cmp
pop
rorb
jbe
push
add
lahf
out
iret
das
call
sub
inc
lret
mov
push
incb
xor
imul
inc
loope
sub
les
xor
cmp
or
adc
xchg
dec
filds
jae
pusha
mul
repz
sbb
clc
xchg
outsl
or
xor
jnp
and
cmp
ja
pop
leave
mov
mov
xor
fsubrp
xlat
cmc
lods
enter
adc
sub
mov
into
orb
imul
sti
ljmp
nop
bound
ret
pop
popf
dec
mov
push
xchg
add
or
mov
push
dec
jae
sbb
mov
add
fwait
or
cmp
fstpt
xor
xchg
shll
arpl
sbb
out
lods
call
jo
mov
scas
iret
lods
sub
push
jae
imul
pop
das
or
push
dec
lea
jbe
out
mov
mov
adc
inc
add
inc
push
arpl
mov
shll
mov
sub
and
xor
out
mov
pop
and
mov
insb
push
dec
iret
test
mov
pusha
mov
jle
dec
cwtl
jne
pushf
xor
mov
push
sbb
lods
push
test
out
xchg
inc
dec
xor
icebp
cmpsb
subl
stos
and
icebp
popa
popa
aad
xor
sbbb
jl
jmp
and
xor
inc
nop
adc
in
nop
pop
stc
outsb
loop
xchg
inc
cltd
cmpsl
sbb
jo
loop
xchg
mov
sub
test
int3
mov
add
popf
jecxz
add
lds
pop
fs
or
rcll
scas
add
mov
xchg
adc
mov
mov
loop
ja
xchg
ja
iret
jnp
sbb
data16
fwait
cmp
sti
jmp
xchg
jmp
jbe
jbe
xor
cs
pop
bound
xor
fcoms
inc
mov
inc
inc
clc
jne
mov
test
dec
jo
mulb
and
icebp
adc
sahf
es
xchg
cmpl
stos
pop
mov
add
dec
mov
push
inc
add
and
sbb
jbe
fs
shlb
repnz
repnz
add
std
mov
adc
cmpsl
xchg
dec
push
and
out
pop
sbb
mov
inc
xor
mov
in
rorl
rorl
bound
or
dec
enter
pushf
popa
mov
ja
jae
cmp
sti
sub
lret
sti
ret
aas
lahf
sti
dec
and
mov
cltd
and
xchg
fsubrs
jl
pop
es
sub
or
mov
or
outsb
xor
arpl
aam
rolb
fldpi
mov
cmpsl
nop
popf
in
scas
push
sti
fildll
and
jo
mov
xor
inc
mov
loop
scas
ret
mov
mov
jle
sbb
inc
pop
loop
pop
pop
sti
sbb
xlat
inc
xor
dec
push
inc
bound
push
stc
sbb
add
movsl
jbe
push
ficoml
call
jbe
or
and
mov
jne
idivb
pop
les
add
ja
xchg
sbb
ja
add
mov
push
xchg
icebp
and
xchg
or
lret
shlb
divl
or
lea
stos
mov
jb
pop
dec
mov
cld
jno
sub
dec
xor
sbb
mov
cmp
inc
dec
fmuls
insb
jne
mov
mov
or
hlt
gs
lock
jle
jecxz
shll
mov
addr16
cmc
push
push
xchg
add
test
pop
sub
dec
jo
mov
xchg
inc
jecxz
clc
fstpl
xor
and
xchg
sahf
fildl
cmp
push
pop
fucomi
xor
lds
std
jmp
adc
jbe
repz
xchg
and
ficoml
xor
adc
clc
mov
sub
sbb
aam
lahf
stos
shrl
fstpt
pop
fstp
fcmovnbe
inc
or
adc
sub
shl
scas
into
iret
stc
xchg
and
xor
aaa
lret
dec
pop
sub
push
pusha
mov
repz
hlt
mov
and
mov
sbb
test
leave
cmp
mull
popa
pop
out
pop
inc
add
or
jg
fstps
pop
mov
ljmp
scas
push
fbld
inc
lea
lret
mov
or
lea
or
or
imul
inc
notl
roll
xchg
dec
add
and
mov
mov
mov
outsl
cwtl
mov
cmpsb
jge
fiadds
cmpsl
pop
std
inc
cli
mov
hlt
addr16
in
xchg
mov
adc
push
mov
push
dec
div
les
ljmp
add
jno
dec
rclb
mov
test
rcr
xchg
arpl
xchg
test
xchg
rol
insb
in
lods
push
daa
dec
cmp
sub
js
jmp
cmp
xchg
push
jno
sbb
rcll
pop
cmpsl
mov
aas
jb
stos
xor
fld1
movsl
cmp
and
cmp
push
pop
adc
mov
stc
out
sub
or
stos
push
and
cltd
cmp
xorb
in
mov
sbb
test
gs
aas
daa
sbb
popf
imul
data16
push
fs
sbb
outsl
ljmp
and
mov
xchg
sar
ret
fucomi
sub
add
mov
pop
stc
push
push
sub
adcb
xchg
dec
stos
data16
sub
sahf
jnp
ss
pusha
sbbl
adc
fwait
daa
testl
ss
and
mov
andb
jle
insl
enter
es
int3
sahf
pop
mov
out
fwait
js
data16
repz
mov
fldcw
cld
jo
jle
sbb
and
popa
sar
imul
xor
push
pop
arpl
inc
or
add
or
in
cmc
or
ds
cmp
dec
je
repz
hlt
test
pop
add
popa
test
leave
fcomi
lret
sub
jle
xor
adc
sub
cmp
stc
push
or
sub
fists
fistpl
inc
in
and
ret
add
pushf
mov
adc
mov
ret
addb
out
sub
xchg
mov
mov
and
jnp
adc
repz
js
and
and
cmp
jg
xchg
jno
in
or
js
adc
mov
pushl
pop
or
jge
mov
lock
mov
mov
in
sub
imul
sub
mov
and
mov
cwtl
push
mov
fnstcw
cli
outsb
pop
les
out
ljmp
sub
rcl
test
pop
xchg
movsb
ret
popf
adc
out
adc
scas
hlt
mov
xchg
xchg
test
test
mov
pop
push
repnz
adc
call
ljmp
sub
outsb
sti
scas
mov
xchg
cmp
test
xchg
clc
sbb
outsb
pop
ja
sbb
xlat
inc
js
repnz
daa
cli
adc
xchg
aas
adc
in
mulps
pop
andb
dec
xchg
lock
sti
orb
adc
mov
fistpl
lods
dec
and
and
xor
push
xor
mov
dec
jmp
cmp
cwtl
pusha
popf
rorl
push
js
push
and
xor
and
adc
outsl
jo
sbbl
enter
ret
sbb
std
mov
popl
xchg
mov
aam
mov
pop
lock
add
sbb
xor
pushf
fisubl
ljmp
mov
insb
ds
aam
aam
sub
inc
pop
push
dec
dec
cmp
push
sub
test
mov
pop
dec
faddl
dec
push
sbb
pushf
xor
enter
int
push
pusha
sub
push
loope
pop
orb
ds
inc
pop
lret
imul
push
lods
in
repz
sub
mov
mov
jecxz
cmpsl
jnp
or
ret
in
ret
and
inc
enter
and
iret
out
iret
aas
mov
dec
adc
push
rolb
inc
jmp
jecxz
xchg
dec
popf
cmp
dec
sbb
insb
adc
out
pusha
test
xchg
repz
add
jo
adc
clc
fucomp
mov
sbb
xor
inc
repz
fistpl
call
mov
out
and
push
jp
dec
je
lods
fs
filds
sub
jp
xchg
outsb
adc
test
mov
cmpsl
into
in
jl
sub
ficomps
adc
lahf
fwait
lea
pop
inc
out
sahf
roll
inc
icebp
pushf
and
loopne
cwtl
cli
or
push
insb
mov
addr16
aam
leave
xor
dec
and
mov
idivb
adc
ret
popa
ret
ret
cli
add
mov
scas
jbe
mov
adc
jnp
push
and
cmp
int3
out
sub
jbe
iret
mov
xchg
es
sub
sub
shlb
fldenv
sub
in
repz
sahf
cmpsb
cmp
jb
mov
and
in
in
lods
dec
mov
in
stos
jnp
push
cltd
jecxz
stc
aaa
jb
mov
mov
jge
pandn
xor
mov
mov
cli
hlt
adc
ja
and
les
xor
mov
inc
inc
sti
adcb
cmpsb
jne
inc
hlt
test
pop
adc
faddl
push
inc
xorb
push
ljmp
jne
ret
cmpsb
dec
fsubs
jb
cwtl
mov
mov
stos
cmp
jg
push
fwait
sbb
or
cli
jecxz
int3
aad
or
je
adcb
shll
aas
call
pop
fsubrl
jnp
lods
ss
sbbl
lret
fs
xchg
push
into
xor
inc
push
add
sub
sbb
xor
cmp
sub
push
xor
ret
test
lret
jns
pop
cmpsb
or
push
repz
mov
mov
cmpsb
fstpl
push
cld
add
or
or
sbb
aam
ret
xchg
lahf
jae
icebp
std
aad
sub
gs
mov
int3
pop
xor
pop
sub
or
xchg
pop
mov
add
les
scas
test
lret
out
xor
orb
test
aad
insl
xchg
mov
sub
pop
push
stos
cmpsb
sbb
xor
clc
sub
dec
dec
add
fistpl
xorl
pop
mov
sbb
adc
popl
aam
ja
mov
cmpsl
push
leave
dec
adcb
outsl
scas
lret
nop
pop
cmp
jp
out
test
xchg
mov
sub
out
cmp
push
fwait
add
mov
pushf
sub
ljmp
lahf
sbb
mov
loopne
shlb
push
xchg
fdivs
les
xchg
sub
adc
test
hlt
inc
pushf
jecxz
push
mov
fs
pop
enter
pop
add
xor
and
or
inc
jmp
jle
pop
paddusb
xorl
xchg
cmpsl
cld
mov
fnsave
popf
imul
inc
sti
scas
pop
xchg
or
sbb
and
ja
pop
scas
push
dec
test
leave
pop
aam
mov
dec
sbb
imul
jg
pop
sbb
or
adc
test
dec
or
adc
xor
test
ficoml
int3
xchg
add
stos
and
movsl
dec
test
cltd
in
dec
mov
push
and
push
popa
das
xlat
jns
push
lock
inc
inc
inc
mov
mov
xor
cli
jns
test
outsl
inc
mov
pop
pop
loopne
xrelease
add
adc
push
or
mov
sub
sub
aaa
pop
in
mov
pusha
jge
mov
xlat
cmpsl
lret
pop
nop
dec
lret
stc
pop
xor
jne
icebp
in
mov
push
aas
xchg
mov
mov
jno
loope
sbb
jno
cmp
xchg
lcall
add
orl
mov
sub
pop
xchg
mov
pop
cld
hlt
fnstenv
outsl
push
hlt
test
aas
pop
jg
mov
enter
imul
pop
mov
cld
mov
sub
fld
ja
mov
xchg
pop
arpl
push
mov
mov
pop
add
inc
test
paddw
into
sub
sub
xchg
push
loope
cwtl
jle
fisubl
orb
push
jno
jne
and
jae
jle
loope
cltd
fmul
push
in
pop
cs
xchg
leave
out
push
or
das
test
into
lods
es
fisubrl
pop
jne
pop
loopne
pop
push
add
movsb
sub
lock
pop
mov
popa
cli
adc
jb
xchg
nop
mov
ds
push
jle
je
cmpsl
aaa
pop
bound
pop
in
test
pop
push
int3
subb
out
cmpsl
sub
cmpl
and
fsubp
push
jbe
lea
rclb
je
dec
push
andb
or
push
addr16
inc
shlb
cli
inc
repnz
sbb
adc
xor
pusha
sub
mov
out
cmp
cmp
jmp
nop
aam
pushf
sub
push
popf
addr16
rcrl
sbbb
pop
icebp
mov
and
push
sub
mov
jp
pop
and
pop
push
dec
test
adc
inc
jb
ss
sbb
addb
je
mov
nop
xchg
dec
mov
fcmovne
sub
add
lcall
pushf
inc
push
daa
movb
test
or
push
bound
stos
mov
testb
mov
rcll
cmp
push
jp
jno
mov
xchg
sub
inc
fwait
or
adc
call
fidivrl
inc
push
sub
outsb
fsubrs
xchg
jecxz
iret
lock
xchg
std
push
mov
pop
push
repz
lcall
lret
stos
ret
fimuls
in
lcall
nop
mov
cmp
cwtl
std
pop
or
test
jo
sub
push
xchg
int3
ljmp
jo
out
pop
mov
pop
outsl
cmp
xchg
dec
sbb
movsl
std
notb
vmwrite
inc
daa
xchg
pop
or
mov
jp
mov
fimuls
outsb
and
push
scas
pop
dec
mov
dec
insl
arpl
daa
pusha
les
in
cmp
sub
sub
pop
jns
aam
hlt
bound
call
imull
xlat
rcr
out
sub
out
test
addl
pusha
xchg
xchg
stos
movsb
mov
ja
icebp
imul
sub
inc
mov
sbb
push
stos
fisttpll
inc
fstpt
stc
lods
ja
jne
mov
mov
cmc
inc
sbb
dec
insl
or
das
add
bound
sarb
xor
icebp
popf
jmp
xor
mov
roll
nop
jb
lods
inc
push
xchg
adc
in
jnp
test
inc
xchg
iret
lds
pop
pop
sub
mov
or
or
xchg
fwait
leave
stc
mov
sub
sub
xchg
sbb
cmp
pop
sbb
inc
sahf
mov
jo
mov
xchg
enter
or
jbe
mov
in
sbb
inc
pushf
xchg
mov
aad
dec
mov
jle
out
pop
popf
xchg
inc
or
push
scas
pushf
mov
pop
test
das
cmp
sub
push
clc
movsl
add
or
lods
xor
stc
sub
dec
gs
mov
fs
xor
cmpsb
movsl
scas
sub
push
addr16
sbb
push
int3
js
ds
inc
cmpsb
aaa
jnp
sti
mov
cmp
push
add
loope
xchg
bound
test
mov
xchg
or
xor
aad
cmp
js
or
mov
dec
cmp
or
pop
cmp
xor
and
fmuls
jg
lcall
loop
and
xor
idiv
dec
mov
repz
test
dec
cmp
int3
cs
cs
test
scas
add
shlb
push
push
xor
mov
cmp
xor
mov
mov
jle
shl
ds
dec
loopne
outsl
jle
pusha
clc
lret
xor
imul
xor
cmp
jno
push
lret
testb
or
sbb
je
add
cmc
out
in
shrb
mov
fldl
pushf
test
cmpsb
in
ror
inc
js
push
data16
shl
pop
call
push
je
insb
add
and
imul
add
cmp
aaa
in
jge
dec
pushf
jle
and
lea
shrb
lahf
scas
jnp
sarb
mov
rclb
popf
iret
cld
cltd
test
out
and
popa
mov
pop
lods
xchg
mov
test
xchg
mov
mov
mov
mov
pop
jg
fcmovnbe
inc
or
and
sub
push
jb
pop
enter
out
addl
xor
sbb
icebp
imul
add
xchg
ficoms
bound
cmp
pushf
pop
in
jnp
inc
adc
push
rorl
jo
mov
dec
pop
jecxz
out
xchg
cmp
and
adc
movsb
jns
lea
jnp
xor
and
sub
add
and
xchg
nop
dec
add
sti
or
mov
scas
push
lock
and
popa
dec
xchg
cld
lcall
or
enter
movsb
cmp
mov
or
out
jo
repz
xor
add
outsl
rcr
pop
mov
pop
leave
fs
cs
ja
shlb
sarl
rcrb
add
mov
ljmp
js
loop
mov
pop
mov
stos
jecxz
cmp
cs
dec
adc
adc
les
addr16
rcrb
out
cwtl
dec
push
iret
mov
dec
sahf
pusha
mov
mov
popa
repnz
push
and
xor
scas
sbb
aad
mov
lods
cmp
fadds
lea
fs
add
in
stos
sub
flds
pop
repnz
sbb
mov
mov
xchg
mov
popa
cmp
sbb
sbb
js
fsubrs
ret
lock
lds
test
ds
andb
ljmp
pop
cmp
in
mov
mov
popa
push
fst
cwtl
scas
das
xchg
lret
pop
cmp
rcl
in
mov
jns
popf
imull
mov
push
xor
fists
ret
mov
pop
das
add
cmpsb
dec
mov
push
mov
es
jne
mov
imul
popf
pop
pop
jnp
test
or
aaa
fwait
pop
outsl
sahf
push
imul
adc
sahf
xor
mov
into
outsb
add
push
mov
pop
sbb
lds
pop
test
cli
add
outsb
jno
pop
sbb
adc
insl
hlt
insb
subl
xor
mov
xlat
inc
mov
dec
in
lahf
div
lcall
scas
rcrl
sub
ljmp
sbb
sub
mov
or
daa
add
mov
add
fstps
cmp
mov
mov
inc
cmpsb
ja
lds
jp
jbe
addr16
dec
sbb
xlat
ret
jb
mov
scas
fcoms
stc
lods
cwtl
xchg
mov
adc
jb
cltd
sbb
int3
fistl
dec
fmulp
std
popf
xor
mov
loopne
mov
and
bound
inc
cmpsl
xchg
test
xor
dec
lahf
imul
bound
inc
sub
adc
pop
and
ficompl
pusha
es
cwtl
xor
cmc
xor
mov
fs
mov
mov
lock
jb
sub
adc
cmp
add
mov
cmp
fisubl
add
out
test
mov
in
mov
lock
out
in
xchg
int3
aaa
and
enter
das
pop
pop
inc
lcall
cmp
imul
inc
mov
pop
std
outsl
out
mov
dec
cmp
mov
xchg
mov
pop
in
outsb
jne
mov
adc
int3
dec
lds
movsb
andl
mov
pop
das
sbb
pop
xor
test
mov
call
inc
sub
movsl
rolb
lods
sub
adc
xchg
push
cmpxchg
push
int3
test
xor
outsl
xor
out
pop
inc
and
xchg
mov
call
dec
jmp
jp
add
enter
push
out
sbb
mov
imul
push
push
cmp
and
test
test
mov
negl
add
dec
mov
push
mov
fwait
enter
lods
call
imul
push
mov
imul
dec
enter
shl
pop
mov
ja
or
push
addl
mov
cmp
inc
dec
lahf
lahf
jns
jmp
pushf
ret
pop
sbb
aaa
inc
imull
jge
negb
ds
loop
in
adc
xor
mov
xchg
movsl
xor
sbb
inc
ja
ret
scas
je
push
or
mov
jmp
loope
jg
dec
fs
xchg
shll
adc
pop
and
jle
pop
in
adc
test
sbb
bound
xor
jo
cmc
cmp
repnz
es
add
enter
adc
inc
out
test
lock
fdivrl
dec
cmp
mov
stos
in
pop
or
cmp
mov
or
inc
fdivl
add
xor
loope
cmp
out
cmp
inc
cmpsl
jnp
stc
shl
mov
scas
mov
insl
les
out
rorb
in
jmp
mov
pop
inc
and
mov
ret
push
ss
xchg
sarb
adc
mov
lahf
fisubl
into
insl
stos
out
or
fcoms
add
je
inc
jl
mov
xchg
mov
dec
and
aad
stos
adc
in
out
mov
mov
and
or
adc
cmp
fcoms
loope
jmp
jecxz
pusha
ss
fsubs
mov
jecxz
nop
xor
pop
lret
negl
and
jp
dec
jp
stos
hlt
push
stc
int
in
inc
sub
mov
inc
cltd
mov
mov
and
inc
xchg
outsl
aad
mov
jl
cs
mov
cmp
and
popf
sub
fimull
inc
ja
test
xor
or
add
xor
push
sbbl
mov
std
xchg
lods
or
sub
imul
and
testl
jp
sbb
dec
orb
xchg
ret
xchg
dec
shll
cwtl
push
jo
add
jbe
ss
sbb
jecxz
jge
jno,pn
loope
add
jne
addr16
sbb
out
dec
lds
test
cmp
icebp
or
test
je
call
sbbb
ret
in
test
aaa
aas
cmp
int3
jno
inc
enter
push
aam
jne
and
mov
enter
movsl
icebp
mov
popa
dec
loop
mov
dec
and
sti
cmpl
outsb
push
and
fmul
sbb
ds
dec
and
jb
mov
jge
add
push
mov
push
lods
mov
call
mov
add
into
lods
and
cmp
push
jle
stc
mov
add
mov
fs
sub
or
xchg
out
test
sub
aaa
pop
ret
test
mov
out
mov
data16
sti
je
and
imulb
cmp
jecxz
int
rolw
inc
lahf
rolb
xchg
fcmovnu
gs
jno
inc
in
xchg
mov
cmp
icebp
add
and
mov
push
xchg
mov
aad
leave
lds
cltd
mov
add
push
cmp
leave
ret
lret
and
push
pop
cmpb
shl
xor
or
and
dec
mov
cmpsl
dec
ja
sbb
fst
test
dec
dec
mov
fdivl
orl
loope
dec
in
xchg
test
into
arpl
jp
daa
sbb
xlat
cmp
out
outsl
popa
and
jne
jl
push
mov
enter
inc
jmp
mov
or
pusha
adc
cltd
mov
cmp
imul
lret
mov
insb
pushf
cltd
ss
addr16
pop
dec
mul
shl
or
adcb
je
push
lods
decl
lret
pusha
gs
dec
xchg
and
lds
call
mov
sbb
cmp
jle
icebp
push
test
mov
scas
jno
mov
or
push
push
popaw
jo
aam
pop
mov
or
movsl
xchg
adc
cmpsb
orl
push
mov
movsl
push
shlb
jae
ret
sti
js
mov
in
xchg
stc
aaa
stos
ror
and
xchg
fstpt
cwtl
inc
jns
ja
mov
sub
add
fbstp
xlat
pop
and
scas
pop
mov
lods
outsl
test
xchg
int
loopne
push
cmpsb
insb
adc
mov
je
loopne
mov
stos
mov
shll
push
notl
or
out
fdivl
inc
call
adc
mov
xchg
xor
subb
mov
test
or
sbb
xchg
lret
xlat
int
fwait
das
pop
sbb
in
sbb
push
fmuls
rcl
mov
mov
xor
jnp
xchg
adc
iret
je
lods
jl
mov
popa
jp
ficompl
jae
push
jo
fs
sub
jmp
mov
hlt
adc
aad
js
sub
pop
jne
shll
mov
inc
sbb
das
cli
adc
inc
xchg
xchg
outsl
pop
data16
movsb
pushw
sbb
les
cltd
mov
mov
mov
outsl
out
cwtl
and
pop
ss
xor
inc
sub
xor
inc
in
loop
test
orl
test
push
scas
adc
ror
jl
mov
pusha
rcrl
pop
xchg
arpl
sub
mov
rcrl
inc
mov
or
sub
adc
mov
xor
loope
sub
stos
rcrb
jl
xchg
and
out
das
gs
inc
ljmp
movups
incb
lahf
andb
jle
filds
bound
rorb
inc
sbb
add
rclb
test
loop
mov
fbstp
test
adc
push
push
js
insb
movsl
mov
rclb
push
cmc
mov
cmp
jl
pshufw
ljmp
rclb
pusha
mov
cmpsb
inc
dec
sbb
test
mov
sti
mov
stc
addr16
mov
ja
gs
test
push
cs
nop
mov
pushl
cmc
in
ja
loopne
sub
or
dec
cmpsl
add
enter
sbb
mov
out
mov
jns
adc
sarl
push
mov
test
xorb
nop
add
sarb
incb
jecxz
int3
mov
in
pop
xor
sbb
clc
fs
inc
sarl
lcall
aad
sti
mov
enter
sahf
mov
movsl
in
mov
sbb
push
popa
shll
std
xor
xchg
loope
fwait
pop
mov
fstps
sub
dec
mov
mov
pop
mov
add
out
dec
jne
fiaddl
xor
jne
movsb
js
loopne
test
sahf
mov
add
mov
scas
lds
cmc
jmp
lret
mov
clc
cmpsl
sti
xor
mov
mov
push
ret
subb
fwait
adc
nop
mov
ljmp
xor
and
mov
aas
adc
jg
test
xor
fmuls
add
jmp
out
pop
in
mov
xchg
pop
jae
jle
sbb
mov
xchg
jbe
jl
mov
pop
sti
pop
push
sbb
mov
mov
add
dec
mov
mov
pusha
ror
ret
testb
cwtl
sar
or
jo
mov
xor
idiv
nop
in
xchg
jge
sub
mov
mov
push
dec
addr16
into
cmp
adc
inc
out
jno
xchg
pop
in
mov
xchg
pop
into
shrb
pop
or
clc
dec
mov
into
mull
push
cmpb
lock
push
in
add
jbe
aam
jno
ljmp
das
mov
sbb
jmp
jae
mov
addb
fmull
fldenv
mov
in
leave
sahf
int3
icebp
rol
or
push
xor
es
lret
test
lock
fnstenv
ret
push
movsb
fs
stos
mov
js
xchg
and
bound
mov
in
sub
add
xchg
cltd
aaa
flds
fnstenv
xchg
add
pop
push
in
mov
fsubrl
mov
dec
xor
inc
call
setne
jge
mov
cmp
ss
popf
testl
sarl
dec
lcall
call
mov
jmp
xchg
mov
sahf
cld
dec
arpl
clc
hlt
repz
in
adc
movsl
scas
fs
or
cmpsl
div
into
out
outsl
shrb
cmpsl
jecxz
int
mov
cmp
inc
lret
mov
mov
mov
cltd
sub
push
data16
lret
adc
fstpl
ljmp
cmp
lcall
imul
std
xor
mov
adc
jae
shll
or
push
xchg
subb
sbb
loop
jg
cmc
mov
movsb
test
mov
in
stos
rolb
inc
mov
cwtl
xchg
xchg
xor
adc
movsl
mov
jo
cmpsl
jmp
sub
fldenv
pusha
xlat
jae
mov
pop
pop
mov
inc
sbb
inc
scas
dec
mov
js
sub
cs
subl
mov
dec
fsubrs
enter
or
test
out
lcall
pop
pop
and
sub
push
cld
fldl2e
mov
adc
scas
jecxz
enter
jle
mov
dec
sbbb
pop
mov
mov
iret
cmpsl
mov
aad
pop
sbb
push
xchg
xorb
rcl
jg
rcr
push
test
cltd
xor
mov
test
repnz
xchg
loopne
push
das
mov
mov
cmp
xlat
mov
mov
push
popa
and
sahf
cmp
dec
cmpsl
lods
out
loopne
cld
std
mov
addb
or
scas
pop
fwait
jecxz
add
jge
xchg
or
cs
lahf
daa
shrb
test
pop
iret
dec
ds
pop
or
out
jnp
stc
adc
shll
in
dec
lds
and
test
pusha
mov
leave
pop
outsb
notl
push
es
pop
loopne
cmc
loop
lahf
lret
inc
xor
inc
popa
aaa
adc
mov
into
fdivr
push
cli
lock
jp
scas
movsl
cmp
insl
inc
nop
add
sti
std
inc
stos
insb
xor
mov
add
je
jns
movsb
hlt
sbb
inc
xor
in
mov
cmp
xchg
scas
sbb
add
adc
dec
add
sub
mov
repz
xor
jne
aam
ret
adc
stc
jl
int
rorb
mov
ds
pop
sub
jle
sti
xor
lea
mov
imul
pop
mov
push
pop
movsb
sub
push
jp
jno
cmp
sbb
cmpsb
outsl
xchg
lods
dec
fisttps
movsb
test
jmp
xor
dec
add
push
jg
into
sub
rcrl
les
hlt
fcmovbe
orb
adc
out
push
loop
mov
pop
cmpsb
mov
xor
rcr
imul
movq2dq
mov
and
decb
jge
jmp
jge
mov
xor
jle
inc
add
cmp
xchg
ret
outsl
cli
pop
in
mov
pushaw
iret
adc
inc
fcoml
mov
jl
nop
addl
repnz
cmp
pop
xchg
jne
adc
test
xchg
mov
sbb
loopne
sub
loope
ficoms
ret
push
lds
sahf
jmp
cmp
pushf
adc
jecxz
test
movsl
mul
icebp
cmp
lret
int
push
add
mov
faddl
sub
xlat
inc
lret
and
jns
xchg
sub
or
add
xchg
mov
aam
sbb
cltd
jae
mov
jl
daa
lcall
cs
ficoms
fwait
pop
pop
or
cltd
xchg
adc
fsubrs
cmpsb
inc
adc
loope
hlt
or
repz
dec
cmp
pop
push
xchg
push
push
pop
les
push
sub
fildll
mov
pop
je
in
fdivl
add
in
inc
dec
daa
jo
cmpsl
mov
mov
leave
adc
jmp
ja
ja
call
adc
sahf
and
mov
sub
addr16
pop
jbe
adc
pop
cld
push
adc
dec
sub
sub
negb
sbb
ret
jne
push
out
xchg
mov
xlat
imul
enter
int
outsb
dec
mov
cld
call
cmp
inc
xchg
test
and
mov
pop
dec
mov
es
jno
fmuls
push
mov
fistl
aad
cmpsb
xor
pop
or
or
inc
and
lds
subl
cmp
push
xchg
enter
js
les
insl
dec
popf
out
orb
pop
mov
sub
lcall
fisubrs
or
fistpll
add
out
mov
fstps
hlt
rcr
ror
pop
mov
clc
pop
or
cmp
adc
loopne
jle,pn
fdivp
sbb
clc
and
jb
in
stos
adc
loop
aam
push
std
insl
adc
jb
pop
mov
jo
andb
iret
leave
enter
jge
call
lock
xlat
push
adc
cmp
sub
out
jns
sub
es
cld
jb
and
repnz
or
notl
ljmp
sub
cmpsb
push
cmp
fimuls
pop
dec
ja
inc
or
and
insl
xchg
push
or
sbb
xchg
mov
push
ds
cmp
adc
enter
test
and
jbe
shll
ret
pop
cmp
mov
outsb
js
jmp
pop
xor
repnz
lods
pop
ljmp
pop
push
daa
push
add
into
push
mov
cmpsb
shl
jnp
xchg
or
enter
pushf
push
pop
jb
aad
bound
ljmp
data16
fsubrs
cli
mov
mov
xchg
fwait
repz
es
cmc
sub
inc
pop
mov
jns
dec
jecxz
jo
aas
jmp
inc
xchg
popw
cmp
enter
jns
cs
stos
shlb
scas
imul
or
pop
or
mov
sbb
cmp
mov
pop
and
dec
shll
mov
test
sbb
test
mov
in
add
add
push
jno
jno
lret
jmp
inc
xorl
push
outsb
addb
and
xor
fsubrs
add
lea
cmpsl
leave
mov
aaa
pop
dec
dec
fcmovnu
addb
mov
or
scas
and
fwait
mov
rcrb
lahf
and
dec
out
cltd
and
testb
or
ds
mov
lea
mov
out
and
push
mov
pop
jmp
fmuls
ret
mov
jb
cld
fbstp
inc
push
mov
dec
mov
test
add
int3
lock
push
dec
cmp
testb
pop
das
stos
test
push
dec
add
test
int
mov
sub
movsb
ret
push
xchg
mov
pop
adc
shl
jl
and
mov
enter
sbb
pop
adc
test
inc
mov
or
xchg
mov
mov
xor
adc
idivl
cld
adc
mov
scas
sarl
and
stc
addb
imul
cmpsb
test
sbb
xor
imul
addr16
push
or
pop
xchg
fcomps
cmp
mov
nop
sub
xchg
js
fnstcw
jne
mov
dec
incl
pop
push
imul
add
out
fwait
and
mov
cltd
sahf
xor
pop
dec
inc
sub
inc
xor
addr16
in
inc
jns
aaa
imul
adc
mov
orb
pop
dec
into
jb
andb
pop
mov
dec
test
push
mov
xchg
xor
andl
je
inc
lods
fmull
xor
andl
pop
mov
mov
ficoml
push
icebp
bound
sub
add
mov
sub
mov
xchg
sub
or
sbb
xor
and
xchg
fs
pop
adc
and
lret
ds
dec
lahf
adc
xchg
aaa
fwait
call
sbb
push
pop
daa
jb
insb
pop
or
in
jbe
mov
add
cmp
dec
cld
inc
mov
xlat
jg
xor
jnp
cmpsl
push
repz
adc
in
jle
rclb
fistl
hlt
ss
je
mov
aaa
fdivl
mov
mov
push
enter
inc
mov
lahf
jmp
xor
adc
pop
pop
lods
roll
push
out
fidivl
jmp
inc
insl
stc
sub
sub
aam
adc
into
int3
popf
rorb
lods
mov
shl
fdivs
cmc
js
pop
and
inc
notl
andl
data16
out
sti
jo
inc
mov
mov
ss
stc
sub
insl
adc
inc
cli
mov
cld
sbb
decb
add
mov
pusha
xorb
dec
cmc
dec
push
fldenv
idivl
xor
xchg
std
or
cmp
or
daa
add
push
sbb
inc
outsb
in
scas
fwait
push
mov
mov
cltd
jg
fisubs
xlat
inc
cmp
rcr
mov
mov
add
jmp
sarb
popf
add
sbb
rorb
ljmp
pop
cmpsl
cld
xlat
stc
jmp
out
and
test
jb
cltd
inc
pop
arpl
jmp
out
fs
shl
popa
out
sub
lods
xchg
loope
xchg
jno
inc
nop
xor
and
daa
clc
mov
out
hlt
jno
mull
movsb
and
dec
scas
mov
pop
cmp
jns
imul
push
out
scas
lea
jo
call
adc
add
mov
or
or
cld
inc
adc
stos
xor
icebp
jbe
xor
hlt
adc
imul
or
mov
mul
negl
lea
sbb
in
and
or
cmp
push
lock
mov
inc
xor
aam
mov
call
xor
fildl
bound
jecxz
and
or
xor
hlt
in
cmp
les
mov
sub
sbb
popa
call
aas
lods
dec
xchg
fmulp
lods
sbb
mov
shll
sbb
arpl
mov
fisttpll
push
xor
negl
and
ljmp
movsl
inc
xor
and
iret
and
mov
ljmp
add
insl
and
or
push
mov
adc
jle
jl
jmp
xor
aaa
mov
movsl
mov
sbb
push
xchg
in
das
or
pop
sbb
push
jl
and
push
and
enter
ss
adc
jns
in
shr
fistpll
or
jne
xchg
lods
ss
inc
insl
scas
ja
xor
jae
mov
cmp
ss
inc
dec
sahf
mov
repnz
imul
pusha
fisubrl
stc
mov
in
mov
js
mov
xchg
popa
add
xlat
cld
sbb
call
mov
dec
out
lret
mov
sub
shll
adc
inc
andb
push
or
ficoms
push
ret
jmp
cli
xlat
mov
or
js
xchg
cmc
sbb
pop
push
js
add
faddp
pop
and
out
ror
mov
cli
mov
clc
xor
stc
dec
xchg
and
push
int3
aas
xor
fsubs
mov
and
jnp
xchg
jmp
iret
lea
mov
loopne
in
cli
add
filds
fcmovnb
adc
lods
add
test
jne
cmpsb
jnp
inc
movsl
or
sub
add
dec
repnz
adc
es
ret
cmc
shll
pop
xchg
lods
xor
andl
lcall
and
bound
shrb
insb
scas
sub
mov
inc
inc
push
movups
xor
adc
fbld
xchg
imul
jne
mov
repz
repnz
pop
jl
scas
jb
push
sbb
movsl
es
or
add
sti
into
push
add
jp
pop
enter
imul
push
fldt
sbb
and
xchg
sub
test
xchg
sub
push
dec
scas
pop
fimull
gs
dec
pop
inc
xchg
sbb
in
fnsave
testl
dec
icebp
mov
aad
push
adc
test
xchg
push
cmp
cmp
add
sbb
mov
rorb
into
xchg
lds
lock
lret
push
mov
add
mov
es
insb
mov
mov
aas
ja
cmp
adc
out
xchg
addr16
fcoml
mov
ret
arpl
mov
in
inc
or
negb
subb
adc
pop
xchg
push
jge
and
xor
add
adc
loop
fwait
cwtl
pop
mov
mov
pop
or
push
pop
in
push
std
jne
mov
xchg
pop
adc
xchg
fldenv
ss
jb
push
sahf
xor
xchg
int3
stc
adc
jae
mov
sti
daa
in
xor
sub
adc
stos
pop
xor
hlt
mov
pop
cmpsl
xchg
and
loop
mov
jne
xor
jb
push
loop
xor
xchg
push
shll
sub
cmp
inc
cmp
pop
pushf
mov
inc
jns
cmp
je
adc
cmc
fisttpll
cltd
mov
arpl
pop
inc
fstpt
in
cmpsb
xorb
dec
mov
mov
cli
push
scas
mov
das
addr16
jmp
jno
cmc
mov
leave
jne,pn
loopne
adc
out
aad
js
fildl
mov
and
mov
cli
dec
lret
popf
lret
mov
aam
or
pop
lods
xchg
and
movsb
sub
iret
shll
test
mov
int3
jne
mov
subl
aas
sti
cmp
and
shl
and
push
adc
lret
cmp
mov
cmp
js
lods
and
dec
and
mov
pop
jmp
es
jae
mov
cmp
pusha
imul
and
jnp
out
dec
and
out
xchg
adc
mov
cmp
ds
mov
jno
push
mov
sub
out
xchg
aam
xchg
dec
stc
pushf
pushf
dec
mov
inc
sahf
xchg
push
or
andl
or
stos
or
outsl
cmp
jb
xchg
sbbb
cmpsl
in
dec
pusha
xchg
fcompl
jmp
dec
and
push
xlat
aam
mov
push
in
jo
push
in
mov
xor
xchg
xchg
or
mov
jmp
lret
or
xlat
pusha
and
xchg
cmc
stos
dec
movsl
pop
sbb
ljmp
fldcw
stc
push
dec
jge
iret
scas
jmp
xor
mov
gs
adc
sbb
fnsave
sbb
gs
popl
mov
xor
pop
jle
mov
mov
jno
mov
dec
stos
scas
cmp
xchg
shl
aam
add
clc
hlt
add
inc
mov
ljmp
sar
adc
imul
int3
test
mov
and
cmc
hlt
aaa
pop
cmp
add
push
dec
pop
jb
mov
pop
outsb
lret
ret
mov
push
xchg
cli
dec
vpmuludq
shlb
lods
fimull
push
pop
add
nop
mov
lods
push
push
hlt
jb
push
push
hlt
push
in
xchg
dec
mov
pop
or
add
daa
sarb
xchg
mov
push
lcall
out
sub
scas
cmc
test
push
scas
mov
pushf
sub
movsl
imul
daa
sbb
out
jo
dec
cltd
mov
rorb
test
cltd
lret
pushf
lret
adc
loop
std
xchg
sub
or
sbb
jle
dec
xor
stos
or
cmp
mov
iret
lods
and
mov
inc
mov
pop
dec
out
mov
dec
icebp
icebp
imul
aaa
call
psubsw
jg
movb
je
mov
xor
sub
sarb
jae
pop
xor
shlb
or
cs
sbb
mov
or
fbld
fstps
cmpsl
mov
pop
scas
outsb
stc
push
push
mov
orl
cmp
mov
es
jmp
imul
jns
xor
repz
jmp
adc
pop
sahf
mov
sub
cmpsb
test
cmp
xor
roll
je
pusha
xor
dec
inc
shl
insl
imul
outsb
cli
mov
push
mov
nop
add
sahf
inc
fst
rolb
aam
testw
loopne
push
jo
pop
loope
std
cld
decl
insb
sub
xor
stos
daa
xchg
jnp
add
and
in
js
xor
loopne
jb
or
test
push
inc
sub
js
scas
add
mov
loopne
or
or
sub
pop
push
cmp
inc
mov
xorb
loope
add
mov
and
mov
into
pop
and
adc
shll
mov
fmuls
mov
adc
mov
cmpsb
imul
cmp
fisubrl
scas
bound
dec
and
out
into
rcl
pop
mov
imul
call
jb
push
test
or
lods
and
leave
cmp
mov
xchg
mov
fistl
xchg
push
dec
cmp
add
xchg
inc
inc
cltd
mov
and
in
scas
inc
jl
jns
fcoms
fucomip
xlat
aad
pop
and
mov
fnstsw
repz
popf
add
inc
and
pop
imul
push
adc
pop
push
je
les
out
aas
jl
sub
push
and
gs
or
pushf
inc
sbb
jmp
xor
in
xchg
movsl
ljmp
adc
add
out
inc
jbe
inc
daa
inc
inc
dec
rorl
add
push
xchg
inc
jns
fcmovb
mov
clc
mov
xor
icebp
adc
fldcw
notb
and
adc
cmp
dec
pop
inc
sub
aas
or
sbb
shll
insb
cmp
aad
imul
xor
outsl
addr16
push
or
cmp
cmp
outsb
fdivs
pop
lret
mov
mov
subb
negb
mov
push
xor
jbe
js
sbb
sbb
sarb
sbb
mov
iret
mov
das
sbb
or
shrb
cmpsb
cmp
jb
sbb
and
mov
push
push
push
xor
fwait
ljmp
lods
rcll
insl
add
nop
es
out
jns
or
loope
add
push
int3
dec
xchg
fcomp
aas
inc
push
sbb
and
sub
fidivrl
push
pop
dec
push
mov
in
jae
sbb
jns
je
aas
out
pop
rorl
dec
out
leave
stc
and
sbb
icebp
aad
mov
pop
sti
fstpt
adc
outsb
pop
jge
popf
dec
stos
cld
das
imul
xchg
mov
aam
iret
add
imul
xor
fld1
pop
pusha
mov
mov
fcmove
popa
jl
mov
and
cltd
test
leave
mov
into
push
push
pop
jnp
jecxz,pn
or
mov
lret
mov
in
and
lods
add
das
int3
dec
or
out
push
jae
popf
daa
ret
out
fisubl
fcomi
xor
shr
mov
arpl
mov
movsb
jo
fs
mov
das
fdiv
mov
or
adc
push
out
insl
decb
xor
jge
sbb
ffreep
lea
cmp
hlt
out
out
test
cld
sbb
sti
or
popf
ljmp
nop
xchg
sub
imul
push
scas
xor
test
inc
xor
cmp
adc
into
pushf
xchg
jge
sub
push
int3
aam
push
es
add
sbb
out
dec
mov
pop
test
stos
mov
add
vmwrite
mov
jno
mov
xor
xor
jns
sbb
lock
jne
insb
lods
adc
in
mov
adc
lds
sub
pusha
add
hlt
and
loop
add
mov
jecxz
andl
outsl
fldt
push
loope
divb
int
or
loop
adc
insb
cmp
es
fwait
andnps
push
popa
ret
push
repnz
xchg
lods
mov
sti
enter
in
jns
in
adc
push
mull
jmp
sub
data16
mov
popf
adc
pop
lahf
mov
add
ja
decb
je
aaa
sbb
test
or
sbb
ret
popf
loope
sub
adc
or
nop
aaa
sbb
outsl
fwait
sub
jge
sbb
shll
in
push
loopne
push
data16
cs
rcll
test
jae
mov
ss
addr16
popf
fwait
dec
xor
lahf
fs
mov
inc
and
add
add
fdivl
push
rcll
sub
fwait
add
pop
sub
std
add
sbb
push
xor
shll
mov
in
stos
and
mov
out
hlt
adc
pushf
pushf
sub
scas
mov
cmpsb
ljmp
inc
testl
aad
and
or
addb
sti
jmp
or
cmpsl
shrl
adc
in
sar
insb
cmpb
std
ret
repnz
push
mov
int
push
xchg
and
inc
sub
xchg
or
xchg
xchg
mov
xchg
lods
add
dec
lods
pop
push
mov
or
and
mov
fs
mov
repz
in
and
aaa
xchg
pop
sub
xchg
ljmp
sahf
fcoml
sub
xor
mov
and
je
inc
xor
push
div
dec
cwtl
mov
cmp
mov
inc
scas
gs
and
pop
mov
or
fisubl
sbb
testb
cmp
mov
ja
and
dec
ds
mov
xor
xchg
out
jecxz
adc
mov
jmp
movsb
cmp
ror
lret
cmp
fldcw
add
lock
or
test
jle
gs
inc
mov
loope
lcall
add
cmp
lahf
scas
jp
xor
or
sbb
gs
arpl
cmp
xchg
xor
es
add
xor
ljmp
pop
pop
scas
and
call
into
sbb
fistl
sub
xor
or
xchg
cmp
ret
mov
cmpsb
mov
dec
adc
mov
loope
mov
xchg
xorl
cmp
rorl
xor
cmp
push
cltd
mov
test
dec
scas
and
sbb
test
lret
xchg
movsl
mov
pop
mov
jmp
sub
fsubl
stos
icebp
and
push
inc
cltd
jge
jo
aaa
pop
into
mov
push
xor
dec
mov
push
xor
rorb
push
mov
adc
imul
jne
std
test
and
icebp
push
popa
in
push
jmp
je
fsubr
jb
dec
inc
aad
sbb
jne
lcall
cs
sbb
mov
push
clc
mov
dec
ret
xlat
movaps
cltd
stos
sbb
dec
push
fs
fldcw
adc
lods
fldenv
pmulhw
shll
mov
call
inc
test
xchg
stos
sub
orb
sahf
and
cld
cmp
sub
cmpsl
mov
icebp
mov
outsb
nop
or
push
dec
je
das
mov
inc
push
cli
jp
xchg
imul
mov
icebp
xchg
je
stos
xor
arpl
and
ss
pop
jne
cmp
lock
add
ret
mov
stc
adc
bound
add
mov
aas
mov
dec
pop
mov
jb
or
mov
idivb
jle
fidivl
mov
sub
jmp
mov
cmc
and
loop
cmp
mov
pop
movsb
adc
cmc
rorb
xchg
jae
sbb
shrb
xlat
and
mov
inc
cmpsl
ss
push
inc
popa
stos
dec
fisubrl
lret
fstpt
pop
fbstp
fs
iret
fsubp
fisttps
shlb
xor
loopne
fwait
daa
cmp
push
outsl
in
arpl
xchg
push
cld
imul
je
imulb
inc
xchg
mov
cmp
mov
inc
xchg
xor
out
xchg
arpl
jle
inc
cs
rorb
enter
inc
sub
sub
push
sbbl
mov
lds
push
cli
mov
sti
mov
aaa
insl
repz
xchg
andl
cmp
and
adc
dec
jmp
shr
xor
jmp
xchg
xlat
cmp
pop
lods
mov
sbb
fidivs
shl
pop
cwtl
pop
scas
aam
inc
stc
enter
pop
xchg
in
pop
xor
adc
sbb
xlat
rcr
stos
aad
dec
ret
call
jbe
xchg
mov
and
lgs
push
pop
xchg
addl
ffree
mov
push
orl
test
faddl
data16
cmp
out
ret
xor
fisubrs
cmp
test
xor
test
xchg
lret
pop
jns
sbb
imul
je
jo
scas
xor
add
rol
and
iret
xchg
inc
lcall
adc
xchg
stc
aaa
cmp
or
mov
mov
pop
ret
lcall
lea
mov
and
sbb
inc
adc
inc
out
adc
subl
xor
mov
xchg
cmpsl
cmp
xor
dec
mov
lcall
adc
iret
movsb
xor
fs
popf
sbb
cltd
push
adc
jo
xchg
stc
inc
in
adc
push
mov
push
int3
dec
jb
clc
testl
mov
rclb
jo
adc
xchg
iret
shl
add
inc
adcl
les
sbb
push
das
insl
insb
cmp
js
sbb
int
jp
mov
fsubl
rorb
mov
cmpsb
mov
inc
add
cmpsl
sbb
in
adc
stos
push
aam
jle
jnp
jl
outsb
sub
mov
and
xchg
sti
shrl
pop
cmp
sbb
pop
xchg
and
ficoml
and
cmpsl
fstl
scas
and
push
add
mov
add
pop
mov
pop
inc
incb
dec
push
mov
out
mov
rcll
into
inc
cli
daa
pop
cli
fbld
push
mov
push
inc
jns
mov
mov
push
sub
jae
fstp
insb
cmp
loopne
adc
push
jno
data16
and
sbb
pop
mov
push
dec
out
cmp
adc
outsl
xchg
jb
mov
adc
mov
xor
packssdw
shrl
pop
nop
je
js
popf
and
in
jno
cwtl
and
rcrl
daa
sti
push
in
pop
fcmovu
mov
mov
test
pop
aad
cmpsb
mov
mov
pushf
or
mov
hlt
jp
add
xchg
iret
fisttps
adc
aam
int
movsb
adc
lock
mov
push
movsb
push
subl
ljmp
xchg
add
idiv
pop
sbb
cli
outsb
lahf
rcrl
and
pushf
nop
and
test
jmp
mov
lcall
inc
xchg
pop
inc
nop
and
mov
jnp
xlat
popf
int
add
inc
movsb
dec
sub
imul
inc
inc
xchg
xchg
xchg
pop
scas
push
js
sub
xchg
cmp
dec
xor
scas
aam
mov
jle
repnz
inc
xchg
pushf
push
ret
iretw
clc
and
repnz
dec
jg
mov
loopne
adc
pop
out
push
sbb
jno
fisttps
test
dec
xchg
mov
lret
loope
or
inc
shlb
mov
outsb
lea
mov
popf
sub
sub
pop
dec
sti
mov
ss
repz
scas
outsb
push
icebp
es
adc
push
cmc
scas
out
add
pop
popa
inc
push
loope
lds
shlb
add
xorb
cwtl
scas
insb
stos
data16
push
jno
push
rcll
popa
je
xchg
push
mov
cwtl
adc
lret
out
add
mov
jecxz
out
mov
fcmove
adc
jne
outsl
sti
xchg
scas
dec
inc
xchg
xor
aam
mov
je
aam
rclb
fs
pop
cmpsb
aad
pop
inc
jne
mov
in
or
or
in
sub
add
iret
dec
frstor
sbb
cli
pop
push
mov
sbb
push
sub
fsubs
clc
lea
jge
insb
out
bound
dec
dec
gs
lret
mov
cmp
cs
mov
or
mov
xor
mov
std
jle
add
sbb
mov
fldt
sahf
xor
inc
fidivl
jb
adc
cmc
cmp
xor
mov
hlt
fcomps
call
inc
into
sahf
jecxz
ret
jl
add
push
loop
testb
mov
incb
adc
sti
sub
jbe
outsl
and
push
ficoms
dec
xor
push
push
cmpl
xchg
fildll
fcomps
jo
add
sub
pop
sti
addl
sub
xor
ja
push
jg
fcoms
xchg
jmp
std
sbb
mov
fdivs
and
call
inc
push
cmpsb
add
adc
mov
popa
push
ljmp
bound
or
scas
jle
lret
push
cmpsb
je
mov
sub
fs
cltd
outsl
push
mov
cmp
int3
dec
pop
notb
lods
js
jg
ja
sbb
out
popf
xchg
in
in
test
fstpt
cmp
mov
and
jo
insb
out
and
outsl
mov
mov
rclb
or
icebp
jg
sbb
jmp
mov
cltd
out
notb
push
test
jae
inc
cmp
aad
rorb
dec
ja
icebp
adc
mov
mov
adc
aad
pop
pop
xchg
cmp
imul
popf
push
js
mov
fwait
imul
jb
int3
in
adc
cmc
adc
cli
mov
adc
aaa
cmpsl
mov
mov
push
push
lret
cmp
into
xor
ja
in
mov
ret
add
fs
jne
pop
dec
mov
ret
sub
or
je
mov
fdivs
icebp
arpl
jae
scas
mov
stc
shl
lahf
inc
cwtl
sti
add
fwait
lods
fs
lods
cmp
mov
mov
imul
leave
xchg
mov
mov
mov
jg
push
daa
push
test
ret
or
cmp
lret
cmc
xchg
aam
data16
mov
stos
js
int
or
mov
shll
jb
xlat
ds
fs
adc
pushl
xchg
ljmp
dec
mov
das
inc
cmp
lcall
popa
mov
jmp
in
pushf
sbb
push
ds
orb
mov
mov
scas
dec
daa
adc
dec
hlt
popa
xor
jno
pop
imul
ljmp
aam
push
or
in
rcrl
xchg
stos
xor
adc
int3
std
add
int
imul
hlt
xor
mov
daa
decl
into
pushf
or
sbb
push
jle
jbe
into
fidivs
test
hlt
mov
scas
adc
inc
mov
int3
add
aam
cmp
mov
pop
and
sahf
pop
cld
aad
jnp
xor
push
xchg
or
and
outsb
in
xor
mov
out
call
pusha
dec
popa
daa
xor
cmp
pop
cmp
pop
and
sbb
out
lods
clc
daa
add
or
popa
lahf
push
mov
cmp
sub
out
xor
test
mov
test
mov
adc
cltd
les
xor
push
test
cmp
into
ljmp
pop
insb
xor
insb
out
dec
and
mov
adc
sahf
das
dec
add
push
cli
or
sub
mov
pop
sbb
das
cmp
int
out
ljmp
test
outsb
or
ret
jbe
xchg
or
xchg
loope
jbe
ja
ds
mov
test
mov
add
jmp
lods
mov
movsl
dec
xor
movsb
loopne
je
bnd
cld
gs
in
loop
and
rcr
stc
mov
jmp
dec
inc
in
cwtl
mov
jl
cli
das
into
repnz
cwtl
xor
or
push
jle
jge
outsb
pop
add
push
jne
lods
push
xlat
arpl
scas
iret
xchg
or
das
mov
clc
scas
jmp
sbb
clc
aaa
cltd
or
pop
dec
fprem
push
outsl
movsl
popa
xor
and
push
imul
iret
js
push
sbb
das
leave
loopne
jle
test
or
in
icebp
adc
popa
push
sub
in
push
je
insb
sbb
mov
push
fisubs
push
jmp
xor
jnp
fnsave
fiaddl
cmpb
cmp
js
sbb
sub
and
ljmp
aam
cmp
in
or
jge
xor
mov
out
mov
dec
outsb
mov
ret
push
mov
pop
inc
and
pusha
sbb
xor
sbb
sbb
inc
mov
adc
jle
xor
sbb
cs
inc
cwtl
int3
fmull
out
add
ret
mov
mov
fidivl
ficompl
stc
or
inc
jecxz
aam
mov
lcall
insb
add
jns
ret
lds
repz
int3
adc
es
jle
outsb
scas
lret
nop
xchg
insb
adc
pusha
pop
repz
int3
pop
or
jno
mov
or
ficoml
push
outsb
sub
jo
push
outsb
imul
pop
xchg
and
addl
in
loopne
jae
mov
out
les
sarl
subl
sbbl
dec
repz
into
fdivs
adc
nop
adc
pop
add
push
out
lahf
inc
and
cltd
mov
das
lahf
std
bound
cmp
lods
das
outsb
jmp
push
xchg
ds
dec
rcrb
outsl
sbb
clc
sub
int3
push
rolb
movsl
sbb
fsubs
cmp
insl
hlt
ret
lods
lea
jo
push
sub
ret
lcall
sbb
xor
ja
mov
add
into
mov
push
jle
test
lcall
jg
jp
pusha
push
mov
repz
cmp
pop
sbb
sub
sub
sub
mov
data16
out
xchg
clc
mov
out
leave
push
cmp
push
mov
jmp
imul
adc
xor
out
fsts
mov
std
sti
xor
adc
push
in
sbb
daa
push
add
bound
ljmp
pop
lods
std
stos
bound
lds
xchg
rorb
jle
mov
jno
out
sub
fincstp
push
dec
imull
cmp
sbb
jmp
icebp
call
mov
addr16
dec
push
cli
pushf
stos
nop
daa
add
fs
push
add
sbb
mov
and
aaa
mov
icebp
insb
cmp
mov
mov
xlat
repz
cmpsl
fs
dec
je
xor
cli
aad
shr
paddusw
jb
dec
pop
insl
insb
fdivs
dec
mov
mov
test
cmp
test
rol
inc
fdivr
mov
leave
cwtl
popf
or
dec
xchg
xlat
inc
or
stos
or
pop
sbb
push
into
cmp
cmc
lods
cs
and
daa
lock
scas
and
fdivrl
xchg
addr16
inc
mov
jle
pop
pop
add
mov
dec
mov
aad
rclb
es
mov
out
push
pop
mov
enter
scas
dec
popa
loop
push
daa
push
xor
adc
test
ss
pop
push
lret
in
push
rorb
xchg
imul
fcomps
lret
pop
adcb
pop
iret
push
mov
ja
inc
lods
das
fdiv
fimuls
out
push
cmp
add
adcl
sub
aam
and
pop
dec
jns
testb
sbb
iret
dec
sbbb
stc
jb
data16
shr
add
jno
dec
or
dec
in
mov
push
cld
xchg
std
mov
cmpl
lcall
insl
fiadds
push
mov
xchg
cmp
lods
jne
arpl
out
outsb
hlt
aas
ja
inc
xor
insl
imul
jne
shlb
out
and
sbb
pshufw
inc
sahf
ret
ret
cmpsb
daa
movsb
xchg
ds
jne
dec
pop
orb
and
stc
inc
scas
push
divb
fmull
push
pop
cmpsl
adc
and
addr16
push
ret
dec
mov
cld
iret
xchg
xor
bound
arpl
cmp
lcall
adc
push
xchg
outsl
xchg
jns
inc
fisttpl
add
sub
sub
and
lcall
paddusw
call
int
sub
js
push
fildll
sub
mov
jge
lock
scas
dec
dec
mov
ljmp
jb
push
addr16
in
push
js
jno
mov
push
dec
xchg
jnp
or
fldt
or
push
cmp
inc
in
call
cmp
xchg
add
mov
mov
std
add
jge
jge
mov
pop
es
daa
xchg
inc
movsb
mov
cmp
stos
push
clc
jl
sub
lahf
jp
outsl
xchg
movsb
sbb
or
xchg
xor
dec
mov
in
push
add
stc
dec
xor
jbe
adc
ja
jle
xchg
push
sbb
out
test
pop
lret
add
into
inc
repnz
mov
call
add
and
push
jb
jae
aam
pop
bound
popa
nop
ret
insb
mov
cmc
sbb
xor
sub
ret
sbb
mov
xchg
cmp
outsb
mov
rcrl
push
hlt
outsb
lods
push
into
fdivrl
outsb
test
or
dec
lret
cmpsb
add
sahf
push
xor
lret
notb
jge
rcrb
out
mov
bound
and
mov
mov
push
jae
adcl
cli
and
mov
jae
pop
cld
xor
xchg
mov
les
loopne
lcall
insb
ficompl
mov
int3
adc
loope
inc
cltd
pushf
sub
sbb
sub
pop
xor
into
jne
pop
movsl
movsb
and
dec
loop
dec
xchg
adc
inc
and
mov
mov
dec
jl
push
in
sbb
sti
in
pop
cmp
add
dec
divb
mov
inc
incl
pop
out
test
or
push
lahf
cmp
nop
cmpsb
or
pop
adc
popf
inc
xorb
stc
cmpsl
jg
gs
pop
xor
jb
jmp
outsl
scas
cmp
subl
cmp
jae
mov
or
mov
mov
subl
arpl
shll
mov
cs
inc
jg
fwait
mov
sub
pop
mov
icebp
dec
out
jae
add
out
out
or
mov
or
enter
scas
add
lret
adc
je
lret
sub
jo
cltd
sbb
or
fwait
push
roll
clc
dec
sbb
add
rcll
lahf
lahf
sahf
push
push
mov
movl
inc
xchg
pop
cmp
xchg
lods
push
rol
scas
sub
lahf
pop
inc
outsl
push
test
mov
jmp
es
mov
shll
mov
add
adc
xchg
aas
adc
jmp
test
pop
mov
rorl
inc
test
mov
stc
in
rcrl
out
fbstp
mov
push
into
notb
call
jle
mov
ljmp
inc
stc
scas
jne
jbe
mov
adc
jne
add
jns
pop
rcrb
inc
insl
mov
into
hlt
dec
stos
mov
iret
lock
cli
movsl
sbb
insb
insb
icebp
jne
leave
cmc
xchg
or
sarb
jecxz
jg
inc
mov
fldlg2
imul
shll
jle
xor
jo
inc
inc
ja
inc
push
pop
adc
fcoms
pushl
add
into
divl
mov
mov
cmpsb
push
loope
add
mov
aad
dec
jbe
dec
sub
gs
repz
mov
insl
pop
xchg
mov
sub
mov
cld
jle
in
outsl
sub
std
imul
mov
test
popf
inc
addb
sub
mov
cmp
outsl
bound
pushf
arpl
cmp
in
imull
and
xchg
mov
mov
repnz
cwtl
fsubrs
mov
adc
andl
xchg
roll
leave
clc
jo
aaa
lds
fstps
jg
push
inc
and
pusha
lea
mov
jmp
mov
cld
test
xor
mulb
in
sub
dec
mov
dec
cmp
scas
mov
and
lret
xlat
cmpsb
dec
dec
mov
pop
lods
xor
lcall
mov
dec
out
xor
scas
inc
testl
addl
lret
popf
or
and
nop
inc
jbe
negb
fistps
mov
mov
mov
push
pop
or
lret
mov
and
rcl
sbb
pop
fisubrs
lret
rolb
xlat
mov
sbb
nop
sbbl
xchg
dec
lock
cs
fisttpl
push
fildl
fcoml
xor
xchg
mov
cmc
lods
ficoml
lea
adc
xchg
or
scas
fsubr
int3
push
mov
fisttpll
mov
adc
pmaxub
mov
enter
cltd
outsb
lods
sahf
insl
mov
jnp
push
fwait
mov
adc
fbld
ds
es
es
fistpll
or
xor
dec
idivl
xchg
mov
cmpsl
mov
and
lock
inc
test
stc
adc
scas
sbb
pop
into
pop
popa
into
movsb
fwait
fwait
mov
aam
sbb
dec
aam
xchg
shrb
outsb
dec
mov
cli
lahf
add
into
movsb
test
pop
ret
jge
fistpl
dec
push
ret
cmp
dec
and
inc
out
adcb
and
test
xchg
aad
fcmovnbe
arpl
cltd
in
popf
cli
shlb
xchg
jbe
mov
and
and
aas
fs
jns
imulb
xlat
lods
sahf
fnsave
subl
mov
add
mov
xor
aaa
mov
mov
fnstenv
push
popf
insl
xor
out
sbb
pop
sbb
mov
scas
push
cltd
jno
pop
xor
aam
filds
or
xor
mov
or
outsb
stos
incl
inc
popa
add
leave
inc
movsl
ja
push
loope
adc
push
mov
mov
popa
push
or
arpl
pop
test
idivb
inc
add
cmpsb
lock
mov
out
jo
add
fcomi
ljmp
aad
xchg
aad
outsl
addr16
lcall
mov
fcom
fxam
sub
or
mov
mov
out
jg
arpl
fcoml
xor
add
mov
mov
std
in
ljmp
iret
add
add
cmpsb
repz
out
inc
xchg
sbb
lret
pop
scas
pop
mov
sbb
inc
pusha
xchg
pop
fisubl
and
sbb
divb
out
sub
loop
mov
insl
jp
cmpsb
popa
das
add
out
aam
cmc
pop
or
dec
push
sbb
pop
mov
sub
sub
inc
fistps
push
clc
pop
adc
int
cld
xchg
repnz
add
outsl
push
xchg
jp
and
pop
adc
and
sub
loopne
imulb
hlt
scas
and
int3
xchg
or
loope
pop
aam
jl
arpl
insb
arpl
sbb
clc
jno
mov
aam
dec
jmp
adc
inc
sub
adc
jmp
loop
pop
xchg
mov
push
movsb
jne
pop
or
shl
je
pop
push
gs
fisttpl
sarl
lret
stos
movsb
mov
lds
std
int3
inc
fmul
daa
loope
dec
adc
shlb
sub
mov
dec
adc
stos
xor
cmpsl
push
jb
sub
and
cmp
addb
push
xchg
movsl
je
jbe
iret
and
mov
clc
sub
sbb
or
pop
jno
mov
xchg
cs
xchg
mov
imul
iret
jbe
paddb
iret
pop
cmp
and
xor
mov
mov
lret
xchg
mov
cs
push
in
inc
push
dec
rclb
push
cmp
add
scas
adc
daa
sub
mov
adc
out
and
scas
loope
or
lods
orl
sub
fucom
adc
mov
xor
stos
lret
test
sub
data16
or
rolb
or
pop
jno
out
sahf
push
sbb
jb
jmp
or
dec
mov
jae
ljmp
xchg
push
fsubrs
mov
mov
fildl
mov
inc
jle
add
pop
sub
rcrb
mov
mov
jbe
pop
and
cmpl
mov
and
pop
jns
leave
mov
push
call
repnz
mov
xchg
pop
ss
sub
jne
mov
imul
outsl
inc
test
fstpt
cmp
aas
js
out
sbb
lods
mov
mov
mov
sub
nop
push
cs
test
scas
in
push
pop
mov
inc
js
or
loopne
xor
test
arpl
xor
inc
stc
das
fildl
xchg
sahf
push
cld
test
das
jno
pushf
outsb
daa
and
je
roll
ja
test
imul
out
pop
std
inc
push
fldcw
sbb
movsb
jmp
inc
push
dec
movsl
and
ss
cmp
rcrl
jbe
cmp
push
mov
rcrb
das
mov
leave
sub
xchg
and
cmp
mov
imul
out
xor
push
push
lds
imul
cmp
test
xlat
je
loop
jae
cmp
shr
pop
mov
lods
inc
cmpsl
pop
adc
mov
push
sbb
dec
cmp
sarb
inc
test
in
xlat
inc
fwait
repnz
adc
sbb
ds
sbb
int3
push
stos
loope
inc
jge
rcrb
mov
add
out
loop
dec
cs
jbe
ljmp
mov
loope
xor
push
cmp
arpl
pop
and
xor
jnp
or
mov
outsl
inc
les
aaa
xchg
gs
pop
add
pop
push
outsl
mov
dec
icebp
fcoml
into
mov
sbbl
lret
xor
movsb
mov
jmp
test
add
scas
fwait
mov
sub
ss
jo
negl
fists
lds
imull
cmp
cli
mov
aas
shl
ret
dec
mov
pusha
and
add
inc
ret
push
and
pop
mov
mov
sub
orl
out
shll
add
in
fnsave
fnstenv
out
inc
mov
inc
stos
mov
stos
imul
loop
mov
jmp
nop
ret
incb
fldl
cltd
clc
outsb
mov
mov
out
xor
add
loopne
jmp
outsl
std
fwait
lcall
mov
push
xor
loop
lods
jnp
lcall
push
arpl
mov
pop
mov
xor
std
sub
rclb
xchg
mov
mov
jecxz
sub
decb
aad
cmp
stos
loope
push
or
and
mov
add
or
adc
rcrl
mov
adc
cs
push
cmp
lahf
cmpsb
rclb
jg
xor
das
push
movsb
dec
pop
push
add
ss
icebp
sbb
mov
mov
xor
lock
or
xchg
scas
out
in
mov
jo
sub
sub
inc
adc
jmp
or
jno
ret
out
xchg
jns
daa
xchg
xor
xchg
adc
inc
xorb
sub
sbb
jbe
ds
adc
cmp
test
mov
push
mov
and
dec
jbe
xchg
out
jmp
jmp
push
mov
and
xor
mov
pop
sbb
sbb
ret
xor
cltd
mov
ds
ret
shll
pop
incb
jg
mov
sbb
jae
sub
sti
mov
mov
iret
cltd
aas
lret
or
ja
mov
repz
pop
push
or
xor
aas
cwtl
mov
fmul
push
cmpsl
out
dec
bound
sbb
clc
cmp
rorl
inc
jnp
std
popa
cmp
es
pop
lret
pushf
mov
push
mov
xchg
xchg
mov
inc
lcall
dec
insb
xor
fsubr
arpl
cmp
ret
and
xchg
xor
fcmovnb
lret
and
cs
adcb
lcall
dec
mov
mov
add
add
sbb
push
movsb
mov
xchg
lds
pop
mov
enter
mov
lret
or
jae
mov
pop
fisubs
mov
test
pop
adc
and
sti
sub
leave
sbb
iret
mov
bnd
or
xor
jb
stos
or
xchg
lea
pop
add
cltd
popa
xchg
push
xor
negl
stos
sbb
mov
pop
adc
xchg
push
mov
fwait
xor
dec
stc
fwait
mov
mov
sqrtps
out
nop
xor
push
pop
scas
xor
cltd
adcl
test
rclb
int
mov
hlt
sub
push
jbe
stos
xor
mov
lahf
sub
lea
xchg
sub
sahf
fnstsw
idivl
insb
mov
popa
gs
jg
mov
mov
xchg
lea
dec
dec
pop
shll
xor
mov
pop
arpl
inc
inc
xor
ds
lock
and
xchg
mov
push
pop
insb
repz
jp
add
and
push
bound
or
popf
push
mov
shrb
pop
xchg
jno
scas
js
bound
aas
cli
cmp
adc
push
nop
mov
lock
sbb
int
cli
mov
jbe
cmp
xchg
cmp
addb
idivl
push
shll
sub
add
push
jl
or
lods
xchg
loopne
mov
popa
cmp
push
hlt
push
jbe
loop
sbb
into
mov
orl
sbb
dec
roll
push
cmc
aam
add
scas
jno
out
ljmp
outsl
movsb
repz
imul
pop
push
and
adc
aas
mov
lods
out
and
add
test
repz
pop
imul
mov
xorl
push
fistps
inc
jb
scas
fisubrs
sub
mov
out
in
mov
insl
jl
into
repz
xchg
or
jbe
int3
and
jge
pop
sub
mov
mov
clc
sahf
push
loopne
adc
mov
test
jge
pop
xor
cltd
pop
hlt
push
inc
mov
scas
imul
dec
out
mov
aad
jb
sub
cmpb
lcall
in
shl
scas
lret
lea
test
pop
push
out
ss
cmp
iret
inc
sbb
stos
or
sarl
sbb
sar
rorb
push
clc
fmull
jmp
pop
fcomi
xor
jg
inc
pushf
or
push
mov
push
sub
sub
fnstsw
test
mov
shl
mov
imul
cmp
adc
call
xlat
jno
or
xor
shll
outsb
movsl
sbb
mov
popa
fistpl
push
adc
hlt
add
push
cmp
jne
add
in
jg
bound
addr16
mov
mov
mov
cmp
jnp
fwait
mov
mov
fwait
shll
inc
inc
mov
imul
lods
repz
daa
lret
adc
aas
testb
aaa
cmp
imul
fildll
ficoms
sti
lret
sub
or
cmp
mov
lcall
xor
inc
cmp
dec
lret
mov
in
lock
loope
int
js
outsb
fs
push
lds
dec
rol
inc
jecxz
sahf
out
out
push
shr
inc
or
sbb
insb
and
sbb
push
sbb
test
push
push
xchg
jb
sbb
les
sbb
sub
add
lock
inc
pop
cld
mov
movsl
adc
mov
hlt
sahf
icebp
test
hlt
dec
adc
shl
or
push
mov
out
loopne
imul
and
into
out
jg
in
and
add
ret
dec
sub
lret
xor
and
or
inc
dec
jecxz
stc
aam
adc
jne
je
cmpsl
mov
mov
movsl
inc
pop
push
xor
out
jmp
out
std
mov
pusha
jne
jle
cmp
test
inc
push
shrl
les
xorb
mov
jge
sbb
jp
test
mov
fwait
clc
scas
fimull
push
push
addl
xchg
shll
pusha
loope
lock
lds
cmp
xor
inc
lock
xchg
out
mov
rcrb
xchg
push
dec
sbb
xor
pushf
push
in
push
mov
add
ret
das
and
pop
test
mov
jns
xor
test
mov
jmp
xor
lret
inc
sub
ret
lret
mov
pop
sbb
mov
jns
out
hlt
adc
xchg
pop
aaa
add
cmp
pop
xchg
mov
lcall
les
cwtl
enter
cmp
jg
inc
test
mov
pmuludq
mov
add
dec
mull
outsl
mov
and
inc
cs
lods
fadd
ret
or
call
mov
repz
clc
cmpsl
mov
iret
cmp
mov
test
outsl
push
pop
sub
cmp
insb
das
mov
test
adcl
cmpsb
jge
sub
shr
fcmove
inc
mov
das
fdivrl
mov
or
shll
inc
inc
mov
nop
ds
inc
popa
dec
xchg
mov
test
ret
push
add
xchg
jbe
fcomps
pop
jp
jno
jp
mov
sbb
add
fstps
cs
mov
inc
aad
or
es
lret
pop
dec
fbstp
pop
add
imul
loope
push
mul
pop
cmp
xchg
outsl
add
out
in
xor
pusha
jne
add
cs
fs
cmp
inc
and
loop
mov
jg
and
inc
sub
mov
sbb
std
int
mov
mov
pusha
mov
sbb
jo
sti
insl
jns
dec
inc
sbb
rorl
stc
and
add
xchg
push
pop
sbb
mov
test
fsubrl
pop
leave
cld
lret
sub
xor
inc
in
cmp
stc
repnz
repnz
and
insb
test
xor
pop
lds
mov
clc
int
dec
dec
stc
cmp
xchg
cli
mov
rcll
and
mov
adc
and
lea
adc
mov
jecxz
icebp
jns
or
clc
leave
pop
sub
push
jmp
lea
and
dec
jno
int
stos
ret
xor
pop
test
fisttps
pusha
adc
addr16
cmc
enter
ret
insb
sub
test
jns
dec
inc
rep
in
pop
movsb
lahf
inc
stos
nop
pop
mov
dec
add
mov
jns
mov
push
mov
and
pop
xor
lahf
mov
cld
rclb
stc
mov
push
mov
inc
cld
lods
mov
jecxz
mov
mov
test
idivl
shrb
push
push
xorb
xchg
adc
insb
add
xchg
rolb
or
ret
mov
cwtl
lods
push
xchg
icebp
ljmp
cmpsl
insl
adc
out
outsb
ss
lret
adc
jae
inc
pop
push
jnp
andb
jge
push
inc
jecxz
movsl
add
in
pop
scas
into
das
loope
dec
xchg
xlat
xor
hlt
sbb
ret
mov
data16
mov
lret
flds
or
mov
ret
push
mov
pop
lods
jb
lods
adc
sarb
das
adc
inc
into
imul
push
adc
jecxz
movsl
dec
rcrl
mov
xchg
rorl
cmp
pusha
cmp
mov
pop
push
push
jmp
xchg
shlb
in
movsb
cwtl
movsb
mov
lahf
jno
jle
mov
or
js
insl
push
pushf
subl
mov
cmp
repz
or
lods
shll
jb
add
mov
subl
pop
loopne
hlt
repz
fsubrp
fcompl
sbbl
cmp
mov
jmp
test
aas
xor
dec
pushf
mov
pop
and
cltd
pop
std
test
xor
mov
stos
jnp
add
bound
mov
cmp
mull
int
nop
mov
insb
cmpsl
sti
pusha
adc
xchg
shrb
fisubs
xchg
out
pop
and
xchg
shl
pop
mov
cmpl
mov
pcmpgtb
and
es
mov
xchg
dec
cmc
clc
call
repnz
pop
cmc
cmp
add
fsubl
mov
movsb
dec
dec
and
push
test
stc
imul
test
dec
mov
xorb
lahf
xchg
lock
adc
es
inc
mov
ljmp
fists
push
pop
or
movsb
mov
inc
fcomi
lahf
in
rcll
lret
ja
repnz
push
or
xchg
fs
sub
out
jge
pop
aam
dec
dec
test
push
loope
xchg
push
bound
xor
push
xchg
ja
mov
fdivr
dec
shl
inc
xlat
jnp
push
imul
insl
cmp
lods
loope
jb
enter
cmp
mov
insb
mov
inc
push
mov
and
dec
dec
cmp
inc
cli
add
mov
mov
jp
pop
xchg
fiadds
rcrb
sbb
mov
xor
mov
jae
mov
adc
ret
cmc
lret
xchg
notl
fsubr
ret
jo
cmc
mov
mov
push
insb
cmpl
nop
inc
mov
fstp
or
sub
and
cmc
inc
mov
cld
lods
faddl
jae
xor
add
dec
shlb
sub
push
into
sti
cli
int3
roll
cmp
daa
xchg
xlat
xchg
insb
rcrl
fwait
lahf
fxch
cwtl
lods
insl
dec
add
add
jmp
setnp
in
dec
push
mov
xchg
popf
flds
fbstp
pop
nop
movsb
cmpsl
je
cmp
jae
outsb
mov
and
add
cmp
jp
imul
lods
xchg
scas
outsl
in
or
pop
jno
enter
mov
lea
dec
popa
popf
inc
fsts
mov
cmc
icebp
pusha
cmp
clc
adc
lret
repz
ljmp
mov
add
sub
dec
lock
daa
sti
push
adc
mov
and
data16
pop
add
hlt
sbb
mov
cmpsb
xchg
sub
sub
outsl
pusha
inc
jbe
adc
nop
pop
xor
mov
or
ficoms
cmp
lret
test
fldcw
outsl
inc
lods
pop
out
push
inc
xchg
xchg
sub
clc
mov
push
push
sahf
sbb
int
repnz
shrl
stc
xchg
xor
ficompl
dec
jl
mov
xchg
or
pop
enter
insb
clc
sbb
inc
pop
int3
pop
pop
stc
sbb
outsb
insl
push
jnp
scas
fidivl
mov
pusha
cmpsl
jge
xor
jno
add
adc
mov
xlat
cmp
clc
lret
xor
mov
xchg
cmp
mov
xchg
jmp
int
aaa
push
fbstp
into
fildll
cs
or
hlt
test
jno,pn
es
mov
mov
in
add
or
lods
rcr
add
and
jbe
fisubs
adc
xchg
shl
out
or
push
mov
out
and
rorl
lcall
test
and
add
test
mov
leave
xchg
xor
stc
std
out
push
mov
mov
pop
in
clc
push
icebp
sub
push
push
ljmp
insl
push
lret
inc
lcall
into
mov
push
aas
xor
jb
mov
pop
dec
mov
into
sbb
sbb
testl
mov
xchg
out
lea
lea
push
out
push
jmp
mov
fucomp
mov
cs
cmpsb
push
mov
lcall
out
cmp
xchg
or
fdivs
es
and
ret
add
loope
sub
insb
sbb
jl
inc
stos
andl
mov
arpl
adc
push
mov
sarb
jnp
cwtl
dec
xor
leave
es
lock
jg
ficompl
cmp
adc
and
mov
das
fadds
dec
arpl
jmp
stos
in
jecxz
mov
xor
pop
push
fs
push
lret
and
push
insb
jnp
mov
jle
pop
imul
cli
xor
push
pop
cli
cs
inc
xorb
bound
add
cmc
xchg
lret
xor
add
sbb
addr16
rcrb
aaa
test
adc
imul
jmp
and
cmp
or
js
pop
dec
loop
cmp
arpl
je
dec
inc
lret
scas
stc
mov
in
push
mov
mov
test
push
mov
add
imul
ja
adcl
jnp
scas
mov
push
int3
xchg
inc
push
lahf
cmp
daa
jl
mov
push
pop
push
fimuls
js
xor
xor
push
or
inc
push
and
cmp
sahf
inc
insb
mov
pop
push
mov
je
std
adc
cwtl
and
adc
cmp
loope
push
loop
cmp
mov
incb
xchg
incb
push
jbe
mov
sub
cmpsl
push
in
pushf
jne
cltd
sub
andl
ja
sbb
jno
cwtl
sarl
mov
test
out
sbb
pop
add
das
mov
in
pop
stc
lret
dec
lret
fwait
pop
and
mov
push
jae
scas
cltd
scas
out
push
pop
stos
subl
mov
or
push
inc
mov
cmove
mov
stc
mov
inc
xor
hlt
pop
aam
lock
xchg
mov
mov
pushw
xchg
adc
imul
ret
aad
sub
jmp
sbb
and
or
sbb
jo
sub
sahf
mov
adc
pop
mov
cmc
mov
and
test
push
les
add
dec
stc
cld
jae
push
jo
and
xchg
add
cmp
stos
call
jle
mov
movsb
jo
lcall
push
and
lods
sub
sub
bndstx
mov
inc
mov
or
push
lret
stc
call
adc
sarb
aas
aaa
mov
adc
mul
std
push
mov
dec
cld
adc
mov
or
es
dec
fsts
imul
mov
out
jge
push
imul
jl
jg
pop
inc
int
outsl
loopne
cmpsl
cmp
bound
repnz
add
mov
loopne
push
mov
fisttpll
adc
push
nop
in
adc
aaa
inc
int3
pushf
mov
test
xchg
mov
rolb
orb
mov
pop
cmp
bound
sbb
mov
adc
mov
in
ds
adc
cld
in
icebp
bound
cli
in
addr16
pop
lock
fmuls
shl
push
out
or
pop
stc
mov
mov
inc
xchg
aaa
pop
stos
xchg
pop
dec
fidivrs
add
mov
pop
mov
mov
mov
mov
adc
nop
push
mov
xlat
push
popf
ret
push
xor
push
inc
mov
dec
popf
mulb
stc
jecxz
inc
test
es
enter
fdivrs
std
pop
nop
push
cmp
pop
lahf
xor
mov
clc
mov
adc
out
mov
push
xlat
jnp
jecxz
mov
jb
and
push
xchg
out
mov
mov
xchg
inc
pop
mov
push
sub
mov
aaa
cmpsb
test
cs
iret
xor
push
imulb
fs
mov
mov
rcrb
loop
les
inc
jae
push
sbb
mov
lret
jo,pt
int
aas
popf
push
cwtl
sub
cwtl
lock
sbb
add
int3
jge
sbb
dec
movsl
mov
pusha
cwtl
xor
dec
cli
push
pop
sbb
cmp
in
push
repz
add
call
mov
aaa
and
popf
arpl
pop
ficoms
sbb
ret
inc
sti
inc
lea
jp
and
xchg
push
lods
cld
push
xor
cli
icebp
add
aas
sub
aam
add
int
cmpsl
jne
fcom
add
sbb
arpl
loope
ss
or
adc
mov
mov
cli
mov
or
pop
lahf
or
jle
cld
gs
xor
movsb
push
mov
popa
and
mov
push
dec
les
mov
xchg
mov
mov
aam
or
pusha
pop
adc
repz
fucomp
xor
jo
push
cmp
cli
cmpsl
push
data16
dec
xchg
pop
mov
pop
out
in
das
test
xor
flds
sbbl
cltd
nop
out
loope
fdivs
sbb
sub
mov
jae
int
lret
out
or
dec
iret
out
xchg
out
inc
movl
adc
mov
mov
jns
mov
pop
das
test
sbb
mov
test
adc
jg
imul
loope
aam
jo
push
cmp
jbe
xchg
jbe
xchg
or
imul
scas
cli
inc
cmp
jb
in
lds
mov
jno
jp
sbb
pop
stos
jp
xchg
inc
xor
shlb
sub
dec
xorb
clc
jecxz
mov
xchg
cmpsb
cmp
ja
sub
sbb
das
push
test
cli
add
cwtl
xchg
addr16
mov
dec
pushf
xchg
inc
dec
inc
jmp
mov
add
push
push
into
popf
or
mov
dec
ja
sub
pusha
lods
mov
pushf
dec
rorb
dec
fiadds
jle
out
dec
rcl
scas
into
test
jp
or
push
subl
xchg
jo
add
adc
cmp
inc
sbb
mov
or
fcoms
mov
inc
xor
jo
xor
push
cs
add
ljmp
adc
sub
xor
jmp
aam
call
inc
dec
jmp
cs
movsb
in
fisttpll
adc
sti
and
sub
jl
pop
adc
adc
fisubrl
push
xor
or
xor
pushf
mov
lret
push
mov
mov
pushf
test
cltd
lret
std
mov
andl
mov
pop
or
dec
lods
aaa
lahf
add
aad
out
jno
push
inc
xchg
int3
inc
aam
stos
sub
jnp
pop
sti
mov
cltd
aam
nop
mov
por
test
push
lods
adc
jne
in
mov
test
add
cmpsb
jp
jbe
xchg
stc
lcall
sub
mov
ud2
pop
enter
lahf
popf
adc
shll
fldl
std
sub
addb
pop
add
adc
sbbl
and
loopne,pt
cli
lret
ret
movsb
mov
lahf
repz
xor
push
mov
notb
in
subb
cli
in
mov
pop
scas
insb
jne
fsubr
lea
sub
loope
loope
std
fsub
leave
pop
stc
sub
add
movsb
pop
orl
loopne
shll
aam
mov
inc
lret
jl
sub
ret
fstl
sub
arpl
mov
sub
daa
or
jl
push
fiadds
xor
rcr
push
cwtl
repz
jo
fsubrs
adc
jo
pop
dec
addl
fst
fsubrl
in
mov
mov
pusha
gs
js
or
xlat
pop
jl
push
adc
adc
cmpsl
arpl
xchg
movsl
cmp
dec
out
jge
pop
sahf
mov
rcll
loope
je
addr16
add
add
test
cmc
lcall
das
xchg
jg,pt
inc
xor
lea
and
xor
mov
fildll
bound
adc
repnz
cmc
ds
fstps
mov
xor
sbb
in
xchg
in
jmp
pop
gs
cmp
or
adc
or
loopne
cld
jl
xorb
or
test
sbb
int
xchg
add
sbb
fildll
ret
shlb
jbe
mov
xchg
in
jg
aaa
or
fsubp
lock
push
aam
mov
fdecstp
incl
cmp
xchg
jmp
xor
push
dec
daa
pop
jae
sub
lahf
xchg
jbe
cmp
push
xor
in
lods
adc
pop
or
call
rorl
shll
and
jbe
lcall
pusha
mov
insb
pusha
loop
mov
jne
rcrb
mov
out
fdivl
or
jg
mov
push
push
jg
ret
dec
sub
out
push
sbb
frstor
imul
pop
mov
add
inc
loope
sti
jl
movl
shlb
mov
ret
adc
pop
jecxz
into
into
cmpsl
pop
and
mov
aaa
jmp
sub
sub
push
shrb
dec
mov
addb
call
add
jecxz
or
pushf
aam
dec
ret
mov
das
ret
scas
pop
or
call
mov
out
mov
dec
pop
inc
mov
shl
shll
enter
leave
add
cltd
xchg
aam
imul
in
jne
xor
mov
and
jno
jno
mov
imul
mov
and
mov
into
inc
int
test
icebp
lds
lods
dec
into
out
mov
insl
jb
adc
pop
out
aad
je
imul
mov
mov
cld
push
push
aaa
call
insb
dec
popa
iret
std
jns
cmp
dec
inc
outsl
mov
rolb
dec
and
pop
iret
or
mov
icebp
cmp
outsb
loopne
stos
ja
xor
arpl
add
xor
pop
pop
enter
pop
pusha
ss
jbe
ja
fistpl
mov
loopne
mov
fisubrs
cmp
pusha
out
sbb
jl
aam
cmp
xchg
or
int3
adc
iret
and
aaa
gs
lods
lods
or
dec
add
int3
adc
pop
xchg
sbb
popf
sub
leave
jae
jmp
dec
js
push
xchg
imul
pop
push
dec
jl
adc
push
std
dec
xchg
lret
xor
xchg
push
inc
cli
or
xor
lods
ds
add
jb
xchg
adc
std
and
inc
fsubrs
int
adc
mov
dec
insb
nop
data16
jge
xor
mov
scas
cltd
fisttps
push
imul
int
insb
cmpsb
pop
sbb
pop
out
inc
adc
jo
loopne
sbb
cld
in
call
jnp
pop
ds
pop
adc
add
sti
ja
cltd
out
push
lds
mov
lea
jae
add
jae
adc
sarl
mov
sbb
sbb
sub
push
shrl
push
out
pop
bound
cmpsl
push
scas
dec
outsb
gs
lock
mov
call
mov
bound
jl
arpl
test
pop
add
shlb
sbb
jmp
mov
cmp
negb
push
push
orl
lahf
jno
je
andl
bound
sub
shlb
call
rorb
test
mul
dec
cld
inc
or
lds
inc
aas
rcl
aad
nop
sub
cmp
dec
mov
test
in
add
es
sbb
pop
cmp
lea
push
fcoms
loope
lret
xchg
jno
test
inc
pop
adc
sbb
adc
mov
decb
add
lock
mov
and
insb
and
and
xchg
lods
sub
jae
mov
pushf
enter
movsb
aam
and
adc
mov
push
notl
rcll
cmp
insb
int
shrb
jl
cmp
jg
fldcw
insb
aaa
das
xchg
clc
jo
orl
ja
inc
data16
into
faddp
and
inc
shrl
lahf
sbb
ret
cmc
dec
lcall
pop
xor
sahf
add
mov
xor
fiadds
fs
mov
and
jno
and
cmp
add
cmp
push
xlat
inc
adc
fisubl
mov
pushf
mov
or
xchg
dec
fsts
dec
stos
repz
lret
xor
lods
sarb
fsubrs
test
push
fsubrl
pop
test
cmpsl
rorl
cmp
sub
xor
pusha
mov
xlat
mov
das
test
inc
cmpb
idivl
or
imul
gs
sbb
or
and
stc
pop
xchg
push
rorb
popa
lcall
nop
stos
jbe
and
jo
movsl
xchg
push
jae
fcoml
pop
jno
push
faddl
push
cmp
xor
push
ss
sahf
push
dec
push
aad
or
sti
adc
pop
shlb
sub
add
lds
mov
es
fcos
pop
sub
cmp
inc
int3
and
xor
pop
mov
sbb
push
out
xchg
ret
ja
nop
jg
adc
into
mov
lock
hlt
push
fbstp
mov
dec
jecxz
lret
xorb
out
roll
js
jle
push
jae
xor
jb
daa
push
inc
xor
jle
test
lret
ljmp
pop
jge
call
loop
insl
enter
mov
fistpll
fs
xchg
daa
push
mov
add
and
shlb
pop
std
popf
xor
lods
xlat
xchg
js
mov
sbb
and
rorl
pop
xchg
or
mov
dec
sbbb
adc
hlt
mov
not
adc
xchg
fmull
xchg
dec
icebp
call
jno
xchg
mov
into
test
inc
jg
cmpsl
add
mov
xor
fldl
pushf
in
adc
clc
dec
test
cmpsl
mov
adc
aad
ret
pop
int3
push
out
jg
xor
sbb
or
data16
sarb
das
sahf
pop
mov
test
test
es
fidivrl
leave
pushf
mov
dec
jne
mov
adc
add
fxam
pushf
dec
cli
dec
add
mov
and
call
scas
xor
mov
cmp
push
adc
push
mov
adcl
xchg
loopne
iret
fcomps
data16
ljmp
out
call
sar
fdivrs
jp
and
sub
shll
xchg
into
lods
xor
daa
inc
push
mov
mov
lahf
clc
insl
popf
pop
pop
rorb
mov
mov
xchg
in
pop
aad
test
push
sti
repnz
sub
fists
add
cld
jne
fcoms
jno
sub
int3
mov
jne
push
movsl
outsl
or
rolb
or
jno
xchg
mov
dec
or
ds
notb
sahf
stos
outsb
jbe
pop
hlt
lea
imul
stos
addr16
fnsave
push
inc
xchg
orb
popf
sarl
sbb
push
mov
push
out
jnp
int3
enter
movsl
inc
push
ret
sub
mov
clc
jl
push
mov
push
imul
sahf
jge
pop
movsb
inc
repz
pop
sahf
add
or
fiadds
loop
clc
sbb
cmp
mov
icebp
mov
xchg
shr
fidivrl
insb
dec
lret
pop
daa
jl
add
sub
sbb
dec
add
mov
les
jae
mov
fnstsw
cmpsb
pop
lret
pop
enter
ret
mov
mov
push
sub
sti
or
addl
cli
dec
in
movsl
imul
xor
mull
enter
mov
scas
mov
ficoml
sbb
rorl
jno
adc
jecxz
rol
stos
xlat
adc
dec
inc
mov
inc
addl
lcall
ret
ja
lock
ss
sub
jns
cmp
imulb
push
inc
jae
xchg
call
test
jecxz
sti
ret
into
xchg
ficomps
outsb
sub
aad
xchg
dec
pop
outsb
test
loope
push
in
push
xchg
mov
ds
push
xor
lock
imul
mov
push
mov
std
cli
cmp
imulb
xchg
andb
fldl
push
sub
or
loop
rol
sti
mov
outsl
dec
iret
sbbb
fisubrl
movsl
jb
clc
fldcw
or
pop
int3
cli
adc
push
push
jle
sbb
js
xor
insl
adc
sbb
or
sbb
push
pop
cltd
pop
jecxz
rol
lcall
mov
fs
test
mov
cli
xchg
jg
xchg
sbb
mov
mov
jmp
insl
cs
mov
mov
mov
or
rol
lock
shll
dec
push
mov
mov
jge
xor
icebp
pop
mov
cmp
cltd
loope
std
imul
adc
and
scas
test
hlt
cmp
xor
xlat
fldt
or
or
push
and
push
inc
scas
inc
jb
into
pusha
add
mov
push
jo
mov
in
fwait
add
pop
mov
clc
xchg
dec
clc
mov
push
xor
fwait
add
adc
out
sahf
xor
stc
shll
inc
mov
mov
fisubs
inc
adc
push
fwait
pop
cltd
les
mov
xbegin
xchg
je
add
adc
mov
or
fldenv
fdivrs
xchg
dec
clc
pop
cmp
loopne
pop
gs
mov
pop
daa
sbb
fs
mov
cmp
pop
loopw
jg
adc
jge
cmp
sti
sbb
negl
cmc
cmc
test
fldl
mov
cld
iret
cs
jne
pop
out
enter
imul
std
or
orb
cmp
mov
push
fcmovnu
lock
in
xchg
repnz
negl
out
cmp
sahf
insb
and
mov
subl
push
dec
mov
das
cli
pop
pop
test
add
cmpsl
jo
cmp
mov
bound
aaa
xchg
push
jmp
lcall
fsub
inc
push
and
rcrb
mov
pop
push
dec
pop
push
cmpsl
adc
lds
mov
push
pop
pop
xor
jg
mov
adc
adc
inc
mov
arpl
insb
mov
clc
repz
xchg
fistps
pop
std
in
pusha
sbb
mov
mov
adc
test
fisttpl
jecxz
lea
mov
push
mov
daa
lcall
dec
pop
ret
shlb
mov
pushf
cmp
icebp
bound
into
dec
push
mov
lahf
xor
add
mov
xor
mov
hlt
mov
xchg
test
sbb
aaa
enter
movsl
push
mov
adc
and
inc
push
xchg
iret
mov
cmp
inc
sar
pusha
or
jno
sub
mov
cmp
stc
insb
adc
fcmovnbe
sbb
sti
push
cli
mov
pop
xlat
cmpsb
adc
sub
adc
mov
rol
das
jecxz
pop
into
jns
sbb
das
jns
pushf
xchg
inc
stos
adcb
dec
inc
xchg
int3
sbb
mov
scas
rolb
sar
daa
pop
xchg
push
sbbb
push
lret
dec
mov
loop
xor
stc
daa
adc
or
push
mov
add
inc
popf
rorl
out
lret
rcll
sahf
jo
lret
mov
push
lods
xchg
js
mov
pop
scas
cmp
fisttpl
out
xor
test
shrl
divl
xchg
cs
sbb
mov
dec
xchg
push
inc
out
jg
in
push
jae
inc
scas
adc
mov
into
pusha
ljmp
fmull
mov
iret
arpl
pop
inc
jb
mov
into
xor
jge
clc
push
sub
push
dec
iret
mov
lods
sub
stos
hlt
xorl
or
and
jg,pn
inc
fstpl
or
repz
popa
test
subb
mov
rcrl
out
das
clc
divb
sub
bound
adcb
cs
adc
mov
and
mov
xchg
jecxz
mov
sub
fistl
arpl
sti
out
lds
leave
ror
xor
mov
lahf
push
lar
imul
rcrb
movsb
push
sbb
test
add
dec
arpl
fwait
repz
mov
stc
and
jecxz
sub
imul
in
add
push
hlt
mov
iret
mov
xchg
mov
pop
rcll
pop
fcmovb
jecxz
jmp
cmpl
sti
leave
loope
icebp
pushf
imul
insb
mov
jmp
inc
xor
mov
adc
hlt
pop
sub
test
add
sub
sub
aam
pop
icebp
imul
jbe
push
inc
push
pop
mov
sub
mov
mov
and
es
sbbb
cmpsl
xchg
addb
mov
ret
xor
lods
and
nop
pop
lret
mov
sti
push
xchg
mov
mov
out
aaa
pmulhuw
xor
addb
dec
inc
push
pop
sub
push
loop
push
rcr
repz
mov
and
mov
cli
mov
push
insl
sbb
mov
out
cmp
push
loope
cmp
xchg
push
sub
ds
sbb
mov
rorl
cltd
jns
addb
inc
in
mov
pop
ret
and
and
out
fnsave
daa
gs
lahf
jmp
sub
lea
mov
leave
shlb
adc
ss
cmpb
cwtl
mov
pop
test
add
xor
fwait
mov
loopne
push
pop
lret
jle
cmp
sbb
mov
adc
mov
pushf
sbb
jp
and
cmpb
sbb
mov
mov
int3
add
mov
pop
pop
setns
inc
mov
mov
aas
jbe
out
xor
cmp
ljmp
in
add
sub
stos
sbb
rclb
lea
shlb
fwait
inc
into
adc
test
push
jg
lcall
mov
iret
nop
add
rclb
cmc
xchg
sbb
xorl
popf
cltd
push
rcrl
push
popf
clc
push
push
jbe
or
cltd
test
dec
dec
xchg
adc
sbb
push
sti
mov
adc
cmpsl
adc
mov
das
out
sbb
and
cld
pop
lret
test
push
cld
cmp
push
push
xchg
test
outsb
daa
jne
xchg
inc
adc
jnp
add
dec
mov
out
mov
in
mov
rcr
in
push
inc
in
das
fwait
out
frstor
jbe
in
stos
enter
add
test
push
call
fiadds
rclb
lds
push
in
out
js
push
sub
shl
mov
jecxz
outsb
cwtl
les
or
ficomps
pop
jae
sbb
stc
xchg
ds
adc
inc
lock
aad
cmpsb
mov
jns
dec
mov
jp
or
test
fistl
xchg
or
jmp
out
orl
xor
imul
into
jbe
and
adc
cltd
sub
cld
call
push
mov
mov
jae
xchg
cmpsl
pop
and
stc
sarb
lods
mov
subl
out
pop
repz
push
sbb
ret
aad
gs
icebp
divl
lahf
cmpsl
jl
int
inc
je
mov
adc
insl
inc
aas
pushf
xor
cli
pop
adc
dec
add
into
hlt
or
lcallw
add
xchg
push
xchg
hlt
cmpsl
and
lock
nop
mov
pop
push
fdiv
mov
scas
jp
sbb
and
outsb
aad
fidivrs
mov
cltd
inc
daa
sub
xchg
sub
stos
mov
dec
int
sbbb
fisubrs
sbb
push
push
pop
adc
test
loop
pop
mov
dec
nop
lock
dec
add
movsl
aam
icebp
xchg
lods
or
les
cmpsb
loope
cs
fsts
xor
xlat
or
push
dec
inc
xor
scas
mov
jns
gs
not
jo
out
ret
pushf
adc
stos
orb
nop
jp
dec
jne
leave
dec
sbb
or
inc
cmp
fiadds
mov
jno
and
sahf
fisttpl
xor
mov
fstpl
add
dec
out
int
sub
pop
scas
into
cmovl
repnz
or
cmp
mov
push
sub
jae
and
pop
sbb
xchg
mov
pop
adc
outsl
lahf
lret
mov
movsl
lea
xor
inc
ret
mov
adc
cmpsb
mov
push
sti
lret
mov
cld
repnz
adc
mov
sub
add
xchg
add
xor
and
mov
xchg
fisubrl
mov
lret
mov
out
cmp
inc
pop
dec
mov
test
cwtl
stc
mov
scas
in
or
sub
outsl
mov
push
xor
jo
daa
fdivrs
mov
push
lods
mov
xlat
aam
mov
dec
adc
js
test
mov
aad
cld
orb
mov
xor
cmpsl
lods
push
pusha
ds
loopne
jb
mov
jo
xor
dec
stos
and
scas
push
repnz
push
lods
into
loope
sbb
sbb
shrb
shll
lock
or
add
cli
das
xor
fdivrs
out
sahf
stos
loop
imul
scas
mov
jbe
hlt
outsb
lea
or
shl
lods
les
cmp
xchg
jge
sbb
out
xchg
in
movb
pop
std
mov
dec
add
and
cmp
stc
or
pop
movnti
in
and
sub
mov
mov
cmp
sti
push
stos
mov
imul
call
test
nop
cmp
cmpb
sbb
jmp
inc
popa
insl
dec
mov
mov
push
addr16
in
push
jb
dec
gs
insl
lea
sbb
sbb
pop
inc
daa
mov
inc
push
mov
inc
cmpsl
xchg
sub
lret
xor
lods
push
jecxz
cmpl
cmp
inc
add
sub
cmp
xchg
call
sbb
jb
xchg
mov
mov
sar
addb
pop
bound
js
aam
rolb
jmp
xchg
stc
cmp
es
dec
pop
iret
xchg
jne
insb
jg
shld
pop
cmp
adc
movsl
push
loop
aam
in
ja
cmpb
mov
mov
mov
icebp
aam
adc
sbbb
lret
stos
in
fadds
outsb
lahf
sti
jmp
movsb
repnz
scas
ret
sub
pusha
enter
fmull
jns
mov
push
cmp
adc
mov
adc
or
js
pop
dec
int3
jmp
js
std
push
fsubrs
inc
push
fwait
add
inc
mov
or
cmc
in
mov
or
add
hlt
or
jno
cmp
jne
xchg
mov
mov
mov
mov
add
adc
adc
shl
aam
cwtl
jnp
mov
std
add
out
push
xor
arpl
push
mov
loopne
fsubrp
jl
jecxz
int3
add
add
ret
pop
sub
cmp
mov
sbb
xor
pop
out
cmp
xchg
jge
dec
leave
dec
mov
fs
mov
mov
movsb
inc
mov
movq
je
cltd
int
clc
xor
adc
adc
xor
xchg
imul
dec
std
shlb
adcl
xchg
mov
pop
scas
mov
dec
lahf
hlt
cmpsl
aad
mov
movsb
adc
push
cld
aaa
popa
push
cmpsb
in
ljmp
ja
or
lock
mov
sbb
test
adc
xchg
xor
jb
es
fbld
pop
push
push
adc
pop
inc
add
aad
cmp
cmc
lods
es
jo
xchg
sti
ret
push
pushf
dec
jo
shlb
push
lock
inc
sti
mov
ds
push
sub
sub
xchg
adc
mov
jmp
push
stos
loopne
test
lret
sbb
hlt
pop
inc
inc
imul
dec
pop
xchg
fs
sbb
xchg
in
xor
mov
mov
xor
push
daa
jl
or
or
imul
test
sub
mov
ret
push
in
cmp
push
test
mov
sti
mov
ja
inc
out
std
cmp
xor
mov
leave
cmp
xor
sbb
mov
ljmp
das
lea
xor
test
sub
or
jge
rcl
cwtl
sbb
inc
popf
lret
stc
movsl
fcomi
in
mov
les
inc
repz
sbb
sub
mov
adc
es
push
lods
jne
lea
fnsave
or
jg
arpl
movsl
jecxz
pop
hlt
nop
sar
mov
xor
cmpsl
inc
test
add
inc
push
insb
adc
iret
jno
pop
add
fwait
pop
ret
inc
add
dec
xor
lcall
les
jae
xchg
inc
idivb
cmc
movsb
inc
dec
int3
outsb
in
in
xchg
jge
shlb
je
les
adc
add
push
stos
fcoms
sbb
jbe
popa
or
sub
nop
fdiv
dec
sarb
and
mov
sub
data16
mov
mull
push
mov
push
mov
mov
nop
mulb
xchg
addb
or
mov
cmp
enter
test
arpl
ja
imul
push
pop
adc
and
shlb
mov
jns
mov
jg
je
sub
into
jecxz
popa
cmpsb
xor
xor
in
push
icebp
test
and
test
in
sbb
ja
scas
dec
cmp
fsubl
imul
pushf
rorl
cmp
mov
and
and
les
in
aad
stc
hlt
lds
add
cmp
icebp
or
inc
xorl
inc
mov
jmp
cmc
xor
fimull
pop
lret
mov
xor
es
sub
lods
cli
es
push
sbb
sub
xchg
out
and
mov
jmp
mov
lock
sahf
cmp
icebp
shlb
scas
arpl
jbe
push
ret
shlb
jp
lcall
jns
mov
sub
loopne
lock
lahf
add
jg
fiadds
jbe
mov
es
test
xchg
call
js
add
pop
mov
xlat
xchg
mov
and
iret
push
repnz
cmc
rolb
adc
jg
jae
cwtl
adcb
cmc
inc
push
into
pusha
decb
out
jne
adc
test
mov
rolb
sbb
mov
fsubr
div
ja
aaa
and
insb
push
mov
and
sbb
mov
scas
call
incl
rolb
rcr
pop
xchg
out
mov
dec
jbe
xor
lds
jmp
xchg
adc
push
cmp
mov
lret
into
sbb
pop
ss
jg
adc
repz
adc
add
pop
jno
popa
mov
inc
push
lods
or
sbb
push
movsb
sbb
fiadds
mov
jns
outsb
sbb
jbe
sub
jmp
dec
cmp
loopne
inc
add
insl
std
outsl
lret
das
xor
add
sub
push
mov
pop
mov
stos
data16
mov
mov
push
add
scas
and
ret
inc
xchg
xor
mov
pop
and
pop
dec
jnp
xor
insb
dec
fbld
shrl
outsl
aas
fiaddl
mov
lods
lahf
jle
and
dec
sbb
jmp
imul
cmp
ret
loop
jge
mov
mov
adc
in
and
mov
and
imul
pop
insb
inc
dec
in
cwtl
pop
mov
sbb
sarl
out
dec
xchg
hlt
mov
cltd
bnd
cwtl
mov
xchg
jmp
hlt
popa
jno
pslld
mov
xor
cmp
and
les
sub
lock
cmpb
fwait
jne
aas
mov
push
ret
mov
jns
push
inc
scas
push
cld
loopne
dec
or
lret
popa
sub
lock
jns
in
inc
push
and
mov
sahf
push
jle
cmc
pusha
clc
dec
je
xchg
jns
gs
fdivl
mov
arpl
popa
scas
aam
or
push
popf
dec
jnp
loope
popl
push
add
mov
or
repnz
mov
enter
push
int3
adc
mov
leave
daa
pop
movsb
call
mov
mov
mov
dec
cwtl
jecxz
lods
push
adc
cmp
ss
cmp
jnp
or
les
je
add
and
sahf
fcoms
and
pop
add
dec
or
ret
push
sbb
pop
in
icebp
cmp
mov
sbb
rcl
and
sbb
lds
adc
xchg
push
out
push
icebp
xchg
cmpsl
packsswb
xchg
ret
negl
adcb
xor
mov
cmp
pusha
fwait
out
stc
out
sub
mov
jecxz
sbb
sahf
fwait
mov
lock
sub
leave
stos
xchg
pop
xchg
xchg
mov
jno
jne
sbb
cmpsl
pop
adc
aad
and
cmp
adc
pop
fisubs
hlt
fs
bnd
test
or
ja
in
jle
repnz
mov
in
or
push
cmp
pop
pop
xchg
fsubrl
dec
pop
mov
mov
fwait
push
ss
add
xor
mov
xorl
push
pop
dec
pop
mov
adc
xchg
fcoms
or
mov
cmc
cmc
push
or
out
ss
icebp
and
movsl
aaa
mov
test
enter
mov
dec
nop
scas
cvtdq2ps
mov
int3
ds
cwtl
out
out
adc
and
sarb
sub
jg
daa
les
outsb
stos
int3
popf
add
dec
add
insb
and
inc
adc
nop
int3
jp
or
aad
or
jb
idiv
mov
in
imul
sub
loopne
ficomps
dec
jp
lea
pusha
pop
mov
repz
mov
inc
push
mov
das
sbbl
aas
gs
cmp
sub
jecxz
jecxz
xor
outsl
mov
mov
sti
outsl
cmpsb
sub
sub
dec
xlat
lock
cmpsb
xor
lret
test
stos
cmp
jp
jg
sub
bound
cs
xor
sub
into
jp
jnp
jl
mov
stos
je
mov
dec
xchg
fucomi
movsl
jbe
outsb
xchg
outsb
jmp
inc
push
mov
in
pusha
add
adc
mov
bound
dec
popf
shll
jl
sbb
sbb
and
xchg
jns
mov
dec
jecxz
andl
adc
movnti
xlat
or
inc
orl
sarb
or
mov
sub
mov
pop
add
adc
clc
jb
cmc
inc
pop
popf
xchg
push
jecxz
xor
fdivrl
add
movl
outsl
sub
xchg
je
xor
pop
lret
inc
adc
jmp
cwtl
adc
call
mov
rcr
mov
add
sti
xorb
xor
js
test
ret
xor
pop
cmc
ljmp
mov
or
js
add
out
ficoms
sub
dec
and
dec
adc
cltd
mov
aad
cltd
aad
ss
xchg
mov
jb
fidivrs
pusha
das
or
inc
lds
xchg
out
imul
mov
mov
push
dec
push
inc
data16
pop
orb
or
sub
lock
loop
mov
into
mov
mov
outsb
and
pop
add
stc
ja
call
jp
int3
push
cmp
push
pop
mov
insb
popf
cmpsl
divl
or
xorb
push
std
xchg
and
push
movsb
mov
leave
push
inc
sbb
cmpsl
xor
jmp
mov
push
and
push
mov
out
pop
in
clc
cwtl
filds
daa
lret
fimuls
cwtl
leave
push
jmp
mov
dec
stc
lret
adc
into
add
stc
daa
test
aam
mov
dec
dec
dec
out
mov
and
mov
xchg
mov
arpl
stos
gs
test
jnp
imul
xchg
jg
jp
mov
dec
xchg
pop
cmp
inc
repz
sbb
repnz
push
mov
in
xchg
jecxz
sbb
ljmp
mov
cld
cmp
jp
gs
mov
lret
cs
leave
sub
mov
aad
movsl
jo
fimull
stos
mov
mov
push
sbb
mov
inc
sub
call
cmp
adc
sbb
lcall
int3
push
mov
popa
lea
out
fisttpll
andl
cmp
ljmp
jb
insl
outsl
xor
jo
andl
aad
push
sahf
andb
fidivl
out
stos
fmuls
push
mov
xchg
adc
jns
mov
sub
aaa
pop
adc
jo
dec
pop
pusha
aas
cmpsb
push
inc
push
gs
adc
into
and
push
jb
pushf
xchg
sbb
orl
and
leave
pop
pushl
cld
sbb
sbb
or
call
out
out
jae
mov
mov
cmpsb
mov
ret
lods
dec
xor
push
rorl
sbb
mov
mov
mov
jecxz
es
pushf
or
adc
jnp
push
je
add
loopne
mov
jle
xlat
mov
pop
jmp
mov
xor
repz
xor
dec
push
decl
push
jne
cmc
xor
arpl
inc
and
aam
mov
push
mov
inc
popf
xor
inc
icebp
clc
dec
dec
push
xchg
sbbl
xchg
mov
loop
pop
in
lret
mov
push
xchg
adc
jne
xchg
shlb
sub
shlb
dec
jnp
lods
frstor
pop
rorl
out
push
jbe
ljmp
xchg
ss
mov
pusha
dec
add
leave
clc
lcall
jne
cwtl
inc
cmp
mov
push
push
mov
mov
stos
xchg
pop
jbe
aad
fcoms
call
pop
push
sahf
call
sti
pop
jmp
dec
ljmp
cmp
pusha
add
aam
fst
in
jo
mov
sub
in
pop
incl
daa
fbstp
pusha
push
pop
xchg
out
sub
and
pusha
or
mov
and
jp
pop
jle
add
or
push
jge
loopne
jp
ljmp
mov
mov
insl
push
bnd
fsts
ds
push
xor
jo
lock
in
fdivs
add
rol
int3
shl
mov
adc
and
das
mov
or
push
in
and
les
das
mov
pop
mov
pop
test
je
loopne
jecxz
fnstcw
inc
jmp
aam
lods
dec
pop
stos
scas
mov
cmovle
jb
test
popa
stos
icebp
into
ficoml
push
cmp
js
dec
and
jg
add
jno
or
adc
pop
scas
push
leave
push
sub
fs
daa
pusha
mov
popa
rcll
pop
xchg
push
rcll
ret
sti
mov
popa
push
jecxz
cmp
and
fisubl
xlat
mov
jo
cwtl
push
add
pushf
jnp
and
and
and
out
aaa
dec
xchg
push
popl
clc
adcl
and
out
popf
mov
mov
addr16
sub
or
xchg
jne
inc
push
lock
lret
enter
movsb
mov
dec
cmpl
div
cmp
test
jnp
xchg
sub
inc
push
and
mov
sbb
scas
dec
pop
imul
bound
pushf
mov
lahf
shlb
lds
or
ja
and
rcrb
loop
loop
inc
shll
test
and
sbb
jo
or
fs
inc
dec
sbb
stos
fsubp
push
push
insl
and
mov
lahf
ss
movsl
jo
pop
pop
js
jmp
mov
out
fbld
js
adc
popa
fmull
add
jge
xor
or
sahf
les
mov
outsl
jge
outsl
xor
cmp
scas
into
repnz
pop
mov
xchg
dec
mov
adc
inc
xor
pop
mov
aaa
pop
cltd
sbb
sbb
mov
out
xchg
inc
bound
dec
das
int
cmpsl
inc
and
mov
movsb
mov
subl
shll
lods
pop
in
mov
std
or
aam
test
popa
cli
hlt
popf
push
push
mov
mov
and
imul
mov
xchg
in
arpl
inc
cmp
cltd
xchg
mov
add
jmp
lcall
adc
add
aaa
pop
outsb
mov
or
jg
pop
daa
dec
movsb
jge
xor
rorl
int
imul
imul
cmp
mov
lahf
popf
cmpsb
ficoml
push
cld
add
in
testl
inc
xchg
scas
jne
xor
cltd
cld
pop
xor
sbb
bound
bnd
cmc
jno
iret
aaa
aad
mov
sub
fidivs
leave
add
push
jnp
les
fidivs
xchg
jge
mov
or
pop
out
mov
xlat
push
aam
out
cmc
loopne
cmp
pop
aaa
mov
jno
movsb
sbb
scas
mov
jns
pop
xor
push
int
imul
sbbb
adc
and
lcall
roll
sarl
xchg
mov
sti
inc
cmp
cltd
testl
dec
sub
cmpsb
add
and
jge
push
pop
push
add
inc
adc
cmovg
push
xor
jae
mov
mov
and
aam
or
xor
add
xor
lret
sub
mul
fisttpll
inc
and
xchg
push
ds
arpl
jnp
lahf
push
insl
push
mov
jmp
clc
test
mov
xor
int3
mov
in
jge
and
jle
lods
add
pop
sub
xchg
mov
cli
sahf
rcll
jg
dec
jl
push
jns
or
rcr
repz
pop
movsb
mov
repz
out
imul
stos
fwait
jne
and
dec
pop
xchg
lcall
dec
rclb
popa
push
or
mov
fimull
in
dec
push
filds
push
repz
lcall
and
push
dec
test
and
lds
clc
jne
xchg
cs
gs
aas
push
sbb
xchg
push
adc
and
negl
sub
jmp
add
or
lods
mov
andb
sub
and
out
push
hlt
mov
nop
push
in
dec
fs
ljmp
mov
add
loopne
xchg
punpckhdq
push
mov
mov
aam
inc
es
insl
cs
scas
cmp
cmp
pop
adc
popa
call
cmc
fsubrs
cmc
icebp
mov
outsl
dec
out
mov
pop
jmp
je
mov
mov
pop
int3
in
out
inc
outsb
inc
sarb
adc
mov
stc
popa
and
push
xorl
sub
lcall
jecxz
xorl
push
movsb
shlb
out
add
add
adc
lahf
xlat
and
inc
movsl
jge
sti
mov
mov
adc
out
sub
xor
fwait
mov
test
cmp
inc
mov
out
mov
add
sub
dec
adcb
popf
pop
pop
imul
add
std
mov
pop
jo
arpl
adc
push
out
lret
mov
xor
leave
jge
adc
jmp
stos
stos
ret
xchg
std
jno
cwtl
sub
pusha
popf
ljmp
jl
xchg
or
outsl
push
fmul
mov
scas
mov
leave
movsl
insl
push
ret
pop
lock
inc
rep
leave
fs
fwait
aas
mov
stos
pop
xchg
sbb
xor
stos
mov
jle
push
popa
xor
fisttpl
nop
pop
adc
js
mov
into
enter
mov
xchg
mov
push
sub
fadds
fsubrs
je
jo
mov
and
sub
sbb
outsb
addr16
repnz
cmp
out
lods
shlb
fimull
scas
xchg
xchg
and
lcall
scas
sbb
mov
ljmp
jp
sub
and
das
mov
push
out
out
xchg
cmp
stc
sbb
mov
push
out
je
gs
cmp
outsl
pop
in
push
fmull
fisubs
roll
lea
repz
cmp
ss
pop
js
dec
inc
shl
in
mov
test
push
ficoml
push
inc
movsb
and
jle
cmp
mov
clc
mov
sub
push
call
mov
xor
xlat
add
inc
xchg
adc
xor
imul
jecxz
mov
mov
sub
sbb
cmpsl
out
lret
add
add
mov
hlt
cmp
fiadds
sub
popa
push
xor
mov
xchg
sub
icebp
mov
jne
mov
lret
lret
sub
sbb
jl
mov
idivb
insl
pop
clc
jl
pop
test
jmp
rcrl
xchg
push
das
jae
add
mov
stos
loope
add
lret
or
ror
outsb
jnp
shrl
out
jae
aaa
std
andb
xchg
lahf
jp
inc
outsl
or
inc
push
mov
inc
pop
dec
lods
maskmovq
push
inc
movsl
sub
jle
sbb
mov
out
fs
push
int3
cmp
push
mov
mov
ljmp
xchg
lcall
insw
mov
pop
cmpsb
dec
pop
and
push
out
push
adc
or
pop
cmp
imul
icebp
repz
mov
cs
jo
sahf
in
fwait
int3
mov
ja
push
xor
mov
push
lcall
iret
daa
stos
in
mov
lret
lods
cmp
jne
inc
mov
mov
clc
insb
add
movsb
mov
icebp
push
iret
pop
loopne
dec
shl
xchg
nopl
pop
mov
or
pop
lods
sahf
popa
fldt
xor
mov
dec
stos
pushf
cli
lea
mov
aas
mov
pushf
pmullw
push
iret
in
pop
jb
cmpsl
jo
mov
mov
daa
inc
add
jg,pt
hlt
aam
call
hlt
mov
adc
es
add
in
es
sti
xchg
dec
scas
lea
das
xor
push
data16
pop
xchg
je
jnp
mulb
pop
lret
adc
mov
pop
test
rcll
xchg
aaa
xchg
pop
inc
das
mov
push
ja
fcoms
into
cmc
cmp
and
adc
rcrl
xchg
les
mov
int
add
out
test
push
outsl
mov
push
push
mov
xchg
cmc
jmp
lods
mov
les
add
imul
push
mov
mov
jnp
fistl
lret
ror
mov
dec
push
dec
stos
int3
add
and
and
fcoms
movsl
shlb
sub
sub
stos
lds
pop
cwtl
stos
test
mov
mov
mov
push
sbb
mov
jp
into
mov
mov
jl
cmc
into
sbb
and
rorb
xchg
xor
ror
and
jno
insl
push
mov
lcall
les
pop
repz
and
dec
mov
jmp
cmp
dec
pusha
sarb
mov
mov
sub
arpl
inc
or
inc
in
mov
lret
shrl
xor
or
mov
adc
mov
mov
xorl
push
les
iret
scas
fldt
mov
xor
shll
call
scas
and
leave
xchg
enter
lock
aas
push
in
or
les
outsl
dec
add
out
mov
push
jns
test
into
push
rcrb
or
jae
repnz
xchg
inc
arpl
push
cmpb
mov
insl
cwtl
aaa
adcl
mov
add
pop
xchg
ret
test
mov
push
push
in
sub
inc
xor
inc
mov
fsubs
mov
cmp
and
inc
mov
lret
inc
aaa
ror
sbb
out
test
jecxz
cmp
icebp
jns
nop
mov
outsb
pop
decb
out
pushf
push
push
sbb
xor
xchg
jbe
js
dec
xchg
jne
push
inc
sbb
sbb
into
mul
inc
mov
add
xor
adc
imul
lods
in
cs
jnp
adc
xchg
jecxz
pushf
xor
pop
insl
lods
sbb
push
orl
pushf
pop
icebp
mov
aam
inc
fidivrl
movsl
out
lret
xchg
add
add
arpl
dec
sub
and
sub
arpl
lret
jno
mov
jo
push
cwtl
fwait
hlt
push
mov
repz
mov
inc
js
xor
jmp
sbb
xchg
jns
loopne
lret
sbb
mov
in
cs
aam
jo
daa
repnz
mov
xor
mov
xchg
call
std
xchg
call
test
icebp
out
mov
pushf
pushf
cli
cmp
adc
repz
jg
mov
jge
ds
scas
inc
pop
pushf
js
stos
in
jb
inc
ja
lret
or
jo
orb
or
pop
cmp
gs
jge
lds
xchg
std
push
in
stos
mov
sahf
iret
push
loopne
push
movsl
pop
loope
xchg
scas
jae
push
cmc
sbb
sbb
push
test
pop
inc
pop
jb
ret
jnp
ss
js
push
sub
sub
inc
lcall
xchg
scas
pop
mov
push
sub
jnp
push
xchg
addr16
mov
mov
loop
aad
sub
adc
mov
dec
adc
aad
sub
xchg
shrb
pop
jp,pt
pop
leave
repnz
sbb
add
jecxz
in
ljmp
jb
out
push
lcall
repnz
arpl
xchg
fwait
shr
or
sub
jg
lock
mov
push
test
xchg
in
lods
insl
jecxz
inc
pop
mov
hlt
stos
xor
jecxz
xchg
insl
pop
enter
jmp
cmp
nop
and
xchg
push
push
or
dec
and
jo
fldcw
nop
test
fidivrl
adc
xor
mov
int
or
add
mov
test
and
inc
jmp
popa
aad
shlb
adc
popl
xor
lods
sub
nop
test
jge
out
jbe
repz
sar
pop
int
jne
shrb
imul
mov
jl
hlt
aas
push
ud0
xor
pop
inc
mov
push
lods
out
jb
inc
fcom
inc
add
stos
sarb
inc
out
movsb
outsl
es
push
and
data16
adc
jo
sub
push
xor
movb
sbb
cli
or
inc
sub
test
add
mov
push
roll
jne,pn
dec
aad
insl
aas
dec
pop
in
stos
push
subl
je
orb
add
sahf
out
push
dec
xor
mov
sub
mov
xlat
insb
cmp
out
dec
std
mov
fsubs
icebp
pop
orb
dec
in
aas
inc
hlt
mov
popf
daa
pop
mov
jle
test
xchg
lds
or
aad
and
inc
ret
popf
and
shl
jge
dec
call
inc
mov
cmc
hlt
mov
jo
sahf
popf
pushf
push
jmp
pop
push
cmp
cli
jp
mov
cmp
pushf
jp
push
adc
aad
pop
test
mov
jle
push
lods
xor
sahf
das
addb
cmc
sub
bnd
dec
int3
fldl
lock
inc
gs
push
test
inc
mov
cmp
lods
xchg
inc
in
xor
sbb
test
jl
mov
cmpsl
andb
jnp
lret
jecxz
push
adc
in
repnz
xchg
in
jbe
lods
mov
leave
pushf
lock
imul
add
or
adc
push
les
pop
cltd
jp
test
in
push
shlb
xchg
sbb
lcall
fld
sbbl
sarb
int
jo
daa
in
mov
sbb
ret
sub
mov
inc
shl
shll
nop
repnz
mov
les
cltd
idivl
mov
in
fbstp
sahf
rcrl
test
into
mov
sub
aad
xchg
xchg
stos
js
mov
mov
cmpsb
sub
add
js
in
add
push
and
xchg
sub
popa
addr16
pop
andl
adc
xchg
lcall
popf
xchg
mov
dec
push
pop
arpl
movsb
icebp
pop
mov
mov
jno
push
sub
xor
xlat
pusha
loop
jge
int3
nop
xchg
lods
mov
mov
cld
pop
dec
repz
stos
cmpb
outsl
scas
into
cli
subb
cmpsb
pop
dec
movsb
mov
xlat
xchg
xor
jns
jo
pop
iret
rolb
jbe
fsubr
outsw
fbld
aas
sbb
lods
into
fmull
aaa
lock
dec
push
lods
or
in
mov
test
mov
out
sti
mov
sub
sbb
inc
mov
mov
xchg
dec
cli
sub
popf
aas
scas
and
shll
test
fucomi
xor
cmpsl
xor
les
test
jp
push
mov
sbb
push
push
imul
inc
sub
add
mov
icebp
mov
xchg
leave
push
fwait
out
call
out
pop
or
out
out
push
icebp
cwtl
mov
push
pop
sub
xadd
xor
lds
stos
push
nop
and
sbb
mov
inc
popf
add
les
es
hlt
shll
inc
push
loope
aad
mov
push
add
shrl
lds
xchg
sahf
fdiv
mov
pop
mov
pop
loopne
sub
dec
add
mov
jg
mov
dec
push
dec
sub
hlt
mov
cmp
lods
push
test
adc
cmpsl
hlt
xchg
jmp
dec
testb
sub
jbe
in
sub
inc
pop
add
aaa
cmp
push
dec
std
in
sub
dec
mov
pop
ljmp
inc
adc
repz
pop
pcmpgtb
pusha
xor
rorl
and
pop
xchg
das
dec
cli
push
adc
cmp
sbb
push
test
call
repnz
ljmp
mov
push
mov
insb
or
jb
in
mov
cmp
or
jae
jl
aas
or
aas
fimull
sti
jecxz
lcall
xchg
les
mov
inc
sub
cltd
es
xor
xor
shlb
hlt
xchg
in
sub
fiadds
mov
ljmp
int3
mov
adc
repnz
cmpsb
push
fistl
clc
mov
andl
xor
and
and
imull
jmp
jns
sbb
call
jnp
mov
sti
push
sahf
lret
sub
movsb
out
repnz
stc
in
jge
mov
int
insl
xor
push
mov
and
test
inc
iret
ja
cmpsb
aaa
fadds
shrl
fsubrs
xor
pop
jne
pop
int3
mov
xchg
and
pop
jae
dec
xor
cli
mov
into
pop
iret
ret
jg
dec
test
test
jnp
pop
lds
cmp
in
lret
lods
xchg
mov
pushf
cmpsb
push
mov
adc
xchg
xchg
daa
insb
xchg
imul
fistpll
push
dec
add
ret
mov
orb
test
fstpt
out
dec
call
mov
outsb
les
sti
adc
cmc
jmp
fstps
je
push
xor
push
cmp
in
lahf
loopne
mov
or
daa
or
imul
push
cmp
pusha
cmpsb
sbb
imul
adc
sti
push
cmp
jecxz
xor
jg
leave
fs
rcr
pop
das
fwait
mov
lcall
jecxz
xchg
push
xorl
fisubs
mov
scas
movsb
es
mov
xchg
add
es
fdivrs
jns
ret
and
and
imul
roll
fdivl
jl
dec
daa
or
fs
and
mov
push
pop
adc
lcall
xor
sbb
popf
sub
and
xor
repnz
ja
insl
divb
mov
into
movsl
push
stos
or
scas
push
arpl
mov
shll
mov
cmp
fs
jmp
adc
inc
inc
scas
jmp
outsb
out
sahf
aad
pop
fsubs
hlt
add
push
sahf
xchg
js
dec
dec
adc
mov
mov
sbb
dec
popf
test
mov
pop
mov
sahf
dec
out
mov
out
call
mov
sbb
imul
mov
in
mov
xor
cmpsl
jecxz
sub
xchg
test
add
je
addr16
mov
push
cs
pop
dec
push
rcll
bound
addr16
cli
adc
test
sbb
pop
sbb
std
fcomp
lea
scas
sub
xchg
push
lret
rorb
xor
out
sub
bound
cmc
test
sbb
mov
xor
andl
das
push
ret
xchg
sbb
mov
sarl
mov
sahf
lret
adc
push
pusha
jo
sbb
shll
ret
out
popl
xchg
loope
jne
andb
xor
movsb
cmp
xchg
cmp
mov
iret
or
insb
mov
bound
mov
pop
rcrl
push
dec
xchg
aas
enter
ja
xor
std
xchg
test
out
jmp
inc
mov
call
lods
mov
jge
sub
rclb
dec
shlb
jmp
sub
adc
dec
cld
mov
and
call
adc
aas
push
das
mov
lret
popf
cltd
pushf
mov
dec
push
inc
pusha
mov
cld
fldt
push
and
sahf
sub
call
or
movsb
call
stc
rcrl
push
push
cmp
jmp
les
inc
mov
fwait
jns
cli
cmpsl
inc
pop
jle
xor
push
and
dec
lods
xor
hlt
xlat
rcr
xchg
rolb
push
xor
dec
fs
mov
iret
adc
dec
fisubrs
push
pop
mov
cmpsl
add
push
insl
mov
cmpsb
test
clc
dec
adc
xchg
lea
sbbl
pop
mov
xchg
and
test
and
jg
in
or
daa
das
insb
dec
mov
stc
and
lahf
and
mov
xchg
insb
jbe
push
popa
push
fstpl
lret
test
sub
dec
pusha
js
and
or
sbb
imul
cltd
cmp
int
push
dec
icebp
es
xor
pop
test
or
jmp
and
lea
out
es
xchg
sub
adc
loopne
jmp
outsb
and
sub
mov
jp
pop
ja
sbb
or
mov
sbb
mov
or
or
test
test
shlb
addr16
frstor
mov
fisttps
push
lcall
nop
mov
mov
out
pop
test
adc
dec
jnp
dec
cmp
inc
pop
pop
arpl
hlt
xor
jge
ljmp
aaa
bound
inc
lea
mov
push
pop
inc
arpl
pusha
pop
movsb
aas
jae
es
adcb
in
mov
jo
sbb
inc
pop
popa
arpl
hlt
mov
pop
push
stos
inc
jle
movsb
push
xor
sub
mov
pop
jo
test
push
loop
call
push
aas
fimull
mov
addl
inc
xchg
push
jge
es
adc
jo
cmp
rcll
aaa
and
jae
test
mov
xor
or
int3
lods
cld
push
push
and
inc
sub
movb
lock
loope
jmp
mov
outsb
inc
ljmp
lret
movl
jbe
mov
adc
lock
lods
mov
repz
cmp
pop
pop
jg
notl
jo
mov
ja
or
aad
jo
sub
cmp
subl
xchg
cmp
mov
sbb
xchg
and
jg
pop
jno
add
call
jp
cmp
ja
push
es
lret
sub
loop
xchg
adc
xor
in
insb
or
mov
pop
xchg
jmp
xchg
and
ret
sub
aas
push
or
xorb
loopne
lods
clc
jle
jl
mov
outsl
xor
jecxz
and
and
pop
sti
jne
jns
inc
dec
imull
push
stc
jnp
xchg
adc
push
xchg
xor
mov
sub
sub
flds
test
mov
adc
or
inc
mov
in
add
leave
mov
cltd
adc
loope
mov
mov
call
std
outsb
pause
clc
adc
pushf
sub
mov
push
mov
adc
mov
jl
jbe
pop
push
mov
jne
fs
xchg
mov
ret
inc
jp
jnp
pop
xchg
sti
insl
mov
or
jecxz
dec
scas
inc
outsl
loop
mov
jo
movsl
cli
jle
in
and
and
push
cld
ret
push
jecxz
out
int3
ja
inc
je
push
xchg
call
and
add
nop
mov
out
scas
shl
or
push
jmp
mov
pop
shll
push
out
insb
xor
adc
pushf
std
push
aaa
mov
rol
mov
adc
sub
inc
dec
fidivrl
test
repz
imul
shl
out
jmp
jo
ja
aam
adc
xlat
jbe
mov
stc
enter
scas
jp
or
ficoms
gs
scas
pop
adc
cmp
dec
push
outsb
cs
scas
xor
push
jp
insb
pop
add
rol
in
xor
rclb
push
xchg
je
fildll
lock
notb
mov
cs
fs
mov
mov
movsl
ss
movsb
ficompl
pop
lods
test
fdivr
mov
mov
xchg
outsb
movb
and
leave
call
mov
mov
popa
jno
or
mov
mov
mov
cmp
push
aaa
pop
inc
and
and
pop
dec
sbbb
sub
push
adc
loopne
mov
cwtl
xchg
xchg
fistps
pop
and
gs
xchg
cltd
cmpsb
xchg
pop
pop
fldl
xchg
lret
mov
adc
roll
mov
loope
add
sbb
sub
in
dec
stos
pop
decl
jns
in
add
popf
lahf
pop
cli
notb
icebp
out
xor
in
sbb
pop
repnz
mov
subl
in
sbb
or
push
repnz
adc
jp
stc
add
fstps
sbb
hlt
movsl
shlb
fnsave
and
mov
call
test
mov
pop
and
loopne
rcr
xchg
call
pop
mov
ja
stc
xchg
sub
std
inc
xchg
cmp
scas
sbb
idivl
es
dec
inc
sbb
xor
lea
mov
cld
rcl
inc
pop
jmp
sbb
dec
push
xor
test
inc
cwtl
mov
pop
or
xor
lahf
lret
loopne
arpl
and
insb
mov
lret
xchg
std
xor
into
pop
test
int3
inc
push
fnstcw
cmpsl
sarl
imul
ret
scas
mov
push
inc
mov
dec
add
mov
xchg
mov
cmp
push
imul
enter
cmpsl
xchg
scas
jle
lods
mov
adc
sbb
xchg
push
shl
call
xor
xor
pop
lods
dec
mov
xchg
inc
adcl
fildl
out
icebp
pop
stos
pop
fwait
mov
push
sbb
cld
addb
or
in
or
cmp
lret
ds
jno
or
inc
xor
out
bound
mov
jmp
cmp
xchg
push
sub
adc
xchg
dec
and
leave
mov
fsubrs
insl
leave
mov
dec
add
pop
in
lods
mov
add
adc
add
mov
iret
add
inc
mov
mov
movsb
lcall
mov
inc
and
sbb
es
jg
stos
insl
cmp
test
push
nop
mov
out
cmp
mov
loope
andb
into
push
shlb
scas
add
insl
test
push
repnz
dec
add
out
adc
leave
mov
dec
and
pusha
popf
insl
subl
push
cs
mov
popf
out
jmp
push
pop
cs
pop
test
dec
lock
sbb
ss
sbb
aad
lahf
ret
or
aam
cmp
mov
dec
mov
sbb
stos
mov
call
push
xchg
sub
pushf
out
push
mov
movsb
inc
pusha
lret
pop
punpckldq
mov
mov
incb
sub
cmp
cld
dec
lds
sub
mov
mov
sbb
sbb
hlt
mov
scas
aaa
popa
xchg
inc
and
xor
pop
and
clc
mov
test
sub
lods
push
add
dec
cld
jb
sbb
and
repnz
iret
aad
out
jmp
xchg
xchg
or
fdivr
pop
sub
adc
cltd
outsl
pop
dec
ret
sub
fimuls
mov
movsl
aaa
xchg
add
leave
mov
mov
pop
adc
or
mov
cmc
mov
jbe
mov
sub
repz
mov
adc
jb
inc
scas
push
cli
out
xchg
pop
jp
loopne
call
push
lcall
push
insb
or
dec
or
mov
js
and
loope
mov
popa
jnp
dec
sbb
in
movsb
popf
mov
xlat
push
add
push
lods
add
sbb
sbb
add
cld
or
xchg
adc
xchg
sbb
sbb
mov
lock
rorl
popa
jmp
cs
mov
cmp
sbb
dec
jne
or
insb
cmp
cmp
in
inc
pop
pop
lahf
xchg
jmp
adc
and
or
shl
jge
push
jle
lcall
lods
sbb
mov
jecxz
push
fimuls
shll
or
add
dec
dec
out
fwait
jl
sbbb
xor
mov
lret
sbb
call
cmp
cmp
cltd
mov
bound
ret
mov
push
sbb
out
es
in
cmp
stos
fstps
jns
aam
fnstcw
out
cmp
and
mov
popa
add
cmp
cmp
insl
call
mov
pop
xchg
inc
cmp
dec
adc
in
sahf
fidivs
outsl
jecxz
or
inc
or
push
xchg
scas
inc
outsb
call
jge
sub
fldenv
lods
push
cmpsb
cmp
nop
outsb
ror
cs
in
xlat
xor
sti
pusha
jae
in
and
add
inc
ficompl
ljmp
lahf
in
pop
mov
jb
cmp
and
jno
pusha
and
add
and
les
mov
pop
ror
cmpsb
cmp
je
shlb
dec
push
adc
xor
or
jp
jp
mov
frstor
incl
jns
jb
loopne
jecxz
ja
xchg
jbe
or
popa
xchg
sbb
mov
lock
push
rorb
mov
fcoms
jge
mov
scas
xlat
mov
test
mov
cwtl
lods
imul
pop
gs
jge
pop
push
ror
jns
push
fadd
lods
jge
dec
fcomps
iret
jo
jle
mov
loopne
sti
adc
fcoms
testl
movsl
fistps
inc
std
mov
das
xlat
add
out
and
out
mov
bound
ss
xchg
into
push
outsb
shll
push
dec
je
or
shl
test
jo
mov
vmaxpd
inc
jmp
pop
jae
sub
pop
mov
or
das
jnp
add
in
mulb
xchg
mov
jns
sub
push
into
mov
fs
ficoms
lea
cmc
mov
js
add
popa
fsts
addr16
push
cli
xchg
in
pushf
sbbl
cmp
inc
std
std
mov
xchg
gs
ret
adc
mov
push
cli
out
fs
cmp
push
mov
arpl
dec
outsl
addr16
outsl
out
arpl
mov
or
inc
int3
ret
rorb
in
mov
pushf
push
mov
add
sub
repnz
mov
dec
sub
fimuls
fs
xor
and
mov
mov
push
or
out
xchg
sbb
mov
push
jl
ffreep
icebp
push
mov
sbb
cmpsb
push
xchg
shrl
aam
ja
mov
outsb
ret
sbb
fadd
into
iret
inc
mov
cmp
lret
jmp
mov
add
jno
mov
cmpsb
sbb
sbb
xor
mov
repnz
aas
and
pushw
dec
test
sub
jbe
or
popa
fisttpl
in
in
outsb
cmp
stos
xchg
mov
pop
pop
in
pop
popa
cmp
mov
mov
xchg
cmpsl
dec
fcmovu
sub
jne
clc
jns
mov
hlt
es
scas
add
leave
sti
sub
xchg
and
ljmp
cmpsb
sub
sbb
enter
out
into
sub
jg
aaa
dec
dec
xor
sar
mov
jecxz
mov
lds
mov
in
xchg
dec
push
out
loopne
push
negl
adc
loope
or
mov
inc
lret
push
mov
mov
cmpsl
mov
sub
jae
xchg
mov
in
daa
or
pop
fiadds
call
test
xlat
and
push
stos
decl
and
out
jle
clc
ret
inc
push
jne
inc
inc
push
test
in
stc
jge
mov
out
imul
xchg
cmp
xor
mov
adc
xor
push
jns
pop
aas
lahf
repz
out
scas
xor
xor
mov
push
lahf
jmp
adc
test
ds
int
cmc
stc
pushf
mov
push
inc
stos
sti
cmp
aaa
roll
mov
or
arpl
sub
gs
add
push
inc
test
cmp
rclb
cmp
adc
sbb
imul
push
jmp
in
jno
ljmp
js
fs
inc
ret
hlt
loopne
aad
push
mov
cli
push
and
subb
out
ret
rep
aam
pop
mov
mov
adc
test
orl
cld
data16
lahf
pop
data16
fldenv
pop
and
dec
lods
pop
sbb
ss
jmp
adc
faddl
push
push
andb
lcall
outsb
ljmp
test
test
mov
aad
jae
lds
rorl
lods
add
cli
adc
test
jbe
sub
movsb
push
arpl
lods
popa
cmc
sbb
push
loop
aaa
mov
push
mov
pusha
imul
jae
mov
clc
xorl
aaa
mov
mov
dec
fcmovu
les
jns
popa
adc
cmp
into
jae
das
mov
mov
lcall
dec
xchg
imul
imul
mov
push
sub
mov
push
rcr
mov
jecxz
rorl
cltd
pop
mov
jnp
imul
sti
gs
inc
pop
cmpl
les
cld
jne
mov
inc
or
imul
mov
xor
scas
cmc
dec
xor
mov
jne
repz
pop
movsb
sahf
int
inc
mov
jns
fistl
outsl
mov
lods
shrl
adc
mov
je
inc
daa
mov
sahf
jb
adc
jecxz
mov
test
cmc
out
inc
or
mov
out
in
neg
scas
jp
adc
stos
push
inc
and
frstor
sub
sub
adc
add
bnd
inc
leave
int3
call
add
scas
push
mov
fwait
mov
bound
out
pop
and
mov
sub
loope
lods
call
cltd
out
sub
dec
dec
xor
imul
lods
lods
inc
xchg
lret
xchg
jo
lods
js
push
bound
adc
pop
rorl
aam
and
adc
xor
pcmpeqb
cltd
sub
xor
ja
rol
jmp
push
mov
ja
por
pop
repz
xor
sbb
sarb
lods
jae
and
xchg
push
push
ds
lcall
push
rcrb
pop
and
adc
xchg
aam
je
and
cmp
pushf
and
leave
ds
iret
and
add
aam
adc
jns
hlt
cmpsl
dec
adc
mulb
pop
mov
lock
mov
repz
cmp
mov
int3
movb
and
aam
lock
pop
lcall
mov
test
cld
push
xchg
or
pop
jae
mov
int
push
dec
cmpsb
repz
adc
mov
push
xchg
inc
inc
mov
mov
jo
je
mov
mov
bound
popf
notb
xor
js
mov
pop
push
scas
pop
cmp
test
test
xchg
mov
outsl
adc
pop
in
jno
mov
mov
aad
inc
inc
leave
cld
sub
pop
je
push
xor
outsb
add
shll
or
push
test
scas
cmp
addb
call
fstl
cmp
cmp
jno
push
push
int
test
std
ret
mov
sub
xorl
lods
sbb
out
pop
push
pop
pushf
mov
xor
sub
and
lock
inc
loope
add
das
jg
jae
inc
clc
xchg
movsl
and
stos
leave
and
push
scas
sub
jle
addr16
test
pop
cmc
clc
add
inc
fld
xor
push
out
push
mov
xchg
mov
xlat
mov
fldt
jmp
mov
push
mov
fdivp
cld
jge
pop
lret
stc
push
aam
lcall
imul
mov
or
mov
addr16
mov
mov
xchg
mov
cld
add
clc
insb
out
xchg
sbb
ja
xlat
pushf
movsb
xchg
or
mov
add
sarb
mov
jle
mov
jmp
sbb
test
jle
lcall
ljmp
mov
add
add
lcall
mov
sbb
jne
pushf
xor
push
inc
jge
mov
xor
frstor
das
push
mov
popf
dec
or
enter
inc
cmpsl
jg
retw
pop
lcall
inc
or
and
pop
mov
push
gs
fisttpl
xor
cwtl
jl
mov
mov
sbb
inc
jns
mov
jl
mov
test
inc
mov
mov
leave
xchg
and
push
mov
pop
jbe,pn
fldl
pop
lds
or
addr16
loope
mov
push
mov
add
adc
addr16
jns
mov
push
mov
adc
ss
xlat
lahf
repnz
in
jp
hlt
pop
lahf
inc
jg
mov
inc
shl
ds
pop
ljmp
in
popa
scas
pop
inc
jnp
popa
cwtl
pop
xchg
mov
out
aas
pop
xor
dec
pop
or
mov
mov
dec
xor
pusha
push
push
push
inc
and
rcrl
popa
sbb
ror
jnp
in
mov
push
sub
aaa
mov
sahf
jb
mov
xchg
pop
fwait
lea
arpl
cmp
insb
jbe
adc
test
scas
pop
loopne
les
out
vpaddq
sub
mov
shr
sbb
out
iret
pop
inc
popa
mov
adc
pop
mov
stos
add
les
pop
sub
inc
cmc
pop
push
add
mov
sahf
andl
jmp
xor
popf
ret
and
loop
pop
cwtl
sub
adc
pop
iret
mov
inc
std
sbb
sbb
insl
movsl
out
push
adc
pop
cmc
mov
ret
add
out
dec
arpl
pop
mov
inc
sub
stos
mov
add
les
lods
mov
sub
sbb
shlb
mov
and
xor
dec
sbb
repnz
cs
inc
jmp
shrl
and
mov
pop
sub
sub
and
aas
sbb
mov
adc
jmp
adc
test
add
mov
out
jne
sub
call
stc
int
jne
std
jno
icebp
mov
push
inc
sub
xchg
stc
push
push
add
push
pop
loope
jno
sub
jns
mov
jp
and
cmpl
dec
movl
push
dec
popf
xchg
addr16
jmp
lahf
push
out
add
sbb
cli
fsubrs
mov
mov
lods
inc
test
imul
jns
and
cmp
cmp
jp
insb
sbb
js
push
push
sub
es
mov
add
mov
mov
mov
out
push
outsl
jecxz
adc
in
andb
push
jg
test
mov
cs
and
and
jecxz
lock
pusha
into
inc
sub
ja
aad
enter
lahf
stos
inc
xchg
mov
xchg
jb
jno
sub
ljmp
movsl
inc
mov
loopne
push
call
inc
mov
mov
popf
sub
fs
lea
xchg
orb
mov
xor
mov
inc
js
imul
es
call
fmulp
sbbb
flds
dec
incl
mov
jp
pop
in
pop
add
add
test
dec
mov
mov
sbb
mov
jo
mov
subb
xor
jo
pop
inc
push
xchg
je
pop
pop
scas
imul
and
imul
add
cmp
pop
sarl
imul
insb
and
ds
shrl
insl
stos
jb
mov
mov
out
js
sti
roll
icebp
jne
sub
scas
lret
fucomip
ljmp
cmp
lock
pop
fmull
and
mov
adc
cmpsl
sub
rcrb
xor
popa
mov
insb
jl
pop
push
add
mov
dec
icebp
inc
mov
out
xchg
sub
jmp
cmp
mov
xchg
mov
addl
ljmp
lods
mov
mov
addl
xchg
pusha
lods
inc
std
scas
fwait
xchg
xchg
and
aad
outsl
movsb
int
pushl
out
ret
movsb
pop
pusha
cld
call
icebp
mov
push
rep
push
pop
and
cltd
mov
subl
daa
or
pop
mov
xchg
fbld
xlat
add
out
nop
cmp
stos
fs
enter
fwait
or
dec
dec
mov
mov
ficompl
and
sbb
hlt
arpl
arpl
aas
sti
stos
push
int3
icebp
lret
push
mov
mov
aaa
push
ljmp
pop
in
pop
pop
and
sbbb
in
testb
rcrb
nopl
es
mov
movsl
push
pusha
cmp
cs
outsb
push
ds
test
pop
sub
mov
ja
or
or
jl
cli
push
gs
mov
jns
jo
or
sbb
xor
mov
and
dec
inc
dec
out
fnstenv
sbb
cmc
jge
cltd
popa
pop
je
fcmovbe
add
popa
xchg
test
shll
xor
xlat
cmp
cltd
es
adc
push
sbbb
je
aas
movsl
or
inc
inc
jbe
dec
fisubrs
daa
sti
dec
shrb
dec
shll
push
icebp
mov
sbb
dec
test
jp
cwtl
lret
xchg
and
xor
int3
xlat
inc
icebp
mov
mov
jge
lods
pop
inc
pop
scas
lret
push
mov
mov
sbb
xchg
jmp
cmp
mov
lret
insb
in
mov
scas
jmp
movsb
ds
xchg
insb
mov
xchg
mov
divb
mov
les
inc
xor
mov
add
scas
mov
jmp
mov
cwtl
xchg
dec
sub
cmp
popl
cld
lock
mov
cwtl
dec
jecxz
mov
xor
push
scas
out
stos
stos
push
aam
inc
xchg
fimuls
pop
not
int3
shlb
mov
inc
hlt
lods
push
daa
xchg
cli
mov
hlt
push
xor
lret
add
cmc
inc
pop
out
mov
dec
std
or
lods
scas
inc
inc
jae
and
in
out
dec
pop
scas
mov
lods
ljmp
mov
subl
cs
cld
imul
nop
dec
dec
lcall
aaa
call
jb
movsb
mov
pusha
fisubrs
fstpl
pop
jg
mov
popa
mov
mov
and
xchg
pop
mov
sbb
mov
and
inc
mov
out
test
jp
cwtl
test
push
or
jne
js
xchg
filds
cmp
cmp
and
hlt
mov
test
pushl
ljmp
pop
enter
movsb
adc
xchg
jge
pusha
push
test
imul
mov
dec
adcl
adc
in
jl
add
daa
imul
and
jns
ja
call
iret
insl
icebp
roll
outsb
subl
push
mov
test
das
std
dec
arpl
int3
jne
jecxz
test
inc
mov
ss
sbb
ds
stos
adc
sbb
push
pop
int
cmpsl
push
ds
mov
in
adcl
mov
outsb
jns
imul
sbb
pop
fucomip
sarl
ficomps
mov
rolb
xlat
hlt
adc
mov
add
push
movsl
fsubs
sbb
or
mov
sbb
or
ffree
inc
sub
mov
and
stos
sti
lcall
scas
xchg
ljmp
ss
negb
xchg
jecxz
sti
push
nop
mov
jb
push
lds
in
cli
mov
popf
jg
and
dec
adc
lret
ljmp
jge
in
in
sub
mov
push
sbb
pop
sbb
shlb
aad
sbb
aas
cmp
sbb
dec
test
lods
dec
jns
repnz
mov
scas
into
sbb
jo
jp
int3
mov
or
idivb
rcrl
pop
scas
cmp
pop
sub
int
stos
mov
add
adc
and
mov
hlt
sub
push
inc
cs
xchg
mov
sub
lret
out
and
enter
mov
adc
clc
les
cld
js
xchg
xor
xchg
aaa
scas
icebp
mov
outsb
loop
fildl
cmp
sarl
push
push
inc
cmp
mov
xchg
mov
push
arpl
add
xlat
mov
mov
jecxz
out
mov
adc
mov
mov
push
out
mov
stos
and
sub
mov
test
or
aas
cmp
lock
jmp
mov
push
ds
push
mov
pop
loop
xchg
push
cmc
lods
sbb
mov
imul
lock
loop
repnz
shrl
sbb
sbb
add
ret
sbb
or
jb
dec
xchg
pop
sub
inc
rol
and
push
lds
ja
loope
add
mov
jb
mov
mov
inc
push
repz
push
add
lcall
sahf
cwtl
insb
mov
ljmp
loopne
lock
pop
aas
call
daa
pop
mov
mov
add
add
sbb
data16
mov
sbb
cmpsl
xchg
push
stos
orb
ja
jnp
in
repz
icebp
adc
sbb
shrb
mov
and
sbb
insl
das
stc
sti
shr
mov
push
outsb
or
mov
sbb
sbb
jg
cmp
add
les
fwait
cmp
orb
rol
sahf
cmpsl
movsb
popa
xor
cwtl
xchg
jo
cltd
jl
cli
pop
adc
iret
out
popf
add
imul
sub
cmp
imul
jno
or
add
in
repz
xchg
mov
push
daa
dec
cmpsl
cmp
xchg
cld
mov
icebp
ret
ljmp
mov
test
in
imul
mov
pop
inc
or
mov
mov
andb
sbb
pop
mov
lret
ss
lret
in
outsl
cmp
xor
cli
aad
sahf
fldcw
movsl
int3
inc
fcomps
roll
jg
stos
add
inc
and
adc
lds
mov
cltd
fisubs
nop
push
testb
dec
inc
test
and
rcll
rcr
fistpll
sbb
imul
jne
out
pop
mov
inc
add
xlat
xor
mov
mov
lock
lods
sub
pop
lret
push
stos
dec
pusha
lods
fwait
call
sub
imul
sub
push
dec
mov
jb
andb
jno
push
or
jbe
je
and
dec
fdivrs
xor
pop
es
cmp
push
cltd
add
lcall
imul
pop
mov
repz
and
mov
and
mov
pop
sbb
pop
in
sbb
sbb
mov
jge
inc
add
lahf
fwait
pop
jb
jo
test
clc
popf
mov
leave
mov
clc
lahf
call
cmpsl
adc
scas
cmp
shrb
push
xchg
pop
ret
mov
testb
ja
xchg
mov
xchg
aam
adc
notb
xchg
and
hlt
push
clc
push
lcall
test
cmp
fdivr
or
sbb
iret
dec
xor
sub
mov
xor
in
dec
movsb
adc
push
test
cmp
movsb
and
mov
movb
aas
inc
jge
cltd
ja
bound
mov
or
jle
popa
mov
push
jns
nop
cld
jbe
fs
mov
pop
cld
pusha
and
mov
stos
and
fistpll
mov
roll
and
push
xor
xlat
xchg
fidivs
inc
and
mov
cmc
xchg
inc
test
inc
add
arpl
mov
out
sti
mov
daa
std
cmp
pop
es
clc
dec
iret
mov
cmp
lret
push
scas
mov
imulb
repnz
fldlg2
cs
or
cmc
jb
arpl
add
add
ret
mov
mov
xchg
shlb
or
push
mov
jl
int3
adc
rcrb
ljmp
pushf
js
and
adc
push
cmp
adc
and
cmp
and
pop
les
sub
popf
test
ss
arpl
sub
mov
aaa
adc
xchg
xor
in
lret
es
sahf
or
clc
lock
rol
nop
xor
sbb
mov
xchg
cli
movb
or
lret
loopne
gs
les
lock
cmc
aam
mov
dec
jmp
push
fildll
in
jmp
aas
jae
inc
mov
inc
or
mov
sarb
shll
fisubrl
add
push
mov
push
and
sbb
jecxz
push
call
jo
inc
js
add
das
adc
movsl
pop
and
mov
jne
fs
sahf
imul
cld
sbb
or
aaa
mov
cmpsl
push
ficoms
rorb
and
leave
subps
jb
mov
sbb
dec
xchg
jo
in
add
in
push
cmc
pusha
push
cmp
lock
shl
sub
imul
cmp
xchg
pushf
add
gs
ret
push
cltd
adc
mov
rol
add
push
lcall
push
and
mov
pop
addr16
cld
dec
loope
arpl
ficoms
jmp
jecxz
dec
loop
cmpb
or
out
lods
fwait
leave
fisttpl
lock
dec
repz
push
and
cmp
xor
sarl
adc
add
cmpsb
push
cmp
movsl
adc
mov
mov
add
inc
xchg
sahf
xchg
jns
fwait
mov
jecxz
repnz
push
roll
lcall
out
in
push
dec
sti
icebp
cmpsl
jo
int
push
inc
inc
pop
pop
push
pop
jp
or
fdiv
jecxz
push
pop
mov
aam
dec
addr16
inc
sub
fwait
pop
das
pop
sti
or
sub
pop
movsb
push
xchg
aaa
arpl
dec
pop
pop
mov
mov
xor
cmp
push
mov
pusha
in
mov
mov
pop
out
lods
push
xchg
into
inc
adc
add
lock
ja
pushf
jnp
inc
and
leave
inc
rcrl
jnp
loop
push
mov
cmp
and
push
dec
push
stc
mov
xchg
popa
mov
mov
dec
inc
mov
in
imul
xchg
mov
mov
bound
test
arpl
mov
stc
pop
push
xchg
cs
pusha
loope
lods
push
adc
test
mov
sbbb
outsl
push
xor
mov
orps
add
cli
test
lahf
dec
lea
into
jae
cmpb
pop
sub
scas
sub
sahf
dec
roll
push
aam
int3
jg
add
jle
add
mov
cmp
mov
cmp
and
pop
lods
sbb
pop
mov
aad
orl
int
mov
mov
pop
stos
in
decb
dec
xor
fsubs
mov
fsubl
dec
mov
add
dec
or
ret
mov
mov
inc
in
lea
mov
aas
pop
subb
and
pop
aas
jle
es
mov
das
sbb
adc
inc
in
test
scas
inc
rcr
cltd
mov
dec
adc
jb
xchg
push
mov
shrb
cmpsb
movsb
pop
push
inc
and
jae
add
and
dec
cld
icebp
pop
xchg
mov
push
in
inc
outsb
roll
dec
mov
sahf
rclb
icebp
sbb
push
and
and
and
sbb
dec
dec
fnsave
flds
xchg
test
xchg
and
cld
addb
test
push
mov
stos
adc
xchg
add
xchg
in
dec
aad
adc
sbb
loop
pop
mov
je
out
lods
mov
ret
rcrb
push
jg
lret
iret
dec
lcall
xor
push
adc
pusha
fsts
outsb
das
jae
insl
push
das
in
lock
rolb
cli
inc
sub
pop
pop
repnz
inc
xchg
and
jns
jae
outsb
rcrb
xchg
push
ret
sbb
push
movsb
sahf
push
outsb
mov
mov
mov
shlb
dec
mov
rcr
jae
or
xor
or
sub
mov
rcrl
mov
fwait
pop
jecxz
divb
hlt
mov
cmpsb
hlt
movsl
add
loop
pop
test
imul
cmp
inc
rorb
loop
movsl
scas
notb
rorb
sbb
jo
ljmp
sub
xchg
cmpsl
push
and
pop
icebp
jae
cld
divb
sti
mov
cwtl
adc
mov
repz
ds
enter
dec
addr16
insl
xchg
push
mov
inc
sub
xor
pop
js
lock
mov
cmp
push
mov
in
xchg
adc
add
addb
cmpsl
xchg
cli
fstpl
dec
jnp
hlt
out
or
icebp
or
je
pop
xchg
adc
xor
test
daa
xlat
lret
inc
test
push
rcrb
sub
aam
scas
mov
cmp
add
pop
xchg
test
jno
mull
subl
xlat
stos
stos
inc
jg
arpl
adc
mov
mov
cld
mov
xchg
push
pop
sbb
in
nop
dec
jg
sbb
xchg
popa
test
loop
pop
mov
push
xor
sub
xchg
xchg
int3
mov
mov
push
pusha
out
mov
inc
test
cli
cmp
push
js
jno
sarl
or
and
addr16
add
dec
inc
shr
movb
out
sbb
bound
jecxz
xor
test
jns
jg
ficompl
xchg
mov
push
adc
ds
and
inc
mov
push
jp
xor
out
clc
scas
mov
jnp
pop
negb
in
rcll
in
cmp
loopne
scas
inc
ficompl
cmp
pop
pop
repnz
outsl
out
lea
iret
inc
mov
push
and
loopne
mulb
add
inc
cs
dec
dec
cltd
inc
jne
imul
dec
pop
ret
cmp
sahf
pop
shlb
pushf
pop
mov
mov
gs
pusha
sbb
dec
sub
cltd
ret
xchg
dec
jl
bnd
rolb
lods
daa
mov
jne
ss
jns
cmp
or
add
sub
in
data16
mov
jge
mov
pop
insb
out
clc
jecxz
pop
xchg
push
aam
es
loope,pn
cmp
scas
inc
lea
scas
push
push
flds
inc
mov
jbe
cld
je
mov
and
xchg
add
xchg
lea
sub
add
jo
jo
icebp
ret
cwtl
xor
adc
inc
jne
add
sub
loopne
cmp
mov
mov
xor
or
mov
repnz
lock
cmp
fcoml
ficoms
mov
add
aad
out
jecxz
inc
mov
push
jecxz
sti
ljmp
pop
hlt
aam
push
outsb
test
mov
add
dec
cmc
ljmp
sbb
aam
inc
data16
cmp
mov
stos
xchg
cmp
mov
sub
mov
insl
mov
xchg
adc
or
push
lahf
imul
rep
pop
ror
mov
xchg
cwtl
fiaddl
sysenter
cmp
stc
test
std
addr16
jp
adc
push
pop
inc
cwtl
mov
push
mov
test
test
push
lcall
jbe
add
into
divb
test
xchg
loop
jae
pop
hlt
popf
loop
rclb
xchg
insb
pop
ret
repz
and
lcall
imul
mov
pusha
xlat
andl
repz
dec
ret
mov
in
mov
mov
test
or
dec
inc
sbbb
inc
add
and
das
out
pop
add
mov
and
xchg
mov
loopne
cltd
loopne
or
mov
add
adc
mov
int
lock
enter
inc
into
outsl
pop
push
pop
jp
shl
jb
fwait
outsb
and
aaa
test
arpl
pop
jnp
xlat
xor
xchg
jnp
mov
mov
repz
and
jg
mov
and
lods
xchg
sbb
sub
inc
cmp
nop
inc
lock
lock
jno
and
inc
shl
arpl
push
dec
jmp
push
lods
push
subb
inc
pop
mov
mov
sub
mov
test
and
ds
mov
jno
push
mov
std
cmp
add
fwait
jns
sbb
mov
inc
push
in
fbld
pop
dec
cld
cmpsl
adc
jns
in
stos
pop
das
nop
dec
mov
mov
rol
pop
pop
xchg
jo
xchg
les
mov
inc
mov
dec
inc
mov
in
inc
xchg
adc
out
out
cmpsl
sahf
xchg
sub
mov
cwtl
imul
adc
or
sub
or
sbb
mov
dec
and
mov
add
fxam
or
push
dec
or
and
mov
jno
mov
jns
jns
shll
nop
daa
jp
mov
js
nop
sub
pop
jmp
adcl
iret
xor
push
fwait
pushf
lahf
out
adc
push
inc
sbb
int3
addr16
movsl
inc
jno
nop
ret
out
icebp
ret
inc
lahf
sub
mov
jbe
and
jl
mov
and
pop
and
jecxz
aad
loope
ret
push
cmp
sub
mov
xchg
in
aad
sbb
xor
mov
push
outsb
adc
add
je
stos
pop
jmp
sub
cmp
ret
dec
sbb
adc
push
jl
cmp
and
sub
or
xor
sbb
les
sbb
mov
or
dec
cmp
push
jae
out
loope
das
in
popf
jle
je
cmp
inc
stc
adc
add
add
fbld
enter
or
add
repz
lcall
mov
lret
sbb
fldl
push
dec
test
push
adc
mov
shrl
shlb
xchg
insb
mov
mov
cli
add
fmuls
cmp
aam
pop
stc
jge
cmp
xor
cmp
sub
fucom
jb
mov
stos
movsl
xor
adc
dec
aas
in
push
bound
repz
dec
mov
ds
je
jnp
pop
repz
icebp
cmc
pushf
sbb
xchg
sbb
in
or
mov
push
imul
icebp
cpuid
clc
jge
sub
xor
xor
dec
xchg
data16
daa
ficoml
outsb
xor
movsb
inc
jecxz
adc
jge
in
inc
in
in
sbb
out
push
int3
imul
test
repz
or
aaa
push
clc
repz
push
scas
jne
mov
testb
dec
test
clc
cmc
inc
jno
pop
jns
sub
inc
xlat
int3
mov
cmp
mov
mov
movb
bound
push
cs
insl
push
sbb
cmpsl
rol
and
ss
mov
cmpsb
out
push
data16
xchg
push
mov
cmp
das
mov
leave
and
lret
push
shrl
or
ret
cmpsl
rol
in
rorl
rol
sar
aad
mov
dec
push
xchg
je
lcall
adc
add
loopne
xchg
push
push
adc
push
jge
jns
negl
sbb
inc
fdivl
popl
in
pusha
inc
mov
movsl
sub
cmp
pop
jle
mov
or
inc
test
inc
mov
loop
je
mov
mov
lock
xor
fisubrs
pushf
fstps
dec
mov
mov
movsb
sub
test
outsl
fdivl
jp
jmp
pop
mov
gs
push
int
je
jl
lods
mov
mov
or
arpl
rolb
call
out
rcrb
hlt
dec
xor
adc
shll
test
jo
sub
int3
and
jle
jl
sbb
andl
inc
pop
jle
cmpsb
mov
hlt
sbb
lds
cs
add
push
xor
hlt
aas
pusha
sarb
stc
cmp
lret
cmp
in
and
mov
imul
sarl
inc
popf
repnz
rclb
jg
push
ret
andl
cmp
inc
mov
stos
insl
adc
xor
fwait
mov
jmp
cmp
test
mov
mov
aaa
outsl
and
sbb
ljmp
xchg
loopne
push
jb,pt
bound
pop
ds
cmp
mov
lahf
divl
push
xor
insl
aaa
fsubp
push
jge
inc
inc
lds
mov
movsl
addr16
pop
sub
cmpsb
cmp
mov
pop
testl
imul
xchg
test
ret
push
or
mov
out
lret
adc
ret
imul
mov
fsubs
dec
adc
imul
mov
addr16
aaa
sub
adc
inc
into
pop
mov
pushf
lcall
stc
es
insl
popa
xchg
inc
cltd
lea
lret
adc
cmp
push
mov
scas
outsb
dec
push
loope
dec
mov
fdivp
mov
les
les
ss
pop
xchg
xchg
dec
sbb
adc
fstps
or
popf
inc
push
bound
xchg
stos
dec
or
inc
push
xchg
jle
lods
fs
inc
mov
test
pusha
pop
je
jp
call
movsl
aad
aad
lret
int3
or
jle
mov
in
popf
cmc
and
push
scas
rol
jle
icebp
outsl
ljmp
cmp
pop
movsl
cli
push
outsl
pop
loope
cmc
aaa
pop
rolb
dec
mov
leave
mov
out
cltd
mov
xor
scas
fsubs
sub
lahf
rcrl
sahf
mov
jae
mov
lods
mov
sub
shlb
dec
pop
push
in
and
or
cmp
jge
pop
sub
stos
jmp
mov
sbb
pop
xor
hlt
add
xchg
xchg
or
test
adc
movsl
add
xor
aad
xor
iret
cld
faddl
leave
xchg
addb
pusha
orb
jno
fs
mov
sbb
mov
mov
xlat
sub
aam
cld
in
out
bound
stc
shrb
mov
jns
and
push
aad
into
test
out
pop
ret
inc
adc
xchg
cmp
mov
leave
xchg
loop
aaa
rcrl
scas
or
xchg
std
jmp
pop
mov
testl
xacquire
gs
nop
aam
and
outsl
push
adc
inc
adc
dec
adc
inc
aas
mov
loop
xchg
dec
sbb
lahf
pop
ja
fs
ret
mov
xchg
push
jo
cli
sub
lret
xor
smsw
enter
xchg
ficompl
adc
or
stos
push
dec
cmp
insl
sahf
gs
lods
out
and
fdivl
aam
pushl
mov
in
and
int3
leave
fwait
out
mov
jp,pn
pop
cmp
mov
nop
mov
test
xchg
dec
ficoms
jnp
mov
leave
nop
inc
test
cmp
jno
jle
xchg
jg
popl
cmpb
xchg
hlt
mov
faddl
sub
xchg
xchg
mov
push
outsb
in
pop
jnp
add
hlt
ret
push
sbb
lret
xor
imul
mov
hlt
gs
imul
arpl
je
xor
xchg
in
xor
into
mov
lret
jmp
mov
cs
cld
jnp
sub
mov
jb
mov
jp
test
xchg
xlat
aam
inc
dec
xchg
ror
stc
test
sbbl
mov
sbb
and
inc
scas
add
cmp
mov
iret
sub
sub
xorb
sub
jmp
adc
outsb
orb
out
outsl
pusha
xchg
std
and
ss
in
sub
fnstenv
pop
fstl
fstpl
xchg
push
adc
mov
into
aad
bound
xchg
pusha
cmp
movsl
aad
mov
or
push
out
loope
mov
add
loopne
icebp
dec
cmpsl
sub
fistpl
hlt
repnz
dec
movsb
sti
mov
pop
fstpl
mov
stc
xor
cmc
lcall
xor
xchg
jmp
sbb
jecxz
in
pop
ja
out
stc
xor
aad
lods
pop
lods
shrb
adc
pop
inc
repz
aad
sbb
jp
daa
movsb
jl
pop
ljmp
mov
cmp
aaa
loop
aam
or
clc
mov
sub
sbb
repnz
or
adc
stc
insb
mov
inc
popf
movsb
nop
xor
imul
jecxz
or
outsl
pop
call
jmp
outsb
mov
adc
repz
rcr
jmp
stos
inc
mov
sbb
inc
and
movsl
lahf
dec
mov
int
or
es
and
mov
push
dec
lods
xor
lods
adc
inc
lcall
cs
pop
or
inc
pop
js
mov
push
cmp
inc
mov
lods
mov
push
arpl
pop
clc
outsb
or
imul
xlat
mov
pop
mov
dec
imul
push
jle
gs
pop
or
pop
pop
rcrl
xor
sub
inc
adc
nop
mov
push
lret
or
xchg
jno
cmp
add
inc
jp
out
cmp
stos
lock
sbbl
jno
or
setns
dec
loopne
push
fisttpll
dec
pop
mov
mov
arpl
pop
or
insb
gs
aam
cmp
jo
ja
jns
sar
cmp
rolb
outsl
mov
repnz
adcb
scas
fiaddl
pop
or
pop
testb
loop
fistps
sub
fistl
cwtl
dec
out
lret
iret
sub
push
dec
xchg
int
inc
loopne
sbb
icebp
imul
cltd
ja
mov
stos
mov
dec
jno
sub
sti
sbb
leave
mov
dec
xchg
iret
rcr
outsb
loope,pn
inc
add
outsl
mov
enter
xchg
mov
jns
out
insb
mov
pop
dec
adc
pop
cli
in
mov
mov
pop
add
lods
mov
sub
rcrb
nop
test
fmuls
mov
and
cmp
mov
adc
mov
aas
repz
or
xchg
mov
repz
cmc
fcmovnu
loopne
out
mov
shlb
xchg
and
lock
addr16
aam
cmpsl
sub
popa
xor
lds
mov
jle
xchg
mov
add
imul
xor
testl
sbb
push
add
or
sahf
mov
in
dec
mov
mov
dec
ljmp
cwtl
adc
xchg
popa
push
in
leave
jo
sbb
sbb
insl
mov
in
les
mov
pop
dec
into
pop
scas
pop
ret
adc
xchg
sub
aaa
inc
sbb
pop
data16
leave
inc
arpl
xor
cmp
mov
sbb
fisubrs
inc
pop
add
mov
sbb
push
jb
into
xchg
movsl
mov
or
scas
ljmp
fsubs
cwtl
repnz
push
inc
cwtl
dec
adc
lret
rclb
bound
ret
lcall
insb
cltd
jo
out
jge
or
xchg
insl
xor
add
arpl
decb
push
pop
jp
test
leave
sbb
hlt
fisttps
test
pop
xchg
push
iret
lcall
fistpl
stos
in
xchg
ds
mov
adc
pop
jne
shll
mov
cmp
scas
push
scas
adcb
rdpmc
pop
pushf
jmp
sub
dec
fbld
aas
aas
cmp
sub
jbe
lea
sarb
lea
ja
and
punpckldq
inc
mov
sbb
mov
add
enter
imul
cmp
scas
jno
pop
jb
outsl
out
mov
sahf
loop
in
pushw
mov
add
xchg
ret
or
fsubs
lea
repnz
adc
cmp
lret
jno
fists
roll
sbb
and
inc
data16
pop
xor
lds
jo
mov
dec
out
dec
cmp
xlat
jns
mov
cmp
jb
cmp
jb
aad
rorl
push
stos
mov
testb
jecxz
jo
mov
movsb
sub
mov
sti
shll
repz
imull
xchg
and
lods
mov
repz
cs
pushf
jbe
cs
mov
add
out
jne
fwait
sub
mov
pop
sub
in
push
shrl
psrlw
cmpsb
jl
icebp
xchg
andl
or
dec
out
xlat
cmp
bound
andl
into
xchg
sub
into
adc
mov
or
adcl
clc
mov
in
outsb
clc
sub
sub
push
rol
inc
inc
mov
in
inc
mov
inc
nop
adc
repz
sub
and
cwtl
push
adc
dec
pop
jns
xchg
arpl
fdiv
outsl
pop
movsl
insl
mov
mov
sub
adc
ja
les
push
mov
insb
and
imul
sub
rorl
inc
inc
fs
call
es
movsl
stos
lds
movsl
xor
roll
ss
push
sbb
shrb
push
dec
lea
sbb
push
and
mov
scas
and
sbb
mov
daa
xor
lea
inc
mov
mov
hlt
aaa
add
and
and
pop
jecxz
mov
xchg
in
xor
pop
jge
shll
test
pop
sub
cmp
andb
dec
loope,pn
push
imul
mov
push
mov
dec
sub
or
push
aad
inc
insl
andl
mov
icebp
adc
loope
aas
adc
push
xor
aas
and
pop
mov
cmpsb
out
jns
pop
sbb
mov
insb
loop
adc
jl
in
xor
xchg
pushf
mov
cli
sub
add
mov
jo
or
or
and
mov
mov
ret
pop
push
sarl
and
dec
fdivl
add
out
out
fistl
push
lods
out
mov
add
test
adc
shlb
xor
daa
aad
mov
and
mov
xchg
bound
stos
pop
pop
mov
ret
ljmp
sbb
lea
in
mov
and
and
sbb
xorb
mov
loopne
sub
mov
inc
dec
in
das
imul
int3
push
xchg
add
mov
pushf
push
jg
mov
pop
call
mov
dec
sahf
out
xchg
jbe
fiadds
mov
mov
or
stos
call
pop
xlat
arpl
es
negb
ljmp
repz
pop
jno
iret
mull
lcall
lret
adc
test
lret
loopne
inc
mov
cmp
popa
fidivl
into
cwtl
sti
cwtl
add
aad
cmc
rcll
xor
adc
rep
inc
lcall
xchg
adc
mov
mov
add
iret
cmp
aaa
out
push
push
ss
cwtl
mov
movsb
pop
or
ds
daa
mov
ljmp
ja
std
jno
fnstsw
shll
push
iret
or
fndisi(8087
cmovge
pop
out
imul
sbb
gs
movsl
sub
je
sbb
outsb
popf
push
stos
inc
js
mov
and
inc
push
mov
jbe
inc
inc
or
or
xchg
push
outsb
mov
es
push
scas
std
cli
push
push
push
or
adc
add
shlb
movsb
int
scas
dec
push
andb
mov
inc
cmc
xor
push
mov
add
ficoms
adc
push
xchg
outsl
xchg
mov
in
repnz
dec
mov
mov
les
bound
imul
pusha
mov
ljmp
and
jge
lcall
mov
jmp
mov
into
push
and
xor
or
mov
out
pop
test
ficoms
add
xlat
xor
test
mov
mov
sahf
std
sbb
and
adcl
dec
data16
inc
aad
xor
adc
frstor
xor
bndldx
push
jae
mov
into
shrl
mov
call
cld
lods
popf
add
rcrb
and
sti
jnp
push
lret
cld
push
mov
mov
lds
mov
xor
sbb
cmpb
mov
inc
and
inc
loope
pop
cmpsl
xor
popf
jmp
pusha
out
jle
xor
in
sarl
imul
inc
lods
shrl
push
outsl
and
or
test
iret
lahf
popa
mov
xchg
cs
sub
adc
stc
push
xchg
adc
mov
int3
jp
push
enter
icebp
and
ror
jmp
cmpl
mov
fwait
cmp
jg
xchg
and
mov
xor
push
jne
mov
mov
push
xchg
inc
dec
push
cmp
mov
mov
mulb
sub
mov
adcl
test
xchg
sbb
je
dec
inc
std
mov
mov
leave
repnz
or
daa
dec
xchg
enter
pop
jl
cmpsb
push
sahf
push
xchg
sub
push
inc
jnp
sub
dec
xor
test
loopne
add
push
test
enter
sbb
test
ss
mov
int3
add
adc
lret
jb
movsb
push
out
cwtl
out
adc
stos
xor
push
ljmp
add
popl
inc
jb
pop
pop
cmpsb
cmpsl
inc
add
xchg
mov
mov
add
leave
shlb
mov
mov
data16
bound
jno
mov
xchg
or
scas
push
bswap
jge
cwtl
mov
and
mov
dec
test
jo
addr16
enter
pop
mov
pop
xor
outsl
push
sub
int3
cwtl
daa
fwait
les
xor
or
or
addl
lods
pop
inc
cs
xchg
sbb
dec
dec
call
push
mov
jae
shll
jno,pn
mov
adc
jp
or
int3
pop
in
mov
ret
xor
push
mov
and
xor
inc
sahf
xchg
orl
xor
incl
icebp
lock
js
pop
xchg
ds
push
dec
insb
mov
in
jno
in
idivb
sbb
movsl
push
mov
pop
adc
fs
jg
lea
ss
jb
inc
and
sbb
insl
fstpl
jmp
push
ficoms
inc
mov
lds
push
cltd
and
dec
idivl
mov
cmc
rol
inc
fwait
xchg
out
das
cmp
sbb
jecxz
adc
sub
icebp
pop
lret
push
sub
and
movsb
pusha
xchg
dec
cmp
fwait
clc
fdivl
cmp
pop
mov
add
das
popa
outsl
and
popa
aad
fsubl
xchg
mov
ja
imul
inc
add
sbb
mov
adc
or
or
pop
mov
shrl
es
es
xchg
xchg
clc
dec
sti
mov
mov
cmp
into
mov
es
pop
jb
mov
sub
push
sub
subb
daa
sbb
scas
xchg
jecxz
inc
out
mov
add
pop
out
inc
sub
sub
jp
mov
inc
and
mov
ret
lret
and
cmp
insl
mov
jns
adc
lea
mov
ljmp
testb
icebp
movsb
outsl
mov
in
insl
arpl
adc
sti
ja
pop
stos
pop
fstpt
push
scas
add
lcall
adc
jecxz
iret
inc
incl
pop
imul
in
xor
push
gs
pop
clc
test
mov
or
mov
sbb
mov
inc
fistpl
sub
dec
loopne
jmp
mov
scas
push
gs
jo
adc
scas
stos
out
es
jns
mov
fdivrp
and
pushf
jge
jmp
inc
cmp
xchg
sub
adc
fisttpl
cltd
sub
int3
insb
jecxz
popl
sahf
fsubl
cmpsl
into
decb
ret
fisubrl
aas
sahf
mov
lea
test
jp
cmp
popf
lods
dec
push
fdivrs
inc
jne
cmpsl
js
xor
subl
mov
scas
jae
or
arpl
sbb
outsb
and
leave
add
add
sbb
std
imul
sub
push
cmp
lret
jge
jmp
popa
in
je
jb
add
lds
mov
sub
hlt
xchg
sub
into
jecxz
or
mov
jp
cmc
gs
vpcmpeqw
mov
dec
js
ss
jp
xor
aaa
dec
jb
adc
gs
pop
je
adc
push
iret
int
lahf
mov
scas
jbe
cmp
std
outsb
jbe
lock
jno
mov
in
dec
pop
or
jns
mov
xor
mov
push
lret
cmpsl
mov
mov
gs
or
ljmp
and
and
ss
iret
pop
je
mov
and
cltd
bound
out
dec
subb
sub
pop
ss
jecxz
jmp
pop
jae
mov
ds
cmp
les
fwait
lods
das
xor
adc
pop
js
fdivs
les
pop
mov
jb
lea
pop
cwtl
jae
xchg
sub
add
call
mov
mov
jg
cmp
insb
aam
push
pop
mov
xchg
push
lahf
push
ja
lds
xor
adc
or
mov
add
xchg
add
push
sahf
pop
xor
inc
dec
cmc
mov
pushf
xor
cmp
mov
sub
pusha
push
xchg
push
daa
sbb
xchg
aad
idivl
push
push
mov
jae
push
data16
push
cs
hlt
kxorw
mov
movsl
in
inc
lods
sbb
adc
fwait
cmp
dec
scas
test
mov
lret
jge
aas
repnz
xchg
test
les
dec
cli
aaa
cmpsb
imul
dec
cmpsl
jno
mov
mov
std
cltd
mov
in
test
fwait
and
into
mov
cmpsl
shll
mov
jns
shlb
arpl
mov
loope
cmpsb
mov
mov
loope
xor
mov
ljmp
lock
push
push
cmp
scas
pop
stos
inc
js
repz
sbb
cmpsb
dec
mov
jge
insb
cmp
repnz
idivl
cltd
cmc
pop
mov
ret
mov
icebp
jno
push
pop
mov
mov
test
jno
add
mov
pop
adc
and
jbe
fs
sbb
das
dec
add
sti
push
or
mov
inc
add
pop
aam
outsl
fs
fisubs
cmp
adc
and
lods
push
test
inc
movsb
dec
pop
pop
fdivp
jmp
add
dec
insl
add
mov
dec
xchg
ds
pusha
mov
mov
push
ss
ja
inc
jmp
out
pop
push
jp
aam
push
in
outsl
inc
add
mov
out
negl
imul
dec
jns
cmp
xchg
mov
xorb
mov
mov
mov
inc
call
stc
sbb
into
jns
pusha
popf
cld
aaa
inc
mov
out
inc
lds
sbb
leave
push
mov
add
sbb
mov
js
hlt
xor
rcr
cmpsb
xor
incb
loopne
xchg
dec
dec
sbb
inc
dec
jns
sub
jns
jmp
xchg
or
push
inc
rcrl
notl
sub
data16
or
das
or
insl
testb
shlb
mov
mov
push
mov
pop
mov
inc
adc
mov
lock
fs
cmp
sub
mov
lret
dec
add
testl
or
xchg
inc
rcll
sub
out
fs
sub
xchg
mov
sbb
int
pop
push
adc
mov
xchg
jae
das
cmp
xlat
xchg
aam
xchg
jo
mov
fstpl
bound
jmp
sub
icebp
mov
shrl
mov
cmp
rol
popf
pop
lods
sub
pusha
test
sbb
dec
inc
mov
test
pop
push
mov
sahf
js
nop
mov
sbb
xor
mov
dec
lock
stos
dec
jae
cmp
sahf
or
dec
push
xchg
sub
lods
arpl
jno
push
mov
lahf
pop
inc
cmp
pop
sbb
jl
xchg
pusha
xor
pop
jge
mov
xchg
lods
insb
push
das
dec
mov
fimuls
or
add
sbb
jnp
mov
jo
mov
fwait
jp
jns
jge
push
int3
stos
outsl
loope
jp
repnz
push
xor
outsl
or
push
push
cli
xchg
jmp
repz
push
fists
pop
pop
scas
jne
inc
pop
lret
cltd
sbb
pop
mov
and
divb
popf
mov
rorb
jecxz
or
imul
add
inc
cmpb
mov
inc
addb
ljmp
in
mov
fldl
sub
dec
push
cmp
movsb
nop
mov
dec
das
push
mov
and
es
lret
cwtl
ss
arpl
cmp
lock
mov
pop
sbb
or
dec
dec
nop
jmp
mov
mov
loopne
mov
mov
std
test
imul
rorl
popa
scas
negb
insw
lods
mov
stc
xor
inc
lcall
lock
pop
int
cs
ljmp
sbb
shrl
xor
cmp
stos
test
push
xor
fimuls
dec
fimull
ret
inc
adc
xor
and
dec
and
or
scas
es
xor
or
nop
inc
push
mov
jo
push
pop
push
pop
jae
cmp
add
adc
cwtl
pop
jl
xor
dec
daa
or
mov
or
leave
jno
in
or
jp
pop
and
mov
mov
cmpsb
jp
lock
xchg
xor
cmpsl
xor
fmuls
push
gs
mov
icebp
dec
jmp
sarb
out
fsub
sub
sbb
add
cmp
mov
leave
insb
pop
loopne
cmp
sti
mov
adc
data16
jge
push
and
xchg
cmpsl
adc
test
add
cwtl
arpl
test
xchg
clc
cli
mov
pop
shll
fistps
mov
mov
scas
call
fists
aam
fimull
lods
xchg
pop
outsb
arpl
xor
cmp
jno
inc
cmp
rclb
shlb
fisttps
xchg
inc
jae
movsl
xor
dec
loopew
jmp
lods
gs
and
adc
ljmp
insb
mov
jp
lods
dec
rol
push
xor
push
adc
mov
into
ja
or
xchg
push
loopne
sbbb
in
xor
xor
pop
es
mov
aad
js
arpl
pop
cltd
js
fmul
mov
or
push
or
lock
xor
push
mov
pushf
movsb
fistl
cltd
or
mov
rorb
push
into
mov
dec
adc
mov
cmpsl
mov
faddl
cwtl
out
gs
fldcw
pop
add
cmp
inc
inc
adc
fnsave
mov
xchg
add
xor
test
divl
sub
mov
les
xorl
fwait
js
cwtl
rorb
in
mov
push
es
inc
push
mov
inc
jbe
popl
aaa
mov
xchg
xchg
leave
adc
stos
xor
lahf
les
mov
mov
out
setg
prefetchwt1
jmp
add
jp
cmc
loope
inc
pop
in
cwtl
cmp
and
arpl
repnz
loope
hlt
cmpsb
insl
enter
nop
mov
xchg
push
std
aaa
pop
std
inc
pop
scas
push
xor
dec
xlat
hlt
in
sbb
xchg
inc
sub
xchg
rcll
cmp
push
pusha
aam
mov
jle
aad
fidivl
ljmp
cmpsl
aam
push
and
divl
push
movsb
imul
notl
pop
inc
adc
call
cmp
mov
lret
jno
test
testb
or
mov
xchg
sti
fwait
cmp
repz
sbb
jge
sub
je
xchg
int
lret
sbb
jmp
mov
out
in
in
test
enter
insb
sub
ds
loope
jge
cmc
sti
adc
lcall
jg
or
and
sbb
das
mov
push
jge
enter
dec
mov
dec
out
outsb
pop
pop
sub
repz
and
jae
mov
inc
sahf
ljmp
aam
xchg
cmp
fsubs
in
or
jle
xor
mov
jp
ficoms
push
pop
push
jl
movsb
nop
loop
mov
mov
sub
bound
jg
dec
pop
cmpsl
mov
subb
jecxz
xchg
lahf
pop
sbb
out
outsb
pop
or
jnp
fcmovne
cltd
push
jns
adc
or
mov
dec
popf
jl
cld
mov
pop
xor
mov
ljmp
mov
sub
fsubr
inc
lods
add
nop
and
setp
daa
mov
mov
dec
or
push
ss
mov
cmpsb
testb
lea
insl
push
movsb
lcall
xchg
xor
cwtl
mov
jo
lds
aaa
add
out
jae
push
adc
shrb
in
clc
mov
jle
inc
xor
repz
shl
mov
je
pop
jg
jmp
xchg
push
mov
cwtl
aaa
xor
lahf
push
gs
xchg
int
inc
cmpsl
je
jae
pop
xchg
or
std
rolb
mov
cmp
daa
jl
movsb
or
leave
sub
mov
adc
cmp
adc
aad
fwait
in
mov
es
jns
out
pop
stos
rcll
pop
cmp
pushf
test
iret
push
cmp
mov
fidivs
pop
cmp
int
pop
inc
jns
fcomps
xchg
xor
aaa
sarb
andnps
out
aad
rorb
sub
outsb
pop
push
inc
push
lock
loopne
mov
jno
and
push
inc
in
sbb
into
out
outsb
ret
pop
mov
lahf
lcall
pop
out
lret
dec
adc
push
push
sbb
inc
jle
cmp
cmp
xor
lds
dec
and
fnstsw
jbe
jae
dec
sub
ds
mov
push
cmpb
lds
push
sbb
dec
jecxz
cmc
cmpsb
fisttps
fld
xchg
cmp
daa
inc
dec
sub
mov
mov
test
cmpsb
jns
cli
jmp
rcl
mov
mov
push
jmp
or
ss
in
insl
jle
std
ret
mov
inc
and
loopne
add
push
rclb
cmp
cld
sbb
sar
jg
rcrl
fisubrs
sbb
je
push
mov
mov
sub
push
shll
sti
insb
jp
pop
mov
hlt
jae
icebp
sti
mov
movsb
leave
dec
outsl
cltd
je
adcl
lods
mov
mov
out
lcall
dec
jle
adc
pop
xor
jae
lea
in
xor
lods
xchg
fists
cwtl
mov
test
push
adc
jecxz
inc
adc
fisubrs
inc
insl
cmpb
test
adc
xlat
shl
mov
and
lcall
push
ficoms
pop
pop
xor
pop
loopne
repnz
mov
pop
or
std
in
mov
pop
mov
inc
in
jno
loop
int3
mov
mov
lds
iret
popf
mov
sbb
xor
push
insb
mov
jle
ret
lock
es
mov
out
sub
xor
or
loopne
pop
add
ss
mov
push
and
test
arpl
or
test
add
push
jp
inc
nop
cmp
mov
rcrb
cmp
sahf
out
in
pop
repnz
cmp
mov
jecxz
xorl
nop
push
sub
push
out
mov
shll
stos
jae
jmp
xlat
test
xlat
sbb
cli
out
pop
leave
fucomp
shlb
cs
dec
je
xchg
sbbb
std
lea
dec
insl
or
sub
pop
mov
xor
cmp
scas
bound
pusha
sub
jno
add
testb
scas
das
divl
xchg
xchg
mov
sub
mov
leave
pusha
push
in
ja
sub
sbb
sti
test
and
sub
jecxz
out
jmp
dec
inc
test
push
int3
cmp
xchg
les
mov
cmp
push
test
sub
inc
hlt
inc
fwait
jp
out
jl
rclb
fildll
jae
orl
dec
jno
clc
bound
out
sub
mov
pusha
jmp
lret
sub
imul
or
inc
aaa
push
jle
inc
xchg
inc
push
idivl
roll
push
or
and
sbb
lret
add
xchg
or
lods
and
aas
mov
xchg
push
js
or
mov
jb
outsl
sub
outsb
cmpb
add
int3
enter
sbb
in
imul
xor
inc
pop
cmp
cli
xor
jge
sarl
push
add
sbb
ror
mov
fsubrs
mov
rcr
sbb
inc
sub
jae
mov
xchg
mov
inc
pop
ret
jle
data16
test
mov
push
popf
dec
sub
cs
ja
fsubs
sbb
dec
dec
int3
push
xor
push
jmp
imul
and
jle
xchg
cs
xchg
dec
sbb
lds
mov
sbb
pop
test
lods
or
push
repz
inc
dec
xlat
cmc
ljmp
xor
mov
out
xchg
out
dec
jae
or
mov
je
jno
mov
jne
push
mov
popa
add
cmpsb
mov
mov
jo
popaw
pop
sub
xor
in
add
xor
dec
push
or
leave
push
stos
nop
loope
sub
xor
subb
xchg
dec
pop
jg
mov
mov
mov
pop
call
sti
xlat
inc
iret
adc
mov
lret
cmp
xchg
mov
cli
mov
fmul
adc
dec
and
hlt
adc
inc
push
in
js
adcl
mov
es
dec
in
cltd
sub
cwtl
pop
in
fisttpl
mov
add
cmc
sarl
mov
andb
or
int
test
aam
sbb
lock
xchg
int
xchg
add
dec
fsubs
cmc
pop
out
ret
imul
ret
daa
mov
mov
and
ljmp
mov
cmp
mov
lahf
sbb
mov
pop
test
adc
aam
or
fs
ja
lods
sbb
loope
ss
adc
movsl
pop
lcall
jo
push
lahf
cwtl
lret
add
test
push
in
sub
scas
movntq
xchg
jnp
jae
inc
aam
sbbb
mov
fst
mov
mov
push
jb
scas
ret
aad
push
mov
cmp
push
mov
jp
xchg
push
in
mov
and
pop
jb
push
xor
sub
scas
jbe
sbb
add
inc
mov
insb
push
js
vextractf64x4
daa
movsb
mov
mov
inc
mov
packssdw
shl
adc
aas
and
call
xor
fadds
sbb
sub
out
jge
dec
inc
pusha
mov
lea
jne
mov
xor
int
inc
mov
pop
xchg
mov
inc
mov
sub
imul
push
repz
scas
jge
add
std
out
push
or
js
lahf
lock
mov
jp
xchg
xor
pop
add
xchg
int3
insl
dec
inc
nop
mov
xchg
push
adc
and
loop
sbb
mov
mov
fidivs
inc
ss
sarb
arpl
adc
fistpll
push
test
mov
push
xor
popa
cmp
push
xor
sub
lret
mov
test
and
cmc
insl
call
lcall
adc
add
clc
mov
jae
inc
inc
cmc
mov
or
mov
push
add
addb
jmp
xor
and
test
mov
shlb
dec
notl
stos
repz
xor
jno
adc
adc
or
mov
jl
stos
ds
dec
add
cmp
inc
pop
mov
jmp
mov
jle
inc
pop
mov
xchg
cmpl
gs
dec
stc
ljmp
les
or
sarb
mov
sahf
or
mov
mov
cmpsl
cltd
mov
stos
mov
mov
cmp
lcall
adcb
call
int3
xor
xor
xchg
into
faddp
enter
cld
xchg
sub
jl
dec
fidivrs
cli
shrb
lret
mov
add
inc
push
or
add
jno
and
leave
and
insb
dec
push
sarb
push
or
jae
mov
sub
aam
add
pop
iret
cmpsb
adc
pop
in
dec
fsubl
scas
in
mov
dec
xor
push
pop
clc
pushf
xchg
cmc
hlt
std
loope
dec
repnz
cmp
rcr
fbld
dec
ss
and
jns
test
xor
pop
sbb
cmp
sub
jae
mov
jg
imul
and
add
mov
dec
js
gs
roll
aas
shll
in
mov
add
sbb
loope
sub
cmp
dec
mov
sub
inc
int
nop
out
sbb
std
ret
add
sbb
push
jno
xor
test
cmp
xor
mov
xchg
xchg
push
lret
mov
cmp
cmp
pop
je
mov
adc
mov
cmp
jno
gs
iret
and
sbb
lret
scas
rorl
and
add
inc
and
xlat
jnp
xor
cs
xchg
ljmp
popf
ja
mov
repnz
push
imulb
mov
xorl
push
inc
rcl
pop
in
rclb
pop
lods
movsl
dec
xlat
sbb
into
inc
lahf
js
clc
mov
add
add
dec
and
pop
notb
or
mov
push
lea
xor
ljmp
popf
sub
mov
data16
mov
cs
js
inc
adc
dec
cli
pop
add
insl
cld
rcrl
jl
rcll
pop
jge
cmpsb
lcall
es
lock
hlt
outsb
lods
fcmovne
mov
mov
outsw
mov
addr16
adc
lea
and
xchg
daa
loope
cmpsb
jb
ret
cmp
cmp
push
sub
mov
cmp
dec
inc
fldenv
fisttpll
lea
xchg
and
cmpsb
fidivrl
cli
mov
das
cmc
sahf
icebp
gs
scas
dec
or
jbe
cmc
and
and
dec
push
jmp
cmp
scas
gs
popa
dec
push
jo
add
sub
aam
jbe
mov
adc
cmp
jb
aas
imul
or
mov
sub
xchg
dec
xlat
fdivrs
jbe
xchg
pop
add
jle
arpl
cmp
sbb
jb
lock
inc
or
jo
sub
add
mov
push
mulb
mov
cmp
push
push
or
xchg
std
xchg
js
out
sub
int
mov
mov
mov
inc
mov
push
repz
imul
popl
sbb
fwait
sti
icebp
loope
lea
adc
dec
inc
mov
or
shlb
jno
cli
nop
subb
es
sub
jns
mov
xor
inc
and
enter
push
scas
xchg
xchg
cmp
test
inc
test
cmp
bnd
test
sbb
imul
clc
sub
ret
cmpsb
add
lcall
mov
ja
adc
xchg
mov
jne
inc
in
pushf
cmp
int3
pop
insb
xchg
push
jecxz
into
pop
pushf
aas
lahf
sbb
shll
lret
jne
dec
outsb
sbb
jmp
mov
cmp
aad
xchg
jno
mov
xor
icebp
daa
sub
pop
inc
cli
add
mov
faddl
adc
xor
test
push
stc
jns
clc
and
lret
sub
scas
call
or
jl
cli
push
add
xchg
jnp
mov
and
push
jne
outsb
shl
pop
mov
shl
add
adc
bound
or
jo
icebp
mov
xchg
sbb
test
movsb
roll
int3
js
leave
iret
and
lods
inc
or
movsl
add
jb
pop
test
push
push
rclb
insb
and
sbb
cmp
loopne
or
xor
movsb
xchg
subl
ja
div
cmp
jno
pop
and
xchg
sub
stc
pop
mov
adc
mov
je
rcr
insl
outsb
mov
sarb
xlat
pop
adc
clc
jecxz
scas
or
add
movsb
pop
jg
adc
mov
xlat
adc
mov
lcall
cmp
in
and
jns
les
pop
push
mov
shlb
mov
cld
xchg
test
stos
loop
sub
in
imul
mov
mov
faddl
push
push
roll
ret
sub
or
mov
iret
mov
es
sbb
or
add
lahf
and
faddp
adc
cmp
jmp
jg
leave
inc
das
aas
pop
ret
dec
mov
loop
lret
std
adc
pop
pop
loopne
mov
pushf
sbb
test
cmpsl
inc
in
jl
add
fcmovnu
addl
mov
xchg
and
pop
sub
cwtl
jmp
outsl
mov
in
lea
xor
lds
jp
mov
xchg
jg
mov
add
and
inc
pushl
xchg
repnz
or
jns
je
push
fdivp
pop
adc
mov
pop
mov
mov
pop
or
cmp
loopne
in
lret
fisubrl
fsts
mov
mov
mov
sbb
pop
cmpb
gs
popa
insl
enter
mov
push
inc
enter
outsb
aas
jge
sub
aam
xor
aas
aas
lcall
test
cmp
mov
dec
mov
mov
ficoms
inc
shrb
pop
iret
call
orb
out
das
mov
mov
andb
je
mov
xchg
push
add
shr
add
fidivrl
add
inc
xor
pop
inc
aaa
xchg
adc
and
push
adc
jg
call
lahf
fimuls
push
inc
push
add
fisubrs
in
mov
mov
and
xorb
jle
bound
cli
or
sti
jmp
cmpb
shr
jnp
cmp
jmp
aam
cmp
jge
into
inc
lods
int3
pushf
lret
mov
lods
dec
mov
xor
dec
inc
adc
cmp
shrl
shll
mov
popf
subb
sub
hlt
xchg
idiv
popa
mov
sbb
xchg
clc
dec
adc
fistps
cld
mull
ljmp
lahf
movsl
fimull
cli
in
xchg
cmp
repnz
into
rol
je
outsl
inc
xor
push
cmpsb
insb
lret
jecxz
cltd
xor
js
addr16
dec
lea
in
movsb
cmpb
jmp
add
xchg
insb
lret
outsl
in
pop
mov
pop
mov
mov
push
xchg
fnstcw
ljmp
bound
adc
int3
lret
cmp
add
pop
test
inc
mov
mov
mov
push
mov
push
mov
and
rcrb
fwait
inc
and
sbb
jg
push
xor
repnz
jmp
push
out
insb
or
fwait
adc
mov
xlat
adc
mov
dec
fnstsw
xor
xchg
or
inc
add
jb
out
sbb
lcall
inc
in
sub
xor
push
xchg
pop
sbb
pop
mov
jge
call
pop
jl
dec
pop
and
in
or
push
lahf
movsb
cmp
mov
and
popa
inc
mov
sbb
nop
mov
cmpsl
dec
mov
insl
sbb
xchg
sub
in
lret
out
jo
les
xchg
dec
xchg
lahf
jmp
out
inc
mov
fcompl
sbb
loope
inc
pop
lret
pop
movsl
push
pop
sub
movsb
dec
fwait
mov
std
sbb
jbe
lock
pop
in
push
dec
std
sub
push
push
pop
mov
jecxz
out
ljmp
inc
xchg
jne
or
cmp
push
repz
mov
sub
loope
sbbl
mov
fdivl
sub
jl
pop
and
sbbb
xor
mov
pushf
pop
mov
and
dec
in
inc
movsb
xor
inc
stos
test
push
mov
xchg
sbb
xor
push
push
call
fldl
xchg
nop
push
sbbl
cmp
inc
push
mov
sbb
mov
jno
dec
jecxz
inc
push
mov
and
push
movsb
sub
push
cmp
in
js
test
sbb
xchg
and
fcomps
mov
test
push
xlat
das
bound
je
roll
sub
xor
inc
mov
jnp
dec
pop
jle
enter
mov
cmc
cmp
mov
push
lret
stos
rcr
pop
into
add
enter
jo
in
push
xchg
mov
int3
cs
push
or
fwait
mov
pop
adc
aaa
pop
int
fwait
aaa
outsl
push
mov
int
aaa
push
pop
out
xor
jecxz
xchg
sub
add
insb
andl
testb
sub
sbb
jb
popa
stc
in
imul
jmp
jns
cltd
mov
imull
push
jle
test
cmpsb
adc
imul
lds
sbb
or
push
dec
xchg
pop
scas
dec
xor
pop
mov
ljmp
testb
ret
add
cmp
xchg
and
fcmovne
mov
popf
jle
outsl
jae
xchg
out
in
popf
pop
inc
into
xor
cmp
fiadds
jno
in
fisubs
xor
gs
push
aas
mov
rorl
and
adc
mov
add
je
das
adc
inc
sbb
fadds
and
out
xchg
insb
hlt
scas
leave
add
cmp
bswap
jnp
jecxz
adc
cmc
popa
sub
mov
imul
test
mov
sub
push
scas
sbb
inc
and
or
movb
adc
or
mov
fcmovnbe
push
mov
popf
pop
xorb
jp
in
jge
and
sbb
popa
cltd
loop
lret
inc
rep
scas
sub
pop
sbb
adc
sub
jl
mov
pop
inc
call
imul
xchg
cwtl
nop
cmp
sbb
loopne
jnp
js
mov
adc
mov
adc
xchg
les
inc
mov
and
es
aam
push
mov
daa
mov
pop
arpl
inc
mov
adc
aas
dec
decl
mov
pushf
pop
lods
push
cs
push
pop
xchg
mov
ljmp
movsb
cs
push
mov
mov
sub
cmp
or
out
scas
test
stos
in
xor
jg
inc
test
adc
and
movsl
js
mov
and
cmp
xchg
xor
stos
ja,pn
js
stc
jg
scas
imull
xchg
jnp
and
adc
cmpsb
outsb
dec
sahf
arpl
and
sar
or
pop
ret
jae
leave
push
mov
dec
mov
and
fcoms
push
iret
movsl
add
push
mov
je
mov
and
cmp
aas
aaa
rorb
push
fs
mov
xchg
sbb
push
xlat
sbb
out
jp
push
xchg
imul
mov
scas
test
pop
and
mov
repz
shlb
push
sub
clc
in
lock
movsb
leave
push
gs
les
dec
push
and
xchg
fimuls
test
in
inc
aaa
jg
adc
movsb
jmp
outsl
dec
fwait
enter
stc
mov
mov
aad
cmp
insb
push
nop
and
jo
inc
and
pop
or
dec
mov
repnz
ds
push
xchg
leave
filds
filds
push
mov
stc
sbb
jns
shlb
pop
sub
lret
sbb
pop
or
fcomps
mov
add
subb
std
xchg
sbb
test
pop
jl
xchg
adc
pusha
out
push
mov
jle
push
xchg
mov
lods
add
pop
clc
clc
push
cs
icebp
mov
cmp
add
jb
je
inc
int3
and
dec
test
jp
aas
dec
xor
out
bound
wrmsr
outsb
cmpsb
aaa
enter
mov
cmc
mov
aad
mov
fldcw
outsl
cmp
mov
push
mov
sub
stos
push
ds
xchg
adc
arpl
mov
cmc
pusha
jle
mov
xor
das
mov
jo
nop
push
outsl
aad
push
dec
daa
xchg
lods
jae
je
mov
stos
push
lahf
cld
iret
cmp
lock
fists
xchg
popf
push
xchg
push
add
outsb
adc
mov
inc
stc
imul
xchg
bnd
mov
jg
sbbb
shrl
mov
in
outsb
inc
and
inc
dec
lahf
aad
sti
mov
out
and
cmp
hlt
dec
or
sub
movsl
sbb
stos
sbb
add
mov
shrl
mov
aad
imul
xor
xor
and
jb
stos
pop
mov
jecxz
out
push
dec
scas
mov
fs
rcrl
xchg
outsb
adc
test
mov
imul
cmpsl
mov
mov
and
leave
jp
mov
cmp
xchg
es
sub
mov
subb
sub
push
cmpsb
mov
or
cs
jbe
lret
vmovq
leave
mov
addb
pop
sbb
jo
jb
idiv
xchg
mov
dec
jae
roll
or
mov
insb
sahf
in
pushf
jl
mov
sahf
mov
mov
and
pop
dec
or
sub
and
scas
je
ss
je
jp
xchg
into
cli
ret
push
mov
mov
orb
int
jne
ficoms
fsubl
mov
leave
lea
lret
inc
mov
data16
mov
andb
mov
mov
hlt
clc
neg
mov
hlt
shl
mov
mov
mov
test
pusha
mov
stos
cmp
xor
jecxz
pop
sub
mov
fsubl
jg
fisttps
xchg
push
adc
inc
mov
movsb
pop
dec
mov
into
inc
cmp
xor
and
mov
sbbl
xchg
cmp
push
jl
les
mov
xchg
fdivr
push
outsl
mov
push
or
cmp
bound
dec
mov
es
inc
xor
jbe
ds
mov
jle
movsl
addr16
mov
outsl
das
cmp
dec
pushf
lock
ljmp
or
mov
jnp
xchg
iret
jp
leave
push
shrl
pop
jbe
sub
movsl
sbb
xor
inc
ret
sbb
xchg
mov
ret
clc
insb
push
xchg
es
fstl
mov
jecxz
xor
mov
mov
cmp
arpl
lret
jp
pop
inc
cmpsb
loope
fcoms
jno
in
bound
dec
dec
faddl
xor
test
movsl
imul
sbb
aaa
sarb
out
mov
sbb
lea
jl
xchg
popf
mov
lea
fsts
scas
push
add
negb
mov
cmp
xor
lods
or
lods
hlt
push
test
mov
dec
fsubs
pusha
mov
jg
xlat
sbb
arpl
adc
dec
pop
push
sub
ret
or
gs
and
dec
push
inc
repz
leave
int
xor
pushf
ljmp
arpl
test
xor
dec
inc
ss
lea
out
cmp
ret
call
push
in
lea
xchg
xor
sahf
push
js
inc
outsb
in
pusha
push
pop
ja
pop
jne
or
out
fimull
sbb
add
adc
push
jne
bound
cli
jb
in
add
pop
inc
js
sub
out
and
sub
test
push
idivb
xor
sbb
jg
mov
shrl
mov
mov
je
and
mov
cld
ja
arpl
mov
stos
aas
in
jmp
xchg
ds
pushf
fisubs
cwtl
iret
into
int
arpl
push
mov
mov
jnp
sbb
fs
jg
rcrb
dec
add
movsl
fsts
into
cmp
mov
pop
add
pop
cli
arpl
cmpsb
pop
fxch
push
cltd
andl
decl
repnz
adc
mov
dec
jl
xchg
push
nop
push
mov
cltd
xchg
cmpsl
shll
dec
add
mov
mov
daa
in
or
push
jo
inc
cwtl
popa
test
fdivl
xchg
test
xchg
in
jle
repnz
jbe
outsl
inc
int
sub
call
xchg
cmpsb
lret
jmp
fwait
lret
xor
scas
sti
xchg
enter
mov
rcrb
push
pop
jnp
addl
out
lret
lods
or
mov
xor
adc
inc
pushf
and
xor
insl
inc
test
sbb
into
xchg
push
lret
js
sbb
push
adc
jno
adc
roll
sbb
cmpsb
int
dec
push
out
xchg
les
push
push
dec
sbb
mov
xchg
shll
xchg
mov
lcall
pop
xchg
add
or
xor
out
xor
dec
aam
dec
push
jmp
jge
push
testl
dec
loope
inc
jae
and
sub
mov
insl
xchg
jae
repnz
imul
ja
imul
movsl
aaa
inc
inc
ret
decb
inc
mov
enter
pop
or
mov
mov
bound
outsb
jnp
dec
cli
lret
add
jmp
jg
loop
mov
out
cmpsl
pop
iret
cmpsl
jb
adc
inc
ret
mov
ljmp
mov
loope
loop
cmp
dec
adc
test
ret
or
dec
lret
or
pusha
jnp
lods
stc
int
and
xor
mov
add
mov
ret
dec
xor
scas
in
inc
mov
inc
mov
les
jecxz
cmp
mov
mov
movsb
outsb
nop
insl
cmpsl
xchg
mov
inc
test
sahf
out
xchg
add
mov
pop
fdivr
movsb
xchg
sub
dec
adc
imul
insb
fistps
mov
xchg
adc
fdivr
jecxz
enter
inc
xor
cmpsl
outsl
popf
mov
dec
idivl
add
das
mov
jne
lods
inc
sahf
in
sub
xor
nop
scas
lcall
mov
cmp
and
xor
subl
jecxz
in
push
popa
pop
jecxz
mov
insb
pop
int3
inc
mov
mov
mov
movsl
loopne
ss
xor
pushf
insb
repz
dec
pusha
mov
mov
pusha
cs
xchg
xchg
out
fbstp
inc
lods
ss
dec
repnz
xchg
cmp
test
inc
fsts
sbb
loope
adc
cmp
aam
fwait
and
mov
pop
mov
lock
cli
rcll
dec
cld
std
outsl
cld
sub
fdivr
sti
add
or
addr16
mov
inc
pop
mov
inc
sub
pop
pushf
sbb
sbb
inc
inc
inc
or
fildll
clc
mov
fstpt
incb
push
imul
inc
inc
dec
push
in
rcll
fistl
jne
popf
dec
repz
popf
or
iret
add
push
pop
lcall
mov
push
es
ss
pop
insb
fwait
mov
sub
mov
push
mov
adc
addl
or
cmpsb
sbb
lret
iret
cmp
shll
int
push
sub
or
jp
test
dec
sbb
sbb
xchg
xor
pop
arpl
pop
sub
pop
jno
mov
mov
dec
dec
inc
out
out
xchg
mov
mov
sahf
enter
jns
mov
push
inc
sbb
es
fistps
leave
shrl
sub
sarb
and
test
out
or
jle
cmp
sbb
inc
lret
ljmp
add
xor
pop
mov
into
mov
sahf
xchg
mov
mov
sbb
popf
scas
add
inc
dec
loop
sub
mov
inc
fisubrs
stc
mov
loope
or
rolb
fnstenv
lea
xchg
mov
mov
scas
xchg
and
cwtl
shrb
pop
call
test
inc
xlat
mov
push
pop
jbe
mov
pop
rcr
sbbb
out
mov
adc
pop
icebp
inc
push
scas
icebp
out
adc
add
or
and
mov
jae
outsb
lahf
mov
dec
ret
sub
mov
imul
mov
mov
or
mov
addr16
dec
jl
daa
stos
mov
push
daa
xchg
pop
lret
push
faddp
and
rcr
push
mov
and
fadds
cli
fsubp
int
aam
and
mov
cmp
nop
movsl
insb
push
xchg
adc
cmp
mov
pusha
fdivrs
and
mov
xchg
inc
decl
popf
jnp
fistl
mov
pop
mov
ret
pop
cmpsl
iret
fidivrs
mov
or
frstor
dec
fistpll
scas
sub
sub
lret
ljmp
push
lock
addl
cmp
cmc
subps
lret
sub
dec
mov
clc
rolb
pop
xor
imul
mov
jp
loope
or
cwtl
mov
ljmp
movsl
ljmp
inc
ds
inc
test
in
js
jnp
inc
and
iret
and
ss
and
mov
arpl
dec
insb
mov
push
aam
mov
scas
jns
leave
cmp
out
cmp
mov
adcl
adc
fidivrl
cmpsl
int3
lods
stc
pop
and
inc
test
sti
pushf
mov
lds
stc
dec
add
ret
fwait
add
fsub
jl
cmpsl
add
xchg
jae
pop
adc
pop
fidivl
or
imul
pop
repnz
rclb
inc
je
push
jns
mov
inc
jne
pushf
mov
sbb
sahf
popa
mov
mov
mov
inc
cld
jne
jp
cmc
out
test
jecxz
test
cld
data16
idiv
push
jbe
out
fldenv
jo
mov
or
cmpsb
sahf
stos
cmp
add
cmp
jo
lea
into
movsb
hlt
pop
and
xor
mov
lock
pop
jns
loope
shr
lock
mov
pop
sarl
lock
fwait
dec
xor
push
mov
rcrl
fstl
cld
outsl
sub
fdivs
mov
xchg
mov
enter
sub
sub
je
js
jb
push
cwtl
cmp
mov
bound
aas
insb
sbb
adcb
sbb
pop
shl
push
adc
dec
mov
mov
pop
icebp
in
cli
xchg
jp
jns
mov
xor
cmpsl
jp
outsl
lods
test
adc
and
movsb
adc
xchg
xor
adc
in
imul
jbe
aaa
int
inc
es
scas
sub
jmp
cmpsb
shrl
cmp
in
add
mov
xor
pop
fsubr
xor
repnz
mov
mov
test
adc
push
insl
les
out
adc
mov
sbb
bound
xor
sbb
and
sbb
ss
xchg
cld
mov
jmp
pop
jne
xchg
mov
push
loop
fwait
push
adc
out
jmp
mov
adc
sbb
and
lahf
mov
cmp
insl
sub
xor
ja
stos
lcall
and
fldcw
dec
sbb
cwtl
cltd
add
stc
add
lcall
bound
into
data16
adcb
inc
andb
outsb
out
jmp
sub
outsl
mov
lods
sub
pop
fidivrl
push
xor
pop
ficoms
sbb
cmp
lods
mov
adc
dec
pop
test
in
xchg
pop
push
jge
loope
sahf
jae
ljmp
sub
add
mov
inc
arpl
loope
and
sahf
jo
dec
push
hlt
mov
inc
pop
in
insl
pusha
fs
imul
aam
cwtl
add
imul
stc
sub
daa
outsb
push
adc
xlat
testl
mov
lds
in
std
leave
lods
iret
enter
ds
sbb
mov
cmp
xor
pop
mov
add
mov
sub
out
jl
and
push
pop
adc
decb
lret
mov
lods
and
jge
jo
std
shrb
pop
call
pushf
lea
fisubs
ret
dec
sbb
add
ds
dec
or
ss
jp
mov
and
lahf
mov
ja
sub
adc
inc
push
inc
lods
and
aas
cld
rcrl
adc
jmp
call
pavgw
cmovle
jnp
push
ljmp
push
outsl
clc
mov
repnz
scas
imul
jl
pop
xchg
stos
xchg
inc
or
roll
fwait
jns
lods
adc
sbb
out
or
push
inc
bound
test
bound
or
xor
xchg
pop
test
icebp
mov
push
pop
push
sahf
mov
arpl
pusha
rcr
imul
or
lock
sub
mov
in
into
jge
sti
jl
jnp
mov
test
sahf
xchg
sbbl
mov
into
popa
jb
ss
push
neg
cld
inc
out
push
outsl
pop
or
lahf
xlat
push
enter
jns
aam
repnz
mov
data16
in
jecxz
sub
dec
push
movsl
into
gs
fs
dec
cmpxchg
adc
ret
or
xor
dec
cmc
add
jp
out
jb
or
dec
fcom
mov
mov
push
outsb
icebp
popf
cmp
sub
mov
out
sti
xchg
add
or
push
out
jae
mov
arpl
or
jnp
or
orl
xor
ds
and
sbb
dec
enter
addr16
lcall
mov
jg
scas
rcrl
pushf
mov
lret
test
daa
sbb
or
pop
pop
int
test
sbb
idivb
call
mov
call
test
lret
dec
imul
mov
add
add
mov
ss
xor
std
push
sbb
cmp
jmp
and
mov
push
fnstsw
stos
and
stos
mov
int3
test
fcompl
inc
add
sti
mov
lahf
cmp
repz
inc
ds
mov
jnp
sbb
pop
push
loopne
testb
sbb
movl
jbe
inc
xor
mov
outsb
lds
sbb
mov
or
mov
arpl
cmp
sub
cmp
lods
int3
stc
add
mov
add
mov
dec
mov
add
ret
mov
aas
jbe
loop
sbb
inc
popw
jmp
mov
test
mov
inc
and
cmp
movsl
outsb
sbb
and
iret
in
repnz
xor
xor
clc
hlt
or
cmp
stos
pop
push
ss
inc
push
movsb
jmp
test
or
sub
xor
jo
gs
sub
call
adc
arpl
hlt
jbe
cmpsb
mov
lock
xor
jle
adc
fldenv
scas
jecxz
xchg
push
icebp
push
stc
inc
xor
or
add
movsl
popf
sbb
nop
mov
jmp
push
and
mov
popa
xchg
mov
pusha
popf
xor
stos
inc
xchg
xchg
jb
fnstcw
and
push
rclb
and
hlt
pop
repz
pop
xor
in
sub
xor
sahf
cmc
mov
inc
test
fistl
mov
dec
push
std
jg
aad
sub
das
repnz
clc
push
mov
fwait
inc
inc
movl
add
insl
xor
nop
push
xchg
inc
sbb
outsl
jb
add
icebp
and
mov
add
pop
xorl
jae
in
outsb
insl
sub
sub
rcrb
push
xchg
cmp
mov
cmp
aaa
outsb
mov
fs
jne
push
jp
adc
mov
xor
popa
rol
sub
leave
test
cmpl
test
out
dec
jbe
icebp
mov
cmpsb
insl
dec
adc
int
nop
mov
fwait
lcall
xor
pop
or
adc
movsb
aam
or
sbb
lods
or
mulb
pop
and
shrw
bound
mov
in
test
fst
rclb
es
in
rolb
dec
xchg
mov
je
push
lock
mov
das
sbb
shr
inc
das
clc
jne
jo
or
xor
in
lcall
push
xor
mov
fmuls
cmpsl
xchg
dec
sub
in
cmpsl
inc
lret
dec
jae
sahf
fwait
lock
mov
xchg
ret
push
lcall
mov
adc
add
arpl
fnstenv
sti
mov
fdivrs
decl
dec
sbb
test
xor
add
pop
sti
addr16
dec
sbb
arpl
xchg
lock
fsub
push
xchg
call
push
jp
sbb
aas
push
sub
cmp
push
scas
mov
cmc
pop
daa
sbb
iret
test
sbb
aaa
ds
pop
pop
inc
lret
data16
add
or
jl
fildl
add
jnp
fstps
sub
push
cmp
adcl
hlt
jo
dec
xchg
leave
add
ret
cmp
pop
jge
js
add
sbb
sarb
jnp
cmp
outsb
int
cmc
stc
sbb
inc
call
mov
aaa
xor
call
jns
mov
cmp
sub
cmpsl
neg
or
sbb
xchg
scas
xor
dec
mov
dec
ret
test
cld
jo
adc
sub
pop
ss
dec
xchg
xchg
nop
dec
cmpb
iret
fisttpl
iret
or
sbb
jmp
fisubs
ret
sti
shrl
les
xchg
add
aad
pusha
mov
jbe
xchg
movsl
repz
sub
inc
add
sub
mov
sbb
inc
daa
mov
xchg
cmpsl
mov
out
pop
jp
insb
enter
and
or
pop
sub
lret
in
xchg
mov
movsl
cmpsl
and
mov
xchg
sbbl
aas
and
lea
lock
mov
mov
pop
aam
xor
cmp
and
icebp
inc
jge
xlat
popa
and
mov
jp
cltd
mov
scas
pop
ljmp
mov
popf
cmpsl
addr16
call
fucom
pop
clc
mov
fistpl
mov
sarb
ss
les
jnp
pop
dec
sub
xor
xchg
and
adc
ds
enter
jb
or
inc
scas
pop
lahf
out
xchg
mov
xchg
addr16
leave
adc
mov
jb
adc
xorb
lea
pop
loop
rorl
subl
mov
mov
mov
jmp
out
xlat
jno
inc
add
pop
rcr
nop
dec
cmp
rclb
decb
js
popa
push
sbb
out
dec
inc
sti
sub
frstor
mov
ret
inc
xchg
dec
and
in
mov
repnz
or
dec
out
mov
bound
jo
xchg
xchg
and
jp
xor
and
int
mov
test
pop
push
inc
icebp
loopne
push
testb
iret
aam
pop
mov
loopne
adc
lods
bound
adcl
adc
rcrb
or
cmp
mov
inc
and
cmc
movsl
adc
ret
or
mov
push
aam
fs
push
repz
cld
mov
test
data16
lret
enter
dec
mov
cs
in
mov
jmp
aad
or
leave
clc
cmp
daa
stos
pop
jae
insl
test
nop
inc
bound
mov
pushf
repz
cmpsb
test
xchg
jno
leave
fs
loop
dec
fdiv
int3
ds
xor
shrl
xchg
fldt
repz
shl
add
jmp
inc
cli
pushf
lret
push
cmc
sub
std
popa
repnz
insl
adc
movsl
mov
pop
mov
xchg
and
mov
adc
add
xchg
xchg
sbb
push
xchg
aam
xor
add
push
mov
mov
adc
hlt
inc
add
out
js
xchg
pop
jge
xor
jno
add
dec
xchg
sub
xchg
mov
jne
xchg
or
inc
mov
mov
push
mov
lret
popa
bound
add
daa
cmp
in
xchg
inc
movsb
inc
in
repz
add
iret
xchg
dec
dec
inc
and
jns
stos
cmp
jns
mov
fnsave
pop
jmp
fdivrp
stos
cmpsb
adc
inc
pop
cld
stos
mov
dec
test
ret
test
add
jge
sbb
clc
aas
sbb
decb
lods
test
jge
loope
or
jnp
nop
mov
xchg
jmp
or
jno
shll
cmp
ss
sub
or
sbb
jns,pt
out
fsubrl
dec
sahf
pop
je
xchg
push
ds
repz
mov
jg
pop
mov
out
add
aad
lds
imul
es
fstpt
aaa
mov
inc
jle
push
in
iret
sbb
inc
jecxz
mov
std
dec
lods
fdivrl
dec
mov
dec
loopne
ljmp
icebp
dec
xchg
mov
repz
push
out
cmp
push
jae
push
xor
nop
outsb
mov
mov
insb
dec
sbb
insl
dec
repz
jle
dec
orb
push
icebp
xchg
es
repnz
lods
mov
shrb
aam
xor
lods
push
add
mov
lret
add
jle
inc
jmp
add
push
addb
push
add
lahf
cmp
push
push
xchg
ss
pop
test
push
insl
pop
shl
lods
jb
jmp
sti
mov
popa
inc
lahf
outsl
push
data16
out
jbe
mov
ljmp
cmp
add
mov
mov
sub
adc
xor
subl
add
mov
push
push
xchg
sti
mov
mov
jb
shlb
jg
sbb
hlt
dec
nop
push
loope
sbb
push
adc
aad
mov
push
push
pop
fistl
push
xor
jbe
push
adc
rolb
out
sub
pop
inc
pop
sar
das
pop
adc
insl
jbe
mov
sbb
mov
scas
in
outsb
cmp
ljmp
lcall
fidivrs
cmc
push
aad
push
inc
dec
cmp
testb
adc
pop
pop
sbb
fists
pop
shl
sti
testb
test
dec
jbe
adc
subb
pop
pop
sbb
das
in
push
jge
dec
mov
das
jle
inc
out
and
adc
push
jnp
es
shlb
adc
xor
mov
inc
mov
das
jno
inc
scas
or
jae
add
sub
stos
jo
xor
pop
mov
or
int
push
shl
adcb
sub
jae
and
adc
pop
mov
xchg
dec
shrl
cli
inc
daa
jbe
xor
cmpsl
mov
lea
adc
lock
shrl
les
mov
fstps
and
sahf
add
lods
test
scas
into
das
pop
mov
adcb
jmp
cwtl
mov
xchg
jb
xor
out
mov
insb
sub
daa
jae
push
les
mov
adc
lahf
in
nopl
mov
fnstenv
or
xchg
jb
test
push
sub
sub
out
push
fdivrp
sub
lods
movsb
ret
adc
mov
fimuls
loopne
test
jge
push
fmuls
aaa
in
jno
push
inc
movsb
cld
dec
mov
mov
jno
sub
inc
mov
outsl
pop
lahf
fstpt
inc
or
cmp
dec
push
mov
xchg
mov
push
scas
jg
xchg
lea
dec
insl
stos
jge
pop
mov
cmp
inc
iret
sti
and
push
enter
mov
mov
mov
mov
push
in
push
clc
aaa
movsl
mov
jb
fnstcw
imul
pop
negb
shlb
fsubrl
and
push
pop
jp
xchg
mov
ljmp
daa
mov
mov
jmp
push
dec
pushf
xor
aaa
inc
aas
das
sbb
dec
pusha
dec
adc
sbb
push
lea
jg
in
jb
ret
mov
das
stos
jo
icebp
or
push
in
icebp
data16
dec
and
aaa
andb
popf
inc
push
into
loope
push
cld
hlt
push
ret
inc
cmpsb
ret
mov
jmp
xchg
fdivl
pusha
lods
flds
sub
jge
or
clc
cmp
mov
inc
aam
bound
in
dec
push
pop
imul
ds
popa
lods
dec
inc
iret
sub
or
dec
jmp
push
fbstp
adc
cmp
xchg
orl
sub
push
xor
push
adc
mov
mov
pop
andl
push
jb
aad
pop
fldl
pop
mov
cmc
test
adc
and
daa
push
in
jecxz
roll
stc
aad
loopne
add
jmp
das
xlat
lods
add
std
cmpsl
idivl
cmc
sysenter
insb
or
cmp
ret
mov
mov
inc
gs
push
pusha
inc
sub
rclb
pushf
rdtsc
rorl
addb
xchg
aaa
mov
leave
jno
jge
out
push
in
ds
sub
pop
mov
cs
mov
out
add
repnz
sbb
fstl
les
fmuls
pop
sahf
cmp
dec
add
sub
daa
mov
push
add
mov
shlb
inc
popf
mov
rcr
mov
or
pop
fildl
divb
fsubrp
dec
fcoms
or
jae
mov
sub
in
sar
add
fsub
aaa
outsb
pusha
sub
ss
sub
rclb
into
sbb
or
call
sahf
fdivrs
mov
in
js
les
aad
jge
adc
imul
adcb
gs
mov
jo
aaa
mov
sbb
dec
mov
sbb
lcall
enter
or
pop
int3
fwait
xorb
decb
ret
mov
xchg
mov
data16
push
dec
inc
mov
jg
mov
lcall
and
and
push
jo
movsb
adc
push
xchg
rorb
xor
lods
es
fstp
jae,pn
lret
sub
leave
inc
je
add
clc
les
inc
jne
push
mov
jo
xor
adc
insl
mov
xchg
in
ja
mov
cld
xlat
leave
cmp
dec
mov
pop
mov
dec
sub
loop
cld
in
xchg
cmp
inc
leave
stos
movsb
cmp
and
inc
pop
movsl
lds
add
inc
xor
sub
and
ja
sti
push
and
sbbl
sbb
mov
xchg
imul
add
in
or
test
mov
adc
rorb
jge
and
sub
jns
or
xchg
add
divb
aas
mov
xchg
pop
sbb
push
mov
mov
pushf
dec
cmpb
jle
mov
test
aam
dec
fnstenv
and
add
pop
mov
imulb
jb
adc
dec
aam
les
clc
jne
add
loopne
pop
inc
push
in
mov
imul
adc
popa
jns
pop
jbe
inc
xor
sub
cmp
inc
and
sub
xor
aam
mov
hlt
and
cltd
xchg
fsubrl
imull
icebp
clc
jne
adc
cs
mov
push
rorb
push
es
sbb
in
ret
push
xor
shlb
lahf
jae
cmp
cltd
sti
imul
test
add
jg
dec
dec
repnz
aas
test
adc
fdivrp
dec
inc
fdivrl
das
inc
call
xchg
inc
inc
enter
out
loopne
sub
sub
sub
jno
mov
sub
js
adc
cs
cli
inc
movsl
das
mov
into
addr16
mov
xor
add
enter
mov
and
std
testl
test
xchg
xor
and
je
jecxz
jmp
add
call
xor
call
aam
data16
jae
pop
and
sub
aaa
insb
mov
inc
mov
gs
mov
jae
push
or
shrb
adc
mov
mov
movsl
shlb
push
push
adc
add
ja
sub
xor
push
push
sub
pop
jae
push
stc
mov
or
xchg
xor
mov
jl
and
xor
fmulp
and
shlb
scas
jne
xchg
and
cmp
jae
daa
add
and
popa
dec
arpl
sti
int
sti
jno
leave
jo
inc
addr16
sub
and
push
testb
cvtdq2ps
mov
addr16
push
sbb
nop
and
scas
mov
or
in
ss
das
icebp
or
repnz
sti
inc
cmpsb
mov
jmp
call
mov
adc
cld
js
mov
dec
ret
and
jo
xchg
addl
sbb
adc
xorb
ret
out
test
push
mov
push
pusha
mov
aad
inc
push
mov
inc
or
adc
ficoml
cld
mov
sbb
stos
or
and
inc
not
repz
dec
shrl
push
add
aad
mov
pop
gs
jo
sbb
nop
push
and
mov
sbb
cmp
dec
cmp
int3
cmc
mov
shll
ror
mov
push
xchg
cmpsb
stos
adc
popf
sbb
jge
sbb
fidivrl
pop
xchg
pop
je
lcall
pop
nop
sarb
cmp
push
sub
pusha
popa
ds
and
loop
adc
dec
sub
fildl
add
xchg
sub
frndint
shll
jp
jb
mov
mov
ja
inc
and
inc
je
cmp
inc
gs
les
fwait
mov
addl
dec
test
jge
imul
push
iret
lock
in
dec
jg
xor
mov
gs
sbb
stos
mov
lahf
xorb
ds
jp
jno
int3
popf
sbb
sub
mov
lret
cmp
jbe
xchg
pusha
popa
mov
jnp
outsb
xor
jns
pop
dec
cmc
fnstcw
inc
adc
mov
mov
outsl
jecxz
dec
fbstp
pop
add
push
cmp
add
inc
aam
dec
lret
sbb
loope
fwait
mov
jae
jp
xchg
shlb
push
fcmovnu
dec
dec
orl
mov
addl
xchg
popa
test
ds
stos
pusha
xor
or
stos
pop
cmp
xchg
sub
sub
cmp
adc
inc
ret
xchg
fcomi
inc
xchg
dec
rorb
in
xchg
sahf
out
push
mov
out
cmp
jg
sub
xor
pusha
pushf
push
push
ja
or
mov
testb
pusha
sub
testb
jo
mov
xchg
outsb
notb
test
inc
pop
bound
nop
push
inc
xchg
fwait
xor
xor
jmp
xor
cmc
add
push
cmp
sbb
mov
dec
leave
ljmp
mov
or
jno
mov
int
and
js
sub
jle
repnz
movl
mov
insl
sbb
and
pusha
ljmp
adc
sbb
outsb
mov
dec
pop
cltd
xchg
mov
fstpt
inc
pushl
mov
sub
pusha
pop
mov
mov
and
loop
adc
add
fsub
jo
pop
mov
dec
mov
loopne
pop
rcrb
sbb
lret
dec
mov
mov
icebp
pusha
js
xchg
dec
in
sahf
pop
adc
inc
xor
or
xor
mov
movsl
cmpsl
loop
mov
push
push
mov
ror
sahf
popa
mov
sbb
jae
dec
out
cmpsl
lcall
xchg
mov
aaa
aaa
pop
inc
push
xor
xchg
mov
jecxz
lret
cs
out
jnp
lret
insl
subl
pop
sbb
cmpsl
scas
xchg
pop
insb
mov
mov
test
daa
in
jns
cwtl
mov
aaa
pop
inc
mov
nop
sbb
ret
sub
pop
or
test
icebp
call
enter
fldl
movsb
sbb
xor
push
add
add
add
jecxz
sub
xchg
inc
adc
fucomi
cmp
and
nop
jb
lret
std
mov
mov
inc
scas
mov
fisubrs
outsl
inc
jb
jae
loopne
icebp
adc
sbb
and
sarb
lds
push
dec
in
and
sub
jle
pop
shl
mov
out
inc
pusha
into
jnp
sbb
cwtl
pop
in
push
mov
adc
cld
enter
popf
add
and
lds
lret
mov
sub
pushf
data16
mov
lock
mov
jge
int
and
in
adc
fcmovnbe
lods
pop
mov
xor
mov
hlt
enter
pusha
jae
daa
shlb
scas
repz
mov
test
inc
pop
out
movsl
adc
movsl
outsb
fstl
pop
stc
jae
mov
jecxz
pusha
int3
mov
mov
mov
addr16
push
inc
test
loope
sub
addr16
repnz
cmp
pop
int3
or
mov
popa
loop
inc
cwtl
notl
mov
jb
icebp
jno
or
shr
add
mov
or
daa
dec
addr16
sti
inc
lcall
repnz
icebp
cmp
clc
in
shll
or
pop
subl
dec
hlt
jnp
mov
sbb
lods
sub
ret
mov
jb
xorl
rorl
mov
jo
outsb
ljmp
add
stos
scas
rolb
cld
aam
fstpl
jno
scas
sarl
push
push
lret
and
cmc
xchg
jmp
sub
cmp
cmp
outsl
mov
pop
shl
push
or
arpl
push
shrb
jl
mov
sub
pusha
add
jne
jnp
insb
xchg
mov
ss
mov
ljmp
adc
adc
cmp
inc
adc
dec
imul
int3
pop
insl
movsb
dec
push
xor
mov
cltd
call
push
sbb
xchg
mov
xchg
fwait
rcll
movsb
push
decl
rorb
sahf
xchg
dec
sub
ret
adc
add
je
leave
loopne
lods
mov
inc
shlb
xchg
sbb
push
in
adc
pushl
jp
repnz
mov
rolb
mov
push
pop
sbbl
jno
aam
leave
movsl
cmp
add
or
in
inc
sbb
loopne
test
nop
or
inc
stc
dec
mov
pop
into
mov
or
fidivl
pop
out
cld
cmp
push
imul
ljmp
inc
xchg
mov
sarl
adc
mov
or
ss
pop
dec
cltd
jns
into
dec
lret
jo
cmp
jb
push
pop
inc
popa
jp
add
dec
jg
roll
jge
lods
mov
push
neg
jns
add
dec
pop
or
mov
pop
push
es
data16
mov
jb
scas
mov
pop
push
xor
rcl
mov
and
into
fstl
lret
or
sbb
mov
in
push
and
mov
inc
stos
mov
lcall
adc
dec
fisttpl
test
xchg
push
addr16
test
add
mov
fsub
lret
pusha
sbb
and
pop
dec
adc
rorl
pop
loop
ljmp
notb
and
or
ret
add
cmpl
xor
mov
mov
add
or
out
hlt
lods
dec
sbb
pop
je
fnstsw
mov
data16
fidivl
mov
pop
pop
pop
pop
fldl
and
fnsave
ja
xchg
in
fdivrp
cmpsl
push
dec
dec
inc
pop
push
sbb
bound
push
out
repz
pop
mov
test
imul
outsl
inc
xor
pop
popf
adc
mov
cmp
xchg
insl
ja
sbb
lret
push
push
aas
add
adc
push
push
imul
adc
xor
mov
push
dec
mov
das
xorl
aad
xchg
loope
jle
mov
jnp
lcall
dec
das
sti
imul
cmp
insl
in
rorb
mov
sub
sti
add
jo
in
mov
in
filds
pop
add
pusha
rolb
aas
fmuls
inc
aaa
xchg
scas
out
dec
adc
mov
pop
mov
and
repz
in
orps
inc
insb
fld
mov
lock
mov
clc
fldenv
xchg
push
jns
lahf
hlt
fsubl
inc
jp
fdivrl
jo
rcll
add
mov
and
or
rcrl
movsl
pop
xlat
movsl
int
dec
pop
lcall
push
out
nop
aam
adc
push
cmp
cmp
jns
push
popa
dec
or
lods
popf
int3
dec
cmp
stos
inc
mov
aaa
or
lds
testl
add
mov
fisubrs
or
jg
xchg
sbb
cli
lcall
jle
sub
inc
ss
xchg
or
xor
adc
mov
mov
js
icebp
pop
xor
cli
cwtl
scas
leave
repnz
cld
fnstcw
xor
push
mov
aas
mov
add
xchg
mov
jmp
addr16
movsl
xchg
xchg
ja
test
mov
or
ret
movsb
int
dec
dec
insl
test
add
adc
xchg
jl
ss
xchg
shl
repnz
sti
into
inc
dec
aad
out
xor
hlt
mov
les
xor
fstps
dec
ds
adc
jge
jge
mov
mov
push
int
out
dec
fstps
jns
mov
push
jne
popa
push
jl
xchg
push
gs
leave
push
addr16
loope
loopne
pop
ljmp
jp
je
movsb
and
mov
mov
cmp
pop
popa
cmp
pushf
push
dec
fnstsw
inc
sub
insl
add
subb
mov
sub
adc
pop
mov
sarb
cltd
inc
scas
push
rcrb
fs
or
inc
rorl
stc
clc
mov
adc
cmp
mov
loopne
pop
mov
xchg
sti
push
add
and
or
inc
mov
or
sbb
or
fldenv
nop
jbe
daa
or
jae
shlb
inc
mov
mov
jns
hlt
mov
in
mov
sahf
fistpl
add
ds
cs
test
sub
dec
fstpt
adc
push
cmp
movsl
push
into
mov
sbb
call
or
std
rcll
dec
fcompl
subl
ret
mov
mov
push
push
cmpsb
std
ret
in
sbb
adc
xor
out
in
xchg
dec
pop
mov
mov
inc
pop
test
and
ret
and
inc
or
inc
push
cmc
les
shlb
mov
cwtl
sub
jecxz
mov
mov
sub
mov
cmpsl
test
nop
push
punpckhbw
fldt
lock
pop
dec
sbb
xchg
push
subb
jo
ret
int3
jo
popa
gs
lcall
lds
ret
push
in
pop
xchg
xor
pop
cld
scas
inc
aam
cmp
lcall
idivl
jp
xor
inc
je
mov
cltd
orl
sbb
dec
imull
xor
imull
xchg
jecxz
lea
xor
popa
sub
or
push
or
dec
dec
out
adc
push
sahf
push
mov
jmp
or
push
mov
mov
movsb
xor
push
pop
fstpl
sbb
push
lcall
push
fdivl
mov
test
cli
adc
sbb
inc
cld
cmp
or
test
aad
ret
arpl
pop
mov
cwtl
pusha
mov
pop
stos
les
in
xor
and
mov
rcr
rorb
jns
clc
push
add
jo
lret
dec
jmp
sbb
push
mov
outsl
push
mov
fcomps
adc
dec
pushf
sub
scas
faddl
into
aas
outsb
ret
dec
imul
loope
les
das
pause
add
std
stc
xchg
sahf
cmp
add
mov
push
je
or
fnstenv
jge
cmpsb
xchg
mov
xor
sub
fisttpl
jnp
pop
in
pop
push
pusha
data16
pop
dec
add
movsb
js
mov
cli
out
es
sub
dec
ret
pop
cmp
push
aas
call
pop
pop
sub
adc
cmc
lods
sub
and
dec
fcoms
leave
mov
test
sbbb
cld
cld
mov
pop
and
cltd
pop
stos
lret
add
pop
or
lcall
sub
int
xchg
mov
repnz
sahf
in
adc
fwait
in
scas
push
test
sbb
lahf
xchg
or
scas
js
sbb
add
ret
fcomp
js
xchg
shlb
and
lds
push
inc
jl
ljmp
das
push
dec
and
jl
inc
xchg
inc
notb
and
sub
arpl
loopne
aam
dec
mov
push
dec
jns
sub
dec
or
dec
inc
mov
leave
fiadds
mov
out
cmp
push
insl
pop
test
cmp
or
xchg
jl
mulb
dec
aad
sbb
push
fisubs
scas
jmp
add
andl
imul
cld
pop
xor
jg
mov
nop
xor
xchg
out
dec
pop
cmp
ret
xchg
sub
push
outsb
sub
xlat
pop
xchg
sbb
movsl
cs
shl
and
push
cli
cltd
or
andl
lea
push
pop
dec
cmp
adc
mov
or
sub
mov
rcll
jae
dec
mov
cmp
js
imul
jb
inc
in
addl
ja
pop
dec
movb
or
and
dec
push
fs
inc
mul
jns
shrb
sbb
inc
xor
cvtpi2ps
mov
arpl
add
inc
addr16
lcall
mov
es
jmp
and
lods
mov
adc
add
dec
loopne
add
xchg
push
adc
inc
call
nop
fwait
loop
stos
push
aas
ss
cld
jbe
dec
test
pcmpgtb
push
dec
stc
xor
adc
adcb
mov
xchg
push
pop
fwait
rclb
pop
icebp
cmpsl
repz
fnstcw
fs
push
cmp
leave
xchg
inc
repz
insb
cmp
adc
cmpsl
ds
jmp
fs
cld
fsubl
arpl
push
dec
dec
popa
cmp
push
icebp
or
inc
or
xor
dec
lahf
cmc
in
sub
adc
inc
mov
or
out
pop
inc
xchg
push
pop
dec
stc
test
inc
sbb
and
push
pop
rol
jmp
movsl
pop
shl
xchg
outsl
push
mov
loope
jmp
data16
call
push
push
mov
stos
out
jle
mov
cmp
or
aaa
test
xchg
xchg
fdivrl
xchg
or
xchg
adc
call
rorl
jmp
leave
in
xchg
fcmovnu
mov
fsubs
push
cli
mov
rolb
xor
imull
push
sbb
addb
mov
push
xchg
bound
pop
add
outsl
dec
push
xchg
mov
out
and
popf
fbstp
stc
test
and
into
orl
ja
mov
inc
lods
xor
jg
cmp
sub
pop
push
fdivrs
add
aas
clc
mov
shrb
mov
cmpsl
mov
ljmp
sbb
push
nop
dec
jmp
scas
xor
xchg
bound
jl
xchg
mov
cmp
mov
sub
call
in
xchg
shrl
aam
dec
gs
cmc
mov
sbb
or
sub
cld
inc
mov
clc
lahf
jbe
lret
leave
push
mov
xchg
sbb
bound
lea
das
outsl
dec
jne
fsubp
push
out
cltd
push
pop
aad
mov
push
pop
int
mov
add
sbb
mov
xor
mov
pop
mov
popa
mov
inc
pushf
sub
pop
jns
adc
outsb
je
lds
mov
call
push
push
inc
jnp
mov
cmp
out
dec
cmc
cmp
add
add
std
cltd
sub
rclb
imul
insl
dec
gs
and
dec
or
int3
popf
xchg
pop
jp
fdivrl
sbb
inc
aas
je
gs
shl
mov
lret
fistpl
loop
dec
jp
mov
push
std
iret
js
adc
jl
xor
loope
out
sbb
sub
out
sbb
jle
push
push
aam
push
jge
cs
adc
fsubl
adc
cmc
insl
mov
gs
dec
dec
imul
out
inc
push
cmp
cmpsb
cmp
movsl
and
mov
and
jns
cmp
sbb
add
jecxz
mov
ret
mov
dec
mov
cmpsl
bound
inc
add
jae
pop
mov
lea
xchg
nop
jbe
iret
and
add
mov
aad
ret
add
test
js
xor
sub
nop
ja
add
xchg
dec
sub
roll
xchg
xchg
ljmp
ja
into
int
lret
jne
jg
stc
fcomps
cmp
mov
mov
mov
sbb
clc
adc
sahf
mov
arpl
cwtl
stos
xor
cmp
pop
inc
fisttpll
lcall
xor
sub
xchg
test
das
sti
add
or
adc
leave
imul
xor
xor
lahf
push
aam
out
cmp
gs
push
mov
in
xchg
xor
cmp
sub
imull
xchg
stos
popa
lods
or
adc
aad
mov
mov
shl
inc
hlt
std
cmp
add
cltd
xchg
out
add
dec
jle
test
in
or
xor
sub
or
iret
pop
xor
jp
push
jp
sbb
pop
fcmovbe
daa
xchg
xor
lock
ds
mov
push
pop
in
inc
adc
mov
sub
sbb
inc
ljmp
pop
lds
inc
test
xor
imul
iret
outsl
sbb
addr16
push
pop
je
xor
js
sub
inc
mov
dec
std
rcrl
js
pop
sarl
flds
jge
divl
mov
mov
jle
call
push
dec
xorl
fisubl
xchg
rcrb
imul
mov
and
sub
mov
add
lods
jbe
stc
sbb
xchg
fsts
fisttpll
in
aas
imul
dec
mov
scas
push
call
rclb
out
in
outsb
push
fsubrs
aaa
push
cmp
aas
add
jno
lea
cld
mov
sahf
adcb
pusha
insl
mov
xor
popf
or
or
dec
cmc
mov
inc
aam
lods
jge
dec
lea
lcall
imul
repnz
jecxz
xor
mov
or
pop
sub
xor
bound
stos
cmpsl
and
sarb
scas
mov
shlb
inc
je
test
add
xor
and
mov
adc
test
repnz
adc
sarb
dec
xor
repz
cmp
stos
xlat
mov
fs
test
icebp
mov
cmp
dec
test
add
inc
add
sub
jns
mov
push
add
ds
les
add
pushf
fwait
sub
std
mov
stos
in
pushf
loop
in
xor
xor
cs
mov
mov
lds
mov
cmp
push
pusha
iret
inc
into
fwait
lods
sbbl
stc
mov
sub
neg
lret
add
mov
add
jno
jns
es
sub
dec
sbb
mov
cmpsl
sahf
mov
out
mov
pop
fnstsw
cmp
ret
pop
daa
adc
test
sti
push
push
mov
mov
mov
sahf
popf
push
inc
pop
adc
idivl
push
and
push
nop
inc
lock
cli
pop
sti
xorb
out
cmpl
xor
and
sub
push
xor
stc
nop
cmp
mov
and
shr
shll
cs
enter
stc
mov
aad
sti
adc
dec
mov
dec
mov
cli
jo
sarb
pop
xor
stos
fidivl
out
pop
push
sbb
pop
popf
filds
in
outsb
inc
pusha
inc
test
mov
icebp
inc
lods
int3
jb
cld
adc
mov
jb
lcall
outsl
xchg
mov
fidivl
pop
movsl
push
loopne
jnp
popa
xchg
or
scas
adc
insl
add
sbb
je
or
fucomip
es
sti
push
out
rcrb
pop
repnz
lcall
scas
dec
shll
fs
lods
pushf
jmp
pop
test
mov
mov
shll
pop
and
les
push
mov
in
test
lods
and
xor
aaa
jns
out
pop
jecxz
lods
push
add
sub
mov
or
popa
iret
cmp
stos
adc
out
adc
sub
adc
xor
push
dec
cmpb
notb
mov
je
rcl
adc
lcall
aam
xchg
inc
sub
mov
and
das
jg
xor
in
ficomps
pop
jp
xor
sbb
jo
and
popf
mov
fsincos
sbb
cmpb
push
xor
adc
inc
add
push
mov
dec
sbb
out
jo
xor
rcrb
pushf
lods
es
xor
xor
jae
xor
lods
ljmp
xlat
pop
enter
mov
cmp
add
xchg
xchg
sbb
jnp
lahf
popf
push
mov
sub
inc
lret
jo
mov
jg
add
sarb
jecxz
mov
in
addr16
xchg
aad
movsl
mov
shr
insb
fisttpll
mov
pushf
or
pop
fdivrp
push
in
or
shlb
pop
adc
jnp
pop
stos
jmp
lcall
into
in
pusha
enter
lret
les
clc
testl
ret
jns
add
sahf
adc
in
dec
xchg
push
adc
adc
push
lahf
lock
mov
fisubrl
adc
mov
orl
outsl
inc
push
dec
dec
imul
push
mov
mov
lods
jmp
loope
repnz
inc
jo
repnz
mov
mov
jmp
inc
out
inc
mov
mov
lret
push
jp
shll
xor
fimull
addr16
sbb
ret
cmpsl
cmp
inc
push
or
scas
scas
arpl
sbb
pop
and
cmp
in
xor
lods
fidivrl
push
out
jns
stc
pop
or
das
arpl
test
or
jg
or
lahf
mov
sub
sti
push
push
pop
je
adc
lods
xchg
das
jecxz
pop
mov
iret
fidivrs
packuswb
jp
xor
mov
pop
nop
sbb
addl
jp
cmp
cmpsb
cmp
mov
shr
ret
movl
pop
pop
scas
out
cs
jge
ja
mov
rclb
loopne
loop
ja
sti
shll
cld
sub
add
jmp
add
xor
ljmp
stos
shrl
idivb
imul
cmpsl
push
pop
jo
data16
mov
pop
je
pop
push
aaa
xlat
orl
call
cli
mov
jg
mov
jle
dec
cmp
jg
in
lcall
repz
and
test
int3
mov
cmp
xor
xchg
mov
fisubrl
sbb
add
push
ret
fwait
push
lods
rcr
push
rcrl
int
pusha
insl
or
subl
rclb
add
lret
sbb
in
xor
add
xchg
dec
jmpw
xchg
das
or
ja
xchg
je
pop
aad
jnp
dec
imul
popa
push
loop
mov
add
push
scas
clc
fdivl
jge
and
inc
dec
in
add
mov
repnz
lret
call
xor
adc
test
push
mov
add
inc
rorb
leave
and
aas
xchg
cmp
sbb
add
cmp
shll
in
in
sbb
push
sbb
call
out
inc
loopne
inc
xor
mov
iret
add
ret
cmp
clc
lret
cltd
es
js
inc
fisttps
sbb
test
sbb
int3
in
push
lret
xchg
push
fidivrl
xor
cmp
sbb
pop
sub
lods
orb
mov
xchg
mov
lods
imul
fucomi
out
and
xor
outsb
not
push
scas
inc
mov
sub
lret
loop
pshufw
push
dec
aaa
add
out
or
or
jmp
inc
in
push
mov
mov
aam
adc
out
popf
mov
lods
fsub
fcoms
in
push
mov
clc
subb
pop
out
push
dec
xorb
jle
mov
or
add
out
ds
ja
stc
jno
cwtl
rorl
gs
popl
sti
dec
and
lahf
fsts
mov
into
adc
outsw
gs
fbstp
xchg
xchg
arpl
mov
dec
adc
mov
add
push
cltd
push
inc
je
sbb
repz
pop
mov
xchg
pop
mov
sub
les
aam
pop
xor
aas
sbb
ret
mov
ficompl
imul
stos
orb
mov
push
inc
jbe
mov
insb
xor
dec
push
int3
pop
stc
mov
push
movb
mov
int3
std
sbb
add
sahf
popa
rcrl
ret
das
sub
cltd
mov
add
cmpsb
mov
test
je
sub
push
mov
in
sbbl
outsb
test
cmc
pop
jns
xchg
jno
fldcw
xor
cli
loopne
mov
pop
dec
test
mov
in
mov
add
and
fiadds
or
lock
mov
stos
inc
imul
adc
lahf
dec
scas
and
inc
call
cwtl
cmp
loop
xchg
xor
pop
outsb
jmp
pop
mov
imul
negb
mov
addl
lods
and
test
int
lret
lods
and
xor
adc
imul
inc
inc
lret
xchg
mov
add
adc
xlat
and
in
xor
pop
add
sti
xor
enter
mov
in
dec
popa
arpl
push
adc
leave
scas
push
xchg
mov
out
hlt
insl
mov
cltd
int3
cmp
nopl
rolb
ja
loopne
pop
data16
sbb
cli
rcr
pop
cmp
sbb
add
push
xchg
mov
gs
xor
enter
dec
scas
mov
stc
sti
lcall
pop
sahf
pop
popf
rcrl
jle
sbb
cs
cmp
paddq
sub
add
sti
mov
mov
mov
sub
xchg
jmp
movb
daa
jmp
insl
rcrb
adc
push
jecxz
jecxz
shll
sahf
mov
jg
addr16
stos
insl
popf
fnstsw
mov
push
lahf
imul
inc
xorl
not
fsubr
fstpl
sbbl
dec
mov
daa
outsb
xchg
fldpi
mull
mov
sub
lahf
popa
stc
xor
aad
fmuls
mov
fiaddl
or
mov
mov
mov
cltd
adcl
xorb
arpl
fs
adc
adc
push
mov
mov
repnz
aam
inc
and
movsl
daa
test
inc
in
popf
xchg
jo
push
mov
mov
cmp
ret
cmp
cltd
jae
lea
repz
pop
hlt
loop
and
mov
sbb
mov
add
push
out
inc
sub
inc
lds
outsb
cwtl
mov
inc
add
adc
adc
cmpsl
dec
popf
mov
shll
cmpsb
xchg
test
cli
xchg
stos
es
push
jmp
lods
inc
sub
shl
adc
nop
adc
ss
out
and
div
fs
mov
cmp
in
xchg
rol
dec
dec
adc
mov
dec
inc
xor
adc
jnp
outsl
and
clc
sbb
dec
pop
dec
repz
sub
test
cs
in
aaa
in
mov
popa
jl
popa
ret
lea
cmpsb
pop
xchg
xchg
dec
inc
jo
shr
sub
rorl
pop
jg
mov
xchg
xchg
inc
dec
scas
in
inc
enter
add
pop
lds
sub
insl
or
in
sub
jle
add
and
fists
jbe
in
stos
or
and
adc
sub
icebp
into
hlt
mov
adc
sbb
jecxz
mov
dec
push
fcomps
and
cltd
pusha
aad
xor
repnz
jge
mov
or
mov
dec
fcoms
xor
test
dec
fsts
mov
xor
mov
into
movsl
inc
addr16
inc
arpl
dec
or
mov
lahf
pusha
dec
jmp
lods
or
sbb
jg
inc
or
or
test
push
cs
stos
lods
iret
fildl
or
popa
push
mov
out
cs
jno
lds
clc
sbb
inc
jne
cmc
hlt
fdiv
shr
and
and
loop
dec
jb
leave
insb
pusha
jne
inc
jae
adc
mov
scas
jno
mov
dec
nop
pop
xchg
xor
cli
inc
sub
cmpl
or
loopne
and
push
movsl
ljmp
mov
sbb
jmp
dec
xchg
popf
mov
xchg
push
jne
stos
sbb
dec
les
aam
clc
xor
test
ss
ljmp
cmpsb
rcll
or
and
jno
dec
je
mov
nop
pop
cmp
mov
in
pop
out
aam
mov
or
setl
push
inc
sbb
adc
push
lret
in
es
scas
clc
loope
lcall
push
mov
cld
out
mov
push
daa
pop
fstl
cmp
sub
mov
push
aam
mov
fdivl
mov
push
jmp
mov
xchg
cltd
stos
sahf
rcll
adc
mov
sub
fcmovne
and
cltd
adc
aaa
out
push
pop
fwait
hlt
loope
lods
mov
add
push
or
adc
cmpsl
add
mov
mov
movsl
cmp
adc
outsl
mov
nop
leave
sbb
sub
mov
xor
dec
add
dec
pop
push
je
test
mov
sbb
test
mov
push
xlat
jo
fistpl
aam
ror
in
dec
jmp
notb
int3
loopne
dec
push
leave
mov
hlt
std
or
jnp
mov
sti
jp
pop
rcrb
jno
aam
cltd
outsl
mov
sti
sub
mov
jns
mov
jp
and
ljmp
sarb
sbb
fdivs
cmp
dec
sbb
mov
sub
add
xchg
aas
mov
mov
dec
pop
ss
xchg
jo
pop
mov
mov
ret
ret
sbb
mov
add
les
add
pop
mov
out
or
scas
subb
in
mov
out
in
das
sbb
push
in
fwait
mov
ret
push
popf
xchg
test
mov
rcll
stos
push
pop
xor
icebp
adc
mov
jne
insb
gs
aam
sub
jp
adc
xchg
mov
push
mov
inc
mov
xchg
and
and
inc
jae
sbb
cli
cmpsl
rdtsc
outsb
sub
add
mov
pushf
pop
enter
ror
loope
sbb
dec
mov
stos
sti
push
flds
inc
lcall
cmp
pop
fwait
and
xor
jmp
stc
fsts
pop
loopne
xor
cmp
negb
sub
loope
cmpsl
inc
iret
stos
and
stc
addr16
and
cwtl
outsb
js
inc
movsl
fwait
jne
mov
jo
jo
jp
cmp
sbb
jnp
xchg
mov
cmpsb
jle
insb
inc
inc
and
sbb
test
lret
scas
cli
add
imul
aaa
add
xchg
mov
jns
jmp
sub
sbb
jle
cld
fwait
loope
iret
in
int
push
adc
sub
lret
cmp
mov
rep
pinsrw
sbb
pop
imul
arpl
arpl
mov
jns
xchg
xchg
push
sbb
popa
sahf
lock
push
push
sbb
dec
fsubl
je
push
lcall
popa
mov
sbb
lret
pop
xor
pop
mov
add
fwait
mov
pop
push
mov
inc
aaa
jmp
fwait
pop
or
jge
ljmp
mov
xor
jecxz
or
scas
cmp
hlt
int
in
xor
mov
imul
das
cmp
xlat
mov
mov
cltd
and
in
inc
push
mov
jb
pop
arpl
and
lret
int3
and
mov
sub
mov
sbb
adc
cmp
xchg
lret
mov
and
mov
push
push
add
jmp
pop
arpl
fadds
fistpll
sub
or
pop
scas
into
mov
int
jg
cli
jns
ret
jmp
imul
dec
imul
xor
mov
movsl
nop
sbb
sub
push
cmpsl
dec
ret
jl
adc
ss
jns
rorl
stc
test
test
sub
cmpsb
in
mov
jbe
and
call
imul
and
dec
xchg
int
push
adc
out
sbb
sub
stos
repz
jb
xor
in
sbb
clc
cltd
mov
arpl
jnp
mov
lods
push
lock
xchg
in
jmp
sbb
mov
les
cmp
add
leave
cmc
add
cmc
in
cmp
fcoms
mov
jne
pop
fisttpl
idivb
mov
nop
fldenv
cwtl
pop
xchg
xchg
adcb
addb
cmp
and
mov
push
insb
in
daa
xchg
icebp
dec
pop
scas
outsb
xor
push
call
mov
fildll
scas
ret
pop
or
js
inc
lock
sbb
aaa
leave
inc
mov
xlat
mov
call
cmp
int
shr
mov
mov
cmp
push
test
xchg
cmpsl
and
popf
sbb
push
xchg
outsb
lahf
outsl
das
add
fists
jp
sub
mov
mov
jge
xchg
mov
xor
mov
pushf
mov
sub
ret
xchg
arpl
stc
popa
ljmp
rclb
iret
es
fists
and
adc
add
lea
mov
push
test
cwtl
dec
jbe
and
push
jnp
pop
jnp
pop
add
push
shl
loop
sbb
lcall
xchg
cwtl
jmp
and
push
xor
xchg
pop
pop
inc
jle
lds
inc
imul
gs
push
pop
fld
in
push
orl
in
mov
mov
not
das
loope
push
cmp
cli
dec
aaa
aad
mov
pop
mov
xchg
push
das
adc
lods
fiaddl
sbb
fiadds
es
push
push
mov
jle
clc
pop
sub
cmp
insb
push
sti
daa
stos
mov
outsl
dec
pushw
adc
jne
stos
arpl
fwait
jns
ret
aam
mov
popf
pop
mov
popl
push
xchg
loopne
xchg
inc
dec
adc
push
lock
jne
cld
sub
and
loop
inc
cmpsb
fmuls
call
repz
cmp
xchg
sbb
add
es
cmpsl
popf
add
adc
out
mov
cltd
inc
pushf
stc
add
aad
sarb
jmp
push
das
in
popa
mov
mov
dec
dec
inc
xor
inc
and
stos
xlat
iret
dec
jmp
pop
sub
or
dec
lods
jg
mov
mov
int
into
mov
rolb
cwtl
xchg
loope
stos
mov
sahf
test
mov
out
inc
pop
mov
pusha
add
popf
or
push
push
into
in
cmp
shlb
out
dec
mov
push
ret
lea
mov
ljmp
push
adc
psubw
cli
adcb
adc
mov
jno
dec
sarb
iret
test
or
push
push
rclb
pop
aaa
jnp
mov
insl
lods
cmpl
stos
xchg
into
enter
xchg
iret
adc
cmp
icebp
fistpl
xchg
inc
cmpsb
jno
pop
test
stos
pop
loop
cli
aam
xchg
mov
mov
inc
inc
push
pop
daa
dec
in
cltd
aas
insb
lret
sbb
lret
insl
aas
mov
mov
mov
sbb
mov
sbb
fcmovne
das
push
enter
pop
sub
dec
shrb
cmc
sbb
jg
cmp
hlt
loope
sub
imul
add
dec
fimuls
cmp
pop
lock
sub
jo
pop
push
das
adc
mov
mov
aad
adc
push
dec
mov
jbe
jmp
sbb
rcr
stos
mov
sarb
mov
cmpsl
movl
jecxz
out
pop
lret
xchg
push
xor
add
add
repnz
mov
sub
push
in
nop
adc
xchg
jo
scas
add
xor
and
push
pop
or
sti
adc
xchg
nop
sbb
jo
fisttps
mov
fimuls
cmpsb
or
push
test
dec
fs
dec
adc
das
cmpsl
flds
xchg
lret
and
pop
lods
nop
fstpl
adc
adc
je
adc
ds
les
sub
push
cmp
jb
add
nop
inc
dec
xchg
push
fdivrl
sti
scas
xchg
out
mov
test
notb
sbb
imul
stos
dec
add
inc
sbb
test
movsb
pop
pop
push
fdivrl
pop
adc
je
jmp
pop
mov
iret
ja
add
push
adc
fisubrl
lret
cmp
sbb
imul
or
inc
loopne
test
lahf
add
addr16
jae
sub
test
inc
test
pop
ficoml
jmp
insl
mov
adc
adc
std
out
idivl
adc
inc
add
sarl
mov
xlat
jb
mov
pop
lea
int3
imul
mov
in
adc
shlb
repnz
jb
ljmp
mov
into
pop
sti
pop
sbb
aad
xchg
sbb
push
sub
mov
loopne
adc
sub
test
ret
push
movsb
je
add
shlb
clc
mov
xchg
lret
mov
mov
lds
mov
or
adc
xchg
mov
out
push
adc
mov
sbb
and
jno
mov
lea
pop
cmp
movq
stos
shrl
jg
push
cli
andb
jecxz
cmp
fcoml
lds
ror
incl
rcll
shl
mov
cmpb
cmc
ljmp
pop
push
imul
xor
dec
pop
inc
sbb
mov
in
xchg
mov
rcl
cmp
lret
ja
aad
and
mov
lret
sahf
repnz
insl
pop
dec
popa
daa
ror
je
add
imul
sub
lahf
movsl
xchg
in
jecxz
and
xorl
sbb
xlat
cmc
inc
and
lds
sbb
and
pop
cltd
xchg
popf
daa
or
jnp
mov
inc
dec
hlt
push
cmp
xchg
scas
loop
outsl
loopne
fdivr
test
movsb
push
hlt
push
lret
movsl
adcl
or
jns
cmpsb
jg
clc
push
insb
cmp
lahf
out
sbb
lock
push
mov
add
mov
out
add
std
movsb
mov
push
dec
xor
push
sbb
xchg
cmpsb
dec
mov
movsl
mov
or
push
into
fisttps
cmpsl
in
hlt
sbbb
sbb
lahf
shrl
adc
dec
push
nop
add
add
adc
enter
cmp
mov
xchg
jne
in
cmp
inc
js
mov
and
sbb
test
daa
and
pop
jae
mov
fsubp
int3
insb
mov
pop
cs
js
stos
rdpmc
stc
stos
xchg
shl
jbe
popa
fwait
or
cmpsl
mov
push
mov
std
repnz
mov
cmp
pop
jmp
out
dec
das
cwtl
fwait
out
fdivs
fmuls
mov
subl
inc
clc
pushf
push
dec
stos
test
sbb
sahf
mov
mov
in
inc
shrb
les
je
sbb
xchg
sbb
test
sub
outsl
adc
jg
xchg
jns
mov
shlb
push
sbb
in
into
repnz
and
repnz
flds
aaa
sub
jl
mov
mov
inc
cwtl
jo
fldenv
daa
fwait
sbb
fldl
fistpl
movsb
push
mov
stc
sub
dec
inc
jmp
in
sbb
cmp
mov
jl
test
in
sub
ret
inc
pop
lods
in
repz
in
jae
rcrb
sahf
sub
cli
dec
mov
inc
sub
jno
movsl
daa
call
jo
jbe
cvtps2pd
cmp
mov
inc
xor
ds
in
pusha
sub
sbb
inc
in
pop
or
sbb
popa
and
xchg
push
or
loope
out
mov
push
xor
movsb
jl
inc
jb
mov
mov
std
pop
lods
mov
cmc
std
push
push
pop
iret
mov
aam
mov
daa
add
inc
inc
xchg
popf
movsb
inc
fs
hlt
mov
arpl
pavgb
fidivl
mov
ds
jae
sub
pop
jle
outsl
mov
fcompl
mov
ja
add
adc
mov
xchg
mov
insl
hlt
mov
es
xchg
adc
data16
inc
adc
or
stos
mov
add
in
fnstsw
shrb
stos
pop
xchg
adc
lahf
je
loopne
subl
ret
jae
rorb
icebp
repnz
mov
inc
jno
xor
push
adc
call
push
test
xor
pop
add
fnstenv
mov
cmp
jge
adc
dec
pop
call
movsb
fisubrl
aam
lods
cwtl
stos
adc
sub
stos
clc
push
mov
xchg
jge
scas
cmp
test
mov
cmp
sub
mov
or
lret
icebp
sub
icebp
lcall
mov
jbe
add
push
jl
cmp
das
addb
test
inc
lcall
push
inc
subl
lods
xor
ljmp
ds
jo
mov
call
mov
test
mov
jnp
pop
daa
add
arpl
jno
dec
mov
jo
mov
push
dec
cmp
and
mov
and
add
popf
scas
jne
sub
jl
dec
fdiv
cmp
ds
jge
inc
rorb
bound
aaa
dec
add
xchg
mov
or
push
mov
pop
and
rol
or
fmul
xchg
sub
inc
lock
mov
cwtl
mov
adc
insb
push
testb
sbb
test
or
cmp
sub
cmpsb
mov
ret
test
or
pop
add
jge
pop
cwtl
inc
mov
inc
add
pop
jns
mov
mov
adc
cmp
enter
lods
push
pop
xchg
sbb
cmp
and
gs
leave
xchg
jecxz
mov
inc
out
sbb
jbe
jmp
xor
adc
roll
negb
inc
imul
roll
adc
jne
mov
jb
sbb
pushf
dec
loope
or
add
fsubs
mov
movsb
aaa
hlt
mov
fucom
jle
jge
mov
sub
mov
stos
pop
lods
xor
fistpll
test
jg
outsb
push
adc
mov
xchg
push
mov
scas
add
stos
lcall
cmpsl
ljmp
lods
rorb
mov
push
jmp
cmp
xor
sub
repnz
fists
push
cmc
mov
adc
gs
cmp
push
pop
pop
push
xorl
or
cmp
mov
gs
pop
cwtl
ss
aas
jle
adc
btr
test
jle
pop
jno
in
jle
and
xchg
cmp
pusha
and
mov
mov
out
icebp
push
mov
xchg
popf
div
mov
subps
imul
fadds
jae
fcomps
sub
push
loope
pop
or
fs
xchg
dec
lds
das
add
xchg
jecxz
inc
movsb
pop
adc
cmpsl
jg
loope
dec
jp
adc
lods
repz
rcrl
loopne
sub
rorl
xor
clc
arpl
xchg
or
sub
in
push
scas
ficoml
cmpsb
sbb
cwtl
shrl
sbb
xchg
stc
mov
push
in
std
dec
orl
fwait
aad
mov
roll
pop
pop
outsb
test
gs
adc
dec
insl
rcll
pushf
outsb
fstpl
pop
and
pusha
and
mov
fiadds
pop
push
dec
cmp
ljmp
xchg
sub
push
sub
mov
inc
add
into
in
bound
fmul
adc
mov
push
sahf
mov
or
jl
add
jge
mov
cmpsl
les
je
jb
ss
mov
int3
fcompl
mov
cmp
mov
cmp
mov
xchg
mov
mov
sbb
shrb
mov
stos
pop
jne
rolb
movzwl
loope
push
xchg
jb
jg
jecxz
imul
inc
push
enter
or
xlat
stos
xlat
repz
jge
push
fcos
mov
sbb
and
in
lock
xor
inc
ror
imul
sbb
jle
aam
add
inc
pop
cltd
or
es
mov
push
mov
adc
addr16
into
pop
cmp
pop
push
outsb
and
in
daa
jb
movsb
inc
lret
pop
cs
pop
mov
aad
aad
mov
mov
pop
insl
enter
xor
lods
call
adc
add
stos
in
mov
add
jg
aam
gs
inc
sub
stos
sub
dec
cmp
jg
and
pop
inc
cmp
loope
and
and
inc
push
jbe
xchg
or
imul
fidivl
sub
stc
outsb
fwait
insl
mov
mov
in
mov
stc
imul
out
loopne
lret
and
xorl
mov
mov
movsb
xor
in
nop
dec
repnz
jno
mov
mov
mov
imul
sbb
lcall
or
inc
dec
cmp
mov
fistl
loope
xor
sub
dec
or
add
add
addr16
jb
imul
outsl
or
push
rorl
fisubs
ljmp
jbe
jge
in
lds
insl
icebp
jmp
inc
and
hlt
dec
pusha
adc
mulb
pusha
pushf
xlat
sarb
loop
sub
adc
out
lret
sub
fisubrs
sti
dec
mov
mov
xchg
imul
test
int
mov
pop
jp
xor
xchg
popa
enter
cmp
jne
sub
das
in
es
ret
je
hlt
mov
leave
js
cltd
sbb
dec
dec
inc
ss
pop
mov
out
iret
dec
in
lcall
add
jp
jle
push
add
insb
sub
mov
add
sbb
pop
xchg
fwait
sub
pop
aaa
aad
xor
hlt
fistps
outsb
out
jge
repnz
movsl
lret
dec
test
add
cld
mov
mov
add
vmread
and
add
xor
scas
xor
push
push
es
sbb
popf
outsl
pop
call
cmp
push
push
or
push
pop
pushf
cmp
test
std
mov
jno
inc
fdivrl
fisttpl
test
and
into
movhps
inc
ret
repz
mov
pop
loope
fwait
mov
inc
int3
mov
jl
dec
jp
out
sub
dec
add
xchg
mov
push
jns
cmp
mov
mov
jle
outsl
addr16
into
clc
xor
mov
mov
mov
pushf
sbb
adc
sbb
push
pushl
movl
fldenv
mov
lods
mov
pusha
dec
fcomps
adcb
pop
loopne
dec
add
adc
xchg
loop
pop
jns
sbb
jno
xor
sub
repnz
movsl
pop
adcl
cmp
arpl
xor
rcrl
loop
sbb
inc
and
dec
mov
sbb
adcb
pop
pushf
mov
xlat
into
xchg
sub
jne
cli
call
stos
cmp
mov
hlt
inc
nopl
div
pop
popa
stos
mov
xlat
mov
call
and
add
popf
dec
pop
sbb
push
push
mov
inc
inc
jbe
cmp
inc
int3
cmpsb
ret
mov
aam
fistps
in
adc
xlat
sti
pop
test
push
ret
pusha
or
xchg
loop
push
or
inc
cmp
ret
lock
mov
dec
xchg
and
push
or
inc
lds
sbb
push
xor
adcb
daa
mov
or
lods
pop
jno
test
out
and
add
cmp
dec
sbbl
movsl
adc
sbbl
or
jmp
xlat
stc
ljmp
mov
mov
mov
js
test
mov
movsb
sub
out
push
dec
sahf
jp
sub
cmp
iret
jno
add
sbb
test
xlat
in
inc
dec
out
jns
sahf
cli
adc
addr16
data16
or
jle
sub
scas
sub
movsb
xchg
movb
add
lods
push
jp
imul
mov
dec
sub
pop
jg
mov
movsb
clc
pop
popf
mov
rclb
pop
loop
fistps
nop
sbb
outsb
push
push
test
mov
cmp
mov
cwtl
add
testl
xchg
loop
in
adc
or
lods
lds
dec
dec
test
fiaddl
inc
add
mov
pop
push
fsubl
mov
jns
jmp
jns
jo
adc
rclb
jbe
adc
in
cmpsb
push
test
xchg
dec
jne
push
in
aas
leave
or
mov
mov
jp
stc
lods
fldcw
dec
mov
jno
xor
call
imul
xchg
addr16
adc
dec
sar
rol
mov
sbb
jne
adc
jmp
inc
andb
xchg
test
adc
lret
test
ret
in
xorb
mov
pop
adc
dec
and
loopne
sbb
cs
rorb
das
aaa
add
sar
pop
ljmp
pop
popf
push
mov
outsl
aad
iret
je
and
pusha
cmpsl
inc
mov
mov
and
mov
inc
jae
mov
ljmp
movsl
add
into
cmp
sub
push
jbe
std
cmp
pop
pop
dec
popa
push
cmp
orb
inc
les
int3
enter
imul
inc
out
or
ja
inc
sbb
imul
jl
lret
push
add
insb
or
test
xchg
xchg
xchg
mov
sub
outsb
sbb
ss
mov
arpl
dec
pop
lcall
outsb
mov
lock
cmp
and
inc
mov
jns
jb
jb
scas
cs
and
or
xor
in
mov
loope
orl
jmp
mov
clc
arpl
add
cmp
xchg
aam
xchg
movsl
add
mov
pop
loope
add
cmpsb
cmp
ja
leave
arpl
mov
fnstcw
and
stos
aas
dec
aad
push
xchg
sbb
fimuls
aad
inc
and
lcall
addr16
cmpsb
pop
int3
setp
xchg
dec
push
adc
add
dec
movsl
sti
test
cwtl
xor
dec
stos
push
test
dec
movsb
add
pop
mov
and
popf
xchg
adc
sahf
cmp
mov
cmp
add
cmp
shlb
mov
pop
aas
fwait
jle
sbb
pop
rorl
cld
and
lods
cmpsb
inc
test
nop
outsl
fnsave
les
mov
adcb
xchg
outsl
fdivs
xor
mov
dec
mov
jmp
lcall
dec
ltr
mov
inc
fdivrl
test
sub
xchg
sub
inc
rclb
fidivs
enter
sub
mov
sahf
xchg
into
call
pop
lock
test
mov
jle
pop
pop
push
mov
stc
sub
sbb
inc
in
xlat
pop
sub
xchg
shl
adc
daa
xlat
cmp
push
gs
lret
cmp
lea
shrl
aaa
and
push
sub
into
cmp
mov
jo
mov
mov
mov
xchg
dec
std
dec
sub
adc
push
add
jecxz
sub
imul
inc
mov
lcall
cld
cltd
fwait
jns
mov
shl
sbb
adc
mov
pop
mov
stc
into
mov
ret
jbe
inc
pop
sub
mov
jne
pop
sti
mov
std
loop
cmp
xor
add
loop
pop
xchg
jecxz
adc
push
iret
lds
push
icebp
xor
jl
mov
add
add
hlt
ret
cmc
sub
xor
or
das
jmp
mov
mov
movsl
jb
fdivs
mov
add
and
xor
and
sti
mov
stc
jl
mov
push
sbb
pushf
fsubrl
and
fdivr
mov
jmp
cld
aam
into
mov
adc
popa
adc
push
pop
popf
shl
ljmp
push
mov
push
imul
push
mov
inc
pop
adc
outsl
pop
sbb
xor
jecxz
sbb
int
test
stos
lahf
inc
cmpsl
mov
mov
sub
rcll
lahf
mov
cld
repz
popf
push
pop
inc
add
mov
pop
les
cmp
sbb
sbb
cli
ret
sub
inc
decb
dec
loop
lods
enter
or
and
das
cmp
inc
bound
gs
add
lret
xchg
movsb
jnp
mov
cmp
mov
xor
leave
in
test
sub
pop
test
cltd
and
insb
pop
mov
inc
inc
orl
pusha
sub
push
daa
notb
out
xchg
test
xor
mov
or
scas
sbb
jae
fisttps
mov
cmc
fldl
sarb
cwtl
sub
pop
gs
addb
roll
dec
aaa
imul
loopne
insl
mov
jo
mov
repnz
dec
pop
rcll
xlat
jne
arpl
sbb
sahf
ljmp
loopne
adc
clc
jmp
cmp
sub
jo
daa
ja
out
sbb
or
stos
jle
xchg
fbld
xor
jmp
push
adc
js
dec
bound
mov
cmpsl
sub
jecxz
xor
addl
mov
xlat
aas
nop
fwait
dec
addl
dec
jb
mov
sbb
xor
adc
mov
xchg
cld
daa
pushf
adc
push
fwait
or
sbb
test
sti
inc
dec
in
jb
or
cmpsb
dec
jo
rcll
cmp
mov
mov
push
xchg
test
push
js
test
or
scas
jecxz
and
in
popf
lock
js
aam
mov
add
stos
push
inc
mov
mov
xchg
xchg
xchg
leave
mov
pusha
inc
pop
mov
std
rcll
outsb
or
xchg
mov
adc
mov
mov
inc
xlat
push
lods
sbb
call
cli
repz
inc
mov
adc
sbb
movsb
mov
loopne
jmp
call
insb
cld
out
pop
lret
adc
or
sbb
dec
jg
arpl
and
sbb
bound
lock
add
sbb
add
stos
and
push
lahf
cmp
inc
jns
inc
sahf
fildl
jl
sarb
test
push
mov
sub
ljmp
mov
ljmp
ss
mov
and
xorl
in
andb
xor
daa
aaa
inc
fistl
pop
push
sbb
xor
and
stos
mov
xor
int3
mov
test
jbe
sub
cmpsl
and
dec
dec
lret
mulb
mov
pop
add
cmp
repz
push
adc
mov
lock
into
cmp
or
xor
mov
test
lea
mov
fistpll
sub
mov
mov
pop
mov
push
aam
xchg
je
test
mov
mov
in
lods
addl
cmpsb
pop
push
and
pushf
pop
xor
jnp
stos
sub
test
jl
jecxz
cmc
and
jecxz
aas
scas
sub
test
fcoms
int
sbb
pop
xchg
icebp
in
jnp
stos
push
push
dec
data16
inc
lods
aaa
pop
xorb
mov
movsb
xchg
or
scas
push
les
jmp
frstor
pop
outsb
daa
je
pop
mov
jae
and
cmp
sub
and
loope
stos
je
dec
xor
xchg
aam
in
adc
sbb
pop
cmp
sbb
or
adc
sub
test
pop
sub
mov
mov
mov
pushf
test
push
lret
push
lea
xchg
fiadds
mov
loope
mulb
xchg
xchg
loopne
sbb
ljmp
add
jmp
into
xchg
sub
sbb
in
jmp
adc
jge
ret
mov
push
sub
aaa
leave
inc
adc
inc
sbb
mov
pushf
add
mov
mov
pop
ret
loop
sbb
pusha
lea
ret
lds
add
cmp
cmpsb
mov
popf
adc
clc
sbb
push
mov
adc
iret
arpl
shl
in
add
dec
out
sbb
scas
shrb
sbb
pop
or
lret
and
lahf
popf
stc
mov
and
adc
mov
xor
arpl
pop
xor
or
cmp
pop
sbb
stos
loop
mov
lods
mov
sbb
or
mov
adc
fs
enter
inc
mov
std
mov
mov
test
test
xchg
rol
cmpsb
in
add
push
lahf
cmpsb
rcl
or
imul
cmp
imul
stc
or
incb
jae
and
adc
jmp
lcall
sub
adc
cmpsb
add
xchg
adc
mov
mov
dec
add
push
fs
pusha
stc
aad
push
ret
ret
mov
add
push
add
pop
xchg
insb
push
push
lahf
mov
lock
xchg
repnz
int
frstor
or
pop
jecxz
pop
push
ds
fldenv
out
imul
jno
test
push
xchg
icebp
pusha
fstl
or
in
adc
imul
mov
notb
xchg
shlb
rclb
mov
dec
push
jl
ljmp
mov
xor
scas
push
add
sbb
int
lret
or
mov
mov
daa
loopne
addr16
loopne
daa
jne
mov
repnz
fs
mov
aaa
adc
inc
fadds
cmp
daa
fcoml
sbb
pop
jl
ret
push
jp
pop
pop
xchg
daa
bound
jno
cs
lcall
inc
push
addb
fcompl
xchg
lds
push
mov
insb
fiadds
fisttpll
out
rcrb
pop
jmp
and
fstps
pushl
aam
or
jmp
lds
inc
xchg
push
mov
movsb
mov
jl
xchg
jnp
subl
gs
adc
je
std
adc
ds
loopne
jl
mov
mov
add
in
pop
stos
sub
mov
mov
test
fs
scas
jb
cmp
jp
push
cld
pop
gs
xor
aas
xchg
stos
idiv
rorl
lea
jb
dec
xor
sbb
test
inc
sbb
cmpb
mov
jp
int
aaa
push
nop
inc
jb
add
xchg
lret
push
pop
rorl
mov
pushf
and
inc
xchg
sub
and
repz
push
inc
mov
xchg
loope
imul
inc
loop
or
gs
pop
je
out
xchg
popa
sbb
in
or
inc
mov
cmp
mov
fnstcw
lea
lcall
add
idivb
stc
leave
dec
out
data16
xchg
inc
inc
or
in
mov
nop
lea
popf
sbb
scas
lcall
call
data16
adc
sbb
out
sub
sub
cmpsb
sbb
push
sbb
ret
mov
shl
pop
adcb
rcl
mov
xor
clc
bound
subb
dec
and
ljmp
mov
loop
inc
addr16
sbbb
and
push
lea
mov
cmp
or
mov
fdivs
fidivrl
mov
xchg
outsl
fcomp
or
lds
mov
pop
jns
ret
jb
push
or
je
pusha
int
dec
xchg
dec
xchg
pop
mov
cs
xchg
flds
mov
imul
sbb
pop
jns
repz
inc
fistpll
dec
iret
or
mov
jge
jno
cmp
dec
fs
rclb
pop
ds
mov
divb
leave
lock
push
or
jp
mov
adc
dec
pushf
iret
repz
push
adc
adc
imul
sbb
aam
scas
rcr
out
adc
hlt
test
lds
dec
scas
lods
xchg
jb
shll
dec
inc
out
xchg
xor
xchg
xchg
cmp
mov
xchg
cmp
jp
inc
mov
jbe
sub
mov
mov
jmp
mov
sub
cmp
mov
cmpsb
cwtl
sbb
in
push
sub
shr
cmpsl
bound
jae
popf
inc
loopne
mov
cmp
inc
insb
call
scas
cmpsb
xchg
out
add
xlat
mov
rclb
imul
xor
testb
xchg
dec
rorl
sti
mov
negb
pop
and
mov
mov
jge
push
pop
xchg
lret
rorl
into
cmp
jecxz
xor
lahf
fbld
cld
xor
aam
lock
sbb
xchg
int
in
or
mov
lahf
adcl
or
lcall
nop
in
sub
dec
cmp
jae
loop
adc
jns
stc
fldenv
jecxz
in
cmpsb
icebp
push
jecxz
cmc
out
shl
inc
mov
mov
sub
sbb
jno
xchg
sbb
add
xlat
xchg
sbb
ja
loop
lds
xlat
dec
xchg
loope
mov
push
cmc
idivb
loop
ret
add
testb
xor
adc
std
or
mov
cwtl
pusha
mov
das
lahf
movsl
std
cmpsl
test
pop
adc
mul
sub
call
sbb
movntq
add
aaa
mov
push
sub
xchg
cmp
jle
fbld
andb
iret
jecxz
je
sbb
shrb
jnp
sub
dec
inc
ret
or
cmp
hlt
and
cli
cmp
orl
sbb
es
mov
inc
lods
test
icebp
and
enter
out
mov
clc
adc
and
mov
dec
xor
sbb
inc
aaa
or
cmp
scas
pop
add
cmc
cmpsb
dec
movsl
in
or
cli
shll
jb
inc
loop
cmpsb
out
fs
pop
or
adc
in
loopne
lret
or
sub
jb
jo
dec
das
add
adc
in
mov
stos
stos
scas
bound
jbe
xor
jl
fwait
inc
in
fs
shl
mov
daa
jecxz
pop
shlb
inc
dec
test
out
mov
arpl
testb
sbb
movsl
mov
mov
subl
mov
ds
xor
mov
and
adc
adc
out
jbe
dec
mov
out
xchg
jmp
mov
pop
cmp
sbb
push
sbb
pop
sub
loope
subb
stc
mov
jmp
and
mov
hlt
xchg
cmp
xchg
cmc
xchg
fimull
and
into
aas
pop
pop
scas
adc
push
call
mov
shl
notb
or
clc
mov
fists
and
sub
sub
xchg
push
inc
fwait
in
pop
rcrl
test
stc
sub
xchg
aaa
push
dec
inc
cmp
mov
cmp
pop
xor
pop
inc
sub
mov
adc
loopne
sbb
xchg
aad
lret
rcrb
jle
subl
xor
mov
lods
popf
movsl
hlt
cwtl
mov
jle
hlt
jno
jno
xor
xor
dec
mov
xchg
cwtl
dec
push
xchg
aaa
xor
ret
mov
sbb
cmp
adc
aam
mov
jle
fs
xchg
cmp
mov
jns
icebp
cmp
cs
jge
cmpsl
adcb
fimull
pop
pushf
inc
pop
into
shrl
mov
pop
mov
or
or
pop
ret
scas
lcall
jno
cmp
xor
rcll
cltd
mov
movsl
dec
aad
jp
and
mov
xor
in
fists
lods
in
dec
dec
inc
push
push
ror
daa
pop
test
cmp
mov
stos
push
mov
daa
mov
outsl
jp
sbb
mov
sub
or
fldcw
stos
imul
fcmovne
adc
es
ljmp
jns
push
repnz
add
ret
or
mov
push
add
sub
mov
pop
icebp
addb
push
jns
push
hlt
outsb
ss
mov
pop
test
mov
out
clc
sub
shlb
cs
repnz
clc
incl
jb
pop
psrad
fwait
testl
ss
sar
imul
jp
fmull
sbb
mov
push
fwait
in
repz
inc
adc
dec
les
add
lea
sahf
and
shlb
ficoms
insl
lds
out
push
adc
mov
xchg
mov
inc
imul
cmp
mov
pop
adc
push
pop
aaa
inc
add
jecxz
xchg
xchg
into
insl
mov
popa
cmpsl
testl
ss
push
sbb
mov
ja
pop
shrb
xchg
in
lods
divl
inc
jecxz
fwait
inc
inc
inc
xor
xor
mov
lds
or
ret
sub
cmp
gs
rcll
or
daa
pop
pop
repnz
scas
dec
decb
jp
cltd
xchg
cmpl
rcrb
and
push
jb
cwtl
in
and
xchg
xor
cwtl
jmp
rcrl
mov
xchg
filds
das
inc
adc
lods
cmp
mov
cmpl
sbb
add
xchg
add
inc
or
pop
mov
int3
sbb
scas
aam
lret
jb
inc
out
jo
ret
data16
add
test
push
loopne
cmp
sbb
je
cltd
aam
inc
insb
fstpl
in
mov
push
lods
dec
cmc
xor
idivl
repz
repz
out
fwait
test
sbb
pusha
es
sub
movsb
sbb
rcr
daa
bound
nop
and
fcomip
icebp
shll
fidivrl
les
clc
lds
out
movsb
adc
jge
jp
enter
jmp
aad
rol
enter
add
cmp
jmp
pop
jo
outsb
mov
out
sbb
aam
jbe,pt
cmp
pop
insl
shll
jle
push
mov
mov
stos
in
jnp
ja
lahf
in
pop
xlat
notb
dec
shr
pop
pop
mov
in
cmpsl
ret
cmp
dec
ds
pop
inc
sbb
test
mov
xor
xor
push
rcrb
xchg
das
push
in
jle
outsb
packssdw
popf
pop
or
sbb
test
repz
cmp
and
leavew
and
es
cmp
fdivrs
mov
fmull
pop
mov
mov
mov
in
xchg
daa
push
sarb
ret
sub
cmpsb
lods
enter
jle
int3
pushw
pop
adc
jns
sbb
xor
ss
xlat
adc
and
fwait
push
pushf
es
push
pushf
test
mov
lret
aad
or
jne
icebp
adc
mov
mov
cmp
pop
adc
add
idivl
add
insl
orl
and
jg
push
sub
cld
xor
dec
jae
xor
jmp
pop
mov
dec
sti
pop
cmp
fwait
inc
fsubp
fucomp
sub
push
std
mov
pop
sarl
shrb
fdivs
fildl
test
jmp
mov
lock
pusha
push
pop
hlt
int3
push
test
subl
jl
in
adc
jle
fwait
push
loop
aas
jnp
loop
stos
imul
add
mov
xor
aam
in
jae
test
jae
pop
mov
sbb
jno
mov
xor
jl
daa
xchg
push
std
mov
adc
roll
sbb
cmpb
je
inc
cli
ljmp
divl
mov
push
jno
add
outsl
icebp
arpl
test
ss
xchg
mov
jle
stos
negb
xor
jecxz
xchg
mov
jmp
mov
cmpsl
xchg
lock
rsm
mov
jmp
adc
or
pop
in
xchg
enter
jmp
in
cmp
loopne
fisubrs
fistpl
repnz
xchg
cwtl
loope
outsb
adc
aad
orb
xor
sub
mov
sub
mov
cmpsb
mov
push
fdivl
call
imul
mov
inc
fnop
xchg
cmp
loop
sub
dec
xchg
ljmp
mov
xor
cmc
xchg
inc
sbb
pop
jl
clc
adc
std
sti
and
jmp
adc
dec
mov
pop
mov
inc
push
fisubrs
and
pop
aaa
pop
push
nop
inc
mov
lret
sub
add
mov
add
or
push
adc
test
adc
cmp
insb
jnp
xchg
das
je
in
pop
aad
pop
inc
not
mov
testb
jl
imul
mov
jns
jmp
push
jl
inc
push
add
imul
in
jmp
lods
sbb
lret
ficomps
xchg
test
mov
in
cmpsl
sub
movsb
outsl
pop
or
mov
pop
add
fcoms
push
sbb
cltd
pop
fidivs
sahf
xchg
outsb
push
jp
push
ret
mov
insb
sub
js
fsubrp
and
adc
shlb
push
insl
nop
pop
out
pop
pop
enter
sahf
es
lret
pop
out
lret
lods
push
xchg
fwait
ret
aas
lock
sti
les
jecxz
outsl
mov
dec
ds
leave
repnz
cmpsl
daa
and
inc
mov
sub
cltd
xor
sub
pop
adc
adc
add
pop
add
xchg
lret
das
inc
mov
push
sahf
fildl
mov
sbb
push
arpl
cwtl
jns
leave
orb
cmp
test
cmp
jecxz
dec
jecxz
daa
mov
test
psubb
pushf
xor
fbstp
int
shl
mov
mov
mov
mov
mov
enter
rcl
repz
sbb
mov
push
out
jno
inc
add
cmp
mov
lret
cmp
ret
dec
ret
adc
sub
rcrl
enter
xchg
int
jp
leave
shl
or
push
adc
sti
xchg
pusha
out
inc
cwtl
add
sbb
fdivs
cmp
stos
mov
sub
lret
aas
push
loopne
dec
cmp
pop
adcl
hlt
or
lcall
loope
xchg
insl
mov
mov
arpl
popf
pop
adc
pushf
sub
shl
adc
daa
lahf
scas
and
loop
mov
push
and
push
sbb
fadds
mov
cmc
dec
aas
dec
mov
ja
and
outsb
pusha
leave
cmpsb
inc
fldl
outsl
push
cmc
insl
lea
jae
mov
mov
xchg
mov
sti
sub
fwait
mov
arpl
pop
push
dec
xor
jbe
xor
xor
and
andb
lds
add
hlt
mov
mov
fisttps
bound
dec
fdiv
sarl
sub
scas
sbb
popa
pop
loop
fistpl
or
stc
cmpsb
lret
inc
mov
sbb
jo
aad
mov
jno
inc
jne
sbb
mov
pop
xchg
enter
lcall
into
dec
cmp
and
fsincos
fs
stc
mov
imul
scas
imul
testb
xlat
adc
int3
pusha
es
dec
into
adc
jne
mov
popf
cmc
sbb
lcall
jns
int3
into
sub
inc
stos
inc
insl
icebp
mov
mov
js
xor
push
cmp
mov
ljmp
mov
push
jno
inc
sahf
and
scas
cmpsb
arpl
sub
filds
sbb
js
jae
inc
xor
inc
pushf
lret
hlt
dec
push
sub
ret
loop
push
shll
inc
mov
fbld
dec
scas
out
fdivrl
sub
test
outsl
inc
int3
adc
jb
cltd
xchg
cs
dec
mov
cmc
sarl
pop
dec
xor
shll
scas
mov
inc
adc
je
enter
xor
testl
arpl
jno
outsb
cmp
sbb
fsts
leave
mov
icebp
in
lock
mov
ja
mov
divl
xor
loop
and
jmp
lret
mov
testl
nop
xchg
jnp
pop
push
scas
pop
push
rcl
mov
or
sub
stos
pop
shr
rcr
jecxz
xchg
dec
bound
xchg
cmp
sbb
mov
icebp
sarl
fwait
das
out
pop
test
dec
jg
addl
push
mov
sbb
cwtl
add
add
ret
adc
xlat
rcrb
inc
xor
pop
cmpsb
push
pop
cwtl
negl
ss
shll
scas
adc
add
push
mov
shlb
data16
mov
stos
cmpsb
je
sub
or
push
mov
insl
fistpl
add
rclb
ja
fistpl
sub
negl
inc
mov
push
lahf
mov
add
cmp
inc
dec
mov
call
shrb
test
out
jge
sbb
inc
inc
sub
jecxz
mov
dec
mov
aad
xor
pushf
jne
dec
mov
jo
inc
into
popa
jmp
insl
dec
jno
cmp
lods
imul
mov
jae
outsb
std
outsb
mov
dec
inc
adc
sbb
dec
push
fldl
data16
mov
jge
mov
mov
fwait
mov
or
iret
enter
sub
dec
jnp
jge
hlt
mov
aas
xchg
sbb
fisttps
scas
sub
lret
call
mov
cwtl
jecxz
lcall
popa
mov
sbb
xchg
sti
nop
repz
jns
cmp
icebp
adc
lcall
int
mov
add
push
pop
or
add
xor
scas
lods
dec
adc
xor
aaa
pop
rorl
js
sbb
stos
xor
add
sti
xchg
sbb
inc
sbb
aaa
pop
mov
shrb
call
xchg
lods
sbb
aam
clc
shll
push
scas
fidivrl
add
push
mov
fucomp
les
cmovs
lods
cs
mov
cltd
out
or
repz
pushf
repnz
mov
add
fidivl
cmp
jns
mov
cld
in
subl
or
hlt
jg
mov
dec
lods
jo
lock
mov
mov
pop
push
jmp
dec
movsl
rep
xchg
js
pop
mov
dec
insl
mov
aaa
iret
mov
adc
or
and
push
lahf
xchg
test
mov
or
mov
xor
mov
in
movsb
repz
popa
std
ficoms
scas
je
add
mov
push
lods
lret
sahf
lahf
movsb
mov
add
enter
cli
leave
jae
pop
inc
xor
sti
outsb
xlat
xchg
pop
push
repz
inc
fsts
cmp
push
pop
lcall
in
in
mov
in
jns
jp
pop
xor
cmp
xlat
sub
sbb
daa
mov
lock
inc
and
add
xor
inc
mov
pop
pop
fcmovnu
movsb
sub
bnd
stos
or
xor
xor
icebp
js
test
sub
jmp
add
push
flds
push
mov
push
inc
in
loopne
mov
jge
cmpsl
icebp
dec
cmp
xchg
add
mov
testb
les
test
lods
cmovno
push
fdivrl
les
loop
cmpsl
mov
sbb
mov
scas
xchg
idivl
movzwl
jae
les
popf
add
mov
push
rcll
and
je
mov
test
clc
cmp
repnz
pop
mov
or
xor
gs
inc
in
xchg
call
push
popf
push
outsl
adc
enter
push
cltd
dec
push
dec
mov
dec
sbb
cmp
pop
inc
sbb
jg
cmp
out
add
add
out
pushf
jl
jae
mov
and
push
icebp
cld
sti
dec
notrack
hlt
ret
dec
mov
xchg
fs
jl
or
adc
xchg
out
adc
mov
push
lahf
imul
mov
xor
pop
mov
mov
xchg
repnz
xchg
mov
ja
push
aad
mov
stc
repnz
jp
lcall
xchg
shll
ret
cmp
or
mov
jle
mov
xor
addr16
push
leave
xor
mov
mov
iret
in
lcall
out
loop
jne
mov
xlat
push
and
in
cwtl
jo
les
lods
sub
cmp
mov
in
loopne
sbb
mov
test
jmp
inc
loope
push
push
js
dec
ror
sub
outsb
out
mov
xor
cltd
mov
inc
mov
and
bound
push
fadd
cmp
hlt
out
out
mov
and
ret
test
pop
cltd
out
jno
mov
test
scas
scas
pop
adc
je
xor
xor
repz
push
in
xor
xacquire
jno
xchg
ret
into
cmp
pop
out
jns
xor
rsm
pop
andl
add
repz
mov
lahf
das
stos
sbb
sub
xchg
mov
mov
cmp
loop
xchg
add
adc
jb
insl
mov
shl
xchg
inc
sub
push
loopne
scas
loope
icebp
std
scas
fistpl
imul
aaa
inc
xor
fbld
divb
mov
or
adc
xchg
daa
xor
es
mov
sbb
cmp
rcrb
in
xor
xchg
cld
mov
test
dec
jnp
pop
push
cmpsl
or
xor
mov
mov
mov
nop
xchg
addb
jle
mov
jge
shrl
push
mov
mov
mov
aam
adc
test
sbb
xlat
lret
dec
ret
iret
pop
es
jl
addr16
cli
or
mov
test
es
xchg
fidivs
push
rorl
pop
cli
insb
mov
push
ret
jp
data16
xchg
or
push
xchg
stc
pop
and
fdivl
out
lret
prefetch
scas
mov
xorl
scas
inc
and
inc
xchg
dec
repnz
les
dec
sub
jp
and
pop
cld
loopne
mov
sbbl
popa
imul
enter
mov
adc
and
xchg
orl
fists
dec
inc
popf
add
jmp
xor
lea
xor
addb
push
ret
cmp
dec
jns
arpl
lock
push
inc
std
jae
ja
ret
xchg
into
pop
adc
aad
pop
pop
or
scas
xor
aaa
push
es
int
out
xchg
mov
daa
push
or
xchg
sbb
jnp,pt
mov
gs
fs
xchg
mov
fistpll
out
jbe
add
sub
das
hlt
cmc
add
inc
nop
push
das
cmpl
add
add
xor
jbe
sub
fwait
xor
loope
jmp
mov
pop
xlat
movsl
xor
addr16
movsl
add
je
pop
jg
fdivr
loop
mov
adcl
sub
ss
testb
imul
pop
jp
cld
in
add
push
jmp
lock
jmp
add
movsl
outsb
cmp
dec
jmp
movsb
fidivrl
outsb
pop
gs
dec
cmp
in
mov
adc
pop
xchg
stc
stc
popa
mov
stos
ds
js
sub
loope
popl
ret
mov
clc
or
sub
hlt
adc
dec
cmp
add
lret
je
in
pop
or
cmp
sbb
xchg
xchg
mov
outsb
cld
sti
data16
enter
and
mov
ja
mov
in
ljmp
sub
ljmp
mov
or
xor
cmpsl
mov
xchg
push
dec
scas
pop
mov
mov
jl
fldl
jmp
loop
xchg
push
cli
pusha
jp
icebp
add
enter
in
cld
add
test
test
ja
dec
cli
dec
and
repz
xor
bound
fwait
pop
push
int
insb
xchg
shrb
mov
xchg
cmpl
cmp
xchg
popf
jmp
xor
xor
rcrl
repnz
jmp
mov
xchg
testl
xchg
movsl
out
leave
mov
jo
mov
mov
pop
idivb
cltd
nop
hlt
adc
add
jne
xchg
cs
push
repnz
push
movsl
popf
bswap
nop
fsts
mov
cmpsb
iret
fs
in
adc
mov
mov
add
fisubl
clc
out
lahf
dec
inc
push
xchg
repnz
mov
imul
bound
dec
loop
fisttpl
cmpsl
xor
inc
xor
dec
cld
or
inc
cwtl
insb
loop
pusha
and
rclb
add
push
test
or
in
loop
sub
data16
pusha
push
in
jno
and
loope
pop
es
dec
jae
fisttpl
movsl
mov
fldt
clc
xor
pop
pop
pop
push
add
lods
xor
mov
add
outsb
adc
mov
mov
cs
fldt
cli
add
fsubs
cmp
int3
fwait
ret
test
ljmp
push
mov
adc
ret
shl
and
adc
push
sbbl
in
mov
in
or
scas
popf
mov
sbb
pop
pop
adc
sbb
jno
pop
jb
loope
xchg
mov
enter
fistl
fstpt
xchg
stos
mov
out
enter
filds
mov
clc
scas
mov
cmpl
xor
sahf
mov
sub
loope
test
pop
mov
pop
loopne
add
shlb
test
lea
pop
mov
inc
mov
cmpsb
into
subb
mov
subl
aam
jns
inc
shl
xor
add
dec
lahf
aaa
divb
and
xor
rcll
jg
dec
cmp
xchg
dec
push
call
push
pop
push
mov
or
dec
sub
lods
mov
mov
shrb
cmp
and
hlt
pop
push
cmp
mov
pop
popf
adc
aas
jnp
adc
push
mov
xor
cmp
mov
dec
dec
jl
or
push
mov
pusha
or
push
scas
sbb
pop
pusha
cmp
and
cld
inc
outsb
sahf
jno
loop
or
pop
not
in
or
pop
in
int
in
xor
lock
mov
adc
and
inc
dec
arpl
in
jp
cld
add
ss
push
jb
iret
jl
mov
xchg
cmpsb
mov
mov
sbb
xor
add
push
sbb
and
cmp
jnp
test
out
xchg
shlb
cld
xlat
jmp
call
lods
int
notb
pop
push
call
xchg
add
popa
pop
loop
cld
int
in
nop
cmp
cmovle
insb
push
cs
mov
add
ret
cwtl
fidivrl
hlt
insb
pop
test
out
xchg
and
iret
fiaddl
xchg
sahf
cmp
xor
sbb
movl
out
pop
sbb
push
es
sbb
mov
mov
dec
lcall
jno
fwait
and
ror
dec
or
push
int
addr16
inc
scas
mov
xor
sbb
jne
fildl
mov
push
dec
or
and
pop
mov
scas
dec
pushf
adcb
sbb
mov
add
orb
sbb
lcall
sbb
pop
out
in
mov
dec
idivl
mov
mov
pop
ljmp
jae
or
sbb
pushf
push
jg
pushf
mov
inc
jp
push
sub
xchg
sti
js
cs
jmp
fisubs
in
in
sbb
and
dec
inc
into
fimull
sbb
leave
push
test
pop
sub
test
push
scas
scas
dec
cs
orl
sub
lret
mov
out
or
enter
xor
mov
insb
out
out
adc
loop
das
imul
pop
pop
add
shrl
in
lock
imul
xchg
fadds
cmpsl
lds
mov
adc
ss
out
adc
xlat
sbb
cmpb
lahf
fs
addr16
fcmove
cld
jae
mov
xchg
arpl
in
dec
jns
inc
leave
mov
xlat
icebp
movsb
movsl
aam
and
dec
xor
clc
loope
and
addl
or
fistps
lahf
cmp
es
fisttps
out
pop
add
pop
nop
cs
mov
xor
jge
jne
data16
xchg
mov
jmp
sub
in
sarb
ss
es
mov
out
je
jp
dec
mov
iret
inc
sub
mov
lock
cs
addr16
add
mov
adc
in
out
jne
loope
jecxz
addr16
lcall
lods
into
stos
add
or
rcrl
lods
mov
add
cmp
call
jnp
int3
pop
dec
pop
pushl
xchg
jbe
cmp
adc
jae
sbb
pusha
push
pop
sub
add
shll
add
in
jl
xor
xchg
sub
icebp
sub
xchg
mov
ret
sbb
sub
jecxz
popa
cld
or
clc
inc
inc
lret
xchg
xor
add
sbb
call
sbb
xchg
iret
and
je
mov
fists
pop
dec
cmp
pop
xchg
sub
loop
fisubrs
pop
arpl
fs
mov
loopne
inc
dec
int3
jno
movsb
ds
sbb
stos
xchg
xchg
mov
aam
add
imul
xchg
add
movsb
das
aad
test
shlb
xchg
movsb
ja
lods
das
ljmp
or
in
add
xchg
add
mov
loop
push
mov
or
and
jnp
dec
mov
aas
mov
or
cmp
inc
cmp
xchg
repnz
ss
test
jg
sahf
into
xchg
xor
jbe
mov
lods
fistpll
pop
mov
and
mov
push
in
scas
pushf
sbb
insl
iret
cld
sbb
xor
pop
mov
negb
jnp
cmp
aas
xchg
movsl
adc
jecxz
out
lock
mov
sbb
rol
inc
pop
js
adc
mov
scas
iret
push
mov
pop
dec
pop
loopne
dec
push
push
jge
and
push
or
movsl
jno
adc
scas
cltd
fcoml
and
fisubrs
dec
dec
xor
cmpsb
cmp
cmp
mov
xchg
int3
jnp
int
xlat
inc
imul
lcall
roll
mov
sbb
sub
push
lods
neg
fs
loope
frstpm(287
mov
lahf
sbb
pop
je
or
mov
cmpsl
mov
in
int3
cmp
mov
movsb
mov
ja
pop
lahf
fstpl
xchg
adc
pop
int
sub
mov
xchg
stos
mov
push
sti
pop
dec
or
mov
add
sarb
cmp
xchg
test
add
or
inc
imul
sbb
push
inc
dec
imul
out
outsb
mov
shlb
mov
lods
pop
in
dec
mov
jmp
addr16
xor
push
shlb
popf
dec
jae
mov
js
out
daa
push
insb
pop
sbb
mov
cmp
das
inc
mov
in
outsb
divl
inc
xor
inc
jecxz
andl
fsubrs
push
add
pop
sub
inc
dec
dec
cmp
xor
fnstsw
push
jo
dec
cmp
fdivr
push
fdivrs
imulb
push
dec
mov
pusha
add
xchg
insb
sbb
jge
mov
push
mov
mov
jp
push
xor
data16
add
jp
xchg
repz
mov
mov
mov
adc
call
mov
mov
mov
fwait
in
jge
lcall
js
cld
jbe
xchg
rcrl
and
ss
bound
movsb
push
scas
int3
std
mov
mov
add
insb
negb
arpl
or
add
push
imul
pop
add
faddl
pop
cmpsl
mov
xor
pop
jle
mov
rorl
pop
inc
fdivrs
cmp
xchg
lods
cmp
int
push
inc
xor
pop
stos
cmovs
push
icebp
and
movsb
mov
mov
dec
jae
ret
pop
arpl
sarl
les
push
jne
cmpsb
fldl
dec
push
insw
test
mov
test
jbe
pop
inc
dec
out
mov
repz
daa
bound
cltd
push
out
inc
xchg
sbb
rorb
pop
outsl
push
xchg
mov
pushf
inc
outsl
sub
ljmp
pop
pop
pop
int3
pusha
loop
add
mov
stos
cli
jle
jg
mov
jb
jnp
jge
mov
push
mov
mov
ret
pop
int
mov
xlat
les
xor
andb
fldenv
push
arpl
aas
imul
jg
inc
scas
stos
mov
push
or
adc
adc
fcoml
or
push
test
aam
or
out
movb
popf
mov
dec
dec
faddl
fildll
arpl
cs
stos
xor
pusha
xor
aad
or
cmp
and
xlat
cld
and
lods
icebp
sbb
sub
push
xor
push
aam
sti
ss
and
ret
pushl
cld
mov
rorl
xlat
adc
sub
adc
push
push
cwtl
das
les
cmpsl
cmp
xchg
lret
jle
cli
mov
cli
repnz
xor
inc
sub
int3
fisubs
dec
sbb
mov
jl
into
pop
aad
jge
cmp
sbb
inc
jmp
outsb
test
fnstsw
pop
iret
adc
shll
pop
out
dec
push
sub
or
xor
outsb
call
sbb
jg
lahf
ret
nop
fwait
inc
sbb
shll
addl
jge
cmpsl
adc
sbb
mov
inc
testb
mov
jle
adc
mov
adc
add
cmpsb
aam
mov
and
push
clc
pop
inc
cwtl
pop
cmp
cmpsb
sbb
sub
test
lods
shrl
mov
or
ret
xlat
xchg
jne
pushf
add
fldl
cmp
jge
pop
jbe
push
jb
aaa
dec
dec
aad
xchg
packssdw
rorb
in
cltd
je
gs
adc
sbb
daa
sahf
pop
popf
insb
fldl
sbb
cmpl
aaa
into
icebp
sahf
adc
and
lret
in
decl
xorl
std
hlt
inc
sti
push
iret
outsb
call
pop
add
xchg
loope
mov
mov
mov
pop
sub
lods
push
test
das
jns
movb
test
subb
mov
ret
lahf
lret
add
push
popf
int
mov
popa
mov
cmc
ret
cmp
inc
lahf
movsb
cmp
xchg
inc
or
jge
mov
scas
mov
mov
dec
into
or
in
pop
push
test
push
adc
test
jbe
imul
subl
mov
in
jb
or
sbb
lahf
xchg
dec
fdivrl
stos
or
push
sahf
cmc
in
mov
jecxz
movsb
pop
cmpl
fbstp
je
shl
xor
mov
mov
aam
push
dec
push
xor
cmp
imul
xor
xor
add
xchg
lcall
dec
sub
jnp
mov
int3
inc
lret
push
xor
cmpsl
or
loopne
dec
xchg
add
mov
imul
cld
and
inc
loopne
lret
cmp
push
scas
roll
test
sbb
dec
xchg
arpl
ror
bound
adc
cmp
cld
fsubl
add
insl
mov
sti
sbb
dec
jae
aas
imul
rcrl
call
insb
sbb
add
test
sub
dec
adc
jl
aaa
sub
cmp
xchg
test
loopne
inc
ds
je
out
icebp
lret
stc
jnp
xor
or
adc
icebp
leave
loop
jge
pop
jns
inc
hlt
adc
lret
test
push
test
pop
sti
jmp
xchg
push
int
lods
and
push
clc
or
jecxz
out
test
out
cmp
arpl
sub
ss
in
sar
inc
cmpb
dec
ds
fistl
mov
lret
xor
stos
dec
xor
jecxz
addr16
add
out
inc
pop
ss
in
int3
insl
ret
jle
mov
andl
mov
mov
add
mov
cld
ficompl
in
jg
pop
mov
jl
mov
fistpl
xchg
out
add
js
xchg
push
jg
mov
clc
fstps
ds
jno
int
divl
repz
mov
ja
negb
pop
jbe
jno
iret
je
cs
shlb
stos
pop
std
cmp
mov
pop
lret
std
pop
cmpsl
inc
insl
fwait
mov
or
rcrb
pop
lcall
mov
arpl
lret
dec
leave
cli
mov
iret
adc
sub
jle
adc
aaa
out
lods
push
movb
inc
cmp
jbe
shlb
cmp
or
cmp
and
iret
addl
xchg
inc
aaa
push
dec
sarb
sbb
and
ljmp
inc
adc
jp
inc
adc
sub
data16
divb
or
lods
sub
test
scas
gs
sub
sahf
test
fistpl
xchg
xchg
fisubl
sub
dec
mov
sbb
cltd
je
out
xchg
nop
fs
ror
or
cltd
cmp
cmp
dec
iret
push
adc
scas
repnz
push
xchg
sbb
dec
or
xchg
addr16
out
add
lods
cmc
push
sub
inc
sbb
dec
loop
add
pop
test
jl
jg
mov
add
gs
mov
mov
repz
mov
js
push
adc
push
push
mov
xchg
sub
leave
sbb
mov
mov
repz
mov
lcall
lods
int3
pop
es
and
sbb
in
dec
push
jmp
mov
sti
sbb
xor
pop
mov
dec
mov
cltd
adc
cmp
stos
in
jg
dec
std
mov
test
and
push
add
js
movsl
shll
inc
or
stc
sub
inc
dec
adc
add
es
mov
repnz
lcall
cltd
lret
fstp
sbb
lods
int
jbe
xchg
bound
mov
push
sbb
mov
es
mov
je
in
js
scas
xor
js
aas
pop
inc
dec
aas
dec
cld
inc
and
xchg
mov
mov
lea
pop
fistps
sahf
xchg
dec
and
lcall
or
aam
push
repz
and
jp
js
sbb
in
out
push
stos
mov
daa
mov
sbb
jecxz
jg
mov
cmc
pop
mov
push
or
ja
xchg
push
dec
stos
imul
sub
mov
cmpsl
sti
inc
pusha
into
cwtl
test
in
add
outsl
scas
xor
pop
sbb
mov
adc
sbb
xchg
es
lret
rep
jg
test
dec
pop
fnstenv
test
sti
ja
inc
out
push
mov
inc
aam
pop
cmpsl
mov
lea
outsl
ret
pop
add
leave
fwait
xchg
push
fsubrp
mov
jae
ret
icebp
shll
xchg
lea
xchg
adc
sub
aaa
loope
xor
jnp
mov
or
sbb
mov
negl
insl
mov
pop
xor
fucomi
inc
xchg
lret
mov
push
push
cmp
out
mov
xor
outsl
sbb
jl
adc
ficoml
loop
pop
or
test
icebp
insb
into
ljmp
mov
iret
dec
in
addl
jnp
xchg
ds
int
mov
add
mov
loopne
leave
lcall
xor
inc
roll
adc
outsl
lret
mov
jnp
jno
mov
outsw
pop
loop
dec
and
fistps
mov
dec
push
scas
mov
or
or
jne
xchg
push
nop
mov
shl
into
call
cld
mov
xchg
mov
movsl
es
pop
enter
xchg
mov
stos
ds
mov
sub
mov
cmp
adc
pop
fisttps
add
out
dec
in
imul
hlt
sub
dec
cmp
sbb
mov
mov
test
mov
dec
movsb
adc
rol
and
pushf
pause
push
adc
loop
add
je
iret
sub
in
out
mov
jp
clc
ffree
mov
rcrb
dec
push
icebp
or
ljmp
cs
shlb
push
cmp
or
lret
into
cld
ret
push
jge
jno
dec
and
mov
cmp
mov
jl
pusha
pop
mov
sbb
adc
sti
loopne
dec
mov
fdivl
mov
bnd
sub
cmp
xor
jge
mov
ja
lods
cmp
push
pushf
and
jnp
jno
minps
je
out
sti
outsl
mov
xchg
sbb
js
or
pop
and
adc
or
clc
or
ljmp
loop
or
mov
cli
push
mov
pop
dec
xchg
es
pop
cmp
aam
add
inc
sub
push
fildll
push
sbb
test
aas
jns
js
push
jl
lea
add
lahf
push
sub
repnz
test
and
sbb
add
sti
ficompl
sti
ss
int3
pop
mov
ret
inc
addb
push
lcall
aam
sub
fchs
xchg
popa
mov
or
scas
cmpsl
push
add
jns
xchg
mov
add
mov
cld
mov
add
addl
and
aad
dec
adc
sbb
and
lret
sbb
xor
dec
add
xchg
arpl
cli
enter
cmp
xor
cmp
lods
in
jle
or
das
dec
pop
test
fwait
ja
jg
sti
mov
pop
jle
lods
cmp
or
fstpt
mov
aad
cmp
jp
cmp
cmp
xor
xchg
pop
loopne
sbb
ret
sbb
inc
fcoms
das
or
in
in
add
xchg
dec
mov
mov
adc
pop
out
and
mov
inc
clc
std
lea
push
cmpsl
jecxz
jnp
addr16
mov
stos
pop
xor
jo
aad
mov
fstps
bound
popf
cmp
andb
sub
mov
decb
push
test
push
mov
jae
icebp
push
sub
ret
pop
rcl
scas
push
test
push
cmc
inc
test
jle
popl
mov
addl
es
jae
hlt
popa
push
cmpsb
imul
arpl
push
cmp
arpl
xor
inc
xlat
and
lahf
mov
fs
adc
rorl
lahf
cmp
mov
and
fldt
subb
sbb
and
lahf
jg
repnz
jge
imul
xchg
fisubs
scas
scas
sbb
adc
addl
or
div
mov
and
pop
int3
das
xchg
repz
pop
in
sbb
xor
in
mov
jns
pop
push
dec
push
fnsave
sub
ds
adc
and
pusha
xchg
push
icebp
sbb
in
dec
lcall
xor
jp
fistl
loope
push
push
sbb
js
movsl
popf
mov
fadds
aas
popa
pop
pusha
mov
mov
aas
aas
mov
mov
test
xor
sub
addr16
dec
out
sub
xchg
mov
pop
xchg
imul
sbbb
mov
fdivs
std
test
clc
pop
jbe
mov
outsb
push
cwtl
imul
mov
scas
std
or
push
mov
pushf
subb
mov
jge
mov
mov
in
ret
adc
mov
inc
andl
jge,pn
addr16
aaa
xchg
and
or
setne
imul
imul
push
loope
lret
lods
out
loope
jmp
popf
imulb
negl
dec
in
xor
pop
cmp
pop
xchg
leave
subb
push
fildl
sub
je
xchg
cltd
mov
or
or
mov
adc
push
mov
jne
insl
loopne
and
aad
scas
aaa
inc
pop
mov
jecxz
in
cltd
movsb
rcl
cwtl
cli
pop
into
scas
or
test
rcrl
pop
test
adc
cmp
call
jne
and
and
dec
pop
dec
adc
mov
dec
mov
test
pop
mov
or
xor
sub
int3
mov
xor
std
mull
mov
mov
push
xlat
pop
test
bound
mov
test
in
test
and
test
pop
or
sbb
jmp
push
cltd
jnp
xchg
jnp
ljmp
sbbb
sbb
mov
mov
rorl
sub
loop
xchg
nop
loop
sbb
dec
mov
push
sub
popa
andb
orb
cmp
mov
xchg
jno
pushf
or
mov
and
pop
lods
push
sub
xor
shlb
ret
outsb
adc
push
scas
mov
push
in
xchg
movsb
in
out
out
pop
imul
in
out
cmp
adc
xchg
je
shl
xchg
lds
cmp
lret
aaa
stos
inc
test
pop
mov
add
cmp
and
ss
fmul
leave
mov
dec
dec
int
xchg
xor
aas
xchg
mov
cltd
and
xchg
inc
xchg
notl
add
daa
movsb
mov
push
cmc
push
lahf
or
jle
jp
and
fstpl
mov
dec
testb
pop
jns
in
mov
jl
xor
add
xorb
sahf
ljmp
jb
add
sbb
lods
scas
scas
mov
xor
stos
xchg
loopne
imul
mov
mov
arpl
inc
xchg
stos
pop
jg
daa
inc
cmp
sub
adc
jbe
fnstcw
xchg
mov
mov
lock
add
sub
inc
pop
imul
or
ds
dec
xchg
iret
imul
daa
add
and
sbb
popf
int3
adc
pavgw
adc
jecxz
hlt
inc
push
nop
fisubrs
pop
leave
addr16
cltd
sti
jle
movsl
sbb
imul
fs
ror
ret
cmpsl
cmpl
pusha
inc
xorb
mov
cltd
push
or
movsb
outsl
xchg
divb
clc
sarb
cmp
adc
and
mov
out
cwtl
aaa
jne
cmp
out
cmp
xchg
mov
xor
sub
cmp
fisubrl
cmp
call
es
fwait
or
mov
cmp
ljmp
dec
lahf
pusha
pop
xchg
outsb
sub
pop
in
stos
and
inc
or
and
mov
xor
test
lcall
out
mov
mov
inc
xchg
and
push
hlt
addr16
lret
and
loopne
outsl
mov
mov
mov
push
sub
jp
and
mov
cwtl
stc
pop
sbb
add
mov
inc
out
das
out
push
aas
pop
cs
inc
aas
or
rcrl
push
cmpb
setge
fimuls
test
xchg
imul
cld
lret
sti
imul
stos
insb
push
jnp
dec
lods
clc
cli
lock
stos
nop
push
cmp
jge
sahf
stos
mov
imul
xchg
mov
ret
pop
and
dec
inc
push
out
iret
in
fisttpll
bound
adc
push
cmc
jb
cltd
push
pop
sub
mov
mov
pop
jb
dec
fistl
scas
addr16
test
adcl
push
or
out
xchg
xor
cld
mov
sarl
aas
fisubrl
and
mov
mov
mov
jp
fstpl
inc
shrb
sub
push
or
gs
js
pop
xchg
mov
lret
outsb
lods
mov
jg
cmp
leave
or
mov
mov
pop
or
cwtl
add
shll
and
mov
or
sub
loop
pop
insb
jae
scas
data16
fdivrs
add
sub
clc
imul
repz
negb
mov
cmpsb
cmpb
cwtl
mov
and
test
dec
or
data16
sbb
mov
xchg
or
or
dec
xor
fwait
cmp
mov
es
bound
in
incl
and
jns
xchg
and
sbb
leave
test
je
mov
cmp
daa
loope
rcll
mov
hlt
mov
pop
inc
mov
jecxz
jge
mov
inc
rol
mov
lock
add
cmp
rep
xor
mov
add
adc
mov
adc
fdivrp
xchg
adc
punpcklbw
in
jne
int3
daa
stc
ret
mov
mov
jno
cmp
lret
cmp
shlb
add
mov
cltd
rcl
adc
sbb
add
iret
mov
pop
test
decb
cmp
loope
mov
or
push
int
aam
popa
cld
push
add
and
jbe
ret
enter
sub
fdivrl
test
jecxz
test
repnz
mov
xchg
mov
dec
gs
add
mov
inc
mov
push
sbb
dec
int
addl
push
stc
cwtl
xchg
testl
das
xchg
pushf
mov
push
stos
insb
lods
cmp
jle
xor
andb
outsl
shl
inc
lret
jp
sahf
pop
jne
mov
outsb
sub
mov
mov
ljmp
call
int3
xor
loope
push
decb
inc
ja
inc
pop
pop
test
pop
jo
mov
pushf
movsl
repz
lret
pop
sbb
aad
outsl
fbstp
cmp
push
test
popf
lds
adc
in
insl
and
add
js
jb
mov
mov
sahf
bound
or
dec
test
sti
stos
or
pushf
sub
lds
test
jge
aaa
add
sub
fwait
xor
dec
mov
jo
add
pop
mov
pop
insb
leave
inc
add
jle
pop
fadd
or
jp
mov
xor
push
aad
xor
inc
jne
add
jns
xchg
insl
pushf
outsb
cmp
es
xor
dec
push
push
jmp
push
mov
iret
fistpll
ret
xchg
push
cmp
jecxz
and
insb
inc
cs
sub
cmpsb
xchg
stc
xor
mov
rcrb
stos
test
push
std
das
add
les
jne
test
mov
and
fs
cmpsl
push
cltd
int
dec
lcall
fdivr
or
jo
filds
ja
push
xor
divb
mov
insb
test
xchg
cmc
test
pop
jge
cmovnp
xor
andl
xor
inc
mov
ljmp
cwtl
shll
icebp
and
pop
jae
jbe
int
adc
mov
xor
mul
adc
iret
arpl
mov
push
push
or
in
sub
mov
pop
incl
mov
repnz
pop
or
mov
pop
push
adc
data16
cmp
cltd
and
xor
test
lret
cmpsl
sbb
or
lret
bound
and
andl
pushf
push
stc
jo
pop
mov
into
dec
lret
mov
dec
lcall
cs
sub
or
sbb
mov
push
jecxz,pt
loopne
and
mov
loopne
test
or
or
mov
in
cli
xorb
mov
imul
lret
cwtl
mov
andl
or
or
jae
xchg
aam
mov
ds
xchg
push
orl
mov
popf
ja
xor
cli
orl
out
cmp
dec
dec
sarl
xor
mov
xchg
mov
arpl
pop
xchg
outsb
mov
inc
pop
inc
enter
out
mov
inc
aam
cwtl
inc
jecxz
inc
dec
addb
pop
in
jns
outsb
sub
shlb
pop
pop
mov
pusha
out
sbb
cmpsb
and
stc
repz
and
je
sbb
adc
out
fucom
gs
xor
fbld
pop
leave
sbb
mov
loop
xchg
sub
mov
lret
int3
sub
dec
pop
cltd
sbb
pop
jae
loope
enter
pop
jae
pop
and
in
test
jo
sbb
jb
in
mov
inc
mov
jbe
pop
fdivrp
and
xlat
cmp
adc
and
in
dec
cmp
inc
cmp
fdivrp
push
out
xchg
inc
shlb
loopne,pt
inc
mov
jbe
mov
and
fisubs
adc
neg
cmpb
mov
mov
xor
insb
inc
xchg
nop
repnz
dec
push
adc
push
sub
mov
js
xchg
adc
test
lock
in
cmp
add
pop
out
xorl
enter
mov
push
insl
push
jge
add
xorl
pop
cs
lock
movsl
icebp
adc
fwait
push
test
xor
popf
sbb
fcomip
addr16
test
outsb
mov
jg
idivl
std
addr16
int3
sub
outsl
loop
ja
je
pop
cli
fistpl
push
mov
or
add
mov
mov
stos
out
sahf
jo
or
stc
xchg
cmp
jecxz
cmc
loopne
ja
les
out
cmp
adc
loop
xor
arpl
cmp
sbb
les
jge
push
scas
popa
jge
es
inc
jnp
dec
nop
sbb
cltd
cwtl
sbb
add
stos
in
xchg
xor
push
fs
dec
and
dec
test
lock
push
out
and
insl
es
les
ret
inc
imul
xchg
adc
stc
les
mov
xor
data16
ljmp
jne
adc
push
xchg
inc
push
pusha
inc
je
pushf
sub
lods
pop
adc
data16
sub
and
aaa
sub
xor
mov
and
sub
outsl
cmp
inc
incl
out
or
call
lcall
repz
int
repnz
fistpll
lods
sbb
and
push
sub
lods
xorb
mov
aas
cmc
inc
shll
and
mov
sbb
and
in
stos
mov
xor
lock
xor
into
mov
scas
lea
lods
outsb
sbb
sti
inc
int
sarb
sahf
xchg
out
push
and
mov
test
pop
add
cs
andnps
pop
les
sbb
das
push
mov
push
stos
push
aas
aam
into
adc
and
outsb
xor
adc
sub
fistl
mov
and
aaa
sub
jnp
jmp
jnp
push
sbb
sbbl
or
xor
jns
mov
lock
push
out
mov
sub
mov
jmp
ds
push
pop
mov
out
xchg
imul
call
mov
mov
sti
add
cmp
add
cmp
jle
mov
sub
pop
fidivrs
push
mov
pop
push
insb
lahf
mov
addr16
inc
xor
inc
cld
push
out
xor
sub
pop
out
enter
or
add
jmp
addl
pop
jo
add
ret
push
ss
push
jmp
add
hlt
or
jge
outsl
push
jae
push
dec
mov
inc
pop
dec
int3
sub
imul
xchg
xlat
push
adc
push
xlat
into
lahf
lods
fisttps
push
xchg
pop
mov
push
sbb
inc
mov
mov
data16
cwtl
in
ficoms
push
adc
rcll
repnz
pop
stc
insb
or
loop
cld
pusha
mov
loop
aas
shl
bound
xchg
cmc
push
mov
push
mov
add
xor
adc
push
push
nop
pop
pop
or
pop
inc
arpl
mov
mov
mov
lret
or
rclb
pop
sbb
lods
dec
adc
push
out
adc
xor
adc
pop
push
add
or
js
mov
mov
pop
jo
and
mov
leave
mov
mov
pusha
aas
add
out
aas
mov
xchg
sbb
int
jmp
add
add
roll
call
std
stc
ret
sub
in
sti
cmp
mov
sbb
add
sub
out
adc
or
pop
loop
ss
lahf
mov
scas
addr16
iret
movsl
cmp
pop
test
add
and
pop
cmp
xchg
mov
xchg
mov
std
inc
mov
clc
xchg
inc
inc
fisubl
push
fiaddl
decl
push
mov
xor
cmpsb
and
lds
or
xor
iret
lahf
sbb
cmp
mov
cmpsl
jnp
cmpl
pop
mov
or
or
and
xor
loopne
les
cs
das
mov
ret
push
jo
dec
pop
mov
out
and
shrl
and
sbb
mov
pop
ljmp
cld
mov
icebp
roll
in
mov
pop
and
push
sub
lods
insl
arpl
mov
pop
clc
cmpsl
jge
add
adc
push
jo
jg
jns
in
fnstenv
ret
enter
lds
and
das
sti
icebp
pop
es
pop
les
roll
leave
repnz
mov
add
jne
xor
push
call
or
cmc
stos
push
cmp
js
push
cmc
push
jge
mov
cmp
xor
xor
pop
sarb
std
or
cwtl
sarl
leave
scas
jne
sub
mov
sbb
lods
outsl
xchg
sub
xchg
mov
pop
popa
scas
fprem
push
flds
fnstsw
test
and
push
lods
test
je
pop
cmp
or
aaa
push
lret
dec
inc
cmp
or
mov
popf
arpl
int3
push
std
cld
xor
push
add
xchg
adcb
or
dec
pop
cmc
arpl
push
fiadds
mov
push
or
sbb
dec
inc
dec
gs
pop
dec
add
je
test
sbb
enter
xchg
dec
add
lret
dec
mov
fucomip
push
loop
or
mov
imul
fstpl
mov
ja
das
les
cld
jge
es
pop
nop
addr16
inc
mov
test
jecxz
mov
adc
leave
ret
or
add
sub
jno
xor
dec
cld
insl
arpl
loopne
aad
pusha
inc
lret
ds
inc
jns
sbb
mov
inc
xorb
in
test
add
jg
mov
xchg
movsl
xor
rcl
jp
fstps
xlat
jne
mov
in
push
mov
inc
aas
aaa
sub
xor
addr16
dec
repz
ljmp
test
test
pushf
lea
jl
or
jge
push
and
jl
int3
mov
cmp
mov
or
and
inc
gs
sub
lret
mov
bound
addr16
sub
fnstsw
adc
fcompl
popa
sbb
popf
cmp
aas
jns
dec
or
inc
cmp
inc
popf
jle
adc
icebp
movsb
and
rcrl
inc
mov
icebp
push
aad
jno
sarb
aad
xlat
sahf
sahf
pop
mov
cmp
inc
ret
out
or
push
inc
push
jns
xchg
jecxz
or
xor
loopne
mov
imul
stc
pop
outsl
pop
lds
cli
loopne
jbe
push
sarb
xor
aas
std
fdivrl
inc
mov
mov
stos
sbb
mov
cmp
fists
cmp
in
push
xchg
xchg
pop
cmp
test
adc
pop
dec
jecxz
mov
roll
add
cmp
and
fistps
and
repnz
fs
adc
in
mov
cli
cmpsb
arpl
je
push
loope
jns
repnz
mov
adc
gs
lret
cmp
addr16
pop
jne
insb
cmp
insb
movsl
pop
dec
mov
hlt
movsb
hlt
mov
rcr
inc
fs
int
and
xchg
mov
mov
loopne
cli
lahf
sub
rcr
andl
mov
rcrl
push
xlat
mov
and
js
cltd
das
mov
pop
jecxz
jae
xchg
outsl
jg
nop
aam
lahf
out
cmp
or
adc
dec
repz
sub
mov
mov
adc
call
sbb
xorl
jns
pop
and
lcall
mov
push
xor
lock
cmc
xchg
cmc
mov
mov
pop
out
push
mov
sub
mov
mov
pop
sarl
or
adc
sbb
pop
mov
hlt
mov
adc
insl
je
cmp
cmp
pop
pop
add
mov
hlt
sbb
enter
jo
ds
xlat
in
sbb
dec
mov
icebp
lds
aas
xchg
push
scas
sti
mov
scas
in
out
or
stos
add
js
ret
inc
push
lds
jb
push
push
fsts
xchg
push
fldenv
imul
pusha
mov
pop
mov
xchg
xor
mov
jb
ja
out
xor
push
lahf
cltd
cs
push
jp
adc
mov
dec
dec
bswap
repnz
add
outsl
addr16
daa
jl
aaa
mov
repz
jno
fistpll
push
in
fdivrl
dec
arpl
inc
add
loop
lahf
sub
ljmp
mov
dec
inc
clc
dec
push
jne
orl
insb
test
mov
pushf
std
push
and
inc
mov
addb
lds
sbb
fdivrl
xor
or
mov
cmc
rol
sarl
cld
mull
std
pop
fdivrs
push
and
in
scas
fldl
aas
lds
push
sbb
push
mov
dec
dec
inc
fisttps
cmp
push
les
dec
movsb
fidivs
adc
addr16
stos
xor
mov
push
sti
or
daa
js
outsb
cmp
das
fld
adc
jecxz
sarb
add
js
xor
add
xchg
cltd
add
loopne
push
int3
sti
imul
dec
mov
mov
xor
and
loopne
push
mov
sarl
sbb
inc
scas
fcoml
inc
lahf
mov
and
not
ror
pop
sarb
and
loopne
sti
push
cltd
frstor
outsb
jecxz
js
aaa
movsl
push
outsb
add
flds
call
insw
or
bswap
ja
inc
mov
repz
aas
daa
aaa
xor
movsb
lahf
out
inc
test
sbb
out
mov
call
pop
sub
movsb
jo
push
in
add
mov
pop
pop
jl
aad
xchg
dec
jo
jnp
dec
jb
enter
xchg
clc
lea
pop
push
rcrb
mov
dec
push
push
dec
push
mov
mov
fwait
sahf
fdivs
int
mov
push
add
cmp
add
adc
mov
sahf
mov
sub
lahf
jno
sbb
xchg
repz
mov
aas
lds
pop
xchg
sbb
or
bound
xor
jne
dec
or
add
movsl
jle
mov
pop
ss
cmc
mov
out
pop
adc
call
push
inc
data16
adc
pushl
rorb
std
adc
aas
mov
mov
les
pop
shl
sbb
jae
inc
jecxz
xchg
sbb
or
mov
jnp
fistpll
rol
pmaddwd
jmp
stos
xor
mov
adc
mov
mov
pop
stos
and
mov
rorl
sbb
loope
inc
fimuls
inc
dec
ljmp
inc
ljmp
nop
mov
dec
dec
loopne
mov
pop
cmpsb
bound
sbb
fcmovnbe
int3
cs
mov
jmp
or
and
add
inc
xor
stos
push
insb
mov
cmp
pop
xor
sbb
daa
push
mov
sahf
pop
into
lret
sbb
pop
or
jg
leave
push
cmp
les
push
dec
inc
cmpsl
sub
loope
testl
leave
xor
insb
sub
add
and
push
jmp
add
add
xchg
sbb
dec
pop
pop
arpl
and
sub
or
cmp
xor
les
mov
push
dec
lds
fcoml
pop
cli
int
push
loop
imul
adc
andb
xchg
ss
bound
adc
adc
mov
mov
or
cmpsb
sbb
int
leave
imull
rol
dec
pop
jle
ret
mov
mov
lcall
sbb
xor
fwait
das
pop
sti
mov
dec
rcrl
push
cmp
push
xchg
adc
lcall
push
jae
inc
xchg
sbb
add
adc
andl
or
lret
in
cmp
or
push
xorb
movsb
ss
and
call
mov
repnz
lret
mov
sbb
or
or
rolb
xchg
cmpsl
inc
dec
or
ficompl
aaa
sbb
lcall
pop
jns
jg
fwait
dec
xchg
adc
addr16
daa
ljmp
jmp
lret
xlat
or
pop
pop
jp
ljmp
pop
add
push
mov
lahf
jae
push
mov
mov
dec
cli
bts
jp
les
test
cltd
jo
fdivrs
push
dec
xchg
sbb
inc
cld
sbb
sub
leave
xchg
mov
lds
cltd
cmc
xor
mov
dec
hlt
lea
sbb
je
hlt
add
lcall
sbb
jge
xchg
cmpsb
pop
enter
cmp
test
sbbl
fwait
hlt
mov
sbb
inc
jge
sbb
push
in
mov
cmp
sub
mov
and
jge
lret
lods
mov
sub
sahf
ret
movsb
sbb
push
cmpsb
test
mov
enter
mov
add
xor
imul
repnz
or
sub
mov
inc
cld
lock
sahf
xchg
push
daa
in
fmull
xchg
sub
mov
mov
ljmp
movsb
iret
int
fisubrl
pop
lods
xchg
dec
add
and
adc
cmpsb
repz
adc
inc
mov
adc
int3
gs
add
lea
add
loop
mov
push
fisubrl
imul
cli
mov
ja
stos
pop
pop
fdivs
imul
stc
pop
xlat
mov
imul
mov
mov
cmp
mov
and
shll
add
mov
xlat
cltd
leave
mov
data16
jmp
push
pop
pop
jno
shlb
adc
int
push
dec
je
cs
push
aad
popf
arpl
test
fcomps
cmp
sbb
pop
ljmp
mov
notl
push
iret
aas
bound
test
mov
mov
jmp
jno
jle
in
jae
fisttpll
and
mov
test
movsb
adc
add
insb
mov
mov
shll
scas
mov
mov
cmp
das
aas
jo
lcall
rcll
xchg
testb
pop
leave
jne
mov
xchg
sub
mov
mov
and
shrl
cmpsl
push
or
and
insl
mov
mov
sbbb
sbbb
leave
mov
test
popa
repnz
xor
inc
xorb
aaa
xor
mov
inc
fwait
cmp
and
sbb
push
loope
std
in
dec
xchg
lods
dec
sub
in
stos
push
xor
mov
pop
pop
inc
dec
loopne
cmp
xchg
pop
sti
xchg
cmp
jmp
push
cmpsl
mov
xor
push
ljmp
mov
or
sub
std
dec
rcrl
jae
mov
xchg
test
mov
jle
in
or
mov
mov
jno
decl
adc
cmp
cld
lcall
dec
cmpsl
jno
mov
cmc
mov
cmpsl
cmpsl
icebp
je
cmpsb
loopne
push
pop
inc
xor
ljmp
call
pop
jno
incl
pop
adc
insl
mov
test
cmpb
test
mov
std
sbb
int
leave
jecxz
and
into
shl
push
mov
lock
xor
mov
cwtl
mov
aas
dec
push
mov
xlat
jl
ret
stos
cltd
std
aas
or
sub
pop
jns
mov
js
cli
shlb
xchg
xor
dec
enter
fsubrs
ljmp
cld
push
lcall
jp
insl
idivb
inc
cmc
cmpsl
shrl
adc
imul
lds
ficompl
pop
sbb
jp
sbb
stos
repnz
jle
mov
leave
pushf
rcl
cmpsl
fbstp
adc
xchg
in
mov
scas
xor
jle
and
je
jnp
sub
push
cs
ss
scas
pusha
jo
pop
push
adc
jnp
fbstp
mov
sub
jo
lret
xlat
push
and
inc
jp
inc
dec
jb
push
in
insl
mov
xor
mov
les
fidivs
adc
stc
cli
lret
call
and
dec
pop
in
inc
cmp
test
loop
pushf
imul
dec
or
stc
bound
jge
stc
jp
mov
push
jmp
push
rorb
jmp
xor
cli
sub
test
imul
inc
lahf
int
das
pop
add
movsl
sub
cli
jmp
inc
test
enter
sbb
inc
xor
sbb
sub
cli
out
xchg
std
xor
int
insl
mov
mov
jecxz
rorl
mov
push
stos
push
movsl
je
mov
popa
pop
das
dec
jecxz
inc
push
mov
cmp
rcrb
stos
ret
dec
fwait
js
push
pop
inc
xchg
mov
sbb
ror
mov
imul
inc
icebp
fsts
push
jnp
mov
rorb
xlat
insl
icebp
sub
das
mov
sahf
mov
pop
es
and
je
add
pop
insl
add
and
xchg
pop
sbb
sti
add
mov
cmp
testl
jecxz
shrb
orb
mov
inc
xor
xchg
xchg
iret
fcmovu
pop
or
cmova
jle
push
in
inc
sbb
je
cmp
push
cmp
xchg
jl
inc
adc
in
add
and
push
jle
adc
fidivrl
addl
adc
lret
xor
cmp
into
cwtl
cmp
lea
push
sti
cmp
bound
test
nop
imul
test
jae
arpl
adc
fildl
jns
xor
xchg
add
mov
fsubrs
loope
icebp
inc
imul
mov
fisttps
xchg
sbb
rorb
jp
cmp
xchg
cwtl
adc
mov
iret
mov
enter
cwtl
repnz
xchg
add
jb
cmp
fwait
es
cmp
es
add
add
call
pushl
ss
cmpl
cmp
pusha
into
xchg
hlt
popf
mov
cmpsl
fadds
jle
mov
push
adc
pop
movsb
jp
xor
bound
mov
mov
mov
inc
inc
sub
mov
mov
movsl
outsb
ss
daa
add
jo
sbb
test
pushf
clc
out
dec
popa
shr
in
cli
push
mov
pop
psrld
xchg
inc
cmpsb
and
cmpsl
push
repz
mov
in
fwait
lret
dec
arpl
leave
push
fcomps
jne
sbb
sarb
jne
mov
mov
or
out
gs
insl
lea
nop
pop
mov
sbb
inc
sub
cs
out
jbe
cmp
pop
mov
or
arpl
dec
stc
fldt
mov
cld
hlt
mov
xor
or
int3
xchg
mov
int3
jcxz
pop
sub
std
jns
and
nop
mov
pop
xchg
sbb
iret
ljmp
inc
cltd
or
ret
push
and
cld
decl
xor
pusha
out
cmc
pop
push
push
xlat
mov
imul
scas
inc
jecxz
dec
ret
sub
imul
or
adc
push
add
push
out
popf
jp
jb
sti
leave
push
mov
mov
or
cmp
rcll
add
clc
das
sbb
fimull
inc
loop
in
mov
jbe
fdivl
loopne
movsb
pop
pop
dec
addr16
dec
or
bound
xlat
cmpsl
jge
out
inc
mov
jb
stos
sub
dec
jbe
pusha
shll
outsl
sti
aad
pop
inc
or
inc
cmp
call
cld
lret
sub
enter
das
pushf
insl
xchg
xor
movsl
mov
add
test
mov
imul
mov
and
repz
dec
jecxz
cmc
clc
add
lea
inc
push
pop
stc
and
push
inc
xor
cmp
and
xor
sbb
dec
cmp
add
lock
push
sub
inc
lds
sub
outsl
mov
cmp
pusha
adc
xor
dec
rorb
sbb
repnz
aam
push
les
jae
inc
shll
leave
jmp
mov
jl
push
and
adc
iret
lock
xor
jno
cmp
dec
jg
mov
inc
xchg
enter
out
xor
into
and
lret
fiaddl
out
xorl
adc
pop
sti
nop
push
push
sub
bound
movsl
mov
das
call
cmp
cld
cwtl
jp
cld
scas
lret
fsubs
dec
and
loopne
das
mov
dec
inc
or
repnz
dec
xor
lds
out
outsb
fimull
add
mov
pushf
xchg
sbb
mov
push
out
jl
int3
dec
cmp
push
cmp
dec
sub
inc
loope
iret
and
out
icebp
xor
xchg
call
push
cmc
insb
dec
mov
enter
xor
jne
loop
adc
adc
mov
sub
add
mov
adc
aad
test
mov
adc
repnz
mov
loope
mov
in
mov
daa
mov
clc
jbe
repnz
sub
mov
xchg
nop
test
or
jae
stc
cs
aas
sub
and
or
imul
and
leave
sbb
movsl
les
jno
fnstenv
xchg
jecxz
cwtl
adc
sub
out
pop
jo
pop
sbb
mov
sahf
data16
jge
or
xchg
test
cli
xchg
push
jno
or
insb
pop
js
insl
adc
lret
fadds
in
movhps
pop
insl
icebp
mov
sub
mov
and
les
add
add
or
out
sbb
pop
rorb
insl
mov
cld
inc
shl
xor
shr
add
out
rol
sbb
leave
add
push
xor
cmp
xlat
sbb
in
pop
sbb
sub
std
sub
nop
adc
xor
stos
fwait
mov
pop
fwait
and
imul
push
or
fstpl
sub
inc
out
sbb
aad
jnp
mov
pop
fwait
popf
int
fs
imul
cmc
in
sub
push
or
push
xchg
adc
loop
jle
repz
fidivs
mov
inc
sahf
inc
movsl
pusha
or
mov
outsb
test
push
je
mov
shll
cmp
pop
and
pop
jae
adc
mov
rol
pusha
int3
xchg
and
push
enter
ljmp
call
int3
xor
xor
jmp
or
int3
cli
push
repz
push
ret
pop
adc
xchg
inc
or
xchg
mov
adc
lea
and
dec
popa
push
int3
testb
imul
dec
and
fcmove
jmp
xor
out
sub
mov
push
or
and
int3
mov
pop
cmpsl
aas
adc
aad
andb
scas
mov
dec
or
jp
jae
inc
pop
inc
rcrb
mov
bound
xchg
cltd
aaa
aad
test
outsb
xor
xchg
jb
pop
int
push
mov
push
fiadds
aam
xor
sbbl
inc
test
jo
xchg
adcl
push
mov
sarl
xlat
cmpb
mov
jno
mov
mov
pop
push
jle
push
adc
xchg
cmp
pop
pop
loopne
mov
jmp
jae
cmpsl
and
cmp
jnp
fsubrl
pop
popf
xchg
dec
jns
sbb
cli
sub
mov
jl
in
jp
cld
lcall
jbe
cmp
clc
std
out
adc
loope
aaa
inc
jnp
cmp
mov
sbb
xor
mov
ds
flds
jecxz
pop
cmp
cmp
insb
adc
in
xchg
adc
fsub
mov
lea
xor
mov
xchg
les
dec
adc
inc
mov
lods
out
mov
sbb
dec
sub
jp,pt
sub
fisttps
xlat
les
mov
adc
scas
pop
dec
pop
push
xor
ja
insl
sti
mov
jnp
or
cmp
jns
ret
mov
pop
cmp
or
jno
jl
pop
push
clc
or
cmp
hlt
dec
decl
mov
ret
jl
sbb
arpl
mov
std
push
loope
or
aad
add
adc
and
cmpsl
jecxz
push
xchg
or
pop
jmp
push
mov
in
test
jb
ret
pusha
mov
dec
jnp
dec
jno
popf
pop
or
push
sbb
sti
sbb
test
je
scas
adc
lds
sbb
push
es
cs
mov
ja
cmp
add
jle
sti
pop
rcl
addr16
loope
fdivs
popf
loope
pop
shrl
xor
dec
pop
out
enter
outsl
pop
mov
dec
cs
pop
ja
test
inc
out
mov
push
clc
inc
negl
out
sbb
in
repz
inc
ss
or
out
jle
pop
adc
sbb
je
or
push
mov
gs
push
jnp
fcmovb
and
cmpsl
lds
jmp
stc
aaa
addr16
arpl
pop
fs
add
xor
xchg
out
fmull
ja
add
xorl
adc
or
fwait
adc
adc
push
jg
and
adc
pop
ja
inc
fiaddl
push
icebp
mov
adc
push
adc
int
sub
xor
cmp
lahf
inc
sar
jnp
es
sub
sbb
push
push
xchg
push
push
inc
in
test
xor
sbb
and
mov
mov
jb
daa
add
push
test
mov
jnp
inc
adc
cmpsb
mov
xor
inc
jecxz
in
sbb
sbb
jge
sub
mov
adc
cld
push
aas
out
xor
xchg
icebp
and
pop
js
lea
bswap
xor
lods
xchg
adc
pop
xchg
imul
in
lock
movsb
mov
adcl
mov
rcll
out
xor
inc
and
cmp
rcl
shrl
and
lods
dec
mov
ret
xor
aad
outsb
inc
in
movsb
inc
adc
mov
out
ficoml
and
push
push
aas
std
add
xchg
popf
imul
out
or
inc
fstps
inc
jecxz
pop
test
fadd
outsl
sbb
mov
std
or
and
inc
sbb
ja
in
mov
sub
cmpsl
sbbb
ret
outsb
lea
stc
mov
sbb
cmp
inc
out
push
dec
mov
je
xchg
push
lret
xchg
sub
out
loope
pop
dec
loopne
mov
ret
negl
imul
addr16
jo
mov
lock
inc
fsubp
mov
inc
lock
and
cwtl
cmc
push
sub
ljmp
leave
mov
cld
bound
sub
mov
ja
in
adc
sbb
push
ds
fsts
icebp
xor
cltd
sub
mov
adc
nop
sbb
cmc
roll
sbb
mov
jb
loope
lods
and
cmovnp
lcall
jno
xor
mov
shl
fs
jp
mov
cmp
cs
pop
add
push
scas
pushf
dec
popf
sub
call
pop
sub
pop
mov
dec
adc
xchg
push
lds
scas
enter
jbe
jge
mov
or
and
sbb
pop
ss
das
shll
adc
and
mov
shl
jb
or
push
mov
add
and
dec
mov
test
fstpt
push
hlt
loopne
adc
add
mov
pop
cli
mov
ret
repnz
pop
ja
mov
push
enter
dec
inc
adc
mov
xchg
push
sub
pop
sbb
adc
rorb
xchg
lds
or
test
cmpsb
sub
fisubrs
push
xor
pusha
ret
ret
fidivl
adc
push
leave
push
mov
inc
lock
enter
ret
rclb
imul
cmp
mov
lret
clc
pop
adc
sbb
out
pop
icebp
mov
ds
ja
jl
sbb
fs
test
mov
out
push
mov
test
pop
into
mov
mov
sub
dec
inc
xchg
pop
ss
popl
es
and
cltd
scas
cmc
out
enter
fisttpll
arpl
mov
sahf
in
dec
in
fimuls
gs
dec
pop
jmp
popf
jecxz
fimuls
or
mov
fwait
scas
leave
fidivs
lods
ja
or
add
flds
jp
add
and
sbb
push
jmp
cmpsl
sub
mov
stos
fs
mov
icebp
popa
movsl
xchg
aaa
lea
shl
push
jl
lcall
ljmp
pop
popa
pop
mov
lret
mov
inc
or
and
pop
sbb
push
fiadds
cmp
cmp
loopne
mov
fisttps
stos
ljmp
rorb
sub
popf
pop
repnz
dec
jg
xchg
adc
mov
out
add
test
movsl
add
es
push
xor
xor
mov
gs
insb
cwtl
dec
inc
fsts
fwait
gs
daa
xlat
outsl
hlt
into
jmp
test
or
xchg
mov
cmpsl
dec
mov
arpl
imul
jb
mov
mov
mov
cld
xchg
lods
pop
push
shl
das
lret
js
mov
dec
add
sbb
out
jo
adc
addr16
repz
xchg
leave
incb
loop
shlb
mov
pusha
xlat
sub
arpl
clc
outsl
mov
mov
outsl
out
jbe
cmp
add
add
mov
test
je
cmp
or
outsb
push
xchg
std
test
add
jo
push
fs
push
cmp
fcmovb
shl
dec
mov
adc
icebp
lea
fyl2xp1
and
sbb
in
sub
pop
adc
mov
notl
jnp
test
stos
data16
mov
icebp
jl
xchg
out
push
xchg
xchg
rorl
pusha
popf
xchg
push
mov
pop
xchg
repnz
out
shlb
es
leave
mov
aam
aad
push
mov
repnz
lret
repz
adc
mov
enter
xchg
cmp
mov
add
dec
inc
dec
mov
cmp
mov
dec
mov
jmp
outsl
gs
into
jbe
xchg
ret
pop
loop
icebp
dec
jns
push
push
add
add
rcr
push
ljmp
dec
inc
mov
jbe
pop
xchg
pop
xor
popa
pop
xor
push
adc
int
xor
mov
cmp
adcl
mov
adc
mov
inc
jmp
jne
jg
int3
and
fisttps
push
and
bound
jae
das
inc
add
test
stos
repz
imul
push
insl
ret
inc
movsb
xor
push
testl
push
sbb
js
sbb
sbb
out
sti
xor
mov
cmp
out
xorl
xor
xlat
outsl
cmp
add
pop
fcompl
jno
adc
outsw
mov
and
mov
adc
inc
stos
lret
js
pushf
cld
mov
push
cld
lods
adc
daa
sbb
xchg
mov
adc
push
leave
mov
in
cwtl
bound
fxch
out
xor
loop
daa
jmp
adc
mov
pop
dec
cli
mov
xchg
mov
ss
inc
aam
ljmp
cltd
rcr
in
jo
mov
mov
jmp
outsl
fwait
dec
cmp
stos
out
sbb
jle
dec
stc
in
cmpsl
or
add
xor
mull
xchg
xchg
pop
test
xchg
cmp
clc
or
sub
push
into
cwtl
movsb
lret
pop
stc
scas
xorl
mov
mov
mov
popf
clc
dec
icebp
daa
dec
fnstsw
mov
mov
mov
add
comiss
cmp
pop
push
fsubs
sbb
daa
xor
js
daa
xlat
shrl
fnstenv
fwait
sub
jnp
push
mov
cmpsb
pop
sub
add
inc
aas
inc
xor
and
sbb
xor
xchg
cmpsl
pop
add
fldl
fdivrl
adc
mov
pop
xchg
pop
mov
mov
popa
mov
roll
and
jno
sbb
testb
addr16
in
inc
mov
or
pand
ljmp
repnz
xchg
call
or
std
sti
ljmp
mov
jno
xchg
imul
sbb
pop
int3
pushf
jge
cs
faddl
imul
xchg
cmp
mov
bound
sti
hlt
in
xor
enter
scas
inc
nop
in
fs
jge
sbb
cltd
out
xor
insl
pusha
add
push
mov
ret
lods
xchg
in
cwtl
cmpsb
testl
into
jne
mov
push
push
mov
je
stc
in
data16
and
mov
add
push
mov
loop
push
inc
jns
xchg
test
sub
les
sub
jnp
jle
jb
sub
mov
cmp
rorl
lret
push
pop
dec
popf
adc
jb
fmuls
mov
sub
movsl
jns
negb
call
inc
dec
addr16
popa
jl
mov
inc
fwait
push
adc
iret
int
adc
adc
aaa
aad
lahf
shlb
push
jae
jmp
leave
jbe
or
test
arpl
dec
and
mov
add
lods
iret
cmp
xchg
mov
arpl
jo
cmpsl
pop
into
xchg
xchg
mov
lods
dec
bnd
call
in
mov
call
dec
mov
xchg
jb
mov
mov
mov
pop
and
enter
pushf
hlt
lods
out
mov
jbe
xor
push
pop
cmp
stc
mov
jecxz
fwait
xchg
popa
fsubl
and
push
lahf
ljmp
subl
dec
push
adc
push
stc
push
in
pop
inc
cli
inc
dec
out
inc
push
adc
aas
and
aas
push
rclb
pusha
mov
sub
movq
add
and
add
into
icebp
xchg
mov
ss
add
xchg
test
cwtl
adc
mov
sbb
shll
das
mov
js
adc
push
setbe
jnp
repz
stc
jae
enter
mov
xor
pop
sbb
roll
test
scas
insb
lods
mov
subl
aam
pop
je
jno
fisubrl
aam
stos
loopne
pushf
mov
inc
xchg
cmpsb
dec
mov
stc
bound
lods
and
jmp
mov
loope
fdiv
sbb
or
in
cmpsl
dec
mov
in
insb
push
cmp
js
jp
lcall
jge
dec
sub
cld
fs
add
xchg
lret
mov
test
sbb
adc
clc
sub
lods
ljmp
push
sub
inc
push
mov
hlt
in
xchg
rclb
pop
stc
fbld
testb
out
jns
int
mov
push
je
dec
mov
fcomps
rcll
pop
fst
pop
jge
je
bound
mov
decb
mov
jmp
pop
bound
adc
xchg
hlt
sarl
lock
push
sahf
pop
lods
in
shrb
jge
add
push
pop
and
push
push
mov
mov
movsl
sub
xor
jecxz
inc
js
add
shlb
cmpsl
das
stc
xor
xor
jecxz
adc
pop
out
cmp
insb
add
into
pop
xor
gs
push
cmpsl
loop
adcl
outsl
in
xor
push
popf
sbb
xor
ret
jb,pn
and
cmp
arpl
sbb
fs
in
arpl
adc
bound
popf
xor
jge
mov
pushf
inc
mov
mov
movsl
fsts
movsb
cwtl
addl
adc
jns
repnz
icebp
lret
lcall
cmp
cmp
and
sahf
inc
mov
pop
mov
jne
jmp
mov
bound
cwtl
rorl
sbb
aam
ficomps
push
mov
xor
jb
or
mov
fidivs
push
fwait
jp
shlb
repnz
outsl
ja
mov
ret
inc
mov
push
popf
lcall
fcmovne
fidivrs
hlt
mov
dec
inc
xchg
adc
pushf
mov
pusha
xchg
rorl
imul
cmpsb
sbb
movb
jmp
loopne
or
push
sub
dec
or
cmp
rcrb
mov
repz
mov
fs
sti
test
cmp
into
gs
inc
pushf
sub
icebp
out
fdivrs
cmp
dec
cmp
daa
fcoms
mov
add
rcl
and
ficoml
xor
data16
daa
std
imul
mov
ss
sbb
inc
je
push
xor
mov
dec
jae
leave
push
push
je
dec
or
test
xchg
jge
inc
cmpb
add
ja
divb
mov
mov
notl
push
push
fs
inc
stc
pop
clc
cmp
cmp
rcrl
mov
xor
pop
xchg
mov
jmp
or
outsl
push
mov
xor
push
imul
cmpsl
je
in
sbb
cli
mov
push
sbb
fstps
mov
popa
jns
xchg
inc
enter
jno
mov
lcall
jbe
es
dec
aam
mov
int
sub
pop
sbb
pop
out
adc
jo
push
fmul
leave
mov
addr16
mov
mov
lds
test
scas
inc
sbb
xorl
rcll
or
cs
lcall
in
mov
push
stos
loop
jg
and
push
rolb
add
dec
and
lcall
xor
idivb
fucomi
insl
push
sub
xor
mov
push
lods
out
mov
mov
ljmp
lods
lret
dec
mov
sti
jecxz
sbb
add
cmc
push
push
push
dec
push
js
jae,pn
inc
std
inc
in
pop
add
adc
inc
xchg
add
jge
fcmovnb
imul
xchg
mov
dec
outsb
movsl
pushf
xor
jbe
fiadds
xor
xchg
divb
cmp
insl
aam
invd
sahf
pop
adc
leave
mov
test
and
mov
pusha
mov
sbb
xlat
cltd
clc
dec
pop
das
cmp
xor
in
ljmp
lcall
test
cltd
push
or
out
inc
mov
mov
repnz
aas
shl
jb
sbb
mov
lcall
or
and
mov
mov
inc
xchg
outsl
mov
jmp
mov
std
frstor
les
mov
pop
out
loope
and
mov
repz
aas
push
fisubrs
fcmovbe
dec
mov
fcomps
pushf
sbb
xor
movswl
outsb
fwait
nop
jle
test
mov
aam
push
jnp
lods
push
sbbl
lahf
xchg
outsb
xchg
mov
or
xchg
xor
dec
cmpsl
aaa
mov
mov
jno
mov
fxch
mov
jle
and
ds
pop
out
add
push
dec
xchg
cltd
mov
push
cmp
and
in
dec
aad
ret
inc
arpl
inc
outsl
lret
inc
in
popa
mov
xlat
js
nop
xchg
mov
jnp
sub
loope
push
test
inc
xchg
jne
imull
out
dec
push
ficoml
fidivrs
daa
sbb
outsl
jg
cmpsb
divl
sbb
push
and
add
add
je
push
inc
xchg
xor
xchg
popl
xlat
dec
add
add
test
add
sub
xor
ds
fimull
pushf
addr16
or
subb
clc
fadds
cltd
xor
pop
dec
lret
cwtl
pop
add
add
add
iret
std
fisubl
dec
mov
inc
cwtl
or
add
sub
push
imul
leave
cmpsb
add
dec
lods
push
push
cmp
dec
add
rcll
sbb
mov
fbstp
dec
jno
loope
pop
xchg
sub
lahf
xchg
fcomi
dec
cs
dec
testl
sbb
mov
je
out
mov
jmp
cli
mov
mov
call
stos
jmp
ljmp
jl
repz
fidivs
mov
cmp
lds
cld
mov
cmp
or
mov
and
popa
andb
dec
mov
cwtl
popa
push
mov
cmp
cmpl
or
stos
in
out
jb
inc
push
dec
fstpt
or
icebp
or
mov
and
repnz
mov
xchg
sub
daa
sub
pop
push
push
push
add
jecxz
mov
jl
into
mov
pop
xchg
mov
scas
cwtl
in
ja
outsb
xor
xor
jge
push
insb
jg
push
or
out
lcall
push
test
dec
add
stos
in
mov
or
in
out
lea
cmp
aaa
jns
mov
add
scas
call
add
xchg
clc
jp
or
imul
jmp
leave
in
mov
fisubrl
js
adc
inc
jno
adc
and
out
inc
cmpsb
add
xchg
mov
cmp
subl
or
adc
fistps
shufps
inc
sbb
mov
inc
pushf
push
scas
xor
movsl
popa
popa
ljmp
cltd
jge
pop
int
xor
mov
cmp
addr16
fwait
jae
dec
jo
mov
es
dec
popf
push
pop
and
scas
loope
out
mov
shl
sbb
jge
test
rcrb
dec
fists
cmpsl
jl
cmp
test
rcrb
dec
fnsave
mov
inc
xchg
jnp
repnz
test
xor
push
add
pop
pop
xchg
hlt
mov
lock
dec
mov
mov
in
push
xorl
or
mov
push
mov
testl
cmp
jne
jp
movsb
ljmp
int
dec
lock
lahf
pop
fcoms
jns
inc
je
int3
enter
and
pop
stos
mov
sub
aam
jnp
aam
mov
icebp
loopne
inc
gs
mov
mov
sbb
jle
dec
fnstenv
insb
adc
pushf
xchg
test
add
shrl
push
out
in
sbb
shlb
lcall
fsubrs
mov
push
inc
dec
in
imul
cmp
mov
jbe
es
out
shl
xlat
mov
sub
sub
in
jo
nop
and
pop
push
or
inc
aad
cmp
outsl
adc
or
and
inc
lret
lahf
adcl
clc
or
dec
pop
ja
push
aas
xor
sbb
js
inc
push
jnp
mov
loope
mov
daa
sbb
mov
test
push
loop
js
dec
mov
andl
adc
add
xor
cmp
icebp
mov
insl
and
push
scas
xchg
pusha
pop
xchg
pop
add
mov
jns
sub
int
sub
mov
or
adc
pop
decl
fisubl
mov
fst
xchg
adc
push
jmp
mov
dec
ds
sub
mov
push
mov
xor
js
mov
sbb
jge
gs
sbb
out
cmpsl
addl
je
out
push
jl
inc
mov
and
jl
das
dec
push
or
add
pop
xor
add
les
mov
repz
or
cwtl
push
sub
jne
repnz
or
aas
sbb
jnp
sbb
mov
jnp
mov
clc
enter
sub
push
out
aam
fcoms
xor
xchg
pop
pop
jl
out
cmc
mov
movsb
cs
and
xchg
lods
lock
shrb
lock
testl
dec
xor
aad
sbb
popa
cmp
enter
cmp
sbb
push
xor
add
inc
inc
cmpb
cli
cmp
pop
testl
inc
inc
add
xor
pop
jo
loope
fs
stos
xchg
pop
outsb
jge
das
lret
push
pop
sub
out
dec
cmpsb
cmp
inc
addb
in
dec
enter
jp
clc
pop
rcll
dec
mov
push
xchg
push
sub
out
xchg
dec
mov
xchg
xor
mov
mov
imul
out
dec
cltd
adc
mov
shrl
jne
ret
fisubrl
jae
pop
mov
or
lods
aas
mov
adc
push
cmc
lar
filds
cmpsb
lds
adc
daa
in
push
insb
push
scas
je
pop
pusha
mov
nop
mov
addr16
sub
outsb
loop
and
dec
mov
scas
int3
or
xor
cmp
leave
inc
cmp
pop
sarb
roll
jnp
sarb
xor
addr16
cli
push
pushf
pop
inc
jbe
add
popf
mov
fisubrl
adc
sub
jae
icebp
das
jns
dec
push
xor
adc
jecxz
add
push
rcll
arpl
cwtl
mov
adc
test
pop
jecxz
popf
mov
pusha
jp
imul
shll
les
fcoms
loope
scas
sahf
lods
dec
mov
and
movsb
add
mov
popf
xor
mov
add
pop
incb
andb
dec
or
cld
inc
loope
imul
mov
ljmp
push
addr16
inc
test
push
ds
dec
shlb
sbb
incb
movsl
aad
movsl
mov
mov
mov
fs
push
sub
or
xlat
decb
dec
dec
jg
mov
cmp
xlat
sub
out
fst
or
xchg
jg
sub
mov
pop
mov
addb
in
and
subb
sub
loope
mov
pop
fimull
xlat
das
cmp
cmc
mov
sbb
xchg
ja
or
cs
cmp
call
test
sub
inc
jl
push
gs
sub
out
cmpsb
pop
imul
movsl
cmpsb
inc
shlb
les
out
dec
out
and
sub
inc
jae
sub
jecxz,pn
in
fildl
and
mov
jecxz
adcl
jl
xor
fldl
cmp
out
clc
pop
not
xchg
cwtl
lock
and
cmp
inc
lret
add
mov
inc
sahf
outsl
push
and
pushf
out
mov
adcl
jp
mov
pop
ret
adc
out
test
mov
push
sub
sti
cmp
shr
loop
orb
push
push
addr16
xor
dec
sti
xor
jle
jl
fstpl
jl
sahf
mov
mov
xchg
xchg
mov
jmp
jae
or
fnstcw
xor
popa
pop
mov
sti
mov
imull
sti
dec
lods
addb
pop
xor
rcrb
push
fs
lock
mov
in
mov
xchg
cs
rclb
mov
stos
dec
sti
fmulp
sub
pop
in
pushf
std
push
or
adc
mov
jmp
mov
inc
inc
adc
dec
iret
or
mov
cs
movsl
mov
xchg
adc
lcall
adc
leave
test
sbb
pushf
add
jmp
andb
xor
sbb
imul
or
cmp
jle
bound
push
lahf
and
xor
daa
xor
push
push
cmp
outsb
in
sbb
sahf
dec
sub
cmp
mov
lahf
lcall
sub
jmp
push
ja
pop
std
pusha
popa
jecxz
add
insb
inc
mov
hlt
pop
adc
mov
xchg
xor
push
fst
aaa
fs
mov
ret
ja
dec
push
lret
pusha
movsb
jo
int3
sub
cmp
xchg
mov
push
sahf
fisttpll
xchg
sub
sub
pop
xor
sbb
mov
or
negl
mov
jmp
dec
inc
dec
xor
push
cs
pop
and
or
push
mov
lock
andl
mov
add
out
xor
xchg
fwait
jmp
out
arpl
leave
gs
mov
sbb
repz
fwait
xor
movsb
or
and
loop
lcall
cli
mov
dec
pop
or
repnz
popf
dec
add
xor
psrlw
fdivrs
push
jnp
jmp
out
mov
inc
xlat
push
jmp
sub
filds
lret
xchg
test
mov
lods
movq
fs
inc
fcompl
and
push
inc
push
out
fnstsw
add
cmp
mov
xor
xor
js
add
pshufw
in
test
dec
sbb
jge
sbb
push
cmp
xchg
insl
xorb
mov
cs
sahf
in
das
fldt
inc
pop
fs
push
cmp
or
outsl
jmp
rcl
mov
sub
fldcw
xor
add
and
pop
xlat
mov
cwtl
iret
js
add
hlt
fwait
xor
lods
mov
ret
ja
lds
frstor
xor
add
jecxz
das
jle
enter
ja
bound
adc
pop
dec
mov
push
mov
js
push
iret
in
adc
ret
scas
mov
in
jno
add
jne
pop
sbb
leave
sbb
push
fwait
popa
ret
xchg
jne
push
rcrb
clc
test
inc
iret
add
lods
outsl
ret
ds
cmp
shll
in
jmp
das
aas
push
daa
mov
mov
imul
cwtl
int
xchg
daa
or
mov
pop
and
inc
ret
push
shll
stc
lahf
popf
jp
sub
lcall
jbe
mov
jmp
sub
jb
out
pop
and
and
xor
out
sub
add
fiadds
xchg
inc
hlt
test
popf
lcall
mov
popf
xor
and
subb
dec
stos
mov
icebp
add
leave
adc
pop
xchg
pusha
pop
mov
int3
out
pop
inc
outsb
pop
orb
xchg
cmp
out
movsb
out
popa
mov
imul
push
in
loopne
sub
add
scas
int3
mov
mov
aas
xlat
sbbb
loop,pn
cmp
adc
mov
clc
push
mov
mov
jb
pop
or
insl
arpl
fs
dec
pop
xlat
pop
les
pusha
adc
hlt
sti
movsl
sub
lods
inc
lods
xchg
nopl
dec
mov
xor
sub
mov
shl
adc
outsb
lea
push
and
stos
fwait
cmp
pushf
cld
sub
test
xor
cmc
roll
or
pusha
out
into
in
outsb
or
inc
call
mov
je
inc
out
sbb
add
dec
jns
rclb
lret
xor
into
sahf
cmp
mov
push
pop
leave
stc
movsb
mov
psllw
jle
pop
inc
arpl
mov
push
or
stos
jae
nop
xchg
sbb
ja
mov
push
push
out
ss
aas
push
in
jne
pop
sub
cmpb
ss
hlt
arpl
bound
inc
fcmovnbe
mov
outsb
inc
jle
jecxz
adc
adc
enter
fidivrs
mov
outsb
add
stc
adcb
aaa
and
nop
add
ljmp
std
insl
adc
cmp
les
dec
inc
xlat
mov
fwait
andb
pop
push
jbe
faddl
mov
mov
push
xchg
orb
sbb
mov
enter
movsl
repz
pop
xor
mov
loop
cld
std
test
inc
xchg
push
iret
mov
adc
push
test
adc
jmp
mov
adc
inc
test
mov
orb
jl
mov
mov
gs
in
fnstcw
mov
dec
test
adc
test
in
call
ja
add
hlt
sarl
or
pop
and
mov
push
in
or
lahf
fucom
adc
jns
addr16
and
adc
adc
jo
pop
dec
inc
add
xchg
or
iret
lret
mov
mov
aaa
outsl
xor
sub
mov
pop
out
aaa
xchg
andl
fwait
pusha
repnz
xchg
imul
lret
jecxz
fbld
add
aas
mov
jb
inc
push
outsb
and
add
lds
lock
subl
lea
xchg
inc
cs
jbe
loopne
ja
mov
imul
leave
shr
pop
push
sar
js
out
bound
fiaddl
fadds
inc
mov
aas
xchg
cltd
gs
sub
add
push
imulb
cmp
ja
leave
mov
pop
pop
pusha
enter
out
jb
jae
fdivp
into
jae
cmp
fnstenv
add
or
mov
dec
pop
cmp
jns
scas
inc
aad
in
dec
add
push
ljmp
les
push
loop
mov
fs
push
push
sub
adc
mov
dec
and
adc
cli
ror
push
das
mov
pop
aas
call
or
pop
mov
inc
inc
jnp
cld
rorl
push
add
outsb
adc
jle
cmp
adc
or
outsb
cmpsl
adc
inc
and
mov
jne
sbb
cmpsb
jge
popa
sub
add
push
fsub
and
add
out
jge
mov
lcall
mov
push
xor
mov
push
and
gs
add
xchg
add
xchg
idivb
push
dec
dec
les
out
adc
das
mov
xor
shlb
fsubrs
loop
and
push
add
cmpsb
sbb
jbe
out
fs
je
mov
and
xchg
xor
cmpsl
cmp
mov
stos
xchg
sub
mov
xor
stos
mov
jmp
push
rcr
fstl
aaa
sub
jecxz
push
push
mov
call
adc
push
sbb
xor
dec
or
xchg
shrb
mov
xchg
fxch
fcmovnbe
jmp
popa
fldenv
jge
sub
pushf
jae
loop
mov
call
les
mov
sbb
jnp
fnstenv
mov
mov
dec
cmp
lea
dec
push
inc
pop
adc
cmp
cli
outsl
scas
xchg
push
hlt
inc
or
or
enter
imul
es
jge
xlat
cmp
daa
ds
or
cmp
fimull
xor
leave
mov
aaa
sub
mov
pop
mov
sarl
aas
lea
lock
mov
jo
sbb
mov
inc
and
lods
imul
fistpll
mov
fistl
pop
pop
push
ss
fnstenv
cli
pop
aad
xor
dec
loopne
jecxz
push
xchg
mov
mov
xchg
inc
xor
add
mov
popf
aaa
lds
dec
sti
jns
lret
test
dec
fnsave
sbb
loopne
pop
sbb
mov
push
mov
test
mov
mov
sarl
fs
daa
lret
mov
je
jne
enter
ljmp
xor
cmp
or
push
call
popa
ds
fcmovu
mov
outsl
lods
and
dec
mov
pop
addl
out
xchg
test
jmp
imul
leave
sub
inc
inc
or
out
xor
push
or
sti
jmp
pop
popf
mov
or
rcrb
lock
lret
shrl
test
mov
das
pop
ljmp
stc
scas
push
movsl
les
mov
xlat
push
jbe
push
loopne
adc
lds
lahf
cmc
faddp
push
add
sbb
xchg
sbb
call
lods
imul
cli
bound
xor
fnstenv
test
daa
push
pop
adc
adc
adc
gs
xchg
jo
movsb
ds
aad
add
jmp
mov
ljmp
push
mov
add
lahf
adc
cmp
cmp
mov
mov
mov
daa
aam
and
push
add
fsubrs
in
xchg
jo
insl
xor
inc
stc
test
stos
cmpsl
decl
mov
iret
sbb
jmp
inc
sub
dec
sbb
mov
aad
das
push
stc
mov
repz
jmp
js
xlat
xor
outsl
push
fiadds
ljmp
dec
push
xor
shl
ljmp
cwtl
add
outsb
mov
outsl
and
jbe
mov
mov
push
cmp
mov
mov
mov
inc
sub
fs
mov
and
outsl
lods
pop
adc
pop
lds
gs
jb
rcl
movsb
and
xor
aaa
cli
inc
cmovge
test
xor
and
lret
adc
push
stos
push
mov
and
xor
rorl
ret
adc
mov
add
mov
adc
cltd
xor
add
adc
sarl
leave
iret
stos
in
push
jo
mov
add
or
sub
mov
movsb
dec
or
or
mov
int
jns
mov
pop
movsl
pop
ja
imul
test
push
das
lahf
and
xchg
xchg
jb
or
das
xor
cmc
lea
mov
pop
mov
jecxz
cmp
inc
aam
mov
inc
jmp
mov
mov
lcall
roll
pop
movsl
dec
lret
mov
nop
or
lds
fdivr
cmp
inc
cmp
inc
rorb
cmpsl
mov
addr16
test
push
adc
cltd
adc
sbb
add
stc
mov
cmc
dec
xchg
xor
jns
xchg
mov
and
mov
daa
jno
adc
je
xchg
sbb
test
loop
in
test
push
xchg
inc
enter
xchg
xchg
dec
dec
cs
add
xchg
or
inc
pushf
inc
adc
std
push
jmp
rclb
push
adc
dec
and
lret
or
jnp
scas
pop
into
fadd
jg
aam
jmp
arpl
xchg
hlt
stos
push
fstpt
test
popf
mov
movsl
mov
pop
out
or
adc
shr
add
fwait
cmc
fisubrl
jmp
or
daa
in
js
xchg
xchg
and
sub
or
jmp
lds
ss
jl
jno
inc
cs
scas
and
icebp
rclb
insl
xor
arpl
sub
in
inc
cld
and
push
sub
mov
pushf
xchg
cld
push
mov
mov
and
inc
mov
shrb
fcomi
xchg
and
rorl
stc
adc
stos
push
enter
jp
xchg
push
cmp
in
mov
pushf
adc
outsb
add
xor
insl
jne
arpl
daa
lock
add
mov
or
ja
add
pop
jne
syscall
iret
cmp
loopne
adc
xchg
jae
fcoml
out
sti
inc
pop
jbe
dec
sub
mov
pop
mov
insl
pushf
mov
cmp
roll
cwtl
pop
frstor
adc
xchg
fcoml
bound
pushf
rorl
mov
xchg
lret
pop
mov
out
jle
call
dec
push
sbb
sub
jae
nop
aas
xchg
scas
lods
aaa
jbe
sub
xor
in
jne
or
bound
std
das
mov
iret
cmp
jo
stos
in
iret
jne
pop
loop
inc
xor
test
push
loop
stos
sbb
cld
mov
jge
dec
into
cmp
inc
jg
jbe
dec
shrl
pop
inc
into
pop
sbbb
add
sti
into
push
mov
push
push
je
aad
dec
inc
aas
dec
mov
loop,pn
sbb
push
jmp
shl
fidivrs
lds
loop
pop
test
xchg
loope
loopne
add
push
inc
in
stos
pop
adc
mov
in
jno
mov
xor
int
xor
addr16
dec
or
std
mov
xchg
pushf
jl
icebp
cld
imul
jge
mov
pusha
xchg
incb
test
adcl
pop
pop
sbb
lcall
jbe
adc
cmp
in
sub
or
les
addr16
mov
inc
andb
pop
inc
mov
xlat
ret
daa
pop
scas
je
xor
lods
xchg
pushf
icebp
push
dec
cmp
repz
out
dec
lcall
fwait
and
test
lcall
mov
inc
mov
push
lret
pop
pushf
adc
lods
movsl
mov
dec
in
insl
js
jp
or
in
pop
jecxz
cltd
fsubrl
push
sub
pop
stc
addr16
mov
mov
int
xchg
pop
aam
std
sub
mov
mov
out
jo
jbe
jns
or
push
rolb
repnz
inc
jecxz
aad
jp
jns
orl
inc
aam
xchg
pop
andb
mov
add
push
adc
pop
mov
lods
test
mov
in
xchg
jnp
scas
fldl2e
outsb
pop
lahf
aas
loopne
mov
lods
jg
out
imul
into
cld
insl
dec
sub
cmp
aaa
icebp
in
insl
fcmovnu
in
repz
das
pop
enter
lea
fsubrl
hlt
add
xchg
push
aad
stc
in
add
cmp
xor
pusha
stos
mov
and
nop
mov
movntq
cmp
shll
mov
leave
or
pop
xlat
dec
js
das
mov
inc
int3
mov
push
add
sbb
xchg
mov
mov
mov
aaa
cld
or
mov
outsl
and
mov
adc
jns
cmpsb
ja
clc
sub
jbe
cmp
pop
lahf
inc
in
in
das
push
inc
jne
into
es
mov
pusha
or
in
adc
fidivl
movsl
pop
inc
mov
lret
mov
push
fisubl
outsl
adc
inc
cmp
inc
leave
xchg
ja
sbb
pop
dec
insl
pushf
cmpsb
sub
int
cmp
push
jle
jmp
dec
lock
mov
aaa
jg
adc
dec
shlb
cmp
test
xchg
out
movsl
js
mov
push
test
jns
int3
pusha
pop
jge
jne
fdivrp
mov
in
mov
pop
xor
divl
sub
inc
aaa
in
mov
int
loop
ret
xor
push
cli
dec
dec
imul
mov
lods
out
jg
mov
jae
lock
sbb
pop
imul
jge
ds
hlt
cltd
lea
inc
pxor
pop
gs
jmp
ja
fwait
je
cmpsb
shrb
adc
cmp
mov
xchg
xor
jge
xor
lods
jo
sbb
mov
sarb
sbb
jl
push
xlat
xchg
sub
scas
sbb
data16
enter
xchg
leave
lds
outsl
sub
push
inc
or
jae
sbb
mov
sbb
pop
or
mov
adc
jno
in
cwtl
lods
push
sahf
or
mov
pop
dec
cmp
jecxz
add
pop
aad
arpl
sub
es
adc
or
lock
aas
xchg
in
adc
jecxz
mov
jns
js
fwait
fwait
cli
jecxz
cli
inc
adc
out
push
je
and
push
sahf
add
shr
ret
fsubrp
cwtl
aam
rcr
pop
loopne
mov
cmp
cs
pop
outsl
xor
cltd
inc
in
fyl2x
sahf
ret
mov
and
jmp
sbb
or
cmp
movsl
mov
sbb
cmc
popa
test
xchg
and
aaa
sub
xor
push
rclb
fadd
sub
in
mov
sbb
xor
sbbl
shlb
jmp
mov
cmp
xchg
arpl
out
repz
sbb
jle
pop
fdivrl
or
or
mov
nop
mov
cld
ss
sbb
dec
scas
mov
ss
sbb
fucomp
sub
addl
pop
nop
out
loop
sub
push
push
cmc
pop
pop
in
test
fldcw
xchg
jo
mov
or
adc
inc
mov
sub
cmp
fstpl
dec
cld
stc
push
leave
push
jmp
push
cmc
and
test
xor
or
popf
inc
inc
fs
lods
nop
xchg
dec
out
mov
jl
jns
aas
dec
jge
lds
pop
testl
cmp
cmp
pop
scas
dec
out
dec
cwtl
fidivl
divb
call
stos
cli
or
mov
adc
mov
jl
inc
pop
jmp
js
xor
fwait
push
mov
fldt
push
mov
sbb
jecxz
mov
add
leave
adc
pop
out
adc
dec
mov
cmp
and
cltd
and
mov
fwait
xchg
xor
and
mov
and
jl
adc
xchg
pop
inc
fistpll
enter
xchg
test
mov
dec
fnstenv
mov
popf
add
test
dec
stos
dec
ss
decl
jnp
inc
xor
insb
mov
scas
inc
lret
adc
cmpsb
lods
add
xor
out
cmc
stos
hlt
push
enter
mov
dec
clc
jecxz
xor
arpl
jg
push
dec
add
leave
cwtd
and
xchg
xchg
mov
mov
adc
andl
cmc
fadds
shlb
xchg
mov
push
mov
add
pop
pushf
ret
call
xchg
jmp
adc
lds
les
sub
je
inc
dec
in
mov
repnz
out
adc
push
and
lds
jo
sub
loope
add
insb
pop
cwtl
popa
std
jl
or
fidivs
insl
fdivrs
popf
and
push
ljmp
mov
ljmp
sbb
inc
pop
xchg
cwtl
fldt
push
pop
xchg
sbbb
call
outsl
lcall
jge
mov
cmp
mov
lret
repz
es
mov
and
push
jno
adc
ret
popf
sbb
stos
add
xor
enter
iret
pop
pop
lock
stos
mov
fldenv
daa
jne
inc
jne
dec
in
in
daa
push
mov
inc
mov
jle
cld
jns
pop
push
scas
lods
jns
popa
shrl
sbb
add
loop
and
stos
push
shrb
fwait
lods
sbb
or
inc
push
cmpl
mov
lods
xor
fwait
int
insl
pop
sbb
or
cmpsl
fadd
mov
int
jae
jno
stc
push
mov
out
cwtl
lcall
xchg
imul
dec
out
call
aas
jmp
das
mov
fs
iret
dec
mov
cmpsb
aad
xchg
lret
mov
xchg
push
shll
cmp
jl
add
loop
add
out
xor
rolb
aas
mov
mov
cld
cltd
mov
xor
je
es
inc
imul
lahf
jge
inc
lcall
lea
jb
pop
es
mov
out
int3
xchg
or
out
jno
cmp
lahf
popa
cmc
pop
sbb
mov
jmp
insb
flds
xor
dec
popf
das
out
push
jle
add
xor
push
fbstp
repnz
jns
push
in
je
xchg
lods
xchg
insl
lret
in
cmp
pushf
pusha
mov
xchg
cmpsl
lock
aaa
movsl
negl
dec
jbe
iret
mov
sbb
inc
scas
in
jecxz
pop
test
mov
insb
cli
mov
fstps
mov
lods
pop
fcoms
aaa
sahf
pop
in
dec
adc
xchg
arpl
cmpsl
and
pop
mov
inc
push
int3
jp
movzwl
sub
add
cmpsb
imull
push
sub
mov
gs
sub
push
je
int3
pop
gs
in
inc
mov
pop
xor
das
fs
xchg
or
push
adc
stos
jle
sub
fisttpll
lods
stc
pop
xor
push
mov
stos
cmc
xchg
push
shl
push
gs
outsl
cltd
add
call
push
cli
pop
jmp
pop
scas
fwait
sbb
clc
cmp
sub
int
decb
in
jg
jnp
test
cwtl
mov
and
add
sahf
dec
cmp
sub
cli
add
push
mov
popa
pop
into
xchg
push
xchg
jbe
dec
out
dec
xor
dec
jg
andl
add
out
cmp
addr16
mov
ds
push
sbb
add
jl
loope
mov
add
mov
stos
xor
jne
lock
out
mov
mov
pop
mov
pushf
loop,pt
fcoms
push
mov
shlb
std
in
and
ja
cltd
imul
sub
mov
dec
and
aaa
dec
adc
mov
mov
mov
popf
mov
push
xlat
lret
xchg
sbb
mov
mov
int3
mov
dec
xor
xchg
jg,pn
hlt
in
out
xor
insl
int
adc
cmp
out
ljmp
adc
enter
mov
pop
faddl
int3
xchg
jno
call
jp
push
mov
ljmp
and
adc
mov
xchg
popa
add
jmp
std
jb
inc
jg
and
int
lods
aas
data16
add
imul
int
mov
dec
fbld
jno
inc
aaa
push
outsl
icebp
dec
pop
push
imul
ja
mov
movsl
je
pop
pop
inc
jecxz
jle
ljmp
movsb
mov
and
mov
clc
add
shrb
mov
jp
lret
sbb
adc
out
mov
mov
mov
push
pushf
xchg
mov
movsb
scas
pop
jnp
cmpsb
mov
cmp
mov
cld
adc
imul
repz
movsl
xchg
shlb
out
sbb
call
repnz
faddl
lret
mov
cmpsl
sti
rolb
inc
mov
jmp
fwait
andl
imul
sbb
or
push
cwtl
outsb
sbb
jb
or
test
lock
pop
dec
mov
lock
adc
sbb
add
stos
adc
push
dec
cs
add
lea
mov
push
dec
xchg
pusha
push
or
lret
sbb
or
pop
mov
push
lock
inc
inc
sub
cli
repnz
test
outsb
add
test
enter
leave
jecxz
test
icebp
pop
scas
inc
in
mov
mov
popa
adc
pop
neg
imul
push
sbb
jmp
in
imul
repnz
pushf
fwait
jno
lds
xchg
sub
addr16
sub
inc
aam
inc
das
outsb
or
dec
mov
and
arpl
aad
stos
aas
mov
repz
mov
ret
or
das
movsb
add
wbinvd
aam
or
or
daa
xchg
jl
mov
pushf
sbb
cmp
or
lea
lds
pop
or
jne
mov
loope
push
mov
sbb
lock
sbb
scas
cwtl
xlat
sub
mov
xchg
jno
mov
pushf
inc
jle
arpl
mov
dec
push
jmp
or
jecxz
sub
lods
xlat
fucomp
mov
push
iret
jecxz
or
push
pop
jp
aas
pop
mov
mov
xchg
push
roll
dec
push
pop
stc
pop
sti
ds
xchg
pushf
pop
pop
add
hlt
pusha
hlt
fsubrs
stos
pusha
jne
mov
ss
mov
aad
or
ss
cmp
xchg
repnz
push
cltd
mov
ficoml
pop
inc
mov
or
dec
mov
and
pop
repnz
jbe
mov
insl
sbb
xchg
nop
dec
xchg
into
cmpsb
xchg
daa
aad
mov
testl
pushf
int3
stos
fs
mov
dec
insl
or
xor
int3
sub
mov
lahf
cmp
idivl
dec
fwait
pslld
lea
into
sub
and
jp
push
jo
xchg
jg
in
dec
dec
int3
mov
xchg
stos
push
out
sbb
out
push
jb
andl
pusha
shlb
stos
mov
sti
aaa
movsl
imul
and
xorb
and
mov
test
movsb
adc
cli
into
mov
add
jmp
data16
fistps
mov
mov
fmull
cmp
out
and
pop
adc
test
dec
jp
and
insb
mov
sub
adc
or
dec
mov
adc
cmp
ja
sub
outsb
push
sub
mov
repnz
jns
sar
cmpsl
push
cmpsl
in
lcall
pop
push
mov
cmp
rcr
scas
mov
mov
lea
mov
bound
xor
aaa
out
cmp
mov
in
cld
push
orb
setnp
jbe
push
xor
jmp
or
outsb
dec
shrl
inc
cmc
jp
push
incl
pop
int3
call
cld
arpl
xor
jecxz
xchg
mov
xchg
add
jns
dec
lds
push
xor
xor
inc
int
test
xor
xor
pop
cmp
scas
xchg
sbb
jle
lcall
and
in
shrl
dec
jl
jae
xchg
adc
insb
mov
sub
cltd
out
enter
sbb
das
aad
mov
ret
cmp
fistl
mov
inc
in
dec
mov
and
ljmp
outsb
movsl
add
jp
pop
push
push
xor
pusha
aas
sub
sub
test
inc
dec
loop
dec
int3
xor
jle
adc
sub
or
adc
addr16
call
dec
push
adc
les
ret
pop
jle
cmc
cs
sub
add
jmp
add
sarl
xchg
cmpl
nop
mov
xchg
xchg
nop
sub
pop
scas
or
adc
prefetch
cli
dec
lcall
es
mov
jecxz
cmp
cli
aad
jmp
sbb
in
fldl
out
and
push
sub
je
mov
pop
nop
lock
jae
orb
outsb
push
xlat
lock
stos
fists
insl
or
lds
cmp
or
outsl
mov
adc
jecxz
outsl
push
sbb
pop
and
in
aas
mov
push
sub
jge,pt
adc
pop
adc
cltd
cli
mov
cwtl
adc
dec
lods
push
testl
mov
pop
dec
mov
cmp
mov
xchg
jmp
call
sahf
mov
xchg
fbstp
into
push
sbb
mov
mov
jmp
and
add
mov
sbb
jmp
push
sub
pop
cs
mov
mov
mov
push
xlat
mov
scas
loop
movsl
pop
mov
addr16
das
mov
int
mov
inc
ret
mov
insb
add
mov
cmp
imul
mov
stos
adc
xor
rorb
leave
mov
mov
mov
sbb
ret
jb,pn
test
dec
out
and
jo
mov
mov
test
lods
in
lds
lock
sbb
movsb
fidivrs
jno
cmpsl
pushf
add
ja
xlat
jle
das
xchg
inc
cltd
cmpsb
inc
and
mov
inc
lcall
adc
push
push
add
jbe
scas
hlt
xchg
decb
inc
mov
dec
cmp
cs
mov
pop
mov
adc
aam
sub
pop
pop
roll
loope
adc
cmp
xchg
mov
pop
outsb
stos
addl
fmul
pop
cltd
fwait
adc
mov
xchg
bound
aam
stos
daa
mov
jp
outsl
mov
mov
mov
pop
hlt
mov
xor
jnp
mov
cld
cwtl
sub
add
mov
or
jbe
cvtpi2ps
mov
lcall
inc
sarb
ljmp
push
loope
mov
mov
nop
push
mov
jbe
pop
mov
xor
jnp
loopne
out
daa
and
jns
or
roll
and
int3
xor
push
inc
sbbb
jo
jp
in
pop
cltd
mov
cmc
cmc
loope
mov
jne
mov
push
mov
xor
std
int3
mov
jo
mov
xor
pop
jp
stos
pop
mov
out
add
xchg
dec
lods
xchg
clc
sub
mov
mov
and
adc
inc
out
arpl
lods
xchg
pop
out
repnz
inc
int3
mov
mov
xchg
leave
pop
push
or
int3
mov
in
xchg
dec
ss
cmp
cmp
jmp
paddsw
dec
cmp
pusha
inc
or
loopne
fcmovbe
dec
cmc
out
inc
cltd
cmp
cli
push
jg
icebp
divl
dec
sahf
lret
out
insb
mov
cmpsl
std
loope
cmp
outsb
rol
call
dec
jns
pop
orl
mov
cs
cmp
jecxz
jp
or
test
adc
arpl
ffreep
into
and
stc
lock
mov
incb
push
loopne
jge
cmp
push
xor
dec
add
cwtl
dec
testb
xchg
add
ss
mov
std
xlat
xor
lahf
cmp
inc
icebp
push
cmp
popf
mov
push
fadds
in
imul
out
mov
in
xor
fldt
sbb
loopne
sub
push
jmp
mov
pop
scas
inc
xchg
lea
mov
push
repz
cmp
je
cmpsb
dec
xchg
mov
ret
dec
mov
fcoml
pop
incl
movsl
dec
lea
movsl
cmpsl
mov
inc
xchg
fiaddl
or
jbe
add
mov
les
push
sbb
test
je,pt
xor
inc
or
add
mov
mov
bound
leave
cmp
pop
cmp
clc
andl
pop
neg
repnz
je
les
ss
and
shlb
sbb
jmp
pusha
jae
mov
mov
lods
xor
in
xchg
jb
mov
push
ret
lods
mov
sub
cmp
mov
popf
into
pop
test
dec
push
mov
or
inc
xor
sub
jp
loop
leave
cli
repnz
push
add
fbld
add
mov
sbb
and
mov
mov
jne
in
pusha
shlb
cmp
xchg
mov
popa
scas
inc
dec
movsb
ret
sub
negl
jmp
jbe
btc
cmp
cmp
fcmovnu
cli
add
add
rcrb
sbb
aad
movb
jp
leave
out
loop
sbb
fcom
push
sub
adc
mov
and
popa
test
cmpsb
sub
ret
idiv
loope
fistpl
lock
mov
movsb
push
shlb
pop
sbbb
stos
and
and
mov
add
js
sti
pop
sub
sti
push
bound
inc
es
dec
jo
ss
sub
dec
lret
imul
adc
inc
cmpsl
out
add
add
mov
scas
lret
add
dec
icebp
shll
mov
jns
mov
mov
push
iret
shlb
lret
adc
sbb
mov
pop
pop
aas
shl
test
sub
xorb
mov
push
out
leave
xchg
rclb
mov
loope
pop
mov
mov
sahf
cmp
cmp
loop
or
or
xor
adc
push
outsb
sbb
dec
div
mov
xchg
fsubrp
lock
adc
xchg
xor
es
int3
das
jmp
movsl
xor
xor
jne
test
movsb
mov
jp
push
out
xor
push
xor
add
andl
dec
push
fwait
into
lds
in
pop
sub
aaa
aam
inc
inc
sub
cmp
cmpsl
out
clc
xchg
fucom
push
pop
aaa
fiadds
xlat
push
fcomps
and
pop
xchg
jnp
fisttpll
aam
aad
mov
mov
ljmp
shll
fsubl
cs
addr16
lahf
push
cld
sub
adc
inc
push
gs
popa
pop
mov
mov
adc
mov
out
arpl
push
inc
repnz
out
das
imul
aam
aaa
test
movl
aaa
dec
inc
aad
xchg
mov
or
mov
push
fimuls
push
or
ja
das
xor
pushf
sbbb
push
jge
xlat
xor
cltd
iret
mov
pop
cmp
inc
push
sbbl
sub
rorl
lds
inc
or
cmpsb
xor
push
mov
mov
lret
sti
scas
aam
mov
pop
rclb
mov
xchg
fs
bound
cmpsl
or
ss
popf
scas
cmpsl
mov
xchg
dec
mov
jb
push
push
or
repnz
mov
mov
fdivs
pop
sbb
mov
lods
pushf
aad
mov
ljmp
push
or
add
xor
mov
and
sbb
pushf
shlb
ds
push
out
sub
popf
cltd
fildl
add
sub
inc
mov
das
xchg
aad
subl
orl
cmp
xchg
jle
xchg
push
enter
negl
lcall
hlt
mov
mov
xchg
and
or
mov
jb
scas
jl
aam
adc
inc
sarl
and
jmp
mov
or
mov
test
mov
aam
sub
xchg
pop
shrb
nop
sbb
push
pop
cmp
and
dec
sahf
ss
addr16
cmp
push
sbb
dec
std
lea
aas
ljmp
and
sbb
inc
mov
lods
sub
outsb
adc
lods
cmp
pop
push
xor
jl
rcrb
lock
mov
lcall
adc
jle
mov
fldenv
push
xchg
xchg
insb
jne
out
out
cmpl
pop
call
jb
push
test
pushf
nop
lret
sti
sbb
test
movb
sbb
jg
xor
int
popf
sbb
inc
inc
cmp
fildll
out
sbb
xchg
fs
aas
lahf
aam
fnstcw
or
test
hlt
add
clc
xchg
sbb
mov
jg
jb
push
loopne
xchg
shll
bnd
dec
push
push
leave
loopne
clc
bound
ret
dec
cs
movsl
and
xchg
out
cmp
test
dec
dec
push
in
popa
xchg
xchg
inc
fwait
mov
sbb
out
fdivrs
xchg
loope
ja
gs
mov
out
dec
imul
sub
xor
mov
mov
sti
adc
add
repnz
aas
xlat
sarl
femms
sbb
movsl
mov
repz
xorl
cwtl
clc
jae
ret
dec
pop
xchg
iret
or
ret
push
fs
or
mov
adc
mov
ret
lods
ss
roll
std
mov
into
loopne
and
dec
dec
not
xor
dec
lret
arpl
dec
fucom
sub
mov
call
or
mov
aad
int3
imul
lock
push
mov
aad
imul
lahf
jle
lret
dec
fldenv
inc
addr16
cltd
rcl
sbb
fists
sub
out
stos
mull
int3
inc
jb
or
and
xor
sub
mov
scas
cmpsl
enter
lods
mov
scas
mov
int3
stc
cmp
inc
jb
xchg
iret
jo
push
mov
fcoml
pop
in
jp
daa
pop
push
mov
movl
loope
push
push
rcl
push
mov
and
fmuls
inc
inc
inc
mov
sub
dec
in
jmp
mov
inc
jmp
lcall
lahf
dec
sbb
cmp
mov
inc
shrl
pop
mov
js
and
jo
out
jne
jo
mov
mov
cli
jecxz
xor
xor
mov
xor
mov
dec
dec
cmp
insl
cmp
jmp
es
sub
jmp
cli
xchg
and
sahf
cmpsl
sbb
pop
ret
inc
lcall
xchg
sbbl
mov
cli
xchg
add
shufps
lcall
pop
cmp
xor
jge
xchg
mov
cmp
cmp
imulb
pop
push
in
adc
xorb
cli
mov
xor
lds
int
stc
sub
out
out
add
jge
in
push
orb
into
jbe
mov
loop
sub
shlb
std
stos
jge
xorl
popa
mov
loope
sub
mov
pop
out
sbb
loope
sub
jae
in
adc
adc
jmp
pop
pop
sbb
fadds
and
js
push
push
pusha
pop
and
mov
cmp
outsl
pop
sub
add
inc
mov
in
ss
cs
mov
dec
jns
hlt
xchg
out
lahf
mov
mov
xchg
lret
fsubr
or
ffreep
clc
lret
push
aas
es
stos
data16
cmpsl
pop
xor
lcall
xchg
mov
add
jbe
dec
mov
mov
arpl
leave
xchg
in
test
das
mov
push
cltd
add
mov
or
inc
push
lret
loop
lea
pop
inc
in
mov
sahf
mov
test
ret
jno
jge
loop
push
dec
movsb
or
stos
das
lods
add
sub
add
push
in
ja
rcrl
or
xchg
push
or
in
repnz
mov
pop
xchg
imul
xor
dec
int3
mov
lock
ror
or
es
add
jnp
sub
inc
dec
dec
xor
ljmp
pop
icebp
lods
push
sub
jl
shlb
sub
lcall
out
sahf
inc
in
adc
scas
pusha
leave
add
rcll
xor
outsl
mov
jp
mov
pop
test
xor
and
sbb
into
mov
adc
pop
ljmp
and
add
pushf
pop
and
icebp
lods
popf
adc
cld
push
mov
outsb
sbb
sbb
pop
jmp
lret
ffree
sub
lods
cltd
sbb
add
lea
adc
adc
inc
out
dec
pop
add
in
sub
aaa
das
fsubrp
hlt
rcll
lock
test
popa
iret
add
imul
sub
popa
and
sti
rol
xchg
nop
jnp
or
inc
xchg
xorb
jnp
inc
xchg
mov
pop
mov
mov
lahf
mov
pop
jg
imul
shr
lock
dec
mov
mov
out
push
addb
pop
xchg
loope
test
rorl
cwtl
xchg
nop
cmp
bnd
mov
mov
mov
inc
add
movsl
imul
popf
cmp
cmp
inc
jmp
push
addr16
fucomi
and
mov
std
jecxz
mov
or
stos
cmp
sbb
pop
lret
daa
test
inc
dec
lcall
out
and
adc
lds
divl
mov
fcmovu
pop
push
cld
into
pusha
aad
xchg
mov
pop
int
addr16
mov
adc
jge
or
pop
fnsave
mov
sti
aad
arpl
notb
sbbl
aas
or
mov
rorb
test
lods
add
jnp
fstpt
test
sar
dec
xor
mov
jns
in
push
pop
push
mov
mov
test
int
sti
ret
add
dec
cwtl
xorb
mov
sub
inc
mov
fldt
pop
lock
xchg
jne
and
jmp
inc
loop
popf
add
jae
pop
out
testb
stc
jp
hlt
stc
mov
inc
les
ljmp
jno
popf
je
cwtl
push
and
adc
js
inc
scas
inc
pusha
out
andl
fistps
mov
shrl
out
mov
icebp
inc
xchg
mov
es
fnstcw
cmc
lds
outsl
push
sti
enter
jns
dec
mov
jne
out
lock
icebp
je
fbstp
and
pushf
mov
jge
cltd
loopne
mov
inc
lcall
aam
test
nop
dec
icebp
sub
dec
sub
loopne
mov
mov
addl
and
jb
loope
jae
popa
xor
mov
fcomp
aas
lret
notb
neg
and
jp
mov
cmp
and
push
mov
adc
iret
cmpsb
fxch
xor
nop
sbb
ss
subb
xor
mov
cmp
imul
pop
xlat
cli
mov
jecxz
sub
out
js
cmp
ret
rorb
out
sbb
jge
cltd
and
fstpl
lcall
insl
mov
xchg
cli
out
rol
add
clc
pushf
push
mov
inc
add
int3
cltd
shll
fwait
lods
std
push
ret
pop
or
aas
add
or
lods
mov
and
mov
mov
cmp
mov
nop
inc
imul
fcomi
clc
mov
cmpsb
cltd
arpl
jns
insl
inc
adc
iret
and
repnz
ss
fsubr
add
cltd
out
ret
in
push
jo
xor
sti
add
bound
ds
dec
add
mov
stc
test
fs
push
test
stos
out
ret
sbb
stos
push
lret
cmpsb
mov
xor
jns
cmc
xchg
imul
daa
lahf
or
xchg
mov
test
or
pop
aas
movsl
xchg
mov
das
fwait
dec
sbb
addr16
and
pop
fists
fwait
test
repnz
hlt
test
cmp
out
out
pop
scas
pop
std
add
movsb
ds
bound
cmp
fs
push
adc
cmp
sbb
fwait
test
pop
sbb
cmpsb
iret
outsl
cmpsl
ja
push
fidivs
jle
cmc
pop
dec
mov
push
xor
lock
cmp
aad
mov
push
xchg
jmp
daa
out
mov
aad
out
mov
mov
aas
in
jnp
inc
lahf
cmp
lds
mov
xchg
jbe
fs
pop
jle
testl
push
adc
insb
js
mov
mov
icebp
pop
pusha
jmp
nop
push
xchg
rcrb
cmp
dec
popa
add
pop
and
jno
test
inc
repnz
mov
scas
mov
inc
rcll
jne
mov
cs
lret
sub
inc
out
loope
out
sbb
cmp
and
xlat
cld
sete
push
cmpsl
xchg
fdivrs
fucom
cmp
add
test
imul
arpl
test
je
and
mov
jnp
inc
aam
xor
fildl
mov
aam
jae
push
adc
jmp
out
test
add
dec
lods
aas
cmp
sbb
repnz
ja
jge
lret
and
aaa
mov
and
mov
jo
popf
jo
insb
mov
jbe
cmp
mov
fwait
cmp
or
push
popa
push
mov
testb
int3
mov
clc
inc
sbb
mov
icebp
stos
ja
fxam
cs
jmp
gs
and
lods
adc
xor
pushf
dec
pushf
std
loopne
dec
jge
imul
fisubl
add
mov
mov
mul
mov
mov
or
push
jbe
inc
inc
js
dec
scas
cmp
stos
sub
mov
push
mov
sub
scas
jmp
imulb
push
pop
popf
xor
mov
push
adc
cmp
cmp
fwait
dec
insb
adc
fbld
aad
add
sub
mov
sbb
mov
lods
int
push
jno
lcall
xlat
cs
sbb
imul
movsb
ret
shll
inc
loope
mov
arpl
push
push
dec
leave
fmull
jo
fisubrs
clc
jns
cmc
jmp
out
jns
test
mov
xchg
out
jmp
insb
gs
test
pushl
pushl
jp
push
loopne
js
cmp
xor
lret
iret
int3
and
mov
dec
push
rolb
ret
hlt
in
adc
ss
dec
mov
lds
fistps
lret
cwtl
popa
push
hlt
xor
or
xchg
inc
cld
imul
push
add
sbb
pop
fistpll
movsb
lcall
mov
js
test
cli
or
cltd
jmp
out
dec
mov
sbb
mov
in
jnp
mov
cld
fs
and
mov
scas
or
cwtl
repz
push
mov
aaa
movsb
sbb
jno
jle
cmp
adc
out
pop
sbbl
sti
aad
mov
jae
in
pop
or
repnz
mov
cli
jge
addr16
ja
mov
jp
loop
jecxz
cmp
mov
ret
jne
inc
hlt
outsl
jno
andl
fdiv
stos
mov
jge
push
rcrl
icebp
or
stos
pusha
divl
aas
mov
xchg
dec
mov
cmpsb
das
into
fadds
insb
mov
add
es
mov
push
std
mov
xlat
pop
cmpsl
das
dec
mov
inc
push
fs
xor
out
lret
popf
inc
sbb
mov
pop
pop
dec
sub
nop
imul
enterw
mov
in
mov
jae
inc
adc
adc
add
hlt
xchg
stos
scas
frstor
testb
xchg
pop
mulb
out
sbb
add
or
pop
movsb
jbe
sub
mov
push
testb
cmp
sub
test
sbb
dec
ret
sbb
dec
push
ss
in
push
fisubl
push
add
icebp
ljmp
pop
out
inc
xchg
imul
lcall
jns
xchg
leave
lret
pop
pushf
fldl
rcrb
jo
or
popf
sub
sub
lea
cli
dec
rorb
and
psrlq
or
sbb
aad
mov
sbb
aas
lret
xchg
out
nop
push
add
sbbl
mov
jmp
push
mov
xchg
adc
dec
cli
clc
enter
in
in
cmp
xor
into
mov
loop
stc
cwtl
fwait
ja
xchg
ljmp
lods
subl
out
in
push
xchg
push
cmpsb
pushf
jge
enter
fs
lods
push
into
cld
test
sub
js
or
data16
cmp
adc
push
xlat
or
pop
loopne
xor
pop
int
js
loopne
jns
or
pop
mov
add
jnp
decb
lds
daa
int
jle
in
sbb
loope
mov
iret
pop
jecxz
int3
sub
push
into
faddl
push
push
in
adc
lods
sahf
cmpsb
mov
mov
add
or
in
xchg
cmpsl
scas
imul
push
mov
ljmp
mov
addr16
pop
sub
pusha
es
jae
inc
sbb
lock
and
movsl
loop
pop
ljmp
or
imulb
or
mov
add
push
cli
push
push
sub
sahf
mov
pushf
fisubrl
xchg
adc
xlat
testb
stos
les
xchg
insl
xor
test
hlt
pop
mov
adcl
in
add
inc
aas
out
xchg
or
insl
test
xorl
mov
test
pushf
and
push
shrl
stos
lcall
jb
int
xchg
gs
negb
adc
inc
xchg
sbb
inc
test
in
push
jnp
cmp
lret
mov
cmpsb
pop
leave
xchg
int3
fadds
pop
test
and
sbb
pop
imul
inc
movsl
and
repnz
sbb
fwait
mov
bound
pop
cmpsl
les
push
in
push
and
pop
mov
mull
mov
or
nop
mov
shrb
sub
divl
mov
push
shlb
mov
xchg
cltd
dec
cmpsl
subl
insb
fwait
mov
cmc
faddp
mov
xchg
test
and
push
jl
scas
fldl
push
leave
pop
mov
xor
or
xchg
push
mov
mov
aad
outsl
repnz
jg
push
gs
pop
mov
sub
add
sbb
flds
das
adc
lahf
stos
je
sbb
mov
les
lcall
mov
push
xchg
js
cld
neg
push
mov
mov
fsubrl
sbb
ss
cmp
jmp
lods
nop
iret
stos
popf
and
outsb
sub
adc
cltd
and
outsl
mov
mov
mov
mov
cwtl
int
lea
pop
sub
or
adc
push
inc
hlt
pop
or
jae
daa
je
aam
push
lahf
scas
fisttpl
push
es
jnp
sbb
fwait
push
insl
and
pushf
mov
fadds
popf
add
stos
ficoms
cmp
and
sbb
adc
icebp
movsb
stos
movsl
jl
daa
aaa
adc
cmpsb
aad
mov
push
xchg
fwait
iret
pop
or
rcrl
pusha
add
mov
lret
out
mov
int3
mov
jg
ret
push
fwait
sub
cmp
fwait
mov
cs
rcr
mov
push
loope
in
or
inc
cmp
lcall
xchg
test
cltd
pop
inc
insl
es
out
mov
inc
adc
sub
xchg
ret
mov
jbe
insl
dec
xlat
and
mov
pushf
mov
pop
in
cmpsl
in
out
jo
jbe
std
pop
stos
and
xorb
mov
pop
loopne
incb
xchg
xor
push
jno
xchg
inc
fmuls
sbb
or
fcmovnu
daa
xor
insl
sbb
sahf
jge
add
je
pop
lret
jge
in
xor
mov
mov
lret
dec
push
mov
push
mov
fsts
xor
push
addr16
sub
sarl
sbb
mov
jg
add
dec
cwtl
xchg
sub
fwait
insb
push
jne
je
mov
mov
arpl
je
test
adc
repz
sbb
andl
sbb
pop
xchg
and
adc
les
sub
xchg
out
jecxz
outsl
add
cmp
jecxz
mov
test
pop
mov
outsl
cwtl
call
push
pop
adcb
in
lret
shrb
and
or
test
inc
or
xchg
cmp
pop
loopne
xchg
add
pusha
jbe
cwtl
dec
push
push
push
pop
imul
xor
aad
jo
sbb
mov
shl
stos
movsl
idivb
dec
in
cs
mov
insl
and
icebp
mov
rol
ja
jbe
out
jge
movsb
push
je
clc
js
jl
pop
xchg
jg
shrw
mov
or
push
je
test
lods
mov
shrl
sub
aaa
inc
fcom
xchg
jnp
sahf
pop
jg
and
xchg
in
adc
push
std
jecxz
jmp
mov
out
pop
push
lahf
lahf
jge
in
dec
imul
pop
pop
jb
push
xchg
pop
xor
leave
das
xchg
pop
inc
repz
lcall
cmpsl
js
cs
or
pop
push
or
mov
lret
xor
in
loopne
xchg
call
sbb
cwtl
push
scas
aad
das
scas
or
aaa
out
and
cmp
push
mov
scas
movsl
push
hlt
cs
jne
enter
rorl
mov
repz
xchg
push
shlb
or
mov
sub
xor
bound
xor
imul
std
inc
mov
jmp
mov
adc
aaa
aaa
add
test
cltd
push
dec
inc
jno
cli
fisubl
or
adcl
inc
mov
subl
and
das
psubb
jge
and
and
add
jg
add
aaa
inc
js
ret
and
mov
jb
mov
jle
das
xor
add
pushf
out
dec
dec
and
in
arpl
jno
pop
shll
push
subb
adc
enter
loope
xchg
mov
sbb
aaa
mov
mov
inc
addr16
insb
leave
fcmovb
jno
inc
xchg
inc
sub
inc
xor
xchg
fidivs
stos
lret
fs
data16
pop
pop
test
idivl
rcl
xchg
inc
pop
out
and
pop
test
loopne
fidivrl
mov
pop
or
push
dec
cmp
loopne
cli
test
mov
out
jecxz
inc
jle
xor
out
mov
out
stos
clc
cmp
clc
and
pxor
mov
mov
jg
jns
or
jae
xchg
jmp
push
mov
sahf
fsubs
scas
stc
addr16
in
insl
js
sub
mov
inc
dec
stos
xchg
out
dec
inc
sbb
push
xlat
sti
jbe
leave
js
leave
pusha
mov
dec
or
leave
jecxz
sbb
add
hlt
sarb
xor
lret
cmpsl
mov
or
call
mov
sbb
gs
sub
sbb
je
lods
addr16
add
and
jb
sbb
movsb
xor
push
scas
mov
add
sahf
in
pop
in
fs
add
pop
into
std
das
dec
mov
jb
mov
mov
lods
out
add
inc
sub
or
out
cmpl
jo
jne
fdiv
mov
mov
fistpll
adc
push
dec
xor
adc
test
adcb
pcmpgtb
xchg
daa
pop
fs
addb
aas
in
jmp
sub
cmp
rcrl
or
sti
scas
ja
xchg
dec
icebp
ss
push
cli
out
cli
dec
imul
aas
xchg
pop
jns
xchg
rcrl
mov
frstor
add
lret
mov
orl
mov
ds
push
test
add
ret
hlt
and
movsb
mov
popl
jmp
sbb
in
push
jbe
xlat
jp
jae
mov
clc
mov
mov
cs
cmp
push
mov
lock
bound
sahf
xchg
es
xorb
ret
ret
xor
enter
add
cld
insl
mov
gs
lret
cmp
sahf
shll
pop
pop
mov
orb
icebp
adc
mov
dec
push
outsl
push
fcoms
repz
jg
add
jl
std
sub
das
mov
push
icebp
bound
shll
pop
mov
outsb
inc
aad
js
cmp
movsl
add
mov
int3
jmp
sub
fisubl
add
mov
pushf
sub
mov
xor
push
cmp
scas
aad
mov
jge
loop
int
ljmp
in
daa
xor
sbb
test
xchg
adc
pop
mov
add
cli
mov
nop
leave
xchg
gs
mov
sbb
mov
inc
outsl
mov
repnz
clc
mov
jo
push
mov
mov
push
jb
js
dec
in
adc
dec
dec
pushf
shll
das
inc
pop
or
out
push
mov
sbb
dec
cmp
loope
cli
in
adc
push
sbb
mov
pop
jmp
jne
sbb
jno
sahf
push
int
pop
add
xor
out
inc
cmpsb
jg,pn
push
ret
adc
fwait
shll
xor
pop
pusha
mov
push
inc
sbb
mov
out
xlat
out
cmp
or
sub
arpl
dec
pop
xchg
adc
adc
add
lret
sbb
mov
mov
pop
pop
xchg
xor
repnz
xlat
fdivs
push
sbb
mov
in
jo
push
pop
mov
mov
out
push
dec
and
testb
pop
lods
arpl
test
sbb
xor
aaa
push
xor
xchg
mov
mov
dec
mov
mov
jg
pop
test
les
loop
xchg
add
push
mov
pop
add
adc
pushf
pop
cmp
mov
mov
clc
pop
jmp
or
push
test
adc
in
dec
lcall
jg
rorb
jne
pop
movsl
test
cmpsb
inc
sub
pop
sub
icebp
mov
les
int3
cmp
xor
sbb
and
movsl
fmul
shlb
cwtl
fisubl
mov
repnz
or
jbe
adc
xor
adc
sbb
jns
out
push
or
int3
pop
stos
or
mulb
jae
mov
sbbl
fstl
ja
pop
imul
cmc
add
cmp
shl
mov
mov
xchg
enter
jecxz
pop
add
stos
add
mov
lds
sbb
add
dec
repz
jg
ds
idiv
imul
lahf
xor
sbb
fistps
pop
ret
mov
aas
fcom
jecxz
pop
sub
nop
sti
or
shlb
pushf
clc
mov
mov
mov
lock
movsl
cwtl
cmp
jecxz
cmp
pop
pop
and
add
mov
data16
pop
call
mov
xor
xchg
jb
stc
xor
addr16
push
sbb
pop
mov
fwait
inc
adc
aam
das
pop
dec
ret
lret
pop
mov
bound
jnp
cmp
jl
push
jo
add
lcall
inc
out
xchg
jae
push
out
mov
mov
es
repnz
jne
ficompl
outsb
xchg
out
cmp
cs
mov
pusha
dec
fucomip
cmp
in
in
add
popa
mov
lahf
and
test
push
or
push
addl
pop
jl
test
pop
xor
mov
xlat
xor
pop
rorb
gs
jmp
or
inc
fmull
fidivrs
push
aaa
dec
mul
mov
sahf
ret
rclb
sub
mov
and
ret
pop
and
adc
dec
jae
dec
cltd
lods
mov
and
xchg
add
aam
stos
mov
inc
sub
xor
pop
data16
xchg
add
xlat
fisubl
pop
xor
adcl
sbb
or
or
jnp
mov
loope
loope
jle
cmp
cltd
xchg
and
push
sub
leave
sub
ret
and
and
mov
and
pop
movsl
mov
bound
inc
fldt
shll
inc
out
xchg
out
lcall
or
mov
cmp
fdivrp
or
ret
fdivl
insl
cmp
cmp
jmp
xchg
stos
mov
movsl
inc
shll
jb
sbb
inc
mov
stos
lea
inc
pop
shlb
int
pop
push
and
call
inc
fs
mov
jg
stc
sbb
lds
pop
pop
test
orl
roll
and
inc
in
xor
popa
add
std
in
adc
fadd
jno
or
pop
dec
test
jmp
bound
bound
lods
int3
mov
out
insl
gs
adc
push
jle
sbb
or
ss
cmc
mov
aad
stos
mov
je
fcoms
push
cmp
ret
mov
lods
inc
jle
mov
mov
xor
arpl
imul
adc
lcall
leave
dec
js
adc
addr16
out
test
adc
cmp
push
rcl
nop
jp
das
leave
popa
lret
lea
and
pop
dec
dec
jno
sbb
dec
imul
jl
popa
and
xor
jbe
stc
cmp
icebp
cmp
dec
push
jo
ret
insb
inc
aad
mov
test
loope
mov
and
inc
push
dec
push
sbb
sbb
shl
lea
test
call
ficompl
ljmp
and
adc
sub
pop
mov
ja
push
lret
or
das
inc
push
flds
lock
or
inc
push
pop
and
push
cmpsl
inc
adc
mov
mov
lock
cwtl
dec
inc
pop
lcall
sbb
mov
push
jne
adc
fwait
out
in
jns
in
push
out
fildl
movsb
sub
jo
sbb
lods
loopne
scas
gs
lcall
mov
add
push
sar
xchg
out
aas
inc
mov
sub
mov
sti
roll
mov
cmc
test
xchg
popa
add
test
lods
stc
addl
aas
loope
lcall
dec
insl
stc
int3
mov
fs
lock
push
pop
hlt
outsl
xchg
sub
mov
pop
repz
push
int
in
lock
push
scas
cmpsl
push
je
sbb
cmc
icebp
inc
cmpsl
js
mov
lock
sahf
cmp
sub
inc
test
ljmp
xchg
sbb
adc
fdivl
sub
in
xchg
inc
fistps
mov
mov
in
mov
jno
push
jmp
out
jge
out
xchg
mov
shr
es
leave
cmp
inc
sbb
push
push
add
pop
test
cmpl
mov
mov
int
pop
test
cmp
incl
loop
push
lcall
adc
aam
jo
xchg
jge
inc
dec
fnsave
or
fs
add
js
inc
and
movsb
inc
out
sbb
jp
add
push
xor
adcl
sub
mov
add
mov
testl
push
mov
enter
loope
lods
shll
fistps
jge
push
mov
cmp
fimuls
arpl
test
cmpsb
nop
jp
mov
orb
jae
popa
and
push
out
mov
add
repnz
and
adcb
inc
inc
nop
repnz
gs
incb
arpl
adc
and
push
sbb
sbb
sbb
pushf
mov
pushf
shr
lcall
popf
lahf
test
ret
xchg
jo
pop
dec
jecxz
mov
xchg
mov
in
push
ret
xor
and
movsl
xor
sbb
scas
std
popf
mov
mov
movl
adc
push
aam
mov
ret
aas
mov
lock
sub
push
lahf
in
sub
and
arpl
into
out
inc
and
adc
lahf
sbb
les
shrl
aaa
push
std
push
dec
je,pt
xor
jne
out
inc
add
inc
mov
pop
ss
lea
cld
cmpsb
mov
cs
rorb
adc
and
neg
aad
mov
mov
fcompl
or
push
jmp
testw
xchg
orl
add
sub
xlat
push
jnp
or
cmc
inc
clc
inc
mov
sub
xchg
mov
movsb
xorb
add
cmp
call
call
addr16
enter
mov
stc
mov
sarb
push
sub
shlb
fildll
sub
xor
das
push
jnp
lcall
inc
xor
push
jle
xor
xor
out
jp
aas
mov
pop
ret
and
push
jg
popf
jg
jno
gs
cmc
adc
ret
adc
shrb
pop
lds
outsl
xlat
cmp
sbbb
in
add
push
dec
icebp
bound
test
sti
fmulp
dec
pop
fcompl
xchg
cli
sbb
jbe
mov
testl
xor
leave
loope
stos
rcl
sbb
inc
push
clc
mov
mov
pusha
rol
xchg
shlb
cmp
inc
jmp
or
jns
dec
icebp
inc
cs
dec
es
lea
jecxz
fistps
stos
xchg
and
fcmovbe
mov
pop
and
iret
stos
add
test
test
bnd
mov
xor
imul
sbb
insl
fistpl
cs
or
repz
and
add
mov
sub
movsb
mov
cmp
mov
mov
cmp
insl
fistpl
mov
cmp
jge
arpl
std
inc
cmp
sbb
adc
cmpsb
mov
inc
jg
andl
jg
dec
xchg
jg
clc
mov
sahf
jecxz
dec
stos
jge
cmpsl
sub
mov
test
cmp
pop
sub
pusha
cmp
sbbb
les
stos
jmp
jg
inc
xor
push
sarb
fwait
inc
test
adc
push
mov
xchg
cmp
les
push
lds
mov
add
addr16
adc
in
fcmovnbe
adc
and
cmp
mov
cmp
scas
cmpsb
aas
imul
jmp
jle
rcr
fdivrl
popf
test
pop
lcall
out
pop
jle
pop
or
psubusb
popf
icebp
test
shlb
jb
xor
xchg
loopne
daa
push
imul
inc
fadd
inc
xor
lods
aad
sbb
insl
lock
adcl
je
stc
fldcw
out
jle
cmp
mov
es
outsb
cltd
fdivs
fsts
insl
adc
jp
sbb
sbb
lret
dec
or
call
add
push
aaa
or
iret
add
popa
std
lods
inc
lcall
and
in
push
pop
push
test
jmp
sub
jmp
and
mov
cmp
rcll
or
dec
aas
push
into
jecxz
push
repnz
pushw
pop
insl
fidivl
daa
mov
push
enter
xchg
adc
in
pop
aad
push
pop
aas
mov
shlb
arpl
stc
inc
xchg
dec
jo
mov
sub
lret
add
lret
xchg
xchg
sub
out
xlat
mov
jns
sbb
sub
mov
adc
dec
xor
lds
iret
or
insl
pop
fcmovnb
je
scas
ja
dec
cwtl
add
add
lret
popa
insl
jno
das
inc
sbb
push
xor
or
outsb
pusha
mov
fdivs
xor
bound
jbe
pop
sub
rcl
clc
scas
fcmovb
push
push
in
jb
add
fmuls
mov
mov
into
mov
xchg
test
push
push
pusha
imul
mov
stc
lds
imul
xchg
dec
cwtl
into
and
ret
jns
adc
and
ss
mov
imul
lods
jo
sbb
or
add
xchg
adc
call
jl
sti
inc
aas
push
xchg
mov
rcl
push
or
scas
lock
test
test
dec
pop
xor
mov
xchg
cmpb
jae
dec
outsl
or
add
inc
mov
pop
add
out
xchg
pop
in
cmp
xor
repz
aam
add
or
nop
das
or
bound
xlat
push
mov
mov
imul
cwtl
jae
gs
push
into
push
pop
mov
push
jl
out
and
pop
loop
scas
ret
out
cmpsb
mov
stos
loope
sbb
aam
mov
fs
mov
in
dec
icebp
cwtl
push
loope
repnz
data16
cmp
pop
int3
fwait
ret
mov
xlat
rcrw
sub
xchg
fmuls
mov
ret
push
and
mov
leave
loop
daa
mov
pusha
ret
pop
push
hlt
sub
xor
loope
cmp
add
add
xor
loop
scas
mov
mov
or
mov
pop
out
push
gs
stc
fnstcw
pop
mov
push
dec
or
pop
movsl
mov
mov
add
sub
pop
inc
inc
jno
pop
in
test
insb
lea
repnz
popf
dec
pop
shrl
test
xor
outsb
inc
cmp
ss
imul
lock
lods
add
mov
shrl
and
mov
cmp
push
push
inc
mov
shr
and
out
inc
push
cmpsl
pusha
rcl
dec
dec
sub
repz
pop
cwtl
dec
ljmp
icebp
mov
adcl
jecxz
mov
lea
call
scas
push
lods
xchg
scas
push
pop
popa
jge
lds
ret
shlb
push
fstpl
outsl
pop
jbe
mov
xor
mov
xor
cmp
xchg
jl
mov
sbb
fnstenv
jbe
out
lcall
push
mov
mov
test
daa
stos
imul
xor
push
faddl
cmpb
jp
mov
ljmp
dec
in
in
popa
cmp
dec
or
pushf
jae
cmp
jnp
enter
aam
adc
xlat
fwait
int3
cmp
lods
push
adc
inc
push
mov
pop
addr16
scas
lret
in
pop
pusha
icebp
mov
adc
dec
sbb
inc
dec
lret
mov
sbb
in
xor
sarb
ss
mov
add
out
add
frstor
push
xchg
xor
lahf
xchg
mov
adc
dec
loope
jle
push
add
dec
mov
sbb
jg
repz
lea
xchg
mov
out
repnz
in
jle
in
pusha
push
outsl
pop
sbb
or
jnp
mov
ja
mov
cwtl
jnp
cmpb
pop
sub
sbb
out
int3
cmp
push
add
mov
xchg
repz
imul
cmp
dec
push
nop
or
mov
sub
pusha
or
push
push
pushf
fidivl
lret
ja
pop
gs
xchg
addl
inc
jbe
out
and
mov
jecxz
lock
xchg
dec
in
mov
mov
add
or
out
imul
mov
mov
pop
es
xor
sub
lea
je
enter
push
push
or
icebp
loope
movsl
sub
sub
adc
dec
pop
fnsave
push
popa
mov
rcr
dec
push
insl
mov
jmp
cmp
inc
sub
loopne
adc
push
fdiv
imul
xchg
xchg
xchg
mov
sbb
sub
jo
jle
lcall
xor
sbb
mulb
movsl
sbb
out
aas
xor
mov
insb
stos
cs
rcll
or
cmpsl
sbb
call
insl
sbb
mov
popf
mov
push
loope
inc
jb
dec
jge
lea
pop
or
nop
icebp
enter
stos
ficoms
mov
lcall
sarb
std
icebp
in
sbb
dec
push
je
mov
inc
sub
sub
rcll
and
cwtl
sub
js
fidivs
out
fs
divb
fadd
lods
mov
and
xchg
mov
mov
fcmove
daa
in
repnz
xchg
int
push
pop
push
pop
fistps
cmpl
daa
xchg
jb
fidivs
daa
es
je
mov
lahf
cmp
test
inc
cmp
and
adc
mov
jmp
nop
jg
dec
sahf
inc
addr16
jno
jecxz
sbbl
adc
cmp
test
xchg
lret
stos
push
icebp
lahf
adc
fs
and
arpl
fs
push
sub
rorb
lea
fdivl
in
or
adcb
pop
fs
sbbb
jnp
test
xor
in
jne
sbb
popa
sbb
mov
jmp
adc
pop
xchg
xor
mov
pusha
pop
outsl
popf
push
or
fnsave
out
enter
mov
xlat
dec
frstors
push
push
jmp
sbb
je
fcoms
cmp
repz
cld
lret
xor
cmc
gs
sbb
cmpsl
cwtl
mov
movsb
movsb
dec
icebp
xor
or
sub
xchg
mov
mov
testb
mov
cs
push
mov
les
xchg
repz
adc
push
lds
push
mov
mov
movsb
mov
outsb
test
dec
adc
ret
je
pop
ds
dec
addr16
ret
lods
test
inc
insb
push
stos
les
jge
adc
test
dec
jno
push
ret
pop
inc
imulb
dec
mov
stc
xlat
xor
cltd
loope
test
push
das
ds
dec
inc
pop
andl
jb
cmp
imul
sti
cli
jmp
dec
cltd
cmp
push
lods
stc
inc
insl
push
lds
pop
stos
push
mov
pop
stc
push
ljmp
in
popf
lds
mov
mov
sti
cs
mov
mov
mov
adc
xchg
xchg
enter
push
pop
stc
pop
mov
push
adc
fdivrl
gs
sti
stos
imulb
aam
mov
xor
aas
xor
cmp
aad
scas
enter
repz
push
or
fs
jle
fcoml
dec
faddl
sub
jge
popa
mov
mov
daa
sahf
or
test
lret
les
cmpsl
inc
into
xchg
arpl
pop
addr16
aas
push
cs
icebp
xorb
push
adcl
fnsave
cmc
or
mov
div
mov
mov
xchg
jp
adc
inc
jmp
push
insb
jge
jnp
jmp
inc
xchg
push
cwtl
loope
sbb
sbb
or
jno
xor
add
lcall
mov
push
jns
mov
and
add
andb
mov
jg
pop
cld
jge
divl
in
pop
xor
ds
repnz
js
nop
nop
pop
mov
sbb
pop
lahf
sub
mov
fs
add
out
pop
ret
cmp
push
cmp
mov
pop
shrb
xor
pushf
aad
in
xlat
imul
sbb
mov
xlat
adc
xorl
shll
jl
and
lret
out
sbb
or
std
pop
xchg
das
shll
out
in
and
xor
xchg
xchg
and
imul
rorb
push
pop
or
popf
mov
lea
adc
insl
jge
add
mov
sbb
orl
push
pop
imul
shl
imul
push
int3
jmp
adc
cmp
adc
push
xor
lock
ffree
sbb
mov
cmpsb
cli
cmp
and
repz
or
xlat
jle
mov
add
jo
cmp
call
stc
pop
xchg
cmp
adc
repnz
pop
lahf
ficompl
fcompl
jnp
mov
punpckhdq
pop
cmp
fisubl
add
ljmp
pop
mov
es
cwtl
mov
dec
mov
call
sub
jp
add
dec
lahf
cmp
mov
ja
imulb
test
mov
mov
mov
jl
lods
add
xor
mov
or
in
sub
mov
mov
outsb
fwait
add
jge
roll
jnp
mov
std
xchg
outsb
cmp
jg
in
add
stos
loope
movsb
or
sahf
sub
int3
sbb
in
sub
and
jnp
les
mov
xlat
cmp
in
cld
stc
mov
xor
scas
mov
jecxz
dec
hlt
inc
dec
shrb
popa
push
cmp
jp
pop
ret
and
jb
adc
ret
or
xchg
imul
pop
out
sarb
cmpxchg
xlat
lods
dec
pop
push
pop
out
popf
clc
fbld
or
scas
pop
loopne
aam
sar
ja
push
jnp
das
add
and
fdivr
mov
and
movsb
inc
dec
ljmp
jmp
shlw
lods
cmp
test
or
aaa
mov
jg
scas
mov
xor
mov
adc
pop
rolb
cli
sub
bound
adcl
push
lcall
je
jl
mov
lods
jp
jmp
xor
cmc
rcl
inc
das
push
dec
std
mov
call
mov
adcb
xchg
cmc
cmp
fstps
test
cmp
xor
pop
push
jne
jo
inc
cmpsl
fst
xor
ficoms
xor
daa
fmul
int3
sbb
inc
add
mov
inc
insl
push
adc
jmp
notl
cmpsb
xor
mov
repz
push
lock
aas
lret
in
and
mov
dec
hlt
mov
test
pop
lahf
and
mov
inc
imul
rclb
mov
or
fsubrs
jecxz
shlb
movsl
dec
pop
mov
decl
and
mov
inc
loop
sahf
sub
mov
cmp
ret
jne
mov
insb
jg
aam
aam
das
jb
pop
fs
jne
aaa
cmc
xchg
lds
imul
cld
outsb
jne
cmpsb
lods
sbb
mov
inc
mov
repz
icebp
daa
cmp
push
sti
gs
add
jne
jo
mov
sbb
shlb
ja
lahf
lahf
xchg
loope
pop
notl
push
es
into
sar
adc
imul
xchg
in
jl
mov
addr16
scas
dec
mov
or
aas
xchg
int3
pop
mov
cmp
lock
add
lret
mov
in
sub
jmp
into
inc
cmpsl
pushf
nop
xchg
jno
lea
mov
frstor
jo
test
push
movsb
js
xorl
lea
sahf
repz
xor
loopne
inc
mov
jp
into
pop
xchg
jp
stc
xor
push
insb
in
inc
out
sarl
inc
das
sbb
push
sbb
inc
sbb
xchg
mov
inc
test
std
sbb
sub
decl
movb
jne
out
push
xor
dec
faddl
fcoml
push
ret
cmp
or
adc
repz
and
dec
xor
cld
sti
jbe
jle
and
lock
ret
xor
pushf
icebp
ret
das
cmpsb
ret
cmp
adc
hlt
outsb
leave
xor
cmpsb
jo
and
xchg
iret
cmpsb
test
bound
in
jae
fiadds
in
stc
jno
push
cmp
sahf
icebp
mov
mov
mov
in
ds
cli
xchg
inc
cmp
xor
jbe
jg
mov
fnsave
pop
mov
inc
lock
je
mov
dec
xchg
adc
shrl
fistps
push
xchg
push
mov
jmp
repz
mov
xchg
jl
fisttpl
fistl
dec
sub
loop
fildll
dec
mov
xchg
or
dec
shll
sbb
jge
icebp
pushf
andl
divl
pop
cld
mov
repnz
dec
sub
test
aad
inc
push
xchg
push
ret
pop
jge
outsl
cld
loope
arpl
pop
loopne
cmpb
mov
lcall
push
sbb
sub
lcall
pop
and
movsb
push
sbb
inc
test
pop
loop
cmp
stos
in
dec
adc
gs
adc
jg
fistl
push
scas
jecxz
xorb
cltd
test
mov
mov
lods
inc
jae
stc
xchg
push
fildl
lcall
mov
loop
shll
mov
scas
sarb
pop
imul
movb
int3
hlt
outsl
in
cmp
dec
stc
sub
push
or
outsb
jecxz
daa
out
lret
add
mov
int
and
jb
aaa
sbb
je
das
ret
mov
xchg
jg
mov
rcrb
adc
movsb
sub
lret
dec
mov
out
lret
inc
sbb
nop
sbb
ljmp
negb
push
sub
lock
js
fwait
loopne
push
sub
lea
iret
daa
cltd
cli
sbbl
rol
fcoms
push
les
stc
jo
and
cwtl
inc
aas
xchg
adc
mov
pop
push
daa
cmp
jo
movsl
xchg
pop
jno
xchg
add
icebp
mov
jmp
rcrb
jg
add
ja
inc
loop
xchg
cmpsl
add
sarb
ds
mov
sbb
outsl
pop
lds
push
and
push
fsts
lret
add
cmp
arpl
aaa
imul
add
loop
mov
or
sbb
inc
push
pushf
cvtps2pi
ret
sbb
and
sub
push
shl
mov
mov
mov
enter
int
pop
or
jo
sti
lea
jo
mov
orl
jle
pop
lret
inc
movsl
add
and
pop
aad
mov
adc
pop
add
xchg
enter
sub
lock
inc
xor
pop
sub
in
mov
xor
test
movsb
data16
test
dec
xchg
fadd
mov
cmp
mov
fadds
and
pop
sbb
pop
adc
xchg
sbb
lret
cwtl
pop
cs
jecxz
push
mov
mov
iret
lods
xor
pusha
dec
and
push
xchg
adc
dec
loopne
dec
aad
mov
add
and
inc
sbb
cmpsb
repnz
mov
pop
cltd
ss
dec
adc
loopne
movsl
cmp
mov
call
jmp
sub
psubq
sbb
pop
in
adc
xor
and
mov
inc
pop
js
sbbl
or
insl
xor
dec
pop
mov
es
inc
xchg
xor
cmp
js
pop
jp
repz
outsl
lcall
cmpsb
inc
fidivl
and
add
gs
cmc
arpl
xor
xchg
sbb
cmp
push
xchg
iret
ret
ds
movsb
jmp
push
int3
aaa
or
pop
add
imul
mov
stos
ja
mov
in
jp
pushf
push
cmp
out
js
int3
cmp
xor
cltd
mov
fbld
leave
sub
mov
fidivs
fiadds
cli
jge
jl
add
repz
push
ja
adc
test
ds
lods
leave
bound
cmp
jp
jb
jmp
sbb
mov
sahf
pop
push
mov
pop
cmpsl
popa
test
dec
das
lock
cs
adcb
inc
pop
push
div
shll
adc
pop
in
int3
pop
push
dec
fstps
mov
mov
sahf
xchg
in
hlt
xchg
pop
enter
push
dec
add
lods
mov
ret
cmc
or
or
test
jo
mov
sub
jecxz
pop
cmc
imull
lret
or
pop
xchg
shll
sub
cmp
ret
adc
int
mov
cmp
pop
sbb
scas
adc
mov
lret
imul
repnz
insb
or
mov
int
movsb
outsb
xchg
leave
dec
mov
stc
inc
pop
aad
scas
es
fidivrl
mov
or
mov
cmc
adc
das
insl
jmp
popa
inc
addl
orb
jmp
jnp
fimuls
inc
jl
dec
and
add
lock
test
cltd
xchg
mov
mov
xor
out
mov
pop
or
insl
mov
in
imul
jne
pop
pop
repz
movsl
adc
jge
enter
negb
out
push
les
jno
jo
mov
dec
inc
dec
vxorps
iret
mov
xchg
bound
lret
mov
push
cld
and
inc
add
jno
test
and
inc
lret
add
ljmp
xchg
rol
pop
push
lret
xlat
cmp
xor
cmpsb
movl
push
add
push
dec
sbb
dec
and
xchg
int3
in
ja
hlt
adc
pop
add
lods
scas
xchg
ds
or
movsl
std
and
hlt
or
fnstenv
mov
add
mov
out
mov
imul
mov
out
mov
repnz
add
je
les
cs
push
xor
inc
pushf
scas
lds
dec
and
fwait
add
leave
dec
push
rcr
adc
xchg
cmp
inc
rolb
fcmovnu
and
outsl
xor
ljmp
lds
cld
dec
push
pop
mov
sub
in
out
enter
repz
jge
arpl
adc
cli
push
pushf
and
pop
or
loop
inc
inc
jnp
jmp
inc
jge
addr16
inc
iret
negb
in
mov
aas
adc
push
pop
sbb
inc
outsb
ficoml
or
mov
add
lcall
daa
push
inc
jne
scas
sbb
mov
or
pop
mov
mov
add
push
repz
icebp
cmc
xchg
dec
gs
bound
push
and
fstps
loopne
outsb
sub
sub
cld
jne
push
xor
pusha
icebp
je
cmp
mov
lock
xor
add
mov
clc
lds
mov
inc
pop
hlt
sarb
push
popf
jae
xchg
out
sub
movsl
ds
in
cmp
insl
lret
dec
cmc
in
jo
cwtl
xchg
lret
mov
adc
pop
jno
cmp
mul
pop
cld
pop
inc
punpcklbw
ret
or
cmp
push
mov
pop
adc
repz
push
imul
jnp
mov
jae
pop
mov
push
es
pop
mov
mov
lahf
test
popf
mov
xadd
mov
mov
lods
scas
or
sbb
pop
gs
pop
test
adc
int
adc
sbb
sub
popa
push
test
or
sub
pop
clc
push
aas
mov
jg
dec
mov
push
sahf
push
mov
hlt
iret
sub
pop
adc
and
repz
lods
mov
notb
int3
arpl
push
out
and
sub
add
gs
arpl
add
xor
movsb
sub
mov
adc
clc
outsl
lret
sub
nop
loope
cwtl
test
xlat
ss
xor
xor
push
cmpsb
pop
iret
lahf
pop
fadd
inc
test
or
hlt
dec
je
lret
pop
dec
push
divl
std
mov
and
push
xchg
out
dec
cmove
adc
daa
mov
sbb
stc
adc
cmpsl
sub
sahf
push
pop
push
cmp
jl
and
subl
cmpl
cltd
movsb
push
or
cmc
cmp
jne
rorl
loop
loop
test
mov
xchg
xchg
jno
into
pop
cmp
sub
and
or
andb
pop
xchg
mov
cmp
mov
mov
inc
mov
xchg
xor
xor
in
jbe
movsb
push
pop
sbb
call
cmpsb
adc
insl
pop
xchg
repnz
sbb
xchg
dec
add
ss
pop
sub
jmp
xchg
push
mov
dec
scas
mov
pop
clc
jecxz
inc
fcoml
and
adc
cmp
dec
cmp
or
fsts
test
mull
popa
pinsrw
dec
fcomip
push
mov
xchg
mov
enter
ss
xor
xor
xor
add
lahf
sahf
mov
mov
rol
scas
pushl
mov
jg
into
dec
rorl
roll
or
pop
cmc
imul
and
adc
out
shr
bound
mov
repz
and
xchg
sub
xor
jne
call
sbb
add
xchg
ret
add
cmc
push
inc
jnp
xorl
mov
xor
div
xor
or
mov
ss
lea
dec
jg
lds
mov
roll
and
xor
jno
adc
fsub
or
adc
sbb
lret
imulb
pusha
push
sub
clc
inc
lahf
add
mov
out
push
xchg
xchg
nop
mov
fwait
sub
cmp
xor
lret
je
mov
xor
gs
lods
push
inc
in
pop
dec
sbb
cmc
addl
les
call
repz
imul
or
dec
xchg
dec
cmp
nopl
jl
mov
fildll
xor
sbb
pop
insl
shll
jbe
mov
jg
mov
mov
loop
mov
into
and
jns
add
addr16
mov
cmpsl
mov
shrb
or
jns
mov
cmp
mov
pop
mov
ficompl
push
rorb
and
stos
and
inc
xor
mov
popa
xchg
lods
rorl
fdivr
inc
fbld
cmp
and
test
push
ljmp
lcall
xchg
cmpsb
pop
or
lret
mov
aaa
dec
es
fistps
dec
pop
cmpsl
sbb
mov
adc
push
add
pop
incl
out
inc
out
xlat
push
xchg
fldcw
adc
and
and
jb
and
xchg
jo
push
out
dec
mov
or
sub
sub
mov
movsb
stos
inc
jne
fsubs
jg
xchg
mov
je
pop
icebp
ljmp
rcll
out
sti
test
addl
fsubl
inc
mov
mov
push
loope
jle
xchg
mov
add
pop
call
lcall
adc
cmc
mov
adc
addb
and
sub
std
mov
int
lods
cmp
roll
lcall
cmp
loope
mov
sub
in
xchg
into
jbe
jae
mov
in
outsl
inc
movsb
xchg
mov
insb
xchg
fnstenv
ja
jns
mov
jl
mov
xchg
and
mov
mov
cmp
mov
fcoml
ffreep
push
cmpsb
xlat
in
pop
push
orb
sub
adc
and
div
out
data16
lods
ss
inc
ds
add
add
dec
or
sbb
movsb
fidivs
mov
idivb
enter
rorb
pushf
xor
cwtl
mov
lds
and
clc
ja
sbb
in
sub
jb
popl
icebp
xor
xlat
add
loope
loop
sbb
jle
icebp
cmp
inc
rcr
push
push
pop
lods
cld
pop
sub
and
stc
push
push
shrb
aas
inc
mov
les
xchg
mov
cmp
add
popa
sti
bound
jp
ja
mov
jnp
lcall
mov
aaa
xchg
aad
sbb
or
lock
mov
jns
mov
mov
std
xorb
jbe
mov
sbb
lret
addr16
sbb
clc
push
sti
mov
dec
xchg
ljmp
mov
mov
pop
test
lret
sub
sub
popf
leave
loope
testl
pop
adc
sub
jmp
sbb
insb
xchg
lret
mov
jl
push
aam
iret
imull
push
lahf
inc
rcr
mov
mov
std
push
jg
jno
jne
lods
insb
hlt
mov
pop
push
inc
push
and
sub
add
loope
fbstp
dec
add
pusha
cltd
dec
cmovb
mov
mov
mov
sahf
dec
das
xor
les
outsb
and
inc
mov
or
add
push
dec
movb
pop
pop
cmp
inc
and
cmp
js
jmp
mov
mov
jp
aam
xchg
pop
into
aad
fnstenv
test
adc
dec
pop
adc
mov
insl
cmpsb
xor
fmull
mov
dec
shr
inc
mov
test
inc
dec
or
xlat
jl
mov
js
pop
jns
nop
not
cmp
xlat
and
mov
mov
movsl
popa
mov
sub
pop
les
insb
in
repz
mov
fisttpll
add
mov
gs
cmpsb
pop
es
and
aam
sub
pop
inc
adc
pusha
loopne
popa
cmp
jmp
lret
mov
js
xchg
fildll
push
mov
sub
xlat
cmp
pop
sub
mov
cwtl
aas
dec
push
out
ret
jae
in
mov
dec
iret
cmc
ficomps
dec
mov
push
xchg
add
notb
fisttpl
xor
scas
push
cmp
add
add
in
out
inc
xchg
xor
clc
popf
xor
mov
std
addr16
xchg
js
hlt
inc
xchg
and
sbb
and
imul
sahf
cmpsb
xor
lock
pop
outsb
pushf
sbb
imul
arpl
jl
sub
mov
xchg
jg
cmp
inc
dec
add
dec
sbb
mov
mov
pop
movsb
push
out
movb
jmp
sub
in
out
cmc
cwtl
mov
fiadds
loop
popa
daa
test
dec
mov
push
fst
or
xlat
sarb
fcoml
mov
cld
mov
ror
lahf
fldl
sbb
insb
jp
jp
or
mov
jl
testb
push
cld
out
icebp
sub
inc
push
sub
in
lock
dec
loop
sub
arpl
pop
inc
push
fmul
das
stos
popf
and
jns
pop
sbb
dec
pushf
mov
jg
lea
fisttpl
jbe
movsb
xchg
and
xor
dec
push
leave
adc
mov
andb
xor
test
sbb
aam
arpl
ss
sub
clc
mov
roll
je
adc
dec
mov
ds
xor
inc
movsb
inc
es
fs
sub
notl
jmp
adc
pop
incl
fistl
fndisi(8087
jno
adc
mov
lods
xchg
repz
cld
fwait
cli
jno
cmc
aas
in
push
nop
pushf
mov
mov
pop
dec
jp
pop
fcoms
jmp
sbb
addr16
push
sub
fidivl
sub
adc
lret
push
or
xor
xor
ljmp
xor
scas
pop
jo
jecxz
pop
and
add
cmp
dec
xchg
clc
and
repz
shl
and
movsl
push
rcl
sbb
int
sub
stc
push
jo
cli
sub
gs
mov
push
ds
mov
cmp
scas
mov
push
xchg
jo
sbb
pop
xor
movsl
in
push
test
fucom
adc
in
or
push
rcll
aad
int3
int3
shll
call
into
push
out
ds
xchg
repnz
repnz
inc
loop
cli
mov
dec
popa
fbstp
sbb
mov
dec
sub
pop
fbld
sub
movsb
dec
mov
xchg
ficoml
and
les
add
add
lock
mov
cmp
jmp
pop
arpl
inc
xor
push
cld
fwait
add
dec
outsb
mov
arpl
ret
inc
pop
sbb
lods
mov
lds
lods
or
in
in
mov
mov
cmpsl
insl
es
fs
decl
fsubrs
mov
shr
and
sbb
negl
mov
xchg
addb
xchg
sarl
lock
scas
adc
insb
sub
pop
dec
sub
xchg
outsl
dec
dec
cmp
xlat
cmpl
repnz
out
or
je
or
ds
mov
fadds
movsl
rorl
sbb
dec
jmp
cmp
lock
sbbb
adc
mov
daa
xchg
inc
divb
pop
add
inc
repz
cltd
inc
leave
arpl
or
clc
rol
jg
test
pop
sub
xor
imul
sub
frstor
add
loopne
negb
sbb
scas
mov
leave
dec
ds
aad
inc
divl
call
shlb
xor
push
iret
xlat
pushf
mov
cmp
out
dec
jne
xlat
and
or
xchg
stc
in
push
aam
adc
cmp
test
jb
mov
hlt
hlt
mov
stc
testb
dec
xchg
iret
inc
xor
cwtl
or
xlat
pop
jae
pop
jne
out
sbb
or
mov
mov
jg
js
push
and
add
jecxz
xchg
or
jg
roll
scas
mov
subl
pushf
fildll
sub
xchg
pop
pop
or
test
jg
mov
and
xor
lcall
leave
add
movsb
ds
xchg
mov
mov
in
testb
mov
jbe
fisttpl
setb
add
jne
push
mov
fiaddl
xchg
lahf
repz
and
push
jle
dec
repnz
inc
pop
out
cwtl
jnp
sub
pusha
pop
mov
jns
dec
shrl
jb
inc
and
js
dec
xchg
xor
dec
icebp
jns
push
and
mov
adc
push
mov
xadd
mov
pop
push
in
stos
mov
orb
inc
inc
jo
push
jbe
jle
loope
stc
or
pop
and
jb
jecxz
fists
add
inc
cwtl
xchg
push
loopne
in
je
lods
fldcw
fistl
icebp
sub
push
fmul
push
fucom
mov
out
aad
mov
bound
sahf
mov
arpl
into
jbe
in
fmul
mov
fldl
fs
push
push
jns
mov
bound
xor
add
or
mov
js
dec
xlat
cmp
cmpsb
lret
adc
roll
jge
cmpsl
jne
cmp
out
jg
pusha
scas
in
ljmp
stc
mov
sbbb
mov
mov
test
arpl
sub
mov
mov
fsub
cmp
adc
push
repnz
sbb
fidivrs
sub
mov
inc
add
clc
inc
inc
dec
aam
cmpsb
jnp
dec
subb
pushf
loopne
outsb
mov
inc
lods
je
xchg
inc
ret
cmp
sbb
in
dec
dec
icebp
outsl
mov
test
push
jg
add
sub
push
dec
je
add
lock
inc
adc
imul
dec
leave
dec
push
shrb
test
addr16
outsl
scas
pop
add
mov
setnp
add
insb
cmpsb
sbbb
push
adc
push
add
sbb
sbb
or
rcl
sti
mov
outsb
or
popf
out
and
ret
mov
loope
arpl
sti
xchg
std
aaa
xchg
xorl
dec
int
js
cmpsb
gs
jg
int
ljmp
fidivs
loopne
dec
je
repz
jb
aad
movsb
fcomps
push
mov
xor
mov
pop
daa
ret
popa
daa
push
inc
movsb
sbb
mov
ja
lds
in
sti
and
jmp
and
ret
or
push
push
shrb
pop
pop
mov
adc
xchg
jmp
push
dec
jnp
cwtl
popa
pop
repz
mov
jno
cs
mov
cs
cld
popl
test
pushf
rcrb
add
mov
cmpsb
aas
repnz
xor
xor
dec
shrl
xlat
arpl
cmp
sbb
lods
out
cli
xor
mov
test
imul
outsb
push
pop
js
ret
fwait
and
xchg
std
mov
add
push
arpl
mov
xor
call
xchg
in
daa
adcb
fdivrl
push
lods
cmc
adc
outsb
popa
mov
lds
lods
mov
add
pop
icebp
rolb
inc
and
cmp
stc
mov
sub
adc
ds
lock
mov
rorb
rcll
inc
pop
or
dec
ret
cmp
pop
dec
scas
fdivs
fwait
mov
lahf
ljmp
pop
arpl
movsb
lcall
inc
lods
hlt
movsb
xlat
cmc
aam
test
js
nop
ja
cli
push
inc
add
orl
ds
mov
jmp
movsl
dec
shlb
ljmp
pop
mov
jecxz
sti
push
scas
push
out
cld
and
in
clc
sub
jle
imull
imull
xor
ljmp
xchg
xchg
adc
gs
sub
or
ja
xor
and
mov
ss
lods
rorl
daa
jecxz
push
call
sub
orl
and
icebp
sbb
pop
out
dec
push
xor
sbb
cmpsl
clc
inc
aam
mov
insb
shll
and
aas
cmp
dec
sbb
stc
cmpsb
and
dec
aas
xor
jg
sub
call
icebp
gs
enter
ds
icebp
cmp
sub
daa
cld
dec
mov
xchg
sbb
je
fs
xlat
pusha
mov
lds
dec
jb
fdivl
sub
out
int
popl
mov
inc
pop
xchg
rolb
ds
inc
es
xchg
imul
dec
or
aam
push
jl
nop
push
push
fs
add
or
in
nop
sub
scas
pop
inc
mov
inc
popa
cs
push
mov
mov
ja
push
out
nop
fldenv
aam
ret
xor
test
lds
or
add
sahf
insb
push
pop
push
fs
sub
mov
roll
in
movsl
shrl
nop
stos
cmp
imul
xlat
scas
sbbb
pop
jb
lcall
scas
mov
add
outsb
pop
mov
repnz
sub
xor
dec
mov
sbb
aaa
dec
push
add
mov
rcl
enter
and
inc
bound
in
mov
movsl
in
roll
clc
add
arpl
call
lods
inc
scas
and
cmpsb
push
sbbb
shll
ret
movsb
and
push
ljmp
lahf
mov
gs
mov
xor
sub
pop
adc
daa
or
adcl
jb
test
into
mov
insb
dec
loopne
jno
xor
xchg
stos
fistpll
xor
es
cmp
in
xlat
movsb
lahf
les
jbe
js
sahf
xchg
insl
xlat
cwtl
ja
pop
sub
jbe
cmpsl
adc
lahf
stc
repz
jo
pop
test
lea
js
inc
repz
in
adc
inc
lahf
cmc
lea
sub
pop
out
scas
aas
xchg
xchg
xchg
inc
and
jmp
cmp
jge
fwait
inc
push
sbb
rcrl
inc
mov
push
sbb
mov
test
pop
mov
xchg
pop
pop
mov
movsb
popf
cmc
jp
mov
or
xchg
cmp
cmc
xor
inc
js
jge
sbb
xor
dec
sub
or
pusha
mov
sbb
push
imul
xchg
adc
and
pop
jg
mov
imul
mov
mov
sub
aad
imul
xchg
pop
push
cmp
mov
or
shl
outsl
andl
or
mov
push
bound
pop
mov
and
inc
xlat
pushf
lret
inc
fwait
add
inc
jns
jbe
rclb
jnp
popf
push
sbb
movsb
dec
mov
shrb
jg
les
or
jo
enter
in
incl
jecxz
nop
push
hlt
push
jno
add
hlt
cmp
xchg
out
mov
mov
mov
addl
mov
cltd
inc
stos
std
or
hlt
pop
pop
xor
cld
leave
ret
pop
adc
lods
adcl
movb
xchg
es
loopne
pop
fmuls
inc
jecxz
pushf
or
xchg
jne
jmp
fdivrl
addl
inc
or
and
int3
jo
sub
adc
loop
and
dec
addl
bound
xor
inc
stc
inc
xchg
sub
movsl
adc
push
push
mov
aas
ret
add
lcall
add
mov
push
testl
jbe
aam
mov
or
cmc
sbb
fs
divl
push
adc
popf
or
cmc
bound
loope
cmp
jbe
mov
shrl
arpl
les
mov
or
lahf
icebp
fistl
adc
sbb
jbe
adc
inc
or
inc
adc
icebp
clc
mov
addl
outsl
dec
sti
xor
sbb
into
mov
add
add
add
push
xor
xchg
xlat
push
adc
dec
imul
ret
les
bound
js
sahf
adc
xchg
push
cmpsb
iret
call
imul
adc
jge
mov
into
jo
push
scas
xor
cld
mov
add
stos
dec
jb
aad
push
dec
repz
or
push
lcall
rcl
inc
adc
inc
sti
xchg
add
in
jle
mov
mov
fwait
imul
mov
xchg
sbb
xchg
test
xchg
ss
mov
stos
pop
xchg
push
pop
jnp
cmp
sub
mov
pop
fs
aaa
add
idivb
shrb
or
jp
out
cmp
inc
loopne
mov
adc
aas
outsb
jae
inc
jmp
xchg
cmp
sub
scas
outsl
push
daa
or
out
inc
mov
or
lods
mov
or
jle
cmp
lcall
adc
roll
test
dec
jp
movsl
push
cli
mov
mov
push
lret
sbb
dec
add
push
dec
xchg
aam
jle
test
cmpsl
cmc
cltd
or
insb
or
ds
mov
mov
adc
sub
dec
rorl
xchg
stc
fmul
lds
or
dec
aad
jecxz
out
ja
mov
adc
mov
jmp
cli
add
icebp
cmp
sbb
ja
lea
or
rcr
insb
out
fs
sbb
jo
in
mov
scas
and
xor
flds
fsts
adc
mov
ljmp
scas
push
or
adc
daa
adc
dec
push
gs
cs
adc
aaa
add
addr16
in
dec
aaa
jne
in
mov
test
dec
inc
and
pop
movsb
cmp
jno
sbb
shll
xbegin
xchg
cmp
dec
popa
or
lret
je
pop
sbb
inc
add
jno
mov
adc
loop
pop
sahf
cmp
dec
out
add
imul
rol
insl
xor
jmp
jbe
and
mov
fs
or
add
ret
adc
cltd
aaa
pop
or
out
aaa
adc
nop
mov
int
int3
mov
add
sbb
or
dec
stos
mov
add
repz
inc
scas
jae
or
sbb
adc
je
mov
jb
and
int
cwtl
clc
mov
pop
push
add
pushf
inc
mov
das
sub
mov
sub
repz
cs
andb
mov
jle
cmp
mov
es
in
clc
cmp
push
pop
sbb
sub
xchg
lret
mov
scas
enter
test
jl
dec
sbb
jle
xor
lea
and
inc
push
jecxz
or
jg
int
int
call
push
push
fsubs
call
ds
mov
cmp
or
pop
push
loop
sbb
ja
dec
add
jae
out
or
sti
mov
push
dec
jle
sbb
leave
ss
in
mov
push
lret
les
pop
fstpt
sub
inc
out
inc
mov
cwtl
filds
mov
ret
mov
out
out
mov
jp
mov
jbe
scas
cltd
jl
inc
fstps
lock
push
dec
mov
fmull
js
add
mov
xlat
mov
mov
push
out
mov
pop
or
cmpsl
inc
lea
mov
stos
sbb
jae
test
aaa
ror
out
out
dec
add
mov
lcall
pushf
loopne
mov
cmpsb
mov
push
stos
ljmp
aas
imul
push
sub
out
mov
test
movsl
int3
cmp
shl
push
dec
mov
loope
shlb
in
pop
dec
sbb
js
insb
lahf
sbb
aaa
data16
into
leave
dec
insb
cmc
mov
es
xor
pop
movsb
js
fs
xchg
inc
repnz
int3
jl
push
aaa
mov
dec
jne
negb
mov
popf
add
ss
test
imul
divb
mov
lods
xchg
test
movsl
jae
dec
jmp
stos
sbb
das
cwtl
popa
adc
sbb
outsb
sbb
subl
or
or
mov
repnz
mov
xor
sub
fstpl
add
ds
enter
jns
fdivs
fcmovnb
sub
sbb
outsb
sub
imul
mov
mov
pop
xchg
mov
mov
jmp
ljmp
dec
mov
iret
xor
jbe
fldcw
push
mov
mov
mov
mov
xchg
outsb
icebp
xorb
pop
sub
int
or
mul
add
outsb
fcmovbe
je
xor
gs
adc
or
mov
mov
add
cli
imul
dec
shll
inc
arpl
mov
mov
les
jo
or
mov
cmp
jns
mov
adc
xchg
xchg
andb
inc
mov
sahf
and
lods
popf
fs
adc
ret
xor
pop
mov
insl
cmpsl
out
xchg
add
push
sub
ds
sarb
xchg
hlt
test
mov
repz
aaa
fs
mov
sub
in
jle
xor
ss
movsb
loop
std
xchg
mov
es
movsl
lock
cmp
clc
and
and
enter
lahf
xor
jns
jle,pt
cltd
mov
les
clc
dec
clc
xchg
mov
in
lds
mov
jne
push
add
data16
mov
mov
push
mov
aam
push
pop
jno
jne
faddl
aad
into
aas
stc
add
inc
sub
dec
mov
rclb
test
mov
sbb
push
mov
gs
mov
jnp
dec
adc
mov
mov
jp
insb
in
fldt
int3
ds
push
add
pop
pop
push
fucomi
loop
mov
cmp
imul
jns
jb
icebp
sbb
adc
iret
aas
push
xchg
sub
jo
stc
jns
xchg
lods
in
cwtl
xchg
insb
adc
pop
xchg
mov
push
xchg
fmull
aad
push
pushf
xor
lcall
sbbb
adc
xchg
popa
jo
stc
cmpsb
inc
and
pushf
dec
adc
sbb
insl
xlat
sbb
push
xchg
lds
xor
pop
pusha
loopne
mov
sbb
cmp
rcrb
mov
out
jo
add
jmp
adc
and
fwait
in
imul
cmp
mov
sub
or
mov
jecxz
push
mov
dec
rcrl
stc
jbe
lods
cli
mov
or
sti
push
and
sbb
push
ret
mov
or
daa
inc
cmp
mov
or
test
cmp
push
nop
mov
lcall
sub
ja
shlb
push
pop
mov
jmp
sbb
enter
sahf
mov
mov
mov
add
daa
pushf
push
add
mov
mov
xor
jns
fcomp
jae
sub
push
das
lahf
add
lahf
mov
mov
cld
mov
cltd
enter
arpl
add
aam
jbe
std
iret
jge
imulb
sbb
and
loope
fbstp
cli
adc
inc
and
dec
gs
xor
mov
aaa
jae
test
push
add
orb
out
mov
sbb
adc
jl
mov
fwait
repz
cmp
mov
fisubrs
adc
mov
imul
out
outsl
jle
setnp
and
sub
pop
stos
add
pushf
jae
jle
ss
or
in
repz
rclb
mov
fs
push
mov
bt
push
xchg
add
pop
pusha
pop
and
loope
jecxz
in
fdivs
aad
leave
ja
jbe
outsl
cmp
dec
add
insl
loop
add
sarl
mov
cwtl
mov
and
lret
movsl
xor
xlat
jbe
rol
and
int3
sub
imul
sbb
in
mov
xor
ljmp
ret
adc
enter
cld
notb
shrb
mov
or
add
js
sub
adc
rolb
mov
outsb
aam
pop
fneni(8087
xchg
and
mov
imul
test
mul
mov
hlt
xor
int3
sti
sub
in
xor
test
fwait
cmp
push
ja
xor
dec
scas
dec
lahf
test
scas
sub
push
fs
rcr
push
mov
push
test
jns
jl
mov
add
add
jge
lds
sbb
mov
repz
pop
jnp
jb
out
add
inc
clc
dec
subl
sbb
in
fdivl
shll
fnsetpm(287
shrb
push
pop
add
cwtl
mov
lret
adc
push
mov
jge
in
push
add
jb
or
or
push
jge
cmc
mov
roll
inc
jle
ret
addl
jne
fs
and
or
inc
or
adc
dec
ds
stos
ja
mov
and
cmpsb
lcall
cmp
add
outsb
xor
cmpb
dec
inc
orb
fdivrs
rolb
mov
mov
xor
loope
fldl
stos
out
inc
rcll
pop
xchg
adc
pop
mov
daa
or
lret
fwait
mov
mov
aas
into
loope
lret
lcall
clc
push
out
idivb
lret
mov
mov
and
out
xchg
loope
push
popf
sbb
push
or
cli
aaa
cmpsl
arpl
data16
mov
mov
subb
sub
jo
loope
mov
test
lret
es
lods
icebp
sbb
scas
jb
mov
mov
mov
jmp
stc
jbe
lods
jb
call
mov
sti
dec
jbe
sbb
xlat
cmp
add
ja
sbb
mov
jg
iret
dec
xchg
in
pop
and
dec
stc
dec
inc
xor
ret
iret
inc
pop
fsts
fsubl
add
testb
adc
fcomp
cmp
mov
adc
and
fidivs
fs
dec
cli
cmpsl
mov
mov
xchg
add
jmp
xor
fldenv
mov
insl
push
mov
addr16
loopne
mov
mov
sbb
aam
inc
cli
xor
sbb
loop
gs
inc
xor
mov
lret
jb
jne
cmp
lret
mov
inc
in
and
ds
jge
mov
add
mov
push
loop
scas
jl
add
adc
fsubr
mov
mov
pop
pop
rolb
adc
shll
inc
pop
lock
inc
jp
push
sbb
out
dec
and
dec
test
xchg
xchg
imul
fmulp
fsts
mov
std
inc
push
and
xor
xor
jbe
in
push
in
mov
out
mov
out
fisubrs
mov
call
lods
data16
test
xchg
mov
daa
enter
xchg
jecxz
fiaddl
mov
sbb
ficoml
xchg
cmp
sbb
dec
inc
cs
js
fsub
repz
divl
and
outsb
mov
bound
xor
xor
movsl
lcall
lret
aas
mov
push
push
jnp
sbb
enter
repnz
shlb
mov
lret
add
sbb
andb
out
int3
sbb
xor
sub
adc
adc
popf
fnstsw
adc
in
mov
add
push
lret
pop
cmp
in
add
rcrb
rcrb
push
and
or
add
hlt
mov
mov
add
mov
icebp
xchg
push
test
lret
je
mov
mov
stos
xchg
adc
add
out
mov
lahf
es
das
push
inc
ja
pop
xchg
arpl
push
ret
fimuls
pop
in
jge
cmpsl
test
sbb
or
jne
xchg
cwtl
pop
lds
push
xchg
or
sbb
inc
dec
es
add
or
push
cmp
dec
fsubl
mov
fsubrs
test
out
leave
std
cmp
mov
add
in
nop
pop
pushl
outsl
xor
in
rol
add
sbb
bound
ja
xorb
xor
xor
mov
aas
cmp
pop
rorb
pop
outsl
popf
cmp
jbe
ret
sbb
mov
ficomps
lahf
test
test
xor
push
cmp
sub
cmp
adc
dec
push
dec
adc
fbstp
pop
stos
and
loop
sbb
std
mov
cmc
mov
mov
test
mov
lcall
daa
cltd
mov
mov
dec
call
ret
pop
cltd
clc
shlb
aaa
dec
mov
push
arpl
loopne
pop
jne
inc
iret
jle
int
mov
xlat
lods
jbe
add
fmull
and
les
xchg
and
rcrb
inc
scas
jle
idivb
push
iret
jg
lea
jmp
push
fidivrs
ss
jg
cmpsl
popa
pop
aas
xor
pop
in
cmpsb
pushl
jbe
data16
leave
cmp
jp
adc
mov
scas
lret
mov
mov
cmp
mov
imull
popa
pop
scas
test
sbbb
xchg
mov
sub
push
jmp
int3
outsb
cmp
mov
shll
cwtl
add
int3
arpl
aas
pop
dec
ds
gs
or
rclb
jno
jmp
inc
sarb
mov
xchg
xor
pushf
scas
icebp
jo
lods
xor
aad
add
xchg
insl
cs
pusha
add
mov
aad
fidivl
fstps
leave
push
daa
movsl
mov
xchg
and
mov
movsl
aas
mov
sub
sahf
pop
js
mov
jo
mov
fbld
inc
jp
mov
cli
sub
imulb
inc
jnp
xchg
mov
cmp
xor
in
int3
dec
popf
jl
js
sub
cltd
and
push
push
jne
and
mov
pop
imul
mov
xor
int3
imul
mov
sub
rcrl
insb
cmp
sahf
mov
dec
repz
and
mov
mull
fs
sti
inc
and
add
mov
push
jnp
xchg
xlat
jb
inc
out
and
fnstsw
lahf
andl
jno
in
pop
or
fistpll
inc
jnp
in
xor
dec
dec
pop
inc
pop
popf
rorl
dec
ljmp
xlat
xor
iret
rol
and
imul
add
into
xchg
sbb
in
ja
lea
popf
test
es
icebp
xor
popl
mov
mov
pop
out
sti
into
pusha
cli
js
repz
in
mov
sub
sbb
sbb
arpl
jns
mov
loopne
xchg
push
in
add
hlt
test
or
fcmovu
sub
mov
fsubl
or
push
test
aaa
in
push
mov
out
and
icebp
jge
mov
jae
and
test
mov
negl
addl
xchg
aaa
popa
adc
or
pop
dec
adc
mov
or
dec
enter
test
out
loopne
scas
inc
ffreep
imul
dec
imul
sbb
popa
inc
mov
cld
mov
mov
into
movsb
and
mov
mov
pop
in
imul
enter
jno
dec
sub
ja
inc
das
mov
push
push
xchg
cmpsl
pop
adc
cli
push
scas
adc
idiv
cmp
cs
mov
cmp
jmp
sbb
adc
int
sti
jns
test
jno
mov
shll
jle
cmpsb
and
stos
fs
or
lds
xchg
aam
xchg
xor
cmp
bound
jge
add
pop
mov
sahf
aas
cmpsl
cmp
cmpsl
lea
mov
mov
or
xor
pop
cld
jmp
push
sarl
or
in
mov
mov
outsl
sbb
adc
fldcw
shlb
ljmp
add
inc
dec
lret
sbb
adc
test
lcall
gs
mov
mov
cmpl
jne
std
pop
add
inc
add
fstps
xor
in
xchg
aaa
outsb
or
xchg
pop
jp
loop
stc
adc
fdivrl
mov
and
push
mov
rcpps
js
jle
in
adc
aaa
inc
cbtw
sbb
sti
xchg
cmc
call
movsb
outsb
cmc
jae
inc
mov
mov
iret
stos
xchg
add
outsl
inc
hlt
cmpsl
mov
leave
xor
cmp
int
push
out
mov
je
jne
lret
push
les
fs
push
push
cmp
push
mov
xchg
movsb
stos
jecxz
in
mov
dec
xor
mov
arpl
fstps
and
int
js
lea
mov
repnz
jne
cli
push
adc
add
lret
add
cli
rcr
dec
cmp
mov
stos
gs
sahf
leave
and
in
push
mov
jnp
out
out
xchg
insb
into
cltd
or
in
stc
mov
sbb
mov
loope
add
lea
or
inc
repnz
lods
add
fs
arpl
dec
lahf
movsl
xor
push
cltd
inc
dec
or
push
jmp
popa
sub
ss
adc
test
sbb
int3
iret
inc
jge
or
sub
mov
cwtl
ss
in
rorl
mov
xor
xlat
repz
jno
xor
incb
cs
sub
int
sbb
push
insb
rclb
push
xor
cmpsl
subb
and
xchg
pop
xor
mov
cmp
repnz
ljmp
sahf
mul
rclb
into
mov
stos
add
sbb
lock
mov
vcvtps2dq
inc
push
inc
jne
stos
cmp
insb
fcomip
das
pop
jb
loope
mov
xchg
pop
inc
out
push
shll
pop
lods
inc
dec
imul
insl
mov
fs
mov
mov
out
and
in
pushf
and
es
imul
popf
jp
xor
xor
repz
aad
or
dec
dec
pop
mov
xlat
xchg
in
int3
repz
adc
pop
int3
dec
lods
in
dec
je
jo
xchg
out
pop
pusha
sub
enter
aam
cmp
xchg
cld
sub
jne
ds
sbb
int
sti
negl
jae
push
or
adc
cmpsl
idivb
mov
adc
mov
xor
push
sub
mov
xchg
iret
mov
mov
gs
pop
andps
sqrtps
pop
shlb
int
je
in
push
bound
lret
mov
pop
imul
or
js
repnz
pop
daa
pop
test
aad
or
sbb
mov
mov
test
into
mov
clc
subl
xchg
push
cmp
fsts
sarl
je
push
xor
xchg
push
cld
push
jns
insb
xor
jnp
jmp
add
ja
fnstsw
cmp
loop
sub
nop
fcmovnbe
out
cld
mov
xchg
lret
fldenv
mov
and
xor
ljmp
xor
dec
mov
inc
or
adc
movsb
push
ds
std
and
mov
out
hlt
push
jg
or
fwait
jno
pop
fs
sbb
xor
jp
iret
dec
inc
icebp
rolb
xchg
sbb
sub
xchg
sbb
jp
lea
and
xor
adc
sahf
popf
dec
scas
xchg
jecxz
bound
lods
mov
imul
and
das
dec
mov
jnp
popw
andl
add
lea
andl
rcl
xlat
jg
mov
add
fwait
scas
insl
rclb
mov
mov
push
lods
lahf
xchg
lods
push
xor
std
xchg
inc
pop
jl
push
jecxz
lods
mov
pusha
dec
stc
or
ja
std
repz
popf
adc
sub
popa
repz
sbb
and
cmp
jno
mov
into
mov
inc
pop
push
lret
aaa
fisubl
mov
push
aam
leavew
sbb
into
push
adc
mov
leave
jnp
fstp
sti
push
rolb
add
sub
popl
xchg
sahf
ljmp
mov
jp
out
sbb
xchg
sbb
imul
mov
lret
mov
push
push
out
cmp
cltd
stos
xchg
pushf
sbb
xchg
fs
xchg
fwait
call
and
mov
clc
sub
imul
fcmovb
dec
mov
ret
jge
in
jne
mov
jp
push
cmpsb
or
adc
inc
gs
negb
sub
stos
add
andb
test
sahf
je
cmp
jmp
enter
xchg
pop
loopne
sub
jb
shrb
and
and
in
or
je
pop
fucomip
hlt
ljmp
jne
stos
mov
mov
or
fpatan
xor
std
fildl
adc
shll
sti
icebp
fistps
daa
scas
jg
test
mov
ret
jns
in
cmp
cmpsl
out
cmp
cmp
lods
imul
sti
in
lret
ds
sbb
xchg
mov
xchg
push
mov
stc
loope
mov
cmp
sbb
and
data16
mov
xor
test
into
inc
fwait
xor
or
cmp
and
outsl
lds
add
xchg
loope
sbb
addr16
lods
mov
add
jns
xlat
scas
mov
push
hlt
inc
mov
and
es
outsl
sbb
stos
xchg
mov
dec
add
add
lahf
stc
cwtl
sub
mov
mov
je
les
xor
mov
in
adc
std
or
addl
iret
mov
std
mov
test
test
jne
sbb
ja
movsb
aas
mov
sub
testb
nop
ss
insl
and
mov
das
popf
shlb
mov
sub
int
cmpsb
mov
je
jmp
xor
push
lahf
hlt
popa
sub
fwait
cltd
mov
std
loopne
ficompl
adc
lret
pop
call
lea
cmp
in
cltd
shl
scas
dec
inc
ja,pn
adc
sub
push
jno
ret
jb
out
and
stos
mov
xlat
cltd
pop
lock
add
jo
mov
sub
cmpsb
jae
cmpsl
cmp
rclb
xchg
mov
or
hlt
popf
sub
and
cmpsl
or
add
jp
dec
lea
dec
push
dec
mov
nop
test
ljmp
pop
add
out
out
push
int3
fsubs
adc
xchg
adc
icebp
add
sbb
ds
mov
inc
sbb
jae
jns
sub
push
jae
and
arpl
imul
or
ja
in
arpl
pop
imulb
add
mov
shll
icebp
leave
cli
mov
ds
std
push
pushl
cs
push
xor
lahf
mov
roll
subl
xor
cli
mov
dec
push
mov
cmpsb
sbb
movsb
insb
sub
sarb
cmp
into
inc
outsl
mov
add
jg
push
out
jo
xor
push
jo
and
xor
and
andb
dec
adc
add
lods
sbb
dec
lock
push
or
movsl
pusha
repz
or
mov
in
loope
push
lret
insb
mov
add
adc
repz
into
sub
jmp
pop
add
test
daa
add
jne
jg
push
sbb
bound
pop
in
mov
incb
fbstp
jb
xchg
lret
add
or
sub
push
mov
out
popa
jae
and
sub
outsb
int3
gs
mov
dec
sub
push
inc
mov
imul
cwtl
cmp
xor
notb
pop
das
int3
outsb
pop
jae
mov
loope
sbb
lds
loope
lret
daa
popa
inc
notl
add
mov
push
sahf
jns
std
imul
movsb
dec
out
pop
adc
cmp
test
xchg
push
filds
rclb
testl
aaa
xchg
sbb
repz
repz
sub
pop
out
pusha
pop
jmpw
and
mov
xchg
ret
cmp
adc
mov
mov
push
loop
call
dec
rol
int3
rsqrtps
mov
xchg
sbb
in
push
push
pop
fwait
push
cwtl
xchg
push
dec
icebp
xor
inc
icebp
mov
and
dec
shl
push
jmp
push
divl
out
in
adc
push
scas
out
or
cmp
inc
xor
pusha
inc
call
sahf
jnp
pop
pop
cmpsb
sarb
outsb
fsubrs
movsb
ljmp
je
leave
shlb
test
or
insl
push
sub
cltd
femms
cli
sbb
scas
dec
mov
push
das
rcr
push
mov
cmpb
std
push
ja
loopne
sub
ds
mov
dec
pop
sbb
pop
inc
gs
rolb
jp
jb
into
mov
sub
es
sub
test
cmp
pusha
out
inc
xor
jmp
fldenv
daa
scas
mov
xor
mov
imul
rolb
enter
sub
sbb
arpl
pop
in
mov
jp
insl
call
sbb
sbb
jnp
adc
popa
dec
mov
xchg
sti
dec
jle
mov
sti
pop
inc
pop
adc
pop
inc
and
mov
xor
insb
inc
or
mov
iret
inc
arpl
and
inc
jle
mov
pop
mov
fldenv
jge
sbb
mov
fistpll
mov
ljmp
gs
pop
mov
lret
mov
mov
lret
nop
lahf
ret
inc
sub
fwait
jl
call
jle
and
xlat
insl
push
inc
iret
dec
jbe
xor
mov
lods
ljmp
push
push
shlb
sub
mov
negl
nop
cmp
rcrb
jbe
fwait
scas
mov
sub
pop
jp
inc
pop
add
xchg
push
or
cli
adc
bound
test
icebp
mov
and
push
leave
pop
ss
iret
jl
int3
adc
arpl
imul
mov
pop
loope
push
enter
ljmp
gs
xor
mov
movswl
lds
xor
cmp
fdivrp
dec
popa
rcl
push
cmc
je
push
js
stos
arpl
bound
movsl
xorb
leave
and
cmp
insl
lods
jmp
and
dec
sub
push
aas
push
jae
movsl
popa
out
push
sahf
add
inc
aas
jbe
cmpsl
fildl
aam
cmp
jns
sbb
inc
loop
movsl
ds
aas
rolb
movsl
pop
xchg
fidivl
push
test
sar
out
mov
jae
push
in
or
inc
int3
aaa
fadds
cmpsb
mov
repz
das
sbb
xchg
into
inc
push
xlat
bound
outsl
outsl
pop
fsubrl
int
jno
inc
xchg
icebp
ret
cmc
push
test
aas
ss
fistpl
inc
cmp
push
sbb
stos
test
lret
cmpsl
adc
stos
lret
inc
in
push
jecxz
lods
xchg
fcomi
sub
add
leave
sub
adc
addr16
aas
adc
dec
dec
mov
adc
lea
xchg
push
jbe
mulb
mov
inc
pop
lds
push
or
mov
test
adc
mov
stos
sbb
or
shl
cld
mov
cmc
aas
arpl
jg
add
ljmp
scas
data16
lods
fldcw
jae
jae
add
or
inc
dec
das
ds
jecxz
loopne
cmc
mov
cmp
fbld
sti
mov
sbb
mov
sub
fmull
stos
cmp
pop
or
mov
pop
lods
outsl
inc
push
pop
outsl
mov
cmpsl
imul
jl
jns
scas
cld
stos
lcall
mov
mov
arpl
data16
arpl
mov
out
dec
js
fwait
push
scas
mov
push
xchg
push
outsl
dec
hlt
lds
pop
add
fidivrl
nop
inc
popf
pop
sbb
push
sbb
frstor
outsb
test
jmp
sbb
enter
xchg
fstps
pop
mov
push
sub
xchg
cmp
rolb
cmp
push
jl
cltd
push
and
dec
sti
inc
mov
pop
dec
shlb
mov
mov
fiadds
into
jne
insb
div
mov
in
sarb
fwait
mov
repz
mov
jge
fildl
or
std
insl
jge
sbb
test
ss
fidivrl
adc
xchg
or
jb
shll
push
fistpl
ror
jp
dec
decb
sti
fsubl
inc
sbb
jl
outsl
movsl
lods
cli
popl
dec
cmp
std
and
cwtl
gs
fnstenv
mov
push
imul
in
incb
add
mov
les
sub
mov
mov
xor
add
loopne
xor
shll
xchg
and
stc
in
dec
push
lret
out
iret
cmpsl
out
xor
movl
lret
xchg
test
jmp
add
adc
sldt
add
loope
loope
loope
add
inc
loope
add
add
add
add
loope
loope
loope
add
loope
loope
loope
add
loope
add
call
adc
add
inc
loope
loope
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
