push
mov
sub
movl
cmpl
je
movl
mov
cmp
jl
movl
lea
mov
mov
mov
add
add
mov
movl
mov
and
mov
and
imul
mov
sub
mov
cmpl
jne
mov
imul
add
mov
call
mov
or
imul
mov
sub
mov
call
push
call
movl
movl
mov
and
mov
sub
imul
mov
lea
mov
mov
or
mov
mov
and
add
mov
sub
mov
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
or
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
push
call
lea
mov
mov
and
mov
add
cltd
idiv
mov
sub
mov
jmp
jmp
mov
pop
ret
push
mov
sub
movl
movl
lea
mov
mov
mov
and
sub
mov
cmpl
jg
movl
mov
push
mov
push
mov
push
call
add
lea
mov
mov
and
mov
imul
imul
mov
mov
add
add
mov
mov
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
mov
or
add
add
mov
movl
mov
cmp
jne
cmpl
jg
push
call
jmp
push
call
jmp
push
push
push
push
call
lea
push
call
cmpl
jl
push
call
jmp
movl
lea
mov
lea
mov
mov
mov
or
mov
imul
imul
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
mov
and
sub
mov
sub
mov
lea
mov
mov
and
mov
sub
imul
mov
movl
jmp
mov
add
mov
mov
cltd
and
add
sar
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
mov
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
movl
movl
mov
sub
imul
mov
cmpl
jg
mov
push
call
add
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
sub
mov
sub
mov
movl
mov
sub
mov
sub
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
lea
push
call
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
mov
and
mov
sub
mov
call
mov
or
sub
mov
sub
mov
cmpl
jg
movl
lea
mov
mov
mov
imul
add
mov
cmpl
jg
movl
lea
mov
mov
mov
imul
mov
sub
mov
call
call
jmp
mov
and
mov
sub
mov
sub
mov
call
jmp
mov
add
imul
mov
lea
push
call
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
movl
mov
cmp
jne
cmpl
jne
push
call
movl
movl
mov
and
imul
mov
jmp
movl
movl
lea
mov
mov
mov
or
add
add
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
cmp
jg
movl
lea
mov
mov
add
mov
cltd
idiv
imul
mov
jmp
mov
and
mov
add
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
movl
movl
mov
or
mov
sub
add
mov
mov
cmp
jg
mov
add
mov
cltd
idiv
mov
sub
mov
call
push
push
push
push
call
jmp
movl
movl
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
lea
mov
mov
and
mov
imul
imul
mov
mov
imul
imul
mov
cmpl
jl
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
sub
add
mov
jmp
jmp
lea
mov
lea
mov
mov
mov
mov
imul
mov
lea
mov
mov
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
push
push
call
add
mov
cmpl
jne
jmp
movl
movl
mov
add
mov
sub
mov
call
push
push
mov
push
call
add
movl
mov
cmp
je
movl
cmpl
je
lea
mov
mov
mov
imul
mov
sub
mov
movl
mov
imul
mov
movl
mov
cmp
jl
movl
lea
mov
mov
mov
and
imul
imul
mov
movl
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
cltd
idiv
mov
mov
and
imul
imul
mov
call
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
or
mov
mov
or
imul
mov
mov
and
sub
imul
mov
push
push
push
call
jmp
push
push
push
push
call
movl
mov
or
mov
sub
mov
movl
mov
and
imul
imul
mov
mov
push
push
mov
push
call
add
movl
mov
push
call
add
call
movl
lea
mov
lea
mov
mov
mov
mov
add
add
mov
push
push
call
add
mov
cmpl
jne
jmp
push
push
mov
push
call
add
movl
cmpl
jl
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
cltd
idiv
imul
mov
jmp
jmp
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
mov
push
call
add
movl
movl
lea
mov
lea
mov
mov
mov
and
mov
imul
mov
movl
mov
sub
add
mov
jmp
jmp
lea
mov
mov
mov
add
mov
push
push
mov
push
call
add
movl
mov
push
call
mov
movl
cmpl
jne
movl
lea
mov
mov
mov
and
imul
mov
sub
mov
call
movl
mov
sub
add
mov
jmp
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
imul
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
call
mov
cmpl
jne
jmp
movl
movl
movl
mov
add
add
mov
mov
push
mov
push
call
mov
cmpl
jne
jmp
movl
movl
lea
mov
mov
mov
add
mov
sub
mov
mov
add
mov
cltd
idiv
mov
sub
mov
mov
mov
mov
push
mov
push
mov
push
push
call
push
mov
push
mov
push
call
add
xor
jne
movl
lea
mov
lea
mov
mov
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
and
mov
add
cltd
idiv
imul
mov
push
push
push
call
cmp
jne
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
mov
lea
mov
mov
mov
sub
add
mov
jmp
movl
cmpl
jne
movl
lea
mov
mov
or
mov
mov
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
imul
mov
jmp
mov
push
mov
push
mov
push
call
add
call
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
push
push
push
call
movl
mov
and
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
imul
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
add
mov
cltd
idiv
add
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
lea
mov
mov
add
mov
cltd
idiv
mov
cmpl
jg
movl
jmp
mov
add
mov
cmpl
jge
push
call
movl
movl
mov
and
mov
sub
add
mov
jmp
movl
movl
mov
and
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
movl
movl
movl
mov
and
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
imul
mov
lea
mov
mov
mov
sub
mov
sub
mov
call
jmp
movl
mov
add
mov
cltd
idiv
mov
call
movl
lea
mov
mov
mov
and
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
call
movl
mov
and
add
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shlb
in
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
and
inc
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
and
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
es
add
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
es
add
es
add
es
add
inc
add
inc
add
inc
add
daa
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
daa
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
xor
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
pushl
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
call
mov
pushl
pushl
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
addl
inc
inc
cmp
jl
xor
mov
lea
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
leave
ret
push
push
push
mov
mov
test
je
mov
add
cmp
jae
lea
cmpl
je
push
call
mov
add
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
pop
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
push
mov
pop
pop
ret
xor
pop
ret
call
mov
cmp
je
push
call
orl
ret
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
mov
cmp
je
push
mov
test
jne
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
push
pushl
call
pop
ret
jmp
jmp
push
mov
push
andl
call
cmpw
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
movl
call
test
je
cmpl
jne
cmpl
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmpb
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmpb
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
pushl
call
xor
ret
push
pop
ret
mov
push
cmp
push
jne
push
xor
cmp
push
mov
jle
mov
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pushl
push
pushl
call
pop
pop
jmp
cmp
jne
mov
mov
mov
test
je
push
push
push
call
mov
cmp
jne
pushl
call
pop
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
push
mov
pushl
call
pushl
call
pushl
call
pushl
call
pop
ret
push
push
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
pushl
call
pop
add
cmp
jl
pushl
call
pushl
call
pushl
call
pushl
call
pop
pop
ret
push
mov
mov
push
cmpl
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmpl
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
pushl
call
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
push
pop
ret
xor
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
pushl
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
push
pop
cmp
jne
push
andl
pop
xor
mov
cmp
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
andl
push
pop
xor
mov
lea
rep
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
push
call
pop
mov
mov
jmp
andl
xor
mov
stos
stos
stos
jmp
cmpl
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
test
je
mov
cmp
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jmp
push
call
pop
ret
cmp
jne
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
test
je
push
pushl
pushl
call
add
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
je
jmp
push
call
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
mov
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
mov
test
jne
push
jmp
mov
push
call
pop
ret
mov
test
jne
push
pop
add
and
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
imul
mov
mov
cmp
ja
xor
cmp
jne
push
pop
add
and
mov
jmp
xor
mov
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
orl
call
cmp
je
pushl
jmp
xor
mov
push
call
pop
ret
cmp
jne
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
cmp
je
push
push
pushl
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
push
call
pop
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
andl
push
push
mov
mov
lea
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
orl
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
divl
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
sub
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
push
call
pop
mov
sub
cmp
jae
mov
orl
cmp
jb
jne
or
xor
divl
cmp
jbe
orl
jmp
imul
add
mov
mov
incl
mov
jmp
mov
decl
mov
test
jne
test
je
mov
mov
andl
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
testb
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
mov
cmp
jne
mov
ret
dec
dec
neg
sbb
not
and
ret
push
mov
mov
push
cmp
jne
mov
cmp
ja
mov
jmp
cmp
jne
mov
add
and
cmp
ja
mov
jmp
cmp
jne
mov
test
jbe
lea
push
call
cmpb
pop
jb
cmp
ja
push
call
test
pop
je
mov
movl
jmp
add
and
cmp
ja
call
test
je
mov
movl
push
pop
jmp
xor
pop
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
push
mov
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
decb
jne
mov
and
jmp
lea
mov
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
ret
mov
add
and
cmp
ja
push
mov
pop
ret
xor
ret
cmpl
push
push
push
push
jne
mov
jmp
push
push
pushl
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmpl
jne
mov
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
orb
lea
mov
movl
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
pushl
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
pushl
call
pop
ret
orl
pop
ret
push
mov
push
push
push
mov
push
cmpl
je
andl
lea
mov
cmpl
jne
mov
push
add
push
push
call
test
je
orl
decl
mov
test
je
cmp
jbe
mov
incl
decl
je
sub
sub
test
jge
cmpl
mov
mov
je
cmpl
jne
push
lea
pop
cmpl
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmpl
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzbl
add
andb
cmpl
movl
jne
incl
cmpl
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
pushl
call
add
test
jne
mov
addl
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmpl
je
cmpl
jne
mov
cmp
je
jmp
mov
andl
mov
mov
sub
sub
sar
shl
add
cmpl
jne
cmpl
jge
add
incl
cmpl
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
pushl
push
call
mov
add
test
mov
jle
lea
mov
orb
lea
mov
mov
mov
mov
movl
add
add
decl
jne
mov
lea
cmp
jae
cmpl
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzbl
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
andl
lea
mov
lea
jmp
add
cmpb
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzbl
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzbl
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
movzbl
push
mov
andl
mov
sub
sar
cmp
lea
jbe
mov
sub
mov
add
movl
jmp
jae
mov
lea
lea
cmp
jb
lea
cmp
jae
cmpb
jne
inc
jmp
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
lea
cmp
jae
xor
mov
cmp
jne
inc
cmpb
je
mov
jmp
andl
lea
mov
sub
add
movl
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
mov
push
push
mov
cmp
jne
incl
mov
cmp
je
andl
andl
mov
lea
mov
lea
cmpl
jne
cmpl
jne
cmp
jne
incl
jmp
mov
lea
cmp
jae
cmpb
jne
xor
and
and
and
lea
cmp
jne
incl
mov
cmpb
jne
incl
incl
inc
jmp
mov
cmp
jge
cmpl
jne
mov
cmp
jl
mov
movl
andl
lea
movzbl
add
cmp
jge
cmpb
jne
movzbl
inc
jmp
mov
mov
cmp
jl
mov
cmp
jne
cmpl
je
incl
mov
add
add
add
cmpl
mov
jl
mov
cmp
mov
je
jmp
or
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
neg
sbb
and
add
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
push
call
mov
mov
push
mov
call
pop
mov
pop
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
call
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
pop
mov
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
call
add
ret
call
add
ret
mov
add
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
leave
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
imul
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
inc
add
add
add
add
add
add
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
inc
add
imul
imul
imul
imul
imul
insb
inc
add
insb
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
cmp
dec
insb
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
jl
cmp
jg
push
call
incl
pop
cmp
je
push
call
jmp
cmp
push
je
cmp
je
pushl
push
call
pop
pop
jmp
lea
mov
jmp
mov
movl
cmp
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
push
push
call
mov
pop
cmp
pop
je
jmp
xor
mov
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
pop
test
pop
jne
cmpb
jne
cmpl
jg
push
lea
push
push
call
andb
lea
push
pushl
call
add
test
je
incl
add
cmpb
je
inc
cmpb
je
push
push
call
mov
pop
test
pop
jne
xor
push
call
pop
xor
jmp
cmpl
jne
xor
jmp
push
push
lea
push
push
push
call
mov
add
cmp
je
mov
mov
cmp
je
pushl
lea
push
call
pop
test
pop
je
lea
push
push
call
pop
test
pop
jne
and
jmp
incl
add
inc
cmp
jle
xor
cmp
je
call
pushl
mov
call
pop
mov
jmp
cmp
jmp
call
mov
push
call
pop
decl
mov
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
push
lea
push
lea
push
pushl
call
add
test
je
lea
push
call
inc
push
call
pop
mov
test
pop
je
lea
lea
shl
push
mov
mov
mov
mov
lea
lea
mov
push
lea
push
call
mov
mov
lea
push
pushl
call
mov
push
movzwl
mov
lea
push
pushl
call
mov
add
cmp
jne
mov
cmp
jne
mov
call
test
je
mov
pushl
mov
call
mov
pop
mov
mov
mov
xor
jmp
cmpl
je
pushl
call
pop
mov
pop
pop
pop
leave
ret
mov
push
push
push
push
push
test
pop
jne
push
call
pop
mov
andb
pushl
mov
push
pushl
push
pushl
call
mov
add
mov
push
pushl
call
pushl
add
pushl
call
add
test
je
xor
pushl
mov
push
pushl
push
pushl
call
add
cmp
jl
pop
pop
test
pop
pop
jne
mov
ret
pushl
call
andl
mov
pop
ret
push
mov
sub
push
push
mov
xor
cmp
push
je
cmpb
jne
cmp
jne
mov
mov
and
cmp
movb
je
mov
mov
mov
mov
cmp
je
mov
jmp
mov
push
push
call
pop
test
pop
je
mov
push
push
call
pop
test
pop
je
lea
push
push
call
pop
test
pop
jne
lea
push
lea
push
push
call
add
test
jne
xor
jmp
movzwl
mov
lea
push
push
call
cmpb
pop
pop
je
push
jmp
push
push
call
pop
pop
cmpl
je
push
push
pushl
call
add
cmpl
je
push
push
pushl
call
add
push
pushl
call
pop
mov
pop
pop
pop
pop
leave
ret
xor
ret
push
mov
test
jle
push
lea
pushl
add
pushl
call
pop
dec
pop
jne
pop
pop
ret
push
mov
push
push
push
mov
push
push
push
call
mov
add
mov
test
je
cmp
jne
cmpb
lea
je
add
push
push
call
pop
pop
xor
jmp
andl
push
push
call
pop
test
pop
je
cmpl
mov
lea
jne
cmp
jge
cmp
je
push
push
pushl
jmp
cmpl
jne
cmp
jge
cmp
je
push
mov
push
add
jmp
cmpl
jne
test
je
cmp
jne
push
mov
push
add
push
call
add
cmp
je
test
je
incl
lea
jmp
or
pop
pop
pop
pop
ret
push
mov
push
pushl
call
cmpb
lea
pop
pop
je
push
push
push
pushl
call
add
cmpb
lea
pop
je
push
push
push
pushl
call
add
ret
cmpl
push
je
push
push
call
mov
pop
test
pop
jne
push
pop
pop
ret
push
call
test
pop
je
push
call
push
call
pop
pop
jmp
pushl
mov
call
pushl
call
pop
mov
pop
jmp
pushl
movl
call
pushl
call
andl
pop
pop
xor
pop
ret
push
mov
push
push
movzwl
movzwl
push
mov
test
mov
mov
jne
or
jmp
push
lea
push
push
push
push
push
pop
push
call
mov
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
push
push
pushl
or
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
push
push
pushl
push
call
add
or
pop
pop
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
xor
cmp
push
push
movzwl
je
push
push
push
push
push
pop
push
call
push
push
push
push
mov
call
push
push
push
push
or
call
pushl
or
call
add
cmp
pop
je
pushl
call
pushl
call
pushl
call
add
mov
mov
mov
or
jmp
mov
mov
cmp
je
push
call
mov
pushl
call
mov
pushl
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pushl
call
pushl
call
pushl
call
push
mov
mov
mov
call
mov
add
mov
mov
mov
cmp
je
push
push
call
push
call
mov
add
mov
mov
mov
cmp
je
push
mov
call
pop
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
movl
mov
xor
pop
pop
pop
ret
mov
mov
test
je
push
cmp
jl
cmp
jg
sub
mov
inc
mov
test
jne
pop
ret
cmp
jne
mov
mov
lea
mov
mov
cmpb
jne
jmp
cmpl
push
je
push
push
call
mov
pop
test
pop
jne
push
pop
pop
ret
push
call
test
pop
je
push
call
push
call
pop
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
call
pushl
call
pop
mov
pop
jmp
mov
pushl
mov
mov
mov
mov
mov
mov
movl
call
pushl
call
andl
pop
pop
xor
pop
ret
push
mov
push
movzwl
test
jne
or
jmp
lea
push
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
pushl
or
call
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
push
push
push
push
call
add
or
pop
pop
pop
ret
mov
mov
test
je
push
cmp
jl
cmp
jg
sub
mov
inc
mov
test
jne
pop
ret
cmp
jne
mov
mov
lea
mov
mov
cmpb
jne
jmp
push
mov
test
je
mov
cmp
je
push
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
sub
push
xor
cmp
mov
mov
je
cmp
push
push
jne
movzwl
push
push
push
push
call
add
test
jne
mov
push
call
mov
push
mov
call
push
mov
call
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
cmp
jg
mov
mov
inc
movzbl
jmp
inc
inc
cmp
jne
push
lea
push
push
push
push
pushl
push
call
add
test
je
mov
mov
xor
mov
inc
inc
inc
cmp
jl
mov
push
push
lea
push
push
pushl
push
call
add
test
je
mov
mov
cmpl
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
cmp
jg
mov
lea
movw
inc
movzbl
inc
inc
cmp
jle
inc
inc
cmp
jne
mov
mov
add
mov
mov
cmp
je
push
call
pop
mov
mov
mov
cmp
je
push
call
pop
mov
mov
pushl
call
pushl
call
pop
mov
pop
pop
pop
jmp
pushl
call
pushl
call
pop
pop
push
pop
jmp
pushl
mov
mov
mov
call
pushl
call
pop
mov
pop
mov
xor
pop
leave
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
push
xor
cmp
push
push
jne
call
test
je
mov
mov
jmp
movl
mov
cmp
je
mov
cmp
je
push
push
push
call
add
lea
cmp
mov
je
cmp
je
push
push
push
call
mov
add
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
call
jmp
call
jmp
cmp
je
cmp
je
call
jmp
call
cmp
je
add
push
call
mov
pop
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
cmp
je
push
push
push
pushl
call
test
je
lea
push
push
push
pushl
call
test
je
add
push
push
push
call
add
push
pop
jmp
xor
pop
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
pop
jl
test
je
mov
add
cltd
sub
mov
mov
sar
pushl
lea
mov
pushl
call
pop
test
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
pop
pop
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
pop
neg
sbb
andl
inc
cmpl
pop
mov
je
movl
jmp
pushl
call
pop
mov
push
push
call
mov
test
je
test
je
test
jne
andl
ret
push
mov
sub
push
push
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
mov
test
pop
mov
jne
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
test
pop
jne
orw
mov
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
jmp
testb
jne
push
call
test
pop
je
orl
mov
mov
mov
and
cmp
je
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
orb
xor
cmp
jne
cmp
je
pushl
call
cmp
pop
jne
push
jmp
xor
cmp
jne
mov
cmp
je
push
lea
push
pushl
call
add
test
jne
push
push
call
pop
test
pop
je
orb
cmp
jne
mov
mov
not
shr
and
pop
pop
pop
leave
ret
pushl
call
sub
pop
neg
sbb
inc
mov
je
movl
jmp
pushl
call
pop
mov
push
push
call
testb
jne
andl
ret
push
mov
sub
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
cmp
jne
push
jmp
cmpl
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
push
push
call
pop
test
pop
je
orl
mov
mov
mov
not
shr
and
pop
leave
ret
pushl
call
sub
pop
neg
sbb
push
inc
push
mov
call
testb
jne
andl
ret
push
mov
sub
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
not
shr
and
pop
leave
ret
orw
call
mov
mov
ret
push
mov
push
push
push
mov
test
je
cmpb
je
push
push
call
pop
test
pop
je
push
push
call
pop
test
pop
jne
lea
push
push
push
jmp
lea
push
push
push
pushl
call
test
je
lea
push
call
pop
pop
leave
ret
mov
mov
cmp
je
inc
inc
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
lea
push
push
mov
and
push
or
push
call
test
je
lea
push
call
cmp
pop
je
cmpl
je
push
pushl
call
pushl
mov
call
pop
cmp
pop
pop
jne
xor
leave
ret
push
pop
leave
ret
push
mov
sub
lea
movl
push
call
test
je
cmpl
jne
push
pop
leave
ret
xor
leave
ret
push
mov
push
push
push
push
xor
pop
lea
mov
cltd
sub
sar
mov
imul
mov
cmp
je
cmp
jae
lea
jmp
lea
cmp
jle
push
pushl
pushl
pushl
call
pop
pop
pop
pop
ret
mov
dec
je
dec
dec
je
sub
je
sub
je
sub
je
dec
je
dec
dec
jne
imul
add
jmp
imul
mov
jmp
imul
mov
jmp
imul
add
jmp
imul
add
jmp
imul
add
jmp
imul
add
test
je
cmp
jl
mov
lea
push
push
push
call
add
andb
push
pop
jmp
mov
xor
mov
inc
test
je
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
jg
add
add
movsbl
shl
add
jmp
ret
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jg
inc
jmp
ret
push
mov
push
push
push
push
mov
push
mov
xor
movl
pushl
call
pushl
mov
call
add
pop
add
decl
pop
lea
jne
inc
push
call
mov
pop
test
mov
je
mov
push
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
andb
mov
pop
pop
pop
leave
ret
push
mov
push
push
andl
push
push
push
mov
movl
lea
pushl
call
pushl
mov
call
add
pop
add
decl
pop
lea
mov
jne
inc
push
call
mov
pop
test
mov
je
push
add
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
andb
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
mov
movl
mov
pushl
call
pushl
mov
mov
call
addl
pop
pop
add
mov
decl
lea
jne
lea
movl
mov
mov
pushl
call
pushl
mov
mov
call
addl
pop
pop
add
mov
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
add
push
call
mov
add
test
je
push
lea
pushl
push
call
lea
mov
add
sub
mov
mov
movl
mov
mov
mov
pushl
push
call
push
call
mov
lea
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
lea
movl
mov
lea
mov
jmp
mov
mov
mov
pushl
push
call
push
call
lea
mov
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
add
mov
pop
mov
pop
pop
leave
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
mov
push
push
push
mov
mov
push
call
mov
xor
cmp
je
push
call
push
call
pop
movl
jmp
mov
mov
cmp
jne
mov
cmp
mov
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
andl
inc
cmpb
jne
movl
inc
pushl
lea
push
lea
push
mov
pushl
push
call
add
inc
cmpl
ja
cmpl
je
push
call
pop
jmp
push
call
cmpl
pop
pop
pop
jbe
mov
andb
mov
sub
leave
ret
xor
leave
ret
push
mov
movsbl
push
push
cmp
push
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
push
mov
mov
pop
mov
cltd
idiv
test
jne
push
pop
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
mov
movb
incl
mov
decl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
pushl
mov
mov
pushl
mov
push
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
add
idiv
imul
add
push
call
add
jmp
mov
andl
push
pushl
pushl
pushl
pushl
jmp
mov
mov
mov
mov
test
jne
push
pop
jmp
lea
jmp
mov
mov
mov
mov
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
idiv
cmp
jl
inc
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
pushl
mov
mov
pushl
mov
push
inc
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmpl
je
mov
mov
mov
andl
push
push
push
pushl
pushl
jmp
mov
mov
mov
push
push
push
pushl
pushl
call
add
cmpl
je
mov
push
push
push
pushl
movb
incl
decl
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
mov
pushl
xor
cmp
pushl
setne
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
push
cltd
pop
idiv
jmp
cmpl
je
mov
andl
push
pushl
pushl
pushl
pushl
call
add
jmp
mov
push
pushl
pushl
pushl
pushl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
mov
pushl
cmpl
pushl
mov
jg
pushl
jmp
pushl
call
add
pop
pop
pop
pop
ret
mov
push
push
cmpl
je
mov
mov
mov
test
je
mov
mov
incl
inc
decl
jne
pop
pop
ret
push
mov
push
xor
push
cmp
mov
je
pushl
pushl
pushl
call
add
jmp
mov
mov
cmp
jae
dec
push
mov
lea
test
je
push
mov
push
cltd
pop
idiv
mov
add
mov
mov
cltd
idiv
incl
dec
cmp
mov
jne
pop
mov
add
sub
pop
jmp
mov
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
cmpl
jbe
mov
push
cltd
pop
idiv
mov
add
mov
inc
cltd
idiv
decl
test
mov
jg
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
push
cmpb
je
mov
mov
xor
cmp
je
mov
mov
mov
lea
mov
mov
mov
mov
inc
incl
mov
cmp
je
decl
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
movzbl
testb
je
mov
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
cmpb
jne
pop
pop
pop
leave
ret
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
test
pop
jne
add
jmp
push
push
call
pop
test
pop
jne
add
mov
movb
jmp
test
je
add
mov
test
je
cmpl
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
inc
jmp
add
jmp
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
mov
jg
mov
jmp
mov
test
jle
cmpl
jbe
mov
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
decl
cmpl
jg
mov
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
pushl
push
push
pushl
pushl
call
add
jmp
push
mov
sub
cmpl
push
push
push
jne
xor
lea
push
push
push
lea
pushl
mov
pushl
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
call
mov
add
cmp
je
push
call
mov
pop
cmp
je
push
push
push
movl
pushl
pushl
call
mov
add
cmp
je
push
call
pop
cmp
mov
mov
jne
cmp
je
push
call
pop
or
pop
pop
pop
leave
ret
push
push
push
call
add
cmp
je
push
call
pop
jmp
cmpl
jne
push
mov
push
push
pushl
pushl
call
add
test
je
mov
andb
cmpl
mov
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
mov
imul
add
sub
inc
inc
mov
cmp
jl
xor
jmp
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
push
push
pushl
pushl
pushl
push
pushl
call
test
je
movl
lea
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
mov
cmp
jne
mov
mov
lea
lea
orw
orw
push
pushl
pushl
pushl
push
call
mov
cmpw
je
cmpw
jne
push
push
pushl
call
add
mov
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jne
cmpl
jge
push
push
jmp
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
push
pop
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
push
pop
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
push
mov
cmpl
push
push
mov
push
je
mov
mov
movb
inc
neg
adc
neg
jmp
mov
mov
mov
xor
push
pushl
push
push
call
mov
xor
push
pushl
push
push
call
mov
mov
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
andb
dec
mov
mov
mov
mov
mov
dec
inc
cmp
mov
jb
pop
pop
pop
pop
ret
push
mov
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
lock
cmpl
jg
push
jmp
lock
push
call
movl
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmpl
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmpl
jg
push
jmp
lock
mov
push
call
movl
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
push
cltd
mov
push
push
mov
push
mov
call
mov
add
adc
mov
mov
movzbl
inc
jmp
cmpl
mov
jne
neg
mov
adc
neg
jmp
mov
pop
pop
pop
pop
pop
ret
cmpl
jne
push
call
cmpl
pop
jne
call
incl
push
call
pop
ret
push
call
call
push
call
pop
pop
ret
push
mov
push
push
push
push
push
push
pop
xor
push
mov
call
orl
orl
mov
movl
call
mov
pop
cmp
jne
push
call
movl
call
cmp
je
mov
mov
imul
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
movl
inc
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpl
je
neg
mov
movsbl
test
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
jmp
push
call
pop
pop
pop
pop
leave
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jg
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
push
push
push
push
call
test
je
push
jmp
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
je
mov
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
push
push
push
push
call
test
je
push
jmp
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
mov
add
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
add
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
push
mov
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
push
pop
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
push
pop
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
xor
push
call
pop
ret
cmp
jne
cmp
ja
cmp
jbe
add
and
jmp
push
pop
mov
mov
cmp
ja
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
mov
test
je
cmp
jae
mov
shr
push
push
pushl
pushl
call
add
test
je
mov
mov
jmp
push
call
pop
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
pushl
pushl
call
push
pushl
pushl
call
add
mov
cmpl
jne
push
push
pushl
call
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
pushl
call
add
jmp
push
push
push
pushl
call
mov
orl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
push
call
pop
xor
ret
xor
cmp
ja
cmp
jne
push
pop
add
and
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
pop
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
push
call
pop
xor
jmp
push
call
pop
lea
jmp
push
call
mov
pop
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
add
iret
add
mov
iret
add
fmulp
add
out
iret
add
dec
add
push
rolb
add
rolb
add
rolb
add
add
add
je
add
mov
add
pushf
rolb
add
aam
add
add
dec
aam
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
add
add
adc
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
rolb
add
add
pop
rolb
add
add
add
xchg
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
add
sub
add
roll
add
add
push
roll
add
add
add
add
mov
add
enter
loopne
add
call
roll
add
aam
add
add
xor
add
cwtl
aam
add
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
add
ljmp
inc
add
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
add
jb
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
incl
add
add
add
incl
add
add
inc
inc
add
incl
add
add
incl
add
add
inc
inc
add
incl
add
add
inc
inc
add
incl
add
add
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
dec
arpl
shlb
add
incl
fs
add
incl
inc
add
inc
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
cmp
add
cmp
add
add
sub
add
add
add
push
popa
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
jne
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
jne
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
insl
insl
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
call
xchg
inc
add
xchg
inc
add
pushl
inc
add
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
incl
inc
add
inc
add
add
add
lcall
inc
add
inc
add
add
add
jmp
stos
inc
add
stos
inc
add
call
stos
inc
add
incl
add
add
scas
inc
add
incl
add
add
mov
add
add
rolb
jo
add
mov
roll
or
add
iret
add
mov
iret
add
fmulp
add
out
iret
add
dec
add
push
rolb
add
rolb
add
rolb
add
add
add
je
add
mov
add
pushf
rolb
add
aam
add
add
dec
aam
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
add
add
adc
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
rolb
add
add
pop
rolb
add
add
add
xchg
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
add
sub
add
roll
add
add
push
roll
add
add
add
add
mov
add
enter
loopne
add
call
roll
add
aam
add
add
xor
add
cwtl
aam
add
add
add
add
add
add
mov
inc
gs
imul
je
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
inc
jb
popa
je
dec
jne
gs
add
xchg
add
je
gs
imul
xor
inc
jb
popa
je
inc
jbe
outsb
je
add
insb
add
je
je
dec
popa
outsb
fs
add
fiadds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
jae
bound
addr16
jb
jae
outsb
je
push
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sgdtl
je
jne
jb
outsb
je
push
add
filds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
dec
inc
dec
xor
cs
insb
add
insl
jae
cs
insb
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
imul
inc
js
je
jb
arpl
jae
iret
add
insl
imul
outsl
arpl
jae
add
inc
jne
jb
outsb
je
jb
arpl
jae
filds
push
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
lds
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
pop
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jne
jb
outsb
je
push
dec
add
xlat
add
push
gs
popa
insb
jne
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
dec
popa
jae
inc
jb
outsl
jb
add
add
inc
gs
popa
insb
jne
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
jb
jns
mov
jo
jb
popa
je
add
cmc
add
jb
jne
insb
inc
jb
add
jo
jb
add
pop
add
insb
push
outsb
ja
outsb
add
add
imul
leave
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
loop
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
insb
inc
jo
inc
js
je
add
add
je
push
dec
outsb
outsw
add
add
je
inc
push
add
dec
add
je
inc
dec
inc
push
add
mov
jo
insb
insb
outsl
arpl
roll
gs
jo
gs
insb
insb
outsl
arpl
xlat
add
inc
popa
fs
jb
je
push
je
add
add
fs
imul
add
push
add
insb
je
inc
jns
gs
outsl
push
imul
loopne
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
jo
inc
gs
je
imul
push
add
int3
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
gs
filds
dec
jae
popa
insb
imul
add
add
push
popa
insb
imul
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
mov
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
mov
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
lea
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
xor
dec
outsl
arpl
gs
outsb
outsw
push
add
and
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
out
inc
add
rolb
add
push
sbb
pop
subl
xorl
adcl
or
jge
mov
mov
inc
add
les
stos
push
add
stos
push
push
mov
mov
hlt
call
xor
test
push
add
push
jge
push
cmp
xlat
push
ret
cmp
aaa
rolb
xor
aaa
into
popa
sbb
addb
inc
addb
push
call
mov
lock
adc
mov
cmp
jne
cmp
add
push
push
adc
mov
lret
rorb
push
mov
fs
dec
mov
popf
push
inc
inc
xor
inc
xor
scas
cmp
dec
push
call
ret
out
dec
cmp
mov
add
push
sub
push
call
mov
xchg
data16
add
jno
jecxz
enter
mov
push
mov
push
mov
jge
mov
mov
add
ror
mov
xor
call
mov
clc
mov
add
mov
mov
shrl
cmp
cmp
cmp
mov
lcall
mov
xchg
push
fsts
jge
mov
lds
mov
push
leave
popl
adc
mov
sub
movsl
cmpl
pop
pop
pop
xor
push
clc
inc
scas
push
lods
clc
xor
jae
pop
or
push
push
pushl
cwtl
mov
add
xor
inc
jne
mov
pusha
test
sarb
aas
popa
jg
mov
test
add
or
movb
ret
adc
fwait
ret
fdivrs
jecxz
adc
mov
fwait
out
dec
call
xor
test
cmp
add
inc
lea
xchg
sub
or
rclb
pop
inc
add
movsl
mov
push
pushl
inc
add
sbb
xchg
iret
mov
lock
inc
lea
push
mov
or
xlat
pop
ret
mov
push
jge
inc
add
out
add
clc
ret
data16
add
or
pop
daa
push
cmp
mov
push
pop
inc
add
stos
jne
call
mov
add
xchg
mov
rcrb
shlb
call
out
xor
call
shrl
xchg
insb
lods
shl
scas
sbb
sbb
push
adcb
or
add
inc
cmp
clc
inc
ret
jns
mov
push
cmpsb
mov
jne
nop
jp
xchg
jne
pushf
enter
xchg
leave
pusha
xchg
ja
mov
pushl
ss
das
rorl
sbb
inc
add
xor
sub
and
push
daa
add
data16
cmp
inc
jb
pop
xor
push
ss
xor
je
push
xor
ss
xor
push
cmp
gs
dec
add
or
insb
fs
pop
cmp
push
inc
add
cmp
cmp
cmp
cmp
cmc
mov
int
mov
add
inc
outsl
push
pop
cmp
mov
aam
stos
icebp
leave
push
lods
outsb
std
push
in
repnz
fdivrp
jl
pop
ljmp
es
shrb
push
imul
ret
inc
movsb
imull
call
inc
pop
and
ficoms
sbb
mov
mov
into
cwtl
sbb
inc
aad
xlat
push
out
jnp
mov
fs
daa
xor
cmp
xchg
mov
or
pop
inc
sbb
insb
aam
and
xor
mov
lock
lods
and
sti
mov
popf
add
inc
mov
mov
jno
cmp
sub
cmp
ja
mov
adc
and
pop
out
enter
das
push
and
je
sbb
push
adc
mov
push
mov
add
or
shrl
rclb
xor
incl
xor
mov
lahf
pcmpgtb
or
jne
push
clc
mov
xchg
daa
enter
jmp
mov
mov
rorl
test
in
ret
mov
xor
xor
mov
cmp
adc
aaa
outsl
and
jbe
jnp
xchg
pop
xchg
push
aam
pop
bound
in
mov
dec
jae
stos
lds
jnp
sbb
sbb
mov
fisttps
sub
add
pop
mov
movsb
out
pop
jns
test
pop
cmpsb
mov
cld
mov
push
cltd
lret
int3
xchg
scas
enter
shll
fwait
pop
jmp
sahf
decl
adc
xor
mov
lret
cmc
mov
in
adc
push
jmp
xchg
fs
sahf
nop
ret
stc
lret
cmp
out
add
add
jb
and
lea
lcall
and
test
xchg
gs
andl
inc
xor
add
add
add
data16
or
ret
mov
xchg
movl
lret
or
or
dec
lcall
mov
inc
outsl
addr16
xor
and
pop
inc
pop
add
push
jle
push
pop
out
push
daa
pop
or
in
mov
enter
test
adc
lods
or
cmp
arpl
les
repz
pop
bound
arpl
jae
xor
mov
inc
mov
jl
mov
fcmove
jno
xor
dec
or
cmp
fildll
adc
and
or
mov
add
shl
rclb
mov
lret
andb
inc
out
xor
push
add
cmp
in
xlat
cs
sub
push
add
jae,pn
call
int3
dec
and
adc
imul
push
and
or
jb
addl
push
bndstx
outsb
sub
cwtl
mov
repz
mov
popa
iret
dec
gs
loop
and
mov
xchg
push
lods
mov
inc
pop
push
pop
cwtl
into
ret
pop
adc
xlat
lahf
sub
hlt
cmp
sub
jne
sbb
in
ds
mov
cmp
jne
jbe
jl
push
data16
cmp
pop
pop
outsb
mov
push
sbb
rorl
or
nop
and
fisubl
xor
out
frstor
xchg
adc
frstor
clc
negl
push
insb
or
rorl
or
mov
adc
adc
cs
mov
mov
and
punpcklbw
mov
call
lea
add
dec
pop
sub
mov
adc
fmull
pushf
jbe
dec
push
push
mov
and
pop
adc
lods
in
mov
cwtl
pop
es
lret
and
xchg
pop
stos
loop
addr16
arpl
mov
pop
sub
jbe
je
cmp
push
push
data16
mov
lahf
adc
dec
fistpl
inc
notl
mov
add
jge
mov
pop
push
mov
jns
xchg
mov
sarb
ret
and
mov
lods
jl
sub
js
scas
cmp
mov
rorb
and
cld
and
pop
adc
adc
dec
int
and
jmp
rorb
shrl
adc
bound
mov
lods
pushf
adc
inc
pop
pop
and
push
cmp
mov
jns
xchg
and
mov
adc
fs
je
es
mov
xchg
push
mov
mov
adc
adc
jne
push
xchg
in
cmp
xor
and
and
fdivrs
push
rol
sbb
fstps
adc
push
pop
sbb
sub
and
cli
add
scas
inc
sbb
mov
push
inc
and
jbe
push
out
dec
out
push
or
xchg
or
dec
pop
and
sbb
sbbb
push
and
enter
shll
loop
cmp
test
fstl
out
arpl
pusha
cmp
push
push
dec
dec
negb
pushf
shll
xor
sub
add
jp
orb
in
sub
cmp
sbb
enter
loopne
jns
adc
gs
and
mov
inc
daa
fbstp
push
insl
imul
inc
lret
jle
dec
pop
xchg
ss
mov
mov
addr16
cmp
add
sahf
dec
add
neg
outsb
and
nop
or
std
jp
mov
inc
out
push
testl
addr16
adc
jl
push
and
out
pop
je
push
dec
icebp
dec
xor
mov
pop
mov
add
push
rcl
stc
add
stos
repz
sbb
mov
sbb
int
jno
jnp
mov
pop
fwait
pop
and
nop
mov
mov
enter
flds
les
lock
fisttps
pop
sub
jg
dec
pop
or
inc
and
xor
sub
enter
mov
dec
sub
mov
inc
add
jl
outsb
or
out
enter
xchg
or
in
inc
fs
xor
mov
and
dec
jne
jmp
dec
pop
adc
lahf
in
cmp
cmp
cmp
adc
push
lret
xchg
or
sbb
lret
bound
mov
gs
cmp
sub
mov
pop
cmp
xchg
dec
mov
push
or
leave
data16
loopne
ficoms
mov
int3
add
outsb
sbb
jo
bound
in
in
gs
xor
outsl
mov
loope
aam
and
rorb
mov
add
xor
mov
xchg
xor
dec
push
pop
sbb
xor
dec
inc
sbb
xor
mov
xchg
notb
dec
pop
pop
or
aam
pop
xor
inc
push
inc
mov
cmp
clc
cmp
jo
loop
js
adc
mov
xchg
out
repz
pop
and
rolb
jnp
inc
jle
adc
push
mov
or
aam
fnsave
sub
stos
mov
cmp
push
stos
mov
or
jp
rolb
orl
xor
mov
repz
cmp
fidivrl
rcll
sbb
imul
add
cmp
sub
int
cmp
out
sub
test
imul
fists
rol
jl
lock
imul
or
xchg
repnz
add
sub
sahf
pop
jge
mov
mov
jle
lahf
sub
mov
js
push
adc
dec
sbb
adc
dec
adc
push
sub
movsl
dec
lods
sub
adc
loopne
mov
or
mov
sbb
popf
adc
mov
push
xor
js
popf
xchg
imul
cli
lods
cmp
stc
stos
add
sbb
push
xor
data16
and
push
pop
cltd
mov
and
sbb
jl
stos
adc
fcmovne
or
roll
call
mov
adc
sahf
in
decl
jg
ss
cld
or
jmp
into
arpl
sbb
xchg
mov
bound
ds
dec
cmp
ret
orb
jo
or
push
cmp
xor
pop
pop
inc
or
jl
inc
xor
pop
lret
add
cmp
pop
push
inc
and
pop
sub
sbb
add
and
jle
cmp
sbb
sub
or
insb
push
xor
insb
xor
push
clc
gs
and
pop
add
xor
and
sub
data16
scas
sub
lret
pop
dec
in
lret
cmpsl
pusha
in
inc
adc
loope
xor
push
pop
or
inc
fildll
xor
fldl
add
push
aas
leave
mov
cmp
lret
xchg
or
shrb
push
jb
inc
lods
pop
loope
scas
movsl
into
pop
dec
cmp
push
fstl
rcl
fisttpl
icebp
dec
xor
dec
mov
insb
xchg
repnz
int
cmp
cld
mov
push
and
xlat
clc
outsb
mov
sbb
jle
inc
xchg
or
mov
dec
add
push
cs
inc
sbb
cmp
arpl
mov
ret
sub
adc
and
mov
sub
or
jg
jo
mov
aas
mov
je
push
add
jp
adcb
dec
test
sahf
js
pop
and
xchg
cmp
mov
and
dec
std
and
lret
rol
push
mov
testl
xchg
popa
stos
inc
jl
incl
inc
lea
push
arpl
dec
mov
xor
jmp
das
add
xchg
sahf
call
jne
add
xor
mov
pop
xchg
mov
scas
inc
std
or
rcr
sbb
add
rolb
shlb
add
add
inc
aaa
mov
pop
push
jmp
jp
aaa
or
mov
inc
hlt
mov
pop
add
rcrl
pop
push
xchg
and
mov
sahf
arpl
lods
or
mov
jecxz
push
mov
sub
push
addl
xor
iret
inc
or
dec
in
neg
sbb
add
inc
add
mov
push
mov
push
fisttps
adcl
add
mov
pop
scas
pop
inc
daa
frstor
test
bound
shlb
js
jg
fwait
inc
mov
jns
or
ret
leave
shl
sbb
adc
jnp
adc
imul
in
das
pop
popa
jecxz
mov
adc
les
inc
aad
test
fnsave
sahf
fnsave
sbb
mull
imul
push
add
imul
sbb
int3
ret
xor
mov
xchg
sarb
std
inc
sbb
data16
shll
das
test
cmpsb
fs
pop
or
mov
ret
xchg
mov
or
sbb
or
enter
aaa
mov
pop
sti
mov
and
xor
lret
xchg
inc
or
add
adc
das
stos
jae
out
testl
cmpsb
cmp
xor
sbb
sbb
pop
sahf
jnp
pop
mov
mov
imulb
mov
lcall
add
jecxz
inc
stc
pop
lret
add
sbb
mov
cltd
jb
test
mov
cmp
push
lcall
dec
mov
jp
repnz
repnz
cli
movsb
inc
nop
sbb
add
jge
ss
mov
fsts
jnp
cltd
movsb
cwtl
xchg
mov
aad
int3
pushf
ljmp
loopne
add
cwtl
cmp
lea
dec
inc
lret
cmc
pop
lahf
xorl
xchg
arpl
mov
scas
inc
mov
cwtl
push
sbbl
int3
xor
add
test
pop
add
pop
ja
aam
je
inc
popf
sbb
or
movsl
push
ret
or
jl
dec
xlat
adcl
mov
jae
mov
jo
adc
xchg
sbb
pop
xor
cmc
dec
cltd
es
xor
xor
mov
int
xchg
js
pop
out
stos
gs
xor
jns
jae
inc
pop
and
je
fs
mov
mov
inc
sbb
sbb
in
sbb
mov
or
aam
jbe
hlt
add
call
jo
jae
imul
pop
adc
adc
sub
in
and
mov
or
and
mov
mov
inc
add
push
mov
cs
adc
lds
cmpb
jecxz
lahf
test
sub
test
jno
or
mov
jne
leave
aaa
ljmp
sub
lods
jge
cmc
sbb
pushf
std
js
and
mov
inc
mov
pop
push
add
inc
sbb
jne
mov
cs
lcall
jae
inc
inc
daa
fs
cltd
pop
pop
dec
repnz
add
out
mov
cmp
lock
and
lahf
jge
jmp
sti
es
stos
mov
pop
movsl
pop
inc
pop
push
ss
xor
xchg
lahf
frstor
jg
adc
adc
jmp
mov
sbb
popf
sbb
out
jg
push
ret
push
push
cli
xchg
repnz
add
into
jo
mov
lahf
mov
sbb
mov
mov
inc
and
sub
aas
inc
xor
adc
dec
pusha
mov
hlt
mov
xor
fidivl
lahf
ret
sub
cmp
jbe
add
das
jne
cmp
push
push
ljmp
xor
leave
gs
or
sbb
inc
cmp
outsl
sti
push
or
add
adc
inc
mov
dec
cmp
dec
inc
lea
ja
and
shll
fsts
dec
out
leave
sbb
push
jne
repnz
imul
xor
mov
xor
test
jmp
fimull
push
ds
or
jl
mov
cwtl
shl
cmp
test
add
out
orl
inc
jge
jno,pn
jmp
mull
sbb
out
or
clc
js
inc
sbb
add
or
popa
sbb
adc
sub
mov
jle
or
int
add
jmp
mov
je
je
xchg
cwtl
test
pop
push
sbb
sbb
sbb
cwtl
stos
fnstcw
mov
ficompl
cltd
cmp
push
add
adcb
push
dec
pop
mov
mov
loop
or
idivl
enter
repnz
fs
dec
sub
push
dec
xchg
and
out
loope
mov
lods
mov
in
mov
push
repz
mov
shll
test
mov
pop
mov
add
imul
push
mov
sbb
xor
inc
mov
cmp
pop
fisubrs
test
mov
hlt
adc
sub
jbe
in
inc
pop
fcmovb
inc
add
push
test
mov
nop
pop
push
cwtl
pop
aas
loopne
dec
or
iret
lret
add
inc
push
adc
sbb
scas
mov
pop
test
out
fdiv
leave
push
lret
cli
aam
inc
adc
cmp
add
xor
mov
subb
push
sbb
jne
mov
pop
xchg
add
outsl
rclb
ja
and
pushf
mov
pop
dec
out
out
into
xchg
rcrl
cmp
les
sahf
mov
sbbl
fimull
mov
pushf
enter
in
fsubl
data16
pop
add
daa
shrl
fidivrs
sbb
aad
or
jl
pop
shlb
cs
xlat
ds
je
stos
mov
or
fadd
mov
movl
pop
or
gs
push
push
mov
mov
inc
pop
jo
inc
dec
mov
repnz
push
insl
nop
fs
xchg
inc
loope
mov
cmp
pusha
push
faddp
jbe
mov
jne
cmp
cmp
popf
lret
and
push
adc
mov
mov
shlb
lds
lods
cld
xor
popa
mov
cmpb
mov
mov
jns
insb
pop
jns
mov
lret
adc
pop
xor
lods
xor
inc
xchg
sahf
push
mov
push
push
inc
fsubrp
xor
in
imul
jl
or
ret
add
repnz
push
ret
das
push
rcr
cli
repz
xor
adc
fldl
jb
jecxz
test
test
mov
push
and
sbb
dec
xlat
aad
imul
out
frstor
fsubrl
imul
pop
pop
pop
dec
pop
push
xchg
int
and
xor
mov
jno
adc
sbb
bound
mov
push
fstpl
popa
add
xor
scas
dec
pop
adc
mov
mov
stos
stos
setle
and
and
inc
lea
mov
popf
jg
mov
push
jmp
inc
dec
and
inc
xlat
inc
and
jmp
inc
jb
inc
jmp
scas
xchg
push
dec
jg
jnp
xlat
movsb
adc
sbb
iret
nop
daa
mov
into
pushf
xchg
into
bound
hlt
icebp
icebp
ss
cli
mov
pop
or
xchg
cmp
inc
sub
iret
and
jmp
adc
cli
leave
repnz
leave
inc
jp
pop
sub
or
pop
pop
jecxz
push
add
out
mov
idivb
jo
addb
pop
int3
cmc
xor
push
xchg
sbb
mov
xchg
jmp
decb
jp
cld
push
test
imul
push
inc
push
sub
push
dec
pop
add
sbb
test
cmp
sbb
jle
push
daa
add
push
inc
shrb
sbb
xchg
sbb
adc
rcrb
into
pop
icebp
faddl
jns
pop
add
jmp
add
add
push
xlat
outsl
xchg
mov
add
push
jo
js
jo
dec
ficomps
fsubs
cs
pop
ret
add
inc
add
add
adc
pushf
push
inc
addl
sub
xchg
jecxz,pt
pop
sbb
push
lods
and
lock
cmp
pop
fiadds
stc
push
pop
dec
adc
das
mov
or
push
pushf
lret
outsl
mov
or
xchg
inc
gs
iret
repz
add
imul
loope
xchg
xchg
push
cltd
pusha
fstl
add
mov
mov
pop
pop
dec
aaa
jns
daa
jns
lds
or
test
icebp
test
stc
sub
mov
lock
xor
lahf
sahf
cmp
jne
clc
iret
loop
fs
and
mov
pop
push
dec
pushf
dec
ljmp
aam
jne
pop
add
daa
lods
cmp
xor
mov
cmp
jge
adc
push
out
hlt
and
rorl
mov
adc
sti
adc
sub
jmp
xorl
fsubrl
les
add
popf
xor
push
fwait
sbb
xchg
jne
push
in
push
pop
test
push
adc
stos
mov
jbe
push
mov
lret
js
mov
ja
std
xor
idiv
mov
add
sbbl
xor
xchg
int3
iret
jmp
insl
jae
sbb
add
inc
scas
dec
add
popa
cs
jg
mov
lods
inc
call
cli
or
out
aam
fs
ljmp
mov
mov
jns
rcrb
flds
insb
xor
and
fisubl
jge
add
xor
add
ljmp
cld
pop
dec
mov
repnz
mov
jno
ljmpw
xor
pop
jo
sub
add
push
repz
mov
out
or
pop
mov
shrb
shrb
inc
leave
sub
push
cmp
adc
push
jg
stos
pushf
popf
push
popa
add
sahf
add
xor
clc
lcall
dec
pusha
je
dec
pop
and
sub
test
shlb
add
sub
in
xor
lea
mov
fstpt
and
add
sbb
out
mov
scas
mov
jbe
cs
pusha
cmpsb
xor
mov
cli
outsl
cmpl
cmp
sbb
ss
inc
test
sti
sbb
mov
into
ror
cmp
jl
aam
dec
pop
jo
dec
lcall
jg
jle
add
cli
test
sub
adc
enter
ja
stos
xlat
adc
or
int3
lret
push
addr16
lret
inc
push
into
cmp
icebp
ja
stos
subb
imul
inc
xchg
dec
inc
repnz
xor
fnstenv
mov
daa
push
inc
add
lret
ficoml
fmul
into
xchg
or
jae
mov
int
jmp
dec
cmp
jl
pop
movb
jp
xor
xchg
test
xchg
mov
mov
mov
pusha
lret
sub
stos
push
sub
and
and
dec
int
add
icebp
imulb
dec
xor
inc
das
movsl
movsb
inc
or
push
clc
push
loopne
sub
pop
inc
popa
adc
jle
enter
push
stc
jb
xchg
xchg
pop
fs
shl
das
push
mov
enter
btr
cmp
ja
cmp
dec
ret
mov
cltd
xchg
xchg
in
pop
jne
inc
mov
mov
cmc
xor
sub
add
push
aad
push
and
iret
aad
cwtl
jns
add
mov
nop
inc
das
orl
mov
inc
jno
outsl
sbb
or
xchg
in
and
and
stos
jo
call
mov
outsb
arpl
sbb
repnz
add
sbb
add
test
popa
mov
sub
mov
or
in
dec
inc
or
fwait
dec
adc
and
js
pop
ret
mov
sar
mov
or
les
cmp
ret
mov
in
adc
clc
fstps
aas
stos
pop
test
int3
mov
je
or
imul
jp
enter
push
ljmp
inc
jle
or
sbb
imul
xlat
adc
adc
adc
sbb
inc
pop
and
dec
mov
filds
inc
pushf
pop
pop
scas
pop
sbb
inc
enter
add
sarb
in
leave
sub
push
hlt
jecxz
sbb
inc
add
test
stc
mov
cli
stc
jnp
mov
jbe
cmp
jbe
pop
sahf
pop
data16
insl
pop
mov
dec
aas
je
iret
jno
fidivl
daa
jb
xor
pop
in
cmp
inc
mov
mov
inc
jg
inc
enter
lock
add
add
loopne
test
je
or
enter
and
xor
daa
jns
in
push
push
faddl
and
or
pop
mov
dec
mov
int
arpl
dec
enter
jb
test
ret
xor
jecxz
jle
aam
out
sbb
test
rolb
imul
mov
rorb
scas
notl
in
sbb
pusha
jge
lret
mov
xor
sysenter
mov
or
add
mov
mov
sbb
cmp
clc
and
push
loope
movb
gs
es
mov
adc
ja
loope
push
push
jmp
jnp
xor
xchg
out
mov
push
repnz
shlb
dec
dec
xchg
scas
pop
add
mov
iret
scas
xor
sbb
xor
rcrb
xor
inc
and
iret
in
xchg
pop
cmp
int
inc
insl
add
sub
std
and
and
insl
lock
les
xchg
lret
inc
cltd
xchg
add
mov
lods
push
std
cmpsb
into
aad
aas
push
pusha
in
dec
dec
lret
xchg
movsb
mov
sbb
adc
jno
inc
mov
xor
popa
ljmp
ficomps
push
test
pop
add
not
add
and
std
push
je
jmp
mov
jmp
movups
xchg
addr16
push
push
mov
jmp
adc
and
movb
test
xchg
cs
mov
dec
ljmp
mov
and
adc
ficoms
ja
pop
cmp
add
push
dec
mov
mov
jne
rcr
mov
arpl
adc
hlt
xor
mov
lcall
mov
mov
jb
or
jb
fs
aas
not
cli
lods
testl
aam
popa
xor
sbb
fists
add
mov
in
mov
add
arpl
clc
js
mov
push
shrl
xor
insl
jnp
inc
jge
iret
mov
popa
test
xor
rcr
out
cmp
and
add
ret
mov
imul
adc
pop
loopne
push
cmc
cmpsl
jle
cmc
xor
pop
inc
pusha
andl
mov
jge
inc
inc
outsl
or
lods
xlat
pop
add
jmp
cmp
and
inc
dec
jne
aad
mov
ljmp
dec
and
xchg
stos
xor
je
xchg
imul
mov
popa
add
pop
sub
subl
mov
daa
addr16
mov
adc
jno
call
and
sub
mov
outsl
outsl
xor
mov
pop
dec
sub
cmc
movsl
clc
jne
mov
lods
inc
inc
cltd
fnstsw
pop
sbb
dec
mov
outsl
inc
sub
xor
cmpsl
shl
pop
xor
addr16
xor
adc
mov
xchg
sub
xlat
cmp
and
arpl
mov
popf
stc
ja
cmpb
push
lock
movsl
decb
mov
aam
movsl
ret
jns
pop
int3
inc
scas
cmp
push
movsb
adc
jo
xor
jb
cmc
and
loope
addr16
xchg
xor
add
bound
push
xor
jg
pop
or
push
mov
jno
ljmp
jno
rclb
adc
leave
jmp
xchg
jle
jns
and
andl
pop
adc
jns
jne
adc
insl
inc
lcall
adc
adc
loop
cmc
icebp
es
sub
jne
adcl
insb
outsb
and
addr16
jge
arpl
sahf
xchg
adc
jbe
push
rclb
sub
xor
sbb
inc
stos
arpl
sar
dec
in
push
sbb
les
rcr
rcrb
xor
cmp
push
xlat
xchg
inc
push
and
scas
icebp
add
ffree
mov
movsl
dec
jae
xchg
xorl
cmp
lds
pop
push
sbb
adc
mov
sub
sti
testl
or
cmc
xchg
mov
in
fwait
stos
enter
lea
mov
dec
aad
mov
cmp
adc
insb
pop
clc
jp
les
pop
mov
in
add
push
shrb
xchg
push
jp
dec
icebp
out
hlt
xorl
jmp
jne
pop
pop
mov
and
xor
add
xlat
mov
mov
int
and
pop
push
push
pop
jno
sbb
jge
add
sub
push
xchg
mov
pop
rcll
cmp
in
repnz
and
test
dec
enter
insb
adc
xor
push
dec
movsb
inc
jae
xchg
pop
mov
loop
addl
xchg
fadd
or
aad
push
push
sub
adc
mov
xor
add
lret
scas
inc
mov
and
sub
cli
inc
xor
sbb
daa
sub
ficoms
sbb
jae
pusha
lahf
fimuls
movsl
jmp
jo
lods
pop
pop
mov
inc
aad
jns
and
jne
and
mov
inc
jno
add
mov
mov
std
xlat
cmc
movsb
roll
or
mov
inc
mov
lods
pop
mov
lret
push
push
enter
mov
adc
repz
aad
repnz
nop
nop
js
adc
in
push
negb
sbb
ljmp
in
jp
mov
adc
mov
aad
lock
jae
cs
ss
push
jo
push
outsl
xor
pop
ss
les
push
pop
aad
ds
je
lahf
xor
pop
lcall
mov
pop
pop
ss
mov
jo
mov
jno
adc
or
jno
mov
inc
jbe
testl
cmc
adc
mov
add
pop
pop
gs
cld
sub
aad
shrl
inc
pop
lds
orl
fidivl
ret
add
adc
xchg
or
xchg
mov
mov
stc
pop
fldenv
mov
dec
adc
xor
xchg
push
sbb
sbb
js
dec
aad
cmp
mov
inc
push
pop
mov
popa
sub
pop
es
push
add
sub
push
pop
lcall
adc
cli
dec
pminsw
cld
xchg
push
pop
aaa
outsb
daa
les
add
lea
mov
or
mov
jmp
jge
leave
call
lcall
mov
adc
push
cmp
mov
shll
xchg
iret
imul
xrelease
rcrl
pop
or
inc
sbb
mov
push
mov
mov
shll
push
mov
arpl
out
pop
pop
imul
into
sub
xchg
shrl
sub
and
push
int
fisubl
inc
sub
mov
adc
dec
pop
and
jnp
in
pop
data16
dec
cmc
out
cwtl
pop
test
pusha
and
dec
adc
sbb
inc
stc
or
xchg
aam
ss
sub
fistps
out
push
ja,pn
shll
and
divl
mov
lods
mov
pop
xor
push
jns
add
aam
mov
sub
insl
and
push
push
adc
xchg
aam
or
push
imull
lods
and
shrl
lods
xlat
adc
aad
push
and
enter
pusha
sti
inc
sub
push
aad
cmp
ficomps
jne
dec
fs
insb
stc
jne
mov
jnp
sub
out
xchg
enter
out
mov
or
mov
pop
mov
nop
mov
movsb
jbe
mov
fildll
sub
aad
insl
pushf
cmp
inc
and
and
jns
adc
xchg
loop
in
arpl
and
pop
stc
mov
inc
sub
aad
lcall
pop
loope
pop
stc
loopne
dec
dec
daa
out
mov
mov
out
mov
mov
xor
push
mov
lods
add
inc
jp
add
test
adc
out
pop
test
ret
pop
in
loope
and
out
nop
pop
mov
xchg
testl
inc
imul
in
and
inc
or
xchg
xlat
sbb
adcb
adc
fs
pop
inc
sub
sbb
dec
mov
push
xchg
jb
xchg
cmp
mov
imul
in
mov
aam
icebp
sbb
mov
jae
adc
lret
ret
and
add
lret
stos
adc
shr
test
rcl
and
test
or
add
lods
pop
dec
mov
push
movsl
decl
arpl
fwait
imul
mov
test
data16
mov
and
pop
cli
fisubs
mov
pop
inc
aaa
pop
adc
push
fwait
and
lahf
dec
lods
adc
add
inc
aad
inc
adc
xchg
jne
push
in
jae
mov
pop
rolb
out
and
pop
int3
sbb
adc
inc
aad
lret
cld
and
scas
shrd
pusha
outsb
inc
xchg
sub
jnp
adc
mov
es
sbb
pusha
cmp
dec
dec
out
ret
pop
das
push
sbb
stos
lods
jns
xchg
and
mov
cmp
lahf
or
xchg
or
jmp
cmp
pop
adc
adc
mov
mov
lret
dec
adc
pop
or
add
pop
lea
jmp
insb
xchg
imul
test
mov
jbe
or
mov
pop
mov
loop
stos
mov
sbb
mov
mov
mov
testl
mov
inc
jns
ss
sub
sahf
jmp
test
aad
int3
adc
dec
pop
lds
into
pop
in
in
data16
dec
mov
mov
mov
add
jns
xchg
int3
imul
dec
fbld
aam
or
pusha
push
inc
jl
jmp
imul
adc
jne
addr16
out
stos
out
int
push
push
mov
mov
adc
data16
aad
xchg
and
mov
inc
inc
shrb
aad
rcll
fistpl
jne
xor
in
push
data16
gs
xchg
push
and
mov
jns
xchg
inc
imul
fdivs
mov
dec
adc
push
or
xchg
daa
sbb
lds
adcl
or
loopnew
outsb
pop
int3
push
je
data16
out
stos
pop
test
shrb
mov
addr16
and
jns
xchg
sub
xchg
mov
jmp
cmp
leave
dec
jl
imul
adc
adc
jno
test
in
addr16
dec
push
out
mov
push
push
cltd
push
mov
jns
xchg
outsb
imul
mov
and
sub
sbb
pusha
and
sti
aad
adc
ficomps
jne
inc
push
in
data16
dec
jle
sbbl
xchg
push
cmp
ret
jns
xchg
mov
das
mov
mov
stos
int3
or
mov
dec
mov
lahf
dec
js
or
cwtl
test
push
insl
adc
subb
out
push
and
cmp
out
jg
add
out
sub
sbb
mov
daa
mov
ds
clc
mov
jo
lret
xchg
adc
in
and
push
jmp
mov
cmp
lods
jl
mov
negb
aad
and
ss
lods
or
sub
aad
pop
adc
pop
pop
fidivl
imul
movsl
dec
fwait
out
jl
adc
xchg
in
push
popf
jns
xchg
enter
dec
mov
mov
sbb
mov
test
push
dec
mov
adc
cmp
stos
test
inc
mov
inc
lret
fmull
xor
xor
sbb
inc
pmulhuw
and
mov
mov
dec
jae
ret
je
mov
jecxz
sub
jecxz
and
sbb
sti
sbb
leave
mulb
testb
movsb
pop
rorb
insb
jo
decb
sti
xor
pop
mov
daa
mov
lods
push
test
ljmp
pop
push
js
inc
mov
sbb
pop
outsb
lret
mov
add
mov
add
adc
sub
aad
repnz
lcall
lods
call
dec
ja
loop
add
outsb
inc
into
flds
mov
dec
fwait
sbb
shll
rcr
int
test
adc
cltd
add
push
ret
hlt
sub
and
add
xlat
xor
jbe
xchg
or
push
mov
jo
inc
sbb
mov
jnp
push
shll
cltd
or
call
ja
pushf
sub
push
push
add
xchg
push
jle
lcall
pop
rcll
imul
mov
int3
fildll
and
fadd
xor
testb
xor
decl
hlt
sub
icebp
adc
bound
sbb
mov
test
cwtl
pop
mov
lcall
sbbl
jne
push
mov
mov
inc
testl
jbe
ss
mov
adc
aam
adc
test
inc
and
sbb
mov
enter
mov
cs
loop
xor
add
jle
mov
paddusw
mov
lods
add
add
notb
dec
nop
das
adc
mov
push
jae
jb
adc
mov
dec
and
test
enter
dec
test
sbb
jno
cs
jnp
scas
adc
leave
loop
fldenv
sub
mov
xor
sub
mov
lds
mov
dec
xchg
xor
xor
jecxz
std
icebp
mov
jp
inc
and
sbbb
mov
xor
outsl
gs
mov
add
mov
fwait
mov
push
add
fidivl
pop
les
lret
pop
push
popf
lahf
mov
add
inc
push
fdivl
cmp
addl
pop
add
push
pusha
sub
push
ds
mov
fdivrl
mov
call
inc
nop
rolb
pusha
push
stos
pop
data16
into
cmp
int3
mov
flds
xchg
add
mov
sbb
sub
pop
inc
ljmp
dec
fdivr
sbb
lahf
enter
addb
jns
adc
inc
dec
std
push
mov
push
dec
dec
ret
pop
je
sub
daa
es
pop
cmpsb
add
jg
loopne
ss
sarl
push
mov
mov
mov
vcvtsi2sdl
inc
xchg
pop
ja
xacquire
xor
loop
pop
or
loop
pop
in
mov
pop
sbb
dec
ret
mov
inc
jae
movl
mov
scas
repnz
rcrb
in
add
mov
add
dec
inc
std
jne
cmp
adc
cmp
mov
rcl
popa
neg
mov
imull
arpl
addl
adc
mov
xor
sarb
jo
movl
fcompl
dec
fdiv
mov
push
in
dec
add
mov
in
jb
sti
test
xchg
xchg
add
in
push
and
inc
sarl
mov
add
fadds
outsl
jno
loopne
cwtl
aam
push
adc
mov
iret
movsl
mov
xchg
push
out
cmp
inc
cmp
pop
cmpsb
insb
adc
add
test
mov
mov
cs
lcall
ror
stos
cld
pop
rclb
outsl
cwtl
iret
and
out
test
adc
sbb
adc
arpl
rol
xchg
push
ret
add
ffree
scas
pop
cltd
out
pop
sbb
mov
push
fchs
mov
inc
pop
ss
movsl
imul
jl
scas
mov
aas
cmp
lahf
add
pop
or
aaa
cld
push
testl
push
rolb
fcompl
jg
or
das
jbe
aas
cmp
lods
sub
cmpsb
cmpsl
add
fisttps
push
aas
lods
fisttps
dec
dec
push
test
add
test
pushf
pop
lds
sti
dec
jo
add
push
sbb
je
fcoms
push
sbb
test
dec
lcall
mov
pop
mov
sbb
add
stc
out
out
scas
dec
inc
mov
stos
pop
push
popf
push
leave
and
jns
and
int
test
jb
popf
xor
xor
sti
add
xchg
cmp
jne
subl
inc
jae
shll
jle
into
or
faddl
or
add
push
adc
mov
popa
fbstp
jne
pop
je
outsl
ljmp
push
push
aam
lret
inc
xchg
aam
fs
idiv
mov
mov
sub
insl
or
cwtl
mov
call
mov
push
movsb
jmp
xchg
leave
outsb
xchg
jns
xchg
dec
imul
js
cltd
or
mov
loope
mov
add
xchg
and
xchg
and
sbb
pop
idiv
push
out
repnz
and
push
adc
inc
lods
pop
xchg
aad
cld
and
ret
je
lods
inc
mov
jnp
stos
dec
dec
pushf
fistps
jne
scas
mov
add
outsl
in
xor
aad
int3
and
fsubr
lods
lret
fstpt
clc
mov
lods
out
adc
push
pop
lret
push
adc
inc
sbb
or
mov
sub
fsubl
dec
and
sub
lods
push
adc
inc
negb
aad
cmp
pusha
mov
dec
sub
mov
pop
xor
fsubrl
in
dec
and
out
inc
pop
mov
leave
out
xchg
jmp
in
inc
fcompl
aad
lret
and
andb
out
sub
ss
jnp
negl
jne
in
in
push
dec
ret
pop
pop
push
les
xlat
icebp
jns
xchg
lea
mov
cmp
mov
push
xchg
jle
push
mov
fwait
adc
cmp
adc
cmp
adc
xchg
and
mov
push
and
ss
lods
push
gs
sub
xchg
jg
push
xor
push
jno
adc
sub
out
inc
cld
push
mov
rclb
std
jns
xchg
ret
mov
mov
ds
lods
mov
sub
push
xor
lahf
pop
and
je
in
push
push
dec
movsb
out
push
pop
add
je
mov
inc
mov
rcr
or
mov
dec
mov
test
aad
stc
and
push
mov
sar
and
xor
dec
and
pop
jno
js
dec
inc
aad
out
push
inc
and
popa
jne
shll
inc
std
sub
aad
xchg
adc
cli
pop
lret
repz
dec
push
push
stc
cmc
push
and
idivb
xchg
je
out
mov
push
mov
push
jno
mov
sbb
adc
call
inc
int3
adc
shll
sti
idivl
das
fsubl
inc
and
lret
lods
adc
inc
daa
pop
push
aad
mov
in
add
mov
jl
fwait
mov
lahf
push
adc
rcll
and
subb
and
and
cmp
test
test
xchg
pop
movsl
aad
in
and
stc
cmc
lods
addr16
or
sub
mov
pushf
aaa
dec
lret
and
and
fs
push
rcll
push
mov
adc
adc
push
jg
shrl
lods
inc
pusha
mov
fisubrs
adc
aad
adc
sub
negl
mov
pop
lods
push
dec
arpl
repz
int3
lea
push
push
dec
mov
dec
push
push
adc
jmp
push
mov
and
stc
xchg
neg
jmp
or
xchg
xor
pop
mov
xchg
push
and
dec
push
clc
adc
fistpll
into
div
push
call
adc
lods
xchg
xor
pop
pop
aad
js
xchg
adc
inc
shrl
aad
push
adc
loope
push
jne
stos
mov
rorb
out
dec
pop
lret
in
xchg
inc
movl
imul
cmp
or
mov
mov
cld
mov
xor
mov
pop
pusha
scas
or
and
add
push
sub
xchg
in
push
sub
xchg
jp
in
pop
out
mov
int
aas
or
xchg
push
sbb
push
xchg
jae
inc
jne
iret
mov
pop
dec
and
push
xchg
mov
adc
aad
adc
push
mov
xor
mov
in
push
std
dec
sbb
jae
mov
adc
inc
in
pop
xchg
aad
lahf
and
or
in
pop
inc
fsubrs
shrb
and
pop
and
and
subl
pop
adc
inc
xlat
pop
inc
aad
xor
and
jb
and
adc
fdivs
shll
sahf
xchg
xor
stc
pop
into
aam
roll
push
xor
xchg
and
loop
lods
mov
jge
pop
pop
adc
arpl
inc
lods
sub
xlat
sbb
pushf
push
pop
jnp
ret
pop
mul
sbb
adc
lods
out
les
mov
es
cmp
or
pop
pmullw
and
scas
push
jp
xchg
inc
aas
sub
aad
or
orb
and
jne
int
in
out
data16
out
dec
pop
out
pop
sub
xchg
int
pop
into
jns
xchg
stos
imul
cltd
and
xchg
or
mov
in
adc
es
push
jne
testl
pop
xchg
push
xchg
sbb
lods
dec
jns
mov
push
cli
and
adc
lods
outsl
xor
je
pop
push
sahf
adc
jmp
jl
std
ret
inc
xchg
leave
or
sbbb
mov
adc
mov
out
pop
push
push
mov
mov
mov
aas
sbb
rclb
cmpsl
inc
inc
pop
cmp
mov
push
dec
aam
xor
inc
test
cltd
pop
xor
add
scas
and
in
and
test
out
lods
inc
bound
fcomps
ret
jb
fmul
out
inc
leave
jae
push
fwait
jge
lcall
adc
or
mov
stc
int3
adc
sub
inc
mov
inc
dec
fisubrl
xor
jbe
out
push
pop
cmc
and
mov
mov
ret
adc
add
shll
shlb
enter
fsin
and
xchg
out
dec
je
or
adc
mov
push
sbb
loopne
roll
rclb
mov
mov
es
shll
sbb
pop
or
lds
ds
pushf
mov
icebp
ds
xchg
adc
test
inc
xlat
and
sub
xchg
adc
test
mov
pop
or
cltd
sbbb
adc
fcmovbe
dec
pop
mov
aad
inc
add
cmp
xor
dec
jno
sbb
cmpsb
adc
aam
add
and
je
lods
cltd
adc
lret
jge
mov
add
adc
cmpsb
cltd
test
and
cmpsb
jb
hlt
das
repz
xchg
cltd
jne
push
rcl
add
iret
out
adc
pop
push
stc
sbb
pop
fnstsw
push
dec
xchg
popa
dec
sarl
or
mov
subb
xchg
int3
mov
adcl
adc
lcall
cli
mov
test
jne
xchg
cmp
xchg
sub
shlb
stc
adc
mov
mov
pop
adc
hlt
jl
and
sbb
cwtl
daa
dec
loope
add
adc
adc
push
xchg
jp
adc
cwtl
jb
xor
movlps
xchg
mov
and
xor
test
rcll
adc
push
xchg
cwtl
test
movsl
or
fidivl
dec
or
pop
sbb
sub
adc
mov
sbbb
xor
jge
adc
and
jmp
hlt
fwait
pop
fstps
xor
je
xchg
add
dec
dec
mov
cmp
xlat
mov
and
out
mov
mov
adc
sub
lret
shrl
call
ficompl
pop
adc
fmuls
push
jl
fdivs
pusha
cmp
push
and
rcr
mov
sbb
stc
add
mov
xor
sub
adc
push
inc
cwtl
pushf
xor
sar
adc
fidivrs
mov
push
jns
and
mov
hlt
dec
sub
mov
xchg
dec
imul
sbb
adc
notl
add
lret
xor
ret
les
inc
and
push
push
or
xchg
es
cmpsb
aaa
jns
inc
jo
fadds
xchg
testb
loop
cmp
pop
add
push
arpl
adc
aaa
pop
sahf
xchg
rcl
dec
test
fisttpl
out
je
ficompl
popa
ja
adc
data16
movb
adc
cli
pop
shlb
outsl
push
je
mov
or
add
push
fwait
pop
adc
dec
fcmovnbe
and
pop
mov
loop
jge
jo
inc
adc
fwait
mov
and
movsb
sbb
movsl
push
sti
adc
inc
xor
je
movb
sub
repz
cmp
stos
push
sub
mov
in
push
add
pop
mov
hlt
aaa
nop
and
incl
inc
ror
loop
add
sbb
lock
scas
out
into
or
test
add
aad
cs
dec
pop
push
adc
jmp
out
popl
mov
je
inc
push
sbb
inc
inc
push
jnp
jge
add
dec
dec
popl
xor
sub
add
ds
pop
stc
ficoml
add
incl
inc
push
jno
jle
jl
push
xchg
add
aas
mov
adc
aas
sub
inc
push
push
xchg
shl
cmp
es
cltd
stc
mov
orb
push
sbb
arpl
pop
push
inc
jbe
test
add
imull
push
js
sub
adc
and
fldt
ret
fisubs
ret
cmp
inc
mov
mov
sbb
jbe
pop
xchg
icebp
push
cs
jg
inc
pop
in
es
dec
es
pushf
mov
jl
pop
sub
or
mov
inc
in
pop
push
in
add
and
adc
sub
pop
add
jl
and
add
pop
push
pop
xorb
icebp
ja
fidivl
jno
or
daa
loop
sub
gs
sub
jp
push
cltd
inc
adc
or
inc
das
test
les
jb
xor
rcl
gs
mov
pushf
subl
jecxz
adc
and
mov
jbe
icebp
add
adc
jl
adc
push
test
sahf
pop
inc
cltd
inc
loope
leave
cli
xchg
lea
addr16
scas
hlt
add
xchg
adc
sub
adc
push
fdivp
and
jecxz
add
jnp
xor
and
mov
sub
scas
sub
shrl
bound
push
shlb
fnstcw
enter
add
push
outsb
inc
call
dec
or
jp
je
xchg
mov
add
mov
pop
xchg
rcr
lret
adc
mov
es
pop
add
dec
lds
std
icebp
inc
rolb
inc
shr
rorb
mov
jnp
mov
xchg
adc
lea
bound
mov
stos
jb
add
mov
xor
fnop
cmp
fidivrl
leave
or
hlt
sti
jne
fwait
out
jne
mov
gs
pop
inc
jb
mov
fucom
mov
sbb
push
fcoml
and
inc
dec
fldenv
ss
mov
pushf
adc
dec
hlt
rcr
push
pop
popa
jg
repnz
push
lahf
in
lea
mov
cmp
sub
jb
cmp
sub
std
repnz
sbb
addr16
faddl
add
xor
inc
mov
jo
jns
adc
xor
inc
xor
pop
adc
mov
sti
scas
sub
addr16
add
sahf
popa
sub
popf
and
jne
push
pop
pcmpgtb
std
xor
push
dec
jnp
dec
sbb
inc
sbb
adc
add
fs
push
pop
mov
push
out
enter
divl
rcr
add
jno
lcall
mov
jge
dec
fstpt
xchg
add
push
sub
or
or
xorl
xchg
add
push
xor
and
push
addl
push
or
and
mov
add
jno
xor
testb
lea
movsl
inc
insb
mov
lcall
push
lds
popa
push
pop
data16
sub
jb
push
daa
cmp
adc
sbb
jg
xchg
cmp
push
cmc
adc
arpl
js
loop
insb
xchg
mov
mov
xor
cmp
add
insb
inc
popa
inc
lods
hlt
push
adc
cmpl
negb
iret
adc
mov
in
jnp
jo
lret
adc
shrl
xor
test
sbb
fcoms
or
inc
je
dec
lret
sub
icebp
inc
jp
rcll
xchg
insl
xchg
and
mov
pop
add
or
fwait
jl
sbb
xor
cli
dec
inc
add
mov
movsl
mov
movsl
add
inc
movsb
popf
cmp
or
or
insl
test
es
inc
pusha
jno
or
add
nop
js
data16
ds
dec
adc
dec
and
clc
add
push
adc
mov
loopne
adc
imulb
add
repnz
bound
rcl
sub
std
imul
daa
arpl
cmp
inc
mov
sbb
cmpb
jl
push
jae
pop
pop
dec
cmp
pop
xchg
scas
and
aaa
lahf
ljmp
out
adc
pop
decb
stos
push
test
subl
js
dec
lret
inc
arpl
insl
lcall
or
pop
test
and
das
xchg
arpl
or
or
notl
inc
addr16
cwtl
xor
rcrb
push
adc
popa
addr16
sub
or
pop
jbe
adc
cmp
push
roll
sbb
pop
call
cs
sbbb
push
xor
gs
leave
repnz
daa
xor
call
push
je
inc
jne
cmp
cs
stos
xor
cmp
inc
push
add
adc
pop
pop
leave
xor
xlat
cmp
jle
data16
jb
test
inc
xor
ds
das
pop
out
mov
cld
adc
pop
mov
add
fmuls
push
outsl
ja
mov
dec
xor
cmp
test
pop
pop
jnp
rcll
sbb
in
lret
add
call
cmp
mov
imul
xor
cld
call
rorb
inc
sbbb
jg
jne
out
pop
xor
mov
mov
mov
jne
stos
ja
add
push
dec
insb
scas
or
jne
add
loope
and
pop
pushf
lods
mov
jns
jl
imul
inc
and
dec
jae
pop
sahf
popa
es
jns
or
fists
push
ja
fimull
dec
dec
dec
or
sti
mov
mov
pop
pusha
adc
xor
inc
popa
out
icebp
dec
xchg
dec
cmp
cli
or
mov
jbe
pop
shlb
inc
inc
jmp
iret
mov
fnstsw
and
add
imul
fcmovne
stos
fidivrs
adc
data16
sub
adc
dec
pop
mov
popf
jp
sbb
aaa
inc
push
jmp
sbb
sub
sub
lret
cmp
ret
push
pusha
scas
into
xor
out
push
decb
xchg
jnp
adc
pop
pop
out
out
push
gs
add
pop
rorl
mov
je
das
pop
jno
add
dec
cmp
fwait
pop
sub
shll
addr16
shrl
das
mulb
adc
mov
push
idivb
les
dec
mov
inc
pushf
push
dec
cs
mov
jns
jns
cltd
mov
and
lock
push
dec
push
fsubr
jns
lods
popa
insl
sub
cli
sbb
scas
pusha
enter
inc
pop
les
outsb
adc
jecxz
push
adc
inc
stc
sub
and
inc
xor
cld
sub
and
testb
iret
fiaddl
and
cs
enter
ficoml
jae
jne
push
add
sbbl
mull
dec
testb
cmpsb
cmpsb
jle
or
jno
nop
add
aam
inc
ss
cmp
xor
xor
mov
dec
jp
and
inc
pop
cmp
sbb
or
dec
and
push
push
ljmp
mov
js
mov
mov
push
imul
dec
cmp
faddl
xor
aas
inc
pop
movsb
adc
ljmp
cmc
shlb
cmc
sbb
daa
mov
mov
loope
mov
adc
dec
xlat
out
test
fldl
out
adc
ss
mov
push
add
cmp
mov
dec
add
jl
pusha
push
jo
jno
outsb
pcmpeqb
dec
cwtl
hlt
sub
xchg
sub
xor
mov
push
repnz
mov
sti
jne
inc
jg
scas
fiaddl
test
lods
js
stos
popf
lret
add
mov
inc
fwait
ja
mov
sbb
cmpsb
iret
mov
and
out
call
pop
adc
or
hlt
sbb
add
adc
fistpl
fcmovb
dec
shr
lds
icebp
in
cmp
popf
jae
fwait
add
jmp
mov
fisttpl
in
mov
movsb
inc
or
loop
sub
xchg
sbb
dec
add
jg
lods
xchg
xchg
fcoms
and
cmp
test
rolb
jbe
push
cmp
inc
cmp
and
dec
adc
push
pop
adc
push
andl
lret
push
cs
cmp
push
jno
cmp
clc
jnp
xor
cld
add
xchg
inc
jecxz
mov
push
push
fstpt
push
and
push
push
pop
inc
sbb
inc
jno
pop
push
pusha
inc
and
addr16
push
outsb
inc
mov
dec
pop
jb
and
mov
jb
shll
pop
or
aaa
notb
inc
into
ret
sbb
sub
and
or
inc
movsb
inc
sub
pop
jae
movsl
and
stos
push
rorl
or
xor
aas
mov
fnstcw
jp
push
roll
js
imul
into
pop
add
popw
das
pop
add
or
arpl
jecxz
dec
jo
jno
inc
xor
bound
jb
dec
cmp
push
push
jle
mov
xchg
iret
inc
cwtl
jmp
adc
insb
pop
xchg
add
add
or
sbb
test
in
enter
dec
push
adc
dec
xor
adc
pop
xor
adc
and
jne
pop
and
push
jnp
sub
xor
or
adc
lret
xor
lea
sub
xchg
jae
adc
push
aad
ja
pop
push
negb
cwtl
adcb
push
jns
inc
outsl
mov
inc
and
adc
sub
inc
xor
push
push
ds
shlb
mov
pop
pop
jmp
adc
cs
test
xor
gs
popa
loop
xchg
mov
xchg
xor
jno
mov
incl
push
popa
push
jnp
pop
mov
gs
push
add
mov
stc
xchg
scas
mov
push
and
jmp
ds
sbb
lret
pop
std
movsb
scas
lods
inc
sbb
lods
mov
sbb
or
js
add
push
pop
mov
add
cmp
add
cli
push
dec
add
jo
aaa
or
test
xchg
repnz
dec
push
outsb
adc
push
mov
out
ljmp
or
lret
jmp
lock
cmp
roll
cmc
mov
outsl
sbb
sti
ds
and
jo
cmp
cmpsl
fdiv
fcmovne
movsb
jo
test
push
push
aam
lret
push
xor
cmp
fwait
aam
mov
jp
push
push
or
push
pop
sub
aam
and
jae
les
dec
pusha
cltd
lock
pop
in
enter
js
scas
movsl
shl
inc
pop
sub
stos
or
movsb
ja
pop
into
sub
inc
shl
mov
and
adc
ret
subl
xchg
add
jg
addb
int3
test
aas
loop
dec
rcrl
lods
shr
pop
je
adc
push
lret
or
mov
dec
cmp
inc
lods
mov
jb
movsb
pop
sbb
test
push
das
inc
adc
and
add
pop
daa
add
shrb
pusha
fsubr
dec
adc
mov
xchg
ja
sub
mov
ljmp
lcall
push
push
lcall
or
adc
dec
int3
inc
jbe
push
out
stc
dec
nop
aaa
aas
mov
scas
js
push
jo
push
lock
lcall
in
or
bound
mov
in
adc
adc
add
cld
aas
out
repnz
mov
stos
iret
push
adc
into
fldl
out
push
lea
and
nop
xor
ds
adc
leave
imul
sbb
jno
fwait
add
bound
imul
lods
out
pop
jbe
xor
inc
imul
nop
fadd
gs
dec
add
xor
adc
imul
out
add
mov
sub
leave
mov
int3
fildl
add
push
sbb
mov
sbb
cmpl
aas
pop
mov
cli
push
popa
jae
call
sbb
add
nop
fdivs
xor
mov
push
inc
out
out
xor
fdivr
or
cmp
and
sub
push
cwtl
rorb
out
dec
adc
push
cmp
or
add
mov
sbb
and
rcrb
add
stos
popf
cld
add
fmul
sahf
add
cmp
add
fcomi
dec
in
mov
sub
in
and
sahf
mov
cmp
daa
xchg
mov
out
cltd
pop
or
std
addb
stos
sub
loopne
cmp
jecxz
add
push
jae
adc
stc
mov
push
add
jnp
xor
sub
out
sahf
sti
rcl
insl
ret
cmp
fstps
arpl
pop
cmp
dec
inc
repz
lods
mul
mov
out
sbb
and
cmc
into
loop
xor
sbb
inc
aas
cs
cwtl
sub
push
test
mov
repz
xchg
jae
sbb
jb
jne
pop
lret
mov
push
xchg
or
push
or
adc
adcb
sbb
mov
mov
or
and
test
xlat
jns
jg
pushf
mov
sbb
cmpl
ljmp
add
dec
inc
add
repnz
loopne
dec
sub
pop
test
cwtl
cmp
push
or
js
daa
adc
lock
push
cmp
pushf
sbb
pusha
andb
and
mov
xchg
daa
les
adc
imul
addr16
dec
fcompl
pushf
adc
scas
aaa
and
lods
loopne
jno
loope
shlb
or
sbb
ja
pop
fs
aaa
push
popa
adc
out
into
cs
movsl
mov
outsb
cmc
jge
shr
sbb
pop
popf
xchg
vrsqrtss
add
ret
test
loop
pushf
shrb
xor
inc
mov
sub
ja
cwtl
lea
ret
into
repz
scas
inc
mov
lcall
push
sarb
in
sbb
les
mov
lret
and
repnz
lock
lret
sbbl
js
jbe
inc
cmc
add
imul
or
cmp
pusha
aaa
push
loope
sub
rcll
prefetch
scas
lahf
mov
mov
push
inc
add
cli
mov
mov
pop
add
sub
push
xor
mov
mov
mov
call
dec
jl
jge
in
nop
xor
cmp
or
jo
push
andl
test
test
rclb
fsts
push
data16
cli
fdivs
cmp
jl
dec
shlb
xor
cld
mov
aam
pop
add
and
aas
sbb
or
pop
pop
sbb
or
and
or
outsb
dec
in
insb
xchg
sub
jg
nop
dec
js
cmova
xor
sub
xor
xor
outsl
add
add
mov
fwait
cmp
jle
aad
xchg
pop
pushf
rep
in
inc
adc
addl
mov
push
jae
jg
and
imul
jge
and
push
imul
fisttpl
mov
xchg
loop
fwait
sbb
mov
testl
xchg
loope
xchg
mov
jbe
inc
and
pop
js
mov
es
adc
inc
test
xchg
mov
out
fldl
jg
idivb
fs
inc
sub
inc
or
mov
sbb
je
jne
leave
xor
bound
aaa
or
clc
jnp
cltd
test
sub
adc
xor
imul
add
or
or
clts
push
sub
push
and
dec
add
fsts
test
sub
fildl
xchg
lret
data16
mov
inc
fwait
mov
jmp
mov
jl
jns
loope
mov
fldt
mov
int
jbe
lea
sahf
jge
mov
mov
in
mov
pop
adc
xor
jo
dec
fstl
pop
mov
ret
cmp
aaa
jp
inc
jp
inc
jle
insl
cmp
addr16
sbbl
xor
shll
aas
sbb
push
adc
and
clc
pop
ja
ss
jns
inc
add
andl
and
sub
push
pop
in
inc
dec
aas
adc
ss
fs
loope
int3
bound
push
cmc
imul
das
or
add
inc
lock
sub
shlb
pop
addr16
adc
dec
adc
xor
adc
inc
scas
aas
add
push
add
aaa
aas
inc
jb
sbb
or
jg
sbb
fbstp
pop
cmp
icebp
mov
push
jb
sub
fsubrl
ds
or
pop
inc
inc
bound
insl
inc
mov
and
sti
shll
aas
cmp
xlat
js
cmp
enter
stos
inc
adc
pusha
sub
push
fldenv
sub
push
inc
adc
sahf
xchg
outsb
and
loope
xchg
pop
adc
xlat
push
cli
xchg
pop
lcall
lea
hlt
or
out
mov
inc
imul
scas
cmpsl
outsb
pop
outsb
dec
sahf
lahf
inc
out
pavgw
inc
fmull
adc
and
fidivrs
mov
shll
inc
pusha
xor
pushf
sub
cmp
xor
imul
push
xchg
push
lahf
fcmovne
icebp
sbbl
inc
xchg
pusha
imul
push
pop
std
lea
mov
cmp
fs
sub
dec
dec
or
inc
push
and
sbb
xor
mov
or
test
jns
pop
mov
push
insl
xor
pop
sbb
jp
ret
push
inc
sbb
jbe
dec
jl
sbb
jle
andb
jae
mov
dec
stc
add
xchg
stos
fsubrl
inc
fdivr
mov
notl
sahf
pop
adc
or
in
shr
loopne
aad
mov
imul
stos
mov
in
cmp
pop
sarl
mov
cmc
xchg
dec
ss
je
fbld
inc
arpl
dec
push
lds
or
sbb
mov
pop
sub
dec
invd
or
add
pop
dec
jnp
or
xchg
scas
dec
int
insl
loopne
insb
xor
sub
ja
sub
dec
pop
sub
push
in
and
popf
jp
inc
or
sbb
sub
dec
in
xorl
inc
sahf
clc
xchg
xor
icebp
outsb
fimull
adc
std
idiv
outsb
pop
push
sub
in
pop
aas
pop
adc
sbb
mov
into
aad
ja
sbb
shl
int
push
jno
cmc
stos
nop
pusha
cs
es
xor
ret
roll
das
mov
pavgw
rcl
cmpsl
mov
jnp
aad
push
dec
mov
xchg
mov
push
dec
cld
inc
in
notb
aam
addl
aaa
jae
mov
ja
loope
mov
or
sub
xor
push
and
popa
jnp
movntps
mov
and
and
adcb
lcall
xor
or
ja
and
test
pop
das
ljmp
jb
daa
inc
jmp
sbb
ss
jae
dec
sub
xchg
out
mov
push
adc
movsb
add
insb
ret
popf
icebp
jns
dec
adc
cmp
adc
pop
add
fmuls
stos
out
xchg
jb
adc
movsl
lret
andl
adc
dec
or
xchg
loope
mov
mov
push
cmpsb
fcmovu
mov
or
jle
pop
pop
dec
ljmp
in
je
popa
push
or
jmp
movsb
nop
aaa
imul
jecxz
jns
into
dec
insl
mov
inc
mov
xor
cwtl
iret
daa
push
fwait
imul
push
jmp
adcb
xchg
xchg
test
xchg
roll
xchg
or
je
je
cmp
or
add
fdivl
sub
inc
sbb
adc
aad
iret
pop
or
sbb
dec
cmpb
fidivl
fdivs
xchg
outsl
mov
pop
mov
pushf
lods
xor
es
or
sub
jne
nop
sbb
jae
push
add
adc
sbb
lods
pop
insb
push
into
sbb
lods
and
cli
dec
jl
and
push
bound
jae
jbe
mov
add
sub
pop
bound
stos
fs
pop
enter
adcb
cli
jo
add
or
adc
xchg
cmc
mov
pop
div
add
push
push
scas
jae
sbb
adc
hlt
jbe
push
addr16
lahf
xor
test
or
mull
mov
xchg
dec
in
push
inc
xor
adc
addr16
and
mov
or
xchg
ret
sub
imul
sub
adc
jbe
mov
push
or
inc
xchg
aad
or
int3
sbb
ss
sti
add
add
mov
xorb
arpl
pop
and
ss
xor
push
fidivl
sahf
loope
or
mov
ret
adc
adc
pop
adc
cmp
or
pop
sti
xchg
sbb
movsw
jmp
pop
enter
push
cmp
lods
adc
inc
adc
ret
push
pusha
ja
dec
mov
add
das
je
dec
adc
xor
sbb
cli
pop
imulb
adc
pop
push
rcll
dec
cwtl
dec
stos
sbb
add
int
xchg
inc
std
push
lret
ret
sbb
loop
push
xchg
mov
insl
aaa
rol
add
in
sarl
aam
sub
push
push
sbb
sub
frstor
test
jns
aam
aas
pop
mov
xchg
cmpsl
addr16
cmp
out
jg
imul
dec
es
push
data16
mov
mov
hlt
inc
dec
in
xchg
sub
faddp
xor
and
mov
in
sub
cld
adc
stos
xchg
rdmsr
or
dec
sbb
xchg
lcall
or
pop
dec
adc
and
dec
pop
bound
or
xchg
test
dec
mov
pop
and
and
xchg
jbe
gs
cs
jno
inc
jb
cmp
es
je
xor
out
xchg
popf
lds
push
incb
xchg
and
push
or
test
dec
fiaddl
fnsave
adc
rolb
dec
movsb
pushf
pop
adc
jmp
mov
pop
fistpll
jo
dec
push
pop
sbb
pop
fbstp
jno
lret
pop
cmp
dec
scas
pop
sub
js
dec
jne
xchg
shll
dec
mov
jne
jle
push
or
cld
adc
lcall
mov
cmc
inc
fsubrs
cmp
pop
imul
pusha
add
sbb
insl
pop
push
int
movsb
or
mov
movsl
pop
in
les
mov
cld
test
imul
inc
pop
sub
ficompl
lret
test
lret
out
stc
jge
and
std
jns
fldcw
out
and
fcomi
lds
push
pop
adc
mov
xor
outsb
stos
inc
or
rcl
call
add
inc
push
adc
mov
xchg
xor
mov
mov
inc
stc
jecxz
dec
inc
xchg
data16
std
sub
int
and
inc
mov
dec
mov
cs
lds
out
ss
insb
lret
push
addr16
add
push
or
push
jae
sub
sub
add
push
loopne
jle
ja
sbb
jns
ss
aas
repnz
ficoms
iret
cwtl
jnp
cmp
subb
push
clc
dec
xchg
sub
add
pushf
and
adc
data16
sbb
popf
aam
scas
cwtl
dec
xor
xchg
cmp
aad
int
ret
jl
fstps
dec
addr16
sub
cmp
mov
and
cmpsb
fs
js
sub
dec
adc
and
daa
fs
mov
jne
lods
les
xchg
rcll
test
or
insl
xor
arpl
dec
mov
in
jmp
out
mov
cmp
add
add
outsb
movsb
test
and
jns
aam
cli
push
es
and
and
es
or
add
and
mov
or
and
fists
aaa
call
outsb
jo
and
add
popa
cs
subl
jg
call
mov
repnz
cwtl
sbb
sub
xor
mov
add
xor
add
in
and
or
push
int3
mov
sbbb
adc
and
jnp
pop
or
cmpl
sbb
pusha
aaa
sub
insb
adc
pop
cmp
xchg
inc
testl
adc
pop
push
inc
sub
add
pop
mov
or
push
pop
inc
sub
dec
sbb
jg
add
cmp
sub
imul
gs
scas
fs
cwtl
dec
push
xor
call
push
mov
jbe
mov
push
xchg
popa
push
scas
leave
adc
fs
push
shlb
push
dec
push
mov
jmp
dec
sub
jo
jbe
and
subb
mov
lock
mov
pop
and
das
xchg
sub
mov
loope
xchg
mov
scas
loop
in
les
fs
pop
adc
ja
dec
and
pusha
inc
mov
ret
inc
inc
ja
mov
push
push
pop
sub
xchg
sarb
cmp
movsb
jne
repnz
xchg
mov
jnp
mov
insl
bound
loop
movsb
lock
out
xchg
mov
push
movsb
xor
pop
jle
sub
xor
cmp
lahf
push
pop
pop
mov
jmp
addps
mov
and
sub
dec
les
rcr
test
jno
dec
in
test
call
nop
lds
outsb
jae
xchg
mov
push
sahf
adc
xor
push
or
xor
pop
push
ror
inc
xlat
sti
jmp
mov
dec
push
xchg
sub
jb
inc
test
inc
add
jnp
dec
dec
cmp
add
pusha
push
push
pop
cs
pop
push
cmp
or
inc
push
add
outsl
sub
jne
inc
xor
jbe
lret
in
mov
insl
test
stc
pop
in
add
ss
idivb
popl
cmp
push
sbb
sbb
ss
imul
fwait
cmp
and
mov
adc
jns
dec
push
sbb
adc
rcrl
pusha
sub
dec
inc
or
pop
push
cmp
adc
dec
mov
push
popa
test
ss
popa
jo
sbb
adc
push
cli
add
inc
mov
cmp
add
ret
lds
mov
or
shlb
sbb
dec
dec
outsl
inc
in
inc
push
rcr
lock
xchg
cmp
cmp
mov
les
dec
or
pop
mov
popf
dec
fwait
push
popa
inc
inc
or
sub
pop
cmp
les
lcall
mov
nop
adc
adc
js
sahf
push
ds
cmc
and
inc
cmp
mov
cmp
daa
dec
jecxz
jbe
xlat
mov
and
adc
lret
sbb
cmp
scas
jo
fistpl
flds
popa
lock
shl
rolb
cmp
adc
sbb
loope
arpl
push
or
es
sub
xor
pop
addr16
jae
fs
in
dec
mov
sbb
mov
cwtl
popa
shl
inc
lods
and
push
inc
dec
bound
add
rorb
les
sub
inc
pop
xchg
andb
and
mov
sub
xchg
add
jns
xchg
dec
imul
inc
xor
pop
test
out
shl
jae
pop
jge
rcrl
xlat
adc
adc
cmpsb
icebp
fnstsw
sub
mov
movsl
adc
fstpl
cltd
daa
int
ds
icebp
cmpl
xor
jnp
shrl
cltd
inc
adc
adc
jae
mov
add
xorb
push
int
xor
test
add
jge
push
mov
aaa
jmp
dec
sub
jae
adc
jns
mov
pop
jbe
pop
and
int
test
ret
add
add
inc
mov
pop
add
cltd
dec
inc
lock
mov
push
fisubrl
adc
lcall
sbb
pop
rclb
mov
cld
subb
cwtl
insl
fadd
rclb
subl
xor
clc
xor
aas
push
cmp
mov
push
fwait
push
adc
adc
xchg
xchg
test
xchg
fucomip
or
jno
cli
sbb
xchg
add
inc
or
push
mov
jmp
sub
adc
adc
jl
cmp
je
xor
push
add
cmp
jl
lret
in
repnz
orb
dec
push
je
loop,pt
sbb
in
pop
std
and
je
push
fldl
inc
add
jmp
aas
and
mov
or
pop
rep
and
aaa
push
push
out
scas
jmp
inc
sub
pop
dec
cmp
sbb
push
or
dec
cmp
add
nop
mov
add
clc
add
lods
sbbb
shlb
mov
lods
adc
aaa
push
mov
fistl
dec
in
mov
push
enter
adcb
push
adc
inc
insl
adc
out
push
xchg
stos
add
add
testb
push
adc
jo
aam
mov
inc
sbb
nop
aam
not
add
icebp
inc
addb
lea
jp
adc
adc
das
xchg
cld
adc
xorl
xchg
lods
stc
dec
mov
jp
xor
push
xchg
jbe
shll
popa
mov
lds
daa
loopne
push
test
add
cwtl
dec
femms
or
cmp
int
pop
test
sub
push
jmp
mov
fisubrs
cmpsb
leave
test
and
push
push
hlt
loop
rcrb
cmpb
adc
lds
jno
xor
pop
mov
enter
call
dec
insl
mov
addr16
cs
inc
jge,pn
fnstcw
jnp
es
fs
xchg
xorb
push
add
cld
push
cvtdq2ps
pop
pop
divb
sub
add
sbb
add
pusha
xor
lea
loop
adc
pusha
rcrl
out
iret
fwait
pop
call
adc
test
in
mov
popf
dec
and
and
inc
das
and
sbb
mov
call
mov
js
stc
inc
aaa
and
fs
pop
arpl
add
negl
subb
mov
ror
dec
push
cmp
daa
imul
add
cltd
and
mov
push
jecxz
push
add
pop
inc
jmp
and
mov
inc
sub
and
or
pop
mov
xchg
xor
into
cmc
mov
and
cltd
jo
xchg
or
nop
out
mov
and
or
sbb
jmp
sahf
pop
add
or
xor
scas
xchg
daa
mov
ret
xor
lcall
sub
xor
inc
lcall
iret
inc
mov
imul
fs
inc
pop
cmp
jl
test
mov
ljmp
pop
enter
mov
mov
adc
lret
rorl
xchg
pop
push
fs
div
arpl
or
adc
mov
mov
or
cmpsl
xor
jnp
shl
jl
mov
testl
xchg
cmp
pop
add
aaa
aam
addb
je
lret
inc
addr16
dec
int
mov
add
inc
xchg
and
aaa
push
cmpsb
mov
add
insb
cld
fwait
in
pop
sbb
pop
or
dec
dec
sbb
outsb
ja
aas
arpl
xchg
pop
jl
mov
stos
bound
mov
es
lock
push
bswap
dec
aas
inc
lret
sbb
mov
movl
test
test
adc
and
pop
dec
mov
sub
cmp
ds
or
mov
jge
leave
in
cmp
je
adc
jno
xorl
out
loopne
dec
jo
dec
or
mov
rclb
repnz
xor
sbb
adc
inc
xor
xchg
push
and
mov
gs
lahf
into
ret
inc
mov
and
cmp
lcall
shlb
xchg
icebp
jge
inc
or
sarb
outsl
inc
and
adc
rolb
inc
pushf
inc
scas
sub
mov
add
mov
jno
fldz
stos
pop
sbb
adc
push
add
sti
nop
icebp
or
push
sub
push
inc
adc
orb
cmpsb
loop
das
dec
lock
mov
nop
or
jg
cmp
pop
in
mov
scas
stos
clc
in
or
scas
aas
dec
cmpsl
ret
scas
xchg
hlt
out
inc
and
dec
inc
test
pop
mov
adc
pop
cmp
pop
jno
mov
mov
pop
xor
sbbl
and
mov
add
pop
sbb
shr
adc
pop
jg
sbb
rcrl
xchg
sbb
cltd
mov
cmp
js
cltd
push
fsubs
jmp
cltd
sbb
jge
roll
sbb
insb
xor
clc
add
jne
dec
mov
xor
aad
jle
xor
xor
mov
jg
mull
inc
ja
test
mov
stc
inc
and
push
or
adc
or
cmc
fwait
mov
adc
mov
es
and
outsb
mov
add
aam
ss
mov
xchg
test
pop
minps
shl
rorb
pop
push
push
add
aaa
or
ja
push
cld
jmp
cmp
adc
sbb
add
aas
adc
cwtl
push
lds
stos
sbb
and
ret
fists
adc
sti
xchg
inc
inc
inc
sbb
mov
leave
stos
ret
je
xchg
mov
and
and
in
loopne
cwtl
ret
pop
or
pop
leave
pusha
mov
ljmp
cltd
dec
scas
jb
outsb
push
pop
rorl
inc
or
inc
aaa
dec
pop
mov
and
testb
add
lds
xchg
inc
ficoml
nop
xor
aas
shr
mov
adc
xor
hlt
push
fldcw
pop
cmpl
sbb
fstps
and
xchg
mov
pushf
data16
in
xchg
ss
jbe
adc
pusha
imul
inc
xchg
adc
adc
mov
pop
add
test
inc
rorb
mov
bound
in
insl
adc
movsb
sub
je
jbe
popf
mov
ds
inc
pop
pop
cmp
lahf
out
aad
ja
fsts
cld
cmp
mov
xchg
bound
mov
outsl
ret
arpl
sub
pcmpgtw
icebp
add
inc
mov
fscale
sub
pop
cmp
push
shlb
push
xor
movsl
roll
push
mov
ret
dec
add
or
jecxz
xchg
push
lods
inc
push
jne
pop
hlt
sbb
push
add
pop
test
or
jns
pop
inc
insl
daa
insb
ja
cmp
sub
lahf
mov
lock
bound
mov
xchg
push
jge
inc
inc
addl
fcmovbe
pop
hlt
pusha
adc
xchg
jge
jl
fbstp
into
out
adc
add
sbb
xchg
xchg
sbb
outsb
adc
ss
pusha
popa
mov
fbstp
adc
int3
call
fsubrl
cmp
cmp
adcb
sub
xchg
push
jle
pop
dec
movl
sub
sbb
aas
loopne
cmpsb
popf
xlat
rcr
jo
sbb
cwtl
jne
loopne
pop
jbe
dec
loope
bound
test
nop
stos
xchg
push
jne
out
fcoml
sub
dec
inc
sub
push
loopne
cmpsl
mov
xor
addb
pop
adc
test
adc
add
sarl
xchg
pop
inc
inc
jp
mov
data16
std
push
leave
jns
add
stc
mov
pushf
mov
mov
pop
into
loope
pop
push
test
mulb
mov
fistl
mov
popf
jb
aas
ss
xchg
lret
mov
add
push
pop
push
ljmp
jge
xor
dec
sbb
ffree
pop
jge
cs
cmp
rolb
pop
mov
lods
fwait
movl
and
and
pop
xchg
fstl
dec
in
xchg
dec
push
mov
cld
or
das
out
or
xlat
bnd
or
mov
popa
jmp
pop
pop
mov
imulb
loop
dec
jae
and
or
or
jge
inc
sub
or
xor
roll
faddl
scas
daa
lret
cltd
inc
sub
xchg
bound
pushf
push
xor
and
shrl
sub
xlat
lods
pop
jnp
dec
jle
push
les
add
sub
sub
sbb
cs
aam
or
sub
test
dec
out
sbb
hlt
mov
jnp
ret
push
roll
inc
push
int
pop
push
out
mov
ror
jne
insl
popa
cmc
push
jnp
cvtps2pd
jge
sub
sub
mov
arpl
loope
jns
xor
js
jae
sbb
xor
mov
mov
shlb
push
std
js
loop
mov
sbb
lret
fldcw
loop
stc
jle
lock
data16
sbb
sbb
pop
nop
pushf
lds
popa
fsubl
int3
mov
push
adc
inc
adc
repz
cltd
mov
sub
cmpsl
ss
xchg
leave
ret
sub
pop
gs
fistpll
fstps
jmp
das
mov
pop
adc
inc
jo
sahf
fs
cmp
mov
std
xchg
popf
push
pop
and
jb
ret
in
stos
sbb
stos
sahf
addr16
mov
and
mov
std
push
push
mov
leave
jmp
jle
push
scas
jns
stc
or
bound
bound
pop
jno
int3
push
and
cmp
out
int3
ror
jne
sub
adc
xor
dec
sub
or
in
into
cmp
xor
push
jb
cmp
jmp
cld
in
stos
push
xor
or
std
cltd
xchg
out
push
push
inc
lahf
dec
xchg
addr16
sbb
xchg
and
xchg
jne
jo
mov
repnz
sub
hlt
xlat
jp
and
xor
leave
mov
push
push
pop
xchg
xor
outsl
aad
andl
or
push
push
mov
sub
adc
mov
mov
daa
or
ljmp
xor
cli
and
stos
fwait
cli
jge
adc
sub
ds
mov
dec
or
and
cmp
sub
lahf
or
flds
and
and
add
xor
or
aaa
dec
addr16
xor
nop
sbb
sub
int3
dec
pop
mov
mov
leave
add
and
pop
test
cmpsb
ret
shll
add
imul
addl
cmp
movsl
lret
add
iret
inc
dec
aaa
xor
lret
and
xchg
xchg
cmp
inc
in
xor
sahf
mov
mov
or
cmpl
push
lods
mov
rolb
add
jae
fwait
ret
inc
clc
or
lret
bound
sub
loop
dec
dec
mov
pop
into
pop
mov
jbe
ret
pop
adcl
popfw
enter
push
dec
push
add
pusha
repnz
lret
es
dec
push
sarl
push
add
in
adc
xor
mov
adc
fwait
dec
sti
pushf
jp
cmp
xor
pop
mov
cltd
inc
inc
push
push
xor
fwait
cmp
pop
movsl
outsb
xchg
sbb
jae
or
adc
stos
repnz
test
sbb
test
cmp
adc
mov
sub
cmp
sti
hlt
js
sbb
mov
ret
sti
and
dec
dec
enter
push
push
aas
in
stos
call
mov
popa
xor
jle
dec
sbb
enter
jb
lock
aad
out
sbb
jmp
sbb
insb
xchg
out
or
push
fistpl
leave
cmpl
push
ja
sub
jbe
popf
sub
cmp
cmpl
pop
cld
pushf
push
movsl
loopne
add
and
lret
and
push
cmp
in
fnstsw
push
lea
sbb
cmpb
das
mov
ret
add
and
jmp
scas
mov
mov
jmp
sub
dec
inc
and
aaa
cmp
fldl
or
mov
sahf
xor
mov
mov
es
xchg
add
push
pop
cmpsb
andl
in
and
icebp
leave
testb
pop
and
dec
lret
mov
mulb
dec
jmp
push
add
scas
leave
dec
imull
inc
xchg
jb
or
sbb
lcall
push
jp
pop
cmp
mov
push
jp
dec
lods
je
mov
adc
stos
dec
mov
xor
or
adc
push
xchg
repnz
inc
nop
pop
cs
fucomp
cmovle
incl
adc
fisubs
ja
xchg
popf
dec
jb
mov
jo
jo
bound
ret
xor
mov
xchg
in
fwait
xor
xlat
and
lret
sbb
testb
jb
adcb
ja
pop
iret
adc
fdivs
dec
test
mov
sub
and
sarl
loope
or
mov
pop
sbb
ret
cmp
lea
jmp
and
icebp
and
jne
iret
jecxz
add
stos
repz
aas
inc
mov
mov
xor
shrl
cltd
aam
cs
aad
adc
movsb
sarl
cmp
push
decl
inc
ss
jns
jle
jge
jmp
and
sti
gs
fdivl
pusha
jmp
push
mov
insl
popa
lret
pop
cmp
and
out
xchg
ja
ljmp
cmp
ja
push
xchg
ss
pop
cmp
mov
push
insl
mov
cs
bound
sbb
and
mov
sub
stc
adcb
push
xchg
jns
xlat
into
add
add
sub
shll
shr
pop
aad
xchg
aas
mov
pop
add
das
jl
repnz
jecxz
orl
call
cmp
cmpsb
xor
hlt
stos
mov
fisubrl
pusha
mov
jge
jns
das
adc
sub
test
inc
out
mov
or
mov
cli
push
or
pop
or
cmp
cwtl
dec
aaa
add
and
sub
nop
das
dec
daa
xchg
sbb
dec
jno
add
int
push
test
bound
cmp
stos
lea
data16
sub
rcr
stos
push
sahf
mov
insb
clc
and
push
adc
pop
push
mov
push
push
inc
mov
lea
push
jmp
inc
adc
jge
push
daa
adc
sub
add
mov
adc
stc
lods
or
icebp
adc
mov
inc
sub
xchg
sbb
jmp
sar
out
mov
pop
push
pop
mov
and
cmpb
jnp
into
add
pusha
pop
dec
xor
bound
inc
aaa
dec
pop
es
ja
pop
loop
jge
jbe
adc
enter
inc
mov
mov
pop
ret
out
mov
sbb
xor
and
aaa
xchg
negl
add
fnstenv
pop
mov
mov
cmp
add
push
mov
pop
and
mov
dec
mov
idivl
popa
gs
push
mov
inc
jle
sbb
jl
push
repz
pop
popa
mov
push
xchg
adc
sahf
xor
sub
add
lcall
jl
out
dec
jmp
popa
push
insl
cs
in
push
idivl
ret
fnstcw
push
add
pop
xchg
add
xor
cmpsb
jl
in
mov
mov
push
aas
jb
insl
xor
mov
sbb
push
xrelease
jp
cmp
fists
or
adc
jo
insb
lock
pop
mov
fcomps
cmp
sbb
in
adc
xor
sahf
lock
pop
mov
mov
adc
adc
je
and
in
jge
pusha
ljmp
or
pop
and
inc
ret
mov
push
push
or
inc
adc
ja
and
pop
dec
push
jmp
mov
dec
in
mov
sub
stc
insb
mov
sarl
dec
add
repnz
jl
jp
out
in
testl
adc
cmc
rcll
out
inc
cmp
push
nop
sahf
sahf
inc
out
notb
mov
enter
js
inc
sub
insb
inc
pop
in
dec
adc
push
cmp
inc
push
gs
and
sub
je
aaa
xchg
test
cmp
insl
flds
pop
dec
xor
push
add
sbb
sahf
inc
lret
dec
pop
ljmp
push
jp
pop
cmp
dec
stc
repz
sub
push
insl
jo
cmc
sbb
dec
sti
fisttpl
imul
xchg
loopne
mov
add
decb
out
cmp
lods
test
push
jl
sub
das
imul
inc
stos
arpl
cmp
sahf
adc
scas
xor
in
pop
enter
mov
xor
mov
xchg
sbb
notl
lret
icebp
scas
les
mov
aas
inc
mov
in
ret
xlat
cmc
jb
shrl
mov
or
icebp
fwait
inc
imul
push
adc
setne
mov
or
xor
pop
sbb
xor
leave
adc
je
mov
inc
fdiv
and
loopne
mov
mov
cmp
mov
xor
mov
sbb
and
loopne
dec
ds
enter
outsl
jns
hlt
sub
negl
test
cmp
lock
sbb
mov
xchg
mov
flds
out
pushf
sub
push
xor
shrl
scas
and
sub
sub
or
jmp
adc
call
mov
sbb
dec
cmp
rcr
sbb
add
inc
sbb
add
jno
adc
je
and
cli
cwtl
sbb
stos
xchg
in
sbb
fcmovnbe
or
leave
sub
stos
loop
dec
lret
pop
adc
ja
jo
jno
xor
test
or
xchg
or
mov
pop
inc
mulb
xchg
stc
lds
movsb
into
dec
push
jmp
push
mov
aad
xor
xchg
std
test
enter
inc
movsb
adc
aam
inc
sbb
cli
lret
mov
and
hlt
adc
xor
xor
fsubr
push
xor
dec
pop
stc
inc
divl
pusha
pop
stos
add
fcoml
repnz
xor
fs
loopne
mov
and
out
repz
leave
adc
in
or
insl
push
iret
adc
push
es
pop
add
int3
ficomps
jle
test
pop
les
jae
sub
div
movsl
out
hlt
pop
dec
fcompl
sbb
mov
pop
out
insb
jae
and
dec
adc
pop
xchg
roll
inc
scas
dec
lds
ret
mov
shr
inc
mov
repnz
add
decl
add
push
jne
fwait
mov
mov
enter
iret
sbb
and
dec
cwtl
jle
js
xor
mov
sarl
jmp
aad
xchg
bound
xlat
popa
shrl
rcrl
out
addl
bound
pop
mov
and
std
and
xchg
mul
scas
xchg
xchg
test
sbb
fdivl
push
xor
adc
cli
xchg
sbb
fldt
push
jp
nop
divb
push
ljmp
movsb
pop
mov
insb
inc
adc
or
ljmp
xor
add
add
pop
lea
xor
xchg
inc
cmc
sti
push
in
data16
imul
mov
lret
iret
nop
scas
jmp
loopne
push
imul
cmp
push
sbb
push
in
push
std
inc
outsb
test
movsb
out
adc
shrb
jg
dec
shl
loope
fmuls
mov
arpl
std
outsb
sbb
stos
and
cli
jns
jle
push
dec
test
mull
push
popf
js
pop
pop
xchg
sbb
xchg
inc
sbb
cmc
in
xchg
mov
enter
in
in
jb
xchg
aas
cltd
dec
cmp
mov
add
jbe
mov
mov
mov
jbe
xor
inc
aas
aaa
xor
subl
or
push
cmp
add
icebp
inc
xor
in
jp
fistps
push
loop
xor
mov
sub
xlat
insb
shll
jns
cli
aam
in
out
xor
xchg
xchg
xchg
movzwl
add
popf
dec
sub
out
jp
and
mov
leave
or
mov
sub
mov
push
in
xchg
adc
mov
pop
cmp
mov
aam
ja
pop
dec
mov
insb
hlt
cmpsb
mov
dec
xchg
hlt
loope
jno
rcrb
adc
jge
mov
or
dec
cmc
loopne
mov
sbb
js
dec
add
mov
dec
inc
test
mulb
dec
cmc
push
inc
subb
clc
cltd
sbb
mov
aad
xchg
in
lock
pushl
jb
push
jae
push
xor
push
fs
enter
jp
xchg
jle
popf
push
pop
leave
imul
mov
loop
sbb
stc
or
sbb
notb
cmpsl
jns
sub
push
jo
sbb
mov
test
fcmovnb
add
pop
or
out
add
mov
xor
sti
jo
and
jecxz
add
cmp
lods
js
cmp
mov
in
xor
repz
ret
fstpl
mov
add
adc
add
stos
mov
sub
dec
pop
mov
adc
aaa
sbb
xor
adc
sub
dec
in
mov
iret
dec
cmp
fsts
inc
lea
xor
add
iret
notb
jae
insl
jle
jnp
mov
jge
insl
sbb
dec
xchg
xchg
inc
adc
loope
adc
pop
mov
shlb
add
insb
push
xor
push
xchg
push
leave
lock
adc
fiadds
cmpsb
mov
push
into
cltd
int
xor
insl
dec
addl
push
adc
jnp
dec
push
repnz
dec
dec
fucom
sbb
shr
aam
mov
fnsave
or
int3
jns
push
xor
mov
pop
and
pushl
jge
inc
insb
inc
sub
dec
xchg
rclb
pop
xor
xchg
aad
sbb
aaa
jecxz
sbb
mov
jecxz
dec
cmp
scas
push
pop
icebp
adc
sub
and
dec
daa
sub
popa
int3
push
add
mov
movsl
xor
or
daa
adc
push
fldenv
or
aad
jnp
lds
lea
scas
test
pop
stc
rcr
xor
inc
sbbl
add
pop
jb
daa
jno
jno
lods
inc
int3
cmp
pop
aad
or
sub
xorb
loopne
cmc
lcall
push
cmp
lds
xor
mov
mov
inc
mov
sti
dec
rorb
and
cmp
push
decl
xor
mov
mov
xor
cld
sub
sbb
mov
cld
mov
push
test
int
sarb
dec
add
arpl
mov
call
pop
and
mov
xchg
loop
xchg
call
pop
test
push
cmp
pop
push
mov
pop
sbb
imul
adc
ret
lods
and
int3
stc
arpl
jne
mov
jne
out
xor
add
or
aam
popa
sbb
loop
adc
and
cmp
out
inc
das
hlt
inc
pop
fcomp
inc
loope
loope
popf
jae
and
data16
scas
dec
out
xchg
dec
adc
jl
or
stc
adc
xchg
xor
adc
in
and
add
dec
add
add
out
flds
rclb
les
sbb
xor
pop
into
rsqrtps
fldenv
and
cwtl
imul
dec
rorl
sbb
add
ja
or
cmp
in
push
lret
push
cmp
in
mov
xor
add
dec
sarl
out
jecxz
ljmp
sub
testb
divl
cmp
adc
lock
dec
dec
mov
add
push
loop
add
out
popa
dec
leave
loopne
adc
shlb
fldt
sbb
and
xchg
and
stc
lock
or
mov
pop
cld
insb
arpl
cmp
mov
fucom
jmp
and
xchg
xchg
and
pop
out
mov
lret
notl
mov
jp
xor
pop
out
jg
imul
jne
test
dec
pop
adc
dec
addr16
icebp
ljmp
ljmp
cmp
in
repz
sub
test
imul
lret
out
stos
jae
loope
and
sbbl
lds
dec
movsl
mov
test
movsl
dec
inc
xchg
sahf
test
or
loope
push
dec
cld
dec
pop
or
pushf
add
push
fstpl
xchg
and
dec
in
or
insb
cmp
push
iret
cmp
repnz
mov
jne
cmp
sub
and
daa
dec
ss
push
jo
mov
add
mov
std
lahf
rolb
bound
in
adc
sub
or
test
aaa
lods
inc
push
cmp
sbb
in
push
pushf
imul
repnz
movsl
pop
lret
loopne
les
xor
cmp
jge
rcll
popa
and
int
dec
push
xor
lods
in
mov
imul
aaa
call
xchg
mov
xor
and
je
mov
ljmp
sbb
loope
adc
or
jb
pop
inc
pop
mov
pushf
repnz
push
adc
sub
insb
divb
outsb
xor
or
and
cmp
sub
arpl
addr16
mov
lods
repz
adc
mov
jne
insw
cmp
cmc
inc
jo
adc
push
xor
arpl
xor
mov
lods
fs
push
iret
jp
adc
movsw
inc
xchg
xacquire
cmp
pusha
insl
sbb
add
jae
insb
jnp
mov
inc
pop
imul
sahf
adc
push
enter
cmp
cmp
adc
dec
xchg
jge
in
arpl
mov
rcl
xchg
mov
in
push
xor
lahf
int3
sbb
in
mov
push
ss
cmp
imul
mov
cld
std
cli
xchg
fdivr
inc
clc
cmp
pushf
inc
sbb
sarl
hlt
lahf
cmp
xor
mov
pushf
inc
call
cmp
call
ljmp
sub
dec
or
xchg
or
xor
adc
lret
adc
arpl
mov
and
inc
lock
xor
sbb
jne
add
pop
pop
inc
inc
das
cmp
or
push
cld
push
mov
xor
or
and
push
movsl
cmp
cli
push
hlt
inc
rorb
cld
popf
nop
add
inc
add
xlat
inc
es
idivb
cmpsl
dec
inc
and
imul
cltd
insl
hlt
leave
jo
imul
and
call
ret
sub
or
cmpsb
insb
add
jmp
rorl
rcrb
fiadds
mov
xor
and
pop
or
mov
mov
dec
adc
mov
sbb
and
fisttpl
mov
add
push
xor
cmp
cmpsb
push
pop
ret
jg
clc
test
add
xchg
adc
popf
icebp
jb
jns
adc
je
das
push
ss
popa
xor
icebp
mov
inc
add
nop
push
add
adc
jb
mov
xor
push
mov
ret
insb
pop
ret
pop
leave
addr16
dec
xor
jecxz
sahf
test
adc
sub
mov
jecxz
mov
cmp
data16
and
dec
push
or
xor
push
pushf
dec
mov
and
add
mov
mov
xor
push
jae
and
jp
mov
imul
add
adc
push
xor
sbb
mul
cld
and
rorl
ret
mov
push
mov
mov
pop
cmp
xchg
push
dec
jmp
les
in
xchg
int3
mov
jbe
add
sarl
lods
std
icebp
jns
adc
fs
je
sub
lcall
test
jmp
gs
aam
and
les
push
push
stos
inc
mov
mov
dec
clc
xchg
adc
rcrb
lods
add
xchg
stos
es
and
sbb
lods
shl
xor
cmpb
mov
mulb
lds
test
jmp
xor
mov
pop
fldl
push
cwtl
gs
mov
repz
inc
jmp
es
ret
bnd
xchg
jbe
pop
sub
out
inc
int3
mov
xchg
mov
pcmpeqd
xchg
packssdw
frstor
mov
xor
push
push
mov
mov
cld
add
test
mov
out
cmp
pop
jns
mov
jp
adc
push
xchg
cmp
add
mov
in
pop
fdiv
lds
sub
gs
sub
mov
push
sub
add
out
aas
xchg
and
std
mov
and
mov
xor
cmp
call
or
xchg
push
add
push
pop
adc
pusha
jb
jge
lret
fwait
outsl
pop
add
fs
pusha
cmp
arpl
xchg
hlt
dec
sub
jecxz
dec
dec
adc
int
sub
pop
mov
test
xor
into
call
pop
adc
or
jae
adc
aaa
fs
add
push
xchg
mov
jge
and
das
cld
enter
inc
sub
fldl
push
push
std
sub
push
orb
mov
add
pop
mov
dec
xchg
loopne
js
mov
icebp
aam
sub
push
sub
lea
mov
xbegin
sbb
and
lret
test
outsl
mov
pop
dec
and
inc
rcll
adcl
cmp
xchg
in
lea
cmp
aaa
jmp
cmc
cmp
push
rcrl
enter
popf
stc
jbe
and
jne
inc
mov
shrl
mov
fs
aad
ret
cli
loopne
push
pop
ja
adc
add
shrb
and
push
int3
push
movsb
fwait
aam
cmp
mov
and
and
dec
and
or
adc
das
push
mov
or
aas
sbb
ja
push
xchg
loope
imul
mov
or
call
sub
xor
mov
test
bound
hlt
rorl
sbb
jmp
mov
cmpb
cltd
dec
mov
lods
loopne
js
sub
cwtl
jne
inc
testb
std
mov
push
jbe
mov
jo
je
jle
arpl
adc
out
jns
mov
mov
aam
or
pop
push
ret
loopne
or
cmp
push
ret
mov
mov
adc
push
jbe
in
insl
repnz
jp
fsts
jae
rcrl
xor
add
mov
sbb
add
test
or
fadd
xchg
cwtl
mov
mov
jle
add
fisubrs
xor
and
icebp
sub
aas
adc
xchg
add
mov
lods
cmp
cmp
pop
stc
loopne
or
jl
roll
dec
pop
or
push
fcom
movsl
ret
cs
xchg
xor
inc
cmpsl
adc
mov
inc
jbe
gs
outsl
push
push
lahf
test
clc
xchg
dec
pop
inc
inc
into
cmp
mov
lret
adc
shlb
adc
mov
fs
and
imul
sbb
ljmp
jmp
lods
xor
scas
in
int
shrl
xor
push
test
mov
dec
or
testb
and
loopne
jecxz
add
movsl
mov
or
xchg
sub
dec
sub
mov
addr16
adc
push
adc
add
in
pop
mov
push
outsl
ss
sbb
mov
lret
adcl
jae
inc
dec
mov
call
mov
cmp
mov
mov
jp
sbb
scas
sarb
ljmp
jle
test
outsb
or
jecxz
lods
pop
mov
scas
pop
inc
into
cmp
or
outsb
repz
lds
jne
and
xchg
cmpsb
repz
test
or
loop
inc
sbb
add
xchg
xor
popf
sub
int
xchg
dec
jae
shll
sbb
popf
imul
scas
cmc
jge
jl
ret
dec
outsl
dec
add
inc
sub
xchg
lods
push
loop
leave
notl
sub
cmp
sub
shrl
ja
mov
fdivr
and
and
pop
mov
fcoms
pop
enter
xorl
add
and
iret
adc
jno
sbb
mov
lahf
jns
enter
cli
out
cmp
jb
mov
xlat
add
bound
sub
into
inc
les
fbld
int
and
cmp
push
lds
dec
rcl
cmp
jmp
incl
push
ss
flds
xor
ret
mov
mov
push
cmpsl
sarl
data16
mov
push
hlt
add
call
push
add
pop
in
inc
jmp
inc
mov
ljmp
ret
fiaddl
adc
mov
push
data16
sarl
pop
add
jnp
subl
adc
cmp
loope
or
pop
out
xchg
xchg
out
jg
or
fidivrl
scas
dec
mov
ret
cld
lods
mov
aas
icebp
loop
mov
loopne
adc
jmp
jl
jb
das
fcompl
or
add
mov
inc
inc
insl
cmp
xchg
inc
pop
andps
or
arpl
in
cmpl
cmp
inc
fisubs
xor
xchg
mov
out
mov
mulb
mov
jbe
mov
sbb
sub
dec
aad
adc
in
sub
mov
insb
inc
cmpsb
test
mov
lcall
out
xchg
xor
cmp
andb
dec
mov
add
pop
and
mov
jbe
inc
jbe
sbb
inc
fbld
js
mov
sbb
ds
add
mov
mov
sbb
pop
sbb
xor
mov
dec
or
int
jg
movsl
mov
outsb
cmpsb
mov
cli
sbb
cmp
call
fld
je
jle
mov
sub
aas
icebp
pop
call
cmp
repnz
dec
rorl
push
gs
arpl
mov
out
and
cmpb
psubusb
sbb
dec
sub
mov
mov
cmp
pop
in
inc
outsb
andb
push
popf
push
xorb
xorl
pop
scas
adc
scas
adc
orl
movsb
pop
lret
pop
cmpsl
clc
das
sub
shr
dec
sub
dec
jmp
and
add
lahf
aaa
xor
popa
adc
test
dec
add
and
mov
sub
lahf
ds
fildl
fcompl
outsb
mov
call
xor
movsl
dec
mov
push
add
push
push
cmp
add
cmp
pop
icebp
lock
inc
jecxz
pop
add
test
pop
add
rolb
push
imul
or
cmc
and
mov
xchg
and
mov
fwait
dec
xchg
loopne
sahf
rcrb
outsl
push
out
ljmp
push
mov
pop
or
fmul
mov
inc
or
lods
addr16
test
es
lea
lret
sbb
js
cmp
jp
mov
and
inc
pop
lock
jns
mov
inc
in
sbbb
ds
dec
ret
xchg
rcrb
stos
fs
sahf
ret
mov
gs
push
push
loopne
push
push
sub
fsubrs
jb
jl
call
pop
lock
adc
jo
cmp
in
fimuls
outsl
cltd
aad
adc
cmp
xchg
mov
stos
mov
add
add
dec
insb
in
mov
sub
adc
aam
jp
and
mov
adc
js
push
adc
sbb
outsl
clc
adcl
cmp
jge
push
dec
jbe
imul
pop
aas
outsb
jb
mov
or
and
inc
jmp
std
into
or
loopne
or
xchg
sbb
pushf
dec
rclb
add
sbb
cmp
or
fildll
cmpsl
xchg
leave
insb
cmp
ljmp
push
push
cmp
outsb
push
repnz
mov
sbb
cmc
jmp
and
sbb
fisttpl
scas
mov
mov
sub
js
xchg
in
jmp
testl
adc
lods
jns
mov
adc
cmp
lods
mov
or
fmull
rorl
fiaddl
inc
mov
cmp
shrl
mov
lret
adc
xchg
sbb
or
fimull
push
dec
ret
jl
fildll
pop
leave
adc
cmp
sbbl
adc
lret
xorl
imul
adc
jecxz,pt
and
loopne
inc
or
adc
pop
js
push
push
push
add
dec
std
adc
out
sub
aad
mov
mov
jge
int
imul
cwtl
push
out
or
xor
shll
call
ret
loopne
sti
pusha
out
lcall
push
outsl
mov
sti
xor
jbe
pop
xchg
xor
mov
fmull
inc
lock
dec
popa
sbb
inc
pushf
xchg
xchg
xor
call
pop
das
mov
inc
gs
adc
add
dec
mov
or
jecxz
cli
jo
lock
stc
pop
mov
cmp
cwtl
movsl
pop
pop
push
mov
or
sub
bound
cmc
in
adc
push
xchg
and
ss
je
mov
in
lock
jno
xor
mov
xchg
xlat
shll
shll
inc
jno
sub
aad
add
inc
and
nop
inc
arpl
sbb
xchg
or
inc
push
pusha
pusha
arpl
or
jl
roll
test
aam
das
pop
xlat
and
imul
leave
xor
lcall
sbb
adc
pop
or
pop
and
xchg
test
incl
xchg
lcall
arpl
xchg
rcrl
in
scas
psubsb
sbb
int
in
push
sarb
push
add
and
mov
dec
cld
scas
inc
xchg
shrl
fisubrl
js
shll
sbb
loope
and
xchg
xor
xchg
mov
call
sub
sub
and
outsl
jmp
pop
sbb
push
jns
adc
leave
push
in
js
pop
notb
and
insb
shlb
sahf
cmp
or
cmp
mov
iret
adc
mov
ret
push
loopne
xorb
inc
imull
push
sub
mov
test
std
jmp
dec
fiadds
adc
bound
loop
xchg
xor
cmp
pop
sub
inc
mov
cmp
jbe
dec
mov
movl
pop
cwtl
xchg
xor
adc
and
jge
xor
pop
ds
in
inc
dec
push
aaa
inc
addr16
push
or
lods
push
adc
sbb
dec
jp
add
push
cmp
pusha
cmpsl
fstpt
inc
cltd
ror
ja
mov
xchg
add
shl
cmp
sub
fwait
and
clc
or
bound
rorb
or
ret
pop
fbld
arpl
ss
jbe
mov
inc
inc
hlt
cld
add
dec
xor
daa
orb
push
sub
jo
arpl
mov
adc
shlb
insl
pop
in
loopne
sbb
jnp
dec
inc
adc
dec
push
outsb
lcall
lea
ss
xchg
lods
inc
pusha
xchg
nop
outsb
sbbl
push
mov
jmp
mov
dec
jmp
dec
ja
in
loop
adc
lods
jb
out
and
jecxz
adc
xchg
arpl
aaa
xchg
sub
ds
xor
cmpsb
push
cld
push
mov
sbb
add
aaa
not
push
mov
and
cld
sub
mov
popl
scas
dec
dec
call
lretw
lea
leave
lds
push
ljmp
adc
and
pop
pushf
lcall
out
leave
jl
scas
fndisi(8087
push
bound
ss
xchg
dec
mov
mov
push
ret
cmp
adc
jg
repnz
adc
pop
seta
cld
jns
mov
jecxz
mov
popf
je
lahf
roll
or
hlt
or
fcoms
add
sbb
imul
rclb
je
mov
ficoml
adc
lahf
push
cmp
fadds
arpl
push
mov
mov
mov
sub
popf
jno
les
out
loope
pusha
push
lahf
rorb
ret
rorl
pop
jmp
mov
xor
ficompl
loop
push
or
pop
mov
jnp
xchg
push
push
xor
sahf
fwait
cmpsb
mov
stos
push
inc
mov
mov
mov
sbb
daa
or
lock
inc
or
jne
nopl
cmp
push
xor
inc
in
cltd
lret
aaa
jg
cmpsl
call
lods
pop
push
mov
popa
xchg
outsl
out
push
jnp
clc
jns
add
or
inc
push
mov
xchg
movsl
mov
lods
or
mov
or
fnstcw
gs
je
into
jg
pop
sub
lods
add
xor
mov
mov
sub
adc
jnp
jbe
lds
adc
lret
add
mov
pminsw
lea
cltd
hlt
jns
pop
gs
add
dec
or
sbb
stc
inc
pop
pop
sbb
popa
jb
test
loopne
inc
adc
adc
movl
adc
adc
and
xchg
popa
mov
xchg
int
push
mov
jb
stos
add
hlt
cmp
and
inc
push
jge
fs
or
inc
lahf
sbb
test
test
mov
xchg
pusha
rclb
nop
inc
icebp
cmp
out
push
jb
jmp
dec
mov
jmp
adc
adc
sub
jb
and
js
arpl
icebp
inc
outsb
push
mov
cmpsl
mov
dec
mov
xor
mov
cmc
fidivrl
jno
mov
or
into
add
jnp
mov
cmp
enter
mov
push
ficomps
pop
mov
sub
xor
fwait
mov
jno
sub
inc
jecxz
pop
pushf
scas
in
pop
push
pushf
data16
clc
movsb
jp
je
mov
mov
popa
mov
xchg
shrl
lret
or
mov
xlat
push
cmp
mov
bound
daa
dec
cmpsl
leave
cld
push
jo
lods
push
xchg
cld
movsl
pusha
ljmp
sarb
test
adc
jo
int3
pop
or
lret
adc
jb
shl
lcall
sbb
adc
mov
call
cmp
mov
ja
mov
mov
xor
lret
sarl
add
sbb
cmp
xchg
add
cld
adc
cmpl
inc
cld
bound
jne
icebp
je,pt
push
imul
and
pop
cmpsl
jle
fstpt
xchg
icebp
adc
cli
adc
sub
xor
lods
mov
in
pop
lahf
dec
jle
jno
out
jno
pop
addb
inc
in
std
cmp
int
gs
xchg
push
fsts
cmp
cmp
enter
icebp
add
push
inc
jae
cmp
cwtl
outsb
sbb
fnstsw
fidivs
arpl
cmp
cmp
lahf
test
int
push
mov
or
add
push
dec
call
stc
test
sahf
adc
cmp
jg
mov
xchg
mov
aam
inc
test
ds
call
inc
pop
pushl
or
push
ffreep
xchg
and
addl
ret
call
xlat
pop
movsb
cltd
cmp
repz
or
inc
mov
xchg
xchg
adc
pop
or
inc
imul
insb
negl
push
in
dec
mov
loopne
mov
mov
seta
mov
scas
and
dec
and
sbb
in
jb
dec
jno
ret
mov
xor
add
fsubl
cmp
sbb
cmp
ss
roll
jno
int
outsl
mov
shll
iret
sbb
adc
mov
stos
inc
jl
xlat
sub
shrb
outsb
aam
mov
pop
jg
call
dec
xor
lods
loope
shll
frstor
lock
xor
inc
jo
push
fadds
push
sahf
shrb
xor
das
cmc
jbe
imul
jb
mov
inc
nop
push
mov
in
and
jns
imul
jnp
inc
or
orl
and
imul
cmp
inc
in
mov
out
pop
xchg
fstpl
rorb
xchg
or
jge
inc
fstl
jae
pusha
xchg
mov
mov
xchg
dec
sub
out
clc
insl
fnstenv
cmp
pop
adc
xchg
jae
push
xlat
daa
in
adc
ret
dec
xchg
in
sbb
push
popf
dec
adcl
pop
test
daa
mov
xchg
mov
dec
pop
mov
pop
xor
pop
je
add
and
dec
ss
add
ljmp
xchg
shlb
sub
negl
in
lods
dec
mov
addr16
test
mov
sti
xchg
or
aaa
jo
and
test
out
inc
mov
push
push
mov
push
dec
aam
cmpsb
gs
cmpsl
xor
and
push
lret
push
adc
pusha
push
push
and
fstps
test
or
push
aas
lahf
sarl
xchg
lods
adc
adc
pop
lds
jo
fsubs
and
push
dec
idivl
scas
cmpsl
xchg
lret
js
add
push
stos
daa
push
jmp
or
mov
pop
lock
mul
sub
or
mov
mov
outsb
lret
test
orb
and
sub
push
cmp
outsb
sub
adc
adc
push
sub
mov
mov
xchg
adc
adc
dec
pop
push
mov
shll
add
pop
push
and
adcl
cmp
or
jecxz
jecxz
inc
shrl
push
shrb
sbb
mov
sub
stc
pop
and
jno
xchg
push
sub
or
test
dec
sub
xchg
or
sbb
movsb
orl
sub
sub
dec
mov
xor
ss
push
mov
repnz
adc
mov
sbb
dec
in
jge
jae
adcl
movups
popf
sbb
test
xchg
testb
sub
ret
mov
jo
lock
or
icebp
sbb
add
xor
jnp
pop
in
sub
out
cli
sbb
jb
imul
clc
push
das
insb
jmp
in
repz
stc
xor
sbb
push
add
lret
fisttpll
xchg
psrlw
pop
mov
rclb
mov
adc
in
divb
sub
imul
jno
xchg
insl
mov
inc
ss
std
aam
ja
mov
aam
stc
fadds
dec
cmovne
clc
and
push
mov
out
jo
xchg
cmp
pusha
nop
cltd
or
movsb
rcll
rclb
in
adc
cmpsl
add
jne
enter
out
add
pop
test
mov
mov
xchg
stos
test
adc
rcl
mov
mov
jo
and
pop
cmp
sub
and
mov
mov
cmp
jo
push
scas
rclb
add
push
ja
jbe
in
call
jne
fcompl
or
inc
sbb
dec
xchg
xchg
jb
fstps
jne
dec
outsb
stos
jmp
and
sahf
push
cmp
repnz
mov
jo
pop
fdivs
shll
mov
push
jl
in
cmp
loopne
stos
jl
jle
push
sbb
popl
js
repz
xor
push
subl
xchg
pop
mov
fcoml
add
sahf
int
shlb
jp
cld
cmp
lock
jae
push
les
mov
xchg
add
and
inc
test
mov
outsl
and
addr16
cmp
icebp
les
cmpsb
push
and
add
inc
test
mov
dec
lcall
dec
int3
xchg
jne
mov
inc
les
pop
or
movsb
dec
push
int
pusha
or
pop
mov
inc
clc
aad
lods
inc
dec
hlt
ftst
loopne
push
icebp
xor
int
icebp
pop
loopne
scas
aaa
jne
mov
sub
rorb
adc
inc
adc
in
clc
test
inc
or
das
xor
pop
bound
lds
xor
in
shr
pop
mov
xchg
xchg
xchg
shl
ficoms
fmuls
mov
sbb
mov
into
int3
and
repnz
mov
push
lret
jg
mov
repz
arpl
mov
sub
addr16
adc
push
pushf
add
popa
call
pop
cld
add
jle
ficomps
xor
fdivl
sbb
scas
in
fdiv
mov
or
and
sub
and
or
adc
and
jne
insb
add
xchg
xor
xchg
addr16
ja
mov
pop
aam
xchg
call
add
or
adc
imul
orb
add
scas
std
orps
fsubs
jne
stos
outsl
aam
aam
fmuls
int
xchg
cmp
sbb
loop
inc
js
or
inc
cmp
sbbl
icebp
pop
sbb
push
cmp
fs
mov
test
mov
jo
cmpsb
mov
or
add
lods
xchg
roll
test
or
les
and
and
test
cmp
sbb
add
std
push
cwtl
or
sub
push
mov
push
push
sub
cmp
iret
xchg
cs
dec
enter
fsubrl
sub
daa
arpl
jne
pop
add
xchg
push
xor
test
inc
lock
imul
jmp
mov
out
inc
sbb
and
rorl
add
cld
adc
cmpsl
mov
mov
adc
call
and
lock
mov
adc
inc
gs
push
dec
and
xor
inc
ret
mov
cmp
cmp
and
sbb
jmp
imul
jmp
sub
jo
sub
and
add
rorl
in
lods
popf
inc
jns
mov
dec
cli
sahf
cmp
mov
fs
mov
roll
bound
or
and
daa
test
push
pusha
and
decb
into
out
test
inc
push
int3
xlat
call
xchg
xchg
test
xchg
cltd
or
dec
push
cld
das
int3
xor
std
xchg
push
negb
and
add
out
mov
movsb
push
mov
sub
pop
xchg
mov
cmpsb
add
out
sti
mov
cmc
lods
or
or
imul
or
and
aaa
jg
push
pop
cmp
dec
rcll
inc
stos
movsl
mov
cmp
adc
push
cmp
mov
cmp
sbb
aad
fcmovne
jnp
cmc
cmp
test
dec
cmp
adc
mov
sbb
xchg
fists
enter
mov
jns
pop
xchg
mov
lcall
mov
into
imul
daa
test
cmpl
fcoms
lcall
divb
fmul
imul
cmpl
test
stos
fsubrl
push
jae
adc
movl
pop
or
or
je
mov
add
mov
les
mov
cltd
test
mov
push
out
arpl
les
outsb
jg
fstl
add
pop
sbb
mov
shlb
shll
xchg
jl
mov
cmc
inc
int3
test
mov
and
les
in
xchg
xchg
push
xor
loop
in
inc
fidivrs
inc
add
xchg
call
les
or
mov
rcll
add
rolb
repnz
xchg
mov
pop
sub
repnz
loopne
mov
and
data16
and
inc
or
inc
movsb
in
out
push
stos
and
lods
xorb
sbb
das
xor
mov
and
mov
out
mov
cmpsb
subl
mov
aas
and
notl
enter
or
sbb
adc
sub
push
sub
push
cmp
jge
lds
xor
dec
std
cmpsb
mov
jno
lret
pop
gs
jle
lods
insl
push
mov
or
mov
pop
dec
mov
sarb
das
call
jnp
mov
or
mov
stc
cmpsb
stos
sub
mov
shl
mov
loope
add
or
mov
fs
test
mov
out
stos
loopne
mov
xchg
mov
fimull
pop
popa
movsl
and
out
scas
jae
in
rolb
mov
cli
mov
jmp
inc
push
mov
adc
ss
int3
push
xchg
enter
cmp
std
pop
popf
fbld
cmp
dec
stos
push
test
or
xchg
int3
cmp
bound
jg
aam
mov
fiadds
adc
cld
dec
popa
push
ror
dec
xchg
mov
mov
es
xchg
cmp
xlat
stc
or
jbe
jle,pt
sub
jg
fdecstp
dec
mov
pop
cltd
push
xor
jnp
xor
std
movb
das
or
push
jne
cmpsl
xchg
dec
pusha
pop
lcall
xor
movsl
neg
pop
jecxz
lea
push
push
pop
xchg
xchg
jp
fdiv
subb
lcall
fcomi
lret
es
fisubs
mov
and
sub
mov
pop
mov
inc
loop
push
adc
dec
cli
add
in
pushf
dec
popa
popf
cmc
inc
dec
jns
sub
pop
loopne
les
loopne
ja
test
adc
xor
scas
int
enter
cmp
push
inc
rolb
testl
testl
jl
pop
mov
mov
addr16
dec
xchg
mov
or
xor
mov
lods
fsqrt
in
js
adc
cwtl
add
aad
imul
rorl
mov
sub
push
fbld
int
xchg
push
xor
sub
les
pop
mov
lds
lods
inc
dec
jb
sub
call
cmp
mov
jne
push
dec
cmp
nop
adc
mov
sub
sub
push
enter
xchg
sub
out
dec
rorb
lock
sub
loopne
lods
and
cmp
cmc
pop
jb
cs
jg
lret
xchg
push
fldl
pop
clc
xchg
out
sahf
shlb
sub
and
out
cmp
dec
adc
sub
sbb
fists
call
lcall
dec
xor
add
mov
adc
aaa
fsts
call
xor
adc
cld
xor
pop
lods
push
inc
rcrl
mov
test
lods
cmove
push
mov
or
pop
ss
rol
mov
xchg
enter
inc
loope
sub
insb
add
add
lret
stos
int3
pop
js
loop
nop
rcr
dec
push
dec
popa
push
cmp
bound
stos
sub
dec
pop
mulb
into
scas
mov
vmovups
loop
or
push
lret
cli
aaa
pop
or
ja
xor
out
or
cld
xchg
mov
adc
push
xchg
icebp
add
adc
popf
icebp
repz
push
cmp
push
outsb
mov
shlb
adcb
shlb
inc
dec
xor
mov
push
outsl
adc
movsb
or
fcmovbe
push
es
jmp
out
clc
int3
aas
fucomip
xor
xor
sub
add
cmpl
and
test
push
fmul
inc
jne
adc
xor
sbb
dec
lret
fists
fsub
sub
add
test
leave
dec
or
enter
popf
mov
cmp
jno
mov
or
test
out
lods
ss
cmpsb
pop
je
mov
push
das
nop
movsl
cmp
adc
dec
test
adc
das
dec
dec
arpl
fildl
ljmp
mov
mov
imul
mov
dec
and
dec
sub
ror
lret
dec
test
das
fisubrs
xor
imul
add
push
aam
cmp
ja
add
sbb
data16
pop
addr16
dec
jbe
call
cmpsl
test
out
addr16
and
hlt
enter
xor
xor
stc
or
stos
stos
xchg
xchg
je
push
fstps
inc
xor
mov
dec
movsb
fwait
loope
mov
inc
inc
add
addr16
sbb
lret
popa
lods
mov
popl
lods
pop
dec
push
mov
loopne
in
xchg
push
pop
shll
push
into
jae
jp
xor
xchg
add
div
daa
mov
push
dec
lods
jg
mov
and
push
and
notb
mov
clc
cmp
shll
lret
imul
push
pop
cmp
sub
loop
push
mov
sbb
or
lods
push
in
lahf
cmp
and
jbe
or
adc
js
and
cld
sub
mov
push
mov
dec
adc
xchg
addr16
lds
addr16
mov
movsl
push
mov
outsl
jns
pop
pop
jo
int3
push
lret
cmc
lock
arpl
jns
lea
or
xchg
lret
add
mov
fstl
jmp
adc
je
into
cmp
fs
rcl
adc
pop
cmpsl
dec
and
and
inc
lock
decb
fisubl
add
ja
xor
mov
xor
pop
sahf
sbb
xchg
xor
insl
movsl
add
fcompl
mov
loopne
in
adc
xchg
inc
jbe
pop
movsb
or
or
mov
pop
xor
mov
inc
lahf
in
cltd
test
cmp
lock
push
sub
es
or
mov
mov
ja
adcb
mov
aaa
aas
inc
push
xchg
mov
cmp
clc
insb
scas
jbe
cmc
mov
outsl
popf
jae
mov
cli
pushf
fistl
inc
mov
mov
mov
sbb
in
sub
push
insl
dec
inc
test
add
mov
and
out
mov
mov
pop
xchg
or
xor
sbb
dec
jnp
repz
and
add
cmp
test
or
inc
mov
xchg
mov
add
repnz
jg
mov
mov
xchg
jo
push
into
inc
in
xchg
or
cmp
sbb
and
push
leave
jbe
clc
addr16
pusha
stos
jnp
mov
inc
or
push
lods
sub
adc
push
movsl
pusha
push
xchg
cmpsb
inc
sub
jae
adc
lock
add
shr
push
mov
sub
nop
xor
fisttpll
and
icebp
sbb
nop
push
adc
lret
xchg
rol
outsb
xlat
fiaddl
jbe
mov
mov
or
je
add
dec
sub
push
dec
add
inc
pop
adc
inc
aad
or
fmull
test
sbb
cmp
mov
lock
adc
hlt
sub
sub
mov
mov
ja
inc
aam
cmp
test
subb
mov
or
sbb
sub
pop
pop
adc
fstpt
test
lret
adc
mov
adc
sysenter
add
mov
cmp
les
loope
sbb
shll
cmp
das
xchg
clc
mov
push
or
jmp
xchg
or
mov
inc
sbb
sarb
and
enter
fdivl
icebp
inc
jno
lods
xchg
and
xchg
sub
enter
fcoms
jp
cmp
pop
push
pop
mov
lods
pop
jge
adc
and
sbb
nop
xchg
ljmp
divl
cltd
popa
movsw
sbb
out
imul
inc
push
or
ret
dec
pop
out
push
pop
xchg
sbb
mov
push
jle
or
pushl
sbb
xor
pop
insb
lret
cmp
or
leave
roll
std
inc
out
cwtl
rolb
das
rclb
stos
in
dec
into
jge
and
rcl
cmc
dec
out
enter
mov
xlat
adc
imul
push
arpl
mov
mov
shrl
push
xchg
push
cmp
sbbl
and
lods
mov
xor
outsl
and
mov
stc
das
mov
pusha
mov
clc
test
stos
xor
xchg
or
and
pop
shll
fstps
sahf
mov
stos
sbb
out
ret
add
inc
add
mov
or
es
ret
cmp
add
mov
or
sbb
add
sub
inc
adc
jns
sti
xor
addr16
insb
inc
test
push
test
dec
or
ret
daa
push
outsb
adc
lea
adc
jno
cmpsb
lock
sbb
sbb
or
pop
pop
dec
fcmovb
jns
inc
popf
pop
dec
mov
ret
mov
enter
xchg
in
enter
and
jae
push
pop
ja
add
std
mov
mov
negl
or
mov
loopne
rcrb
dec
mov
aas
nop
jl
movsb
push
mov
loop
mov
mull
adc
outsb
pushf
imul
pop
pop
push
add
jo
and
mov
loopne
xor
lods
sarl
stos
cmp
mov
pusha
pusha
test
jo
movsl
add
popf
mov
lret
xchg
iret
cmp
notl
popa
iret
push
imul
mov
cmpsb
lea
pop
mov
insl
push
add
xor
push
hlt
lret
and
add
pop
in
xchg
stc
mov
xor
test
and
repnz
call
test
insl
jbe
test
and
push
jmp
aas
jecxz
cmpsb
mov
rol
dec
pop
mov
sub
pop
int3
sbb
pop
adc
imul
cmp
push
mov
jl
neg
cwtl
mov
stc
jae
sbb
inc
dec
test
mov
clc
pop
filds
scas
pop
push
cmpb
mov
in
lods
jb
xchg
push
mov
push
lret
jnp
stc
mov
repz
xor
adc
and
push
push
shlb
xchg
repnz
xor
sbb
mov
sub
add
jp
subb
mov
ds
sarl
push
sbb
mov
adc
fwait
pop
xchg
push
outsl
jge
hlt
pop
popa
or
push
cmc
imul
test
sub
sub
xor
push
jo
and
mov
ss
incb
orb
mov
iret
mov
or
scas
mov
inc
dec
push
rcr
mov
sbb
mov
addr16
mov
lock
dec
fldcw
sub
sub
in
in
imul
mov
ljmp
dec
ds
outsb
and
mov
call
and
mov
cld
cmp
mov
sub
pusha
lahf
push
push
sete
push
and
imul
push
adc
stc
loop
push
mov
pushl
add
jmp
or
sub
mov
push
cmp
ds
ja
loope
xor
push
sti
aaa
pop
xchg
jb
add
leave
mov
in
jae
dec
outsl
and
clc
loopne
push
cmpsb
xorl
aam
or
fistpll
mov
sub
fistps
adc
pop
adc
mov
int3
shl
or
xor
stc
popf
sbb
outsb
fnstcw
adc
mov
dec
cmp
inc
aam
push
xchg
imul
mov
or
ficompl
mov
jg
outsb
shrb
and
sbb
inc
xchg
out
xchg
leave
push
cmp
aaa
xor
inc
push
pop
dec
push
add
cmp
je
cmpl
clc
and
sarl
push
cld
mov
push
pushf
in
push
mov
ljmp
test
ljmp
hlt
data16
ret
gs
mov
mov
aad
sbb
jmp
mov
dec
sbb
cwtl
jnp
xlat
or
dec
mov
ret
sub
adc
jbe
mov
mov
outsl
jne
jl
outsl
daa
adc
sub
inc
xor
ds
shlb
mov
push
cmpl
inc
subb
pop
addr16
jb
jge
mull
ja
mov
and
inc
addr16
pop
mov
divl
or
pop
inc
cltd
ficompl
pop
enter
cmp
and
clc
and
clc
cmpsb
sbb
daa
fdivrs
inc
lcall
push
sub
addr16
mov
jnp
mov
add
push
xchg
jb
dec
inc
aaa
or
xor
cmp
aas
xchg
fs
jle
mov
sbb
in
fstps
xchg
rorb
adc
popa
mov
aam
xor
data16
movsl
out
rcr
stos
pop
leave
inc
add
push
iret
mov
and
loop
je
iret
rorb
loope
or
insl
mov
cmp
je
in
and
or
cmp
mov
hlt
ret
mov
ret
cmp
push
loopne
xor
cld
mov
int
insb
dec
or
sub
jecxz
into
fwait
jns
shlb
popf
outsl
jne
orl
jle
insb
adcl
cwtl
cld
cmc
jae
sub
inc
movsl
sub
icebp
sbb
push
cmp
add
push
cld
imul
xchg
lcall
mov
stos
xchg
in
jmp
sbb
adc
sub
cli
loope
sub
cmp
mov
dec
inc
mov
aad
cmp
pop
or
das
call
mov
mov
mov
faddp
test
out
pop
imul
sbb
cmp
lcall
punpckhwd
xor
push
add
or
cmp
mov
push
push
sub
insl
sbb
mov
ds
call
inc
lds
push
dec
pop
mov
cltd
or
ds
pop
jl
data16
jo
adc
fsubs
push
cmp
aaa
dec
pop
add
and
sbb
adc
or
bound
sbb
xor
in
mov
out
movsl
mov
bound
xchg
jl
or
movsl
inc
cli
or
jne
cmp
inc
lret
call
in
outsb
les
adc
and
pop
xchg
imul
mov
sub
scas
divb
leave
mov
fs
xchg
test
cmc
iret
adc
movsl
or
mov
lds
aas
push
push
mov
push
leave
xchg
inc
ret
dec
cmpsl
jp
xchg
in
jmp
nop
popf
jmp
test
arpl
cwtl
dec
jge
cmp
fnstcw
mov
cmp
movswl
lds
and
mov
jns
push
or
dec
pop
and
fcompl
gs
das
inc
enter
add
int
mov
in
sbb
popf
sub
out
xor
cmp
loopne
loopne
add
pop
mov
frstor
cmp
adc
mov
xor
push
adc
or
rcr
xchg
inc
into
cmp
daa
lock
adc
push
mov
pop
mov
out
jnp
push
out
sbb
xchg
sarl
or
fstps
ret
mov
xchg
jnp
push
mov
jge
fiadds
mov
adc
jae
mov
ja
cmp
nop
jecxz
popf
push
movl
imul
cmp
mov
arpl
popf
test
push
repnz
jne
jmp
dec
add
shl
cmp
sbb
xchg
and
ror
sub
inc
inc
cwtl
cmpb
sub
in
mov
lds
sub
out
add
or
mov
push
inc
sub
or
enter
adc
add
loope
jae,pt
fwait
je
fsts
in
addr16
sti
push
push
icebp
enter
mov
daa
mov
mov
cmpb
jo
jns
mov
fdivs
dec
mov
push
xchg
adc
mov
fidivrl
fmuls
xorb
ficoml
xchg
xor
add
and
sbb
ss
je
mov
cmp
je
jbe
pop
jl
pop
inc
push
iret
pop
loopne
hlt
hlt
jae
mov
mov
ljmp
aaa
ljmp
sbb
mov
enter
or
sub
popa
inc
adc
push
and
aaa
stos
insl
and
or
jle
mov
dec
jns
push
push
lods
test
repnz
mov
xchg
cltd
sub
adc
stc
das
jno
xchg
mov
ret
add
lock
fs
push
out
loope
or
outsb
sbb
pop
jo
sub
cmp
jge
mov
loop
fsubr
pop
aaa
lods
scas
mull
adc
push
inc
data16
ror
mov
cmp
out
push
aam
mov
test
fadd
pop
test
mov
roll
cmp
arpl
in
push
test
std
leave
addr16
dec
xor
popa
mov
fadd
add
adc
in
sub
dec
insb
leave
aad
and
adc
inc
lods
sub
xchg
jne
or
inc
aas
shlb
push
mov
and
lret
push
pop
jns
int
sub
sarb
add
mov
adc
ret
iret
push
dec
and
out
xchg
jle
pop
sub
inc
lcall
push
pusha
in
xchg
jb
movsl
fs
adc
xchg
dec
xlat
inc
addr16
jno
sbb
fiadds
cs
insb
dec
loopne
adc
sarb
cwtl
cmp
mov
dec
lea
arpl
dec
pusha
cmp
xchg
aad
imul
mov
sahf
fwait
sbbb
fistpl
sbb
pop
imul
xchg
xor
imul
xchg
sbb
pop
cmpb
arpl
incl
loope
jns
stos
mov
movsl
sbb
mov
aam
cld
mov
call
inc
aam
sahf
sbb
push
jo
jle
add
sub
enter
mov
ss
and
fwait
les
in
add
push
xor
adc
mov
jns
cmp
movsb
sbb
das
je
cmp
xchg
ret
pop
adc
scas
dec
mov
dec
xchg
insl
push
in
push
mov
cld
sbb
repnz
sbb
push
cmp
jno
mov
idivl
mov
pop
sysexit
fstpl
je
xor
fxch
mov
xor
stc
mov
jl
pop
popf
xor
mov
add
cltd
jecxz
mov
pushl
rorb
movsb
pop
mov
insb
inc
mov
sbb
jle
push
sub
aad
mov
mov
jno
lods
pop
mov
jecxz
xchg
loop
into
ljmp
xor
xor
call
mov
mov
shrb
cltd
or
xchg
xor
inc
add
and
aas
or
inc
xchg
ror
jl
enter
movsb
fidivl
dec
sub
inc
inc
dec
cmpsl
mov
dec
xchg
mov
dec
out
xchg
push
fiadds
xor
pusha
mov
es
or
push
ret
fdivs
sbb
jbe
lahf
sbb
dec
or
pop
mov
xor
add
push
testb
xchg
cmp
push
std
inc
mov
push
call
and
push
add
out
adc
mov
add
xchg
lret
fsub
mov
pop
arpl
call
hlt
mov
scas
push
push
xor
pop
pop
roll
push
push
dec
scas
cmp
stos
xor
andb
stc
mov
sarb
xor
call
daa
leave
jmp
scas
dec
addr16
inc
js
xchg
adc
or
xchg
shrb
lea
and
roll
mov
cmp
mov
and
je
dec
jno
cmp
mov
call
sbb
neg
inc
aaa
adc
dec
les
std
adc
fcoml
jp
push
rcr
call
pop
sbb
xchg
pushl
inc
mov
inc
mov
int3
or
fldcw
dec
lods
xchg
jnp
lock
cld
mov
fs
es
negb
dec
loope
mov
shr
mov
push
aaa
lret
or
and
ss
in
sub
adc
and
ss
incb
xchg
pop
mov
lods
jb
jl
inc
push
rcl
or
mov
sbb
dec
sub
arpl
sbb
daa
cmovnp
adc
jl
sarb
decb
push
fdivrs
dec
ljmp
pop
fistps
mov
add
pusha
loop
mov
imul
ja
lods
mov
dec
mov
jae
add
xchg
insb
sbb
and
int
pop
loop
test
mov
pop
xchg
dec
in
pop
jge
sbb
inc
jns
add
mov
int
mov
fistpll
or
pop
outsl
xchg
push
dec
push
jmp
push
stos
cmc
push
sbb
scas
sbb
adc
inc
push
js
les
sahf
int
inc
gs
jl
pop
dec
mov
adcl
adc
sub
dec
inc
jne
push
arpl
jnp
arpl
mov
push
mull
mov
aad
adc
cmp
jb
sub
and
outsb
add
das
iret
push
stos
add
mov
cmp
jno
popa
stc
shll
add
push
lret
aad
dec
int
roll
mov
and
hlt
aad
dec
ja
pop
enter
adc
ljmp
sub
mov
ss
lahf
out
rcl
fs
cmc
add
xchg
loope
dec
sub
push
cmp
call
fld
imul
xchg
xor
xchg
xor
sub
mov
jge
adc
bound
sub
shlb
and
push
pop
mov
out
xor
mov
and
mov
test
xor
loop
pop
xor
aad
sysret
adc
fdivrl
out
xchg
call
push
std
loop
movl
orl
or
xchg
mov
adcl
jmp
sub
sarb
cmpsb
xchg
sbb
stos
xchg
outsl
push
fcmove
jne
ljmp
dec
pop
xor
sub
pop
fs
bound
cs
xchg
jp
cmpsl
out
lldt
not
hlt
xor
cltd
mov
mov
test
dec
stos
addr16
push
or
dec
aaa
or
aad
js
jle
cmp
dec
cmp
sbb
int3
int3
fistpl
push
adc
jle
pop
sbb
or
adc
cmp
cmp
mov
jbe
in
mov
mov
add
cmc
sub
adc
int3
inc
je
repz
xchg
jl
imul
scas
fistpl
sub
adc
adc
mov
xor
ja
and
sub
mov
push
mov
sbb
xchg
insl
dec
pushf
out
test
loop
inc
add
cmpsl
adc
imul
and
out
testb
movd
nop
je
rep
cmp
cld
mov
mov
cwtl
sub
cld
js
mov
inc
dec
adc
test
dec
adc
cmp
xor
inc
pop
mov
and
or
lcall
push
fcoms
mov
jge
out
lahf
xchg
or
or
imul
add
aaa
dec
push
int3
cli
fistpll
enter
cltd
adc
test
hlt
sbb
jmp
push
ja
jnp
inc
fbstp
jle
frstor
inc
push
je
out
in
jecxz
nop
or
mov
dec
push
in
cmp
push
lret
xor
scas
insb
sahf
fs
test
in
mov
inc
pushf
in
mov
rolb
fidivs
xlat
add
shrd
push
mov
movsl
movsl
loop
repnz
inc
mov
xchg
fldenv
adc
inc
xchg
sub
sub
cwtl
and
mov
mov
add
or
xor
leave
xor
std
daa
sub
push
fwait
popf
and
pop
xor
adc
cmp
stc
shll
inc
lock
mov
jb
mov
mov
lods
rolb
cmpsb
or
pop
push
in
xor
fwait
cmp
insl
mov
pushl
add
movsb
sub
test
mov
iret
fs
push
jmp
sbb
adc
mov
sub
mov
mov
je
mov
push
add
loop
sub
sbb
pop
out
adc
outsb
adc
lret
fs
mov
sbb
push
cmp
dec
jae
xlat
push
sbb
add
pop
out
enter
sti
aam
mov
nop
push
icebp
leave
mov
jecxz
jne
mov
mov
mov
jbe
mov
mov
mov
sub
nop
enter
pop
mov
adc
xchg
in
push
pop
lret
lock
shl
pop
adcb
shrb
push
sbb
push
xchg
sbb
pushf
test
shrl
aaa
das
inc
jno
and
pusha
rolb
sub
dec
je
popa
lods
pop
idivb
dec
push
cmp
scas
push
lahf
call
mov
xor
or
xor
inc
insb
dec
sub
data16
adc
sbb
call
sbb
jmp
pop
movaps
dec
adc
mov
xchg
nop
add
mov
sub
xchg
cld
adc
jl
or
test
pop
lea
movsb
movsb
push
scas
test
in
xchg
or
mov
or
mov
lahf
dec
sti
in
bound
mov
repz
jo
daa
call
fisubrs
ja
or
pushl
fisttps
add
or
rclb
xchg
push
lea
jo
out
stos
add
iret
imul
repnz
data16
or
dec
adc
popa
xchg
add
mov
adc
imul
mov
notb
pusha
sbb
xor
sbb
inc
loopne
jns
mov
lock
dec
cmpsl
push
outsl
out
pop
pop
sub
dec
add
fidivrl
xor
sub
dec
aam
sub
mov
das
mov
int
xor
sub
fcoml
sti
dec
mov
ja
sbb
mov
pusha
sub
pop
sbb
pop
jbe
dec
inc
mov
push
test
test
into
dec
jnp
cltd
sub
popf
inc
arpl
adc
or
xor
je
or
adc
jmp
sub
mov
gs
adc
cld
add
or
call
dec
cltd
es
mov
leave
push
adc
popaw
jnp
std
pop
jne
pop
ljmp
mov
cmp
push
lods
ds
cmp
aas
mov
jge
dec
or
or
or
mov
popa
shl
sub
cmp
push
add
and
push
lock
mov
imul
leave
cmpb
and
mov
js
lods
and
ret
loope
pop
mov
insl
ret
mov
xchg
xchg
call
arpl
inc
clc
out
xchg
fwait
insl
or
xlat
iret
pop
inc
adc
repnz
dec
xor
jno
push
ret
jle
jmp
sti
es
mov
push
test
lock
sbb
int
pop
jno
push
dec
scas
and
enter
jne
divps
in
xchg
ret
daa
cmp
aas
dec
outsb
mov
imul
pop
movsl
test
out
sbb
fldl
cmp
sbb
sbb
mov
ror
adc
mov
and
cmp
lcall
pop
in
xor
ret
or
stc
dec
addr16
mov
insl
xchg
ss
jo
decb
jno
add
mov
inc
or
and
andl
add
imul
mov
cmp
sbb
sub
push
dec
inc
lock
call
data16
mov
insl
adc
dec
ja
adcb
clc
xor
ret
mov
xorb
mulb
push
insl
pushf
xorb
sub
aaa
add
xor
mov
frstor
mulb
dec
out
clc
ficoms
dec
sbb
adc
rcrl
mov
rcrl
cltd
and
and
xor
int
mov
pop
and
nop
push
pop
cmp
test
jne
dec
adcl
xchg
gs
push
fnsave
cmp
clc
xor
pop
or
clc
push
mov
push
fwait
inc
mov
dec
jle
cmp
adc
test
mov
mov
test
fdiv
mov
xlat
or
sub
pop
push
pop
cmp
and
dec
push
shrl
cld
lock
orl
and
mov
out
mov
dec
lea
cmpsl
inc
xor
mov
jecxz
push
int
leave
lods
add
loopne
arpl
js
out
in
lea
into
xchg
sbbl
lahf
mov
add
out
sbb
sub
fisubl
repz
fcmovb
mov
lds
mov
mov
xchg
push
sbb
ljmp
testl
daa
and
and
dec
pop
fwait
mov
adc
dec
icebp
cmpsb
into
mov
jge
fwait
xorb
out
fcmovne
stos
in
das
pop
int
jle
orl
icebp
cmpsl
in
fadd
adc
js
cli
fisubrl
mov
or
and
add
sar
cmp
mov
xor
dec
cmp
mov
cltd
clc
inc
mov
aas
add
dec
imul
inc
pop
popf
mov
pop
call
push
add
mov
push
cmp
mov
xchg
cmp
mov
adc
imul
outsl
and
dec
or
scas
jle
mov
call
in
push
push
pop
cld
jb
lret
adc
and
pop
pop
pop
mov
sub
xchg
mov
loop
jmp
xchg
in
jl
aas
or
push
cli
gs
inc
or
push
push
jg
sbb
jae
xor
repnz
sbb
xchg
mov
jbe
in
sarl
insb
xchg
lret
ljmp
adc
lea
jb
loope
xchg
pavgw
mov
sbbb
lcall
inc
pop
call
std
or
movsb
inc
inc
ret
mov
push
sarl
inc
push
nop
adc
xor
sbb
enter
lcall
push
cmp
and
ds
or
mov
pop
iret
dec
enter
insb
sbb
mov
push
rcl
scas
les
mov
jb
sbb
arpl
and
mov
addl
xchg
pop
xchg
jns
or
lea
sbb
andb
movsb
and
xchg
pusha
pusha
jp
and
ljmp
test
sbb
inc
push
xor
fidivrl
push
pop
adc
imul
iret
sub
icebp
popa
test
adc
sbb
jg
push
ljmp
imul
ja
imul
ss
push
mov
inc
cmpsb
add
pop
dec
inc
sti
out
hlt
test
idivb
arpl
push
xor
cmpsl
popf
js
or
out
cs
mov
mov
ljmp
xor
shrb
adc
sahf
and
or
mov
movsl
in
stos
push
stos
cmp
xorl
cltd
pop
add
sub
inc
js
xchg
fistl
pop
fadds
jb
loopne
jbe
mov
aad
sub
test
cmp
call
jnp
pop
fs
or
adc
in
add
fsubp
jmp
inc
add
and
fs
add
jle
pop
loopne
push
iret
sarb
jnp
cwtl
mov
dec
std
mov
rorb
or
and
push
xor
push
xchg
loopne
push
inc
or
fstl
or
xchg
movb
or
xchg
sbbb
push
idiv
pop
pop
rclb
lds
xchg
repnz
mov
in
dec
add
adc
dec
xor
xchg
repz
jge
ret
leave
scas
and
popa
loopne
andb
inc
icebp
icebp
nop
push
fisttps
iret
lock
xchg
sbb
jp
subl
cld
mov
xor
inc
mov
movsb
or
nop
faddl
xor
rorl
mov
dec
push
dec
repnz
fadds
and
andb
add
call
ljmp
xor
xchg
ds
and
jp
in
pop
iret
push
inc
or
pop
pop
dec
cs
popa
adc
dec
call
rorl
dec
xor
imul
push
push
fs
ja
mov
xor
push
and
sub
ret
test
cs
xchg
mov
addr16
mov
push
dec
push
in
xchg
fists
lret
cmp
iret
iret
xchg
fidivrs
pop
adc
lcall
lret
dec
movd
jle
push
call
pop
dec
pop
mov
addl
fists
stc
enter
cmp
shll
test
push
fs
out
and
test
lahf
notl
or
std
jl
sbbl
shll
xor
ds
fdivs
bound
mov
pop
xor
push
sbb
jne
sbb
lock
jg
sahf
pop
mov
fs
pop
adc
jg
adc
mov
ss
and
inc
stos
or
jo,pt
xor
pushf
add
sbbl
pop
adc
inc
add
push
jnp
mov
xchg
sbb
jae
mov
ds
daa
inc
shl
std
push
ret
or
mov
jb
jbe
dec
push
movsl
jno
loopne
fsubl
mov
int3
push
push
in
out
cwtl
and
sahf
stos
lds
add
jbe
call
xor
leave
pop
rcrl
je
or
stos
adc
fwait
pop
xor
xchg
ret
orl
mov
je
fsubrs
dec
mov
in
mov
je
xor
push
mov
faddl
es
fidivrs
mov
sub
jp
popa
pop
mov
pop
daa
fistpll
pop
mov
ss
sub
sbb
pop
jbe
sbb
add
push
into
mov
fistpll
daa
shl
inc
jbe
and
cwtl
and
jne
sbb
add
and
cltd
mov
aam
pop
out
jnp
jmp
lods
es
sub
add
int3
mov
xchg
xchg
cmp
sub
clc
cmp
push
jmp
mov
nop
pop
enter
pop
insb
testb
mov
sub
cltd
fisubs
addr16
pop
popf
dec
xor
push
dec
and
cmp
aaa
jmp
jno
adc
rclb
scas
std
or
hlt
inc
push
sbb
add
adc
pop
int
iret
pop
insb
out
test
repz
out
test
mov
add
or
jmp
or
push
subb
xchg
lds
test
ja
adc
sub
hlt
lods
dec
sti
out
pushf
iret
adc
cmp
mov
add
pop
ret
aas
enter
rcl
imul
cmpsl
lock
xchg
fldenv
sbb
ja
cmc
pop
loope
or
adc
lea
jne
adc
ret
jle
mov
and
adc
das
push
xlat
mov
cmp
xchg
jbe
push
leave
in
xor
jmp
sbb
and
sbb
xchg
out
fs
test
popa
call
iret
jae
inc
cmp
push
sub
repnz
push
and
inc
adcb
push
enter
pop
test
fdivrl
sbb
mov
in
subb
test
inc
cmp
mov
adc
ja
outsb
add
stos
xlat
inc
mov
arpl
sahf
adc
adc
xor
mov
add
outsl
subb
jmp
cmp
insl
or
popa
dec
scas
xchg
or
push
gs
fstl
fs
vaddss
lods
fnstsw
test
fwait
mov
sbb
sbb
mov
adc
mov
mov
and
mov
movsl
sbb
stos
push
dec
testl
pop
fs
cmp
inc
lret
jmp
imul
jecxz
adc
cmpsl
sbb
insl
mov
cmpsl
movsb
dec
jmp
shlb
mov
xor
in
adc
xchg
fiaddl
sbb
xchg
mov
cmp
jno
push
pop
test
sbb
je
cmp
sahf
insl
incl
imul
cmp
cmp
rcl
sub
xor
gs
cltd
sub
loop
das
mov
iret
inc
and
dec
dec
jmp
jg
fisttps
data16
iret
mov
add
adc
cmp
mov
push
push
or
ret
adc
mov
shll
shlb
sbb
adc
in
outsl
aaa
dec
faddl
jne
dec
and
add
mov
jge
mov
addr16
push
jne
icebp
stc
jmp
adc
pusha
pop
dec
popl
push
push
xchg
aad
add
jmp
mov
sub
int
xorb
or
push
and
dec
lcall
push
fsubrl
xor
dec
aas
xchg
data16
and
mov
in
popa
stos
insb
xor
leave
mov
adcl
test
lock
cs
arpl
and
inc
mov
inc
mov
mov
jp
pop
sti
push
xchg
mov
loop
fdivrs
adc
mov
cmp
cli
sbb
jo
mov
jne
scas
movsl
inc
and
nop
cmp
cwtl
sarb
or
stos
and
push
cltd
cmc
cmpsb
out
dec
ds
dec
push
cmp
ja
je
gs
inc
or
repnz
or
lahf
dec
imul
dec
test
movsb
adc
xchg
mov
fs
fdivl
ja
fsts
inc
pushf
lret
insb
in
je
inc
in
js
jle
xchg
and
mov
enter
test
fidivrl
cmp
inc
mov
int
loope
pop
test
loopne
mov
mov
leave
arpl
jo
stos
xchg
dec
inc
out
popa
insl
add
mov
push
lret
fisubrs
or
mov
lret
push
idivb
pop
dec
xorb
dec
sarl
jo
mov
sub
lret
outsl
mov
sbb
aaa
lds
incb
inc
sub
outsb
mov
jg
mov
xchg
test
int3
aas
scas
aaa
aaa
inc
popa
or
sub
xchg
cmp
push
iret
loopne
dec
leave
add
jecxz
sar
shll
add
adc
adc
dec
pop
sub
adc
fstpl
into
and
lret
in
xchg
mov
mov
xchg
setg
jg
cmp
pop
insb
rolb
lds
cmovb
mov
inc
fdiv
sbb
pop
adc
js
add
mov
popa
cmp
nop
xchg
pop
jmp
xor
test
sbb
xor
xorl
out
mov
lea
cld
jae
in
outsl
mov
repnz
aaa
aam
out
jne
mov
or
arpl
nop
push
aad
mov
xor
sbb
adc
rcrl
cmp
lods
or
aam
pop
dec
sub
and
push
test
or
cmp
xchg
dec
or
imul
cmpsb
cwtl
out
push
xchg
mov
push
cmpsb
scas
mov
into
int3
repnz
or
push
xchg
dec
xor
xchg
push
js
cmpsb
xor
sbb
sbb
jle
xchg
div
rclb
xchg
mov
mov
ret
push
dec
push
xor
sbb
adc
jmp
fidivrs
sarb
xlat
mov
mov
dec
jge
cmp
jg
jns
dec
outsl
test
sub
xor
push
aas
xchg
std
mov
scas
insb
into
pop
mov
jmp
pop
cwtl
or
push
pop
mov
xchg
jp
jl
leave
sbb
dec
stos
repz
mov
lock
mov
lea
mov
mov
dec
inc
mov
std
mov
insb
xchg
jle
sub
jp
in
jns
cmp
pop
dec
add
push
cli
arpl
inc
inc
mov
dec
test
js
insl
imul
and
sub
lods
jno
mov
dec
test
jbe
fnstcw
je
mov
mov
aam
or
cmp
jmp
shlb
pop
mov
inc
add
sbb
nop
xor
ficoml
cmpl
xchg
pusha
xor
mov
dec
cli
dec
push
rcrl
enter
addr16
loope
adc
pop
shrl
sbb
dec
dec
sbb
cmp
jle
add
stos
mov
dec
movsl
cmp
aam
push
push
xor
xchg
and
in
ror
ss
aad
data16
test
xor
in
hlt
push
dec
and
xor
jg
in
sbb
je
pop
stc
lret
adc
xchg
sbb
outsl
loopne
add
jne
aam
push
jbe
jmp
cmp
mov
and
sub
stc
xorb
or
daa
xchg
pop
lret
bound
mov
jbe
pop
sub
and
dec
fdivs
daa
xor
shl
lea
sub
movsb
sbb
je
fbstp
add
adc
ret
test
repz
mov
scas
arpl
add
lods
xchg
test
jge
sbb
repnz
fsubl
pop
and
xlat
ret
stos
push
call
call
fcmove
outsl
insb
add
pushf
xchg
cmpsb
ret
hlt
fldenv
and
hlt
dec
clc
mov
repnz
stos
out
mov
inc
aas
loope
std
dec
dec
xor
ror
dec
mov
mov
mov
and
or
inc
icebp
subl
gs
nop
pop
adc
mov
pop
mov
pop
scas
lock
inc
mov
add
or
mov
sbb
xchg
fnsave
mov
and
xor
outsb
inc
cmp
leave
and
jle
xor
xchg
mulb
fwait
mov
pop
popa
dec
popa
or
fsubrs
mov
or
arpl
mov
adc
xchg
hlt
mov
push
shl
cmpsb
mov
mov
dec
daa
stos
shll
rcrl
lods
cmp
popa
pop
add
xchg
dec
test
cs
hlt
mov
shll
adc
and
test
push
and
in
dec
test
fcmovu
xor
mov
jp
jmp
mov
sub
into
in
push
sbb
add
pop
jge
leave
sub
and
jg
xchg
aaa
imul
inc
sarl
mov
sub
mov
mov
lret
ret
sbb
addr16
fcoms
jl
fidivl
push
sbb
add
out
movsl
or
repz
test
dec
mov
xchg
test
icebp
fs
xor
inc
xchg
add
je
test
lds
fcoml
mov
loop
roll
pusha
adc
mov
mov
mov
jl
or
fs
dec
push
jp
mov
mov
xor
cld
rol
xchg
push
inc
xor
xor
lods
cmpsl
in
sahf
data16
std
out
lret
inc
scas
enter
push
jg
test
in
ret
adc
cmp
sub
xchg
xchg
push
mov
push
mov
and
rcrb
pop
jo
call
test
mov
sbb
xorb
jne
xor
mov
xor
popf
push
rorb
lcall
dec
mov
stc
bound
aaa
adc
adc
dec
ds
add
lret
outsl
sub
xchg
fisubl
push
pop
idiv
sbb
and
repnz
mov
inc
cmp
loope
xor
push
adc
out
hlt
push
push
imull
mov
test
mov
xchg
aaa
call
ret
pop
jge
pop
fcompl
repnz
xchg
pop
inc
mull
xor
fsubrl
aas
fldt
add
loope
addr16
pop
repz
daa
adc
adc
jg
mov
jno
shlb
fdivs
sbb
arpl
sub
adcb
jbe
jno
sbb
iret
in
pop
mov
sbb
and
sti
and
fmuls
test
scas
mov
sbb
cmp
push
jae
fs
es
sub
out
lahf
push
and
movsl
push
cmc
repnz
mov
outsl
es
iret
jg
push
dec
ret
pop
dec
push
popa
movntps
data16
inc
das
add
pop
stc
mov
push
in
push
insl
outsl
daa
sub
ds
outsl
bound
cmp
repnz
movsl
in
es
test
icebp
add
adc
push
pop
bound
shll
mov
push
orb
mov
lock
inc
add
pop
out
in
rclb
inc
clc
cld
jb
adc
mov
test
int
inc
jle
xor
sbb
pushf
sbb
sbb
decl
cmc
insl
shll
sbbl
cmp
mov
jne
cli
clc
add
divb
xorl
sub
outsl
or
add
int3
dec
inc
xchg
mov
or
loopne
mov
pop
sbb
inc
stos
adc
inc
mov
shlb
cmp
dec
call
cmp
push
xlat
mov
popf
into
adc
insb
outsb
mov
fsub
add
in
mov
sub
push
xchg
pop
pop
dec
push
and
sahf
sahf
sbbl
sbb
adc
cmpsl
sub
xor
data16
or
aam
bound
lds
call
xchg
cmpb
adc
call
mov
sub
aas
mov
cltd
sbb
lret
pop
mov
or
loop
fst
sti
mov
subl
push
push
movsl
cmpsb
fcoms
mov
xchg
dec
or
jae
mov
or
ret
idivw
aaa
leave
movsl
inc
lock
mov
xchg
xchg
es
shr
data16
fwait
sahf
std
jg
xchg
fmul
xlat
cmp
pop
add
inc
push
push
subb
push
pop
cmc
dec
or
insb
rcrl
xchg
lds
addr16
hlt
lods
fnstenv
or
mov
pop
sahf
or
jecxz
js
jl
es
es
xchg
push
xchg
in
jl
push
out
test
mov
cmp
imul
fwait
push
aaa
and
rcrb
iret
lea
ja
pop
ret
fwait
dec
cmp
or
jp
adc
fstl
popa
ja
adc
in
ret
and
movsb
ljmp
test
mov
hlt
mov
lret
add
ja
int
xchg
jle
movsl
or
mov
mov
mov
inc
push
add
addr16
in
push
sbb
jmp
lret
outsl
dec
cld
jb
faddl
jp
mov
jo
pop
and
mov
js
xchg
push
sub
jnp
dec
xchg
int
stos
sub
jmp
lock
xor
loopne
mov
mov
addr16
loopne,pn
cmc
jmp
dec
cltd
sub
adc
pusha
leave
push
std
bound
test
les
fwait
cmpsl
sbb
iret
rorb
push
sub
int
pop
xor
mov
adc
cwtl
add
in
dec
loopne
fwait
cmc
popf
shrb
stc
aaa
loope
fcomps
inc
cwtl
or
rcl
or
adc
sub
or
stos
ret
push
repnz
adc
test
pusha
sub
popa
test
ljmp
in
and
pusha
loop
dec
dec
cmp
add
and
movsb
out
cmp
lea
lea
test
repnz
mov
sbb
adc
xor
lahf
mov
and
xchg
clc
mov
dec
add
inc
jle
push
jnp
jl
and
add
enter
sti
aam
bound
dec
jmp
mov
pop
clc
and
insl
push
ss
push
mov
push
sbb
arpl
loope
sar
push
fistpll
xlat
outsb
movsl
jg
mov
lods
cmp
jns
scas
dec
xchg
movsl
xor
cld
push
sub
pusha
std
sbb
xor
pop
and
cmp
dec
lret
sbb
daa
mov
dec
mov
data16
xchg
cld
dec
call
push
test
push
ja
loopne
mov
aaa
push
dec
fs
lcall
sub
add
repz
mov
sti
add
arpl
push
imul
push
ss
jno
or
xchg
stc
adc
fistpl
or
das
and
movsl
clc
gs
addr16
mov
mov
rolb
test
orb
out
dec
js
mov
add
or
xor
cmp
test
sub
addl
mov
push
dec
addl
mov
jns
sub
jb
or
out
push
xchg
mov
cmpsb
dec
sbb
repz
fwait
jl
inc
divb
punpckldq
hlt
or
sub
sahf
and
leave
cmc
das
outsb
dec
sub
lock
dec
in
push
cmpsb
sub
iret
bound
or
leave
push
cs
out
jns
je
mov
sbb
sarl
adc
lret
addl
xor
mov
push
cwtl
cmp
inc
rolb
fs
add
pop
sarl
divl
fistl
mov
or
mov
xchg
push
loop
mov
mov
sbb
sbb
push
ljmp
out
jmp
sti
imul
inc
loope
pushf
cld
cmp
sti
jne
add
push
dec
jnp
jae
jno
pop
or
imul
rcrl
cmpb
repnz
lds
adc
push
mov
push
stos
aaa
ja
repnz
jle
xorl
mov
cli
lret
lret
pop
adc
cmovl
or
dec
loope
repnz
xchg
or
aam
push
andl
shrl
test
sub
push
sbb
xor
pop
jns
adc
jnp
dec
push
dec
and
adc
xchg
cmpsb
and
insb
inc
add
fs
sahf
repnz
ficoms
inc
int3
push
sub
outsb
pop
jle
mov
inc
call
bound
mov
adc
sub
les
adcb
mov
popa
push
sub
jp
stc
cwtl
pop
mov
jmp
xchg
xor
ret
cmp
sahf
fnstenv
mov
test
push
add
sub
lods
pop
jp
push
sub
int
adc
movsl
lds
rclb
xor
enter
and
inc
cmp
pop
fcmovbe
xor
movsb
dec
les
std
inc
ret
lock
es
and
inc
adc
lods
xor
orl
je
mov
insl
cltd
imul
mov
pop
mov
rolb
sub
sbb
sbb
mov
insb
sbb
js
rolb
jae
mov
pop
mov
push
das
pop
jae
sbb
mov
push
jge
dec
cmp
push
mov
push
loope
inc
int
leave
mov
sbb
aam
aas
sub
gs
scas
fsubs
push
js
fimuls
adc
popf
insl
imul
cld
shrb
add
aaa
jnp
pop
jbe
into
sub
sti
cmp
fdivrl
loop
dec
inc
or
test
and
popa
dec
inc
incb
out
sub
sub
leave
filds
add
sub
sbb
pop
inc
ficompl
or
pop
cmp
cmp
aas
mov
outsb
or
xor
xchg
stos
imul
fdecstp
pop
add
cmpsb
divb
js
inc
stos
fidivrs
mov
xchg
es
jo
cmp
into
lcall
jl
clc
ljmp
cmc
and
inc
mov
and
sahf
js
push
jnp
xchg
cli
add
push
or
arpl
mov
xor
sbb
nop
jl
adc
sub
pop
pop
iret
inc
fsubrl
xchg
dec
sbb
dec
xchg
dec
jbe
cmp
je
scas
mov
cwtl
popa
lea
or
adc
lea
movsl
cs
adc
enter
jno
inc
orl
pop
pop
imul
inc
in
push
div
inc
cmp
shll
jg
sti
ljmp
adc
mov
jbe
jl
push
jge
test
pop
dec
in
fsts
or
test
sub
sbb
jb
pop
mov
out
mov
inc
int
lret
fisttps
cmp
jg
adc
loopne
xor
mov
and
add
xchg
sarl
cmp
or
mov
cmovbe
inc
adcl
push
push
fsts
push
popf
andl
rol
or
mov
jmp
cmc
cmpsl
xor
hlt
fisttpll
adc
mov
sbb
lcall
inc
test
mov
sbb
test
push
or
xor
lds
mov
cmp
imull
mov
out
push
addl
xor
push
ret
cmp
bound
loop
shlb
jl
aas
movsb
outsb
jno
add
iret
hlt
pop
push
cmp
adc
xor
add
call
xor
pop
pop
data16
imul
push
stos
mov
mov
sub
int
lret
cwtl
inc
xor
sub
lret
stc
or
filds
or
into
inc
rcr
fdivl
in
dec
pop
push
icebp
xor
mov
sbb
outsb
cmp
addr16
into
and
ja
push
into
aas
int3
mov
leave
fistpl
mul
push
mov
dec
and
sub
pusha
add
sub
movl
mov
add
inc
jne
push
xlat
mov
sbb
add
test
jge
mov
jne
lods
arpl
movsl
add
push
xchg
sti
mov
int3
push
jge
pushf
push
pop
inc
cld
int3
insb
jnp
push
push
fcmovu
clc
mov
and
jl
ds
push
fwait
out
xchg
xchg
jae
push
xlat
jns
jge
aas
loop
add
jne
mov
inc
insb
outsl
xchg
pop
mov
push
bound
dec
mov
cld
adc
pusha
clc
rcr
cmp
iret
leave
lret
in
fs
mov
jnp
imul
push
scas
pop
adc
mov
daa
dec
test
cmp
and
fwait
xchg
loopne
fdivl
dec
add
add
mov
sbb
divl
sbb
or
cmpsb
pop
incb
adc
sub
je
jecxz
adc
rcl
pop
dec
rcl
mov
xor
adc
mov
out
data16
repnz
jbe
popf
popa
cmp
jo
lods
and
or
add
lock
sbb
mov
aad
inc
xchg
punpckldq
aaa
fsubr
insb
jg
dec
xchg
decb
popa
sub
pop
lret
leave
mov
iret
test
incb
mov
add
inc
jp
or
sbb
adc
dec
cmp
pop
jo
mov
dec
je
mov
outsb
push
dec
daa
test
loopne
iret
add
mov
push
popa
push
ljmp
out
jmp
mov
stos
repz
adc
or
ss
fyl2xp1
leave
stos
popf
clc
cmp
pop
popf
out
jae
mov
cltd
pop
lock
ret
loop
cmpsb
sbb
sub
pop
inc
stos
hlt
jb
inc
pushf
mov
inc
fldenv
mov
push
mov
adc
and
clc
cs
adc
pop
les
cld
outsl
lret
stc
ljmp
movsl
mov
jg
popf
mov
nop
push
and
xor
ljmp
pop
inc
cmp
xor
xor
mov
mov
add
movsb
jbe
dec
lds
das
mov
cmpsl
dec
hlt
xor
lahf
daa
ja
daa
and
mov
xchg
fdivrs
mov
push
sub
or
shl
ss
mov
out
std
fsubs
push
xchg
popa
mov
mov
mov
xchg
cmc
shrl
jl
adc
ss
xchg
jbe
es
cwtl
movsl
mov
mov
mov
in
aaa
inc
sbb
das
or
dec
dec
dec
ret
int3
jle
fiaddl
jmp
stos
xor
repz
int
cmpl
push
outsl
outsb
imul
in
rcll
add
mov
mov
lods
sub
add
or
ret
dec
sbb
dec
sbb
jb
aas
dec
in
xchg
pop
outsl
and
in
or
pop
xchg
mov
add
jns
push
push
sub
daa
fdivrs
outsb
mov
pop
mov
cmpb
adc
adc
andb
fs
loope
inc
dec
or
push
enter
fidivrl
std
pop
out
push
jo
cmp
push
jae
mov
and
mov
mov
movsl
mov
xchg
pop
xchg
cmp
daa
xchg
xchg
mov
imul
adc
and
mov
popa
mov
xchg
mov
lret
cli
gs
pop
mov
stos
out
outsl
jg
test
cli
adc
xchg
add
sti
movsl
sbb
mov
mov
xchg
mov
xchg
xor
out
pop
pop
jmp
cs
push
hlt
mov
push
std
adc
shll
ss
jle
stc
mov
cwtl
test
jo
out
inc
inc
sbb
mov
push
and
adc
imul
bound
push
sub
or
ljmp
pop
sub
or
cmpl
pop
dec
int3
adc
or
jnp
stc
push
push
shl
xor
adc
mov
lods
and
mov
das
cli
sub
or
outsl
cmp
xor
adc
xor
orl
leave
adc
pop
flds
push
add
stc
mov
mov
add
sub
nop
add
frstor
jmp
ljmp
xor
push
mov
jbe
mov
mov
sub
xor
or
push
stos
jmp
into
xchg
mov
jecxz
fs
fxch
movsb
mov
push
clc
movl
xor
aaa
sub
ficoml
sub
mov
shr
outsl
inc
rolb
loop
push
cmp
sar
sbb
jbe
jne
movsb
ret
or
movsl
and
loopne
push
sub
jp
mov
ret
inc
xchg
aaa
ljmp
mov
jnp
imul
or
push
out
pop
rol
sbb
or
dec
in
pop
dec
clc
js
fdivrp
bound
loope
int
dec
ja
pop
cmp
adc
or
jnp
inc
into
loope
and
dec
aaa
or
outsb
cmp
popf
jnp
jae
and
call
int3
push
fxtract
and
data16
push
sahf
mov
adc
push
and
push
mov
adc
mov
push
add
mov
cmpsl
xor
xchg
fldpi
sbb
push
inc
and
sub
inc
and
dec
lods
ret
and
in
sub
jecxz
test
mov
mov
lock
movsb
jge
imul
adc
dec
lret
fsubrs
sub
imul
sub
shlb
les
mov
cs
pop
and
std
jmp
jae
push
in
fistl
shl
mov
jb
ret
stos
and
xor
lods
adc
pop
mov
subl
mov
xor
mov
lahf
lock
dec
and
negb
inc
sarb
mov
les
or
cmp
icebp
stos
lock
ss
es
add
outsb
cmp
pop
jb
jg
cwtl
decb
pop
jo
lea
push
add
shll
and
pop
and
orb
sti
jle
jnp
jns
inc
mov
js
stos
add
sub
int3
push
xchg
xor
mov
fsubl
jo
mov
out
sbb
bound
adc
inc
dec
mov
mov
pop
and
jno
je
out
and
stc
fs
lahf
pushf
aam
cmp
pop
or
push
push
adc
into
insb
adc
mov
and
or
lea
popa
xor
jl
mov
jbe
loopne
setnp
das
lcall
sbb
les
addr16
sub
inc
sub
fmull
lret
outsb
sahf
mov
inc
sub
inc
and
mov
or
nop
adc
inc
or
hlt
sub
cmp
sub
aas
int
mov
inc
or
mov
movsl
push
push
ds
es
mov
aad
imul
jns
pop
adc
lods
sbb
out
push
xchg
adc
and
dec
mov
test
cltd
pusha
dec
mov
jecxz
lret
stos
hlt
inc
adc
jo
add
push
imull
and
push
mov
inc
andl
cmp
pop
fsubrl
sbb
fdivrl
ljmp
cmp
gs
popa
xchg
cmp
int
fwait
jbe
sub
bound
loopne
shlb
movsb
jbe
jne
icebp
fbld
sbb
adc
push
mov
sbb
cmp
or
jbe
enter
mov
jmp
sahf
inc
arpl
lock
mov
push
rcrl
sbb
sbb
push
in
pop
sbb
mov
jb
xor
xchg
mov
pop
jns
push
push
push
or
sbb
inc
add
cmp
xor
les
add
adc
sub
mov
cmpsb
mov
push
call
dec
push
ss
shrb
je
arpl
loopne
je
push
adc
repz
sub
push
rcrl
dec
js
or
mov
xor
cmp
dec
mov
jp
ljmp
mov
int3
or
push
cmp
xchg
pop
mov
loopne
cmp
push
sbb
lret
test
test
jne
xchg
std
inc
jns
xchg
xchg
leave
daa
sbb
ds
cs
inc
push
mov
sub
pop
jno
das
push
hlt
idivb
fidivrl
or
sub
jp
cltd
jo
xor
pop
ja
test
fwait
lock
imul
mov
xor
movsl
or
out
fdiv
dec
sti
cmp
mov
jb
nop
aas
inc
inc
push
cmp
or
pop
mov
movsb
cmp
sub
add
mov
in
arpl
sbb
inc
int3
icebp
fisubs
mov
fs
mov
xchg
in
dec
gs
mov
sbb
push
loope
fdivl
and
ret
aas
pop
or
movsl
cs
sub
jnp
mov
xchg
fnstenv
shl
std
jnp
jb
pop
out
ret
add
xchg
inc
pop
jecxz
add
pop
hlt
adc
inc
scas
adc
push
jne
fldt
icebp
cs
inc
in
sub
clc
nop
loopne
mov
push
arpl
add
lahf
sub
mov
xor
jge
adc
pop
sub
mov
jle
xor
mov
jp
fsubl
mov
loope
jg
mov
fsubl
jecxz
inc
pop
inc
cld
test
xor
push
cmc
and
or
and
push
fsub
cltd
push
loop
gs
imul
inc
jnp
jae
outsb
int3
xor
sub
or
mov
rcll
jecxz
jno
mov
ds
nop
lds
notl
mov
inc
je
mov
ja
sbb
ror
stc
sub
insb
repnz
inc
mov
push
test
adc
dec
lock
gs
xlat
test
stc
call
add
push
jl
inc
add
xlat
inc
repz
or
xor
ss
push
outsb
push
test
in
ja
imul
ss
pop
mov
mov
add
shrb
mov
sbb
js
mov
and
xor
jmp
jno
push
in
es
sbb
dec
gs
loope
cmpsb
sbb
xor
push
xor
jnp
inc
pop
mov
mov
sbb
mov
stos
mov
dec
push
xor
popf
cs
out
mov
outsl
sub
mov
mov
push
mov
cld
inc
add
jne
cmp
or
ret
js
movsb
insl
jmp
xor
mov
and
xchg
cld
inc
call
enter
xor
and
insb
jnp
mov
and
adcb
data16
mov
add
dec
pop
cs
inc
fs
mov
cmc
adc
sahf
ret
xchg
enter
outsb
and
dec
ljmp
dec
ja
subl
mov
lea
loope
jp
movsl
cmp
aas
pop
inc
fisubs
int3
imul
in
mov
cmp
xchg
into
mov
test
push
int3
pop
mov
jne
negl
pop
pop
mov
mov
cli
xlat
xchg
cmp
inc
push
mov
jp
lea
js
push
push
insb
daa
lcall
and
je
cmp
and
rcrb
mov
sub
jno
mov
movsb
je
push
dec
adc
sarl
adc
or
prefetchw
xchg
cmp
nop
rolb
loopne
push
fisubrl
mov
and
mov
out
lret
fistpl
mov
inc
inc
adc
stos
subb
movsb
jp
mov
or
mov
cmp
push
jae
push
mov
push
mov
and
dec
xlat
out
inc
sti
xor
sti
bound
imul
pop
fidivl
or
popf
test
ret
adc
ja
sbb
and
scas
push
in
pop
lock
test
adc
xorb
adc
or
das
push
out
stos
mov
inc
aaa
mov
mov
sbb
xor
lahf
dec
pusha
dec
jmp
xchg
bound
pop
mov
movsb
movsl
jns
fmulp
pop
in
sbb
inc
push
xor
dec
cmp
mov
mov
insb
dec
sbb
loope
lret
inc
jbe
xor
cmp
mov
test
fistl
cmpl
sub
fs
in
push
xchg
cmp
inc
cmp
ret
ds
fidivs
xor
pop
imul
mov
mov
pop
std
fnstenv
add
rclb
sub
jbe
adc
add
test
dec
stc
into
jno
and
lock
in
push
mov
fsubs
mov
sub
mov
stc
call
scas
xor
aas
cmp
lods
rcll
std
sub
jne
sub
fld
aad
lret
jl
add
int3
adc
xor
test
jbe
int
mov
sub
mov
insb
or
ja
or
lds
popf
mov
push
sub
mov
jge
mov
getsec
mov
pop
addr16
cmc
subb
sbb
or
adc
push
sar
cltd
popa
add
push
push
sbb
mov
ds
add
cmp
push
fs
sarb
cwtl
sub
cmp
cmp
pmaddwd
gs
mov
into
rol
jbe
adc
dec
mov
jne
dec
test
mov
mov
sub
cmc
test
or
ja
and
push
jp
adc
inc
dec
push
movsl
inc
ficoms
pushf
sub
dec
xor
test
arpl
fistpl
pusha
mov
and
mov
jo
pop
inc
sub
add
leave
mov
jmp
ss
sbb
fcoml
push
ss
add
pop
xor
ds
hlt
loope
push
imulb
xor
jl
sbb
or
mov
clc
les
jmp
enter
rorb
add
jae
mov
nop
call
das
jae
dec
mov
jecxz
movb
ret
mov
fistpl
xor
cmp
aaa
sub
push
xchg
push
xchg
push
aaa
iret
dec
outsb
jns
int
or
fcomip
xor
sbb
push
pop
jae
jne
mov
mov
jmp
dec
fistl
sub
lret
lods
loop
cmp
clc
pop
sub
pop
inc
insl
xor
imul
ja
jo
aas
xchg
lea
dec
popl
and
adc
dec
mov
cmp
dec
push
iret
adc
cmp
jbe
std
cmp
dec
das
sub
push
lcall
dec
in
xor
adcb
ja
movsb
xchg
ret
jmp
inc
adcb
es
add
inc
adc
aaa
push
leave
xchg
cli
cltd
popf
push
push
jle
outsb
push
pop
loop
sbb
jb
pop
call
js
or
lret
push
push
jbe
and
inc
jecxz
inc
pop
xchg
jg
push
lock
push
sar
stos
xchg
mov
icebp
and
fistpl
xchg
sub
fmul
or
lock
shr
jecxz
imul
and
mov
rorb
cltd
and
mov
es
ja
xlat
loope
push
sub
mov
xchg
aaa
fwait
test
lock
xor
aam
and
add
add
push
xchg
mov
sub
loop
ficoml
in
stos
loopne
pop
jne
fcoml
fistl
sahf
pop
pop
out
mov
pop
sub
mov
test
cmpsl
mov
and
cmp
shrb
adc
nop
int
add
iret
xor
mov
adc
stc
or
cmpsl
xchg
clc
roll
jmp
bound
sub
daa
daa
sbb
push
pmullw
pop
stos
and
adc
adc
push
stos
push
mov
ja
pop
cmp
testb
pop
or
mov
cmpsb
inc
push
cli
mov
pushf
fisubs
shl
push
lahf
dec
loope
enter
inc
jl
push
pop
xchg
aas
mov
jmp
adc
lods
hlt
ja
add
lcall
int
test
jmp
adc
les
out
test
call
mov
push
dec
inc
cmp
in
jle
sbb
scas
testl
adc
jne
inc
jae
repz
adc
cmpsb
cli
loope
stc
fisubrl
std
push
inc
out
in
sub
out
dec
jnp
test
add
and
dec
mov
mov
in
or
fisubrl
mov
je
xor
sbb
out
aaa
cmp
iret
xchg
bound
insb
inc
mov
out
pop
jb
insb
sub
pusha
into
scas
mov
lea
out
xchg
daa
setns
mov
testl
mov
mov
clc
push
ret
dec
adc
and
jb
sbb
fcmovbe
jg
cmp
les
popa
adc
dec
jecxz
and
icebp
or
adc
xor
pop
hlt
push
mov
decl
cmp
cmpl
mov
scas
mov
xor
jmp
jl
add
xor
sbb
sbb
test
addr16
pop
imul
lcall
pop
lds
cmpsb
inc
push
xchg
testb
jmp
ss
loope
adc
cmp
jns
inc
rclb
mov
add
xchg
jge
ss
les
mov
xor
outsb
rcr
cvtps2pi
jae
call
mov
mov
in
dec
dec
push
call
xchg
or
out
scas
imul
gs
repnz
xchg
mov
xchg
xchg
dec
outsl
xor
jno
inc
mov
jnp
lcall
mov
pop
icebp
and
cmp
sahf
movsb
ret
xorb
bnd
mov
mov
add
mov
lretw
cli
cmp
add
repnz
into
inc
mov
out
mov
loopne
cld
leave
divl
xchg
lods
ret
out
and
fucom
mulb
fidivrl
ja
mov
test
push
loopne
mov
jecxz
cltd
cmp
cmpsl
jno
out
xchg
popa
lds
insb
cmpsb
sub
mov
cltd
jns
fs
clc
out
imul
repnz
sub
in
push
cmc
xor
jle
mov
clc
inc
gs
xor
mov
pop
clc
pop
enter
and
ljmp
cltd
or
mov
cmp
jecxz
popa
dec
mov
cmp
cmp
ss
test
lcall
std
dec
mov
pop
pop
dec
pop
aaa
mov
lods
adc
cmp
es
mov
push
stc
sub
fbstp
mov
mov
outsb
sub
roll
push
add
jno
cmpl
adc
adc
adc
in
sbb
push
and
push
sub
sbb
outsl
or
shrl
sbb
divl
push
add
in
add
dec
pop
shll
pop
jae
and
push
push
jno
add
push
pop
sub
sub
inc
outsl
insb
xchg
inc
das
add
jb
shl
subl
dec
mov
jle
rorb
idivl
push
pop
and
and
out
rcll
push
enter
mov
scas
cmp
xchg
fmull
push
and
mov
sub
scas
pusha
adc
and
inc
out
cld
les
out
and
adc
cmp
adc
jae
pushf
sbb
or
adc
ffreep
lret
mov
jmp
jbe
push
mov
push
shl
mov
sub
lods
xchg
cmp
inc
jmp
shrb
into
sub
test
gs
adc
lret
repz
inc
xchg
jns
mov
jb
push
ja
out
ficoml
push
loope
xchg
adc
jns
jo
cmpsl
sbbl
dec
jne
clc
mov
ss
loop
call
mov
lret
inc
push
test
add
lea
push
sbb
mov
and
repz
add
dec
or
testl
xchg
hlt
cmpsb
or
xor
xchg
mov
adcl
xchg
push
notl
sub
jecxz
cmc
or
in
dec
sub
sbb
add
mov
or
out
test
or
je
cmp
xor
cmp
imul
fcmovnb
jge
aas
adc
ret
push
pop
mov
push
pop
jg
or
add
sub
cld
mov
mov
sub
fisubrl
sbb
sbb
bnd
mov
cmpl
xchg
fs
mov
pop
mov
inc
das
jno
dec
sbb
jl
in
fs
pop
mov
jecxz
push
pusha
xchg
push
pop
push
add
es
ja
inc
pop
dec
xchg
or
leave
pusha
dec
add
cld
adc
int
push
xchg
sbb
cs
push
sub
mov
cmp
adc
push
subb
std
jge
or
mov
push
test
mov
lcall
cmp
icebp
pop
xchg
das
add
fldenv
sbb
fsub
lret
xchg
daa
xchg
mov
movsb
in
rcr
shl
push
cmp
loope
mov
enter
cmp
xchg
or
dec
push
and
add
enter
add
push
outsb
sbb
jne
add
insl
rorl
jg
pop
push
in
stos
sbb
mov
add
fs
shrb
inc
xor
and
cmp
pop
jb
push
rsqrtps
add
sub
fsubrs
xchg
add
pop
loopne
mov
ljmp
lea
adcl
test
ss
mov
iret
es
lods
iret
lods
xor
rcr
aas
jmp
dec
outsb
inc
xchg
sub
sub
or
icebp
jo
add
imul
loop
pop
pop
mov
clc
neg
jle
and
rcrb
insl
out
in
jecxz
idivb
sbb
in
jecxz
std
les
push
pushf
jl
or
js
cmpsb
std
insl
adc
lds
aas
jbe
addr16
push
das
jl
shll
add
out
add
and
rorl
mov
mov
outsl
test
sbb
cmp
fidivrs
or
push
lods
pushf
int
leave
jbe
cmpsb
fnsave
das
adc
add
jnp
sub
push
popa
sub
pop
add
loope
xchg
fmul
pop
xchg
fistpll
bound
pop
push
dec
rcll
lahf
outsb
pop
or
out
inc
or
jbe
scas
inc
sub
sbb
mov
xor
scas
sbb
add
sub
inc
jecxz
push
sbb
mov
push
je
fadds
mul
clc
push
cmpsl
pop
rorb
sub
adc
or
les
mov
test
outsb
into
sub
jns
jp
out
mov
add
aaa
adc
movsl
jo
adc
fadds
call
mov
aad
mov
and
inc
lret
push
inc
fs
adcl
into
nop
jo
ljmp
jge
aaa
ret
pusha
and
jp
das
add
fnstsw
inc
mov
dec
test
xor
pop
loope
andl
xchg
inc
jne
ret
lcall
aam
push
sub
xchg
inc
test
and
mov
out
ret
jnp
jno
aam
mov
pop
test
or
pop
cmp
stos
fs
arpl
cli
mov
into
scas
popl
cld
subl
adc
inc
mov
pop
xor
and
test
jmp
sbb
stos
mov
inc
dec
cli
dec
sbb
loopne
iret
sub
loop
sbb
aad
push
out
or
inc
push
mov
cmp
cwtl
das
repnz
sub
cmp
or
hlt
ret
ret
scas
sbb
sbb
sbb
jo
sti
js
xchg
push
cmp
pop
jge
cmc
inc
inc
je
or
mov
out
cmp
in
jp
aaa
aaa
leave
mov
rcrl
or
lahf
mov
mov
sti
out
addl
lahf
xchg
cmp
mov
lahf
xchg
ucomiss
sub
mov
xor
jno
and
jl
sub
shrl
int3
sbb
and
nop
add
movsb
jp
leave
adcl
loope
cmp
ja
sub
jb
cs
int3
lea
sub
jo
xor
addr16
testl
aam
pop
call
je
adc
lret
mov
rcll
mov
sarb
fistl
iret
inc
inc
sbb
mov
and
push
push
push
xor
adc
cmp
push
jo
sub
jae
lods
decb
inc
addb
push
imul
mov
cmpsb
xor
inc
pushf
pop
aaa
lds
jno
or
push
dec
cmp
fldenv
iret
pop
and
jbe
cmp
loop
data16
lds
ja
shlb
sub
lods
sub
cwtl
imul
cmpb
dec
in
mov
jo
sub
and
fdivl
in
add
call
rcrb
jo
addr16
push
insl
loop
das
mov
out
fstpt
xor
dec
pop
cmp
dec
inc
or
sub
cs
pop
xor
inc
mov
xchg
jo
shlb
sub
fsubs
pop
sub
loop
mov
cmp
jle
inc
and
dec
dec
rorb
ret
imul
or
aad
mov
dec
popa
bound
pop
daa
stos
mov
inc
fsubs
adc
in
push
loop
cs
jmp
scas
cmpl
sub
adc
and
and
ret
mov
and
int3
xor
sti
jnp
test
dec
lcall
push
rolb
push
into
imul
inc
mov
push
mov
lea
xor
in
cld
cmpsl
and
ds
jns
cmpsb
jb
daa
test
cs
dec
sbb
mov
ret
mov
sahf
mov
leave
xor
inc
str
push
and
jecxz
xchg
mov
cmpsb
testb
cmpsl
loope
je
jg
and
cmp
hlt
loopne
insb
add
xor
jle
inc
pop
ljmp
jae
cmp
in
or
cmpsb
lahf
dec
cwtl
fcomps
sub
or
in
ret
aad
mov
fstpl
inc
adc
out
rorl
cmp
xchg
je
jge
movsb
jg
popf
pop
nop
inc
lds
jo
in
mov
sbb
xchg
xor
rcrb
leave
cmpsl
loop
fmull
mov
js
sbbl
or
and
fsubr
xor
sbb
shll
inc
jne
jp
push
sahf
mov
pusha
push
xchg
push
jno
pop
and
mov
sbb
push
xorb
shrb
ljmp
sub
cmp
cmp
jo
cwtl
pusha
sub
bound
in
sbb
mov
xchg
inc
les
jnp
pop
add
int3
movsb
add
sub
in
aas
sub
test
push
or
sbb
movsl
pushf
loopne
aas
inc
pop
and
push
mov
movsl
jmp
mov
movsl
sub
aam
mov
ja
xchg
sbbb
rorl
inc
sub
sbb
pop
mov
movsb
sub
push
pop
rclb
out
popa
mov
imul
out
xchg
jnp
dec
jo
mov
add
test
or
add
sbb
mov
fildll
jp
mov
xchg
mov
decb
nop
fsubl
pop
out
inc
icebp
pop
aad
cmp
out
and
adc
sub
sub
fcmovu
verr
xor
pop
push
mov
cmc
pop
lock
js
xchg
ror
lock
sbb
mov
cwtl
fcomps
dec
sub
push
xchg
add
test
js
test
cli
sub
jae
adc
inc
pusha
out
jns
jbe
mov
neg
mov
pop
frstor
dec
notb
pop
sub
mov
lock
pop
inc
mov
cmp
mov
movsb
jge
xor
aaa
pop
les
cmp
mov
inc
stc
and
lret
mov
popa
xor
in
xor
cmp
loopne
outsl
and
sub
movsb
adc
mov
imul
loope
push
jmp
or
jp
imul
inc
test
mov
sbb
loop
out
dec
mov
xchg
jb
shlb
push
sbb
popa
and
mov
push
push
xor
inc
je
and
dec
jp
and
ss
das
and
inc
orb
sbb
lahf
sarl
ret
jmp
jbe
popa
mov
cld
addr16
pusha
or
lret
and
fidivrl
and
popa
aad
and
and
sub
xor
lret
or
sbb
push
add
iret
push
adc
dec
or
out
sbb
dec
mov
cmp
cs
dec
les
cmp
mov
popa
mov
sub
popa
cld
cmp
add
push
inc
add
mov
repnz
pushf
pop
dec
xchg
mov
mov
or
les
sub
mov
adc
mov
js
fstps
or
inc
jo
sbb
dec
movsb
jecxz
sub
cmp
xor
add
sub
inc
or
out
leave
aas
cmp
mov
add
out
sbb
jb
faddp
dec
or
cmp
fmull
jbe
and
mov
mov
dec
dec
dec
pop
insb
mov
and
mov
dec
mov
xchg
mov
mov
cld
pop
or
mov
push
jmp
rcl
inc
loopne
inc
adc
push
ja
push
ja
mov
ss
sbb
jno
mov
dec
ds
mov
lahf
rclb
ret
mov
lret
push
scas
jb
cmp
jle
into
lea
rorb
xor
mov
and
mov
cmp
inc
out
aas
enter
or
xor
loopne
shrl
mov
rep
fidivrs
sbb
fiaddl
dec
xchg
mov
jno
scas
cmp
add
cmp
or
mov
pop
sbb
pushf
xchg
jno
ror
mov
pop
loope
lods
xor
dec
and
mov
leave
fdivrl
adc
add
and
or
adc
lret
xor
call
inc
test
lret
loop
xorb
out
leave
out
lret
xor
push
in
push
dec
negb
in
imul
loop
sbb
fwait
push
and
ret
ja
jnp
sbb
or
in
mov
mov
add
add
and
movsb
inc
xchg
pop
push
dec
xchg
sub
or
mov
cmp
xchg
sub
fcmovnu
xchg
xchg
xchg
popf
fsubl
pop
push
ret
cmp
pop
cmpsb
jg
pop
jae
mov
sbb
lods
mov
mov
stos
scas
outsl
or
cmp
movsl
mov
lea
jl
fdivrs
xor
inc
in
push
ja
dec
and
push
sbb
movl
fsubl
push
iret
lahf
xor
ret
dec
loop
xor
and
ret
cmp
nop
sbb
rcrl
int3
and
mov
sbb
test
arpl
push
dec
shll
out
sub
sti
push
mul
popa
mov
sub
mov
out
sti
repz
push
hlt
insl
and
enter
out
dec
push
add
lcall
add
add
scas
lret
cmpsb
cmp
cltd
popf
add
xor
adc
rorl
es
sub
mov
adc
je
shlb
mov
loopne
incb
into
add
jmp
xor
loop
push
sbb
lea
add
xor
pop
repnz
xchg
xor
int
xor
icebp
mov
cwtl
ds
je
push
shl
jbe
stc
outsl
xor
jg
movsb
stos
add
mull
orl
nop
sub
fists
pop
pop
cmp
mov
jae
or
xchg
call
add
clc
inc
mov
and
jo
and
adc
jg
out
xchg
movsw
adc
pop
out
xchg
gs
cmpsb
out
movsb
lds
lods
pushf
or
add
and
dec
xlat
push
fcoms
mov
lods
adc
adc
sbb
jb
sub
xchg
dec
adc
and
adc
xor
jb
sub
xchg
dec
fcmovbe
jecxz
notl
pusha
scas
ds
das
mov
imul
adc
adc
cmp
sti
jl
push
ds
sahf
and
fidivrs
lea
sbb
cmp
xchg
jp
pop
xchg
mov
in
mov
notl
jecxz
fcomp
and
mov
adc
mov
lret
xchg
fisubl
hlt
jns
cmp
pop
adc
dec
loopne
fcos
sub
sub
cmpsl
pop
or
shlb
pop
cmpl
inc
pop
incl
pop
imul
sub
sbb
movsb
sub
push
xchg
inc
mov
dec
jecxz
addr16
dec
mov
or
je
loope
mov
cmp
pop
outsl
sub
call
js
icebp
stos
sarl
loop
jbe
hlt
mov
dec
fneni(8087
inc
or
xor
add
leave
xor
imul
mov
cmp
inc
sub
call
loop
movsl
push
cmp
je
mov
scas
out
pop
add
sub
sub
pop
jmp
fmull
pop
fcoml
push
jbe
inc
mov
jne
les
jb
mov
mov
push
dec
xor
pop
add
cmp
mov
xor
and
les
mov
push
sbb
lahf
das
sbb
imul
inc
and
nop
adc
push
add
jnp
dec
data16
inc
jg
adc
ret
loop
xlat
jae
daa
scas
loope
daa
aas
pop
push
out
or
test
dec
mov
mov
dec
or
mov
push
movsb
adc
xor
xor
and
adc
and
mov
xchg
mov
mov
mov
cmp
pop
stos
push
dec
adc
bound
or
imul
daa
stos
cmp
jmp
adc
mov
pusha
pop
icebp
xor
cmp
cmp
push
cwtl
lods
cmpsb
and
stc
aaa
movsb
mov
push
xchg
inc
and
leave
mov
push
fstl
orb
jecxz
adc
inc
lods
lcall
xor
inc
mov
mov
mov
lock
adc
xlat
push
inc
in
lret
int3
dec
test
sti
pop
insb
add
lock
sbb
push
dec
pop
shll
ljmp
fdivp
ret
sbb
loopne
fstl
or
jmp
sbb
mov
je
test
cmpsl
sub
pop
imul
mov
arpl
jecxz
xlat
outsb
stos
lock
icebp
into
test
push
inc
leave
mov
or
andl
push
xlat
or
inc
call
arpl
jo
movsb
test
scas
sbb
call
sbb
in
outsb
and
or
movsl
div
sub
movsb
aaa
push
xor
fcom
sub
jbe
dec
cli
xor
imul
and
lds
add
push
add
or
add
mov
scas
and
add
xlat
jmp
pop
pushf
mov
test
cmpsb
xor
test
shl
adc
dec
xlat
loopne
outsb
xor
or
jmp
ljmp
jne
cmp
sbb
mov
add
jp
or
icebp
push
add
and
xor
lds
sbb
dec
fistpl
add
jl
mov
mov
test
pop
or
js
test
fs
jge
dec
inc
and
mov
enter
and
jmp
ds
ret
in
pop
test
fimuls
pop
jge
and
testb
inc
xchg
test
aaa
xchg
and
sub
inc
sbb
cmc
adcb
mov
js
pop
lea
sbb
and
pop
arpl
adc
int
inc
mov
cmp
dec
rcrl
dec
xchg
sbb
mov
add
jle
xchg
jmp
push
enter
cltd
std
lret
pop
bound
and
js
sub
and
xchg
fsubl
out
bound
fbld
pop
jb
mov
inc
lahf
jns
adc
arpl
and
leave
repnz
testb
arpl
dec
push
adc
sbb
adc
sbb
adc
shlb
jp
ficompl
sub
arpl
out
pop
sbb
mov
shlb
xor
enter
adc
dec
aad
add
cmp
or
ret
jecxz
and
ljmp
mov
out
loop
cmp
imul
dec
pop
add
daa
lret
in
bnd
adc
cmp
cltd
out
aas
repz
enter
dec
daa
mov
lret
arpl
fdivl
subb
loope
pop
mov
mov
rep
add
aas
or
test
js
mov
bound
push
pop
cwtl
push
orb
into
imul
xchg
inc
int
mov
sarl
data16
pop
stc
and
cld
test
aad
pop
sbb
jmp
pop
push
mov
dec
pop
jno
inc
inc
je
add
mov
cmpsb
jne
adc
and
push
mov
mov
xor
fmuls
mov
cmpsb
out
push
das
lock
add
mov
add
mov
pop
out
stos
jg
mov
ror
jl
xchg
ds
rol
mov
mulps
enter
jg
icebp
insb
imul
rcrl
xor
out
sti
pop
xor
lods
mov
push
stos
push
jno
frstor
xor
dec
push
pushf
dec
adc
inc
push
push
mov
lret
aas
lods
or
sbb
sub
sbb
jb
add
cltd
sub
sbb
adc
jecxz
xchg
sub
scas
inc
xchg
xchg
movsl
enter
push
push
mov
xchg
jno
cmpsb
cmc
outsb
xchg
jae
test
in
mov
in
push
addl
mov
outsb
outsl
and
mov
and
flds
insl
push
pop
push
adc
lods
repnz
push
in
scas
stos
mov
loop
and
das
mov
mov
push
icebp
test
adc
loop
adc
push
imul
cwtl
sbb
add
mov
inc
gs
adc
jb
adc
repz
jp
flds
int
adc
or
sbb
mov
xlat
dec
jae
jne
jg
inc
popf
imul
int
and
mov
add
cli
pop
push
cli
jne
loop
jne
push
jle
out
and
stos
sub
sub
and
adc
jae
adc
xchg
xor
adc
jae
dec
fs
data16
jb
cmpsl
sbb
sbb
push
adc
mov
fs
out
popa
je
xor
icebp
pop
repz
mov
mov
mov
iret
lea
cmpsb
mov
outsl
ja
imul
xchg
dec
lret
or
repz
push
filds
call
and
inc
mov
sub
jmp
int
xchg
cmp
add
js
jge
mov
popf
ficompl
addr16
test
pop
leave
insb
ss
clc
fcmovbe
scas
push
xchg
inc
adc
idiv
jge
adc
outsl
movsb
mov
mov
call
xor
cmpl
jo
mov
shll
fsubs
cmpsb
dec
ror
inc
jns
lock
test
and
cmpsb
jb
pop
rcpps
sub
out
gs
sbb
push
xor
mov
movsl
out
movsl
call
sbb
jbe
lahf
movsb
dec
pushf
shlb
and
mov
test
and
aam
imul
adc
aad
cmp
xor
ss
mov
sub
aas
pop
sub
fldz
ret
adc
adc
std
repz
push
push
jb
dec
mov
inc
ds
inc
fdivs
lahf
lods
cmp
push
stos
shlb
insb
out
sarl
les
inc
jg
mov
push
jecxz
mov
pop
mov
movsb
cmpsb
outsl
mov
cli
stos
adc
pop
fdiv
repnz
stos
decb
pop
adc
test
bound
les
lods
cld
push
or
rcll
les
js
aas
call
sbb
cmp
adc
stos
vmwrite
ljmp
cmp
jle
jmp
sub
xor
popf
mov
xor
in
adcl
lret
mov
push
popf
incl
push
js
adc
in
push
stos
loope
scas
mov
cmp
ss
push
daa
inc
andl
dec
ret
aaa
lahf
adc
jne
xor
or
xlat
sbb
add
je
cmp
jb
jl
je
jbe
jae
push
sbb
push
movsl
push
sub
adcl
pop
push
call
add
clc
pop
ret
scas
test
lds
imul
cmp
xchg
xor
xor
shll
inc
popf
insl
scas
sub
call
fcomps
ret
or
xor
sbb
fisttpl
lahf
push
push
mov
fbld
sarl
ja
popa
outsl
jne
push
inc
sbb
xor
dec
mov
int3
int
push
rorb
leave
repnz
sti
out
stc
adc
aaa
push
jo
pop
or
jo
clc
xor
cmpl
adc
xor
cmp
dec
mov
stc
iret
mov
inc
dec
jne
addl
aam
jns
lods
lcall
or
dec
push
cmc
mov
daa
orb
sbb
inc
dec
sti
int3
sbb
call
fdivrl
cld
mov
jb
adc
and
cmp
test
addl
adc
dec
jns
int
push
or
push
fld
or
adc
loop
clc
xchg
jp
or
mov
adc
fmuls
jle
dec
mov
mov
mov
push
cltd
testl
popl
dec
adc
xchg
aaa
in
or
jno
repnz
popa
push
rclb
cmp
mov
push
dec
adc
fildl
jbe
sbb
leave
pusha
add
sub
gs
orl
insb
jp
inc
dec
adc
inc
cmp
sbb
dec
mov
notl
add
mov
mov
fimull
cmp
or
test
sbb
and
cld
jb
fmuls
and
lcall
mov
xchg
call
inc
stc
add
inc
ds
test
inc
rclb
and
add
ret
and
enter
sbb
mov
jg
pushf
jmp
jnp
sbb
fisttpll
ljmp
or
or
or
pop
dec
pop
push
xchg
iret
rclb
cld
push
mov
rorl
aam
rolb
mov
or
push
out
mov
and
fwait
sbb
in
mov
pop
adc
push
and
testl
jnp
jp
or
fs
xchg
and
push
push
sub
fwait
test
cld
in
adc
stos
fwait
subl
sti
add
fwait
insb
fisttpll
xchg
mov
sub
mov
fmull
les
dec
cmp
insb
mov
inc
jne
and
jg
loopne
dec
mov
inc
insl
and
insl
inc
jecxz
scas
mov
jp
stos
shll
pop
test
sbb
lahf
adc
xchg
loopne
cmp
or
lods
imul
les
adc
out
scas
aaa
xchg
cmpsl
inc
jo
enter
rol
inc
add
mov
shll
adc
mov
xlat
divl
bound
shll
and
mov
push
pop
enter
ljmp
inc
fcoml
xor
adcb
cld
push
push
adc
mov
mov
push
or
jmp
dec
rcl
jmp
xlat
sbb
xlat
cli
push
jle
or
movsl
cmp
call
jge
xchg
mov
lcall
pop
cmp
test
lds
pusha
mov
aad
push
insl
pop
and
jae
cmp
shrl
mov
push
and
add
outsb
adc
fildll
mov
outsl
cmp
dec
mov
xor
sbb
add
and
jo
stc
ljmp
repnz
lcall
dec
push
pop
mov
test
and
fistps
out
leave
sbb
add
scas
shlb
jne
add
mull
std
out
outsl
notb
jmp
mov
sbb
test
xchg
cmp
push
mov
pop
std
scas
pop
icebp
pop
stc
test
ret
call
ljmp
sub
rorb
dec
sub
inc
mov
test
or
mov
movsl
sub
pop
aas
in
jo
jmp
ds
sbb
xor
add
mov
mov
or
lock
lret
mov
jmp
mov
sub
sub
ljmp
faddl
ds
call
cmp
mov
and
or
cmpl
lcall
ret
adc
mov
push
cwtl
dec
mov
push
push
mov
loope
addb
mov
push
sbbl
push
in
mov
inc
ret
jl
faddl
sbb
xchg
pop
jnp
cmp
mov
out
movsl
lret
adc
ss
cltd
add
sub
mov
scas
or
aam
loopne
push
shll
loopne
add
call
test
jb
cmp
sahf
clc
repnz
int3
cmc
lods
add
ss
pop
cmp
mov
std
sub
movsb
cltd
pop
iret
inc
mov
mov
mov
stos
xchg
and
sti
ljmp
push
mov
dec
mov
xchg
mov
adc
jle
clc
cmp
cmp
sub
adc
cs
cwtl
pushf
js
or
add
mov
jge
outsb
int
inc
movsl
jl
sub
cmpb
fs
xchg
or
jge
ja
push
cs
lret
adc
cwtl
xor
push
sbb
jnp
inc
scas
mov
rcll
mov
dec
dec
sbb
not
ss
mov
sbb
cmp
mov
test
les
mov
push
push
add
fbstp
cs
sbb
mov
sbb
js
mov
loopne
lea
loope
call
sarl
test
jne
nop
loopne
aam
cli
add
test
lcall
add
stc
xor
lods
inc
std
in
inc
or
pop
mov
cmc
adc
jne
je
push
loopne
pop
push
pusha
dec
pop
fs
loop
mov
call
add
cmp
and
xchg
stc
ficomps
lret
pop
lea
and
sub
sbbl
add
cmpl
push
mov
xchg
in
arpl
repz
call
sbb
inc
stos
imulb
inc
and
sahf
mov
sbb
nop
mov
dec
push
jg
stos
ja
mov
xchg
imul
ret
cmc
inc
dec
mov
roll
lock
adc
sbb
jno
stos
push
push
cmp
nop
ror
loop
stos
sub
adc
fcomip
js
in
jb
lahf
jl
mov
dec
mov
aad
mov
pop
push
jge
add
add
jne
aaa
pop
les
or
aas
mov
pop
xor
insb
sbb
std
pop
sbb
cmc
pushf
jl
cld
adc
push
adc
in
pop
sub
jl
xor
jno
or
mov
mov
sti
mov
xchg
xor
int3
mov
pop
int3
adc
scas
jmp
push
decl
mov
mov
mov
arpl
inc
lea
pop
jo
pop
pusha
insb
sbb
and
xor
dec
sub
loope
add
ja
pop
xor
mull
filds
dec
jno
fcom
scas
inc
mov
popf
jmp
subl
jge
call
pop
xchg
and
or
adc
xchg
lods
ljmp
sub
mov
and
xor
stos
in
int
and
sub
and
jne
mov
ficoms
lods
sub
sbb
push
sbb
jb
daa
sbbb
sub
push
rcll
xchg
dec
jge
adc
and
mov
test
adc
and
mov
mov
aaa
and
stos
xchg
add
inc
mov
lds
inc
inc
pop
sbb
popf
cwtl
lods
lcall
mov
mov
jb
sarb
das
loop
push
sbbl
pop
rcrb
and
in
sbb
sub
inc
outsl
imul
sti
movsl
add
ja
push
add
xchg
cmpsb
mov
stos
xchg
add
mov
push
cmc
stos
bound
clc
adc
jmp
fadds
adc
pusha
xchg
sbb
cmp
and
int3
ljmp
sbb
jnp
adc
push
cmp
pop
sub
lock
sbb
cs
cmpl
mov
js
stos
adc
mov
mov
cwtl
insl
or
xchg
shlb
cmp
test
adc
stc
dec
inc
or
cmp
cmp
or
or
xor
dec
je
popa
jo
mov
sub
jmp
stc
inc
bound
push
icebp
pop
imul
mov
pop
in
cmp
push
adc
push
pop
sbb
imul
ret
subb
mov
cmp
lahf
dec
loop
movsb
jl
fwait
rep
sub
jns
popa
orl
pop
arpl
push
lret
inc
pop
jbe
add
clc
ret
adc
int
cld
dec
pop
inc
outsl
mov
cli
xchg
imul
sbb
adc
sub
mov
xchg
jle
inc
out
aam
ret
mov
ljmp
push
movsb
lret
adc
inc
dec
or
jno
aad
dec
imul
int3
jle
adc
xor
push
dec
aam
leave
test
insl
mov
mov
pop
pop
daa
cltd
fildl
mov
fidivl
jae
mov
and
pop
adc
xor
dec
mov
std
mov
push
and
adc
push
imul
or
mov
test
xor
mov
xchg
jle
les
dec
stc
fisttps
cmp
fldl
test
xor
sbb
jmp
out
push
xorb
mov
ljmp
xchg
sub
clc
test
ret
lret
rclb
jecxz
mov
sub
hlt
adc
test
testb
int
out
stos
sub
mov
addb
lcall
pop
popf
jl
cmp
push
and
sbb
jb
movsb
movsb
in
cltd
push
das
and
adc
int3
or
push
adc
add
out
push
and
mov
ss
cltd
mov
cmpsb
insl
sbb
loopne
adc
mov
sub
sub
sbb
cltd
hlt
jl
mov
out
shr
adc
orb
push
and
or
dec
adc
daa
fiaddl
cmp
ds
and
dec
sub
leave
out
dec
outsl
es
out
pop
push
and
jne
inc
out
das
mov
imul
sbb
sbb
in
mov
jno
mov
stos
loope
in
popa
cmpsb
push
shll
jle
loope
pusha
mov
ds
jbe
jo
sbb
fs
sahf
xchg
mov
bound
jmp
mov
hlt
and
adc
ds
fwait
push
or
pop
pop
mov
mov
loope
mov
adc
inc
push
xor
add
or
sub
mov
roll
and
mov
fisttpll
sbb
out
pop
xchg
cmp
jo
and
daa
js
call
cmp
mov
scas
andb
popf
sub
and
jae
out
inc
push
imul
fnstcw
popf
mov
sub
adc
mov
jp
out
rcrb
pop
add
clc
sbb
cs
adc
jne
adc
jo
cmpl
pop
xchg
adc
add
add
xchg
jae
bound
add
adcb
ja
mov
test
ret
cmp
inc
add
sub
push
xchg
mov
sti
int
test
aad
and
mov
mov
dec
push
xchg
insl
and
loope
add
cwtl
mov
out
xor
lods
jle
les
in
mov
or
idivb
push
jns
mov
imul
cmp
mov
or
and
and
sbb
sub
cmc
rorb
and
sbb
sub
dec
into
xor
xchg
xchg
sub
aam
mov
out
iret
xor
jae
call
inc
cmp
fistpll
fnstcw
scas
push
sub
popf
mov
icebp
pop
xlat
jl
loope
aad
test
jae
add
xchg
shll
mov
movaps
fnstcw
cmp
adc
add
das
gs
add
dec
decl
pop
mov
add
inc
and
ds
mov
gs
nop
pop
or
xchg
fbstp
cmc
int
add
sbb
ljmp
and
popl
outsl
popf
popf
sub
push
mov
cmp
gs
mov
or
orl
call
dec
push
mov
das
mov
jae
les
jbe
leave
and
ss
add
add
add
sub
adc
sub
adc
push
adc
testb
cmp
jle
xchg
insl
mov
clc
cwtl
fwait
sti
xor
pop
lods
pop
mov
xchg
sbb
test
mov
out
int3
in
rcrb
dec
pusha
add
nop
lock
mov
or
mov
cmp
aam
insl
outsl
je
addr16
inc
es
cmp
mov
aad
dec
or
daa
loopne
enter
xorb
cmc
mov
rorl
mov
xor
ss
dec
fldenv
pop
mov
or
int3
mov
dec
divb
push
shr
js
jmp
pop
xor
ja
xor
call
int3
xchg
loop
cld
inc
enter
mov
xchg
shlb
xor
jge
insb
loope
and
fldenv
mov
cmp
or
mov
sbb
loopw
enter
mov
lahf
sub
push
adc
lock
lret
rorl
sub
test
fmull
push
test
lahf
xor
sub
push
aam
repnz
popa
std
nop
es
jge
mov
fmull
xor
xchg
idiv
cld
sbb
cmc
push
leave
shll
cmc
cmp
mov
push
arpl
inc
addl
mov
sbbl
sub
je
mov
sub
fstps
lret
stos
jp
jns
and
mov
add
test
and
enter
in
or
addb
in
add
push
inc
mov
sub
dec
out
daa
and
dec
je
insb
jge
insl
sbb
xchg
mov
neg
repz
mov
cli
insl
enter
outsb
neg
add
sub
pop
push
test
leave
xor
fwait
lahf
out
sub
and
and
pop
xchg
push
out
out
imull
fadds
pop
dec
add
or
and
inc
cmp
les
mov
popa
xchg
jns
out
ds
popa
pop
dec
cmc
arpl
test
fsubrs
mov
negl
add
decl
cs
xor
sbb
add
adc
xor
lods
cwtl
in
cmp
pop
mov
js
les
lahf
ja
jg
dec
popf
and
lret
fwait
rcr
dec
movsl
xchg
pop
stos
adcl
push
int
dec
sarl
pop
arpl
leave
pop
in
daa
add
rcr
ss
cli
jg
cmp
or
sahf
xchg
test
out
add
divl
enter
movsl
add
shlb
sub
pop
inc
mov
pusha
add
in
pop
add
sub
xchg
fsts
lea
popa
stc
mov
add
mov
adc
mov
loopne
dec
cmp
xor
test
and
and
jno
jbe
test
rcrl
cmpsl
pop
mov
jmp
int3
pusha
jecxz
jmp
aam
push
popa
inc
cmp
cltd
mov
mov
into
sahf
cwtl
inc
adc
ss
pop
mov
sbb
stos
jp
test
jle,pn
or
dec
xor
xchg
lock
lods
cmp
pop
add
cmp
arpl
and
mov
adc
mov
pop
stos
jge
leave
xchg
ret
enter
push
and
inc
out
mov
sbb
sbb
inc
sub
jbe
xchg
lret
and
ds
add
cld
jmp
rcr
sub
jno
sbb
xor
add
and
pop
ficoml
imul
pusha
jecxz
and
shl
popa
sti
cmpsb
das
int
mov
sti
dec
shl
push
fadds
or
pop
sbb
push
dec
pop
mov
mov
xchg
outsb
and
std
sbb
mov
dec
sbb
mov
mov
xor
ss
aam
divl
jno
js
push
xchg
or
mov
outsb
xchg
pop
adc
and
in
add
adc
mov
push
or
int
cmp
aas
inc
fidivrl
sbb
jp,pn
jns
sti
push
or
xor
mov
mov
or
sbb
pop
push
inc
data16
inc
and
insl
and
mov
scas
ficoml
dec
sbb
inc
enter
xor
sbb
jmp
fxch
mov
push
xchg
test
lret
hlt
fnstenv
aam
or
in
and
hlt
jle
jne
jns
inc
jns
inc
mov
sub
sub
xor
lret
fcomps
movsl
and
aas
sbb
pop
mov
cli
cmp
or
test
push
out
dec
dec
dec
and
cltd
adcb
xor
rolb
sbb
lds
pop
push
push
pop
imul
inc
aaa
or
in
pop
jecxz
data16
pop
je
or
inc
or
addr16
ret
xchg
pop
xor
fcmovne
scas
test
push
popf
pop
sbb
sub
cwtl
out
mov
scas
ret
shrb
xor
repz
cmc
push
add
cmp
in
jo
shl
dec
xorl
lret
sbb
and
fwait
push
pushf
xchg
stc
push
int3
cmpl
test
and
pop
in
popf
cmp
insl
mov
sub
push
ja
lret
loope
ljmp
jl
pop
jp
scas
fdivl
gs
mov
and
fidivrs
mov
repnz
leave
jnp
mov
xchg
pop
mov
inc
jne
stc
jae
js
push
mov
cli
aas
cmc
lods
ds
jg
dec
xchg
cmpl
movsb
dec
aaa
ret
xor
cld
mov
xchg
subb
inc
icebp
sbb
push
add
or
push
cmpsb
repnz
out
cld
dec
out
mov
outsl
std
fdiv
cli
cli
mov
xor
ror
inc
adc
stc
xchg
sub
outsb
inc
outsb
ret
xchg
inc
add
test
xor
mov
inc
cmp
adc
sbb
pop
push
sbb
cmp
dec
in
jae
filds
xor
pusha
ficoml
cmp
stos
outsb
sbb
out
cmp
lea
repz
xor
es
mov
dec
or
inc
cmpsb
imul
add
adc
cmp
xchg
daa
add
add
cmp
hlt
pop
inc
inc
adc
or
push
loop
mov
and
dec
cmp
pop
inc
mov
pop
ja
sub
push
mov
cmc
mov
test
jae
push
jmp
mov
call
xor
daa
jb
add
add
dec
jb
stos
push
jle
dec
mov
sbb
mov
jmp
shlb
push
arpl
dec
and
lods
xlat
adc
mov
push
fildl
test
push
inc
and
push
jb
mov
out
ror
jl
push
fbstp
jne
pop
push
popf
lret
cmp
jb
xor
in
sub
inc
int
incl
call
xchg
xchg
mov
jle
subl
sbb
cltd
jo
aaa
and
adc
arpl
out
pop
aas
leave
cmp
xor
xchg
dec
jmp
or
pop
pop
xor
decl
xchg
repz
or
or
cmp
jmp
mov
ret
and
lret
ret
add
out
add
mov
daa
xchg
dec
or
dec
and
sbbb
in
sbb
cmp
inc
fwait
push
or
shll
pop
aad
adc
xchg
push
push
das
dec
push
adc
adc
inc
cltd
mov
addl
xor
xor
xor
or
or
aaa
jnp
mov
cmp
sub
inc
fildll
pop
lods
ret
or
push
clc
mov
adc
add
sahf
push
movsb
daa
dec
cmp
testb
into
xor
mov
and
push
sub
pusha
jp
outsl
xor
mov
or
out
or
ffreep
bswap
xchg
loopne
fildl
stos
inc
loope
in
sti
or
es
js
movsb
test
mov
sbb
xlat
cmc
ret
negl
pushf
fwait
sbb
mov
int3
cld
add
pop
cmp
mov
sub
cmp
loope
and
andl
mov
es
incl
pushf
cmp
je
and
pop
pushf
sub
mov
mov
mov
popa
xlat
add
cwtl
jecxz
or
sub
jb
jo
mov
fimull
stc
mov
rcr
scas
test
jecxz
xor
sbb
mov
or
sbb
or
cwtl
lahf
sub
fdivrl
bound
push
or
out
popf
mov
pop
mov
mov
addl
push
fcmovu
sbb
lds
into
add
outsl
and
in
xlat
mov
xchg
add
mov
or
xor
jge
movsl
adc
fstpl
imul
jbe
imul
sub
arpl
enter
adc
xchg
mov
push
repnz
sub
gs
fsts
jg
jo
push
and
das
popa
add
jle
sbb
das
stos
or
inc
dec
ret
mov
es
sarl
test
movzbl
bound
outsb
mov
jg
xchg
mov
sub
lret
xor
sti
mov
mov
xor
pop
enter
dec
pop
repnz
mov
out
or
jb
cmpsl
out
hlt
mov
pusha
add
push
gs
inc
and
sarl
push
add
xor
push
adc
into
jns
jb
jge
inc
out
xor
adc
popa
inc
js
lds
xor
or
jmp
inc
paddsw
cld
jl
in
jo
mov
out
and
aad
loop
outsb
xchg
arpl
outsl
mov
aam
jb
cli
dec
push
inc
mov
inc
cmc
cmp
dec
repnz
aas
pop
ds
icebp
cmp
lods
adc
test
add
add
or
sub
mov
lret
mov
inc
shll
xchg
xor
pop
lds
jae
dec
fbstp
push
mov
das
pop
push
jmp
in
push
pop
xor
or
mov
pop
int3
push
sub
xchg
data16
mov
ja
adc
shlb
dec
adc
je
lods
ljmp
imul
repnz
sub
movzwl
dec
jmp
mov
lea
cmpb
mov
inc
pop
mov
and
fbld
fwait
xchg
dec
mov
xchg
sbb
adc
pop
push
pop
jmp
ficoml
xor
sub
sar
es
decl
mov
pop
aas
push
dec
sti
mov
repz
pushl
sarb
dec
fs
jecxz
movsb
mov
das
mov
aaa
or
mov
dec
pop
outsl
push
mov
outsl
mov
jmp
hlt
adcl
imul
mov
add
xchg
xchg
mov
inc
rcrl
jae
gs
into
je
jp,pn
stos
xorb
test
imul
push
cli
cmp
std
pop
popa
iret
stc
outsb
rcrl
out
pusha
push
push
adc
aaa
xor
dec
mov
xor
mov
lret
mov
fs
lds
cmp
pop
addr16
or
push
cmp
lcall
push
js
cmp
or
shlb
bound
inc
test
mov
push
loope
js
in
adc
jns
gs
xchg
in
mov
ljmp
push
rcr
stc
jne
or
jb
lods
inc
dec
sub
mov
fimuls
jle
into
dec
enter
data16
gs
imul
inc
cld
xchg
or
add
sub
out
xor
scas
jp
push
int3
addl
jp
mov
push
add
jge
inc
xor
xor
movsb
mov
fwait
ret
stc
push
inc
sub
int
mov
jnp
xchg
pop
loopne
jae
imul
sti
bound
xor
loope
fisttpl
addl
les
xchg
sbb
inc
lret
mov
mov
xchg
fimull
rcrl
and
testl
rorw
aam
lret
imul
test
mov
adc
add
push
das
push
jbe
dec
push
loop
inc
jg
enter
or
dec
fdiv
inc
lock
xchg
dec
xor
jge
jecxz
pop
mov
fildll
lock
les
cltd
insl
dec
negb
das
shlb
inc
jns
notb
push
sahf
mov
hlt
lea
adc
cmp
xchg
push
dec
loop
sbb
dec
sbb
fistpl
out
jg
out
jl
imulb
lods
lea
nop
dec
mov
fildll
jo
jecxz
std
fdivl
test
mov
rclb
es
mov
repnz
dec
push
mov
mov
test
inc
outsl
sti
adc
clc
add
push
mov
mov
lcall
push
stos
flds
push
mov
je
and
push
pop
es
mov
lods
in
loopne
sub
in
es
cmp
fbld
mov
lock
aas
aad
js
popf
push
xchg
xchg
jle
jmp
rolb
in
and
mov
js
xor
les
loope
hlt
lds
cs
dec
daa
jg
in
add
adc
inc
mov
aad
lret
rol
cwtl
adc
test
ret
cmp
dec
sbb
sbb
aam
ffree
add
sub
cmp
std
mov
mov
sahf
ret
xchg
xor
ficoml
xor
nop
mov
clc
sbb
ss
xchg
jo
inc
sbb
sti
icebp
in
jmp
xchg
es
dec
and
pop
cmp
mov
xchg
and
dec
dec
test
aas
push
cmp
movl
push
or
es
jne
imul
add
imul
addb
outsl
push
inc
out
imul
sub
pop
dec
pop
jne
mov
dec
repnz
sub
je
and
mov
inc
pop
jle
dec
rclb
and
call
sbb
data16
push
leave
orl
pop
mov
ret
repnz
cwtl
insl
sbb
push
pop
cli
mov
add
popf
cmpsl
roll
mov
adc
pusha
lea
mov
stc
sbb
inc
mov
scas
push
out
push
dec
ljmp
inc
add
cli
jnp
xorb
xchg
outsl
inc
loopne
push
adc
sub
icebp
jno
push
mov
inc
fdiv
jbe
imul
dec
lret
mov
scas
fisubrl
adc
loop
pop
test
lods
fs
inc
jae
jle
movsb
adc
adc
inc
cmp
repz
lcall
or
aam
cmp
fildl
jns
mov
das
pop
add
into
repz
or
hlt
test
sub
pop
fsubl
mov
call
imul
pop
add
into
adc
loopne
test
cs
repz
pop
sbb
or
adc
mov
outsb
negb
or
data16
pop
xchg
pop
test
sub
shl
mov
lret
sbb
outsb
inc
je
sub
sub
out
aas
mov
aad
stc
lods
mov
push
or
jecxz
and
bound
cmp
sarl
cmc
and
lcall
hlt
inc
ds
and
inc
sub
pop
and
not
add
mov
sub
push
jns
scas
ficoms
or
push
ror
and
push
inc
inc
mov
dec
shr
sti
pushf
xchg
lock
aam
pop
inc
xor
iret
sbb
dec
mov
testb
jp
adc
push
sbb
inc
stos
push
mov
mov
insb
scas
in
dec
sub
add
inc
and
lock
push
lods
sahf
iret
cmp
pushl
push
mov
xor
mov
and
pop
and
nop
rcl
int3
in
cmpsb
mov
sar
shlb
mov
cli
ss
xchg
testb
dec
shlb
inc
addb
mov
in
cmp
sub
xchg
push
ret
outsb
test
xor
xchg
dec
inc
push
or
fnstenv
rcrb
push
inc
xchg
and
inc
adc
fwait
leave
add
jp
or
xchg
adc
xchg
unpcklps
mov
enter
mov
dec
push
fcomps
inc
je
xchg
adc
cmp
pop
jmp
fdivs
xchg
and
fs
inc
add
xor
push
cmp
sbb
movsb
shll
and
insb
cmpsb
mov
cmp
sub
lcall
mov
out
test
mov
and
fnstsw
insb
dec
dec
test
add
sbb
adc
out
test
imull
mov
xor
ret
stos
jo
aas
xor
les
mov
push
dec
ljmp
sbb
popf
repnz
popa
jmp
cltd
pop
clc
jno
cmp
jne
push
dec
outsl
xchg
and
mov
lods
add
or
sub
or
dec
andl
ljmp
nop
push
mov
aaa
dec
enter
xchg
enter
sbb
cmc
scas
aaa
push
lret
jmp
pop
pop
jecxz
cmp
xchg
js
pop
push
insb
ficompl
mov
dec
lock
push
movsb
repz
dec
in
xor
jns
ja
loop
mov
movl
sbb
movsl
xchg
mov
movsb
mov
fs
in
jns
jmp
pop
dec
and
mov
add
cld
sbb
jmp
dec
push
cli
add
lret
pop
sub
add
sbb
cmp
les
and
cmpsl
mov
adc
xor
es
jno
mov
pop
aad
pop
fdivs
xchg
stos
jbe
adc
jmp
xchg
mov
cmp
into
enter
inc
xchg
or
lahf
mov
mov
dec
jb
and
sub
xor
fwait
jecxz
movsb
xor
cli
push
addb
popa
lahf
lcall
push
addb
jmp
mov
push
jno
cld
pop
sbb
mov
js
andb
ret
bnd
and
push
or
xlat
lods
mov
dec
dec
addr16
sbb
fstl
jp
insl
pop
jo
sub
jb
call
js
jno
mov
inc
loop
adc
inc
aam
jnp
popf
xchg
jno
pusha
push
cltd
add
or
lret
faddl
cmp
pop
enter
addb
sub
js
fbld
std
popa
cwtl
push
loop
ja
cmc
dec
fwait
enter
cltd
sbb
push
inc
pop
inc
rcrl
xchg
or
add
jle
ja
cs
cmp
jle
pop
mov
jae
push
cmp
push
or
push
add
xchg
inc
add
into
pushf
daa
jb
push
stc
add
push
jp
addl
leave
mov
fcoms
adc
cwtl
xchg
andl
jmp
arpl
pop
push
shl
push
daa
pop
mov
jnp
dec
aad
cmp
and
andb
inc
outsb
std
mov
jns
js
aas
js
in
outsl
jl
lret
sti
stc
and
rcl
sub
push
lea
cld
inc
ffreep
jge
xor
or
add
in
adc
roll
mov
mov
adc
jp
orb
int3
aaa
add
mov
pop
xor
clc
add
enter
pop
dec
iret
outsl
ljmp
shll
in
dec
jl
mov
lahf
testl
aaa
jp
jl
inc
sub
sub
and
mov
push
or
loop
test
data16
ja
filds
push
add
and
inc
dec
and
jg
jae
lock
iret
cltd
lds
cmp
jle
shrl
xor
sub
mov
setle
dec
dec
cltd
cmp
pop
adc
cli
les
into
inc
push
and
cs
outsl
mov
scas
or
push
addr16
add
cmp
add
pop
lret
sbb
pop
sbb
cli
pushl
xchg
or
popa
push
or
loop
jo,pn
cmp
mov
je
stos
popa
roll
sahf
xorl
loop,pt
sub
icebp
jno
cmp
fsubl
pop
mov
cmp
out
in
cwtl
jne
shll
scas
jnp
ret
mov
sahf
xchg
sub
fs
sbb
push
cltd
aas
and
js
outsl
pop
and
xlat
mov
shlb
ss
sbb
add
stos
mov
pop
and
cld
mov
inc
std
stos
out
inc
inc
inc
test
inc
shlb
mov
cmp
aas
cmp
mov
fwait
ds
jp
jg
inc
adc
clc
mov
or
ret
or
imul
or
add
xor
or
insb
and
ret
shlb
lcall
lea
cmp
add
push
int3
bound
aad
pop
adc
mov
movsb
aaa
push
js
stc
aaa
jge
fadd
clc
push
out
sti
inc
add
xchg
ja
fstl
test
and
pop
sub
pop
xchg
cld
add
adc
or
push
or
adc
or
inc
cmp
inc
mov
shufps
dec
xchg
mov
mov
sbb
pop
xor
jae
sti
and
dec
sub
lret
ja
outsl
test
mov
lcall
iret
sbb
jbe
push
stos
mov
data16
inc
pop
inc
lret
jl
and
daa
xor
dec
mov
push
enter
andl
leave
call
add
dec
pop
add
in
pop
sub
cmpsb
jo
leave
iret
and
sbb
call
sub
cmp
add
pop
leave
imul
lret
sbb
lahf
push
jbe
xchg
adc
add
mov
sar
jns
nop
cmp
xchg
outsb
mov
mov
pop
clc
mov
cld
mov
push
mov
les
ja
cs
sub
not
test
lea
sub
dec
adc
rcrl
sbb
push
ret
inc
add
or
mov
push
push
cmc
xor
jnp
adc
jb
push
popf
xchg
inc
sbb
jne
das
in
or
cmp
scas
jle
add
stos
or
sub
mov
jns
shrb
cmp
and
inc
outsb
loope
test
mov
cmp
mov
fdiv
sub
fyl2xp1
lods
cmc
adc
aad
push
neg
xor
jo
mov
add
and
imul
cmp
add
jns
or
jns
xor
in
dec
mov
xor
out
clc
popf
ja
push
inc
pop
cmpsb
jo
mov
push
daa
cltd
and
jle
jo
loop
add
dec
jp
sarb
dec
bound
les
jle
mov
prefetchwt1
xor
xchg
cmp
daa
sub
xchg
popa
mov
xchg
mov
jb
xor
ss
test
sub
jne
sbb
add
cmp
cmp
add
and
and
and
out
cvttps2pi
sub
bnd
lret
inc
test
lods
adc
outsb
ret
imul
test
lcall
cmp
and
out
imul
adc
fnsave
lock
push
inc
dec
cmp
loop
popf
push
mov
push
dec
mov
pop
shl
add
adc
packssdw
mov
fiadds
scas
stos
stos
gs
mov
xor
inc
imul
loop
lock
cmp
test
int3
out
sbb
push
dec
incb
incl
mov
push
lods
cmp
test
arpl
jo
into
lret
ficoms
or
mov
push
cwtl
and
notb
dec
inc
push
xchg
xchg
lret
xchg
popa
xor
xchg
inc
add
sub
std
mov
les
sahf
inc
mov
cmp
add
push
xor
add
dec
xor
fs
mov
jno
xchg
enter
int3
adc
pop
test
les
pop
xor
or
push
hlt
sbb
jbe
sbb
fisubrl
loop
addl
push
dec
repnz
mov
out
push
mov
or
fwait
adc
mov
inc
jbe
int
leave
je
je
ss
xor
fldcw
sbb
data16
and
enter
rclb
lods
daa
into
cli
push
out
cmpsb
andl
mov
fcmovu
fnsave
fwait
mov
movsb
add
jns
cld
mov
dec
lret
daa
push
aaa
adc
je
mov
sub
out
mov
stos
jns
stos
sbb
out
pop
cwtl
pop
jl
push
lods
movsl
subl
sub
cmpb
cmp
and
pop
lret
into
rcrl
ss
mov
cmp
sub
mov
cmp
sahf
xor
lahf
dec
xchg
jnp
cmp
popf
jp
add
hlt
shr
xchg
jb
jmp
xchg
dec
xchg
cs
lds
leave
lock
sarl
pop
mov
mov
test
enter
mov
push
orb
fisttpl
mov
hlt
xchg
rcl
mov
pop
leave
mov
sub
addr16
lret
les
daa
cmpsl
pop
push
repnz
out
push
xor
stos
dec
jnp
vmptrld
jecxz
push
dec
addl
or
xor
or
movsb
outsl
pusha
adc
xchg
adc
rcll
out
dec
push
fwait
in
hlt
mov
mov
add
dec
xor
xchg
adcl
cmp
cmp
addr16
push
pusha
adc
push
and
push
xor
cltd
sbb
in
cmp
or
xchg
mov
es
into
xor
xorl
lods
adc
aam
das
int3
pop
out
push
dec
cld
mov
inc
add
adc
pop
iret
pop
or
fnstsw
pusha
sahf
xlat
xchg
ss
popf
push
push
out
mov
mov
in
mov
stos
into
jle
movsb
fidivl
pop
insb
icebp
dec
fistpl
pop
and
xchg
push
call
aas
outsl
ror
mov
xchg
scas
mov
into
inc
imul
addb
clc
adcl
scas
jl,pn
push
push
dec
mov
inc
dec
test
dec
mov
lods
inc
enter
rol
jae
and
fbstp
or
lods
or
dec
inc
pop
sahf
add
push
rcll
movups
jle
test
adc
mov
jg
lea
adc
in
dec
das
mov
add
inc
in
jg
xor
mov
ss
cmp
fwait
adc
push
xchg
mov
dec
xor
push
add
sub
and
jae
add
fcomi
and
dec
inc
scas
fnstenv
lods
aam
ds
mov
sub
xor
jae
jl
cli
jno
cmc
aas
shlb
rcll
sti
cmp
incb
sahf
pop
add
addr16
jne
cvttps2pi
cs
outsb
outsl
enter
fisttpl
push
cmc
and
mov
popa
pop
ret
insl
imul
inc
mov
push
pusha
push
lea
sub
jbe
xchg
lea
addr16
repz
sbb
test
cwtl
cld
in
int
mov
jge
jo
sub
je
jne
pop
push
ss
shr
stc
loopne
xor
sarb
sub
pop
test
mov
xor
pop
ss
pop
push
jl
cmpb
inc
inc
clc
jmp
add
xlat
ljmp
or
lods
popa
fdivrs
pop
mov
pusha
xchg
pop
cld
adc
lods
mov
adc
push
and
push
inc
push
iret
rolb
popa
out
add
and
rorl
test
fbstp
sub
fdiv
in
jne
or
in
es
push
mov
dec
adc
fdivr
mov
dec
cld
hlt
fcmovne
out
cli
pushw
fstl
pop
dec
cmp
fildll
inc
cmpsb
fisttpl
cmp
sbb
jno
lahf
sub
addl
iret
in
in
dec
ja
repnz
bound
and
out
sub
jecxz
ss
push
dec
sbb
or
stos
stos
movsl
in
dec
add
jb
inc
das
add
or
ja
and
lock
mov
test
cmp
cmp
dec
cmp
into
stos
push
adc
leave
js
call
sti
or
xchg
lahf
shlb
repz
push
shll
cmp
add
leave
jns
repz
in
clc
inc
and
jbe
pop
push
push
mov
inc
mov
push
in
inc
sbb
test
aas
imul
add
sub
mov
in
sbb
jno
test
push
cli
dec
fbstp
or
push
and
stos
add
lods
jmp
loop
outsl
jns
ss
push
dec
jp
mov
gs
sbb
and
or
fadds
or
mov
cmp
inc
mov
daa
es
nop
add
mov
xlat
sbb
xor
pop
push
loopne
orl
adc
cltd
sbb
mov
mov
pop
outsb
std
push
mov
insl
mov
adc
mov
mov
lret
xchg
fcmovbe
push
add
pop
shrb
in
pop
aas
lods
xchg
dec
fistl
push
mov
sahf
mov
sarl
sbb
jnp
mov
xchg
push
call
xchg
pusha
push
pop
test
adc
dec
fsts
outsb
fsubp
scas
cwtl
es
push
scas
jae
adc
jmp
xchg
ret
ljmp
aas
push
mov
insb
and
mov
pop
and
mov
pop
mov
mov
pop
push
stc
or
repz
sarl
mov
sarl
dec
sbb
test
pop
in
inc
mov
imull
cmp
leave
dec
mov
and
stos
aad
call
dec
clc
jmp
mov
stos
enter
jl
inc
loopne
push
add
cmp
call
or
lret
pop
daa
aaa
dec
dec
lds
push
jbe
into
mov
add
jl
or
jne
outsb
and
or
dec
xlat
lahf
cmc
inc
mov
push
pop
mov
dec
pushf
rcl
fwait
es
aam
repz
or
das
xchg
or
mov
add
int
sub
mov
and
fnstsw
mov
fidivrs
mov
sub
cmpsb
inc
shlb
adc
mov
cmp
rcl
js
arpl
mov
dec
jne
sbb
sbb
inc
and
je
and
xor
or
sbb
pusha
adc
test
inc
inc
jnp
pop
cli
pop
or
mov
dec
fldcw
enter
fisttpl
push
xor
jl
jp
loope
add
xchg
push
ror
jle
dec
push
out
jae
push
fcmovnb
negl
outsb
insb
add
hlt
push
or
idivb
mov
setb
and
idivl
push
pop
rorb
dec
pop
test
pop
sbb
sbb
cs
cmpsl
mov
shrl
sub
mov
sub
push
cmp
xchg
and
lahf
xor
jg
jmp
pop
jecxz
sub
pop
lods
mov
fcmovnb
sub
lea
mov
and
mov
push
or
mov
pop
pop
adc
xor
popf
jae
mov
cmp
cmp
xchg
outsl
mov
sub
sub
sbb
inc
jbe
pop
and
mov
and
pop
add
adc
xchg
mov
call
stos
xchg
adc
pop
push
mov
jle
or
cmp
pop
aam
lret
xchg
sub
fcmovbe
hlt
push
inc
leave
shl
inc
in
mov
test
mov
or
inc
mov
sub
pop
and
add
push
cmp
cmp
or
imul
inc
mov
mov
sbb
fstl
pop
adc
jl
cld
sti
inc
add
cwtl
outsl
popf
fldenv
stos
lret
sub
xchg
add
sbb
mov
inc
add
inc
mov
sub
xlat
rorl
outsb
insl
stos
imul
imul
mov
pop
lahf
sahf
jmp
cld
out
call
data16
adc
sub
push
icebp
idivl
xorb
mov
push
inc
aas
inc
hlt
test
rorl
popa
ss
jmp
mov
ror
in
repz
jae
fs
movsl
push
insl
push
cmp
mov
es
pop
mov
stc
rcl
mov
movsl
jo
pop
dec
inc
adc
std
xlat
sbb
jmp
aam
mov
je
imul
sbb
adc
popa
push
cli
loopne
mov
movsl
je
jecxz
inc
mov
mov
outsb
in
jecxz
adc
adc
push
test
inc
jno
fwait
test
out
insb
dec
lahf
sub
fwait
int3
sbb
add
mov
loopne
ljmp
sub
push
and
xor
cmp
addr16
aad
or
adc
mov
cmc
mov
shrl
inc
cltd
int3
push
dec
or
ret
imul
push
call
adc
adc
aas
jne
xchg
fs
inc
adc
pop
pushf
pop
jne
pop
cmpsb
ja
add
mov
inc
dec
rclb
xchg
addr16
adc
xchg
aad
sub
cmp
imul
fstpt
inc
aas
jmp
sub
dec
mov
mov
cmp
pop
dec
inc
mov
sub
adc
aam
jnp
lock
push
pop
mov
stos
into
cmp
imul
xchg
imul
in
xchg
xchg
fisubs
fwait
dec
inc
sub
les
vrsqrtps
xchg
dec
callw
push
mov
push
adcl
and
stc
popa
cmp
ss
add
add
faddp
jo
xorl
negb
dec
test
add
ret
sub
stos
out
and
daa
jb
jp
xlat
sar
std
mov
xor
cltd
cmp
inc
pop
xchg
sbb
adc
loope
dec
aaa
cmpl
or
inc
in
call
les
pop
cli
dec
jl
xchg
mov
in
lea
xchg
push
ret
stc
pop
pop
sbb
das
int
lcall
jo
xor
mov
xor
pop
adc
cmp
pusha
jg
cmpb
daa
jae
pop
sub
jb
ja
dec
iret
sbb
imul
inc
pushf
lret
test
lock
jmp
ds
fistl
xorb
adc
js
dec
in
cli
ror
stos
jecxz
fsubrl
lret
jne
lcall
mov
or
arpl
or
pop
adc
adc
dec
sub
push
xorl
leave
cmp
jb
imul
jmp
ret
jle
add
aam
ss
ret
sbb
enter
outsb
mov
sub
aaa
add
xchg
xor
jecxz
dec
xchg
cli
push
loop
jmp
iret
imul
mov
jg
jno
scas
xor
sbb
cmpsl
push
adc
xchg
frstor
dec
and
sub
xor
aas
sub
or
pop
jbe
and
xor
xor
loop
jp
jmp
lock
push
adc
add
jmp
jl
mov
stc
xchg
sub
shll
daa
sbb
addr16
notb
imul
jne
xor
dec
adc
insl
cld
fimuls
and
push
jb
cld
lea
popf
stc
shrb
fcoml
comiss
mov
mov
add
out
or
mov
mov
cwtl
jecxz
stos
pop
jns
xor
adc
push
enter
rol
or
adc
psubsw
xchg
pop
xchg
adc
push
insb
inc
pop
out
or
popf
imul
clc
test
shll
sbb
out
into
aaa
int
sub
push
push
pop
cmp
call
jge
inc
popf
sahf
fsubrl
lea
dec
or
cmp
js
aaa
cmpsb
mov
imul
sarl
push
xor
cld
es
or
pop
movsb
sbb
mov
cmpl
ljmp
dec
xchg
mov
mov
movsl
iret
fldenv
ljmp
loope
jo
inc
and
stos
push
cmc
dec
add
mov
adc
movsb
adc
jb
push
or
mov
sbb
je
or
xchg
inc
outsb
mov
mov
insl
mov
cmp
imul
mov
fcmove
jno
mov
pop
scas
or
xor
std
sub
sub
test
mov
pop
rep
cmpsb
insb
loop
pop
in
xchg
dec
aaa
cld
repz
adc
call
pop
fnstenv
cmp
jmp
push
inc
sub
xor
scas
jns
pop
inc
imul
xor
push
xchg
enter
in
pop
les
inc
lea
mov
add
dec
push
jne
inc
inc
out
inc
orl
dec
and
sub
cmc
cmp
or
rcrb
or
adc
aad
sub
sarl
and
icebp
pop
jno
inc
pop
fistl
push
subl
and
jmp
movsb
ljmp
in
test
fs
ja
sahf
push
scas
push
mov
pushf
xchg
jne
mov
adc
push
cltd
outsb
or
jns
pop
pop
push
popf
pop
xor
dec
xchg
push
addr16
lret
mov
pop
sbb
pop
arpl
pop
xor
xchg
mov
mov
dec
in
mov
test
or
pop
mov
mov
cwtl
sbb
add
mov
icebp
lcall
dec
sti
jnp
inc
fmull
push
lods
popf
roll
sbb
adc
das
cmp
leave
pop
fs
jo
pop
sbb
xchg
pop
push
mov
aaa
daa
inc
inc
scas
mov
dec
inc
sbb
jg
cmpsl
mov
mov
stos
loop
repz
arpl
cli
stc
xchg
js
cli
sub
xor
into
ret
xchg
inc
icebp
mov
je
dec
adc
inc
dec
sbb
test
sar
or
insl
cmp
and
aas
in
push
arpl
mov
mov
fmuls
add
jl
adc
daa
push
cmp
pop
xchg
popf
dec
cmp
pop
mov
push
mov
or
mov
out
cld
int3
mov
add
inc
or
cwtl
inc
push
aam
jb
fnstcw
or
xchg
or
nop
sbb
pop
out
rcrl
call
mov
push
popf
fcom
fnstenv
or
arpl
test
or
mov
lcall
pop
jmp
pop
jo
pop
inc
jmp
hlt
adc
push
mov
out
iret
or
mov
dec
dec
out
cmp
lret
add
fmuls
mov
lods
cli
mov
scas
adc
mov
xor
mov
dec
push
test
out
ret
aas
mov
addr16
movsb
pop
xchg
stos
sbb
and
jmp
lock
dec
xchg
adc
mov
insb
daa
lods
cs
rol
outsl
add
pop
nop
adc
or
pop
jb
std
push
inc
ret
sbb
push
push
pop
shrb
insb
push
xor
and
daa
xor
push
rep
xchg
jb
sub
dec
jae
jp
fisubrs
mov
adc
jb
ds
movsb
push
fwait
scas
or
daa
mov
lret
jmp
in
and
divl
xchg
or
fiadds
lods
nop
push
leave
xchg
xlat
in
daa
ds
in
jge
leave
fdivr
in
inc
jno
push
jecxz
es
xchg
dec
shll
dec
decb
mov
scas
dec
adc
fdivs
iret
rcll
sbb
cmpsb
xchg
sti
mov
outsl
int
repz
lock
mov
arpl
and
enter
pop
lods
mov
jl
fnstsw
add
push
jae
xchg
insl
add
inc
rol
push
test
or
jno
cmp
mov
fsin
lock
sub
out
adc
push
xor
xorl
or
ja
icebp
lahf
aad
adc
cmp
jle
add
add
aad
fs
test
loope
roll
in
xchg
cmc
enter
mov
cmp
test
stos
mov
and
jge
test
push
push
inc
push
mov
dec
push
cltd
xor
push
pop
loop
mov
jle
jns
and
xlat
mov
mov
xchg
xchg
roll
jne
repnz
call
out
push
or
into
in
in
sbb
mov
mov
insb
das
mov
mov
in
stos
add
mov
pop
repnz
hlt
iret
add
clc
shrl
pop
mov
or
add
xor
dec
xor
imul
lods
xor
jne
cmp
dec
into
jnp
xchg
or
fcomip
xchg
imul
sbb
push
testb
push
shr
daa
divb
repnz
fdivp
dec
mov
stos
enter
jbe
xchg
dec
mov
push
popf
or
call
mov
cmpl
mov
cmp
pop
aas
xor
mov
ret
push
push
movsl
mov
push
je
xchg
jb
js
fisubl
jns
test
cltd
mov
push
in
mov
adc
inc
int
push
fisttpl
jl
xchg
dec
imul
adc
dec
inc
popa
insl
fisubl
xor
hlt
mov
test
adc
xchg
stc
mov
push
movsb
push
cmp
pushf
icebp
adc
jne
clc
aam
scas
gs
jecxz
pop
clc
cmpsb
std
fstpl
pop
push
test
cmp
inc
jbe
cmp
xor
mov
and
cmp
dec
push
and
mov
sub
repz
sub
xchg
hlt
mov
outsl
push
roll
fsubp
push
push
mov
movb
ljmp
pusha
inc
mov
cwtl
jmp
aas
dec
jns
or
dec
idivl
shrb
dec
cmp
testb
inc
mov
mov
xchg
les
mov
mov
scas
cmp
cmp
clc
jne
dec
stc
jge
add
xor
dec
rcr
or
cmp
add
dec
loopne
pop
lods
sbb
dec
lcall
pusha
leave
xchg
xchg
pop
xor
mov
and
adc
insl
push
push
negl
pop
mov
jae
shl
or
mov
and
and
and
inc
mov
push
or
and
pop
dec
dec
fisubrl
cmpsb
push
outsl
mov
mov
push
jbe
lock
aad
test
sub
imul
cmpb
jmp
test
lcall
jae
repz
dec
push
dec
sub
fcomp
mov
stc
cmp
ss
adc
xor
icebp
gs
outsb
adc
mov
fwait
cmpsl
fs
in
jbe
jge
lahf
fsubrl
push
sub
sbb
jg,pt
stos
gs
daa
fildll
repz
add
test
dec
sub
call
pop
jns
mov
outsb
inc
xor
gs
int
mov
adc
push
mov
jno
pop
or
mov
clc
xor
jo
es
mov
push
push
mov
cmp
lret
clc
xor
fmull
das
sbb
call
mov
or
lea
int3
push
div
movsl
adc
cmpsb
lea
cli
pop
or
ljmp
xchg
dec
out
int
mov
add
dec
xchg
xlat
outsl
insl
es
mov
fimuls
mov
test
shl
jle
fists
xchg
hlt
mov
aam
jl
inc
or
pop
outsl
mov
jbe
cmp
dec
cld
ret
clc
inc
push
ss
pushf
mov
jno
fldcw
mov
and
lea
dec
fists
fsubrl
je
jae
or
pop
sub
cmp
in
lods
movsb
inc
movsb
hlt
inc
xlat
lods
adc
int3
out
idivb
xor
mov
idivl
int3
enter
xor
lahf
pop
add
mov
and
mov
push
mov
inc
sbb
mov
or
arpl
enter
shl
xchg
push
xor
mov
cmp
push
add
sub
cmp
jecxz
mov
xor
test
inc
inc
jae
cmp
lods
pop
sbb
add
xor
popf
sbbb
psraw
jp
jp
scas
and
ss
jle
movsl
int3
xchg
push
pop
sarl
aad
out
in
mov
dec
inc
cld
dec
mov
data16
jle
cmc
push
mov
dec
add
dec
cld
push
fnstcw
inc
push
insb
cmp
mov
lcall
mov
and
lret
aaa
gs
into
fsubr
mov
pushf
enter
inc
lea
xchg
jns
into
enter
jae
and
rcr
mov
neg
xchg
dec
loop
stc
cwtl
and
je
pop
push
dec
push
lock
push
push
pop
sbb
lods
inc
sub
lcall
xorl
or
mov
push
pop
mov
test
pop
xlat
push
cmp
sti
stos
int
pop
pusha
dec
cli
test
push
mov
scas
jb
jne
push
or
js
dec
iret
clc
je
fcompl
cmc
adc
or
lcall
or
push
data16
stos
addb
test
rol
clc
test
jg
dec
jmp
sub
mov
lds
pop
mov
mov
gs
inc
stc
push
push
mov
cmp
jne
inc
je
sbb
mov
sub
xor
fisttps
ds
ficoml
sbbb
out
add
cltd
scas
out
dec
push
outsb
add
icebp
mov
popa
inc
sub
jnp
jge
or
rcll
mov
jp
and
jl
je
mov
test
testb
clc
pop
push
jmp
xchg
jl
jbe
mov
and
xor
xor
jle
shlb
xchg
sbb
nop
sub
andb
outsb
test
test
push
adc
dec
jo
lea
push
pop
xor
add
aam
lahf
je
insb
aam
arpl
mov
jecxz
adc
cmp
jg
and
int
and
ss
xor
mov
adc
insl
and
jb
clc
movsb
jmp
inc
inc
movsl
add
xor
cmc
cmp
adc
jno
jmp
pop
sbb
fstp
fmuls
imul
jns
das
adc
js
cli
icebp
aad
imul
repz
scas
aaa
inc
push
jb
or
mov
daa
xlat
and
adc
mov
std
rolb
stos
xor
xchg
js
cwtl
movsl
mov
mov
xchg
fcoms
sub
ljmp
cs
push
sub
push
cs
in
xchg
dec
test
sbb
js
pop
push
fldl
dec
or
insl
xor
aad
sarb
add
cs
ss
cltd
sub
fidivs
pop
or
mov
push
jp
movsl
aad
nop
dec
inc
pop
fcompl
fidivl
sub
aam
aam
inc
push
rcrl
loopne
pop
push
dec
cmp
mov
outsl
sbb
popa
sti
int
pushf
mov
dec
inc
push
pop
adc
andb
movsl
mov
cmp
adc
cwtl
push
inc
pop
xchg
rcll
daa
adc
out
pop
stc
sti
cmpsl
adc
cli
lea
pop
jns
vminss
mov
sbb
ds
outsb
xor
sti
and
sbb
mov
cld
cmp
mov
cmp
jmp
sub
sbbl
pop
es
dec
adc
cs
pop
mov
and
mov
pop
fnstenv
out
push
cmp
in
shlb
lock
sbb
faddl
icebp
fdivrp
cmp
sbb
sub
add
sub
mov
fmul
insb
and
loopne
adcb
inc
inc
or
mov
fwait
inc
pushf
inc
mov
and
fs
cltd
dec
mov
xor
jmp
outsb
cmp
lods
add
mov
and
nop
sub
movsb
out
idivb
in
lahf
pop
addl
lds
call
insb
push
sbb
xor
dec
push
jbe
sbb
push
nop
jae
pop
push
add
sbb
push
scas
mov
ficompl
push
fimull
lcall
lret
jg
mov
insl
or
jno
test
mov
jg
int
jbe
mov
int3
sub
mov
scas
adc
push
fildl
popf
or
sbb
or
and
mov
xchg
sahf
xor
push
or
ja
je
or
fistl
or
inc
test
mov
inc
cmp
lcall
jmp
dec
sbb
decl
mov
inc
dec
inc
adc
inc
or
mov
test
cmc
lds
xor
mov
enter
add
push
rorb
xlat
adc
dec
and
mov
cli
dec
inc
nop
mov
repnz
test
mov
jo
fwait
out
inc
and
mov
mov
icebp
ret
test
push
inc
add
ja
mov
pop
and
sarb
xchg
mov
push
jl
and
shlb
sub
lcall
push
je
jl
jge
jnp
test
sub
lock
ja
add
xchg
push
inc
jmp
imul
push
push
outsl
adc
fimull
or
pop
xchg
sbb
cs
addr16
mov
int3
dec
jmp
cmc
push
push
subb
xchg
pop
mov
les
sbb
add
push
mov
pop
mov
mov
or
jno
pop
pushf
insb
fnstcw
outsb
js
jnp
inc
sbb
sub
jb
pop
movsb
or
insb
dec
or
adc
sub
pop
push
cs
lcall
xchg
pop
mov
cli
pop
ret
pop
mov
sbb
pop
inc
dec
mov
test
in
add
mov
jo
sahf
cltd
inc
or
jno
jbe
add
inc
pop
ss
int3
mov
ljmp
sub
xchg
aad
jnp
jo
leave
inc
rclb
stc
stos
mov
addr16
mov
sbb
sbb
xor
into
les
out
inc
insl
xchg
mov
inc
lret
pop
pop
hlt
and
test
mov
lea
in
insb
faddl
add
js
add
push
addb
mov
xorl
and
sbb
repz
mov
xchg
fcmove
xchg
pop
inc
arpl
ljmp
das
test
imul
scas
xchg
mov
mov
add
and
or
or
andl
mov
sbb
mov
xchg
cmp
jle
iret
push
jo
mov
and
sbb
sbb
clc
xor
decb
stos
push
mov
xchg
xchg
push
les
test
cli
cmp
out
and
lcall
fisubrs
aad
rol
push
orb
cmp
ret
scas
mov
lret
mov
mov
aad
es
aaa
dec
cmp
push
loopne
xchg
sub
mov
push
pop
out
or
adcb
arpl
jmp
lods
adc
ljmp
stc
cmpsb
daa
fsubrl
push
pop
mov
push
pop
sti
lret
test
clc
xchg
ret
jl
push
xor
and
jge
pushl
in
ret
lret
aaa
cmpsl
xchg
cmc
xchg
loopne
push
xchg
out
ret
dec
cwtl
cmp
xchg
jae
mov
mov
cs
movsl
int
push
repnz
lea
lret
push
ficoml
sbb
roll
add
and
lds
dec
test
dec
pop
repnz
dec
iret
rorl
lods
jg
jg
aas
adc
ret
push
mov
sbb
pushf
sbb
cmpsb
into
fsubrs
xlat
push
push
lret
and
jnp
mov
xor
mov
in
mov
mov
mov
sbb
mov
add
nop
jae
popf
dec
or
pop
jle
add
outsb
mov
inc
stc
les
jl,pt
mov
xlat
ja
push
sahf
in
push
or
inc
jl
jbe
lret
insb
int3
xchg
jmp
add
cmpsb
mov
and
mov
add
push
cmp
cmpsl
adc
out
aas
or
adc
mov
mov
sub
or
hlt
adc
or
mov
pop
add
dec
and
mov
popa
in
pop
xorl
push
xchg
cs
xchg
sbb
mov
lahf
mov
pop
jmp
out
and
fwait
xor
mov
lds
mov
cwtl
std
sbb
iret
dec
cmp
push
mov
imul
call
ljmp
jg
push
xchg
cmpsb
push
dec
jb
sub
xchg
mov
cmc
pop
push
lea
shlb
pusha
sbb
cmp
fcoms
testb
add
jmp
push
pop
pusha
adc
rcr
fwait
shll
xlat
push
imul
or
outsl
je
rcll
mov
mov
fsubs
mov
mov
in
loope
add
sbb
jge
jnp
pop
loop
mov
sub
hlt
stos
outsl
xor
stos
mov
fiaddl
idiv
jne
repz
stc
jle
hlt
dec
dec
enter
test
sbb
aaa
push
inc
movsb
cli
les
adc
push
add
fidivl
aam
adc
add
dec
sub
jmp
push
in
push
sbb
dec
pop
adc
mov
sub
fildll
fwait
jecxz
frstor
adc
mov
xchg
lods
repnz
xchg
rclb
pusha
jne
xor
sbb
cmp
inc
sbb
mov
leave
inc
dec
mov
or
pusha
popf
stc
sub
adc
inc
pop
ret
push
jno
adc
out
add
pop
xchg
mov
xor
mov
jmp
int3
ret
das
cmp
xchg
adc
rcrb
aas
sbb
xor
lret
outsl
fdivs
inc
xor
enter
jg
lods
and
in
insb
mov
inc
out
push
mov
ja
jge
call
lock
or
outsb
pushl
add
add
inc
xchg
cmpsl
fsubs
movsl
inc
cwtl
roll
and
cli
clc
loope
ret
cmove
addr16
inc
aaa
add
xor
jne
repnz
pop
lods
mov
das
mov
sub
adc
test
lods
pop
mov
iret
or
popf
stc
movsb
cmpsb
jne
push
mov
pop
je
sahf
and
mov
push
out
cmp
stc
push
and
pop
adcl
orb
jecxz
inc
mov
mov
ds
outsb
sbb
adc
sbb
fnstenv
push
je
xchg
addl
sbb
push
push
adc
sbb
push
pushf
sbb
xchg
jecxz
movsb
push
fildl
push
pop
push
rcrl
outsl
jle
push
adc
dec
fdivr
sub
push
repz
dec
in
adc
addb
cmova
jo
xor
ljmp
cmc
test
mov
aam
clc
inc
jbe
or
aas
cmp
push
pop
sar
xor
fldenv
jbe
decb
in
jne
push
dec
push
cmp
je
adc
dec
or
push
adc
adc
inc
incl
nop
ds
jl
lret
movsl
testl
test
mov
cltd
repnz
fwait
js
data16
or
adc
cs
pop
inc
out
loope
sub
mov
nop
sbb
fstps
mov
mov
or
cmp
inc
add
inc
sub
leave
es
shrb
ljmp
shrb
inc
adc
add
into
xor
cmp
add
outsl
dec
jmp
push
imul
dec
xor
mov
and
dec
add
mov
adc
or
fiadds
in
mov
adc
aaa
inc
test
xchg
gs
int
mov
pop
mov
and
sub
lods
lret
inc
scas
pop
sbb
push
add
lods
jl
or
xor
je
pop
dec
sub
cmp
or
and
dec
lds
add
pop
ret
cld
outsb
ror
sub
and
sub
cmp
outsb
icebp
int3
and
loopne
popa
mulb
les
dec
sub
ja
or
jge
sbb
and
outsb
jne
jl
adc
push
adc
rorl
add
xchg
subl
test
sbb
lret
sbb
and
pop
and
shrl
and
or
dec
jns
mov
andl
push
dec
rcl
mov
cmp
mov
popa
mov
fs
cmpsb
orl
push
xchg
pushf
mov
jns
xchg
dec
imul
ret
js
outsl
or
iret
dec
mov
push
and
xchg
cmp
sub
cmp
aad
sbb
dec
sub
dec
ja
xor
jne
or
in
cs
and
mov
jecxz
mov
out
cli
ja
or
sbb
stos
jo
or
les
imul
xchg
cmp
add
xchg
mov
adc
rolb
std
dec
cltd
and
es
sti
adc
lret
pop
adc
or
push
jno
add
out
inc
bound
sbb
es
sub
jno
xor
push
mov
addl
sbb
push
add
hlt
or
mov
mov
jmp
mov
cltd
or
mov
jno
sub
adc
mov
pushf
xchg
mov
sub
mov
and
push
pusha
roll
outsl
push
cmp
enter
loope
adc
dec
adc
pop
or
scas
adc
lea
push
adc
add
adc
daa
or
adc
ss
cmp
sub
cmp
test
jo
rorb
negb
test
or
xchg
adc
push
int3
mov
repnz
outsb
adc
pushf
into
or
jmp
mov
int
sbbb
or
jle
push
jge
dec
imull
push
jle
cmp
addr16
outsb
adc
inc
pop
pop
sbb
push
sub
je
lods
or
add
add
and
pop
inc
fdivrp
stos
and
and
rorl
lods
lcall
aad
cmc
and
cmpb
or
inc
leave
sub
aad
out
mov
push
push
mov
sbbb
sub
add
xor
shrb
inc
std
lods
lret
cwtl
test
jmp
bound
bound
dec
xchg
or
sbb
sub
test
add
sub
hlt
mov
out
rcr
sub
imull
arpl
or
mov
xor
lds
push
dec
imul
sub
out
jecxz
and
adc
lret
movsl
adc
shll
popa
or
and
int
jle
push
xchg
pusha
stc
test
mov
adc
fwait
aas
push
push
rorl
sub
and
and
pop
cmp
pop
imul
add
dec
pushf
sbb
jne
fmuls
cmp
data16
dec
imul
cmp
bnd
xchg
dec
imul
push
sub
pusha
mov
dec
sbb
adc
clc
pop
xor
push
and
pop
inc
stos
ror
push
jge
dec
or
lods
sbb
inc
cmp
dec
aad
sub
xchg
packssdw
xchg
lods
mov
clc
xchg
and
adc
jge
ja
rorl
ret
test
adc
inc
stc
cld
add
pop
lcall
aas
out
adc
pop
mov
and
push
adc
mov
movb
or
jmp
xchg
push
xchg
sbbl
mov
and
mov
xor
or
inc
cmpsb
sub
aad
fcoms
or
jne
sbbb
mov
out
cmp
push
push
bound
adc
push
xchg
dec
imul
add
mov
dec
push
ret
jp
add
sbb
push
adc
pop
xor
mov
sbb
pusha
iret
or
leave
sbb
mov
out
inc
dec
pop
sbb
push
out
and
mov
incl
sub
sbb
adc
js
in
jne
cmpsb
pop
in
test
dec
xchg
out
or
push
mov
movsb
pop
cmp
xchg
mov
push
mov
jne
or
push
sbb
mov
add
inc
adc
testb
je
xor
dec
test
push
adc
push
in
cmp
shll
and
idivl
push
inc
and
or
clc
orl
cmp
adc
mov
sbb
adc
rcrl
push
fsubl
lcall
adc
aad
dec
and
leave
lods
or
inc
data16
aad
sbb
or
jne
inc
pop
in
pusha
popw
dec
xor
cmp
push
pop
and
push
jns
mov
or
xor
sub
sbb
out
test
out
in
rorl
lods
cwtl
adc
inc
jp
or
push
mull
cmpb
or
inc
mov
cmp
or
push
adc
adc
cmp
bound
and
cmp
dec
jne
subb
xor
cld
add
or
dec
pusha
imul
aad
or
or
pop
pop
add
jp
scas
insb
sbb
bound
sub
or
push
adc
inc
sbb
lret
and
push
in
fsubrl
and
and
rorl
lods
cwtl
adc
inc
jp
or
lds
ret
pop
dec
mov
mov
inc
cmpsb
sub
aad
fcoms
or
jne
sbbb
mov
out
cmp
push
push
bound
adc
push
cltd
dec
imul
dec
xor
incl
cmp
mov
jns
xchg
pop
imul
pop
daa
mov
jp
xchg
push
sbb
frstor
lret
adc
xor
xlat
and
idivl
push
xchg
and
and
std
or
dec
pop
or
push
andl
cmp
sahf
sub
aad
rclb
sbb
jne
jp
in
pop
pop
dec
push
sub
push
outsl
pop
mov
jns
xchg
pop
imul
jl
mov
cmp
lret
jb
sbb
or
push
adc
push
or
mov
or
lret
testb
jns
xchg
pop
imul
cwtl
out
sarb
push
xchg
or
xchg
ret
mov
hlt
mov
imulb
dec
test
push
mov
mov
shll
push
xor
outsb
and
pop
sbb
dec
pop
cmp
push
jg
dec
or
lods
sbb
inc
cmp
dec
aad
insb
adc
sbb
jne
push
jp
cmp
cmp
out
sub
inc
adc
inc
rclb
ljmp
sub
sub
aad
ret
sub
sbb
movsb
xor
roll
and
mov
cmp
fisubrs
dec
lods
loopne
mov
cmp
clc
adc
push
mov
and
jmp
movsl
sub
je
jae
hlt
cmp
test
add
inc
ja
push
inc
mov
xor
aas
xor
sbb
mov
xor
out
mov
mov
pop
clc
sbb
aas
cmp
aas
add
add
pop
shll
loop
popf
outsb
popf
jl
sub
inc
mov
mov
call
lock
sbb
ret
out
xchg
jns
lock
jecxz
mov
xchg
push
push
sub
mov
jne
xorl
ljmp
int
cmp
and
cmp
xchg
into
inc
adc
or
push
arpl
pop
push
or
jle
dec
int3
xor
test
add
unpcklps
and
arpl
xchg
push
jge
adc
and
xchg
movsl
jns
dec
dec
enter
dec
sahf
mov
xor
aas
repz
call
push
sub
sbb
data16
or
das
loopne
cmp
push
or
or
mov
cmp
xchg
adc
push
test
cmpsb
daa
sub
test
xor
notb
push
fwait
aaa
outsl
pop
cmp
mov
je
movsb
fcoml
inc
dec
das
iret
mov
mov
popa
push
or
xor
enter
pop
sub
nop
jbe
xchg
push
xor
lret
jns
sbb
mov
jnp
sbb
adc
popa
imul
push
dec
cld
lcall
bnd
fists
xchg
mov
pop
gs
and
mov
xchg
mov
lret
cmp
insb
pop
icebp
inc
xor
ljmp
sbb
mov
pop
jg
or
fidivs
stos
rcr
and
scas
stc
inc
mov
icebp
sbb
xchg
es
cltd
sub
push
adcb
out
insb
iret
xor
bound
mov
adc
jb
lret
imul
fnstsw
pop
jns
mov
dec
cld
or
fdivr
and
push
adc
mov
mul
adc
sub
inc
out
mov
adcl
xor
xchg
and
mov
mov
out
popa
popa
sub
das
inc
adc
add
pop
mov
mov
adc
insb
cmp
lods
aad
adc
ret
mov
xor
inc
sub
into
and
aam
inc
sbb
popf
cmp
mov
dec
dec
push
xchg
sub
add
mov
pop
jbe
sbbb
dec
stc
sub
jae
outsl
xor
stc
dec
and
or
jl
lea
xchg
cmp
pop
mov
loop
add
cmp
aaa
inc
push
sti
xchg
jmp
mov
and
push
and
scas
push
mov
add
cmp
ss
outsl
arpl
jle
outsl
notl
je
xchg
daa
or
push
push
adc
jo
mov
cmc
scas
mov
gs
push
imul
scas
sub
or
loope
jno
negl
jnp
mov
icebp
es
aad
imul
outsl
and
xor
aam
pop
xor
adc
mov
loop
mov
in
xchg
pop
jp
push
mov
jp
adc
sub
arpl
dec
pop
mov
xor
imul
sub
jmp
orb
addr16
cmp
or
cmovb
scas
dec
stc
aam
push
stc
arpl
inc
int
cmpl
in
xor
push
xor
add
lods
jecxz
xor
add
daa
fs
and
loop
xor
daa
les
mov
mov
add
xchg
out
push
adc
leave
xor
notb
fdivrs
or
test
push
enter
pop
lcall
sbb
push
pop
cmp
jecxz
lods
pop
jg
cmp
dec
sbb
mov
andb
jne
movsb
in
jp
and
mov
add
push
inc
and
and
or
iret
lret
or
dec
lret
mov
shl
xchg
pop
mov
and
dec
inc
pop
iret
and
and
fsubl
xlat
mov
fildl
sub
push
mov
sbb
pop
scas
jo
push
cmpsl
mov
repnz
add
xor
sub
adc
dec
mov
pop
push
cmp
movaps
aad
ror
and
fidivrl
inc
cwtl
movsb
or
mov
rcll
mov
xchg
lret
test
sahf
cmp
cmp
in
inc
pusha
or
mov
pop
jg
pop
mov
pop
adc
es
inc
lret
fists
scas
xor
and
xchg
or
mov
push
call
movsb
sti
jge
repz
in
fdivrl
and
add
addl
mov
or
lock
sbb
inc
mov
imul
or
sub
dec
add
cmp
push
sbb
inc
pop
add
add
xchg
arpl
xchg
push
jmp
push
pop
inc
mov
sahf
sbb
int
cld
gs
jae
and
shrl
pop
xchg
or
xor
dec
pop
push
loop
sub
mov
jl
lea
or
or
lret
inc
adc
lea
fdiv
sbb
inc
and
test
subl
mov
push
es
hlt
pop
push
sbb
xchg
sub
cmp
sub
dec
stos
pushf
in
pop
jp
and
sub
insb
and
cmp
popf
dec
push
addr16
jbe
nop
add
popf
and
mov
dec
mulb
pusha
push
sub
sbb
mov
push
jns
xchg
and
mov
cmpsl
mov
or
mov
test
adc
pop
sbb
rcrl
xchg
pop
push
hlt
and
es
scas
sbb
or
ss
and
aad
cmpsl
and
xor
lods
and
inc
sub
adc
inc
dec
push
rorl
xchg
notl
push
andb
and
test
dec
insl
adc
mov
and
adc
add
fdivrl
rcr
jo
push
ss
mov
push
jae
icebp
mov
es
ret
adc
fmul
data16
push
xor
cmc
ja
lret
into
cmp
sbb
inc
dec
sub
pop
faddl
xchg
mov
fwait
adc
shrl
push
imul
push
pop
and
xor
mov
or
sbb
mov
lret
or
or
mov
aam
ret
and
push
and
inc
inc
nop
shrl
push
xor
mov
or
xchg
ficomps
inc
mov
inc
std
pop
push
adc
push
pop
das
lods
bound
hlt
inc
arpl
sbb
and
pusha
dec
inc
push
lret
adcl
in
shr
and
testl
pop
push
or
aad
sti
cwtl
cld
or
mov
pop
mov
sti
adc
inc
and
fildll
bound
xor
imul
jb
data16
adc
js
jp
and
or
daa
mov
adc
not
xor
jne
ss
inc
pop
adc
mov
adc
fnstenv
or
and
hlt
xchg
or
in
xchg
stos
sub
lods
mov
cltd
imul
dec
data16
pop
or
ds
inc
jns
lahf
mov
das
dec
popa
jbe
sub
lcall
mov
cmc
xchg
push
ret
outsb
scas
daa
ja
arpl
pop
mov
imul
xor
or
pusha
or
push
push
xor
push
pop
out
cmp
jle
mov
push
mov
sub
and
sub
js
inc
xchg
or
push
gs
es
iret
aas
insl
xchg
insl
cmp
jle
lods
add
add
sti
adc
pop
adc
sbb
sub
or
mov
fldt
ret
in
pop
sub
or
insl
cmp
pop
cmp
sbb
das
sahf
cmp
pop
push
lock
mov
mov
je
and
adc
cmp
sub
dec
xchg
dec
outsl
dec
out
mov
movsb
mov
inc
lods
add
sbb
xor
or
es
test
push
add
xor
lods
test
lret
add
mov
scas
push
or
adc
outsb
and
mov
sbb
faddl
push
mov
or
bound
sbb
xor
sub
jle
imul
inc
jge
testb
add
inc
sbb
adc
cmp
fcomip
or
adc
sbb
aad
les
push
inc
mov
or
dec
popa
hlt
rclb
dec
jb
je
ret
bound
push
xor
pop
adc
jl
xor
sub
insb
arpl
cmp
cmc
add
adc
cmp
or
ret
xor
jle
cltd
fistps
fisttpl
jne
fs
out
add
ja
or
adc
mov
xchg
icebp
and
lods
int3
sbb
and
mov
jne
faddl
jmp
or
jmp
add
jno
stos
dec
fwait
xchg
ss
dec
in
mov
mov
cmpsb
mov
sub
dec
outsb
imul
stos
and
mov
xor
addb
dec
or
addr16
shrb
das
pop
add
xchg
fdivp
inc
popa
ds
jmp
mov
in
hlt
add
jmp
addr16
adc
cs
xor
dec
fs
pop
dec
mov
xchg
addr16
dec
adc
arpl
dec
stc
sti
jne
iret
pop
xor
out
ss
nop
inc
lahf
sbb
push
data16
xor
popf
xchg
cld
adc
adc
jmp
and
xor
sub
nop
sbb
dec
cmp
andl
int
test
push
out
test
loopne
dec
jbe
sbb
and
dec
jbe
sti
cld
xor
jl
add
jne
mov
cmpsl
add
xor
push
lret
jne
ret
push
sub
cmp
hlt
mov
sbb
pop
adc
out
mov
pop
outsl
shll
sub
mov
add
data16
icebp
es
push
xchg
push
inc
je
pusha
dec
shll
adc
out
leave
rorb
bound
xor
inc
mov
inc
xchg
lock
sub
movsl
and
inc
fsubl
jbe
add
adc
jns
adc
cmp
int3
adc
jb
adc
mov
mov
cwtl
mov
out
popa
test
into
push
mov
mov
fstps
push
out
loope
shll
mov
or
push
xchg
dec
sub
jo
xor
testb
mov
pop
in
sub
sbb
je
mov
stc
ljmp
dec
ds
add
add
and
add
push
add
sub
out
push
push
sub
nop
jmp
sub
rorb
outsl
xchg
cwtl
pop
data16
sub
xor
es
das
pop
push
adcl
bound
fsin
pop
push
jecxz
les
push
ror
pop
int
out
jo
push
push
sub
mov
ja
push
insb
sbbb
mov
sub
jmp
lcall
xor
loop
jl
fs
mov
insb
jae
xorb
aam
add
jbe
ljmp
xor
mov
xchg
cmc
pop
sbb
sahf
jmp
sub
lret
sub
pop
adc
cmpsl
push
repnz
loope
pop
mov
popa
xor
pop
nop
mov
jl
xor
cld
jbe
jle
xchg
mov
inc
push
rcr
xchg
mov
in
icebp
xchg
cmp
dec
stos
jne
lods
sub
adc
fwait
jecxz
pop
je
dec
adc
mov
mov
jo
je
inc
inc
sbb
mov
or
jl
adc
pop
jo
addr16
cmp
imul
mov
pop
xor
xor
ret
xchg
push
jno
or
pop
int3
inc
xchg
sub
ljmp
pop
and
mov
pop
mov
test
jl
fs
add
fsubrl
fwait
scas
adc
mov
jb
sbb
cli
xor
push
sub
inc
mov
call
mov
add
cld
enter
xchg
dec
test
inc
std
adc
cmp
fiaddl
mov
xchg
insb
sub
out
insl
adc
or
call
into
popf
jp
push
push
cmpsb
push
ds
xor
xlat
pop
and
or
mov
cmp
lcall
lds
push
and
loope
inc
xor
fisttps
mov
dec
xchg
jb
sub
push
and
pop
push
jmp
sub
pop
and
jae
faddl
addr16
cmpsl
loope
out
pop
test
mov
outsl
dec
push
shlb
fildl
xchg
out
inc
xchg
fildll
in
pop
gs
int3
imul
xchg
imul
js
dec
daa
mov
mov
ficoml
lock
xchg
test
and
sub
mov
xchg
into
jb
icebp
nop
mov
and
imul
dec
fmuls
arpl
xchg
cli
addr16
scas
jmp
sbb
xor
jne
popa
cmpb
xlat
out
loopne
xchg
out
je
sub
bound
jg
pusha
push
sbb
dec
cmp
push
daa
in
inc
test
fldl
pop
adc
js
daa
scas
cs
add
test
push
inc
push
in
les
mov
mov
test
sub
cmpb
push
leave
xor
push
sbb
jbe
pop
adc
sahf
sarl
adc
loopne
inc
mov
adc
or
inc
cltd
xor
dec
xor
insl
les
add
gs
push
adc
jp
dec
pop
sub
shlb
cmc
movsl
loop
fwait
repz
xchg
sbb
sub
test
jae
std
pop
mov
shrl
sahf
mov
repz
and
mov
insl
xchg
insl
sub
cmp
xor
aam
adc
and
dec
jbe
inc
mov
dec
lcall
mov
es
push
jl
nop
push
xor
push
push
je
jne
cwtl
punpcklwd
jmp
cli
out
jo
mov
out
pop
sbb
xchg
mov
push
mov
es
iret
fstpl
jns
push
popf
adc
js
leave
jno
out
data16
mov
ja
dec
cmp
dec
pop
jecxz
jno
adc
insb
push
sahf
test
ret
push
mov
imul
hlt
pushf
jb
testb
sbb
lahf
inc
jo
sbb
loop
jmp
xchg
imul
mov
test
outsb
nop
dec
sub
out
sub
imul
xor
jo
push
je
outsl
push
pop
mov
in
mov
out
mov
adc
sbb
pop
xchg
pop
fiadds
repnz
and
pop
jl
rcl
aam
into
xchg
jno
push
js
inc
dec
inc
lock
adc
insl
hlt
aas
pop
jnp
pop
fsubs
lcall
dec
pushf
add
mov
jb
push
and
xchg
push
push
jg
jns
pushf
cmpsb
and
jo
jp
inc
pop
jecxz
addps
je
add
or
or
push
sub
popf
sub
pusha
imul
push
jne
mov
mov
daa
divb
mov
mov
jmp
shlb
scas
xor
push
xchg
push
inc
out
mov
inc
testb
inc
jg
es
push
in
inc
movsb
inc
mov
repz
xchg
add
mov
jbe
lcall
push
xchg
dec
cmp
insb
xchg
and
clc
xlat
jmp
push
push
mov
inc
mov
cmp
negb
cld
cwtl
scas
in
ret
fidivs
inc
pushf
stos
jp
ds
cmp
xchg
inc
sbb
jae
push
in
push
mov
push
test
lcall
push
pop
nop
rcrl
fwait
push
mov
mov
test
jns
lock
stos
push
int
xrelease
adc
pop
push
andb
dec
leave
add
xor
dec
fwait
and
dec
dec
and
jg
pop
xchg
sbb
pop
mov
mov
dec
outsb
push
sti
mov
dec
xchg
shll
dec
test
push
or
data16
mov
ret
dec
les
rcr
push
loop
inc
inc
ret
sbb
stc
add
push
mov
dec
xchg
out
xchg
add
or
mov
adcl
fcompl
cmp
ret
adc
jns
sbbb
inc
sub
dec
pop
or
jbe
sbb
inc
sub
sbb
int
and
stos
incb
mov
push
mov
pop
add
and
sub
sub
into
decb
divl
mov
mov
repnz
jne
mov
cmp
xor
arpl
roll
push
sbb
rorl
adc
pop
push
and
test
push
pop
xlat
into
rclb
idiv
inc
stc
mov
xchg
test
cmp
out
pop
cmc
pop
mov
adc
sub
push
insl
fnstenv
jg
aad
push
and
imul
push
pop
out
cmp
push
pop
sbb
or
dec
pop
adc
addr16
or
aad
pop
imul
adc
int3
jno
out
enter
stos
pushf
hlt
push
into
dec
pop
movsl
dec
lds
int
mov
jbe
mov
cwtl
push
cmpsl
inc
test
scas
sub
mov
insb
jb
push
test
adc
fs
inc
ret
or
movsb
les
xor
pop
gs
fcmovbe
rcrl
out
stc
es
nop
sti
fldt
mov
es
pop
mov
mov
pop
or
add
sbb
sbb
sub
xor
add
jae
out
mov
sub
js
adc
and
mov
pop
sub
addl
inc
cmp
adc
and
or
shr
sbb
stos
inc
sti
push
fmull
add
sbb
pop
cmp
cwtl
xchg
mov
test
pop
jl
leave
push
leave
dec
mov
push
mov
adc
cmc
dec
mov
aad
inc
inc
popf
lock
es
xor
add
loope
dec
insb
mov
addr16
mov
dec
cmp
mov
xor
sahf
push
pop
inc
shrb
mov
aaa
add
push
lods
das
js
xor
insl
insl
pushf
xor
into
cmpsb
jb
inc
xchg
push
mov
ja
dec
je
mov
adc
lock
call
out
xrelease
stos
and
je
sbb
stos
mov
pop
test
cmp
mov
mov
ljmp
in
mov
shr
add
fmull
xor
test
add
js
data16
cmp
dec
xor
adc
push
dec
cs
shr
lahf
sub
pop
mov
into
jae
dec
jne
jbe
mov
sbb
and
push
mov
inc
in
push
pop
aaa
fsubrl
aaa
inc
loopne
adc
sub
notb
sbb
aam
mov
insl
js
out
stc
xor
add
xorb
adc
cmp
pop
es
int3
dec
test
inc
ds
ret
insl
mov
inc
jns
add
aas
pop
and
fdivrs
in
cmpsb
out
inc
data16
push
and
fwait
sbb
dec
in
and
sar
fidivl
inc
fistl
lret
mov
or
loop
dec
or
lds
add
outsl
mov
dec
xor
pop
outsb
inc
adc
inc
cmp
sti
jge
dec
lods
add
xchg
xor
jae
test
inc
add
fdivrs
mov
jp
mov
add
into
aas
sbb
jp
jle
cmp
inc
stos
out
addl
ja
aaa
sbb
push
invd
push
add
xor
bound
or
or
add
cmp
inc
inc
ja
std
mov
mov
pop
cmp
sbb
jmp
inc
mov
scas
sbb
dec
jp
outsb
add
dec
test
data16
test
movsb
sbb
pop
mov
push
iret
bound
pop
fnstcw
push
daa
lods
mov
call
int3
mov
sub
div
daa
pushf
es
out
mov
fwait
dec
or
xchg
push
push
test
je
ret
pop
adc
sti
rcr
addl
addr16
xor
pusha
cli
jle
cmp
fimull
loop
cmp
imulb
and
sub
movsl
sbb
sub
mov
sbb
gs
outsb
loopne
mov
cbtw
daa
ss
movb
mov
push
push
arpl
imul
ret
inc
bound
gs
push
push
inc
push
jb
add
insl
arpl
leave
je
imul
and
push
inc
cmp
js
fimull
enter
fs
insl
pop
addb
cmc
push
out
test
adc
xor
sbb
inc
dec
mov
imul
cmc
xchg
lret
imul
push
ret
es
pusha
or
int3
jne
test
pop
add
adc
sbb
push
inc
cmp
aam
sub
hlt
jge
insl
popa
in
mov
sub
andl
push
faddl
dec
mov
pop
lods
pop
add
mov
cld
bound
add
test
pop
pop
push
mov
stos
mov
and
inc
jg
push
das
adc
sbb
add
push
xor
cmp
movsb
shl
cmp
in
mov
mov
int
add
and
pop
sub
add
pop
or
add
insl
lahf
fs
and
xor
dec
lahf
test
add
add
fisttpll
add
in
lahf
in
and
xor
int
add
and
lock
and
test
inc
jo
insl
out
inc
and
xor
and
lock
lods
out
inc
and
xor
and
jo
in
out
inc
and
xor
and
lock
sub
adc
mov
stc
inc
push
and
jo
insl
stc
fs
and
xor
and
lock
and
xor
and
jo
in
stc
in
and
xor
and
lock
inc
sbb
bound
iret
inc
fs
mov
and
xor
and
lock
add
lea
add
in
iret
in
and
xor
and
loope
mov
aam
and
int
iret
inc
push
and
mov
inc
and
xor
and
lock
add
lea
add
in
iret
in
and
xor
and
loope
mov
xlat
and
xor
and
jo
insl
repz
and
xor
and
lock
rep
inc
and
xor
and
jo
in
repz
and
xor
and
lock
sub
or
mov
and
fsubrl
push
push
dec
addr16
dec
ret
cltd
test
sub
and
xchg
enter
inc
aam
sbb
or
xchg
and
mov
out
js
push
and
imul
add
mov
repz
add
mov
repz
inc
sub
or
sahf
repz
cmp
repz
inc
dec
add
pop
inc
cmp
lods
lcall
inc
sub
fstpl
addb
out
xchg
lahf
mov
xchg
inc
adc
std
add
dec
inc
inc
test
inc
push
movsl
lret
loope
inc
adc
xchg
jno
inc
test
adc
inc
stc
jp
or
sub
inc
and
stc
fldl
add
inc
inc
je
mov
pop
jl
cmp
stos
jle
xor
add
push
sbb
jae
cmp
push
xor
sub
mov
add
mov
sti
pushf
inc
fisttpll
sbb
push
add
cmp
adc
adc
sub
sbb
xor
inc
add
repz
loopne
inc
push
add
std
std
mov
and
pusha
mov
pop
or
xchg
mov
sahf
scas
push
inc
cmp
testb
stos
out
xor
add
pusha
leave
std
out
sub
rcl
xor
pop
jb
ss
and
scas
roll
add
xor
loop
cld
dec
add
in
xchg
jns
aas
or
adc
jle
cmp
sarb
and
xor
cmp
pushf
out
jno
and
and
out
out
in
enter
repnz
or
loope
les
sahf
imul
pop
pop
rolb
push
adcb
aas
incb
adcl
xchg
mov
and
sbb
lcall
jl
mov
aas
sar
mov
js
cmp
adc
push
jl
aas
loop
xchg
add
mov
inc
imul
loope
scas
fwait
pop
jb
daa
lea
shll
xchg
sbb
daa
nop
and
pusha
sub
jno
pop
sub
leave
jmp
fnstsw
or
pop
ja
xor
inc
sub
mov
lds
jno
sbb
add
insl
lret
fnstcw
je
push
lock
mov
sti
jg
ds
test
jmp
fsts
cwtl
js
xchg
pusha
sub
stos
push
sbbb
mov
sahf
rcrl
mov
add
and
out
dec
xchg
ret
adc
imul
mov
hlt
mov
sbb
cmpsb
stos
mov
data16
and
xor
adc
xchg
or
movups
pop
clc
mov
das
fists
jnp
dec
sub
fstl
xchg
andb
scas
cmc
mov
xor
push
inc
mov
and
lcall
xor
clc
aam
inc
jbe
int
iret
test
sub
sub
and
push
mov
repz
add
mov
leave
add
cmp
dec
xor
add
in
or
mov
daa
dec
rcrb
sub
in
stos
les
daa
or
sub
hlt
xor
inc
jle
xor
addr16
jge
jge,pt
and
inc
and
jmp
or
aad
xchg
jo
xor
add
ljmp
stos
stc
xchg
pushf
imul
or
scas
insb
stos
push
or
dec
mov
inc
jo
inc
add
jl
cmp
xchg
gs
mov
dec
std
mov
jge
in
std
add
inc
mov
cmc
rcrl
push
mov
xor
out
scas
or
xchg
xor
jb
or
ds
aaa
call
or
and
or
mov
int3
pop
add
and
int3
dec
dec
mov
pop
add
mov
lods
xor
xchg
push
in
xchg
mov
cmpsl
mov
in
xor
mov
fnstcw
jmp
fcompl
pop
xchg
sub
or
and
movsl
aas
pop
xor
add
push
mov
rol
pop
imul
inc
imul
xor
jnp
outsb
mov
mov
sti
ret
out
jge
adc
adc
lods
aam
aad
xor
xor
cmp
mov
dec
and
inc
xor
arpl
jae
jnp
inc
add
adc
cmp
shrl
xchg
rol
enter
mov
xor
sbb
in
dec
fldcw
sub
dec
cmp
and
add
iret
gs
in
andl
ror
testl
imul
aam
call
ss
inc
jnp
jno
push
jne
cmp
mov
push
int
jecxz
out
xor
add
cli
lock
and
xchg
jb
cs
add
jl
or
and
add
cmp
pop
adc
mov
push
sub
fidivrs
push
or
loopne
adc
adc
adc
pusha
jo
inc
call
out
leave
clc
xchg
mov
pushf
repnz
popa
pop
clc
push
sarl
pop
loope
fadds
adc
push
enter
pop
leave
mov
in
push
xor
ret
mov
imul
fstl
mov
scas
jno
jne
xrelease
cmc
imul
xor
shrl
add
mov
xor
rcrb
cmp
xchg
mov
dec
lods
gs
pop
leave
sbb
adc
nop
xor
into
push
push
and
movsl
sbb
and
orl
nop
out
mov
jno
adc
aas
jge
or
xor
add
or
sbb
mov
push
cs
sbb
mov
xchg
mov
mov
sub
mov
jne
cmp
js
xor
stos
dec
test
ret
push
xor
or
ljmp
repz
fisttpll
adc
or
mov
inc
dec
xchg
or
imul
imul
fcmovnbe
add
addl
loop
cmpsl
int
cld
je
xor
push
lods
push
xchg
or
imul
dec
push
js
daa
popf
cmp
ss
mov
add
movb
fmuls
lods
adc
out
xchg
xchg
fldenv
jge
aas
enter
lcall
loopne
sahf
and
sub
dec
xchg
jns
imul
orb
xchg
add
stc
int3
fdivrs
nop
enter
xor
add
dec
cmp
cmpsl
into
insb
fmulp
leave
loop
es
aam
push
stos
arpl
add
pop
jo
or
lret
orps
aam
push
jnp
in
orl
popf
ljmp
out
fstp
lock
cmp
sbb
push
mov
int3
iret
out
cmc
adc
jl
sub
push
lret
pushf
enter
in
loopne
ss
mov
mov
sub
sub
add
inc
or
or
cld
inc
movsb
lahf
repz
enter
bound
pop
cmp
or
add
movsl
push
in
sub
cs
cmp
pop
fs
es
int
sbb
jnp
lret
ret
lahf
movsb
and
sbb
imul
mov
fcomi
cmp
leave
or
push
xor
int
pop
js
inc
sbb
dec
mov
add
xchg
inc
into
add
xchg
fmul
add
xchg
sub
enter
xor
dec
mov
stos
sub
xchg
cmp
sub
pop
shrl
sub
sbb
ja
push
jl
and
push
jo
xor
add
lret
push
mov
add
addr16
sbb
mov
fisttps
pop
lods
inc
push
scas
inc
jle
nop
dec
or
push
and
adcb
mov
push
jae
push
fcmovu
jmp
lret
orb
mov
sub
xchg
in
aaa
imul
add
mov
clc
adc
inc
inc
pop
orps
movsb
ss
dec
mov
pop
push
aam
out
fsubs
movsl
lret
aad
add
jle
xchg
xchg
xor
adc
xor
jl
xchg
addr16
pusha
jg
xchg
inc
add
loopne
and
mov
outsb
inc
dec
dec
fs
ja
or
xlat
dec
loopne
dec
mov
rcr
adc
in
les
fstpl
popf
pop
mov
add
dec
add
mov
dec
xchg
jg
pop
clc
pusha
rcr
add
add
push
mov
bound
fwait
cmpsb
mov
add
in
loop
add
sub
pop
push
les
mov
jo
cmp
mov
sarb
mov
es
mov
lcall
outsb
xchg
sub
stc
xor
cmc
xchg
in
stos
or
push
pmulhuw
push
cli
add
dec
test
test
ljmp
add
cs
stc
inc
cltd
lea
fucomp
jp
dec
roll
cli
cmp
imul
xor
shr
jmp
clc
stc
jl
int3
das
add
jb
push
out
push
shlb
xor
sub
pop
adc
std
add
lret
push
inc
ja
ret
je
adc
in
push
loope
or
test
pop
jne
loop
test
mov
cmp
jle
inc
cs
jnp
popf
xor
flds
or
jne,pt
mov
stos
xor
sbb
daa
cmc
je
inc
and
and
pop
inc
xchg
cmp
ret
jns
push
mov
or
addr16
enter
jp
lods
enterw
mov
inc
clc
aam
testb
daa
sbb
inc
fsubs
pop
xchg
mov
ds
mov
jmp
and
jge
push
add
sarb
lods
jp
pop
loop
xor
inc
push
cmp
push
or
mov
sub
jge
adc
xchg
aam
in
mov
or
ja
cmp
clc
mov
push
test
jle
int
mov
int
lret
jecxz
or
xchg
push
ret
sbbl
add
push
jbe
fstpt
xor
sbb
pop
daa
push
stos
mov
shrb
jbe
bound
mov
call
cmp
add
pop
dec
adc
ss
jmp
clc
js
mov
pop
xlat
adc
aas
cmp
push
push
popf
cmp
push
ret
lahf
mov
loop
push
adc
sti
cmp
push
or
orb
ret
dec
dec
pop
adc
stos
sub
mov
jnp
inc
inc
inc
leave
dec
inc
or
js
cmp
ret
mov
pop
dec
and
sbb
mov
lcall
xchg
push
adc
out
lahf
mov
loop
arpl
sbb
xorl
xor
adc
adcl
sub
rcl
aas
fsubr
icebp
jb
adc
dec
add
xor
jg
cmc
cmp
stc
xchg
push
in
sub
push
jae
pop
cmpsb
xchg
mov
or
mov
jmp
fdivs
andl
jns
mov
dec
aas
shll
mov
jns
jnp
test
push
mov
mov
jo
and
enter
in
xchg
inc
cwtl
mov
cmp
mov
mov
nop
data16
popf
cs
andl
daa
push
imul
rorl
pushf
fmuls
xchg
xchg
xchg
mov
or
adc
test
loopne
dec
pusha
mov
mov
xchg
cld
xor
hlt
sbb
or
cmp
arpl
out
cmpb
fildll
and
in
and
data16
xlat
inc
movsl
mov
jl
les
push
and
into
jns
cmp
inc
pushw
push
je
and
mov
in
inc
popf
cwtl
sub
fmuls
dec
dec
mov
mov
push
lahf
jmp
clc
push
incl
sahf
dec
pop
dec
imul
iret
lock
or
in
mov
xlat
repz
clc
cmp
outsl
cmpsl
pop
push
and
mov
adc
xorb
push
dec
pusha
inc
xchg
fldcw
adc
fwait
ret
sub
mov
dec
sbbb
sub
adc
jp
mov
clc
roll
pop
out
push
fstp
xchg
out
inc
sbb
ficomps
scas
lahf
push
lods
pop
cmpsl
sbb
loop
scas
jb
jl
mov
and
out
jns
mov
imul
mov
add
dec
xlat
mov
insb
jmp
mov
jg
leave
js
hlt
or
xchg
icebp
clc
mov
ds
inc
test
pusha
popa
cmp
jge
xchg
mov
jmp
sbb
fs
dec
js
std
xchg
or
sub
out
dec
and
out
inc
out
cmp
inc
mov
mov
icebp
lahf
pop
sahf
mov
insl
aam
jne
ficompl
xor
bound
inc
in
lcall
adc
ds
aaa
call
lret
push
xchg
fldl
insb
xchg
add
xchg
adc
aas
lods
push
cld
sarl
or
and
aam
mov
jmp
jecxz
fdivs
or
jnp
pop
and
xor
sub
adc
out
out
lcall
call
ret
into
ret
push
jbe
mov
inc
sub
and
div
xor
xlat
out
or
jecxz
imul
sbb
shlb
mov
es
dec
push
aad
mov
jne
xlat
adcb
xor
cmp
jae
add
or
xchg
jl
push
sti
fdivs
repnz
das
sbb
mov
pop
mov
or
sub
jle
subl
sub
clc
dec
jmp
pop
andb
pop
jne
icebp
pop
jae
pop
negl
aas
jne
lock
push
jne
js
cmp
add
iret
pop
push
dec
popa
mov
pop
into
xor
pop
cli
xor
mov
mov
rorb
cmpl
fisubs
or
addr16
adc
mov
pop
aam
xchg
loope
pop
rcr
xor
or
addr16
sarl
sahf
dec
xchg
mov
daa
test
and
dec
or
shlb
pop
xlat
outsb
lret
sub
fisubl
cmc
push
push
and
add
aad
test
jbe
ret
pop
mov
rolb
inc
lret
push
stc
rorl
scas
cmp
fs
hlt
pop
das
sub
imul
out
and
adc
pop
out
xor
add
ljmp
push
push
jns
in
iret
jecxz
jecxz
pop
shll
imul
dec
pop
jge
sub
xchg
repz
jnp
je
push
dec
xchg
xchg
cmc
out
gs
fisubl
scas
pop
xchg
xor
mov
punpckhbw
insb
jle
mov
push
mov
or
inc
ss
movsb
adc
adc
add
xchg
xchg
shll
push
xor
mull
or
les
pop
cmp
dec
jno
adc
aas
dec
jnp
mov
xchg
cld
jo
mov
hlt
push
sub
ds
js
push
ja
cmp
das
jmp
iret
push
jno
cmc
insl
fisttpl
mov
jnp
mulb
nop
fisttpl
push
or
mov
lods
movsl
and
and
pop
sbb
ds
or
push
pop
xor
pop
loop
mov
jg
mov
jne,pn
push
rcr
push
sahf
pop
jno
enter
inc
into
xchg
data16
mov
out
bound
mov
movsl
pop
and
mov
jle
leave
pop
cmpsb
fwait
push
add
xchg
add
and
fwait
mov
inc
js
mov
ja
adc
shll
das
ja
jbe
adc
popa
loopne
call
fsubrl
cmpb
sub
out
fnstenv
mov
fsubl
mov
mov
push
fucom
sbb
lahf
pop
lods
and
sub
int
pushf
movsb
test
pushf
xchg
xor
dec
add
adc
and
and
mov
sub
addr16
jle
cmp
aas
xorl
mov
cli
jle
mov
xchg
enter
mov
xchg
push
stos
cld
ret
add
leave
xor
lock
stos
mov
fdivs
xchg
cmpsl
test
flds
dec
inc
cmp
mov
ficomps
jg
or
sbbl
data16
out
sbb
mov
and
xchg
push
fidivl
pop
movsb
push
sahf
je
or
cmp
xchg
gs
cmp
inc
inc
push
sbb
pop
pop
xor
and
mov
dec
mov
sbb
cmpsb
dec
dec
repz
pop
fwait
std
movsl
push
ds
lahf
mov
mov
mov
or
add
sub
mov
sti
and
add
jbe
gs
dec
je
mov
push
test
or
js
jmp
aas
nop
dec
push
stos
call
push
jns
and
dec
cmp
jne
and
push
call
iret
imul
mov
int
std
add
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
or
add
call
add
add
add
add
add
add
or
inc
add
add
add
ret
inc
add
add
add
add
add
add
pusha
ret
inc
add
add
add
ret
inc
add
add
add
inc
add
add
add
ret
sbb
add
test
inc
add
add
add
add
add
inc
add
add
add
ret
sbb
add
call
add
add
roll
add
add
roll
add
add
add
add
add
movsb
roll
add
add
add
add
add
add
out
inc
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
add
inc
add
insb
inc
add
push
add
add
add
add
inc
add
add
add
mov
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
add
inc
add
add
add
test
inc
add
add
add
lds
xor
inc
add
add
nop
inc
add
jl
add
inc
add
nop
inc
add
inc
add
add
nop
inc
add
inc
add
add
nop
inc
add
jb
add
add
add
xor
popa
add
add
add
inc
add
push
add
movb
push
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
movb
dec
dec
add
movb
dec
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
movb
push
inc
add
movb
push
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
int3
movb
push
dec
add
movb
push
dec
add
xor
add
xor
xor
add
xor
add
add
mov
push
inc
add
inc
add
xor
add
xor
xor
add
xor
add
add
lods
movb
push
push
add
movb
push
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
movsb
movb
push
dec
add
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
movb
push
inc
add
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
mov
inc
add
add
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
add
inc
add
inc
add
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
pop
movb
push
dec
add
movb
push
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
movb
push
inc
add
inc
add
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
movsb
movb
push
inc
add
add
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
movb
push
push
add
movb
dec
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
movsb
movb
push
inc
add
inc
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
movb
push
dec
add
movb
push
pop
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
movsb
movb
push
inc
add
movb
inc
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
add
push
add
movb
inc
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
movsb
movb
push
inc
add
lds
inc
dec
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
movsb
movb
push
push
add
lds
push
inc
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
movsb
movb
push
dec
add
lds
inc
dec
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
movsb
movb
push
push
add
lds
push
inc
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
movsb
movb
push
push
add
lds
inc
push
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
movsb
movb
push
inc
add
lds
inc
inc
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
movsb
movb
push
dec
add
dec
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
movsb
movb
push
pop
add
push
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
movsb
movb
push
pop
add
pop
add
xor
add
xor
xor
add
sbb
adc
add
or
adc
or
add
inc
add
enter
inc
push
add
movl
lock
call
inc
push
add
movl
rol
inc
add
inc
add
movl
mov
pop
dec
add
dec
add
dec
dec
add
dec
add
push
dec
add
push
dec
add
inc
add
inc
add
add
push
add
add
inc
add
inc
add
push
add
inc
add
add
enter
inc
push
add
inc
add
push
add
inc
add
inc
add
inc
add
inc
add
int3
inc
add
push
add
inc
add
push
add
lret
inc
add
push
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
dec
add
lret
inc
add
dec
add
lret
inc
add
push
add
dec
add
dec
push
add
dec
add
inc
add
push
add
inc
add
inc
add
add
push
add
inc
add
inc
add
lret
inc
add
dec
add
inc
add
inc
add
lret
inc
add
inc
add
inc
add
dec
add
lret
inc
dec
dec
add
lret
inc
dec
pop
add
lret
inc
dec
push
add
push
add
dec
inc
add
push
add
dec
push
add
push
inc
add
inc
add
inc
add
add
dec
add
add
push
add
inc
add
add
lret
inc
inc
inc
add
inc
add
add
inc
add
add
leave
inc
add
dec
add
leave
inc
add
push
add
leave
inc
add
push
add
leave
inc
add
push
add
dec
dec
add
push
inc
add
push
add
add
inc
add
add
dec
add
inc
add
dec
add
inc
add
inc
add
leave
inc
add
inc
add
leave
inc
add
inc
add
enter
push
inc
add
enter
push
inc
add
enter
push
dec
add
enter
push
dec
add
dec
add
push
dec
add
push
inc
add
add
pop
add
add
push
add
inc
add
push
add
inc
add
pop
add
inc
add
push
add
inc
add
inc
add
inc
add
add
enter
dec
inc
add
inc
add
push
add
enter
dec
push
add
cltd
inc
add
add
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
int
add
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
cltd
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
enter
add
add
xorb
add
add
lock
call
push
add
push
add
inc
add
add
add
add
incl
add
add
incl
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
add
cld
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
insl
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insl
add
imul
add
js
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
