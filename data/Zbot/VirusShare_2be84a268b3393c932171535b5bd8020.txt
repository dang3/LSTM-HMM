call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
pushl
shlb
pop
add
call
add
pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
in
pop
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
add
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
mov
cmp
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
.byte
xor
add
inc
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
add
and
add
and
add
add
nop
and
add
add
ret
add
add
call
add
add
and
add
add
add
push
and
add
add
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
inc
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
add
and
add
and
add
add
nop
and
add
add
ret
add
add
call
add
add
and
add
add
add
push
and
add
add
add
add
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
jne
jb
outsb
je
push
add
push
push
je
imul
inc
add
aad
inc
gs
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
fs
imul
add
dec
add
insb
outsb
inc
add
dec
add
popa
insb
dec
outsl
arpl
roll
dec
gs
jo
jb
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
imul
outsb
je
outsl
insb
add
add
popa
jo
gs
jb
jns
out
inc
gs
imul
bound
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
insb
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
dec
popa
outsb
fs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
jge
dec
jo
outsb
dec
jne
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
push
jns
push
imul
jb
ja
push
popa
arpl
jb
jne
add
push
imul
gs
add
xor
jae
push
push
popa
je
add
addb
jae
push
arpl
add
inc
gs
imul
gs
add
aaa
add
ja
push
fs
inc
gs
push
outsl
insb
outsl
jb
jl
inc
gs
push
gs
dec
gs
imul
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
add
je
push
outsl
outsl
insb
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jp
jnp
stos
lods
stos
add
cmpsl
test
mov
mov
mov
ret
lret
lret
int3
rcl
in
rcl
shl
rcl
iret
hlt
into
int3
into
hlt
leave
mov
out
mov
mov
mov
mov
lods
stos
lea
cltd
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
lret
rcl
cld
fcom
std
fcom
xlat
xlat
aad
iret
ror
dec
int3
int
aad
aam
iret
rcl
inc
ret
std
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
dec
leave
lret
ror
aam
xlat
xlat
fcom
xlat
call
dec
int
dec
int
call
aam
dec
into
into
inc
rol
mov
mov
scas
std
cmpsl
test
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
dec
into
int3
call
rcl
call
fcom
call
fcomp
call
aad
into
int
dec
leave
lret
int
inc
mov
mov
mov
mov
cmpsl
test
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
imul
pop
pop
pop
fs
push
push
das
or
sbb
xor
aaa
aaa
aaa
cmp
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
enter
sar
aad
aam
aad
call
ror
dec
enter
inc
ret
ret
mov
mov
ljmp
movsb
movsb
popf
popf
popf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jl
jle
jg
jno
jno
bound
mov
cmp
cmp
pop
pop
pop
stos
outsl
outsb
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
dec
leave
lret
leave
leave
inc
ret
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
lcall
lahf
cmp
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsb
add
pop
or
pusha
xchg
lea
incb
jl
idivb
jnp
outsb
jo
out
push
fdivs
je
jg
jle
js
jns
fs
inc
inc
cmp
pop
sbb
movups
or
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
nop
incl
addb
xchg
xchg
lahf
sahf
mov
ficomps
nop
nop
jle
jns
pop
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
incl
mov
std
xchg
jg
jno
jo
je
jne
jg
jge
addb
xchg
push
cmp
ss
jg
cmp
movsb
movsl
movsb
shrb
lods
lods
sti
lods
stos
lods
lods
stos
stos
test
test
mov
fwait
cltd
xchg
xchg
xchg
incl
jge
jns
jns
jl
jns
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
push
push
push
femms
xor
inc
dec
insl
insl
insl
jl
test
leave
cltd
lcall
cltd
lcall
mov
xchg
xchg
mov
mov
lcall
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
test
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
xchg
pushf
popf
pushf
std
mov
mov
xchg
in
xchg
nop
in
xchg
push
jne
or
add
or
or
daa
sub
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
mov
nop
call
mov
cmpsl
ljmp
lods
pushl
mov
stos
std
mov
xchg
scas
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
pushf
cwtl
pushf
decl
mov
decl
xchg
xchg
xchg
xchg
xchg
pushf
sahf
pushf
movsb
mov
test
mov
cwtl
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jno
jne
jl
jle
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
imul
mov
xor
js
mov
movsl
mov
mov
lods
lods
mov
movsb
movsb
add
mov
add
pusha
adc
mov
ljmp
pushf
decl
nop
xchg
call
xchg
xchg
call
xchg
xchg
cltd
cltd
cltd
pushf
popf
sahf
mov
movsb
mov
stc
cltd
cltd
lcall
nop
xchg
les
xchg
lcall
lea
stc
xchg
xchg
std
xchg
je
fwait
imul
ljmp
aaa
jnp
mov
jae
mov
insl
ljmp
adc
lods
or
stos
or
pushl
lahf
mov
mov
test
movsl
and
add
add
mov
add
pusha
adc
mov
lcall
xchg
xchg
call
cltd
fwait
lcall
lahf
lcall
lcall
nop
xchg
xchg
nop
xchg
xchg
call
xchg
fwait
cld
cwtl
xchg
popf
stc
lahf
cltd
sahf
stc
sahf
xchg
pushf
cld
sahf
xchg
xchg
imul
xchg
dec
js
fwait
cmp
insb
pushf
pop
addr16
sahf
push
jmp
arpl
stos
adc
lods
adc
stos
packuswb
scas
adc
mov
imul
mov
imul
aas
cmp
mov
lods
lods
scas
movsb
mov
movsl
add
add
add
add
add
pop
pop
adc
mov
mov
popf
call
popf
popf
lcall
movsl
movsb
jmp
mov
decl
mov
decl
js
cltd
jb
fwait
arpl
call
cs
decl
adc
nop
or
xchg
push
pop
call
pop
lcall
adc
stos
sbb
mov
insl
pushl
sbb
je
mov
and
rcrl
mov
xchg
lods
mov
lods
scas
mov
lahf
mov
movsl
add
pop
pop
adc
scas
mov
mov
cwtl
sahf
lcall
mov
cmpsl
jmp
stos
test
lcall
jle
decl
outsl
decl
sub
mov
pop
incl
add
push
decl
add
nop
add
xchg
add
fwait
add
sahf
add
cmpsl
or
mov
outsl
pushl
sub
mov
sub
inc
sub
inc
sub
das
jg
xor
leave
inc
mov
enter
sarl
lret
mov
add
add
add
add
add
push
push
adc
test
mov
sahf
fwait
popf
jmp
stos
stos
ljmp
stos
lods
pushl
scas
lods
jmp
mov
mov
incl
or
push
incl
add
addb
incl
add
mov
push
decl
add
lcall
jmp
adc
mov
ss
leave
cmp
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
cltd
popf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
decl
add
pushf
add
mov
add
stos
add
jo
ret
cmp
dec
inc
call
inc
call
dec
nop
call
dec
xchg
call
dec
xchg
fisttpl
fmull
fistl
call
xchg
std
mov
mov
mov
mov
mov
add
add
add
dec
inc
adc
jl
movsb
lahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
insl
decl
sbb
nop
sbb
mov
pop
decl
or
add
nop
add
xchg
add
sahf
add
mov
add
test
pusha
pushl
es
into
dec
call
push
cwtl
fcoms
fistl
fstpl
jmp
push
sahf
jmp
push
sahf
jmp
pop
lahf
jmp
pop
mov
call
test
mov
mov
cmpsb
test
jne
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jns
sahf
lcall
mov
stos
stos
pushl
mov
mov
mov
mov
ljmp
inc
jbe
and
and
xchg
and
xchg
pop
call
or
popl
push
call
add
mov
add
stos
add
mov
gs
mov
xor
fstps
jmp
arpl
in
cmpsb
jmp
data16
call
push
jmp
addr16
dec
mov
mov
mov
lahf
lahf
add
inc
aas
adc
jb
fwait
xchg
cltd
call
sahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
xor
cltd
xor
xchg
sub
xchg
sbb
pop
call
add
mov
add
stos
add
mov
pushl
adc
roll
jmp
outsl
lods
jmp
jo
jmp
jo
call
jne
in
jae
out
je
in
jne
in
jae
jmp
xchg
mov
cmpsl
cmpsb
lcall
sahf
add
jle
ds
cmp
js
mov
popf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
outsb
jmp
cmp
mov
sbb
pop
call
add
add
stos
add
mov
pushl
add
enter
fsts
jmp
js
call
jle
in
xorl
push
test
repz
call
mov
inc
mov
stos
cmpsl
pushf
sahf
sahf
daa
sahf
sahf
lahf
add
add
add
pusha
add
cmp
pop
pusha
pop
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
ret
ret
pushl
insb
mov
cltd
cmp
mov
inc
jle
movsb
ss
cltd
sbb
xchg
add
sahf
add
movsl
add
stos
add
scas
add
mov
data16
mov
add
shlb
movsb
call
mov
icebp
mov
push
nop
ret
push
xchg
ret
nop
xchg
ret
push
xchg
clc
ret
in
mov
fidivl
clc
stos
lods
test
xor
sahf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
inc
mov
ret
inc
ret
ret
mov
mov
jle
lcall
dec
jg
lods
dec
test
movsl
xor
push
popa
lcall
add
cmpsb
add
lods
add
mov
fs
mov
add
enter
xlat
xor
mov
out
xchg
push
cltd
push
cltd
push
cltd
push
fwait
lret
lcall
cld
sahf
into
cld
lahf
into
cli
cwtl
lret
push
xchg
ret
mov
dec
mov
mov
sahf
lahf
mov
add
add
add
add
cmp
dec
jecxz
pop
decl
mov
mov
mov
sar
ret
mov
inc
leave
inc
mov
mov
ljmp
dec
xchg
movsl
sub
cltd
or
add
movsb
add
add
mov
mov
add
leave
add
or
filds
out
lea
push
cmpsb
int
mull
iret
cli
test
into
cli
cmpsl
iret
std
stos
iret
test
sar
negl
int3
dec
lret
mov
mov
mov
xchg
xchg
add
cltd
cltd
add
add
add
xor
or
inc
bound
pop
xlat
je
jo
mov
sarb
mov
ret
mov
leave
enter
rol
mov
test
movsl
push
xchg
scas
push
mov
scas
dec
xchg
lahf
sbb
pushf
add
jmp
add
mov
mov
add
int3
add
fadds
je
ficoms
push
lahf
leave
sti
scas
sar
sti
scas
aad
sti
mov
sti
mov
cld
mov
std
mov
std
mov
cld
mov
pushl
sar
mulb
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsl
outsl
outsl
mov
mov
aam
jmp
fdiv
iret
rcl
std
int3
int3
into
dec
lret
lret
dec
leave
leave
dec
lret
lret
inc
leave
mov
lods
ljmp
push
mov
lods
jle,pt
sahf
punpcklwd
mov
add
mov
fs
mov
add
roll
outsl
call
add
filds
je
ljmp
sti
lods
aam
std
mov
mov
std
mov
xlat
std
mov
fdivr
inc
std
mov
int3
call
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
mov
pop
call
out
test
in
leave
fucom
fcmovu
fcomi
fcomp
fsqrt
aad
xlat
std
into
ror
mov
imul
jmp
add
mov
mov
add
lret
call
add
faddl
jne
in
ja
out
das
xchg
push
mov
sti
mov
loopne
inc
loope
std
inc
loopne
inc
fdivrp
inc
fdivrp
dec
std
dec
dec
loope
cli
mov
enter
iret
mov
mov
xchg
adc
add
add
incl
std
std
incb
incl
repz
testb
out
jmp
jmp
in
sub
out
in
dec
jmp
call
call
aad
fstp
jmp
mov
xchg
test
ja
movsl
adc
jmp
popa
pushl
add
lds
push
into
add
add
add
ljmp
cld
mov
jecxz
std
lret
jecxz
dec
in
dec
jecxz
dec
jecxz
std
into
loop
dec
loopne
std
iret
jecxz
call
jecxz
std
shl
shl
cli
out
mov
inc
cmpsb
cmpsl
mov
cwtl
xchg
add
add
add
std
incb
std
incb
idiv
clc
add
repz
repnz
push
out
repnz
pop
out
icebp
icebp
cmp
out
in
pop
fsubp
loop
les
xchg
sti
mov
pop
pop
jmp
add
mov
gs
mov
add
roll
jo
flds
jne
jecxz
jns
in
adc
negb
sti
mov
shl
cld
shl
call
jmp
shl
aam
call
out
xlat
out
std
fucomi
std
fldl2e
cld
iret
loopne
bnd
in
fcos
leave
lret
leave
repz
test
xchg
xchg
xchg
and
cwtl
xchg
add
cld
add
cld
clc
add
cli
cli
add
div
or
aam
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
lret
add
add
fldl
jbe
out
jns
out
sbb
clc
jbe
cli
fdivrp
cld
fldl2t
fucompp
std
fucomi
fucomi
std
fucomi
fucomi
fsubr
fucomi
fsubrp
std
fsubrp
std
loopne
cld
aam
push
ret
aad
out
iret
ror
clc
lods
stos
stos
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
mov
loope
add
enter
mov
xchg
repnz
and
lahf
add
cmpsl
add
mov
arpl
mov
add
int
outsl
call
add
filds
jae
jmp
sub
std
shr
loopne
fucomi
std
fucomi
std
fldl2t
std
out
std
jecxz
std
aam
cli
shl
cli
shl
clc
into
fdivrp
clc
int
push
rcl
out
mov
fcos
fcomp
fdivr
mov
mov
cltd
fwait
fwait
cmp
fwait
fwait
add
fcom
add
rol
lods
xchg
lcall
add
mov
mov
add
roll
outsb
fadds
jae
loope
jns
ljmp
sti
xchg
cli
leave
loope
cli
int3
jecxz
sti
fdivrp
clc
mov
sar
hlt
mov
iret
push
mov
int3
ljmp
ljmp
cli
ljmp
cmc
fnstsw
fsubrp
mov
mov
xchg
add
add
add
lret
add
rol
mov
cmpsb
loopne
ss
mov
add
mov
data16
mov
add
dec
pop
jno
rorb
jne
fistl
ja
loop
cmp
ljmp
ljmp
std
loope
ret
cld
fisubrs
mov
enter
int3
in
lret
loopne
xlat
shl
aad
out
loope
jmp
call
popf
ljmp
push
lods
lods
lods
adc
test
test
lahf
lahf
movsb
add
ret
roll
popf
stos
aam
dec
cmp
test
imul
and
mov
ja
mov
inc
xchg
ret
push
mov
lret
test
mov
out
mov
mov
leave
lret
int3
rcl
int
aad
shlb
xlat
aam
jg
jb
gs
jecxz
out
call
xor
div
mulb
lock
repnz
or
mov
int3
add
add
add
mov
mov
les
insb
mov
test
xchg
ljmp
mov
sarb
mov
les
ret
ret
into
enter
int
addr16
rclb
rcl
dec
aam
inc
rcl
aad
aam
fsubs
xlat
fcmovnu
sbb
loopne
adc
jecxz
push
jecxz
out
ljmp
cli
testl
std
std
incb
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
xor
int
daa
int3
ror
and
rcrb
rcl
aam
rcl
aam
rcl
push
rcr
xlat
add
fstp
add
add
jecxz
add
in
ljmp
std
incb
mov
mov
add
ret
mov
mov
mov
mov
push
rol
or
enter
movl
lret
add
add
xlat
aam
aam
aam
aad
add
xlat
loop
xlat
aad
add
loope
add
fucom
add
out
add
icebp
lock
std
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
into
shr
aam
aad
rcl
sar
ror
into
cli
int3
int
stc
lret
lret
lret
mov
mov
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
and
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
iret
iret
xlat
call
aad
dec
iret
sar
into
iret
iret
dec
int3
lret
mov
mov
icebp
xchg
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
je
gs
dec
dec
dec
cmp
sub
sub
aaa
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
mov
ret
ret
int3
lret
rcl
call
aam
dec
lret
mov
mov
mov
ljmp
lahf
lahf
xchg
xchg
xchg
jmp
outsl
outsl
xchg
pop
adc
add
add
add
add
add
jg
addl
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
insb
outsb
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
mov
sar
mov
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
cltd
fwait
out
addb
adc
wrmsr
add
add
add
add
add
pop
cltd
fwait
lcall
cwtl
cwtl
fcoml
addl
jmp
js
sarb
jnp
jns
jns
je
jb
push
push
push
cmp
jne
sahf
pushf
popf
mov
scas
scas
repz
lods
scas
sti
scas
scas
scas
std
test
popf
sahf
call
xchg
call
mov
lods
jmp
scas
lods
leave
cmpsb
cmpsb
cmpsb
cltd
jb
je
adc
adc
add
add
add
add
outsb
outsb
insl
pop
xchg
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
outsb
orl
cwtl
lcall
mov
xchg
xchg
xchg
lcall
cmpsb
test
mov
mov
mov
scas
mov
mov
mov
movsl
movsb
cmpsb
pop
addl
add
pop
pop
pop
or
scas
mov
cmpsb
mov
mov
mov
call
lahf
mov
negl
jg
stos
push
push
push
jo
push
push
outsl
insb
outsl
insl
xchg
subl
mov
lcall
mov
pushl
pop
mov
mov
jnp
mov
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
mov
xchg
call
xchg
xchg
lcall
lcall
popf
lahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
nop
jbe
notb
pop
cmp
dec
jnp
movsl
inc
jns
lods
aaa
jbe
scas
daa
jae
mov
outsb
pushl
sbb
mov
mov
mov
scas
scas
jle
movsl
mov
add
add
add
popa
or
mov
in
mov
cwtl
lcall
mov
mov
decl
addb
xchg
jb
cld
xchg
popa
cmp
dec
js
cmp
xchg
sub
xchg
sbb
punpcklwd
mov
adc
insl
pushl
sbb
mov
and
rcrb
mov
scas
lods
xchg
popf
sahf
lahf
adc
add
add
pusha
pop
popa
or
stos
mov
test
lahf
mov
ljmp
test
lcall
pop
jns
mov
imul
mov
pop
incl
or
mov
push
call
add
fwait
add
or
pushl
sub
inc
jge,pn
lds
jge
enter
lret
dec
pop
cwtl
inc
test
divl
cmpsl
cmpsl
sbb
add
add
pusha
pop
popa
or
cmpsb
test
ljmp
scas
scas
pushl
mov
jmp
aas
jb
mov
pop
decl
or
xchg
decl
add
xchg
add
sahf
add
cmpsb
add
mov
insb
inc
cmp
iret
inc
call
inc
mov
inc
xchg
fimull
call
popa
sahf
inc
test
stc
mov
mov
movsb
movsb
mov
add
add
add
pusha
or
popf
mov
ljmp
mov
mov
mov
mov
mov
jl
pop
popa
call
pop
pop
decl
push
call
add
add
scas
add
mov
dec
nop
fcoms
fcompl
fistps
jmp
pop
mov
fisubrs
lret
cmpsb
mov
ret
movsl
xor
addb
add
add
dec
pop
jl
jp
popf
cwtl
lcall
scas
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
minps
xchg
add
sahf
add
test
pusha
ljmp
push
imul
jmp
insb
test
out
stos
ljmp
in
jae
jmp
cmpsl
mov
shll
addl
pop
outsl
outsl
push
mov
xchg
ljmp
mov
mov
mov
jne
lcall
ja
popf
sub
cwtl
or
lcall
add
lods
add
mov
fs
or
xchg
jmp
jp
jmp
mov
in
test
push
xchg
out
xchg
mov
test
push
lcall
add
sub
push
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
ret
inc
mov
pushf
jmp
inc
jg
mov
or
add
stos
add
mov
fs
mov
push
jne
fbld
out
xchg
sar
xchg
push
cwtl
xchg
clc
cltd
leave
stc
fwait
lret
clc
xchg
jmp
stos
inc
mov
stos
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
mov
cmpsl
jmp
dec
cmp
pop
push
lahf
add
jmp
add
mov
add
and
push
mov
iret
clc
test
sti
test
sar
cld
lods
sar
stc
cmpsb
int
call
rol
test
sahf
popf
or
add
add
dec
dec
dec
aaa
je
jae
stos
stos
stos
ror
int
out
int
cmc
lret
lret
int3
sti
lret
std
mov
mov
bound
mov
add
mov
arpl
rolb
dec
add
flds
call
xchg
cld
mov
mov
mov
std
mov
xlat
std
mov
jmp
leave
dec
rol
scas
lods
scas
mov
add
add
add
add
pop
or
aad
dec
loope
loope
fsubp
fistps
fcmovu
fsubr
mov
gs
cmpsl
jb,pn
cmpsb
pop
popa
ljmp
add
leave
add
add
or
icebp
dec
mov
sti
dec
loopne
dec
fdivrp
std
lret
dec
loope
std
out
mov
lret
mov
xchg
pushf
pushf
popf
sbb
add
add
std
incl
incb
jmp
out
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
mov
fs
add
int
outsb
faddl
jbe
jmp
outsb
mov
sti
ret
cld
shl
call
out
shl
shl
aad
fsubr
shl
push
xlat
fcmove
sar
mov
mov
add
std
add
std
incl
cld
std
incb
aam
push
mov
pop
xchg
sahf
or
ljmp
add
lds
imul
fiadds
jne
in
and
shl
std
fsubr
fsubr
cld
xlat
jmp
fsub
cld
aam
push
fdivr
loope
aad
mov
popf
popf
das
add
add
int3
into
int
mov
bound
ljmp
add
movb
call
add
loope
js
out
das
nop
stc
lcall
clc
lret
test
xlat
icebp
ret
aam
out
ret
sar
out
aam
in
aad
in
shl
jecxz
fucomp
mov
test
add
add
add
aam
mov
je
push
gs
mov
insl
inc
sbb
lret
and
xlat
sub
sti
fists
in
mov
out
loop
leave
jmp
fdivrl
lret
enter
into
aad
jecxz
ficompl
out
jmp
rorl
mov
add
lods
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
jg
rol
stos
mov
mov
les
aam
int3
insl
ror
iret
pop
rcl
rorl
xlat
xlat
cmp
das
in
fisubs
jecxz
repnz
in
jmp
fcmovnu
fildl
incb
std
std
add
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
enter
aam
rclb
mov
rcl
or
loope
or
into
int
stos
stos
stos
add
incl
std
incb
fwait
cltd
cltd
add
les
int
int3
add
std
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
rol
enter
leave
leave
mov
ret
mov
scas
mov
insb
lods
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aam
std
rcl
sar
iret
int
std
mov
stc
mov
cmpsl
cmpsl
sarl
gs
push
push
add
add
add
add
add
add
add
add
jb
jae
addr16
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
into
call
rcl
dec
iret
into
inc
mov
ljmp
sahf
sahf
sti
mov
das
push
add
add
add
add
jne
jne
xchg
aad
outsl
jo
popa
arpl
addr16
outsl
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jno
daa
and
add
add
add
jae
je
pushf
xchg
fwait
mov
test
clc
xchg
test
addl
push
push
push
inc
mov
pushf
into
mov
mov
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
movsb
cmpsl
cmpsl
stos
mov
mov
mov
xchg
cld
pushf
pushf
pushf
cmc
cltd
lcall
push
push
push
imul
jg
xchg
aam
lea
pushf
mov
pushl
push
mov
test
call
stos
stos
stos
add
add
add
mov
scas
cmpsb
scas
cld
xchg
xchg
xchg
lcall
fwait
cltd
lcall
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
nop
fs
push
jnp
lcall
ljmp
and
mov
insl
pushl
sahf
lods
lock
mov
imul
int3
add
test
pop
scas
movsb
stos
test
popf
sahf
sahf
jmp
movsb
movsb
call
push
jbe
popl
decb
arpl
xchg
adc
xchg
or
mov
sbb
jne
mov
sub
les
xchg
rcrb
subl
jne
push
mov
mov
cmpsl
ljmp
mov
lcall
sub
mov
pop
decl
add
decl
pop
jmp
adc
ret
dec
inc
mov
rolb
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsb
push
add
add
push
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
decl
push
pop
call
add
lods
add
mov
push
xchg
fstpl
fistps
jmp
pusha
movsb
jmp
cmpsb
call
pushf
mov
test
cmpsl
test
add
add
bound
adc
popf
fwait
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cwtl
and
xchg
push
pop
jmp
add
mov
xor
call
jp
out
jle
push
jle
ficompl
mov
mov
add
add
dec
adc
push
cmp
mov
ret
mov
fs
movsb
inc
jl
sahf
and
sahf
add
jmp
add
les
insl
fmull
out
mov
cmc
xchg
clc
xchg
leave
push
xchg
jmp
cmpsl
mov
cmpsb
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
mov
cwtl
ljmp
sbb
movsb
add
mov
fs
add
vmread
ljmp
clc
lods
sar
cli
scas
sar
cld
lods
sar
cld
lods
sar
jmp
enter
rcr
movsl
cmpsb
ds
std
std
add
xor
inc
mov
mov
rcl
aam
aad
aad
rcl
shr
lret
cli
mov
mov
jmp
fs
add
aam
jae
out
test
stc
nop
mov
inc
inc
inc
fcos
out
mov
ret
cmpsl
test
add
add
add
jmp
or
call
out
outsb
fcmovu
fldenv
mov
add
mov
add
add
out
cmp
dec
in
std
shl
call
out
call
out
aam
push
enter
int3
in
scas
scas
scas
popa
jg
addl
add
add
std
incb
std
push
lret
lret
shrb
mov
add
mov
add
loope
jns
repz
cmpsl
std
enter
xlat
call
shl
cld
aad
stc
aam
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
push
gs
mov
or
ficomps
cmp
insl
lods
cld
lock
shl
ljmp
jmp
in
aam
ljmp
scas
ret
vsqrtps
add
add
popf
stos
xchg
inc
and
push
mov
ret
int3
lret
mov
xlat
mov
lret
adc
int3
outsl
xlat
int
pop
dec
jecxz
loope
out
call
sbb
mov
mov
cmp
mov
scas
push
mov
mov
cs
mov
int
fimuls
int3
int3
int
aam
aam
std
std
incl
cmpb
incl
stos
incb
mov
std
std
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
loope
pop
mov
call
test
stos
sub
mov
les
push
cmp
lods
and
mov
pop
iret
jge
cmpsb
push
and
inc
enter
pop
push
divl
cmp
aaa
sub
pop
test
push
mov
inc
pusha
shrl
adcb
sbb
pusha
in
insb
jge
ret
push
sub
add
lods
mov
cmp
jb
pop
pop
std
adc
in
and
mov
xchg
lahf
fstl
into
cld
mov
mov
or
fidivrl
mov
add
sub
sub
cmp
xchg
shll
mov
and
push
sahf
popa
xor
mul
rcl
out
hlt
mov
daa
xor
nop
sbb
ror
test
iret
imul
shr
mov
in
sub
push
and
and
mov
pop
or
lods
aaa
les
jle
lods
clc
movsl
mov
push
and
inc
push
shl
inc
shrl
shl
das
push
mov
jge
adc
sbb
aad
ja
rorb
pop
shlb
je
and
js
pusha
and
loop
jne
movsb
dec
adc
xchg
push
fnsave
sar
int
xor
int
jbe
dec
or
pop
sti
or
cli
scas
pop
and
pop
lds
jl
add
stos
jp
out
and
dec
dec
test
sub
xchg
push
jbe
push
xor
or
sbb
movsl
pop
adc
mov
cmp
sbb
sarb
push
adc
rol
mov
scas
insl
call
por
movsl
pop
add
lea
mov
sbb
fnstenv
xchg
push
adc
out
outsb
loop
jp
data16
push
mov
push
or
mov
mov
dec
adc
fisubs
and
adc
push
data16
imulb
mov
fistpll
clc
lret
fcmovnb
shlb
pop
mov
ljmp
add
ljmp
mov
pop
jecxz
cmc
pop
fisubs
sub
jg
inc
sarb
or
mov
test
inc
adc
sub
sbb
or
mov
stos
mov
lods
add
inc
adc
jbe
jle
xor
dec
into
add
jmp
std
ss
xor
loop
push
mov
mov
jge
lock
push
pop
movb
mov
movd
push
pushf
push
mov
mov
mov
cmpxchg
fbld
inc
repz
mov
lock
les
int3
mov
mov
gs
mov
popa
cmpsb
fdivr
int3
outsl
sub
stos
insl
out
push
cmp
imul
lds
inc
inc
sbb
pop
mov
mov
xor
stos
cmp
fistl
mov
xor
lods
dec
inc
xchg
inc
xchg
inc
outsl
jmp
pop
fidivrs
dec
lret
inc
imul
and
dec
or
adc
aaa
cmp
pop
sub
adc
cmp
mov
repz
fidivrs
xchg
mull
ret
flds
bound
rclb
push
jmp
jae
jmp
cmp
in
imul
sbb
repz
in
nop
cmp
sahf
sub
push
cmp
mov
fiaddl
out
push
mov
inc
mov
lret
lods
add
ss
and
ret
dec
push
ja
data16
lea
dec
mov
clc
mov
cmp
inc
adc
xchg
sub
pop
or
mov
cmp
jl
out
cmc
enter
pop
push
and
fwait
add
xor
les
arpl
mov
sbbb
mov
pop
mov
add
out
stos
movsb
pushf
xchg
mov
mov
inc
jle
ja
rolb
test
adcb
dec
cmp
out
fdivr
adc
int
sbb
mov
mov
scas
sub
cltd
add
jle
imul
arpl
and
dec
sbb
inc
dec
imul
lret
sbb
mov
aaa
sbb
lret
arpl
mov
sbb
rolb
subb
mov
stos
jmp
xor
and
mov
mov
dec
cwtl
inc
xor
in
and
int
sarb
rol
aaa
popf
lahf
add
iret
mov
xor
scas
out
or
xchg
movsl
push
add
fs
dec
andl
loope
call
cmp
sub
mov
pop
sarb
shll
sbb
and
out
in
dec
mov
sub
push
aam
test
test
je
xor
mov
sub
jnp
pop
imul
jle
sbb
out
mov
push
fcmovne
filds
fcmovne
lock
mov
dec
into
outsl
jmp
fnstcw
push
insl
mov
jg
insl
popf
mov
mov
pop
repnz
lods
dec
xor
and
or
push
sbb
inc
mov
sbb
movsb
inc
mov
mov
lods
inc
push
mov
mov
loope
ja
cmp
add
mov
inc
mov
pop
cmp
imul
adc
jp
xlat
movsl
cmp
repnz
mov
jg
fisttps
repnz
push
ret
inc
into
push
in
rorb
cwtl
mov
cltd
cmp
mov
aas
pop
divb
sbb
mov
lods
in
cmp
das
pop
shr
inc
xchg
cmp
ljmp
cwtl
into
or
mov
fbld
push
and
sub
jp
bound
je
sub
adc
sub
iret
data16
rorl
ds
mov
adc
ss
fisubl
mov
mov
or
mov
push
subb
aad
popa
pop
jp
iret
stos
sub
jg
int3
push
or
pushf
push
mov
or
mov
lock
mov
out
or
cmp
in
mov
lock
mov
sub
imul
adc
xor
repnz
call
dec
dec
lock
lret
stos
jo
inc
int
fs
mov
jb
out
dec
xchg
into
lds
fwait
pushf
out
sbbl
and
push
inc
fadds
sub
xchg
fldl
push
mov
adc
das
fs
pusha
or
mov
mov
aaa
push
scas
fsubrs
daa
mov
mov
fdivl
push
adc
xchg
jmp
sbb
sub
into
movsb
dec
outsl
push
jge
push
in
negb
je
dec
icebp
stos
inc
and
sub
sbbl
xor
jb
dec
mov
bound
cld
sbb
sub
or
repz
xor
call
and
scas
push
cmp
imul
jb
idivl
arpl
xchg
es
jg
fdivrp
out
cmpsl
ss
outsl
cli
jp
fbstp
pushf
popf
iret
xchg
test
lods
lea
cmp
bound
xchg
aam
add
out
mov
pop
or
inc
lods
pop
test
pop
ljmp
out
push
add
jge
jae
pushf
movsb
push
add
test
and
xlat
pop
inc
inc
xlat
sub
negl
mov
jl
into
setge
out
lcall
inc
mov
jo
xchg
insl
or
cmp
hlt
mov
pop
push
lods
mov
adc
loopne
xor
mov
arpl
push
inc
push
test
test
jno
cmpsb
pop
fdivs
jnp
or
jns
ret
fwait
push
jmp
fisubrs
fidivl
shlb
mov
rol
push
lret
bound
mov
cmp
stc
outsb
add
enter
jle
aad
xchg
lahf
push
adc
or
inc
les
mov
test
sbb
jb
leave
mov
xchg
sub
mov
lret
push
out
jo
and
adcl
cmp
xchg
cmpsl
loop
rclb
leave
dec
jecxz
mov
scas
loop
or
lret
in
movsb
cmp
outsl
lret
bound
mov
jno
inc
fiaddl
fsubrs
and
jbe
repnz
or
ret
insl
cmp
pop
pop
lock
inc
sbb
jb
xchg
sub
sti
xchg
push
cmp
cmc
mul
js
pop
into
gs
das
movb
sahf
xor
out
ds
scas
mov
mov
das
mov
lea
loop
mov
aaa
mov
insb
hlt
cltd
xor
or
jno
pop
jb
jns
loopne
pop
fwait
sub
jecxz
leave
pusha
lahf
xchg
mov
testb
and
pop
in
add
adc
ljmp
iret
jl
cli
xchg
mov
jl
xorps
loope
and
das
mov
mov
push
aad
dec
mov
flds
sub
jmp
fidivs
or
xor
xor
inc
lahf
arpl
adc
mov
aaa
movsb
mov
xor
mov
dec
loop
xlat
sbb
sbb
jmp
mov
pop
in
adc
test
dec
jecxz
mov
out
test
xor
dec
cmpsb
rcrl
mov
fimull
pop
stos
in
cli
xchg
fisttps
std
popl
fdivl
sub
xlat
add
aaa
into
dec
and
mov
sahf
sub
pop
push
dec
in
cmp
pop
sbbl
xchg
mov
arpl
adc
push
testl
imul
clc
scas
loope
inc
daa
rol
pop
ret
sarb
hlt
in
and
popf
dec
loope
idivl
jmp
or
push
cmp
popf
xor
xor
cmp
les
test
push
decb
sbb
and
in
out
out
push
out
sbb
incb
jl
mov
dec
loop
xor
mov
mov
mov
mov
lret
sbb
xchg
push
in
xchg
fdivrp
call
insl
jb
or
add
sub
mov
jecxz
xchg
pop
pop
cmc
mov
pusha
negl
sub
cmp
push
jmp
push
ret
xor
clc
jno
xchg
push
lods
movl
and
test
lea
cmp
lods
out
jb
iret
mov
sub
loop
leave
rcrl
cmp
in
leave
pusha
movsl
push
icebp
mov
jae
nop
cltd
stos
inc
or
inc
sahf
cld
call
mov
leave
pusha
hlt
shrb
les
fidivl
jp
push
mov
cmp
jmp
or
jl
sub
lods
push
sbb
dec
das
push
lods
mov
ret
mov
inc
xlat
in
aad
cmp
mov
jne
call
adcb
cli
repnz
xor
mov
jg
lds
pushf
xor
jmp
into
cmpsb
scas
xor
mov
fiaddl
je
in
rclb
add
jb
adc
add
outsl
push
cwtl
xchg
jge
clc
mov
stos
inc
les
cmp
pop
push
out
dec
push
add
ljmp
imulb
add
mov
mov
mov
lods
push
cmp
into
dec
in
and
scas
xchg
loopne
aam
cmp
sbb
in
or
fdivs
mov
or
mov
cmp
fwait
jns
cmp
aas
or
cld
aas
pop
enter
iret
push
loopne
rcll
or
filds
inc
fldcw
inc
push
out
lods
xor
sbb
adc
stc
rclb
lret
es
xor
mov
dec
daa
mov
jp
dec
loope
fwait
data16
or
in
xor
jns
lahf
cltd
xchg
sub
shlb
sbb
lds
popf
ja
test
sbb
nop
inc
stc
loopne
jmp
repz
or
and
adc
mov
movsb
addl
mov
testl
pop
jmp
jmp
sbb
adc
call
mov
shlb
pop
add
cmp
into
gs
fiaddl
sti
in
and
pop
mov
push
in
lock
hlt
mov
xor
data16
inc
fcoms
ss
sub
leave
sbb
mov
dec
sti
xchg
sub
cltd
xor
jae
jae
inc
xlat
dec
xchg
sub
add
daa
adcb
fisttpl
mov
shrb
dec
pop
idivb
addr16
mull
push
insl
xorl
mov
hlt
in
fidivs
push
sbb
xchg
mov
sbb
lds
and
mov
into
in
test
ljmp
shll
stos
jbe
pop
mul
or
mov
insl
js
cmc
mov
lcall
clc
sub
xor
sarb
jg
lods
push
sub
inc
pop
in
je
loopne
push
pop
pushf
xor
dec
fildll
inc
fnstcw
lock
pop
mov
daa
mov
and
and
push
xor
or
test
pop
sbb
push
mov
adc
inc
push
cld
xchg
nop
repz
fldt
aaa
mov
jno
dec
fwait
pop
out
mov
dec
pop
jb
mov
jo
cmp
ret
add
mov
and
pop
repnz
ror
add
add
cmp
adc
stos
insl
outsl
push
pop
pusha
sbbl
repnz
testl
movsw
or
dec
aaa
out
test
lret
testb
fists
shl
repnz
xor
imul
fstpl
sbb
pop
mov
pop
sbb
and
cmp
aam
popf
lods
xchg
sbb
sbb
jp
push
mov
mov
push
inc
jg
push
cwtl
and
adc
jecxz
xor
jmp
stos
add
scas
std
push
call
sar
fucomp
loope
pop
ficoms
or
ret
lock
test
leave
cld
sbb
xorl
in
stos
fcomi
stos
inc
test
decb
mov
arpl
fmull
adc
shrl
mull
leave
stos
lahf
ss
ljmp
scas
loope
adc
iret
xchg
sub
aad
sbb
loop
jle
ret
pop
mov
mov
outsl
pop
cmp
pop
xchg
jns
es
mov
sub
fnstenv
sub
clc
js
pop
roll
into
repnz
fstl
xlat
xchg
mov
and
call
mov
xchg
insl
lahf
leave
pusha
rorl
jmp
and
lds
inc
or
pop
ret
mov
iret
adc
insb
cmp
repnz
insl
fnstenv
dec
lock
jb
sub
pop
out
jmp
lahf
popf
xor
daa
std
xchg
cltd
sti
and
in
dec
mov
inc
leave
pop
mov
xor
lahf
mov
push
shll
sarl
pop
repz
inc
xlat
icebp
test
fdivrp
adc
rorl
lahf
ss
or
mov
loopne
stos
jp
cmc
pop
sbb
pushf
movsb
lea
mov
fbld
jmp
dec
loopne
or
push
call
xchg
xchg
outsl
sub
jo
push
pop
lea
jbe
loopne
push
dec
loopne
fsub
jnp
adc
push
jns
loopne
cmp
and
icebp
cltd
insl
clc
mulb
aam
stos
add
bound
push
aad
nop
jmp
aad
cmovle
xorl
cli
jecxz
fwait
sub
fsubr
inc
insb
push
fsubr
jne
aaa
cmpsl
jbe
jmp
mov
leave
outsl
push
mov
mov
out
ss
mov
xchg
mov
mov
fmul
jl
add
dec
add
inc
negb
addw
xor
outsb
jnp
icebp
insb
mov
iret
and
rorb
mov
jno
adc
cmp
or
push
insl
pop
fwait
data16
and
out
add
xlat
jbe
sbb
ds
int3
jg
jmp
ljmp
xor
and
nop
fbld
adc
cmp
in
cmp
jecxz
jmp
aaa
test
adc
or
pop
roll
loop
fildl
add
pause
mov
ss
add
xchg
jnp
push
push
jb
cmp
xchg
dec
jno
sub
mov
dec
push
aad
dec
and
cmp
lcall
jnp
jb
mov
sub
hlt
iret
decw
ds
insl
mov
je
insl
cmp
dec
int
outsl
mov
in
js
xchg
adc
push
stc
dec
insb
test
push
imul
xchg
inc
push
xor
sbb
cmpsb
stos
test
jnp
lret
adc
inc
cmpsl
inc
fcoms
fwait
ret
pop
or
cwtl
das
inc
mov
mov
lcall
mov
mov
sbb
sub
mov
les
mov
cmc
nop
daa
int3
dec
je
push
in
add
xor
jle
icebp
push
sbbb
adc
subb
pop
sahf
int
dec
out
out
jno
mov
push
lods
rcl
testb
adc
cmpsb
unpcklps
sub
cmp
lods
xor
cmpsl
jns
imul
fwait
sbbb
cmp
push
and
push
popf
bound
adc
pop
insb
pop
icebp
popf
inc
push
jmp
xor
stc
nop
iret
sbb
orl
movsb
cmp
ds
mov
iret
scas
sbb
cmp
out
int3
fcom
stc
nop
ret
shrl
aas
mov
jecxz
lock
jle
adc
js
ret
cs
dec
aad
cmpsb
xor
cmp
fcoms
sub
mov
loope
xlat
push
mov
and
in
pop
scas
mov
loopne
sahf
adc
das
xor
xor
sub
push
inc
hlt
ds
in
mov
leave
pusha
pop
and
leave
xchg
sbb
popl
aaa
mov
test
adc
lods
xchg
lcall
std
xchg
mov
es
repz
cmp
mov
xor
push
push
jmp
mov
cld
xchg
push
sbb
cli
mov
xchg
sub
data16
pop
pop
aaa
into
dec
mov
cmp
hlt
mov
in
jmp
aad
add
lahf
sahf
idivb
iret
mov
jae
adc
sub
enter
mov
daa
mov
cmpsb
cmp
insb
pop
cmc
clc
xchg
in
jmp
inc
cli
xchg
aaa
in
pop
hlt
fucom
xchg
sub
dec
pushf
xor
inc
xchg
sub
fldenv
push
lods
xchg
dec
int3
arpl
gs
flds
cwtl
mov
ficompl
int3
lret
sbb
lods
mov
loop
add
inc
cmp
sahf
xchg
lea
iret
xchg
mul
loop
push
sbb
aas
and
imulb
jo
cmp
mov
sarl
outsl
fisttpl
or
add
jno
sub
inc
into
mov
cwtl
push
xlat
outsb
mov
cmp
out
out
es
pop
push
out
mov
aas
scas
adc
mov
jo
mov
scas
inc
addr16
push
jmp
xor
sbb
push
adc
jns
lock
addr16
int3
or
cwtl
push
sub
xchg
push
fidivl
cltd
add
pushf
push
fidivs
mov
mov
cltd
test
xor
out
pop
dec
mov
pop
inc
xchg
sub
lods
inc
aas
jg
imul
push
inc
movsw
cmp
data16
mov
mov
fs
clc
mov
mov
and
jo
out
inc
scas
inc
pop
psllq
mov
adc
shl
push
jmp
mov
or
and
int
ljmp
sub
into
gs
iret
sub
sub
lods
mov
push
pusha
xor
inc
das
mov
mov
fcoml
mov
nop
daa
jl
jnp
jge
leave
pusha
push
lahf
out
shll
out
ja
movsb
cmp
cwtl
xchg
sub
out
iret
mov
gs
xor
mov
in
sahf
sub
jno
mov
cmpsb
cmp
scas
inc
iret
pop
rclb
xor
add
jecxz
pop
mov
and
jle
jb
sub
jns
outsb
stc
nop
cmp
push
pop
imul
jb
mov
jns
cmp
xchg
popa
mov
pop
sbb
jle
cmp
lea
add
sbb
pop
jp
insb
xor
xchg
mov
inc
fiaddl
cmp
sbb
popa
clc
jns
repnz
fwait
sbb
pop
cmp
jg
jg
mov
sbb
lock
mul
jl
pop
imul
or
xchg
sub
pop
outsb
lahf
ss
xorb
mov
mov
jecxz
rclb
cmp
push
pop
leave
sbbl
pop
lcall
ds
icebp
int3
arpl
js
icebp
xchg
and
outsl
push
or
pop
ja
mov
pop
cwtl
int
lret
pop
scas
jmp
fwait
mov
pushf
xor
aam
push
fprem1
jecxz
xchg
or
xchg
sub
sub
lock
lret
sub
orb
mov
push
call
jl
and
xor
shlb
dec
and
push
nop
cwtl
das
daa
jns
std
mov
jnp
stos
adc
in
xor
loopne
cmpsb
cmp
and
mov
fs
into
adc
jbe
ja
jmp
xor
mov
push
shrl
lahf
jnp
cmpsb
push
cmp
xchg
adc
mov
das
sbb
dec
mov
aam
jnp
fsubrs
popf
sti
xchg
ret
insl
pop
jecxz
rcll
xchg
sub
mov
std
sub
mov
scas
xor
loopne
push
push
aaa
into
aas
pop
cmpsb
cmp
pop
jae
push
das
fstl
xchg
rolb
popa
ret
testl
pop
aam
call
mov
shll
hlt
jge
es
test
inc
lcall
sar
mov
addr16
fnstenv
inc
out
test
inc
lods
inc
xor
fdivl
scas
mov
push
mov
pop
out
lret
mov
loopne
push
out
dec
and
lcall
sbb
sub
mov
push
mov
shlb
mov
mov
add
es
orl
outsb
jo
outsl
jmp
pause
or
pusha
std
sub
fildl
jb
lock
outsb
add
xor
push
popf
stos
stos
mov
sbb
nop
daa
and
inc
sti
xchg
fs
jge
sbb
ds
bound
test
or
pushf
pop
dec
shrl
jge
mov
mov
aas
add
stc
nop
daa
and
xchg
sbb
mov
jo
icebp
arpl
or
add
xchg
sbb
fdivs
les
ret
pop
icebp
mov
xchg
jle,pt
mov
add
jno
sahf
xor
sub
add
pop
movsl
cmp
pop
cmp
dec
cmp
push
mov
and
subl
or
inc
movsb
imul
scas
xchg
insl
repnz
push
repz
daa
adc
movhps
pushf
xchg
test
push
sbb
aas
movsl
ja
test
shlb
sbb
js
mov
mov
psubw
sbb
mov
sbb
mov
clc
mov
jge
mov
pop
ljmp
jne
pop
sub
pop
test
mov
or
out
sbb
dec
rorb
scas
push
repnz
mov
jnp
pop
mov
push
fcoml
call
adc
loop
outsl
aam
shlb
mov
dec
stos
jno
fsubrl
adc
fbstp
xchg
fisttpl
pushf
mov
outsb
mov
mov
repz
lret
int
jp
rolb
add
add
popl
sub
lock
mov
shl
es
dec
mov
out
add
rclb
imul
hlt
pop
int
test
hlt
int
mov
sub
imul
jge
mov
cwtl
das
xchg
lock
ljmp
dec
cltd
mov
sbb
mov
inc
mov
xchg
insl
xchg
lock
inc
pop
lret
xor
jecxz
inc
jp
ret
repz
and
cli
and
jbe
shll
cmp
sarl
in
fnstenv
push
cmp
mov
out
loopne
push
sub
mov
jmp
les
cmp
imul
adc
or
inc
lods
mov
stos
jecxz
int
test
test
rcrb
nop
sub
in
inc
clc
push
popf
push
dec
cmp
shll
ret
sbb
cwtl
xchg
inc
fsub
cmpsl
push
jmp
cmp
aaa
out
mov
mov
adc
or
lds
xchg
jmp
add
cmp
mov
and
dec
stos
inc
xlat
outsb
xchg
lret
cmc
mov
mov
insl
add
addb
sbb
in
sbb
sbbl
lcall
orb
push
orb
es
cwtl
xchg
loopne
mov
pop
jg
mov
dec
loope
sar
xchg
adc
rorl
xor
fsubr
arpl
mov
cmp
or
inc
sarl
cmp
icebp
mov
cmc
loop
sbb
mov
sub
jnp
jge
dec
jl
lods
cmpsl
arpl
lcall
mov
pop
sub
in
mov
push
jmp
xchg
lock
ljmp
xor
inc
rcrl
ds
sahf
ret
sbb
ljmp
or
iret
jb
inc
vaesdec
lcall
push
mov
rclb
mov
push
into
sub
jecxz
scas
mov
or
in
sbb
lea
push
cmc
pop
ficoml
mov
ret
stc
mov
push
dec
and
loope
hlt
sub
add
ret
pop
shrl
cltd
mov
mov
shrl
inc
mov
fnstenv
sbb
mov
sbb
leave
and
shlb
inc
jmp
ffree
dec
icebp
mov
jle
in
sbb
lods
aaa
popa
xor
push
sbb
sub
out
pop
fs
jp
cltd
mov
inc
ret
pinsrw
das
push
cwtl
sub
ds
mov
scas
in
xor
imul
and
pop
cli
add
cmp
sarb
cmp
gs
sbb
dec
push
inc
negl
int3
pop
or
bound
sbb
mov
int
test
mov
xor
adc
es
xchg
sti
add
das
mov
push
testl
sbb
test
cli
shrl
test
icebp
pop
addr16
inc
xchg
push
push
sbb
mov
sbb
addl
dec
loope
pop
jnp
sbb
sbb
outsb
pop
jnp
or
inc
push
int
push
imul
test
ret
adc
fisubrl
dec
lcall
xor
arpl
jecxz
jae
mov
fildl
xlat
aad
inc
shlb
loopne
dec
into
adc
xchg
pushf
add
enter
mull
outsl
inc
je
xor
nop
push
push
dec
loopne
insb
cltd
mov
sbb
cmp
mov
daa
test
cmpsb
movsl
out
pop
cli
ljmp
out
in
cmpsb
outsl
push
fbstp
ret
test
mov
mov
push
or
sbb
pop
clc
aaa
ja
sbb
es
add
add
cmp
mov
int
adc
lahf
push
push
stos
sbb
mov
pop
jle
dec
test
jl
and
in
das
je
fstp
ret
or
gs
cmp
test
push
inc
inc
ss
xor
sbb
jbe
adc
push
or
adc
sbb
stos
mov
in
mov
mov
rcrl
cmp
adc
fwait
xor
icebp
mov
inc
mov
jae
xchg
loop
mov
lds
stc
adcl
or
add
ja
dec
sub
mov
ss
rclb
dec
and
sbb
pop
subb
xor
fcompl
or
mov
scas
inc
jmp
sub
stc
cwtl
xor
shrl
mov
cmpsl
imul
pusha
outsb
rorb
jae
popf
inc
pop
push
jecxz
insl
mov
les
mov
rcll
in
mov
imul
lds
movsb
mov
mov
call
loopne
repz
js
pop
testb
jae
es
insb
inc
xchg
add
aad
shll
dec
mov
mov
sbb
mov
fsubrp
xchg
shrb
inc
mov
or
cld
adc
cmp
xor
push
mov
dec
mov
arpl
out
addr16
xlat
mov
int
in
mov
fsubrs
mov
push
or
test
out
sbbl
enter
pop
fldcw
push
out
fidivs
cmp
fadds
in
push
cmpsb
pusha
out
inc
ficompl
subb
scas
out
xor
push
es
mov
push
cs
mov
xor
mov
pop
in
sbb
adcb
cltd
subb
lcall
popf
and
and
ds
mov
mov
test
ret
pop
adc
pop
jmp
outsb
pop
out
lahf
xchg
lods
loope
xchg
lods
cmc
mov
jo
repz
mov
lods
daa
cwtl
iret
jns
sub
xchg
cmp
inc
jo
test
mov
in
stos
daa
lret
cld
sbb
divb
bswap
xor
sub
out
inc
pop
inc
xor
cwtl
mov
lret
xchg
pop
add
mov
ss
sub
cmp
dec
inc
ljmp
insl
pop
negb
sub
and
je
iret
imul
jp
jp
adc
push
sbb
dec
pop
inc
mov
xor
adc
leave
mov
gs
xor
inc
mov
jge
mov
push
mov
cmp
cmp
lea
mov
jb
dec
les
inc
cmpsl
xchg
inc
test
adc
xor
mov
mulb
cltd
and
pop
and
lcall
ret
jecxz
outsl
call
pop
sbb
cmp
mov
iret
jbe
into
scas
scas
imul
add
and
std
inc
sub
push
arpl
rclb
and
inc
leave
ffreep
pop
mov
int
add
cmp
jle
lods
bnd
lret
enter
pop
ret
fmull
mov
pop
aam
imul
dec
or
insl
gs
mov
add
or
jecxz
mov
lock
ficompl
mov
repz
mov
stos
mov
push
rcrb
repz
adc
mov
ret
pop
mov
dec
pop
mov
jbe
dec
sub
es
sbb
jmp
cmp
xor
mov
sbb
into
stc
nop
imul
out
imul
int
inc
cmpsb
inc
inc
xor
sub
insl
mov
mov
loopne
jns
jecxz
mov
push
movsl
mov
popa
clc
pop
pop
adc
fildl
scas
inc
sahf
in
fucomip
cld
movsb
cmp
adc
insb
cmp
sbb
aaa
push
mov
fstpl
ret
stos
mov
sbbb
push
imul
cmp
cmpsl
pushf
pop
addr16
push
fidivs
data16
test
lods
and
cmp
int3
lcall
stos
stos
int
std
or
xchg
sub
lock
sbb
stc
decl
xchg
push
push
jmp
mov
iret
sub
pop
cmp
fisubl
shll
adc
setg
push
cmp
push
cwtl
mov
ret
repz
pop
mov
inc
lods
pop
aam
sahf
mov
lods
cld
sbb
repz
mov
jo
daa
or
mov
ret
cmp
mov
mov
mov
adc
nop
daa
or
scas
jns
divl
sarb
cmp
std
dec
mov
int
pop
mov
lods
mov
iret
lcall
mov
shrl
lret
inc
cmpsl
repz
sub
popf
mov
outsb
add
lahf
mov
add
outsl
mov
int
adc
or
push
loopne
add
cmp
adc
sub
jno
ret
call
or
loopne
mov
cwtl
dec
and
fldcw
jge
in
pop
jb
out
lea
pop
imulb
jecxz
ja
cwtl
pop
add
out
iret
xchg
or
lds
into
xor
push
loop
movsl
xlat
ja
iret
test
outsb
mov
or
adc
lods
mov
dec
in
pop
lock
fsubrl
int3
pop
inc
mov
rorl
add
and
mov
in
adc
divb
mov
loopne
sbb
stc
test
fsubp
jge
mov
fcomps
orl
mov
faddp
inc
enter
sbb
xchg
push
mov
pop
cld
subb
jl
add
stos
pop
push
dec
fadds
cmp
jecxz
stc
and
loopne
outsl
mov
fnsave
add
fisttps
jecxz
add
push
test
in
sub
mov
clc
or
ret
cs
aad
mov
into
stc
cmp
ljmp
sahf
scas
aad
dec
jl
mov
das
fwait
into
cmc
fcoms
adc
dec
cli
fdivrl
daa
xchg
jbe
push
or
xor
test
sbbl
scas
pop
lea
push
pop
fidivrl
movsb
cmp
push
xor
pop
cmp
iret
sub
rcpps
fistpl
nop
arpl
sbb
sahf
std
cld
cmpsl
cmp
fistpll
add
pop
push
dec
mov
test
out
popa
shl
mov
and
or
test
daa
scas
hlt
mov
xor
aas
mov
aaa
inc
jecxz
push
sarb
pop
loop
mov
xchg
cli
insl
adc
add
lahf
or
stos
mov
xor
insb
add
repz
flds
sub
fldl
cwtl
push
inc
mov
mov
cmc
mov
daa
jecxz
int3
or
pop
movsl
and
imul
rcrb
jmp
and
adc
mov
daa
ret
lods
fs
in
jo
aad
popa
pop
aam
iret
jns
xchg
pop
rclb
int
mov
ljmp
js
lret
dec
data16
xor
push
xchg
xchg
add
inc
cmp
xchg
or
lcall
loop
out
movsb
popa
add
push
ljmp
leave
xchg
imul
push
lahf
or
jnp
data16
lret
push
stos
shlb
dec
ja
pusha
fcompl
inc
shrb
data16
sub
adc
add
xor
out
mov
in
stos
fidivs
nop
xchg
xchg
cmp
inc
xchg
mov
mov
add
int3
dec
aas
jl
jnp
and
sbb
outsb
iret
sti
dec
add
and
ds
pop
int
stc
outsl
jno
sbb
popf
mov
in
mov
mov
loop
in
and
call
in
lret
and
decl
sub
into
pop
int
mov
ret
cmpb
mov
fwait
push
mov
out
decl
dec
sti
add
enter
push
fs
bound
movsb
fs
iret
imul
arpl
in
scas
sub
jbe
add
test
in
or
cli
iret
hlt
pop
in
mov
rclb
je
or
hlt
xchg
sub
lock
lret
out
cmp
fldenv
mov
sbbb
stc
dec
lds
dec
int
push
jle
int3
sbb
mov
scas
xchg
xor
insb
into
mov
mov
fsubs
xor
sub
push
pop
pop
dec
and
push
dec
xor
fs
sub
clc
inc
jg
outsl
int
outsl
mov
in
xor
and
dec
cmp
jnp
jns
sub
test
sub
jne
shll
push
out
add
loope
popa
cmp
or
int3
clc
sbb
xchg
xchg
fiadds
pushf
lds
cvtps2pd
add
cli
xchg
out
jmp
mov
int
and
lahf
xor
imul
movsb
out
stos
mov
int
sarb
add
mov
inc
hlt
jmp
xchg
add
mov
insl
jmp
inc
or
dec
mov
in
js
call
ljmp
insl
dec
fistps
xchg
test
in
or
fsubrs
sub
mov
cwtl
sbb
shlb
cmp
mov
sub
adc
inc
ja
in
loope
fwait
jb
fisttpll
dec
lahf
xor
jne
mov
ljmp
outsl
sbb
mov
sbb
je
pop
ljmp
xor
mov
iret
sub
pop
insl
dec
push
lods
xchg
cmp
pushf
push
adc
jl
push
lds
jae
sub
scas
pop
loopne
cmp
leave
pusha
jno
aad
mov
sub
dec
jbe
loopne
add
jle
dec
xchg
add
data16
lahf
cmp
inc
daa
xlat
fchs
ja
stc
xor
and
fbld
push
xor
mov
insb
add
cltd
out
jge
ss
test
stc
in
mov
mov
enter
mov
inc
xchg
add
test
adc
sbb
or
jnp
xor
mov
jl
out
pop
dec
bound
adc
ja
or
xor
movsl
icebp
mov
fcoms
imul
iret
sbbb
popf
loope
test
cmp
fcomps
mov
test
add
xor
js
shlb
pop
cmp
mov
loope
dec
push
into
and
cmp
cli
enter
test
call
shrb
add
in
pop
jns
mov
push
dec
jns
mov
mov
jne
xchg
or
xchg
sub
pop
sahf
push
aaa
sahf
mov
bound
mov
gs
xchg
test
aam
imul
out
mov
loope
cmc
sti
test
fwait
sbbb
cmp
mov
insb
enter
rorl
push
mov
xchg
imul
ds
pop
aaa
lcall
not
and
xchg
inc
lcall
sbb
lock
lods
push
add
push
scas
sub
scas
pop
rcr
jno
jnp
mov
cli
cmp
outsl
imul
and
adc
add
pop
lret
push
or
or
xor
jmp
lcall
stos
test
mov
adc
sti
scas
push
ret
mov
loope
mov
add
dec
loop
lock
es
jo
lea
pop
push
inc
daa
sbb
fadds
or
xor
cmp
rclb
loopne
fwait
dec
pop
add
stos
addr16
lret
mov
pop
movsl
xchg
xchg
sbb
sub
stos
xchg
sbb
in
xor
call
or
cmc
push
out
cmc
push
lock
movsl
add
loop
push
sub
mov
push
rcl
adc
addr16
dec
mov
ret
sbb
cmp
imul
aad
xchg
lahf
rcll
pusha
arpl
ljmp
add
sub
aad
nop
jns
iret
pop
scas
add
add
ret
mov
and
lods
out
fnsave
xchg
push
mov
aam
andl
clc
repnz
mov
add
inc
adc
icebp
stos
outsb
clc
mov
out
loope
mov
jge
loope
jg
inc
cmp
pop
js
dec
cmp
fisubl
outsb
popa
push
xor
jns
inc
or
jmp
mov
and
in
fwait
test
cmp
mov
adc
addl
mov
in
cmp
cmp
or
mull
flds
jecxz
jmp
sahf
jbe
jg
pop
jb
adc
stc
insb
rolb
icebp
mov
in
incl
xor
nop
mov
roll
test
testb
cmp
mov
imul
ljmp
pop
lds
cmpl
sbb
lcall
into
shr
pop
push
fsubrs
push
sbb
pop
add
jo
hlt
enter
addb
pushf
sub
adc
mov
pusha
pop
lock
enter
dec
pop
mov
in
js
xor
xor
jo
sahf
jae
shlb
mov
jo
add
xor
test
addr16
bound
pop
xchg
insl
dec
jp
dec
dec
dec
cmpsb
cmp
pop
in
add
pop
je
nop
shl
dec
int
aam
mov
stc
xchg
cs
push
lock
xchg
js
lods
inc
imul
hlt
mov
jno
mull
ret
jle
cmc
movsb
push
xor
testb
pushf
dec
movsb
cmp
fnstenv
pushf
ret
adc
popl
loopne
and
xchg
inc
xchg
je
xor
out
sbb
add
pop
scas
dec
and
rcll
aam
clc
shrl
jmp
imul
and
xchg
ja
subl
push
or
fwait
stc
mov
fmul
nop
mov
adc
call
in
std
cmp
pusha
or
xorb
add
xor
mov
pop
xor
cltd
mov
stc
sbb
out
xchg
pop
xchg
les
lahf
or
jne
mov
mov
ficompl
jbe
jno
mov
data16
pop
jge
daa
sub
out
rorb
int
xor
mov
jno
jno
add
daa
outsl
jmp
fidivl
cmp
mov
or
into
mov
and
sarb
jmp
inc
or
push
cli
test
pop
testb
adc
push
cmp
fdivp
sarb
xchg
cmp
aad
lahf
push
or
cmp
out
addb
mov
push
inc
jmp
mov
xchg
int3
rcrb
fsubl
mov
cmc
mov
sbbb
inc
mov
push
sbb
jb
xchg
lock
lahf
mov
mov
hlt
push
ret
sbb
pop
jbe
lea
sub
push
das
decl
test
cmp
and
adc
sahf
or
jg
dec
mov
add
insl
cltd
xor
loop
shl
imul
pop
xor
xchg
pop
dec
add
sub
dec
stos
and
and
mov
jne
pop
inc
adc
dec
shr
jae
jo
sbb
nop
mov
clc
ljmp
mov
fucom
test
pop
test
scas
call
push
dec
shlb
add
setp
dec
pop
rclb
shl
cltd
xor
std
pop
mov
ss
imul
stc
inc
mov
js
lock
jbe
sbb
xchg
sub
jmp
cs
inc
mov
mov
add
out
scas
cmp
shr
inc
cltd
pop
lock
mov
sbb
sbb
mov
or
jg
pop
mov
sub
mov
xor
mov
push
call
test
aas
and
loopne
jns
jno
mov
push
xchg
stc
outsl
add
bound
adc
pop
stos
mov
mov
and
fidivl
rcrb
mov
mov
adc
or
gs
out
jge
adc
inc
add
bound
das
jbe
pop
hlt
test
out
jl
push
cmc
fcoms
imul
xchg
or
sar
inc
and
xchg
gs
lret
ja
xor
into
jne
mov
jge
popf
push
push
arpl
inc
cwtl
xor
xchg
mov
dec
loop
aas
xchg
push
pushf
fldt
push
cmp
xor
dec
lea
fstpl
popf
fsubrl
mov
imul
test
mov
adc
push
mov
cmpl
pusha
fcomp
sub
xor
dec
popa
push
and
fwait
lods
mov
mov
cmp
rol
loopne
lret
sbb
add
inc
repnz
lods
dec
dec
test
and
push
pop
xor
fisubrs
iret
out
push
add
add
inc
dec
insl
ljmp
test
jecxz
and
in
mov
cmp
and
and
add
and
push
jmp
mov
and
push
jno
cmp
xchg
pop
movsb
aam
leave
insl
shrb
shr
mov
pop
aaa
or
std
sbb
push
jbe
frstor
pushf
cmp
shll
loop
lds
cmc
popa
shlb
add
lahf
and
nop
stos
rcr
cmp
lock
push
sub
dec
rorl
ror
and
fdiv
inc
leave
pop
push
sbb
jg
popf
and
pop
inc
lea
popf
dec
add
movsb
mov
popf
push
pop
dec
adc
pop
dec
mov
mul
insl
mov
jnp
add
cmp
ret
sub
icebp
pushl
push
bound
jecxz
sub
outsb
jl
icebp
or
rcr
ror
mov
popf
push
xchg
cmp
out
cmp
lds
rcl
hlt
adc
mov
jnp
ret
mov
xchg
lahf
ss
xchg
xor
sarb
add
cmp
test
or
movsl
push
icebp
add
mov
pusha
lea
and
add
sbb
in
inc
cmp
or
add
push
adc
aad
js
sub
sub
outsl
divl
sbb
andl
add
test
jae
sbb
cmp
or
inc
in
adc
sarb
aad
aaa
ret
nop
sub
mov
xor
pop
call
sub
xchg
scas
jge
js
sub
push
lcall
sahf
ret
mov
pop
lods
ja
sbb
mov
xorl
mov
xchg
gs
or
inc
aas
jecxz
adc
cli
fs
add
int3
arpl
dec
or
adc
ss
in
mov
test
insl
shlb
imul
stos
scas
inc
fisubrl
dec
add
shll
adc
inc
clc
sbb
pop
push
add
mov
test
jp
lock
movsl
rcll
adc
fistpll
jb
inc
movsl
lds
es
sahf
pop
pop
fisttps
pop
mov
mov
cmpsb
jb
adc
lcall
pusha
mov
push
cmpsb
jb
fldt
pop
xchg
mov
pop
sub
daa
enter
dec
cmp
jns
std
pop
add
aaa
dec
pop
gs
push
movsb
dec
adc
stc
das
aaa
je
lea
xchg
sahf
ss
popa
sbb
mov
dec
movsb
je
and
scas
out
and
add
mov
mov
fxch
outsl
orl
mov
mov
rcl
or
lods
popa
fnsave
outsb
cmp
in
js
shrb
sbb
inc
xchg
push
jb
and
popa
push
sarb
icebp
call
or
dec
cmc
push
lock
xchg
dec
jb
inc
mov
mov
imul
jb
xchg
mov
ret
shrl
insb
cli
mov
loop
or
repnz
pop
out
and
ja
push
dec
in
mov
stos
cltd
and
jmp
dec
mov
aaa
dec
ficompl
adc
pop
shr
icebp
test
js
cli
jns
push
add
xchg
int3
pop
rclb
repnz
fldl
into
mov
mov
in
test
adc
jno
mov
lods
jb
push
push
ficomps
adc
sub
pusha
jo
inc
int
pop
in
stc
inc
cltd
jno
sub
dec
cmp
jns
outsl
loop
mov
dec
add
in
mov
xor
push
mov
inc
push
clc
and
cmp
addr16
sub
roll
test
xchg
scas
push
hlt
aas
pop
movsb
cld
lds
jbe
mov
push
icebp
or
lea
sbb
push
in
cmp
jbe
pop
stc
adc
or
repz
jae,pt
cmpsb
popa
sbb
leave
enter
ret
cmpsl
jmp
vmovdqa
filds
movsl
jg
and
inc
jbe
xchg
push
push
lret
jbe
imul
jge
pop
insb
xchg
jp
lea
dec
jmp
xchg
test
pusha
inc
in
sbb
in
inc
shlb
popa
jae
mov
jne
jno
ja
cld
cmpsl
pop
gs
lret
pushw
xlat
insl
lea
hlt
mov
jae
std
xchg
inc
aam
clc
jne
aad
adc
mov
or
shl
fwait
dec
cmp
lods
cmp
xchg
cmp
jne
movsl
adc
mov
sub
push
outsl
mov
jge
and
ss
dec
xchg
scas
js
insb
add
cltd
xchg
sub
orb
cmp
mov
fisubrl
xor
ljmp
cmp
fldt
aaa
cs
mov
sbb
test
popa
jge
cwtl
and
push
inc
stos
ja
dec
mov
push
scas
push
jg
shrl
mov
adc
lods
ret
imull
pusha
negl
xchg
lock
mov
das
mov
push
cmp
sti
xchg
or
int3
push
int3
and
jae
loop
xchg
lods
jg
fcomip
inc
aad
pop
int
add
pop
cmc
fsubs
cmp
xchg
ja
jbe
push
cwtl
sbb
stos
sub
inc
fisubs
or
scas
xchg
gs
push
rorb
mov
lock
das
and
cltd
mov
mov
dec
int3
inc
arpl
mov
mov
insb
cmpsb
std
sbb
notb
xor
stos
in
mov
push
push
xor
mov
mov
mov
call
outsl
cmp
cmc
xor
push
or
push
hlt
stc
sahf
mov
inc
fnstenv
in
js
in
xor
push
jb
decl
sub
in
loop
cmpsl
rorl
add
lock
cmp
inc
add
imul
dec
mov
dec
loopne
cmpsl
vmaxpd
xchg
jg
stos
inc
data16
mov
lods
xchg
jecxz
cmpsl
push
in
push
repnz
lret
jnp
mov
jg
adc
pushf
or
fidivrl
jge
and
fiaddl
aaa
and
mov
jno
icebp
daa
popa
out
xchg
dec
ja
dec
sub
xchg
sub
pop
sub
add
mov
ret
pop
test
inc
xchg
scas
jb
stc
nop
mov
dec
pop
xor
or
xor
mov
fistpll
mov
mov
adc
mov
testb
dec
adc
out
stos
rclb
mov
add
out
xor
sbb
pop
cmp
sub
mov
shll
push
jle
inc
sub
jae
ds
mov
xchg
jb
mov
sbb
adc
mov
add
imul
cmp
fidivl
sub
cmc
aad
mov
int
push
jb
push
testl
cmp
adc
pusha
pop
mov
jp
dec
pop
repnz
jg
mov
popf
xor
mov
jno
sbb
pusha
dec
xchg
testl
push
lock
fmul
lds
dec
out
xor
or
xsha1
cmpsb
dec
add
cmc
xor
les
mov
lcall
pop
pop
jbe
mov
push
insl
sub
fs
push
call
scas
xchg
xchg
into
adc
scas
inc
lds
mov
push
data16
xor
cs
insb
mov
bt
imulb
addr16
xchg
bound
test
push
push
movsbl
shll
scas
fnsave
gs
nop
and
jl
lcall
xor
cwtl
je
shufps
xchg
hlt
lcall
cmp
mov
scas
insb
das
rcrl
mov
ljmp
leave
xchg
mov
je
jecxz
add
outsl
jle
mov
pushl
push
xchg
push
lret
les
sbb
dec
jno
add
mov
arpl
xchg
idiv
int
dec
sti
dec
test
fdivp
aaa
sbb
icebp
cmp
scas
pop
test
dec
pop
out
iret
data16
adc
loop
push
insb
jle
pop
test
gs
pop
xchg
jbe
xlat
and
out
inc
pop
jl
movd
add
xor
jo
bound
dec
inc
jns
stos
xchg
sbb
mov
pop
mov
mov
pop
loope
lret
push
sbb
mov
add
fucomp
je
mov
aaa
in
push
fildl
mov
int3
jno
add
push
jge
pop
insl
adc
jno
fstp
jno
int3
xorl
jp
adc
js
mov
das
repnz
sub
and
stos
lock
adc
cmp
dec
push
pop
out
cwtl
pcmpeqd
jl
jbe
and
pop
adc
leave
inc
in
cli
xchg
scas
ss
mov
cmp
decl
call
inc
add
cmpsb
mov
sahf
jmp
jg
aaa
sbbb
cltd
push
xchg
mov
ret
pop
cli
cmc
or
ljmp
imul
mov
nop
fsubl
cmc
mov
stc
adc
push
mov
dec
iret
mov
xchg
cwtl
imul
cmp
in
cld
push
push
pop
mov
sbb
dec
movsb
imul
shl
imul
adc
sub
incb
mulb
ret
jle
aas
cmp
jp
lret
pushf
iret
pop
iret
enter
mov
jb
push
pop
out
push
sbb
popf
push
jns
cmp
std
push
clc
push
aad
jp
lea
xchg
sub
push
fmull
adc
dec
pushf
ret
cmpb
sbb
imul
dec
mov
mov
sub
je
leave
cltd
jge
xor
aaa
and
xchg
inc
into
jbe
push
pop
mov
in
mov
insb
inc
imul
mov
jno
xor
in
cld
outsl
lret
jnp
inc
ret
sub
in
lea
aam
gs
inc
cli
sarb
mov
cmpb
les
test
into
sti
movsl
shll
rorb
imul
xlat
out
inc
inc
pusha
sbb
fs
pop
and
les
cmp
adc
jl
ja
mov
stos
xor
popa
or
cli
fs
jl
and
inc
mov
cld
loop
push
adc
lds
or
fidivrl
cmp
inc
push
pop
inc
fiaddl
pop
xor
leave
test
mov
xchg
rcr
sub
scas
xchg
test
sub
out
ficomps
cli
fidivs
int
mov
inc
mov
mov
mov
lahf
sub
mov
je
cmp
mov
or
popa
pushf
mov
into
inc
popf
fsubs
jecxz
imul
jecxz
les
aam
jns
push
xor
dec
cmpsb
cmp
or
hlt
mov
nop
pop
aas
repnz
jnp
hlt
jp
push
or
adc
xlat
testl
repz
jo
xchg
test
push
lods
mov
jecxz
jecxz
add
lahf
stos
clc
cwtl
fdivp
icebp
std
jbe
add
adc
dec
mulb
jecxz
xor
add
xor
arpl
lods
in
lret
sub
dec
adc
sub
dec
xchg
sbb
sahf
mov
loop
iret
fdivs
cmp
xchg
sub
cs
loope
adc
inc
jle
xchg
enter
addr16
outsb
adc
or
mov
fildl
jmp
cmpl
jnp
push
xor
xor
pop
mov
mov
fidivs
jmp
mov
dec
and
xchg
dec
imul
daa
pop
gs
mov
pop
shl
jb
insl
sbb
xchg
cmp
clc
and
in
icebp
ds
mov
jbe
sahf
cmc
int3
dec
idiv
loop
insb
sub
push
xor
and
in
popa
fwait
xor
xchg
fs
and
and
push
call
sub
ds
in
xchg
fbstp
push
pop
test
out
mov
dec
sub
sub
dec
nop
fucomip
xor
in
adc
sbb
fs
xchg
and
add
mov
and
adc
in
mov
hlt
xchg
cmp
imul
adcb
not
mov
movsb
pop
pop
pop
jne
cmpsb
cmpsb
jp
js
icebp
repz
mov
mov
adc
mov
mov
sub
cli
xchg
daa
movsl
jne
pop
iret
sbb
jp
cwtl
xor
jg
push
pop
mov
lea
sbbb
pop
loopne
inc
nop
adc
sub
mov
adc
mov
push
femms
cmpsb
mov
fisubrs
imul
in
cld
or
loope
pop
aaa
xlat
je
push
ljmp
pop
and
shll
mov
mov
sub
add
shlb
xchg
pop
pop
out
out
dec
test
sbb
jo
sbb
inc
push
out
popa
cmp
sbb
out
aam
rcll
mov
push
adc
xlat
cmc
mov
and
mov
or
jp
and
mov
adc
int3
xchg
sti
jno
lds
jg
cmc
add
movsb
iret
and
jne
out
pop
mov
add
inc
rcll
jne
stos
sub
out
test
inc
lds
fldl
jge
aad
cli
shll
dec
insb
pop
repz
cmp
push
aad
lods
push
rcr
loop
repnz
add
inc
xchg
popa
test
or
xorl
and
lods
or
and
test
push
mov
andb
and
call
aas
testl
int
mov
shlb
and
inc
test
adc
jg
mov
mov
inc
mov
rcl
push
insl
jecxz
xchg
sbb
adc
es
adc
data16
mov
rolb
sbb
adc
imul
push
cmp
cs
mov
adc
jbe
add
xor
int3
addr16
xor
xchg
call
xchg
jb
stos
popf
or
js
outsl
stos
and
mov
inc
pop
lcall
add
xchg
insl
mov
pmaddwd
inc
test
mov
or
xchg
ds
jb
fcmovnbe
insb
or
stos
ljmp
stos
push
pop
shlb
movsb
int
dec
std
push
inc
fadds
fsubl
nop
pop
sahf
in
xor
ds
daa
push
sub
add
add
mov
and
lret
repnz
gs
in
push
aam
push
andl
mov
and
call
sub
fsubrl
and
js
les
inc
dec
loop
iret
sti
or
mov
xchg
scas
push
xchg
fucomip
mov
dec
push
fmull
adc
lret
inc
mov
mov
cmpsb
inc
daa
lods
adc
cmp
imul
ljmp
mov
mov
push
shrl
and
sub
ffree
push
nop
inc
scas
mov
cmp
fnstsw
int3
fdecstp
xchg
in
push
or
jae
jns
fadds
or
sbb
and
push
jl
cltd
andb
out
bound
stos
adcb
pop
imul
add
dec
and
and
out
scas
test
dec
rorb
jle
shl
test
pop
pop
adc
or
cmpsb
jmp
mov
jle
stos
inc
std
adcl
cwtl
enter
sahf
jne
stos
and
ret
cmp
gs
lcall
icebp
pop
push
mov
mov
push
popl
jle
push
je
push
push
das
in
or
cmp
xchg
sub
test
xor
dec
movsl
xlat
es
inc
sbb
xor
sub
push
stos
loopne
dec
shl
ss
fucomip
push
jle
or
gs
pop
jmp
cmp
sub
inc
in
pop
pushf
in
orl
jl
xchg
jmp
mov
push
dec
jbe
rcll
push
add
lret
pop
daa
clc
add
lahf
outsl
aad
subb
gs
pop
and
mov
pop
or
or
inc
xchg
mov
icebp
push
jb
ret
int
sub
push
orb
mov
popa
shll
or
test
andl
pop
or
scas
stos
pop
mov
mov
int
mov
arpl
sub
outsl
repnz
lds
pushf
pop
into
adc
in
add
cmp
and
lahf
push
pop
mov
ficompl
fstl
movsb
int3
nop
and
pop
into
shrl
jne
inc
pusha
jno
xchg
pop
js
stos
jbe
push
pop
hlt
and
jnp
int
addl
cltd
mov
add
test
pushf
jb
frstor
pop
enter
cmp
add
dec
mov
jne
pop
mov
pop
dec
sbb
xor
mov
lahf
es
cli
movsb
jg
imull
and
cmpsl
jae
inc
test
cmp
jb
inc
mov
mov
mov
andl
pop
mov
rorb
inc
mov
fs
xchg
mov
into
sbb
movl
rorl
in
push
or
jb
mov
aad
nop
mov
cmp
sub
mov
into
jge
push
and
adc
adc
mov
pop
mov
sbb
sub
xor
push
inc
sarl
sti
movsb
shll
rcrl
into
out
mov
in
fs
lahf
mov
loope
adc
insl
jo
pop
fwait
lret
push
dec
sub
push
pop
rcr
adc
mov
cmc
leave
icebp
push
xor
pop
leave
filds
dec
push
sti
in
push
jno
mov
adc
in
mov
sub
mov
stos
jmp
push
in
in
jo
mulb
fcomi
adc
cmpb
xchg
adc
call
cmp
cmp
pop
add
mov
xchg
mov
push
and
dec
and
lods
push
rolb
cmpb
pop
repnz
ja
dec
insl
pop
jmp
pop
mov
fucom
aas
mov
pop
adcb
hlt
adc
add
dec
mov
scas
lret
add
in
ss
mov
push
dec
rcrl
sub
orl
mov
sub
orl
fdivs
or
sbb
pop
mov
imulb
sub
or
pusha
mov
or
test
dec
das
test
cld
rcrl
pop
cmp
sub
dec
pop
decb
cli
inc
xchg
lcall
in
adc
loopne
ds
test
sbb
lods
lahf
xor
nop
mov
bound
inc
pop
or
add
sub
shl
jg
pop
mov
jns
enter
mov
lock
pop
fs
push
lods
push
loop
mov
aas
cmpsb
iret
fistl
clc
push
push
lods
leave
xor
xor
imul
rclb
add
pop
adc
add
mov
mov
pop
dec
jb
push
fs
mov
push
adc
ja
addr16
sbb
test
mov
cli
stc
sahf
push
fists
lock
sub
fstpl
idivb
jp
ds
push
pushf
mov
pushf
clc
inc
fnstenv
mov
xor
push
inc
sub
pushf
int3
and
mov
mov
mov
out
inc
out
adc
mov
push
push
hlt
or
test
fwait
xor
lea
insb
test
jmp
cmpsl
jae
lcall
mov
xor
dec
push
clc
jge
or
xchg
cmp
bound
jne
mov
test
jne
lret
sub
lds
outsb
sbb
or
xor
ss
xorl
push
aam
aad
js
mov
mov
jmp
leave
cmp
jb
dec
dec
enter
icebp
mov
mov
pop
ret
xchg
inc
and
push
cmp
and
cwtl
out
mov
fcmovnbe
sbb
roll
xchg
and
push
fwait
lods
ficompl
mov
mov
aaa
aaa
mov
push
bnd
push
push
out
cmp
aas
in
andb
push
imul
jbe
lea
mov
fcmove
test
sbb
xchg
and
addr16
add
shrl
cs
test
test
sub
or
xchg
loope
and
mov
lods
jle
cld
cmp
xor
add
outsl
xor
bound
sub
ret
clc
fmulp
jae
sbb
stos
mov
les
mov
and
out
xor
sbb
jae
pusha
mov
mov
inc
or
cmpsl
add
orl
fisubl
pop
mov
cmp
call
inc
ja
addl
mov
jns
lock
ror
push
jb
rcl
inc
mov
rcl
outsb
sbb
ret
js
sarb
andl
adc
sbb
inc
cmc
icebp
idiv
daa
rol
sub
mov
adc
mov
movsb
sub
call
or
or
stos
in
dec
add
mov
mov
jnp
mov
filds
push
add
xchg
cmpsb
fisttpll
fcoml
adc
aam
mov
movsb
fwait
add
sbb
clc
mov
or
cltd
cmp
adc
insl
loopne
sub
sub
packsswb
cmp
jb
or
out
push
aad
das
mov
dec
pop
cmp
stos
xchg
call
push
hlt
lret
pop
xchg
mov
jecxz
and
cmp
and
out
pop
sbb
and
cmp
cmp
andl
sub
cmpsl
mov
test
mov
dec
lret
call
insb
jecxz
mov
jl
pop
ljmp
fildl
out
xor
lret
or
in
repnz
and
jae
add
xchg
push
loope
insb
icebp
mov
mov
lods
mov
ja
sbb
or
cmp
push
or
fdivl
cmp
xchg
mov
out
dec
push
adc
mov
pop
push
xchg
insl
sbb
and
jo
inc
mov
xchg
mulb
jno
dec
in
xor
out
int
jmp
out
fxch
lret
inc
add
xchg
or
into
popa
jge
push
scas
xchg
out
adcb
in
pop
push
ret
outsl
push
jp
mov
adc
jo
stos
mov
and
pop
jne
mov
gs
push
pop
mov
popf
ffreep
jnp
repz
inc
fldcw
push
mov
ja
add
xchg
out
les
pop
fildll
xlat
adc
test
xor
xchg
jecxz
clc
adc
popa
sti
or
pushf
cmp
push
mov
ss
aam
rcrl
lds
aad
sbb
clc
push
inc
and
jnp
pusha
cli
imul
or
add
insl
inc
mov
push
inc
ficoml
aad
mov
repz
push
mov
stos
jbe
in
bswap
clc
inc
insl
jp
cltd
push
adcb
mov
enter
shrl
adcl
pop
les
push
mov
popa
xor
aas
mov
dec
in
sbbb
xor
mov
mov
scas
pop
push
sbb
cmpsl
mov
lret
fidivrs
clc
sub
sbb
pop
jmp
daa
inc
shlb
sub
outsl
aam
adc
dec
push
lods
cmpl
and
xor
add
or
mov
pusha
xchg
rcll
xchg
lret
jne
loop
push
repnz
xchg
imul
jg
icebp
cwtl
rcrb
push
inc
xlat
jg
test
sub
mov
clc
ja
sbb
sub
dec
dec
push
cltd
jnp
enter
jp
dec
jl
mov
cmpsb
xchg
outsb
xchg
add
outsb
xor
sbb
fdiv
jnp
orl
cmp
lcall
jmp
jo
jecxz
mov
shll
add
sub
pop
add
cmp
clc
enter
das
dec
daa
pusha
not
test
mov
das
aaa
pop
add
pop
popf
arpl
and
outsl
adc
inc
cs
mov
fincstp
daa
cmp
lock
mov
xorl
cmp
pushf
cli
xor
aam
lea
iret
loope
movsl
mov
cmp
inc
pop
mov
jno
push
mov
fistpll
inc
adcb
fistpll
cmp
ss
push
iret
outsl
pop
sbb
lds
dec
jecxz
ljmp
insl
jg
aad
out
test
mov
cltd
cmp
mov
pop
popf
pop
dec
cmp
aas
in
idivb
in
mov
data16
stos
ret
push
addr16
test
mov
lret
imul
int3
mov
test
xor
pop
xchg
push
aad
cmp
push
dec
jl
mov
das
jmp
pop
xchg
sbbb
add
mov
mov
pusha
jno
das
lods
inc
popf
jge
into
inc
mov
mov
cmpb
imul
pushf
fnstenv
mov
jge
inc
movsb
lret
and
push
cmp
pop
xorl
push
pushf
or
jecxz
into
jge
sti
clc
push
xchg
inc
pop
dec
fcmove
jecxz
icebp
cmp
dec
lods
xor
dec
add
icebp
mov
add
pusha
test
int3
xchg
insb
jae
or
or
daa
inc
xor
fstps
or
clc
sbb
mov
cmp
imul
in
jno
ss
stos
inc
nop
bound
bound
xor
xchg
pop
cmp
fmuls
cli
jg
repnz
mov
xchg
add
aam
jns
mov
out
inc
or
imul
sub
pop
lcall
int
out
mov
and
fildll
lret
les
icebp
sbbb
push
sti
mov
add
arpl
mov
lock
out
mov
pop
fwait
mov
push
push
mov
sub
lret
and
jle
fwait
shrb
sbb
add
adc
rcr
in
call
ja
jle
xor
sbb
movsl
stc
daa
sub
or
adc
pop
xor
or
mov
cmpsl
cmpsl
out
mov
sub
imul
jmp
in
sbb
cld
push
adc
insl
and
pop
push
dec
mov
ret
cltd
sbb
in
ja
pusha
and
mov
or
movsl
jecxz
xlat
jb
jl
jecxz
into
cltd
mov
leave
jne
inc
loopne
cmc
in
leave
pop
ds
add
adc
jecxz
in
xchg
inc
xor
jne
popa
outsl
lret
or
jge
mov
lret
mov
movsb
mov
push
in
out
test
iret
mov
add
scas
lret
pushf
fsubrs
test
popa
mov
das
xchg
stos
jns
xchg
rol
cmp
push
sub
pop
pop
pusha
addb
sbb
add
subl
xor
mov
insb
or
loop
aas
mov
hlt
inc
and
xchg
les
aaa
into
loop
mov
in
sbb
shrl
add
in
rclb
shrl
fidivs
xlat
push
jbe
add
loope
frstor
bound
out
adc
pusha
frstor
dec
je
xlat
js
fidivs
clc
testb
sbb
and
adc
xor
pop
mov
sub
mov
mov
cmpsl
mov
loop
adc
adc
jl
push
test
call
mov
hlt
imulb
cmp
inc
and
shll
dec
xchg
adc
push
push
out
je
imul
xlat
lods
inc
push
pop
clc
cmpsl
andb
sub
mov
jg
sbb
iret
jne
shrb
and
mov
test
and
push
xor
xor
fsts
movsl
inc
xchg
out
aam
sti
dec
in
ret
sub
adc
daa
outsl
lcall
movsb
push
mull
adc
mov
or
aad
aam
lods
xlat
xchg
jbe
cld
cmpsl
mov
sbb
lods
pop
out
inc
lahf
js
testb
stos
in
movd
push
push
jbe
pop
push
sbb
xchg
xor
dec
nop
xchg
cmpsl
shrb
sub
fisttps
xchg
jo
popf
mov
xchg
push
mov
and
rcrl
mov
out
subl
mov
xchg
movsl
and
outsb
and
sti
sbb
mov
mov
insl
or
dec
dec
fistps
sub
sahf
xor
xchg
mov
adc
add
mov
out
push
and
xlat
cwtl
rorb
sti
int
icebp
inc
ja
xor
ja
jl
loop
dec
es
movl
cmp
pushf
aad
and
out
insb
inc
push
or
adc
dec
push
call
out
jge
adc
pop
out
fiaddl
je
adc
jl
pushf
push
and
xchg
outsb
inc
test
jns
jmp
push
loope
pop
mov
into
push
lret
pop
xor
popf
lds
rorl
mov
mov
push
xchg
fsts
movsb
cmp
xchg
sar
icebp
mov
in
jmp
scas
inc
inc
dec
icebp
cmp
aaa
into
mov
pop
lret
xlat
xchg
sub
lods
cmp
add
xchg
cs
pop
dec
jno
push
jge
xor
cmpb
add
xor
clc
aam
push
cmp
mov
and
fldenv
pop
je
hlt
push
lds
mov
shrl
mov
adc
push
out
mov
jecxz
or
push
adcl
aad
mov
cld
and
add
fbstp
lret
mov
mov
mov
rclb
cmp
mov
imul
xor
push
stos
lcall
outsb
inc
mov
insl
sub
adc
pop
xor
pop
cmp
cltd
xor
gs
leave
aaa
into
aaa
fstl
push
cmp
mov
push
jns
mov
or
sbb
mov
nop
mov
shrb
cmp
mov
lahf
dec
push
aam
shll
arpl
int
call
cmp
and
push
mov
aaa
mov
xor
jno
out
jne
movsl
mov
ljmp
mov
test
fdivl
mov
fsubp
nop
stos
push
xchg
rolb
in
popa
fnstenv
arpl
pop
mov
pop
cmp
jg
pop
or
mov
adc
xchg
xchg
mov
cmpl
ret
mov
pop
mov
pop
sbb
mov
dec
inc
mov
xchg
cmp
dec
idivl
pop
ds
loopne
sub
sbb
notb
call
or
adc
mov
in
jne
stos
cmpsb
or
mov
mov
cmpsl
mov
sbb
mov
mov
adc
jne
pop
ja
lea
insb
or
jbe
sub
mov
mov
adc
rcr
ljmp
pop
lock
push
or
mov
jns
inc
test
das
test
pushf
jl
lds
arpl
push
mov
cmpb
outsb
xchg
sbb
dec
sbb
popf
rorb
push
test
icebp
movsl
xorl
add
dec
loope
and
loope
dec
push
sbb
jl
or
insl
decl
lahf
pop
ds
mov
sbb
jnp
mov
jecxz
test
int3
pop
xor
xor
js
push
stos
push
shrl
stos
icebp
jns
inc
stos
mov
into
jno
xor
mov
pushf
sub
pop
iret
mov
pop
dec
xchg
adc
inc
adc
mov
popa
mov
into
pop
dec
jge
push
mov
ret
sbb
push
mov
cwtl
cwtl
insb
cmp
mov
push
int3
add
out
xor
outsb
sbbb
js
push
fdivrp
test
loope
pushf
or
iret
data16
ret
jg
in
test
aad
jo
repz
jae
repz
repz
jp
xchg
shlb
frstor
sub
dec
add
dec
lea
popl
movsb
ret
push
jmp
les
pop
lcall
jbe
fstpl
push
push
cwtl
inc
cltd
mov
ret
movsb
or
mov
js
lcall
stc
lea
push
and
xchg
push
sbb
loope
out
std
jl
sbb
push
arpl
dec
xchg
nop
out
push
mov
iret
dec
or
loope
jle
and
push
mov
in
fcompl
data16
stos
push
xchg
scas
mov
push
in
lret
hlt
cli
inc
jae
clc
sbb
or
dec
push
lcall
sahf
dec
stos
out
dec
mov
adc
arpl
dec
adc
cmp
sub
mov
push
daa
xchg
xchg
mov
adc
ss
inc
mov
jmp
mov
cltd
mov
or
add
or
testb
in
adc
sbb
or
cmp
mulb
jo
arpl
fsts
rorb
inc
call
or
pop
scas
mov
popa
pop
ds
fwait
outsl
jle
addb
pop
lock
cwtl
xor
push
aad
iret
inc
pop
cs
mov
icebp
out
mov
das
stos
inc
jns
dec
dec
inc
lcall
sbb
dec
addr16
mov
rcll
mov
scas
mov
nopl
push
xor
cwtl
bound
adc
cmp
mov
inc
fdivrp
mov
mov
in
jo
inc
push
lods
test
jnp
xchg
xor
pop
add
sub
dec
cs
mov
outsb
in
adc
inc
mov
mov
popa
loopne,pn
cmp
call
or
mov
in
aam
ljmp
lds
ficompl
mov
popa
clc
pop
xorb
pop
push
and
out
pop
push
pop
add
adc
addr16
xchg
repnz
out
or
outsl
ret
ds
call
xor
mov
jmp
mov
fs
leave
and
data16
clc
subl
xchg
ret
fstl
test
loope
lea
ljmp
outsl
outsl
or
sub
add
adc
pop
xor
inc
test
lahf
xor
aad
mov
cs
pop
imul
mov
sarb
push
mov
ss
rolb
add
lret
or
inc
inc
in
pop
jno
test
sub
lea
in
push
daa
dec
sarl
and
xchg
aam
dec
add
jl
mov
ss
nop
pusha
mov
jmp
mov
pop
stc
fisttpll
fidivs
mov
mov
mov
inc
inc
call
inc
fiadds
rcll
xchg
fnsave
mov
in
sbb
lods
pop
daa
imul
mov
inc
in
mov
sahf
fwait
xchg
iret
inc
sahf
inc
add
insl
mov
xor
cltd
sbb
orl
cmpsl
push
je
lea
pop
pop
inc
loop
add
fmul
fsubr
add
imul
aad
or
icebp
xchg
pop
sub
adc
dec
jecxz
mull
mov
outsl
xchg
in
bound
mov
fistpl
sub
xchg
xor
sbb
inc
ret
sbb
notb
mov
add
shll
rorl
scas
pop
loope
or
pop
xchg
int
insl
pushl
cwtl
daa
jnp,pn
sub
push
scas
clc
or
in
push
mov
pushf
cs
stc
cmp
add
inc
rorb
movsb
out
sub
mov
lret
out
xor
rcrb
and
pop
xchg
iret
aaa
sahf
jne
fldenv
movsb
mov
sub
in
sub
and
imul
push
inc
ret
xor
sbb
cs
dec
fidivl
aad
cmp
popa
inc
dec
push
cmp
inc
fdivl
inc
ljmp
idiv
cmp
push
mov
cltd
dec
je
jbe
jecxz
cmc
cld
scas
jl
fistps
adc
sub
jp
mov
movsb
movb
jo
mov
push
jne
testl
xchg
imul
dec
mov
pop
fwait
ret
pop
cmp
xchg
in
aas
and
push
sbb
adcl
sbb
rcrl
push
push
inc
push
loopne
clc
out
sbb
mov
sub
pop
pop
pop
jne
sarb
cltd
imul
jp
xor
or
mov
pop
into
inc
ljmp
popf
mov
xor
dec
fdivs
lahf
xor
fldl
mov
mov
bound
out
cld
pop
mov
das
push
push
call
pop
or
sbb
cmc
lahf
cmp
ja
mov
mov
int3
adc
or
push
push
mov
xchg
pop
pop
xchg
mov
xchg
es
xor
in
inc
ss
insb
cmc
adc
cmpsb
in
es
pop
int3
arpl
out
outsl
inc
lahf
stos
or
jb
aas
outsb
lret
pop
mov
fwait
gs
jo
mov
ret
mov
lahf
or
pop
adc
inc
inc
stc
dec
mov
push
jecxz
adc
and
mov
enter
jbe
lahf
sbb
stos
test
xchg
jmp
mov
xor
inc
dec
add
mov
sbb
sub
pop
push
inc
and
mov
icebp
sub
roll
add
not
and
push
push
xor
push
dec
repz
cmp
jb
icebp
and
inc
and
iret
xchg
push
mov
mov
inc
xor
or
pushf
neg
mov
cmp
xchg
mov
xlat
shrb
shrl
imul
stc
call
mov
jnp
sub
loop
lds
push
enter
xchg
movsl
push
mov
mov
jp
mov
out
push
pop
lock
scas
inc
xlat
loopne
cli
xchg
xlat
adc
jecxz
jle
adc
shrl
push
movsb
pusha
ss
pop
mov
jns
lret
cmpsl
movsl
cmc
scas
xchg
sbb
jb
inc
cmp
or
mov
in
and
mov
ret
js
insl
into
fsubs
mov
cmp
lret
ljmp
out
rcl
add
sub
in
cmp
out
push
or
stos
xchg
out
cmpsl
sub
and
testl
cli
xchg
ds
inc
pusha
dec
jp
dec
xor
push
xor
lret
bound
out
sbb
pop
clc
sahf
mov
add
movsl
jb
nop
popf
jb
mov
bound
xchg
es
addr16
mov
mov
jg
dec
fsub
mov
fsubs
push
xor
sbb
mov
popa
push
fisubrl
cmpsb
sub
mov
dec
adc
cmpb
push
rcrl
xor
xor
insb
mov
or
loop
out
or
cmpsb
mov
pop
inc
lea
mov
adc
arpl
cmp
js
mov
and
mov
jb
add
jns
andb
inc
xchg
inc
inc
mov
xlat
mov
in
mov
jle
int3
sbb
sub
or
jp
mov
fistl
jbe
lea
es
in
insl
dec
xchg
imul
lods
xchg
sarb
repz
frstor
push
mov
test
jle
jnp
jge
jns
lcall
xchg
sti
mov
rcrl
insl
inc
adc
loop
gs
js
xchg
sub
adc
dec
sub
add
dec
cmp
fbld
subl
jns
std
jecxz
loopne
push
leave
fsts
pop
mov
pop
sbb
loopne
xchg
pop
pop
imul
popf
inc
cmp
inc
adc
add
pop
dec
insl
out
jecxz
inc
mov
cmp
sti
cltd
test
or
nop
daa
add
imulb
pop
ror
xchg
ret
lcall
pop
shlb
jbe
and
jo
mov
add
ss
das
cwtl
mov
in
jl
mov
cmp
xor
jmp
out
inc
fldl
cltd
rolb
jle
into
mov
push
mov
icebp
jecxz
gs
inc
add
lods
fdivl
fs
dec
pop
scas
mov
clc
or
ss
xchg
pop
decb
test
in
push
sub
test
nop
sub
mov
addb
jmp
cmc
jns
mov
movsb
mov
jge
push
lods
xchg
out
add
push
scas
mov
add
inc
cld
bound
fbstp
test
negl
out
orl
or
pop
sbb
ss
jne
pop
aaa
jmp
sub
pop
call
add
insb
mov
ds
cld
mov
sbb
repnz
mov
xor
pusha
bound
clc
lahf
out
ds
adc
xor
add
shr
test
loope
and
cltd
xor
add
sub
xor
inc
fimuls
xor
scas
or
gs
outsb
jo
push
outsl
js
sub
add
mov
insl
dec
jb
sbb
mov
loopne
xchg
push
sub
add
lods
inc
jge
adc
sub
xchg
jp
cmp
adc
subb
sbb
movsb
mov
fldcw
mov
sbb
inc
js
stos
pusha
mov
inc
mov
sub
inc
cmp
outsb
stc
nop
mov
scas
add
xchg
out
xchg
sbb
fdivl
sub
dec
mov
shlb
pushf
pop
mov
fsubl
fcomps
sahf
inc
hlt
jne
adc
std
xchg
mov
shr
push
sub
sbb
dec
enter
xor
mov
or
ds
aas
jo
xchg
sbb
xchg
cmp
loopne
sbb
adcl
pushw
xor
and
cmpb
or
push
sahf
aas
imul
decl
out
stc
push
bound
fsubrs
loope
xchg
dec
in
mov
sbbl
les
xchg
sahf
fs
sbb
pop
loope
mov
fldcw
mull
test
mov
or
inc
iret
shrl
inc
jno
mov
out
adc
loop
out
and
jl
in
sub
and
addr16
jnp
mov
addb
subl
loope
sbb
cli
mov
pop
sub
fsubrp
repz
push
out
aam
data16
jmp
std
and
pushf
cmpsl
fsubs
int
pop
sahf
cmp
push
mov
dec
sub
pop
punpcklwd
bound
inc
dec
hlt
sbbl
mov
shrl
pop
sub
jae
xchg
cs
xchg
cmpsl
cmp
testl
xchg
mov
cmp
lods
mov
mov
ret
sbb
cmp
shll
pop
mov
in
mov
pop
mov
out
popa
lods
mov
filds
push
sbb
jo
inc
arpl
in
dec
test
popf
gs
frstor
cmc
jne
outsb
cmpl
push
add
and
std
ljmp
in
addr16
idiv
lahf
movsb
push
rclb
fidivs
adc
jne
dec
lea
lret
and
insb
or
mov
jg
inc
dec
push
push
clc
xor
stos
arpl
sahf
clc
iret
shlb
inc
mov
adc
cmp
fnstenv
xlat
lds
imul
fbstp
lock
mov
cld
or
test
gs
jns
cmpsb
clc
stos
adc
or
lahf
nop
cmc
inc
xchg
mov
add
ret
bound
call
dec
mov
or
cmp
lds
dec
fmulp
pop
push
mov
mov
pop
fidivrs
in
add
hlt
lock
lret
lret
ret
fisubs
sbbb
in
popa
subl
inc
xchg
cmc
pop
dec
jl
popa
scas
jo
movsb
test
sub
inc
sub
sbb
daa
mov
lcall
fwait
pop
xchg
push
mov
xor
push
sti
leave
ds
jo
dec
mov
push
jo
decb
sbb
pop
jbe
pushf
inc
dec
cmp
ss
repz
adc
xorb
movsb
mov
xlat
jno
je
add
pop
jns
lcall
popa
leave
in
xorl
mov
cld
adc
add
jo
insl
jns
mov
pop
sbb
sahf
mov
out
test
cmp
pop
scas
jb
fldcw
add
lret
notl
dec
call
insl
loopne
xorb
mov
and
ja
cmpsl
inc
push
test
fmull
roll
addr16
out
js
scas
and
stos
push
lock
ret
mov
into
sub
jg
fsts
xlat
mov
sub
jl
xchg
sub
or
push
mov
push
sub
pop
neg
das
or
sub
and
mov
add
lods
into
adc
jl
add
aad
adc
or
dec
push
stos
xchg
xchg
enter
mov
add
cmpsb
pusha
sub
adc
into
fisubl
push
inc
xchg
lods
fisubrs
push
addr16
cwtl
cmp
stc
out
xor
cmp
das
sub
adc
stos
js
sbb
adc
cmp
in
xchg
mov
out
stos
aas
and
push
or
jg
mull
inc
ficompl
pop
es
in
loop
mov
jg
sbb
dec
xchg
popf
hlt
mov
sarb
daa
bound
jae
aad
push
inc
stc
aaa
fimull
jmp
pop
jg
fstps
add
sahf
sub
in
or
rcrb
jne
inc
jg
pop
out
aaa
pusha
xchg
mov
mov
sbb
inc
xchg
jae
aad
push
test
push
lods
std
add
divl
rolb
popa
xor
cmp
scas
hlt
push
fildl
or
test
mov
cmc
dec
insl
pop
jb
out
sbb
stos
mov
mov
add
and
dec
out
jae
or
xchg
lods
lahf
in
mov
mov
test
push
sub
ret
lock
stc
aaa
mov
jg
rcll
pop
lods
xor
xchg
bound
pop
sub
addb
mov
dec
and
and
pop
call
adc
ss
addr16
sub
adc
loope
sbb
add
add
in
jnp
inc
mov
cltd
test
adc
out
mov
mov
mov
hlt
inc
mov
jl
mov
add
jmp
shll
or
push
outsb
daa
movsl
xor
add
test
push
mov
cltd
out
sbb
xchg
pushf
cmp
or
ret
pop
jp
mov
fwait
loopne
dec
imul
loop
or
scas
lahf
outsb
imul
cmp
pusha
pop
jecxz
jge
cmpsl
outsl
cli
mov
and
inc
insl
add
fnstcw
push
sub
sub
lds
ljmp
cmp
movsb
cmp
stos
mov
add
pop
jne
rclb
mov
sti
xchg
fwait
xor
imul
pop
mov
mov
icebp
call
cmp
inc
sti
ljmp
clc
rorb
pusha
xor
insb
inc
xor
outsb
add
xchg
pop
movd
cmc
sub
es
imulb
mov
lea
mov
push
call
int
loope
xorb
pop
xchg
xchg
clc
jnp
ljmp
out
xchg
xor
cltd
and
add
mov
push
mov
aad
aaa
mov
jno
fbstp
inc
enter
ja
mov
push
cltd
sub
shrl
test
inc
inc
fidivl
fidivrs
pop
fcoms
xchg
fidivs
jmp
mov
mov
jl
cmp
sub
imul
mov
fidivrl
mov
pop
fsubrs
test
hlt
cmp
xor
lock
push
enter
std
jno
lret
rcrl
js
inc
stos
loopne
add
dec
enter
enter
movsb
add
and
or
cmp
jnp
aam
in
stos
dec
jno
jle
aad
stos
popl
js
scas
leave
push
cmp
jle
xor
andb
xchg
push
add
pushl
xchg
and
clc
int
sub
dec
and
lcall
lods
shlb
testl
stos
dec
cmp
in
sub
int
arpl
cmp
push
ret
xchg
xchg
decl
aaa
add
sbbb
xchg
pop
or
out
sub
fisubl
fbstp
bound
inc
stc
movsb
adc
lea
mov
xchg
adc
sahf
repz
dec
dec
or
sbb
movsb
ret
in
out
jl
and
test
testl
xor
stos
loop
xchg
mov
add
stc
jge
jns
jo
sbb
push
test
sbbb
push
int
pop
cmp
out
fidivl
bound
jb
ror
outsb
scas
mov
lods
lds
xchg
popa
shlb
rcrl
add
inc
lahf
pop
xor
dec
dec
pop
push
out
fwait
out
movsb
cmp
aam
mov
aas
dec
das
cli
jp
fcompl
ds
pop
lcall
push
add
sub
imul
jnp
lea
pop
jmp
push
pop
jo
push
jbe
ds
sub
idivb
imul
adc
inc
clc
and
cmpsb
scas
add
shl
daa
mov
xchg
test
movsl
fisttps
pop
neg
xor
mov
and
dec
loopne
mov
repz
mov
test
nop
insb
dec
loope
mov
cmp
leave
stos
in
xor
push
jo
out
xchg
xchg
clc
imulb
outsl
stc
dec
adc
add
adc
out
xor
sbb
sbb
xor
scas
push
xlat
inc
push
mov
movsb
lods
pusha
test
rcl
mov
lds
xchg
lods
add
test
fidivrl
scas
aam
loopne
push
das
pop
ljmp
fdivs
push
or
sbb
je
stc
or
sub
popa
out
idivl
push
add
jnp
jl
dec
lods
fsubl
xchg
and
enter
jmp
je
dec
and
push
fsubrl
mov
sarb
out
mov
pop
mov
pop
cmp
push
cmp
loopne
dec
cmp
mov
dec
mov
pop
test
and
pop
dec
gs
lock
sbb
dec
inc
daa
mov
xor
sahf
in
add
and
nop
arpl
loop
add
ret
sub
cs
jmp
push
adc
fucomi
xor
xor
xchg
enter
scas
cli
lea
xchg
ds
cld
pop
neg
ja
inc
movsb
cltd
je,pt
in
fsts
movsl
js
js
xor
add
daa
add
mov
lahf
clc
out
dec
jecxz
or
aam
arpl
pop
lcall
repz
add
cmp
aas
rorb
andb
cmp
sub
lds
daa
pusha
outsl
xchg
stc
cmp
es
xchg
pop
xchg
or
sbb
xor
arpl
sub
mov
imul
fnstenv
mov
in
cmp
push
sbb
mov
imul
xchg
mov
fisubl
aas
loop
or
and
xor
adc
adc
js
stos
inc
cmpsl
inc
sbb
addb
mov
mov
sbb
sbb
inc
sub
rcl
mov
sub
fsincos
ss
sbb
clc
dec
in
aas
mov
pop
ds
xor
pop
scas
xor
push
je
push
ss
mov
test
lods
shll
add
add
ret
jg
dec
into
rorl
push
jns
mov
jecxz
cmp
mov
cmp
mov
xchg
jno
xchg
dec
cmpsl
sbb
scas
jbe
in
adc
xor
xor
test
iret
fldt
lods
out
cld
shll
jmp
aam
xchg
jne
ret
ss
je
popa
icebp
mov
or
sub
stos
arpl
jg
sarb
loope
jmp
sbb
std
inc
cmp
xor
mov
dec
loopne
dec
push
popl
inc
cltd
scas
jne
mov
les
jle
push
loope
arpl
xchg
jecxz
lea
pop
adcl
or
sti
inc
call
notl
fistl
jmp
and
jmp
jae
pop
mov
cmpsb
mov
jg
push
inc
sbb
cmc
lret
adcl
xor
test
inc
push
mov
mov
and
arpl
repz
in
cmp
lret
mov
mov
sbb
mov
mov
jl
add
sbb
adc
xchg
pop
pop
stos
mov
mov
ss
and
das
fstpt
jmp
inc
out
inc
inc
mov
mov
in
and
push
push
fsubl
fidivrs
stos
lea
bound
scas
and
xchg
ror
fsubl
xlat
dec
arpl
je
sbb
fsts
pusha
repz
outsb
xlat
jge
jecxz
adc
in
xchg
frstor
imul
push
jl
fildll
adc
lcall
lcall
imul
and
cltd
sub
push
push
cld
adcl
mov
jmp
and
adc
cmpl
inc
pusha
add
pop
insl
adc
xor
icebp
dec
ss
pop
aad
cmp
xchg
dec
sbb
adc
pop
mov
push
pop
iret
ss
jae
sub
and
adc
sub
sbb
or
or
add
lret
pop
aas
in
dec
cmp
ljmp
mov
xchg
lahf
mov
or
jmp
jmp
repnz
nop
cwtl
test
sbb
insl
lahf
sbb
jl
push
mov
addr16
insl
jg
out
dec
mov
shlb
push
rclb
sub
repnz
int3
notl
dec
dec
pop
sti
jbe
aam
ret
jmp
cmc
sub
sarb
lods
leave
outsl
sahf
int3
int
insb
in
es
shrl
pop
lock
mov
insb
rorl
std
lods
stos
pop
mov
aad
mov
gs
stc
popf
in
or
push
scas
psubsb
jge
nop
ret
mov
push
adc
dec
pop
sub
adc
mulb
xor
or
sbb
movsl
in
cmpsb
cmp
xorb
mov
popa
call
cmp
pop
ret
rolb
mov
fildll
sub
push
sbb
lcall
sub
imul
jmp
fwait
jb
lods
pop
add
xchg
sub
arpl
sbb
jp
inc
push
ja
push
mov
push
pop
sahf
inc
out
cmp
or
inc
jp
jns
movsb
js
cwtl
fnstenv
push
lock
sbb
push
mov
aas
imul
xor
jmp
mov
cltd
jnp
xlat
pop
insl
dec
cmp
push
out
scas
mov
mov
or
les
or
mov
inc
push
cmp
sbb
enter
xchg
insb
int3
out
add
out
mov
mov
pop
insl
in
fwait
call
scas
pop
scas
aad
rcrb
cld
sbb
lret
mov
das
cmpsb
daa
outsl
mov
mov
xor
adc
adc
inc
int
mov
cmp
dec
bound
mov
fimuls
add
pop
sbb
dec
fadds
sub
and
call
xor
pop
in
inc
xchg
mov
imul
xor
jl
gs
inc
push
outsl
jbe
cld
aad
dec
xor
xchg
inc
inc
lock
xchg
sahf
push
inc
shlb
mov
mov
sbb
xor
cmp
pop
fwait
pop
rcl
xor
in
pop
notl
cmp
push
ss
outsb
push
les
nop
ss
cvttps2pi
add
sub
test
pop
push
repnz
loope
jp
popf
cmp
and
ret
pop
or
into
and
lret
cwtl
cs
or
cltd
lret
cmp
pusha
adc
add
popl
scas
sub
leave
cmc
das
mov
popa
push
adc
jg
and
fcoms
das
iret
mov
sbb
or
push
mov
xchg
sbb
jl
mov
fldenv
pop
sub
jns
imul
clc
iret
cmp
inc
fimuls
ret
lock
scas
inc
popf
xchg
pop
std
jne
mov
dec
cs
mov
xor
dec
mov
das
cmp
cmpsl
mov
lcall
dec
fadds
loopne
dec
xor
hlt
iret
and
je
mov
or
sub
inc
into
sarb
insb
inc
test
add
subl
jmp
movsb
push
nop
int3
push
mov
dec
add
bnd
dec
and
pop
negb
icebp
push
cmpl
movsl
das
fisubrs
pop
lods
in
je
and
in
int3
test
jnp
jg
mov
add
insl
insb
push
arpl
pop
mov
fildl
push
stos
mov
sahf
adc
subb
stos
add
test
ret
pop
mov
fcmovnu
jp
sub
es
push
nop
add
repnz
fstpt
or
sbbl
xchg
sub
adc
pop
xlat
daa
stos
or
pushl
test
pusha
mov
mov
sbb
frstor
xor
add
cld
push
pop
and
mov
out
insl
jo
cmpsl
test
mov
xor
mov
out
mov
and
and
pop
cltd
add
push
mov
fucomip
and
pop
shrb
dec
outsb
lcall
push
xor
pop
and
sub
dec
pop
imul
lods
jno
loope
stos
xchg
into
fadd
int3
cs
dec
lcall
pop
aam
fwait
pop
in
nop
gs
mov
test
pushl
push
xor
int3
in
sub
xchg
sbb
dec
es
add
pushf
jnp
lret
cmpsl
sub
imul
push
xchg
aas
call
push
mul
inc
sub
addl
insb
jecxz
mov
add
stos
sti
pop
cwtl
push
push
mov
lock
fisttpl
sarl
rol
mov
jns
outsl
add
lahf
mov
and
aad
enter
subl
xchg
decl
xor
movsl
cld
push
push
call
pop
popa
roll
push
push
sbb
cmp
adc
daa
pop
dec
sbb
inc
mov
aad
loope
fnsave
lds
adc
lds
vcvtdq2ps
inc
aaa
fucom
jns
std
dec
mov
dec
add
sub
push
adc
add
gs
cld
in
mov
push
adc
sarl
lds
js
add
dec
dec
in
cmpsb
pop
push
push
add
lock
fnstenv
push
xchg
icebp
jmp
push
xor
or
js
fistpl
and
or
adc
je
nop
cmpsb
pop
and
lods
or
mov
in
lods
mov
mov
aaa
xchg
hlt
popf
ja
iret
pop
aaa
push
cmpsl
iret
add
loop
pop
test
push
push
jnp
push
lds
sahf
in
jbe
or
push
ds
or
fidivrs
repz
or
mov
sti
cmp
cmp
aad
iret
sti
jp
int
pop
stc
or
movsl
mov
adc
mov
or
mov
or
mov
push
sub
xchg
outsl
or
in
insl
mov
push
cmp
mov
push
mov
xchg
jo
fstpt
pop
and
mov
push
xchg
leave
nop
setae
sub
or
jge
enter
lret
mov
jno
pop
dec
int3
adc
jb
xchg
pop
sahf
addr16
popf
mov
add
and
fisubrl
dec
mov
mov
dec
inc
mov
test
ret
dec
iret
cwtl
divb
divl
dec
jns
je
cmp
dec
testl
test
mov
sub
mov
mov
in
jb
push
sub
mov
iret
push
push
and
stos
into
outsb
mov
adc
neg
movsb
sub
pop
add
and
xchg
sbb
nop
pop
scas
ret
add
pop
inc
es
xchg
ficoml
pminsw
jbe
cld
cmpsl
xor
fdivs
cmpsb
in
jecxz
test
decb
pop
pop
add
scas
cmpsb
push
std
inc
iret
mov
in
ds
shl
xchg
mov
adc
xchg
mov
push
sahf
clc
fiaddl
xor
je
inc
pop
add
outsb
sbb
sahf
testb
cmp
xchg
hlt
repz
insl
out
pop
dec
and
in
movsl
push
pop
stos
daa
dec
stos
stc
lods
and
mov
inc
es
xor
mov
pop
outsl
lods
ret
mov
movsb
mov
pop
sub
cmp
jle
rcl
mov
jg
add
lds
movsl
push
lods
pop
mov
test
mov
insl
push
xchg
xchg
adc
movsb
push
xor
in
mov
cmpsb
cmp
jmp
aaa
push
jmp
cli
test
cmp
pop
insl
int
das
ret
pop
pop
adc
dec
movsb
mov
lret
in
xor
mov
inc
mov
loope
and
push
jle
jl
xchg
aam
adc
dec
inc
jbe
adc
dec
fists
sahf
data16
pop
adc
pop
scas
outsb
movsb
aaa
jno
lea
push
inc
pand
rcll
and
pop
sub
in
add
dec
pop
into
scas
scas
inc
dec
pop
inc
push
pushf
in
ret
ds
call
or
icebp
nop
or
sub
mov
add
test
cmp
arpl
mov
testb
mov
push
jle
int
jno
mov
scas
sahf
leave
push
nop
dec
shll
cmp
clc
movsb
sti
push
xchg
mov
jne
ljmp
jb
insb
movsb
mov
lcall
in
inc
xchg
hlt
mov
iret
jle
sbb
push
mov
jp
mov
stc
xchg
adc
mov
and
popa
js
movsl
ds
loope
inc
mov
cmp
insb
add
jo
pop
cmp
inc
hlt
popf
push
cmp
cmpsl
ljmp
push
mov
out
je
shrb
les
xchg
insl
stc
test
lret
mov
cmpsb
push
mov
pop
pop
insl
push
je
and
enter
push
add
lods
xor
xor
push
xor
pushl
push
mov
movsb
loope
jae
in
pop
adc
js
pushf
pop
lods
stos
mov
in
jb
pop
movsb
push
mov
pop
jmp
jns
cmpsb
jge
popa
pusha
pop
cmp
sarl
or
sbb
xchg
sub
test
test
inc
in
ror
xchg
mov
out
out
xor
rorl
fldcw
pop
ja
shlb
inc
xchg
cmp
cmp
mov
lahf
mov
or
or
daa
inc
incl
outsb
nop
cld
mov
testl
out
popa
lods
jp
cmp
scas
sbb
mov
xor
xor
push
xor
lret
lret
popf
cltd
sbb
sti
bound
loope
sti
mov
iret
xchg
scas
xor
stos
lock
or
mov
xchg
sbb
idivl
mov
outsl
lcall
mov
mulb
fisttpl
in
lds
call
push
and
xchg
aad
rcrl
push
cmpsl
jl
push
rorb
stc
xor
aad
and
xchg
mov
jno
and
fs
in
jb
mov
cmp
repnz
dec
insb
clc
push
push
dec
pop
roll
rcl
sub
les
lods
les
ret
stos
cwtl
js
mov
adcl
adc
aaa
push
repnz
pop
movsl
xchg
out
aaa
ret
push
push
dec
push
cmp
cmp
je
jge
aad
xchg
jge
lcall
or
jbe
jp
repnz
out
ds
adcb
dec
mov
sbb
jp
loope
xchg
xchg
clc
ljmp
adc
sub
dec
mov
loopne
cmc
cmc
loope
xor
sar
mov
dec
pop
mov
sahf
xor
mov
lret
mov
push
ret
rolb
mov
in
jge
pop
fcoml
loop
mov
test
jb
notrack
xchg
lret
ljmp
sub
inc
in
xor
pop
rcpps
adc
lods
inc
addb
jmp
testb
inc
fidivrs
in
mov
cmp
lds
fcmove
or
mov
andl
and
xchg
into
cld
mov
js
adc
mov
jne
enter
add
imul
push
repz
gs
xor
insb
or
mov
mov
xor
out
test
cmp
jle
shll
jbe
pop
push
test
pop
lret
adc
negl
ret
sub
inc
mov
cltd
push
inc
cwtl
pop
mov
mov
mov
leave
pmuludq
adc
ss
in
in
clc
imul
in
push
pop
xchg
push
jp
cmp
push
stos
dec
xchg
inc
xchg
jecxz
movsl
cwtl
mov
cs
xor
or
lds
lods
push
sbb
das
push
cmp
pop
fucom
aas
std
push
inc
cmp
icebp
dec
cmp
cmp
xchg
pop
icebp
or
add
sub
sbb
cld
pop
lods
push
push
std
push
je
mulb
pop
cmp
add
xchg
sbbl
cli
fisubl
mov
sub
jnp
dec
cmp
cmp
ret
fwait
jbe
lahf
sub
shrb
mov
out
push
push
xor
cwtl
and
pushf
push
sub
in
and
stos
das
addb
dec
cmc
adc
cmp
outsb
jo
aaa
mov
lcall
sbb
call
outsb
movsb
js
fs
push
inc
psadbw
es
stc
jge
and
inc
sahf
sbb
sub
ret
inc
in
ja
lds
sti
dec
lret
or
cmp
mov
mov
jae
add
pop
xor
push
popf
sub
jle
adc
les
movnti
popa
shlb
add
negb
fsubrp
aad
aaa
add
mov
stos
in
jnp
ljmp
rcr
test
lcall
in
in
stos
pop
inc
ds
push
leave
push
leave
push
pop
pop
or
mov
sbb
inc
mov
ret
enter
mov
inc
pop
daa
movsb
out
adc
push
mov
sbb
cmpsb
sarb
pop
imul
mov
addr16
std
dec
enter
push
xorb
incl
inc
repnz
cmp
jbe
packssdw
aad
insl
sbb
daa
repnz
movsl
dec
stc
push
imul
sub
notl
xchg
outsb
fwait
popl
add
popa
inc
mov
out
sbbb
push
pop
rcrb
in
pushf
and
adc
repnz
adc
pop
scas
adc
jle
or
and
add
lahf
inc
dec
dec
out
xchg
movsb
js
add
les
sahf
dec
aaa
out
ss
cld
int3
mov
aas
xchg
pop
xchg
mov
mov
les
mov
push
and
aaa
pop
cmc
data16
mov
push
pop
aaa
into
js
cmpsl
adc
cs
aad
sub
dec
rcrb
or
dec
and
test
xchg
imul
mov
popl
push
addb
imul
cmp
xchg
insl
out
pop
pop
jle
stc
mov
inc
sarb
pop
cmp
mov
aas
jmp
push
inc
mov
push
push
sub
xchg
sar
movsl
cmp
repnz
inc
xchg
rcrb
inc
cmp
pop
out
jns
xchg
adc
pushf
popa
xor
sbb
and
xchg
pop
nop
xchg
imul
stos
out
je
fisubs
test
ret
fidivrl
ror
es
push
xor
cld
push
sub
mov
mov
adc
gs
test
lret
or
repz
stos
loop
fmull
adc
push
repz
jp
cmp
shlb
pop
xchg
mov
addr16
daa
test
test
pop
pop
pop
cmp
cmc
addl
incl
sti
rclb
push
je
loopne
js
mov
xchg
pop
cld
mov
mov
push
sbb
add
adc
xor
or
mov
dec
mov
nop
cmpsl
int
pop
scas
sti
mov
gs
loopne
and
sahf
xor
xor
push
leave
faddl
dec
addr16
shrb
pop
aas
gs
xchg
mov
mov
daa
imul
jnp
test
sti
push
fucom
sbb
loopne
enter
notl
add
aas
leave
pusha
jno
mov
sbb
inc
popa
not
cmpsb
cmp
jl
fbstp
lds
imul
push
or
sbb
dec
dec
mov
dec
mov
fnstcw
sub
push
fwait
dec
cmpsb
mov
fnstsw
fbstp
jmp
jecxz
jno
std
xchg
enter
outsl
mov
inc
mulb
outsb
xchg
pop
mov
aam
shrl
cmc
clc
dec
pop
push
icebp
inc
loope
lea
jb
inc
sub
jae
mov
bound
in
push
rorl
fs
jp
and
inc
pop
jle
push
mov
sub
popl
dec
in
inc
sarb
cld
imul
mov
and
test
push
lods
add
das
pop
pop
or
rcrl
or
dec
adc
or
cwtl
mov
inc
mov
mov
xlat
push
addr16
xchg
cs
std
into
mov
pop
lods
mov
sub
into
cmpsb
push
in
cwtl
stos
cs
leave
sbb
mov
push
ficomps
lahf
bound
fdivl
int
mov
pop
ret
bound
xor
ljmp
jnp
clc
stos
xchg
sbb
push
sbb
push
call
push
dec
cmp
pop
xchg
shl
jp
inc
lea
mov
in
xchg
inc
cmpsb
sbb
or
sub
xchg
rclb
dec
mov
pop
daa
ret
push
into
sub
repz
pop
das
pop
inc
inc
add
xchg
sub
sbbl
inc
insb
ss
pop
lcall
gs
jg
data16
movsl
push
icebp
xchg
leave
inc
push
inc
lock
xchg
cmp
addr16
push
inc
lret
sar
jbe
mov
inc
fdivp
dec
push
fs
mov
lret
lret
xor
mov
popa
pop
roll
icebp
lret
rcrl
push
sub
sarl
add
ljmp
sarl
pop
dec
sbb
fadd
push
or
dec
push
iret
cmpsb
or
pop
mov
sub
inc
push
pop
repnz
in
pop
jns
dec
mov
in
ja
fidivrs
adc
icebp
cwtl
push
out
lahf
es
loop
int
push
sbb
mov
sbb
dec
pop
in
push
subl
jmp
lahf
and
scas
js
mov
daa
data16
enter
lcall
and
test
jl
cmp
movsb
jge
xor
jno
xchg
sbb
clc
sbb
js
mov
adc
rcrl
mov
mov
mov
sub
xor
rorl
and
adc
lods
dec
sbb
mov
push
mov
pop
jge
or
xchg
sub
cmp
mov
push
mov
inc
sbb
cmpsb
cmp
push
jmp
cmp
add
xchg
cld
pop
pop
mov
loopne
inc
push
test
push
fnstsw
mov
popa
and
xchg
cmp
jns
dec
jae
addr16
dec
lret
stos
xchg
and
push
mov
sub
sahf
jp
push
fldenv
aas
sub
imul
add
adc
fdivr
sti
inc
cs
pop
ficoms
pop
dec
jbe
jp
jle
loopw
add
pop
sub
scas
jle
dec
les
jbe
in
push
cmpsb
xchg
sub
xchg
jo
xchg
ljmp
push
cld
ret
js
xchg
cltd
xchg
mov
jecxz
add
lock
dec
cmp
test
dec
and
loop
pop
xchg
inc
and
mov
sub
into
aad
addl
in
inc
aas
lea
je
pushf
mov
movsl
aad
fwait
push
jno
pop
sbb
or
mov
das
les
out
mov
inc
clc
pop
stos
fcmovu
push
in
pop
jb
addr16
cli
mov
jmp
inc
adc
imul
call
jmp
test
and
add
fisubrl
stc
nop
xor
js
adc
pusha
jbe
lret
inc
es
fistpll
jecxz
cltd
test
sub
and
rcll
add
inc
dec
cmp
cmp
lcall
sbbl
xor
inc
adc
cmpsb
sbbl
adc
dec
cwtl
andb
fcmovnbe
mov
cli
cwtl
jmp
inc
cmpsb
fnsave
pop
mov
stos
jecxz
lret
mov
and
fstps
xchg
jns
jg
add
mov
loop
fs
or
mov
xchg
outsb
inc
push
cmpsb
cmp
push
fs
add
mov
xchg
cld
push
fstpl
cli
dec
jo
scas
ds
pop
cmp
test
adc
mov
fsubrp
dec
add
into
xchg
mov
sub
push
jnp
mov
lret
mov
in
xchg
scas
push
inc
push
cmp
cmp
inc
push
data16
int3
pop
cmp
enter
dec
sbb
sbb
jbe
test
inc
cwtl
lods
mov
sar
push
aas
test
pop
cmp
jge
inc
sarb
icebp
nop
ds
inc
ret
pop
jecxz
mov
mov
mov
add
ret
pushf
xchg
xor
inc
ds
xor
adc
cmp
popa
or
call
or
cld
mov
cmp
aaa
dec
push
xchg
inc
push
loop
faddl
loop
aad
pop
xor
push
add
mov
push
xlat
push
add
fs
adc
inc
shrl
jmp
xor
push
lcall
push
add
or
idivb
mov
movsb
das
gs
sti
lret
test
mov
fldl
lcall
inc
add
xor
lea
je
mov
rorl
es
lcall
push
xlat
dec
or
lahf
dec
pop
pusha
adc
push
fwait
insl
mov
js
or
jp
rcll
lds
imul
add
out
xchg
pop
mov
stos
and
pop
loop
xchg
or
add
ljmp
xor
push
outsl
sub
and
push
sub
dec
icebp
jne
sbb
xchg
fstl
sbb
scas
xchg
sbb
and
jle
stc
jge
and
mov
xchg
dec
iret
subb
mov
dec
push
push
outsb
push
inc
stos
mov
cmpsb
nop
cmp
out
sar
push
fsubrl
mov
lods
pop
arpl
bound
mov
mov
push
mov
or
jbe
mov
stc
or
rol
mov
mov
or
sbb
mov
jmp
sub
xchg
pop
js
gs
push
lods
lret
and
stos
jmp
movsl
popa
repz
add
dec
insl
push
adcl
imul
add
push
mov
pop
jl
push
inc
rcrb
daa
movsb
cmp
pusha
sbb
adc
adc
pusha
call
xor
aad
add
xchg
sbb
js
scas
lds
sbb
loop
push
dec
pop
aaa
ds
xor
xor
sub
adc
loop,pn
repnz
repz
add
lods
adc
push
test
scas
pop
daa
jge
int
int3
sub
std
cmp
mov
mov
dec
mov
and
adc
inc
daa
xor
mov
ret
or
sub
rclb
or
lcall
and
stos
dec
mov
or
fnstenv
cltd
and
ds
adc
jp
rorl
adc
das
js
aad
aam
dec
pop
sub
fdivr
imul
fwait
cld
sbb
sbb
and
cwtl
mov
inc
cmpsb
out
cmp
or
lds
jo
cmc
push
jae
rcr
add
lock
stos
xchg
xor
imul
stos
pushf
mov
fwait
enter
mov
ficomps
mov
orb
in
outsl
and
or
enter
ficoms
push
clc
rolb
cmp
push
incb
or
call
mov
add
nop
je
out
cmc
std
adc
int3
push
sahf
std
jae
imul
repnz
lea
cwtl
pushf
sub
push
pop
mov
and
mov
add
insl
xor
sahf
mov
dec
ss
data16
gs
push
ret
sub
mov
jns
lret
mov
std
and
fisubl
dec
dec
aad
jne
xchg
pop
sub
mov
stc
jae
leave
pop
addr16
inc
fadds
pop
imul
dec
push
sub
cltd
test
int
jns
and
jo
cmp
lret
mov
mov
test
sub
jl
call
xchg
xchg
orl
sub
test
addr16
dec
adc
jns
out
test
mov
mov
jg
aaa
pusha
imul
ret
outsl
push
sbb
adcb
out
sti
lea
lret
sti
lods
push
insb
push
or
jge
dec
enter
lret
outsl
inc
mov
ss
jbe
incb
lods
fcmovnu
adc
iret
inc
ret
xchg
pop
cmpb
test
push
mov
xchg
nop
imul
mov
icebp
sbb
dec
shrb
lock
adc
subl
negb
push
adc
jo
and
sub
insb
sbb
and
pop
sub
pop
xor
and
sbb
enter
push
jb
fsubs
test
jae
fdivl
push
dec
in
add
lea
adc
sbb
out
bnd
jmp
xchg
cli
push
jb
jne
mov
dec
xchg
enter
fbstp
into
xchg
mov
adc
iret
dec
dec
bound
or
sarl
push
push
movsl
sbbl
imul
jno
dec
fisubs
push
bound
out
clc
test
in
mov
mov
lret
cli
mov
repz
aaa
stos
fnsave
pop
dec
jns
sti
pop
mov
and
sbb
imul
sub
inc
push
aas
ret
ss
mov
lods
cmc
pop
sub
jg,pt
out
sbb
test
push
sbb
mov
call
mov
nop
mov
push
mov
add
and
push
jge
ljmp
sahf
popa
int
pop
hlt
in
mov
add
push
stos
lea
add
fnstenv
out
jg
mov
jnp
push
cmpsl
in
xor
out
out
shr
pushf
xor
rol
mov
mov
movsl
sub
enter
xchg
popf
scas
mov
cld
push
scas
out
notb
sti
jns
mov
and
insl
jg
or
test
pop
or
cmp
call
dec
add
sbb
and
cmpsl
call
inc
or
int
pop
lock
test
aas
mov
js
xchg
xchg
pop
cmp
vprotb
fsubr
add
lods
cmpsl
out
cmc
int3
cwtl
loop
sub
das
push
mov
and
movsb
rolb
sbb
mov
mov
adc
adc
and
cltd
push
xor
negl
pop
xchg
fwait
push
add
iret
push
fs
arpl
pop
pop
push
cmpsl
andb
and
rorl
movb
stc
lahf
xchg
and
in
cli
test
outsl
shlb
js
gs
sub
xchg
mov
adc
bound
bound
out
push
dec
sub
mov
sub
cmpsb
movsl
mov
mov
xor
xchg
push
in
inc
je
jne
add
cwtl
jmp
mov
test
and
loop
les
push
call
cmp
and
mov
ret
xchg
jne
dec
fld
cmpsb
cmp
push
pusha
les
call
sbb
daa
imulb
inc
shrl
out
adc
pop
outsb
adc
mov
adc
adc
mov
andb
jg
cwtl
jbe
xchg
decl
clc
fldenv
jl
xsave
push
aaa
stos
loop
fstpl
sbb
xor
cmp
fdivrs
jnp,pn
es
ficompl
mov
jne
xchg
pop
pusha
push
push
stos
cmpsb
inc
pop
addl
mov
movsb
std
jge,pn
int3
rorl
movsb
mov
sub
repz
adc
mov
mov
pop
jecxz
cmp
out
and
pop
imul
mov
cli
test
and
push
mov
jge
jmp
mov
xor
fwait
pop
cmpsb
dec
pop
xor
push
sbb
sub
imul
rcrl
in
fcompl
aaa
jg
imul
sbb
testl
inc
fisubrl
push
in
xor
jle
push
pop
sysret
aad
inc
pop
sub
aad
popf
or
sub
jne
sub
icebp
mov
dec
iret
fstpt
adc
jle
xor
dec
in
loop
mov
push
ffreep
jge
decb
inc
fwait
js
jb
test
out
fildl
mov
push
lcall
movsb
mov
movsl
pop
scas
pop
cmpsb
rcrb
sbb
hlt
sub
adc
add
rclb
or
xlat
popl
sub
shrb
inc
cmp
notl
sub
sub
in
aaa
jp
das
sub
xchg
sub
mov
mov
cmpsl
lahf
add
dec
fmulp
dec
add
js
lahf
mov
dec
out
mov
ret
cwtl
decl
xor
lret
insb
mov
xchg
fsubs
roll
jl
push
adc
lret
mov
sahf
inc
adc
fstpt
and
dec
jb
mov
add
mov
arpl
adc
add
lahf
mov
push
stos
cmc
push
js
xor
mov
in
mov
jg
adc
or
mov
pop
xor
sarb
and
cld
xchg
loope
mov
and
in
xor
inc
pusha
jmp
pop
icebp
pop
mov
jg
test
push
icebp
xchg
cld
outsl
mov
cmp
xor
nop
mov
daa
mov
imul
aaa
and
lea
pushf
xchg
add
ret
test
test
fists
and
mov
jecxz
dec
mov
test
or
sbb
fstpt
add
lret
fstpl
loope
cltd
adc
lock
mov
repnz
loope
sarb
clc
stc
xchg
mov
sahf
repz
jle
inc
inc
js
loopne
sub
out
or
mov
pop
arpl
sub
setle
dec
daa
outsl
jne
push
cmp
lods
aad
ficoml
dec
outsb
and
mov
iret
movsb
mov
loopne
dec
ds
repz
iret
popf
popf
dec
add
addr16
sbb
pop
pushl
sbb
inc
fldl
mov
scas
out
xor
daa
ss
mov
jge
mov
mov
and
mov
xchg
cmpsb
lret
ds
and
inc
fmuls
inc
push
jbe
push
mov
mov
pusha
cmpsb
cmp
ret
int3
les
push
loop
sbb
shlb
fmull
inc
jp
cmpsl
dec
cmp
dec
je
stc
loope
stc
popf
mov
jmp
les
cmp
mov
push
dec
and
add
cs
jno
jb
sbb
dec
pop
sbb
leave
daa
adc
shlb
add
or
enter
add
xchg
jno
jno
sbb
gs
hlt
ds
into
xchg
sub
in
and
jle
jecxz
sbb
iret
adcl
enter
mov
mov
cmpsb
dec
scas
push
cltd
loopne
sub
mov
ficompl
imul
int
and
add
sub
lock
inc
scas
push
lea
out
shlb
or
ucomiss
sub
ljmp
rcll
xor
fnsave
jecxz
xchg
aas
sti
xchg
mov
test
jp
in
inc
loop
cltd
aad
mov
xor
push
mov
xchg
test
sbb
scas
shll
and
repz
xorl
stos
int3
sarl
jl
xor
xchg
jns
dec
and
pop
adc
lret
lret
movsb
fnstcw
cli
jae
arpl
push
sbb
decb
add
js
repz
jecxz
stos
dec
testb
sbb
aam
mov
pop
scas
or
mov
push
aam
fisttpl
sub
pop
cli
into
hlt
cmp
xor
popf
popa
dec
cltd
and
inc
popf
insb
xchg
lock
sarl
xor
jmp
xor
dec
jecxz
jb
mov
dec
mov
jecxz
sbb
push
cli
inc
and
imul
mov
cmp
shlb
mov
sahf
scas
in
call
xchg
imul
sbb
add
mov
adc
cmp
int
pop
cmp
leave
rcrl
xor
insb
movsl
pushf
pop
iret
sbb
lret
xchg
aad
pop
pop
icebp
dec
inc
mov
das
fcomi
pusha
out
sub
fidivs
divb
aas
rol
aaa
ret
sbb
or
jl
dec
or
scas
and
out
jmp
test
cmpsb
out
idivl
mov
dec
add
push
test
shrb
add
cs
jle
lds
mov
xchg
add
push
inc
sahf
or
orb
gs
lock
lcall
cwtl
sub
xor
sub
outsl
daa
int3
xor
xor
push
mov
out
fisttpll
ret
xchg
pop
jmp
or
adc
andl
inc
cmpsl
ret
jl
xor
push
sbb
mov
xor
inc
fwait
push
xor
cmp
cmp
mov
mov
mov
scas
in
add
adc
in
stos
mov
cld
inc
mov
das
sahf
test
cmpsb
cmp
cmpsb
cmp
sub
inc
dec
sbb
and
insl
jge
inc
les
xchg
adc
ret
mov
xor
mov
push
pushf
sbb
or
ret
pop
sbb
mov
jp
dec
imul
mov
jecxz
jae
loopne
inc
cmp
test
jbe
jp
pop
lahf
pop
adc
cmp
aad
dec
pop
sti
fwait
mov
push
lcall
dec
mov
mov
cmp
pop
pop
bound
fnstenv
mov
outsb
xor
cmp
inc
push
sub
push
sub
pop
dec
mov
stos
lock
stos
push
out
push
fstps
loopne
mov
cmc
popa
clc
es
popf
ret
shr
testb
loop
sbb
mov
adc
adc
call
sub
movsl
push
les
push
lds
pop
cmp
testl
dec
add
out
add
or
mov
popa
in
xchg
sbb
pop
cmp
aas
ds
sbb
jecxz
sub
push
sub
stos
add
aas
pop
and
pop
cmpl
xlat
loop
fcoms
rcr
or
ss
ljmp
jecxz
mov
mov
int
mov
adc
xor
subb
pop
int3
jle
mov
dec
sub
clc
xchg
iret
fcmovnbe
lret
mov
cmpsw
fs
arpl
sti
pop
fiadds
test
cmp
ss
loop
clc
jno
push
call
rcl
and
subb
aad
mov
sub
jns
imul
sub
push
jg
clc
aad
cmp
push
cmpl
add
mov
repz
mov
mov
cmc
pop
jne
xor
adc
pop
lods
push
out
roll
and
lds
inc
sub
out
jecxz
push
xchg
out
sub
mov
sbb
xor
dec
rcr
fldcw
push
pop
movsb
mov
push
cmc
lock
nop
loop
enter
pop
push
push
dec
and
jge
out
jg
mov
mov
sbb
sbb
arpl
mov
aaa
lret
xor
xlat
mov
sub
gs
dec
mov
dec
movsb
jne
cltd
xor
fisttpl
cmc
or
xchg
std
loope
push
mov
int
addr16
int
add
cmp
xchg
adc
cltd
arpl
cli
dec
ds
nop
call
add
ds
pop
outsb
rcr
mov
push
hlt
sub
popa
cltd
lock
aaa
or
sub
inc
pop
and
inc
cltd
and
mov
lret
cmpsl
pop
mov
por
mov
jl
idivb
pop
pop
ret
sub
insl
leave
and
add
rep
fldl
add
mov
sub
mov
inc
gs
testl
push
xchg
out
test
push
inc
push
in
shl
in
push
fldcw
cmc
jnp
stc
enter
xchg
jns
ljmp
imul
or
insl
mov
ret
sbb
movb
int3
fidivs
test
cmpsb
cmc
ljmp
inc
push
loope
jle
sbb
repz
dec
fisubrl
xor
hlt
addr16
loopne
sub
sti
pop
inc
das
lret
in
lock
cmpsb
inc
mov
xchg
ja
push
sub
sbb
or
cmc
les
mov
pop
mov
lea
dec
dec
pop
cmc
loope
out
adc
gs
cmp
jg
insb
je
mov
inc
lahf
add
inc
fldcw
loope
sub
or
push
xchg
or
dec
mov
stos
es
and
push
mov
sub
cmc
test
jl
sbb
jp,pt
sub
rcrl
fsubrl
aaa
mov
out
sub
rorl
cmpsb
pushf
mov
lods
inc
pop
or
sub
jp
inc
xor
and
aam
nop
leave
arpl
ret
mov
mov
push
sub
aaa
mov
scas
mov
sbb
mov
jl
not
negl
pop
xchg
cmp
repnz
inc
cmp
stos
mov
inc
xchg
dec
jg
stos
fldt
mov
jnp
mov
adc
and
ret
inc
dec
subl
mov
pop
clc
bswap
aaa
adc
imul
xor
into
xchg
lret
imul
neg
pusha
adc
mov
fldt
mov
testb
incl
aas
add
iret
lods
inc
pop
loope
lret
pushf
mov
xor
scas
jbe
push
insl
xchg
out
mov
xchg
ss
xor
imul
jno
cmp
mov
data16
imul
filds
movsb
sub
shlb
std
mov
pusha
mov
sbb
cmpsl
inc
mov
jns
xor
rcrb
push
jne
xchg
pop
repz
nop
lods
ljmp
jmp
xchg
mov
dec
enter
mov
fwait
jae
std
mov
int
jbe
push
scas
andl
iret
push
in
and
neg
sbb
aam
ljmp
icebp
sbb
sub
int
int3
mov
jb
ja
lret
in
sti
lods
inc
sub
dec
lret
bound
inc
ljmp
adc
dec
shlb
push
fadds
dec
pop
cmp
ret
loopne
pop
adc
lret
mov
cli
and
imul
gs
jnp
pop
jl
jne
pop
loopne
push
testb
mov
cwtl
in
push
inc
pushf
mov
push
dec
and
sub
mov
inc
pop
sub
es
dec
movsl
jl
imul
ja
add
pusha
cmpb
addb
imul
add
add
fcmovne
pop
xchg
adc
mov
push
sub
test
pusha
fistl
cld
sub
movsl
jl
fbstp
or
xor
jnp
xchg
mov
push
jmp
stos
and
cld
dec
lods
jo
in
xor
adc
inc
movsb
adc
dec
bound
xor
sub
dec
aaa
pop
notb
mov
ljmp
std
in
std
cltd
inc
and
in
jae
mov
push
in
sbb
fists
lahf
xchg
and
hlt
mov
test
xor
mov
jnp
out
in
xchg
or
aas
mov
add
jmp
int
xchg
addr16
lret
adc
insl
jae
sahf
sub
adc
fldt
or
mov
mov
or
push
or
scas
inc
jns
cli
loopne
das
fists
push
nop
jmp
movsb
aas
lret
ret
sub
push
imull
imul
orl
sbbl
sub
sbb
lret
pop
lea
mov
into
push
jmp
inc
jp
inc
data16
xor
daa
adc
lods
sahf
movsl
push
mov
leave
aaa
out
sbb
push
dec
iret
sarb
mov
fimuls
mov
mov
clc
adc
bound
test
inc
or
mov
cmp
adc
mov
dec
test
inc
add
adcl
jp
xchg
pusha
dec
dec
lcall
arpl
pop
pushl
jmp
aaa
push
out
cmpsl
xchg
pop
mov
in
imul
dec
jae
sbb
outsl
mov
xchg
or
clc
jge
pop
dec
cwtl
jns
mov
popf
xchg
push
push
jno
sbb
aam
dec
jecxz
or
xchg
push
add
mov
push
inc
jnp
jae
lds
xchg
jge
lock
jg
mov
adc
cmpsl
mov
cli
dec
dec
mov
fcomp
lret
add
and
or
aam
fwait
jo
pop
push
cwtl
sbb
pop
push
ret
repz
xchg
push
in
mov
fisubrl
push
mov
loopne
lret
out
les
pop
inc
subb
mov
sub
in
fwait
cmpsl
cmp
repz
arpl
stos
xchg
inc
enter
outsb
cmpl
imul
or
cmp
push
jne
cmp
mov
out
inc
int3
in
jno
aaa
push
cs
out
popa
adc
xor
daa
sbb
sub
mov
and
or
xchg
push
adc
dec
add
mov
lahf
ss
jbe
jns
inc
xlat
xlat
fidivrl
cmpsb
cmp
inc
pop
in
jge
adc
jmp
pop
outsb
test
lret
pop
pop
pop
add
jp
gs
xchg
jp
dec
stc
cmpsl
std
mov
sub
fcomps
ss
rorl
sbb
mov
jae
adc
and
js
xchg
xor
aam
xlat
repz
das
add
inc
inc
jnp
or
inc
enter
xchg
outsb
mov
mov
jp
ja
mov
sub
dec
std
or
jl
cmpsb
fwait
addr16
sbb
in
mov
adc
mov
sub
adc
mov
das
lcall
pop
add
jnp
mov
xchg
pop
scas
mov
mov
cmp
pop
repz
jae
cmp
inc
push
outsl
testb
add
stos
adc
add
xor
push
int
std
add
xor
pop
scas
rolb
xorl
dec
loop
ret
leave
inc
imul
out
or
xor
stos
jne
jb
xor
or
fs
ljmp
add
push
jnp
sub
add
sbb
xchg
mov
out
test
das
pop
cli
pusha
aas
lea
and
and
adc
imul
icebp
fmuls
or
stc
xchg
inc
pop
push
jge
add
jg
rep
pop
adc
add
sbb
movsb
int
add
mov
xor
push
insl
inc
push
insl
fsubr
inc
sti
push
loopne
enter
jo
push
inc
lahf
out
xor
pop
inc
sbb
adc
push
imul
or
or
out
ljmp
push
inc
mov
fists
sti
rolb
mov
shl
fwait
imul
scas
popf
insb
jle
lea
cld
lret
into
adc
pop
xchg
fistl
or
push
mov
mov
adc
and
sub
mov
push
or
shlb
jbe
dec
and
dec
scas
mov
inc
out
aam
inc
insb
mov
ret
mov
lret
out
cli
push
in
rcrb
xchg
data16
inc
xchg
sub
add
lret
pop
in
imul
or
sub
shrl
xchg
xor
pop
stos
aas
sub
int
adc
div
dec
loop
and
sarl
aaa
ret
or
repz
inc
inc
cwtl
pop
dec
mov
repz
loopne
ja
push
lcall
push
fcom
lret
into
cmpsl
adc
xchg
and
or
scas
cmp
and
lds
mov
out
cmp
cmp
aaa
add
aaa
fs
mov
in
and
sti
ret
add
jl
leave
push
inc
nop
orb
pop
jmp
out
daa
cld
xchg
addl
je
push
mov
pop
jae
xlat
in
jp
or
arpl
inc
insb
sub
dec
jecxz
pop
sbb
cmp
cmp
fstpl
push
jae
or
cmpsb
stc
jmp
jno
mov
or
out
lea
or
jnp
inc
inc
mov
jge
inc
stos
adc
fldcw
es
pop
push
mov
test
scas
out
mov
and
or
jle
insb
cmp
imul
pop
nop
sub
dec
pop
push
ljmp
cmp
int
adc
xor
arpl
jbe
lret
sub
mov
sarl
sub
xor
rol
xor
xorl
scas
test
test
aad
add
scas
int3
and
cmp
test
shlb
xor
jl
xor
mov
mov
lret
or
inc
repnz
jp
cld
xchg
test
popf
xor
xlat
leave
jns
or
fdivl
out
fsts
mov
mov
adcb
sub
mov
in
cmp
xlat
lds
cmpsl
stc
dec
and
fadd
into
inc
ret
fistpll
dec
xlat
push
clc
pop
js
ret
jp
repz
subl
push
cld
xchg
add
int
ja
sahf
mov
and
and
mov
jge
mov
pop
fwait
sti
mov
mov
fs
punpckhdq
dec
pusha
inc
mov
mov
loopne
lock
and
ja
xchg
out
inc
frstor
mov
fst
in
fs
ds
cmp
mov
sbb
iret
dec
enter
xor
cltd
mov
lods
outsb
mov
adc
or
push
adc
rcrb
fsubrl
insl
cmpsl
jns
lcall
and
dec
lret
sbb
shl
mov
outsl
fistpl
add
into
gs
and
sti
push
in
rcrl
mov
pop
aas
pop
testl
sbb
call
lcall
in
ds
negb
sbb
je
cmp
stos
icebp
jmp
inc
flds
in
mov
pop
push
adcb
fdivl
or
sbb
inc
fstpl
jmp
inc
sub
mov
data16
aas
adc
js
pushf
jo
mov
mov
aas
inc
fldcw
or
mov
outsl
or
mov
aas
add
mov
sbb
iret
xorb
pop
movsb
sub
bound
dec
aad
sbb
pop
mov
cmp
cmpsb
data16
adc
idivl
scas
jge
jo
sti
dec
pop
fnstsw
push
sbb
ret
dec
cli
test
mov
mov
imul
pop
or
cltd
xor
ds
adc
cltd
xor
lods
test
rcl
mov
or
adc
iret
rol
lret
jnp
out
pop
cmpsb
pop
adc
xchg
shlb
fidivrs
dec
in
orl
or
test
mov
lahf
jbe
fisubl
jecxz
mov
jp
jno
jmp
dec
fbld
add
data16
jns
push
or
ja
pushf
aaa
sub
arpl
gs
xchg
jae
shlb
nop
sub
insb
jmp
lods
cltd
lea
mov
xor
jno
and
int3
repz
mov
xor
je
xor
mov
add
pop
fdivs
dec
cmp
xchg
and
loopne
push
ljmp
jae
shl
test
adc
lcall
popa
cwtl
test
jae
fnstcw
xor
mov
sbb
mov
fs
xchg
mov
mov
fdivp
or
xchg
outsl
std
adc
jl
and
ret
inc
inc
frstor
mov
stc
pop
add
aaa
adc
jns
pop
movsb
ja
dec
bound
sbb
xchg
dec
add
and
test
ret
mov
shll
xor
mov
frstor
dec
or
inc
fidivrl
outsl
fdivr
add
sub
mov
outsl
push
arpl
xchg
loopne
jle
call
and
ljmp
push
int
mov
loopne
add
inc
mov
pop
add
pop
xchg
cmp
iret
adc
cmpsb
cmp
xchg
pop
pop
imul
scas
mov
pusha
stos
push
rcl
mov
test
dec
arpl
leave
jle
mov
arpl
or
xchg
pushf
mov
rorl
stc
pop
fidivl
and
andb
lods
pop
sbbl
cwtl
sub
mov
pop
jmp
lds
pop
aam
fcomi
xchg
sub
sbb
push
mov
into
lret
bnd
mov
add
jle
gs
xor
call
dec
ret
in
cli
xchg
or
sub
mov
idivl
mov
in
dec
or
adc
in
adc
xchg
cmp
jnp
dec
pop
mov
shll
push
push
ret
pop
pushf
iret
or
mov
fists
imul
xchg
sub
imulb
and
shlb
pop
int3
mov
mov
xchg
pop
adc
mov
jl
repnz
out
mov
shl
mov
stc
daa
sub
or
je
dec
pop
popa
cmp
fwait
pop
or
cmp
and
xchg
push
mov
je
sub
push
mov
xor
repz
sub
dec
pop
mov
sbb
mov
lret
roll
pop
sbb
adc
stos
sub
jne
scas
dec
cmp
jnp
sbb
rcll
sbb
into
enter
cmpsl
push
loope
xor
aas
das
into
jbe
dec
icebp
lcall
inc
test
lods
inc
mov
xor
pop
inc
in
cmp
jb
mov
sbbb
xchg
xor
stc
pop
cmp
xchg
adc
stos
es
out
adc
outsb
xchg
mov
es
adcl
movsb
out
ds
and
insb
sub
ljmp
shlb
push
imul
or
mov
decl
in
fdivrl
mov
push
imul
fcmovnu
cltd
imul
or
cmp
mull
jmp
scas
push
push
jmp
shll
pop
mov
andl
mov
stc
nop
daa
test
inc
cmp
js
in
cmp
ljmp
fwait
dec
pop
sarl
popf
xchg
ss
data16
mov
daa
fistpl
cmp
mov
pop
dec
add
test
inc
pop
test
pop
lea
ffree
mov
fs
int
or
bound
add
or
in
jno
bt
sub
ss
inc
xlat
push
or
xchg
scas
mov
je
add
sub
rep
mov
popl
daa
aad
fmull
mov
mov
jmp
lea
sub
push
pop
mov
mov
iret
adc
add
popa
imul
sbbl
or
scas
sbb
sub
xor
jle
mov
es
pusha
mov
jns
sbb
mov
jle
sbb
movsl
in
push
stos
jno
jmp
and
mov
jmp
jecxz
pop
std
das
sbb
mov
jmp
test
sub
sub
xor
idiv
adc
aam
jo
je
adc
pop
insl
push
mov
jno
xor
ss
enter
or
xor
sbb
dec
add
insb
test
mov
and
inc
bound
test
push
jecxz
jbe
in
movsl
sub
push
aas
mov
cli
dec
test
lods
pop
xchg
xor
add
or
adc
xchg
pop
mov
jecxz
mov
pop
mov
pushf
outsl
ja
xlat
push
enter
xchg
jmp
inc
mov
andl
out
xor
jge
in
aam
mov
fwait
arpl
pop
aaa
pusha
xor
mov
xchg
xor
pop
and
icebp
mov
js
cmp
popa
sbbl
clc
aad
cmc
and
mov
insb
pop
sub
popf
inc
jno
pop
and
push
cs
xlat
and
push
and
jae
pusha
lahf
and
sub
mov
inc
xor
je
dec
adc
ret
xor
jp
je
mov
mov
sbb
push
mov
push
stos
jno
das
inc
sub
push
jbe
mov
ret
jnp
dec
loope
mov
inc
lods
in
cmp
jp
pop
mov
push
add
int
cli
mov
push
cld
push
sub
int
xor
push
cmp
xor
rcrl
test
jp
lret
enter
repz
pop
fmul
jae
or
and
lock
ficompl
dec
test
fistpl
popa
idivl
and
and
das
loope
cmpsb
adc
xchg
inc
lret
adc
stc
subb
jge
and
in
sub
xchg
push
test
clc
inc
out
sbb
rorl
repnz
and
rcrl
stos
lds
out
in
in
das
popa
sub
mov
enter
fsubrs
insb
add
jp
xchg
in
fmull
pop
xor
test
stos
lret
insb
inc
jecxz
cmp
or
jg
xchg
sub
lock
inc
sub
xor
xor
or
dec
cmp
mov
bound
dec
hlt
rcl
stos
lret
repnz
and
dec
mov
ret
lock
in
xchg
rcl
std
xchg
leave
lods
push
or
ds
out
sbb
jae
cmp
xor
pop
fists
aas
hlt
dec
inc
xlat
ds
pop
bnd
dec
pop
adc
xor
pop
sahf
in
mov
std
pop
and
add
leave
int3
mov
mov
sub
inc
sbb
xchg
mov
scas
shrl
add
lret
sbb
sbb
rolb
jp
in
cmpsl
shl
xchg
test
bound
int
scas
pop
jbe
push
data16
jecxz
dec
and
jp
dec
aam
pop
mov
mov
jle
daa
mov
xchg
dec
inc
clc
dec
aas
loope
in
adc
cld
adc
movl
dec
scas
xchg
mov
int
adc
das
cmp
outsb
xchg
sub
mov
inc
cmpsl
pop
shl
mov
daa
inc
or
lcall
mov
fdivl
cmp
insb
mov
fcoms
sub
cmp
insb
xchg
frstor
aad
xor
xchg
sub
inc
loopne
adc
test
and
cmp
or
outsb
mov
ljmp
lock
adc
in
xor
rcl
call
loop
pop
insl
rolb
imul
mov
dec
fs
lods
sbbl
jnp
je
jnp
in
mov
mov
leave
adc
jle
adc
and
shr
mov
ret
stos
sbb
mov
pop
mov
mov
push
gs
xchg
cmp
mov
jae
or
dec
cmp
ja
dec
sti
and
call
jle
in
add
sub
cmp
jg
pop
fldt
inc
jae
gs
pop
push
jmp
frstor
xchg
mov
mov
add
mov
andb
mov
mov
jne
lret
push
jecxz
dec
lcall
out
jbe
adc
outsb
sub
add
cmp
daa
data16
xchg
mov
or
lds
push
jle
push
ja
mov
pop
sti
dec
or
decb
dec
mov
out
xor
test
mov
xor
ret
cs
pop
sarb
out
data16
mov
fimuls
cmpsl
repz
add
adc
mov
xchg
sub
mov
fistps
inc
pop
ds
pop
push
insb
pop
mov
xchg
push
mov
fidivrs
xor
mov
jo
xlat
js
push
ja
jno
lods
rcrl
call
jmp
and
or
stos
xchg
inc
pop
or
sbb
dec
leave
imul
fldl
daa
sub
and
inc
cli
lea
mov
pop
sbb
cs
sub
in
call
xchg
inc
lock
stc
mov
push
xor
lcall
cwtl
mov
or
add
dec
ds
adc
dec
push
push
lock
cli
inc
cmc
lds
out
or
jle
loopne
cmp
and
dec
lea
dec
ljmp
stc
je
push
daa
outsl
xor
fnsave
mov
sub
cmpsb
mov
inc
cmp
addr16
pop
and
sub
pop
imul
jbe
movzwl
dec
sub
pop
jo
mov
jne
push
sbbl
cmp
inc
sarb
loope
cmp
pop
cmp
xchg
sbbl
stos
push
add
test
push
movsl
loopne
mov
inc
in
and
aam
notb
mov
test
shlb
in
or
cs
xor
dec
pop
push
push
out
call
jmp
sub
enter
fbld
lea
movsb
ds
add
inc
xlat
jb
mov
sbb
adc
jno
xchg
xorb
bound
add
sub
fdivrl
push
push
movsl
data16
pusha
in
aam
mov
je
xchg
add
sub
xchg
scas
pop
jge
stos
or
aad
dec
addr16
inc
ret
and
and
loop
lds
mov
and
shll
outsb
adc
or
lret
imul
scas
mov
insb
sbb
repz
add
mov
pop
imul
adc
and
out
inc
adc
and
cmp
add
jns
mov
dec
and
inc
shlb
in
pop
movsb
xchg
fldl
sbb
fsubrp
cmp
mov
std
imul
sub
aad
pop
dec
xchg
mov
dec
xor
and
aaa
mov
mov
mov
or
mov
mov
xchg
movsb
call
cmpsb
cmp
fs
inc
add
mov
sarl
pop
mov
jge
dec
mov
cmp
pop
leave
fwait
sub
push
into
out
cltd
mov
or
test
sub
mov
andb
mov
das
ja
xchg
test
inc
std
aad
scas
and
and
or
add
repnz
movsb
inc
xchg
inc
jge
mov
sahf
jle
dec
movsb
into
sub
mov
fwait
sarb
cmpsl
xchg
sub
mov
jmp
sub
push
pop
push
es
gs
xchg
in
mov
xlat
or
popa
mov
fsincos
inc
pop
or
xchg
ljmp
lock
hlt
xchg
loop,pn
jecxz
or
adc
lods
roll
nop
bound
jecxz
mov
xor
mov
mov
imul
mov
mov
fidivs
push
lods
cmpsl
mov
add
add
sub
lods
jg
dec
mov
jb
push
popf
je
dec
out
popf
lods
and
lea
rep
sbb
xor
cmc
lods
cmp
add
pop
sub
pop
pop
clc
fldcw
mov
js
fmul
ss
fadds
mov
xchg
inc
out
das
push
sub
jge
jbe
testb
xchg
jge
adc
das
decb
cmpsl
push
jbe
stos
dec
jg
dec
ret
stos
or
cltd
dec
cmp
pusha
int
cmpsl
scas
out
dec
and
mov
leave
mov
ficoml
xor
cltd
and
and
xchg
sbb
adc
sub
push
ss
pop
incl
mov
pushf
jb
xchg
and
bound
mov
aaa
rcr
jnp
mov
cmp
cmp
mov
call
and
into
mov
adc
inc
mov
adc
mov
sub
pop
mov
fbstp
push
sbb
add
int
aaa
mov
push
cmp
outsl
push
leave
and
nop
pop
std
jmp
or
pop
daa
jo
cltd
inc
inc
notb
dec
adc
adc
push
pop
pop
imul
jle
inc
iret
in
repnz
push
mov
insb
pusha
or
in
sub
roll
int
mov
xchg
push
push
dec
mov
mov
xchg
ljmp
sub
scas
mov
adc
fldpi
into
fdivr
into
imul
rclb
lock
and
cmp
mov
adc
dec
lret
push
bound
repnz
xor
cmc
xor
and
pop
push
test
xchg
mov
sahf
or
ret
les
cwtl
call
mov
into
sub
aas
ss
stc
mov
imul
adc
jbe
pushf
insl
mov
fsubrl
and
sbb
repz
pop
sahf
ss
pushl
pop
mov
add
xor
test
and
cld
pushf
xlat
push
xchg
and
arpl
lahf
ss
or
mov
xlat
mov
jne
dec
loopne
movsb
fucomp
push
jno
mov
mov
pop
dec
push
xchg
data16
loop
xor
fwait
mov
fdivrl
cmc
in
fwait
cmpsl
and
imul
std
cli
mov
or
cmp
ret
jg
or
std
insl
and
aad
sub
pop
lret
es
adc
std
aas
pop
and
pop
cmpsl
sarb
cmp
stc
xor
pop
cltd
notl
mov
xchg
ja
xor
fldz
dec
mov
or
adc
scas
ja
push
mov
push
xor
dec
pop
adc
mov
jle
inc
push
in
subl
xor
jle
mov
adc
pop
mov
jns
aas
add
dec
ja
in
test
stos
imul
pop
fisubrs
adc
mov
inc
in
stc
add
stos
jle
inc
stos
inc
in
inc
dec
mov
xchg
shl
repz
mov
cmp
and
out
out
movb
je
in
sbb
cmp
fistpll
xorl
add
jmp
jnp
shll
xchg
aam
sarb
test
or
and
mov
push
mov
jmp
mov
test
jbe
cs
je
jne
dec
out
popa
inc
mov
adcl
or
or
sbb
sub
test
and
mov
ret
repz
push
int3
sub
gs
or
mov
ljmp
cmp
inc
xorl
notl
or
lahf
ss
scas
mov
js
mov
mov
xor
jbe
leave
xor
test
fsubl
pop
test
mov
das
adc
xor
shlb
stos
cld
mov
push
addb
aad
sbb
dec
cltd
sbb
dec
cli
loopne
and
push
pushf
pop
sbb
xchg
xor
xchg
ljmp
sbb
add
xor
jno
cmp
je
push
lcall
out
fnsave
lea
push
filds
inc
xor
dec
cmp
js
in
test
lods
mov
fiadds
add
and
pop
adc
jbe
cltd
cs
add
into
xor
lcall
inc
aad
jne
add
into
data16
mov
sbb
inc
push
rol
test
dec
dec
mov
out
lret
shll
inc
mov
inc
pushf
cwtl
xchg
out
dec
daa
cli
in
jmp
mov
decb
mov
push
jb
ret
xchg
imul
mov
add
sub
nop
sub
enter
mov
sti
mov
mov
mov
push
shll
das
lahf
pop
pushf
lea
jno
cmp
nop
aaa
dec
ret
ret
adc
int3
mov
movsb
inc
setg
lds
imul
out
sahf
xor
andl
pop
adc
mov
insl
jp
es
ja
mov
adc
test
jne
mov
fildl
and
mov
iret
push
cmp
pop
shl
cmp
and
fisubrs
mov
inc
or
insl
mov
stc
xchg
xchg
jmp
das
push
repnz
xchg
stc
sbb
aaa
jnp
sbb
push
lods
test
test
xlat
outsb
aaa
shr
shl
mov
aaa
mov
lret
repnz
lretw
pop
stc
es
sbb
sbb
sub
pop
push
rol
pop
sbb
jl
mov
sub
xorps
push
or
test
lahf
arpl
aad
std
outsl
mov
mov
loop
fadds
or
popa
xor
inc
outsl
mov
mov
sbb
into
xor
sbb
pushf
xor
push
popf
std
mov
add
lods
jmp
dec
mov
bound
cmp
mov
cmc
xadd
shll
scas
cltd
das
outsb
adc
cmp
fbstp
dec
lahf
xor
inc
into
in
xor
xchg
fildll
aaa
stos
in
pop
popa
repnz
sbb
call
mov
add
test
out
sub
lea
sub
push
psrld
and
ja
xchg
mov
add
jns
mov
mov
cmc
dec
mov
adc
es
inc
adc
add
sbb
mov
mov
rcrl
addr16
pusha
xchg
cwtl
nop
sbb
nop
dec
orl
imul
andb
mov
xchg
imul
nop
push
movsb
out
push
jb
in
xchg
push
mov
pushf
lahf
inc
xchg
fxch
sbb
jne
arpl
shll
sbb
stos
xchg
fdivs
jne
lds
divl
jge
xor
xlat
pop
sti
adc
imul
inc
push
mov
push
jb
mov
test
in
ja
adc
dec
data16
jnp
xchg
add
aad
or
mov
dec
xchg
xor
mov
in
mov
fistpll
inc
jmp
jp
vmovlpd
or
pop
cli
sub
sbb
shlb
imul
mov
fildl
pop
sbb
xor
or
aaa
sti
arpl
push
out
xchg
fiadds
ja
hlt
test
or
jo
pop
nop
cltd
jmp
lret
cmp
arpl
lock
mov
mov
cs
push
stc
adc
cmp
into
fstps
loop
add
les
adc
cmp
sub
xchg
dec
adc
adc
dec
rcr
pop
push
add
mov
inc
or
enter
lea
jl
add
mov
lock
jge
xlat
scas
fdivl
pop
ljmp
push
hlt
lods
fcoml
sbb
popa
insl
rcrb
imul
mov
dec
movsb
ds
dec
or
repz
push
cmc
and
and
dec
push
lcall
inc
in
sbb
out
loop
and
into
gs
fsubr
mov
shlb
mov
xor
jle
out
mov
add
outsl
dec
or
sbb
adc
or
loopne
pop
test
out
pop
jecxz
in
fsubrs
lret
mov
fisubs
iret
pop
lahf
cmp
repz
cs
mov
xchg
jb
aaa
dec
pop
jecxz
xor
pop
adcb
mov
and
cld
mov
aad
js
mov
mov
rorb
mov
adc
inc
mov
push
xor
mov
stc
or
mov
scas
aam
cmp
and
mov
mov
inc
xchg
out
out
sbb
push
or
sbb
jns
push
mov
pop
bound
lods
in
das
sarl
and
mov
pop
push
mov
jae
in
mov
push
xchg
push
mov
ja
shl
fldl2e
shl
into
xor
jmp
out
fs
rorl
movsl
add
push
and
xor
xor
xor
hlt
or
es
call
jnp
fsubrs
mov
xchg
push
cmpsb
imul
test
int
pop
inc
lods
xchg
jmp
mov
xchg
pop
repz
les
test
stos
lods
push
inc
ja,pn
int
sti
fiadds
ds
shr
xchg
mov
mov
xchg
leave
fs
clc
test
std
inc
scas
rcl
mov
jb
mov
xlat
and
aad
add
lret
mov
adc
outsl
inc
call
cmp
adc
xor
jge
jne
dec
sahf
and
rcrl
hlt
test
dec
cs
insl
pusha
push
inc
add
xchg
les
mov
popf
xor
insl
or
inc
push
jbe
lret
sub
testl
sub
jno
pop
xor
mov
aaa
jecxz
inc
fsubl
cmc
or
andb
pop
mov
int3
add
sbb
inc
jno
jb
mov
fcomip
repnz
push
and
loop
mov
push
dec
cld
out
xchg
cmp
clc
gs
aaa
or
cs
fstpl
mov
mov
mov
sbb
decl
arpl
cmp
adc
push
jo
mov
repz
add
mov
mov
jno
jge
sbb
push
sbb
orl
add
push
xchg
mul
jbe
push
xchg
decb
mov
hlt
inc
or
pusha
aaa
pop
int
cmp
lret
xor
fucomip
enter
sub
sub
sbb
add
mov
into
adcl
mov
fmull
ja
xchg
in
test
or
mov
sub
cltd
shlb
repnz
adc
adc
cltd
insb
adc
pop
iret
loop
fbstp
imull
and
add
nop
out
xchg
loope
dec
popa
in
xrelease
adc
outsl
cli
daa
mov
mov
daa
popf
rol
lock
inc
scas
lods
dec
or
orb
pop
sahf
filds
and
and
push
mov
xchg
cs
jne
add
add
push
arpl
mov
cmpb
add
sub
and
mov
cmp
dec
cmpsl
das
ret
aaa
iret
adc
pop
sub
lods
or
lahf
jae
or
mov
insb
sub
insb
push
jp
pusha
out
xchg
in
jae
icebp
sbb
push
adc
shlb
pop
rorb
jg
and
dec
sub
icebp
lods
repz
add
ja
dec
and
xchg
xchg
jl
lds
xchg
iret
dec
fidivl
or
jp
inc
lcall
jne
sti
leave
aam
enter
add
inc
inc
push
andl
rol
mov
insl
sbb
xor
lret
int3
cmc
mov
xor
pop
insl
dec
in
pop
add
hlt
scas
sub
fnstcw
lods
les
out
les
loope
fdivp
mov
outsl
sub
push
add
enter
lret
push
or
xlat
ficomps
inc
ljmp
xchg
xor
imul
xor
pop
add
pmullw
mov
dec
test
push
outsb
int3
dec
pop
mov
lods
shl
add
xlat
cmp
insl
push
xor
xchg
les
daa
and
sbb
push
lcall
sahf
dec
lret
int
aam
sbb
cmpsb
mov
test
or
mov
dec
cmpsl
xchg
aas
loopne
popf
jb
mov
shlb
sbb
scas
jno
inc
sub
sbb
mov
mov
test
daa
adc
cld
xor
rcrl
bound
inc
adc
fistpll
scas
cmp
add
repnz
cmp
and
or
scas
cmp
jge
test
add
outsb
mov
inc
cld
imul
rclb
xor
std
jo
or
xchg
pop
dec
xor
sub
push
and
mov
psrad
dec
pop
sbb
pop
ret
in
sbb
fdivl
cli
xchg
sub
es
add
scas
xchg
mov
je
in
mov
xor
cmp
lret
insb
add
stc
negb
xchg
sub
or
lcall
sub
jae
jns
bound
pop
and
cwtl
ss
out
xchg
xchg
push
pop
imul
sub
jl
mov
mov
xchg
les
sbb
popa
ljmp
jecxz
and
inc
mov
mov
xchg
push
or
lock
and
pop
ja,pt
es
ffree
stos
inc
xchg
lods
js
pop
sub
xor
cmp
data16
subl
jecxz
cmp
ficoms
mulb
push
stos
jmp
add
mov
or
add
add
mov
rol
fnsave
or
int3
adc
sub
sahf
push
cmp
cmpsb
sbb
int3
jg
scas
mov
loope
testl
jp
lret
mov
inc
lock
jno
gs
pop
notb
lret
xor
mov
popa
sbb
sbb
inc
pop
out
and
cld
scas
pop
push
popf
dec
inc
xor
stos
and
mov
lea
adc
ret
hlt
in
iret
mov
cwtl
arpl
mov
push
lds
add
xchg
dec
adc
push
inc
mov
int
fildll
bound
or
pop
push
dec
mov
jp
fsubrs
mov
add
jl
and
adc
std
dec
cltd
xlat
mov
std
xchg
add
sbb
add
and
pop
mov
arpl
sarl
jb
cmp
dec
sub
testl
js
mov
pop
xlat
fisubrs
insl
pusha
cli
cmp
ret
out
insl
add
mov
mov
fadd
int
cwtl
sbb
inc
int3
inc
mov
pushf
xor
cmp
insl
les
ljmp
and
mov
je
es
loopne
or
je
iret
push
pop
fistl
push
sbb
out
cmpb
clc
ror
pop
fbstp
out
xchg
fisttps
inc
pop
pusha
testl
nop
or
or
stos
xor
dec
aaa
scas
mov
pop
aad
add
jge
jecxz
outsl
add
pop
fdivl
cmp
enter
and
in
cmp
out
negl
insl
scas
mov
push
sub
ljmp
and
mov
movsl
mov
fsubs
outsl
cmpsb
xor
insl
add
insl
mov
push
rorl
cmp
jg
popa
adc
mov
mov
sar
fiaddl
movsb
iret
shrb
sarb
and
loope
and
add
ret
jnp
mov
xor
sti
cmpl
test
repz
sbb
inc
ficoml
fistl
in
and
pop
clc
imul
jb
cmpb
mov
js
pop
sti
pop
repz
roll
and
test
popa
mov
popf
imul
add
scas
push
cmc
test
loopne
cmp
test
mov
xor
dec
les
arpl
mov
mov
outsb
ja
jnp
inc
adc
lea
pop
stos
sub
mov
scas
cltd
cmp
mull
sub
push
sbb
ret
and
rep
hlt
cmp
cmpsb
outsl
xor
mov
inc
shll
mov
adc
mov
sub
or
sahf
mov
ljmp
jmp
ljmp
xchg
in
jge,pt
mov
sub
add
xchg
dec
test
test
in
push
test
test
popf
pushf
shll
cmp
test
cmpb
and
mov
push
test
jp
lods
xchg
dec
lods
add
xor
fcomp
in
movsb
ljmp
or
sub
out
xor
cmp
loop
sbb
mov
mov
shrl
js
push
aas
mov
scas
and
inc
push
cli
stos
mov
movsl
mov
and
je
sti
and
icebp
ret
out
sbb
mov
sub
or
jl
aaa
into
cmp
cmp
sbb
aam
shlb
call
dec
or
add
out
inc
and
jno
lret
sub
mov
inc
mov
pusha
fstl
rorl
rcrl
dec
jbe
ja
dec
add
cli
int3
cmp
pop
mov
dec
das
cmp
rorb
insb
repz
cmpsb
mov
loope
shrl
pop
fstps
lds
mov
nop
fimuls
movl
sub
mov
dec
dec
xchg
js
lahf
pop
int
jbe
pop
mov
and
sar
jl
cld
lcall
in
mov
bnd
cmc
test
cmc
xchg
sub
lahf
mov
mov
inc
aad
lods
js
xchg
mov
xchg
push
shrb
sub
insb
xor
push
jmp
xchg
cmp
popa
mov
lods
call
xchg
adc
or
loop
xor
mov
sub
into
xor
aas
pop
and
rcl
shrl
cmp
sub
repz
jmp
mov
das
xor
sub
adc
inc
icebp
addps
shl
cltd
rolb
pop
es
mov
pop
jb
int
sub
leave
pushf
int3
pop
je
jns
pop
test
and
jge
jno
data16
fcom
add
scas
adc
loope
mov
cmp
dec
mov
mov
fdivs
dec
cmp
adcb
inc
pop
lea
jo,pt
xchg
shll
mov
mov
pop
jge
push
jne
xchg
in
les
aad
cmp
ljmp
mov
fmulp
jb
in
inc
adc
or
mov
outsl
push
pop
dec
fs
mov
or
aas
xorb
test
xor
stos
imul
inc
inc
push
mov
jno
cmp
sbb
mov
mov
sub
fadds
popf
into
andl
das
movsl
data16
stc
cmp
aaa
push
es
mov
dec
fnstcw
mov
mov
in
lcall
mov
adc
outsl
pop
addr16
in
mov
aaa
mov
insb
loope
cltd
dec
lds
shlb
dec
frstor
add
lret
es
push
enter
in
loope
repnz
and
cmp
scas
lret
lods
cld
lea
orb
jnp
out
loopne
out
mov
hlt
cmp
ja
incb
dec
mov
cli
out
add
push
and
test
mov
push
stc
adc
mov
sbb
mov
mov
mov
hlt
int3
les
push
cwtl
scas
leave
fimull
add
in
adcb
fisubrl
mov
enter
and
test
scas
cmp
push
pushf
mov
mov
pop
jl
cmp
movsl
mov
hlt
adc
sbb
repnz
imul
sub
pop
andl
or
cmpsb
sub
mov
sub
fucomi
fstpl
shlb
push
xor
push
test
scas
mov
mov
jbe
lcall
adc
pop
cmp
dec
pushf
jl
and
enter
jmp
add
fcoml
fldenv
cmpsl
mov
rcl
add
add
aaa
mov
out
cmpb
mov
adc
iret
incb
cmp
dec
pop
and
enter
sahf
xor
mov
push
mov
cmp
sub
lds
les
pop
in
ret
hlt
lret
cld
add
push
pop
sahf
mov
pop
xchg
outsl
pop
daa
outsl
adc
jb
shl
call
adc
outsb
jns
push
lcall
cs
rcrb
mov
mov
test
sub
or
orb
ss
inc
repz
rcrl
in
push
push
adc
jbe
jl
pusha
or
scas
mov
cmp
mov
out
lea
push
out
lea
mov
cmp
outsb
sub
inc
sbb
or
gs
fidivl
mov
xchg
hlt
mov
ss
mov
push
in
pusha
dec
out
jae
insl
xlat
mov
pop
inc
scas
pop
js
sbbb
mov
xchg
xchg
loopne
cld
push
sbb
cwtl
daa
push
hlt
push
mull
loope
call
lods
jp
cli
xchg
pop
loope
or
push
es
loopne
pop
lcall
sub
mov
mov
adc
xchg
lods
lods
inc
push
leave
jne
fwait
xor
sahf
inc
mov
pop
add
sbbl
push
mov
outsb
shll
sub
xchg
insb
cmp
insb
ss
cmp
jg
cmp
sub
adc
aad
fdivl
mov
fisttpll
pop
mov
faddp
mov
rol
pop
mov
mov
xor
cli
push
fs
ljmp
or
les
les
push
lods
and
int
into
fnstcw
enter
sbb
decl
iret
inc
fnstsw
mov
push
mov
test
mov
fstpt
add
outsl
jnp
popa
push
nop
rcl
adc
jmp
or
pop
dec
in
dec
pop
sub
fs
sub
cld
js
inc
dec
popf
test
dec
in
roll
divb
cwtl
pop
xor
ljmp
inc
or
es
push
jmp
mov
lea
pop
mov
mov
test
cltd
push
cmpb
je
fistps
mov
scas
fisubrs
xchg
dec
rorb
jo
pushf
out
push
or
cmp
pop
stc
mov
cmp
and
cmp
lock
dec
or
xchg
in
add
sub
rcrl
enter
fwait
les
adc
shld
cmp
insb
loop
imul
lret
iret
mov
mov
les
fisubl
pop
cmp
jae
adc
inc
imul
adc
sub
lea
lods
or
mov
lahf
and
daa
outsb
mov
shrb
movsl
roll
cmpsl
sbb
xchg
or
dec
mov
fcmovne
xchg
mov
or
mov
pop
mov
shlb
push
bound
sbb
ficomps
sbb
ficompl
pop
dec
out
push
pop
aam
mov
pushf
mov
daa
or
mov
in
call
cmp
out
hlt
js
call
adcl
cltd
fwait
mov
movups
sub
cs
dec
nop
insl
adc
mov
rorb
adc
xor
jp
fstl
mulps
mov
cmpsl
push
or
inc
repz
fisubs
push
lea
sub
dec
test
add
mov
xchg
mov
loopne
mov
and
fnstsw
pop
jg
inc
push
test
mov
rorb
sarb
sarl
sub
repz
loope
clc
push
pop
lods
cmp
fdiv
arpl
lret
mov
and
das
cmpsb
pop
mov
outsb
xor
sahf
movsb
test
sub
adc
dec
and
orb
xchg
into
push
mov
mov
adc
fistl
insl
xor
cli
xchg
pushf
add
inc
or
mov
inc
in
jge
sub
cmp
cmpsl
pop
inc
call
mov
loope
push
push
iret
push
ljmp
inc
lods
jnp
add
call
scas
cmp
push
cli
jae
mov
push
push
in
cmp
cmp
shll
xor
pop
adc
xchg
stos
daa
sub
lds
xchg
outsl
fdivrl
loope
push
mov
fdivrs
cltd
and
sub
add
call
xlat
das
adc
mov
xor
shrb
pop
push
incb
scas
ljmp
jmp
and
adc
cld
outsl
int3
mov
sti
pop
data16
mov
xor
sub
mov
repz
outsl
jns
fs
sbb
pushf
jle
dec
mov
sbb
cld
cmp
sbb
leave
stos
es
clc
jae
pop
mov
ret
scas
and
pop
mov
mov
in
and
sbb
inc
xlat
ret
cmp
icebp
call
or
aas
aas
jecxz
push
adc
or
mov
out
dec
sbb
mov
enter
inc
call
popa
or
test
mov
dec
push
in
scas
jbe
mov
ret
and
ret
sbb
mov
push
jne
inc
push
mov
lock
inc
out
jl
dec
shl
dec
xor
xchg
insl
aaa
push
stos
lods
dec
fstpl
call
lea
add
jmp
lock
adc
dec
push
out
adc
add
mov
pop
xorb
sbb
pusha
iret
xchg
jb
sub
fcomps
pop
pushf
hlt
xchg
cmp
or
jno
icebp
cmp
fbstp
push
iret
aam
inc
clc
pusha
mov
ljmp
insb
sti
sbb
xchg
cli
jle
andb
push
xor
cltd
push
imul
sub
or
jbe
inc
in
or
in
adc
push
cmpsb
data16
sub
imul
aam
test
xchg
mov
push
pop
insb
test
test
mov
xor
adc
jns
sub
movsl
mov
xchg
adc
jp
imul
movsb
dec
push
fidivs
in
dec
testl
push
push
insb
xlat
mov
adc
push
scas
push
pop
lock
fdivrl
jge
lods
jae
sub
cmp
sbb
int
int
xor
in
mov
sub
sahf
lahf
xchg
in
pusha
mov
inc
xor
mov
add
add
mov
push
in
ds
xlat
mov
idivb
cld
test
mov
inc
lods
xor
jb
add
xor
movsb
jp
adc
js
ss
and
repz
adc
je
add
or
ja
shlb
popl
and
add
cltd
test
pop
and
add
cmp
in
scas
cmp
pop
add
in
jbe
and
xor
mov
loopne
in
push
jne
push
add
jl
xlat
hlt
jecxz
movsl
xchg
cmpsb
fnstsw
lahf
mov
adc
gs
sbb
in
sub
xchg
and
xor
inc
nop
mov
push
mov
xchg
xchg
aad
jb
sbb
jnp
lret
js
jno
xchg
fstps
in
adc
ret
repnz
inc
mov
cld
lcall
jecxz
mov
in
leave
push
in
cli
push
leave
pusha
xor
cmc
xchg
sti
adc
mov
pop
xor
bound
mov
aad
pop
unpcklps
mov
aas
repz
push
adc
testl
es
jne
jecxz
inc
bound
adc
or
pop
dec
movsb
hlt
inc
xlat
and
push
insb
js
push
jl
in
jo
sti
lods
lret
or
push
ficoms
xor
test
xor
cmp
jne
out
shll
mov
subb
scas
push
pop
jmp
jne
jns
cmp
mov
jge
xor
clc
enter
shl
shll
pop
adc
loop
sbb
dec
fisttpl
add
stos
aad
jb
mov
hlt
std
insl
hlt
mov
cmp
sub
clc
nop
add
cltd
adc
mov
cmpsb
mov
ret
test
lods
mov
mov
adc
mov
negb
ds
clc
rol
xchg
jb
mov
int
rclb
cmp
jmp
ret
cmpsb
cmp
xlat
mov
xchg
popf
xlat
icebp
ret
sub
mov
lret
scas
sbb
or
data16
lds
xchg
mov
mov
div
movsl
xchg
daa
mov
dec
scas
inc
jge
sti
es
std
jae
fwait
mov
and
jge
cli
xchg
mov
repz
jbe
xchg
ret
pop
mov
repnz
shrb
mov
jp
jmp
cmpl
outsl
das
push
lods
pusha
lret
icebp
dec
je
mov
push
and
mov
ror
xchg
mov
fwait
cmp
fwait
mov
int3
xchg
mov
and
dec
bound
movsbl
sahf
jbe
jmp
push
ljmp
jno
in
cmp
mov
adc
inc
decb
push
push
call
mov
jno
pushf
pop
and
mov
outsb
mov
jo
push
arpl
fisubl
cmpsl
adc
into
stos
and
adc
mov
in
ret
xchg
je
cmp
sub
mov
pop
dec
add
loopne
mov
lcall
lock
pop
lods
and
shlb
ret
outsb
push
and
jns
inc
or
add
mov
sahf
and
out
xor
out
fistpl
movsb
jecxz
jb
movsl
dec
push
fisubrs
inc
in
in
inc
fidivl
and
aad
mov
lahf
loopne
xchg
cltd
mov
dec
sub
xchg
ret
test
jo
in
out
outsl
mov
iret
mov
das
push
xor
pop
cmp
sbb
movsl
js
ffree
xchg
sub
sub
mov
push
and
es
xlat
scas
adc
jne
mov
into
xchg
lods
fwait
test
call
xor
iret
sub
xchg
lods
or
push
jnp
pop
cmp
testl
repz
cltd
and
sbb
std
dec
cwtl
push
push
mov
ret
jp
js
inc
in
cltd
pop
dec
mov
mov
sbb
cwtl
pop
dec
jns
stc
ds
lea
sahf
xor
cwtl
lret
cld
mov
iret
mov
pop
hlt
or
cmp
add
push
mov
pushw
mov
aas
loopne
in
xchg
push
ja
xorb
iret
xchg
subb
mov
push
stos
pop
jae
mov
out
add
outsb
adc
mov
sbb
aas
inc
and
jae
stc
lahf
out
repz
cmp
pop
outsb
add
xchg
decb
clc
test
lret
jg
push
jbe
dec
test
mov
sti
inc
xor
xorl
enter
dec
jecxz
push
pop
add
ljmp
push
je
jg
mov
lret
pop
adc
mov
les
gs
mov
outsl
stos
fucomi
pop
jae
inc
xlat
icebp
mov
cmpsl
add
cmpl
jge
in
mov
iret
push
arpl
rolb
test
outsl
mov
lock
testb
mov
dec
jp
pushl
sbb
ret
cmp
call
or
or
js
cwtl
movsl
sbb
and
inc
incw
dec
cmp
xchg
pop
push
sbb
nop
stos
inc
pop
sub
add
int
stos
js
cmpsb
testl
lds
dec
jecxz
or
into
into
ret
jo
addr16
mov
call
addr16
mov
insl
popf
inc
add
mov
adc
repz
dec
dec
cmp
jns
jne
mov
xchg
xchg
out
sbb
adc
cltd
sub
movsl
sti
hlt
jmp
imul
roll
insb
adc
push
lahf
arpl
add
bnd
insb
test
push
sbb
sbb
cmp
cmp
inc
push
or
pop
hlt
stos
int
jae
js
pop
inc
pop
inc
stc
sbb
mov
dec
cwtl
das
jge
xchg
sbb
xor
push
imul
js
lahf
cltd
lods
imul
test
aas
jge
nop
inc
clc
mov
movsb
bound
in
mov
ds
idivb
cmp
cmp
push
jnp
imul
popf
inc
xor
xchg
or
rorl
fstpl
repz
icebp
pop
testl
xchg
loopne
ret
inc
ret
pushf
into
cmp
andl
dec
or
mov
jns
divl
fs
mov
xchg
lret
sub
push
add
mov
nop
sub
mov
push
shll
sbb
jbe
lret
out
cmp
push
adcb
lahf
or
cmp
aad
enter
cs
pop
addl
or
loopne
add
ljmp
fistl
mov
cmp
jnp
sub
ss
add
addb
sub
jno
dec
xchg
cmp
ret
mov
test
fs
adc
out
aaa
push
sub
fiadds
mov
adcl
push
data16
loop
arpl
cmpb
mov
jmp
xor
push
int3
and
pop
push
jae
shlb
into
pop
xor
inc
cs
clc
cmp
fmul
mov
test
gs
daa
es
jnp
pushf
xor
fcmovnb
mov
add
mov
dec
mov
and
icebp
and
imul
aad
pushf
mov
sahf
movsb
mov
cli
bound
push
int3
add
maskmovq
loop
movsl
pop
add
pop
hlt
lods
jns
xchg
in
dec
jnp
jg
pop
mov
mov
cmp
push
lret
cmpsl
arpl
inc
dec
and
sbb
push
sbb
fdivl
mov
jg
lods
es
pop
mov
inc
jae
pop
cli
mov
in
pop
shlb
int
pushf
daa
xchg
scas
mov
jo
repz
daa
cmp
int3
bound
dec
popa
push
stos
mov
inc
arpl
xorl
mov
scas
add
mov
add
push
lods
sub
das
inc
imul
push
test
mov
rcrb
in
sbbb
fmul
xchg
btc
jge
js
shlb
mov
xchg
and
mov
push
les
divl
in
es
xor
inc
inc
and
xchg
out
int3
test
lcall
popa
int
push
ja
lods
push
iret
outsl
jmp
rcrb
mov
xchg
and
sti
xchg
jle
cmpsb
les
fcompl
jae
or
inc
and
stos
jbe
and
sub
fs
sub
repz
push
sub
mov
inc
out
adc
jb
insl
clc
loopne
enter
push
inc
mov
xchg
imul
mov
aas
shrb
push
xlat
repnz
pop
movsl
aad
pop
lods
dec
loope
test
insb
jae
xchg
mov
push
mov
mov
cmp
imul
xorb
push
adc
out
gs
jecxz
ss
mov
dec
xchg
push
mov
out
inc
fnstenv
pop
and
movsl
cwtl
lods
and
int
xor
push
int
adc
xchg
xchg
jge
add
out
pop
xchg
addr16
fldt
xrelease
xor
dec
xlat
inc
cmpsl
ds
iret
mov
jb
cld
sbb
and
xchg
add
push
xchg
mov
int3
mov
jge
xrelease
ljmp
fdivrs
inc
pop
test
pop
mov
mov
cmp
movsb
mov
aam
cld
pop
jo
push
out
jge
sbb
mov
and
inc
lcall
mov
aaa
mov
insb
xor
push
inc
test
shl
or
pop
or
subl
adc
dec
enter
sahf
pop
rcr
notl
or
xor
jnp
cmpsb
out
add
jp
pop
aas
sbb
incl
stos
push
test
faddl
xor
and
cmp
push
fimull
or
jl
pop
shlb
xor
enter
and
push
insb
je
push
outsb
dec
and
pop
pop
cmp
mov
mov
push
aad
inc
jmp
std
xor
add
fucomip
and
lods
aas
clc
add
and
mov
lret
inc
sbb
rol
xor
loop
mov
rcll
and
mov
push
test
lret
mull
mov
add
sub
sbbl
insb
or
cmp
in
and
dec
mov
mov
jp
jb
mov
stc
int3
and
push
push
lods
and
enter
mov
loopne
mov
push
scas
out
mov
in
std
addr16
xor
xchg
sub
icebp
andl
xchg
out
add
inc
xchg
push
loopne
out
adcl
lock
jnp
push
mov
jnp
and
clc
setae
stc
pushf
add
xor
jnp
int3
inc
sti
mov
adc
out
jns
dec
xor
pop
fs
push
insl
cmp
mov
aas
xchg
divl
inc
or
mov
mov
les
cmpsl
cmp
out
aaa
mov
test
pop
lods
hlt
add
jmp
insb
lds
stos
rolb
adc
push
fucomp
in
cltd
inc
loope
test
jle
lahf
gs
cmp
addb
inc
cld
push
and
add
das
je
imul
cmpsl
push
xlat
xor
xor
xor
shlb
int
movsb
mov
ret
adc
dec
pop
imul
dec
ficoms
test
push
imulb
stc
ljmp
or
xchg
out
mov
or
popl
loopne
xchg
roll
sbb
mov
and
leave
cwtl
cmp
xchg
mov
leave
mov
ficoms
pop
cmp
mov
mov
and
xchg
xor
adc
or
lcall
repnz
push
mov
xchg
fldt
push
mov
add
sahf
gs
add
aad
jp
cmp
enter
jecxz
dec
stos
pop
faddp
daa
js
ds
fdivl
pop
sarb
iret
mov
pop
decb
out
xor
dec
icebp
sbb
inc
popf
aam
add
xchg
test
jo
add
xchg
aaa
lret
addr16
and
cltd
frstpm(287
test
mov
mov
stc
xchg
iret
sub
enter
pop
stc
inc
jns
add
fwait
push
fwait
cmpsl
fidivl
lods
mov
pop
jae
jns
mov
imul
mov
outsb
rol
call
mov
dec
mov
and
mov
test
lret
and
test
pop
iret
xchg
leave
je
jecxz
xlat
mov
mov
movsl
dec
sbb
sbb
test
out
test
leave
gs
jne
subb
mov
movsb
popf
loop
iret
lds
adcb
cmpsl
sbb
push
pop
in
movnti
int3
cmpsb
or
ror
or
shl
inc
push
cmpb
ljmp
iret
test
cmp
push
fists
test
push
lret
iret
cmpb
xor
leave
pop
int3
pop
subl
pop
movsb
out
ja
shrl
dec
add
mov
xchg
push
inc
imul
jge
cld
push
sub
cli
cmp
dec
fbld
ljmp
rcrl
cmp
shll
mov
cmp
fwait
cmp
int
out
mov
fcompl
movsb
das
cmpsb
lcall
test
in
fdivrl
jmp
orl
push
fidivl
faddl
popa
jns
aam
lret
stos
push
cltd
out
mov
mov
loop
out
or
fmuls
xor
pop
sbbb
rcr
daa
popl
add
ds
and
mov
into
test
xchg
outsb
sahf
lods
imul
inc
and
mull
xchg
or
jmp
or
jl
fmull
sbbl
sbb
les
push
dec
pop
jns
pusha
or
mov
aad
mov
ljmp
push
or
jp
sbb
test
sbb
cwtl
xchg
inc
ljmp
clc
sahf
adc
out
xor
jg
pop
and
sub
dec
and
loope
jmp
insb
add
inc
fidivrl
aad
and
mov
rcrl
subl
adc
incb
dec
cmp
pop
test
mov
out
adc
sbb
xchg
jo
add
shlb
lret
clc
int3
mov
and
pop
sahf
rclb
mov
es
aaa
mov
pushf
mov
fwait
cmc
insl
bound
mov
inc
mov
sbb
jmp
fisubs
pushf
int3
xor
pushf
in
xchg
pop
andb
mov
mov
cs
and
push
dec
out
push
aas
fildl
mov
adc
std
test
add
mov
out
jns
outsl
shll
jle
iret
scas
repnz
dec
lods
ljmp
scas
add
fildl
popa
loop
in
leave
outsl
enter
mov
lret
jle
xor
popa
jnp
iret
shrb
inc
insl
xchg
xchg
push
fisubrs
xchg
imul
push
cmc
fistpl
incl
ficomps
std
inc
cltd
insb
cwtl
sub
mov
jne
outsl
sbb
les
lret
xchg
mov
inc
dec
movsl
add
cmp
aad
inc
subb
sahf
out
sti
sbb
sub
xor
iret
fcmovne
sbb
sub
fsubrs
nop
jno
and
test
or
in
addb
nop
pop
mov
lcall
sti
in
add
mov
repnz
sbb
packuswb
xchg
ljmp
jb
xor
cld
outsl
mov
push
out
popa
inc
je
pusha
into
cmp
into
imul
arpl
cmpsb
mov
mov
and
pop
daa
pop
sub
sub
int
jg
fwait
xchg
sub
xchg
rcrb
xlat
sub
inc
lahf
cmp
pop
mov
jp
int3
inc
ljmp
xor
mov
in
ja
clc
jg
imul
mov
xorb
movsb
dec
iret
scas
mov
xor
mov
pop
rolb
mov
mov
out
repz
arpl
xchg
and
scas
mov
add
fldenv
popf
add
jbe
sub
pop
int
out
push
imulb
pop
cmp
scas
jno
push
repz
out
enter
inc
test
or
imul
repz
cmp
mov
int
mov
add
lret
and
cld
or
jl
mov
jle
or
iret
mov
cmp
xor
inc
jns
aaa
scas
pusha
ss
add
aad
add
aad
in
jecxz
pop
mov
push
popf
pop
or
jle
and
arpl
mov
leave
dec
in
push
xor
xlat
subl
and
pushf
scas
pmaddwd
or
movsl
into
fsub
xchg
bound
and
cmp
imul
orb
lret
sbb
and
mov
dec
jno
dec
imul
dec
sarl
imul
inc
mov
lock
insl
inc
adc
mov
lret
jo
lock
sarb
lods
lcall
push
sbb
popf
je
jmp
mov
pop
cld
pop
stc
je
imul
mov
leave
mov
cmpsb
repz
mov
int
jno
pop
decl
adc
push
cwtl
lds
movsl
in
clc
aam
xor
push
inc
xor
add
cltd
lods
or
test
cs
xchg
jecxz
cld
adc
add
and
cld
or
mov
jge
mov
icebp
out
jecxz
in
dec
xor
mov
outsb
fucomp
jg
add
sub
call
loop
cmp
pop
ds
lcall
mov
jno
inc
mov
mov
pop
inc
data16
sbb
daa
leave
in
loope
in
testb
dec
inc
std
shl
test
or
arpl
mov
jg
pop
mov
arpl
stos
imul
shrb
push
adc
mov
push
pop
imul
mov
add
lods
jmp
push
imul
or
cwtl
inc
jle
sub
in
pop
test
cli
dec
test
adc
dec
test
inc
push
fwait
cmp
repnz
test
adcl
add
call
fdivl
push
cmc
sbb
adc
add
fnsetpm(287
fiaddl
jmp
push
jns
dec
pop
cmp
xchg
adc
call
in
mov
pop
sub
out
lds
dec
mov
int3
and
mov
push
xchg
or
in
push
sbb
xor
out
sub
in
test
cmp
in
lcall
pushw
inc
fsubrs
pop
pushf
jg
dec
xor
rol
loop
jle
test
cmpxchg
and
mov
std
lahf
and
inc
fldt
jmp
stos
nop
shlb
aaa
out
movsl
notb
xor
push
xlat
mov
xchg
mov
cmpsb
call
sbb
inc
call
dec
lcall
fwait
je
stos
inc
insb
iret
fildl
fistl
test
js
push
xchg
das
xor
addr16
push
push
dec
fimuls
dec
out
bound
xchg
subb
xchg
add
lods
ret
cmp
mov
push
xor
icebp
movsb
sub
jmp
je
cmp
mov
sbb
sbb
std
inc
mov
push
push
add
out
xor
sti
and
inc
in
stos
sub
js
xchg
inc
jmp
out
imul
adc
jge
rcl
sub
hlt
pop
divl
loope
in
jb
adc
xchg
inc
pause
sub
fisttps
adc
sbb
push
hlt
or
aas
mov
sbb
cmp
addl
push
js
loopne
sbb
mov
mov
fucom
and
loope
adc
leave
enter
cmpl
cmp
cmp
mov
inc
mov
xchg
add
inc
add
das
mov
sbb
andb
push
leave
adc
add
pusha
in
cltd
cmp
ss
inc
jo
jns
xor
push
sbb
mov
outsb
sbb
mov
push
push
pop
dec
pop
testl
pop
sub
jbe
dec
fwait
mov
or
xchg
popa
shl
arpl
mov
cmc
rclb
push
repz
lds
push
sbb
movsb
xlat
add
lds
mov
fldenv
stc
jge
push
mov
mov
jo
push
out
fcoms
pop
mov
add
jg
scas
sbb
mov
mov
je
inc
push
xor
imul
subl
divl
mov
sarb
mov
subb
mov
lcall
int3
in
loope
adc
jns
inc
cltd
pop
fucomp
sub
inc
xor
push
or
and
jb
dec
sbb
push
and
pop
dec
in
aas
out
popa
ja
jle
sbb
fsub
into
sbb
movsb
les
fnsave
cmp
jns
fidivrs
jae
sbb
push
in
dec
in
fcmovnu
out
pop
lds
mov
add
mov
into
jg
jns
mov
into
mov
ds
sbb
dec
or
cmc
cs
inc
mov
cmp
xor
mov
mov
pop
dec
mov
xor
add
lock
insb
xchg
jge
fstpl
lret
sub
inc
adc
jp
lret
xchg
movsb
insb
ret
dec
or
cld
push
xor
bswap
sub
inc
imul
adc
shll
hlt
popf
dec
and
sahf
and
mov
jge
jnp
push
lods
dec
dec
fisubs
jne
inc
cmp
inc
out
notl
cmp
jo
aaa
cs
repnz
or
icebp
jge
jnp
movsl
call
and
add
xor
mov
out
gs
jmp
add
pop
add
pop
stos
mov
fs
jmp
mov
in
push
rcrl
fstpl
jge
in
shrb
mov
add
pop
aas
add
scas
mov
dec
mov
out
insl
sti
sbb
dec
js
mov
sbb
and
mov
adc
test
xchg
fnsave
ds
push
test
xchg
jp
or
cmp
and
mov
test
add
lret
dec
dec
push
push
test
adc
cltd
and
xchg
out
fwait
loopne
rclb
test
and
push
xlat
std
jo
fbstp
jno
cmpsb
sahf
sub
xchg
inc
mov
push
scas
cld
or
es
add
testl
dec
pop
xor
shrl
fisttpl
arpl
lcall
xor
push
dec
push
addl
cli
and
xor
leave
inc
rol
in
daa
sub
ret
adc
push
inc
xchg
scas
jns
sbb
xchg
or
xor
popf
dec
jmp
mov
lock
ss
xchg
insl
add
xor
int3
push
in
sti
lcall
or
in
cmc
cmp
push
adc
inc
cld
pause
mov
stos
call
inc
jb
cltd
mov
fwait
aas
repnz
hlt
mov
loopne
lds
push
xlat
push
xchg
cmp
jl
movl
inc
test
xchg
push
and
adc
loopne
mov
insb
inc
in
pop
rcrl
mov
mov
lods
rcll
in
movsb
call
test
fcomps
int3
loop
pushl
mov
xchg
push
mov
xchg
in
iret
popf
xor
setbe
in
in
inc
adc
pop
gs
jecxz
cmp
in
hlt
mov
add
push
popf
test
xchg
mull
jne
repnz
mov
bound
sub
xchg
mov
lcall
mov
lods
or
lds
popa
and
js
jle
mov
repz
dec
cmp
and
xor
pop
push
or
dec
fmull
cmc
adc
fisubrl
and
mov
mov
outsl
adc
scas
pushf
sbb
mov
inc
clc
stos
jmp
fcmove
imul
dec
mov
dec
int3
jl
mov
pop
sti
cmp
mov
fs
mov
inc
mov
jae
sub
dec
push
roll
lret
push
sub
inc
arpl
shlb
out
inc
cmp
mov
jecxz
sub
loop
pusha
ret
rcrl
cmc
inc
inc
cmc
bound
and
ss
push
lret
hlt
out
jmp
inc
push
inc
add
xor
dec
sti
ret
lea
stos
mov
daa
pop
out
dec
pop
les
lods
adcl
lods
add
push
mov
push
inc
xlat
addr16
mov
inc
fmull
ror
leave
ss
or
push
loop
cmp
shrb
pop
or
cli
add
push
pop
rcl
and
pop
jecxz
lea
pushf
mov
add
and
push
movsl
pop
imul
ljmp
push
mov
movl
das
xor
dec
push
sti
stc
push
add
mov
lods
loopne
movsl
mov
inc
adc
roll
add
xor
lods
mul
push
mov
leave
test
push
stc
xor
push
adcb
dec
dec
incl
jo
jp
jb
pop
xor
mov
insl
mov
out
adc
add
lret
or
add
sbb
lret
ret
sub
jne
jle
add
adc
std
lds
push
cmp
push
sbb
mov
aaa
jge
test
popa
xor
mov
inc
sti
and
ja
mov
lret
adc
dec
sbb
sub
pop
jno
xchg
add
adc
rorb
sub
cmpb
sub
in
aam
fsts
cmc
fldcw
sbb
ret
inc
inc
push
neg
mov
rolb
mov
int3
pop
cli
js
or
test
aas
adc
jne
imul
push
inc
data16
jmp
xchg
mov
cmp
mov
repz
ds
mov
push
aaa
mov
imul
xchg
xchg
xchg
and
dec
push
mov
cmp
pop
insb
popf
icebp
pmulhw
cmpsl
addr16
test
or
dec
rcrb
sbb
xchg
out
sbb
je
pop
jne
mov
pushl
add
hlt
leave
dec
scas
in
or
xchg
arpl
sbb
push
cli
test
popf
mov
cld
xor
ja
es
scas
jmp
jb
test
mov
ljmp
mov
nop
sub
mov
cmp
cli
mov
xor
outsb
in
cli
push
cltd
lahf
scas
test
clc
jge
or
mov
shlb
ret
sarl
and
and
mov
test
push
in
inc
adc
popf
xchg
addr16
xchg
daa
pop
xorb
jb
scas
jp
dec
addb
add
xchg
push
rcll
addb
xorl
push
popf
and
inc
jecxz
addb
and
xchg
shl
aaa
movsb
or
push
jne
xchg
or
lods
arpl
pop
inc
and
jmp
aas
jl
jno
ds
cwtl
jo
push
test
test
mov
pop
xor
jp
mov
mov
xor
add
sub
scas
lods
xor
adc
jge
dec
add
out
lret
xor
push
adc
mov
inc
pop
jb
sbb
enter
imul
jae
ja
loope
mov
fwait
mov
pushf
std
jecxz
loopne
ljmp
push
fxch
mov
rolb
aad
adc
and
xorb
fldt
jbe
fistl
decl
sub
add
in
arpl
xchg
jo
lds
sub
cmp
jmp
inc
nop
inc
iret
fs
aad
fsub
enter
outsl
mov
add
hlt
inc
cmp
ja
mov
mov
sahf
nop
jl
stos
fnstenv
rol
jle
mov
adc
adc
ja
pop
sub
inc
jo
inc
cmc
jb
xor
loope
mov
adcl
xchg
adc
lock
xchg
pop
inc
xor
jge
dec
out
aaa
pop
cmc
push
sub
sub
sub
ja
ret
imull
or
test
mov
xor
add
stc
popf
or
icebp
pextrw
cpuid
jecxz
js
fimull
fnstsw
pop
cmp
icebp
out
movsl
dec
cltd
jle
sbb
mov
jnp
movsl
push
es
pop
or
sub
jge
inc
fstps
cmpl
rol
mov
movsb
out
mov
dec
sbb
fisubl
jg
stos
lahf
jb,pt
pop
and
loopne
fs
sub
pop
adc
loop
jno
mov
shl
cmp
or
je
push
adc
subb
mov
mov
imul
out
shl
adc
int
out
imul
dec
rcr
adc
mov
xchg
movsl
mov
add
jns
sarb
test
insl
adc
scas
cwtl
sbb
mov
lahf
nop
and
ja
daa
mov
or
jo
lcall
leave
jo
jae
ret
insw
adc
push
xor
testl
lods
xchg
stos
jae
push
mov
adc
sbb
shrl
loopne
jecxz
push
fimull
push
imul
loopne
push
add
das
data16
lds
negb
cmp
imul
subl
sbb
sahf
call
mov
cltd
shl
outsl
sub
shrl
into
mov
sub
xor
add
lea
or
pop
scas
xor
pop
insb
xor
push
je
cmpsl
ds
jb
leave
cmp
pop
popf
std
inc
iret
and
mov
mov
push
fisttps
xor
loop
fisttps
bound
das
shll
jmp
ljmp
repnz
outsl
lahf
or
mov
push
mov
or
xchg
xor
into
je
ja
sub
test
out
sbb
aad
insb
outsb
jne
adc
jge
in
mov
test
in
pop
adc
shll
mov
pop
outsl
test
lods
ret
mov
hlt
or
xchg
sbbl
movsb
mov
addb
xor
les
in
xchg
stos
push
sahf
add
xor
mov
fidivs
jb
stos
pop
inc
push
ljmp
mov
cmp
sbbl
xchg
adc
mov
xchg
push
pop
mov
out
aam
popa
xchg
sub
adcb
jne
push
pop
pusha
out
push
xchg
mov
bound
push
iret
sbb
xchg
arpl
leave
pop
ds
xlat
das
ja
cmpsl
cld
jae
jbe
cltd
das
jmp
jmp
or
lea
jbe
xchg
cmpsl
insb
out
cmpsl
ret
rcrb
push
mov
jne
ja
cmp
add
out
xor
cmp
sub
push
pop
jae
and
mov
mov
int
in
decb
in
mov
fnstsw
add
mov
and
into
add
mov
mov
cli
xchg
xor
sub
cmp
and
out
mov
int3
out
fldenv
mov
push
jmp
add
jo
lret
cmpsl
in
fucomi
sbb
fwait
sub
jl
enter
insb
jnp
pop
pop
test
pop
lds
pop
loopne
mov
fistl
dec
movzwl
insb
jp
std
lods
adc
les
jne
test
lret
loopne
data16
imul
xchg
negl
rcrb
hlt
dec
pop
out
lret
inc
int
test
push
mov
jne
dec
and
pop
push
dec
insl
inc
mov
mov
fs
std
xchg
lods
test
sbb
add
data16
loopne
pusha
pop
aaa
int
mov
inc
jbe
bound
mov
dec
pop
push
lcall
xchg
in
dec
lods
push
loope
imul
dec
mov
mov
lcall
fimuls
cwtl
das
cmp
movsb
aaa
adc
mov
adc
les
jmp
nop
cld
xchg
ss
pop
icebp
push
sbb
mov
sub
mov
rorb
cmp
mov
sub
aas
test
fisubrs
mov
imul
cmp
imul
rolb
xchg
mov
mov
jnp
mov
jmp
jo
enter
fsubr
mul
or
sub
pop
cmpsl
dec
cmp
js
sbbl
xchg
dec
adc
js
sbb
xor
sub
sub
ljmp
xchg
pusha
fcmovnb
xor
sbb
test
shll
ljmp
or
push
cmp
pop
sub
mov
pop
sahf
int
repz
stos
pop
pushf
jg
sbb
les
jecxz
cli
mov
addr16
sahf
ja
sbb
mov
idivb
stos
loop
ss
mov
xor
loopne
in
mov
sub
mov
loopne
out
adc
push
mov
fpatan
xor
cmc
push
into
lods
into
js
adc
xchg
sub
pop
je
cmc
inc
mov
xchg
xchg
repz
movsl
mov
push
add
push
jbe
imul
mov
stos
xor
call
test
push
dec
sub
dec
cmp
imul
daa
js
sub
repz
jmp
je
inc
dec
aad
mov
cmp
pusha
xchg
push
leave
lahf
add
xor
xchg
lds
aas
jns
jno
jmp
add
into
dec
push
leave
pop
mov
mov
aam
mov
add
mov
mov
cmp
outsb
ret
or
leave
push
lods
jo
mov
or
je
mov
mov
into
out
jno
lea
xchg
dec
call
pop
in
clc
dec
data16
lret
xchg
sub
clc
jg
dec
loop
popf
dec
in
xchg
jl
cld
insb
sub
jne
push
lahf
sub
push
fcompl
fcmovb
ljmp
loope
sub
xor
scas
pop
mov
jl
mov
cld
popf
pop
test
mov
cwtl
cmc
inc
sbb
stos
testb
cli
test
fcoms
addl
add
test
mov
inc
fnsave
mov
jnp
xor
xchg
lcall
pop
mov
in
xor
add
aas
add
push
cmp
inc
push
mov
sbb
sub
or
and
cmpsb
mov
inc
je
divb
xlat
jnp
pop
subl
cmp
push
mov
out
xchg
shlb
std
icebp
nop
jno
add
cmp
mov
add
adc
sub
pop
or
mov
lds
jle
cld
cmp
xor
gs
sbb
lcall
cs
dec
xlat
vdivsd
lret
popw
mov
cmp
inc
pop
in
popf
fmul
or
pusha
scas
out
imul
sub
mov
push
in
decl
cmpsb
push
lock
shlb
insl
adc
int
sbb
lahf
inc
or
sbb
and
push
inc
shrl
add
leave
push
sbb
mov
lahf
lods
jge
int
stc
and
adc
mov
dec
xlat
jp
hlt
jecxz
fwait
pop
insb
int
aam
mov
and
xchg
ffree
sbb
lds
cs
sti
scas
inc
sub
lea
sbb
and
fldl2t
add
jno
xor
jb
arpl
push
jae
pop
mov
scas
data16
loopne
es
mov
ret
or
sub
push
fsubrp
lods
or
popf
xor
incl
jg
cmpsl
add
pop
sub
jle
xchg
je
lcall
and
push
xchg
push
aad
into
jo
add
dec
bt
mov
repnz
insb
ret
lea
movsl
inc
add
dec
dec
insl
dec
and
je
add
test
mov
ds
scas
out
dec
out
push
mov
sbb
stos
scas
inc
dec
cmp
arpl
cmp
jecxz
lods
sub
cmp
clc
cmp
mov
movsl
and
xlat
pop
cmp
in
mov
fldt
aad
and
scas
rorb
jmp
js
mov
mov
sbb
ret
data16
jnp
sub
in
cmp
popf
lods
out
adc
pop
lock
cltd
hlt
cmp
add
in
dec
dec
or
in
out
out
push
hlt
fwait
add
sti
sub
shl
enter
loopne
test
hlt
sahf
mov
sbb
cmp
mov
adc
mov
test
repnz
sub
mov
xor
iret
loopne
inc
xlat
jne
sbb
or
idivl
sbb
pop
rcrl
repnz
push
jo
loope
scas
icebp
ficompl
movsl
mov
jl
clc
lods
mov
data16
push
and
pop
jg
test
sub
xlat
pop
outsl
lret
ficoms
fstl
stc
push
xchg
add
cmp
lea
stc
adc
adc
shrb
loopne
cs
inc
push
pushl
mov
adc
dec
and
or
shll
inc
imul
in
pop
inc
sahf
jnp
xor
or
and
je
lcall
loopne
xchg
adc
outsl
mov
hlt
sub
in
mov
and
iret
sbb
or
mov
sub
imul
mov
pop
dec
outsb
fcmovnu
jno
xor
jbe
in
cwtl
xchg
pushf
xor
adc
arpl
das
jns
add
pop
out
mov
aas
popa
or
lcall
cmp
into
push
jo
fisubrl
sbb
movsl
mov
xchg
cmp
mov
jnp
imul
or
xor
pop
hlt
idivb
mov
jg
das
mov
or
mov
xchg
xchg
xlat
adc
test
xlat
cmp
mov
cltd
xor
repnz
push
nop
ror
mov
pop
sub
cmc
fimuls
int3
dec
push
dec
sub
cli
sbb
cmp
loopne
push
pop
push
cld
mov
cwtl
pop
test
ljmp
mov
jg
enter
sbb
outsl
jnp
pop
xor
shrl
dec
loope
enter
sbb
aas
xlat
bswap
cmpb
push
jne
int3
stos
aaa
shlb
addl
sbb
js
movsb
xchg
es
aas
xlat
mov
out
jl
push
scas
or
outsb
mov
cwtl
pop
nop
xchg
imul
stos
call
adc
addr16
jno
int3
mov
push
rcrl
outsb
jl
jae
stos
dec
cmc
push
adc
or
cmpsl
or
or
fsts
dec
mov
inc
mov
mov
dec
push
lods
push
orb
xchg
add
or
negb
cmc
inc
xchg
test
addl
push
pop
stos
or
push
xor
outsl
outsb
lret
ja
inc
add
jno
popa
loope
mov
stc
add
in
mov
or
sub
idivb
jle
lods
pushf
cmp
enter
popf
repz
out
cmpsl
jb
or
ja
in
nop
shll
mov
es
and
gs
mov
push
fbstp
xlat
loope
stc
std
push
lret
mov
xlat
cs
sbb
lahf
or
mov
fs
mov
sbb
mov
or
in
xchg
ljmp
and
fldln2
mov
mov
mov
fcompl
lahf
jp
push
inc
mov
mov
sub
aas
and
rcrl
push
xchg
repz
lods
scas
mov
cmp
fnstenv
ljmp
lret
xor
imul
mov
mov
or
and
adc
insb
pop
inc
xor
aaa
daa
push
enter
sub
xor
jnp
cs
andb
hlt
pop
or
push
fnstenv
xor
jle
test
cld
and
jp
jl
loop
lock
or
adc
lret
mov
data16
adc
into
pop
call
mov
loope
decl
jge
pop
icebp
cld
cmp
clc
stos
push
stos
fsubr
orb
cltd
add
mov
xor
jp
sahf
pop
aad
push
pop
imul
jge
jp
sbb
cmp
imul
mov
jg
inc
jmp
dec
xor
mov
cmp
das
mov
cmp
cmpsl
imul
xchg
imul
lods
push
xorb
dec
leave
jbe
sub
mov
scas
sbbb
mov
sbb
cmp
dec
pop
icebp
mov
fistpll
dec
pop
ss
inc
outsl
xchg
sub
mov
mov
dec
insl
sub
gs
pop
dec
pop
jns
in
test
inc
outsl
xor
test
mov
or
pop
xchg
pop
sub
mov
stos
mov
fisubrs
jae
mov
mov
dec
addl
jbe
sbb
lods
xlat
push
mov
into
and
cmpsb
mov
lcall
and
dec
in
orl
xchg
ret
lock
jecxz
lret
sub
lods
jbe,pn
insl
je
and
rolb
shll
jno
mov
lcall
mov
dec
or
push
sub
mov
inc
gs
fsts
mov
add
insb
inc
cld
pop
push
dec
jecxz
shrb
in
sub
adc
stos
out
hlt
and
add
leave
or
mov
xchg
in
test
pushf
xrelease
push
adc
mov
es
testb
clc
jg
or
cmpsb
stos
imul
jbe
push
stc
nop
xchg
inc
lea
repz
push
es
lahf
ss
imul
into
test
test
jae
dec
scas
insl
clc
fildll
add
push
mov
aaa
dec
and
pop
out
ret
ret
mov
pop
ret
lods
cmp
mov
sub
xor
xchg
sub
add
jmp
scas
ret
pushf
ret
mov
push
ja
dec
loopne
sbb
pop
push
cmp
scas
pop
adc
mov
mov
inc
jl
data16
sahf
insb
decl
stc
xchg
or
cli
inc
js
in
and
jns
scas
jl
xor
sarl
sub
inc
pop
or
pop
stc
nop
cmp
mov
ja
jmp
testb
add
or
cmpsb
cmp
inc
aaa
cmp
stos
push
dec
jae
out
leave
leave
test
xchg
xor
mov
jmp
push
and
data16
mov
ja
jmp
or
sub
xorb
sarl
fstpl
and
std
or
gs
mov
mov
push
inc
inc
mov
xor
ret
sbb
push
out
jns
or
adc
cmp
mov
aad
add
test
mov
aam
and
lahf
lea
mov
push
sbbb
dec
int3
fildll
out
cwtl
les
xchg
popf
dec
or
mov
popf
sub
sbb
adc
lahf
dec
test
cs
sbb
and
gs
mov
and
xor
jo
fsubrp
xor
cmp
xor
mov
stos
fcmovnb
pop
or
lcall
out
movsl
xchg
mov
push
pop
fsubrl
fldcw
ret
sti
popa
cmpsl
pop
out
pop
add
jbe
stos
popa
ficoml
je
cwtl
pop
push
aad
mov
mov
sbb
adc
push
and
and
ss
sub
jle
leave
mov
fbstp
bound
mov
ret
mov
and
int3
test
fwait
das
mov
cmp
cmp
and
les
jbe
jns
fistpl
push
clc
inc
or
jl
rcr
jge
cltd
pop
int3
dec
or
cmc
adc
aad
pop
add
push
addl
and
subl
pop
outsb
mov
lahf
mov
mov
xchg
jecxz
pop
hlt
rol
xlat
outsb
lds
cmc
gs
out
lds
repnz
fucomp
mov
inc
lods
fdivrp
sbb
add
sbb
mov
jp
fstpl
xchg
mov
sbb
insl
pop
xchg
xor
stc
mov
sub
ret
cmp
mov
sbb
inc
out
mov
inc
fldt
repz
bound
aad
mov
dec
dec
ss
sbb
add
dec
push
or
add
loopne
mov
xchg
shll
js
and
fsub
add
sbb
shll
mov
xchg
inc
pop
mov
repnz
into
jne
xchg
sub
outsb
jmp
mov
jns
push
xchg
lea
into
into
gs
push
or
mov
in
xlat
sub
mov
sub
inc
scas
cmp
pop
xor
cmp
lock
lcall
jnp
in
pop
mov
mov
aam
pop
inc
in
rolw
fistps
fisubs
test
push
repz
add
pop
xor
loope
push
pop
jno
in
jle
fildl
mov
out
ret
pop
xchg
xchg
fsubl
pop
daa
sarb
mov
int
in
adc
mov
sbb
sbb
popa
setg
and
inc
xchg
mov
push
loope
sti
iret
loop
inc
lcall
loope
rolb
test
cmc
aam
sub
jns
inc
mov
arpl
xor
imul
push
out
sub
leave
popa
adc
push
inc
xchg
stc
sbb
nop
daa
cmc
mov
xor
fcoms
or
add
sub
scas
nop
dec
or
jge
mov
xchg
popa
cltd
lret
jae
bound
mov
lea
push
aas
push
xor
xlat
pop
pop
mov
mov
dec
sbb
inc
dec
das
and
pop
pop
push
lods
mov
ret
and
cmc
mov
and
mov
mov
scas
pop
xor
jge,pt
mov
ja
mov
jmp
pop
pop
sbb
jbe
outsb
push
or
jae
mov
push
mov
aam
pusha
ret
and
xor
pop
ret
add
test
test
jnp
loopne
mov
cmc
inc
loope
pop
push
inc
inc
in
jl
ret
frstor
add
shlb
adc
sbb
rcrl
and
sarb
adc
sbb
xlat
pop
mov
or
hlt
arpl
sbb
aad
or
cmp
mov
inc
pop
aaa
push
test
or
stos
fwait
xor
ja
xor
fistpl
sbb
push
inc
pushf
mov
int
fiadds
imul
xchg
int
movsl
mov
xchg
repz
add
add
dec
testl
push
and
cli
push
adcl
pop
push
push
das
test
inc
dec
mov
stos
dec
mov
xchg
adc
add
sub
rol
outsb
mov
addr16
popa
mov
jb
in
lret
stc
sub
popf
mov
jg
xlat
imul
cmpsb
and
call
aaa
shll
fdivrs
fsubrl
leave
inc
mov
mov
test
dec
scas
pop
xchg
nop
sbb
outsb
xlat
stos
push
lcall
stc
rcr
inc
push
je
mov
js
in
xor
stos
imul
lea
pushf
stc
jnp
adc
notl
rcrl
jnp
icebp
lret
arpl
aad
and
adc
aaa
add
mov
shlb
sub
iret
ss
and
inc
in
push
je
rolb
lcall
in
les
xchg
ret
mov
mov
sti
jmp
pop
testb
cmp
mov
inc
in
lret
sub
pop
add
repnz
lcall
clc
push
psrlw
or
popl
mov
loope
or
inc
fistl
xchg
or
fwait
xor
movsl
cmp
mov
fstpt
or
jo
test
popf
xchg
outsl
jecxz
fildll
jbe
lea
xchg
inc
test
subl
and
pop
xchg
mov
arpl
sub
pop
jmp
insl
mov
cmp
mov
testb
inc
cld
mov
fimull
movsl
scas
gs
mov
dec
sub
cli
aaa
lods
add
adc
loopne
adcl
or
hlt
mov
pop
jmp
sbb
in
enter
aad
cld
shll
dec
sbb
cmp
add
fwait
mov
into
push
or
mov
sub
out
iret
std
xor
sbb
cmp
imul
repz
xchg
int3
insl
ja
mov
ds
sti
and
push
fimull
int3
fcoml
bound
cli
gs
sbbl
aad
lahf
ss
data16
lret
lret
mov
insl
data16
sbb
inc
ljmp
fwait
test
divb
pop
and
enter
insb
scas
and
out
push
loopne
sarb
mov
mov
in
test
adc
scas
out
jae
inc
push
adc
cmp
jno
add
data16
or
adc
push
lock
pop
and
cmpsl
cmpsl
into
fiadds
mov
cmc
push
xchg
repnz
fisttpl
pop
addr16
outsb
stc
lahf
lcall
hlt
loope
add
mov
int
ret
daa
in
cmpsb
in
push
fwait
adc
and
out
mov
repz
mov
mov
test
daa
xchg
adc
negl
mov
dec
mov
call
lods
inc
out
jle
cmp
mov
pusha
pop
sbb
push
xchg
andl
push
popf
jmp
sbb
test
and
mov
jl
push
data16
test
pop
pop
daa
sbb
inc
jne
sub
icebp
pushf
xor
inc
fdivs
cltd
enter
mov
fildl
mov
jmp
mov
push
emms
or
or
jge
push
add
aas
push
sbb
out
test
jns
cld
out
mov
push
popf
addr16
out
or
movsl
sub
rep
pushf
lds
idivb
mov
insl
in
mov
fdivs
or
lods
mov
ds
callw
outsl
mov
lds
rcrl
jg
fsub
fstl
mov
imul
insl
js
sahf
mov
adc
cmp
loope
jle
cmp
pop
insl
nop
adc
cmc
mov
in
add
out
adc
dec
insb
xor
mov
loope
mov
sbb
fcmovnb
in
mov
xor
dec
sub
sahf
scas
inc
repnz
push
mov
cmpb
add
stos
cmp
inc
gs
js
aas
mov
arpl
push
jle
dec
loop
and
add
xchg
push
adc
adc
aaa
jg
int
jmp
data16
add
flds
push
mov
es
jg
pushf
dec
push
mov
pop
mov
test
sub
pop
orl
sbb
aam
scas
lods
ja
dec
sbb
out
fidivl
in
lock
nop
jo
stos
jmp
xchg
sbb
dec
movsb
and
jb
popf
add
cs
sahf
or
sbb
mov
ret
jae
mov
fiaddl
mov
sub
push
pop
cmp
dec
xor
rcrl
fucom
dec
fbstp
add
test
cmp
test
cmpsb
cmc
fwait
and
adc
xor
inc
cwtl
jne
inc
jmp
mov
adc
scas
inc
jp
xorb
leave
fstl
leave
fldenv
sub
cmp
lea
xchg
hlt
and
fsubl
in
test
dec
repnz
jae
pcmpgtw
adc
clc
sub
jl
lret
testl
mov
push
cmpsb
and
icebp
rcrl
roll
push
xor
idivl
inc
push
dec
and
mov
and
inc
adc
inc
lret
sbb
aas
sbb
or
and
aad
pop
and
and
pushf
les
jno
sub
or
mov
mov
push
mov
cmp
jecxz
inc
inc
test
fsubrp
pop
cmp
jae
out
jle
arpl
jp
call
adc
addl
adc
dec
and
cmc
mov
shlb
mov
cmp
push
xchg
out
mov
mov
fistpl
repz
incb
and
insl
xchg
pop
fisttps
orb
inc
pop
icebp
ja
cmp
unpcklps
and
mov
pop
jne
mov
or
mov
add
xchg
mov
sub
mov
or
and
mov
sbb
xchg
ret
test
xchg
sub
arpl
hlt
mov
fs
adc
add
dec
subb
sarl
or
lea
cwtl
pop
cld
pop
pop
fcomip
enter
shll
add
stc
xor
test
xor
add
sub
jae
pop
sub
cmp
jbe
scas
lods
cwtl
popl
in
js
sahf
mov
insb
jnp
mov
out
int3
in
jno
fisttpl
pop
push
loope
pop
in
jnp
fucom
mov
jecxz
pop
cmp
icebp
mov
push
cmc
mov
arpl
or
sub
mov
jns
mov
pop
movsl
enter
js
ja
adc
push
test
dec
loopne
dec
cmp
adc
inc
xlat
lods
cltd
movsl
mov
sub
js
adc
ss
sub
test
cmp
call
and
xor
scas
sahf
sub
and
loope
hlt
mov
mov
out
fsubrp
sbb
mov
sahf
clc
mov
inc
test
xor
fnsave
pop
inc
daa
jle
cli
push
sub
fwait
push
loop
das
test
jb
call
mov
push
xchg
aas
mov
fcoms
shlb
inc
adc
dec
xchg
sbb
imul
xor
ja
in
add
fnstcw
adc
aaa
xor
imul
or
adc
daa
inc
pop
mov
push
test
mov
call
dec
jg
rol
adc
push
sbb
or
pop
jno
pop
loope
cmpsb
adc
adc
xor
pop
jne
push
popa
add
sbb
enter
outsl
scas
mov
test
xchg
in
sbb
push
data16
lods
hlt
xor
mov
sub
aam
lods
jnp
fdivrl
mov
pop
lcall
popa
cli
notl
jbe
sbb
dec
push
jp
mov
lret
iret
outsl
add
insb
inc
testl
negb
mov
cltd
out
add
dec
cmp
inc
and
das
aam
push
push
mov
mov
add
roll
sub
dec
popf
mov
sbbb
sub
push
clc
movsl
inc
out
jns
hlt
dec
dec
sbb
and
sub
out
pop
dec
pop
xor
mov
inc
inc
decl
das
lea
lret
jne
int
into
fcompl
and
subb
mov
inc
sbb
loope
in
dec
pushf
push
sbbl
test
add
jno
test
add
call
repnz
inc
sbb
test
lods
test
jle
pop
lret
into
inc
pop
or
mov
sahf
stos
xlat
scas
adc
out
ja
adc
dec
lods
mov
pusha
pusha
std
pop
aad
repz
dec
leave
int
push
insl
cmc
fcmovne
int
jg,pt
sti
sub
lret
jb
out
sti
out
scas
mov
sahf
lock
fwait
stc
sarb
bound
loop
pop
or
aam
shrb
jo
mull
sub
inc
cmp
cmp
push
xchg
ljmp
or
push
outsb
sub
xchg
call
pop
outsb
mov
ret
sti
daa
test
or
xchg
stos
inc
add
cmp
test
adcb
mov
and
dec
jge
daa
stc
mov
scas
push
int3
mov
push
cwtl
mov
mov
jl
or
or
addr16
outsb
cmp
insl
cmpsb
ds
sub
dec
push
test
jmp
stos
xchg
insl
mov
inc
inc
in
rorb
mov
pop
sub
xor
mov
jge
aaa
fwait
dec
rcrl
test
pushf
mov
arpl
adc
cli
cmp
test
lcall
mov
popf
xor
fs
dec
pop
sub
fldl2t
add
fidivrs
push
mov
push
shlb
cmp
xor
cmp
inc
adc
lock
push
dec
xor
add
in
add
lcall
push
shl
dec
inc
popf
mov
mov
in
sbb
or
popf
push
iret
mov
lret
adc
sti
dec
pop
add
fidivl
cmp
imul
pop
adc
inc
mov
xchg
sbb
mov
jecxz
mov
cmp
push
or
in
sub
push
ss
xchg
mov
pop
nop
jae
cmp
jmp
aaa
jno
mov
mov
jle
xchg
cs
lahf
cmc
test
repnz
and
pop
inc
fdivrp
sbb
loop
add
sub
cmp
sti
aam
and
ljmp
pause
cmpsb
xor
dec
std
jp
sub
mov
or
cld
xchg
and
imul
pop
shrd
fbld
mov
sahf
push
mov
inc
sbb
sbb
mov
test
mov
into
or
xchg
mov
ret
call
xlat
loop
or
stc
adc
adc
inc
fstl
lds
jp
push
cltd
xchg
sbb
push
dec
mov
leave
fstpt
mov
insb
sub
popf
pop
cmpsl
inc
movsl
xor
imul
into
je
and
mov
imul
add
les
pop
aaa
int
sbb
xchg
push
cwtl
ret
jo
sbb
addr16
sbb
ret
push
sub
add
ds
shrl
xchg
push
lcall
test
xor
je
lds
test
cmp
repz
dec
stc
pop
jp
push
pslld
dec
stos
stc
lods
lock
push
aad
stos
sbb
xor
mov
ja
inc
sbb
dec
leave
cmp
les
dec
sub
jmp
xchg
cmp
inc
dec
push
xor
out
cmp
out
xor
imul
mov
xor
sbb
int
cli
xor
fld
mov
mov
popa
or
stos
dec
mov
out
mov
outsb
loope
aam
xchg
xor
out
in
mov
popa
std
jb
dec
xchg
jge
sbb
rcl
pop
loope
sub
stos
in
inc
mov
and
cmp
das
cmp
push
mov
mov
mov
inc
insb
sub
repnz
or
pop
popa
hlt
sbb
imul
cmp
mov
pop
push
pop
addr16
dec
mov
dec
and
enter
jecxz
dec
inc
adc
in
pop
push
mov
push
dec
push
and
movsl
ret
mov
and
les
push
sahf
add
sub
out
mov
popa
stos
mov
mov
scas
out
add
xchg
push
in
movnti
lea
mov
es
in
clc
andl
push
sub
incb
or
rcrb
pop
adc
loope
in
push
mov
or
cmp
nop
icebp
add
add
and
cmp
mov
mov
mov
cmp
daa
add
pop
fwait
insl
add
sub
sbb
push
hlt
mov
cs
cmp
repnz
aaa
mov
fistpl
sti
mov
sbb
repz
jno
inc
mov
adc
mov
ret
adc
xchg
inc
out
dec
icebp
mov
jecxz
jge
xchg
dec
daa
inc
cmp
cltd
and
fsubrs
call
idivb
movsb
pusha
mov
xchg
lds
mov
pop
xchg
sub
mov
in
mov
mov
pop
push
pop
test
in
mov
rcll
repz
movsb
ja
and
lods
jbe
sbb
loope
jae
mov
inc
jo
mov
add
xorl
repnz
mov
das
mov
jg
int3
push
movsb
cmp
test
mov
ret
sbb
movsb
mov
mov
push
loop
fwait
fs
gs
xchg
sbb
jnp
push
cmpsl
fstps
les
mov
hlt
inc
rorb
sbb
pop
stos
loopne
and
jnp
test
js
sub
mov
cwtl
mov
dec
arpl
mov
sbb
enter
aas
or
push
jno
arpl
add
in
orl
ficomps
ss
jo
std
mov
sbb
lahf
push
aaa
mov
xor
decb
gs
loop
lret
xchg
mov
jae
repnz
scas
shll
xchg
and
push
xor
int
mov
xor
sub
ret
mov
inc
fldt
jp
jae
pushf
inc
sti
in
pusha
fldl2e
or
stos
push
xchg
pushf
pusha
jl
pop
cmp
hlt
loop
jae
jmp
jae
xorb
divb
push
jmp
jge
jl
enter
lds
inc
call
in
mov
mov
lds
fmull
sub
xchg
push
cmp
ficoml
mov
insl
cmp
and
jecxz
sbb
into
mov
popa
cs
decl
aaa
daa
inc
daa
lcall
enter
jmp
jle
lods
es
push
mov
and
iret
cmp
lret
sub
loopne
xchg
mov
mov
jmp
iret
inc
add
lock
fldl
mov
loop
and
sub
movsb
cmp
clc
pop
xlat
xor
cltd
mov
xchg
push
pop
jno
sbb
mov
fcoml
fstpt
jb
mov
int
pushf
sbb
cwtl
lods
pop
inc
inc
mov
mov
or
pop
lret
jge
or
xor
in
sub
xor
sbbl
ret
push
pop
jecxz
inc
push
mov
out
in
dec
pusha
inc
jp
ja
out
sbb
mov
cmpsl
sub
lcall
loope
dec
jne
insl
jbe
jl
mov
fidivl
fists
pop
mov
and
xchg
int3
test
jns
dec
in
cmp
cmp
imul
icebp
decl
shlb
dec
xchg
xchg
mov
iret
cmpsb
loopne
push
push
nop
imul
jo
push
sti
ret
sbb
dec
ret
shlb
cmp
fildl
int3
loopne
pushf
pusha
jmp
mov
adc
pop
push
add
xor
fidivrl
push
adc
andl
inc
xchg
lret
das
add
sub
jle
fstps
cmpb
sahf
test
dec
sbb
mov
mov
xor
ja
dec
dec
bound
leave
mov
mov
lods
xchg
jp
fsubrl
push
mov
push
mov
fwait
fs
adc
and
enter
popa
inc
or
jle
data16
sahf
pop
push
icebp
xchg
out
dec
aad
ss
jecxz
adc
pop
jmp
sbb
clc
mov
push
movsl
add
sub
in
mov
fwait
jle
mov
or
bound
mov
xor
scas
sub
pop
sarl
mov
ja
stos
std
pop
add
inc
lock
mov
cli
pop
les
and
inc
sbb
xlat
outsb
mov
fisttps
adc
arpl
repz
out
test
dec
sbb
icebp
in
ljmp
xchg
xor
xor
mov
mov
pop
jp
lock
push
cmp
ss
pop
mov
or
les
adc
fmulp
in
pop
add
xchg
movsl
dec
in
mov
lock
xchg
push
sbb
push
dec
dec
mov
hlt
pop
cmpsl
mov
jg
mov
lret
adc
push
xchg
jno
imul
mov
xor
mov
nop
jne
ret
inc
inc
repz
scas
lcall
cmpsb
xorb
jbe
sub
lds
test
add
sbb
jbe
pop
aam
stos
inc
test
xchg
add
sbb
cmp
inc
mov
jae
int
arpl
cli
jns
push
outsl
adc
and
adc
push
add
push
mov
mov
nop
jecxz
pop
cs
mov
xchg
dec
jg
dec
add
adc
xchg
jmp
fucomp
xchg
mov
push
and
mov
jno
inc
test
or
xchg
les
and
std
sti
inc
ljmp
jno
ror
jg
mov
push
mov
pop
xchg
pop
sbb
imul
ja
push
call
loope
cmp
lret
jne
adc
xchg
fmull
insl
jno
int
mov
repnz
in
inc
xchg
pop
repz
insl
dec
xchg
xchg
addr16
repnz
jbe
mov
dec
sub
loop
das
aad
cltd
sub
add
cmpsl
push
jnp
movsb
and
je
pop
sub
mov
daa
jge
mov
xchg
cmpsl
mov
sbbl
aaa
inc
xchg
lods
fcmovnbe
xchg
mov
data16
imulb
fisubrl
lock
push
dec
mov
cli
cli
lret
adc
shlb
push
xor
sbb
xor
adc
fdivp
push
ja
notb
jns
push
or
cs
mov
in
mov
sarb
xchg
sarl
lahf
mov
jb
rcrb
les
dec
cmp
test
dec
data16
xchg
xor
adc
jg
pop
or
js
negl
cmp
dec
stos
dec
jb
inc
ficoml
loopne
mov
and
lcall
push
sub
cld
push
cmp
dec
jno
loopne
cmp
jb
dec
punpckldq
push
mov
fs
outsb
mov
xor
sbb
aas
outsb
cltd
cmpb
mov
frstor
xchg
push
mov
xor
add
push
out
adc
add
jge
icebp
movsl
mov
or
dec
cs
and
sbb
jecxz
arpl
xchg
sub
repz
js
ds
mov
pop
xchg
mov
lock
cmp
sti
and
jmp
movsl
cmp
mov
aas
jnp
ret
adc
push
pushf
jp
cmp
addr16
lea
cmpsl
bound
jb
fxam
mov
mov
dec
mulb
mov
or
cwtl
mov
inc
or
jmp
xchg
and
pop
sbb
clc
stos
mov
pop
icebp
inc
xlat
jbe
mov
sub
arpl
mul
mov
jp
iret
mov
int
add
pop
divb
push
stc
fwait
lock
xchg
dec
fildl
js
add
addr16
sub
pop
jae
mov
enter
hlt
adc
fiadds
es
xor
jmp
inc
loop
popf
and
cmp
lcall
adc
pop
or
decb
hlt
movsb
ss
push
int3
fmuls
loope
mov
cmp
jbe
icebp
xchg
sub
mov
jo
int3
jle
hlt
inc
inc
jg
ret
mov
ljmp
lret
std
loopne
mov
orl
test
mov
or
rcrl
mov
mov
xor
jge
push
cli
push
jns
out
es
sbb
lea
sub
add
adc
ret
pop
xor
jge
xchg
popa
lret
pop
fs
jle
inc
dec
adc
push
inc
sub
lret
or
jmp
enter
stc
pop
js
add
or
sbb
pop
popa
cs
push
xchg
push
dec
jle
sti
mov
jl
movsl
jecxz
sub
scas
sub
xchg
pop
mov
cmp
mov
xor
pop
add
in
add
cmpsl
lods
inc
fstps
push
adc
int3
frstor
push
shrl
sbb
add
movsl
xchg
adc
stos
lods
mov
adc
int
jo
lret
and
jmp
mov
sub
inc
ljmp
or
and
bound
adc
pop
jbe
cmp
xor
outsl
mov
xchg
jmp
iret
adc
int3
mov
gs
test
cmpsb
cmp
or
dec
sub
mov
iret
mov
xor
lods
and
fildll
xchg
jecxz
xor
ss
inc
mov
or
adc
int
sbbb
pop
ret
clc
dec
out
or
flds
arpl
out
mov
lods
mov
cmp
pop
jge
stos
jb
mull
dec
dec
loop
inc
cmpsb
sbb
not
das
lods
shrd
cltd
stc
add
cmp
orl
push
sahf
movsb
cwtl
sbb
inc
adc
push
out
clc
jge
insl
bound
sbb
aas
adc
dec
or
outsb
das
scas
sub
add
pop
cmpsl
mov
jne
push
and
xchg
push
jno
popf
popa
jbe
ficomps
outsl
leave
repnz
and
popf
mov
xor
pop
fadds
push
jbe
push
repnz
dec
mov
imul
xor
pop
pushf
addr16
test
or
stos
mov
imul
adc
jl
lret
cmp
nop
dec
sbb
mov
out
and
test
mov
rcr
les
mov
outsb
sub
rcrl
ficoms
add
cmpsl
loopne
jecxz
dec
dec
cmp
sbb
ss
cmp
in
xchg
pop
test
and
jp
mov
sbbb
mov
push
aaa
leave
fldcw
pop
push
insl
xor
stos
bound
jno
push
hlt
inc
int
fsubr
dec
push
jmp
outsl
mov
data16
lds
push
cmp
lcall
push
orl
jb
push
cmp
das
cmpsb
clc
sahf
cmpsl
xchg
iret
jge
je
or
out
sub
aaa
test
add
jae
sub
pop
repz
dec
je
mov
cmc
or
pop
mov
call
dec
pop
sbb
jo
daa
outsl
test
push
testb
daa
mov
ja
mov
rcr
addl
faddl
cmc
insb
or
pop
ds
jl
lock
mov
xchg
dec
cmp
mov
dec
cwtl
xor
hlt
out
fwait
ja
sbb
lods
fdivl
shrl
adc
ret
jmp
in
sbbl
pop
lock
mov
popf
dec
add
in
sbb
lods
jmp
jno
icebp
orl
in
jmp
and
out
dec
mov
adc
repnz
aaa
push
inc
cmpsb
les
test
in
nop
push
mov
enter
mov
sarl
xchg
mov
into
jl
jg
mov
mov
cmc
aas
roll
loope
pop
in
pop
pusha
lock
pop
addr16
adc
sub
add
lea
push
push
out
fsubrs
push
repnz
in
pop
sub
mov
iret
xlat
stos
jge
sti
jbe
adc
push
cmpsb
stos
in
test
sub
adc
hlt
popa
xor
das
arpl
je
inc
ficoml
fsubrl
xor
xor
mov
and
xor
stc
jecxz
cmp
rolb
lea
das
movsl
icebp
add
in
add
xchg
mov
push
jge
in
push
jp
sbb
popf
loope
outsl
in
popf
lods
addl
cld
inc
shlb
dec
mov
push
and
int
mov
mov
pop
out
icebp
mov
xor
sbb
inc
test
mov
imul
cli
mov
push
mov
adc
dec
imul
int
push
enter
jne
sbb
js
fs
pop
dec
scas
add
nop
fidivrl
ss
gs
cmpsl
test
jbe
shl
sbb
aad
rorl
jbe
and
aad
push
dec
sbb
adc
cmp
cmp
push
das
ss
icebp
xor
lock
mov
mov
clc
adc
push
sbb
addl
mov
lods
pop
lret
lea
xchg
jle
cmp
fdivrl
xchg
and
sub
outsl
sub
in
push
xchg
jb
ret
jne
mov
enter
sbb
xchg
dec
mov
sbb
inc
repnz
add
mov
jle
dec
push
mov
mov
mov
popa
pop
test
stos
xor
mov
or
out
mov
pop
mov
fldenvs
jle
dec
mov
mov
inc
mov
add
dec
adc
cwtl
mov
into
cli
andb
sub
pushf
add
push
jae
cmc
ss
daa
sbb
fstpt
sbb
adc
mov
push
mov
cmpsl
mov
mov
arpl
dec
and
mov
push
adc
loope
fildl
iret
dec
cmp
cltd
jmp
sbb
fsubl
inc
mov
mov
stos
pop
jmp
fadd
imul
and
xchg
pop
add
sbb
mov
or
test
out
lock
outsl
cmp
pop
out
mov
test
xor
xchg
add
xchg
add
loop
sub
in
pop
outsb
std
loope
cli
add
mov
add
les
adc
pop
fcmovb
pop
or
xor
loope
cmp
ret
sbb
xchg
dec
xchg
jns
adc
mov
mov
pusha
sub
popf
nop
sahf
push
idivb
clc
mov
int3
adc
int3
js
int
or
cltd
cmp
sbb
lods
xchg
push
mov
std
inc
pop
aaa
xchg
cmp
mov
jo
arpl
push
je
imul
mov
cmp
pop
sbb
shrb
xor
jge
ret
and
shlb
sbb
push
dec
or
dec
and
in
add
or
sub
daa
jno
fisubs
repz
outsl
inc
xor
addr16
outsl
addl
adc
jb
xorl
ja
fmull
shlb
mov
xchg
ret
faddp
push
cmp
sbb
jb
inc
out
je
call
fldl
out
add
xchg
push
inc
je
jae
insb
xor
movsl
pop
pushf
jg
int3
pop
lret
sbb
ja
cvtdq2ps
fucomi
sub
mov
ret
sbb
jg
adc
ds
mov
and
jo
das
add
xor
mov
xor
sbbl
cltd
dec
sub
subb
pop
repnz
lds
push
pop
call
xor
inc
lahf
push
scas
mov
mov
add
xchg
sub
xor
inc
mov
pop
push
in
add
sbb
cmp
cmp
xor
lret
lret
movsl
dec
arpl
stc
lcall
test
popf
sbb
sub
push
or
ret
cmc
mov
mov
adcl
adc
lea
mov
shlb
or
mov
ljmp
lahf
int3
mov
jae
pop
cmp
mov
sub
mov
in
in
mov
xchg
add
inc
push
mov
sbb
ljmp
dec
inc
and
incb
add
scas
pop
cmpsl
les
jle
mov
sub
sti
mov
fwait
or
ds
mov
sub
push
insl
sti
in
bound
cmp
push
add
stc
sbb
dec
fcmovb
in
jl
rcrl
mov
push
sub
sub
ror
pop
lcall
stc
cmp
xchg
cmpsb
xchg
adc
in
test
jmp
cs
jmp
outsl
bound
and
pop
sbb
or
xchg
push
in
adc
ret
jmp
push
inc
aas
dec
adc
popf
cmpsl
stc
push
in
push
notb
jns
pop
xchg
or
sbb
sub
int3
sar
jp
test
sbb
or
insb
adc
hlt
mov
fsubp
and
pop
mov
xchg
int3
aam
sahf
cmp
in
mov
fstps
push
cld
push
rolb
movzbl
sbb
mov
xlat
jmp
fisttps
dec
push
fists
cmpsl
adc
ds
ljmp
mov
call
cwtl
int3
mov
aas
jge
or
xchg
pop
icebp
sbb
cli
mov
js
dec
xchg
clc
inc
stc
cmp
jb
sub
cmp
loope
adc
mov
mov
das
mov
jae
and
call
lock
push
and
or
or
lahf
in
daa
inc
push
iret
dec
push
ja
mov
xchg
out
xor
inc
pusha
mov
push
and
xor
ds
bound
lret
jmp
mov
mov
sbb
leave
push
inc
sarb
pop
lock
outsl
lods
mov
fidivs
pop
and
pop
insl
jge
add
pop
cli
pop
popf
shlb
sarl
pop
repz
pop
shrb
mov
aad
dec
lea
in
jg
in
mov
mov
les
aam
sbb
sub
shll
xor
hlt
shl
shrb
out
push
lods
movsb
movsl
mov
das
xchg
jno
push
ss
loope
xor
into
jmp
movsb
mov
mulb
loope
mov
push
push
mov
push
in
xchg
shr
into
xchg
iret
mov
and
movsl
cli
mov
xor
push
push
dec
jmp
xchg
cli
mov
mov
mov
and
sub
notl
push
pop
xor
xor
and
popf
or
mov
mov
add
out
mov
lret
test
in
and
test
sbb
pop
hlt
mov
xchg
push
lods
and
imul
cmp
out
scas
popf
xchg
sub
repnz
stc
leave
loope
sub
iret
sbb
mov
pop
imul
rorb
sub
sbb
les
mov
dec
mov
rcl
ljmp
push
dec
jmp
shll
lcall
mov
or
jecxz
mov
jp
aaa
fsubl
out
mov
scas
out
ret
pop
adc
aas
adc
leave
inc
movsb
mov
mov
cli
popa
icebp
in
ds
mov
xor
inc
pop
jge
mov
pop
fs
cmp
adc
and
add
addr16
dec
xchg
inc
jbe
movsl
popf
es
loopne
dec
shl
test
mov
push
inc
pop
mov
cmpsb
sub
push
fwait
repnz
mov
push
sub
stos
fldl
out
call
ljmp
mov
mov
add
les
cmpsl
fs
fcomps
je
cmpsb
je
inc
jp
jp
push
enter
jno
loope
fdiv
push
out
insb
push
stos
arpl
filds
inc
xchg
clc
iret
cmpsb
cmpsb
push
popf
and
inc
repnz
push
outsb
xor
xor
lret
sub
into
sahf
xor
inc
jl
repz
rclb
rclb
push
inc
mov
cltd
sbb
adc
inc
inc
jmp
push
lods
enter
add
lret
aam
iret
and
fildll
scas
cwtl
xor
cltd
mov
sbb
aam
pop
mov
and
mov
outsl
sbb
mov
int3
mov
repz
sbb
inc
es
ds
mov
mov
lret
ljmp
cmpsl
dec
jne
cmp
add
jg
inc
aam
fcompl
in
mov
shl
adc
jl
stos
call
mov
and
mov
mov
sbb
cmp
cmp
mov
fldl
sub
adc
jmp
icebp
dec
out
pop
loop
es
mov
mov
mov
mov
loope
repz
mov
fucomp
int
xor
std
pop
inc
in
mov
add
fnstenv
fsubs
stc
jnp
stos
nop
mov
js
sbb
jbe
mov
mov
es
mov
scas
fsubrs
push
or
mov
inc
loopne
sbbl
fsub
push
lret
pop
sbb
rol
out
pop
pop
paddsb
les
nop
lcall
outsb
loop
sbb
mov
or
or
insb
fwait
add
push
push
scas
fwait
jecxz
xchg
and
fsubrl
in
mov
leave
mov
inc
mov
repz
cmp
test
data16
add
std
add
inc
add
adc
jno
lock
out
xchg
aad
repz
mov
in
daa
nop
xchg
mov
and
jg
jl
jae
pop
scas
or
add
xor
ret
inc
lds
cmpsb
jns
dec
push
inc
dec
lret
in
lea
add
pop
jbe
pusha
xor
popf
xor
push
jb
sbbb
mov
outsl
mov
mov
imul
fnstcw
divl
push
xor
xchg
add
mov
or
mov
mov
sub
jns
das
or
cmpsl
push
sub
or
mov
rcl
mov
add
xor
lcall
ret
jns
sbb
push
ja
xchg
out
insb
addr16
lea
xor
call
lcall
cmpsl
int3
out
mov
jns
xlat
outsl
xor
sbb
out
test
sbb
inc
frstor
xlat
data16
mov
stos
push
lods
xchg
rcll
icebp
fdivs
dec
dec
popa
jg
push
out
adc
and
cmc
cmp
or
test
stos
xchg
ficoms
dec
jmp
sbb
and
xlat
adc
pop
mov
xchg
sub
cwtl
add
mov
les
movsw
je
jmp
fwait
movsl
cld
pop
negb
mov
push
or
jno
xor
dec
mov
shrb
xchg
mov
out
jb
aad
pop
out
out
xchg
mov
lods
inc
mov
jg
add
sbb
aas
mov
fsubrs
sbb
mov
mov
dec
mov
pop
xchg
pusha
or
mov
inc
adc
mov
ds
or
add
sbb
cmp
inc
add
xchg
add
jae
outsb
std
or
and
xchg
jg
in
pusha
sub
or
loop
in
cmp
movb
stc
mov
repnz
jge
xor
adc
or
pop
jne
sub
shlb
dec
or
xchg
inc
in
loopne
mov
fwait
jbe
std
out
sub
xor
sbb
in
inc
lahf
aam
add
ljmp
jle
pop
mov
pop
inc
aas
mov
aaa
pop
cmp
inc
loope
insb
mov
pop
andl
frndint
add
adc
imul
aam
lds
jbe
mov
sub
lcall
push
or
call
xlat
inc
mov
xor
or
cmp
fdivs
push
test
jecxz
sti
xchg
push
cs
xchg
dec
sbb
fdivp
and
in
dec
mov
out
ret
cmp
test
mov
pop
and
sbb
lcall
sub
or
pop
sar
popf
ljmp
sub
dec
cmp
and
mov
cli
pusha
stos
sub
xor
popf
aas
int
dec
cmp
in
sbb
push
mov
xchg
mov
xor
jge
dec
pop
cmp
xchg
jle
sahf
mov
mov
push
decl
arpl
push
lahf
mov
add
xor
adc
je
add
loop
xor
loop
ds
test
sbbb
bound
cld
sub
push
jmp
dec
test
cltd
fwait
xor
xor
cmp
mov
dec
mov
stos
ljmp
mov
std
mov
sahf
mov
stc
inc
mov
dec
popa
inc
sbb
or
push
repnz
dec
les
out
xor
lahf
push
int
iret
jle
push
add
test
divb
hlt
jl
lret
mov
lea
rol
stos
jne
ja
fldcw
add
mov
cmp
mov
lea
movsb
push
dec
loope
in
pop
shll
push
sti
mov
push
ret
out
and
out
loope
int
jns
mov
pusha
mov
rclb
push
mov
les
mov
repnz
pusha
aaa
mov
inc
inc
dec
cmp
cwtl
push
fidivrs
in
repz
fdivl
jg
xchg
jecxz
cli
xchg
mov
outsb
mov
push
test
pop
mov
int3
int3
negl
int
add
sub
pop
scas
stos
test
loop
cmp
mov
in
rclb
jl
ret
cmp
les
int
jnp
test
or
in
test
loop
call
and
jmp
adc
xor
jmp
lock
enter
daa
nop
xchg
xchg
roll
scas
inc
cmp
icebp
js
sbb
pop
jae
mov
pop
adc
stc
xor
cmp
sub
xchg
jmp
mov
cs
or
cli
fsubrs
int3
cmpsb
push
cs
fistpll
mov
lock
scas
inc
lcall
test
mov
insl
push
in
movsb
mov
jb
bound
mov
aam
mov
lods
mov
bound
adc
jg
outsb
sbb
or
ss
stos
xchg
test
icebp
inc
push
xor
cmp
mov
inc
loop
cld
cmp
stc
test
scas
cli
fwait
mov
dec
and
int3
inc
mov
mov
or
pusha
xor
sbb
sbb
sti
fmull
mov
pop
aaa
movsl
aas
outsb
dec
mov
mov
sarl
xchg
inc
push
sbb
mov
mov
outsb
push
lcall
or
mov
shll
sbb
xor
aad
dec
xchg
xlat
jnp
xlat
daa
mov
imul
pusha
mov
gs
add
shl
jl
lahf
fbstp
cli
dec
inc
fdecstp
mov
inc
fisttpl
mov
inc
xlat
adc
mov
cld
or
in
cmp
rcrb
shlb
push
movsb
movsl
pop
mov
rcrl
nop
scas
pop
xor
lods
jo
std
ja
or
lret
repnz
cmp
dec
nop
movsl
nop
dec
nop
mov
hlt
loope
ret
std
jle
cmpsl
or
add
cltd
mov
push
nopl
loopne
dec
and
cmp
mov
lahf
mov
sub
sub
add
jg
dec
punpckhdq
xor
pop
outsb
hlt
sbbl
mov
push
imul
xlat
ja
cltd
push
cld
adc
push
movsl
sub
mov
outsb
lds
cld
ds
lret
mov
mov
lock
clc
sub
in
ss
jbe
jns
xchg
sub
pop
pop
les
sbb
inc
dec
inc
and
outsb
inc
jp
stos
jle
lahf
iret
lret
cmc
mov
gs
cmpsb
addb
jg
cld
push
mov
xchg
xlat
adc
mov
or
mov
push
sub
pop
jge
por
out
jge
jecxz
test
repz
xchg
orb
adc
xchg
jae
push
test
cmp
out
push
insb
cmpsb
cmp
or
aaa
or
mov
adc
imul
fcoml
or
addr16
mov
inc
stos
sub
xor
cmp
dec
lahf
insl
mov
mov
xchg
push
notb
mov
add
lahf
push
jg
repz
mov
aad
mov
push
inc
jl
jbe
loope
adc
inc
push
xor
in
rolb
inc
negb
mov
rorl
inc
scas
and
xchg
into
jmp
adc
shlb
cs
xor
mov
inc
repnz
shl
out
jg
jnp
loop
lods
addb
sub
cmp
xchg
adc
inc
add
xor
xor
rcrl
in
ja
mov
sbb
or
std
cwtl
pop
gs
jmp
mov
lret
jmp
fisubs
scas
push
iret
inc
scas
ja
aad
push
adcb
cmp
dec
stos
incl
push
loope
xchg
xchg
inc
fisttpl
dec
add
push
test
cmp
cs
or
push
iret
xchg
adc
mov
mov
fnstcw
adc
leave
adc
inc
ljmp
sbb
int
sub
or
xchg
into
and
sbb
in
sbb
js
dec
mov
sbb
mov
jne
jecxz
js
gs
jp
xchg
outsb
imul
aam
sahf
clc
mov
or
inc
push
push
test
lds
push
fidivs
fistps
cmc
cld
addb
jecxz
jae
inc
sbb
fs
xor
ja
jo
jle
movsb
pop
sub
mov
orb
cmp
dec
pop
sbbb
stos
jno
mov
gs
ret
mov
lea
mov
pop
stos
stos
jmp
and
adc
pushf
outsl
mov
in
sub
inc
cmpsb
inc
mov
out
push
inc
lahf
cmp
into
in
popa
xchg
sub
or
scas
cmpsb
addr16
jne
scas
inc
sbbl
sub
cwtl
jmp
lea
shrb
and
mov
popa
clc
outsb
les
mov
sub
cmp
arpl
lcall
arpl
add
std
lahf
psllw
ljmp
xchg
and
dec
or
loopne
cmp
insb
andb
ret
push
sti
std
add
push
repnz
mov
and
and
sbb
dec
mov
jo
jnp
push
push
iret
fnstenv
lea
pop
minps
in
add
dec
cmp
loopne
jecxz
pop
outsb
stc
call
mov
mov
insb
push
inc
lds
popl
cmpsl
pop
jmp
jbe
decl
lcall
mov
add
sub
iret
mov
cmpsl
jmp
popf
cmpsl
push
pop
mov
movsl
xchg
shr
mov
bound
stc
loopne
cwtl
adc
nop
mov
push
arpl
xchg
jns
enter
mov
popa
clc
or
test
push
xchg
in
shlb
cli
xchg
push
pop
dec
xor
dec
pop
jae
cmp
adc
rclb
mov
jne
out
add
lods
xor
ljmp
repnz
aad
in
and
mov
jg
jo
cmpsl
push
add
mov
dec
repnz
loope
adc
adc
out
pop
cmp
add
mov
fucomp
sub
xchg
inc
out
and
data16
lret
mov
xor
xor
js
ficoml
int
cmp
out
jnp
enter
and
push
in
and
test
je
sahf
fwait
mov
mov
mov
sar
or
imul
xor
dec
dec
mov
popf
push
addr16
sbb
or
jg
add
test
cmp
adc
shl
mov
scas
sar
das
addr16
xchg
pop
xor
aaa
cmp
imul
test
inc
add
inc
in
fnsave
mov
int
jle
dec
outsb
sub
dec
jge
pop
mov
and
and
sbb
inc
xchg
cmp
push
stos
xlat
lea
sbb
pusha
fucomi
mov
lock
sub
shll
mov
or
sbb
ljmp
jne
cmp
jae
xor
sub
aaa
cmpb
sbb
arpl
and
imul
fdivrs
fnstenv
xchg
lahf
in
xlat
ljmp
xchg
jno
nop
jecxz
dec
lret
testl
push
pop
push
stc
lret
icebp
inc
pop
and
xchg
mov
xor
pop
std
or
shl
pop
imul
push
mov
xchg
fwait
das
ss
jmp
stc
jp
lret
and
sbb
push
jbe
fistpll
and
cmc
jnp
xor
inc
mov
jmp
dec
loop
push
and
rcl
mov
mov
pop
cmp
dec
add
add
add
inc
sbb
popf
pop
add
mov
iret
pop
icebp
rol
sbb
cmpsb
call
sbb
out
add
test
cmpsb
fstps
jg
push
int
cwtl
lods
ret
cmp
or
sbb
mov
pop
rcrb
sbb
nop
rorb
or
call
out
imul
jbe
adc
mov
fdiv
bound
jo
add
sub
mov
stc
data16
mov
cmp
addl
pop
sahf
push
fsubs
imul
mov
mov
rclb
xchg
and
adcl
call
cmpsl
add
push
shrb
mov
inc
jo
andb
xchg
jnp
pop
mov
mov
push
test
sahf
scas
dec
fsubs
mov
xchg
imul
icebp
es
push
ficoms
loopne
jge
negl
xchg
ljmp
in
icebp
inc
ds
push
cmp
lock
cmp
rorb
mov
and
mov
push
or
add
notl
filds
fildl
mov
loope
and
xchg
dec
dec
jb
stos
fldln2
add
nop
daa
stos
repnz
sarl
sbb
sub
mov
inc
push
xchg
subb
or
pop
icebp
cmpsl
dec
xor
cmp
and
in
cmp
jmp
lock
leave
dec
push
je
sahf
clc
imul
fwait
mov
imul
mov
mov
cmp
daa
out
push
push
stos
paddd
jge
loopne
fcomi
sub
sbb
mov
push
mov
outsb
add
push
mov
jle
loop
dec
xor
mov
add
cld
frstor
jno
out
cmpsl
adc
jp
mov
pop
movsb
mov
imul
push
hlt
mov
xchg
addr16
add
cs
es
lahf
ss
test
sub
bnd
leave
addl
aaa
repz
or
jb
push
jp
scas
pop
and
jbe
xchg
xchg
mov
leave
sbb
jae
add
dec
test
fisttpl
jl
das
scas
sub
inc
and
into
sbbb
sahf
pop
xor
pop
dec
in
invlpg
xor
cwtl
xor
addr16
cmpsb
fiaddl
loop
pop
mov
dec
out
mov
popf
inc
sarb
push
mov
adc
subb
pop
mov
push
xchg
push
lcall
ja
adc
push
push
loopne
aad
es
ss
into
inc
mov
test
nop
fists
adc
adc
addr16
inc
arpl
fldl
bound
jb
mov
mov
or
inc
lea
mov
data16
mov
fcoml
mov
fisttpl
cmp
push
or
ljmp
adcb
adc
xchg
iret
jne
iret
xorb
stos
sub
pop
insl
jb
outsl
rorb
scas
jno
lods
dec
aaa
les
sub
mov
add
mov
int
or
nop
mov
xchg
imul
adc
shlb
ret
pop
xlat
and
rclb
pop
out
cli
xor
out
iret
xor
add
mov
and
ret
sub
push
pop
fsub
jo
into
bound
dec
xchg
sub
pop
mov
imul
mov
pop
movsl
aad
jnp
mov
dec
mov
dec
mov
xchg
mov
xchg
out
cs
mov
jne
lods
pop
cld
adc
ss
std
ss
jo
pushl
lock
push
lods
outsb
mov
dec
dec
mov
push
rclb
mov
nop
out
es
cmp
mov
mov
dec
mov
dec
cltd
xchg
xchg
cmpxchg
out
and
sbb
inc
cmp
cmp
fcompl
dec
mov
inc
fistpll
int
idivb
pop
mov
sub
ret
or
scas
xchg
jp
int3
mov
add
push
std
jae
scas
adc
pusha
inc
lret
lods
in
insb
loope
mov
je
jno
pop
xchg
mov
repz
lock
adc
pushf
inc
je
adc
jb
ja
xorb
dec
bound
adc
mov
or
adc
add
pop
test
popf
xorb
mov
fwait
mull
and
dec
loope
xchg
adc
xchg
arpl
hlt
lret
roll
andl
mov
add
sarb
adc
cmc
scas
mov
shr
or
mov
lods
stos
push
jne
cltd
rcrl
or
jo
dec
sub
dec
lods
stos
and
sbb
cmc
clc
subl
xchg
popfw
push
sub
repnz
mov
pop
into
jo
movsb
es
jae
pop
aad
aam
sbb
jecxz
mov
push
test
clc
pop
jnp
or
sbb
fwait
stos
sar
cmp
aam
test
or
xchg
adc
test
fcompl
cwtl
repnz
pop
notl
cmpsl
xor
pop
or
mov
xchg
mov
sbb
cmp
mov
xor
adc
test
mov
inc
jo
test
xchg
add
sahf
fwait
jnp
mov
hlt
cmp
adc
aad
cmp
and
inc
push
xchg
lret
mov
out
pop
cmp
cmc
sub
ja
xchg
dec
test
int3
fbld
cmp
int3
lods
cwtl
mov
pop
int3
add
xor
mov
jae
add
jb
add
ds
outsl
inc
add
push
call
fisttpll
fdivrl
sahf
mov
lods
outsl
aas
push
sbb
aas
sti
cmp
cmpsb
xchg
nop
push
adc
insl
inc
push
out
divb
out
mov
imul
dec
loope
mov
push
dec
lahf
imul
xor
push
mov
movsl
fwait
repnz
mov
cmpsl
scas
les
mov
cs
das
xor
jp
adc
pop
push
inc
mov
fistps
sarl
jl
aaa
mov
add
push
and
mov
inc
incb
sbb
arpl
adcb
repnz
rolb
int
push
mov
les
mov
incb
jecxz
and
insb
cmp
cmpsb
in
jmp
sub
jl
mov
push
ret
inc
bnd
mov
or
not
and
sub
cmpsb
repnz
je
add
jbe
jg
shr
xchg
mov
ret
add
or
mov
cmc
mov
out
lcall
push
aaa
sahf
incl
enter
sbb
push
ljmp
es
cmpb
mov
sbb
dec
bound
push
inc
rcrl
and
out
mov
scas
inc
jne
adc
std
adc
adc
int3
inc
cmp
ljmp
jno
andl
hlt
sbb
insb
sub
out
cltd
mov
flds
in
pusha
js
in
addl
jbe
inc
xchg
cmp
divb
test
mov
pop
sub
dec
jb
jg
dec
cmp
neg
push
fwait
call
ficomps
out
cld
inc
popf
clc
icebp
dec
fldl
scas
and
and
repz
mov
xor
mov
and
movsb
push
loope
gs
push
inc
fisttpll
aad
lds
xchg
xor
lds
imul
mov
ret
rcl
jns
insb
cmp
dec
add
xchg
add
add
scas
push
cmp
cwtl
das
bound
sub
sub
jle
test
stos
jnp
pop
sub
pop
addr16
fisttpll
mov
xorl
shll
push
adcl
fiadds
jbe
repnz
jmp
dec
fldcw
hlt
ja
fnsave
ret
inc
inc
dec
cmp
call
or
xchg
pop
sbb
mov
addr16
cmc
pop
sahf
and
or
mov
outsb
inc
ficompl
in
popa
cmpsl
iret
xor
dec
data16
push
cmpsl
mov
je
sbb
and
xchg
sbb
xor
lret
lods
sarb
adc
adc
sub
push
cli
cmc
ss
scas
jp
insl
mov
add
stos
xor
and
or
es
fsubrs
and
mov
jecxz
lret
rcr
sbb
cmp
pop
add
out
rolb
xor
xchg
loopne
inc
jge
mov
int3
iret
xor
sbb
jmp
ret
mov
cmpsb
sbb
lea
addr16
shll
dec
inc
sbb
fucompp
xchg
mov
lock
cld
adc
cmpsb
nop
or
or
xchg
adc
push
mov
add
adc
jbe
arpl
and
jl
in
inc
cmp
test
and
cwtl
lea
and
mov
xchg
pop
outsl
cs
mov
adc
sub
out
fldcw
pop
popa
jne
sti
xor
das
xabort
lods
cld
adc
and
dec
scas
or
or
imul
xchg
ficompl
stc
mov
pusha
in
popa
or
ss
push
insl
out
pop
xchg
in
daa
pop
ficoms
lret
in
out
pop
push
ljmp
push
orb
outsl
lods
mov
mov
int3
sbb
jmp
outsb
add
sahf
xchg
add
jmp
popl
mov
in
lret
insb
jno
mov
fists
xor
icebp
cmp
mov
lea
push
or
js
repz
mov
cld
sahf
xor
cmp
mov
xchg
fildl
ja
loopne
out
push
decb
data16
jbe
in
sarl
pop
sub
mov
idivb
lock
pop
mov
shl
fsubs
les
push
hlt
imul
aam
jno
fisubs
clc
pop
mov
pushf
pop
in
adc
loopne
jle
out
add
incb
lods
jb
push
clc
hlt
mov
arpl
ds
push
add
dec
jbe
inc
mov
popf
sbb
fdivrp
xor
or
sbbb
mov
int
jno
fisubrs
inc
sbb
nop
stos
inc
cmp
push
popa
mov
outsb
lcall
in
insb
or
inc
and
jecxz
sbb
js
cld
push
imul
sbb
ljmp
movsb
lods
dec
push
loop
popa
cmpsb
pop
stos
adc
shl
mov
push
mov
sti
add
push
fcomps
fs
xchg
scas
sub
les
adc
add
jmp
pop
test
mov
cmp
andl
enter
cs
sbb
xchg
push
xchg
adc
jno
call
xlat
lea
shl
jecxz
adc
in
dec
mov
xchg
cltd
or
push
std
inc
add
lcall
neg
sbb
outsb
dec
push
dec
pop
jnp
jp
aas
loop
pop
cltd
sub
pop
dec
cmp
and
fcomi
dec
jb
fistl
test
cli
jmp
mov
pusha
inc
sub
pop
popf
loopne
xor
inc
mov
push
and
insb
bound
fstpl
lahf
aas
decb
mov
jp
sbb
shll
stos
insl
and
shrb
jae
adc
stos
fsubl
std
dec
ljmp
xchg
rcrb
stc
adc
xchg
mov
ljmp
test
jecxz
das
in
adc
ret
mov
sub
push
icebp
jo
outsl
add
fcomi
pop
add
mov
add
sbb
out
loop
jecxz
push
arpl
add
xchg
dec
pop
fmul
in
shl
xchg
data16
add
dec
in
mov
cmp
int3
hlt
test
fnstcw
mov
cmp
mov
clc
and
repnz
inc
ror
push
xor
es
inc
push
popf
arpl
or
inc
sahf
mov
fstpt
mov
loope
es
lcall
xor
lahf
es
pop
inc
lods
dec
lea
mov
adc
das
pop
pextrw
testb
and
gs
cs
sub
cmpsl
leave
clc
xchg
cmp
fstpl
loopne
mov
test
cmc
add
popf
test
aad
or
sti
push
mov
push
jg
test
sub
shrl
push
movsb
push
int
dec
jl
adc
or
std
push
fnsave
ljmp
sarl
test
leave
movsb
daa
pop
cmp
inc
imull
shrb
shlb
inc
sbbb
cltd
and
and
pop
sbb
imul
xlat
cmp
outsb
dec
and
mov
movsl
cmp
add
aas
pop
sub
mov
pop
icebp
xchg
inc
mov
cmp
daa
and
lahf
mov
pusha
cmp
adc
out
mull
add
push
jae
bound
lods
mov
out
imul
cmp
in
mov
adc
add
sub
mov
adc
push
data16
or
shlb
in
pop
repz
jae
sbb
mov
shll
jle
in
mov
fistps
imull
jne
pop
aam
fnstcw
lcall
or
cmc
repnz
std
mov
pop
cmp
cmp
push
insb
push
lods
jns
push
dec
dec
push
jbe
xor
dec
lahf
hlt
mov
lds
or
stc
xchg
call
insl
imul
clc
dec
or
cmp
xchg
add
inc
iret
adc
lods
je
clc
adc
jp
jp
pop
dec
cwtl
push
mov
loope
sbb
int3
inc
rcll
jmp
rclb
push
sub
add
and
add
sbb
xlat
mov
push
int3
imul
out
pop
insb
pop
out
mov
xchg
cs
cmp
add
jne
mov
ljmp
mov
sub
das
pusha
jl
fiadds
mov
stos
sub
sbb
bound
in
das
xchg
pop
aad
in
jge
aaa
pusha
cmp
sahf
loopne
jecxz
loopne
and
dec
mov
call
rcrb
push
cld
mov
jb
cmp
ja
and
lcall
scas
xchg
rolb
xchg
fidivrs
pop
test
pusha
int
shll
push
test
loope
gs
lret
test
mov
or
pop
test
inc
aaa
iret
hlt
pop
add
inc
rorl
lcall
stc
cmc
jl
adc
in
cmp
out
dec
stc
test
mov
xchg
js
push
sub
jmp
jmp
call
cmp
dec
dec
loop
xor
push
adc
ret
inc
lea
jno
enter
or
pushf
lret
popa
shrb
inc
xor
movsl
or
adcb
lcall
cmp
push
mov
jnp
shll
mov
xchg
add
bnd
stc
cwtl
sbbl
dec
mov
repnz
sub
sub
in
imul
mov
subl
xorl
jne
in
outsb
xchg
sub
call
cmp
fmuls
imulb
dec
loope
sbb
lret
int
icebp
iret
cs
push
stc
inc
inc
inc
jecxz
outsb
fs
std
jle
sub
sub
mov
ret
mov
add
sbb
dec
mov
les
xor
dec
fbstp
pop
and
xlat
outsb
sahf
mov
insb
cmp
xchg
dec
mov
adc
pushaw
lods
lret
or
icebp
loope
jle
push
int
loopne
or
sarb
jno
lahf
jge
leave
pop
adc
push
cwtl
lret
cld
enter
pop
and
jb
aad
shrb
dec
push
scas
rcr
jbe
or
lea
cld
stc
nop
enter
pop
lret
incl
iret
mov
jle
repnz
lock
stos
pop
adc
inc
lods
adc
adc
adc
mov
inc
mov
xchg
imul
or
push
fcompl
gs
or
shlb
call
jp
jbe
xlat
cmp
adc
adc
lret
jmp
loopne
notl
sti
addb
neg
pop
hlt
out
mov
mov
xor
add
fsts
or
cmp
test
imul
int3
push
sub
dec
sbb
xor
out
jnp
pop
loope
cmp
xchg
repnz
jnp
mov
test
fstps
and
push
mov
add
cmc
pop
xchg
lea
aam
pushf
push
cmpsb
push
adc
mov
rorb
mov
daa
cmpsb
scas
insl
adc
sar
jne
out
or
dec
add
data16
sub
rcrb
pusha
jmp
or
mov
mull
inc
and
shrl
inc
into
xchg
xchg
clc
pop
cmc
cmpb
mov
sub
out
cltd
dec
push
add
xchg
push
fwait
test
push
cwtl
jae
mov
aaa
push
or
repnz
bound
js
or
fistps
push
or
mov
int3
pop
mov
cmp
inc
jecxz
adc
leave
lods
push
pop
cmp
shr
aas
mov
sbb
dec
movsb
mov
sub
pop
sbb
push
les
mov
dec
xchg
lods
aam
lock
cmpsb
orl
dec
in
push
jae
dec
bound
mov
xor
jp
test
inc
xchg
push
jae
xor
xchg
sti
and
jbe
mov
and
out
mov
adc
pushf
mov
mov
sub
leave
push
lds
out
dec
pushf
push
fsubl
jnp
hlt
lods
pop
add
jb
push
popf
int3
shll
push
mov
sub
fwait
mov
pop
lds
xchg
jge
dec
cmp
cmpsl
jb
in
inc
push
jmp
fucomp
xor
and
imul
les
loop
mov
leave
pusha
cmp
add
in
jb
stc
movsb
rsm
mov
add
cmp
sbb
pushf
jg
out
push
inc
mov
lret
movsb
sbb
jne
push
iret
sub
clc
mov
lds
pushf
testb
daa
adc
lahf
insl
push
fimull
nop
insl
popa
push
sbb
lods
mov
xchg
data16
fmuls
out
shrl
or
jnp
lods
out
push
mov
fldcw
roll
lahf
mov
lods
xor
mov
mov
xor
pop
xchg
mov
add
icebp
mov
push
leave
scas
and
mov
or
pop
or
xor
adc
inc
xchg
fildll
jmp
jns
or
pop
mov
loope
in
mov
subl
push
loopne
in
push
sbb
mov
insl
sti
sbb
rcll
adc
jbe
mov
imul
mov
cmp
je
aas
dec
insb
push
cmp
leave
mov
mov
mov
out
pushf
pop
push
mov
add
adc
scas
out
cld
ffreep
mov
dec
jno
fdivrs
std
mov
inc
in
test
mov
adc
inc
jecxz
lock
jno
mov
fwait
inc
sub
mov
aaa
pushl
push
sub
dec
cmpsl
gs
in
mov
into
dec
add
cmp
shlb
inc
lods
out
pop
jbe
or
cmp
insb
xor
pop
pop
pop
lea
and
mov
sarb
sub
mov
lods
mov
cmpsb
cmp
out
xchg
sub
mov
sub
mov
pop
dec
pop
mov
arpl
ss
mov
popf
and
push
cmp
fldl
pop
mov
xor
and
pop
add
int
je,pt
pop
push
xchg
xor
inc
insb
inc
jb
in
inc
mov
dec
lret
and
test
or
mov
in
imul
xchg
inc
xchg
out
mov
repz
xchg
sub
in
hlt
mov
inc
insl
ja
push
dec
sahf
xor
sbb
inc
cmpsb
lock
and
mov
mov
xchg
add
xchg
in
les
loopne
sbb
push
hlt
js,pt
jno
and
inc
pop
loope,pt
jecxz
sbb
push
jg
and
add
and
dec
mov
cld
xchg
out
popa
adc
std
movsb
shll
inc
mov
enter
fnsave
dec
mov
cmp
rcr
sbb
out
inc
or
imul
rclb
pusha
xor
or
sahf
pop
pusha
adc
mov
or
clc
mov
imul
arpl
sbb
cmp
subl
dec
mov
out
fiaddl
cmpl
lret
and
scas
inc
adcl
and
ljmp
lret
test
popa
int3
dec
out
mov
mov
cmpsl
in
add
les
lock
inc
stos
cli
xchg
frstor
dec
mov
fisubrs
repz
pop
movsb
push
pop
test
in
mov
dec
cmp
fldenv
cwtl
xor
lret
lock
add
lcall
out
insl
les
add
inc
jo
sti
mov
imul
xor
mov
sahf
pop
pop
cs
test
out
mov
inc
adc
adc
fdivrs
mov
cltd
test
inc
mov
popf
mov
popf
sub
je
jae
ja
stos
xchg
xchg
sub
sub
aad
push
push
insl
jge
aas
adc
jl
aaa
jne
mov
mov
or
iret
push
dec
jne
mov
jae
jbe
push
leave
lds
sahf
push
test
iret
adc
jb,pt
cmp
inc
iret
push
data16
push
mov
ljmp
mov
inc
sub
int
out
or
dec
add
and
scas
and
sub
ds
gs
addr16
ja
push
fwait
dec
sub
lcall
cmp
jl
cmp
dec
mov
ds
inc
jmp
pop
dec
jg
inc
push
jo
cmp
pop
jnp
fwait
mov
fsubl
or
xchg
fwait
push
add
stos
lret
out
jnp
outsb
jle
xorb
ficomps
cmp
jb
in
push
insb
and
sar
jbe
mov
or
xor
jecxz
ret
inc
mov
cmp
stc
test
inc
push
iret
pop
test
jbe
xor
popa
stc
mov
mov
or
inc
adc
push
xor
jb
inc
mov
loope
jecxz
ja
xor
pop
movsl
cmp
loopne
cmp
insl
cli
outsb
loope
pop
jp
aaa
cmc
test
ds
xchg
int3
push
insl
ror
flds
cmp
pusha
mov
jmp
out
scas
xchg
jne
mov
arpl
roll
cs
std
fcomps
test
loopne
or
pop
aaa
test
add
xchg
int3
dec
and
sbb
jg,pn
pop
mov
nop
jle
cmp
cmp
mull
jo
xchg
lahf
out
push
mulb
adc
mov
sub
rol
and
inc
stos
insl
rol
cmp
test
imul
pop
lcall
sahf
notl
add
mov
popf
pop
dec
lock
in
cmp
or
jae
mov
inc
xchg
fs
int
dec
or
mov
xor
ret
outsb
in
imul
fsubr
mov
mov
inc
xor
cmp
aam
dec
mov
les
fidivrl
mov
lcall
sbb
add
jb
pushf
test
daa
adc
fucomip
jbe
mov
push
filds
sbb
sub
les
sbb
or
je
pop
bound
ja
or
mov
or
push
andl
test
sbb
or
shl
sub
adc
push
jg
daa
xchg
cwtl
xor
or
push
jl
fistpll
dec
sbb
stos
ljmp
insl
pusha
jle
sbb
cld
sbb
cltd
add
inc
xchg
repnz
push
xor
cmp
push
jae
aad
outsb
mov
out
popa
fistps
insl
pop
pop
enter
sbb
or
mov
inc
mov
pop
mov
push
mov
dec
cmp
inc
mov
adc
insl
xchg
mov
clc
shrl
jnp
cmp
xor
nop
scas
jno
dec
fisubrs
pop
insb
mov
lahf
sbb
mov
fldenv
mov
cmp
lods
rcr
mov
into
push
pop
mov
movsl
mov
adc
ret
push
aad
jecxz
jo
xchg
mov
push
mov
jo
fistpl
mov
cwtl
lods
stc
lods
fmulp
mov
pushf
repnz
cmc
adc
vmovaps
sub
test
stc
mov
out
shl
and
cmp
mov
xchg
sbb
mov
jb
lret
pusha
movsl
mov
out
cmp
inc
xor
fld
cmpsb
inc
cmp
jno
jae
pop
insl
loopne
cltd
test
dec
aas
xchg
adcb
lods
cmp
mov
mov
xchg
shl
pop
stos
mov
ret
ss
fisubl
enter
mulb
xchg
mov
pusha
mov
fs
add
fwait
arpl
mov
filds
movsl
adc
movb
vpsubq
jnp
push
imul
push
mov
shrl
mov
jecxz
subl
imul
imul
dec
loop
lock
pop
into
insb
imul
in
jecxz
jecxz
inc
daa
mov
lea
dec
inc
inc
aad
inc
mov
lods
scas
lds
dec
iret
jp
inc
rcrb
inc
mov
push
jl
push
sub
mov
jno
or
stc
or
fcomip
cmp
or
into
shrb
icebp
add
inc
sub
xor
jmp
xor
leave
and
mov
push
fldl
mov
lods
mov
fsubrl
mov
cs
jecxz
xor
push
inc
fiaddl
repz
or
cmp
out
pop
insb
leave
mov
out
push
cwtl
stc
mov
fldl
imul
ret
jl
fidivl
andb
test
inc
dec
dec
jo
imul
aam
scas
call
imulb
repz
cmp
pop
gs
ljmp
cmp
adc
xchg
jae
hlt
push
xchg
out
cmpsb
inc
sbb
jae
jle
lods
js
dec
lcall
mov
mov
jl
push
aas
and
cmpl
outsl
insl
movsb
inc
push
rcrb
xor
lods
push
nop
das
mov
jae
sahf
mov
call
insb
or
xor
mov
mov
or
repnz
sub
dec
inc
pop
into
sbbl
cli
jge
xchg
xor
push
test
mov
in
orl
cmp
jl,pn
push
inc
iret
movsb
cmp
arpl
rol
pop
ret
cmp
xlat
lea
imull
push
lret
mov
pop
lret
adc
pop
nop
out
mov
jb
out
pop
pop
icebp
push
push
sub
pop
push
sub
push
mov
test
dec
je
sub
sub
adc
insl
inc
pop
cwtl
mov
cmc
mov
movsb
pop
stc
mov
inc
ljmp
xor
add
stos
int
fidivl
mov
rcll
add
cmpsb
shl
sbb
mov
and
cmp
rcll
xchg
xor
bound
jmp
mov
outsb
push
jae
int3
neg
mov
xchg
test
adc
push
shr
xchg
mov
loopne
xlat
adc
sbb
rcrb
sbb
push
lret
out
call
jg
mov
scas
inc
inc
out
gs
push
jmp
in
out
pop
or
shll
repz
push
sub
stos
push
xchg
sahf
rol
jge
or
add
repz
lock
push
fwait
sub
punpcklwd
mov
mov
test
mov
sbb
jmp
cmp
stc
xchg
cmpb
pop
sahf
jb
test
lods
mov
js
enter
jne
xor
pushl
cmpsb
cmp
dec
les
clc
cmc
inc
push
add
mov
pop
sub
add
shll
popf
decl
loop
cwtl
fmuls
xchg
mov
dec
fisttpl
fcoms
lea
frstor
mov
bound
jmp
and
push
loopne
jo
es
jnp
mov
mov
or
add
sub
arpl
dec
and
inc
fcoml
rcrl
or
rcrl
aam
xchg
lds
cmpsb
mov
popa
fdivrs
aad
dec
lods
pop
push
rorl
lret
ret
fxch
jecxz
lock
pop
mov
popf
js
sbb
xor
cs
cmp
in
xchg
dec
xor
push
test
jnp
lock
test
test
movsb
aas
xor
aad
loop
clc
xchg
sbbb
inc
incl
stos
mov
scas
xchg
add
addr16
jbe
mov
push
fs
test
shr
daa
and
jo
mov
cmpsb
push
jno
or
das
enter
jnp
dec
sub
loop
outsl
sub
mov
icebp
iret
rcll
mov
inc
fsts
adc
mov
cltd
mov
sbb
scas
mov
fistps
rcl
push
jns
push
daa
inc
adc
push
dec
mov
xor
outsl
lahf
adc
dec
sbb
pop
divl
cmp
mov
sbb
mov
lret
mov
dec
fcmovu
push
jmp
xchg
ja
movsl
and
push
ljmp
loope
imul
xor
and
les
iret
add
xadd
les
or
je
mov
push
loop
mov
imull
rorl
loop
pop
scas
dec
and
movzbl
xor
and
xor
pop
aad
mov
push
imul
aaa
dec
pop
mov
lahf
cmp
pop
movsl
adc
fisubrl
mov
pop
jnp
push
and
les
enter
repz
dec
adc
xor
pusha
lea
inc
jg
js
scas
pop
xchg
loopne
mov
addr16
push
movb
loop
add
xchg
xor
insb
iret
sbb
jb
sbbb
insb
out
pop
and
data16
test
fstpt
scas
xchg
add
add
jae
out
jge
xor
xor
lea
pop
push
ljmp
mov
in
rcl
mov
push
inc
sub
push
in
stos
shrb
fmuls
fcmovb
imull
ficoms
iret
scas
int
jg
int
rol
jo
shl
adc
sbb
adc
imul
sbb
sbb
and
mov
sub
and
in
jg
push
mov
or
out
out
insl
mov
sbb
and
dec
mov
inc
ret
pop
lods
sub
jecxz
movd
cmp
mov
es
mov
icebp
mov
dec
popa
or
iret
aad
dec
add
xchg
out
shll
mov
cld
mov
test
fidivrl
inc
pop
jno
inc
bound
or
mov
loop
je
jno
sbb
popa
dec
push
inc
fimull
jns
xor
dec
adcl
push
das
mov
inc
stc
sub
mov
jp
mov
xor
popf
dec
pop
lret
mull
cmp
mov
sahf
fs
dec
mov
std
movsb
mov
push
xchg
cwtl
pop
or
lcall
adc
add
roll
add
and
push
add
push
lods
stos
push
push
xchg
aaa
mov
insb
fisttps
inc
in
xchg
push
test
dec
enter
xchg
dec
sub
mov
imul
push
lds
xchg
call
cmp
ss
cmp
bound
mov
dec
jg
popa
lods
call
ljmp
mov
lcall
sub
jo
stos
dec
adc
adc
cltd
xor
scas
add
ss
or
jp
push
in
inc
mov
std
sub
pop
fldl
shlb
out
es
ljmp
add
mov
xchg
lds
gs
popf
xor
in
jmp
lods
adc
pop
or
sahf
clc
hlt
pushf
xchg
add
jae
fidivrl
and
in
jne
sbb
fs
push
test
pop
lret
or
lcall
xchg
and
aam
xchg
scas
fists
mov
sub
testb
outsb
xchg
or
push
inc
sub
xchg
add
add
mov
lcall
and
decb
das
push
cld
xchg
adc
pop
enter
adc
xlat
xchg
pusha
mov
cmp
pop
jmp
lret
mov
js
jb
xor
lret
aas
out
in
fwait
call
push
mov
loope
mov
sbb
addr16
add
arpl
cli
aad
mov
orb
and
pop
and
pusha
leave
mov
out
rcrb
push
test
cmp
mov
inc
sbb
daa
adc
and
dec
adc
push
push
push
sbbb
fldt
or
dec
mov
fwait
lds
jb
loop
out
shlb
cltd
out
xchg
xchg
cmp
call
or
sarl
cmp
lahf
mov
sbb
mov
mov
cs
mov
in
cmpsl
and
or
lcall
jle
push
test
cld
loope
leave
pusha
mov
mul
dec
sbb
popa
hlt
fs
jmp
dec
iret
nop
and
test
sub
mov
push
mov
aaa
xor
rclb
in
imul
push
mov
adc
or
fsubs
xchg
jo
mov
lods
jg
fwait
xor
xchg
push
lahf
ds
sub
add
mov
fstp
jo
out
adcb
in
mov
sub
and
jmp
push
jp
movsb
xor
movsl
dec
inc
test
add
cmp
add
stc
daa
xchg
std
mov
sbb
inc
push
cmp
imul
dec
adc
pop
imul
pop
je
add
adcb
or
xchg
inc
movsl
out
loopne
pop
push
out
rolb
lock
and
dec
dec
in
xchg
scas
and
push
cmp
mov
into
movsl
jb
imul
sarl
xchg
insl
push
popf
loopne
pop
inc
mov
lret
fldcw
jecxz
inc
sub
pop
mov
or
push
mov
push
cwtl
sbb
fwait
scas
dec
sbb
xchg
repnz
mov
pop
bound
xchg
dec
lods
or
jns
mov
std
sub
add
inc
jo
sti
rcll
sbb
push
mov
mov
pop
mov
xchg
adc
in
iret
test
mov
ljmp
and
rclb
movsl
imul
mov
out
les
call
xchg
and
enter
stos
iret
add
je
lahf
test
inc
cmp
std
xchg
dec
jecxz
shrb
stos
fsts
flds
mov
and
push
jno
shlw
in
jns
dec
rcrl
test
jne
fistps
xchg
mov
xchg
sub
sub
xchg
add
lret
out
cmpsb
inc
fstl
js
push
and
push
jmp
mov
mov
add
lods
xchg
sub
sbbl
pop
fstpt
mull
pop
in
push
add
mov
mov
cmp
jo
sbb
mov
cmc
push
jno
adcl
sti
rolb
loopne
aas
mov
xchg
jmp
orl
ds
xchg
sbb
movsl
xchg
pop
cltd
and
lea
mov
cwtl
ja
inc
dec
cmp
adc
enter
lea
cmp
movsb
dec
stos
pop
stos
mov
mov
inc
cld
ficomps
or
scas
cmp
mov
ficoms
sub
scas
adc
mov
mov
push
push
loope
push
xor
stos
leave
mov
je
cmp
filds
xchg
xchg
icebp
and
popa
add
rorl
xchg
push
dec
mov
divb
dec
popa
and
out
cli
lahf
test
test
int3
gs
mov
js
outsl
mov
cld
scas
cmp
dec
mov
push
out
pop
int
xor
das
ljmp
and
sbb
test
pop
lret
sbb
std
jl
ret
cmp
jle
push
dec
sub
dec
pop
xchg
jp
repnz
stos
movsl
ds
js
xlat
popf
lods
or
addl
push
icebp
out
loopne
fistps
and
inc
addr16
ss
mov
addr16
xchg
data16
pop
sub
outsl
outsl
add
mov
mov
rcll
xor
ror
movups
shrb
pop
leave
pop
xchg
jnp
mov
sbb
push
lds
popf
divb
adc
inc
cwtl
push
cmp
mov
outsb
add
and
push
cmpsl
cmpb
out
sbb
dec
mov
cmc
enter
ret
aam
pop
pop
sbb
dec
notl
push
mov
dec
fcomip
fucomp
and
shl
sahf
sub
jne
fildl
push
ss
incl
pusha
push
faddl
lcall
and
pop
adc
mov
push
je
xor
inc
xchg
xchg
roll
adc
test
cmpb
cmp
shll
mov
rcrb
lahf
pop
pop
dec
loope
xor
xlat
shrl
dec
fstl
lods
push
popl
push
pop
inc
add
inc
xchg
push
negb
push
aam
xor
adc
pop
movsl
jae
push
mov
jbe
mov
cmp
inc
jmp
add
lret
aaa
mov
aaa
insl
pop
push
mov
ja
movsl
sub
sbb
fisubrl
out
adc
jmp
sbb
out
mov
xchg
popf
sbb
add
ljmp
loopne
sub
outsl
cmp
xchg
mov
jnp
mov
repnz
lock
or
sub
pop
movsl
jle
stc
test
loope
ss
and
xchg
lahf
xor
ret
jno
insb
mov
out
mov
xchg
lcall
xor
sbbb
adc
xor
enter
int3
arpl
clc
dec
add
sbb
and
es
insl
test
cmpsb
int
mov
pusha
push
fistps
test
sub
mov
outsl
add
mov
mov
add
push
push
out
mov
xor
fs
out
popa
rorl
push
jmp
dec
cwtl
and
xchg
andb
or
mov
gs
stos
fsubr
fwait
sar
or
out
add
mov
cmp
aaa
icebp
sbb
and
cmp
shrb
popa
inc
shrl
xchg
mov
cmp
loope
repz
jns
push
inc
enter
nop
lods
mov
and
sub
mov
das
jp
xor
inc
loop
dec
fwait
bound
sub
ret
jne
das
mov
cmp
jne
lcall
rol
imul
xchg
pop
and
leave
jmp
jmp
xchg
test
xchg
icebp
push
xchg
and
in
pusha
push
mov
and
std
or
fistl
rorl
lods
sbb
cwtl
jge
test
mov
jo
sub
popa
mov
imull
mov
call
or
add
and
push
push
inc
adc
shrb
loopne
dec
jge
test
adc
cmp
push
imul
data16
sbb
cmc
movsb
insb
lods
notl
fisttps
bound
push
das
movsl
cmp
lods
mov
sbb
mov
movsl
cwtl
mov
cs
xor
iret
ret
ret
add
jno
or
dec
repnz
es
mov
pop
jae
shrl
pop
fnsave
arpl
sbb
sub
mov
inc
mov
jmp
inc
fsubrs
adc
cmc
push
cmp
subl
mov
fwait
jo
lock
ret
pop
jae
stc
sbb
loop
jno
out
xchg
cld
and
xchg
repnz
mov
loop
xchg
lret
stos
jno
push
sub
das
pop
cmc
das
mov
mov
bound
aas
fsubrs
aad
or
add
xor
xchg
aaa
pop
add
push
push
andb
push
push
cwtl
scas
bound
popf
or
andb
rep
test
and
adc
int3
dec
fmull
and
ret
push
or
cs
or
lock
and
pop
shlb
lcall
pop
pusha
jp
fcoms
xchg
inc
fsubrl
lds
cmp
out
scas
pushf
mov
inc
mov
js
int
lods
jecxz
and
aad
leave
and
cwtl
test
add
lock
jae
xchg
jbe
cmpsl
lahf
shrl
mov
rclb
in
xlat
sbb
icebp
movsl
push
pop
cmp
icebp
xor
sub
in
or
jne
nop
push
add
push
cltd
mov
sti
and
cld
mov
icebp
pop
dec
pop
inc
mov
mov
cmpsb
lret
out
jmp
icebp
insb
mov
inc
cmpsl
out
inc
jo
in
xchg
jnp
and
ss
inc
xchg
xor
gs
push
ja
lcall
int3
jae
int
ret
mov
test
mov
push
sti
shufps
andl
mov
inc
es
jg
sub
or
outsb
or
stos
pop
in
fisttpl
clc
xchg
popa
and
mov
sbb
addr16
cmpsb
cmp
xor
xor
push
mov
mov
lods
add
xlat
inc
stos
lret
in
jecxz
lods
inc
repz
fistps
popa
push
jecxz
dec
loope
call
nop
lret
das
pop
sahf
pusha
cmp
and
test
test
shll
pusha
jne
bound
push
test
shlb
test
notl
scas
cmp
fwait
repz
and
sbb
test
outsb
mov
xor
jmp
in
pop
mov
sub
sarl
add
addl
or
pop
daa
data16
xor
loop
push
adc
add
cmpb
jo
nop
das
lcall
mov
inc
daa
scas
xchg
leave
int
push
push
insb
fbstp
dec
jae
sbb
mov
gs
push
xchg
lahf
push
adc
loope
push
xchg
inc
jecxz
leave
mov
xchg
scas
add
jmp
dec
ret
fucomip
xchg
mov
inc
jno
xor
rorl
mull
xlat
pop
dec
rorl
cmp
test
cmpps
pop
in
pusha
inc
cmpsl
dec
xchg
dec
xchg
in
popa
dec
cmp
dec
inc
push
in
mov
stc
or
dec
and
subl
fs
lcall
imul
rorb
cltd
push
jl
pushl
das
adc
xchg
repz
adc
movsl
lea
xor
rcl
jmp
jge
lds
fdivrl
dec
leave
leave
movsl
cld
gs
cmpsl
and
xchg
popf
arpl
and
inc
dec
jne
mov
fcomip
adc
mov
xchg
sti
xchg
pop
push
mov
xchg
adc
enter
stos
jle
test
pop
dec
das
jecxz
ljmp
jno
test
pop
lret
mov
dec
cmpsb
adc
insl
packuswb
fnstenv
xchg
jle
into
outsb
jp
fcomip
jg
data16
push
mov
cmp
nop
pinsrw
pop
inc
xor
cltd
and
and
ja
lahf
test
cli
jno
mov
lret
leave
test
push
or
dec
sbb
push
insl
aad
ret
stos
push
sub
cld
xchg
dec
dec
push
mov
sub
cmp
rcll
loope
jo
lods
sarb
push
insb
sbbb
cmc
jmp
cld
xlat
rcrl
sbb
lods
daa
inc
mov
mov
pop
jbe
jmp
pop
cmpsl
and
mov
cmp
inc
mov
jp
adcb
movsl
xchg
fisttpl
mov
mov
adc
in
lea
jmp
xchg
sbb
pop
popf
ss
dec
stc
xchg
pushf
outsl
dec
fsubrl
jno
mov
xchg
xor
cmpsb
mov
dec
ss
push
sbb
dec
xchg
int3
insb
adc
cli
fidivl
lcall
fdivl
enter
lea
ret
out
jne
sbb
cmp
clc
adc
xchg
inc
or
imul
bswap
sbb
loop
mov
cmc
adc
and
and
or
stos
jmp
hlt
mov
popa
xbegin
jae
inc
lcall
loope
inc
xlat
cmovno
jbe
aas
loop
cmpsl
jecxz
sbb
lea
mov
jle
mov
inc
imul
int3
lods
insb
ljmp
dec
mov
mov
out
adc
fwait
aam
movsb
cmp
jmp
push
nop
jae
mov
xor
fisubs
ret
shrb
push
add
jecxz
in
and
aas
add
sbb
cltd
movl
mov
lret
in
outsl
insl
adcb
push
pop
pop
mov
adc
aam
add
test
scas
sbb
pushf
pop
mov
and
insl
sub
loope
rol
mov
mov
repnz
jge
jp
mov
subl
adc
push
cld
xor
ret
lahf
jbe
sub
ja
flds
or
dec
std
cltd
loop
icebp
xchg
and
mov
dec
ret
xchg
nop
lods
leave
mov
out
test
lret
fcmovnb
jno
fidivs
dec
cmp
test
in
insb
cmp
jb
adc
cld
xchg
jno
mov
ret
sub
cmpsl
jo
sub
dec
dec
jne
xor
inc
mov
mov
pop
add
mov
push
mov
fidivrs
popf
mov
fsubrl
stos
es
sub
mov
lds
pop
call
and
test
in
les
mov
jnp
mov
lds
out
aam
stos
mov
icebp
outsl
sbb
pop
push
pop
sub
dec
and
lcall
in
and
flds
jle
roll
mov
enter
mov
fildll
shrl
outsb
push
stc
andl
je
dec
push
and
lea
out
mov
xchg
pop
mov
ss
mov
loopne
mov
sub
jno
mov
or
into
arpl
add
mov
leave
add
imul
into
jno
mov
mov
insl
mov
sahf
pusha
cs
adc
mov
and
out
dec
fldenv
sbbb
push
out
lods
je
cmp
push
adc
shl
test
push
in
mov
mov
mov
mov
push
or
lods
jp
mov
shlb
std
adc
pop
inc
sbb
jecxz
adcl
ss
jp
imul
sbb
jmp
adc
aam
mov
and
out
sub
fcmove
adc
shlb
pop
stos
add
ljmp
sahf
sbb
xchg
jo
fs
push
xchg
ljmp
jge
push
mov
mov
xchg
mov
pusha
dec
cmp
in
das
in
dec
mov
or
jo
mov
pushf
insl
push
adc
cmp
scas
and
sub
cmpsl
xor
xor
or
sub
xchg
sub
cs
cli
mulb
neg
mov
mov
xchg
xchg
push
pop
dec
or
push
repz
cmp
stc
adcb
xchg
lock
mov
push
stos
nop
aad
sub
loope
xchg
pop
mov
push
aam
int
in
jno
dec
xor
inc
inc
popa
sbbb
pop
lds
jle
lock
rorb
and
sbb
test
int3
aad
sar
fiaddl
daa
dec
scas
inc
test
push
pop
dec
leave
int
pop
pop
arpl
dec
inc
adc
mov
xchg
jl
subl
sbb
cmp
xor
dec
loopne
sahf
pop
call
call
jge
test
fwait
add
jmp
movsb
xor
push
pop
jmp
mov
jecxz
sbb
or
bound
or
mov
cmpsb
mov
sbb
andl
ret
rcll
lret
cmp
cmp
roll
sbb
pop
movsl
cmp
std
push
and
jae
std
mov
xlat
pop
jbe
adc
cmp
fcoml
pusha
and
in
lahf
loopne
roll
scas
inc
jge
xchg
scas
adc
jmp
loopne
je
movsb
xor
dec
add
jmp
mov
andb
adc
xchg
jg
in
sbb
jl
aas
sbbb
fadd
pop
into
jno
popf
sub
cmp
cltd
or
shl
cmp
int3
or
jle
sbb
jecxz
jl
mov
pop
mov
sbb
mov
imul
and
push
lcall
push
jnp
pop
mov
dec
jmp
jo
push
testl
mov
negb
outsb
scas
mov
ds
test
add
rorb
int3
pop
add
mov
int3
sarl
orl
xor
test
xchg
add
sbb
outsl
jl
lods
scas
xor
shrb
add
cmp
out
rcll
or
sbb
push
fldl2t
xor
out
cmp
pop
inc
movsl
loope
movsl
mov
dec
push
pushl
out
push
sahf
cmp
clc
sarb
pop
add
sub
movsl
enter
sbb
jbe
mov
jnp
inc
dec
popf
dec
pop
fnsave
dec
lods
in
int3
jne
mov
shll
mov
sbb
mov
scas
divl
sub
push
jno
aaa
daa
aad
jmp
in
adc
sbb
sarb
rolb
sbb
dec
scas
fidivs
cmpsb
mov
mov
or
jne
in
pop
int3
dec
fiadds
in
mov
push
inc
jns
mov
cmpsb
pop
fmuls
or
test
add
mov
mov
sub
fs
jmp
mov
lods
into
stc
jne
aam
xor
cld
popa
adc
lods
or
xor
scas
inc
out
shl
out
fwait
insl
jnp
jno
test
sub
test
dec
inc
jb
and
out
push
fnstenv
pop
xchg
lods
cmp
orb
mov
icebp
movsl
hlt
mov
lea
cld
shrl
icebp
cmp
call
inc
leave
jecxz
test
sub
shrl
and
pop
dec
std
leave
mov
pop
jg
lcall
mov
fyl2x
in
mov
sub
xchg
sarl
inc
xor
ljmp
stos
inc
jl
subl
aaa
push
mov
or
mov
sarl
js
or
imul
xlat
cwtl
or
dec
negb
push
pusha
sahf
push
out
repnz
add
jns
repz
push
sahf
xchg
adc
xchg
pop
mov
sbb
push
push
arpl
lds
push
test
movsb
lahf
mov
xchg
and
pop
xor
mov
lret
pop
sarl
mov
les
mov
aam
out
out
out
mov
push
adc
inc
bound
sub
jg
xor
arpl
out
sub
insb
mov
jns
imul
sbb
dec
pop
ret
fdiv
push
aam
adc
sbb
mov
fwait
ret
cwtl
mov
dec
ret
jae
in
cmp
int
push
pop
xchg
adc
or
out
pop
stos
pop
cmp
in
sub
inc
lea
cmpsb
fidivs
pop
lret
stos
mov
ret
and
mov
das
fdivrl
cmp
pop
or
pop
jno
scas
mov
mov
or
imul
add
push
push
mov
fwait
jl
add
sti
xchg
adc
and
arpl
fisttps
out
push
inc
loopne
mov
leave
cltd
out
push
mov
ffreep
rcll
xchg
sub
lods
scas
ret
pushf
cli
add
mov
ret
jbe
insb
stos
out
enter
mov
fs
popf
pop
add
addb
lods
fdivs
cmp
sbb
test
xchg
lret
inc
xchg
into
insl
mov
pop
das
adcl
mov
add
mov
push
adc
leave
cmp
pop
iret
pop
jae
ss
adcb
jecxz
test
rorb
les
pop
mov
test
push
lods
push
test
lds
lods
cli
push
dec
inc
ljmp
jo
pop
xor
xchg
mov
in
aad
or
js
mov
mov
stos
and
and
je
sbb
into
fsubl
push
mov
out
push
sbb
xchg
adc
sti
mull
push
movsb
mov
lea
fisubrs
stos
xchg
xchg
dec
bound
sahf
inc
fsubl
xchg
je
jge
jo
jg
push
jae
es
movsb
sbb
mov
imul
out
enter
int3
xchg
adc
xor
push
inc
cs
ljmp
mov
lahf
sar
pop
mov
fidivl
aam
iret
pop
lds
out
test
xlat
mov
lahf
jecxz
roll
mov
pop
mov
cmpsl
dec
inc
inc
test
mov
call
jecxz
test
jmp
add
xchg
repz
add
ret
outsl
jecxz
mov
pop
add
ljmp
je
xor
mov
call
mov
lock
ja
lcall
in
imul
inc
das
subb
cmp
popf
cmp
and
negl
lods
xchg
adc
mov
fisubs
sbb
pushl
and
push
stos
mov
push
xor
jnp
cmp
mov
pop
test
test
pop
adc
cmp
out
inc
sub
fidivrs
dec
cmp
adc
pushf
sbb
dec
repnz
sub
shl
cmp
sti
inc
shrl
sbb
xchg
shlb
orb
mov
pushf
push
inc
xor
jb
addr16
lahf
sbb
repnz
and
mov
out
add
pop
jno
xor
sar
mov
jg
mov
test
sbb
sbbb
cmp
pop
daa
pop
stos
test
pop
aaa
cmp
cmpsl
mov
cli
xchg
lret
movsl
mov
cli
add
ja
sbbb
push
mull
push
sti
add
mov
or
adc
out
jns
mov
push
repz
mov
call
lods
mov
add
popa
jecxz
push
push
xchg
adc
mov
ret
aad
push
pop
fnsave
pop
fnsave
or
hlt
sti
xchg
es
insl
mov
sbb
mov
iret
and
lcall
mov
out
pushf
je
outsl
sub
jnp
mov
dec
jecxz
mov
out
insl
movsl
and
adc
aas
mov
out
ds
cmp
mov
pop
or
and
xchg
jmp
inc
xchg
sub
or
or
paddb
imul
jge
cmc
stos
mov
xor
xrelease
mov
mov
into
mov
test
inc
pushf
cwtl
jne
fisubrs
or
out
mov
xchg
or
dec
dec
ret
shl
sar
stos
fiadds
mov
mov
pop
cmp
cmpsl
out
notl
das
cmp
fbstp
sub
pop
push
inc
ret
repz
mov
adc
ret
xchg
mov
push
cwtl
jb
sti
xchg
xchg
inc
lahf
dec
xor
je
testb
xchg
insb
add
cmp
lea
sbb
mov
or
xchg
xor
pop
mov
inc
mov
rorl
loopne
sub
das
or
cmc
dec
int3
mov
lock
ret
shr
lds
aad
xor
dec
xchg
imul
outsl
pop
cmp
repz
push
jecxz
icebp
addl
adc
adc
add
leave
scas
aas
push
xor
test
aam
das
push
sub
addl
cmp
pop
loopne
in
notb
dec
push
test
and
out
pop
add
dec
dec
rorl
imul
sbb
mov
punpckhdq
pop
pushf
mov
out
inc
pop
je
push
jb
jmp
pop
jecxz
xor
fsub
sbb
jb
add
push
pushl
mov
pushf
xor
cmpsb
cwtl
mov
ja
and
mov
mov
dec
enter
push
cmp
imul
je
insb
add
jno
inc
add
ret
hlt
cmpsl
out
or
lahf
sub
cmc
out
or
aam
mov
mov
xchg
iret
aaa
push
add
jb
cmp
shrl
pushf
jl
add
add
sub
outsl
mov
data16
cmpsb
or
ret
imul
in
popa
push
jnp
arpl
add
cmp
lock
xchg
or
inc
sti
aaa
into
adcl
js
ret
dec
test
fadds
das
pop
cmp
push
jae
test
sahf
push
xor
xchg
mov
arpl
pop
sbb
push
rcrl
loope
fbstp
inc
lea
out
pop
lcall
sub
mov
push
adc
mov
dec
pop
enter
or
mov
pop
add
mov
scas
add
rcll
addb
dec
fimull
dec
in
pusha
mov
jl
cld
enter
mov
mov
sbb
sub
stc
ss
rorb
mov
aaa
popa
sahf
dec
sti
push
mull
sub
add
ret
lahf
inc
pop
mov
shlb
aad
xchg
xor
adc
shl
arpl
lea
or
cs
and
addb
xor
add
add
lock
scas
testb
pop
shr
popf
and
bound
aad
cmc
loope
scas
dec
adc
mov
lahf
out
mov
dec
outsb
orl
rorb
mov
cmpb
mov
dec
loop
add
or
jmp
sti
push
prefetch
or
fcoms
mov
fidivrs
push
aam
push
std
dec
fnsave
push
outsl
inc
mov
cmp
popa
push
stos
iret
fcmovnb
pop
int
mov
mov
adc
push
aad
mov
adc
rolb
add
xchg
sub
dec
pop
lock
scas
push
inc
or
imul
sbb
push
dec
jb
mov
jge
in
and
fcmovb
loopne
sti
xor
xchg
sub
fistpll
add
or
pop
daa
repnz
in
pop
stc
movsb
sarl
add
jns
adc
add
loop
jb
add
mov
bound
mov
sub
push
pop
sub
stos
jb
xchg
xchg
push
outsl
les
fs
stos
addb
lret
les
mov
mov
push
mov
sti
es
loop
in
std
xor
cmp
cmpsl
sub
add
outsl
loop
loopne
xlat
add
mov
push
xchg
dec
je
in
orl
mov
or
pop
mov
add
add
adcb
pop
sub
jae
loope
mov
stos
push
inc
mov
xchg
mov
jp
jmp
mov
call
push
ds
mov
imul
cmp
ds
fdiv
enter
clc
pop
repnz
cmp
mov
adc
cmp
xchg
xor
mov
push
lret
out
sti
roll
or
mov
add
mov
lcall
pop
loop
or
gs
push
mov
jbe
adc
xor
xlat
fwait
shlb
inc
fs
inc
push
out
push
adc
jbe,pn
jne
insb
jae
jge
adc
push
ja
cmp
push
daa
ljmp
pop
imulb
pop
jle
xchg
rclb
jb
cltd
aaa
dec
out
jge
mov
jo
jge
ficompl
dec
arpl
repz
fs
jp
lods
popa
in
push
push
stos
push
mov
cmp
push
imul
jo
in
sbb
ds
out
pop
xlat
mov
stos
and
dec
jo
inc
xchg
add
push
loop
jae
xchg
in
inc
shl
mov
gs
jmp
pop
adc
sub
jae
test
pop
mov
mov
lock
test
push
mov
jl
test
ss
sbb
cld
xlat
cmc
fcompl
inc
cld
xchg
pop
dec
pop
xor
aas
imul
lds
add
stos
sbb
mov
adc
push
in
fnstsw
jbe
mov
les
xchg
cmp
scas
jae
sbb
shlb
add
sub
push
add
arpl
xchg
sbb
sbb
add
rcll
xchg
icebp
push
ret
add
stc
or
cmp
sbb
lods
dec
fwait
int
int
mov
sbb
xchg
jnp
stc
ret
sti
xor
std
cltd
inc
movsl
cmp
jb
add
imul
adc
mov
test
and
stc
scas
pop
inc
pop
adc
cmp
xchg
mov
aam
fisubrl
cmpsb
insb
jae
mov
or
mov
or
push
push
push
dec
bnd
scas
clc
xor
push
movsb
cmp
dec
in
adc
incb
mov
xchg
std
lods
jno
das
je
loop
nop
sbb
xchg
mov
mov
shl
ljmp
bound
int
inc
loope
add
notl
dec
push
xchg
fnstenv
lea
inc
fwait
cmpsb
sbb
jle
out
imul
cmpps
jl
in
ds
add
out
mov
sub
sbb
cmpps
push
mov
lret
mov
icebp
jl
sbb
pusha
outsl
adc
mov
out
xor
jl
fwait
pop
sub
mov
add
push
outsb
xor
repz
addr16
ss
pop
shlb
imul
lret
shrb
jmp
dec
in
jns
xchg
xchg
out
in
ljmp
mov
dec
int
inc
fnstenv
inc
scas
cmp
push
cld
inc
or
or
xor
sub
lret
push
or
mov
pop
imul
mov
and
mov
or
ljmp
clc
jae
mov
loop
loop
jno
xchg
repnz
dec
push
sub
test
push
mov
repz
sub
outsb
lds
andb
ljmp
imul
xor
push
push
sahf
clc
cmpl
imul
icebp
insb
jge
aaa
stos
mov
fcomps
ret
push
and
imul
xor
in
pusha
mov
push
add
cmpsl
test
shr
jns
inc
stos
iret
dec
adc
roll
pop
call
imull
filds
mov
pop
loop
sub
jno
ds
cmp
jecxz
adc
cld
jg
jno
pop
mov
ret
cmpsb
lea
rcrb
mov
sbb
sub
mov
push
fs
inc
push
xor
das
xor
jnp
sbb
jne
add
sbb
adcl
inc
cmp
inc
scas
inc
clc
sahf
dec
in
pop
aam
iret
mov
mov
ret
idiv
popf
cmp
inc
clc
pop
and
add
mov
jae
test
dec
addl
push
or
js
xor
cmpsl
mov
cmp
pop
cwtl
fs
push
mov
mov
jb
mov
xchg
dec
xchg
popf
jmp
mov
stc
jge
xchg
mov
jp
adc
lahf
push
jno
xchg
and
dec
add
push
or
push
popa
sub
dec
dec
pop
adc
cmp
out
roll
fimull
cmpsb
cmp
movsl
sub
xlat
fstps
fucomi
jg
jecxz
sub
or
xchg
sub
jmp
icebp
sarb
mov
sbb
aam
popa
and
jae
aad
add
sbb
jecxz
mov
push
in
and
dec
shrb
and
push
das
out
into
cmp
lret
mov
lea
idivb
xor
cmp
into
fsubl
sarl
aaa
lahf
fnstenv
pop
push
or
sahf
ljmp
xor
fstl
rcrl
imul
mov
push
cltd
and
sub
push
icebp
cmp
aad
xchg
dec
jo
jle
loopne
xchg
jnp
xchg
xor
mov
loopne
in
sahf
icebp
mov
rcl
dec
push
pushf
mov
into
push
jle
xor
out
xor
test
adc
ds
pop
jp
cmpsb
mov
in
mov
out
adc
inc
mov
jl
xchg
dec
aam
jle
ds
mov
pop
jo
add
rcrb
mov
xchg
cld
push
sub
lea
shrb
push
lods
fdivrp
loopne
xor
adc
dec
push
ret
fisttpll
xchg
arpl
xchg
cmp
push
mov
imul
and
add
or
out
mov
jg
andb
into
test
push
mov
loop
shl
xor
inc
out
enter
cmpl
push
push
mov
dec
fstpl
xchg
push
test
scas
loope
loope
sub
fstps
in
fptan
js
stc
mov
notb
and
and
bound
xchg
sbb
inc
jmp
push
cmpsb
test
jl
lods
imul
mov
mov
mov
popf
xchg
insl
ja
fidivl
fs
sarl
int
or
cmp
add
dec
imul
aad
mov
fists
pushf
mov
pop
sarl
insl
iret
mov
lret
mov
enter
push
adc
jae
pop
setne
sahf
push
sub
outsl
jnp
cmp
sub
es
lahf
mov
sarb
test
sub
xlat
lret
add
fidivs
mov
pop
imul
mov
es
adc
dec
outsl
imul
imul
data16
pushf
test
jg
or
mov
sub
mov
mov
push
add
out
xchg
and
xchg
inc
clc
notl
test
cmpsb
pop
sbb
fisubl
out
popa
or
std
xchg
add
sub
sarb
dec
jmp
push
mov
nop
ss
add
lds
push
lret
xchg
or
xor
jge
xchg
popf
aas
dec
das
rclb
push
sub
mov
dec
dec
bound
pop
mov
fwait
add
xchg
add
dec
and
mov
lret
mov
das
stos
leave
fwait
addb
out
and
push
aaa
jo
xchg
jge
jge
outsl
push
fdivs
sbb
pusha
outsb
mov
mov
lcall
pop
mov
out
test
iret
jmp
or
or
mov
push
mov
ss
into
jbe
mov
sbb
and
cmpsb
and
imul
gs
cmp
dec
popf
stc
loop
jo
out
cmp
popl
mov
inc
pop
cmp
push
jnp
xor
ss
aam
in
mov
repnz
fldenv
in
jp
ficompl
repz
and
test
or
leave
jecxz
test
mov
xchg
hlt
imulb
dec
cmc
movsl
loop
sbb
and
xor
scas
gs
sbbb
cltd
jg
les
jae
xor
jg
andb
icebp
or
push
cmp
or
sbb
shlb
loop
daa
mov
outsl
mov
jne
imulb
xchg
push
sar
jno
repnz
popa
adc
xchg
nop
or
popf
aaa
lret
sub
sahf
cmc
mov
mov
ret
test
add
data16
adc
cwtl
or
pushf
sbb
int3
out
pushf
push
inc
in
jb
and
sahf
pusha
fpatan
leave
mov
les
push
ret
xchg
test
dec
xlat
cmp
enter
add
mov
or
mov
adc
mov
imul
xchg
sbb
push
jbe
lock
mov
sub
push
addr16
lods
and
into
aaa
into
mov
push
testl
cltd
jbe
sub
and
mov
popa
sti
sbb
dec
add
or
jno
lods
rolb
int
hlt
je
es
sti
push
loopne
neg
inc
mov
mov
pop
rcll
push
ljmp
cltd
pop
repz
subl
jp
fnsave
fs
and
adcb
push
ds
cs
sub
lret
bound
fs
and
test
mov
cmp
roll
das
inc
and
pop
mov
adc
push
mov
clc
out
cmp
in
outsb
rcrb
xchg
das
mov
aad
or
adc
into
push
test
not
and
lret
fisttps
add
into
gs
nop
loop
cmpsb
sub
ljmp
xlat
and
or
movsl
push
imul
arpl
push
arpl
lea
jl
push
mov
outsb
push
out
sbb
and
jns
ljmp
cmpsb
push
ds
repz
mov
or
sbb
cltd
nop
scas
movb
adc
sub
or
stos
jmp
mov
std
ljmp
shl
lret
iret
addr16
popa
jne
and
cmp
pushf
pop
cmp
pop
fmul
out
imul
cmp
sub
jecxz
xor
sbb
fiaddl
mov
rclb
mov
das
aad
pop
shrl
cmp
out
sub
out
cmpb
and
or
sub
xchg
mov
xchg
les
push
aaa
stc
popf
fstp
xor
adc
or
dec
fstps
cwtl
aad
push
out
mov
mov
sahf
enter
mov
sbb
daa
andl
xchg
popf
daa
mov
stc
mov
arpl
stos
int
lock
push
mov
enter
sub
cmp
add
daa
or
push
insl
push
inc
or
mov
frstor
dec
dec
cli
or
cmp
jge
fsubs
cltd
test
lret
dec
cmc
sbb
hlt
clc
push
sti
out
jae
fcmovb
outsb
push
sahf
das
packuswb
pop
inc
pop
inc
fmuls
test
dec
loopne
pop
sub
ss
jecxz
push
adc
sbb
scas
mov
lods
inc
jne
lods
and
mov
xchg
lahf
sbb
movsb
jns
cltd
cmc
das
jg
out
scas
mov
jne
add
dec
xlat
sub
ffree
test
stc
pop
lds
cmp
inc
xchg
lea
scas
add
and
imulb
rcl
lods
push
lods
sub
fbstp
adc
dec
push
xor
jg
mov
push
cmp
pop
or
inc
mov
fstps
ret
dec
and
shlb
jge
pop
imul
pushf
jo
jnp
outsb
outsb
mov
push
mov
test
mov
mov
decb
loop
jl
pop
inc
gs
sarb
scas
shl
stos
mov
push
jmp
push
xchg
jns
andb
int
sysret
jp
sub
in
cmp
fildll
or
push
movsb
dec
dec
and
pop
rorb
or
jae
orb
or
dec
ds
stos
push
imul
lcall
and
ljmp
and
movsl
cmp
mov
rep
ret
insl
std
movsb
pushf
pop
loope
mov
sub
mov
jecxz
mov
stc
daa
mov
pop
sbb
or
fwait
push
aad
jnp
mov
adc
xor
ljmp
pusha
mov
adc
dec
inc
sub
xor
add
testb
movsb
lea
mov
push
inc
sub
je
fwait
dec
out
push
outsl
and
pop
lods
jl
ds
pop
mov
mov
xchg
insb
ja
lcall
cli
xchg
lcall
jb
cmpsl
sbb
jp
mov
xchg
cmp
in
stos
xor
add
xor
fmull
inc
sahf
inc
adc
and
push
sbbb
xchg
add
adc
popf
stos
das
mov
jle
fdivrp
xchg
xor
mov
cli
mov
push
adc
in
xor
clc
jg
mov
jge
or
lods
fisttpl
lds
xchg
cmp
cli
ds
sub
rcrb
pop
hlt
push
repz
jb
enter
sub
mov
call
xchg
jg
fisubs
jg
xchg
push
mov
push
pushf
sub
sahf
xor
sub
std
call
add
push
mov
gs
dec
sub
shl
dec
dec
out
popf
aam
cmpsl
xor
dec
jp
mov
shl
fcos
pusha
js
call
mov
test
jo
inc
or
sbb
dec
loope
lea
cmp
mov
xor
in
cmp
dec
scas
mov
push
fs
loopne
dec
push
repz
in
js
xchg
or
jno
pushf
sub
adc
in
mov
cmp
addl
ret
cmp
cmp
inc
lret
jg
adc
lahf
loope
stos
notb
out
loope
adc
cltd
jl
out
test
cmp
scas
in
shrb
scas
dec
sub
gs
pop
sbb
mov
mov
cmp
lock
push
test
adc
mov
pop
repz
dec
xor
cmp
cmp
notl
dec
adc
pop
push
in
push
rcr
sub
loop
ja
test
ljmp
sub
inc
xor
xor
push
int3
dec
xchg
popf
or
sub
shrl
and
out
sub
and
mov
insl
fs
xchg
fxch
leave
push
add
into
jmp
les
sbb
mov
cld
lcall
push
stos
or
xor
out
add
inc
xor
into
sbb
jp
jnp
ss
lods
jmp
fisubl
jae
mov
pop
loopne
mov
cli
xchg
mov
scas
in
xor
adc
xor
sub
push
lods
into
sub
adc
lret
xor
lahf
stos
pop
push
cmp
mov
paddsb
divb
and
frstor
xlat
mov
out
dec
mov
imul
add
push
xchg
lods
call
icebp
js
cld
add
xchg
js
stos
and
and
cmc
pop
insb
mov
jmp
cmpsb
mov
mov
dec
lret
popf
or
int3
push
inc
gs
cmp
pop
mov
arpl
inc
mov
int
push
es
lret
jno
data16
mov
addb
insl
and
iret
mov
adc
sub
or
pop
in
push
xor
loop
pop
push
lret
pushf
xchg
cmp
adcb
bound
movsl
pop
inc
push
jle
jne
push
mov
inc
testb
fwait
nop
dec
dec
aam
ss
stos
push
imull
imul
cs
add
lds
movsl
xchg
add
mov
sbb
mov
gs
add
gs
fimull
addr16
ret
fdivrs
js
into
ret
pop
mov
mov
jnp
cmp
in
movsl
movsb
repnz
ret
dec
ja
bndstx
stos
int3
dec
mov
insb
shrl
outsl
fs
arpl
push
fnstcw
orl
js
ja
mov
aad
nop
rolb
dec
dec
mov
adcb
xchg
jns
int
nop
lock
arpl
dec
ficompl
sub
ljmp
inc
or
dec
iret
jg
push
cwtl
andl
or
pop
loope
shr
sub
sarl
inc
jmp
pusha
scas
popf
ljmp
cmp
jns
lret
xorl
jbe
inc
out
push
andb
ror
int
std
or
hlt
mov
xchg
xchg
das
add
dec
or
or
xor
mov
and
loopne
iret
sbb
jns
insl
jge
fwait
mov
jbe
or
int3
cmp
push
lods
pop
push
loopne
vmwrite
push
ret
cmc
jbe
in
lods
adc
sbb
shld
mov
aad
xor
dec
test
lahf
insl
ret
leave
sub
mov
mov
fisubrs
cld
xchg
xchg
mov
stos
pop
loope
jne
mov
in
cli
ret
sbb
dec
jecxz
xor
jl
jnp
dec
cmp
into
pop
loop
dec
pop
push
push
pop
cmp
fidivl
mov
mov
aaa
out
push
or
adc
cltd
test
and
out
xchg
lods
mov
xchg
ss
mov
mov
sbb
inc
jg
lods
inc
sbb
fcoms
push
jmp
je
leave
orb
movsb
outsl
dec
mov
test
xchg
pop
fsubrs
aas
into
popa
pop
fwait
shlb
pop
jge
aam
mov
orb
lret
adc
xor
arpl
aam
testl
aad
jb
xor
jmp
sbb
aam
lret
stc
addr16
clc
lret
data16
popf
xchg
xchg
int
dec
mov
mull
cmc
aas
call
adc
mov
xorl
xor
ds
inc
mov
outsl
loop
sbb
jecxz
jns
lds
into
jle
pusha
pop
pop
mov
shll
repnz
add
jp
push
cmp
jne
xor
fistps
out
arpl
cs
mov
fnstcw
xlat
adc
ficoms
sub
and
test
push
imul
add
xor
loope
scas
push
inc
push
fisttpll
mov
cmc
aam
mov
xor
mov
imul
mov
xor
stos
adc
push
cmp
push
sub
fisubrs
repz
and
sbb
adc
ljmp
push
or
pop
jne
mov
inc
in
pop
cltd
stc
shll
popa
sub
xchg
int
test
ds
aas
repz
pop
xor
push
cmpsb
enter
incb
lahf
push
aas
mov
mov
ret
adc
push
inc
cs
dec
xor
popa
ja
push
es
int3
xor
xchg
add
notb
mov
cmovo
cld
adc
sub
xor
pop
not
cs
popa
mov
xchg
mov
jbe
or
xor
adc
cmp
pop
lock
std
xor
daa
push
add
sbb
test
dec
jnp
ret
inc
mov
mov
int
xor
cmp
outsl
adc
pop
cmp
int
adc
adc
push
shlb
cli
jecxz
lock
xor
test
or
jb
and
cs
mov
fs
dec
pop
lods
imul
jl
add
ja
ret
imul
lea
imul
push
push
mov
push
aam
jle
leave
xor
jecxz
lret
sti
in
adc
pop
mov
cwtl
test
out
push
call
leave
enter
adc
push
push
subl
lahf
pop
cli
jo
sub
daa
imul
ret
fisttpl
push
mov
adc
ds
push
push
outsb
inc
xlat
daa
mov
lahf
shlb
push
cmp
pop
call
inc
insl
mov
lcall
jbe
out
dec
test
mov
sahf
or
xorb
lock
imul
ss
xchg
mov
ljmp
aas
sarl
rcr
fiaddl
jne
enter
cmpsl
pop
mov
les
push
pushf
lods
lcall
fcoml
mov
sbb
xchg
sbb
fisubs
mov
int3
test
cmp
mov
inc
jmp
and
addr16
arpl
in
pop
popa
mov
rorl
xor
test
loope
ja
mov
xchg
cmp
lds
in
movsl
xchg
mov
out
jmp
xor
bound
mov
sub
adc
dec
mov
add
pop
push
in
decb
and
pop
jg
xor
mov
xor
inc
in
mov
add
xchg
inc
ret
in
inc
int
push
push
mov
adc
cmc
shlb
mov
repnz
clc
bnd
ds
xchg
sbb
cwtl
cwtl
jo
lret
mov
mov
popa
pop
test
mov
in
pop
ss
push
jecxz
aam
sar
fxch
sub
xchg
jne
add
insb
aad
fldcw
popfw
inc
insl
or
add
jecxz
lea
movsb
mov
rcl
xchg
arpl
mov
cmc
rcrl
push
clc
sbbb
mov
js
jle
jmp
out
jo
xchg
xchg
cwtl
adc
fistpll
adc
xchg
xchg
pop
or
mov
xor
cmp
pop
jmp
loopne
jmp
push
or
pusha
std
push
out
xchg
adc
adc
mov
es
not
inc
ja
stos
les
mov
add
xchg
pop
mov
sub
rcrb
call
popa
jbe
andl
pop
idivl
out
cmp
jl
and
ret
jmp
enter
dec
aaa
mov
or
sub
addr16
and
ret
pop
cwtl
push
pop
popf
push
imul
dec
sub
pop
rcrl
inc
push
fwait
inc
int3
hlt
dec
cmp
and
out
mov
jns
popf
mov
dec
pop
lods
movsb
mov
data16
push
jns
test
in
test
iret
inc
lahf
cmc
mov
cmp
daa
sub
aas
add
push
inc
or
add
sbb
imul
mov
add
pushf
or
bound
popf
xor
rclb
sbb
in
movsb
das
adc
lds
into
int3
mov
or
movsl
jl
ds
mov
shl
scas
xchg
adc
ja
popa
lods
dec
inc
jle
inc
js
out
jl
das
ljmp
mov
imul
test
cmp
xlat
test
scas
and
clc
xchg
pop
mov
pop
lods
mov
jns
int
lods
push
dec
mov
rcll
add
outsb
cmc
in
sahf
sub
gs
jle
lret
and
ja
mov
pushf
dec
shl
dec
repnz
xchg
and
iret
jecxz
int3
imul
pop
and
ja
in
mov
ja
jecxz
js
cmp
pushf
pop
out
inc
inc
cmpsl
pop
jne
jb
adc
in
outsb
test
jg
ret
cmp
mov
jle
jge
push
movsb
loopne
mov
cmpsb
lock
mov
mov
add
inc
rcl
sub
nop
hlt
imul
pop
mov
jmp
jg
es
setb
mov
inc
xchg
ficoml
dec
jmp
sahf
sub
dec
add
pop
fs
insl
adc
push
pop
and
in
xor
mov
cmp
xor
out
pop
cltd
sub
subb
mov
cmp
cmc
jmp
xlat
xor
pop
scas
lret
mov
sbb
and
test
outsb
ds
fisttpll
push
lcall
push
in
xchg
sbb
scas
push
stc
mov
mov
add
mov
std
loop
xor
jle
adc
js
jecxz
pop
loopne
cwtl
cs
cltd
xor
dec
dec
pusha
xor
cmp
fucomp
orb
lock
sahf
insb
nop
mov
cmpsb
mov
fldcw
rcrl
rorb
jmp
sbbl
and
pusha
shl
inc
test
mov
nop
lahf
adc
or
lret
xchg
inc
sbb
fisubrl
ss
push
sti
inc
pushf
std
loopne
xor
and
mov
fldl
aad
mov
mov
mov
pop
add
gs
xchg
xor
insl
cmpsb
test
insb
jg
mov
arpl
push
dec
scas
scas
ja
ds
xchg
jno
push
xlat
mov
mov
sbb
sub
mov
mov
mov
mov
test
jge
bound
loopne
pop
and
cmp
sbb
cmp
clc
lods
cmp
sub
cwtl
pop
mov
jb
ja
filds
gs
bound
cmc
ja
inc
fdivrl
fldenv
or
sbb
sbbl
into
add
mov
iret
shrl
pop
pop
lret
lock
adc
popa
clc
and
mov
xchg
jle
jns
inc
cltd
fstpl
inc
jg
pushf
cli
push
inc
ds
cmp
sub
les
aaa
gs
jecxz
xor
mov
jne
ja
xchg
test
popa
ljmp
jmp
push
lods
imul
int3
xor
xchg
addl
sti
xchg
xchg
inc
mov
shll
loop
push
push
push
loope
add
mov
les
leave
cmp
push
inc
push
push
jbe
sub
lds
add
xchg
dec
jmp
push
test
sbb
adcb
mul
jne
push
out
cmp
or
in
int
mov
xchg
xchg
addr16
stos
in
rol
xacquire
lods
push
mov
cmp
add
xor
or
aaa
or
mov
fildll
sbb
adc
sbb
in
repz
cmpsb
add
lcall
pop
pusha
inc
mov
pop
or
icebp
xchg
dec
out
cmp
out
cmc
adc
push
call
leave
pusha
mov
fs
pop
push
gs
mov
dec
add
pop
mov
aam
in
loop
stc
cwtl
mov
xchg
insl
iret
adc
bound
or
pop
mov
hlt
sbb
into
sbb
jmp
test
cmp
out
add
mov
pop
test
mov
push
inc
push
pushf
push
jl
inc
and
jp
sbb
ret
mov
or
sbb
or
cmp
scas
or
jge
push
in
xchg
sti
aas
lret
and
mov
mov
and
lret
sbb
xchg
shrl
insb
pop
mov
cld
outsb
add
je
subb
addr16
mov
dec
xor
cmp
mov
ret
js
adc
inc
lds
dec
cld
popa
xchg
or
sbb
popf
pop
add
sbb
jo
pusha
mov
and
cmpsb
cmp
dec
mov
arpl
dec
mov
adc
cmp
pop
fimull
loope
mov
lods
add
cmp
jecxz
imul
and
sbbl
cmc
and
jb
pusha
push
orb
std
lret
xchg
int3
movsb
pop
lret
test
inc
cmpsl
jne
fldenv
dec
mov
and
sbb
push
ret
mov
jmp
test
mov
sub
ret
sarl
adc
test
cmp
icebp
loop
push
lods
and
in
mov
xchg
or
jns
dec
testb
pop
adc
idivl
mov
pop
adc
pop
stc
mov
mov
clc
pop
xor
and
cmp
xchg
stos
mov
jmp
negl
dec
dec
sti
cltd
add
xor
jnp
sbbl
iret
imul
in
scas
mov
xor
push
lcall
cwtl
push
inc
pop
jno
dec
lcall
inc
call
mov
shll
in
add
xchg
jnp
cmpb
cmc
pop
lods
pop
pop
scas
mov
sub
inc
shrl
pop
adc
mov
bound
xchg
movsb
outsb
push
loope
das
jo
arpl
dec
xchg
dec
add
in
aam
fwait
repnz
add
leave
js
cmp
xchg
cmpsl
dec
pop
addps
xor
fisttps
or
sub
shl
dec
pop
mov
push
cwtl
xor
test
sahf
push
add
movsl
and
bound
inc
repz
lret
sbbl
mov
mov
push
popa
xor
jb
xchg
loop
sbb
loopne
push
cli
jns
ljmp
jecxz
xchg
stc
sub
aas
push
pop
xchg
sub
lods
popa
mov
xchg
int
std
imull
fsqrt
add
inc
jecxz
push
xor
jo
stc
dec
pop
out
jle
dec
cmc
outsl
pop
out
test
pop
sub
aaa
cmp
xchg
fchs
adc
mov
push
xor
aas
outsw
push
and
inc
xchg
inc
cmp
or
ret
pop
and
das
pop
and
icebp
or
sbb
int
js
ret
adc
pop
dec
pop
sbb
push
jne
js
sbb
inc
mov
and
ljmp
push
jl
cmp
mov
seta
mov
cs
inc
fwait
rolb
nop
aad
and
and
lock
jg
data16
in
mov
pop
in
inc
nop
dec
movsl
dec
mov
sbb
ret
mov
out
rolb
and
sbb
mov
cmp
dec
mov
idivl
jb
xlat
pop
xorb
clc
jne
cmp
push
inc
or
lods
test
inc
push
sbb
mov
mov
mov
pop
mov
adcl
dec
xchg
out
stos
aas
pop
ror
out
stc
pop
insl
or
dec
push
hlt
aad
outsl
add
repz
xchg
xor
xor
je
aaa
orb
xor
jle
clc
lcall
sbb
push
pop
push
inc
push
sbb
inc
dec
iret
inc
mov
imul
xchg
push
pop
adc
jge
out
or
mov
cwtl
jle
mov
push
pop
out
ret
sub
pop
pop
sahf
icebp
xor
neg
in
call
in
lock
enter
xor
mov
pop
outsl
cli
jno
ds
dec
xchg
pushf
fldl
xchg
jp
scas
stos
mov
sbb
inc
mov
xor
loopne
sbb
jp
mov
dec
in
scas
jl
dec
sbb
stos
pop
adc
js
mov
es
dec
imul
and
mov
aaa
js
push
adc
sarb
adc
or
inc
add
es
pop
sbb
nop
daa
cmp
push
and
mov
mov
jg
adc
mov
stos
ret
pop
mov
int3
gs
adc
ljmp
push
loop
negb
vmovaps
mov
outsl
in
test
and
xor
sub
jge
test
mov
fwait
xchg
test
scas
out
je
pop
testl
daa
std
lea
mov
mov
xchg
inc
and
jbe
dec
sub
cli
sar
out
jb
sbb
jle
mov
mov
sub
add
mov
sub
test
or
mov
in
mov
fldcw
out
mov
aas
loop
icebp
xchg
mov
stc
jp
push
sub
jnp
pop
dec
ficoms
daa
sbb
ss
les
xor
push
imul
outsl
daa
lock
xor
xchg
sbb
dec
enter
or
int
loopne
movsl
adc
jmp
inc
xorl
imul
sub
push
gs
add
fadds
mov
lods
inc
inc
push
scas
and
popa
clts
and
cmpsb
mov
dec
into
out
mov
cmp
mov
cli
push
cmpsb
cmp
rsm
les
xlat
xor
shll
movsb
mov
aam
divb
pop
mov
pusha
pop
mov
pop
mov
cmp
mov
addr16
xor
cmp
shrl
insb
jnp
outsl
div
popf
out
shrl
cmpsb
cld
sub
and
inc
add
sbb
xchg
add
cmpsb
add
xor
mov
stc
lea
lods
sahf
sub
imul
lcall
iret
fs
push
sbb
xor
mov
fstpt
aaa
into
jbe
daa
outsl
aad
insb
mov
fdiv
outsb
lcall
jl
mov
shr
pushf
call
or
daa
add
mov
fisubrl
push
data16
mov
xchg
or
ret
or
adc
popf
out
and
cmp
mov
add
jb
xor
lret
cmpl
movsl
sbb
pop
sahf
and
mov
pop
cmp
lcall
mov
mov
jmp
out
sbb
mov
and
xor
pop
mov
inc
lahf
pop
lods
enter
dec
fistpl
outsl
dec
cltd
pop
mov
int3
mov
lods
jl
add
xlat
int3
aaa
mov
mov
pusha
push
ficoms
rep
ret
fs
adc
inc
rcrl
pop
test
fnstsw
sub
sbb
fdivl
rorb
pop
cmp
jns
rclb
push
pop
daa
out
mov
xchg
add
mov
inc
fmuls
sub
adc
cmp
fisttpll
clc
mov
mov
pop
jge
loope
mov
cmp
stos
rcrl
test
lahf
sub
lock
fadd
pop
syscall
out
bound
loopne
sti
sbb
pop
rcll
xchg
add
push
adc
cmp
test
rcr
gs
jp
mov
imul
hlt
aas
js
xor
xor
jo
iret
movsb
ja
popa
in
icebp
insb
jbe
xchg
sub
pop
repnz
or
mov
cmp
push
add
push
aaa
jns
push
mov
push
mov
lahf
inc
lock
or
call
pop
mov
out
insb
mov
loope
pop
cs
cmp
dec
in
and
push
aad
inc
jae
ffreep
js
testl
shlb
fistl
in
xchg
dec
pop
sub
mov
gs
pop
nop
cmovns
sarb
mov
and
add
cmpsb
mov
rorb
sub
inc
mov
hlt
and
bound
jae
lds
fsubrp
pop
mov
shll
jno
insb
push
sub
mov
mov
or
or
stc
xchg
push
mov
lds
int3
je
pop
pop
jg
mov
mov
mov
rep
icebp
sub
leave
sbb
xor
or
je
dec
das
push
add
loope
push
daa
bound
imul
sub
daa
int
inc
nop
adc
mov
xchg
test
push
aam
or
shll
mov
mov
in
jno
inc
repz
imul
inc
push
cwtl
fnstsw
xchg
stc
and
adc
mov
pop
and
mov
insb
test
sbb
in
mov
lretw
cld
adc
ficomps
jecxz
cli
ja
icebp
and
inc
jbe
fbstp
rcrl
ret
or
test
mov
mov
iret
fidivl
adc
mov
pop
jl
inc
fwait
addr16
pop
xchg
cmpsl
dec
sbb
dec
js
sarl
push
mov
mov
out
test
xchg
test
mov
jmp
ja
mov
mov
mov
mulb
sub
cmpsb
in
movsb
pop
ficompl
push
outsb
js,pt
lahf
or
nopl
sti
xchg
push
jl
lods
cmp
lods
mov
bound
xlat
outsl
rol
pop
repnz
jb
push
jp
push
pop
arpl
mov
ret
es
mov
loopne
sub
movl
inc
or
dec
mov
pop
addb
dec
pop
mov
gs
scas
cmp
xchg
pop
or
aaa
dec
notl
arpl
and
mov
iret
in
adcl
xor
mov
aad
or
ret
mov
lods
mov
fcomps
or
xchg
aaa
or
mov
add
daa
das
test
shll
scas
mov
pop
sbb
push
sub
push
insl
inc
ss
mov
test
mov
mov
lods
mov
sub
ss
daa
out
dec
mov
xchg
push
lds
dec
sub
std
ss
push
push
insl
sbb
xchg
mov
push
fcmovne
fsubr
repz
pusha
ss
dec
xchg
sub
out
mov
loope
repnz
roll
xchg
xor
fwait
xor
in
jnp
enter
hlt
fisttpl
adc
imul
mov
push
pop
divb
test
mov
jge
data16
fwait
test
dec
mov
adc
cmp
and
jecxz
inc
pop
cmp
add
or
gs
push
in
mov
jne
sub
jo
fstpt
hlt
out
mov
pop
out
ret
pop
add
negb
cmp
test
scas
dec
sub
lods
mov
pop
sti
or
sub
mov
int3
rol
mov
pop
cmp
and
or
mov
pop
lret
mov
mov
xor
cmp
mov
in
fbstp
scas
loopne
pop
xchg
rcrb
das
and
fimull
jnp
cmp
xorb
adc
inc
lock
movsb
and
cmp
mov
ret
xchg
clts
push
sbb
dec
cmp
jg
xchg
fucomi
into
test
mulb
and
out
sub
pop
sub
mov
lret
loopne
xchg
adc
cs
sbb
xor
fiaddl
pop
mov
mov
push
mov
xor
push
aad
mov
fadds
fistps
jl
add
in
push
fiaddl
add
and
scas
inc
dec
and
rcll
inc
sub
gs
xor
jne
add
xor
jle
sbb
adc
lea
jb
cld
or
and
push
out
dec
lods
xor
or
shll
fnstcw
imul
push
mov
outsb
clc
inc
imul
xor
mov
pop
jmp
bound
lret
icebp
push
lock
out
cmpsl
sbb
adc
inc
leave
push
lahf
cmp
push
inc
xlat
mov
out
lods
sub
fcmove
ret
dec
iret
pop
test
popf
jge
inc
fnsave
xchg
jmp
jne
inc
cld
fwait
hlt
popa
adc
dec
cmp
mov
outsl
jb
adc
pop
or
mov
pusha
ss
xchg
dec
aas
lods
push
insl
aad
iret
xchg
jmp
push
adc
push
movsl
stos
fstl
nop
in
xor
mov
ret
and
adc
dec
loope
mov
and
js
repnz
fisubs
dec
inc
loop
sub
fdivrs
jae
cmp
or
push
cwtl
mov
inc
dec
sahf
sti
sbb
sub
add
gs
xchg
sub
pop
enter
mov
sub
dec
pop
mov
xchg
adc
jecxz
cli
ds
out
mov
in
imul
leave
cs
rolb
adc
fwait
gs
adc
test
xchg
mov
pop
out
adc
addr16
in
mov
jb
sbb
aas
movsl
sbb
ret
popl
or
jle
fnstenv
xchg
lcall
lret
pop
ret
and
mov
jge
int
loope
xor
stc
push
in
sub
test
mov
and
inc
out
mov
xchg
push
adc
out
mov
cltd
pop
jb
dec
xchg
add
inc
and
cmp
and
push
jae
mov
nop
pop
xor
je
add
jbe
pop
pop
or
inc
cmp
rolb
ret
or
jns
int3
movsb
mov
xchg
popa
inc
ficoms
xchg
jnp
inc
sub
repz
push
pop
in
cmpl
push
test
leave
xchg
sbb
popa
xor
adc
cmpsl
stos
push
ret
dec
js
jge
out
and
insl
push
sub
into
lret
mov
lcall
shlb
int3
jnp
lods
js
pop
inc
mov
mov
hlt
xchg
jne
cmp
lea
loopne
popa
testb
aaa
popa
cmc
ficompl
mov
sbb
mov
push
jb
cmp
pop
adc
xchg
dec
in
jecxz
pop
cmp
xlat
jnp
lods
fdivrp
push
out
xor
push
inc
out
xchg
mov
clc
jae
lods
test
ljmp
in
or
jmp
xchg
imul
push
aad
out
xor
cmp
lds
pushf
jne
xchg
dec
out
subl
cld
aas
stc
mov
sti
mov
mov
push
andb
adc
test
pop
lea
mov
or
cmc
or
jle
inc
call
cmp
test
movsb
ja
or
xchg
xor
daa
stos
cwtl
or
les
js
jnp
pop
jge
add
or
mov
jge
sbb
inc
jo
cs
or
mov
nop
outsl
out
pop
cmp
adc
cmp
fsubrs
pop
adc
stc
neg
stc
pop
rclb
adc
and
xor
cld
dec
push
stc
fisubs
mov
lods
dec
and
aad
fnsave
mov
call
xchg
push
pop
popa
mov
dec
mov
les
inc
mov
out
aaa
mov
push
in
push
sub
fcoml
lea
lods
fbld
jge
ja
adc
xchg
lcall
mov
adc
mov
rol
jle
jg,pt
ret
adc
mov
jecxz
out
push
inc
insb
imul
lods
pushf
test
ja
nop
cs
push
add
cwtl
cmc
shl
push
repnz
movsl
hlt
cmp
es
aam
inc
subb
bound
adc
movsb
mov
cltd
and
and
shll
add
movl
and
xor
cli
dec
stos
sub
lahf
daa
insl
xor
lret
fldcw
movsb
into
popa
adc
sbb
push
xor
cmp
push
icebp
pop
cmpsb
inc
mov
sti
xchg
push
mov
pop
test
scas
lahf
mov
pop
jbe
push
stos
pushf
mov
add
pop
mov
repnz
jg
pop
sub
pop
imul
fists
mov
ret
outsb
loope
nop
and
jl
or
mov
loopne
inc
or
movb
imul
mov
fs
pop
mov
pop
aam
aad
cmp
pop
stos
pop
sub
pop
cmp
jne
push
and
fistl
stc
in
push
leave
inc
popl
add
xchg
cmpsb
cmp
push
xlat
inc
pushf
and
inc
leave
das
inc
and
shlb
cmc
arpl
sbb
lret
inc
mov
insl
xchg
lods
mov
test
jl
sub
push
add
or
cld
pop
push
repz
xor
push
dec
cmpl
fsubrs
dec
test
sbb
outsl
sti
fwait
shrl
jns
rorl
bound
inc
stc
nop
jns
xchg
xchg
cmp
scas
adc
and
mov
clc
rclb
nop
adc
inc
mov
pop
enter
xor
insw
sbbb
sahf
or
dec
sti
bound
sub
mov
loopne
xlat
test
clc
insl
movsl
adc
or
mov
scas
mov
push
leave
push
mov
jae
and
mov
mov
xor
je
push
in
jo
loop
sub
daa
addr16
cwtl
dec
cli
or
or
cmp
push
test
push
decl
repz
add
fdivl
pusha
scas
test
adc
sbb
pop
mov
mov
vmovupd
sub
jbe
push
test
mov
add
imul
pop
push
pop
push
repnz
inc
jbe
nop
and
or
lods
and
mov
aaa
call
in
loop
sub
mov
mov
movsb
in
mov
aaa
xor
adc
gs
int3
mov
popf
ret
fs
xor
popf
push
xchg
rcrl
cli
aaa
inc
push
xchg
xor
pushf
and
or
lods
movsb
jno
adc
in
add
loop
outsl
push
cmp
pop
je
inc
sbb
xchg
xchg
dec
add
loop
pop
sub
ja
mov
sbbl
enter
adc
push
xor
repz
es
sti
mov
hlt
icebp
xor
lret
mov
fwait
subl
in
inc
push
mov
pop
lock
dec
mov
shl
dec
mov
hlt
das
mov
testb
into
xchg
sub
push
mov
mov
mov
xchg
mov
mov
cmp
sbb
ret
loope
mov
iret
mov
lock
lods
loopne
adc
jecxz
repz
cmp
aam
cmp
jp
jae
arpl
stos
pop
cmp
cltd
xorb
jns
pop
movsb
pop
push
mov
mov
add
fldt
out
lret
or
jo
lea
aaa
pusha
dec
xchg
mov
mov
cmp
pop
repz
daa
push
push
add
cmp
pop
negb
std
add
or
dec
cmc
es
or
sub
mov
push
add
enter
mov
scas
dec
mov
inc
push
or
push
incb
cli
out
cld
xchg
cmpsl
fsubl
push
adc
mov
sub
mov
fistpll
rclb
repz
dec
push
or
aam
xchg
sub
add
pop
push
movsl
sub
xlat
ja
insl
jne
add
stc
aam
data16
divb
sub
and
mov
das
jne
aaa
adc
pop
pop
negl
add
cmp
sbb
sub
mov
sbb
xor
movsl
push
xchg
in
aad
adc
push
mov
inc
call
clc
into
push
add
adc
jl
fs
sahf
cmp
cmp
xchg
dec
xor
push
in
mov
repz
cmpsb
cmp
hlt
lea
add
stos
and
in
lcall
mov
and
xor
int
fwait
jbe
das
jg
les
push
test
loopne
xchg
mov
or
mov
xchg
mov
test
out
pop
jo
pop
testb
dec
xor
mov
test
push
fimull
adc
decl
jo
inc
pop
pusha
clc
push
mov
fldt
jecxz
fs
mov
scas
and
pop
push
cmp
adc
push
cs
cmp
cld
pop
jg
rol
cmpsb
adc
loope
repz
sub
out
movsb
int3
mov
cld
mov
inc
pop
and
mov
loopne
dec
adc
push
push
js
push
and
cli
push
pop
jecxz
lds
mov
int3
pop
jp
test
jne
dec
test
insb
int3
test
nop
sbb
inc
dec
in
xlat
mov
pop
sub
sbb
inc
loop,pn
test
das
xor
jl
jp
sub
outsl
lahf
xchg
push
arpl
fmul
mov
xor
aad
mov
cwtl
jge
inc
cmc
mov
jbe
insl
mov
out
mov
scas
movsl
js
call
shr
in
sti
test
insl
mov
repz
shlb
pushf
in
lret
or
cmpl
lcall
mov
mov
pop
push
add
xor
mov
fistl
into
pop
les
or
jnp
es
add
mov
loope
out
dec
mov
aaa
sub
mov
add
data16
in
jbe
xor
aad
leave
cmp
jno
mov
mov
jmp
jbe
stc
xchg
push
mov
and
int3
and
rcl
xchg
xchg
lods
inc
imul
or
mov
mov
jne
dec
adc
dec
out
inc
xchg
imul
jb
fwait
xchg
aas
cmp
aad
cmpsb
loopne
mov
pusha
divl
sarl
insl
aam
lahf
push
xor
pop
jp
or
pop
jle
fnstsw
or
dec
test
pusha
add
mov
adc
xor
data16
call
cmpsl
mov
dec
lret
xor
xlat
adc
rolb
movsb
inc
pop
fucom
or
adc
dec
out
aam
cmp
mov
shrb
xchg
loop
xlat
outsb
and
xchg
push
xor
js
inc
push
cmpb
addl
jl
and
jnp
outsl
mov
jmp
incl
cmpsb
jb
push
mov
lds
scas
sub
cs
pop
mov
pushf
mov
shll
push
pop
jno
test
mov
int3
ds
gs
dec
xlat
fiadds
push
fiaddl
pop
jno
popa
popa
add
rorb
jmp
pop
and
xchg
sti
aam
sub
mov
out
pop
lock
stos
mov
leave
ja
jl
push
insb
sbb
je
sbb
mov
mov
insl
mov
sbb
movq
out
fdivl
jne
jp
cmp
jns
mov
add
mov
xchg
mov
arpl
iret
cmpsl
or
aaa
les
testb
xchg
rorl
enter
xor
sbb
xorb
xchg
mov
js
test
nop
dec
mov
push
movsb
cmp
fnstsw
xchg
jno
mov
movsl
sbb
jb
ret
hlt
jne
pop
adc
inc
sub
jb
adc
mov
stc
je
icebp
push
notb
out
into
test
push
mov
push
xor
cmpb
mov
or
daa
dec
testb
dec
dec
sub
repz
lcall
mov
dec
pop
pop
ret
xor
push
bound
pop
lcall
lock
movsl
mov
push
movsl
int3
jns
mov
mov
adc
jo
mov
inc
psrlq
call
loope
out
dec
push
xchg
and
inc
and
test
adcl
lds
sub
mov
dec
cmpsb
lods
cmp
je
shll
xchg
mov
les
add
fldl
or
mov
pop
lods
xor
and
inc
mov
std
fs
push
or
fidivrl
cld
jnp
and
cmp
mov
mov
movsl
icebp
inc
js
and
mov
stos
dec
add
xchg
adc
jo
mov
xlat
dec
loop
sub
ror
repz
aas
xor
loop
lds
clc
lcall
add
jle
pop
dec
mov
mov
fs
enter
jbe
cmp
mov
push
sub
or
push
addb
add
pusha
xor
std
orl
hlt
cli
popa
mov
adc
pop
jg
aad
xor
lods
mov
dec
inc
shl
jo
inc
jbe
sub
or
pop
outsl
jb
sub
fstl
hlt
and
mov
out
js
aaa
mov
gs
test
push
adc
push
inc
daa
push
xor
stos
in
add
push
roll
mov
int3
fstpl
aam
das
aam
insl
jnp
xor
ret
mov
fmulp
fidivrl
dec
mov
mov
jge
xor
movsl
or
test
cmp
leave
test
sub
jg
dec
fcmovu
imul
mov
sarl
adc
aad
mov
xor
lods
cmp
sbb
mov
fwait
xor
pop
les
aad
lods
jmp
xor
sahf
cmp
sti
mov
xor
lods
add
add
sub
sub
inc
jbe
in
sbb
mov
std
aam
pop
cmpsb
loope
xor
push
dec
jge
aam
and
dec
xor
xchg
call
lea
sub
es
mov
or
and
cmpsb
or
addr16
mov
pop
mov
mov
cmc
insl
in
stc
sti
xor
mov
pop
jp
inc
pop
sub
fxtract
adc
outsb
jmp
xor
jp
inc
mov
xor
hlt
push
mov
add
or
inc
jns
fnsave
mov
mov
outsb
gs
mov
mov
rcrb
xlat
inc
iret
push
jge
loope
ficompl
iret
into
int
ja
adc
dec
loope
xor
lods
push
stos
jne
sbb
fisubrl
push
int
andl
lahf
pop
sbb
sbb
into
inc
cltd
mov
or
gs
es
or
cmp
in
clc
or
add
aam
jno
shr
mov
enter
jecxz
loop
and
aas
rol
dec
repz
cs
ret
mov
repnz
call
or
bt
fs
xchg
or
xchg
jl
iret
and
pop
sbb
inc
push
or
lcall
push
enter
mov
fisttpl
adc
das
test
pusha
xor
xchg
or
pop
idiv
pop
cmp
push
jecxz
mov
mov
fs
ret
test
sub
push
xor
add
xchg
or
sbb
xchg
mov
int
loopne
add
out
loopne
call
mov
ljmp
mov
mov
lods
fcmove
pop
add
imul
dec
dec
jbe
fwait
push
and
jo
and
jmp
or
pop
test
push
ljmp
jb
xor
pop
jae
push
int
cmpsb
jb
cmp
lahf
fwait
outsl
out
outsl
mov
xlat
mov
mov
fisubl
das
pop
pop
cmp
iret
xchg
mov
or
cmpsl
push
outsb
push
shll
popa
neg
add
adcb
cmpsb
jge
mov
jnp
or
fcoms
repz
jnp
adc
cmp
test
xchg
push
into
ja
jnp
push
mov
dec
fs
call
inc
fists
add
cld
mov
push
pusha
iret
xor
cltd
inc
sbb
mov
xorl
and
jno
sti
and
das
sbb
jp
dec
mov
push
sbb
shrb
dec
cmp
jne
icebp
dec
add
mov
push
shlb
jo,pn
stos
cmpsb
jmp
sub
sbb
dec
or
lcall
pop
adc
push
mov
xor
mov
inc
test
enter
pop
subb
cli
dec
dec
jecxz
ret
dec
fcoml
push
adc
pushf
xor
loop
jnp
insb
mov
out
push
mov
inc
stos
fcmovnu
imul
fs
adcb
xchg
and
push
mov
push
cmpsb
in
pop
jmp
xchg
cs
fld
mov
negl
jmp
and
dec
out
cmp
ss
mov
cmp
pop
test
dec
cmp
adc
ret
mov
dec
inc
in
das
rclb
mov
fidivl
out
mov
int3
cmp
cmp
xchg
sub
push
cmc
fdiv
sub
es
jnp
sub
inc
idivl
cltd
xor
popf
cmp
xor
pop
je
mov
mov
mov
test
outsb
inc
aaa
jo
mov
cmp
sahf
pop
jl
inc
out
cmpsl
cmp
aas
push
lds
inc
arpl
mov
cmpsb
adc
pop
or
fsubrs
test
mov
insb
mov
imul
add
insl
leave
jle
jnp
sahf
sbb
shrb
in
pop
arpl
pop
jbe
nop
cmc
mov
cmp
xor
push
adc
mov
mov
lret
bound
sti
out
add
xor
fisttps
lds
repnz
jecxz
adc
into
sahf
das
xchg
pop
mov
jns
xor
sti
push
pop
cmp
xchg
inc
es
mov
scas
popa
mov
in
shrl
mov
xchg
int
outsb
roll
insb
push
in
movsl
jno
out
lock
into
xchg
jge
mov
in
test
aam
js
jns
pop
adc
mov
lods
and
or
xor
cmp
mov
mov
mov
test
adc
rolb
fistl
inc
stos
jmp
es
stos
jb
jmp
incb
push
and
cmp
out
cli
arpl
mov
lods
scas
push
in
push
mov
sti
xchg
lahf
sbb
out
cmp
insl
in
jmp
cmpsb
cmp
xlat
pop
sub
lods
insb
jb
sahf
into
xchg
arpl
adc
subl
cmp
inc
out
sahf
sbb
fistpl
mov
xchg
or
lock
and
insb
adc
mov
ljmp
adc
lea
fidivl
and
add
scas
mov
or
xchg
ljmp
mov
pop
add
fs
rcl
and
sbb
es
cmc
push
or
dec
push
add
scas
loope
rcr
lcall
lock
mov
xor
fldl2t
movsb
popa
dec
cmpsb
mov
dec
insl
loopne
dec
ds
into
addr16
lret
stc
pop
test
push
out
lods
dec
fimull
outsb
jle
in
jo
add
sub
cltd
add
shll
inc
dec
jecxz
data16
adc
imul
xor
test
in
sbb
insb
xchg
xchg
inc
mov
inc
sbb
jae
cmp
sub
push
jns
ret
cmpsl
mov
fnstenv
mov
cmpsb
adc
push
mov
mov
das
sbb
xlat
jge
lock
icebp
sbb
je
inc
xor
xor
cmp
or
fidivrs
sub
iret
data16
mov
hlt
lods
sub
ljmp
sub
fcomps
ja
mov
adc
inc
sbb
xor
pop
jbe
lea
mov
cmp
adc
jb
int3
arpl
mov
mov
xchg
test
or
dec
push
sub
jl
iret
sbbl
push
adc
sbb
mov
push
mov
jle
sub
mov
pusha
test
mov
push
mov
aad
mov
xchg
je
jg
rcrb
add
test
and
push
or
jns
stos
adcl
adc
push
and
fildll
daa
js
sbb
aas
insb
sub
out
sbb
and
pop
hlt
dec
je
push
mov
sub
insb
sub
adc
lea
mov
in
ja
shlb
xchg
add
shrl
cs
ds
sub
test
pop
and
mov
mov
and
ficoml
xchg
dec
jmp
sahf
nop
fmuls
mov
xchg
jle
out
xchg
inc
aaa
test
xchg
popl
enter
lcall
es
cltd
mov
ret
sub
sbb
insb
notl
lds
addr16
xchg
add
mov
aaa
and
sahf
ds
dec
in
imul
push
shr
cmp
push
cmpsl
sbb
fists
scas
dec
and
stc
iret
inc
fdivr
cmpsb
addl
push
ja
adcb
fidivrl
mov
sahf
inc
sub
jge
xchg
sub
jnp
xor
cmp
in
movsb
into
movsl
push
push
mov
leave
inc
xor
ret
inc
loope
je
adcb
imul
lods
out
push
stos
push
mov
lods
xchg
adc
in
cmp
imul
pop
cmpsl
add
adc
lret
xchg
inc
adc
pusha
mov
stc
fisubrl
pop
cld
push
jecxz
add
xchg
in
and
or
bound
or
rcrb
cwtl
loop
jno
mov
sti
mov
out
repnz
popf
stc
shrl
lds
insb
jbe
mov
mov
jle
or
jp
idivl
adc
clc
inc
or
inc
push
jl
xchg
es
stos
lcall
imul
push
pop
les
cld
int3
orl
and
sahf
sub
mov
dec
and
insl
hlt
sbb
xchg
jmp
das
shrl
es
repnz
and
data16
lock
data16
js
inc
jle
sbb
orb
push
lock
pop
or
cs
pusha
fwait
push
sub
lods
add
aad
pop
hlt
inc
repnz
xor
adc
iret
mov
jno
lds
xchg
cmp
lds
mov
popa
fcomp
xor
xchg
lea
and
sub
jge
sub
out
xor
xchg
or
stos
je
into
mov
test
leave
pusha
clc
std
pushf
push
or
frstor
aad
sbb
rcrb
enter
in
push
mov
fdivl
dec
test
aas
mov
js
imul
sbb
xchg
loop
cli
je
inc
mov
mov
or
sub
loopne
scas
adc
push
imul
pop
adc
dec
int3
jp
jle
or
cmp
inc
xchg
sub
jecxz
xacquire
mov
cld
cmp
dec
mov
push
icebp
loop
jge
jl
pop
movsb
ja
jae
xchg
loop
push
test
dec
fidivl
pop
pop
test
inc
jnp
sub
xchg
sub
jo
shrb
jne
inc
xor
inc
movsl
aas
outsb
xlat
mov
lret
fisubs
and
pop
cmp
cmp
sbb
in
testb
in
or
jb
flds
xchg
push
or
inc
fsts
idivb
pop
sub
lock
imulb
mov
pop
ja
inc
xor
xchg
adc
mov
dec
cmp
imull
mov
out
xor
push
pop
outsb
sbb
sbb
les
cmp
mov
rcrb
adc
jmp
lods
fisubs
mov
sbb
mov
mov
adc
cmp
or
mov
sub
xor
xchg
push
mov
mov
jle
jnp
in
sbbb
add
pop
add
in
out
dec
jge
inc
sub
pop
jle
rcrb
std
in
adc
rorb
or
ret
mov
push
mov
adc
les
arpl
stos
inc
mov
cld
stos
cmp
adc
lds
jnp
xlat
inc
rol
out
jmp
xor
mov
lret
push
dec
pop
aas
aad
mov
add
sbb
sub
jb
mov
nop
cwtl
mov
inc
ja
or
cs
adc
cs
bound
fwait
sub
pop
ljmp
lret
lahf
shl
inc
lcall
and
sub
imul
popa
clc
mov
or
push
adc
xchg
dec
mov
es
and
pusha
cmp
adc
cmp
xchg
cmp
or
sbb
jo
add
into
inc
inc
sbb
push
pop
adc
jecxz
lret
rol
mov
test
loope
adc
inc
cmc
dec
push
mov
mov
adc
jle
jae
adc
inc
out
outsb
int3
cmp
pop
and
dec
cs
ja
jae
dec
xchg
add
in
int
push
add
jbe
pushf
xor
sbb
xchg
insb
or
fwait
hlt
push
hlt
mov
dec
inc
jae
shld
jns
inc
lods
inc
sub
xchg
cmp
push
lea
ret
outsb
xchg
pop
rorb
xorb
dec
js
dec
mov
pop
cmpb
jg
out
imul
nop
cmp
cwtl
xor
adc
ret
pop
inc
outsb
mov
jb
push
in
push
mov
sub
ret
pop
pop
pushf
pop
outsb
jl
enter
sub
mov
jecxz
push
movsl
lock
sbb
xchg
mov
xchg
shrl
sbb
aaa
xchg
addr16
je
dec
xlat
jb
dec
dec
pop
call
int
push
pop
fisubs
aam
ret
mov
bound
dec
xchg
inc
jecxz
outsb
adc
jb
sbb
clc
xchg
sbb
lods
push
repnz
fnsave
and
push
outsl
cmp
pusha
mov
scas
ds
or
sarb
lret
xor
fcoml
out
mov
sahf
clc
inc
ror
popa
mov
fucomip
aas
in
movsb
rep
inc
xor
pop
fs
aam
jnp
popa
lock
fildl
cltd
or
and
aam
xor
adc
push
and
sbb
adc
movb
imul
js
ja
and
f2xm1
mov
adc
ss
sub
inc
push
xor
fisubl
xchg
cmpsl
rcr
mov
rcrb
imul
pop
test
xor
outsb
rcll
bound
sbb
dec
push
stos
add
add
jbe
popa
lcall
push
xor
sbb
aad
jns
mov
xchg
rolb
inc
fstl
xchg
mov
push
cmp
mov
ja
jg
fistpl
div
int3
and
and
fwait
pop
icebp
mov
fimuls
loop
shr
jg
dec
in
mov
lock
in
aas
lret
mov
out
sub
in
xor
in
add
xchg
or
in
mov
jle
mov
add
xchg
add
lahf
loopne
fcoml
mov
stos
push
iret
in
in
cwtl
lock
xor
out
arpl
mov
mov
mov
mov
or
adc
inc
add
push
mull
sub
push
mov
push
push
lods
popf
xor
mov
aam
icebp
mov
push
sub
cli
inc
fildll
mov
mov
pop
cltd
out
cli
or
jae
loope
push
dec
inc
sti
adc
stos
ljmp
mov
mov
loope
stos
sbb
pusha
mov
mov
andl
mov
pop
je
or
lods
sub
sbb
rcl
pop
jo
sub
subl
xchg
jmp
mov
mov
pop
movsl
addr16
pushf
andb
mov
in
std
xchg
mov
inc
les
insw
fisubrl
cld
das
inc
je
cltd
fdivr
pop
push
mov
pop
jg
mov
jp
js
insb
outsb
addb
mov
cld
inc
push
ss
ds
adc
xor
imul
jge
loope
fwait
mov
fdivrl
cld
imul
sbb
jbe,pt
push
add
inc
push
mov
pop
lods
out
in
dec
je
jno
lds
cmpl
jns
movsl
cltd
xchg
arpl
aaa
repz
aam
div
inc
add
shrl
outsl
pop
scas
lods
mov
test
jo
or
adcl
inc
pop
lds
in
pop
sub
sub
and
cmpsb
jnp
or
xlat
sub
in
inc
or
int
lds
cpuid
push
lods
xchg
cmp
inc
fcmovnbe
insl
sti
push
into
and
dec
cmpsb
xchg
pusha
stos
jg
popf
sub
shlb
cli
in
inc
sbb
adc
outsb
int
mov
xchg
lods
xchg
inc
testl
shrl
sub
insl
sbb
scas
test
dec
cmpsb
or
sub
mov
or
cwtl
jp
in
inc
repnz
pop
hlt
jge
int
sbb
jnp
popf
jg
xchg
or
or
inc
movsb
add
fs
sub
add
xchg
aad
test
enter
sub
mov
ficompl
mov
jo
sbb
sub
rcll
popf
sub
cmp
shrl
jae
mov
mov
cmpsl
xor
test
push
les
sub
fsubrp
adc
jmp
jl
dec
cwtl
in
push
sub
sub
or
inc
cmp
push
cmp
pop
cmpsl
jae
mov
pop
je
dec
xchg
std
push
add
adc
jne
inc
ljmp
fcmovb
sbb
mov
xor
mov
mov
push
inc
dec
sbb
fwait
jp
das
xchg
mov
inc
daa
pop
mov
hlt
adc
push
clc
cmp
or
outsb
ret
xchg
mov
lahf
push
cld
push
mov
mov
adcb
mov
xor
mov
aad
push
jmp
push
pop
mov
shll
daa
test
dec
mov
enter
je
std
push
xchg
mov
fnsave
fistps
aaa
mov
fnstcw
repz
and
out
cmp
jp
stc
int
lret
adc
push
stos
repz
push
cmpsl
roll
cs
test
cwtl
mov
shll
sbbl
fst
fldt
push
add
je
push
int
xor
inc
xor
push
ljmp
fisttps
push
inc
rcl
jp
shll
mov
sbb
mov
and
aaa
insb
inc
jp
jno
push
and
and
mov
pop
xchg
pop
fdivl
sub
cli
xchg
sbb
mov
inc
jecxz
jae
pop
lods
mov
sahf
push
ljmp
jle
mov
inc
roll
xlat
mov
jnp
mov
and
iret
jns
js
in
cmpl
fists
movsb
or
fmull
lcall
add
sbb
test
loope
inc
clc
push
lds
add
scas
mov
inc
fnsave
sbb
xlat
icebp
adc
gs
adc
xchg
fimuls
push
js
or
clc
push
mov
into
xchg
sub
jne
sub
inc
dec
adc
cmpsl
add
sub
aam
inc
pop
push
pop
xlat
add
or
out
enter
push
push
jbe
rorl
fwait
sbb
shll
mov
lods
lock
xor
nop
add
jecxz
or
fdivl
sub
je
mov
cld
xchg
mov
ficomps
mov
out
push
ss
xor
iret
mov
cmp
rcll
mov
dec
nop
pop
fsubrl
cmp
jge
ret
xor
pushf
mov
xchg
call
add
clc
scas
pop
insb
mov
mov
shll
les
jg
int
in
or
jbe
mov
pop
ret
mov
mov
imul
pushf
subb
jmp
out
out
xchg
dec
jne
ja
add
dec
pop
mov
push
insb
mov
mov
push
movsl
push
push
out
mov
pop
das
pop
aam
in
stc
aam
call
ret
mov
dec
pop
pop
fnstcw
rorb
push
and
cwtl
subl
pop
dec
and
cmpsl
xchg
sub
out
push
mov
gs
jno
mov
push
cmp
imul
dec
xchg
xchg
pop
xor
or
and
push
mov
mov
pop
jae
mov
cltd
and
push
adc
mov
xor
repnz
push
std
hlt
aas
mov
mov
adc
aaa
lods
mov
jl
xchg
dec
popf
cld
adc
pop
movsl
lds
pop
pop
mov
shlb
lock
ss
or
inc
cs
repnz
aad
sysret
push
in
dec
inc
mov
cmp
push
mov
mov
jo
cwtl
imul
repnz
movsl
xchg
imul
xchg
and
or
add
les
pop
lock
sub
push
push
enter
imul
leave
into
jo
lea
or
pop
inc
mov
loopne
jbe
pop
push
enter
dec
fnsave
clc
xor
mov
popf
mov
mov
rorl
aaa
into
aas
repz
out
jle
aad
mov
xor
sub
sub
mov
cmp
pop
repnz
push
rcrb
fsts
jecxz
and
js
insl
stos
sbb
je
scas
mov
repz
xlat
mov
lret
pop
hlt
es
std
cmp
out
pop
les
cmpsb
cmp
mov
lds
lds
sub
push
jae
pop
idivb
pop
lods
pushf
shrl
int
pop
sbb
sahf
cmp
mov
jp
aas
lods
das
sbb
hlt
dec
fwait
xchg
mov
repnz
xor
adc
push
mov
fisttpll
stos
cmp
dec
dec
push
imul
jb
pop
leavew
scas
nop
subb
add
xchg
pop
mov
sbb
sub
cmpsl
push
dec
shr
cli
les
jle
imul
mov
movsb
imul
cmp
popf
scas
mov
xor
dec
insl
idivb
push
int
sbb
rorl
pop
das
cld
out
push
sub
shrl
cmp
jg
cmpsb
lock
imul
imul
loope
xor
jmp
push
cmp
lds
sbb
fwait
push
out
pop
hlt
fwait
jnp
xor
xchg
inc
fwait
std
arpl
mov
add
xchg
sbb
pop
xchg
imul
jno
inc
push
mov
lock
xor
and
out
pop
sub
xor
mov
pushf
mov
out
sub
mov
into
push
mov
imul
scas
lods
iret
sbbb
mov
sub
mov
or
cmp
fdivrs
cwtl
xchg
xchg
inc
stos
xor
xor
xor
repnz
sub
pop
sbb
popa
icebp
call
or
push
jnp
int3
dec
movsl
pusha
popa
notl
ja
ljmp
xor
cmpsl
cmp
fwait
enter
shll
vpshuflw
mov
pop
in
call
movsb
cmp
sub
cmp
pop
cwtl
scas
jns
jno
iret
and
lds
lret
fldcw
cmpsl
les
mov
test
ss
or
rclb
lds
fs
push
sbb
dec
test
add
jno
add
cs
pop
jne
imul
sbb
inc
cwtl
sub
adc
xor
xchg
int
jns
jnp
mov
je
jne
cmp
aad
inc
mov
cmpsb
sub
imull
aaa
push
mov
pop
push
lods
addb
and
xlat
cmp
sar
sub
test
sub
dec
lret
addl
sbb
in
cwtl
movsl
push
scas
int
gs
scas
cli
adc
gs
cmp
arpl
into
push
leave
stc
jle
jno
xorl
sub
aam
std
rolb
pop
dec
xchg
lock
insl
cmp
dec
inc
xchg
jp
pop
xor
dec
sbb
test
mov
inc
in
lcall
jg
outsb
mov
insl
add
xchg
mov
inc
in
add
pop
ret
icebp
push
sub
int
dec
out
or
push
mov
insl
add
jbe
je
outsl
mov
jno
mov
pushf
mov
fisubs
sahf
lret
iret
rolb
inc
sbb
in
sub
lahf
mov
mov
shl
cld
sub
dec
dec
push
push
mov
test
jbe
xor
pop
cmp
mov
adc
insb
popa
xor
les
cld
pop
and
pop
xchg
jbe
add
mov
lds
lods
inc
mov
mov
push
mov
pop
xchg
ja
dec
mov
outsb
inc
lods
pop
xor
mov
test
lods
jnp
call
iret
inc
in
dec
pop
gs
jb
dec
xchg
jp
aad
cmp
xchg
cmp
test
orb
pop
and
mov
mov
xlat
mov
test
jbe
or
xor
ficoml
mov
dec
adc
adc
xchg
ficoml
clc
arpl
pop
repz
xchg
or
aam
cmp
dec
sub
mov
adc
push
int
mov
mov
fldl
mov
gs
leave
xchg
add
out
test
ja
xchg
mov
hlt
insl
add
lret
lahf
push
fnstcw
mov
jecxz
jmp
nop
or
sbb
mov
push
sahf
pop
pop
jno
mov
cmp
out
pop
pushf
daa
rorb
xor
mov
push
mov
das
ret
push
stc
nop
xchg
test
fdivs
mov
pusha
pop
outsb
outsl
orb
pop
cmpsb
xor
push
into
in
in
ret
pop
divl
pop
imul
sbb
andl
jle
icebp
ljmp
push
sbbb
dec
push
je
mov
dec
outsb
dec
lea
mov
lods
adc
out
in
stos
rcr
mov
inc
ficoms
mov
xor
sub
ds
xchg
sarl
pop
pop
fimull
xor
sti
pop
daa
push
sbb
fiadds
das
movsl
repz
jne
sub
pop
xchg
movb
jp
mov
add
add
lds
mov
fcoms
nop
daa
inc
push
push
inc
or
mov
lds
add
fwait
adc
mulb
pop
jl
lret
cmp
and
or
jp
and
cmp
push
or
lock
call
cmp
cltd
stc
mov
and
cmp
jge
push
fidivrl
dec
adcb
fucom
add
mov
lret
sbb
or
mov
xchg
movsb
xor
xchg
adc
jo
les
and
xor
push
pop
mov
cwtl
jne
cld
xchg
push
pop
cmp
jecxz
test
mov
punpckhbw
pop
sub
jecxz
jnp
aam
pop
sub
mov
ret
xlat
repz
in
daa
pop
in
mov
and
sahf
mov
dec
jg
inc
es
cmp
lods
jl
mov
icebp
sbb
and
cmpsb
mov
cli
pop
mov
add
push
adc
icebp
adc
or
adc
movl
mov
mov
push
cs
call
add
popa
fwait
sub
inc
mov
test
jne
subl
push
sub
push
test
repz
ss
popa
loopne
icebp
imull
inc
fst
imul
out
inc
shll
icebp
jl
divb
ljmp
enter
pop
ljmp
clc
in
ljmp
outsl
xchg
push
rorb
and
or
dec
fsubrl
shll
fwait
push
push
xor
cmp
xor
test
push
cwtl
das
xchg
mov
add
es
mov
inc
inc
rcrl
inc
insb
jg
loopne
inc
mov
nop
jnp
js
loop
mov
mov
imul
inc
ja
cwtl
test
push
out
test
lret
repnz
adc
mov
jo
ja
pop
sub
test
jmp
iret
and
pop
mov
addr16
sub
mov
das
int
dec
and
mov
test
fwait
cmp
mov
loopne
mull
xor
and
ret
movsb
jmpw
xchg
xchg
cmc
js
push
adc
adc
pusha
mov
fs
cmp
adc
leave
jne
mov
mov
mov
int
or
stos
lods
movsb
pop
xor
mov
xchg
sbb
cmp
mov
cli
aad
cmpl
mov
jo
fmulp
insl
sbb
sti
sbb
sub
adc
push
mov
pop
xor
inc
lret
mov
cs
push
stos
imul
insb
adc
inc
dec
rcrb
stos
jo
sti
mov
xchg
ret
divb
push
pop
cmpsl
out
mov
pusha
mov
leave
cmpl
sub
cmpsl
add
loopne
out
xor
outsl
pop
leave
mov
fimull
mov
ss
or
aas
pop
push
lds
mov
fyl2xp1
rcrb
ja
test
ret
movsl
in
fistps
cmp
movsl
cld
add
fisubs
inc
fnsave
xchg
stos
lea
xchg
insb
xchg
dec
pop
dec
roll
jo
jb
stos
bound
and
aaa
push
xchg
adc
movsb
cmp
cmp
sub
ret
leave
inc
fsubr
pop
adc
pop
ret
lahf
push
adc
testl
xchg
mov
add
and
dec
xchg
inc
xlat
sbb
roll
push
pop
aas
inc
fisubrs
adc
ljmp
mov
je
sbb
xor
call
sbb
xchg
inc
dec
dec
jecxz
gs
addl
lahf
cld
nop
xor
jge
add
subb
inc
sti
test
fldenv
stos
xchg
sub
push
or
mov
inc
aaa
out
sub
push
push
daa
dec
mov
int
and
ficoml
mov
or
test
test
jmp
rcrl
sbb
jne
mov
xchg
enter
or
arpl
popa
arpl
aam
jo
ss
add
and
cli
mov
loope
pop
sub
lea
xchg
pop
jns
cmp
mov
cmpsb
enter
sub
popa
mov
popa
sub
inc
pop
lahf
cmpsl
pop
mov
fucomip
cmp
ljmp
push
test
xor
sti
mov
and
xchg
loope
fwait
inc
rorb
stc
idivb
fldenv
aad
add
repz
and
inc
mov
leave
popf
icebp
cli
xchg
cmp
idiv
cld
push
cmp
pop
in
shl
sbb
push
arpl
sbb
sbb
adc
mov
sub
jno
das
jecxz
jg
icebp
fwait
pop
pop
pop
jns
mov
jecxz
jo
push
lcall
push
cmpsb
jl
int
and
xchg
fsubrs
or
mov
push
adc
sarb
lret
xor
iret
and
dec
sbb
xchg
outsl
das
into
imul
push
mov
pop
fidivrs
repz
clc
sbb
loop
ljmp
push
sub
xor
mov
push
aas
dec
fistps
std
dec
into
mov
adc
cmc
test
xchg
imul
xchg
sub
lock
mov
xor
inc
lods
addr16
cld
mov
shl
mov
and
add
cmp
mov
dec
dec
inc
inc
mov
sbb
div
stos
fisubrs
sbb
or
mov
push
scas
lret
imul
dec
idivb
nop
pusha
inc
rep
out
test
arpl
stos
xchg
xchg
mov
jecxz
inc
testb
adc
loopne
or
mov
mov
sub
insl
test
data16
push
in
xchg
je
push
insb
insl
push
loope
cmpsl
cld
aas
pop
cs
lahf
add
std
push
mov
paddw
sahf
imul
dec
xorb
cs
mov
pop
add
pop
and
fwait
jmp
js
shlb
and
mov
or
in
jnp
jo
mov
mov
insl
sarb
jae
mov
xor
fidivs
aad
add
shrl
and
loope
inc
test
fwait
pop
pop
imul
sbb
js
out
fdivp
mov
xor
gs
and
mov
js
push
sub
out
or
sbb
cwtl
and
push
adc
xor
dec
jmp
ljmp
mov
sub
pop
and
in
shlb
sub
pop
lds
pusha
adc
loope
mov
jne
mov
jecxz
xchg
insl
adc
cmpsb
add
pop
imul
add
push
jne
jmp
xor
les
push
cmpsb
cmpsb
in
or
xchg
pop
lret
ja
scas
dec
stos
xlat
push
loop
rclb
push
add
inc
dec
outsb
movsb
lcall
jbe
jg
xor
jno
fistl
pop
xlat
idivb
mov
lea
xor
sub
jl
add
fnstsw
popf
inc
imul
js
dec
sbb
aaa
mov
shrl
pop
add
inc
cmpsl
aad
xlat
int3
sub
cmp
jecxz
cwtl
sbb
not
add
movsb
mov
push
inc
dec
xchg
pop
test
std
or
mov
jl
insb
xor
fsubr
sbb
hlt
sbb
sub
mov
repz
andl
sbb
xor
xchg
lahf
negl
jg
mov
es
mov
inc
cs
test
mov
inc
leave
pop
mov
repnz
leave
sbb
sbb
stc
stos
jo
adc
fstps
jp
mov
pop
mov
mov
mov
jmp
sti
pop
jne
pop
arpl
mov
and
cli
adcl
push
or
mov
and
xchg
push
pop
jno
push
dec
loope
mov
pop
dec
dec
or
mov
sub
dec
pusha
sub
xchg
pusha
fmul
xchg
pop
push
movsl
cmp
outsl
inc
stc
cwtl
test
cltd
std
xchg
lea
push
insb
inc
pop
sbb
jecxz
aam
dec
pop
je
js
imulb
xchg
cs
jmp
popa
inc
fcoms
fiadds
and
insb
xchg
ja
and
add
scas
xor
cmp
pusha
cmp
shr
push
jmp
or
clc
enter
sahf
addr16
sbb
push
adc
aaa
clc
iret
lahf
push
pop
scas
aaa
mov
lods
rorb
insb
adc
cltd
push
or
out
test
jo
cmp
fbstp
scas
sbb
sub
std
xchg
cmp
sbb
mov
rcrl
sbb
push
cmpsb
fbstp
jo
jo
call
clc
shll
cltd
mov
jmp
mov
iret
inc
cld
stc
nop
cs
jo
pushf
dec
mov
push
arpl
xchg
mov
out
cmp
dec
call
jnp
pushf
pop
sbb
push
popa
clc
cmp
pop
jg
scas
dec
ficoms
jne
sbb
in
xchg
lock
and
std
wrmsr
mov
jmp
andb
pop
mov
mov
out
test
rcrl
std
and
and
iret
push
inc
cmp
repnz
arpl
mov
in
sub
mov
pop
jbe
xor
cmp
mov
mov
jecxz
inc
inc
stos
mov
imul
subl
pushf
ds
sbb
pop
add
inc
sub
pop
lds
idivb
mov
test
ja
adc
push
cmp
cmpsl
ret
cmp
nop
repz
fidivl
sbb
push
fidivs
bound
mov
push
inc
add
add
movsl
icebp
mov
in
pop
and
imul
mov
sbb
inc
sbb
cmp
inc
ret
cmp
dec
fists
xlat
shr
int
cmp
inc
dec
fs
aaa
cmp
aad
mov
pushf
mov
andb
test
adc
sub
imul
out
xchg
cmc
or
fisubl
sbb
mov
test
addl
adc
cmp
and
rcrl
test
sbb
pop
outsb
pop
mov
mov
or
test
jp
jns
inc
outsl
xchg
add
scas
nop
xchg
push
adc
or
xchg
sbb
imul
pop
push
jb
enter
pop
das
cmpsb
xchg
pop
mov
divb
testb
or
mov
inc
out
stos
inc
lcall
iret
lcall
divps
pop
pop
adc
stos
fcomps
xor
es
or
movsb
pop
mov
push
mov
inc
lods
call
sbb
in
or
xor
pop
addl
adc
outsb
divb
neg
les
test
add
sar
sti
jge
cmpsb
scas
sbb
and
stos
imul
std
dec
xchg
setp
shll
movsl
mov
mov
stos
in
mov
out
hlt
push
in
sub
stc
push
jbe
jae
inc
adc
in
lret
or
js
mov
add
shlb
xchg
sub
hlt
push
cmp
mov
sub
daa
mov
sti
push
inc
cltd
out
xchg
call
or
and
push
sub
mov
std
aam
xchg
xchg
cmpsb
sub
or
dec
add
push
sub
add
out
xor
aam
xor
test
arpl
test
push
int
hlt
daa
in
pop
add
sahf
pop
daa
adc
add
add
jo
outsl
xor
pop
lret
insl
add
mov
mov
adc
nop
xchg
mov
arpl
xchg
xchg
mov
es
sbb
js
insl
loop
push
sbb
jnp
mov
add
scas
insb
lcall
cmp
decb
aas
inc
mov
lcall
mov
test
pop
jbe
or
sar
dec
fldt
insl
rorb
jbe
push
mov
push
es
push
sbb
and
mov
loope
negl
push
push
sbb
fistpll
mov
xchg
ljmp
lock
add
push
add
push
push
mov
adc
ret
xchg
test
mov
push
sbb
or
xlat
sub
xchg
dec
sti
test
notl
ljmp
xchg
fldt
xlat
in
mov
in
adc
ret
mov
dec
push
xchg
mov
push
adc
or
mov
mov
xchg
push
and
jecxz
push
add
loope
dec
pop
pusha
cs
jl
shlb
lea
stc
int3
xchg
xor
test
and
aas
xlat
inc
out
stos
jmp
out
in
cmp
shll
xor
clc
into
loop
pop
lcall
sub
mov
or
inc
jmp
pusha
shll
push
gs
mov
add
aas
dec
xchg
xor
xchg
xor
popa
stos
xchg
sbb
jmp
jae
divb
jp
adc
push
out
xchg
jl
movhlps
popf
pop
xor
mov
arpl
filds
dec
std
xchg
mov
sbb
inc
out
ficompl
add
add
jecxz
negl
aad
test
and
lea
jp
stos
pop
movsl
mov
jl
cs
or
jl
and
xchg
les
mov
mov
pusha
scas
inc
fstps
loopne
pushf
decb
mov
call
cmp
and
xor
lcall
gs
or
mov
pushl
sub
push
adc
aam
cld
xor
mov
push
xchg
dec
ja
cltd
sub
sbb
and
pop
scas
cmp
gs
and
aam
inc
jmp
in
pop
cmc
cs
or
jecxz
mov
ljmp
inc
jnp
mov
adc
fs
mov
dec
jle
jge
xchg
dec
cld
pop
popf
je
int3
hlt
push
gs
jecxz
dec
add
repz
inc
lods
or
jmp
xchg
out
imul
pop
mov
dec
shll
mov
mov
ret
adc
daa
mov
sbb
jg
aad
ret
jp
sub
sub
rcrl
adc
subl
rcrb
fidivs
outsb
sub
les
incb
sahf
cltd
or
nop
mov
ds
movsl
mov
mov
cld
lcall
push
mov
mulb
in
lahf
xchg
inc
enter
or
mov
nop
fidivs
rcl
add
lret
cmpsb
and
sbb
pop
cmp
inc
dec
sbb
push
data16
jg
add
lea
mov
push
push
inc
icebp
decl
repnz
mov
pop
dec
lock
fidivl
out
out
push
and
gs
xchg
mov
movsb
xchg
sub
gs
loopne
out
bound
mov
dec
jmp
repz
fcomps
xor
rcr
push
and
shlb
pop
fsubr
int3
outsl
cli
mov
int3
imul
pop
aad
cmp
adc
and
xchg
push
inc
lods
mov
push
jno
iret
push
jno
adc
sub
mov
enter
or
arpl
sub
addl
sahf
add
push
cs
sti
std
jno
daa
pop
insl
aad
in
adc
mov
or
orb
jae
sub
and
mov
mul
lods
imul
xchg
mov
shll
push
imul
es
iret
call
and
pop
add
ds
lods
jg
adc
je
jecxz
int
xor
imul
idivb
fisttps
mov
test
or
inc
dec
xchg
push
pushf
pop
add
test
sbb
dec
jno
xor
jle
push
fmul
pop
inc
in
mov
fsubr
sarl
xchg
push
xchg
xor
repnz
cmp
cld
adc
lret
arpl
push
jl
mov
subb
clc
ds
mov
mov
mov
xchg
inc
pop
mov
movsl
xchg
inc
xchg
lea
and
inc
andl
mov
dec
jmp
and
sub
and
daa
aam
lea
cmp
push
notb
xor
jp
jp
add
or
cs
jp
inc
enter
adc
push
mov
in
cld
and
push
stc
or
inc
sbb
xor
scas
sub
lret
push
loopne
sbb
jmp
inc
xchg
xchg
cmc
push
dec
lock
ljmp
mov
mov
mov
jns
daa
mov
rcrl
call
outsb
jne
out
or
cmp
mov
xchg
xchg
dec
adc
push
fimuls
and
dec
movsb
mull
out
sbb
cmc
into
test
jns
lcall
test
dec
cmp
rolb
cmp
lock
and
or
aam
jne
mov
add
and
inc
fiadds
sub
cs
leave
pusha
sbb
pop
cltd
xchg
call
inc
sbb
mov
out
aas
inc
cwtl
lods
xor
in
xchg
js
in
movsl
aas
call
push
adc
fsubs
out
mov
sub
push
aam
lea
loop
sbb
lods
pop
cmpb
dec
cltd
insb
repz
mov
cwtl
add
shl
or
sahf
jge
int3
sti
fnstenv
push
ljmp
std
jno
jnp
pop
scas
out
imul
lock
cmp
sahf
js
adc
in
outsl
xlat
lods
addr16
lods
fdivr
mov
adc
rorb
push
movsl
into
jmp
inc
andb
add
push
xor
push
jbe
xchg
int
sub
sbb
loopne
adc
lea
aam
mov
in
adc
clc
xchg
dec
ficoms
fmull
xchg
pop
inc
mov
sbb
jg
mov
and
aaa
fimull
outsb
aaa
xchg
lods
mov
mov
test
and
das
lds
sbbl
add
xor
fnstsw
pop
icebp
nop
cmpsl
imul
xchg
jmp
mov
cmc
or
push
push
mov
cmp
sub
pop
and
ror
lock
sbb
fildll
es
call
inc
out
or
cmp
and
mov
dec
les
and
aam
jnp
mov
jg
jno
pop
test
test
cmp
xor
inc
pop
incl
push
loope
adcl
pop
outsl
mov
les
mov
fstpt
adc
add
frstor
inc
pop
out
das
inc
and
jb
je
lea
mov
xor
add
adc
add
loop
fstpt
pop
repz
mov
cmp
xor
add
dec
xor
mov
dec
shrb
insl
xor
inc
jnp
mov
jp
scas
fdivrs
fmulp
leave
loopne
incl
add
loopne
mov
lock
and
ja
inc
xor
test
std
cltd
lock
sub
cltd
std
push
pop
mov
jbe
bnd
cmp
pop
pop
scas
jns
cmpb
test
dec
ljmp
adc
xlat
icebp
sbb
ficompl
pop
repnz
adc
jmp
mov
fs
sbb
ret
je
daa
mov
ss
dec
xchg
pop
ljmp
lock
xor
jecxz
xchg
in
popf
divl
cs
fucomi
jb
fcoms
xchg
ficoms
sub
sbb
or
push
mov
push
in
or
xchg
les
setbe
lret
mov
pop
rorl
cmpsb
ret
cmp
adc
lods
inc
push
pop
add
mov
pop
jp
sti
pop
mov
bound
aad
xchg
mov
in
mov
fnsave
fs
call
test
cli
fsubs
fdivr
cmpl
xchg
jg
adc
sub
mov
fistpll
pop
xor
push
call
lds
pushf
pop
mov
and
and
or
xchg
pop
pop
inc
fnstsw
push
xlat
add
adc
cmpsb
lea
push
and
sti
add
inc
rorb
push
mov
test
sbb
es
xor
and
int
arpl
cmpsl
xor
lock
add
les
push
jno
inc
mov
jmp
aaa
into
xchg
and
fbstp
imul
stc
push
mov
cmp
daa
cli
and
in
bound
cli
daa
rcrl
lcall
and
out
mov
jno
push
or
cs
mov
sbb
cs
jecxz
call
cmc
mov
xchg
or
testl
cmp
mov
rorb
mov
es
jnp
jl
mov
jecxz
cmp
pop
outsb
dec
dec
add
loop
jg
pushf
xor
lock
and
xlat
dec
mov
dec
jns
pop
stos
jo
scas
test
and
inc
sbb
decb
into
adc
insl
add
jnp
shll
mov
hlt
pop
dec
inc
stos
mov
pusha
dec
pop
scas
rcpps
stos
scas
ficoms
jmp
adcb
dec
xchg
jbe
push
test
inc
push
aad
inc
clc
leave
pop
aaa
push
push
les
lahf
xchg
pop
outsb
test
inc
xlat
into
addr16
cmp
jecxz
add
adc
mov
sbb
mov
jle
inc
fcoml
xchg
sbb
xor
push
pushf
pop
cmpsb
cli
in
ljmp
enter
add
mov
into
mov
outsb
pop
imul
sbb
xor
push
mov
repnz
sub
dec
sub
xor
popf
loope
cmpsb
dec
inc
fs
fildl
xchg
mov
mov
xor
fildll
out
mov
repz
bound
mov
or
push
pop
push
cmpsb
xchg
outsl
add
xchg
fs
int3
outsb
push
mov
rcrl
mov
imul
xchg
mov
movsb
mov
or
dec
mov
mov
mulb
outsb
push
mov
xchg
xchg
jp
or
out
stos
and
push
hlt
lret
cmpsb
push
mov
shl
mul
mov
push
sarb
dec
std
inc
pop
repz
sbb
int
nop
sti
cmpps
and
jnp
loope
aad
jmp
test
mov
push
mov
aad
ja
sub
xor
and
cmc
lret
push
daa
dec
stos
fnstcw
lcall
cmp
xor
mov
cmp
cmpb
adc
sub
cltd
sub
xchg
or
outsb
lds
pop
ljmp
notl
outsl
jmp
jge
repz
fstl
aas
int
inc
inc
xchg
sarb
pop
sbb
cmp
icebp
mov
sub
movzbl
insb
decb
lahf
inc
fsubrs
sti
mov
mov
fsubs
fsubl
cmc
das
dec
dec
fcoml
inc
fiadds
jbe
int3
lret
mov
jae
push
push
mov
fcoms
mov
inc
cs
in
sub
pop
mov
arpl
pushf
fidivrs
pop
mov
orb
or
jecxz
pop
xchg
roll
mov
lahf
insb
sbb
jle
aam
imul
push
nop
xlat
and
in
out
mov
shll
lods
pop
orl
ljmp
or
cmp
adc
push
sub
movsb
push
roll
cld
nop
daa
jnp
lret
imul
cltd
hlt
inc
loope
jmp
adc
loop
xor
sbb
mov
call
mov
push
pop
fistps
mov
and
out
jbe
test
test
daa
xorb
mov
dec
dec
aad
xchg
push
add
sub
fwait
imul
mov
or
out
jns
mov
dec
dec
pop
push
lods
jo
daa
ljmp
test
scas
insl
cli
es
rclb
add
mov
push
lods
push
push
jno
lds
and
test
push
push
das
out
mov
pop
cmpb
xlat
in
sbb
inc
jecxz
mov
int
fsub
add
adcb
mov
fs
pop
mov
lds
mov
push
adc
and
addl
incl
fdivrl
push
movsl
sar
pop
sbb
rcrl
ss
push
cmp
pop
jg
jecxz
jnp
xchg
lcall
cmpsb
mov
rclb
xlat
decb
fucomip
adc
cwtl
stos
call
pop
add
xchg
insb
pop
sbb
lcall
adc
mov
mov
outsl
divb
dec
pusha
add
pop
xor
test
xchg
add
sbb
gs
testl
ds
mov
mov
test
or
mov
or
in
outsl
cmpsb
dec
jge
lea
lret
mov
mov
ret
mov
pop
fimuls
scas
cmpsl
ja
movsb
ja
adc
sub
test
lods
adc
popf
pop
or
out
fistl
xor
inc
mov
out
inc
mov
sbb
popf
popf
jo
adc
add
cmpsl
leave
dec
shlb
sahf
fmulp
xchg
jnp
loop
test
cmp
scas
jno
lahf
mov
movsl
bnd
cmpb
std
paddusw
cmp
add
rol
loope
add
subl
les
test
aaa
aaa
jecxz
jne
movsl
xor
movsl
stc
es
jge
inc
cmp
and
mov
iret
or
popf
mov
jae
fs
mull
sub
mov
jbe
aad
or
test
push
mov
xor
adc
sbb
lret
cli
xchg
xchg
mov
sub
pop
mov
fmuls
lcall
dec
or
cmp
or
lahf
ss
cmp
pop
mov
fs
shl
adc
test
repz
jae
ret
in
mov
divl
insl
mov
adc
push
addr16
data16
cld
mov
sbb
jle
sub
inc
push
xor
mov
dec
imul
pop
addps
stos
pop
repz
test
mov
mov
inc
pop
fisubrs
js
pop
jno
pop
in
sbb
cmp
fwait
mov
fcoml
jl
in
mov
xchg
or
es
mov
mov
pop
mov
mov
jle
popf
outsl
mov
out
push
in
pop
sub
mov
add
bound
push
or
popa
mov
fsubrp
push
mov
sbb
in
test
popa
xor
call
dec
in
xchg
mov
sbb
adc
sub
cld
in
das
repz
push
hlt
push
imul
test
xor
mov
lds
cmpsb
in
mov
int3
dec
pop
cli
sahf
arpl
les
inc
test
aad
xchg
cmp
jecxz
pop
inc
pop
add
test
mov
adc
push
or
cli
jmp
rcrl
mov
dec
jmp
mov
mov
in
rorl
push
add
xchg
adc
jbe
hlt
fwait
push
sbb
xor
out
xchg
inc
mov
pushf
jecxz
mov
push
test
gs
enter
mov
scas
pushw
inc
inc
dec
xor
int3
gs
cmpsb
iret
mov
gs
insb
xor
and
inc
push
inc
jae
jnp
inc
push
in
mov
mov
and
adc
cmp
lret
fucomp
ja
mov
insb
addr16
dec
jl
out
sbb
movsl
stos
mov
push
adc
stc
sbb
ret
fwait
cwtl
and
xor
xchg
jae
lahf
imul
pop
push
dec
jb
lock
ljmp
jno
jno
and
adc
inc
mov
out
inc
push
sahf
mov
cltd
push
push
inc
fnstcw
inc
leave
imul
push
sub
lcall
cmp
shll
jle
xlat
jnp
mov
inc
fnstenv
pop
push
lcall
cmc
jle
pop
rcrl
lret
sbb
mov
mov
push
sub
rcrb
inc
inc
mov
dec
out
pop
mov
shrl
add
lods
andl
or
fwait
xor
cmp
cmp
insb
dec
test
lea
outsl
push
test
mov
cmp
sub
daa
lcall
push
mov
dec
mov
dec
test
fstps
outsb
dec
jecxz
jge
ss
in
std
mov
or
mov
jbe
cld
add
sub
sahf
mov
je
push
int3
loopne
dec
in
push
jne
test
sub
cwtl
repnz
loope
xchg
adc
xchg
add
sub
xchg
cmpsl
mov
fldenv
add
xchg
in
mov
rcrl
lods
stos
sbb
mov
daa
lods
mov
add
rol
jle
or
shlb
shlb
push
or
jns
nop
sub
mov
insl
mov
movsb
jb
in
sub
push
sbb
xchg
ret
pop
add
inc
pop
inc
push
and
scas
inc
mov
out
rorb
mov
mov
add
pop
fs
popf
bound
scas
and
push
cs
popf
mov
lock
ds
and
lea
mov
lock
jnp
stos
ret
adc
add
sbb
iret
test
fsub
jmp
and
fsubrp
incl
push
push
mov
and
adc
push
fs
xchg
xchg
fwait
sti
notl
mov
arpl
pop
push
sarl
inc
lahf
ss
and
push
out
jne
jbe
outsl
outsb
sub
loop
mov
je
ljmp
mov
jecxz
int
push
xlat
cwtl
adc
movsb
cmp
pusha
mov
aad
push
adc
int
jmp
sub
das
lock
inc
js
fldt
mov
or
int3
nop
push
mov
xchg
sarb
sbb
popf
mov
push
int3
arpl
and
lret
nop
daa
std
jp
mov
jno
inc
push
sbb
xchg
rolb
icebp
data16
jbe
push
in
sbb
lcall
sbb
repnz
add
sbb
inc
loopne
shrl
inc
dec
movsb
insl
and
sub
daa
flds
addb
xchg
ds
je
scas
popa
test
fadds
loop
push
inc
mov
cli
push
pop
sbb
outsb
dec
pop
hlt
inc
xor
xchg
cmpsl
dec
add
in
xor
ret
rcrl
push
and
mov
scas
xchg
xor
lret
fldl
jle
test
bound
sbb
iret
ds
and
fists
inc
stos
fmul
subl
lods
inc
push
xchg
xchg
out
mov
mov
arpl
jo
push
enter
test
inc
aad
aad
jle
stos
out
sub
ss
outsb
cmp
mov
pop
xor
dec
ljmp
push
inc
jg
stos
pop
sub
push
xor
int
or
aad
sub
sti
fnstsw
bound
add
cmp
adc
stos
scas
push
xor
inc
cmovo
add
fcmove
pop
push
dec
cmpsl
orl
sub
clc
add
out
hlt
pop
xchg
out
sbb
das
aam
cs
les
xchg
cmc
sub
ret
out
xchg
add
nop
push
cwtl
mov
lcall
lods
lods
inc
mov
lret
cmp
jo
int3
pop
pop
jne
mov
test
sti
das
pop
outsb
push
aaa
jl
imul
psubsw
adc
sub
or
add
adc
xor
lea
xchg
lds
pusha
sbb
movsb
ss
loopne
les
mov
dec
mov
loopne
mov
std
js
or
mov
orb
out
sub
ja
cwtl
shrb
in
test
mov
test
addr16
adcb
xchg
mov
sub
clc
dec
ficoml
jmp
cmpsl
test
call
or
icebp
xchg
push
fs
data16
lock
ret
pop
jp
push
xchg
sub
aad
aad
xchg
popf
testb
jno
in
cmpsb
addr16
frstor
add
testb
into
push
and
mov
das
or
pop
stos
mov
or
push
jmp
xchg
add
xor
outsb
xor
fisttpll
mov
push
outsl
adc
pop
cs
test
rcrb
loop
hlt
push
outsb
cmpb
loopne
sbb
cltd
xchg
cld
jge
je
sbb
xor
cld
xor
lret
jne
sbb
pop
rorb
jbe
adc
loop
jmp
jle
add
shll
pushl
dec
cmp
fnstenv
outsl
sub
notl
bound
pop
in
or
cmp
and
or
test
popa
mov
sbb
aas
xchg
jns
push
jmp
movsl
mov
or
dec
pop
jae
xchg
int3
popa
jne
in
fisttpl
sarl
jmp
mov
sti
cmp
imul
jno
push
shll
xchg
dec
mov
xchg
pop
xor
cld
cmp
or
dec
pusha
mov
mov
push
cmp
cmp
fimuls
repnz
test
test
lds
cli
in
jnp
dec
pop
cli
movsl
test
lods
ret
loopne
mov
or
adc
and
js
dec
orb
mov
push
outsl
inc
les
push
mov
xor
mov
push
or
cmp
jo
fwait
cmp
int
aaa
subl
mov
dec
mov
insb
fsubrs
shlb
es
insb
fisttps
pop
insb
loop
or
xchg
jl
jle
call
xor
sbbb
and
xchg
stc
cwtl
imul
cmpsl
dec
insb
mov
movntps
ss
sub
stc
or
pop
stc
aad
dec
mov
shll
out
ficoms
test
js
inc
mov
pop
jbe
fiadds
adc
cmp
sub
jo
xchg
sub
jnp
js
out
push
pop
mov
daa
push
int
movswl
inc
adc
fwait
xchg
les
cltd
lahf
or
cwtl
inc
pop
mov
adc
pop
dec
loope
fisubs
aam
xor
mov
stos
xchg
dec
mov
jb
pop
push
inc
adc
or
sub
jnp
loope
pushf
dec
add
lcall
push
cmpsb
fdivrp
mov
cmp
notb
movsl
dec
inc
add
es
ficoml
popa
mov
pusha
push
call
inc
adc
shlb
xor
cmp
mov
mov
push
aam
jnp
incb
mov
bextr
push
flds
pop
fstpl
inc
adc
test
jp
imul
adc
aad
mov
xor
sub
aad
rcll
shlb
pop
loopne
mov
xchg
in
push
inc
cs
jbe
fimull
cmpsb
fwait
scas
scas
lock
in
mov
lahf
sub
cltd
stos
mov
xor
cmp
pop
pushf
pop
push
push
ret
mov
cmp
dec
sarl
dec
sbb
mov
and
adc
sarb
jne
inc
adc
icebp
movsb
pop
dec
enter
push
pushf
push
push
jecxz
mov
add
outsb
in
sub
cmpsl
push
sub
mov
lret
pop
xchg
cs
inc
pusha
icebp
stc
or
inc
sbb
lahf
and
and
aas
stos
das
cs
out
shll
add
lods
mov
scas
pop
faddp
scas
dec
xor
dec
mov
push
insl
nop
jmp
dec
jl
inc
xor
pop
nop
orb
mov
frstor
ret
cmp
push
ljmp
or
cmp
mov
data16
mov
mov
loope
jno
inc
out
hlt
mov
or
jnp
test
test
into
in
lods
sub
mov
cwtl
icebp
jge
mov
cmp
mov
loope
push
pop
mov
sbb
push
dec
dec
mov
jle
into
and
pop
xchg
jae
ret
mov
and
sub
cwtl
dec
pop
mov
mov
inc
aaa
pop
repnz
xchg
pop
sarb
aad
mov
das
adc
dec
scas
or
sahf
cmp
dec
pushf
jle
filds
outsl
sbb
mov
adc
popf
xor
dec
add
xchg
dec
aas
into
dec
pusha
cmp
and
xor
mov
pop
movsb
stc
xor
jp
push
mov
cwtl
pop
in
aaa
pop
inc
ret
xor
daa
pop
mov
jae
loope
out
ljmp
mull
ret
pop
xor
jp
dec
or
add
iret
movl
jge
scas
imul
gs
and
test
repnz
loope
or
leave
ror
and
sahf
scas
fcmovnbe
cmc
outsb
sbb
fsubrl
lcall
and
mov
outsl
adc
mov
mov
out
and
jb
pop
xor
js
dec
sub
stc
adc
rcrb
sbb
lret
cmp
rcl
cmp
test
std
dec
sub
pop
sub
pop
cmpsb
cld
xor
sbb
stc
ja
push
and
and
mov
insl
pop
int
xor
xchg
mov
mov
jbe
icebp
stos
fisubrl
add
das
rcrl
or
into
movsl
sbb
and
cmp
adc
xchg
mov
jb
sub
sub
lds
mov
mov
pop
mov
test
popa
leave
fildl
xchg
pop
scas
and
addb
lods
addr16
in
push
mov
lcall
jmp
std
xchg
mov
nop
xchg
xchg
sub
push
xor
cs
or
xchg
push
fwait
cmp
adc
add
pop
dec
sbb
mov
xor
test
std
cmp
mov
out
cld
aad
out
pop
adc
inc
dec
rol
ljmp
xor
std
movq
call
icebp
mov
mov
in
shl
lock
in
fwait
inc
loope
movsl
sub
jl
xchg
xlat
cmpsb
cmp
or
aas
mov
inc
js
lret
xor
ficoml
cmp
push
or
jae
popa
movsl
jge
test
mov
push
jbe
das
cmp
cmp
add
lahf
movsb
sti
es
xchg
test
cltd
out
xchg
pop
cmc
mov
xor
inc
push
xchg
or
icebp
movsl
push
xor
jb
loope
outsb
test
sub
lahf
pop
or
arpl
and
ret
inc
addl
ret
fnsave
lret
jg
and
sbb
data16
xchg
imul
and
repz
addr16
movsb
repnz
fiadds
test
ss
xchg
popa
pop
mov
xor
std
cli
pop
pushf
mov
xchg
lds
iret
jmp
adc
in
pop
rcrl
lds
adc
popf
jbe
adc
insl
mov
lds
dec
dec
cli
mov
push
icebp
pop
and
cmp
push
dec
mov
sub
out
inc
sub
mov
adc
ljmp
pushl
call
sti
imul
jns
xchg
xchg
add
loope
scas
mov
sbb
jne
xchg
and
clc
push
in
insl
js
fs
shl
aas
stos
jp
push
mov
test
int
cmp
xchg
enter
ret
jb
pushf
adc
xchg
inc
lods
popf
rcrl
pop
stc
test
aaa
ds
lcall
add
xchg
push
sbb
jnp
fucom
jg
xchg
cmp
add
or
inc
stos
push
cmp
ret
dec
lahf
jo
sub
add
out
test
popa
or
push
push
ds
imul
cmpl
pop
pop
fcmovb
jecxz
adc
mov
call
or
outsb
inc
leave
jmp
je
cmc
mov
hlt
sbb
inc
mov
imul
lret
adcb
fsubs
cmpsl
shlb
stos
hlt
aaa
lret
out
je
cmpsb
push
dec
and
xchg
adc
jo
or
mov
dec
xchg
xor
xchg
lahf
push
inc
mov
loope
in
pop
ficoml
ret
sbb
xchg
outsb
mov
cmp
or
addr16
cltd
xor
sbb
roll
jb
mov
shll
mov
shll
je
notb
hlt
imul
jmp
js
es
aam
adc
rclb
pop
xchg
lret
push
ret
jge
xor
pop
shll
out
cwtl
pop
push
es
arpl
int
mov
fcmovbe
addl
sbb
paddsw
add
fisttpl
pop
cmc
clc
scas
mov
cli
add
inc
js
stos
das
inc
cmpsl
mov
dec
dec
out
mov
mov
xlat
jno
out
mov
out
test
adc
dec
xchg
scas
jg
xlat
movsb
mov
cli
int3
rcll
leave
push
scas
inc
icebp
mov
and
hlt
sub
repz
push
or
mov
fs
add
xchg
xor
or
and
push
push
adc
xchg
rcrl
fwait
xor
fidivs
je
mov
xor
loop
dec
sbb
mov
gs
lods
outsl
or
imul
dec
lock
hlt
scas
cmpps
testb
xchg
dec
nop
or
xchg
icebp
push
inc
cld
xor
addr16
cli
lods
inc
sub
int3
fiadds
les
xchg
push
mov
cmp
ret
mov
in
push
in
push
lret
popl
cltd
shl
pop
lcall
push
cli
jmp
scas
add
pop
adc
scas
xchg
stc
repnz
and
inc
cmp
in
std
sbb
sub
adc
inc
mov
adc
push
cmp
add
adc
mov
jmp
rcrb
fnstenv
inc
mov
xchg
clc
xor
xchg
push
inc
pop
aam
mov
and
out
lock
cmp
lock
lcall
xor
mov
mov
pop
sbb
test
rolb
jns
push
shlb
rcll
jbe
xor
stos
xchg
and
movsb
inc
loope
jae
pop
jmp
push
dec
int
outsl
inc
xor
push
jnp
inc
dec
bound
mov
pusha
or
loop
mov
inc
sbb
rcrl
mov
add
xor
push
mov
enter
les
lcall
jge
icebp
inc
xor
mov
pop
lret
sarb
fs
dec
fwait
xor
xor
sbb
push
insb
inc
adc
and
shrl
mov
insb
stos
test
push
xchg
xor
subb
lahf
shl
inc
rolb
neg
push
cmpsb
daa
sbb
fildll
jns
mov
nop
nop
sbb
sbb
inc
sahf
shr
iret
and
dec
push
add
push
sub
cmp
lea
jb
xor
andb
sahf
push
in
or
jmp
mov
cmc
sbb
adc
leave
dec
mov
xor
adc
xor
cmp
imul
out
repz
mov
ss
inc
push
push
or
sbb
roll
mov
fnsave
sub
inc
cmp
jb
jnp
imul
out
sub
pcmpeqb
or
push
cmpsl
dec
xor
loope
and
push
and
cmp
call
icebp
cmp
jns
mov
shlb
fs
call
jbe
jne
js
jp
pop
repnz
lcall
mov
arpl
cmp
xlat
mov
and
mov
xchg
pop
xor
cmc
pop
lods
inc
inc
bnd
cmp
lcall
pop
int3
cmp
mov
dec
mov
mov
mov
cmp
roll
mov
mov
mov
insl
mov
and
xor
out
stc
jl
aaa
or
xchg
mov
inc
fnstsw
pop
stos
cmpb
repnz
shlb
or
push
sub
mov
faddl
mov
and
fisttpl
xor
inc
add
mov
addb
mov
push
sbb
jno
pop
pop
jae
mov
xor
ljmp
hlt
addr16
mov
push
ljmp
push
dec
imul
pushf
cmp
dec
fists
in
pop
repz
jno
pusha
fistl
jle
sub
xchg
xchg
mulb
mov
add
clc
and
xlat
fdivs
fbstp
fnstcw
pop
pop
cwtl
xchg
dec
imul
cwtl
cmpsl
es
jne
add
mov
aas
dec
xchg
add
repz
sbb
mov
sub
test
xchg
push
test
hlt
sub
orb
adc
mov
add
and
mov
push
mov
push
mov
lahf
and
lea
lods
pop
scas
loopne
push
in
enter
and
je
cli
jmp
pop
sbb
aad
enter
aad
and
test
xchg
sub
iret
sbb
movsb
pop
xchg
pop
pusha
ss
ret
fs
dec
hlt
fsts
cmp
addb
mov
ja
add
inc
shlb
jl
inc
push
inc
enter
ljmp
adc
fidivl
icebp
mov
xchg
jbe
inc
notb
int
lahf
inc
inc
roll
mov
xlat
scas
xor
mov
jae
mov
jge
stc
jge
inc
pop
jge
aad
xchg
mov
loope
in
adc
pop
addl
in
xchg
and
adc
addr16
lock
out
mov
fnstcw
push
pusha
ss
pusha
or
pop
inc
int3
cmp
adc
push
outsl
xchg
xor
int
in
popa
xchg
negb
cwtl
adc
pop
and
push
mov
sbb
mov
or
orl
out
or
sbb
push
jno
xchg
xchg
scas
mov
or
or
adc
insl
inc
pop
insb
popf
xorl
xor
orb
mov
xchg
sub
sbb
cld
loope
mov
dec
cmp
sbb
lds
negl
xor
icebp
mov
lcall
sub
add
loopne
stos
imul
xchg
inc
mov
fyl2x
xor
jae
jae
mov
les
test
push
mov
mov
je
inc
xor
std
jle
iret
mov
nop
hlt
xor
dec
jg
lds
mov
mov
mov
xorb
sbb
xchg
push
movsl
cmpsl
sub
sub
sbb
jl
loopne
test
or
or
loop
inc
aad
xchg
scas
sti
mov
test
mov
testl
aas
cld
or
inc
sbb
incl
pop
outsb
aad
jns
orl
and
sbb
mov
mov
mov
push
notb
inc
lret
loop
add
inc
hlt
add
push
or
mov
mov
push
jns
ficomps
sbb
xchg
and
mov
fidivl
aam
push
pop
psubsw
int
xlat
jnp
addr16
dec
mov
testl
mov
pusha
lret
sbbb
or
mov
pusha
jae
pop
fcmovnb
sub
dec
sub
add
mov
fldenv
xchg
mov
mov
bound
jg
addr16
push
sub
dec
mov
loop
mov
ret
inc
adc
in
andb
ret
inc
imul
fwait
pop
outsb
shl
mov
pop
push
ja
pop
cmc
fidivrl
xchg
sub
or
lcall
lds
int3
les
mov
pop
mov
mov
in
fsts
push
lods
ret
or
and
add
std
xchg
jne
mov
lock
sbb
stos
cli
push
xchg
and
mov
insb
xorl
adc
mov
dec
sar
mov
fisubs
jne
add
add
pusha
mov
test
in
pop
jno
fisttpl
pop
fisttps
or
enter
xchg
call
mov
rep
rolb
sbb
or
mov
lea
xchg
or
pop
fiadds
mov
mov
adc
mov
inc
push
sub
iret
sahf
pusha
lret
cmp
iret
inc
push
jb
dec
pop
jge
add
imul
fcos
repz
jmp
sub
lods
adc
scas
sub
inc
mov
xchg
pop
stos
test
jecxz
cli
and
movsb
sbb
flds
fcoms
mov
add
pop
arpl
mov
or
ret
int
jecxz
mov
movsl
stos
mov
inc
xchg
hlt
sti
mov
in
dec
mov
jge
and
pop
fstpt
pusha
nop
jp
repz
notb
in
aad
adc
icebp
mov
add
mov
pushf
out
clc
xchg
jo
es
mov
imul
outsl
sub
pop
mov
dec
fimuls
sub
push
xchg
es
aam
fnstenv
aad
lret
cld
arpl
push
lds
ds
push
mov
push
push
gs
imul
imul
lcall
outsl
popa
imul
inc
insb
push
jne
nop
cmpsl
ror
cmc
insl
pop
xor
movsl
cld
ja
mov
loope
std
xchg
push
mov
cwtl
test
fstl
mov
jno
add
fwait
jge
shr
or
jle
pop
cmpsb
sbbb
xor
and
cmpb
mov
cwtl
jge
aas
push
enter
or
das
mov
add
cmpsl
decb
xor
pusha
fldt
mov
push
rcr
xchg
stos
dec
and
jns
leave
outsl
loop
lcall
inc
out
mov
xor
sbb
adc
ret
test
push
sub
sbb
es
lret
jnp
cmc
and
sub
daa
pop
inc
xor
sbbl
out
mov
push
pop
jmp
xorb
subb
and
cmp
dec
push
xchg
das
jecxz
push
aaa
cmp
and
xchg
and
out
dec
addb
dec
fs
loope
insb
mov
lcall
push
neg
mov
ret
repz
call
push
nop
shr
sti
add
mov
gs
add
sub
insb
loope
sahf
pop
enter
enter
or
nop
or
out
stos
mov
out
mov
or
hlt
xchg
dec
es
jnp
push
inc
iret
xor
hlt
out
in
mov
icebp
pop
sbb
push
cwtl
sub
xor
jmp
push
mov
out
mov
je
cmp
jecxz
out
xchg
push
push
add
pop
outsb
pop
and
jle
mov
mov
jo
sbb
mov
popa
cmp
out
mov
jnp
push
lea
and
popf
mov
cld
cmpsb
into
cmp
xor
xchg
xchg
loope
adc
sbb
mov
sahf
icebp
add
es
mov
pop
xchg
sub
mov
andl
dec
sub
das
xchg
adc
pop
js
lret
cltd
pushf
lcall
js
sub
mov
icebp
cld
aas
outsb
mov
repnz
int3
add
push
sarl
adc
adc
mov
addr16
imul
xchg
movsb
cmpsl
lds
mov
ret
cwtl
imul
test
rcrb
shlb
jb
jecxz
dec
dec
fcmovnu
pop
outsb
repz
das
loopne
pop
scas
test
dec
push
insl
push
ss
add
inc
add
xor
ret
insl
push
call
arpl
sarl
inc
push
ljmp
dec
in
sahf
clc
es
fcompl
pop
lret
and
cwtl
pop
xor
dec
idiv
and
mov
incl
dec
mov
insl
cmpsb
sbb
cmpsb
std
lock
hlt
icebp
loope,pt
adc
cmp
pusha
test
popf
pop
cld
push
or
arpl
arpl
sbb
jmp
add
add
iret
xchg
jae
mov
stos
pop
out
fnstsw
jb
clc
in
popf
xor
cmp
mov
mov
call
int
inc
popf
add
sbb
cli
shll
divb
jns
jo
jle
lret
stos
add
shrb
mov
icebp
lcall
and
out
pop
cli
sub
jg
shll
jge
sbb
cs
xor
lods
fldl
mov
data16
cmc
fstpt
dec
test
lods
shll
fnstsw
jbe
xchg
ja
mov
xlat
cmpsb
adc
enter
daa
cmp
push
popf
insb
dec
test
lock
ss
test
cld
dec
mov
pushf
out
sbb
popl
insb
sbb
add
jnp
fs
pop
or
rcll
addb
xchg
push
in
mov
mov
fnstcw
mov
or
mov
cld
in
into
push
aaa
xlat
cmpsl
ret
pop
jmp
jge
shll
mov
mov
mov
jl
iret
shl
inc
add
scas
data16
xchg
adc
jo
clc
shr
or
hlt
sbbl
outsl
add
mov
xchg
jbe
aad
lea
out
jnp
push
sub
pop
filds
cs
dec
or
or
imul
ja
test
insb
xor
test
mov
xor
sbb
and
sahf
mov
inc
shlb
bound
inc
in
mov
in
jns
in
or
dec
mov
and
into
fdivr
outsl
sbb
das
cltd
lods
sbb
mov
pop
test
test
cmpsl
out
inc
fidivs
mov
fucomi
xlat
js
or
adc
fadds
xchg
pop
push
movsl
cmp
xchg
jbe
aam
sub
lds
sub
sahf
sub
inc
fdivrs
ljmp
jge
scas
out
add
xor
mov
ja
insl
jno
dec
mov
test
hlt
xchg
adc
inc
sbb
jp
pop
int3
jae
incb
or
inc
xor
mov
mov
jnp
jge
xor
out
addr16
inc
pop
imul
lret
xor
xchg
int
mov
ficoml
cmpb
pusha
aas
push
pop
sub
scas
arpl
stos
js
lret
fnstenv
mov
inc
popa
arpl
pushf
ret
inc
sub
lcall
out
cmp
jle
add
pop
jno
jne
popf
sbb
mov
sbb
pop
adc
mov
dec
sbbl
int
icebp
sub
mov
adc
inc
mov
jmp
or
mov
cmc
ret
out
out
gs
xchg
sbb
dec
rclb
scas
movb
cmp
xor
sarb
lea
add
sbb
das
loopne
push
mov
aam
scas
out
xchg
dec
jno
push
cs
enter
rorl
adc
sbbb
subl
fldl
out
xlat
sub
fst
outsb
or
dec
in
mov
cmc
mov
shlb
nop
and
nop
pop
and
gs
or
mov
imul
push
xor
cmp
inc
xchg
pop
sub
mov
push
in
xor
dec
fcompl
ret
loop
and
push
loop
push
mov
dec
or
shl
lret
fisubrl
pop
int3
out
sub
cmpsb
cmp
daa
les
aas
jnp
push
jmp
xchg
pop
insl
jno
inc
sub
stos
dec
repz
mov
fdivr
xchg
cmp
pusha
mov
jle
xor
leave
or
jns
movb
into
popa
daa
dec
push
mov
roll
mov
mov
pop
out
mov
scas
and
and
lahf
dec
leave
dec
pop
out
mov
ljmp
jno
stc
movsb
mov
push
pop
dec
bound
push
nop
sub
sbb
dec
pop
lret
movsb
ja
pusha
inc
jb
adc
xchg
mov
cmpsl
mov
js
cld
and
add
movsl
lock
scas
lods
adc
imul
mov
dec
iret
rcl
mov
iret
aas
and
pop
test
push
int
push
adcl
fstps
mov
mov
push
je
add
fcmovne
add
mov
xchg
loop
shrb
cmpsb
sbb
dec
mov
mov
lods
cmp
mov
ja
cmp
or
in
cmp
push
repz
cmp
js
jp
fisttps
jb
insb
sarb
dec
or
loope
js
popf
add
pushf
call
imul
loopne
dec
and
je
inc
pop
lock
pusha
xchg
pop
xor
pop
in
xor
push
in
cmp
mov
add
sbbl
pop
das
shrb
daa
ret
arpl
bound
mov
les
mov
and
cmp
jns
les
cmpsl
lret
push
mov
inc
dec
and
cmp
inc
sti
jo
lret
xchg
jae
pop
lods
jo
sarl
hlt
sbb
jae
inc
fdivrl
mov
cli
or
test
dec
adc
cwtl
stos
jnp
ffreep
enter
and
adc
jae
push
mov
div
enter
push
movsb
lds
es
roll
mov
mov
scas
fs
sbb
pop
testb
dec
mov
mov
and
push
adc
fnstcw
ret
mov
sbbb
mull
mov
dec
pop
pop
stos
inc
dec
in
mov
pop
aas
pop
lock
inc
daa
popf
ja
xchg
in
mov
shr
into
imul
bound
mov
push
adc
test
shl
hlt
fcompl
dec
lds
dec
imull
pushf
sbb
adc
cmp
mov
lahf
ljmp
sbb
lret
lret
pop
mov
adc
push
adc
xchg
outsb
mov
aaa
hlt
inc
adc
pop
add
aad
cmp
inc
in
daa
cmp
idiv
lahf
xorb
lahf
push
mov
jbe
addr16
jbe
mov
movsb
movsb
inc
movsl
pusha
jl
add
test
xchg
dec
inc
xchg
and
cmc
xor
lds
cmp
push
stc
popf
sub
jmp
lcall
xor
mov
inc
sbb
popa
cld
xchg
out
pop
jmp
xchg
jecxz
ljmp
pop
leave
inc
mov
dec
pusha
jno
fsub
es
cmp
inc
sbb
jno
cmp
mov
fdivr
mov
ret
push
xor
or
adc
push
lahf
lods
cs
or
dec
lcall
orb
out
cld
inc
cmp
xor
aad
pushf
push
jl
icebp
pop
jno
jb
nop
xchg
cmc
cmc
stos
fnstcw
add
dec
lcall
xlat
insb
sub
mov
inc
aas
sub
pop
cmp
sbb
shlb
cs
ss
out
pop
sbb
rorb
push
cmp
and
outsl
enter
pop
cmp
das
dec
gs
ljmp
or
iret
mov
dec
pop
imul
aam
mov
push
lea
and
int
sub
push
and
push
xor
sub
repnz
xchg
mov
mov
decb
xchg
test
sub
mov
inc
lods
cwtl
outsb
sbb
out
es
mov
jp
std
rol
jp
sti
inc
jae
sahf
arpl
int
sub
push
int
pop
sub
leave
lret
sub
dec
add
sbb
and
in
loope
add
and
add
out
repz
loopne
daa
outsl
inc
aad
addr16
add
popf
push
addr16
xor
pop
jmp
xlat
into
sbb
outsl
imul
pushf
nop
sbb
mov
clc
ljmp
xchg
iret
popf
rol
or
jecxz
sub
leave
rolb
nop
cmpsl
je
repnz
call
adc
mov
and
and
inc
mov
into
mov
cmpl
xchg
push
enter
or
test
and
dec
rep
xchg
sub
sbb
out
test
push
nop
push
push
pop
xchg
push
push
imul
stc
xchg
inc
cmp
mov
outsb
sub
sub
inc
or
test
insb
add
scas
add
and
stos
addl
add
and
cmp
push
lods
nop
clc
mov
lret
insl
add
jbe
idiv
nop
sub
jmp
and
mov
xlat
inc
das
jo
stc
shl
sbb
enter
int
insb
dec
mov
push
test
xchg
fmull
xor
arpl
sub
dec
push
rorl
test
pop
or
pusha
add
mov
gs
cs
cli
xor
js
inc
sahf
sbb
out
sub
cmp
dec
popa
imull
mov
test
or
pop
divps
loop,pt
mov
mov
fldt
push
outsb
dec
in
fs
stos
cltd
mov
repnz
mov
lret
sahf
xlat
jbe
adc
mov
rolb
fildl
out
int3
mov
ss
rolb
inc
cld
push
inc
in
xlat
add
mov
push
cmp
sbb
mov
leave
ss
gs
push
aas
fwait
push
std
mov
cld
push
jo
repnz
dec
das
pop
inc
ja
cmp
xchg
loopne
xchg
sub
cmp
pop
xor
out
outsl
sbb
xchg
and
jb
inc
movsl
mov
fdivrl
xchg
std
add
sbb
adc
leave
xchg
sahf
rol
mov
mov
movsl
xchg
and
movsb
mov
test
imul
dec
mov
enter
test
adc
mov
push
scas
test
jno
outsb
mov
sub
mov
xchg
in
jle
xor
pop
ret
scas
aas
cwtl
pop
out
outsb
loope
ret
sbb
jg
popf
cwtl
dec
shrb
mov
lock
out
sub
jo
jecxz,pt
fs
jge
subb
push
ljmp
jno
flds
test
jg
push
xlat
push
outsl
std
ret
jnp
push
or
mov
ret
test
mov
popf
jl
cld
lods
mov
sbbl
mov
pushf
jbe
ljmp
lods
and
ret
hlt
lods
movsb
mov
cwtl
out
popa
push
mov
mov
fsubr
popa
lret
sbb
mov
fdivr
dec
sub
push
push
pop
mov
fnstenv
mov
mov
dec
test
jecxz
or
push
insl
add
xchg
imul
inc
mov
std
xor
mov
pop
dec
addr16
fwait
aas
add
dec
or
push
adc
jae
scas
mov
clc
jnp
stos
aad
xor
std
aas
filds
rolb
cmpsl
xor
pop
inc
mov
stos
inc
pop
pusha
mov
cmpsb
data16
je
sbb
in
jb
inc
sub
aad
ret
inc
mov
sub
cwtl
jae
mov
mov
push
fnstenv
inc
and
xchg
fisubl
stos
je
mov
out
stos
cmpsl
and
daa
sbb
lds
or
xor
test
dec
push
or
jns
mov
lea
insl
pop
daa
xchg
dec
popf
repz
push
cmp
xchg
leave
xor
mov
push
enter
push
or
mov
call
scas
mov
sbb
cwtl
das
insl
dec
in
push
inc
in
fcompl
inc
push
ljmp
hlt
or
dec
sub
pop
jbe,pn
add
sub
ljmp
movl
roll
mov
test
push
gs
inc
in
jle
stc
cmp
pop
dec
in
test
mov
mov
push
test
push
stos
inc
push
rolb
ds
out
sbb
jg
xor
cmp
repz
jmp
xchg
push
mov
xchg
shr
sbb
mov
ret
es
mov
and
sub
aas
aad
int
sarl
pop
add
pop
lock
add
sub
fimuls
dec
jp
mov
pop
out
and
daa
in
cmp
int
jecxz
cli
pop
cmp
push
add
push
in
les
mov
rorb
jno
push
fcmovnb
dec
jmp
cmp
dec
dec
xor
mov
cli
mov
sbbb
add
loope
xor
or
aam
adc
dec
pop
sbb
pop
ret
int3
xor
lea
or
jae
push
outsl
mov
xchg
repnz
dec
inc
cld
stos
fwait
cmp
cmp
and
int
leave
dec
pop
repz
cmpsl
popf
jnp
sub
dec
pushf
and
test
jbe
pop
mov
scas
outsb
pop
or
cs
sarl
stos
sarl
ret
rorl
inc
pop
sbb
and
imul
int3
movsb
sbb
fprem1
mov
mov
out
cltd
lods
mov
je
xor
popa
idivb
xorl
add
les
stos
fnstcw
push
push
das
mov
dec
sub
push
scas
test
jp
scas
and
push
out
ds
test
test
mov
adc
push
dec
xor
sub
push
cmp
nop
xor
cmpl
push
cld
cmp
sub
icebp
jns
mov
outsb
iret
adc
inc
adc
push
out
or
mov
xchg
sbb
lds
pop
pop
test
jecxz
call
cld
sbbb
sbb
add
std
adc
pop
push
or
or
lcall
inc
cmpsb
repz
push
outsl
aaa
xchg
js
sbb
repz
std
ljmp
in
push
lds
ret
fs
out
push
cld
fimuls
sub
sbb
mov
clc
and
jnp
sahf
rcll
mov
jnp
aam
and
cli
out
inc
test
add
inc
pop
xorb
pushf
mov
jo
test
repnz
mov
je
xor
xchg
add
pop
xchg
les
scas
or
xchg
lret
test
test
push
out
ja
dec
add
jp
mov
inc
push
outsl
daa
ror
sti
lcall
lcall
and
sahf
xor
into
adc
mov
movsb
push
inc
adc
aam
mov
int
sub
cs
lcall
stos
ja
inc
popa
add
xor
in
cmpsb
xchg
lods
scas
inc
mov
xor
push
xchg
in
stos
les
out
add
mov
adc
jp
loopne
push
testb
inc
mov
jmp
xchg
xor
out
inc
cld
ror
dec
cli
sub
test
iret
scas
pop
jbe
dec
pop
test
add
xor
ret
xchg
xchg
or
andl
das
mov
das
push
call
arpl
fwait
clc
aaa
push
in
jb
and
dec
mov
push
movsl
adc
xor
in
mov
cwtl
jmp
cmpsb
mov
cs
imul
add
xor
inc
and
cmp
sbb
xchg
imul
and
mov
cltd
cmpsl
sar
xchg
ret
cmpsb
mov
mov
inc
popf
push
je
xor
iret
pop
push
inc
pop
inc
mov
pop
out
mov
fnstcw
movsb
leave
xchg
and
sbb
aas
sarl
fisubs
dec
loop
std
push
jbe
add
pop
arpl
xchg
cmp
ja
jg
mov
in
movsb
cmp
in
ds
sub
push
pop
mov
cmp
mov
cmp
fnstcw
push
sti
aam
dec
or
sub
lret
pop
push
cmp
cs
fsts
add
or
fs
ja
pusha
push
sahf
mov
xchg
loop
pop
xchg
in
sbbb
add
xorb
push
sub
mov
movsb
and
dec
ret
icebp
mov
enter
ret
mov
adc
pop
ja
add
movsb
dec
or
adc
loop
sbb
ret
es
and
mov
stos
es
testl
fcomip
push
outsb
mov
ljmp
pushf
lods
pushl
inc
cwtl
cld
pop
dec
push
ficoms
pusha
push
das
out
mov
mov
jne
jl
mov
repz
out
stos
hlt
fcompl
add
inc
mov
mov
dec
cmpsb
and
adc
aaa
enter
movups
ja
sahf
mov
scas
in
sar
jo
pop
fsubrl
cmp
stos
mov
mov
leave
rorb
cwtl
insl
ss
ds
lcall
imul
adc
xor
sub
fisubrs
icebp
sbb
lds
lds
mov
iret
push
add
ficoml
dec
xchg
sbbb
jmp
sbb
in
lret
aaa
fsubs
push
testb
movsl
sbb
dec
jmp
mov
lahf
test
repz
pushf
dec
lods
fwait
les
push
mov
mov
push
je
in
cmp
mov
dec
fwait
repnz
sbb
loope
iret
in
sub
test
pop
lret
adc
and
and
jae
pop
sub
dec
pusha
push
in
mov
adc
xlat
jo
sbb
andb
push
negb
or
push
mov
fcmove
mov
in
aad
in
out
cmp
loop
adc
movl
adc
inc
xchg
pop
lahf
das
lret
jae
push
call
iret
mov
in
scas
push
icebp
jb
insl
mov
test
add
nop
adc
adc
out
push
xor
in
inc
ret
stc
imul
add
cmpl
dec
xchg
sub
test
mov
imul
or
inc
lahf
push
and
dec
loop
inc
pop
mulb
inc
jge
inc
mov
push
fcomp
sbb
or
jnp
jecxz
jbe
jns
cwtl
das
mov
popf
mov
mov
rorl
adc
cs
in
add
inc
sbb
inc
lcall
mov
push
cmpsl
pop
aam
out
sbb
xchg
std
repnz
push
or
jae
mov
cmp
mov
in
xchg
cmp
fisttpll
popa
clc
adc
repnz
mov
jne
fwait
jge
cmc
cmp
dec
dec
push
movsl
lock
dec
pop
imul
adc
je
shrl
out
test
popf
shrl
inc
inc
push
dec
loopne
repz
or
hlt
cmp
sub
push
pop
adc
pop
sub
stc
adc
hlt
sub
loope
pop
icebp
insl
out
mov
xor
mov
stos
xchg
ficoms
or
aas
ja
int
push
jp
inc
jge
pop
pop
test
lods
fidivl
dec
pop
dec
out
daa
test
repnz
ret
lcall
mov
adc
inc
ret
jbe
enter
and
fldenv
fsubl
xlat
jg
test
fidivs
std
xchg
xlat
xchg
dec
in
sti
push
and
add
lods
mov
shl
add
sub
adc
and
xor
mov
dec
in
add
and
add
adc
js
shrl
lret
lock
mov
inc
mov
sbb
push
dec
out
popa
mov
push
scas
pop
jle
xor
dec
fsts
inc
jge
cmp
fwait
les
inc
or
lock
mov
ja
push
test
scas
sbb
xor
sbb
addr16
inc
xchg
mov
fwait
jbe
insl
icebp
enter
cld
je
inc
fisubrl
pusha
fistpl
cmp
inc
inc
cmp
mov
sub
ret
hlt
es
outsl
ffree
in
clc
rcr
add
mov
lret
pop
jbe
incl
and
stos
cmp
ss
sbbb
movsb
cltd
jge
push
jns
cld
and
cld
packssdw
lahf
test
fistpl
out
rclb
inc
ds
ja
pop
and
inc
mov
sti
adc
lret
add
out
or
jmp
sbb
out
inc
add
xor
sub
cmp
cld
clc
dec
mov
jmp
cli
add
bswap
in
sbb
scas
aaa
lods
inc
imul
push
xor
icebp
mov
pop
xsha1
cmpsb
mov
mov
xchg
mov
xchg
popa
cmc
stos
insl
cwtl
mov
leave
loope
jno
mov
jae
cmc
fmull
jmp
es
jg
mov
icebp
xchg
repz
and
jg
sbb
dec
dec
cld
mov
cmp
lds
sarl
jge
push
popf
sbbl
dec
mov
repz
mov
enter
sahf
fs
pop
icebp
cmp
inc
outsl
xor
lret
mov
insb
cli
nop
scas
push
mov
bound
repnz
cmp
xchg
jp
sub
add
cs
shrb
int
test
dec
out
dec
inc
jnp
fbstp
fsubrl
dec
aad
and
dec
iret
sbbb
push
xorl
pop
pop
add
pop
mov
movsb
movb
pushf
cli
add
push
stc
push
leave
inc
and
outsl
push
xchg
movsb
mov
repnz
and
mov
or
xlat
repnz
jnp
add
les
cmpsb
push
in
mov
fdivl
jl
cld
lea
lret
dec
in
xorl
arpl
dec
mov
cltd
je
pop
fildll
inc
xlat
push
jle
sbb
into
push
in
icebp
loopne
lret
dec
xchg
jae
inc
ds
rclb
or
pop
and
movsl
int3
insl
mov
cmpb
and
adc
xor
out
adc
mov
gs
mov
dec
test
andb
push
inc
cmp
addb
call
rcr
outsb
add
sub
pop
mov
std
lret
jb
jns
sarb
push
outsl
lds
out
mov
sbb
mov
xor
xor
ficomps
fstpt
mov
mov
xchg
mov
lcall
xchg
jmp
fistpll
push
pop
xchg
lock
cmp
clc
sarb
sub
jl
jne
xor
xchg
mov
lret
test
and
divl
lock
pop
jne
xor
data16
add
adc
scas
das
or
sub
xchg
pop
and
jne
jg
lods
daa
out
and
mov
inc
into
fdiv
enter
cmp
sub
out
stos
xor
ljmp
push
lock
fidivrl
add
fwait
mov
xorl
mov
fdivl
mov
push
and
pop
fisubrs
jbe
pop
imul
pop
loop
mov
pushf
in
push
jmp
enter
fld
stos
jbe
loop
std
dec
popf
out
adcl
or
in
jno
or
loope
sub
add
push
jbe
mov
out
push
xchg
inc
stc
hlt
mov
inc
test
mov
sbb
jnp
sarb
dec
add
push
dec
cmpsl
ret
dec
jg
insl
popa
xlat
dec
call
repnz
fdivrl
stc
test
adc
negl
sti
cmp
notl
test
jbe
xor
inc
xchg
pop
dec
fildll
add
inc
xchg
mov
ret
jae
call
mov
xchg
dec
mov
ds
adc
icebp
xchg
sbb
mov
imul
fwait
mov
pop
and
test
jge
xchg
cmc
arpl
lahf
shrl
dec
pop
add
adc
js
sahf
jmp
movsb
jg
das
aaa
imul
fisubs
ret
cwtl
divps
outsl
xorl
gs
mov
test
sbb
arpl
or
xchg
mov
push
sahf
mov
ss
push
adcb
push
loop
int3
jmp
fldl
jge
ss
out
pop
mov
dec
push
xchg
cmp
ret
shlb
iret
mov
mov
pop
idivb
shll
sub
sbb
add
je
insl
jg
sub
jns
popf
inc
repnz
sub
lahf
stos
push
js
cmp
xorl
aad
scas
jle
fnstcw
xchg
mov
popa
mov
inc
dec
test
lret
adc
adc
sub
lret
cmp
pop
cmp
sti
mov
in
bound
dec
or
sbb
test
xchg
or
imul
push
or
test
clc
int
cmp
sbbl
mov
inc
xor
mov
imul
aam
mov
pop
dec
lcall
movsl
lahf
sub
stos
cmc
pop
ret
and
test
and
mov
nop
mov
push
je
stos
pop
jo
mov
and
adc
xchg
dec
leave
xchg
jae
sbb
push
dec
fstpt
add
jns
mov
pop
xor
pop
mov
inc
fcmovne
xor
shrl
push
into
popa
inc
jo
xorb
dec
add
cmc
dec
fidivl
sub
jmp
inc
pop
pop
or
in
cmp
scas
cmp
rcrl
sub
repnz
outsl
pop
xor
ja
pop
orb
cmp
mov
es
stos
push
add
lods
test
addl
mov
inc
lahf
push
inc
into
movsl
hlt
mov
pop
jo
xlat
test
fbld
movsl
aaa
out
sbb
mov
and
addr16
in
dec
mov
dec
shr
cmpsb
push
dec
lret
popf
sub
aam
ja
lret
adc
mov
cmpsl
add
xchg
inc
and
sub
jae
fldenv
sbb
ss
pop
mov
shrl
aad
sbbl
rol
stos
fsubr
xlat
jecxz
cs
fbld
imul
sbb
sub
fwait
xlat
popf
lret
push
gs
loope
dec
mov
push
or
mov
inc
imul
insb
aam
or
test
pop
mov
lods
inc
sub
mov
lds
lret
movsb
int3
jg
mov
testb
ret
adc
cld
sbb
insb
push
mov
dec
xchg
jb
lds
mov
lahf
mov
aad
test
mov
sbb
fbstp
lret
push
sbb
sbb
notb
pop
pushf
jb
jge
movsl
xchg
in
lds
stos
push
sbb
sub
or
outsl
loop
xchg
cwtl
add
push
popf
xchg
out
ljmp
test
lea
enter
add
sub
hlt
cwtl
mov
fisttpl
mov
and
pop
push
test
shl
xchg
dec
mov
repz
xor
sbb
mov
popf
pusha
mov
int3
lret
push
js
pop
enter
mov
dec
adcb
mov
sbb
xchg
imul
xchg
shlb
pop
pop
adc
pop
pop
mov
pop
dec
pusha
aas
fdivr
inc
ja
nop
sbb
push
or
mov
outsb
stos
daa
add
es
and
push
gs
jg
or
je
inc
pop
es
xchg
or
jg
lods
inc
lods
pop
mov
int
mov
fstl
pop
mov
push
or
adc
xchg
sbb
xchg
pop
sub
adc
pop
arpl
aas
enter
and
pop
jo
fadd
leave
adc
cmp
and
sbb
lds
iret
bound
adc
mov
pushf
inc
mov
jmp
mov
daa
outsl
cmp
push
inc
data16
in
sbb
lods
insb
mov
and
shrb
cmpsb
std
sub
mov
sbb
or
mov
imul
jecxz
sbb
push
inc
in
aas
ljmp
ds
inc
sbb
pop
ds
mul
pop
xlat
fwait
xor
leave
xchg
add
popa
orl
aad
int3
dec
adc
lea
loopne
scas
subb
stos
cmp
push
mov
mov
push
lcall
push
jmp
push
jge
push
jne
pop
cld
sahf
and
push
cmp
in
nop
ds
push
insb
add
rorb
push
rcl
push
sti
fbld
loopne
dec
icebp
adc
adc
mov
lahf
scas
stos
outsb
bound
scas
sbbl
hlt
jle
mov
mov
adc
lock
mov
sbb
sbb
sbb
inc
fst
repz
push
fcmovne
mov
cmp
push
iret
out
call
arpl
cmp
fidivrs
out
in
ljmp
push
jge
cmp
mov
mov
mov
mov
ss
enter
and
mov
xchg
cmpsl
jo
rorb
and
fwait
dec
imul
and
pushf
cltd
mov
lcall
cltd
shlb
adc
mov
jne
or
cmpsb
ret
jg
push
mov
aad
sbb
push
sub
out
andb
popf
insb
js
mov
mov
and
std
popa
dec
mov
add
mov
inc
clc
xchg
icebp
inc
jno,pn
inc
and
out
idiv
adc
stos
jnp
popf
or
push
cwtl
lock
das
xor
inc
cs
mov
mov
ss
pop
leave
push
cmp
mov
rcr
stos
xchg
sub
mov
jbe
pop
andl
add
push
inc
rol
mov
loope
lds
out
pop
loop
dec
repz
mov
std
add
pop
daa
pop
shrl
sub
or
dec
mov
push
pop
inc
sub
inc
pop
pop
fdiv
mov
arpl
mov
or
or
jge
imul
lea
out
cmp
mov
add
jl
fstps
lret
xor
bound
icebp
into
add
and
jl
pop
pop
push
decb
insb
push
shlb
negb
dec
in
sub
lea
inc
nop
push
inc
jno
xchg
lret
jge
jmp
outsb
inc
stos
test
outsl
stos
out
rorb
dec
dec
sbb
mov
pop
mov
push
xchg
jne
notb
jae
mov
xor
fnstenv
imul
mov
insl
mov
and
cmp
int
inc
or
and
mov
shrb
in
push
addb
cwtl
movsb
out
push
in
inc
add
es
mov
xchg
in
inc
dec
mov
push
sbb
fdivrs
icebp
jnp
movsb
or
adc
imulb
in
jl
jae
imul
rcr
sahf
or
xorl
jmp
out
mov
jns
adc
aam
test
dec
sbb
jge
out
jmp
fstpt
test
in
xor
gs
xor
data16
push
hlt
xchg
insb
scas
or
inc
jmp
cmpb
popa
loop
addr16
lea
add
icebp
lret
call
hlt
ss
xchg
scas
cmp
jnp
mov
jnp
mov
inc
in
test
lret
cmp
push
shll
mov
jecxz
fstp
lock
ljmp
insb
rcrb
adc
shrl
mov
xchg
out
jmp
ret
in
sub
add
aad
outsb
adc
ret
rcll
adcl
daa
or
or
mov
std
lret
fcmovu
fiadds
push
jl
mov
cmpsb
xchg
mov
in
push
sarl
shr
dec
popa
xor
loope
cmpsl
push
xchg
js
cmc
adcb
mov
popf
stc
adc
jmp
adc
pop
inc
ljmp
xor
xchg
fiaddl
xor
das
jge
mov
movsl
icebp
mov
fsubrl
add
xchg
flds
xchg
dec
arpl
loope,pt
or
inc
in
in
or
aas
clc
pushf
add
cmp
rol
rcr
jno
faddp
int3
test
or
pop
adc
and
popf
sahf
lock
data16
xchg
inc
and
push
sbb
jg
mov
inc
sub
dec
lret
test
adc
or
das
shlb
push
and
imul
mov
mov
xor
pop
inc
mov
loope
imul
jmp
ljmp
jge
insb
mov
xlat
or
inc
mov
imul
adc
mov
jecxz
les
mov
dec
dec
stos
jae
and
int
clc
push
pusha
cmp
sbb
dec
add
xchg
cmp
mov
iret
imul
xchg
cmc
imul
cld
add
add
sbb
inc
mov
test
and
jo
rcl
stc
mov
dec
cli
pushf
jnp
push
or
sub
lock
cli
sub
pop
mov
sbb
and
and
lods
push
les
sub
mov
jp
fs
int3
push
aas
cmpsl
push
sub
mov
pop
lods
pushf
xor
add
or
and
pop
push
inc
adc
flds
jp
jae
das
leave
jecxz
add
divb
ss
xchg
xchg
jle
sub
pusha
xchg
jge
divl
sub
mov
inc
add
jmp
loope
rcr
hlt
js
out
sbb
cs
aas
xor
cmp
sbb
mov
adc
scas
sti
xor
mov
pop
nop
jnp
jbe
adc
dec
sub
test
cmp
pop
adc
repnz
into
aad
or
sbb
cltd
push
ret
shrl
add
jo
dec
cmp
sbb
pop
adc
mulb
add
pop
sub
movsl
pop
dec
das
in
cmp
leave
out
sub
das
out
ss
sub
dec
arpl
enter
sub
movsb
in
daa
lcall
adc
std
arpl
jle
xor
cli
and
dec
loope
inc
push
fdivrl
shl
stos
xor
sbb
test
std
subb
rcrl
insb
add
jnp
call
sub
xor
pop
ret
stos
inc
hlt
adcl
rcr
daa
gs
jne
inc
mov
dec
mov
xchg
pop
bound
aaa
ss
xor
aad
into
loopne
pop
push
fldt
pop
jecxz
xchg
sub
add
into
and
nop
add
sub
insb
movsb
adc
pop
or
es
sub
sub
pop
shlb
mov
mov
rorl
jmp
push
inc
inc
les
mov
jbe
pop
stos
ret
lret
xchg
cmc
push
jg
fwait
xchg
push
roll
outsl
cwtl
xor
or
aam
mov
jbe
stos
push
test
inc
jl
jne
sub
add
lcall
cmp
in
daa
cmp
sbbl
pop
dec
outsb
jbe
ret
dec
hlt
cmp
dec
mov
in
clc
sahf
jmp
aaa
add
repz
or
push
push
mov
aaa
and
push
xor
mov
jg
fyl2xp1
or
lods
sub
sti
push
dec
addr16
xchg
add
mov
pop
rcrb
jmp
pop
lods
xor
cli
mov
jle
cmp
rorb
xchg
push
push
xchg
xchg
xchg
pop
cmp
leave
mov
test
pop
jg
add
inc
inc
dec
pop
js
jne
imul
lods
mov
sbb
push
ljmp
add
push
fdivrs
data16
lret
cmp
jno
call
lahf
jb
xor
cli
scas
inc
sub
xchg
ja
xchg
mov
dec
pop
fidivl
pushf
stos
and
shlb
mov
pop
mov
in
mov
sbb
push
sbb
sbb
test
movsl
dec
mov
dec
imul
push
lahf
insl
and
cmp
js
cwtl
inc
dec
sub
xor
mov
in
sub
sub
repnz
or
mov
lcall
adc
pop
mov
adc
testb
mov
add
out
dec
and
jns
ds
jl
mov
sub
shrl
dec
mov
or
outsb
jl
sbb
loop
das
xchg
xlat
pop
loopne
sub
jmp
iret
inc
push
ss
int3
and
inc
cmp
or
lock
inc
xchg
sti
pop
mov
das
loop
mov
nop
ljmp
or
xchg
fistl
jbe
or
jb
dec
pusha
clc
sub
mov
cs
jbe
push
or
movsl
sub
pop
fmul
out
jno
sbb
stos
jbe
insl
popa
clc
cmp
pop
popf
insl
mov
inc
sub
jo
stc
adc
aaa
cmp
addb
psrlq
cltd
adc
mov
lret
ss
decb
pop
push
jo
mov
aad
cmp
inc
call
ficompl
loope
pop
add
jmp
pop
scas
sub
hlt
jae
xor
push
test
dec
fs
or
xchg
mov
testl
or
xchg
fsubr
lsl
pusha
roll
loopne
dec
jmp
jg
jnp
push
sub
leave
fnstenv
pop
in
rcrb
dec
jl
sub
adc
or
xorb
pxor
out
dec
mov
fsubl
test
je
push
or
mov
adc
pop
ds
fs
std
mov
lahf
in
mov
in
orl
mov
imul
in
mov
inc
stos
jmp
cli
cmp
and
lahf
fnsave
andl
insl
push
mov
js
jl
add
iret
lods
xchg
jmp
mov
cmp
lret
mov
pop
dec
sub
dec
lods
xchg
pop
xorb
rorl
shrl
pop
mov
adc
bnd
call
lock
es
mov
and
adc
nop
dec
jg
dec
mov
jg
cmp
aam
je
inc
arpl
mov
adc
movsb
sub
mov
aas
shlb
test
inc
push
xor
fabs
sbb
mov
pop
mov
xchg
push
jl
je
adc
rclb
aam
jno
fbstp
add
inc
pop
mov
push
inc
push
in
fwait
xor
call
cwtl
das
testl
mov
jle
xlat
outsb
pop
mov
out
ucomiss
lods
cmp
pop
movsl
test
push
cmp
jbe
pop
daa
cmp
stos
lods
jmp
add
cmp
mov
imul
das
jae
jns
xchg
test
adc
pop
cwtl
adc
sub
pop
loope
jp
add
enter
outsb
mov
mov
ja
mov
or
daa
cmp
pavgw
addr16
shl
movsb
dec
mov
daa
sub
jecxz
pop
mov
fnsave
or
mov
jae
or
mov
cmp
dec
enter
mov
lods
or
data16
dec
dec
nop
scas
je
icebp
push
lods
inc
das
xchg
imul
fidivrl
mov
jmp
sub
add
or
mov
sbb
sbb
cld
cmp
adc
or
xchg
jmp
fsub
xor
fwait
inc
pop
insb
jp
leave
and
mov
outsb
dec
movsl
pop
scas
sbb
xor
xor
mov
xchg
jg
xchg
mov
pop
mov
call
jbe
imul
std
push
cltd
mov
sti
outsl
mov
pop
in
pop
push
add
loope
and
and
adc
gs
mov
xchg
cmpsb
std
dec
cmp
mov
pop
xor
mov
inc
or
insl
shl
mov
and
movsb
jg
and
rcrb
leave
cmp
es
into
xchg
sti
mov
pop
sub
fdivrl
icebp
pop
std
add
sbb
pop
stos
shll
xor
outsb
add
mov
mov
in
fistpl
push
xorb
aas
imul
hlt
xchg
arpl
stos
xchg
lahf
orb
mov
inc
cmp
jbe
mov
xchg
mov
or
shll
inc
fidivs
or
cld
sbb
xchg
inc
stos
sub
scas
or
out
xor
testb
add
push
push
xlat
sub
test
sti
js
std
cmp
xchg
aam
fwait
and
jb
cmp
in
mov
lcall
lods
enter
lods
pop
push
ret
fs
ds
jnp
mov
fs
mov
mov
xor
mov
jbe
push
xchg
in
outsl
jge
shl
add
inc
shlb
jno
outsb
daa
leave
call
mov
inc
or
scas
mov
stos
out
mov
in
in
sub
test
lret
sbb
mov
sbb
add
push
data16
idivl
pop
jne
pop
loop
pusha
mov
fcmove
cwtl
subb
pop
pusha
repz
lahf
test
and
rorb
jo
cmp
int3
jg
rorl
add
pop
push
jb
pop
mov
jnp
inc
pop
das
mov
add
movsb
mov
loop
adcb
and
mov
push
pop
adc
pusha
nop
adc
or
jg
ds
jns
lods
and
popa
mov
xchg
lahf
pop
shl
int
mov
mov
addb
xlat
pop
stos
fmull
xchg
out
mov
stc
and
lods
fcoms
pushf
sub
jp
inc
inc
lock
inc
daa
das
pop
push
insb
stc
icebp
arpl
dec
lret
dec
call
jg
sti
pushf
inc
lret
loop
data16
cltd
mulb
push
xchg
mov
jae
lahf
xchg
test
inc
rclb
dec
pop
ss
add
cmp
mov
test
lret
pop
pushf
or
shrb
cmp
sbb
mov
jnp
addr16
inc
shll
inc
add
dec
mov
pop
mov
cwtl
outsb
sub
hlt
lahf
inc
pop
xchg
sub
xchg
fsubrs
sahf
xor
or
dec
pop
add
aad
xchg
js
test
adc
jbe
cmp
push
jmp
ds
pushf
out
es
lock
mov
aam
das
inc
aas
scas
and
push
xchg
mov
call
shlb
ret
sbb
es
sub
stos
pop
testb
mov
mov
inc
divb
movsl
das
dec
push
pop
scas
lret
gs
mov
stos
jnp
out
iret
jo
adc
and
jbe
mov
lods
out
repz
sbb
insl
lea
mov
sbb
adc
mov
add
outsl
rcrb
int3
jge
ljmp
inc
ret
lock
movsl
cmp
fidivs
inc
pop
push
add
std
mov
ret
push
xor
pop
loopne
inc
sub
xchg
push
cmpsb
lock
lret
push
fs
jnp
sub
repz
xor
mov
inc
in
shrb
loope
push
or
mov
gs
test
out
cmpsl
sbb
pop
sub
stos
inc
sub
push
jno
clc
les
push
push
lcall
in
cld
cmp
pop
xchg
lods
cld
push
call
push
lret
xorl
or
call
mov
push
scas
mov
xor
xchg
and
xchg
add
fbld
pop
adc
out
outsb
add
out
adc
js
push
mov
pop
sahf
popf
or
pop
pop
jg
clc
aam
push
mov
insl
mov
and
push
stos
rclb
inc
xorb
mov
aam
mov
fcmove
fs
out
imul
pop
and
pop
std
div
ja
sbb
or
mov
leave
xor
inc
inc
sbb
inc
cmp
mov
gs
rcrb
enter
fcomip
sub
bound
mov
sub
mov
lods
xor
pop
jecxz
imul
sub
shl
sbb
dec
adc
jns
jp
fldl
xchg
push
push
pop
dec
stc
out
xchg
paddusw
or
push
daa
sbb
stos
add
xchg
mov
loope
and
out
stos
push
fstps
inc
icebp
je
aas
outsl
neg
out
adc
mov
xor
add
stos
es
cmp
sti
ss
sbb
pop
jge
into
pusha
push
shll
subb
lahf
data16
daa
adcl
push
or
aad
push
and
lcall
mov
pop
in
mov
push
xchg
dec
cli
add
arpl
fnop
addr16
sbb
mov
ljmpw
iret
jbe
mov
inc
sbb
test
jmp
pop
test
test
aaa
or
adc
jge
and
sahf
jmp
das
pop
mov
push
out
lret
cmp
mov
sub
daa
or
push
jle
adc
mov
movzbl
adc
out
xchg
adc
lea
or
stc
pop
jl
daa
push
shlb
shrl
or
add
shlb
inc
and
ss
xchg
shrl
pop
inc
push
repnz
or
std
push
push
ss
repnz
xchg
xor
cld
aam
lret
adc
push
outsl
sahf
push
pop
les
les
out
lods
and
in
push
or
jo
xchg
lcall
mov
mov
cmp
cli
cmp
push
andl
add
push
out
push
or
int
sbbl
and
sbb
xor
push
movsl
bound
inc
or
cltd
push
or
pusha
sub
sub
ss
mov
push
push
inc
lahf
rcrl
sub
jle
fimull
loopne
daa
loop
ficoml
mov
mov
das
lret
lret
add
jle
seta
stos
arpl
sub
xor
das
out
stos
sahf
lcall
or
loop
add
mov
ss
pop
jle
daa
jmp
or
in
inc
fstpl
mov
mov
jle
push
daa
mov
test
add
sbb
push
inc
rcrb
pop
cmc
test
sub
push
lret
aas
jnp
mov
fidivs
test
sbb
add
inc
jbe
mov
mov
test
sub
adc
mov
out
insl
jp
sub
jmp
lret
ja
jle
popa
lea
xchg
mov
mov
outsl
scas
xchg
fmulp
and
mov
loope
pop
inc
fiaddl
in
ss
add
add
or
stc
loopne
cmp
std
dec
ret
pusha
lret
imul
jg
pop
imul
mov
pusha
xchg
add
sar
sbb
sbb
xor
fnstcw
sahf
in
fisubs
gs
lahf
and
lods
fucomi
lahf
test
gs
test
xchg
cmpsb
negb
or
or
mov
fwait
pop
test
jge
pop
repz
mov
or
push
icebp
into
rolb
sti
cltd
inc
mov
push
mov
cmpsb
shr
scas
rorb
push
lods
inc
jg
and
push
push
jl
in
and
sbb
aaa
and
mov
pop
movsl
mov
stc
adc
jnp
clc
push
lcall
popa
or
stc
icebp
adc
inc
loope
cli
and
bound
ret
push
in
mov
test
sbb
js
mov
xchg
fnsave
sbb
std
pusha
les
jns
inc
push
lret
push
sub
pop
fstpl
call
mov
ret
in
inc
ret
sbb
xlat
inc
leave
pop
inc
fiadds
sub
push
and
mov
adc
lret
or
dec
dec
lret
out
popa
shr
cmp
fs
mov
adc
in
xchg
pop
stos
out
insb
in
popf
out
mov
and
repz
push
xchg
lods
inc
xor
orl
push
ds
in
sti
xchg
sub
xor
mov
pushf
test
into
mov
arpl
jbe
inc
mov
stos
test
aam
js
adcl
mov
adc
sub
jle
lds
pushf
sub
cld
lcall
add
lods
jo
sbb
cli
and
sub
inc
sbbl
sbb
jb
data16
pop
cmp
mov
insl
loopne
gs
cmpsl
inc
mov
mov
fisubs
clc
pop
out
mov
sub
jb
mov
in
outsl
pop
ljmp
jmp
hlt
mov
mov
add
and
jnp
outsl
pop
rorb
pop
mov
push
out
pop
insb
jl
adc
in
inc
scas
push
js
cmp
push
and
cmpsl
les
mov
pop
push
shrb
cmp
sbb
enter
mov
inc
fcomi
mov
push
add
fnsave
mov
pop
mov
loopne
xchg
int
cmp
inc
push
pop
loope
mov
xor
dec
adc
dec
and
shrl
xlat
jbe
mov
std
inc
leave
dec
inc
inc
hlt
ljmp
enter
jno
aad
mov
ljmp
fwait
or
cmp
pop
pop
add
loop
fisubrl
sub
mov
mov
pushf
ljmp
ss
addr16
mov
mov
inc
xchg
dec
jo
or
jmp
fcoms
mov
flds
movsb
sbb
nop
mov
and
pop
xor
inc
and
or
adc
and
inc
notl
xchg
imul
jp
and
sahf
and
dec
xchg
lahf
dec
cltd
sbb
push
out
test
xchg
and
in
push
inc
push
aaa
or
cld
mov
or
mov
enter
ss
push
push
dec
int
loope
xchg
inc
insl
add
lods
push
dec
push
popf
dec
ja
out
shlb
cmp
add
out
add
adc
pop
sar
jns
jle
fidivl
xor
popf
popf
xor
jns
xchg
sub
push
push
dec
mov
inc
xor
lea
roll
pop
mov
das
aad
pop
repz
inc
xor
push
stc
jg
push
stos
cld
cmp
push
pushf
scas
adc
and
insb
out
lcall
mov
push
es
pusha
sub
into
lods
cs
xchg
pop
out
adc
jecxz
pop
pop
popf
inc
inc
shlb
les
dec
dec
stos
imul
jmp
aas
popa
insl
mov
sbb
fidivs
pop
cmpsl
leave
add
jl
arpl
sbb
fdivs
mov
aas
cmpl
jge
and
aam
icebp
push
mov
sub
jne
pop
dec
mov
pop
jg
pop
mov
insb
pop
xor
lds
mov
shr
nop
out
fs
add
xor
popf
dec
bound
xor
mov
cmp
into
mov
mov
mov
xor
test
jae
sub
and
sub
mov
sbb
pop
jbe
daa
mov
xchg
inc
mov
mov
mov
int
test
shrb
sub
lcall
lods
popf
push
push
sbb
stc
cwtl
scas
pop
cmpsb
and
lods
mov
aad
ja
xor
pop
mov
push
lods
dec
popf
adc
outsl
enter
cmp
sbb
xor
scas
cmp
dec
and
stos
cmp
push
xchg
les
or
xchg
xor
arpl
int3
clc
mov
outsl
sbb
movswl
fisubrs
addr16
out
adc
jmp
shll
lods
les
leave
int
mov
fistl
pop
cmp
xchg
jl
or
mov
jne
xchg
mov
iret
dec
mov
in
out
aaa
es
jo
lea
push
mov
pop
mov
sub
and
mov
das
lds
xor
int3
sub
push
cld
push
push
loope
js
jge
imul
les
xchg
out
mov
jmp
mov
mov
lods
sub
jmp
mov
cld
cmp
or
cmp
jo
adc
fsub
mov
or
fisttpl
loop
cld
repnz
fimuls
dec
add
mov
mov
leave
push
andb
sarb
nop
push
sub
mov
pushf
aas
ret
jecxz
sarb
and
push
or
cmp
iret
add
repz
faddl
sub
mov
mov
fiadds
mov
mov
push
cmpsl
add
mov
sub
inc
in
aam
cmp
push
xchg
adc
int3
push
mov
int3
xor
sub
mul
inc
inc
pusha
inc
aam
cld
ret
jmp
data16
or
cmp
js
fiaddl
bound
nop
out
adcl
adc
arpl
cltd
mov
and
popa
sbb
int
and
pop
add
cwtl
xor
into
adcb
fwait
sbb
popf
adc
inc
and
adc
lret
hlt
outsl
inc
movsb
aad
adc
ret
in
lcall
dec
and
in
push
cs
pop
jns
fbstp
mov
imul
loopne
adc
dec
jns
cmp
mov
test
xchg
insl
jge
xor
push
inc
push
xchg
dec
pop
pushw
cmp
jg
sub
lods
jmp
outsl
jl
cld
jmpw
lret
in
inc
pop
cmpsb
lods
add
scas
les
jo
fidivs
hlt
adc
cwtl
adc
lods
aaa
mov
push
andb
adc
addl
xchg
das
mov
pop
rcrb
push
xchg
mov
call
sub
outsl
daa
cltd
int
jae
xor
cmpsb
cmp
movsl
pop
mov
push
stos
lods
xchg
out
popa
add
cmp
clc
push
jnp
clc
dec
lods
pusha
movb
jne
jecxz
mov
in
adc
xor
jmp
push
aad
xor
xor
test
repnz
xchg
out
out
jmp
fisttps
adc
stos
xlat
dec
inc
xchg
inc
fidivrs
and
inc
inc
enter
stos
or
sub
ret
push
inc
mov
jnp
push
insl
out
lcall
sub
stos
add
mov
nop
in
repnz
pop
pusha
int
lret
imul
push
out
xchg
mov
xorl
insl
aad
sub
cmpb
ficoms
push
scas
add
mov
notl
repz
inc
inc
sub
js
jmp
sub
sbb
test
pop
jp
mov
je
cmpsb
push
inc
popa
dec
loope
push
cwtl
pop
test
mov
lcall
fimuls
in
enter
sbb
cltd
lods
and
ja
and
dec
inc
mov
lcall
inc
ficoml
loope
leave
aaa
pop
out
push
jo
lds
jg
mov
sahf
iret
fildl
push
sbb
and
sub
xchg
shlb
ret
mov
cmp
movsl
and
sub
loopne
inc
pop
push
jbe
add
dec
pop
cltd
out
push
lods
push
xor
xchg
lret
scas
xchg
lret
ds
in
adcb
mov
mov
fidivs
jae
mov
lods
insb
jo
jg
mov
dec
out
notb
clc
mov
xor
push
std
cltd
popl
jae
mov
sbbl
scas
in
in
mov
jb
adc
push
imul
push
int
daa
out
pop
cmp
xchg
or
mov
ja
ljmp
orb
movntq
jbe
das
add
jns
repz
sub
imull
popa
int
shlb
sbb
mov
jb
stos
jmp
sbb
pop
cmpsl
add
jnp
push
adc
adc
scas
xchg
mov
je
add
out
sbb
std
mov
mov
lret
and
jmp
pop
out
imul
rorl
fs
es
test
lods
das
fwait
ret
mov
js
mov
fsubs
sub
dec
xchg
in
int3
dec
shlb
lret
fs
jmp
popf
lahf
add
cmp
sub
clc
ret
out
sahf
les
inc
pop
shlb
aad
mov
mov
rcrl
inc
push
cmpsb
and
xor
fstp
in
add
jno
lcall
aad
sarb
daa
das
mov
scas
test
ljmp
out
dec
mov
sub
jne
push
or
cmp
fidivrl
pushf
mov
inc
addb
pop
mov
jns
pop
xor
push
xchg
enter
nop
push
and
push
je
lret
movsl
push
mov
leave
lods
and
jo
xchg
cs
aad
cmpsb
cmp
lcall
popf
ss
ss
push
add
add
fstpt
negb
mov
dec
pop
aas
ret
popa
ror
sbbl
pop
push
push
addr16
test
mov
push
test
pop
jge
mov
dec
iret
mov
adc
das
and
addr16
mov
test
adc
xchg
test
insb
mov
inc
or
lret
aad
rcrl
dec
imul
mov
and
push
out
xchg
sbb
shr
pushf
xchg
sbb
jp
sbb
in
sbb
clc
int
push
hlt
or
mov
or
jge
pop
mov
out
sbb
inc
sbb
jl
cmp
movsb
jae
mov
mov
lea
dec
cld
dec
jge
xchg
int3
dec
loop
lea
pop
push
js
stos
sar
sub
and
inc
and
jns
stc
aaa
incb
out
les
lods
xor
mov
fisubrs
scas
push
cltd
inc
lods
js
mull
dec
push
pop
in
cmp
sub
mov
push
inc
xchg
adc
and
mov
jp
je
push
sub
push
or
loopne
sbbl
test
jmp
out
push
mov
adc
and
insl
imul
push
adc
xchg
shlb
repz
jle
mov
push
mov
bound
movsb
jnp
dec
mov
push
cmp
push
aam
pop
xlat
out
mov
pop
xchg
enter
jo
cmp
loop
cmp
cmp
or
sub
sbb
pusha
cmp
push
or
in
ficoml
add
aad
insl
mov
aas
inc
adc
xchg
xor
and
in
mov
cmp
adc
xchg
jmp
mov
mov
jg
cmp
mov
insb
sahf
mov
sub
stc
inc
push
cld
bound
in
repnz
inc
aas
xchg
into
sbb
dec
fs
psrlq
subl
hlt
dec
dec
mov
push
lcall
ja
adc
syscall
or
popa
fchs
enter
imul
sbb
and
or
mov
jb
scas
shrl
mov
in
mov
xchg
mov
fstl
cmp
and
imul
call
rorb
push
out
ja
js
dec
out
jl
xchg
sub
xchg
sub
int
inc
int
fnsave
addr16
inc
pop
jge
scas
leavew
inc
pop
loope
aam
cmp
push
and
mov
or
and
add
mov
jb
inc
sub
sub
xchg
scas
fbld
jne
aaa
mov
pop
daa
jecxz
shlb
arpl
dec
mov
out
jmp
xchg
lods
mov
push
stos
je
fnsave
lcall
sbb
aas
mov
jle
dec
fs
push
cmp
or
xchg
or
dec
aaa
jbe
jp
pushf
mov
leave
ficoms
mov
xorb
aam
inc
and
fdiv
out
cmp
cmp
in
jnp
in
xchg
and
push
outsl
pushf
mov
idivl
imulb
pop
add
xchg
mov
push
mov
or
and
ret
mov
mov
cmc
push
ljmp
pop
cmc
xchg
mov
sub
mov
pop
sub
mov
mov
sub
push
lret
testl
arpl
xchg
mov
push
jg
repz
sbb
and
fdivrl
jno
push
je
ret
push
sub
js
inc
out
scas
push
cmc
pop
mov
sub
cmp
jmp
out
test
int3
sub
or
inc
fstl
jno
mov
dec
sub
ja
jns
sub
jne
mov
inc
mov
add
dec
es
sub
in
push
cld
pop
push
add
push
fs
mov
sbb
scas
aam
xor
es
pop
aam
ja
jne
and
and
sbbl
push
mov
xor
push
and
movsb
icebp
movsl
mov
out
insb
test
sahf
or
mov
jno
frstor
jo
loopne
lea
je
push
xor
movzbl
mov
in
push
dec
arpl
xchg
dec
ret
pop
insb
mov
fbstp
scas
xor
fnstsw
pop
pop
sbb
push
js
cmpsb
mov
nop
arpl
sub
lea
mov
fsubl
inc
or
jb
das
ficoms
mov
ljmp
stos
adc
pop
jns
pop
or
shll
pop
pop
and
sbb
aam
cmp
jne
jns
mov
into
jnp
push
push
mov
sub
sbb
mov
jne
push
out
or
test
add
popf
or
push
mov
xchg
xchg
dec
push
sbb
outsb
repz
stc
stos
out
cmp
mov
imul
jge
mov
mov
and
cmp
insl
in
xlat
jb
cmpsl
daa
ljmp
dec
xchg
imul
pusha
call
or
repnz
mov
mov
ret
push
sbb
ljmp
arpl
ret
mov
movsb
aam
xor
or
dec
jnp
imul
xchg
andl
mov
or
iret
negb
mov
pop
fnstenv
popf
jno
or
dec
xchg
pop
into
inc
divl
pop
push
ret
and
or
mov
xchg
jae
imul
incb
mov
idiv
lret
and
cmp
movsb
pop
dec
stos
xor
imul
imul
cltd
sub
xchg
xchg
xor
cmp
mov
xchg
aaa
adc
bound
repz
or
adc
mov
jmp
jge
inc
test
add
cmpsl
xchg
dec
or
cmp
rol
dec
mov
xchg
jns
outsl
push
mov
rcrl
inc
xchg
mov
rcrb
addr16
addr16
adcl
aas
sahf
outsl
xchg
dec
dec
movl
push
mov
dec
add
jne
mov
test
movhps
adcb
arpl
mov
je
jae
lcall
pop
jno
mov
into
ljmp
lods
xchg
imul
cmp
cmp
sarl
ficoms
cmp
testl
jp
insb
repz
lahf
mov
add
push
mov
fidivrs
push
adc
pusha
xchg
out
int
hlt
jb
mov
adc
cs
and
and
inc
dec
out
bound
push
or
fbld
adcb
or
jmp
and
and
inc
bound
and
mov
cwtl
pusha
jmp
xor
rcll
mov
cs
adc
or
repnz
mov
shll
adcb
adc
fcomp
into
enter
cmp
lods
push
jl
dec
rcrb
dec
mov
cli
inc
xor
dec
inc
xchg
jae
jge
shr
ret
push
inc
mov
dec
inc
adc
inc
cmpsl
insb
incl
add
sub
gs
mov
fnstsw
pop
inc
cld
lds
add
pop
xchg
add
lods
mov
and
jl
dec
sahf
pop
into
out
inc
xchg
sub
imul
fildl
gs
jecxz
ja
xorl
and
add
popf
xor
repz
mov
mov
jo
jb
ds
notl
pop
and
gs
repnz
iret
jbe
push
jle
cmp
xchg
inc
stos
mov
mov
loope,pt
mov
fwait
ds
and
sub
xchg
add
clc
pop
arpl
test
jae
mov
adc
adc
pusha
push
jp
sti
adc
adc
stos
mov
insb
and
pop
mov
push
stc
adc
or
jmp
xchg
scas
jge
lret
imul
cmpsl
ds
jns
dec
stos
ds
scas
xor
adc
cmpsb
pop
orl
aad
dec
scas
dec
loop
dec
fdivrs
scas
sub
push
bound
repnz
pushf
mov
mov
je
stos
gs
cmpsl
sub
add
je
std
cmp
or
andl
mov
xor
cwtl
daa
jle
inc
fcoml
sub
in
es
loope
aaa
add
movb
sti
push
sub
inc
stc
stos
clc
and
dec
sbb
int
mov
mov
dec
pop
ret
sti
xchg
mov
push
sub
mov
loope
mov
push
jmp
repz
pop
xor
dec
mov
outsb
insl
jb
cvtps2pi
sarl
les
and
aad
dec
insl
loopne
stc
pop
movntq
out
jnp
xlat
mov
lds
adc
pop
dec
imul
lods
jp
mov
cmp
pop
push
test
hlt
mov
add
stos
pop
cmc
and
inc
cld
push
lahf
stos
inc
sbb
pop
adc
repz
mov
repnz
xchg
cmp
test
dec
call
dec
and
mov
xor
push
xor
mov
inc
lea
sbb
jecxz
adc
clc
inc
outsb
dec
loop
gs
or
or
push
stos
cli
adc
jl
mov
aam
xchg
cmp
loope
aaa
clc
xor
ja
std
push
push
dec
cmp
add
xor
ret
fwait
sahf
inc
sbb
shrl
ljmp
sar
push
lods
adc
fists
xor
dec
pop
add
push
sbb
mov
or
add
aas
adc
sub
pop
lret
aaa
lret
adc
clc
mov
mov
xchg
mov
jne
xor
mov
into
lret
lock
jnp
jl
lods
sbbb
xchg
negl
adc
std
xor
outsl
sub
out
sti
xchg
xchg
les
mov
shll
jno
or
xor
adc
outsl
int3
sub
js
cli
rcrb
add
pop
das
arpl
mov
xchg
loop
push
flds
cltd
ret
imul
and
inc
mov
ja
fists
xchg
leave
adc
cmp
mov
int3
jo
xor
mov
mov
dec
cli
xchg
jnp
fnsave
popa
mov
paddsb
sbb
scas
mov
mov
cli
add
orl
cli
and
dec
loope
xor
mov
dec
jge
push
push
bound
inc
inc
push
lock
xor
lods
xchg
cld
or
in
into
cmc
mov
cbtw
gs
and
insb
pop
cltd
and
clc
jns
or
mov
jne
nop
mov
pop
pusha
jl
es
pusha
outsb
inc
push
popf
test
ss
push
aad
lods
push
cmp
pop
insl
xchg
repz
iret
and
cli
js
mov
fisttpl
aam
or
movsl
in
mov
imul
jb
fldcw
sbb
mov
xchg
jmp
and
icebp
push
ret
lcall
dec
push
push
xor
imul
mov
int3
xchg
cltd
fs
mov
rorb
or
mov
push
xchg
mov
and
lock
aas
lock
ja
xor
movsl
push
fstps
mov
test
mov
push
mov
rolb
add
inc
repz
jg
pop
repz
push
call
add
outsl
push
xchg
lea
jne
popa
sub
fwait
inc
dec
jge
add
mov
js
fnstcw
mov
cmpps
pop
mov
arpl
inc
sub
push
mov
jge
dec
mov
xor
mov
lds
xor
push
mov
adc
push
in
xchg
and
jb
mov
sub
jle
je
push
int
sub
daa
jno
push
xor
test
cmc
lds
jp
call
jns
lret
push
add
aam
pop
or
push
pop
cmc
or
stos
cmp
imul
mov
mul
cmp
sbbl
push
and
mov
shlb
imul
or
fisubrl
fistps
movsb
add
xor
xor
clc
outsb
push
pop
pop
imul
out
fstps
xchg
jecxz
out
test
stc
or
pop
dec
adc
add
mov
jge
add
pusha
sbbb
hlt
cmp
inc
xlat
repz
leave
rorb
pop
mov
fcmovnbe
sahf
mov
and
js
rorl
xor
or
push
mov
sar
push
mov
leave
mov
loopne
fs
xor
jmp
xchg
sbb
mov
pop
cmp
mov
xor
mov
pop
sub
sbb
into
in
insb
xchg
sub
out
gs
sbb
cmpsb
mov
jg
ficoms
popa
jl
stc
pop
sahf
xchg
mov
mov
add
jmp
xorl
sbb
mov
ljmp
push
ljmp
adc
roll
adc
cmpsb
in
cmp
iret
add
or
and
fwait
push
test
mov
test
sahf
dec
add
pop
or
pop
mov
fistps
aam
setne
gs
inc
loope
xor
add
std
mov
jbe
inc
les
mov
js
jb
mov
mov
or
subb
iret
jmp
int
mov
cld
lds
das
jge
xlat
lods
cmc
mov
jle
ljmp
test
pop
jnp
cltd
test
inc
mov
inc
push
sbb
sti
pop
adc
mov
stc
jae
push
js
sub
push
xchg
lahf
cli
aam
sub
adc
or
cmpsl
dec
fs
loopne
push
pop
daa
lret
or
int3
push
andl
cmp
repnz
push
lock
mov
cmp
cs
sub
pop
jne
jge
fucomip
mov
mov
int
inc
hlt
cmpb
aaa
sbb
mov
adc
xor
push
das
ds
es
or
dec
pusha
or
cmp
rorl
jo
outsl
fwait
test
adc
nop
inc
sbb
in
std
push
xor
jmp
xorl
cmc
and
inc
int3
push
inc
test
jae
pop
repnz
js
ret
mov
mov
cmp
push
lret
and
inc
in
mov
cltd
inc
pop
adc
or
dec
pushl
push
jbe
ret
andb
mov
jb
in
ja
jae
jmp
cli
stos
mov
jns
sbb
imul
cmpsb
inc
dec
sbb
xor
xchg
enter
std
sub
aas
adc
addr16
pushf
xor
jo
mov
scas
lea
dec
aad
jp
pop
jo
pusha
xor
enter
stos
lea
adc
xchg
icebp
mov
fisttpl
fwait
fs
mov
add
inc
xor
imul
mov
fistpll
push
lods
sub
frstor
dec
pop
movsl
cvttps2pi
inc
mov
push
shll
sub
leave
fnstcw
inc
adc
outsl
loop
cmp
lcall
cmc
je
popa
push
ret
iret
test
pop
fidivs
or
mov
loopne
sbb
mov
sbb
imul
push
sar
add
int
push
mov
cmp
push
fs
fidivrs
aad
in
lods
aad
pop
outsb
cli
cwtl
or
add
inc
and
dec
and
hlt
ljmp
clc
mov
cmp
jb
int
fnstenv
pop
push
pushf
call
scas
pop
jae
mov
mov
mov
adc
jge
ficoml
mov
inc
inc
imul
pop
xlat
into
push
push
andl
and
push
pop
loop
inc
std
loope
mov
sub
ja
testb
jge
jne
inc
xchg
loope
stos
in
jl
mov
pop
imulb
sub
cmp
inc
aam
popf
pop
push
dec
ficompl
fsubl
inc
fdivrs
mov
mov
into
imul
xor
jae
xchg
sub
cltd
imul
movsl
push
pop
outsb
mov
out
mov
push
je
dec
loopne
dec
push
scas
pop
stos
js
adc
push
in
in
repnz
rcll
fstpl
mov
mov
mov
xor
cs
sbb
mov
mov
andl
sbb
push
js
jnp
cmp
inc
ret
ljmp
repz
sbb
xchg
stos
inc
cmp
push
sti
loope
enter
cmpsl
push
rorb
jle
xchg
je
xchg
dec
cmp
or
sahf
daa
movsb
xchg
and
shrl
imul
test
mov
inc
push
es
sub
jmp
cmp
testb
sbb
cmpl
mov
in
jecxz
test
mov
bound
lds
cli
pop
ds
fdivl
push
jne
sbb
add
jg
push
pop
test
int
mull
push
movsl
mov
mov
and
insl
push
sbb
adc
sarb
pop
negb
test
pop
aad
ja
sti
pop
add
das
stc
sub
das
pop
and
cltd
loopne
int
ret
pop
and
xlat
xchg
xchg
nop
daa
lds
clc
test
adc
pusha
xchg
sub
or
push
sub
push
push
mov
sbb
xchg
or
lea
mov
sbb
cmc
mov
int
push
pushf
mov
cmp
mov
std
or
dec
cmp
dec
dec
mov
cmp
xchg
sub
adcl
xlat
loope
xor
fidivrl
subb
arpl
jg
mov
movsb
push
and
inc
out
inc
stos
pusha
or
jae
int
xor
xor
lahf
std
data16
push
daa
outsl
adc
repz
cmc
out
push
and
add
mov
stos
mov
pop
test
mov
and
ror
je
sti
hlt
cmpsl
cld
loopne
rcrl
cmp
adcb
leave
ds
in
dec
pop
lock
pop
push
adc
lods
mov
stos
or
jl
sbb
add
xor
mov
push
inc
aas
jae
inc
push
pop
pop
movsl
push
push
repnz
stc
scas
out
xor
lahf
es
push
sbb
cltd
popf
js
fsubrs
lcall
ss
mov
sbb
add
and
cmpsb
adc
fstpl
sbb
mov
lcall
and
es
rolb
lods
mov
repz
shlb
and
push
inc
sahf
js
call
mov
push
add
xor
lea
mov
incb
clc
push
scas
jnp
dec
adc
pushf
xor
mov
xchg
push
out
push
mov
andl
clc
fildl
ljmp
rolb
add
nop
pop
test
test
out
and
push
cmp
fildll
popa
xchg
mov
jno
inc
cmp
jb
adc
aas
push
inc
call
and
sbb
sub
das
shll
ss
jo
push
push
xor
xchg
lcall
xor
xchg
aam
cs
lahf
rolb
push
jns
adc
scas
mov
jg
xlat
jmp
mov
aad
sbb
add
mov
mov
pushf
in
stos
stos
jbe
sbb
add
call
cmp
imul
fstpt
add
mov
fs
fs
test
mov
icebp
adc
jg
aas
sbb
sub
cmp
lds
in
test
mov
adc
inc
mov
repz
test
inc
lods
and
push
push
xchg
inc
pop
cmp
push
dec
xchg
pop
dec
inc
scas
dec
mov
dec
push
mov
clc
mov
fdivl
lret
nop
in
dec
jge
jge
das
outsb
test
add
push
mul
jnp
hlt
xor
add
out
clc
jae
lea
cmp
fdivp
cmpsb
pop
jmp
pop
int3
mov
xor
icebp
lret
fsubs
andb
das
idivb
jle
aas
mov
in
xchg
pop
jae
cld
jg
test
push
mov
jp
iret
aad
movsl
and
mov
inc
movsb
lock
adc
mov
cmp
arpl
sbb
xchg
test
ss
xchg
cmp
xchg
add
sub
mov
push
or
cmpsb
cmp
and
cmp
jb
sub
and
jg
negl
addr16
adc
mov
lds
scas
fwait
scas
xlat
push
sub
add
add
mov
stos
jge
fdivrl
jecxz
mov
arpl
into
iret
fbstp
decb
mov
sbb
daa
mov
jmp
sbb
clc
xchg
sub
dec
call
cmp
ror
pusha
xlat
repz
inc
fsubr
inc
cmpsb
cmp
cli
adc
xchg
addr16
ja
adc
fistpl
push
sbb
push
mov
sub
sbb
xor
mov
int3
fs
sub
fnstsw
sbb
test
sti
or
dec
mov
cmp
add
shll
sbb
mov
cmp
negl
mov
test
sti
sub
popf
insb
push
sub
adc
jmp
pop
jnp
test
fs
imul
jp
icebp
stos
cmpsb
out
push
sub
js
daa
add
mov
cmp
aaa
into
stc
mov
lods
fnsave
insb
push
cwtl
xchg
nop
xlat
jmp
in
inc
in
fidivl
out
inc
les
into
ds
jnp
mov
pop
in
stos
push
sahf
pop
ja
mov
jno
imul
add
pop
xor
lods
sub
fadd
imul
outsl
daa
icebp
pop
xlat
ret
push
fidivl
jecxz
dec
out
mov
hlt
mov
popl
popf
std
adc
and
out
mov
sbb
idivb
je
push
jns
daa
inc
in
dec
ret
push
fwait
mov
ja
xchg
movsl
cld
inc
lret
addr16
cld
lock
xchg
add
mov
gs
sbb
outsl
push
dec
mov
mov
mov
fldl
sub
xchg
data16
insl
insb
jecxz
sub
mov
fwait
cmpsl
cmp
push
or
mov
mov
jmp
das
sub
sub
mov
sbb
sarl
push
test
and
mov
pushl
mov
jbe
mov
adc
fs
mov
bound
das
addr16
fnstsw
repz
inc
push
in
add
in
clc
xor
jno
xor
movsb
imul
outsl
arpl
or
test
lods
outsb
pop
ror
mov
addl
pop
mov
aam
add
inc
mov
lahf
xor
or
cltd
jo
xchg
cli
in
xor
test
push
cmc
xchg
insl
shll
mov
add
ficoml
sahf
push
sub
in
movb
repz
inc
adc
push
jge
mov
sbb
add
sahf
scas
xchg
rcrb
and
sahf
push
stos
and
mov
add
cmpsb
loopne
rcrl
jnp
mov
mov
stos
shlb
in
out
subl
stos
das
outsl
sub
inc
dec
shll
popa
and
lds
lahf
aas
stos
dec
leave
stos
pop
sbb
mov
lock
xchg
jnp
adc
mov
cmp
push
daa
dec
pop
xchg
in
fcom
inc
pushf
fstps
jb
dec
push
and
cwtl
out
pop
movsl
data16
leave
das
sub
xor
mov
or
jnp
jp
xchg
fcoml
jno
or
and
dec
es
fcomip
mov
jl
jecxz
mov
mov
mov
fs
inc
fs
push
xor
mov
cltd
push
jg
jecxz
aaa
call
add
sbb
mov
je
xlat
lods
and
adc
cwtl
lods
lret
xchg
push
jo
pop
mov
xchg
add
inc
lea
imul
les
dec
mov
fists
cwtl
push
mov
xchg
fs
mov
and
mov
push
mov
es
sbb
daa
inc
mov
je
mov
les
dec
xchg
sti
pop
test
xchg
and
jns
sbbb
xor
or
cmp
aad
jb
fwait
sub
pusha
aas
daa
insb
fidivrl
and
imul
fldcw
into
shlb
add
mov
shr
push
lods
xor
repz
and
add
sub
mov
stc
insl
leave
fstps
outsl
and
mov
jnp
nop
arpl
daa
cld
mov
push
jg
dec
and
pop
push
out
out
std
cmpsb
les
mov
xchg
sti
cmpsl
faddl
faddp
popa
lret
mov
add
push
push
mov
jle
lds
clc
and
xlat
and
add
sub
insb
mov
push
fstpt
and
xchg
and
cmp
dec
aam
jmp
sub
jmp
xor
sahf
lea
lods
icebp
pop
clc
out
scas
aad
xchg
and
dec
xchg
test
out
mov
and
in
jae
jno
xchg
stos
and
pop
fwait
inc
push
inc
xor
cmpsb
addb
pop
cwtl
fiadds
jge
std
mov
mov
cmc
nop
daa
es
inc
pop
inc
insb
pop
hlt
rcll
add
sbb
jae
cmp
sbb
sbb
inc
sbb
cmp
js
mov
outsb
icebp
shlb
inc
fidivl
fcoms
fnstenv
add
pop
sahf
add
and
xor
adc
in
loopne
cmp
sahf
int3
loopne
mov
xlat
loop
sbb
test
test
ja
pop
add
push
scas
and
fidivs
lea
and
popf
add
iret
fcomip
lods
ret
arpl
inc
push
cmp
int
cli
jle
icebp
xchg
inc
push
test
mov
das
enter
dec
cmp
sbb
mov
sub
test
inc
sbb
std
fcos
lretw
call
insb
xor
lock
xor
jne
push
fsubrs
inc
cltd
je
andl
loope
pop
stos
fimull
cmpsl
lds
mov
lcall
and
ret
jmp
js
push
and
rcl
or
testl
push
dec
movsl
out
sub
jae
pop
icebp
jne
inc
loope
xchg
js
add
in
divl
adc
in
inc
inc
push
enter
dec
data16
leave
and
xor
dec
movsb
aaa
mov
sub
mov
cmp
outsb
idivb
in
shl
xchg
sub
ds
inc
sti
test
sub
push
stos
pop
daa
jge
inc
jne
cmp
or
es
pop
pop
or
pop
jmp
cmp
push
dec
jle
loopne
fstps
jl
shll
in
adcb
jno
inc
jecxz
jo
das
inc
shrb
mov
jno
cltd
popa
mov
cwtl
test
lds
xorl
lcall
shll
xchg
aas
add
lods
xlat
xchg
decb
in
push
in
je
xor
lret
or
cs
addl
xchg
sub
pop
repnz
clc
or
les
out
arpl
push
sub
dec
stos
xchg
mov
ret
pop
int3
inc
mov
into
gs
jb
jge
mov
adc
sub
mov
cmc
mov
adcb
lcall
cmp
cmpsl
out
in
repz
cli
inc
addl
in
fldl
adc
stc
out
sub
mov
push
mov
ljmp
das
sbb
jmp
add
outsl
out
leave
pop
mov
push
mov
push
jg
nop
push
andl
or
mov
pop
xchg
repnz
jo
movsb
daa
out
jmp
push
jmp
adc
adc
insb
push
sub
repnz
int
adc
mov
inc
adc
inc
gs
jb
imul
loopne
popf
hlt
xchg
and
push
nop
fdivrs
lds
mov
inc
rorb
cwtl
mov
sti
mov
mov
adc
push
push
pop
and
xor
ss
mov
push
daa
mov
stc
mov
fmul
push
test
or
push
test
cwtl
xor
outsl
jnp
xor
sbbl
xchg
jge
ds
shlb
ljmp
or
lods
jg
push
out
and
mov
fidivrl
loop
int
push
xchg
xchg
jo
cltd
leave
lock
add
jmp
dec
sub
dec
scas
jnp
mov
pusha
xchg
out
sub
adc
cmp
push
or
and
call
xor
mov
jmp
sub
xchg
ds
cld
fbstp
scas
pusha
pop
add
push
mov
scas
cmpsl
imul
outsl
jl
outsl
pop
pop
cmp
or
lock
lods
ljmp
jmp
jne
mov
add
pop
jmp
cmp
lds
or
es
push
mov
mov
pushl
pop
arpl
mov
stc
pop
insl
fs
xchg
scas
mov
mov
cmp
sub
test
mov
loop
dec
xlat
and
jo
sahf
sub
pop
ret
sbb
jl
ficomps
pop
cmp
icebp
test
and
notl
or
cmp
jl
cli
mov
cltd
outsb
inc
mov
lock
test
lahf
push
mov
mov
int3
out
jbe
push
xchg
mov
mov
int
filds
lea
pusha
ja
xchg
sbbb
push
dec
ljmp
mov
cmp
or
rorl
icebp
mov
push
loopne
xlat
icebp
jno
mov
push
scas
test
pop
lods
mov
mov
ret
in
std
xchg
cmc
inc
dec
fdiv
call
mov
pop
mov
out
xchg
ret
push
jns
rcrb
pop
insl
xor
out
dec
cmp
dec
cmp
mov
je
push
or
xchg
cmp
lcall
jle
push
and
jnp
in
and
cld
inc
cmpsl
cwtl
imul
jl
jne
cmp
jle
adc
mov
ret
mov
sbb
enter
popa
mov
xchg
xchg
adc
call
stos
dec
add
sub
pushf
pop
out
mov
mov
rcr
mov
push
pop
nop
mov
xlat
push
jle
insb
dec
cltd
sbb
je
mov
xor
les
notb
pop
xor
mov
cmp
cmpsl
pusha
xchg
mov
sbb
mov
xor
xchg
jbe
popf
jmp
mov
loopne
scas
push
icebp
adc
jae
ljmp
or
lret
mov
jle
or
fisubrl
jbe
or
mov
cmpsb
shlb
add
xchg
ds
stos
ljmp
or
pop
test
lea
loopne
push
mov
cmp
outsb
stc
xorb
js
sub
aas
sub
jp
inc
neg
insl
mov
scas
call
and
cmp
dec
lret
jne
push
inc
push
imul
jo
sub
xchg
jp
sbbl
xchg
stos
push
fstps
sub
bound
ret
loop
ljmp
sub
loopne
cmp
insb
pop
cli
mov
mov
mov
pop
push
pop
xor
enter
cmc
js
daa
mov
dec
arpl
add
out
ret
decl
push
andl
sti
xchg
arpl
test
push
and
jp
into
cli
pushf
popa
or
fidivrs
ret
hlt
pop
in
scas
flds
fiadds
fdivp
mov
out
mov
stos
add
add
cwtl
shrl
data16
fstpt
add
xlat
dec
mov
movsl
in
jae
std
jge
mov
xor
repz
sti
lods
clc
shl
es
mov
push
popa
adc
lret
push
mov
add
xchg
repnz
fwait
imul
dec
popa
cmpsl
dec
ja
sahf
test
insb
popl
lds
rorb
fstp
fildl
sarl
jg
in
lea
or
dec
lds
cmpsl
addr16
mov
insl
add
enter
das
mov
dec
cmpsl
and
xor
subb
lahf
rcrb
mov
rcll
push
clc
jg
and
data16
inc
call
repz
adc
rorl
std
push
cltd
int3
cmpl
sbb
lcall
iret
movsl
outsb
in
push
xchg
add
mov
sbbl
xchg
outsb
sarb
adc
xlat
sti
inc
xchg
add
sbb
adc
movsb
subl
gs
imul
mov
pop
mov
aaa
sub
sbb
cmp
inc
xor
bnd
outsl
mov
or
das
mov
mov
inc
jb
mov
test
imul
mov
xor
idivb
fldenv
hlt
jl
jb
out
dec
adc
jp
pop
lcall
outsb
stos
out
cmc
pop
shr
addb
jge
ret
sbb
jg
or
add
or
pop
or
pop
xchg
mov
inc
inc
mov
loop
xor
mov
sub
frstor
pop
mov
lods
ja
mov
mov
in
jge
cli
test
sbb
out
and
xchg
aaa
dec
or
dec
jns
incl
xchg
xor
or
in
pusha
push
js
fadd
es
push
or
mov
loope
jbe
fs
mov
in
mov
aaa
pop
sub
scas
jle
daa
daa
sbb
cli
push
xchg
sub
dec
mov
mov
js
xchg
mov
inc
in
popf
out
das
or
les
push
jp
dec
xchg
fdivs
fsubl
stos
movsb
test
jl
test
pop
sub
fxtract
sub
xchg
cld
out
fwait
adc
cmp
ficomps
mov
es
popf
cmpb
insl
cld
out
adc
lret
jb
dec
fistpll
cmpsl
cld
lds
leave
out
lds
sbb
xchg
inc
sahf
push
sbb
loopne
add
pop
adcl
sbb
es
pop
xchg
push
mov
les
lahf
negb
dec
xchg
es
and
inc
jge,pt
dec
arpl
fld
xchg
pop
mov
in
pop
fwait
pop
or
adc
cmp
stos
aas
pop
jno
pop
xchg
rclb
pop
jb
aad
test
push
adc
test
mov
sbb
add
jecxz
and
xchg
stos
in
sbb
insl
clc
pop
jns
cmovp
outsl
xchg
mov
addb
mov
out
fidivs
lret
adc
push
mov
out
outsl
in
xchg
aaa
sub
fstpl
add
iret
repz
icebp
jns
arpl
out
adc
mov
nop
inc
mov
lock
mov
xor
scas
sub
xor
push
aas
and
cli
mov
jg
fwait
movsb
testb
dec
pop
xor
pop
sbb
adc
xchg
add
jb
mov
xor
mov
cmp
mov
testb
repnz
ja
fwait
rol
dec
pop
mov
pop
and
cmpsl
outsl
js
fldt
sbbl
jle
sbb
les
pop
dec
dec
fsub
shll
pop
icebp
adc
arpl
sbb
cmp
pop
jbe
sub
fstpl
inc
jle
ret
mov
mov
shll
sub
sti
jae
fcmovbe
xor
testl
mov
div
lahf
insb
pop
push
xchg
ficoms
shl
push
push
sub
cltd
mov
inc
jmp
push
pop
les
inc
sub
jg
into
enter
add
push
enter
in
ret
pop
xchg
imul
mov
xor
hlt
xchg
xor
sbb
test
fidivs
dec
add
mov
push
dec
ret
shl
dec
repnz
nop
mov
subb
repz
loope
push
aad
lds
inc
fildl
sub
jmp
shll
inc
fdivl
mov
out
and
ss
in
outsl
push
loopne
sbbb
inc
test
shll
fcomi
sub
leave
and
test
pop
je
add
sub
jnp
jb
or
das
xchg
dec
dec
jno
imull
pop
repz
mov
mov
or
scas
cmp
popa
stos
pop
movsb
jno
sbb
or
push
jl
pop
sbb
aas
inc
dec
push
jp
in
out
mov
adc
and
push
dec
push
add
in
inc
cltd
adc
xor
lret
mov
mov
fstps
mov
movsb
and
xor
inc
mov
ljmp
insb
cmpsl
sbb
pop
lea
mov
movsb
dec
push
in
push
dec
je
fwait
pop
cld
loope
mov
cs
lahf
cmp
pop
push
pop
insb
stc
adc
mov
or
adcl
cmpsl
insl
fistpll
cmp
mov
fstpt
sbb
data16
mov
ret
aam
sbb
arpl
xchg
jns
pop
mov
fwait
cmp
ret
push
mov
popf
fcomi
xor
fdivp
cmp
daa
xchg
pop
adc
xchg
mov
mov
mov
sub
lret
pop
xor
bound
into
push
jge
jecxz
std
pop
xor
push
mov
bound
bnd
adc
push
aaa
xchg
jge
dec
imul
scas
mov
or
mov
stc
imul
push
cmc
les
into
popa
imul
call
dec
les
cmp
and
inc
inc
cmp
test
lods
mov
sbb
out
jae
fwait
and
adc
das
inc
lret
sti
lret
cmp
jns
dec
push
mov
push
jp
mov
xchg
xorl
mov
shlb
pop
loope
fcmovu
lock
out
push
mov
sar
sahf
pop
inc
clc
popl
sub
push
rclb
pop
and
int
loop
fidivs
dec
loop
clc
stc
xorl
sbb
mov
cmpsl
test
js
int3
outsl
rcl
add
fdivrs
push
push
repnz
sbb
mov
sub
pop
cmc
adc
mov
mov
push
je
xchg
push
addb
mov
iret
xor
sbb
add
xchg
repz
outsl
sbb
in
js
pop
jg
push
pop
push
cmp
jl
fbld
cs
in
push
cli
pusha
mov
mov
fadd
les
icebp
insb
mov
inc
cli
stc
pop
ljmp
add
push
xchg
ljmp
xor
outsl
cs
div
aas
mov
ret
xchg
aas
ret
in
idiv
jae
add
cli
mov
call
hlt
xor
and
inc
movsl
cltd
shll
xchg
or
or
fs
sub
in
xor
gs
inc
out
adc
add
repz
xor
daa
clc
cmp
cmc
push
xchg
out
les
icebp
or
stos
mov
es
jae
and
sub
dec
jnp
sti
adc
cmpsb
xchg
jo
push
adc
or
push
and
and
cmp
std
lret
push
pop
jg
sub
hlt
cld
inc
push
xorb
mov
inc
mov
add
push
xor
dec
push
in
orb
push
lret
xor
jge
mov
jge
inc
sub
mov
mov
ds
cs
rol
mov
pop
and
ja
scas
xorl
sub
jg
les
incb
mov
lcall
or
and
stos
iret
stc
push
repnz
jb
popf
adc
jmp
mov
mov
pop
outsb
cmp
cmp
adc
mov
in
stos
scas
inc
ficoml
fstpt
xor
mov
lcall
push
xchg
mov
lea
dec
jmp
fnsave
jg
cltd
xor
andl
fnsave
cmc
mov
test
std
cltd
stos
cmc
xchg
in
add
push
out
and
decl
ja
daa
dec
out
cmpsb
mov
pop
imulb
aad
das
pop
insb
cmpsb
sbb
fldcw
inc
ss
inc
loopne
sub
repz
pop
repz
mov
jmp
push
pop
xchg
or
push
cmp
adc
jl
adc
dec
imul
add
push
movsl
sub
inc
pop
or
push
loopne
test
mov
stc
adc
jp
adc
jp
stos
nop
iret
sbb
inc
pop
add
mov
inc
mov
pop
sbb
dec
data16
jnp
rcrb
inc
xlat
mov
jl
jmp
in
sti
nop
insl
jnp
xlat
mov
mov
movsb
and
rclb
popf
jo
cwtl
imull
jg
lods
xchg
roll
insb
fadds
or
jle
mov
andl
cmp
dec
dec
shrl
inc
push
jl
dec
sub
mov
outsb
sbb
ja
pop
add
push
xchg
cmpsl
test
inc
jp
jecxz
sub
pop
icebp
adc
mov
out
sub
push
xchg
and
jbe
sub
aaa
inc
mov
sub
bound
aaa
je
dec
and
or
dec
lds
lods
xchg
xor
in
xchg
pop
cld
push
jns
aad
xchg
jle
cmp
mov
int
ret
lods
inc
hlt
psrlw
repnz
pushf
cli
xchg
insl
data16
mov
jle
mov
cmp
jns
pop
fsubl
push
mov
nop
fistpl
test
js
cli
aaa
dec
sub
sti
mov
cltd
cmp
out
out
mov
cltd
paddusb
lcall
and
mov
push
xchg
dec
sbb
out
imul
xchg
push
fdivp
jbe
cmp
pushf
xchg
add
andl
jno
xor
in
push
dec
into
or
mov
rolb
insl
stc
test
repz
add
into
imul
add
sub
enter
xchg
adc
data16
mov
in
fwait
sbb
add
add
cmp
pop
pop
movsb
push
add
mov
adc
push
ljmp
xor
pop
xor
dec
cli
pushf
in
push
mov
stos
adc
add
outsl
cmc
sahf
adcb
pop
out
cmpl
or
jmp
or
jae
xchg
in
push
mov
aad
lret
push
sub
iret
imul
jb
into
mov
jnp
add
in
pushf
mov
out
jmp
ss
inc
stos
inc
cmp
out
repnz
mov
clc
insl
sbb
dec
cmp
push
cmpsb
stc
aaa
dec
sub
mov
shll
lods
mov
cmp
sub
es
fcompl
or
xchg
sahf
push
in
ret
ficoms
lret
popa
xor
cmpb
outsb
sub
mul
nop
fcompl
pop
mov
inc
jnp
loope
mov
out
aas
fbstp
jle
lret
int3
xor
lret
lcall
ja
mov
xor
sti
stos
stos
fs
in
mov
xlat
add
les
cmp
mov
jg
jge
popa
shll
fwait
inc
push
xchg
gs
iret
xor
or
cmp
test
in
std
unpcklps
fidivrl
pushf
add
cmpl
popl
sub
xor
sub
jmp
sub
sub
mov
pop
in
sarl
push
js
shr
mov
ret
leave
shll
and
add
mov
pop
cli
sbb
cmp
pusha
dec
js
test
repz
add
push
imulb
into
jge
xchg
outsb
adc
xchg
mov
sbb
or
sub
mov
mov
push
rol
jne
outsl
jbe
pushf
pusha
jge
mov
lret
push
cmp
sbb
pop
mov
jno
ror
ret
add
imul
sub
mov
ret
andb
or
scas
lods
nop
xor
clc
jecxz
out
adc
add
pop
push
mov
pop
in
mov
mov
mov
insl
adc
xchg
xor
sbb
push
push
push
aas
cmp
addr16
dec
pop
idivb
cli
mov
add
ret
mov
cmpsb
mov
mov
jb
les
inc
pushf
ja
cmpsb
jae
lods
movsb
ja
cli
enter
loop
mov
push
dec
inc
pop
xchg
inc
lcall
mov
sbbl
in
fs
pop
mov
add
cs
loop
fiadds
adc
xchg
sbbb
dec
adcb
repnz
pushf
sub
cmp
or
or
ds
or
orb
mov
into
lods
inc
add
fwait
test
push
dec
clc
push
fstl
jmp
inc
adc
fstpt
fwait
stos
cld
xlat
jmp
cld
dec
fisubrs
sub
ret
out
pop
test
imul
and
adc
mov
push
sti
and
jp
or
loop
shrl
sbb
jecxz
insl
clc
mov
lcall
and
jbe
push
cmp
fdiv
lods
cmp
jp
jnp
ljmp
inc
out
and
inc
call
dec
mov
out
jbe
inc
push
cltd
jge
out
mov
das
ret
outsl
lcall
push
inc
mov
rcl
in
add
arpl
jne
xor
xchg
dec
fnsave
xchg
stos
out
jae
imul
shl
in
sbb
xchg
fsubs
or
add
cmpsl
test
add
push
rclb
fdivrl
cmp
addr16
mov
sub
lock
sub
pop
add
add
es
lret
jb
pusha
or
test
test
lahf
mov
cmc
movsb
add
and
rcr
xchg
shl
and
cmp
aam
js
into
xchg
xor
iret
jecxz
imul
aam
test
push
mov
bnd
xor
lcall
test
hlt
lret
sub
or
add
mov
xor
sbb
sub
cld
mov
lcall
cli
jno
loope
sub
push
add
jge
cs
add
scas
in
jo
jmp
xchg
movsl
imul
pop
test
js
adc
or
jmp
rol
cmp
mov
lods
jecxz
arpl
repnz
mov
sub
rclb
icebp
inc
jns
in
ret
ds
pop
adc
sbbl
add
shrd
cmpsb
call
dec
bound
adc
pop
push
dec
push
ljmp
inc
es
mov
imul
dec
or
jmp
inc
jmp
rclb
insl
or
xchg
icebp
push
call
cmp
jecxz
inc
push
cmp
inc
push
cmp
xor
mov
int
adc
push
loope
fstpl
adc
mov
mov
aaa
add
pop
xor
inc
inc
movsl
loope
add
or
sbbl
mov
or
ljmp
xlat
push
lcall
sub
scas
jle,pt
ljmp
jno
dec
lods
imul
xor
inc
fs
cmp
int3
xchg
cmpsb
mov
sahf
clc
sub
insb
fstpl
insl
adc
dec
popa
repnz
cmpsb
add
push
jecxz
inc
dec
int3
mov
fsub
push
jnp
aam
ret
push
daa
sti
push
loope
enter
xor
or
mov
cmp
out
push
sub
and
mov
dec
test
adc
out
cld
fisubrs
dec
das
addr16
je
jecxz
pop
lock
inc
push
sub
pop
lret
dec
dec
outsb
xlat
adc
cmpb
or
in
arpl
scas
push
les
or
pop
pop
jmp
lods
fbstp
jg
iret
rcll
mov
mov
mov
outsb
jmp
mov
ret
mov
fnstsw
pop
cmp
sub
xchg
cmc
and
cmpsl
ror
dec
in
inc
cli
jmp
cmp
imul
stc
movsb
stos
out
sbb
icebp
int
pushl
pushf
lcall
daa
xorb
cmp
mov
sarl
in
out
adc
sub
adc
rorl
mov
lea
pop
shll
dec
outsl
jmp
sbb
pop
or
ds
pop
sbb
ret
mov
push
push
adc
push
es
movsb
lahf
dec
test
sti
fdivrl
lret
xchg
fnsave
ret
push
xchg
fwait
jae
pop
enter
stc
dec
jnp
mov
repnz
xchg
ffreep
dec
add
fstpl
push
iret
jbe
fsubl
ret
push
in
test
mov
sbb
mov
pop
ljmp
movsb
rclb
imul
cltd
add
xchg
pop
movsl
sub
adc
stc
daa
lcall
or
ss
cwtl
mov
fstpt
movsb
inc
or
pop
dec
hlt
aaa
or
js
push
dec
movsb
pop
mov
pop
sbb
mov
pusha
jl
adc
divl
data16
dec
push
jle
js
sub
adc
insl
dec
sbb
pop
cvtdq2ps
adcl
fistl
aad
or
jl
push
and
lods
ja
iret
push
mov
ret
jp
dec
mov
cmc
cmp
outsl
sti
push
es
mov
loope
pop
nop
mov
pop
or
fistps
fcoml
outsb
inc
jmp
add
pop
cmpsl
mov
sti
xor
inc
lret
and
lcall
jge
test
cmp
mov
inc
rclb
popa
pop
push
mov
popa
mov
js
inc
ljmp
and
inc
inc
inc
ljmp
ret
xchg
jno
int3
out
push
inc
inc
pusha
xchg
adc
ret
xchg
in
mov
aas
rol
xor
cmpsl
push
pop
jno
lret
cld
es
rcll
cwtl
mov
bound
shrb
ret
aam
xor
out
adc
fcmovnbe
orl
lock
xchg
xor
repz
pop
push
xchg
fcoml
push
push
inc
xchg
outsw
sbb
call
mov
xor
cmpsb
cmp
xchg
pop
les
push
cmp
andl
loopne
xchg
fsubrs
hlt
addr16
xor
jno
sbb
push
aas
pop
adc
leave
gs
rorl
xchg
pop
inc
jg
inc
daa
cmpsb
sub
xchg
or
mov
test
mov
mov
xchg
or
push
repz
xor
add
jns
aad
enter
mov
fwait
mov
pop
sbb
popl
cmpsb
push
loopne
sbb
fcompl
mov
pushf
repz
and
ret
icebp
ret
dec
fiadds
fucom
outsl
push
nop
sahf
mov
das
test
popa
repnz
ret
outsb
sbb
add
jne
out
clc
sbb
adcl
adc
jnp
ret
ja
or
sarb
mov
xchg
and
mov
mov
sarb
add
clc
sahf
gs
push
fisttpll
jmp
mov
sbb
test
sub
mov
popf
fimuls
add
xor
aaa
xor
xchg
jae
sub
out
jns
or
std
jl
cmpsl
les
je
cs
add
cmp
xor
cld
mov
jge
dec
push
inc
sbb
stos
in
mov
lea
jnp
rorb
or
sub
xor
mov
scas
into
loopne
ficompl
repz
sti
loope
imul
add
pop
test
cmp
scas
and
mov
aaa
adc
popf
cmpsl
ds
mov
pop
loopne
pop
or
cmpsl
adc
test
xor
mov
jmp
inc
or
sub
aad
mov
dec
jo
push
loope
pop
pop
and
insl
push
mov
les
lds
add
cmpsb
ja
or
ret
add
dec
xchg
movsl
lahf
or
xor
movsl
sbb
xchg
xor
clc
pop
imulb
push
ret
sarb
or
aaa
imul
xor
test
jl
pushf
mov
mov
cmp
push
mov
xor
add
cmc
cmp
out
and
push
dec
mov
xchg
dec
aam
sahf
mov
jbe
loope
ret
push
sti
push
mov
cs
lock
les
idivb
int
pop
stos
inc
dec
cltd
out
or
add
aam
ja
leave
mov
sub
in
js
adc
es
xchg
test
loopne
daa
jg
xchg
push
out
cld
int3
add
mov
jb
cmp
jle
mov
outsl
sbb
jecxz
mov
mov
outsb
arpl
pop
ja
mov
iret
testb
outsb
lahf
ss
negb
in
ret
xor
mov
jbe
gs
std
and
ds
repnz
aaa
shrb
xor
mov
jge
lcall
fsubrs
jne
sti
push
mov
push
and
pop
mov
adc
pop
es
xchg
ret
shrb
nop
inc
fiadds
imul
pop
sbb
rorb
mov
add
mov
mov
push
lods
rcrl
ljmp
stos
inc
lds
mov
dec
and
jbe
subl
pop
xchg
sti
add
fdivs
mov
cmp
push
and
cmp
mov
xorb
in
sbb
shl
aaa
call
mov
pop
ror
xchg
xorl
pop
adc
cwtl
cltd
jp
leave
jl
or
push
mov
jg
outsl
jno
cmp
hlt
lret
andl
outsb
std
jl
insl
mov
sahf
xchg
call
lods
scas
movsl
icebp
push
mov
in
mov
fmuls
pop
adc
mov
xchg
jle
mov
ja
mov
mov
jns
jae
or
cmpsb
js
bound
loop
push
outsb
imul
push
nop
sub
mov
push
mov
mov
insl
add
pop
mov
or
sub
adc
xchg
int
out
jle
inc
pop
es
fisttpll
xchg
in
mov
aam
mov
stos
push
fbld
jb
in
inc
imul
inc
adc
pop
push
mov
xor
pop
mov
lret
mov
jecxz
pop
iret
add
cmp
mov
loopne
xor
push
adc
sbb
add
mov
das
sub
dec
ss
outsl
xlat
xor
add
cli
orps
pop
push
jae
xchg
jne
popa
out
pushw
pop
je
xchg
sbb
fisttps
add
fs
jmp
sub
pop
xor
sbb
rcrl
mov
sbb
mov
negb
and
xchg
jae
mov
ret
pop
popf
mov
fnstenv
repnz
inc
fxch
test
arpl
jbe
lea
imul
testl
add
popf
cld
adc
into
ficompl
bound
sahf
xor
cmpsb
cmp
fdivp
test
gs
dec
stos
mov
leave
sub
ds
jbe
aaa
pop
cmp
stos
dec
jl
xchg
decl
push
aam
push
mov
call
or
mov
push
outsl
and
aam
cld
ficoml
fistpll
imul
mov
cmpsl
ret
cmc
dec
cmp
subb
add
popl
xchg
pushf
jb
sbb
fisttpll
pop
mulb
jns
in
imul
jae
insb
xchg
cmpsl
lret
adc
mul
cmp
fidivrl
je
aad
ljmp
aam
lret
ljmp
outsb
ret
popf
fidivs
jmp
dec
dec
cmp
cmp
sub
in
add
in
jno
in
cmpsl
xchg
pusha
in
mov
in
cld
or
loop
jnp
jmp
xor
imul
imul
test
mov
mov
adc
jnp
pop
mov
cwtl
ficompl
dec
cmc
loope
adc
pusha
stos
xor
insl
jle
pop
cmp
repnz
clc
js
jno
lahf
sub
inc
and
fistl
addb
mov
test
popw
add
and
sub
push
pop
loop
js
aas
loope
jge
push
mov
outsb
or
aam
imul
or
dec
xor
stc
sub
adc
cmp
sub
dec
add
imul
stos
lcall
leave
add
out
leave
fwait
pop
mov
push
mov
mov
mov
into
ret
and
pop
and
fsub
mov
scas
xorb
or
sub
nop
daa
push
or
sbb
stc
adc
add
xor
repz
shlb
insb
pop
lret
jne
in
insb
xchg
repnz
pop
adc
pushf
cmp
in
sbb
inc
pop
cmp
fisubl
mov
fchs
and
push
dec
push
jle
sub
ret
call
sub
movsl
mov
inc
inc
call
dec
mov
xor
sub
aad
bound
mov
ret
stc
jns
aam
and
push
call
jg
outsl
jns
adc
xchg
cli
mov
aas
fisttpll
ds
inc
add
in
xchg
and
jne
and
mov
aas
push
int3
out
clc
stc
lahf
imul
inc
fiaddl
sahf
jae
dec
mov
push
icebp
lds
lds
mov
int
jg
iret
rolb
pop
xchg
adc
dec
sti
dec
sbb
and
xor
rcrb
xor
js,pn
fsubrp
cmp
pop
cmp
fisubrs
mov
cmpsb
les
inc
fdivr
jmp
xor
push
sbb
push
lods
add
dec
cmpxchg
mov
int
adc
iret
jle
clc
dec
sbbl
sbbb
fldenv
cmc
xchg
pop
pop
push
lods
and
xchg
mov
xchg
repz
into
cwtl
adcl
ss
sbb
iret
rorl
je
arpl
cmp
es
lods
dec
mov
hlt
adcb
loop
jbe
sbb
decb
dec
and
sbb
cmp
bnd
lock
insb
inc
insl
loopne
add
xor
sub
inc
push
lcall
std
xor
sub
js
shrl
test
notl
sti
arpl
aad
into
gs
out
sbb
cwtl
push
data16
xor
and
daa
pushf
or
fwait
sti
xchg
std
pop
gs
xlat
adc
into
dec
ja
jae
xor
addr16
add
movsb
sti
mov
lods
and
stc
mov
orb
pop
in
int
dec
push
movsb
ljmp
aam
es
outsl
icebp
popa
add
add
adc
stc
xlat
pmulhuw
outsb
jae
jl
cmc
xchg
scas
sub
push
mov
xorl
rep
pop
xchg
in
sbb
aam
xor
xlat
mov
loopne
fxch
popa
xor
lcall
scas
fbstp
repz
outsl
cmp
inc
jl
xchg
dec
or
test
scas
dec
push
push
sbbb
dec
popa
int
mov
stos
in
lods
jo
xorb
je
sti
xchg
and
adc
sbb
mov
pushf
jl
xor
js
aam
mov
iret
cmp
dec
cmp
scas
lock
cmp
loop
mov
mov
iret
in
hlt
clc
jle
fcoml
jl
je
pop
mov
xchg
jb
sub
sahf
xor
jnp
add
pop
hlt
fwait
inc
imul
jnp
shll
cltd
test
or
ljmp
adc
cmpsl
ds
lcall
sub
lods
pop
rcrl
pop
mov
and
xlat
mov
scas
mov
sub
lds
adc
push
orb
cmp
sub
sub
dec
das
mov
fstpl
gs
nop
and
xor
sbb
pop
rorl
ja
push
sbb
push
js
jge
ffree
jns
jmp
iret
xchg
cmp
fwait
xor
fstpt
loope
xchg
xor
dec
in
rol
mov
fsubrl
int3
and
fldln2
mov
add
cmpsl
push
xor
popf
and
adc
and
and
push
and
add
xor
popf
sbb
push
sub
loopne
mov
add
lahf
lcall
inc
in
mov
inc
fidivrl
punpckldq
mov
mov
xor
arpl
lret
jns
mov
movsl
hlt
mov
aaa
fcmovu
jp
cmp
mov
lods
or
inc
dec
mov
push
dec
xor
mov
adc
clc
aaa
into
sbb
mov
movsb
xchg
push
test
rol
push
mov
sbb
xor
jmp
xchg
sbb
push
jne
xor
in
gs
cld
adc
arpl
inc
ds
push
out
cmp
xor
ds
lods
lds
ljmp
hlt
add
cmp
lds
sbbb
xchg
mov
scas
in
test
mov
adc
lods
into
popa
adc
cld
outsl
xchg
or
ficoms
int3
nop
xor
repnz
out
push
cmpsl
out
mov
hlt
jnp
loopne
ret
mov
das
inc
js
stc
xchg
gs
lret
cmp
sbb
or
or
jne
imul
addl
inc
out
or
test
push
lcall
cltd
dec
xor
dec
push
push
aam
pop
lahf
pop
mov
push
and
dec
push
jb
xchg
mov
dec
sub
push
mov
pop
jp
pop
jae
scas
inc
rcll
jbe
loop
jo
stos
test
inc
cmc
fisubs
call
data16
xchg
jecxz
inc
adc
jno
shll
inc
sbb
lods
inc
push
dec
push
add
adc
xor
imul
adc
loop
leave
arpl
cwtl
outsl
stc
aad
ret
in
lret
or
mov
lds
into
mov
jnp
and
aam
inc
sub
clc
into
lods
mov
dec
mov
addb
xchg
outsb
bound
nop
iret
sub
aaa
lods
test
inc
into
mov
sti
shufps
movsl
lret
cmp
cld
lret
hlt
loopne
mov
arpl
xchg
outsb
jne
push
adcl
mov
ffreep
sub
and
pop
push
push
xor
fprem1
loopne
sti
add
and
aas
rolb
lds
xlat
jns
inc
and
cmp
dec
gs
xchg
enter
sub
jnp
lods
xor
push
call
push
aad
push
cmpb
mov
fnstsw
xlat
icebp
cwtl
test
ja
jno
xor
inc
lret
pop
rcrl
or
jle
add
dec
add
popf
cmp
jns
jp
imul
cli
xchg
popa
sub
mov
xor
jl
out
sub
pop
test
stos
cmp
add
and
fucomi
xchg
dec
leave
xor
data16
lea
pop
xor
mov
xor
into
outsl
fimull
fisubrl
fisubrl
xchg
ja
jmp
push
cwtl
lahf
xor
push
addl
cmp
or
lret
je
cmp
dec
mov
and
subb
sbb
sub
mov
ret
pop
mov
cmc
imul
adc
sahf
stos
icebp
sahf
mov
loope
jne
arpl
pop
hlt
bound
inc
mov
stc
loop
and
out
repz
mov
xchg
daa
mov
out
pop
add
sbb
fcom
imul
repnz
dec
andb
ja
add
xor
imul
dec
jg
dec
jecxz
in
loop
lret
cmpsl
sbb
jns
sub
sbb
les
clc
adc
ret
add
repz
add
pushf
push
push
dec
mov
rorl
add
cld
dec
dec
mov
or
jb
and
jmp
or
add
sub
mov
mov
sbb
sbb
sbb
sbb
rol
add
pusha
mov
je
es
and
push
push
sbb
les
repz
inc
push
aam
ja
addl
sub
fxam
jl
mov
inc
cmpsb
stos
add
fadd
or
shr
add
vmovapd
fwait
push
add
push
test
aaa
xchg
das
push
adc
lods
nop
jbe
sub
push
jae
cwtl
pushf
lahf
enter
sub
aad
add
imul
jbe
lock
insb
adc
push
es
mov
or
mov
inc
mov
in
xor
mov
mov
cmp
pushf
in
mov
ss
outsl
jb
dec
cltd
mov
xlat
or
shll
xchg
js
or
lods
cltd
xchg
lods
xchg
jae
jle
add
leave
ss
mov
jmp
mov
push
loopne
or
gs
mov
add
leave
and
pop
ss
lret
lea
jbe
jmp
shr
movsbl
loopne
or
push
add
js
xchg
jp
fsts
leave
mov
xor
push
imul
push
aaa
mov
movsl
sbbl
stos
sub
push
jp
je
xchg
inc
xor
scas
call
lea
cmp
cld
lea
dec
negl
roll
and
pop
fisubs
mov
pop
jno
cwtl
sub
mov
push
and
xlat
and
popa
push
bound
mov
je
ret
lods
pop
xchg
sub
lods
inc
in
leave
jae
aam
popa
cmc
push
cltd
add
repnz
cmc
ja
ret
out
test
xchg
xchg
adc
mov
cwtl
jp
into
cmp
or
jle
dec
mov
pop
scas
call
jmp
clc
mov
test
std
cld
jg
lret
fisubs
inc
jo
jecxz
jecxz
jmp
inc
pop
cmpl
jmp
mov
movsl
cmp
push
jo
xor
ja
fsubr
je
lret
inc
dec
mov
mov
shrl
adc
gs
out
es
jns
jmp
in
mov
xchg
into
loopne
xor
stos
hlt
inc
rcl
mov
pop
push
mov
and
dec
xchg
sub
mov
cmp
mov
inc
mov
push
jmp
mov
pop
movsl
leave
stos
incb
fistpll
daa
lcall
inc
push
or
xchg
lret
flds
and
sbb
out
inc
pop
das
shll
jl
ja
xlat
mov
xor
jb
jmp
lock
shll
jg
or
mov
mov
inc
or
push
sub
lret
xlat
out
aad
cmp
inc
negb
add
xchg
cmp
pushf
jl
call
push
xchg
mov
cmpsb
lret
pop
decb
dec
xor
test
cmp
jno
inc
loop
mov
mov
repz
mov
shll
or
cmpsl
cmc
and
aas
dec
xchg
add
popf
mov
mov
and
inc
shrb
and
or
jns
xchg
pop
repnz
rcr
pop
pop
mov
or
in
ret
sub
sbb
cmpsb
ret
and
xor
push
insb
cmc
and
rol
loope
dec
xchg
pop
andb
test
lret
jns
jnp
das
dec
pop
loope
icebp
pop
mov
push
sbbl
rorb
bound
stc
push
in
fsubrs
das
jae
sahf
in
mov
lret
stos
gs
sbb
mov
insb
inc
mov
fdivrs
jae
popf
loope
or
cmp
mov
in
shlb
push
packsswb
incl
adc
xchg
lret
ret
fidivrl
outsb
nop
test
movsb
mov
dec
push
inc
sbb
std
ja
pop
push
into
xchg
jnp
jo
xchg
mov
pop
cmp
xor
and
call
ret
dec
jb
shll
pop
adc
mov
loopne
xchg
jle
push
in
pop
clc
lret
cltd
dec
sbb
sbb
aas
jo
andl
das
jl
mov
pop
out
outsl
mov
mov
cmc
xchg
sub
lea
sbb
jno
aaa
jae
jns
bound
pop
icebp
mov
pop
jns
inc
cmp
test
sub
mov
jb
test
mov
stos
dec
mov
repnz
jg
lods
shll
add
xchg
inc
shl
fdiv
dec
sub
mov
mov
je
dec
cmp
push
jnp
push
inc
cld
or
insl
xchg
ret
rorb
ret
jle
loope
fisttps
stc
or
inc
dec
scas
cwtl
call
xchg
xlat
fbstp
leave
pop
mov
out
psubsb
sbb
sbb
adc
cltd
cmp
sub
sub
es
pop
aaa
fcomip
push
cmp
addb
dec
lret
inc
in
mov
mov
lock
mov
sbb
xor
dec
pop
cld
lcall
shll
xor
sub
jnp
push
pusha
andl
push
push
inc
dec
dec
lods
loope
or
dec
push
nop
mov
lahf
pop
mov
cmpl
out
pop
shl
xor
aam
lock
sti
push
push
inc
jp
test
inc
mov
sub
sub
int
dec
inc
lods
dec
and
push
out
push
nop
mov
xchg
push
lods
mov
leave
push
mov
out
lahf
mov
xchg
shlb
pusha
dec
mov
orl
rcrb
push
imul
scas
cli
xchg
loope
stc
lea
cmp
push
cmp
dec
xchg
movsl
sbb
sbb
sub
mov
js
fsubr
clc
stc
or
sub
inc
cli
sbb
add
cld
jge
leave
and
gs
pop
je
cmpsl
jno
jne
add
mull
test
adc
das
lret
popaw
pop
xchg
stos
scas
out
xor
xor
mov
mov
shr
add
rclb
scas
imul
test
bnd
cld
jne
or
or
sbb
pop
sarb
jl
dec
lds
out
jg
mov
mov
xor
sbb
xchg
in
pop
in
mov
add
or
fisubs
sbb
cmp
xchg
cltd
jb
lret
push
fsubrs
ds
arpl
fnsave
lea
push
fcmovnu
push
stos
xchg
dec
sti
mov
cmp
leave
sbb
xchg
cmp
cmc
mov
xchg
es
mov
xchg
iret
fxch
lahf
mov
js
sbb
call
movsb
and
lods
push
sbb
pusha
test
pop
or
fwait
repnz
movnti
xchg
inc
popa
lds
sar
imul
pop
mov
insl
pop
jo
jns
inc
das
in
aaa
push
pop
push
int3
lret
pop
jne
scas
mov
jecxz
lahf
adc
rcll
pop
sbb
outsl
or
xchg
adc
pushf
jge
movsl
mov
lods
inc
mov
test
mov
adc
pop
push
negb
scas
push
out
jmp
popa
jl
or
jae
mov
vorps
sbb
push
jnp
mov
imul
jl
call
fnstenv
out
imul
adc
loopne
pop
cmp
aas
pop
xor
cli
xchg
mov
cmpsl
pusha
mov
cmpsl
push
aam
add
or
pop
mov
xchg
or
pop
mov
lods
aam
clc
pop
xchg
add
test
lret
and
mov
bound
lea
push
cmp
scas
cs
daa
jle
scas
dec
push
lahf
fwait
cmpsl
jp
jo
jns
or
shlb
mov
cs
or
mov
inc
jl
imul
jecxz
adc
add
jae
xorl
in
sbb
rcrb
fstpl
sub
push
lds
mov
mov
insb
or
jmp
aad
xor
je
inc
jae
jle
loopne
call
mov
fld
rolb
fwait
mov
loopne
ret
lds
sbb
adc
and
dec
aam
cmp
mov
and
outsl
inc
inc
clc
cltd
stc
xor
in
cltd
cs
sub
cmp
je
dec
popa
cmp
sbb
out
out
rol
shlb
movsl
lea
rclb
rorl
dec
icebp
xchg
add
dec
sbbl
mov
divl
jecxz
and
push
pop
aaa
and
fiaddl
xor
clc
pop
testl
sbb
lcall
ret
mov
cltd
jl
cwtl
outsb
mov
pusha
stos
imul
xchg
dec
inc
int
movsb
ja
ss
mov
test
adc
xor
pop
add
test
dec
push
dec
cmp
jne
fldcw
mov
lods
mov
mov
inc
mov
jne
shl
cmp
lret
test
adc
pop
dec
fnsave
inc
pop
out
mov
mov
dec
add
lods
leave
jmp
in
fs
lahf
out
adc
jecxz
out
insb
adc
repnz
mov
es
mov
or
es
in
pop
das
dec
dec
jns
fucomi
insb
ficoms
cmpsl
iret
lcall
pusha
dec
popa
clc
jp
ja
jp
xor
leave
adc
dec
clc
fs
subl
adc
xchg
je
iret
xor
or
sub
sarb
xor
lods
cs
mov
mov
fs
cmc
test
adc
sti
cmc
jne
xchg
leave
int
pop
mov
jecxz
cld
push
scas
test
mov
sub
leave
lods
inc
lret
adcb
and
lods
adc
pop
sbb
adcb
out
mov
jno
dec
push
hlt
jo
iret
jno
bound
mov
jno
or
cli
push
xor
jge
repz
push
or
cmpsl
enter
jge
loop
pop
cltd
sahf
or
mov
nop
jl
cmpsb
sti
xchg
aam
jle
andl
rcll
mov
inc
std
push
add
sti
pop
pop
push
dec
fistps
mov
cmp
pop
pop
movsl
sti
inc
jnp
fnstenv
lds
mov
or
sbb
jge
mov
sbb
jns
int3
cli
stos
fidivs
pop
mov
xor
rcrb
cmp
adc
inc
pop
cli
xchg
xchg
out
cwtl
ret
in
add
pop
xor
mov
pop
mov
sbbb
jecxz
inc
dec
clc
push
mov
jg
jno
dec
sbb
jno
push
roll
ljmp
jmp
xor
mov
push
pushf
cld
inc
test
jne
test
adc
jb
insl
lods
dec
xor
aam
xor
inc
push
cld
and
in
cmp
xor
push
movsl
dec
xchg
subb
cmpsl
jle
outsl
lret
jne
xor
roll
lahf
dec
xchg
test
dec
lcall
pop
xor
cmp
sahf
in
cmpsb
push
data16
out
mov
in
mov
xchg
xchg
call
mov
jno
mov
xor
notb
pop
repz
sub
enter
mov
dec
jecxz
xchg
pusha
or
cmpsl
ljmp
ljmp
sub
adc
cmc
ret
push
mov
pushf
repz
jbe
fs
and
and
xchg
out
fnstsw
cwtl
out
lock
xlat
scas
mov
inc
into
pop
jo
inc
out
pop
sbb
andl
mov
jle
mov
ss
jge
inc
test
sti
shrb
inc
cmpsb
lods
ret
pop
out
cld
dec
pop
loope
mov
test
mov
out
in
fldl
repnz
fistl
cltd
xlat
jecxz
jo
xor
nop
and
lods
mov
insb
adc
jle
fadd
push
cmovge
push
les
xchg
mov
cwtl
push
shlb
call
subl
das
jne
lret
popa
adc
dec
in
xlat
or
test
lds
bound
lock
call
jg
jl
cmpsl
test
and
xchg
repnz
jnp
leave
int
pushf
aam
mov
ret
cmp
in
pop
jne
sub
xchg
popa
stc
aas
add
push
mov
pushf
xchg
mov
xor
fs
inc
lds
cmpsl
je
inc
pushf
enter
inc
in
mov
xchg
lret
adc
scas
inc
in
sti
and
loop
jbe
and
xchg
xor
xchg
das
jmp
and
mov
dec
jge
ds
inc
sub
outsl
xorl
test
add
mov
xor
stos
xchg
dec
sbb
add
dec
push
lds
mov
insl
sti
fsubl
xor
je
test
lods
pusha
js
push
mov
int
aas
insb
enter
int
in
dec
js
xchg
aas
out
pop
cmp
ja
jns
sub
mov
xchg
in
les
adc
rcll
mov
ljmp
mov
js
mov
adc
test
xchg
lahf
push
xor
cmp
sub
shrb
into
adc
into
mov
lret
les
add
mov
outsb
pop
jp
or
adc
repz
arpl
in
enter
jge
outsb
jle
adc
test
pusha
out
stos
cmp
adc
mov
ret
xor
xor
aaa
adc
jl
cvtps2pd
fwait
ret
sbb
mov
pusha
jbe
pop
test
push
jo
xchg
or
jmp
and
dec
xor
adc
outsb
in
mov
jg
add
dec
sub
repnz
pop
in
add
clc
jecxz
push
stc
rcrl
sub
jo
jle
cli
sbb
fldl2e
inc
mulb
lock
and
push
push
adc
push
push
adc
xlat
adc
fsubp
aas
and
jno
data16
je
inc
add
xchg
mov
fisubs
jge
jmp
or
out
add
push
or
mov
sarl
test
leave
cld
addr16
sahf
push
icebp
fs
movsb
and
adc
pop
int
insb
adc
test
fimuls
mov
mov
mov
ret
xchg
les
cmp
icebp
or
ret
xlat
and
mov
daa
xor
push
fmul
pusha
mov
mov
push
test
sbb
sbb
push
ret
jnp
cli
lea
xor
leave
jle
stc
cmpsb
add
adc
nop
inc
pop
out
test
into
imul
aam
dec
stos
sbb
dec
repz
inc
xor
ljmp
cwtl
mov
movsb
movb
push
dec
inc
inc
popa
lret
loop
test
mov
xchg
loop
dec
push
inc
add
je
loop
ret
sti
pushf
test
mov
wrmsr
ljmp
lea
sbb
js
sub
mov
mov
loopne
fstl
call
loopne
inc
daa
push
movsl
pop
fs
inc
mov
dec
clc
shl
jle
sbb
push
stos
and
insl
add
push
cmp
mov
and
jnp
sbb
ja
imul
loope
mov
loopne
sahf
in
lcall
shll
insl
inc
add
add
jne
fnsave
stos
out
fiadds
and
sub
mov
leave
mov
fmull
mov
aas
icebp
shlb
gs
adc
xchg
in
cld
and
iret
fs
roll
mov
mov
pushl
fisubl
xchg
xlat
add
popa
leave
outsb
inc
sub
pop
pushf
or
aaa
sub
ret
in
loop
push
icebp
das
addr16
and
mov
adc
ror
addb
mull
inc
lea
push
shll
pop
js
and
pop
pop
mov
js
out
arpl
jmp
jo
mov
pop
adc
rcrl
lahf
hlt
fcmovne
lcall
loopne
sub
lret
ret
sbb
pop
mov
sbb
adc
sub
sbb
mov
in
int3
aad
fisubs
lea
inc
jns
ret
outsb
jp
mov
pop
cwtl
push
mov
pusha
cwtl
aas
pop
dec
mov
loop
popa
mov
das
mov
mov
fwait
loopne
or
adc
push
dec
loop
pop
jne
jge
imul
sahf
dec
push
movsl
pop
and
popf
cmpsl
jle
xchg
aas
xor
in
ret
sub
shrb
adc
and
lods
popa
cli
xchg
push
dec
imul
movsb
sbb
add
call
mov
js
mov
inc
addl
dec
call
int3
lret
xchg
push
enter
sti
inc
dec
aaa
pop
cmpsb
push
mov
sbb
sub
jns
loope
dec
and
add
lret
push
out
aas
sti
inc
int
jle
loopne
dec
adc
arpl
jmp
shll
pop
and
and
mov
in
jl
ret
pop
dec
inc
mov
stc
ds
stos
xchg
pop
scas
mov
scas
mov
push
inc
lret
mov
in
jno
mov
and
outsl
rolb
aaa
sbbl
adc
inc
xlat
je
mov
sbb
cmpsb
cmp
dec
pushf
or
aad
movsb
sti
inc
dec
cli
push
mov
fbstp
push
push
sbb
repnz
mov
mov
adc
shl
mov
in
push
inc
sbb
xor
xchg
jle
das
mov
fiaddl
leave
loop
jnp
call
dec
ljmp
ss
inc
fimuls
cmpsb
mov
pusha
pop
std
roll
out
cwtl
stos
test
push
out
inc
pop
jmp
xor
inc
fnstenv
andb
enter
subl
lret
xlat
out
sbb
xchg
cmp
insb
sub
out
cld
dec
aaa
pop
out
jno
mov
or
lret
xor
xor
loopne
mov
sbb
and
push
movsb
inc
inc
iret
out
insl
clc
push
inc
jle
insb
jb
js
mov
fs
insl
push
in
pop
stc
mov
jmp
and
mov
xor
stc
nop
sbb
andb
out
int
jle
data16
je
sbbb
push
popa
add
cs
nop
dec
sub
cld
rcll
jne
sub
push
dec
pop
xor
test
enter
cs
aam
mov
sub
or
add
dec
pop
dec
iret
pop
outsl
repnz
sub
mov
or
adc
sbb
mov
xor
jbe
cmp
pop
jbe
dec
movsl
popa
mov
sbb
and
xor
shrl
push
out
pushl
or
adc
add
dec
add
jp
adc
out
or
inc
pop
mov
push
out
jmp
outsb
xchg
jg
leave
loope
sbb
jb
cld
into
xchg
test
stc
nop
xchg
call
pop
and
mov
pop
and
dec
loope
mov
mov
scas
jmp
lret
cmpb
out
push
sahf
clc
and
xchg
js
mov
stc
ja
push
aad
std
mulps
inc
push
jo
mov
push
adc
test
lcall
cltd
or
jecxz
mov
pop
or
cmp
pop
in
pop
inc
mov
sbb
push
mov
movsb
out
rcrb
test
iret
data16
fidivl
shrl
dec
jae
popf
je
ljmp
mov
pop
cli
test
data16
in
add
jns
mov
fldl
add
inc
shrl
dec
stos
xchg
inc
sbb
ds
ds
mov
mov
dec
lea
lret
dec
mov
pop
int
adc
das
or
fstpl
sub
pop
adc
ja
cmc
push
sub
loopne
les
or
xchg
sub
lret
mov
jb
ja
imul
lds
imul
enter
sbb
outsb
mov
ret
cmp
push
jge
out
xor
pop
mov
pop
push
add
sbb
xorb
movsl
inc
pop
mov
pop
arpl
add
outsl
out
mov
pop
jnp
adc
in
sbb
sub
rcrl
push
aad
mov
shrl
pop
dec
pop
push
mov
pop
pop
inc
jecxz
mov
sbb
fstpl
lahf
add
mov
ja
int3
push
popa
jmp
jmp
mov
pusha
cmp
adc
out
enter
adc
add
and
jl
pop
push
mov
jp
inc
xchg
and
js
push
test
sbb
or
xchg
outsb
xchg
outsl
jmp
or
push
push
jmp
and
and
mov
inc
stos
jne
ljmp
mov
mov
add
sub
jns
movsb
cld
rcl
add
pop
hlt
cmpsl
test
outsl
fcmovne
jnp
shlb
xor
or
xor
lcall
lods
or
push
dec
rcll
sbb
mov
jnp
mov
bound
or
jl
stos
push
sub
dec
pop
mov
ficoms
xor
fnstenv
dec
daa
inc
jns
ficompl
mov
xor
sbb
add
pusha
xchg
dec
pop
flds
mov
push
nop
in
mov
cld
cmpsl
mov
cmp
xchg
lea
push
jo
das
fdivrl
gs
dec
ret
mov
mov
in
xchg
cmovle
cmp
adc
jbe
jno
out
cmp
cmp
add
jp
cld
xchg
adc
lods
iret
xor
jae
push
imul
and
sti
gs
sub
loope
fwait
cmp
xchg
add
add
push
in
mov
xchg
xlat
sahf
popa
insl
xchg
cli
insl
add
mov
dec
pop
test
subb
cmp
int
inc
cs
in
leave
fmull
pop
push
jmp
mov
mov
fwait
xchg
cmpl
jle
test
inc
sbb
mov
sarb
xor
xchg
cmp
xor
mov
dec
loopne
push
lret
insb
subl
inc
sub
divl
sub
mov
mov
es
cmp
outsl
adc
mov
clc
xor
pop
repz
fiadds
adc
or
rcl
adc
push
popf
inc
push
jo
popa
and
xchg
dec
jl
xor
pop
pusha
sub
fisubrl
test
dec
push
mov
dec
inc
xchg
into
mov
adc
mov
mov
adc
mov
xchg
add
leave
push
mov
ja
add
lea
mov
aaa
insb
add
fnstenv
addr16
push
and
sti
adc
cmp
pop
jl
adc
in
and
mov
cltd
movsb
xor
movsb
cmpsl
icebp
and
stc
faddp
jle
jge
nop
push
mov
gs
gs
add
or
mov
inc
push
jp
sub
insl
adc
hlt
mov
adc
mov
xor
imul
inc
popa
sti
or
aas
aad
subb
test
incl
js
loop
pop
std
rorb
insl
jo
push
ret
ret
aaa
lahf
ss
push
xor
orl
xchg
gs
das
mov
pop
scas
push
out
fsubrs
sbb
outsl
dec
call
insl
jg
dec
sbb
or
outsb
popf
out
divl
sub
pop
aas
shrl
mov
aas
loop
mov
inc
mov
inc
aaa
xchg
add
loopne
cmpsb
xchg
push
outsb
loopne
in
add
adc
cs
aaa
fsubp
inc
jle
lea
mov
push
adcl
sbb
xchg
stc
jnp
aaa
jecxz
scas
cltd
dec
or
stos
fdivs
push
xchg
lahf
dec
jmp
shrb
jl
adc
sbb
out
int3
loope
sub
and
out
xchg
add
jmp
adc
arpl
jbe
outsl
cmp
aam
pusha
popa
jnp
adc
dec
sbb
mov
xchg
cmp
sbb
jmp
mov
sbb
cmc
mov
sbbb
xchg
fnstcw
pop
scas
and
mov
sub
sub
mov
cmp
xchg
aad
xorb
lods
sbb
sti
nop
sti
jl
repnz
xchg
out
xchg
xor
xor
movsl
cmp
push
sub
repnz
cmp
pop
sbb
inc
loope
jns
cmp
xlat
sbb
mov
sub
xor
aas
push
ja
dec
pop
ja
fs
xor
dec
xchg
imul
dec
lret
push
mov
cmpsl
int
in
icebp
add
cmc
push
mulb
gs
mov
mov
das
and
jo
push
sub
dec
push
mov
daa
xchg
cwtl
rcll
pop
shlb
imul
popf
loopne
negl
add
jl
xchg
outsl
pop
movsl
cmp
nop
dec
and
pop
shll
pop
call
test
in
add
ss
jns
jns
int
mov
nop
repnz
mov
stos
mov
fidivrl
mov
negl
sbbb
cmc
int3
mov
pop
sahf
push
leave
sub
mov
aaa
call
mov
add
xchg
clc
imull
mov
mov
jle
mov
cltd
push
pop
outsb
mov
pop
jnp
outsb
adc
ss
pop
sbb
mov
cmp
loope
pop
adc
arpl
inc
in
or
cmp
mov
mov
in
add
lods
sub
jg
add
dec
xchg
add
xchg
adc
cltd
xchg
jecxz
fsubr
inc
pop
sti
xor
jbe
mov
mov
inc
xlat
stos
xor
fdivr
dec
loop
je
cmp
ss
cmpl
fidivs
cltd
fdivrl
cld
jle
inc
jmp
mov
sarl
sub
sub
lcall
xor
push
inc
xchg
dec
arpl
mov
out
pop
xor
mov
push
outsl
adc
hlt
jns
outsl
loop
adc
mov
pop
lock
stos
cmp
pop
pushf
cmp
int
jns
jbe
lds
cwtl
jo
rcrl
hlt
mov
inc
sahf
xchg
fsts
mov
mov
int
out
scas
cltd
cld
rclb
or
adc
fnstenv
xor
inc
push
rorb
add
mov
pop
and
jb
cmp
jl
xchg
repz
mov
fnsave
mov
call
and
jp
call
movsl
repz
jnp
pop
test
dec
and
mov
rclb
ds
movsl
xor
fnsave
mov
mov
sti
rcrl
mov
jae
add
rorl
pushf
adc
push
jmp
ret
nop
hlt
enter
mov
fwait
mov
and
xor
push
jnp
je
mov
test
mov
or
mov
dec
hlt
pop
mov
and
in
stc
lret
push
sub
in
repz
mov
jnp
mov
mov
mov
filds
pop
mov
sbb
repnz
xchg
cs
stc
and
aad
push
mov
or
test
fnsave
lahf
mov
cmp
sbb
in
pop
paddq
sub
hlt
popa
bound
fisubs
stos
in
add
and
add
inc
pop
fs
loop
ret
and
sub
and
lret
imul
rcrb
mov
cmp
pop
pop
dec
shrl
popa
sbb
xlat
dec
sub
test
movsb
notl
out
sbb
out
push
sahf
inc
mov
sub
ss
mov
pop
shr
daa
jbe
and
xchg
sub
popf
push
push
push
fiaddl
outsb
movsl
jns
inc
and
shll
popf
mov
sbb
lods
movsb
addr16
xor
lret
or
jnp
std
xchg
sbb
cmp
sub
mov
or
jo
sub
and
cld
stos
in
xor
xchg
pop
movsb
push
mov
xor
aas
fwait
pop
cmp
test
scas
adc
mov
cli
pushf
shlb
stos
mov
push
int3
fdivrl
push
inc
fcmovnu
cmp
stos
rcr
mov
add
hlt
icebp
mov
fidivrs
push
and
lret
pop
out
xchg
pop
enter
mov
gs
loopne
into
gs
fwait
ret
mull
pushw
inc
fstpl
xor
mov
in
xchg
mov
sbb
and
and
push
shrl
cwtd
xor
xor
movsl
inc
cmp
mov
lret
stc
testb
cmp
xchg
shrl
mov
pop
dec
mov
mov
ss
mov
pop
shll
pop
das
or
xchg
test
adc
push
mov
lret
pop
pop
outsb
loope
hlt
pop
lods
dec
xchg
push
jo
or
xor
sub
jno
dec
or
sbb
lret
mov
add
addl
out
mov
cmp
lea
cld
push
pop
stos
push
pop
sub
xchg
xchg
push
mov
mov
popa
xor
pop
std
mov
mov
scas
jb
xor
mov
jne
mov
dec
in
pusha
jl
out
mov
mov
fnstsw
cmpb
shll
fisttpl
push
cmp
movsl
test
and
jae
sub
lods
loop
lcall
adc
movsb
call
out
adc
add
inc
in
int
mov
imul
int3
mov
pop
mov
aaa
mov
clc
xor
sarb
dec
jae
push
out
mov
mov
mov
hlt
mov
test
test
mov
xlat
sti
es
xchg
fadds
test
mov
jg
mov
cld
std
dec
mov
loopne
adc
add
sahf
fistpl
cmpl
mov
mulb
sbb
sbb
mov
pop
mov
pop
pop
dec
mov
rcrl
fnsave
dec
mov
pop
mov
adc
in
jne
sbb
cmp
out
aaa
and
leave
xchg
jp
cld
cmpsb
outsl
inc
ret
mov
fisttps
jmp
add
mov
xchg
popa
cld
push
sbb
add
mov
sarb
adc
adc
ret
push
pop
in
jbe
jne
ja
inc
fcompl
int
mov
jmp
cmc
sbb
push
cmp
out
lods
inc
das
pop
jbe
or
test
mov
xor
jg
ret
insb
sub
lds
mov
jnp
xchg
imul
xchg
lods
mov
xor
out
lcall
movsl
and
test
add
repz
fbld
sbb
int3
sahf
add
mov
jno
dec
mov
cmp
inc
fsubrl
sbb
mov
xor
xor
adc
adc
nop
mov
add
shl
mov
jb
call
clc
dec
dec
pop
xchg
adc
aas
es
xchg
pop
or
in
and
mov
pop
mov
outsl
outsb
xor
loope
jmp
pop
sbb
mov
ret
jb
sbb
jl
or
xlat
decl
shll
mov
mov
lret
arpl
inc
xor
jle
lock
cli
jge
dec
cmp
aas
mov
cmp
xchg
mov
je
in
and
nop
ljmp
clc
lock
dec
out
out
popa
ret
insb
add
lret
jb
pop
sub
scas
sbb
xor
inc
pushf
jle
lret
mov
mulb
pop
jno
sub
sub
aad
sub
push
das
cmp
je
jno
ja
movsb
sti
fisubs
mov
push
push
test
sub
add
mov
addb
scas
into
arpl
out
les
jnp
rcrb
mov
sarl
or
push
dec
sbb
push
jno
sahf
lahf
push
mov
add
call
cmpsb
xor
cmp
push
mov
adc
fmul
mov
pop
cmp
outsb
xchg
jno
mov
xchg
sub
call
pop
inc
repz
aas
stos
pop
lods
mov
xchg
icebp
call
jle
movsb
outsl
mov
iret
shlb
lods
les
movsl
jae
loopne
fidivrs
call
jp
lcall
sbbl
sahf
xor
dec
movsb
in
push
das
xor
sar
dec
mov
pop
test
into
push
stc
pop
stc
loopne
mov
testl
pusha
sarb
cmp
xchg
inc
les
push
pop
loopne
dec
jbe
sti
mov
or
int3
mov
mov
cmc
adc
add
or
movsb
fcomp
sub
repnz
loopne
repz
inc
enter
mov
mov
xchg
sub
mov
xor
push
jno
push
add
xlat
aad
mov
popf
mov
mov
lret
test
andnps
aaa
cltd
jne
mov
jp
fadds
rorb
add
jnp
enter
jo
insb
or
dec
ljmp
cmp
in
push
or
mov
ljmp
es
gs
into
es
scas
aaa
andb
add
insb
loopne
jo
xchg
aaa
jo
fwait
out
int
and
sub
xor
cmp
cmc
pop
mov
push
mov
dec
pop
xchg
das
inc
leave
push
push
push
mov
mov
mov
out
inc
pop
xchg
xchg
sbb
aam
cs
add
repnz
fsubr
test
or
rcrl
jne
or
fldlg2
rclb
jno
aam
inc
leave
insl
jno
push
mov
add
fnstsw
push
add
jg
sarb
mov
mov
push
scas
shlb
imul
fistps
popa
xor
xchg
mov
subl
mov
out
mov
test
add
ss
aas
cwtl
inc
push
fimuls
and
mov
cmc
dec
int3
pushf
scas
push
stc
popf
push
imul
inc
imul
test
mov
int
mov
iret
outsb
sbb
into
and
inc
fnstenv
loop
mov
scas
jecxz
enter
jp
repz
pop
cmp
jl
xchg
pop
mov
inc
sbb
sub
push
push
bound
js
and
push
pop
mov
cmc
pop
cmp
pop
lock
stc
or
or
adcl
shrl
add
lds
inc
sbb
das
std
xor
in
aam
div
cmp
cmp
sbb
dec
call
add
sahf
and
cmp
adc
mov
cmp
ret
mov
mov
pop
cmp
and
jo
xchg
sub
popa
pop
cmp
notl
std
mov
pusha
xlat
adc
jp
out
or
cmp
dec
sahf
add
movsb
scas
jae
mov
pop
inc
adc
sti
cmpsb
mov
jns
and
jnp
iret
xor
repnz
std
mov
in
test
fnstsw
jge
xor
cmp
ret
pushf
es
rclb
movsb
shlb
push
in
in
adc
mov
repnz
ja
mov
test
mov
mov
iret
mov
cmpsl
mov
fldcw
gs
mov
xchg
push
imul
loop
pop
pop
hlt
mov
ret
or
pop
push
jle
out
sub
rcll
adc
mov
pop
jecxz
dec
std
sbb
push
out
shl
inc
int
cltd
mov
jne
mov
out
jle
and
pop
testb
mov
or
xchg
lcall
out
and
xor
arpl
testl
xchg
mov
test
and
mov
mov
daa
leave
or
cmp
loopnew
loope
or
dec
jecxz
pop
in
cld
fs
adc
addl
push
sub
lcall
and
mov
stos
add
lahf
sbb
fsubp
std
or
jmp
stos
push
jae
xor
flds
sbb
jle
dec
mov
and
lods
in
mov
test
sbb
mov
mov
pop
adc
testl
inc
sub
mov
ror
mov
push
jns
pop
mov
ds
and
fstl
pop
push
lret
push
addb
popf
andb
push
out
dec
aad
subl
mov
push
pop
jbe
pop
repnz
jbe
jl
fwait
xchg
fwait
js
cld
xchg
mov
dec
loop
js
fnstsw
je
mov
jno
lea
loope
jae
mov
lods
inc
bound
sbb
adc
and
les
loope
sub
aaa
push
xchg
jmp
xchg
test
repnz
pop
cld
xchg
dec
push
scas
out
roll
arpl
lahf
pop
in
outsl
cli
dec
mov
lret
mov
fcoml
mov
fdivr
mov
cmp
adc
fidivl
sbb
ljmp
and
add
cli
ret
inc
jo,pn
pop
rcrl
mov
out
jg
sub
shlb
pop
jp
pop
lods
imul
sti
pop
or
xchg
mov
aad
lea
repz
push
clc
es
xor
arpl
aas
mov
cmp
sahf
sub
or
lock
int3
pop
sub
cmpsl
cmp
gs
jl
mov
push
imulb
fs
jae
enter
data16
jg
fisubrs
pusha
fmul
shl
pop
ret
push
mov
outsb
sbb
adc
and
xorb
icebp
or
out
sbb
mov
rol
inc
add
mov
insl
sbb
filds
popa
test
cmp
out
sarb
stos
stos
inc
mov
dec
loop
ret
pop
mov
sti
hlt
mov
jecxz
dec
aam
xchg
push
lret
pop
scas
loope
and
addr16
or
add
bound
mov
imul
mov
sbb
mov
iret
dec
in
push
rolb
cwtl
sti
ret
negb
mov
or
mov
in
sub
rcrb
xlat
fdivr
inc
push
sub
mov
push
jmp
cs
sub
lods
inc
cwtl
pop
mov
xor
cmc
mov
jle
xlat
ljmp
sub
scas
repnz
test
inc
xchg
push
mov
inc
arpl
ljmp
push
push
lods
cli
into
adc
mov
cltd
push
iret
leave
nop
out
out
jecxz
cmp
shr
jae
push
rorl
add
lcall
sar
or
mov
orb
mov
mov
rcr
mov
aad
mov
lcall
push
lret
das
lea
imul
pusha
adc
push
jno
aas
loop
mov
jp
int3
pop
push
bndstx
js
frstor
fs
push
pop
sahf
jae
sub
mov
cltd
and
and
rclb
cld
leave
jp
sub
stos
xor
cmp
or
cmpsb
mov
ret
jo
test
lcall
adc
movsb
je
fnstsw
add
lcall
sub
stos
loop
pop
add
xchg
inc
fwait
cmp
mov
mov
test
lahf
scas
xor
mov
in
sbb
repnz
xor
bound
adc
imul
or
xchg
ret
adc
mov
je
pop
divb
pop
ret
adc
rol
mov
adc
xor
aaa
sbb
jle
or
mov
pushf
adc
out
mov
cmp
rcll
insb
add
push
push
test
leave
or
pop
xor
mov
fisttpll
push
push
mov
dec
movsb
insb
pop
mov
pop
xor
mov
frstor
mov
sub
xchg
pop
imul
das
xor
cmp
repz
mov
mov
les
push
xchg
dec
dec
hlt
stos
es
jecxz
xor
vminsd
fs
lcall
rep
mov
sub
cmp
mov
adc
ss
popf
das
in
inc
sahf
mov
cmpb
ds
subl
lods
shll
jle
xlat
int3
fisubrs
mov
pop
xor
aaa
cld
addb
xor
cld
test
dec
iret
pop
pop
and
outsb
movsl
pop
mov
cmp
push
xchg
sbb
in
lret
lret
dec
scas
and
ss
jns
cltd
and
ss
lcall
adc
cwtl
add
xorl
stos
repz
shll
xchg
cmp
and
cli
push
arpl
mov
mov
fdivrl
push
pusha
insb
inc
scas
mov
and
shl
xchg
xlat
or
ret
repz
cmp
cwtl
std
mov
popa
mov
adc
jae
loopne
arpl
pop
mov
decl
jno
xchg
cltd
mov
stos
xor
mov
test
ret
jge
stc
in
and
sbb
dec
pop
fstl
pop
lds
ds
sbb
les
ds
in
aas
mov
fldt
pop
push
inc
xor
dec
add
notl
nop
imul
jp
loope
push
xor
or
arpl
sbb
sub
xchg
notb
fisttpl
hlt
adc
and
cli
dec
mov
movsl
jecxz
inc
fdivrl
in
ljmp
xor
push
pop
mov
adc
je
scas
movsl
jmp
fdivs
add
jbe
jns
ss
inc
jno
inc
out
arpl
mov
cmp
adc
mov
dec
pop
lods
xchg
fcompl
inc
cli
movsb
sub
push
pop
sub
xorb
inc
mov
xor
loope
xor
and
leave
mov
fldpi
pop
lret
adc
mov
fidivrs
add
enter
jg
xchg
in
int
call
lds
jb
sbb
dec
push
leave
xlat
orb
std
jns
mov
enter
sbbl
aaa
repz
mov
enter
add
ficompl
and
xor
ror
xchg
aam
mov
mov
fimull
ret
insb
stc
fs
sub
das
and
mov
mov
pop
jl
mov
jnp
cmp
leave
cmc
add
push
ror
push
adc
icebp
lds
sbb
cmc
js
sub
inc
fwait
sub
adc
daa
cmp
int
movsl
mov
std
loope
stos
jmp
fdivs
inc
and
add
inc
cmpsb
push
jb
adc
jnp
std
mov
jno
rcll
adc
add
xor
mov
in
mov
jae
fwait
lock
xchg
or
mov
mov
dec
sub
inc
sub
pop
pushaw
mov
and
aad
jbe
stos
das
mov
test
adc
adc
cmpsb
in
pop
movsl
icebp
shlb
add
dec
add
push
std
cltd
xor
fucomip
test
sbb
leave
pusha
push
cmp
cmpsl
push
cvtps2pi
loop
jp
mov
fs
or
xchg
inc
data16
mov
mov
fsubs
dec
leave
test
or
sti
repnz
ds
negb
enter
add
add
pop
xor
jo
test
or
dec
pop
mov
addr16
pop
mov
push
ret
cmp
fisubrs
jle
imul
stc
xchg
jg
mov
pop
cvtpi2ps
pop
cmpsb
push
hlt
sbb
pop
mov
rcr
and
pop
shlb
outsl
push
fists
pushf
orl
add
lods
daa
or
sub
into
pop
lock
fdivs
dec
into
or
lds
in
sub
inc
mov
push
movsl
xlat
adc
mov
xor
adc
xchg
xchg
push
loope
add
dec
mov
xchg
daa
cmp
or
mov
fisubrl
aam
and
mov
sbb
mov
push
xchg
jo
mov
std
sub
inc
nop
test
adc
mov
movsl
dec
call
scas
test
repz
cmp
push
mov
mov
into
pop
repnz
lods
mov
frstor
inc
fst
jg
popf
jne
cmp
sub
push
aam
rcrl
mov
jo
shr
adc
jnp
loop
ss
xor
shrb
cmp
imul
clc
nop
xchg
jns
call
insl
adc
or
int3
xchg
sub
mov
sub
mov
scas
mov
adc
pop
push
cmpb
pop
sub
in
dec
in
popf
ss
sbb
jl
jge
mov
test
sub
push
pop
push
daa
cmp
adc
iret
fwait
cli
loope
push
test
add
jmp
sbb
sahf
lret
pushf
xor
jns
ds
data16
mov
testl
cmpl
pop
int3
jge
frstor
sbb
mov
adc
mov
pop
cli
pushf
adc
dec
push
std
sahf
mov
leave
mov
or
fwait
pop
lds
dec
cmp
ljmp
xchg
push
pop
aaa
adc
push
stos
lds
fdiv
add
pop
ss
shr
fs
test
xor
mov
cmp
int3
mov
movsb
stos
jno
push
xchg
arpl
dec
mov
lret
dec
daa
dec
es
cmp
insb
icebp
insb
pop
imulb
adc
hlt
call
push
xchg
ffreep
std
lods
ret
fcomps
call
push
frstor
mov
add
mov
pop
and
cs
mov
imul
cmp
push
ret
jle
xlat
lods
and
or
cmp
cmp
imul
push
mov
sub
pop
xchg
and
std
ds
pop
cli
push
imul
mov
outsb
addr16
dec
subl
cmp
and
xchg
popa
xchg
add
fidivrl
scas
arpl
adc
and
test
push
xor
sbb
scas
push
push
popa
fcoml
xlat
xchg
lods
popa
fsubrl
hlt
jge
leave
shll
popa
imul
lcall
stos
leave
loop
pop
adc
ficomps
imul
lcall
stos
and
xor
mov
out
xlat
inc
scas
lea
pop
idivl
ljmp
gs
add
es
ds
sbb
push
sbb
pop
sti
add
mov
hlt
movb
pop
and
and
aad
ret
cmpsb
lock
fwait
fadds
cltd
cmpsl
xchg
ja
sub
lods
pop
mov
push
lods
push
jae
fidivrs
xchg
out
sahf
insb
fistps
xor
js
imul
jle
div
pop
cmp
mov
addr16
pop
xchg
out
icebp
shlb
inc
test
jg
test
pop
lret
aas
ficoml
xor
xchg
das
cmpsb
ds
add
xor
xor
pop
and
sbb
jmp
sbb
mov
ss
jne
pop
xlat
pop
xchg
jae
ret
or
dec
mov
mov
fdiv
jnp
xchg
sub
push
mov
add
outsl
xchg
and
cmp
dec
jp
imul
gs
push
jb
xchg
and
test
push
and
mov
pop
xchg
or
pusha
or
ds
outsl
push
mov
aas
lods
div
mov
lock
pop
mov
popa
stos
loopne
add
fadds
mov
inc
xchg
xor
cmpsb
jns
sbb
aaa
movsl
in
sub
dec
stos
orl
sub
scas
xchg
lret
jne
fadd
fwait
nop
fdivrl
jno
mov
sbb
rcrb
mov
jl
lds
shl
lea
sub
push
cltd
mov
fstpt
mov
mov
loope
insl
adc
ret
mov
mov
xor
jmp
push
shll
loopne
fsubrl
and
ljmp
rcr
mov
jecxz
leave
ret
lock
popa
repz
and
imulb
mov
cmp
pop
mov
insl
ds
push
jle
popa
mov
lretw
sub
push
ljmp
inc
fimull
mov
push
sbb
adc
cmp
adc
insb
fisttps
aaa
lret
data16
leave
mov
daa
jmp
pop
dec
sub
arpl
rcrb
ds
in
pop
dec
mov
jle
mov
and
fcompl
je
or
or
loop
fwait
les
in
xchg
pop
sbb
fistpl
movsl
movsb
cmp
jnp,pn
cmp
das
pop
les
lods
mov
sub
push
out
sub
jle
cli
outsb
clc
jnp
sahf
das
aam
cmp
mov
jp
dec
cld
sbb
push
scas
and
cmp
dec
ja
xor
rcrb
aam
dec
outsl
repnz
scas
loopne
sbb
sub
xchg
insl
div
mov
or
mov
xchg
dec
cmp
or
enter
mov
out
mov
mov
icebp
pop
cmp
jle
mov
shl
sbb
nop
push
xchg
movsb
mov
loopew
xor
mov
sub
int3
gs
mov
push
sti
ret
cmpsl
xchg
push
sub
in
or
data16
divps
xor
mov
mov
jns
jl
stos
popa
leave
pusha
rorl
push
je
outsb
jae
ss
mov
mov
pusha
andb
push
movsl
pusha
ret
rorb
pop
hlt
insb
jecxz
les
sbb
sti
pop
lret
mov
je
jge
lds
popf
xchg
cmp
int
bound
or
jno
jne
sti
andb
loopne
xchg
test
or
out
mov
pop
cmp
cltd
lahf
pop
pop
jecxz
or
xchg
pop
in
hlt
mov
adcb
xchg
jne
mov
cmp
dec
push
loop
add
adc
fcoms
data16
ds
mov
pop
jo
mov
push
mov
adc
aam
out
pop
cmp
xchg
lret
xchg
daa
ds
mov
pop
add
leave
jns
mov
or
call
mov
jle
or
in
nop
cmp
xchg
into
pushf
dec
mov
or
mov
jns
test
iret
gs
daa
lahf
pusha
xchg
jp
jl
and
xchg
loop
sbb
mov
sub
je
sar
out
mov
int3
jmp
and
xchg
out
int
arpl
add
std
fisubrs
cwtl
pop
das
das
movsb
repnz
imul
jge
lret
sahf
imul
pusha
out
push
jbe
lret
xlat
mov
pop
pop
icebp
int
aaa
push
jge
jo
outsb
dec
fnstcw
stc
pop
cmpsl
cmp
mov
pusha
mov
push
imul
stos
arpl
mov
into
sub
adc
inc
add
enter
arpl
in
and
push
lea
pushf
rcr
shlb
movsb
or
loope
ja
mov
jp
adc
pop
lock
push
ja
push
sti
loop
adc
sbb
xchg
sahf
cmc
mov
pusha
adcl
dec
mov
inc
push
bound
xchg
mov
xchg
add
push
andl
mov
popa
imul
sbb
movsl
cmp
cmp
lret
add
fst
sbb
mov
cld
lret
pop
jns
call
cmp
hlt
push
xor
insl
cwtl
nopl
mov
in
jnp
jmp
dec
fdiv
cmpps
ds
imul
jbe
out
cmpsl
mov
add
cld
hlt
jae
je
shrl
sar
mov
adc
loop
jl
fwait
lods
data16
test
add
movsb
cmp
fiaddl
mov
call
nop
dec
jno
jnp
xor
inc
cmp
call
out
push
out
fs
es
stos
dec
jmp
mov
mov
aas
dec
jae
inc
scas
or
mov
push
pop
jg
cmp
pop
ret
dec
or
push
or
mov
lret
jp
addb
jns
dec
push
mov
int
fsubr
mov
jno
or
xchg
pop
insb
enter
popl
stos
shl
push
repnz
mov
mov
jp
cmp
add
sahf
xchg
and
or
sub
out
mov
call
xchg
sbb
cli
es
mov
mov
push
jecxz
rcrb
sub
dec
push
pop
mov
loopne
inc
adc
in
dec
dec
loope
popa
lods
imul
movsb
inc
movhlps
dec
pop
or
mov
aad
inc
lret
lret
or
mov
push
ds
mov
jb
and
push
popf
scas
xor
cmpl
inc
pop
stc
xlat
or
outsl
repz
xchg
add
in
adc
loopne
inc
jne
sbb
repz
sub
adc
sub
push
adc
loopne
jo
fwait
shll
mov
sub
adc
mov
push
insl
das
xchg
push
fcoml
inc
inc
or
push
mov
out
jo
sti
cltd
or
ss
mov
push
fwait
sub
sub
push
mov
mov
or
or
push
cmpsl
arpl
sub
out
push
insl
and
sbb
push
push
sub
push
rcll
inc
fsubr
push
mov
adc
and
mov
mov
imul
push
aaa
orl
scas
into
jle
in
rolb
test
roll
out
mov
addl
mov
test
mov
inc
inc
clc
jl
cmpsb
testl
jg
sbbl
mov
sbb
adc
mov
imulb
and
cwtl
pop
cld
outsl
dec
xor
subb
pop
les
jg
lahf
mov
cmpsb
ss
aam
rcrb
scas
repz
cmp
and
pop
test
out
cmp
lods
jmp
dec
bnd
pop
mov
xorl
sub
pop
das
mov
sub
hlt
jp
inc
int3
popf
fwait
jnp
cld
out
arpl
int3
and
push
ja
pop
and
xlat
test
or
jecxz
enter
dec
scas
pop
divl
mov
loope
cmp
xchg
sbbl
push
inc
mov
pop
filds
mov
mov
sub
add
pop
mov
push
cmp
cltd
sbb
lahf
mov
inc
fsub
orb
inc
out
loopne
sbb
jp
cs
jg,pt
adc
imul
mov
push
sahf
or
cmpsl
add
int
cmpps
sbb
jge
in
or
leave
cmp
sub
pop
insb
xor
adc
push
sub
hlt
push
inc
cmp
push
jge
sub
cmp
push
sbb
jg
adc
mov
mov
outsl
fs
mov
aad
and
cwtl
jnp
cli
xchg
clc
lock
mov
stc
aas
sub
push
cmc
adc
pop
fbld
adcb
and
xchg
popf
jb
stos
mov
arpl
push
adc
mov
in
std
aad
nop
inc
out
in
mov
mov
or
call
dec
adcb
aam
cmp
or
into
ss
movsl
and
jb
aas
test
add
dec
cmp
loope
pop
and
std
inc
jae
ja
add
xchg
jns
outsb
lods
inc
mov
rolb
jmp
add
dec
sub
fiaddl
jne
insl
fsubs
sbb
sahf
push
mov
jno
xor
test
sbb
in
dec
or
dec
in
in
or
cmc
jnp
jecxz
outsl
daa
adc
fldcw
test
loope
sbb
ja
insb
nop
sbb
imul
adc
mov
mov
xchg
cli
fwait
test
stc
scas
mov
sbb
orb
sub
jb
sti
push
rcl
cmc
sbb
int3
jecxz
mov
call
sbb
and
or
popf
cld
test
stos
into
loope
sub
sbb
jmp
mov
push
and
inc
push
push
loope
fnstsw
xor
sbbl
dec
dec
or
mov
mov
test
xor
inc
xchg
lds
das
cmc
aam
fs
push
rcl
mov
mov
in
in
test
lretw
and
sub
lods
mov
divl
sti
fsubrs
mov
ljmp
popf
or
pop
out
add
mov
sbb
jp
in
sahf
jbe
cmp
or
fsubl
jb
notb
sub
xchg
mov
lcall
xchg
or
push
mov
push
inc
or
jbe
jg
sbb
fneni(8087
fstpt
cli
xor
adc
lds
xor
jae
testl
cld
lahf
divl
imul
outsb
mov
ret
imul
lds
or
cmc
xchg
ror
sub
xor
dec
push
lret
rcll
mov
out
in
push
idivl
ljmp
xchg
outsl
rorl
stc
cmp
mov
adc
push
add
pop
sub
add
adcb
or
adc
scas
mov
subb
push
or
push
cmp
pushf
xor
cmc
xor
sbbl
fcompl
outsb
imul
jbe,pn
inc
lret
jne
xchg
out
ljmp
cmp
roll
adcb
mov
cmp
js
xchg
out
stos
int
xor
jecxz
lods
sti
push
push
cmpsb
mov
jmp
ret
shlb
pop
dec
xchg
add
ficomps
sub
mov
pop
repnz
push
ljmp
cmpsl
hlt
lods
stc
push
sub
lret
pop
sahf
sti
push
pop
outsb
leave
and
sbb
mov
inc
jp
in
xor
and
gs
ret
adc
outsb
cli
cmp
or
xlat
pop
imulb
jnp
enter
mov
jno
outsb
daa
mov
call
repz
shl
ja
mov
xor
pop
stos
ss
push
mov
ret
mov
adc
jl
push
in
out
test
xchg
sub
xchg
mov
sbb
push
or
dec
pop
or
mov
jnp
lods
mov
inc
xchg
mov
fstpl
rcrb
or
jae
mov
in
popf
insl
test
push
dec
sahf
mov
lock
das
gs
call
mov
lcall
je
enter
or
mov
into
or
xchg
jns
hlt
test
inc
mov
sbb
mov
pop
cmpsb
pop
jo
jns
negb
aaa
adc
adc
out
xlat
dec
cmp
addr16
pop
out
add
test
mov
sub
sbb
inc
enter
xchg
lahf
mov
dec
jae
inc
cltd
pop
mov
adc
arpl
fucomp
pop
mov
mov
mov
jne
fdivrs
scas
aam
dec
jle
pop
cmp
pop
and
cwtl
sub
mov
dec
mov
jne
or
sub
cmp
sub
cmp
std
mov
in
pop
cmpsb
imul
in
test
and
inc
sbb
push
cwtl
daa
sub
lcall
inc
lods
inc
adc
jbe
sbb
lret
mov
lods
push
push
call
sbb
dec
loope
test
lds
sub
faddl
pop
pop
lahf
mov
add
pop
xchg
int
mov
push
sub
stc
sub
or
inc
ds
mov
dec
inc
inc
stc
push
jns
push
xor
fnstenv
out
out
xchg
out
cmpsl
ret
mov
jns
jecxz
jnp
movsb
pop
ja
sub
inc
inc
lods
js
cli
xchg
mov
xor
lods
cmp
pushf
je
jg
cmp
mov
subl
jae
push
fidivs
mov
jae
inc
sub
mov
fisttpll
insl
sub
dec
call
sbbl
adc
lcall
sbb
mov
adc
pop
jne
jle
lock
popf
xchg
inc
xor
stc
aam
push
inc
roll
dec
rcll
loopne
in
lret
mov
push
int
push
add
add
cmp
lret
fidivrl
or
jae
es
inc
jge
push
stc
test
incb
and
push
mov
lret
cmp
xlat
flds
out
shr
idivl
cmc
lods
movsb
mov
adcl
dec
pop
arpl
mov
mov
cld
mov
pop
cltd
xor
and
xchg
fdivl
cmp
inc
sahf
push
mov
gs
cmp
mov
mov
lea
mov
pop
add
sbb
shlb
sub
test
rol
sub
jmp
mov
loop
mov
adc
aam
lret
dec
loope
mov
jo
rolb
scas
xchg
mov
ret
push
repz
jo
push
scas
adc
fistl
fstps
adc
ret
leave
pop
mov
in
aad
cmp
push
push
mov
jge
push
fs
dec
cmp
pusha
mov
or
inc
or
test
push
xor
test
adc
jno
mov
add
out
cmp
adc
dec
dec
mov
adc
dec
or
pop
push
and
cmp
xor
lcall
jns
dec
arpl
xor
sbbb
mov
lods
jp
outsb
pop
into
imul
xor
mov
xchg
stos
shlb
mov
roll
xchg
mov
pop
cmc
pop
rcrl
loop
lahf
sbb
ret
pushf
xor
cmp
push
push
mov
jo
popf
jnp
gs
jecxz
mov
prefetchwt1
aam
lcall
movl
int3
sub
sub
dec
gs
mov
jns
or
fcoms
mov
mul
mov
jge
and
test
pushf
xor
sbb
or
adc
inc
sti
and
sahf
jo
data16
clc
jae
mov
and
xchg
sbb
fwait
or
xchg
add
in
js
andb
icebp
sbb
dec
cmp
lock
push
mov
pop
aad
jnp
in
jb
movsl
mov
sbb
test
fsubrs
mov
mov
push
dec
sbb
out
shlb
out
fisttpl
or
lcall
out
in
jg
mov
push
nop
add
iret
es
jle
mov
cmpsl
test
xchg
addl
loop
or
push
push
mov
pop
iret
mov
and
cmp
push
std
inc
clc
mov
leave
pop
or
jns
lds
fcmovb
fcoms
sbb
mov
push
lcall
or
fs
xor
adc
mov
mov
adc
cwtl
adc
or
and
xchg
sub
test
fisubrl
inc
add
inc
in
outsb
mov
cltd
ss
jno
shrb
insb
cmpsl
arpl
add
inc
outsb
and
scas
mov
test
mov
aaa
xchg
addl
inc
pop
daa
dec
out
cs
test
lahf
adc
mov
pop
maxps
repz
ljmp
mov
stos
popf
sub
cld
stos
sbb
cmp
sarl
fsub
mov
dec
mov
mov
in
ljmp
inc
ja
sbbl
lock
jl
test
or
aam
sub
outsl
adc
mov
pusha
xor
test
sub
je
mov
push
add
lea
aad
sbb
add
mov
scas
mov
dec
stos
add
mov
movsl
lock
adc
addr16
push
test
push
xchg
fidivrl
inc
mov
test
pop
lcall
in
testl
fsubs
jl
push
repz
push
daa
push
jmp
and
jb
xor
std
inc
cmpsl
inc
inc
lret
in
int3
jmp
jns
ja
es
mov
push
adc
mov
pop
gs
jb
insl
clc
lahf
pop
scas
out
and
push
test
push
adc
shlb
data16
and
push
jae
mov
rcl
inc
int3
mov
test
mov
xlat
ret
pop
pop
add
mov
stos
loope
xchg
mov
inc
mov
push
repnz
fnstcw
jp
lret
out
cmpsb
into
xchg
aam
scas
les
aas
fldt
arpl
mov
icebp
test
push
jbe
cmpsl
cmp
jge
inc
mov
sub
sbbl
mov
and
in
push
adc
or
mov
cwtl
test
and
fyl2x
or
or
lahf
out
rolb
ret
lcall
dec
jae
push
cmp
pop
mov
cmp
pop
cltd
and
frstor
in
fsubs
arpl
repnz
xor
ja
mov
jp
push
pop
hlt
pop
jmp
mov
sbb
cli
inc
xchg
sbb
cmc
lcall
mov
jnp
scas
push
xchg
sub
pop
std
add
and
mov
inc
dec
mov
mov
and
por
cmp
mov
bound
adc
inc
and
cmp
out
fists
pop
mov
dec
push
pop
fbstp
adc
in
add
pop
imul
cmp
xor
adc
cmp
loop
int
rcll
into
jno
cs
or
push
lahf
incb
lcall
test
xchg
test
faddl
ja
jb
sub
lods
inc
imul
inc
and
jno
pop
mov
dec
shlb
cmp
sbb
aas
jge
jo
stos
push
out
mov
cmc
or
lcall
or
dec
shrl
lds
out
into
and
lds
add
cmp
sbb
negb
cmp
insb
in
sub
mov
iret
xchg
xchg
sbb
cmc
xchg
int3
inc
adc
je
xchg
dec
add
test
adc
mov
pop
and
nop
out
sbb
mov
push
out
scas
inc
ret
adc
insl
fcompp
cmp
jp
out
popf
cwtl
testl
pop
xchg
jbe
les
call
mov
fisttpll
push
daa
adc
sarl
mov
mov
or
xchg
ss
arpl
dec
test
pop
add
hlt
xor
rcll
cltd
mov
inc
add
cmp
mov
cmp
xchg
push
cmpsl
dec
mov
outsl
movsl
lock
movsl
jl
test
mov
cmp
in
push
shl
mov
xchg
pop
movsl
jne
cs
add
mov
mov
add
andl
cmp
scas
repnz
repnz
cmpsb
imul
cli
cmp
mov
ret
push
add
cmp
je
cmp
dec
xor
in
shll
test
movsb
or
pop
xor
insl
add
push
inc
xchg
xor
push
sbb
jno
shr
in
push
jl
xchg
lods
jns
xchg
rorl
mov
push
mov
sarl
scas
call
mov
frstor
ficoml
mov
in
xor
sbb
or
inc
xchg
mov
push
daa
and
pusha
xor
pop
cmc
xchg
imul
jl
jb
dec
pop
ss
mov
negl
pusha
std
loope
add
outsb
int3
inc
pop
imul
mov
sarl
ficompl
in
out
cmpsb
notl
jbe
mov
xor
push
sti
xchg
addb
jg
mov
cmpsl
mov
adc
sub
mov
rorl
jmp
lahf
fldenv
jle
icebp
insl
mov
testl
ds
push
mov
push
int
jp
jns
and
in
or
leave
inc
push
mov
cmpsl
fwait
sbbl
shlb
mov
pop
mov
ss
in
lock
xor
pop
jae
scas
and
iret
jne
mov
push
call
lds
test
adc
ss
jno
push
xor
dec
fwait
movsl
push
fistl
jmp
cmp
sbb
pop
xor
or
fsts
mov
mov
idivb
mov
gs
lock
cmp
test
cmp
movsl
add
aas
dec
adc
cmp
cmp
add
popa
repz
lahf
cmp
push
mov
mov
gs
and
sub
mov
iret
mov
jae
jmp
cmc
mov
push
add
in
mov
dec
dec
stos
cmp
lahf
repnz
ljmp
cld
mov
push
mov
dec
xor
push
nop
cmc
xor
jmp
push
les
mov
shlb
or
cwtl
jns
shrb
add
jb
cld
mov
scas
mov
cmp
add
scas
cli
mov
and
mov
jae
jae
add
popf
stc
jle
mov
inc
fidivs
enter
sbb
dec
ret
inc
rcl
dec
cs
repnz
aad
js
lods
mov
add
aaa
fldenv
inc
packssdw
insl
add
jecxz
jns
mov
leave
bound
cmp
lods
outsl
push
push
xchg
adc
jb
daa
inc
cs
xchg
xchg
enter
and
pop
inc
xor
sub
pushf
hlt
loopne
gs
nop
xor
test
aaa
sbb
shlb
jns
mov
arpl
pop
fdivrl
push
mov
sub
cmp
cmpsl
push
sbb
sub
cltd
lahf
and
stos
loopne
push
or
cmp
xchg
or
jg
nop
leave
jbe
mov
and
pop
aas
sahf
and
pusha
sahf
pusha
lcall
mov
inc
pop
mov
mov
mov
les
pop
aaa
xor
ds
iret
popa
mov
fdivl
clc
push
adc
push
clc
sahf
push
movsb
xchg
pop
inc
test
repnz
cmp
repz
sbb
sarl
cld
cltd
lahf
cmc
int3
in
ja
sbb
inc
fidivl
lret
lahf
shlb
jae
loopne
mov
imul
mov
sub
daa
inc
inc
push
or
mov
pop
dec
or
test
test
ret
fs
and
pcmpeqd
outsb
inc
inc
push
std
mov
sub
daa
xchg
add
cmpsl
cmp
aad
leave
jbe
mov
mov
stc
movsb
cmpsb
repz
xchg
push
and
jg
ret
in
mov
and
icebp
mov
gs
adc
aaa
je
pop
dec
xchg
call
sbb
adc
rol
leave
int
xchg
push
jbe
sub
fstpl
pop
decl
push
push
in
xchg
arpl
sahf
fdivs
lock
rcrb
imul
ret
push
lock
sbb
enter
dec
in
fcomps
out
cld
adc
or
repz
lcall
cmp
loope
mov
dec
rclb
aas
pop
aas
decl
sub
xchg
xchg
mov
xor
inc
push
hlt
inc
sub
and
xor
imul
add
insl
cmp
sub
adc
ret
mov
int
imul
xorb
xor
inc
pop
scas
in
lret
and
or
xchg
inc
fdiv
out
test
dec
ss
lahf
xorl
push
cmpb
scas
jns
out
cltd
push
fwait
or
mov
pop
into
leave
dec
jmp
pop
jb
fcomp
aas
dec
adc
cltd
js
mov
sbb
cltd
xor
add
push
gs
bound
call
sbbb
sbb
xor
adc
pop
arpl
nop
daa
clc
xor
je
xchg
cltd
mov
dec
mov
adc
lds
pop
and
mov
xchg
jmp
rcr
cmp
shl
sarb
and
pop
rol
sbb
jle
add
add
andl
faddp
sbb
dec
rcll
sbb
xchg
fbstp
jns
fisubrs
movsb
std
mov
into
int
or
or
inc
sbb
pop
in
inc
pop
lahf
sub
adc
out
push
aam
ficomps
test
dec
mov
sub
scas
adc
test
inc
xor
inc
hlt
pop
mov
pop
insb
cmp
push
cmpsl
and
or
addr16
adc
fnop
dec
cltd
psubusb
jns
mov
cwtl
sbb
xchg
jmp
sbb
push
and
push
push
and
cmp
lret
push
movsb
pop
scas
out
jge
imul
test
test
mov
sub
sub
xchg
fs
xchg
push
movsl
xlat
jle
dec
in
lock
dec
or
fmul
or
cwtl
jl
mov
and
pop
insl
and
xor
ja
sbb
push
ja
clc
xchg
mov
jg
add
mov
stc
test
mov
addl
xor
pop
sbb
mov
sbb
jae
sahf
xor
xchg
add
cmpsb
inc
lret
bound
cmp
outsb
add
mov
fs
in
lahf
xor
lods
out
js
pop
rcrb
jp
cli
cmpsb
pusha
push
jmp
xchg
jle
cmc
out
push
jg
xorl
iret
test
jbe
negb
xor
testb
out
test
sub
lea
rorb
xchg
imul
push
pop
out
sti
out
enter
mov
adc
in
test
icebp
add
jnp
jns
push
pushf
sbb
je
mov
inc
cltd
hlt
cmp
dec
and
mov
ds
sub
mov
dec
jo
repnz
inc
arpl
jg
dec
add
mov
out
iret
cmpsb
fwait
in
aaa
cmp
pop
cli
adcl
in
mov
lret
lods
filds
adc
mov
jne
fwait
add
outsl
das
scas
and
std
mov
setbe
sahf
popf
stc
in
and
jecxz
lea
ror
in
jle
imul
inc
mov
fcoms
outsb
xchg
xor
cmp
pop
xchg
out
xchg
cmpsl
xor
xchg
mov
xor
sbb
mov
pop
loopne
mov
push
adc
add
push
mov
push
xor
out
mov
xor
ret
into
loop
dec
cmp
jae
test
arpl
push
rolb
pop
jg
mov
dec
mov
sbb
sahf
pusha
je
xchg
cmpb
cmp
lcall
icebp
push
popf
mov
mov
inc
dec
push
jmp
lret
mov
mov
aam
mov
movsb
add
pop
xchg
or
adc
push
pushf
sbb
scas
jb
stos
insb
inc
mov
mov
push
cmp
push
mov
outsl
push
fs
in
or
dec
lock
out
jb
ret
lret
pop
lahf
mov
cli
or
sub
cmp
aam
fldcw
xchg
dec
jecxz
lcall
cmpsl
cmc
mov
loopne
adc
scas
sahf
lods
mov
into
jo
ljmp
stos
fldcw
or
push
enter
or
sbb
jl
jne
xchg
sbb
push
fcmovnb
lods
push
and
arpl
stos
add
push
adc
mov
pop
xchg
sbb
and
cmp
roll
cmpsl
sub
shrl
aam
sbb
test
mov
adc
xor
cmp
psubsw
adc
inc
loop
adc
lcall
pop
aaa
push
repnz
scas
das
lea
adc
adcb
ja
or
leave
cmpsb
mov
jmp
cwtl
pop
popf
leave
push
dec
add
push
xor
mov
mov
xchg
test
xchg
daa
ljmp
fwait
cmpsl
mov
push
out
or
xchg
xchg
stos
sub
or
inc
push
inc
out
xor
lcall
jmp
pop
jne
fstpt
pmaxub
mov
imul
lret
push
shll
pop
jle
sub
dec
mov
jecxz
testl
lea
mov
test
jno
xor
in
adc
out
les
repnz
inc
adc
pop
out
jle
or
in
ret
push
insb
cli
pop
push
push
xchg
leave
addr16
xchg
mov
push
lods
in
cmp
mov
andb
jle
jo
mov
aam
enter
jecxz
lock
xchg
jae
xchg
andl
popa
pusha
sub
adc
xchg
xor
xchg
xlat
adc
loop
lret
pop
ja
xor
xchg
data16
and
xchg
add
add
out
scas
push
xchg
fs
xchg
orl
shlb
shlb
je
nop
ljmp
lods
clc
lret
aad
sub
call
test
push
jb
packssdw
xorl
inc
pusha
cltd
stc
gs
mov
jecxz
adc
das
xor
imul
mov
ret
jne
nop
lock
jecxz
push
cli
add
mov
dec
jb
out
xchg
stos
addb
adc
push
fisttpll
stos
sbb
in
mov
pop
dec
leave
rol
addr16
jp
int3
out
rcr
xor
mov
sbb
push
loopne
xor
inc
jle
ret
sbb
pop
push
pusha
ss
mov
dec
and
inc
fcmovbe
and
lods
out
mov
lret
jge
das
adc
pop
and
ret
leave
jne
outsl
in
arpl
into
ss
jb
sub
pop
xor
adc
and
enter
and
or
outsl
cmp
pop
call
repnz
fdivs
xchg
decb
adc
iret
mov
mov
mov
in
daa
push
mov
xchg
or
cltd
cmp
aad
push
pop
pop
mov
rorb
push
mov
inc
pop
inc
xchg
mov
adc
dec
testb
or
or
mov
push
push
pushf
and
push
sub
adc
ds
inc
dec
div
sarl
popf
mov
insb
bound
and
cwtl
shlb
sti
loop
jge
xchg
inc
push
cmp
clc
jne
jnp
push
fldcw
frstors
aam
aaa
in
cmp
inc
idivb
lock
adc
pop
leave
dec
or
cmp
sub
fisttpll
and
std
shlb
lret
cmp
pusha
cld
hlt
hlt
inc
iret
xor
fisttpl
pop
lods
sbb
adc
cs
nop
test
dec
lret
mov
inc
pop
push
xchg
aad
ret
aas
push
popa
cmpsl
outsb
jl
aaa
int
cmp
push
aas
pop
pop
jg
and
mov
pusha
stos
cmp
dec
xor
popf
dec
mov
popa
adc
xchg
adc
adc
mov
into
jmp
fwait
push
movsl
cmp
push
call
pop
iret
push
mov
fdivrs
and
mov
movsl
out
mov
jl
push
push
scas
adc
mov
ret
xor
repz
lret
pop
sub
lahf
mov
bound
lret
nop
pop
cld
inc
jne
mov
fbld
or
repz
adc
dec
jecxz
rolb
push
xor
push
fdivr
inc
mov
xor
scas
divl
sub
inc
pusha
lcall
sub
lret
loopne
pop
push
outsl
inc
ficomps
fsubs
pop
jae
pop
push
and
adc
leave
loope
jns
lods
sub
lods
jo
rcr
mov
data16
test
sub
fst
out
jle
jbe
pop
cmpsl
mov
or
mov
aaa
gs
and
iret
fs
jbe
aaa
push
jno
iret
cwtl
push
pop
dec
gs
mov
sub
ss
cld
js
cmpsb
shrb
fldl
jl
repz
outsl
xlat
rol
pop
mov
jecxz
movsl
jl
or
ret
push
cmpsl
cmp
mov
cmp
je
data16
sbb
mov
clc
pop
ret
inc
cmp
sarb
mov
lock
daa
data16
sub
mov
jne
mov
aad
mov
sub
daa
clc
lcall
inc
pushl
js
fs
dec
dec
inc
adc
inc
push
ss
mov
pop
int3
loopne
push
imul
imul
mov
test
hlt
mov
adc
sbb
into
and
int
add
in
and
xor
pop
inc
push
pop
sub
push
test
inc
fdivl
cli
mov
dec
push
mov
cwtd
test
add
or
mov
xchg
sub
popf
jae
dec
cmp
mov
loop
pop
outsb
and
fdivs
xchg
cld
mov
loopne
or
bound
adc
jp
mov
mov
shlb
mov
dec
insb
sti
mov
subb
or
scas
pop
fsubs
push
cmp
or
jb
out
imul
mov
xchg
clc
in
mov
sub
lds
lret
add
pop
mov
in
xchg
push
pop
fdivrs
loope
sbb
cwtl
jge
cmp
adc
push
ds
in
mov
nop
mov
vpslldq
shll
sub
stc
data16
xchg
test
paddb
in
nop
push
insl
andl
call
stos
mov
mov
mov
add
dec
and
ds
mov
popf
and
jmp
daa
mov
fwait
cmp
inc
icebp
das
lock
test
ret
aas
or
mov
adc
jne
xchg
push
lahf
mov
inc
pusha
xorb
pop
adc
dec
mov
stos
mov
adc
push
sbb
pop
shrb
lods
dec
jle
jecxz
pop
dec
and
xor
shll
adc
pop
shll
pop
push
outsb
add
mov
mov
add
nop
pusha
or
gs
push
sub
mov
inc
dec
out
cmp
adc
or
scas
mov
pop
xor
add
and
sbb
mov
arpl
fistl
aad
les
cmp
es
push
imul
fcmovnb
and
adc
mov
dec
xor
dec
pop
inc
mull
sub
sbb
js
scas
adcl
inc
push
roll
sub
push
aas
add
in
pop
stos
out
push
repnz
aas
insb
push
mov
fdiv
push
insb
mov
sbb
or
arpl
jns
pushf
shl
out
push
inc
js
mov
or
outsb
or
ret
cwtl
cmp
popf
insl
insl
hlt
pop
aaa
dec
mov
xor
and
adc
enter
pop
in
int3
xchg
fnstsw
movsl
imul
mov
and
js
xchg
sub
mov
daa
ret
loopne
cmc
int3
add
mov
adcl
out
adc
cmp
sub
xor
or
cltd
mov
adc
pop
ret
mov
lret
mov
mov
pusha
stos
int
cmp
mov
pop
cmp
mov
mov
adc
test
or
scas
push
sbb
icebp
movsl
incl
ljmp
clc
mov
mov
pop
cmp
jnp
in
and
pop
ds
cwtl
jb
shrl
dec
aaa
sbb
es
sbb
cmpb
adc
scas
sbb
leave
int3
jae
es
sbb
add
std
jns
sub
dec
cli
cmp
xchg
clc
outsl
pop
out
lds
jb
fs
cmp
mov
insb
mov
lret
lahf
mov
andl
and
arpl
xchg
aas
xor
jg
faddl
mov
add
leave
add
sbb
add
jle
aaa
push
aad
push
jae
dec
fwait
in
cmc
xor
jno
lods
inc
pop
shrl
cmp
dec
mov
jae
sahf
jmp
daa
mov
or
inc
pop
inc
sub
aas
loope
es
xchg
mov
sbb
xchg
xor
loope
call
push
inc
mov
mov
shlb
insb
jge
sbb
dec
and
rcr
push
jecxz
pop
adc
pop
inc
das
out
jp
mov
in
xchg
pcmpgtb
sub
add
outsl
cmc
inc
ret
fadds
push
jb
pop
sbb
cmpsb
hlt
test
sub
push
mov
clc
cmp
mov
mov
sub
hlt
data16
pusha
mov
jg
shr
out
sbb
shl
arpl
push
test
dec
adc
add
cmpsl
push
into
mov
stos
push
mov
dec
out
jle
mov
cwtl
and
int
insl
or
cltd
add
and
jle
cmp
sbb
iret
insl
stc
sbb
loop
xchg
mov
add
mov
cmpsl
lods
imul
jp
movsb
cmp
popf
dec
out
lods
aaa
or
scas
insl
inc
push
mov
jae
je
call
dec
push
jecxz
xor
int3
sbb
lahf
adc
ljmp
jno
jb
movsl
cmp
xchg
pop
bound
ds
jb
hlt
pop
and
jnp
dec
inc
scas
dec
negl
outsb
lods
mov
jb
rcrl
lods
daa
fs
cmpsb
push
pop
mov
cmp
mov
fmuls
inc
fldl
mov
in
sti
push
and
rorl
fsubrp
bound
repz
push
mov
mov
and
test
fcmovne
and
mov
mov
fbstp
sbb
lret
pop
pop
and
add
mov
clc
pusha
icebp
mov
or
sbbl
dec
pop
out
adc
sbb
add
lods
xor
jle
lcall
and
cmpsl
push
xor
lock
xchg
mov
and
push
loop
mov
inc
test
bound
dec
pop
sub
test
jle
sbb
stos
lds
and
das
rcrl
in
std
mov
shll
idivl
inc
sub
pop
fcmovb
scas
in
pop
mov
pop
cmpsl
outsl
das
ds
pusha
nop
imul
add
and
or
daa
push
cmp
dec
mov
jns
lret
lret
cmp
fstps
inc
fdivrs
mov
sbb
lret
sbb
pop
test
insb
xchg
fsubl
push
fsubrs
in
and
mov
loope
jae
add
mov
inc
outsl
xchg
gs
inc
mov
jae
in
leave
xchg
icebp
inc
cmp
fisubrl
bound
cmc
icebp
xor
stc
pop
xchg
mov
jge
mov
out
lds
xor
jo
bnd
sub
subb
aaa
leave
pusha
movsl
mov
or
mov
fildl
and
push
cmp
or
mov
sub
in
cmp
push
push
xor
pop
mov
pop
in
push
jb
push
loop
mov
cmp
xchg
test
imul
movb
jmp
jmp
pop
out
xorl
ds
jno
lea
outsl
xor
sbb
hlt
ljmp
fnstcw
adc
add
inc
push
add
repnz
or
mov
bound
xchg
outsl
mov
into
outsl
add
sbb
and
aaa
and
add
movsl
push
popf
add
jg
sub
test
aas
mov
cmp
ja
pop
cmpsb
mov
sbb
mov
js
and
add
add
xor
jae
mov
lret
xchg
push
aad
js
scas
out
stc
sbbb
arpl
insb
and
sub
pop
sbb
add
bound
mov
add
mov
insl
push
out
push
into
adc
arpl
xor
push
ja
int
nop
push
imul
sti
push
push
cmp
inc
jno
xor
mov
xchg
notb
rcrb
sbbb
popa
in
adc
sarl
hlt
mov
add
xor
push
loope
pop
ds
adcl
inc
test
ljmp
mov
push
data16
xchg
mov
add
call
mull
cwtl
into
ret
std
lcall
in
push
jns
xor
dec
cmp
mov
insl
sub
push
test
std
or
pop
aaa
negl
andb
sbbb
push
and
in
dec
inc
inc
and
push
jae
lods
jge
test
add
mov
aas
inc
xchg
inc
pop
adc
out
add
lahf
pop
repnz
add
scas
push
add
dec
mov
jmp
pop
bound
push
lret
jl
inc
and
call
dec
cmp
fs
in
pop
dec
dec
dec
sbb
fistps
or
pop
dec
mov
mov
xor
je
ss
insl
aam
jae
stos
inc
outsl
test
cld
iret
loop
jbe
insl
mov
jne
and
inc
mov
cmpb
dec
cmpsb
aad
jl
inc
cmp
arpl
mov
int
lret
popa
cs
shrb
in
pop
pushf
mov
and
add
push
clc
push
vorps
mov
outsl
jnp
aad
xchg
push
xor
mov
add
add
es
fistl
cld
jbe
xor
fmulp
ds
cmp
push
ror
clc
in
divl
jmp
pop
inc
pop
push
xchg
or
sub
inc
sbb
lahf
sbb
out
jle
sarb
sbb
loopne
mov
mov
or
int
inc
and
inc
xlat
ret
xchg
rcpps
xchg
sbb
enter
adc
movsb
and
in
xor
or
mov
mov
fidivrl
or
mov
sbb
add
dec
fcompp
out
ljmp
or
mov
stc
xchg
arpl
cltd
mov
subb
scas
lods
push
js
pop
push
mov
sbb
add
ja
jg
pop
test
aam
dec
cmp
pop
je
nopl
shrd
cwtl
lods
pop
cmp
cs
or
sub
cmc
mov
pop
mov
not
mov
idivl
shrb
jns
shlb
mov
scas
mov
inc
push
add
lods
sub
sub
cmp
iret
sub
push
loope
inc
xor
imul
lahf
xchg
sub
sarb
int3
cmp
dec
xchg
sbbb
jno
mov
jae
cs
stc
pop
repz
cli
cli
aad
mov
loope
js
aas
pop
and
ds
test
subl
sbb
lds
icebp
mov
stos
mov
sbb
sahf
mov
sbbl
jo
jmp
xrelease
add
mov
arpl
mov
jbe
pusha
imul
lock
scas
push
jg
fnstsw
pop
es
dec
fidivs
into
daa
mov
push
and
xchg
fimull
push
add
push
lret
jg
inc
cld
and
leave
xor
jns
lea
adc
inc
jmp
insl
cmp
xor
or
test
dec
cmp
outsl
xchg
cmc
sbbl
lds
inc
mov
fs
icebp
pop
popf
add
mov
addr16
jmp
dec
or
dec
and
rorl
in
cmc
mov
cmpsl
mov
dec
or
pop
mov
lret
jb
shrl
sarl
fs
sbb
adc
inc
hlt
dec
daa
shrl
movswl
push
and
lahf
test
jmp
ds
ret
mov
daa
mov
out
outsb
sub
sub
cmp
rclb
sub
xor
movsl
inc
test
cltd
insl
dec
mov
xchg
orl
cwtl
stos
mov
lds
ret
push
movaps
fcoms
fabs
lret
mov
jmp
inc
rorb
xchg
out
lcall
cld
cmp
lret
mov
aam
mov
pop
decb
sbb
pop
dec
inc
add
cmpsl
push
out
test
pop
icebp
mov
add
gs
mov
cmp
std
orb
push
dec
cld
mov
jb
sti
mov
ret
std
jb
dec
sub
mov
test
cmp
repz
xchg
dec
cmp
repnz
xchg
cs
mov
mov
sbb
xchg
inc
outsl
cmp
into
gs
pop
cmpsl
inc
shrb
mov
push
int
jns
jmp
push
adc
mov
xchg
cmp
mov
test
test
inc
jle
js
pop
cmc
unpckhps
shlb
jl
push
pop
mov
fmull
add
xor
outsl
push
pop
addr16
push
iret
cld
jne
cmpsb
mov
push
pop
push
xorb
popf
xor
pop
orb
mov
cmpsb
into
mov
icebp
mov
lods
jo
stos
icebp
and
imul
xchg
mov
sub
flds
data16
cli
cmp
ljmp
adc
testb
xor
std
mov
std
push
pop
stos
inc
pop
or
lret
cltd
fdivrl
adc
loopne
jo
insb
mov
mov
xchg
js
xchg
imul
les
xor
loopne
mov
xor
lock
and
icebp
sahf
fwait
std
enter
shll
ret
mov
xchg
lods
stos
mov
push
int
mov
ja
in
sub
cmp
or
push
adc
orb
leave
sub
or
out
mov
jns
inc
int3
outsb
fdivrl
bswap
dec
and
bound
icebp
int
mov
inc
out
push
sbb
mov
stc
fsubrs
add
mov
or
mov
or
sbb
pop
shrl
iret
or
clc
in
in
push
mov
inc
and
add
pop
mov
jnp
ficompl
xchg
out
xor
aaa
mov
or
shll
icebp
push
inc
dec
adc
pop
mov
xor
sub
in
mov
mov
push
subb
pop
push
xchg
shll
sub
jns
push
pop
push
stos
xchg
xor
cmc
movsb
hlt
adc
popf
and
jmp
hlt
mov
mov
mov
out
cmp
push
cmp
sbb
out
pushf
mov
addr16
mov
loopne
subl
adc
xor
xchg
push
inc
mov
cmp
mov
sbb
pop
adc
imul
adc
cmpsl
mov
aaa
push
and
fdivrl
scas
shll
cltd
rorl
adc
arpl
xor
lea
or
dec
mov
pusha
and
dec
pushf
scas
jge
mov
push
xchg
fidivl
jle
dec
pusha
jnp
pop
insb
jb
adc
mov
cld
push
pop
push
add
repz
jg
insb
imul
mov
loope
pop
sub
jle
jnp
repz
pop
inc
mov
pop
in
mov
xchg
es
movsb
sti
enter
xor
fisubs
icebp
stos
sub
movd
jo
jne
pop
or
enter
loopne
mov
mov
jmp
jg
repz
and
aam
mov
adc
mov
pop
int
jp
jle
jle
push
sbb
fwait
into
subb
xor
cmc
push
adc
pop
es
xchg
sub
enter
data16
jne
insb
inc
sbb
xor
push
lds
mov
shlb
shl
in
jg
dec
fldl2t
test
or
and
movsbl
mov
xchg
sub
shll
shlb
iret
insb
cltd
call
pop
sahf
xor
fwait
repz
mov
cvtps2pd
mov
sub
call
mov
enter
pop
shr
insl
les
or
scas
sbb
addr16
sti
sbb
aas
fadd
sahf
or
ss
jecxz
daa
mov
inc
lahf
inc
and
test
outsl
cmp
jnp
ds
je
and
shr
dec
and
jnp
mov
or
jmp
push
scas
mov
int3
push
add
repnz
pusha
or
add
jg
dec
icebp
pop
dec
fistps
gs
dec
push
mov
dec
inc
outsl
aam
mov
push
std
push
inc
mov
in
fwait
mov
mov
adcb
pop
addr16
bound
ficoml
mov
and
aam
in
xchg
mov
lahf
sbb
lcall
push
fidivs
into
jmp
sbb
ja
aas
popf
mov
cmc
insl
addr16
popa
push
xor
sub
pop
test
sbb
daa
jp
fucomip
lds
in
imul
pavgw
add
pop
addl
inc
fsubl
shll
mov
aam
lds
loope
jp
dec
pop
lcall
loopne
scas
jmp
inc
inc
sbb
test
mov
and
das
xchg
and
jl
xor
push
pushf
jp
jmp
scas
jecxz
sbb
dec
test
subb
xor
arpl
movsb
cmp
pop
stos
aam
sub
lea
add
sbb
jp
push
pop
xchg
out
aaa
dec
cld
mov
test
sbb
inc
or
sbb
adc
testb
dec
cmpsb
and
push
stos
xchg
push
and
jae
xor
lahf
ja
jp
in
fwait
cmpsl
mov
jo
int3
pop
xor
leave
jo
mov
xlat
push
inc
mov
pop
sbb
sub
test
xchg
dec
jge
jl
stos
loop
push
shrl
cmpsb
lock
repz
decb
jge
cvtps2pd
rol
sub
jno
cmp
addr16
lahf
aad
sbb
imul
sbb
movb
repz
stc
lcall
dec
icebp
sbb
pop
push
and
xchg
fsubrs
pop
jle
lea
negb
and
pop
mov
gs
cmp
push
mov
ds
cmp
mov
cltd
shll
and
rorb
lods
mov
outsl
inc
jp
mov
jp
lock
push
mov
fwait
mov
out
arpl
stos
orl
hlt
movsb
xor
aad
lret
repnz
xlat
jbe
daa
loop
pop
outsb
pop
add
mov
sarb
nop
cld
cmp
fdivrl
cmp
ja
lea
pop
rcrl
sbb
adc
lcall
sub
imulb
enter
test
lret
push
jns
push
pop
std
adc
clc
notb
pop
push
adc
ljmp
repnz
lcall
sub
test
es
ficoms
addr16
jbe
cmpb
aad
jmp
rcrw
sub
js
mov
jae
jbe
movsb
mov
cmpsb
and
xchg
outsl
mov
std
xchg
cmp
fs
cmp
cmpb
lods
mov
mov
jbe
add
xchg
outsl
mov
dec
and
jl
gs
out
into
push
in
sbbl
xor
sbb
data16
lret
adc
fdivr
mov
dec
xchg
test
loopne
stc
dec
test
sbb
lahf
cmp
ret
xchg
leave
repnz
cmp
sti
pop
sub
jmp
mov
inc
lods
sar
mov
cmpl
inc
mov
mov
jge
mov
sbb
push
pop
movsb
leave
adcl
popa
sbb
jne
pop
jo
cmp
subl
cld
add
pop
mov
outsl
mov
daa
rcr
sbb
sub
loope
push
inc
sbb
je
xor
xor
jg
jns
lret
jl
loopne
pop
popf
aam
jbe
mov
das
sub
xchg
pop
dec
into
lea
negl
loop
push
push
lods
addb
xor
and
scas
dec
mov
dec
ss
xlat
fcoms
mov
stos
nop
in
pop
sub
pop
jnp
push
jb
lods
hlt
jo
out
sbb
push
test
shrb
dec
or
jbe
jno
test
lcall
add
sbb
sbb
aam
ljmp
loope
xchg
arpl
ficompl
imul
rcl
fst
loop
mov
loopne
int
xchg
mov
leave
dec
xor
imul
sti
xor
scas
xorb
xor
scas
push
jnp
xchg
sbb
mov
adc
mov
mov
test
xchg
lds
into
out
push
inc
add
in
inc
repnz
add
push
xor
mov
leave
cld
mov
aas
and
fwait
adc
ds
mov
jne
mov
or
loopne
stos
adc
lods
icebp
aaa
cs
adc
loope
decl
add
jl
lahf
adcb
jp
dec
and
jne
xor
push
inc
outsb
rorb
imul
hlt
mov
pusha
jg
sbb
dec
jecxz
cmp
packssdw
mov
cltd
mov
mov
pop
clc
fmuls
sub
mov
xor
lcall
loop
rcr
dec
sarl
inc
mov
mov
jae
repz
ficoms
outsb
and
std
rcrl
das
push
icebp
stos
inc
stc
arpl
in
and
insl
add
mov
cmc
inc
lods
aad
pop
out
std
test
dec
inc
push
cmp
mov
dec
xchg
stos
jle
shlb
nop
pop
cmp
cmpl
pop
dec
lods
push
mov
stc
dec
jmp
mov
popf
xorl
rclb
cmc
loop
daa
pop
imul
or
dec
rcrb
test
je
jl
lahf
daa
cld
xchg
jp
mov
xchg
and
xchg
subl
or
cmp
mov
ljmp
cmp
lods
fs
sahf
add
push
rolb
repz
rcrb
aam
inc
xlat
test
loop
in
and
pushf
rcll
lock
idivb
into
fsubl
xor
das
ljmp
shl
dec
push
push
dec
arpl
mull
adc
pop
push
add
subl
xchg
pop
mov
jl
out
xchg
sbb
xchg
scas
orb
shlb
loop
call
dec
dec
pop
popa
sti
iret
lock
fsubr
nop
stos
pop
jg
cmpsb
lret
pop
lods
and
and
inc
sub
cmpsb
push
inc
sar
cld
ja
fucom
sub
ljmp
nop
les
cmpsl
divps
loop
cli
jecxz
int3
xchg
lods
inc
mov
stos
mov
cmpsl
ss
cltd
mov
dec
mov
lds
call
fcomp
xor
cmp
cmp
mov
cmp
mov
push
fucomip
test
xor
and
adc
mov
std
sti
cs
push
outsl
fbld
adcl
mov
push
insb
cwtl
test
stos
iret
aad
jne
repz
lret
es
push
repnz
inc
leave
fldenv
int3
xor
mov
push
cld
xor
sbbb
outsl
or
mov
movsl
js
mov
mov
test
add
imul
test
cmc
or
or
out
add
fwait
cld
or
jg
nop
daa
sub
xor
subb
out
lret
pushf
lcall
out
jbe
mov
or
out
pop
mov
and
subb
mov
and
sbb
mov
push
ja
push
xlat
xchg
cmp
pop
jmp
mov
push
inc
sub
lret
jae
cmp
adc
lock
nop
mov
jecxz
sub
xchg
bound
push
loopne
out
pushf
mov
mov
ret
xor
mov
sub
inc
fnstenv
or
sbb
and
js
clc
shlb
inc
movl
push
jmp
sub
cmc
adc
int
dec
out
and
add
jmp
push
jp
jo
xor
pop
sub
xor
mov
movsl
mov
clc
adc
insl
shlb
insb
adc
movsb
sub
and
cmp
xchg
adc
push
xchg
sbb
popa
je
xchg
adc
enter
xor
pop
lret
out
jg
pop
pop
loope
mov
inc
addr16
iret
mov
push
push
cmp
pop
jl
mov
mov
jb
shl
dec
gs
inc
stos
js
cwtl
stos
mov
hlt
lret
cmpb
rclb
pop
repz
rolb
sub
fs
push
inc
lods
inc
mov
dec
negl
sub
add
cmp
jns
mov
mov
pop
out
sbb
adc
nop
cmp
out
loopne
stc
mov
xchg
outsl
cmp
push
lahf
xchg
pop
inc
lret
mov
push
je
test
cwtl
push
out
jmp
jp
sti
mov
and
pop
cld
xor
sbb
jmp
dec
cmp
jp
pop
aam
cmp
mov
pop
ret
ljmp
cmpsl
or
pop
mov
js
enter
pushf
adc
push
je
xor
push
pop
and
into
test
call
xor
pop
jbe
data16
inc
aaa
adc
xchg
jecxz
or
into
outsb
pop
mov
xchg
ret
cmc
sbb
fs
fidivs
sub
adc
insl
in
xor
and
test
aad
mov
dec
ja
repnz
pop
sbb
inc
cmc
repz
pop
insl
xor
cmc
in
dec
pop
xor
sbbl
cmp
mov
mov
cltd
fnsave
xchg
push
and
out
inc
insl
andl
fldl
push
jne
adcb
xchg
jo
fbstp
sahf
shrb
fnstenv
nop
daa
cmc
push
mov
ljmp
insb
mov
cmp
stc
nop
xorl
dec
jg
data16
mov
dec
stc
jmp
stos
jne
or
outsl
jg
cmpsl
add
mov
out
lods
adcl
adc
mov
inc
or
mov
lods
jp
add
lds
cwtl
in
movsb
lahf
arpl
rcr
pop
lods
ja
jmp
addl
or
jb
inc
fsubrl
push
pop
mov
jne
pop
cmpsb
ja
mov
lahf
adc
sti
sbb
ss
jae
push
mov
ret
adc
mov
mov
sub
sbb
xchg
jl
sahf
dec
lea
shl
dec
pop
dec
dec
xchg
popf
mov
je
arpl
mov
mov
sbb
std
add
jecxz
mov
sub
shlb
mov
lods
mov
pop
sahf
call
sahf
xor
imul
mov
loopne
pop
aaa
push
mov
addr16
stc
xor
hlt
test
movsl
add
mov
add
dec
mov
loopne
adc
or
aas
outsl
cmp
pop
stc
in
inc
movsb
sub
mov
jns
cltd
push
add
ljmp
jb
insl
outsb
iret
pusha
mov
iret
mov
out
sbb
jecxz
insb
sub
cmp
jne
pop
outsb
and
push
push
pusha
jno
stos
xor
inc
fidivrl
pusha
popf
je
popa
sbbl
lahf
sahf
enter
mov
movaps
mov
ltr
push
mov
jb
js
sub
lahf
xchg
push
jbe
jmp
scas
and
jb
cmc
dec
sub
xor
pop
jo
jo
mov
push
scas
sbb
sahf
rol
pop
jmp
test
and
or
push
sub
dec
or
cmp
pop
xchg
or
and
sub
or
cs
inc
jecxz
stos
sub
into
arpl
xlat
sbb
xor
leave
loope
stc
into
pop
mov
imul
adc
daa
data16
pop
add
test
outsl
xchg
lock
icebp
aam
cmp
cmpsb
es
lahf
ljmp
inc
fstpl
mov
mov
in
in
xor
xchg
test
shld
mov
pop
sub
push
sbb
iret
jg
pop
mov
mov
movsl
fildll
xchg
movl
aam
insl
shr
sahf
ljmp
mov
les
call
dec
xlat
aaa
sbb
call
loope
pushf
push
repnz
and
adc
mov
je
inc
imul
sbb
inc
cmpb
ret
xchg
push
aad
rcl
or
xchg
add
into
insb
clc
outsl
jo
js
adc
scas
aaa
stos
inc
bound
xchg
fimull
lahf
mov
loop,pt
test
test
push
xor
outsl
sub
mov
mov
sti
push
inc
or
lock
ja
and
lea
cltd
bound
xchg
mov
pop
pop
mov
imul
dec
inc
std
xor
out
mov
fadds
and
add
call
lret
iret
jo
jno
cmp
cmpsl
imul
push
mov
pusha
mov
jg
mov
lcall
sub
xchg
scas
inc
jnp
hlt
sbb
in
dec
arpl
fildll
fucomip
pop
add
js
call
inc
or
xor
test
pop
mov
ret
xchg
aaa
xchg
lcall
aad
call
out
inc
scas
pusha
pop
xchg
add
pop
sarb
inc
and
popf
scas
inc
je
and
test
inc
sub
mov
insb
dec
leave
pusha
adc
in
enter
arpl
not
std
rcr
xchg
pushf
jae
lds
pop
bound
sbb
mov
and
aas
frstor
mov
cmp
sub
adc
xor
mov
adc
lods
test
pop
jb
movsb
xchg
inc
sub
aaa
xor
sub
fbstp
jbe
push
hlt
mov
mov
or
mov
dec
pop
sub
inc
sbb
xor
jle
ds
add
ja
je
fwait
je
xchg
data16
pop
lahf
jo
out
aas
dec
push
mov
mov
and
sbb
outsl
inc
push
mov
jo
insb
lret
bound
jmp
xor
adc
rcll
out
dec
imul
mov
push
aas
push
nopl
or
add
cli
push
fnstenv
pusha
push
fscale
aaa
mov
in
movsl
cltd
jnp
xchg
mov
dec
mov
xor
ljmp
jno
lods
lret
mov
fdivrs
or
loope
sub
mov
fwait
mov
sti
jmp
cmpsb
aaa
aam
push
adc
jns
lods
cltd
mov
pop
xchg
push
into
cmp
mov
rorb
and
stos
sbb
imul
lods
sbb
je
mov
inc
loop
out
sub
insb
ror
lret
mov
adc
push
loope
test
add
or
jl
xlat
mov
pusha
jp
push
fdivs
sbb
add
fiadds
popf
stc
outsl
loope
das
add
lea
xor
pop
jo
in
fcoms
dec
dec
loop
aaa
pop
shll
sbb
xchg
fwait
repz
in
cld
sbb
sub
movl
fstpl
cli
frstor
adc
fcmovb
mov
push
sbb
nop
ljmp
lock
push
dec
stos
dec
xchg
dec
ret
cwtl
inc
pop
int3
dec
adc
push
push
in
fwait
push
inc
jmp
js
in
pusha
nop
pop
mov
and
and
sub
xchg
sbbl
push
mov
or
pop
mov
imul
mov
mov
sbb
jne
negb
mov
cs
insl
jp
fwait
in
int
js
aas
out
mov
lods
dec
jp
fmuls
push
mov
stos
adcb
inc
enter
cwtl
pop
dec
loop
mov
cmp
lock
and
fistpll
arpl
subb
or
not
or
dec
sub
add
adc
andl
jge
call
test
pop
sbb
pop
push
enter
js
pop
add
jg
mov
xor
fucomip
daa
popa
inc
fimull
xor
inc
arpl
jnp
push
fwait
js
clc
test
mov
adc
pop
mov
dec
fistpll
les
mov
data16
sbb
test
sbb
dec
xor
test
inc
pop
sbb
movsb
cmp
sub
jmp
jge
repz
sbb
add
lret
cmp
jle
fisubrl
sbb
push
dec
pop
inc
out
and
out
and
in
test
dec
jno
repnz
popa
add
push
dec
pop
js
andl
lcall
add
jp
inc
sub
in
mov
ja
es
jne
push
orb
dec
loope
pop
scas
imul
fildl
xchg
jo
out
mov
lret
lds
shrb
fists
mov
fstpt
or
add
mov
mov
push
insb
lret
jnp
shr
dec
lcall
daa
js
mov
loop
js
popf
dec
pusha
jp
sarb
xchg
xchg
or
dec
sub
je
sub
cmpsb
enter
sbb
inc
loopne
mov
lock
mov
test
loopne
bound
pushl
xchg
imul
scas
cmp
jno
es
cmp
push
xchg
and
xchg
ss
dec
pop
sahf
fstpt
pop
movsb
cmpsl
faddl
jge
mov
shrl
rorb
inc
faddl
daa
mov
loope
inc
fcoml
fwait
xchg
push
jbe
ljmp
jno
lahf
xor
inc
imul
rcr
jmp
sub
addb
andb
in
das
or
sub
in
js
arpl
outsb
push
out
sti
jae
mov
hlt
nop
xor
adc
je
test
push
aam
mov
pop
adc
lcall
cmc
std
xchg
daa
sub
fidivrs
aad
pop
cli
dec
div
mov
jmp
cmpsl
mov
sub
mul
xchg
inc
sub
or
inc
cmp
das
add
pop
pop
push
dec
xor
and
mov
lret
mov
int
sub
out
cwtl
call
lahf
xor
pop
pop
stos
mov
bound
aam
sub
enter
iret
mov
stos
jbe
cltd
fwait
imul
xchg
cmp
out
icebp
aas
or
fisubrl
loop
bound
popa
hlt
jg
ljmp
addr16
iret
adc
call
call
or
cmp
outsb
adc
scas
andb
add
jle
gs
repz
jl
shlb
dec
outsb
mov
inc
jmp
repz
fs
xchg
pop
inc
dec
adc
repnz
dec
nop
lret
fld
insb
push
imul
sub
pop
or
jge
mov
xchg
pop
call
loope
dec
pop
sbb
daa
add
nop
insl
jbe
imull
cwtl
add
jae
cltd
cwtl
fwait
je
dec
lcall
inc
ror
and
jmp
add
inc
jp
ljmp
js
push
and
xchg
pop
leave
out
insb
sbb
dec
inc
gs
xchg
shrl
mov
push
bound
mov
jle
xor
push
xor
orl
jg
xlat
pop
stos
adc
pop
ljmp
cld
pop
xor
das
lea
sbb
fwait
jno
pop
movsb
mov
mov
inc
scas
and
cwtl
jge
cltd
test
popa
push
scas
push
mov
lods
jns
inc
xchg
adc
dec
lods
movsb
les
addr16
call
lods
mov
jns
or
rcl
ret
hlt
mov
ss
xor
fsubs
fwait
insb
mov
xor
push
jge
xchg
jg
cld
adc
adc
pop
dec
loope
jge
ret
push
inc
mov
sub
mov
cmpsb
in
xor
icebp
dec
push
sub
sub
inc
es
add
fnsave
push
push
sub
xchg
sti
lret
xlat
fdivl
cltd
cmpsl
cmc
sbb
dec
outsl
inc
call
xchg
push
test
outsl
jb
cmp
push
or
movsl
out
adc
push
aaa
jnp
pop
mov
daa
mov
iret
fidivs
add
mov
jge
pop
in
push
into
cmp
inc
in
fmulp
test
stc
nop
pop
stos
xchg
test
popa
mov
xchg
ljmp
xlat
scas
xor
pop
or
daa
cmp
xchg
sbb
fprem1
gs
and
gs
xchg
and
in
std
add
cmp
stos
cld
sub
sub
dec
dec
push
mov
jns
stos
fisttpl
lods
mov
shll
aam
pop
push
mov
mov
andb
or
lock
cmp
dec
leave
xchg
dec
pop
dec
inc
add
fsubrs
loop
cmp
aas
jae
in
shl
out
mov
ds
lds
and
mov
lret
jnp
sbb
xchg
loopne
cmpsb
cs
popa
push
jl
call
mov
mov
and
mov
push
mov
dec
mov
data16
rorl
loop
aas
icebp
cmpl
popa
clc
int3
iret
outsb
xchg
cs
mov
dec
mov
inc
aad
mov
sbb
mov
pop
aas
lea
dec
in
xchg
fnstcw
add
shll
in
xlat
mov
subb
cs
or
in
sbb
xchg
or
call
push
pushf
mov
inc
in
cwtl
daa
fisttpll
sub
push
jmp
fidivl
or
scas
mov
cmc
or
xor
push
scas
sub
or
xchg
lcall
inc
and
loopne
pop
ss
adc
pushf
inc
call
sahf
push
mov
xchg
sarb
mov
mov
das
adc
pop
xchg
sbb
xchg
and
dec
fxam
dec
mov
pushf
sub
std
sbb
cwtl
pop
adc
into
test
push
adc
and
jns
push
cwtl
in
adc
insl
sub
and
subb
shll
push
notl
fs
adc
mov
nop
xchg
test
jnp
loope
out
dec
ljmp
dec
in
jle
dec
or
out
cmp
sbb
fbstp
push
fdivrp
lea
inc
lcall
adc
mov
ja
jl
mov
xlat
or
je
cltd
xor
sbb
adc
add
xor
ljmp
fistpll
rorb
in
pop
enter
js
push
mov
aad
push
add
lds
mov
mov
lea
frstor
xchg
xchg
repnz
fmuls
push
std
sbb
std
std
mov
push
push
stc
pushf
inc
sbb
pushf
shrb
or
add
pop
cltd
int
xor
jp
jbe
xor
aam
jp
pop
cmpsl
or
jl
in
cwtl
cwtl
cwtl
xor
lcall
cwtl
jbe
loop
int3
cmp
dec
cmpsl
jl
in
push
mov
xchg
inc
lret
repz
sub
or
and
xchg
push
pop
lods
mov
add
jp
sahf
push
push
sbb
mov
call
test
repz
xor
int
push
lods
xchg
mov
int
xor
lahf
fsubrs
in
adc
cmp
in
lcall
adc
xchg
adc
mov
movsl
ja
fwait
repz
lret
adc
lods
sub
add
or
sbb
add
es
xor
popa
stos
rcrl
nop
inc
mov
out
lcall
mov
jbe
pop
daa
and
push
jae
xchg
sub
bound
mov
push
bswap
ror
add
dec
ds
rorb
movsl
adc
pop
mov
inc
clc
imull
in
clc
sbb
cli
ret
cmp
pop
das
bound
adcb
mov
and
adc
hlt
cmp
pop
cld
pop
mov
mov
mov
aam
xchg
pop
sti
or
repnz
fimuls
push
int
or
and
bound
mov
push
popf
scas
sti
adc
pop
jb
lods
sub
movsb
adc
sub
cwtl
mov
loopne
jmp
or
out
int3
arpl
adc
ljmp
cld
ds
fdivp
push
arpl
sar
sbb
test
xlat
xchg
mov
jg
dec
movsl
lds
lahf
xor
push
mov
push
xlat
imul
mov
cmp
inc
pop
cltd
push
in
shlb
adc
xchg
mov
pop
rcl
out
test
data16
insl
sub
push
mov
mov
or
mov
insb
lods
lea
jecxz
mov
mov
bound
call
fwait
sahf
and
lock
pop
cmc
adc
ffree
shrb
dec
sub
pop
loop
outsl
mov
sti
xor
jmp
push
mov
andl
mul
je
int3
xlat
jmp
sub
push
sbb
cmp
mov
out
out
push
leave
lea
mov
lods
test
mov
xlat
jns
or
push
mov
loopne
fistl
std
xchg
shll
jns
hlt
sbb
adc
aam
aam
jmp
sub
imul
adc
insl
mov
push
fcompl
fprem1
bswap
sbb
nop
mov
lods
sbb
push
adc
pop
xor
mov
sbb
jp
dec
enter
sub
mov
sub
push
aaa
mov
cli
dec
cmp
cmp
iret
in
dec
out
andl
aam
movsl
xchg
cmp
in
xchg
icebp
mov
jle
sbb
mov
repnz
stos
jbe
cmpsb
adc
pop
dec
call
arpl
mov
sbb
movsb
cmp
icebp
mov
lahf
cs
or
mov
add
add
loop
in
push
add
inc
nop
mov
push
jle
pop
ja
sbb
std
adc
push
mov
dec
add
std
pop
rcll
xor
cmp
fsubl
adc
loopne
cmpsb
push
out
sti
push
test
incb
xor
test
ja
es
test
rol
mov
data16
les
xor
pop
lahf
iret
mov
pushf
lret
and
inc
sub
cmp
mov
mov
vandnps
std
cmp
xor
jmp
adc
mov
andl
add
icebp
mov
mov
daa
push
cwtl
sub
pop
mov
dec
mov
dec
aas
mov
dec
xor
dec
sti
call
out
in
loop
cmpsl
xlat
add
pop
je
mov
test
push
jl
sub
testb
add
sahf
hlt
xor
xchg
imul
pusha
mov
pushf
out
shl
outsb
or
pushf
push
mov
push
adc
push
inc
add
mov
dec
cmp
rcrb
in
mov
cmp
jns
adc
sbb
pop
shrl
hlt
inc
and
outsl
pop
out
sbb
data16
and
push
push
cmp
lahf
shll
fdivrl
in
dec
mov
inc
cmp
rorb
adc
enter
jno
jge
pop
mov
dec
rcll
xor
testb
push
inc
pop
test
and
aas
aad
mov
pop
cmp
jecxz
jmp
sbb
int3
mull
jp
mov
cld
sbb
push
mov
fcompl
pop
out
sbb
pushf
lea
push
mov
mov
shrb
cmp
data16
push
or
fwait
inc
test
mov
and
push
pop
popf
or
pop
push
mov
push
jne
test
xor
mov
pop
cli
imul
sub
mov
cmp
push
sbb
pop
jecxz
sbbl
nop
mov
xchg
push
dec
popf
stc
das
push
pop
inc
cmp
std
push
add
sub
stos
in
repz
mov
sub
lea
xor
push
into
cmpsl
push
js
add
mov
sub
sub
insl
add
dec
xor
mov
add
lcall
std
jl
aam
cmp
or
mov
out
out
lret
xor
adc
dec
push
xor
dec
jns
jne
sub
push
mov
icebp
dec
in
jmp
mov
jbe
loope
lret
push
mov
inc
push
jecxz
pop
sahf
testb
dec
push
mov
lods
jo
push
sub
adc
sub
std
aam
jne
push
add
stos
push
mov
xchg
mov
jecxz
pop
xor
push
sbb
sti
pusha
aaa
mov
gs
leave
pusha
fcompl
out
out
xchg
mov
imul
enter
inc
jecxz
nop
sub
sbbl
pop
stc
ret
out
push
xchg
mov
into
cmpsb
lret
imul
hlt
inc
sbb
adc
enter
and
mov
popa
ss
out
lods
cmp
mov
faddp
add
fsubrl
pop
lcall
rolb
jp
sahf
fsubrl
mov
jbe
cwtl
xor
je
cs
adc
dec
shrl
scas
pop
repnz
inc
stos
mov
xchg
push
cmc
test
push
test
mov
dec
jle
in
daa
jb
lret
pop
mov
ljmp
jg
stc
xchg
mov
or
pop
outsl
xchg
es
xchg
jmp
mov
mov
jle
xor
rcrb
inc
and
in
lods
in
leave
mov
mov
mov
xchg
sbb
in
out
lahf
pop
dec
jmp
cmp
cmp
clc
xchg
sub
in
mov
xor
es
cmc
subl
sbb
sub
jb
xor
insl
pop
inc
nop
fisttpll
movsl
xorl
jbe
sahf
lods
call
cmpsl
cmp
imull
sbb
push
add
cmc
mov
push
test
add
pusha
mov
mov
xor
mov
add
pop
rclb
iret
repz
fs
rcrl
enter
loope
pusha
aam
add
fsubrp
jae
cmpsb
stc
mov
leave
lret
stos
mov
push
cli
stos
adc
aas
in
mov
stos
cmp
pop
outsb
sarb
lret
push
icebp
dec
loopne
aad
cmp
xchg
rcll
fisubrs
daa
inc
pop
ficoml
or
xchg
jl
pop
and
xorl
or
mov
jns
jne
jnp
and
push
mov
scas
dec
and
add
xchg
mov
inc
sbb
fnstcw
jb
or
lock
add
dec
push
mov
fwait
stos
dec
popa
mov
jge
jmp
ss
enter
into
loope
push
sub
or
lds
loope
pop
and
mov
and
push
stos
inc
xor
xor
cld
fcmove
out
mov
cmp
in
hlt
cmp
or
lret
in
inc
dec
adc
xchg
and
std
xor
and
sbb
je
mov
and
push
lods
lods
icebp
sbb
push
iret
xlat
sbb
adc
jge
imul
clc
sbb
nop
cs
cmp
scas
inc
aad
push
insb
sub
add
jp
sbb
in
orb
enter
jl
xchg
ljmp
and
xor
inc
jecxz
xor
mov
adc
rolb
loopne
and
out
push
shrb
mov
sti
shll
jl
and
sbb
xor
subl
add
mov
sahf
xor
cmp
pop
jbe
imul
and
xchg
dec
lods
cmp
call
cmp
loopne
pop
mov
add
push
pop
adc
ljmp
xor
stos
iret
stos
inc
add
push
in
bound
push
data16
arpl
jnp
push
fisubl
jl
fisttpll
and
mov
xchg
jne
jb
lock
fsubs
pop
int3
in
adc
add
and
jno
cmp
inc
int
ja
mov
cs
loopne
adc
imul
xor
inc
dec
inc
dec
outsb
pop
in
xor
or
aas
dec
dec
sub
cmp
aam
call
scas
test
inc
pop
dec
jb
dec
scas
lret
ljmp
push
xchg
pusha
ds
fwait
mov
cwtl
add
fdivl
and
scas
arpl
xor
pop
movsl
push
out
sub
add
mov
add
test
mov
dec
in
sbb
push
fs
or
cmpsl
lret
lea
mov
sub
lock
sub
loop
rol
leave
adcb
lods
aaa
hlt
fldl
jae
xor
jnp
sar
aaa
adc
inc
mov
mov
push
enter
and
je
cwtl
pop
mov
jb
pop
lahf
lahf
adcl
inc
xor
cmpsl
adc
xchg
cmp
inc
push
jmp
push
adc
sub
pop
out
sbb
std
jae
dec
dec
mov
mov
xchg
daa
push
and
ss
inc
and
jae
clc
lods
or
and
push
jo
inc
fidivs
jmp
pop
xchg
scas
jmp
int3
jg
jecxz
pop
sbb
int3
lcall
dec
das
ret
jnp
jno
dec
in
adc
mov
add
push
push
cwtl
testl
xchg
jmp
adc
xchg
inc
mov
fwait
daa
cs
xchg
push
dec
scas
jmp
dec
push
ljmp
xorb
call
add
mov
pusha
mov
inc
dec
add
jmp
mov
out
out
xchg
mov
jae
jae
dec
or
lock
sti
jg
pop
dec
mov
push
fwait
popa
imul
pop
in
jle
pop
push
cwtl
xor
add
add
repnz
and
jbe
xchg
pop
lods
inc
jecxz
xchg
adc
cs
in
ret
sub
mov
mov
mov
fistpll
int
popf
mov
out
dec
jecxz
add
ret
xor
jae
jae
adc
repnz
clc
jb
push
mov
aad
pop
cmc
mov
shll
and
xor
cmp
lock
les
mov
mov
aaa
jg
bound
mov
lret
stos
cmp
ficompl
pop
cmp
cmp
add
jmp
lods
fisubl
inc
cmp
repnz
call
and
cmp
mov
adc
hlt
jae
jns
jmp
or
orl
xor
pop
mov
sub
popf
cmc
test
and
imul
sbb
leave
mov
jge
pushf
decl
in
cli
mov
ss
or
or
ret
inc
int
xor
scas
inc
xchg
mov
push
call
push
ljmp
pushf
ret
xlat
leave
aaa
sbb
out
rclb
and
lea
fidivrs
imul
into
into
push
xchg
ja
xchg
mov
mov
aad
inc
mov
mov
push
ret
inc
mov
jae
sub
out
int
mov
cli
jne
ss
ret
fistpll
into
bound
mov
jbe
iret
ja
repnz
orl
jle
mov
notb
cmp
sub
xchg
cli
out
cs
xor
divb
cli
adcb
dec
data16
aad
or
add
fwait
mov
adc
or
sub
inc
shrb
xchg
movsb
ds
cli
mov
aas
and
cmp
mov
xchg
sub
cmp
pop
in
sub
jle
test
pusha
mov
rep
mov
std
xchg
add
movsb
cmp
xor
xchg
test
lods
push
pop
hlt
aas
into
dec
mov
xchg
push
popf
ret
cmc
xchg
inc
aad
xchg
add
mov
lods
cmp
xchg
daa
inc
test
adc
lret
mulb
xchg
pop
mov
test
rcrl
in
mov
aas
push
or
xchg
sti
fcmovnu
push
outsl
dec
sbb
xchg
in
ljmp
clc
push
mov
push
add
push
inc
sbb
xchg
jmp
mov
xchg
mov
imull
cmp
sbb
add
mov
shrb
cmp
ret
dec
push
addr16
mov
imul
sub
dec
push
pop
adcl
and
call
divl
sbb
jle
sub
cmp
xchg
adc
sti
push
jae
movsw
js
sub
and
lret
mov
fistpl
or
addb
mov
sbb
js
les
js
or
insb
xor
xchg
rol
push
pop
pop
aad
int
loope
fadds
xorb
aam
scas
and
adc
sbb
cld
pop
test
cld
xor
push
add
repnz
adc
js
jnp
jns
test
add
inc
scas
leave
repz
pop
scas
adc
mov
out
or
aad
es
addr16
imul
xchg
aaa
dec
and
sahf
push
adc
sub
jmp
push
add
jle
in
ja
adc
outsb
xor
mov
jge
cmc
mov
jmp
mov
sti
lret
sub
enter
call
mov
ljmp
dec
xchg
scas
pop
mov
jb
call
or
jo
aam
les
and
inc
decl
popa
jbe
add
pop
fdivrs
or
xchg
xchg
ja
ds
sti
decb
in
pop
inc
lcall
pop
mov
out
xchg
ljmp
pop
clc
shlb
mov
ja
dec
outsl
imul
and
mov
mov
xlat
adc
mov
sbb
jo
ffree
cmp
loop
dec
call
fcmovnb
pop
sbb
out
sub
in
dec
lea
ror
out
aaa
adc
xor
cmpl
inc
test
outsb
inc
fld
es
xor
add
mov
dec
jecxz
sub
jecxz
jmp
ret
jl
cmp
push
mov
gs
lock
call
out
xor
cltd
cmpsb
enter
pop
lcall
data16
mov
push
outsb
test
cmpsb
inc
push
and
sbbl
movsb
xchg
jge
vpunpckhbw
insb
pop
insl
add
mov
adc
push
lods
adc
pop
push
popf
dec
pop
mov
nop
imul
lds
xor
cmp
test
ret
sub
movsb
add
inc
cs
inc
push
arpl
pusha
int
rorb
scas
int3
and
push
pop
add
outsl
or
repnz
fbld
cs
ljmp
xor
adc
test
nop
scas
push
inc
cltd
push
dec
lret
addr16
int3
adc
inc
data16
xor
out
lret
out
mov
add
inc
fsubrp
stc
pop
and
adc
pop
dec
xor
popa
stc
and
cltd
jecxz
mov
mov
or
push
jne
aaa
fldt
cli
sar
in
subl
sbb
xchg
test
sahf
mov
fwait
mov
das
xor
incl
dec
aas
push
inc
fmulp
stos
lret
fstl
jmp
or
dec
and
insl
jns
xchg
sarb
imul
cmp
in
arpl
addr16
jb
pop
push
test
sbb
je
inc
sarl
cmp
add
or
add
xchg
push
jno
or
or
push
movsb
shll
mov
add
and
xchg
das
pop
and
insl
add
sbb
pop
roll
xor
loop
xor
pop
jne
jp
cmp
call
arpl
das
mov
test
mov
dec
shlb
out
sbb
mov
fdivl
ja
es
adc
inc
jno
in
push
push
mov
mov
pop
pop
push
dec
jmp
push
mulb
adc
out
mov
sbb
popa
mov
das
push
daa
inc
stc
or
push
test
divb
xchg
fwait
pop
xchg
mov
sub
inc
sbb
rorb
int
jbe
mov
fcmovnu
mov
or
pop
dec
in
out
test
into
mov
jecxz
fst
push
in
dec
arpl
xlat
popf
outsb
add
push
sbbl
mov
out
pop
repz
push
and
inc
mov
cwtl
loopne
insb
push
xor
outsl
cmp
lock
cmp
inc
test
mov
popa
andl
clc
sahf
push
outsl
inc
es
adc
inc
adc
lret
mov
lods
push
in
mov
js
mov
bound
arpl
sbb
lods
js
xor
xor
pushf
push
rcrb
sbbb
popa
pop
icebp
push
pop
popf
ret
js
out
and
xor
notl
xchg
mov
add
aam
sub
cmpsl
cmpsb
frstor
or
and
sbb
inc
scas
mov
mov
imul
cmp
cli
in
icebp
es
inc
push
sub
jle
jnp
xlat
jbe
fcmovne
popa
inc
sbb
cwtl
xor
and
adc
mov
sbb
ljmp
bound
push
xor
sar
jp
xor
push
adc
dec
lahf
rclb
pop
js
les
pop
insl
xchg
adc
ja
repnz
sub
xchg
mov
aas
push
in
jp
pop
lods
ret
fbld
sbb
adcl
imul
pop
inc
pop
ficoml
aas
iret
arpl
jne
gs
in
dec
in
cmpsb
mov
push
add
mov
imul
out
lock
push
sarl
lret
push
cwtl
out
stos
enter
cmp
mov
je
fists
add
stos
icebp
dec
pop
push
fwait
aaa
sarl
mov
insl
and
jae
xchg
imul
pushf
mov
adc
push
inc
and
cmpsl
xchg
lock
mov
adcb
incl
and
pop
aam
dec
xchg
push
adc
daa
add
mov
cmpsb
jmp
pop
repz
xchg
out
mov
pusha
xchg
mov
mov
lahf
lods
inc
adc
shrl
call
push
popf
clc
dec
push
xchg
fs
and
dec
mov
mov
js
dec
mov
adc
rorb
mov
dec
loop
sbb
int
sti
imul
shl
push
sti
fsubrs
cmpsl
mov
sub
xchg
mov
cmp
inc
cmp
pop
aad
add
add
cmp
xchg
mov
movb
fcmovb
sbb
movsl
mov
add
test
cmp
jo
pop
loopne
adc
addr16
in
mov
pop
push
mov
mov
aaa
cltd
mov
mull
sub
or
mov
mov
iret
mov
xor
xchg
je
mov
cmpsl
inc
inc
imul
inc
xor
push
aam
lock
in
push
out
nop
mov
pop
cmpsb
mov
lret
add
fcmovnu
jb
pop
mov
stos
scas
stc
push
pop
mov
xor
push
cmp
insl
cmpsl
mov
dec
arpl
loop
fsubl
daa
xchg
mov
lret
icebp
or
mov
insb
daa
sar
mov
data16
push
popf
adc
fdivs
dec
je
mov
pop
flds
adc
out
add
xor
outsb
add
cmpsl
out
dec
and
lods
aaa
xchg
in
fwait
push
jbe
mov
add
mov
testb
cwtl
mov
dec
dec
in
jg
xor
imul
xor
sbb
sti
jns
sub
push
cwtl
ss
imul
in
js
cmpsb
cmp
sbb
iret
push
icebp
mov
push
add
mov
jae
mov
pop
push
loop
jns
out
cmp
test
std
shr
xor
pop
add
jo
repz
or
sbb
leave
jecxz
cli
stc
aad
cmp
js
push
enter
or
shll
movsb
ljmp
mov
add
xor
js
int3
out
std
std
cwtl
mov
dec
aas
test
daa
xor
sub
fnstcw
movsb
cmp
sub
lds
loope
xchg
in
lds
lret
out
out
jns
pop
lahf
test
mov
ret
xor
sub
fadd
jmp
xlat
movsb
out
in
shll
les
jno
cmp
sub
scas
shll
adc
adc
or
mov
es
mov
test
and
add
bound
xchg
bound
dec
mov
jmp
cmpsl
jmp
popl
test
fidivrs
or
gs
xchg
jp
add
jp
in
fs
das
lahf
fsubrs
fcom
insb
int
jecxz
sub
cmpsb
imul
pop
leave
sbb
mov
data16
lds
pusha
and
popf
jmp
in
fldenv
stos
cwtl
push
jg
popf
push
add
push
dec
stos
inc
inc
adc
popl
nop
daa
xor
loop
jecxz
inc
fsubl
dec
loop
scas
sub
xchg
aad
mov
dec
jnp
and
aam
loop
push
in
mov
test
fidivs
adc
jbe
inc
mov
es
sub
cmp
push
lds
int3
sbb
rorb
xorl
mov
sub
sub
aad
lahf
mov
dec
sbb
fisttps
mov
mov
fidivrs
call
rolb
dec
add
mov
pop
push
stc
dec
pop
inc
add
dec
ss
xor
test
or
cwtl
pop
shll
daa
inc
adc
jb
pop
and
cmp
rcl
out
aam
mov
fisubrs
mov
in
mov
mov
push
rcll
fsubs
stos
jno
ficompl
popl
jo
sti
sbb
sub
sbbb
mov
mov
insl
in
jo
push
mov
xor
lods
mov
dec
nop
adcb
fbld
cwtl
dec
push
xchg
ret
imul
movsb
lock
xor
or
and
movsb
dec
mov
mov
and
mov
jg
bound
mov
or
mov
lcall
dec
sbb
shll
xchg
mov
push
sbb
ss
loopne
or
sbb
inc
fldcw
insl
cmc
push
in
push
ja
js
rcrl
aas
mov
leave
int3
movsb
push
mov
cltd
ss
or
fildll
jmp
jle
lds
jbe
add
xchg
xor
sahf
inc
fists
xlat
cmpsb
sbb
out
gs
push
inc
mov
lods
xor
cmp
pop
mov
jnp
add
mov
nop
xchg
test
into
push
stc
xchg
sti
xchg
nop
iret
loopne
aas
imul
sahf
mov
loopne
loopne
sbb
into
popa
jne
push
push
js
adc
mov
clc
mov
arpl
ljmp
inc
enter
cmp
add
into
outsb
add
mov
mov
xor
stos
mov
xor
imul
cmp
xchg
sarb
sub
loopne
pop
push
mov
iret
jns
sub
xor
fs
pushf
rol
fiadds
repnz
pop
adc
mov
cmp
add
mov
cmp
mov
xor
cmpsb
sarl
stos
jecxz
insl
cmc
sub
icebp
addr16
fisubrs
das
sbb
test
pop
and
pop
lods
mov
lahf
sub
xor
shlb
test
mov
push
xlat
xchg
sub
sahf
out
nop
xor
dec
les
mov
jno
int
fbstp
out
data16
outsb
in
xchg
in
add
or
ss
jbe
pop
mov
fsub
cmp
dec
jp
loope
ret
add
cmp
jmp
pop
stc
ficoml
mov
fstps
int
jl
fs
pop
ja
dec
or
jle
jb
sbb
fmul
adc
rorb
mov
mov
pop
inc
mov
shrb
mov
sbb
in
jg
cmp
jno
and
mov
add
and
enter
dec
mov
cli
xchg
mov
shr
jg
cmpb
xchg
jae
jge
jl
lea
inc
xchg
in
int3
int
cmc
das
testb
orb
mov
or
or
fdivrs
mov
leave
jae
push
ret
imul
or
xchg
stos
hlt
iret
filds
and
mov
divl
xchg
xor
dec
sub
push
dec
loop
jns
es
cmp
jmp
add
adc
aam
sbb
xor
xchg
and
int3
lret
add
es
insb
dec
xorb
cwtl
xor
lret
or
mov
push
xchg
sbb
orl
mov
sub
lret
stos
in
push
cwtl
inc
xchg
mov
mov
mov
lods
mov
cmpsb
or
mov
jns
js
sbb
cmp
dec
pop
bound
fistps
test
cmp
enter
or
movsl
jmp
jbe
jecxz
test
jns
mov
dec
xchg
jge,pn
daa
daa
or
test
and
scas
je
cmp
cmp
push
hlt
ja
je
xor
xchg
fwait
mov
dec
ret
repz
sbbb
dec
push
mov
test
pushw
hlt
addl
or
mov
arpl
push
repz
incl
xorb
jl
addb
add
stos
in
and
aas
into
scas
mov
aaa
dec
inc
pop
scas
js
repnz
mov
push
or
adc
icebp
mov
test
addr16
xchg
fmul
lcall
pop
test
loopne
sub
imul
push
fisubrs
mov
xchg
pusha
fsubrp
addr16
inc
rclb
lcall
push
cs
push
lret
cwtl
mov
push
out
repnz
push
inc
clc
outsb
cld
in
out
push
sbb
inc
mov
outsb
xor
sbb
xchg
push
cmc
mov
mov
outsl
hlt
dec
cmc
rorl
stos
aad
bnd
sub
in
cmc
cmp
movsl
mov
loopne
mov
adc
pop
or
cmp
pop
lea
fidivs
bnd
flds
std
xchg
xor
sub
add
lods
xchg
lcall
cwtl
imul
aad
repnz
xchg
mov
push
pop
imul
lods
andl
out
leave
xchg
and
xlat
inc
out
pop
add
xor
dec
pop
aam
cld
xchg
ljmp
or
mov
pop
sar
lret
sbb
dec
ss
adc
fdivrs
dec
mov
hlt
fnsave
push
fidivrl
sbb
dec
pop
bnd
ja
and
push
and
inc
jo
ds
fs
mov
aad
mulb
arpl
xchg
xor
insb
cmp
call
out
lret
sarb
xchg
rcl
hlt
mov
dec
in
andb
mov
aaa
add
jnp
push
dec
loopne
aaa
sti
jecxz
clc
in
add
dec
out
std
push
arpl
sahf
fiadds
mov
cmp
jge
xchg
mov
push
scas
cmp
test
pop
xchg
pop
xor
fdivr
pop
dec
mov
mov
insl
pop
rolb
inc
pop
mov
mov
mov
pop
mov
sub
je
fdivrp
push
mov
jl
jno
push
mov
jp
cmpsb
sbb
pop
sbb
mov
pushf
push
jb
inc
jecxz
bound
fisubrl
jo
call
jmp
jne
adc
je
cmp
das
dec
inc
add
fiadds
sbb
stc
inc
popf
std
xchg
iret
arpl
fsts
nop
lods
leave
add
mov
insl
add
jae
pop
inc
lret
repz
sbb
push
sub
sbb
mov
roll
lret
mov
mov
nop
push
sbb
enter
clc
call
cwtl
xchg
xlat
add
mov
cli
testb
data16
xchg
daa
jae
mov
mov
cmp
dec
loopne
pop
fnstenv
sub
push
fwait
and
sbb
sub
rorl
mov
stos
enter
int3
aad
pop
and
push
inc
inc
cld
cmp
xor
dec
add
fnsave
and
or
ficoml
push
mov
mov
or
xchg
mov
adc
adc
cwtl
add
push
jno
in
cwtl
xchg
lret
iret
push
mov
inc
lock
adc
add
es
or
test
frstor
fnstsw
cmpsl
mov
or
mov
xchg
adc
mov
inc
and
iret
out
or
lret
leave
test
rcll
add
push
rcl
outsb
add
js
adc
or
and
fcoms
fldl
fdivr
xor
and
aaa
js
dec
pop
mov
movsl
inc
fstp
fwait
xor
xchg
bound
push
mov
cmpsl
sbb
dec
sarb
dec
clc
and
jb
adc
repnz
xor
enter
mov
adc
icebp
xstore-rng
cmpsl
add
inc
cmp
mov
ljmp
jno
gs
outsl
xchg
inc
mov
rcrl
jnp
aam
mov
jle
and
cwtl
xor
fdivl
test
cmp
dec
jmp
pushf
sbb
pop
hlt
sahf
cmp
data16
xchg
inc
rcll
insl
loopne
add
mov
cmpsl
inc
mov
pop
push
fcomp
pop
add
pop
cli
pop
jle
scas
jp
loopne
out
inc
js
adc
shlb
fucomip
std
xchg
sbb
lahf
stos
adc
lret
call
rorb
dec
push
sahf
push
enter
mov
bound
pop
mov
sar
das
and
popf
daa
shrl
repnz
push
sub
push
cmpb
mov
movsb
cmp
insl
xchg
mov
xchg
inc
faddp
and
clc
inc
mov
cmp
or
inc
out
push
adc
and
out
loopne
cld
mov
adc
push
sar
mov
fsubrl
fcompl
mov
xchg
mov
out
lock
movsl
aad
fstpt
in
xchg
es
cmp
pop
mov
mov
setne
repnz
mov
int
jl
adc
into
mov
mov
ljmp
sub
mov
mov
xlat
out
loope
cwtl
jge
jecxz
mov
test
pop
xor
adc
cs
nop
cld
mov
into
aas
lea
pop
cmp
test
aam
test
lock
lahf
lods
aaa
pop
les
scas
ret
bound
ljmp
imul
xchg
jecxz
nop
mov
dec
lea
test
inc
xchg
mov
std
xor
or
cmp
xchg
jle
rorb
scas
inc
mov
lret
push
int3
arpl
pop
ljmp
and
push
sbbb
sti
in
lods
add
lods
inc
lods
inc
mov
xor
incb
pop
mov
dec
sub
sub
or
cmpsb
movsb
mov
dec
insb
mov
mov
dec
in
jne
adc
sub
xor
adcb
out
jp
push
pop
rorb
daa
jmp
rcl
aaa
cmp
dec
outsb
inc
repnz
pop
inc
call
mov
outsl
inc
rcrb
mov
shl
fwait
lea
add
xlat
shrb
push
test
adc
and
out
push
sub
cmp
or
andb
mov
sub
stos
adc
or
ja
cmp
push
sbb
or
mov
aas
gs
bound
mov
loope
lock
loopne
mov
inc
sub
test
out
mov
dec
pop
das
stc
cmpsl
pop
mov
cmp
fsubrs
inc
test
sub
jl
or
faddl
je
mov
mov
xchg
inc
or
push
xor
inc
outsl
jl
dec
dec
in
pop
subl
imul
cmc
sub
scas
add
cmpb
sub
or
mov
adc
test
bound
or
imul
sub
imul
pop
add
pop
sub
aad
mov
sbbl
mov
roll
fsubrs
cmp
and
mov
mov
outsl
das
sub
adc
cltd
cmp
shr
lea
push
mov
and
or
fidivs
dec
lds
ficomps
adc
cmp
cmc
in
bound
xor
mov
mov
mov
mov
mov
push
pop
insl
jge
addr16
in
pop
je
pop
dec
insb
je
and
rclb
mov
mov
cmc
insl
adc
andb
loope
or
mov
cmp
cmp
outsb
mov
aad
mov
lds
adc
mov
mov
pop
mov
adc
or
add
es
mov
xor
mov
push
mov
gs
xorl
jmp
mov
mov
ficompl
nop
add
sbb
popa
movsl
icebp
xchg
jl
lea
aad
dec
pop
pop
mov
push
mov
fwait
imul
cld
loopne
jbe
iret
mov
mov
or
sarb
fists
ret
outsl
and
dec
add
test
movsb
adc
int3
inc
and
les
pusha
loopne
lret
xor
sbb
popf
fmuls
lea
mov
loope
jnp
mov
fistl
xchg
push
das
enter
inc
in
mov
mov
dec
je
jmp
in
mov
jno
mov
sbb
pop
xchg
mov
inc
pop
gs
lds
cmp
pop
xchg
dec
les
sahf
mov
and
mov
leave
jae
push
xor
out
add
insl
inc
pop
insb
sub
adc
int
daa
ss
mov
sbb
adc
imul
out
outsb
mov
and
sahf
xchg
inc
sub
or
jg
repz
xlat
aam
gs
dec
jecxz
mov
sti
add
push
push
out
andl
fs
in
aas
lea
repz
jle
mov
push
jnp
aas
and
and
mov
add
inc
popf
test
inc
inc
mov
jae
add
inc
adcl
je
pop
insb
sti
mov
repnz
aam
push
cli
and
cs
mov
mov
pop
mov
in
lds
adc
jp
daa
movsb
adc
hlt
dec
mov
int
insl
mov
dec
outsl
xor
xchg
outsb
aaa
into
test
inc
push
inc
test
ret
lods
mov
and
lods
jae
mov
enter
verw
xlat
fldcw
pop
jne
cmpsb
ds
repnz
ds
insb
dec
mov
pop
dec
out
dec
and
sub
nop
mov
xor
pusha
inc
mov
dec
inc
cmp
adc
int
orb
les
xchg
jmp
mov
push
loop
pop
push
sbb
cmp
outsl
xor
lret
mov
bound
sbb
xchg
sub
add
push
xor
fld
test
xchg
jg
dec
in
mov
lock
dec
or
movb
push
in
push
sub
cmp
pop
sbb
jg
mov
add
ss
mov
js
cld
mov
das
leave
xchg
dec
fwait
dec
dec
subl
sbbl
rclb
aas
mov
pop
ja
and
call
lret
into
outsl
mov
fdivp
xchg
mov
xchg
out
out
stos
mov
xlat
test
outsb
mov
mov
mov
int3
inc
pop
aam
inc
aaa
mov
cwtl
dec
aas
shlb
push
mov
dec
inc
jle
repnz
pop
and
lock
sbb
data16
xor
ja
jge
xor
test
out
or
hlt
lahf
testb
loop
stos
adc
sub
mov
andb
mov
insb
xor
sub
push
inc
ret
outsb
xor
fs
mov
jmp
mov
rcr
xchg
push
loope
and
xor
aam
sub
idivb
fnstcw
mov
jb
outsl
and
test
call
sbb
sbb
jecxz
and
sub
or
mov
aam
and
mov
loop
dec
sbb
sub
data16
add
jnp
pop
cld
jg
outsb
icebp
fbld
sbb
push
xchg
hlt
jl
outsl
xchg
popf
es
push
and
fnstenv
icebp
fs
les
scas
outsb
dec
mov
jns
cmp
push
inc
fidivs
push
pop
push
fistpll
imul
enter
testl
mov
xor
pop
lods
fld1
push
enter
fistl
or
stos
mov
insb
ficompl
pop
out
mov
mov
pop
mov
adc
rcr
out
xchg
icebp
cli
inc
add
push
testl
pop
add
xchg
sar
mov
mov
mov
psrlw
sbb
xlat
xchg
sub
or
rcrb
inc
push
adcl
xor
movsl
mov
cli
shrb
mov
jg
ja
notb
inc
inc
dec
pop
clc
mov
push
roll
adc
pop
out
dec
xor
js
push
xor
outsb
js
mov
repz
push
dec
outsb
scas
fucom
cmpsl
mov
inc
adc
subl
stc
xchg
mov
imul
inc
lds
jo
out
aad
pop
aaa
out
lcall
and
xchg
pop
lds
sarb
fdivrs
fcomi
mov
in
push
arpl
inc
add
bound
jo
popf
cli
andl
push
loope
sub
dec
push
add
sub
inc
cmpsl
popa
idiv
sbb
stos
xor
inc
pop
jne
fsubs
out
stc
cmpl
pop
jl
insb
and
sub
xor
jmp
push
push
fisubs
outsl
fisubrl
leave
jns
inc
sbb
pop
fdivp
adc
mov
int
fildl
rcrb
push
movsb
cwtl
jae
pop
mov
outsb
pop
in
push
mov
mov
mov
cmp
and
nop
repz
dec
adc
lock
jp
mov
sti
fwait
andl
int
das
pop
xchg
repz
les
and
push
or
mov
xor
push
push
xchg
adc
js
push
mov
push
mov
inc
adc
pop
lcall
dec
cmpsl
push
shlb
js
or
pslld
sbb
fcomp
cmp
pop
ds
cmp
in
in
pop
dec
stos
sub
subb
ficomps
xor
jle
mov
pop
aam
mov
xchg
cmp
cmp
jp
fs
xchg
xchg
sub
lcall
flds
cmpsl
pop
test
inc
pop
inc
loop
mov
xchg
xor
jnp
ret
hlt
inc
dec
sbb
cs
push
daa
mov
mov
push
loopne
push
ljmp
scas
shll
out
nop
outsb
cmp
pop
mov
scas
push
cmp
lock
dec
dec
fsubl
stc
sub
ret
notl
out
fsubr
ror
int
adc
adc
jae
loop
jo
scas
sbbb
mov
cli
lock
and
cmp
aaa
pop
shll
loopne
daa
ss
mov
dec
adc
cli
lcall
mov
fnstsw
ja
mov
sahf
lods
dec
inc
and
jo
xor
and
sbb
mov
xchg
jae
pop
lret
arpl
and
fsubrp
push
lcall
mov
mov
cli
push
adc
int
and
packuswb
sbbb
add
dec
mov
fsub
movb
stos
scas
xchg
hlt
xchg
sub
push
stc
cmp
cmp
xchg
mov
leave
call
push
outsl
xor
imul
imul
mov
mov
pop
ljmp
xor
push
inc
xchg
pop
rolb
cmpsl
lea
mov
movsb
ja
pop
cs
dec
test
fdiv
inc
add
jb
xchg
pop
xchg
mov
pop
pop
fiaddl
imul
aas
fnstenv
repnz
xchg
lahf
popa
andl
and
fsubrl
pop
hlt
orl
sub
lret
jo
fdivs
movl
cs
inc
icebp
mov
test
stos
sbb
pop
lretw
rcr
xchg
idivl
imul
in
pop
jb
dec
pop
jb
scas
mov
pop
or
cmp
xor
xchg
add
popf
das
js
or
shlb
movsl
hlt
cmpsb
push
mov
call
mov
jl
test
mov
mov
add
sbb
in
dec
shr
cmc
call
xor
out
xor
ror
fcompl
repnz
vpavgw
andl
mov
xor
and
mov
sub
add
int
adc
inc
leave
and
dec
dec
mov
pop
push
pop
repz
fs
js
jp
out
data16
xchg
xchg
addr16
sbb
fdivrp
xchg
adc
inc
mov
and
cli
fucomi
sub
daa
xorb
aas
mov
and
inc
push
cmp
loopne
int3
add
mov
jne
mov
lods
loope
cld
rcr
push
lods
dec
cmp
mov
out
mov
inc
gs
sbb
sub
scas
and
push
inc
mov
and
add
mov
iret
ret
lret
arpl
shrb
xor
ss
mov
es
jae
fsubs
movsb
out
inc
fcoms
lahf
cmp
movsl
fwait
cmp
push
jecxz
sub
call
test
mov
xchg
pop
mov
xchg
sub
mov
sub
dec
jge
mov
cwtl
pop
aas
push
dec
mov
and
cmpsb
cmpsl
ret
negb
sti
xchg
and
inc
in
sbb
push
add
sub
xchg
sbb
mov
jp
in
and
mov
xor
dec
cmovne
dec
aaa
inc
arpl
imul
and
out
xchg
fxch
in
repnz
cli
sbb
movsb
mov
mov
sti
mov
xchg
or
xchg
jne
out
movsb
fisttps
mov
test
ficoms
jmp
inc
jmp
je
lock
das
inc
xor
test
push
add
xor
movsl
aad
dec
enter
cmp
loope
jbe
pop
cmp
pop
shlb
aad
and
idivl
mov
push
jmp
into
push
in
xlat
and
int3
and
and
mov
fildll
arpl
imul
aam
mov
jp
cmp
fptan
faddl
push
enter
lods
jmp
test
cld
test
and
test
push
cmp
dec
ljmp
mov
pop
mov
push
xor
cmc
cmp
psubsb
std
xchg
sub
shlb
cmp
lods
dec
leave
or
jmp
fstl
movsl
and
bound
mov
test
or
and
sahf
cmp
jle
pusha
pop
pusha
mov
shrb
jb
mov
clc
imul
cmp
rorl
push
jnp
lods
xchg
xchg
aad
mov
mov
ret
loope
sbbb
push
roll
ret
mov
cmp
jmp
lcall
mov
pop
in
pop
addr16
jnp
hlt
jns
add
add
icebp
adc
xchg
pop
xchg
imul
xchg
scas
bound
inc
and
jp
gs
mov
fldt
and
push
inc
mov
loop
xor
mov
inc
sub
mov
push
fimull
pop
dec
xchg
add
mov
push
movsl
mov
or
cld
iret
sbb
push
xor
xlat
xor
movsb
add
cmp
cs
pop
mov
cmp
mov
push
ret
pop
test
mov
sbb
push
sbb
clc
test
add
mov
or
cmp
push
fiadds
test
add
sbb
mov
das
adc
dec
test
or
iret
jne
mov
repnz
insb
gs
popf
or
sbb
test
push
xorb
mov
loopne
fdivr
dec
pop
cmp
mov
lret
insb
ret
xlat
xchg
pushf
mov
xor
jno
pusha
incl
call
pop
adc
loopne
mov
outsl
adc
dec
mov
repz
ss
cltd
icebp
xchg
iret
jle
or
pushf
stos
fcmovb
ss
in
sbb
iret
xchg
push
imul
or
and
in
mov
jle
imul
popf
mov
cmp
add
out
dec
fnsave
mov
or
imulb
dec
adc
pop
push
stc
fsubs
sub
pushf
test
push
call
hlt
pop
jo
sub
dec
mov
scas
bound
imul
add
lahf
data16
jbe
stos
notl
into
js
dec
dec
bound
loop
cmp
jmp
aam
inc
fs
fs
repnz
ds
iret
out
dec
push
jmp
test
cld
xchg
lcall
jmp
test
and
jo
or
rcll
sti
out
testb
in
fsts
mov
mov
mov
add
adc
jecxz
test
mov
add
adc
mov
mov
mov
fists
sarl
scas
mov
sar
sub
stos
inc
xor
push
jecxz
notl
mov
lds
movsl
pop
jmp
jp
push
ret
insb
in
jp
jae
hlt
mov
mov
mov
hlt
push
lods
adc
xor
ds
inc
incl
gs
xchg
and
pop
lods
mov
cmp
or
jb
subl
or
cmpsl
push
es
dec
mov
mov
push
pop
jnp
inc
xor
ja
hlt
dec
fadds
fisttpl
mov
decb
mov
or
mov
dec
jno
pop
xchg
out
add
test
cmp
les
into
mov
push
int
mov
test
daa
ret
pop
subl
dec
jb
pushl
cmp
enter
add
scas
int3
and
repnz
dec
lock
ja
imul
cmpsl
and
cld
xchg
mov
addb
popf
sti
fwait
xchg
popf
mov
rorb
ret
sti
push
jbe
or
clc
ss
gs
subl
jno
hlt
pop
jo
mov
jne
bound
clc
mov
jnp
xchg
sub
sbb
or
fidivl
sub
aam
gs
push
lods
cmp
xor
lds
lret
jo
lock
push
leave
mov
cmp
pop
pop
pop
inc
xchg
add
jl
mov
jno
stos
xchg
jnp
popa
sarb
jo
int
cli
xchg
mov
jb
sbb
and
pop
mov
insb
sub
mov
das
inc
xor
sti
mov
ror
fimull
ret
push
lock
out
and
inc
in
mov
cmp
clc
mov
sub
sbb
fdiv
arpl
stos
pop
pop
loop
stos
xor
mov
pop
push
jecxz
add
inc
add
cmp
push
ds
jmp
movsl
cmp
ss
jle
xchg
push
jne
adc
inc
lods
mov
mov
std
xchg
mov
jg
ss
adc
add
aad
pop
xchg
mov
cwtl
jle
xchg
push
mov
sbb
clc
inc
mov
fst
sbb
jne
xchg
pop
cmp
frstor
and
mov
jmp
ds
push
adc
aam
sbb
cmp
mov
rcl
or
mov
es
bound
jno
cmc
ja
js
add
iret
inc
push
and
loope
and
adc
incb
insl
dec
jecxz
fdivrs
lahf
les
mov
addl
add
enter
sub
jne
lea
shll
lret
mov
sub
or
leave
dec
loop
mov
imul
aad
enter
xchg
arpl
push
mov
jnp
jno
mov
cmp
outsl
sbb
scas
fildl
sub
add
mov
jmp
gs
add
test
jne
test
sub
add
or
in
jp
xor
jge
pop
mov
test
sub
iret
sub
adc
jbe
sub
cmp
adcl
test
pop
shlb
mov
in
ljmp
push
popa
mov
cmp
xlat
xor
push
ja
lds
dec
in
cmc
fucom
inc
lcall
pop
sub
or
shrb
cld
push
mov
loope
push
push
cs
iret
xchg
popa
mov
fwait
loope
repz
push
mov
adc
ss
sub
sar
mov
sub
jno
mov
dec
pop
ret
jnp
insb
pop
dec
nop
ljmp
lods
xchg
mov
js
and
cmc
sahf
imul
int
addr16
lods
add
int
add
or
sub
xchg
mov
push
sbb
gs
push
dec
add
add
push
inc
sti
xchg
lds
mov
cwtl
arpl
dec
add
fdivl
es
and
int
cmp
jecxz
pop
in
mov
mov
movups
jmp
xor
mov
iret
cli
push
jbe
enter
clc
or
rol
pop
or
fbstp
nop
mov
or
and
mov
mov
mov
push
push
pop
pop
and
ja
xor
adc
cltd
ret
mov
and
negb
push
jle
jo
or
adc
jae
xchg
mov
aam
imul
dec
xorb
les
test
fildll
cmpsl
jecxz
add
daa
loope
popa
test
dec
mov
shr
and
inc
mov
ret
rcrl
or
dec
xchg
mov
sbb
iret
lock
jbe
push
leave
outsb
arpl
push
push
mov
fwait
out
push
loope
and
idiv
inc
xlat
out
testl
and
adc
mov
cmc
les
lea
in
test
push
stc
test
fidivs
cmpsl
lea
mov
test
mull
sub
fidivs
cmp
test
mov
stc
call
cmp
test
scas
stc
loope
fidivs
aas
lea
jge
test
scas
cli
subb
les
adc
dec
rolb
cmp
xchg
imulb
imul
mov
scas
mul
mov
or
ja
dec
rcrl
loope
jne
xor
ret
mov
scas
or
inc
add
sbb
hlt
fcomps
mov
int3
xor
in
adc
pop
bound
pop
repz
addb
fdivs
rcll
scas
mov
mov
mov
adc
xor
js
xchg
and
fdiv
add
mov
sbb
xchg
jecxz
xchg
push
sbb
pop
jne
pushf
mov
dec
inc
outsl
push
xchg
into
mov
lahf
and
in
add
out
gs
xchg
imul
aas
ficoml
jns
push
mov
inc
in
cmpsb
push
xchg
mov
cmp
jmp
xor
inc
pop
std
and
lea
sub
adc
pushf
inc
pop
ficomps
gs
test
sub
cld
xor
mov
jp
test
mov
xchg
pop
add
cs
push
inc
mov
xor
in
ret
xor
lock
adc
imul
xchg
xorb
xchg
mov
icebp
or
and
push
fidivs
pop
andl
lret
and
arpl
les
adc
loopne
xorl
pop
add
jae
xchg
aad
push
xor
add
scas
cmp
fwait
fs
arpl
jg
or
adc
push
fildl
aaa
jmp
and
jns
lods
or
push
push
dec
mov
mov
mov
sarl
cmc
fs
push
sti
mov
mov
leave
imul
adc
push
nop
sub
cmp
and
jg,pn
das
xchg
sbb
or
ret
lcall
xchg
movsb
lds
cmpsb
mov
sahf
xchg
sarl
mov
shll
lret
xor
xor
out
mov
xchg
ljmp
dec
popa
leave
fidivl
or
jl
add
xchg
jnp
clc
or
popf
scas
in
xchg
push
sahf
add
fsubr
jo
or
xchg
inc
pop
imul
adc
popa
pop
out
popa
push
jns
sbb
inc
rcrb
insl
push
mov
mov
hlt
and
adc
cli
xchg
pop
aaa
sbb
lods
loope
out
dec
inc
lret
in
sub
ss
movsb
jb
adcb
push
jne
in
andb
xchg
shlb
mov
jae
mov
sbb
mov
lds
cs
movsb
insb
jmp
add
pop
mov
or
adc
jecxz
out
adc
push
hlt
or
imulb
xchg
jg
xor
cmp
stos
aaa
pop
pushf
dec
loop
jmp
xchg
sbb
movsb
negl
test
sti
mov
push
cmp
lret
in
or
das
pusha
sbbb
insb
out
rcrl
mov
jae
fistpll
mov
jns
enter
or
test
aam
inc
ret
in
sbb
stos
or
out
mov
movsb
pop
dec
xor
mov
ret
ret
iret
rcll
das
bound
lcall
cs
in
pop
sub
movsl
push
rcrb
aad
push
cli
das
jbe
jle
sbb
or
jns
scas
out
jno
add
test
lret
or
or
nop
lock
and
bound
sbb
jg
push
sarl
fsubrl
push
fildl
insb
adc
and
push
sub
and
add
xor
dec
shll
cmc
scas
add
enter
scas
sub
push
cmc
ret
outsl
inc
inc
sbb
adc
rolb
lret
icebp
or
popa
add
nop
xor
sbb
sti
rcrb
rcrb
push
mov
out
mov
fcmove
push
pop
mov
mov
out
jecxz
cmc
repz
mov
mov
dec
xchg
inc
xchg
xchg
mov
inc
mov
cmp
icebp
popf
addr16
and
jp
cmp
xlat
jmp
dec
jbe
lock
mov
xor
mov
rcrb
jnp
xor
add
pop
jmp
dec
sbb
stos
test
cmp
lods
arpl
cmpsl
or
shlb
aaa
pop
mov
sbb
push
dec
push
pushf
sub
iret
sbb
icebp
sbb
push
loop
ret
dec
fdivrl
push
push
fists
mov
mov
cmpsb
mov
fisttpl
jno
sub
push
icebp
imul
loope
xchg
sub
inc
rcrl
mov
cmp
pop
scas
jno
mov
int3
jle
fadds
retw
call
test
push
lret
stos
inc
bound
data16
mov
add
xor
pop
xchg
pop
add
in
pop
or
mov
sub
out
xchg
mov
jnp
push
push
adc
xor
scas
inc
inc
popl
fiaddl
mov
rclb
and
ljmp
cmp
lds
adc
adc
lea
mov
mov
or
fidivrl
sub
mov
mov
movsl
jbe
xlat
add
add
mov
stos
call
or
adc
xor
jo
or
xchg
pop
es
cmc
sti
lds
pop
andb
add
andb
xchg
mov
sahf
jae
aad
imul
jg
or
daa
test
and
in
repz
or
inc
xor
arpl
aad
jo
xchg
jmp
ljmp
nop
daa
inc
pop
sbb
lea
mov
cli
jmp
mov
jecxz
loop
repnz
add
pop
dec
push
pop
push
mov
test
repnz
adcl
jge
scas
push
mov
ja
ja
adc
mov
pop
out
movsl
clc
rcrb
xchg
aas
mov
dec
pusha
inc
mov
xchg
push
sub
push
push
cwtl
or
inc
fbld
pcmpgtw
int
jnp
add
inc
xorb
cmp
push
nop
insb
adc
pop
insl
cmp
mov
xchg
xor
sub
pop
sbb
ds
fs
or
inc
mov
add
subl
xor
shrb
xor
pushf
mov
pop
mov
mov
xor
aam
data16
or
adc
sub
and
jp
fwait
imul
aaa
scas
mov
cmp
fnstsw
stc
add
fnstenv
and
lret
das
stc
adc
lea
sbb
or
adc
dec
mov
mov
add
mov
jbe
jbe
das
test
lret
and
xchg
mov
dec
movsb
fiaddl
scas
cmp
loope
aas
rcl
cmp
push
fyl2x
inc
push
pusha
cmpb
rorb
push
shrl
test
fidivl
xchg
loope
lahf
fmulp
or
cli
fldenv
stos
daa
jae
push
pop
in
xchg
ljmp
testb
in
daa
mov
mov
cwtl
xchg
gs
pop
pop
mov
xchg
and
mov
icebp
adc
and
lret
in
enter
push
cli
cmp
push
ja
cmp
int3
fidivl
cmp
pop
push
mov
scas
inc
push
loopne
shrb
add
cmp
pusha
pop
push
push
cwtl
js
lret
xor
jmp
mov
pop
mov
mov
push
into
sbb
cmp
jge
ret
or
ret
pop
sbb
jmp
test
xorl
dec
mov
jae
pop
aam
lds
cmpsl
push
popf
lret
lds
mov
in
es
fwait
mov
inc
js
ds
push
enter
in
jb
push
mov
insl
mov
dec
sub
shlb
iret
ficomps
jle
nop
sbb
sbb
jbe
and
add
test
and
pop
loope
inc
cmc
sarb
jns
inc
sub
rorl
lock
adc
and
enter
gs
insb
arpl
scas
in
test
mov
push
mov
dec
fucomip
mov
ret
pop
jo
xor
loope
pop
fwait
inc
jne
imul
pushf
imul
push
cmp
repnz
into
sahf
inc
mov
mov
push
xlat
outsb
xchg
mov
mov
jnp
inc
sub
mov
sub
dec
stos
mov
cmp
mov
dec
dec
xchg
ret
mov
cmp
mov
dec
xchg
outsb
mov
aaa
xchg
shll
xchg
pop
stc
hlt
out
dec
adc
sub
push
cli
jo
xchg
addr16
mov
subl
in
shlb
jo
cmpsl
ret
leave
pop
addl
fsubl
adc
jne
or
cmp
jns
mov
dec
out
add
call
mov
mov
out
adc
imul
sbb
pop
lahf
icebp
inc
fs
jmp
hlt
test
cmpsb
cmpsb
jnp
mov
cwtl
jnp
xchg
and
cld
mov
das
outsb
cmpsl
pop
icebp
pop
inc
repz
xor
xor
push
sahf
stos
mov
and
jl
or
and
inc
adc
cwtl
xor
cmovnp
jno
insl
cmc
xor
je
fstl
sbb
mov
add
movsb
mov
push
lods
mov
push
outsl
push
mov
sub
adc
inc
in
pop
adc
ret
mov
or
ret
subl
fs
xchg
xorl
daa
lret
int3
jp
dec
dec
mov
int
ret
pop
pusha
mov
xchg
lods
ljmp
ljmp
out
stc
fwait
xor
xlat
cld
xchg
lahf
aad
testl
popl
push
jo
aaa
cs
jg
fdiv
adc
je
xor
lcall
sahf
clc
add
into
insl
and
je
dec
jae
push
icebp
mov
add
out
data16
test
out
outsl
push
sbb
clc
add
sub
push
xchg
push
adc
sbbb
jle
inc
and
aam
aam
dec
lahf
xor
xchg
adc
js
sarb
push
rol
pop
shlb
push
cs
pop
loope
pop
or
dec
xor
or
sub
in
out
lds
inc
mov
mov
dec
and
inc
adc
arpl
add
or
sbb
and
sbb
and
jg
nop
into
push
lods
pushl
lods
pop
test
test
mov
mov
scas
nop
mov
cltd
mov
imul
inc
outsb
mov
sbb
inc
pusha
insl
xchg
loope
movsb
inc
cmp
cmpsb
ds
int
hlt
shl
sahf
aad
sub
popa
mov
imul
cs
dec
pop
ss
mov
insb
int3
xchg
rcr
jbe
inc
loop,pt
popf
push
mov
fisttpll
sbb
push
fucomp
mov
movsl
fcomp
in
ret
sub
add
cmovnp
mov
add
dec
inc
cmpsl
mov
xchg
or
imul
clc
in
xchg
xor
sbb
mov
sti
lret
inc
test
pushl
sub
fidivl
lock
xchg
jl
add
cmpsb
or
lea
inc
mov
mov
mov
inc
jecxz
sub
aam
sbb
pop
sbb
and
iret
jecxz
cld
das
dec
inc
jg
mov
ljmp
test
jmp
pushf
inc
mov
and
lret
inc
mov
adc
in
ljmp
xchg
mov
test
iret
pop
andb
test
pop
inc
insl
inc
ja
in
mov
pop
faddp
sbb
outsl
mov
xor
xchg
leave
adc
jle
or
mov
push
jecxz
cmp
xor
mov
shll
rcrb
out
dec
push
adc
add
or
repz
stos
adc
add
sbb
loop
rcrb
outsl
sbb
ja
mov
ljmp
mov
mov
int
push
js
xor
fadds
dec
or
jb
sub
data16
sub
cmpsb
pop
sti
jne
and
xchg
lods
lret
dec
dec
inc
loope
xchg
jnp
lahf
mov
imul
cmpsb
jo
out
scas
fstpt
push
pop
sti
js
lahf
stos
sahf
das
mov
cmpsl
jne
and
ret
stos
or
iret
adc
mov
dec
cmpl
xchg
cli
dec
fwait
mov
adc
mov
test
mov
add
lahf
push
hlt
leave
test
les
inc
add
sub
mov
sub
pop
cmp
push
sub
or
push
nop
lcall
jo
orb
fcomps
pop
insb
popl
fs
mov
out
fwait
mov
jge
insl
bound
in
insb
sahf
fstpt
aad
dec
sarb
push
xchg
inc
adc
inc
leave
cltd
test
xlat
movsb
repnz
sub
in
out
add
inc
inc
mov
push
scas
xchg
add
jp
repnz
test
js
adc
add
in
xlat
jnp
xchg
inc
dec
fcoml
leave
sub
inc
jae
sahf
scas
xor
push
cli
test
or
inc
xchg
push
stos
dec
pop
xor
mov
mov
iret
cmpsb
sbb
ficompl
adc
imul
mov
outsb
mov
and
cmp
push
sbb
cmpsl
cli
fstp
xor
daa
rcrb
push
push
cmpsl
adc
aad
mov
sbb
jb
adc
xor
pop
adc
icebp
movsb
inc
sbb
loop
add
orb
and
mov
dec
or
and
inc
push
imul
xor
cmpsl
cmp
fwait
adc
je
enter
fdivrs
xchg
mov
inc
insb
divl
and
push
and
mov
jmp
xor
and
jae
push
inc
stc
inc
test
mov
sbb
mov
xor
xor
outsl
and
dec
push
aad
lea
adc
xor
xchg
inc
shll
adc
push
mov
cmp
mov
mov
push
fs
jmp
repz
loope
xlat
das
outsl
or
push
pop
fildll
mov
xlat
clc
push
sub
pop
push
jp
cmp
pusha
sbb
int3
xchg
dec
mov
testb
loopne
push
fildll
adc
pushf
dec
adc
xchg
inc
ffree
mov
mov
adc
sarl
stos
jnp
jle
lret
xchg
loop
xchg
push
aas
bound
jmp
or
movsb
pop
add
shll
jl
ljmp
inc
push
fisttpll
pop
sub
mov
fabs
test
xor
lods
push
out
xor
sti
lds
out
mov
adc
push
xchg
jno
pop
fcomip
scas
icebp
aam
pop
or
inc
jecxz
sbb
xchg
test
fbld
insb
add
sbbl
push
sub
xlat
outsb
and
adcb
sub
jle
push
mov
sub
mov
test
fldcw
mov
bound
xchg
add
out
test
ret
pop
xchg
push
ds
pop
les
or
sub
in
and
xor
ja
jge
jge
dec
jle
xchg
push
or
add
adc
lcall
fsubl
or
scas
jg
sbb
jo
pop
lock
and
push
adc
add
sti
mov
daa
dec
lods
movsl
push
mul
stc
popf
sbb
je
inc
adcl
mov
scas
push
inc
loopne
jbe
sahf
lods
push
decb
xchg
adc
adc
clc
lahf
xor
xor
orl
sbb
inc
push
pop
mov
xchg
idivb
jmp
insb
jle
xor
test
shll
nop
inc
cmp
cmp
add
repnz
and
dec
push
mov
test
mov
mov
in
or
lods
dec
dec
test
aas
stc
and
sbb
pop
sub
xchg
lock
cmp
leave
push
xchg
test
fs
mov
repnz
fldcw
adc
mov
in
dec
pop
ret
adc
out
cld
adc
test
iret
pushf
push
push
notb
cmp
mov
add
stos
jecxz
mov
xor
sbb
fs
cmpb
inc
and
aad
mov
inc
fidivrs
sub
mov
lret
into
lock
testl
fst
and
fiaddl
push
outsl
sub
clc
popf
push
fiaddl
mov
cmc
adc
jne
loop
mov
push
repz
jl
nop
pop
push
movsl
adc
adc
jmp
or
push
stc
jne
in
or
lret
call
mov
push
popf
lret
cltd
xlat
outsb
int3
sar
popl
cmc
xchg
ss
xchg
ljmp
mov
sbb
add
mov
sti
sub
sbb
inc
pop
xor
bound
xchg
lock
jno
and
lahf
and
lret
popa
jg
test
int
mov
push
scas
fwait
repnz
add
dec
mov
movsl
add
mov
xchg
jno
sub
and
sti
dec
dec
ss
jnp
xchg
lahf
stos
or
ret
cli
push
cwtl
fistpll
out
ficoml
cmp
leave
jae
orb
sub
mov
inc
data16
or
enter
out
add
jbe
mov
or
stos
or
dec
adc
aaa
test
movsl
xchg
jmp
jne
sbb
xchg
addr16
sub
cli
or
pop
std
jns
iret
fistl
adc
stos
add
call
ds
pop
xor
inc
repnz
or
mov
push
or
xchg
cmp
pop
or
fs
pop
push
dec
push
mov
pop
adc
xor
popf
stc
out
add
ljmp
stc
adc
push
repz
inc
pop
cmpb
jl
mov
mov
popa
cltd
test
seta
stc
aad
mov
dec
stc
cld
pop
shll
xlat
xchg
pop
mov
testb
pop
or
nop
sbb
inc
out
test
cmp
xor
sbb
es
sbb
inc
push
add
ficomps
pop
xor
or
push
adc
rorl
insl
xchg
imul
repnz
pop
mov
std
imul
jge
jo
sbbb
out
stos
xchg
jno
andl
xchg
mov
lret
fnstenv
aas
iret
retw
mov
mov
lret
mov
add
psadbw
subl
loopne
icebp
aam
dec
lods
and
lcall
dec
sub
jge
in
icebp
push
add
push
ds
aad
scas
outsb
loope
jp
int
mov
push
ss
adc
aas
push
sub
mov
adc
dec
cwtl
jp
jne
dec
ficoml
add
inc
push
and
popa
cwtl
cld
adc
pop
rcrb
or
sbb
pop
aam
and
imul
stos
cmp
insl
in
jnp
test
or
cmpsb
adc
cmpsl
mov
jo
shl
test
jle
sub
pop
movsb
pop
jle
xor
cmpsb
pop
mov
scas
or
xor
push
pop
movsb
xor
xor
sbb
add
ret
insb
aaa
je
xchg
lock
flds
fildll
inc
mov
dec
into
pop
fsubrs
xchg
cmpb
mov
sub
movsb
fstpt
pop
test
std
pop
pop
lret
divl
lcall
or
pop
shr
cmp
push
rorb
ror
outsl
divl
mov
sbb
mov
mov
shrl
decb
das
mov
call
cmc
lea
pop
mov
xor
std
pop
cmp
lea
ss
xchg
jo
sub
jle
lcall
dec
data16
outsb
inc
inc
push
test
das
gs
adc
jno
hlt
and
jge
sub
fidivl
fldt
popa
repz
or
std
dec
out
and
pop
aam
dec
pop
push
inc
rcl
enter
cld
fs
shrb
inc
in
xchg
lret
imul
lahf
and
cs
or
push
sti
repz
ret
inc
out
jge
sub
adc
mov
or
adc
inc
or
test
cmp
cmp
jmp
or
cmc
pushl
loope
adc
dec
jle
test
pusha
mov
out
in
popf
xchg
sub
je
xor
outsl
push
lcall
insl
pop
mov
xor
adc
rcrb
jp
xchg
loope
xchg
lcall
sahf
loope
pop
adc
test
sarb
lods
xchg
dec
test
das
mov
add
mov
xchg
pop
mov
push
out
cwtl
loop
call
mov
sti
orb
xchg
pop
mov
xor
and
xor
pop
cmp
cld
push
mov
push
das
movb
dec
pop
stc
jmp
pop
jbe
inc
pop
or
loop
inc
pusha
mov
fs
adc
ja
mov
mov
dec
ljmp
or
enter
lods
mov
imul
adc
pop
jl
test
pop
pop
pop
sbb
jno
cmp
and
lret
fsub
push
loop
fld
push
test
fdivl
xor
jp
push
push
cmc
mov
rorl
cmp
pop
jae
cmp
pop
out
sbb
sbb
scas
mov
xchg
add
ja
jmp
cmpsb
fbstp
and
ffreep
fucomp
hlt
add
rcrl
inc
jbe
andb
fisubs
arpl
jg
clc
mov
mov
mov
jge
fisubrs
gs
scas
lods
cmpsl
ds
adcl
inc
dec
fbstp
push
data16
inc
adcb
int3
insb
pop
lock
rolb
and
nop
data16
add
in
cmp
je
aad
movsl
cmp
jne
push
data16
imul
test
xchg
cmp
sbb
fnstenv
jb
fs
stos
stos
out
aaa
into
loopne
pop
repnz
pop
jns
shll
mov
push
cmc
mov
jl
sub
or
xchg
jge
rclb
adc
shr
fdivl
outsb
lock
sub
mov
push
sahf
xor
mov
mov
add
imul
in
adc
or
outsl
push
add
xor
mov
fiadds
adc
movsb
cmp
mov
cld
addr16
notl
push
call
mov
inc
ja
cmp
pusha
notl
xchg
add
or
daa
cmpb
xor
sarb
sar
popa
clc
rolb
call
inc
stos
sahf
xor
mov
or
dec
jnp
sub
into
mov
call
pop
cmp
iret
jle
cmpsb
cmp
int
in
enter
das
inc
sahf
xor
sbbb
bswap
add
shlb
or
xchg
fwait
xor
cld
inc
fnsave
dec
pop
hlt
jns
fs
sbbb
pop
iret
stc
shrl
inc
adc
jg
xor
int3
mov
pop
scas
xor
sbbl
push
xor
cmp
lcall
inc
inc
fbstp
gs
mov
jnp
pop
and
cltd
xor
mov
scas
mov
mov
fistpll
jae
shlb
pop
lock
cmpsl
xor
push
lds
cmpsb
shrb
or
js
push
sub
xchg
xchg
xchg
cmpsl
dec
loope
mov
sub
push
xor
frstor
xor
mov
rolb
pop
cmpsb
and
cmp
loop
cmc
jbe
in
cmpsl
pop
in
outsl
pop
sahf
mov
shll
fiadds
in
ss
test
cltd
mov
jp
cmc
mov
adc
test
xor
roll
pusha
negl
xlat
testl
pop
lea
mov
xchg
lahf
xchg
lahf
mov
movsl
cmp
imul
in
test
mov
test
add
mov
dec
loopne
imul
aaa
mov
mov
xchg
arpl
xchg
mov
adc
gs
xchg
into
rclb
jp
xchg
add
lds
jmp
pusha
pop
lock
xchg
pusha
test
pop
test
mov
adc
test
mov
out
mov
sbbl
fldcw
or
mov
inc
fnstsw
xlat
outsb
add
inc
fcoms
shlb
ja
pop
movsl
dec
jb
jle
test
xchg
int3
adc
dec
in
cmpsb
cmp
insb
mov
pop
loop
xchg
xor
fstpl
mov
xor
push
pushf
loope
insl
adc
add
cmp
out
movsl
cmp
xchg
add
ds
les
out
xchg
pop
xchg
push
mov
or
fsubrs
aam
mov
int3
sbb
xor
mov
js
adc
fnsave
dec
fistpll
sbb
push
movsl
ds
pusha
testl
icebp
mov
push
enter
or
popf
negb
icebp
mov
jne
sub
call
mov
mov
pop
fwait
xor
leave
add
test
nop
in
outsl
sbb
shrl
insb
call
inc
sbb
scas
inc
lods
or
push
stos
in
dec
fistps
jle
jmp
or
mov
jns
dec
lods
out
cmc
mov
jl
aad
or
movsl
cmp
setge
sbb
rorl
sbb
push
mov
xchg
and
cltd
xor
push
fs
test
and
leave
testb
xchg
repnz
mov
mov
mov
push
adc
les
mov
cmp
or
sbb
mov
fildl
xchg
nop
daa
or
xchg
cmp
push
mov
out
mov
pop
ud1
push
mov
xchg
mov
aaa
int3
cmc
fwait
xor
pop
push
lods
mov
popf
xor
lcall
sub
xchg
sti
or
mov
mov
and
test
sarl
lds
mov
mov
sbb
mov
inc
xchg
out
sarb
mov
cmp
pushf
xor
sub
and
sbb
cmp
inc
sub
sahf
cli
add
push
aaa
cmp
mov
fdecstp
sub
sub
sbb
test
cmpsb
shlb
add
and
push
pop
insb
add
push
out
popa
test
xchg
ret
clc
mov
or
sbb
add
push
ljmp
jae
mov
or
fcoml
shrl
std
cmpsl
ds
cmp
push
lock
and
inc
popf
xor
ficompl
or
mov
push
xor
and
and
cld
xchg
dec
add
xorb
and
sbb
sub
cmc
sbb
leave
inc
sti
sti
xchg
sub
add
sub
popf
xor
repnz
and
lds
inc
xlat
xor
les
out
and
sti
add
mov
push
out
sub
and
mov
xor
jmp
cmp
stos
cmp
pop
push
stos
inc
test
jno
inc
movsb
xor
popf
scas
mov
xchg
sub
jbe
jne
mov
cli
xchg
scas
cmp
ja
andl
aas
xchg
sub
or
movsl
mov
sbb
jle
fwait
scas
pop
mov
jmp
mov
pop
testb
dec
fildll
jle
std
mov
sub
lahf
ss
clc
popl
mov
mov
jmp
int3
arpl
or
cmp
pusha
xlat
outsb
xchg
loope
into
adc
imulb
cs
cmp
into
in
faddl
push
push
lods
js
fildll
lahf
mov
add
xor
push
dec
in
shrl
adc
mov
pop
hlt
pop
jb
and
aam
fadds
lcall
or
sub
stos
dec
popa
clc
jle
sub
rcl
and
push
repnz
jae
jne
cwtl
cmpsb
inc
jmp
jae
mov
nop
sbb
dec
out
and
insl
add
lahf
cmp
adc
mov
adc
mov
outsl
into
gs
sub
sub
jbe
lock
fldt
cli
xchg
jmp
and
sbb
dec
dec
mov
push
call
or
jecxz
jmp
mov
xchg
es
mov
scas
inc
aad
dec
in
repnz
push
in
xor
out
jns
cli
xchg
and
mov
leave
ja
out
and
sbb
xor
mov
sub
aas
dec
dec
pushf
mov
repnz
jle
jmp
jne
test
jp
stos
jge
inc
fidivs
push
cwtl
cltd
xor
pop
in
dec
jmp
sub
das
in
cmp
divb
fstpt
ja
cld
fildl
cmpsb
shlb
iret
cmpsl
insb
rcrb
mov
testb
pop
jae
fstl
cmp
imulb
enter
push
ret
fldl
mov
les
pop
popa
clc
addr16
and
lea
popf
fistpl
and
add
pusha
mov
mov
es
cmpl
mov
lock
mov
shll
je
aam
xor
or
sbbl
xchg
add
sbb
xchg
bound
jecxz
pop
out
and
inc
adc
inc
in
int3
cmp
fcomp
inc
jecxz
pop
movsl
pop
scas
xchg
and
outsb
add
popa
icebp
cmpb
mov
out
xchg
test
push
lods
jo
and
pop
aam
bound
scas
pop
ja
or
mov
dec
mov
addr16
push
shlb
addr16
xchg
xor
das
cwtl
sbb
fistpl
cmp
ret
lock
mov
inc
mov
jmp
or
out
or
mov
xchg
mov
repz
or
sbb
hlt
xor
sub
negb
fisttpll
cmp
and
lret
ds
pop
jmp
push
jns
lods
cltd
xlat
dec
sbb
jns
insl
jo
es
pop
mov
adc
and
xchg
lcall
jmp
or
scas
add
rolb
ficoms
punpckldq
testb
sbb
mov
clc
push
or
push
or
mov
in
mov
loop
push
mov
clc
rcll
outsb
mov
xchg
in
mov
add
xchg
mov
cltd
sub
push
or
jb
jnp
enter
cmp
jbe
fnsave
xchg
addr16
mov
cmc
daa
in
test
mov
out
lret
cmp
aad
shlb
mov
xchg
or
pushf
das
mov
in
clc
jmp
loopne
rcrb
sarl
add
jle
loopne
call
push
mov
inc
mov
cmc
mov
mov
fldl
and
outsb
mov
mov
cmp
mov
in
test
and
push
sbb
mov
pop
aas
cmpsl
dec
mov
jmp
inc
shrl
scas
inc
mov
push
add
mov
imul
mov
sub
fstpt
pushf
sub
out
mov
mov
enter
cmp
jb
add
adc
stos
xor
push
ja
cmp
pop
mov
push
adc
mov
test
leave
test
xlat
sub
lea
clc
add
lock
icebp
lea
or
stos
shrb
ljmp
fadds
daa
pop
sarb
loopne
dec
aaa
sbb
cmp
jge
fidivrs
addb
fldenv
inc
fnsave
fucomp
dec
sub
push
fidivrl
out
push
sbb
test
in
mov
mov
fnstsw
pop
inc
shlb
xor
pop
iret
inc
xchg
xchg
mov
das
sub
cmp
jns
sti
cmp
fidivrl
jbe
mov
pop
adc
pop
pop
insl
fwait
cmp
jns
scas
inc
jg
dec
inc
push
sbbb
gs
inc
cmp
clc
dec
pop
add
lods
pop
popa
push
test
push
xor
dec
dec
push
mov
inc
mov
jne
mov
sbbl
imul
mov
aas
ret
outsl
pop
enter
jnp
xorl
into
aaa
enter
ja
lock
rorb
inc
and
ret
addr16
dec
rolb
in
inc
les
cmp
sbb
loop,pn
xchg
and
push
inc
jl
addr16
cmp
cs
xor
add
or
pop
adc
pop
add
outsb
test
test
and
loop
xor
push
jns
test
pushf
xor
fstl
xchg
xor
sbb
popf
xor
jne
inc
pop
fisttpl
add
dec
mov
jno
xlat
outsb
shll
popl
int
jge
cmpsb
stc
jmp
fbld
pop
pop
into
data16
xlat
sub
fwait
jp
sti
sub
jmp
aaa
sarb
jg
test
dec
lds
repnz
enter
pop
movl
dec
push
sub
cmpsl
aas
mov
out
or
add
sub
mov
and
push
enter
push
shrb
cmpsb
movsl
cltd
test
jl
iret
inc
mov
repnz
pop
xor
inc
sbb
in
dec
or
push
sbb
adc
ja
in
sbb
testb
mov
pop
rcrl
cmp
je
pop
xor
in
outsb
cwtl
orl
cld
cli
push
jge
jo
pop
test
adc
xchg
xchg
xor
adc
cmpsb
cmp
clc
call
cld
pop
in
jle
ljmp
icebp
nop
aaa
aam
test
cmp
test
rorb
cmp
cmp
rorb
data16
sbb
push
jg
shrl
stos
outsl
orb
and
pop
iret
pavgb
push
dec
mov
in
pop
repz
mov
add
jns
sbb
mov
xor
lcall
pop
add
aam
pop
cmpsb
jle
push
cmp
call
xor
and
dec
pushf
pop
stos
stos
insl
xchg
mov
insl
lahf
mov
in
fwait
aam
das
fidivrl
jbe
clc
sahf
inc
lret
jb
icebp
imul
sbbl
les
rorb
sarl
sub
out
mov
mov
fsubl
out
xorl
stos
in
sbb
cmp
dec
loope
jb
or
inc
mov
mov
pop
aad
stos
adc
dec
sub
pop
jno
andb
pop
leave
fdivr
xor
mov
lret
push
add
pop
repz
dec
adc
sbb
sbb
and
clc
pop
fadds
fiaddl
push
ljmp
cwtl
jno
or
sahf
cmpsl
dec
xor
jp
int3
cmp
test
lds
sti
daa
jmp
mov
mov
lock
adc
ret
loop
std
es
inc
faddp
leave
faddl
call
mov
sub
ja
adc
fmuls
cmp
test
adc
xor
stos
fwait
jmp
int3
xchg
inc
mov
fisubl
popa
mov
out
movsb
push
int
pand
jno
rclb
pop
out
push
daa
flds
out
cmp
xchg
sbb
mov
ljmp
or
xor
sarl
lds
filds
orl
cmpsl
xor
in
jmp
pop
mov
stos
scas
jae
cs
lods
mov
adc
cwtl
and
xlat
fildl
sbbb
push
add
push
ja
aam
fstl
push
scas
gs
cmpsl
pop
arpl
xchg
sub
sub
cmp
push
xlat
dec
cmpsb
cmp
test
mov
test
add
cmpsb
mov
jo,pt
jb
sbb
sbb
dec
mov
xchg
ss
jae
push
test
nop
sbb
lock
lret
sub
fisttps
xor
aam
sub
call
mov
push
out
lret
lret
sbb
in
add
push
enter
nop
lret
roll
jb
cltd
sti
enter
xlat
push
jne
cmpsl
arpl
cmp
pop
sbb
ljmp
in
xor
lock
popa
jle
pop
in
idivb
ljmp
popa
pop
hlt
mov
repnz
mov
sub
outsl
loope
loopne
cmp
clc
and
syscall
out
and
repz
call
ficoml
neg
jbe
cmp
jp
mov
pop
lea
mov
sbb
lock
pop
sub
sbb
repnz
mov
push
mov
scas
repz
rcl
cld
out
iret
loopne
mov
rorl
dec
ret
mov
mov
push
stc
xlat
fisttpl
sbb
mov
pop
out
cmpsb
nop
mov
push
xchg
mov
add
jg
pop
mov
mov
push
test
fcoml
lods
adc
sub
push
mov
cltd
add
inc
xor
mov
loope
rorb
xor
sbb
xor
loope
jnp
jo
outsl
push
xchg
mov
icebp
test
pop
sbb
movsb
ss
test
pop
mov
or
jle
addr16
push
iret
popa
cmovg
pop
xorb
pop
pop
sub
dec
fwait
es
aas
and
jp
or
imul
fstpl
pop
cmp
lahf
lea
scas
push
imulb
sarb
dec
inc
into
fs
arpl
dec
dec
movsb
mov
std
inc
ret
push
push
mov
add
add
rorl
xchg
arpl
sub
sarl
lahf
xchg
sub
pop
cmp
pop
in
movl
call
imul
adc
lods
cmp
inc
fnstsw
push
push
ret
pop
in
les
fisttpl
jecxz
rorl
or
or
stos
inc
pop
sub
call
dec
xor
fisubl
jo
stos
xchg
sti
stc
push
cltd
mov
frstor
jmp
ljmp
mov
adc
or
jmp
mov
fs
popa
subb
xor
mov
mov
fisubrs
adc
movsl
xchg
imul
out
and
mov
dec
dec
jb
out
imul
cmp
cmp
jns
lods
jne
push
or
dec
lea
pop
test
and
dec
aam
sub
mov
cmp
outsl
mov
fidivrl
mov
xor
mov
ret
xor
mov
in
and
dec
cmp
mov
mov
gs
scas
loop
mov
iret
out
data16
mov
jl
cmc
repnz
leave
out
roll
into
inc
int
out
stos
int3
aam
movl
push
subl
je
inc
push
lea
popa
leave
cmp
outsl
sahf
fidivl
nop
imul
bound
sub
cmp
inc
xorb
ja
bound
jge
lret
bound
inc
int
xchg
mov
push
int3
mov
or
or
mov
mov
adc
pop
testb
cmp
fidivrl
repz
das
adc
scas
xlat
out
or
cld
xor
mov
sub
add
shrb
xchg
mov
cmpsl
ret
mov
xor
cli
inc
addr16
xor
add
stos
xor
into
fcoml
xor
in
add
adc
and
sub
arpl
mov
in
xchg
test
push
push
shll
jbe
lret
lret
xchg
pop
mov
pop
push
jle
pop
pop
lahf
movsb
pop
jp
push
dec
ffree
cmp
dec
stos
aas
sbb
lret
mov
fdivl
mov
push
sarb
jge
int
lock
jecxz
sub
fcoms
test
sbb
popf
pop
repz
cmp
pop
mov
scas
sbbb
insl
mov
lods
mov
les
adc
scas
in
popa
scas
mov
fidivl
fst
mov
xor
pop
and
add
xlat
mov
cmp
xchg
or
jle
mov
sub
adc
js
pushl
cwtl
xlat
mov
addb
jno
push
push
pop
lahf
je
lcall
pop
push
or
shrl
rorl
mov
sbb
mov
mov
pop
testb
ljmp
scas
stos
sbb
mov
imul
inc
and
arpl
push
lahf
popa
lods
daa
mov
cmc
pop
push
push
push
adc
sub
mov
jmp
add
xchg
in
mov
adc
xchg
leave
lcall
mov
clc
add
repnz
fldl
or
loopne
test
std
lds
xor
iret
push
icebp
xchg
sarb
movsl
mov
or
dec
cmp
jg
imul
inc
and
jl
ss
mov
xor
inc
lods
jae
in
stc
xor
decb
ds
out
adc
xchg
nop
addb
test
sbb
mov
mov
jle
sbb
mov
ret
cmp
test
repnz
push
xor
cmpsb
mov
add
in
inc
les
cmc
cmp
sbb
pop
sti
pop
repnz
test
cmp
xor
ja
push
or
xor
loop
test
sbb
jo
lock
or
xor
mov
repnz
cwtl
out
xor
pop
jbe
rorl
cmc
sbb
mov
insl
cmp
das
lods
xor
loope
fsts
dec
out
inc
cltd
sub
jno
rol
movsl
popa
mov
cmc
xchg
jp
jmp
in
ret
lcall
sarb
les
pop
shr
andl
fildl
call
scas
fs
xorl
sub
in
imul
inc
aam
jae
fisttps
sub
mov
cmp
mov
jge
push
inc
rclb
out
dec
cmp
or
or
xor
add
xchg
push
xchg
mov
and
xchg
cmpl
mov
out
iret
sbb
imul
movsb
pop
sub
or
das
sahf
ret
push
mov
inc
push
jbe
pop
xor
mov
imul
das
pop
insl
movsl
outsb
mov
inc
adc
push
in
cltd
popf
mov
pop
sbb
stc
sub
orb
insb
loope
sahf
fs
into
inc
rorb
pop
lods
jg
pop
jg
cld
inc
xchg
jmp
stos
inc
insb
icebp
sbb
data16
cmp
mov
push
or
test
lods
js
in
pop
into
movsb
imul
es
and
lea
outsl
into
testl
rcl
rcrl
iret
xchg
ret
ret
mov
dec
adc
mov
xchg
push
jnp
cmp
sub
subl
sbb
sub
js
out
and
jo
int
dec
xchg
xor
push
dec
mov
int3
push
jnp
mov
adc
push
cmpsb
sbb
repz
fimull
test
adc
daa
mov
cmp
out
clc
rol
xchg
fcmovbe
cmp
mov
aam
cmp
in
dec
mov
adc
inc
jne
sbb
nop
inc
mov
push
out
cltd
cmpsl
pop
sub
mov
dec
popf
iret
mov
sub
jge
iret
outsl
sahf
test
lret
outsl
iret
jge
rcrl
push
popf
out
es
ljmp
or
sub
mov
ljmp
adc
or
jno
mov
inc
mov
test
push
jno
pop
mov
ds
mov
push
jmp
jp
inc
add
sub
inc
pop
sub
pop
xor
inc
xchg
sbb
jl
test
lahf
and
test
jb
inc
aaa
insl
cltd
movsl
pusha
dec
int3
ss
das
pop
aas
in
imul
push
cmp
shlb
cmp
scas
xchg
sti
and
jmp
jmp
fisttpll
int3
pop
adc
cmp
stc
sub
rcl
insb
push
cmc
and
inc
mov
movsb
cmp
stos
adc
jno
cmpsl
sub
xchg
addr16
sahf
xchg
jbe
xchg
aaa
leave
bound
cmp
and
cmp
adc
jmp
fidivl
scas
out
pop
push
cmpsb
test
add
mov
and
xchg
mov
dec
pop
ljmp
outsl
cmc
mov
xchg
add
or
pop
lock
repz
jecxz
dec
sahf
scas
shrb
mov
mov
mov
out
mov
xchg
movsb
pop
sub
mov
dec
mov
cmp
mov
dec
adc
inc
mov
pop
mov
add
cmp
out
sub
jp
push
push
pop
lds
lods
inc
dec
jp
les
xchg
push
aaa
fisubrl
cltd
xchg
bound
cmp
pop
inc
pop
rolb
lahf
orb
mov
dec
push
jmp
dec
pop
aad
mov
inc
mov
mov
fstpt
push
ret
mov
popa
test
insl
add
stc
xchg
mov
xor
mov
inc
cli
jmp
nop
shl
icebp
jbe
add
cltd
sbbb
hlt
daa
setl
es
lret
push
mov
bnd
movl
pop
mov
mov
movsl
jl
sbb
lea
insb
mov
fwait
out
sub
iret
mov
call
fisubl
pop
cmp
nop
sub
jg
mov
sahf
and
scas
inc
ret
arpl
inc
xlat
push
imul
inc
in
push
xor
hlt
xchg
mov
adc
fmul
leave
inc
icebp
fldl
jne
icebp
pop
hlt
loope
mov
aam
push
cmp
lret
clc
sub
mov
rcr
push
int
adc
push
sub
push
jns
inc
into
inc
pop
add
pop
dec
inc
lds
arpl
cmp
cmp
lret
imul
push
mov
push
dec
pop
test
mov
mov
cmp
mov
divl
sti
rorl
dec
lods
scas
push
shl
jmp
pop
ret
dec
shll
jmp
sub
insb
fistl
stos
or
sbb
push
fwait
or
xor
rcrb
in
mov
adc
dec
mov
loopne
cmp
cld
or
lret
and
aam
fnstcw
jmp
aam
pop
mov
add
in
lods
pop
lret
jg
shrb
dec
rcrb
cmp
imul
mov
lahf
adc
popa
lods
mov
jo
jb
aad
sub
andl
dec
dec
daa
stos
jp
es
movsb
test
inc
das
add
xchg
cmp
lds
shlb
fyl2xp1
push
mov
adc
xchg
or
mov
rclb
mov
es
jnp
fs
mov
sub
jne
ja
xchg
iret
insb
or
leave
jbe
xchg
xchg
xor
js
push
or
fdivl
es
cmc
mov
cmp
pop
mov
or
sbb
xchg
arpl
mov
dec
mov
sub
rcl
mov
sub
xchg
or
and
cmp
cld
xchg
sub
push
int3
cmp
or
dec
xchg
mov
ret
push
or
jno
dec
es
cmp
outsb
jnp
push
popl
and
push
fbstp
mov
jo
lret
loopne
mov
addr16
inc
das
adc
mov
arpl
in
inc
test
xsha256
cmpsb
xchg
cmpsb
lret
push
add
jbe
xchg
mov
std
ja
push
adc
push
dec
data16
pop
cmp
in
jg
ss
mov
rcr
movsb
popa
arpl
adc
jns
mov
mov
out
pop
pop
cmpsb
jae
push
int3
das
arpl
xchg
fs
fstps
int
clc
das
xor
jnp
aam
mov
das
jns
aad
out
in
dec
shl
hlt
mov
dec
mov
xor
mov
mov
push
stos
test
xor
mov
rorl
sahf
test
out
push
jmp
scas
mov
adc
frstor
aas
cwtl
jo
sbb
jb
andl
imul
xchg
xchg
jo
push
iret
gs
fs
pusha
xchg
in
daa
xor
xchg
stc
or
sarl
mov
pop
pop
enter
fldln2
push
xor
insl
movsl
xor
hlt
and
icebp
mov
sub
out
cmp
ds
scas
pop
or
pop
jmp
cmpsl
sbb
call
inc
jnp
shrb
popf
lret
aas
and
fsts
out
mov
inc
mov
fdivrl
push
cs
jl
pop
negb
xor
jb
imul
and
addb
push
jne
cmp
sbb
xor
or
cltd
push
out
lret
icebp
sub
xchg
mov
and
push
sarl
rolb
jmp
out
dec
or
xchg
mov
repnz
xchg
push
clc
sbb
stc
push
pop
insl
fwait
outsl
and
cmp
jl
push
pop
outsl
mov
inc
cmp
dec
dec
mov
insl
loop
ss
dec
loop
cwtl
lret
inc
mov
mov
sub
jle
rcrb
mov
sbb
int
out
adc
cld
pop
fcompl
sti
int
scas
pop
mov
push
adc
cld
ret
push
jmp
sti
es
xchg
adc
dec
dec
popf
sbbl
push
jae
mov
sub
push
popf
nop
insl
mov
sbbl
push
sbb
scas
jo
iret
mov
ret
push
in
hlt
and
je
adc
sti
xchg
cmpsl
push
sbb
in
sbb
iret
dec
push
shlb
insb
push
in
popf
popa
out
test
mov
mov
inc
push
sub
aaa
fs
xchg
pop
dec
loopne
mov
jmpw
fisttpl
out
test
test
pop
or
dec
lea
ljmp
mov
popa
pop
xchg
sub
pop
mov
lods
inc
fs
repnz
shrl
lcall
sub
nop
stos
inc
ret
icebp
xor
fnstenv
push
jge
test
testl
aas
xor
iret
and
xchg
sub
fdivl
or
sub
movb
jp
pop
stos
stos
inc
fnstsw
outsl
stos
incl
xor
jbe
fs
and
cli
xchg
jne
std
xchg
or
sbb
sbb
cmp
push
cmp
mov
pop
scas
movsl
test
cs
pop
arpl
mov
ficoms
movd
fbld
les
cmc
aas
pop
mov
and
push
jg
push
mov
jle
xchg
dec
dec
in
mov
adc
pushf
insb
ret
mov
ss
xlat
dec
sbb
ss
addr16
xor
mov
mov
mov
mov
inc
xor
decl
jp
stos
insb
pop
scas
adc
lcall
aaa
xchg
jecxz
psrad
and
and
jg
sbb
sbbb
shlb
mov
call
mov
lock
mov
jae
shrl
enter
imul
call
mov
js
jp
xor
sbbl
sbb
or
mov
and
or
stc
dec
pusha
sahf
fdivl
adcl
rolb
fcoml
adc
push
stos
xchg
adc
icebp
ret
fadd
and
sub
inc
add
pop
mov
scas
arpl
mov
pushf
in
adc
pop
out
cmp
mov
cmp
and
ss
ds
lock
rolb
and
sbb
icebp
sbb
inc
sub
js
mov
out
dec
mov
stos
adc
imul
cwtl
pop
inc
jecxz
scas
pop
dec
mov
loop
xor
out
divl
es
or
dec
arpl
xchg
aad
stos
sub
cmp
adcb
pop
mov
popa
in
pop
dec
pop
lock
aaa
nop
fisubrs
dec
shlb
js
sar
movsl
fcmovnu
mov
sbb
cmp
add
pop
sub
inc
loopne
sbb
stos
loopne
aas
lahf
inc
ss
jecxz
mov
push
lcall
push
notb
lods
push
mov
mov
mov
fidivrs
andl
push
pop
mov
push
imul
aad
adc
dec
mov
pop
fdiv
iret
mov
lods
dec
std
sub
cmpsb
cmp
pop
push
mov
nop
pop
lret
push
call
aad
jl
fstpt
enter
inc
rcl
mov
push
and
jb
cmp
call
and
scas
or
pop
inc
lahf
mov
lods
sub
inc
add
add
ljmp
jp
mov
mov
adcl
rclb
and
mov
sbb
push
nop
pop
ss
mov
fucomi
sbb
ret
leave
pusha
inc
add
shll
push
dec
adc
enter
movsb
inc
es
xchg
jecxz
out
aam
xor
test
dec
lret
bound
movsb
cmp
test
sbb
mov
popa
sub
xchg
sub
push
xor
popa
clc
les
jnp
lcall
or
imull
cmp
mov
jp
fistps
push
ret
xchg
daa
mov
rcrb
inc
ret
jb
fisubs
mov
psrlq
jp
xchg
fbstp
fstpl
movsb
int3
out
cmp
and
sub
pop
push
pop
lock
std
fdiv
data16
out
bound
xor
repz
daa
mov
bound
fwait
dec
sub
aaa
ficoms
cmp
dec
sbb
jl
mov
daa
imul
jl
mov
scas
dec
xor
rcrb
fstpt
mov
into
mov
mov
push
icebp
sub
jg
into
xchg
leave
jo
sub
fbld
repnz
push
sbb
mov
inc
jae
and
xchg
mov
pop
inc
push
lds
mov
aas
mov
xchg
cmp
fists
add
mov
fldt
mov
xchg
cmp
cmp
mov
push
in
pop
fimull
mov
or
pop
mov
jbe
mov
scas
adc
mov
or
cli
pop
cmpsl
mov
ret
mov
mov
rcrl
inc
mov
dec
mov
xor
xor
and
ret
and
mov
pop
repz
call
sti
xor
and
pop
mov
setne
or
scas
xor
jno
cs
aas
mov
les
mov
mov
jmp
out
stc
pushf
aas
daa
adc
mov
dec
xor
leave
cmp
sub
test
jns
mov
xchg
aaa
sbb
or
cmpsb
push
sub
cmp
mov
xor
sbb
dec
sarb
pop
lods
xor
aad
xor
cmpsb
aas
mov
cmp
sbb
dec
adc
cld
jb
les
jmp
sub
sub
lods
sarl
add
adc
inc
mov
std
push
imul
cmpsb
jo
cmp
xor
dec
dec
orb
scas
xor
push
std
pop
xchg
sub
jle
dec
in
xor
dec
inc
add
lock
push
and
xor
test
out
insl
or
mov
aam
xor
dec
pop
fistpll
xchg
test
ss
clc
and
mov
popl
jge
mov
pop
daa
add
mov
pop
imull
inc
adc
push
add
ds
jbe
add
test
ds
out
sub
rclb
test
andl
fimuls
add
in
outsb
movsl
jp
xchg
pusha
shrb
inc
or
add
dec
cmp
add
outsb
jmp
sbb
xchg
add
rcrb
and
dec
or
cld
push
aam
mov
dec
or
mov
sbb
mov
xchg
bound
fildl
jbe
and
jl
cmp
pop
mov
mov
push
add
mov
outsl
ljmp
insl
call
shr
push
fistps
lret
cmp
push
repnz
out
imul
in
dec
pop
pop
push
fs
xrelease
xchg
lock
in
sub
jo
outsl
jmp
mov
dec
or
xlat
fs
int3
mov
mov
pusha
hlt
clc
jb
insb
or
out
imul
sbb
das
and
mov
pop
pop
std
jl
into
xchg
xor
mov
ja
stos
stos
sub
fs
pop
std
or
iret
mov
push
call
sub
dec
pop
std
lret
in
xor
test
dec
dec
pop
std
nop
jp
lea
shrl
scas
dec
pop
std
push
sbb
scas
nop
sub
addr16
pop
std
adc
mov
push
call
das
dec
pop
std
into
sbb
adc
and
js
lods
inc
pop
cltd
gs
mov
xchg
sbb
pusha
data16
cltd
add
pop
aam
in
sbb
ds
cmp
inc
rolb
and
fidivrs
pop
push
jmp
movsb
das
out
adc
sub
xor
add
mov
pop
sbb
into
aad
popf
and
or
pop
cmp
or
push
or
push
pop
sbb
xor
sub
dec
lret
sahf
sub
js
hlt
aaa
fnstcw
in
mov
pop
sbb
sbb
mov
clc
in
dec
les
repz
inc
or
jmp
cli
jg
mov
mov
jo
nop
inc
or
ja
add
jg
cmpsb
in
dec
adc
cmc
stc
pusha
dec
jne
fidivrs
lods
popa
out
adc
outsl
icebp
dec
adc
jg
es
fldl
dec
cmc
outsb
idivb
lods
stc
pop
bound
orb
xchg
ds
adc
xlat
inc
jno
outsb
mov
scas
icebp
pop
in
ret
mov
add
or
adc
inc
mull
mov
scas
icebp
pop
gs
inc
or
dec
divb
or
in
mov
sbb
push
mov
pop
loop
lds
add
inc
or
mov
insl
or
out
sbbl
pop
jp
inc
or
or
inc
or
pop
adc
add
sub
mov
sbb
jmp
dec
inc
pop
cmp
xor
test
fildl
push
inc
mov
popa
sbb
fimull
push
pop
dec
pop
movsl
sub
scas
push
incb
orl
push
negb
aam
test
sbb
lret
xchg
xchg
mov
cwtl
inc
nop
je
leave
or
addr16
ret
sbb
iret
orl
in
outsb
pop
iret
jb
jg
mov
les
shlb
ret
inc
notl
adc
mov
cmp
cmp
push
dec
or
cmp
push
push
ret
mov
fidivrl
out
lahf
xchg
roll
sbb
imul
fidivl
mov
shrl
push
xchg
mov
push
add
shrl
jbe
or
jmp
cmc
add
pop
jle
jge
cmp
push
lahf
cmp
push
jne
pop
in
hlt
cmp
sub
cltd
sub
aaa
sbb
les
push
lret
adc
or
sub
push
pop
mov
roll
sub
or
imul
ljmp
push
xor
jns
or
push
lods
daa
xchg
jg
cwtl
mov
mov
rclb
mov
cmp
push
mov
es
clc
js
mov
xchg
aas
lret
fadds
aad
push
sbb
mov
adcb
movsl
and
cmp
and
fadd
xchg
push
fstpt
or
mov
xchg
lods
fdivrs
dec
jae
mov
inc
fdiv
pop
push
mov
sbb
add
mov
cwtl
adc
xor
mov
leave
adc
inc
sbb
dec
cli
xlat
jp
mov
jmp
xor
fists
dec
popf
or
jne
cs
insl
pusha
pop
mov
jl
mov
ja
add
push
test
fisubrs
mov
fnstsw
and
mov
lods
sub
lcall
lods
jp
pop
adc
fs
dec
push
outsl
cmc
iret
jo
mov
push
lahf
mov
mov
xchg
add
and
out
mov
dec
into
push
cmp
sbb
das
mov
aas
adc
dec
xchg
inc
jl
mov
cmp
les
sahf
insl
sbb
and
lea
rcl
jns
in
and
int3
mov
aaa
test
mov
scas
xor
mov
xchg
push
sbb
subl
add
fimuls
imul
dec
inc
push
xchg
inc
sub
inc
ret
iret
xchg
ficompl
insl
out
fstpl
mov
enter
add
shlb
mov
out
outsl
lock
pop
add
out
add
rolb
outsb
lock
add
mov
scas
faddl
inc
fstpt
xchg
sub
jnp
xchg
add
fistpl
jp
add
push
or
fs
or
mov
mov
and
aas
inc
adc
ss
pop
add
push
shll
sub
add
mov
xchg
mov
mov
aaa
mov
dec
rcll
lods
xchg
aaa
mov
faddp
cmp
lods
pop
cld
inc
mov
ret
pop
int3
fldcw
lods
clc
pop
push
clc
cwtl
jmp
inc
or
pop
pop
mov
mov
cltd
push
les
pusha
popa
jns
and
jae
push
cmpsl
icebp
orl
mov
outsb
scas
xor
push
xor
add
cmp
shlb
mov
lods
jo
mov
push
imul
idivl
sub
xchg
inc
xor
add
and
push
cmp
repz
sub
in
addr16
cmp
les
mov
xchg
nop
pop
in
jmp
testb
adc
jo
or
jmp
mov
sub
push
adc
lds
xor
mov
dec
sub
test
out
jg
outsb
pop
jmp
cmpsl
jg
dec
adc
outsl
in
jbe
test
insl
jns
or
pop
mov
cmp
lds
and
push
adc
das
je
pop
repz
iret
mov
addr16
add
mov
pop
repz
aad
mov
std
adc
call
adc
pop
or
push
mov
mov
cli
fldt
stos
fs
stos
dec
jnp
ja
xchg
sub
repz
popf
or
jno
addr16
and
jmp
jno
icebp
pop
shlb
imul
adc
iret
xchg
cmpsb
divl
mov
outsl
sub
cmpl
out
std
dec
int
pop
jmp
jl
jmp
outsl
sub
cmp
add
jle
xchg
aam
and
or
daa
mov
push
sub
lods
pushf
push
mov
inc
sub
and
mov
fcomp
in
push
test
mov
sbb
imul
xchg
arpl
ret
mov
test
mov
loope
das
mov
icebp
imul
adc
fwait
mov
icebp
pop
jnp
push
std
adc
inc
adcb
js
ss
adcb
mov
xchg
mov
rolb
pop
jae
sub
aaa
mov
xchg
mov
sub
cmp
push
sarb
test
jo
cmp
mov
stos
pushf
rclb
lods
in
sub
pop
dec
in
and
xchg
out
push
add
adc
lret
lret
push
sbb
imul
imull
inc
adc
jno
cmpsb
cmp
call
sub
cmpsl
arpl
mov
rclb
out
addb
adc
push
mull
sub
pop
mov
mov
mov
xchg
inc
mov
mov
sbb
mov
fdivrl
fdivrs
arpl
xchg
add
inc
or
push
xchg
pop
add
sbb
fildll
xchg
cmp
sbb
jecxz
and
fld
cmp
xor
fiaddl
jecxz
xchg
cmp
xor
mov
notl
add
je
out
jp
sbb
clc
pop
pop
outsl
stos
sub
test
xchg
mov
cmpsb
or
out
sahf
lods
imul
out
aaa
and
and
pmaxub
mov
push
dec
or
jp
mov
mov
xchg
inc
cs
jnp
icebp
ss
shr
in
jns
inc
adc
xchg
push
jbe
xor
jmp
clc
fs
mov
mov
pop
clc
mov
mov
fcoms
sub
xchg
mov
movsb
mov
xchg
jae
enter
js
inc
mov
mov
in
jmp
mov
jnp
mov
adc
sbb
popf
rcrl
xchg
aaa
loope
jo
cli
cmc
adc
mov
cmp
stos
sub
popa
js
dec
mov
cmpsb
cmp
out
inc
test
test
movsl
xor
mov
mov
sub
xchg
loop
insl
arpl
push
jg
or
call
cld
inc
or
lahf
lret
or
pop
mov
lods
pop
add
leave
dec
adc
in
sahf
inc
mov
cmp
addr16
sahf
xchg
aas
inc
cs
pop
sbb
dec
pop
mov
mov
movsb
fdivrs
push
mov
outsl
jmp
sbb
popf
mov
dec
popa
roll
insl
jne
enter
dec
packsswb
mov
jb
mov
add
mov
jae
jge
hlt
push
fisubrl
xor
setp
sub
pop
cmpsl
cs
ret
mov
ljmp
jns
cld
pop
aaa
data16
xor
in
push
das
xchg
mov
dec
movsl
xchg
outsl
push
ret
addr16
jecxz
adc
lcall
sahf
mov
scas
cmpsl
aas
orl
or
enter
imul
mov
mov
lods
mov
in
mov
jb
sub
jle
xor
mov
and
lcall
xchg
xor
xchg
jp
mov
or
test
xchg
add
adc
and
sbb
scas
xor
mov
dec
adc
pop
add
xchg
fnstcw
adc
pop
sbb
inc
loope
inc
and
lret
pop
cli
cmpl
in
imul
sub
js
add
jge
or
imul
dec
mov
aas
in
jbe
adc
mov
pop
clc
mov
or
lods
and
mov
lret
xchg
sbb
add
test
nop
cmp
push
or
mov
aad
ljmp
jl
xor
data16
pushf
cmp
nop
mov
adc
xor
pop
pop
jg
xor
int3
cs
inc
leave
adc
ret
lea
xchg
pop
aam
mov
pop
mov
je
mov
xchg
ds
lds
mov
ret
lods
out
enter
pushf
lods
xor
adc
mov
js
add
inc
or
shlb
std
dec
push
xchg
pusha
aas
sahf
mov
data16
movsb
or
sub
fiaddl
shrb
addr16
stos
je
inc
cmpsb
mov
test
jns
xchg
aaa
stc
push
es
scas
xor
ss
xchg
bound
pop
ret
ret
pusha
xchg
sbb
pop
ret
sbb
outsb
dec
loope
jg
dec
adc
scas
rorb
into
inc
hlt
pop
test
clc
sarb
mov
sti
ret
mov
mov
ljmp
lahf
ds
js
jmp
xchg
mov
cmpl
sbb
test
out
push
mov
loop
ret
test
hlt
fs
ds
cs
jp
outsl
jmp
cld
cwtl
hlt
jmp
clc
aas
sub
cmp
test
pusha
in
hlt
test
push
test
fnsave
test
outsl
out
gs
imul
fwait
sbb
mov
mov
inc
adc
jp
adc
dec
addr16
sahf
xchg
mov
lds
sti
out
lret
stc
pop
sub
lods
xor
stos
push
shll
call
jg
mov
movsb
sub
mov
in
lahf
xchg
cmp
std
aad
jp
sub
jne
xor
or
cmpsl
dec
dec
or
jmp
imul
mov
mov
and
mov
mov
mov
loopne
pop
insl
ljmp
sub
push
outsb
int
mov
ret
in
pop
mov
xchg
es
stc
mov
fldl
lods
mov
test
rolb
je
dec
adc
push
xor
or
fucomp
jo
ror
sahf
sti
insl
repnz
sarl
je
shll
sti
arpl
push
add
dec
or
lods
sbb
inc
mov
test
in
mov
xchg
bound
into
xchg
jb
sbb
mov
mov
lret
xchg
into
filds
cmpsl
sbb
or
je
lea
ja
xlat
fcmovnbe
jge
add
data16
add
pushf
pop
dec
fdivrl
stc
pop
mov
aaa
movsb
push
lods
roll
in
cmp
jle
dec
or
cmp
xchg
inc
xor
arpl
pop
xor
and
shrb
ret
jmp
push
pop
add
sbb
into
imul
int3
in
sti
insb
and
in
and
push
xor
mov
jae
push
xchg
inc
or
inc
push
push
cmp
aaa
cmp
std
out
rolb
cmp
ja
loop
loop
scas
xchg
loope
and
add
xchg
cmp
jae
mov
or
insb
push
popa
cmpsl
inc
pop
add
add
mov
and
lods
adc
mov
dec
ja
clc
ret
xchg
mov
std
pop
adc
sbb
data16
mov
fidivl
mov
mov
fwait
sbb
shrl
lods
mov
mov
aas
and
out
push
ret
int
cmc
jno
les
sti
bound
sarb
popf
insb
hlt
xor
fsubrl
and
push
inc
in
jae
inc
inc
or
sbb
sahf
sbb
outsb
imulb
dec
out
je
cmp
pusha
insb
add
jge
orl
arpl
aad
inc
cmp
inc
or
sub
mov
sub
ss
loope
out
je
repz
int
mov
or
mov
scas
int3
xchg
cwtl
repnz
das
pop
int3
leave
xchg
push
push
clc
cmpsl
test
outsl
mov
stos
add
mov
stos
push
sbb
call
pop
inc
mov
outsl
sbb
out
jmp
addr16
mov
xor
push
dec
adc
xorb
dec
cltd
inc
je
pop
add
xlat
jns
jmp
imul
mov
adc
insb
pusha
pop
mov
lods
les
or
cli
arpl
shl
rol
mov
mov
inc
or
jge
pop
clc
inc
outsw
in
xchg
fwait
enter
addr16
lcall
xchg
adc
dec
pop
std
push
add
lret
mov
sbb
sbb
mov
adc
in
imul
outsb
iretw
push
add
jns
inc
call
clc
int
jbe
mov
cmpsb
push
or
jge
jne
add
pop
add
sbb
sub
rclb
cltd
aas
flds
orb
aad
gs
data16
pushf
inc
clc
repz
add
jmp
mov
repnz
loope
loopne
add
xchg
aas
in
fdivrs
jmp
mov
xor
aad
test
mov
xor
pop
out
cmp
test
pop
mov
call
ja
pop
out
jne
sti
lcall
clc
outsl
push
sub
pop
repz
cmp
jmp
nop
adc
xchg
fistpl
stos
or
push
rolb
jle
push
popa
mov
cs
js
sbb
lahf
sbb
xchg
arpl
pusha
rclb
enter
negb
lock
and
mov
aaa
das
scas
addr16
xor
adc
lds
bswap
pop
sub
jno
mov
mov
out
daa
popf
mov
popf
xchg
push
flds
xlat
sub
jae
repnz
mov
mov
push
imul
cltd
inc
inc
dec
rorb
dec
mov
xor
test
sub
sahf
sbb
pop
ret
insb
rcll
pop
add
or
sbb
out
push
outsl
out
push
jae
shlb
or
sub
cmp
leave
repnz
cmp
in
daa
mov
std
mov
mov
test
sub
ret
push
mov
pop
out
outsb
out
pop
and
cmp
mov
and
pop
das
mov
js
or
lods
push
xor
orb
mov
push
das
xchg
xorl
xor
jg
lret
cmp
sbb
fs
cmp
dec
js
out
xchg
cmp
test
xlat
ja
rorl
inc
jne
lret
mov
cli
out
mov
push
jno
aaa
pusha
aad
mov
mov
push
test
ds
add
orb
inc
adc
mov
mov
inc
sti
pop
int
jno
xchg
adc
cmpsl
leave
push
in
cld
sbb
or
inc
pushf
inc
or
leave
fistpl
adc
inc
aad
mov
mov
and
ret
mov
mov
je
sub
mov
mov
bswap
or
mov
popa
adc
lods
and
pop
push
out
dec
in
jbe
test
lds
cltd
jbe
xchg
lock
lret
nop
inc
jecxz
jle
cwtl
push
int3
enter
mov
call
shll
jmp
lcall
xlat
xchg
cmp
lods
sub
lock
dec
cmp
jbe
mov
or
jge
jmpw
pop
add
andb
mov
xchg
adc
mov
push
push
lods
das
sub
sbb
test
les
stos
and
mov
mov
stos
pop
popf
mov
movsb
sub
lds
adc
inc
push
popa
inc
faddl
push
fidivrl
lahf
jo
into
ljmp
hlt
add
cwtl
aaa
cmp
es
aam
push
xor
ret
insl
push
sbb
std
pop
push
cmpb
inc
jl
mov
mov
bswap
outsb
or
imul
adc
push
lds
mov
movsb
lahf
ss
jle
jne
mov
add
push
filds
inc
jnp
mov
stos
xor
shll
mov
push
cli
ret
mov
cmc
pop
repz
ds
loope
or
jns
xchg
pop
sbb
push
out
outsl
pop
jge
lret
movsl
nop
cmc
pop
fidivl
mov
mov
mov
test
inc
cmp
sub
int3
data16
inc
es
fstps
xchg
inc
daa
test
mov
std
lock
psubsw
addr16
mov
pushf
mov
data16
notl
pop
add
adc
mov
mov
push
add
ds
xchg
xchg
inc
pop
testl
je
adc
cmpsb
imul
cmp
xchg
das
repz
movsl
mov
xchg
mov
add
push
xchg
push
add
mov
mov
or
mov
and
pop
jno
repnz
mov
cmp
mov
leave
fists
rcrl
cwtl
das
mov
ret
and
repz
mov
mov
fisttpl
pop
cs
pop
jbe
fimuls
push
or
and
jmp
sti
test
repnz
mov
or
sbb
addr16
js
mov
or
or
mov
cmp
inc
dec
cs
aaa
rcrl
adcb
inc
push
scas
mov
out
mov
inc
adc
dec
or
rcr
jns
mov
rclb
add
pusha
mov
add
or
push
add
into
into
mov
cs
or
fadds
iret
inc
movsl
loop
xlat
cltd
sahf
xor
mov
stos
pop
xor
push
stc
xchg
and
shrl
and
ret
adc
xchg
fiaddl
loope
lods
xor
clc
add
jne
push
push
xchg
pushf
inc
fucomp
imul
mov
pop
xchg
cmp
jp
loop
mov
sbb
or
jle
adc
mov
mov
in
adcl
and
call
cli
scas
xor
dec
sbb
sbb
dec
push
testl
jmp
mov
xor
jl
scas
daa
jno
outsl
mov
test
test
jg
hlt
add
sarb
in
aam
into
daa
ret
push
xchg
inc
inc
dec
out
dec
cltd
mov
pop
sub
test
nop
rorb
jg
insb
adc
dec
push
mov
outsb
dec
push
insl
jns
mov
push
inc
movsb
sub
push
mov
jno,pt
push
adc
dec
stos
sub
rorb
xchg
int3
mov
fbstp
mov
shlb
iret
or
cmp
arpl
or
sub
mov
cmp
out
aaa
imul
sub
fstps
insb
call
jle
out
adc
jl
dec
adc
int3
or
fwait
jnp
mov
aad
cwtl
ds
sub
cmp
pop
test
mov
popf
inc
sti
int3
cs
in
pop
lret
or
pop
push
and
js
xchg
cmp
outsb
dec
adc
xor
push
xorl
xchg
lods
in
fbstp
lahf
test
lods
sub
int3
cmp
addr16
and
sub
pop
mov
std
dec
adc
mov
or
or
mov
jns
dec
aas
jbe
sbb
and
and
into
xchg
lds
lods
sub
in
or
lods
je
cld
pop
insl
jo
pop
out
ja
mov
pop
adc
insl
subb
sti
mov
mov
push
xchg
dec
xchg
inc
mov
int
or
loope
cs
das
stos
stos
xor
jbe
mov
aad
xchg
stos
jnp
pop
lret
rorb
inc
or
daa
mov
leave
pushf
aaa
out
inc
dec
or
hlt
jg
jne
dec
xchg
imul
into
xchg
inc
fdivl
push
push
movsl
sbbl
or
mov
paddq
jae
pop
push
sti
data16
repz
movsl
sbb
push
jle
aaa
cmpsb
adc
int
dec
test
jl
mov
xchg
insb
cmc
roll
add
lock
int3
fnstsw
sbb
test
fnstsw
mov
les
shrd
xchg
cwtl
mov
pop
xor
mov
das
and
in
pusha
sub
jne
push
clc
int3
mov
out
sahf
or
push
mov
das
insb
mov
mov
je
scas
popa
cmc
sub
fdivrs
out
sub
cmp
pusha
out
sub
mov
ret
mov
jae
dec
jne
sbb
sahf
gs
js
dec
inc
or
mov
push
adc
inc
jg
xchg
aaa
push
outsb
add
outsb
xchg
lret
aam
adc
or
fst
jl
clc
push
testl
pop
mov
mov
scas
jl
jo
ret
movsb
sub
mov
and
test
test
sbb
arpl
mov
cmp
imul
cmp
stos
mov
pop
cld
lcall
xchg
fsubs
push
int
or
pop
push
js
fildl
movsl
xor
loopne
inc
inc
dec
gs
out
insl
xorl
jnp
inc
mov
sbb
fisttps
in
add
pop
sahf
and
jmp
pop
cwtl
inc
pop
xlat
dec
jmp
sbb
rcrb
and
sub
in
outsb
pop
xor
lahf
ds
xchg
sbb
pusha
repnz
push
adc
out
push
dec
int
inc
jno
add
loop
aad
or
xchg
cwtl
pop
incl
push
daa
lods
call
sti
xor
lods
fisttpll
rcll
pop
mov
add
push
push
sti
push
icebp
pop
xchg
ljmp
imull
popf
aas
imul
fnstenv
movsb
dec
mov
aad
mov
test
fadds
mov
or
adc
adcl
mov
aam
test
arpl
insb
repnz
sti
les
loopne
xor
adc
dec
push
add
movsl
cmc
lock
xchg
mov
cmc
mov
movsl
bswap
aas
insb
adc
cmpsb
and
aaa
lods
mov
xlat
xorl
mov
pop
inc
xor
ja
sub
jno
call
fisubs
mov
test
lods
sub
push
push
lods
das
sbb
inc
dec
dec
adc
ret
lea
mov
int
dec
mov
mov
xchg
ja
mov
dec
ljmp
jp
test
insl
dec
pop
mov
enter
fsubs
mov
jg
sbb
adc
inc
sbb
cltd
dec
loop
fcomps
loopne
push
jmp
xchg
incb
test
lcall
int3
xchg
mov
jae
push
movsb
push
cli
imul
lods
xchg
gs
mov
negl
mov
mov
insl
pop
add
in
jl
mov
mov
cmpsl
insb
in
xchg
daa
and
enter
sbb
aaa
inc
adc
js
ss
jne
filds
push
icebp
cmc
popa
pop
mov
jl
pop
outsb
add
jle
lods
ss
jno
mov
inc
faddl
mov
dec
or
dec
cmp
jo
outsb
and
mov
js
movsb
dec
inc
outsl
in
pop
xchg
inc
adc
mov
aam
dec
out
add
ja
cld
std
cmpsl
xor
out
fs
das
lods
xchg
fs
adc
iret
xchg
daa
mov
mov
in
lods
adc
cmpsl
xor
out
adc
aas
leave
outsl
ljmp
jmp
xchg
pop
push
pop
std
and
jnp
inc
sbb
mov
fwait
push
in
xor
pusha
leave
flds
rolb
mulb
popf
xchg
inc
roll
fwait
and
jne
insb
jmp
dec
incl
jae
sbb
lahf
xchg
cmp
enter
cmp
cmp
mov
inc
adc
mov
loop
testl
xchg
gs
mov
sub
fsubrl
inc
adc
jne
int
das
call
jl
out
mov
int3
mov
mov
stos
ss
popf
push
xor
pop
idivl
cmpsl
ljmp
pop
mov
jbe
add
cmp
idiv
xchg
sub
mov
mov
mov
dec
fs
xor
pop
ret
popf
dec
cmp
mov
push
das
sti
popa
clc
push
js
fsubr
sbb
inc
dec
ss
xchg
xchg
mov
ss
pop
repz
inc
xchg
jp
test
mov
faddl
jmp
add
mov
add
pminub
sbb
call
push
fwait
sub
cmp
add
cmp
adc
fstl
sbb
stos
ja
adc
lock
call
dec
loope
or
cmp
or
subb
adc
ja
mov
stc
pushf
popa
jmp
dec
and
add
mov
sbb
add
pushf
int3
out
mov
mov
stos
test
push
and
xchg
js
nop
push
repnz
clc
les
mov
sahf
dec
adc
mov
sti
xchg
jne
movsb
cmp
sbb
xchg
call
loopne
jmp
or
xchg
cmp
jae
mov
fists
shl
xor
icebp
xor
js
xchg
jmp
or
or
sub
dec
shrb
rolb
add
arpl
push
cmc
push
movsl
es
sbb
enter
cltd
dec
loope
sbb
lcall
fdivl
cmp
cli
xchg
hlt
nop
movsb
cmp
adc
ret
push
loopne
push
mov
xchg
mov
fcompl
or
cs
pop
mov
inc
in
pop
out
mov
iret
data16
jbe
add
in
test
or
stos
ljmp
shlb
shlb
push
inc
fiadds
mov
or
sbb
lds
ret
mov
loope
fwait
mov
lcall
mov
sti
xchg
jae
movsl
cmp
xchg
sbb
xchg
out
into
pop
mov
js
cmp
imul
jae
mov
fstl
rcr
xor
repnz
jns
test
jmp
or
or
sub
lods
dec
shrl
into
inc
fdivr
lahf
icebp
mov
and
repnz
and
sbb
mov
loop
sbb
add
insl
fnsave
xchg
insl
sar
repnz
mov
loope
pop
adc
iret
xchg
xor
js
mov
call
cmp
sbb
sub
mov
dec
jecxz
pop
lock
add
shlb
add
test
stos
or
fdivl
dec
test
sub
cs
cld
dec
dec
filds
mov
push
movsl
mov
ret
sub
hlt
inc
mov
loop
cltd
rclb
imul
push
mov
cld
xchg
jno
cmpsb
cmp
ret
popa
les
in
iret
adc
ss
in
or
cwtl
cmp
pop
mov
fistl
aam
cs
pusha
lcall
xor
jns
adc
addl
xchg
xlat
sub
mov
sub
mov
jge
inc
sahf
icebp
mov
pop
gs
push
icebp
and
sbb
mov
loop
sbb
push
dec
out
add
insb
fidivs
cmp
xchg
icebp
lea
mov
loopne
pop
adc
rclb
mov
out
call
or
cmp
sbb
sub
mov
dec
loop
pop
lock
add
push
add
xchg
stos
or
dec
cmpsl
cld
sub
sub
dec
dec
loopne
sbb
xchg
addr16
shrl
movsl
mov
ret
repz
mov
loop
cwtl
rcrl
imul
sbb
ds
xchg
jo
cmpsb
cmp
ret
pop
xchg
jecxz
rclb
loop
out
push
out
popw
add
mov
ficoml
aam
sub
pop
repnz
or
adc
movsb
xchg
cs
daa
or
sub
shrb
inc
fdivrp
popf
icebp
mov
push
data16
dec
lock
and
sbb
les
loop
pop
rcrl
imul
popf
cmp
xchg
lock
mov
ffreep
pop
adc
xchg
xor
js
mov
out
out
call
cmp
sbb
sub
sub
rcrb
mov
loope
pop
lock
add
imul
lock
test
mov
cmpsb
sti
sub
sub
shrl
dec
dec
loope
sbb
xchg
push
movsl
lahf
icebp
xchg
repnz
movsb
cmp
dec
loop
xchg
ret
imul
sbb
xchg
jmp
xchg
outsl
or
cmp
rcrl
xchg
loop
rcll
mov
jns
xor
out
gs
add
mov
fsts
fsubrl
dec
pop
std
pop
repnz
mov
jns
adc
xchg
cs
or
push
divb
shrl
dec
pushf
icebp
mov
sbb
and
sbb
inc
sub
cmp
xchg
dec
loop
push
ret
in
add
push
ja
cmp
xchg
out
mov
mov
faddp
pop
adc
rclb
pop
lock
call
cmp
sbb
sub
pop
scas
mov
loopne
pop
lock
add
push
int
push
call
xchg
xchg
sub
fdivs
dec
movsl
stc
sub
imul
sbb
mov
add
insl
sahf
lock
and
sub
cmp
adc
xchg
ret
pop
enter
xchg
jmp
mov
ljmp
ds
pop
lds
cmp
adc
pop
lock
ja
mov
and
or
mov
pop
cld
pop
repz
dec
jp
adc
xchg
cwtl
das
aam
or
dec
daa
js
ret
aam
jp
dec
loopne
fwait
repnz
sbb
decl
adc
mov
ret
hlt
xchg
dec
jecxz
adc
push
push
imul
pop
imul
mov
ffree
pop
punpckldq
xchg
xor
jns
mov
icebp
in
add
cmp
push
mov
pop
xchg
mov
cmp
pop
lods
mov
fistpll
icebp
stos
add
imul
js
std
push
repnz
cmpsb
adc
mov
testl
mov
push
into
imul
pushf
out
mov
and
cmpsb
cmp
inc
xchg
les
bound
xchg
call
mov
call
or
mov
pop
pop
mov
cmp
adc
pop
icebp
bound
add
mov
and
or
mov
pop
cli
pop
hlt
sub
imul
mov
push
movsl
push
repz
and
inc
aad
js
dec
loope
cltd
repz
sbb
dec
in
adc
mov
shll
rcll
inc
loop
add
loop
lcall
xchg
in
mov
mov
fcmovnb
pop
or
jecxz,pn
pusha
mov
repnz
add
rcrl
mov
pop
cwtl
das
mov
mov
fnsave
repnz
aam
xor
jns
cld
push
repnz
movsb
adc
mov
aam
testb
jns
repz
push
int3
push
test
in
mov
pop
mov
cmpsb
cmp
inc
xchg
les
popa
insb
add
mov
and
cmp
xchg
push
test
mov
pop
pop
fnstsw
push
scas
in
loope
pop
icebp
pusha
add
xor
and
push
cmpsl
inc
xlat
fsubs
mov
pop
stc
pop
cmc
sub
imul
lahf
lcall
repnz
ret
movsl
inc
insl
ja
dec
loope
cwtl
hlt
mov
sbb
dec
jmp
test
sahf
cmp
movsl
cmp
dec
in
adc
pop
inc
loope
add
data16
cwtl
xor
and
add
mov
fcmovb
pop
or
cmp
jnp
mov
repnz
add
xor
and
mov
aad
test
pop
repz
cld
aam
cs
jp
sti
dec
repnz
mov
mov
mov
ret
aad
cmc
inc
dec
jecxz
push
hlt
mov
push
lret
test
sbb
cmpsb
cmp
aas
xchg
les
pusha
insl
add
in
jns
mov
and
aaa
add
cmp
enter
cmp
or
out
loopne
pop
icebp
pop
add
cmpxchg
mov
add
inc
fcom
and
pop
imulb
jns
imul
popf
fwait
xor
pop
xsha256
cmpsb
push
lock
les
les
cmc
xchg
cmc
mov
push
push
dec
jmp
mov
pushf
cmp
enter
cmp
mov
fildll
adc
xchg
xor
cwtl
call
or
mov
fadd
pop
or
lea
in
pop
scas
pop
repz
lcall
and
xchg
aas
push
cmpsl
mov
fnstenv
movsl
cli
aad
sub
jnp
stc
dec
repz
lcall
insl
mov
and
insl
repz
dec
in
adc
mov
imul
adc
mov
sbb
cmpsl
outsb
or
out
pop
pop
rcrl
nop
loop
jp
mov
and
xor
stos
inc
aaa
xchg
mov
pop
leave
pusha
mov
cmp
jle
sub
pop
incl
adc
rcll
fcom
and
dec
push
negb
daa
js
push
dec
jge
jp
icebp
mov
fwait
fwait
xor
push
adc
and
lds
ret
dec
jecxz
xchg
cmc
mov
adc
adc
fwait
cmp
enter
ds
mov
mov
packsswb
jnp
xor
cltd
out
test
mov
or
mov
in
pop
lods
pop
hlt
fidivrs
lods
jnp
xor
and
test
aas
push
cmpsb
mov
fdivs
hlt
movsb
stc
aad
sub
jnp
clc
dec
repz
lcall
insb
mov
and
insl
repnz
dec
in
adc
mov
imul
adc
sbb
cmpsl
ds
or
cmp
lds
outsb
add
adc
add
xchg
mov
push
leave
pusha
mov
cmp
jle
sub
pop
incb
adc
rclb
fcom
and
mulb
ja
push
inc
jge
jns
icebp
mov
lcall
dec
in
mov
lds
ret
repz
cmc
mov
adc
add
adc
lcall
ds
mov
mov
fsubrl
push
in
xchg
das
mov
popa
mov
cltd
out
test
mov
pop
pop
aas
mov
in
pop
lods
pop
hlt
fnstsw
lcall
and
andl
xlat
push
movsb
mov
jb
cmc
mov
lds
dec
repz
xor
adc
popf
out
das
and
dec
in
adc
lea
add
gs
xchg
out
and
mov
cmpsl
imul
call
mov
jp
mov
and
xor
cwtl
arpl
lods
inc
xor
push
lret
cmp
jg
sub
pop
std
push
popf
jnp,pn
adc
into
xchg
add
mov
push
hlt
pusha
mull
inc
jle
js
icebp
mov
cltd
pushf
xor
sbb
cmpsl
dec
in
mov
lds
rorb
testb
in
stos
push
mov
cwtl
aaa
xor
push
mov
mov
fldt
or
mov
pusha
mov
cltd
in
stos
inc
mov
and
push
pop
aas
mov
out
pop
stos
pop
hlt
fstpt
fwait
stos
cld
jnp
cs
mov
sbbl
mov
aam
pop
mulb
les
testb
jp
pushf
xor
adc
pushf
in
das
push
mov
dec
in
adc
mov
imul
fs
and
mov
lret
cmpsl
imul
lds
jo
fucom
jp
scas
mov
popa
add
mov
push
lret
bound
test
pop
repnz
cld
pop
sahf
sub
dec
and
cs
mov
mov
push
repnz
clc
and
imul
repnz
xchg
popf
xor
sbb
test
ljmp
popf
cmp
dec
in
nop
testl
adc
mov
xchg
xor
test
jmp
or
pop
cmp
outsl
push
or
jl
sub
and
mov
lcall
and
add
inc
xlat
xchg
pop
cmc
fnstcw
pushf
test
lret
and
jg
inc
mov
mull
ret
hlt
inc
hlt
mov
popf
xor
cltd
adc
lcall
jo
cmp
clc
popl
insb
add
bound
lods
xchg
loop
and
test
addr16
push
ljmp
jno
mov
in
or
add
xor
int3
arpl
cmpsl
ljmp
cli
or
test
lret
cld
sahf
inc
fcmovne
sbb
stc
and
insb
mov
repz
xchg
sahf
xor
dec
call
xor
fwait
cmp
jno
mov
clc
pop
push
insl
add
loope
lods
adc
and
test
jmp
cmp
jo
or
mov
mov
loopne
lods
inc
scas
add
mov
add
test
call
not
jbe
popf
cmpsl
clc
jge
sub
and
cli
dec
fwait
xor
inc
fimull
push
shrb
clc
sahf
icebp
xlat
outsb
and
jg
repnz
cmc
mov
sahf
xor
enter
cwtl
jmp
fidivl
cmp
insb
or
insl
add
pusha
pop
scas
xchg
loopne
and
mov
int3
in
test
jmp
xchg
pop
mov
fxam
jl
stos
nop
daa
lcall
and
adc
add
pop
hlt
push
clc
or
test
es
sti
pushf
inc
fcmovne
sbb
dec
dec
out
stc
pop
jo
insl
mov
ret
hlt
mov
xchg
sahf
xor
inc
out
push
sbb
enter
jno
mov
clc
mov
fists
lods
adc
and
mov
inc
out
push
jmp
cmp
jo
pop
pop
out
lea
mov
fistpll
inc
lods
add
xor
lret
push
inc
flds
pusha
not
je
popf
movsl
idivl
sub
and
clc
dec
pushf
xor
fimull
mov
clc
pushf
lock
mov
testb
xchg
adc
fs
leave
sbb
push
out
or
nop
cmp
pop
pop
scas
fisttps
loop
stos
inc
add
test
pop
mov
jb
xchg
out
or
add
pop
cld
scas
inc
jle,pn
mov
adc
ljmp
testb
daa
jne
adc
enter
lcall
dec
in
stc
sbb
adcb
ret
hlt
xchg
sahf
xor
inc
in
push
push
push
fidivl
mov
clc
mov
fstl
lods
push
pusha
lea
das
xor
pusha
mov
inc
in
push
jmp
cmp
jo
add
mov
fidivrs
inc
stos
jmp
xor
lret
push
inc
flds
mov
pop
sahf
movsb
cmc
jle
daa
and
xor
inc
fisttpl
mov
stc
fwait
out
fsubrs
mov
testb
xchg
adc
lds
push
xchg
out
leave
pop
mov
jb
cmp
imul
outsb
add
mov
mov
cmpxchg
int
xor
in
xor
jae
xchg
out
or
add
pop
sti
scas
inc
sub
dec
int
or
xlat
jmp
pop
notb
or
movsl
inc
daa
mov
clc
cwtl
inc
fmul
sbb
cli
sbb
outsl
lahf
cmp
sbb
testb
adc
push
adc
xor
xchg
xor
push
call
mov
fistl
scas
or
mov
pop
mov
inc
jecxz
push
ljmp
jno
add
orb
pop
sahf
fdivl
inc
test
lret
lret
std
dec
inc
fiaddl
mov
or
and
inc
popf
xor
push
inc
faddl
mov
cli
cltd
in
fnstenv
mov
testl
ret
popa
mov
lret
fdivl
ss
call
cmp
sbb
or
cs
inc
pusha
add
xor
je
test
out
push
cmpsb
xchg
sub
daa
add
inc
sub
mov
jle
inc
fdivr
lahf
in
adc
pusha
testl
jle
mov
les
pop
mov
sti
sbb
jo
cmp
mov
lea
lods
inc
loopne
push
adc
xchg
xor
jae
mov
jmp
mov
fstps
scas
or
mov
ss
scas
lods
inc
loope
push
jmp
add
arpl
jb
add
orl
jne
inc
cmpsl
sti
es
sti
dec
inc
fstpt
jmp
dec
lahf
stc
shrb
mov
and
daa
mov
jbe
inc
fldl
mov
sti
xchg
ljmp
jmp
clc
outsl
or
cmp
nop
push
xor
pop
mov
ds
es
pop
push
pop
or
rolb
xchg
sbb
and
xchg
mov
push
daa
testl
sahf
bound
dec
or
stc
mov
inc
test
mov
inc
pop
lret
xchg
jnp
sub
fimuls
outsb
fldlg2
or
fdivrs
and
loop
sarl
sub
leave
lea
pop
xchg
sti
pop
es
mov
nopl
xor
xchg
iret
xchg
pop
icebp
and
xchg
je
imulb
imul
lea
xchg
inc
dec
xchg
shl
jge
leave
adc
insl
add
ret
mov
or
fcomps
adc
add
sub
adc
push
xor
adc
sub
fistpl
sbb
and
sub
dec
mov
iret
inc
xchg
mov
mov
fiaddl
adc
mov
dec
arpl
mov
sub
inc
xchg
addr16
shll
lret
push
adc
dec
fistpl
mov
push
lcall
sub
jmp
xchg
aas
int
std
sbb
int
and
mov
dec
or
mov
cmc
dec
mov
scas
pop
or
out
js
dec
push
les
jl
sbb
jle
jne,pt
aaa
xor
leave
roll
add
fidivrs
push
mov
loop
lahf
push
xchg
icebp
aas
mov
or
lods
sub
fimull
and
in
ds
push
sub
flds
dec
add
cwtl
int
inc
inc
mov
xchg
add
inc
pop
or
orl
test
add
xchg
or
mov
xor
jb
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
add
subb
pop
xchg
in
sub
hlt
fwait
in
faddp
mov
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
loope
test
inc
jg
mov
mov
cmp
movsl
push
pop
nop
in
jo
and
pop
sbb
and
xor
xor
rorb
sub
out
hlt
xchg
push
xor
fs
rclb
cmp
cli
pop
call
push
enter
movq
sub
mov
adc
push
orl
js
int
dec
ss
mov
cltd
xchg
out
inc
add
lods
mov
lret
xchg
jle
inc
fildll
test
or
es
add
in
pop
jno
jecxz
das
cmp
inc
and
hlt
inc
lods
xchg
pop
sbb
xchg
inc
enter
mov
dec
sbbl
xor
fisubs
mov
iret
jl
or
sub
push
mov
aaa
imul
das
test
and
lds
and
cltd
mov
jp
idivl
jnp
out
not
inc
mov
ffreep
aaa
jecxz
jg
inc
sbbb
mov
shll
lea
cmp
xor
xor
cmp
xor
mov
repz
jmp
aaa
out
and
ljmp
sbb
idiv
adc
xor
mov
mov
or
pop
pop
inc
hlt
or
push
lret
mov
fsubrl
jns
fcomp
pop
dec
nop
jo
test
inc
xor
test
cld
lea
pop
or
cld
adc
out
cs
les
sub
faddp
cmp
dec
ja
jb
nop
and
add
imul
outsl
lock
out
mov
sbbl
add
in
out
push
nop
shll
fldcw
or
xchg
loope
js
cld
sbb
les
ffreep
dec
and
cmp
cmpsb
addr16
xchg
lret
sbb
lcall
add
xor
xor
