push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
pop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
lea
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
or
add
sub
add
sbb
add
and
add
add
out
add
push
add
fsubs
add
pop
and
add
add
lods
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
add
dec
and
add
and
add
and
add
add
shlb
add
and
add
and
add
and
add
add
add
and
add
add
sub
add
add
add
add
mov
add
add
add
and
add
add
add
add
push
add
add
add
add
add
pop
and
add
add
add
add
add
add
nop
and
add
add
add
add
sahf
and
add
add
or
add
sub
add
sbb
add
and
add
add
out
add
push
add
fsubs
add
pop
and
add
add
lods
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
add
dec
and
add
and
add
and
add
add
shlb
add
and
add
and
add
and
add
add
add
and
add
add
sub
add
add
add
add
mov
add
add
add
add
outsl
bound
dec
outsl
arpl
add
add
popa
jo
jb
add
xchg
add
je
jne
jb
outsb
je
push
add
push
push
je
imul
inc
add
addl
jb
popa
je
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
add
gs
outsl
jbe
inc
imul
jns
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
gs
imul
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
outsl
bound
inc
insb
popa
addr16
call
inc
imul
bound
gs
add
call
inc
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
jne
jb
outsb
je
jb
arpl
jae
aam
inc
gs
jb
jbe
push
jns
gs
add
fs
imul
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
inc
gs
je
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
addr16
arpl
jo
inc
imul
insb
insb
push
outsb
jb
imul
jb
gs
and
inc
js
jb
arpl
outsl
outsb
inc
add
pop
add
addr16
imul
ret
add
inc
jb
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
push
gs
popa
addr16
outsl
js
add
mov
inc
push
add
inc
gs
gs
imul
inc
insb
insb
push
outsb
jb
imul
jb
gs
sbb
insb
imul
outsl
outsb
add
insb
inc
bound
je
add
gs
popa
insb
insb
outsl
arpl
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
mov
jns
push
iret
push
mov
dec
push
testb
popf
mov
mov
cs
adc
iret
sbb
sub
popa
pop
roll
enter
jno
jbe
sbb
and
stos
leave
push
mov
cs
ss
xor
andl
add
fistl
cmpsb
jl
imul
adc
fmulp
sahf
jl
sub
mov
push
sbb
sarl
dec
int
sbb
test
cltd
adc
xor
adc
scas
adc
dec
mov
in
xchg
inc
or
inc
cmp
pop
mov
inc
sbb
mov
ret
call
mov
mov
roll
popa
inc
rolb
dec
sbb
push
sub
lcall
aaa
cmp
xor
imul
adc
shrl
mov
xor
idivl
lods
sbb
or
insl
in
add
dec
imul
jp
pop
fsubrl
ret
cwtl
push
ja
sbb
mov
dec
xor
xor
cmp
lds
hlt
out
pop
test
iret
or
jae
fldt
test
or
jbe
sbb
je
or
imul
loop
inc
sub
cmp
cmp
das
lods
scas
adc
cmp
jge
in
add
jbe
add
cltd
faddl
xor
pop
jmp
mov
lret
sbb
ljmp
inc
leave
stos
ficompl
cmp
add
ds
lods
aaa
pop
inc
add
js
jmp
sub
cltd
xchg
rclb
call
xor
test
ret
cltd
push
inc
pop
cmp
xor
ljmp
cmpsb
lods
sbb
enter
adc
aam
xor
sbb
gs
mov
push
in
shll
rolb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jp
stos
lods
stos
add
cmpsb
push
mov
mov
mov
ret
ret
lret
int3
int3
into
rcl
in
rcl
shl
ror
shl
int3
int
hlt
enter
leave
leave
enter
in
mov
mov
lods
stos
stos
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
leave
leave
not
rcl
cld
fcom
std
xlat
xlat
fcomp
aad
dec
iret
sar
int3
int
aad
aad
iret
ror
inc
ret
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
lret
call
rcl
aad
xlat
fcom
fcom
call
aam
dec
int3
into
dec
int
call
dec
int3
int
rol
mov
mov
scas
std
test
test
xchg
xchg
xchg
mov
push
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int
call
rcl
fcomp
fcom
call
aam
int
into
dec
lret
int3
int
inc
sarl
mov
mov
cmpsl
cmpsb
cmpsl
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
pop
pop
pop
fs
sbb
or
xor
aaa
ss
cmp
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
enter
iret
ror
call
aam
call
aam
rcl
sar
mov
inc
ret
mov
mov
ljmp
movsb
movsl
pushf
pushf
sahf
xchg
cwtl
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jg
jge
jge
jge
jno
jo
bound
mov
cmp
inc
inc
mov
jo
outsb
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
lret
lret
lret
enter
ret
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
cltd
fwait
fwait
in
addb
push
prefetchw
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
jl
nop
lea
incb
jp
idivb
jmp
jo
out
push
fdivs
jae
jle
jg
jp
jp
arpl
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
incl
addb
xchg
xchg
xchg
mov
mov
xchg
mov
jp
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
lahf
in
mov
incl
mov
std
mov
jge
jo
jno
jne
je
jg
jge
addb
addr16
cmp
and
and
cmp
movsb
movsb
movsl
shrb
stos
lods
sti
stos
lods
lods
stos
stos
stos
test
stos
std
movsl
mov
cltd
xchg
xchg
xchg
decl
jge
jp
jns
jp
jnp
mov
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
test
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
pop
push
push
femms
or
dec
imul
xchg
xchg
leave
cltd
cltd
fistps
cltd
cltd
stc
nop
xchg
std
mov
mov
mov
mov
mov
fwait
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
test
add
pop
adc
cmpsl
scas
call
fwait
xchg
cltd
incl
xchg
decb
xchg
xchg
pushf
pushf
pushf
std
mov
mov
xchg
in
xchg
nop
in
test
push
jne
or
add
or
inc
es
daa
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
std
mov
call
sahf
lahf
jmp
test
pushl
cmpsl
lods
mov
xchg
test
std
les
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
popf
cwtl
fwait
incl
mov
xchg
decl
xchg
xchg
sahf
pushf
sahf
mov
test
mov
cwtl
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
popaw
pusha
popa
jne
jae
mov
lahf
test
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
ss
mov
ja
mov
movsl
mov
mov
mov
lods
lods
stos
mov
movsl
movsl
add
mov
add
pop
adc
mov
jmp
lea
call
xchg
xchg
call
xchg
lcall
lahf
sahf
sahf
mov
movsb
movsl
stc
cwtl
cltd
fwait
out
nop
xchg
nop
xchg
les
lcall
xchg
cmc
nop
mov
cld
xchg
jg
std
xchg
je
lcall
jmp
jge
mov
jnp
mov
jb
mov
insl
ljmp
adc
lods
or
ljmp
inc
jge
mov
mov
lods
pushf
movsl
movsb
movsl
and
add
mov
pop
pop
adc
mov
lcall
nop
xchg
call
cltd
lcall
lahf
sahf
lcall
cwtl
lcall
xchg
xchg
nop
xchg
xchg
call
xchg
lcall
lcall
popf
xchg
xchg
insb
mov
xchg
pop
jg
xchg
dec
js
cltd
je,pt
lcall
mov
push
ljmp
ljmp
adc
lods
adc
lods
adc
mov
imul
adc
imul
inc
cmp
cltd
lods
mov
scas
lods
scas
mov
movsl
movsb
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
lcall
movsb
movsb
jmp
mov
decl
mov
decl
mov
lcall
xchg
dec
jnp
xchg
cmp
decl
pop
decl
or
push
pop
call
pop
lcall
adc
ljmp
outsb
pushl
pop
outsl
mov
and
mov
and
mov
xchg
lods
mov
scas
scas
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
lcall
mov
cmpsl
jmp
test
cmpsl
lcall
jle
decl
inc
jo
mov
imul
sub
mov
pop
incl
add
push
decl
add
xchg
add
xchg
add
fwait
add
lahf
add
or
pushl
daa
jbe
mov
sub
mov
sub
jle
leave
das
cmp
leave
inc
mov
enter
sarb
lret
movsb
dec
mov
mov
add
add
add
lods
movsb
test
push
push
push
adc
cmpsl
scas
ljmp
lahf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
incl
add
addl
incl
add
popl
push
call
add
mov
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
sarl
mov
sarl
call
cmp
dec
mov
std
mov
mov
movsb
movsl
mov
add
mov
add
add
add
mov
dec
dec
adc
movsb
test
mov
mov
sahf
cltd
lahf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
xorps
mov
push
incl
add
decl
add
nop
add
xchg
add
sahf
add
add
cmpsb
add
lods
add
pushl
cmp
dec
inc
call
inc
call
inc
mov
xlat
dec
xchg
fmuls
fisttpl
ficoml
call
test
std
mov
mov
movsl
movsl
movsl
arpl
mov
add
add
add
cltd
cwtl
cwtl
add
dec
adc
jnp
mov
test
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
ss
decl
sbb
call
adc
decl
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
mov
fs
and
mov
aam
cltd
call
push
fwait
fsts
fstl
ficomps
fists
jmp
pop
lahf
jmp
pop
mov
fadds
ret
mov
mov
test
cmpsl
jne
mov
sahf
add
inc
inc
adc
jns
lahf
lcall
sahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
mov
call
and
xchg
and
call
sbb
nop
or
nop
add
add
lcall
ljmp
add
mov
data16
mov
xor
fisubl
jmp
bound
jmp
cmpsl
jmp
data16
call
push
cmpsl
jmp
test
mov
test
mov
sahf
lahf
add
inc
inc
adc
jp
xchg
cltd
call
lahf
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
jo,pn
fwait
xor
cwtl
sub
cwtl
sbb
pop
call
add
mov
add
lods
add
mov
pushw
adc
roll
frstor
jmp
jo
jmp
jo
jmp
jo
jmp
jae
in
jae
out
jbe
out
jbe
out
jae
jmp
mov
mov
cmpsl
cmpsl
lcall
sahf
add
add
aas
adc
outsb
js
lea
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
lahf
cmp
sahf
cmp
xor
cltd
push
call
add
sahf
add
movsl
add
test
add
mov
fs
mov
sbb
fistl
in
mov
ljmp
in
cmpb
icebp
cmpl
push
test
call
mov
shl
test
cmpsl
pushf
pushf
sahf
daa
lahf
sahf
mov
add
add
add
pop
add
xor
push
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
pushl
insb
mov
cltd
cmp
inc
jle
movsl
inc
jg
movsl
cmp
fwait
sbb
add
pushf
add
mov
add
scas
add
mov
gs
mov
add
shlb
cmp
movsw
jmp
mov
push
pop
push
nop
ret
push
nop
ret
push
nop
push
nop
xchg
clc
pop
out
nop
sar
mov
inc
ret
stos
stos
stos
mov
popf
popf
xor
popf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
pushl
mov
inc
mov
ret
inc
ret
ret
mov
jge
lcall
dec
cmp
dec
cmp
xor
pusha
lcall
add
cmpsb
add
lods
add
mov
arpl
mov
add
movl
jmp
ja
out
xchg
ret
push
lcall
repz
cmc
lcall
cld
popf
int
cli
sahf
int
cli
cltd
lret
xchg
ret
mov
cli
mov
mov
sahf
lahf
mov
add
add
add
xor
outsb
push
dec
dec
jecxz
pop
call
mov
mov
mov
sar
mov
mov
mov
ljmp
dec
mov
mov
or
pushf
add
mov
add
mov
arpl
mov
add
movl
jne
filds
out
mov
push
movsl
int
mull
iret
cld
test
sar
cli
test
sar
test
sar
negb
lret
dec
enter
mov
into
sahf
lahf
lahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
sub
sub
inc
inc
inc
bound
push
xlat
je
jb
mov
rol
ret
mov
ret
ret
ret
inc
inc
enter
rol
mov
cmpsb
jmp
push
mov
scas
dec
test
lahf
sbb
pop
jmp
arpl
mov
fs
mov
add
into
add
fadds
je
loopne
jge
out
pop
cmpsl
push
popf
leave
cli
lods
aam
sti
mov
cli
mov
cld
scas
sar
cld
mov
cld
mov
std
mov
cld
mov
pushl
sar
cmc
movsb
jmp
mov
call
leave
int3
mov
mov
sahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
sbb
dec
dec
dec
outsb
jo
mov
mov
aam
fsubr
fcom
not
rcl
std
lret
int
dec
lret
lret
lret
lret
lret
leave
leave
mov
scas
jmp
push
mov
stos
cmp
lcall
add
lods
add
mov
mov
add
roll
outsb
fadds
je
filds
jae
jmp
jae
cli
scas
aam
mov
std
mov
mov
cld
mov
xlat
inc
std
mov
int
call
leave
into
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
movb
jecxz
out
call
test
in
leave
fucom
fdivr
fdivr
int3
rcl
mov
imul
jmp
add
mov
arpl
mov
add
lret
add
add
faddl
ja
in
ja
out
xor
cld
mov
inc
inc
loop
inc
fdivrp
std
dec
fdivrp
inc
fdivrp
std
enter
leave
fdivrp
std
lret
loope
sti
mov
leave
call
lret
mov
mov
xchg
adc
add
add
incb
std
add
incb
hlt
div
or
out
in
pop
in
in
in
sub
out
out
dec
ljmp
xchg
call
out
aad
fstp
jmp
mov
xchg
cmpsb
cmp
movsl
push
jmpw
add
mov
arpl
mov
add
into
add
fadds
jae
loopne
js
ljmp
sti
mov
jecxz
dec
jecxz
dec
in
dec
jecxz
dec
in
dec
jecxz
std
int
shl
call
in
shl
std
shl
cli
out
mov
fdivr
cmpsl
cmpsl
mov
cwtl
xchg
add
add
add
std
add
incb
div
clc
add
repz
hlt
repnz
in
repnz
pop
out
repnz
cmp
out
in
pop
loopne
loopne
les
xchg
sti
sahf
es
push
pop
jmp
pop
pushl
add
movl
jno
fiaddl
je
jecxz
jns
jmp
jle
negl
sti
mov
std
shl
std
iret
in
call
jmp
std
shl
std
aam
fsub
call
out
shl
push
ret
aam
jecxz
lret
repz
xchg
xchg
and
cwtl
xchg
add
std
sti
add
std
stc
add
cli
cli
add
cmc
repz
aad
xor
mov
xchg
negb
add
add
scas
add
mov
add
leave
add
add
faddl
jne
out
js
out
sbb
sti
fdivrp
std
fldl2e
std
fldl2e
fucomi
fucompp
fsubr
fsubr
fsubr
jmp
in
fsubrp
fucomip
shl
push
aam
call
iret
sar
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
add
loope
add
leave
sbb
stos
jnp
repnz
and
sahf
add
cmpsl
add
mov
popa
mov
add
int
outsb
call
add
fiadds
jne
ljmp
sti
mov
cld
aam
fucomip
std
fucomp
std
std
fucompp
call
call
cld
shl
cld
shl
sti
shl
stc
into
stc
lret
cmc
ret
xlat
out
mov
jmp
rcr
call
fcom
sti
mov
mov
lcall
add
add
add
aad
mov
mov
lahf
jmp
sub
mov
add
mov
fs
mov
add
roll
jo
xlat
add
loopne
js
call
ss
cli
xchg
enter
loopne
cli
lret
loope
cli
fdivrp
idivl
aad
repz
sar
repnz
into
call
mov
iret
std
call
shl
jmp
in
mov
mov
xchg
add
add
add
into
int3
add
shrl
loopne
ss
mov
add
mov
addr16
mov
add
into
push
jno
rorl
jns
loopne
cmp
jmp
mov
ljmp
std
loopne
ret
cld
loopne
cli
fdivrl
lock
int3
in
lret
xlat
shl
fadd
call
out
test
out
out
popf
jmp
leave
lret
push
stos
lods
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
ret
ret
ret
pop
mov
lods
aam
dec
jg
pushf
sbb
test
insb
lods
and
mov
jns
mov
inc
xchg
les
lret
arpl
hlt
rorl
mov
mov
leave
lret
int3
rcl
lret
mov
int
mov
fcom
aam
fidivl
fsubp
gs
in
call
in
jmp
repnz
sub
cmc
mull
lock
fstp
or
mov
into
add
add
add
rolb
mov
test
pushf
cmc
mov
jne
ljmp
mov
sarb
test
mov
mov
cmpsl
leave
mov
mov
enter
int3
shlb
ror
push
rcl
rorb
xlat
aad
rcr
xor
daa
ficompl
fcoml
fucom
loope
loopne
jecxz
out
ljmp
cli
testb
std
cld
add
std
add
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
rcll
les
mov
daa
int3
ror
and
aad
sbb
rclb
iret
rorl
rcr
push
aam
xlat
add
fstp
add
add
in
add
in
jmp
add
std
incl
mov
mov
add
ret
ret
sub
mov
mov
push
rol
or
enter
enter
int
add
roll
rcl
aam
rcl
aam
fcom
add
fadds
fcmovnu
loop
aad
flds
fnstsw
loop
fstp
filds
jecxz
call
add
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
ret
les
mov
mov
ja
stos
test
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
iret
iret
jmp
aad
cmc
aam
sar
ror
sar
int
int
int3
lret
lret
mov
mov
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
cmpb
aas
aas
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
sar
xlat
aad
xlat
xlat
aad
iret
iret
sar
into
iret
int
int3
int3
int3
mov
mov
cld
stos
lods
lods
icebp
cltd
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
je
fs
inc
dec
inc
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
int3
lret
rcl
call
aam
dec
int3
lret
inc
mov
sarl
ljmp
popf
popf
xchg
xchg
xchg
jmp
outsl
outsl
xchg
pop
push
pop
dec
add
add
add
add
add
add
addb
test
jns
push
push
pop
pop
pop
movsb
push
push
push
stos
push
insb
outsb
push
pop
pop
cmp
cmp
pop
outsl
outsl
outsl
adc
mov
mov
ret
mov
mov
mov
jmp
fwait
fwait
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
lcall
pushf
xchg
cltd
fcoml
addl
jmp
js
sarb
jp
jp
jp
jb
jae
push
push
push
cmp
jne
sahf
pushf
pushf
mov
scas
lods
repz
scas
scas
sti
scas
lods
scas
std
test
popf
pushf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsb
movsb
cmpsb
cltd
jae
jb
adc
adc
add
add
add
add
insl
insl
outsl
pop
xchg
mov
lahf
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
jo
outsb
orl
cltd
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsl
test
std
mov
scas
mov
mov
mov
movsl
mov
addl
add
add
popa
pop
pop
or
lods
mov
cmpsl
mov
mov
lea
call
lahf
mov
negl
cmpb
push
push
jo
pop
push
outsl
insl
outsl
outsb
xchg
subl
xchg
lock
mov
lcall
mov
mov
xchg
mov
dec
mov
mov
mov
out
lods
stos
insl
stos
test
add
add
add
pop
pop
popa
or
mov
in
mov
nop
call
cwtl
lcall
cltd
cltd
cltd
fwait
fwait
pushf
lahf
popf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
out
xchg
jne
notb
jle
sahf
dec
jp
movsl
inc
jp
lods
ss
scas
sub
push
outsl
ljmp
sbb
mov
mov
mov
mov
jle
movsb
movsl
push
pop
popa
pop
or
mov
in
movsb
test
lcall
mov
lahf
call
mov
call
jno
cld
xchg
popa
test
xchg
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
xchg
adc
mov
adc
imul
sbb
mov
outsl
mov
and
mov
stos
mov
scas
scas
scas
xchg
popf
lahf
lahf
adc
add
add
pusha
popa
popa
or
lods
mov
stos
movsb
cmpsl
jmp
cmpsb
test
stos
test
test
decl
cmp
mov
decl
adc
test
push
decl
add
xchg
add
popf
add
cmpsb
or
je
mov
sub
jle
leave
xor
dec
pop
xchg
inc
test
divl
test
add
add
add
popa
pusha
pusha
or
cmpsb
test
jmp
scas
mov
mov
mov
mov
mov
movsb
xchg
lahf
call
adc
mov
push
incl
add
push
decl
add
sahf
add
cmpsb
add
mov
insb
inc
ss
inc
mov
iret
inc
mov
roll
call
inc
xchg
fimull
call
bound
stc
mov
mov
movsl
movsl
mov
add
add
add
pusha
or
lahf
mov
ljmp
mov
pushl
mov
stos
lcall
sbb
decl
or
call
add
sahf
add
add
lods
add
mov
dec
xchg
fsts
fcompl
fistps
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jl
jp
fwait
xchg
lcall
scas
scas
pushl
mov
mov
jmp
cs
lcall
and
xchg
adc
xchg
add
sahf
add
add
scas
add
mov
xor
jmp
insl
stos
jmp
outsl
stos
call
jno
in
jae
jmp
jp
call
test
mov
inc
cmpl
add
dec
pop
insl
insl
push
mov
xchg
pushl
mov
mov
mov
jne
lcall
ja
pushf
sub
cwtl
or
lcall
ljmp
add
or
xlat
dec
xchg
jmp
js
jmp
test
push
xchg
out
mov
mov
cmpsb
test
fwait
fwait
cltd
add
sub
sub
push
push
dec
pop
imul
mov
mov
mov
sarb
sarb
jmp
inc
jg
mov
pop
pop
jmp
add
mov
arpl
mov
adc
fbld
in
nop
mov
push
cwtl
push
cwtl
stc
lcall
clc
cwtl
jmp
stos
mov
stos
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
xchg
test
ljmp
imul
add
cmpsl
add
mov
mov
add
fsubs
cmp
cmc
mov
iret
clc
test
sar
cld
stos
sar
cld
lods
sar
stc
test
jmp
mov
inc
rol
stos
stos
test
or
add
add
dec
push
push
aaa
je
je
stos
test
int
int3
int
cmc
lret
lret
int3
sti
leave
lret
enter
mov
popa
mov
stos
inc
cmp
adc
test
pusha
pushl
add
into
add
fiaddl
ljmp
std
mov
mov
xlat
cld
mov
fdivr
mov
sar
jmp
ret
mov
scas
mov
add
add
add
add
or
aam
dec
loope
jecxz
loopne
fistps
fcmovnu
xlat
fsubr
mov
data16
test
push
pop
ljmp
add
leave
add
add
or
dec
mov
std
inc
inc
loopne
dec
loopne
dec
std
lock
lret
mov
xchg
sahf
pushf
pushf
sbb
add
add
incb
std
incb
ljmp
in
jmp
xor
loope
jecxz
les
mov
mov
add
mov
fs
add
into
add
fildl
jbe
call
insb
mov
sti
cld
shl
std
shl
std
shl
call
out
aad
fsub
cld
aam
push
fdivr
fmul
sar
mov
mov
and
add
add
std
add
incb
cld
cld
pop
aad
aad
mov
pop
mov
lahf
or
ljmp
add
ret
add
rolb
jo
loopne
ja
out
and
cld
shl
fldl2t
std
xlat
jmp
std
xlat
out
cld
fld1
std
shl
push
enter
iret
sti
mov
popf
lahf
das
add
add
int3
int
or
bound
ljmp
add
movl
jno
loop
ja
out
xor
cli
lret
loopne
stc
lret
loopne
cmc
hlt
ret
icebp
rcl
lock
sar
in
aad
in
aam
jmp
aam
in
fucomp
leave
mov
stos
test
std
add
add
add
aad
mov
jb
or
insb
inc
pop
jno
int
jl
aad
xchg
loopne
lcall
mov
out
jecxz
leave
jmp
fdivrl
lret
leave
faddp
sarb
in
ficompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsl
les
mov
mov
nop
fidivrl
andb
int
mov
iret
mov
nop
rol
leave
jge
int3
insl
ror
iret
pop
rcl
iret
dec
xlat
cmp
das
in
fisubs
in
lock
in
jmp
fcmovu
fildl
std
std
std
add
add
add
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
mov
aam
mov
rcl
or
or
int3
into
add
std
std
incb
incl
cltd
fwait
cltd
add
mov
int
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
xchg
leave
enter
enter
rol
mov
mov
insb
stos
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aad
std
rcl
sar
iret
into
into
std
mov
stc
mov
test
sarl
sbb
sbb
add
add
add
add
add
add
add
add
jae
jae
addr16
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aad
dec
into
iret
dec
enter
mov
scas
lcall
mov
push
add
add
add
add
je
jae
xchg
adc
outsb
outsl
ret
arpl
insl
outsb
outsl
jb
popa
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jae
daa
es
add
add
add
add
jb
jb
fwait
xchg
pushf
mov
test
mov
xchg
test
test
imul
mov
into
mov
lahf
mov
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
test
mov
xchg
xchg
xchg
cld
pushf
pushf
sahf
cmc
cltd
cltd
lcall
push
push
imul
jge
mov
xchg
notl
mov
pushl
imul
call
stos
stos
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
lcall
lcall
xchg
fwait
lcall
mov
loope
jne
out
xchg
bound
std
pushf
inc
jbe
cmpsb
cmp
sub
mov
jno
mov
insl
pushl
sahf
lods
lock
mov
imul
into
add
test
pop
scas
movsb
lods
test
popf
sahf
lahf
jmp
mov
xchg
decl
push
ja
popl
lea
imul
xchg
adc
xchg
or
or
mov
insl
mov
es
shrl
inc
aas
test
rcrl
subl
jne
push
mov
mov
test
mov
scas
pushl
xchg
decl
or
xchg
push
decl
pop
jmp
adc
ret
dec
ds
roll
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
mov
add
add
imul
movsl
lahf
mov
pushl
mov
ljmp
aaa
jo
xchg
push
call
pop
push
call
add
stos
add
mov
push
xchg
fstpl
loope
mov
jmp
cmpsl
call
lcall
test
cmpsl
pop
add
add
popa
arpl
mov
lcall
mov
mov
lcall
jo
lcall
jmp
add
mov
addr16
xor
jmp
jo
call
jp
out
jl
push
jg
ficompl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
sar
mov
jmp
inc
jle
sahf
and
pop
jmp
add
or
fimull
out
lea
notb
leave
clc
xchg
enter
inc
mov
movsb
sub
aas
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
cwtl
ljmp
sbb
cmpsb
add
mov
arpl
ret
add
adc
jmp
scas
clc
cmpsl
into
cli
stos
sar
sti
lods
sar
cld
scas
sar
cld
scas
sar
in
mov
inc
mov
movsb
ds
incl
xor
xor
mov
mov
rcl
aam
aad
aam
rcl
shr
lret
leave
lret
xchg
jmp
add
les
imul
out
test
clc
mov
mov
std
ret
inc
inc
icebp
mov
shl
cmpsl
cmpsl
dec
cmpb
add
add
stos
stos
lods
add
in
in
or
jmp
in
outsb
fldenv
movsl
es
ljmp
add
lret
add
fldl
sti
mov
std
iret
in
std
iret
in
call
in
call
in
shl
push
leave
fcos
aad
int
lods
scas
scas
popa
jg
addl
add
add
std
add
incb
lret
int
sub
lahf
sbb
lods
add
mov
add
loope
jns
cmc
push
movsl
inc
loop
jmp
aad
std
aam
stc
aam
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
lods
add
imul
or
ficomps
cmp
lock
shl
ljmp
jmp
in
aad
call
scas
push
lcall
add
rol
mov
stos
xchg
inc
and
ret
int3
int3
js
mov
mov
lret
into
outsl
fxch
iret
pop
fst
dec
jecxz
fistpll
out
out
out
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
cs
mov
lret
sbb
bswap
int3
int3
or
aad
incb
cmpb
std
incb
stos
incb
rol
add
incl
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
and
mov
mov
xchg
inc
lahf
arpl
pop
loope
fwait
xchg
push
dec
or
lcall
jp
iret
add
jnp
xchg
xchg
dec
xchg
fidivrl
icebp
adc
fildll
inc
pop
mov
stos
enter
das
cmp
push
jns
mov
xchg
clc
rcl
clc
int3
xchg
sub
lods
sahf
xchg
or
cmp
hlt
loopne
dec
xor
mov
fstpl
jmp
nop
sub
repnz
or
outsb
fs
bound
enter
test
xchg
fisubrl
rorl
rcll
pop
pushf
pusha
and
mov
jbe
cmp
xor
and
jnp
popf
js
mov
cmp
xor
int3
mov
les
dec
repnz
and
jl,pn
sub
adcb
push
jp
arpl
outsb
sub
lods
push
mov
call
movsb
cltd
and
push
hlt
aad
or
push
push
mov
movsb
dec
add
popf
mov
mov
fidivrs
ficoms
leave
sbb
imul
shll
mov
outsl
inc
movsl
jl
or
sub
popf
push
into
adc
stc
sub
cli
test
fwait
sub
outsb
mov
or
mov
aam
lods
inc
xchg
stc
gs
repnz
pop
cmp
mov
pop
pop
leave
push
fidivl
mov
lcall
adc
das
fistpl
dec
inc
enter
aad
inc
out
ror
loopne
dec
movb
test
cmp
decb
jp
divb
les
inc
xchg
je
push
out
pop
pop
pop
jne
sbb
mov
inc
iret
mov
add
push
rorb
xchg
dec
dec
sub
fs
inc
jb
lret
movsl
sub
xchg
dec
cmp
inc
add
sti
popf
mov
xor
shrl
out
pusha
sbb
fidivl
mov
sbb
jmp
in
icebp
mov
fwait
pop
mov
mov
xchg
inc
push
xorl
xor
popa
inc
ljmp
scas
push
fsubs
inc
ret
loopne
xchg
sbbl
mov
sub
cli
or
hlt
push
xchg
in
add
lea
mov
pushf
dec
push
aam
mulb
pop
sti
jae
lcall
sbb
push
adc
sub
fdivs
inc
enter
mulb
mov
and
or
imul
dec
dec
or
in
mov
cld
test
icebp
ja
jns
aaa
inc
adc
popf
les
pop
mov
xchg
aas
lcall
popf
cli
movlps
das
fildll
jle
out
and
fiadds
adc
push
adc
adc
mov
fbstp
dec
or
cld
ljmp
sub
add
jno
mov
pop
out
pop
stos
jns
mov
gs
aaa
jecxz
push
lret
jae
and
cmp
xor
fbstp
popa
iret
sub
jle
xchg
rcl
stc
xlat
and
or
rcr
fidivs
add
mov
inc
pop
adc
mov
lods
movsb
mov
cmc
push
insl
mov
inc
pusha
divb
aad
pop
mov
inc
adc
pop
movsb
add
test
aad
add
ret
mov
mov
mov
stos
ret
xlat
outsb
cmc
mov
inc
out
cmc
fsubrs
fdivs
xchg
std
push
into
xchg
mov
sbb
sub
repnz
outsb
jmp
mov
inc
lahf
arpl
movsb
imul
adc
push
adc
ds
dec
mov
xor
fidivrs
out
jb
xchg
cltd
sbb
dec
jo
xchg
ja
addr16
leave
rcrb
or
or
in
lds
jbe
loopne
in
push
add
jb
pop
sub
mov
adc
jp
lcall
adc
aad
aaa
mov
fildll
lahf
mov
test
sub
push
xor
fisttpll
js
jecxz
adc
push
rorl
fwait
mov
cmpb
or
mov
and
jns
fadds
push
out
in
scas
ja
orb
in
fbld
clc
jns
sub
sub
xor
cmp
push
stos
ja
lds
out
mov
sub
pop
xchg
jmp
arpl
loope
cmp
ss
push
rolb
jno
inc
popa
xor
mov
mov
cmp
xor
xor
cmpsb
jnp
sub
sbb
mov
cmp
lcall
jb
cmpsb
push
pop
stc
jg
xor
dec
add
lcall
mov
cmp
fwait
mov
push
xchg
adc
fstl
fstpl
mov
and
pop
dec
jnp
push
lods
insb
fbld
mov
cmpsb
jge
jl
inc
les
mov
dec
jge
or
ss
repz
jge
mov
outsl
nop
je
push
outsl
push
xchg
mov
add
xor
push
in
out
or
out
lods
lds
push
out
cmp
gs
lods
cmpsb
adc
test
cli
stc
nop
jmp
inc
add
into
gs
mov
les
lret
adc
adc
mov
pop
and
sbb
leave
and
cmpsl
gs
ljmp
xchg
pop
fs
lods
cmp
cmc
cmp
and
pop
hlt
mov
arpl
mov
call
pop
scas
lahf
pop
cmp
stos
mov
push
in
mov
push
lds
decl
rcl
out
ret
or
test
and
sbb
fidivl
fimull
or
imul
loop
lods
adc
xor
shll
or
mov
add
imul
mov
scas
jp
mov
rcl
dec
in
cmp
mov
clc
and
mov
sbb
shrl
add
ret
and
adc
aaa
sahf
mov
add
mov
clc
dec
in
scas
loope
add
pop
mov
and
cmp
mov
jns
repnz
lret
sti
lret
jns
std
sbb
icebp
dec
push
cwtl
das
push
outsb
js
mov
rcll
notb
mov
shrl
push
test
mov
das
in
or
dec
in
pop
lds
mov
jecxz
mov
and
add
xor
push
mov
mov
pop
mov
in
fdivrp
lds
add
xor
sub
hlt
mov
dec
mov
rorl
mov
aam
popa
sar
jo
shlb
ljmp
mov
movsb
ds
mov
frstpm(287
jmp
aad
or
mov
or
dec
xchg
sub
mov
nop
cmp
sbb
lds
subb
mov
ret
jo
jnp
clc
mov
and
dec
fbstp
and
iret
repnz
in
stos
xor
mov
mov
push
fs
fcoms
mov
mul
in
xor
jle
cmp
or
lea
rcrb
inc
fsubrp
add
jo
or
testl
fdivs
xor
sub
rcrl
push
call
mov
std
xchg
fdivp
lea
add
xor
inc
jne
cmp
adcl
out
aad
out
sbb
jbe
sub
xchg
sub
repz
jg
xorl
or
sbb
sub
fs
out
imul
popa
clc
sti
call
jb
mov
test
and
sub
xor
pop
mov
push
test
call
pop
add
mov
leave
pusha
insl
std
lcall
lds
add
pop
scas
xchg
cmpsb
dec
loope
mov
pop
daa
jns
push
test
dec
ds
pop
pop
dec
sbb
pushaw
loopne
bound
xorb
repz
push
adc
aaa
into
aam
sub
mov
inc
int
xor
loopne
stos
rcr
mov
mov
mov
mov
ja
mov
mov
and
movsb
sub
fwait
inc
shlb
mov
push
ljmp
fnstenv
bound
mov
mov
jne
data16
idiv
push
jnp
test
or
in
gs
mov
daa
cmp
rclb
stc
push
rorb
in
mov
leave
testl
cmp
push
add
or
cs
pop
mov
ret
mov
or
or
iret
data16
lods
dec
in
call
sbb
mov
and
test
mov
push
sahf
stc
nop
adc
add
mov
lds
sbb
fadds
sti
test
push
mov
je
addr16
out
adc
xor
movsb
pop
lock
repnz
leave
pop
repz
mov
das
pop
negb
xchg
dec
loopne
add
outsb
jb
daa
mov
add
movsb
cmp
mov
shrb
dec
ds
aam
jecxz
pop
or
mov
in
andl
mov
adc
cmc
push
jecxz
ss
movsb
cmp
test
cmp
mov
pop
jge
jge
je
rcll
dec
aaa
loop
outsb
aam
mov
call
or
cltd
jp
cmpsb
cmp
or
cs
sub
dec
fidivl
shll
mov
dec
jecxz
shrl
cmc
mov
adc
mov
clc
jmp
mov
sbb
enter
hlt
mov
fdivr
xchg
or
movsl
push
out
movb
mov
or
lret
out
cltd
jmp
or
xor
mov
inc
pop
lock
cmpsb
sub
mov
movsb
mov
pushf
out
or
ret
leave
ret
imul
fsubl
mov
dec
mov
jg
outsb
add
dec
add
jae
pop
out
and
sbbb
sub
mov
mov
testb
pop
push
jmp
pusha
dec
in
and
rcrl
fisubl
sbb
test
jmp
mov
lret
outsl
xchg
scas
cmp
subl
ret
and
loopne
les
ror
data16
sub
jl
dec
loopne
popf
sub
push
je
jb
das
mov
les
and
lock
cld
gs
sub
mov
repnz
cld
repz
mov
loopne
setno
adcl
jge
xchg
xor
jmp
insl
add
or
mov
add
popf
xor
mov
jge
add
jle
xchg
icebp
mov
sbbl
sub
xchg
sub
cmc
lcall
lret
pusha
fnsave
into
gs
jae
andl
xchg
sub
cmp
lods
sbb
test
lods
shrb
ds
mov
aas
jge
mov
pop
push
rorb
in
cmp
dec
jecxz
fcom
outsb
sbb
mov
out
mov
push
mov
test
pop
fnstenv
xor
mov
ret
or
test
jp
sub
fpatan
cmp
sub
or
decb
scas
inc
les
js
jle
fnstenv
adc
rolb
out
test
fidivrl
imul
das
ficomps
inc
fcomi
push
aas
mov
pop
mov
and
push
mov
dec
loop
aaa
push
in
test
push
call
mov
fucom
jge
jbe
les
cmp
lret
cmp
jae
ds
xchg
xchg
sub
fcomp
outsl
sub
scas
inc
lcall
sub
dec
pop
inc
mov
sub
push
jno
jecxz
je
mov
pop
xchg
imul
mov
push
sbb
orl
xchg
pop
ja
jmp
inc
int3
arpl
dec
or
inc
pop
pop
lock
in
pop
in
cmpsb
es
pop
insb
lret
testb
out
and
ja
imul
andl
and
or
adc
lods
inc
pop
movsl
jns
fstpt
dec
jno
cmpsl
ds
xchg
dec
loop
and
pushf
push
and
cld
xchg
in
ljmp
cmp
add
adc
out
xor
dec
cwtl
dec
in
jo
mov
jle
subb
xchg
sub
cmp
insl
cmpsl
loop
sbb
xchg
dec
cmp
pop
sub
add
sti
loopne
ret
rorl
jbe
and
push
push
out
xchg
pop
or
add
push
mov
cmpl
ss
adc
js
popa
adc
xor
lds
sbb
lods
addr16
ficompl
imul
push
pusha
fwait
xor
push
mov
jge
sbb
aas
in
inc
into
jbe
and
js
ljmp
mov
iret
popf
pop
out
push
jle
inc
cmpsb
das
stos
inc
mov
ret
mov
xor
test
jp
aaa
ss
call
inc
fcompl
mov
lock
sub
fistpll
pop
mov
adc
cmpsb
sahf
xchg
sub
xchg
sub
fcmovb
pop
int3
push
add
fiadds
shlb
incl
lods
adc
xchg
test
daa
sbb
xor
stos
dec
or
js
popa
clc
mov
fstpl
into
cld
test
lock
loope
lret
cmc
add
jae
xchg
sub
xchg
lea
jbe
jb
daa
inc
test
mov
or
aaa
dec
aas
cmp
pop
fdivl
mov
mov
add
bound
and
cmc
sub
cmp
xchg
mov
xchg
sub
test
mov
xchg
pushf
push
cmp
sub
cld
push
pop
pushf
sbb
cmpsb
jle
push
dec
les
or
repnz
sahf
sahf
insl
enter
and
out
fs
pop
or
scas
js
das
pop
cltd
outsl
push
or
scas
insb
sub
jb
lea
and
ljmp
subb
mov
push
adc
repz
mov
sbb
xchg
sti
xchg
cld
sub
insl
mov
cmpsb
cmp
enter
cltd
jmp
mov
mov
jp
push
jmp
xor
or
insl
push
mov
mov
movsb
into
lret
cmpsb
cmp
mov
fdivl
aad
stos
in
movsl
cmp
pop
push
in
xchg
dec
repz
pop
mov
ja
lahf
jb
cmp
hlt
sub
push
sbb
rcll
mov
push
sub
pop
js
gs
jl
cmc
lods
lret
out
std
into
jp
rorb
xor
mov
cld
push
inc
fmuls
mov
std
loope
mov
rolb
inc
cmp
pop
lock
pop
sub
dec
lcall
jecxz
xor
movsb
lret
add
mov
repnz
ror
sbb
sbb
adc
or
xchg
dec
call
lock
fsubrs
sub
mov
cmpsl
jnp
pop
dec
enter
imul
xor
adc
aad
loop
cmp
mov
push
cltd
inc
mov
stc
ss
fdivrl
pop
arpl
cmp
loop
add
gs
mov
dec
filds
lea
loope
cmp
nop
lret
push
mov
adc
scas
add
loop
shrl
das
addr16
mov
js
shrl
push
inc
mov
int
add
sahf
jnp
addl
clc
cmpsl
push
jmp
addl
mov
add
xor
lods
and
dec
hlt
std
jns
fsubrs
xchg
push
mov
fsubl
sub
push
mov
cmp
push
or
addr16
je
mov
insl
jno
shll
cmp
xchg
testl
jge
mov
int3
jg
fwait
xor
cmc
push
loop
cmp
orl
lahf
outsb
lcall
jnp
sahf
sbb
jne
mov
mov
mov
add
mov
fisttpl
mov
adc
mov
out
mov
xchg
hlt
pop
mov
out
mov
cld
out
add
xchg
rorb
movsl
out
sbb
pushf
or
dec
jecxz
xchg
pop
imulb
sub
lods
pop
push
jge
push
pop
jno
outsb
pop
cmp
push
insl
dec
adc
hlt
push
push
in
inc
sbb
pop
dec
fs
ds
in
test
arpl
jbe
mov
jns
stos
pop
jg
push
std
pop
lock
mov
lahf
push
sbb
sbb
addr16
cmp
mov
push
mov
stos
sbb
pop
push
jb
test
inc
xor
fidivl
mov
and
lds
mov
xchg
shrb
add
outsl
shll
repnz
xor
notl
insb
add
mov
arpl
les
dec
jge
sub
fstps
cmp
mov
fisubrl
shl
xchg
sub
push
ss
cmp
scas
pop
mov
dec
in
sub
pop
jbe
adc
cmc
xchg
ret
pop
and
dec
in
inc
mov
fists
enter
cmp
iret
lahf
xchg
lret
fcmovu
out
insl
sbb
stc
sahf
cmp
pop
jnp
arpl
lock
in
and
push
lods
inc
inc
xchg
sub
pop
sahf
push
fidivrs
iret
sarb
sbb
lahf
mov
mov
push
mov
mov
mov
add
pusha
sub
out
sahf
sub
xchg
pushf
adc
jge
or
nop
jge
sbb
push
mov
out
push
andl
push
add
in
dec
mov
ljmp
es
pop
cwtl
and
push
pusha
mov
sub
xlat
xchg
cs
push
popf
jle
in
push
mov
jl
add
xor
add
mov
movsb
cmp
bound
mov
outsl
add
fcomi
out
pushf
fsubrs
pop
pushf
stc
push
add
aas
ret
ljmp
push
xchg
ds
das
aaa
into
lahf
and
insb
xchg
jne
outsb
data16
adc
rol
test
fwait
xchg
mov
cs
mov
loope
dec
in
add
add
push
cmpsl
ds
or
fnstenv
mov
cwtl
das
mov
fidivs
adc
mov
pop
movl
and
sbb
jp
adc
and
xchg
sub
loopne
or
or
cmpsl
ds
arpl
bound
jle
leave
dec
loop
mov
cmp
scas
cmp
pop
out
lock
cmp
ficoml
or
rolb
sub
and
test
insl
cmp
jp
pop
pop
sahf
push
inc
test
jno
mov
sub
movsl
xor
movsb
cmp
fists
into
mov
pop
mov
mov
xchg
lret
addr16
out
push
scas
movsb
cmp
xor
or
or
insb
add
jo
out
arpl
pop
icebp
ret
inc
sbb
adc
scas
xchg
fs
lods
addr16
test
ds
sbbl
adc
xchg
xchg
sbb
xlat
outsb
enter
or
dec
cld
shrl
ficoml
in
add
lcall
addb
cmc
mov
push
test
xchg
sub
call
lret
fiadds
sub
cwtl
and
imul
mov
push
and
and
stos
inc
mov
imul
test
ss
sbb
adc
inc
cmp
rcrl
mov
mov
lds
ret
sub
jecxz
mov
cmp
xchg
lret
fnsave
mov
cmp
lds
fsubrs
jmp
sub
out
cmp
fnsave
xchg
sub
lret
fdivl
mov
xor
aam
jno
loopne
sub
mov
push
mov
imul
xchg
sub
int3
arpl
mov
orl
cs
dec
scas
test
jo
push
rclb
testl
dec
imul
dec
pop
mov
stos
inc
sbb
mov
mov
mov
loop
cmp
push
add
pop
cmpsl
jae
enter
push
ds
cld
mov
repz
inc
pop
cmp
sahf
inc
jp
dec
xor
sbbb
push
mov
xchg
mov
lea
es
fildl
inc
fstps
das
lcall
mov
or
fs
xorb
mov
jns
dec
in
lcall
add
jp
jnp
xchg
sub
into
cltd
mov
lret
out
fdivl
in
fdivl
inc
icebp
mov
pop
fs
or
mov
test
inc
mov
mov
add
iret
push
and
or
repnz
add
imul
jo
adc
scas
inc
xlat
xor
in
test
mov
jns
shlb
ss
addb
addr16
cltd
and
sbb
popa
daa
mov
push
pop
dec
loop
adc
movsl
or
js
andl
sub
xlat
mov
inc
shrl
lea
iret
ret
mov
mov
fwait
ret
loop
jecxz
mov
mov
or
fnsave
dec
loope
shlb
mov
xchg
pop
and
pop
cmc
push
xor
mov
test
mov
and
pop
jnp
jmp
sbb
push
movsl
and
jmp
shll
icebp
xchg
mov
pusha
stc
int
pop
lods
add
sbbl
inc
inc
mov
js
sbbl
arpl
xchg
xchg
cmpsl
mov
mov
cli
mov
sarl
push
push
add
je
xchg
sub
jecxz
pop
cmc
jmp
sub
js
out
test
cmp
movsl
test
add
repz
xor
dec
iret
cmp
fwait
xor
mov
sbbb
mov
mov
test
xor
push
cli
xchg
dec
xor
in
stos
insb
dec
loope
int3
inc
fsubrs
jne
xlat
jg
push
push
mov
scas
inc
gs
xchg
sub
data16
lret
fcmovb
cwtl
testl
je
pop
adc
rclb
stc
push
mov
sbb
aam
scas
cmp
push
xchg
sub
mov
mov
fidivrs
ja
test
and
popf
popf
xor
hlt
pusha
mul
cmpsl
inc
xlat
sbb
jecxz
out
mov
mov
cmp
mov
cmp
sbb
dec
jecxz
mov
lret
out
xchg
sub
and
jo
and
aad
add
jecxz
xor
and
out
jp
adc
clc
push
mov
loopne
test
sbb
mov
and
repnz
cmp
int3
repnz
mov
loopne
fs
dec
jecxz
add
jb,pt
ss
xchg
lds
add
pop
sahf
adc
dec
movsb
jle
icebp
scas
mov
push
clc
jb
cmp
mov
mov
jnp
sub
fwait
xor
or
cli
es
test
add
fidivl
jb
aas
or
mov
dec
mov
push
stc
nop
cmp
adc
test
ds
rcrl
dec
loopne
jp
subl
dec
loopne
sbb
push
loope
jge
shll
and
inc
nop
inc
testb
popf
xor
fs
xchg
cmp
fimuls
cmpl
xor
jmp
pop
std
cli
sub
add
mov
mov
hlt
mov
js
lds
jge
rcll
dec
lods
mov
add
int
pop
fdivrl
ret
xchg
adc
xchg
push
push
das
mov
jns
imul
movsl
mov
or
aam
pop
fldenv
out
jl
ret
cmp
sub
outsl
or
in
jno
mov
sub
mov
jl
jo
cmp
mov
leave
pop
or
pop
lahf
push
inc
shrb
mov
xor
shll
push
out
jge
inc
mov
outsb
push
inc
imul
mov
jns
pop
enter
jnp
xor
ret
xor
mov
in
fwait
mov
cld
arpl
pushf
ret
pop
ret
loop
inc
fmuls
dec
rcrb
sbb
add
gs
and
iret
aam
scas
mov
pop
mov
xor
dec
out
leave
imul
pop
bound
loopne
dec
adc
jae
pop
xchg
mov
mov
fldenv
adcb
cli
les
pop
jmp
mov
loop
inc
lods
daa
mov
jbe
and
daa
das
adcl
arpl
pusha
inc
insb
clc
xor
push
stos
pop
inc
jg
cmp
dec
mov
pusha
jae
dec
push
inc
mov
jne
mov
pop
xor
inc
jp
mov
jno
mov
jb
mov
and
mov
and
inc
mov
mov
mov
outsb
sti
inc
stos
int
clc
inc
es
arpl
sub
or
dec
add
jb
jbe
jae
pop
cmp
cltd
xor
call
xchg
jb
cwtl
inc
pop
mov
repnz
fmuls
mov
leave
sub
pop
or
mov
dec
pop
sbb
sub
sbb
dec
and
jo
arpl
add
dec
mov
ret
pop
inc
mov
hlt
daa
pop
xchg
orl
push
mov
mov
call
test
rcrb
dec
iret
loopne
rorl
add
xor
push
fimull
int
push
and
inc
jae
fmull
xor
xor
push
push
in
outsl
cmp
mov
cwtl
xchg
les
loope
js
pop
out
and
repnz
pop
or
add
cmc
mov
xor
cmpl
ret
std
imul
or
pusha
sbbl
jecxz
filds
scas
addr16
and
lods
xchg
test
scas
aaa
pop
imul
dec
jmp
into
fsubr
mov
stos
inc
fucom
out
test
aaa
arpl
cmpsl
xor
cmp
jmp
decb
jne
jb
leave
pusha
jns
xor
std
jg
inc
xchg
push
ja
dec
mov
push
pop
aad
xchg
mov
adc
xchg
negl
mov
mov
add
push
mov
and
mov
call
sahf
mov
mov
rcll
sub
dec
adc
or
cmpsb
cmp
std
jmp
mov
out
jp
repz
pop
lds
clc
or
push
clc
loope
outsl
lret
push
loope
cmp
push
bswap
test
cld
aas
gs
das
gs
add
addb
insb
add
jl
cmp
xchg
push
imul
inc
mov
popa
push
and
lcall
test
push
pop
mov
test
push
call
ret
pop
mov
jecxz
xchg
sbb
mov
add
cmc
jmp
addr16
jb
lret
lret
sti
in
and
rcr
outsb
add
in
cmp
dec
lret
stc
outsl
test
inc
sbb
pusha
nop
repz
or
dec
testl
inc
hlt
cmp
loope
scas
inc
fs
mov
jne
fcmovnb
add
lds
ret
sbb
daa
xchg
ficoml
jge
cmpsb
jbe
add
push
ja
xchg
mov
pop
les
into
adc
aam
xchg
push
or
insl
push
out
jbe
idivb
sub
std
outsl
and
mov
lods
cs
mov
jbe
xchg
test
movsb
cmp
rclb
stos
mov
mov
jecxz
gs
add
sub
pop
pop
push
cltd
dec
fisubrs
mov
icebp
mov
jmp
push
or
sbb
and
or
push
cmp
and
push
and
scas
sub
add
insl
test
lods
ds
xchg
mov
out
sub
out
push
add
scas
cmpsl
leave
pusha
fxch
adc
pop
inc
inc
fidivs
clc
push
ficoms
insb
adc
nopl
cmp
cli
adc
mov
inc
les
ret
scas
sbb
cmc
mov
xor
call
mov
gs
jl
push
mov
mov
ret
jg
fwait
in
imul
cmpsb
shll
into
hlt
mov
fwait
add
je
leave
test
insl
imul
lcall
xchg
popf
lret
test
dec
adc
ja
push
in
mov
roll
mov
adc
rorl
mov
adc
loope
mov
jg
push
lcall
pushl
cmp
jmp
test
dec
in
dec
loop
fs
outsb
sub
out
mov
mov
jbe
dec
mov
lea
push
inc
cwtl
ljmp
loope
pop
push
xchg
push
dec
jl
inc
test
fdivrp
inc
daa
ss
in
fnstsw
jnp
add
movsb
mov
sbb
jo
adc
fidivrl
cmp
jle
sub
push
jmp
xchg
sbb
sti
xchg
fistpll
data16
popf
mov
inc
pusha
fisttps
xor
fxch
adc
jp
pop
adc
in
fsubs
outsb
push
mov
int3
das
rorl
or
lcall
cmc
pop
imul
pop
loopne
add
mov
lret
or
movsl
or
add
and
inc
jns
mov
mov
fcompl
or
sub
pop
jp
sti
ja
test
dec
adc
mov
dec
in
into
jmp
sub
xchg
rcrl
mov
cli
mov
mov
pop
scas
je
fidivrs
popa
inc
add
fisttpll
mov
inc
jecxz
mov
lods
icebp
popa
mov
mov
test
jb
push
jns
inc
fstps
inc
pusha
cmp
add
inc
lods
mov
int
ds
bound
jge
aam
jnp
mov
lods
mov
mov
push
or
lods
shlb
and
or
adc
negb
pop
pop
pop
sub
cmpsl
push
sbb
mov
cmpsb
mov
mov
lods
mov
mov
movsl
mov
rorl
inc
mov
ss
ja
rclb
imul
pusha
mov
add
insb
lods
xchg
jae
mov
inc
ficomps
jno
adc
je
jno
outsl
in
bound
andl
pop
in
xor
and
jne
xchg
xchg
pop
jb
mov
xchg
mov
mov
mov
pop
orb
adc
or
jp
sub
lods
std
addl
xchg
ja
xchg
dec
add
jnp
enter
pop
xsha1
cmpsb
mov
ret
lcall
roll
sbb
loopne
inc
jns
jbe
push
or
dec
cmp
and
pop
add
testb
mov
push
mov
ss
stc
or
xor
fmuls
cmp
jg
lds
mov
xchg
sub
mov
inc
sbb
faddp
aad
scas
cmp
movsl
fcmovne
xlat
in
out
lahf
adcl
repnz
std
xchg
sub
add
or
push
lods
add
repnz
mov
xchg
sub
adc
cmp
cs
adc
lods
cmp
pusha
sub
xchg
shlb
add
push
cmc
lods
sub
sub
push
jno
jle
sub
inc
pop
shll
repnz
insb
xchg
fsubs
mov
rcrb
mov
icebp
cmpsb
int3
xchg
and
insl
pop
pop
jge
xchg
ja
pop
in
test
push
sbb
inc
loopne
xor
dec
loope
cmpsb
pop
mov
js
hlt
mov
lcall
mov
push
inc
jnp
jno
pop
mov
sahf
sub
cwtl
mov
jecxz
mov
movsb
cmp
cmc
xchg
div
rorl
pop
dec
std
mov
aad
jmp
rclb
or
rorl
scas
inc
les
mov
mov
push
sahf
arpl
pop
aad
mov
xor
ljmp
fwait
dec
cmp
sub
inc
addr16
mov
jp
rorl
pop
sub
pusha
adc
pop
aad
inc
imul
push
shll
sbbl
arpl
push
lcall
push
loop
scas
add
adc
jg
and
popf
push
les
add
negb
xchg
push
in
fisubl
add
and
pop
repnz
inc
ret
fwait
mov
aad
nop
fnstenv
push
push
mov
aas
dec
out
imull
and
jo
test
jl
xor
es
dec
in
inc
pop
mov
les
push
push
mov
mov
adc
jge
push
popf
mov
sbb
aam
sbb
loope
lods
cmp
add
mov
aad
ret
es
fdivrs
test
inc
shrb
add
and
adcl
inc
mov
xchg
stos
repz
leave
scas
nop
and
dec
loopne
jnp
fsubrl
sbb
mov
data16
adc
insl
inc
inc
scas
inc
je
hlt
popa
jbe
add
test
sbb
sub
add
addr16
jg
test
cld
mov
clc
hlt
push
mov
pop
test
jecxz
es
pusha
mov
icebp
fbstp
mov
sbb
mov
mov
pop
clc
movsl
stos
iret
push
vorps
das
and
inc
xchg
mov
adc
mov
jp
lret
in
add
lea
mov
dec
xchg
sub
cmp
jle
in
pop
dec
out
dec
inc
push
movsl
jb
mov
lock
test
sub
scas
sub
lock
mov
or
cli
hlt
pop
or
adc
mov
ret
or
cmpsl
iret
subb
imul
add
add
lahf
xor
lds
pushf
sbb
xchg
icebp
and
jle
pop
or
mov
cld
adc
adc
aam
add
or
adc
stc
nop
add
dec
sub
lods
dec
and
test
mov
fsubs
xchg
or
dec
xchg
add
clc
movsl
cmp
mov
jecxz
aaa
les
shlb
mov
dec
fisubs
mov
into
cmp
mov
arpl
idivb
jne
ljmp
loopne
rcrl
neg
and
cmp
push
outsb
and
or
cmp
out
xor
add
ror
outsl
push
xor
scas
inc
lcall
inc
fcomps
fdivl
dec
dec
xchg
push
fsubrp
and
pop
push
push
dec
mov
xchg
popf
cs
sarb
iret
push
mov
and
enter
loop
lods
inc
lret
or
outsl
cld
mov
les
les
sbb
dec
ficomps
out
js
or
shll
inc
in
rorl
and
xor
pop
inc
daa
cwtl
popf
xchg
xchg
aam
cmp
push
dec
aaa
movsl
movsb
mov
mov
arpl
mov
dec
xor
jo
jb
sub
jge
jno
add
xor
mov
js
shr
inc
rcl
cmpsb
inc
mov
cmc
mov
iret
jo
ljmp
or
ja
into
cmp
pop
mov
pop
rcll
pop
lahf
andl
jl
jne
xchg
push
mov
cltd
adc
mov
out
xchg
test
dec
ss
stc
fsincos
aad
sahf
pushf
scas
mov
in
clc
ret
fcompl
cmp
or
add
xchg
adc
inc
jl
jns
mulb
mov
data16
nop
loopne
adc
fcmove
and
jno
imul
jnp
jb
popf
inc
xchg
mov
loop
cmp
cmp
mov
or
pop
pop
sub
push
sub
mov
pop
mov
mov
repz
repnz
xchg
fsubl
sbbl
push
clc
sub
mov
sbb
dec
sahf
adcb
sub
push
sub
icebp
stc
xchg
popl
push
xchg
sub
and
ret
inc
dec
stos
inc
mov
test
jo
insl
mov
sbb
cmp
add
sbb
mov
jecxz
fmulp
clc
pop
add
shrl
dec
and
push
cmp
adc
sbb
dec
lcall
jnp
ret
xor
sub
out
je
iret
pushaw
and
aam
nop
lds
jp
fsts
dec
mull
clc
xchg
pop
adc
test
adc
loop
mov
push
dec
push
push
ffreep
mov
sub
xchg
add
sub
addr16
popf
in
or
js
xor
je
sub
pop
jp
sti
xchg
cs
jg
notb
mov
push
clc
in
or
into
scas
cmp
xchg
pop
aad
sbb
jl
pop
frstor
ds
adc
and
add
aad
cli
cmpsl
pop
int
push
ljmp
mov
test
in
data16
xor
mov
mov
jno
push
out
jmp
or
push
or
cmp
inc
cli
repnz
add
sub
dec
xchg
push
je,pn
pusha
cmp
pushf
xchg
sub
je
fisttps
leave
pusha
inc
cmpl
into
sub
or
lds
ja
js
or
pop
ss
pop
mov
fcmovne
jae
xchg
cld
jl
fsubr
inc
pop
add
xorb
lret
sub
in
inc
ljmp
pop
mov
fistps
sbb
mov
sahf
ss
pusha
loop
das
in
cwtl
mov
fld
pop
pop
mov
stos
pop
mov
jl
jo
test
push
rcll
js
sbb
movsb
sbb
dec
dec
gs
push
jns
add
pop
mov
cmp
and
xor
pop
loope
xchg
xlat
push
repnz
enter
dec
cmp
cmp
fidivs
andl
rcll
xchg
imul
jo
fldenv
dec
inc
inc
clc
cwtl
imul
or
mov
dec
or
push
ficoms
iret
out
xchg
aaa
imul
sub
adc
sarb
inc
fidivl
lret
xor
aaa
nop
dec
or
faddl
ljmp
dec
jbe
mov
cmc
add
test
sbbb
daa
ret
jnp
and
sbb
push
dec
rcrl
cmp
aam
xchg
xor
leave
mov
jne
movsb
insl
and
dec
jb
popf
out
or
dec
cmpsl
mov
jno
scas
xchg
aad
sub
add
push
cld
leave
js
insb
mov
test
push
cmpsl
sub
push
movsb
push
push
pushw
and
rcl
imul
or
push
aas
cmp
jbe
je
mov
ja
xchg
inc
mov
das
mov
rcl
call
mov
lock
ss
sub
pushf
add
popf
jns
movsl
lds
outsb
pop
pop
and
shll
adc
out
jl
push
sbb
mov
adc
xchg
sbb
mov
in
mov
push
add
call
es
push
fisttpll
fabs
hlt
xor
cld
mov
xor
mov
in
movsb
sbb
loop
int
mov
mov
mov
mov
xchg
subl
pushf
shlb
out
lea
test
dec
xor
mov
xchg
xchg
jmp
cwtl
mov
dec
cld
rcl
insb
movsl
out
fcompl
sbb
sub
iret
inc
mov
pushf
mov
int
adc
clc
aaa
imul
int3
cmpsl
inc
out
test
jo
lea
push
pushf
ret
lahf
lcall
sub
xchg
cli
repnz
mov
jg
sarl
scas
inc
push
xchg
test
into
fs
mov
xor
add
scas
es
jle
icebp
leave
pusha
dec
push
push
cmp
add
out
or
incl
cmp
jg
add
loopne
je
dec
jecxz
xchg
mov
popa
call
mov
inc
mov
sbbl
mov
jb
xchg
scas
xor
sbb
movsl
jo
dec
mov
inc
push
jmp
addr16
out
test
mov
and
add
adc
sub
push
cmp
cmp
dec
cmp
dec
dec
fstpt
xor
pop
jecxz
add
lea
sarb
sub
mov
aas
mov
adc
in
shrl
lret
cld
bnd
repnz
inc
add
hlt
add
mov
popa
mov
loope
movsb
int
dec
sbb
ds
cmp
mov
jbe
add
fstpt
repnz
add
jecxz
stos
mov
mov
push
lret
sbb
lock
xor
lods
data16
sarb
sub
mov
les
dec
xor
sarb
into
ret
addr16
repz
aas
xchg
dec
orl
jle
dec
mov
outsl
sbb
inc
dec
mov
jle
iret
scas
push
mov
movb
adc
hlt
lret
push
dec
dec
bound
jg
inc
arpl
outsb
cmp
push
inc
inc
in
aas
or
xchg
xor
mov
mov
lcall
sub
push
push
test
mov
and
mov
test
add
std
jb
cwtl
inc
mov
test
push
rol
pop
mov
lcall
jge
in
pop
repz
dec
lahf
sbb
sbbl
push
jae
push
sbb
test
inc
xchg
cwtl
das
ret
gs
out
in
test
mov
or
push
mov
sarl
dec
fisttps
leave
pusha
in
data16
pop
add
test
mov
push
popf
mov
mov
mov
xchg
in
xchg
out
movsb
inc
jnp
lcall
push
mov
adc
movsb
fnstenv
mov
fimull
stos
bound
aas
rclb
pop
jp
loopne
aas
xchg
ret
pop
in
in
andb
mov
das
pop
nop
jecxz
adc
aaa
push
hlt
push
add
inc
test
popa
subl
dec
push
mov
cmpsl
pop
push
fwait
movsb
sub
mov
adc
push
cs
xor
test
dec
mov
imul
add
jnp,pt
pop
in
adc
xor
adc
faddl
dec
iret
sub
jmp
in
and
outsl
mov
lahf
ss
aaa
int3
jbe
gs
adc
fistl
jnp
jbe
inc
dec
fildll
inc
data16
shr
add
je
cwtl
xchg
pop
adc
xchg
mov
das
out
je
in
sub
xlat
jnp
sbb
and
pusha
cwtl
ja
in
sub
cmp
into
in
rcll
mov
clc
push
dec
fcoms
test
pop
call
lahf
and
push
push
mov
gs
xor
pop
jo
sbbb
sbb
daa
adc
or
cmp
cmpsl
ret
lea
cmpsl
ja
cmpsb
adc
cwtl
adc
and
pop
repnz
test
push
iret
push
aad
into
popf
mov
sub
push
in
loope
push
adc
mov
jnp
imul
je
adc
xor
add
fisubrl
push
decb
and
dec
mov
es
sarb
shrl
stos
xchg
jnp
xchg
lcall
outsb
add
ja
out
xor
jmp
insb
mov
sbb
jl
mov
fs
sahf
stc
or
mov
rolb
movsb
inc
mov
jno
popf
push
dec
push
xor
mov
xchg
cs
add
addl
pop
hlt
sbb
xor
outsl
call
push
push
rclb
push
adc
cld
aad
mov
fs
popa
pushf
jno
lock
test
aad
xchg
cmp
pop
das
or
test
sub
inc
gs
adc
adc
icebp
mov
and
or
test
dec
dec
shrl
mov
lahf
stos
sub
popf
mov
or
sti
repz
fwait
xor
adc
fadd
dec
mov
icebp
xor
fmuls
lcall
or
cmp
mov
es
shrb
pop
scas
ret
nop
fnstenv
loop
andl
loope
loopne
cltd
inc
dec
je
jns
popf
jmp
lcall
inc
arpl
pop
clts
insl
cmp
fucomip
xchg
out
xor
icebp
inc
ja
add
mov
divl
outsl
loop
adc
je
stos
gs
cmp
add
xchg
mov
outsl
js
pop
cmp
inc
std
divb
xchg
inc
xor
cld
cmp
inc
mov
push
jbe
adc
sub
andl
sbb
test
xor
xchg
jp
jecxz
decl
sub
sbb
inc
mov
jno
and
in
pop
ror
inc
loop
mov
jns
es
or
jno
or
test
stos
pushf
nop
addr16
popa
out
popa
push
lds
add
pop
outsl
mov
mov
pop
or
lods
cmp
cmp
push
ret
jnp
push
lahf
ja
in
xchg
shl
jnp
cld
xchg
out
mov
sbb
fsubs
movsl
dec
mov
xchg
loopne
aad
and
lcallw
xchg
loop
fildll
pop
xor
pusha
movsb
fsubrl
addb
adc
or
gs
sub
mov
inc
push
push
inc
sub
imul
loop
and
mov
pusha
cmp
rorb
stos
pop
movsb
push
inc
or
push
dec
xchg
dec
loopne
dec
mov
and
popa
lcall
loop
jp
xor
fbstp
fsubr
notl
scas
aad
sti
jno
ss
sti
fnstsw
sub
fxtract
dec
fildll
jmp
test
push
add
divb
nop
data16
repnz
pop
mov
lcall
inc
repz
xchg
cmc
mov
cmp
mov
xchg
adc
mov
in
imul
mov
adc
jnp
xor
push
xchg
xor
dec
jecxz
ja
dec
shr
mov
repz
lods
cltd
test
negl
jp
xchg
jo
inc
ss
loopne
sbb
dec
xchg
jmp
mov
xchg
and
out
in
mov
add
out
mov
mov
loopne
pop
dec
call
cmp
stos
sti
jle
pop
mov
les
testb
stos
xrelease
xchg
sbb
enter
cmp
pusha
adc
push
lds
arpl
jp
or
aaa
xor
mov
xor
push
nop
and
xor
add
cmp
or
xor
sbb
or
and
jg
js
clc
mov
ffreep
push
test
scas
mov
jp
jle
inc
add
pop
pop
sbb
xchg
dec
mov
repnz
and
test
jno
das
call
leave
pop
ror
cmc
mov
test
leave
jp
xchg
and
pop
cmp
push
push
adc
push
inc
jo
cmp
mov
push
cmp
lcall
and
and
xor
or
push
jns
test
mov
out
cmp
xlat
clc
clc
inc
and
cwtl
sbb
dec
mov
bound
fdivl
jo
fstpl
mov
or
push
ljmp
jb
rorl
in
icebp
cmp
cli
sbb
sbb
jl
inc
mov
cmpsl
mov
lock
shrl
rorl
clc
mov
fnstcw
adc
jne
rorb
mov
pop
ja
xchg
pop
sub
in
inc
stc
and
push
fisttpll
xchg
adc
icebp
pop
icebp
and
js
ss
add
push
out
mov
stc
pusha
ss
icebp
inc
gs
xchg
fs
xchg
shrb
aas
xchg
xor
pop
dec
pop
xchg
or
cmp
mov
pop
cmpsl
jp
pop
insb
aad
loope
mov
inc
fsubr
je
pop
xor
pusha
testl
mov
icebp
jae
test
lods
lods
lock
insl
and
add
popf
jg
addr16
sbb
mov
mov
sub
cld
sbb
test
sbb
lahf
dec
aam
jnp
movsl
mov
push
and
mov
mov
sub
mov
jg
fldenv
fldl
pminub
repz
sbb
jnp
das
shrl
or
scas
jle
and
loopne
adc
add
mov
fldl
cmp
lods
sub
pusha
pop
repz
negb
push
leave
add
xchg
cltd
cli
mov
orb
jae
sbb
jbe
dec
insb
xchg
fsts
mov
aam
sbb
xor
or
adc
push
cwtl
pop
inc
ficoms
pop
shrl
aam
or
call
repz
sahf
xchg
aam
aas
fs
pop
hlt
push
bound
mov
and
or
and
or
aad
jecxz
xchg
cmp
in
push
in
adc
cwtl
leave
fnstcw
shlb
or
push
into
dec
cmp
or
cltd
insl
int
int
push
insl
loopne
mov
sbbl
pop
decb
fnstsw
or
and
push
jecxz
das
aas
mov
fisttpll
add
popa
in
aam
cwtl
gs
pop
push
imul
pop
cld
adc
sarl
pop
testb
add
jne
inc
scas
test
lods
dec
push
pusha
lods
inc
push
fs
outsb
outsb
in
push
sbb
nop
cmc
mov
xor
mov
and
push
cmp
or
or
testl
in
stc
inc
sbb
sub
test
mov
icebp
data16
repnz
pop
sub
clc
mov
lahf
push
pop
jl
push
xchg
int
push
mov
cli
cs
das
popa
ret
int
xchg
xor
sub
adc
pop
dec
repnz
or
pop
icebp
push
xchg
xchg
js
jp
xchg
dec
inc
negl
pop
in
push
jns
imul
cmpsb
or
mov
push
movsb
inc
fst
sub
aad
xor
and
out
xchg
jo
dec
in
test
imul
push
notl
js
and
sbb
sub
cmp
aam
inc
xchg
jbe,pn
inc
mov
test
inc
lods
out
dec
and
lahf
pushf
inc
rorl
or
push
idiv
sub
cltd
pushf
mov
mov
orl
mov
mov
jns
push
out
mov
lahf
pop
icebp
clc
test
and
jns
add
shrl
xlat
sbb
int
push
lock
ljmp
cmp
lds
insb
subl
xchg
daa
pop
packssdw
mov
jbe
loop
inc
xlat
roll
fnstsw
pop
xlat
push
ds
adc
or
xorb
sbb
fcmovne
pop
cmp
shl
pushf
fcoms
sub
outsl
sbb
fwait
xor
mov
mov
imul
shlb
mov
movsb
loope
pop
idiv
lahf
mov
xchg
sbb
outsl
idiv
pushf
or
mov
push
lods
out
fcoms
sub
test
pop
ret
gs
ficoms
cmp
out
aad
xchg
sub
xchg
add
xchg
jno
pop
out
xchg
dec
outsb
repnz
or
jge
xchg
sub
test
cmp
or
popf
sbb
cmp
mul
aam
cli
add
scas
sub
mov
inc
inc
xor
pop
push
lock
clc
aam
popf
add
ficomps
imul
lcall
daa
mov
inc
xchg
mov
pusha
mov
or
out
adc
cmp
sub
add
xor
scas
pop
cmp
jno
popa
mov
in
outsb
push
inc
mov
mov
out
inc
mov
sarl
xlat
imul
pop
or
psubsb
push
xchg
outsb
pop
cmp
stos
xor
cmp
gs
xchg
call
sbb
pop
xorl
adc
push
jbe
pop
xchg
inc
inc
adc
lretw
fcompl
add
mov
inc
lret
mov
test
stos
inc
mov
add
mov
fbld
and
mov
int3
bound
and
pop
ss
add
push
jae
frstpm(287
mov
inc
std
mov
pop
cmpsb
dec
sbb
mov
mov
movsl
test
das
cmp
aam
icebp
add
in
pushf
xor
or
insb
sub
push
pop
mov
in
leave
mov
cmpsb
dec
cs
inc
movsl
outsl
cmp
pushf
roll
mov
cmp
jmp
aaa
lret
loope
mov
stos
ja
adc
stc
inc
and
dec
mov
test
shrb
jns
fs
jb
lock
mov
jmp
push
jns
leave
nop
adc
ret
sbb
fwait
ret
es
out
xchg
loope
outsl
or
les
push
add
sahf
and
arpl
push
fidivrl
mov
jmp
outsl
mov
in
dec
mov
outsl
iret
or
cmc
in
fimuls
add
pop
not
push
or
sub
mov
lahf
test
dec
stc
add
dec
lea
nop
bound
sub
or
aas
out
dec
jmp
add
push
cmp
outsl
inc
jne
add
xchg
fimull
out
jmp
add
int
daa
inc
bound
push
and
and
and
push
and
dec
ja
mov
sbb
jno
mov
dec
ljmp
xlat
xchg
iret
addb
outsb
mov
test
cld
adc
imul
faddl
xlat
dec
fldt
je
mov
fcomps
adc
xor
cmc
pop
jne
sbb
dec
pop
adc
rolb
cmp
inc
and
xchg
or
mov
popf
xor
mov
mov
scas
mov
or
sar
ljmp
mov
push
jnp
pop
cmp
xor
mov
sub
sub
loop
jg
cmp
dec
pop
sub
lahf
stc
inc
mov
jg
jb
mov
sbb
mov
sbb
outsl
jmp
and
mulb
xor
das
cmp
fists
loopne
sahf
adc
jge
in
stc
je
nop
jo
jp
stos
push
les
movsb
stos
data16
mov
add
dec
jmp
inc
sub
dec
inc
sar
inc
adc
in
test
testl
push
cmc
jecxz
fcompl
or
stos
pop
xor
daa
cmp
aas
sbb
and
cs
inc
mov
filds
test
movsl
cmp
or
mov
sbb
in
jl
stos
sub
cmpsb
push
loopne
inc
fcomp
jns
xchg
leave
xor
xchg
sub
out
inc
inc
add
jp
shrb
out
lahf
mov
sahf
icebp
xchg
mov
add
fnsave
pop
dec
ffreep
enter
push
mov
push
call
mov
sub
adc
lock
data16
int
mov
es
xor
and
jecxz
mov
popa
adc
fidivrl
data16
fstpl
outsl
sbb
jecxz
xchg
adc
xchg
lock
dec
push
shll
pop
add
pop
adc
cmp
pop
and
and
inc
lea
fsubs
dec
push
xlat
pushf
mov
adc
lea
cmp
sti
xchg
fwait
mov
loop
add
and
sub
dec
icebp
sbb
push
rcll
xchg
or
pop
mov
mov
inc
dec
dec
repz
call
adcb
mov
push
jno
movsb
jb
out
xchg
mov
je
push
sbb
test
push
shlb
mov
hlt
insl
int3
add
ret
pop
iret
fstps
jp
sbb
mov
out
test
iret
pop
adc
cmp
push
insl
inc
mov
xor
xchg
nop
fcmovne
es
subl
repnz
jno
add
sub
dec
add
orb
aaa
ds
sbb
pop
fs
mov
mov
mov
stos
gs
outsl
ret
xor
scas
dec
xchg
xchg
jge
fnsave
inc
dec
sbb
jg
adc
jns
test
inc
cmp
in
subl
mov
push
pop
repnz
sbbl
cmp
add
mov
or
push
xor
dec
add
sub
cmc
pop
mov
ret
gs
aaa
or
adcl
xor
and
or
das
mov
testb
aaa
jae
or
aaa
jb
add
push
pop
loop
sbb
mov
mov
cmp
sub
jne
mov
pushf
stc
faddl
lea
in
fbstp
shlb
sahf
icebp
fs
lcall
xchg
loop
mov
les
lret
outsl
push
pushl
clc
xor
insb
mov
lret
addr16
jg
mov
cld
sub
jmp
cmp
lods
or
jmp
push
test
sarb
cmp
in
cs
pop
stos
lret
mov
cltd
sub
pop
adc
insb
dec
imul
jnp
shrl
add
stc
mov
xor
jmp
push
cmpsb
lods
pusha
and
ret
mov
mov
dec
xor
fidivrl
insb
in
and
add
dec
in
clc
adc
popa
cmp
andl
pop
movsl
pop
outsb
pop
mov
testb
cmp
fldt
rclb
ljmp
mov
jp
adc
xor
pop
pop
mov
lea
cmp
sub
je
xor
add
fdivl
arpl
lcall
mov
popa
push
jo
pop
pop
mov
movb
aas
mov
or
test
out
insl
loopne
mov
int
aaa
ja
mov
lret
xchg
mov
mov
stc
xor
inc
test
mov
jns
test
push
movsl
in
cld
mov
push
sbbb
nop
or
jp
jno
pop
aas
roll
pusha
mov
mov
cmp
insb
imul
orb
jne
add
stos
mov
gs
mov
iret
adc
dec
and
idivb
mov
cmp
and
fidivl
repz
push
iret
mov
aaa
inc
mov
push
mov
push
pop
dec
jbe
push
test
mov
outsl
in
sbb
sahf
sahf
jb
dec
cmp
xchg
xor
fldt
sub
lcall
das
xor
cmp
jmp
xchg
rclb
cld
or
inc
bound
je
ds
mov
sbb
jb
out
mov
hlt
or
test
incl
mov
push
cmp
call
sub
ret
mov
sbb
mov
add
es
data16
out
bound
fsubs
insl
int3
lcall
adc
arpl
jbe
ror
fdivs
jnp
cld
and
jge
incl
arpl
das
ljmp
repz
hlt
inc
shlb
int3
cmp
mov
lcall
imul
sub
cmp
and
or
mov
lods
cltd
and
jmp
addr16
xor
mov
rolb
repnz
cmp
add
test
lods
cmp
mov
jo
sub
call
and
leave
push
popf
cli
jnp
cmpsl
lds
push
sub
out
cmp
add
test
shr
fnsave
ret
ss
nop
cltd
in
push
jno
sbb
mov
push
cmp
xor
jmp
out
mov
xchg
adc
or
aas
cmp
in
mov
fldcw
ss
push
cmpsl
jb
mov
fnsave
xor
imul
ljmp
data16
and
sub
das
pop
sbbb
rcrl
ret
xor
xchg
daa
pop
fnstsw
scas
inc
and
jmp
cmpsl
mov
ret
inc
repnz
jmp
lods
ljmp
mul
mov
sbb
adc
lret
xchg
cmc
xor
es
popf
xor
jnp
in
mov
cmp
insb
add
pop
std
xchg
pop
xor
lods
icebp
sbb
out
js
and
lahf
in
push
dec
int
dec
scas
loop
xchg
mov
fadds
ja
pusha
imul
cli
sbbl
stos
mulb
mov
cmpsl
ds
lods
xchg
mov
es
fsts
shrb
pop
push
jb
dec
sub
mov
push
dec
cmpsb
jo
pop
shr
adc
pop
sbb
ja
mov
adc
test
and
outsl
icebp
xchg
jbe
add
loop
xor
movsl
inc
add
cld
fcompl
test
std
push
or
mov
fisubl
ljmp
jg
xor
sbb
or
nop
dec
sbb
nop
pushf
pusha
cmpb
mov
mov
and
and
add
stos
fcmovb
and
xchg
adc
inc
mov
leave
shlb
test
pushf
xchg
pop
cmp
push
insl
mov
or
xchg
fwait
xor
pop
mov
or
jmp
jmp
mov
lret
xor
xchg
ficoml
adc
jl
xchg
or
dec
mov
inc
fs
hlt
cmp
adc
call
mov
or
cld
pop
test
xchg
sbb
rorb
in
js
xchg
and
stos
lds
sub
inc
pop
lock
int3
addr16
add
dec
cltd
push
cmp
iret
sbb
cmc
sbb
dec
mov
inc
shrb
pusha
leave
lret
push
push
sub
mov
lret
lea
xchg
pop
pop
add
inc
pop
push
pop
divb
xor
or
jge
shlb
das
push
inc
sub
jae
repnz
fstl
mov
arpl
repnz
fwait
push
data16
icebp
dec
sbb
mov
add
push
mov
or
jge
push
icebp
orb
xlat
pop
pop
outsl
dec
testl
insl
fcomi
test
lock
add
mov
cltd
dec
jge
jp
mov
cs
add
ret
pop
fwait
mov
ret
insl
adc
xchg
insl
loopne
mov
and
daa
pop
sarl
lea
pop
inc
out
addl
repz
es
aaa
stos
jbe
mov
sub
test
jmp
dec
das
lret
aam
mov
mov
mov
pop
mov
mov
sbb
jns
adc
mov
dec
gs
xor
and
xchg
xchg
dec
mov
adc
jp
mov
stc
call
mov
sub
ret
mov
pop
xor
pop
pcmpgtw
outsb
push
popl
xchg
out
test
lea
sub
cmpsb
sbb
sahf
in
fnstenv
or
xor
mov
xchg
mov
push
push
pushf
push
cmp
mov
jb
out
roll
out
shl
fst
in
sub
cs
rcrb
and
mov
jnp
pusha
and
pop
movsl
inc
lods
outsl
fs
nop
dec
imul
cmp
shlb
push
add
out
dec
pop
jae
clc
jmp
mov
inc
push
pop
pop
add
pusha
dec
test
mov
outsl
ja
mov
fsts
mov
in
hlt
imul
les
xchg
ret
out
rcpps
std
dec
dec
dec
and
scas
out
test
or
cld
xchg
sti
cwtl
pop
pop
or
out
cld
out
fnstsw
push
nop
mov
test
mov
xor
std
mov
inc
cld
dec
outsl
loop
xchg
jecxz
int
scas
add
ds
mov
loop
aad
je
xchg
mov
and
scas
imul
adc
xchg
in
jl
imul
sbb
sbb
inc
pop
in
fbstp
insl
cmpsb
inc
mov
pop
mov
scas
ss
sub
mov
sub
sub
pop
repnz
call
fsts
xchg
mov
xchg
lahf
stos
test
loop
xchg
mov
mov
xor
imul
repnz
adc
lock
les
cmp
mov
cmp
cmpsb
sbb
andb
lds
aad
out
adc
mov
mov
cld
cwtl
jge
add
push
xor
cs
fucomip
loopne
push
adc
fistps
mov
push
iret
mov
int3
test
mov
ficomps
pop
cmp
loop
mov
dec
aam
test
sub
mov
inc
xchg
cmp
mov
cmpl
jl
mov
adc
rcr
mov
adc
pushf
cwtl
xchg
adc
enter
and
jae
ljmp
mov
outsb
enter
mov
adc
stos
xchg
divb
sub
fsubl
xchg
sbb
inc
in
int3
xor
push
stos
call
pop
js
cmp
sbb
loope
adc
jb
sub
sahf
mov
or
shl
add
xchg
sahf
pop
test
mov
outsl
clc
adc
gs
dec
xchg
aad
leave
pusha
push
out
cmp
les
mov
jge
bound
lcall
jne
fldl
bound
bound
mov
std
fldt
into
int
ja
push
xchg
sbb
popf
xor
movsb
push
or
push
jle
lea
jo
hlt
or
push
mov
inc
mov
repz
mov
pop
mov
inc
jae
mov
xor
mov
test
pop
les
mov
sub
pop
repnz
pop
pop
js
adcb
or
jo
dec
inc
jnp
stc
addr16
cmp
cld
push
lods
movsl
push
add
das
les
cld
mov
ss
cmpsb
push
mov
jbe
mov
and
lds
xchg
std
xchg
push
fildl
adc
xchg
xchg
inc
enter
rolb
outsl
cld
push
ja
bound
call
pop
mov
fidivl
mov
jg
cmp
insb
cmpsb
out
sbb
daa
push
or
out
push
ret
dec
outsl
jmp
stos
xlat
ret
fisttpll
or
movsb
ror
xor
jae
or
push
cwtl
std
lock
and
push
xchg
pop
add
fdivp
ds
cmpsl
mov
sub
cmc
cmp
cs
and
adc
js
into
jb
cmp
leave
flds
pop
inc
lret
add
and
or
cmpsl
and
xchg
dec
fisttpl
xchg
pop
jp
stc
pop
in
mov
dec
adc
mov
sbb
or
cli
out
into
push
pusha
lahf
movsb
sbb
add
jbe
mov
push
fcmovnbe
jb
lods
lret
cmc
es
jmp
ret
pop
push
inc
into
movsb
push
mov
jl
test
push
stos
dec
aad
pop
or
xchg
inc
pop
dec
flds
jecxz
icebp
outsb
cmp
xor
xchg
mov
cld
cwtl
jle
cmp
orl
mov
jmp
int
jo
sbb
push
push
mov
cmp
dec
test
mov
fnsave
rcll
jne
jns
test
add
xchg
sahf
out
mov
rcrb
outsl
add
scas
shrl
jbe
cmp
das
movl
fisubs
aas
inc
or
xchg
int3
jecxz
jnp
inc
movsl
cmp
mov
xorb
adc
popf
or
iret
adc
je
fsubl
xchg
xchg
and
sub
in
or
nop
push
nopl
xchg
add
jb
pop
mov
aaa
hlt
dec
sahf
insb
mov
jnp
or
sub
arpl
inc
add
inc
int3
xor
or
aas
push
mov
sbb
cmp
sarb
pop
push
aaa
mov
sbb
sbb
xor
jecxz
pop
dec
int
sti
mov
notb
adc
xor
jge
jns
popa
stos
jbe
xchg
scas
add
jg
ret
pop
xor
stc
mov
fsubl
in
popf
cs
dec
and
leave
push
imul
loop
int3
xor
mov
hlt
xor
adc
pop
lock
xor
adc
cmc
add
cmp
or
arpl
les
pop
pushf
and
mov
xchg
loope
sbb
mov
dec
add
mov
fcoms
sbb
xor
jecxz
lock
scas
faddl
cmp
jns
daa
jmp
mov
jb
shrl
mov
dec
ljmp
mov
cli
pushf
scas
js
jge
cmp
fdivrp
rolb
add
adc
fldcw
cs
es
mov
stc
adcb
inc
cmp
push
xchg
jo
dec
daa
or
or
sbb
mov
pusha
mov
nop
out
test
ja
pusha
xchg
dec
jecxz
jg
clc
cmp
xchg
les
aad
faddp
rorl
adc
in
iret
leave
sahf
fdivs
fisttpll
mov
inc
push
mov
inc
mov
xchg
addl
ljmp
dec
jne
dec
and
jns
mov
dec
aad
mov
xorb
add
adcl
add
mov
add
out
jb
dec
les
and
ret
mov
mov
imul
push
out
and
iret
inc
faddl
scas
subb
fisubs
push
mov
jb
icebp
and
sub
lret
cld
lock
loop
pop
pop
nop
push
mov
out
sub
fwait
and
cmp
or
adc
and
push
ja
pop
push
push
dec
cmp
js
cmp
pushf
and
push
mov
lret
mov
pop
arpl
dec
push
or
test
das
iret
jecxz
ret
pop
shlb
insl
pop
adc
bound
shrl
push
mov
aaa
push
jae
test
test
ja
ja
nop
cwtl
out
xchg
jns
int
xor
adc
or
push
mov
les
push
scas
fucomp
repz
fsubs
mov
gs
cltd
lods
push
test
cmp
pop
jg
sbb
pop
divb
sahf
xchg
mov
mov
iret
fs
jnp
sub
pop
sti
stos
cmpsl
jb
lret
pop
movsl
cld
jb
into
sub
jp
ljmp
mov
shll
push
jecxz
jne
cmpsl
push
imul
mov
int
sub
cmpsl
lds
lock
jnp
shrb
cwtd
mov
jb
and
ret
jb
lret
pop
fstl
repnz
lock
test
or
nop
test
push
mov
jge
shll
jnp
stos
test
mov
inc
aaa
mov
call
cli
xchg
jbe
out
jae
pop
xor
xchg
xor
enter
jle
jg
dec
or
cmp
add
lods
mov
arpl
test
or
fdivp
xchg
and
enter
shll
mov
inc
arpl
xor
sub
lods
mov
filds
cmpsl
ret
jb
ljmp
das
adc
stc
daa
ja
push
cmp
add
es
pop
lock
lea
jno
dec
out
cli
pushf
inc
rorl
pop
cmpsl
cwtl
cld
sub
pop
push
mov
mov
cwtl
popf
jle
jbe
mov
dec
dec
daa
subb
cmp
rcrl
testl
movsl
adc
mov
jns
mov
cmp
push
add
push
pop
pop
inc
or
jmp
ss
mov
mov
int
outsl
pop
divb
jge
pop
inc
jge
ja
mov
adc
mov
js,pt
cwtl
xor
adc
outsb
mov
insb
xchg
or
push
pusha
adc
lret
outsl
jnp
xchg
xchg
add
mov
aam
sbb
jmp
sub
adc
ljmp
mov
ds
lods
xchg
xchg
loop
addl
frstor
pop
lds
mov
lcall
xchg
stc
loopne
js
push
mov
cli
sub
push
les
outsb
decl
loopne
pop
imul
rorb
fbstp
inc
cltd
pop
xor
popa
fs
push
sti
mov
or
lret
or
shll
test
in
dec
dec
lods
js
insl
pavgw
xlat
jnp
das
aas
lret
cmp
sbb
jne
das
jnp
adc
lcall
sub
sar
test
lret
cld
fldcw
fisubrl
mov
adcb
mov
mov
ss
in
xchg
dec
lods
sbb
add
push
xor
inc
jb
cmpl
push
jl
cmp
dec
ljmp
sub
aas
cwtl
daa
mov
iret
stos
inc
notl
fs
and
cld
jnp
inc
xchg
sar
xchg
icebp
ss
cmp
sbb
insl
popf
cwtl
decb
adc
insb
outsl
mov
lret
stos
push
jl
mov
hlt
mov
les
sbbb
cmp
push
push
jmp
cmc
jecxz
push
cmp
rorl
jae
push
test
mov
das
hlt
push
add
out
js
or
xchg
lcall
push
mov
fidivs
jle
pusha
push
pop
xchg
clc
or
in
lds
adc
fbstp
adc
outsb
int
je
xchg
push
sbb
jno
cmp
scas
aad
inc
shll
push
inc
outsl
jb
xchg
test
inc
fidivl
pop
rcl
leave
mov
bound
cmp
lcall
std
dec
out
jl
mov
mov
cmp
push
in
adc
mov
into
jae
jge
jg
ret
mov
inc
fcompl
das
shrl
add
daa
clc
nop
int
cwtl
pop
push
enter
and
ficoml
mov
xor
or
shrb
inc
xor
inc
gs
in
add
pusha
and
xor
mov
and
or
inc
pushf
xor
pusha
imul
cmp
aam
xor
scas
addr16
sub
test
pop
adc
add
or
jb
mov
sbb
sbb
mov
xor
gs
sti
sub
xor
dec
pop
cmp
xorl
add
mov
xchg
cmpsb
repz
cld
xchg
or
out
iret
mov
xchg
cs
mov
cmp
mov
rcll
mov
add
movsl
stos
and
push
int
test
mov
mov
pop
add
mov
jns
aad
pop
jnp
inc
or
imul
push
cmp
pop
mov
lret
cld
dec
and
push
jg
cltd
xlat
mov
insl
movsl
pop
inc
mov
popl
jle
xor
inc
adc
ja
fistpl
cmp
xchg
mov
mov
mov
sub
push
add
sub
dec
outsb
dec
and
incl
test
movsl
outsb
sbb
push
stc
das
imul
pop
pop
cmp
clc
mov
int3
xchg
ja
test
sub
mov
pop
iret
pop
test
popf
imul
in
stc
arpl
in
divl
dec
inc
pop
cmpb
cmpsl
push
and
push
dec
xchg
sub
rcll
shl
sub
and
scas
icebp
ja
in
sbb
mov
jae
sbb
sbb
es
pop
adc
add
push
rorb
fistps
outsb
in
fistpl
cmc
js
cmp
dec
jno
push
mov
pop
push
in
adc
dec
pushf
push
sub
mov
push
mov
mov
sti
pop
sub
cmp
mov
fdivs
sbb
iret
data16
inc
cmpsl
or
fcoml
ljmp
xor
and
cmp
mov
xchg
sub
cwtl
dec
add
fnsave
jns
clc
aam
sbbb
mov
add
xor
ds
adc
jae
add
clc
rcr
mov
cmpsb
mov
inc
aas
sub
out
into
dec
cmp
xchg
mov
pushf
outsb
inc
push
mov
sbb
enter
push
std
jo
or
jne
adc
lock
insl
sti
sub
sbb
out
xchg
mov
mov
dec
and
nop
mov
out
xor
test
cmp
adc
push
push
xor
sbbl
in
pop
testl
sbb
and
loope
jmp
out
into
jo
pushf
int3
mov
push
mov
divl
adc
jmp
push
sub
mov
loop
mov
testl
mov
movsl
add
pusha
jg
sbb
inc
inc
mov
aas
fcmovbe
lods
xchg
lods
bound
repz
push
xchg
xchg
mov
shll
mov
mov
adc
decb
jp
jb
cmpsl
test
inc
and
cli
dec
aas
mov
movsb
mov
les
or
cmp
lds
jge
out
sub
lret
cld
dec
mov
sahf
shl
jo
aam
or
out
sub
push
test
dec
fucomip
jnp
fbstp
addb
repz
xchg
sub
out
lret
cmp
subl
pop
xchg
sbb
cmp
test
pop
jb
popa
addl
lret
xchg
adcl
out
push
push
loope
mov
push
inc
mov
add
or
push
cmp
decl
xchg
and
adc
testl
or
sub
push
lahf
cmp
jecxz
aad
lret
mov
ss
mov
adc
cmp
push
dec
sahf
rorl
fsubrs
fcomi
mov
jmp
in
xchg
dec
jo
cwtl
push
lods
cs
fwait
add
sahf
jb
jo
mov
push
orb
cltd
adc
ja
jecxz
lods
mov
mov
testl
xor
xchg
test
xchg
lcall
push
cwtl
push
mov
push
pop
xor
lock
push
inc
cmpsl
xor
mov
test
lea
popf
push
cmp
imul
jnp
enter
sti
add
mov
lcall
and
inc
jge
hlt
mov
lods
mov
pusha
mov
icebp
fnstsw
jp
jae
and
xchg
decb
dec
gs
sub
out
rcl
cld
lock
fbld
or
cmp
mov
inc
test
mov
pop
shrl
xor
push
test
fisubrs
scas
fidivrs
add
dec
rolb
cmp
mov
negb
xor
jp
repnz
and
or
dec
mov
jnp
or
inc
xchg
mov
xchg
inc
fsubrs
fbstp
imul
outsb
or
inc
jmp
insl
jns
xchg
popa
iret
pop
mov
sbb
negb
test
push
mov
push
call
inc
and
jns
insb
mov
lea
inc
push
mov
sub
repz
in
push
mov
xchg
ss
pusha
pop
inc
ljmp
or
outsl
cmp
jge
ret
divl
push
das
or
popa
je
je
stos
pop
sub
std
std
xchg
fisubs
sbb
push
push
or
jns
andl
mov
mov
mov
fimull
xchg
jl
ficomps
adcb
pop
sub
imull
sbb
cmp
imul
outsl
push
jmp
push
mov
lods
and
lcall
jne
out
lret
loop
and
jo
cmc
arpl
mov
test
inc
mov
push
push
cltd
pop
inc
fimull
fsubrs
inc
stos
jge
iret
not
icebp
add
sub
sti
popf
push
rcr
mov
sub
or
cmp
cmpsl
mov
pop
or
pop
sarl
jne
iret
ja
add
push
sbb
enter
xor
movsb
inc
repz
daa
inc
fidivrs
hlt
pop
ja
into
push
outsl
jge
les
fistps
icebp
or
pop
ss
push
inc
push
add
xchg
xor
lods
dec
movsl
mov
iret
shl
xor
dec
xor
dec
hlt
mov
jl
mov
pop
insl
and
sub
cmp
cmp
dec
jg
push
fimull
mov
loope
lret
and
out
xchg
sub
enter
add
pop
je
xchg
ret
dec
movsb
nop
nop
and
jbe
jmp
push
pop
mov
sub
mov
cltd
fistl
cld
sub
inc
dec
std
add
or
mov
test
aam
call
fisubs
sti
repnz
and
bound
ljmp
fnsave
popa
mov
adc
jb
push
movsb
test
rcl
fsubr
pop
in
sarb
cwtl
orl
xchg
add
enter
or
push
and
popf
push
out
adc
outsb
or
pusha
xchg
js
repz
aas
and
fimuls
pop
mov
mov
adc
hlt
dec
addr16
cmpsl
shrb
push
sbb
lea
adc
sti
test
add
xchg
adc
daa
mov
adc
pop
sub
cmp
sbb
jl
dec
mov
push
push
mov
test
test
push
xor
aaa
and
push
negb
jns
add
mov
loop
insb
enter
imul
xchg
xor
andl
divl
rol
pop
add
mov
pushl
loop
pop
cltd
ss
rclb
xor
dec
rorl
movsb
cmp
add
insl
mov
cmpsb
pop
xchg
sub
js
and
sub
scas
ja
xchg
xor
add
and
push
scas
xor
push
or
mov
popa
fsubrl
dec
cmpl
ret
adcl
test
inc
ljmp
cmp
mov
add
fbld
bound
xchg
lgs
leave
scas
lods
and
mov
push
testb
popa
clc
in
jne
sahf
jg
sbb
call
sbb
pop
xchg
sub
leave
cmp
ficomps
adc
insl
sub
iret
mov
into
movsl
std
xchg
xlat
jnp
pop
cmp
xor
mov
inc
call
mov
fnstenv
cmpb
lret
subb
test
mov
test
clc
into
push
sbb
fdivrs
mov
adc
das
inc
push
repnz
xchg
xor
push
jnp
out
sbb
cmp
pop
shrl
pusha
lods
pop
mov
dec
fsubl
push
cmp
jns
cmp
or
pop
and
in
in
movsb
cmp
mov
in
test
mov
pop
daa
int3
mov
jl
and
repz
lods
mov
mov
js
xchg
hlt
mov
cmp
cmp
cld
mov
xor
mov
ficompl
or
lock
dec
leave
cltd
cli
jo
fistl
movsb
stc
jb
pop
mov
mov
push
aas
jbe
ret
rcll
mov
es
xlat
and
aad
add
push
mov
pop
lock
lods
loope
xor
or
inc
jecxz
hlt
call
test
xchg
test
sbb
push
inc
dec
add
hlt
out
inc
out
mov
icebp
ja
add
daa
testl
sbb
xor
rcrl
repnz
shl
lods
lcall
jp
fwait
inc
or
xchg
mov
or
pushf
outsb
fsubs
lods
mov
pop
insl
ss
sub
push
imul
mov
and
xlat
test
outsl
icebp
sbb
enter
popf
imul
int
xor
mov
scas
xlat
daa
cli
sti
pop
repnz
xchg
sub
pop
adc
add
xchg
add
stc
clc
repnz
adc
testb
adc
and
into
testb
inc
xchg
adc
shrb
shrb
outsl
pop
xchg
jg
xchg
dec
test
xchg
arpl
dec
or
pop
pop
mov
les
or
out
imul
das
xor
sahf
dec
mov
jmp
push
xchg
sub
rolb
adc
cmpsb
mov
fdivrs
cmc
int3
cmp
mov
test
pop
or
mov
add
and
rcll
sub
rcl
sbb
pop
hlt
dec
fimuls
test
test
lods
push
inc
mov
aaa
popfw
lods
lret
or
shl
nop
sub
insl
cmp
or
flds
nop
sahf
cmc
inc
cmp
repnz
sub
xorb
repz
or
out
jo
aam
sub
pop
mov
push
jns
inc
cmp
popf
clc
xor
cltd
loope
popf
add
stc
je
aas
paddd
jns
or
test
adc
aaa
call
test
sub
sbb
es
dec
fcompl
outsb
fisubs
daa
in
mov
dec
fstpl
das
lods
pop
lahf
mov
dec
push
cmpsl
nop
scas
jle
test
into
dec
loopne
or
add
sub
sub
lcall
and
adcl
jae
enter
xor
int3
js
cmp
inc
sbb
incl
pop
mov
mov
lret
fdivr
jne
lds
xor
add
pusha
pop
cld
jbe
call
test
mov
adc
loop
pop
out
mov
pop
paddq
sbb
xchg
adc
aaa
push
lods
pop
xchg
popa
and
fmuls
cmpsl
and
sar
jmp
es
leave
and
test
imul
push
jno
xor
xchg
sahf
sahf
xor
sub
lea
cld
lret
jp
jmp
pushf
addb
les
sahf
clc
dec
shlb
movsl
enter
fsubrp
jmp
gs
xor
xor
out
cmc
jbe
mov
loop
jae
mov
mov
loop
rcrl
daa
mov
rcpps
into
push
mov
pop
rol
pcmpeqd
movsb
pushf
push
outsl
sub
inc
test
xor
lahf
ljmp
xor
xor
mov
loop
sbb
inc
das
xor
jne
mov
inc
pushf
stc
push
dec
adcb
scas
out
loopne
jno
sar
fisubrs
shrl
adc
xchg
repnz
mov
sub
leave
push
push
pop
inc
push
and
jle
shrl
dec
hlt
ret
je
jecxz
pop
lcall
addl
add
jmp
dec
fimuls
jle
ret
sub
xchg
pop
add
mov
fnstenv
dec
adc
aam
fdivrl
sarb
dec
push
or
add
jecxz
std
fwait
inc
in
dec
push
jl
lahf
stos
ficompl
fisubrs
das
push
bound
xchg
pop
mov
fwait
lods
mov
sub
andb
adc
and
ds
gs
push
push
mov
xchg
jmp
cwtl
cmp
cmp
cwtl
daa
mov
dec
add
shl
pop
sbb
mov
adc
mov
lret
shll
push
sti
lods
shll
xor
jmp
mov
push
int3
xchg
push
sub
dec
and
push
sub
test
mov
lods
call
leave
popa
mov
pop
test
shl
lods
ljmp
cld
mov
adc
add
outsl
out
push
push
out
movzwl
inc
adc
push
aaa
int3
fsubr
jb
fidivl
xchg
mov
jmp
lods
fdivrs
fs
into
add
adc
push
add
mov
adc
out
xor
inc
add
pop
aas
cli
inc
inc
hlt
test
fwait
aas
and
push
add
stos
mov
es
loope
aas
rorb
push
adc
fisttps
jae
repnz
push
repnz
test
pop
mov
dec
xchg
cmp
insb
xor
dec
andb
sbb
jo
jo
push
cmpb
ja
xchg
in
pop
cmpsb
mov
adc
lods
lods
in
and
and
mov
and
insl
out
test
movsl
or
fsubs
mov
loop
dec
fbld
mov
in
push
adc
lds
sbbl
mov
movb
popa
stos
gs
mov
les
cmpl
nop
cmp
inc
ljmp
gs
scas
add
rolb
sti
mov
in
sub
xchg
les
dec
push
rcrl
or
mov
xor
pop
push
jecxz
push
je
add
lcall
js
pop
int3
xor
aas
and
mov
xor
mov
arpl
xchg
mov
fbstp
or
pusha
incb
out
xorl
aaa
div
aaa
xor
lcall
push
or
cmpsb
add
push
push
cmp
xchg
sub
fisubrl
and
push
or
insb
jl
fwait
insb
push
mov
mov
pop
inc
pop
jp
mov
fsubrl
adc
sti
popf
das
shll
jo
ss
sbb
je
fcomps
test
mov
sub
inc
jecxz
imul
push
mov
and
xchg
js
mov
in
jns
or
xor
popf
mov
imul
jp
jg
mov
outsb
add
pop
roll
stc
popf
ret
pop
jmp
cs
loopne
push
xor
pop
gs
pop
and
clc
jae
ret
je
xor
fisubl
add
ljmp
and
cmpsl
cmpsl
add
jae
dec
sarb
dec
loop
stos
loop
fisubl
clc
test
loope
cmpsl
and
int
pop
xchg
out
in
shlb
enter
in
mull
mov
mov
fmull
movsl
leave
call
cmc
mov
ret
inc
js
and
sub
into
gs
xor
and
stos
or
push
ffree
jmp
into
imul
call
xchg
es
sbb
ret
mov
pusha
sub
pop
out
and
cmp
adcl
pop
sbb
outsl
xchg
sub
fidivs
rclb
incb
mov
adc
les
test
fs
dec
sub
shrb
push
rcrb
inc
sbb
in
data16
aas
fsubr
test
ljmp
in
and
enter
jae
in
xlat
push
cmpsl
aam
shll
inc
shl
cmp
testb
xchg
dec
je
push
mov
inc
outsb
push
fcompl
mov
ljmp
or
call
lds
les
lods
or
outsb
ficoml
in
cmpb
test
addl
push
movsl
out
enter
sub
mov
mov
js
sub
add
sub
icebp
fsubrs
insb
lea
inc
imul
lods
inc
fs
mov
es
inc
push
xchg
ds
and
ret
repz
outsl
push
push
sub
out
das
jnp
jo
sbb
mov
inc
stos
and
inc
ret
js
xchg
insl
pop
xchg
test
xor
mov
push
js
sub
xchg
mov
pop
sti
mov
add
mov
test
int
xor
and
mov
mov
add
lcall
inc
jne
jge
inc
lcall
pop
in
xchg
iret
jmp
sub
outsb
sahf
xor
add
inc
xlat
jno
add
ret
mov
loopne
loope
push
jae
add
add
fiadds
and
fwait
sti
imul
cli
adc
pop
out
or
in
das
les
xor
outsl
push
mov
or
pop
xchg
jnp
jmp
mov
sub
pop
sub
scas
sub
rcrl
mov
stc
sub
es
lock
adc
test
out
push
hlt
lods
xchg
sub
dec
mov
rcrb
cli
push
hlt
iret
jecxz
inc
gs
mov
aad
imul
nop
jnp
xchg
daa
lcall
cmp
mov
fidivrl
paddsw
outsl
imul
pushf
aam
xchg
and
loop
dec
sbb
inc
lahf
outsb
fbld
jl
push
lods
sub
jns
ds
mov
lds
andb
mov
push
dec
fcmovnb
push
jne
cmp
xchg
sub
stos
ds
lret
cmp
loope
test
cltd
mov
fcoms
out
or
rorl
imul
lahf
sbb
repnz
mov
enter
jl
add
dec
push
mov
scas
push
add
mov
push
push
xchg
sbb
mov
jno
stc
dec
push
push
stos
insb
lds
jbe
lea
mov
mov
mov
sbb
mov
mov
xchg
scas
stc
jno
andl
or
inc
dec
push
jno
inc
les
lods
mov
jb
pop
sub
stos
cltd
int
js,pt
fsubrl
and
leave
push
rol
mov
xorb
lea
push
cmp
std
leave
outsb
lods
fsubr
ficoms
stos
jle
mov
push
jae
mov
stos
popa
xchg
out
outsl
xchg
adc
outsl
repz
insl
or
pusha
xlat
outsb
push
addr16
mov
pop
testb
fucomp
mov
bound
mov
test
push
jno
inc
scas
mov
les
xor
xchg
mov
inc
sub
data16
dec
dec
arpl
add
ret
push
loope
jp
mov
dec
iret
mov
xor
pusha
mov
xchg
adc
pop
xor
leave
sub
add
shll
gs
aad
sub
push
ret
out
int
and
loopne
test
push
imul
addl
jmp
and
mov
sarl
sbb
insb
mov
xchg
test
and
cmpxchg
jecxz
mov
sub
lods
xor
adc
cld
scas
outsb
push
js
faddl
dec
fs
sti
mov
aas
mov
test
test
xor
in
jl
push
sub
popf
push
xor
adc
stos
aas
xchg
cs
inc
pop
jae
add
sub
test
xchg
das
cmp
gs
mov
pop
movsb
and
xchg
js
cmp
mov
ret
enter
add
lret
mov
mov
pop
fists
cmpsb
fucompp
in
rcl
test
push
imul
scas
nop
test
ret
hlt
into
adc
movsl
sbb
xor
xchg
adc
cmpsb
popa
add
sub
lods
call
xor
mov
or
xchg
shll
aaa
pusha
es
fiadds
jp
inc
cmp
pop
stos
js
stos
mov
test
dec
adc
jl
je
aam
add
loope
xchg
mov
sub
fwait
or
adc
or
pop
iret
gs
pop
mov
jp
pop
xchg
pop
out
les
movsl
scas
cmpsl
imul
lret
icebp
xor
or
and
rorb
leave
rorl
sbb
sub
std
rep
jp
sub
mov
outsl
repnz
fisubl
pop
imul
cmpsb
in
aad
inc
pop
mov
mov
lahf
ret
es
ficoms
adc
mov
imul
xchg
add
inc
and
jg
dec
out
xchg
pop
xor
push
in
sbb
ja
scas
test
or
adc
ret
push
pop
fnclex
mov
pop
iret
xlat
sbbb
sub
jl
lea
pop
aas
bound
xchg
adc
mov
xor
in
and
sahf
lods
aad
cmp
lea
pop
mov
cltd
movzwl
lods
xchg
mov
test
mov
add
fs
jne
pop
adc
movhlps
cs
and
stos
fildll
rcll
shlb
dec
add
cmc
lcall
mov
sbb
push
pushf
inc
fimuls
mov
out
sbb
sarl
adc
adc
fistpll
gs
or
sub
lods
mov
insb
aaa
rorl
mov
mov
repz
repz
pushfw
inc
stc
or
mov
jmp
cmpsb
lcall
cmp
jecxz
loop
aas
fmull
push
pop
lret
mov
jge
outsl
enter
sbb
fcompl
or
repz
insl
sbb
sahf
scas
imul
push
jo
imul
dec
les
aad
mov
jge
shl
stos
sahf
enter
inc
lods
sub
jp
les
jb
test
jecxz
cmp
cmpsl
push
in
nop
sbb
push
xor
std
and
jnp
mov
pop
out
decl
frstor
dec
outsb
loope
sub
add
in
shrl
jmp
mov
pusha
jmp
and
push
idivb
pop
mov
loope
mov
scas
xor
loopne
mov
popa
ret
nop
imul
and
in
dec
inc
fdivrl
into
cmp
rcrb
adc
pop
push
loope
adc
xor
xchg
scas
daa
xor
ds
and
in
cmp
ret
push
inc
mov
in
repnz
cli
data16
dec
fbld
gs
inc
data16
or
bound
ds
lahf
mov
xor
int3
int3
fimuls
in
notl
decl
sub
int3
lea
ret
stc
dec
icebp
push
icebp
loop
or
xchg
dec
stc
sub
jmp
shrb
test
mov
adc
cmp
jo
jle
sub
rep
fwait
and
lahf
sub
and
xchg
jae
adc
cmp
rorb
cmc
test
imul
lret
daa
leave
dec
inc
pop
inc
dec
xor
addr16
mov
adc
fs
pop
inc
and
mov
scas
pop
inc
js
js
jle
rcrl
xchg
movsl
aad
fldl
adc
cli
shlb
enter
and
pop
fdiv
lret
mov
push
movsb
das
mov
rcll
add
mov
jnp
add
mov
leave
popa
je
cmp
imul
shl
sbb
aas
rcrb
lock
arpl
fdivs
sbb
mov
xor
inc
adc
mov
mov
adc
jnp
fs
sub
call
mov
inc
ss
dec
aas
xchg
mov
loope
pop
mov
stc
je
popa
xlat
popf
push
dec
std
xor
popf
cmc
sbb
inc
loope
std
dec
lods
sub
push
repnz
or
mov
add
push
in
shl
cs
lahf
divl
mov
out
and
mov
iret
and
adc
aam
xchg
push
data16
and
nop
inc
popa
enter
adc
push
sbbb
negl
push
sbb
jg
int
rorb
push
popa
or
scas
or
fisubl
xchg
repz
and
es
shrb
and
repnz
pop
cmp
enterw
rol
push
movsb
inc
ret
ds
cmp
dec
aas
or
jbe
stos
mov
lret
push
and
mov
adc
xorl
loop
xor
xchg
movsb
jecxz
inc
add
add
movsb
inc
jge
inc
push
adc
inc
cltd
imul
mov
mov
je
jmp
and
ja
lods
aad
mov
lret
xor
loop
mov
bound
test
imull
adc
sub
mov
jbe
cmp
scas
lods
sbb
in
das
push
imul
sbb
dec
mov
mov
aas
loope
fadd
sbb
jo
mov
dec
pop
mov
or
xchg
aam
les
lock
inc
psraw
popa
push
xchg
lret
sbb
xchg
clc
push
movsb
sti
push
rol
mov
xchg
int
push
shlb
gs
jle
or
negl
out
xchg
ss
inc
cwtl
mov
and
cmp
mov
xor
or
in
es
sti
addps
inc
leave
add
mov
mov
pushf
mov
mov
and
jb
push
ss
xchg
inc
pop
mov
das
movsl
jl
xchg
mov
pop
jmp
call
and
scas
push
sub
daa
in
jo
dec
addr16
xchg
cmpsb
and
sbb
dec
pop
dec
outsl
inc
daa
mov
addr16
stos
ret
mov
mov
in
and
cmp
xor
fnstenv
push
sbb
cmp
leave
out
cld
cli
pushf
mov
xchg
shl
test
jb
mov
js
sub
fwait
pop
adc
jne
stos
sub
push
jmp
rcrl
xchg
addb
iret
or
push
int
xor
inc
test
mov
adc
or
and
popf
push
cwtl
jmp
push
movsb
repnz
int
ret
add
fldenv
and
out
mov
cmp
fsubs
pop
pop
shrl
push
mov
fimuls
mov
xchg
mulb
ss
cmp
push
xor
jbe
iret
dec
addb
in
subl
mov
jle
push
lcall
dec
mov
ja
loop
and
sub
pop
repz
icebp
jnp
in
inc
xchg
mov
jae
push
es
mov
jle
imul
sbb
loop
fistl
add
inc
jo
pop
cmp
mov
hlt
pop
mov
scas
jle
sub
popf
pop
ss
in
popa
xchg
daa
mov
adc
repz
add
aam
mov
pop
push
cltd
mov
sahf
ficoml
cmpsb
or
xor
add
bound
xor
shl
dec
mov
push
lea
mov
mov
int3
pop
outsb
incb
jmp
or
dec
cmpsb
adc
sbb
push
push
xchg
cmp
lret
test
test
or
cmc
sbb
aas
lret
lret
lods
jmp
das
enter
lds
dec
imul
sub
rorb
hlt
inc
adc
xchg
bound
sbb
shlb
adc
addr16
lds
inc
add
inc
mov
push
jne
cld
das
cmp
jle
add
pop
decl
mov
in
adc
xor
adc
sbb
pop
std
pop
fcom
mov
test
push
test
ja
xor
jne
cmp
xor
mov
pop
jae
mov
and
push
stc
inc
sahf
shrl
push
mov
icebp
in
push
pop
sub
mov
imul
mov
mulb
iret
cmp
mov
push
push
dec
movsb
lahf
xlat
mov
iret
add
jb
jno
cmpsb
in
es
gs
push
stos
int3
das
jg
xor
repz
push
outsb
adc
sub
mov
adc
sbb
popa
cmc
popa
push
call
aas
ljmp
mov
pop
movsl
in
push
cli
jbe
sub
mov
fnstcw
adc
movsb
jg
xor
add
fnstenv
mov
cmp
adcb
aad
push
shl
leave
sub
pop
fs
movsb
push
fistpll
mov
iret
jno
xchg
scas
xchg
sbb
and
inc
gs
inc
test
lret
fisubrs
lret
or
xchg
sbbb
mov
ja
cmpsb
in
out
push
dec
inc
sbb
push
pop
pushf
ret
xor
clc
fldcw
in
xor
cmp
push
sahf
sbb
stc
sub
sub
js
stc
mov
push
in
test
adc
xlat
sahf
std
lods
mov
in
sub
shll
inc
int
inc
jb
repz
sbb
inc
cmp
imul
adc
mov
hlt
add
testb
add
fisttpll
nop
popf
sub
lods
mov
inc
pop
movsl
popf
imul
std
insb
xchg
adc
xchg
cs
mov
add
xor
aas
and
leave
pop
pop
mov
out
mov
push
lcall
cwtl
mov
mov
sub
sti
stos
inc
jmp
jb
pop
scas
inc
pop
lods
cli
sarb
sub
mov
in
jae
mov
int
sbb
mov
fiaddl
loope
ss
icebp
push
leave
cld
js
fnsave
sub
shlb
stos
int
add
mov
ja
and
iret
xchg
sub
jmp
into
add
sub
pop
imul
fisttps
jae
popa
or
std
push
add
fdivl
cmpsb
mov
inc
ja
std
inc
inc
int
and
shlb
dec
push
push
js
cmp
test
pop
out
scas
idivb
lods
sbb
mov
aad
pop
pop
jecxz
mov
or
cld
rcll
shrl
int
xchg
aas
pushf
out
mov
pop
mov
sarl
mov
push
push
popa
push
out
xchg
cmc
nop
sub
in
fs
mov
imul
or
cwtl
xlat
movb
xchg
sub
adc
lret
mov
movsb
and
mov
hlt
add
aam
push
sub
popa
add
add
jo
ljmp
mov
loop
xor
movsb
movsl
int
add
mov
mov
rcrl
add
sub
push
pop
jg
pop
xchg
outsb
jge
icebp
inc
jecxz
cmc
inc
pop
mov
scas
lret
xchg
mov
jb
mov
cmp
lret
cmp
sub
shll
out
aaa
fwait
push
or
fnstsw
shlb
push
rolb
cmp
jae
and
iret
xchg
sub
in
jge
sti
mov
je
scas
inc
stos
sub
pop
popl
mov
inc
insb
cmp
cmp
scas
xchg
popf
sbb
ss
stos
in
push
out
fidivs
add
xor
and
adc
push
mov
mov
inc
in
mull
cmp
jecxz
jle
es
adc
sbb
test
add
sbb
aaa
adc
mov
decl
fisubl
and
mov
lds
leave
mov
loop
fucomip
dec
or
daa
aad
pop
adc
inc
mov
insb
loopne
lcall
fsub
xor
xchg
stos
add
out
lret
mov
hlt
xor
enter
ss
shrl
lock
insb
xor
jge
pop
call
adc
dec
cmpsb
inc
push
daa
cwtl
xor
daa
leave
mov
and
jmp
daa
sti
fistps
add
push
out
jge
adc
insl
xchg
aas
fsubrp
jo
icebp
adc
movsl
pop
add
and
and
lock
inc
pop
push
mov
and
inc
fcom
xchg
or
cmc
pop
imul
hlt
addl
mov
mov
adc
lcall
out
les
in
mov
mov
cmc
xchg
jmp
and
jnp
stos
cmc
xor
mov
repz
in
push
dec
ja
enter
or
jb
push
and
xchg
repnz
pushf
xor
xchg
hlt
mov
das
ja
dec
stos
aas
cltd
fwait
lds
xor
pop
aaa
test
loop
ljmp
orl
jae
enter
pop
loope
out
dec
adc
and
nop
ja
cwtl
shrb
add
scas
fs
lds
adcl
fnstcw
int3
mov
mov
mov
or
or
xchg
cmp
add
adc
ja
push
popa
pop
xchg
mov
mov
push
dec
sub
std
xchg
mov
sub
cmp
sbb
cld
shll
es
stc
push
popf
sub
jns
addr16
xor
popl
push
mov
inc
clc
cs
push
xlat
sbb
outsl
les
mov
mov
pusha
cli
mov
xor
incl
leave
adc
pop
fwait
mull
cmp
sub
dec
jo
mov
fists
mov
in
adc
in
and
pop
outsb
fnstenv
enter
rclb
mov
xchg
adc
div
rcrl
sahf
jne
mov
and
fsub
xchg
mov
dec
ret
mov
ss
or
pop
xor
pop
paddusb
jmp
cmpsb
lock
scas
mov
xchg
pop
jnp
call
jg
test
add
xor
ss
loop
test
out
aas
inc
add
inc
add
cli
lods
test
jbe
lds
sbb
cwtl
test
and
dec
cmp
lds
mov
mov
leave
bnd
outsb
inc
mov
xor
xchg
test
movsb
pop
adc
mov
sbb
cmpsb
loope
xchg
ror
std
stos
insl
sbb
shlb
pop
pop
sub
mov
je
mov
cmc
jge
inc
jmp
pusha
xchg
mov
outsb
icebp
mov
inc
and
jge
ljmp
or
ja
mov
jnp
mov
inc
xorb
pop
cld
repz
dec
fucomp
test
or
xchg
or
add
mov
xchg
pop
xchg
mov
jne
sbb
push
sub
fnstcw
lret
enterw
test
ljmp
jb
inc
or
mov
xchg
adc
or
jmp
les
inc
in
sbb
daa
add
fdivrl
adc
or
scas
dec
mov
ss
lret
pop
cmpb
jecxz
fcmove
inc
arpl
cmp
pop
daa
adc
insb
call
hlt
icebp
adc
jl
inc
mov
imul
lcall
xlat
push
sub
sub
fiaddl
mov
movsb
xchg
lds
loope
loop
and
pop
repnz
sbb
jmp
mov
into
sub
test
std
mov
mov
adc
mov
insb
fimuls
add
pushl
jbe
scas
add
mov
pop
stos
int
mov
aaa
pusha
ljmp
push
push
aas
fcmovbe
leave
bound
hlt
pop
call
push
cmpl
iret
shlb
psrad
and
fcomp
imul
imul
pusha
dec
imul
and
fcoms
mov
adc
mov
loop
inc
cmpsl
mov
xchg
sbb
movsb
shl
cmp
pop
ja
loopne
jae
daa
jmp
pop
xchg
imul
arpl
xchg
push
jle
pop
stc
in
lcall
jle
jnp
push
jns
xchg
es
mov
xor
sub
hlt
pop
xor
xorb
fsubrp
stos
in
and
or
movsb
jle
cmp
xor
shr
lods
mov
xchg
add
or
and
adc
xor
or
and
icebp
jns
cli
add
aad
pop
icebp
adc
popf
dec
add
sahf
or
jle
lods
dec
and
lds
aad
mov
jg
cmp
shlb
out
call
sub
jne
mov
into
inc
or
cs
fwait
aam
fnstenv
cmp
dec
mov
cbtw
das
lds
insb
pop
int3
arpl
lods
jmp
jge
and
lods
sahf
push
jmp
dec
cmp
xor
sbb
mov
inc
andnps
inc
gs
push
ret
es
shlb
orl
sub
fcomps
stos
in
pop
ds
pop
arpl
test
insl
cltd
push
inc
xchg
mov
xchg
popf
inc
sbb
inc
pop
xor
mov
andb
bound
movsl
cld
pop
rep
js
daa
ja
ficompl
into
jg
jl
fisubl
int3
hlt
or
into
mov
stos
inc
loope
sbb
xchg
push
xor
rorb
stos
sar
sub
push
fsubrs
pop
inc
mov
mov
lcall
sbb
fisubs
mov
pop
cmp
test
xchg
stos
shrl
mov
push
mov
adc
push
imul
stos
cmc
lds
cld
push
xor
in
cmpsl
mov
fisttps
imul
pushf
outsb
rcrb
sub
cs
inc
mov
pop
push
pushf
ds
mov
xchg
xlat
icebp
pusha
and
adc
jmp
push
inc
addr16
jne
pop
movsb
in
add
lea
cmp
mov
add
mov
les
vmread
int3
push
jb
add
notb
sub
test
clc
or
jne
adc
bound
fistl
cmpsb
cmp
xchg
lock
or
cli
addl
sahf
adc
mulb
data16
leave
stos
xor
mov
std
insl
push
inc
xchg
mov
push
popf
or
mov
xchg
outsl
add
and
inc
fxch
inc
dec
xchg
imul
lock
pop
and
test
xor
xor
ss
and
push
call
into
testl
dec
inc
sub
mov
pop
xor
gs
repz
xor
mov
add
add
lea
sub
and
cmp
scas
xlat
daa
or
dec
loop
pop
lcall
and
and
mov
push
in
fs
cmp
pop
test
scas
es
sbb
cmp
filds
popf
shrb
ret
ror
test
add
xor
lds
scas
dec
loopne
jle
mov
movsl
lods
daa
mov
fidivs
jmp
xor
pop
adc
nop
hlt
mov
dec
outsb
adc
sbb
in
mov
sbb
cmc
shll
cmp
mov
arpl
enter
or
jbe
push
push
sub
sub
test
mov
mov
iret
ret
push
xchg
mov
adc
data16
mov
xchg
pop
dec
sbb
inc
push
rcl
les
enter
shll
arpl
mov
fsubrp
push
outsb
cmc
mov
fiaddl
call
scas
or
mov
rcl
fsincos
addr16
pop
dec
sub
inc
dec
ficompl
loop
sti
iret
bound
xor
cmp
inc
or
cmp
mov
adc
push
fwait
out
mov
mov
sarb
call
or
sti
mov
pop
repz
fsubr
mov
divl
or
cmc
lds
jp
jg
gs
in
pop
pop
in
dec
aad
cld
jp,pt
fwait
sub
inc
pop
dec
popa
mov
xchg
aaa
cmp
xchg
in
mov
mov
jne
movsl
imul
mov
daa
mov
inc
and
aas
adc
ret
xor
mov
frstor
fsubr
and
jmp
push
jb
in
inc
dec
stos
cs
pop
add
mov
shlb
mov
cmovne
jne
stos
je
push
loope
xor
and
cmpsl
pop
nop
lods
inc
sbb
push
repz
fs
lcall
gs
sub
bound
cmpl
jne
andl
fldt
mov
cmp
mov
cmp
lods
xchg
or
popf
sbb
out
cmp
mov
stc
aam
mov
jg
or
add
inc
fsubrs
cld
or
cmpsl
or
test
daa
outsl
push
jg
aaa
mov
cmc
repz
std
xchg
add
xor
pushf
jnp
jnp
cmp
repnz
test
sub
clc
hlt
pop
cmp
notb
call
mov
test
add
imul
cmc
jnp
pop
ja
lret
mov
and
sub
mov
rcll
bound
roll
jecxz
pop
jge
inc
mov
inc
xchg
scas
inc
pop
adc
mov
rcrb
scas
or
mov
testb
test
and
fwait
add
nop
dec
movsl
das
mov
int
push
sub
nop
jo
loop
xchg
scas
cmp
push
jne
ret
js
imul
stos
add
imul
push
or
sub
jecxz
dec
jne
mov
icebp
mov
rorb
mov
test
fstps
mov
xor
out
fnop
ret
pop
idivb
loopne
or
adc
jecxz
xor
in
adc
sub
ja
mov
mov
mov
sbb
mov
xchg
jl
ljmp
and
push
cmp
rol
jmp
push
arpl
and
xchg
mov
mov
sbb
aas
ror
jnp
dec
loopne
fldl
repz
cmp
popf
sub
in
loopne
lock
hlt
xchg
jae
fistps
daa
dec
imul
shlb
popf
adc
aam
sbb
sbb
pop
sub
cli
movsl
jnp
cmpsb
add
mov
ss
addr16
mov
push
push
pop
lret
ds
rclb
inc
imul
add
pop
mov
push
in
and
jae
shrb
add
xor
fwait
push
xor
push
adc
cmp
mov
jb
adc
sub
pop
jle
pushl
xchg
mov
jo
shlb
loopne
out
cmpl
out
xchg
adc
jge
xor
xchg
lahf
hlt
lea
repz
scas
ja
je
imul
xchg
stos
inc
insl
jmp
cmp
xchg
sub
sbb
add
cmp
int
push
and
sbb
cmp
mov
movsl
rol
pop
inc
je
xor
mov
stos
es
fmuls
mulb
add
jae
scas
jge
adcb
test
push
xchg
popf
cmc
lea
push
sbb
mov
adc
test
imul
imul
and
fs
and
imul
adc
jnp
cmpb
xchg
sub
add
push
negl
ja
sbb
push
xorl
jmp
loopne
mov
add
inc
jno
jle
fwait
lret
imul
lret
pop
inc
mov
jb
fcmovb
les
pop
mov
roll
ret
adc
or
jns
loop
push
jb
push
gs
or
or
nop
sub
mov
stos
les
mov
data16
shll
rcl
xor
les
push
lods
dec
aas
pusha
sbb
inc
sub
dec
pop
xor
xor
lds
add
outsb
xlat
mov
mov
fldt
push
sbb
lahf
lods
inc
jno
les
in
mov
sbb
ljmp
jmp
push
repnz
or
sub
lea
push
jb
scas
inc
pop
lock
mov
jns
outsl
xchg
and
push
mov
out
mov
mov
je
xlat
rcrb
dec
aaa
pop
push
ret
or
shr
sbb
fdivl
lds
inc
or
sbb
mov
sub
fcomp
mov
add
mov
popf
dec
sarb
dec
cmp
push
inc
or
adc
jp
xor
xchg
mov
inc
cmc
daa
cmp
cld
mov
cs
mov
ss
push
movsb
nop
loop
testb
je
add
and
cld
xchg
icebp
inc
loope
jne
mov
addl
mov
xor
xor
push
insl
mov
sbb
shlb
push
mov
cmp
test
pop
hlt
out
shr
fisttpl
fwait
mov
out
push
bound
jae
push
dec
cwtl
cmp
mov
sbb
inc
pop
stos
mov
jae
cmp
inc
xor
xlat
mov
clc
jae
pop
push
mov
cmp
xchg
hlt
ja
mov
insb
lock
sub
nop
icebp
cmp
mov
bound
fdivrs
xor
jne
clc
shll
fstpl
gs
aam
subb
xor
dec
shlb
mov
add
pop
add
ss
jle
das
loope
add
add
cmp
popl
fxch
fmuls
cmpsl
loope
leave
push
sbb
loope
mov
inc
rorl
gs
fistl
fdivrs
arpl
pop
dec
out
xchg
pop
jecxz
test
movsl
sub
sub
xchg
jl
inc
idivl
movsb
inc
scas
mov
jno
movsl
cld
inc
fsubs
inc
pop
and
mov
pop
pop
and
pop
jns
imul
ret
xchg
mov
stos
outsb
shl
xchg
pop
or
jns
out
pushf
bound
add
add
jb
push
xchg
xchg
aas
arpl
out
int3
xchg
mov
pop
add
xchg
and
sbb
mov
int3
stos
sub
mov
imul
and
std
mov
and
mov
mov
cwtl
push
out
lds
outsl
push
ror
pop
xchg
dec
dec
clc
jp
sub
lret
xchg
pop
outsb
into
mov
out
mov
sub
orl
pop
mov
push
cmp
popf
sti
lds
dec
int
into
ficomps
mov
lret
std
stos
push
lock
jle
mov
insb
imul
ret
jo
mov
and
es
mov
fnsave
xchg
mov
push
cmp
mov
add
mov
inc
sti
in
push
fnstcw
int3
pop
fidivl
sarl
sbb
inc
lahf
ss
aaa
stos
ljmp
mov
jle
pop
loope
fistpll
dec
push
sub
in
pusha
inc
push
pop
imulb
inc
jge
ss
mov
inc
stos
mov
push
inc
pop
mov
mov
sahf
pop
and
sub
pop
shrb
aad
mov
dec
icebp
push
clc
lds
push
clc
push
xor
pop
adc
and
es
cmp
mov
ret
adc
push
in
cmp
imul
shll
lock
mov
pop
mov
dec
jge
and
loop
mov
pop
jg
mov
rcrb
sti
or
jp
bnd
nop
sub
or
lret
test
orl
cld
movsb
mov
sbb
fisttpl
add
pop
xor
test
je
sub
dec
cmp
or
sub
adc
push
inc
das
out
jg
push
loope
mov
and
sub
ret
shl
sub
arpl
cmp
mov
or
lret
xor
dec
pusha
mov
mov
push
fidivrs
sarl
xchg
xchg
adc
loopne
das
adc
push
pop
ljmp
aas
test
push
cmp
inc
inc
xchg
lcall
lock
jno
sub
in
xchg
push
outsb
iret
adc
dec
idiv
and
adcb
inc
add
lahf
mov
fbld
lret
sbb
ret
outsb
test
mov
xchg
outsb
mov
into
mov
fistl
rorl
jb
pushf
or
fs
mov
push
pop
iret
xor
pop
dec
push
jno
xchg
pop
out
mov
cmp
stos
lcall
leave
sti
mov
leave
add
imul
test
cwtl
cmp
test
arpl
push
push
adc
rcr
lods
mov
jns
push
xchg
fcmovnu
std
cmpsl
nop
cmp
mov
mov
pop
lods
addb
sub
jg
dec
pop
enter
sbb
mov
loopne
stos
sub
jmp
fdivl
cmp
and
cmp
fistps
xor
mov
aam
adc
stos
int3
subb
mov
sub
scas
mov
inc
inc
jl
in
fnstenv
lock
jb
cltd
lds
scas
inc
sbb
iret
in
aas
je
lds
mov
xchg
jmp
mov
js
loope
or
cs
mov
xlat
jge
dec
add
pop
mov
push
xchg
lahf
push
idiv
jmp
mov
cmpsb
pop
and
fildl
and
sbb
in
pop
sub
mov
push
sarb
xor
jmp
cld
fisttpl
ret
enter
testl
lret
lods
mov
out
cmp
jecxz
es
fld
sub
or
cmpsb
les
mov
push
repz
pop
or
data16
inc
cwtl
mov
cltd
std
cld
mov
or
sub
jmp
or
mov
fidivrs
popa
xchg
jno
cld
cli
cmpsb
cmp
leave
sub
dec
addps
and
xor
sub
jb
adc
fdivs
mov
lahf
outsl
push
pop
in
sub
nop
fwait
int3
hlt
inc
pop
es
and
jne
or
aas
xchg
push
jno
stos
mov
fwait
ss
pop
jnp
jae
test
adc
icebp
cmp
and
fsubr
cmp
xchg
inc
leave
shll
xchg
sti
inc
xchg
jne,pn
andb
jbe
mov
inc
shl
jp
or
add
aas
cmp
mov
cmpsl
adc
pop
lahf
pop
lea
mov
dec
jecxz
adc
aas
mov
mov
clc
push
scas
xor
add
mov
or
cmp
jmp
or
cmpsl
push
mov
dec
aam
lea
jp
mov
mov
push
in
out
daa
hlt
dec
arpl
bnd
jno
xor
hlt
outsl
xor
pop
lret
ds
ds
je
pop
fiadds
sub
std
dec
inc
adcl
leave
xchg
or
jmp
enter
cld
out
sub
and
sbbl
inc
out
ja
jnp
fisttps
ja
sub
sub
dec
push
xor
stos
daa
mov
xor
add
cli
popa
and
sbb
add
shll
shrb
scas
lds
subl
sahf
rcrl
hlt
dec
mov
adc
mov
push
mov
adc
les
push
mov
mov
mov
sub
es
add
mov
pop
inc
popf
xor
adcb
mov
jmp
into
fadd
or
pop
push
adc
cli
xlat
mov
inc
loopne
cmp
repz
movsb
scas
and
add
ss
rorl
adcb
negl
fs
fcoms
ss
mov
jb
repnz
cmp
and
ret
ss
cmp
and
push
in
ret
outsb
sti
fwait
inc
push
add
shrl
mulb
mov
aad
adc
push
aaa
inc
ret
pop
jb
mov
pusha
std
gs
xlat
xchg
and
fidivl
out
jae
std
movsb
inc
loope
pushf
test
and
pop
call
aas
test
add
fcoms
cmp
lods
insl
repnz
loop
pop
add
fisttpll
invd
je
ds
mov
cli
push
into
faddl
das
popa
xor
sub
mov
add
inc
stc
das
pushf
clc
inc
mov
das
pop
cwtl
mov
daa
xor
pop
test
jb
mull
mov
andb
mov
adc
xor
orl
xor
das
cmp
pop
hlt
push
sub
notb
dec
add
jg
add
out
mov
dec
divl
add
repnz
inc
lods
imul
test
mov
xlat
insl
push
dec
mov
bound
xchg
adc
popf
negl
xchg
or
mov
cmpsb
in
mov
pop
sahf
push
mov
imul
jo
add
rcl
ret
lret
daa
js
push
ljmp
mov
inc
shl
in
push
lahf
xor
cmc
mov
fistpll
ljmp
movsl
mov
push
and
xchg
hlt
dec
and
rcr
clc
icebp
mov
rcrl
call
into
xor
pop
ret
dec
loopne
mov
addr16
out
es
push
testb
jmp
popa
or
adc
mov
and
mov
arpl
mov
data16
imul
popa
cmpl
xchg
cld
jnp
ror
xor
mov
inc
push
int
mov
or
ss
xchg
repz
call
fldl
into
rorl
jns
loop
inc
in
in
add
mov
ret
in
sub
xor
mov
in
push
mov
iret
scas
js
push
jnp
scas
and
pop
fiadds
enter
and
fwait
movsl
xorb
mov
fnsave
xchg
imul
adc
lds
fdivrl
testb
sti
sbb
imul
jecxz
inc
out
fildl
inc
neg
std
mov
stos
pop
in
sub
push
int
cmp
insb
lcall
shll
mov
inc
or
je
push
xor
repz
fistps
mov
test
sub
mov
imul
repnz
sbb
test
adc
test
inc
fdivr
or
xor
or
pop
push
or
mov
or
add
sbb
dec
push
xchg
mov
pop
ja
xchg
sti
cmp
leave
xchg
sub
xchg
fdivs
mov
pop
idivb
js
iret
es
cli
jge
inc
jmp
sub
push
test
sbb
sarl
pop
fwait
enter
aaa
fidivrs
daa
fidivl
dec
lds
pusha
insl
cmpsl
les
fimull
shll
add
mov
lcall
shl
das
and
loopne
aas
jp
mov
stos
adc
jle
xchg
or
dec
in
sbb
xchg
je
add
add
cmp
test
outsl
dec
scas
jbe
fsubp
pop
lret
loope
leave
fdivl
imul
mov
inc
nop
pop
je
xor
stc
inc
xchg
movb
xor
jne
jne
or
es
xchg
pop
sub
test
adc
cmp
push
lods
test
pop
js
decl
scas
test
xorl
sub
sbb
fucomi
adc
aas
sti
lds
lds
popf
dec
jecxz
xchg
sahf
mov
lock
xor
push
push
push
add
fidivs
scas
shll
xor
decb
clc
jl
or
sub
push
rorb
add
popa
dec
imul
data16
enter
dec
test
lret
jns
or
adc
mov
ret
pusha
mov
pop
in
movsb
je
mov
xchg
sub
dec
outsl
add
cli
mov
add
mov
adc
add
pop
and
mov
ja
push
lds
lret
aad
sbb
add
fdivrs
pop
and
stos
or
sub
into
xor
mov
movsb
or
test
sbb
mov
stos
mov
inc
stos
mov
neg
fsubrs
jp
cmp
leave
push
add
dec
mov
shr
je
lret
movsl
cmpps
mov
mov
xchg
mov
ret
or
jp
and
fcmovu
mov
je
or
push
arpl
ficompl
cmp
in
stos
sub
icebp
mov
mov
jno
add
sub
mov
lock
inc
shll
mul
pop
sub
int3
xchg
add
push
aad
mov
and
subl
jmp
shr
cmp
js
xor
insl
adc
cmc
testb
push
or
cmpsb
jecxz
xchg
xlat
sub
stc
ja
mov
sub
mov
add
dec
rcrl
xchg
mov
inc
repz
imul
int3
sbb
int3
in
fisubrs
jmp
cmp
lcall
push
mov
push
rclb
mov
sti
popa
fdiv
ja
into
sub
popf
mov
jo
mov
idivl
pushl
pop
ja
int
fsubrp
cmp
mov
cmp
adc
cmp
fldt
mov
dec
mov
mov
xchg
add
pop
mov
mov
cmp
dec
add
es
mov
add
arpl
andl
mov
xor
or
jmp
mov
ror
push
hlt
xor
add
xor
scas
sbb
scas
mov
lea
inc
or
xor
mov
mov
mov
lret
push
inc
jge
into
in
mov
jne
dec
sbb
testb
or
mov
adc
mov
int3
arpl
sub
adc
dec
ljmp
jp
fistpl
mov
shl
es
xor
cmc
insl
popf
test
and
lret
clc
xor
shlb
push
loopne
lea
jne
pushl
sbb
jae
add
push
out
iret
cmpsb
pushf
addr16
fwait
sbb
mov
adc
add
popf
jno,pn
sbb
jmp
xchg
pop
jne
jo
jg
ret
pop
rolb
inc
cmp
xchg
rolb
mov
outsl
daa
lods
xor
sub
xor
mov
mov
hlt
mov
mov
je
es
xchg
jg
mov
mov
cmpsb
lock
pop
inc
out
push
in
mov
sub
nop
adc
in
arpl
cltd
and
cmp
bound
mov
adc
std
ja
xlat
repz
ret
xor
inc
xchg
stos
imulb
add
daa
test
inc
push
mov
fsubr
xchg
add
push
js
lock
adcl
imull
xchg
jae,pn
clc
mov
sub
mov
subb
imul
jne
scas
daa
inc
pop
jmp
jae
cmp
ret
cld
dec
rcl
pop
test
pop
pop
addr16
mov
jle
cmc
sbb
fdivrs
jo
jle
adc
or
inc
jg
xchg
out
lods
and
lret
jge
inc
push
cmp
pop
leave
ss
pop
jecxz
push
and
enter
dec
mov
loopne
push
xor
in
ljmp
mov
int
sbb
into
jle
repz
arpl
jp
cmp
movlps
mov
scas
lea
in
enter
nop
scas
mov
adc
xor
cmpsl
daa
xor
mov
inc
fimuls
inc
cld
push
mov
aam
fdivrl
mov
inc
mov
scas
mov
xor
dec
mov
cli
in
adc
add
stos
clc
adc
ds
jle
out
mov
push
mov
push
sub
stc
pop
outsl
push
cmp
loop
push
aaa
add
and
lods
and
mov
cmp
loopne
push
cmp
jle
jecxz
adc
mov
jmp
imul
fadds
mov
sub
push
add
orb
and
lret
ret
addr16
sbb
pop
lcall
cmp
pushf
je
shlb
inc
fdivp
std
and
lret
or
into
stc
clc
mov
aam
xchg
sbbl
bound
insl
fstp
add
mov
sahf
outsl
sahf
shl
mov
mov
adc
cmpsl
test
cs
dec
push
inc
sti
pop
loope
insb
push
repz
xor
add
xchg
mov
ljmp
lods
aaa
adc
adc
add
into
lods
cwtl
pop
cmp
cmpsl
push
push
fsubs
fxch
jnp
jecxz
mov
ror
mov
in
jmp
in
js
jecxz
mov
test
and
sti
push
pop
out
dec
xchg
icebp
mov
test
push
xchg
test
dec
push
outsb
xchg
push
xchg
out
add
nop
das
and
push
cmc
xchg
in
je
xchg
mov
mov
dec
cld
ret
rorl
xlat
popf
sbb
mov
notl
push
daa
jle
jl
insl
sbb
inc
or
xchg
mov
in
ljmp
mov
cmp
add
out
xchg
insl
xchg
hlt
jbe
mov
or
sub
mov
test
pusha
ret
dec
test
pop
sarb
bound
xor
hlt
and
scas
xor
inc
jnp
shrl
dec
leave
cmpsl
sbb
lock
xchg
mov
js
mov
fstl
scas
pop
lret
jg
jae
mov
xchg
push
cld
arpl
sar
adc
mov
lcall
mov
lcall
mov
mov
and
mov
outsb
jns
sbb
jbe
cmp
mov
jecxz
pusha
movsb
inc
dec
loope
xor
jmp
sbb
and
fwait
jne
sarl
loop
fnstsw
mov
aad
in
loopne
pop
les
mov
shlb
mov
inc
mov
icebp
jno
add
adc
rol
pop
or
orl
jo
jle
jecxz
and
push
lods
stos
inc
pop
adc
lret
decb
movsb
leave
mov
lods
dec
sub
call
jae
and
pushf
lods
push
imul
hlt
xor
outsb
inc
out
jbe
add
adc
add
rcrb
lret
xchg
fstpl
jl
fwait
and
push
cld
xchg
test
in
cmpsl
sbb
push
insb
cmp
pop
xor
out
bound
jmp
and
ss
push
imul
std
and
cs
int
test
iret
mov
push
push
mov
jmp
jnp
mov
int
mov
je
push
negl
mov
and
stos
fidivl
lock
mov
addr16
out
cmpsl
pop
jmp
mov
mov
lea
test
adc
or
ss
notb
call
pusha
ja
in
les
dec
inc
cli
inc
mov
cs
jns
xchg
pop
dec
movsb
add
mov
cltd
mov
in
test
jnp
push
leave
jnp
out
les
adcl
and
dec
dec
sahf
icebp
in
and
lret
dec
stc
cmp
hlt
daa
cmp
xchg
xchg
pop
pop
mov
and
mov
mov
pause
iret
pop
setp
sbb
inc
lea
cmc
outsb
std
push
pop
test
push
cmp
mov
clc
outsb
adc
sub
inc
cmp
inc
loope
mov
cmp
enter
jmp
mov
or
stos
adc
or
insl
lods
dec
out
mov
outsb
mov
negb
pop
aam
mov
lcall
jne
test
mov
and
jle
push
out
push
lret
cmp
pop
aam
jmp
sub
shrl
out
or
xor
pop
xor
push
ficoms
mov
lods
bound
ss
xchg
enter
shlb
test
in
xchg
mov
xchg
mov
gs
loope,pt
add
xchg
in
xchg
add
jecxz
fnstcw
push
mov
xor
inc
stos
xchg
add
mov
jne
xorl
loope
ljmp
ds
mov
dec
pop
hlt
cmpsb
pop
push
ret
cld
inc
outsl
mov
sahf
and
bound
shll
pop
xchg
insl
mov
daa
daa
add
mov
icebp
jge
jae
xchg
cmp
aad
outsl
roll
insb
or
xor
pop
xor
jp
adc
das
xchg
test
mov
cmp
rol
mov
ret
and
jmp
shrb
push
sbbb
loope
xor
mov
jns
jmp
sbb
push
into
imul
add
fsubl
inc
push
mov
push
arpl
loopne
arpl
mov
aas
add
les
test
in
test
loope
xchg
sbb
sbb
mov
aad
pusha
or
add
cmp
mov
leave
pop
sub
fs
pop
cmp
ds
shll
pusha
sarl
es
fst
aam
sub
shll
pop
adc
sub
out
hlt
out
sti
dec
add
test
push
cli
stos
loop
int
in
test
add
js
cmpsb
mov
or
negb
cmp
mov
mov
xchg
lret
pop
lods
cld
adc
xchg
dec
frstor
ret
inc
fwait
jmp
push
fwait
mov
mov
rol
imul
cltd
jg
cs
movsb
ja
out
lret
fiaddl
xchg
dec
or
scas
enter
lods
out
sbb
lcall
lds
add
or
lret
fisubrs
icebp
xchg
scas
cmp
pop
push
and
add
cmp
jne
fsts
mov
dec
stos
outsb
sahf
fsubrl
ja
popa
pop
mov
cmpsl
ret
sti
repz
mov
cmp
jp
lret
stos
inc
add
mov
andb
push
jle
mov
jp
lds
cmpl
test
or
xchg
dec
mov
sub
or
addr16
push
push
imul
jo
cmovs
mov
cld
mov
and
mov
fiaddl
mov
cmovo
ja
jne
jb
lahf
mov
lret
popf
and
rep
push
popa
clc
dec
nop
mov
jno
cmc
out
popa
rcll
jmp
pop
cld
sqrtps
push
jb
pop
jnp
pop
xchg
lds
xchg
js
dec
test
jmp
test
test
cmpsl
push
rcr
sbb
sub
cmp
fs
adc
sahf
cwtl
xor
sbb
and
dec
sbb
add
push
fdiv
add
sbb
in
lods
pop
daa
mov
fnsave
lods
frstor
mov
sub
mov
cltd
push
hlt
and
sbb
mov
push
xlat
cmp
pop
jbe
rorl
cmpsb
cmp
sbb
mov
sbb
push
sub
mov
ds
cs
test
xor
xchg
inc
mov
xchg
aam
int3
or
pop
dec
add
sub
fidivl
fwait
mov
lret
jb
and
in
daa
xchg
arpl
cmc
mov
xchg
adc
dec
mov
pop
jno
xchg
popa
push
xchg
in
aad
xchg
mov
push
mov
sete
xor
mov
cmp
fwait
push
pop
cmc
sbb
xor
xchg
pop
add
sub
jae
xor
pop
out
pop
lret
sahf
jb
sub
sbb
addr16
je
xor
daa
enter
popa
sbb
mov
sahf
test
cmpl
push
test
hlt
pop
insb
xlat
jo
xchg
jp
out
push
xchg
fwait
pop
cmp
bound
cmpsb
xchg
repnz
subl
push
je
in
add
out
push
jae
sub
cld
fs
sub
jnp
lods
lods
xor
lods
cmp
clc
xor
push
fs
jle
sbb
lcall
lds
pop
lods
add
ret
icebp
rcl
jg
pushf
mov
jecxz
fists
mov
jae
shlb
xor
pop
or
mov
push
aad
dec
push
call
insl
push
xchg
inc
popa
enter
cmp
push
aad
imul
cmp
mov
pop
xor
and
push
popf
clc
mov
stc
sub
adc
ss
insb
scas
andb
and
mov
ret
mov
sub
std
lahf
push
in
sbb
dec
popa
xor
jmp
inc
out
xor
xchg
sub
mov
mov
dec
add
push
in
ja
add
push
mov
or
cmpsl
xchg
arpl
cmp
stos
in
aad
in
mov
sahf
nop
jnp
lcall
cmpsl
mov
fs
ds
jae
mov
imul
insb
pop
call
cmp
pushf
je
pop
popa
or
scas
push
loop
cwtl
sbb
leave
xchg
stos
ds
push
test
call
mov
ja
ret
adc
jecxz
test
rcrw
insb
jle
lcall
movaps
pushf
cmp
push
mov
push
and
inc
enter
mov
ret
cli
mov
mov
adc
sti
jge
adc
icebp
pop
lods
mov
dec
cwtl
int
insb
xchg
fistpl
filds
mov
in
mov
sub
add
daa
mov
data16
mov
jp
int3
sub
mov
int
test
mov
cmp
jmp
mov
sub
push
pop
inc
ds
xchg
fnstsw
adc
xchg
nop
xchg
mov
jne
xor
pop
insl
mov
add
or
daa
sbb
out
mov
out
mov
cmpl
data16
lds
jecxz
pop
nop
pop
mov
pmulhuw
idiv
xor
xchg
or
fnstcw
push
lahf
jb
lds
push
mov
sub
lret
dec
dec
call
push
hlt
ss
xchg
inc
lret
and
ret
jp
insl
jnp
adc
inc
mov
insl
jg
lods
mov
push
pop
push
loopne
es
arpl
adc
les
ret
dec
pop
ds
cmpsb
ds
aaa
and
stc
xor
mov
ds
cwtl
ljmp
icebp
and
add
cwtl
mov
andps
loop
and
jge
and
jl
bound
lret
adc
in
xchg
divb
mov
cmp
in
inc
adcl
add
sbb
xchg
mov
jmp
cmp
lock
out
cvtpi2ps
sbb
mov
scas
in
sbb
jae
xchg
jecxz
stos
add
sbb
sbb
loop
push
in
jns
cmp
out
inc
test
call
pusha
cld
insl
add
xchg
popf
out
iret
idiv
imul
mov
add
hlt
dec
push
daa
jle
adc
sbb
sbb
cli
imull
mov
arpl
out
sub
and
lea
andb
movsl
xchg
pop
or
iret
in
mov
ret
xchg
and
push
bound
mov
mov
mov
push
pop
cli
xchg
shll
push
in
mov
rclb
add
cmp
aam
ds
loopne
jne
xor
aam
cld
or
inc
xchg
xchg
sub
test
mov
xchg
sbbb
sub
testb
dec
adc
sub
sbb
sub
add
insl
and
pop
push
and
orb
dec
push
js
dec
lock
jno
imul
cmp
out
adc
and
frstor
in
std
xacquire
mov
jecxz
mov
lret
pop
or
push
dec
xchg
pop
inc
lods
ljmp
pushf
push
mov
sbb
movsl
nop
daa
adc
ss
enter
or
loop
dec
ret
push
sub
sub
push
mov
fstps
movsl
add
xchg
inc
shrl
stos
ret
mov
dec
add
outsb
lahf
xor
sbb
cwtl
fwait
jbe
ja
or
cld
push
call
mov
cmp
sbbl
lahf
ss
jge
iret
or
xlat
pop
aam
adc
pop
jl
or
gs
addr16
push
loope
xchg
iret
mov
daa
ljmp
sub
lea
lods
std
fwait
jmp
jne
mov
inc
inc
adc
pop
fwait
sbb
cmc
fmuls
outsb
jns
loope
rorb
inc
pop
scas
or
push
lret
lret
inc
dec
mov
fdivl
dec
and
jp
inc
fwait
js
add
mov
leave
jmp
mov
xlat
mov
test
movsb
push
and
jb
fiadds
adc
fisubs
lods
fnsave
mov
ljmp
ss
xchg
jns
std
adc
mov
or
mov
test
mov
push
xor
sub
das
ret
dec
cmp
scas
fiadds
mov
mov
call
leave
jno,pt
mov
mov
inc
push
or
aad
push
out
movsl
movsl
xlat
leave
jge
rcll
sahf
push
cmp
push
add
in
mov
out
fidivrs
dec
cmp
cmp
cmpsl
jecxz
test
cmp
adc
pop
or
lock
cmpsb
rorb
xchg
fucomi
fwait
mov
or
outsl
adc
jle
lods
add
lods
mov
scas
dec
inc
js
pop
push
cld
insb
mov
icebp
dec
jmp
sub
setb
mul
mov
pop
movsl
push
in
adc
movsl
mov
cld
lcall
in
dec
outsb
pop
ret
jecxz
jb
and
mov
cmp
jb
dec
dec
lcall
imul
imul
pop
sbb
xchg
in
xor
stc
jmp
cli
sbb
inc
adc
push
inc
addr16
push
pavgb
xor
xchg
and
inc
enter
pop
pop
jno
add
sti
xchg
and
pop
mov
int3
and
mov
xor
add
les
mov
jmp
adc
pop
in
push
cltd
mov
sbb
sti
daa
rclb
xchg
xchg
mov
xlat
test
sahf
lods
sub
sub
fnstsw
push
dec
lea
jnp
ss
lahf
stos
bound
xor
nop
mov
sbb
les
push
scas
inc
hlt
mov
xlat
mov
jmp
test
movsb
lret
cld
outsl
rorl
pop
aam
sub
mull
dec
in
jg
push
mov
xchg
cs
xchg
and
cs
fiaddl
es
mov
jge
fcompl
fwait
add
inc
sbb
ficomps
xchg
jecxz
xor
jl
inc
pusha
stos
js
xchg
mov
adc
sub
ja
cmp
sbb
outsb
test
subb
mov
push
shll
jb
popa
sbb
sbb
pop
hlt
push
xor
sub
ljmp
inc
sub
cmp
mov
sub
or
jne
mov
jae
insl
into
or
ljmp
push
in
jae
sbbb
mov
mov
mov
out
sarl
int
adc
out
lods
mov
add
or
les
sbbl
xor
lds
pusha
jo
jmp
fcmovnbe
test
adc
mov
xchg
or
xchg
ds
xchg
add
add
mov
rol
jmp
repnz
ss
mov
inc
pop
loope
insl
adc
stos
push
loopne
jo
dec
xlat
xchg
ret
cmp
daa
sbb
pop
or
pop
xchg
xor
dec
xor
lods
ljmp
es
pop
addr16
pusha
cltd
movsb
mov
lock
and
ljmp
popf
fistl
and
in
adc
test
ja
loopne
mov
ljmp
nop
daa
outsl
mov
pop
xor
mov
in
sbb
arpl
in
cmp
jecxz
testb
dec
pop
mov
sahf
lock
dec
shll
out
cmc
mov
les
stos
adcl
push
movsl
xor
mov
stc
adc
sub
xchg
cmp
cltd
std
xor
push
outsl
adc
int
ja
sub
or
shl
mov
inc
add
and
pop
cmp
xor
popa
push
mov
aas
ret
cmp
push
mov
jae
out
addr16
jecxz
pusha
sub
leave
and
xchg
cmpl
test
stos
loop
mov
mov
imul
adc
and
repz
in
adc
sub
dec
cmp
mov
mov
jne
call
mov
mov
adc
xchg
dec
dec
push
cwtl
mov
or
push
push
inc
bound
inc
fldcw
insb
mov
sbb
jl
cmp
push
dec
sub
sti
cmp
push
inc
cmp
or
addr16
lods
push
dec
mov
hlt
sbb
and
inc
cmc
daa
adc
fildll
cwtl
shlb
call
sbb
pop
stos
pop
ljmp
js
es
or
xchg
dec
lods
in
cltd
lcall
inc
cmc
mov
lret
jne
es
sbb
je
arpl
sbb
push
lcall
into
push
xor
outsl
or
xor
stc
imul
jge
outsl
mov
sbb
pop
sub
push
cmc
cli
pop
or
push
jmp
sub
mulb
mov
cltd
add
sub
stos
and
mov
scas
out
xchg
sub
or
sub
orl
jbe
out
fisttpll
add
pop
daa
mov
mov
in
pop
fcom
and
mov
add
push
test
lcall
les
and
cwtl
addr16
repnz
std
jo
add
arpl
hlt
sahf
xor
and
mov
adc
fcomps
iret
adc
repz
ljmp
dec
pop
xor
fdivrp
xchg
outsl
incb
mov
dec
pop
jae
sti
aaa
into
xor
in
repnz
test
lea
scas
ret
xlat
out
pop
dec
cmp
mov
in
je
bound
push
lods
inc
imul
mov
xlat
repnz
xchg
push
insl
dec
mov
xchg
aad
in
sarb
dec
adc
cmpsl
and
xchg
bnd
fwait
push
clc
cwtl
mov
aaa
and
daa
push
jne
js
sti
push
push
jne
iret
mov
bound
in
xor
bound
pusha
xchg
leave
iret
aam
sbb
mov
push
jg
insl
add
mov
inc
sub
or
scas
shrb
lea
pop
loop
mov
fstl
sbb
inc
jp
push
and
push
pop
inc
movsl
add
mov
dec
push
xor
jle
push
adc
dec
push
adc
fbld
dec
cmp
mov
mov
pushf
stc
clc
jmp
or
mov
fdivrl
addr16
inc
pop
jae
aad
lret
aam
imul
sub
addb
popa
mov
gs
pushf
pop
push
pushf
inc
xchg
or
sub
cmp
out
xchg
xorb
jo
pop
add
pop
dec
imul
xor
cwtl
addr16
xorl
les
subb
lea
test
inc
xor
out
dec
jmp
int
pop
and
lea
mov
out
push
cmp
subl
push
or
int3
lods
dec
push
mov
in
nopl
jg
push
pushf
cmp
pop
jge
xchg
lock
or
pop
jns
push
insb
pop
fisubs
clc
dec
xor
jb
mov
mov
stos
in
xchg
rcr
cmc
cltd
jb
push
lcall
mov
dec
pop
lock
repz
into
inc
adc
sub
or
pushf
sbb
jg
xchg
mov
push
xchg
xor
scas
shl
stc
mov
pop
cli
ret
in
int
sub
mov
std
xor
push
inc
jecxz
vpcmov
lcall
popa
dec
je
aad
pop
aad
ljmp
inc
lret
loop
leave
pop
daa
mov
pop
mov
repnz
add
ret
add
subb
pop
dec
xchg
dec
fwait
in
sbb
pushl
pop
cmc
inc
mov
and
out
inc
mull
inc
push
mov
jb
ja
sub
sahf
fists
jne
or
mov
cmpsb
ret
jo
lds
inc
jb
push
in
jb
int3
xor
ja
mov
xchg
push
enter
icebp
sub
xchg
add
in
inc
xchg
mov
jne
mov
push
push
sbb
lds
lcall
xchg
pop
jo
mov
sbb
clc
out
push
ss
leave
xor
sub
inc
aad
les
adc
cmovb
cmpsb
out
xchg
sub
xchg
mov
mov
adc
mov
std
pop
repz
mov
pop
or
stos
pop
rcr
mov
add
jno
shl
cltd
sub
adc
pushf
mov
jle
mov
imull
scas
pop
mov
mov
pusha
enter
or
mov
mov
or
iret
or
pop
daa
loope
pop
jnp
add
mov
mov
pushf
enter
cmp
into
fidivl
les
gs
add
test
lret
cmp
mov
pop
sub
pop
cmp
dec
bnd
dec
pop
cmp
imul
nop
sub
sbb
outsb
pop
push
push
and
mov
das
ds
fsts
or
sti
loop
cmp
push
js
sahf
lods
sbb
or
rorl
adc
sub
xchg
pop
das
pop
subb
jo
dec
push
inc
push
ljmp
push
inc
pop
mov
lret
popa
repnz
movsb
inc
sub
jmp
mov
fisttpll
and
test
std
cmpsl
inc
cwtl
das
xor
dec
cltd
or
cli
sbb
xchg
movsl
inc
cwtl
mov
pop
pop
mov
xor
sub
pop
adc
mov
lcall
decl
mov
lahf
push
pushf
mov
popf
es
dec
repnz
sbb
cltd
jl
aad
jecxz
cmp
mov
sti
aad
dec
xor
cmpsl
xchg
add
and
cwtl
push
fisubrs
out
xchg
popf
add
out
xchg
inc
pop
push
stc
inc
xchg
fimuls
popa
dec
jl
dec
subl
leave
pusha
push
fnstenv
sbb
inc
cmpsl
sbb
pop
mov
inc
outsb
popa
fwait
jbe
inc
pop
jns
dec
push
aaa
lea
xchg
mov
push
mov
lods
out
repz
je
inc
sub
add
push
lret
and
and
test
sbb
fnstenv
mov
dec
adc
test
es
int3
pop
push
das
cmp
inc
mov
push
jmp
pop
pop
dec
adc
add
rorb
add
into
test
cld
in
movsb
outsb
inc
fisubrs
mov
sahf
sub
lret
mov
cmp
sbb
dec
test
js
hlt
test
jb
setb
xchg
mov
sarl
dec
outsb
dec
cmp
aad
mov
jns
push
aam
rcrl
enter
hlt
xchg
push
imul
fisubl
sub
mov
cld
mov
pop
mov
js
sub
inc
mov
push
cmp
push
jl
jno
adc
in
and
pop
loopne
adc
sti
jle
dec
dec
cmovnp
repnz
mov
cmp
pop
mov
adc
or
out
scas
lds
aas
dec
push
out
cmp
mov
je
mov
inc
push
add
sub
leave
sbb
mov
inc
and
jmp
rcr
mov
xor
fistpl
push
jnp
push
outsb
cmp
pop
dec
push
stc
lret
sbb
int
out
imul
stos
push
or
into
push
cwtl
les
mov
mov
sti
lods
or
push
in
pop
pand
imul
xor
xor
nop
fs
int
bound
xchg
xchg
cmp
shll
push
repz
jne
stc
cmp
adc
push
jle
push
inc
cli
push
icebp
or
das
jmp
or
xchg
lds
int3
das
jg
cmc
cwtl
js
mov
mov
jnp
ror
imul
cmpsb
int
mov
jecxz
lcall
pop
enter
fdivrs
xchg
xchg
enter
push
mov
stos
push
fldenv
sbb
adc
ja
les
fwait
cld
cmpsb
cmpsl
xchg
xor
jp
cmpl
jbe
xchg
sbb
iret
aaa
shr
jnp
sti
inc
pop
fcoml
sbbl
jle
and
dec
decb
shl
and
pop
mov
out
in
xorb
adc
andb
push
sub
xchg
fucomi
out
cmc
jns
add
xor
mov
sbbb
roll
gs
cmpl
xchg
xchg
inc
push
dec
arpl
cli
jae
loop
stos
mov
push
mov
adc
loopne
cmp
cmp
mov
add
cmpsl
lret
data16
imul
lret
je
test
push
int
mov
adcl
jns
lret
sti
xor
pop
push
aaa
sub
fwait
inc
dec
mov
out
pop
or
or
int
xchg
popl
mov
dec
jg
cmp
in
pop
popf
dec
scas
add
test
insl
add
mov
sub
push
cli
les
jns
mov
mov
or
icebp
leave
sbb
inc
add
les
rol
fwait
mov
sub
fsts
cmpsl
xorl
xchg
popf
jle
into
repnz
pop
imul
das
pop
add
jp
dec
test
mov
inc
aad
mov
popf
mov
int3
cmc
les
push
movaps
push
push
push
adc
fs
insl
jmp
dec
fsubrl
popf
xor
mov
scas
jno
add
xchg
xlat
in
sbb
cmp
addb
jno
out
test
xchg
xchg
mov
or
outsb
clc
jle
sub
and
in
es
push
ret
add
jnp
mov
stc
xor
out
gs
cmpsl
pop
scas
js
and
jbe
das
cmpsl
pop
cmpsb
and
shlb
mov
xchg
outsb
jg
xchg
aas
xor
pop
call
cmp
ljmp
sub
leave
cmc
push
sbb
dec
jae
jmp
pop
cmp
lea
push
movsb
lret
pop
mov
sbb
mov
mulb
shrl
push
call
xchg
push
inc
xlat
ret
rcrl
mov
or
sti
adc
loopne
and
jns
mov
push
pop
fildll
or
mov
es
test
stos
lret
arpl
in
fbstp
dec
mov
dec
subl
cpuid
and
cmp
leave
jl
push
cltd
jae
movsb
mov
hlt
lahf
cmc
push
adc
cltd
std
push
dec
add
repz
pop
lahf
lds
shlb
rcrl
loop
fldcw
gs
fnsave
cli
iret
mov
fsubrs
xchg
xchg
sub
lds
cmp
add
dec
cli
pop
lret
pop
loopne
jae
test
mov
dec
cmp
movsl
lret
xchg
popa
mov
sub
out
xchg
add
sbb
jp
cmp
test
lods
lcall
fcomps
mov
test
pop
pusha
idivl
jne
pusha
sub
xor
cmpb
outsb
sub
inc
ret
pushf
test
cmp
jp
inc
loopne
ds
cmpsb
cmp
cmp
insl
mov
mov
push
push
into
outsb
sub
out
push
ret
int3
push
xor
scas
shrl
notl
inc
mov
sti
xor
sbb
mov
pop
sub
mov
xor
dec
dec
push
jbe
mov
fistl
inc
adc
pop
cmpsb
cmpsl
push
mov
mov
inc
in
cli
enter
push
cmp
pop
gs
rclb
cltd
jae
andl
lods
ffree
pop
xor
mov
sub
inc
xlat
pop
cmp
iret
dec
pop
cmp
mov
pusha
adc
inc
mov
cmp
xor
aaa
iret
push
lahf
inc
push
xchg
pop
rolb
or
cs
or
mulb
mov
out
std
sub
pop
leave
lds
and
push
int
test
xchg
pop
test
dec
pop
aaa
lock
psubw
sbb
xor
xchg
push
mov
mov
clc
cmp
dec
loop
fnsave
xchg
test
jae
lret
xchg
stos
in
pop
out
jg
repz
outsb
clc
dec
enter
test
fwait
push
je
test
lret
call
out
mov
xor
and
scas
fmulp
insb
ljmp
jmp
insb
cwtl
mov
enter
push
xchg
in
dec
mov
dec
add
imul
mov
ret
test
cmp
mov
test
fistpl
add
rol
mov
adc
rolb
fisubs
cli
mov
and
jl
lcall
xor
fildll
xchg
test
sub
or
repnz
xor
xchg
cmp
jne
mov
pop
jmp
push
xor
mov
es
fldenv
mov
inc
cmp
mov
cmp
cmpsb
andb
lods
xor
mov
negb
xchg
movsl
jg
lret
xchg
add
push
adc
push
sahf
cmp
xchg
pop
fsubs
sbb
add
push
sub
jle
xor
jmp
ret
in
stos
mov
cmpsb
sub
movsl
lahf
jb
push
rclb
cs
addr16
cmc
mov
or
cmpsl
shl
pop
incl
mov
and
adc
fwait
xor
inc
fmulp
dec
jbe
xor
mov
popf
inc
or
and
mov
mov
fnstenv
push
leave
mov
cmpb
insb
mov
stos
mov
outsb
jp
push
jp
pop
cmc
mov
pop
jl
cli
pop
jge
xchg
sbb
jne
dec
sub
jnp
fsubl
rcrl
lds
xor
sub
enter
sbb
aas
cmp
jns
rol
sub
call
jb
jae
das
cmp
jle
stc
popf
sub
cs
rcrb
cwtl
mov
cmpsl
arpl
pop
test
sbb
mov
sub
xchg
xor
in
mov
cmpsb
adc
xchg
xrelease
fstpt
adc
mov
shrl
shr
sbb
jo
or
iret
into
pop
fdivp
or
mulb
or
std
bswap
cmp
in
je
xor
inc
sbb
aaa
mov
arpl
mov
mov
or
mov
sarb
add
fisttpl
test
xor
mov
push
insb
dec
mov
das
pop
cmp
mov
rorl
mov
shlb
xchg
add
and
into
ficoms
in
push
sub
adc
xor
bound
inc
out
sbb
or
test
dec
notb
or
jne
pop
pop
stc
ss
es
out
push
mov
mov
pop
mov
notb
fmuls
dec
gs
fstpl
je
outsl
jns
fisubrs
mov
lods
push
and
mov
test
fwait
mov
mov
pusha
mov
mov
mov
inc
or
ficomps
sahf
pop
es
fldenv
shrl
das
adc
leave
push
sbb
inc
cli
aas
outsb
arpl
xchg
daa
dec
pop
addr16
mov
mov
cltd
mov
push
and
ljmp
push
cmc
inc
fisubrl
mov
popa
leave
push
adc
enter
fsubl
mov
fucom
add
roll
nop
pusha
jl
scas
mov
testb
out
psubsw
mov
loope
xchg
dec
xlat
loopne
dec
lahf
clc
xchg
pop
into
push
test
lock
pop
outsb
xor
push
mov
push
shlb
mov
stos
std
arpl
fists
lods
outsl
inc
push
xchg
adc
aaa
xor
xchg
dec
dec
in
call
add
loop
dec
data16
out
test
adc
jne
or
jnp
adc
mov
dec
add
push
rcll
pop
mov
xor
aas
sub
sub
xor
out
flds
xor
jmp
adc
lret
pop
adc
sahf
push
aaa
mov
rorb
test
icebp
add
mov
xchg
xor
xor
jp
inc
and
pushf
sub
in
jle
jo
xchg
dec
ja
push
pushf
jno
inc
aaa
es
lods
inc
mov
in
test
sti
or
sub
rorl
adc
stc
adc
sbb
dec
xchg
push
sub
mov
inc
sbb
sbb
bound
rclb
mov
repnz
movsl
fs
inc
and
cmpsl
adcb
stos
add
mov
pop
outsl
loop
add
das
sub
dec
sub
dec
add
ss
aam
pop
dec
in
loop
addl
shll
lods
sbb
push
mov
adc
js
and
insl
push
inc
fs
imul
lock
data16
in
adc
mov
insb
ret
lahf
xor
int
scas
das
inc
mov
cmc
std
cmp
push
repnz
mov
xchg
insb
adc
cmp
push
xor
repz
sub
cld
xorps
push
adc
inc
push
or
sahf
imul
out
sar
adc
scas
and
mov
xchg
jmp
mov
es
fadds
popf
int
call
inc
lods
inc
roll
mov
xchg
lret
fs
scas
ror
popf
pusha
jae
ss
iret
pop
lret
pop
inc
dec
sbb
in
xchg
mov
add
mov
out
pusha
std
xchg
sbb
sbb
andl
jnp
les
popf
in
push
xchg
cmpsb
out
cmp
stos
fsts
dec
es
inc
cli
dec
push
xor
dec
xor
inc
cs
xchg
je
int3
in
and
lods
push
lods
mov
xor
enter
cwtl
lods
pop
adc
scas
jae
push
stc
int
adc
nop
xchg
add
mov
fistpll
cmp
les
xor
mov
mov
jns
push
test
insl
inc
add
aaa
mov
sub
cwtl
pop
lock
cmc
jp
sub
xchg
and
mov
rorb
xor
fsubl
test
lret
out
mov
dec
mov
jl
lret
movsb
es
decl
fnstcw
insb
mov
bnd
dec
cmp
dec
out
add
fcompl
cmpsl
dec
jg
jae
cmp
jg
jbe
add
enter
xchg
sbb
and
jae,pt
in
push
sbb
push
or
pop
sbb
shrl
cs
pop
pop
pop
pop
test
fld
xor
add
data16
push
dec
mov
loop
adc
frstor
adc
aad
int3
add
jo
pop
incb
mov
push
mov
ret
stc
arpl
daa
fwait
aas
imul
enter
out
mov
stc
sarb
shrb
pop
sbb
fisttpl
sarl
or
sbb
push
inc
mov
push
adc
pop
inc
insb
jae
les
mov
data16
sbb
jns
negl
sar
jp
push
pop
cmp
pop
adc
or
and
fstpt
aas
xchg
roll
jecxz
pusha
xchg
mov
insb
xchg
mov
adc
test
mov
iret
mov
outsl
push
jb
scas
notb
pop
or
daa
dec
dec
or
fisubs
outsl
dec
in
lret
scas
ret
jne,pn
rorb
xchg
mov
sti
xchg
cmpsb
lahf
icebp
xlat
dec
lret
sti
outsl
pop
cmc
fsubs
stos
cmp
pop
xor
mov
rclb
mov
jp
mov
cmp
jne
pop
repnz
adc
fsubrs
inc
repz
lods
imul
jge
adc
cmp
pop
cwtl
pop
stos
aam
mov
mov
jecxz
pop
cwtl
aam
inc
inc
decb
fwait
xchg
or
mov
push
std
xchg
iret
insb
adc
das
and
repnz
pop
jb
out
fs
ret
xchg
sub
push
sub
xchg
cli
jns
in
bnd
sbb
jbe
adc
ret
nopl
xor
insb
jmp
dec
xlat
sbb
es
mov
and
pop
ret
jnp
jb
lea
lods
pop
andl
mov
cmc
xor
arpl
dec
int3
fimuls
sahf
xor
aam
mov
xchg
hlt
out
inc
xchg
push
loopne
mov
jg
test
stos
mov
call
dec
pop
cmpsb
cmp
sbb
sbb
xchg
fimuls
push
cmp
shrb
pop
aam
jecxz
stos
sub
negb
inc
xor
rorb
mov
sbb
scas
lret
clc
test
mov
pop
cmpsl
sbb
push
pop
test
xchg
sub
mov
cld
adc
mov
out
sub
scas
sub
push
lods
lahf
call
add
out
jle
and
jo
mov
sub
jno
push
dec
mov
or
fsubrs
lea
dec
arpl
jl
mov
push
andb
popf
mov
xchg
push
insb
into
leave
cli
pop
mov
in
or
fwait
pop
es
adc
and
mov
lods
icebp
xchg
lods
nop
cmc
push
or
nop
mov
xchg
outsb
cltd
je
dec
mov
nop
add
mov
mov
jns
lods
xchg
mov
sbb
cmp
add
add
jo
jns
arpl
cmp
test
add
popf
test
mov
test
stos
jno
xlat
enter
mov
push
jmp
mov
push
cs
pop
dec
insl
add
dec
dec
pop
mov
mov
lds
lock
out
notb
sub
and
stos
add
jmp
dec
sarb
inc
insb
lahf
mov
dec
fwait
int
jmp
pop
shll
mov
jns
adc
sub
lods
push
in
les
adc
xchg
sbbl
pop
push
in
or
in
push
mov
outsb
push
lcall
out
stos
loope
into
mov
loope
les
mov
or
inc
pop
loop
xor
cmp
xchg
pop
pop
inc
adc
sbb
stc
xchg
xchg
inc
mov
lret
insb
xor
dec
sub
stos
test
fwait
into
inc
rcrb
jno
lds
adc
int
mov
dec
stc
sbb
add
push
lret
push
mov
mov
jg
sub
xlat
popa
lahf
cmp
std
pop
das
in
inc
add
add
sahf
sti
pop
and
shl
jnp
pop
push
jae
test
in
or
mov
jg
dec
lea
pop
daa
mov
pop
cmpsl
mov
fstps
jno
ja
inc
pusha
lods
push
inc
cli
ror
enter
inc
fisubl
lret
insl
xor
subb
jno
and
mov
outsl
popf
sub
icebp
inc
in
mov
add
adc
xchg
ja
fldt
or
cltd
test
adc
js
mov
dec
lcall
inc
adc
xlat
xor
pop
dec
fwait
scas
jp
push
daa
out
xchg
repnz
dec
mov
clc
dec
dec
ss
imul
clc
lahf
cwtl
mov
hlt
jge
call
or
loope
xlat
or
call
mov
into
out
pop
sbb
and
jp
sbb
inc
std
dec
repnz
out
je
fmull
jp
cmp
aam
in
fsubrs
adc
pop
sub
cmp
fisttpll
loopne
cmpsl
adc
pop
cs
stos
jns
inc
ret
xchg
mov
pop
and
inc
jmp
mov
pop
or
add
jg
xchg
int3
push
inc
mov
sub
dec
cli
pop
or
sub
or
pop
push
sub
dec
and
fisttpll
xchg
mov
ret
repz
sbb
pop
vphadduwd
sub
sti
and
push
hlt
jl
lods
pop
lock
sub
in
push
and
add
adc
or
sarb
in
sbb
lahf
nop
xor
cmpsb
ds
sbb
pop
fiaddl
sbb
pop
repz
sub
xchg
xor
add
inc
sbb
out
lea
std
push
sbb
add
dec
adc
mov
inc
ret
roll
jo
pusha
into
fsts
push
xor
neg
mov
sub
mov
lock
leave
ds
out
mov
ss
scas
xor
push
or
xlat
scas
adcb
xchg
lods
jmp
sbb
hlt
mov
pushf
imul
cmp
pop
dec
or
jge
adcl
cmpb
aas
mov
out
insl
jb
mov
loopne
insl
loopne
mov
jb
jno
mov
cld
and
mov
and
inc
mov
mov
fs
outsl
xorl
repnz
into
fdivr
stc
xchg
pop
pop
call
jg
mov
pop
pop
xchg
mov
ja
sahf
pushf
mov
not
test
mov
push
aaa
cmpsl
int
xchg
dec
sbb
dec
dec
les
out
loope
push
test
daa
mov
gs
dec
inc
or
mov
lods
pop
fs
cmpxchg
push
shrl
loop
dec
and
lss
mov
inc
and
in
pop
mov
push
ds
mov
add
neg
and
and
orl
push
repnz
sub
inc
mov
into
cs
add
adc
jae
mov
lret
xor
enter
lock
cs
pop
arpl
mov
fistpl
mov
sti
notl
xor
sti
shl
int3
mov
mov
cltd
iret
xor
lea
std
sub
or
lods
stos
pop
or
call
test
pop
test
pop
inc
adc
jbe
mov
mov
pop
or
mov
push
push
jmp
add
enter
sbb
cmp
mov
jbe
les
cmpl
jnp
pop
or
imul
sbb
jns
pop
sub
sub
push
add
jne
add
pop
xlat
loope
faddl
jmp
lahf
or
ret
stos
lock
cmp
cmp
and
data16
rolb
pusha
mov
mov
jmp
xor
xor
cmpsb
cmc
dec
aad
mov
pop
popf
sub
les
cmovle
lahf
push
popf
xlat
in
cld
repnz
in
adc
xchg
jno
mov
int3
stc
sahf
aas
lods
pop
mov
loope
mov
push
leave
sti
scas
jnp
jbe
xchg
dec
or
ja
xor
mov
sub
cmc
mov
mov
andl
add
add
pop
int3
arpl
test
push
mov
inc
fcoms
push
out
cmp
add
jp
push
mov
cmp
insl
add
pop
nop
stos
and
fmul
jmp
or
push
mov
lds
call
dec
xor
xchg
dec
bound
sbb
push
leave
mov
ljmp
xchg
xchg
push
lock
xor
dec
out
mov
stc
adc
push
cmp
test
fisubrs
sbb
cs
cmpsl
pop
lret
pop
dec
out
dec
jle
push
call
or
xchg
mov
loope
pop
jecxz
push
xlat
push
mov
sub
in
test
cwtl
arpl
lret
js
push
out
and
loopne
iret
jb
les
inc
adc
das
push
arpl
xchg
mov
rcrb
push
jge
mov
mov
xchg
out
test
fisttps
and
adcb
sub
xchg
mov
sub
cmp
pop
les
ds
sub
xor
add
mov
jp
jmp
jnp
push
push
xchg
shrb
nop
bound
mov
mov
add
popf
cltd
and
or
sub
dec
xchg
shll
in
mov
and
repnz
push
adc
aaa
mov
stc
stc
mov
sbb
faddp
push
mov
push
aad
mov
pop
dec
movb
lods
repz
push
fcmovnbe
pop
enter
addl
out
in
pop
shll
cmp
push
mov
push
sbb
xchg
sbb
std
outsl
jmp
aam
rcll
xchg
leave
decb
scas
lea
xor
xchg
out
xor
dec
adc
mov
lret
testb
xor
es
aaa
fcmovbe
cli
aad
pop
or
adc
mov
cld
or
adc
shrb
push
das
add
rcrl
popa
sub
scas
das
cmpb
inc
and
cmpsb
ds
cmpl
call
dec
dec
in
js
sbb
out
cmp
sub
repnz
mov
ja,pt
pop
mov
sbb
dec
mov
dec
and
incb
cltd
and
lods
cmp
and
push
ret
jae
or
stc
mov
cmp
adc
jns
ret
arpl
xor
pop
dec
push
nop
xchg
arpl
out
ss
dec
out
push
push
cmpsb
jbe
inc
stos
aas
push
xor
ljmp
jp
mov
ss
idivb
mov
fucomip
pop
dec
fsubl
ja
xor
sti
test
xor
and
les
add
ret
bound
dec
lods
adc
push
test
adc
xor
dec
arpl
sti
es
outsb
sbb
mov
xchg
or
pop
mov
adc
or
out
sarl
cmc
outsl
out
cmpsb
dec
ret
add
sbb
lods
repz
ret
std
pop
add
scas
cltd
or
sbb
inc
lods
cli
cli
or
pop
addr16
or
lods
outsb
add
scas
cmp
jb
out
or
jmp
data16
xchg
sbb
sub
outsl
ror
jecxz
arpl
in
es
inc
insb
mov
stc
pop
sahf
mov
add
inc
arpl
and
sub
mov
xchg
jae
lahf
addr16
fstl
and
ror
loop
add
mov
xchg
dec
stos
orl
sub
xor
mov
pop
loope
inc
bound
xchg
insb
jle
and
and
inc
mov
sub
push
mov
xor
pop
rcll
cmpsb
xchg
add
xlat
adc
and
mov
aam
add
xchg
xchg
and
add
jecxz
out
dec
and
cmpsb
sub
fistpl
in
stc
sbb
mov
push
out
push
jb
or
jg
mov
arpl
add
dec
pushf
popl
sarb
adc
roll
mov
fsubrp
xchg
or
xor
cmp
xor
in
push
lods
xchg
rcrb
sub
xchg
add
test
or
mov
into
cmpsl
xchg
mov
mov
mov
jle
push
push
icebp
shll
mov
pop
sti
mov
popa
mov
lret
hlt
cmp
dec
es
xchg
data16
sbb
add
mov
pusha
data16
inc
jae
mov
mov
mov
inc
scas
inc
addb
jmp
dec
xchg
movl
mov
mov
call
pusha
jl
popa
lret
repz
sub
cltd
repnz
dec
cmp
mov
call
fimull
sub
icebp
mov
and
pop
addl
call
and
fsubrl
lods
sahf
mov
fnstenv
cld
xchg
imul
mov
jg
stc
jmp
pop
adc
cli
inc
cli
sbbl
pusha
ss
push
mov
inc
add
sahf
dec
lds
lcall
mov
popf
icebp
leave
fcoms
mov
sub
or
mov
lea
lret
inc
or
xchg
dec
cmpsl
push
rcrl
mov
push
inc
push
xchg
je
movsb
xor
xchg
xor
dec
xchg
jmp
and
ljmp
ljmp
lock
sbb
sub
shr
mov
push
rorb
push
sub
shrl
inc
dec
flds
add
mov
xor
inc
mov
dec
in
shlb
flds
sbb
ljmp
pushf
scas
daa
fcmovbe
outsl
mov
insl
imul
push
call
out
insl
inc
sbb
fisubl
test
push
sti
push
fadds
or
jp
test
mov
loope
adcl
pop
or
add
rol
and
in
jne
push
mov
testl
mov
les
xor
and
or
aas
sti
mov
jmp
out
sub
nop
aad
test
push
and
xchg
sbb
aas
jg
mov
pop
xchg
lret
adc
and
out
gs
out
push
pop
ljmp
scas
in
jg
test
jg
clc
rorl
xchg
ja
cmp
jle
xor
notb
cltd
std
sbb
mov
ret
shr
lds
fs
sub
add
adc
mov
out
leave
lret
pop
dec
data16
outsb
nop
push
call
sbb
add
xor
fwait
xor
je
scas
cmp
push
es
sub
dec
inc
jo
imul
pop
pop
cmp
fisubl
and
mov
mov
jae
add
xor
bound
iret
jbe
xlat
insl
jge
cmp
pop
cmpb
icebp
es
arpl
push
add
jle
stos
xlat
jbe
mov
mov
enter
pop
sub
ret
and
fstpt
add
pop
or
push
std
jns
aas
pop
jmp
data16
jae
adc
xchg
leave
jge
push
js
out
jae
test
bound
das
test
call
jae
js
pop
cmpsb
xchg
popa
sahf
sub
cld
mov
add
inc
fisubs
movsb
lret
xchg
adc
cwtl
xorb
repnz
inc
mov
fwait
push
test
popa
jno
inc
push
and
rorb
cmc
pop
mov
fidivl
icebp
or
inc
sahf
jg
or
sub
imul
and
call
pop
jb
push
scas
xchg
stos
inc
cmp
mov
push
jge
shlb
rcrb
push
fidivl
inc
mov
add
cmpsb
xor
sbb
incl
cmp
idivl
int3
pop
fs
pop
cmp
pop
xor
and
or
xor
push
das
nop
cmp
adc
clc
or
push
mov
and
pusha
xchg
icebp
inc
cmpsl
shl
mov
jno
xlat
insl
das
ljmp
loopne
jg
mov
out
xchg
jns
in
push
outsb
cwtl
lods
sbb
cmpsl
push
pop
sub
notb
xor
incb
cmp
imul
pop
jg
mov
mov
ffreep
mov
dec
dec
sbb
add
pop
xor
pop
sub
xor
and
add
ss
and
std
mov
dec
xor
mov
sub
subl
pushf
repnz
jle
mov
lret
stos
pushf
add
mov
mov
lret
jecxz
sub
sub
pop
aas
xchg
or
pop
outsl
mov
stc
ret
outsb
xor
and
xor
stos
mov
cmp
cmpsb
fbstp
xor
jl
test
or
ret
js
test
js
sub
inc
jne
cmp
loope
dec
das
insb
insl
movsb
sub
inc
add
loopne
push
push
mov
mov
push
lods
cmc
js
aam
mov
and
add
push
fbstp
pusha
inc
mov
jo
push
jge
cmpl
outsb
adc
jecxz
push
push
adc
andl
pop
out
mov
push
lahf
cmc
or
xchg
push
es
stos
insb
xor
mov
ret
js
adc
testb
clc
out
popf
les
rcll
sti
mov
outsl
jnp
popa
imul
divl
lods
xor
sub
pop
xchg
lods
aas
stos
jl
jle
adc
test
xchg
call
stos
sbb
mov
leave
sub
jl
test
imul
sub
fcmove
jle
int
mov
mov
icebp
fistl
rol
jb
imul
xchg
jae
in
lods
inc
popa
jge
sub
cmp
stos
cmp
notb
jmp
push
stos
push
jmp
les
call
fs
sahf
pushf
fwait
jge
jge
cmp
add
aam
sbb
push
jb
repnz
dec
jns
incb
mov
ljmp
cmpsb
adc
mov
stos
xor
mov
push
and
push
sbb
ret
xchg
mov
enter
mov
dec
push
or
lret
data16
xchg
xchg
add
push
cmpl
int
fcmovne
imul
mov
fists
push
test
popf
cmp
iret
adc
mov
data16
imul
dec
mov
sbb
iret
xlat
mov
xor
fsubrp
mov
aas
test
in
cmp
hlt
loop
das
int
adc
inc
push
add
sbb
movb
shrl
push
int3
mov
pushl
add
mov
je
mov
jo
mov
cmpsb
xchg
jns
retw
jge
push
scas
jecxz
std
push
inc
outsl
jnp
sub
push
and
and
fwait
xor
es
shll
and
xor
cwtl
mov
test
adc
mov
lret
js
outsl
mov
xchg
addb
fcomps
add
test
clc
in
fs
into
arpl
js
stc
push
fcmovu
pop
xor
pop
cmc
push
sub
inc
xchg
push
ljmp
clc
mov
scas
sti
jns
and
stc
inc
xchg
jno
or
xchg
dec
xor
mov
cwtl
add
int3
adc
stos
in
mov
aaa
mov
hlt
call
dec
testl
and
imulb
jmp
mov
outsl
mov
pushf
and
in
stos
sti
xchg
cli
aam
sub
and
dec
fidivrl
mov
iret
mov
add
aad
or
shll
stc
out
scas
sahf
jmp
dec
dec
cmp
stc
outsl
or
inc
pop
xlat
mov
dec
push
jmp
rcr
inc
inc
and
in
cltd
ljmp
gs
push
rcl
pop
xor
ret
pop
jns
xchg
scas
icebp
add
cltd
stos
in
sbb
jecxz
ss
mov
jno
and
test
es
cltd
inc
inc
fdivl
sub
out
xchg
mov
mov
dec
jmp
mov
jg
fadd
cli
adc
ds
lahf
xchg
cmp
cmc
das
mov
ret
push
xor
in
lock
dec
aaa
adc
and
cld
cld
nop
pop
sub
inc
xchg
in
mulb
xor
ficompl
mov
ret
repz
imul
mov
or
xlat
mov
mov
nop
cmp
test
push
inc
leave
fistl
inc
lods
hlt
or
xor
inc
pusha
movsl
movsl
sarb
outsb
fidivs
std
jbe
test
aaa
dec
dec
cmp
xchg
shll
xor
pop
add
imul
mov
mov
mov
in
sub
divb
adc
data16
rcr
leave
cmp
in
stos
push
mov
pop
xor
and
sub
mov
aam
and
daa
fadd
in
loope
push
sub
add
icebp
stc
cli
lods
stos
ds
bound
mov
xor
xchg
dec
jns
lcall
push
cld
mov
cmc
xchg
in
lahf
and
es
ss
adc
fs
int3
test
pusha
mov
sahf
repz
sub
filds
pop
insl
mov
mov
jns
outsl
iret
gs
jl
out
cs
adc
add
pop
data16
arpl
in
sti
dec
add
push
imul
ret
pop
out
add
hlt
xchg
and
das
loopne
jmp
push
jp
ja
daa
xor
xor
and
dec
ret
xor
inc
xlat
ljmp
xchg
ja
push
roll
pop
xor
mov
add
jmp
lret
cld
xchg
jmp
jne
out
gs
and
addr16
scas
call
push
push
sub
outsb
jno
mov
mov
jnp
js
cltd
xchg
mov
fstl
addl
test
cmp
cmc
jp
fdivl
fwait
jg
inc
mov
jge
jbe
pusha
mull
int3
mov
fiaddl
mov
mov
daa
aad
sbb
mov
jmp
mov
xor
test
or
cmp
int3
add
add
enter
shrl
xchg
out
sub
cs
dec
movsl
jg
ret
adc
pop
lock
in
dec
jecxz
pushl
xor
shrb
push
xchg
jl
cmp
jae
cmp
adc
pushf
je
sub
cmpsb
pusha
fildl
lock
es
testb
icebp
lret
ljmp
lcall
inc
xchg
shrb
push
mov
outsb
in
mov
jno
lret
iret
mov
rcrl
xlat
ret
lea
movsb
dec
mov
xor
push
std
push
fdivrs
inc
int
jle
arpl
add
add
insl
arpl
lcall
inc
lds
add
pop
sahf
fs
negb
mov
test
mov
int3
mov
lods
inc
addr16
jge
mov
sbb
xchg
cmp
imul
mov
ret
sub
pop
jge
or
das
xchg
iret
enter
ds
leave
dec
dec
je
mov
dec
in
jae
push
lret
testb
xchg
in
jge
adc
or
cli
and
mov
or
std
bound
int
sub
mov
push
out
dec
sbb
into
bound
ds
push
mov
pusha
sub
sbb
pop
inc
xlat
mov
xchg
insl
or
add
push
mov
mov
push
cmpsl
cmc
mov
mov
lods
cltd
pop
lret
mov
jle
mov
push
lcall
lock
lea
or
sbb
and
in
xchg
popa
lods
mov
mov
fstpt
rorl
lcall
stc
or
cmpsl
push
nop
pop
shll
dec
loop
xchg
and
pop
jg
cmp
call
sbb
ret
pop
insb
repz
dec
xchg
push
sahf
push
add
xor
in
xchg
jae
add
sbb
fisubrs
aas
and
cmp
adc
loop
push
push
sub
sbb
outsb
sbb
popa
jp
cmp
ret
or
cmp
cmp
test
inc
repnz
sbb
mov
cmp
popa
in
int
mov
sub
js
pop
mov
mov
sar
jg
cmp
ja
fmuls
shrl
fdivl
out
push
adc
in
jp
mov
mov
adc
push
add
cmp
pop
mov
leave
xor
movsb
std
and
adcb
mov
push
out
xchg
inc
data16
adc
pop
sub
js
inc
mov
icebp
mov
insl
adc
fdivrs
scas
js
pop
dec
dec
cltd
mov
push
push
dec
jge
clc
aad
sub
or
jle
sbb
rorl
aaa
loop
out
sbb
xchg
mov
xchg
testb
rolb
adc
add
jp
mov
ja
mov
dec
mov
mov
fdivl
pushf
pop
sub
jle
ret
in
and
mov
into
vdivss
iret
orb
in
or
aas
inc
xchg
in
mov
dec
adc
push
xor
pop
jno
call
popa
ret
pop
inc
jns
stos
and
xchg
jmp
xor
push
mov
sub
xor
mov
dec
and
sbb
in
sarl
xchg
mov
es
pop
jo
insb
jle
and
mov
in
xchg
fnsave
jl
mov
mov
pop
sbb
fadd
fidivl
mov
dec
push
mov
lea
xor
adc
iret
xor
jg
in
pusha
fstl
decl
sbb
mov
lds
or
jb
icebp
jl
sub
mov
or
dec
scas
jns
jno
mov
std
nop
and
add
clc
or
adc
lea
push
fistps
pusha
clc
and
dec
inc
mov
or
rcll
pushf
mov
in
pop
inc
fmull
stos
arpl
jge
aas
outsb
repz
scas
call
inc
xchg
ljmp
lahf
test
or
lret
cmc
lods
mov
stc
sub
jnp
mov
lea
mov
sbb
pop
popf
icebp
push
aaa
ljmp
out
push
mov
pop
push
dec
push
jno
bound
pop
push
gs
xor
cmpsl
sub
or
xchg
repz
push
out
jle
sahf
cmp
jbe
cmp
mov
mull
adc
cmp
push
rcl
out
insb
test
arpl
cmpsb
movsl
repz
repnz
mov
les
inc
adc
outsl
cmc
xchg
lcall
clc
imul
add
fisubl
push
fisubrl
cmpsb
sbb
out
ret
loop
cmp
pop
mov
mov
cwtl
sub
and
mov
out
xor
out
fdiv
sbb
insl
scas
out
lock
test
add
jae
stc
in
push
mov
mov
fnstenv
mov
xchg
test
lret
sbb
rcrb
cmp
xchg
cmp
xchg
dec
hlt
shll
shlb
in
mov
push
mov
shrl
outsl
sbb
scas
jb
sub
shl
or
push
in
dec
inc
lds
lock
inc
xchg
add
dec
xchg
jno
mov
mov
ja
jb
aam
pusha
mov
xor
and
mov
jmp
sub
fstpt
xor
cmp
push
negl
addl
adc
lahf
mov
sarl
into
xor
bound
lahf
mov
jl
dec
add
js
mov
cltd
push
rcll
fisubrs
or
nop
in
cmp
in
pop
lret
pop
xor
rorl
lcall
nop
xchg
out
bound
cmp
int
sub
mov
setl
pop
jmp
push
pop
and
in
mov
popa
or
lret
push
cld
idivl
dec
sbb
insl
push
mov
mov
cmp
fmul
rolb
push
sbb
push
stc
mov
mov
sub
or
lods
mov
bound
int3
ljmp
imull
in
add
pop
insl
sub
push
je
xor
adc
fnstcw
or
ret
pop
pop
das
das
pop
add
pusha
fs
loopne
and
sahf
lret
insb
jmp
ffree
rcrb
pop
push
lcall
scas
sbb
mov
push
push
ja
gs
jne
std
stos
in
inc
cmp
cmp
cmpb
push
xchg
sbb
repz
ret
repz
mov
ja
popa
fnsave
mov
and
icebp
fdivrl
cmp
dec
push
shl
out
jecxz
pop
sub
inc
jmp
sub
jl
mov
add
mov
or
mov
mov
aad
mov
ljmp
inc
xchg
push
clc
jmp
inc
call
add
stc
popf
insb
cmpsb
outsb
test
ret
fcmovu
jnp
xchg
call
sbb
inc
mov
adc
test
lock
push
add
ljmp
test
inc
hlt
mov
pop
mov
mull
adc
fisttpll
mov
out
repnz
lret
inc
sub
arpl
push
push
les
daa
repz
adcb
jne
xor
push
fwait
cltd
and
cmpsl
outsb
pop
sub
cmp
cmp
or
mov
das
mov
adc
jnp
lahf
jp
leave
and
sbb
fwait
xlat
mov
lahf
out
fst
das
adc
push
cwtl
push
pop
fs
insb
xor
xor
or
outsb
pop
push
push
sub
jle
sub
xchg
sub
stos
jl
dec
adc
pop
inc
mov
adc
and
fidivrs
ja
adc
pop
and
lea
adc
push
add
push
sub
iret
mov
out
je
mov
add
dec
int3
mov
adc
lahf
dec
mov
ror
outsl
jp
shrl
std
fwait
mov
int3
and
jb
ljmp
xor
pop
mull
scas
adc
cld
push
cmc
adc
loope
push
int3
imul
dec
push
aaa
mov
jmp
or
mov
aam
aam
jecxz
in
jns
test
jno
adc
adc
aam
pop
ja
adc
mov
fmull
sbb
xchg
xchg
or
lret
and
imul
bound
add
subl
jb
loopne
jmp
push
push
mov
xchg
daa
add
and
and
out
jno
dec
pop
jae
arpl
popf
out
shll
arpl
in
into
pop
icebp
std
push
int3
arpl
sahf
js
iret
test
subb
xchg
jns,pn
rorb
add
sbb
out
jns
or
aaa
sbb
xchg
jmp
dec
and
sub
subb
mov
xchg
adc
popf
lods
cmp
icebp
lret
in
xor
jo
pushf
xor
inc
fsubrp
out
push
and
mov
test
mov
scas
test
pop
pop
ja
dec
mov
outsl
adc
cmp
sbb
lea
outsb
sub
mov
shl
mov
xor
pop
jnp
or
dec
sub
xchg
mov
push
rcll
jnp
cmpsl
aaa
inc
fisubs
sbb
test
popf
mov
mov
ss
push
fsts
dec
aam
test
mov
out
jae
repz
cmc
push
fadds
out
in
ljmp
divb
jmp
and
pop
gs
addr16
xor
xor
repz
jns
or
jb
shrl
int3
xchg
jp
popf
mov
rcrl
push
out
xchg
pop
mov
add
rorl
jge
stos
stc
or
pop
mov
cmp
xlat
pop
xchg
xchg
mov
and
cwtl
mov
mov
fdivrl
push
into
cmp
mov
ds
xchg
sarb
add
adc
sahf
cmp
xor
std
repz
jno
pop
imul
lea
sub
call
push
push
rolb
orb
cli
inc
pop
mov
add
sahf
subb
sahf
xor
jns
fldt
ffreep
rclb
jbe
aas
repnz
mov
divl
adc
xor
and
add
imul
fmuls
mov
hlt
mov
aas
cli
xchg
outsb
pop
ja
xchg
jge
and
std
shr
and
inc
push
inc
std
je
sub
pusha
push
pop
push
ds
ffreep
or
mov
mov
leave
mov
cs
push
or
sub
loop
rolb
pushf
xor
je
mov
xchg
cmpsl
std
cmp
inc
mov
sbb
ror
mov
test
xchg
add
fisttpll
movsl
xor
jp
stos
addb
popf
js
xchg
xor
adc
aad
inc
mov
mov
scas
icebp
push
adc
fcoms
push
pop
jb
leave
sub
dec
pop
mov
rcrb
mov
movsl
adc
xchg
mov
push
mov
sub
jmp
aaa
lahf
jbe
inc
push
scas
inc
std
or
sbb
jnp
sbb
cmp
outsl
aad
movsb
add
adc
mov
dec
loopne
out
les
adc
cltd
bswap
iret
and
sbb
ljmp
mov
jecxz
in
inc
in
icebp
fadds
leave
push
inc
leave
cmp
push
inc
aam
clc
dec
xlat
into
cmp
mov
sbb
aaa
adc
negb
and
mov
or
fnsave
outsl
stos
stc
inc
pushf
stc
std
push
mov
scas
mov
repz
testb
mov
cltd
mov
inc
add
mov
mov
and
xchg
push
jmp
push
lods
popa
clc
fsubp
push
jne
aad
cli
push
flds
mov
mov
mov
das
mov
jg
adc
cli
sbb
shl
and
lahf
into
ljmp
pusha
xor
subl
jg
test
outsl
mov
push
pop
pop
or
lea
inc
dec
jle
in
ja
xchg
or
inc
fistpl
pop
sub
stos
es
push
test
lret
xor
push
mov
push
sahf
testb
push
inc
cwtl
add
jns
sub
push
ljmp
mov
mov
mov
xchg
ja
popa
or
aad
sarl
or
jl
in
mov
inc
add
xchg
mov
inc
xchg
push
ror
jb
mov
test
and
sarb
push
jns
cmp
mov
mov
mov
sbbl
cli
xchg
addr16
mov
cmpsb
mov
sbb
fmul
cmp
test
mov
adc
xor
pop
mov
jmp
enter
arpl
jo
repz
xlat
sbb
sbb
lret
mov
xchg
cmp
lock
jno
sbb
cld
pop
xor
rcrl
push
inc
jno,pt
mov
mov
or
inc
push
faddl
xor
mov
insb
push
mov
xor
xchg
addr16
mov
shlb
imul
testl
pop
or
sub
icebp
xchg
sub
pop
sti
rorb
cs
lock
movsb
jp
or
pop
pop
into
dec
loope
inc
fdivl
lea
or
mov
push
clc
cltd
loopne
sub
mov
ror
out
pop
xor
xor
sub
xchg
icebp
rcll
cmc
fsub
dec
or
mov
add
mov
lahf
shlb
push
and
jge
adc
aam
push
jns
jle
stc
scas
xchg
out
jecxz
shll
iret
jmp
push
popf
jns
jbe
ja
and
cwtl
push
movsl
leave
in
incb
lds
adc
mov
or
imul
add
in
or
xchg
push
subb
in
leave
aad
mov
pop
shrl
jle
pusha
mov
pushf
call
inc
inc
and
call
jg
fldenv
sahf
fists
mov
xchg
ja
push
stos
cmp
mov
std
jg
add
idivb
lock
mov
and
jae
clc
jno
mov
cmp
jp
popf
sbb
inc
mov
int
mov
sbb
mov
lock
dec
sar
adc
pop
cld
mov
icebp
xchg
mov
push
enter
sbbl
mov
push
xchg
lret
in
push
or
iret
sub
ja
mov
sar
jae
les
or
push
cltd
clc
or
ss
lock
lds
ja
bsf
into
sarb
mov
and
mov
ret
int3
gs
lahf
ljmp
sbb
inc
or
in
xor
les
rol
loopne
stos
cmp
push
lods
dec
push
sub
ret
in
xor
push
dec
and
aas
nop
cmpsb
call
test
jb
dec
cmp
das
sub
jns
cmc
xchg
dec
dec
mull
shll
in
test
push
xor
pop
xchg
cmc
xchg
sbb
jecxz
fdivrs
push
lods
push
cmp
fistpl
sub
ss
imul
shr
or
stos
test
out
pop
into
out
jle
lcall
and
icebp
inc
sbb
scas
icebp
dec
and
adc
mov
js
aaa
or
out
xchg
sub
jmp
stc
mov
mov
pusha
dec
call
jnp
xor
jp
sub
adc
push
xchg
xor
inc
lret
addr16
movsb
cmpsl
mov
js
ljmp
aaa
in
sub
sarb
out
hlt
and
push
sbb
lahf
testl
add
in
outsb
sbb
sti
nop
pcmpgtd
out
cmp
dec
push
stos
out
mov
mov
fists
test
hlt
jnp
movsl
lods
adc
aaa
data16
cmc
sbb
incl
inc
or
jno
stos
in
inc
ret
inc
data16
fdivs
dec
out
inc
scas
xor
pop
sub
in
pop
dec
fstpt
es
lods
xchg
mov
and
mov
sub
xchg
into
jne
xor
shlb
sub
iret
mov
fmull
sub
jp
mov
lds
pop
icebp
and
pop
dec
iret
inc
js
jne
lock
lods
fisubs
lea
lcall
ds
add
call
loop
test
dec
mov
or
mov
movsb
xchg
aam
adc
inc
aaa
pop
negb
dec
add
lock
rcrl
cmpsl
in
xchg
xor
dec
mov
les
adc
add
xchg
or
sub
es
sbb
mov
fs
pop
sub
or
cmp
cmp
xor
mov
pushf
movsl
notl
test
shlb
lods
cmpsl
push
fwait
out
out
ret
test
mov
push
ret
in
mov
cltd
push
repnz
loop
cltd
int3
dec
icebp
sbb
push
fsubr
mov
mov
mov
in
cmc
dec
cs
sarl
mov
push
push
mov
adc
push
xchg
sbb
and
std
cltd
sar
movsl
sbb
xchg
push
push
mov
mov
or
ret
sub
cwtl
sahf
sbb
cwtl
adc
clc
cmpsl
gs
inc
out
addr16
inc
bound
xchg
outsb
push
scas
leave
stc
cmc
in
inc
scas
out
insl
imul
sub
int3
arpl
scas
jno
and
xchg
mov
fnstsw
dec
shrb
xlat
bound
add
ror
pusha
leave
cmp
in
mov
fwait
or
xlat
test
or
shrb
pop
add
xor
rcl
and
bnd
pop
and
sahf
jp
loope
xor
subb
iret
xchg
mov
mov
std
lcall
add
jmp
adc
cmpl
jne
or
sub
mov
clc
decb
das
sbb
jg
pop
adc
cwtl
jae
or
into
ss
inc
add
pusha
pop
adc
andb
lods
call
adc
mov
adc
mov
adc
orl
enter
icebp
cmp
into
and
lahf
gs
xor
mov
and
repnz
data16
and
mov
aam
and
inc
mov
lock
or
fidivrl
cmc
push
in
imull
nop
mov
fwait
icebp
aad
lods
inc
mov
pop
je
mov
aad
dec
aad
mov
adc
jne
xchg
dec
or
clc
fists
or
push
add
xchg
cmpsb
adc
adc
fistpll
dec
dec
fcompl
adc
repz
fidivrl
or
out
icebp
sbb
pop
xchg
outsb
stos
mov
adc
insb
xor
mov
cwtl
xor
mov
push
xchg
xor
repz
pusha
outsb
cwtl
xchg
xchg
add
mov
pop
and
sbb
mov
sbb
mov
fucomip
daa
sbb
jnp
jns
pop
mov
into
fdivl
cmp
inc
cmp
in
int3
mov
adc
sbb
xor
add
pop
xor
decb
adc
int3
pusha
popa
jle
sbb
int3
fdivrs
fldt
pop
add
int3
in
sahf
in
adc
int3
cmc
and
enter
add
cmp
jle
adc
fldcw
pop
inc
jge
xor
adc
sub
ds
test
cld
aas
stc
mov
adc
dec
and
mov
arpl
sub
xor
jmp
xchg
pop
in
imul
adc
jecxz
xor
lods
add
mov
mov
leave
idivl
add
rol
adc
jp
cmp
xor
cmp
dec
mov
xchg
xchg
arpl
and
aam
sub
imul
ja
add
dec
in
sbb
int3
jae
push
cwtl
nop
adc
dec
cwtl
mov
xchg
scas
inc
adc
fadds
mov
pop
rclb
cmp
mov
cmpsl
cmp
outsl
fwait
cmpsl
mov
movsl
jb
push
adc
ret
mov
xlat
xchg
mov
lods
std
adc
mov
shl
jns
sub
shlb
hlt
add
stc
popa
or
mov
push
cmp
xchg
cmp
das
inc
sub
pop
push
jbe
pop
xor
mov
sub
lret
rolb
xor
and
inc
stos
jo
push
js
dec
lret
dec
push
roll
jo
leave
jl
jle
clc
push
jge
jecxz
cmp
jns
adc
xchg
xor
push
bound
pop
push
xorb
cmc
jmp
inc
jno
push
xchg
or
arpl
mov
bound
sbb
mov
into
fistpl
adc
pop
sbb
subb
push
and
sbb
fxch
cmpsb
into
inc
pushf
inc
inc
movsb
mov
iret
dec
sbb
mov
aam
add
pop
test
popa
out
lea
mov
clc
cli
mov
cmp
cmp
jecxz
in
lret
sub
shr
add
pop
jne
movsl
pop
clc
mov
mov
sbbb
inc
das
mov
add
test
and
das
dec
mov
stos
add
std
ds
jns
push
jae
sbb
pop
sbb
cltd
test
add
push
fwait
imul
or
push
fs
cmp
popa
mov
ja
cmp
scas
sub
loope
not
sub
rcll
mov
dec
fcoms
add
jle
lcall
dec
leave
xor
popf
push
mov
jmp
add
mov
sahf
jmp
or
push
pop
bnd
lahf
sub
testl
adc
lods
add
arpl
jl
adc
iret
dec
sub
ds
aas
dec
sub
jne
sbb
dec
test
in
cwtl
in
test
ss
push
push
stc
sub
xchg
mov
arpl
gs
jl
xor
xchg
push
xchg
xchg
or
hlt
mov
in
mov
sub
inc
add
addb
sti
add
cmp
scas
fimuls
mov
pop
icebp
lods
cld
jb
mov
sbb
mov
lods
int
or
fstpl
addr16
xchg
adc
mov
ret
adc
lret
imul
setbe
pop
jne
or
or
lock
cmpsl
test
lret
adc
dec
xor
add
adc
and
adc
sti
pop
and
push
xor
sbb
les
notl
movsb
jecxz
orl
mov
xchg
arpl
xchg
mov
inc
xchg
lds
je
xchg
in
icebp
jecxz
push
inc
jecxz
repnz
js
int3
insl
mov
jmp
std
dec
mov
adc
mov
stos
icebp
jge
push
andb
push
scas
pop
inc
jae
flds
and
mov
divb
movsb
cmp
mov
cs
mov
add
inc
adc
jb
ss
cmp
sbb
mov
jge
inc
pop
inc
push
insl
mov
cmp
test
pop
leave
test
daa
dec
sbb
movsb
cmp
lahf
cmp
lahf
jmp
je
adc
popa
pushf
ljmp
jecxz
loope
sahf
js
inc
and
out
sbb
adc
adc
add
or
aaa
into
or
sub
add
mov
xlat
popf
iret
test
andb
imul
mov
sbb
mov
push
test
pmuludq
xchg
mov
dec
loopne
xlat
xchg
test
stos
ret
pop
add
pop
cld
sahf
iret
inc
mov
mov
sbb
std
mov
inc
popa
imul
push
dec
out
pop
rdtsc
or
arpl
out
or
pusha
cmp
hlt
int
pop
aam
mov
add
call
sbb
loopne
into
adc
bndstx
mov
sbb
daa
inc
js
sar
repz
xchg
xchg
sbb
and
jp
mov
jg
stos
mov
lahf
out
inc
popf
xor
mov
mov
mov
push
test
pop
dec
push
or
pop
cmpsb
inc
dec
dec
xchg
xor
lret
popa
je
inc
inc
adcl
inc
adc
add
pop
xlat
adc
aam
push
inc
mov
aad
les
push
popf
out
cltd
cld
or
mov
sbb
ret
xchg
popf
jecxz
sbb
xor
sbb
outsb
mov
mov
pop
xchg
adc
jge
popa
xchg
lret
mov
data16
sub
push
movsb
ds
xor
xchg
pop
mov
fnstcw
rol
pop
xor
pop
insb
push
idivb
out
nop
mov
das
test
jns
adc
mov
aad
push
mov
xchg
mov
sub
xchg
sub
adc
arpl
jl
shrl
inc
loope
inc
or
xchg
in
addl
or
cmpl
mov
push
pop
negb
das
loop
icebp
sbb
ja
sub
or
lret
adc
cli
mov
push
scas
lock
xor
sbb
in
out
cli
pop
out
cmpsl
or
mov
orb
repnz
mov
scas
out
push
sub
rcll
xor
jne
xchg
ja
mov
aam
ss
test
push
or
test
popa
sarl
push
out
add
arpl
push
mov
sbb
dec
mov
dec
fdivrp
inc
jl
fwait
inc
fisttpll
je
inc
lret
jecxz
sbb
inc
pop
xor
iret
xchg
mov
mov
sub
int
pop
jae
loopne
lret
jbe
gs
sbb
inc
push
mov
cmp
insl
jns
ret
popf
cmc
push
inc
xor
out
jne
jmp
sub
add
jo
vdivsd
cmc
mov
addb
das
jo
cmpsl
inc
push
mov
mov
add
test
lret
cld
arpl
mov
fimuls
movsl
imul
push
sti
rol
out
mov
sub
lea
fisubrl
addr16
sub
cwtl
into
stc
sub
loop
jae
lds
adc
push
cmpsb
dec
mov
call
push
cwtl
ja
pop
jb
push
int3
mov
sbb
in
out
xor
dec
push
daa
mov
rcrl
out
stos
repnz
mov
mov
pop
stc
push
jae
jne
sbb
fbld
add
push
push
push
fucomi
cltd
gs
subps
sub
cmpsl
ja
mov
add
inc
imul
divb
mov
or
imul
pusha
hlt
add
dec
int3
mov
std
jo
adc
cmp
sbb
dec
popa
fsubl
aam
imul
das
inc
pop
mov
or
movsl
and
mov
test
dec
negl
pop
jp
ret
test
push
scas
test
pop
mov
and
pop
int3
mov
lock
push
mov
push
or
mov
popa
daa
es
xor
sbbl
out
orl
xor
inc
jecxz
mov
pop
push
outsl
or
push
sub
mov
and
stc
cmp
pop
or
sub
aam
cli
loopne
and
or
cmpb
push
mov
add
shlb
mov
lret
fstpt
push
sbb
fimull
adc
and
pop
jecxz
aam
cli
mov
sbbl
scas
xchg
mov
ror
mov
mov
jnp
repz
sub
dec
add
out
cs
add
xchg
and
mov
lcall
sahf
xor
scas
mov
add
fldt
in
das
mov
add
xor
fs
xor
gs
lahf
sub
subb
pop
repnz
or
xchg
fwait
test
jge
mov
and
in
jne
fcmovbe
loope
in
pop
and
pop
loopne
pop
push
js
aad
iret
fisttpl
pop
dec
xchg
fwait
stos
ds
or
jmp
cltd
xor
into
loope
pusha
cmc
push
inc
das
aaa
adc
sahf
push
push
cwtl
or
iret
pop
hlt
xchg
ljmp
int3
into
pop
jmp
jnp
int
pop
imulb
jle
mov
xchg
out
sahf
pop
lea
dec
jp
and
outsb
jp
mov
mov
scas
push
les
xorb
xchg
push
int
cmp
push
jns
test
add
xor
arpl
mov
scas
sbb
popl
insl
mov
adc
push
inc
ret
or
arpl
das
cld
or
imul
xor
rclb
sbb
sbb
and
cmp
or
mov
push
mov
jns
cmp
stos
cmp
pop
jle
sbb
imul
ss
out
jmp
es
pop
sbb
iret
jno
iret
movsb
outsl
fisubl
mov
outsb
xor
lahf
cwtl
push
inc
jmp
cs
xor
adc
inc
in
mov
fmuls
insl
sub
in
lods
push
pop
fbld
es
dec
add
sub
lock
pop
fstl
out
adc
out
or
sub
sub
cwtl
jbe
dec
enter
sti
scas
dec
cmc
scas
pmulhw
cmc
stc
sub
lahf
lcall
outsb
mov
dec
mov
or
add
xor
les
outsl
cmp
lods
popf
xchg
lods
into
or
hlt
cmp
mov
cmp
xor
iret
mov
loop
icebp
mov
mov
cmp
pop
hlt
in
and
out
mov
mov
aad
outsl
pop
test
cwtl
add
mov
inc
fwait
xchg
add
in
rclb
add
sbb
add
cmp
out
lret
addl
and
popa
cmpsb
jo
arpl
mov
sti
inc
adc
mov
js
pushf
or
stos
in
mov
xchg
cmp
test
pop
fwait
xchg
add
adc
fsubrl
pop
fistpl
and
inc
and
dec
bound
sahf
pusha
push
xor
outsb
popa
and
cmp
pop
push
jecxz
xchg
mov
insl
add
sub
pop
and
popa
cmc
cld
stos
add
cmp
push
ret
out
enter
data16
mov
pusha
sbb
pushf
xchg
ds
pop
pop
std
insl
nop
inc
dec
xor
xor
out
mov
xchg
push
pop
add
rcl
pop
or
jl
lcall
pop
icebp
fldcw
insb
dec
adc
dec
jnp
jp
insl
xchg
jno
outsb
push
xchg
into
test
adc
test
ds
test
shl
inc
into
je
scas
mov
ficoml
xor
rcrb
mov
mov
mov
and
out
mov
std
shrl
mov
mov
or
popf
push
mov
add
xchg
out
repz
and
sub
lret
sbb
fisubl
cmc
xchg
pop
bound
andl
in
insb
jne
rclb
jmp
push
leave
cmc
test
pop
ss
repz
xchg
jge
pusha
lea
jbe
xor
and
addr16
leave
arpl
mov
int3
mov
addb
icebp
pusha
pop
aas
pop
pop
push
aaa
add
pop
push
fs
lahf
jmp
xchg
sub
pop
mov
aad
pop
xchg
xor
rcrl
push
in
daa
sub
stos
fcomps
test
sti
lret
push
cmpsb
push
add
jecxz
and
test
dec
pop
cwtl
or
scas
xor
dec
push
out
jae
rcll
clc
dec
fs
jle
lods
nop
mov
pop
into
aad
das
pop
push
stos
jge
test
loopne
rep
and
and
negb
clc
jle
jl
pop
mov
and
add
jg
fcoms
fidivs
sbb
pop
lock
and
jl
add
insl
pop
ret
inc
cmp
adc
jnp
xchg
or
shl
lds
adc
xor
dec
push
test
xor
mov
and
mov
enter
jo
outsl
inc
in
shll
xchg
add
or
sbb
inc
je
lahf
mull
or
or
xchg
cmp
jnp
dec
mov
or
mov
aam
add
jle
movsb
cmp
sbb
out
cld
push
sbb
sub
or
ret
mov
arpl
mov
fwait
push
sub
in
xchg
rcl
jne
movsb
pop
dec
fwait
jne
inc
cmpsl
popl
cmp
push
lods
mov
xsha256
cmpsb
push
jl
test
pop
or
jle
mov
adc
inc
enter
push
in
adc
and
push
and
jecxz
das
jg
push
push
fistl
leave
bound
xlat
stos
cmp
pusha
inc
dec
mov
repnz
push
xchg
xor
mov
mov
jl
pop
bound
mov
sahf
popa
leave
sbb
mov
daa
mov
cmp
int3
lea
shl
xchg
jge
jmp
movsl
push
push
fldt
loopne
pushaw
mov
inc
pop
cmpsb
aaa
test
lods
lcall
scas
insb
dec
sti
sbb
js
ret
add
or
pop
xor
shl
push
cmpsb
cmp
lcall
outsb
mov
out
test
cmc
paddusw
popf
adc
sub
pop
xor
out
outsb
dec
fistps
xor
xchg
gs
mov
fcom
xor
rcrb
aaa
divb
cmp
mov
mov
xchg
mov
jp
or
fistl
pop
add
jmp
lcall
icebp
in
push
clc
jae
subb
mov
sub
pop
mov
out
cli
jecxz
cmp
shll
push
jb
mov
xchg
pop
adc
loope
or
xchg
cltd
cs
ficoml
mov
push
mov
push
popf
sub
xchg
dec
add
xchg
stc
outsb
mov
mov
dec
iret
data16
rcl
pop
lods
scas
test
fidivl
cmpsb
xor
mov
cmc
mov
mov
sub
mov
jb
call
adcl
jo
cmp
nop
cltd
rcrb
scas
cmp
push
sub
mov
ret
clc
bound
xchg
frstor
ss
mov
call
lahf
mov
sbb
aad
aad
inc
cmp
inc
xchg
cmpl
mov
lds
adc
sbb
xor
sub
jecxz
dec
lcall
ret
outsl
lea
xchg
mov
xchg
out
xchg
cmp
xor
movsl
imul
jnp
sbb
cmp
out
sub
cli
into
roll
mov
mov
mov
cmp
cli
add
sub
mov
fwait
and
in
or
xchg
xor
jg
clc
das
insb
add
ss
jo
push
push
xlat
test
adc
inc
daa
inc
test
pop
movsl
jg
lea
adc
rcl
insb
fbstp
jmp
aaa
in
add
sti
xchg
xchg
mov
dec
adc
cmpsb
cmp
mov
les
outsb
jl
inc
fisubs
lcall
mov
movb
pop
pop
mov
mov
push
add
jmp
push
pop
mov
out
add
std
vpsubd
jge
test
sbb
in
scas
sbb
ds
adc
cmpsb
fmull
or
push
cmpsb
sub
pop
push
add
lcall
xchg
sub
out
mov
es
addl
sub
gs
jge
pop
bound
xor
xchg
stc
and
mov
int
sarl
dec
test
out
xchg
movsl
cmp
mov
push
fistl
mov
jnp
daa
jle
fwait
addr16
adc
inc
std
test
bound
pop
mov
dec
outsb
and
pop
add
jle
out
insb
add
sub
int3
cwtl
int
mov
ds
sbb
fldenv
call
jb
outsl
push
lret
dec
mov
ficoml
mov
cwtl
mov
iret
jae
rcrl
lret
xor
add
xor
orl
lahf
dec
add
jb
sbb
and
rcrl
pop
out
repnz
and
mov
and
test
cmpl
xchg
jle
fmull
movsl
int3
stos
loop
aam
lods
ja
jmp
sbb
test
out
andl
mov
add
mov
scas
add
decb
mov
dec
hlt
sub
fidivl
xchg
sarb
scas
mov
call
or
push
popf
cmpl
mov
or
ja
popf
cmc
fwait
jmp
insb
mov
dec
into
lds
or
cmp
nop
addr16
movsl
loope
in
dec
out
adc
fs
lea
andps
into
lods
wbinvd
jnp
jg
push
popf
push
ficoms
pop
out
push
out
cmp
sbb
popa
jne
xchg
in
lea
mov
mov
adc
push
cmp
sub
xchg
out
mov
and
inc
mov
dec
cld
adc
jo
push
daa
stos
mov
imul
xchg
push
cmc
mov
inc
lods
adc
repz
adc
add
cltd
std
das
movsl
testl
adc
push
jl
mov
pop
aad
cmp
repz
mov
aam
ja
xor
lret
mov
lds
pop
into
aad
lret
cwtl
inc
scas
sbb
fsts
pop
mov
imul
and
jl
das
stc
adcb
dec
in
push
dec
iret
ss
xchg
inc
and
mov
jp
sbb
mov
insl
mov
das
and
push
adc
and
inc
sub
icebp
adc
jae
add
in
cmp
xor
mov
dec
jae
hlt
lret
popa
dec
popf
das
popl
rcrb
fildll
xlat
shl
test
inc
stc
xchg
jp
xorl
xlat
jb
dec
mov
dec
or
adc
xlat
addr16
ret
fidivrl
jl
ret
push
add
sbb
incb
and
pop
movsl
cltd
and
xchg
add
lret
sarl
jecxz
inc
adc
sub
test
mov
loopne
or
xor
dec
hlt
push
subl
or
cmpsl
shrb
push
dec
pop
icebp
in
mov
shl
inc
imul
movsl
shrl
sub
popa
lods
test
movsl
inc
sbb
push
outsl
and
in
xchg
sub
xor
adc
mov
jb,pn
gs
je
pop
cmp
jle
jne
mov
pop
push
fsubrs
mov
rolb
pusha
mov
push
xor
cltd
cmc
nop
pop
and
xchg
js
jmp
push
popa
mov
dec
hlt
pushf
icebp
jle
mov
setg
out
lcall
mov
mov
mov
jo
dec
mov
into
fsubrs
clc
cwtl
iret
mov
sti
add
jecxz
sbb
adc
incl
and
pusha
aaa
ret
xchg
push
jne
ret
xor
push
out
mov
inc
les
test
cmc
es
aas
and
inc
mov
into
cmp
ss
dec
pop
rcrl
mov
inc
mov
jns
push
rolb
in
aad
rolb
aas
andl
jmp
adc
add
xchg
and
aaa
jge
or
dec
add
mov
push
mov
gs
gs
movsl
mov
daa
pop
cmpsl
jle
xor
mov
mov
pop
dec
push
push
sub
mov
imul
or
cmp
scas
mov
aaa
es
pop
pop
movsl
test
inc
sub
aad
or
loope,pt
push
xchg
mov
pop
jbe
in
test
dec
out
and
dec
lds
sub
scas
xchg
jle
psadbw
mov
call
adc
stos
aam
xchg
cltd
stos
repnz
jge
lcall
cmc
inc
pop
scas
jb
cwtl
std
add
scas
rolb
push
mov
hlt
pusha
jmp
and
xchg
or
pop
cmp
mov
mov
dec
adc
fwait
dec
jmp
js
lret
hlt
gs
xchg
mov
cmc
lret
mov
addr16
jne
or
mov
sub
dec
or
dec
scas
xlat
out
mov
fidivs
push
adc
jb
daa
xor
push
nop
xchg
push
jmp
popa
cmp
data16
cmp
shlb
mov
rcr
dec
sub
movsl
ficomps
sub
or
fidivs
pop
lcall
xorl
insl
bound
dec
mov
rcl
jo
and
sub
xor
mov
mov
notl
xlat
fstl
xor
shrb
shll
lods
aaa
sub
shll
mov
mov
cmp
aad
mov
jb
push
mov
pop
inc
in
fcompl
jg
cs
mov
pop
inc
cwtl
fmull
int3
adc
sarb
popa
mov
out
cmp
in
ret
js
mov
ss
adc
mov
mov
mov
mov
mov
int
pop
incl
mov
shrl
push
pop
lock
xlat
pop
decb
inc
lds
or
inc
roll
hlt
add
push
sub
add
add
pop
clc
sahf
inc
in
test
xchg
push
adc
out
sub
xchg
mov
adc
xchg
sbbl
sub
push
insb
shll
push
jb
push
push
mov
fwait
enter
out
push
movsl
sbb
je
mov
jp
or
xchg
cmp
adc
xchg
or
pop
popa
es
or
mov
lahf
std
adc
lret
jae
jmp
xchg
xor
pop
sti
inc
cmp
mov
cltd
mov
lock
pop
mov
xchg
pop
lret
stc
xchg
jl
and
push
adc
inc
scas
mov
dec
stos
xchg
jp
lods
dec
stos
dec
dec
loopne
fistl
mov
jb
gs
daa
std
jb
jnp
sbb
enterw
xlat
push
inc
int3
pop
repnz
dec
sub
ficoms
cli
loop
jg
aad
sbb
aaa
pop
xor
or
xor
inc
mov
cmpsl
call
pop
loopne
lds
push
jb
sub
pop
cmp
scas
inc
loopne
jbe
movsl
or
scas
aad
ja
or
scas
xchg
or
push
or
jns
mov
icebp
leave
testb
and
leave
and
inc
not
outsl
imul
jb
shll
in
pop
movsb
mov
cltd
add
data16
iret
cmp
pop
repz
push
jbe
inc
test
fcomps
cltd
xor
sub
adc
leave
pusha
faddl
add
and
xor
inc
dec
mov
stc
or
jle
pop
enter
arpl
dec
xchg
mov
rcrl
mov
cmc
test
and
xchg
push
add
xchg
lcall
popf
push
push
testl
xchg
and
fnstcw
xchg
nop
pushf
sub
mov
movsb
call
xchg
cli
and
gs
cltd
mov
popf
in
add
inc
out
sbb
ret
or
xor
mov
cmpsl
xor
orps
clc
sub
popf
mov
insl
and
push
in
pop
inc
test
out
rorl
pop
dec
lods
js
shrl
popa
jl
dec
cmc
push
mov
push
mov
mov
mov
jbe
sub
mov
or
push
aam
xor
adc
shrl
bound
in
pop
idivb
xchg
mov
sarl
jle
cmp
pop
std
lods
dec
popf
aaa
stos
or
inc
repz
shrb
and
mov
popf
std
fstps
into
addl
daa
nop
jno
scas
popf
icebp
push
orl
pop
imulb
data16
cmpl
mov
in
lods
push
mov
fcoml
fsubrs
cmp
shrl
sub
dec
out
insl
test
push
mov
ret
cmc
push
cmp
jno
inc
call
or
mov
test
mov
fnstenv
jmp
fstps
mov
cmp
xchg
mov
pop
push
loop
outsl
cltd
mov
inc
lock
mov
mov
adc
mov
shrl
ret
mov
fiaddl
inc
lods
mov
scas
stos
mov
fiaddl
inc
aas
sbb
fidivs
xchg
pop
push
push
cltd
xor
push
aad
call
pop
testb
add
add
notb
xor
lahf
mov
push
nop
pop
inc
push
lods
inc
movl
scas
adc
push
pop
test
notb
js
mov
mov
test
add
popf
popa
negl
movb
or
loope
adc
add
out
sbbl
icebp
mov
into
arpl
jmp
ljmp
imul
stos
xchg
into
pop
inc
sub
jg
das
outsb
loop
push
cltd
cmovns
sub
out
mov
push
enter
xchg
and
inc
icebp
insb
jle
imul
sbb
pushf
add
mov
fmul
icebp
xor
mov
ds
cmp
in
test
push
inc
cmp
xchg
popa
gs
dec
adc
mov
jl
fldenv
into
insb
cli
push
int3
push
dec
or
fimull
lds
cltd
shll
ss
loope
ret
mov
mov
jle
cmp
xor
das
mov
call
imull
jns
movsb
dec
pop
aam
sub
stc
les
int3
out
xor
test
xchg
push
test
stos
int
aaa
lret
daa
inc
mov
jae
xchg
in
push
xchg
pop
mov
and
pop
jp
sbb
push
push
shll
or
dec
dec
or
lock
orb
sbb
add
and
lahf
in
imul
rcr
sub
mov
xchg
int
xchg
lods
test
mov
dec
outsb
cmpl
pusha
cmp
xorl
or
sub
fwait
xor
in
or
inc
sbb
or
push
push
xor
outsl
jnp
cmp
in
je
out
dec
lods
sarb
dec
cltd
sub
adc
mov
aaa
pusha
ss
aad
mov
xchg
shrb
push
jle
jno
cmpsb
pop
mov
js
cmpsl
push
cmc
xchg
push
dec
movsb
inc
imul
xor
jnp
movsl
sbb
lcall
ljmp
mov
repz
aas
loope
daa
cmpsl
xchg
xchg
pop
lret
ret
jp
jne
loopne
push
pop
fiadds
mov
roll
sbb
cmp
into
fimuls
sbb
cli
sub
enter
xchg
addr16
mov
and
push
adc
mov
cld
xchg
pop
mov
push
mov
add
dec
lcall
rcrl
int
ret
divl
xor
loopne
cwtl
cli
push
cmp
clc
out
add
shll
or
aas
icebp
sbb
xor
jmp
rcll
pop
je
push
out
lea
cld
mov
andl
mov
mov
adc
je
dec
mov
lahf
sub
xchg
sub
add
mov
mov
clc
imul
mov
or
call
xchg
add
xchg
ds
xchg
xor
cmp
scas
cwtl
popa
shl
adc
sub
xchg
cmp
ret
adc
adc
sub
pop
and
adc
xchg
cmp
jle
push
les
jecxz
test
mov
sbb
xor
mov
xor
or
mov
jg
or
mov
hlt
cmp
jno
clc
push
and
mov
mov
out
and
xchg
jns
xor
xchg
xor
add
fiadds
orl
or
xchg
es
pop
push
mov
ss
cmp
push
ljmp
incb
fldcw
sbb
dec
xor
lcall
adc
mov
push
imul
sub
clc
mov
fists
jp
adc
mov
out
push
testb
cmp
cli
inc
inc
pop
jns
pushf
iret
push
lcall
and
push
ss
jp
adc
pusha
fcmovu
jbe
into
les
sbb
pusha
icebp
inc
test
xor
cld
imul
sub
gs
dec
pusha
sub
inc
pusha
jp
mov
jecxz
in
std
push
inc
lahf
sub
cwtl
pop
call
mov
into
mov
pop
xor
mov
mov
or
pusha
rcll
adc
repnz
divb
mov
sbb
dec
movsb
outsl
xlat
das
lock
fdivrs
jecxz
jecxz
testb
adc
inc
and
sti
inc
push
ss
loopne
test
push
popf
mov
subl
sub
sarl
dec
lcall
xor
pop
adc
outsb
rol
mov
loop,pn
add
and
mov
test
mov
xor
out
mov
xchg
push
mov
push
mov
aaa
dec
in
iret
cmp
mov
mov
and
mov
pop
in
dec
fisubrs
mov
xchg
push
jbe
or
ds
mov
mov
adc
add
cmpsb
leave
imul
jp
stos
xor
ds
test
mov
pop
mov
mov
ds
rolb
mov
push
iret
fidivl
aaa
js
inc
pop
fistps
push
mov
xchg
loopne
and
or
mov
dec
mov
repz
scas
call
jmp
mov
add
das
icebp
add
lods
pop
inc
jnp
aad
dec
sarb
inc
lock
adc
aam
jge
sub
inc
jae
or
inc
dec
or
sbb
jecxz
add
test
mov
je
and
jle
gs
repz
test
iret
jl
roll
std
adcl
imul
insl
ljmp
test
scas
mov
cmp
and
inc
fimull
jecxz
mov
cmpsb
popa
lret
xlat
jae
mov
pop
sbb
ret
sarb
rcll
xor
jle
insl
lahf
lret
fnstcw
mov
and
addr16
fistpl
cltd
scas
jae,pn
fwait
popa
aaa
daa
lods
xchg
test
mov
xchg
mov
pop
das
xchg
adcb
cmp
jp
lods
dec
push
jne
pop
dec
movsb
cmp
mov
stc
sbb
xor
ja
push
out
pushf
mov
inc
test
in
pusha
dec
inc
mov
push
sub
push
pop
adc
jne
movsb
adc
stos
hlt
push
cmp
mov
push
insl
inc
sbb
aaa
daa
sub
mov
push
pop
cld
aam
sahf
and
adc
mov
mov
pop
loopne
lock
pop
adc
push
mov
push
shl
xchg
loope
add
popf
cmp
mov
pop
mov
mov
sub
sbb
into
mov
push
pop
shll
sub
mov
stos
push
in
cmovae
xchg
xor
daa
sbb
frstor
and
sub
xchg
mov
sub
into
and
add
jae
adc
xor
jbe
dec
push
jae
movsl
cmp
mov
loope
inc
sti
rorl
and
scas
jo
testl
push
or
add
in
arpl
xchg
and
dec
adc
jge,pn
pop
fimuls
mov
jge
lds
xor
push
bound
test
jg
inc
pop
out
stos
pop
push
mov
ja
inc
insl
push
lret
in
gs
xchg
aam
dec
mov
fdivl
xchg
push
iret
les
xchg
mov
adc
test
push
rcrl
xchg
test
xchg
pop
dec
js
mov
pop
sub
ja
std
shlb
arpl
jnp
popf
stc
add
and
jae
jno
stos
jne
cmpsl
insb
mov
pop
jecxz
adc
pop
sti
mov
xor
das
xchg
frstor
mov
adc
sti
sub
pusha
mov
test
mov
mov
jg
je
push
leave
push
pushf
outsl
sbb
cmp
pop
push
pop
cltd
jo
add
mov
cmovb
xor
adc
push
adc
cmpl
mov
stos
or
pop
in
into
sub
add
add
push
mov
mov
aam
push
pop
stos
sti
lds
lcall
popa
das
cmp
pop
sub
adc
stos
inc
scas
jns
aam
insb
jecxz
jecxz
push
push
aas
add
add
sub
jno
ret
push
jmp
adc
out
cltd
xor
push
in
mov
mov
out
inc
fcompl
cli
arpl
mov
int3
pop
jecxz
lock
addr16
inc
or
xchg
stos
pushf
insb
mov
xchg
pop
mov
lcall
aad
and
push
xor
outsb
push
dec
pop
mov
dec
mov
notb
push
mov
mov
cbtw
cwtl
cmp
stc
push
movsb
in
xor
sbb
adc
lret
add
add
inc
out
std
inc
mov
out
outsl
popa
inc
into
rorb
dec
loopne
adcb
lock
mov
push
mov
outsl
adc
std
leave
int
repnz
sbb
addr16
ss
dec
and
lds
scas
jno
bound
mov
pop
popf
inc
dec
movsl
std
andb
js
add
daa
je
sti
sbb
sub
pop
dec
sub
adc
inc
xchg
inc
dec
xor
repnz
push
sbb
or
push
out
addr16
das
mov
fists
sub
adc
stos
mov
fisttps
xacquire
pop
imul
pop
sub
xor
sub
iret
roll
mov
sbb
aam
xor
push
sbb
aam
cld
jae
hlt
je
rclb
mov
dec
push
ss
popa
add
add
mov
into
pop
jmp
adc
decb
add
sbb
jp
push
nop
push
loop
xor
loope
sti
push
popa
dec
sbb
inc
lret
idivl
dec
add
fwait
stos
lds
lods
sbb
popf
notl
hlt
xor
movb
std
insl
xchg
sub
cmc
or
sbb
jmp
or
shrb
jmp
loop
adc
imull
fistpll
fsubs
pop
pop
inc
sbb
and
sub
mov
mov
gs
dec
mov
xchg
fisubrl
xorb
sub
xchg
je
pop
mov
xchg
fcmovbe
jnp
aas
lods
mull
lods
icebp
rcrb
clc
add
xor
pop
test
jns
dec
std
stc
pop
xchg
and
mov
fimull
xor
leave
test
addr16
into
and
in
mov
or
push
in
daa
xchg
dec
jb
rcrb
aam
sbb
sti
fdivrs
and
xor
bound
aaa
arpl
out
scas
inc
int3
xchg
sub
ss
lods
xor
inc
jo
mov
xchg
daa
push
cmpsl
mov
or
outsl
cmp
and
dec
out
mov
inc
pop
push
movsl
mov
cmpsl
and
cmpsl
fiadds
dec
lds
sti
mov
aad
mov
xlat
repz
pop
ds
add
call
std
xchg
out
scas
dec
add
push
aaa
sbb
jne
cmp
mov
xchg
jae
adc
cmp
out
cmp
mov
leave
cwtl
xchg
sbb
dec
mov
pop
rcl
add
pop
mov
arpl
xchg
or
fs
push
cmp
adc
daa
addr16
fwait
je
jge
mov
jge
lret
sub
and
aas
jns
mov
call
mov
lods
lock
or
test
fdivl
sub
mov
mov
lret
jae
sbb
hlt
cmp
rclb
and
or
out
pop
mov
cmp
dec
repz
pushf
fbstp
call
jge
or
es
add
out
clc
clc
adc
adc
cmpsb
sbbb
ret
loop
jg
js
shll
cmp
mov
add
push
inc
xchg
sti
mov
sub
out
mov
scas
mov
jmp
out
fwait
out
xor
inc
stc
mov
pop
mov
hlt
rcr
iret
pusha
bound
inc
mov
iret
add
xor
push
ss
adc
sub
jnp
xor
push
test
hlt
sahf
adc
mov
les
mov
shl
mov
test
imul
insl
mov
out
mov
shrl
divb
in
adc
mov
ret
push
add
xlat
je
rorl
fwait
sbb
mov
mov
mov
sub
cwtl
add
push
jb
inc
pop
push
cmpsb
inc
xor
fcmovb
popf
sbb
fsubs
lret
sub
sbb
fmull
cmpsl
ret
and
mov
push
in
push
loopne
pop
fildll
pop
dec
int
loop
and
dec
lret
add
inc
or
push
pop
fwait
std
pop
push
aad
sub
lock
rclb
shll
xor
packuswb
cmpsb
fildll
test
test
mov
xlat
loope
repnz
sar
pop
mov
sbb
jno
mov
or
sub
jns
outsb
arpl
xor
ljmp
ds
xor
aad
iret
jl
and
or
dec
outsb
je
add
jae
cs
int
ss
and
prefetchwt1
xor
push
pushf
repnz
fdivl
in
add
dec
fstpl
or
dec
movsl
dec
dec
lahf
out
movsb
stos
adc
sub
lcall
dec
add
loop
inc
daa
mov
sub
inc
sti
jecxz
call
sub
adc
xchg
nop
xchg
sub
repz
movsb
jne
push
fwait
mov
testl
cli
ljmp
lahf
in
jge
mov
fcoml
mov
sbb
cmp
pop
clc
adc
roll
lock
mov
cmp
mov
mov
or
pop
lea
movsb
movb
push
mov
and
jle
pusha
shlb
cmp
jbe
or
outsl
xchg
cs
lcall
aad
nop
cmp
mov
pop
sub
jbe
test
aaa
push
mov
mov
adc
addl
iret
divl
loopne
adc
out
sbb
aad
negb
roll
fwait
mov
add
xor
popl
in
push
xor
jbe
cltd
cmpsl
pushw
nop
std
int3
rcrl
mov
adc
push
push
cmp
outsl
pushf
ss
dec
mov
jge
subb
rcl
cmpsb
icebp
les
mov
dec
in
dec
inc
imul
cld
xlat
sbb
sub
ret
adc
lret
mov
add
call
ficoms
lock
stos
or
add
sar
fcomp
addr16
push
mov
pop
mov
jg
jno
or
popa
jnp
iret
pop
int3
sub
dec
cmpsb
mov
jb
pop
movsb
shll
adc
imul
mov
sub
hlt
test
and
dec
lea
mov
out
shlb
out
shlb
inc
xor
push
mov
aas
and
cmpsl
cmp
imul
mov
arpl
mov
add
decb
fbld
dec
lahf
bound
clc
mov
daa
adc
push
out
mov
data16
call
sub
nop
stc
cmp
inc
ljmp
addr16
fistpl
add
dec
idivb
cld
shr
push
gs
add
loope
and
imul
xchg
fsubrs
inc
or
les
adcl
mov
jo
bound
icebp
adc
pop
push
or
shlb
xchg
add
or
mov
imul
jnp
adc
movsl
stos
ret
jae
sbb
cli
test
and
mov
jno
or
xlat
sti
xchg
add
cmpsb
sahf
sbbl
push
adc
mov
sbb
xchg
sub
xchg
xor
call
or
int3
dec
push
add
in
pop
sbb
pop
jp
mov
xor
xlat
jp
mull
add
cmp
imul
or
push
ss
fiadds
dec
clc
xchg
hlt
aas
jmp
mov
out
push
xchg
add
pop
sbb
scas
nop
sbb
inc
xchg
fisubrs
mov
mov
ljmp
push
mov
inc
outsl
sar
jo
fxch
mov
mov
ds
cmp
xchg
insb
cmc
dec
stos
rcl
jno
dec
rcl
fisubrs
sbb
adc
fisubs
inc
mov
and
mov
xchg
adc
in
or
sbb
cmp
ficoms
stc
fisttpl
xor
insl
sub
push
sahf
mov
mov
fadd
push
int3
arpl
out
fdivp
popf
jne
out
push
les
outsb
sbb
cltd
ja
ss
mov
imul
or
rorl
sub
in
pusha
popf
enter
xchg
mov
inc
sbb
xor
push
leave
lds
and
dec
out
addr16
inc
xor
inc
or
xor
add
lea
lret
jns
loop
popa
jge
cwtl
out
mov
inc
jg
xchg
icebp
repnz
mull
adc
out
rolb
pop
add
out
scas
and
push
testb
js
push
out
sbb
outsl
dec
pop
jno
je
mov
xchg
push
and
cmp
jnp
mov
in
and
xchg
jl
mov
adc
pop
sbb
movsb
dec
cmp
mov
sarb
mov
dec
ss
jmp
add
in
pop
clc
pop
ja
mov
push
cltd
lea
xchg
das
adc
pop
sbb
movsl
jg
mov
movl
cmp
into
cmp
movsl
xor
xlat
mov
enter
xchg
gs
dec
in
push
adc
mov
xlat
mov
lcall
mov
lock
jbe
ds
inc
cmp
pop
shlb
leave
and
leave
and
jne
ss
jge
data16
movsl
in
jge
sbb
xchg
insl
sbb
adc
repz
xor
push
or
sub
xchg
notb
mov
test
rclb
std
xchg
xchg
xor
sbb
sub
mov
cmpsl
ds
cs
dec
cmp
cmp
cmc
jbe
enter
movsl
pop
inc
adc
add
push
push
and
inc
jmp
in
add
mov
jecxz
repnz
test
dec
pop
adc
mov
xor
lret
out
push
push
movsl
or
loopne
data16
inc
xlat
daa
adc
push
rcl
or
mov
or
daa
xor
jnp
les
jmp
out
sti
cld
mov
push
jmp
sub
movsb
jo
lods
add
out
test
mov
sub
adc
adc
out
inc
in
mov
lret
fcoml
mov
jl
clc
xchg
repnz
or
mov
push
xchg
sub
outsl
push
xor
push
mov
js
icebp
pushf
lret
xchg
dec
jmp
sbb
ficomps
jle
dec
stc
popf
in
jp
ljmp
popa
in
pop
adc
cmp
or
ja
sbb
int3
and
push
cwtl
out
rcll
cli
daa
test
cmp
bound
pop
mov
jb
int
sbbb
adc
lods
inc
inc
cli
inc
inc
repnz
push
push
jno
xor
jne
sbbl
stos
pop
cmp
mov
mov
lds
sbbl
ror
or
stos
sub
lods
xchg
or
ljmp
inc
fsubrl
lret
lret
push
mov
into
dec
pop
stos
push
test
fisubs
xor
xchg
dec
push
aam
test
out
cld
mov
jno
mov
jl
cmc
out
call
jp
pop
push
sub
xor
mov
test
and
pop
push
xor
js
add
int
decl
repz
rcrl
pop
insl
sarl
stc
and
shll
sbb
sub
insl
test
lea
xor
enter
jnp
mov
inc
pop
dec
pop
imul
pusha
ss
scas
xorl
xor
rcll
sub
inc
lahf
xor
fs
icebp
mov
push
loope
cmpsl
leave
mov
xchg
stos
pop
iret
sbb
outsb
sti
leave
fldt
imul
push
lods
mov
xchg
mov
and
ss
call
cld
xor
jge
mov
insb
popf
imul
ss
xor
cmp
out
nop
sbb
adcl
add
or
sub
sbb
inc
ljmp
das
fcompl
sahf
inc
add
xlat
sbb
inc
popa
mov
mov
dec
mov
mov
out
push
mov
fcmovnu
cmpsl
cmpl
repz
dec
add
lods
lahf
push
rep
stos
es
fwait
std
jo
in
js
popf
jecxz
nop
out
fnsave
pop
hlt
pop
cmp
idivl
mov
subl
pop
inc
sbb
push
lock
in
adc
or
mov
mov
sub
fbld
jne
mov
mov
pop
dec
pop
cmp
lds
jp
cmp
jnp
mov
cmp
mov
jne
enter
fldl
shlb
test
push
test
lret
xor
call
sahf
adc
cmp
push
inc
popa
cmp
sti
xor
mov
outsb
or
push
jge
push
sti
bound
push
fcoml
mov
push
in
fisubrs
stos
xchg
aam
jae
cmpsb
jmp
inc
neg
lock
push
jb
xchg
outsl
repnz
dec
pop
sbb
int3
js
mov
ret
jo
mov
ljmp
stos
repnz
or
outsb
in
imul
adc
pop
jb
out
test
dec
or
ds
and
out
or
sbb
subl
out
xlat
pop
push
push
dec
xor
sub
jge
sub
not
inc
arpl
sbb
in
scas
rcr
int
and
mov
dec
sub
fld
xor
xchg
push
xchg
add
gs
pop
stos
adcl
aam
dec
nop
out
je
jecxz
xchg
jmp
dec
int3
mov
out
sti
lahf
stc
ljmp
stos
cltd
arpl
dec
fs
sahf
out
addr16
stos
lcall
mov
xor
mov
sbb
mov
adc
sbb
fwait
mov
lods
stos
jge
push
fmuls
and
jmp
imul
adc
push
daa
mov
dec
dec
ds
mov
sbb
movsl
jno
or
inc
lahf
fwait
xor
enter
fwait
or
xchg
iret
fstps
ret
ljmp
xchg
js
xchg
pop
mov
popf
stos
pop
xchg
addl
jae
pop
mov
into
sbb
movsl
lea
data16
sbb
sbb
mov
cmp
cmp
mov
mov
cld
xchg
push
lahf
mov
outsl
mov
cmpsl
sahf
cmp
je
sbb
stc
or
fs
inc
fs
popa
loop
ret
sub
cmc
rcrl
add
in
stos
fldenv
loopne
mov
add
jmp
sbb
xor
clc
or
add
popa
mov
sub
and
mov
shrb
lret
leave
dec
inc
add
scas
sbb
xchg
stos
ja
in
inc
adc
cs
sub
dec
lods
push
push
paddq
je
ror
xorb
outsb
sub
movsb
sahf
push
pop
mov
cld
ds
mov
lods
xor
xor
scas
sub
arpl
jns
inc
aad
lcall
pop
cmp
aad
adc
xchg
stc
lea
ja
xor
imul
mov
jnp
push
mov
ret
sti
stos
lret
or
insb
inc
dec
sbb
sbb
rcrl
push
leave
dec
or
add
rclb
add
stos
dec
clc
outsl
out
test
ljmp
imul
es
xorl
repz
pop
icebp
mov
loopne
mov
shr
test
and
xor
pop
push
out
hlt
push
outsl
xchg
shlb
xchg
fsubrp
rcll
lcall
xchg
ja
jae
sbb
xchg
pop
scas
sub
pop
daa
pop
insl
pop
xchg
adc
das
shrb
orb
data16
xchg
ds
and
popf
shrl
sbb
lret
nop
push
mov
xor
out
xor
bound
adc
sub
out
cs
or
movsl
jmp
xchg
inc
nop
pop
out
mov
sbb
jle
fs
dec
xor
call
or
das
add
fldenv
xor
jb
cmp
pushf
add
dec
jp
xor
nop
jle
test
cltd
add
xor
jg
adc
inc
and
test
and
fadd
xchg
fcmovne
jae
pop
hlt
popf
sub
push
je
decb
pop
es
popf
enter
orl
ss
jbe
inc
stos
lret
int3
mov
loope
cmp
insb
pop
push
sub
sar
inc
outsb
flds
and
pop
lcall
enter
cltd
addb
repz
mov
sbb
mov
aas
sbb
lahf
push
pop
add
hlt
mov
and
xchg
xor
adcb
outsb
shl
bound
lods
push
adc
int3
cmp
aas
shl
lds
ja
fbstp
shll
push
mov
aaa
lret
in
pop
test
jg
dec
xor
into
adc
pop
or
push
or
and
loopne
sbb
mov
insl
inc
push
pop
popf
lods
cmp
movsl
mov
mov
fsubrl
jne
cmpsl
jne
xchg
xchg
push
mov
aaa
aad
push
nop
enter
pop
bound
mov
repz
pop
and
mov
int
mov
pop
popl
and
xchg
xchg
mov
sub
outsb
sub
lods
icebp
and
push
or
lcall
sbb
push
pop
cld
adc
jg
cmpsl
lea
mov
imul
enter
sahf
pop
scas
mov
push
sub
in
sti
popf
add
fldcw
xchg
cmpb
or
cmpsb
jecxz,pn
sub
gs
mov
bound
in
xlat
outsb
stc
mov
xlat
or
or
inc
pop
aad
add
jnp
loope
inc
adc
dec
dec
pop
scas
ds
cs
lret
push
sbb
fistpll
sub
mov
add
ds
data16
pusha
dec
out
test
sub
loopne
mov
aam
adc
dec
sub
je
and
push
and
sahf
or
js
adc
ss
pop
dec
pop
jae
or
fldcw
hlt
loopne
out
movsb
addr16
in
lds
jmp
fs
or
add
out
lods
push
push
out
push
mov
jmp
add
jbe
test
insb
out
add
xchg
lds
push
out
mov
jb
jp
mov
cli
dec
mov
imul
loope
imul
and
fbld
sti
fldt
adc
inc
inc
lret
cmp
data16
mov
scas
cmp
pop
sub
cmpl
sbb
aas
mov
jg
pop
test
lret
jmp
push
shrb
in
jle
add
sahf
in
push
sti
inc
mov
mov
fidivs
xchg
jnp
add
lahf
mov
popa
or
jecxz
cmp
and
push
addr16
xchg
inc
repz
and
stos
repz
sbbb
cltd
xor
call
xor
push
jmp
out
fisttpll
adc
mov
xor
push
adc
sub
orb
dec
add
pop
ds
pop
aaa
mov
push
sbb
loop
add
xor
jb
cltd
push
clc
xchg
xor
xchg
push
lea
xor
stc
mov
jmp
mov
and
pop
mov
push
push
loopne
stos
cltd
xor
adc
lods
inc
inc
mov
cmp
add
and
dec
sub
scas
pop
adc
lcall
sbb
int
clc
dec
lds
insl
sub
fs
cmp
clc
xchg
ja
add
mov
cmp
and
mov
subb
ss
inc
imul
adc
adc
pop
or
into
inc
jno
sub
fprem
outsb
sub
mov
fnstsw
and
daa
xor
mov
add
cltd
sbb
sbb
push
inc
outsl
divb
push
push
fadds
test
dec
dec
out
mov
loope
rorb
lcall
jecxz
cwtl
adc
nop
stc
aad
jno
push
je
jne
mov
hlt
mov
es
fisubs
or
mov
mov
or
rcrb
out
lods
sbb
dec
fwait
cmp
sub
cmp
mov
sbb
arpl
cmp
ret
repz
std
or
push
jb
lods
std
or
pop
cli
or
xlat
cmc
lea
xchg
mov
lret
rcrl
cmc
dec
aaa
and
lsl
mov
adc
inc
sub
fcmovnbe
jl
sub
movsl
pop
cmp
pop
xchg
sub
and
xchg
sbb
gs
jns
into
repnz
subl
inc
loope
popa
pop
dec
dec
jnp
fnstenv
leave
jl
push
imul
roll
aaa
testb
test
int
dec
imul
cmp
mov
sub
adcl
or
shlb
xlat
ret
js
out
jns
pop
ffree
push
mov
adc
mov
les
shl
sahf
subl
adc
stos
mov
push
out
nop
out
aas
mov
jo
jg
sarb
mov
dec
mov
dec
mov
jle
push
call
jmp
das
push
mov
inc
mov
fcmovnb
insl
and
mov
adc
push
push
inc
push
stc
sub
or
loop
xchg
mov
mov
pop
mov
lods
jmp
mov
out
sub
int
cmp
xlat
fsubr
lock
test
cmc
ss
adc
jae
jb,pn
push
sub
push
cld
or
add
xchg
addr16
outsl
data16
je
lcall
push
in
cmpsl
loopne
rcrl
pop
jge
sub
jbe
dec
mov
cmpsl
pop
ds
dec
dec
popa
repnz
je
imul
xchg
mov
sbb
sub
andl
pop
pusha
rcrl
bound
adc
xchg
jns
sub
sbb
cli
cltd
mov
bound
rcr
aad
xor
xchg
or
mov
xchg
insl
pop
mov
pop
psllw
imul
pusha
push
or
into
xor
and
dec
adc
dec
lock
outsb
imul
adcb
das
gs
cmp
pop
push
xchg
adc
adc
outsl
enter
mov
lcall
mov
mov
rcll
in
adc
push
push
in
aam
ret
push
fs
push
jp
mov
xlat
xchg
pushf
mov
xchg
mov
ret
sbb
nop
aam
push
adc
xchg
add
ja
jno
fbld
cmpsl
and
inc
sbb
and
ds
inc
xlat
icebp
rorl
mov
inc
fdivrl
push
mov
sub
push
orb
dec
xor
mov
rcrl
pop
ljmp
mov
or
insl
scas
imul
xor
xchg
out
sbb
mov
js
pushf
dec
arpl
out
orl
popl
cs
jae
fmul
mov
or
cmp
pop
cmp
lock
mov
jbe
sub
inc
pop
dec
scas
and
jbe
dec
test
test
enter
dec
adc
cli
pop
fcoms
lcall
and
call
test
mov
pusha
stos
mov
push
cmp
addl
shl
ficompl
popa
mov
leave
mov
pop
sub
add
xor
mov
sbb
lcall
mulb
push
outsb
fadd
movsb
cmp
inc
shll
lret
push
mov
in
cwtl
or
out
popa
ljmp
insl
xor
add
push
push
hlt
xor
test
sbb
adc
mov
jnp
mov
imul
dec
ss
xor
imul
xchg
ljmp
and
inc
hlt
adc
mov
jecxz
jnp
jle
test
jl
mov
and
jle
push
in
xor
add
lods
fnsave
and
daa
ds
outsb
sbb
cmpsl
fs
insb
fisubrs
out
stc
jp
push
in
sahf
mov
mov
push
jg
push
popf
or
inc
enter
pop
mov
fcmovnb
fs
aad
arpl
pop
dec
fsubs
fs
or
jne
jo
imul
sbb
sbb
mov
cltd
inc
push
push
repz
pop
xor
aam
out
add
adc
shr
int
mov
mov
les
jb
aam
xchg
fdivl
mov
cld
shl
lods
and
jo
aaa
dec
mov
sub
loopne
lock
es
test
mov
mov
icebp
lods
int
dec
and
jp
lods
push
subl
mov
in
xchg
xor
or
adc
fisttpl
sahf
jle
hlt
adc
mov
fdivl
and
add
test
lds
rcl
cmpsl
ret
shl
enter
xor
outsb
scas
pop
mov
adc
test
movsl
test
leave
test
push
push
clc
ja
insb
cmpsl
loopne
xor
or
cmp
negb
orb
xchg
mov
xchg
cmpl
iret
mov
push
jge
out
rcrl
rol
and
out
jnp
ss
inc
xor
es
scas
mov
stc
dec
movsl
jns
xor
cmp
jnp
push
lock
mov
pop
add
psllw
stos
imull
fsts
jae
stos
sub
lret
xchg
dec
mov
gs
mov
mov
mov
push
cld
mov
lcall
inc
xor
sti
mov
cmpsl
xor
fisubrs
push
in
or
adc
mov
pushf
inc
int3
mov
fbld
pop
loope
pop
xor
jo
mov
cli
xchg
insl
sar
jecxz
pop
cmc
push
mov
mov
cli
mov
movsl
lret
rorb
cmp
pop
popa
rorb
out
insl
int
pop
adc
jo
loop
xlat
pop
rorl
mov
push
mov
loopne
mov
xchg
lods
dec
adc
pusha
scas
pop
imul
cli
or
stc
mov
rcrb
push
mov
cmpsb
lock
fistl
out
sub
inc
ljmp
cmc
and
arpl
das
jmp
inc
fstps
adc
cli
mov
out
sub
push
mov
mov
ss
data16
sbb
or
xchg
adc
push
sub
push
mov
int3
jno
push
imul
in
mov
adc
sub
adc
repz
and
call
imul
in
andl
xchg
push
dec
andb
mov
cltd
js
fists
mov
sub
repz
sub
aad
pop
in
pop
xchg
jle
or
mov
fsub
iret
mov
mov
fs
xor
sti
or
loop
cmpl
cmp
fucomip
popa
jns
jne
jns
loop
or
pushf
cwtl
stos
xchg
and
testb
sbb
or
jl
movsb
jge
pop
jge
or
imul
xor
movsb
jl
leave
inc
mov
and
outsb
negl
loopne
repnz
adc
sahf
xor
fcmove
mov
xor
sub
jmp
in
pusha
pop
std
loope
iret
adc
jae
cld
repz
push
mov
into
xchg
jns
gs
sbb
into
inc
and
js
movsb
mov
leave
mov
jb
inc
int3
push
mov
pop
inc
movsb
enter
fwait
jmp
ret
pop
lret
sub
outsl
loope
insl
nop
rorb
testb
push
mov
lret
test
inc
adc
pop
or
push
shll
out
cwtl
xor
sbb
xor
fstpt
jle
movb
je
push
xchg
and
push
add
arpl
lcall
xchg
stos
push
mov
add
loope
pop
cwtl
stc
fildll
imul
pop
cmp
pop
lock
cmpsl
xchg
addr16
xchg
data16
lret
jno
sub
call
push
stos
into
sub
aad
cs
xchg
stc
jmp
mov
mov
inc
ljmp
out
dec
and
jae
sub
ds
iret
sbb
icebp
dec
nop
subl
imul
push
mov
aas
fimuls
movsb
test
rcll
insl
pushf
mov
int3
pop
pushf
xchg
incl
mov
aaa
je
out
pop
fwait
sti
fcom
scas
test
and
adc
ficomps
add
push
mov
cwtl
or
jo
enter
sub
cmpsb
rcrl
daa
mov
cmp
or
add
pushf
pop
or
out
push
push
push
mov
repnz
push
rclb
sbb
pop
jecxz
lock
les
outsl
ret
ret
fisubrs
call
cltd
xor
fwait
sti
adc
pop
mov
mov
jns
fiaddl
flds
sub
xchg
sbb
movsb
icebp
cmp
xchg
fmuls
fstpl
in
jg
dec
adc
popf
iret
jge
int
pop
xor
out
popf
stos
sub
add
aad
or
insb
cwtl
or
ds
jb
fistl
or
jno
dec
jae
test
jp
push
dec
add
xlat
stc
adc
test
fmuls
mov
ljmp
mov
mov
mov
imul
push
mov
aad
push
popf
lods
mov
inc
cmpsl
dec
and
jg
into
gs
ror
sbb
in
pop
pcmpeqd
push
mov
insb
scas
loopne
adc
ss
sub
addl
shrl
xor
jo
jo
rcl
add
add
test
inc
fwait
pop
outsb
jmp
out
mov
ret
clc
mov
sbb
and
lahf
hlt
std
rcrb
sbb
inc
dec
lret
movsl
and
and
inc
loopne
push
testb
inc
fdivrs
pop
pop
or
idivl
hlt
push
ljmp
scas
ds
sub
xlat
repz
sbb
ds
scas
shrb
fidivrl
and
mov
xor
cmc
out
out
lret
int3
pop
out
std
aam
pusha
mov
inc
sub
jb
xchg
enter
mov
mov
sbb
inc
and
push
leave
push
rorb
popa
ja
je
mov
jno
mov
push
xor
sub
lods
mov
movsb
iret
andb
int
adc
shrl
mov
loopne
xchg
call
or
pop
test
repz
call
mov
loope
sub
in
cltd
adc
push
inc
jne
mov
mov
fisubs
adc
lret
sbb
into
cmpb
loop
jle
mov
jmp
sub
jo
push
pushf
test
lds
sub
push
in
enter
jp
cmpsl
stos
aas
outsb
pop
mov
cld
cmc
into
jb
sbb
mov
sahf
or
inc
pop
cmp
xor
lcall
dec
push
adc
clc
pop
push
stos
jg
lahf
or
flds
aad
jge
pop
mov
push
mov
cs
scas
lahf
aam
inc
movsb
pop
xchg
jle
xchg
mov
mov
jnp
call
in
dec
add
fwait
push
lods
jg
mov
loop
and
lcall
sti
push
in
adc
test
and
xor
and
mov
cmpsl
sbb
push
cmp
stos
inc
push
ja
loop
out
repz
lods
mov
mov
xlat
jb
mov
xor
out
xchg
xor
mov
ds
sbb
add
mov
push
popf
gs
or
insl
push
dec
push
mov
pop
in
fnstcw
mov
lcall
out
cs
mov
sbb
fisubrl
push
jbe
andl
push
cmp
cmp
out
idivb
pop
or
mov
stc
xchg
xchg
xor
das
push
mov
leave
and
cmp
sbbb
jb
loop
push
popf
xchg
adc
mov
fwait
sti
mov
dec
mov
iret
cmp
add
or
icebp
sbb
js
dec
insb
pop
repz
outsb
sbb
mov
lds
add
addr16
jne
cmp
inc
push
dec
pop
nop
leave
push
shlb
sbb
cmp
stos
icebp
or
pop
fbld
test
shr
mov
js
imulb
jle
add
jge
push
lods
cwtl
incb
cld
push
fidivs
idivl
fistpll
pop
cmp
push
jecxz
cli
enter
pop
push
sbb
insb
push
lret
mov
dec
or
xchg
in
xchg
add
xchg
in
popa
mov
pop
sbb
mov
xchg
insl
hlt
xor
cmpsb
test
leave
jbe
imul
scas
call
jg
mov
sbb
mov
repz
jecxz
iret
cwtl
iret
pop
inc
lock
stos
movsb
jecxz
pop
xlat
jg
jecxz
shrl
lcall
popa
adc
push
pop
or
cmpsb
movsb
cmp
bound
lods
xchg
and
dec
leave
sub
cli
imul
push
cmc
mov
pop
test
mov
js
fidivrs
sbb
mov
int3
and
add
lods
jmp
test
push
xor
mov
int3
stos
adc
popa
jl
js
add
inc
push
aas
js
and
pop
cmp
sub
mov
in
push
and
xor
push
imul
xor
jo
testb
xchg
sub
loop
aam
xor
mov
test
pop
ja
scas
lret
xor
jle
ss
add
xchg
leave
cld
insl
xchg
xchg
fistps
sbb
fs
lods
fdivrl
mov
jp
add
pop
mov
push
jmp
xor
or
pop
pop
dec
testl
xchg
mov
sti
or
out
or
add
sub
push
inc
sbb
jno
aaa
hlt
sbb
lods
fbstp
vxorps
out
cmp
push
ja
fsubrs
std
leave
orl
jg
in
sahf
test
sahf
and
mov
jmp
or
jl
cmp
xchg
add
push
ss
daa
lret
lret
pushf
gs
sub
mov
xlat
add
or
xchg
pusha
mov
bound
sub
xchg
test
mov
int
jmp
dec
mov
addl
xor
sub
sarb
sbb
loope
or
popf
adcb
aad
out
stc
popf
jbe
movsb
pop
stos
lea
cmp
clc
into
push
add
or
repz
mov
arpl
mov
test
dec
lret
je
in
mov
ds
adc
js
jns
je
xor
icebp
or
fisubrl
cmp
aas
movhps
sbb
mov
xlat
cmpsl
jne
fnstcw
pop
push
lcall
mov
fwait
jge
pusha
xchg
mov
mov
sbb
jns
mov
pop
push
inc
sub
cmp
mov
rcl
std
mov
out
leave
dec
clc
add
cmp
ss
push
add
out
pop
add
shlb
adc
xchg
push
add
shll
xor
sarl
and
cmp
ss
out
dec
ficompl
or
shll
nop
lods
xorl
jle
scas
stos
inc
loopne
cmc
movsl
pop
xchg
add
loope
arpl
incl
xor
dec
jecxz
push
repnz
xchg
pop
sbb
inc
fwait
push
sar
loopne
sbb
push
jl
fwait
sub
in
test
lods
jge
fsub
pop
ss
inc
adc
in
jns
jp
push
cmc
cmpsl
cmpsb
insb
mov
test
cwtl
pop
je
push
dec
mov
nop
pop
inc
fldenv
pop
out
or
cmp
mov
push
popf
mov
and
jmp
cmp
xchg
inc
imul
cld
cmp
loopne
sub
scas
mov
int3
ret
sub
xchg
fisubrl
xchg
ja
rcrb
sub
aad
and
rclb
call
stos
pop
std
in
xor
dec
bound
pop
aaa
hlt
shlb
pop
cli
inc
push
lea
in
sbb
xor
add
xchg
add
push
mov
or
imul
jbe
out
jne
andl
dec
jnp
outsl
inc
inc
mov
shl
jns
scas
push
pop
iret
mov
iret
xor
pop
cwtl
aaa
jnp
in
jnp
test
xchg
and
int
adc
mov
push
int3
pop
cmp
and
imul
stos
jl
push
mov
shlb
push
mov
cli
and
add
xlat
rcrb
lcall
lcall
or
pop
jle
sub
cmp
pop
dec
jne
insl
sahf
rcrl
dec
in
push
cmp
aam
scas
dec
adcb
xor
lods
mov
sti
inc
add
adc
sub
bnd
sub
pop
pop
jne
jmp
fcmove
inc
cmp
xchg
out
mov
int
loop
jecxz
fwait
add
xor
mov
add
cld
inc
enter
insl
call
pop
insl
call
or
pop
inc
lahf
jge
rorl
sbbb
inc
iret
adc
inc
fsubrs
rorb
xor
and
xor
daa
push
ss
divl
in
push
stos
inc
mov
fwait
fs
adc
leave
fsubrs
outsb
daa
js
mov
dec
sbb
in
add
jmp
mov
lods
push
sbb
mov
shll
ljmp
jno
cmp
inc
jne
pop
and
pop
pushf
stos
fidivrl
jne
out
inc
xchg
sub
aam
leave
fiadds
rolb
mov
mov
jle
mov
jp
into
and
punpckhbw
dec
lock
inc
mov
lret
cmpsl
adc
xor
or
sbb
and
or
popf
test
mov
or
adc
data16
jb
ud1
test
repnz
loopne
cmpsb
pop
cmpsb
mov
lock
lret
aam
or
imul
adc
mov
push
fwait
aad
xchg
sbbl
xchg
inc
mov
xchg
dec
scas
shlb
fmuls
out
popa
pop
inc
xchg
jne
jmp
pop
cmp
jge
movb
sbb
lods
rorl
xchg
pop
dec
xchg
cmp
sbb
inc
nop
mov
test
loope
repz
sarb
dec
outsb
xorb
pop
hlt
jae
test
pop
xor
leave
sub
lock
ljmp
add
xchg
pop
push
fcompl
call
movsl
fcom
jns
pop
shll
insb
xorb
into
ret
fcos
xor
mov
xchg
xchg
adc
repnz
repz
mov
push
popf
jp
in
call
out
xlat
cmp
dec
ret
add
mov
aaa
adc
fsubrs
stos
xchg
push
gs
movlhps
jnp
es
ljmp
adc
out
in
and
int
sbb
xor
xor
rcr
fstps
int
pop
out
scas
lods
jmp
push
mov
rcrb
jne
rcr
idivb
into
mov
subb
dec
stos
or
shrb
movsb
sub
and
out
imul
and
shll
imul
push
cs
cmp
add
es
mov
mov
arpl
cmpsl
je
and
je
cs
sahf
cmp
dec
fsubl
xor
dec
push
fdivs
inc
insl
dec
xor
fcoms
lret
rorb
lods
sub
or
mov
dec
and
adc
fs
xchg
xchg
and
mov
std
adc
addr16
pop
les
scas
fwait
std
loop
daa
jnp
int3
mov
rcll
adc
int3
ret
jno
loop
ds
insb
cltd
mov
sub
test
add
daa
mov
xor
jo
cwtl
push
adc
xor
clc
jmp
sbb
cmp
movsl
adc
loop
push
dec
jg
mov
add
das
push
aad
test
mov
add
push
jge
mov
imul
jne
fdivl
pusha
pop
mov
call
in
sbbl
mov
add
mov
and
aaa
cmpsb
or
mov
mov
add
push
pop
lahf
in
mov
push
jmp
dec
dec
fsub
cli
dec
cmp
fdivrs
jno
adc
out
lcall
lds
rorl
xor
and
adc
orl
sbb
cltd
std
sub
sbb
decl
pop
cmpsb
data16
out
aaa
fisttps
inc
out
sahf
sub
mov
lods
lods
jb
or
or
jg
cmp
insb
stos
jle
fistpll
dec
adc
movsb
js
cmp
mov
xchg
xchg
mov
fucomi
aam
mov
or
int
fsub
push
dec
dec
push
cltd
jge
sbb
mov
sti
mov
jns
stc
xchg
fidivl
inc
push
mov
pop
cmpsb
sbb
lock
out
dec
pop
and
jns
ds
outsl
dec
mov
pop
lods
pushf
pusha
xor
test
push
adc
iret
vandnps
sbb
imul
pop
cs
sub
std
cmpsl
ret
int3
or
sahf
pop
inc
insl
stc
leave
xchg
mov
lods
popf
sub
sub
or
mov
mov
popa
xchg
sbb
popf
or
loopne
addr16
nop
sbb
add
mov
int3
push
into
xchg
cmpsl
lock
pop
arpl
push
xchg
xchg
je
ret
jge
sbb
enter
mov
push
fsts
and
clc
xchg
je
stc
cs
and
xor
enter
movhps
insb
js
out
sahf
addl
jo
sub
sub
out
mov
int
push
lds
mov
mov
adc
mov
rcr
pushf
mov
sbb
fstl
outsl
mov
jns
xor
add
push
xchg
pop
scas
mov
fisubrs
jmp
or
or
ret
or
out
lock
out
lahf
imull
push
mov
mov
pop
inc
in
cmc
outsb
xchg
push
add
ljmp
enter
pushf
xrelease
add
int
dec
rcr
inc
pop
out
negl
pop
cld
enter
mov
jae
ja
shll
jp
fcomi
sarb
sub
daa
adc
inc
addr16
cld
xchg
pop
imulb
pop
fstpt
jecxz
jmp
lods
jo
test
pop
decl
fdivrl
push
loop
push
lret
push
mov
dec
mov
fs
mov
fwait
cmp
lret
hlt
popa
jl
fnstsw
mov
addr16
and
or
dec
mov
xchg
pop
rol
mov
xor
aad
andb
pop
sub
mov
inc
gs
inc
adc
das
sub
out
sbbl
mov
mov
std
fstpt
std
jo
cmp
dec
stos
inc
xchg
rcll
lea
insb
testb
or
cmc
mov
push
test
nop
pop
icebp
lds
mov
cs
mov
pop
or
stc
xchg
cs
push
mov
inc
push
lods
popa
xchg
adc
testl
mov
jo
cwtl
add
in
or
test
jl
test
jae
mov
repnz
adc
enter
cld
hlt
lds
pop
mov
insl
pushf
scas
adc
ljmp
call
scas
dec
inc
jnp
inc
xor
in
mov
fnsetpm(287
or
data16
stos
test
push
push
dec
xor
add
outsb
xor
jbe
pop
xor
std
jmp
into
jne
sbb
ficompl
jge
in
pop
aaa
cmpsb
jge
fdivrl
clts
add
aam
pop
mov
add
test
push
fmulp
enter
xchg
je
fucomp
push
movaps
inc
scas
lock
jae
sahf
and
xchg
jmp
movsb
adc
loop
jne
jle
jno
outsb
outsb
add
movsb
imul
jl
add
or
std
mov
dec
testb
jge
js
cmp
ss
push
inc
and
jnp
cmp
sub
lea
mov
pop
dec
lret
and
dec
mov
xor
loopne
outsb
mov
je
mov
xor
xlat
outsb
jae
lds
xchg
cmc
mov
cmp
mov
imul
pop
adc
xorl
lret
and
mov
add
xor
outsb
pop
pushf
sub
or
sub
mov
ss
imul
inc
addb
xlat
cmp
xor
nop
lds
push
mov
dec
adc
shl
jae
nop
push
int3
imul
add
jo
outsb
mov
sbb
xor
sbb
pushf
jb
ds
dec
movsl
adc
mov
push
dec
adc
mov
pop
adc
test
inc
and
xor
fistpll
int3
xor
fwait
dec
into
sub
mull
sbb
add
xor
push
lock
jmp
loopne
add
add
bound
sub
or
pop
cmp
xlat
gs
movsb
repnz
mov
add
imulb
in
add
or
xchg
dec
cmp
xcrypt-cbc
cmpsl
shr
mov
in
repnz
out
mov
add
test
fldl2t
xor
sarb
stos
xchg
pusha
into
fcoml
xor
mull
sbb
je
mov
mov
sbb
out
xor
ljmp
pop
push
pop
jmp
subl
lods
stc
sub
scas
mov
jecxz
sbb
xchg
jle
out
xor
pop
adc
jae
mov
jl
rorb
sub
mov
vorps
adc
or
outsb
lahf
dec
int3
ficoms
lahf
lcall
test
out
cmp
lds
and
push
pop
sub
mov
jp
pusha
push
out
push
mov
cld
cmpsl
bound
sub
xor
dec
ret
rorb
cltd
jo
ds
xchg
icebp
testl
popa
in
push
push
cwtl
push
enter
xchg
xchg
cs
mov
mov
movntq
jl
hlt
test
and
daa
shl
insl
add
out
pop
pop
or
sbb
add
mov
into
outsb
sbb
xchg
xor
push
jbe
xor
cld
xchg
xor
inc
bnd
out
movsl
icebp
sub
or
lcall
in
orb
sbb
lret
lods
out
dec
pushf
popa
cmp
aam
lcall
loop
mov
and
mov
pop
cmp
fcomi
sti
clc
mov
sub
pop
cmp
movsb
pop
shlb
shll
lret
aad
push
jp
mov
and
mov
sub
cmc
push
jmp
mov
leave
or
daa
ret
dec
into
sub
popa
cwtl
das
xchg
sub
fcmovnb
sub
cld
xor
xor
lds
pop
icebp
and
pushf
push
hlt
push
in
and
inc
mov
inc
dec
mov
mov
sbb
dec
repz
or
test
mov
mov
scas
pop
sahf
jb
mov
adc
inc
loopne
dec
cmp
stos
shrl
fsub
xchg
cmp
lcall
lret
lahf
jo
mov
xor
mov
stos
push
inc
xlat
xor
sbb
rcrb
in
dec
xor
inc
scas
push
push
lods
pop
jle
dec
fdiv
xor
or
sbb
imul
dec
testl
jecxz
pop
sub
dec
lret
fidivrl
xchg
fstps
push
aas
sbb
jae
pop
shr
ficomps
sub
push
std
xchg
lock
lcall
lea
cmc
addb
xor
mov
in
xchg
xchg
loopne
adc
jle
pop
cmpsb
push
pop
xchg
mov
dec
jmp
push
fisubs
dec
pop
dec
clc
cmpsl
orl
jecxz
mov
bound
lcall
in
cmc
je
cmp
lods
xchg
mov
sub
movsl
mov
jae
jo
sahf
xchg
into
and
mov
fwait
mov
cmpsl
mov
arpl
add
mov
daa
test
mov
adc
outsb
xchg
rclb
xor
in
pop
jge
jp
in
fwait
movsb
cs
mov
orl
pop
dec
aam
add
scas
test
lret
mov
sahf
stos
shrb
push
mov
jl
test
jno
or
mov
xor
bound
push
jbe,pt
mov
dec
pusha
lcall
and
push
mov
fisubs
in
or
cmp
std
pusha
daa
jo
cmp
jecxz
cld
cltd
repnz
sbb
mov
insl
jge
jmp
jae
dec
mov
fidivrs
out
and
fs
icebp
push
fcmovnu
mov
into
mov
idivb
inc
sti
dec
in
jecxz
in
jo
mov
scas
xor
jno
fmuls
inc
in
inc
mov
insb
lea
mov
push
in
mov
sbb
fs
ljmp
jge
or
nop
jl
aas
cltd
cs
stc
jp
and
adc
pop
sti
mov
rolb
push
aaa
insl
loopne
mov
sub
xchg
mov
prefetch
or
jb
sub
push
mov
mov
pusha
scas
lret
enter
add
or
xchg
jg
cmpsb
enter
pop
ljmp
pop
stos
cmp
sub
cmp
rolb
xor
cld
xor
call
ss
cmp
mov
movsb
jecxz
or
mov
or
lds
out
js
aad
and
jmp
test
mov
mov
jnp
outsb
mov
daa
ljmp
push
and
cmpsb
pushf
jnp
test
std
adc
xchg
aad
in
rorb
inc
dec
mov
xchg
xlat
jp
and
pop
call
pushf
push
lahf
aam
mov
outsl
leave
xchg
dec
sub
push
cmc
jae
sbb
mov
jbe
jg
xchg
cmp
lods
add
sbb
fists
xor
sbb
sahf
lods
inc
jns
bound
mov
cltd
xor
jle
push
std
inc
std
or
mov
xchg
jo
jnp
mov
xchg
fildl
mov
pop
jg
jmp
push
mov
cltd
mov
add
enter
cmp
daa
xchg
popa
movsb
sbb
add
mov
daa
inc
adc
inc
mov
and
cmc
jo
dec
pop
popf
or
repz
ss
out
ret
xor
popl
and
cmc
push
insb
xor
or
sub
jecxz
jl
jo
cmp
mov
negb
push
das
and
mov
insl
dec
sbb
adcl
push
ja
push
mov
mov
adc
dec
mov
jmp
cmc
pop
imul
jne
push
add
testl
cld
cmp
cmc
jmp
pop
out
mov
lock
adc
insb
and
inc
hlt
mov
sbb
push
xor
mov
xorb
jnp
sub
mov
add
pop
or
and
sbb
pushf
cmp
test
fsubrp
aaa
jp
movsl
test
inc
sub
jne
adc
mov
mov
rcl
push
in
mov
xorl
mov
aad
mov
es
rcrl
stos
push
in
shrl
cmpsl
test
mov
decl
cwtl
outsb
mov
fisttps
fsubl
test
lret
sti
jb
jns
inc
scas
cmp
je
mov
in
sbb
ds
lock
ret
lcall
mov
aad
inc
add
sbb
lods
lret
outsb
add
mov
sbbl
add
sahf
daa
cmpsl
jno
pop
dec
and
mov
xor
inc
neg
jmp
mov
push
jne
mov
cmp
jo
mov
adcw
aaa
push
hlt
push
xor
cmpb
cmp
xor
mov
pusha
call
scas
call
or
and
cmp
dec
or
aas
add
jb
add
push
xor
int3
sub
sbb
push
jo
les
mov
ljmp
aad
leave
into
push
addr16
ja
dec
loope
sub
shrl
fisubl
pavgb
mov
ret
or
push
fnstenv
shll
rol
pop
inc
loopne
dec
loope
or
sbb
call
outsl
cmp
mov
xchg
jno
xchg
ja
xchg
test
xchg
mov
movsl
and
push
cltd
mov
leave
iret
fs
mov
push
push
fidivs
out
test
out
cld
sahf
dec
or
outsl
xorb
jmp
insl
jge
ss
seta
adc
loopne
fistps
sub
pushf
xchg
cld
cld
es
scas
dec
inc
mov
fistpl
mov
push
or
inc
loope
fnstsw
add
ss
dec
adc
jns
dec
pop
lock
sbb
divl
jecxz
jp
push
mov
int
in
cld
stos
cli
push
inc
push
add
ud1
sbb
jcxz
cwtl
call
mov
pop
dec
mov
sub
cmp
push
jecxz
jbe
mov
rol
add
fisubrl
cmpsb
mov
xor
mov
mov
mov
incb
scas
enter
shr
bound
push
in
lcall
sahf
jbe
adc
stc
cmp
add
jnp
sbb
movsl
test
dec
sub
je
imul
sbb
pop
sub
fstpt
mov
ljmpw
pop
in
cmp
pop
jle
adc
or
mov
sarl
add
pushf
cmpl
pop
cmpsl
lds
xchg
xchg
imul
iret
xchg
pop
cmpsl
cwtl
gs
mov
and
rcl
cs
and
xchg
in
adc
sub
adc
dec
mov
ja
push
loop
add
push
cwtl
inc
and
insb
outsl
jbe
shll
mov
add
pop
mov
shll
inc
jle
mov
test
jp
push
aad
sub
clc
xchg
inc
dec
sub
pop
push
lock
ljmp
out
mov
adc
pusha
stos
vmwrite
test
inc
into
aad
and
dec
mov
mov
or
ljmp
pushf
dec
roll
loop
scas
cmp
push
jne
popf
jns
pop
repnz
mov
fcoml
adc
gs
push
fwait
mov
cmp
pxor
int3
mov
mov
sbb
cmpsl
mov
jp
movsl
adc
in
push
and
jo
daa
lds
or
pop
dec
fucomp
add
xor
jecxz
dec
mov
mov
dec
mull
in
ds
cmpsb
push
dec
fs
cwtl
dec
ds
and
mov
inc
test
push
jmp
lcall
lret
adc
aaa
dec
cmp
dec
es
push
adc
aam
add
mov
xchg
mov
fiaddl
xchg
daa
inc
insl
cltd
pop
push
push
jb
pop
sub
add
cli
push
push
scas
jns
int
bound
in
out
leave
xor
in
enter
cli
adc
testl
sbb
inc
push
daa
pop
ljmp
cmp
dec
mov
pusha
aaa
jae
enter
cmp
jp
mov
and
ds
mov
ljmp
adc
adc
outsb
movl
adc
andps
lods
or
fcompl
outsb
add
test
fistpll
inc
fiaddl
fistpll
push
icebp
movsb
dec
pop
adc
and
cmpsl
shll
adc
cmp
call
iret
xchg
sub
sahf
pop
pushf
hlt
out
ret
xchg
adc
mov
pushf
fisttpl
push
scas
in
test
inc
mov
inc
jae
shll
mov
iret
test
mov
or
enter
outsb
inc
add
mov
lods
outsl
pop
outsl
xor
adc
rcrb
mov
push
push
lret
mov
cld
in
pop
lods
inc
mov
add
test
fisubrs
dec
jecxz
shrb
aas
clc
xchg
imul
or
ja
jbe
jge
daa
ja
mov
test
cmpsb
or
bound
idivb
lods
cmpb
int
pusha
jmp
inc
mull
outsl
jbe
dec
add
adc
cld
lds
mov
sub
pushf
pushf
add
push
dec
lods
mov
cltd
hlt
addr16
insb
xchg
lds
jecxz
inc
cmp
jecxz
ds
xor
cmp
cs
and
or
aas
faddl
in
aas
or
jae
rcr
mov
lahf
sub
lock
cmc
out
mov
cld
xorl
mov
movsl
out
pop
dec
push
dec
xchg
add
iret
lock
ret
xchg
dec
pop
movsb
dec
push
push
pop
cmp
addr16
daa
add
mov
imul
ss
xlat
dec
mov
sbbl
or
inc
add
ds
sub
mov
mov
cmp
sub
inc
or
mov
stos
leave
add
mov
mov
test
pop
jne
pop
aad
int
jmp
lahf
mov
push
adc
cmpsl
stos
in
in
out
movnti
lret
out
ret
or
push
cmpsl
sarb
xchg
inc
enter
cmp
sahf
cmp
xchg
es
aam
xor
jnp
sar
fdivl
inc
xlat
cmpsb
sbb
or
cmp
inc
pop
outsb
mov
aad
aam
aas
outsb
and
cld
or
dec
loope
dec
pop
xlat
hlt
call
pop
cmp
repnz
stos
cs
icebp
xchg
cld
cmp
push
stos
jmp
jno
cmp
and
sahf
shl
jnp
sub
test
ss
subl
enter
jg
pop
mov
mov
cmp
lea
lret
jnp
loope
out
cli
pop
push
push
call
or
mov
pop
popf
fstpl
mov
mov
dec
imul
cmp
fdivp
roll
push
loope
push
sub
dec
push
mov
loopne
cli
loop
fistl
sub
pop
mov
or
sub
cmp
jns
in
cmp
stos
pop
fucomi
icebp
ret
inc
cmp
xor
lahf
ja
mov
cld
sahf
xor
and
test
neg
dec
add
lahf
add
mov
les
mov
aas
shll
enter
inc
daa
dec
push
cmp
mov
lea
shll
aad
mov
in
or
fstps
jnp
xchg
mull
int
fsts
cs
jb
lods
inc
cld
xchg
pusha
adc
xchg
andl
cmp
adc
dec
inc
inc
fnsave
outsl
imul
push
adc
xor
push
insb
test
iret
andb
in
fiadds
inc
pushf
mov
mov
mov
lea
add
repnz
xchg
ret
cwtl
xchg
icebp
stos
mov
popf
cmp
pop
lock
xor
mov
push
rcrl
les
call
cs
icebp
lea
jmp
test
addr16
cmc
jo
adc
pop
shlb
jle
sbb
pop
xchg
lahf
stos
pop
sbb
lret
es
test
lret
addr16
pop
add
movsb
push
jmp
test
cmp
push
xchg
into
fcmovb
xchg
out
sbb
int3
push
add
mov
fldl
iret
or
in
loopne
call
lds
add
or
mov
mov
cli
dec
cli
pop
div
outsb
ret
jp
mov
dec
inc
xchg
push
adc
dec
cmp
mov
call
sbb
or
rcll
mul
lea
mov
push
and
xor
pop
pop
movsl
cmp
jl
sub
shll
nop
sub
pusha
inc
fnstenv
ds
notl
add
repnz
inc
fidivs
jecxz
ja
lcall
add
jns
pop
and
mov
out
push
push
sbb
xor
xor
sbb
pop
push
in
and
and
loope
jmp
out
jns
sahf
mov
ret
pushf
and
push
xchg
sbb
pop
dec
mov
cltd
lods
jp
or
xor
sub
loop
push
shrb
push
or
dec
jl
pop
lock
jp
out
lret
xchg
arpl
or
sbbb
cmpsb
jecxz
loopne
jmp
inc
mov
pusha
stos
inc
lock
clc
push
icebp
jmp
mov
mov
cs
lods
and
testl
mov
mov
xchg
xor
mov
xor
cld
out
xor
inc
xor
push
popf
int
cli
push
movsb
das
repnz
cmp
jmp
loopne
es
test
inc
test
add
or
pop
icebp
xchg
sub
into
push
jmp
lea
aad
out
test
fnstenv
mov
adc
push
mov
jbe
cld
iret
out
push
subl
adc
xor
sub
push
and
pop
xchg
sub
cmp
push
mov
testl
xor
jle
jge
cmpsl
mov
xchg
jo
pop
punpcklbw
push
stc
nop
dec
jmp
out
cmp
push
mov
xor
adc
jl
push
mov
mov
pushf
inc
dec
xlat
jo
pop
sahf
ja
pusha
mov
lcall
mov
clc
xchg
mov
shrl
fisttpll
xor
je
fistpl
xchg
outsb
mov
ss
adc
cld
sub
addr16
xchg
test
xchg
push
xor
jns
add
push
popa
xchg
sub
ret
xor
mov
jae
sub
xor
inc
ljmp
jno
cmpsl
mov
sub
mov
push
or
pop
lcall
rcl
repnz
mov
inc
pop
hlt
dec
sub
and
sti
insl
lock
lcall
and
psubd
shr
jo
and
sbbl
fs
mov
subl
pop
push
cmp
jnp
mov
int
adc
andb
xchg
pop
mov
adc
test
mov
js
xor
sub
mov
repz
mov
ficompl
sbb
dec
inc
fldt
pop
mov
xchg
mov
mov
inc
aad
cmp
div
movsb
rcrl
cmp
fld
mov
ss
pop
and
popa
adc
jl
fsubrs
push
popf
pop
out
std
mov
es
repz
push
add
mov
sub
push
repnz
jg
icebp
movsb
mov
jg
js
and
jnp
dec
push
into
push
fcmovnb
xor
lret
mov
adc
dec
popf
mov
adc
mov
pop
test
lcall
and
ret
hlt
cmp
inc
ljmp
xor
sbb
lahf
in
and
mov
push
icebp
movsl
js
testl
in
xchg
out
call
dec
repnz
cmp
cmp
pop
in
addl
mov
ja
mov
mov
mov
inc
push
cs
pusha
mov
in
push
cmpsl
aas
ret
mov
and
and
enter
xor
xor
fsubs
int
cmc
push
pusha
jnp
out
add
adc
mov
push
jae
xchg
mov
pop
cmp
xorl
add
inc
sub
outsb
jge
cltd
mov
shll
jmp
push
scas
insb
aaa
fwait
mov
inc
fldcw
cld
hlt
aaa
sti
pusha
push
bnd
imull
inc
fildl
arpl
xchg
int
js,pt
lds
lods
dec
jecxz
push
pop
dec
push
es
mov
cld
adc
xlat
push
loope
push
clc
and
pop
cltd
xor
pop
cmp
aaa
mov
jns
jmp
adc
add
xchg
movsb
push
xor
test
or
add
int3
pushf
mov
cmpsb
jl
fsubs
and
push
cltd
cmpsb
inc
ficompl
jb
push
push
dec
xchg
inc
cltd
repnz
je
pop
sahf
jbe
lds
dec
loope
xor
mov
adc
adc
lcall
push
cwtl
test
dec
dec
outsl
mov
lret
bound
mov
xchg
sub
cmp
cmp
in
cmp
push
inc
fsubr
icebp
push
insl
rol
divl
aam
xlat
mov
sbb
cli
lods
pop
push
mov
ffree
xor
or
xor
push
sub
scas
and
xor
jmp
loope
inc
dec
or
xchg
dec
dec
xchg
test
arpl
xchg
xchg
pop
sub
lcall
pusha
xor
out
stc
mov
add
sbb
fisubrs
xchg
add
cmpsl
fldl
adcl
and
arpl
sub
mov
jmp
pop
stos
mov
mov
shll
mov
or
mov
or
aad
test
or
lret
mov
bound
mov
repnz
movsb
jns
mov
xchg
mov
rorl
add
and
inc
bound
mov
inc
or
lret
daa
mov
lret
sti
or
enter
lds
repnz
popf
adc
xchg
sub
dec
outsl
daa
loop
sub
addr16
mov
clc
das
cmp
cmpl
sub
or
nop
add
stos
mov
sub
mov
mov
decl
movsb
push
xchg
or
jl
out
mov
xchg
es
je
mov
xor
xchg
outsb
sbb
stos
and
out
leave
in
das
and
adc
insb
push
pop
pop
imul
imul
test
push
iret
mov
mov
push
in
stos
mov
add
jge
daa
pusha
jp
jns
out
cmp
xchg
lret
es
pop
cmp
jae
jb
imul
xor
mov
mov
andl
or
mov
sub
cmp
clc
dec
ds
jne
pop
repz
push
flds
test
inc
push
arpl
adc
lcall
loopne
sub
out
ja
dec
ljmp
inc
pushf
iret
xor
mov
arpl
and
scas
add
es
dec
movsb
fs
fstl
mov
orl
mov
add
in
gs
add
in
push
ret
popf
pushf
mov
stc
rcr
pop
out
or
cmp
inc
in
out
repz
lret
outsl
xor
std
pusha
int
insl
or
mov
pushl
xchg
stc
insb
add
loopne
xor
movsb
adc
push
sub
add
cwtl
xor
movsl
pop
fdivr
pop
jbe
inc
sub
dec
xchg
dec
cmp
pop
adc
inc
mov
fucomp
shl
or
adc
lods
stos
inc
mov
ss
into
pop
xor
bound
push
inc
repnz
add
pop
cmp
shrl
out
cmp
jne
mov
xor
iret
je
sbb
pop
xchg
inc
ja
not
pop
daa
push
sbb
shl
sub
daa
fcompl
pop
leave
push
mov
stc
add
push
jnp
lds
mov
jp
mov
fucomp
pop
xchg
mov
jl
icebp
ds
xchg
sti
jbe
pop
insb
mov
sbb
and
shr
adc
xchg
jecxz
loop
iret
pop
cmc
sbb
jl
movsl
push
push
icebp
in
dec
pop
lock
sub
push
add
out
ljmp
cmpsl
lods
add
mov
mov
insb
aam
dec
lods
adc
rep
xchg
mov
or
rorl
push
jl
dec
add
sbb
dec
inc
mov
test
mov
push
xor
repz
dec
adc
inc
outsl
lahf
rclb
xchg
cwtl
out
or
addr16
fcomip
lcall
and
mov
xchg
sbbl
insl
jo
gs
pop
sub
sub
inc
scas
sbb
xlat
scas
out
push
jmp
add
xor
mov
xchg
inc
sarb
mov
mov
sbbb
dec
dec
in
imul
negb
jmp
mov
ja
loope
ret
aas
sub
sub
lods
sbb
jae
cwtl
in
inc
ljmp
pop
fdivrl
dec
adc
inc
pop
dec
jne
pop
stos
pop
inc
or
adc
popa
js
xchg
push
movsl
xchg
dec
mov
cmpsb
rcrb
mov
loop
das
hlt
mov
repnz
mov
xor
inc
push
insl
mov
lods
push
sbb
bound
test
add
icebp
cmp
jno
pop
lret
mov
ret
and
mov
mov
pop
out
xor
iret
repz
outsb
add
out
jno
scas
push
sub
dec
lods
inc
fiadds
out
jg
fldenv
cltd
das
cmp
add
mov
fwait
mov
push
and
push
sbbb
inc
push
cmp
cmp
lcall
cmpsb
sbb
add
mov
jmp
int
cmp
enter
leave
mov
push
ss
lahf
lcall
outsl
movb
clc
nop
sti
or
sub
into
add
arpl
pop
into
add
shll
dec
cmpl
leave
jnp
dec
rcll
inc
pop
dec
mov
jp
ljmp
ret
insl
jnp
outsl
and
dec
or
push
push
out
pop
es
inc
loope
jns
fnstcw
iret
or
push
jne
pop
lods
inc
aad
js
hlt
test
fadds
jg
xor
pushf
lods
ss
scas
mov
cmpsb
fadd
sub
loope
adc
jp
jmp
inc
cwtl
and
repnz
ljmp
push
or
or
xor
pop
cmp
imul
pop
lret
out
push
push
sub
je
and
call
loop
mov
cmp
incb
cmp
ret
and
and
jge
frstor
jae
pop
fdivp
mov
int
rol
shlb
add
das
or
out
push
xlat
pop
and
clc
testl
sbb
mov
mov
xchg
and
push
or
rcll
in
movsb
cmp
outsl
pop
in
add
adcl
pop
stos
mov
mov
xchg
frstor
jmp
xor
mov
jne
pop
iret
jecxz
mov
mov
ret
add
int
sbb
data16
or
ja
mov
push
or
ret
adc
sub
jp
or
dec
jo
jnp
mov
dec
mov
push
sbb
lds
fnstsw
push
mov
jl
mov
int3
jns
jl
out
shrb
dec
fists
and
cmp
imul
shrl
movsl
cmp
pop
shrb
adc
mov
jb
jo
or
mov
xchg
jl
mov
pop
sbb
andb
and
scas
pop
ljmp
gs
cmpsl
dec
jg
and
scas
jns
cmc
lahf
push
adc
xchg
sbb
movsb
out
jnp
fisttpl
cmp
sub
std
xchg
and
xor
shll
shrb
in
icebp
pop
fcoms
jbe
xor
ficompl
mov
push
jae
aam
jmp
sti
push
call
dec
pop
inc
sti
jl
jmp
push
xlat
xchg
aam
jne
and
outsw
inc
add
mov
lock
sbb
dec
push
sti
jle
loop
inc
leave
movsb
orb
sub
dec
sub
mov
sub
jns
cmc
ljmp
outsl
test
add
or
adc
and
push
aaa
lods
jg
cmp
lcall
cwtl
rcrb
cli
popa
sub
pop
stos
jns
adc
scas
xchg
clc
mov
orb
insl
sahf
mov
es
je
push
jns
adc
cmp
or
cltd
lcall
add
mov
xchg
mov
ret
daa
push
int
sarb
jle
or
pop
js
mov
mov
pop
shll
pop
xor
popf
incb
ret
jo
add
int3
mov
push
dec
pop
jp
test
fsts
pop
das
cmp
aad
jno
lcall
sub
repz
imul
cmp
dec
test
nop
out
jnp
int3
add
test
push
fildl
loopne
mov
adc
aaa
sti
or
enter
flds
pop
jbe
outsb
js
mov
insb
mov
sahf
mov
out
gs
cmp
mov
gs
mov
negl
leave
mov
mov
aaa
sbb
in
mov
mov
jnp
arpl
xor
aaa
out
xor
lcall
mov
ss
pop
lods
imul
jl
lods
lcall
sbb
in
sbbb
or
sbb
gs
xchg
lods
test
push
or
pop
mov
gs
or
inc
ja
loop
mov
dec
sbb
sbb
data16
cmp
lods
push
jmp
or
sahf
jmp
iret
add
inc
jecxz
test
popf
and
adc
insb
xchg
stc
cwtl
lea
cli
pop
dec
mov
stc
sbb
shrl
pop
rorb
mov
jbe
or
push
stos
insb
adc
mov
cmpsl
or
sbbl
shlb
inc
cmp
out
sahf
pop
enter
scas
and
leave
test
pop
arpl
in
lcall
mov
push
dec
filds
mov
loopw
dec
lods
or
mov
cmp
pop
jae
mov
imulb
test
push
mov
or
sub
jno
jecxz
cmp
sub
pop
pmulhw
mov
push
iret
xor
push
cmp
sub
push
cmpsl
lds
stos
out
push
and
push
in
test
je
inc
out
sbb
pop
pop
xchg
mov
cmp
jmp
xchg
push
inc
mov
std
ss
mov
xchg
dec
lods
les
jbe
mov
and
add
xor
movsb
pop
cmp
stos
jge
xchg
mov
stos
loopne
sti
fbstp
inc
clc
sbb
pop
cmc
clc
cmp
sub
stc
dec
jl
jp
mov
cmpsl
out
cmp
rcr
rcll
dec
fnstenv
dec
push
add
jle
leave
adc
popa
bound
dec
dec
and
push
inc
xor
test
roll
cmpsl
js
jge
sbb
aad
enter
fisubs
cli
mov
jnp
xor
movsl
dec
dec
push
cmc
pop
mov
pop
push
lock
lods
aam
or
imul
pop
xor
and
fldt
inc
mov
cltd
push
insl
dec
jmp
aas
imul
popf
stc
bound
xchg
add
adc
insl
jg
std
jge
sti
lret
xor
stos
flds
fcoml
push
pop
mov
adc
rclb
push
leave
stc
int
inc
cmp
shlb
pusha
ds
int3
lret
pop
dec
xchg
pop
mov
inc
dec
cmpsl
xchg
push
pusha
inc
sbb
out
das
jle
enter
gs
pop
int
cmp
push
imul
adc
sahf
insb
shrl
jne
jp
mov
and
out
mov
fwait
ret
fidivrs
sub
inc
data16
stos
push
jmp
pop
inc
incb
pushf
and
push
in
add
push
testl
ljmp
cmp
ret
mov
int3
insl
and
xorl
lods
mov
adcb
lods
adc
cmpsl
push
dec
addr16
cmp
mov
std
test
cmp
mov
fadd
ret
andb
rclb
decb
sahf
cli
daa
mov
sbbl
out
jo
push
dec
lret
xorl
gs
adc
test
ret
xor
pop
xchg
push
inc
fsubl
je
push
std
int3
arpl
cld
sbb
cmp
ljmp
and
adc
es
outsb
mov
mov
mov
dec
jl
sub
mov
pop
js
xor
push
add
push
jle
out
loop
fs
add
es
sub
out
sub
lods
sub
pop
fadds
test
push
mov
push
inc
cmp
add
mov
pop
inc
arpl
lods
push
fwait
rolb
push
mov
jmp
lahf
stos
cltd
hlt
pop
aam
xchg
pop
sub
pushf
push
push
push
mov
cltd
loopne
pusha
loop
fldt
xchg
fyl2x
pop
jle
cmp
push
daa
lahf
inc
mov
push
leave
mov
fidivl
mov
push
push
mov
shrb
aas
mov
add
int3
lock
in
lret
mov
sub
pop
dec
add
inc
enter
test
sub
sub
inc
subb
mov
mov
cmpsl
lret
loope
push
jne
popa
pop
add
bound
and
out
xor
mov
test
cmpb
clc
push
push
jg
std
sub
es
push
pop
and
adc
ret
fucomip
sub
in
sbb
mov
test
mov
movsb
out
mov
and
mov
push
dec
lods
out
push
xor
xchg
rorb
xlat
dec
inc
sti
aaa
jnp
add
push
mov
bound
out
test
mov
fbstp
lea
mov
sahf
mov
into
push
push
add
pop
mov
push
push
sub
cwtl
mull
out
cmpb
lret
int
cltd
sbb
or
sbb
sub
lret
out
sub
mov
mov
repnz
lds
ljmp
je
or
shrl
cmp
sbb
pop
mov
add
mov
mov
jno
dec
mov
pop
adc
bound
mov
loope
pop
jbe
test
cmpsb
sub
scas
fdivl
mov
cli
adc
in
xor
test
enter
ljmp
loope
testb
xchg
mov
mov
xchg
xor
and
fidivrl
jne
insb
mov
in
movsb
mov
adc
stos
push
pop
adc
rsqrtps
lahf
jae
mov
into
sub
push
into
mov
notl
out
or
fnsave
push
or
add
dec
lahf
call
mov
jge
sbb
cmp
stos
dec
in
lcall
popf
cmc
adc
ds
jge
js
pop
mov
cwtl
mov
aad
xor
sbb
inc
in
je
mov
test
jmp
add
sbb
push
call
icebp
lock
js
inc
mov
dec
clc
dec
xchg
cs
jb
inc
mov
jmp
mov
mov
and
xchg
mov
push
fldcw
fsubr
add
and
cmp
cwtl
push
dec
fldl
push
outsl
sahf
mov
int3
test
xchg
in
xchg
test
int3
xor
or
inc
insl
inc
test
jp
and
inc
pop
hlt
faddp
jecxz
jp
push
or
and
mov
lods
aad
or
das
mov
jne
fcmovbe
xchg
sub
stc
xorb
cs
jno
cmp
jge
adc
sbb
inc
sub
sbb
dec
aaa
mov
cmp
mov
or
mov
repnz
push
pop
fcompl
push
xchg
fld
ficoml
pop
icebp
mov
jb
mov
adc
inc
sub
rcrb
inc
lcall
inc
sbb
lock
ret
stc
pop
fwait
cmp
xchg
gs
call
repz
test
dec
fidivrl
mov
imul
mov
add
insl
cmp
push
arpl
ljmp
xor
sbb
stos
jno
xchg
shl
cmp
cmp
fcomip
movsl
pop
repz
cmpb
aaa
lods
inc
imul
sbb
lahf
sub
ret
cli
jecxz
inc
sub
add
push
push
sti
xor
sub
xlat
imul
mov
cwtl
cmovne
clc
xchg
sbb
addr16
sti
mov
mov
add
add
mov
or
cli
xchg
divb
enter
inc
ds
lods
dec
cmpl
dec
frstor
mov
mov
mov
and
mov
fcmovne
loope
add
push
xchg
pop
mov
cmc
mov
mov
dec
inc
popf
repnz
push
push
lock
jns
dec
ja
scas
sti
xchg
pop
sub
loop
jmp
cmpsb
movsb
outsl
sub
or
stos
or
cmpsl
push
push
mov
icebp
je
insl
pop
call
hlt
push
mov
test
push
dec
sbbl
mov
push
and
stos
mov
xchg
sub
movsb
cmp
and
js
aaa
into
mov
les
adc
inc
sub
fdivr
cmp
iret
gs
mov
repz
in
push
xchg
sub
sub
pop
pushf
jle
mov
into
aad
addr16
pushf
xlat
cmc
lds
xor
ret
mov
pop
or
push
cmp
pushf
gs
mov
dec
mov
rcl
stos
mov
cltd
pop
dec
inc
cwtl
cmp
rcll
aas
sub
testb
cld
ret
pop
fidivrl
mov
lahf
and
xor
leave
mov
or
xor
xor
and
mov
adc
mov
iret
inc
sub
std
in
data16
cld
test
adc
mov
sbbl
decl
jmp
dec
dec
outsl
popf
sbb
cmp
xchg
cmp
cmp
test
sti
sbb
shll
add
dec
pushf
xor
cmp
test
sbb
and
mov
xlat
lret
mov
pop
out
fwait
inc
xor
testl
cmp
dec
call
cmc
push
fcom
in
mov
loopne
mov
dec
xor
xorl
movsl
add
mov
xlat
adcl
sub
lock
fldt
mov
es
push
scas
dec
cmp
sbbb
jns
pop
icebp
push
fiaddl
jns
push
push
mov
jns
in
push
add
dec
in
bound
mov
jbe
mov
std
and
inc
shrb
mov
cmc
test
adc
outsb
jl
repnz
in
cli
push
rcrl
sti
arpl
lea
in
cmovl
xlat
andl
or
cmp
test
loop
jmp
jne
std
dec
mov
sub
aad
adc
inc
pop
pusha
std
decb
decb
daa
test
movsb
into
pop
mov
pop
jo
aam
mov
xchg
aaa
mov
faddp
cmp
lock
lcall
adc
sbbb
push
mov
adc
mov
dec
dec
jo
bt
into
push
xchg
je
cmpsl
push
jl
hlt
mov
test
incl
lcall
ja
out
adc
iret
mov
mov
mov
jb
mov
inc
ja
push
call
xchg
cmp
cmp
mov
adc
test
pop
pop
mov
ret
aam
shll
outsb
inc
xchg
das
shll
jbe
cmp
jns
in
xor
fdivl
fiaddl
jp
data16
movsl
hlt
mov
mov
sbb
and
loop
sti
call
daa
dec
bound
scas
dec
outsb
imul
xchg
cwtl
out
xchg
mov
outsl
mov
dec
jecxz
cmc
mov
add
mov
jne
dec
incl
test
out
popf
pop
ja
addr16
out
stos
psubb
mov
sbb
sbb
test
push
inc
xlat
push
repz
mov
xlat
sahf
shrb
jno
stos
xor
push
xor
test
mov
mov
shlb
jg
testb
xor
cmp
lods
ret
loop
push
sub
cld
jb
iret
cld
daa
ret
pop
inc
stc
add
movsl
fbstp
fimuls
out
cmpsb
lock
or
jge
int3
dec
adc
add
and
lock
or
pop
shlb
shll
push
mov
inc
adc
daa
sbb
arpl
fldcw
insl
inc
popa
cli
xchg
pop
fildl
pop
lock
pop
or
out
dec
mov
cmp
push
jmp
cld
shlb
fs
arpl
xor
push
xor
push
ds
push
xlat
push
subl
jle
mov
repnz
sarb
scas
lods
ja
shrl
push
or
inc
jno
je
pop
orb
inc
xchg
jmp
pop
add
mov
dec
mov
cmp
xor
lcall
cwtl
mov
addb
jle
or
push
or
idivb
ja
shl
pop
aad
ficompl
ret
outsb
xchg
pop
xor
or
nop
or
roll
jmp
and
inc
mov
mov
stc
push
shr
sbb
pop
fldt
push
mov
dec
fs
pop
cmpsl
inc
aad
addl
mov
cmp
lock
in
shrl
out
xchg
hlt
mov
cld
punpckhbw
nop
mov
cltd
mov
jo
inc
pop
hlt
loopne
push
insl
cli
inc
add
sbb
mov
repnz
test
insb
mov
sahf
je
xchg
dec
mov
sar
or
and
push
sub
movsb
cmp
inc
scas
adc
ja
xor
add
jecxz
repnz
inc
stc
push
xchg
push
clc
sub
fmull
sbb
into
out
xlat
outsb
push
pop
push
iret
je
adc
jb
arpl
lahf
pop
xchg
test
cmp
mov
adc
std
xchg
ljmp
sub
pop
mulb
test
jg
inc
mov
ret
or
inc
out
pop
jbe
or
bnd
ret
cmpsl
out
shl
dec
pop
test
cmp
aas
stc
mov
mov
es
push
jno
inc
fidivrl
fmul
xchg
std
mov
sbb
les
xchg
shll
imul
pushf
mov
dec
inc
add
fst
aam
cld
and
test
popa
xlat
push
and
jmp
sub
jecxz
mov
xchg
pushf
mov
adc
and
mov
ljmp
rorb
mov
hlt
add
dec
adc
jg
mov
mov
mov
cmp
stos
push
push
xchg
dec
jl
add
jnp
lock
xchg
stos
inc
and
mov
leave
pusha
clc
imul
stos
inc
sahf
je
sbb
aas
push
cld
negl
ret
and
push
dec
and
mov
jecxz
or
xchg
sbb
sbb
inc
or
mov
repz
popf
ja
jb
mov
xchg
sub
jns
ret
inc
iret
adc
inc
jmp
scas
add
out
insb
clc
inc
loope
ret
cs
in
pop
sbb
out
cmc
fwait
add
pop
pop
mov
xchg
pop
ds
xchg
mov
sti
and
bound
mov
lret
mov
je
jno,pt
shl
cmpsl
xlat
out
lahf
aas
mov
adc
adc
xor
add
mov
mov
shl
pushf
push
popa
cmp
xchg
dec
xchg
or
mov
rcll
cwtl
push
xor
fnstenv
test
ja
jp
mov
std
test
lds
mov
fbld
adc
cmp
and
push
xor
inc
imul
aaa
es
mov
sbb
out
insl
test
cmpsb
enter
dec
pop
loop
ss
dec
movsl
lret
ret
aad
andl
fildll
add
mov
into
cli
adc
lahf
ds
add
jp
out
xchg
cmpsl
repnz
lcall
ljmp
mov
setg
shl
imul
jmp
mov
cld
mov
in
jno
and
add
arpl
or
mov
loop
xlat
lods
mov
sub
cmp
mov
orl
outsl
jbe
adcb
divps
xor
cmc
pop
jge
or
bound
adc
cld
mov
jae
enter
fs
push
pusha
sbb
xchg
lods
test
div
ds
test
ds
and
inc
or
fistl
dec
jg
and
mov
inc
dec
icebp
in
js
lods
dec
lahf
push
fistpl
sbb
int
cwtl
stos
sbb
loope
pusha
mov
push
cli
mov
push
jnp
mov
push
cmp
clc
iret
pop
in
sti
mov
sbb
rclb
cmp
repnz
xor
popa
mov
das
addr16
imul
stc
and
je
insl
push
and
in
ljmp
ss
push
add
and
and
into
sbb
pop
popf
adc
test
cmpsl
popa
pop
pop
insb
aas
push
or
dec
cmp
push
cmc
shll
mov
mov
jae
push
mov
jp
and
popa
clc
pop
or
xchg
mov
jns
lea
push
inc
stos
adc
push
flds
rolb
xor
pop
adc
mov
out
pusha
cld
adc
and
imul
pop
fs
dec
inc
adc
xchg
jg
movsb
jmp
push
ljmp
stc
lret
and
mov
stc
ss
outsb
sbbb
and
stos
jmp
xlat
mov
ss
inc
sarb
in
push
sbb
pop
mov
cmp
orl
or
jl
sbbb
mov
xor
clc
mov
sarb
jge
ffree
fidivl
xchg
sbb
adc
mov
mov
addr16
mov
inc
adc
push
aad
pop
movsl
sbbb
in
adc
dec
aad
mov
fcmovne
inc
fwait
jbe
inc
testl
sbb
cmp
shll
enter
les
mov
mov
push
std
movsb
push
out
add
jbe
or
nop
insl
clc
pop
mov
pushf
and
aad
jne
sub
nop
sub
cmpb
in
in
mov
cmp
mov
sub
jl
xchg
cmp
fsubrs
or
mov
jno
fnop
and
sarb
mov
mov
lods
cmp
adc
adc
movsl
inc
mov
add
sbb
and
jmp
jae
and
jb
lcall
pop
mov
popf
fs
idivb
jmp
ret
test
inc
data16
cmc
aam
ficomps
cmp
fisubl
out
outsl
pusha
fstpt
fcomip
cmp
lea
adcb
mov
or
adc
pop
sub
inc
lcall
dec
sbb
push
jmp
sbb
in
and
inc
dec
pop
jns
mov
sub
mov
pop
addr16
movl
repz
call
in
gs
cmp
mov
jb
xlat
shlb
jnp
mov
jno
loope
inc
and
jae
inc
push
mov
push
js
ljmp
mov
aas
test
nop
jns
in
jp
in
add
mov
sub
in
fdivs
leave
sbb
or
in
adc
mov
xor
push
clc
add
xchg
sub
jae
dec
cmp
hlt
jbe
push
clc
pop
sahf
jno
and
push
ss
push
adcb
xor
mov
aam
mov
popa
cmc
mov
roll
shrl
cmp
mov
lods
data16
pop
sub
into
mov
and
sbb
insb
sbb
push
dec
fsubrs
mov
or
testb
mov
pop
dec
aam
mov
pushf
inc
sbb
fnstcw
jmp
jb
shrl
daa
pop
mov
daa
and
push
sub
mov
jge
mov
jne
icebp
cmpsl
icebp
adc
cmp
push
ja
lods
mov
inc
fisubrl
lret
test
add
ficoml
insl
cmpsb
pop
test
xor
in
pop
sub
add
jo
icebp
gs
and
xlat
aad
les
cmp
xchg
jmp
sbbl
sbb
leave
and
or
aam
ret
mov
nop
sahf
push
xchg
dec
jl
aas
outsb
ds
call
pop
popf
std
lods
loopne
out
mov
xchg
adc
jne
rclb
das
sarb
cwtl
es
lahf
fiaddl
dec
scas
cld
lret
jle
std
mov
push
fsubrs
shlb
sub
testb
jl
mov
mov
inc
jg
inc
mov
addl
in
fldt
les
mov
bound
test
or
js
loope
dec
push
sbb
sbb
jno
addr16
les
into
out
add
inc
dec
add
lret
mov
push
sub
sar
inc
fidivs
jne
xchg
scas
cld
add
push
ret
sahf
std
cs
sub
cmp
pop
mov
jg
cmpsl
jmp
jl
call
ja
jg
xchg
pushf
sbb
push
std
shlb
fwait
jns
cltd
push
adc
cmc
pop
jmp
xchg
cwtl
xchg
mov
hlt
mov
sbb
push
sbb
inc
adc
xor
dec
add
pop
rcrb
and
nop
jg
subl
xor
push
and
mov
nop
push
add
pop
or
and
aad
sub
les
leave
fdivs
add
xchg
or
jno
mov
es
adc
cld
add
stos
push
inc
cmc
pop
xchg
arpl
out
inc
int
cmp
sub
add
or
xor
jns
fcmove
shr
push
sbb
gs
sbb
mov
mov
sbb
dec
outsl
rep
pop
xor
int3
inc
jle
fs
and
repz
das
xchg
jns
in
popf
jns
or
ja
cld
and
stos
test
arpl
xor
int
cmp
push
jnp
aad
push
add
std
movsl
jno
pushf
shll
cld
sarl
sub
push
xchg
jg
jno
hlt
push
mov
pop
icebp
pop
mov
mov
add
cmp
lods
xor
fiadds
jbe
imull
adc
sti
flds
les
sub
inc
scas
and
fists
mov
lcall
pop
ficomps
repz
lods
push
fbld
cmp
cmp
aad
sahf
xor
adcl
jecxz
test
push
icebp
cmp
test
fidivrl
jl
fucomi
xchg
sarl
ds
mov
mov
push
or
mov
sahf
sbb
and
push
clc
sbb
lcall
fcomi
ds
in
mov
addr16
sub
scas
inc
mov
sbb
dec
or
adc
ljmp
jno
lock
and
or
or
sub
dec
push
fdivl
imul
mov
jp
lret
adc
mov
into
pusha
adc
and
xchg
bound
cmp
movsl
popf
fs
ret
cmp
divl
dec
loop
sbb
repnz
sub
cmp
shlb
hlt
jne
cmp
push
cmp
mov
sub
inc
fdivr
dec
subl
rcr
cmp
adc
jns
xchg
mov
pop
daa
cmp
push
push
repz
mov
pop
adc
jmp
mov
imul
scas
xor
inc
adc
adcb
and
lcall
inc
cmc
in
aam
cli
lret
jle
jp
out
adc
fldl
stc
nop
inc
movsl
jmp
adc
mov
call
add
rdmsr
xchg
and
mov
xor
push
adc
pop
icebp
mov
lock
shl
test
ja
lock
aas
ficomps
pop
adc
andl
adc
inc
stc
loopne
sub
xchg
or
adc
mov
inc
jae
cmpsl
mov
mov
sti
sbb
jo
xor
notb
mov
or
pop
lea
clc
adc
sahf
inc
push
pop
jmp
sahf
jae
lcall
pop
out
mov
sbb
xchg
sbb
enter
mov
in
outsl
aaa
stos
sbb
imul
cmp
fidivrl
repz
jle
push
xor
jns
xor
daa
xor
cmp
outsb
xor
imul
out
add
faddl
push
cltd
push
mov
int
jne
mov
push
mov
push
cmp
or
inc
stos
and
cmp
lahf
movsl
stos
add
lahf
jp
sub
and
in
mov
adc
jae
inc
pop
lret
xchg
sub
pop
jno
aas
in
add
leave
and
enter
into
mov
lret
fwait
sarb
lret
push
aad
or
mov
dec
and
andb
icebp
adc
sub
mov
jnp
sub
fiadds
sbb
stos
in
cld
lahf
xchg
or
in
mov
sbb
pop
roll
in
dec
inc
cltd
stos
in
sarb
xchg
add
outsb
loope
inc
pop
push
fidivrs
push
scas
mov
pop
adc
fildll
or
inc
gs
fwait
jnp
ret
ret
adc
inc
out
push
addr16
in
sbb
push
push
cs
jl
dec
xchg
sbb
imul
and
xor
mov
sbb
lahf
mov
sub
fwait
insl
dec
inc
and
sub
pop
dec
repz
pop
loop
inc
jo
sti
mov
movsb
stc
xchg
pop
out
add
in
jp
int3
int
int
push
jne
or
fwait
xchg
insl
pop
mov
out
push
lods
ljmp
pop
and
pop
ds
scas
cmovno
mov
in
mov
cld
lcall
in
dec
lret
fs
push
cmp
lock
jecxz
xor
testb
push
and
popa
jmp
add
mov
pop
loope
stc
sbb
test
outsl
cmp
imull
lret
dec
bound
cmc
sahf
xor
les
inc
cwtl
mov
fcompl
mov
fldl
stos
cmp
jo
mov
orb
xchg
cmp
sahf
lods
pop
or
int
es
scas
pop
dec
scas
iret
in
add
dec
icebp
adc
jne
cwtl
or
arpl
fsubrs
leave
and
repnz
mov
pop
stos
push
fadds
jmp
in
in
dec
sub
jae
imul
rcrb
ja
lret
das
inc
sbb
loopne
ret
add
sahf
jbe
icebp
xchg
sahf
inc
pop
pop
dec
loopne
and
xchg
scas
imul
lds
add
add
dec
lea
mov
repz
xor
test
inc
bound
inc
push
mov
ja
aas
fs
cmp
lea
ret
lods
pop
cmpsb
das
cmpl
sub
or
mov
shl
xor
call
inc
add
pushf
in
push
fmull
sub
cmp
sub
inc
dec
rcrb
dec
fidivrl
sbb
mov
dec
jecxz
shrl
and
out
cmpsl
dec
std
push
js
shll
mov
xchg
rolb
lds
bound
pop
pop
ja
add
icebp
cmp
mov
cmp
xchg
xchg
aaa
into
enter
push
fs
inc
int
push
sub
addr16
mov
adc
cmp
enter
xchg
ret
mov
enter
add
mov
loopw
adc
cmpsl
jnp
scas
ja
xlat
add
inc
fimull
pop
repnz
mov
pop
mov
jno
pushf
outsb
pop
mov
dec
in
jge
scas
inc
add
ss
mov
jbe
mov
mov
out
adc
imul
xor
fisttpll
into
fsubl
cmp
andb
scas
push
mov
into
push
in
xorl
xchg
pop
leave
adc
cmc
repz
les
stos
mov
and
pop
or
push
xchg
fnsave
mov
sbb
inc
sub
cmpsb
aaa
pop
imul
dec
fistpll
fsubrp
jg
pop
movsb
xor
xor
mov
stos
inc
outsb
jge
adc
nop
enter
dec
movsl
sbb
sub
sbb
call
and
bound
mov
icebp
std
push
pop
dec
adc
popf
repz
adc
pop
adc
and
ss
add
nop
daa
or
push
ljmp
fsubr
push
aam
xor
je
mov
insl
mov
xor
testb
add
aad
xor
xchg
faddl
rorl
mov
test
dec
inc
pop
outsl
mov
ret
jb
pop
insl
pop
sbb
notl
pop
jbe
rcrb
imul
cmp
fs
xor
lret
mov
push
sti
cmpsl
adc
aam
mov
adc
cmp
push
imul
leave
add
rorl
testl
fsubl
mov
or
adc
sbb
es
call
js
mov
pop
mov
jl,pn
push
and
adc
mov
push
push
dec
test
mov
dec
cmp
cmp
pusha
jle
push
push
pushf
addl
jnp
jno
xchg
pop
adc
pop
lock
movsl
cld
test
xchg
incl
jno
xchg
pop
insl
lret
mov
test
jns
jnp
sbb
jp
cmc
mov
push
loope
addr16
pop
sarb
in
loopne
addr16
insb
rcrl
ret
repnz
mulb
nop
out
cmpsb
adc
fcompl
mov
fsubrp
aas
lcall
xor
push
sar
repnz
stc
dec
pop
gs
shr
push
shrb
inc
mov
in
dec
in
in
xchg
mov
mov
lret
adc
movsb
nop
jb
or
roll
sarl
inc
sub
xchg
add
cmp
or
lahf
clc
or
cmp
into
in
lahf
out
lea
sub
in
xchg
test
incb
ds
push
cmpsb
out
sub
inc
sbb
cmc
mov
fadds
xchg
sbb
push
aam
inc
inc
or
jg
jne
xlat
mov
stc
jnp
mov
adc
sub
pop
stc
xor
inc
mov
fimuls
jmp
hlt
xor
popa
aad
test
cmp
mov
stos
inc
test
jbe
dec
cmp
test
dec
bsr
mov
add
insb
mov
xchg
ja
frstor
enter
pop
dec
push
rolb
jp
repnz
adc
push
lds
sbb
in
fdivrl
popf
std
std
shrb
sbb
jne
pcmpeqb
push
or
adc
mov
jmp
jle
cld
clc
arpl
jp
jne
aam
pop
dec
addl
das
cli
inc
cmp
in
dec
in
leave
push
loope
mov
negb
jbe
hlt
add
int
aad
leave
mov
iret
mov
push
xor
cmpsb
push
jbe
adc
mov
ret
insl
fs
sub
mov
dec
jbe
dec
shlb
mov
pop
push
pop
mov
mov
lock
sub
sub
fidivrl
pop
lret
jne
cli
cmpsb
pop
push
jge
pop
and
jnp
add
clc
adc
pop
fisttpll
mov
lods
ret
pop
les
pusha
stos
sub
and
pop
inc
push
sub
hlt
stos
and
push
popa
jl
fwait
mov
shll
popa
sub
mov
mov
dec
iret
gs
pop
mov
jo
shlb
or
push
cmp
xorb
inc
cmpsb
cmp
movsl
fwait
mov
fmull
mov
pop
cmp
inc
cmc
fstps
mov
int3
add
cmpsb
xchg
sbb
andl
inc
mov
clc
pop
xor
cmp
test
xchg
jne
mov
gs
pop
xchg
dec
lret
aam
addr16
addr16
shll
push
sub
rcr
notl
repz
jne
pop
ret
push
or
mov
and
push
pop
add
dec
adc
cmp
push
stc
sbb
mov
pop
xor
mov
cmp
inc
idivb
shll
jb
adc
xchg
dec
out
mov
insl
inc
std
dec
movsl
mov
inc
xchg
and
add
jmp
icebp
and
and
out
adc
test
adc
adc
sbb
in
push
inc
sti
hlt
sub
stos
arpl
aaa
int3
dec
dec
ds
arpl
testl
push
mov
xorl
inc
xlat
mov
or
add
cs
xlat
cli
add
push
leave
popf
decb
addr16
iret
rclb
cltd
sbb
nop
cmp
pop
cmp
fisubl
into
lret
sti
mov
mov
sbb
ss
ljmp
jno
push
push
inc
mov
xchg
leave
lea
jl
sbb
xchg
cltd
loopne
add
add
popl
stc
or
mov
dec
lcall
adc
and
outsb
add
ds
push
addb
cmp
lahf
js
xor
rol
out
dec
in
or
adc
xor
mov
ret
shr
test
jbe
jl
dec
scas
push
inc
cltd
aas
jg
inc
scas
push
mov
sub
adc
lcall
or
je
dec
mov
ss
mov
or
cmpsl
lods
inc
add
out
imul
cmc
dec
sub
aam
mov
inc
push
sbb
mov
aas
add
jecxz
mov
xchg
fs
ret
gs
mov
les
stc
testb
sbb
add
push
sub
scas
stc
mov
dec
fs
xor
jge
cmp
or
es
xchg
daa
sub
insl
push
je
cmp
outsb
iret
jmp
jbe
dec
fisubs
jbe
in
push
and
jmp
std
enter
loop
push
enter
subl
xchg
adc
mov
push
out
mov
mov
push
orb
adc
or
push
mov
lea
push
imul
out
sub
and
test
aas
mov
adc
loope
cwtl
cmp
fisubs
stc
cmpsb
inc
xor
cs
dec
fldenv
dec
pop
movsb
ds
shll
push
cmc
jo
fs
inc
rclb
insl
mov
out
out
insl
cld
xchg
mov
xor
fsubs
mov
or
add
pop
sub
push
and
dec
jbe
cmpsl
call
outsl
sub
mov
sbb
enter
mov
ret
es
ds
in
in
pop
xchg
mov
xor
adc
mov
int3
pop
loopne
dec
in
add
xor
push
pushf
jbe
or
shlb
mov
dec
notb
cmp
fwait
xor
pop
inc
gs
call
mov
mov
lret
stc
jl
mov
adcb
aad
or
push
pop
out
xchg
in
lds
inc
push
repz
jo
sub
pop
xchg
xchg
sbb
lock
repnz
repz
push
push
je
sbb
cmpsl
xor
js
ret
imul
jne
repnz
xchg
add
inc
test
adc
cltd
fbstp
mov
ret
loop
out
add
and
mov
scas
inc
fwait
stos
in
je
inc
lret
inc
test
mov
pushf
sbb
jne
push
ja
mov
lcall
jl
pop
aad
cmp
push
dec
add
imul
loope
shr
xor
ret
ds
dec
pop
inc
cmp
mov
push
imul
subl
inc
lcall
repnz
shl
adc
std
imul
repz
mov
clc
push
pushf
push
mov
adc
lock
movsb
xlat
mov
aaa
ret
lahf
mul
xchg
les
mov
imul
mov
add
shr
movsb
icebp
add
jle
movsl
and
or
or
jl
jge
clc
dec
lahf
testl
pop
cmp
or
mov
add
xor
mov
ja
call
mov
psubusw
lock
and
push
jns
lahf
dec
sbb
rorb
or
jg
cmp
loope
sti
ret
cmc
mov
loop
pop
xlat
xlat
sbb
mov
xchg
jle
sub
into
mov
cmc
ja
fldl
into
shll
out
mov
test
xchg
out
xchg
push
out
mov
push
lcall
cmp
lcall
push
mov
or
adc
lahf
and
scas
inc
fstps
or
push
dec
pushf
mov
movsl
cmp
lock
mov
dec
cmc
xor
cmp
adc
cmp
jle
dec
jge
js
xchg
jmp
sbb
inc
dec
sbb
push
mov
xor
push
mov
mov
xor
dec
sarl
setae
popf
and
xchg
dec
pop
test
mov
testl
lods
test
inc
cmpsb
inc
cmp
js
push
dec
aas
test
sti
or
add
inc
mov
and
inc
clc
xchg
push
repnz
std
pop
and
lahf
push
xchg
test
enter
push
jge
sub
rcrl
push
add
lret
fs
add
adc
xor
inc
dec
jmp
scas
push
push
dec
xor
jns
pop
cmp
imulb
mov
mov
mov
in
je
ds
jnp
fldt
movsl
jae
divb
icebp
sub
inc
lret
jl
inc
pop
push
decl
ss
dec
outsb
add
arpl
add
out
les
mov
outsl
push
push
push
sub
insb
inc
jnp
stc
fcmove
ret
sti
sbbb
scas
ja
mov
popa
sub
lods
ds
push
out
pop
jae
sub
sbb
or
cmpsl
aam
mov
js
push
jo
orb
aad
mov
in
dec
dec
loop
inc
out
cli
mov
jo
repnz
arpl
inc
outsb
pop
int
xchg
xchg
push
jns
sahf
sub
cli
ss
xchg
inc
cmpsl
lock
popa
xchg
mov
gs
dec
push
jo
jle
rcl
push
add
adc
ret
sbb
lahf
jbe
sub
sahf
cld
std
nop
mov
lret
jne
jo
xchg
mov
rcrb
adc
test
das
jmp
loop
lods
jecxz
xor
gs
out
out
and
ret
fidivl
out
in
adc
jmp
rcrb
pop
loop
loope
aad
cmp
outsb
mov
inc
ja
adc
lds
scas
lds
inc
inc
push
sub
or
shlb
movsl
in
sub
loop
mov
inc
push
or
xchg
lods
jp
xlat
mov
out
xchg
les
jge
sbb
inc
or
adc
in
add
xor
fmul
xor
pusha
add
or
push
out
mov
pop
pop
push
xchg
cs
sbb
aad
push
out
adc
popa
fstl
push
inc
sahf
call
in
in
cmpps
pop
cmpsb
ljmp
xchg
shrl
jmp
jmp
jg
scas
cwtl
pop
es
popa
jb
dec
dec
xchg
js
jmp
incl
fildl
xor
lea
lods
cltd
xor
lret
and
lds
push
fwait
push
or
hlt
imul
inc
adc
aas
push
xchg
insl
flds
popf
push
test
dec
rorl
ja
sbb
loop
idivl
mov
movsb
aaa
xchg
pusha
hlt
out
jge
pop
scas
fnstcw
js
and
pop
mov
shl
pop
sar
dec
shr
jg
dec
pop
pop
sub
and
leave
cmpsl
out
shlb
xorl
jecxz
outsl
adc
insb
pushf
cmp
loopne
lcall
and
dec
loop
add
loope
mov
divl
pop
mov
bound
and
arpl
sub
push
jnp
adc
into
das
sbb
sub
cmp
out
aaa
xor
hlt
xlat
xor
cmp
xor
lahf
adc
ficoms
push
adc
cmp
aam
ret
mov
test
cmp
cli
push
mov
sub
ret
lds
xchg
cmp
dec
out
cwtl
jl
and
mov
fidivs
pop
sub
pop
push
adc
mov
rolb
icebp
mov
jns
cmpsb
inc
lods
daa
loop
arpl
cli
sbbl
into
and
mov
in
pop
loopne
aam
push
xlat
into
mov
pop
hlt
cwtl
scas
cmp
in
mov
inc
mov
rol
jge
xchg
or
mov
push
std
incl
cmc
dec
lods
fldt
js
jecxz
dec
mov
mov
mov
mov
aaa
push
lret
fsubrs
fwait
mov
andl
sub
imul
dec
mov
mov
jnp
rolb
dec
stc
add
adc
in
and
pop
cmpsb
fstpl
xor
cmp
add
xchg
sub
sub
push
lret
arpl
stos
pop
js
push
int3
mov
incb
cwtl
and
das
inc
dec
push
cltd
lret
jecxz
test
adc
nop
bswap
cmpsb
jbe
fnstcw
or
stos
cmp
pop
in
insl
xor
inc
test
addl
sbb
test
mov
ficoms
rcrb
sbbb
jecxz
and
stos
jns
jno
ret
xchg
sub
sub
fnsave
enter
scas
and
mov
fimull
daa
lods
ljmp
and
lcall
jns
jmp
dec
dec
negb
lret
jp
cmp
sti
push
aam
faddp
jg
clc
arpl
es
cmp
mov
push
xchg
mov
clc
dec
xlat
push
sbb
andl
mov
ret
sbb
add
inc
sub
adc
ret
xor
push
mov
repz
dec
in
jnp
mov
stos
mov
push
fwait
add
cs
push
cwtl
insl
iret
icebp
pop
ret
in
fdivl
and
call
xchg
fistpl
ljmp
adcb
dec
movsb
mov
mov
sub
lds
push
leave
jae
cld
pop
mov
js
xor
jl
xor
mov
out
add
aaa
shl
mov
arpl
vmread
adc
imul
pushf
mov
addr16
cs
fcmovnu
int
aad
cmpsl
push
lret
mov
jmp
imul
pop
movsl
dec
faddl
jg
jae
xchg
stos
in
imull
pop
fcoml
clc
mov
nop
data16
xchg
lcall
movsb
pushf
mov
jbe
mov
mov
xor
adc
mulps
mov
mov
stos
aas
cmp
xchg
pop
mov
shlb
scas
cmp
cmp
add
push
jmp
cmc
sub
clc
ds
in
fists
out
dec
mull
sub
clc
imul
mov
loopne
mov
lock
rorl
and
cli
aam
xor
aaa
bound
addr16
jmp
stos
mov
sbb
jbe
mov
pop
shr
testb
pop
adc
cwtl
cmp
xor
push
lods
int3
xlat
sbb
add
movsl
pop
shrb
push
xor
enter
cmovge
or
adc
or
xor
mov
mov
push
cmp
std
icebp
cmc
out
jbe
xchg
jns
lret
push
mov
xchg
xchg
fnsave
mov
xchg
shrl
push
inc
fnsave
not
mov
or
and
int3
dec
mov
mov
addb
clc
int
ret
xor
mov
popf
jo
sti
lret
and
dec
mov
cmp
sbb
insl
add
test
mov
in
pop
ljmp
jecxz
add
int3
lea
or
dec
mov
in
shll
clc
ret
sti
adc
in
data16
jae
mov
push
inc
in
xor
lcall
out
inc
mov
mov
mov
dec
bound
xor
sbbb
pop
scas
inc
mov
xor
inc
es
psllw
out
jnp
pushf
jns
sub
adcb
adc
or
ds
mov
sbb
pop
jmp
insl
ja
inc
int
repz
jl
gs
mov
xor
sahf
and
stc
popf
xchg
xchg
gs
call
mov
mov
cmpl
xchg
int3
arpl
call
and
pop
aad
jne
dec
hlt
adc
or
iret
ret
inc
mov
push
fisttps
loopne
dec
push
adc
or
xchg
bound
movsb
jmp
decb
sti
cmp
pop
es
jecxz
mov
mov
xlat
in
adc
mov
cmp
xchg
cmp
inc
push
mov
xor
rclb
or
scas
jp
jp
sbb
int3
out
test
iret
jge
add
into
add
sbb
sub
mov
out
mov
dec
hlt
mov
bound
pop
shl
sbbl
cmpsb
ret
sbb
jg
adc
ja
dec
add
and
aaa
out
push
insl
mov
adc
lret
mov
xlat
repnz
sbb
shl
mov
and
mul
pop
mov
and
das
insl
fcompl
imul
dec
add
movsl
stos
inc
dec
dec
lret
insb
enter
mov
mov
jo
loop
imul
popa
add
sarl
out
sbb
filds
jmp
mov
mov
mov
insb
shrl
iret
inc
in
enter
lret
fstpl
jle
pop
mov
fcoms
xchg
xchg
shl
ret
pop
mov
fnstsw
inc
xchg
out
test
mov
mov
movsl
or
push
std
loop
stc
lea
push
cs
adcb
pop
inc
fadds
test
or
dec
pop
and
in
cmp
addl
dec
mov
dec
fsubl
mov
or
xchg
repnz
mov
clc
push
inc
out
lcall
xor
loopne
lock
hlt
dec
aaa
or
adc
xor
add
push
cmp
pop
push
cmp
mov
vsqrtps
int
in
pop
insl
mov
in
add
rclb
inc
in
hlt
push
cmc
adc
cmp
pop
aaa
stos
cmp
call
mov
inc
in
jmp
sbbl
push
out
or
mov
outsb
mov
lods
jle
xor
out
popa
pop
adc
jns
jp
fcomps
mov
movsl
gs
es
dec
cmc
stos
push
mov
mov
fbstp
test
lahf
std
shlb
cmp
or
mov
test
xchg
push
adc
addr16
sbb
xor
xchg
in
pop
adcb
dec
cmp
les
xor
xchg
mov
std
insb
mov
inc
lahf
sub
arpl
iret
xor
pop
fcmove
inc
or
popa
add
les
pop
outsb
frstpm(287
testl
and
arpl
cmp
outsl
inc
aam
cwtl
pop
push
mov
lods
pop
lret
shlb
jns
jp
test
xor
push
xlat
int3
test
js
fsubr
lds
clc
lea
shrl
adc
nop
dec
ffreep
pop
push
push
inc
movsb
fnstenv
addr16
insl
and
inc
hlt
sub
adc
xchg
adc
and
sub
mov
push
repz
add
cmc
test
and
or
pop
adc
cmp
pop
rcl
in
push
cmc
nop
imul
jle
lcall
scas
or
mov
push
mov
rcrb
sbb
and
and
fwait
push
stos
add
int3
xchg
fdivrl
filds
pop
mov
push
loope
inc
mov
mov
adc
dec
jbe
pushf
ds
loope
or
push
les
loope
inc
imul
cmpsl
xchg
lret
lods
sub
insb
sbb
push
adc
mov
and
mov
shl
jmp
arpl
push
testl
mov
push
dec
sbb
pop
outsl
cmp
cmp
call
arpl
pop
mov
into
mov
ss
or
mov
ret
adcb
ror
pop
clc
and
aaa
imul
mov
shll
mov
cmpsl
rcrb
cmp
mov
pop
ret
jle
rol
repz
test
add
cs
mov
dec
jne
push
nop
imulb
es
sub
incl
mov
lea
push
pusha
xchg
cmpsl
out
mov
cmc
xchg
inc
xor
xchg
add
out
cmc
push
xchg
mov
push
sbb
pop
xor
aam
xchg
mov
shrb
into
push
jbe
out
push
cmp
nop
sub
fcoms
xchg
and
cmp
jg
in
pusha
sbb
lret
arpl
insl
push
inc
xchg
leave
in
divl
xor
pinsrw
in
and
add
hlt
mov
mov
mov
push
int
xchg
sub
xchg
pop
or
mov
jne
jnp
scas
jb
clc
scas
rcrb
fildl
inc
pop
mov
stos
bound
push
jecxz
jo
subl
fstps
lods
inc
in
adc
int3
lcall
pop
xor
sbb
movsb
test
pop
test
mov
jg
aam
mov
push
pop
xchg
lcall
in
hlt
xor
testl
sbbl
jae
mov
xchg
out
aam
xor
cmpsb
mov
aaa
pusha
imul
and
cmp
push
test
lcall
pop
out
int
mov
xor
andb
les
stos
dec
pop
fdivl
xchg
add
cld
and
push
test
jl
dec
pop
movsb
popf
mov
aad
mov
sbb
test
js
cmpsb
push
adc
jl
xlat
adc
fidivl
xor
jno
fdivrs
add
rcrb
mov
xchg
xlat
jae
dec
xchg
add
sub
fcmovnu
or
and
sti
inc
fildll
xchg
sbb
leave
lock
mov
sbb
xchg
jge
loope
call
icebp
adc
pop
pop
dec
gs
faddl
minps
jle
scas
sbb
fnsave
jbe
insb
rolb
iret
lock
sbb
je
inc
cmp
mov
sub
cltd
hlt
and
add
jb
mov
jns
mov
cmpsl
sbb
lahf
ss
jb
mov
aaa
test
sahf
clc
call
cld
adc
ret
addr16
mov
xchg
mov
push
push
push
inc
sub
and
pop
pop
lods
inc
jne
repnz
xchg
lret
xor
xor
jns
cwtl
sar
xchg
add
xor
and
test
ds
adc
pop
repz
andb
fcomip
mov
adc
aad
sub
loop
mov
hlt
push
inc
mov
lods
mov
arpl
aam
jnp
aam
shrl
jne
sbb
cld
ret
shll
inc
mov
rcr
xor
mov
clc
nop
pop
pop
jne
add
loop
fmuls
or
mov
mov
fnstenv
int3
movl
or
decl
xchg
mov
jecxz
sbbb
or
xchg
repz
cmp
pop
fdivr
xchg
clc
incl
mov
fldenv
notb
xor
cmp
repz
xor
pop
push
dec
in
jge
add
lods
mov
and
mov
in
leave
fcompl
sahf
or
xchg
in
mov
cmp
sub
dec
cmp
out
add
lea
add
pusha
jnp
add
shlb
and
dec
cli
or
inc
ret
mov
adc
addr16
jmp
mov
popa
ja
xchg
push
imul
push
dec
test
sub
dec
dec
in
pushf
dec
mov
mov
in
dec
stos
xrelease
push
into
sub
mov
jp
roll
inc
push
push
add
adc
pushf
adc
lds
les
push
ficompl
into
ja
or
jmp
push
pop
xor
xor
cmpsb
cmp
jl
or
pop
jo
inc
mov
mov
cs
fnstsw
adc
sbb
addr16
mov
or
in
cmp
and
lock
loop
pop
adc
push
mov
test
mov
daa
imul
push
ss
mov
push
in
fistl
inc
push
jl
inc
popf
mov
int
sbb
mov
fildll
mov
sub
jns
stos
rcl
filds
push
stc
ja
mov
sbb
mov
and
insl
cld
test
lea
cltd
mov
shr
outsl
jmp
in
xor
jns
dec
in
std
cs
lds
flds
push
lods
xchg
push
je
in
lock
and
inc
hlt
mov
fsubrl
sub
je
dec
push
mov
pop
ret
and
lret
pop
outsl
mov
rorb
notb
ret
mov
cmp
js
cmpsl
push
pop
arpl
jae
int
mov
cmp
push
push
cmc
sahf
movsb
xor
push
lret
pop
xchg
or
jmp
fstps
pop
sahf
pop
jge
xor
and
test
insl
xor
enter
icebp
mov
movsl
add
cmpsb
insl
adc
js
sub
daa
mov
jg
pop
sub
dec
lret
mov
cmp
mov
mov
mov
arpl
sbb
mov
and
inc
lret
add
cmpsl
scas
stos
dec
fdivrs
cmp
or
or
jg
inc
test
outsb
mov
xchg
and
inc
lret
xchg
xchg
scas
push
lods
out
push
mov
mov
xchg
daa
add
or
das
push
pushf
in
mov
sbb
cltd
push
aad
out
jae
mov
xor
arpl
rcll
rcll
stos
loope
pop
dec
push
fildll
shlb
leave
mov
in
stos
dec
jb
and
fdivrl
add
int3
jne
sub
loop
push
repnz
sti
inc
mov
popf
in
std
xchg
jo
mov
lods
xor
pop
insl
push
xor
ja
stos
xchg
add
lods
cmpb
ret
xchg
mov
dec
stos
sbb
or
stos
xchg
popf
int3
arpl
pusha
ljmp
loopne
push
sarb
cmp
xchg
push
aas
inc
int3
fidivs
sub
or
or
push
adc
mov
js
pop
mov
push
cs
mov
mov
inc
mov
lock
lods
xchg
or
pop
dec
pop
test
dec
mov
push
in
lcall
mov
repnz
or
mov
dec
lods
daa
mov
inc
sbb
sbb
xchg
cmp
sbb
enter
cli
xchg
cmpsb
pop
or
lods
call
inc
push
pop
xor
pushf
repz
lret
xlat
cltd
jecxz
aam
cmpsl
rcrl
or
out
jnp
push
scas
inc
int
jo
inc
cs
ret
and
cs
shll
and
inc
lea
sahf
add
insl
jns
lahf
pusha
not
jl
std
enter
data16
jns
ret
mov
jmp
dec
and
repz
fnstenv
lret
sub
lea
ss
mov
sbb
shll
push
adc
fiaddl
adc
add
fwait
imul
xor
call
mov
cs
fbstp
push
push
xor
pop
clc
and
scas
jbe
in
cmpsl
iret
mov
adc
adc
jecxz
xchg
jl
in
movsb
ljmp
sub
mov
jns
xor
idivb
adc
pop
scas
sbb
cmp
dec
pushf
mov
testl
outsb
cld
pop
ret
or
scas
jno
pusha
mov
jl
sti
inc
add
fstpt
pop
push
cmpsl
lea
pop
adc
daa
pop
cmp
jb
jle
ds
and
in
dec
xchg
xlat
dec
sbb
mov
pushf
movb
mov
out
jl
or
rorb
xchg
lea
sub
sbb
aas
cs
push
fadd
mov
jne
fs
cmp
xor
stc
cmpsb
js
cld
lods
cltd
lcall
adc
mov
int
nop
and
pushf
mov
shll
pusha
and
repnz
mov
arpl
pop
mov
mov
jg
loop
xlat
sbb
pop
aas
les
xchg
cmc
inc
pushl
xchg
pop
int
mov
je
push
adc
and
xor
and
stos
daa
cltd
adc
jle
push
add
or
stc
out
test
loope
int
dec
andl
gs
xchg
sarb
add
jp
movsb
pusha
ficompl
pushl
or
jmp
xchg
jns
call
inc
adc
xorl
mov
mov
inc
inc
sub
pop
cmp
call
das
xor
push
rolb
lock
icebp
and
fadds
leave
test
and
out
inc
call
popa
fcom
push
sbb
cli
call
mov
sar
pop
and
pop
cmp
mov
push
sub
add
xor
out
in
mov
inc
aas
movsb
mov
imul
int3
pop
in
xchg
stos
inc
data16
jmp
test
dec
ja
xchg
add
lret
fcom
or
jge
push
inc
push
fucomp
jo
sti
adc
push
leave
adc
je
mov
std
push
das
mov
inc
int3
mov
std
gs
std
lret
and
inc
jp
dec
dec
jp
dec
loopne
xchg
cmp
push
out
inc
push
xchg
clc
add
xchg
sbb
test
push
mov
mov
loopne
push
adc
pop
adc
jae
pushf
xor
push
inc
cmpsb
in
movsb
jmp
inc
push
inc
mov
sbb
sbb
sahf
iret
mov
or
xor
adcb
mov
dec
xorl
cmp
js,pt
sbb
jp
test
aas
insl
repnz
mov
mov
cmp
jge
mov
bound
sahf
mov
jno
fdivrs
xor
sub
lahf
js
push
in
and
dec
into
xchg
out
sti
sub
xchg
aaa
mov
in
les
inc
bound
inc
fwait
sbb
and
in
stos
pop
cmpsl
jae
push
sub
pop
js
sub
xor
cld
sub
mov
add
dec
sbb
cwtl
out
mov
test
test
outsl
add
aad
cmp
xchg
or
movsl
orb
nop
jmp
push
insl
cmp
sub
iret
fimull
push
stc
cmpsl
mov
inc
popa
jg
fldcw
jge
outsl
push
int3
pop
jnp
jb
lea
andb
adc
add
mov
sub
xor
aas
insl
in
xor
mov
xlat
cmpl
shrb
sub
xchg
std
andb
sahf
cwtl
lea
inc
adc
push
cltd
test
subl
push
adc
adc
popa
pusha
and
sahf
movsl
jo
out
bound
jge
jb
enter
dec
stc
nop
jge
insl
push
push
mov
jp
das
popf
xor
dec
in
push
pop
mov
xor
sub
xor
lahf
lahf
cwtl
lods
xchg
adcl
fs
int
lods
jne
jne
dec
mov
cmpsl
cmp
dec
sahf
pop
pop
cs
xchg
bound
lahf
or
cmp
mov
adc
nop
adc
arpl
ret
js
fwait
xor
lock
jl
add
stos
cmp
cltd
loopne
divb
scas
add
mov
fnstsw
ret
lds
shrb
gs
sbb
out
xrelease
or
and
adc
pop
fwait
outsb
shrb
test
sahf
or
test
enter
sbb
cld
inc
daa
cmpsb
cwtl
leave
scas
xchg
jb
mov
sub
cmp
sbb
ljmp
lcall
mov
je
inc
cmc
push
pop
adc
mov
mov
mov
addr16
or
adc
pushl
cmp
mov
fwait
in
mov
and
sbb
xor
xchg
das
cmp
pop
mov
jg
and
fnsave
cltd
aaa
mov
pop
int3
in
sub
sub
cmp
addb
pop
xchg
iret
aaa
mov
and
jo
ss
lea
xlat
movsb
sbb
scas
xchg
pop
push
push
mov
jp
mov
shlb
inc
xlat
sub
push
sub
cwtl
xor
jg
stos
imul
xchg
stos
icebp
or
mov
jno
jmp
mov
xchg
divl
sub
and
sbb
int3
pusha
sbbb
xchg
enter
inc
lods
movsl
cld
iret
mov
inc
ror
jns
dec
mov
imul
repz
stos
outsb
icebp
dec
pop
dec
cmpsb
add
int3
mov
roll
pop
lock
mov
fbld
add
fildl
fidivrl
in
lret
sbb
jae
aad
jnp
mov
mov
mov
into
fisubrs
sbb
mov
dec
push
ficompl
dec
pop
jecxz
or
xchg
icebp
pmaxsw
cmp
sbb
sbb
mov
int
mov
fwait
jns
rolb
jb
gs
fidivrs
push
dec
fstl
rcrl
fists
jp
sbb
cmpsl
add
fucomip
sahf
or
xchg
xchg
mov
jg
in
inc
adc
test
repnz
xor
pop
add
push
cmp
dec
xchg
movntps
ljmp
push
ss
enter
push
test
lock
lret
rclb
ret
hlt
cmp
cld
ret
outsl
xchg
pop
and
adcb
in
enter
clc
jmp
bound
pop
and
xor
loope
add
das
mov
push
dec
aas
xorb
adc
repnz
mulb
pop
scas
mov
add
fisubl
in
push
out
fsubp
adc
jl
xor
mov
and
in
push
dec
push
aaa
stos
fwait
mov
sbb
jmp
icebp
clc
fisubs
dec
movsb
sbb
std
push
xor
adc
dec
dec
adc
mov
inc
add
mov
pop
xorps
aas
lea
in
push
cmpsb
les
cmpsb
push
fstpt
pop
jo
clc
push
aaa
es
push
cs
negb
sbb
pop
idiv
iret
dec
lods
jle
mov
inc
lahf
cmp
hlt
sbb
hlt
adc
xor
cltd
ja
cwtl
mulb
mov
dec
mov
rep
mov
loopne
call
sbb
movsb
inc
dec
mov
dec
add
test
xchg
mov
add
into
sbb
jmp
insl
outsl
jne
fwait
data16
push
cmp
es
cmp
or
jns
pop
sti
jmp
sub
lea
xor
push
lret
fsubrl
and
lds
cmpb
dec
cltd
nop
push
out
cli
lret
adc
test
shll
out
adc
xor
je
lea
sahf
mov
and
mov
out
mov
and
jg
mov
lea
movsl
sarl
imul
outsl
fisubrs
jnp
add
mov
mov
in
sbb
adc
mov
push
mov
rorb
out
push
xchg
rorl
dec
inc
mov
out
shrb
xor
mov
clc
fdivrs
mov
test
mov
aad
popf
rol
sbb
movsl
add
inc
mov
cmp
jle
int
adc
int3
xchg
lret
fld
lods
fisubrs
add
outsl
inc
std
iret
xor
xchg
or
imul
cwtl
gs
inc
sahf
push
lcall
sarb
fldcw
push
fisubrl
fsubr
adc
jg
push
inc
or
sub
push
xor
daa
shlb
jb
adc
arpl
test
mov
fldl2t
inc
dec
adcl
out
pop
sahf
mov
out
xchg
sub
mov
sub
xchg
movsb
repz
lock
push
or
pop
add
pusha
jl
int3
stc
nop
decb
lahf
mov
mov
fldcw
lret
pusha
xchg
pop
in
mov
loope
aad
mov
sub
addb
lcall
lahf
push
mov
int3
xor
cmc
jl
inc
cmpsb
and
push
mov
jmp
iret
fwait
push
cmpsb
clc
or
scas
jge
cs
inc
lret
pop
cmp
dec
jno
jnp
xchg
rorl
jle
jne
cmp
cmp
sbbb
xchg
push
popf
ret
mov
mov
movsl
jo
mov
and
bound
test
cmp
out
mov
mov
pop
jle
mov
add
xchg
shll
push
in
mov
shrb
push
add
push
inc
xchg
cwtl
test
cmp
aam
sbb
mov
and
les
mov
test
sbb
xchg
jp
adcb
mov
fyl2xp1
nop
das
push
repnz
es
xor
inc
pop
jl
subl
cmp
loopne
adcb
inc
fcomps
mov
stos
outsb
push
push
inc
addb
sbb
fcomip
sbb
loop
pusha
push
xchg
jne
dec
mov
sub
or
mov
leave
lahf
daa
or
pop
adc
insb
jle
or
loope
dec
mov
mov
mov
or
cmp
push
or
adc
sti
adc
mov
fistl
int3
xchg
je
xlat
aam
stos
cmc
adc
in
sarl
je
stos
adc
lahf
mov
stos
das
add
data16
push
enter
std
xor
push
add
sbbb
inc
and
fucomp
mov
inc
je
jp
addr16
jge
mov
decb
pop
mov
loope
shl
mov
les
notl
xor
push
call
mov
bound
jbe
lea
mov
mov
cmp
sub
movsb
aaa
jno
push
sub
inc
leave
fnstcw
add
mov
add
lret
rcrl
iret
dec
jnp
cmpsb
fs
push
sbb
add
push
cs
dec
inc
pop
inc
sub
inc
test
fstps
loop
call
leave
or
negl
mov
les
popa
stc
xorb
mov
push
nop
and
xchg
sub
mov
pop
cmp
sahf
xchg
sub
cmpsl
sahf
mov
test
xchg
push
inc
icebp
or
stos
jbe
mov
mov
aad
addr16
and
pop
outsb
rcrb
cmp
shrb
inc
sbbb
inc
add
mov
xor
arpl
shlb
xor
push
movsb
fildll
rclb
mov
mov
xlat
pop
decl
clc
out
aas
hlt
mov
xor
sbb
test
mov
out
push
jns
dec
pop
add
loopne
out
call
imul
hlt
jmp
ds
cmpsb
add
or
mov
cli
pop
dec
push
sbbl
gs
movsl
iret
push
mov
testb
sub
add
or
das
fsubl
movsl
sub
int
in
leave
shl
sbb
adc
push
ljmp
mov
cmp
ja
sub
inc
jl
test
inc
lcall
into
daa
loop
xchg
lahf
int
lock
loope
stos
xchg
sbbb
add
xorl
push
fucomp
mov
xor
or
pop
sahf
sub
fmul
cmp
jmp
mov
dec
xlat
lds
fldt
shlb
add
loopne
ljmp
and
fsubrp
jae
je
jb
xor
sub
pop
and
push
jmp
lahf
cwtl
sub
rcrl
cmp
fnstcw
mov
push
add
xor
mov
stos
adc
fcomps
mov
std
jnp
negb
xor
jmp
push
jl
sub
aam
dec
icebp
dec
cmc
in
fwait
loop
add
mov
lods
je
enter
mov
orb
cmc
insb
out
stc
xchg
and
cmpsb
dec
call
aas
mov
frstor
mov
cmpsl
jo
aaa
hlt
mov
test
loop
addb
js
jp
fs
sub
cld
loope
dec
xchg
cmp
jno
adc
stos
inc
fnstcw
xchg
dec
mov
pop
mov
dec
shr
rclb
mov
lahf
popf
jge
pop
scas
lods
lcall
enter
sub
leave
mov
dec
adc
out
fbstp
mov
aaa
repz
sub
jmp
jnp
dec
push
enter
cltd
sub
shrl
add
cmp
aam
sub
jno
sbb
sbbb
stos
and
sbb
test
ret
cmpsl
pusha
mov
imul
icebp
jns
loopne
dec
jle
cmp
sub
mov
ljmp
loopne
addr16
jp
mov
test
orl
lret
or
mov
popa
es
inc
movsb
ds
data16
ljmp
push
mov
movsl
push
repnz
dec
loope
idiv
lret
data16
nop
ss
mov
cmp
dec
insb
sub
jb
cmpsb
arpl
add
fs
xchg
outsl
xorl
jmp
pop
loope
or
stos
mov
enter
dec
and
jae
push
and
movsb
movb
rcrl
mov
mov
add
cltd
fildl
pop
mov
sbb
ret
imul
sub
out
notb
xor
sbb
adc
les
rorl
push
insl
jno
shlb
clc
mov
adc
cmc
addr16
mov
push
fdivs
inc
add
cli
mov
in
cmpsl
fstl
in
aas
pop
and
mov
mov
mov
mov
dec
andl
cmp
je
mov
es
sbb
pop
jno
imul
jbe
push
mov
or
outsl
out
xor
ljmp
addr16
mov
add
rolb
shrb
mov
dec
pop
rcl
in
pop
into
cmpsl
cmp
fcoml
int
mov
xor
cmp
mov
xor
in
aas
stos
mov
sbb
out
xchg
push
pop
scas
movsb
sub
jg
loop
cltd
mov
rcll
test
lods
cmp
jbe
hlt
and
out
pop
sub
fs
ret
stc
pop
imul
adc
cwtl
xlat
xor
je
jmp
inc
inc
mov
mov
stos
js
and
add
fwait
add
scas
xchg
test
mov
in
add
in
and
and
add
sub
or
xor
and
mov
pushf
mov
inc
cmpsb
test
mov
xchg
add
sub
outsb
xchg
mov
inc
lahf
fidivrs
pop
dec
loop
out
lods
sub
push
and
outsl
jge
ret
leave
push
or
jge
enter
pop
daa
jg
fsubrs
enter
xor
popf
imul
inc
adc
rol
scas
shlb
test
stc
hlt
leave
push
xchg
xchg
jge
add
xlat
pop
repz
aas
cmp
js
aad
imulb
fs
pushf
data16
sbb
mov
lock
sbb
inc
lock
xchg
addr16
push
divl
pop
sub
jno
dec
mov
dec
or
es
popf
fidivs
inc
mov
and
fucom
push
sub
mov
sbb
stos
mov
lahf
jp
xchg
mov
arpl
daa
ss
ds
mov
out
mov
dec
sbb
ds
add
sbb
fwait
lea
hlt
mov
push
loopne
pop
mulb
cmp
add
sub
pop
dec
fs
stos
cld
lcall
sbb
aam
mov
cmp
or
sub
xor
test
push
cli
ja
aad
cmpsl
xchg
xchg
add
xor
cmpl
mov
sbbl
push
mov
mov
int3
mov
hlt
cmpb
scas
sub
inc
push
cmpsb
fsubl
stos
mov
int3
add
fsubrp
push
pop
mov
or
jg
ja
jb
dec
mov
lods
daa
mov
lds
leave
movsb
mov
jle
mov
and
stos
xor
fstl
mov
adc
cld
lods
xrelease
cli
pop
icebp
inc
inc
adc
jns
ja
addr16
lcall
jb
jl
mov
cmp
test
dec
dec
scas
fbstp
mov
sbbl
sub
ret
fstl
out
fists
cmp
pushf
fstpt
inc
sbb
arpl
jecxz
jmp
push
fnstcw
mov
fs
mov
jl
mov
shr
sbbl
xlat
sbbl
mov
mov
dec
dec
loop
jns
arpl
loope
cltd
mov
add
jp,pn
sub
sub
sahf
pop
jne
movsl
xor
pop
push
aam
mov
subb
fwait
out
or
mov
cmp
lods
or
fsubp
mov
es
mov
mov
mov
das
addr16
xchg
sub
mov
sub
mov
pop
negb
movsl
stc
xchg
nop
push
repz
sub
mov
xor
cltd
arpl
mov
mov
push
imul
aam
lcall
sub
fsubr
adc
repnz
pop
scas
scas
pop
adc
fldcw
jb
mov
xchg
sub
mov
fcomps
stos
fldcw
pop
xchg
jecxz
test
push
mov
mov
rol
push
xchg
shrb
test
or
clc
nop
aas
out
mov
pop
pusha
pop
lret
mov
sub
sbb
rcll
in
jl
imul
sub
fidivl
cs
fxch
sub
adc
mov
test
dec
sahf
pop
rcl
roll
out
push
scas
testl
jle
mov
clc
es
xchg
xchg
dec
inc
push
sub
xor
fstps
lret
or
and
push
in
push
xlat
test
xor
scas
push
call
test
xor
ss
or
popf
fnstsw
mov
inc
stc
mov
shrl
dec
or
leave
mov
je
pop
scas
pop
push
rcr
mov
fdivr
xchg
push
mov
mov
inc
or
shll
xchg
cmp
dec
ja
xsha1
cmpsb
dec
sahf
jmp
in
sbb
inc
mov
ficompl
jle
sub
shr
in
xchg
pop
pop
cltd
popa
div
mov
jg
mov
sbb
sahf
cwtl
pop
scas
leave
rclb
jno
lods
inc
outsb
dec
cmpsb
mov
and
cwtl
push
jne
dec
pop
xchg
mov
sahf
jl
insb
scas
jecxz
xor
jae
xchg
int3
scas
inc
arpl
mov
enter
aaa
mov
dec
mov
lret
push
out
fimull
dec
pop
or
dec
xchg
daa
xchg
jb
fildll
test
and
sti
sbb
lret
lock
xor
mov
fisubl
xor
outsb
xor
inc
lds
push
pop
xchg
ss
fcomps
inc
xlat
cmp
jecxz
adc
movsl
fwait
push
int3
jg
xchg
mov
mov
mov
cmp
stos
mov
sbb
and
adc
dec
outsb
mov
xchg
je
mov
xchg
and
imul
jns
xchg
jge
push
mov
jnp
cmp
fidivs
cwtl
or
sbb
push
ret
xor
hlt
jl
test
mov
je
sti
cmp
insb
sti
fistpll
dec
addb
sub
cwtl
cli
decl
adcl
push
push
xor
xor
rolb
insl
stc
add
lret
bound
add
xchg
cmpl
fwait
add
xlat
mov
lods
adc
jbe,pt
jo
pop
inc
push
dec
out
jnp
in
pusha
lret
movsl
add
jmp
add
fmuls
mov
sub
in
ds
data16
aam
inc
push
stc
sub
cltd
lahf
rol
out
daa
push
pop
repz
push
jne
sbb
xchg
ss
rcrb
add
cwtl
pusha
fdivs
mov
dec
stc
je
adc
lods
hlt
jcxz
dec
cwtl
cmp
push
mov
sbb
jb
ljmp
xor
and
rcrb
mov
call
or
jg
or
lods
shrl
or
call
inc
mov
fs
cmp
and
icebp
into
dec
pusha
repz
push
incb
xchg
dec
pop
sahf
cmp
push
dec
in
xorb
cmp
xchg
ret
repnz
sahf
xor
test
lahf
mov
cli
outsb
popf
stc
mov
push
lea
test
lret
jmp
mov
mov
aam
jecxz
fdivrs
shlb
data16
mov
add
arpl
mov
subl
xchg
inc
lea
jecxz
pushw
int3
inc
insl
pop
sub
gs
push
add
push
popf
cmp
fstps
scas
jmp
cmp
in
icebp
ds
ret
fst
loop
jl
rorl
stos
push
mov
sub
daa
xchg
jne
cmpsb
mov
push
adc
test
pop
and
je
scas
push
cmp
ret
hlt
out
out
xchg
icebp
pop
insl
loop
push
in
out
mov
cmp
imul
pop
icebp
mov
das
or
add
mov
lock
inc
test
cltd
mov
dec
movsb
mov
dec
mov
movsb
jnp
inc
repnz
loopne
mov
sbb
pop
lods
jmp
push
adc
je
aaa
and
mov
push
cmp
stos
mov
rcrb
dec
mov
loope
sbb
xchg
insb
add
cmpsl
or
divl
or
or
and
push
xor
mov
jle
dec
in
pop
outsb
inc
pop
mov
xorb
push
stos
es
mov
mov
jbe
push
mov
pop
xchg
out
adc
xchg
outsl
addb
sub
adc
fldenv
sahf
cmp
arpl
or
outsl
push
or
aaa
mov
lea
and
push
f2xm1
mov
fmuls
cmpsb
or
enter
test
inc
js
in
pop
test
fisubrs
jno
pop
mov
fwait
outsb
pushf
aaa
mov
jl
jle
icebp
add
mov
mov
sbb
imul
aaa
push
pop
insb
xor
xor
xor
and
sbb
adc
sti
cmp
sbb
cmp
pop
mov
sub
xchg
sbb
mov
sbb
pop
lret
and
jecxz
add
outsl
cs
lods
pop
dec
icebp
xchg
mov
jmp
in
insl
sub
pop
xchg
add
cs
sbb
push
std
movsb
cmp
gs
int
ret
std
inc
pop
sbb
data16
popa
mov
test
repz
hlt
roll
fisubl
mov
std
mov
mov
aam
and
aad
mov
fs
pop
out
push
sbb
mov
and
or
sbb
push
fisubl
sarl
or
lfence
cltd
fbstp
lods
cmp
das
mov
loopne
inc
addr16
xchg
mov
jae
mov
into
lret
stc
pop
add
or
hlt
sahf
inc
in
adc
das
or
xchg
jg
das
ret
ljmp
loope
lahf
mov
shrb
lahf
push
jge
mov
sahf
lret
pop
push
fsubs
std
es
xor
scas
inc
inc
and
pop
movsb
jl
adc
jb
fwait
and
inc
ret
roll
jmp
shlb
push
icebp
xchg
mov
ja
jp
movsb
cmp
inc
add
pop
jp
imul
out
sub
inc
jl
adc
dec
push
out
test
movsb
sub
add
mov
xchg
pop
les
xor
popf
bound
pop
add
mov
push
outsl
jns
fucomip
idivb
dec
mov
rep
or
xchg
lret
jp
ret
pop
outsb
jnp
jnp
jb
imul
mov
cld
dec
jae
repnz
andl
sub
testb
fsts
mov
or
ja
sahf
add
mov
sub
pop
out
ja
pop
mov
add
push
js
mov
xchg
stos
imul
mov
mov
repz
cld
xchg
xchg
lretw
push
mov
les
ljmp
cmpb
aam
testl
adc
mov
mov
ficomps
fldl
filds
sarb
xchg
orb
mov
lock
iret
inc
fcoml
mov
dec
loopne
lods
aad
arpl
repz
dec
push
jecxz
subb
jg
js
mov
sub
notb
divb
sbb
int3
in
test
mov
push
stos
mov
js
jb
insl
sub
fpatan
cmpsl
xor
sub
xchg
call
or
sub
cmp
mov
mov
mov
jge
imul
pop
pop
push
stos
outsb
test
bound
subb
daa
and
inc
lods
xchg
pushf
gs
mov
inc
loope
movsl
dec
mov
mov
xchg
cmpsb
scas
out
mov
ljmp
and
idivl
xchg
andb
movsl
test
out
sbb
pushf
mov
daa
ja
in
jle
or
ja
sbb
ds
stos
repnz
add
ljmp
popf
mov
pop
aaa
in
push
mov
jl
or
sahf
shlb
sub
hlt
scas
inc
es
mov
adc
data16
mov
mov
ja
movsl
mov
inc
in
cmp
fwait
sti
jge
stos
cwtl
data16
rorb
imul
mov
jg
movsl
xor
push
mov
mov
or
bnd
imul
cltd
xor
and
mov
ds
fcmovb
sarl
fsubrs
loope
cmp
cmpsb
xchg
sbb
sub
in
cmp
inc
mov
mov
add
cmp
push
mov
and
jno
cmp
into
test
cmp
mov
fs
sub
xorb
gs
idivb
and
xchg
mov
loopne
jg
sub
xchg
mov
xor
gs
test
push
popa
aam
jo
andl
adc
jb
cmp
dec
pop
adc
mov
jns
mov
negb
jns
dec
lock
add
xchg
lods
mov
add
movsl
or
xchg
jnp
inc
pop
scas
xchg
loopne
xor
fistpll
push
mov
test
and
pop
sub
lcall
xor
in
movsb
ljmp
add
xchg
pushf
inc
sahf
test
push
mov
xor
jo
push
test
jbe
jns
cmp
rcrl
dec
hlt
pop
xlat
inc
pop
push
inc
lock
loope
dec
stos
je
int3
pop
test
xor
je
test
test
es
dec
les
icebp
mov
lcall
out
adc
xor
push
cmp
inc
sbbb
lret
sub
push
push
dec
push
xchg
adc
inc
mov
in
or
rorl
sbb
je
adc
cli
xchg
add
jo
sbb
aaa
sbb
jg
lods
mov
in
movups
jmp
add
mov
ficoms
cmp
pop
loope
movsl
icebp
adc
jle
push
int3
fidivrs
stos
add
repz
sbb
mov
mov
fldt
repz
add
popa
cmpl
inc
dec
dec
icebp
es
pop
and
lret
sub
mov
maskmovq
negl
popf
mov
cmpsb
inc
pop
add
sub
xor
push
bound
adc
cmpsb
xchg
sub
stc
aas
test
jp
fwait
das
int3
jl
xchg
mov
shl
adc
ds
fldenv
sub
fsubrl
incb
jmp
pop
pop
dec
pop
sahf
mov
pushf
scas
cmc
out
adc
aam
in
das
xchg
xchg
mov
imul
orl
dec
cmc
and
inc
cmp
js
lcall
inc
pushf
xor
sub
adc
sbb
xor
sub
push
insb
inc
cmpl
mov
push
scas
imul
sar
jnp
mov
push
dec
xor
test
dec
cmpsb
dec
push
or
shrb
jbe
out
dec
icebp
inc
lcall
jg
mov
stos
in
push
scas
inc
or
scas
rcrl
xchg
in
jns
test
adc
fdivp
or
lret
lea
mov
divb
push
pop
icebp
inc
mov
stc
ret
and
call
xchg
inc
sahf
clc
jns
add
inc
xorb
pop
mov
mov
sahf
jmp
push
js
nop
cmpsb
pushl
mov
xchg
out
pop
add
dec
aaa
cmpsb
inc
fidivrl
les
sti
push
xor
mov
test
adc
xchg
ffreep
push
nop
test
and
fstps
pop
xchg
cli
sub
push
mov
sahf
test
push
icebp
pop
adc
test
sarl
mov
jle
xchg
mov
mov
ret
mov
js
in
sub
sub
leave
fistpll
xchg
int
add
xor
mov
ret
movsl
icebp
in
fdivl
outsb
fcomp
push
jecxz
aaa
cmc
dec
pop
inc
push
orb
pushf
cmp
mov
cmp
aam
fbstp
std
or
push
scas
test
cmp
outsl
xchg
xor
jne
mov
push
xchg
dec
lods
arpl
xor
arpl
mov
lcall
out
adc
mov
into
loopne
pop
mov
je
scas
sahf
mov
push
cmpsb
inc
popf
jbe
insl
xchg
outsb
cmpsb
inc
std
push
nop
add
fnsave
mov
sarl
sbbl
push
repz
push
or
cmpsl
cmp
push
jne
mov
mov
inc
xchg
shll
pop
adc
rcl
add
push
lods
pop
inc
int3
and
adc
lods
xchg
nop
imul
dec
insb
xor
dec
push
shrb
scas
sub
pop
lahf
mov
ret
push
and
xor
adc
or
sbbb
jo
sub
lahf
push
test
lret
sti
xor
add
mov
imul
lock
mov
pusha
mov
insl
dec
inc
fdivrl
icebp
mov
popa
add
loopne
lcall
adc
imul
mov
ret
adc
adc
adc
movsl
test
dec
sti
mov
mov
test
je
push
adc
sub
jp
adc
fsubs
sub
cmp
push
lcall
adc
es
push
jmp
in
push
clc
imul
repz
jbe
aaa
dec
mov
sbb
sub
sbb
fnsave
xor
xchg
push
mov
aaa
adc
dec
mov
inc
fwait
sbb
ljmp
lret
mov
cmp
cmpsl
rcll
jbe
adc
add
add
push
push
mov
out
fisubrl
cld
sub
cmp
jmp
ret
sbb
nop
adc
out
lahf
je
push
sti
push
jg
dec
lahf
jecxz
xlat
sub
push
es
test
adcb
pmulhuw
xor
push
mov
pushf
mov
push
jmp
inc
and
fwait
add
pusha
lret
push
aas
dec
movsb
inc
mov
sub
pop
and
mov
sub
sub
xchg
xor
shrl
andl
iret
and
sub
or
jno
nop
add
sub
and
std
mov
in
inc
mov
sub
inc
xlat
adc
mov
dec
outsl
or
das
sub
xchg
pop
idivb
into
stos
cli
xchg
aad
jle
scas
jno
scas
stos
sub
ss
movsl
mov
jmp
jnp
push
xchg
lock
ret
and
push
jmp
mov
jo
lahf
daa
mov
xor
in
ret
mov
jne
lret
testl
push
popf
aas
jae
mov
movsl
and
fildl
das
push
xchg
mov
out
mulb
shl
in
sub
inc
cli
sti
fwait
push
int3
xchg
xor
fxch
arpl
adc
jae
jmp
mov
fbld
ss
dec
add
popf
jb
mov
in
and
ljmp
and
xchg
mov
mov
or
jle
cmp
aaa
mov
mov
push
cmp
testb
jb
jae
fnstenv
add
push
jnp
sbb
mov
mov
mov
cmp
rorl
fstps
fucom
testl
jbe
mov
fs
push
adc
jae
push
lahf
notb
aaa
add
dec
insl
out
ret
or
mov
dec
sub
mov
sar
jg
imul
jp
push
insl
stos
fidivrs
rorb
popa
shrb
movsl
pop
adc
fbstp
hlt
mov
pushf
push
es
fbstp
lret
jae
mov
lret
jb
mov
jl
mov
jbe
mov
cmpsl
sub
xor
loop
pusha
cwtl
cmp
push
inc
inc
stos
shll
inc
stos
shrl
xchg
lahf
sbb
xor
lock
mov
popa
add
mov
into
sub
mov
out
cmp
and
sbb
pop
out
cld
cmp
test
dec
or
fwait
mov
push
jmp
test
dec
mov
jb
insb
std
out
test
mov
sbb
push
ds
inc
or
outsl
dec
mov
xor
cmp
in
sbbl
icebp
cwtl
lahf
lods
or
xchg
and
jbe
aam
cmp
sbb
in
mov
add
xchg
lea
rcrw
xchg
add
out
mov
loope
mov
inc
or
dec
ds
gs
adcb
mov
les
xchg
flds
call
mov
in
lcall
inc
xchg
data16
inc
mov
lds
arpl
scas
xchg
xchg
bound
dec
movsb
push
daa
adcb
sbb
cli
dec
push
lahf
scas
mov
test
jp
cmp
cwtl
stos
mov
push
dec
cmpsb
fnstenv
mov
imul
fsubp
lods
mov
je
std
fcompp
xchg
xchg
xchg
popa
clc
enter
add
pushf
xchg
rclb
cmp
addr16
cmp
cmp
into
and
add
arpl
or
out
icebp
cmp
push
lcall
cmpsb
lret
jbe
andl
shrl
hlt
mov
hlt
mov
lods
add
xlat
test
in
mov
cmpsl
inc
divl
jno
lock
inc
notl
cmp
scas
push
mov
adc
mov
lcall
xchg
sbb
dec
sub
test
movsb
std
pop
sbb
pop
std
mov
in
cmp
pop
mov
pop
jae
cmpsl
push
mov
xor
inc
loope
inc
into
popa
fnsave
movsl
ljmp
call
lcall
mov
nop
int3
arpl
or
in
addl
jae
cmp
xchg
xor
mov
jmp
out
and
fadds
add
xchg
mov
add
data16
lret
addr16
fistps
sbb
adc
mov
push
mov
mov
clc
add
xchg
sub
daa
inc
mov
mov
nop
lea
testl
daa
jle
decl
jnp
repz
or
sub
fdivp
div
adc
and
mov
leave
jb
hlt
testl
jl
int3
int3
in
xor
adc
lock
nop
in
stos
in
pop
push
loop
int3
mov
push
and
xchg
dec
lahf
aas
xchg
dec
dec
aaa
cmp
popf
push
iret
arpl
lcall
fucomip
mov
test
sbb
stc
clc
pop
sub
movsb
cmc
cmp
mov
scas
push
xor
out
lcall
fwait
jb
ss
add
inc
testl
fwait
cmp
mov
out
imul
prefetch
or
mov
push
loop
xor
cmp
mov
adc
ds
leave
aad
int3
loopne
push
push
cs
test
add
ret
hlt
out
mov
and
cmpsl
ds
pop
cld
cmp
rol
filds
cmpsl
data16
xchg
mov
stos
sub
mov
imulb
add
jbe
push
adc
fidivrs
popa
fsubl
inc
inc
pop
lahf
or
in
fsubl
mov
imul
sub
in
jno
dec
shl
test
data16
fidivrl
outsb
add
sarb
cwtl
mov
mov
cwtl
fs
out
xor
pusha
mov
pop
in
stos
pop
call
iret
test
lea
lea
mov
sti
imul
mov
sub
out
fcomps
inc
pop
jp
outsl
stos
mov
aad
jo
xor
cmc
enter
xchg
dec
out
pop
or
cmp
fs
xor
test
inc
sbb
js
les
call
and
test
and
into
lahf
mov
jmp
add
mov
push
test
notb
mov
dec
adc
mov
cmp
and
jo
sub
out
cmc
and
scas
andnps
inc
outsl
xchg
dec
xor
test
cmpsb
sub
xor
sub
pop
pusha
mov
in
hlt
popf
hlt
add
sub
inc
and
xor
cli
pushf
stos
dec
cmc
mov
negl
test
push
mov
jl
rorb
aad
into
gs
push
stos
inc
hlt
mov
mov
dec
push
repz
jns
or
lcall
sub
cmp
cmpb
es
repnz
daa
jns
push
jnp
dec
shl
test
mov
data16
pop
int3
fidivrs
xlat
xchg
add
xchg
in
stos
and
mov
dec
xlat
sarl
pop
shlb
loopne
loope
pop
pop
aam
in
xchg
push
or
inc
std
jle
mov
push
xchg
nop
jb
ljmp
popa
addl
pusha
icebp
or
mov
es
pop
pop
cmc
stos
cmp
pop
sbb
into
decw
lcall
adcl
outsl
cmp
cmp
mov
test
inc
rol
test
ret
outsl
popf
cmp
daa
mov
pop
dec
lahf
push
push
or
cli
dec
add
cmpb
jnp
jl
xor
ror
jecxz
dec
and
sub
out
in
or
pusha
adcl
fs
lds
lds
in
outsb
outsb
add
mov
add
add
addr16
jo
es
int
jge
push
insl
test
scas
cwtl
in
push
lods
inc
call
inc
inc
xor
ljmp
dec
addr16
and
adc
hlt
mov
mov
pusha
sbb
pop
jnp
add
lds
xor
jb
jno
fdiv
or
out
push
ds
dec
pop
test
lret
sahf
std
dec
lock
fldenv
rolb
xlat
jbe
das
adc
neg
in
mov
gs
lahf
lock
stos
rolb
jp
pop
repz
int
sub
jp
or
mov
mov
or
bnd
mov
ljmp
idivb
insb
dec
dec
sbb
xor
cmpsl
dec
mov
sbb
pop
add
push
xor
jne
add
in
sub
pop
push
inc
roll
subl
ret
xchg
rcrl
push
les
adc
jns
test
fiadds
and
inc
sbb
xor
lcall
jl
in
adc
int3
inc
aam
ficoml
nop
pop
cmp
lods
or
push
lds
rcll
pause
mov
mov
push
dec
mov
inc
insb
add
pop
xor
lret
xor
out
lea
mov
fcmove
and
cltd
std
inc
xchg
push
jo
sub
push
fisttpll
dec
aad
shl
dec
pop
sub
lcall
psubw
sbb
mov
mov
add
loop
add
ja
sbb
nop
xlat
insl
in
dec
dec
push
jp
fidivrl
lock
sub
arpl
lock
sub
movsl
nop
push
js
pop
xorb
xchg
push
data16
out
mov
pushf
test
mov
pop
push
hlt
mov
dec
add
clc
mov
xchg
xchg
jne
dec
lret
add
out
stc
xlat
gs
inc
jne
jmp
ja
stos
jns
pop
sbb
push
leave
imul
push
lret
add
lret
lods
dec
shl
into
jno
mov
and
adc
push
push
sbb
lahf
imull
out
adc
or
cs
stos
icebp
add
and
out
out
incb
adc
dec
movsl
pop
mov
mov
test
bound
xchg
addr16
sbb
fneni(8087
push
dec
inc
mov
jbe
push
mov
lahf
lods
xchg
cld
out
cmp
sti
imul
sbb
je
es
stc
test
jb
xchg
stos
ljmp
test
jecxz
imul
jmp
je
nop
dec
add
shrl
mov
out
mov
sbb
ljmp
fbld
inc
push
call
push
scas
call
and
jne
sbb
jb
je
data16
rorl
inc
lret
aaa
dec
int
jne
lds
and
sbb
mov
xor
xchg
scas
dec
sub
dec
out
push
adc
ss
dec
sub
outsb
add
subl
loope
pop
mov
dec
adc
inc
sub
and
push
das
into
ja
sti
shld
in
push
mov
clc
mov
xor
dec
or
add
add
xlat
xor
pusha
data16
fistpl
jb
push
outsb
pop
sub
adc
int3
xchg
xor
fisubs
sub
addb
sub
mov
outsb
xor
cmp
lret
cwtl
jne
sbb
dec
mov
aas
dec
lea
jnp
faddl
xor
std
es
or
jb
pusha
fsubl
cwtl
xor
mov
mov
repnz
hlt
xchg
adc
xchg
and
pop
in
ret
and
mov
mov
fsubl
stos
add
and
inc
pop
mov
inc
jmp
cmp
stc
mov
or
xchg
jo
hlt
sub
sub
cltd
dec
and
adc
bound
inc
pusha
pop
xor
mov
xor
imul
ljmp
jno
js
jecxz
ljmp
fcoms
psadbw
aaa
inc
imul
lea
daa
adc
mov
jl
xchg
repnz
in
jmp
jmp
mov
adc
jmp
cmp
das
cmc
int3
jmp
mov
ds
lock
or
and
test
jbe
jle
or
in
cld
ret
pop
add
inc
sbb
pop
mov
dec
cmp
xor
in
mov
adc
sbb
nop
xchg
in
dec
and
and
out
cmpsl
jecxz
or
ds
inc
cmpsl
sbb
mov
jge
xchg
xor
adc
xor
mov
push
mov
es
cwtl
insl
add
xor
xchg
mov
mov
scas
sbbl
mov
aam
shr
mov
cmc
sarl
arpl
popa
adc
xchg
mov
call
into
outsl
xor
jg
cmpsl
and
orb
xor
test
lds
jnp
aas
xchg
mov
fsubs
dec
pop
inc
jecxz
dec
leave
pop
cmp
je
filds
push
out
aaa
add
push
fsubr
les
dec
push
lock
imul
fwait
sti
pop
pop
es
jae
push
or
sbbl
shll
sbb
es
or
stos
lret
test
out
arpl
xchg
cmp
aad
fsubs
xor
mov
stos
out
sbb
inc
cld
sbbb
stc
cmp
adc
nop
inc
test
insb
in
stos
fmuls
sub
or
mov
cs
or
dec
imulb
scas
jno
add
aam
ret
mov
loopne
or
cmp
jle
xchg
lahf
xor
pop
outsl
push
cmp
lcall
mov
sub
xor
sub
in
mov
add
or
lods
xchg
pop
cmpsb
xchg
cmpsb
cmp
rolb
jns
xchg
mov
pop
mov
pop
lods
faddl
dec
add
jmp
or
cmp
out
icebp
into
popf
xor
xchg
cmp
mov
inc
cmp
pop
adc
push
divb
nop
cli
add
add
jae
stc
popf
inc
xchg
sbb
mov
outsb
dec
add
mov
and
cmpsb
in
ds
shlb
xchg
loopne
pop
lds
pop
fldenv
adc
mov
bnd
daa
cli
scas
jns
xor
fsubrs
aaa
jns
ja
inc
or
or
ret
loop
and
xchg
xor
or
push
shl
test
sbb
mov
fwait
cmpsl
jbe
cli
into
cmpsb
xchg
imul
jo
jge
pop
xor
pop
outsl
clc
push
push
imul
xlat
sub
mov
loope
mov
pusha
cli
xchg
sbb
push
scas
inc
jne
shlb
push
fnstenv
mov
jno
loopne
icebp
xchg
sbb
dec
adc
loopne
xor
jnp
cli
ds
imul
jl
sbb
rorb
pushf
scas
push
ljmp
cmp
sahf
jb
and
or
out
int3
jg
jp
cmpsb
cmp
xchg
sub
rorl
arpl
ja
adc
fwait
popa
mov
pop
andb
mov
cmc
mov
mov
xor
mov
in
mov
ret
or
sbb
xchg
pop
pop
pop
incl
gs
pop
sbb
mov
and
or
nop
arpl
cmp
xor
les
sub
xchg
ss
repnz
sbb
fcompl
mov
daa
mov
fsubrs
ret
inc
lods
adc
fnsave
movsb
stos
sbb
mov
jmp
xor
or
xlat
jae
and
stos
inc
fdivrl
enter
mov
cmp
mov
jnp
inc
adc
pop
shll
xchg
testb
sub
cli
mov
inc
jge
mov
add
dec
push
jmp
aad
sbb
out
imul
mov
or
sbb
mov
js
sbb
cltd
and
and
push
sbb
xchg
insb
ss
jp
scas
repz
out
sbb
jne
fstpl
mov
scas
cwtl
cmp
dec
jmp
dec
push
lret
pop
jge
out
cmp
cmp
movb
mov
push
pop
outsl
dec
push
call
enter
stc
nop
clc
sahf
hlt
inc
shrl
sbbl
inc
out
popf
xor
or
fidivrl
lret
lea
mov
push
fdivl
mov
js
xor
xchg
cmpsl
mov
nop
mov
xor
jge
adc
add
sub
xchg
repnz
mov
pop
out
jmp
dec
jmp
jmp
mov
pushl
rorb
subb
add
jne
pop
add
or
mov
lock
mov
cwtl
dec
pop
mov
mov
mov
jne
xchg
cmpsl
inc
enter
add
mov
xor
dec
add
fdivr
xchg
push
adc
cs
movsb
cmp
scas
jge
and
test
test
imulb
adc
dec
jne
jp
ficoms
sub
dec
mov
jg
add
mov
push
jmp
cld
pop
add
dec
sbb
dec
leave
aaa
into
cli
loope
nop
add
push
fsubs
bound
lret
and
andl
ljmp
add
pop
sbb
arpl
outsb
pusha
test
mov
mov
dec
xchg
sbb
mov
test
outsl
stos
mov
mov
push
fbstp
test
mov
add
cltd
push
orb
cwtl
outsb
test
fwait
das
or
jmp
fs
inc
pushf
leave
fwait
lds
mov
dec
movsl
or
pop
push
xor
icebp
mov
daa
stc
or
sbbb
les
xchg
dec
sbb
jle
gs
jg
out
cld
pop
mov
stos
dec
pop
out
mov
ja
aaa
sar
rcr
push
insb
mov
mov
std
dec
imul
add
cmp
sub
addl
mov
jno
xchg
cmpsb
aad
imul
sbb
add
test
pop
fmull
cmpsb
lea
or
mov
jne
push
xchg
out
push
sbb
xchg
add
lea
adc
sub
xchg
xor
dec
jecxz
les
cmc
mov
push
call
adc
mov
stc
pop
out
cmpsl
not
insl
add
mov
shll
mov
cmpsb
or
repnz
js
and
push
aaa
push
addl
mov
sbb
aaa
scas
pushf
dec
sbb
aas
xchg
mov
dec
jbe
jmp
ljmp
cmpsl
xor
inc
inc
xor
shrl
lock
xor
out
xchg
les
loop
jnp
sti
mov
test
sti
outsb
sbb
add
pop
mov
je
xchg
fistpl
stos
mov
mov
mov
adc
dec
cmp
pop
mov
dec
shrb
add
scas
jae
pusha
fldl2t
test
arpl
test
fdivrl
insb
out
and
dec
lcall
pop
cmc
movsl
adc
sub
lahf
jbe
add
jg
pop
and
lds
clc
inc
cmpsb
mov
or
and
cmp
cmp
sbb
repnz
cmp
je
pop
sub
dec
jo
aaa
fldt
shll
lret
jne
xchg
push
push
outsl
ret
xchg
movsl
cmp
loopne
xchg
dec
mov
outsb
inc
dec
xchg
rcrl
lret
int3
sbb
xchg
pushf
inc
js
repnz
push
inc
or
lcall
fisttpll
xlat
loope
gs
xchg
mov
cs
aam
imul
adc
xor
aaa
fcom
pop
or
ljmp
aam
and
lods
in
mov
or
sbb
xchg
xchg
xchg
dec
fistpl
aas
push
stc
jbe
cmp
xchg
mov
cli
mov
or
negb
xorb
ss
pop
inc
sbb
and
test
das
inc
add
lcall
lcall
jbe
pop
addr16
lahf
jb
xchg
fstl
sbb
lret
inc
sub
lea
std
lea
cs
mov
xor
cmpsb
cmp
imul
imul
pop
pop
adc
mov
and
sub
mov
ja
mov
xchg
orb
subb
scas
push
int3
jae
stc
dec
cs
dec
ret
loope
out
roll
repz
and
adc
cltd
enter
sbbl
pushl
mov
in
pop
inc
iret
outsl
jnp
fldt
popa
adc
inc
push
in
adc
aad
adc
mov
cmp
pop
dec
pop
jnp
ret
cs
xchg
jae
xchg
out
aad
arpl
add
jmp
les
mov
je
ja
enter
call
pop
inc
cmp
outsl
insl
cld
bound
cpuid
sbb
pop
and
push
je
and
sub
jnp
pop
pop
jno
gs
cmp
xor
adc
xchg
jo
sahf
divb
mov
sbb
sbb
cmp
jnp
inc
xchg
xchg
dec
adc
fsubrl
sub
ret
fdivrs
outsb
popa
mov
jp
dec
mov
sub
mov
or
dec
pop
ds
int
dec
and
adc
inc
cltd
stos
adc
test
aam
pop
xchg
scas
aas
or
pop
fmulp
xor
jmp
sbb
lret
add
jno
pushf
ss
sbbb
out
dec
mov
jge
cmp
das
jl
nop
cmp
push
mov
int3
imul
inc
stos
mov
xchg
sbb
pop
repz
mov
fwait
add
xor
addr16
push
pusha
sahf
mov
shl
ljmp
pusha
cmpsb
aam
loope
inc
push
push
mov
insb
testl
outsl
add
rolb
mov
pop
mov
dec
enter
das
sbb
adcb
pop
aam
lods
push
je
push
inc
loopne
push
jmp
or
jge
fnstenv
pop
mov
leave
inc
jmp
and
sbb
cmc
and
and
jge
and
jnp
bnd
in
testb
rorl
push
inc
es
push
sub
sti
inc
xchg
mov
fidivrl
iret
pop
pop
aad
jl
pop
and
sbb
xchg
insl
sbb
shl
push
jg
adc
jbe
fldcw
mov
insl
xor
lcall
or
stos
cmpsb
inc
mov
adc
lcall
xchg
pop
gs
lea
hlt
ja
pushf
lcall
cli
in
lock
mov
push
jnp
dec
fistl
fwait
jge
and
adcl
cmp
jp
xchg
jge
push
pusha
dec
out
pop
pop
xor
inc
lahf
adc
outsb
and
nop
adc
movsl
xor
into
adc
inc
aaa
into
lock
push
out
jecxz
push
mov
out
mov
inc
lahf
sahf
or
sar
fildl
or
jge
inc
sub
pop
fdivrl
pop
mov
andl
incl
cmpsb
popa
out
aas
inc
jp
fmull
popa
jle
fstps
fwait
jl
jle
xchg
lds
daa
jno
mov
mov
movsb
clc
or
lods
das
lds
xlat
dec
mov
dec
lret
int
push
cmp
in
repz
jbe
bts
and
popf
cs
mov
into
daa
inc
mov
push
xor
ja
je
cltd
test
cmpsb
mov
jb
pop
push
ss
ds
daa
mov
cmpsb
jl
sbb
adc
mov
mov
loop
sbb
std
or
movsb
shrb
sub
popa
mov
lods
ficomps
repnz
pop
movsl
loope
pop
daa
push
xchg
mov
inc
out
test
or
xchg
adc
call
ffreep
call
mov
or
mov
add
mov
rcrb
mov
iret
jmp
or
pop
mov
ja
enter
jl
dec
xchg
loope,pn
ret
lret
stc
cmpsb
sub
ss
dec
lds
cwtl
dec
cmp
movsb
jle
icebp
jl
ljmp
mov
push
fimull
lds
cmpsb
ds
cmc
into
add
push
mov
iret
ljmp
jb
jbe
inc
mov
adc
subl
mov
jmp
mov
aad
add
adc
push
mov
adc
dec
out
incb
rcrb
fldcw
test
cmp
clc
sbb
sbb
mov
adc
les
icebp
jnp
cmp
mov
inc
sbb
stos
or
jge
xor
sub
movl
sub
sub
mov
dec
xor
fsts
fcompl
mov
popf
nop
sbb
inc
xor
inc
sbb
popa
mov
loopne
jg
jns
stc
cmc
sahf
out
bound
out
mov
sbb
pop
pushf
jecxz
stc
jg
pop
shlb
int
int3
mov
frstor
js
addps
cs
fstl
popf
stc
and
es
test
jmp
scas
das
div
mov
loope
adc
jecxz
cld
stos
jae
sub
hlt
xlat
loop
in
in
inc
mov
add
xor
sbb
scas
in
xor
icebp
arpl
pop
or
mov
out
cmp
pop
mov
insb
sahf
xor
or
daa
xchg
sbb
cltd
xor
out
jg
imul
imul
leave
rcrl
mov
nop
roll
inc
push
cmp
sti
sti
cwtl
fwait
pop
es
jae
adcb
or
mov
dec
sti
fwait
lahf
aam
cmpsb
clc
rclb
adc
ss
adc
jp
dec
mov
cli
es
add
sub
cmpsb
fwait
push
stc
lahf
jl
xchg
out
mov
dec
bound
cwtl
out
outsl
nop
sub
pushf
dec
jo
mov
sbb
cmp
inc
xchg
andb
mov
icebp
jb
int
dec
or
dec
paddq
cmp
jmp
cmp
xchg
out
pop
bound
mov
movsl
xchg
mov
xchg
jnp
mov
jg
int3
rolb
rorb
or
sbb
sbb
pop
push
fstps
lahf
imulw
cmp
push
push
in
adc
testl
into
inc
dec
out
stos
aam
fcompl
cmp
jo
cmp
pop
xchg
sbb
add
sub
jecxz
jae
rep
xchg
negl
jmp
mov
sub
xor
shlb
push
scas
mov
and
sub
sbbl
cwtl
into
jno
mov
jnp
dec
test
nop
ffree
xchg
leave
inc
out
sub
insb
addr16
mov
mov
pushf
fs
xor
mov
sub
pop
cmp
mov
mov
lods
ljmp
pushf
mov
push
je
test
into
mov
xor
jmp
mov
add
cmp
sub
push
data16
adc
push
fs
push
xchg
sti
pop
test
roll
cmpsl
adc
in
std
jo
mov
xchg
andb
dec
jbe
jge
mov
idivb
pminub
rcll
into
testb
iret
mov
or
push
jle
clc
shr
inc
xchg
daa
pop
and
mov
dec
test
int3
and
and
in
shl
out
lea
or
mov
ficoms
subb
add
or
dec
mov
out
mov
sti
and
inc
fwait
or
data16
jl
mov
dec
inc
ljmp
cmovle
mov
mov
lahf
push
icebp
inc
add
fiaddl
fwait
outsb
xor
dec
roll
add
pop
sbb
ds
negl
lret
daa
sti
loopne
xchg
jle
sub
rclb
fisubrl
jbe
inc
sub
cs
std
pop
rcrb
lods
inc
cs
mov
call
adc
xor
fsts
sbb
lahf
pop
call
and
test
xlat
cmp
or
jb
or
cmpsl
jo
fstps
or
scas
dec
pop
les
or
pop
pop
cmp
lods
mov
inc
cwtl
sbb
fs
inc
fcmovbe
jmp
js
mull
in
cmp
sahf
jge
fldenv
fdivs
scas
push
aaa
imul
xor
mov
xchg
xchg
int3
mov
cmp
repnz
mov
jl
xchg
andl
dec
ja
pop
test
scas
or
xor
int
nop
and
lcall
dec
hlt
mov
jb
out
lahf
ss
stc
pusha
sbb
mov
nop
pop
addr16
fstps
inc
pop
divb
int3
movsl
jecxz
xchg
pop
or
loop,pn
pop
xchg
sbb
in
jmp
frstor
lret
cwtl
fisubs
call
dec
push
outsl
imulb
in
sbb
xchg
sbb
cli
jecxz
add
sar
and
fmuls
mov
insb
movsl
sub
lea
sub
mov
rol
outsb
jl
sbb
fs
fistps
push
je
nop
outsl
stc
mov
or
sub
incb
cli
or
andl
test
push
inc
pop
jno
xchg
sub
mov
movsb
lock
xlat
out
cmpsb
aaa
into
xlat
inc
inc
inc
mov
fisubrl
sbb
mov
decb
cld
adc
inc
cli
pop
addb
scas
lret
sub
data16
cs
fildll
push
mov
stos
fnstenv
push
xor
xor
or
xor
sub
and
and
dec
dec
popf
lods
subb
decl
lret
leave
int
je
arpl
or
inc
mov
dec
push
rcl
add
jno
dec
pop
icebp
in
cmp
aas
xchg
test
mov
out
dec
xchg
inc
repnz
inc
out
adc
jbe
xchg
sub
call
cltd
pushf
in
dec
mov
xor
lahf
cltd
arpl
pop
mov
cmc
pop
sub
loopne
xchg
sub
mov
cmp
jg
lds
add
in
add
xrstor
in
insl
push
jbe
xor
xor
push
rcl
sti
sti
nopl
mov
inc
or
mov
xchg
lods
mov
iret
lock
jbe
sbb
lahf
testb
jae
mov
hlt
aas
cld
cltd
not
inc
or
mov
mov
sub
pop
xlat
mov
sub
cmc
cmp
es
fbld
cmp
lea
mov
mov
jbe
loopne
fstps
aaa
pop
jp
enter
shll
cmpsb
push
jmp
js
dec
mov
push
lods
or
pop
cmp
push
les
sbb
mov
xor
hlt
or
mov
addr16
xchg
add
jl
cmp
pop
mov
fs
add
xchg
sbb
lret
jg
repz
push
sub
bound
test
xor
loop
bnd
idivb
xchg
xor
and
scas
bound
sahf
mov
xchg
jno
nop
stos
inc
mov
pop
pop
imul
mov
pop
movsb
aas
imul
or
test
adc
shr
pop
push
jge
fistpll
xchg
sti
mov
fcomi
pop
lcall
mov
out
outsb
popl
shlb
dec
cld
loop
das
stos
mov
cltd
int3
in
mov
fldenv
xchg
leave
inc
mov
loopne
in
gs
jg
dec
cld
out
addr16
pusha
out
aam
xchg
pop
sbb
lea
push
mov
mov
add
lea
movsl
dec
push
movsb
sarl
xchg
mov
scas
mov
lret
ja
out
clc
sbbl
ja
jns
pop
icebp
sbb
sbb
fwait
jbe
sub
shl
sub
cmp
and
inc
in
shlb
test
js
movsl
in
subb
mov
lret
fistl
xor
in
jne
out
dec
test
movsl
mov
jp
cmpb
mov
xchg
cmpsb
cmp
and
iret
cmp
push
and
in
testb
int
sbb
mov
icebp
in
pop
ja
addr16
jns
cmpsb
push
jae
push
pop
adc
sbb
push
in
jae
jbe
js
mov
cli
je
fists
mov
mov
mov
mov
or
or
mov
test
fcmovb
mov
mov
ss
insl
adc
test
push
push
stos
enter
jne
sub
fistl
jg
push
push
xorl
test
test
cmpsl
adc
adc
sarb
les
mov
pop
insb
dec
push
test
shl
add
mov
aam
insb
shlb
aas
imul
into
fdivrl
aam
push
xchg
pushl
movsb
ja
pop
pusha
bswap
shrb
pop
cmp
imul
mov
sbb
jne
addr16
and
pop
fisubl
shlb
subb
lea
cli
push
outsb
aaa
sub
aad
out
add
pop
test
pop
or
addr16
arpl
int
int
ljmp
sub
ret
cmp
in
icebp
mov
mov
push
or
je
sbb
xchg
scas
mov
dec
aas
lret
cmp
shl
sbb
adc
sahf
mov
les
or
ss
imul
cs
pop
mov
lods
adc
push
data16
mov
fldl
ja
jl
scas
mov
adc
dec
jecxz
xor
jns
cmp
mov
loopne
push
adc
add
mov
mov
cmp
mov
outsb
not
sahf
pop
push
jp
lret
xchg
inc
mov
mov
sub
jnp
jnp
lock
cmpsb
lock
mov
dec
xchg
and
test
repz
xor
add
xor
ficompl
mov
insl
xor
xchg
cmp
movsb
imul
popf
lds
jg
std
jl
push
inc
gs
jnp
imull
popf
and
xchg
cmp
xchg
fyl2x
pop
repnz
jl
mov
outsl
insb
xor
jne
out
inc
ficompl
popa
js
popa
mov
inc
call
or
jl
bound
adc
dec
movsb
shll
cmpsl
inc
mov
xlat
mov
sub
cltd
sbb
stc
xchg
xchg
sub
arpl
cld
cmp
add
jecxz
sbb
mov
aad
test
or
pop
push
jne
cmp
inc
test
orb
mov
mov
mov
inc
sti
pop
pop
movsl
cmp
jns
in
and
push
pop
and
scas
push
xor
aad
jb
notl
sub
lret
cmpb
xor
xor
xchg
and
jge
rcll
push
mov
adc
jl
ss
xchg
inc
ja
mov
inc
rcl
shrb
mov
inc
adc
xor
notl
nop
mov
iret
inc
xchg
pop
xor
lock
jae
or
mov
sub
or
orl
and
xchg
mov
and
pop
data16
mov
xchg
inc
mov
dec
lods
jge
mov
mov
lret
xor
test
inc
loopne
push
call
add
gs
push
sbb
leave
in
cmpsb
jnp
enter
lds
push
ja
aad
inc
adc
or
repz
inc
ljmp
fistps
out
add
push
xor
pop
or
test
cmc
jge
scas
sub
hlt
xlat
mov
es
inc
out
cli
movsb
shrb
scas
call
repnz
insl
xorps
mov
add
mov
sahf
mov
scas
jno
mov
sbb
adc
push
or
out
movsb
xchg
sbb
cwtl
das
cltd
ret
xor
mov
dec
fcoms
rorb
dec
popf
shrb
mov
jge
cmc
insb
mulb
mov
cmpsb
and
divl
jo
xor
xchg
push
jmp
mov
repz
push
push
lcall
in
ret
mov
outsl
es
xlat
int
dec
lret
mov
pop
pop
pop
lahf
xlat
push
push
stos
xchg
ret
xchg
xor
pop
test
ja
mov
ret
iret
in
insl
fwait
inc
ds
inc
mov
aam
arpl
mov
lret
shll
add
mov
mov
sub
ja
dec
push
dec
test
aas
xchg
cld
int
sbb
pop
hlt
inc
or
es
leave
jecxz
or
dec
xchg
dec
add
cmpsb
cmp
gs
imul
test
mov
in
hlt
out
inc
jmp
add
sub
jae
mov
cmp
push
cmpsb
adc
xor
and
lret
cld
jp
test
xchg
jo
std
lods
lahf
in
pop
push
sub
jge
mov
mov
mov
jbe
ja
sub
ja
push
mov
fistpl
sti
aas
aad
pop
and
xor
adc
jecxz
pop
lea
mov
jge
xchg
scas
add
jg
cmp
clc
add
fisubs
mov
cmp
adc
xor
cmp
pop
xchg
add
mov
mov
push
hlt
sbb
xchg
adc
pop
mov
hlt
mov
dec
out
fadds
lods
adc
je
scas
mov
rorl
lret
push
inc
dec
adc
js
test
int
fnsave
imul
inc
xchg
test
inc
shrb
cwtl
pop
add
xor
mov
outsl
rcrl
and
mov
push
push
mov
ret
sub
call
xlat
stc
lds
pop
mov
int
test
cmp
add
dec
imul
dec
mov
jl
jmp
ficomps
lret
adc
xor
fs
fwait
xor
cmp
push
sbb
mov
jb
aaa
and
mov
cmpb
mov
dec
fsubrs
inc
in
stos
add
fwait
cs
testl
sbb
shrl
add
repnz
xorl
dec
adc
ss
xor
jns
jno
xchg
mov
push
aas
loope
and
mov
jo
push
ljmp
xor
add
push
cs
aam
in
in
mov
iret
inc
pushf
or
and
bound
imul
inc
mov
push
int
jmp
aaa
repz
jmp
dec
les
rol
inc
pop
mov
fwait
pop
mulb
es
push
movsb
hlt
adc
arpl
je
mov
sti
xchg
shlb
sub
adc
push
popf
or
jle
jno
cs
cmp
lods
mulb
adc
push
fwait
lds
dec
and
out
outsl
lahf
in
addr16
cmp
das
and
jmp
scas
testl
test
and
jle
pusha
mov
push
mov
adc
jp
subl
xor
xor
enter
adc
rolb
push
sub
or
push
dec
test
sbb
pop
jmp
je
push
mov
push
mov
mov
hlt
xor
hlt
push
aad
nop
push
stos
pop
pop
aaa
cmp
push
xchg
pop
test
shll
fnstcw
sbbb
push
inc
mov
fmuls
or
addr16
mov
inc
xchg
pop
loopne
add
or
stos
icebp
in
in
roll
add
xchg
and
or
or
jl,pn
jb
nop
mov
push
mulb
daa
mov
pop
and
aas
sbb
movsl
and
mov
push
je
nop
jo
aaa
mov
aaa
mov
pusha
pop
pop
jae
mov
ds
adc
pop
outsb
xor
jns
movsl
pop
in
stos
adc
pusha
negl
xor
ljmp
jns
iret
test
insl
imul
mov
sub
jb
pop
push
mov
inc
push
sbb
xor
into
push
rorb
int
jmp
and
rclb
mull
ss
hlt
addr16
and
cli
pop
jnp
pop
es
add
into
xlat
pushl
cs
lods
in
jecxz
and
sbb
aas
add
cmp
mov
test
ja
jne
cwtl
inc
es
add
int
call
orl
xor
outsl
aad
push
in
movsl
lds
mov
imul
movsb
icebp
fnstcw
push
push
je
cmpsl
mov
loopne
aaa
adc
push
push
sbb
call
mov
sahf
in
cmp
cmp
and
das
dec
std
push
lea
inc
repz
inc
jnp
std
push
std
adc
cmp
push
xchg
pop
push
jo
pop
add
cmpsl
or
cs
pop
adc
inc
pop
xor
cmp
xlat
daa
cli
jge
cltd
sub
sbb
xchg
push
jl
fisttpl
inc
mov
test
push
or
fadd
aaa
push
data16
inc
xor
mov
or
fs
push
adcl
jno
or
dec
pop
pop
mov
mov
mov
int
or
jmp
jl
inc
outsb
adc
ss
pop
cltd
mov
movsb
cltd
push
push
xlat
adc
movsl
sub
jle
sbb
hlt
push
xor
jg
pop
dec
push
jae
cmp
sub
xchg
sti
push
inc
fbstp
push
shll
out
es
pop
mov
cli
jmp
sbb
out
in
pop
sub
xlat
mov
jge
mov
es
call
or
jp
sti
lods
and
shrl
call
out
sub
adc
insl
test
sti
mov
and
dec
stos
xlat
jle
xchg
and
aaa
adc
out
push
mov
xorb
xor
pusha
cmpsl
cld
enter
addps
and
daa
cmp
jle
cli
or
dec
mov
push
push
imulb
lret
jge
icebp
inc
insl
mov
xor
lcall
cmp
push
dec
nop
test
dec
insl
aad
dec
mov
mov
testb
imul
lret
out
add
int3
inc
and
mov
je
arpl
lods
shlb
lds
dec
addr16
push
mov
out
mov
cs
addr16
mov
lcall
inc
mov
cld
xor
mov
sbb
inc
fdivl
outsl
adc
mov
mov
mov
pop
data16
mov
sub
shll
mov
out
movsb
dec
mov
xchg
icebp
movsl
mov
push
pop
in
clc
pop
jp
mov
mov
int
mov
push
jo
gs
out
aam
stc
inc
sub
xor
leave
push
inc
out
lods
push
iret
mov
repnz
pop
mov
cltd
pop
cmp
jge
movsl
addb
xchg
or
push
sti
mov
add
test
cmpsb
lock
push
hlt
sbb
mov
out
mov
shrb
xchg
cmp
sti
jne
xor
adc
rcl
xchg
pop
pusha
aaa
or
add
xlat
stos
test
mov
pushf
repnz
inc
pop
adc
lret
jmp
adc
je
jbe
mov
push
test
clc
mov
hlt
cmp
xchg
iret
jae
xor
mov
shrb
out
sub
imul
fists
sub
mov
shr
add
je
mov
insl
cmp
xchg
cmp
adc
pop
jae
xchg
mov
or
jne
iret
ja
add
loope
push
sbb
movsb
cltd
jb
aas
jecxz
fwait
scas
loop
cmp
xor
pop
lret
or
bound
shrb
mov
jne
push
and
dec
push
cmp
ret
pop
out
xchg
test
out
push
push
orl
in
dec
mov
aam
add
xor
test
in
jnp
shlb
mov
cmp
jmp
les
dec
mov
jmp
xchg
ljmp
jae
and
cltd
test
push
andb
cmc
adc
ljmp
ljmp
lret
adc
dec
lods
popa
jno
aam
push
notb
clc
icebp
mov
hlt
push
jge
jno
jp
ja
xor
lret
pop
and
jle
pop
adc
push
jmp
lea
xchg
xor
std
data16
jle
dec
push
sub
xchg
outsl
rcrb
cwtl
gs
jne
or
push
in
xchg
sub
hlt
add
repz
inc
xchg
jmp
sbb
and
iret
jbe
push
dec
and
pop
mov
xchg
jmp
sahf
sbb
dec
pop
lock
jb
mov
cwtl
ja
cmp
stc
adcl
repz
jmp
lret
repz
add
cltd
inc
lods
into
lahf
movhlps
inc
mov
gs
std
dec
jmp
jg
lret
cmp
or
mov
icebp
add
and
add
stos
in
popf
stc
out
ja
test
adc
cmp
xchg
push
notb
jb
mov
enter
lods
cmp
loopne
and
fucomip
mov
pop
cltd
stos
cmp
pop
inc
sub
xor
in
pop
cmp
call
shr
cmc
out
stc
aas
mov
lock
imul
mov
addr16
sub
stos
mov
dec
sbb
adc
jp
enter
or
push
and
jae
es
inc
mov
test
je
xchg
jbe
nop
cmp
pop
adcb
stos
cmp
je
mov
sahf
and
adc
inc
pusha
mov
ret
ret
push
je
cmp
pop
xchg
add
imul
cmp
xchg
pop
mov
loope
sub
mov
xchg
orb
mov
sahf
or
jp
mov
scas
out
dec
pop
stos
divl
in
or
into
pop
inc
mov
lret
hlt
into
popa
clc
mov
fsubs
imul
pop
rcrb
sub
out
xchg
inc
repz
ret
pop
xchg
dec
lea
iret
loope
cwtl
xchg
mov
pop
test
insb
inc
add
mov
and
mov
and
or
in
inc
jg
aam
jb
jae
rcr
push
daa
test
jg
push
mov
fidivs
bound
shll
aas
les
mov
push
adc
mov
orl
mov
cmp
mov
rclb
popa
cmp
sub
cmpsb
dec
retw
jns
xlat
ss
jne
sbb
adc
sbb
pop
out
dec
cmp
les
jo
add
add
mov
xchg
add
push
mov
pop
cltd
jns
dec
scas
jnp
dec
pop
ja
repz
cmpsl
out
push
push
pop
dec
cmp
clc
xor
in
iret
mov
xchg
adc
xchg
pop
cmc
pop
xlat
outsl
ljmp
mov
js
out
addb
mov
in
pop
scas
cmp
pop
cmc
fnstsw
cmp
addr16
xchg
pop
loope
outsl
mov
xchg
xchg
dec
xchg
js
sub
push
inc
cmp
cmpsb
inc
out
int
mov
dec
and
sub
and
arpl
ror
lods
hlt
jge
xor
push
scas
loopne
xchg
sbb
cmp
call
sub
testb
jmp
cmc
ucomiss
mov
shl
ret
jl
mov
mov
in
das
dec
cmp
dec
mov
jle
sub
pusha
cmp
add
clc
leave
dec
je
jno
add
cmpsl
lcall
sbbl
push
sub
mov
cmc
out
pop
xor
or
lcall
mov
xchg
pop
add
pop
lahf
lret
pop
sub
inc
negl
pop
sahf
mov
dec
dec
xchg
cmc
imul
mov
aad
insb
leave
pop
fmuls
push
sbb
mov
pop
mov
or
jl
dec
stos
xor
push
pop
test
sub
sub
inc
js
mov
scas
fstps
fcmove
or
xchg
sti
ss
pop
pop
sbbb
aad
fwait
lods
lahf
ss
mov
jecxz
mov
xchg
mov
jo
hlt
and
jl
xor
jg
rolb
dec
add
aaa
push
and
add
test
call
cmp
mov
dec
rclb
mov
mov
push
ja
mov
incb
mov
gs
mov
and
jg
int
sbb
xchg
stc
adc
push
xchg
sbb
cmpsl
aas
stc
stc
popf
stc
aaa
test
lea
incb
jb
inc
data16
cmpsb
and
xor
mov
cli
cmp
outsb
stc
pushf
pop
mov
mov
jg
icebp
test
mov
jne
sbbl
add
xor
in
and
scas
repz
cwtl
cwtl
scas
xchg
inc
test
cmp
std
mov
add
cld
or
es
or
xlat
and
jo
cmp
sub
movsb
or
es
aaa
sub
jb
out
repnz
ja
push
inc
inc
inc
std
mov
sbb
aas
dec
mov
mov
jle
test
and
mov
movsb
out
or
mov
push
ljmp
pop
scas
ljmp
aaa
into
push
cltd
movsb
ja
bound
xchg
mov
ja
xchg
fsubr
cmpsl
xchg
adc
sbb
sbb
js
and
inc
test
lds
aaa
or
and
lret
call
pusha
mov
cltd
push
push
lret
faddl
ficoml
inc
jl
fnstenv
pop
mov
xchg
push
xor
cli
out
cmp
test
adc
sahf
scas
adc
in
in
popf
sub
add
push
lret
ja
mov
sub
insb
stos
xor
and
and
lahf
push
mov
popf
xor
leave
push
jle,pn
fildll
test
imul
testb
lea
imul
dec
mov
lock
cmp
inc
loopne
test
jo
addr16
lds
js
xchg
push
out
les
mov
mov
mov
call
loopne
js
push
and
aas
dec
or
and
out
arpl
or
test
mov
js
sub
add
dec
add
outsb
loop
xchg
in
pop
xsha1
cmpsb
dec
xchg
mov
sahf
imul
push
mov
push
sahf
jp
scas
les
adcl
inc
add
pop
xor
jnp
fwait
or
cmp
xchg
xchg
push
cmp
or
pusha
sub
in
je
mov
int3
sbb
jae
mov
cmp
mov
xlat
sub
stc
adcb
inc
data16
mov
sub
out
addb
mov
mull
das
ja
xchg
or
clc
add
mov
xchg
pop
adc
sub
and
pop
iret
push
cmpsl
pop
add
xchg
outsl
mov
ret
push
xlat
xor
bound
test
add
mov
cmp
in
inc
cs
xor
lret
int3
push
sub
sbb
andl
cltd
sub
xchg
sub
loopne
loope
or
jnp
adc
xchg
pop
xchg
lahf
lret
mov
xor
mov
call
mov
les
inc
aas
mov
mov
pop
mov
push
out
cmp
dec
arpl
jns
push
add
sub
pop
lock
sub
sub
dec
jecxz
dec
sbb
imul
iret
xchg
pop
push
jmp
or
mov
imul
les
mov
mov
dec
int
adc
dec
cmpl
sbb
mov
aas
out
cmc
xchg
xor
inc
iret
sahf
sub
push
mov
sbb
in
jbe
inc
mov
dec
jecxz
push
in
push
in
xchg
loope
pop
dec
cmp
js
cwtl
jb
test
mov
cmpsb
test
and
aam
hlt
jl
stos
jbe
jnp
jb
or
sub
repz
clc
subb
xor
sbb
stc
dec
es
mov
push
popf
add
faddl
inc
imul
sbb
mov
xchg
xor
js
enter
rcr
mov
sub
push
sbb
pop
inc
mov
insb
fcoml
adc
repnz
xchg
or
aad
dec
inc
cmp
in
fnstenv
mov
in
mov
imul
iret
xor
popa
in
outsb
andb
push
mov
xchg
push
mov
push
sub
repz
push
repz
sub
test
push
adc
hlt
pop
sbb
in
mov
fsubrl
and
and
mov
lods
mov
in
mov
mov
mov
inc
cli
in
call
xor
das
sbb
test
dec
cltd
sbb
xor
xchg
push
or
xchg
jge
movsl
xchg
jge
xor
cmp
into
lods
jbe
sub
cmp
hlt
push
mov
mov
push
fstpl
lcall
jecxz
or
sti
sub
inc
aam
in
adc
out
inc
iret
ss
lods
gs
stos
xchg
inc
clc
sahf
hlt
ljmp
cs
movb
add
and
fists
js
xchg
mov
mov
mov
in
mov
mov
inc
into
push
fcompl
pop
or
xor
fwait
fstpl
mov
pop
repz
idiv
lods
cmp
xchg
pop
cmp
sub
jge
push
mov
in
sub
rcrl
shr
aam
xor
pop
dec
sahf
xor
fiaddl
out
sti
mull
out
dec
imul
add
into
lret
outsb
insb
pop
popf
fnstsw
jno
mov
jl
pop
mov
jnp
jne
dec
mov
mov
cld
lcall
xchg
js
fmull
and
pop
cmc
inc
cmp
mov
fistps
dec
outsl
jne
push
jo
jmp
sub
sbb
aaa
mov
push
cli
outsl
lods
inc
xchg
pop
inc
sbb
mov
ja
insl
push
insb
mov
sbb
pop
mov
inc
jns
lea
inc
lahf
push
cli
cmp
inc
std
jbe
cmc
mov
rcrb
fwait
arpl
lds
into
and
sti
mov
test
inc
mov
les
or
and
inc
aad
dec
loopne
cmp
mov
jl
mov
mov
scas
jg,pn
cmpsl
mov
cmp
jne
mov
adc
mov
enter
or
jae
hlt
rol
repnz
cli
sub
aam
repnz
idivb
xchg
xchg
push
cmc
mov
je
push
das
leave
sub
mov
sbb
fisttpll
data16
cmp
fisubrs
adc
xor
jns
lods
mov
add
test
lds
divps
stos
mov
cmp
aad
std
inc
xor
ss
xor
fildl
adc
jmp
push
fidivs
les
bound
jp
lahf
ja
inc
jmp
cwtl
sbb
pop
ja
mov
sub
xor
inc
xchg
mov
xor
sbb
out
xchg
lock
fadds
jo
lahf
inc
mov
popa
pop
frstor
jmp
ds
or
lods
mov
inc
dec
sub
jae
xor
in
mov
rcrl
cwtl
lahf
divl
push
push
mov
jl
push
stos
divb
lock
push
frstor
mov
ljmp
jl
adc
pop
xchg
pop
sahf
jecxz
rorl
movsb
aas
scas
sbb
mov
cld
rolb
add
fldenv
scas
mov
pop
js
std
xorb
loopne
cwtl
out
in
xor
and
dec
scas
fdivp
nop
loop
and
and
jg
out
or
sbb
jle
and
leave
jecxz
pop
loopne
lds
mov
mov
xlat
cmp
pop
ljmp
negb
mov
xor
cmp
mov
add
into
shr
cmp
fldenv
enter
mov
xchg
arpl
mov
mov
pop
push
data16
pop
xor
in
std
mov
push
leave
popf
aas
mov
pop
cmpsl
adc
jae
ljmp
pushf
cwtl
push
inc
adc
test
and
jp
not
imul
or
jns,pn
shlb
inc
sarb
in
lds
cmp
mov
cmp
xchg
push
mov
pop
pop
sub
sub
loop
and
inc
sahf
fisubs
icebp
popf
pushf
jl
ret
sub
daa
call
arpl
sbb
dec
cltd
std
mov
pop
je
outsl
mov
icebp
adc
clc
sahf
mov
loope
jbe
inc
xchg
push
sub
cmp
stc
mov
jo
jmp
xchg
and
pushf
xor
pop
mov
adc
mov
mov
lea
add
pop
cmc
mov
loopne
push
add
ror
push
mov
js
stos
mov
mov
je
inc
xor
xor
imul
sub
cmp
mov
push
aas
mov
add
popa
insl
cltd
out
push
out
push
jle
fimull
dec
insl
sti
pop
cmp
lcall
dec
lock
in
jbe
cmpsb
fwait
and
and
shrb
aas
adc
dec
lods
pop
cmp
jl
xor
add
jmp
or
cmc
in
clc
lret
fstl
jmp
paddw
shll
les
cmc
jnp
fsubs
inc
lahf
nop
mov
mov
push
mov
pop
mov
pop
pop
imul
pop
icebp
cmp
ljmp
jb
cld
into
push
add
push
outsb
pushf
movsb
sbb
jae
lods
cmp
andb
out
pop
call
dec
aas
mov
out
iret
pop
mov
jo
in
jno
inc
xchg
into
sbb
lods
js
sbb
jb
pushf
std
fisubrl
fists
into
incb
push
arpl
sbb
addb
pop
or
aad
and
shlb
push
movsb
repz
xchg
scas
jns
jge
stos
lcall
mov
in
lret
push
or
mov
arpl
mov
rcrl
mov
or
add
lds
xchg
sub
arpl
adc
scas
inc
imul
in
movsb
mov
adcb
inc
pop
inc
jae
outsl
ficoml
add
call
test
jnp
sub
out
jbe
icebp
lea
cmp
movsb
cmp
pusha
clc
mov
lods
adc
inc
outsb
int
mov
inc
mov
ja
pop
test
ret
jae
mov
jbe
pop
pop
push
jmp
testl
lods
push
repz
add
es
xchg
popf
stos
sar
xchg
in
jbe
dec
cmpsb
test
cmpsl
fadd
std
ss
cmc
stos
push
dec
dec
insb
fs
mov
adc
rcrb
pop
shl
mov
hlt
xor
in
mov
and
pop
cmp
pop
mov
rclb
pop
add
xchg
out
clc
lds
pop
ret
repz
lret
imul
add
or
push
or
mov
mov
lock
pop
inc
lret
push
jbe
push
mov
inc
imul
xchg
jae
add
in
sbb
mov
push
jne
jae
jmp
or
popa
xor
push
loopne
xor
inc
divl
push
sub
int
xchg
cld
inc
pop
pop
adc
mov
push
inc
out
sbb
fs
push
or
mov
lea
fwait
and
cwtl
adc
outsl
and
inc
sbb
sbb
pop
or
add
cli
out
gs
mov
mov
lret
mov
mov
out
mov
or
rcrb
imul
stc
xchg
or
or
pop
shr
adc
lret
test
mov
stc
popf
outsb
imul
inc
xchg
jl
xor
sub
push
out
cld
adc
sub
popl
test
or
cmc
fs
push
enter
jge
inc
cmp
imul
pop
movsb
dec
mov
push
add
test
imul
arpl
js
push
out
mov
fwait
cs
je
mov
or
mov
sub
repnz
sub
mov
jp
mov
fdivl
xchg
xchg
daa
icebp
or
mov
scas
xor
aam
jae
mov
jo
insb
xchg
cs
mov
mov
mov
cmpsb
scas
gs
mov
inc
into
sub
jl
sbb
push
jne
lods
fdivrp
out
das
sbb
stos
mov
push
cs
inc
inc
data16
aam
push
pop
jbe
das
xlat
outsb
popa
mov
pusha
movsl
clc
call
cmpsb
clc
dec
sub
sbb
dec
and
outsl
fwait
jnp
mov
xchg
dec
inc
lahf
inc
lods
inc
sbb
mov
sub
ljmp
sysexit
push
fistl
push
jmp
xchg
es
in
shlb
in
lea
adc
push
adc
movb
adc
jbe
and
cmp
mov
mov
fiaddl
ret
repz
rcrl
cmc
loope
daa
loop
jp
push
cltd
stos
fsubl
xchg
xlat
xchg
je
int
dec
lods
xchg
test
mov
mov
xlat
push
sarl
and
xor
push
std
fldt
scas
push
inc
in
stos
or
lea
pop
lcall
dec
loop
jecxz
test
add
stos
nop
jg
or
push
repz
in
add
sub
stos
aas
cmp
mov
jbe
jae
pop
and
addr16
mov
adc
dec
cmpsl
orb
lcall
das
jg
xor
fidivrs
push
jmp
mov
jo
jmp
xorl
mov
sbb
jecxz
shrl
add
jl
imul
lcall
or
inc
shrb
out
jae
int
cmpsl
notb
pop
in
stos
shll
das
test
rcr
cmpsb
mov
daa
out
jle
ror
mov
fs
insb
cli
nop
add
xor
popf
rcrl
sub
daa
cmp
mov
or
xchg
test
cmp
test
pop
lahf
jecxz
sarl
push
clc
sub
jae
aas
in
xor
inc
add
aaa
cmp
cs
pop
lcall
and
jno
jg
arpl
bound
jo
dec
cltd
mov
mov
ljmp
push
in
sub
outsb
cmp
repz
sbb
jo
xor
addr16
movsb
mov
popa
jp
stc
xchg
pop
js
xor
pop
xchg
popf
lods
ret
cmp
xor
mov
movsb
pop
mov
aad
das
stos
and
dec
xor
sarb
out
adcb
test
iret
data16
pop
pop
sti
scas
mov
andb
push
fsubr
enter
js
xchg
fimull
lahf
addr16
fsubrs
jno
xchg
bound
inc
jl
jo
push
adc
push
sub
lds
enter
jo
jae
sbb
addl
lds
lret
push
imul
cmp
jbe
sbb
out
or
push
cmp
jne
and
pop
xor
cmp
cmp
aas
or
insl
lods
lea
mov
inc
sbb
xchg
add
mov
popa
mov
mov
xor
dec
dec
inc
ficoml
xchg
sub
sbb
sbb
movsb
mov
jp
stc
stos
and
clc
and
orl
pop
jae
mov
mov
mov
mov
ds
shl
sbbl
icebp
mov
xor
js
push
jmp
sbb
jo
push
cmp
mov
cmp
cmpsl
cld
int3
inc
sahf
std
sbb
sbb
xor
push
mulps
xorl
aas
or
xchg
xchg
je
push
pop
sub
jbe
insl
dec
fsubrl
inc
loopne
push
mov
push
jecxz
cmp
or
push
jge
sub
add
into
popa
cmpsb
adc
xor
cli
adc
mov
in
and
or
sbb
aam
in
shll
cwtl
sbb
fdiv
clc
sbb
dec
sbb
ja
adc
inc
fiadds
adc
enter
andl
adc
pop
xchg
mulb
dec
pop
cmp
mov
push
mov
pop
mov
test
ljmp
aam
sub
dec
repz
popf
in
pusha
jmp
jmp
push
rorl
jbe
xchg
add
sbb
xchg
pop
test
int3
lea
sbb
outsl
mov
inc
aas
leave
movsb
repnz
mov
add
insl
aad
jecxz
mov
jge
es
add
add
mov
inc
scas
adc
sarb
xlat
scas
repz
in
repnz
lds
jne
stc
adcb
pop
xchg
fs
xchg
sbb
inc
ja
in
test
cmp
cltd
adc
xchg
sub
fidivl
lods
mov
popf
inc
js
dec
shr
jmp
push
xor
andb
lock
jns
dec
das
jo
lret
jb
adc
push
jp
imul
jg
ss
pop
pop
enter
scas
cmp
lahf
adc
and
jae
mov
adc
movsb
sub
jl
lods
or
add
dec
and
arpl
cmp
sbb
test
xor
ret
mov
cltd
pushf
mov
jge
cmp
push
mov
stos
or
repnz
mov
nop
std
mov
mov
negl
cmp
aaa
add
mov
movsb
push
push
aad
xor
sbb
addr16
sbb
sbb
es
mov
xor
push
popf
sbb
paddb
mov
cli
xchg
xchg
xchg
push
push
mov
fmulp
cmpsb
push
not
out
ja
sub
scas
out
jp
mov
xchg
jg
leave
int3
xor
adc
push
xchg
clc
push
nop
pusha
jo
scas
test
rorl
mov
imul
jmp
fucomp
xchg
sbb
push
xchg
sub
out
jbe
inc
outsl
loop
in
outsl
adc
pop
ljmp
mov
into
ror
rcll
insl
jbe
mov
in
stos
les
shrl
pop
popa
and
sbb
cs
pop
push
mov
xor
cmp
gs
rcrl
insl
mov
xor
loop
fsubrl
mov
fistps
insb
rcrb
sbb
push
movsl
js
jle
xor
lahf
ficoml
sub
inc
sbb
es
es
mov
mov
aam
push
mov
lods
test
mov
pop
jecxz
adc
adc
addr16
sbb
sbb
add
in
jge
iret
lock
mov
inc
xchg
push
pushf
ret
push
push
jb
fs
fnstenv
test
cmp
pop
jle
stos
sbb
pop
movsl
dec
jae
daa
lock
dec
clc
jg
cmp
jg
mov
jo
or
mov
push
movsl
idiv
jb
dec
inc
clc
push
mov
fs
pop
mov
pop
pop
inc
adc
aad
jecxz
mov
jnp
or
inc
push
adc
mov
scas
mov
mov
clc
xchg
scas
sub
jp
inc
lods
add
push
dec
inc
xchg
mov
xor
aaa
jnp
cltd
cwtl
fidivs
test
scas
shrb
int
xchg
adc
mov
mov
testl
mov
int3
imul
jl
and
mov
add
lcall
sbb
stos
adc
in
add
xchg
scas
hlt
inc
mov
pop
xor
out
sbb
clc
int3
mov
shlb
lret
sti
and
fdivl
clc
loope
js
enter
push
jle
and
das
int
mov
arpl
out
js
adc
sti
sarl
add
pop
sbb
into
dec
dec
sbb
nop
and
jno
pop
cs
xchg
adc
push
popf
int3
in
push
fwait
mov
cli
xchg
sti
rol
fbstp
xor
clc
popa
mov
in
add
test
pop
shlb
lock
inc
cmp
movsl
cmp
arpl
dec
xlat
pusha
mov
xlat
test
mov
push
or
and
fs
popf
call
or
cmp
xchg
fmul
or
pop
pop
xor
or
add
scas
ficoms
cmp
jb
andl
scas
fs
pmaxub
clc
mov
cmp
es
lods
push
in
xor
sub
fst
ja
add
bound
cltd
jb
mov
push
ficoms
lods
mov
stos
insl
ja
mov
ficoml
pop
fmul
cmp
out
sahf
fistpll
or
cmp
dec
test
dec
or
or
into
add
into
imul
in
outsb
push
jecxz
iret
or
mov
fsubs
inc
or
add
adc
mov
shll
test
sbb
fldt
insb
sbb
js
repz
pop
gs
jb
sahf
jae
cwtl
test
mov
addr16
icebp
pop
cmpsb
fwait
lods
push
and
pushf
arpl
imul
clc
push
test
mov
lds
cmp
push
xchg
adc
add
in
icebp
dec
adc
cmp
imul
int3
add
mov
xchg
rolb
inc
xor
xchg
sbb
jg
cwtl
insl
inc
cli
push
xor
in
sub
push
imul
sbb
sbb
gs
pusha
ljmp
xchg
adc
pop
push
aad
mov
adc
mov
mov
jl
in
xchg
bound
icebp
dec
and
test
and
xchg
dec
das
iret
sub
lds
jmp
insl
fwait
push
imul
jno
leave
test
adc
int
xor
pop
or
iret
fidivrs
pop
and
aaa
lret
xlat
push
add
mov
mov
pop
jno
sbb
fsts
xor
repnz
and
inc
pop
cmp
xor
fstl
xchg
push
or
xor
lds
lds
or
adc
outsb
add
or
dec
xor
jns
or
pop
cs
popf
xor
pop
cwtl
cmpsb
push
and
add
inc
lds
adc
pop
push
popf
addr16
outsl
mov
jmp
enter
xchg
pushf
xor
jbe
mov
int3
lea
ret
jle
sub
ret
xchg
adc
jbe
mov
and
and
xor
mov
fnsave
repz
lods
movsb
jp
mov
aas
imul
jbe
adc
fstl
clc
cmp
gs
es
stos
xor
cmc
bound
jl
mov
sbb
aas
adc
dec
ljmp
fisubs
cmp
mov
ds
add
mov
in
xor
cmp
pushf
dec
es
lret
cmpsb
ret
pop
scas
xor
lret
int3
test
enter
mov
cmp
xor
ds
mov
jno
inc
pop
mov
test
mov
daa
lret
push
cwtl
int
cwtl
into
shrl
pop
xchg
orw
pop
call
dec
pop
mov
lahf
ss
xor
xchg
mov
jmp
push
stos
jmp
sub
ret
rclb
cltd
lods
mov
xchg
mov
dec
and
stc
mov
cld
outsl
jmp
pusha
fistpl
ss
add
leave
shrb
dec
push
jnp
xor
lea
fnstenv
pusha
test
jmp
test
jbe
jo
cs
pop
testb
cli
fnstsw
mov
mov
mov
xor
insb
or
mov
and
movsl
push
clc
add
jle
stc
xchg
wbinvd
jge
mov
mov
cmp
jecxz
mov
xor
stos
inc
movntps
lds
push
add
fs
and
fmul
lock
arpl
loope
cmp
pushf
inc
inc
cwtl
jp
push
lret
mov
cwtl
mov
subb
cmp
fs
and
pusha
sub
xchg
sbb
mov
lret
jae
repnz
jl
pop
stc
in
dec
mov
mov
jae
inc
mov
xchg
daa
push
or
or
scas
xor
iret
rol
iret
xor
inc
test
lret
adc
outsl
jnp
push
dec
loope
cmp
lahf
jmp
xchg
add
fdivl
and
dec
aam
sbb
pop
push
cwtl
mov
fstpl
jmp
sbb
cmp
imul
shr
jns
adc
push
mov
and
ss
lods
xor
or
into
push
xor
xlat
adcl
ss
pop
loop
inc
xchg
mov
push
sahf
imul
and
ror
sbb
enter
xchg
mov
fldcw
sti
mov
mov
sarl
addr16
add
aam
sbb
xchg
sub
add
aad
data16
and
xchg
addl
push
jle
and
pop
aam
dec
mov
cmp
stos
jbe
mov
les
sub
js
pop
push
mov
xchg
data16
jae
iret
ss
imul
inc
add
xchg
cmpsb
loope
lds
gs
mov
les
iret
or
push
lret
and
ds
lock
lcall
adc
lret
xchg
out
sbb
fs
hlt
mov
cmpsb
cmp
mov
andb
inc
mov
and
mov
mov
or
lock
pop
jp
dec
roll
addb
dec
dec
aam
fstpl
test
xor
movntq
scas
inc
cwtl
mov
xor
cltd
divb
xor
inc
add
cmp
cmp
push
sbb
lea
cmp
bound
ja
popf
pop
int
dec
sbb
dec
mov
mov
mov
hlt
in
dec
or
add
xchg
and
mov
mov
push
mov
notl
cmp
inc
mov
imul
ss
pusha
es
stos
mov
cmp
pop
push
out
aam
lock
pop
repnz
xor
dec
xchg
lea
rcl
movsb
cmp
out
or
ret
jle
movsl
int3
stos
aas
mov
fstpt
mov
jecxz
mov
push
nop
daa
mov
movsb
cmp
ljmp
push
fcmovb
js
jb
jne
hlt
filds
out
mov
test
js
inc
ds
hlt
push
insb
test
or
insl
inc
fstpt
mov
mov
inc
lock
or
lret
jg
jno
mov
rcrl
push
mov
cmc
fdivrs
loope
lock
movsl
inc
adcl
dec
mov
inc
sub
repnz
pop
pop
push
xchg
call
pop
pop
imul
push
rorb
sub
pop
fldenv
dec
xchg
fistpll
sbb
adc
stos
inc
and
dec
es
hlt
mov
into
xchg
add
mov
or
or
ret
inc
scas
and
jns
inc
add
or
out
inc
sub
mov
sub
pop
and
pop
jmp
jmp
sbb
fnstenv
and
push
push
sahf
sub
jmp
sbb
repnz
sbb
or
mov
xchg
or
fisttps
lret
mov
jb
daa
lret
pop
lahf
dec
insb
jp
lahf
test
cwtl
stos
adc
adc
js
test
iret
push
sub
push
push
dec
adc
pop
jae
xor
cmp
add
lock
lds
adc
add
xchg
aam
fldl
xchg
fnstsw
outsb
inc
adc
rcrb
add
jecxz
xchg
decb
das
mov
push
jmp
call
cmp
lret
icebp
movsb
mov
imul
xchg
push
cmp
rclb
cmp
xor
out
inc
roll
inc
fisubl
sbb
enter
jnp
repnz
add
outsl
in
shrl
stc
cwtl
dec
add
xchg
mov
or
mov
fwait
xor
enter
jbe
clc
iret
imulb
inc
pop
xor
daa
jne
lcall
mov
ljmp
jne
sbb
jnp
stos
fiadds
loope
xor
dec
jno
cmpsb
jnp
jp
cmp
out
push
and
rorl
mov
fxch
inc
mov
lods
mov
push
iret
sub
push
in
and
push
or
cmpsl
sub
jb
fists
pop
mov
rclb
testl
lds
add
mov
sub
add
sbbl
mov
push
imul
cmpsl
xor
add
lahf
mov
push
sbb
sarl
push
decl
pop
and
popa
xchg
mov
and
out
mov
stos
cmc
xchg
ljmp
test
js
xor
jecxz
shrl
test
jle
or
clc
dec
dec
arpl
scas
ljmp
hlt
mov
rolb
in
pop
andb
vmovaps
jp
jb
fisubrs
clc
add
mov
icebp
xchg
rcrb
movsb
lock
fsub
cmp
stos
das
adcl
lds
insl
sbb
je
les
testb
dec
sarl
or
scas
mov
or
inc
mov
and
jl
jns
stc
and
add
loopne
xor
out
dec
int
pop
push
in
dec
out
fs
insb
jae
sahf
inc
in
adc
sbb
and
xlat
mov
mov
fildll
inc
jge
mov
call
icebp
cmpsl
outsl
int
mov
lods
pop
dec
cld
popf
xor
imul
xor
mov
fdivs
lods
inc
sub
jecxz
jbe
lret
xchg
popa
cli
push
pop
notb
cmpl
pop
enter
mov
arpl
push
cwtl
xor
ret
repz
cwtl
add
or
xor
push
stos
sub
cli
sti
jg
movsb
and
movb
pop
in
xor
jge
jo
rclb
loopne
ss
pop
jge
pushl
pusha
push
push
testl
xchg
in
test
subb
sbb
shl
inc
adc
and
xchg
dec
or
out
push
in
pop
fcmovu
pop
xor
arpl
and
popf
pusha
lahf
dec
pop
xor
or
dec
or
jnp
add
and
pop
xchg
mov
mov
in
cmp
inc
iret
pop
and
push
pop
scas
pop
add
xchg
mov
xor
outsl
or
push
sbb
and
push
push
push
mov
xchg
push
stos
je
xor
gs
jnp
shrl
out
outsl
clc
and
imul
imulb
in
pop
pop
pushf
push
aas
mov
adc
aad
xor
xor
inc
cld
xchg
adc
call
aas
add
push
in
jne
mov
xor
movsl
lock
mov
fwait
into
inc
inc
ja
dec
gs
dec
jecxz
add
out
sti
mov
push
pop
scas
jnp
xlat
test
ja
test
int
cmp
fcos
mov
loope
push
int3
push
in
std
addr16
jae
add
mov
lds
outsl
mov
sbb
aas
dec
aas
xchg
sub
dec
cmp
fwait
sahf
imul
jmp
and
pop
inc
out
sub
insl
mov
lahf
cmp
inc
jb
rolb
ficoms
cli
and
xor
and
pop
pushf
out
test
outsb
loope
rorb
add
jns
push
jne
loope
xchg
dec
dec
sahf
mov
mov
cmp
insl
out
xor
cmp
ret
adc
adc
inc
jl
sub
movsl
pop
stos
inc
pop
ljmp
xor
movsb
pop
jb
test
xchg
and
or
lahf
iret
cmpsb
dec
sub
pop
mov
stos
pop
and
inc
stos
and
rclb
mov
cmp
sbb
ret
sahf
movsb
addr16
or
push
mov
lret
sbb
imull
gs
xchg
mov
imul
ljmp
idiv
push
push
int3
mov
pop
movsl
aaa
mov
and
adc
mov
inc
add
push
arpl
sub
push
ficoms
fcmovu
or
shll
mov
pop
sbb
stos
adc
inc
push
pop
pop
enter
xor
pop
mov
pop
pushl
inc
push
cmp
lret
xchg
and
aad
pop
lock
inc
jp
int
cmovs
test
ret
in
insb
cld
add
out
push
fldcw
mov
mov
ror
push
jp
mov
inc
jg
dec
add
adc
iret
gs
sti
mov
stc
out
in
dec
jmp
ss
daa
cmpsl
push
push
mov
popa
adc
bound
mov
or
inc
mov
ds
or
call
cli
movsl
cwtl
lea
jo
aad
lret
adc
inc
psubusb
movsl
aad
sub
dec
pop
lcall
clc
js
push
pop
and
rcrl
sbb
sbb
xchg
sbb
imul
scas
add
pop
out
xchg
mov
test
fadds
dec
jae
lret
js
sti
mov
push
std
sarb
pop
arpl
inc
sbb
push
lds
sbb
ds
mov
lcall
insb
mov
in
jbe
and
and
dec
sbb
cli
adc
pop
adc
xchg
ds
jl
mov
xchg
mov
outsl
lds
add
test
jmp
mov
xchg
imul
ljmp
cmp
sahf
call
mov
add
rol
or
arpl
test
inc
mov
and
mov
pop
xchg
sub
js
mov
mov
jmp
mov
fwait
push
or
jno
ja
sbb
subl
jl
nop
cmp
gs
fstl
sub
inc
out
add
ret
inc
rorb
add
add
push
jne
mov
js
lret
cltd
jns
inc
test
jbe
jmp
test
cli
push
out
xchg
sbb
inc
js
and
fimuls
and
aaa
loope
outsb
ss
fwait
sub
daa
mov
xchg
pusha
cltd
or
lret
adcl
inc
movsb
mov
inc
mov
repz
adc
pushf
out
bound
pushf
test
dec
inc
adc
lods
mov
call
adc
pop
sub
cmp
in
adc
mov
cmpsb
adc
pop
cmp
sub
mov
cmpsb
sub
jecxz
addr16
lcall
sbb
jl
and
nop
prefetch
insb
cpuid
outsl
pop
cltd
nop
or
add
push
call
outsl
sbb
test
lret
mov
fdivl
adc
mov
pop
repz
cmovbe
cmp
nop
bound
fwait
mov
sbb
and
inc
or
and
fists
daa
int3
jge
fldt
out
dec
pop
icebp
push
mov
popl
cmp
cmp
popf
scas
xchg
in
add
mov
push
loop
stc
nop
xor
and
xchg
fcoms
adc
std
iret
leave
jae
fimull
inc
mov
nop
int3
scas
ljmp
sub
add
aas
inc
arpl
jmp
push
call
xchg
pop
lcall
push
stc
mov
and
inc
inc
push
test
sub
jle
xchg
sub
fwait
daa
stc
inc
or
out
int3
or
addr16
sbb
mov
mov
aas
ret
clc
pop
ljmp
mov
mov
cmp
sub
test
in
xor
jns
movl
fnstcw
andl
repz
cli
or
push
xchg
in
add
pop
jg
inc
xor
or
lea
and
leave
sahf
sub
mov
pop
jmp
dec
pop
stc
imul
in
jne
xor
jecxz
cwtl
lahf
xor
xchg
mov
test
lods
dec
loop
gs
in
iret
mov
scas
mov
jne
mov
sbb
push
addb
push
ret
popa
xchg
in
xchg
fmuls
mov
or
add
test
outsb
icebp
lcall
add
cmp
imul
test
repnz
sub
sub
pop
mov
push
outsb
push
and
sub
cmp
dec
inc
sub
sbb
imul
adcb
adc
sbb
cmpsb
cmp
sbb
les
xor
stc
mov
pop
or
cs
mov
leave
sub
icebp
pop
hlt
cs
addr16
mov
mov
cmpsb
push
mov
bnd
nop
lods
inc
fcmovnb
jnp
mov
jecxz
popf
adc
fsubrl
fs
rol
jo
jp
enter
dec
add
cmp
xchg
out
mov
pop
cmpsb
popa
scas
and
adc
hlt
jae
enter
insb
in
dec
ds
jg
jno
inc
arpl
shll
mov
add
push
push
adc
int3
das
sbb
mov
sbb
add
mov
jle
push
inc
sbb
sarl
cmpsl
cmp
xor
or
or
in
bound
pmulhw
xchg
cmpb
xor
pop
mov
aaa
divb
xchg
pop
sbb
pop
xchg
mov
out
out
mov
xchg
xchg
repz
adc
dec
pop
movsb
aam
adc
iret
sbb
in
call
mov
push
insl
jmp
mov
dec
lret
jb
cltd
sbb
cmp
adc
les
sbb
lds
das
loopne
pusha
jle
xchg
jp
daa
insl
cld
dec
mov
popf
or
cmp
lock
test
dec
divb
push
test
mov
mov
dec
frstor
inc
bound
cmp
add
cmp
insb
push
dec
pop
inc
imul
out
mov
out
sub
xor
pop
pop
jmp
add
jbe
xrelease
push
inc
lock
dec
fstpl
sub
cmpl
inc
les
pop
xchg
add
pusha
mov
mov
jecxz
pop
or
mov
mov
or
jl
xchg
sub
les
out
sbb
rol
inc
or
jbe
gs
stos
xchg
js
push
insb
push
movlps
pop
push
add
sub
pop
pushf
mov
or
pop
out
shl
jns
insb
lahf
outsl
dec
int3
or
pop
sbb
sbb
adcb
xchg
enter
mov
cmp
adc
adc
in
incb
add
dec
stos
jne
sti
out
mov
sbb
enter
pop
push
and
fidivrl
cli
push
jl
insl
sar
jo
cmp
loope
jge
aam
mov
out
fstpt
or
ljmp
insb
xor
xchg
inc
clc
mov
adc
cmpsb
std
adc
mov
mov
mov
lods
insl
jg
popl
je
insl
push
xchg
mov
sbb
in
or
dec
xchg
js
ljmp
add
shrb
sbb
sbb
mov
lea
in
imul
jp
int
push
js
adc
push
test
inc
stos
xchg
stos
gs
push
jge
push
pusha
gs
mov
or
leave
cmp
int
mov
cld
push
ret
push
push
dec
inc
arpl
and
inc
daa
xchg
jnp
mov
jae
scas
pop
lds
rolb
sbb
es
mov
test
add
mov
xchg
inc
sbb
jl
dec
mov
cmpl
sbb
dec
nop
xchg
int3
mov
push
cwtl
jmp
ficomps
and
mov
jge
mov
or
stc
mov
repz
ja
dec
mov
mov
jmp
xchg
lret
push
add
bound
ljmp
jb
sti
push
sbb
push
inc
xchg
push
xchg
dec
jno
dec
icebp
fidivrl
mov
jnp
mov
mov
pop
scas
scas
jbe
push
call
pop
mov
cmp
shll
leave
mov
sti
jbe
xchg
ljmp
inc
dec
filds
xchg
jmp
jno
icebp
lret
push
and
jb
or
inc
fs
aam
ret
std
scas
sysret
push
sbb
call
pop
adc
mov
xlat
bound
das
jle
and
rorb
sub
push
or
adc
push
dec
in
cmp
imul
inc
lods
jle
lock
movsb
pop
and
call
push
jno
pop
push
push
jecxz
std
sbb
dec
add
mov
std
xor
clc
jp
jo
xchg
sbb
mov
fbstp
mov
mov
xchg
push
push
inc
push
sub
cmp
lea
loop
shlb
push
or
fwait
test
cmp
push
cltd
cmc
cltd
stos
and
outsl
add
outsl
adc
inc
dec
loop
push
clc
mov
out
cmp
aad
sbb
aad
stc
imul
xchg
cltd
ret
in
mov
test
add
hlt
mov
dec
gs
sahf
adc
or
mov
stos
and
stc
push
adc
and
inc
movsb
lods
inc
push
jns
cli
pop
mulb
mov
ret
faddl
cmp
std
aam
sbb
mov
mov
mov
sub
das
fisttpl
movsl
pop
add
lea
jb
mov
push
inc
cmp
sbb
stos
xchg
mov
iret
add
out
push
in
repz
adc
push
mov
xchg
popf
hlt
xchg
sub
dec
in
outsb
xchg
push
scas
sbb
push
js
ss
test
adc
stc
mov
lods
ret
xchg
push
mov
push
test
ja
mov
dec
or
std
xchg
pop
or
jg
jl
stc
lods
dec
add
mov
xchg
sub
add
out
and
add
pusha
sub
scas
and
xchg
push
js
int
xchg
loop
push
cmc
ror
lahf
clc
jno
ljmp
push
scas
mov
cltd
aas
aam
jge
iret
fldl
repz
fiaddl
sahf
lret
test
repnz
mov
push
add
jno
shr
pop
add
jge
mov
mov
xor
inc
sub
shl
and
mov
jmp
and
shl
and
lcall
shlb
inc
fstpt
and
test
and
in
dec
cwtl
mov
mov
jno
int3
fidivs
sarb
fadds
xchg
fdivs
jecxz
cmp
and
push
lods
je
dec
jae
sahf
adc
xlat
cld
cmp
jne
test
pushf
xchg
or
mov
adc
ja
scas
out
inc
push
fsubrp
ret
mov
testb
push
mov
mov
add
add
xchg
dec
loope
dec
adc
cmp
add
out
mov
lds
push
add
rol
es
into
xor
inc
push
xor
ret
shr
shrl
pusha
push
push
mov
or
cmp
sbb
loopne
aam
out
sarl
xorl
ljmp
ret
ja
inc
push
loop
sbb
add
xor
lds
jno
inc
dec
jnp
movsl
lods
insb
out
outsl
cmp
sub
in
push
push
cwtl
sbb
jp
aaa
jno
sub
aam
mov
or
leave
push
mov
xchg
mov
lods
mov
or
loopne
dec
mov
orb
mov
mov
imul
sarl
loop
movsl
or
cmp
nop
xor
sbb
inc
repz
and
jp
cmpsl
test
out
hlt
xor
adc
into
sub
ss
jbe
pop
xlat
dec
es
ds
cli
cmp
fs
int
sarl
or
ds
pop
pop
les
popa
inc
jnp
js
pop
jno
or
lret
insb
sbb
loope
test
fisubl
cmp
insl
mov
pusha
dec
iret
shl
mov
repnz
xchg
out
xchg
lods
cmp
imul
xor
sahf
sbb
mov
arpl
push
xor
hlt
arpl
xchg
jle
shrl
jo
lahf
repnz
push
test
sbb
xchg
outsb
or
xchg
inc
and
pushf
push
inc
into
imul
pushf
cli
call
shrb
cmc
or
or
push
mov
mov
dec
mov
push
add
cmp
inc
dec
jle
jp
push
shrl
les
or
mov
push
adc
xchg
loope
add
sbb
and
lea
mov
out
sub
pop
cmp
add
in
lds
out
test
sub
xchg
jbe
mov
sub
int
mov
mov
mov
jl
lods
ljmp
and
fyl2xp1
and
out
leave
push
xchg
addr16
pop
inc
add
sub
dec
out
test
inc
lods
jge
gs
in
dec
rclb
popf
movsb
or
xchg
jle
repnz
and
inc
and
add
movsl
icebp
or
adc
mov
dec
adc
ljmp
and
bound
arpl
mov
int3
cmp
pop
cld
test
ljmp
jmp
push
xchg
inc
sbb
in
frstor
fildl
iret
cmpsb
fwait
int
fisubrs
xlat
mov
xor
daa
pop
aaa
or
jl
out
jle
pop
push
into
pop
movsl
jl
popa
das
xor
insb
js
mov
les
pop
lock
vpcmpgtd
xchg
in
or
test
leave
or
loope
je
push
adcl
lcall
stc
shrb
in
int
popa
clc
mov
or
arpl
sub
hlt
mov
xchg
shlb
pop
imul
cltd
mov
jnp
and
leave
jecxz
cltd
xor
in
fcmovnbe
xchg
fldl
pop
push
cmp
ljmp
aam
add
and
mov
sub
push
mov
and
inc
add
dec
loope
gs
xlat
movsb
pushf
push
adc
push
adc
pop
scas
or
sub
dec
cmp
mov
out
sub
mov
adc
pop
and
xchg
adc
mov
in
jecxz
loope
push
jae
loopne
sbb
dec
inc
and
jb
sub
inc
push
xchg
shrl
clc
das
testb
adc
xchg
loopne
and
loope
push
push
or
dec
xchg
test
lahf
jb
cmc
cmpsl
stos
shrb
cmp
jne
mov
mov
iret
pop
lahf
jne
or
scas
mov
mov
out
xchg
bound
mov
mov
or
jecxz
imul
mov
dec
or
push
insl
jae
xchg
pop
test
or
and
xchg
or
popa
sub
inc
enter
addr16
movsl
lcall
and
jl
cld
dec
aam
jmp
and
subb
cwtl
mov
mov
dec
in
pusha
adcb
in
sahf
push
mov
data16
cltd
fs
and
popf
jno
sbb
cmpsb
and
test
fidivrl
xlat
and
imul
fisttps
mov
and
jl
iret
push
cltd
cwtl
inc
fsubl
cmp
sbb
xchg
jp
aas
rcrl
cmp
es
movsb
push
and
stos
xchg
cli
xor
aaa
clc
scas
call
jbe
and
xchg
push
jne
bound
leave
xchg
fnsave
ret
jl
mov
xchg
and
sbb
sub
pop
out
xchg
mov
mov
xor
xor
in
stos
push
out
std
jle
clc
push
cmp
loop
or
int3
mov
fnstcw
cmpsb
arpl
pop
rorb
aas
mul
jp
cs
inc
mov
cmpsl
mov
and
hlt
cld
les
xor
sarl
lds
lods
dec
hlt
inc
orl
pop
out
add
push
fimull
and
js
jmp
push
jl
daa
pop
sahf
clc
rorl
aad
mov
jns
pop
scas
popa
adc
in
jbe
sub
movsl
mov
popw
int
dec
lds
xor
mov
xor
sub
sbb
lods
and
insl
mov
mov
loope
inc
lahf
and
pop
mov
xchg
rcrb
fwait
jne
dec
out
mov
stos
xor
insb
imul
mov
pop
mov
popf
shl
cmp
out
loopne
sahf
lds
imul
loope
jbe
mov
fmul
rcl
push
cmp
or
xchg
pop
lods
adc
adc
push
mov
mov
xor
xchg
outsb
mov
or
mov
popa
insl
or
out
pop
and
pushf
inc
rclb
mov
movsl
or
add
lds
out
push
fincstp
or
repnz
add
ds
pushf
or
in
xor
leave
pop
and
sub
pop
or
int3
movb
push
pop
jne
stos
and
inc
das
addr16
adc
pushf
das
test
data16
push
imul
lret
lret
arpl
inc
popf
ret
sbb
pusha
lds
enter
mov
iret
mov
out
inc
jmp
inc
and
adcl
aaa
pop
repz
call
lock
mov
fcomps
jge
pop
daa
incb
cwtl
test
subb
lock
pop
lock
add
cmp
or
adc
or
imul
sub
and
add
mov
sti
pop
test
mov
ret
and
mov
in
sbb
mov
test
mov
fcompl
lret
xchg
jecxz
xor
xchg
aas
test
pop
push
push
test
jo
add
jne
mov
xor
fucomip
push
into
jge
arpl
repz
inc
test
dec
scas
cmc
cmp
lea
cli
test
cmp
int3
pop
hlt
std
xor
inc
push
and
jns
addb
mov
mov
outsb
pop
mov
jb
push
pop
shr
sub
mov
jnp
pop
mov
ljmp
push
xchg
jns
ret
ret
xchg
sub
cwtl
shrl
cld
jl
mov
mov
jecxz
popl
lret
mov
push
and
cmp
lea
stos
adc
mov
test
lahf
in
mov
sarl
push
jle
mov
test
fprem1
sti
test
in
test
xor
add
mov
mov
jecxz
fbstp
inc
jbe
jp
and
sbb
leave
add
shrb
cmp
addr16
ret
push
jmp
add
ds
ljmp
je
in
cmp
add
notb
dec
push
adc
inc
mov
dec
mov
and
icebp
cmpsl
sbb
outsb
movsb
and
loope
clc
and
rcll
xchg
mov
push
out
mov
add
adc
adc
mov
add
fdivrp
pushf
cmp
xchg
mov
add
and
inc
xchg
lahf
stc
inc
jbe
int
outsl
jne
les
sbb
push
and
andb
adc
insl
mov
mov
sbbl
lods
mov
push
dec
clc
push
hlt
and
mov
loope
mov
popf
sbbb
push
cld
mov
sbb
xchg
pushf
ret
cmp
cld
pop
adc
addb
ss
pushf
lods
in
push
jae
mov
std
inc
mov
inc
cmp
imul
xor
mov
dec
sub
jl
lods
pop
push
ficomps
lock
pop
dec
mov
js
or
jo
cwtl
jne
mov
addl
fs
mov
aas
adc
or
enter
jp
lret
xor
imul
push
mov
aas
cmp
dec
in
loopne
aaa
xchg
shrl
mov
mov
int
sbb
inc
lods
pop
push
in
ja
sbb
xchg
mov
pusha
pop
insb
mov
xchg
pop
sub
mov
mov
outsb
pop
adc
jecxz
call
mov
pop
pop
sahf
cmp
mov
cmp
inc
jae
mov
stos
cmp
das
lcall
gs
aam
pushf
rcrl
sahf
pusha
xlat
jp
and
dec
inc
inc
clc
xchg
inc
sub
test
sub
popf
or
arpl
into
enter
push
mov
and
sahf
sbb
sbb
fldl
pop
cmpsb
gs
xchg
shll
repz
adc
mov
jmp
sub
pusha
mov
int3
sarb
lods
fnstenv
imull
scas
jnp
fnstcw
test
aaa
cmp
inc
mov
lcall
xchg
xchg
sub
nop
andb
call
pop
aaa
jo
je
daa
leave
aad
adc
pop
jl
adc
movsl
sbb
cmpb
pop
aam
popa
xchg
mov
fcmove
cmpsb
fs
mov
cmpsb
xchg
cmp
fnsave
mov
aaa
mov
cmpsl
lahf
xchg
leave
test
xor
aas
imul
adc
cmpsl
cmp
lds
push
mov
push
push
jp
test
js
ret
shl
scas
cmp
sub
sub
fiaddl
frstor
inc
mov
pushl
bound
out
xchg
jl
rclb
loope
icebp
mov
cs
in
push
loope
fadds
shrl
sbb
hlt
dec
sub
fimuls
into
sub
xor
push
cmp
inc
jne
mov
push
leave
xchg
pop
inc
lods
call
aaa
pop
sar
or
dec
add
and
pop
xor
cmp
ss
fdivrs
pop
xchg
popa
mov
inc
or
jecxz
in
adc
mov
pop
and
push
mov
repz
xor
inc
add
xor
out
inc
jnp
xchg
icebp
mov
pop
pop
loope
mov
ret
add
aad
pop
sub
xchg
nop
ret
pop
push
xor
xchg
ficoms
push
in
mov
out
test
ds
cmp
repz
cltd
pop
cmp
jbe
adc
inc
sbb
jle
sti
push
inc
sub
sub
pop
xchg
and
xorl
pusha
lods
ljmp
in
pop
scas
ds
outsl
push
push
or
das
mov
xchg
pop
jb
in
xchg
or
ljmp
mov
cwtl
cmpsl
addl
xorl
sub
daa
mov
sub
lret
data16
or
mov
stos
out
jae
int3
out
test
mov
popa
dec
test
js
imul
cltd
push
mov
jno
cs
testl
xchg
out
mov
test
xor
jecxz
scas
xchg
push
xchg
repnz
push
ljmp
push
add
aam
mov
cmp
mov
add
push
sbb
arpl
jle
mov
add
in
mov
data16
xor
insl
dec
nop
push
sbb
dec
jecxz
mov
lods
je
fdivrp
sbb
xchg
lods
je
repz
and
mov
fs
jne
idivb
iret
nop
jnp
sbb
inc
adc
sub
xor
push
cwtl
push
mov
fxch
mov
test
vorps
xor
mov
inc
roll
xchg
push
pusha
mov
jo
daa
outsl
ds
xor
or
mov
rcll
cmp
jecxz
in
in
stos
shll
scas
mov
xlat
mov
sbb
aas
fisubs
in
fcompl
and
jno
mov
pop
cwtl
pop
sbb
movsb
mov
cwtl
and
sbb
rclb
xchg
xor
mov
int
mov
jle
call
sbb
cmp
xor
aaa
push
shll
push
mov
pop
cmpl
aas
xchg
dec
dec
mov
cmp
cmc
es
pop
out
int
pop
in
int
fiadds
jle
shlb
pop
stos
inc
push
ds
in
nop
adc
in
shl
nop
inc
push
sub
mov
ret
idivb
jecxz
mov
scas
and
lods
fs
dec
les
std
mov
lods
adc
and
jecxz
std
pop
or
lahf
mov
sub
adc
mov
mov
cli
mov
jo
aaa
mov
insb
mov
pop
lea
cwtd
mov
in
xchg
lock
mov
test
mov
and
add
pop
notb
pop
popf
mov
ret
outsb
lret
and
das
inc
cwtl
mov
int
fsubr
fs
push
sub
mov
outsl
lea
lds
inc
mov
outsl
push
fstpt
lahf
notl
jne
jo
nop
mov
inc
mov
hlt
lret
stos
mov
int
xor
dec
dec
push
xchg
xchg
je
dec
loop
xor
pop
movsl
cmp
push
inc
ficoms
inc
std
and
sti
ss
cmpsl
cmp
jne
daa
cmpsl
jecxz
rorl
fbld
pop
mov
inc
fnstenv
mov
insl
xchg
out
fisubrs
faddp
leave
xchg
push
push
mov
xchg
or
adc
mov
outsl
mov
adc
add
jecxz
mov
cmp
pop
pop
aaa
jbe
inc
jno
jbe
mov
iret
xchg
ret
clc
lcall
fwait
loope
and
jo
inc
fimuls
cmp
ss
or
aas
cmp
sub
iret
and
pop
push
lock
repz
jg
inc
push
daa
cli
sbb
sbbb
push
movsl
outsl
mov
subl
outsb
stos
imul
daa
and
into
and
loopne
lods
xlat
std
sub
dec
push
jns
xchg
sub
daa
pop
mov
shl
xor
aam
je
out
pop
push
out
add
xchg
scas
adc
inc
adc
jne
lods
mov
aad
mov
jp
mov
pop
push
push
lods
sub
pushf
push
push
mov
pop
cwtl
pop
sub
iret
jecxz,pt
das
pop
jl
dec
shlb
cmpsl
imul
xchg
push
mov
and
add
jae
jmp
push
test
push
sub
mov
fcmove
cmp
fists
lock
mov
aas
ret
aam
lods
hlt
mov
fidivrl
call
iret
mov
in
inc
in
sti
imul
xor
icebp
in
and
mov
xchg
aas
push
or
stos
mov
dec
mov
fcomps
subb
mov
sub
shrl
push
sub
sbb
mov
sub
mov
pop
jp
insl
mov
roll
and
sbb
xchg
pop
shrl
pmulhuw
mov
jg
aad
das
add
jp
lds
shl
idiv
cltd
loopne
mov
nop
aad
mov
jle
dec
shrb
xlat
dec
outsl
or
clc
mov
mov
out
sti
and
sarl
jge
cmp
fucomip
xor
out
cmpsl
add
std
loopne
sbb
outsl
loop
mov
jne
jge
andb
data16
fwait
in
daa
shrb
mov
jl
cmpsl
lods
fnstsw
aad
aam
sub
popa
jb
sbb
es
inc
inc
push
out
jl
dec
jb
xor
js
movsb
xchg
add
add
std
cli
push
jge,pn
ja
filds
xchg
inc
push
cmc
inc
xor
insb
out
shl
insl
fldcw
lcall
xchg
fiaddl
add
cld
or
jle
stos
scas
out
adc
sbb
scas
jbe
mov
push
loopne
pop
xor
pop
repz
pop
pop
popf
repnz
rorb
lea
inc
std
das
mov
sbb
dec
jl
fsts
sub
clc
jae
movsl
pop
mov
icebp
movsb
sub
lea
ljmp
cli
cmpsb
and
sbb
cli
adc
movsb
ret
ret
push
cmp
lahf
add
push
mov
subl
in
xchg
push
xchg
adc
je
dec
dec
movsb
outsb
lahf
ja
mov
flds
mov
mov
mov
out
out
add
add
cmp
sub
inc
and
mov
inc
mov
stc
xor
push
mov
movsl
push
xor
inc
cmp
dec
mov
cwtl
nop
inc
or
mov
push
cmpsb
addr16
mov
test
in
adc
mov
push
pop
fistpl
mov
sbbl
adc
jno
lds
out
lock
mov
jmp
jne
pop
cmpsl
sub
mov
negb
in
add
and
cld
inc
std
mov
xor
out
out
rcrl
out
lea
jecxz
js
sub
xor
pop
cmp
inc
in
inc
std
push
cmc
jecxz
jecxz
test
das
add
push
in
movsl
xor
scas
daa
lock
xchg
ja
cltd
movsl
cmp
stos
ret
dec
fstl
daa
test
incb
testl
adc
add
add
push
stos
push
add
add
xorb
push
roll
pop
or
adc
test
stos
push
inc
xchg
add
cmc
add
cmc
ja
cmp
add
into
inc
dec
dec
xchg
imul
xor
dec
jp
mov
imul
fimull
xchg
lock
dec
popa
add
mov
out
fldl
or
out
insl
add
jecxz
or
mov
cmc
dec
jmp
xchg
notb
imul
mov
jbe
jmp
daa
inc
or
movsl
jge
scas
sahf
inc
mov
sbb
loopne
xchg
mov
push
mov
cmp
pop
stos
fucomp
sub
ret
loop
add
cmp
push
lods
mov
pop
xor
dec
sbb
lods
ja
sbb
mov
jmp
or
push
mov
or
xor
jmp
cltd
inc
daa
push
std
test
push
popf
mov
push
cwtl
sti
movsb
imul
sarb
mov
cs
sbb
inc
cmp
sahf
inc
sbb
test
cltd
das
mov
andb
and
mulps
mov
xor
xchg
fwait
jns
movsl
xchg
sub
ret
sbb
pop
pop
les
daa
jg
or
jns
cmpsb
push
cmc
jmp
imul
sti
sbb
stc
pop
dec
xchg
sub
cmp
div
cmp
fs
in
jle
mov
call
sbb
or
push
jmp
sti
mov
jmp
jp
pop
and
pop
xor
dec
xchg
call
sub
cld
jl
sbb
jb
mov
xchg
adc
out
push
mov
cmp
xor
fcompl
lods
lret
gs
mov
subl
arpl
mov
cmp
ss
jnp
or
cld
inc
push
jb
iret
jbe
push
int3
inc
sbb
dec
in
notb
sbb
popf
stc
jge
and
sbb
pop
mov
cs
inc
cmpsl
and
psubusw
mov
jns
enter
mov
pushf
iret
mov
insb
sbbb
or
or
and
icebp
data16
insb
or
sub
or
movsl
pushf
sti
xchg
idivl
lds
sub
xchg
testb
popf
lods
xchg
addr16
sbb
js
subb
push
ret
jnp
loop
cmp
cmp
cpuid
mov
cltd
jo
mov
cmpsb
adc
test
das
repz
scas
and
scas
inc
adc
fstpl
xchg
sub
mov
xor
sbb
stos
and
dec
mov
jnp
xor
xor
push
loop
into
push
iret
adc
jge
cwtd
sbb
in
adc
sub
iret
add
or
mov
mov
xchg
sbb
inc
xor
fs
cmc
call
mov
ds
inc
mov
fs
repz
adc
dec
jl
push
leave
push
popa
jle
inc
sub
cmp
insb
push
push
and
imul
push
lock
fmuls
sbb
push
sub
xchg
pusha
and
mov
ret
ret
test
fisubrs
fs
xor
stos
or
sub
in
in
cmpsb
enter
jg
push
mov
lods
mov
inc
jns
dec
ljmp
push
mov
in
cmp
inc
testb
sub
xchg
cmpb
cmp
mov
add
pushf
sub
outsb
pushf
add
add
outsl
orl
enter
int
scas
xchg
loop
pushf
cmpsl
push
movsl
sbb
pushf
pop
xchg
ja
mov
dec
stos
cmpsl
jge
fnsave
int
push
inc
push
xor
jae
cmpsl
lods
jle
xchg
mov
xor
lea
inc
fstps
lods
add
xor
mov
or
shl
imul
push
dec
sbb
lret
imul
bnd
adc
push
xchg
add
mov
and
adc
fiadds
jae
movsl
xchg
sub
into
je
ds
mov
sub
scas
jae
imul
daa
addr16
test
movl
pusha
mov
movsb
cmp
or
push
test
imul
cltd
stc
mov
push
sub
dec
add
jmp
pop
push
decl
fdivrs
iret
mov
lock
fisubl
add
xchg
push
popa
lods
xchg
sahf
or
aad
scas
outsb
cmp
jecxz
mov
inc
jbe
lcall
das
loopne
bound
jle
movsb
rcrb
das
fidivrs
xchg
pushf
or
jmp
rorl
fwait
inc
sub
push
push
shlb
jne
sub
mov
scas
ret
add
pushf
mov
sbb
adc
sbb
movsb
cmp
sbb
into
and
push
fcos
adc
pop
dec
gs
and
xchg
jmp
pop
icebp
sbb
sub
inc
repz
lret
jns
in
stos
adc
mov
xchg
scas
call
dec
mov
stos
gs
test
add
jp
and
mov
pop
inc
xor
scas
jae
fdivs
mov
shlb
adcb
dec
pop
mov
shrl
cmc
or
cld
mov
and
sub
inc
push
dec
call
xor
pop
sub
scas
jle
scas
ret
dec
dec
pop
dec
mov
imul
sub
jmp
sbb
lahf
mov
call
arpl
or
push
jmp
into
shl
jl
mov
fwait
dec
les
sbb
add
xor
int
cmp
sbb
xchg
das
aam
insb
mov
js
lock
pop
loopne
jne
or
cmp
in
mov
arpl
shl
in
inc
daa
fwait
enter
lret
xchg
shrb
push
xlat
shl
fisubrs
xor
div
mov
mov
imul
mov
test
stc
orl
stos
jbe
and
lahf
cltd
lret
ja
js
in
pop
cmpsb
cmp
push
push
inc
adcb
leave
jno
mov
out
movsl
std
nop
add
jmp
and
mov
loopne
cli
lret
cmpsl
loop
pop
nop
daa
jmp
ljmp
js
pop
add
cmp
popa
daa
iret
mov
das
std
nopl
jge
pop
mov
adc
mov
pushf
push
adc
adc
xchg
mov
sbb
and
int
mov
sar
pushl
xor
jbe
scas
mov
jg,pn
popf
stos
push
sub
sbb
xor
imul
orl
push
out
sahf
scas
xchg
xchg
out
scas
mov
cmpsl
jb
xor
orl
lods
adc
ret
lods
pop
outsl
push
push
int
dec
fs
inc
mov
dec
mul
fsts
push
mov
jnp
ljmp
fwait
out
mov
push
imul
test
pop
das
lea
mov
pusha
add
jmp
dec
test
fisubrl
repz
movsb
or
pop
pop
sarb
or
mov
unpcklps
push
imul
or
icebp
mov
nop
daa
hlt
fld
out
lahf
scas
mov
cmp
int3
xor
or
xchg
in
jl
test
sbb
push
shrl
or
insb
adcl
cwtl
or
dec
cmp
dec
imul
jg
imul
pop
adc
cmp
orl
cmp
aam
gs
xlat
mov
push
sub
out
add
inc
fisubrl
popl
fistps
in
cmp
xor
mov
dec
scas
mov
int
adc
ljmp
pop
sbb
int3
scas
add
enter
mov
clc
dec
ss
xchg
std
sbb
call
mov
fldenv
fistps
xchg
jecxz
mov
data16
idiv
and
sub
jns
jge
ljmp
cwtl
sub
dec
xor
or
ret
cmp
imul
xchg
jl
pushf
fsubs
enter
loop
test
cmp
pop
mov
inc
push
inc
cmp
mov
xchg
and
frstor
mov
out
inc
dec
jp
push
and
inc
pop
or
push
aas
cmp
nop
pop
fs
cmp
sbb
jb
popf
xchg
rol
pop
int3
cld
pop
ds
mov
cmc
xchg
in
in
add
fwait
sub
movsb
dec
daa
inc
jecxz
mov
pushf
call
aad
mov
or
cmpsb
shlb
jae
pop
in
mov
jne
or
jg
inc
stos
outsb
pop
adc
sbb
lods
lcall
or
mov
push
sbbl
jge
mov
cltd
fwait
xor
mov
xchg
push
movsl
pop
cmc
push
inc
cpuid
sbb
movsl
cmp
xor
ret
pop
mov
popa
subl
cmp
pop
repnz
xor
icebp
push
clc
xlat
fisttpll
mov
push
insl
xchg
mov
xor
in
js
in
outsl
inc
negl
cwtl
dec
mov
ret
sub
aad
cmp
roll
sahf
clc
subb
lret
andl
mov
or
popa
pop
fildll
imul
jmp
test
mov
fnstcw
dec
mov
pop
addr16
pop
mov
cmc
fimull
bound
mov
pop
sahf
jmp
andl
pop
xchg
adc
pop
xor
test
leave
sti
xchg
mov
cltd
lahf
pop
clc
sbb
bound
inc
or
mov
daa
mov
addl
sbb
pop
lcall
xchg
or
jge
addr16
jne
jge
and
xchg
shll
push
pop
dec
sbbb
dec
loop
mov
dec
cmp
xor
push
test
adc
int3
cmc
add
ds
lret
inc
outsb
dec
add
sbb
jg
or
sbb
cmpsb
sub
sbb
ret
insb
xor
add
lds
jle
test
cli
jg
ret
jl
mov
mov
adc
jle
aas
inc
pop
int3
out
addb
mov
loopne
jecxz
dec
inc
jmp
lret
sti
push
call
cwtl
jb
scas
xchg
sub
movsb
mov
iret
inc
popa
or
sti
std
dec
mov
cmpsl
repz
dec
ret
out
pusha
leave
rol
xchg
lea
inc
ret
rcr
sub
mov
add
hlt
jno
cmp
jbe
outsl
sbb
push
test
icebp
and
mov
mov
xchg
dec
imul
mov
sub
or
mov
and
nop
jmp
push
cmp
push
loop
nop
dec
push
iret
fldt
mov
ds
sti
es
rcrb
pusha
push
mov
cltd
lods
xchg
mov
mov
ds
iret
aas
movsb
cmp
fadd
test
mov
cmp
cwtl
testl
mov
jnp
aas
add
out
add
jmp
cld
inc
inc
shll
dec
rclb
repz
adc
mov
mov
mov
ror
mov
fidivs
adc
in
adc
cwtl
pop
test
mov
enter
stos
leave
mov
xor
pushf
dec
lods
clc
mov
shlb
xor
pushf
sbbl
push
neg
in
ret
mov
sub
call
les
pop
mov
jae
out
add
loope
or
cmp
inc
pop
jg
push
push
lods
jno
icebp
or
xor
push
pop
jnp
xchg
fsub
clc
mov
out
mov
maxps
dec
scas
ljmp
mov
rcrb
mov
add
mov
icebp
pushf
push
in
add
pop
ret
dec
cmp
int3
addr16
xchg
popf
xor
mov
dec
push
inc
inc
jp
int
dec
sub
jmp
lea
gs
outsb
aaa
testb
stc
xor
pusha
dec
in
sbb
xor
add
inc
hlt
mov
sarl
clc
call
mov
rclb
inc
push
repnz
mov
les
repnz
bound
cmp
pop
scas
inc
scas
inc
test
data16
out
and
jge
xor
cmc
dec
movsl
lea
push
in
jo
jecxz
dec
mov
jmp
aad
or
insl
inc
push
push
cmp
clc
mov
aas
into
std
cmc
dec
test
decl
outsb
lret
inc
into
pop
cmp
js
sahf
pop
mov
rcl
in
push
sbb
sub
scas
sbb
pop
aam
push
outsl
push
cmpsl
es
push
mov
and
and
repnz
mov
dec
lret
pop
aas
in
dec
in
stc
pushf
pop
outsb
mov
jmp
sub
mov
outsl
push
inc
mov
push
in
push
addl
cmpsb
xchg
popa
ss
aad
lcall
jl
sbbl
inc
add
test
imul
aad
repnz
pusha
jg
adc
iret
pop
je
cmp
jl
movsb
inc
sbb
fucomip
push
ret
lret
xchg
repz
xlat
fidivs
fisubl
pop
sarl
push
sbb
fldt
jns
xor
in
loopne
adc
dec
ss
push
lds
leave
int
out
sbb
mov
ret
scas
xchg
pop
subl
loopne
rol
sbb
pop
aaa
mov
out
mov
ret
dec
cwtl
xor
jecxz
push
out
mov
js
sti
test
sbb
lods
inc
mov
xlat
and
movsb
cmp
add
filds
sbb
sbb
xchg
push
fucomi
jmp
and
fildl
aas
push
in
mov
jns
or
lock
mov
rcl
int3
lds
scas
mov
or
imul
sarb
cli
and
cmp
sbb
sbb
mov
push
in
jl
jl
dec
je
in
or
test
jmp
jae
out
dec
loope
cmp
cwtl
inc
dec
stos
imull
mov
shll
mov
lods
push
push
add
jae
dec
xchg
imul
daa
ja
push
mov
xchg
push
fdivrs
aaa
sbb
out
jmp
andb
aaa
push
into
mov
add
adc
push
inc
push
fdivl
sbbl
pop
ficoml
cmp
fsts
es
mov
xchg
xchg
and
shlb
lods
and
push
hlt
pop
lods
or
stos
xor
lock
fdivr
jbe
inc
cmp
cmp
jo
pop
repnz
mov
push
loop
mov
inc
mov
shrb
into
pushw
fstps
not
ret
das
mov
xchg
mov
or
rorl
xchg
or
sub
pushf
sub
xor
dec
loop
jp
gs
imul
leave
mov
rorb
movsl
fidivrs
paddw
test
push
jb
lods
xchg
xor
scas
pop
mov
dec
int3
jl
sub
adc
xchg
xor
popf
push
sbb
mov
bound
mov
sbb
mov
mov
sbb
cmp
mov
mov
mov
lods
nop
xor
data16
pop
out
mov
push
ss
push
repz
out
mov
adc
sbb
arpl
inc
arpl
aas
xchg
dec
das
out
inc
jae
jp
adc
cmp
mov
into
mov
in
sub
and
rorb
sti
mov
pop
andb
sbb
mull
outsl
cmp
insl
add
lds
pop
repnz
aam
sub
bound
outsb
cltd
cmp
test
loop
inc
and
comiss
in
xlat
rorl
aad
in
xchg
xor
pop
sbb
mov
fiadds
dec
insl
add
mov
lea
sbb
sbb
sub
jnp
std
lods
jp
add
jne
adc
adc
pop
xor
fdivr
sbb
xchg
insl
loope
push
filds
push
shll
push
inc
fs
int3
or
cmc
dec
cmp
scas
bound
lods
test
ss
pop
out
or
push
pop
jo
andb
ja
adc
scas
imulb
imul
mov
dec
out
pop
fcoms
andl
mov
std
dec
imul
sbb
lcall
outsb
mov
popf
jne
repz
jnp
subl
cmp
mov
std
or
test
pop
xor
lea
jmp
sahf
jmp
xchg
jle
inc
cli
jne
stos
lahf
push
xor
mov
popf
push
sub
jo
cmp
pop
mov
clc
sbb
dec
mov
mov
in
inc
pushf
scas
rorl
cmp
ret
jl
cmpsb
mov
adc
test
popa
dec
inc
rclb
mov
popa
xchg
cmp
jno
xchg
xchg
adc
js
mov
movsb
repz
jecxz
lds
lea
inc
lods
pop
push
loope
push
test
pop
ret
int3
vpaddw
roll
inc
push
or
mov
int3
and
xchg
in
int
pop
leave
mov
int3
je
js
ss
andb
cld
mov
mov
and
or
adc
mov
call
test
shlb
jno
lret
xchg
cltd
sub
ljmp
popf
mov
inc
ret
fcmovnbe
aaa
dec
sbb
inc
sbb
daa
incb
push
jmp
mov
xchg
dec
cmc
mov
ljmp
mov
mov
jns
or
push
dec
cmp
xor
pop
lahf
push
gs
movsb
das
push
loop
ss
mov
das
iret
and
dec
cwtl
jp
rcrb
subl
arpl
icebp
lret
xchg
inc
pop
pushf
push
xchg
lds
pop
out
and
inc
mov
je
lods
sarb
orb
and
mov
xor
xchg
test
popf
lods
jb
lea
inc
xor
roll
js
fdivl
adc
sub
idiv
cld
lcall
in
pop
push
leave
ljmp
adc
push
add
push
cmpsl
adc
push
das
clc
shlb
add
data16
xchg
push
and
add
sbb
insb
lods
dec
push
sub
aas
sub
shlb
out
sbb
in
inc
adc
aam
and
cli
gs
inc
mov
movsl
xchg
lods
fisttpl
lahf
daa
push
adc
rolb
push
lahf
inc
fidivrs
mov
test
cmp
jns
sub
cmp
pop
ljmp
call
pop
xor
jp
xchg
pop
les
leave
xchg
ret
xor
jp
sub
xorb
in
fldl
push
pop
ss
fs
pushf
xor
lea
adc
test
mov
xchg
rcr
push
jmp
and
bound
and
or
sub
hlt
mov
out
pop
shlb
in
mov
xor
inc
sbb
sbb
inc
xchg
aaa
into
ret
inc
je
int3
roll
sub
adc
loope
adc
lods
rcl
inc
mov
pop
out
loope
rorl
sub
scas
es
sbb
jns
ss
mov
mov
cltd
xchg
mov
lea
fdivrs
sarb
ss
and
add
cmp
and
jo
loope
push
adc
icebp
xor
mov
arpl
hlt
pop
add
sbb
jp
xchg
cmp
ret
negl
xor
lahf
and
repnz
stos
mov
mov
lahf
lahf
idiv
dec
lret
xlat
fwait
decl
lds
jo
jno
jecxz
lods
dec
sbb
or
dec
pop
add
fucomip
adc
fsubrl
pop
xor
cs
out
push
jb
adc
aam
sub
stos
fwait
push
mov
rcl
fldcw
or
sarb
stos
nop
adc
insl
add
jo
test
mov
pop
cld
push
std
or
or
jmp
jmp
fwait
inc
gs
jmp
cltd
shrb
das
mov
sahf
aas
imul
adc
cmp
lret
cmpb
jo
add
popf
out
and
push
out
push
sbb
arpl
cmpxchg
adcl
out
sahf
es
ret
add
cmp
sbb
mov
push
jbe
pop
jb
loopne
addb
xchg
or
jb
jmp
decl
jl
cmp
xor
rclb
xor
xchg
inc
mov
xchg
add
xchg
and
dec
in
push
push
push
adc
jecxz
push
lahf
xor
push
jb
mov
test
pusha
test
inc
ljmp
adc
pop
rolb
call
leave
jl
pop
idivb
shrl
cmp
jg
mov
push
flds
push
test
cmp
xchg
mov
pop
jbe
fstpl
pop
adc
aaa
xchg
mov
xor
int3
jne
pushf
test
inc
cmp
loope
or
pushf
or
mov
pop
leave
pop
insb
or
mov
mov
int
xchg
xor
inc
cmp
cmp
mov
scas
or
shl
xchg
es
sbb
mov
xor
xchg
ds
jne
arpl
cmpl
int
mov
or
mov
mov
shr
add
sbb
fisubrl
push
shll
aaa
bound
popa
clc
movzwl
dec
gs
mov
and
pop
or
in
dec
add
cmp
aas
push
ficoms
daa
pop
pop
pop
dec
add
in
imul
inc
push
add
mov
popf
cmp
les
sub
ds
insl
inc
scas
cmp
mov
ret
push
and
push
fdivrs
popa
mov
dec
mov
leave
nop
stc
xchg
dec
call
es
push
cli
leave
andb
cmp
pop
shl
inc
insl
ret
sbb
in
cltd
xor
fwait
push
or
lea
arpl
sahf
or
test
mov
sti
dec
inc
inc
stos
and
stc
ret
hlt
sbb
cmp
mov
jnp
stos
cli
adcb
xchg
jne
daa
scas
js
push
add
int3
ficomps
pop
adc
clc
fs
adc
out
mov
nop
pop
cmpsl
pop
pop
cmp
mov
xchg
sub
out
outsb
enter
push
dec
into
sub
add
ja
jp
bound
mov
cli
add
cmpsl
jns
lods
imul
jbe
push
xchg
test
dec
mov
jp
pop
shll
xchg
ret
jns
aad
mov
adc
rclb
xor
mov
call
shlb
inc
movsl
push
pop
fstps
in
jne
mov
repz
fwait
test
and
ret
out
adc
pop
nop
dec
stos
mov
repz
xchg
jo
pop
jb
gs
cmpsb
xchg
mov
aaa
into
jno
ja
ds
push
je
push
dec
mov
mov
xchg
xchg
dec
push
lock
aas
mov
xchg
dec
sbbb
vpsubsb
outsl
pusha
fistl
test
idivb
mov
push
icebp
mov
cltd
push
add
int
hlt
push
ss
stc
daa
into
les
pop
ja
sahf
sbb
in
mov
loope
pop
pushl
add
jg
xacquire
lock
leave
testb
push
jmp
enter
cs
das
ret
jl
or
sbb
ja
jne
push
push
lods
cmp
jbe
ror
or
pop
movsb
loope
or
or
ret
pop
insb
fstpl
xchg
lret
jae
test
push
fs
inc
sar
ret
scas
mov
in
ljmp
test
sub
or
or
xchg
sbb
cli
gs
sub
enter
sbb
leave
mov
jne
mov
out
and
inc
inc
pop
lret
gs
std
js
add
add
add
les
pop
js
bound
push
sbb
repz
das
mov
out
adc
clc
jns
sbb
mov
and
call
lahf
das
add
inc
gs
mov
adc
inc
lods
movsb
pop
cmp
scas
sarb
add
and
inc
mov
fldcw
into
jg
testl
dec
pushf
xor
andl
pop
xchg
adc
aad
push
or
jae
daa
sub
scas
pop
out
popf
pop
pop
repz
fisubl
mov
sub
sbbb
xor
cmp
jnp
pop
mov
ret
les
mov
inc
pop
mov
xor
mov
pop
cltd
enter
insb
adcb
int
fstpt
jmp
std
mov
push
insl
push
mov
neg
imulb
int
sub
add
mov
out
mov
mov
dec
fsubs
les
jns
lcall
and
rcll
dec
push
mov
insl
mov
pop
addl
fldl
push
mov
inc
dec
and
push
xlat
push
repz
pushl
sub
adc
movl
add
xchg
mov
pushf
mov
into
outsl
mov
pop
dec
cmp
pop
shlb
stc
push
sub
or
cmp
cld
das
xchg
mov
je
leave
lret
jle
push
cmpsb
data16
sbb
mov
out
xchg
ja
xor
lds
push
ljmp
jb
inc
ja
xchg
ljmp
into
mov
sub
gs
into
call
mov
mov
daa
pop
dec
stos
xor
pop
ficompl
adcl
mov
sahf
ss
ss
cli
das
mov
dec
push
cmp
xor
sarb
add
cld
cmpsl
fldcw
and
jno
mov
iret
lods
inc
pop
inc
rcl
jle
and
orb
aas
stos
inc
mov
loopne
pop
adc
lods
ljmp
popf
xor
jns
adc
push
or
fnstcw
fisttpll
mov
dec
inc
jle
mov
pop
enter
das
shl
movb
dec
in
pop
into
fimull
insb
add
mov
sti
outsb
jp
and
clc
adc
lret
pop
hlt
cld
jae
mov
mov
adc
or
xchg
test
push
loope
test
add
xor
scas
shll
aas
mov
mov
xchg
ss
lahf
ss
mov
mov
adc
shlb
orb
mov
cmc
into
ja
cmp
cwtl
push
lock
sub
aas
pop
js
push
and
jl
push
insl
inc
push
ss
ficomps
jl
adc
push
push
xchg
and
cmc
insb
dec
int3
and
fsub
dec
or
dec
dec
sbb
aas
icebp
jecxz
mov
xor
pop
push
xchg
std
test
mov
xor
fxch
cmpw
loopne
scas
call
pop
pop
pop
loop
imul
xor
insb
hlt
into
bound
mov
dec
cmp
out
shr
jge
loop
and
je
fsubrs
insl
aam
pop
in
pop
mov
mov
inc
add
cmp
xorl
sub
dec
pop
ds
xor
fbstp
push
pop
mov
dec
push
or
pop
cmp
lret
ret
sbb
mov
mov
mov
cmp
inc
scas
add
scas
andb
lcall
lods
mov
shrb
fiaddl
lds
nop
test
call
lods
leave
push
mov
in
sub
sbb
les
mov
mov
and
pop
mov
inc
cltd
sbb
out
mov
loopne
push
adc
dec
int
fidivs
in
test
insl
enter
mov
sti
out
sub
sbb
pop
push
sub
divl
out
scas
sbb
cmpsb
jl
pushf
cltd
in
cmp
mov
fnstsw
dec
jg
push
push
xchg
scas
ret
iret
inc
jo
jno
ret
or
in
add
pushl
cmp
dec
daa
test
sarb
rcrl
jbe
outsb
dec
mov
into
cld
sub
outsl
daa
mov
call
pop
shr
inc
xchg
push
clc
ret
jl
mov
sbbl
pop
mov
adc
fsubrp
mov
sbb
ss
xor
pop
in
add
pushf
jo
jbe
mov
mov
sub
filds
xlat
add
cmpsl
jg
mov
adc
inc
xlat
xor
dec
sub
jecxz
sbb
or
fwait
sti
adc
lods
pushl
push
jbe
syscall
adc
out
sbb
aas
call
lahf
gs
sarb
jle
cwtl
nop
pop
push
mov
out
popa
jb
xchg
sbb
enter
xor
sub
roll
pop
loopne
fwait
sub
cmpsb
in
out
out
or
out
mov
jmp
call
mov
jno
xchg
sti
flds
mov
cmp
push
outsb
lods
test
xor
mov
aas
mov
je
les
and
dec
or
cmp
mov
jecxz
sbb
outsl
adc
and
mov
sub
aas
lret
shl
and
rclb
inc
mov
aam
pop
xchg
aad
pop
pusha
cmp
inc
inc
cmp
sbb
in
mov
imul
repz
inc
fwait
stos
mov
xor
inc
sbb
or
stos
std
stc
push
or
mov
rorb
dec
aad
in
leave
aas
mov
ds
sub
cmp
ret
lds
int
cs
rcl
sub
jno
push
xchg
push
jmp
cmp
xor
pop
ja
outsb
xor
jmp
xchg
jnp
sub
and
sub
test
fwait
mov
ss
mov
fdivrl
aaa
lea
xchg
dec
adc
pop
mov
push
lahf
xor
mov
aad
or
insb
mov
mov
arpl
xor
bound
in
loope
add
in
dec
movsl
loopne
inc
idivb
dec
iret
adc
pop
sarb
push
pop
pop
fidivl
push
mov
mov
aaa
mov
dec
mov
add
sbb
in
xor
jno
fisubrl
out
push
popf
or
dec
dec
cmp
rcll
shll
shl
jmp
add
inc
inc
lods
inc
in
jb
and
pushf
jb
jp
pop
sub
cs
pop
pop
sub
das
mov
test
mov
inc
jns
mov
xor
jmp
dec
sbb
sub
out
repz
scas
xorb
rclb
jo
adc
inc
fs
dec
fistpll
call
outsb
xor
mov
test
gs
and
jns
ret
add
push
or
jg
test
jbe
les
mov
xchg
cltd
jo
out
cs
sbb
adc
pop
jno
cmp
addr16
cmpsl
push
andl
pop
mov
repz
jae
dec
adc
cmp
rclb
sub
int
mov
mov
lods
stos
enter
pop
jmp
leave
dec
ds
adc
sub
sub
and
sub
and
push
pushf
in
icebp
aas
or
xlat
pop
xorl
lock
mov
into
jae
cmp
nop
mov
scas
xor
mov
xor
add
iret
push
fiaddl
es
push
scas
stos
sbb
fiaddl
mov
stos
push
cmp
in
pop
xchg
or
mov
in
cmpsl
inc
data16
outsb
ficoml
das
jbe
lret
stos
cmc
test
mov
pop
sub
sbb
aaa
inc
in
lock
popa
add
push
jne
loop
inc
adc
mov
out
push
fiadds
lret
insl
in
xor
incb
movsb
sbbb
dec
lods
fwait
iret
mov
stos
ret
add
in
jp
cli
dec
faddp
je
mov
cmp
outsl
pop
shrb
andl
fwait
stc
fwait
pop
repz
das
fdiv
jmp
and
sbb
push
cmp
mov
movsb
inc
loopne
mov
outsb
test
sub
into
fucom
jmp
push
fmuls
les
push
pop
inc
loop
cmp
mov
xchg
fs
jne
icebp
mov
add
aaa
and
int
fnstsw
loope
jge
ljmp
jno
pusha
push
mov
mov
js
jmp
pop
rorl
mov
in
xor
adc
ss
jecxz
fs
test
cmp
mov
sub
ljmp
ss
cmp
rcll
cmc
out
push
sbb
jnp
push
and
sub
retw
sti
mov
mov
jecxz
js
xchg
add
xchg
xchg
dec
mov
mov
bound
and
push
and
xchg
and
cmc
movsb
add
imul
pusha
pop
ja
loope
out
test
cmp
mov
insb
or
cmc
ds
xor
adc
dec
sbb
rorl
hlt
mov
in
mov
cmpsl
cmpsb
dec
inc
incl
adc
dec
mov
jmp
dec
adc
jnp
fwait
cld
ja
mov
icebp
push
clc
jge
scas
xor
xchg
add
std
push
out
mov
cmc
pop
dec
mov
cmpsb
jle
js
rclb
outsl
xchg
xor
aad
call
pop
hlt
outsl
dec
sbb
xchg
cmpsl
jnp
xorb
jnp
xchg
adc
add
jbe
xor
movb
mov
cmp
sbb
loop
lea
push
cmp
sub
xor
test
push
or
imul
outsb
pop
out
push
fsubs
leave
inc
hlt
adc
test
hlt
dec
jecxz
ljmp
aas
or
aaa
and
pop
push
pop
dec
add
xor
enter
leave
and
mov
add
push
xchg
xor
dec
loope
dec
cmp
add
xchg
adc
inc
bound
add
add
rclb
xchg
test
jb
mov
popa
loop
adc
sbb
push
push
lock
xor
mov
iret
or
and
cmp
jnp
ret
aas
dec
inc
std
std
push
iret
mov
xchg
mov
hlt
es
lods
insl
sub
lahf
sahf
outsb
scas
mov
pop
add
xor
mov
stc
insb
fwait
es
pop
push
cmpb
mov
dec
idivl
iret
sub
add
test
pusha
ss
int3
data16
xchg
or
add
sub
shlb
jge
mov
pushf
cmp
lods
cmp
es
jne
pop
jae
jb
and
push
jmp
xor
pusha
div
mov
pop
in
sti
xchg
in
movsb
sbb
and
push
lods
fcoms
ret
mov
adc
dec
sub
mov
test
leave
xchg
pusha
push
lret
lds
dec
add
leave
stos
cmp
sbb
mov
xor
aaa
into
pop
and
push
dec
jge
movsl
ret
pop
xchg
adc
imul
mov
xchg
insb
ror
pushf
mov
mov
mov
and
outsl
dec
loope
or
testb
addb
clc
jge
js
and
lock
test
mov
insb
aaa
shlb
xor
inc
pushf
mov
shrl
sub
outsb
enter
jo
sub
xor
adcb
xchg
xchg
sbb
jo,pt
in
jecxz
ret
nop
cmp
shl
push
fidivl
fnsave
cli
mov
adc
fistpl
sbb
pop
sub
xor
ljmp
and
loopne
inc
lods
inc
ja
inc
mov
adc
cli
adc
test
xor
sbb
ret
bound
sbb
subl
push
add
jo
aas
pop
dec
rolb
xchg
dec
dec
out
cwtl
xor
cmp
sahf
jecxz
jbe
stos
sub
shl
inc
insb
ja
xlat
insl
or
mov
mov
int
sub
nop
mov
mov
stc
or
and
xor
sbb
mov
lds
pop
xor
add
xor
sub
iret
popf
mov
andl
sub
ret
mov
pop
nop
mov
mov
jle
push
and
arpl
jmp
or
leave
push
add
sbb
imul
sbbb
aad
jmp
xchg
mov
xchg
and
sbb
pop
inc
out
andb
mov
cs
inc
jns
sbb
fdivrl
lcall
push
out
mov
adc
popf
pop
popf
int
ficompl
pop
test
int3
mov
fld
test
aas
pop
adc
stos
dec
lock
loop
add
push
jne
push
lahf
cwtl
fisubrs
xor
cli
outsb
movsb
jno
nop
insl
fsub
lret
or
xlat
add
jmp
clc
sub
mov
clc
adc
loop
popa
xor
pop
mov
xor
push
stc
psadbw
sub
xchg
ds
nop
xor
xchg
add
jecxz
shlb
imulb
mov
push
sbb
inc
fcmovnbe
das
cli
jbe
xor
jmp
or
adc
push
cmp
fisubrs
fmull
pop
insb
mulb
aaa
sub
cwtl
scas
mov
loope
mov
push
pop
mov
sub
jecxz
jg
sub
dec
inc
inc
iret
add
ret
repz
dec
in
cmpsb
movb
mov
or
and
pop
mov
push
dec
sbb
mov
or
add
mov
js
pop
dec
mov
je
out
push
add
jmp
in
fwait
rorl
lea
test
xor
fimull
rcl
faddp
jecxz
push
daa
inc
inc
add
in
mov
or
adc
or
pop
stos
out
jle
int3
ds
fwait
out
sbb
push
ret
es
pushw
int
cmp
sahf
in
test
push
stos
inc
dec
and
leave
inc
xchg
sti
fcmovnb
stc
mov
aam
shll
vcvtsd2si
nop
loop
sbb
dec
cmc
gs
and
stos
push
lret
idivb
out
dec
push
std
xchg
mov
adc
scas
cmpsb
pop
addb
cwtl
pusha
mov
cmp
lahf
add
loop
cmp
jnp
mov
test
movsb
sub
bound
rcrl
incb
test
sti
or
cmpsl
bound
loope
loope
ds
pop
sbb
mov
lret
rcrb
add
xor
jnp
cld
lods
push
inc
pushf
adc
popa
stos
dec
add
testl
adc
fwait
aad
push
pop
notl
cmp
out
mov
jl
mov
lcall
movsl
sahf
fsubs
test
xor
mov
out
sbb
loope
cmovae
and
or
bound
and
mov
inc
pop
ja
fcomp
push
xchg
mov
shl
sub
inc
push
add
pop
test
lret
inc
inc
jp
dec
add
sbb
inc
xlat
ret
sbb
add
mov
cli
data16
dec
pop
imul
insb
sub
stc
popf
movsl
loopne
jb
xchg
aaa
cmc
lret
bound
mov
movd
int3
mov
adc
inc
xchg
shlb
arpl
scas
js
jae
add
mov
das
lods
into
loop
sbb
mov
pop
js
xor
pop
loop
les
xor
test
arpl
icebp
cmp
jb
iret
inc
pop
mov
mov
in
in
cmp
inc
fnstenv
repz
xor
mov
mov
addr16
push
shll
gs
test
arpl
cmp
test
inc
aad
add
cmp
adc
fwait
sti
pusha
lret
aas
jne
je
inc
loop
xchg
subl
and
lahf
lret
adc
out
pop
loope
inc
push
je
sub
int
inc
das
add
fs
or
sarb
lahf
dec
mov
fwait
and
out
dec
xchg
call
jge
jmp
sahf
and
ret
xchg
in
jl
pop
pop
push
jge
mov
cmp
orl
mov
mov
andl
lods
push
pop
rep
jne
cmp
cmp
insl
mov
sbbb
and
sti
addr16
inc
pop
lahf
jno
or
test
in
jge
mov
imulb
sarb
fdivrl
cmpsb
aas
into
in
lcall
in
jmp
xlat
sbb
pop
or
adc
fdivl
das
mov
xchg
jmp
xor
or
jbe
or
mov
jae
sbb
ja
out
repnz
dec
leave
xor
sub
popa
adc
jae
sbb
fs
mov
inc
fistl
decb
pop
addr16
test
subl
dec
loop
ret
outsl
cli
sbb
push
dec
mov
mov
push
inc
arpl
dec
ds
and
and
in
cmp
ret
sub
lods
jmp
rol
subl
clc
push
or
sbb
push
adc
test
pop
dec
aad
mov
push
pop
cmp
inc
pop
mov
faddp
ss
or
cmpsl
mov
xchg
nop
add
mov
push
mov
in
dec
xchg
mov
cltd
loope
sahf
repz
and
subb
loopne
scas
jnp
test
xor
mov
inc
dec
dec
mov
mov
shlb
xorl
jnp
pop
inc
xor
outsl
dec
pop
cs
fadd
fmull
pusha
pop
mov
daa
lahf
xor
jmp
inc
fildl
xor
out
adc
sbb
movsl
add
sti
ljmp
in
jb
jmp
xchg
xchg
cmp
pushf
jb
lea
pop
xchg
adc
int
or
ror
dec
loop
sub
xchg
cmpsl
push
aam
leave
sbb
xchg
push
orl
or
icebp
cld
mov
xchg
dec
jno
jns
insl
add
lcall
dec
pop
xchg
xor
lock
dec
je
and
dec
data16
cmp
or
sbb
pop
push
jge
sub
loopne
std
cltd
jo
fmul
sahf
push
inc
push
enter
rcr
add
insb
xor
sahf
pop
nop
jmp
cmp
fldl
xor
mov
and
pushf
bound
and
lods
jb
inc
add
cld
xchg
mov
lcallw
xchg
rclb
sub
dec
lds
mov
cld
xor
cmpxchg
shlb
jnp
jge
setl
xchg
xlat
or
sbb
cmp
cmp
xchg
ds
daa
insb
out
cmp
int3
into
mov
jmp
jecxz
rcrl
sub
lds
ja
out
mov
pushf
jae
mov
nop
lret
lcall
push
and
ja
xor
sarl
bnd
cmp
jge
xchg
cmp
cmp
test
movsl
sahf
dec
aam
jg
stc
mov
dec
dec
fcoml
pop
insb
sahf
mov
jnp
out
lods
mov
jno
aad
fwait
pop
xchg
adc
jl
pop
sub
inc
fdivl
clc
sahf
repz
pop
aaa
enter
push
fstpl
and
sbb
push
xor
inc
popa
outsl
inc
jnp
rorl
pop
xor
xor
cmpsl
enter
cmc
xchg
push
push
jo
mov
jmp
repz
inc
push
and
fwait
xchg
call
pop
ret
jno
dec
xor
jle,pn
aad
mov
adc
mov
enter
mov
call
bound
outsb
add
add
add
xchg
or
push
sub
inc
sub
xchg
mov
arpl
cmpsb
xchg
lea
sub
lds
stos
inc
cmp
sbb
addl
shlb
mov
cld
sub
sbbb
ja
push
addr16
jecxz
mov
insb
add
sbb
lahf
inc
jne
jmp
xor
ljmp
lods
cmp
loopne
cmp
adc
repnz
xchg
aas
or
negb
and
fwait
sub
fistpl
scas
or
rcll
sub
mov
jmp
dec
bound
insl
sbb
stos
dec
push
jno
enter
test
add
pop
dec
les
jge
pop
scas
dec
dec
mov
loop,pn
negl
es
and
rcrb
or
cltd
push
mov
sub
ror
jp
push
loop
insb
in
pop
jl
mov
pusha
sti
nop
pop
sbb
pop
lahf
es
mov
pop
outsl
add
aaa
into
call
nop
dec
xchg
shrl
int3
push
icebp
pop
je
xchg
mov
or
ret
add
sub
push
xchg
fdivl
jb
jo
arpl
pushf
pushf
jmp
cmpsb
hlt
movsl
xor
cld
or
loopne
mov
data16
insl
test
fildl
popf
or
scas
cmp
sbb
fcoml
ret
fisubl
mov
test
mov
push
adc
filds
mov
cmpsb
mov
jg
push
lret
add
data16
push
pop
out
rorl
mov
mov
xchg
pop
call
pop
cs
jle
mov
je
in
pop
das
fildl
mov
insl
cli
mov
cmp
inc
pop
les
jne
xchg
and
sub
pop
inc
mov
fmull
sahf
loope
pop
jae
or
test
mov
sbbb
orl
jg
cmp
sbb
insb
adc
sahf
jecxz
int3
iret
fwait
aas
decb
gs
shr
inc
mov
mov
sub
mov
pushf
mov
xchg
xor
lcall
sub
fsubrs
cmc
push
pushf
xor
fldt
sti
fwait
xorb
mov
jp
adc
call
pop
mulb
sbb
je
lods
stos
xlat
push
addb
jge
cmp
dec
push
jmp
dec
fidivs
push
imul
adc
mov
loope
arpl
cmpsb
sbb
push
sub
sub
mov
insb
inc
stos
inc
xor
jnp
sbbb
aam
rcl
push
in
call
ja
movsl
jns
es
cwtl
sahf
jns
dec
outsb
cmp
push
imul
xlat
cvttps2pi
aad
mov
sar
mov
pop
xchg
pop
fucomip
mov
daa
lcall
adc
movsb
mov
mov
add
mov
xchg
ljmp
and
pop
popa
push
mov
jb
pop
push
cli
xchg
sti
xchg
mov
dec
adc
or
scas
test
nop
shl
gs
jns
add
lods
fists
or
testb
enter
out
cmp
fsubrs
ljmp
pop
ljmp
neg
lock
pop
xor
movsl
mov
and
or
jmp
jne
ror
and
or
mov
jno
sbb
int3
adc
push
mov
dec
and
lock
lods
repnz
pop
dec
arpl
mov
push
movsl
or
add
pop
imul
loopne
push
adc
int3
or
and
lcall
sbb
popa
adcl
xlat
scas
roll
sub
mov
mov
mov
ss
out
adc
jge
dec
and
test
lcall
and
jo
inc
out
push
push
jmp
das
in
push
aad
cmp
jge
fcoml
and
rorl
mov
pusha
or
lods
cmp
jb
fsubs
push
cltd
mov
inc
fsubrs
pop
mov
jg
sbb
clc
test
cltd
in
xchg
adcl
hlt
inc
sub
cmpb
mov
loopne
fstl
pop
dec
dec
mov
push
out
fnstsw
push
add
add
cmp
cld
sarb
ficompl
jnp
sub
inc
or
or
dec
cli
mov
in
test
push
popa
mov
popa
or
loop
lods
sub
sbb
xor
mov
test
xlat
sub
insl
test
test
lds
in
pop
xor
pop
add
enter
mov
rorl
mov
and
mov
mov
in
push
sbb
adc
add
mov
pop
insl
jb
sti
mov
pushf
loopne
out
rorl
jge
mov
mov
addr16
pop
xchg
ljmp
xor
aas
xor
outsl
jecxz
daa
cmp
data16
cmp
or
lcall
mov
jbe
sahf
sub
icebp
inc
subb
lcall
sbb
scas
jecxz
pop
inc
xchg
out
out
les
or
xor
pop
test
jge
addr16
stc
jo
add
dec
push
adc
movb
fwait
repz
insl
ret
add
dec
enter
test
iret
sbb
push
cld
pop
scas
ss
and
pop
xor
mov
mov
aad
scas
clc
xchg
mov
sub
pop
add
test
jo
mov
imul
insb
mov
lods
cmp
call
push
idivb
decb
mov
cli
test
sub
outsl
or
cmc
andb
add
xor
and
lock
cltd
mov
pop
ret
call
movntq
pop
ja
or
sbb
and
clc
push
dec
int3
test
and
pop
or
call
cmp
jmp
outsb
mov
xor
inc
mov
or
jmp
js
cltd
std
in
aas
push
inc
add
jl
leave
pop
mov
jno
mov
push
adc
dec
insb
inc
andl
mov
nop
lret
jae
rorl
mov
lahf
sub
push
test
pop
test
out
addl
jmp
jbe
push
mov
adc
pop
push
mov
int
mov
dec
push
mov
mov
lock
fdivl
repz
pop
jmp
mov
mov
or
cmp
sbb
mov
and
imul
add
outsl
mov
ds
fsub
adc
sbb
aaa
mov
stos
loopne
iret
pop
loope
mov
jbe
icebp
out
mov
or
dec
popf
addl
imul
mov
addl
mov
adc
mov
aad
in
push
mov
fldcw
lock
sbb
mov
aaa
and
xchg
add
jmp
rcrb
js
cmp
fidivrs
mov
cld
imul
jge
mov
inc
xlat
pop
fidivrs
jo
stos
add
in
pop
shl
dec
fwait
pushf
aad
sub
dec
adc
outsl
aad
ljmp
jno
sub
add
push
test
repnz
pop
lret
add
ja
das
add
pop
ret
jns
stos
and
mov
fisubs
fldenv
dec
jns
out
lahf
push
shr
es
insb
ss
dec
mov
sub
add
into
rcrl
repnz
mov
mov
loope
pop
adc
xor
jge
add
mov
cli
sbb
mov
hlt
adc
lock
movsb
inc
jo
xchg
ss
push
shrb
add
mov
push
mov
inc
pop
rcrl
leave
gs
rcr
mov
sarb
mov
out
sahf
sub
mov
pop
jecxz
out
xchg
enter
mov
fildll
push
xchg
sub
inc
into
cmpsl
sti
jne
ja
sbb
push
repnz
xchg
ss
pusha
insb
imul
faddp
pop
pop
popf
dec
movsb
sbb
sub
add
iret
pop
popf
sarb
pusha
movsb
mov
mov
xchg
into
mov
popf
or
add
xchg
mov
mov
ja
pop
rol
pop
jp
negl
mov
faddl
xor
nop
mov
shll
clc
mov
and
clc
push
push
shrl
sbb
adc
ret
mov
or
jle
jae
xchg
out
jmp
nop
adc
or
es
and
push
lret
push
inc
adc
adc
mov
inc
outsb
subl
les
jmp
sahf
dec
cmp
imul
sar
xchg
and
ffree
pop
cmc
inc
mov
cmc
push
jecxz
imul
incl
xchg
inc
in
push
pop
add
lea
lods
jae
xor
adc
leave
or
andl
jnp
rorb
lock
fisttpl
add
cmovbe
sbbl
jmp
or
scas
mov
lcall
das
loop
adc
add
xor
clc
adc
mov
lea
or
les
lock
pop
mov
mov
mov
cs
pop
push
and
cwtl
cmp
xchg
clc
xchg
sbb
xor
cli
sbb
xor
xchg
hlt
gs
xchg
add
sub
daa
clc
cmp
add
addb
js
in
cltd
sbb
pop
lret
mov
out
fists
mov
dec
addr16
je,pn
or
test
dec
call
test
aad
data16
es
mov
fs
pop
cli
inc
loopne
cmp
inc
out
movsl
neg
xor
leave
loope
nop
outsl
hlt
xchg
and
pop
xor
or
mov
push
and
lds
mov
ret
dec
dec
arpl
and
ds
xor
lock
sbbb
add
push
mov
andb
adc
inc
scas
cmp
ja
fistpll
sti
inc
scas
inc
jns
pop
outsb
pop
xorl
divb
pop
push
jae
mov
aad
dec
lret
sbb
scas
add
loope
ja
or
arpl
filds
in
mov
push
insl
add
dec
clc
adc
stos
jl
sbb
inc
jp
clc
mov
loop
mov
or
push
mov
pop
loope
or
out
mov
fnstsw
das
jbe
je
stc
int3
pop
fbld
adc
sbbl
movsb
fldz
mov
imulb
push
add
pop
push
mov
stc
xor
lock
cmp
lret
daa
in
push
and
add
nop
in
ss
xor
lea
mov
cmp
cmp
mov
xchg
out
pop
sbb
sub
mov
les
out
test
movsb
mov
cmpsb
and
cld
clc
mov
pop
aaa
push
in
adc
mov
imul
out
cmp
addb
insl
and
les
add
sub
outsb
sub
out
xor
repz
cmp
sub
stos
dec
iret
push
or
push
adc
out
test
scas
hlt
jp
lods
mov
outsb
sub
xchg
pop
mov
lods
test
sbb
aaa
iret
push
pop
dec
sbb
add
cmpsb
sbb
sarl
imul
add
test
adc
xor
mov
inc
pop
cmp
mov
adc
and
pop
cmp
mov
aaa
mov
gs
add
outsl
sub
mov
push
out
insb
lret
lods
xor
or
imul
out
aas
shlb
sub
out
pop
icebp
cmpsb
lea
sahf
mov
dec
pop
ljmp
sarb
pop
loopne
xchg
int3
fmulp
stos
out
lock
test
pop
xorl
and
lcall
mov
sti
std
or
mov
mov
aas
lods
push
inc
mov
popf
ss
jns
sbb
push
cmp
mov
ds
push
fidivs
shrl
pop
sarb
clc
hlt
enter
movsl
sbb
cmpsb
xchg
in
mov
xor
lret
nop
out
and
sbb
inc
iret
iret
out
ja
push
cmp
rorl
cmp
push
mov
mov
sbb
lock
mov
mov
scas
xchg
jmp
adc
imull
jnp
sub
lahf
jg
xchg
lods
xchg
pop
cmp
icebp
into
pusha
pop
mov
shll
add
rcll
insl
out
mov
mov
iret
and
cmpsb
mov
inc
std
jge
mov
movsb
sub
add
out
push
orb
outsb
mov
mov
popf
pop
pushf
lret
push
and
mov
add
add
jo
add
add
aad
loope
out
gs
rorb
pushf
jmp
xchg
push
loope
fdivrl
jae
loop
je
xchg
and
mov
daa
stos
ss
icebp
stc
add
dec
sub
add
push
call
adc
sbb
stos
inc
push
pop
sub
bound
fbld
sbb
lods
push
in
push
jmp
push
sbb
sbb
cwtl
in
dec
and
inc
gs
jne
lret
cmpb
and
dec
lock
nop
sbb
and
clc
mov
and
dec
mov
inc
loopne
fcompl
adc
sbb
jo
xor
arpl
and
icebp
xchg
lahf
jmp
lock
dec
cmp
lahf
outsb
outsb
imul
cmpsb
mov
xchg
mov
adc
mov
fsubrl
pop
jmp
test
dec
pop
or
xchg
das
sti
sub
push
fsubr
pushf
add
mov
or
lcall
mov
js
nop
adc
jo
imul
or
sbb
inc
dec
mov
dec
lock
mov
pop
loop
jmp
and
mov
inc
mov
clc
leave
jmp
mov
cmpsb
movl
lods
addr16
cmp
pop
mov
iret
bound
pop
pop
mov
add
arpl
js
and
cmc
inc
mov
movsb
inc
pop
nop
lea
xchg
or
jge
test
and
xchg
add
xchg
pop
xbegin
mov
sbb
rcrl
add
jle
leave
fdivs
xchg
sub
ds
inc
stos
mov
lds
add
rcrl
adc
jae
mov
sbb
mov
jge
daa
movsb
adc
fiaddl
in
adc
sub
add
out
fnstcw
cmp
js
push
arpl
out
cwtl
lahf
jmp
pop
xchg
call
fdivrs
push
mov
scas
mov
int3
stos
cmp
call
add
mov
sub
imul
pop
ds
and
dec
push
lods
sub
lahf
mov
xchg
mull
lods
mov
gs
addb
xchg
sub
into
jnp
shrl
lret
mov
jo
pop
dec
in
or
mov
pop
mov
fwait
sub
lds
push
dec
cltd
es
or
fs
jnp
mov
cltd
or
vrsqrtps
leave
sbb
jl
add
push
xchg
scas
out
sbb
add
mov
je
lahf
xor
les
or
sub
aas
dec
dec
outsb
inc
xor
ret
pop
test
push
sub
sub
cmp
push
xor
test
mov
pusha
not
push
xchg
xchg
repz
and
inc
nop
push
out
shrb
orb
jno
cli
lcall
pop
and
and
jb
test
mov
scas
xor
cwtl
cmpsl
shl
mov
adc
jae
pop
outsb
pop
mov
mov
pusha
add
xor
mov
cmp
xchg
xor
xchg
cli
xchg
enter
int
sbb
scas
sub
pop
lahf
inc
iret
xchg
xchg
adc
out
and
xchg
sbb
std
pop
jecxz
xchg
ret
pop
int
sbb
xchg
pop
rolb
mov
xlat
jo
bound
xor
movsl
shl
inc
test
fimull
pop
dec
mulb
push
popf
mov
ret
sti
int3
cltd
mov
xchg
clc
and
xchg
mov
cld
fistps
hlt
add
jmp
testb
js
xlat
ss
xchg
jecxz
mov
lea
cltd
mov
adc
jae
mov
cmp
loopne
mov
sub
xchg
jmp
adc
sahf
ss
mov
add
cli
pushf
arpl
cltd
sub
in
mov
outsl
lods
inc
pop
push
xchg
sub
rclb
lods
ror
stc
rorb
ds
dec
filds
push
loop
or
sahf
push
mov
mov
fidivs
adc
adcb
inc
xchg
flds
sahf
sbbb
push
xchg
arpl
add
out
mov
imul
add
adc
mov
imul
pop
xchg
lret
mov
imul
pop
xchg
xchg
sub
sarl
les
fwait
xor
xchg
repz
rorb
rcrl
pusha
inc
xchg
not
or
xor
jne
in
sbb
iret
inc
fdivrl
addr16
push
rcr
jo
iret
pop
mov
sbbl
lret
ror
les
les
into
gs
flds
int3
dec
out
push
mov
lahf
outsl
fst
insb
sarl
mov
add
into
jae
pop
out
xlat
cmpsl
xchg
pop
inc
jo
xor
out
jb
push
popf
aad
mov
sbb
add
adc
test
xchg
rep
cmp
add
incb
adc
xchg
dec
pop
iret
int
sar
sahf
push
mov
cmpl
iret
int3
sar
and
xor
in
fcompl
xor
cmp
jge
push
push
nop
ficomps
dec
fidivl
and
pop
incb
mov
leave
mov
int
push
dec
aam
popf
ret
clc
mov
inc
fdivl
clc
push
out
mov
push
stos
ds
jne
jg
mov
push
cltd
gs
test
dec
shrb
lret
loope
cmp
mov
icebp
aas
or
sub
pop
adc
sbb
sub
jbe
jns
call
or
loopne
fdivrl
cld
pop
and
push
xorb
popa
lods
out
mov
cmpsb
mov
xchg
addl
icebp
inc
in
outsb
inc
mov
cmc
inc
call
or
test
movsb
jne
call
mov
stos
loope
sub
mov
cli
ljmp
mov
outsb
sub
sub
xchg
xor
fstpt
dec
iret
adc
mov
fs
mov
arpl
dec
or
push
pop
adc
mov
test
sahf
repz
ja
pop
nop
add
out
ret
lret
ret
jmp
mov
outsb
es
scas
test
test
mov
jge
test
or
and
jae
cmp
or
mov
andl
or
icebp
mov
jl
or
xor
aam
jl
pop
pop
xchg
jg
int
in
gs
xor
jg
insl
mov
ds
fstps
add
movsl
icebp
ss
ficoms
inc
in
mov
xor
jno
pop
and
dec
inc
mov
shl
inc
hlt
sub
adc
in
iret
jnp
repnz
sub
sbb
es
inc
pop
hlt
in
call
cmpsl
ret
dec
or
add
les
leave
gs
lcall
out
xchg
call
movsl
dec
outsl
xor
inc
fwait
or
lgs
jbe
fsubr
push
or
mov
pop
in
fs
add
addr16
arpl
mov
shrl
push
outsl
sahf
mov
cwtl
jl,pt
mov
and
fisubrl
scas
sbb
hlt
mov
jbe
jbe
popa
add
lds
mov
jb
ret
insb
sub
pushf
ja
push
xlat
shrb
adc
mov
lahf
pushf
inc
js
aaa
stos
arpl
adc
fimuls
not
push
sahf
pop
xchg
int
inc
jb
add
push
jle
sub
cmp
mulb
ret
add
pop
call
pushf
push
insl
fsubrl
mov
sub
xor
xchg
outsb
mov
mov
cmp
pop
in
iret
je
testb
outsl
mov
sub
dec
stos
sub
mov
adc
aas
sbb
in
jns
fsub
mov
test
mov
cld
fsubl
fwait
iret
lret
icebp
jbe
int
fidivl
das
xchg
outsb
insb
jno
ret
add
repnz
jg
int
jp
shlb
push
lret
add
pop
sbb
jge
test
xchg
cmpsb
adc
ret
xlat
pop
ljmp
pusha
jo
out
cmp
notb
sbb
jne
test
push
inc
jmp
cmp
std
notb
mov
ds
in
sbb
movsb
imul
ljmp
jne
ret
bound
adc
jo,pn
adc
xchg
push
rcrb
push
mov
fs
aad
sbb
pop
inc
aaa
xchg
repnz
ljmp
jae
sbb
out
into
adc
jge
lret
cmp
ds
sub
sti
movsl
mov
test
leave
push
xor
nop
xchg
repnz
sub
sti
clc
dec
imul
hlt
sbb
fwait
xchg
dec
jp
jp
push
jmp
xchg
jo
xchg
sub
sbb
mov
xchg
jmp
out
mov
js
sub
pop
inc
push
jns
jecxz
mov
roll
inc
push
js
lret
insb
leave
fs
stc
lods
stos
jmp
pusha
outsl
mov
fwait
jne
xchg
push
jmp
push
mov
mov
icebp
xlat
adc
pop
xorl
or
jns
pushf
push
mov
stos
lret
mov
loop
call
repnz
cmp
iret
out
or
cld
jl
jne
sbb
dec
pop
pop
sti
inc
mov
stos
out
aam
out
cmpl
sti
addr16
jno
or
push
mov
mov
enter
mov
push
sbb
jo
repz
test
vpsrad
std
scas
mov
pop
xchg
mov
ret
jg
push
insl
outsl
rorb
push
mov
sub
pop
pop
js
sub
sub
cli
add
xor
shll
jo
pusha
sub
lret
es
cmp
lods
testb
jg
das
cmp
sub
loop
dec
push
and
sub
nop
cmc
mov
push
sub
jae
cltd
and
leave
fsub
idivl
mov
test
daa
std
push
daa
add
sbbb
in
ljmp
fdivrs
push
or
xchg
mov
xchg
sti
je
int
insl
add
test
data16
jnp
xor
dec
cmpsl
or
pop
mov
mov
add
daa
cmpsb
push
arpl
popa
loope
xchg
xchg
divb
push
push
out
mov
xor
rol
sub
mov
ds
ds
inc
fsincos
xor
loope
dec
xor
rcrl
and
nop
imul
jge
mov
xor
fiaddl
fsubrs
pop
dec
lcall
popf
jmp
add
jecxz
sbb
mov
imul
xchg
jge
or
or
sbb
lret
inc
mov
inc
dec
mov
adc
enter
ss
add
popf
orl
cmp
out
pusha
dec
mov
pop
mov
into
add
pop
cld
adc
jle
xchg
loopne
shl
jle
jecxz
sbb
scas
imul
push
pop
test
lods
lea
cmp
jecxz
adc
lcall
push
or
out
xchg
sbb
push
jae
jl
inc
daa
sbb
xor
ret
and
cli
jecxz
cmpsb
adc
adc
popf
mov
dec
test
xchg
popf
idiv
sarl
test
in
xchg
scas
jo
sbbl
je
push
add
fiadds
xchg
sub
cmc
mov
iret
pop
pop
cmp
es
stos
inc
add
cmp
push
stos
jne
pop
aaa
jno
adc
outsl
stos
add
mov
push
add
test
or
leave
xor
push
stc
jb
push
jl
push
imul
sub
mov
add
stc
nop
push
cmc
das
lret
mov
insl
push
sbb
adc
mov
decb
stos
jp
xchg
movlps
leave
mov
sarb
adc
xchg
js
dec
mov
rcrb
mov
sub
in
inc
inc
mov
repz
mov
sbb
push
dec
es
cmp
insb
push
dec
lea
push
mov
pop
icebp
aad
mov
push
pop
and
push
jge
js
xchg
lods
inc
imul
lret
or
std
jnp,pn
mull
stos
movsl
mov
or
int
cli
mov
xor
xchg
mov
sahf
push
and
int3
cmp
imul
cmp
mov
call
add
mov
rol
scas
adc
xor
std
imul
mov
xor
xchg
cli
pop
repnz
mov
lods
and
lahf
push
dec
addl
inc
xor
cli
inc
pop
dec
and
leave
insb
xor
in
jae
mov
add
mov
arpl
lock
pop
pop
in
repnz
imul
mov
jne
mov
out
aad
mov
pop
out
scas
or
popf
cmpsl
outsb
and
add
scas
clc
pusha
ljmp
mov
into
scas
insb
adc
jge
mov
add
das
jmp
add
sbb
movsl
js
pop
pop
sub
xor
adc
push
push
add
xor
sub
mov
sbb
aaa
andl
nop
push
in
ret
push
xchg
inc
xor
pop
std
scas
popa
out
xchg
repz
sub
pop
fistpll
fildll
cmp
test
sub
iret
xchg
or
lods
adcb
cmc
into
fwait
aaa
pop
test
push
ja
pop
test
enter
dec
fildl
cmp
int3
mov
aad
stos
pop
adc
mov
fldt
out
mov
mov
jb
pop
jo
push
push
push
push
and
jbe
shrl
je
mov
mov
cwtl
push
aaa
iret
arpl
adc
sbb
add
and
dec
addb
test
adc
dec
cmpsb
jmp
imulb
xor
inc
lds
pop
repz
pop
add
jp
inc
mov
xchg
movsl
dec
js
mov
add
xor
rol
push
loop
sbb
lahf
inc
mov
or
add
xchg
pop
bound
inc
cld
sahf
mov
lock
dec
sbb
roll
dec
iret
cmpsb
daa
cmp
push
stc
and
cmp
ret
arpl
das
jg
pusha
int3
insl
jmp
sahf
ss
add
mov
loopne
add
pop
imul
jo
in
mov
dec
dec
and
lods
xchg
pop
mov
dec
xor
adc
jecxz
and
add
call
fbstp
inc
je
mov
pushf
pop
and
jecxz
mov
les
insb
fldt
fcomps
or
xchg
pop
push
jns
push
jge
pushf
mov
stc
lret
xchg
sahf
push
xor
mov
xor
push
movsl
mov
lock
cltd
fsubrs
int
sbb
lods
jo
dec
mov
into
adc
add
jns
cwtl
inc
inc
add
ja
sub
icebp
or
pop
aam
movsb
cld
decb
into
out
fwait
pop
stc
or
jge
cli
cmp
out
add
mov
xor
add
xor
sbb
push
mov
pop
cs
ss
cwtl
mov
pop
outsl
ss
push
dec
jg
jg
jne
into
dec
test
idivl
adc
pop
mov
jne
inc
shll
outsl
or
push
cwtl
push
fcomps
es
mov
fwait
cld
lcall
je
inc
shrb
shrl
or
cld
repnz
mov
fsubrp
xor
fwait
call
cmp
test
stos
inc
leave
cs
loopne
add
loope
inc
adc
lcall
adc
cmp
ds
sbb
cmp
inc
add
iret
popfw
jle
loop
aaa
in
add
sahf
jo
ficoms
sti
cmp
cmpb
shll
outsl
imull
cmovle
inc
aad
je
out
insb
das
dec
inc
repz
add
pop
outsl
dec
push
iret
repnz
mov
mov
adc
addr16
or
fistl
jp
test
in
ljmp
cli
inc
std
or
imul
mov
inc
daa
mov
aas
jno
mov
jmp
push
icebp
enter
addr16
pop
inc
mov
jae
in
cmp
lods
mov
sar
adc
loop
nop
cmp
call
ss
ret
pop
ss
pop
or
inc
fwait
shll
gs
sbb
bound
outsl
test
inc
push
cltd
lds
adc
arpl
shll
bound
mov
push
adc
sbb
push
inc
lret
sub
ljmp
pusha
call
mov
inc
pop
out
jno
mov
jae
outsb
mov
mov
ret
cmpsb
jno
xor
sbb
mov
repnz
mov
stos
xor
push
adc
int
and
sbb
outsb
inc
lock
pop
pop
cmp
inc
sub
andb
out
sub
sub
xchg
sbb
inc
pop
dec
cli
sub
cld
push
cmp
imul
xchg
cmpsb
mov
jge
fsubl
flds
fsubs
mov
xchg
mov
fwait
js,pn
xchg
lea
dec
lds
sub
mul
insl
les
dec
cmpsb
pop
jnp
mov
xor
jbe
clc
xor
leave
mov
fnstsw
imulb
shrb
pop
jnp
dec
add
ss
mov
adc
insl
iret
mul
pop
fisttps
lods
or
add
outsb
mov
pop
fwait
lcall
ret
shrb
ficomps
lods
jg
mov
pushf
arpl
mov
inc
call
xchg
push
mov
subl
std
daa
xchg
or
jle
jle
dec
pop
cmpsb
dec
sarl
rcrb
xchg
imul
add
call
push
scas
xchg
xor
cwtl
sub
movsl
pop
lret
adc
jl
clc
jno
cmp
scas
mov
mulb
inc
adc
lock
and
xchg
push
dec
mov
jno
cmp
mov
insb
in
iret
loope
dec
lret
xlat
movsl
mov
inc
mov
mov
jecxz
dec
enter
subl
push
add
int3
mov
cmp
fcoms
lahf
popf
add
shl
mov
adc
loop
in
push
push
bound
dec
mov
push
aam
ss
mov
das
add
and
outsl
stos
mov
shll
jne
pop
mov
je
mov
jg
shrb
nop
push
out
rol
sub
repnz
call
pop
in
inc
jecxz
cli
lods
sub
push
jg
inc
arpl
imul
add
lcall
mov
inc
aaa
movsb
je
decl
or
fnsave
or
mov
imul
sub
mov
push
jl
and
sahf
rolb
mov
push
sahf
gs
xchg
push
arpl
inc
ss
adc
push
mov
fisubrl
rcrl
sub
and
push
addr16
shl
inc
sbb
js
iret
and
pop
popa
push
pop
enter
insl
xor
pop
jecxz
or
arpl
dec
mov
fnsave
sbb
jne
stos
jmp
and
fs
xchg
mov
icebp
push
imul
jae
or
in
cmp
lea
jb
xor
xchg
gs
mov
pop
stc
pop
addr16
lock
loope
mov
iret
inc
lret
mov
xor
pop
cmp
popf
xchg
cmpsl
into
mov
out
test
jg
and
divb
lds
add
mov
pop
and
mov
loope
push
inc
cmp
mov
addr16
shrl
adc
in
cmpsb
xor
lcall
adc
addr16
jp
inc
insl
mov
sbb
lcall
xchg
jmp
mov
mov
sbb
xchg
dec
xchg
mov
xor
adc
mov
pop
addr16
mov
stos
and
imul
bound
sbb
adc
dec
idivl
pusha
fisttps
lahf
push
mov
mov
aaa
pop
test
cmpl
pop
movsl
sti
pushf
inc
repnz
sbb
pusha
inc
sarb
data16
cmpsl
sub
jecxz
mov
or
jge
jl
ljmp
dec
das
push
insb
sub
mov
pushf
inc
jmp
xor
aad
mov
dec
dec
loopne
pop
call
xchg
mov
push
insl
jbe
outsl
je
dec
mov
cltd
push
aam
add
je
fistpll
mov
invd
or
adc
adcb
adc
hlt
ret
lcall
fwait
shr
iret
jle
dec
mov
add
call
xchg
or
or
push
pop
push
test
adc
mov
into
adc
push
inc
out
or
or
mov
outsb
mov
addr16
rorb
add
lcall
sub
pop
pop
xor
pusha
adc
out
xor
imul
fiaddl
ret
in
mov
shll
xor
inc
repz
cli
push
mov
movsl
rorl
push
test
mov
inc
mov
xchg
mov
add
cwtl
das
clc
xlat
mov
dec
dec
sub
loopne
adc
inc
inc
pusha
subl
dec
outsl
jl
repnz
sahf
testb
cmc
mov
cmc
and
or
sub
mov
lret
adcb
lahf
roll
and
jne
xchg
xor
out
fcoms
in
push
mov
adc
bnd
jp
push
fildl
pop
mov
fcmovnbe
sub
stc
pop
mov
mov
fwait
mov
lea
fdivl
adc
jg
dec
dec
dec
mov
outsb
push
xchg
and
push
lret
pop
in
es
imul
ret
in
cmp
out
sarb
xchg
dec
dec
pop
je
stos
xchg
mov
adc
pop
fwait
ret
pop
leave
sbb
ja
jmp
dec
or
gs
jmp
adc
pop
xchg
call
mov
xchg
pop
rclb
leave
mov
xchg
js
jae
xchg
cmc
fwait
mov
out
xor
mov
xchg
aad
incb
hlt
mov
es
mov
push
xchg
inc
xorb
and
out
cmp
subb
lods
ret
pop
or
mov
bound
sbb
into
and
pop
hlt
pop
sub
jp
xor
enter
jbe
clc
push
jbe
shlb
dec
xchg
add
jb
mov
add
mov
jne
repnz
jmp
fisubrl
push
sahf
pusha
rcl
out
andl
push
aaa
xor
shlb
shlb
call
int
pop
cmpsl
fisttps
mov
sbb
lcall
pop
cwtl
hlt
add
stos
jnp
ret
daa
jbe
cmp
out
cmp
pop
mov
mov
aaa
icebp
xchg
mov
xchg
ja
cmp
mov
push
mov
xchg
outsb
jbe
push
add
jne
adc
mov
xchg
ss
inc
push
scas
jb
fcomps
mov
mov
lock
xchg
or
sub
stc
mov
out
jmp
lcall
adc
pop
dec
pop
mov
adc
dec
pusha
and
daa
ror
add
sbb
gs
xor
sub
xchg
sti
push
mov
popf
fnstcw
jmp
cmp
push
ret
and
nop
das
adc
lret
mov
lret
out
mov
xorl
sbb
out
sbb
xor
ds
lds
roll
mov
clc
test
xor
xor
inc
cmpsl
out
jbe
and
iret
popa
sbb
nop
mov
sbb
imul
xor
lret
xor
rclb
mov
mov
jne
jecxz
jnp
inc
mov
xchg
xor
add
or
push
ficompl
sub
popf
sub
shrl
out
shl
outsb
and
pop
dec
mov
mov
mov
sub
mov
xor
mov
mov
aaa
pop
aas
xchg
mov
inc
pop
pop
stos
add
loopne
sub
rcrb
jns
cmp
mov
in
sub
ljmp
mov
xchg
movsb
test
stos
sub
and
ja
cmp
pop
ret
cld
lcall
jne
fmull
ds
adc
insb
into
xor
sahf
pop
xchg
aas
xchg
pop
cmc
add
dec
mov
xor
aad
sub
or
mov
arpl
push
xor
bound
jnp
mov
or
xor
add
test
xlat
mov
out
push
ficomps
mov
jmp
pusha
punpckhdq
sbb
aas
dec
insb
sbb
jns
xchg
inc
cltd
out
roll
aad
mov
and
or
xor
mov
and
loop
popa
push
mov
dec
mov
mov
push
push
call
xor
pop
repnz
scas
pop
jmp
xor
je
test
xor
fmull
insb
add
jb
push
mov
lds
and
mov
adc
imull
das
lahf
call
pop
in
aas
dec
loopne
push
sti
and
fimull
test
mov
fsubrl
gs
pop
adc
iret
insb
rol
call
or
aam
adc
pop
jmp
pusha
jle
push
mov
stos
ss
sbb
fs
cld
iret
jbe
jl
in
movsl
and
das
cmp
cmp
and
sbb
scas
push
stos
push
adc
movb
jl
xor
or
mov
lahf
hlt
push
leave
and
fstpl
add
mov
cmpsl
xor
iret
sub
notb
mov
orb
fnstenv
mov
popf
jae
ds
subl
addl
push
pop
mov
out
dec
in
lea
sub
ret
testl
inc
dec
fmul
jmp
inc
push
inc
fbstp
dec
mov
mov
sahf
dec
push
lahf
ss
jns
pop
aas
test
adc
mov
das
mov
popf
adc
mov
adcb
psubw
push
and
lods
inc
iret
mov
dec
aad
icebp
fisttps
cmc
adc
out
add
ds
xor
mov
mov
jb
cld
icebp
or
mov
push
jmp
mov
add
ja
and
and
clc
or
gs
xor
and
loope
dec
inc
sbb
int
cwtl
dec
mov
or
adc
jo
js
je
fldenv
adc
jb
rcl
mov
mov
adc
push
sbb
ljmp
sub
repz
cmp
inc
mov
add
nop
push
sbb
and
mov
sub
mov
and
add
jb
xchg
jno
xchg
jge
add
mov
and
in
pop
incl
mov
mov
rcr
popa
add
jl
jbe
test
rolb
scas
out
in
xchg
mov
or
jnp
inc
mov
in
stos
es
or
or
sub
push
sbb
push
nop
repnz
and
xchg
mov
jp
and
push
mov
leave
in
cltd
xchg
stos
xchg
rorb
adc
jns
dec
dec
mov
push
add
daa
xchg
add
inc
inc
leave
fldl
leave
adc
add
and
gs
mov
or
insl
sub
dec
xchg
mov
mov
iret
test
je
jg
pop
cltd
cs
mov
jle
lret
cmp
scas
mov
jbe
adc
sub
in
cs
insl
jno
jne
addl
sub
or
inc
jl
xchg
xchg
mov
into
jo
clc
lret
cltd
je
or
mov
out
sub
sbb
or
faddl
decb
fbld
sar
xor
test
and
cmp
pop
dec
adc
js
sbb
xlat
loop
push
pop
add
adc
adc
sbbl
mov
add
insb
dec
aad
stc
mov
xchg
cmp
push
cmp
or
repnz
adc
ss
xchg
in
ss
std
mov
movsb
test
sbb
fcoms
pop
jbe
mov
mov
jp
stos
ja,pn
cmpsl
shll
js
add
popa
jns
inc
lret
sub
jo
jle
stc
insb
jg
movsl
xchg
cs
ret
call
dec
push
mov
sub
dec
cld
pop
mov
movsbl
add
add
bound
lcall
sbb
adc
dec
dec
mov
cmp
in
adc
pop
xlat
sbb
loopne
aad
lcall
or
jmp
sbb
sbb
mov
lcall
and
call
sbb
pop
movl
sbb
dec
scas
andl
jne
jb
stos
fcomps
inc
cmc
mov
jno
inc
fiaddl
enter
mov
mov
xchg
mov
incl
outsl
and
subb
fsub
xchg
jno
mov
repz
out
movsl
jns
pop
fidivrs
loope
cmp
dec
push
fsubr
jns
imul
pop
mov
pop
push
stos
repnz
daa
in
mov
sbb
sub
movsb
pop
mov
dec
push
movsb
shlb
mov
cmp
fwait
js
mov
mov
cmp
int3
xchg
xor
jl
das
mov
mov
jne
inc
xor
cmp
sub
jmp
pop
mov
ffree
dec
sbb
pop
out
pop
je
adc
into
data16
mov
int3
int
in
arpl
shrl
xchg
daa
xchg
lods
xchg
je
std
lea
mov
repnz
popa
xlat
mov
and
adc
add
loope
outsb
test
movsl
ljmp
insl
cmp
fstl
je
ja
jo
adc
jno
enter
out
das
into
xor
ljmp
ljmp
jb
inc
ret
jmp
inc
ja
jae
adc
xchg
fistl
cwtl
loopne
jno
push
push
popf
cmp
xchg
sbb
mov
je
out
in
inc
adc
cwtl
sub
sub
and
and
sbb
sbb
dec
jp
jl
cmp
movsl
lahf
loop
std
dec
outsb
rorl
shrl
inc
cmp
icebp
mov
jmp
push
loope
xor
in
xchg
jnp
mov
mov
adc
ret
jmp
daa
inc
mov
es
dec
push
out
ret
in
pop
icebp
fdivp
sbb
sub
stc
or
lock
pop
cmc
and
pop
inc
sbb
insb
dec
sti
stos
dec
mov
cltd
inc
lret
shll
xor
lods
scas
push
pop
pop
sbb
int3
iret
pop
ljmp
pushf
test
mov
xchg
push
fucomip
int
inc
jno
pop
sub
mov
jl
ret
or
xor
negb
xor
inc
push
dec
sbb
adc
data16
cs
mov
xchg
pop
dec
cwtl
mov
mov
leave
insb
sarl
fildl
cmpb
sti
inc
adc
mov
and
shl
addr16
mov
jns
fucomip
lock
mull
sub
sub
repnz
test
lds
mov
or
cld
push
movsb
push
dec
xchg
stc
mov
lret
jecxz
pop
dec
loopne
ss
fucom
cmp
adc
or
lds
jge
fwait
dec
inc
cmc
mov
mov
ficoms
xchg
jbe
mov
outsb
hlt
push
adc
xchg
imul
fwait
add
mov
stos
mov
pop
aaa
jg
bound
push
aad
dec
push
sbb
jb
xor
mov
inc
repz
or
scas
aam
push
or
dec
pop
shlb
arpl
ds
repnz
out
xor
pop
and
xorl
insb
mov
pop
in
mov
jns
sub
inc
popf
out
xchg
fiadds
dec
jmp
push
xchg
cmp
cld
stos
inc
mov
xchg
dec
cmpsl
call
loope,pt
in
add
sub
mov
mov
xorl
or
push
xchg
scas
sbb
rolb
add
out
pop
outsb
not
inc
sbb
sub
sbb
cmp
lea
mov
add
and
push
cwtl
push
lret
sbb
ljmp
jl
leave
fcomps
mov
out
sbb
outsl
dec
jmp
pop
outsb
sbb
mov
bound
pop
scas
mov
imul
lods
xor
pop
ficompl
sub
test
mulb
jecxz
pusha
mov
pop
sti
push
mov
dec
sub
and
jns
pop
subb
lcall
lods
sbb
cmp
jb
jmp
rcll
sbb
push
inc
mov
jl
test
sbb
pop
xchg
popf
jp
std
add
in
push
xor
cltd
cmp
jns
push
jae
xor
repz
jo
push
push
shl
cmp
in
and
cmc
aaa
cmp
sub
shlb
dec
push
std
push
imul
xchg
mov
aas
icebp
mov
inc
push
pop
jmp
add
sahf
dec
pop
inc
iret
fwait
xor
cmpsb
enter
out
cltd
dec
movsb
lea
std
xchg
repz
push
inc
loop
sub
dec
mov
imul
mov
or
lahf
pusha
push
in
mov
arpl
orb
adc
push
mov
push
repnz
cwtl
add
aad
pop
pop
jge
pop
std
je
in
lds
jmp
xlat
xor
les
ret
xchg
jge
dec
loop
out
fmuls
scas
fldt
adc
push
inc
sbb
fldt
mov
xchg
insb
stos
outsl
jnp
lea
and
imul
arpl
adc
shll
stos
loope
ficoml
int3
add
lods
and
fwait
push
mov
sub
cmp
mov
or
ja
jmp
shrl
bound
dec
dec
std
loopne
xchg
lock
and
push
mov
iret
aad
outsb
and
mov
jae
lds
xchg
inc
fimuls
int
jmp
adc
adc
lcall
and
mov
dec
jp
xor
pop
jle
and
jecxz
pusha
jnp
mov
outsb
rcrb
test
std
and
ja
xchg
sbb
popa
mov
sbb
in
pop
dec
lea
adc
sahf
mov
icebp
adc
pop
sub
push
insl
cmpb
xchg
fsubrl
mov
out
clc
mov
mov
in
xlat
outsb
push
pop
mov
outsb
add
jbe
pop
and
loop
mov
lret
or
out
mov
fwait
nop
and
out
adc
jp
sub
xor
das
into
roll
sarl
pop
stos
movsb
dec
repz
xchg
inc
adc
cmp
loopne
int
popf
jp
icebp
push
push
fwait
and
jl
lret
adc
cmpsb
sti
int3
mov
jle
xor
cmp
repnz
cltd
pop
cmpsl
xchg
imul
pop
fisubrl
adc
hlt
int3
shll
cmpsl
sub
pop
adc
gs
xor
jae
test
mov
jp
sbb
movsl
mov
negl
sub
daa
dec
push
and
imul
outsl
ss
into
lret
cmp
push
jge
fcoms
test
fs
ja
xchg
test
rclb
test
les
sub
movsl
gs
xchg
or
rcll
xor
cmpsl
outsl
rcl
mov
lret
xchg
push
pop
std
inc
or
pop
addb
aad
mov
sub
arpl
add
out
test
add
cmpsb
lea
inc
in
add
inc
out
popa
repnz
cmp
call
icebp
sbb
icebp
sbb
js,pt
stos
sahf
xor
test
aam
test
ja
jecxz
ds
jle
in
push
pop
adc
ja
mov
and
imul
adc
imul
test
ljmp
inc
adc
inc
adc
adc
lret
jnp
cltd
add
sti
or
adc
leave
std
mov
inc
adc
je
add
or
jne
les
add
fldenv
fildl
iret
xchg
mov
adc
sbb
pushf
and
and
dec
in
cld
movsl
dec
cmp
mov
xchg
xchg
adc
xor
push
jnp
jb
adc
mov
leave
fcomps
ds
imull
in
push
add
xchg
xlat
scas
sarb
sub
test
mov
fs
pop
push
and
mov
jae
inc
push
fistps
pusha
and
stc
fs
enter
dec
out
rcrb
outsl
fwait
or
loopne
mov
xor
or
xor
xchg
ljmp
pop
imul
xchg
mov
adc
dec
ss
cmp
sbb
in
call
mov
std
scas
dec
loopne
push
repnz
xor
xor
fs
inc
xlat
fs
sub
jb
out
mov
popf
fs
cmp
lahf
pusha
mov
popa
repz
fmuls
inc
cmp
por
jl
xor
xchg
aad
lcall
mov
xchg
pop
gs
mov
setae
and
mov
lahf
lock
pop
push
js
pop
push
mov
idivb
adc
push
js
sub
jl
cmpsb
push
add
or
pop
sti
sbb
sub
outsb
fwait
mov
push
adc
lds
mov
add
jecxz
testl
dec
add
mov
in
sub
sub
in
outsl
in
insl
aam
ret
push
xor
mov
lahf
or
popa
mov
cmp
and
push
adc
jbe
mov
ds
dec
lods
not
repnz
mov
and
xchg
fstl
jle
movsl
mov
ds
cmpsb
xchg
cmc
das
xor
lahf
dec
repz
pop
ljmp
out
insl
add
mov
pop
out
in
jmp
add
aad
roll
lock
addr16
movsl
mov
jp
stos
ds
fimull
cmp
adc
mov
ret
repz
dec
in
cmp
stos
test
sub
ror
fwait
dec
mov
pop
lds
test
mov
push
fsubs
mov
jmp
mov
pop
dec
inc
out
cld
imul
pop
add
dec
sub
int3
arpl
dec
clc
xchg
in
jne
push
lret
add
push
mov
call
outsb
sub
es
sub
daa
push
xchg
repnz
mov
cmp
xor
frstor
ss
pcmpgtw
inc
mov
loopne
pusha
fwait
dec
lret
addr16
imul
fidivl
ret
psadbw
push
out
lcall
inc
nop
and
loope
out
xchg
in
add
mov
stos
inc
and
xor
cmc
push
insb
pop
dec
and
dec
ds
lock
mov
sbb
lret
jle
xchg
test
jecxz
mov
xor
xor
shlb
dec
aas
arpl
pop
mov
fstps
icebp
shrl
scas
xor
add
jp
xchg
jmp
jne
jo
mov
push
in
divb
and
insl
xor
mov
lret
scas
in
jmp
xorl
je
xchg
das
xchg
add
cwtl
data16
cli
rolb
pop
mov
sbb
es
jg
mov
lods
jo
add
fcomi
jne
loopne
inc
cs
shll
push
jmp
xchg
test
xor
push
fmuls
push
push
ljmp
pop
pusha
mov
loopne
pop
jge
sti
cltd
pop
add
cld
leave
call
push
pop
fsubr
lret
sbb
int
das
movsl
leave
in
int
jmp
sub
mov
and
xchg
cmp
xor
pop
fdivp
add
cmpsb
cmp
mov
insl
in
adc
mov
xor
push
pop
cmp
pop
dec
in
dec
stos
fidivrl
dec
dec
clc
mov
bound
dec
and
jmp
jb
addr16
jmp
push
stc
adc
sbb
stos
leave
push
out
sti
sbb
push
ret
push
dec
push
push
inc
add
stc
mov
ljmp
push
xchg
adc
jp
sub
sbb
dec
jne
lea
gs
imull
mov
dec
jns
mov
push
dec
inc
cmpsl
mov
inc
or
jge
sub
xor
jg
lahf
scas
mov
xchg
cmp
addr16
xlat
outsb
dec
in
test
lahf
rclb
jle
scas
inc
gs
out
mov
fst
mov
out
and
inc
add
push
jno
add
stc
dec
inc
imul
outsl
daa
into
dec
repnz
mov
shr
scas
pop
es
je
lret
data16
adc
xchg
js
add
data16
arpl
xchg
cs
and
mov
or
sbb
out
cmpsl
lds
insl
add
push
repnz
cld
aad
stos
sbb
aas
scas
enter
insl
xchg
adc
mov
fs
push
scas
and
or
loope
or
jl
ja
mov
in
pop
mov
cld
cld
xchg
lcall
mov
xchg
pop
lret
shll
lret
cmp
iret
and
lahf
shrl
mov
jne
pop
mov
es
sahf
or
adc
lret
cmpsl
fst
adc
je
inc
pushw
es
or
cmp
xchg
sbb
fistps
sahf
sbb
sub
int
and
stc
dec
out
gs
sbb
fidivl
pushf
dec
in
xchg
clc
decl
insb
jl
outsb
xchg
push
lods
movsb
dec
or
dec
pop
pop
outsb
push
out
jg
sbb
xor
adc
cmp
xchg
test
cmp
cmpsb
and
out
add
int3
or
clc
ficoms
push
xor
repnz
mov
je
mov
or
flds
dec
out
ss
sub
jae
or
add
xchg
dec
and
out
leave
mov
ljmp
dec
je
scas
out
rcr
bound
add
int3
inc
call
push
into
pop
mov
loopne
jle
inc
sub
ljmp
cmc
mov
push
cmc
push
repnz
inc
add
cs
mov
lods
or
rolb
pushf
loop
pushf
mov
cmpsb
fnstenv
jns
mov
in
loop
and
std
xchg
ss
nop
scas
rcl
loop
or
fbld
ret
call
scas
popf
fs
das
push
and
mov
adc
adc
push
in
lock
es
dec
in
jp
in
lds
xor
int3
sbb
or
sub
fwait
jecxz
inc
cmp
dec
lahf
mov
lcall
or
dec
lods
sub
mov
mov
lret
mov
pushf
cs
jns
repz
inc
popf
and
dec
mov
movsl
test
lods
jnp
adc
bound
jbe
out
cs
movsl
mov
lock
arpl
jnp
jae
mov
adc
lea
push
imul
fstpt
fnstcw
pop
je
jmp
repnz
pop
jbe
cmp
pop
jbe
mov
or
pop
cld
push
call
es
outsl
push
addb
andl
cmp
popa
push
enter
xchg
ds
stos
pusha
in
mov
ret
mov
out
and
inc
pop
cmp
in
dec
mov
xor
movsl
mov
sbb
xor
push
xor
jmp
xlat
push
ss
inc
clc
dec
loopne
mov
loop
cmp
or
jp
fidivs
addr16
jmp
push
iret
cs
ljmp
jge
cbtw
imul
mov
jno
imul
clc
dec
rolb
shl
xchg
pop
int3
mov
pop
adc
xor
popa
adc
push
dec
ljmp
cmp
jecxz
mov
xchg
outsb
dec
mov
add
pop
mov
into
sub
push
xchg
push
cmp
mov
jbe
fsubs
je
lret
in
enter
push
push
cmpl
or
dec
xor
shrl
xchg
pop
inc
mov
jae
dec
adc
repnz
jo
daa
andb
insl
pop
in
ds
test
insb
fstpl
cltd
xchg
ljmp
cmp
pop
adc
dec
aam
pop
xchg
imul
mov
push
daa
jns
in
xchg
push
mov
jecxz
mov
je
shlb
test
enter
lret
sti
xchg
xchg
mov
cmp
movsl
shlb
mov
loope
jge
mov
adc
xchg
push
mov
dec
es
rcr
inc
mov
jge
xor
out
jno
fldcw
jmp
repz
lcall
inc
pop
sub
jno
sub
lea
pop
cmp
inc
jle
into
in
lods
outsb
pop
ret
xlat
xor
enter
jne
xchg
add
mov
out
mov
mov
imul
pop
daa
dec
cwtl
push
cld
shll
rcll
cltd
loop
cwtl
pop
xor
sbb
push
movsb
stos
mov
das
sbb
idivb
cwtl
stos
ja
cs
addl
inc
bound
add
mov
dec
stos
fsubrp
iret
pop
popf
mov
pop
outsl
outsl
xchg
push
xorl
inc
lea
push
psubusw
adc
cli
test
nop
fisubl
fidivs
fstl
mov
jno
mov
add
rcrb
dec
inc
xor
jne
call
jns
inc
adc
add
add
pop
insl
adc
loope
push
call
mov
sahf
out
lds
xchg
movsb
scas
add
sbb
push
jge
inc
xor
mov
and
inc
inc
sbb
xor
out
xchg
xchg
aaa
pop
adc
fimuls
jle
mov
test
xor
or
xchg
jns
test
xor
add
add
popf
stc
bound
notl
subb
mulb
jp
cmp
imul
mov
add
inc
sbb
adc
outsl
pushf
cmp
add
lods
fsubrl
cmpsl
push
jo
xor
inc
fisubs
arpl
jg
sbb
dec
adc
call
inc
cmp
mov
xlat
cmp
iret
movsl
sub
out
push
inc
lret
je
std
bound
loop
add
mov
rcrl
notb
xor
int3
or
in
test
xchg
lea
or
adc
jb
mov
mov
aad
add
bound
mov
pop
bndstx
mov
jne
lret
and
adc
pop
daa
test
pusha
les
and
jae
jns
adc
lock
lret
aam
mov
popf
xor
aaa
fbld
xchg
jb
xchg
pop
ljmp
cmp
cmp
fstps
fidivl
aad
mov
xor
lcall
jne
sbb
mov
scas
cltd
cli
or
jl
adc
leave
sahf
imul
std
pmaddwd
clc
shlb
sub
xchg
sub
jl
xor
cmpl
icebp
adc
cmp
iret
sbb
mov
mov
push
sbb
lret
mov
sub
leave
cs
jns
push
mov
dec
add
xor
repnz
in
mov
add
shlb
add
loopne
inc
xchg
cmp
call
js
jle
clc
cmpsb
aam
cmpsl
pop
arpl
pop
jns
rcrb
scas
lock
jp
icebp
adc
adc
jbe
enter
xchg
add
jge
lods
xor
cmp
stos
int3
sub
call
or
inc
iret
jnp
pop
insl
out
sbb
call
push
and
xor
mov
or
push
fwait
pop
add
shl
sti
mov
icebp
xchg
adc
fadd
sub
std
int
xor
jns
inc
mov
les
fwait
xchg
pusha
ja
adc
fldl
pop
addr16
loopne
dec
enter
mov
subl
jmp
or
mov
push
das
popa
ret
pop
xchg
dec
adc
sub
adc
pop
lds
mov
ss
scas
aas
call
cmp
mov
lods
mov
jbe
adc
and
jb
push
sub
inc
loope
xor
into
aas
jmp
or
xlat
cli
or
repz
and
or
pop
in
popf
movnti
add
mov
lahf
dec
inc
dec
cmp
in
sti
movsb
dec
shlb
mov
pop
inc
cli
inc
xchg
or
lea
xor
xchg
out
nop
daa
and
xor
rorb
mov
into
shrb
popa
repnz
sub
inc
xchg
es
mov
mov
jle
repnz
jecxz
fadd
mov
mov
fidivl
fcoms
mov
and
mov
add
lahf
mov
and
pop
pop
mov
mov
shlb
xchg
mov
cltd
ljmp
jno
xchg
insb
adcl
cmpl
cmp
mov
cmp
push
jns
fs
cmp
xor
and
push
xlat
leave
or
push
cltd
addr16
cli
push
loope
push
adc
mov
jno
test
mov
inc
sti
fisubs
inc
and
push
stos
jmp
cmp
fwait
mul
lods
cmpsb
mov
call
adcl
jg
xchg
add
ss
adc
dec
pop
movups
mov
arpl
mov
lret
pop
inc
stos
in
lcall
jb
xor
out
mov
pop
xchg
outsb
jge
outsl
pop
out
shr
sbb
xchg
mov
adc
adc
cmc
fwait
lods
adc
jg
jnp
fs
ljmp
les
jmp
xor
mov
testl
sub
arpl
cld
mov
movsl
inc
push
cmpsl
arpl
mov
push
fildl
je
pop
je
jle
cmp
sahf
dec
loope
sbb
popa
add
mov
dec
xchg
fsubr
imull
iret
js
cmp
das
sbb
cmc
push
icebp
mov
in
movups
ja
push
and
cs
hlt
gs
xor
std
scas
sub
test
jl
jle
mov
fwait
or
std
movl
mov
shll
push
cld
or
pop
cli
scas
sub
lret
xchg
mov
out
jo
push
dec
movsl
inc
add
pusha
sub
lret
and
mov
mov
shlb
cs
jl
lds
fldt
adc
fdiv
arpl
loop
cmp
cmpb
loopne
mov
ja
lret
orb
cmp
jecxz
inc
adc
int
sub
lcall
je
outsb
cmpsb
loopne
popf
or
cmc
cmp
dec
jo
mov
dec
mov
repz
inc
adc
cmp
sahf
jecxz
add
cmc
mov
adc
sarl
mov
addl
icebp
mov
jg
and
ss
leave
inc
mov
mov
or
insl
lahf
cltd
std
and
mov
ds
mov
fld
idivb
fadd
dec
xchg
std
stc
sub
aas
or
adc
xchg
jne
aam
cmp
jo
push
push
movsl
inc
add
lret
lods
and
in
dec
movsl
xchg
lahf
mov
add
outsb
push
push
scas
xor
or
pop
movsl
mov
jbe
xor
je
push
xchg
sub
xor
andl
pop
pop
addr16
jg
shlb
jo
xchg
sub
pop
loop
lahf
sbb
cmp
test
mov
mov
xchg
gs
push
icebp
sarl
mov
shr
dec
inc
les
fsubs
sub
pusha
or
cmp
or
inc
stos
rorl
pop
arpl
or
divl
sbb
shll
jae
push
les
adc
adc
mov
push
pusha
add
adc
iret
fsubr
popa
fisttpl
mov
daa
out
leave
out
lahf
mov
xlat
mov
enter
popf
mov
adc
orb
pop
xor
xchg
pop
icebp
lret
cwtl
dec
fs
gs
add
dec
das
ja
sub
xchg
daa
jne
addr16
mov
out
xor
mov
dec
push
aaa
mov
in
pop
mov
inc
xchg
mov
xrstor
xchg
dec
mov
or
cmc
nop
or
mulb
es
pop
outsl
fwait
push
incl
pop
dec
mov
dec
jae
sarb
mov
xchg
mov
sahf
subl
cmp
lret
aaa
loope
arpl
mov
enter
lahf
fs
popf
lock
je
loopne
cmp
mov
insl
test
es
cmp
jbe
xchg
dec
and
loopne
daa
idivb
sub
fldenv
sti
test
mov
mov
add
aas
inc
test
xor
dec
dec
adc
xorl
pop
jge
fsubrs
fsub
jle
mov
scas
push
ljmp
cmp
pop
incl
xchg
repnz
jo
repz
sub
fidivs
scas
jno
adc
pop
jge
cwtl
mov
pusha
push
jg
lcall
loope
cmc
push
lret
arpl
xchg
mov
cmp
ret
lahf
addr16
jl
mov
push
insb
mov
fstl
in
std
sbb
in
xchg
hlt
mov
imul
and
aad
mov
insl
shl
sbb
push
fdivrl
shlb
arpl
and
push
jmp
lret
ds
subb
push
or
clc
or
in
leave
pop
repz
outsb
addr16
popf
rorb
jl
or
push
ss
push
mov
inc
jns
mov
data16
out
cmpsl
jb
gs
andl
inc
dec
fistpll
ficompl
push
popf
mov
sbb
ja
in
xorl
mov
xor
add
nop
test
adc
movsl
cltd
andb
jg
rclb
mov
jecxz
xor
cmp
jae
sub
cmp
cmc
add
stos
pop
and
gs
adc
inc
mov
or
add
jae
sbb
pop
mov
movsb
fcomps
jmp
jmp
loope
lret
ss
movsl
sahf
mov
pop
adc
mov
sti
jmp
test
fs
lahf
fsubrp
add
mov
sbb
pop
jnp
ja
rcrl
in
jecxz
aad
dec
outsl
push
fildll
inc
cltd
lret
andb
dec
cmp
loope
adc
jne
es
arpl
out
lea
xchg
jl
mov
imul
sbb
mov
push
dec
and
fnstenvs
popf
xchg
loop
repz
jne
add
mov
lahf
ja
out
pushf
sbb
mov
in
mov
sbb
stos
fmull
cltd
mov
sarl
out
mov
cld
lods
jb
test
pop
sub
mov
ja
in
loop
mov
jb
inc
push
sti
inc
call
mov
mov
mov
std
dec
ljmp
dec
mov
mov
push
jo
cmp
roll
das
shl
scas
adc
cs
push
fldcw
aaa
int3
arpl
outsl
mov
add
ret
cmp
push
sub
stc
and
ret
loope
and
aaa
aam
sti
mov
xchg
jb
mov
cltd
inc
hlt
mov
es
fwait
sub
jle
aaa
pusha
lods
adc
out
sbb
pop
sub
js
loope
xchg
insl
stc
or
xchg
mov
leave
jecxz
sarb
add
outsb
ret
sbb
pop
cli
scas
xor
stos
pop
in
insl
and
inc
testb
stos
add
stos
mov
cmp
jbe
in
cli
aas
ficoml
cltd
stos
dec
mov
test
pusha
stos
std
leave
mov
lahf
cmp
add
js
xorl
push
int3
or
dec
mov
scas
hlt
mov
and
in
lcall
and
enter
lds
jmp
cmp
dec
and
jbe
pop
mov
sub
jbe
aaa
movsl
mov
add
xchg
inc
pushf
mov
andps
push
or
loopne
jnp
rol
loop
mov
sbb
ret
cmp
rcrl
scas
rcll
nop
out
je
push
stos
push
jb
lea
push
cmp
add
test
push
les
push
testb
out
cli
das
pop
gs
fwait
cmpsl
imul
and
sti
mov
sbb
lret
jns
mov
jge
jl
int
sbb
dec
out
imul
outsl
fisubrs
mov
bound
mov
push
lea
jnp
mov
xorl
shrb
mov
or
mov
js
into
pop
in
test
pop
je
inc
cld
incb
stos
inc
lret
ja
in
dec
ja
inc
pop
fnsave
dec
mov
and
cli
mov
out
add
movsb
gs
xor
inc
xchg
xchg
jmp
daa
lahf
adc
inc
dec
sbb
dec
lcall
jmp
xor
je
loope
xchg
cs
add
xor
xor
lock
push
add
cmpsl
shrl
and
sub
push
daa
adc
dec
inc
and
cmp
loop
hlt
adc
adc
inc
mov
mov
fstps
adc
adc
cmp
ret
dec
inc
pop
ret
pop
cmp
inc
cli
fadds
xor
sahf
bound
outsb
mov
dec
mov
popl
out
cld
ficomps
ss
stos
fiaddl
jnp
out
les
mov
cltd
mov
push
lcall
lods
mov
push
pusha
idivl
sub
lea
sub
scas
nop
mov
hlt
pop
enter
or
inc
mov
xchg
xor
jg
pushf
mov
xchg
in
lods
pop
mov
int3
mov
in
out
jae
mov
mov
mov
add
lods
push
inc
xchg
inc
adc
inc
push
pop
mov
fs
sbb
push
les
aaa
cmc
push
push
es
stos
mov
inc
push
imull
std
adc
test
or
std
or
push
and
popf
xor
lahf
jecxz
inc
sti
es
shl
int3
scas
cmp
sub
dec
pop
inc
leave
pop
cmp
xchg
dec
cmpb
mov
sub
movsb
jp
in
sub
jp
dec
sub
imul
or
adc
ljmp
aam
aas
lods
scas
jmp
add
outsl
shl
ficoms
ljmp
fsubrs
outsl
jns
mov
xchg
outsl
sub
movb
or
sub
aas
xchg
mov
shrl
mov
push
out
xor
dec
cmp
dec
aas
les
cmp
pop
movsb
bnd
xor
sub
and
fs
out
lods
loop
push
test
mov
xchg
mov
sub
daa
outsl
sar
iret
xor
pop
stos
aam
inc
mov
lods
das
test
push
mov
xlat
lea
push
in
outsb
imul
or
lret
jae
stc
bound
lahf
sub
scas
xor
loopne
popa
and
push
sbb
sbb
jg
add
bound
inc
push
outsl
mov
cmp
shr
dec
sbb
lds
sbb
dec
insl
gs
add
cmp
mov
lds
insb
cli
mov
sbb
xor
adc
movsb
filds
mov
stos
mov
dec
mov
js
shrb
sar
xor
mov
sub
push
movsb
xchg
test
push
sub
ret
ret
jbe
rcrl
jo
fisttpll
jb
or
stc
outsl
sbb
cmp
mov
into
stos
inc
add
push
call
pop
incl
or
mov
jb
cs
jnp
into
and
sahf
cs
xchg
sub
fs
dec
loopne
sbb
dec
dec
popa
loop
fdivp
ud1
mov
push
or
pop
jnp
jl
cmp
mov
mov
xchg
adc
add
subl
fdivr
dec
add
pushf
pop
sub
aaa
mov
push
sub
and
jecxz
ljmp
arpl
push
into
add
sbb
mov
data16
mov
and
sti
sub
ds
fwait
rcrb
adc
int3
cli
or
or
mov
aam
inc
mov
nop
jnp
in
sbbl
mov
adc
sub
in
jg
notb
stos
rolb
js
orl
cmc
cmpb
mov
mov
dec
idivl
call
and
shll
sbb
popf
addl
popa
jnp
int
ret
into
cs
das
pop
sub
jae
fisttpl
jb
aaa
ss
sbbl
pop
sahf
add
dec
jge
mov
add
jge
fucomp
lds
cmp
cmp
cmp
sbb
xchg
or
add
cltd
and
cmp
push
mov
aad
push
test
sub
push
fmuls
test
sbb
lahf
test
sarl
insb
scas
dec
jp
pop
in
in
mov
push
test
inc
push
cmp
inc
out
es
sub
xchg
out
push
mov
imul
aam
loope
call
sarl
mov
or
pusha
cmp
bound
loope
or
push
or
into
fnstenv
cltd
and
push
pushf
fldl
sub
mov
imul
out
rol
cmpsb
lds
push
jae
popf
xor
loope
jge
jb
cmp
fiaddl
mov
stos
adc
xor
or
movsl
lahf
outsl
jge
mov
xor
pop
ficompl
repz
lock
jl
mov
sbb
pop
cmp
mov
dec
sarb
test
sbb
test
sub
fistl
xor
mov
clc
inc
push
imul
xchg
lahf
push
xor
outsl
daa
dec
cmpsb
loopne
add
xchg
cmc
insb
call
mov
sub
neg
in
shlb
push
sarb
popa
lods
push
jb
sub
leave
scas
xchg
imul
mov
call
or
jno
jo
sub
pop
adc
loop
insl
dec
jg
jge
mov
loopne
es
cmpsb
imul
aam
int
movsb
movb
adc
loop
fwait
ljmp
popa
xlat
jl
shll
or
cmp
dec
popf
add
fisubs
pop
dec
add
insb
adc
in
mov
and
jbe
fs
sbb
mov
dec
jp
jge
in
lds
cltd
je
push
jno
mov
lret
lret
cli
stc
push
and
xlat
pop
sbb
cmp
mov
roll
out
jge
sub
ucomiss
pop
push
push
call
out
dec
ljmp
pop
loopne
pop
imul
movsl
out
insb
sub
pop
mov
inc
int
iret
sbb
or
mov
mov
fs
mov
cli
xchg
shll
rcll
outsl
push
shrl
rep
mov
push
mov
xor
test
pop
push
sbbl
mov
or
push
add
push
adc
xchg
iret
out
clc
add
mov
add
divb
cli
es
cmp
inc
cmc
outsl
xchg
pop
pop
pop
rcl
push
inc
push
jg
xor
inc
popa
adc
or
loope
les
push
iret
movsl
bound
fnstcw
mulb
dec
out
divl
jl
and
lea
push
movsb
xchg
mov
loopne
test
pop
lods
mov
xchg
xlat
mov
xor
nop
imul
je
outsl
mov
xor
xchg
leave
imul
push
loopne
sbb
int3
fwait
xor
out
jns
les
or
and
pop
test
mov
xor
sub
imul
in
xorb
mov
call
and
cmpb
mov
mov
and
dec
jge
cmp
sbb
mov
dec
jge
outsb
loope
sbb
les
jae
mov
aad
cmp
js
pusha
outsb
imul
sub
jb
sti
test
pop
lret
push
push
gs
sbb
add
lcall
ret
sbb
dec
repnz
pop
pop
cmp
xchg
repnz
adc
sbb
hlt
movsl
inc
andb
push
push
pop
outsl
enter
movsl
xchg
mov
pushf
popl
inc
jecxz
cmp
fwait
pop
dec
push
outsb
jmp
add
movsl
xor
stc
and
lea
into
cmp
mov
mov
pop
test
xor
lods
pusha
mov
pop
xchg
mov
xchg
add
int3
imul
and
xlat
sbb
in
in
mov
push
mov
andb
pop
or
mov
push
or
push
popa
test
in
movsl
xlat
insl
add
push
mov
mov
lret
data16
push
imul
and
test
mov
dec
es
inc
fs
into
cmp
lcall
fdivr
sar
jno
fcmovnu
imul
scas
imul
xchg
mov
mov
push
insl
mov
and
in
or
adcb
jecxz
jg
mov
rorl
test
or
fs
mov
push
sub
lds
inc
and
xchg
jge
jnp
sbb
test
push
push
dec
pop
or
xchg
jnp
mov
and
lock
add
mov
addl
ret
jns
es
inc
cwtl
repz
stos
mov
inc
jo
xchg
or
inc
mov
call
push
add
addl
repz
and
adcl
call
jge
inc
fwait
add
lret
je
jno
inc
aas
jb
push
inc
adc
mov
mov
and
js
fcompl
in
pushf
push
mov
lods
mov
inc
push
test
pop
ss
fidivl
es
push
out
or
pop
ss
movsl
cmp
adc
push
pop
les
fcom
shl
xor
fs
sbbb
inc
aam
out
xchg
xchg
inc
cmpsb
subl
lret
popf
daa
mov
jns
enter
shr
adc
into
dec
rcrb
and
decb
dec
xchg
lods
test
insb
leave
imull
js
xchg
lock
jp
xchg
add
lret
push
sbb
dec
dec
pop
testl
and
jno
cmp
inc
add
mov
stos
mov
fcomps
mov
mov
sub
jg
hlt
nop
pop
repz
xor
jae
jp
jo
jg
jno
xor
movsb
push
lret
dec
jno
es
sahf
icebp
aaa
sar
cmp
push
pop
jl
aad
push
test
out
fsub
add
xor
daa
mov
cld
pop
cmp
xchg
test
mov
xor
leave
push
cmpb
lds
int3
rorl
jge
mov
adc
enter
xlat
hlt
jo
mov
adc
jecxz
sbb
xchg
imulb
idivb
cmpsb
inc
cmp
addb
nop
enter
setnp
cmpsl
push
inc
mov
mov
pop
jle
xor
aas
add
mov
pop
lock
iret
jecxz
movsl
add
and
imul
lock
insb
add
cmp
int
and
lea
dec
test
out
and
dec
pop
xchg
sub
popa
leave
sub
lret
aam
mov
or
in
push
xor
arpl
imul
xchg
mov
dec
push
mov
push
test
dec
adc
enter
add
sbb
add
cmp
stos
jbe
loope
pop
mov
enter
loopne
es
int3
testb
jbe
jno
sub
scas
call
jbe
repz
out
jg
adc
xchg
sub
lea
add
add
xchg
mov
mov
mov
rcrb
xor
bound
ja
daa
data16
adcb
lcall
in
or
call
fdivr
mov
cmpsl
cmpsl
jb
sbb
dec
pop
mov
adc
jb
ds
xchg
in
loop
fists
sub
jp
in
es
xor
mov
push
push
cmp
insb
cmp
outsb
inc
shlb
and
add
testb
ljmp
dec
xchg
mov
xchg
aas
out
test
aad
cli
cli
ljmp
leave
or
jb
mov
lret
mov
cld
shlb
or
cmpsl
cmp
pop
xchg
pop
lret
xchg
jle
pop
insl
loopne
push
jg
sub
pusha
push
mov
lea
lods
mov
shrl
insl
ljmp
pushf
jo
xor
aad
adc
movsl
push
mov
rcr
mov
xor
xchg
jns
mov
mov
setg
add
sub
push
mov
mov
cmp
sbb
and
mov
popa
loop
and
imul
stos
fldl
daa
bnd
sbb
das
pop
inc
pop
and
inc
dec
fldenv
sub
sub
push
add
mov
test
ja
push
jg
cmp
lea
arpl
out
stos
test
sub
xor
mov
adc
and
ss
gs
jb
cltd
es
int
cmp
out
imul
sbb
fcmovbe
mov
lods
mov
scas
push
push
in
pusha
xchg
lret
lock
imul
xor
dec
in
nop
xchg
add
ret
mov
jns
test
pop
aaa
loope
stc
enter
pop
or
dec
sub
ficompl
jp
mov
adc
xor
jo
xchg
dec
fiadds
jnp
inc
loope,pt
adc
lret
dec
hlt
insb
inc
mov
and
xor
out
mov
mov
mov
xchg
sbb
std
and
mov
mov
add
sub
test
sub
xor
sbb
rorb
stos
pusha
mov
js
addl
cld
lcall
jne
and
push
sbb
hlt
mov
shrb
and
in
pop
sub
mov
inc
jo
into
dec
sub
mov
xlat
sbb
sub
xor
fsubrp
lods
sub
and
cmp
sti
sub
push
scas
fsubl
outsb
test
dec
or
outsb
dec
aas
ret
jae
mov
push
or
xor
adc
test
aad
shl
inc
js
enter
pop
and
in
cmp
inc
mov
mov
sar
frstor
scas
pop
dec
push
pop
out
jne
cmp
cmp
xchg
outsb
mov
ret
movsb
sub
xor
int
popf
xchg
push
fldl
repz
repnz
ljmp
cmpb
mov
cmc
jg
fcmovnb
push
int
subb
popa
jg
push
lds
and
push
mov
std
push
rol
add
popa
iret
fucom
lods
pusha
aaa
pop
clc
and
imul
mov
add
fs
sub
xor
cwtl
jns
push
add
ljmp
and
movsb
xchg
adc
test
sub
xchg
decl
pushf
leave
add
lret
sub
cmp
adc
jo
iret
add
leave
xlat
out
lock
cmp
sbb
loopne
movsl
mov
adc
add
mov
repz
dec
or
std
mov
sahf
or
push
popa
into
outsl
fs
cwtl
mov
or
ss
inc
sti
lock
movsb
shlb
or
adc
aad
cmp
adc
sub
xchg
stos
fldenv
mov
push
add
add
icebp
aas
or
fxch
add
js
lods
adc
cmp
divb
fidivrl
cld
mov
ljmp
fwait
ljmp
insl
negl
imul
imul
adc
adc
fldl
in
ds
test
push
mov
data16
xor
fsubl
add
or
test
insl
inc
in
push
rcr
xlat
addr16
xchg
shll
sbb
mov
sbb
pop
loopne
cmpsl
push
or
sub
xchg
cmp
inc
lea
out
outsl
adcb
leave
int
push
pop
mov
orl
hlt
and
cmp
gs
stos
jge
or
fmul
sbb
push
pop
movsl
daa
call
jns
lock
lahf
push
clc
xchg
xchg
mov
in
and
add
addl
pop
add
mov
and
inc
xlat
xchg
pop
add
cltd
std
and
and
jge
pop
negl
xorb
out
lcall
ret
les
xlat
scas
cli
mov
stos
pop
mov
xor
movsl
mov
push
pop
adc
hlt
sub
adc
mov
rorb
xchg
pusha
and
mov
jnp
sub
sbb
and
mov
sarl
enter
sbb
and
stc
push
out
fldt
dec
mov
cmc
rcr
add
out
mov
sub
repnz
push
imul
divl
dec
sub
dec
pushf
cmpsl
inc
sub
or
mov
loop
pop
mov
in
add
adc
fdivrl
dec
popa
stc
inc
arpl
lods
sub
push
andb
dec
or
jo
insl
inc
pop
les
add
lahf
shlb
push
xchg
mov
sarl
dec
rcrl
aad
sbb
dec
shll
arpl
call
sbbb
jecxz
sti
das
mov
bound
mov
sub
loop
lods
and
cmp
insb
fstps
jecxz
dec
in
add
jle
jo
fwait
in
lds
mov
push
jl
and
rolb
sbb
pop
lea
dec
imulb
pop
mov
mov
pop
loop
cmpl
inc
sbb
mov
sbb
std
es
and
add
in
leave
add
inc
mov
cli
lods
loop
push
dec
jns
mov
stos
xchg
out
xchg
adc
js
inc
lret
lods
dec
out
cmp
fistpll
loop
shll
and
loop
loop
dec
loop
add
pop
push
or
imul
mov
sbb
fs
lcall
insb
sbb
mov
sub
scas
ret
ja
ljmp
inc
cmpsl
mov
xchg
sti
sub
jecxz
test
mov
shlb
xchg
test
js
fidivrs
pop
arpl
or
push
test
add
ret
sbbl
xlat
stos
imul
outsl
add
das
aaa
dec
xlat
jl
lahf
negl
cli
or
dec
xor
imul
inc
aas
xchg
imull
imul
incl
icebp
push
xlat
es
inc
scas
inc
inc
push
fdivl
shll
cmp
add
lcall
adc
sbb
cwtl
sbb
sbb
out
nop
xchg
pop
fwait
test
sub
jle
adc
xchg
add
xor
andl
lret
cs
shlb
aas
addr16
sar
pop
cmp
adc
addr16
aaa
jo
out
ljmp
stos
mov
rcll
lods
popa
push
imul
cmp
sbb
das
outsb
mov
jmp
cli
test
xor
mov
cmp
inc
arpl
aaa
stos
jns
dec
addr16
test
xor
fldl
fsubrs
sbb
sub
dec
rcrl
dec
xchg
repnz
inc
aad
addr16
jns
inc
mov
in
out
sub
and
add
int3
xorl
or
icebp
int3
sub
cmp
aad
subl
or
int
push
popf
fidivrl
mov
mov
pop
adc
mov
ficomps
sub
data16
lock
popa
or
sbb
stos
mov
push
es
inc
jo
lods
test
sub
outsb
scas
dec
jl
mov
add
scas
sysret
push
pop
sbb
lods
loope
das
sbb
sbb
dec
mov
xchg
lea
mov
das
dec
imul
xchg
dec
data16
lcall
add
pusha
icebp
push
mov
mov
adc
inc
mov
xchg
jg
adc
sub
xchg
add
dec
pop
std
pop
test
add
push
out
jl
sub
lods
and
cmp
cmpsl
cmp
add
movsb
dec
add
loop
jecxz
call
enter
push
ljmp
popa
cmp
jecxz
mov
mov
add
cmpsl
mov
rolb
mov
inc
daa
cmpsb
fisubl
pop
icebp
push
push
add
lcall
or
dec
shlb
rcll
pop
std
jg
neg
jno
or
mov
jb
movsb
push
adc
adc
mov
mov
adc
fdivr
push
jne
cmp
and
test
les
scas
daa
in
or
and
or
adc
stos
lds
or
cmp
and
pop
ds
xor
cli
jge
mov
dec
inc
clc
cmp
fldcw
or
sbbl
xlat
lahf
xorb
lods
sti
pop
xor
imul
into
sbb
les
dec
pop
xchg
ret
repz
or
xchg
popa
cmp
dec
jle
mulb
dec
dec
adc
daa
addr16
js
aad
imul
iret
mov
aam
scas
sbb
pop
stc
pushf
add
add
cmp
es
jb
loop
in
stos
and
xor
rorl
push
mov
faddl
jno
out
hlt
mov
add
les
aas
loop
adc
imul
and
fadd
imul
mov
mov
repnz
test
es
dec
std
pop
pop
inc
imul
fldenv
vmovd
hlt
adc
ss
fisubl
xor
or
inc
rcr
notb
add
mov
imul
dec
movsl
sbb
ror
ljmp
je
push
mov
int
or
inc
test
mov
cmpb
in
das
arpl
sti
rcll
cltd
test
jo
mov
negb
xchg
mov
add
xor
xchg
xor
subb
mov
lods
dec
add
dec
sbb
inc
sub
pop
movsl
lahf
push
or
pusha
notb
data16
mov
lods
fsubp
mov
sti
mov
cs
adc
pop
xor
leave
call
push
mov
jecxz
or
mov
in
jle
mulb
xor
movsl
in
int
pop
fs
and
dec
add
xor
push
push
adc
jge
clc
mov
mov
iret
pop
jg
rclb
sub
cli
stos
mov
adc
jp
push
outsl
or
push
dec
lahf
mov
mov
pop
je
out
or
sbb
jmp
les
stos
imul
lock
mov
inc
jbe
push
ficoml
aas
lret
fdivrs
and
enter
aaa
pop
fldenv
rorb
dec
jg
mov
imul
test
jg
in
push
dec
inc
fstpt
and
shrl
sti
push
inc
mov
icebp
cmp
jo
inc
stos
rorb
add
pop
loope
in
lods
dec
mov
adc
mov
dec
mov
and
test
sub
aad
lret
ret
push
movsb
ljmp
inc
sub
fsubl
sub
xor
mov
and
pop
push
mov
inc
mov
push
lret
aam
mov
inc
ret
mov
dec
inc
leave
xor
sub
add
push
cmpsl
loope
push
out
testl
hlt
bound
jle
mov
sbbb
push
jg
subl
sahf
xor
les
adc
bound
lods
call
fcmovu
pop
repnz
jg
adc
jmp
lea
xchg
jnp
mov
loopne
add
outsl
jnp
lcall
inc
jmp
cmc
ja
pop
inc
sbb
lahf
mov
add
inc
dec
icebp
sti
pop
fs
popa
clc
push
sub
or
in
int3
jnp
inc
xchg
fidivrl
pop
mov
fdivs
lcall
cmpsl
popa
mov
imul
jp
push
mov
add
fdivrl
fldl
xchg
ja
add
dec
xlat
jne
mov
stos
push
repnz
cmpsb
cmp
cmpsl
dec
aas
dec
xchg
repz
mov
mov
pushw
xchg
pop
jb
push
sub
ja
imulb
into
test
clc
xlat
je
or
daa
inc
dec
mov
or
xchg
adc
mov
xor
shll
shll
or
les
or
mov
pop
and
dec
leave
inc
jno
aad
int
pushf
or
addr16
push
lods
adc
xor
mov
xlat
mov
mov
mov
xor
out
jnp
or
fcoms
sub
pop
adc
stos
adc
popa
mov
or
push
lcall
sub
dec
xchg
mov
mov
push
mov
cs
jno
jne
xchg
call
cld
inc
push
jmp
add
adc
in
stc
cwtl
lcall
jg
jb
ret
lret
repz
sbb
push
mov
fstpl
repnz
jb
mov
fst
adc
les
cmp
in
pop
push
pop
push
ret
stos
mov
or
das
add
arpl
andb
fs
rclb
std
inc
mov
sbb
xor
jmp
rcl
cmc
push
xchg
stos
inc
fistpl
dec
xor
jbe
inc
fmul
add
fdivrl
jecxz
mov
negb
add
enter
fwait
mov
adc
xor
fisubs
mov
jg
test
dec
and
mov
lods
out
inc
sbb
sbb
sbb
cmc
mov
mov
add
sbb
xchg
mov
es
enter
sub
in
jae
sub
imull
movsl
cs
xchg
sub
jbe
ret
xchg
out
lds
aas
hlt
lret
jmp
test
ljmp
inc
push
push
push
xor
jo
stos
into
pop
rcrl
sbbl
sbb
jne
test
sti
cmpsb
pop
jle
rorl
in
and
cmpsl
add
xchg
push
and
add
cli
and
sub
testb
jb
das
dec
push
cli
xchg
aaa
in
add
dec
xchg
mov
adc
dec
xchg
jle
lds
fstl
rcrl
jae
jecxz
out
xor
push
pop
icebp
mov
psllw
or
and
ret
out
pop
inc
xor
or
in
sub
mov
inc
xor
xchg
inc
inc
test
sbb
adc
push
in
ja
js
lock
jge
inc
pop
pop
cmp
lret
filds
push
mov
inc
insl
outsl
movl
and
jmp
mov
or
insb
inc
fisttps
dec
mov
fwait
cmpsl
inc
pinsrw
adc
mull
out
dec
in
and
fs
mov
adc
insl
xchg
outsb
negb
sbb
aam
inc
jae
jns
mov
movsb
pop
lea
jecxz
out
int
sub
mov
les
jnp
push
xor
repnz
jb
addl
mov
in
lds
lret
aas
cli
jns
fadds
or
jmp
inc
sub
inc
push
push
sub
lods
cmpsl
ret
xorl
shr
lods
adc
add
pop
xchg
add
dec
inc
clc
daa
js
push
in
aaa
dec
jae
mov
cmc
push
popf
xlat
imul
addr16
dec
pop
cmp
aam
scas
cmc
pop
dec
insl
inc
shr
clc
or
xlat
adc
xchg
repnz
fsubrl
mov
adc
cmc
decl
stos
lret
addr16
push
jmp
dec
rorl
inc
lds
inc
sbb
cmp
outsb
insl
sbb
sar
xor
xchg
push
out
test
adc
mov
or
xchg
lahf
shrl
clc
adc
push
cmp
push
and
mov
adc
mov
aas
mov
sub
sbb
pop
pop
push
mov
cs
xchg
in
dec
pop
mov
int3
ret
jge
jg
loop
jns
sbb
ret
push
pop
push
filds
add
bound
bound
inc
shlb
test
pop
jg
fbstp
inc
lcall
and
jo
mov
int3
loopne
mov
cmpsl
loop
dec
aas
cmpsb
mov
cmpsl
xchg
loop
pushf
jp
mov
in
push
and
nop
leave
int
outsb
push
sbb
mov
dec
ficoms
mov
mov
jno
sbb
or
xchg
mov
shrb
popa
adc
pop
dec
cmp
in
pop
insb
or
insb
rcrb
sbb
out
and
jae
test
dec
fistps
stos
mov
mov
sbb
or
mov
adc
aaa
or
and
push
faddl
fiaddl
notb
xchg
call
js
idivl
or
cmp
popf
jge
adc
xchg
add
pop
mov
add
jae
call
cli
xchg
mov
and
shll
jle
bound
cmc
xchg
inc
push
outsl
dec
and
icebp
cmp
push
fs
pop
out
pop
pop
addr16
mov
sbb
inc
adc
and
jp
mov
enter
push
mov
lds
add
stc
mov
and
jmp
ss
adc
into
movsl
iret
push
test
xor
push
out
push
lea
push
fmuls
int3
and
xchg
pop
rcrb
and
mov
mov
jb
push
mov
js
push
and
mov
mov
repnz
mov
or
pop
outsb
mov
jle
aam
in
jle
mov
mov
testb
sub
cmpsl
ret
out
out
test
and
dec
xor
dec
dec
cmp
clc
scas
sahf
cmp
dec
adcl
and
and
fldl
test
icebp
das
jns
lods
fwait
and
inc
scas
ds
jl
mov
push
rol
mov
xchg
jge
jecxz
push
rclb
cmp
mov
push
lea
movsb
or
rcl
je
pop
mov
lds
fs
inc
sub
jo
loope
mov
jl
subb
cmp
or
and
xor
mov
cwtl
std
loopne
mov
xor
mov
mov
adc
mov
cmp
xlat
ljmp
or
inc
ds
inc
mov
movsl
add
push
or
fsubl
in
daa
andl
jp
jnp
inc
fwait
mov
xchg
adc
mov
dec
lret
pop
rorb
gs
sbb
inc
pop
call
test
jae
add
mov
jg
lcall
xchg
into
dec
and
push
jae
adc
mov
pop
mov
mov
cmpsb
shl
add
pop
jmp
push
jae
push
popa
xor
dec
inc
pop
and
arpl
xchg
xor
mov
rep
daa
jae
pushf
inc
test
mov
jle
xchg
call
xor
xor
and
enter
xchg
mov
out
jae
outsb
decb
pop
cs
inc
sahf
mov
mov
add
add
mov
mov
push
dec
imul
pop
das
jge
mov
add
cmp
xor
jmp
pop
sub
inc
aad
sbb
bound
mov
push
jp
lock
pop
xor
lcall
adc
xchg
push
jmp
jne
mov
aam
mov
dec
mov
out
lods
scas
inc
and
subb
out
mov
imul
sarb
aaa
mov
imul
mov
cmp
mov
jne
in
add
push
inc
sub
lahf
push
and
or
or
nop
or
jb
jae
dec
fsubrs
imul
lds
sti
rol
scas
movsb
arpl
or
cmp
adc
lcall
lcall
mov
and
lret
bound
xchg
jns
in
add
push
jmp
shr
lock
fldl
jp
movsb
fistl
aad
dec
add
les
inc
cli
pop
faddp
inc
xchg
xor
pop
aad
or
sub
xlat
leave
dec
repnz
adc
mov
or
push
dec
cmp
xchg
mov
push
cmp
inc
ja
fistpl
fildll
mov
aam
push
push
loope
add
mov
inc
leave
pop
movsl
cli
dec
mov
dec
lret
jp
std
and
sub
out
inc
out
add
rcl
cmc
push
cmpsb
call
sub
jno
xor
mov
xchg
addr16
adc
jmp
mov
popf
aas
dec
enter
xchg
out
adc
into
add
setnp
dec
xchg
cmpsb
inc
mov
dec
or
push
iret
loop
call
dec
daa
sahf
ds
or
fwait
es
cmp
addr16
xchg
sbb
fsubrp
imul
in
movsb
xor
sub
jae
fsubrp
adc
cmp
test
pushf
jg
fbld
mov
out
xchg
xchg
stos
cmp
ds
sbb
cwtl
mov
mov
lea
jbe
xchg
or
xchg
pop
pop
push
lret
fsubs
dec
mov
push
mov
pusha
mov
test
stc
mov
push
sub
mov
imul
push
sub
inc
ja
and
or
into
imul
sub
dec
out
push
sbb
adc
fwait
cmpsl
lcall
inc
sti
cmpsb
imul
cmpsb
inc
fldt
xchg
out
adc
inc
lret
mov
mov
mov
out
ret
jo
cwtl
or
cmpsb
movsb
loopne
lock
rolb
mov
lock
lahf
lods
in
jnp
fs
ror
dec
mov
ret
dec
les
imul
test
or
popf
mov
rcrl
add
mov
fists
clc
sarl
cmpsl
fxch
fstpt
popa
pop
jmp
jo
pushf
and
inc
lock
daa
ds
dec
jecxz
fxch
dec
mov
add
dec
lea
mov
das
mov
jns
add
mov
loope
repnz
stos
in
mov
cs
int
mov
cwtl
out
jnp
jne
mov
xchg
ja
jb
or
sbb
icebp
fldcw
lods
jmp
std
pusha
dec
dec
xor
rcl
adc
inc
lret
jmp
ja
ret
aad
imul
in
jp
shlb
add
mov
shl
dec
cmp
cltd
std
mov
xchg
inc
mul
add
fsts
aam
push
stc
popf
ffree
call
idivl
movsl
js
sbb
pop
xor
pop
and
xchg
pop
sub
mov
dec
fucomip
push
xchg
scas
dec
loope
loop
adc
lahf
enter
jns
mov
adc
flds
lcall
xchg
xor
jmp
cmpl
push
push
pop
xor
pop
scas
call
jecxz
sahf
lods
js
or
arpl
incl
daa
adc
aad
mul
mov
cwtl
popa
mov
pop
cmp
scas
stc
rolb
movsb
fidivrl
cld
pop
repz
xor
sahf
or
mov
xchg
out
push
cmc
ret
aam
cs
inc
std
mov
js
or
cmp
aaa
sub
inc
ja
mov
mov
sti
aam
sub
add
ror
sub
scas
std
pop
dec
push
and
hlt
jge
sbb
adc
sarl
or
clc
cmp
lods
mov
and
pop
lret
sahf
add
mov
push
jmp
lret
xor
arpl
fcoml
pop
imul
rdrand
mov
inc
insl
fistpl
pop
out
int
fdivrs
test
sbb
and
push
lcall
push
cs
push
jbe
call
rcl
popf
and
inc
add
cmp
nop
ucomiss
mov
pop
clc
ljmp
mov
ret
xor
pop
rorl
pop
aaa
mov
bound
popa
and
mov
xchg
add
add
and
push
jo
in
mov
lods
ljmp
lock
popa
dec
movsl
sbb
dec
aaa
mov
jp
daa
inc
pop
push
sbbb
mov
xlat
cmc
cwtl
push
push
mov
stos
xchg
test
mov
or
sub
pop
or
pop
sbb
mov
mov
out
cmpsl
int
dec
dec
pop
out
mov
add
push
jo
lds
cmp
or
repnz
push
loop
fstl
push
into
pop
jae
lret
push
mov
inc
arpl
outsb
push
mov
stos
jmp
dec
cmp
in
out
out
jge
repz
add
fcmovnu
xchg
add
sub
jbe
enter
dec
mov
pop
sub
cmp
push
pop
xor
je
sub
pop
jg
mov
in
cmp
add
insl
pop
cwtl
sti
adc
mov
mov
push
jae
add
fmull
sahf
daa
jmp
popf
mov
out
jne
popf
inc
clc
lret
mov
test
gs
lods
lret
sbbb
push
push
aad
push
lret
xor
xor
inc
pop
or
lret
xor
jg
in
aaa
rorb
out
faddp
out
int3
out
pop
mov
or
stc
adc
mov
pushf
push
push
imul
aad
mov
in
xor
jo
sbb
iret
push
fidivrl
push
mov
xor
imul
test
dec
push
ret
sub
push
aad
loop
mov
xor
sbb
mov
jbe
mov
imul
inc
add
pushf
mov
jl
push
cmp
sbb
sti
lods
fisubl
cs
in
inc
pop
out
xchg
or
jb
dec
dec
cmpsb
sbb
lods
rol
cs
mov
adc
adc
scas
xchg
push
push
lock
inc
and
mov
push
stc
pop
data16
mov
js
sbb
push
pop
addr16
cld
sahf
push
test
imul
xor
scas
jo
cmpsb
mov
out
sbbb
andl
or
pop
mov
shlb
insb
data16
shlb
orl
xor
psrlw
xchg
jmp
pop
add
mov
fldcw
lds
inc
fisttpll
mov
sbb
fnstsw
xorb
push
mov
cmp
pop
add
push
insw
jmp
inc
adc
out
cmpsl
jns
adc
lret
fstps
popa
sbb
shl
jle
push
andb
jle
adc
dec
call
dec
xchg
dec
movsb
dec
push
mov
les
popf
adc
outsb
out
icebp
mov
sbb
inc
sub
scas
in
mov
push
inc
fwait
sti
jmp
or
hlt
push
decl
test
pop
mov
inc
mov
lahf
imul
enter
pop
mov
push
sbb
test
push
mov
sbb
jbe
cs
push
stos
outsb
ljmp
inc
cmp
fisubrl
sarb
inc
int
or
push
out
int
lods
in
mov
mov
mov
iret
insb
cli
mov
rcl
or
das
mov
lock
xor
pop
es
movsb
cmp
gs
adc
adc
pop
mov
mov
push
stos
inc
lods
sub
loop
sbb
inc
or
jae
stos
sub
ds
test
movsb
dec
xchg
rcrb
or
adc
out
cli
insl
jnp
inc
mov
and
pop
push
jo
pand
xor
sbb
jae
inc
and
dec
repz
mov
jne
cltd
mov
pop
pop
movsb
or
sub
mov
les
inc
jo
mov
or
mov
push
jmp
lret
xchg
inc
pop
into
fildll
push
mov
sbbl
mov
push
cmp
jns
mov
mov
pushf
cltd
repz
mov
in
shrl
inc
sbb
mov
fucomi
test
push
or
mov
mov
pop
sub
es
repnz
mov
popf
movsl
add
jo
pushf
int
fucomp
xchg
fstps
xchg
mov
fdivs
fadd
fdivrs
mov
pop
mov
fldcw
outsb
pop
ret
dec
loopne
jns
cmpl
lcall
outsl
ljmp
in
aas
mov
aam
fcomps
dec
movsb
jge
gs
mov
iret
cli
xchg
aam
lahf
add
into
nop
xchg
add
sbb
sbb
sub
fistpl
fbstp
lds
ret
adc
lcall
fidivrs
jge
ljmp
addr16
arpl
nopl
add
add
xor
mov
push
dec
fwait
or
pop
ret
stos
adc
xchg
xchg
xor
inc
pop
sbb
xor
jno
daa
mov
push
xor
aaa
xchg
pop
cli
fstl
ror
bound
dec
push
cs
xor
xor
mov
ret
xor
cmpsb
repz
inc
adc
sub
mov
out
xor
ss
int
fcomip
aam
shll
rcrb
pop
cmp
xchg
scas
repz
adc
inc
dec
sbb
and
out
clc
iret
cmc
add
loop
pop
inc
or
out
push
push
cmp
mov
sbb
mov
xor
xor
sahf
inc
pop
xchg
sub
ss
cmp
cmpsl
add
jmp
xor
das
mov
jb
aaa
dec
es
push
les
lock
rorl
pop
shrl
jbe
jge
out
clc
lods
iret
inc
ret
hlt
push
outsb
ffreep
fwait
mov
jbe
and
push
cltd
pusha
mov
jno
push
inc
and
cltd
push
sub
adc
popa
insb
in
cmpsb
stos
adc
lock
mov
cs
mov
sahf
jle
xchg
gs
mov
negl
stc
lods
ror
xor
loop
mov
sarl
in
cmp
rcl
in
dec
dec
lcall
pop
jno
lret
pop
push
xchg
jecxz
inc
hlt
call
or
inc
xchg
push
in
xchg
fldt
inc
dec
rolb
push
out
mov
fs
mov
pop
mov
xor
dec
in
test
lock
pop
scas
aad
mov
je
lea
nop
or
push
and
adc
jno
dec
ja
into
in
ret
inc
rcl
jmp
fs
into
sub
jmp
bound
sbb
out
cli
sbb
dec
pop
lahf
add
movsl
icebp
push
adc
add
out
adc
dec
push
outsb
add
aam
mov
cmpsl
sub
cld
fs
lea
cmpl
shlb
lret
sub
jge
jle
sbb
cmp
test
inc
fs
push
imul
mov
xchg
sbb
xlat
outsb
or
cmc
push
clc
shlb
xor
xor
push
sbb
add
mov
lods
or
leave
test
rcll
lahf
adc
adc
shl
fsubrl
mov
aam
mov
push
in
in
imul
mov
or
cs
and
mov
sub
cli
xor
nop
jb
dec
add
stos
and
movsl
push
imull
mov
pop
in
mov
push
jbe
arpl
mov
fidivs
adc
push
cmpsl
cmp
pop
add
xlat
aas
jl
call
dec
or
ret
sub
aam
aad
mov
pop
jo
jo
lds
lret
in
push
push
cmp
pusha
insl
mov
jae
inc
mov
in
outsb
in
adc
dec
jp
imull
int3
and
jl
insb
rorl
lret
vfnmsub213ps
add
cmp
imul
or
mov
inc
xlat
mov
rcrl
fimull
dec
dec
mov
mov
xchg
out
leave
gs
fisttpl
imul
sbb
adcb
mov
les
mov
sarl
repnz
repz
mov
add
or
scas
mov
enter
push
push
jb
sbb
shr
sub
dec
adc
bound
dec
test
mov
loope
js
mov
fwait
orb
jecxz
shrb
repnz
and
js
mov
fdivp
das
lret
xor
sub
mov
pop
jp
icebp
mov
sbb
ja
lods
cmp
inc
fcomps
faddp
int
push
pop
cmc
lea
into
int
xchg
das
inc
sbb
push
dec
aam
or
daa
pop
cltd
sub
cmp
das
dec
out
insb
mov
and
or
push
in
sbb
test
iret
add
push
popf
dec
dec
cmp
outsl
es
jp
aad
inc
mov
cltd
addr16
sti
movsl
and
into
and
mov
dec
jns
xchg
mov
sbb
ficompl
push
inc
cltd
cld
insl
add
or
mov
cmp
lcall
jb
cmp
inc
xchg
push
add
xchg
out
inc
pop
push
ficompl
sub
or
xor
cmp
xchg
jle
sub
aad
mov
adc
cld
add
lahf
mov
leave
jno
iret
or
xlat
fwait
mov
sar
fsubrs
jecxz
fisttps
pop
xor
lea
fldenv
sbb
pop
mov
push
push
jle
loopne
and
inc
pop
shr
les
xor
pop
data16
push
xor
mov
movsb
int3
cmpsl
idiv
out
hlt
mov
xlat
cmp
pop
inc
adc
ret
adc
dec
es
pop
cwtl
inc
shl
dec
mov
mov
and
add
and
call
xchg
dec
loopne
adcb
sbb
in
push
or
jb
or
sub
xor
loopne
sub
mov
into
inc
jo
imul
mov
movsb
cmp
jge
adc
xchg
repnz
pop
push
shll
dec
add
xchg
fwait
pop
shrb
add
and
inc
jae
dec
push
adc
out
dec
imul
call
or
sarl
repnz
fwait
pop
lret
adc
int
mov
pop
push
aad
loope
lock
testb
stc
push
mov
cmpsb
rcrl
into
or
mov
mov
mov
jle
enter
iret
push
xchg
int3
cs
stc
popf
insb
sub
popf
sbb
cld
frstor
arpl
mov
push
jmp
lahf
mov
movsl
mov
push
loope
push
jo
repnz
mov
jnp
fsubrl
xor
clc
cmp
cld
cltd
stos
pushf
testb
jp
shll
dec
sbb
insb
fcomip
jmp
cmpsl
out
call
mov
cmp
dec
stos
mov
jae
rol
sahf
pop
xor
add
scas
push
add
adc
mov
pop
add
cmpsl
imul
negl
add
cltd
clc
mov
outsl
mov
mov
inc
sub
fwait
cli
pop
jne
int
cld
dec
hlt
mov
sbb
sbb
sbb
sub
dec
add
aaa
pop
adc
pop
jbe
push
sub
test
mov
mov
push
sub
fwait
outsb
pop
fistpll
cwtl
and
sar
ret
fdivrl
pop
push
or
pop
cmp
mov
cmc
sbb
and
xchg
test
and
jmp
jae
and
jg
cli
inc
imul
out
push
push
jg
mulb
push
mov
pusha
iret
xchg
or
add
fistpll
fcompl
inc
push
or
xor
icebp
xor
cltd
sub
mov
fidivrs
inc
cltd
mov
js
cmp
popf
clc
adcb
fwait
pusha
cld
cmp
xchg
jle
xchg
mov
fwait
sti
pop
mov
push
cmpsl
jb
jbe
jns
daa
mov
popf
sub
shl
sahf
jb
push
jnp
or
adc
pop
adc
mov
push
sub
pop
xor
std
cwtl
enter
sub
roll
and
stos
addr16
pop
lahf
arpl
ret
adc
dec
dec
mov
jge
pop
pop
dec
push
mov
dec
sub
sarl
jo
inc
push
test
in
icebp
sub
cltd
std
add
xor
inc
in
sbb
adc
pop
cld
icebp
inc
movsb
repnz
incb
rcrb
dec
out
jbe
test
andl
in
mov
call
push
push
std
sbb
mov
nop
xchg
out
lcall
or
mov
ret
sub
mov
jae
iret
mov
push
int
adc
movsb
repnz
negl
pop
shl
jnp
mov
jg
out
mov
test
cmp
aas
xor
adc
loope
push
xor
mov
mov
lahf
add
vphaddbq
pop
dec
dec
and
sarl
dec
mov
mov
jno
shrl
icebp
rcl
dec
popa
jnp
cmp
lcall
js
repz
mov
jmp
lock
xchg
sbb
pushf
xchg
sub
lock
adc
iret
pop
movb
mov
mov
adc
jmp
sarl
mov
mov
pop
out
andl
add
arpl
adc
mov
jecxz
gs
cltd
sub
nop
cmpsl
dec
push
test
mov
ja
xor
pop
aam
imul
cs
stos
icebp
push
xchg
lods
adc
setno
in
pop
pop
test
aad
stc
shlb
addr16
mov
ret
cwtl
dec
mov
or
lcall
adc
sbb
sbb
or
xor
mov
mov
lea
fsubrl
xor
push
cwtl
mov
sbb
sub
push
sti
push
cwtl
dec
mov
lcall
aas
outsl
xorl
jb
mov
pop
clc
stc
lcall
in
xchg
mov
and
test
lret
shlb
dec
bound
adc
lret
mov
and
pop
dec
sbb
test
jle
cmp
xchg
or
aad
jp
inc
stos
add
add
adc
shlb
loop
jns
mov
or
ret
cmp
xor
lds
cwtl
lods
cmp
mov
call
outsb
adc
ret
inc
cmp
sub
jns
lock
push
lods
jg
movsb
pushf
nop
xchg
sub
jg
mov
mov
mov
sbb
mov
cmc
out
test
test
ret
pop
les
sti
subb
lea
add
subb
push
test
push
or
dec
jbe
push
xor
xor
xor
bnd
sub
sbbb
mov
or
sti
xor
dec
or
popa
subl
xchg
mov
jl
ja
adc
and
dec
xor
cmc
mov
dec
lahf
cmc
mov
jbe
fsubrl
mov
sbb
mov
testl
add
xor
jle
stc
outsb
in
mov
xchg
add
or
push
sbb
lret
ds
pop
icebp
iret
xlat
arpl
or
sbbl
arpl
movsb
jle
in
out
lahf
mov
out
cwtl
sub
test
std
inc
cmpsb
sub
xlat
push
dec
fists
mov
xchg
push
sbbl
xor
rclb
push
movsl
add
mov
sub
push
xchg
scas
mov
imul
dec
push
jp
test
or
adc
scas
adc
cs
or
dec
inc
shl
aad
pop
cmc
int
inc
shlb
xchg
mov
add
jbe
add
mov
fidivrs
push
inc
mov
jge
push
lds
data16
data16
push
mov
movsb
cmp
sbb
mov
lock
aam
cmp
repnz
into
enter
aam
mov
xlat
dec
jns
call
or
scas
stc
mov
xchg
mov
fs
fldcw
aam
test
test
fdivrl
mov
and
test
es
fs
xchg
fisttps
push
lods
mov
lahf
adc
fdivs
push
gs
cs
jno
mov
ret
mov
call
or
or
and
sub
test
shrb
add
xor
sub
pop
mov
bound
xlat
inc
cmp
lock
jae
lret
aaa
stos
inc
push
pusha
sbb
mov
or
leave
cmp
mov
mov
cs
arpl
pop
xchg
and
mov
sub
cwtl
xor
cli
imul
mov
lret
into
mov
or
cmp
dec
jl
repnz
movsl
cmp
pop
lcall
jl
mov
subb
cmp
int3
ret
lret
xchg
pop
imul
mov
adc
inc
int
inc
aas
xchg
and
xor
jns
and
sbb
push
sbb
jmp
cmp
xor
fmuls
sbb
or
dec
mov
test
jecxz
jnp
aam
fcomi
cmpsb
cmc
push
xchg
bound
fdivs
aaa
push
adc
or
jo
mov
or
push
inc
lret
xor
lcall
aaa
add
inc
es
push
or
sti
pop
push
lcall
movsb
and
call
icebp
jl
pop
scas
shrb
insb
hlt
cld
and
pop
jbe
mov
mov
sbb
jmp
add
xchg
divb
lahf
rcr
std
add
mov
mov
rol
lret
mov
movsb
dec
pop
xlat
inc
aaa
testl
sub
fadds
pop
roll
cwtl
iret
es
push
cmpsl
js
andb
std
insl
ds
and
scas
cmovns
or
jne
stos
ljmp
mov
rcll
add
test
push
inc
gs
lahf
xor
mov
cwtl
jo
inc
frstor
shlb
cltd
fsub
mov
mov
adc
push
inc
inc
cmp
inc
xchg
xchg
sbb
jmp
push
xor
mov
test
lret
arpl
insl
fs
mov
std
int3
decl
sti
add
jle
arpl
loope
inc
test
and
jp
inc
sbb
sbb
in
lcall
add
pop
mov
mov
shll
in
lds
inc
pop
jbe
mov
adc
es
dec
pusha
or
movsb
clc
int
pop
xor
sti
ljmp
fnsave
jo
jb
mov
add
fwait
pushf
jne
sbb
jge
movsl
outsb
push
mov
and
test
sbb
faddl
and
clc
adc
imul
sti
cmpsl
add
mov
clc
push
xor
test
arpl
fistpl
lcall
jno
sub
cmpsb
nop
jmp
mov
mov
mov
push
rol
fcmovu
jae
in
push
insb
jg
sbb
mov
mov
test
icebp
add
pop
push
xchg
or
and
push
clc
xchg
adc
loopne
push
xchg
pop
and
dec
pop
outsb
dec
sub
mov
popf
pop
jl
xchg
bound
loopne
outsl
push
fcomps
jb
shll
rcl
stos
push
add
sbb
icebp
adc
inc
inc
mov
cwtl
mov
out
and
xchg
rcll
shlb
dec
sbb
sbbb
adc
adc
mov
xchg
mov
enter
stos
xor
lret
cmp
cmpsb
jg
negb
fbstp
cs
and
fidivrl
mov
addr16
jge
cwtl
xor
cmpsl
imul
mov
in
dec
and
lret
mov
ret
adc
push
popf
push
insl
jecxz
and
sarb
sbb
adc
dec
xor
aas
mov
rclb
in
ret
jns
sub
xchg
xchg
mov
jecxz
and
pop
stos
sub
neg
clc
leave
test
je
inc
test
xchg
or
add
push
adc
stos
out
rsm
mov
sbb
sbb
mov
adc
test
mov
jb
mov
mov
jno
sbb
mov
aam
xchg
test
lret
notw
ja
popa
push
add
xchg
jl
aaa
testl
add
negb
fnstenv
adc
mov
mov
push
and
rcll
pop
mov
jp
pop
push
stc
inc
hlt
mov
xor
int3
gs
fidivs
fnstsw
imul
pop
int
sbb
lds
or
cmp
cld
xchg
cmp
xor
data16
cwtl
pop
int3
pop
sub
icebp
xchg
sub
push
push
je
mov
lea
lods
lea
lods
xchg
inc
das
in
push
addr16
dec
bound
cwtl
insl
add
mov
dec
mov
add
cmpsb
inc
addr16
rorl
ret
cmp
stos
inc
les
clc
adc
test
mov
sbb
popf
or
repz
iret
in
add
jns
and
dec
aam
int3
adc
call
add
sbb
sub
xchg
dec
mov
inc
jg
ds
out
add
shr
push
sbb
movsl
mov
push
or
addr16
mov
sarb
aam
dec
mov
sahf
pusha
add
scas
mov
adc
cmc
inc
repz
push
inc
xchg
and
sub
cmp
mov
shl
pop
cs
inc
push
add
rcll
scas
lahf
xchg
or
adc
jno
stos
cmpsl
push
dec
pop
icebp
cmc
and
sub
adc
sub
xchg
xor
sahf
aas
pop
mov
or
cmp
dec
pop
rorl
in
call
insl
leave
lods
ret
sub
mov
mov
jle
add
pop
inc
repnz
lahf
add
cltd
or
cltd
jne
dec
lods
xorb
aam
adc
in
jmp
pop
enter
sbb
pushf
adc
mov
lds
loopne
add
push
cmp
ss
test
aas
push
inc
lds
cld
fsubr
push
shrl
or
jb
xor
push
xchg
test
cmc
xchg
pop
cmp
pop
xchg
out
or
dec
pop
sub
inc
jp
andb
lods
pop
arpl
in
arpl
ljmp
cmpsb
shrb
pop
outsb
add
xchg
cld
mov
jb
push
outsl
mull
shll
test
dec
loopne
gs
mov
cs
adc
sbb
push
push
sub
sbb
sub
ja
lods
push
push
das
xor
frstor
fdivl
in
push
popf
dec
pop
clc
jns
data16
movb
mov
cltd
das
mov
push
mul
mov
adc
scas
pop
pop
cmp
mov
test
mov
fsubs
ds
ljmp
sub
inc
xchg
and
scas
mov
andb
push
jge
test
xor
fwait
loop
xchg
lret
mov
fwait
pop
xor
mov
inc
pop
lods
popa
and
mov
xchg
out
pop
dec
push
cmp
xlat
xorb
mov
inc
je
popl
stos
mov
bt
push
cmpsb
inc
fstpt
popa
scas
lea
pop
jno
xchg
xlat
repz
xchg
pop
cld
add
arpl
cmpsb
add
ljmp
mov
sti
mov
aas
inc
add
xor
popa
jmp
cwtl
repz
stos
jl
lahf
in
push
pop
dec
or
jle
jecxz
pop
lahf
adc
sbb
ljmp
mov
mov
mov
mov
push
mov
inc
cltd
lods
mov
xchg
aaa
mov
pop
push
cltd
sbb
sbb
daa
test
mov
hlt
push
xchg
push
out
push
call
push
stos
ljmp
rolb
mov
mov
aaa
shl
mov
pop
inc
scas
jp
daa
outsl
jmp
test
scas
mov
and
cmc
mov
jg
adc
fisubs
not
ret
mov
sub
xor
jecxz
lock
jp
mov
xor
mov
mov
mov
xor
ljmp
jg
pusha
call
and
and
ds
dec
sub
in
lds
test
inc
fldl2t
pop
jo
mov
mov
test
mov
movsl
jp
inc
mov
inc
lret
mov
jb
xor
iret
sbb
sbb
std
push
xchg
in
mov
sbb
cmpsb
scas
sbbb
lret
mov
fcoms
add
stc
cltd
lret
mov
notl
or
notrack
pop
icebp
adc
js
dec
notb
stos
daa
and
cmpsb
pop
add
mov
jl
fisttpl
and
leave
push
sbb
jno
mov
mov
and
arpl
xor
insb
jl
push
cmp
and
mov
pusha
or
push
movsl
xchg
sub
je
lret
xchg
xchg
cmp
pop
add
fdivs
inc
lahf
sahf
pop
shlb
add
and
add
mov
ljmp
mov
addr16
push
in
jmp
push
cmp
pop
pop
pop
jo,pn
fmulp
xchg
mov
mov
adc
mov
jnp
iret
push
cmp
int3
adc
incb
dec
jno
inc
aas
loop
pop
aaa
adc
in
lock
popf
pop
jmp
mov
jmp
xchg
dec
fstpl
jg
inc
ret
decb
dec
shrb
sbbb
adc
sbb
and
mov
or
pop
mov
xor
movsl
aam
pop
ljmp
ss
popf
xchg
mov
fidivl
mov
add
pop
fistps
inc
scas
dec
es
push
pop
and
fidivrl
iret
int3
sub
pop
cmpsl
add
adc
jmp
pusha
mov
fucomip
adcb
cmpxchg
test
push
int
aaa
adc
gs
testl
cs
lea
dec
stos
dec
fbstp
mov
out
jp
add
bound
xor
mov
or
test
decb
mov
movsb
cmp
pop
es
fwait
jmp
fists
fstpt
test
or
out
das
les
dec
push
sahf
cmc
push
cmc
jne
sarb
cld
sub
jmp
mov
mov
cmpsb
xorb
mov
ds
hlt
stos
cmp
xchg
into
enter
or
in
add
mov
inc
inc
adcb
dec
test
sahf
xor
pop
xchg
mov
mov
fs
loopne
push
fdivl
xchg
jle
mov
cs
push
insb
sbb
das
outsl
iret
rclb
negb
out
ja
in
mov
fbstp
dec
cmpsl
add
xor
jnp
aam
dec
mov
and
xchg
ret
outsb
add
pop
push
mov
or
push
inc
xchg
inc
loopne
lret
addr16
jmp
outsl
pop
daa
jnp
push
mov
mov
sub
pop
out
xor
cli
xlat
ljmp
sub
and
mov
add
add
testb
lock
pop
sti
leave
adc
mov
imul
mov
push
out
jo
testl
pop
adc
cmc
dec
cmpl
sub
push
jnp
mov
outsb
clc
mov
inc
fiaddl
aad
hlt
mov
add
iret
jg
xor
sub
xor
inc
shr
fildll
lock
in
stc
add
call
fucomip
and
lods
mov
mov
aas
adc
out
jl
jmp
adc
mov
sub
test
sti
xchg
jbe
leave
cmc
or
loope
mov
pop
add
rorl
jmp
mov
xchg
dec
or
into
push
sbb
jns
cwtl
and
fwait
dec
sti
sub
xor
jns
lret
stos
mov
inc
sarl
data16
outsb
cltd
dec
je
cmp
cmc
mov
fildll
aaa
jmp
adc
iret
test
inc
push
int3
or
rcrb
std
xchg
or
aam
cltd
cmpsb
sbb
adc
jl
adc
lcall
pop
dec
in
int3
mov
lods
cmp
mov
push
lahf
and
inc
sub
iret
pop
and
outsl
adc
dec
mov
data16
and
cmp
std
inc
int3
fwait
test
outsl
test
push
cmc
fnstcw
xchg
push
mov
sarb
ss
mov
outsb
jl
mov
rolb
orb
jp
int3
in
or
pop
out
out
adc
mov
pop
mov
push
addl
and
pop
mov
gs
adc
loop
out
mov
sarb
jns
lods
xchg
inc
adc
rorl
jp
push
mov
adc
rolb
inc
scas
pop
mov
jne
pop
mov
das
div
sub
daa
mov
fisubrs
daa
std
cli
arpl
and
clc
mov
ficoml
lods
or
xor
or
inc
sub
cmpsb
fmul
popf
push
fisttps
dec
mov
add
and
mov
mov
icebp
mov
sub
outsl
adc
ret
or
stos
popf
sbb
call
push
jo
sahf
mov
xchg
lds
test
mov
in
jg
ret
inc
xlat
hlt
xlat
popw
movsl
fwait
jecxz
fld
mov
jb
loope
faddl
insl
mov
xchg
into
push
sbb
mov
shrl
sarb
jbe
insl
jge
xchg
pop
mov
adcb
in
loope
pop
outsb
pop
mov
bound
cmpsl
js
xchg
jecxz
insb
push
cmp
mov
loop
fdivl
sbb
and
cmp
outsb
xor
mov
push
inc
jge
lcall
cmc
stc
xchg
sub
sub
clc
add
lods
adc
in
and
pop
cltd
mov
shrl
or
cs
daa
mov
dec
jecxz
fistl
jp
inc
pop
push
sub
xchg
mov
out
xchg
jp
repnz
dec
jns
or
stos
imul
mov
pushl
mov
scas
xchg
sub
lds
aam
mov
in
adc
push
xor
mov
mov
lds
and
ret
addr16
daa
inc
adc
xchg
mov
sbb
mov
jl
rcll
adcb
xlat
push
clc
mov
popa
in
mov
jnp
bound
pop
testb
dec
mov
xor
sub
rcrb
jecxz
or
jge
mov
xor
cmp
test
movsb
sbb
jmp
fimuls
jecxz
dec
enter
out
cld
cmp
dec
ja
inc
inc
cmp
sub
xchg
repnz
cmc
cmp
ret
add
jecxz
jecxz
out
popf
ret
mov
xchg
or
xchg
dec
testl
outsb
xor
push
idivl
xor
dec
push
inc
add
inc
adc
int
popa
xor
and
or
or
dec
pop
shlb
mov
dec
mov
loopne
push
adcl
inc
and
jns
inc
dec
pushf
sbb
inc
mov
cli
pop
lock
dec
insl
addl
adcl
jp
or
in
add
fidivs
fwait
dec
add
fdivs
ror
push
dec
lahf
mov
pop
data16
mov
cmp
dec
gs
sahf
sub
push
es
sub
movsl
ret
cmp
jle
into
scas
mov
push
out
cli
nop
sub
scas
mov
loope
push
adc
inc
in
xchg
imul
cmp
mov
outsl
mov
sti
xor
imul
push
jmp
dec
sbb
sbb
push
stos
and
and
xor
sahf
mov
push
out
mov
mov
sbb
sub
or
mov
sub
test
and
popa
push
loop
scas
cmpb
xchg
sub
cli
pop
mov
popa
fstpl
xlat
repz
mov
in
and
inc
push
xchg
insb
jle
push
push
in
jbe
ja
adc
je
push
xor
and
mov
xchg
pop
clc
je
inc
insb
fmull
andl
ja
adc
loop
or
mov
cmp
aas
imul
push
and
fdivl
cmpsb
loop
clc
push
pop
push
data16
xor
jb
lods
inc
mov
cs
xor
push
cwtl
call
je
sti
jnp
ret
sbb
mov
into
call
mov
sub
sahf
pop
das
cmc
repnz
xor
jo
adc
sbb
pop
sub
sub
pop
popa
sbb
int3
pop
test
xor
lock
inc
and
or
pop
shlb
sub
test
inc
push
pop
mov
mov
sub
xchg
in
or
pop
dec
sub
mov
addr16
adc
mov
push
sti
not
jae
incb
jnp
imul
dec
aas
sub
repnz
in
xchg
mov
dec
rep
lret
pop
fnstenv
mov
pop
aaa
and
outsl
subb
adc
sbb
aad
xchg
int
sti
lea
xchg
popa
bound
cmp
outsb
outsb
dec
insl
jl
scas
inc
xlat
popf
hlt
out
jge
jns
gs
sbb
mov
xor
mov
cs
mov
imul
fwait
xor
rolb
sbbb
sbb
scas
rcll
or
cltd
icebp
pop
mov
movsb
add
sbb
jns
sub
imul
movnti
mov
cmp
pop
loop
xor
rcl
outsl
mov
push
jmp
xchg
lret
insl
inc
sub
mov
arpl
scas
pop
cmc
loopne
xor
pop
cmp
cmp
addl
and
insb
sti
enter
int3
lds
test
dec
xor
popa
lahf
sub
mov
shrl
scas
xchg
adc
enter
call
insb
es
mov
adc
pusha
pop
fadd
xchg
shrl
xlat
cmp
mov
dec
pop
cmc
into
adc
cld
sahf
movsl
icebp
xchg
xor
mov
in
xor
pushf
outsb
dec
pusha
cmp
and
jecxz
cmp
push
mulb
lea
out
sbb
notl
fstps
and
add
stc
pmaxub
lret
pop
in
push
out
adcb
and
push
mov
lock
fiadds
adc
cmp
pop
inc
sbb
mov
das
inc
fsub
xchg
xor
inc
pop
sub
cmp
cmpsb
pop
jns
xchg
out
xchg
cmc
outsb
add
cmp
lcall
inc
int3
cmc
into
ret
std
jle
dec
or
or
push
movsb
sub
push
rclb
push
xor
mov
add
cmpsl
jle,pt
pop
add
lods
in
jmp
push
test
aaa
mov
shll
fidivrs
jne
cmp
push
arpl
push
sub
mov
xlat
outsl
repz
nop
lock
dec
cmp
xor
idivb
clc
sub
jae
call
shrb
shrl
push
mov
jae
push
adc
daa
int3
sub
pusha
sub
xchg
enter
cmc
loope
scas
adc
dec
pusha
ret
mov
out
cwtl
sbb
out
jae
mov
lret
cli
dec
aaa
int3
out
stos
add
add
shr
pushl
xor
pop
divb
xlat
outsb
jl
xchg
add
sbbl
jnp
test
testb
dec
jmp
push
sbb
imul
jno
xchg
sub
test
jle
mov
cmp
in
std
imul
lds
mov
fdivr
inc
mov
stc
rorb
jg
call
adc
jo
mov
rclb
mov
jmp
dec
mov
test
xchg
cmpsl
fisubl
aas
sbb
imul
jo
pop
pop
repnz
imul
mov
enter
adc
xchg
mov
fs
and
jp
dec
leave
jne
sysenter
data16
lcall
or
cld
cmpb
sbb
mov
mov
or
pop
std
sub
push
push
enter
inc
arpl
sti
xor
in
mov
popa
mov
lock
aad
pushf
inc
sahf
inc
jae
mov
in
adc
xor
sub
fmull
mov
jge
xor
push
fnstcw
or
mov
mov
popf
arpl
inc
test
outsl
jecxz
sbb
loop
es
mov
imul
jo
dec
loope
xchg
lret
nop
icebp
cmpsl
cmp
push
outsl
and
mov
ret
psraw
cwtl
adc
pop
mov
inc
in
stc
or
insl
pop
mov
std
insb
mov
xchg
jp
push
pop
jmp
or
loop
xor
lret
out
mov
sbb
std
in
cmpsl
outsl
push
aam
addr16
shlb
mov
jle
xchg
rcr
iret
sbb
add
das
not
xor
pop
dec
xchg
andl
mov
pushw
or
xchg
xchg
insb
dec
iret
cs
jecxz
mov
sarl
jae
fcomip
mov
in
mov
imul
xchg
imul
rolb
lock
dec
pop
jmp
ja
clc
call
or
push
xchg
jmp
lret
xor
enter
arpl
fmul
loopne
orb
popa
add
ljmp
sub
dec
addr16
push
xor
lods
jl
mov
push
movsl
pop
std
mov
inc
sub
cmp
mov
scas
sub
pusha
push
repz
inc
push
jmp
mov
mov
test
and
in
xchg
in
xchg
or
in
pushw
test
sahf
push
das
in
mov
jnp
add
cmp
pop
add
or
jb
pushf
xor
stc
aas
sub
add
xor
lret
fsubl
mov
mov
jle
cmp
inc
lret
je
and
add
adc
int
mov
xlat
out
sarb
cmpsl
loope
fsubs
push
mov
addr16
sub
pop
stos
jbe
jns
push
imul
popa
outsb
mov
dec
push
mov
mov
mov
sbb
push
out
mov
sarl
sub
test
cld
add
mov
cmpsb
in
and
xor
and
pop
adc
out
push
jno
adc
scas
aam
loopne
sbb
xor
outsl
jnp
push
outsl
scas
add
adc
jno
stos
inc
mov
or
scas
pop
int3
out
add
and
jp
out
sub
mov
jl
jl
cs
out
add
and
sub
cmp
sbb
mov
loop
sti
inc
xchg
popl
add
add
inc
mov
lahf
xchg
scas
mov
ljmp
lods
ds
ja
aam
test
sub
insb
gs
fldcw
pop
adc
testb
repnz
es
stc
nop
sub
clc
dec
pop
in
shlb
cmc
sbb
jge
aas
adc
or
shrb
push
sahf
insb
scas
sub
out
popa
jmp
int
and
shr
jp
notb
inc
jb
outsb
arpl
test
mov
inc
jmp
addl
pushf
lea
sbb
mov
jge
sti
cmp
mov
add
shl
dec
dec
dec
pop
push
jmp
movb
in
pop
psrlq
fcoms
lea
push
cmp
cwtl
cld
and
addr16
jbe
cmc
test
rcrl
negb
xor
or
or
add
in
ficompl
push
mov
mov
dec
or
inc
push
jns
into
mov
or
lret
mov
ds
test
and
or
lods
loop
cmpsb
in
je
cmp
ror
gs
rcr
mov
xor
aam
mov
rcl
lock
leave
pop
xchg
jge
adc
inc
xchg
pop
ja
push
or
lahf
xchg
dec
cltd
pop
jbe
gs
in
pop
jg
add
test
push
xor
sub
adc
mov
and
xchg
jle
sbb
cwtl
adc
add
mov
or
data16
xchg
sub
or
mov
fmul
mov
cs
insl
frstor
hlt
push
hlt
into
testb
ficoml
lcall
xor
mov
outsb
lods
xchg
cmp
test
sub
jns
dec
and
push
movl
aad
mov
add
pop
icebp
subl
jns
test
jg
dec
int3
loopne
jle
jmp
push
es
push
push
scas
push
push
adc
popl
test
jae
mov
push
repnz
out
inc
xchg
pop
adc
mov
sarb
loopne
pop
shl
mov
cmpsl
nop
in
mov
icebp
sar
mov
xor
sub
add
adc
dec
aaa
pop
adc
inc
cwtl
jne
fdiv
xchg
enter
aad
mov
mov
scas
xor
xor
lcall
dec
ljmp
shll
ds
mov
inc
mov
fsubs
fldenv
aam
add
adc
mov
addr16
stc
gs
push
jne
movsl
faddl
sti
xchg
xor
xchg
xor
lcall
in
call
mov
lods
sbb
orb
add
stos
mov
test
push
jbe
outsb
daa
xor
jno
add
fwait
xlat
push
inc
pop
test
jbe
inc
sbb
mov
movsb
sub
xlat
ljmp
add
hlt
push
xor
test
call
cmp
mov
fxam
cli
xlat
es
imul
jl
mov
jmp
pop
hlt
pop
push
jo
jg
sbb
xchg
push
lcall
xor
aas
loope
popf
fnstcw
fs
addb
pop
push
push
dec
stc
nop
jge
cltd
test
xlat
outsl
jnp
pop
repnz
or
mov
outsl
inc
mov
xchg
sbb
jmp
inc
sub
lcall
icebp
mov
pop
test
push
out
cmpsb
sbb
add
daa
cmp
pop
jne
repnz
jns
sbb
xor
xor
gs
incl
dec
cmp
mov
pop
aas
rolb
sti
rcl
test
mov
jb
ja
push
cmp
dec
adc
imul
lahf
jo
xchg
cs
ret
dec
data16
cs
ds
xchg
shl
sti
call
fsubl
out
std
in
or
sub
mov
cltd
std
sub
mov
push
push
sbb
addps
or
fbstp
push
out
and
sti
add
or
jg
sub
dec
lret
shrb
pop
and
pop
jl
inc
fldt
shlb
mov
or
sub
repz
out
fcoml
stos
rorb
xchg
roll
add
loope
lods
cmpsl
shrl
out
inc
xchg
mov
into
push
inc
inc
jle
mov
xchg
frstor
and
cmpsb
or
push
cltd
mov
dec
xchg
pop
repz
inc
mov
int3
arpl
ret
arpl
js
jno
inc
cltd
sbbl
je
xor
hlt
push
fldt
and
xor
xchg
mov
pop
mov
adc
jecxz
cs
cld
out
mov
pop
dec
dec
shll
xchg
jo
cmp
in
ss
cmp
jle
cmpsl
mov
mov
dec
pusha
ljmp
mov
lret
mov
repz
dec
lods
pusha
in
mov
into
mov
adc
add
cmp
add
xchg
pop
dec
in
inc
mov
jge
hlt
sbb
jle
test
xchg
stos
inc
mov
sbb
dec
in
sbb
movsl
fwait
cmp
cs
aad
fidivl
ret
xor
insl
mov
sub
cwtl
mov
inc
and
mov
int3
xor
jmp
leave
rcrb
or
sbb
fildll
push
add
in
mov
and
js
outsl
sbb
push
mov
adc
sarb
pushl
sti
pop
push
mov
or
push
lods
lds
mov
fadd
mov
inc
cld
out
test
mov
outsl
std
mov
sarb
jne
cmpsb
xor
es
push
loope
fidivl
std
shl
mov
sub
push
pop
testb
pop
cmp
pusha
ss
mov
stos
out
out
fildl
xor
xchg
ss
ret
fwait
mov
adc
rcr
push
jmp
jae
and
pop
in
ret
push
in
in
notb
mov
mov
out
xlat
push
sub
jae
nop
pop
js
lds
mov
push
cmpsb
dec
data16
push
movl
cmp
and
iret
loop
and
mov
sarl
stc
mov
adc
inc
push
popf
fmulp
fidivl
push
inc
add
es
cli
push
stos
mov
dec
or
repnz
and
ja
ljmp
movsb
inc
xchg
push
sub
dec
repz
xchg
mov
nop
push
out
push
sub
push
out
inc
xorl
pop
push
and
and
loopne
adc
push
cwtl
in
or
outsb
jne
jp
jecxz
int
jno
add
jbe
add
push
xor
in
in
daa
xchg
jmp
lcall
fidivrs
or
xchg
test
inc
bound
enter
sub
lea
push
cmc
je
shll
xchg
hlt
rcl
scas
sbb
add
repnz
xchg
add
dec
inc
test
xor
gs
inc
inc
ja
in
pop
ret
push
je
aas
dec
and
cli
mov
in
les
or
jmp
les
std
imul
add
loop
int
or
movsl
sbb
stos
mov
movsl
xor
xchg
cs
ret
fistpl
sub
cli
xor
aad
cli
xor
or
pop
mov
jno
fcmovnu
and
sar
and
push
scas
xor
xor
in
test
jnp
lcall
push
jne
mov
pop
in
push
lret
pop
insb
cli
shrb
add
ljmp
andb
cwtl
mov
into
inc
sub
or
and
sub
ss
jbe
dec
test
mov
sbb
pushf
inc
out
add
data16
cld
mov
inc
lods
les
test
mov
daa
sub
xchg
and
sbb
jle
or
inc
sub
add
aam
leave
gs
jmp
mov
lock
in
or
mov
xor
add
fbstp
mov
jo
loope
icebp
and
xrelease
jae
jns
out
xchg
lcall
lahf
push
add
mov
mov
add
jnp
sti
lods
cmp
popf
sahf
popf
jp
mov
in
clc
pop
fsubrl
jp,pn
and
test
jp
out
rclb
or
call
pop
or
sbb
and
push
lret
sbb
inc
imul
mov
mov
adc
out
lahf
popf
cli
fistpl
jnp
test
movsl
cmp
mov
ret
fbld
inc
fwait
scas
ja
fidivl
pop
stos
dec
loop
add
xchg
lcall
xor
icebp
pop
stos
jge
fistpll
inc
pop
push
fwait
in
loope
pop
sbb
jne
and
mov
int3
mov
mov
cwtl
hlt
or
push
popf
mov
in
fldl
sahf
jle
out
rcrl
rcl
outsl
repz
jg
dec
ficoml
jo
jle
or
inc
sub
or
push
iret
jmp
xor
and
jbe
aam
pusha
negl
jle
ror
imul
pop
stc
nop
cmp
in
nop
lahf
mov
push
push
sub
fistps
mov
xor
add
sub
imul
clc
dec
mov
mov
mov
jns
add
in
int
cli
loope
clc
aas
inc
jb
xchg
lret
popa
fsubl
lret
or
jno
or
shlb
pop
lret
out
lcall
fiadds
int
icebp
movsl
xchg
in
out
and
xchg
sahf
and
shrl
ljmp
pusha
dec
repnz
jns
inc
sti
mov
stc
mov
movsb
cmp
or
dec
stc
inc
push
mov
inc
xor
or
shll
das
arpl
add
cmp
push
mov
add
ja
dec
mov
test
mov
scas
jle
rcr
xchg
iret
repz
lods
arpl
sub
dec
cli
dec
shrb
outsb
dec
cmp
push
sar
scas
addl
xchg
adc
icebp
lret
adc
mov
ja
push
fnstenv
cmp
cmp
stos
out
push
jmp
test
jb,pt
enter
lret
cmp
mov
adc
int3
cmp
jmp
loopne
mov
sbb
and
pop
push
je
sti
fwait
inc
out
mov
sub
add
inc
inc
outsl
dec
fidivs
push
cmp
mov
jno
dec
in
pop
push
imul
insl
mov
hlt
xchg
fbstp
add
xsha1
cmpsb
dec
and
mov
mov
jns
add
notl
test
and
xchg
stos
push
adc
mov
lds
mov
or
ret
je
lret
dec
iret
sahf
jl
pop
mov
xlat
sub
and
jno
je
xchg
fistpl
bnd
dec
movsb
adc
xlat
mov
pop
and
xchg
scas
ds
mov
stc
dec
lcall
jae
loop
jmpw
or
shlb
sub
mov
mov
xchg
push
icebp
inc
add
xchg
xor
xchg
xchg
pop
hlt
test
jns
call
or
cltd
push
loope
and
pop
mov
icebp
js
mov
shlb
sarl
mov
popf
ss
pop
lods
xor
sbb
pop
idivl
push
sub
stos
dec
in
in
test
out
pop
mov
hlt
cmp
movsl
pop
inc
mov
mov
and
cli
repnz
or
std
ffreep
jmp
int
sub
outsl
mov
adc
arpl
mov
loopne
fcompl
iret
push
jns
mov
jmp
sbb
inc
and
push
addr16
dec
or
mov
and
dec
std
cmp
in
das
test
jmp
add
mov
int3
mov
mov
sbb
xchg
in
pop
loopne
pop
dec
jae
fisubl
pop
ret
das
mov
fwait
jl
pop
cmpsl
pop
mov
or
fisubl
pop
outsb
xor
adc
jnp
shrb
shrl
dec
cmp
lods
inc
dec
sub
pusha
push
pop
lods
shrb
push
sub
sub
dec
movsl
cmp
cmc
stos
inc
pop
pop
push
mov
clc
xor
xor
icebp
mov
and
mov
mov
in
inc
dec
and
dec
fildl
outsl
jae
pusha
mov
sbbb
out
pop
sbb
cmp
sbb
inc
scas
jb
add
lcall
decl
stos
movsl
sbb
lea
lahf
mov
mulb
lret
loope
mov
inc
mov
or
xor
push
in
pop
and
outsb
add
mov
mov
out
and
xchg
push
add
mov
jnp
and
or
arpl
mov
jle
inc
pop
repnz
inc
adc
jp
das
testl
out
icebp
dec
fwait
stos
add
sbb
sbb
add
sbb
lret
repnz
rcll
mov
dec
repnz
and
mov
inc
in
push
imul
push
test
and
cmp
ret
pop
sbb
xor
cmp
addr16
mov
add
adc
repnz
test
shr
mov
lods
and
outsb
pop
inc
std
jle
mov
adc
cmpsl
inc
xchg
lret
cmp
fwait
sbb
int
outsb
shlb
pop
pop
not
or
pop
xlat
jnp
lret
arpl
bswap
mov
lods
dec
add
or
push
loop
xchg
xchg
jb
pusha
mov
loopne
scas
dec
jecxz
xlat
pop
sbb
loop,pt
pop
mov
jl
cmp
dec
es
clc
pop
lock
inc
mov
xor
sti
cltd
xchg
push
or
xor
or
mov
faddl
sbb
mov
sbb
push
insb
jle
sub
mov
sub
aam
sti
seta
lcall
jmp
outsl
cmp
lret
and
xchg
mov
jns
xchg
pop
inc
xor
xor
mov
out
push
inc
fsubr
jne
pop
push
xor
movl
shrb
loopne
fistpl
xor
insb
mov
pop
pop
mov
jmp
lods
xlat
sub
xchg
daa
push
nop
push
sub
dec
cmpsb
stos
dec
fnstcw
imul
mov
cmp
add
add
inc
mov
sbb
out
and
filds
inc
push
jle
or
dec
push
std
mov
arpl
push
sbbl
iret
cmpsl
inc
out
lock
cwtl
cmp
jb
jnp
hlt
sub
andb
lret
jb
cmp
in
add
test
fsubrs
in
or
mov
push
or
mov
repz
data16
imul
push
lock
or
movsl
repnz
daa
xor
jns
scas
scas
cmp
lret
add
or
inc
push
mov
xchg
ljmp
xor
movsb
leave
int
stos
sti
dec
scas
jne
fsubrs
xchg
sbb
sbb
pop
pop
mov
jnp
cmp
sbb
add
out
jg
dec
add
and
negl
in
outsl
lahf
adc
in
push
adc
and
lods
inc
rcll
stos
mov
push
mov
pop
xor
fsubrl
dec
mov
fwait
cs
stc
sbbl
pusha
andb
jns
push
cld
pop
sbb
add
mov
sub
lahf
jb
pop
mov
in
jp
cwtl
mov
xor
push
inc
fdiv
inc
dec
popa
clc
jnp
jge
adc
mov
sarb
push
decb
cltd
inc
adc
add
push
outsl
pop
pop
push
lds
mov
fwait
pop
shl
lds
popf
repnz
stos
adc
pop
sbbl
jg
push
inc
notl
push
call
shlb
xchg
and
dec
and
out
sub
pop
fdivrl
cmp
xor
ret
push
clc
push
xor
scas
pushf
and
dec
xor
xchg
dec
sub
je
sbb
inc
jno
je
data16
sbb
mov
loopne
mov
iret
add
push
and
rorl
push
sbb
inc
mov
push
cmp
shlb
jns
loop
cmpsl
insl
aaa
inc
dec
adc
leave
imul
and
mov
out
jecxz
fmuls
loope
mov
sub
and
dec
fldl
repnz
pop
fstps
adc
fidivrs
aad
ret
jb
jmp
lock
out
jb
daa
roll
sbb
call
xchg
jmp
pop
push
adc
outsb
ja
lahf
scas
ja
cmp
daa
test
mov
mov
popf
movsb
xchg
xor
mov
or
mov
sbb
in
dec
ss
jl
dec
inc
shl
jnp
and
in
lds
addr16
sub
adc
add
push
stos
mov
sbb
fldt
js
test
mov
pop
jg
or
pop
jno
hlt
mov
push
pop
cmc
push
scas
cmp
clc
inc
add
clc
mov
out
sub
pop
inc
inc
movsb
push
data16
fwait
add
lods
outsb
sbb
cmc
iret
orb
xchg
lods
shl
ja
stos
mov
das
fldenv
andb
cmpsl
mov
dec
pop
sahf
jns
push
push
pop
push
lcall
mulb
pop
ret
fcomps
mov
sarl
xchg
in
test
mov
out
imul
mov
sub
std
mov
insl
push
fwait
dec
notl
dec
mov
fnsave
movsb
mov
popf
imul
xchg
pop
mov
pop
pop
xlat
lret
stos
cltd
mov
push
test
jmp
popf
jae
iret
mov
mov
fstpl
mov
in
jl
ds
and
cmpsl
xchg
jb
testb
jae
pop
mov
lods
dec
pop
jle
les
xchg
jbe
in
fwait
sahf
mov
pop
xor
sub
inc
inc
cmp
ss
pop
cs
cs
fistps
iret
mov
xchg
xor
xor
dec
fiaddl
test
leave
or
mov
pusha
fisubrs
pop
push
shlb
push
fimuls
emms
adc
inc
sbb
dec
arpl
in
rcll
lods
mov
testl
rol
shr
fnsave
into
bound
out
add
pusha
jmp
enter
sbbl
lret
incl
jbe
push
movsl
ret
dec
test
sbb
add
out
lea
out
cmpsb
push
aas
js
in
jns
fsubrl
mov
neg
lea
push
mov
mov
sbb
std
popf
xor
mov
xor
mov
adc
cmp
xchg
pusha
add
lret
jge
add
scas
out
jnp
add
out
jp
sub
imul
jle
mov
add
lods
stos
jecxz
mov
sbb
add
adc
das
sahf
fxch
lds
push
lods
mov
roll
enter
jecxz
mov
lcall
cwtl
fs
mov
sub
jb
std
outsl
lret
jne
andl
dec
shlb
add
fdiv
dec
test
xchg
ja
pop
sub
xchg
xor
xchg
pop
popl
pop
or
push
addb
sbbl
push
sub
out
dec
xchg
aam
fsubrs
ljmp
jnp
fs
dec
dec
aad
cltd
sub
xor
addr16
mov
inc
or
sub
addr16
pop
mov
sti
decb
dec
fists
mov
sub
movsl
insl
ds
xchg
out
sub
jg
data16
movsl
gs
mov
jp
sub
and
cmpsl
cmp
mov
pushl
inc
jnp
outsl
lret
xchg
jne
jne
test
push
mov
popf
cmpsb
lods
and
insb
jp
xor
pop
arpl
pop
repz
jae
push
arpl
xchg
aas
sbbl
out
dec
xor
mov
add
or
fisubrl
dec
adc
pop
fldenv
cmp
mov
jle
dec
jae
shr
mov
adc
or
imul
and
dec
jg
sti
test
sti
xchg
fnsave
stos
loope
lcall
daa
loope
icebp
imul
xor
pop
mov
push
pop
xchg
andl
shl
test
loop
mov
sub
jne
pop
repnz
stc
sar
jns
xor
add
imul
sti
mov
xlat
cli
movsl
ret
aas
popa
add
or
add
sbbl
imul
mov
push
out
inc
fisttps
pop
test
sub
rcrl
push
in
jns
sbb
mov
mov
mov
adc
clc
rclb
icebp
xor
and
into
add
call
shll
xor
outsl
lcall
push
insl
inc
jo
std
or
stos
mov
adc
jo
movsl
xor
jno
sahf
ss
and
fucomip
inc
push
mov
mov
popf
mov
fldt
es
add
cli
imul
frstor
lret
and
repnz
dec
sahf
cmp
jmp
mov
inc
aam
fs
js
adc
xchg
jbe
or
fdivl
ret
inc
xorb
mov
mov
movsl
jb
push
dec
sbb
sub
ret
add
pop
cmp
ret
jecxz
sahf
add
mov
lods
xor
pop
mov
pop
in
xchg
jo
mov
lret
ja
subb
mov
mov
or
pop
addr16
es
cmc
sub
pop
dec
lock
sbb
xor
addr16
je
in
outsb
dec
pop
mov
pop
dec
cmp
mov
dec
cmc
push
cmc
jmp
xchg
push
movl
sub
jge
jge
test
add
clc
dec
and
mov
jb
fistpl
int3
jb
adc
sbbl
xor
dec
push
lods
shrl
in
cmc
cmpsl
inc
mov
push
inc
sbbb
repnz
fisubs
aad
sub
push
mov
mov
je
out
movsl
je
mov
cmpsb
xchg
cs
pop
mov
xor
in
pop
flds
mov
mov
jbe
cmp
dec
push
enter
lret
les
orb
inc
int3
add
pop
add
jns
cwtl
dec
mov
adc
divl
lcall
data16
out
aam
nop
pop
int
pop
lods
pop
cmpsb
adc
jmp
cmp
inc
inc
in
imul
dec
push
fadds
add
fstps
iret
mov
ret
push
je
mov
test
jo
sbb
dec
push
in
mov
sbb
jg
mov
pop
lahf
or
add
mov
clc
or
sbb
or
sarl
mov
int3
stos
pop
fucomp
mov
aaa
inc
fucomi
clc
add
mov
jecxz
lret
fnstsw
fs
movsb
adc
and
sbb
and
adcb
sub
cltd
rorb
sub
pop
imul
mov
fsubrs
outsl
dec
data16
inc
jecxz
popa
out
in
or
pop
inc
sub
das
mov
inc
sbb
daa
add
pop
cmp
xchg
stos
pop
dec
cwtl
pop
lds
adc
js
mov
jp
mov
or
push
ja
dec
mulb
outsb
insl
add
cmp
or
or
cmpsl
inc
fsubs
jmp
push
inc
fisubrl
jle
dec
mov
or
call
jmp
enterw
and
loop
dec
and
repz
mov
dec
cwtl
rcrl
jge
js
jmp
mov
sub
and
push
mull
in
pop
or
xchg
bound
dec
fcompl
inc
xchg
jge
push
xchg
or
pop
pop
enter
popf
insl
pop
pop
scas
mov
push
rcll
lahf
sub
lea
outsl
test
jnp
dec
push
and
loopne
outsl
dec
lcall
adc
lds
mov
into
fs
sub
repz
mov
loope
push
clc
mov
mov
lods
dec
push
insl
sti
xchg
sbb
jmp
mov
xor
dec
cli
xchg
jbe
lock
and
fisttpl
mov
or
test
ds
xchg
push
pop
repz
aaa
int
cmpsb
in
fsubs
out
push
arpl
push
out
xchg
sub
ljmp
push
addr16
adcl
dec
in
dec
in
cltd
cltd
xor
sbbl
mov
arpl
lods
call
ror
loopne
dec
aad
jp
add
xor
mov
pop
repnz
ds
xchg
scas
sub
pushf
pop
jge
dec
push
add
jns,pn
fidivs
icebp
fidivl
movmskps
jge
inc
fisttpll
add
add
mov
cwtl
div
or
setns
adc
das
repnz
jb
lock
fs
dec
or
cmc
push
fsubs
test
mov
lret
inc
push
xor
or
and
dec
and
test
insl
push
mov
pop
jg
push
pop
imul
loope
ja
ss
or
fiaddl
in
aas
ljmp
pop
jl
rcrl
mov
jl
js
cmpsb
les
inc
lret
xor
out
lock
sub
std
inc
xor
xor
push
in
add
mov
pop
outsl
push
cmp
or
fs
outsl
test
mov
xor
mov
cltd
orb
or
in
jne
push
adc
add
rolb
mov
fwait
cmpsl
subl
inc
push
dec
sub
pop
in
or
std
push
pop
arpl
push
imul
adc
pop
xchg
pop
decl
mov
int3
pop
adc
aam
jno
in
out
mov
inc
cmp
xor
int3
in
sbb
fsubrl
mov
pop
js
addr16
mov
push
imul
dec
dec
push
stos
jmp
repz
and
ficoms
add
les
mov
jns
add
jle
jg
aam
mov
iret
dec
ret
pop
jnp
pop
xor
loop
lret
imul
and
jecxz
inc
mov
add
xchg
leave
mov
sbb
inc
xor
add
cmpsb
inc
or
sbb
cmp
add
xor
in
rcr
jno
jecxz
std
push
mov
lcall
and
jmp
bound
and
popa
push
push
and
call
daa
inc
dec
jnp
adcb
sti
insl
add
mov
js
pop
loope
mull
cmp
dec
inc
xlat
jns
adc
pusha
imul
jl
xor
sub
cmp
sub
fidivl
mov
je
cmc
xchg
scas
xchg
sub
out
add
mov
adc
mov
das
pop
fwait
or
sub
cmp
subb
xor
stc
popa
pop
pop
xor
xchg
dec
jo
xorb
pop
xlat
xor
inc
icebp
call
or
and
mov
pop
xchg
aas
pusha
ss
xor
imul
add
pop
sub
cmp
adc
aaa
jnp
push
rcpps
sub
adc
mov
sub
pusha
aam
or
lods
pusha
sub
mov
lods
push
push
lahf
fst
mov
mov
outsb
add
sbb
ljmp
nop
movsb
aam
dec
xchg
movsl
add
jno
mov
cmp
xor
cltd
inc
add
fcompl
jnp
loope
inc
pop
adc
push
bound
mov
xor
sbb
fldt
xor
mov
daa
and
push
and
jle
imul
mov
mov
mov
xchg
inc
mov
jno
dec
mov
add
leave
adc
in
lret
jmp
push
cmpb
fnstcw
ret
push
int3
ret
cld
xchg
jne
sti
xchg
push
stos
fwait
mulb
dec
jnp
xchg
mov
or
das
fcomps
out
and
jbe
sub
lcall
and
mov
popa
jg
xlat
movsl
add
stos
popf
movsb
loope
jno
movsl
js
fs
inc
nop
call
adc
lcall
inc
call
das
call
push
ljmp
lds
aas
pop
das
push
or
xor
repz
jle
pop
sub
dec
in
jno
xlat
sbb
xchg
je
call
aas
mov
lds
cmp
dec
ror
dec
in
push
mov
xor
cmp
dec
enter
mov
fldt
cmp
loopne,pt
adc
jmp
stos
stos
fimull
jne
sti
xor
pop
int3
rolb
repz
and
out
cs
sarl
fwait
or
jb
enter
movsl
test
subl
or
mov
aad
sbb
pop
js
shlb
cltd
loope
cmc
mov
fidivl
add
lds
call
dec
pop
mov
xchg
repz
mov
cmpsb
push
jb
mov
xlat
sbb
outsb
jno
cmp
sbbb
xchg
int3
fiadds
scas
icebp
cmp
incb
ljmp
in
add
lea
pop
stos
ds
xorb
rcl
clc
mov
cmp
adc
mov
leave
xlat
movsb
adc
sti
ja
cmpsl
scas
cmpsb
pop
es
into
jns
ja
incl
aad
xchg
lret
arpl
gs
call
fstpt
cmp
aam
js
movsl
add
lods
add
mov
sahf
jmp
pop
sub
mov
push
out
inc
ror
jl
jno
insl
push
push
xcrypt-cfb
cmpsl
popa
subl
loopne
jle
inc
sbb
ror
fyl2x
inc
add
fwait
fadd
iret
inc
loope
imul
adc
pushl
xor
scas
and
or
add
int3
pop
lock
out
inc
jnp
pusha
in
jnp
xchg
sbbl
sbb
or
add
sub
lock
and
fdivp
jle
mov
pop
mov
add
rcl
test
dec
cmp
jnp
mov
lret
mov
jmp
data16
in
test
inc
aaa
lret
jle
insl
mov
insb
movsb
stos
jle
test
mov
push
in
sbbb
mov
icebp
dec
pop
leave
xor
pushf
jb
mov
adcb
push
int3
dec
ja
cmp
xchg
roll
ds
mov
test
mov
mov
fnsetpm(287
daa
inc
sub
insb
mov
jae
xor
pop
loope
sub
cmp
jmp
jp
pop
lods
mov
jns
add
push
out
xor
jne
lcall
mov
hlt
sbb
inc
lret
add
xchg
shrl
shlb
sub
cltd
inc
ret
aad
je
push
mov
popf
xor
xor
jo
hlt
xlat
insl
les
adcb
push
sbb
add
jbe
mov
test
outsb
rcrb
dec
sti
mov
cmp
pop
mov
aad
pop
mov
cmp
add
cmpsb
and
int3
ret
adc
sub
pop
cmpb
js
aam
mov
sar
adc
pop
lret
mov
xor
aaa
sbb
adc
mov
mov
into
or
and
insb
cli
xlat
or
iret
sbb
xor
inc
icebp
adc
repnz
sub
mov
and
frstor
mov
push
outsl
or
push
sbb
ds
sub
negb
cmp
push
mov
icebp
popa
outsl
sub
mov
imul
sbb
or
test
enter
ret
sbb
dec
adc
push
inc
rolb
loope
adc
sbb
sub
mov
mov
inc
aaa
scas
fildll
adc
inc
mov
ljmp
jb
cltd
aad
xchg
sar
nop
add
add
outsl
xor
lret
and
mov
adc
sub
aas
adc
out
adc
pop
aam
repnz
adc
dec
jo
and
inc
xchg
xor
sub
rcrl
adc
cmp
mov
jp
out
pop
cmp
sub
push
sbb
das
adc
repz
and
mov
jne
mov
test
add
test
mov
stc
nop
sub
ds
fdivp
mov
rclb
dec
es
sub
fcoml
push
jl
dec
sub
jne
bnd
shrb
out
sub
insl
imulb
and
pusha
sbb
dec
test
xchg
scas
cmp
mov
sub
aad
loop
stos
mov
clc
loope
pop
loope
mov
andl
or
mov
decb
adc
and
cmpsl
cmp
dec
cmc
adc
jo
jo
mov
jmp
and
lods
xor
adc
loopne
lahf
adc
push
in
fsubl
inc
bnd
mov
shl
frstor
pop
xchg
mov
push
push
fsubrs
add
adc
js
inc
int
and
lods
xchg
push
shlb
jbe
aas
mov
jae
dec
sub
sub
push
sub
loope
push
pop
adc
movsb
cmp
outsl
mov
insb
mov
pop
jmp
mov
inc
aaa
mov
aam
outsl
pop
fldt
add
push
int
ja
pop
out
lcall
shll
jl
sahf
jne
mov
fs
pop
daa
dec
pop
pop
xor
xchg
push
pop
push
push
lods
add
aas
inc
adc
mov
aaa
pop
or
jl
repnz
jns
sub
mov
aaa
leave
cmp
sub
lea
mov
cmp
pop
addr16
push
int3
arpl
jnp
fdivrp
add
push
ss
jg
inc
jne
lock
cmp
gs
pop
dec
and
popa
mov
mov
pop
push
dec
out
arpl
out
push
xor
jno
scas
lds
aam
sub
aas
pop
mov
ret
jl
fcompl
mov
mov
or
pop
inc
stos
int3
mov
in
loopne
sub
bnd
daa
test
movsl
ja
fwait
sbb
jb
cmp
xchg
popf
scas
inc
mov
ja
pop
std
pop
push
je
push
in
dec
sub
mov
jg
icebp
mov
and
push
imul
lret
mov
xor
out
dec
ss
push
pop
aam
repz
inc
popf
sub
test
jno
sbb
or
mov
movsb
push
mov
in
nop
jp
fistps
aaa
data16
push
pop
add
pop
push
dec
mov
paddd
in
das
xor
mov
fisttpl
or
fsubrs
setle
loope
mov
sbb
mov
loop
add
push
jp
lock
pop
mov
notb
popf
sbbb
mov
test
xchg
cmp
fldt
sbb
push
imul
sbbl
cvtdq2ps
lret
cld
aad
push
fistps
data16
fistps
sub
dec
sti
sbb
adcl
adc
fnstenv
sub
sti
xchg
leave
jbe
adc
pop
lcall
stos
adc
sub
jmp
ret
push
adc
fwait
pop
int
fucomi
mov
fcomp
bound
mov
jnp
js
call
pop
mov
fwait
arpl
mov
push
subl
test
call
insl
mov
ss
jnp
xor
pusha
xchg
out
xchg
or
pushf
flds
xchg
mov
pop
xchg
and
pushf
mov
pushf
and
idiv
and
pushf
lcall
cmp
pop
cmp
mov
push
pop
in
cwtl
mov
aam
insl
jno
aam
rorl
imul
int3
add
jbe
cltd
mov
arpl
lahf
lods
sub
hlt
je
mov
jmp
into
cmp
jbe
shll
push
push
jmp
add
aas
xchg
mov
mov
push
pandn
mov
push
mov
shlb
xchg
sub
xor
jno
fstpt
outsl
es
pop
imul
sub
in
imul
sub
add
int
inc
fldenv
sub
lcall
movsl
jmp
push
adc
jecxz
dec
daa
mov
cmp
sub
pusha
imulb
xlat
xor
sbb
push
dec
movsb
or
in
sahf
xor
mov
push
dec
pop
mov
mov
inc
push
push
push
pusha
ljmp
ret
jl
dec
and
adc
cmpsl
dec
mov
fmul
inc
jo
pop
fildll
shll
negl
mov
out
aam
fwait
xchg
cmpsl
test
in
jne
cmc
mov
xchg
add
rol
shll
sbb
insl
mov
lahf
into
push
mov
xchg
sub
aam
sub
jne
aad
mov
lods
inc
dec
popa
jnp
mulb
sub
or
mov
pusha
std
jle
sbb
jo
es
add
test
js
f2xm1
adc
nop
jp
sub
and
sbb
sti
test
mov
or
bound
push
sbb
or
jne
cltd
cmpsb
test
mov
xchg
mov
aas
xchg
sarl
or
jp
and
sub
xor
fildll
in
jp
cmpsb
sub
insb
addr16
les
cmp
mov
add
lret
pop
addr16
pusha
iret
ds
or
adc
lret
mov
cwtl
jg
pop
sub
rcrb
mov
loop
cmp
inc
pusha
inc
mov
sti
xchg
mov
sbb
inc
sbb
dec
mov
sbb
dec
out
int3
nop
in
mov
cmp
jecxz
out
dec
and
pop
adc
mov
fdivl
sbb
outsb
out
or
cmpl
popa
repz
sbb
out
mov
push
push
sbb
jae
cwtl
sub
xchg
pop
cmpsl
cmp
imul
enter
imul
push
lahf
daa
mov
mov
xor
icebp
movhps
jb
int3
and
movsl
orb
fadds
sbb
xchg
sbb
cmp
push
addr16
cmp
stos
dec
imul
int3
jg
adc
push
mov
cmc
bound
daa
lcall
jecxz
pop
xchg
xchg
out
nop
jb
adc
scas
mov
sub
jge
mov
inc
into
or
imul
lahf
inc
addr16
scas
dec
in
or
fdivr
sub
pushf
nop
mov
in
les
xor
mov
shl
jnp
adcl
pushf
outsb
popf
xchg
mov
dec
and
sbb
inc
xchg
add
sbb
notb
jno
out
jb
js
dec
stc
dec
fadds
cmp
ret
dec
jecxz
fcompl
dec
xchg
push
mov
sbb
into
add
push
aam
mov
add
aam
cmpsl
sub
push
inc
jno
pop
cld
call
lahf
imul
mov
cmp
bound
xorb
jno
stc
or
testb
adc
nop
daa
xchg
outsb
stos
mov
inc
scas
inc
test
cmp
lret
inc
mov
fadd
aaa
cmp
jno
cmp
pusha
idivl
pop
mov
clc
lods
jg
fistps
ds
ficomps
sub
mov
iret
pop
loopne
outsb
test
dec
jnp
in
insb
loopne
fadds
push
fdiv
adc
pusha
sub
outsb
aas
rorl
out
adc
movsl
dec
out
test
or
or
shll
mov
movsl
xchg
daa
enter
aam
orb
inc
pop
jmp
stos
mov
fistpl
shrl
jg
mov
int
je
pop
call
lcall
sbb
sbb
add
cltd
scas
dec
cs
iret
push
fnsave
sti
add
js
push
adc
xchg
xchg
loopne
nop
ret
xor
pop
loope
sub
push
push
inc
aam
jns
stos
inc
sti
push
dec
lea
iret
dec
popa
and
sbb
ja
dec
or
push
rcrb
shrb
xchg
mov
scas
inc
inc
adc
lock
fsubrl
xchg
gs
es
sub
inc
jp
mov
lahf
mov
rcrl
outsl
not
jbe
jbe
ret
jl
pusha
xchg
jl
loopne
ret
mov
scas
mov
cmp
sub
xchg
pop
dec
outsb
pop
jns
call
adc
mov
in
std
cmc
adc
dec
int3
sub
repnz
xchg
xchg
sub
cmpsb
fwait
cld
add
mov
faddp
push
inc
sbb
cwtl
shlb
sub
push
push
xchg
movsl
adc
and
ret
popa
ds
in
jns
xchg
add
jns
push
cmp
aad
xchg
sbb
popa
xor
add
cld
call
test
out
ss
xchg
pushf
push
jg
mov
daa
ss
fnsave
jmp
cmpsb
in
leave
sub
fnstenv
in
lcall
add
icebp
scas
cmp
outsb
jbe
pop
das
dec
in
rcrl
aam
leave
xchg
subb
adc
sub
add
imul
out
int3
pop
and
xor
xchg
sbb
or
pop
test
incl
movsl
aad
aad
dec
inc
gs
mov
add
fisttpll
lock
les
mov
inc
out
cmp
ret
fldt
xchg
cmp
cwtl
pusha
test
mov
adc
test
mov
jb
out
jle
mov
xlat
insl
jnp
negb
adc
jnp
push
mov
aam
outsl
xchg
and
inc
sbbl
out
fimuls
pusha
idivl
fnstenv
dec
rolb
adc
aam
sub
inc
sub
inc
push
andb
inc
loopne
inc
sbb
push
sub
xor
iret
pop
jne
loope
mov
loopne
sub
js
xchg
clc
lods
std
add
and
jp
push
jmp
inc
ds
jl
jmp
repnz
cs
or
dec
imul
or
push
and
popf
sub
mov
push
cs
jle
add
addl
lahf
ret
xor
and
push
mov
xor
aas
push
fwait
data16
aam
jnp
lcall
imul
push
ljmp
negb
or
lret
bound
pusha
xlat
ret
subb
pop
ja,pn
add
xchg
mov
imul
aaa
xlat
mov
adc
add
cmp
and
push
adc
xor
test
shlb
insb
add
add
mov
stos
stos
fistpll
mov
cmp
aam
lcall
mov
dec
fstl
mov
jl
fsubrl
and
push
push
lds
outsl
addl
add
pop
xor
in
insl
lock
movsb
xchg
pop
dec
hlt
cmp
mov
adc
and
out
es
bound
cwtl
xor
fildll
lret
in
enter
pop
cmpsb
mov
insb
sarl
adc
cmpsl
sbb
adc
ss
add
nop
mov
lods
jl
lds
out
sti
test
stos
or
shl
or
adc
sub
jmp
cmpsl
add
dec
push
xor
push
pushf
subb
in
cwtl
dec
ret
rorl
xchg
xchg
test
mov
xchg
fs
mov
lret
in
nop
mov
push
mov
mov
in
jo
pop
sub
aam
xlat
ja
ss
dec
fimuls
fs
popf
aam
fcomps
dec
pusha
and
pop
push
xchg
cld
out
sbb
fs
xor
pop
jmp
popa
addl
arpl
subb
adc
ret
cmc
fsubr
dec
mov
mov
inc
fstl
xlat
in
out
mov
popf
or
dec
pop
cmp
loopne
cmp
mov
cmp
or
cs
in
out
add
mov
pop
lcall
aaa
fildll
stc
adc
mov
and
mov
insl
jns
data16
adc
in
ds
jne
mov
scas
out
push
jo
out
ss
mov
mov
cmp
dec
sahf
jns
push
test
adc
xchg
dec
fildl
dec
mov
orb
jge
push
movsb
mov
mov
push
repnz
shlb
pop
mov
lea
shl
mov
push
push
jno
jo
shr
lock
dec
jp
cmp
negb
popa
clc
adc
jg
arpl
mov
cs
into
add
push
mov
and
outsl
fwait
bound
je
mov
inc
push
les
pcmpgtb
adc
imul
daa
push
and
cmpsb
cmp
jmp
add
xor
mov
jb
loopne
dec
sbb
or
daa
mov
sbb
movsb
inc
xchg
jne
push
add
loop
sbb
in
test
mov
pop
sbbl
add
sbb
fs
outsl
das
cmp
mov
lcall
and
dec
dec
ror
das
cmp
pusha
adc
xchg
inc
xchg
mov
lods
movsl
jp
pop
cmp
fmulp
xor
rol
pop
stc
mov
add
mov
inc
and
jb
push
mov
pop
cli
mov
pop
add
cmpb
xor
or
mov
cltd
lods
les
inc
jns
sbb
mov
loope
test
pushf
mov
leave
lcall
push
jg
mov
fwait
adc
pushf
pop
sbb
cmpsl
ret
sub
shrb
sahf
aam
dec
or
mov
xor
cmpsl
fdivs
inc
mov
outsl
aam
mov
pushf
insb
psadbw
xchg
cs
xlat
mov
or
imul
inc
icebp
dec
mov
in
repnz
fcomps
mov
rclb
or
repnz
jbe
dec
sbb
pop
jae
inc
pushl
fdivrl
cmpsb
int3
arpl
pop
outsl
nop
add
cld
xchg
or
popa
lahf
sub
mov
test
xchg
xchg
sti
inc
mov
fists
mov
divb
lcall
fucomp
fisubs
mov
dec
dec
mov
mov
in
movsl
sub
out
xchg
cmc
movsl
rorl
or
pop
or
loop
mov
sbb
or
mov
push
divl
call
out
mov
mov
pcmpeqd
scas
sbbl
dec
mov
lcall
or
incl
add
mov
loope
jns
pop
xor
arpl
dec
xchg
sub
jl
sbb
mov
iret
adc
mov
xchg
nop
jb
mov
bnd
scas
push
insb
leave
or
xchg
pop
xchg
ss
sbb
cmp
cmc
xchg
icebp
mov
xchg
mov
aaa
movsb
jmp
or
dec
cwtl
xchg
loop
push
mov
es
inc
rcll
out
dec
mov
rol
mov
and
cs
pop
aam
push
js
mul
ja
fsubl
mov
ret
or
lret
int3
cmp
sahf
lcall
mov
push
mov
push
ljmp
dec
ficompl
dec
scas
adc
das
cltd
sub
lret
dec
bound
sub
das
sbb
xor
fucomi
test
mov
xchg
jne
aad
je
call
push
shlb
or
xor
jnp
inc
pop
mov
pop
xchg
sub
pop
adc
xor
mov
std
cltd
dec
add
add
adc
xor
ret
gs
xchg
loop
scas
bound
push
jmp
xchg
jno
ljmp
and
sbb
mov
push
js
jne
mov
jle
cmp
add
xchg
lds
mov
adc
fisubrs
push
cmp
xchg
fadds
adc
cmp
dec
stc
adc
and
xchg
push
out
xchg
subl
in
aad
jl
insb
sarb
ret
clc
popa
in
lods
adc
dec
fisttpl
xor
cmp
mov
icebp
mov
fdivs
add
pop
dec
lods
push
in
add
push
cmpsb
mov
xor
adc
pushf
sbb
data16
insb
add
add
pop
mov
xchg
cmp
xchg
jmp
nop
inc
fistps
mov
push
sbb
cmp
in
iret
xchg
sbb
push
xor
imul
mov
ja
jb
aad
imul
cmp
pop
scas
les
fiadds
jp
xlat
daa
aas
cmpsb
xor
pop
add
push
cmp
mov
aas
push
push
ret
int
cmp
pop
imul
fbstp
fiaddl
shlb
hlt
xor
mov
jno
and
and
sbbl
sti
js
mov
sbb
or
mov
imul
ret
dec
mov
mov
testl
stos
clc
dec
sub
jle
cmpsb
mov
pop
imul
inc
mov
imul
test
mov
and
and
mov
sub
xor
dec
push
bound
adc
addb
push
andb
adc
movsb
jmp
mov
pop
imul
loope
into
ja
push
xchg
inc
decl
mov
mov
adc
ss
or
cld
repnz
or
cmp
jecxz
lcall
lcall
jno
repz
and
xchg
xlat
xchg
inc
push
xchg
jns
imul
xchg
push
cmp
push
jno
pop
lret
and
jbe
xor
sti
mov
cwtl
mov
rcrl
scas
scas
xchg
mov
mov
xchg
shll
ja
out
icebp
and
js
cmc
sbb
add
ss
inc
mov
xchg
int3
inc
mov
je
test
cmp
mov
mov
pcmpeqb
test
xor
cmp
and
adc
movsl
mov
mov
and
xor
and
imulb
push
bound
in
jmp
inc
cmp
rclb
es
sub
icebp
push
movsl
loopne
sbb
daa
mov
sbb
mov
ficoms
or
sbb
push
outsl
inc
mov
mov
aad
out
test
inc
jp
mov
mov
sub
pop
cltd
mov
rorb
inc
test
add
enter
orb
jle
lahf
and
icebp
inc
sbb
mov
pop
lret
mov
insl
cltd
jno
inc
test
adc
or
or
inc
lea
cmp
cmp
xor
add
out
nop
cmp
in
adc
clc
xor
repz
fwait
mov
cmpsb
ja
jle
xchg
mov
inc
mov
movsl
es
mov
aaa
subb
or
xchg
aas
repnz
mov
sub
sbb
pusha
adc
jge
ds
clc
xor
mov
adc
outsl
shlb
les
mov
ret
cmpsb
cmp
scas
test
lea
ret
or
cmpsb
cmp
insb
hlt
movb
push
ret
call
sub
movsl
sbb
adc
sub
aam
xchg
xchg
sbb
jb,pt
seta
call
outsl
and
xchg
cmp
imul
jb
inc
ljmp
add
mov
dec
lock
iret
cld
ljmp
daa
inc
mov
cmc
dec
aad
sti
sbb
sbb
repnz
bound
pushf
movsl
sub
push
iret
lret
fnsave
in
fsubl
lea
xchg
dec
lret
imul
sbb
xor
int3
mov
pop
cmc
popa
rcll
cwtl
pop
pop
test
and
cmp
sbb
pop
or
leave
fnsave
lock
js
inc
fsubrl
enter
or
push
mov
sub
lret
fs
test
pop
mov
pop
cmpsl
jl
or
leave
sbb
xor
add
pop
mov
mov
pop
sbb
adc
out
lret
ja
and
hlt
repnz
in
and
xor
imul
aas
in
enter
xor
in
push
inc
cmp
cmp
push
lods
pusha
loopne
fldl
sbb
cmp
punpcklwd
sub
ds
add
insb
sbb
dec
push
test
out
dec
out
repz
and
mov
jbe
fucomp
sub
mov
dec
cwtl
bound
push
jp
les
mov
movsb
daa
mov
add
sub
ja
dec
xor
add
mov
mov
add
imulb
shll
mov
ja
xchg
test
ret
in
adc
inc
pop
xchg
nop
lret
je
adc
dec
loope
jge
lds
cmpsl
inc
pop
adc
mov
imul
call
xor
lahf
jbe
fldcw
sbb
les
std
xor
mov
mov
test
into
mov
pop
inc
aaa
jae
test
cmc
ret
mov
mov
or
pop
mov
or
daa
aas
ds
inc
push
mov
pop
mov
push
out
lcall
xchg
test
mov
int
sbb
xchg
in
repz
inc
sub
mov
mov
out
pop
xor
pop
imul
les
push
neg
out
das
xchg
and
dec
nop
sbb
pop
or
jle
mov
pushf
aas
and
jae
jae
sbbb
mov
fstpl
inc
cltd
mov
push
jae
push
repnz
inc
out
cld
lock
inc
cmc
das
les
xchg
scas
loope
or
xchg
cli
adc
mov
mov
dec
scas
inc
mov
dec
movsl
inc
js
mov
push
shrb
lcall
fildll
xor
arpl
sub
dec
test
andb
and
negl
cmc
in
daa
dec
xchg
sub
mov
shll
xchg
sub
out
or
popa
and
mov
xchg
sub
outsb
or
push
mov
or
imul
or
mov
jg
xchg
xchg
and
test
stos
dec
mov
loope
aad
push
fmuls
out
repnz
mov
mov
inc
mov
data16
test
push
loope
lahf
mov
sti
dec
cltd
mov
dec
adc
ss
es
test
cmp
xor
push
pop
jecxz
xorb
test
in
push
mov
aaa
insb
mov
mov
lcall
rcr
scas
push
lcall
out
mov
nop
jae
cmpsb
push
popf
pusha
dec
fimuls
jns
adc
divl
dec
pop
mov
ljmp
fdivs
repz
inc
xchg
pop
pop
lret
lcall
xor
icebp
aam
outsb
and
or
mov
pop
insb
sub
iret
cs
not
dec
into
lea
cmp
or
push
pop
insl
int3
call
idivb
out
imul
shll
pop
loopne
ss
jo
adc
dec
mov
pop
jbe
mov
push
cs
popf
mov
jp
jno
push
mov
and
xchg
mov
sti
jecxz
mov
push
ss
addr16
and
out
mov
clc
or
cmpsb
jns
cltd
data16
lret
repnz
mov
stos
lods
xor
aam
mov
scas
or
cmc
inc
dec
inc
movl
mov
sbb
mov
or
inc
mov
or
ja
sub
jmp
mov
push
ljmp
jno
add
mov
jne
test
push
lea
cmc
or
lods
inc
jo
orl
jae
cwtl
lret
aaa
dec
pop
int3
into
fbld
insl
sbb
jmp
or
push
adc
sub
inc
or
pushf
push
ret
mov
cwtl
dec
sbb
adc
arpl
pop
jns
cmpsb
cmp
into
push
pop
push
mov
jp
popa
cmp
xlat
xlat
pop
mov
outsb
add
or
dec
push
cmp
adc
scas
icebp
or
cmpsl
push
ss
rol
repz
hlt
rolb
mov
pop
lahf
out
xor
subb
popf
dec
aam
xor
aaa
xchg
imul
movsl
out
popf
neg
ljmp
jae
jne
fidivl
pop
inc
gs
xor
in
mov
roll
inc
push
in
fimull
or
pop
adc
lock
adc
jno
andb
sbbb
fisubrs
jne
das
cmp
jmp
sahf
mov
int3
mov
and
push
popa
cmp
hlt
cmp
enter
ja
jae
dec
popa
clc
jnp
sbb
lods
dec
mov
mov
fists
add
xor
movsb
ja
sbb
fstpt
nop
add
rcl
enter
push
ret
cmpsl
jmp
outsb
add
push
nop
dec
inc
inc
jnp
mov
fcmovb
rorb
daa
jmp
mov
imull
add
iret
push
or
in
sarl
cmpsl
ret
jle
ja
push
mov
mov
test
cmp
out
sti
cltd
lock
ficoms
les
add
bound
mov
push
mov
mov
cmp
sbb
and
add
adc
xchg
fdivrl
mov
jmp
push
xor
xchg
dec
aaa
out
sbb
out
sti
outsl
sti
stos
xchg
xor
adc
rcr
loopne
dec
leave
pop
mov
sbb
lret
movsb
jnp
test
loope
daa
mov
jnp
fcmovnbe
insl
xchg
lods
mov
outsb
sbb
cmpsb
subb
jo
pavgw
cwtl
lods
push
mov
fldl
push
mov
mov
movsb
lcall
popa
sub
xchg
cmp
cmc
lods
inc
fidivs
cmp
push
or
int
mov
push
scas
mov
fdivl
dec
hlt
sub
inc
sarb
or
or
xor
mov
mov
jg
popa
xlat
clc
mov
into
cmp
pop
and
in
sub
sbbl
mov
cmp
repz
cmp
push
test
jne
shrl
daa
lcall
cmp
xchg
pushf
add
add
mov
push
in
addr16
pop
ret
sub
mov
pop
xor
xor
roll
shlb
mov
push
jbe
pushf
inc
cmpsl
and
cmp
inc
adc
mov
cmpb
push
pushf
xor
loope
pop
adc
cmp
mov
test
cmp
popa
outsb
add
xadd
vmovsd
jno
push
push
int
lea
adc
add
sbb
and
adc
sbb
stc
testl
lret
sti
xchg
nop
mov
movsl
icebp
inc
dec
inc
fwait
repnz
add
out
adc
inc
push
mov
mov
imul
inc
aam
mov
movsb
and
sub
xor
fs
push
insl
cli
es
out
pop
das
lock
xor
push
shlb
mov
dec
addl
xchg
xor
xor
shll
push
les
setge
cmp
imul
sbb
pop
sbb
mov
lods
hlt
call
pop
nop
mov
ucomiss
sbb
dec
mov
jno
arpl
pop
popf
test
sahf
cmp
push
test
pushf
fnstenv
push
daa
ljmp
push
cmpl
and
push
scas
jecxz
pop
jg
lds
jp
mov
int
sti
push
pushf
lds
jmp
shrb
mov
data16
addr16
fs
mov
push
std
cmpsl
xor
jo
mov
or
push
cmp
imul
or
sub
sub
mov
cvtps2pi
mov
ss
das
movsb
push
push
hlt
dec
repnz
das
mov
and
inc
sub
out
test
mov
inc
or
cltd
xor
cmpsb
sarl
sub
ret
push
lcall
lahf
jecxz
repz
cmp
outsb
add
mov
loopne
pop
xchg
test
cmpsb
add
popf
shll
outsw
add
mov
add
mov
jl
pop
cmpsb
test
pop
mov
out
loopne
jnp
mov
data16
jno
jne
pushf
dec
mov
lds
stos
outsl
xchg
lea
mov
shrl
inc
xor
test
out
lods
and
rorl
push
ret
stos
fsub
lea
jl
in
cmp
sbbb
fisubrl
add
pop
fbstp
int3
icebp
lahf
mulb
lods
or
pushf
xor
and
inc
jne
jns
fs
hlt
sbb
int
ja
lcall
cs
add
push
cld
pop
pop
mov
mov
push
in
fwait
sahf
jb
movsl
inc
out
mov
adc
mov
js
sbb
fimull
and
and
mov
fdivr
mov
test
and
cmp
imul
sbb
lret
dec
fcoms
mov
in
and
or
sbb
pop
xor
test
mov
pop
std
sub
dec
push
nop
push
lods
mov
mov
sbb
iret
test
fsubp
mov
es
clc
jnp
out
pusha
test
mov
jnp
mov
cmc
pop
dec
adc
xor
lahf
xlat
push
scas
inc
rorb
call
cli
stos
push
sub
or
les
mov
je
xor
fcoml
dec
out
and
or
bnd
and
fcomps
xchg
mov
dec
push
lea
mov
pop
fbstp
sub
or
cmp
rcr
inc
mov
sub
imul
out
imul
mov
sbb
fidivl
mov
xchg
jb
mov
loop
out
pop
cmp
ret
jnp
cltd
adc
adc
rcl
xchg
hlt
repz
mov
pop
push
in
jg
iret
je
sbb
movsb
xchg
pusha
es
mov
stos
loop
or
dec
je
mov
popa
and
adcb
pushf
jg
insb
cmp
xchg
xor
ds
fisubl
into
mov
vmread
rcrl
dec
in
std
pop
push
sub
pop
jecxz
fsts
jge
stos
cmc
ds
in
pop
divb
add
gs
jp
xchg
mov
inc
fdivrs
sbb
test
xchg
jge
and
ss
mov
jmp
mov
inc
enter
xchg
movb
dec
push
jne
pushf
popa
not
les
cli
and
aad
mov
add
sub
xchg
outsl
jle
push
ror
and
sub
je
xor
popa
xor
sbb
divl
cmp
scas
in
js
roll
inc
in
sbb
mov
mov
fists
jnp
inc
mov
sarb
mov
in
fisttpl
cwtl
jge
stos
mov
iret
jmp
fidivrs
fs
inc
ret
repz
mov
stc
out
push
mov
cmp
and
push
fisttpll
scas
mov
in
icebp
xchg
push
add
js
mov
data16
les
xchg
jle
stos
repnz
repnz
stos
lea
je
dec
dec
add
adc
mov
lds
prefetchnta
push
ljmp
fstps
pop
dec
jae
pop
roll
jno
fdivs
xchg
jnp
int
cmpsl
dec
testb
jl
addr16
popf
add
ret
fstl
and
pop
dec
jge
or
clc
loope
mov
mov
ss
clc
pushf
fists
inc
imul
push
cmp
lods
mov
push
out
dec
xchg
insb
ja
aad
rcrl
jnp
pusha
vaddsubpd
insl
sbb
out
mov
sbb
ljmp
rcr
or
xchg
cmp
dec
dec
xchg
addl
sub
mov
sub
movsb
pop
inc
fstpt
sbb
jne
bound
cmc
les
not
stos
jmp
xor
pop
les
fdivrl
sub
pop
inc
mov
cli
outsb
add
jge
mov
adc
cli
adc
mov
sahf
ja
inc
out
fwait
sub
pop
aam
pop
push
inc
mov
jae
aaa
push
stos
lods
xor
popf
mov
repz
push
inc
in
addr16
clc
push
push
jo
add
and
call
cs
test
imul
ja
lds
incb
mov
xchg
jo
rcll
stos
xor
test
cmc
rcl
aam
dec
loopne
jp
push
push
movsl
cmp
push
cmp
js
pop
cmpsb
je
xor
mov
mov
filds
btc
gs
inc
dec
push
mov
push
push
xor
dec
mov
sub
loop
dec
in
mov
int3
xchg
xor
pop
mov
cmp
mov
out
push
popa
je
fsubrs
inc
xchg
out
cld
icebp
pop
ret
mov
imul
mov
pop
enter
mov
stc
stos
push
sub
fwait
cwtl
fidivs
scas
and
popf
cld
iret
dec
jl
das
pop
xor
and
push
imul
xlat
sub
aad
aam
mov
ficoms
push
push
insb
loop
es
mov
mov
pop
movsb
outsb
sub
les
orl
cmp
jne
pop
outsb
rorb
adc
dec
lcall
fildl
pop
loopne
xchg
cmpsl
jno
mov
dec
pop
outsl
inc
out
out
add
cmp
add
stc
test
adc
seto
jecxz
pop
and
xchg
mov
or
jno
mov
adc
xchg
mov
lods
cli
cmp
fldl
cmp
hlt
xchg
cmp
into
xor
jb
jns
shr
xor
fbld
imul
add
out
sti
pusha
cwtl
mov
add
mov
pop
in
nop
ds
xchg
daa
mov
dec
cmpl
add
in
xchg
loop
fcomi
fadds
push
loope
mov
inc
iret
fdivrp
or
fstpt
mov
bound
fadd
add
sbb
mov
pushf
aad
dec
int
sub
push
in
adc
lds
insl
stc
insl
mov
mov
mov
mov
mov
cs
std
and
mov
xchg
lods
fucomp
ss
lock
gs
out
bound
mov
dec
out
cmp
lods
xchg
sbb
cmc
mov
jne
scas
insl
loop
dec
and
or
movsb
dec
subl
leave
loope
es
adcb
xchg
xor
insb
fs
daa
mov
negl
sub
aad
xor
das
dec
pusha
ss
xor
mov
pop
out
sbb
dec
and
aad
into
mov
dec
test
adc
fsubr
dec
outsb
sub
shrl
into
fwait
lock
sbb
nop
mov
imul
add
ljmp
xchg
sub
push
mov
lret
sbbl
shll
lahf
das
push
push
aas
inc
ljmp
xchg
sub
xchg
sub
pop
in
mov
fs
cltd
cvtps2pi
fs
dec
jb
aaa
popa
xchg
mov
lret
mov
lods
rcr
sbb
popa
fsts
call
in
cmp
jo
scas
out
lahf
push
ficomps
mov
and
mov
sbb
adc
loop
fbld
mov
iret
cltd
outsl
std
and
or
cwtl
add
cli
movsl
in
cmp
adc
dec
insl
mov
cmpsl
clc
cmp
jno
mov
sub
sub
pop
addr16
dec
out
xchg
addl
jecxz
imul
add
mov
repnz
push
dec
mov
arpl
cli
imul
jle
sub
aas
jns
inc
fs
in
pop
cmpsb
movups
xchg
mov
into
xor
push
jno
or
or
and
imul
mov
scas
mov
and
test
push
or
sti
aaa
insl
jl
test
dec
dec
push
pusha
inc
mov
fcoml
addr16
mov
and
sar
ds
out
jnp
adc
rol
jbe
mov
mov
dec
or
popa
pop
dec
scas
dec
outsb
testb
push
dec
rcr
inc
stos
flds
in
bound
push
mov
inc
pop
xor
lock
xor
ja
mov
fwait
cs
sub
mov
dec
push
dec
cmp
jg
out
dec
scas
shlb
inc
mov
fs
adc
js
ret
pop
add
andb
and
mov
addr16
mov
sub
lret
das
cs
fstps
test
or
js
cmc
push
mov
mov
cltd
jmp
inc
jg
jnp
stos
mov
cmp
clc
int3
sub
fmuls
or
adc
push
jnp
add
xchg
stc
inc
mov
setns
outsl
in
ret
mov
and
inc
bound
mov
push
aaa
push
pusha
inc
or
cmp
mov
sub
fldt
push
adc
js
enter
or
mov
jl
mov
std
jmp
mov
fwait
or
sbb
pop
sub
lock
sbb
pop
repnz
pop
pop
xor
or
es
fstpl
lods
add
loope
push
cmpsl
dec
rcrl
push
lds
leave
cmp
je
jg
arpl
add
mov
fdivrl
pushf
stos
push
inc
xchg
sbb
pop
inc
pushf
add
push
jmp
rcrl
push
in
dec
icebp
movq2dq
lods
jae
xlat
adc
outsb
xchg
dec
sub
mov
arpl
in
lea
inc
inc
push
daa
mov
sub
data16
imul
pusha
hlt
push
inc
fildl
mov
adc
push
scas
add
sub
insl
add
dec
pop
fcmovnb
aad
fldt
aam
gs
in
out
cmpsl
adc
dec
cmp
push
pop
cmp
and
and
movsb
in
fidivs
inc
mov
ljmp
call
dec
sbb
les
mov
add
mov
mov
leave
insl
stos
mov
ret
pop
mov
out
es
subb
outsl
fisttps
jno
aad
gs
mov
gs
or
and
in
push
jne
mov
mov
push
mov
dec
mov
cmpsb
cmp
xchg
mov
inc
xlat
add
test
jecxz
pop
cwtl
negl
mov
or
out
sub
in
mov
xchg
in
enter
sbb
or
xchg
or
arpl
cmp
and
int3
adc
sbb
push
test
push
push
xchg
push
stos
mov
sahf
out
push
in
pop
rolb
lds
sahf
outsb
xlat
push
lret
jb
pop
cltd
mov
dec
nop
daa
cmp
xlat
outsb
insb
bound
xlat
adc
nop
xchg
cmp
xor
mov
dec
lcall
xchg
leave
xchg
out
pushf
push
hlt
inc
mov
cmc
sbb
add
outsl
mov
sub
mov
lods
or
xchg
ret
lods
flds
pop
repnz
xor
jno
sarl
jmp
repnz
sub
clc
repz
movsl
push
lds
inc
movsl
fdivrs
mov
stos
and
fcomp
adc
push
mov
pop
das
add
add
xchg
test
lahf
adc
lahf
and
call
in
add
das
jg
aad
fiaddl
jnp
daa
jno
rorl
aaa
and
jl
nop
xor
push
lea
mov
cwtl
adc
jecxz
outsl
cmp
mov
jae
sub
popa
stos
mov
or
outsb
inc
jmp
adc
cmp
mov
xchg
nop
fdivrs
out
or
in
sbb
cmpsl
sbb
pushf
scas
push
pop
dec
add
dec
fsubl
cmpsb
inc
jmp
cmp
jle
std
jle
rorl
std
mov
popf
fadds
pop
mov
fcmovbe
call
xorb
mov
ret
clc
mov
into
lea
jns
push
popf
xor
fwait
cmp
lds
pusha
popf
fwait
xchg
push
fmul
mov
stos
add
and
sub
shlb
mov
sub
or
sub
or
inc
pop
nop
daa
test
mov
sub
enter
xor
loop
aas
jbe
mov
cmpsl
xchg
adc
mov
fidivl
add
inc
push
push
add
cmp
mov
xlat
jbe
lahf
ss
xchg
jge
outsl
inc
movsl
decl
cmp
push
sbb
pop
sub
jl
out
cmp
faddl
xchg
int
scas
inc
inc
in
sbb
fisttpl
or
xor
fdivr
int
or
out
pop
xchg
sarl
add
mov
xchg
scas
push
push
icebp
popf
mov
rep
jns
jl
push
mov
scas
int3
xor
inc
cmp
xor
or
jne
inc
loopne
insb
rclb
pop
fadd
mov
push
xchg
fs
push
cmp
or
mov
xor
clc
sub
xor
clc
inc
incb
test
push
hlt
pop
push
in
lret
shlb
iret
fldt
je
pop
out
rorl
dec
sbb
dec
jno
mul
sbb
xor
cmp
inc
lahf
outsl
jge
sub
cmp
out
lds
mov
sti
xchg
add
inc
or
hlt
iret
outsl
out
outsl
pop
les
cmp
call
pop
repnz
xchg
jns
or
mov
xchg
lods
sub
mov
int
hlt
fs
out
lcall
mov
int
jg
cld
jno
mov
shll
pop
xchg
sub
mov
call
leave
shll
test
and
ja
jno
inc
mov
add
sbb
notb
je
insl
shl
jbe
movsb
out
xor
bound
pop
xchg
enter
push
scas
xchg
jecxz
mov
ret
dec
rcrl
mov
loop
jle
pusha
enter
push
mov
fists
enter
lcall
inc
cmp
sub
shrb
ja
cmp
loop
shrb
in
mov
loopne
dec
dec
inc
sahf
stc
xor
mov
xchg
pop
adc
or
and
leave
out
mov
cld
scas
test
sahf
ds
push
sti
out
mov
xchg
inc
popa
pushf
in
xor
adc
data16
add
jmp
cmp
pop
scas
mov
pop
in
fidivs
mov
ss
sbb
mov
test
sbb
lods
mov
sbb
sub
add
sub
rolb
push
call
out
fistpll
pop
or
mov
cld
ret
and
test
cli
pushf
dec
inc
add
pop
data16
xchg
ds
out
stos
test
and
stc
lea
sub
or
clc
pop
adc
adc
das
sbb
sub
add
mov
mov
mov
add
push
fstp
sub
stos
pusha
jge
push
inc
adc
jb
mov
mov
aad
xchg
mov
sbb
movups
push
pop
push
fcom
mov
xor
cmp
out
and
inc
sbb
dec
jge
clc
cmc
dec
cmpsl
or
repz
push
hlt
mov
rcrb
sbb
arpl
pusha
jns
sbb
test
xchg
imul
sub
sti
jp
imul
roll
jno
mov
mov
and
out
xor
jge
push
lds
cmp
add
int
imull
addr16
and
in
cmp
mov
inc
lahf
mov
xor
xchg
mov
add
cld
or
xchg
ss
fwait
mov
out
je
in
test
ss
pushf
mov
adc
and
add
mov
ficoms
push
stos
push
mov
push
das
movb
lret
gs
dec
int3
push
and
mov
ficomps
jle
scas
loop
and
sub
out
cs
dec
dec
sub
rcrl
dec
loopne
inc
push
call
push
scas
sahf
xor
out
cld
xchg
stc
or
mov
ds
daa
jo
inc
dec
push
mov
mulb
out
mov
xlat
mov
or
cmp
cmp
aas
xchg
insl
mov
fdiv
mov
sub
cli
xchg
insb
add
add
jge
pop
test
mov
imul
push
mov
push
out
xlat
adc
or
outsl
daa
xor
fdivl
into
sub
sarb
sbb
dec
dec
push
mov
add
out
mov
jp
add
sbb
adc
xor
stos
arpl
xchg
decl
fdivl
negb
mov
and
push
push
in
jge
add
xchg
jne
xchg
lods
inc
fs
adc
stos
sbb
je
imul
jecxz
shll
leave
add
push
sbb
out
pop
out
xchg
ss
sarl
mov
cwtl
das
dec
sub
test
stos
xlat
dec
jecxz
int3
insb
add
sub
pop
sub
rcrl
push
jnp
movb
push
and
and
movsbl
aad
xor
lea
xchg
mov
ja
out
mov
add
xchg
cmp
cmp
cmp
cld
jns
adc
int
das
jl
pop
test
cmp
mov
fcoml
or
xlat
outsb
insb
cmp
lods
inc
fcoms
lret
bound
jecxz
xchg
sbb
mov
out
sub
cmp
dec
in
repnz
and
insb
add
mov
jae
adc
stos
test
movsl
mov
fldcw
or
sbbl
dec
fmul
popa
or
and
rcrl
repnz
shrb
cmp
xchg
aaa
cli
xchg
imul
test
aam
mov
cmp
jle
insb
mov
pusha
testl
iret
jne
std
add
sahf
xor
les
std
mov
das
pop
loop
push
cmpsl
xchg
dec
out
es
cmp
fildl
mov
int3
arpl
dec
aam
jle
xchg
rorb
in
jle
push
jmp
mov
insb
add
inc
xlat
movsb
mov
xor
mov
mov
jl
es
fldl
mov
int
lods
sub
fistpll
xor
jne
cmpsl
cmpsl
scas
adc
scas
inc
mov
js
lods
inc
cmpsl
mov
sahf
xor
jl
mov
jle
dec
scas
push
ss
ja
mov
sahf
mov
iret
jge
sub
rcrb
add
sub
pop
xchg
loop
lds
xchg
push
mov
pop
jae
mov
in
je
mull
ret
push
movsl
clc
cmp
insl
sbb
dec
mov
jo
dec
mov
enter
sub
in
pop
leave
push
mov
lret
sti
sub
xchg
leave
pusha
pop
leave
sbb
add
pop
mov
inc
lret
cli
push
jmp
pop
push
aad
inc
lret
mov
cli
aad
mov
pop
adc
enter
add
wrmsr
aam
gs
fcoms
in
jecxz
and
insl
and
out
pop
mov
add
je
scas
inc
popa
mov
sbb
jae
aaa
into
push
mov
mov
jns
leave
pusha
push
lcall
ss
arpl
aaa
into
push
mov
jecxz
ret
repz
sub
push
mov
push
ljmp
push
out
pop
mov
cmp
and
inc
mov
in
or
cli
xchg
outsl
and
push
mov
stos
inc
repnz
in
test
adc
jmp
inc
fdivp
cmp
pop
sahf
push
test
fadd
insl
add
dec
movsb
cmp
xchg
sbb
add
adc
inc
lahf
cld
xchg
into
iret
mov
mov
inc
xchg
adc
add
lods
inc
xchg
mov
and
aad
push
xchg
sbb
xchg
dec
cmpl
or
cltd
sbb
repz
mov
fwait
repnz
mov
pop
pop
mov
mov
jo
sub
pop
jne
daa
test
xchg
stos
adc
inc
jnp
mov
aam
loop
jnp
daa
stos
sbb
gs
jnp
aad
adc
mov
xor
jo
stos
in
loop
jge
push
mov
dec
in
popa
loop
xchg
hlt
mov
mov
out
repz
sbb
dec
lock
push
in
testb
je
sbb
stos
lock
outsl
push
xlat
inc
sbbb
pop
lret
bound
add
push
js
mov
or
cltd
add
scas
inc
int
daa
mov
jae
or
lds
inc
pop
out
out
cmp
bound
mov
mov
mov
sub
aam
push
push
das
leave
loopne
daa
jecxz
pop
xorl
lods
outsb
fs
sahf
jae
cld
mov
ret
rep
dec
in
das
addr16
pop
test
mov
ja
scas
imul
dec
mov
jle
xor
jb
mov
jge
nop
mov
cmpsb
cmp
popf
jns
add
cmp
mov
or
mov
arpl
mov
popa
es
xorb
mov
xchg
addr16
xchg
xorl
or
loopne
sbb
lcall
pop
lock
push
add
cmp
jp
or
push
mov
inc
adc
cwtl
inc
fbld
or
pop
push
movsl
inc
pop
mov
rorl
aam
adc
mov
push
inc
aad
out
fidivl
jns
adc
arpl
pop
cltd
sbb
in
jne
test
or
lds
pop
lock
sbb
fisubrl
xor
xor
mov
notl
adcb
fiaddl
test
bound
lret
xor
in
inc
push
push
inc
xchg
add
arpl
mov
jmp
cmp
mov
mov
mov
ficoms
adc
test
or
xchg
mov
xchg
shlb
xchg
loope
movsl
push
mov
leave
out
sub
or
xchg
mov
xchg
sub
aam
add
sbbl
push
fstpt
jp
int3
stos
pusha
gs
int3
aas
push
mov
mov
pop
sbbb
jno
cmp
les
loopne
inc
pop
dec
add
jns
pop
fnstenv
mov
ja
loope
das
cmp
and
pop
cwtl
das
mov
scas
loopne
mov
sub
std
xchg
xor
xor
cwtl
sbbb
stos
mov
jb
cmpsl
sahf
jnp
iret
push
repnz
lock
xor
sti
jg
sub
push
fwait
div
mov
xchg
xchg
mov
fnsave
call
addb
cli
and
aad
shlb
fdivrs
into
sub
push
mov
sbbl
pop
add
mov
cmp
jne
adc
push
loopne
xor
push
fmuls
jns
inc
pop
jp
je
pop
mov
imul
pop
jl
fimull
mov
test
inc
or
cmpsl
bound
jb
pop
mov
pop
pop
test
adc
inc
push
cltd
sub
daa
pop
lods
pop
pop
gs
xchg
xchg
push
mov
mov
inc
cmpsb
data16
rorb
and
jl
fistps
adc
fwait
xchg
jl
jae
ja
orb
pop
push
xchg
ds
sbbb
lods
subb
rcl
pop
adc
les
in
enter
sbb
push
stos
xchg
cmp
push
test
test
or
jge
bnd
mov
fnstsw
ret
hlt
leave
mov
xchg
iret
dec
aad
mov
hlt
repnz
aaa
lock
movsl
cmp
mov
std
sub
out
sbb
loop
in
data16
ss
dec
loop
fidivl
add
aaa
popf
addr16
jo
jne
jns
in
sub
mov
push
xchg
scas
mov
or
mov
pop
mov
xchg
test
je
movsl
sti
mov
into
jecxz
pushf
xchg
outsl
scas
sub
adc
sbbl
repnz
push
in
fsubs
in
mov
pop
stc
mov
out
scas
sbb
xor
adc
dec
js
mov
aaa
xchg
xor
push
jle
fsts
popf
mov
and
scas
jg
imul
xchg
sbb
xor
in
fdivs
loop
in
mov
pop
mov
adc
cwtl
lea
push
orl
cltd
js
pop
dec
sbb
push
dec
sub
and
add
call
loop
loop
and
sarb
jno
cmp
dec
ja
std
das
fisubs
leave
ljmp
xor
xlat
cmp
cmpsl
jns
jmp
lods
fnsave
pusha
scas
loope
pop
sbb
outsb
xor
popa
mov
jl
xor
jp
je
jmp
lea
mov
leave
test
hlt
in
repnz
lret
fsubrs
icebp
out
in
and
mov
ret
loope
enter
or
mov
jecxz
and
in
rorl
cmp
loopne
scas
cmp
pop
or
pop
mov
xchg
jl
lret
mov
jns
sub
mov
dec
cmp
push
cmc
xor
flds
pop
int
outsb
clc
mov
jb
mov
jb
push
in
and
mov
outsb
adc
das
mov
jb
jae
cmp
pop
cmp
push
rolb
les
push
cmp
xchg
mov
xor
std
pop
int3
mov
add
lahf
arpl
dec
cmp
daa
loopne
jb
push
movsb
clc
xor
dec
rcr
xor
imul
lret
cwtl
mov
push
pushf
xchg
and
hlt
stc
push
mov
push
inc
xchg
sbb
hlt
cmpsl
pop
mov
ret
js
fsubp
pop
cli
lret
faddl
in
mov
mov
out
lahf
test
cli
push
cmp
in
shlb
stos
jp
imul
clc
pop
mov
pop
out
and
in
and
loop
sbb
mov
insb
inc
ffree
mov
in
lods
insb
stos
movsb
cmp
call
repnz
ret
enter
dec
ret
loope
aad
xchg
add
cmpsl
adc
cmp
jl
in
sbb
negb
ss
lret
aas
push
jno
aaa
push
pop
in
mov
sbb
push
rorl
cmp
sub
sub
xor
add
jl
psubb
and
pusha
xor
fisubl
pop
ss
inc
mov
push
or
jae
cltd
cmp
mov
cmp
jns
mov
stos
pop
push
cwtl
pusha
jmp
call
subb
std
aas
jns
xchg
inc
fucomi
dec
loop
fdivrs
int3
fidivrs
ret
mov
adc
cwtd
xchg
out
mov
in
hlt
mov
push
pop
aad
cmp
aaa
andl
or
cmpb
inc
mov
pusha
lock
cwtl
dec
sbb
je
shlb
movl
aad
or
mov
movsb
jge
adc
outsl
push
jae
dec
shl
mov
fisubrs
mov
shl
jle
inc
dec
roll
push
xorl
mov
cwtl
cmp
xchg
aam
mov
pop
roll
rclb
cmp
xchg
and
popa
clc
mov
dec
mov
xlat
sbb
js
jmp
jecxz
scas
repnz
dec
sub
insl
dec
andl
pop
lea
sub
je
popa
push
shll
xor
out
mov
push
sbb
push
xchg
sub
sbb
xchg
mov
es
xor
sbb
jge
pop
ret
xor
sbb
jno
adcb
hlt
popf
orb
sahf
orb
ja
sbb
add
xchg
in
cltd
xor
imul
adc
xor
sub
pop
add
pop
xchg
pop
adc
nop
mov
xor
icebp
sub
lret
fisttpll
dec
pop
aad
popa
fimuls
dec
call
scas
xchg
outsb
adc
mov
jo
jb
push
dec
imull
outsl
pop
int3
inc
imul
mov
flds
jl
cmpsl
mov
je
mov
cmp
and
inc
mov
jae
fiadds
pop
mov
lds
inc
lret
adc
rcrb
pop
sahf
adc
test
test
jns
ljmp
cwtl
jmp
jnp
shll
rorl
arpl
mov
data16
jns
or
jg
stc
mov
jae
add
fs
mov
ficomps
mov
pushf
pop
aad
hlt
xchg
mov
push
mov
shlb
cmp
shll
mov
sbb
and
in
xorl
push
daa
inc
mov
push
ljmp
mov
cmp
mov
xor
sub
push
adc
push
shll
out
and
and
rolb
in
jecxz
test
sahf
mov
xorl
push
mov
adc
jle
mov
hlt
lods
rcrb
out
iret
data16
jg
dec
mov
mov
push
call
nopl
mov
std
lret
jmp
lods
push
lret
popf
test
inc
cwtl
mov
stc
test
dec
mov
mov
cmp
cmp
fildl
or
sti
lahf
mov
imul
stos
mov
adc
mov
es
push
jmp
add
sbb
movsb
adcl
out
cld
pop
iret
lret
xor
loopne
jmp
xlat
out
es
or
or
enter
push
add
mov
imulb
inc
jno
andb
outsb
mov
out
je
imul
cmc
imul
mov
adc
and
pop
or
rorb
inc
call
imul
dec
mov
stc
rcrb
psubb
sbbl
test
fcmove
dec
in
mov
clc
shll
pop
adc
stc
es
data16
faddl
jns
roll
mov
lahf
mov
ss
adc
adc
sahf
aam
add
xchg
push
addr16
push
pop
dec
scas
insb
dec
push
add
inc
mov
faddl
push
mov
imul
std
cld
inc
or
inc
sbb
pop
pushf
dec
out
es
psubd
pusha
dec
cmp
inc
pop
js
arpl
stos
aas
gs
insl
ss
sub
xchg
mov
dec
fs
push
fs
and
and
movsb
pop
shrb
std
push
ret
mov
test
clc
xchg
into
push
leave
push
mov
and
mov
jecxz
adc
cmpsl
ds
and
jno
sub
mov
adc
shll
inc
shl
rcrb
sub
xchg
xchg
iret
jl
jne
nop
cmp
add
mov
nop
add
sbbl
ljmp
xor
jp
ret
mov
mov
sbb
xchg
mov
sub
out
mov
push
or
add
jl
push
xchg
xlat
xor
mov
into
test
mov
test
push
in
adc
xchg
xor
or
mov
fmuls
sahf
mov
fnsave
in
in
jae
hlt
mov
decb
mov
inc
mov
push
push
inc
mov
inc
pop
push
scas
outsl
inc
mov
shll
aaa
jb
pop
adc
add
push
sub
outsl
ljmp
push
mov
rcr
and
pop
xchg
aad
imull
mov
icebp
ret
dec
mov
imul
test
xchg
shl
push
rcr
frstor
loop
cmp
in
scas
pop
repnz
mov
inc
or
subl
push
loope
test
pop
daa
stc
pop
xlat
jno
and
adc
rorb
pusha
int3
arpl
mov
push
xor
shrb
jne
inc
nop
int
pop
ficomps
mov
add
jne
and
nop
inc
dec
xchg
pop
push
es
push
jns
addb
pushl
sarb
negl
stc
popa
push
enter
addr16
mov
pop
mov
sti
xchg
aam
in
aam
pop
rcr
fcoms
roll
fsub
sahf
xor
cli
aas
call
repz
aad
dec
ljmp
cmp
incb
hlt
push
movsl
mov
push
push
shrb
fidivrs
cld
xor
aaa
inc
mov
push
repnz
lcall
sbb
fisubs
jo
nop
jns
pop
scas
jno
pushf
mov
xchg
test
pop
inc
adc
jbe
icebp
sub
cmp
aas
jno
inc
pop
pop
shlb
outsl
mov
jno
imul
ds
mov
inc
jmp
or
int3
shl
xchg
sarl
and
adc
lods
pop
std
pushf
sbb
and
hlt
cmp
in
xchg
sub
stos
int3
push
adc
xchg
mov
out
test
add
lds
sbb
mov
dec
push
flds
int3
pop
leave
leave
daa
mov
fistpll
or
mov
inc
push
jmp
sarl
sub
mov
call
loop
or
push
in
shlb
push
sahf
xchg
out
mov
mov
out
fdivrl
adc
push
std
leave
sbb
mov
add
add
sbb
or
fdivrs
aas
mov
xchg
punpckhwd
insb
cs
mulb
pusha
idivl
pusha
ss
jns
lahf
adc
push
int3
bnd
cmp
fnstcw
push
stos
stc
sub
aas
sbb
ds
int
jmp
das
fbstp
cmp
out
sarl
fbstp
lret
scas
lahf
test
mov
insb
mov
adc
fstl
or
fcomps
mov
xor
or
cmp
loop
xor
call
je
sbb
sub
nop
mov
sbb
mov
add
jnp
roll
xor
mov
sbb
cltd
mov
push
repz
lcall
popf
xchg
jge
std
in
mov
stc
scas
push
in
xchg
jns
and
jae
imul
xchg
mov
out
jnp
mov
ficoml
fildll
aaa
int
out
frstor
push
std
pop
add
and
pop
jmp
sbb
mov
std
xchg
jg
jmp
ljmp
sbb
or
fwait
scas
gs
push
divl
mov
push
sti
outsb
jecxz
out
popl
in
outsl
xchg
addr16
popa
adc
xor
pop
sbb
aaa
aas
xchg
sub
push
cmp
das
test
iret
push
ret
dec
es
pop
repz
jns
mov
popf
adcb
mov
xchg
xchg
pop
dec
inc
jp
push
imul
inc
push
dec
test
pop
push
ss
jb
inc
jae
fdivs
lea
fsubp
daa
fnsave
ret
aad
fldt
fcoms
ficoms
xor
call
cmpsl
adc
jne
popf
fisttpl
out
xchg
mov
hlt
jg
sbb
jle
mov
sbb
and
add
or
jb
sbb
es
mov
cmp
mov
cmp
cmp
call
lahf
xchg
push
not
imul
lret
lret
cmp
or
outsl
xchg
test
push
cmpb
mov
sahf
outsl
lds
cld
cmp
or
add
das
pushf
cmp
push
mov
into
cmp
call
aam
movsb
iret
stos
gs
in
ljmp
mov
mov
push
mull
mov
or
imul
sbbl
xor
stos
lea
shlb
xor
or
cmp
inc
lea
mov
or
jbe
dec
mov
jle
lahf
repnz
xor
sbb
lahf
fsubp
sbb
pop
or
movsb
mov
outsb
rol
fdivl
jmp
mov
cli
sub
cs
mov
mov
xor
inc
push
push
cmp
aaa
pusha
mov
adc
addr16
popf
cwtl
test
jmp
xchg
jle
and
data16
push
addr16
push
and
add
or
dec
lcall
outsl
lret
jge
js
xor
pop
rcrb
cmp
xorb
push
mov
scas
inc
gs
mov
add
clc
xor
and
test
jne
insl
mov
jo
out
xor
push
mov
mov
mull
dec
mov
fisubrl
cmp
fidivs
sbb
push
xor
lea
clc
xchg
mov
test
add
aam
xchg
xchg
clc
xor
loopne
aad
popf
fidivl
out
lret
ret
outsl
test
pop
rorl
adc
pop
mov
push
mov
cltd
mov
add
cmp
push
lods
sarl
dec
pop
int3
ljmp
loop
push
ret
imulb
mov
imulb
fs
int3
jecxz
aad
cltd
add
cmp
adc
sub
jmp
scas
jno
cmp
and
mov
aam
fcoms
mov
inc
lods
aad
xorb
jl
jbe
test
mov
imul
mov
insl
shlb
dec
lds
adc
add
jmp
push
xchg
popf
dec
or
cmp
add
je
push
dec
mov
push
cmpsl
dec
xor
test
repnz
or
xchg
push
daa
mov
or
pop
cmpsb
pop
cld
scas
inc
push
jp
filds
mov
addr16
addr16
pop
inc
or
bswap
js
and
leave
shlb
out
pop
in
pop
mov
add
push
adc
xor
test
push
cmp
mov
outsl
mov
fdivs
pop
xchg
mov
test
and
cmpsl
inc
jo
adcb
xchg
cmp
mov
imul
push
jge
xorb
adc
push
xchg
sub
and
leave
pusha
mov
jecxz
lret
jbe
vandps
sbb
jno
outsb
cmc
sbb
sarl
pop
fistpl
jne
ret
addl
ret
push
xor
in
repnz
ja
and
mov
sub
int3
arpl
xor
cmpsl
push
or
das
lcall
and
enter
push
and
sarl
inc
aad
popa
pop
out
addr16
push
push
sub
inc
mov
loope
jo
js
and
fildl
aaa
pop
xlat
sbbl
jp
jbe
mov
es
push
mov
and
xchg
mov
add
fwait
inc
adc
test
xor
cltd
mov
adc
mov
inc
and
subl
inc
call
mov
out
inc
mov
and
pop
repz
xchg
xchg
repz
outsb
rol
xor
stos
fistps
ljmp
xlat
or
xchg
add
aas
bnd
pop
clc
xor
pop
sahf
gs
push
notb
pusha
rolb
int
mov
pop
and
inc
xchg
cs
push
adc
cmp
out
push
outsb
sbb
push
mov
inc
pop
sub
push
xor
jns
mov
or
mov
pop
movsl
inc
dec
loope
jo
imul
aas
lret
in
lret
mov
cld
fnstcw
mov
sub
sbb
cmp
dec
mov
lock
sar
daa
mov
in
jo
dec
mov
dec
out
lods
test
sub
mov
and
out
inc
jp
test
xor
inc
mov
sbb
push
mov
sub
push
call
ds
jle
fists
loop
add
adc
cmpsb
lret
das
mov
sub
pusha
xchg
bound
mov
mov
cs
out
mov
ljmp
xchg
icebp
cmpsb
sub
push
adc
icebp
mov
and
push
ss
mov
adc
aam
test
jp
dec
push
leave
push
mov
dec
cmpsl
pop
lahf
repz
mov
xchg
cmp
xor
cltd
not
outsb
sub
sidtl
sbb
xor
dec
push
iret
push
cltd
dec
test
fs
arpl
idivl
out
sbb
add
and
sbb
push
mov
out
lcall
out
mov
enter
adc
mov
push
daa
xlat
jnp
or
mov
mov
xchg
pop
mov
addr16
mov
ja
das
mov
dec
cmpsl
bound
or
es
rolb
jl
ss
mov
fisttps
sbb
fimuls
or
and
repz
outsb
and
inc
fwait
xchg
inc
mov
loope
inc
orb
cmp
fwait
push
adc
push
into
pop
or
gs
frstor
out
not
dec
pop
pop
fcompl
mov
inc
sub
cmp
test
mov
shrb
inc
fldcw
lock
jmp
mov
dec
das
inc
mov
insb
mov
sahf
jge
mov
and
mov
stos
push
adc
cmp
cwtl
mov
stos
mov
repz
insl
ljmp
inc
push
aad
fsubrl
out
int
xor
cmp
je
mov
enter
addr16
shll
push
into
lret
xor
test
or
rcrb
in
jmp
mov
mov
dec
mov
and
sbbl
push
stc
sbb
xchg
je
cmp
mov
mov
or
in
pop
fldl
xchg
test
xchg
xchg
cltd
mov
das
sbb
call
adc
xchg
fsts
je
jb
inc
fisubl
imul
fdivl
aad
push
mov
les
test
lret
out
push
or
push
scas
aas
adc
addr16
and
fbld
mov
test
dec
bound
mov
pop
dec
mov
dec
popf
jnp
sub
dec
pusha
popa
pop
int3
cmp
mov
pop
xor
push
or
shrl
push
imulb
dec
mov
das
pop
xor
xchg
push
aas
pmulhw
fwait
jb
pop
cmp
cli
push
ja
xchg
jb
inc
mov
mov
pop
pcmpeqw
and
ja
lods
dec
ficoml
fisttpl
fcmovbe
cld
dec
rol
ds
aam
call
js
or
sbbl
adc
jne
je
pop
je
insl
dec
mov
push
and
xorb
dec
add
std
outsl
add
punpcklbw
nop
cmp
inc
pop
mov
mov
add
imul
mov
mov
fidivrs
nop
pop
lret
out
test
in
shlb
inc
cltd
or
addr16
scas
pop
pop
pop
lcall
xor
push
jo
cmp
inc
rorb
rcll
ss
mov
ss
mov
mov
mov
rolb
mov
sub
shlb
dec
mov
ljmp
xor
movb
mov
jbe
int
inc
cmc
mov
cs
sub
ljmp
or
inc
push
test
push
adc
pop
sub
jg
jle
inc
mov
push
popf
scas
ror
gs
and
add
inc
fsts
mov
cmpsb
lret
sti
jle
stc
sbb
fimuls
popf
xor
outsb
gs
lahf
insl
mov
sbb
rcr
repnz
popl
rclb
push
lods
xchg
mov
xor
jmp
or
cmp
mov
pop
jno
dec
repz
pusha
in
das
popa
add
pop
divb
push
push
movsl
xchg
mov
fnstcw
fldt
shll
ret
push
adc
aaa
xchg
imul
mov
sti
test
pop
dec
add
xchg
sub
xor
mov
into
iret
hlt
xlat
mov
test
test
cmpsb
insl
add
scas
outsl
push
loope
sbbb
add
mov
repz
mov
push
pop
scas
addl
lods
rcll
xor
and
cmpsl
push
call
imul
sub
dec
dec
in
pop
arpl
fdivs
fsubs
pusha
pop
mov
dec
out
jp
cmp
dec
or
pushf
xor
shrl
jno
sahf
xor
les
mov
jl
nop
sbb
rcl
mov
bound
notl
jmp
stos
adc
mov
xchg
xchg
sub
cs
insl
out
jecxz
fwait
imul
stc
add
movsl
push
insl
and
leave
mov
outsb
js
push
stos
andb
cmpb
mov
push
mov
sbb
ds
enter
xor
cs
cmp
jp
out
mov
dec
mov
sbb
in
in
aas
sub
pop
cwtl
adc
loopne
mov
push
pop
inc
cld
or
cmp
fwait
add
outsb
mov
test
cmp
sbb
loopne
repz
dec
xchg
aas
mov
lods
nop
mov
push
test
xor
inc
push
sub
test
and
or
push
movsl
add
pushl
sti
inc
in
sbb
mov
mov
je
pop
and
fs
icebp
push
dec
sbb
pop
mov
sti
imulb
dec
xor
adc
lock
sub
or
outsb
repnz
adc
nop
push
mov
mov
dec
fstpt
pop
lods
loope
inc
inc
sub
loope
or
ret
sbbl
xchg
cmpsl
das
cmpsb
mov
je
sahf
sbb
fst
cmp
sbb
mov
mov
test
push
pop
sbb
jge
pop
adc
pop
or
adc
lahf
ss
aad
das
cmpsl
dec
jg
ficoms
dec
enter
scas
mov
addl
sbb
sbb
leave
mov
nop
adc
sub
cmp
loop
sti
xor
pop
dec
jb
sbbb
push
test
je
movsl
add
out
arpl
mov
loope
mov
mov
in
dec
inc
aaa
dec
das
stos
jl
dec
mov
mov
sub
ret
or
aam
bound
inc
mov
dec
test
pop
sbb
mov
outsb
xor
inc
out
jl
out
adc
movl
fiaddl
inc
jl
push
inc
hlt
dec
push
pop
hlt
push
lret
icebp
in
shrl
adc
cmp
flds
xor
pop
ss
repz
lods
arpl
enter
std
shl
es
in
pop
mov
xchg
jns,pn
arpl
mov
pusha
sbb
xor
fsubp
and
shl
sub
or
dec
cmp
je
iret
mov
cmp
into
cltd
xor
add
add
push
or
sub
adc
cmp
aas
scas
cltd
mov
or
inc
inc
stos
es
test
test
gs
out
rcr
test
pop
test
pop
sahf
sbb
push
out
xchg
cwtl
test
sti
xchg
sbb
fs
sbb
sbb
outsl
mov
mov
or
test
xchg
pop
stc
pop
stc
mov
pop
fwait
mov
xor
xor
xchg
jle
jnp
xchg
outsl
jmp
mov
push
and
jae
inc
xor
xchg
inc
bndldx
jecxz
in
inc
adc
or
outsb
call
sbb
jecxz
inc
inc
xor
push
enter
jecxz
in
insl
adc
mov
add
cmp
in
sbb
lcall
ror
sti
sbb
xchg
sbb
mov
das
lea
negb
ficoms
mov
arpl
add
dec
je
push
lret
sbb
dec
lret
or
xchg
cmp
lret
mull
stos
int3
pop
xor
ret
into
mov
lret
adc
fwait
loop
lret
pop
lret
jmp
cmpsb
cs
cltd
or
xchg
lds
cli
lds
or
test
pop
stos
xor
lret
sti
pusha
leave
or
stos
cwtl
sbb
push
xchg
lret
data16
rcrl
imul
clc
fisubrs
pop
ret
push
mov
aad
int3
data16
icebp
movsb
pop
add
jecxz
jecxz
sti
lods
xor
dec
jmp
jmp
cld
lea
cmp
cmp
mov
das
mov
fs
push
inc
pop
clc
bound
stos
or
mov
fstpl
repz
and
pop
jmp
sbb
dec
push
cld
pop
cmp
ret
xor
mov
sub
mov
test
dec
test
push
cmpsb
cltd
sarb
mov
movsl
xorb
sti
std
xor
mov
inc
jmp
imul
mov
mov
lods
pop
cmc
int
mov
ret
jae
shl
loope
scas
imulb
cmpsl
call
cmp
out
push
push
mov
fadds
test
xchg
clc
leave
cmp
jne
mov
outsb
out
fxch
sbb
inc
adc
mov
xchg
test
pop
addr16
and
or
xchg
mov
cmpsl
push
add
pop
add
sti
mov
aad
adcb
push
inc
fiadds
or
mov
cmpsb
rorl
dec
or
mov
push
pop
addr16
xchg
das
inc
push
fnstsw
adcb
and
out
or
ss
clc
inc
divps
orl
sub
cmpsl
pop
mov
dec
roll
ja
or
cwtl
jns
sarb
fs
clc
xor
dec
sub
mov
aaa
add
sbb
lret
or
lcall
fnstsw
jecxz
adc
sbb
mov
cmp
shrb
cmp
xchg
gs
divl
lret
leave
mov
sub
mov
jmp
fidivs
lods
leave
mov
ret
xchg
mov
outsl
xor
ret
int
sbb
aas
orl
and
push
inc
push
scas
sub
sbb
imul
xchg
enter
rclb
dec
or
dec
add
lods
notl
out
cmp
leave
daa
and
sbb
sub
push
add
into
js
sti
pop
or
or
xor
mov
cs
filds
scas
sub
lcall
bnd
movsl
fcomi
lea
pop
add
and
xor
pusha
adc
mov
jge
les
push
bound
enter
inc
cmp
in
cmpsl
xor
lcall
loopne
gs
pop
inc
jl
xor
movsl
push
add
adc
mov
std
mov
mov
in
inc
jecxz
jg
inc
std
mov
adc
movsl
andb
mov
jge
xor
test
shlb
xlat
mov
movsl
ret
movsb
push
in
aad
loopne
or
cld
arpl
ds
gs
arpl
mov
xchg
fdivrs
sti
loope
dec
popa
and
rclb
cmp
popf
aas
lcall
data16
test
xlat
cmpb
jge
pop
or
test
int
addr16
dec
jbe
nop
in
repz
xchg
dec
mulb
add
add
iret
mulb
dec
jbe
pcmpgtb
icebp
push
add
push
lock
andb
pusha
sarb
adc
inc
adc
adc
mov
jne
jl
adc
push
mov
push
lcall
jle
arpl
sarb
jne
and
jge
fdivrs
outsb
cmpsl
cs
jb
imul
add
test
push
mov
ja
sarb
addr16
inc
lods
sbb
call
jne
mov
test
inc
and
xchg
xchg
lret
xchg
push
fists
push
pusha
and
lock
repz
mov
rorb
xchg
add
iret
in
arpl
negl
pusha
jmp
xor
sub
leave
dec
aad
mov
pushf
in
bound
cmp
jb
jmp
mov
stos
xchg
add
int3
fmul
xchg
repnz
cmp
xor
scas
pop
addr16
mov
push
mov
add
push
jl
fimull
aam
aas
dec
adc
aaa
dec
adc
mov
addr16
test
out
pop
add
lret
xchg
aas
mov
lods
or
jns
sbbb
pop
fsub
push
push
sbb
clc
or
sti
and
mov
mov
xlat
jns
or
hlt
pop
daa
pusha
sub
lea
repz
mov
jnp
mov
nop
cmp
movsb
or
or
iret
xchg
scas
pop
xlat
jns
mov
fs
test
mov
cmp
test
outsl
orb
inc
or
mov
sub
mov
jne
adc
xchg
and
add
fs
push
decb
or
movsl
mov
push
add
add
js
push
lods
sub
push
lcall
cwtl
call
hlt
scas
cwtl
addr16
in
arpl
mov
dec
or
and
test
mov
mov
and
xor
or
mov
mov
rolb
adc
cmp
inc
mov
jae
mov
mov
int
aam
mov
inc
pop
xor
push
mov
mov
push
pushl
ja
ret
les
sbb
addr16
push
sub
icebp
movsb
add
jne
out
insb
xor
das
pop
rorl
or
idivl
and
arpl
mov
std
adcb
loop
dec
les
scas
sub
mov
pushf
cmp
stos
xor
cmp
aam
daa
mov
dec
call
pop
stc
pop
test
pushf
cmp
stos
in
imul
in
mov
or
mov
cmp
or
push
in
test
cmpsb
push
cli
repnz
or
fsts
jno
sub
ds
stos
loope
sub
les
jae
inc
jo
scas
xchg
xchg
dec
adc
mov
and
inc
psrld
mov
or
ljmp
push
dec
add
repz
inc
xchg
and
mov
mov
push
jmp
push
add
repz
inc
dec
loop
mov
xchg
mov
fwait
fwait
lock
sbb
adc
inc
insb
movsl
jnp
mov
add
sbb
pop
sbb
adc
hlt
lret
je
cli
out
mov
ljmp
push
pop
faddl
mov
mov
mov
and
push
jo
or
jecxz
mov
stc
cmpsl
xor
mov
cmp
pop
out
cs
sahf
fwait
push
data16
xchg
int3
cmc
pop
mov
mov
stos
les
aaa
push
sbb
out
dec
sbb
pop
inc
mov
sub
xchg
fldl
enter
jnp
xchg
imul
or
pop
cmpsl
xor
jns
leave
xchg
mov
mov
add
jl
and
inc
sti
gs
cmp
inc
add
inc
jg
popa
out
subb
pop
xlat
pop
add
stos
in
je
sbb
test
or
scas
shlb
outsl
out
pop
cmpsl
inc
push
adc
and
ret
add
cmp
dec
mov
int3
or
push
add
nop
es
add
mulb
aaa
movsb
xor
lock
fs
jmp
jmp
fmuls
outsb
mov
cmpsl
sahf
mov
mov
xchg
imul
mov
fcompl
mov
push
mov
mov
mov
push
repz
jp
dec
or
les
mov
mov
mov
mov
dec
pusha
daa
lea
orb
push
jne
stos
cmpsb
mov
or
negb
testb
scas
in
xchg
ds
stc
loope
mov
mov
inc
jne
call
xchg
fisttps
les
mov
scas
gs
pusha
sbb
hlt
negl
pavgw
pop
faddl
sbb
lcall
push
jecxz
cs
test
cmp
or
or
add
cmp
pop
arpl
cs
jno
cmp
mov
xchg
pop
clc
dec
test
mov
mov
xchg
enter
jp
sti
push
or
xchg
out
or
into
jp
mov
andb
cmp
das
in
daa
lea
bnd
and
push
call
dec
daa
repz
mov
or
pop
mov
lcall
add
in
dec
adc
pop
add
sarl
cmp
xor
imul
pop
or
adcb
xchg
fldln2
outsb
int3
sar
pop
into
pop
mov
adcl
mov
pop
pop
xchg
inc
pop
xchg
inc
mov
mov
xlat
les
dec
jo
insl
xor
out
push
std
roll
add
xlat
outsb
jno
sarl
bound
int
sbb
negl
lret
jge,pt
sti
and
xchg
jmp
lcall
je
mov
daa
jge
not
xor
out
pop
add
xchg
lea
push
enter
xchg
push
lods
int3
xchg
mov
js
test
mov
dec
push
adc
jb
mov
inc
cli
mov
sbb
bound
popa
cmp
push
and
aad
xor
sub
pop
ret
hlt
jge
cmpsb
je
out
into
gs
add
fcomi
push
rcr
cmp
mov
inc
or
mov
xchg
inc
popa
movsl
in
stos
jp
in
shll
cltd
stos
es
lret
lea
pop
clc
sbb
inc
push
inc
icebp
mov
into
gs
cltd
ret
mov
jb
cmp
dec
cwtl
inc
test
rcl
or
dec
or
xchg
popf
mov
iret
cmc
arpl
push
lea
shlb
mov
mov
add
jns
int
aaa
cli
pop
divb
mov
jmp
lods
sub
xor
fwait
cmp
cmpsb
xor
out
jae
cmc
pop
inc
outsl
es
mov
mov
xchg
lds
jne
push
or
sahf
mov
iret
inc
fsubrs
mov
and
and
push
add
cmp
or
pop
or
sub
sbb
push
cli
lea
xor
lcall
xor
hlt
push
jno
cmp
mov
push
shlb
das
shrb
jp
mov
mov
sub
mov
mov
or
xor
mov
scas
movsl
sub
pop
inc
psrld
fadds
das
sub
int
sbb
dec
pop
mov
data16
pushf
inc
inc
or
loop
push
jo
rcrb
sahf
xchg
andb
add
push
lock
push
inc
adc
sbb
call
dec
adc
push
jnp
in
mov
and
mov
mov
add
sarl
enter
push
fdivp
lret
test
in
outsl
ljmp
ljmp
loope
mov
xor
scas
jno
pop
std
jo
sbb
or
mov
jecxz
test
inc
mov
adc
adcb
aas
adc
jl
pop
xor
mov
popf
fildl
jbe
call
je
jns
add
push
mov
sbb
xor
mov
jg
bound
stc
inc
or
pop
add
bound
ret
imul
xlat
mov
in
lcall
add
and
stos
push
mov
push
xchg
mov
pop
add
pusha
cmpsb
outsl
push
cli
jbe
std
sbb
xchg
cmp
mov
xor
aam
fs
pop
or
repnz
daa
aad
cltd
inc
or
lock
inc
pop
or
xchg
xchg
stc
data16
sbb
jl
mov
mov
add
pop
movsl
cmpsb
sub
mov
fwait
sbbl
pop
xor
sbb
xlat
sub
arpl
mov
pop
std
sbb
mov
mov
repnz
push
shl
cmpsl
sub
imul
je
sub
mov
cli
adc
push
ljmp
mov
stos
and
and
adc
push
rolb
xchg
in
mov
test
in
lret
cmpsl
into
mov
out
cmpsb
pop
push
sub
adc
or
fiadds
cwtl
sbb
sub
xchg
and
mov
mov
mov
and
adc
jp
sbb
lret
pop
ret
push
div
sahf
arpl
fs
or
cmp
aam
add
mov
add
xor
insl
out
lds
in
jo
adc
push
xor
mov
mov
and
int3
push
mov
cmp
int3
xchg
jb
dec
or
cmpsl
adcb
jae
jnp
movsl
xor
mov
xor
sti
xor
mov
cmpsb
inc
adc
pushl
inc
jl
ret
addr16
jbe
flds
mov
loope
pop
mov
lret
xchg
call
std
push
clc
lcall
jbe
in
shufps
mov
push
iret
inc
mov
pop
add
outsb
mov
loopne
jnp
fmuls
outsl
push
adc
xchg
add
into
inc
pop
xchg
lcall
dec
lcall
and
inc
adc
pop
dec
and
jecxz
jp
std
sub
lds
lods
dec
leave
pusha
jg
stos
xor
jno
jne
inc
negl
aaa
outsb
divb
xor
les
pop
ret
dec
mov
movsl
aaa
mov
into
xchg
xchg
xor
outsl
icebp
inc
sbb
pop
xor
xchg
inc
inc
cwtl
or
add
inc
push
pop
cli
jp
out
adc
mov
mov
js
fwait
stos
sbb
ret
lahf
pop
int3
call
cld
int3
and
ss
test
int
adcb
daa
push
negl
jle
in
insb
icebp
hlt
dec
adc
pop
add
push
ret
xor
mov
mov
mulw
movsb
xor
xchg
ds
loopne
mov
stc
sub
adc
mov
movsb
xor
dec
repz
mov
mov
push
xor
mov
les
sbb
sbb
dec
rcr
repnz
adcb
adc
inc
adc
and
mov
mov
jo
pop
adc
out
nop
mov
scas
lret
inc
out
xchg
imul
inc
adc
mov
loop
sub
mov
mov
dec
aad
sahf
cmp
pop
sub
xor
and
or
stos
inc
add
aad
sbb
pop
inc
dec
push
int3
xor
cli
gs
and
popa
xorl
into
jne
push
inc
sbb
loopne
adc
add
sub
pop
cmc
mov
mov
push
lods
sbb
xor
fidivrs
xchg
icebp
mov
ds
aam
aam
aad
or
pushf
sbb
std
ret
xchg
sbb
push
imull
mov
test
subl
loope
fwait
adc
push
sbb
negb
aad
xor
inc
or
rorb
cmp
sub
mov
dec
adc
clc
mov
sahf
pop
clc
gs
and
adc
add
adc
scas
daa
loop
mov
test
mov
popa
call
or
push
mov
adc
dec
inc
or
push
in
jns
push
cmp
xchg
pop
xor
lea
dec
enter
popf
add
pop
ret
pop
add
pop
movsl
test
cmp
sub
jae
xchg
test
mull
adc
out
clc
jmp
test
or
xor
mov
dec
add
leave
mov
adcl
bswap
sarb
cld
lods
or
nop
daa
in
mov
inc
add
loopne
fucomip
mov
dec
mov
sbb
mov
pop
mov
stos
xchg
ds
mov
push
iret
push
cli
insl
dec
adc
dec
mov
cs
idivl
repnz
scas
sub
ljmp
inc
shlb
mov
fwait
cmp
int3
dec
cltd
xor
mov
cmp
pop
mov
ss
lock
mov
out
lds
fiaddl
fistps
sbb
pushf
inc
push
or
pop
xchg
mov
sub
adc
cmpsl
int
sarb
movsl
or
cmpsb
sbb
push
mov
mov
pop
jnp
xor
mov
adc
out
sbb
repz
adc
inc
mov
xor
dec
icebp
and
ret
in
dec
adc
jne
inc
pop
xor
mov
and
repnz
xchg
in
fimuls
negl
arpl
mov
lods
jns
mov
sub
jne
data16
push
cli
pop
fcompl
cmpsb
out
inc
or
flds
out
xor
fcoms
cwtl
inc
mov
test
push
lods
ret
mov
movsb
push
pop
push
lret
jg
stos
xchg
and
mov
mov
mov
aas
and
in
jne
daa
stos
or
sub
mov
mov
fmuls
fidivrs
push
notb
fildl
cmp
mov
cmp
and
dec
cmp
cmpsb
and
in
dec
adc
leave
cmpsl
add
or
inc
add
adc
xchg
notl
push
adc
add
loope
cmp
iret
or
pop
fnstsw
adc
mov
inc
mov
xor
stos
jl
jae
sub
test
mov
cmc
bound
fnstsw
jbe
clc
xchg
das
call
int
xchg
sbb
mov
pop
inc
leave
pusha
ja
push
popf
pop
cwtl
mov
sub
and
addr16
imul
push
cld
call
cli
xchg
cmp
fisubrs
mov
pop
filds
cli
out
popa
add
sbb
xlat
adc
out
sub
call
fcompl
mov
std
push
clc
movsb
fcoml
mov
gs
cmp
mov
inc
push
jmp
xor
stos
bound
clc
arpl
leave
xchg
fdivl
outsl
xor
sahf
mov
jbe
jge
filds
call
push
shll
sbb
jne
js
sbb
int
pop
lock
das
outsl
aaa
cwtl
fistpll
addr16
or
lods
xor
pop
inc
pop
out
dec
jae
aam
imul
sub
mov
in
arpl
push
ret
jo
jb
adc
icebp
mov
out
fisttps
sarb
fiadds
popf
ficomps
lret
jb
shl
out
jo
add
lea
mov
pop
add
jne
gs
adc
mov
adc
mov
gs
jo
mov
and
add
push
aaa
mov
aas
xchg
cmp
mov
popa
lock
inc
adc
add
mov
or
push
ljmp
jne
addr16
pop
adc
dec
or
mov
outsb
push
sub
arpl
inc
cwtl
aaa
mov
movsl
adcl
mov
ret
imul
and
je
cld
cmpsb
mov
mov
adcb
test
int3
mov
movsb
xchg
sub
xchg
out
xchg
stc
daa
lods
lods
sbb
mov
stos
clc
popa
mov
pop
add
sbb
mov
rolb
jle
push
mov
inc
sub
fs
cmpsb
xor
xchg
lcall
insl
pop
clc
in
icebp
das
lods
dec
imull
cmp
cmp
std
hlt
jmp
popf
jno
adcl
mov
lret
cwtl
outsb
sbb
mov
insl
add
ljmp
push
inc
lods
push
incb
mov
push
lock
mov
cmp
or
mov
icebp
loop
in
mulb
jae
cmp
cltd
popa
out
inc
jecxz
xchg
pushf
out
stc
and
push
dec
loop
sub
in
xor
notb
or
sbb
loop
mov
xchg
cmp
pop
push
or
xchg
adc
cmp
mov
cmp
mov
inc
rdpmc
repz
jmp
cld
dec
cmp
adc
ja
insl
lock
fs
mov
je
out
outsl
aas
mov
sarl
xor
push
mov
push
clc
mov
stos
iret
xchg
cwtl
xchg
xor
mov
add
pop
addb
loopne
pop
add
test
pop
add
mov
mov
mov
cmp
ljmp
add
mov
lea
cmp
xor
int
cltd
leave
mov
call
jp
jb
fdivrl
imul
movsl
sub
or
or
lret
or
sbb
lock
mov
and
fnstcw
push
cmc
icebp
push
out
jge
orb
mov
mov
cmpsb
fldl
sbbb
xchg
shrl
mov
cmc
pop
mov
push
stc
cmp
mov
xor
das
out
cmp
cli
push
bound
jmp
mov
cmp
cmp
mov
or
add
adc
xchg
xor
xor
pushf
jo
out
shrl
arpl
rclb
arpl
inc
xor
test
add
iret
push
or
mov
inc
xchg
pop
sbb
bound
mov
rclb
fidivl
sbb
ljmp
fwait
inc
in
jmp
xchg
aaa
ret
out
sbb
js
mov
mov
xchg
lock
imul
fidivrl
icebp
icebp
arpl
iret
rolb
mov
adc
js
insb
ljmp
lock
lods
sub
fs
add
dec
and
jg
addr16
sub
inc
fidivl
dec
int
scas
and
fnstsw
inc
or
lret
scas
test
xchg
mov
shll
incb
mov
das
xor
daa
stos
iret
and
xlat
sbb
call
fcmovnu
cli
pop
getsec
cwtl
cmp
and
rcpps
outsl
dec
pop
xor
mov
fidivrl
stos
cmc
lods
push
push
nop
mov
pop
pop
lret
fidivrl
pop
pop
testl
outsb
aad
test
insb
out
xchg
jle
sub
out
test
sti
stos
sub
test
aaa
pop
mulb
sub
andl
inc
call
clc
jns
sub
xchg
cs
repnz
adc
test
xchg
pop
clc
xlat
jmp
pop
add
xchg
imul
imul
mov
push
dec
adc
inc
movsb
xor
and
insl
xor
jno
js
into
pop
bound
or
shlb
scas
sbb
sub
adcb
fidivrs
mov
in
pop
pop
adc
je
in
xorl
outsb
cmc
sbb
dec
pop
dec
sub
popa
adc
hlt
add
cmp
and
into
xchg
push
xchg
jo
jne
inc
or
xor
aas
fs
and
ret
push
cmp
pushf
incl
xchg
inc
lret
movsl
pop
cli
xchg
adc
inc
iret
pushf
ds
popf
int3
mov
adc
sub
push
adc
imul
loope
jnp
sub
sarb
mov
mov
jl
cmpsb
push
decb
sti
fiaddl
sub
scas
das
sahf
aas
je
sub
jae
dec
inc
pushf
inc
cmp
or
sbbl
dec
fdivrl
addr16
fldln2
cmp
dec
decb
lahf
lods
out
mov
cwtl
testb
sub
jo
push
push
das
pusha
mulb
xor
cs
clc
inc
xor
repz
sahf
mov
ret
xchg
stos
arpl
lods
add
mov
das
nop
mov
gs
lods
int3
xchg
mov
jmp
icebp
iret
mov
and
sarb
aaa
lret
xchg
xlat
pop
xchg
add
xchg
cmp
inc
inc
adc
jnp
mov
ret
mov
ds
mov
lods
dec
or
lahf
cmp
adc
dec
fistpll
pop
mov
lahf
ljmp
shl
push
or
adc
ljmp
repz
int
shrb
inc
ret
mov
pop
std
mov
lcall
jp
ret
ljmp
dec
or
push
sbb
lahf
cmp
lret
push
pusha
scas
movsl
xor
mov
mov
xchg
inc
loope
xor
adcb
lcall
cmp
in
scas
shll
outsb
jmp
sbb
cmp
pop
repz
mov
cmpsb
sub
out
jle,pn
aas
repnz
or
jp
inc
push
cmp
lahf
fwait
jbe
lret
mov
jmp
mov
fsubs
popf
inc
and
sahf
inc
fidivrl
insl
lock
loopne
addb
into
cmpl
xchg
mov
lcall
out
xor
in
notb
leave
cmc
dec
int3
dec
or
cwtl
push
int3
stc
pop
mov
mov
xor
push
adc
roll
aaa
and
test
push
mov
lods
sub
dec
or
fldenv
je
out
dec
push
sub
fldl
mov
mov
sarb
add
ss
movsl
lret
add
push
call
and
jo
xor
insl
sti
push
or
mov
xor
add
mov
adc
xchg
cmp
inc
iret
xchg
lret
xorl
sbb
movl
test
cmp
jnp
out
adc
outsb
repz
xor
sub
pusha
ljmp
jl
cmp
fldt
stos
or
jle
mov
inc
or
testl
cwtl
inc
iret
decl
mov
test
jecxz
push
xor
inc
je
mov
insl
int
push
repnz
inc
fstl
cmpsb
xor
xlat
sbb
out
dec
or
add
or
pop
jae
fiadds
ljmp
inc
adc
pop
divb
sbb
mov
fdivrl
xchg
push
add
mov
dec
push
dec
push
in
mov
mov
and
inc
fimull
xor
fst
add
ljmp
jnp
sub
cld
sbb
push
sub
inc
pop
push
imul
rclb
leave
jnp
pop
orb
mov
scas
adc
sbb
not
dec
sarl
add
mov
xor
sub
outsb
mov
mov
sub
mov
subl
push
mov
mov
mov
leave
dec
push
adc
cmp
nop
int
mov
jae
fdivrs
imul
fcmove
or
cmpl
xor
addr16
daa
mov
lods
or
lods
mov
sub
mov
xchg
jg
shlb
test
sbb
test
aas
push
cli
pop
andl
pop
out
add
xchg
cmpsl
xor
fbstp
mov
rolb
lods
adcb
cmp
addl
cmpsl
jae
call
sbb
xor
in
mov
in
mov
stos
add
xor
mov
cs
sti
adc
je
loope
cmp
rorb
fsubr
je
lcall
xchg
loopne
xor
and
adc
mov
cmp
push
add
imul
and
inc
cmp
aad
and
insl
divb
mov
mov
outsb
aad
cmp
out
jno
jo
mov
lods
inc
xchg
scas
xchg
mov
mov
cmpsl
sub
sub
callw
jecxz
lds
sub
lods
pop
mov
inc
jecxz
xor
sub
mov
xchg
inc
push
add
push
movsl
cmc
cmp
mov
nop
jl
sarb
cmp
and
pop
mov
test
xor
jle
in
and
jbe
idivl
lcall
xchg
test
xchg
shrl
push
out
fidivl
mov
lahf
bound
bound
mov
cs
cmp
sub
arpl
xor
sbb
ds
add
mov
inc
pop
push
sar
pushf
mov
gs
xor
jp
jo
sbb
xchg
gs
mov
movsb
xchg
pop
xchg
scas
sub
sbb
std
adc
push
sub
dec
cld
jle
mov
in
test
test
xchg
mov
ficoml
ret
inc
adc
sarl
inc
pop
scas
push
popf
fidivrs
inc
or
jecxz
arpl
rorl
sub
enter
clc
pop
jns
inc
dec
pop
repz
scas
xor
jge
push
stc
js
mov
aas
ja
jmp
arpl
and
push
xchg
inc
pop
aam
mov
shl
jle
mov
push
popf
xor
es
ret
mov
arpl
adc
cmpsb
cs
addr16
mov
inc
pop
xchg
mov
cmpsb
xor
and
push
std
leave
lock
mov
sbb
mov
and
fs
xchg
or
scas
sahf
test
ss
cmp
xchg
push
jmp
push
sbb
test
pop
sbb
mov
push
ljmp
pop
add
sti
adc
sbb
int
mov
mov
push
std
cltd
inc
outsl
push
stos
xor
cmpsb
jbe
xchg
fiaddl
mov
iret
ftst
xchg
adc
push
in
sbb
add
popa
dec
je
xchg
out
xlat
jle
call
std
pop
lret
mov
scas
inc
or
jns
inc
and
rcll
xor
fildl
xchg
sbb
repz
aam
mov
or
pushf
das
repnz
filds
mov
test
ficompl
jb
jns
lret
or
call
rcrb
loopne
jno
and
les
mov
lret
bound
mov
sbbb
pop
sahf
out
jle
jbe
adc
mov
add
fistl
stc
out
cmp
cmpsl
pop
sbbl
stc
pop
lahf
mov
jbe
dec
lods
mov
sub
shlb
test
shrl
cmpsb
sbb
cwtl
clc
ss
mov
push
jmp
or
ret
cmp
pop
dec
loope
out
nop
daa
and
scas
inc
je
xchg
xor
push
movsl
cmp
call
ret
pop
fdivrl
or
das
mov
mov
and
fistl
movsb
sbb
stc
arpl
cmp
daa
test
lock
sahf
xor
int
mov
sub
jg
jno
inc
mov
jae
clc
popl
push
lods
push
call
xor
test
lret
sti
lea
ret
jno
dec
fisttps
adc
mov
ret
lods
inc
cmc
addl
dec
mov
sbbl
fbstp
mov
add
fcoml
mov
cli
in
cmp
movsl
push
sbbb
push
out
negl
aaa
mov
jbe
dec
lods
mov
sub
mov
cli
xchg
test
shrl
movsl
sbb
xchg
divl
int
mov
push
jmp
or
cmp
jb
int
dec
loope
out
nop
daa
and
scas
inc
jae
xchg
xor
int3
arpl
push
movsl
cmp
out
sbbl
cmp
lahf
imul
js
lea
mov
sbb
sbb
stc
cmc
cmp
test
lock
sahf
xor
int3
sub
pop
jle
jno
inc
mov
jb
clc
popl
xchg
shrl
and
lods
push
out
xchg
ja
lret
test
or
jmp
mov
fimuls
movq
popa
ret
hlt
addb
inc
aad
cmp
imul
pop
pop
mov
fbstp
push
daa
mov
add
fcoml
mov
cli
in
cmp
movsb
add
push
out
negb
aaa
mov
jbe
dec
stos
mov
sub
mov
lock
cli
xchg
adcl
push
aad
out
xchg
mov
push
jmp
or
cmp
dec
loope
in
nop
daa
pop
scas
push
inc
jb
xchg
xor
movsl
cmp
out
sbbl
cmp
lahf
push
loope
sub
dec
call
cpuid
sbb
stc
popa
hlt
cmp
and
inc
pop
lock
sahf
xor
lret
sub
push
jge
jno
aas
mov
jno
clc
popl
xchg
shrl
and
lods
push
out
xchg
jbe
lret
cmpsl
cmp
jmp
mov
fisttpll
push
outsb
mov
shrl
mov
int3
arpl
mov
sbbl
jp
jbe
or
std
xchg
lcall
fcoml
mov
cli
loop
cmp
mov
les
cmc
push
mov
push
dec
test
xchg
sub
cld
fdivl
mov
cli
xchg
adcl
sbb
xchg
hlt
ss
mov
movsl
call
or
or
pop
dec
loop
jmp
daa
sbb
ds
inc
jo
mov
xor
cmpsb
cmp
push
test
pop
fidivl
or
sub
dec
add
or
cs
stc
pop
repz
and
adcb
inc
pop
icebp
jbe
sahf
xor
lret
push
pop
jmp
sub
lods
ds
jo
clc
popl
xchg
shrb
and
lods
push
in
xchg
je
lret
movsl
cmp
movsl
imul
sub
mov
fmull
or
cs
inc
icebp
addb
inc
shll
cwtl
es
mov
loopne
stos
or
mov
pop
inc
fmull
scas
arpl
loopne
cmp
mov
ret
pop
lock
push
mov
cmova
xchg
sub
sub
mov
out
dec
cli
xchg
jg
shrl
mov
icebp
mov
out
push
jmp
or
lds
xchg
jb
enter
mov
nop
daa
sbb
scas
inc
outsb
add
arpl
push
cmpsl
ds
ljmp
xor
jecxz
sub
es
jle
inc
fisttpl
mov
stc
pop
repnz
pop
mov
pop
bnd
sahf
xor
leave
and
xchg
cs
fidivl
cmp
clc
nop
shrl
pop
pop
scas
push
jecxz
mov
ss
les
cmc
mov
or
dec
loop
push
daa
pushf
sub
add
scas
inc
out
jg
push
mov
int
inc
shlb
adcb
or
stos
or
mov
std
pop
inc
fisttpll
fs
fidivs
shll
ret
pop
icebp
hlt
push
mov
adc
mov
cs
dec
out
dec
cli
xchg
jge
aam
inc
sahf
sbb
xchg
lock
mov
cmpsl
out
push
jmp
or
cmp
in
out
daa
sbb
scas
inc
insb
add
arpl
loopne
adcl
xor
lahf
fs
in
sub
es
jle
inc
fisttpl
mov
stc
pop
repnz
jge
pop
scas
inc
pop
repz
sahf
xor
leave
and
sbb
fidivl
cmp
clc
cld
nop
aam
ret
scas
dec
jecxz
mov
adc
xrelease
lds
fimull
push
push
pop
mov
mov
mov
int
inc
shlb
adcb
mov
stos
pop
sub
cld
pop
inc
fisttpll
stos
fs
fsubrl
aam
std
sbbb
ret
repz
mov
adc
mov
das
cltd
neg
jae
mov
cli
xchg
jnp
aad
inc
pushf
sbb
xchg
out
ss
mov
test
inc
push
jmp
pop
xor
cmp
dec
in
in
daa
pop
lods
insb
add
cmp
and
mov
arpl
fucomip
adcl
xor
lahf
arpl
in
sub
add
or
stc
pop
icebp
ds
jl
pop
scas
inc
pop
repz
sahf
xor
enter
push
jmp
fidivl
cmp
dec
outsb
leave
clc
sti
aam
rcrl
dec
loop
mov
xor
cmpsl
rclw
xchg
lds
addr16
daa
cltd
sub
pop
mov
mov
mov
int
aas
shll
adcb
or
test
lret
sti
pop
inc
fisttpll
stos
fs
fldt
aam
cld
sbbb
rcrl
dec
mov
adc
mov
das
cwtl
cmc
fdivl
mov
cli
xchg
jp
aad
aas
fwait
sbb
xchg
in
ss
mov
test
aas
push
jmp
push
xor
aaa
xchg
jb
ret
pop
dec
in
in
daa
push
stos
insb
add
aaa
scas
inc
imul
int3
arpl
fsubrp
adcl
xor
lahf
clc
in
sub
cltd
jl
inc
fildl
sahf
and
pop
lock
jnp
pop
lods
inc
pop
repz
sahf
xor
and
sbb
jno
cmp
cli
mov
imul
pop
scas
dec
loope
mov
outsb
xor
cmpsl
rclb
xchg
lds
fmuls
xchg
daa
cwtl
sub
pop
mov
mov
scas
or
fs
adcb
or
test
sub
cli
push
inc
fisttpll
test
cmp
sbb
dec
mov
adc
push
shll
das
xchg
hlt
fdivl
mov
cli
xchg
jns
aad
ds
xchg
in
ss
mov
test
ds
jmp
add
jb
ret
in
jecxz
daa
adc
ss
inc
push
mov
arpl
ljmp
xor
lahf
popa
mul
jnp
andl
mov
add
push
popf
and
pop
out
ds
jp
pop
lods
inc
pop
repz
sahf
xor
lds
mov
das
sbb
cmpsb
cmp
nop
stc
mov
imul
repnz
insl
ss
xor
cmpsl
arpl
lds
dec
jecxz
gs
sub
mov
mov
lods
or
gs
pop
in
adcl
or
cmpsb
add
shlb
inc
fiadds
test
cld
fldcw
aam
cli
sbbl
mov
mov
adc
mov
das
xchg
repz
mov
jmp
or
insb
cmp
sbb
jmp
into
sbb
adc
outsb
add
xor
jae
rcll
xchg
xchg
sub
insb
add
xor
mov
sub
dec
test
sbb
orb
pop
aam
or
daa
andb
mov
add
add
es
push
in
ds
jns
sbb
int3
lahf
ss
xchg
jp
ret
pop
mov
das
push
jae
jae
aaa
mov
imul
aam
mov
mov
insb
aaa
into
popf
xor
cmpsl
popa
mov
lds
aam
jecxz
fs
sub
mov
inc
jmp
or
data16
cmpsb
cmp
pop
lds
or
movsb
add
shll
add
test
and
xlat
imul
sbb
mov
mov
adc
rclb
cltd
xor
mov
dec
out
cld
xchg
jbe
insl
cmp
hlt
mov
scas
adc
insb
add
enter
or
loopne
sub
cmpsb
insl
add
xor
and
xchg
gs
orl
pop
shrb
in
and
inc
add
add
fs
push
jmp
sbb
sbbb
cmp
mov
adc
sbb
cltd
xor
fnsave
mov
addr16
sti
xchg
testb
mov
fcomi
mov
adc
in
subb
mov
jne
inc
rorb
add
sub
mov
out
mov
test
lret
cld
pop
out
test
scas
or
fbstp
jnp
add
ret
add
adcl
aad
aas
cwtl
testb
jmp
mov
adc
pushf
rcrl
lcall
mov
dec
in
std
xchg
je
xlat
outsb
cmp
cmc
mov
lods
adc
push
xor
xor
out
fists
add
xor
and
xchg
mov
inc
jl
in
test
sahf
pop
shrb
mov
and
shlb
inc
fiadds
xchg
and
push
jmp
sbbl
cmp
insb
leave
mov
adc
loopne
xor
jo
jne
xor
xchg
cmc
xchg
insb
mov
fpatan
mov
imul
test
mov
das
scas
or
dec
in
popa
xchg
sub
mov
dec
out
mov
cmpsl
pop
shrl
enter
pop
out
xchg
or
jnp
ljmp
ret
add
adcb
inc
mov
aas
xchg
cmc
test
mov
mov
adc
pop
lcall
mov
dec
in
std
xchg
jae
xlat
outsb
aaa
xchg
sbb
mov
cmp
pop
lods
adc
imul
jne
mov
ficoms
add
xor
and
test
data16
test
test
popf
pop
iret
sub
mov
and
shrb
inc
fiadds
xchg
and
push
call
sbbl
cmp
imul
cmp
mov
mov
fistps
jne
xor
xchg
hlt
test
insb
mov
sbb
or
rcrb
mov
das
scas
or
or
add
sub
mov
dec
in
mov
cmpsb
push
shrl
cmpsl
ds
pop
out
xchg
lods
or
jnp
sub
das
roll
repnz
dec
loopne
adc
mov
shll
xchg
hlt
test
mov
mov
adc
rcrl
lcall
mov
dec
jecxz
std
xchg
jb
xlat
outsb
ss
sbb
mov
cmp
push
stos
adc
push
mov
mov
fstl
add
xor
and
test
data16
test
test
pushf
pop
into
sub
mov
and
shrb
inc
fiadds
xchg
and
push
out
sbb
cmpsb
cmp
push
mov
adc
ficomps
jne
xor
xchg
repz
insb
mov
sbb
or
rcrb
mov
das
lods
or
cmp
pop
xchg
sub
mov
dec
jecxz
mov
movsl
add
push
clc
push
out
xchg
stos
or
jl
cld
sub
sub
dec
dec
loopne
adc
mov
shll
xchg
repnz
mov
cmc
call
or
cmp
fwait
xor
mov
push
loop
std
xchg
jo
fsubrs
xchg
sbb
mov
cmp
adc
adc
xor
sub
dec
push
out
fistl
add
pusha
hlt
mov
es
mov
stos
inc
jns
in
test
fwait
enter
or
and
shrb
fdivrp
xchg
and
push
in
xlat
push
jb
sbb
mov
adc
fcompl
jbe
das
mov
xchg
icebp
adc
mov
sbb
inc
aad
mov
gs
xchg
sub
test
call
or
cmp
dec
in
pop
xchg
sub
push
insl
add
scas
mov
loope
mov
mov
les
xchg
test
movsl
fldcw
jge
cli
sub
sub
dec
loope
adc
mov
iret
bound
xchg
lock
out
movsb
cmp
jle
cmp
pushf
xor
mov
xchg
outsb
add
jo
sbb
rclb
loope
rcll
test
lods
fnstenv
pop
out
fs
xor
sub
push
call
or
mov
pop
repnz
adc
mov
stos
inc
ja
out
test
es
push
in
out
push
jns
shrl
dec
xchg
and
dec
jecxz
fcoms
test
xor
mov
adc
push
ret
ficompl
ja
sub
xchg
out
adc
mov
sbb
mov
adc
out
xor
test
lret
sti
pop
xchg
sub
dec
lods
mov
fildll
and
ret
hlt
push
icebp
mov
cmpsb
xsha256
cmpsb
xlat
push
sub
pushf
in
dec
dec
loop
push
and
aas
pushf
imul
xchg
out
xchg
and
movsl
cmp
add
ret
pop
pop
popf
xor
call
mov
xchg
insl
fnstenv
sbb
mov
adc
lock
xor
sub
push
call
or
mov
pop
lock
adc
mov
stos
inc
jne
out
xchg
es
jle
jns
ret
add
loopne
and
dec
loope
fcoms
jo
sbb
fs
movsb
cmp
test
mov
ret
pop
dec
fcomps
js
sub
xchg
out
jle
outsb
mov
push
mov
shl
mov
arpl
xchg
and
stos
push
mov
icebp
out
xor
cmpsl
pop
jns
cmp
dec
out
pop
xchg
mov
outsb
add
fildll
and
shrb
test
leave
pusha
inc
cmpsb
adc
cwtl
clc
lds
mov
dec
jecxz
or
mov
into
pop
inc
mov
mul
inc
cmpsb
cmp
xor
push
popf
xor
call
mov
xchg
insb
std
fnstenv
mov
mov
push
testl
aad
pop
icebp
arpl
xor
daa
test
mov
push
call
or
mov
pop
out
lea
jg
imul
xchg
leave
pusha
and
out
sbb
ret
test
lret
sti
lea
xor
sub
xor
mov
ror
les
in
sbb
call
rcrl
cmp
push
bound
lret
into
ja
cmp
lds
add
pop
punpckldq
mov
nop
pop
into
test
out
jno
adc
dec
push
out
lock
dec
loopne
int3
loop
add
lods
mov
inc
inc
mov
loop
data16
addl
adc
mov
scas
xchg
fldcw
add
out
and
or
and
pop
cmp
mov
mov
popa
mov
push
push
mov
clc
hlt
push
sbb
fisttps
mov
sahf
mov
iret
mov
push
in
xchg
lods
std
iret
mov
cmp
or
cmp
jnp
test
pushf
jge
pop
dec
out
iret
or
xor
push
nop
jg
sbb
movsb
test
push
dec
and
stos
ljmp
pusha
jp
jl
ficompl
jns
push
rorb
rcr
out
adc
push
aad
lret
out
ds
pop
out
or
cmp
faddl
mov
sub
xor
push
adc
pop
pop
repz
push
inc
push
in
inc
push
lds
xor
divb
sub
fs
call
sub
test
cmp
sbb
sub
push
rcr
nop
call
stos
jno
mov
mov
testl
das
stc
pushf
movsl
xchg
and
out
das
popf
ljmp
insl
les
fsubs
outsb
inc
mov
push
jo
es
call
pop
fistps
adc
fnstenv
clc
lods
cs
repnz
dec
das
hlt
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
clc
call
rcr
pusha
mov
sahf
cmp
ficoml
xlat
orb
mov
mov
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
adc
hlt
aam
xchg
mov
adc
test
dec
xchg
test
jl
out
pushf
ret
movsb
out
adc
in
cltd
