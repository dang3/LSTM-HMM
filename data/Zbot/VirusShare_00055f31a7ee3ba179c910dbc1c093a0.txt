in
push
jnp
loop
frstor
push
mov
mov
jp
cwtl
shlb
rcl
jo
sub
mov
mov
pusha
call
add
repnz
sarl
sbb
int
inc
jno
scas
inc
aad
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
jb
sub
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
mov
mov
mov
sub
push
pop
xor
cmp
je
sub
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
jmp
mov
pop
ret
inc
xchg
insb
jnp
test
js
scas
ljmp
testb
push
sub
mov
insb
fwait
xor
mov
cltd
loope
add
xlat
outsl
fistps
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
jmp
adc
addr16
and
pop
jae
jbe
sub
sub
cltd
sbbl
in
dec
mov
bnd
daa
and
aad
fdivrs
cmp
into
rolb
scas
popf
mov
or
das
fmulp
out
pop
fsubrl
xchg
push
subl
mov
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
mov
sti
popa
mov
jecxz
and
push
movsl
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
pusha
bound
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
sub
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
jmp
shlb
xchg
mov
or
out
jbe
push
mov
out
sub
cli
xchg
call
mov
dec
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
call
pusha
out
xchg
das
stos
push
mov
and
int
addr16
inc
andl
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
mov
sub
dec
sbb
mov
sub
hlt
adc
mov
push
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
mov
add
stos
add
add
loopne
add
lods
and
add
add
lock
add
and
add
and
add
add
dec
and
add
add
and
add
and
add
and
add
add
push
add
movsb
and
add
and
add
and
add
add
add
add
xor
add
sub
add
or
add
pop
and
add
add
test
add
js
add
repnz
add
add
add
and
add
and
add
add
add
and
add
and
add
add
hlt
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
add
loopne
add
lods
and
add
add
lock
add
and
add
and
add
add
dec
and
add
add
and
add
and
add
and
add
add
push
add
movsb
and
add
and
add
and
add
add
add
add
xor
add
sub
add
or
add
pop
and
add
add
test
add
js
add
repnz
add
add
add
and
add
and
add
add
add
and
add
and
add
add
icebp
add
imul
jb
je
arpl
add
push
add
fs
je
insl
inc
add
dec
add
arpl
inc
add
jae
inc
outsl
jo
inc
imul
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
gs
outsl
outsb
jae
insb
gs
add
add
je
outsl
imul
jbe
jae
add
inc
jbe
outsb
je
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
je
jb
jbe
push
jns
gs
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
insb
jae
jb
outsb
push
add
sbb
gs
outsl
outsb
jae
insb
gs
add
imul
insl
gs
insb
outsl
jae
add
add
popa
jo
imul
inc
gs
gs
inc
je
insl
add
rolb
dec
gs
jo
gs
jb
jns
mov
push
insb
gs
add
je
imul
bound
gs
add
add
fs
imul
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
dec
inc
dec
xor
cs
insb
add
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
gs
je
inc
js
arpl
imul
outsw
jb
add
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
inc
inc
add
lods
enter
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
pop
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jp
jl
lods
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
lret
int
int
rcl
shr
rcl
shl
ror
iret
hlt
int
int
leave
mov
out
mov
mov
mov
mov
lods
stos
lea
cltd
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
leave
lret
leave
not
rcl
cld
xlat
xlat
xlat
std
fdivr
fcom
dec
iret
iret
dec
int
aam
aad
ror
sar
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
sbb
mov
jnp
mov
sar
dec
lret
ror
iret
aad
xlat
call
fcomp
call
aad
into
int3
into
dec
into
int
aam
aad
int
int
rol
mov
mov
lods
std
cmpsl
cmpsb
test
xchg
xchg
xchg
mov
push
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
int
call
rcl
fcom
fdivr
xlat
fcom
call
aad
dec
int3
int
leave
leave
lret
int
inc
sarb
pushl
cmpsl
cmpsb
jmp
cltd
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
imul
pop
pop
pop
fs
push
sbb
sub
aaa
ss
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
inc
enter
rcl
call
call
dec
rcl
dec
leave
enter
inc
ret
ret
mov
mov
ljmp
mov
pushf
xchg
cwtl
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jg
jg
jno
jo
arpl
mov
cmp
inc
inc
mov
outsl
outsb
jo
popa
popa
bound
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
lret
dec
lret
lret
inc
mov
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
xchg
lcall
lahf
aas
ds
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
jo
pop
pop
pop
or
jl
nop
mov
xchg
xchg
xchg
incb
jp
idivb
jp
outsl
jo
out
pushw
addr16
jne
jg
jge
jp
js
fs
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
nop
incl
addl
xchg
xchg
xchg
sahf
mov
mov
mov
jns
js
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
addl
xchg
data16
cmp
es
jle
cltd
lcall
stos
stos
test
lods
stos
lods
sti
lods
lods
lods
lods
lods
stos
test
test
std
lcall
incl
jg
jns
js
jnp
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
lea
mov
prefetch
or
inc
inc
dec
insl
insl
insl
jl
xchg
leave
lcall
out
lcall
std
mov
xchg
mov
mov
nop
nop
lcall
cmpsb
cmpsl
ljmp
mov
mov
mov
mov
std
mov
mov
movsl
movsb
movsl
addr16
jnp
lods
test
add
pop
adc
lods
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
pushf
pushf
std
movsb
mov
mov
in
nop
nop
in
xchg
push
jne
or
add
or
or
sub
es
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
xchg
lcall
cmpsl
cmpsl
ljmp
cmpsl
scas
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
ret
mov
lcall
mov
mov
call
xchg
xchg
xchg
xchg
pushf
popf
popf
movsl
movsl
movsb
test
movsb
mov
fstpt
jp
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
jae
jl
jle
test
mov
mov
xchg
testl
mov
jmp
lahf
pushl
insb
xchg
mov
dec
xchg
mov
sub
mov
movsl
mov
mov
mov
mov
movsb
mov
add
mov
add
pop
adc
mov
lcall
mov
call
xchg
xchg
call
xchg
xchg
cltd
lcall
lahf
mov
movsb
std
mov
cwtl
fwait
out
xchg
xchg
xchg
xchg
les
xchg
fwait
in
xchg
xchg
out
lea
nop
stc
xchg
xchg
std
xchg
jb
cltd
addr16
lahf
pop
cmp
push
jle
stos
inc
jl
mov
jns
mov
je
mov
insl
ljmp
adc
lods
or
stos
or
mov
jge
mov
mov
lods
pushf
movsb
movsb
movsb
and
add
shll
adc
mov
jmp
nop
xchg
call
fwait
fwait
lcall
mov
sahf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
cltd
cld
xchg
xchg
sahf
stc
sahf
lcall
popf
mov
xchg
imul
xchg
dec
jns
cltd
cmp
insb
pushf
pop
push
jmp
adc
stos
adc
lods
pcmpgtw
stos
pcmpgtd
scas
adc
mov
push
mov
imul
mov
fwait
scas
mov
scas
lods
scas
movsl
movsb
movsb
sub
movsl
movsl
movsl
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
jmp
mov
movsl
jmp
xchg
cwtl
decl
mov
decl
cltd
jo
lcall
call
sub
decl
or
xchg
push
pop
call
add
lahf
push
pop
jmp
sbb
mov
outsb
pushl
outsb
mov
and
mov
and
sarl
inc
xchg
lods
mov
scas
scas
mov
mov
movsl
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsb
movsb
jmp
test
ljmp
cmpsb
cmpsl
lcall
jg
decl
inc
outsl
decl
sub
mov
popa
decl
or
addb
test
push
decl
add
popl
push
call
add
mov
or
mov
jo
mov
ja
mov
sub
shrl
inc
sub
lds
cmp
enter
leave
mov
cld
scas
mov
lret
movsl
dec
mov
movsl
mov
add
add
add
push
push
adc
cmpsl
scas
ljmp
popf
jmp
stos
test
ljmp
mov
lods
scas
lods
jmp
jb
decl
push
push
incl
or
add
push
incl
add
xchg
push
decl
add
xchg
add
lcall
jmp
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
lahf
fwait
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
push
decl
push
pop
incl
or
xchg
push
decl
add
add
xchg
add
pushf
add
mov
add
lods
add
mov
jb
les
test
leave
inc
mov
int
mov
roll
call
dec
nop
call
dec
xchg
call
dec
xchg
fisttpl
fmull
fistl
call
xchg
mov
mov
movsl
movsb
movsl
arpl
mov
add
add
add
cltd
xchg
cltd
add
dec
adc
jl
mov
cmpsl
lods
jmp
stos
stos
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
ss
decl
sbb
decl
push
pop
decl
or
add
add
xchg
add
pushf
add
mov
add
test
pop
fs
es
int
call
push
xchg
call
push
lcall
push
popf
ficomps
ficomps
jmp
pop
mov
jmp
pop
lahf
call
test
mov
mov
cmpsl
cmpsl
cmpsl
jne
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
ja
lahf
lcall
lahf
fwait
lahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
nop
pop
call
and
xchg
and
xchg
sbb
nop
or
xchg
add
xchg
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
cltd
jmp
bound
jmp
cmpsb
jmp
data16
jmp
gs
jmp
addr16
dec
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
je
cltd
xchg
cwtl
call
lahf
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
lcall
sbb
pop
call
add
mov
add
lods
add
mov
pushl
movq
rolb
jmp
outsb
lods
jmp
jo
jmp
jb
ljmp
in
jae
in
jne
out
jne
out
je
jmp
xchg
mov
cmpsl
test
lahf
mov
lahf
add
add
imul
mov
popf
lcall
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
sahf
cmp
sahf
cmp
mov
sbb
pop
call
add
movsb
add
test
popa
pushl
add
mov
sbb
ficoml
jmp
ja
call
jle
in
jg
out
cmpb
repnz
push
test
call
mov
shl
test
sahf
daa
mov
mov
add
fs
add
cmp
pop
pop
push
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
mov
mov
lahf
insb
mov
lcall
jmp
aaa
jbe
cltd
sbb
xchg
add
sahf
add
movsl
add
add
scas
add
mov
gs
mov
add
call
es
mov
in
mov
repnz
mov
push
xchg
ret
push
nop
ret
push
nop
clc
xchg
clc
pop
out
mov
stos
stos
mov
popf
sahf
xor
sahf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
mov
xchg
lcall
dec
jg
lods
dec
test
movsb
xor
pop
lcall
add
add
lods
add
mov
arpl
mov
add
leave
add
mov
out
mov
out
xchg
cltd
push
lcall
negl
push
sahf
lret
cld
sahf
int
cli
lahf
int
sti
cltd
lret
push
xchg
ret
fbstp
cli
mov
mov
lahf
sahf
mov
add
add
add
ss
cmp
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
ret
inc
leave
enter
sar
mov
ljmp
push
xchg
movsl
sub
cltd
or
sahf
add
mov
add
mov
popa
mov
add
enter
rorl
jne
fiadds
in
mov
push
movsl
into
push
movsb
into
clc
test
cli
cmpsl
sar
cld
cmpsb
sar
cli
test
std
stos
sar
test
iret
push
lahf
mov
int3
std
mov
mov
lahf
lahf
lahf
dec
xchg
xchg
xchg
add
fwait
lcall
xor
add
sub
or
inc
bound
pop
xlat
jae
jo
mov
mov
ret
sarb
ret
mov
leave
leave
inc
rol
mov
cmpsl
jmp
mov
lods
dec
test
lahf
sbb
lcall
pop
ljmp
add
mov
add
int3
add
add
ficoms
push
popf
lret
sti
lods
sar
sti
mov
cli
mov
cld
scas
sar
mov
cld
mov
std
mov
mov
pushl
sar
mull
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
dec
dec
outsb
outsb
outsb
mov
mov
aad
fsubr
xlat
fdiv
iret
rcl
std
lret
dec
lret
leave
dec
leave
lret
dec
lret
lret
inc
leave
leave
mov
scas
jmp
push
mov
lods
jle,pt
sahf
or
pop
ljmp
arpl
mov
add
roll
outsl
fadds
jb
fiadds
jne
call
jno
cld
scas
aad
std
mov
std
mov
fdivr
std
mov
fdivr
cld
mov
fdivr
std
rcr
std
mov
lret
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
pop
out
out
in
in
loop
jecxz
fsubp
fsub
fcmovu
fcomi
fsqrt
aad
fdivr
into
ror
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
add
aad
jno
faddl
jne
in
ja
in
xor
cli
mov
loopne
inc
loopne
inc
loope
inc
loopne
inc
loopne
dec
loopne
dec
std
leave
loopne
dec
fdivrp
std
leave
loope
cli
mov
lret
lret
mov
mov
xchg
adc
add
add
incb
std
add
std
add
div
or
in
jmp
in
out
in
sub
out
in
dec
jmp
jmp
call
aad
fstp
jmp
mov
xchg
cmpsl
cmp
movsl
adc
jmp
add
mov
arpl
mov
add
into
add
fadds
je
loopne
jbe
ljmp
sti
mov
loop
std
int3
loop
dec
in
dec
in
std
int3
loop
dec
loop
std
into
loopne
call
in
call
jecxz
std
shl
call
jecxz
cld
ret
fdivr
in
mov
fdivr
test
cmpsb
mov
xchg
cwtl
add
add
add
incb
std
incb
idiv
testl
repnz
repnz
out
lock
pop
in
repnz
cmp
out
out
pop
loopne
loope
lds
xchg
sti
mov
pop
pop
jmp
add
mov
fs
add
enter
roll
jb
fiaddl
je
in
jns
in
push
pop
test
cld
mov
shl
cld
shl
std
shr
std
shr
shl
aam
out
std
xlat
jmp
fldl2t
fucomi
cld
shl
push
ret
jecxz
fcos
leave
lret
test
xchg
xchg
and
xchg
xchg
add
std
cli
add
cld
clc
add
sti
stc
add
div
or
aam
xor
je
negb
add
test
pusha
ljmp
add
ret
add
lret
call
add
faddl
jbe
out
js
out
sbb
clc
jbe
sti
loopne
std
fsubr
fucomi
fucomi
fucomi
std
fldpi
fucomp
fucomi
std
fucomi
fsubrp
std
fucomip
jmp
in
shl
push
ret
aam
call
rcl
clc
stos
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loope
add
mov
xchg
stos
jnp
repnz
and
lahf
add
test
pusha
pushl
add
ret
add
int3
add
aad
jno
loopne
je
ljmp
cld
nop
cld
shl
fucomip
std
fucomp
fldpi
fucompp
xlat
out
in
cld
shl
cli
shl
cli
shl
clc
into
test
out
mov
fcomp
xlat
sti
mov
mov
cltd
lcall
fwait
cltd
cltd
add
fcom
add
sarb
sahf
sub
add
test
pop
pushl
add
lds
imul
add
add
jmp
xor
sti
leave
loope
cld
lret
sti
idivl
aam
repnz
into
push
mov
int
jmp
mov
sar
ljmp
imul
fsub
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
into
int3
add
rol
mov
cmpsb
loopne
ss
mov
add
mov
addr16
mov
add
into
or
rorl
je
fimull
ja
loope
cmp
call
scas
lret
mov
out
enter
cld
fbstp
mov
enter
int3
in
lret
shl
aad
out
loopne
in
in
test
in
lock
call
lret
lods
lods
stos
adc
test
cmpsb
add
rolb
ret
mov
stos
aam
dec
cmp
sbb
cmpsl
sbb
scas
and
js
mov
inc
test
ret
stc
leave
fs
test
mov
out
mov
mov
enter
int3
rcl
int3
mov
int
mov
rcl
jg
fcmovu
jb
loopne
gs
in
out
call
xor
div
mull
lock
or
mov
int3
add
add
add
rol
mov
mov
les
insb
mov
test
xchg
ljmp
mov
sarb
test
mov
pushf
lret
ret
int3
lret
ror
into
addr16
iret
push
rcl
rorl
xlat
inc
rcl
aad
daa
fcomp
fistpl
fcmovu
fstl
fsubp
loope
loope
in
out
jmp
add
cli
testb
std
sti
add
incb
std
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
ret
inc
ror
xor
int3
lret
ror
and
aam
rcl
rcll
iret
aam
aam
push
rcr
add
add
loopne
add
in
add
jmp
add
xlat
add
incl
mov
mov
add
ret
ret
vmovapd
mov
mov
push
rol
or
mov
add
into
leave
add
aam
add
add
xlat
aad
fcom
add
aam
add
xlat
loopne
xlat
aam
add
loopne
add
fucom
add
out
add
icebp
lock
std
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
ret
mov
mov
mov
test
cmpsl
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
iret
shr
aad
aad
rcl
aam
iret
ror
cli
int
int3
stc
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
aas
aas
and
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
rcl
iret
xlat
xlat
call
xlat
aad
rcl
sar
iret
int
dec
lret
int3
mov
mov
cld
lods
lods
stos
icebp
cltd
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
jne
fs
dec
dec
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
dec
int3
int3
call
rcl
call
aam
dec
lret
mov
mov
mov
ljmp
lahf
lahf
xchg
xchg
cwtl
jmp
jo
xchg
push
pop
adc
xor
add
add
add
add
jg
jg
jp
jl
test
jns
imul
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jno
jno
scas
scas
scas
pop
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
xchg
cltd
fcoml
addb
jnp
jnp
js
js
jp
jnp
jnp
jnp
jae
jae
push
push
push
cmp
jae
sahf
sahf
popf
mov
scas
lods
repz
lods
scas
sti
scas
lods
lods
std
test
test
pushf
popf
sahf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
cmpsb
cltd
je
jae
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
xchg
mov
lahf
lcall
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
jo
orl
lcall
mov
call
pushf
popf
ljmp
test
std
mov
scas
mov
mov
mov
cmpsb
mov
addb
add
add
add
add
popa
or
lods
mov
cmpsl
lahf
movsb
decl
call
cwtl
xchg
std
sahf
sahf
lahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
pop
outsl
insl
insl
outsb
xchg
subl
mov
std
xchg
mov
ljmp
sbbb
pop
mov
mov
jnp
mov
scas
lods
insl
stos
test
add
add
add
pusha
popa
popa
or
mov
in
mov
xchg
call
cwtl
lcall
cltd
cltd
cltd
pushf
fwait
fwait
popf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
cmp
dec
jnp
movsb
inc
jp
lods
ss
scas
sub
mov
outsb
ljmp
sbb
mov
mov
scas
mov
movsl
movsl
mov
add
add
add
popa
or
mov
in
movsb
cmpsl
call
popf
lahf
jmp
mov
xchg
decl
orb
xchg
jae
cld
xchg
pusha
cmp
dec
jns
xchg
cmp
xchg
daa
call
lcall
or
push
pushl
sbb
mov
and
rcrb
mov
lods
scas
xchg
sahf
sahf
popf
adc
add
add
popa
popa
popa
or
mov
stos
movsb
test
mov
test
ljmp
test
lcall
pop
jnp
mov
imul
sub
mov
pusha
incl
or
mov
pop
call
add
cmpsb
or
pushl
jnp,pn
shrl
inc
jle,pn
leave
xor
dec
pop
xchg
inc
test
imull
test
add
add
add
pop
popa
pop
or
movsl
test
test
movsl
jmp
mov
pushl
mov
jmp
jo
mov
pop
decl
or
add
push
decl
add
lahf
add
cmpsl
add
mov
outsb
inc
cmp
dec
inc
mov
aam
nop
call
inc
nop
fmuls
call
bound
stc
mov
mov
movsb
movsl
movsb
daa
incl
add
add
pusha
popa
pop
or
popf
mov
ljmp
mov
mov
mov
stos
lcall
push
arpl
xchg
sbb
mov
push
call
add
lahf
add
add
lods
add
mov
dec
nop
fcomps
fcompl
ficomps
jmp
pop
mov
fildll
dec
test
cld
mov
mov
cmpsl
stos
movsl
xor
addl
dec
dec
dec
pop
jl
jp
popf
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
jmp
cs
lcall
and
xchg
adc
add
lahf
add
cmpsl
add
scas
add
pop
imul
fsubl
jmp
insl
stos
jmp
outsb
stos
call
jo
out
jb
call
test
std
mov
test
jg
add
add
dec
dec
dec
pop
insl
outsb
push
mov
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
sahf
sub
xchg
or
lcall
pop
ljmp
fs
or
inc
xchg
jmp
jns
jmp
cmpl
xrelease
push
mov
mov
cmpsb
cmpsl
push
lcall
add
sub
push
push
dec
pop
pushw
mov
mov
mov
sarb
mov
xchg
test
sub
cltd
or
mov
add
mov
fs
mov
adc
jmp
pusha
mov
push
xchg
xchg
push
cwtl
stc
lcall
notb
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
pushl
push
xchg
lods
dec
test
mov
add
pusha
pushl
add
lret
add
fldenv
cmp
jl
push
movsb
int
imulb
sar
sti
stos
iret
sti
stos
iret
std
stos
sar
cli
cmpsl
int
out
leave
inc
rol
test
sahf
pushf
or
add
add
dec
dec
dec
aaa
je
je
stos
stos
test
out
into
int3
cmc
lret
int3
lret
lret
enter
mov
popa
ljmp
ljmp
add
roll
dec
add
fiaddl
ljmp
std
mov
mov
fcos
std
mov
mov
sar
ljmp
repz
lods
mov
add
add
add
add
or
aam
dec
loope
loope
fstp
fcmovnb
xlat
out
shlb
test
jb
cmpsb
pop
pusha
ljmp
add
lret
call
add
jecxz
jl
icebp
dec
mov
std
ret
loopne
inc
loopne
inc
loopne
std
loopne
std
enter
leave
loope
std
lock
lret
divb
pushf
pushf
sbb
add
add
incl
incl
jmp
or
in
out
sbb
jmp
xor
loop
loop
lds
mov
mov
add
mov
fs
add
into
add
fldl
jbe
ljmp
std
sti
shl
std
shl
std
shl
std
shl
xlat
out
std
jmp
push
xlat
fcmove
sar
mov
mov
add
std
incb
incl
std
cld
pop
aad
aad
mov
pop
xchg
sahf
or
ljmp
add
add
rolb
jno
filds
jbe
in
and
shl
fsubr
fld1
cld
fsubr
std
fsubr
cld
cld
fsub
cld
aad
push
xlat
jmp
rcl
sti
mov
lahf
lahf
das
add
add
int3
into
int3
or
fs
mov
add
mov
add
roll
jae
loope
ja
in
xor
stc
int
stc
lret
test
aad
repnz
out
ret
in
sar
in
shl
in
jecxz
fsubrp
leave
mov
test
test
add
add
add
aad
mov
jb
push
gs
mov
insb
inc
sbb
int
jl
xlat
cs
ficoms
clc
in
mov
out
in
lret
jmp
fnstsw
leave
ffreep
sarl
in
fcompl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
movsl
les
push
xchg
mov
fidivrl
jle
rol
stos
mov
mov
ret
mov
lret
insl
aam
into
pop
ror
rorl
cmp
loopne
das
jecxz
fsubl
jecxz
icebp
adc
jmp
or
incb
std
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
mov
rcll
rol
adc
rcl
or
fnstsw
or
into
int
stos
stos
lods
add
std
std
add
incb
lcall
shufps
or
int3
int3
into
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
cltd
add
rol
enter
leave
enter
mov
ret
mov
scas
scas
scas
insb
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
mov
jmp
aam
aad
rcl
sar
iret
int
std
mov
mov
roll
sbb
add
add
add
add
add
add
add
add
jno
jae
data16
dec
inc
das
das
cs
and
add
add
mov
mov
cmpl
dec
int3
int
aam
aam
int
into
inc
enter
mov
lcall
mov
push
add
add
add
add
jae
je
test
adc
popa
bound
push
outsb
outsl
jb
pusha
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jb
es
and
pop
add
add
jb
jb
pushf
xchg
lcall
xchg
clc
xchg
test
test
imul
push
inc
mov
pushf
into
movsb
mov
mov
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
movsb
test
cld
mov
xchg
xchg
xchg
cld
sahf
pushf
pushf
cmc
cwtl
cwtl
cwtl
in
addb
pusha
pusha
bound
jge
mov
xchg
xchg
notl
mov
pushl
push
lcall
lods
scas
push
lods
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
lcall
cltd
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
fs
push
jnp
fwait
inc
jne
movsl
cmp
scas
sub
pushl
sbb
aaa
jge
mov
mov
imul
int3
add
test
pop
scas
movsb
stos
test
popf
sahf
lahf
jmp
cmpsb
call
push
ja
nop
inc
je
lea
imul
nop
adc
cwtl
or
mov
push
outsl
mov
es
shrl
inc
aas
test
mov
scas
mov
test
add
add
jae
movsb
popf
lahf
test
cmpsl
cmpsb
cmpsl
ljmp
mov
jmp
sub
adc
mov
push
incl
add
add
mov
adc
shll
call
inc
mov
aad
call
push
xchg
dec
lcall
movsb
mov
add
push
push
test
lahf
mov
pushl
mov
movsl
call
pop
arpl
mov
pusha
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsl
call
pushf
mov
test
cmpsb
cmpsb
pop
add
add
popa
arpl
mov
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
push
pop
jmp
add
mov
xor
jmp
jnp
push
jle
out
jge
ficompl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
sar
mov
jmp
inc
jge
sahf
and
pop
jmp
add
pop
insb
fmull
in
lea
push
xchg
push
cwtl
leave
push
xchg
enter
inc
mov
movsb
sub
aas
aas
inc
adc
push
xchg
xchg
mov
inc
mov
xchg
ljmp
sbb
movsb
add
mov
arpl
ret
add
aam
ja
ljmp
stc
stos
sar
sti
lods
sar
cld
lods
sar
std
scas
sar
jmp
lret
mov
movsl
ds
incl
xor
xor
inc
scas
mov
mov
mov
aam
rcl
shr
lret
cli
mov
mov
jmp
arpl
les
push
aam
jae
out
test
clc
nop
ret
cld
mov
fdivr
std
ret
cld
ret
inc
icebp
mov
ret
test
addl
stos
stos
stos
add
in
jmp
out
out
out
out
loop
jecxz
fcmovu
fldenv
movsl
and
pop
mov
add
fiadds
jne
out
cmp
dec
in
call
in
std
shl
call
in
aam
push
enter
int3
in
lods
scas
scas
popa
jg
addb
add
std
std
std
add
std
incl
lret
int3
shrl
lahf
sbb
lods
add
mov
add
loope
jp
hlt
push
cmpsl
std
enter
aad
std
out
aad
cld
aad
sti
aam
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
jg
jmp
lods
cld
out
mov
shl
call
mov
shl
out
aad
ljmp
scas
push
fwait
fwait
fwait
add
sarl
xchg
dec
and
push
mov
shlb
jbe
mov
fdivrs
lret
vmovdqa
int3
into
pop
xlat
dec
in
fistpll
out
out
out
out
in
sbb
mov
mov
cmp
movsb
lods
arpl
mov
ret
mov
cs
mov
lret
sbb
fstp
bswap
into
into
or
aam
push
std
incb
jg
addl
stos
incb
mov
std
incb
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
ja
mov
je
jns
cld
cmc
xchg
dec
cmpsl
popf
push
test
push
cmp
cs
int3
lea
mov
incb
and
xor
test
mov
jmp
mov
cmp
and
cmp
fimuls
jle
pop
in
pop
mov
pop
mov
lock
dec
bswap
sub
pop
fildl
mov
daa
cmpsl
rorb
jo
push
xchg
cld
or
jnp
ss
enter
and
mov
push
sub
out
outsb
cmc
cmp
jmp
pop
movsb
in
mov
cmp
pop
scas
pop
out
sub
xor
adc
in
adcb
adc
int
test
push
pop
aad
add
mov
in
add
test
xor
cld
pusha
divl
jecxz
arpl
xchg
pop
mov
int
lcall
jbe
mov
sub
push
repnz
cmp
ds
dec
lahf
test
pop
mov
dec
or
xor
subl
jbe
sbb
daa
mov
test
push
les
add
adc
or
sarb
pop
call
cmc
bswap
dec
push
xor
lea
cs
pop
add
sbb
fiaddl
sahf
addl
adcl
jle
je
dec
or
divl
push
fisubrs
in
cmp
test
jmp
hlt
pushl
jbe
stos
mov
sbb
out
rclb
outsb
ljmp
aad
pop
mov
leave
jbe
mov
pop
jmp
scas
outsb
into
shlb
clc
sbb
sub
into
mov
imul
mov
popa
insl
inc
in
adc
mov
in
repnz
jmp
movsb
scas
add
xor
in
imul
inc
add
imul
dec
pop
daa
in
adc
enter
sub
fidivrl
sbb
jl
push
lds
data16
mov
mov
int
cwtl
std
pop
sti
xor
dec
loopne
jae
sbb
mov
sub
xchg
bound
mov
push
icebp
cmp
jnp
push
xor
ds
jle
inc
outsl
idiv
popa
negl
in
jmp
dec
cs
adc
aas
adc
in
bound
cmp
neg
aas
xor
mov
int
out
ret
divb
mov
cltd
mov
pop
nop
or
ljmp
loopne
insb
movsb
sub
mov
fstpt
push
xchg
push
call
or
outsb
inc
sbb
mov
push
imul
test
mov
xchg
mov
fnstenv
xchg
test
gs
out
inc
add
jo
mov
mov
inc
lea
xchg
insb
or
insb
mov
adc
push
rcll
add
lahf
imul
loopne
mov
cmc
sti
pop
cld
in
inc
nop
or
popf
xchg
and
push
sbb
imul
mov
adc
inc
sbbb
testl
cmp
cmp
sbb
fists
jmp
push
and
adc
cmc
stos
jno
xor
call
cmp
push
je
mov
sarl
inc
lds
lret
xor
sbb
leave
insl
cmp
ljmp
xchg
adc
mov
mov
and
negl
sub
and
bound
jns
adc
lods
or
pop
mov
imull
xchg
bswap
xor
popa
stos
xchg
jl
je
xor
push
ja
xchg
mov
xchg
sub
mov
test
movsb
push
dec
mov
xchg
and
ret
outsl
test
data16
jmp
jg
hlt
dec
leave
jge
cli
dec
adc
leave
aam
xor
cmpsl
xor
sub
lea
xchg
mov
icebp
outsl
fwait
int3
sub
fnsave
jle
loope
xor
test
sub
jle
jl
xor
sub
bswap
cmp
add
cmp
dec
dec
mov
ss
loop
push
imul
dec
pop
xor
fstps
jge
jae
cmpsl
or
lds
mov
jns
gs
lret
xchg
lret
mov
dec
xchg
mov
lcall
add
xchg
lcall
loope
pop
and
mov
subl
sub
jae
test
inc
inc
xor
cmp
add
pop
and
push
cmp
popa
dec
dec
shr
pop
mov
repnz
inc
ds
jnp
ljmp
mov
xchg
and
mov
scas
and
jno
lods
mov
cmp
ret
sbb
dec
adc
mov
lret
mov
stc
adc
repz
jmp
jmp
mov
cmpsb
xchg
add
dec
mov
rorb
mov
and
xchg
push
pushf
hlt
shlb
mov
out
jae
adc
mov
shr
sti
lea
repnz
fdiv
hlt
lahf
data16
sub
jecxz
lods
xor
xor
cld
lret
cmp
xlat
sti
imul
fdivr
add
xchg
dec
push
aas
xchg
pop
int3
adc
mov
sub
out
nop
cld
xor
cmpsb
adc
cmpsb
sub
call
cs
divb
mov
add
mov
push
push
lret
lret
fiadds
mov
xor
fldl
test
sti
fldenv
sbbb
cli
lods
inc
sub
mov
pop
in
mov
inc
aaa
hlt
mov
es
pop
mov
addr16
in
ficomps
add
push
push
push
mov
aas
sub
jo
cmp
xchg
dec
ffreep
negl
sub
data16
adc
test
sti
movsb
js
sbb
cmp
xchg
sub
mov
ret
fidivs
popf
shrb
push
std
xchg
dec
lock
icebp
mov
arpl
cmpsb
pop
mov
lret
sub
call
popa
negl
mov
lea
inc
fiaddl
insl
loopne
popa
clc
xchg
add
mov
movsb
icebp
in
inc
jl
adc
popa
mov
xor
mov
insl
out
mov
mov
fs
in
cmp
dec
mov
inc
fdivrl
lods
insl
fbld
cli
xchg
add
mov
rcll
and
sub
mov
addr16
mov
sub
arpl
daa
leave
dec
out
dec
sbbl
lret
outsb
mov
mov
ret
hlt
adc
stc
nop
les
jg
in
scas
push
mov
xor
mov
mov
pop
repnz
xor
popa
xor
pusha
sahf
rcrb
lods
dec
sbb
sub
pusha
insl
cs
outsb
mov
lods
push
rcll
das
aaa
hlt
into
jne
pop
ss
jae
cld
test
mov
lret
movsb
dec
stc
mov
sahf
xor
repz
lods
pop
repnz
cmpsb
jns
xor
sbb
test
aaa
into
dec
movsl
mov
xlat
insb
push
in
popf
clc
shrl
mov
icebp
mov
xchg
sub
cmpsb
iret
gs
xchg
lock
gs
dec
loop
or
test
xchg
imul
nop
out
push
sbb
movsl
cmp
add
fbstp
push
data16
xchg
loope
adc
call
xchg
push
sbb
fidivs
sub
pop
div
mov
jle
or
ror
fs
push
jmp
and
stc
sarb
mov
clc
leave
sub
dec
sbb
dec
insl
lea
sahf
imul
repz
lds
adc
jle
insb
lds
mov
sahf
jecxz
jecxz
repz
mov
adc
inc
push
cmp
xchg
mov
movsb
pop
not
mov
jp
sub
cmp
and
addl
inc
fcoms
pop
das
out
sub
dec
loope
cmpl
xchg
call
or
stos
xor
push
adc
xor
ja
push
sbb
fwait
out
movsl
inc
fst
adc
mov
notl
out
mov
pop
add
xchg
js
pop
bnd
nop
daa
push
xchg
cmc
mov
sub
fnstenv
mov
add
testl
stos
out
mov
stos
mov
sbb
dec
out
xchg
lods
inc
dec
bound
inc
insl
mov
mov
mov
fs
or
sarl
add
ds
mov
sbb
ds
ret
shrl
pop
or
jp
in
les
lcall
push
call
sbb
aaa
decb
loopne
out
adc
xor
add
mov
xchg
inc
cmp
cmpsb
stos
pop
stc
nop
mov
sub
xor
adc
inc
xlat
out
cmpsl
adc
andb
iret
adc
adc
arpl
inc
stos
dec
pop
popf
sarl
jle
mov
movsl
stos
subl
pop
jmp
cmp
push
loopne
xchg
sbb
out
sbb
mov
or
jb
pop
fstpt
pop
add
push
ret
inc
xchg
icebp
insb
sbb
cld
jne
iret
xchg
repz
mov
inc
shrb
iret
cs
jmp
mov
inc
cli
outsl
pop
jnp
cmp
popa
test
adc
xchg
inc
lds
jae
sub
fidivrs
pop
gs
mov
in
jbe
loop
and
xor
push
cmpsl
mov
ret
sti
jno
in
sbb
cmp
lret
stc
mov
pop
xchg
lea
testl
test
daa
push
cld
xchg
push
jne
scas
inc
pusha
stos
xor
mov
xchg
xchg
adc
inc
fisubl
insb
add
mov
arpl
and
mov
jo
pop
lods
inc
and
push
and
nop
daa
pop
dec
xchg
sub
lret
js
jp
pusha
enter
mov
cs
mov
pop
jo
out
xchg
xchg
scas
inc
adc
aaa
mov
ja
lods
xchg
sub
shrl
xor
insl
mov
lods
inc
jecxz
movsl
cmp
add
aaa
ss
insl
loopne
out
test
mov
lahf
test
inc
lret
and
xchg
mov
cwtl
pop
hlt
and
fidivs
inc
jnp
cmpsb
nop
cld
jl
repz
push
cmp
and
mov
mov
or
icebp
and
ds
adc
iret
mov
lcall
pop
mov
ds
in
jmp
or
shrb
lret
sbb
adc
add
xchg
dec
rol
shlb
add
les
xchg
rcrl
outsl
push
jbe
in
js
loopne
and
ljmp
mov
loopne
push
mov
fprem
sbb
inc
fnstcw
and
sub
lods
scas
clc
loope
call
push
cmp
jae
ljmp
and
xor
dec
shlb
stc
cmp
dec
mov
adc
pop
mov
pop
int3
in
sbb
push
mov
mov
cmp
mov
xchg
push
lret
push
jb
sub
dec
xor
jo
jg
push
ss
jbe
pop
aam
sahf
dec
mov
jp
push
or
sub
fdiv
mov
or
lds
mov
mov
or
and
out
lods
in
pop
mov
shlb
fsubs
lret
bound
sbbl
xchg
leave
pusha
push
das
pop
popa
aaa
leave
pusha
mov
xchg
sub
and
push
sbb
addr16
cwtl
xor
nop
mov
ret
xor
mov
cmpsl
shll
pop
sahf
test
int
cwtl
mov
ljmp
out
movsb
cmp
out
sub
ljmp
jnp
or
jl
popa
clc
adc
adcb
lock
in
xor
daa
mov
lods
adc
scas
test
lret
out
mov
push
nopl
lock
fiaddl
leave
hlt
and
aas
pop
ss
dec
pop
icebp
cmp
fdivl
dec
testb
js
fsubrs
and
idivl
enter
fnsave
lea
xchg
stos
inc
ret
dec
out
xchg
cld
xchg
nop
bound
rcll
push
fisubs
out
cmc
les
and
mov
aaa
into
push
push
shrl
test
adc
gs
icebp
das
adc
mov
cmp
sbb
je
sarb
add
dec
xrstors
test
cmp
pop
lcall
ss
xor
sahf
out
mov
mov
adc
mov
push
mov
xchg
and
pop
jle
sqrtps
mov
jb
jg
outsl
pop
out
pop
imul
mov
ss
pop
repnz
push
loopne
jno
or
cmc
ds
sahf
adcb
insl
mov
outsl
push
clc
rclb
xchg
pop
inc
fsubrs
jle
fldt
pop
lock
lds
jae
repnz
cmp
nop
inc
fmull
push
mov
dec
xor
aaa
adc
adc
aas
in
jno
mov
cmp
jl
mov
sbbl
in
sbb
push
sarl
rol
xchg
or
or
push
call
int
and
idivl
xor
pop
jg
mov
inc
sub
jne
gs
xlat
fs
xchg
fists
adc
dec
int3
in
xor
dec
inc
fdivrs
inc
dec
xchg
pop
ljmp
addr16
sbb
xchg
cmc
cmp
mov
das
jle
lahf
lea
mov
or
mov
dec
add
iret
ja
int
sti
ds
sahf
lods
mov
lds
sahf
xor
arpl
icebp
mov
or
jne
xor
aaa
push
push
out
test
jne
mov
push
fnstenv
out
imul
or
inc
sbb
outsb
lret
adc
imul
inc
lods
incb
mov
fidivrs
gs
loopne
aas
adc
cmp
sub
fs
imul
lret
xor
sub
xchg
cmp
xlat
inc
pop
xchg
sub
shrb
insb
cmp
pop
add
imul
loope
jo
ljmp
mov
mov
fidivrs
iret
jecxz
mov
leave
cltd
ret
jecxz
inc
add
arpl
mov
inc
and
arpl
pusha
test
loop
mov
gs
insl
dec
fisttpll
jo
mov
adc
push
xor
push
icebp
mov
stos
jno
repz
cld
xchg
cs
test
pusha
push
cld
xchg
sub
xchg
mov
ret
jecxz
pop
divb
add
jge
bound
add
xchg
sbb
aas
ja
js
shrl
cltd
xchg
sub
nop
nop
daa
sub
loopne
mov
pop
lods
mov
and
add
outsl
cmpsl
pop
iret
fs
test
jb
fcom
addr16
or
sarb
mov
daa
xchg
sahf
xor
fabs
mov
aaa
lret
fldt
jns
add
xchg
cld
xchg
add
test
jne
xchg
sub
xchg
ljmp
ljmp
std
jle
push
mov
outsl
pushf
into
mov
add
ret
sub
mov
sbb
dec
and
iret
jae
cmpsl
ds
xchg
inc
insl
aam
inc
or
fidivrs
pop
das
imul
adc
lock
inc
adc
inc
mov
ret
mov
jmp
or
mov
hlt
outsb
sub
inc
adc
cmp
aas
mov
push
out
cmp
xchg
call
js
in
imul
cmp
mov
dec
add
cmp
jecxz
pop
aad
es
or
jno
je
dec
pop
pop
fidivs
jle
xor
lret
fwait
xor
push
inc
xchg
in
outsl
sub
mov
sub
pop
loop
lea
and
or
or
jns
dec
loope
push
inc
dec
in
int3
xor
in
xor
hlt
mov
xor
aad
adc
clc
out
or
or
ja
dec
insb
je
cmpsb
inc
popf
jno
or
jp
xor
insb
xchg
loopne
std
mov
cmp
cmp
nop
daa
xor
sarb
mull
popa
cmp
inc
push
ds
add
or
adc
sahf
inc
adcl
sbb
sbb
push
imul
popf
mov
cs
scas
pop
daa
sar
push
into
test
arpl
fstp
mov
push
insl
jle
sahf
jg
sub
dec
jp
mov
add
adc
jae
orb
int
mov
inc
or
mov
and
and
ja
push
xor
mov
xor
xchg
stos
inc
adc
pop
icebp
push
in
mov
add
sbb
pop
sbb
and
les
jg
fs
xor
or
cmp
xor
cmp
sbb
lahf
cmpsl
insl
sub
hlt
in
sub
pop
mov
int3
rcrb
rcll
in
mov
faddp
add
mov
fdivr
in
inc
pop
mov
int3
outsl
pop
cmpsb
cmp
mov
push
jl
nop
scas
jbe
mov
mov
stos
push
mov
mov
into
pushf
xchg
adc
inc
cli
adc
cmpsb
mov
pop
fidivrl
mov
shll
lret
testb
ds
cld
flds
test
lcall
cmpsl
sbb
into
jne
xor
pop
cltd
dec
ret
out
pop
addb
pop
sbbl
push
es
dec
mov
cmp
loopne
and
cmp
fnstenv
lahf
popf
mull
les
pop
adc
lea
fwait
inc
ret
sbb
xchg
dec
in
xchg
in
movsb
scas
pusha
int3
arpl
xor
jbe
ljmp
mov
dec
sub
and
stc
cmc
add
pop
mov
ret
cmp
inc
mov
hlt
add
in
out
dec
and
rcll
jnp
jae
test
sub
pop
pop
enter
dec
loopne
push
ret
pop
add
jnp
push
lods
mov
daa
outsb
mov
sub
shlb
sbb
inc
cmp
sbb
arpl
cs
shlb
and
ja
insb
and
lds
pop
inc
adc
push
out
push
sbb
pop
cmp
jo
and
dec
push
lahf
in
sbb
insl
les
popa
popf
icebp
or
jnp
push
jp
out
xchg
sti
js
pop
repz
jecxz
cmp
pop
leave
lret
push
aad
sbb
arpl
mov
and
xchg
or
scas
or
cli
repz
sub
in
inc
aas
sbb
bound
push
rcrb
js
mov
adc
imul
xor
lds
in
push
mov
fdivr
decl
xor
orb
cmp
and
in
pop
push
data16
dec
ja
push
push
add
iret
mov
pop
inc
cmc
push
xor
bound
test
inc
fadd
xchg
js
flds
cmc
pop
push
pop
adc
ftst
push
dec
loopne
shlb
mov
add
sub
push
cmp
inc
push
jg,pt
sub
sbb
leave
dec
and
out
cmc
lock
xchg
pop
jo
cmp
push
subl
dec
mov
jmp
rcrl
insl
test
fistpl
xlat
sbb
xor
in
repnz
xor
in
into
gs
push
xchg
out
jmp
imul
rcl
bound
cmpsl
ds
lret
sub
cmp
dec
adc
fisubl
mov
aaa
fwait
xor
adc
ljmp
inc
pop
cltd
mov
and
or
pop
lea
pop
outsb
sbb
or
ret
push
subb
mov
add
out
lds
inc
pop
fidivl
imul
xchg
push
cmp
pop
push
icebp
mov
pop
push
pop
icebp
rolb
scas
or
cltd
or
jmp
rorb
int
cli
mov
mov
call
jne
xchg
icebp
add
fwait
das
adc
push
popa
sub
pop
stos
push
dec
dec
or
flds
cmp
in
dec
push
movsl
sub
xchg
push
mov
mov
movsl
push
in
jnp
pop
mov
cwtl
out
jecxz
fsubrs
add
lahf
lahf
xor
xor
sbb
jle
inc
loopew
dec
in
add
xchg
inc
insb
imul
or
mov
test
sti
jg
in
inc
ljmp
sub
jp
inc
xlat
dec
fwait
outsb
je
or
popa
in
cmovs
arpl
lret
addr16
xchg
or
mov
mov
clc
sub
mov
add
mov
adc
test
adc
shll
notb
daa
enter
pop
imul
aas
add
lds
xor
stos
addr16
fmull
mov
sub
jae
iret
dec
xor
cmp
shlb
mov
xlat
outsb
sahf
sbb
adc
mov
das
loop
xlat
les
cs
jmp
sub
inc
sahf
cmpl
xor
cmp
out
insl
push
cli
xchg
xchg
mov
sub
mov
mov
dec
jg
popa
movb
loopne
pop
cmpsl
cltd
lock
inc
test
movsl
imul
sti
xchg
enter
mov
xlat
outsb
and
sub
dec
pusha
pusha
cmpsb
fmulp
and
jnp
lret
fidivrl
push
adc
cmp
lock
inc
fnsave
cmp
call
cmp
cli
nop
pop
dec
gs
dec
into
cmpsl
xor
ret
push
xchg
cmp
in
arpl
pushf
push
pop
stos
jp
xor
stc
sub
scas
mov
cmpsl
rcr
loopne
repnz
in
sbb
mov
sbbb
movsb
gs
scas
jb
or
stos
repnz
push
lods
sub
push
jmp
push
mov
rcrl
outsb
adc
mov
or
addr16
out
mov
mov
inc
es
gs
ret
xchg
mov
idivl
sub
aaa
push
arpl
jne
addb
icebp
jns
pop
clc
dec
jo
pop
pop
sbb
es
int3
or
sbb
adcb
jle
int
jmp
rolb
lret
movsl
mov
sbb
jmp
mov
lret
pop
fs
mov
lea
inc
les
js
daa
fs
xchg
inc
fwait
popa
dec
jmp
and
shl
test
es
loop
insl
lock
dec
scas
and
icebp
mov
and
ss
cltd
test
or
clc
not
addb
in
repnz
jp
cmpsl
jg
pop
lods
in
cmp
out
loope
cmp
xor
push
repnz
cmpsl
jbe
jno
jg
push
fsubs
aad
cmc
test
jg
mov
rclb
pop
inc
std
popf
out
jo
adc
xchg
pop
in
dec
add
push
out
mov
xchg
sbb
sbb
in
jno
popa
pushl
insb
lds
call
xor
cmp
outsb
leave
mov
cmc
add
fidivl
and
ds
pop
jl
ljmp
push
or
push
cmp
pop
hlt
stc
xchg
ret
push
jne
xor
imulb
pop
xchg
push
fwait
dec
out
adc
addl
out
icebp
cmp
push
sarl
sbb
sbbb
out
jg
rcrb
pop
not
xor
mov
jmp
mov
mov
xchg
mov
xlat
mov
mov
jge
lcall
call
enter
or
and
jb
call
jmp
jl
mov
jnp
clts
jne
mov
xor
xchg
sub
enter
xor
xor
daa
mov
and
mov
call
jne
pop
cmp
out
and
xor
cld
push
and
sub
xor
es
out
or
pop
push
sbb
mov
bound
mov
xor
sbb
push
decl
imul
cmp
stos
mov
xor
jmp
mov
xor
add
fdivp
xchg
lahf
inc
inc
fs
or
sbb
arpl
pop
jnp
cmp
lea
lock
nop
daa
hlt
xchg
dec
rcrl
stos
jmp
std
sahf
xor
pop
aad
outsb
mov
data16
xor
jns
or
jnp
lahf
lods
add
sahf
loopne
test
imull
cmp
mov
das
ret
out
push
test
xchg
outsb
push
ja
push
jnp
aam
outsl
aaa
dec
and
mov
xchg
jl
sti
cmp
ljmp
call
adc
aas
jnp
aam
cmp
mov
fwait
sub
out
test
mov
rcrl
sbb
xchg
sub
push
jecxz
test
xchg
push
mov
push
dec
js
xchg
cmpsb
lcall
pop
xor
adc
inc
push
into
jo
addr16
negl
xchg
enter
test
or
sbb
icebp
test
and
push
or
cmp
mov
mov
imul
ficompl
pop
leave
out
add
loopne
pushf
std
xchg
into
dec
aaa
fidivl
insb
mov
mov
fcompl
pop
cmp
data16
adc
sbb
mov
adc
les
inc
dec
dec
scas
mov
inc
fstpl
and
lds
mov
stos
shrb
sub
mov
push
ja
mov
lods
cmpsb
sub
fcomp
add
sub
push
pop
xrelease
fnsave
mov
fwait
jmp
mov
mov
jnp
stos
pusha
cli
cmp
in
mov
adc
mov
jecxz
and
xor
inc
fsts
sbb
imul
xchg
push
mov
push
jbe
lret
push
or
xorl
into
sti
push
rclb
inc
test
sbb
mov
into
jo
mov
inc
fisubl
xor
mov
jl
pop
sub
out
xchg
cmpl
out
insb
xor
ss
call
punpckhwd
rcll
dec
xlat
xlat
shll
adc
arpl
sub
pop
inc
jl
out
adc
aaa
jns
das
call
cmp
pop
bnd
loopne
dec
int
mov
fiaddl
xchg
sub
shlb
xchg
push
sbb
pop
dec
popa
push
movsl
mov
lret
and
cmp
and
aam
subb
outsb
dec
loopne
or
sbbb
push
enter
shll
push
pusha
xlat
es
sub
fsts
jecxz
sub
mov
fidivrl
add
xor
ret
sub
lds
repnz
adc
dec
arpl
in
shrb
pop
xor
add
inc
fldl
xor
aaa
cltd
xor
bound
xor
mov
and
dec
push
push
lds
xchg
sub
lahf
jl
cltd
adc
sbb
loope
mov
xor
add
test
ret
and
or
or
insl
cmp
xor
pop
pop
xchg
out
fiadds
mov
icebp
and
sbb
jmp
push
push
mov
mov
pop
add
push
xor
test
in
insl
mov
stos
jle
test
ficoml
sbb
cmpsl
mov
inc
test
xchg
sub
mov
out
shrb
popf
insb
ret
dec
ss
push
mov
inc
ret
ds
stos
mov
loope
fbstp
cmp
push
pushf
mov
push
push
cmpsb
mov
jne
pop
stos
adc
push
mov
roll
jno
shll
mov
cmpsl
out
pop
mov
shrb
enter
cmpsl
stc
and
cmpsl
rorb
call
sahf
imul
into
add
push
ret
add
add
inc
jg
lods
ss
pop
stos
cmp
mov
sbb
and
leave
and
shrb
inc
dec
lods
mov
jno
xchg
popa
mov
jne
sbb
jo
jl
pop
test
mov
mov
xchg
imul
out
js
repnz
cmc
mov
jbe
scas
das
test
add
sbb
cltd
xchg
cmp
xlat
push
cmpsl
clc
fldenv
bound
cli
pop
ljmp
mov
jge
fnsave
je
out
push
pop
dec
push
sbb
les
in
ljmp
incl
lret
aaa
and
lock
xchg
adc
cli
jl
lahf
jecxz
aam
mov
mov
int3
pop
int3
dec
xor
push
outsb
inc
aad
insl
mov
xor
cmpsb
fwait
push
rcll
loop
push
lahf
pop
xchg
adc
lret
fcoms
cwtl
mov
jbe
push
xor
pusha
mov
pop
rcrl
sbb
sub
cs
cmp
add
push
icebp
and
pop
push
pop
and
lcall
arpl
jle
dec
mov
mov
dec
cwtl
hlt
mov
outsb
js
mov
mov
sbb
fistl
cmp
sbb
push
add
outsb
in
jbe
inc
jnp
addr16
sti
aam
mov
pop
pop
push
push
ss
insb
adc
movsb
jle
mov
mov
faddp
mov
out
movsb
xchg
jne
push
cmpsl
mov
or
add
xor
push
jo
jnp
jmp
ss
push
fidivs
pop
jecxz
jl
daa
push
xchg
or
es
fistpll
push
fwait
cmc
mov
jb
fildll
jb
push
and
es
icebp
subb
fs
sahf
push
inc
pop
mov
fs
hlt
xchg
push
aaa
into
xor
sub
loopne
adc
cld
les
ror
add
mov
int3
and
loopne
mov
addr16
push
les
pushf
insb
fiadds
cwtl
jle
pop
repz
sub
notl
add
shlb
decl
add
stos
inc
mull
sbb
xchg
rcrl
add
insb
in
sbbl
pop
out
sub
xchg
testl
jl
add
pop
cmpsb
in
inc
shrb
or
stos
inc
test
xchg
jne
call
dec
mov
add
mov
cmp
les
lods
push
repz
repnz
pusha
negl
lret
lret
lds
ficoms
and
fdivrs
loop
inc
jae
loop
dec
rcll
dec
sbb
inc
dec
adc
xchg
inc
lods
bound
in
test
popf
mov
ja
popa
and
in
jge
pushf
xor
adc
sub
int
mov
jecxz
add
movhps
push
lods
pop
ret
jmp
ret
fstps
pop
repnz
cmpsb
cmp
inc
icebp
les
ret
mov
jns
xchg
jns
xchg
insb
cltd
les
test
sub
jnp
testl
jg
pop
inc
mov
in
lcall
cltd
das
repz
cld
jp
lock
mov
add
sbb
hlt
mov
jge
dec
movsb
cmc
mov
sarl
add
mov
enter
pop
inc
cli
ss
mov
notl
iret
and
mov
ss
push
mov
xor
pop
in
mov
push
jle
test
or
adc
lahf
pop
sahf
adc
and
lret
dec
sbb
add
or
pop
and
xlat
xor
push
pop
fbstp
jb
pop
dec
ud1
pusha
in
jno
mov
sti
pop
aam
pop
lods
inc
cmp
pop
ret
mov
scas
or
cli
jle
imul
push
stc
dec
xchg
sub
movsl
cmp
sub
popf
xchg
mov
jmp
mov
and
adc
fdivrs
es
in
jge
rcl
sub
inc
mov
sbb
rcll
adc
cs
inc
lds
xor
mov
ret
fildll
movsb
mov
inc
fstpl
sbb
xlat
mov
pusha
testl
loope
out
shll
jle
in
mov
mov
sar
idivl
out
push
in
jg
lds
add
es
push
add
inc
sarl
cmp
sbb
add
pop
dec
loopne
das
clc
dec
mov
sbb
ds
outsl
outsl
inc
fstpl
inc
fadds
clc
int
ljmp
mov
mov
pop
movsb
dec
mov
cmp
shlb
dec
sbbl
in
dec
loop
add
xchg
jne
add
add
inc
xchg
sub
pushf
xchg
adc
stc
nop
cmpsb
pop
pop
lock
jg
and
rorl
nop
dec
imul
xor
push
sub
push
push
leave
pusha
push
jbe
enter
daa
inc
insb
xor
popf
fs
pusha
xchg
mov
inc
in
dec
xor
gs
cmc
fcoms
es
jg
push
mov
mov
mov
and
sbb
push
je
mov
int3
jb
lds
sub
fisubs
mov
inc
loop
push
cmc
fwait
pop
outsl
jns
rcrb
cmpsb
sbb
xor
jo
lds
and
add
pop
xor
mov
lret
adc
add
cltd
dec
pop
das
jnp
int3
psubsb
out
lds
sub
test
sub
out
shrl
jae
icebp
sbb
ds
ds
aad
cwtl
push
scas
movsl
cmp
daa
pop
mov
add
xchg
xor
cmp
mov
lret
pop
repnz
cmpsl
cmp
fcomps
push
in
sub
das
mov
les
sub
pop
aad
dec
icebp
mov
and
mov
scas
push
in
fists
addl
aaa
pop
leave
mov
shl
push
nop
dec
pop
js
scas
xchg
push
popf
frstor
push
int3
add
mov
cmpb
dec
push
nop
jge
test
call
testb
mov
sub
adc
pop
int
cmp
sub
mov
test
cwtl
jl
lea
stos
push
popf
stc
iret
data16
add
lcall
xchg
inc
cmp
mov
fists
aad
dec
cld
xor
insb
fstps
scas
lret
add
and
cmp
outsb
popf
int
add
pop
ret
or
in
dec
loopne
push
insl
mov
cmp
mov
popf
adc
inc
xor
test
ret
mov
pop
repz
cmpb
cltd
aad
mov
mov
and
fstpl
sbbl
lcall
hlt
in
stos
arpl
push
lea
mov
rcrb
ljmp
call
or
subl
or
imul
cmpsb
cmp
mov
in
pop
push
paddb
xchg
jo
sub
repz
adc
stos
xchg
push
xor
arpl
push
scas
push
scas
cs
in
lahf
insl
add
jge
add
inc
push
jmp
adc
push
jmp
mov
adc
jb
sti
or
sub
and
in
ret
adc
rorl
stos
mov
mov
sub
push
ss
xor
xchg
scas
push
push
xchg
adc
loop
sarl
aam
jge
lea
sahf
repnz
push
nop
pop
cmp
sub
mov
lea
ret
repz
jo
xchg
inc
sbb
loopne
mov
fidivs
mov
inc
popa
out
sbb
mov
inc
add
or
lods
pop
xor
inc
pop
inc
dec
pop
and
imul
or
scas
in
inc
and
in
inc
pushf
movsl
push
dec
and
jg
dec
add
inc
xchg
imul
mov
sbb
xchg
bound
push
mov
fisttps
sub
lds
bnd
push
and
aaa
push
insl
jg
xor
push
xchg
int
fs
push
jmp
cmp
add
in
movsb
push
push
mov
fildll
js
pop
pushf
imul
fmull
and
push
das
mov
sbb
out
mov
sub
pop
hlt
xor
pop
add
dec
cltd
and
ret
push
mov
adc
ret
fisttpll
mov
mov
sahf
movsb
cmp
or
ret
lret
rorb
daa
or
orb
xor
push
push
mov
push
outsb
imul
aas
movsl
push
call
dec
imulb
and
inc
lods
xchg
mov
test
movsl
lahf
push
dec
and
fsubl
arpl
push
std
xor
and
aas
loope
dec
mov
jmp
jne
aas
xor
shl
scas
push
pop
repz
gs
push
scas
xchg
stos
xchg
rorb
pusha
sbb
mov
pop
fwait
cmpsl
cmp
iret
mov
push
dec
filds
popf
pop
sub
pop
xlat
ljmp
fisttpll
mov
add
idivb
jne
nop
int
test
xchg
jnp
push
add
push
int3
push
add
sub
cmpsl
setle
mov
insl
sbb
insl
xchg
les
sbbl
mov
sbb
fstpl
jmp
push
xchg
ss
out
pop
push
repz
or
lahf
jl
inc
push
sarl
imul
adc
test
repnz
jle
adc
pushf
je
test
test
fistpl
loopne
pop
push
test
mov
cmp
imul
cmp
stos
jmp
in
push
dec
clc
fwait
xor
sarl
scas
mov
xor
roll
cmpsl
repnz
or
out
insl
add
arpl
inc
dec
xchg
out
sub
sbb
and
sbb
add
cmp
ss
sub
dec
aad
jge
push
in
mov
lcall
ljmp
and
push
cli
mov
sub
mov
ret
xorb
xlat
loope
mov
insl
ret
in
xchg
pop
push
loop
dec
mov
jae
scas
xchg
and
mov
mov
out
les
daa
and
xor
pop
ret
push
and
mov
adc
lahf
scas
cltd
test
das
ror
jo
or
cltd
pushf
das
xchg
fbld
xchg
cltd
fisubl
test
movsb
pop
push
push
mov
aas
das
or
jmp
jae
and
aaa
jb
fs
mov
jns
dec
cmc
mov
out
xor
pop
add
scas
sub
clc
stos
jmp
push
mov
fldl
sbb
push
leave
negb
cmp
mov
test
mov
inc
test
ja
test
jp
cmpsb
add
dec
int3
outsb
mov
jns
outsb
or
adc
cmp
loop
dec
jne
testb
sub
fistpll
mov
xchg
sub
repnz
and
sub
out
dec
test
cli
imull
xorl
pop
repz
mov
mov
adc
add
insb
jle
and
sti
sub
sbb
jle
jae
mov
dec
in
clc
sahf
repz
adc
dec
adc
mov
inc
loope
out
jbe
lea
xchg
in
test
int
out
jns
mov
mov
cli
and
inc
enter
subb
clc
or
push
jge
pop
mov
sbb
jge
into
enter
xchg
nop
leave
fs
sbb
jge
xchg
call
adc
jge
notl
dec
mov
in
add
loop
adc
xchg
imul
dec
call
mov
dec
pop
in
jge
and
sub
xor
cmc
ret
cli
inc
fldenv
pusha
pop
clc
push
jo
xorb
lods
out
fidivrl
lods
fadds
imull
sahf
fcom
cmc
aas
sbb
sbb
pop
mov
mov
movsl
subl
adc
loopne
rol
fldl
push
inc
ja
jae
mov
sti
les
sub
aas
push
xchg
hlt
enter
loope,pt
adc
inc
sarb
lahf
data16
shll
adc
call
xchg
les
and
mov
pop
gs
enterw
imul
lret
pop
aam
mov
repz
out
rcpps
jle
inc
fadds
sbb
xor
jmp
or
sbb
adc
mov
outsb
jg
pop
es
xchg
fsubrs
insl
push
sti
xchg
scas
imul
inc
cmpsl
ret
jno
jae
in
lcall
dec
clc
sub
lahf
dec
aas
repz
push
push
pop
push
fcomp
outsl
adc
pop
mulb
notb
ja
mov
mov
cmp
jnp
push
mov
stc
fsubr
mov
sub
bound
xchg
lods
or
nop
push
sti
test
cmp
and
or
cltd
into
gs
das
ret
les
dec
mov
clc
dec
mov
jmp
test
fsubs
std
jle
and
aaa
test
sbb
cwtl
int
fdivrl
xchg
inc
jb
mov
fcmovu
jns
decb
mov
cli
mov
andb
and
xor
mov
into
faddl
cmpsb
mov
imul
adc
repnz
fwait
outsb
xchg
loop
aaa
pop
add
jb
test
sbb
dec
popa
aam
pop
outsl
cmc
jne
das
inc
pop
jne
sub
outsl
enter
shr
cmc
mov
pop
lret
sti
nop
dec
sarl
insl
ljmp
in
pop
mov
leave
xor
mov
decl
or
leave
adc
orb
stc
cltd
notl
ret
cmc
jmp
lret
mov
scas
sbb
sub
xchg
ss
sub
jge
mov
std
pop
aas
ds
sub
dec
cli
mov
loop
xor
xchg
jmp
pop
mov
inc
nop
mov
imul
and
pop
mov
cld
movsl
pop
loope
mov
cmp
and
gs
notl
imul
int
gs
shl
shll
jae
scas
das
inc
adc
in
xchg
je
inc
ss
loopne
clc
adc
inc
daa
outsl
je
pop
xor
mov
xchg
shl
dec
inc
ret
sbb
jo
xchg
and
xchg
sub
in
mov
inc
pop
push
ret
loope
jnp
fdivs
shll
pop
loopne
pop
push
arpl
pop
adc
or
mov
divb
dec
jmp
cmpsl
shrb
or
sub
ds
es
jecxz
fsin
push
or
cmc
cmp
xor
fdivrl
mov
sub
cld
xor
test
stc
push
stos
fiaddl
push
jecxz
aad
aaa
xchg
pop
jne
into
xchg
adc
sub
push
imul
mov
mov
jo
or
in
pushf
jl
push
mov
mov
mov
mov
and
test
ret
std
jg
mov
dec
test
inc
aam
jg
out
das
fdivrs
fwait
add
push
std
pop
ss
cli
test
pop
and
xor
aam
push
call
mov
bound
ja
adc
ljmp
mov
dec
loopne
out
add
mov
lea
mov
stc
ds
jl
test
jle
test
sbb
ss
xchg
pop
movsl
nop
inc
fildl
rol
loop
out
into
loop
xor
pop
divl
mov
jb
ret
dec
imulb
inc
xchg
lret
push
xchg
insl
or
xlat
icebp
and
jecxz
mov
mov
into
push
lahf
sub
push
xorb
mov
rcrl
or
xacquire
ja
lea
fwait
test
lea
pushf
jle
jae
mov
lahf
les
icebp
mov
in
subb
jmp
std
cmp
pushf
or
jge
rcrl
push
fnstenv
jo
jp
mov
out
mov
sbb
and
int
in
xchg
stos
sbb
ds
pushf
xchg
into
and
int
rcl
mov
pusha
mov
cwtl
xchg
inc
scas
xchg
lods
inc
mov
fdivrl
bswap
add
sub
push
push
cmp
or
lret
cwtl
pop
es
inc
add
add
add
mov
and
and
nop
mov
push
lret
add
xchg
bound
adc
inc
fs
call
sahf
imul
xchg
mov
or
adc
push
inc
jbe
das
mov
mov
lahf
cmp
inc
xorb
pop
or
ss
cmp
xchg
dec
pop
daa
pusha
rcrl
mull
int
out
loope
inc
push
sub
clc
sub
movsl
adc
jge
jge
pop
mov
pop
jecxz
pusha
jmp
add
bound
test
mov
mov
add
insb
xlat
mov
jbe
dec
rorb
jns
jnp
pop
imul
movsl
icebp
push
pop
push
test
cltd
mov
in
cmp
inc
aaa
dec
out
aam
aaa
addb
rdpmc
mov
xchg
ret
int
adc
scas
push
lret
ljmp
adc
xchg
lahf
es
out
jae
jp
aad
imul
adc
lahf
int3
add
cmp
sub
or
xchg
sbbl
add
aas
pop
clc
cmp
jg
bound
push
insl
sbb
inc
sbbl
pusha
inc
shrb
pop
out
nop
lock
mov
pop
call
cld
loopne
icebp
inc
add
js
mov
inc
mov
inc
addr16
fidivl
dec
mov
mov
mov
test
add
mov
add
jb
lods
xor
rcl
mov
icebp
inc
pusha
pop
xor
jo
stos
mov
es
lret
popl
mov
lret
int
and
jp
mov
ficompl
mov
imul
out
int3
inc
rcll
repz
push
ds
jne
pop
xchg
mov
jbe
pusha
out
fmul
xor
out
pop
clc
iret
data16
cwtl
popw
in
xchg
adc
sbb
jp
mov
cltd
test
mov
outsb
fidivs
mov
les
int
sar
xor
cs
mov
cmp
jae
dec
sbb
pop
jae
out
push
or
add
cmp
push
out
inc
mov
paddusb
xchg
fists
inc
fidivs
adc
inc
imull
pop
sub
xchg
dec
xchg
adc
out
mov
dec
add
pop
mov
push
pop
xlat
shl
or
aas
lea
dec
in
inc
inc
vmovddup
mov
inc
orb
jp
jecxz
movl
jb
mov
loopw
and
stos
inc
fcmovu
mov
ljmp
mov
jp
cmp
fbstp
pop
in
push
mov
bound
lea
in
xchg
xor
push
mov
cmpsb
adc
shrb
adc
cmp
imulb
andb
ror
adc
jnp
ljmp
cmp
adc
xchg
ret
sarb
cmp
adc
pop
out
rcrl
loopne
in
mov
cmc
sbb
js
add
xor
lret
mov
in
loope
xchg
sbb
pop
push
dec
movsl
dec
subb
push
stos
cmp
and
lret
cmp
cld
lods
lods
js
sbb
jecxz
gs
dec
pop
jb
mov
xchg
int3
imul
aas
mov
cmp
clc
xor
adc
dec
into
ret
popf
xor
pop
fidivs
repz
iret
mov
sub
shrl
jnp
dec
lds
jae
sti
or
dec
and
adcl
push
adc
ja
leave
data16
sub
pop
xchg
sub
aam
lcall
and
cmpl
scas
test
cmpl
aaa
cmpsl
ds
cmp
mov
xchg
sarb
imul
push
push
sbb
aam
repnz
and
add
push
push
mov
inc
loope
cwtl
cli
mov
pop
or
add
mov
push
in
pop
lods
dec
shll
icebp
inc
test
cmp
mov
dec
clc
cmpsb
lea
jne
mov
push
sbbl
out
and
mov
mov
nop
push
jbe
std
dec
xchg
imul
sub
lahf
ljmp
dec
inc
out
push
fadds
or
imul
mov
aam
jae
inc
cltd
insl
loopne
stos
call
sahf
aas
dec
les
mov
repz
insb
scas
mov
lock
push
or
add
pop
push
inc
fldl
cmpsl
pop
jo
ds
push
adc
and
fdivrs
fimull
testb
pop
outsl
test
movsl
xchg
sbb
outsb
int3
sti
xchg
xchg
dec
jo
loope
cmp
nop
popl
push
into
inc
push
loop
ljmp
xor
xchg
int3
lret
mov
or
ret
cmp
pop
xorl
js
rcll
andl
jns
pusha
ret
push
in
cmp
sbb
enter
pop
insb
push
jmp
sti
pushf
mov
stos
xor
adc
pop
mov
cmp
out
rol
push
cmp
adc
pop
adc
xchg
inc
mov
sbb
ret
mov
or
add
cmp
jbe
sbb
lcall
mov
lods
push
in
int3
cld
pop
hlt
cmp
mov
jmp
popa
cmp
inc
in
sub
mov
inc
outsb
mov
add
sbb
ja
jnp
push
pop
lods
incb
xor
jo
inc
push
arpl
pop
aaa
fistps
dec
ds
xchg
call
push
dec
mov
adc
fwait
insl
stc
mov
cltd
std
push
movb
mov
je
jo
mov
jl
std
cmpsb
fdivrl
and
xor
sti
ja
sub
cwtl
push
xchg
ret
repz
xchg
lea
fs
das
push
sarl
mov
daa
xor
js
test
dec
push
bound
lahf
repz
and
or
jecxz
xchg
xchg
sbb
xor
lea
int3
and
xlat
or
jmp
or
aas
mov
js
push
jge
and
jmp
push
and
mov
js
outsb
or
sub
sarl
lods
and
cmpsb
sbb
xchg
xchg
addr16
mov
sarl
sub
scas
dec
dec
sub
mov
icebp
aas
jle
bound
ficomps
cmc
sbb
shrb
sbbl
lret
dec
xor
xor
mov
ret
inc
mov
mov
or
adc
pop
jecxz
mov
mov
in
xchg
jl
in
adc
or
adc
mov
jnp
jle
cmc
push
outsl
fcomi
into
nop
mov
sub
outsb
fs
pop
mov
sub
mov
cmpsb
sti
xchg
cmpsb
sbb
adc
mov
in
mov
call
xor
jmp
test
in
incb
sub
icebp
pop
jge
sbb
xlat
mov
mov
sbb
icebp
pop
hlt
dec
bndldx
and
mov
lods
xchg
rorb
xor
sub
or
dec
sbb
lret
rcrb
divb
ljmp
subl
or
dec
leave
insb
add
outsl
lret
inc
stos
mov
lahf
lds
movl
dec
xchg
jp
sub
pop
cmp
xchg
push
mov
push
call
push
fbstp
sub
stc
out
lret
js
cmpl
testb
aad
subps
dec
adc
mov
and
hlt
gs
sub
pushf
jg
je
pop
ret
jno
mov
ja
cmp
mov
or
jle
xchg
add
aad
cltd
push
mov
cmpsb
push
mov
cmc
pop
dec
test
scas
xlat
icebp
add
jbe
cltd
je
mov
push
stos
mov
mov
jp
xchg
out
sbb
repnz
jno
xchg
shr
jns
adc
inc
movd
out
andl
sbb
xchg
and
jmp
jo
scas
or
stos
pop
or
jo
int3
loop
ljmp
movsb
pop
jp
jmp
push
add
mov
hlt
xchg
xchg
mov
adc
subl
imul
sahf
dec
xchg
sbb
stc
xor
mov
int
repnz
pop
sub
xor
fisubs
imul
lods
and
jp
leave
jge
decb
jne
aam
and
outsb
js
sbb
jo
pop
sub
mov
sbb
mov
jb
jbe
jnp
sbb
and
pop
out
out
pop
fidivrl
pop
lock
test
and
cmp
scas
sahf
hlt
test
xchg
aas
fildl
pop
imul
lcall
lods
pop
mov
fisttpl
or
into
bound
lret
lcall
aad
or
sub
jl
jbe
xchg
test
inc
ljmp
loopne
das
mov
scas
adc
adc
int3
popa
jmp
adcl
or
adc
xor
test
inc
pop
mov
out
scas
cmp
jge
fs
xor
aad
pusha
push
inc
or
mov
push
jmp
cli
test
adc
push
xlat
fiadds
xchg
add
mov
jbe
xor
ds
in
rcl
pusha
testl
mov
rcll
repnz
stc
js
fisubrs
inc
pop
jns
outsb
push
int3
jle
in
lea
dec
inc
ficoml
ret
call
aam
sub
imul
jle
pop
mov
sub
jno
loopne
jecxz
leave
and
push
ds
rolb
aad
xor
punpckldq
push
jne
pop
repnz
pop
mov
mov
outsb
xor
xlat
rcrl
add
icebp
dec
gs
fwait
hlt
mov
fdivrs
jb
cld
aam
ds
stos
addb
leave
xchg
lret
insl
mov
mov
jp
inc
fdivrs
pushf
fcmove
dec
scas
daa
mov
pop
stos
je
in
jno
cld
push
xchg
scas
and
xlat
outsb
pop
call
jbe
dec
xlat
outsb
std
and
arpl
push
repz
cmpb
mov
pop
sbb
inc
in
enter
xchg
inc
in
cmpsb
icebp
sbbb
adc
lds
or
rcrb
in
jmp
dec
sbbl
lcall
jo
bnd
mov
aas
mov
popa
loopne
lods
popa
ffree
mov
mov
stos
jge
call
test
mov
sarb
fwait
test
stos
xlat
rdtsc
push
inc
fidivs
xchg
jmp
and
xor
jecxz
andb
push
fcomi
cmp
in
push
and
mov
aas
or
inc
push
cmp
adc
hlt
leave
and
test
scas
or
pop
inc
cld
ds
bound
fstps
jmp
xor
mov
cld
pushf
repnz
lret
mov
push
fisubs
mov
imul
enter
repz
int
add
xor
push
gs
ljmp
mov
ret
and
je
jo
gs
adc
cmp
aad
cwtl
pop
inc
stos
movsb
xchg
jbe
xor
stos
test
ja
in
pop
es
pop
sbbl
int3
stos
mov
arpl
add
aam
mov
jl
dec
nop
jo
in
and
ja
call
sub
cli
mov
sti
and
jno
push
push
jmp
and
add
aam
stc
mov
icebp
cmp
mov
imul
dec
bound
ljmp
hlt
xor
or
faddl
mov
out
aas
add
movsl
aam
mov
loopne
push
push
lods
pop
xor
nop
daa
push
ret
jecxz
pusha
stc
nop
cs
jmp
adc
push
xor
aam
out
test
mov
or
iret
mov
imul
jbe
les
mov
and
fwait
mov
jno
test
xchg
xchg
out
cwtl
sub
push
scas
jmp
aam
movsb
cltd
xchg
aad
scas
cld
out
stos
ss
add
mov
add
push
or
xchg
add
jecxz
pop
movsb
pushw
insl
adc
mov
rcrb
cmp
add
insb
dec
ret
stos
push
jne
pop
cmp
inc
call
cmpsb
dec
dec
test
or
add
pop
cmc
mov
push
outsb
subb
mov
xor
push
aam
push
mov
xor
xor
cmp
and
aaa
cli
cmp
out
mov
rorb
dec
in
or
pop
mov
pop
int3
cli
pop
pop
fildll
je
dec
mov
or
in
out
pushf
ljmp
sub
in
inc
out
inc
push
test
mov
mov
daa
mov
ret
iret
xor
xchg
dec
mov
loope
mov
adc
sbb
sbb
dec
loope
mov
iret
or
push
add
orl
mov
es
insb
fistps
es
daa
jo
jmp
scas
sub
mov
cmp
call
frstor
and
hlt
push
inc
rorl
movsb
xor
add
pop
mov
lea
loop
pop
adc
push
and
addr16
je
mulb
push
ja
inc
aam
xchg
inc
adc
pusha
roll
je
je
es
mov
cmpsb
mov
add
mov
pop
pop
shlb
add
add
aad
jb
popa
mov
and
push
push
lock
xor
std
pop
jmp
xor
test
mov
clc
test
popa
fadd
sub
push
lods
repz
int3
movsl
imul
rorb
jle
xor
imul
jns
inc
sub
fisttpll
dec
xor
pop
xor
test
lret
repz
insl
mov
cltd
test
ret
or
call
out
add
sbb
jbe
insb
mov
or
jb
sub
adc
fcmovnbe
mov
leave
jmp
push
push
and
push
push
int
xchg
jb
outsb
iret
sub
and
jnp
nop
xchg
dec
jmp
aaa
jno
sbb
pop
hlt
out
or
fisttps
and
testb
je
nop
daa
push
xchg
loope
adc
xor
push
insl
mov
jo
fists
lds
fisttpll
sti
adc
es
or
xchg
pop
mov
test
jns
movsl
loopne
add
popa
in
inc
pusha
push
call
pop
mov
stc
ja
mov
push
jge
mov
insb
push
xchg
popf
dec
pop
mov
and
jb
pop
mov
ror
jge
int3
repz
insl
push
or
xchg
int
xor
xchg
nop
add
scas
pop
sub
pop
outsb
mov
jmp
dec
cmpsb
push
imul
mov
pop
adc
popl
call
cmp
sahf
imul
out
lock
fmul
push
pop
inc
fimull
xchg
out
lods
mov
adc
int
mov
dec
data16
in
adc
push
push
sbb
int
or
xchg
pop
cwtl
sbb
dec
and
mov
sbb
xchg
push
stos
mov
dec
mov
push
push
std
mov
and
cmc
pusha
mov
cs
clc
push
int
cmp
out
out
fs
pop
hlt
pop
insb
adc
mov
dec
jae
rol
movsl
aam
and
ret
fistps
fistpl
mov
stos
arpl
rcll
test
pop
mov
addl
arpl
fmul
pop
xorl
fsubrs
sbb
sub
or
xor
jns
addr16
cli
scas
mov
addl
or
fildll
cmp
pop
mov
mov
mov
jno
inc
fstpt
imull
adc
fidivrs
aad
aad
xchg
add
push
movsl
movsb
aad
insl
sub
pop
sbb
and
lcall
xor
fadds
xchg
adc
jne
cmp
clc
dec
stos
lcall
pop
rcrl
test
cmp
xchg
inc
cmpsb
jmp
mov
hlt
aad
mov
pop
or
dec
int3
sub
or
in
lea
mov
push
xor
inc
sahf
clc
inc
cmp
adc
movsb
push
or
in
inc
cs
jp,pn
daa
jmp
out
sbb
mov
jbe
mov
xlat
xor
insb
mov
aad
jbe
cmp
arpl
ljmp
inc
rol
inc
loopne
push
sbbl
xor
jns
out
imull
xchg
jle
dec
jge
mov
jb
jge
xchg
inc
call
test
lret
mov
dec
add
test
push
mov
out
loope
pop
insl
cmp
scas
out
or
mov
sti
or
inc
mov
gs
mov
push
inc
filds
adc
ja
jae
dec
mov
mov
add
sti
mov
cli
nop
push
xchg
adc
cmp
cmp
and
popa
mov
inc
xlat
dec
fwait
pop
mov
stos
fldenv
mov
and
or
push
xor
add
adc
push
js
dec
push
aas
jns
xchg
fbstp
jo
jg
or
and
iret
push
push
add
data16
dec
into
pop
sbb
sub
mov
fcomps
insl
ret
jle
sub
stos
add
mov
fisttpll
imul
cmp
ds
jmp
fxch
pop
insb
mov
aaa
mov
lret
vsqrtss
pop
mov
sbb
ja
mov
scas
out
scas
cmp
add
fdivp
and
arpl
mov
sub
arpl
or
lods
jmp
lea
xchg
mov
shl
push
and
mov
stc
sti
push
mov
daa
gs
mov
fidivrs
jb
xor
mov
movb
daa
xchg
xor
notb
cmpsl
imul
cs
cmpsl
jns
mov
ret
dec
push
jo
loop
jnp
inc
cmp
and
popf
int
rorl
fistpl
or
push
in
mov
jmp
jp
hlt
insb
es
mov
in
test
and
mov
mov
leave
std
or
xchg
xchg
push
inc
fisttpl
inc
add
cmp
aad
mov
nop
fidivrl
adc
push
add
dec
pop
jecxz
leave
jo
stos
and
ret
pop
mov
lret
jecxz
movsb
inc
call
popf
dec
add
push
test
pop
mov
lcall
jae
subb
fldenv
sbb
scas
ja
xor
imul
mov
cmp
out
clc
inc
cld
cld
mov
stos
into
cltd
rorb
and
movsl
push
inc
or
push
mov
jge
jnp
xor
lods
dec
lcall
clc
mov
std
fsts
iret
aaa
clc
leave
mov
or
in
xchg
push
mov
jp
std
arpl
mov
aad
push
pop
jne
ljmp
push
cmpsb
push
inc
test
mov
test
mov
sub
dec
cmpsl
int
fdivrs
mov
mov
loopne
xchg
xchg
cmp
cli
jo
mov
xchg
data16
mov
imul
dec
test
rcr
inc
testb
es
adc
pop
hlt
xchg
sbb
hlt
ljmp
outsl
xchg
dec
sub
icebp
call
and
pop
cmp
pop
xchg
stos
jne
movsl
aad
add
push
sub
sub
jb
and
adc
mov
mov
rorb
jle
enterw
jmp
movsl
loope
cmp
adc
jno
cli
fidivl
or
daa
sarb
lods
or
icebp
lods
ss
shld
dec
loop
cmpsb
mov
push
adc
fstpt
pusha
jecxz
aaa
pop
or
mov
pop
loope
mov
or
popf
data16
add
shll
popf
fs
je
xor
pop
push
or
mov
push
dec
sub
mov
out
jae
cmp
fwait
mov
cmc
jmp
cmp
mov
add
ds
ljmp
dec
pop
or
add
rclb
mov
daa
inc
test
xchg
arpl
sub
jl
repnz
sbb
pop
vzeroall
repz
aas
pusha
stc
movsl
lret
mov
cmp
mov
add
sbb
mov
aad
xchg
lds
xchg
xor
lods
fs
xchg
iret
notl
add
idivb
xchg
dec
add
xchg
out
dec
daa
aam
add
dec
and
aam
fsubs
leave
ret
call
test
lods
aad
jo
inc
or
inc
scas
aam
push
cmp
jnp
sub
fdivl
arpl
fldl
mov
fnsave
and
and
and
arpl
jmp
mov
clc
test
int3
fdivrs
into
ret
xchg
rorb
push
jno
loopne
lahf
loopne
adc
push
inc
pop
addr16
lcall
or
push
or
dec
cmp
out
lds
jg
adc
pop
sub
aad
mov
mov
vpermi2b
mov
push
jb
and
shll
or
rcrb
popf
lret
pop
mov
mov
xchg
push
mov
js
add
mov
lea
imul
dec
mov
add
mov
add
fidivl
mov
insb
and
mov
test
or
les
xchg
arpl
sbb
ror
gs
sbb
in
add
mov
and
imul
pop
sub
jp
and
inc
mov
mov
in
push
sarl
inc
xchg
stos
fnstenv
pop
push
hlt
pop
add
cmp
jg
ds
xchg
sbb
or
iret
inc
sbb
jne
in
in
mov
loopne
mov
lret
mov
xchg
push
jmp
push
mov
loop
push
scas
notb
nop
ret
dec
scas
adc
in
and
test
mov
insl
pop
push
mov
sub
adc
inc
pop
sub
shlb
dec
xlat
adc
rcrb
sbb
imul
data16
outsb
inc
ljmp
out
mov
outsl
mov
lods
pop
or
and
loop
movsb
push
mov
xlat
push
add
test
pop
jmp
pushf
mov
cmpsl
inc
inc
inc
xchg
xchg
dec
fdivr
pop
or
aas
ret
jno
cmp
out
ss
ds
mov
in
inc
xor
cmpl
lcall
pop
outsb
roll
mov
sbb
and
or
add
jmp
imul
daa
and
shl
xor
cmp
push
mov
cs
scas
stos
push
sbb
pop
clc
or
mov
insl
mov
pop
xor
ret
push
lahf
insb
gs
in
into
adc
mov
push
insb
imul
aam
shll
dec
sbb
shll
cmp
dec
or
cmp
into
cltd
sbb
insb
xor
ss
cmp
fistps
and
lods
cmp
nop
push
stos
scas
mov
xor
mov
jmp
in
adc
inc
or
repnz
leave
and
shl
lret
cmp
out
mov
shl
test
das
xchg
aad
notb
test
dec
loope
js
pop
loope
cld
push
mov
insb
adcl
lods
mov
cmpb
scas
mov
lret
bound
insb
outsb
jl
sbb
cld
mov
jbe
inc
xchg
xor
xor
push
mov
mov
mov
add
dec
cmc
xlat
add
jnp
mov
add
inc
jg
lret
aad
mov
addb
pop
dec
ror
sbb
cmpsb
pop
mov
adc
xchg
mov
addr16
sbb
mov
ret
rolb
pop
push
out
pop
in
xchg
xchg
cli
shrb
lcall
fnsave
lret
daa
sti
into
sbb
hlt
push
xchg
jecxz
pop
fmul
dec
cmpsb
clc
jge
fidivl
mov
mov
lea
popf
xor
jbe
inc
dec
addl
out
cli
pop
lret
cld
sahf
mov
mov
bound
test
push
sti
test
and
xchg
adc
adc
mov
repz
jbe
or
mov
enter
pop
fstpl
inc
mov
sahf
jge
rorl
xchg
xchg
add
subl
pop
mull
es
xor
lods
daa
cmpsl
movsl
cmp
aad
int
std
shrl
mov
stos
lods
inc
jecxz
xor
ret
mov
hlt
xor
movsl
ja
sub
adcl
addr16
aad
fs
adc
push
leave
gs
jb
mov
stos
popf
filds
das
mov
aaa
jno
mov
arpl
pop
pushl
dec
adc
or
cmp
enter
inc
fdivs
xchg
jb
movb
dec
sbb
aad
lahf
in
jecxz
rorl
fdivs
mov
mov
pop
cmp
out
pop
dec
mov
cmp
push
mov
add
adc
lret
shll
add
xchg
mov
mov
dec
push
stos
xor
add
jg
xor
mov
in
inc
adc
lret
dec
cli
sar
imulb
lods
jp
dec
out
push
movsl
jp
mov
pop
mov
mov
lcall
inc
push
lods
test
xor
mov
lds
xchg
mov
jo
rcrl
fimuls
movsl
vmwrite
dec
mov
dec
rcrb
xsha1
cmpsb
iret
adc
add
cmp
xor
push
int3
lahf
and
es
into
gs
adc
cmp
and
add
xor
in
pop
fs
xchg
adc
pop
hlt
and
testl
and
fiadds
loop
mov
cmp
std
sub
add
dec
fucomi
dec
xchg
jnp
out
cmpsl
pop
sbb
sbb
idivb
shlb
jp
jg
pop
rorl
stos
je
jmp
adcl
push
mov
aaa
pop
stc
mov
xchg
in
lret
aaa
dec
in
push
icebp
inc
cmp
pop
scas
aaa
lds
jb
adc
clc
jo
mov
decb
or
sti
xchg
dec
xchg
insb
mov
fcomps
mov
lcall
repz
hlt
sti
pop
cmp
cmp
mov
jno
inc
cmp
xchg
dec
xchg
lea
ljmp
xorb
gs
dec
inc
jecxz
pop
mov
lahf
testl
movsl
std
inc
add
in
orl
dec
adc
fldl
lea
push
xchg
mov
jmp
add
cwtl
sub
push
bound
add
es
idivb
pop
jno
jl
repnz
into
xchg
xchg
jbe
lods
mov
insw
pop
aaa
je
or
adc
call
les
jnp
aas
out
or
stc
add
stc
sub
aad
push
cmp
mov
add
ja
cli
rcl
dec
sbb
xchg
dec
xor
mov
xor
stc
pop
xchg
cmp
push
inc
aas
jne
imul
lcall
shl
jb
jmp
ja
cmp
mov
neg
mov
adc
push
push
aas
xor
sbb
sbb
jae
mov
in
bound
insl
sub
jbe
cltd
xchg
ficomps
jbe
stos
add
sbb
push
out
mov
cmpsl
ljmp
xor
repnz
leave
cmp
decl
aam
daa
mov
int3
push
pop
inc
pop
dec
mov
push
mov
jno
xchg
jge
push
rorb
sbb
or
outsb
jns
loop
push
or
sbb
add
icebp
xchg
add
or
xchg
xor
lods
add
mov
fstpt
xor
mov
daa
ret
test
or
jecxz
arpl
sub
mov
movsb
aas
clc
xchg
in
sti
mov
dec
jle
stos
mov
cmc
dec
xor
jp
cmp
insb
insl
jmp
add
push
mov
lret
cli
mov
and
aad
aad
mov
sti
outsb
sub
inc
pop
cmc
mov
jo
sbb
hlt
mov
dec
add
xlat
mov
xchg
das
test
xor
mov
iret
out
call
in
pop
mov
xor
mov
pop
in
inc
enter
xchg
xchg
loope
mov
repz
mov
push
aad
xor
sub
out
in
aam
incl
mov
xchg
sbb
lods
inc
fldcw
lock
pop
and
cmp
fildl
mov
ret
loopne
jecxz
stc
lahf
fisubrl
xchg
add
daa
test
int
push
pusha
out
jns
and
inc
lock
add
cmp
and
sar
cltd
mov
mov
imul
dec
jae
jle
aas
xchg
aam
push
cmp
push
jmp
push
fwait
jo
cli
es
je
cmp
xchg
aaa
rorl
fistpl
sub
aas
add
mov
xchg
daa
ja
cvttps2pi
xchg
cmp
add
fdivrl
jae
ss
pop
in
cwtl
pop
xchg
push
mov
mov
xor
gs
dec
addr16
cmp
fs
inc
cmpsw
ret
sbb
sti
fiadds
test
push
mov
xchg
mov
pop
mov
xlat
lds
or
pop
pop
push
and
inc
push
movsl
mov
iret
cmpb
jge
pop
sbb
jge
out
bound
ja
inc
cmp
mov
mov
out
cmpsb
xchg
dec
mov
jmp
iret
pop
iret
and
icebp
stc
or
dec
lea
xlat
mov
andb
incb
rcr
cmpsb
sbb
popf
adc
aad
mov
jp
jecxz
pop
ds
cmp
les
push
ljmp
stos
jecxz,pn
and
sub
jbe
cmpsl
fs
sar
jno
dec
in
addl
fucomip
jg
loopne
out
cmc
jle
xchg
mov
les
mov
xchg
mov
add
sub
and
nop
mov
sub
cli
lret
sbb
jg
xchg
pushf
sub
iret
sbb
or
dec
inc
push
sbb
sub
dec
cs
xchg
lret
cmp
test
aam
mov
or
scas
loopne
loopne
xchg
daa
sbb
sub
test
jl
cwtl
cmpsb
mov
aam
jecxz
stc
or
insb
cmp
sbb
ljmp
pushf
adcl
or
push
cmpsb
clc
enter
aad
int3
push
mov
call
int
pop
cmp
jo
push
popa
repz
loop
cmpl
mov
pusha
cld
mov
mov
pop
repnz
iret
dec
enter
jnp
mov
push
shll
jbe
cltd
pop
jne
jge
jns
ja
adc
push
jb
ljmp
xchg
sbb
jne
pop
mov
jmp
mov
pop
sti
xchg
loope
lds
out
aad
pop
fincstp
stos
xor
mov
sarl
inc
addr16
xchg
sub
sub
dec
and
cmpl
ret
std
pop
ret
push
iret
ficoml
xor
lods
pop
xchg
xor
sub
shll
xor
insb
xor
mov
cli
ja
das
jbe
shrb
xchg
aam
out
xchg
sbb
jns
mov
pop
int3
or
shl
and
ret
cmp
into
inc
push
jne
popf
xor
sahf
cli
xchg
mov
gs
xlat
daa
mov
ss
or
mov
mov
adc
add
sbb
adc
pop
test
xchg
dec
out
scas
add
lret
inc
sub
push
xchg
mov
mov
fwait
mov
cmpsl
test
xor
shl
rcl
inc
fstpl
vmptrst
sti
scas
pusha
mov
shll
sbbl
jecxz
popf
mov
and
lods
pusha
mov
sbb
push
jmp
lahf
mov
rcrl
lea
xchg
push
mov
test
pop
add
push
xor
xchg
stos
xor
or
sbb
sub
dec
xchg
test
bound
lock
dec
out
repz
mov
int
adc
scas
mov
pop
ret
shll
in
push
int
clc
clc
push
out
jo
imulb
or
pop
cmp
pop
bound
jecxz
mov
mov
test
xor
bound
xor
mov
or
mov
jmp
ljmp
in
lret
pop
cs
addb
pop
lods
scas
mov
xor
add
subl
xchg
mov
add
test
xor
sub
or
fdivl
loopne
cmp
push
xchg
sub
pop
push
mov
jmp
pop
and
sub
sub
jne
jl
inc
gs
popf
xchg
sub
mov
jg
cmp
insl
cli
ds
mov
sbb
xchg
imul
sbb
mov
loop
and
or
mov
fs
and
mov
and
popl
inc
mov
mov
pop
jge
aaa
sub
mov
call
cli
xchg
xor
sbb
scas
fldcw
hlt
fldt
jns
push
scas
or
pop
inc
xchg
stos
sub
insl
xchg
inc
mov
jg
or
cmp
lahf
leave
loopne
or
mov
fwait
pop
mov
in
cmp
mov
nop
in
mov
xchg
imul
jb
or
nop
mov
and
repnz
and
mov
sbbl
andl
mov
mov
lock
pop
and
cltd
sub
jae
imul
aam
in
leave
lds
setp
pop
pop
dec
fcmovu
sahf
xor
in
cmp
inc
aas
movsb
sub
ffreep
jmp
lods
mov
mov
or
lahf
sub
inc
popa
hlt
aam
pop
scas
pop
or
or
out
fsts
inc
jecxz
fimuls
sbb
cmp
fmuls
outsl
jbe
mov
subl
ror
add
loopne
jno
je
xchg
adc
pop
add
cld
insb
lcall
fs
xchg
fwait
leave
movsl
pushf
add
or
loop
pop
cmp
adc
adc
mov
in
push
pop
dec
push
sti
or
mov
les
shll
mov
rolb
das
jb
nop
js
ret
sub
push
cld
xchg
mov
mov
mov
out
sub
jns
pop
hlt
in
lods
inc
sub
mov
xor
rcrb
jns
fcomi
add
push
jp
sbb
inc
cmpsb
cltd
aaa
ficoml
or
pop
repz
inc
aad
cmpsl
mov
jbe
pop
lock
enter
xor
cmp
sbb
loop
icebp
inc
fsubs
xchg
mov
lret
out
pop
jecxz
jge
shr
adcb
pop
xor
jbe
pop
lcall
out
inc
and
call
nop
dec
fdivs
jno
stos
ficompl
add
mov
lcall
repnz
std
xchg
aam
pop
jne
rcrl
jl
and
sbb
inc
fs
int
imul
ret
push
lahf
aad
ret
jle
neg
insl
mov
xchg
pushf
cli
int3
jmp
in
push
add
movb
ja
outsb
push
ljmp
pop
sahf
xchg
mov
cmp
in
in
push
aas
cli
dec
jle
xchg
mov
sahf
rcll
and
pop
in
lahf
mov
or
adc
xchg
cmp
jle
mov
cmp
jo
xchg
in
sti
aam
aaa
std
cmp
dec
mov
push
adc
push
jns
test
push
in
aaa
mov
inc
fistps
or
out
dec
data16
jge
outsb
add
mov
push
and
repz
xchg
movsl
cli
enter
adc
pop
fwait
sbb
xlat
xchg
outsl
mov
shl
adc
jp
jmp
ret
push
shlb
shlb
ds
mov
pop
jp
data16
pusha
jecxz
cwtl
das
lock
daa
inc
pushf
cmp
mov
cmp
pushf
dec
movsl
test
adc
push
scas
cltd
fs
mov
ficoms
nop
imul
pop
xor
jae
shll
movsb
lds
enter
rcl
mov
mov
mov
xor
lods
ljmp
add
cmc
repz
ret
sbb
adc
jo
adc
jae
outsl
insb
xchg
aam
adc
mov
pop
rorb
fsubrp
pop
outsl
mov
in
adc
lret
jnp
bound
js
xchg
or
cltd
lret
jne
ja
aas
test
sbb
mov
xchg
mov
cwtl
stc
push
popf
xchg
loope
cmp
cmp
mov
test
inc
and
and
xchg
lahf
clc
pusha
push
fcoms
lahf
inc
mov
jle
cli
dec
pop
add
xchg
dec
xchg
daa
mov
adc
sbb
repz
pop
inc
pop
pop
cmp
shrl
ret
scas
faddp
mov
movsl
sbbb
or
mov
cmp
mov
cmp
fbstp
loopne
out
adc
inc
shlb
xor
xor
icebp
sbb
and
jno
rolw
push
fstps
int
fsubl
gs
and
lcall
sub
ficompl
mov
icebp
shlb
test
pop
pop
insl
dec
sbb
sbb
pop
add
and
cmp
xor
ss
sbb
push
jae
pop
push
xchg
cmp
mov
pop
cwtl
mov
clc
loope
sub
mov
into
rorb
icebp
out
mulb
out
mov
and
sar
jb
adc
imul
lods
aas
xor
cmp
into
ss
addb
lods
push
popf
dec
xor
jnp
cmp
int
fbld
inc
fxch
or
negl
add
xchg
in
xchg
adc
lods
and
add
ret
lret
and
inc
jmp
repnz
add
add
jns
loopne
push
loop
xchg
aad
subb
mov
dec
cmp
mov
rcl
adc
mov
lcall
fmull
mov
mov
and
outsl
mov
divb
push
mov
out
aaa
lret
fstl
sbb
cmc
dec
jne
mov
lret
cld
out
jns
jmp
or
push
mov
movsl
lea
adc
cld
ja
mov
roll
mov
in
xor
inc
mov
sub
push
stos
shll
push
or
rcrb
mov
push
xor
mov
adc
push
enterw
arpl
jnp
aad
in
mov
cwtl
jecxz
iretw
in
inc
lcall
int
cmp
cmp
enter
jns
push
xchg
and
cwtl
mov
adc
push
shll
or
or
into
mov
dec
lret
or
aad
or
shl
jne
fldl2t
or
les
fdivs
push
loop
movsl
int3
out
jns
inc
inc
fwait
leave
int
dec
ljmp
or
lods
test
cmp
cmp
inc
xor
and
mov
push
jp
lret
push
push
jp
push
call
lea
add
inc
mov
mov
adc
sarl
mov
pop
clc
mov
mov
ljmp
mov
mov
dec
xchg
fs
xchg
xchg
push
and
imul
js
mov
arpl
pop
push
inc
inc
mov
pop
adc
aas
adc
mov
lret
mov
popf
push
lcall
adc
xchg
jecxz,pn
loopne
xchg
dec
sub
jg
insb
inc
mov
jo
sub
sub
jns
subb
pmullw
insb
mov
int
jnp
jo
lods
fwait
cmp
enter
into
imul
lock
nop
int
sub
push
add
insl
mov
xchg
mov
jg
aad
ret
jg
scas
std
xchg
and
mov
fwait
sub
mov
sub
or
mov
dec
pusha
jge
lret
scas
subl
sub
out
pop
and
xchg
push
sarb
icebp
mov
sbb
fdivrs
mov
inc
xchg
xchg
sbb
lods
ret
and
mov
mov
or
mov
dec
popa
jns
mulb
ror
xor
pop
sbb
lds
clc
aas
loop
add
fnstsw
psllq
mov
pop
fnsave
scas
idivl
adc
xchg
stos
mov
in
xlat
mov
adc
lock
dec
faddl
mov
add
mov
xchg
fbld
or
mov
xchg
xchg
enter
or
inc
adc
rcl
test
leave
aas
sub
aam
and
stc
outsb
inc
sahf
sbb
rorb
cld
sub
sarb
or
and
repnz
cmpl
xchg
add
sub
clc
dec
jg
jbe
fisttpl
inc
mov
pop
and
add
jb
and
cmpsl
loope
imul
mov
sub
mov
gs
iret
sub
push
int3
dec
jbe
lods
cmp
xor
pcmpeqd
ret
or
in
mov
pop
test
pop
sahf
jg
fcompl
ljmp
mov
mov
bound
stos
ja
sub
fstpt
jp
or
test
or
push
js
add
iret
aam
add
or
lea
in
cmp
test
and
popa
lahf
xorb
inc
dec
jmp
jg
popf
sub
test
xchg
stc
gs
pop
in
sbbl
popf
push
add
dec
sbb
aam
orb
test
stc
adc
dec
roll
out
pop
pop
pop
xchg
lds
inc
aas
test
and
mov
or
shl
mov
ja
jb
jmp
and
jl
rcrl
cmp
pop
jg
mov
loop
ss
push
inc
fcmove
popa
gs
insl
popa
clc
sahf
dec
or
xor
jl
cli
xor
jns
or
inc
mov
jne
fbstp
mov
jl
fsubrs
out
test
aam
imul
fs
int3
lods
add
push
lods
inc
test
lret
jns
ds
das
push
dec
add
popa
stos
enter
cli
jae
push
out
pop
jge
int
outsb
ds
pop
je
xor
sarb
dec
jae
add
jecxz
jmp
dec
aad
repz
xchg
ljmp
jns
xor
sub
push
pop
jecxz
ficompl
and
dec
or
nop
inc
cltd
pop
rorl
and
jp
mov
jnp
mov
negb
lods
ds
call
pushf
shlb
ljmp
data16
jne
js
lcall
pop
loopne
push
rcr
into
pop
adc
pop
sti
lea
lret
out
in
test
lret
dec
lods
cld
pop
mov
int
stos
rcrb
push
push
loopne
js
push
mov
pop
dec
pop
fisubrs
mov
xchg
sbb
jecxz
cwtl
or
jl
sbb
adc
imul
inc
insl
es
mov
adc
push
push
pop
stc
jo
ljmp
in
mov
cmp
jb
std
mov
int
mov
sbb
adc
or
jb
adc
sub
stos
ret
or
loopne
mov
addr16
shll
sub
jmp
sub
pop
cmp
pop
scas
add
icebp
xchg
jbe
push
mov
ret
lds
sbbb
mov
cld
shld
lahf
dec
sub
dec
add
add
ljmp
inc
aad
xlat
mov
nop
iret
push
shr
aaa
into
into
mov
push
call
mov
test
cld
mov
imul
push
stos
in
fdivl
push
or
push
roll
fisubl
mov
popa
add
pop
mov
shrl
inc
mov
dec
not
xor
fistps
add
pop
pminub
aaa
jno
xchg
sub
cmp
or
repnz
dec
add
mov
cwtl
xor
or
fstpl
xchg
sub
cmp
jecxz
add
adc
lss
cmc
mov
mov
push
lcall
fcmovb
into
add
dec
popf
fdivrl
cwtl
xor
lret
loopne
js
bound
push
sahf
mov
ret
and
jmp
sarl
add
scas
jns
push
fisttpl
mov
test
cs
xor
ret
popf
bound
loop
xchg
sbb
cli
inc
cmc
add
in
lahf
out
cltd
mov
xor
sub
mov
push
cmpb
mov
adc
std
and
mov
dec
adc
xchg
fs
fbstp
xchg
jecxz
enter
cs
aas
cwtl
lahf
add
cmp
and
xchg
jbe
xlat
subl
pop
pop
daa
or
cs
ja
xchg
push
sbb
mov
mov
mov
popa
in
push
repnz
call
jnp
pop
jecxz
xor
push
mov
rcrl
mov
mov
adc
xchg
aam
xchg
jae
mov
in
lds
test
cltd
pop
fnstsw
adc
and
mov
inc
and
adc
fidivl
add
rcl
lret
mov
jb
mov
jo
xchg
push
mov
aaa
push
test
dec
xor
rorl
and
or
mov
push
cmc
cmp
fnstcw
dec
sarb
mov
cmp
sub
rcr
dec
pop
out
jge
jge
sub
jbe
push
pop
jnp
pop
je
sbb
xor
lds
sub
sbb
mov
mov
movl
inc
call
or
das
loopne
das
push
add
cmp
push
dec
into
std
jo
jecxz
push
or
leave
and
mov
adc
dec
push
fdivs
iret
adc
mov
lods
xor
cmpsb
inc
movsl
js
sbb
jp
jecxz
xchg
jg
cltd
pop
bound
out
pop
mov
jmp
ljmp
pop
sahf
loopne
inc
add
push
insl
jb
sahf
mov
lahf
xor
rorb
imul
rep
cmp
push
add
xor
movsl
dec
and
jl
pop
inc
shrl
das
mov
add
sub
cs
add
jge
lea
sub
aaa
popl
xchg
pushw
out
add
ja
jb
inc
dec
scas
push
testb
and
dec
cmp
inc
into
gs
push
lcall
lcall
mov
push
push
aaa
das
fcoml
cmp
rep
mov
jne
shlb
out
xlat
iret
mov
pop
xor
adc
shll
inc
mov
xchg
add
mov
or
jb
cmp
hlt
stos
pop
inc
call
mov
mov
lea
cmpsb
jmp
out
jno
mov
out
xchg
add
add
inc
stc
in
dec
mov
mov
or
subl
nop
repz
test
and
in
movups
inc
xlat
aad
jo
and
dec
xor
addb
push
out
xchg
jno
fsubs
jecxz
fcompl
add
sub
jbe
mov
int3
mov
std
repz
das
test
lret
mov
pop
iret
and
xchg
js
enter
xchg
mov
test
sbb
fldcw
test
fwait
mov
divl
iret
fcomi
xor
insl
jge
sbbb
inc
or
insl
das
sahf
fisubs
rorl
mov
fcompl
cmc
arpl
js
mov
mov
dec
in
adc
call
insb
fs
xor
mov
pusha
aas
or
dec
fdiv
jge
outsb
insl
adcb
sub
scas
jge
pop
insl
inc
cltd
xor
adc
dec
pop
jge
cmp
popf
sub
cmp
imul
push
add
cltd
and
aaa
and
pop
jbe
fstl
add
mov
andb
out
pop
popa
push
call
jo
outsb
jge
fs
js
xchg
jle
cmpsb
mov
and
ret
test
rorl
or
push
push
jmp
xchg
fidivs
xchg
cli
adc
jle
xor
adc
mov
ret
jp
dec
aad
and
or
in
scas
inc
enter
js
jmp
or
push
sti
inc
pmullw
into
movsl
fdivs
sub
or
dec
imul
mov
mov
or
scas
jle
mov
cmp
sbb
rcrb
xchg
cmpsb
dec
sub
xor
loope
xchg
lcall
iret
lods
pushf
pop
or
iret
fs
cmp
cmp
rcrl
ret
sbb
mov
pop
sbb
jl
xor
repnz
call
out
jnp
jmp
dec
adc
jns
jbe
nop
inc
add
mov
and
or
xchg
and
cld
jne
jo
sbb
jl
jge
pop
stc
push
mov
mov
xor
mov
cmpsb
cmp
mov
ret
fs
mov
sbb
inc
pop
shrl
xchg
test
xor
loop
loope
pop
xchg
xchg
ret
and
fnsave
ljmp
das
pop
test
push
jg
loopne
inc
enter
jl
adc
cmpsb
cmp
and
xchg
insl
imul
jg
pop
fistpll
rcll
inc
stc
sub
jne
dec
cmp
shl
sub
dec
lcall
into
mov
cmp
fdivrs
xor
mov
repz
fstl
int3
dec
jb
out
loope
mov
mov
pop
jne
mov
fisttps
fists
mov
lcall
xchg
clc
fstl
bndldx
in
dec
mov
lcall
push
mov
shlb
push
push
out
ret
sbb
repnz
adc
cmpsb
or
imul
iret
dec
adc
lret
sbbb
sub
add
nop
fwait
clc
or
aad
xchg
pop
push
and
sbbl
call
jno
das
aam
add
and
xchg
inc
lea
lock
int
mov
mov
rolb
push
xlat
and
mov
jne
and
ret
mov
or
pop
mov
sub
cld
and
sbb
loop
and
and
int3
fldl
push
imul
stc
nop
or
cmp
adc
mov
xor
sbb
xor
push
cmp
mov
xchg
lods
sbb
inc
lret
je
jmp
xorb
xlat
cmp
sub
imul
imul
cmp
xchg
dec
mov
movsl
rcll
call
sub
orb
adc
cmp
pop
aad
push
ret
test
or
mov
cmp
mov
aad
ja
fcompl
xchg
sub
popf
fbstp
xor
xlat
push
shrl
pop
lods
adc
mov
fldt
rcll
or
cmpsl
mov
ljmp
pop
insl
sub
outsl
mov
aas
iret
push
popa
pop
lods
bound
jl
insb
mov
mov
pop
xchg
dec
push
lods
mov
es
cmc
jmp
sbb
mov
push
shll
sub
pop
pop
push
xor
xchg
inc
fldl
xchg
xchg
and
in
xchg
jmp
add
mov
sbb
adc
lods
cld
sub
jno
push
dec
out
in
es
adc
lahf
data16
ljmp
in
imul
xor
out
jmp
cltd
packsswb
xchg
sbb
mov
cli
adc
mov
stc
jnp
add
out
add
dec
adc
mov
in
sub
arpl
fucomip
ss
pop
push
insl
psubusb
fsubrl
push
popf
cmp
sub
mov
lahf
ss
mov
mov
mov
out
xchg
xchg
rolb
mov
sub
clc
mov
push
sub
xor
imul
sub
mov
push
push
in
lcall
and
or
in
ret
out
pop
loop
xchg
push
sahf
les
sub
xchg
mov
mov
adc
ficompl
cwtl
dec
stc
cld
sub
inc
sub
scas
cmpl
dec
stos
inc
jnp
inc
mov
xor
test
popa
ja
sbb
mov
insb
lods
int
test
or
adc
push
adc
push
arpl
sbbl
adc
mov
mov
cmpsb
ss
mov
insl
test
mov
adc
popl
fidivs
inc
mov
inc
sbbl
incl
and
push
or
and
cs
dec
fs
dec
das
cmpl
adc
jae
xchg
ljmp
or
repnz
cs
xchg
cmp
dec
mov
scas
mov
push
inc
mov
inc
jge
fsubr
fimull
add
aas
mov
lds
xchg
loop
or
xchg
adc
inc
xchg
mov
pop
adc
mov
jp
in
xchg
repnz
pop
shlb
cmp
cmp
jns
bound
aas
jge
jl
push
or
push
psubsw
lcall
inc
ret
idivl
addr16
sbb
sbb
js
bound
pop
addr16
pop
xchg
mov
sub
adc
push
mov
daa
jle
cmp
sub
testb
add
xor
and
jmp
fwait
ret
pop
int
jb
add
sub
dec
push
inc
adc
push
cwtl
decb
scas
jb
fiadds
outsb
jmp
jne
push
pushf
xor
movl
inc
pop
enter
js
add
sarl
test
inc
sbb
arpl
sbb
mov
and
loope
decl
aaa
aas
push
jae
xor
test
pop
push
and
pushf
cmp
mov
ja
add
jbe
xchg
dec
xor
mov
mov
in
pushf
sbb
adc
push
jmp
repnz
dec
push
cmpsb
adc
out
out
ja
cmp
das
push
inc
jmp
or
xor
jbe
loope
scas
fldpi
stc
or
fs
push
inc
push
xchg
decl
push
leave
gs
and
mov
cmc
movsb
pop
outsb
leave
push
mov
adc
gs
shll
movsb
int3
in
std
sbb
pop
popf
test
rorb
int
mull
xchg
or
dec
xchg
ljmp
push
sarb
mov
mov
xchg
xchg
stos
inc
stos
in
xchg
dec
sti
pop
push
out
jne
sub
jbe
pop
out
ljmp
or
repnz
iret
mov
mov
dec
xchg
push
cmp
pushf
xchg
sti
push
sub
sahf
pop
mov
sub
dec
out
and
test
test
cmc
pop
ret
insl
or
loopne
mov
adc
loope
inc
sbb
or
jl
int
loop
data16
fdivl
popa
cltd
mov
jp
rcr
popf
xchg
xchg
jns
shlb
ss
sti
test
cmp
mov
cmpsb
fdivs
push
push
and
int
fsubr
mov
pop
mov
sbb
ja
jge
push
pop
aad
stos
leave
mov
subb
fwait
pushf
xor
out
cmp
stos
sti
out
lods
xchg
subl
sbb
into
int
push
out
lahf
je
xor
fcoml
popf
add
jns
call
dec
outsl
shl
sbb
enter
inc
and
cmc
lahf
and
loop
pop
and
jno
es
pop
lods
xchg
loop
loop
es
bound
sbb
mov
or
pop
pop
out
pop
js
pop
adc
pop
repnz
push
jg
lds
jns
adc
or
addr16
mov
in
cmc
cmp
mov
or
std
mov
jns
test
faddl
sbb
mov
mov
jns
decb
call
int
outsl
daa
std
or
cli
push
scas
add
add
insb
mov
test
pop
out
jp
lock
push
test
cltd
cmovnp
inc
ficoms
mov
lock
add
bound
das
int3
ljmp
xchg
sbb
stos
lea
movsb
sahf
adc
or
mov
loop
sub
call
leave
push
dec
repz
mov
pcmpgtb
inc
jbe
jo
mov
movsl
cmp
pop
ret
sub
data16
andl
pop
pop
push
xchg
pop
jae
cmp
mov
addr16
icebp
xor
clc
mov
mov
jl
mov
or
int3
jge
pop
adc
dec
fstpl
scas
and
lcall
jno
data16
dec
mov
mov
jmp
xchg
push
inc
push
push
cmp
mov
and
in
sahf
cli
rolb
negl
sub
out
xchg
jecxz
push
lcall
xchg
lea
enter
inc
xor
adc
pushf
push
xor
je
pop
dec
mov
andb
test
lahf
data16
ret
push
jbe
in
sbb
inc
rcrl
mov
jb
pop
lahf
in
xor
or
scas
inc
aas
or
mov
mov
out
loopne
out
repnz
cmpsl
xor
jns
cmpb
jp
xchg
nop
leave
lods
mov
jle
std
daa
int3
mov
sub
in
cmp
jge
sti
xlat
jno
sarl
add
jp
in
and
ja
sub
rcll
pop
lock
sbb
adc
stos
push
add
std
pop
fistps
in
test
out
nop
jns
sub
mov
pushw
mov
outsb
call
in
test
fidivs
mov
add
out
out
jp
xchg
imul
icebp
cmpsb
adc
mov
ret
test
insl
xchg
jecxz
mov
xchg
popf
imulb
in
lret
adc
in
jne
data16
out
mov
and
sub
out
xor
out
je
mov
mov
movsl
aam
fisttpl
gs
shll
insl
mov
mov
mov
mov
cltd
push
sbb
dec
das
cmp
ja
pop
dec
xchg
jg
sbb
sbb
xor
test
sub
jp
mov
xchg
adcl
push
bound
jp
mov
xchg
push
mov
hlt
inc
jge
add
mov
inc
push
cmpsl
mov
adc
or
jmp
inc
inc
add
jnp
mov
xor
sbb
cmpsl
call
jp
sbbl
cmp
jle
out
and
sub
iret
jg
std
xlat
add
rorl
mov
mov
fmul
fcomi
cli
mov
mov
popf
ret
jg
xor
pop
stc
or
in
mov
data16
or
or
hlt
push
jl
add
dec
mov
je
mov
into
mov
mov
fidivl
out
jle
xor
jl
xor
inc
scas
inc
std
jae
adc
push
inc
fiadds
gs
insb
ss
sbb
fwait
and
xor
cltd
out
mov
pop
lds
ja
outsb
pop
lahf
outsb
test
pop
movsl
jle
out
mov
mov
xchg
js
push
shl
xchg
scas
inc
push
push
adc
call
dec
shlb
sub
cs
pop
dec
mov
int
dec
pop
sub
mov
push
stc
scas
inc
jo
xchg
jl
mov
dec
gs
dec
shl
pop
roll
inc
xchg
cmc
add
popa
popf
icebp
xor
out
pop
jnp
cltd
sub
fidivrs
ret
mov
movsb
out
lret
shll
sbb
lock
add
sbb
mov
jg
sti
insb
xchg
pop
sahf
in
std
inc
lock
push
adc
mov
iret
cmpsl
out
adcl
inc
cmp
fldenv
or
jo
jns
or
lret
xlat
push
bound
jns
pop
jno
pop
mov
pushf
insl
cmp
mov
xchg
aas
inc
lods
out
push
sbb
loope
mov
mov
mov
cld
or
mov
movb
mov
int3
cwtl
mov
xor
or
aas
addr16
insl
mov
sbb
rcr
and
loopne
cmpsb
inc
mov
sbb
lds
scas
push
stos
mov
xchg
ret
call
cmc
mov
mov
mov
xor
sub
lahf
push
fwait
enter
sbb
daa
adc
xchg
sbb
int
mov
cltd
xor
cmp
fldcw
into
fstps
scas
sub
ljmp
xchg
add
in
xchg
and
mov
pop
xchg
es
sub
inc
push
pop
dec
loop
enter
adc
xchg
daa
paddusb
test
test
pop
xchg
test
xchg
mov
add
loope
sbb
jl
fdivrs
loope
mov
mov
mov
adc
sahf
hlt
mov
xchg
imul
xchg
sub
mov
sub
mov
das
cld
decl
int
lea
xor
inc
cmpsb
xlat
sbb
mov
mov
jge
scas
jne
clc
iret
lods
ss
lahf
je
rcrb
int3
lahf
xchg
add
lcall
in
jb
aad
or
mov
sub
jne
inc
fstpl
out
add
lea
clc
fsubl
xchg
cmp
xor
ljmp
pop
leave
adc
insb
pop
sub
jg
jne
push
mov
outsb
clc
orb
or
daa
xorb
data16
lock
cs
mov
lcall
inc
cwtl
cmp
jecxz
je
pusha
mov
mov
dec
xor
jb
add
inc
popf
aam
fidivs
xchg
add
mov
out
adc
les
in
mov
sbb
push
aam
leave
xlat
jb
push
out
arpl
push
xor
jle
fcompl
mov
dec
or
lcall
loopne
les
into
push
shrb
fiadds
fbstp
add
js
sbb
mov
arpl
sbb
addb
pop
mov
pop
repnz
pushf
xor
rcll
icebp
mov
aam
or
cmpb
lods
rcrb
fwait
dec
mov
shl
xchg
scas
adc
in
xor
out
sub
shl
ret
jge
sub
lods
iret
pop
fimull
sub
jae
test
ficoml
fucomip
inc
iret
outsl
push
insb
and
mov
sub
xor
xchg
dec
inc
pop
sub
ljmp
loopne
enter
mov
aas
lret
jb
sarl
mov
rcrb
pop
loope
pop
or
sub
lret
sub
pop
lahf
test
shrb
pop
testl
push
dec
push
stos
aam
mov
xor
cmc
push
testl
cmpsl
jmp
lahf
popa
mov
mov
mov
std
mov
fwait
dec
inc
adc
clc
addr16
xchg
scas
dec
fnstsw
or
jnp
xor
sbb
insl
into
cmp
in
cmpsb
out
addl
popf
enter
mov
sahf
jle
adc
adc
sarl
iret
fsubl
mov
nop
aad
loope
mov
popf
sbb
mov
adc
mov
or
psubsb
sbb
cmp
jp
ss
loopne
push
inc
loope
subb
mov
jne
or
dec
pop
inc
subl
xchg
mov
stos
outsl
call
add
cmp
icebp
sub
in
adc
mov
sbb
call
xchg
inc
daa
ljmp
icebp
rcrl
les
mov
iret
pop
cltd
lcall
clc
frstor
or
mov
pop
aad
mov
pop
mov
sbb
xchg
fucomi
or
dec
and
jnp
mov
sbb
enter
ret
cmc
lret
cld
mov
fists
scas
mov
add
mov
into
sub
jle
sti
mov
hlt
mov
push
mov
and
leave
xor
cli
stos
les
shll
mov
xchg
cmpb
hlt
hlt
jg
subb
repz
mov
jb
jnp
cli
stos
mov
stos
in
lods
xchg
outsb
loop
aam
pop
dec
out
cmpsb
sbb
cmpsb
ror
sti
or
mov
lret
xor
fs
cwtl
jae
pop
cmp
cld
stos
aaa
xor
jo
mov
xor
push
test
add
movsb
inc
xchg
lcall
pop
and
push
ljmp
cmpsb
jb
popf
cmpsl
outsb
shl
mov
test
mov
mov
inc
fmuls
out
in
pusha
mov
dec
sbbb
leave
dec
mov
scas
and
mov
adc
dec
push
das
movb
dec
push
stos
insl
mov
mov
stos
cwtl
mov
inc
inc
fidivl
shlb
fcoms
mov
cmp
mov
xor
xchg
sub
jnp
xor
mov
sub
iret
data16
xor
and
ret
std
inc
xor
outsl
push
mov
fimull
pop
jg
push
or
add
jge
adc
lret
mov
push
bound
cmpsb
pop
add
xor
lods
dec
stc
mov
stc
or
mov
aam
iret
adcl
repz
add
pop
stos
fdivrs
push
addr16
and
inc
mov
xorl
mov
inc
stos
shrb
arpl
leave
das
mov
xor
xchg
pushf
ds
into
sub
aaa
into
js
sbb
mov
push
add
push
add
dec
outsl
mov
cld
xchg
inc
and
movsl
jae
jbe
sub
xor
test
xchg
xlat
mov
lahf
sbb
and
pop
lret
ja
daa
xor
ljmp
es
xchg
xchg
cs
pop
movl
adc
out
stc
jmp
cmpsl
imul
vcvtps2pd
testl
sbb
mov
inc
in
inc
xor
lds
cmp
orb
cmp
pop
or
push
cmpsb
push
lea
cmc
movsb
mov
add
or
push
or
faddl
cltd
popf
cmpsl
lret
sub
adc
pop
ret
fisubrl
add
cs
mov
pop
outsb
loope
mov
xchg
call
or
ds
pop
lret
jp
adc
sub
xor
adc
cli
xchg
daa
sbb
jae
cmp
dec
js
jno
insl
pop
insl
lahf
adc
xchg
inc
fdivl
test
jp
in
inc
inc
mov
adc
sbb
xchg
popa
inc
stos
mov
scas
mov
jmp
test
enter
adc
sti
and
cmpb
jl
xor
add
fstps
cwtl
pop
push
cli
adc
movntq
sbb
push
call
jg
cmpsb
adc
adc
incl
fisubs
pop
xor
les
jbe
loope
add
add
icebp
xorl
movsb
add
mov
xchg
sub
pop
jl
jb
jbe
fnstcw
cltd
mov
leave
mov
cmp
nop
xor
loopne
loopne,pt
cld
into
popa
in
das
cmp
pusha
or
dec
dec
lods
ljmp
adc
call
sbb
mov
data16
arpl
jp
rorl
out
imul
loopne
cmp
inc
in
push
adc
jg
jb
iret
lock
call
inc
push
fisttpl
rcl
rcrb
andl
adc
lret
sbb
in
xor
divb
ljmp
sbb
and
xchg
cmp
gs
es
sub
in
das
fdivs
int3
dec
mov
ror
dec
loopne
rcll
cmp
enter
pop
in
xor
sbb
dec
add
les
pop
jge
mov
idivb
inc
or
cmp
xor
lods
sbbb
cmc
ret
inc
cmp
jae
outsl
idivl
stc
inc
push
push
and
subl
mov
das
shl
in
sub
enter
pop
adc
mov
movsb
rcrl
out
sub
lret
mov
repz
jmp
mov
loope
rcr
arpl
push
or
add
fisubrl
mov
push
pop
add
adcl
push
and
dec
cmp
mov
rolb
xor
pushf
fwait
aas
inc
in
inc
sti
sarl
in
out
xchg
add
pop
enter
int
cmp
cmp
sbbb
lahf
nop
jl
es
scas
pushf
gs
mov
inc
adc
fldt
call
xlat
lods
pop
out
fnstenv
jge
inc
mov
sbb
shlb
xlat
ljmp
push
jmp
or
insl
pushf
xchg
sub
stos
inc
or
lret
xor
scas
inc
adc
shlb
dec
int
jg
js
ret
adc
jnp
outsl
lret
xlat
orb
cmp
lea
push
fbstp
mov
fcomps
push
imul
xchg
out
jne
and
out
jnp
dec
in
push
sub
add
scas
cmp
push
pop
jae
pop
ficoms
cmpsb
std
imul
aad
test
movsl
sub
js
mov
xor
adc
or
test
sbb
rorb
seto
sub
pushf
arpl
cli
outsl
push
xor
mov
repnz
shl
xchg
and
and
or
fsubrp
xchg
stos
inc
loopne
lea
sub
shll
sti
and
push
imul
sbb
mov
pushf
mov
mov
mov
int
es
outsl
lret
add
scas
imul
iret
adc
jmp
push
pop
lea
adc
addr16
outsb
cltd
inc
sbbl
fcoml
gs
and
jp
cmp
iret
jg
insl
insl
gs
mov
ja
push
pop
inc
testl
jl
divl
nop
mov
cmp
test
aas
pop
dec
leave
es
fdivp
dec
cwtl
lods
ljmp
cmpsb
mov
mov
mov
sbb
out
decl
in
sahf
cmp
rcll
xor
repnz
adc
cmp
pushw
dec
xchg
cmp
and
push
mov
push
fldcw
mov
cs
mov
adc
cmc
adc
loope
jmp
dec
lahf
call
adc
addr16
dec
pop
pop
jne
xlat
mov
push
test
insb
fstpt
nop
xorl
pop
shlb
jno
cmpsl
js
ror
roll
sbb
rclb
ljmp
scas
nop
pop
out
mov
dec
mov
les
out
loopne
frstor
sti
arpl
mov
iret
xor
lds
push
into
push
add
push
add
fnsave
lahf
jb
shl
cli
shrb
or
mov
icebp
add
sub
shrl
lret
xchg
xchg
jmp
into
dec
mov
push
in
fisttpll
jae
xor
sbb
sbb
push
xlat
bound
in
or
mov
movsb
jns
pop
sub
imul
loop
inc
inc
push
test
leave
data16
cli
sub
test
add
push
mov
fdiv
enter
call
sub
dec
clc
call
mov
fwait
mov
add
sub
mov
int
sbb
dec
inc
fimuls
sub
mov
push
cmp
jnp
add
push
call
inc
outsb
outsl
mov
insb
mov
ret
mov
push
ljmp
xor
es
subb
mov
cmp
rolb
in
jae
push
and
sbb
rcrb
rorl
data16
mov
insb
sub
push
pop
aas
daa
stos
insl
imul
aas
insl
cs
js
inc
fmuls
jb
xchg
pop
cmp
cmp
adc
jns
outsb
rorb
repnz
decb
imul
or
mov
pop
xor
or
test
or
xchg
frstor
mov
push
jno
xor
dec
lahf
adc
and
and
cmp
fisubrl
or
les
test
and
and
sub
mov
stos
ja
dec
fldl
xor
xchg
pop
and
and
loope
sub
ret
or
cmc
ret
ficomps
add
fs
aad
fucomp
flds
aaa
lret
imul
lret
enter
adc
stc
push
test
xchg
push
leave
stc
pop
daa
sub
mov
mov
stos
jae
test
add
jmp
or
or
stos
push
sub
xor
std
jae
mov
sbb
dec
mov
fbstp
pop
ss
sbb
test
mov
or
dec
loop
ljmp
inc
stos
xchg
jno
add
in
int3
in
jge
inc
add
xlat
push
fwait
aam
dec
lret
pop
dec
inc
loop
cli
push
push
pusha
cwtl
into
fdivr
push
negl
inc
or
sarl
fistpl
sub
in
test
test
notl
adc
loope
test
imul
pop
dec
xor
les
add
idivb
pop
imul
cli
scas
inc
sub
pop
ret
or
add
data16
xchg
push
or
cmp
add
inc
fwait
insb
add
jmp
cmp
std
pause
in
cmp
popf
jo
iret
or
ror
fcmovne
or
fidivl
jbe
popl
out
jge
inc
mov
push
jp
add
xchg
mov
sub
xchg
pop
popa
repnz
add
push
fdecstp
and
shll
jle
enter
mov
stc
loop
or
lea
orb
data16
add
xor
inc
cld
in
call
ja
mov
pop
out
push
and
adcl
orl
jne
test
inc
push
or
adc
fwait
xor
repnz
in
leave
pop
out
and
pop
cmpsl
ret
cmp
mov
xlat
dec
xor
outsl
mov
lds
mov
movsl
ljmp
push
xor
mov
jne
xchg
outsl
sbb
fcom
decl
dec
je
inc
or
xchg
subb
sbb
jg
mov
jmp
incb
or
adc
inc
addr16
mov
sub
push
or
enter
push
mov
sti
fistpll
add
cltd
mov
lret
push
dec
bound
das
xchg
jge
sbb
cmp
pushf
test
ret
xor
mov
dec
dec
in
incl
jne
xchg
scas
mov
xor
xor
pop
jnp
push
add
leave
adc
popf
pop
xor
les
and
xlat
notb
int3
mov
into
data16
xor
dec
outsl
fsubrp
popf
daa
insl
mov
ja
push
call
sbb
outsl
int3
xor
add
outsl
stos
mov
arpl
shl
test
inc
adc
cmp
add
leave
shlb
sti
mov
je
cwtl
push
or
int
ficomps
or
popf
stc
jg
push
fcmovnb
mov
adc
push
int
cmp
aas
movsb
xchg
movlps
pop
adc
fwait
push
add
ss
sbb
outsl
and
sub
push
lcall
in
cmpsb
data16
rcll
enter
outsb
add
lea
sbb
imul
pop
inc
test
xchg
cmp
mov
jge
lds
jnp
stos
push
dec
int
jbe
repnz
call
and
aam
lock
jg
xor
lcall
or
pushf
test
out
jb
push
push
push
jae
lds
shlb
pop
mul
in
and
mov
mov
add
scas
mov
xchg
sub
mov
test
cmp
adc
ds
fcomip
mov
mov
mov
mov
mov
pop
jle
or
xlat
repz
sub
stos
dec
cmp
lods
sub
jmp
or
imul
cmpsl
push
dec
in
push
jne
es
add
aaa
mov
add
xchg
jge
mov
mov
jae
dec
clc
dec
cmp
sub
out
inc
fisubs
jge
test
test
repz
iret
cmp
jb,pt
mov
cmp
adc
add
sbb
cli
dec
add
loop
pusha
adcb
cmp
aam
icebp
stc
mov
mov
nop
sbb
sahf
fs
psllw
or
jg
jge
mov
mov
fldl2e
clc
or
lods
xor
cltd
pop
lods
mov
xchg
push
out
test
mov
or
insl
mov
xor
jle
xor
mov
vfmadd231pd
aad
ror
mov
rorl
adc
pushf
jecxz
or
inc
jbe
mov
mov
add
mov
push
mov
sbb
addb
popf
pop
xchg
push
test
in
pop
sar
bound
insb
out
push
mov
or
cmpsb
std
jo
scas
cmp
mov
fnsetpm(287
push
adc
xor
clc
push
leave
pop
fcmovb
ljmp
shl
add
lods
dec
mov
adc
jbe
stos
inc
mov
div
cld
cmc
pop
push
repz
test
dec
pop
insb
leave
push
or
lcall
mov
mov
arpl
aam
sub
jecxz
test
lret
mov
das
faddl
push
pop
movsl
xchg
pop
adc
push
xor
bound
outsl
es
inc
lahf
dec
dec
mov
pusha
xor
aas
mov
js
pushf
mov
pop
cmc
dec
aad
pop
and
addr16
es
nop
movsb
push
movsb
mov
mov
pusha
lea
adcl
clc
je
bound
ljmp
sub
int3
cmc
mov
iret
loope
add
arpl
lret
xchg
in
in
pushf
adc
and
and
mov
ficoms
stc
mov
lret
add
jno
or
cmp
xchg
aad
jecxz
lcall
es
xor
sarl
clc
in
decb
out
mov
jg
in
and
popf
mov
adc
fiaddl
aam
mov
add
int
inc
sub
mov
pop
popf
mov
loop
pop
adc
scas
add
fimull
adc
scas
data16
loopne
mov
movsb
pop
sub
imul
popa
test
jg
inc
es
cmp
movb
aam
cmp
rep
int
loop
or
inc
mov
inc
cs
xchg
out
mov
stc
xchg
mov
xchg
scas
mov
test
lods
pop
dec
out
push
or
sub
aas
lea
das
ret
and
les
jne
inc
fcomi
mov
cmp
inc
sti
pop
adc
or
cmp
cmp
xchg
sub
daa
add
fimull
int
cmc
icebp
cmpsb
sub
dec
in
mul
pop
add
mulb
imul
mov
decb
jl
xchg
adc
scas
inc
dec
and
enter
in
xchg
jb
sbb
jae
dec
mov
push
mov
inc
pop
xchg
shrb
jge
sbb
adcl
imul
aam
into
jg
and
lret
inc
inc
jo
xchg
sub
lret
xchg
iret
int
mov
outsl
and
and
lods
std
dec
aam
sbbb
int3
cmp
adc
insb
sahf
enter
repnz
xchg
inc
pcmpeqd
lods
mov
out
cmp
mov
sbb
and
sub
shlb
jmp
jns
sbb
mov
repz
pushf
xor
pop
cmpsb
lock
aaa
jbe
xchg
sbbb
push
call
mov
test
ror
lds
mov
aad
scas
jle
pop
daa
rcll
mov
add
xor
jns
sub
fsubr
and
jmp
rcl
test
clc
xchg
adc
out
lcall
jg
shrl
enter
imul
cmp
rorl
mov
cmp
pop
jno
popf
outsb
mov
jb
jbe
lret
arpl
in
in
cmpl
mov
js
scas
inc
dec
push
or
mov
loopne
xchg
adc
xor
test
pop
jno
or
ja
pop
imul
cmp
push
in
mull
jl
add
jle
jo
push
pop
jle
dec
popf
popf
mov
or
sub
outsl
dec
mov
dec
idivl
testb
clc
adc
test
or
pop
jb
js
pop
lcall
popf
les
push
out
adc
mov
push
push
je
sub
movsl
lahf
pop
je
mov
inc
into
imul
mov
jb
cmpsb
inc
and
push
push
subb
fwait
cltd
cmpl
out
arpl
test
and
lret
xor
jg
xchg
ljmp
je
mov
jl
lcall
movsl
and
cli
test
xchg
scas
xlat
mov
and
mov
mov
fbld
jae
lea
out
cmovle
mov
out
out
ljmp
xor
inc
jae
fmull
xchg
inc
std
movsl
sub
repnz
push
inc
test
adc
in
loopne
and
xchg
mov
ds
xor
push
out
or
int3
sti
stc
sbb
lret
ja
cmc
mov
push
jmp
movsb
fstpl
mov
jg
cmc
outsl
or
call
pusha
jno
and
mov
arpl
cltd
in
add
adc
xor
xor
adc
lahf
xor
rcll
int3
lret
in
push
sarl
and
outsl
arpl
test
nop
push
sbb
shrb
mov
scas
into
scas
test
pop
pop
adc
xor
xor
or
dec
ljmp
fsubr
lds
or
pop
mov
or
xor
pop
cmp
mov
repnz
mov
mov
cmp
sbb
xchg
cmp
rcrb
add
mov
pop
push
int
in
cmp
lods
adc
arpl
test
sub
imul
lahf
sub
sbb
xor
push
add
push
inc
sub
sbb
inc
cs
and
or
insb
push
mov
aaa
hlt
leave
pushf
bound
jmp
inc
test
and
pop
or
cmp
mov
dec
mov
les
mov
and
and
ja
inc
hlt
aam
dec
dec
fdiv
movsb
pop
push
cmpb
pop
rorl
sbb
mov
mov
popf
dec
push
xchg
sub
sub
mov
cmp
dec
mov
imul
out
jno
xchg
inc
or
cmp
stos
mov
nop
stos
pusha
repz
sub
dec
pop
lcall
cwtl
add
cltd
cmp
mov
and
pop
orb
mov
xchg
adc
lock
sub
xchg
cmp
cmpsl
cltd
pop
mov
sarb
or
lods
flds
mov
jecxz
std
mov
xor
pop
stos
dec
iret
mov
fisttpll
lods
fs
call
dec
cmpsb
stc
lods
pop
adc
xchg
sub
js
jmp
dec
movl
sbb
mov
add
andb
inc
jne
jae
out
mov
cmp
inc
testl
add
push
fsubr
cwtl
mov
jo
fnsave
ja
fwait
enter
test
fimull
or
scas
xchg
out
sub
pop
xlat
mov
cmp
sbb
aad
fcompl
and
pop
cld
xor
fists
sti
push
push
jns
gs
sti
js
xor
lods
xor
mov
test
lods
mov
sahf
je
xlat
outsl
loop
movsb
repnz
pushf
push
or
and
or
fcmovne
es
int3
fdivrs
xchg
jno
fiaddl
fwait
imul
ret
dec
insl
push
jns
pop
ljmp
pop
popa
faddl
cs
xor
jns
sbb
pop
mov
call
and
insb
mov
imul
add
mov
js
cmp
divl
mov
data16
push
popf
jmp
sub
imul
clc
gs
jmp
hlt
and
push
fwait
sub
fs
mov
fidivrs
push
iret
daa
jp
sahf
addl
push
addb
and
stos
xchg
mov
add
test
in
addb
aaa
test
push
movsl
inc
mov
stc
fildl
xor
mov
into
pusha
xor
xchg
lahf
push
jmp
ljmp
pop
mov
mov
mov
xchg
imul
lods
fwait
dec
cmp
push
cli
in
das
adc
gs
xchg
add
xorb
mov
pushf
pop
jb
jo
jl
xor
test
fisttpl
and
mov
stc
sbb
inc
adcb
xor
mov
xchg
mov
addr16
pop
cltd
std
lea
push
or
xor
es
push
pop
cmovge
add
jg
js
idivb
aaa
xchg
movl
mov
lods
cmp
xor
xchg
das
push
fmull
xor
mov
aad
jns
dec
mov
jnp
push
mov
dec
mov
inc
jmp
ja
test
inc
out
cli
icebp
in
shl
movsb
jecxz
sbb
imul
data16
imul
mov
iret
data16
ret
cs
or
xor
addr16
cwtl
ret
pop
ds
outsl
cmp
scas
add
sti
mov
in
data16
dec
decb
mov
cmp
pop
cmc
mov
icebp
lahf
nop
aad
inc
mov
sbb
repnz
leave
xor
and
lods
inc
loope
inc
test
add
fdivrs
hlt
mov
xor
mov
cltd
xor
cmp
dec
outsl
mov
aad
xor
cmpsl
xchg
push
insb
sub
cmp
orl
loope
clc
adc
lcall
insb
xor
sbb
sub
cmp
mov
dec
lahf
stos
andb
mov
and
mov
xchg
mov
mov
in
scas
shll
mov
sarl
inc
mov
das
xchg
insl
push
ds
rorl
rcrb
mov
fsubrp
sbb
iret
fnstenv
mov
test
imul
fldt
mov
mov
daa
add
inc
les
jle
push
daa
sbb
fidivl
shl
loopnew
stc
sbb
or
movsl
hlt
adc
loop
int
int3
lock
fistps
add
mov
add
inc
pop
stos
jns
rolb
imul
pop
xor
and
inc
fdivrl
push
out
jns
sub
push
stos
inc
test
jmp
jbe
and
xchg
jmp
push
sbb
cmpsl
shlb
cli
cwtl
in
cmc
pop
mov
mov
shll
nop
jl
orl
je
mov
mov
mov
stos
ret
pop
xlat
xlat
fcmovne
mov
loopne
xor
pushf
mov
xor
jnp
pop
adc
xchg
jns
mov
fcompl
pop
dec
rcll
mov
sbb
in
movsb
mov
xlat
mov
mov
fmuls
pop
les
lcall
jnp
or
f2xm1
dec
and
shll
inc
rol
fdivrs
adc
jge
add
pop
mov
fucom
insb
and
sti
fidivl
jmp
enter
pop
xor
popa
fsubr
jno
in
mov
mov
push
pop
sub
pop
jb
pop
mov
loopne
fwait
shll
mov
mov
fisttpl
or
jb
gs
xchg
insl
imul
sti
cmp
daa
cli
cwtl
mov
addl
cmc
ljmp
aad
push
call
sub
outsl
add
cmp
mov
lret
cmpsb
cmp
jp
cmp
pop
sub
pop
in
movsl
sar
out
lret
cs
mov
xor
xor
std
add
popf
loopne
negl
lds
sbb
mov
ljmp
lahf
cmp
push
sbb
ljmp
mov
pop
aas
adc
pusha
adc
cmp
scas
push
xlat
add
dec
mov
xchg
sub
cwtl
jnp
cmp
ss
ss
push
inc
add
lahf
cwtl
fnsave
pop
mov
fdivrp
push
xor
xchg
movsb
ss
push
jge
and
cmp
pop
icebp
and
inc
xor
loope
mov
ss
shll
lret
cmp
inc
pop
movsb
jns
push
ss
in
call
cmpsl
xor
push
scas
ud2
pop
xor
idivb
mov
cwtl
jg
jmp
mov
pop
add
push
sbb
sti
mov
cmc
in
test
cli
sbb
mov
mov
jno
andb
mov
jmp
sti
adc
lret
sahf
test
cltd
jbe
js
xchg
aas
push
scas
pop
inc
mov
cmp
xchg
cmpsl
cmp
sbb
sahf
loop
push
cmp
bound
ds
inc
jmp
cmp
xor
lret
dec
xor
xor
inc
mov
fs
adc
inc
cwtl
pop
dec
and
dec
stos
pusha
int3
sub
pop
pop
lahf
and
and
movsl
sbb
mov
into
adc
inc
das
xor
push
bound
pop
inc
xchg
mov
sbb
mov
in
cs
push
push
xchg
dec
es
lcall
push
mov
out
aaa
mov
and
arpl
dec
xchg
hlt
jecxz
cmp
fildll
test
add
cwtl
orl
adc
jmp
mov
popf
fstl
ljmp
mov
and
jmp
jg
cs
add
repz
jo
imul
lods
dec
arpl
imul
lods
and
int3
lret
stos
inc
cli
imul
adc
packuswb
pop
leave
loope
inc
repnz
dec
aas
fists
subb
or
pop
jnp
les
loope
fstpt
faddp
sub
xchg
dec
jo
add
movsb
push
add
sahf
xor
test
inc
fsubs
shlb
insb
inc
sbb
ds
movsb
inc
fwait
mov
ficoms
and
stos
xchg
cmp
les
insb
dec
push
popa
in
mov
push
fpatan
xchg
std
test
mov
fisttpll
data16
mov
out
dec
mov
push
leave
in
icebp
pop
mov
cmp
aam
cs
outsl
mov
jle
rcrl
mov
mov
add
iret
sub
imul
daa
sarb
outsl
loopne
push
pop
push
pop
into
das
out
xchg
pop
or
clc
stos
repz
popa
mov
mov
sub
test
mov
arpl
dec
inc
fstpl
enter
mov
push
adc
movsb
push
pushf
adc
daa
sbbl
in
dec
aaa
mov
orb
and
lret
mov
addl
in
jp
loop
adc
call
and
and
adc
mov
fidivs
bound
sbb
jb
mov
ss
mov
repz
sbb
jle
mov
xchg
add
dec
jmp
loopne
fwait
in
ja
call
ret
pushf
inc
lods
fldcw
xchg
jmp
inc
lods
loopne,pt
jb
pushf
test
cmpsb
pusha
lahf
lods
xchg
lds
lds
and
bound
es
aad
hlt
test
jno
sbb
xlat
xor
mov
divb
sub
jb
popa
jns
xchg
cmpsl
les
push
das
cltd
add
cmp
out
jle
sub
sbb
pop
cmp
lret
int3
cmp
fiadds
test
sahf
imul
sbb
dec
push
sbb
jge
pop
fcom
pop
scas
sub
jecxz
add
inc
push
mov
push
int3
fwait
mov
add
rorl
scas
imul
xchg
data16
xchg
or
insb
pop
sub
fnstenv
jnp
inc
adc
fcoml
test
push
sarl
lret
dec
insb
imul
in
sbb
pop
pop
or
xchg
fists
jmp
lods
daa
jmp
shll
stos
leave
fnstenv
in
ja
jmp
movsl
popf
push
push
xor
mov
jno
int
daa
popa
fistpl
dec
and
mov
divb
lea
mov
adc
in
lret
in
mov
pushf
push
leave
sbb
scas
jecxz
pusha
negl
adc
dec
sar
jg
lock
pop
pop
shrl
es
cmp
mov
std
mov
lods
imul
out
hlt
sbb
fsubl
cmp
lock
fwait
lds
std
fcomip
jbe
shlb
mov
cwtl
enter
pop
insb
push
pop
ja
dec
dec
mov
jmp
adc
lods
aas
or
mov
mov
mov
divb
add
call
repz
jb
andl
test
sub
ret
add
fists
pop
mov
ss
mov
xor
mov
cld
pusha
into
ficompl
push
movsl
insb
int3
pop
lock
dec
ret
movsl
xchg
dec
pop
bound
sub
das
mov
adc
lcall
into
xor
lret
xlat
test
cmp
jl
sbb
int
in
test
cmp
push
cmp
shlb
xor
xchg
push
lea
mov
xchg
test
neg
sti
dec
scas
aaa
stos
and
jne
inc
iret
mov
fbstp
pop
push
in
lret
sbbb
jae
aad
loopne
cltd
testl
in
stos
insb
lret
or
out
test
jne
dec
cs
in
ja
fnsave
outsb
sub
sbb
ds
insl
jle
sahf
in
sbb
aas
ds
jnp
mov
mov
sti
pop
test
dec
or
sar
fwait
mov
das
cwtl
xchg
call
jbe
cs
loopne
lds
pop
out
cmp
cmc
sbb
sti
leave
addr16
sbb
sub
movb
sbb
or
out
jns
dec
sub
in
xchg
jge
aaa
sahf
xchg
aad
test
and
into
xchg
insb
xor
push
cltd
add
lds
enter
dec
pop
mov
adc
pop
and
push
and
and
xchg
cwtl
and
or
ja
mov
repnz
inc
and
mov
ret
push
incb
sbb
xchg
movl
shll
sbb
imul
scas
and
pop
negb
iret
mov
mov
xor
test
mov
xor
push
pop
jl
dec
les
and
ret
aas
es
ficoms
push
inc
les
movsb
in
sahf
in
int3
fsub
jp
les
jbe
or
into
movsb
stc
jne
in
sbb
fwait
scas
shlb
fstpt
stc
scas
mov
sbb
adc
hlt
add
popf
push
shll
cmpl
push
scas
mov
test
fidivrl
imul
mov
ret
jnp
fisttps
dec
out
aas
enter
push
test
movsl
jae
test
mov
sub
pop
and
or
dec
adc
ret
mov
adc
stos
inc
xchg
jbe
jns
aad
ficomps
mov
enter
mov
insb
sub
ja
mov
fiadds
lcall
lcall
sub
sub
aas
pushf
mov
dec
sub
std
outsl
inc
repnz
jns
out
repnz
mov
xor
lock
mov
lods
dec
xchg
dec
es
subb
dec
ficomps
pop
stos
out
mov
test
inc
jmp
mov
arpl
rorb
subb
mov
inc
sub
movb
scas
xchg
mov
sbb
push
dec
fldenv
inc
push
insl
lods
mov
aaa
mov
sbb
and
push
mov
xor
das
lds
fistpl
dec
pop
ret
movsl
fsubs
gs
mov
xchg
sub
popl
mov
fidivs
iret
insl
sub
aas
cld
push
pop
add
ja
clc
imul
mov
inc
rcll
shl
mov
inc
rorb
iret
test
adc
cmpsb
push
scas
mov
out
sahf
je
pop
negb
push
cmp
out
add
mov
data16
xor
and
or
dec
insl
movsb
repnz
popf
jmp
sbb
fbld
imul
xor
fiaddl
lahf
or
push
mov
mov
daa
repnz
jnp
mov
cmp
mov
pop
lea
xor
js
shl
jge
call
shrl
pop
xlat
daa
or
jl
aad
mov
mov
movsb
xor
adc
arpl
pop
ss
loopne
or
ficoms
xchg
fisubl
mov
jno
jmp
inc
incb
dec
dec
leave
dec
jne
xchg
shrl
lret
jne
pop
out
xor
push
inc
popa
xchg
sub
dec
stos
in
lea
add
mov
cmpsl
xlat
and
push
sub
jle
aam
pop
sub
popf
xor
ljmp
mov
cs
mov
fnstsw
int
xchg
lock
insl
pop
lret
fdivrs
in
imul
mov
lret
push
or
stos
lcall
mov
stos
ret
das
mov
out
or
lock
daa
mov
imulb
shl
jg
into
jne
add
cmpb
xchg
dec
or
repnz
leave
test
jo
push
dec
pop
mov
in
ret
xchg
ds
ljmp
pinsrw
testl
mov
push
test
aas
rorl
aad
pop
inc
adc
push
inc
shlb
aaa
push
or
xchg
gs
cmp
adc
call
lods
dec
call
fiadds
cmc
int
mov
or
fwait
xor
adc
mov
fucom
adc
mov
inc
addr16
push
mov
out
out
xlat
pop
xor
adc
rcl
mov
mov
xchg
xor
mov
in
movsl
mov
pop
mov
adc
ja
lock
scas
mov
out
loope
bound
inc
stc
xor
sbb
roll
stos
jg
imul
lods
rorb
int3
cmp
pop
jmp
mov
mov
fadds
cs
fs
icebp
xchg
push
scas
pop
orb
je
cmp
out
xchg
mov
xor
pop
xor
push
fs
pop
mov
ficoml
dec
lcall
sbb
or
mov
xor
repz
hlt
mov
clc
lds
loop
jecxz
xchg
push
ss
add
xchg
test
sub
jne
jl
cli
xor
int3
rorb
mov
cs
or
insl
pushf
mov
test
mov
inc
add
fwait
mov
je
int
jne
mov
jns
mov
fnstsw
rcll
sbb
and
pop
push
inc
and
mov
jmp
mov
pcmpgtd
ret
xor
mov
dec
pop
rcr
jo
mov
pop
hlt
sub
push
and
leave
sub
hlt
out
add
aaa
imul
sub
or
cwtl
or
mov
mov
and
pop
std
cli
dec
dec
mov
add
push
inc
and
cmp
aad
das
mov
js
out
push
and
jle
scas
jne
cmpsl
addb
ffreep
xor
jp
jl
pop
push
mov
sahf
jns
pushf
mov
cs
test
clc
cmp
push
xor
test
mov
in
movsb
mov
inc
xchg
xchg
mov
sbb
push
dec
out
xor
jae
pop
sub
sahf
lea
mov
sbb
repnz
mov
insl
rcrb
sub
cmp
pop
mov
push
push
xchg
mov
lcall
stos
scas
mov
clc
cli
orb
in
mov
jo
and
or
sub
pop
mov
push
mov
cmpsb
dec
sub
pop
sub
jns
push
scas
xor
gs
outsb
jl
sarl
mov
or
lock
orl
int
pop
pop
insb
insl
cmpsl
push
mov
sbb
dec
gs
or
pop
gs
pop
xchg
push
dec
or
scas
imul
xorb
aad
mov
sti
mov
and
leave
mov
mov
xchg
out
dec
add
movsl
sub
push
flds
loop
lahf
test
sarb
or
and
rorl
adc
jo
fbld
adc
test
dec
or
jne
nop
lret
fstpl
pop
and
add
call
jno
sbb
jo
adc
fs
enter
pusha
jmp
xchg
repz
xchg
push
dec
inc
int3
mov
or
sbb
movsb
pop
fildll
jp
sbb
popa
sbb
test
xor
and
and
xor
cltd
cli
fisubs
or
sbb
dec
ret
xor
sahf
arpl
rol
mov
xchg
fsts
enter
popf
dec
popa
xchg
into
adc
cmp
stos
cmc
fidivrs
push
data16
repnz
push
or
push
movsl
mov
lcall
push
sub
inc
je
xchg
loopne
loop
hlt
pop
xor
leave
lret
sub
mov
add
add
stos
mov
cmp
pop
dec
repz
push
xor
xlat
imul
call
xor
jne
lods
and
pop
aam
popf
fidivl
jae
pop
cmpsl
ret
notb
xchg
inc
xchg
push
fisttpl
and
jp
mov
lods
push
inc
das
push
dec
mov
sbb
sub
divb
sbb
cvtdq2ps
or
fcmovne
insl
in
jne
jg
test
xor
mov
sbb
pop
cli
cmp
pop
jbe
je
jl
pop
leave
out
rcrl
cmp
cmp
sbbl
jge
repz
lds
mov
and
mov
adcl
xchg
xchg
dec
dec
loopne
jp
cmc
cmp
mov
jne
sar
je
test
scas
push
jmp
dec
mov
sti
cmp
scas
dec
data16
inc
ret
insl
out
nop
pop
repz
pop
push
add
nop
call
ficomps
fwait
sub
cld
imul
outsb
sub
xor
nop
mov
xchg
pop
sub
or
xor
jns
sbb
ds
aam
stos
xchg
jmp
rcrb
ret
std
lret
int
pushf
test
call
push
dec
out
mov
jo
cmp
mov
dec
lss
adc
lods
xorb
addr16
mov
xlat
ss
jge
pop
or
cmp
cmpsl
out
xchg
pop
ds
movq
lret
jno
mov
and
push
xor
mov
dec
cmpsb
pop
or
inc
hlt
clc
ds
adc
jle
sub
inc
repnz
mov
xchg
sbb
push
jle
shrb
push
xor
or
insb
push
sti
xchg
inc
push
cwtl
mov
push
mov
push
mov
push
out
push
rcr
cmc
pop
inc
sub
jns
push
dec
pop
xor
inc
xor
xor
xchg
or
mov
rorb
sti
dec
aas
adc
cmp
pusha
fbstp
dec
mov
loop
and
xchg
adcl
mov
int
iret
je
add
push
orb
sbb
add
mov
fisubl
xchg
shl
xor
out
filds
mov
mov
mov
mov
sbb
inc
adc
es
fstps
or
cltd
sbbl
adc
push
clc
mov
imul
daa
mov
push
scas
je
jnp
sbb
add
xchg
xor
add
dec
out
inc
notb
int
in
inc
push
stos
pop
imul
lds
ret
cmp
mov
xor
adc
stc
xchg
xorl
cmpsb
mov
pinsrw
sub
mov
call
sbb
lods
dec
aam
ljmp
out
push
aad
xchg
sbb
pop
lahf
jle
iret
and
lods
lods
inc
fisubrs
inc
test
testb
imul
je
jge
add
mov
call
scas
and
mov
and
mov
fldt
xor
add
subl
adc
push
mov
adc
fcmovu
arpl
cmp
and
dec
jl
daa
pop
aaa
stos
inc
daa
es
mov
xchg
int
aad
insl
add
fiadds
xchg
adc
sahf
cmc
adc
add
data16
and
dec
fiadds
cltd
push
pop
adc
cmp
dec
lods
add
dec
aas
aad
and
or
and
bound
data16
sbb
std
sti
iret
test
or
xor
sbb
lret
mov
pop
mov
mov
cmpsb
xlat
pop
xlat
movsb
stos
inc
testl
adc
outsb
and
jp
lds
inc
jle
xchg
push
push
loop
test
cmp
and
push
in
imul
or
mov
das
pop
sub
jg
dec
arpl
xchg
sub
jno
arpl
into
and
push
lods
out
xchg
cmc
pop
ret
lds
notb
or
out
adc
iret
cmp
inc
xlat
inc
ffreep
xor
xchg
sbbb
mov
ret
mov
jo
ret
push
cmp
mov
sbb
lret
cmp
add
cmc
fnstsw
es
adcb
mov
imull
and
out
xchg
test
push
testb
adc
stc
xchg
rclb
adc
ss
or
inc
jmp
sahf
jle
repnz
push
push
leave
mov
je
adc
mov
pop
lret
leave
pusha
bound
es
xchg
in
pushf
jno
enter
push
cmc
cmpsl
inc
es
mov
push
stos
lea
pop
daa
xor
hlt
push
mul
add
arpl
mov
jbe
pop
mov
cld
test
loopne
ljmp
ljmp
xor
adc
in
ja
mov
mov
mov
or
arpl
out
in
and
mov
pcmpgtb
add
and
mov
test
or
outsb
jp
int3
jecxz
pop
outsb
lea
xor
lods
and
sahf
and
pop
xchg
mov
sub
shr
lahf
push
repz
jge
xor
inc
dec
fbstp
mov
cmc
or
push
sub
cmc
jle
mov
lds
ljmp
aaa
fwait
cmp
cmpsb
lods
xchg
rorb
xor
repnz
jp
stos
mov
push
cmpsb
scas
push
fdivs
jnp
lock
or
outsl
jbe
mov
mov
leave
loop
sub
cmp
jmp
addb
sub
hlt
scas
std
fldenv
jb
cmpsb
mov
lds
pop
adcb
add
repnz
inc
repnz
int3
fisubrs
pushf
jb
inc
mov
inc
sbb
ret
bound
mov
push
jbe
cltd
or
pop
in
mov
and
push
test
in
leave
push
jb
jmp
mov
stos
insb
mov
jecxz
les
xor
xor
adc
cmpsb
push
mov
mov
imul
xor
call
sub
imul
sbb
scas
testb
xorb
adc
mov
testb
sarl
mov
xor
cmpsl
iret
and
lods
inc
mov
fcmovnbe
imul
ficoml
jl
mov
fsubrs
push
rcrb
into
je
out
int
stos
xor
ljmp
popa
adc
lods
xorb
les
sbb
dec
fs
xchg
mov
dec
push
add
jae
cmpsl
cli
ljmp
xchg
bound
loopne
add
stc
or
cmc
filds
js
push
js
nop
or
adc
cmpl
lret
ret
push
mov
mov
pop
dec
sbb
cmc
cltd
cmpsl
inc
sbb
jecxz
jno
jne
cmpsb
loopne
or
or
adc
test
add
fidivs
pop
inc
jecxz
in
jge
push
fs
xor
andb
sbb
in
imul
xchg
adc
inc
jecxz
mov
jae
stc
pop
in
pop
inc
testl
cmpsb
inc
out
in
lret
mov
lahf
xlat
je
loope
xchg
sub
add
adc
bound
fadds
mov
jle
or
outsl
aam
cmp
sub
sbb
push
jbe
inc
xor
leave
pop
sbb
push
and
int3
repz
orw
rorb
xchg
cmc
xchg
jmp
mov
shrl
and
or
xor
outsl
daa
mov
sub
out
mov
or
pop
notb
cmp
rcr
outsb
hlt
push
push
mov
es
test
scas
cli
clc
xchg
imul
out
mov
cmc
and
addr16
jmp
cltd
sbb
push
imul
mov
fidivrs
xor
sub
test
push
mov
pop
loop
loop
fidivs
popa
cli
lds
add
cmp
pop
arpl
fwait
xchg
sbb
lods
pop
cmp
inc
stc
call
cmpsb
bound
cmp
test
icebp
gs
rcll
ljmp
push
shlb
dec
loop
cmp
dec
jge
push
mov
jp
lock
mov
xchg
jecxz
xchg
scas
mull
jb
xor
in
xor
pop
sti
xchg
mov
insl
sbb
pop
inc
or
inc
pop
or
mov
in
sub
adc
mov
sbb
int3
imul
lods
xchg
xor
or
jno
mov
lds
fnclex
mov
js
xchg
xor
fsubrl
add
adc
negl
mov
xchg
push
add
stos
cmp
mov
and
mov
jle
fisubrs
and
lahf
mov
fimuls
sbb
aaa
scas
jne
pushf
lods
mov
xor
shrl
add
xchg
xchg
bound
push
adc
xorl
aad
dec
add
iret
loope
sub
pop
test
and
push
jno
sbb
push
and
pop
addr16
push
cmp
adc
jne
xchg
sub
mov
das
jp
inc
pop
add
test
xchg
cmp
inc
push
mov
push
aas
test
cmp
cmp
orl
and
push
mov
or
leave
xchg
fisubl
cmp
pop
add
cmp
movsl
jnp
in
lds
inc
es
out
subl
push
mov
mov
dec
adcb
lods
mov
mov
push
xchg
inc
cmpsb
xchg
in
out
mov
mov
int3
movsb
sti
mov
test
push
stos
mov
xchg
mov
rcll
lds
icebp
pop
push
push
xchg
sbb
imul
daa
loopne
pushf
out
push
add
iret
mov
cld
cmp
add
pop
or
cmc
jbe
pop
iret
xor
in
loope
mov
sub
sbbl
popf
cmp
pop
hlt
xchg
adc
mov
jp
dec
lods
push
xor
sub
test
or
ja
inc
jnp
aad
add
inc
negl
mov
aas
push
pop
subb
mov
das
iret
test
test
movsl
adc
add
xor
addl
inc
dec
inc
xlat
mov
dec
pop
dec
js
sub
rcrl
mov
ret
mov
and
mov
mov
jns
lcall
repz
in
into
adc
into
bound
loop
xchg
cmp
pop
stc
enter
mov
pop
and
mov
sti
sbb
in
in
cwtl
inc
bound
cmpsl
or
orl
jl
mov
xchg
aas
add
ficoms
xor
and
xor
and
push
inc
vmwrite
mov
push
cmpb
stc
pop
imulb
call
movsl
addr16
lcall
adc
adc
enter
nop
outsl
lods
pop
and
inc
inc
cmc
mov
adc
mov
xor
jge
sub
stc
xchg
jge
add
sbb
and
fiaddl
push
mov
mov
add
mov
stos
lds
movsl
movsl
jb
fildl
scas
mov
add
pop
or
cmpsl
dec
or
xorl
fistl
stos
mov
fnstenv
test
das
mov
pop
gs
push
leave
mov
mov
fwait
int
mov
mov
cmc
ja
lret
and
xchg
std
lea
cltd
sti
xchg
lret
jmp
lods
aam
sbb
jl
cmp
xchg
je
lds
xor
sub
fyl2x
inc
test
andl
adc
fnsave
enter
ficomps
setl
into
xor
movsl
sub
jg
ljmp
sarl
mov
xchg
mov
gs
add
xchg
outsl
clc
and
gs
sub
push
add
mov
gs
lods
bound
cmp
cmp
and
dec
fldt
test
dec
add
lods
or
out
or
scas
aaa
mov
insb
stc
insb
jp
fimuls
adc
xchg
hlt
or
inc
mov
negb
xor
pusha
ljmp
mov
sbb
jno
std
jo
adc
cwtl
fs
scas
mov
cmp
add
and
arpl
inc
into
and
faddl
idivl
addb
mov
cmp
repnz
pop
or
sbb
push
push
mov
out
repnz
adc
mov
frndint
xchg
jns
jge
icebp
lcall
sarb
sbb
sub
xchg
push
roll
push
rcrl
sub
and
pop
in
inc
xchg
push
jbe
cmpb
push
adc
clc
fists
mov
pusha
popf
adc
dec
pop
je,pn
repnz
cmp
cld
jg
xor
inc
lods
ja
jne
shll
jmp
insl
popa
aam
out
ret
pop
testb
fs
stos
push
xlat
repz
lods
xor
into
int3
push
or
push
pop
dec
roll
pop
dec
mov
xchg
dec
xchg
movsl
rorl
mov
fimull
pop
inc
js
dec
xchg
inc
test
lds
or
mov
add
stc
push
mov
aaa
call
push
and
jg
mov
jnp
and
pop
aam
popa
les
mov
mov
inc
insl
or
push
shrl
or
imul
push
inc
inc
bswap
daa
cmp
lcall
loop
dec
push
je
xor
mov
pop
inc
push
test
ret
iret
aaa
sbbl
xchg
xchg
push
in
mov
addr16
inc
cmpsl
clc
cmc
lret
les
xchg
xor
sbb
lea
outsb
sbb
lretw
xor
jp
inc
loopne
ljmp
dec
call
mov
outsl
add
jo
hlt
into
adc
xor
pop
das
stos
push
nop
bound
push
clc
shll
sbb
lret
xlat
inc
bound
xchg
xchg
pop
aad
mov
dec
pop
insl
jl
xchg
mov
cmp
push
dec
test
xchg
and
sbb
dec
out
insl
push
shr
js
pop
mov
sub
stos
jp
data16
add
mov
mov
add
mov
loopne
mov
in
dec
add
mov
fsubs
fiadds
stos
sbb
or
mov
add
inc
cwtl
fdivrl
inc
ficompl
adc
xor
xor
out
inc
sbb
ds
imul
jmp
sub
ds
mov
fcoms
pop
jb
stos
mov
daa
nop
sahf
pop
in
sub
je
stc
and
dec
sti
xchg
jnp
pop
lret
sbb
aad
dec
cltd
pop
sti
add
sub
mov
jg
cmp
stc
xchg
dec
sbb
subl
andl
lahf
pop
mov
data16
out
rcrl
jno
imul
jae
jnp
adc
insl
mov
and
pop
sbb
cmp
mov
shrl
into
add
in
test
pushf
cmp
xlat
adc
or
jl
sub
shl
push
inc
and
push
pop
mov
sarl
dec
xchg
cmp
xchg
idivb
xor
mov
inc
rcrl
lcall
out
aad
inc
and
mov
adc
movsb
pop
cltd
fstl
pushf
or
shrb
loope
sbb
cltd
or
rol
sbb
scas
lea
lods
mov
adc
popf
ret
repnz
mov
insl
add
jp
shrl
lret
cwtl
lock
bound
mov
out
xchg
jb
push
sahf
add
jl
dec
cwtl
call
push
pop
sahf
and
cmp
jmp
pop
and
lods
mov
inc
mov
jb
movsb
push
cltd
xor
enter
sub
pop
aad
lret
add
daa
push
fbstp
jno
inc
popf
push
fs
rcll
sbb
shll
pushf
aas
xchg
mov
cs
ret
xor
cmp
test
add
sbb
pop
push
cltd
jmp
sahf
scas
sbb
mov
pop
sar
aad
add
xor
cmpb
mov
fmul
inc
dec
pop
push
stc
adcl
lahf
test
popf
nop
xor
inc
out
cmp
inc
xor
stos
movsl
js
mov
je
and
sub
push
ret
mov
fmull
cmpsb
fbstp
flds
fisttpll
clc
adc
xor
mov
add
mov
stos
aam
xor
int3
and
adc
leave
mov
mov
test
lahf
test
or
jb
jo
scas
inc
daa
xchg
inc
jecxz
or
cmpsb
mov
push
xlat
sbb
add
sub
pop
out
xchg
sbb
ds
and
cmp
inc
ret
push
ret
shl
out
sub
fisubl
scas
mov
or
push
pop
enter
insb
add
lods
mov
and
add
jne
sbbl
scas
je
adc
std
push
sub
pop
push
xchg
inc
mov
in
out
or
push
popf
mov
push
and
dec
sbb
mov
imul
adc
fdivs
jecxz
pop
out
in
scas
sub
sbbb
pushf
add
daa
lahf
ss
mov
inc
push
je
fs
js
mov
in
std
xchg
jg
push
lods
pop
push
pop
divb
inc
add
mov
insl
add
mov
shrl
jp
ret
cmp
lock
mulb
rclb
push
scas
lahf
lret
lret
aam
fsubs
adc
int
jecxz
inc
pop
mov
mov
and
cmpsb
imul
outsb
aas
xchg
outsl
iret
sbb
adc
push
dec
push
cmc
dec
scas
arpl
push
pop
imul
mov
rcr
aad
pop
daa
add
add
mov
pop
pop
cmpps
add
insl
jb
and
adcl
enter
pop
lods
das
aas
jmp
or
jnp
sub
sub
ret
sbb
ret
sbb
loopne
push
cmp
addr16
pushf
sub
mov
mov
rclb
xchg
and
dec
xchg
into
adcb
popf
push
mov
in
in
cltd
outsl
cmp
mov
mov
push
fdivl
mov
shrl
add
mov
fnstcw
pop
fnstenv
fucomp
movsl
into
js
mov
orb
das
push
inc
pusha
sub
lcall
mov
add
mov
sbb
fimull
sti
inc
shlb
jno
xchg
aad
jl
mov
cltd
xlat
aad
out
lea
insb
mov
mov
sbb
imul
clc
mov
ret
jg
jns
sbb
push
lcall
cmpsb
ror
push
popa
adc
xchg
lret
mov
mov
test
cmp
fistl
stos
mov
popa
dec
out
in
fcmovbe
jmp
mov
adc
fs
adc
cmp
jmp
push
mov
frstor
mov
mov
or
pop
xor
icebp
cltd
das
pop
push
push
stc
xchg
mov
into
cltd
popa
clc
lret
pop
push
rolb
mov
pop
inc
xor
dec
jg
push
pop
inc
das
pop
xchg
mov
push
fdivp
or
xsha1
cmpsb
or
cmp
sub
ja
adc
andl
or
jnp
lock
fbstp
cli
pop
repnz
mov
lds
fmuls
or
add
out
movsl
cmp
cs
pusha
dec
test
lahf
inc
dec
loopne
xchg
and
fwait
addr16
xor
dec
cltd
mov
sbb
shrl
ss
push
and
dec
dec
pusha
push
sbb
outsb
dec
movsb
sarb
loopne
push
ljmp
jno
and
mov
add
cmp
jb
mov
or
mov
ret
idivl
fnstcw
or
cmpsl
pop
cmpsb
sub
andl
jne
bound
js
adcb
add
fs
fdivrl
jge,pn
cmpsb
xchg
or
mov
push
sub
rcl
rolb
mov
repz
jno
dec
jl
cmp
sub
rolb
std
pop
adc
lret
sti
sub
push
push
in
pushf
call
daa
cmp
adc
cltd
scas
inc
add
int3
pop
or
xor
jb
xchg
push
aad
xchg
inc
es
sti
xchg
in
sbb
fcmove
jb
jmp
sub
ss
insb
xlat
and
lods
cmp
cmp
pop
rolb
sbb
adc
xchg
scas
xor
cmp
loop
or
xor
xchg
psraw
mov
movsl
lds
fwait
mov
lods
movsl
fstps
jmp
pusha
leave
scas
and
mov
mov
scas
adc
test
and
inc
pop
lods
push
or
add
xchg
hlt
and
les
jle
sbb
rcrl
les
out
js
les
lock
orl
xor
cmc
jno
pop
imul
mov
fdivs
out
ror
or
aad
das
cmp
pop
pop
dec
cmpsb
mov
adc
jp
pop
ret
push
mov
fsubs
adc
es
test
ss
cs
out
xchg
mov
sbb
ljmp
dec
lret
jae
xor
jne
ret
movsl
dec
clc
stos
andl
aas
pop
ret
stos
xchg
mov
in
mov
fdivl
fisubl
scas
shrb
adc
loopne
mov
xor
daa
mov
xchg
lret
insb
cmp
mov
int3
mov
sarl
in
sbb
push
lret
sub
push
mov
les
sbb
adc
shl
xor
fdivs
or
jo
repz
add
testb
jl
and
xor
fs
movsb
cmp
push
pop
les
sub
push
outsl
inc
cli
dec
pop
sbb
mov
inc
xor
add
rolb
loope
arpl
lahf
cli
clc
repz
mov
mov
ja
mov
jmp
fwait
lods
leave
or
jmp
mull
sbb
jae
push
popa
rcll
out
inc
adc
cmpl
scas
mov
fdivrl
stc
nop
sub
push
leave
lret
clc
jnp
dec
mov
xor
inc
push
test
mov
enter
jns
jnp
dec
jb
inc
sbb
mov
stos
in
dec
jns
fnstcw
inc
jecxz
movsb
loope
sub
xchg
xchg
adc
add
xor
mov
or
and
test
cmp
out
clc
mov
in
jbe
jge
fs
pop
cmp
add
add
pop
adc
sub
xchg
ja
jnp
mov
fnsave
arpl
cmpsl
rol
jge
cmp
dec
sub
mov
or
lret
inc
cld
adc
in
sbb
inc
inc
push
sbb
push
imul
inc
jmp
push
xchg
lahf
sub
sti
in
lahf
push
arpl
arpl
inc
into
idivl
imul
pop
insb
add
lods
std
xchg
fcmovnbe
inc
push
push
movb
and
movsl
adc
dec
pop
rcr
jo
cmp
dec
mov
inc
xchg
in
out
cltd
inc
mov
jo
insb
add
inc
adc
gs
xchg
pop
mov
mov
in
es
insl
add
cli
daa
call
and
xchg
mov
mov
mov
inc
cmp
mov
push
mov
sti
sbb
fsubs
cmp
mov
lret
mov
xchg
xor
dec
or
jne
sbb
jae
mov
lcall
lods
pop
and
or
into
jo
cpuid
out
mov
imul
mov
xor
jle
adc
mov
sarl
inc
push
mov
mov
mov
pop
cmp
movsb
lock
xchg
mov
idivl
icebp
stos
jbe
cmp
icebp
mov
test
pop
int
fwait
or
mov
adc
sub
add
mov
jbe
dec
das
js
lcall
icebp
xor
jge
add
rorb
jbe
xchg
jne
cmpsl
jbe,pt
xchg
stos
out
add
sub
dec
movsb
ficompl
mov
arpl
stc
mov
std
xor
dec
mov
icebp
adc
xchg
jbe
test
adc
xchg
stos
mov
mov
mov
clc
dec
jl
mov
jge,pn
test
je
dec
mov
jbe
rcrl
and
mov
adc
cmp
aas
mov
mov
test
sub
dec
loopne
jp
adc
jo
ret
or
jmp
inc
xor
fldt
test
dec
ret
lods
dec
pop
call
in
inc
push
in
fs
adc
xchg
jbe
cmpsl
mov
fsubrs
fs
imul
imul
xor
sub
mov
xchg
das
mov
sbb
push
inc
or
sub
fucomp
orb
sahf
sub
mov
cs
lret
cmpsb
jb
pop
inc
pop
scas
xor
js
mov
mov
jmp
aas
fsts
mov
out
std
aam
or
js
fsubrs
lret
sub
sahf
pop
sub
sbb
mov
add
sub
in
pop
call
dec
jo
adc
out
outsb
loope
mov
aas
jno
mov
jl
test
std
int3
jg
mov
fisubrs
mov
imul
popa
fnstenv
adc
dec
jbe
xchg
pop
push
jae
sbb
shlb
adc
or
sti
pop
clc
es
add
les
mov
push
das
enter
mov
sub
cld
daa
add
out
mov
pop
mov
cltd
xor
xlat
aas
jnp
adc
or
pop
imul
mov
cmpsl
ds
in
lods
daa
mov
jns
insl
add
mov
sti
fucomp
es
stos
add
mov
stos
loope
xchg
jg
es
mov
pop
inc
mov
xchg
cmp
pop
stos
cmp
fmull
rorb
cwtl
sub
leave
fldcw
mov
clc
and
rol
fs
pushf
daa
arpl
jno
leave
enter
loopne
sti
mov
or
out
and
mov
sbb
lods
stc
test
adc
or
icebp
addl
jp
aad
ja
cld
pop
dec
pop
jae
lret
outsb
dec
inc
das
push
add
gs
ficoms
mov
cld
dec
lock
cmp
inc
arpl
inc
xchg
shrb
js
mov
mov
jp
aas
icebp
and
add
imul
lahf
cmp
repnz
das
out
outsl
sbb
push
or
shll
add
push
sahf
pop
sahf
or
pop
clc
and
fldt
outsl
mov
rorb
movsl
in
mov
pushf
sbb
mov
pop
xor
out
enter
pop
push
repnz
enter
sbb
mov
fs
fnsave
pop
daa
sbb
cmp
mov
cs
add
push
leave
sbb
cmp
add
lock
ret
mov
xlat
add
pop
pushf
movsl
cmpsl
es
xchg
sub
mov
or
mov
inc
push
sub
jmp
mov
mov
mov
jp
movsb
pop
pop
sbb
fwait
sbb
mov
sbb
sbb
sub
leave
adc
shr
jmp
nop
mov
push
and
inc
add
cltd
mov
adc
jae
adc
sti
inc
loope
sub
pop
aam
rorl
call
push
push
addr16
and
xor
inc
adc
mov
or
dec
and
cmp
das
enter
xchg
mov
pop
or
lahf
mov
cmpsb
lock
push
add
fadds
and
and
jb
dec
xchg
cltd
test
mov
push
mov
mov
jno
xchg
or
lret
adc
jmp
mov
out
add
call
mov
loopne
fcomp
test
push
enter
sbb
pop
mov
pushf
aad
inc
xorl
xchg
addr16
mov
fstps
filds
sub
pop
pop
cmpb
rcrb
into
aad
mov
push
adcl
rclb
sub
sbb
das
aaa
cmp
or
sbb
insl
in
inc
loop
fmull
mov
mov
cmp
mov
gs
add
xlat
xchg
pop
addr16
andl
sub
sub
sbb
add
jecxz
icebp
insb
xchg
mov
add
mov
repnz
adc
dec
out
sub
das
fneni(8087
in
sub
cmpsb
xchg
dec
or
or
inc
repz
test
mov
xchg
jns
mov
lcall
push
jns
negb
sti
cmp
loope
xor
pop
or
dec
pop
add
sub
inc
mov
inc
pop
jne
nop
mov
xchg
in
push
and
mov
pop
aaa
roll
push
nop
stos
mov
shrb
mov
push
insl
pop
mov
sbb
mov
sbb
shrl
addr16
mov
leave
cs
dec
pushf
into
sbb
in
ds
push
sub
jno
repz
std
testl
xchg
pop
cld
dec
cmp
cwtl
sub
pusha
in
mov
data16
stos
jae
es
test
push
add
and
push
sub
and
mov
xor
es
cli
lea
pop
lods
xor
ss
mov
cmp
imul
enter
push
and
lret
pop
mov
adc
aam
xor
adc
minps
cld
or
fstl
mov
adc
ss
push
ljmp
lock
pop
xchg
cmpsl
jo
sbb
repnz
fdivl
aam
adc
aad
jecxz
fdivr
in
in
cwtl
and
xchg
add
nop
movsb
and
fwait
or
inc
push
and
adc
ljmp
das
test
mov
mov
cmp
and
iret
pop
pop
cmp
imul
adc
dec
fisttps
test
pop
cs
addl
push
cmp
sahf
inc
repnz
adc
movsl
loopne
cmc
repnz
loope,pt
cwtl
jns
into
sub
in
or
call
mov
sub
ret
sarl
inc
ret
sub
cli
mov
adcb
sub
faddl
xchg
lahf
mov
mov
lea
aaa
adc
call
int3
mov
dec
cltd
popa
loopne
cmpb
inc
pop
movsb
pop
xlat
rorb
or
clc
in
or
jo
add
pushf
push
cmp
xor
lea
inc
fiaddl
bnd
sbb
gs
push
lock
fs
pop
loope
cmp
loopne
ret
inc
loopne
std
add
adc
pop
dec
lret
in
jg
mov
mov
push
sbb
int
insl
aaa
mov
rclb
incb
pop
scas
adc
mov
int
sahf
cwtl
push
push
mov
enter
lret
and
stos
das
pusha
xor
inc
push
mov
cwtl
outsl
cli
xchg
enter
neg
int
pop
aas
adc
lock
bound
mov
bound
loopne
sub
test
mov
cmpsb
dec
pop
fsub
data16
push
pop
call
fnsave
xor
pop
inc
sbb
fsub
flds
jp
xor
fmul
aam
jmp
jae
and
xchg
push
push
lahf
imul
fs
inc
nop
push
sbb
ds
lahf
pop
push
mov
jg
les
mov
adc
push
hlt
mov
cmp
ja
pop
pop
inc
and
out
sarl
fnstenv
mov
pushf
nop
ljmp
addr16
sbb
lods
fsubs
mov
push
or
inc
mov
std
lret
outsl
lret
sub
popf
push
jne
push
sti
mov
movsb
addr16
or
jae
jno
xchg
mov
test
mov
arpl
lret
pop
push
inc
bound
xor
mov
jbe
add
xor
push
mov
ud1
adc
sahf
ljmp
pushf
dec
dec
aam
std
and
sahf
xchg
ret
xchg
fnsave
loope
lds
sbb
and
mov
test
and
std
mov
ret
scas
jge
jge
bswap
bound
sarb
repnz
jbe
in
pop
dec
fwait
ud0
loopne
jne
sbb
dec
arpl
push
sub
ret
dec
addl
push
mov
imul
pop
je
movsl
repnz
mov
jmp
mov
and
and
sbb
sbb
aad
rclb
mov
lahf
subb
push
ror
subb
fimull
jmp
arpl
pusha
in
adc
out
mov
sbb
push
es
cmpsl
jge
movsb
movsb
xlat
aaa
jg,pt
sbb
aad
xchg
shr
es
daa
push
xchg
cmp
jno
movsl
mov
lahf
mov
mov
out
jp
add
or
jle
dec
jo
push
jo
dec
dec
sbb
lods
enter
sub
xor
dec
mov
out
xchg
test
call
test
ljmp
add
sahf
sbb
insl
mov
in
js
leave
mov
int
inc
lea
adc
xor
jmp
jno
fs
js
add
dec
sbb
ffree
orb
jg
mov
push
scas
fistl
or
and
cmp
jae
mov
xchg
in
fidivs
jo
inc
inc
jae
or
dec
mov
or
pop
shlb
pop
mov
xor
js
inc
arpl
fsubs
fwait
pop
scas
add
lock
adc
data16
inc
cmpsl
xlat
loopne
mov
jmp
in
call
push
sub
mov
int
mov
mov
imul
cmpsl
mov
sub
mov
cmc
or
dec
add
movsb
jl
pop
fcomi
inc
mov
out
lea
aas
ds
sbb
daa
into
int
adc
mov
sbb
cltd
test
mov
js
inc
xchg
add
sub
sbb
out
dec
ja
xor
push
pop
mov
rol
cwtl
mov
mov
jno
sub
repnz
dec
dec
add
fs
into
adc
or
pop
xorl
xor
popa
leave
sub
movsb
data16
lds
mov
sub
jecxz
pop
sub
sub
in
insl
pop
out
imul
in
or
dec
cs
jbe
clc
test
fisubs
nop
hlt
xor
lretw
lcall
sbb
imul
mov
gs
dec
and
or
ss
stos
inc
or
cmp
pop
add
push
add
cli
xchg
pop
and
arpl
jae
bnd
aas
outsb
and
pop
sub
xor
push
fadds
and
fistps
pop
xchg
jno
xor
lock
xchg
adc
push
xchg
inc
mov
mov
fsts
mov
inc
inc
add
mov
orl
insb
xor
lods
xchg
jl
mov
mov
test
rorl
jae
int
scas
xchg
adc
movsl
sbbl
jbe
push
add
or
arpl
lock
cld
daa
icebp
push
sbb
dec
fbstp
fwait
mov
dec
call
jl
iret
xchg
sbb
lret
mov
fs
add
push
clc
or
mov
mov
push
add
aad
outsl
lods
mov
mov
test
cmpsl
insb
and
xchg
cmp
test
mov
rorl
jbe
fnstenv
add
dec
push
rol
test
roll
dec
mov
cli
addb
into
stos
xchg
inc
or
jge
or
jl
ss
mov
clc
add
jno
or
inc
stos
push
lret
jbe
sbb
mov
sbb
xchg
ret
lds
jge
sub
scas
test
add
or
imul
aam
mov
movsb
in
inc
fs
add
fsubl
lock
bound
aad
xchg
scas
rolb
and
push
imulb
mov
mov
add
ja
js
lods
xlat
fcoml
jns
aas
add
dec
outsb
dec
sub
in
outsl
jecxz
sbb
mov
xchg
in
xchg
add
pusha
cmp
mov
sub
inc
jnp
rcrl
push
dec
in
data16
jg
ret
mov
iret
lods
sti
pusha
jg
je
ja
push
out
xchg
cmp
pop
pop
shll
jle
push
mov
mov
in
jbe
or
jle
lods
stos
xlat
test
popa
icebp
mov
cmp
imul
ss
insl
jb
sub
pop
lods
fmull
lcall
push
loopne
iret
lcall
dec
xor
dec
jecxz
out
ds
pop
icebp
push
mov
add
mov
pusha
inc
push
mov
dec
fisubl
sti
stc
mov
add
arpl
sti
in
and
outsl
pop
dec
or
in
fidivrs
adc
and
lcall
data16
fistl
fwait
xor
ficompl
jmp
mov
sub
mov
std
cmp
pop
inc
cli
pop
jb
and
cmp
ss
out
in
adc
xchg
repnz
sarb
xor
ret
dec
pop
add
push
pushf
dec
cltd
mov
dec
bnd
mov
cmp
mov
fdivs
or
mov
pop
lds
push
lahf
or
sbb
nop
mov
sbb
outsb
jmp
pop
stc
cmp
jmp
mov
cwtl
jecxz
cld
xchg
lds
loopne
out
lahf
les
andb
sarb
ficoms
sbb
gs
and
arpl
sbbl
adc
cmp
sbb
ret
leave
stos
xor
xchg
rcr
out
push
sbb
sbb
adc
call
cmp
push
cmp
cmpsl
jbe,pt
bound
in
push
cmp
push
or
cltd
sub
ret
xor
mov
lods
mov
cmpsb
mov
repz
xchg
leave
inc
jp
ja
movsl
popl
jno
out
push
leave
fcompl
je
imul
jne
push
dec
and
loop
xchg
cld
cmp
sbb
xlat
pop
mov
mov
loop
mov
loope
imul
or
scas
and
stc
call
jo
jne
pop
push
lea
push
lahf
cld
and
shll
pop
inc
mov
inc
and
das
in
push
xlat
repz
inc
mov
jbe
mov
aad
jle
mov
mov
cmp
jecxz
mov
mov
sbb
jno
clc
pop
push
insl
cmp
out
dec
mov
or
xor
push
mov
jb
xlat
pop
xor
dec
jnp
aas
in
lcall
xchg
mov
popa
or
mov
xor
je
in
xor
inc
aas
mov
adc
insl
sbb
push
aas
add
cmp
mov
clc
dec
and
push
and
pop
add
jmp
mov
mov
clc
and
jl
filds
add
push
xchg
loopne
xor
dec
and
das
push
out
mov
cmp
inc
int3
jo
movsb
rcrl
mov
and
lea
sub
mov
jl
pop
xor
or
or
daa
addr16
sbb
in
mov
inc
es
scas
xor
adcb
je
out
jg
and
mov
xchg
sub
xchg
pop
adc
push
rcrb
cli
call
cmc
add
cmp
incb
in
push
pop
fcomps
int
mov
pop
inc
gs
int3
les
into
mov
lret
aas
imul
pop
repz
sub
fiadds
add
lcall
jbe
aad
ljmp
fcoml
jns
mov
jns
idivl
push
mov
cmp
loop
dec
loopne
sarl
jecxz
mov
dec
sarl
add
pop
dec
and
out
movsb
push
xor
in
cwtl
xor
sub
push
mov
stos
mov
int
scas
and
loope
outsl
jnp
aad
xchg
lret
sbbl
sbb
mov
push
push
dec
push
in
pushf
jecxz
icebp
pop
or
xchg
adc
popf
fs
push
and
dec
fs
fildl
sbb
insl
xchg
stos
test
arpl
pop
and
adc
andb
sti
test
push
enter
mov
lret
sbb
pop
fisubrs
mov
scas
pop
push
mov
fldl
mov
imul
xor
and
repnz
push
imul
stc
mov
jae
notb
clc
jb
xor
sahf
xchg
adc
xchg
add
jecxz
mov
rcll
loope
mov
movsl
pushf
or
push
fwait
adc
lods
cmp
cmpsb
jmp
push
mov
fidivl
pop
adc
dec
xorl
adc
xchg
popa
loopne
cmp
inc
add
xorb
into
movsl
lods
mov
pop
pop
dec
dec
sbb
cmp
mov
xlat
adc
sbb
pushf
out
dec
aaa
mov
cmp
dec
or
cltd
xchg
push
out
mov
xchg
jge
push
xchg
ss
push
clc
test
test
cmc
push
push
js
mov
incl
mov
pop
repnz
aad
fistpl
lds
mov
lock
int
mov
pop
jecxz
scas
shrl
jl
andb
or
lret
or
in
bound
jecxz
xchg
pop
inc
mov
in
dec
or
mov
bound
mov
ret
subl
push
fdivl
aam
in
xlat
jle
adc
add
into
movsl
dec
cwtl
enter
pop
das
push
jp
pop
and
loop
push
pop
add
test
test
cmp
cmpsl
adc
sahf
clc
fwait
xor
mov
jns
or
test
and
or
xor
lahf
das
nop
in
pop
call
repnz
outsl
rclb
cmpsb
mov
aad
jmp
out
aaa
jae
mov
cs
nop
icebp
cld
inc
pop
push
adc
cmp
cmp
addr16
aas
mov
ljmp
add
cld
jp
mov
jmp
ljmp
xlat
ret
dec
xor
mov
sub
mov
int
ds
lds
rcrl
xchg
ss
lods
push
icebp
push
cld
lods
adc
insl
sub
xor
cmp
cwtl
xor
aas
mov
dec
je
lods
popa
out
and
sub
pop
scas
cmp
or
push
imul
shl
aaa
mov
enter
arpl
cld
cmpsl
xor
aaa
mov
inc
mov
movsl
jecxz
inc
adc
fbld
aam
sbb
push
sub
or
mov
xchg
popa
push
movsb
inc
push
and
adc
shll
aaa
aad
repz
data16
dec
adc
arpl
mov
push
xlat
jle
or
sahf
xor
repz
lret
ljmp
jp
push
push
loop
cwtl
push
push
pop
adc
gs
pop
les
xor
push
inc
push
jnp
cmp
fbld
push
push
jl
or
cld
lahf
cmp
pop
cmp
sbb
add
or
jmp
lods
xchg
rolb
test
sbbb
fidivs
mov
mov
js
or
push
lcall
lock
pusha
adc
int3
inc
push
rclb
push
xchg
xor
orb
cmc
fcmovnb
scas
enter
xlat
mov
dec
add
pop
repnz
shr
repnz
addr16
out
leave
push
adc
add
xchg
jg
aad
sti
push
mov
and
clc
xor
mov
jmp
sets
mov
mov
icebp
cli
shrb
jae
pop
or
testb
add
add
jnp
rorb
adc
outsb
sbb
add
loopne
inc
or
mov
xor
inc
mov
enter
sub
fstps
fldl
inc
out
mov
je
into
arpl
jmp
inc
fldenv
enter
addl
push
pushf
ljmp
aam
push
leave
arpl
or
mov
mov
fs
add
mov
xorl
adc
shlb
leave
imul
inc
mov
in
jg
xor
jbe
jle
loopne
mov
push
and
mov
add
outsl
lcall
sbb
sahf
stos
cmpsl
mov
jl
in
mov
in
adc
or
aas
xchg
cmpb
xlat
scas
push
rol
mov
xchg
cld
jg
push
adc
clc
add
pop
stc
sbb
sti
jne
icebp
mov
sarb
pop
imul
jg
mov
jge
pop
jle
movsl
shll
add
xchg
mov
mull
outsb
and
jns
popf
data16
aaa
shll
pusha
cmp
testb
jbe
stos
fiadds
iret
mov
aad
sub
pop
aaa
inc
arpl
subl
std
ljmp
int3
sti
jnp
rcrl
popf
sub
in
sub
mov
and
xor
xor
jmp
inc
divb
dec
cmp
xchg
adc
lcall
sub
xchg
inc
loop
aad
xchg
add
and
jbe
test
and
notb
mov
aam
xchg
push
scas
xchg
scas
je
dec
push
xchg
pop
out
or
cmpsl
jbe
sahf
mov
fsubrl
js
sbbb
dec
movl
int3
jg
fstp
mov
jae
sbb
mov
push
fdivs
out
ja
leave
push
test
cmpsl
cmpsb
cli
pushf
fldt
mov
jno
cmp
push
sbb
dec
les
cltd
cli
mov
mov
in
pop
insl
ss
push
js
cltd
pop
push
adc
sbb
or
inc
sbb
stos
mov
jp
scas
ss
fwait
jmp
stos
xchg
xchg
hlt
data16
mov
cwtl
or
aad
mov
stos
fiadds
push
jecxz
pop
dec
out
add
jo
and
jns
mov
or
mov
or
cli
mov
roll
icebp
push
mov
dec
add
add
add
and
adc
inc
leave
jmp
stos
addr16
ds
xor
sub
flds
adc
mov
dec
stos
jg
daa
mov
and
sar
xor
test
ret
and
aas
push
movsb
scas
inc
jne
shr
popf
xor
mov
lret
jo
jge
lods
out
cmpsl
sub
inc
cmp
sti
xchg
cmp
cmpsl
pop
in
cmp
je
jecxz
xchg
ds
add
add
jae
inc
movsl
pop
pop
lds
jp
call
xor
scas
decb
roll
adc
es
out
in
lcall
stos
sub
incb
pop
aam
jne
lcall
jle
cmp
or
or
pushf
xchg
nopl
jb
inc
jmp
xchg
addr16
cwtl
pop
inc
nop
adcl
lods
xor
mov
xor
lcall
imul
movsb
repz
cmp
sub
sahf
xchg
dec
in
ja
push
mov
data16
xchg
jle
shll
ret
in
mov
xor
fidivrl
int
daa
jg
add
push
push
push
and
mov
adc
add
aam
lds
xor
ja
jecxz
add
bound
cltd
xchg
pop
add
cmp
addb
out
stos
repz
pop
je
mov
shlb
jnp
jg
inc
mov
xorl
sub
ret
fs
push
xchg
jecxz
mov
add
rorl
push
loope
stc
adc
mov
icebp
lcall
popa
mov
jns
push
std
test
xor
sub
jbe
dec
test
dec
fbld
xor
fwait
add
insl
add
nop
nop
push
jae
ret
ss
jmp
mov
cltd
xlat
icebp
cli
sub
mov
fmuls
and
imul
sarl
loop
sbb
in
into
jmp
mov
inc
add
cmp
xchg
imul
js
dec
dec
out
dec
in
sti
and
es
sub
mov
dec
incl
pusha
ljmp
mov
cmpsl
inc
cmp
jns
enter
fsubrs
lret
das
adc
pop
int3
faddp
jl
jl
push
xchg
out
sub
jmp
hlt
in
out
outsb
and
out
lods
cmp
fisubrs
sbb
testl
pop
push
lahf
shr
adc
mov
mov
mov
imul
mov
xchg
hlt
sub
cmp
movb
rcrb
icebp
jne
push
mov
pushf
cmp
mov
out
push
inc
cmc
shll
push
cmp
inc
movsb
xchg
sbb
les
sub
push
in
jg
dec
and
fwait
repnz
fiadds
scas
sbb
sub
pop
movsb
pop
adc
dec
xchg
push
pop
cmp
dec
pop
loopne
dec
dec
jnp
mov
repz
lahf
mov
xor
pop
ljmp
pop
cmp
adc
fstpt
test
dec
jecxz
jle
sbb
in
test
test
hlt
mov
cmpsl
mov
push
fwait
jp
arpl
adcl
jge
sahf
push
insl
rorb
jae
xor
outsl
adc
jns
stc
inc
sbb
scas
in
add
inc
movl
aam
andl
fimuls
daa
inc
rcll
inc
pop
xchg
sub
pusha
push
lock
popa
xor
gs
pop
mov
dec
mov
ret
lds
pop
stos
pop
jns
adc
jl
cmp
sub
inc
lds
jle
fnstenv
shl
cwtl
xchg
and
fnstenv
push
mov
push
xorl
fisttps
mov
mov
in
sbb
mov
stos
jg
pusha
cmp
repz
rolb
data16
lods
ret
idivb
xor
rorb
adc
xchg
and
sahf
cmc
push
incl
call
push
lret
addb
shll
adc
xchg
pop
add
inc
pop
das
decl
dec
push
pop
insl
add
addr16
es
insb
int
sbb
rorb
shll
movsl
mov
imul
es
add
push
mov
mov
shrd
mov
cltd
push
lods
push
pop
push
sub
mov
cmp
fadd
pop
mov
ret
cmp
mov
mov
mov
jl
fisubrl
sbb
cmp
das
adc
mov
cmc
repz
inc
rol
movsb
in
cmpsb
cltd
std
mov
dec
push
and
push
mov
aad
pop
cwtl
xor
mov
out
mov
and
movsb
shrl
shl
sti
pop
movsl
call
add
fistpll
mov
scas
mov
adc
inc
cmp
cmp
xlat
fucomp
dec
out
shld
push
insb
push
outsl
or
in
mov
jmp
mov
mov
and
pop
push
popa
adc
adc
inc
test
ljmp
mov
scas
mov
dec
lahf
push
xchg
lahf
inc
mov
addb
inc
xor
ljmp
pop
sbb
lahf
mov
adc
and
mov
sub
popa
add
dec
sub
dec
or
lret
xlat
nop
jbe
and
cltd
mov
pop
add
in
xchg
movsl
mov
leave
mov
add
scas
jge
cmpsb
add
and
testb
mov
jnp
cmp
arpl
mov
adc
xor
pop
adc
adc
test
shl
cmp
adc
pushf
pop
aaa
mov
cld
fcomps
mov
push
out
or
mov
out
push
aas
enter
test
or
push
push
mov
shrb
mov
loope
inc
xchg
inc
loop
into
adc
jbe
addr16
fcoml
adcb
sub
test
or
addr16
shrb
sbb
jbe
xchg
xor
dec
push
cmp
mov
in
pop
xchg
test
call
frstor
pushf
loop
int
orl
clts
dec
mov
dec
pop
lcall
xor
xchg
jmp
fwait
cmc
cmp
es
andl
outsb
cmpsb
shl
cmpsb
cli
or
sbb
pop
adc
test
scas
jl
pop
lea
test
cmpsl
xchg
call
xlat
into
jmp
and
dec
pop
push
aas
mov
lods
jns
rorb
scas
jg
mov
pop
out
cmpb
jge
mov
mov
sbb
iret
dec
hlt
inc
adc
fsubs
cmpsb
sbb
sti
movsl
ja
in
sbb
gs
cwtl
pop
fmulp
sub
pushl
pop
ljmp
push
push
xchg
inc
pop
xor
or
push
inc
data16
cli
push
stos
arpl
and
mov
push
jo
add
mov
movsl
cwtl
mov
jle
pushf
sub
and
enter
sub
jp
xor
jmp
and
in
call
aad
scas
mov
iret
fldcw
mov
out
insl
inc
sub
inc
push
jmp
cld
fdiv
dec
cs
cmp
rorb
mov
dec
inc
stos
push
cld
jle
xchg
push
xchg
movsb
pop
pop
mov
xor
insb
sbb
adc
mov
fwait
fwait
pop
imul
mov
jnp
scas
inc
cmp
push
dec
frstor
pop
sub
jmp
loope
repz
aad
pop
adc
pop
in
mov
out
ret
sbb
or
daa
ds
mov
popf
repz
ds
push
insb
test
cmpsb
push
rcrl
xchg
or
jmp
pop
pop
push
push
mov
shrb
jmp
mov
jno
mov
jecxz
xchg
call
jnp
aas
out
dec
mov
xor
ljmp
test
scas
adc
or
jnp
mov
inc
movsb
leave
or
mov
sarb
sub
int
call
outsl
icebp
call
or
and
or
ds
mov
popa
add
aas
imul
roll
push
dec
mov
stc
push
xor
test
push
and
dec
test
xor
xor
xchg
jg
xor
pop
dec
loop
cmp
lock
push
cltd
xor
lea
mov
divl
and
maskmovq
testl
mov
mov
andb
shll
outsl
fsubl
subl
pop
jmp
or
in
testb
dec
mov
stos
inc
mov
xchg
sub
lret
jnp
stc
pushf
xchg
sbb
lret
jl
jmp
leave
xchg
mov
jmp
sub
scas
movsl
mov
adc
mov
and
movsb
inc
stos
int
sub
in
cmpsl
mov
inc
inc
add
stos
test
jmp
mov
dec
dec
ficompl
mov
outsl
or
mov
das
ret
inc
call
test
out
add
rol
in
sahf
in
popl
push
ds
das
addr16
jle
push
vpaddsb
sbb
dec
mov
push
shr
stos
pop
fsubr
cmp
push
sub
xor
pop
jnp
mov
notl
inc
mov
lahf
outsb
jmp
decl
pop
push
inc
outsb
add
aam
and
cltd
psubusw
mov
rcll
sbb
cmpsb
fnstenv
jbe
cmp
xchg
jns
fs
ljmp
psubd
pop
jg
pop
adc
nop
scas
fimull
ljmp
arpl
adc
in
rcr
jo
icebp
adc
enter
test
pcmpgtb
xchg
fbld
pop
mov
shl
push
and
test
jo,pt
enter
int3
lcall
sub
xor
lret
xchg
push
inc
fbld
shlb
dec
push
out
rcrb
jne
bound
mov
clc
sbb
ja
adc
out
cmpsl
fwait
or
loop
mov
gs
cmp
lcall
pop
mov
pop
test
mov
aad
add
add
bnd
mov
leave
fnstenv
test
xor
xor
xchg
bound
cmpsb
cmp
and
mov
mov
adc
mov
test
adc
mov
icebp
mov
mov
cltd
cmp
jns
mov
mov
aam
fcmovb
in
inc
mov
add
ds
fidivrl
push
or
push
sti
mov
shrb
into
gs
mov
js
in
jne
mov
insl
adc
mov
dec
movsb
loopne
enter
data16
xor
dec
mov
fiadds
icebp
aad
fsubs
and
bound
jg
jge
lret
and
stc
lahf
test
fnstenv
cltd
mov
nop
push
pusha
testl
xchg
imul
lock
push
xor
mov
push
loope
dec
loope
add
jne
adc
lock
fbstp
adc
mov
sub
lods
lcall
sti
mov
sub
mov
insl
subl
sahf
movsb
hlt
into
sub
scas
mov
in
into
adc
loopne
push
dec
pop
test
bound
iret
xchg
xor
or
loope
cmpsl
int3
iret
and
or
mov
cmpsw
xor
xlat
popl
jae
arpl
scas
mov
clc
inc
or
das
les
xor
fidivrs
xor
int
mov
cs
mov
jb
cmp
mov
clc
fnsave
popf
test
inc
push
nop
daa
subb
gs
xchg
orl
add
jnp
mov
outsb
stos
je
xor
dec
xor
xor
int
mov
push
sbb
das
repz
bound
mov
cmp
cwtl
cmp
xlat
inc
push
les
aaa
lcall
in
jns
shlb
popf
sub
das
idivl
imul
and
mov
les
push
mov
in
adc
es
pop
pop
pop
ljmp
fwait
ret
icebp
iret
imul
xchg
scas
popf
mov
leave
jne
das
cwtl
stos
pop
mov
test
cmpsl
cmpb
fisttpl
xor
out
and
pop
mov
popa
faddl
sub
pop
pop
lret
push
ljmp
jl
sbbl
jge
inc
pop
xchg
mov
pushf
jecxz
rcl
das
fsubr
orl
outsl
xchg
aas
pop
lahf
pop
outsb
cmp
push
jb
push
rolb
mov
xchg
cmpsl
loop
pusha
add
jp
nop
roll
cwtl
add
mov
pop
sub
and
dec
shl
cmp
mov
dec
add
xor
cmpsb
xchg
mov
aad
pop
pop
imul
inc
out
cmp
int3
xor
fwait
jne
fldl2t
ss
inc
in
ljmp
mov
out
std
push
xchg
lret
sbb
fidivrs
cltd
push
push
mov
data16
dec
adc
cwtl
aas
inc
pop
cmp
lret
aas
lds
jge
imul
and
stos
fwait
stos
imul
es
and
cmp
dec
push
in
cmp
aaa
mov
nop
out
cld
rcr
pop
cmp
dec
movsl
insl
shll
inc
cmp
cmp
inc
stos
mov
lret
dec
mov
cmp
ljmp
popf
lods
decl
stos
cld
jo
shll
adc
sub
ljmp
cmc
mov
inc
cld
adc
sti
xchg
das
adc
mov
adc
int3
pop
lret
sub
mov
fidivrl
fucomi
leave
add
jne
sub
icebp
inc
add
ljmp
xchg
into
sbb
xchg
pop
and
dec
jo
addr16
lcall
jmp
aaa
jbe
fwait
test
and
daa
push
call
add
pushf
in
lock
mov
out
mov
loopne
es
arpl
pop
std
gs
pop
mov
fdivrl
gs
scas
sbb
cmp
lods
sub
mov
inc
icebp
mov
sbb
mov
inc
dec
or
clc
or
test
daa
or
push
in
das
or
lods
inc
in
ja
fisubrl
dec
test
jns
mov
nop
imul
mov
jo
ja
out
push
imul
addr16
fimuls
mov
mov
popf
jp
into
iret
in
les
jle
and
test
in
loope
jge
pop
dec
mov
xor
loop
cs
inc
xorl
test
push
push
pop
iret
iret
data16
imul
pusha
pop
or
mov
lods
stos
iret
sbbb
fpatan
int3
dec
inc
and
in
cmp
lahf
xor
rorb
lcall
ja
out
das
mov
popa
sbb
mov
ficomps
subl
adc
pop
inc
outsl
lea
xor
add
mov
fmull
mov
movsl
inc
es
incl
roll
es
mov
push
aaa
or
js
mov
leave
dec
push
jmp
dec
cmp
je
or
or
mov
mov
mov
sub
push
rcr
jbe
mov
frstor
sbb
mov
int
push
js
cmp
out
out
dec
inc
test
fidivs
clc
inc
fisubs
sub
pop
ds
outsl
daa
jl
daa
outsw
xchg
fnstcw
push
nop
pop
bnd
insb
jle
jns
dec
popf
dec
sbb
outsl
adc
clc
into
jnp
xor
js
je
pop
cmpsb
lods
sbb
mov
fists
shld
sbb
dec
xor
out
xor
adcb
sbb
stos
mov
lea
jnp
call
jg
pop
movsb
cmp
jbe
sub
and
pop
push
test
push
add
loopne
jo
es
ret
js
orb
push
pop
cs
js
test
popa
xchg
popa
mov
gs
je
fnsave
shl
mov
xor
clc
or
out
mov
sub
ljmp
mov
movsl
mov
adc
addr16
dec
fbld
or
xchg
jle
cwtl
das
push
push
adc
cmpsb
jnp
pop
pop
mov
sub
xor
inc
dec
jbe
in
sub
mov
mov
dec
mov
ficompl
xchg
inc
dec
mov
xlat
shrl
mov
sarl
xor
mov
or
ds
jp
ret
ljmp
jno
mov
jne
mov
mov
aaa
add
pop
sahf
xchg
in
dec
push
mov
dec
mov
lods
dec
decl
inc
push
mov
rcrl
jl
adc
jle
es
lahf
pop
mov
fs
and
cmp
sbb
sub
mov
ds
inc
xor
dec
cmp
enter
sub
fnsave
rclb
jns
add
sbb
cli
ljmp
sti
jg
stc
and
inc
inc
jnp
je
add
fiadds
aaa
int
push
mov
mov
lock
aam
push
cmc
js
mov
fistpl
or
ja
add
xchg
xor
dec
sbb
inc
inc
js
jbe
pop
adc
out
pop
xchg
pop
mov
cmp
movsl
fisubs
push
scas
outsb
sbb
rcr
je
or
xlat
imul
out
dec
lsl
leavew
and
mov
jo
jle
or
add
mov
in
out
rcl
and
cmp
mov
lods
push
mov
mov
push
dec
stos
inc
cmc
rol
cmc
push
lret
lahf
or
or
sub
popf
sbb
mov
movd
mov
cmp
jp
mov
repz
add
ljmp
pop
nopl
cmp
inc
xchg
or
inc
fidivl
clc
cmpsl
out
pop
bound
addr16
ja
repz
xchg
scas
cs
jecxz
sbb
sub
and
out
jl
ss
inc
arpl
fildll
xchg
push
call
in
sbb
cmpsb
in
jnp
inc
mov
addl
pop
mov
jecxz
pop
adc
sarl
or
shl
pop
sbb
adc
iret
cs
cmpsb
out
xlat
add
jmp
shll
enter
ret
hlt
je
pop
in
mov
cltd
in
stc
mov
push
pusha
push
mov
or
sbb
mov
int3
ss
push
pop
ret
or
ljmp
pop
cwtl
lock
pop
sbb
xchg
or
xor
mov
mov
test
pop
mov
shlb
out
inc
iret
outsb
mov
jo
or
cmp
mov
movsb
mov
daa
adc
xchg
push
cmc
push
mov
pop
and
cwtl
popf
or
in
inc
push
outsl
jo
jo
fwait
cld
xor
out
fs
mov
xchg
jns
push
in
push
pop
xchg
aad
mov
pop
out
or
xchg
andl
mov
mov
and
pushf
and
data16
jecxz
mov
and
push
pop
imul
les
sbb
aas
jmp
pop
cmp
punpcklwd
dec
pushf
pusha
sub
popf
shrl
icebp
add
movsb
cmp
movsl
sub
lods
imulb
sti
push
pop
jg
jae
pushf
xor
leave
inc
jmp
jns
lods
xchg
ds
imul
pop
jmp
testb
shrl
shll
dec
lods
jg
mov
cmpl
jge
or
rorb
out
xchg
dec
cld
fdivs
pop
rolb
mov
loopne
es
mov
mov
xor
xor
mov
jle
test
scas
inc
mov
divb
sbb
outsl
icebp
notb
addr16
imulb
mov
rorl
jbe
scas
xor
adc
out
push
ficoms
xchg
jmp
outsb
mov
test
gs
rcr
jb
mov
push
stc
dec
xorb
dec
imul
in
xchg
cmp
mov
repnz
push
js
mov
xchg
add
out
push
repz
lods
pop
lcall
sbb
xchg
pusha
cwtl
push
bound
mul
mov
les
ss
in
movsb
lods
inc
ljmp
xor
aaa
push
sub
add
shll
inc
test
sub
negl
lods
sub
in
ljmp
push
xor
inc
scas
inc
idivl
xchg
push
subb
dec
and
rep
icebp
sti
mov
jmp
aaa
scas
les
xor
hlt
test
cmpsl
push
aaa
fwait
push
enter
das
daa
loop
into
icebp
dec
ja
nop
daa
in
inc
les
outsb
scas
jno
repnz
loop
gs
and
insl
loopne
shrl
adc
enter
in
xor
mov
jg
mov
loop
xchg
and
dec
or
jl
dec
jo
mov
push
push
scas
clc
mov
inc
or
xchg
ljmp
inc
into
xchg
sahf
adc
shlb
and
mov
loop
inc
add
add
cmp
daa
repz
or
inc
lods
inc
aas
push
adc
int3
lods
push
lcall
and
mulb
lcall
jbe
out
pop
in
jmp
adc
mov
push
aas
dec
aad
xor
out
das
xor
or
dec
shlb
pushf
loope
fsubl
cmc
sahf
inc
aam
lods
call
or
xor
or
std
mov
sbb
xor
mov
pusha
mov
push
cmp
cmp
in
lods
popf
mov
sbb
cltd
push
std
jp
jns
iret
iret
es
repz
test
mov
dec
adc
divb
outsl
arpl
cmp
aaa
movsl
in
lahf
rol
pop
mov
lods
mov
outsl
push
icebp
test
sahf
dec
mov
mov
pop
xchg
push
mov
sub
pop
cmp
xor
in
pop
cli
adc
mov
mov
test
repz
xchg
hlt
cmp
pop
repnz
sbb
push
aas
mov
jl
pop
out
mov
iret
cmp
outsl
xchg
cwtl
mov
cmpsb
in
xor
cmpsb
push
or
pop
or
mov
dec
mov
add
jno
std
cmp
dec
sub
push
push
out
mov
loopne
push
popf
sbbb
jecxz
mov
into
mov
xor
jae
cmp
cmpb
lcall
pop
adc
jecxz
shr
add
movsb
jle
xor
and
out
cld
dec
pop
sub
lret
sbb
pop
push
push
stos
xchg
dec
adc
lea
pmulhw
sbb
xlat
lods
push
pop
subb
inc
rclb
lcall
lahf
inc
pop
jae
loopne
sub
push
xor
mov
adc
adc
mov
rorb
test
cwtl
mov
inc
or
cmpsl
inc
int
jecxz
insl
in
dec
mov
dec
in
jg
add
sbb
in
dec
mov
jae
sbbl
push
cmp
or
cmpl
icebp
aam
sub
jno
arpl
icebp
cli
cmp
push
inc
mov
cmp
imul
mov
push
xchg
rcll
pusha
push
shrb
test
mov
shlb
insb
loope
mov
loop
jg
push
dec
adc
shrb
add
mov
call
push
mov
fbstp
sbb
inc
fldt
or
ljmp
ss
dec
sub
or
aad
add
or
scas
xchg
lods
adc
hlt
pop
mov
jmp
sbb
mov
ljmp
and
sbb
xor
pop
and
jo
mov
movsb
push
flds
or
scas
sbb
fists
mov
sub
loop
jmp
sbb
push
subl
xchg
mov
sub
add
add
xor
andl
cmpsb
add
call
or
inc
pop
sti
jbe
scas
mov
sbb
les
cmpsl
loope
clc
mov
mov
cmp
mov
pop
push
lcall
dec
push
fisttps
out
fldcw
jo
out
push
push
mov
lahf
mov
test
lret
pop
shrb
xchg
sahf
dec
mov
inc
les
mov
out
inc
addr16
mov
sub
push
sub
add
out
rcrb
cmp
mov
ret
push
cmp
jge
mov
push
jmp
pop
cmp
and
sub
mov
push
enter
dec
fnsave
or
sub
jnp
or
mov
lahf
fidivrs
fimuls
cmp
mov
xchg
adc
lds
imul
add
in
sbb
cmp
cli
or
jbe
es
xchg
add
test
jbe
mov
in
mov
call
sti
rclb
mov
push
and
test
jnp
dec
fnstcw
les
xlat
sub
cmp
xor
add
aam
jno
xor
mov
lds
xlat
pop
lods
jp
and
push
in
movsl
icebp
push
loop
mov
xchg
or
mov
dec
fwait
dec
test
ss
rcr
xor
push
lods
push
sub
sub
xor
sub
push
les
add
adc
fs
fbstp
bound
dec
loop
test
lods
cmpsb
lock
into
pop
aaa
cmp
imul
fildl
jg
out
arpl
pop
divb
add
sahf
sub
sti
xlat
int
jno
jno
loop
push
cmp
rcr
nop
xcrypt-cbc
cmpsl
shll
mov
in
jo
pop
cmp
rcrl
or
jg
scas
imul
push
push
mov
xchg
iret
je
in
mov
sub
ds
scas
push
cmp
jl
pop
mov
pop
inc
add
lds
cmp
jl
xorb
aas
cmc
mov
push
cmp
xor
fstl
push
xor
inc
fdivrp
addr16
push
xchg
gs
cmpsb
jb
sahf
aaa
jp
cmp
pop
adc
test
xor
ljmp
xchg
cmpsb
orb
pop
sarb
mov
aad
and
repnz
mov
lcall
das
mov
lods
cmpsb
cmp
mov
fistl
sarl
xor
outsl
jp
in
add
xor
stos
cmp
add
mov
mov
lods
or
das
add
or
mov
lods
addl
les
stc
fadds
jne
pushf
lret
fldl
mov
sbb
push
adc
jp
mov
xor
adc
jnp
xorl
mov
mov
arpl
lret
sbb
push
out
xor
push
lods
in
jne
sbb
pop
ficomps
lock
rorl
in
xchg
adc
fists
out
leave
mov
push
xchg
pop
addr16
mov
cs
xchg
cmpl
gs
fists
lret
icebp
daa
arpl
test
push
mov
dec
movsb
mov
in
mov
fpatan
mov
outsl
shrb
cltd
xor
outsb
js
adc
or
sub
xchg
inc
repz
mov
pop
push
jmp
adc
jmp
ret
mov
ret
packuswb
in
inc
ret
mov
pop
in
das
adc
xchg
jge
dec
cmpsl
push
mov
aad
mov
xchg
pop
inc
mov
mov
mov
and
sub
sahf
fsubl
nop
inc
pop
push
imul
cmc
sbb
rcl
or
or
insb
dec
cwtl
dec
dec
lret
popf
popf
vmptrst
and
add
xchg
cmp
mov
stos
shrb
push
fcmovnb
shlb
mov
arpl
out
test
jno
sub
in
cmp
loope
mov
jns
js
jmp
ss
push
insl
out
bound
push
or
aad
inc
mov
mov
cltd
and
jle
sub
and
jecxz
sahf
push
fwait
adc
mov
dec
lock
scas
or
call
cmp
sub
sbb
nop
aam
in
cmpsl
neg
add
cli
xchg
ss
repnz
mov
andb
push
jmp
pop
push
hlt
push
push
dec
xchg
mov
fldenv
push
ja
ret
adc
outsl
cmp
in
push
mov
vpsrlw
movsb
in
xchg
loop
mov
loop
push
fstps
or
or
cmp
and
mov
aam
ret
test
out
pop
fsubrl
andb
inc
mov
push
cli
fisttpll
sbb
sbb
addr16
xchg
xchg
sbb
lods
loope
daa
mov
insl
xor
popf
bound
and
das
pop
pop
ljmp
andb
rclb
out
test
loopne
cmp
aas
aad
mov
and
xor
bound
sti
inc
stos
stos
xchg
adcl
lods
subb
shll
cmp
in
stos
daa
sub
pop
pusha
stos
adc
dec
pop
std
fwait
mov
repz
pop
cmp
jecxz
jmp
add
adc
jne
shlb
addl
sbb
fucomp
bnd
loope
pop
mov
adc
movsl
loopne
rcl
mov
inc
pushf
or
push
nop
mov
notl
pusha
lret
into
pop
cmp
addb
inc
fstl
fimuls
stos
xchg
xorb
sub
leave
lret
cld
sahf
stos
out
cs
sbb
mov
pop
xor
dec
jo
pushf
sub
mov
lods
add
sub
rcll
and
movsl
cmp
dec
pushf
in
dec
push
jmp
and
sbb
and
sbb
sbb
faddl
cld
mov
sub
pop
call
jnp
cmp
shlb
leave
test
mov
je
rcrb
add
push
mov
lods
int3
repz
stc
xor
adcl
jns
mov
jns
shll
mov
xchg
nop
aaa
outsb
or
fistpl
cmpsb
test
divb
or
adc
push
lret
push
mov
out
xor
dec
das
scas
jg
mov
lcall
cld
mov
mov
push
sbb
add
ret
push
jae
outsl
pop
xchg
pop
out
in
mov
dec
add
leave
les
jb
imul
jge
mov
mov
dec
andl
sbb
negl
leave
add
jbe
jmp
xchg
cmp
out
outsb
insl
sub
push
pop
outsl
rclb
rcll
and
ljmp
pop
push
dec
scas
cmp
sbb
pop
lods
mov
ja
push
test
and
sti
out
mov
fs
daa
mov
pop
cld
clc
das
pop
popf
scas
adcb
sub
lret
iret
xor
cmpsl
cmc
pop
xchg
daa
or
ja
fs
pushf
sbb
adc
lods
mov
stos
sti
jge
sub
push
cmp
mov
and
xchg
sti
fcmovne
sub
jl
sub
cmc
xchg
or
mov
mov
in
in
repnz
pop
lcall
xlat
mov
jo
push
andl
mov
jle
outsb
xlat
out
aam
pop
xor
pop
cmp
test
ja
loop
xchg
cwtd
adc
out
cli
mov
mov
imul
or
dec
mov
jno
adc
xor
xchg
push
in
lds
lock
outsb
movsb
lret
loope
pop
sub
inc
jbe
jecxz
int3
push
shll
pop
inc
fidivs
inc
add
add
dec
cmp
shrl
xor
jbe
aaa
nop
addr16
ja
insl
mov
pop
cwtl
jl
add
sti
dec
mov
sub
dec
adc
fs
test
in
xchg
in
scas
jb
imul
mov
cmp
inc
sbb
mov
xor
mov
adc
push
pop
aam
and
mov
iret
cltd
hlt
inc
pop
jno
fwait
cmpsl
pop
es
sbb
std
pop
jmp
repnz
sub
int
xchg
push
jg
das
icebp
xchg
mov
jno
adc
and
ficoml
aaa
mov
xchg
fwait
inc
movsl
icebp
inc
mov
fsub
test
imul
out
adc
rdmsr
or
imul
out
xor
test
and
adcb
mov
nop
lret
cmp
gs
lods
push
inc
jns
or
mov
in
xor
push
test
nop
sahf
das
adc
mov
pop
inc
rol
arpl
add
mov
imul
mov
mov
rcll
or
xchg
adc
pop
xor
pop
pushf
jecxz
addr16
lds
push
xchg
fs
cltd
popf
or
mov
dec
mov
pop
mov
loope
cli
jno
ss
flds
mov
aam
cmpsl
shr
mov
cmpsl
xor
and
adc
in
clc
test
xlat
lcall
or
push
outsb
out
cmp
cmc
popf
jmp
imul
outsl
sub
mov
cmp
cmp
cwtl
or
aad
adc
out
or
scas
leave
stos
xlat
ret
nop
mov
add
add
shr
jg
cmpsl
adc
scas
out
jno
fs
aaa
arpl
nop
cmp
push
aam
int3
jg
mov
out
jne
sub
iret
push
jl
cmp
cmp
stc
xchg
xor
xor
xor
mov
addr16
dec
mov
xchg
or
push
popf
pusha
rorl
jo
push
mov
push
and
popa
cmp
cmp
and
add
mov
mov
ret
int3
inc
cli
mov
dec
push
cmpsb
pop
insl
jge
push
test
ret
jp
xchg
pop
xor
cmp
das
mov
test
xchg
popa
dec
mov
shrl
pusha
hlt
dec
divb
addb
lds
jnp
ret
xor
rcrl
subl
lea
cmp
insl
aas
fldl2e
push
or
cmp
cld
xchg
lret
mov
in
sbb
ficoms
xchg
call
mov
outsb
sub
mov
aas
mov
dec
or
test
mov
cmp
leave
int
fidivs
adc
sbb
test
inc
or
mov
imul
push
adc
js
lock
icebp
sahf
into
xlat
pop
lret
and
xlat
and
pop
xchg
mov
mov
jbe
mov
jge
ret
xlat
push
sub
jecxz
nop
stc
sbbl
data16
lds
pop
rcrb
pop
call
fisttps
and
and
lock
lds
imull
js
ds
pop
movsl
push
pop
fisubl
sub
cmc
mov
fldt
xor
xchg
and
sbb
mov
clc
adc
mov
add
sbb
cmp
add
dec
test
mov
rorl
inc
std
mov
dec
movsb
shrl
scas
jp
fwait
cmpsb
inc
imul
aam
xor
gs
fdivp
mov
ficoml
out
and
mov
jmp
or
enter
faddl
pushf
push
jbe
loopne
sti
jecxz
sbb
jp
int
mov
and
adc
jmp
mov
jmp
pusha
repz
clc
ds
lods
das
pushl
inc
and
adc
sahf
jbe
fucomp
xlat
scas
and
dec
jmp
mov
sub
mov
lods
mov
push
add
sahf
lea
dec
push
add
jle
mov
jmp
adc
stc
xor
inc
cli
jbe
jo
rcrl
add
or
out
ja
and
jo
std
enter
sbb
stos
testl
adc
mov
imul
insl
mov
sbb
or
jnp
push
dec
in
ds
add
cld
nop
and
in
stos
cmc
adc
loop
xchg
or
pop
test
jecxz
sub
shlb
in
cmpsl
rcrb
inc
bswap
and
js
or
pop
std
adc
or
pop
push
xlat
pusha
div
xchg
cli
mov
imul
xchg
push
insb
mov
mov
cmpsl
movsl
dec
mov
ret
loope
insb
xchg
mov
cmp
push
fiaddl
mov
mov
rcll
dec
inc
mov
addr16
cmp
popa
add
dec
pop
pop
dec
ss
fdivrl
push
sub
inc
popf
in
jle
push
pop
adc
lcall
mov
mov
cmpsb
cmp
adc
mov
mov
aad
jnp
cli
or
jno
xor
push
icebp
lahf
lock
mov
loop
lock
mov
test
xor
imul
sahf
and
jmp
adc
xchg
sbb
leave
shlb
xlat
xchg
repz
shl
pop
inc
mov
subb
push
fstpt
cmp
fwait
clc
xlat
imul
imul
leave
scas
aaa
sub
push
scas
or
test
or
xchg
repnz
cmp
pop
pop
adc
insl
inc
xchg
sub
stc
adc
test
cmp
test
ret
push
cmp
xchg
cli
stos
inc
sub
outsl
loop
push
icebp
xchg
call
adc
cwtl
addr16
popa
mov
jne
leave
lcall
sbb
lea
mov
mov
daa
or
adcl
jbe
ret
jmp
insb
outsb
and
mov
cmp
mov
push
in
xchg
iret
cmp
cmp
cmp
xor
cmc
push
sub
test
push
push
fsubrp
jns
adc
cld
dec
cmp
aas
imul
ja
out
add
mov
adc
and
and
inc
fs
adc
incl
lea
std
mov
adc
outsl
mov
sahf
xchg
in
decb
enter
imul
push
mov
mov
jge
sbbl
rclb
xor
inc
pop
add
pop
sbb
and
lret
int
out
std
xchg
mov
lods
test
xchg
jg
jae
lods
lods
test
mov
ljmp
scas
stos
das
fnstsw
jbe
push
leave
xorps
out
gs
mov
and
lods
lods
jne
pop
int
push
repnz
imul
adc
cmp
lret
popf
ret
jmp
shl
popf
push
mull
scas
ljmp
mov
xor
loop
imul
adc
cmp
ss
push
stos
test
add
or
ljmp
push
sub
out
outsb
shrb
dec
mov
loope
sbb
pusha
or
sub
mov
sub
xchg
inc
test
test
add
stos
out
call
imul
call
dec
xor
or
fistpll
jnp
repnz
adc
nop
cmp
pop
or
adc
xor
fbstp
cmpsl
jns
js
int
pop
fisubl
jmp
xor
cmp
sub
push
fstl
xor
mov
fst
sbb
aad
push
pop
adc
sbb
mov
out
inc
push
ljmp
jmp
mov
fwait
cmpsl
and
push
sub
jb
push
es
adc
sbb
jge
pop
lods
inc
xchg
gs
dec
imul
mov
fwait
test
incb
mov
xchg
cmp
loop
mov
dec
addr16
mov
inc
in
jne
push
add
xlat
jno
push
pop
loop
push
jne
push
sub
push
stos
sub
xlat
arpl
adc
fld
pop
cmc
mov
push
jl,pt
mov
xlat
push
fmulp
sbb
inc
cmpsl
in
xor
ror
adc
add
adc
add
loopne
lret
or
sbb
sbb
rcrb
cmp
sub
stos
aaa
or
shlb
cmp
lahf
add
scas
pop
loope
scas
inc
mov
int3
pop
xlat
fdivs
pop
sub
fstpt
in
adc
xchg
push
out
push
sbb
cmc
cmp
cmp
or
jnp
push
rclb
stos
mov
xchg
pop
loop
push
cmp
lahf
lahf
cmp
jp
movsl
cmpsb
testb
pop
inc
call
adc
lock
jns
adc
inc
cmp
jb
add
nop
daa
cld
and
clc
jmp
fistps
xchg
pusha
jle
data16
rcr
fsubl
das
loope
nop
mov
inc
inc
mov
or
xor
mov
cld
ss
shll
jnp
xchg
outsb
dec
int
fsubp
or
mov
xor
jno
jo
stos
inc
popf
push
fdivrs
mov
jb
mov
xchg
and
pusha
fwait
cmp
stc
push
movntq
out
xchg
adc
mov
inc
lods
add
jb
adc
inc
repnz
lds
insb
sti
push
lds
adc
divb
xor
push
loopne
pop
push
hlt
dec
mov
xor
add
or
sub
out
fwait
and
sub
xchg
insl
mov
pop
mov
out
test
cmpsb
stc
sub
in
mov
int
push
aaa
hlt
sbb
dec
mov
fwait
pop
inc
xchg
movsl
pushf
sub
data16
or
push
fldenv
and
cmc
inc
jb
js
fistl
add
sub
push
push
pop
lcall
psrlw
mov
jns
mov
jns
shld
pusha
or
cmpl
lret
rcrb
xlat
jge
pop
or
clc
inc
cmp
mov
vsqrtps
sbb
fnsave
xchg
sti
adc
mov
jne
movsl
das
sbb
mov
jae
inc
xlat
loope
sbb
sbb
xlat
cmp
sub
adc
jnp
shll
push
jmp
scas
clc
clc
fs
sbb
ret
push
xor
adc
xchg
aad
es
pop
or
dec
stos
or
and
popa
test
pop
sti
ret
inc
inc
cli
arpl
push
dec
inc
clc
and
lock
sti
sbb
inc
std
popa
mov
insb
push
mov
iret
dec
out
gs
adc
sahf
sub
or
jp
push
xor
push
mov
pop
push
lcall
xlat
add
push
stos
mov
aas
push
cmp
in
std
fistl
fistps
dec
push
ljmp
pusha
push
dec
popf
scas
mov
lods
lret
cmp
mov
test
xchg
fstpl
jbe
jns
pop
sbb
leave
dec
mov
or
cmpsb
inc
cmc
mov
or
cmp
add
cmp
dec
sub
popa
out
fstl
dec
jecxz
lahf
loop
xchg
fsubrs
in
inc
and
lods
jnp
in
fcomp
fldl
movsl
mov
dec
adc
enter
int3
push
insl
jns
mov
popa
push
insl
jnp
sarl
cli
int
sar
xchg
pop
jb
into
mov
in
insb
adc
sahf
xchg
aaa
push
enter
jmp
mov
scas
jb
sbb
pop
hlt
pop
in
adc
mov
in
and
fidivs
mov
repz
push
outsl
jno
shr
es
mov
mov
cmp
cmp
jns
or
and
rcrl
mov
popf
iret
pop
sti
setl
push
dec
movsl
push
call
and
ljmp
jne
sbb
dec
lahf
push
mov
fwait
xor
push
bound
xor
std
push
lea
and
in
xor
adc
aaa
push
jb
or
scas
xchg
scas
lret
sahf
sbb
jb
or
adc
dec
push
addr16
popf
fdivrs
or
cmp
fildl
in
cmp
lret
lock
dec
xchg
imul
and
fs
shll
inc
and
lods
cmpsl
cli
inc
ret
sub
sahf
push
push
or
in
add
outsb
loope
pop
lods
ljmp
and
addr16
sbbl
lret
fistps
lcall
mov
xor
enter
cmp
dec
jecxz
sbb
add
subl
rcl
movl
shr
xchg
stos
push
sbb
sbb
xor
jns
fadd
xchg
and
mov
rcl
adc
repnz
jne
jg
pop
jno
jge
std
daa
pop
cmp
into
inc
xor
and
enter
popf
arpl
xchg
pop
sub
shl
inc
sub
sbb
push
loop
or
sti
xchg
add
aam
jno
pop
popf
sub
jp
mov
mov
adc
or
jae
mov
jge
iret
push
push
and
dec
iret
sub
xchg
mov
jo
popa
cmp
push
mov
or
xlat
push
mov
or
jle
dec
sbb
inc
push
add
aam
sahf
pop
jmp
ja
das
xchg
idiv
mov
lret
es
ret
in
sbb
cmp
aaa
jmp
push
lods
inc
fnstsw
mov
xlat
pop
in
test
sub
mov
lret
roll
pop
jmp
dec
sbb
sbb
or
fwait
push
add
int
fadd
sbb
jle
push
pop
xor
inc
repz
mov
andb
and
fcomp
cmpsb
das
cmp
mov
mov
xlat
outsb
js
mov
fnsave
mov
daa
jecxz
jb
push
clc
outsl
dec
pop
adc
xor
popf
pop
and
into
push
fistps
cli
int3
in
cld
jg
sarl
xor
icebp
stos
push
std
mov
fucom
push
pusha
pop
hlt
xchg
jns
xor
jnp
int
mov
repnz
imul
insb
lcall
jmp
lea
or
or
add
jl
mov
out
out
sub
lods
lds
inc
mov
cmp
sbb
or
mov
clc
pop
out
das
push
out
jbe
sub
jp
outsb
sub
mov
pop
mov
das
lcall
fdivs
jle
mulb
mov
pop
mulb
lret
nop
js
ss
xchg
sub
clc
xchg
call
sbb
dec
stos
sbb
fs
arpl
scas
movl
jg
imul
mov
movsl
ds
dec
cmp
fsubrl
mov
xchg
xor
imul
out
xor
push
and
xchg
cmp
xchg
xchg
sub
or
xor
inc
mov
cmc
mov
xor
roll
add
sbb
jno
adc
in
mov
cmp
mov
imul
shrb
dec
divb
ret
adc
cwtl
out
leave
scas
out
push
adc
inc
inc
je
inc
push
mov
in
fildl
mov
shrl
std
xchg
jno
aaa
icebp
cltd
addl
ds
pop
fwait
cmp
bound
sub
lret
push
xchg
pop
fidivs
mov
popf
bound
jno
xor
repz
dec
adc
inc
insl
sub
test
outsb
add
scas
mov
bound
mov
fldl
psubsw
xor
push
out
xchg
pop
or
es
adc
std
popf
sub
or
jb
mov
adcb
clc
pop
jle
pop
inc
jo
mov
andb
push
mov
jg
pop
inc
cmp
dec
fdivrs
xlat
pusha
orb
lret
sub
in
mov
mov
xchg
xchg
movsb
push
add
in
notl
inc
push
push
lock
and
pusha
push
ljmp
sub
ss
ljmp
ret
mov
call
outsl
pop
imul
push
and
ss
push
aam
jl
inc
ja
fwait
xor
je
in
and
int3
cs
sub
lods
add
and
sub
push
jmp
das
pop
xor
stos
add
or
je
mov
inc
mov
cmp
lds
and
gs
jbe
loopne
jne
lods
add
cmp
and
cmp
test
push
mov
xchg
xchg
mov
icebp
mov
mov
xchg
or
cmp
push
icebp
add
sti
xchg
jecxz
xchg
sbb
stos
dec
out
popa
jl
insl
xor
popf
out
xchg
aad
dec
pop
popa
ret
pop
mov
jmp
sbb
sbb
dec
loope
in
mov
xor
jmp
mov
in
cld
pop
cli
push
xor
adc
ret
push
subl
iret
mov
mov
adc
mov
xchg
dec
fcmovbe
add
xchg
movsl
push
mov
mov
cmp
mov
xchg
push
mov
shlb
test
mov
and
insl
cmpsl
cwtl
push
adc
mov
popa
jecxz
movb
call
mov
incl
sub
sub
loop
dec
adc
int
std
aam
jae
pop
jmp
insl
xchg
addl
dec
cwtl
ja
xchg
sub
add
jbe
mov
lcall
shrb
push
xchg
or
lea
scas
lods
sub
mov
dec
repz
mov
xchg
sub
lods
repz
and
lret
dec
pop
std
or
nop
cli
sahf
xor
pop
sarl
add
mov
push
push
cwtl
loop
shlb
not
dec
std
lds
ss
mov
in
cmp
pop
je
pop
cmpsb
sub
hlt
ret
movsb
arpl
sub
cltd
popf
ret
jmp
pop
out
movsb
pop
jae
lret
aam
lea
dec
adc
mov
push
mov
cld
in
xor
pushl
cwtl
push
mov
ficoml
pop
cmp
scas
rolb
in
lret
push
dec
pop
aas
jge
jmp
and
cwtl
mov
or
repnz
xchg
xor
fdivl
push
fsubp
pop
cmp
mov
dec
pop
insl
jmp
mov
pusha
pusha
push
imul
sbb
sbb
mov
test
repz
push
pop
in
adc
imul
mov
mov
fcomi
sbb
sub
xor
f2xm1
pop
xchg
jo
or
bound
cltd
sub
inc
je
mov
ljmp
dec
cmpsb
icebp
jno
mov
xor
lods
xchg
sbb
aas
mov
push
lock
or
mov
cmp
lret
js
mov
faddl
mov
insb
pushf
push
in
popf
add
mov
int
sbb
loope
mov
sti
ficoms
mov
cmp
cmp
pop
cmp
mov
push
xor
rol
pop
repz
mov
jl
push
fwait
mov
mov
adc
push
jmp
ror
aaa
int
jne
lds
cmpsb
push
jns
sub
iret
cmc
clc
xchg
inc
and
adc
mov
fidivrs
lret
iret
cld
mov
mov
inc
stc
fiaddl
lock
inc
stos
shr
inc
sbb
in
std
addr16
hlt
fsubs
jp
inc
imul
addr16
in
bnd
insb
inc
out
test
lods
call
add
xchg
push
xor
nop
add
lcall
adc
mov
call
sub
inc
movsl
sub
out
loopne
mov
fidivrl
sub
out
cld
sbb
sarl
push
ja
jmp
adc
and
cmpl
add
sub
js
xchg
jl
sub
leave
cmp
lods
icebp
push
xor
xor
arpl
daa
mov
or
lods
dec
imul
ret
jg
xorb
cmp
fs
push
push
in
jno
clc
adc
dec
je
stos
loopne
jmp
scas
popa
outsb
rcrb
in
daa
sbb
in
cmp
imul
jmp
mov
mov
mov
add
lret
sbb
test
cld
cmpb
xor
pop
lods
xchg
mov
dec
or
lds
xorl
mov
push
xor
out
mov
jbe
in
jmp
fimuls
mov
out
jns
cmp
mul
mov
pop
in
and
sub
and
and
scas
fcomi
insb
roll
jo
faddl
push
xchg
sar
repnz
nop
daa
cmp
cli
stos
xchg
call
and
add
ds
loope
dec
test
jmp
pop
leave
dec
cmpsb
and
cltd
cmpb
cmp
cmp
and
mov
mov
pop
jmp
pop
and
sbb
shll
aad
imul
and
fidivrs
adc
xor
lcall
fdivrs
mov
in
lods
pop
decb
push
rclb
xchg
sub
xor
pop
lock
mov
mov
test
sbb
mov
shr
adc
fcmovne
out
or
mov
daa
ret
add
mov
ret
jno
cmc
lcall
jae
jg
out
sti
stos
enter
cmc
lds
sub
sbb
jno
out
inc
jecxz
in
inc
fidivrs
fs
dec
leave
fxch
mov
dec
adc
xlat
outsb
sbb
outsb
cmc
mov
les
out
xchg
es
push
or
iret
loope
cltd
xor
ret
lds
repnz
punpckhwd
mov
ret
or
rol
xchg
pop
insl
rcl
mov
mov
lret
addr16
daa
dec
out
ljmp
sub
sub
mov
inc
sahf
xor
add
ret
and
int
fnstsw
lods
jecxz
push
jmp
mov
inc
xlat
mov
leave
stc
cli
sbb
dec
jne
dec
and
push
push
xor
lret
cs
fucomip
cld
repz
aad
inc
fsubrl
iret
arpl
jmp
inc
sbb
adcl
mov
mov
out
inc
pushf
imul
leave
push
jle
mov
addl
push
pop
iret
inc
dec
gs
aaa
iret
mov
adc
push
inc
push
outsb
cmp
pop
mov
jle
insl
pop
mov
ret
jl
cmc
fwait
cmp
repnz
mov
out
outsb
ret
cmp
stos
insb
inc
inc
mov
std
dec
outsl
stos
jg
fildll
shll
jecxz
ret
fwait
adc
sub
ljmp
push
xor
nop
mov
xchg
push
popa
and
and
fcompl
fmull
stos
pop
lods
push
mov
dec
jb
xor
arpl
stc
pop
sub
imul
or
in
das
repnz
fldl
jl
ret
and
dec
popf
imul
inc
add
dec
std
insb
and
les
hlt
lods
movl
and
adc
dec
jns
cmc
mov
jg
jnp
sub
mov
aaa
or
fs
pop
cmc
push
popa
sbb
jl
in
nop
mov
adc
pop
mov
mov
add
ret
jnp
xchg
sub
popf
sub
cmp
or
push
ds
clc
sbb
fidivl
ds
repnz
test
mov
or
lods
nop
adc
out
fisubl
cmp
stos
test
shll
xchg
fnstcw
outsb
cmp
pop
frstor
movsb
dec
cmp
dec
xchg
xchg
add
xor
fsts
subl
add
int
scas
mov
stos
mov
loope
out
pop
cli
or
js
mov
xchg
test
dec
test
push
ror
pop
push
push
repnz
add
jae
xor
cmpsl
push
lods
pop
cmpsl
add
test
add
negl
mov
sub
xchg
pusha
and
xchg
jecxz
les
hlt
jb
cld
xchg
or
andb
or
repz
mov
xor
lods
jp
loopne
xchg
adc
xchg
jno
test
pop
cmp
mov
jge
sar
pushf
pop
cmp
pop
or
sbb
sbb
inc
ja
cmp
inc
icebp
inc
xchg
fstl
push
mov
xor
xchg
scas
jno
or
push
cmp
jb
xor
xchg
shrb
call
icebp
xchg
rorl
movsl
add
sub
into
and
adc
orb
outsl
jnp
sub
aas
outsl
ja
ss
insb
adc
mov
mov
push
or
xchg
dec
outsl
addr16
xchg
arpl
push
adc
arpl
mov
jle
int3
arpl
stc
lods
mov
mov
std
call
cmp
rcll
mov
ffreep
jge
popf
scas
loop
mov
stos
in
xor
mov
push
in
lods
add
ret
addr16
cli
das
imul
pop
pop
fimuls
inc
and
test
or
push
mov
shrb
mov
fxch
loopne
add
sbb
ja
test
dec
or
cltd
lock
and
js
leave
dec
fistl
mov
movsb
cmpsb
pop
pop
dec
xchg
sub
push
or
or
out
je
dec
cmp
mov
xchg
into
insl
daa
hlt
mov
cmp
jne
and
lcall
sbb
jo
loop
inc
sbb
popa
jp
cmp
popl
fcompl
das
sahf
push
xchg
mov
adc
cld
xchg
jno
int
ss
lahf
ss
mov
cwtl
mov
xchg
ljmp
push
cmp
jl
pop
jecxz
mov
in
xchg
movsl
mov
xlat
or
mov
loopne
out
sbb
adc
push
pop
mov
jl
fiaddl
xchg
mov
iret
sbb
jns
xchg
es
pop
aas
pshufw
xlat
movsl
jns
jo
dec
jno
lock
fst
in
add
js
repnz
daa
adc
ficoms
cmp
jmp
pop
jne
nop
ret
jbe
js
daa
mov
dec
adc
enter
adc
shrl
mov
icebp
iret
mov
pusha
aam
scas
sarl
call
dec
xchg
loopne
lret
aam
rorb
and
inc
ss
mov
inc
sub
push
ljmp
jno
daa
mov
jns
pop
pop
scas
mov
cmpsl
fisttpll
fistpll
cmc
inc
arpl
jns
and
add
aas
fwait
stc
and
push
aaa
shll
sbb
ds
aas
dec
test
out
pop
xor
mov
or
test
dec
pop
xchg
repz
sub
icebp
add
dec
enter
cs
mov
hlt
test
ds
in
roll
jo
push
movsl
or
push
inc
dec
mov
ret
push
nop
je
dec
popa
pushf
xor
cmp
cmp
aas
push
out
jo
add
add
pop
xor
lahf
or
bound
daa
out
test
jo
sti
or
icebp
jmp
movl
nop
arpl
adc
pushl
in
ljmp
jl
fsts
ror
jae
mov
je
sbb
rcll
mov
or
pop
test
fs
xorl
out
js
shlb
xchg
lcall
adc
sbb
sti
add
jp
sub
aad
push
and
sub
fsubrl
ror
pushf
shrl
mov
fs
jmp
test
arpl
mov
outsl
test
sti
cld
add
inc
pop
nop
and
arpl
mov
mov
inc
cld
lcall
in
add
call
xor
ret
sbb
je
pop
insb
mov
cmpsb
inc
ljmp
cmpsb
push
inc
shr
enter
xor
in
das
inc
dec
and
push
mov
mov
and
rcl
sub
sbb
in
dec
lea
addl
es
scas
cli
lods
bound
jl
and
push
popa
fadds
xchg
out
and
pop
addl
xchg
loop
ret
push
add
mov
scas
adc
test
ficoml
stos
sti
addr16
fstpl
mov
in
test
mov
inc
xchg
add
aaa
pop
mov
repnz
pop
outsl
sub
imul
in
add
repz
inc
and
cmp
aas
sbb
call
cmc
dec
xrelease
inc
lahf
inc
inc
hlt
data16
or
cmp
push
adc
in
arpl
cmpsl
ljmp
jae
xchg
and
push
mov
test
adc
mov
cwtl
mov
cwtl
jmp
in
adcl
hlt
cmp
or
dec
pop
lods
jo
mov
mov
jl
mul
scas
push
in
cmp
pop
or
rcrl
loopne
mov
xor
inc
mov
fsubrl
stos
pop
push
xor
cmp
add
adc
push
adc
std
or
movsb
out
je
push
ret
add
ja
inc
add
repnz
test
lret
mov
addr16
add
cmp
lods
inc
bound
mov
and
dec
adc
cmp
arpl
sbb
xor
es
and
dec
add
ss
cltd
movsb
outsl
or
repnz
push
add
in
xor
pop
loop
test
or
mov
jno
mov
push
or
push
xchg
push
inc
push
lock
jecxz
cmp
daa
cmp
mov
addr16
out
mov
jle
int
push
xcrypt-cbc
cmpsl
adc
push
imull
jmp
add
out
leave
pop
mov
xchg
fadds
pop
push
xorl
jne
jle
xor
fwait
repz
shr
int3
sbb
mov
cmp
push
pusha
and
maxps
test
mov
sub
xor
xabort
fsubrl
sbb
imul
pop
sar
enter
dec
inc
push
jp
adc
jae
mov
test
loopne
mov
rol
out
sub
pushf
push
xor
lea
jg
add
inc
lahf
loope
xchg
fistps
in
pop
jns
sbb
xor
gs
add
mov
movsl
cmpsl
dec
add
adcb
inc
cld
imul
sahf
cmp
xchg
inc
popf
lcall
aam
dec
andl
mov
shl
or
cmp
shll
fdivr
xchg
in
arpl
mov
gs
push
cmp
and
icebp
pop
out
js
adc
frstor
dec
loope
in
test
fucompp
xor
mov
cmp
lods
mov
jecxz
sub
pop
jle
pop
xor
loop
or
aas
les
into
cmc
jl
pop
movsl
push
push
inc
sbb
lea
add
out
out
push
pop
mov
cmp
int
int
lret
out
icebp
xchg
and
xchg
sub
cwtl
aas
testb
pop
lods
loop
fimuls
arpl
xchg
aas
lods
test
fidivl
punpckldq
in
xchg
xor
cld
ds
cmp
cmp
xchg
into
daa
push
and
inc
movsl
icebp
out
sub
and
xlat
xorl
or
into
insl
xor
sahf
out
scas
out
sub
xchg
ss
lahf
mov
push
sbb
pop
ret
cmpsb
push
push
shl
jo
xor
std
popa
sti
fwait
shlb
cmpsl
bound
cmp
fldenv
fidivrs
cmc
leave
ds
push
xchg
lret
mov
fwait
push
jle
or
cmpsl
ds
jmp
mov
les
nop
daa
cmp
mov
insb
mov
cli
sbb
out
jae
shr
gs
push
sub
idivl
movsb
sbb
and
fwait
sti
push
mov
movsb
push
rep
les
push
into
enter
sub
je
mov
inc
pop
jne
lods
loopne
loopne
jge
sub
sub
xchg
sub
test
sti
shlb
shlb
js
popa
or
mov
sub
and
outsb
out
push
jns
mov
sti
sub
dec
bound
dec
in
and
popa
jge
ljmp
push
into
jns
jg
jnp
sub
jne
or
lcall
adc
aaa
rorl
pop
jg
enter
inc
rcrl
mov
xor
push
add
popf
push
dec
rcrl
addb
fs
inc
jo
daa
sub
nop
ss
mov
aaa
mov
pcmpgtd
push
icebp
insb
jl
aam
push
push
add
stos
cld
rcrb
xor
dec
or
lcall
sub
les
mov
inc
inc
inc
rcll
adc
or
xor
push
mov
pusha
adc
jno
mov
dec
pop
adc
cmpsl
xor
push
mov
cwtl
icebp
sbb
pop
cmp
imul
out
test
xchg
cs
cli
push
stos
inc
aad
loope
data16
aad
inc
fsubl
xchg
mov
inc
jnp
cmp
pop
sub
add
xlat
cltd
mov
std
fstps
add
repnz
add
stos
sub
int
in
jns
fistl
or
push
mov
stos
add
sbb
sbb
pop
aas
pop
icebp
mov
sarb
or
sbb
rcrl
cmova
ret
inc
cmpsl
jmp
aad
addr16
repnz
movsb
js
sbb
repz
out
xchg
dec
outsl
loop
and
fmul
je
add
xor
pop
orl
in
mov
aam
daa
ss
ret
outsb
test
rorl
mov
faddl
lahf
mov
mov
scas
sub
fsts
or
mov
cmp
in
arpl
and
dec
dec
adc
mov
add
lret
sbb
mov
mov
jbe
scas
test
les
mov
outsb
ret
scas
inc
sbb
or
outsb
add
in
mov
push
int3
lahf
jo
pop
mov
mov
pop
inc
popf
repz
mov
jno
pop
add
push
sbb
or
cmp
aad
jns
mov
les
popa
jb
mov
sub
cmpsb
mov
idivb
jmp
mov
test
mov
inc
add
xor
mov
notl
ror
lret
sbb
lock
push
nop
dec
je
mov
insb
shl
jl
bound
movsb
cld
outsl
adc
into
fsubrl
jl
mov
inc
inc
js
out
je
pop
push
xor
popa
sub
outsl
fcoms
inc
std
mov
adc
adc
in
xor
xchg
xor
pop
mov
push
or
mov
les
adc
add
jg
mov
outsb
imul
push
fwait
add
cmpsl
dec
xor
dec
ret
sbb
mov
jne
sub
xchg
push
xchg
cmp
in
xor
movsl
mov
mov
dec
popf
jo
lea
cli
std
mov
bound
pop
jbe
fadd
push
sub
fbstp
push
jmp
lods
inc
in
cmp
xchg
sub
es
sub
dec
mov
sti
pop
stos
sbb
and
xor
mov
mov
loop
or
mov
rorl
pop
test
cmpl
mov
pop
es
rorl
lret
jb
adc
imul
js
lea
fcmove
push
mov
cld
dec
in
inc
ret
filds
insb
sbb
mov
imul
or
dec
or
repnz
xchg
int
push
popf
jnp
add
mov
and
xor
daa
int3
mov
pop
out
push
ret
jno
xchg
rcl
cwtl
lods
dec
repz
repz
test
or
xor
insl
and
jbe
sar
add
std
push
inc
imul
mov
mov
lret
mov
dec
or
clc
push
loopne
or
ljmp
mov
push
and
xor
stos
inc
pop
pop
mov
addr16
fistps
add
mov
popf
mov
push
and
pusha
fildl
push
scas
adc
inc
push
cwtl
repnz
push
xchg
subb
mov
push
jno
sub
jb
xor
fists
in
pop
scas
inc
mov
arpl
in
lods
std
xchg
sub
cltd
sbbl
roll
mov
cmp
int
add
gs
xor
mov
mov
dec
dec
iret
jg
arpl
push
xor
icebp
movsl
cmc
xor
mov
push
inc
jecxz
dec
mov
gs
popf
mov
mov
fstps
sub
jecxz
xor
jg
sti
pusha
or
lods
dec
cmp
jbe
push
in
push
adcl
jl
fsubl
in
fcompl
mov
xlat
out
jp
adc
int3
add
pop
pop
rcll
jecxz
cmp
or
cmp
mov
popf
loop
dec
sub
dec
popf
cwtl
out
cmp
or
in
ffree
push
or
pop
or
cmpl
xchg
out
add
or
pop
stos
xor
adc
out
inc
add
pop
xorl
movsl
mov
push
xor
and
lcall
aas
and
lahf
sbb
lahf
jno
test
dec
inc
jnp
ljmp
mov
and
ja
mov
push
or
loope
lahf
adc
jg
fcompl
mov
sub
ret
mov
dec
out
xor
push
loop
mov
ficomps
fdivrs
dec
fnstsw
add
push
jecxz,pt
inc
adc
sub
into
mov
aad
jge
bound
xchg
inc
add
stc
xor
and
add
shr
lds
movsb
nop
fs
inc
jl
xchg
scas
adcl
scas
and
and
loope
out
imul
out
add
enter
pusha
sbb
xchg
insl
in
stos
shl
add
mov
sahf
xchg
lock
rolb
sbb
mov
jl
movsl
je
adc
add
out
nopl
sub
bound
adc
jbe
jo
sbb
aad
mov
sub
push
push
xor
dec
or
incb
les
cmpsb
arpl
test
lea
sub
jmp
mov
in
mov
dec
add
pushf
xor
jmp
and
xchg
aaa
push
call
or
fdivrs
push
adcl
fsubr
pop
popf
stc
rcrl
ja
lods
xchg
dec
push
jbe
cmpsb
cmpsl
je
add
bound
sub
sub
and
mov
xor
test
inc
std
adc
xchg
xchg
insb
dec
hlt
jns
pop
sbb
fsts
or
in
xlat
out
pop
int3
cmc
cmpl
xchg
cmpsb
pushf
adc
or
push
test
sbbl
scas
pop
inc
shlb
lret
pop
cmp
daa
in
fisttpll
lahf
or
sub
dec
test
adc
lds
sub
leave
xlat
in
cmpsl
mov
jne
mulb
xchg
add
mull
mov
arpl
xlat
insl
andl
jp
push
mov
rorl
or
sub
sub
aas
shrl
cmp
popa
das
sti
xchg
xchg
inc
jl
js
and
or
mov
fucomi
popf
pusha
sbb
mov
xor
mov
dec
mov
jae
sub
lods
pusha
clc
sub
jmp
or
mov
arpl
ret
ljmp
jmp
aaa
arpl
je
inc
fbld
fiadds
inc
lret
mov
sub
cltd
jle
sub
std
mov
jge
loopne
pusha
cmc
mov
adc
fisttps
shl
pushf
out
and
xor
pop
cmp
cld
dec
les
repz
mov
push
push
and
pop
cmp
sub
pop
loop
dec
pop
xchg
das
shl
ret
xchg
push
mov
imul
xchg
in
pusha
stc
repnz
xchg
imull
xor
or
xchg
cli
and
stos
lds
hlt
mov
push
mov
test
adc
mov
and
call
or
push
mov
lahf
pop
test
sub
xchg
test
dec
shlb
and
cmp
insb
jae
or
sbb
pop
dec
sub
push
lods
pusha
neg
gs
pop
jae
add
mov
jnp
loopne
xchg
mov
das
sbb
push
mov
mov
mov
fcmovbe
outsb
or
xchg
pop
popa
insb
mov
inc
icebp
shrb
push
xor
sbb
cmp
in
push
ljmp
loopne
or
adc
call
jecxz
enter
inc
push
cmc
dec
dec
fsub
sub
insl
scas
mov
bound
jmp
add
aad
pop
pop
mov
pop
sub
mov
call
mov
mov
out
fxch
mov
mov
fstpl
adc
mov
add
xor
gs
mov
cmp
adc
cmp
cmp
pop
leave
inc
insl
jge
pusha
jnp
sahf
hlt
mov
mov
xchg
and
and
cmp
dec
sahf
pop
aad
dec
cmp
mov
sbb
je
push
jnp
lods
aas
pop
pusha
imul
insb
jae
jb
fdivp
fdivs
mov
lds
add
push
ret
pop
push
enter
and
fstps
ds
in
and
and
les
dec
push
cli
add
inc
cli
cmp
sub
pop
shlb
mov
fucomip
fdivrs
xor
ret
hlt
and
pop
xchg
push
sub
nop
sahf
add
iret
mov
insl
lock
sahf
push
cld
adc
cmp
add
pop
sub
inc
test
jns
gs
and
iret
sbbl
jo
mov
negl
mov
push
ficoms
in
jp
cltd
sahf
lds
sbb
negb
fnstsw
jb
pop
push
dec
aam
mov
pushf
pop
add
loop
jmp
test
test
adcb
lods
ret
scas
imul
mov
add
mov
sub
sahf
jae
in
sub
mov
cmp
push
ffree
pop
xchg
push
fwait
and
mov
adc
mov
adc
mov
cmpsb
sub
dec
cmc
outsb
ds
insl
sub
push
ss
test
mov
sbb
andb
cs
push
pushf
ds
imul
jo
dec
leave
mov
pop
lret
js
cmp
xor
push
add
fldcw
inc
pushf
xor
and
add
xor
aam
outsb
mov
xchg
pop
adc
out
pop
sub
mov
sbb
out
std
lods
fwait
mov
inc
mov
mov
add
mov
movl
fwait
mov
loope
pop
pmulhw
jbe
or
inc
repz
mov
fcoms
lods
adc
lret
push
mov
mov
mov
dec
sti
fwait
pusha
cmpsb
and
cmp
inc
fcomps
repnz
mov
call
daa
jo
cwtl
es
mov
in
mov
cmpl
and
js
arpl
xchg
jl
and
xor
ret
push
xorb
sub
push
and
push
add
leave
mov
out
aas
lret
dec
mov
add
push
dec
leave
xor
cmp
xor
ss
addl
sahf
jle
and
fcompl
sub
cwtl
insl
jg
lahf
mov
and
insl
out
xchg
cmp
dec
stc
in
int3
lock
fildl
inc
xchg
push
cmpsb
cli
test
jno
daa
sub
xchg
dec
in
int
cmc
ja
imul
arpl
or
adc
push
xor
popf
pop
lea
leave
pusha
sti
jle
call
mov
ljmp
dec
inc
popf
mov
sbb
dec
dec
cmp
shlb
movsb
pop
or
inc
jg
or
xlat
lock
cli
jmp
lods
mov
movsl
in
mov
nop
sub
pop
jae
sahf
std
add
xchg
ja
das
or
adc
pop
xor
enter
jbe
ds
enter
push
in
mov
scas
cmp
adc
jb
in
in
fdivrs
pop
jns
dec
jmp
int
sub
dec
and
jno
loope
pop
dec
jl
sbb
pop
decb
mov
adc
lods
sub
rcl
adcl
dec
xor
cmpsl
fcmove
xchg
xchg
add
pop
or
sub
sbb
dec
rclb
sbb
cmp
mov
dec
dec
ret
push
sub
pushf
in
cli
mov
cs
dec
jns
test
aad
pusha
pop
hlt
mov
notrack
outsl
ret
fcmovnb
mov
or
test
jns
adc
or
add
cmp
loope
jae
add
adcl
dec
mov
repnz
repz
mov
cltd
shrb
sub
ds
mov
stos
ljmp
insl
std
mov
mov
pop
push
lods
xchg
sbb
dec
and
cmp
scas
push
sbb
jnp
mulb
mov
in
lret
jmp
mov
call
fcomp
mov
inc
jns
aad
daa
adc
pop
mov
lret
mov
mov
xor
pop
mov
loopne
incb
xchg
sahf
inc
mov
bound
clc
ret
xchg
leave
int
loope
fsub
jge
dec
inc
lea
test
jmp
push
sahf
xor
call
stos
fucomip
mov
cmp
subl
in
jge
in
add
adc
jmp
xchg
inc
mov
es
and
ret
fistl
pop
adc
inc
rorb
data16
mov
push
cwtl
jmp
add
jmp
and
mov
outsb
add
mov
mul
xor
xchg
fsubl
push
test
jb
sbb
cmpsl
lret
inc
subb
adc
fsubr
cmp
sbbl
mov
sbb
add
popa
enter
js
sti
mov
mov
daa
aaa
outsb
loope
stc
stc
nop
sub
inc
scas
and
idivb
repz
xor
pop
inc
loopne
push
jecxz
mov
adc
call
in
jl
add
inc
imul
jle
cmp
mov
scas
mov
das
xlat
mov
add
clc
mov
bound
gs
cmp
add
mov
dec
adc
and
imul
outsb
cmpsb
cmp
fistpl
int3
sub
mov
mov
sub
jl
dec
loope
jns
and
push
xchg
pusha
std
arpl
mov
xor
add
shr
pop
int3
pop
repnz
jl
test
loop
adc
test
inc
mov
push
test
in
adc
or
mov
dec
lods
mov
stc
or
xor
popf
rorb
add
cmpsb
in
out
sti
fwait
inc
divb
int3
mov
movsl
icebp
nop
into
js
lret
xor
test
dec
fcompl
addr16
add
pushf
push
lret
jmp
mov
rclb
or
out
cmp
mov
xchg
cmp
imul
pop
xor
adc
jg
sub
pusha
pop
ljmp
jp
cmp
ret
ds
push
sub
xor
divl
pop
enter
inc
lret
out
adc
int
outsb
leave
dec
lcall
jg
fldl2t
shll
test
mov
mov
push
orl
movsb
imul
mov
mov
shrb
dec
loope
iret
loopne
mov
fnsave
add
sub
fimull
xor
and
mov
clc
insb
fiaddl
xchg
cld
jl
test
test
loope
cmpsl
pop
inc
inc
bound
mov
push
dec
mov
sti
cmp
adc
adcl
xchg
scas
lods
jl
xor
push
add
jle
cmpsb
and
shrl
sub
hlt
xchg
data16
mov
mov
cmp
lcall
mov
rclb
insb
fcomi
xchg
push
cmpsb
cmp
ret
cmp
add
lcall
adcb
std
jno
sub
sbb
sbb
inc
aam
mov
xor
enter
push
inc
sbb
pop
jl
in
into
loop
cmp
frstor
push
ficoms
jp
rorl
mov
movsl
fstl
jle
mov
fwait
and
lock
into
sub
mov
add
inc
jbe
loop
into
bound
jne
aaa
inc
adc
in
jne
ljmp
xchg
loop
pop
sub
inc
or
aaa
ja
fldt
dec
xlat
jg,pn
xchg
cmp
out
xchg
or
mov
mov
movsl
xor
imul
mov
stc
jae
jmp
sub
xor
clc
push
icebp
sub
movsl
push
insl
andb
stos
xor
pop
mov
mov
lods
add
adc
popa
dec
xchg
xor
enter
mov
pop
cwtl
adc
xor
mov
mov
pop
push
mov
iret
mov
lcall
sbb
mov
lods
sub
ret
shll
xchg
in
jge
add
stc
adc
or
pop
cmp
sub
loope
out
shll
cmp
mov
es
push
outsb
scas
mov
xor
jno
mov
clc
out
pop
adc
cmp
cmc
sub
scas
fdiv
rcrb
fdivl
sarb
jae
ljmp
aas
les
cmp
cmp
add
data16
test
enter
loope
sbb
popf
sbb
ljmp
sar
mov
loopne
add
mov
cmpsb
add
out
sbb
dec
hlt
jo
mov
mov
lcall
xchg
lock
dec
in
mov
cmc
mov
pop
dec
xchg
das
adc
push
shll
bnd
daa
fdivl
out
pop
aaa
mov
push
dec
stos
mov
aad
lods
add
adcl
jns
mov
popa
push
sub
or
mov
ljmp
push
add
std
movzbl
push
add
ret
sub
fucomp
popa
add
stc
jo
and
shrb
inc
mov
sub
inc
sub
lea
sub
mov
loopne
push
addr16
je
mov
je
adcl
dec
mov
xor
and
rcrl
and
mov
dec
add
in
sub
leave
mov
shlb
dec
dec
jecxz
fwait
addb
xchg
adc
lret
js
mov
test
sbb
or
sbb
stos
ds
sbb
jno
add
mov
stos
push
jne
push
out
repnz
pop
adc
arpl
jbe
shll
xchg
mov
adc
scas
call
ret
mov
sub
jnp
dec
or
movsl
cwtl
ret
mov
dec
loop
fwait
jg
cmc
repnz
lret
add
leave
test
mov
mov
dec
test
movsb
cmpsl
outsb
xlat
jmp
mov
mov
and
das
mov
push
movsl
pushf
jl
mov
lods
lds
xor
stos
cmp
stos
sub
lods
stc
cmp
and
push
fcmovnb
pop
addb
out
pop
mov
dec
or
and
xlat
sub
xchg
adc
or
lcall
sbb
cmp
add
gs
push
in
ret
lods
shrb
push
mov
jae
sahf
pop
fldl
cmpl
jne
jle
rol
cld
adc
popf
or
imul
clc
pop
fsubr
aad
dec
in
adc
mov
imul
mov
adc
sbb
push
out
mov
outsb
clc
insl
addb
filds
adc
das
loopne
nop
push
jns
jns
mov
rol
mov
mov
sahf
cli
xchg
sarb
mov
pop
pop
sbb
mov
fdiv
out
nop
stos
adc
mov
push
mov
shrl
cltd
in
sti
repnz
loope
es
push
std
rcr
jp
cwtl
mov
cmp
mov
add
or
jg
adc
ret
je
lcall
add
cmpsl
fsubl
mov
jg
sbb
imul
int3
jae
cli
dec
add
gs
dec
and
pushl
cmpsl
mov
int3
and
dec
xor
or
or
pcmpgtw
pop
insl
orb
mov
mov
je
mov
xchg
mov
inc
add
enter
push
dec
add
test
aam
sbb
js
mov
incl
leave
les
sbb
cmc
mov
push
test
push
out
test
jae
or
jle
adc
mov
xor
shrl
dec
pop
lods
push
mov
sub
pop
int3
dec
aaa
clc
out
jecxz
inc
sub
mov
push
ja
add
fs
loopne
inc
push
sub
nop
and
and
ja
stos
sbb
add
xchg
movsl
test
mov
push
sarl
mov
push
adc
jnp
sub
xchg
adc
shll
idivb
leave
cld
mov
mov
push
mov
push
jecxz
push
outsl
xor
mov
test
stos
pop
decl
inc
xchg
sbb
mov
ret
sub
mov
push
push
enter
rcpps
push
or
icebp
push
lock
cmp
push
jne
scas
ret
mov
test
leave
ljmp
sub
sbb
jmp
in
lock
or
jle,pn
lret
cmp
xor
jno
aas
push
fstps
and
mov
pop
xchg
cli
or
les
lock
sbb
sbb
mov
pop
xchg
fbstp
pop
mov
aam
xchg
xchg
call
cmp
push
mov
cmp
jmp
mov
rolb
push
push
jne
cli
fwait
xchg
mov
sbb
insl
mov
sub
scas
xor
inc
mov
mov
out
xchg
or
mov
aas
add
jo
jns
push
inc
bound
addb
mov
mov
cmpsl
sub
shll
pop
jae
cld
into
das
xchg
loop
push
icebp
pop
mov
je
push
fnstcw
sub
mov
sbb
mov
jno
jns
lds
cmpsl
pop
mov
mov
inc
and
inc
loop
push
cmp
testl
stos
aas
jb
dec
add
scas
out
xchg
mov
mov
aad
pop
xchg
ljmp
insl
shrl
and
loope
rcl
ret
mov
in
adc
dec
cmc
cmpsl
cmc
inc
xor
xchg
xor
inc
push
inc
nop
sbb
inc
notl
or
mov
dec
fdivrl
loopne
hlt
cld
mov
sti
sbb
mov
shl
repnz
lret
cmp
in
lds
mov
mov
sbb
mov
add
push
push
mov
inc
loope
js
add
inc
xor
mov
iret
push
into
and
int
fadds
cltd
scas
ficoms
mov
cmp
sbb
sarl
inc
add
aam
and
inc
movsl
push
test
repnz
fnstenv
mov
inc
insl
out
sahf
popa
mov
outsl
fisttpl
lcall
in
mov
enter
in
aad
inc
jns
pusha
stos
pminsw
jb
adcb
jge
and
or
cli
lods
fbstp
adc
orb
popa
push
jmp
mov
jo
enter
pop
jmp
pushf
xor
scas
xchg
xchg
jmp
into
fwait
jle
inc
mov
inc
push
cmpb
cs
jl
loope
push
movsl
pop
fiadds
ficomps
xchg
mov
das
jp
popa
sbb
je
data16
xchg
xchg
lcall
mov
das
mov
ss
lret
mov
mov
stc
movsl
xchg
stc
jl
imulb
sahf
negl
test
lret
cld
mov
sahf
xor
jmp
push
dec
loopne
add
push
adc
shl
in
cmp
mov
xor
sti
movsb
mov
xchg
in
cmpl
ret
out
cmp
mov
xor
or
mov
in
or
test
jo
mov
shlb
jae
int
and
push
push
dec
leave
mov
jo
outsb
loop
jl
pop
scas
cmp
mov
and
pop
push
fadd
add
call
push
add
push
test
ja
lea
inc
setb
loopne
dec
nop
dec
hlt
push
out
aaa
int
in
xor
push
shlb
pop
mov
add
call
dec
movsl
in
pop
out
ffree
mov
cs
sbb
mov
sahf
xchg
aas
push
adc
sahf
xor
adc
push
jb
mov
sbb
pop
jge
mov
mov
loope
or
mov
test
pushf
cmp
les
sti
jge
mov
arpl
shr
js
loope
out
aad
jne
mov
enter
idivl
xor
xchg
stos
sar
xchg
ret
ds
addr16
fmull
mov
inc
int
mov
and
aam
ja
test
sub
jle
nop
adcl
adc
into
shlb
add
push
push
std
inc
ds
sbbb
arpl
push
sub
lret
fidivrs
imul
cmp
xor
addr16
mov
mov
lods
sbb
rclb
cmp
push
in
decl
movsl
mov
xchg
pop
shlb
mov
mov
pushw
leave
and
and
sbb
cmp
jmp
jns
adcb
stc
popl
daa
sub
arpl
leave
or
jo
arpl
sbb
in
testb
sbb
pop
stos
out
cmp
add
push
push
lret
std
sub
or
outsl
jno
pop
jb
mov
mov
movsl
gs
loopne
add
push
mov
ret
shl
push
clc
or
daa
mov
loope
inc
fisubs
jg
mov
mov
divl
and
aaa
xchg
into
lods
popa
fwait
outsb
in
add
adc
pop
stos
insl
pop
dec
dec
fsts
test
cmp
out
cmp
or
xor
mov
adc
and
fistpl
sbb
pop
inc
xor
jnp
hlt
hlt
addr16
lcall
sub
and
sbb
iret
adc
bound
and
lcall
sub
jmp
mov
out
roll
out
add
inc
adc
rcrb
das
xchg
dec
aam
out
xchg
cmp
pop
inc
es
int
cli
inc
arpl
ja
xor
test
add
jecxz
test
adc
repnz
jo
aaa
mov
aas
add
les
add
xor
div
cmpsb
cmp
add
enter
and
mov
pushl
inc
mov
subb
insb
jno
add
fwait
xchg
in
mov
sub
popf
mov
in
fsubs
jle
mov
push
pop
adc
mov
scas
xor
iret
or
and
icebp
inc
je
inc
call
mov
fs
xor
or
jl
mov
lock
cmp
nop
dec
insl
fldl
aaa
mov
mov
push
mov
leave
ficompl
mov
stc
or
out
mov
cmc
add
daa
pop
cmp
dec
dec
dec
sbb
adc
decb
loope
fsub
cld
add
xor
push
test
loop
ja
lahf
jo
sub
xor
push
cli
in
shr
mov
dec
hlt
xor
jp
data16
dec
loop
sbb
push
sub
push
test
push
test
and
cmp
loopne
inc
sub
push
in
jnp
std
jbe
jl
mov
push
fistl
push
mov
jne
jnp
or
test
into
adc
mov
mov
mov
adcb
hlt
push
adc
bnd
cmpsb
jle
outsb
fbstp
pop
dec
ret
and
cmc
mov
sarl
cmp
xor
or
repnz
sub
ljmp
xor
jg
ss
mov
add
inc
jnp
jp
fstps
sti
daa
lods
jb
das
dec
inc
jl
push
mov
xchg
testl
dec
mov
movsb
add
jmp
insl
inc
xor
data16
cltd
jno
cmc
mov
pop
xchg
and
cmp
fiaddl
xchg
sbb
ds
xchg
jp
xor
dec
sub
push
xchg
cld
or
xor
sbb
clc
in
jnp
push
nop
sbbb
lret
div
lock
in
push
xchg
and
cmp
inc
pop
mov
hlt
lock
adc
xor
loop
adc
push
sbb
add
add
dec
mov
xchg
es
mov
mov
ds
xor
mov
sub
fsubrs
inc
pop
xor
hlt
xor
cs
stc
movsl
adcl
out
sbb
xor
hlt
push
or
test
lahf
nop
das
aaa
fwait
ja
inc
pop
mov
mov
mov
aam
imul
push
xor
fbstp
and
int3
aam
inc
insl
add
push
lds
jecxz
mov
xor
pop
push
outsb
iret
push
cmp
addr16
jno
and
les
jmp
and
push
or
es
inc
loope
lret
es
in
inc
jns
mov
mov
loopne
fs
addl
pop
mov
arpl
push
inc
push
xor
cmp
arpl
idiv
or
cmp
xor
cwtl
jmp
mov
mov
mov
sub
mov
mov
jl
push
inc
fldl2t
xchg
jg
int3
or
std
mull
inc
in
and
shll
push
xchg
rorl
mov
fs
popa
js
xchg
xlat
ficoml
insb
lods
dec
xor
fdivrl
pop
jne
flds
adc
inc
inc
push
mov
fs
jo
xchg
mov
ss
add
xor
mov
add
icebp
jne
jmp
add
xor
dec
dec
in
pop
mov
cs
or
adc
mov
xchg
jg
pop
out
cmp
stos
dec
or
push
pop
out
stos
mov
fwait
add
sbb
scas
push
rcrb
lock
data16
mov
leave
mov
jno
xchg
sub
imul
leave
shll
and
pop
repnz
lods
cs
push
or
ljmp
or
mov
dec
lahf
mov
in
adc
lods
inc
or
xchg
ret
push
call
test
jo
imulb
and
xchg
inc
and
je
in
ljmp
test
cltd
mov
roll
roll
rclb
pop
outsb
xor
jp
daa
jno
fstps
shrl
pop
inc
shl
and
adc
clc
pop
pushf
jbe
in
data16
xor
test
outsb
mov
xchg
mov
pop
jle
jg
dec
sub
testl
push
lods
test
push
add
mov
sbb
ret
pop
adc
cmpsl
into
orl
int3
and
xchg
imul
add
xor
push
mov
mov
aas
leave
testb
sub
add
pop
sbb
mov
sub
cmp
inc
xchg
aam
ret
push
push
test
and
xlat
mov
insl
push
xchg
icebp
lods
add
fdivs
mov
cli
out
sub
mov
adc
sub
in
xchg
mov
adcl
cmc
rcrb
subl
scas
call
cmp
dec
push
inc
clc
push
add
icebp
sbb
xor
xchg
jge
ret
pop
push
test
pmaxsw
out
imul
pushf
mov
jl
aaa
adc
movsb
scas
fldcw
loope
fldl
cwtl
jb
jg
das
xchg
pop
mov
add
adc
pop
cmp
movsb
jl
lret
movsb
sbb
into
vmovupd
sahf
pop
das
pop
xor
loope
out
ds
dec
in
pop
outsb
fdiv
inc
test
loope
scas
push
or
outsl
ds
ss
pop
mov
mov
fyl2x
iret
mov
shll
out
insb
jns
mov
jne
jo
ret
pop
pop
pop
xchg
in
negl
idivl
sub
test
cmp
xchg
sub
jo
aad
leave
jne
and
mov
pop
or
sbb
outsl
imul
mov
mov
jbe
push
fcoml
jp
test
fsubrl
aas
gs
jo
repz
aaa
mov
lds
and
clc
loopne
movsl
inc
stos
insl
add
sahf
or
movb
pop
fwait
and
jno
inc
and
jno
clc
leave
sbb
or
leave
or
pop
mov
pop
les
stc
cmpsl
jno
jae
enter
test
insl
sub
mov
cwtl
push
nop
inc
push
or
std
or
and
dec
sti
mov
mov
mov
mov
test
mov
xchg
jmp
xchg
subb
xor
push
stc
cmp
jle
and
pop
insl
sub
mov
lahf
cs
and
imul
mov
cltd
sahf
call
and
pop
repnz
inc
and
pop
add
pushf
dec
fistl
jge
test
fwait
ljmp
les
xor
cmp
rcl
cwtl
cmp
repz
inc
xor
push
jno
movsl
fucomip
xchg
mov
sub
fnstenv
add
mov
fstps
rcll
movb
repz
ss
shlb
push
leave
or
and
push
mov
cli
or
jg
test
xchg
pop
xor
adc
mov
pop
lret
xlat
mov
mov
push
ljmp
add
lret
xor
cltd
das
add
dec
movsl
mov
loop
popf
shrl
add
or
xor
mov
nop
mov
testb
int
mov
sub
adc
mov
cmp
nop
jle
std
sub
test
dec
pop
rorb
cs
pusha
xlat
sbb
ja
mov
xchg
adc
cmc
dec
popf
cmp
mov
mov
roll
outsl
jns
int
jne
lea
dec
adc
sub
out
xor
sbb
add
adc
pop
or
xor
fdiv
gs
leave
or
add
cs
pop
xchg
mov
fnstenv
in
mov
ret
add
jp
adc
dec
jnp
sbb
cmp
xor
mov
lcall
fdivrp
push
adc
cmp
test
mov
test
mov
shl
in
aas
cltd
adc
sbb
aam
fs
mov
loop
pop
loope
xchg
jbe
mov
stos
inc
add
xor
add
inc
into
pop
pop
push
add
pop
jae
and
adc
inc
int
dec
jmp
fcos
xchg
leave
pusha
and
addl
jp
jp
loope
in
add
add
aaa
mov
sub
pushf
ljmp
rcrb
sahf
mov
aam
mov
es
bound
and
dec
dec
gs
pop
xchg
cmp
pop
xor
cmp
mov
aam
mov
fbld
cli
push
rolb
cld
mov
iret
dec
cmp
popf
sub
mov
pop
in
cmp
std
jne
lahf
sub
mov
ja
cmpl
insl
cmc
inc
push
sub
into
pusha
orl
jge
or
outsl
mov
dec
lods
call
xor
insb
push
push
pop
aaa
push
push
out
push
sub
mov
add
xchg
and
adc
jae
pop
out
bound
cmp
icebp
sarl
mov
fwait
bound
xor
and
call
test
cltd
mov
pop
cs
dec
daa
inc
jge
mov
jo
xchg
test
or
adc
add
les
mov
xchg
or
pusha
insl
xchg
pop
jnp
adc
cmp
xchg
push
cmpsb
stos
into
rorb
adc
push
je
mov
xchg
xchg
lods
dec
add
push
mov
xor
jmp
or
xor
xor
cmpb
shll
insl
movsb
xor
push
cmc
dec
pop
add
push
or
cli
fmuls
bnd
cmp
push
sub
sbb
mov
add
es
add
xor
or
fcmovb
pop
or
repnz
mov
pusha
cli
in
icebp
das
pop
sub
fadd
jo
adc
mov
jbe
fwait
insl
inc
push
push
ficoms
jle
loop
jbe
sti
test
xchg
pop
iret
mov
sub
sub
push
repz
pushf
pop
ja
and
push
das
popf
mov
shlb
fdivrl
pop
push
push
cltd
xor
mov
push
int
mov
jmp
fiaddl
stos
dec
in
mov
in
adc
adc
push
cmp
inc
jg
popf
lods
es
cmp
lods
adc
jne
fldt
frstor
inc
out
xchg
dec
jne
lcall
clc
in
cs
sbb
aad
mov
mov
cwtl
jl
jle
fildll
lods
and
jmp
sysret
and
jno
jl
insb
out
add
sub
fidivl
jb
cli
out
inc
sbb
out
xor
mov
ss
insb
fildll
popf
sbbb
pop
outsb
ss
sub
and
sbb
frstor
add
push
xchg
imul
test
gs
mov
daa
fs
scas
adc
aad
jp
add
jecxz
shlb
xchg
adc
mov
arpl
lods
stc
adc
xchg
inc
cwtl
mov
mov
cmp
inc
xor
xlat
sub
in
xor
into
xor
pop
js
sbb
mov
outsl
mov
fucomp
xchg
push
sbb
add
nopl
jmp
lods
mov
pop
hlt
push
mov
jnp
loope
dec
loope
inc
in
aas
mov
lret
sub
dec
pop
sub
push
pop
or
std
push
jg
pop
mov
out
jecxz
fnsave
dec
inc
or
mov
lcall
gs
mov
leave
mov
les
hlt
push
jbe
adcb
xor
cltd
pop
push
sbb
mov
sbb
je
sbb
fstl
jge
ret
jns
sub
inc
jns
sub
and
pushf
int
dec
push
add
xchg
mov
lods
mov
aam
ds
cmc
out
imull
insl
int3
rcrl
or
mov
mov
inc
out
mov
or
xor
ds
lret
mov
ret
mov
ljmp
add
xlat
sbb
cmp
fidivs
mov
push
mov
addb
pop
lds
mov
popf
mov
cmp
pop
pop
pop
test
in
push
jo
inc
sbb
in
jb
jb
leave
push
mov
and
mov
nop
jns
cltd
or
mov
cmp
lock
repz
xchg
add
xchg
jne
adc
add
sti
xchg
xchg
out
aaa
loopne
jnp
sub
dec
js
pop
imul
popa
mov
in
outsb
loop
loopne
imul
cmpsl
mov
or
xlat
pop
pop
test
dec
ljmp
dec
mov
addb
insb
aaa
into
sahf
lcall
icebp
xchg
jecxz
ficompl
add
les
or
cmpsb
jnp
lea
fnstenv
adc
test
dec
adc
jo
and
push
mov
pop
insb
and
int3
lret
jno
cli
js
push
stos
and
ficompl
sub
push
push
std
dec
push
xchg
sarb
jg
mov
inc
scas
std
hlt
sti
pop
adc
xchg
push
je
and
mov
pusha
testl
sti
xchg
push
mov
insb
cmp
lods
sub
sbb
mov
rorb
and
push
movsb
mov
scas
and
jo
daa
shr
pop
jae
test
or
xchg
jno,pt
mov
xor
dec
pop
add
lods
sub
fistpll
fsubrp
icebp
inc
pop
and
addr16
mov
or
jg
jo
movsl
mov
mov
sub
sbb
ror
shlb
jbe
pop
out
minps
je
jg
imul
into
push
fwait
seto
in
jge
fcmove
pop
fstpl
movsl
jp
xlat
cmpsb
xchg
mov
mov
adc
sahf
call
lea
add
lea
pop
cwtl
out
leave
jl
sahf
nop
fstl
out
cmp
outsl
cld
mov
mov
mov
cmp
cmpsb
fwait
pop
push
adc
stc
cmp
and
sub
pop
and
dec
jp
mov
push
enter
lock
test
call
clc
xchg
add
out
inc
or
mov
jbe
int3
sub
lods
sbb
add
xor
dec
cli
js
xchg
mov
into
sbb
or
push
jbe
fdecstp
test
mov
aad
xchg
xchg
insl
inc
xchg
mov
iret
das
inc
dec
pop
cmpsb
dec
mov
mov
mov
shlb
fnstsw
mov
shrb
or
cltd
int3
dec
inc
xor
xchg
pop
or
imul
jl
bound
mov
mov
pop
call
push
pop
mov
cli
in
adc
and
std
imul
jp
std
aas
push
dec
push
mov
iret
fdivl
adc
and
add
cmc
or
rolb
push
dec
or
and
or
lods
sub
mov
ret
inc
xor
iret
push
ret
xor
aaa
cltd
mov
stos
and
mov
jno
call
in
inc
pop
imulb
adc
mov
fwait
insb
mov
in
pop
out
es
mov
add
pop
dec
sti
push
or
mov
cmp
cmp
mov
ds
lahf
std
adc
or
add
push
jbe
jne
fs
or
push
cmp
xor
lea
cli
mov
push
enter
mov
xchg
xchg
jmp
cmp
arpl
lahf
repz
push
ljmp
or
loopne
arpl
cmp
lahf
mov
fst
push
pop
sahf
jnp
subb
xchg
and
inc
icebp
adc
add
dec
shll
in
out
lret
bound
add
jbe
shl
lods
pop
mov
pop
rcr
int3
or
mov
jl
fdivrl
sahf
push
jb
adc
push
loop
mov
cs
mov
stc
stos
xor
test
inc
sti
push
loope
add
inc
add
sbbl
in
setle
xchg
fisubrs
mov
sbb
cmp
out
adc
mov
movsb
ret
bound
xor
push
xchg
lcall
jl
jno
sub
roll
or
mov
adc
cwtl
std
test
and
sbb
xor
arpl
jle,pn
pop
in
in
les
aas
lds
and
sbb
push
inc
push
outsb
add
sub
mov
shll
push
mov
mov
inc
fnsave
xchg
addr16
xchg
cmp
ja
xchg
gs
jl
loope
cmp
imulb
xor
mov
push
js
adc
pmaddwd
sbb
jb
test
repnz
shrl
or
cmpsl
add
pop
inc
mov
aas
pop
mov
fdivrs
xchg
pop
scas
ja
icebp
insb
inc
popf
and
fildll
andl
sub
mov
lret
lea
inc
lds
push
adc
or
cli
inc
and
aaa
ja
push
inc
or
fsubrs
pop
ret
lahf
cmp
cmc
mov
pop
sbb
lock
lods
lret
test
jmp
cmpsl
sahf
in
pop
inc
es
int3
push
inc
fldcw
out
add
add
or
inc
orl
popa
data16
xchg
loopne
dec
sub
fisubs
or
cmp
int
outsl
nop
daa
mov
adc
mov
fstps
cmp
mov
or
pop
cltd
adc
sub
sub
xchg
add
add
imul
pop
cmp
rolb
cltd
insl
dec
loop
mov
imul
cli
jo
sub
dec
cmpsb
pop
test
mov
pop
mov
and
pop
movsl
ss
fistl
rcrl
jne
les
lds
xchg
mov
fnstenv
gs
ret
xchg
arpl
shlb
xchg
es
sub
xchg
jnp
cmp
lds
and
cwtl
adc
in
mov
or
iret
hlt
inc
or
into
loope
xchg
xor
cmp
sbb
dec
shr
mov
fistpll
xchg
sbb
test
sbb
dec
xchg
ss
cli
xor
adc
cmpsb
lods
mov
mov
inc
add
rep
fcoms
inc
ret
pop
jae
dec
mov
push
pop
insb
cmp
insb
sub
and
dec
pop
or
pop
mov
scas
fs
lret
mov
mov
xchg
test
aaa
lods
lock
push
inc
scas
loopne
xchg
add
stos
pop
or
push
sub
sbb
cmp
call
add
jno
repnz
rolb
lea
xchg
idivl
es
cbtw
test
mov
pop
add
xor
ficompl
mov
leave
xchg
jnp
jge
sub
imul
lea
mov
imul
push
cmp
push
imul
adc
adc
repnz
sbb
test
sbb
pop
add
les
jg
fidivrl
or
jb
inc
insl
mov
aaa
mov
dec
test
movsb
movsl
int3
gs
xchg
insl
add
adc
pop
jnp
and
insl
mov
icebp
jge
jp
cmpsl
loopne
or
jp
sti
imul
cltd
fisttpll
clc
and
xchg
fs
nop
push
sahf
orb
mov
mov
aas
out
rcl
and
sub
adc
in
div
mov
les
dec
push
mov
pop
jecxz
cli
xchg
cmc
jecxz
push
stc
fisubl
cltd
int
inc
xchg
mov
push
push
roll
jge
lock
dec
and
in
int
sub
xor
xchg
test
mov
in
lret
xlat
jecxz
or
push
icebp
mov
out
cli
arpl
lock
pop
jle
lods
mov
mov
outsl
mov
andl
shrl
popf
mov
mov
gs
xor
insb
sti
orl
and
stos
dec
outsl
bswap
in
fimuls
imul
push
imul
push
fwait
out
int
movsl
mov
dec
cld
lds
jp
outsb
pop
dec
pushf
or
jnp
hlt
lods
hlt
mov
mov
mov
cmp
cmpsl
cli
test
das
cmp
xor
movsl
idivb
in
push
mul
nop
das
pushf
repz
int3
and
mov
insb
lret
cld
test
or
mov
lds
fldcw
sub
mov
leave
shrb
rolb
jns
mov
out
xor
test
sub
xor
insl
dec
call
sub
push
testb
mov
mov
insb
ret
pop
ljmp
cld
xchg
dec
fwait
ret
xchg
andb
xor
xor
aam
jl
pop
jecxz
jmp
xchg
repz
adc
ja
mov
es
push
sbb
xchg
push
and
test
push
bswap
pop
and
mov
fsubrs
and
shrl
and
push
scas
stos
cmp
lret
cld
add
loop
lar
stc
mov
rcl
push
fnstsw
out
insb
add
dec
fsubrl
inc
mov
ret
cwtl
subl
jle
lock
loop
testl
cmpsb
add
pop
sub
cltd
das
sbb
mov
or
mov
jl
sub
fldenv
cmp
repnz
fbstp
lock
inc
and
ds
and
in
test
sbb
jmp
loopne
pop
notb
xchg
insb
and
repz
pop
and
cs
subb
inc
jle
decb
insb
add
sub
mov
rcrb
inc
int3
sub
lahf
mov
pop
loop
pop
notl
lods
sub
inc
std
dec
sti
arpl
xchg
mov
jge
ds
and
cmp
mov
cmp
xchg
outsb
or
rorl
pop
mov
mov
les
sbb
icebp
fmuls
mov
idivl
xchg
adc
sbb
pop
int
mov
popf
nop
in
stc
push
les
or
shll
stos
mov
cwtl
bound
in
jbe
insb
mov
pop
mov
cli
inc
and
mov
fbld
and
add
arpl
or
xchg
rcl
repnz
adc
dec
push
mov
cmp
sbb
ret
push
imul
mov
pop
arpl
jle
push
out
mov
adc
jne
outsb
jb
lahf
xor
mov
xlat
pop
cmp
mov
and
cwtl
push
lretw
mov
sbb
in
jne
xchg
enter
lret
mov
and
adcl
lock
in
idivl
adc
jae
mov
or
rcr
fld
iret
cmp
xor
or
inc
mov
vpsubw
cmc
stos
push
xchg
nop
jl
rcr
xchg
ffreep
out
cld
and
adc
or
aas
test
pop
push
lahf
daa
idiv
cmp
cmp
pusha
stos
sahf
mov
in
add
inc
sbbb
mov
xchg
xor
dec
dec
jge
add
rcrl
jle
cmp
lcall
xor
cwtl
and
push
cmp
in
jno
cmpsl
cmpsb
mov
fbstp
jno
dec
into
into
adc
and
movsl
cltd
push
cli
xchg
mov
cmc
push
jb
or
dec
xchg
jbe
ds
push
sbb
sahf
mov
push
or
shl
lea
cmp
mov
xchg
and
fildl
leave
xlat
cmp
lret
pop
in
cmp
movsl
mov
push
mov
orl
sub
sbb
aad
sbb
xchg
rcl
insb
sbb
fsts
data16
mov
das
das
aaa
mov
test
or
mov
adc
mov
js
dec
shrb
xor
rcrl
ret
pushf
mov
not
mov
or
xor
add
push
mov
or
fxam
js
adc
adc
xor
sbb
int3
inc
mov
fucomi
or
test
test
leave
add
mov
loopne
add
fdivl
lret
and
cs
jno
loope
jg
ret
lods
test
das
icebp
js
lods
or
jns
stos
je
arpl
cmpsb
stc
or
popf
xor
mov
les
lds
push
or
mov
mov
mov
shrb
movsb
ret
and
cli
adc
ret
call
pop
mov
inc
dec
lret
nop
std
jg
push
mov
xor
cmpsl
mov
push
jo
insb
cmp
icebp
mov
test
pop
int3
push
mov
inc
adcl
and
mov
leave
js
jl
xchg
sub
inc
mov
scas
mov
add
aam
les
push
psraw
loopne
ds
imul
pop
stc
lock
rorb
std
and
sub
push
divb
outsl
shr
fisubrs
mov
mov
pop
inc
mov
xchg
adc
ds
mov
push
out
rcll
icebp
jle
lock
add
testl
pop
adc
dec
dec
aad
ficompl
lods
cmpsl
or
pop
jnp
cmpl
push
ret
cmp
dec
pop
bound
in
ret
popf
cmp
jle
int
shlb
dec
loopne
push
adc
xor
dec
pop
mov
data16
sbb
jge
ret
out
js
iret
into
enter
push
jp
mov
stos
mov
xor
xchg
scas
jno
and
jmp
daa
jns
repnz
xchg
imul
mov
fcomip
es
or
popa
shl
fistl
fwait
sub
mov
inc
xchg
mov
mov
xor
icebp
into
push
or
mov
push
mov
lcall
or
jno
jle
xorb
aaa
testl
outsl
or
loopne
mov
int3
cwtl
push
cmpsb
cmp
sub
xor
mov
push
repnz
fsubr
adc
push
sub
aas
inc
std
xchg
adc
aaa
dec
xor
pushf
shlb
ret
insl
rcr
hlt
push
dec
sbb
iret
inc
lahf
icebp
xchg
popa
xor
into
outsb
aaa
xchg
loope
addl
mov
ret
inc
negb
cld
xlat
out
ss
clc
jmp
inc
add
cli
mov
cmpsb
xor
sub
ja
fs
andb
push
mov
shr
insl
call
xchg
mov
pusha
ja
rorl
sbb
jbe
scas
jno
lcall
and
jg
inc
dec
jecxz
add
stc
adc
sbb
addr16
jle
cmp
mov
ljmp
sahf
xor
lea
and
push
xor
pop
adc
pop
and
adc
hlt
jecxz
jmp
dec
jl
out
movsb
push
es
int
out
into
test
sbb
subl
adc
popf
outsl
push
pop
cwtl
cmp
frstor
fisttps
pop
loopne
mov
aaa
inc
addr16
loopne
xor
mov
rorl
and
std
loopne
pop
flds
and
mov
pop
pop
idivb
out
dec
inc
loopne
mov
dec
dec
fldt
jge
or
sbb
xchg
add
enter
faddl
inc
loopne
sub
jp
cwtl
mov
fwait
inc
dec
xchg
insl
aad
cltd
or
daa
fiadds
lods
push
andb
idivl
repnz
lahf
xorb
inc
les
jae
imul
leave
pop
dec
arpl
into
cmpsb
jno
push
outsb
pop
pop
xchg
fsubl
or
cmp
xchg
icebp
scas
lds
mov
testl
xchg
dec
out
sahf
push
fdivr
add
push
inc
fisubrs
fmul
imul
lods
enter
or
out
mov
movsl
or
adcl
in
mov
mov
leave
pop
sub
xor
mov
movsb
js
inc
leave
cwtl
test
xor
sahf
xchg
cmp
mov
jle
push
addr16
jnp
mov
mov
push
mov
int
push
mov
pop
sarb
inc
xchg
out
loop
je
adc
inc
and
fmulp
das
xor
xorb
addb
pop
sbb
data16
insb
cmpl
add
dec
xor
mov
in
adc
into
popa
xor
cmpsl
xchg
jae
adc
xchg
xchg
sbb
scas
add
es
pop
mov
aam
js
xlat
jl
cs
inc
xor
das
jg
lret
dec
sub
test
stos
lds
shrl
loope
xchg
lret
cld
mov
jb
in
nop
sbb
cmp
mov
cmpsl
sub
mov
cli
incb
and
test
inc
and
inc
pop
jle
mov
clc
std
das
xorb
mov
aad
popa
xor
fs
test
add
popa
cmp
stos
cs
rcrl
out
cmp
xor
sbb
std
sbbl
xchg
addb
or
adc
std
cltd
cmpsl
pop
mov
jns
sub
mov
xchg
in
cmp
add
mov
sbb
sbb
popa
fwait
repz
scas
aam
jmp
push
jle
aam
push
lret
ljmp
sbb
sarl
sahf
dec
movsl
inc
adc
int3
daa
lock
fwait
push
stos
inc
pop
mov
mov
sahf
push
pop
out
je
mov
leave
roll
add
mov
aaa
xor
orl
mov
fnstenv
lods
inc
cwtl
mov
and
inc
xor
sub
movsl
jae
out
addr16
shl
cmp
cmp
dec
inc
mov
mov
adc
repz
out
sbb
jp
mov
loopne
jbe
adc
jmp
bound
xchg
sti
push
aaa
sbb
cmpsb
cmp
cltd
add
popf
inc
dec
pop
jb
cmpsl
adc
daa
in
or
dec
sbb
inc
push
gs
adc
add
cmpsb
mov
push
jmp
xchg
inc
cmc
push
bound
mov
push
jo
in
inc
mov
aam
xchg
add
adc
sbb
loope
fcomp
out
into
sahf
out
push
adc
add
loope
xchg
push
push
mov
xor
add
das
sbb
pop
popf
repnz
arpl
fwait
or
or
ficoml
lods
jge,pt
iret
pop
add
jmp
push
inc
push
xor
imul
cli
hlt
cmpsl
das
cmp
les
in
dec
into
fdiv
jmp
scas
pop
sbbl
fmuls
sbb
test
xor
fisubrs
mov
xor
add
das
mov
sub
loop
loopne
sub
and
lcall
inc
in
pop
dec
lock
or
sub
das
xchg
xchg
mov
sub
adc
lcall
xor
add
cmp
jbe
imul
sbb
jecxz
test
jl
out
addr16
cli
push
mov
add
outsb
ja
int3
jg
sbb
loop
jp
aaa
iret
or
jle
lods
push
test
fiaddl
mov
and
insl
mov
mov
icebp
jne
dec
push
mov
fsubrs
adc
dec
mov
cmp
out
jo
repnz
dec
stos
inc
inc
popa
and
pop
dec
inc
lcall
cwtl
or
jecxz
jl
mov
sub
sbbl
bound
push
mov
jo
push
sbb
sub
sub
lahf
arpl
sbb
cmpsb
mov
popa
mov
scas
fs
aaa
sbbl
lods
mov
lea
cmp
dec
or
sbb
push
test
scas
sub
sub
mov
test
sbbl
out
fiadds
add
repz
and
inc
mov
loopne
fcoms
cld
sub
sbbl
mov
into
les
xchg
cmpsb
vsubsd
or
dec
icebp
shlb
dec
repnz
daa
jle
shlb
fiadds
out
andl
or
xor
addr16
lea
xor
mov
test
les
mov
imul
xor
in
and
dec
popa
push
xor
loopne
mov
out
xor
ljmp
gs
pop
dec
adc
push
shll
lods
arpl
ja
inc
mov
repz
pop
das
xchg
std
add
lcall
inc
cltd
dec
xchg
and
ljmp
sti
shr
sbb
inc
adc
mov
cltd
lret
jp
ss
clc
xchg
fwait
pop
leave
fldenv
cmpsl
and
fsubs
imul
fisubrl
fmull
das
scas
cmp
jle
mov
and
gs
into
inc
jge
out
mov
ja
int
push
cmpsb
pop
xor
add
les
fsubrs
inc
lret
xchg
mov
stc
popa
mov
lret
push
mov
inc
cltd
shrl
add
push
ret
mov
xlat
push
js
fld
pop
or
les
cmp
pop
jp
xchg
dec
bound
loope
pop
jg
cmp
ds
and
push
or
inc
pop
xor
rorl
orb
ja
sbb
xchg
das
int
and
mov
xor
push
lahf
lods
repnz
or
leave
add
popa
jns
or
push
xchg
decb
push
popf
mov
cmpsb
push
cmpsb
and
sub
cmpb
xlat
icebp
outsl
andl
fs
jle
dec
scas
push
sti
mov
cmp
repz
lret
lahf
stos
popf
fcmovne
and
and
and
and
pop
orb
insl
dec
fbld
adc
leave
xor
sub
mov
sbb
xor
sub
dec
lods
jo
sub
loopne
ret
insb
fcoms
adc
iret
push
insb
lock
ljmp
stc
dec
sub
and
and
adc
dec
xlat
test
arpl
out
lods
inc
adc
lds
mov
jae
add
nop
out
sub
lods
pop
jg
jno
mov
test
lahf
test
sahf
push
mov
jno
and
in
fbld
lcall
pop
hlt
aam
repz
aam
divl
daa
mov
sti
insl
and
add
mov
or
sbb
xor
fldpi
cmp
lods
test
outsb
int3
jg
jo
fidivrs
xlat
dec
cmp
std
cltd
and
mov
mov
xor
mov
int
sbb
lcall
xor
pop
sub
xor
call
das
pop
cs
sbb
jp
shrd
lods
icebp
sarb
dec
js
jge
ficomps
xchg
jnp
in
rcr
fsubl
mov
cmpsl
push
or
int3
sbb
incb
and
add
vmovdqa
xchg
out
xchg
lret
xor
push
test
aad
dec
popa
fcmovnb
sbb
cmc
stos
sar
jae
mov
xor
lcall
sbb
pop
push
scas
shrl
jae
jb
stos
xchg
cld
xor
cmpsb
sbb
imul
imul
xor
adc
in
shll
pop
add
pop
sub
adc
fists
lods
inc
add
mov
arpl
mov
sbb
sar
cmp
push
xchg
xor
fldenv
gs
mov
xchg
outsb
sbb
xchg
dec
cmp
pusha
mov
fidivrs
mov
lret
xor
mov
shll
mov
mov
in
andl
stos
mov
xchg
xor
mov
lock
hlt
cmp
adc
shl
cmp
dec
add
fucomp
cmp
mov
adc
out
or
lret
aaa
inc
das
xor
popa
jmp
mov
push
je
or
cmp
jl
into
js
cmp
xchg
std
dec
push
shl
jo
and
lds
dec
xlat
scas
shrw
loopne
jp
lret
out
insb
out
xchg
stos
aas
cld
outsb
fwait
add
mov
jbe
jmp
ljmp
xor
nop
cmp
sub
sbb
jp
mulb
mov
push
and
jmp
mov
push
inc
xchg
jne
les
push
inc
ja
ja
jne
int3
jmp
sbbl
inc
mov
out
add
shl
test
repnz
enter
out
test
lahf
jno
adc
in
add
scas
xor
cltd
ret
sbb
lcall
jbe
ret
sub
mov
add
sbb
mov
lock
pop
xor
jb
and
jmp
std
pop
bound
dec
repnz
cmp
pop
jae
push
arpl
sbb
mov
cmp
pushf
inc
call
es
push
inc
out
rep
cli
test
jp
test
dec
sti
mov
dec
adc
inc
mov
jmp
push
mov
and
mov
jmp
add
add
dec
mov
mov
in
jge
outsl
adcl
jns
xor
cs
inc
push
pop
stos
jmp
pop
stos
outsl
jb
xchg
stos
mov
xor
stc
adc
stc
sar
sbb
push
loopne
or
xchg
or
push
out
int3
pop
in
mov
in
jmp
jmp
icebp
mov
xchg
outsl
insb
xor
lret
or
mov
call
repnz
mov
out
sub
adc
mov
ljmp
jbe
repz
stos
dec
insl
add
out
mov
addr16
test
jecxz
xor
xchg
rol
sbb
popa
xchg
jecxz
xchg
add
out
out
xchg
incb
ret
fcomps
adc
stos
hlt
loop
jl
adc
mov
das
ss
rcr
lds
scas
or
mov
outsb
js
add
movsb
or
insb
outsl
pop
add
dec
out
ret
mov
leave
sub
or
inc
and
neg
push
mov
mov
or
push
mov
in
xchg
movsb
mov
aad
push
out
and
sub
inc
rolb
es
push
lds
lret
pop
sbb
and
pop
pop
lahf
shrl
push
dec
sub
out
cmpsl
mov
add
out
lret
pop
mov
mov
cmp
pop
mov
push
sbb
cmp
jb
popf
sub
mov
mov
ret
outsb
sub
icebp
mov
dec
in
add
mov
mov
sub
jbe
jne
fisubrs
std
clc
mov
xor
jecxz
mov
xchg
loope
sub
repz
daa
test
insb
push
icebp
push
push
cmp
cmovle
mov
push
and
cltd
pop
fucom
outsl
aad
cli
mov
mov
inc
or
adc
push
fsubr
fwait
cwtl
das
or
out
xor
fcmovb
jbe
pop
and
scas
popf
adcb
stos
jbe
cmp
add
and
movsl
and
add
sbb
mov
sarl
cmp
sub
cmp
call
enter
dec
mov
mov
jecxz
add
lods
xor
sbb
jnp
sub
fdiv
ja
incb
popf
sub
ret
sub
jl
pop
sub
push
in
ret
data16
pop
pop
push
sub
jnp
in
mov
test
sub
adc
popf
and
subb
imul
pop
inc
inc
pop
pop
enter
and
add
js
sub
cmpb
adc
das
packsswb
loopne
out
sub
jp
dec
cwtl
or
negb
iret
jne
sub
movsb
jmp
mov
adc
enter
add
xchg
imul
sbb
aam
lock
mov
outsb
loop
dec
fbld
imul
ret
je
je
sbb
lods
pop
hlt
ds
xor
nop
repnz
cld
adc
lret
push
ljmp
fsubrs
cmpsl
jp
sbb
mov
popa
add
cmpsl
pop
in
adc
inc
push
mov
mov
pop
aam
xchg
xchg
add
mov
adc
sbb
in
lods
popf
xlat
outsb
mov
pop
lods
cmc
mov
ret
repz
mov
les
push
cli
and
icebp
jns
fucomi
aas
lcall
sub
mov
notb
std
mov
int
inc
push
inc
inc
and
jp
pop
icebp
rcrb
and
dec
sbbb
mov
ret
mov
sub
outsb
adcl
mov
mov
xor
xchg
sub
fcoml
cmc
push
mov
add
enter
and
or
cmp
stos
es
rclb
add
jnp
pop
push
aas
stos
jne
sbb
stc
push
aas
fadd
popf
lcall
dec
lods
inc
jp
test
sub
pop
shl
push
rcll
inc
lock
cmp
push
adc
lods
data16
xor
xor
mov
ficoml
dec
or
rorl
lahf
pop
jge
inc
pop
push
jge
xchg
dec
out
sbb
stos
rclb
inc
push
jae
data16
push
leave
xor
imul
prefetchw
repz
mov
cli
dec
testl
dec
jg
dec
push
daa
add
pushf
xor
mov
mov
pop
leave
popf
fwait
sti
cmp
and
cltd
call
mov
adc
outsb
xor
out
in
loop
iret
mov
outsl
push
fsubs
test
adc
in
in
cmp
mov
dec
push
shrb
mov
inc
mov
into
xor
dec
add
and
push
fwait
rcl
lret
pop
push
push
mov
clc
loop
lods
pop
es
out
imul
rorb
fmull
test
iret
loop
addl
adc
xchg
jbe
mov
mov
ja
and
loope
popa
jae
sub
out
fmul
cli
inc
lret
add
scas
push
push
xor
icebp
mov
stos
int
in
out
xchg
cmp
mov
or
stos
scas
xchg
adc
add
cmpl
lret
lock
cmp
xchg
out
in
dec
jns
pop
cmpsb
push
fwait
shl
enter
jns
cmp
cmp
cli
mov
nop
daa
adc
nop
dec
cmpb
int
pusha
push
gs
jmp
xor
or
or
test
repz
sbbb
dec
loop
int3
mov
ret
gs
iret
sbb
mov
sub
sahf
mov
mov
orl
dec
sub
shr
cmp
mov
fbstp
lret
das
sub
xchg
pop
rorb
movsb
mov
nop
mov
sbb
scas
pushf
cmp
pop
fldcw
or
stos
push
jns
inc
or
push
sub
inc
fisubs
cwtl
cmc
gs
fimuls
shl
xor
jle
add
sbb
add
cli
push
das
sbb
cmp
cli
push
cmp
loope
xlat
andl
or
xchg
adc
sbb
popa
inc
iret
loope
adcl
sahf
cmc
sbb
push
call
sbb
xchg
mov
add
shr
xchg
inc
popf
push
cmp
stc
je
rcl
push
ljmp
ret
in
inc
lods
insb
add
sbb
dec
push
leave
stos
mov
imul
dec
repz
mov
push
les
out
xchg
in
fstpt
aas
xacquire
or
sub
xchg
hlt
iret
andb
xchg
pop
outsb
pop
cmp
dec
pushf
ljmp
sub
ret
xor
push
add
iret
movsl
and
imul
push
sub
mov
push
sub
pop
mov
out
je
mov
inc
test
xor
lcall
dec
mov
or
jmp
mov
sbb
push
ret
mov
inc
add
sub
jecxz
dec
movsb
fisubrs
pop
jg
cmp
lea
lret
shrb
das
inc
negl
ss
sahf
cmpsb
cmp
in
sbb
les
fcomip
xor
addl
mov
pusha
fcmove
cmp
loope
and
sub
out
popa
adcl
push
fs
dec
sub
in
or
std
adc
and
mov
push
data16
pop
jo
jp
sbb
cli
mov
mov
jb
addl
mov
cli
xchg
mov
aad
sub
sbb
loopne
inc
in
movsl
jno
je
shlb
dec
add
mov
add
in
pop
sbb
push
xchg
xchg
mov
or
pop
ss
lea
adc
outsb
mov
add
mov
dec
and
sbb
leave
mov
pushf
xor
in
mov
out
js
test
test
scas
mov
sbb
push
cmp
jb
arpl
mov
fnsave
imul
push
sub
xor
bound
jo
or
lahf
cmp
jg
fcmovbe
es
and
jp
in
jno
add
ja
fbstp
push
fisubl
adc
je
out
stos
inc
and
lret
sbb
std
push
pusha
aad
pop
cwtl
inc
adc
test
les
shrb
iret
fmul
dec
pop
cli
stc
push
outsl
repz
jmp
shrb
outsb
std
mov
xlat
adc
pop
aas
insl
add
and
xchg
inc
pminsw
in
push
and
mov
jl
mov
inc
jns
mov
jg
call
icebp
scas
and
cltd
mov
mov
filds
jne
xor
push
popf
xor
cltd
push
std
lahf
test
jae
insl
add
xor
notl
aas
sub
ljmp
jne
mov
insl
shl
xchg
aad
hlt
cltd
fdivp
or
cmp
je
stos
jno
dec
inc
in
inc
rcrb
rorb
and
sub
pop
test
stos
call
jns
xchg
add
push
dec
xchg
dec
push
add
jo
stc
mov
mov
ret
ret
out
adc
testb
lods
xchg
dec
ljmp
mov
rorb
mov
test
icebp
mov
pop
jns
push
mov
xor
daa
dec
andl
pop
aas
or
adc
xor
pop
cmp
hlt
dec
cmp
or
ret
jae
nop
dec
scas
adc
decb
mov
rclb
daa
dec
rclb
popf
push
inc
out
ficoms
pop
addl
add
test
out
imul
shr
xor
mov
adc
dec
mov
icebp
sbb
inc
mov
js
dec
clc
stc
les
or
lret
addr16
inc
imul
jl
inc
rcrb
in
inc
mov
loopne
jb
pop
pusha
aaa
mov
add
pop
jno
and
cmpsb
jg
adc
insl
jns
test
sbb
xor
inc
out
mov
push
sub
cmp
add
adc
inc
xchg
jecxz
mov
stos
pop
movsb
mov
lret
loop
je
leave
xchg
adc
ss
mov
mov
push
dec
icebp
imul
xchg
add
fidivs
enter
shrb
and
fiadds
sub
sahf
adcl
mov
jbe
or
int3
or
inc
fadds
jge
std
je
mov
iret
fmuls
jns
retw
pop
cwtl
je
sub
shll
leave
lods
inc
sahf
and
aaa
lret
lcall
cltd
push
in
mov
mov
pushl
dec
and
push
cltd
xchg
pop
iret
out
sbbb
insb
rcll
pushf
push
cmp
lret
ds
mov
mov
jno
in
das
mov
cmp
aad
sbb
sub
push
lea
mov
push
aam
mov
insl
add
lods
mov
loopne
push
mov
lcall
pop
xor
xor
fidivrs
push
aad
push
lahf
pop
repz
mov
and
dec
and
popf
clc
mov
shll
add
sub
movsb
andb
xchg
push
or
pop
shl
adc
sbb
loopne
movsl
js
cli
test
jecxz
adc
xchg
rclb
inc
push
pop
and
jb
mov
sarb
cmp
mov
mov
jecxz
xchg
cmp
push
pop
sub
jge
hlt
mov
cmc
lods
in
add
pop
or
jb
sub
cmp
pop
inc
lret
add
xor
out
jmp
pushf
xor
pusha
xchg
idivb
mov
fs
lret
inc
fs
pop
inc
mov
cmp
in
xor
cmp
adc
adc
loop
xor
cltd
mov
out
and
shl
sbb
stc
int3
dec
mov
mov
adcb
insl
add
sbb
mov
rcl
imul
stos
dec
add
jl
movsl
cmp
inc
pop
push
aas
dec
push
add
inc
out
jne
and
sbb
mov
sub
push
jmp
adc
bound
cmp
or
imul
add
clc
mov
mov
mov
jnp
adc
jbe
dec
pop
jecxz
jae
and
pop
xchg
mov
out
jmp
popf
or
shlb
jmp
and
or
jns
cmpsb
cs
adcl
sahf
adc
out
push
icebp
jo
pop
cmpsb
insl
ja
mov
pop
mov
mov
lds
mov
pop
cmp
push
push
sub
lods
sbb
insb
add
ja
fisttpl
push
gs
push
out
lret
test
mov
test
jg
lea
ljmpw
cmp
scas
mov
xor
in
xchg
stc
push
inc
movsb
mov
ljmp
cmp
testb
mov
sbb
fisttpl
mov
jb
and
push
pop
add
scas
std
jne
lret
and
cwtl
adc
cmp
fwait
icebp
mov
cwtl
lods
xor
and
cmp
scas
mov
dec
push
push
jno
pop
add
cmpsb
les
leave
xor
inc
call
clc
cwtl
and
sbb
jle
inc
cmp
xchg
mov
pushf
scas
push
adc
out
aas
jo
in
dec
movsb
test
pop
sahf
outsl
or
fucomip
inc
pop
sub
stos
inc
jmp
cmp
mov
loopne
push
adc
lahf
sbb
icebp
ret
sbb
xlat
clc
push
enterw
repz
mov
jp
inc
push
rorl
inc
xor
dec
bndldx
jl
and
mov
mov
cmpsb
int
xacquire
xor
test
sahf
repz
xchg
mov
out
jmp
and
mov
mov
pop
cmp
icebp
clc
ja
sub
nop
mov
and
cltd
jns
inc
cmp
rclb
push
lods
and
ljmp
icebp
push
add
insb
or
das
lret
clc
iret
and
xlat
lea
lods
mov
fcoms
orl
jge
sub
pop
dec
cwtl
inc
sub
insl
jle
xor
repnz
gs
ret
add
loop
and
sub
xor
jns
lcall
aad
dec
hlt
shrb
xchg
scas
jp
ja
cmpsl
lds
push
sub
mov
mov
sbb
je
out
data16
data16
loope
pop
int3
jo
push
cmpsb
push
xor
repz
insl
mov
nop
inc
aam
pop
fs
pushf
aaa
mov
imul
loope
in
fidivs
jg
pop
test
dec
fidivrl
xchg
pop
nop
adc
or
aam
xchg
xor
roll
icebp
loop
mov
push
inc
incb
mov
inc
pop
push
xchg
push
xor
dec
insw
sbb
call
pop
xor
sub
lods
sub
mov
hlt
cmc
js
adc
xor
pop
jg
add
dec
int
dec
sbb
push
inc
andl
jecxz
fs
adc
add
sbb
mov
out
cs
adc
add
rcrl
cld
push
fwait
dec
push
and
pop
cmp
jp
mov
ja
out
cwtl
cmp
stc
aaa
or
sbb
test
decl
stos
inc
sbb
fcmovbe
sbb
pushf
jno
popf
pop
fcmovbe
loope
pop
loop
ss
sub
mov
pop
fwait
lahf
mov
scas
icebp
adc
mov
addb
in
sbb
add
nop
push
lock
xor
xchg
ds
cmpsb
fsubl
mov
add
cld
inc
mov
hlt
dec
scas
icebp
cwtl
lock
in
mov
jmp
loopne
addl
jno
and
clc
stc
xchg
jl
xchg
sub
push
mov
ja
jno
je
ror
add
int3
fmull
nop
or
in
xor
popa
data16
sub
or
push
fmull
sbb
pushf
push
and
jmp
jg
or
xor
sbb
jp
lret
pop
lahf
addb
adc
sub
cmc
xchg
ja
push
shll
ja
out
loop
fwait
xchg
movsl
mov
dec
dec
jne
jecxz
sub
sub
inc
fdivrs
je
fnstsw
lcall
cmp
pop
sub
mov
mov
movsb
mov
adc
mov
sbb
mov
fdivs
or
inc
movsw
ds
icebp
jl
xor
lahf
mov
lret
aaa
adc
mov
mov
lea
adc
rorb
lock
rcr
call
xor
pop
lret
mov
or
insl
stc
dec
push
xchg
sub
add
sbbb
xchg
in
stos
mulb
inc
pop
test
lods
xor
push
inc
sbbl
out
inc
loopne
adc
push
jae
pop
enter
mov
cli
mov
and
adc
cltd
sub
mov
test
in
jbe
pop
nop
xchg
cmpsb
push
pop
aas
les
inc
lds
popf
mov
mov
xor
out
mov
lods
notb
cmc
push
movsl
loope
popa
adc
nop
lods
stc
repnz
sbb
pop
inc
insb
sub
mov
loop
xchg
xlat
in
orl
mov
xchg
mov
inc
shll
mov
or
ret
pop
movsl
jnp
add
pop
push
mov
lock
push
sahf
add
sub
fwait
dec
outsl
mov
roll
mov
pop
in
cmp
idivl
add
mov
jae
fs
jmp
lock
mov
bound
mov
and
leave
adc
mov
and
add
mov
test
inc
shlb
mov
fistps
pop
test
repnz
sub
lahf
add
adc
in
jae
das
fildl
imul
mov
scas
out
movsl
fildl
test
adc
outsl
push
mov
insb
sub
pop
arpl
pop
aas
xchg
sbb
daa
sbb
push
fstpl
filds
xchg
icebp
movsl
lahf
idivl
js
pop
imul
dec
jl
outsl
mov
lcall
jb
adc
enter
ror
repz
pop
fbstp
ljmp
mov
add
mov
cwtl
mov
pop
fwait
xchg
arpl
aaa
rclb
lock
and
bound
iret
cmp
mov
out
je
lret
push
in
xchg
dec
lret
outsb
cmp
and
mov
lods
cmp
imul
xchg
mov
jno
jecxz
fnstcw
add
mov
jmp
sarl
push
dec
in
addr16
dec
push
mov
push
dec
es
cld
in
loope
in
lret
jb
cmp
push
mov
push
mov
sbb
xchg
lahf
push
or
popf
adc
int
je
loop
jp
ljmp
mov
sbb
jns
fcomip
mov
add
cli
in
imul
dec
nop
or
xchg
mov
cmp
pop
aam
imul
gs
push
push
in
rolb
call
dec
push
movsl
mov
sbb
mov
cmp
mov
into
lods
ret
pop
fucomip
xchg
in
pop
xor
ffreep
pop
add
sub
push
bound
push
mov
pushf
dec
in
les
bound
xorb
test
sbb
cld
jmp
dec
les
lahf
icebp
stc
scas
xor
or
lods
push
push
xchg
and
in
int
scas
stos
jne
push
inc
movsb
or
fmul
cmp
aaa
stos
pop
shrb
dec
dec
pushf
repz
jae
push
sub
repnz
xchg
xor
push
icebp
xor
mov
lret
outsl
add
lahf
out
pusha
xchg
nop
mov
pop
xor
leave
xlat
sbb
adc
jnp
and
cmp
les
xchg
add
imul
sub
jo
js
add
add
adc
outsb
test
dec
jo
mov
loopne
inc
xlat
sbb
jg
dec
adc
leave
insl
dec
in
stc
leave
push
mov
push
sbb
xor
push
stos
call
push
xor
ss
out
test
add
mov
cmpsl
into
sub
pop
cmc
xchg
nop
adc
xchg
push
or
cltd
xor
lods
xchg
cmp
jge
je
sbb
mov
ss
mov
or
pop
jne
je
ret
push
mov
dec
test
xchg
bound
shl
mov
jge
xor
add
mov
cltd
pop
mov
in
lcall
push
fisttps
cmpsb
sti
inc
mov
lock
fs
push
sbb
dec
inc
jmp
loopne
mov
inc
jmp
push
sbb
mov
in
xchg
xchg
aam
shlb
int
ror
mov
test
lock
jae
shrl
push
call
or
pop
xchg
mov
pusha
aaa
mov
test
dec
ds
in
push
xor
pop
scas
adc
cmp
mov
and
jb
sub
add
pop
dec
scas
cmp
fists
fisttpll
scas
scas
mov
xchg
push
nop
inc
fbstp
push
jns
ror
mov
jnp
jmp
fildl
dec
jp
jne
outsb
add
in
adc
aaa
jo
mov
jo
stos
jbe
aaa
stos
addb
pop
out
daa
addr16
xchg
sub
ret
ljmp
outsb
sub
stos
scas
inc
lahf
mov
push
xrelease
push
lds
push
add
sbb
test
test
xor
in
decb
fcoms
xchg
mov
out
sub
dec
push
push
pop
pshufw
pop
test
mov
rcrl
popf
sub
lret
stos
inc
std
stos
jno
aad
dec
fidivrl
cmp
push
pop
in
dec
in
cwtl
jae
test
mov
dec
loopne
lea
mov
mov
ficoml
mov
sub
xor
xor
jecxz
je
inc
add
or
sub
pop
enter
pop
pop
jmp
ret
or
addl
jbe
mov
bswap
jae
cmpsb
xor
jge
fwait
push
mov
fs
sahf
push
in
pop
mov
mov
pusha
ret
insl
insb
shrl
mov
xchg
sub
loop
out
sub
mov
or
sub
adc
sub
fsubrl
and
popf
push
push
or
repz
les
and
pop
sub
jnp
call
jno
faddl
xchg
mov
lcall
insl
jo
lahf
bound
pop
das
mov
xchg
filds
scas
push
scas
out
or
push
mov
sub
mov
arpl
cli
xchg
jae
outsl
jl
jno
mov
sub
xor
lods
je
push
sbb
inc
sub
int3
mov
adc
out
xchg
mov
loop
adc
repz
sub
mov
iret
adc
sti
fucom
sub
fwait
xor
repnz
repz
mov
xor
jmp
mov
in
arpl
stc
xor
cmp
fmul
xor
repz
dec
rclb
mov
lock
dec
aaa
into
fcomps
push
test
bound
arpl
ds
xchg
dec
je
cltd
xor
add
cmp
and
sbb
sbb
lea
push
pminsw
fisubl
out
loopne
mov
test
lahf
popf
frstor
inc
movswl
mov
cmc
ja
js
push
push
pop
sahf
ret
push
pcmpgtd
xchg
sub
jge
lahf
xor
dec
sbb
push
mov
test
mov
or
mov
insl
lret
psubsw
xor
or
mov
lods
ret
and
or
sbb
rorb
and
cs
jg
mov
and
inc
int3
int
mov
in
or
xchg
movhlps
enter
adc
cmp
cmp
enter
or
inc
not
sub
mov
cwtl
lret
mov
inc
xor
arpl
insl
movsl
push
mov
jg
es
loop
mov
fs
gs
aaa
inc
mov
mov
dec
fbstp
data16
mov
mov
cmp
aaa
scas
sub
int3
outsl
das
pop
xor
jns
shl
lods
jmp
add
les
mov
mov
into
movsl
jno
lock
pop
insb
pop
cwtl
in
das
jbe
add
jp
sbb
lea
fisubrs
ffree
lods
push
fsubr
pop
xor
std
lcall
sbb
out
clc
add
popf
jae
xchg
sbb
jle
sub
cmpsb
jp
and
in
mov
xor
in
test
mov
and
push
mov
shlb
pop
inc
cmpl
mov
adc
add
cmovle
mov
dec
pop
xor
lret
jecxz
outsb
pop
mov
repz
ret
mov
push
decb
inc
clc
incl
push
mov
or
add
iret
in
push
loope
js
pop
jecxz
dec
mov
mov
sub
fprem1
mov
xor
movsb
decb
scas
test
nop
jnp
xchg
jecxz
clc
in
es
push
inc
fucom
cld
cmpl
dec
notb
hlt
mov
addr16
mov
mov
imul
fwait
sub
repnz
jle
loope
cmp
and
inc
scas
insb
lret
jns
xchg
stos
in
pop
lret
mov
movsb
cmp
rol
sub
leave
cmp
iret
push
imul
xchg
xor
mov
pop
mov
sub
sub
mov
xor
xchg
mov
jge
dec
xchg
xor
decb
adc
xchg
loop
loope
lds
sbb
cmp
pusha
aaa
inc
pop
into
je
out
push
lds
sbbb
pop
in
stos
in
shl
sbb
add
and
jle
push
inc
test
mov
pushf
jmp
ret
mov
xchg
cmpb
adc
mov
pop
cmpsb
and
loopne
leave
ja
cmp
mov
fwait
dec
lcall
popf
dec
sub
mov
or
pop
fimull
mov
inc
lock
jne
clc
bound
arpl
sub
dec
add
push
mov
inc
mov
pop
cmpsb
es
jp
sub
mov
sarb
inc
cmp
shl
cmp
and
cmp
arpl
xor
aam
lahf
add
inc
fdivrl
push
mov
pushf
cli
popa
mov
pop
daa
or
push
inc
in
mov
inc
gs
inc
jo
dec
imul
scas
add
cmpsl
popf
pushf
jge
lock
insb
les
outsb
mov
xchg
jnp
into
pop
loop
sbb
test
aam
bswap
cwtl
jge
stos
lds
in
test
mov
arpl
scas
jg
and
jb
push
mov
gs
call
push
jl
adc
xchg
push
loopne
icebp
jg
mov
push
pop
cmp
jnp
lods
lcall
test
xchg
popf
pop
lds
or
mov
cld
stos
mov
and
and
mov
jno
adc
loopne
scas
ds
inc
mov
bound
add
push
or
daa
xchg
lcall
imul
mov
sub
outsl
mov
mov
dec
cmpl
inc
inc
enter
and
and
out
sbb
jmp
dec
xchg
fnstsw
adc
mov
popf
pop
gs
js
daa
or
outsl
push
or
jmp
jne
lea
or
sub
push
xor
pushf
mov
fwait
mov
arpl
shl
cs
aaa
je
in
xchg
jl
adc
cwtl
push
add
or
jno
mov
ret
inc
mov
jb
xor
mov
cmpb
lods
inc
lcall
push
inc
repz
xchg
adc
push
mov
in
mov
mov
mov
sbb
pusha
adc
xor
ljmp
in
adc
sub
scas
push
outsl
dec
outsl
pop
ret
push
mov
fucom
ljmp
loopne
popf
adc
mov
movsl
mov
sbb
mov
arpl
not
insl
jns
sahf
cmc
or
sub
mov
pop
bound
pop
fisubl
fsts
std
loop,pn
pop
mov
mov
push
adc
ficoml
dec
call
mov
push
xchg
pop
jg
int3
mov
icebp
jp
mov
adc
sbb
pop
ds
aad
mov
mov
test
in
aad
push
test
xor
sub
outsb
in
sub
pop
or
bound
xor
aad
loope
clc
dec
and
rcl
mov
push
mov
sarl
dec
fstpt
cwtl
call
push
in
fsubl
je
mov
mov
jne
mov
movsb
mov
dec
mov
dec
mov
loope
ret
pop
jb
insb
out
mov
loop
inc
adc
and
mov
rcll
jno
cmpsl
bound
fistpll
dec
inc
fidivrl
add
jp
xor
or
mov
sub
mov
inc
mov
outsb
mov
mov
xchg
movsl
mov
pop
mov
mov
testl
mov
call
sub
inc
push
nop
pop
mov
enter
push
ret
out
sbb
lret
adc
xor
jbe
jne
ja
or
imul
sbb
repnz
lahf
and
adc
stos
rorb
cmp
xorb
mov
fnsave
out
push
aad
inc
aas
xchg
dec
movsl
jmp
aam
mov
les
les
les
dec
fists
mov
in
xchg
repnz
sbbl
test
cmpsb
fs
in
insb
or
lods
lret
lret
lea
xchg
or
lods
add
push
mov
xchg
mov
pop
adcb
jge
ja
call
sub
inc
mov
or
leave
out
xorl
or
push
lods
xchg
add
xchg
insl
cmp
sbb
cltd
dec
pusha
dec
sub
shlb
push
xchg
pop
push
or
xor
adc
movsb
mov
pop
and
lcall
nop
ds
cmp
ret
sbb
subb
movsb
hlt
lret
push
das
andb
dec
push
push
add
xor
cmp
ja
cmp
lock
mov
push
dec
loop
sbb
leave
xchg
rol
test
in
adc
mov
sbb
pop
mov
mov
add
lea
repnz
mov
xchg
lds
mov
loope
rorb
lret
repz
das
test
jge
push
ds
dec
sbb
jge
aam
aad
lret
inc
cmp
aaa
sub
adc
push
push
add
ficoms
push
sub
mov
scas
inc
jecxz
pop
xlat
outsb
mov
das
test
jecxz
mov
popf
mov
es
cli
push
pushf
loopne
mov
push
adc
add
lods
mov
jbe
inc
popa
lret
nop
xchg
test
in
leave
jae
adc
sub
mov
dec
adcl
scas
mov
lret
xor
xor
fdivl
cwtl
in
enter
fwait
call
fidivl
ficoml
push
or
mov
inc
into
mov
es
pop
sub
iret
lret
sti
jmp
add
mov
cmp
gs
push
lods
xor
pop
mov
push
jne
xchg
jge
jmp
or
inc
jns
mov
imul
xlat
push
sub
jne
lcall
fisubrl
dec
pop
popa
sti
pop
cmc
push
and
ss
lcall
in
shlb
jne
test
test
stos
insb
xor
int3
int
push
lahf
push
test
pop
push
mov
pop
les
pop
pop
mov
jne
sbb
in
mov
outsl
mov
inc
idivb
mov
cmp
xchg
add
dec
push
movsl
jle
and
push
push
pop
cmpsb
push
xchg
icebp
inc
jge
jb
push
mov
clc
outsb
add
lds
mov
fidivl
fists
in
fcomp
pop
movsb
cld
mov
mov
mov
cltd
fidivl
sar
or
fsubr
daa
sub
gs
dec
ficompl
pop
xchg
decl
sbb
dec
leave
nop
adc
fsubs
xchg
and
icebp
js
jnp
shlb
test
push
dec
mov
enter
scas
pushf
xor
push
xlat
xor
xchg
fstpl
jmp
dec
and
mov
or
and
ffree
add
sub
mov
insb
outsl
bound
mov
fisubrl
or
js,pn
sbb
push
shlb
or
cmp
adc
loop
stos
xor
or
frstor
ret
dec
inc
lea
fwait
ds
xchg
jmp
xchg
shr
sbb
es
push
nop
push
and
out
add
push
push
in
mov
out
add
nop
movl
xlat
sbb
mov
iret
loope
mov
test
data16
and
in
sbbl
loope
push
scas
cmp
cmpsl
lods
inc
fiaddl
inc
inc
jle
fldt
cld
rcrl
sbb
sbb
xchg
sub
and
scas
jb
insb
dec
xchg
sub
arpl
popa
push
sub
mov
test
pop
loopne
notl
stos
loop
cmpps
adc
jne
lds
or
or
jg
test
sbb
ljmp
push
add
xchg
pushf
cmp
lcall
andl
mov
sbb
dec
pop
repnz
dec
mov
pop
jp
cmp
cmp
imul
flds
and
outsb
pop
fisubl
notb
aaa
add
xor
imul
dec
inc
push
xchg
pop
or
push
mov
loopne
outsl
xlat
gs
and
push
in
add
xor
ljmp
sti
mov
jo
mov
lea
mov
xor
scas
mov
or
add
and
scas
nop
jno
dec
dec
mov
add
mov
and
insl
out
in
stc
mov
pop
repnz
nop
and
insb
mov
fcomi
xor
movsl
loop
jb
push
lret
xchg
test
xchg
aam
rep
push
in
mov
outsl
or
scas
hlt
loope,pt
aad
std
xlat
out
jg
sub
aam
fs
and
jle
mov
std
inc
add
stos
mov
sub
cwtl
cltd
dec
adc
lock
pusha
mov
adc
les
fldl
es
adc
xchg
cmp
add
mov
mov
stos
ficompl
pop
push
push
xor
mov
arpl
cmp
sahf
lods
mov
push
fists
in
cmp
pusha
cmc
xchg
mov
jb
sbb
mov
outsl
pop
xchg
decb
jnp
mov
push
cmpsb
divb
insl
fsubrs
jecxz
jle
fs
outsb
clc
xchg
mov
hlt
pop
rcll
pop
ja
insl
inc
jno
sar
or
mov
loopne
pop
testb
dec
rcll
xor
mov
sbb
push
rol
into
jecxz
lret
jb
mov
js
fs
js
scas
xchg
push
jnp
movsl
jbe
sti
in
gs
and
add
push
in
repnz
andb
adc
jo
push
pop
loop
testl
popl
inc
fcomps
mov
jl
or
sahf
and
or
xchg
fidivrl
call
sub
fdivl
jb
inc
push
sti
adc
int3
sub
dec
negb
jecxz
cmp
sub
lods
or
leave
sbb
aas
push
pop
or
mov
jmp
lahf
shll
or
push
pop
out
and
test
sub
push
addb
mov
clc
mov
stos
mov
ret
fldl
cmp
gs
sbb
xor
lods
or
lret
cwtl
lods
fs
mov
cmp
pop
cmpsl
sbb
pop
int3
stc
int3
add
into
mov
cmpsb
or
clc
jno
and
in
mov
stos
test
mov
aaa
and
and
jmp
es
jb
stos
ret
leave
inc
mov
inc
mov
clc
pop
jp
or
jmp
inc
mov
push
mov
hlt
adc
popa
jg
push
push
adc
dec
mov
pop
dec
jecxz
dec
inc
fnstsw
pop
inc
in
dec
push
popf
imul
mov
fwait
shll
mov
mulb
dec
leave
xlat
repz
mov
pop
xor
lods
cli
mov
lock
pop
les
int3
mov
jle
mov
daa
popf
mov
lock
sti
cwtl
push
int3
enter
out
add
int3
testb
jbe
mov
and
sti
sbb
xor
clc
adc
aaa
into
imul
jmp
mov
add
roll
outsl
fsubrl
ret
sub
cmc
adc
dec
sbb
sub
sti
push
xchg
sti
sub
aad
and
mov
mov
mov
cmpsb
mov
sub
and
push
adc
inc
push
popf
lods
clc
and
sub
jle
xchg
rcrl
jbe
sbb
and
cmp
mov
ret
outsl
lock
aam
outsl
pop
sbb
mov
testb
cmp
pop
das
popf
mov
push
push
sub
imul
adc
insb
mov
pop
mov
sub
push
pop
adc
test
mov
aas
shrl
adcb
or
rol
js
or
ja
cltd
mov
jne
mov
mov
subl
dec
icebp
cmp
jp
adc
notb
push
xor
bound
adc
sbb
xor
sbb
bound
mov
push
mov
test
lret
ss
or
mov
mov
cmp
js
loopne
xor
div
cmp
and
and
inc
xor
lea
lock
scas
fisubs
mov
sub
fdivr
inc
or
fidivs
push
std
cmp
pop
inc
cld
call
fidivs
test
das
push
xlat
seta
imul
cwtl
imul
jmp
pop
xorb
clc
jl
mov
sub
les
out
cs
pop
mov
aam
jmp
xlat
and
and
std
push
andb
adc
pop
sub
mov
loopne
dec
mov
or
push
lret
push
add
mov
mov
adcb
mov
rolb
out
in
inc
mov
aad
dec
loope
pop
mull
sbb
cmp
jnp
jl
push
das
icebp
or
sub
adc
insl
loopne
stos
push
jle
lret
jnp
jae
or
test
xchg
jmp
lock
cwtl
out
mov
cmpsb
imulb
out
push
inc
or
pop
push
xor
loopne
mov
push
pop
cmp
into
je
add
push
jno
push
xchg
mov
and
ret
imul
mov
sbbl
push
mov
pop
mov
push
je
lcall
push
pusha
in
pusha
data16
mov
xchg
mov
repnz
xchg
gs
loopne
es
xchg
fwait
sti
dec
ret
mov
call
imul
pop
insl
cld
xchg
lcall
sub
movsb
pushw
test
dec
int
je
sbb
lahf
test
sub
jne
inc
lahf
xor
loopne
dec
jo
adc
lods
jne
sub
sbb
xchg
mov
inc
push
mov
jmp
add
jae
es
sti
lods
cmpl
rorl
xor
je,pt
repz
inc
inc
or
arpl
cmp
lods
mov
cld
pop
dec
mov
mov
cwtl
add
pop
mov
mov
subps
sbb
stos
lods
push
xchg
and
or
sbb
cmp
jge
cmc
add
pop
sbbb
rolb
fwait
sbb
lock
shrl
jnp
fwait
xchg
rcrb
lock
pop
jnp
call
in
push
sahf
clc
jp
shl
cmp
adc
movsb
mov
fistpll
aas
into
andl
test
mov
add
cmp
push
ja
adcb
mov
lret
outsb
icebp
pop
popa
insb
jle
sub
mov
sbb
mov
add
cmc
daa
insl
pop
lds
xor
push
hlt
cmp
mov
add
dec
pop
pusha
repnz
gs
sub
and
insb
ss
sub
aas
or
rol
insb
jnp
das
xor
dec
in
aad
jb
push
insb
push
xchg
test
gs
jle
pop
mov
sub
sbb
pop
bswap
mov
frstor
hlt
mov
mov
xor
dec
lcall
daa
aad
sbb
sbb
imul
icebp
push
popf
ret
push
div
adc
inc
and
iret
pop
cmp
push
mov
shlb
mov
cmp
adc
nop
mov
fistpl
adc
mov
mov
imul
adc
jl
sbb
pop
addr16
sbb
and
loopne
inc
test
fs
hlt
out
adc
addr16
sub
je
pop
les
mov
aas
xor
call
cli
pushf
mov
sarb
ljmp
add
int3
mov
jle
mov
lea
jns
and
insl
adc
repnz
or
fs
cld
lcall
in
jno
pop
outsl
mov
loope
and
pop
xchg
enter
xor
inc
xchg
lea
stos
jecxz
fincstp
mov
xchg
xorl
cmp
adc
jns
mov
icebp
inc
jo
cmp
cmp
sbb
mov
mov
xor
shrb
jg
push
push
sub
jg
mov
mov
mov
es
or
mov
mov
jg
lret
sti
scas
sarb
lahf
stos
xlat
nop
sarl
sbb
and
movsl
add
cld
mov
inc
xor
das
gs
leave
sahf
xor
pop
jno
pusha
sub
aad
pushf
bound
movsl
jmp
pop
cmpsl
add
js
leave
mov
add
lahf
jb
je
xchg
cli
jmp
and
cli
stos
cmp
je
arpl
xlat
test
mov
jge
push
in
pusha
ret
popf
add
jle
pop
jle
jmp
or
mov
jb
lea
lds
mov
mov
jle
mov
imul
je
sbb
imul
ret
shl
movsb
jmp
daa
mov
mov
loope
cs
jecxz
push
push
jl
pop
scas
sbb
adc
cli
xchg
mov
mov
cmp
repz
sub
out
dec
gs
mov
ss
pop
xor
cmpsl
mov
mov
jl
gs
mov
imul
jno
mov
inc
jge
jne
sbb
cld
push
idiv
out
popf
push
popf
dec
xchg
xchg
pop
add
and
fstps
arpl
ja
cwtl
pusha
or
ljmp
sbb
mov
les
pop
xlat
xchg
repnz
popf
mov
pushf
xchg
iret
sahf
jecxz
test
push
out
xchg
sbb
push
jmp
and
addr16
and
lret
out
cmc
loop
fildll
idivb
jae
pop
sub
mov
test
or
jge
fadds
xchg
jb
repnz
xor
out
mov
or
pop
aas
in
xchg
xor
xchg
pop
mov
jo
aas
daa
cmp
xchg
subl
shrl
sub
pop
ds
jg
mov
or
sbb
add
jge
adc
fisubs
adc
lods
inc
xchg
adc
and
cs
mov
test
xchg
pop
mov
fldcw
jp
mov
inc
and
pop
adc
lock
inc
aas
inc
sbb
and
lds
cmp
xchg
rcll
out
add
aaa
shlb
cmpsl
ret
call
lods
out
fwait
mov
mov
das
cmp
add
pop
push
jge
push
enter
movsb
push
jo
adc
push
jne
cld
outsl
subb
in
cltd
cli
mov
pushf
imul
mov
add
xor
mov
rcll
add
mov
bound
xchg
jg
fucom
fsubs
jmp
cmpsl
jo
mov
sti
fwait
loopne
cmpsb
jge
mov
test
jns
fwait
js
das
test
mov
mov
fiadds
insb
popf
mov
out
fidivl
mov
or
dec
cmc
inc
xchg
lods
jbe
rorb
add
cmpsb
imul
jge
pop
pop
fcoml
rclb
inc
outsb
mov
aaa
in
int3
lret
les
pop
scas
data16
adcl
xchg
int
imul
sbb
bswap
xor
mov
cltd
rorb
push
test
repnz
movl
and
fs
cld
jno
jae
xlat
sbb
repz
add
push
cmp
inc
push
addb
push
push
out
test
and
stos
cmc
leave
fsub
jmp
incl
stos
sub
int
or
enter
shlb
stos
stos
popf
orl
clc
movsb
jb
xlat
add
nop
daa
pop
ret
in
and
fmuls
rcrb
fisubs
ret
int3
ret
adc
jp
loopne
out
fwait
sbb
imul
push
icebp
fnsave
and
inc
mov
mov
repnz
outsb
xlat
mov
cmpsb
cmpsl
stos
fnsave
jg
inc
repz
mov
push
jmp
mov
jo
lods
sub
mov
sbb
inc
stos
jmp
outsb
test
int3
push
aaa
jno
jecxz
adc
jle
add
mov
sub
bswap
leave
xchg
push
add
fimuls
mov
les
repnz
sub
jns
dec
rcrb
cld
sbb
movsb
cmp
add
repnz
jns
cltd
xchg
js
mov
clc
xchg
xchg
iret
pop
cmp
push
push
adc
fldenv
mov
das
mov
add
cmp
mov
push
jp
sbb
push
pushf
mull
push
and
add
jno
lahf
jb
insb
out
lds
add
sub
lods
jg
fcomps
pop
shl
and
pusha
fs
push
clc
sbbl
cmp
xchg
adc
in
stos
push
mov
cmc
adc
add
jbe
movsl
dec
or
sbb
mov
icebp
cmc
sub
leave
pop
sub
push
pop
mov
out
pop
shrb
mov
imul
mov
hlt
sbb
loop
adc
stc
outsl
add
xchg
lret
mov
pop
or
push
dec
lods
push
add
xor
divb
sub
fsubr
rcrl
fwait
xchg
aaa
pop
push
pop
pop
cltd
xor
inc
pop
pop
and
std
lods
xor
addr16
cmp
ret
in
outsb
mov
ret
pop
out
cmp
or
mov
pop
pop
das
add
sti
mov
js
mov
mov
jb
outsl
repnz
push
and
push
pop
rcrb
adc
ss
daa
add
aaa
cltd
adc
enter
dec
bound
lods
mov
test
dec
dec
mov
mov
aas
mov
jl
push
pop
hlt
pop
icebp
xor
push
data16
pop
mov
jo
xor
lods
mov
addb
aad
inc
cmp
imul
shl
call
test
fsubrp
sar
jmp
fidivrs
or
outsb
xor
mov
fcmovb
mov
mov
xor
outsl
enter
mov
loop
jae
rorl
pop
sbb
cmp
xchg
in
std
repnz
mov
xchg
loop
xchg
push
addr16
push
ficomps
out
pop
aad
mov
add
pop
js
insl
add
xlat
outsb
or
gs
in
sub
cmp
mov
addr16
xchg
pop
push
imul
incb
ljmp
inc
bound
inc
into
nop
lods
xor
xorb
dec
loop
or
push
jb
sbb
push
xor
dec
and
push
pushf
xor
cmp
shll
sub
dec
mov
pusha
stc
fcoms
mov
into
dec
push
mov
push
mov
add
push
jg
xchg
pop
lahf
dec
insb
mulb
xor
sub
or
pop
mov
and
ret
xchg
js
shrb
shrl
adc
fstpt
cmpsl
out
dec
jb
jle
ljmp
dec
call
rol
mov
or
into
push
xlat
outsb
lods
lret
pop
mov
add
fisttpl
nop
fsubp
mov
ss
out
rcrl
sbb
xorb
shll
iret
push
cmpsb
or
jo
arpl
cltd
clc
xlat
sub
sub
add
andl
cmp
mov
jle
aaa
mov
insb
stc
mov
sbb
mov
inc
sarb
addl
xchg
xor
add
inc
sub
xchg
stos
mov
bnd
cmp
jecxz
cmp
pop
pusha
lret
dec
out
xchg
dec
mov
sar
jae
xor
inc
push
cmp
dec
enter
outsl
loopne
icebp
and
loopne
push
sbb
mov
aad
leave
mov
jg
mov
push
add
sahf
xor
push
mov
jb
hlt
sub
out
std
or
arpl
es
inc
xchg
push
sahf
mov
es
adc
jae
lcall
orb
lcall
and
pop
dec
out
mov
insl
sahf
xchg
pop
pop
divb
ljmp
mov
les
lret
push
jb,pn
inc
call
insb
jnp
clc
lods
lea
adc
ffree
movsl
xchg
aaa
jo
movsb
cmp
inc
lds
dec
dec
and
mov
daa
adcb
xor
sti
push
lods
test
imulb
leave
xchg
ss
mov
or
dec
bound
movsb
pop
movsl
add
xlat
les
lock
cmp
xchg
imul
clc
mov
mov
jge
pop
mov
mov
jne
mov
sbb
test
mov
subb
cltd
mov
push
in
sub
pop
adc
stc
push
jp
push
pop
sub
pop
repz
push
pop
negl
inc
adc
pop
sarl
in
stos
xchg
lret
sbb
cld
sahf
and
in
sti
fwait
jg
jge
test
xor
pop
xchg
nop
or
cltd
lret
outsl
ret
outsb
fdivl
add
movsb
mov
mov
xchg
lods
mov
out
and
mov
outsb
lahf
push
fbld
add
pop
xchg
xchg
push
mov
xchg
pop
aam
mov
fildll
xchg
dec
fadds
mov
fdiv
fwait
es
scas
push
mov
sub
mov
out
lcall
enter
lds
mov
dec
jecxz
jnp
stc
sub
mov
dec
mov
sbb
insl
sbb
stos
gs
xchg
pop
pavgw
mov
or
sahf
xlat
test
pusha
loope
lcall
adc
popa
fcoml
jecxz
add
or
sbb
lcall
sbbb
cs
ficoml
imul
push
dec
sub
aas
pop
sub
test
inc
jg
std
pusha
mov
inc
xlat
inc
outsl
adc
lret
and
lock
mov
lea
lods
sub
mov
adc
xchg
push
jbe
jbe
lea
xchg
pop
cltd
cmp
dec
mov
inc
sub
aam
xor
and
in
arpl
in
loopne
sub
inc
hlt
mov
mov
adc
stc
out
test
enter
jmp
insb
add
out
cmpsl
aad
sbbl
cmp
inc
sbb
pop
xchg
loope
icebp
mov
ja
mov
jns
add
mov
dec
and
jne
lods
pusha
negl
jle
mov
dec
in
mov
sbb
out
pushf
popf
ret
hlt
sbb
dec
adc
inc
sbb
mov
jmp
xor
pop
dec
pop
dec
mov
in
jnp
test
sbb
loope
and
out
test
pop
mov
lret
sub
jmp
test
xor
and
push
pop
cmp
or
sub
dec
mov
test
stos
push
mov
or
mov
xchg
sub
mov
adc
sub
in
mov
dec
rcr
jp
jp
mov
cmpl
push
xchg
fwait
push
mov
jp
sub
ss
xchg
sub
enter
lcall
pop
or
mov
pop
lahf
lcall
inc
clc
mov
pushf
xor
shrl
pusha
stos
out
pusha
test
ss
xor
hlt
pop
xchg
sahf
xor
fdiv
aaa
into
and
hlt
pop
daa
sbb
push
dec
pusha
or
fwait
sbb
or
xor
in
mov
pusha
sbb
mov
cmp
add
cwtl
popf
and
mov
sahf
in
jmp
popf
mov
addb
stc
adc
bound
adc
lret
sahf
inc
xlat
jecxz
or
xlat
imul
inc
outsl
jmp
sidtl
lahf
jge
xchg
sbb
mov
mov
lret
and
push
inc
pop
ja,pt
outsl
mov
push
test
sbbb
mov
aaa
sbb
mov
stc
loope
lds
lea
daa
xor
fs
pop
negb
mov
inc
lret
les
jb
int
neg
int3
stc
jo
into
nop
sbb
dec
push
lods
aas
xchg
xor
dec
adc
jb
insb
test
xor
fidivs
mov
push
xchg
hlt
adc
and
out
test
push
mov
sbb
and
ret
shrl
jp
jg
xor
pop
ficomps
pop
mov
xorl
or
ja
jnp
inc
push
cmp
scas
call
aaa
andb
mov
clc
insb
add
push
gs
adc
inc
lds
push
dec
mov
cltd
sub
inc
pop
mov
jle
inc
lock
cmpsb
outsb
jl
sub
repz
lcall
pop
fsubr
push
icebp
cmpsb
cmp
xchg
std
or
dec
clc
cmp
jo
jmp
outsb
lock
popf
jbe
icebp
inc
jle
fstpt
loopne
xor
scas
pop
or
cmp
es
mov
orb
jno
movsl
and
and
and
arpl
bswap
cltd
jl
inc
out
push
cwtl
xor
xor
fwait
cmpsb
push
fidivl
fs
xchg
call
xor
mov
xchg
adcb
dec
cmp
sub
es
cmp
mov
daa
mov
inc
aas
outsl
push
jno
aad
sbb
andb
xchg
ret
lods
inc
mov
xor
xchg
push
fldl
mov
xor
int3
out
add
inc
push
inc
pop
outsb
xor
pop
sub
shll
in
fs
sbb
dec
gs
sahf
inc
scas
test
rcrb
mov
leave
xchg
adc
outsb
adc
adcb
insl
test
ljmp
clc
pop
aad
lods
jg
test
lahf
mov
xlat
xor
xor
inc
dec
call
pop
mov
sub
xor
inc
mov
sub
divb
pusha
jg
dec
adc
lahf
popa
into
inc
push
icebp
movsl
xchg
aaa
dec
cmp
jge
mov
mov
out
sbb
inc
inc
sahf
mov
je
lds
adc
jno
xchg
es
in
jb
push
pop
aas
sbb
or
loop
inc
pop
sub
icebp
sbb
aam
aam
aas
xchg
mov
repnz
jns
lahf
cmp
dec
cwtl
jge
jns
in
xor
dec
orl
andnps
ja
cs
add
mov
decl
fdivrl
xor
xlat
mov
push
and
loopne
imul
scas
xor
hlt
fisttps
dec
movsl
insl
inc
mov
jl
mov
pop
jmp
sbb
out
sarl
ss
or
popf
or
mov
sbb
shrl
cld
lcall
in
stos
out
push
or
int
xor
out
repnz
xchg
pop
movsl
mov
imul
adc
lea
cmp
pop
jb
pop
test
jge
lds
add
push
aam
mov
iret
imulb
sub
xchg
xchg
inc
mov
pushf
pushf
sahf
push
ljmp
pop
xchg
xchg
pop
imul
pop
les
repz
adc
mov
lock
fcmovne
sub
in
cmp
in
inc
movb
enter
dec
cwtl
xor
ds
xchg
or
cmp
outsl
hlt
vmovups
or
push
lahf
push
pop
and
push
lret
outsb
loope
shll
pushf
push
dec
dec
push
mov
xchg
les
add
mov
cmp
js
jge
ja
pop
pop
push
jns
xchg
sub
cltd
inc
lock
and
int3
out
pop
mov
sbb
nop
pusha
jmp
push
fiaddl
popa
imul
sub
mov
hlt
dec
cmp
nop
mov
push
das
push
pop
cmp
dec
repnz
push
stos
divb
pusha
lret
adc
cmp
nop
jp
roll
dec
sub
aas
dec
xor
flds
push
inc
aaa
inc
in
jmp
stc
nop
data16
cmpl
pop
sahf
repz
push
jbe
andl
inc
push
stos
test
push
ljmp
pusha
inc
aaa
insl
in
lahf
push
or
ss
push
cwtl
das
addb
fwait
pushf
xor
loope
mov
mov
push
cwtl
lcall
call
xor
dec
js
mov
add
sahf
mov
repz
lods
xor
sub
cmp
popa
pop
mov
add
adc
dec
adc
mov
vprotw
xor
push
add
jo
stc
nop
out
outsl
add
mov
pop
sbb
mov
lods
add
xor
xchg
jecxz
movsb
cmpsl
push
inc
mov
cltd
or
add
inc
rcrl
sub
daa
cmp
push
push
sub
adc
pop
rcrl
inc
leave
loopne
lret
xor
sub
stc
divl
out
rcll
or
mov
pop
adc
add
hlt
mov
xlat
inc
int
jns
ds
mov
push
push
sbb
push
cmp
adc
jge
add
sub
sbb
cmp
js
mov
hlt
xchg
enter
rcr
sbb
adc
ss
fstpt
imul
sahf
imul
lds
insb
jp
or
add
adc
inc
addr16
dec
xchg
rcrb
imul
sbb
cmpsl
sarb
mov
inc
dec
dec
lcall
inc
pop
push
fisttps
or
mov
dec
dec
in
xchg
mov
xor
or
and
in
call
xor
repz
bsr
dec
cmp
push
sbb
insl
mov
pop
shl
imul
sbb
jbe
or
cltd
repnz
repnz
jae
xor
or
xchg
jp
nop
push
pop
fdivl
xchg
adc
orb
nop
aas
and
data16
inc
fnstenv
lahf
ficoms
popf
jne
outsb
push
into
pop
jmp
hlt
inc
fsubl
inc
cmc
cmp
mov
clc
push
inc
pusha
cmp
inc
in
fidivrs
pxor
mov
pop
hlt
outsb
jae
enter
popf
jg
dec
in
mov
and
aaa
call
adc
test
aad
dec
lcall
jl
jl
and
inc
leave
mov
sbbl
pop
pop
mov
aad
hlt
cmpsl
in
mov
lcall
pop
mov
cmpsb
adcb
call
and
and
xchg
fcompl
outsl
adc
sub
rcll
xor
xor
lahf
cmp
cmp
dec
pop
xchg
sbb
scas
sub
adc
ret
and
mov
fiadds
fldt
or
xor
mov
xchg
shrb
int3
sbb
push
add
pusha
pop
out
test
push
or
movsl
enter
rcll
jle
mov
jbe
imul
push
jne
loopne
int
sbb
xor
xchg
mov
push
test
inc
pop
sti
es
jecxz
mov
lea
leave
gs
test
mov
push
insb
fs
cmpsl
in
loop
mov
pop
dec
stos
int
cmp
mov
shld
xchg
cs
outsl
repnz
pop
shll
stc
cmp
insb
out
sti
push
push
outsb
or
sbb
gs
ret
dec
js
lods
loop
dec
mov
mov
ret
stos
push
push
jmp
movsl
jecxz
xor
leave
xchg
and
xor
out
dec
cmc
pop
jg
fadd
mov
imul
or
pop
insl
testb
mov
xchg
lahf
cwtl
sbb
rcrb
ret
sub
insl
cwtl
pop
xchg
mov
adc
inc
pop
out
incb
icebp
nop
dec
clc
add
andb
or
xorl
pop
call
js
inc
push
repnz
or
mov
int3
push
pop
push
push
push
xchg
sarb
jl
inc
dec
xchg
pop
orl
add
pushf
jae
dec
pushf
scas
sarb
mov
cs
int
push
leave
fcoms
push
sub
jno
outsb
mov
xchg
xor
inc
cmp
pop
add
jge
out
std
adc
fbld
iret
data16
xor
fwait
fwait
in
inc
loop
pop
out
sarl
addl
dec
movsl
out
mov
mov
sbb
ret
shrl
xor
dec
ds
cmp
mov
inc
decb
in
push
push
fstpl
mov
adc
jle
or
sub
popa
imul
aaa
dec
int
cmc
imul
mov
gs
das
mov
decb
repnz
sbb
dec
dec
jg
cmp
mov
pusha
fidivrs
jle
xchg
outsl
or
out
xchg
popf
pop
mov
cltd
pop
out
or
iret
ret
insb
fdivs
loopne
mov
cwtl
and
enter
sbb
sub
cmp
xchg
xchg
mov
int
mov
jae
dec
mov
js
int3
mov
ret
ret
jb
sub
orb
and
xchg
or
cmpsb
and
testl
mov
and
xor
or
lret
incb
stc
imul
je
or
aad
sahf
clc
pop
test
gs
call
in
test
clc
and
addr16
inc
test
xchg
sbb
scas
pop
repnz
in
jne
outsb
pop
mov
les
add
loop
push
adc
call
sbbb
or
mov
mov
inc
sbb
xchg
es
pushf
add
nopl
jae
jb
adc
insb
das
push
pop
insb
jne
xor
rorb
aam
dec
xchg
jge
push
cltd
xchg
lcall
adc
pop
lret
cmc
mov
out
pop
sub
or
hlt
mov
pushf
push
cs
and
push
negl
or
xor
je
stos
das
addr16
in
inc
aas
cmp
mov
lret
pushf
inc
sti
sbbl
sbb
adc
sarl
sub
scas
mov
sbb
xor
stc
daa
xchg
scas
cmp
ficomps
sti
cmp
sbb
dec
fstpl
mov
push
je
sub
xchg
add
inc
pop
mov
enter
and
mov
and
mov
sbb
repz
into
scas
add
mov
xchg
mov
outsl
movsb
lock
sub
xchg
jb
xchg
ret
repz
adc
dec
mov
mov
mov
inc
pop
jecxz
rclb
movsl
cmc
pop
mov
sub
jg
inc
xor
loope
scas
push
push
cmc
or
push
push
push
sub
iret
in
jle
jecxz
pop
or
repz
adc
cmp
xor
mov
fisubrs
sarb
repz
test
sbb
mov
or
push
mov
aas
int3
sbb
loop
shrl
mov
sub
sbb
push
dec
inc
dec
inc
movsb
leave
mov
aaa
mov
jl
sbb
sbb
sbb
and
aas
pop
mov
sbbb
xchg
sbb
shrl
add
cltd
test
ja
mov
repz
clc
jmp
cmc
into
aam
sub
push
pop
pop
inc
add
jo
inc
call
ret
ljmp
fstl
mov
stc
pop
cmp
pop
mov
xor
fiaddl
repnz
dec
icebp
test
daa
ljmp
insl
sub
push
pop
cmp
test
lahf
jge
cltd
repnz
dec
pop
inc
adc
push
imul
sbb
pop
mov
fildl
popf
or
bound
push
movsl
inc
fisubs
dec
cmc
mov
dec
ret
xor
jge
add
or
mov
mov
mov
sahf
cmc
dec
push
push
sbb
inc
dec
push
xor
xorb
fldcw
in
mov
push
mov
cwtl
int
push
lea
xor
loope
popf
mov
xchg
gs
mov
pushl
dec
jmp
add
mov
into
jp
in
pop
jp
mov
fstpl
setnp
sub
dec
cmpsb
arpl
shrb
add
adc
push
sbb
mov
and
add
xchg
add
cltd
movsl
cld
fsubl
pop
adc
sub
cmpsb
push
mov
cmpsl
aas
pop
jmp
mov
popf
xor
nop
out
fimull
mov
xchg
push
data16
dec
mov
pop
stos
push
xlat
test
call
cmp
ja
stos
rolb
mov
int
pop
out
out
xor
fisttpll
ja
cmp
pop
cmp
inc
loop
shl
stc
mov
loop
decb
mov
sbb
roll
pop
xor
jge
inc
cmp
int3
outsl
dec
popa
push
inc
adc
cmp
xor
sub
shll
inc
xchg
xor
imul
jecxz
xor
push
adc
ljmp
daa
cmp
inc
lods
fdivl
mov
mov
loope
nop
cmp
inc
xor
iret
bound
fcompl
push
push
pop
hlt
cmpl
add
sub
lock
xchg
js
xchg
push
mov
xor
jle
pushl
xlat
stos
ljmp
push
adc
stos
inc
mov
out
das
push
out
cmp
scas
hlt
xchg
ja
aaa
xchg
cmpsb
cmp
daa
xlat
roll
sbb
xchg
and
aas
pusha
nop
sub
inc
jle
es
dec
dec
ljmp
adc
cmp
mov
addr16
out
mov
mov
daa
and
inc
ja
aaa
or
repnz
sub
jnp
adc
push
lret
push
call
cld
inc
cmpsl
sub
loop
push
out
mov
loop
adc
xor
shrb
into
inc
cmp
aam
sub
arpl
pop
jbe
fsubr
imul
adc
cmp
int3
inc
xor
adc
outsl
sbb
cmp
cmp
sbb
pop
sub
ss
mov
cmc
sbbl
xor
hlt
popa
ret
add
push
mov
fstpl
inc
inc
mov
pop
pop
inc
into
add
aaa
ds
dec
es
cmp
fdivs
aad
add
stos
sar
sub
add
imul
adc
jecxz
lcall
ffree
into
enter
je
mov
sti
mov
mov
mov
test
int
pop
add
xchg
cltd
dec
cs
inc
icebp
or
push
push
dec
mov
not
add
mov
mov
ret
std
push
jp
xor
add
mov
xor
inc
fildl
xor
mov
push
add
jb
jnp
inc
stos
leave
cmp
stc
data16
outsl
mov
int
pusha
aam
out
add
in
sahf
xchg
jmp
test
insb
add
mov
cmp
ficomps
jne
call
or
ret
mull
movsl
fdiv
aaa
rcrl
cmp
dec
pop
mov
or
adc
cs
fbstp
push
sbb
in
nop
xchg
mov
test
xchg
mov
popf
orl
or
loop
das
cmovb
pop
jecxz
js
pop
popa
sbb
add
xlat
mov
je
xor
xchg
dec
or
inc
push
aas
cmp
xchg
jb
loope
jb
xchg
jl
ret
xchg
add
mov
inc
aad
mov
sbb
pop
lahf
adc
aam
insl
mov
rcll
push
out
cmp
cmp
jmp
pop
clc
jbe
movsb
sub
dec
mov
mov
jle
fldt
rcrl
mov
pusha
dec
div
jg
in
push
stos
inc
adc
sbb
imul
push
lea
cwtl
mov
add
xchg
and
iret
lods
jne
push
test
rclb
push
in
loope
mov
xor
cli
xchg
loopne
fimuls
lods
data16
sarl
inc
mov
add
cli
xchg
adc
cli
sub
push
shll
dec
popf
xor
sbb
mov
stos
test
cmc
ja
and
in
mov
testb
and
les
stos
popa
mov
pop
cmc
int
mov
xlat
jmp
mov
rol
jecxz
bound
sub
inc
outsb
lds
add
notb
popf
cmp
xchg
sub
mov
xlat
mov
ret
and
mov
insb
adc
mov
lret
imul
pop
add
insl
cmp
push
ret
ljmp
jno
loopne
mov
mov
xchg
xchg
dec
xchg
inc
mov
sbb
mov
push
mov
mov
int
dec
out
pop
outsl
adc
mov
pop
xor
movb
jg
lret
dec
in
jns
and
pop
pop
sub
rclb
sub
jb
mov
stos
sub
push
lea
add
das
xor
and
xchg
adc
xor
gs
mov
xchg
test
push
adc
mulss
lea
rorl
mov
adc
aam
fidivs
adc
test
mov
test
dec
dec
out
mov
xor
xchg
pop
pop
add
mov
cltd
stos
pop
or
stos
ret
cs
cli
cmp
aam
add
sti
mov
mov
shlb
cmp
jle
mov
xor
out
cmp
scas
jb
push
xlat
gs
ss
mov
inc
cmp
mov
aam
test
add
xchg
sbb
cli
loopne
inc
xchg
dec
out
pop
hlt
inc
and
dec
inc
pop
jmp
es
hlt
inc
ss
jp
xchg
and
jo
cmc
dec
loopne
xorl
and
or
mov
cmp
int3
arpl
and
dec
jne
jp
rolb
pop
inc
adc
mov
xchg
inc
lret
xchg
pop
fsts
into
xchg
mov
dec
fsubs
xchg
insl
sti
and
push
hlt
test
xchg
sub
loope
mov
jbe
sub
sub
mov
movsb
setle
shrl
mov
push
xchg
jbe
sbb
xchg
les
lds
sub
mov
sub
jo
inc
aas
jecxz
stos
ljmp
adc
addr16
jp
or
dec
and
sub
fnsave
lret
jle
mov
popa
clc
aaa
xlat
xchg
xchg
cmc
xchg
test
lods
aas
pushf
ja
sbb
outsb
shr
fisubrl
inc
rcll
std
iret
not
jmp
sbb
fwait
loope
out
inc
fistpl
xchg
test
or
stos
and
fsubrp
mov
fdivs
int3
icebp
sahf
in
shl
inc
scas
inc
dec
mov
imul
shrb
dec
cmp
sub
in
lahf
push
imul
clc
sbb
push
add
repnz
xchg
imul
outsb
stc
sub
sti
adcl
jg
add
jg
inc
mov
inc
in
add
jnp
lods
xchg
or
lea
dec
loopne
xlat
cld
adc
cmpsb
lock
cld
xchg
adc
mov
fdivrl
inc
mov
mov
enter
outsb
inc
bound
popa
xor
xor
jns
aam
mov
mov
or
imul
pop
xchg
inc
push
fbstp
jecxz
movsb
rcrl
mov
mov
add
adc
addr16
outsl
in
adcl
or
stc
xchg
lret
fsts
cmp
cli
test
fsubs
jg
pop
out
test
mov
sbb
jle
decb
xor
push
adc
mov
xchg
push
push
sahf
aaa
outsl
sbb
add
out
subb
jge
in
stos
push
and
mov
inc
pop
lods
jns
jns
pop
adc
ret
shlb
sti
ficomps
les
mov
outsb
pop
loop
adc
add
sub
pop
scas
popl
ret
and
lods
adc
xlat
pop
in
push
inc
les
ss
jno
cmp
mov
int3
pop
lahf
add
jle
loopne
adc
mov
sbb
sub
sbb
decb
movsl
ret
shlb
pop
inc
mov
jbe
test
xor
add
loop
cmp
int3
arpl
push
inc
or
push
xchg
fisttpl
loope
and
add
push
insb
add
mov
jle
and
lahf
pop
je
fwait
adc
popf
sub
mov
push
mov
jp
add
fs
scas
lods
ret
jae
adc
cmpsl
neg
fldcw
add
movsl
es
add
sar
mov
outsb
push
roll
out
cmp
movsb
cmp
mov
and
mov
das
ss
jecxz
jle
mov
setp
xor
sti
sbb
rolb
jo
mov
mov
and
mov
sbb
mov
ss
mov
cmp
inc
push
aas
cmpsb
jge
jg
fsubr
xchg
lahf
cmp
in
jmp
xor
mov
adc
jge
dec
lock
pop
out
shr
jmp
pop
mov
dec
out
stos
cmp
push
fwait
movb
inc
push
dec
jae
pop
push
lahf
push
xchg
xchg
sbb
mov
scas
loop
push
repz
and
pop
incb
and
loop
xor
adc
insb
inc
cltd
and
push
inc
stos
rorb
scas
mov
sub
cli
ja
or
push
push
sbb
lods
loope
sti
cs
push
jb
xchg
popa
pop
ret
pushf
das
ss
call
dec
mov
scas
xchg
and
cmp
les
pushf
ds
popa
jg
aaa
push
adc
loopne
push
je
mov
cmp
es
push
popf
cwtl
sbb
ret
nop
dec
push
xlat
orl
push
cmp
or
xor
adc
cmpsl
inc
cltd
mov
out
sub
sbb
call
and
daa
or
jecxz
and
stc
add
addr16
fisubrs
push
mov
xchg
jle
xor
dec
hlt
push
out
jle
mov
lret
bound
xlat
test
pop
mov
rorl
adc
aad
sbb
jae
fimull
arpl
fbstp
push
add
imul
jmp
push
and
in
jecxz
mov
push
mov
jbe
or
jle
adc
es
int
lods
adc
push
divb
dec
xchg
dec
pop
leave
jo
lret
shrb
adc
gs
pusha
push
ljmp
call
shr
ss
scas
rolb
jb
fcomip
and
std
iret
out
jae
movsb
testl
and
fwait
sub
test
inc
fsubrs
and
or
jecxz
mov
pop
icebp
sbb
decl
cmp
cmpsl
ljmp
jmp
das
leave
in
push
push
cmpsl
mov
pop
sti
cmpsb
mov
insl
sub
pop
cmp
lock
imul
loope
sbb
jecxz,pt
lods
aaa
hlt
adc
or
mov
push
shlb
cmpsb
imul
pop
jmp
adc
fsts
pop
push
pop
jle
pop
ds
aad
out
cld
inc
mov
out
jle
add
jo
and
ror
lcall
fisubs
and
imul
pop
mov
aas
out
mov
and
cmp
inc
test
xor
adc
fs
dec
andb
pop
lea
mov
push
dec
addb
cwtl
jo
pop
mov
push
sbbl
pop
mov
mov
push
sbb
adc
sbb
imul
in
mov
hlt
dec
outsb
or
cmp
mov
sbb
adc
int
enter
xchg
sub
mov
add
mov
dec
jbe
jns
lret
dec
jecxz
dec
adc
sbb
hlt
inc
jno
arpl
xchg
sub
cmp
mov
out
xchg
ds
dec
pop
iret
icebp
fsubrl
insl
push
jbe
leave
xor
lods
push
aam
mov
faddp
js
jno
in
ret
jle
and
jl
ds
imul
xor
icebp
sti
inc
pop
cmp
adc
sbb
aam
dec
jecxz
mov
jge
dec
dec
mov
add
or
mov
mov
test
fmuls
and
mov
or
cltd
icebp
sub
jecxz
mov
into
inc
mov
pushf
lret
mov
hlt
test
push
xor
push
out
ljmp
or
sbb
scas
outsb
test
gs
loopne
push
sbb
mov
jbe
adc
xor
pushf
daa
mov
shrl
or
fwait
or
repz
fldenv
cmp
mov
xchg
sbb
cmpsb
les
ret
pop
inc
pop
mov
mov
ret
inc
jp
mov
sarl
pop
int
mov
imul
jmp
idivb
scas
xchg
out
dec
mov
mov
setle
shl
je
mov
mov
test
mov
xchg
sbb
out
sub
into
es
out
jge
arpl
sub
sub
jb
inc
dec
mov
andl
mov
or
jbe
fisubl
push
sbbb
nop
pop
jns
xchg
mov
hlt
mov
aam
and
adc
inc
push
das
clc
sub
cmc
mov
pop
jl
add
ss
cmp
mov
lock
scas
jne
xchg
xchg
add
xchg
subl
inc
add
ja
xor
stc
popf
or
xchg
daa
fdivrs
imul
out
xor
add
pushf
mov
icebp
stc
cmp
stc
andb
into
daa
shrb
bound
xor
xchg
in
inc
int
xchg
pop
lahf
loop
ret
xor
pop
mov
push
out
xchg
stos
loope
mov
mov
jns
push
lea
pusha
popa
loopne
aam
pop
es
adc
pop
shrb
jno
shrb
push
ss
sbb
movsb
sbb
js
imul
ret
mov
leave
xchg
add
and
push
aas
dec
loope
int
jle
icebp
ret
mov
mov
or
dec
pop
stc
lods
push
aas
xchg
test
fs
test
xchg
lret
lret
repnz
inc
dec
sbb
clc
sub
xchg
inc
call
or
dec
lret
fisubl
stc
dec
in
sub
in
sti
shrb
xor
clc
in
frstpm(287
lret
or
mov
or
pop
push
dec
mov
mov
rol
jnp
or
push
fwait
adc
lock
mov
xchg
pop
mov
mov
fistps
fdivl
lods
fadd
aam
push
jg
shrb
stos
scas
icebp
fbstp
ficoml
out
in
sbb
pusha
mov
dec
in
out
loopne
mov
inc
inc
xchg
pop
daa
ljmp
xchg
xor
inc
rorb
imul
testb
addr16
sbb
pop
mov
sub
xchg
loope
stc
sub
rclb
push
jnp
insb
lods
jmp
xchg
data16
push
lret
sbb
jl
and
data16
and
add
jg
imul
sub
and
out
pop
outsb
sub
sub
negb
add
push
test
mov
aas
inc
dec
call
mov
into
ror
jmp
sbb
insl
mov
ss
cwtl
mov
scas
mov
pop
sbb
pop
dec
jl
js
fisubl
dec
sub
stos
jmp
nop
mov
push
jnp
cs
mov
leave
jg
mov
and
shlb
es
dec
imul
xchg
test
incl
in
sti
sahf
fiaddl
iret
ss
adc
jge
and
and
filds
pop
leave
and
mov
xchg
push
mov
pop
add
out
ljmp
dec
push
mov
pop
and
pop
or
out
cmp
cmpsl
repz
or
adc
jp
data16
nop
xchg
nop
imul
push
mov
in
xchg
adc
cmp
mov
bound
fnstcw
aad
xor
dec
cli
gs
sub
push
adc
mov
xlat
outsb
shl
or
popf
sar
cmp
pop
ja
jne
xlat
lret
jp
faddp
mov
loop
in
icebp
dec
sub
js
popa
cmpsl
fidivs
leave
or
dec
nop
rolb
call
cmp
imul
and
or
das
mov
adc
mov
xor
outsl
cli
dec
jae
xor
mov
inc
lcall
sbb
jl
mov
mov
aaa
mov
rol
js
outsb
dec
pop
mov
mov
stos
cmp
out
xchg
shrb
cmpps
lds
pop
imul
in
popa
aad
lds
sbb
aam
dec
mov
jmp
adc
xorl
push
dec
mov
xorl
pop
mov
jb
addr16
stc
sub
dec
cmpb
mov
and
jbe
daa
and
jl
xchg
sbb
mov
mov
lds
sarl
sub
mov
sarl
xchg
push
hlt
sbb
mov
cmp
lods
cmp
iret
fcmovnu
movsl
repz
push
movsb
cmp
je
dec
je
pop
mov
mov
sub
cmpsl
push
cmp
iret
sahf
push
sbb
dec
ss
or
mov
mov
lret
lea
push
je
jb
and
cmp
popa
mov
push
adc
sub
inc
scas
xchg
mulb
outsb
lods
repz
sti
xor
das
mov
or
filds
es
cmc
jbe
test
stos
je
lock
lahf
cmp
xor
add
inc
jno
cld
out
int3
add
ret
cltd
pop
mov
sub
mov
cs
push
insl
add
mov
xchg
test
std
movd
pop
jl
cmp
repnz
and
jge
dec
mov
mov
mov
ret
push
ret
faddp
and
xor
xchg
sbb
pop
les
xor
add
movsb
lret
or
ret
dec
mul
xchg
add
inc
cmpb
addr16
rclb
icebp
loope
add
sub
sbb
dec
inc
mov
outsl
shrl
les
loope
xchg
aas
shrb
cmp
sbb
popf
or
adc
pop
dec
push
stos
cmp
pop
ja
loopne
and
icebp
js
inc
add
cmc
adc
popa
addl
cmp
scas
outsb
clc
je
mov
popa
cmp
jmp
and
je
or
outsl
cmpsb
or
scas
jle
das
mov
cmp
or
es
push
outsb
mov
movsl
push
leave
and
xlat
pop
shrb
cwtl
shrl
in
mov
or
fldt
inc
xor
popl
fdivrl
push
gs
sbb
mov
mov
sub
movsl
push
popf
sbb
push
or
test
dec
mov
xchg
inc
and
push
push
or
fisttpl
shrl
das
xlat
lahf
shll
call
pop
mov
dec
rol
fidivrl
cmp
mov
xor
xor
mov
xchg
push
cmpb
scas
mov
push
lock
or
mov
mov
sbb
lcall
insb
pop
fidivrl
mov
rcrb
fucomi
dec
icebp
pop
cmpsb
rorb
outsl
mov
ljmp
in
dec
and
dec
arpl
cmpb
sbb
sarl
enter
mov
push
mov
fildl
ss
xchg
cmp
and
mov
stos
mov
icebp
inc
xor
push
lods
mov
adc
mov
repz
pop
cmc
adc
jb
cltd
xchg
mov
repz
sbb
fsubr
fcomip
xchg
stc
jnp
sub
int3
dec
pushf
cltd
xor
pop
andl
inc
xor
es
iret
xor
fabs
dec
cld
or
pop
and
cmc
or
push
sub
inc
mov
jp
mov
push
cli
lahf
fiadds
pop
cmp
cmpsl
ds
cmp
jns
rol
jle
xor
xor
xchg
sbb
inc
pusha
ss
push
mov
or
sarl
loopne
xor
mov
xor
frstor
sbb
cmp
icebp
push
rorb
add
lods
sbb
dec
xchg
lock
pop
jbe
xor
xchg
test
add
aaa
mov
lcall
pmaxub
cld
rdtsc
je
inc
dec
aaa
pop
in
or
imul
stc
test
adc
lahf
inc
sarb
xor
xchg
xchg
or
mov
rcl
nop
cmovp
scas
inc
pop
mov
out
ljmp
fwait
xor
push
pop
fimull
cltd
fbstp
mov
jne
inc
mov
xchg
lahf
jmp
xchg
mov
call
dec
loop
iret
mov
pop
out
icebp
movsl
fs
cmp
push
js
cli
sarl
loop
adc
addr16
push
in
fwait
xor
mov
mov
lret
mov
add
stos
inc
mov
adc
adc
enter
or
sbb
pop
sub
lahf
fs
sahf
jle
cli
pop
out
fucomp
sub
flds
scas
adc
popf
push
push
adc
mov
xchg
adc
mov
sbb
xor
push
xchg
jne
xchg
add
lock
out
sub
cwtl
daa
call
push
ljmp
pop
sbb
xchg
xchg
je
dec
xor
jbe
adc
add
lea
testb
out
xor
cmp
addb
xor
push
in
shr
push
cmp
nop
out
xor
and
push
iret
dec
inc
fsubrl
xchg
cmpb
das
or
dec
sbb
jae
xor
mov
jg
xor
inc
mov
and
xor
das
test
stc
adc
movsl
pop
lock
push
sahf
push
sub
lahf
sbb
adc
sub
sbb
movsb
xchg
xor
jae
lret
test
and
jns
sbb
daa
lods
aas
cmp
xchg
xor
sub
push
lods
push
xchg
icebp
mov
jb
pop
xchg
ror
push
add
out
push
test
std
xchg
fidivs
lret
dec
in
xchg
popa
and
ffreep
imul
push
mov
and
test
push
shrb
inc
mov
popa
jnp
mov
movsl
mov
pop
adc
mov
sbb
mov
aas
xor
adc
test
mov
int
aam
mov
out
inc
cwtl
pop
add
cmpsl
shrb
gs
jl
xor
popa
xor
sbb
inc
cmpsl
mov
lret
aad
int3
sub
pop
jb
and
clc
sub
mov
xor
push
mov
push
sbb
mov
mov
lea
stos
lods
mov
dec
lods
sub
out
xchg
sbb
mov
mov
andl
sahf
xor
dec
push
aaa
xchg
icebp
outsb
lock
arpl
aaa
aaa
push
or
jbe
into
addr16
and
aad
inc
test
sub
mov
push
inc
sub
pop
testl
hlt
rol
push
repnz
xor
sub
cmp
sub
xlat
inc
out
pop
pop
testl
bound
mov
cmp
andl
push
fsubrs
mov
or
cmp
cpuid
xchg
cmp
mov
jmp
cmp
sarl
test
push
popf
call
push
ljmp
mov
lcall
cltd
cli
hlt
aaa
mov
pop
clc
mov
test
push
lods
ds
gs
stc
sbb
push
rolb
xchg
lds
add
test
xchg
in
add
jecxz
inc
fsubrs
or
pop
stos
cmpb
popf
call
lahf
dec
sbb
hlt
adc
sahf
mov
mov
lods
sub
in
cmp
lret
cmpps
pop
in
push
xor
xchg
subl
pop
mov
add
mov
and
adcb
sbb
call
rcl
stc
xlat
imul
or
loop
adc
mov
push
or
pop
inc
std
aaa
test
add
xchg
sub
pop
push
push
stos
pop
sti
shrl
shr
inc
mov
jmp
mov
shl
sti
out
xor
jns
shrl
jb
add
add
clc
dec
jo
dec
fdivrs
pushf
in
test
scas
inc
imul
aas
cld
sbb
testb
inc
repnz
xor
lcall
and
ret
popf
cmp
stos
and
mov
push
or
jo
out
adcb
adc
xchg
out
and
jbe
test
push
sub
dec
cmp
pop
inc
mov
ja
inc
out
xor
sub
fstpt
or
mov
in
fxch
fidivs
push
ljmp
inc
bound
gs
lret
ljmp
arpl
daa
repnz
push
inc
enter
inc
fs
push
lahf
push
cmp
add
clc
xchg
pop
and
fmul
sub
sbb
inc
lds
pop
or
adc
mov
iret
and
daa
xlat
repz
stos
adc
aad
mov
ds
mov
push
out
les
aaa
xchg
call
test
sahf
dec
js
leave
jno
test
in
bound
lock
nop
inc
mov
sarl
outsb
loop
mov
bound
fisubs
ret
inc
in
in
fwait
les
aas
jo
mov
movsb
mov
mov
rcrl
insl
jge
adc
popa
sbbl
into
ds
in
ds
mov
cmp
lds
xchg
mov
movsl
movsb
cld
push
fcmovnb
dec
cmp
cltd
aaa
pop
scas
es
pop
mov
mov
mov
es
sbb
inc
and
es
xchg
jns
xchg
icebp
insb
xchg
in
ret
lea
ret
or
negl
pusha
aaa
push
jae
and
leave
movsl
hlt
inc
jo
pop
lock
loope
cmp
loope
call
pop
mov
mov
mov
stos
nop
xchg
sbb
xchg
cwtl
lcall
pushf
mov
xchg
imul
mov
fdivrs
inc
cmp
stos
aad
inc
pop
imul
dec
clc
aaa
fnstsw
xchg
push
push
xlat
call
adc
sti
mov
bound
xchg
mov
dec
mov
loopne
cmp
loop
sub
das
cmc
js
sub
cmp
fdivs
pusha
sub
seta
xchg
ss
setle
xlat
and
pop
in
psrlq
imul
xchg
jg
and
outsb
daa
add
aas
cltd
ss
lods
pop
test
add
push
or
mov
mov
mov
mov
push
sub
lea
sub
xor
lret
add
dec
das
mov
clc
test
decl
push
cmpsb
movb
stos
cmp
cmpl
ret
call
cmc
scas
mov
push
sbb
ret
dec
pop
notl
int
xchg
jo
add
jp
push
sub
in
or
js
ret
cmp
dec
dec
lret
popa
cs
cmp
mov
pop
pop
mov
lret
lock
jmp
aas
leave
out
xor
ljmp
out
dec
dec
push
addr16
push
cli
lea
aaa
jne
mov
and
sbb
dec
xchg
loope
fnstsw
push
sub
cmp
xlat
je
push
jecxz
iret
aam
add
mov
push
call
fidivrs
in
sbb
mov
movsl
cmp
scas
adc
cmpsl
mov
mov
leave
loope
adc
cli
jno
cmp
scas
pop
jmp
push
clc
cmc
mov
or
cmpsb
loope
icebp
iret
lcall
pop
std
rcr
fwait
sbb
fildll
pmaxub
cmp
and
jp
es
addr16
and
mov
lds
and
or
scas
mov
dec
adc
cmpsl
pop
out
fldl2t
enter
rorl
mov
popf
cmpb
dec
push
shrl
cmp
pop
dec
aaa
mov
pop
lret
nop/reserved
lahf
jbe
repz
cmp
repz
std
cmp
mov
pop
inc
stos
test
fdivs
das
test
jg
out
jmp
adc
repz
adc
popa
xchg
mov
sti
mov
icebp
push
lods
stc
mov
or
mov
cltd
dec
pushl
mov
out
adc
dec
mov
push
rcr
in
lea
movsl
icebp
sbb
add
or
popa
cmp
leave
pop
mov
arpl
mov
das
jge
lcall
and
dec
dec
ljmp
mov
lods
pop
push
push
pop
sahf
xchg
insb
movsb
mov
pop
loope
push
mov
push
mov
and
inc
add
dec
inc
pop
dec
add
loopne
inc
and
jne
jne
xor
mov
jg
sub
xchg
loop
dec
or
testb
rcrl
push
cmp
push
fs
push
and
std
sbb
cltd
or
push
scas
push
cwtl
out
xchg
movsb
shrl
repnz
enter
aam
mov
lock
repz
jmp
sbb
hlt
vpaddsw
cmc
cmp
pusha
fisttpl
aas
stos
jmp
shr
cli
add
or
std
cwtl
jge
outsl
mov
mov
movsb
xchg
cmc
push
and
ret
aas
imul
xchg
divb
call
cmp
mov
hlt
sbb
insl
sarl
jmp
mov
dec
bound
sbb
add
je
jmp
pop
dec
adc
sbb
pop
sti
push
insl
shlb
fwait
rolb
xor
jp
or
lds
xchg
sub
push
pop
incl
test
xchg
push
repnz
in
pop
mov
scas
ret
arpl
xchg
dec
fidivl
and
andl
test
ss
jno
fstpt
mov
cli
jbe,pn
bsf
pop
cmpsb
inc
pop
lahf
mov
jb
pop
in
jne
subl
xor
bound
int3
outsl
je
adcl
aam
jecxz
mov
out
add
rcrl
lods
stc
in
addr16
arpl
mov
inc
sub
push
dec
cli
leave
or
outsb
push
push
xor
xor
repz
cmpsb
adc
push
out
int3
adc
and
xchg
es
mov
xchg
fildll
adc
xchg
mov
push
repz
and
jns
xorl
les
xor
mov
sub
cmp
mov
sub
dec
clc
cmpsl
montmul
scas
push
lock
test
mov
inc
call
ret
mov
pop
ss
sub
xchg
push
ret
mov
mov
push
cltd
lea
and
stc
stos
inc
repnz
lret
and
test
mov
jo
sub
rclb
inc
lret
cmpsb
xor
arpl
ret
push
xchg
scas
scas
inc
sbb
jne
decl
mov
dec
ret
dec
gs
outsb
push
lods
jbe
out
cmpsl
or
cmp
xchg
out
gs
insb
mov
outsb
pop
sub
fs
or
test
cwtl
mov
test
out
fistps
jmp
bound
add
xor
out
inc
pop
out
dec
repz
ljmp
and
clc
ja
ret
mov
in
pusha
mov
mov
adc
mov
mov
ret
jnp
push
les
gs
test
pop
mov
out
ja
push
cmpb
dec
bound
inc
loopne
and
jno
push
push
out
adc
js
in
ds
jo
scas
aaa
pop
jmp
mov
insb
daa
repnz
mov
outsb
adc
mov
mov
jmp
sbb
mov
cmp
push
push
or
fs
add
popl
dec
in
adc
test
stos
inc
icebp
push
sbb
mov
xlat
and
sub
and
pop
fisttpl
test
jb
nop
cld
dec
lock
rcrb
add
and
insb
fadds
shrb
push
jecxz
or
arpl
inc
test
mov
dec
pop
fbld
xchg
shrb
aad
xchg
sub
aaa
jmp
ss
xchg
daa
adc
and
int
add
ljmp
mov
sbb
iret
xor
push
dec
dec
nop
lcall
ds
pop
jo
push
fsub
mov
pusha
clc
adc
fs
pop
adc
insb
mov
in
mov
outsb
out
jg
pop
cmc
mov
push
idivl
and
sahf
adcb
fs
or
mov
sbb
pop
xor
sbb
pop
mov
inc
lret
movsl
mov
jns
sbb
lods
mov
xor
inc
stos
push
cwtl
inc
add
ficompl
jne
mov
and
cmp
sarb
adc
and
fsubrl
xor
or
test
pop
add
xchg
das
ret
out
cwtl
sub
aam
arpl
and
and
roll
xchg
lock
sbb
jnp
add
je
pop
mov
ret
mov
fnsave
dec
and
aas
scas
xor
in
movl
ret
cmp
pop
fmul
sbb
ds
cmc
lods
das
fwait
sub
sahf
mov
cli
and
mov
jne
stos
repnz
xchg
xor
push
mov
int
lods
mov
mov
and
add
movsb
cmp
cmpb
fs
rolb
and
jbe
jl
xchg
push
add
pusha
xor
jl
push
sahf
push
and
cmp
cwtl
xor
call
dec
sub
icebp
shrl
jne
mov
add
mov
mov
add
inc
rclb
push
push
mov
insb
sbb
mov
es
notl
dec
stc
sbbl
outsb
mov
roll
mov
subl
sbb
fwait
ss
nop
loop
icebp
fs
push
testb
imul
imul
fwait
sti
push
fsubrs
ds
stc
jge
out
inc
sahf
andb
jno
cmp
popa
sub
mov
test
int
add
mov
jmp
aas
icebp
cmp
or
mov
std
mov
mov
xchg
shrl
xchg
and
fcoml
mov
mov
jecxz
test
int
adc
scas
ret
dec
in
sbb
ret
sub
add
pop
outsl
pop
popf
sub
sbb
sbb
insb
add
push
ds
dec
mov
int3
arpl
testb
mov
sbb
pop
std
mov
insl
ja
pop
psadbw
add
lods
int
test
sti
pop
adc
mov
mov
or
out
sbb
call
sbb
inc
and
test
rcrb
notb
jno
mov
mov
ja
mov
pop
jmp
xor
lcall
pop
adc
xchg
push
fucom
mov
and
jns
outsl
sbb
dec
jbe
jmp
popa
mov
pop
mov
mov
and
mov
jne
mov
lret
in
gs
add
xor
adc
daa
mov
pop
dec
push
jmp
mov
out
pop
sub
jno
fildll
sbb
imul
addr16
jle
mov
rcrl
shll
xor
xchg
sbb
in
pop
push
adc
cwtl
test
cmp
jbe
in
pop
cmp
fdivrs
and
fcmove
cmp
out
cmp
mov
jae
dec
mov
repz
repz
mov
dec
jno
jo
fwait
mov
cmc
loop
dec
mov
es
push
movsb
repnz
sub
in
dec
dec
icebp
shll
adc
xchg
dec
and
les
sbb
jle
aad
lret
mov
ja
subb
test
call
jns
js
mov
out
stc
repnz
mov
daa
inc
gs
jp
xchg
and
cld
lock
imul
mov
xor
jmp
stc
sbb
daa
inc
dec
mov
arpl
and
inc
pop
mov
sub
push
std
xchg
mov
jne
xchg
lods
sbb
cmp
cwtl
dec
xchg
aas
inc
loop
dec
mov
sub
lret
mov
dec
and
test
out
faddl
int
xchg
dec
ds
stos
jnp
mov
out
adc
cmp
test
dec
rorb
mov
jle
es
cmpsl
inc
stos
add
lcall
xchg
stos
push
xchg
cmc
mov
std
mov
xor
jl
jmp
inc
dec
sbb
ss
outsl
push
sub
mov
jbe
jle
jmp
sub
fwait
xor
mov
dec
mov
cmc
into
repnz
mov
or
pop
movsb
push
dec
cmc
mov
cmp
roll
pop
push
inc
pusha
ss
into
inc
cmc
or
mov
lret
xor
push
mov
push
mov
fwait
pop
sub
or
and
shll
pop
div
cmovno
mov
push
ja
out
sbb
ds
lods
outsl
cmp
subl
lret
fwait
movsb
sti
dec
test
adcl
mov
imul
fwait
imul
xor
xor
adc
test
mov
adc
sub
lahf
ss
or
ret
aaa
xor
lea
adc
hlt
mov
mov
mov
ds
dec
xchg
push
outsb
push
xchg
pop
cmp
mulb
push
sub
pop
jno
mulb
inc
ja
jle
nop
insb
inc
xchg
fs
hlt
aaa
inc
sub
xchg
pop
addr16
lods
pop
imulb
sub
fnstcw
in
xchg
cs
inc
dec
fistl
mov
cwtl
repz
out
xlat
mov
mov
xchg
stc
sahf
pop
pop
adc
imul
mov
mov
add
cmpsb
lcall
mov
mov
into
and
push
adc
frstor
pop
sub
jmp
sub
dec
sar
sbb
pusha
and
data16
in
jecxz
jb
xor
fisttpll
cld
sbbl
imul
out
mov
or
or
sbb
xor
in
and
jmp
test
cmc
fadd
aad
sbb
pushf
int3
sub
inc
fnstenv
and
fsubl
pcmpgtd
aam
testl
mov
enter
add
clc
test
insl
push
faddl
dec
pop
out
mov
add
push
and
cmp
sub
dec
pop
roll
push
mov
mov
stos
mov
xchg
lret
fwait
mov
mov
push
inc
mov
pop
mov
mov
inc
fdivrl
jg
fwait
popa
aam
cli
sbb
es
andl
fidivrs
sub
cld
and
mov
int
jb,pt
jmp
mov
mov
mov
lret
cmp
add
cmc
scas
les
xlat
mov
shl
mov
hlt
lret
imul
mov
push
hlt
adc
jecxz
sbb
sub
aam
mov
dec
sbb
mov
mov
incb
and
or
mov
sbb
stos
cmc
arpl
imul
aas
clc
inc
pushf
roll
std
cli
fldt
or
std
or
mov
xlat
mov
int
mov
scas
das
jo
in
and
ret
adcb
out
lds
inc
insb
xor
push
cmp
xor
loopne
out
mov
adc
pusha
dec
sbb
xor
and
out
stc
nop
mov
nop
or
cmp
lods
pop
pop
sbb
pushf
mov
test
adc
sub
dec
loope
dec
jecxz
test
cmp
xchg
push
dec
adc
leave
push
ret
pop
add
stos
jge
es
add
loopne
or
push
mov
notb
sub
repnz
sub
and
add
pusha
fistpl
xor
nop
bound
stos
lret
jl
add
std
fwait
je
push
into
jbe
adc
std
push
push
pop
repz
ja
loope
push
xchg
call
scas
testl
lret
jecxz
push
inc
inc
aam
ret
dec
inc
out
fmull
xor
cmp
push
xchg
cld
icebp
inc
shr
xchg
jmp
in
mov
cmp
pop
in
test
jns
std
or
fstp
jns
cli
sbb
pop
inc
call
das
pop
popa
sbb
jo
xchg
mov
inc
lods
orb
cmc
push
or
repnz
das
lret
hlt
mov
inc
lods
inc
stc
gs
jb
push
inc
xor
jle
fildl
dec
push
out
popa
movsb
aam
aam
push
add
subl
cmp
xchg
mov
xor
je
mov
fnstenv
or
dec
test
ds
mov
outsb
jns
shll
leave
stos
cli
shlb
or
cs
push
test
lcall
lret
add
imul
repz
cmpsl
ds
loopne
jo
mov
imul
dec
cs
jp
pusha
pop
mov
out
insl
sbb
in
xor
jnp
orb
push
repnz
dec
mov
fdiv
sbb
shr
aaa
cmp
pusha
sbb
inc
mov
xor
stc
sbb
in
enter
or
sub
addr16
movb
push
into
enter
jo
inc
roll
popa
mov
fldt
shll
cltd
imul
and
pop
lock
xor
scas
popf
xchg
add
pop
adc
mov
rcrl
sbb
mov
cmpsb
add
les
cmp
js
pusha
xor
add
mov
out
mov
out
insl
fucomi
test
xchg
inc
in
lret
jae
adc
js
adc
inc
repz
pop
movsb
jo
sub
in
xor
in
mov
loope
movsb
daa
lcall
cli
and
leave
sub
mov
push
add
add
fcoms
push
mov
mov
jb
loopne
sahf
pushf
ret
jg
pop
jns
push
pop
and
inc
pop
and
jbe
inc
rcrl
inc
and
lret
test
and
cwtl
negl
inc
sbb
in
jle
sbb
popa
mov
rclb
iret
shlb
xchg
pop
imul
lods
mov
xchg
test
sahf
add
mov
jnp
aas
push
dec
dec
sub
cmc
ret
test
sbb
mov
imul
fdivl
xor
push
xchg
inc
cltd
pop
loop
or
cld
fcomps
xor
sbb
les
or
cmp
ss
mov
pop
xlat
jecxz
pop
or
xor
mov
add
mov
out
ss
addr16
lods
xlat
out
lods
fidivs
push
dec
dec
and
jge
adc
xchg
arpl
pop
pushf
or
outsl
dec
pop
push
nop
shll
mov
sbb
or
imul
inc
movsb
rolb
addr16
xlat
fmul
dec
negb
ja
sub
nop
sbb
push
out
mov
dec
fmul
fcomps
outsl
daa
push
leave
fmul
inc
pop
aaa
xor
arpl
ds
into
sub
pop
xchg
lret
arpl
ljmp
movsb
sub
pusha
dec
jl
add
mov
jnp
lock
lahf
or
sub
xchg
adc
and
int3
xchg
sbb
out
inc
lds
sahf
jb
es
shl
les
icebp
lds
mov
xor
mov
dec
dec
jno
mov
or
mov
mov
lock
pushf
mov
push
call
or
jno
push
sar
mov
les
leave
lea
push
lahf
mov
clc
addr16
xor
and
inc
jae
push
shl
subb
outsl
mov
insb
sub
push
sar
pop
adc
xchg
fists
mov
dec
sbb
adc
jo
cmp
cmpsl
ja
and
movsl
test
mov
sub
xchg
mov
in
inc
pop
mov
sbb
and
repnz
mull
test
sbb
fwait
outsl
in
mov
push
icebp
roll
pop
mov
cmp
cmpsb
sub
iret
adc
enter
cmpsl
and
inc
shlb
insb
jns
test
incb
inc
jp
xor
in
push
enter
js
inc
les
imul
mov
ljmp
add
xor
dec
mov
jns
dec
in
add
jne
sub
push
pop
test
add
dec
lods
cltd
xor
sub
xor
cmpl
mov
iret
pop
sbb
les
sub
jl
ret
mov
movsl
cmp
xor
out
push
popf
call
push
mov
lock
fisubrl
sbb
mov
pop
outsl
sbb
add
cmp
cmp
insb
sub
inc
dec
shrl
dec
jno
jb
movsb
data16
mov
psrld
cmp
cmp
push
cmp
loopne
cwtl
out
mov
mov
adc
mov
adc
pop
xor
aas
addr16
mov
jne
xchg
mov
mov
adc
imul
sbb
pop
adc
xlat
inc
jb
inc
mov
pop
mov
ret
cmpsb
in
push
in
sbb
cmp
mov
mov
aaa
cmpsb
sub
pop
sub
fwait
jb
pop
lock
sub
xchg
dec
mov
das
push
mov
sbb
xchg
and
out
or
pop
ds
loopne
inc
push
call
lret
imul
push
mov
mov
scas
sti
in
xor
sub
sub
addl
repz
enter
sbb
inc
sub
mov
fldenv
in
std
fwait
add
rcr
fs
fcomip
xchg
add
aas
pusha
mov
mov
dec
sahf
push
call
inc
lock
push
ficomps
ficompl
xchg
into
lods
leave
add
adc
and
xor
or
add
adc
imul
repz
push
imul
shrl
xchg
rclb
or
mov
lahf
sarb
mov
scas
scas
rcl
out
mov
sub
inc
mov
gs
pop
mov
jmp
popf
aad
mov
dec
push
cltd
daa
lcall
adc
mov
dec
aaa
jae
jbe
out
mov
mov
xchg
cmp
lds
fnstsw
fsubrs
scas
xchg
sub
sub
das
outsb
mov
push
int3
andl
mov
push
gs
cli
adc
mov
xchg
mov
add
xor
cwtl
inc
inc
fdivl
out
ja
outsb
jecxz
mov
dec
add
jns
out
xchg
rol
cmp
ret
inc
ret
xor
mov
jne
mov
ljmp
test
xchg
cmp
inc
inc
inc
stos
cld
data16
xchg
mov
adc
cmp
mov
and
sbb
loopne
sub
dec
sbb
dec
or
pop
insb
jle
aam
lods
stc
jno
or
pop
scas
mov
jb
repnz
jbe
xchg
jbe
nop
inc
sahf
dec
jo
mov
jns
jmp
mov
adc
loopne
test
scas
jecxz
pop
repnz
jae
sub
lcall
pop
jns
or
adc
loopne
inc
test
out
jnp
out
and
pop
shr
and
jno
xchg
fadd
jge
dec
leave
and
test
pop
sarl
inc
xchg
pushf
xor
addr16
pusha
inc
fistl
xchg
add
mov
cwtl
test
jp
mov
mov
and
xor
or
dec
sub
cmp
mov
cli
cmc
sub
mov
adc
push
jns
into
stos
xor
mov
jno
adc
pushf
lcall
insb
mov
lcall
or
pop
sub
or
es
xchg
sti
dec
sub
jmp
xchg
dec
lret
lea
jne
iret
orb
out
je
adc
fcoms
mov
sub
xor
inc
sbb
push
int
mov
loop
repnz
out
mov
jge
mov
bound
dec
fdiv
subb
lcall
or
push
cs
cmp
xchg
mov
cmpsb
aas
mov
dec
sarb
iret
xchg
cmp
dec
mov
dec
adc
ss
in
pop
ss
sub
dec
fwait
dec
jno
call
inc
xor
dec
hlt
ljmp
in
icebp
decb
cmp
pop
mov
in
aaa
jne
pop
push
pusha
and
xchg
inc
jl
lahf
imul
mov
jge
popf
sahf
dec
scas
mov
and
adc
call
xchg
xor
push
out
pop
cmpb
pusha
ret
lods
mov
pop
test
stos
arpl
dec
mov
nop
mov
icebp
and
push
jb
into
pop
xor
jecxz
shrl
pop
stos
add
add
loope
outsb
int
mov
dec
js
adc
pop
test
sahf
out
sbb
loopne
pushf
cli
loopne
ja
jnp
jns
hlt
movsl
and
inc
jle
imul
xorl
sub
mov
ficompl
push
add
imul
aam
lock
adc
xchg
test
inc
ds
popf
fs
xor
add
outsl
push
jne
jnp
fisubrl
mov
sbb
addr16
jge
xor
cmp
pop
jle
loop
ret
loope
ds
outsb
cmp
xor
or
lds
inc
cmp
xchg
loop
rorb
faddp
mov
rcrl
add
fbstp
in
cmpsb
loop
adc
mov
xchg
pop
pushf
ljmp
mov
gs
or
xchg
cmpsb
mov
push
rclb
mov
inc
xor
xor
dec
adc
ljmp
sbb
addr16
fcoms
sbb
leave
xchg
or
pop
cmc
ss
out
scas
cmpsb
test
iret
jne
aam
mov
jle
mov
mov
adc
mov
cmpsb
dec
outsb
aas
xchg
jmp
sub
in
xchg
mov
andl
imul
push
stc
fs
jno
fsubs
rclb
pusha
stos
imul
push
or
push
xor
sub
dec
cli
sbb
ss
dec
cmp
inc
jmp
dec
pop
jmp
sarl
jb
jnp
mov
mov
dec
cs
mov
jg
repnz
mov
jo
add
cmp
ljmp
cmp
cwtl
rol
cld
jae
push
mov
push
sub
pop
mov
addr16
jl
or
fimull
sti
mov
sub
iret
xlat
je
xchg
scas
cmp
fadd
mov
lahf
ret
mov
or
pop
sub
jmp
sub
clc
mov
push
sahf
sub
add
into
pop
push
or
in
lods
cli
add
fists
repz
cli
cmp
ds
mov
mov
flds
das
pusha
test
push
popf
xor
xor
mov
pop
in
stos
jo
call
cld
xor
ljmp
leave
xchg
adc
xor
int3
std
xor
sbb
push
pop
xchg
jb
xchg
sub
add
scas
hlt
js
pop
das
and
adc
cmpsb
inc
and
enter
mov
mov
xchg
arpl
les
cmp
sub
push
and
fsubrl
sahf
std
pop
rolb
add
sub
jecxz
push
jne
push
dec
aaa
sarb
gs
mov
outsl
push
xchg
aaa
into
enter
mov
stos
leave
enter
or
out
dec
add
int
cmpsb
popf
push
sub
pushf
addl
cltd
sbb
push
push
out
jb
xor
or
cli
fidivrl
test
loop
mov
test
pushl
adc
inc
cli
pop
mov
jne
add
popf
push
pop
push
mov
inc
dec
jb
cmp
mov
push
inc
in
insb
adc
ja
test
adc
pop
repz
and
inc
jnp
or
mov
xchg
shrb
mov
pushf
xor
mov
into
mov
sub
push
sbb
inc
dec
je
or
addr16
inc
notl
mov
push
gs
push
fdivr
pusha
daa
test
xchg
mov
insb
scas
jns
push
pop
aam
push
testb
insl
movsb
and
push
fidivl
push
xor
mov
inc
lea
aam
adc
lret
or
jnp
in
push
jae
in
mov
rclb
aaa
jp
adc
xchg
sub
mov
add
and
dec
jl
cmp
pop
xorl
mov
fistpl
lgs
inc
push
jmp
sub
roll
sbb
clc
or
int
jne
pop
mov
mov
xchg
jnp
sbb
mov
aam
pop
test
mov
xchg
out
push
aaa
dec
inc
mov
dec
out
adc
cmp
sbb
aaa
rolb
add
shll
pop
adcl
push
push
jne
sbb
cli
xchg
mov
mov
out
cmp
xchg
xchg
dec
call
dec
out
jb
int3
aad
lods
pop
mov
adc
scas
or
pushl
pop
test
rolb
pop
inc
mov
adc
rorb
sub
jae
or
mov
mov
lods
scas
or
push
aaa
int3
lock
push
test
clc
test
loopne
icebp
adc
push
jecxz
in
dec
rolb
mov
bound
xchg
inc
mov
mov
xor
iret
cld
sub
jbe
xchg
mov
fwait
cmpsl
mov
stos
dec
and
callw
adc
aam
cmpb
scas
loope
xchg
cld
sbb
pop
or
xor
mov
int
or
or
hlt
inc
and
out
sub
repnz
xor
out
mov
clc
or
movsl
mov
xor
dec
xor
data16
mov
out
jns
cs
adc
fsubrl
push
push
das
jns
pop
stos
iret
push
add
and
stos
mov
lret
stos
mov
bound
jle
testl
pop
insl
sub
test
in
popa
mov
inc
or
cmc
and
sub
jmp
mov
or
imul
or
aad
dec
lahf
mul
out
fnsave
jge
inc
dec
test
push
fwait
ret
loope
xlat
dec
dec
add
das
imul
xor
addr16
adc
push
rorb
cs
movsl
int
add
hlt
pop
hlt
or
lea
inc
imul
xor
mov
add
adc
and
aaa
mov
sub
clc
cmpsl
je
lret
fxch
or
and
lahf
xchg
jo
ret
shl
cli
fists
xor
push
jg
inc
scas
mov
repnz
and
sbb
jns
in
sbb
mov
shll
hlt
xchg
aaa
push
rcr
push
or
inc
mov
lcall
imul
push
mov
je
pop
imul
lea
ljmp
das
pop
mov
xchg
adc
xchg
cmp
dec
les
out
dec
mov
andb
inc
pusha
mov
dec
mov
clc
pop
or
push
lret
call
pusha
fildll
adc
sbb
pop
cmp
add
pop
pop
mov
loop
clc
sbb
cltd
pop
adc
push
lret
iret
push
roll
clc
lret
push
out
sti
test
fldenv
mov
leave
rclb
insb
ljmp
rolb
push
movsl
dec
ss
cmpsb
cld
mov
movsb
or
jbe
insb
dec
cmp
jno
ret
mov
add
cmp
dec
adcb
mov
mov
sarb
xor
loopne
jo
push
jb
jmp
sbb
dec
ret
inc
fcmovnu
inc
test
sub
mov
divl
popa
add
sub
mov
cltd
pop
scas
or
lds
aas
dec
ds
push
jge
fcmovb
pop
dec
fwait
add
dec
mov
xchg
sub
mov
outsl
fldl
cmc
mov
xor
dec
into
loopne
add
scas
pop
jg
test
mov
in
cmp
dec
or
inc
jnp
xchg
fisttpll
mov
jb
adc
sti
in
xchg
sbb
lea
jae
ret
dec
xchg
test
xor
push
lret
addr16
push
mov
pusha
fildl
xor
sub
dec
xor
jg
mov
cmp
shll
pop
shrb
add
xchg
cmp
int
es
and
and
loope
rcl
sbb
fildll
sub
data16
aas
fsubrs
insb
or
sub
pop
add
push
jno
xchg
pop
rcrb
daa
inc
and
data16
jl
sub
int3
gs
in
add
mov
cmpsl
out
xchg
pushf
fsts
mov
sahf
or
loop
sbb
test
enter
add
or
add
mov
jns
es
mov
insl
dec
adc
dec
pop
cmp
mov
push
xchg
mov
jg
and
add
sbbl
push
shll
sub
xlat
test
movsb
push
out
std
add
outsl
dec
outsb
jmp
xchg
inc
call
adc
nop
sbb
into
shl
pushw
stos
add
clc
dec
das
and
mov
push
pop
incl
cs
dec
fsubrl
ljmp
mov
xorb
nop
je
and
cltd
jno
out
inc
sbb
mulb
bound
dec
call
into
dec
jmp
gs
loope
jmp
addr16
fiadds
pop
idivl
mov
filds
sbb
les
out
fisubs
cmp
mov
divb
enter
loopne
push
dec
bound
scas
int
ja
adc
jne
pop
ljmp
in
rcrb
mov
xchg
xor
mov
lds
or
loope
lcall
mov
sub
test
das
loop
into
aas
fsub
cli
pop
sub
jb
inc
bound
jno
dec
jb
xchg
push
pushf
ja
out
hlt
push
jno
rolb
mov
push
jmp
dec
lds
or
popf
mov
jmp
jecxz
clc
fsubrl
cli
or
sub
ret
add
xor
inc
xchg
sahf
inc
lods
aas
data16
mull
push
ds
stos
mov
setno
mov
lcall
in
lock
jns
push
pushf
xchg
push
push
sub
mov
and
sbb
xchg
mov
dec
ret
shrl
pop
insb
inc
stc
test
out
xchg
push
cld
repz
push
or
fsubrl
outsl
pop
jbe
repnz
cld
aaa
stos
push
and
or
adc
out
sahf
push
inc
stos
sbb
test
and
jo
mov
inc
pushf
lods
mov
mov
addr16
aas
cmpsl
ds
jg
data16
gs
adcl
mov
add
mov
sahf
pop
sahf
mov
test
lods
pop
addl
lods
mov
push
testb
sub
int3
jno
notl
daa
call
outsl
xchg
adc
outsl
insb
add
adc
jp
inc
inc
mov
xchg
jno
cwtl
and
or
lcall
mov
mov
out
mov
jae
xchg
pop
mov
cmc
xchg
mov
call
mov
xlat
push
insl
nop
in
adc
mov
push
clc
clc
sbb
ret
dec
data16
enter
mov
lcall
pop
int
in
ja
mov
jecxz
dec
cmp
je
out
inc
aas
xchg
pop
jne
cmp
test
rcrb
stos
mov
jmp
or
fs
cltd
sub
sub
xor
xchg
or
cmpsl
sbbl
repz
ret
sbb
leave
movsb
mov
hlt
jg
nop
out
mov
outsl
push
mov
cwtl
and
hlt
xor
add
cmpsb
jl
push
pop
xchg
xlat
outsl
jg
jp
mov
js
rcrl
and
test
scas
or
pop
sarb
fldenv
jmp
stos
mov
pushf
outsb
xchg
leave
rcr
xchg
into
bound
dec
push
movsb
jnp
in
and
sbb
and
jmp
or
cmpb
mov
imul
pop
mov
scas
imul
sub
addr16
dec
int
jecxz
lret
aaa
add
repnz
stos
inc
in
xchg
sbb
leave
pusha
ja
pop
pushf
fstpl
test
pop
incb
aas
into
call
and
test
pop
pusha
sub
repnz
shr
hlt
mov
sub
add
mov
dec
loop
leave
and
cltd
mov
inc
outsb
pop
fidivl
lret
shl
xchg
shr
add
inc
movsw
mov
sbb
lahf
add
pop
shll
inc
pop
out
adc
lret
xchg
mov
push
or
fisttps
int3
and
dec
xchg
sub
pop
dec
ja
add
clc
ror
fwait
mov
cmpsl
ds
call
lds
ret
jecxz
rcrl
fwait
xor
dec
and
add
push
jle
adc
and
sbb
mov
jns
mov
push
addl
cmpsb
punpcklbw
pusha
mov
mov
xor
lret
or
push
mov
pusha
int3
xor
loop
push
out
mov
jg
push
jae
das
add
mov
out
add
inc
ret
dec
movsb
std
jae
sub
xchg
in
jg
or
in
mov
cli
adc
pop
jbe
sarb
sbb
xor
cmpsb
inc
xchg
push
cltd
in
mov
push
sub
xor
jae
dec
pushf
inc
in
das
repz
inc
inc
pop
pop
sub
aam
add
push
adc
es
das
jmp
dec
add
subl
cmp
xchg
xor
sbb
push
or
push
or
idivl
mov
and
xchg
add
xchg
sbb
testb
nop
testb
cmpsb
xchg
jg
mov
pop
imul
popf
in
or
outsl
add
hlt
push
rcll
shlb
push
insl
stos
aas
xchg
lret
mov
icebp
call
or
decb
xor
or
aas
ret
xor
jmp
adc
xor
ss
mov
int3
or
xchg
cmp
sbb
mov
lahf
lock
cmp
les
lret
jg
fdivl
cmovbe
dec
jge
fwait
lods
dec
pop
aad
inc
and
pop
insl
push
xor
shlb
and
jnp
jp
pop
jl
sub
cwtl
push
pop
incl
sti
jae
insb
dec
insl
xchg
cmpb
sbb
call
pop
pop
cld
mov
push
in
iret
pushw
sti
or
jg
orl
lea
lcall
icebp
fbstp
push
cs
std
or
mov
adc
xchg
push
dec
hlt
add
xor
mov
push
cmpsb
int3
dec
mov
push
sbb
loop
fmulp
pusha
adc
xchg
sbb
sbb
xchg
push
pop
xchg
xlat
sbb
jp
xor
mov
add
push
movsl
in
shrb
aad
aas
fisubrs
jnp
sahf
lods
aam
roll
movsl
sub
mov
xlat
mov
xor
or
insb
xor
lods
cmp
push
pop
sbb
mov
aaa
pop
cmp
xchg
mov
sbb
push
movsb
shl
pusha
mov
cs
in
xor
xor
and
add
jp
hlt
xchg
leave
pusha
enter
repnz
mov
mov
adc
cld
aad
into
push
es
jmp
repnz
inc
xor
or
imul
mov
popf
fistpl
aad
add
ret
mov
pop
imul
js
data16
dec
sbb
push
xor
pop
test
scas
test
testb
ds
sub
repnz
jno
ljmp
push
rcll
mov
icebp
mov
scas
jae
lcall
enter
fcomps
mov
aas
outsb
pop
test
imul
xchg
imul
sbb
add
ret
mov
and
push
sbb
mov
cmp
fsubrp
imul
icebp
xor
aad
pop
pop
inc
les
outsl
es
jl
and
hlt
inc
dec
cmpsb
or
sub
or
ret
divl
mov
and
xor
sti
or
mov
sar
xchg
dec
jmp
repnz
hlt
mov
mov
and
lds
fldcw
jbe
mov
mov
mov
ljmp
out
add
sub
cmp
pop
pop
out
sbb
divb
pusha
test
or
pop
dec
call
mov
or
pop
test
das
push
in
cmp
dec
push
xchg
jp
lock
outsl
movsl
add
mov
lock
fcmovnb
sbb
adc
add
cli
iret
fs
sbb
test
insb
jbe
insl
pusha
push
adc
push
pop
and
pushf
test
inc
and
aas
sub
and
fmull
sbb
clc
pusha
movsb
rcrb
xor
ds
sti
icebp
ljmp
sbb
add
push
test
adc
or
mov
mov
sbb
push
call
ja
pop
mov
popl
outsb
cmpsl
mov
call
out
cmc
pop
push
leave
jl
sbbl
lods
inc
repz
les
cmp
pop
cs
cmpsb
jge
pop
rcrl
push
push
sbb
std
inc
dec
jns
xor
cltd
mov
push
jo
mov
mov
xor
sbb
sbb
xchg
add
cmpsb
cmp
add
pop
and
xchg
xchg
pop
jmp
aam
es
dec
push
fldcw
cmp
int
or
add
sub
pop
mov
dec
xchg
add
repnz
and
mov
int
add
inc
mov
dec
insb
cmp
adcl
push
and
push
nop
pop
xor
call
xor
dec
pop
or
xchg
addr16
imul
push
mov
dec
and
fstl
mov
push
lcall
jne
mov
and
inc
mov
popa
add
dec
bnd
xchg
jb
and
add
inc
add
mov
fdivs
cmp
mov
ss
aad
mov
cld
and
imul
imul
mov
jmp
cmp
imul
shl
incb
adc
push
addr16
lods
cmc
int3
vpslld
mov
cmp
ss
or
sti
shrl
pop
mov
push
pop
repnz
cmp
insb
outsb
daa
outsb
loope
pop
sbb
icebp
sbb
mov
sar
repz
adc
mov
xchg
pushf
mov
xchg
int
push
ljmp
mov
mov
sbb
loopne
sub
push
insl
adc
fyl2xp1
enter
xchg
and
cs
jo
in
test
dec
in
rcr
in
and
test
jae
in
adc
sub
test
divb
nop
mov
scas
lods
mov
repz
in
cmpsb
mov
int3
cld
imul
andb
xchg
adc
sbb
hlt
mov
repnz
add
mov
push
sbb
jl
aam
or
or
push
pop
sub
shr
jbe
dec
mov
lret
loopne
pop
cmpsl
dec
add
insl
es
out
adc
cmovb
test
dec
jg
clc
add
inc
sbb
add
jne
mov
gs
shrb
mov
cmp
sub
push
popf
jne
ljmp
mov
inc
dec
add
push
cmpb
sbb
stos
imul
xor
mov
inc
push
push
cmc
js
ja
lahf
mov
inc
mov
ds
test
repz
inc
cltd
push
xor
jp
xor
rcrl
or
mov
inc
mov
insb
sub
and
jns
add
loope
xor
sbb
add
sub
ss
stc
pusha
outsl
shr
cmp
add
inc
dec
loopne
mov
inc
push
mov
lahf
stos
sbb
pop
outsb
mov
std
or
test
jl
cmp
push
mov
enter
loop
add
mov
loopne
dec
jmp
pop
or
push
jnp
aas
lods
das
mov
gs
mov
adc
fsubrl
fsub
arpl
jns
sub
lcall
fisubrs
aaa
call
sbb
xor
and
add
inc
push
cwtl
dec
jg
stos
dec
inc
push
jne
imul
inc
loopne
add
inc
in
and
inc
lahf
push
aaa
lahf
test
inc
fcmovnbe
push
je
ss
sub
pusha
inc
add
pop
mov
adc
in
aaa
into
rolb
push
in
movsl
repz
test
jae
jnp
lret
sbb
es
mov
and
mov
incl
fidivs
insl
gs
sub
inc
pop
mov
and
call
ljmp
mov
mov
movsb
fimuls
jb
outsl
pop
push
dec
and
inc
loopne
jns
pop
mov
pop
rcll
mov
fsub
das
mov
clc
shl
mov
hlt
xchg
dec
loop
cmp
mov
mov
loopne
or
movsb
ret
xor
dec
mov
sbb
sarb
push
lods
les
loopne
mov
lds
mov
or
inc
je
dec
fistpll
jecxz
mov
sub
cmp
aad
stos
ret
mov
dec
dec
movsb
mull
jmp
cs
jbe
pop
popf
mov
sbb
or
push
and
addr16
inc
dec
inc
sbb
bound
and
sbb
mov
imul
pop
mov
and
push
jno
subl
aas
inc
and
loope
movb
xchg
add
in
and
iret
cwtl
push
pushf
adc
int
jecxz
in
adc
push
clc
mov
inc
mov
shrl
ja
insl
ror
out
fwait
dec
fs
shrd
in
jecxz
push
sbb
add
or
push
pop
daa
jle
xor
xchg
add
pop
or
xchg
jb
mov
push
pop
fdivp
dec
jno
andl
pop
lods
js
inc
push
insl
lea
nop
mov
shll
in
xchg
push
rcll
mov
push
mov
sub
cmp
enter
imulb
lret
adc
pop
adc
xlat
cwtl
das
or
ss
scas
inc
je
dec
fisubs
mov
jo
xor
loopne
inc
mov
pop
push
cltd
mov
adc
jae
add
movsl
inc
mov
jne
sub
mov
xchg
sub
scas
inc
enter
mov
ljmp
dec
js
add
dec
xchg
jl
lds
lds
mov
inc
xlat
inc
fmuls
pop
cmc
filds
jns
add
sbb
stc
xlat
arpl
sub
lods
dec
rol
fwait
inc
rcl
jae
dec
dec
je
mov
movsl
pop
xchg
sbb
sti
cmp
out
xchg
sahf
mov
mov
stc
rcrb
dec
fwait
jecxz
sub
mov
mov
sbb
hlt
cmp
xor
mov
jns
push
xor
push
push
inc
jle
and
jle
fsubrl
dec
mov
jle
jo
add
stc
dec
es
pop
jo
es
add
xor
hlt
mov
mov
cmc
mov
pop
dec
push
mov
loope
js
sbbl
pop
xchg
ja
sbb
addr16
lods
shll
pop
lret
pop
and
dec
shrl
dec
dec
shrb
push
jle
jne
faddl
test
mov
lods
mov
jo
jnp
mov
push
es
dec
pop
scas
ljmp
test
int
pop
or
lret
fsubrp
or
ret
cmp
mov
add
std
xchg
sbb
ficompl
push
movsl
in
shrl
scas
jno
in
pushf
and
lods
dec
ljmp
mov
xchg
xchg
inc
push
test
or
push
out
mov
add
and
inc
or
mov
ljmp
in
sbbl
fsubl
cmp
lock
add
adc
lret
lods
testb
cmpb
sbbl
jno
icebp
cmpsb
jg
add
xchg
or
test
push
jne
add
xchg
dec
mov
cmp
into
decb
data16
mov
test
outsb
mov
inc
mov
or
fdivl
js
repz
cld
jle
rorl
push
std
mov
in
push
and
mov
popa
idivb
popa
push
nop
stos
cmc
les
outsl
cmp
shl
push
mov
inc
or
push
mov
xor
mov
xor
xchg
inc
out
pop
push
bound
cmp
sbb
jbe
mov
mov
divl
cli
xchg
and
hlt
sbb
pop
cld
sbb
sub
jp
pop
les
arpl
lea
push
lret
int3
inc
inc
fcoml
gs
lods
rcll
rcrl
xorl
and
mov
pop
and
call
or
add
and
fidivrs
or
mov
inc
inc
stc
jmp
lea
insl
jl
outsb
ret
sahf
xor
sbb
and
or
mov
cmp
test
add
inc
testb
aad
imul
mov
jb
dec
sub
dec
sbb
shrl
jecxz
push
ficompl
add
ret
loopne
out
xchg
in
dec
or
jl
lea
or
lcall
pop
stos
push
je
imul
inc
sub
pop
clc
push
xchg
out
jne
rcll
xchg
sub
movsb
pop
dec
divb
addl
xorb
push
mov
xorb
mov
dec
insb
fisubrl
cmp
cmc
nop
and
popf
xor
mov
cmp
lahf
inc
movsl
push
pushf
cli
add
je
imul
push
sub
test
int3
push
mov
mov
imull
fistpl
mov
push
outsl
hlt
push
sbb
dec
fdivrs
rcrb
repnz
es
dec
loop
dec
mov
pop
jge
shlb
cmpsl
xchg
or
inc
inc
mov
fidivs
js
pop
cmpsb
bound
pop
out
push
add
movsl
push
es
enter
pop
cmc
bound
pop
mov
scas
testb
add
or
add
adc
sub
add
push
dec
jo
insb
fnsave
xchg
jb
push
cmp
mov
loopne
lods
loope
mov
aam
pop
out
pop
js
mov
sbb
push
mov
ds
insb
outsl
mov
ret
test
int3
shl
jl
idivl
xchg
jo
inc
cmp
adc
lahf
enter
fwait
xor
mov
cmp
sbbb
pop
fmuls
and
push
xchg
test
adc
add
adcb
aaa
or
cmp
gs
xchg
pop
loopne
mov
rcr
xor
dec
in
lahf
pop
mov
cmp
mov
mov
mov
ja
sbb
andb
test
mov
hlt
adc
popf
es
mov
lods
jp
enter
inc
loope
mov
jmp
dec
pop
jno
inc
lods
les
cli
push
lret
xchg
add
jno
je
iret
orl
imul
jne
jecxz
imul
pop
shr
cmpsl
sub
adc
mov
js
lret
and
dec
fadds
ja
add
mov
jl
lock
repnz
sub
and
shl
lock
and
pushf
cli
in
stc
test
rcrl
call
js
repnz
fnstenv
push
dec
mov
add
loop
test
cwtl
xor
scas
js
jns
negl
cld
add
shlb
out
pop
pop
mov
in
enter
xchg
test
clc
or
int3
xchg
jp
cmp
cmc
pop
add
mov
rorl
push
or
mov
mov
bound
loop
aaa
dec
jo
outsl
popf
out
push
iret
mov
cmp
jge
sbb
in
mov
lods
ljmp
mov
add
movsl
arpl
sbb
outsb
in
sbb
push
jns
cmp
sub
aad
add
push
sub
jl
es
pop
insl
aam
mov
int3
push
jne
lock
jbe
fwait
jae
xchg
add
adc
or
or
sbbl
fistps
into
pop
add
pop
pop
push
scas
inc
inc
xchg
ds
xchg
into
or
mov
mov
push
outsl
mov
or
imul
iret
mov
jl
sub
push
nopl
shlb
jle
lcall
push
shll
fdivl
lods
or
mov
ror
fsts
mov
sub
pop
ljmp
jbe
arpl
popa
dec
test
jmp
or
sbbb
test
pop
mov
xchg
cs
xchg
call
push
out
pusha
negl
lods
sbbb
mov
std
ret
outsl
sbb
outsl
in
std
xchg
ficomps
dec
pop
dec
ljmp
loope
dec
repz
fstpt
adc
test
xor
repnz
dec
mov
outsb
jl
push
or
push
stc
mov
mov
jns
iret
and
xchg
push
stos
ja
fdivl
cmp
mov
adc
push
inc
mov
stos
adc
jge
mov
sti
in
sarl
add
jmp
push
imul
testl
pop
cmp
mov
pop
imul
inc
pop
out
inc
out
pushf
scas
xor
push
or
fcompp
adc
sub
popa
pop
call
jno
into
lods
add
pop
mov
fiaddl
js
icebp
aam
int3
sub
sbb
xchg
inc
push
clc
inc
out
out
dec
push
push
xchg
mov
ljmp
cli
and
add
repz
dec
mov
inc
pop
mov
mov
stos
pop
lahf
cmpsb
mov
shrb
cld
mov
jnp
xchg
jnp
das
mov
fcoms
in
in
sbb
dec
cltd
add
cmp
fdivrs
scas
mov
rcr
jp
les
imul
insl
mov
dec
cmp
loopne
inc
ret
mov
loop
push
pop
out
insl
dec
cli
loope
loope
ret
jle
mov
cmp
fnstsw
mov
movsb
inc
lahf
ret
icebp
xchg
aaa
lds
bound
jecxz
mov
inc
fiadds
sub
add
clc
test
in
lods
and
mov
add
scas
jl
rcll
push
lahf
xor
mov
lock
pop
ds
test
cwtl
insl
sub
aam
jae
addr16
loopne
test
jnp
inc
push
mov
movsl
mov
adc
add
aas
xor
pop
ja
xor
dec
test
jp
adc
adcb
xchg
icebp
movaps
cli
push
sub
jo
xchg
sbb
out
and
in
mov
xlat
inc
shr
fdivrl
outsl
xor
mov
push
out
js
sbb
andl
in
fcompp
lcall
dec
xor
cltd
pusha
push
lods
xorl
mov
push
or
inc
mov
xchg
cmpsl
fcompl
enter
push
jnp
mov
pop
dec
aaa
mov
mov
repnz
sbb
pop
std
pop
add
mov
cmp
filds
gs
jno
xchg
sub
adc
mov
or
gs
das
inc
daa
adc
loope
cltd
pop
lods
pop
lods
cmp
jae
cmp
xor
mov
pop
mov
int
sahf
pop
and
cwtl
cmc
pop
cltd
cld
ds
out
mov
stc
les
enter
test
jno
add
pop
sbb
jl
test
inc
sub
sub
sbbb
add
sub
cli
fildl
dec
rcl
fstp
mov
push
jne
outsl
mov
pop
ds
fldcw
pop
cmp
out
repz
xchg
inc
ljmp
push
sbb
aaa
or
inc
lcall
pushf
js
jns
jne
jns
pop
xlat
gs
pop
cld
xchg
lret
jne
sbb
push
pushf
pop
pop
fsubl
insl
ljmp
mov
jo
adc
jge
daa
inc
lcall
mov
xlat
or
outsb
dec
xchg
in
push
mov
loop
cmp
data16
cmpsl
push
daa
dec
bound
outsl
sub
cmp
jge
pop
jnp
mov
icebp
cmc
mov
jmp
test
mov
push
sub
sub
sbb
sub
pop
inc
inc
aad
lret
cwtl
sbb
adc
push
jns
adc
xor
movsb
xchg
push
inc
mov
repnz
pop
adc
cwtl
outsl
sysexit
mov
cmc
addb
int3
cwtl
jl
jno
mov
adc
lea
pop
insb
lret
daa
lret
dec
sub
xchg
subb
or
outsl
je
rorl
hlt
out
cmp
pushf
sub
sahf
xor
mov
jns
lahf
cmp
negb
jnp
ret
les
jl
test
xchg
push
mov
data16
jbe
insb
inc
push
fxch
ret
jne
mov
and
mov
xor
std
mov
sbb
mov
push
cmp
fcomip
mov
or
mov
sub
jp
xchg
enter
les
cmp
lods
sahf
fbstp
xorb
sub
cmp
pusha
ja
sbb
dec
inc
sub
sbb
mov
cmp
pushf
fistl
push
mov
sub
insl
mov
dec
aaa
cmp
loope
das
sub
dec
inc
dec
inc
push
pop
mov
xchg
mov
insb
addr16
mov
andl
fildll
mov
aad
inc
cmp
sbb
inc
pushf
dec
sbb
movntps
cmpsb
push
fwait
xlat
cmp
jge
pop
xchg
and
or
pop
inc
popl
movsb
jge
inc
enter
or
or
filds
data16
push
or
and
pop
test
jg
out
cmpsl
lock
pop
adc
bnd
out
jmp
xchg
fadd
pop
fdivr
sbb
aam
xor
mov
inc
pop
sub
repz
or
lea
inc
fimuls
gs
das
pop
mov
aas
sbb
add
shr
scas
and
or
and
xchg
cmp
sbb
push
in
lds
jmp
stos
insb
scas
inc
sahf
int3
dec
lock
mov
and
scas
jmp
pop
icebp
jmp
and
mov
sbb
push
cmpsb
aas
das
push
rcrl
pop
lods
int3
popf
xor
pop
jge
add
jg
jnp
mul
mov
xor
imul
push
outsb
in
fisubrs
fcmovne
shrl
pop
aas
lcall
push
fs
mov
std
sbb
xor
mov
stos
in
js
adc
daa
inc
mov
imul
call
cltd
add
hlt
and
paddd
inc
loopne
mov
je
loopne
xchg
sbb
decl
xlat
test
lahf
ss
jns
fwait
mov
leave
xor
in
testl
pop
clc
or
jge
pushf
sub
shll
dec
outsl
daa
and
popa
leave
pop
aaa
push
inc
inc
push
ljmp
orb
mov
jbe
popa
mov
call
mov
or
aad
sbb
out
xchg
mov
xor
sub
mov
pop
mov
xchg
xchg
sbb
and
das
push
xchg
subb
pop
mov
xor
xchg
or
sbb
popf
jl
xor
ret
and
imul
inc
stos
pop
dec
out
jns
icebp
andl
inc
sbbl
test
jg
subl
cwtl
cmpb
jbe
das
pop
mov
insl
fstl
mov
fwait
vphaddbw
adc
adc
sti
ucomiss
movsb
jnp
mov
add
and
and
xchg
pop
sbb
jmp
inc
inc
shlb
shlb
sub
stos
dec
lock
dec
into
xor
ljmp
enter
stos
sub
movl
mov
sub
xchg
jnp
cmpsl
cmpsl
dec
rorl
xchg
adcb
hlt
js
add
xorl
xchg
push
shl
pop
sbb
dec
dec
push
lea
mov
pop
mov
add
pop
cmp
mov
mov
mov
jne
les
sub
fcmovb
jbe
inc
inc
mov
push
popf
push
sbb
cs
lcall
cmpsb
cmp
and
mov
xor
rol
aad
repz
mov
mov
movsl
cld
test
xchg
jp
jl
push
mov
pop
mov
pop
mov
sbb
or
gs
pop
loope
jno
lods
mov
mov
cmp
mov
lcall
or
addr16
cltd
mov
add
pop
sahf
int3
arpl
or
sti
and
pop
addl
orb
jmp
or
inc
cmp
adc
les
insl
icebp
pop
jb
iret
cmp
add
mov
pop
aas
pop
sahf
ret
hlt
sti
shlb
xchg
montmul
cmpsb
ret
add
xchg
int3
sub
stc
and
mov
lea
jle
inc
xchg
add
jb
pop
loop
stc
cltd
mov
repnz
push
in
shrl
sbb
mov
out
add
and
test
inc
mov
ljmp
addb
scas
jnp
insl
sahf
ja
xor
xor
ja
mov
lods
js
test
sahf
pop
push
pop
aaa
xchg
or
jo
hlt
cmpsl
imul
hlt
inc
cmpsb
add
mov
js
lahf
pop
mov
jp
aad
cmp
pop
mov
stos
xchg
add
cli
mov
or
rol
mov
daa
jecxz
enter
mov
push
push
sub
adc
cmc
or
push
mov
mov
push
fucomi
xchg
stos
out
push
scas
das
repnz
clc
lods
popa
arpl
jle
aas
mov
cmp
call
or
aam
dec
pop
or
out
push
mov
lret
jne
xor
mov
lods
dec
scas
fnstsw
andl
jne
and
mov
mov
add
aas
negl
in
push
in
outsb
insb
dec
loope
inc
adc
pop
dec
or
sub
hlt
insb
ljmp
in
inc
sub
lods
repz
in
ljmp
test
and
in
mov
daa
aad
movl
xchg
mov
ret
hlt
ds
mov
bnd
cmp
cmc
sarl
mov
dec
stos
push
mov
inc
xlat
and
mov
out
scas
sahf
loopne
xchg
push
jae
mov
xor
xor
push
or
cmc
mov
outsb
fidivrl
mov
xchg
sub
fildll
sub
insl
test
rolb
mov
adc
sbb
sub
jl
add
dec
dec
inc
xor
ja
push
imul
mov
testb
sub
ret
je
xor
jne
fucom
int3
push
enter
mov
inc
pop
sbb
sti
push
pop
ret
adc
fiaddl
leave
dec
mull
sub
sbb
outsl
ds
mov
or
outsl
ret
arpl
subps
mov
scas
stos
nop
sbb
imul
xor
jns
ljmp
push
addr16
int
fsubrs
and
cmp
mov
in
sub
loop
push
aaa
jle
cmp
das
cmp
imul
xchg
xor
sar
popf
add
out
insb
shr
lret
outsb
or
jno
fisubs
cmp
shlb
jp
jmp
iret
add
aas
dec
sahf
jg
jmp
lahf
fdivl
push
pushf
adcb
inc
jmp
cli
mov
enter
fdivl
fwait
popa
cld
adc
test
es
jns
pop
jmp
sbb
in
outsl
push
loopne
sahf
nop
add
or
fstl
xor
out
ja
adc
and
add
lcall
inc
movl
push
push
mov
xor
lds
push
dec
iret
cltd
xchg
and
mov
popa
or
mov
dec
insb
inc
rclb
inc
lock
fsubrs
adc
push
inc
cmp
popf
negl
pop
data16
jo
mov
into
mov
aaa
fiadds
add
in
lret
out
mov
and
xchg
lods
test
cmpsl
and
enter
iret
mov
inc
aaa
test
leave
push
mov
lcall
lock
loop
aaa
cld
int
push
repz
out
sbb
mov
enter
in
call
xchg
cli
cld
fmuls
or
jo
and
stc
mov
lds
cltd
test
lret
mov
mov
xchg
push
and
mov
sub
and
pop
mov
pop
jmp
aas
and
jp
clc
mov
jmp
inc
mov
add
push
fsubr
cmp
ret
call
lock
outsl
in
mov
ret
add
push
fsubs
repnz
int
push
scas
or
inc
in
mov
pop
pop
pop
inc
push
mov
push
pop
inc
negl
jbe
movsb
jg
mov
aaa
ficompl
dec
popf
jb
lahf
out
sar
add
xchg
cmpsb
jo
fdiv
test
xchg
add
lcall
sti
jmp
inc
xchg
sbb
xor
enter
pop
xchg
popa
mov
jno
cltd
or
lret
in
sahf
pop
mov
repnz
clc
xor
push
inc
in
jae
lods
cmp
popf
pop
adc
jb
ss
fimuls
adc
push
add
ljmp
pushf
in
jle
mov
loopne
adc
mov
call
dec
lods
inc
outsb
lret
out
ficoms
mov
cmpsl
mov
scas
inc
mov
bnd
cwtl
dec
cld
push
aas
mov
pop
or
loop
mov
hlt
xchg
mov
pop
in
xchg
lea
push
xchg
jge
sub
clc
sbb
shlb
xchg
adc
sbb
popa
sbb
sarl
or
pop
scas
push
or
loope
lods
dec
stc
push
std
test
xlat
outsb
and
add
add
cli
mov
xchg
repnz
and
imul
shlb
adc
in
popa
xor
mov
cmpsl
rcll
sub
adc
and
ljmp
sti
xchg
rorb
xchg
sbb
mov
inc
mov
imul
and
mov
aas
push
dec
push
add
test
ds
xchg
add
jns
adc
cmp
scas
dec
pop
sti
push
mov
push
movsl
fldt
mov
add
mov
dec
clc
xchg
jo
fmul
xchg
mov
pop
loop
pusha
into
add
imul
jl,pt
add
sbb
dec
mov
inc
xor
bound
sbb
lods
ljmp
mov
and
aad
add
pop
xor
and
fwait
cs
xorl
push
call
pop
or
es
xchg
pop
or
and
stos
cmpsb
test
ss
adc
addl
mov
jecxz
and
fidivrl
addr16
ja
std
mov
adc
sub
ret
std
ss
push
rcll
imul
outsl
pusha
xchg
xchg
mov
ja
cmp
mov
enter
out
dec
sbb
push
dec
out
in
nop
cltd
cmp
mov
xchg
mov
add
sahf
mov
neg
jecxz
xor
sbb
push
mov
adc
cmpb
loop
rcrl
mov
or
add
mov
mov
pop
mov
lret
ja
push
xchg
sbb
sbb
fidivrl
mov
bnd
pop
dec
jecxz
cwtl
cmc
data16
mov
js
mov
inc
rcl
stos
xor
xlat
or
out
push
mov
and
sarb
adc
mov
jmp
jmp
cmp
sub
lea
pop
xor
or
mov
push
fnsave
ja
cs
mov
mov
xchg
jae
xchg
aam
dec
out
int3
inc
loopne
jg
and
push
sub
int
pop
mov
fcomps
mov
add
popf
das
mov
xor
ds
push
sti
aam
les
mov
mov
and
fimull
cmp
ret
or
xor
lret
cmp
xor
xchg
push
jmp
or
sub
fcoml
adc
fisubrs
push
mov
push
gs
shrb
repnz
ficomps
push
mov
cld
in
inc
cmpsl
push
jge
adc
or
icebp
std
xchg
stos
dec
push
sub
push
sahf
jp
mov
adc
ja
gs
pop
out
pop
xchg
dec
and
pop
dec
ljmp
lret
lret
add
add
pop
sub
mov
imul
out
jbe
jbe
sbb
jmp
movsb
cmp
es
lea
frstor
lds
ja
test
js
test
jne
leave
pop
jbe
pop
out
sbb
and
imul
xchg
out
popf
xchg
dec
mov
out
inc
mov
scas
scas
or
push
pop
mov
in
mov
push
mov
in
xor
jmp
shll
mov
dec
iret
xor
adc
mov
stos
sbb
inc
pusha
repnz
lea
cmpsl
mov
insl
pop
adc
stos
push
sub
out
and
imul
mov
loopne
mov
jbe
aad
push
rorb
xchg
sub
dec
xor
std
ret
mov
popa
push
push
sbb
add
cmp
sub
pop
imul
adc
jb
add
movsb
movb
mov
test
rorl
pop
shlb
daa
mov
and
xchg
out
pop
fisubl
addb
push
inc
stos
imulb
lret
insb
cmpl
dec
sahf
sub
pop
inc
fdivrs
fstps
fdivp
fidivs
clc
pop
in
mov
aam
inc
sub
pop
pushw
aam
jp
push
lret
inc
mov
repz
push
pop
adc
aam
into
mov
jns
outsl
mov
sub
inc
mov
sub
subl
pop
loop
dec
or
cmp
orb
es
mov
orb
jle
mov
and
mov
shll
jno
cmpsb
and
sbb
loope
xor
adc
idivb
pop
int
push
pusha
scas
aas
pop
lock
test
ret
ja
push
xchg
pop
imul
subl
xor
jae
lahf
fisttpl
shll
lahf
xor
push
xor
rcll
inc
repnz
dec
push
sub
xor
push
or
pop
addb
mov
and
xchg
pushf
sbb
stc
jne
cmp
shlb
mov
movsl
mov
stos
lods
adc
jmp
into
xor
xor
in
push
push
jl
gs
jno
xor
insl
push
sbb
cmp
sahf
dec
cld
scas
add
stos
mov
dec
lcall
cltd
dec
mov
and
stos
push
call
push
jno
loop
imul
lcall
cld
nop
sete
mov
push
in
sbb
mov
fs
lock
into
mov
push
cmp
mov
mov
sbb
push
adc
jecxz
enter
jmp
sub
push
and
jo
loopne
pusha
idiv
add
jno
and
jge
fwait
xchg
add
leave
jmp
and
int3
or
cmp
mov
jbe
sub
or
xor
sub
rclb
daa
test
add
jle
les
out
mov
add
push
lahf
pop
inc
mov
sbb
mov
cmpsl
call
mulb
sbb
lahf
insl
test
push
adc
stos
pop
xor
ja
xor
fadd
les
leave
lods
inc
or
sub
jp
inc
aas
into
ficoms
jae
xchg
adc
mov
xchg
mov
or
inc
in
js
leave
insl
jnp
mov
mov
jl
pop
cmp
cmp
pop
outsl
fnstcw
mov
out
cwtl
sub
mov
pop
pop
xchg
mov
mov
xchg
sub
lcall
push
leave
mov
pop
inc
dec
pop
mov
push
rcrl
stos
add
dec
sbb
mov
sub
jne
imul
pushf
push
cmp
pop
sahf
jge
push
sub
mov
loopne
cli
lea
pushf
dec
dec
rolb
push
ss
les
adc
pop
jbe
mov
ja
scas
data16
xchg
inc
nop
dec
add
mov
cmpsl
ret
push
int
scas
les
xor
push
js
cmc
fiadds
loopne
push
mov
xchg
cmp
jnp
out
lcall
xchg
lret
inc
repz
mov
test
jmp
xor
out
xchg
jmp
sub
inc
ss
jp
xchg
test
cwtl
fcoms
pusha
cld
adc
hlt
pop
imul
sub
sbb
xchg
ret
adc
add
cwtl
stos
push
mov
gs
rolb
fisttps
cmp
sbb
notb
in
lret
shll
mov
add
or
insl
sbb
sahf
xchg
mov
cmpsb
mov
lods
fcoms
jge
or
popa
jp
mov
mov
sbb
fldcw
inc
sbb
mov
das
adc
in
or
pop
enter
rsqrtps
fistpll
subb
pop
mov
inc
or
xchg
cmpsb
pop
lcall
imul
add
inc
loope
out
cmp
outsl
dec
sbb
jo
xchg
or
subb
jg
nop
repnz
in
inc
push
dec
mov
mov
cmpsb
scas
test
jne
in
cmpsb
movsb
push
add
sbb
lahf
cmpsb
dec
pop
xorb
loop
adc
insb
inc
push
push
enter
dec
mov
lahf
lcall
arpl
iret
fs
or
add
jne
mov
dec
cltd
sbb
or
mov
inc
adc
inc
mov
xchg
sub
roll
adcb
or
mov
negb
add
push
and
repnz
xor
add
add
and
stos
rclb
js
lret
out
pop
cmp
pop
add
popa
adc
imul
ds
xor
add
dec
hlt
xor
punpckhdq
aam
iret
adc
dec
sahf
mov
push
mov
popf
cmp
mov
std
push
lock
xor
cmpsb
push
pop
testb
add
pop
outsb
loope
push
push
mov
sub
cwtl
mov
clc
jne
inc
sub
xchg
push
sbbl
jg
stc
push
sahf
push
cltd
ret
or
cmp
lock
cmp
int3
addb
shr
rep
std
xchg
xor
push
xchg
insl
or
mov
inc
shr
in
push
iret
and
push
fisttpl
and
adc
inc
xchg
call
gs
sub
out
mov
push
mov
repz
push
cmp
lret
insb
add
sub
adc
jmp
or
popa
push
int3
mov
push
inc
sbbb
stos
scas
push
pop
mov
test
call
lcall
jne
xor
adc
notb
add
dec
pop
outsl
mov
mov
stc
xorl
dec
mov
push
or
sub
shlb
pop
dec
mov
clc
jo
pop
ss
dec
loop
xchg
ss
or
adc
ds
into
mov
in
nop
dec
mul
ficoml
sti
aam
inc
pop
jmp
inc
faddl
iret
inc
push
sbb
aaa
fs
fprem1
or
or
xor
jbe
sbb
imull
fsubs
push
push
sbb
add
pop
sbbb
hlt
cmp
aam
roll
das
jbe
add
scas
test
push
data16
jg
cli
and
sbb
das
test
adc
mov
pop
lods
mov
lea
out
or
int
and
push
mov
mov
xor
sbbb
cmp
adc
ret
sbb
pop
mov
js
data16
pop
add
jg
fsts
unpcklps
cmp
add
adc
imul
cmpsb
add
ds
stc
js
int3
inc
mov
push
lods
push
test
jl
add
mov
sti
std
popa
xchg
arpl
xchg
pop
int
les
cmpsl
push
adc
ret
jno
lret
out
fxch
or
sbbl
shll
outsb
jbe
sub
xor
dec
jns
jl
push
adc
push
inc
mov
ja
int
pop
js
decb
mov
fbstp
pop
insb
inc
adc
and
mov
in
sahf
int
std
push
mov
jbe
mov
push
das
add
in
nop
push
nop
filds
bound
xchg
add
add
inc
dec
loope
xlat
ja
fidivrl
fdivs
in
dec
sub
std
inc
jmp
mov
movsb
xchg
dec
xchg
cmp
sub
ror
add
sbb
sbb
and
xchg
loop
push
sub
leave
dec
dec
aad
movsl
cmp
das
xchg
repnz
push
jle
and
movsl
cmp
jg
sub
fisttpl
std
push
mov
fidivs
out
adc
push
lcall
fdecstp
dec
lods
dec
jb
ja
rol
enter
movsb
sub
pop
shlb
pop
mov
jp
test
xor
mov
mov
xor
mov
sti
sub
in
mov
cmp
les
insl
add
out
ljmp
mov
lods
aad
enter
outsb
sub
push
ds
arpl
leave
adc
jae
dec
xchg
jecxz
jecxz,pn
aaa
sbb
adcb
sub
dec
dec
sbb
in
pop
insb
lock
inc
mov
into
mov
clc
mov
cmp
inc
cmp
call
sub
mov
cwtl
cmp
inc
cltd
sbb
and
in
adc
sub
mov
lock
negl
jecxz
loop
out
inc
xchg
push
test
stos
jp
dec
push
enter
add
frstor
pop
aam
mov
xchg
std
lahf
cltd
jl
sti
mov
push
je
pop
repnz
mov
in
cmp
out
aam
pushf
lds
cmc
cmp
repnz
lret
push
ljmp
mov
add
in
popa
mov
lods
xorb
sub
dec
or
hlt
cs
and
push
push
jae
adc
xor
mov
push
adc
xor
pusha
test
lret
or
mov
out
out
sti
and
lretw
movsl
fmuls
enter
cmpsl
mov
jl
sub
imul
xchg
sub
insb
and
cld
xchg
dec
ljmp
rorl
jmp
popa
pop
jecxz
loop
fwait
movsb
mov
dec
push
xor
mov
or
aas
sbb
sbb
in
mov
in
aaa
insl
mov
dec
cmp
lods
loopne
sbb
dec
mov
push
insb
jbe
mov
rcrb
lock
jmp
or
push
inc
jno
sar
cmp
cmp
scas
sub
xor
pop
mov
dec
out
jle
and
jecxz
int
pop
jb
ds
jl
je
into
and
or
cltd
sbb
mov
push
sub
add
testb
jbe
nop
and
int
les
imul
sbb
pop
push
mov
cli
sbb
mov
ret
cwtl
cwtl
xlat
testb
cmpb
sub
and
push
xchg
int3
int
sarb
mov
imul
cld
lds
mov
gs
and
mov
loope
mov
lea
jb
pop
lahf
cmp
dec
aad
dec
incb
stos
sarl
enter
clc
jmp
inc
fdivr
rcrl
xorl
inc
jge
cli
in
lods
mov
mov
or
pop
lods
jl
xchg
lret
mov
lods
jo
sbb
in
ret
fidivs
cmpsl
mov
mov
fiaddl
lds
jo
cli
mov
mov
add
shll
loop
scas
xor
stos
push
popf
hlt
or
push
xlat
fcomps
cs
push
adc
fmull
icebp
fdivl
push
jno
aaa
test
or
mov
test
clc
ljmp
icebp
xchg
cmp
push
jl
je
xchg
pop
mov
jle
and
adc
scas
ret
sub
jns
mov
cltd
mov
xchg
jns
in
lret
lods
cltd
bound
movsb
fisubs
add
inc
jmp
jo
aam
loop
inc
enter
push
aas
jo
jecxz
sub
pop
adc
inc
inc
jl
andl
inc
mov
int3
and
pop
mov
adc
pop
mov
xor
mov
ret
lret
and
sbb
mov
mov
cmpsl
fidivrl
rorb
jp
out
jmp
jne
xchg
sbb
mov
push
mulb
and
nop
push
and
ds
outsl
out
add
pop
and
jecxz
mov
mov
or
psubusw
cmpsb
add
ficoms
or
mov
or
test
dec
xchg
out
add
jb
cltd
mov
pop
movsb
xchg
jge
and
add
dec
shll
inc
addr16
xchg
pop
sub
push
xorb
out
mov
aad
mov
pop
jne
stos
cmp
mov
fbld
shlb
andb
ljmp
jne
mov
mov
dec
lea
ss
imul
mov
cmp
ja
xor
push
push
inc
pop
xchg
inc
fcmovnb
rorl
cs
xor
push
jns
lea
pop
cmp
leave
ljmpw
or
std
lret
xchg
dec
cmp
mov
ss
push
and
mov
clc
jg
mov
sub
out
test
int
pop
lcall
pop
repnz
and
cmpsl
fists
sub
or
std
and
outsb
cmc
xchg
mov
xor
mov
stc
adc
jne
data16
cmp
or
pusha
fldenv
jmp
sub
stc
jle
aam
outsl
outsb
mov
xchg
fsubr
idivl
xchg
mov
mov
addr16
ljmp
push
lcall
pop
ret
enter
fcomps
sahf
cmp
xchg
sub
test
push
add
xor
and
test
inc
mov
mov
cmpsl
mov
gs
jo
pop
dec
outsl
mov
fs
xor
sub
out
mov
aam
test
adc
ja
push
lock
cwtl
and
hlt
push
inc
aad
or
jg
addb
mov
test
in
add
adcl
sbb
add
inc
popa
jns
inc
fiadds
sub
xchg
or
mov
lods
push
or
mov
fcomps
mov
sahf
sbb
sub
dec
aam
shr
jns
cltd
test
push
mov
lods
mov
or
inc
add
in
mov
jbe
sbb
and
mov
lahf
mov
and
dec
pop
cmc
int
cs
mov
jmp
mov
mov
test
mov
popf
movsl
jmp
notb
xchg
out
out
in
lods
pop
and
mov
and
rol
push
lahf
xor
sti
push
fstp
push
data16
test
pushw
xchg
or
add
mov
xchg
push
mov
sbb
rcr
cmpsl
mov
pop
scas
mov
pop
xor
fisubrs
pushf
inc
ror
jae
scas
out
push
es
cmpsl
imul
sub
neg
mov
mov
lock
jns
out
fwait
lods
std
pop
std
scas
andl
pop
lret
cli
outsb
inc
fs
mov
gs
sti
and
and
arpl
outsb
loopne
xchg
movsb
ss
hlt
in
stos
xlat
sub
imul
imul
and
call
mov
jo
cmp
fwait
push
fcompl
scas
mov
mov
lcall
sbb
push
test
lds
mov
in
dec
in
dec
dec
iret
insl
int
jecxz
repz
mov
dec
xchg
stc
or
daa
repnz
jo
fld1
adcl
lods
jbe
lock
jbe
cmp
ret
pop
mov
cmp
adc
or
add
or
cwtl
cmc
inc
imul
cmpsl
xor
xor
mov
push
outsl
nop
push
xchg
xchg
into
xor
fdivr
xor
push
jmp
call
sbb
imul
loope
imul
pcmpgtb
int3
nop
nop
lea
loope
xor
mov
xchg
mov
rcr
es
pop
mov
nop
fstpt
push
mov
xor
in
repnz
inc
add
scas
and
in
int3
jg
ljmp
mov
inc
inc
mov
inc
pop
jmp
or
fiaddl
in
test
lock
pop
cmp
sbb
imul
aam
aas
test
test
add
fidivrl
cld
xor
imul
cltd
pop
mov
test
insl
testl
out
into
pop
jae
leave
int
movsb
cmp
out
cmp
ret
xchg
aaa
stc
pop
sbb
jne
dec
push
movsb
push
movsl
add
jge
xchg
push
shll
cmp
aaa
out
fwait
push
xor
fistpl
pop
sub
cmp
std
push
fsubrp
ret
movsb
aaa
mov
adc
stc
pushf
repnz
inc
sbb
test
loop
xor
movsl
jl
cmp
mov
or
pop
mov
add
nop
mov
cmpsb
and
jle
test
cmpsb
scas
ljmp
sarb
jno
adcb
es
jecxz
mov
jle
cmp
lea
sbb
ret
into
xchg
or
mov
sub
jmp
rcrb
sbb
insb
rcl
mov
stos
fxch
out
inc
je
or
jecxz
xor
and
push
fnsave
mov
sbb
pop
ja
xor
cltd
add
and
xor
lods
jb
sub
xor
pop
push
adc
jge
aaa
xor
cmp
jnp
mov
test
scas
aaa
or
testb
inc
inc
leave
popf
in
push
filds
push
int
xlat
jno
lods
dec
bound
inc
xor
fisubrl
push
dec
dec
adc
shrl
popf
and
mov
xcrypt-ecb
cmpsl
dec
pop
mov
imul
movsl
clc
ret
mov
xlat
imul
xor
imul
cli
test
pop
fwait
xor
and
or
lods
xchg
pop
loopne
jmp
push
or
cli
jns
or
mov
adcb
rol
push
inc
dec
mov
mov
sub
out
mov
lock
insb
dec
pusha
enter
mov
fnstcw
icebp
in
fcomip
lea
pushf
mov
mov
cmpsl
stc
lea
imul
popa
xchg
dec
lea
cmc
adc
out
out
cwtl
pusha
shr
roll
sbb
xor
mov
leave
int
mov
adc
sbb
add
xchg
add
mov
and
mov
loopne
roll
push
sub
or
stc
mov
jae
jns
cmp
lock
shlb
ds
mov
add
mov
cmp
dec
loope
clc
xchg
xor
cs
dec
adc
gs
imul
arpl
rclb
test
cmp
xor
ds
in
aaa
mov
inc
fsub
inc
cmp
in
mov
pop
mov
pop
jnp
xor
xchg
cs
lock
mov
outsb
jae
into
addb
xlat
fcmovbe
pushf
cmp
xor
mov
sbb
loop
mov
jns
rolb
sbb
subb
mov
daa
xor
outsb
lcall
bound
mov
fwait
das
pop
clc
out
call
dec
in
jg
push
pop
int
sub
dec
dec
jae
test
cli
sbbl
mov
aad
mov
pop
xchg
sbb
in
das
adc
mov
movsb
xor
idivb
xor
js
xchg
ja
movsb
ret
nop
xchg
fsub
mov
xlat
imul
cmp
or
mov
clc
xchg
xlat
out
push
or
pop
in
cmpsl
jno
and
repz
out
test
push
and
sbb
jne
ja
scas
ret
je
push
arpl
sbb
push
imul
inc
sbb
test
scas
out
ljmp
repnz
aam
ja
add
push
into
mov
push
mov
outsl
add
sub
mov
mov
std
shrb
inc
popa
and
mov
enter
jecxz
xchg
lret
add
adc
mov
out
xor
ret
cmp
push
fisttpl
fsts
or
lcall
lahf
data16
fsubp
push
and
bound
mov
scas
aaa
in
inc
jbe
test
pop
add
lcall
and
cwtl
push
jecxz
add
fbld
mov
inc
inc
fwait
stos
dec
and
sbb
and
gs
sti
xchg
jle
push
jmp
scas
mov
or
aaa
scas
sub
push
jns
inc
mov
dec
pop
jae
sbb
sti
cmp
out
dec
add
pop
jg
loop
leave
popf
jl
ljmp
inc
jbe
jae
cwtl
jp
aam
bts
lods
ljmp
ror
out
cld
movsb
outsb
adc
adc
aas
loop
stos
dec
hlt
sbb
mov
push
shrl
ja
push
lock
loop
adc
and
lock
outsb
test
jb
jae
jmp
pop
mov
test
sar
pop
sbb
mov
fwait
stos
xor
cmova
fsubr
dec
in
scas
sub
lea
push
cmp
dec
dec
pop
xchg
mov
imul
mov
loopne
fistps
mov
loopne
lea
mov
imul
fidivl
cwtl
xor
pop
adc
test
sub
aas
push
fdiv
pop
jbe
mov
lret
jecxz
push
xlat
push
inc
jbe
dec
jno
call
xchg
push
out
xchg
or
push
outsl
lock
insl
mov
add
sub
leave
movsb
outsl
jl
mov
sub
dec
sub
pop
jb
push
cmp
fcompl
mov
add
sub
imul
xchg
notl
mov
sub
add
jmp
icebp
xor
adc
fstl
inc
fimuls
shrb
outsb
test
fiaddl
jbe
and
fcomp
xor
xor
add
sahf
sub
dec
loop
jmp
mov
or
ljmp
xchg
pusha
clc
pop
mov
xor
xor
push
adc
xorl
imul
adc
cmp
cmp
ret
push
push
data16
mov
push
push
test
mov
push
dec
scas
aaa
or
leave
int
out
cmp
and
mov
cli
mov
or
lds
cli
aad
and
shl
inc
add
jo
das
jle
test
xor
in
cld
into
sbbb
pop
or
jg
hlt
fldcw
sbb
fwait
aaa
jmp
push
in
data16
lret
mov
inc
inc
notb
and
je
jne
pop
fwait
aam
sbb
shll
std
push
push
lahf
lock
mov
lcall
jmp
and
adc
test
mov
xor
or
test
scas
xchg
clc
int
mov
mov
cmpsl
out
hlt
data16
cltd
shll
dec
imul
cmp
inc
mov
sub
inc
mov
lods
cld
or
and
fwait
mov
sbb
div
aaa
mov
ds
pop
insl
push
insb
out
int3
sbb
adc
pop
aas
test
cmp
aam
stos
pop
mov
mov
pop
fwait
add
dec
into
pop
addr16
leave
pusha
mov
xlat
and
pop
push
lret
xor
aad
fsubp
push
rol
es
cmp
and
add
jl
jbe
fwait
sbb
icebp
loopne
mov
lea
jp
stos
pushf
scas
fcompl
pop
sbbl
shl
sbb
cmp
jg
jmp
and
mov
pop
out
dec
pushf
ss
out
xor
fldl
rcrl
cmp
sub
dec
adc
mov
xor
not
test
mov
jmp
or
mov
sub
out
push
mov
ja
mov
shll
xlat
repnz
inc
pop
aaa
mov
push
or
fildll
iret
pop
lahf
push
pop
fwait
mov
fistps
test
sbb
xchg
cwtl
sub
rolb
std
arpl
and
jg
mov
hlt
ljmp
dec
cmp
sub
adc
roll
dec
mov
addr16
daa
js
mov
cmp
clc
shr
xor
sub
mov
and
sarl
shrb
ss
or
xchg
xor
mulb
loopne
mov
jno
xorb
push
ficomps
into
xlat
inc
xor
add
xorb
add
xchg
push
adc
in
mov
movsl
jmp
cmp
mov
adc
ret
push
push
nop
lds
inc
gs
sbb
push
fistpl
pop
out
daa
or
or
inc
jae
mov
push
lahf
repnz
in
mov
fidivrl
aam
insl
mov
sbbb
repz
push
xchg
xchg
scas
into
sub
push
imul
mov
pop
cmp
adc
nop
imul
and
fcmovb
sahf
jne
push
rcl
and
xor
pop
negl
int3
mov
lock
mov
fdivp
and
push
ficoms
mov
pop
sti
mov
ljmp
lcall
test
test
fucomi
cmp
mov
icebp
jle
sub
xor
mov
pop
pusha
dec
scas
lds
stos
ret
nop
pushf
std
or
popf
std
xchg
dec
fidivrs
push
cmp
dec
jnp
dec
arpl
cmp
mov
cmp
jmp
mov
mov
fistpll
xchg
add
push
aas
adc
sub
xor
stos
repz
scas
ds
jl
mov
sub
jmp
mov
add
and
arpl
sbb
pop
pusha
cmp
fsubs
jno
mov
mov
cmp
mov
dec
clc
in
lods
fs
int3
jae
into
lods
out
add
mov
pop
mov
xchg
jle
aaa
mov
or
out
lods
sbb
adc
stc
inc
mov
jne
jg
inc
xchg
rcl
mov
popf
stc
lret
in
cltd
or
sub
dec
fdivp
ja
inc
push
pushf
lods
xor
rorb
inc
dec
fisubrs
xor
mov
jecxz
into
loop
fsubs
or
sarb
pop
mov
add
pop
mov
and
sub
cmp
and
jo
les
cmc
ja
xor
pop
shlb
sti
js
enter
xchg
jmp
rol
clc
jecxz
sbb
xchg
ret
fcmovne
cld
cmpsl
ds
xchg
popl
push
dec
loopne
mov
mov
lret
popa
js
int
and
imul
sub
in
and
pop
push
xchg
sub
xchg
xor
rcl
insb
mov
out
or
shll
or
jb
mov
lea
lods
ret
cmp
pusha
adc
and
and
pusha
in
sub
mov
xor
imul
xor
or
out
dec
lahf
pop
loop
inc
cmp
jecxz
loopne
mov
lods
jmp
mov
sahf
test
ret
xchg
mov
mov
in
mov
ja
inc
fiaddl
loope
sahf
fucomp
cmpsb
push
mov
inc
loop
fcoml
mov
stos
sub
aam
jae
fnsave
pop
cmp
push
mov
out
dec
stc
fwait
sub
fwait
shll
sbb
sub
sub
push
xchg
andb
cmc
cmp
xor
add
fidivl
and
sahf
subb
rol
push
call
call
and
fbstp
sbb
xchg
fldenv
lods
add
popa
movq
lret
mov
xor
dec
imul
ret
jo
and
loopne
inc
pop
mov
or
nop
mov
ret
pop
xor
pop
imul
sub
xor
cmp
scas
ja
ret
sbb
test
xchg
incl
cltd
xchg
xchg
repnz
orb
sbb
lds
insb
push
fsubrp
fldl
scas
scas
mov
ret
sub
lds
xchg
push
dec
movsb
add
ret
popa
mov
in
clc
push
out
inc
stos
jbe
andl
pushf
fwait
repz
add
movsl
popf
and
pop
mov
leave
sub
outsl
mov
mov
ret
adc
dec
ret
mov
in
fidivrs
shrl
jmp
outsb
call
xor
ja
movsb
addr16
pusha
test
inc
hlt
decl
push
jmp
and
adcb
jne
inc
xchg
push
test
mov
pop
mov
repz
pop
adc
mov
outsl
lahf
add
cwtl
add
hlt
mov
inc
jmp
divl
rolb
jmp
popl
movzbl
and
imul
mov
hlt
pop
fcos
xchg
jbe
inc
adc
inc
push
sbb
rorl
pop
cmp
or
inc
call
jbe
mov
enter
popf
push
adc
and
lds
rorl
or
cmpsb
scas
xlat
and
push
xor
adc
ss
stos
dec
dec
cmp
outsl
fsubs
dec
xchg
sub
stos
addr16
data16
mov
push
push
cli
clc
negb
andl
sub
sub
pop
clc
mov
jg
nop
sbb
mov
pop
fildll
in
xor
xor
sub
loopne
jecxz
sbbb
nop
xchg
inc
mov
sub
loope
out
fdivr
mov
rclb
push
test
push
lock
push
call
or
add
pop
int3
int3
mov
aas
pop
fwait
dec
adc
xor
pop
xchg
cmp
mov
mov
sub
out
mov
and
inc
pop
or
lret
bound
lcall
movsl
sub
ljmp
xchg
stos
test
and
inc
sahf
imul
pop
dec
call
sahf
out
push
sbb
mov
mov
mov
inc
nop
pop
ret
mov
popa
or
pusha
xorb
push
test
dec
inc
sbb
adc
adc
cmp
dec
loopne
call
xlat
mov
lods
bound
fs
xchg
outsb
cltd
mov
clc
add
xchg
stos
pop
fcoml
dec
iret
xchg
pop
adc
jcxz,pn
ja
or
insb
test
sbb
jge
xor
mov
add
jbe
cmp
in
aam
push
or
xor
mov
push
fistl
cmc
outsl
sbb
imul
inc
and
push
cld
sahf
adc
rcr
pop
aaa
pop
fsubl
loopne
std
or
insb
mov
aad
outsb
addr16
xchg
test
mov
push
shr
stos
push
jp
dec
mov
fdivl
push
sbb
fdivr
arpl
mov
ss
lret
push
in
cmp
cs
stos
lahf
push
xor
ret
cmp
hlt
in
mov
js
push
jne
fmull
dec
push
mov
inc
mov
mov
push
xor
jle
call
push
gs
or
and
loopne
daa
inc
lcall
cmp
aas
mov
add
and
push
xchg
sbb
mov
call
sub
push
fdivrs
mov
jg
cmpsl
mov
jnp
mov
mov
cmp
movsb
arpl
dec
add
mov
popf
cmp
pop
xor
data16
fwait
cmc
loop
cmc
mov
lret
or
push
xor
inc
or
std
hlt
addb
sti
push
sub
mov
outsl
or
jmp
or
adc
sarl
or
ret
inc
mov
xor
std
lods
xorb
or
jns
mov
mov
push
inc
push
mov
dec
inc
push
push
push
ficoml
pop
repz
mov
pop
cmpsb
jno
or
imul
push
mov
movsb
mov
mov
testl
push
popa
cwtl
cs
out
lds
or
jg
clc
dec
mov
adc
data16
aaa
push
fnstsw
mov
xor
mov
pop
cmovge
jne
mov
es
add
pop
insl
sbb
imull
dec
lods
pop
es
pop
stos
push
js
int
sub
push
bnd
es
hlt
pop
outsl
sbb
adc
sub
push
cmp
clc
aam
notb
in
test
xchg
cmpsl
xor
in
out
push
ret
test
and
loope
mov
xchg
pop
jp
clc
adc
popl
xchg
mov
add
inc
incb
and
push
adc
add
jo
pop
jle
jecxz
add
adc
les
push
hlt
movb
cltd
fs
push
cmp
xchg
inc
push
pop
lcall
pushf
divl
mov
les
pop
adcl
pushf
sub
adc
cli
ret
outsb
es
dec
imul
jo
aam
fwait
adc
xchg
das
mov
in
xorl
je
jle
out
dec
pop
and
pop
xchg
es
scas
inc
mov
push
gs
std
sarb
sbbb
xor
or
loope
inc
movl
aam
mov
addr16
cmpsb
adc
sbb
pop
js
lea
mov
imul
or
mov
mov
jo
pushf
and
out
repz
inc
sbb
sarl
in
jnp
sub
xor
inc
sub
ret
out
jge
sbb
sub
sti
outsb
stc
cmpl
fld
or
cmp
mov
cltd
daa
mov
xchg
and
daa
mov
and
nop
inc
cmp
sbb
repz
add
xlat
shl
icebp
out
shrl
dec
jno
mov
insw
xor
push
push
sub
sahf
pop
add
add
jecxz
inc
dec
test
xchg
fisttps
xor
shll
pop
cmp
and
icebp
decl
push
sbb
xchg
stos
and
add
decb
mov
cmp
shll
fldl
dec
lret
sahf
outsl
aas
mov
adc
pop
xor
mov
daa
into
cmp
fcompl
xchg
rcrb
out
inc
popa
ja
les
addr16
cmp
cwtl
xchg
out
pop
sbbl
xor
jg
imul
pop
shr
inc
xchg
add
jg
and
sbb
push
sbb
sbb
and
fistpl
sbb
sbb
icebp
push
mov
jg
repnz
pop
out
add
sbb
xchg
lret
lahf
adc
push
mov
sbb
mov
test
dec
mov
pushf
scas
ja
add
jbe
and
cmp
repnz
pop
lret
or
movsb
pop
mov
mov
popa
xor
int
js
pop
pushf
std
push
sub
ss
xor
cmp
jmp
add
es
jbe
in
daa
jge,pn
pop
jae
sbb
fwait
sti
mov
lret
fcoms
or
sub
addr16
stc
int
ret
in
nop
xchg
cwtl
ja
lret
mov
aaa
push
mov
into
xchg
shl
push
xchg
mov
popf
mov
add
movsl
mov
and
add
inc
push
imul
inc
lret
fcos
mov
jo
jle
lret
clc
push
in
mov
mov
ficoml
int
cmp
dec
int3
std
pop
repnz
push
xchg
sahf
clc
xchg
xchg
mov
in
mov
cmpb
sub
and
repnz
sub
xchg
std
add
add
mov
mulb
jl
xchg
fisubrs
insl
inc
cmp
dec
dec
mov
mov
xor
ja
test
add
mov
mov
mov
int
in
jg
mov
xor
scas
loop
inc
pop
xchg
add
int
xlat
stos
xor
cmp
xor
mov
fsubrl
inc
add
xchg
es
mov
into
jmp
xor
stos
dec
pop
filds
or
jmp
movsb
dec
ljmp
xor
jb
jp
push
lods
jmp
xchg
mov
and
inc
lods
jmp
loopne
popf
sub
testb
cmpsb
adc
popa
xchg
sbb
push
mov
test
push
and
decl
push
mull
inc
out
hlt
cwtl
das
lods
and
fxch
mov
jge
dec
hlt
mov
filds
sbbw
dec
iret
ja
ret
jle
push
int3
mov
pop
pop
pop
call
movsb
dec
mov
sub
lcall
inc
mov
ss
lods
fsubrl
pop
in
or
hlt
inc
jg
jecxz
addr16
fadd
xchg
insb
xchg
rol
mov
ja
cli
sub
pushf
imul
inc
inc
mov
jnp
fistps
cli
pop
js
je
adc
inc
cmp
pusha
and
sarl
push
pop
mov
pushf
xchg
inc
into
fdivp
dec
fwait
sbbl
dec
push
xlat
mov
xchg
sahf
sub
adc
sub
mov
cmpl
jecxz
sti
push
stos
je
push
adc
or
lods
inc
fwait
inc
icebp
xchg
push
js
div
imul
sarl
push
shrl
and
pop
scas
pushf
sbb
or
das
push
jecxz
notl
mov
aas
pop
inc
pushf
lret
pop
and
adc
cmpsb
jnp
pop
sbbb
add
repnz
loopne
cmpsl
sahf
pop
mov
daa
rcrb
add
adc
sub
insb
pop
add
adc
repz
jne
pusha
mov
push
test
imul
and
stc
adc
fsubr
mov
mov
pop
fnstsw
adc
or
sbb
repz
jo
bound
dec
fmul
add
cmp
shrl
int3
pop
popa
mov
dec
xchg
inc
lcall
and
out
movsb
addr16
cmc
movb
negl
jp
and
ficoms
aaa
or
xor
pop
mov
xchg
loopne
pop
adc
adc
ror
adc
cwtl
mov
rol
xchg
mov
xor
into
or
cltd
cmp
mov
mov
mull
inc
xor
mov
xchg
clc
push
hlt
out
sub
push
xor
inc
or
daa
rcll
jae
xor
xchg
cltd
out
adc
or
dec
push
or
sbbl
andl
or
jo
fs
xchg
push
test
push
lods
cmp
stos
push
jno
test
cld
or
shl
mov
mov
push
inc
add
mov
in
add
lret
lahf
lods
push
out
fisttpll
xor
mov
lahf
inc
or
dec
clc
sbb
sub
push
adc
cmpsl
jbe
lea
xchg
dec
inc
pop
imul
fcmovnb
mov
test
cmc
sbb
add
sbb
loopne
jo
out
cmp
mov
sti
insl
ret
xchg
jg
lcall
pop
into
bound
negb
jbe
imul
enter
adc
pop
addr16
insl
jnp
jle
sub
cwtl
sub
negl
mov
movsb
sub
mov
lret
icebp
repnz
jbe
scas
ss
out
aaa
xlat
push
mov
mov
jbe
push
add
lds
je
imul
xorl
and
cli
sbb
jo
push
stos
xor
daa
xchg
inc
fwait
cmpb
mov
stos
and
sahf
aas
cmp
sub
jle
inc
xchg
cltd
jb
inc
pop
cmpsb
inc
repz
lcall
xor
lds
lock
fdivrs
push
jmp
inc
lock
gs
dec
mov
in
or
sbb
in
sub
push
lea
jle
sbb
es
out
xchg
xlat
mov
fistpl
jns
repz
shr
mov
rcrl
icebp
outsb
ret
pop
stos
fcmove
dec
fidivrs
add
xchg
js
adc
and
mov
enter
sub
mov
sub
stos
or
push
inc
sbb
add
and
jmp
ljmp
subb
pusha
xchg
mov
lret
out
adc
ret
shll
out
scas
push
or
add
pop
and
rclb
inc
fwait
pop
dec
push
popf
dec
adc
push
cltd
push
jb
lods
dec
lods
cltd
cmpsl
and
and
cmpsl
jl
and
pop
mov
adc
xlat
jecxz
xchg
xchg
lock
push
inc
push
jecxz
lahf
mov
mov
cwtl
shll
je
decl
stc
cmp
sbb
movsl
and
pop
repnz
pop
xchg
mov
xlat
ss
mov
ret
sahf
lods
add
insb
testb
in
test
stos
jne
outsl
negb
inc
decl
shl
fmull
dec
jmp
cmc
insb
add
cwtl
loopne
mov
fistpll
jg
movsb
mov
sbb
push
and
sarl
mov
pop
cmp
lods
pop
xor
or
ds
pop
aad
and
icebp
push
mov
sbb
xchg
sub
dec
aad
add
push
add
mov
or
lods
jns
dec
or
fidivs
mov
jmp
push
lahf
movsb
jbe
fsub
push
dec
jmp
sets
inc
xor
in
data16
pop
push
dec
ret
aam
test
jno
jmp
mov
mov
push
jg
or
cwtl
mov
daa
mov
xchg
jp
or
repz
popf
push
ds
test
daa
nop
rcll
in
dec
mov
imul
mov
movsb
into
inc
shr
vminss
mov
filds
scas
notb
mov
scas
mov
hlt
cltd
int3
pusha
nop
cwtl
dec
pop
lret
call
pop
scas
cmp
cltd
push
jae
sbb
adc
imul
pop
or
inc
aas
pop
test
scas
ja
push
movsb
jnp
jnp
sbb
and
or
pop
aaa
out
jo
movb
sbb
mov
jge
outsb
sub
sub
xor
mov
out
dec
xor
dec
jl
out
hlt
mov
shll
mov
mov
mov
push
mov
call
inc
jb
push
mov
jo
test
sub
int3
frstor
push
mov
adc
sub
xor
cmpl
cli
sbb
clc
sahf
mov
pop
call
mov
push
fsubr
out
shlb
fisubrl
jle
loopne
push
insb
ret
jg
sarl
adc
aas
shrl
mov
mov
mov
jo
jp
mov
inc
in
cld
test
xor
mulb
in
add
jge
mov
fsubl
push
adc
jnp
push
xor
add
clc
xchg
mov
or
orl
adc
dec
xchg
xchg
xor
jge
pop
and
bound
mov
cmpsl
enter
add
push
adc
pushf
lahf
and
or
in
test
stos
mov
ja
xor
adc
xor
addr16
cltd
inc
mov
out
cmc
cld
lcall
cwtl
sub
notb
dec
stos
mov
sub
fwait
test
notl
aas
mov
mov
mov
lret
test
push
fwait
jle
or
inc
jno
inc
sub
cs
sbbb
nop
pop
call
pop
and
insb
daa
push
xor
xor
push
or
xchg
xor
cmp
idivl
xorb
inc
mov
mov
les
pushf
dec
outsb
mov
pop
cld
test
insl
fldt
sbb
adc
call
add
icebp
pop
add
add
rcrl
cli
mov
add
inc
mov
or
in
push
aad
sti
pop
mov
or
mov
fsub
in
sub
aam
mov
hlt
pop
ja
or
dec
xlat
mov
or
jnp
psllq
xchg
mov
and
jne
cmp
cmp
test
sbb
fdivs
fcoms
lret
mov
jg
gs
mov
xor
aam
pushl
dec
pop
mov
lock
xor
xchg
iret
and
fs
test
imul
inc
test
iret
mov
cmp
push
rcll
xchg
decb
mulb
stc
and
movsl
loopne
mov
cmp
arpl
fidivrs
pop
ret
ret
push
cmpb
pusha
mov
jl
paddusb
fistpl
pop
paddw
scas
imul
aaa
lods
adc
data16
inc
mov
xchg
cmpl
adc
call
gs
mov
clc
test
add
mov
stos
jo
and
ficomps
les
xor
mov
jl
mov
pop
stos
xor
jg
inc
lea
int
scas
push
hlt
icebp
outsl
rorl
loopne
call
push
cmpsl
ljmp
lret
divl
rcr
sub
jo
mov
mov
es
lahf
je
loop
cmp
insl
push
aad
out
lret
faddl
ds
or
pop
jmp
imul
mov
xchg
cmp
mov
sbb
dec
pop
addr16
jmp
nop
fldcw
aas
push
jns
imul
test
cwtl
fwait
cmp
xchg
in
push
ret
ja
xor
fcomps
nop
and
mov
and
pop
jno
xor
orl
std
or
cmp
scas
fstps
test
cmp
sbbl
das
adc
enter
mov
jmp
sub
shrb
flds
xchg
out
sahf
mov
add
daa
or
sbb
sahf
xor
jno
pop
adc
mov
adc
lahf
mov
outsb
fpatan
adcl
repnz
jmp
movsb
xchg
mov
inc
insl
inc
sbb
les
sbbb
pop
mov
cmc
shr
cmp
shlb
push
cld
ja
daa
lods
jno
inc
fcomp
scas
sbb
ffreep
fists
push
pop
imul
push
pop
cli
mov
in
vunpckhps
test
jmp
inc
lret
leave
in
ljmp
mov
aad
pop
nop
add
or
push
adcb
or
dec
push
pop
nop
sbb
inc
cmp
lods
jae
sbb
sbb
out
sti
pusha
popa
fwait
jbe
sbb
std
or
xchg
aad
movsl
fistl
stos
inc
cs
icebp
dec
lds
fdiv
mov
cli
jl
pusha
testl
jle
dec
and
test
jl
loop
popa
out
cmpsb
push
mov
repz
or
fmull
pop
sbb
mov
rol
fisubs
dec
frstor
mov
mov
sarl
mov
aas
dec
and
loopne
or
mov
or
jg
lods
xchg
adcl
rolb
test
ret
cmc
cld
xchg
or
sbb
scas
xchg
mov
xchg
cmpsb
jbe
mov
test
pop
filds
cmpsb
es
ja
inc
enter
in
popa
ficoms
add
jno
inc
mov
xchg
iret
xchg
xchg
repz
add
jbe
pop
movsb
sbb
sub
leave
sar
and
xchg
out
lods
xchg
mov
sub
insb
ss
xchg
loop
pop
adc
sub
call
xchg
dec
push
mov
cmp
mov
inc
int3
or
mov
rorb
sub
or
mov
cmpsb
outsl
jmp
sub
nop
xor
in
cmpsb
mov
mov
shlb
mov
cmpsl
or
jecxz
jp
mov
adc
cs
jg
aas
js
dec
imul
pop
push
stos
xor
cmp
shlb
and
rclb
jbe
jno
or
rcrl
insb
mov
shrb
pop
dec
std
jne
xor
mov
cld
mov
and
jmp
scas
dec
adc
lods
fidivs
xchg
sub
lea
mov
lods
fcmovnbe
or
inc
in
push
repnz
outsb
or
dec
lcall
je
dec
fistps
scas
cmpsl
cli
pop
mov
xor
fdivp
mov
mov
pop
sub
jecxz
xor
js
and
inc
lret
pop
mov
das
cmp
jl
lret
dec
loop
jno
fisubs
lock
mov
pop
in
adc
ja
int
mov
in
imul
inc
iret
scas
jbe
ja
push
cmc
cltd
mov
push
movsb
sbb
cmpsl
aas
stos
sbb
mov
pushw
aam
inc
inc
mov
xchg
jb
jbe
or
ja
xor
xchg
lcall
fnsave
enter
in
xor
ljmp
loopne
loope
int
lcall
and
adc
or
aam
mov
push
lods
sub
or
imul
cltd
push
fcompl
insl
loopne
mov
call
sbb
shlb
mov
inc
pop
mov
int
or
icebp
and
xchg
movswl
call
or
nop
sarl
std
lds
aam
repnz
shll
adc
cmp
inc
xchg
enter
push
adc
out
sub
pop
fstpl
call
jnp
arpl
daa
stos
outsl
cmp
pop
xor
popa
adc
shl
fsubr
cmp
shrb
imul
inc
xchg
aas
lahf
imul
fwait
cmpsl
imul
loope
cmpl
pop
pop
cmp
movsb
cwtl
pop
xchg
sub
pushf
aaa
jmp
adc
xor
insl
inc
sahf
inc
push
hlt
mov
mov
jae
push
into
dec
cmp
sub
inc
xchg
pop
push
mov
lods
mov
fimuls
rclb
sbb
sub
push
pop
jnp
lcall
push
in
and
push
jmp
or
mov
push
xchg
ljmp
jae
aas
movsl
and
fisttpl
data16
inc
pop
fs
xor
jge
fs
cmp
lods
mov
mov
ret
cld
push
cmc
mov
adc
jbe
push
fs
ja
push
enter
cli
xchg
pusha
arpl
push
test
sbb
repnz
fisubrl
sub
push
mov
cmpsb
xchg
adc
push
mov
push
mov
lcall
fadd
xor
lcall
jnp
or
imul
push
jb
mov
lcall
and
test
fidivl
ja
test
cmp
lods
insl
add
popw
xor
fdivs
cmpsb
mov
or
fldcw
add
and
fisubrl
jle
sub
lods
xchg
mov
pop
mov
cmp
aad
push
xor
ja
mov
dec
mov
loopne
cmp
lahf
aam
fmul
add
test
stos
jns
fcomps
sahf
add
outsl
mov
xchg
imul
xor
cmp
inc
inc
daa
lock
pop
sub
mov
les
lea
fnstsw
scas
and
call
or
mov
movsl
imul
popf
insl
call
repnz
aad
or
gs
cltd
push
call
sub
adc
popa
cli
gs
push
imul
lcall
or
pop
push
lods
rep
xchg
xor
jl
jp
and
sahf
sub
mov
iret
data16
xor
adc
push
idivb
xchg
jnp
cmp
sahf
sub
rcrl
mov
imul
ret
sbb
into
repz
jns
or
orl
mov
mov
outsb
inc
cmp
call
dec
shlb
adc
pushf
hlt
mov
adc
lahf
push
popf
add
inc
dec
mov
inc
imul
jg
insl
jbe
push
call
add
ret
mov
and
push
imul
lods
and
iret
fimull
dec
inc
aad
test
inc
stc
mov
push
push
imul
jae
mov
addr16
insl
test
scas
pand
mov
adc
fs
fwait
clc
xor
and
data16
in
mov
daa
mov
into
cld
outsb
jl
data16
sub
enter
nop
dec
add
pop
clc
xchg
shrb
insl
shlb
mov
jnp
xor
in
mov
pop
lods
jmp
repnz
sub
stos
jno
pushf
mov
inc
mov
fdivp
adc
je
js
nop
and
lahf
repnz
mov
jge
or
ret
addb
cs
xlat
leave
adc
jno
stc
dec
fcomps
frstor
enter
dec
mov
into
jnp
loope
fcoml
scas
sub
jnp
pusha
pop
push
push
lods
xchg
addl
movsl
call
int
xchg
mov
push
dec
jne
mov
out
test
enter
xchg
inc
pushfw
test
and
fstps
imul
insl
cmc
mov
sbb
stos
mov
repz
sbb
movsl
js
sbb
mov
in
mov
in
notb
xchg
mov
cmc
sbb
mov
dec
mov
dec
push
xor
repz
adc
pop
push
jne
nop
pusha
jp
je
insl
fcmovne
pop
loope
xchg
sbb
sbb
call
dec
imul
mov
mov
lds
inc
push
adc
push
xchg
lock
das
inc
jl
mov
mov
imul
fimull
ds
sbb
pop
mov
cmc
sub
cmp
and
aas
dec
ss
sub
mov
add
dec
lds
call
mov
mov
in
movsl
mov
mov
dec
in
in
fdivrs
jecxz
dec
fdivrl
jnp
cwtl
js
push
out
cmp
into
stos
test
rcl
bswap
arpl
shll
pop
jne
adc
lods
pop
cmpsl
mov
lret
ret
cmp
mov
xchg
inc
adc
cmpsl
jb
in
test
arpl
stos
mov
out
cld
jmp
out
mov
cmpsb
sub
sbbb
shll
lds
decb
mov
mov
pop
std
aas
pusha
stos
ja
push
pop
fwait
cmpsl
pop
dec
xor
cmpsb
sbb
ret
jle
mov
jg
gs
inc
push
inc
jge
addr16
or
leave
sbb
add
inc
loop
icebp
jns
andb
pop
jp
jl
push
ret
sar
ret
ret
fwait
sti
addl
push
and
hlt
repnz
mov
jno
adc
or
sahf
xchg
add
mov
addl
int
lock
jp
popa
pushf
cltd
mov
data16
fucomp
xchg
xlat
dec
add
jo
lea
insb
sti
aas
xchg
sub
cmpsb
les
stc
shlb
cmp
fistpll
fsubrs
jb
add
cmp
movsb
lods
inc
rolb
out
xchg
lea
movsl
inc
in
pusha
insl
dec
cmc
pop
cmpsl
jne
mov
mov
lods
jmp
xor
aas
dec
cmpsb
stos
sbb
mov
insb
add
xchg
sarl
fldl
sbb
inc
dec
mov
int3
popf
lods
cmc
pop
ret
lahf
jecxz
in
pop
jae
pop
dec
xchg
stos
jge
mov
jae
ljmp
ljmp
mov
cmp
xor
out
andb
hlt
xlat
cmp
and
notb
lcall
push
inc
repz
jmp
outsl
negl
mov
mov
mov
bound
cmp
popa
push
inc
adc
mov
fiadds
pop
les
inc
pop
cmp
inc
loope
dec
push
xchg
arpl
loop
pop
adc
sub
roll
in
pusha
push
mov
inc
sub
clc
cmp
in
pop
jecxz
addps
mov
push
fldl
les
loope
pop
mov
dec
dec
aas
jle
or
inc
add
out
nop
adc
xchg
push
cmp
xchg
mov
mov
in
sbb
and
scas
ret
xchg
cs
insl
jge
pop
mov
scas
stos
sub
enter
js
mov
dec
pop
insb
in
jge
pop
add
lret
pop
ret
inc
fcmovb
lret
sti
out
mov
or
cld
cmc
sub
lods
xor
inc
push
inc
ljmp
in
sub
out
lock
pushf
push
sbb
loopne
adc
inc
inc
mov
xor
mov
lret
and
mov
movnti
cltd
fisubrl
dec
dec
mov
jo
push
daa
sti
pusha
clc
sub
loopne
jle
jg
jp
test
imul
arpl
mov
mov
xchg
mov
or
pop
imul
scas
call
and
loopne
push
dec
pop
inc
popf
repnz
das
lcall
jne
adc
push
xlat
pushf
orl
xchg
test
jl
int
leave
jg
les
lahf
dec
pop
cli
xchg
fstpt
ljmp
dec
push
out
popf
ja
lods
daa
sub
aad
add
inc
cmpsb
test
xchg
push
inc
fwait
cli
aam
sarb
mov
stos
test
in
in
sti
sbb
dec
sbb
xor
xor
lcall
lock
jle
pop
rorl
inc
sub
xchg
sti
cltd
sbb
sbb
enter
les
mov
vmovups
into
add
mov
js
stos
xchg
pop
sub
xchg
add
sbb
or
sbbb
adc
jge
test
icebp
xchg
stc
inc
push
cmp
ret
jmp
inc
or
xchg
gs
mov
or
jl
push
and
push
std
shll
fsubrs
sbb
lods
cmp
mov
mov
and
xor
xchg
icebp
cmp
popa
int
sbb
cwtl
iret
and
sbb
lock
jmp
sbb
cmpsl
mov
cmp
mov
pop
repnz
jne
cmpsl
bound
adc
cmp
imul
pushf
test
outsl
daa
mov
insl
pop
lahf
insl
cmc
mov
inc
xlat
pop
lret
pusha
inc
pop
fldenv
cmp
jns
jg
sub
jns
enter
adc
xchg
adc
clc
xor
loop
inc
out
cli
inc
ja
jns
aam
pusha
aam
sbb
lods
jno
inc
xchg
call
mov
mov
adc
pusha
mov
outsl
or
enter
mov
or
leave
mov
cli
hlt
adc
ljmpw
jb
imul
dec
sbb
push
or
scas
cmp
pop
dec
int3
outsl
fxch
sub
cli
testb
inc
adcl
cmp
in
mov
pop
pop
sbb
inc
fs
jmp
add
ficomps
jae
cmpsb
mov
data16
lret
push
push
mov
and
lret
xchg
pop
inc
jbe
xchg
inc
and
xchg
add
and
cmp
xchg
jle
adc
cmp
cmpsb
pop
cmp
out
push
mov
cmp
ljmp
lcall
xor
into
push
mov
jp
xchg
decb
fstpl
pop
imul
sub
adc
adc
test
icebp
sub
ret
pop
cmpsb
pop
stos
jg
mov
fsubrp
call
sbb
orb
imul
adc
mov
fucomp
mov
inc
movsb
out
sub
cmpxchg
cmp
daa
add
push
inc
add
jno
mov
jl
fisttpll
das
pusha
ss
jmp
sbb
xchg
lret
shrb
popa
xor
jmp
dec
sub
push
movsl
cli
cli
sbb
enter
hlt
ljmp
xchg
pop
aaa
push
in
or
rorb
mov
in
or
mov
shll
mov
cmp
mov
fdivr
loope
int3
clc
or
mov
iret
jae
in
call
movsl
std
sub
aad
push
or
mov
cmpl
icebp
pop
mov
add
dec
inc
repz
loop
ret
pop
loopne
mov
loopne
sub
test
jo
dec
pop
sub
push
insl
into
in
add
lea
and
ret
aad
inc
sahf
das
seto
js
cmpsb
ja
pop
call
push
add
and
cmp
cmp
inc
inc
movsb
mov
repz
loop
das
cld
inc
loope
pop
call
ret
lret
push
inc
inc
dec
in
idivb
loopne
ret
and
sti
test
xor
mov
data16
push
adc
inc
fldl
push
fs
aad
fsubl
jb
rol
mov
pop
add
cmp
adcb
xchg
push
sbb
mov
pop
and
xchg
fstpl
push
push
or
push
cmp
mov
and
fnsave
leave
into
jg
mov
popa
ret
les
fs
xor
fdiv
jle
adc
fisubrl
xchg
jbe
inc
add
mov
ja
repz
test
xchg
jecxz
or
daa
neg
into
push
fstpt
fdivrl
dec
ret
jbe
jmp
imul
push
pop
mov
mov
cmp
fbstp
sub
incl
call
sbb
sub
cs
cmp
shl
push
std
cwtl
cwtl
xor
decb
mov
std
mov
xor
loope
inc
aas
xchg
in
xchg
dec
call
repnz
pop
jo
shll
jno
das
dec
dec
mov
mov
andl
cmp
pushf
sbb
inc
imul
lods
inc
mov
xchg
push
testb
sub
rcll
xchg
mov
push
sub
mov
add
aas
pop
movsb
aad
mov
pusha
clc
out
repnz
lret
or
mov
xchg
adc
ret
loopne
sub
outsb
mov
mov
jle
mov
jg
sub
inc
dec
push
je
xchg
je
mov
imul
sub
pop
cmp
mov
in
mov
xor
sahf
pop
xor
pop
push
and
fcoml
mov
fucompp
lods
xchg
dec
inc
inc
lds
inc
mov
in
movsb
cmp
pop
or
mov
and
xor
out
ss
out
sbb
ljmp
and
adc
mov
xchg
mov
aad
dec
test
mov
jb
fimuls
loopne
or
adc
mov
adc
adc
imul
loope
loopne
lea
lock
popa
ret
adc
hlt
repz
adc
or
out
cmp
push
test
sub
jmp
cltd
sbb
dec
scas
test
stos
sahf
adc
insb
movsl
ret
popf
push
icebp
dec
stos
das
adc
mov
addr16
lret
sti
pop
int3
jg
xchg
jo
vpslld
push
mov
and
push
aaa
stos
push
sub
inc
addb
std
gs
dec
cmp
lock
mov
cmc
sub
pop
xchg
call
xor
and
cmp
sub
push
faddp
jmp
xor
test
push
cmp
enter
xchg
lods
mov
cmp
lds
mov
mov
push
or
sarl
dec
in
enter
scas
jle
mov
adc
xchg
rclb
sbb
lock
mov
push
or
fs
fisubs
push
and
adc
insl
stc
popf
fldl
shlb
jmp
pop
or
test
mov
inc
sbb
inc
fucomi
mov
mov
adc
mov
jmp
xchg
mov
or
hlt
data16
fbld
and
cmp
outsl
mov
pop
push
cli
fiadds
mov
into
movsb
imul
cmp
adc
or
aaa
into
push
cs
push
lcall
cmp
sahf
dec
hlt
jmp
cmp
push
mov
stos
xchg
rcrl
mov
test
cmp
inc
data16
aad
shll
pop
shr
inc
outsb
pop
sahf
xor
jmp
xor
scas
popa
fsubrl
cmp
cmp
inc
fldenv
dec
pop
jne
or
sub
iret
stc
sub
out
je
adc
or
gs
cmpsl
sub
cmp
jg
jecxz
dec
nop
ret
lods
insb
popf
xlat
out
movsl
xchg
insl
jge
jno
dec
add
js
sbb
aam
je
pop
mov
mov
and
call
mov
push
sahf
dec
sub
pop
hlt
loope
rcll
add
add
enter
sahf
inc
cli
sub
adcb
mov
jno
jb
push
pop
xchg
pop
repz
jns
adc
dec
sub
dec
popa
hlt
ret
add
add
out
jl
mov
data16
cwtl
and
adc
mov
pop
dec
popf
cmp
cmc
xchg
stos
or
jne
pop
xor
les
je
subl
add
push
xchg
sub
loopne
test
sti
xchg
add
mov
popf
aaa
hlt
lret
jecxz
dec
or
imul
mov
std
popf
add
mov
push
adc
sub
fisttpl
and
sbb
mov
sub
dec
or
call
addr16
jecxz
jb
andb
mov
sbb
push
into
jbe
test
mov
sbb
jg
cmp
cmp
lods
jns
loope
jo
cmp
or
mov
leave
xchg
mov
adc
sbb
int
pushf
hlt
fs
sub
add
push
shrl
cmp
and
jmp
outsb
dec
or
rclb
dec
test
lcall
dec
push
inc
cli
dec
mov
cmp
mov
addr16
xchg
cs
mov
cmp
fwait
jecxz
sarb
cmp
or
cmp
push
mov
adc
and
ss
arpl
andl
out
test
fwait
in
stos
mov
sub
fistpl
mov
push
rcr
addr16
popf
adc
or
inc
mov
or
sub
mov
cmp
in
out
and
inc
and
lret
jne
adcb
aaa
xchg
jmp
movsb
xchg
sbb
rclb
lea
call
test
sbbb
sub
stos
jae
and
jno
fdivrp
xchg
adc
jne
gs
sahf
lods
les
push
xchg
jmp
pop
imul
sbb
cmp
push
add
out
jle
mov
cmc
in
test
ja
outsb
sub
ja
or
insl
and
adc
clc
outsl
cmpl
mov
inc
lods
and
mov
push
push
fs
push
adc
inc
arpl
pop
movsl
orl
dec
and
lret
inc
iret
jae
fmul
pop
in
add
xor
push
lea
jmp
pop
jg
or
xchg
add
add
cwtl
xor
or
aaa
iret
jp
jge
aaa
ror
sahf
sbb
mov
ljmp
lock
add
xchg
mov
ffree
inc
add
cmpsl
sub
xor
or
les
jae
sbb
push
dec
mov
out
aad
adc
imul
andl
orl
mov
stos
inc
dec
insl
push
ja
loope
fyl2x
pop
lods
dec
cmp
sahf
hlt
mov
or
out
mov
add
inc
sahf
ss
pop
push
sbbl
lahf
adc
cmp
xchg
ds
out
popf
stos
push
lds
jne
sbb
push
inc
pop
test
push
shrl
push
push
cmpsl
ds
lret
shrl
sub
movsl
dec
hlt
adc
leave
sub
push
xchg
or
xorl
shrb
cmp
jecxz
testb
shl
cwtl
xor
jo
sbb
sbb
add
or
xchg
subl
jnp
pop
nop
sbb
mov
aad
inc
out
dec
xchg
mov
adc
outsb
push
rorb
mov
cmp
sahf
loop
xchg
mov
sub
rorl
es
cltd
xor
cmp
sub
mov
mov
pop
cmc
cli
into
mov
push
lds
aas
sub
icebp
fwait
sub
mov
ljmp
push
or
add
sbb
or
mov
sub
dec
popf
ror
and
push
pop
in
test
and
and
je
jp
add
rorl
js
insb
mull
repz
in
cld
std
addr16
jmp
dec
enter
insb
jl
cwtl
pusha
arpl
lods
adc
sbb
dec
dec
imul
xchg
xor
arpl
in
push
cmpsl
ds
sbb
cmp
inc
mov
roll
out
stos
push
imul
dec
mov
sarl
out
add
sbb
popa
imul
ljmp
lock
aaa
nop
xchg
inc
and
mov
divb
adc
xchg
scas
test
arpl
cmp
push
test
inc
fldenv
push
lcall
and
ljmp
mov
jns
xor
incb
xchg
xor
test
lcall
incl
cmc
adc
mov
inc
xchg
pop
mov
inc
pop
inc
fwait
inc
into
mov
into
loope
lcall
jne
or
testb
sahf
shrb
jne
movsb
shll
mov
sarb
sub
insb
xlat
rcrb
jno
dec
daa
push
fisttpl
dec
shr
and
nop
stc
push
and
sbb
stos
adc
lret
mov
ret
mov
mov
or
mov
mov
jg
push
test
pushw
repnz
pop
pop
push
sub
adc
mov
xchg
test
xchg
mov
or
fbld
fcomps
adc
jbe
xor
and
mov
lods
fistpl
lock
pop
enter
popf
iret
push
sub
dec
cmc
jp
xchg
js
xchg
dec
mov
in
xchg
pop
inc
call
movsl
dec
or
cmp
xchg
jge
pop
icebp
jmp
mov
cli
add
and
stc
gs
cwtl
xor
das
lahf
call
sti
shlb
and
pop
xchg
inc
test
sub
xchg
inc
in
pop
push
aaa
pop
mov
add
jbe
test
popa
fdivp
adc
adc
lss
ja
push
sbb
mov
mov
xchg
lret
fildll
inc
push
jb
shrl
and
scas
aas
xor
cli
dec
js
lcall
mov
into
pop
add
mov
movl
mov
sbb
adc
and
cltd
scas
dec
dec
out
mov
in
les
lods
ss
sub
fistl
insb
mov
mov
in
add
pop
clc
push
sub
std
addr16
scas
pop
cli
cld
push
adc
hlt
hlt
ljmp
out
test
mov
hlt
iret
daa
xorl
cld
std
inc
add
test
sbbb
cmp
push
addb
mov
pop
and
jbe
sti
and
pop
jne
lods
mov
and
and
dec
out
out
xchg
aam
cwtl
mov
rcll
ret
jle
or
test
faddl
sub
lea
fcmovnu
pop
mov
xor
and
push
inc
mov
sub
pop
mov
clc
pop
mov
dec
into
test
aad
jne
fwait
sub
pop
add
aas
dec
xor
dec
adc
push
subl
mov
xchg
sub
inc
xor
inc
hlt
out
dec
shll
imul
enter
out
sbb
imul
mov
fiaddl
ja
push
adc
fmul
outsb
mov
mov
ret
outsb
mov
cmpsl
xor
cmp
arpl
pop
sub
inc
xchg
mov
push
mov
mov
loope
out
mov
add
add
push
pop
out
push
sbb
xchg
sub
jg
jae
push
mov
or
stos
les
sbb
test
or
push
shl
sub
bound
iret
rolb
xchg
and
sti
mov
sub
sub
addl
and
aas
into
mov
sbb
jp
cltd
cs
ret
in
enter
pop
inc
push
outsl
cli
push
jbe
scas
scas
inc
mov
neg
xchg
sahf
insl
push
mov
ds
sub
orl
sub
sub
mov
mov
bound
xchg
imul
loope
sbb
cmpl
lcall
lret
jo
inc
repz
inc
fiaddl
cs
or
cli
jg
subl
mov
dec
js
andl
lea
rcl
or
clc
les
sub
cmp
cmp
or
jbe
mov
orl
fildll
aas
xchg
add
mov
cmp
cmp
ret
dec
movsb
repnz
arpl
xchg
jnp
int
mov
mov
adc
and
pusha
sbb
adc
rorb
repz
mov
or
cli
push
cld
xchg
and
mov
roll
movsl
pop
icebp
out
dec
and
cmp
imul
xchg
inc
xchg
test
cmpsl
in
jge
rcrb
cwtl
out
xor
jmp
cmp
push
in
and
push
xor
in
jge
ret
outsb
xor
sbb
mov
jle
jne
icebp
shrl
scas
dec
cmpsb
rcll
in
push
cmp
cs
popf
jg
mov
mov
sbb
fstpt
rcrl
sbb
sarl
icebp
mov
or
repz
cmp
jecxz
mov
jbe
inc
ror
dec
out
pusha
inc
into
mov
ret
lret
clc
push
subl
movsl
les
pop
pop
jae
add
sub
cltd
add
jle
xor
test
sahf
pop
inc
pop
sbb
xchg
jno
mov
inc
call
mov
cmpl
sub
cmp
ficomps
or
je
movsl
xchg
sbb
repz
test
pop
loope
inc
mov
xor
lahf
cmpb
cmpsb
mov
jg
ja
loopne
add
jns
test
push
jmp
mov
dec
in
mov
loop
sbb
mov
mov
sbb
mov
lahf
sti
or
lret
daa
xchg
and
dec
or
into
enter
mov
xchg
sbbb
and
jo
loopne
cmp
stos
scas
sbb
push
int
cmp
and
mov
popf
das
mov
mov
add
mov
push
sbb
fmull
icebp
mov
sub
mov
adc
shrb
jnp
push
mov
in
push
daa
mov
sub
cmp
imull
add
pop
addr16
js
ds
adc
lret
inc
stos
cld
into
push
fcoml
or
scas
mov
lods
sub
mov
fldenv
adc
cmp
neg
cmpsb
xchg
idivl
sub
jmp
jmp
fwait
xor
fildll
popf
sti
cli
call
sbb
cmp
fists
pop
jl
pop
dec
push
dec
mov
xor
imul
in
dec
sbb
cwtl
jge
gs
dec
mov
push
dec
cltd
call
fistpl
push
fbstp
mov
testb
lds
loopne
mov
lcall
inc
imul
xchg
jns
loop
jge
xor
push
pop
sub
inc
sbb
sbb
or
inc
and
xor
lret
cmc
fsts
cmp
mov
sbb
outsl
jo
push
shll
es
mov
testb
adc
mov
shlb
fnsave
cmp
or
cmp
loop
and
lods
clc
daa
leave
test
cmp
lret
and
xlat
inc
pop
movsb
jmp
adc
sarl
xor
nop
daa
add
movsl
cmp
enter
aas
and
add
add
repnz
lret
xlat
stos
bound
out
pop
pop
popf
das
sbbb
xlat
scas
dec
and
xchg
cmpsb
lea
cmp
cmpsl
imul
pop
and
fidivs
sahf
mov
jae
popa
sahf
adc
es
in
pop
jp
nop
push
or
mov
lcall
in
orl
or
insb
fildll
cmp
pop
jp
js
add
arpl
xor
rcr
xor
or
pop
sti
add
xchg
adcb
or
popf
dec
shll
or
push
adc
fs
lret
fiaddl
aas
fcmovbe
out
enter
test
lds
mov
mov
fwait
outsl
push
test
and
dec
xchg
mov
dec
dec
sub
inc
sti
sahf
cmp
mov
push
test
jbe
lahf
jnp
add
lds
adc
push
mov
xchg
fisttpll
loopne
add
test
pop
and
add
jo
inc
data16
int3
and
imul
fcoml
icebp
lock
jge
ss
sbb
mov
adc
enter
test
dec
jp
xor
out
mov
mov
outsb
sti
jno
sub
leave
lock
or
cmc
dec
jo
xchg
sbb
dec
shrl
call
pusha
testl
lods
add
or
dec
lods
xor
jge
fcmovnu
jp
or
add
roll
mov
pop
aad
insl
inc
xchg
mov
rcl
xor
cmc
scas
movsb
mov
inc
and
sbb
dec
aas
dec
xorb
dec
lds
ffree
cli
mov
inc
sbbl
pushf
in
into
xor
or
jbe
push
push
int3
test
push
xor
fadds
cmp
out
xlat
inc
fistl
jno
jae
lret
test
and
stos
cltd
sub
mov
stos
inc
xchg
aad
enter
sub
popa
fwait
mov
enter
ret
in
aam
in
insl
push
shrl
imul
push
jl
sub
xor
bswap
gs
shlb
stc
sbb
test
call
imul
sub
sub
push
xchg
mov
ds
inc
dec
cwtl
mov
and
push
cmpsl
and
mov
mov
enter
dec
dec
idivl
mov
adc
add
mov
jge
sbbl
fisubrs
sub
stos
xchg
ljmp
pop
cmp
mov
xchg
adc
push
cmc
lods
inc
dec
scas
mov
sti
aaa
outsb
loope
xchg
mov
subb
xlat
outsb
pop
or
arpl
push
icebp
push
mov
mov
mov
hlt
jg
push
cmp
xor
mov
pop
xchg
js
inc
js
mov
jno
imul
mov
sub
jo
cmp
insl
sbb
sbb
or
pop
push
pop
mov
add
mov
out
mov
dec
in
sti
cwtl
pop
and
inc
mov
cmp
sarb
dec
push
stc
xor
sub
xor
add
xchg
xchg
dec
push
add
mov
mul
cmp
inc
mov
and
sbb
mov
cltd
mov
add
lods
xchg
pop
cs
nop
sbb
sbb
scas
aad
inc
sbb
sub
jg
setp
inc
int3
cmp
pop
mov
repnz
jae
mov
push
fisubl
outsb
fidivs
ret
test
ja
int3
push
icebp
dec
das
lods
dec
cmpsb
lret
sahf
popa
mull
sti
sub
sub
ds
movsl
test
xlat
pop
sti
mov
shlb
aaa
dec
stos
mov
mov
xlat
enter
add
jo
and
rcl
call
arpl
js
dec
adc
mov
sbb
ljmp
es
jmp
loopne
ficompl
outsb
xchg
mov
mov
insb
nop
inc
cli
add
scas
jne
mov
sbb
ds
pusha
add
sarl
test
push
sbb
les
cli
dec
mov
sbb
xor
cmp
pop
insl
out
mov
hlt
aam
xchg
mov
add
js
dec
xchg
inc
inc
mov
mov
sbb
pop
loopne
inc
mov
cmpsb
cmp
xor
bound
ljmp
loop
cmp
idivl
dec
popa
mov
xchg
sbb
dec
cmp
mov
pop
push
jmp
mov
push
je
sub
sbb
out
pop
inc
int
mov
lock
add
xor
inc
fs
push
add
jmp
es
movsb
cmp
outsb
and
jnp
ljmp
add
shl
mov
add
xchg
mov
js
jmp
rcrw
mov
das
bts
sub
fbstp
mov
icebp
jnp
loopne
pop
shrb
adc
add
es
hlt
xchg
imul
out
jae
ret
out
insl
sbb
push
outsl
push
dec
stc
adcb
push
or
aas
out
out
inc
inc
or
hlt
rorl
out
cmp
loopne
addr16
fdivrs
pushf
loopne
dec
inc
test
aaa
jecxz
push
dec
scas
mov
leave
push
cmpb
popa
daa
push
andb
fcompp
enter
cld
inc
pushf
jmp
sbb
cmpsb
push
mov
jnp
xchg
adc
sbbb
jb
mov
push
inc
xor
xorb
xchg
test
fildl
and
dec
sub
mov
push
adc
loopne
int3
fidivrs
jae
arpl
dec
push
out
pop
into
xchg
cmp
adc
push
in
jns
inc
mov
cwtl
mov
mov
mov
ret
mov
sbb
pop
dec
insb
test
pushf
adc
imul
push
shlb
push
push
xchg
mov
stos
sbb
sbb
cwtl
pop
mov
jmp
cld
xlat
add
push
cmpl
mov
enter
ja
lds
mov
pusha
mov
and
add
mov
inc
es
push
or
outsb
repnz
sub
jns
adc
inc
mov
int3
in
and
xchg
aaa
ret
dec
leave
jns
dec
sub
xorb
sub
dec
mov
pop
test
bound
subb
jo
popa
xor
dec
inc
out
add
test
aam
lret
push
xchg
inc
arpl
jns
test
mov
add
inc
fucom
jnp
addr16
push
arpl
cwtl
das
cmpsl
mov
pop
fdiv
push
fcompl
out
sub
in
jnp
fsubrp
repnz
jbe
std
mov
pushf
push
mov
sbb
test
outsl
mov
inc
xchg
push
lret
inc
popa
cmpb
dec
fwait
sbb
clc
push
in
cmp
jmp
pop
test
ret
dec
cmpsb
mov
js
into
in
test
int3
shrl
ja
int
sbb
sbb
add
mov
fidivl
jmp
inc
inc
xchg
cli
cmp
jno
sbb
sbbb
mov
mov
push
jmp
pop
cmp
or
jns
hlt
or
xchg
xor
cmpsl
xchg
sti
mov
jae
xchg
in
pop
call
dec
out
jnp
mov
test
xchg
pop
dec
das
js
insb
aaa
pop
out
lcall
out
xchg
cs
call
add
push
or
dec
sbb
insb
sub
je
dec
mov
pop
add
fisttpll
sbb
fdivp
lea
aad
push
cmp
mov
loop
jmp
int3
jne
pop
ds
jle
mov
test
push
xor
lahf
sub
leave
pusha
stos
out
test
out
popl
pop
mov
psrlw
adc
sub
xor
xor
adc
push
mov
shl
ss
imul
jbe
cmpsb
daa
mov
mov
add
stos
das
imul
mov
cltd
ss
jae
popa
aam
inc
and
stos
pop
and
pop
cmp
aaa
imul
cmpb
into
push
rclb
xor
out
cld
lcall
cwtl
mov
mov
mov
lds
loop
or
jecxz
jle
inc
mov
mov
popf
repz
loop
adc
xor
mov
xor
ret
movsl
sbb
adc
mov
sub
inc
leave
mov
sbb
je
addr16
jne
xchg
mov
xchg
or
lea
lods
and
adc
mov
inc
xchg
xchg
lock
outsb
push
lds
dec
dec
sbb
ds
cmp
nop
daa
lock
pop
insl
jnp
xor
es
lret
negb
inc
pop
dec
sarl
daa
or
fstl
icebp
sbb
jl
jno
and
outsl
gs
push
mov
cmp
cwtl
xor
test
push
mov
mov
pop
sbb
push
es
fistpll
adc
mov
aad
sbb
or
cmp
jnp
add
lcall
sti
clc
mov
xor
pop
popf
adc
daa
outsl
repz
push
clc
mov
sahf
jo
push
lods
cmpsl
xchg
or
mov
inc
mov
rclb
mov
jo
repnz
pusha
das
in
add
orb
leave
or
shll
es
sahf
mov
dec
scas
adcl
sub
dec
mov
pop
fdivl
je
push
in
push
popf
sbb
and
xor
addr16
pop
xchg
push
in
push
xchg
jae
mov
inc
mov
adc
aad
push
xchg
add
clc
mov
jg
and
cmp
pop
push
jae
out
mov
popf
in
xor
push
dec
call
mov
popf
mov
movsl
cld
pop
xchg
ret
imul
fstl
shlb
jg
rol
mov
add
jnp
sahf
mov
mov
das
icebp
xor
loopne
hlt
mov
push
sahf
loopne
gs
mov
in
cltd
arpl
jae
jecxz
out
std
push
in
push
sbb
insb
sbb
mov
imul
lret
ret
mov
and
es
lret
mov
enter
mov
pop
mov
or
xchg
and
arpl
int
mov
icebp
popa
clc
dec
loopne
mov
bound
negl
jmp
push
adcl
or
adc
cmc
fcompl
lcall
mov
mov
pop
das
test
out
or
jl
cmpsb
std
mov
sbb
pop
fs
xor
fimull
mov
das
cld
stos
adc
or
popf
mov
movsl
cld
ss
jne
jne
mov
and
pop
sub
sbb
aaa
or
push
sbb
sub
mov
inc
adc
nop
pop
push
sub
cmp
sti
sahf
xor
stos
mov
push
pop
lretw
bound
scas
dec
and
pop
sahf
and
mov
scas
xchg
xchg
insb
enter
cli
or
and
ret
mov
push
rol
xchg
ficoms
inc
or
mov
iret
lcall
inc
in
test
movsb
test
jb
jecxz
int
inc
cmp
xchg
jns
fldl
mov
mov
xor
mov
inc
jp
insl
out
pop
fists
leave
dec
or
push
mov
dec
push
movsb
mov
dec
cmp
lret
xor
int
inc
test
pop
rsm
and
push
in
xchg
cmc
pusha
cmp
cmpl
push
pop
jl
ret
outsb
add
xor
dec
aaa
mov
jbe
mov
xor
inc
xlat
jg
mov
shll
sub
mov
mov
pop
push
cmp
mov
inc
jge
jno
call
jl
mov
sub
dec
addb
xchg
sbb
xchg
push
imul
bound
arpl
or
or
and
jb
add
mov
in
flds
jns
loop
ror
jp
out
xchg
imul
pop
and
addr16
pop
pop
mov
shrl
call
inc
mov
mov
stos
pushf
inc
fcomi
cmp
movsl
ffree
inc
and
leave
in
loopne
push
out
adc
cmpsl
dec
adc
sti
push
and
mov
arpl
fistl
nop
or
or
movsl
mov
sbb
sbb
or
xchg
adc
and
je
and
adc
and
movsb
xor
insb
rclb
push
repz
mov
jp
xor
xchg
dec
loope
push
jecxz
cmp
lea
mov
loopne
clc
and
fimuls
pop
jp
xchg
mov
xchg
mov
int
sub
popa
fidivl
mov
sub
push
repnz
imul
int3
mov
mov
lods
push
dec
cmpsb
bswap
cmpsb
lret
fiaddl
xchg
clc
stc
fisubrl
fwait
bound
mov
push
xchg
lods
aas
popa
clc
jo
sbb
mov
cli
les
fsubrp
jg
aam
js
xor
sbb
ret
mov
xchg
stos
imul
cmp
in
jecxz
mov
xlat
iret
pop
cmpsl
rolb
xchg
jl
jge
xchg
or
orb
jecxz
imul
pop
inc
cmp
xchg
jno
cmp
bound
adc
lret
test
adc
out
cli
mov
test
sbb
fnsave
dec
gs
daa
xor
aad
sub
arpl
pop
lock
xlat
mov
ret
push
cmpsb
hlt
jnp
mov
out
aad
push
jg
jb
inc
fcoms
aaa
push
mov
xchg
xrelease
or
inc
sti
push
jmp
inc
cli
mov
push
dec
clc
jb
mov
inc
je
xchg
mov
dec
iret
xor
hlt
sahf
nop
xchg
out
xchg
cmp
pop
icebp
pop
jbe
imulb
stos
mov
push
in
std
push
xor
jmp
sub
addl
jl
pop
repnz
dec
lret
jnp
loop
mov
ficoml
sub
xchg
xchg
testl
hlt
movsb
sbb
aad
rcl
rcrl
mov
fldl2t
out
pop
dec
cmp
lcall
rolb
icebp
cmpsb
testb
jp
stos
stos
pop
adc
je
sbb
scas
mov
pop
stos
jmp
stos
and
xchg
jge
outsl
imul
scas
sub
mov
jecxz,pt
aaa
inc
jl
cli
sub
mov
mov
test
jno
mov
push
outsb
jle
sbbl
out
stos
mov
sbb
mov
push
jns
dec
cs
popf
outsl
inc
fnsave
sub
scas
xchg
fs
rorb
push
lock
call
dec
fnstenv
adc
nop
fsts
pop
add
call
adc
jae
gs
insb
sbb
hlt
cld
dec
push
loope
adc
pushf
leave
xlat
test
sbb
push
cld
mov
das
fbld
out
push
in
inc
lret
mov
sub
fxtract
cmp
cmp
outsl
pop
pop
mov
or
sbb
cmpsl
push
mov
sub
xor
sub
mov
inc
lock
mov
mov
xchg
adc
push
fidivrs
iret
sti
les
jecxz
jo
mov
add
in
ret
sub
ss
repz
repnz
popa
into
push
test
inc
sub
jns
arpl
cmc
push
fmuls
and
dec
mov
call
and
out
call
mov
inc
xlat
outsl
into
rcl
decl
out
dec
inc
ljmp
mov
cmp
mov
sahf
lea
jmp
outsb
out
xchg
insb
inc
ja
gs
mov
ret
mov
test
fbstp
xor
mov
notb
jmp
push
mov
mov
into
push
lods
repnz
push
insl
stos
sahf
lds
pop
or
iret
cli
cltd
push
out
into
mov
hlt
push
roll
sbb
cmpsl
outsb
test
mov
push
sub
pop
xor
sub
adc
or
adc
xchg
inc
fidivrs
out
dec
dec
jmp
movsl
insl
ss
mov
loop
sbb
and
push
push
inc
shlb
lds
sarb
cmp
adc
xchg
or
pusha
cli
lahf
pop
mov
jns
jge
mov
pop
lret
ss
xlat
cli
lcall
out
inc
arpl
cmp
and
cmp
addl
dec
jl
mov
aas
roll
jo
aam
das
mov
add
pushf
stos
jl
and
popf
push
push
ja
cmpsl
push
and
testb
pop
mov
enter
add
or
adcb
rcl
loopne
iret
mov
mov
push
push
pop
push
stos
mov
mov
mov
dec
xor
inc
jae
mull
bound
les
sub
or
sbb
outsl
mov
mov
cmp
int
mov
hlt
pop
aad
or
xor
push
lods
cmp
mov
mov
jns
inc
ret
fnstcw
dec
pop
pop
xchg
aam
cmp
xor
and
xor
push
sbb
aad
and
sbb
inc
push
mov
idivl
aam
jne
inc
inc
in
daa
das
popa
fiaddl
lret
test
jns
rorb
mov
add
mov
jne
xchg
outsb
push
pushf
mov
shr
pop
out
sahf
out
sub
adc
mov
fimull
sbb
ds
lock
jbe
or
fcomp
dec
shr
test
pusha
shr
xchg
xchg
sbb
mov
mov
mov
sbb
int3
in
sub
or
mov
das
faddl
cmp
pop
or
ja
mov
in
popf
inc
cli
pop
pop
fwait
fisttps
mov
jne
leave
lcall
outsb
mov
push
adc
gs
das
mov
cmp
orb
fisttpll
and
push
add
stos
lods
das
dec
test
lea
jb
sbb
dec
mov
add
inc
jg
push
loop
pop
push
jne
cmp
mov
pop
cmpsb
push
cmp
adc
movb
clc
sub
imul
and
push
sub
in
bound
jns
mov
shlb
pop
xor
push
test
and
xor
and
aam
lahf
cmc
sbb
repnz
mov
in
cwtl
cs
inc
fcomp
xchg
xor
adc
test
adc
addb
cltd
sub
or
das
push
pusha
outsl
fcmovnb
js
lea
cmc
call
mul
fcmovbe
mov
sub
jnp
in
arpl
inc
call
jne
inc
cmp
movsb
in
fs
mov
into
push
into
imul
popf
lcall
sbb
rcr
jns
mov
pushf
mov
adc
and
mov
std
jmp
mov
insb
adcb
mov
js
stos
or
loope
adcb
repnz
push
nop
lret
outsl
cli
in
xchg
push
shll
fsubs
pop
mov
jae
mov
testl
hlt
dec
and
lods
inc
push
enter
ret
inc
fdivp
sbb
aam
popa
fsubr
iret
lahf
xor
push
mov
pusha
jbe
fdivrs
xchg
mov
sub
mov
dec
or
sbb
mov
cltd
data16
push
adc
ljmp
mov
das
shll
lds
pop
jp
mov
xor
pop
adc
xchg
fsubr
test
mov
or
iret
andl
lods
jg
cmc
insl
sub
loop
rclb
outsb
xchg
inc
movsb
xchg
cmpsl
cmc
js
mov
jo
js
mov
xor
lret
xor
jecxz
in
jmp
adc
lods
mov
ret
inc
add
and
sbb
fistpll
push
aad
cmpsl
cli
cmp
popf
pop
cmp
cmp
rcrl
getsec
xor
jno
fldenv
mov
mov
jns
xchg
out
lret
lods
fucomi
cmp
cmpsb
aad
push
jmp
or
and
mov
out
push
xor
push
or
lods
mov
dec
inc
fstpt
insl
fs
clc
loopne
cmp
or
aaa
call
mov
xchg
add
hlt
xor
or
mov
mov
ljmp
inc
addr16
js
out
inc
jmp
enter
scas
push
add
dec
pushf
daa
leave
xchg
cmp
inc
testb
fsubrl
movsb
mov
lds
icebp
fcomp
push
and
nop
push
pusha
cmp
rcrl
cmp
jae
test
fwait
xor
adc
mov
scas
mov
push
adcl
jmp
xor
xlat
mov
push
mov
rdseed
popf
jne
sub
andb
adcb
pop
pop
jno
and
shrl
pop
xlat
imul
or
jno
stos
loop
push
or
mov
and
inc
jecxz
mov
fs
lods
int3
in
mov
or
ret
or
lock
and
pop
mov
imul
outsl
add
adc
pop
xor
xor
lahf
dec
lods
js
lds
int3
sub
pop
pop
mov
lcall
in
inc
push
rol
pusha
ret
movsb
insb
and
in
mov
dec
jo
cmp
out
pushf
or
inc
sub
sbb
ret
jmp
int3
or
lea
add
lods
aaa
mov
xor
add
popa
xchg
inc
shl
push
subb
idivb
pop
pop
out
mov
cmp
and
jg
mov
add
cmp
cltd
hlt
add
ds
pusha
jg
sbb
cmp
pop
cmp
or
shlb
lods
fldl
xchg
sbb
sub
cmp
or
mulb
cmpsb
nop
inc
mov
mov
sbb
xor
bound
push
mov
mov
std
xchg
out
loopne
out
jmp
sub
jns
xchg
in
push
xchg
mov
dec
call
dec
lcall
add
sub
cwtl
daa
mov
loop
scas
arpl
lock
pop
fsub
push
adc
and
lods
xor
jle
iret
cli
sub
pop
popl
mov
insl
sub
mov
xchg
ljmp
fwait
xchg
mov
stc
mov
push
lea
imul
xor
or
movl
lods
fdivrl
xchg
add
das
xchg
in
dec
push
xchg
xor
sub
push
paddw
add
add
mov
fsubs
pop
aad
notb
cmp
fs
add
inc
cltd
push
lret
mov
jns
daa
filds
mov
lret
jp
lahf
pop
in
xor
push
dec
mov
mov
adc
testb
andl
pop
out
adc
ret
mov
mov
ret
push
mov
imul
int
xchg
mov
pop
add
dec
mov
jl
cmp
cmp
les
mov
jle
mov
out
push
mov
jg
mov
inc
fcmovnb
jmp
stc
loop
xor
mov
adc
stos
mov
fdivrl
hlt
fiaddl
pusha
arpl
mov
addr16
leave
ss
sub
int
shlb
out
cld
or
in
xchg
mov
shll
fildl
pop
add
push
fcmovnu
bound
rclb
iret
ljmp
test
or
scas
push
inc
into
aad
mov
mov
bound
xor
pushf
and
mov
sti
mov
shrb
mov
cmp
add
leave
add
push
sub
stos
out
movsl
jp
out
das
jl
inc
sub
test
dec
mov
stos
xor
lock
ja
pop
stc
je
xchg
xchg
mov
mov
inc
outsl
jmp
pop
and
mov
std
pushf
cs
pop
lods
cmp
test
xor
push
lods
push
into
xchg
out
stos
xor
pushf
xor
jnp
lcall
xchg
push
sub
mov
daa
fsubr
lcall
jp
pop
in
adc
daa
push
push
jae
fs
test
mov
add
adc
push
shrb
pusha
cmpsl
inc
lret
cwtl
push
mov
dec
adc
mov
jl
in
rorb
orl
loope
mov
repnz
cmpb
xor
push
or
mov
ret
pop
cmp
je
adc
repz
xor
cltd
ja
mov
cmp
pushf
repnz
int
mov
push
in
push
ja
adc
add
cmp
imul
into
stos
cmpl
and
xchg
sub
out
std
xchg
mov
stc
insb
dec
mov
decl
push
jno
inc
xchg
xchg
or
movsl
xor
pop
loope
fsubl
add
add
sbb
pusha
test
add
fwait
popw
in
pushf
and
mov
fimuls
out
fcoms
push
sub
inc
popa
addl
hlt
int3
out
clc
dec
scas
das
dec
popf
aad
cmp
mov
clc
pop
sub
mov
cmpsb
cmp
lods
insl
mul
insb
daa
test
push
push
mov
sbb
xchg
mov
es
into
in
std
lret
or
rorl
out
mov
mov
out
cmp
and
mov
mov
jp
pop
pop
push
cmpsb
mov
add
inc
popa
pushf
pop
adc
pop
inc
lea
jns
mov
pcmpgtw
mov
cmpsl
push
push
scas
mov
push
int
inc
loopne
fdiv
fidivl
mov
adc
test
inc
cld
int3
rolb
repz
pushf
clc
jmp
cld
mov
sbbl
inc
lods
aas
xchg
sub
jle
push
pop
xor
mov
insl
sahf
inc
je
test
xor
dec
and
mov
inc
add
mov
std
jg
inc
lods
mov
leave
and
rcl
aas
lods
lods
jnp
insb
push
loopne
setbe
cmp
fsubrl
fdivrs
lods
test
adc
push
rclb
mov
sarb
adc
inc
pop
arpl
pop
fwait
mov
in
xchg
loope
or
xor
outsl
imul
dec
or
xor
insl
cmpsl
ds
pop
lcall
lds
in
push
gs
daa
add
jb
xchg
lea
dec
lahf
cmp
xchg
add
sahf
dec
add
fwait
or
and
push
icebp
clc
inc
push
gs
pop
in
xchg
scas
fnsave
pop
and
mov
imul
mov
jl
dec
bound
fisubs
or
arpl
sub
inc
xchg
pop
xchg
enter
mov
lahf
in
xor
mov
sbb
testb
add
inc
lahf
dec
inc
pop
mov
addb
mov
adc
aad
mov
dec
jns
cs
insb
incb
gs
into
gs
xor
sbb
dec
mov
sub
jp
shlb
ja
mov
fdivs
aad
sub
loope
pop
xor
sbb
fucom
push
lret
xlat
mov
push
sbb
mov
mov
cmpsl
xor
xchg
fmul
mov
and
sbb
subl
scas
xchg
pop
mov
inc
dec
hlt
cwtl
jns
mov
xor
adc
mov
adc
xor
mov
andb
jae
pop
mov
adc
sub
cmpsb
sbb
loope
dec
call
cs
hlt
pop
cmc
fs
sbb
cld
push
xor
loope
and
push
fwait
push
jle
add
pop
mov
push
popa
adc
movsl
iret
shr
add
pop
sub
call
aam
adc
lock
xor
fstl
mov
enter
xor
out
mov
cmp
push
ss
jne
test
jbe
cltd
movsl
lret
ja
and
cwtl
movsl
xchg
mov
jg
js
sub
roll
mov
addb
cmp
xlat
jp
push
frstor
pusha
loope
call
out
push
dec
cmp
xor
call
pop
lods
push
popf
cmovns
cmp
mov
jne
or
push
sub
loop
dec
inc
dec
ret
scas
add
sbb
xchg
sub
mov
ror
mov
push
push
sub
je
mov
adc
mov
in
out
add
test
cmp
mov
in
inc
in
cmc
lahf
adc
lods
jnp
xchg
and
fstpl
and
sbbb
add
repz
loop
push
sbb
dec
aas
dec
fcomip
out
mov
inc
mov
test
xchg
xchg
push
ss
sbb
fnstenv
sbb
dec
mov
pop
jo
rol
repz
xor
cltd
mov
loope
popa
jge
add
pop
xor
add
adc
xchg
pop
or
call
int
data16
jb
push
jmp
xchg
aas
sbb
or
mov
lods
lods
filds
fldenv
xchg
imul
jecxz
pop
jno
inc
repz
push
lods
and
lret
jg
fwait
out
push
inc
push
jmp
fisttpll
in
fwait
ret
add
jno
jnp
imul
mov
lods
or
pop
and
cmp
outsl
adc
mov
jno
sub
sub
imul
je
fimuls
cs
add
push
cwtl
data16
int
sub
icebp
or
jne
xor
push
push
sub
icebp
adc
xlat
push
aam
mov
imulb
jmp
shlb
and
ja
cli
out
ss
in
iret
sub
add
testb
rclb
mov
jle
add
mov
inc
jg
add
repnz
push
dec
decl
divb
inc
fcoms
cltd
adc
jno
jge
and
test
iret
fldenv
and
icebp
or
push
xor
xor
push
and
push
inc
cli
xchg
jbe
cmpl
sub
nop
xor
dec
xchg
lcall
jo
frstor
inc
xlat
mov
mov
xor
jp
mov
mov
loope
lret
insb
add
lret
cmp
jns
push
jne
xchg
pop
jbe
cs
jmp
loope
shlb
inc
jle
je
xchg
cmp
aam
sub
mov
arpl
js
es
fwait
rcrl
and
fstl
lcall
mul
mov
inc
sub
ds
mov
cmpsl
shrb
mov
sarb
dec
xchg
pop
dec
dec
fsts
cmp
arpl
mov
push
lods
jb
xchg
into
sbb
lds
or
add
test
push
aas
dec
adc
cmpsb
jmp
ss
ljmp
push
mov
mov
int
dec
mov
push
adc
aam
into
rorb
dec
das
add
sbb
imul
or
push
mov
mov
test
dec
cmp
out
jg
pop
jg
dec
mov
mov
subl
xchg
inc
mov
and
xchg
into
enter
pop
insl
ss
inc
fsubs
mov
sti
jle
pop
testb
data16
insl
add
hlt
jle
stos
cs
and
dec
mov
jmp
nop
or
pop
in
loopne
xchg
sbb
rorl
add
sbb
lret
shrl
call
push
inc
in
addr16
aas
jnp
ficompl
xchg
lods
push
dec
lods
and
fisttpl
lahf
xor
mov
add
pop
and
scas
adc
sub
stos
insb
jae
cmpsb
lahf
inc
push
stc
cmp
stos
or
fistl
push
js
bound
scas
mov
xor
or
add
and
sahf
pop
loop
fdivp
mov
movsb
xor
data16
mov
jno
mov
repz
jne
lret
cmp
sbb
sub
nop
mov
mov
int3
or
pop
xor
out
push
call
and
push
sub
arpl
mov
push
xchg
cmp
fnstcw
or
subl
cwtl
stos
movsl
testl
pop
pop
mov
cs
test
fildll
adc
add
xchg
jle
scas
dec
fldenv
fstl
jb
and
xor
gs
ret
cltd
xchg
fcompl
ss
ljmp
call
data16
test
pop
jle
sub
in
inc
lds
cmpb
xor
inc
push
jbe
dec
adc
add
inc
repnz
aas
sarb
push
push
and
movsl
fsubl
in
pop
cmc
lret
push
icebp
popa
adc
sub
jb
and
jb
jb
in
and
filds
push
inc
mov
fisttps
mov
mov
sarl
mov
repz
insb
popa
andl
cld
xchg
jne
add
jmp
icebp
add
mov
fdivl
xlat
shlb
inc
xchg
adc
jns
mov
lock
sub
mov
into
repnz
xlat
fistl
push
mov
cli
xor
mov
mov
mov
jge
cmpsb
iret
enter
jecxz
cmc
stos
inc
in
imul
sbb
mov
cmpsl
gs
push
fcomps
fidivs
add
test
ja
cmp
and
ffreep
fstl
pop
jno
loop
xor
clc
xchg
jl
mov
jns
js
pop
xor
pusha
call
adc
push
das
cmp
fs
mov
jns
in
stos
inc
dec
pop
adcb
push
dec
loop
imul
xor
stc
jge
js
xchg
fstpt
inc
leave
push
lock
fldt
fbstp
daa
outsl
stc
lret
mov
sbb
es
or
scas
sub
cwtl
lcall
js
es
adc
addb
add
sahf
adc
popf
add
dec
xchg
or
cmp
xchg
inc
inc
push
in
shr
scas
xchg
andl
decb
leave
mov
clc
jne
in
out
mov
mov
sbb
pushl
test
jne
fs
repz
sub
stc
pop
xor
scas
adc
inc
xchg
xchg
push
inc
cmp
addr16
mov
jae
cmp
fidivrs
fldz
into
push
and
xchg
add
into
aad
mov
cmp
dec
xchg
push
int
shl
or
adc
push
dec
xchg
xchg
add
cmp
xor
in
sbbl
lds
inc
mov
jnp
push
ret
adc
test
mov
push
icebp
jnp
fbstp
outsb
sbb
adc
shrl
mov
insl
adc
nop
mov
mov
and
loope
mov
in
repz
push
aam
and
pop
outsb
lds
add
loope
mov
mov
imull
das
notl
pop
mov
add
mov
inc
inc
cmp
lods
dec
jle
push
mov
cmc
mov
xlat
cmp
lea
jne
cmc
imul
repz
nop
adc
inc
cmpsb
cmp
mov
pop
dec
pop
cmp
out
test
in
mov
mov
xor
push
sbb
adc
push
sbb
std
jns
nop
push
xchg
adc
xchg
pop
shl
inc
mov
cmp
negb
ss
xor
jmp
out
movb
mov
jb
or
sahf
push
mov
xor
inc
movd
push
and
cmp
add
je
out
push
mov
jne
mov
pop
ds
mov
mov
cmp
lods
outsl
push
ljmp
int
es
or
mov
aad
and
pushf
outsl
add
and
icebp
loope
sahf
je
or
dec
stos
test
xlat
inc
in
xlat
rorb
push
mov
ss
push
rorb
mov
push
ret
arpl
mov
clc
cmp
leave
mov
mov
jl
addl
cs
repnz
leave
xor
addr16
push
push
sub
xchg
outsb
test
adc
jo
push
call
mov
sbb
lcall
and
jns
mov
mov
repnz
jl
es
movsl
inc
lock
mov
dec
sbb
daa
stc
aas
movsb
aam
jb
mov
fstpl
xchg
leave
fstps
mov
insb
aam
sub
or
in
pop
popa
and
movsb
cmp
test
out
mov
pop
aas
fidivrl
leave
test
xchg
hlt
cmp
pop
ljmp
push
mov
mov
ja
inc
adc
add
mov
jb
sub
pusha
ja
test
orb
push
xchg
mov
xchg
cmp
dec
mov
sub
popa
sbbl
cmp
pushf
dec
dec
add
repnz
sbb
mov
xchg
inc
jecxz
aaa
push
sarl
and
out
sbbb
addb
lods
pop
xor
pop
int
mov
les
or
imul
sbb
adc
imul
jnp
inc
fs
popf
dec
push
mov
mov
sbb
xor
mov
clc
pop
jne
sbb
xor
int
in
outsl
jge
aaa
xor
xchg
pop
add
mov
cmp
into
mov
xchg
sub
add
dec
mov
lea
movsb
mov
add
mov
dec
fnsave
pushl
lock
insb
cli
xchg
jge
dec
outsl
icebp
lea
daa
inc
push
mov
add
cmp
rcrb
pop
cmp
jno
int
in
lahf
popa
add
testb
xchg
inc
aad
fbstp
fdivrs
push
or
js
ljmp
and
pop
arpl
push
bound
push
int3
cltd
pop
jnp
push
lock
fwait
adc
cmp
mov
or
inc
stc
popf
out
adc
jle
daa
jmp
push
js
cmp
icebp
bound
dec
and
loope
jl
mov
xor
daa
and
jnp
dec
orl
aas
in
fdivs
and
sti
mov
add
outsb
push
bound
movsl
mov
xchg
push
mov
inc
cld
xor
xchg
mov
cmp
mov
mov
fwait
popa
mov
mov
jns
mov
sbb
and
pop
sahf
pop
rcll
push
adc
movsl
jl
sbb
in
push
pop
out
dec
addr16
lcall
repz
push
dec
xorps
dec
outsl
daa
cltd
lods
inc
mov
xor
fs
jg
dec
ja
lret
ja
xchg
fwait
jno
add
pop
sbb
mov
and
lahf
ss
dec
mov
push
cmpsl
aas
ret
xchg
sbb
insl
arpl
mov
popf
movsl
jmp
or
ljmp
mov
mov
mov
popa
cwtl
mov
out
inc
movsb
pop
xchg
lret
dec
pop
add
and
jns
nop
mov
jle
lods
mov
dec
adc
sbb
cltd
lock
stos
jbe
outsl
or
adc
fisubrl
out
nop
inc
pop
adc
dec
push
cli
xchg
imulb
rclb
scas
and
mov
icebp
mov
xchg
aam
inc
adc
out
sahf
lods
adc
jne
outsb
rcrb
mov
mov
rcll
les
ret
mov
stc
test
mov
jmp
sbb
in
sbb
pusha
stc
je
test
xchg
and
jmp
repnz
ds
scas
add
mov
adc
sbb
cli
push
cld
dec
inc
add
dec
mov
fdivrs
mov
clc
and
cmpl
xchg
xchg
es
pop
loopne
adc
jl
daa
mov
addb
insl
stos
mov
cs
mov
ret
xor
mov
cltd
stos
pop
or
mov
dec
loopne
rorb
cmp
and
fwait
stc
push
leave
sub
pop
add
mov
or
mov
xlat
mov
filds
cmc
push
sub
cld
pop
jbe
xchg
shl
lods
vshufps
in
rcrl
cmp
mov
xor
int
imul
jo
cmpb
dec
cmpsb
out
adc
pop
xlat
out
popa
and
xchg
mov
mov
ljmp
xorl
int3
in
push
fiaddl
shlb
js
fbstp
or
jnp
leave
xlat
push
cmp
sub
mov
xor
push
inc
lcall
cwtl
xor
dec
add
cmc
js
sub
shr
insl
xchg
sub
in
add
jmp
fstps
mov
lods
hlt
aad
movsl
push
add
aam
cmp
loope
push
dec
aad
push
out
dec
pop
sub
ljmp
mov
push
mov
pop
xor
adc
dec
sbb
lods
push
lods
ss
jl
cmc
pop
lock
jb
or
adc
xor
push
sub
invd
stos
cmc
push
out
call
mov
lret
sbb
pop
lds
popa
and
jnp
mov
or
inc
adc
aaa
push
mov
dec
adc
jnp
sbb
aam
shl
adc
in
test
mov
jbe
data16
or
adc
sub
fstpl
fldz
pop
outsb
mov
fimull
push
push
mov
rcrl
mov
adc
insb
popf
cmp
aaa
cld
mov
jne
ret
mov
mov
mov
mov
pop
mov
hlt
and
or
jns
cwtl
sub
push
js
lods
lret
aam
fdiv
fnstenv
mov
xchg
shrb
hlt
mov
andb
push
and
add
ds
idivl
dec
repnz
push
mov
adc
xchg
fnstenv
scas
stos
imul
loop
xchg
pop
mov
lret
les
arpl
push
aad
pushf
mov
and
cmp
or
mov
xchg
dec
lret
aam
jmp
loope
or
jno
push
scas
dec
adc
pop
and
jl
jl
sbb
sub
lock
adc
ret
cltd
xor
and
xchg
cmc
aaa
in
test
shr
push
mov
sti
push
adc
inc
jge
pop
mov
mov
fsin
popf
mov
or
sbb
jne
fnsave
jg
std
xchg
sti
xchg
stos
popf
out
dec
iret
int3
push
loopne
fmull
hlt
dec
lods
xor
fsubrs
enter
scas
call
push
dec
inc
fnstsw
popa
mov
add
or
fstpl
cmp
mov
das
aam
int
sub
outsb
sub
ljmp
inc
pop
or
jae
sbb
push
jge
cltd
das
mov
nopl
push
cmp
sbb
cmp
fcom
xchg
sub
les
js
dec
pop
rcll
repz
std
push
insl
sub
and
mov
jecxz
mov
mov
xor
dec
adc
nop
lods
push
test
jo
stos
repz
cmp
jne
or
fnstsw
mov
aas
xchg
pop
imul
inc
pop
hlt
mov
outsb
loopne
ret
xchg
pusha
testl
adc
stc
push
cwtl
inc
mov
pop
ret
sub
pop
inc
jmp
imul
xchg
fistps
sbb
push
mov
cmp
fnstcw
divb
xlat
test
push
or
sub
fcmovnbe
shlb
mov
test
imul
fimuls
dec
adc
mov
vhaddpd
loope
pop
aad
mov
je
out
lods
sbb
dec
push
mov
xorb
xchg
jno
insb
in
jae
jmp
or
jmp
sarl
sti
test
jo
lds
lea
fdivp
nop
dec
mov
pop
stos
fisttpl
xor
jg
shr
push
pop
mov
cwtl
jge
pop
xor
add
cmp
add
jae
jb
add
push
popf
ljmp
mov
addl
mov
cmp
outsl
and
rcrl
std
mov
add
adc
lea
mov
lret
xchg
add
inc
cmp
in
xor
je
xor
mov
add
es
cli
xor
fdivr
fisubrl
lret
call
mov
push
aaa
cli
shll
dec
dec
hlt
push
mov
ficompl
clc
sahf
pushf
shlb
mov
mov
int3
fdivp
cmp
nop
adc
fwait
arpl
outsb
pop
cmc
adc
jl
lock
inc
inc
lea
and
push
dec
push
push
jp
pop
mov
nop
fs
into
mov
aas
cwtl
out
inc
fwait
movsl
stc
lds
sub
xor
popf
fwait
push
dec
pop
test
cmpsb
call
cs
std
lcall
in
push
mov
testl
enter
btr
pop
das
dec
pusha
popa
cmp
aaa
ss
mov
dec
adc
pop
adc
popa
ret
jae
jp
fucomp
mov
test
push
mov
jb
sbb
cmpsl
inc
xor
jmp
out
cwtl
sub
lret
xor
pushf
xor
mov
rcrl
insb
jge
data16
fwait
push
shrb
adc
xor
pop
outsb
or
in
adc
ret
jl
pop
repz
jle
inc
sbb
sub
mov
cmpsl
add
adc
xchg
inc
leave
int
gs
hlt
jg
jmp
mov
in
pop
fcoms
xor
push
sub
jns
stos
pushf
fsubrl
into
and
pop
repz
nop
andl
xchg
sbb
das
ds
mov
lds
fwait
add
and
jmp
jp
cmp
xor
inc
aad
sub
jmp
jp
jae
mov
pusha
mov
test
sarb
jl
jecxz
pop
pop
test
inc
push
out
sti
push
fs
ljmp
lods
icebp
or
adc
xor
inc
das
mov
out
in
sbb
in
ja
rolb
cmp
add
jnp
movsb
je
sbb
outsl
pop
cmc
decl
pop
cmp
cmp
mov
add
fadd
rolb
xchg
xchg
pop
clc
xor
push
std
pop
push
js
movsb
iret
loopne
mov
movsl
loop
jmp
rcl
aam
add
dec
cmc
lock
push
lods
iret
fwait
xor
nop
xchg
scas
lods
lahf
out
dec
mov
lahf
jg
inc
and
cmp
ljmp
xor
iret
les
sub
push
mov
js
negb
and
lods
aaa
add
scas
dec
push
jne
out
popa
pop
mov
xor
and
scas
push
push
xchg
cld
adc
rorb
jns
cmpsb
les
xchg
xchg
lods
dec
bound
inc
pop
or
mov
mov
mov
shrl
inc
mov
cmc
rolb
cmpsl
outsb
rcrb
pop
mov
mov
pop
out
fadds
push
lds
or
stos
aaa
jl
jmp
xchg
pop
in
mov
adc
cld
shl
xor
shll
rorb
mov
mov
pop
scas
hlt
stos
mov
xor
ret
repz
xchg
xchg
adc
push
cmp
clc
movntq
out
xor
call
or
repnz
xchg
shlb
adcb
test
or
xchg
jg
xor
ficoml
leave
and
xchg
cmc
aaa
stc
jge
movsl
cmp
push
dec
mov
cltd
xor
cmp
imul
imul
outsl
repnz
xor
cmp
scas
cwtl
cmpb
les
mov
pop
icebp
xor
std
ret
mov
repnz
mov
int
pop
mov
fcomi
cmp
mov
repz
fcompl
pushf
aam
sbb
push
dec
mov
jne
jecxz
std
stos
das
cld
push
aam
test
xlat
xchg
rol
cmpsl
je
mov
testb
xor
pop
push
inc
sbb
lret
popa
movsl
mov
push
pop
call
inc
xchg
inc
mov
push
ret
out
dec
xor
test
cli
mov
mov
insb
dec
scas
lods
enter
jp
les
jo
mov
data16
dec
mov
mov
stos
mov
push
fdivrl
rclb
push
push
mov
popf
subl
fwait
int
cmpsl
ja
or
add
inc
mov
testl
add
pop
inc
adcb
xlat
out
sar
inc
mov
out
fs
aas
push
mov
fists
pop
push
sbb
out
enter
sbb
hlt
mov
jbe
adc
adc
inc
dec
and
outsb
jb
mov
loope
mov
sahf
push
jmp
xor
call
push
out
cwtl
mov
push
adc
test
pop
mov
cld
jnp
xor
pop
xor
cmp
insl
sbb
insl
sbb
pop
jnp
push
dec
imul
retw
lock
mov
mov
nop
push
scas
out
mov
leave
scas
sbbl
sbb
adc
adc
frstor
shl
push
xchg
xor
jnp
mov
mov
outsl
pushf
dec
and
int3
xchg
loop
nop
loope
and
lahf
push
pop
mov
jns
jo
ss
lret
mov
mov
icebp
leave
add
mov
rcrl
xlat
ret
cmpsb
cmp
mov
loopne
xchg
sub
inc
aaa
mov
out
test
pop
sti
adc
fisttps
popa
push
test
mov
daa
movsl
cmp
push
vmovsd
adc
les
xor
pop
xor
sbb
inc
xchg
scas
xchg
out
sbb
movsb
aam
sub
dec
fcomps
xchg
adc
in
xchg
sub
addr16
jae
in
fistps
jmp
adc
dec
in
fs
out
cmp
sub
int3
mov
sarb
add
add
lea
jl
aam
das
divps
ds
repnz
pop
andl
lcall
cs
lods
movsb
jb
divb
cmp
out
inc
cmc
dec
dec
icebp
out
push
outsl
pop
inc
sti
jb
imul
and
push
mov
push
pushf
mov
xchg
lock
outsb
sahf
scas
outsl
lods
lret
imul
jecxz
mov
mov
loopne
mov
pop
mov
mov
mov
mov
pop
adc
nop
ret
out
insb
jge
dec
xor
cmpb
sub
mov
xchg
imul
jle
xchg
xchg
outsb
dec
shlb
push
mov
cmpsb
sbb
push
cmp
lcall
adc
addr16
pop
lods
mov
and
cmpsl
test
fsts
dec
loopne
pop
std
push
mov
into
inc
cmc
sti
lret
dec
push
mov
jno
push
pop
mov
dec
mov
rolb
ret
addr16
fwait
js
inc
cli
leave
sub
cltd
js
movsb
fistl
js
cmp
ja
sub
in
leave
mov
and
out
xchg
lds
jo
dec
or
popf
into
mov
and
shlb
and
fs
jg
push
and
cmc
ficoml
mov
rcrb
shrb
dec
fbld
adc
jae
inc
xor
cmpsb
push
or
mov
adc
rorl
pop
jmp
data16
or
stos
jle
popf
xor
add
cwtl
test
mov
dec
or
cmc
add
ds
and
xlat
and
addr16
stos
inc
lds
jl
popa
enter
cmc
adc
push
inc
add
mov
test
stos
dec
nop
xchg
stos
inc
cmpsl
fwait
aam
inc
loope
jb
imul
imul
fimuls
sarl
ficoml
popa
clc
out
adc
rorl
bound
shl
dec
inc
or
push
push
pop
mov
sub
mov
lcall
mov
pop
mov
outsl
ja
shl
jnp
insl
jb
push
sub
ss
jecxz
fimuls
mov
cmp
or
xor
imul
arpl
inc
dec
or
pop
call
mov
out
cmpsl
add
push
sbb
loopne
push
pop
shll
cmpsb
lock
cmp
gs
mov
lods
imul
sbb
call
pop
out
outsl
add
pop
adc
mov
inc
mov
imul
xlat
mov
movsl
test
dec
cmpsb
sub
pop
mov
push
mov
mov
inc
mov
mov
xor
lcall
mov
ljmp
repz
xor
lret
mov
fdivl
dec
ficoms
mov
outsl
lret
shrb
add
xor
mov
lods
out
je
out
outsl
pushf
cmp
pop
outsb
jl
adc
loop
dec
fbstp
pop
data16
pop
push
imul
dec
lock
clc
mov
mov
icebp
mov
xchg
lret
jbe
push
jbe
xchg
scas
inc
leave
add
mov
popa
aam
cmp
sub
mov
cmp
pop
or
mov
add
enter
in
jbe
xchg
mov
xchg
pop
hlt
enter
cld
addr16
push
push
shlb
std
mov
cmp
pop
jo
lods
jae
bound
outsl
xor
cmc
pop
imul
subl
inc
data16
dec
loope
sbb
pop
lock
movsl
mov
insb
mov
xor
pop
ficoms
add
popa
out
fsubrs
xchg
pop
ret
sub
xchg
push
jle
jl
sub
mov
cmp
imul
ret
xlat
cmp
mov
mov
mov
in
rcll
lods
in
int
cld
inc
ljmp
loope
mov
jle
mov
out
ja
pop
adc
mov
push
aad
push
shlb
dec
insl
mov
adc
in
adc
jge
arpl
dec
pop
mov
cmp
shlb
inc
inc
leave
dec
dec
push
mov
push
out
cmpsb
fdivrs
push
mov
sub
cmc
jnp
in
mov
into
rcl
lret
test
push
add
adc
add
jp
movsl
pop
sbb
and
add
in
into
gs
mov
ret
hlt
xchg
push
movsb
add
es
popa
imul
lods
in
sbb
push
movsb
dec
push
push
mov
leave
std
sar
imull
dec
mov
scas
sub
subl
push
fdiv
pusha
test
ret
pop
popa
push
jb
les
cmc
jne
mulb
arpl
add
cwtl
shrl
sub
mov
rclb
mov
cmp
stos
sarl
enter
or
cmp
gs
test
ds
pushf
scas
inc
push
into
les
and
in
cmpl
or
or
rcll
fisubl
push
dec
ds
sbb
jb
mov
sub
and
test
pop
jg
push
dec
xor
pop
mov
bound
stos
sbb
push
imul
mov
cs
imul
cmpsb
ret
cmpsl
push
stos
mov
fnsave
dec
inc
pop
divb
pop
xchg
mov
jle
sbb
pusha
test
xchg
cmp
shl
aas
mov
cwtl
push
fwait
stc
inc
cli
out
aaa
mov
jns
js
jnp
in
rcrb
dec
shl
in
popl
mov
dec
sbb
mov
push
loopne
les
ds
outsb
and
inc
lods
or
mov
cli
cmp
rcrl
mov
pop
mov
into
xor
adc
mov
and
jae
jno
pop
and
mov
cld
mov
push
jmp
insb
xchg
jo
jns
cmc
jo
rorl
ds
sbb
inc
cmpsl
xchg
jecxz
dec
enter
test
lods
mov
adc
sbb
xchg
mov
mov
and
test
mov
addr16
repz
jno
fnstenv
fdivl
je
adcb
push
insl
or
mov
movsb
negb
mov
jns
dec
sub
xor
in
rorb
pop
lods
int3
push
or
in
daa
mov
in
dec
ret
sbb
xor
add
sub
das
xorb
clc
jns
icebp
mov
and
jp
sbb
enter
push
fistpll
mov
pop
adc
sub
mov
xor
xor
sar
add
jmp
pop
lahf
sbbb
pop
dec
sub
test
push
mov
imul
pop
repnz
or
es
les
pop
sbb
sub
dec
mov
inc
sub
and
in
push
outsl
inc
sub
xor
fxch
mov
mov
cld
pop
outsl
pop
push
push
movsl
repz
loopne
cmp
incb
mov
and
push
icebp
mov
dec
mov
push
or
jecxz
js
stos
jno
and
cli
mov
pop
xor
sbb
mov
pop
mov
cltd
sub
jl
je
decb
les
or
jle
lock
push
out
sbb
pop
lock
adc
jecxz
repz
mov
adc
add
sub
es
or
insb
inc
into
xchg
rcl
loope
pusha
dec
in
mov
push
xchg
jge
lds
int
push
fs
mov
cwtl
push
adc
or
icebp
sub
int3
lret
mov
daa
setno
out
xor
ljmp
push
xor
xchg
mov
and
out
or
jns
jg
shrl
vpsllq
ret
fistpll
mov
dec
xor
inc
push
cmp
xchg
mov
iret
add
ret
adcl
lods
mov
and
out
mov
lahf
or
icebp
mov
je
pop
xor
je
lock
mov
int3
sahf
xor
mov
cmp
lods
out
ss
ret
fisubrl
popf
fisttpll
cmpsb
popa
push
jmp
imul
xor
push
xchg
nop
into
fadd
mov
xor
daa
movsb
push
std
or
movsb
mov
add
fistpl
push
lcall
mov
mov
push
and
xchg
xchg
xor
push
int3
js
xor
aas
loope
out
fcmovu
mov
mov
pop
je
std
cs
imul
das
pusha
test
mov
cmpsb
ret
cmp
xor
sbb
adc
lds
jge
insl
mov
mov
jnp
dec
sbb
and
je
ljmp
and
cmpsl
insb
int3
das
test
test
or
mov
sub
aas
cwtl
inc
cwtl
in
pushf
loope
clc
aam
jmp
mov
push
sbb
test
insl
outsl
mov
push
das
pop
cmp
jle
int
cmp
mov
fisubs
mov
dec
mov
insb
inc
xchg
mov
cmp
push
xchg
inc
in
lret
daa
mov
adc
pop
dec
aad
adc
xchg
dec
ds
in
cmp
fucom
or
push
mov
loope
cmp
xor
out
ficoms
mov
lahf
aad
adc
lea
sbb
adc
cmc
aas
push
sbbb
and
adc
cs
icebp
sbb
nop
dec
cmp
cwtl
imul
mov
and
lea
test
mov
bound
push
and
xor
xor
fidivl
xlat
loop
mov
clc
nop
dec
scas
dec
scas
js
dec
pop
icebp
test
mov
orb
andl
push
adc
jge
hlt
add
xchg
mov
inc
shlb
xchg
push
lock
cs
lock
ficoms
mov
mov
sti
pop
aaa
mov
add
push
push
cwtl
xchg
mov
fsub
movsl
or
add
jge
inc
fcmovne
sahf
pop
mov
fldt
xor
testb
dec
sbb
aaa
mov
mov
jno
dec
adc
fsubrl
js
inc
inc
test
pop
aaa
pop
mov
pop
and
add
hlt
call
call
gs
cmpsb
push
sbb
xchg
xor
jae
ret
outsl
adc
shrl
ret
ret
jle
and
outsb
push
sub
dec
adc
mov
mov
sbb
xlat
mov
sbb
jo
mov
nop
daa
lcall
add
shll
adc
or
popl
fisubrl
das
ja
inc
push
out
mov
outsb
icebp
or
mov
dec
stc
subb
scas
mov
cmc
or
cmp
data16
mov
add
dec
mov
jbe
pop
and
ret
fisubrl
int
scas
push
lret
jae
cmp
fcoml
cli
pop
in
sbb
push
scas
in
inc
add
mov
mov
std
imul
adc
mov
test
mov
adc
add
inc
movsl
and
pusha
push
cwtl
add
shlb
je
xchg
imul
sbb
sub
pushf
lods
orb
mov
repnz
lea
cwtl
xlat
fmulp
test
lods
daa
mov
jno
dec
test
aaa
jb
jge
mov
jne
mov
insb
cli
filds
inc
cltd
aad
lret
or
sub
sar
dec
jecxz
lock
add
mov
jle
lock
cli
jb
js
pop
scas
xchg
xor
enter
hlt
dec
lea
cmp
int3
cmc
rolb
and
fcomps
mov
xchg
jge
sbb
mov
xor
cmpsb
pop
gs
adc
loopne
shlb
ljmp
jge
mov
mov
mov
dec
sti
mov
dec
push
sbb
and
mov
pop
and
aam
iret
addl
push
lods
in
add
fildl
push
jne
loop
or
out
pop
inc
inc
cld
inc
icebp
cwtl
pop
hlt
dec
sbb
or
mov
sti
or
add
sub
xor
stos
dec
repnz
lods
movsb
mov
add
xchg
jb
popa
enter
push
aam
cmpsl
dec
mov
xor
in
enter
and
dec
mov
subb
lret
sub
shl
jo
sub
xchg
repz
push
test
into
dec
loope
and
sub
sbb
add
xchg
jmp
and
popf
in
mov
xchg
sbb
stos
pusha
mov
dec
loopne
or
cmpsb
pop
and
mov
clc
add
rclb
xchg
je
pop
xchg
pop
jg
adc
ds
in
pop
out
mov
add
fldl
enter
flds
mov
jbe
add
and
push
mov
mov
enter
mov
sub
inc
movsb
in
loop
js
imul
mov
mov
jg
mov
aam
stos
ret
leave
mov
mov
call
or
outsb
mov
xorb
adc
cmpb
jecxz
add
lahf
ljmp
aad
arpl
mov
iret
jmp
scas
and
repz
inc
mov
clc
xchg
mov
sar
push
add
lea
or
xchg
orb
or
rol
push
bound
mov
loopne
test
hlt
adc
test
dec
repz
lahf
in
ds
test
dec
das
into
outsl
pop
fst
mov
lret
fisttpll
pop
dec
and
cmp
xchg
mov
popa
scas
cmp
xchg
cmp
adc
loope
outsb
out
clc
pop
mov
and
mov
pop
je
iret
cmc
mov
loopne
pop
push
cmc
xor
pop
mov
orl
lock
cs
jmp
pop
popl
cmp
pop
push
push
and
mov
loopne
cmp
outsl
sub
xchg
aam
mov
fistl
mov
in
nop
testl
aad
shll
push
filds
push
and
cmpb
in
stos
mov
loop
aam
mov
mov
test
roll
lcall
lods
sbb
icebp
mov
pop
push
inc
pop
mov
xchg
push
mov
sub
dec
and
lahf
ficomps
gs
jae
jno
dec
sbb
shll
outsl
cli
or
lea
dec
jne
dec
loopne
jge
rolb
sbb
push
mov
jbe
jne
xchg
xchg
push
ljmp
mov
cmp
jo
mov
dec
cmc
sbb
repnz
xor
and
xor
mov
pop
cmp
outsl
imulb
push
out
lcall
scas
and
ljmp
fcoms
pslld
frstor
add
insb
pause
dec
mov
sbb
sbb
xor
mov
push
or
pop
out
adc
or
mov
push
xchg
popf
and
xchg
mov
cmpsb
xor
jns
movd
stc
add
in
sbbl
fs
push
nop
data16
testb
push
cmp
adc
jne
mov
cmp
scas
jo
sahf
pop
lcall
int
xchg
jp
imul
mov
xor
pop
push
in
lods
dec
mov
scas
mov
cwtl
sub
push
shll
mulb
xlat
mov
mov
adc
or
in
inc
mov
gs
xor
adc
out
scas
mov
out
fadd
add
mov
je
in
mov
repnz
mov
ds
mov
adc
sub
out
xchg
sbbl
lds
mov
dec
icebp
je
or
adcb
imull
loop
mov
dec
fbld
ret
data16
incl
lds
inc
fucomip
push
scas
xor
inc
sub
mov
mov
ljmp
mov
jnp
sbb
cmp
loop
ret
sub
loope
call
cmp
imul
push
inc
repz
lods
arpl
sahf
mov
arpl
out
dec
adc
cmp
add
xchg
into
insl
add
test
or
cmp
popa
cmc
aas
xchg
repnz
fs
std
sahf
sbb
fdivp
push
or
dec
xchg
pop
stc
enter
fsubrl
xchg
mov
andb
inc
repz
fstl
or
jge
mov
sbb
xchg
jmp
cmc
adc
out
sbb
or
mov
xor
fildll
inc
aas
push
and
outsb
int3
rcrl
fisubs
pop
sarb
andl
int3
out
iret
mov
hlt
push
popa
or
mov
xor
or
cli
jae
movsb
jmp
sbb
pop
mov
push
sub
sbb
pop
cmp
stc
imul
pop
xor
test
xchg
cmp
test
rorl
mov
ja
jne
lds
lods
push
and
imul
andl
outsb
mov
jl
cmc
sbb
ret
roll
fisubrs
and
jb
stos
es
pop
xor
or
fdivrp
movsl
test
dec
cmp
mov
orl
sub
xor
into
xchg
jle
icebp
es
mov
or
mov
rolb
ret
lahf
dec
test
jecxz
scas
pop
cmpsb
jne
ja
aaa
xchg
mov
inc
pop
pop
xor
cmpsl
sar
bound
cld
pop
adc
loopne
mov
aam
out
mov
leave
mov
fimuls
pmovmskb
rcll
adc
xor
dec
jecxz
in
rol
sbb
xchg
scas
arpl
fmuls
xchg
mov
clc
test
xchg
sbb
or
pop
xchg
stos
lods
push
aas
loopne
mov
cmpsl
xor
mov
xchg
sub
xchg
in
ja
cmp
adc
fnstcw
jl
test
into
dec
and
lahf
sbb
sbb
mov
push
shrb
or
ja
mov
scas
push
sub
push
out
pop
cld
push
into
cmp
cmp
imul
mov
dec
repz
call
cmp
xor
mov
fbld
pop
repz
ljmp
inc
icebp
mov
stos
cmp
iret
adc
orl
movsb
repnz
ss
std
lods
dec
faddl
push
xchg
xor
lahf
movsb
dec
lods
sub
fcomps
xor
ja
aaa
mov
shlb
sbbb
xchg
pop
rorl
fwait
sub
lods
cmp
lahf
inc
cmp
and
sbb
adc
xor
aad
adc
aam
xchg
or
or
test
jge
xchg
mov
sahf
sti
shrl
popf
decl
mov
pop
clc
mov
iret
pop
mov
sbb
pushf
adc
imul
jmp
jb
cmp
and
push
faddl
inc
out
add
negl
stos
es
popa
jp
jg
lea
aam
cmp
sbb
jae
imul
cwtl
jl
mov
leave
enter
fwait
pop
push
and
push
lcall
insb
insb
jl
mov
loopne
rcl
mov
sub
dec
mov
mov
movsb
cmp
pop
lods
push
fadds
fmulp
test
std
aaa
pop
xor
xor
add
jg
xor
jg
jecxz
negb
cmp
pop
inc
add
push
outsl
pop
jp
inc
ret
mov
push
mov
jae
pop
sub
sbb
mov
sub
test
mov
sub
adc
and
call
outsb
jns
int
sub
imulb
divb
sarl
loopne
cmpsb
jns
xchg
fstpt
jno
jno
cli
or
int3
arpl
icebp
xorb
jbe
gs
pusha
in
int
sub
ss
dec
inc
mov
mov
daa
imul
ret
add
dec
mov
testl
jle
loop
dec
jbe
push
jnp
test
mov
jmp
mov
outsb
sbb
xchg
cmp
jno
jae
sub
outsl
scas
fdivrs
addr16
mov
sub
mov
in
and
jp
inc
xchg
mov
js
and
test
jns
and
insb
inc
push
mov
xor
jl
mov
pushf
sbb
sub
ret
outsb
rcll
imul
xor
arpl
scas
scas
add
das
insl
clc
jnp
les
pop
cmpl
mov
sarl
vpsubusw
jns
and
loopne
pusha
pop
add
push
call
ja
mov
aam
mov
iret
mov
in
dec
fstps
mov
std
sti
xchg
mov
xchg
popf
xor
ror
imul
incl
xchg
jge
sub
notb
js
and
rolb
repnz
out
fdivs
das
adc
jbe
cmpsb
cmpsl
sbb
and
stos
add
mov
arpl
adc
lds
or
xchg
add
cmc
push
and
outsl
sub
xor
cwtl
cmp
pmulhw
add
mov
xchg
adc
push
xor
inc
fnstsw
cmpsb
add
xor
stos
xor
mov
adc
pop
cmp
xchg
xor
mov
mov
cmp
nop
ja
mov
xor
push
test
pop
sbb
dec
mov
jge
pop
cmp
shll
pop
mov
jns
add
mov
mov
in
test
fdiv
fnsave
add
mov
out
pop
sub
inc
add
lock
push
imul
inc
inc
loopne
ds
xor
sbb
leave
int
mov
les
adc
sarl
pop
push
pop
call
adc
orb
xlat
jne
and
dec
dec
sub
ret
dec
dec
leave
cmp
xchg
cmp
cld
cld
mov
dec
xor
popa
adc
enter
xor
dec
add
push
sbb
icebp
bound
into
xchg
adc
popa
mov
inc
repnz
mov
push
lcall
xchg
xchg
mov
je
insl
jmp
ret
in
adcl
loopne
mov
xchg
push
add
xchg
pop
arpl
ss
sbb
ret
push
cltd
xor
adc
cmp
jl
mov
repz
lret
inc
push
stc
out
jbe
lock
and
mov
movhps
pop
test
jmp
lret
sbb
inc
fwait
push
popa
insb
test
mov
shll
jge
shrb
mov
or
pop
pop
push
jno
sbb
ss
jnp
ret
dec
jno
jle
nop
cmp
xor
push
or
xchg
xchg
nop
jo
dec
lea
mov
mov
aad
push
ret
fistps
pop
nop
out
or
mov
stos
int3
and
jne
movsb
stos
cld
pusha
and
test
fwait
cmc
or
cmp
and
and
loope
sbb
xchg
stc
push
adc
adc
dec
add
mov
arpl
sti
xchg
or
mov
jae
ja
add
jae,pn
jns
jnp
popa
pop
mov
pushf
insb
sub
add
sbb
and
fistpl
decb
iret
xor
pop
mov
pop
jmp
jne
mov
adc
repz
sbb
mov
mul
inc
adcl
ss
clc
push
into
ljmp
xorb
jbe
shl
sti
rcll
xchg
ret
cmpb
enter
adc
mov
xchg
cmp
fwait
ljmp
rcl
mov
lock
mov
call
or
icebp
xchg
popf
cmp
cs
push
mov
xor
jnp
mov
test
cmp
das
movsb
cltd
fidivrl
nop
mov
sahf
inc
inc
cmc
mov
rcrb
or
in
and
mov
jnp
scas
test
andl
pop
xchg
fbld
push
or
adc
sarl
dec
xchg
fildl
sub
sbb
rclb
push
cmpsb
mov
jne
inc
push
aas
push
jbe
cmp
inc
inc
jge
ja
jmp
dec
mov
xchg
sub
dec
scas
mov
stos
mov
xchg
dec
push
xchg
pop
jecxz
in
icebp
pop
jb
lahf
js
int
cmp
cld
test
fiaddl
adc
mov
mov
lds
mov
ret
inc
frstor
cmp
push
mov
add
stos
orl
mov
ror
cmc
cmpl
mull
or
push
ret
add
sub
sbbl
mov
ja
xchg
cs
add
inc
mov
cmp
mov
int
or
es
and
addl
jg
mov
xor
fsubr
jnp
pop
add
sub
fdivrl
xor
pop
jl
insl
sbb
sahf
sahf
clc
xchg
jle
inc
mov
cld
xchg
sbb
sbb
fcoml
test
lret
lret
sub
je
sbb
jp
loope
or
cmp
fwait
lock
cli
clc
jae
jl
push
ret
data16
xor
pop
mov
decl
cltd
pop
lret
mov
or
xchg
mov
xchg
add
std
add
int
push
andl
mov
insb
test
cwtl
das
push
mov
mov
or
cli
nop
inc
pcmpeqd
jmp
insb
add
test
jb
enter
xchg
or
xor
fistl
mov
popl
xchg
and
rcl
repnz
je
clc
xor
std
js
popf
cld
inc
lds
int3
nop
mov
loop
rclb
lret
divb
sbb
pop
cmp
pop
jbe
mov
test
mov
movsb
push
shlb
pop
jno
cltd
pop
orl
pop
lahf
test
jb
ret
das
mov
sub
mov
inc
test
sbb
mov
insb
mov
push
in
jbe
mov
sub
mov
sub
out
dec
lahf
mov
jb
dec
in
xchg
into
fidivl
mov
and
xchg
mov
aaa
pop
out
dec
jmp
nop
into
rclb
out
lods
sti
xchg
lcall
mov
mov
xor
cmc
pop
aad
pusha
mov
xor
mov
adc
insl
fidivl
mov
push
add
cld
jb
lahf
mov
sbb
xchg
pop
jecxz
or
pop
mov
ret
pop
out
jns
xchg
pop
jle
lret
aaa
mov
mov
ror
xchg
adc
push
xchg
pop
mov
pop
mov
icebp
arpl
lods
jle
mov
inc
iret
sub
sub
mov
in
add
push
sbb
cmp
push
ljmp
sti
sub
cmp
mov
or
mov
dec
add
lea
scas
xchg
gs
pushf
int
sbb
stos
push
dec
pop
jne
add
aad
mov
fwait
in
jbe
mov
out
mov
push
xchg
iret
in
repz
loop
mov
sbb
cmp
lret
loopne
jmp
inc
inc
inc
fcomps
xor
dec
repz
icebp
ss
adc
inc
bound
out
lods
fisttpl
or
jle
pop
cs
mov
aas
inc
dec
mov
cmp
pmaddwd
mov
mov
fsubs
cmp
add
insl
sub
mov
sub
mov
and
pop
and
sbbl
or
or
and
test
jo
xchg
dec
pop
lock
pusha
sbbb
ja
out
idivl
push
data16
cmp
test
in
aam
push
and
mov
pop
int3
rcll
xorl
mov
xor
into
sub
repz
push
dec
pop
andl
scas
lcall
push
or
insb
or
lds
sub
xchg
add
lods
sub
stos
sbb
aaa
jp
rcrb
or
cwtl
pop
scas
out
xor
push
and
fists
jbe
arpl
xchg
jae
dec
inc
push
rcr
mov
sbb
jecxz
ss
push
xor
adc
adc
ss
ss
jecxz
leave
dec
leave
sbb
push
sbb
out
sbb
ljmpw
aam
pushf
sub
sbbb
cmp
inc
push
iret
dec
pop
testb
nop
addr16
pop
mov
pop
xor
inc
cmovl
sub
fmull
add
dec
sub
lahf
fcoms
mov
dec
mov
inc
cli
scas
cmpsb
sbb
jle
das
inc
test
push
pop
test
xor
xchg
jns
out
pop
mov
cwtl
outsl
push
jmp
andb
add
jae
je
jbe
lock
mov
pop
loope
callw
imul
push
adc
or
repnz
sub
lods
pop
sarb
fiaddl
shl
pop
dec
xchg
je
fadd
cltd
lea
je
mov
push
jnp
add
xor
out
std
ficoml
ja
cmp
inc
push
push
into
sbb
int3
out
loopnew
inc
mov
into
fmull
pop
jg
push
int3
jae
jns
adc
std
inc
mov
cwtl
arpl
xchg
inc
jno
sbb
mov
scas
cmp
in
dec
sbb
cmc
call
or
pop
scas
push
add
addl
out
jp
sub
dec
cwtl
and
sbb
adc
cs
cmp
pop
cmp
jno
pop
mov
insb
xchg
out
and
sub
pusha
int3
push
inc
fs
push
frstor
ret
and
call
cmp
adc
data16
mov
sbb
adc
repz
fs
fsubrs
xchg
cmp
xor
sahf
xor
adc
iret
stc
push
ss
data16
xlat
daa
push
out
xor
add
or
mov
sbb
mov
cs
mov
ret
ret
inc
push
jl
mov
inc
sub
pop
mov
clc
dec
sub
repz
inc
testb
dec
adc
aad
mov
xor
lods
test
popa
addr16
lahf
adc
cli
mov
stos
jo
das
pop
fcoms
ljmp
or
jge
adc
repnz
hlt
test
arpl
mov
adcl
mov
mov
push
xchg
pop
ss
mov
cltd
std
fisttpll
sub
push
mov
idiv
sahf
cmp
mov
push
sbb
and
push
xor
push
inc
scas
in
push
imul
and
add
and
jbe
cmpsb
jecxz
addr16
mov
and
push
mov
add
sbb
sbb
imulb
or
mov
call
jge
out
jnp
inc
lods
scas
mov
bound
sbbb
fs
popl
shrl
and
int
aam
lret
inc
std
mov
cmp
lea
inc
stos
idivl
fsubl
and
cmp
mov
popa
test
lret
and
push
in
inc
xor
or
lods
inc
push
fsubrs
call
cmpsl
fdivrl
cmp
jmp
ljmp
lcall
movsl
fs
cmc
push
repz
lahf
jecxz
lock
fwait
cmp
shrb
sbb
xor
dec
adcl
test
add
add
and
fsub
ljmp
test
adc
inc
aas
cs
ficoms
mov
add
adcb
xor
movsb
xchg
jb
xchg
andb
pop
lock
cmp
nop
lahf
push
push
sub
pop
lret
jno
data16
aad
gs
movsl
stc
or
push
or
sub
jg
push
and
xchg
sbb
push
xor
mov
push
xor
inc
cmp
jb
lret
adc
dec
mov
adc
shl
dec
mov
and
insl
js
rcrl
mov
push
mov
mov
lods
inc
push
cld
bound
ja
lret
mov
push
and
icebp
pop
cmp
sub
popf
mov
dec
movsb
aaa
jmp
or
push
add
in
cmp
and
ror
sub
adc
jmp
call
push
mov
xor
xor
xchg
int
push
iret
jb
in
mov
ja
icebp
and
std
cmp
std
aam
idivl
movsl
test
pop
mov
pop
sub
xchg
inc
aas
ret
mov
and
inc
lods
int3
hlt
mov
pusha
add
sbb
and
mov
sbb
movsb
add
jb
pop
and
outsb
push
jns
popa
lret
xor
mov
call
aam
inc
push
int3
out
mov
movsl
lds
lea
xor
push
inc
loopne
lods
faddl
pop
mov
cmp
mov
push
mov
test
scas
push
pop
push
push
call
mov
shrb
mov
out
xchg
cmpsl
jp
cli
or
pop
ficoml
inc
loope
sbb
hlt
femms
into
inc
adc
sbb
inc
push
aaa
into
xchg
shlb
add
add
mov
mov
jmp
lret
pop
je
in
or
inc
mov
out
testl
pop
inc
sub
jns
add
aas
lret
ja
sbb
lds
aaa
dec
call
dec
movsl
xchg
xor
dec
jecxz
into
push
lock
and
inc
cli
iret
das
xor
pop
gs
mov
sub
imul
cmp
sbbb
jne
ds
sub
test
xchg
mov
shll
and
pop
cmpsb
cmpsl
and
loope
les
clc
xchg
in
and
inc
pop
ret
daa
sbb
movsl
mov
repnz
adc
mov
in
and
ss
aas
push
cmpsl
dec
lds
movsb
stos
sbb
lock
xchg
jo
mov
test
insl
jg
imul
call
adc
pop
fnstcw
pushf
addr16
xchg
jnp
jecxz
mov
sbb
or
adc
test
stos
sti
outsl
pop
cmp
adc
bound
lret
pusha
add
mov
jne
leave
mov
dec
lock
cmp
xor
fwait
pop
sub
idiv
cli
or
mov
fs
in
testl
cmpsb
cmc
mov
subb
daa
and
out
jmp
insb
mov
gs
xor
test
inc
dec
add
jae
loopne
dec
test
aaa
mov
or
iret
cli
pushf
popa
notl
jae
cmp
sahf
gs
push
and
push
call
ds
adc
push
mov
jae
movsl
xchg
mov
adc
insb
shlb
ret
xor
int3
aas
adc
notb
mov
sub
dec
dec
scas
icebp
add
stos
enter
aam
pop
xchg
jb
gs
mov
xor
push
ja
mov
pusha
push
lds
push
fs
mov
popf
stos
das
lods
inc
mov
and
lcall
cwtl
das
mov
fnsave
lcall
fidivrl
xchg
mov
imul
adc
add
sub
out
xorl
mov
xor
xchg
loope
cmc
in
and
outsb
adc
fistl
rcll
cmp
and
or
mov
mull
clc
inc
dec
ja
sbb
inc
cmc
xchg
jnp
mov
call
fsubr
or
and
cli
in
js
mov
ret
jno
xor
pop
icebp
inc
add
jnp
lock
xor
sbb
or
jb
data16
testb
out
mov
cmp
rcrl
aas
push
sti
add
inc
inc
fmuls
mov
dec
cli
inc
loop
xor
mov
adc
and
add
ss
sbb
xchg
push
ja
imul
jnp
insl
adc
push
lock
iret
enter
push
call
je
adc
pop
std
sahf
inc
cwtl
and
rcrl
jnp
cltd
in
and
pop
mov
andb
imul
lds
imul
jb
jmp
jbe
sbb
dec
adc
dec
leave
mov
push
cmp
pop
adc
aas
out
sbb
xchg
bound
subb
push
test
pop
cmp
dec
nop
test
pusha
dec
dec
push
xchg
add
test
dec
xlat
sarb
stos
fs
shlb
sbb
shll
sahf
add
push
lds
jge
lahf
repz
fsubl
xor
bswap
and
pop
std
mov
movsb
pop
addr16
jl
cmpsl
mov
jno
mov
pop
sub
mov
jns
sub
addr16
jg
xchg
rclb
insl
push
mov
loopne
insb
mov
adc
jbe
out
mov
decb
push
fisubl
cmp
jo
and
lds
push
lods
cwtl
xor
mov
mov
imul
cmc
aam
call
and
ret
stc
and
popf
push
dec
add
and
and
xor
cmpsl
fwait
cmpsl
ljmp
jl
repz
push
cmc
mov
xor
jl
push
sub
and
movsl
push
scas
orb
scas
call
shr
cmc
lcall
sahf
jg
icebp
leave
fsub
xchg
call
push
xlat
lock
js
rcrl
je
nop
lea
ret
mov
clc
push
push
jmp
dec
fiaddl
or
outsb
adc
add
imul
sbbb
call
not
sahf
xor
sub
lret
mov
mov
mul
call
jle
inc
mov
push
adc
jle
mov
lret
aam
xchg
repz
pop
push
in
mov
xor
pop
cmp
imul
imul
mov
sbb
cmpb
std
lods
ljmp
xchg
mov
mov
pop
pusha
ss
mov
add
mov
enter
idivl
adc
stc
xor
mov
das
pop
loope
push
popf
push
inc
into
cmp
sahf
cwtl
loopne
stc
mov
es
addr16
adc
rcrb
in
mov
push
cmp
xchg
loop
lcall
dec
xchg
icebp
incl
aam
test
mov
jno
int3
pop
scas
adc
gs
xor
sahf
ds
cmp
and
js
and
mov
stos
fsubrp
out
sahf
dec
mov
in
sub
pushl
aaa
push
dec
cs
and
xchg
pusha
add
inc
stos
insl
xchg
dec
ret
dec
shlb
and
xor
mov
data16
jno
jl
in
les
and
or
daa
mov
cmp
sar
add
stos
mov
push
and
sti
sub
add
data16
andl
push
sub
cmp
add
dec
add
jo
sbbb
mov
pushf
mov
xchg
jg
lret
insb
xor
ret
xchg
push
jg
push
push
stc
cmpsb
addr16
cltd
movl
cld
stos
push
out
pop
mov
add
jle
or
arpl
icebp
aam
xchg
sub
std
cltd
jae
mov
nop
movsb
adc
xchg
leave
jp
pusha
or
rcl
repnz
mov
ljmp
cmpsl
or
sub
dec
cli
lds
fsubr
idivb
stos
add
cmp
cmpsb
dec
or
aam
orl
test
fidivrs
test
mov
mul
sub
sbb
test
pop
pop
fisubrl
pop
dec
mov
daa
jge
cs
pop
xor
lcall
mov
rolb
xorl
xor
inc
mov
xchg
sbbb
dec
movsb
mov
fsubr
call
in
out
xchg
pop
sbbl
cld
ret
pop
sbb
das
out
cmp
daa
or
shrl
ss
out
imul
in
pop
loopne
pop
mov
icebp
leave
movb
nop
js,pn
cmp
cli
ja
mov
mov
add
xchg
test
dec
adc
sti
lret
dec
stc
nop
jnp
data16
movsb
sub
jecxz
xchg
dec
xchg
jle
or
jg
and
loope
lods
repnz
aas
mov
add
repz
scas
test
cmp
call
lock
out
in
insl
lea
dec
or
mov
stc
inc
fnsave
fsubs
mov
jo
push
sbb
scas
push
scas
or
outsl
adc
xor
in
push
or
jno
mov
push
mov
cmp
in
clc
adc
mov
jno
pop
out
sbb
ljmp
sbb
jmp
push
sti
lret
ret
mov
daa
in
rorl
cmp
inc
mov
sbb
push
sbb
mov
and
xor
xor
push
repnz
and
scas
inc
cltd
xor
sbb
or
test
rol
inc
loope
jo
rcrl
mov
mov
imul
mov
aad
jg
pop
ja
ljmp
into
enter
movsb
cwtl
popf
dec
out
inc
xor
push
insl
mov
fwait
popf
or
dec
addl
mov
or
jno
fbld
inc
jns
cmp
int3
mov
jns
cmp
leave
jle
scas
mov
test
xchg
sbb
dec
repnz
ds
mov
and
sti
mov
push
pushf
mov
shrl
ljmp
movsb
lock
inc
rcll
lods
xrelease
and
push
fisubrs
sbb
jg
mov
aad
imul
test
bound
call
lea
subl
mov
imul
push
cmp
jb
daa
icebp
in
repz
lds
mov
xor
test
rorl
js
lea
lcall
in
jmp
fdivs
sbb
mov
movsb
pushf
repz
dec
shlb
mov
aas
jle
add
pop
sub
dec
and
and
dec
mov
dec
in
cltd
jo
daa
movsb
jno
int3
imull
mov
cli
pushf
insb
lods
xchg
inc
aam
and
push
adc
fdivrs
or
cmp
ds
lea
je
or
inc
mov
aad
lds
insb
cli
ffreep
mov
sub
rcl
xchg
mov
lock
shrb
inc
fdiv
clc
pop
sbb
call
cmp
pop
stc
xchg
pusha
inc
add
inc
add
dec
testl
cmp
movsl
push
mov
leave
pop
hlt
mov
shrl
jno
sub
mov
mov
mov
mov
mov
jns
out
lahf
cs
cmp
mov
cld
jge
pop
dec
and
mov
movsl
imul
or
std
nop
xorl
cmp
cli
push
mov
iret
xor
mov
or
arpl
inc
sub
gs
and
or
sub
and
stos
pusha
icebp
pop
sahf
dec
je
insl
js
xor
movsb
mov
mov
cmpsb
stos
and
and
fidivrs
sbb
mov
inc
inc
in
insb
inc
jle
inc
mov
inc
mov
add
or
jg
jno
jmp
cmpsb
loopne
sbb
mov
mov
mov
sub
pop
or
jl
shlb
mov
fs
out
jp
xchg
xchg
or
mov
and
aas
add
inc
sbb
lret
aam
std
sbb
pop
imul
aaa
cli
idivl
lock
out
mov
mov
popf
popa
mov
sbb
pop
cmp
jns
lcall
jne
aas
adc
sbb
cvtdq2ps
popf
inc
xchg
push
push
sbb
icebp
packssdw
fidivl
inc
mov
int3
call
imul
shrl
cmp
mov
inc
mov
icebp
mov
add
sub
push
and
xchg
cs
sub
cld
xlat
push
xchg
xor
mulb
xor
mov
jmp
mov
dec
push
or
or
orb
sub
fxtract
mov
test
stos
popa
or
add
push
or
add
xchg
fmuls
or
jne
or
dec
das
dec
pop
jle
jp
jg
in
sbb
mov
shrb
lret
add
pop
icebp
jo
inc
mov
dec
lret
sarb
cmc
push
pusha
scas
ficoms
mov
and
outsl
xor
aad
stos
jns
testb
repz
test
ja
dec
test
ja
adc
inc
adc
push
or
push
scas
pop
int
pop
js
xor
pop
ret
vpmadcsswd
mov
lods
cli
or
mov
push
push
adc
push
insl
and
jne
jne
out
dec
or
xchg
sub
pop
scas
sub
mov
in
nop
nop
leave
cmp
mov
jg
cmp
cltd
jnp
or
fnstcw
pop
xor
ret
push
sub
adc
cmp
sub
pop
pop
or
test
push
lea
xchg
leave
pusha
scas
and
mov
mov
daa
jmp
mov
sbbl
adc
loopne
shlb
das
test
jae,pt
loopne
adcb
fldcw
shr
sub
xor
xor
lods
nop
jbe
dec
pop
mov
out
hlt
subb
push
stc
mov
inc
mov
dec
out
mov
mov
dec
pop
scas
lea
ss
jo
cmpsl
sbb
outsb
sbb
jecxz
add
sbb
popf
xor
sbb
ret
std
dec
clc
pop
out
jge
lret
mov
int3
aam
insb
jo
mov
cltd
and
xor
mov
leave
cmp
sti
inc
sub
aaa
mov
mov
movsl
xchg
testb
jge
push
lock
push
xorb
mov
mov
push
xlat
das
test
pusha
repnz
sbb
lret
icebp
mov
pop
xchg
mov
push
xlat
fsubl
dec
jbe
sahf
mov
inc
loop
mov
xchg
rcll
movsl
sbb
loope
bound
add
pushf
pop
insl
inc
cmpl
and
popa
clc
adc
imul
push
jo
sub
mov
push
xchg
sub
repz
out
loope
out
xchg
loope
fcmovbe
insl
insb
add
xor
push
pusha
pop
sahf
push
bound
in
mov
and
loop
scas
shr
call
and
jge
adc
insb
ja
popa
sub
imul
out
shrb
popf
clc
dec
pop
scas
inc
pop
xchg
pop
aas
pop
lods
or
gs
cmp
jb
xchg
insb
dec
lret
mov
pop
and
les
pop
cs
or
popf
in
movsl
cmp
in
leave
ljmp
sbb
jne
psubsb
or
nop
test
movsl
xchg
je
jno
lea
pop
add
imul
mov
mov
fs
adc
insb
dec
fldenv
inc
je
std
rorl
rcl
pop
push
cmpsl
dec
ret
shlb
pop
jp
out
jmp
push
inc
scas
and
inc
add
mov
and
pop
shlb
cs
pusha
mov
jno
rolb
daa
daa
cld
mov
lds
repz
adc
sbb
nop
sbb
loope
mov
cmpl
xchg
jno
xor
sahf
faddp
in
pusha
or
pop
jne
clc
shlb
es
or
xor
fwait
mov
out
aaa
push
sub
push
mov
inc
xlat
mov
xor
sub
insl
push
jns
imull
loopne
push
aas
cli
inc
adc
xchg
mov
add
jb
dec
pop
cli
pushf
push
sub
pushf
inc
pop
push
movsl
dec
ja
mov
scas
subb
data16
inc
lds
fcomip
popf
adc
cltd
jo
and
add
iret
daa
inc
data16
cmp
mov
cmp
stos
inc
add
push
lods
sbb
mov
sar
mov
scas
dec
adc
inc
aad
mov
pop
pusha
adc
add
loop
test
pop
sahf
add
cld
or
cmp
loop
fsubs
or
xorl
mov
jns
pop
stos
sub
cmp
lahf
jge
mov
xor
push
push
or
loopne
ficompl
sti
jnp
and
inc
in
push
pop
loope
ljmp
sbb
jae
fmull
rcl
xlat
repz
sub
mov
imul
ret
mov
mov
nop
xchg
xor
fdivl
mov
xor
cltd
aad
rcl
scas
fwait
test
das
jmp
sbb
scas
nop
mov
mov
rcll
in
jg
fwait
sub
mov
inc
loopne
dec
out
cmp
lahf
outsb
add
je
clc
jbe
push
insl
mov
jbe
mov
movsl
enter
repz
mov
addr16
fildl
pop
rcrb
sub
or
add
push
insb
add
sbb
dec
xor
push
xchg
pop
ret
lcall
adc
inc
dec
jp
xor
icebp
sub
cmp
inc
or
xchg
ret
sbb
jmp
movsl
out
xchg
ljmp
popa
idiv
cs
repz
aam
add
xchg
sub
add
ds
fnstcw
adc
push
out
hlt
or
orl
ss
mov
xor
adc
test
and
out
cld
push
test
js
mov
pop
fsubs
dec
arpl
or
jg
movsb
aaa
xor
and
push
mov
fstl
aaa
jbe
scas
mov
loope
leave
dec
outsl
add
jns
pop
into
movsb
mov
jns
adc
xor
sbb
jmp
pop
aam
xchg
xor
test
jnp
cli
int
fnstenv
inc
add
mov
and
cmp
jle
pop
or
dec
imul
push
pop
dec
sbb
idivb
scas
pop
cmp
lahf
lods
test
jae
dec
es
mov
pop
dec
jbe
pop
sbb
rorb
jmp
xor
mov
movsl
loop
mov
hlt
inc
push
sbbl
sti
aam
mov
cmc
cmp
in
aaa
mov
cmp
inc
mov
mov
out
pop
enter
add
push
and
in
cwtl
mov
inc
jecxz
xlat
push
cmp
sbb
daa
loop
jmp
lock
pusha
sbb
loope
in
fsubs
and
dec
ss
incb
jge
mov
push
adc
pop
testl
das
pop
out
test
mov
mov
idivl
jp
movb
inc
jo
dec
jmp
add
dec
push
cmp
andl
adc
add
mov
mov
fsts
or
mov
mov
cmp
jp
cmp
in
dec
test
pop
movsb
cmpsb
in
push
ret
shr
out
cmp
ljmp
xchg
lret
jecxz
mov
stc
sbb
lods
daa
mov
jp
loopne
xchg
xchg
lock
ja
leave
sub
mov
or
mov
lea
cmpb
rol
cli
loop
pandn
sbb
cs
fucomip
mov
jge
fcmovnu
cmc
lret
cwtl
pusha
ljmp
out
ret
or
fimull
lret
pop
fsubrl
les
gs
jo
xor
mov
add
pop
xchg
mov
push
mov
popf
repz
cmp
lea
scas
sub
movsl
bound
pop
pop
icebp
mov
cltd
cmc
cmpsl
inc
int3
add
jae
sbbl
adc
stos
add
add
movq
xchg
sti
mov
lcall
fnstenv
imul
cmpsl
pusha
cltd
cwtl
jmp
pop
leave
das
in
inc
in
nop
add
into
in
enter
xor
ss
mov
dec
enter
sub
sub
push
movsl
or
test
int3
daa
ljmp
or
lcall
lahf
insb
push
mov
mov
ja
test
xchg
ljmp
arpl
or
cmpsl
sarl
mov
mov
idiv
sarb
pop
enter
cmp
in
or
add
bound
xchg
cmp
addr16
pop
or
cmp
push
dec
gs
notb
xor
cmp
pop
popa
lcall
and
repnz
and
add
subb
jno
lock
or
xchg
mov
jp
outsb
sbb
jle
repnz
lret
test
or
in
popa
jns
cld
xchg
push
cmp
and
push
imul
pushf
popf
loopne
daa
in
xlat
popf
data16
mov
loopne
loop
int
xor
jp
cwtl
ret
je
pop
mov
scas
nop
and
scas
les
mov
fs
mov
cmp
pop
enter
inc
fcmovbe
cmp
pop
xchg
push
nop
and
pop
cmpsl
loope
scas
mov
aas
ljmp
call
jbe
lock
adc
mov
pop
mov
push
das
stos
scas
mov
push
xlat
stos
ds
mov
adc
mov
adc
std
inc
inc
mov
lcall
inc
mov
cmc
and
or
push
aad
fdiv
adc
cmp
test
inc
or
pop
out
or
andb
xor
pop
xchg
dec
loopne
sbb
and
cmp
jbe
xchg
push
xor
xchg
insb
popf
fidivrs
sub
xchg
dec
mov
mov
mov
dec
repnz
ds
test
cmp
nop
subb
fdiv
scas
in
pop
push
lret
xor
movsl
dec
sub
mov
xor
jnp
mov
fs
je
xchg
xchg
or
cmp
sbb
pusha
pop
call
dec
mov
xchg
loop
outsb
jle
dec
cmpsl
enter
nop
mov
and
subl
into
mov
iret
push
inc
xchg
pop
jnp
mov
hlt
add
mov
and
push
sub
subb
jge
push
pop
and
mov
sub
ss
sub
movsb
push
adc
inc
xor
inc
flds
dec
repz
xchg
adc
pop
xor
loop
pop
sub
fucom
dec
sub
addl
push
or
pushl
mov
and
adc
pop
mov
push
jecxz
shll
inc
movsb
fwait
mov
shl
aam
mov
lods
inc
cltd
dec
outsb
loopne
out
outsl
and
mov
or
cmp
loope
or
push
sub
lock
in
iret
inc
aam
push
in
mov
test
in
or
xchg
push
sbb
jae
pop
mov
dec
mov
idivl
enter
add
dec
sbb
nop
mov
insb
rcrl
outsb
ja
cld
rcrl
pop
fbstp
pop
cmp
xchg
retw
fbstp
iret
fcoms
push
lods
fwait
and
stos
inc
or
dec
and
mov
gs
cli
or
jne
cmp
or
dec
dec
sub
repnz
and
jbe
sub
mov
jns
mov
cmpsl
mov
dec
dec
dec
cld
xchg
fnstenv
sub
inc
stos
pop
shrl
ss
mov
rolb
mov
arpl
adc
mov
repz
ss
dec
std
lahf
std
gs
cmp
xlat
mov
aaa
xorl
out
pop
sahf
scas
dec
sti
and
pop
mov
cmp
fmul
enter
gs
cwtl
jge
and
loopne
push
lcall
jle
rolb
add
mov
mov
orb
rcl
cmpsb
sbb
ret
or
mov
mov
js
push
stos
push
sbb
dec
pop
cmp
into
cwtl
in
add
jo
nop
cs
enter
lods
stc
ret
shll
out
mov
pop
push
fmull
xor
xchg
mov
push
cmp
jge
ret
pop
pop
out
xchg
icebp
xchg
sub
popa
xchg
mov
jb
fistps
shlb
retw
cmpsl
cmp
push
cmp
loopne
xchg
dec
ljmp
mov
cld
loope
pop
hlt
mov
or
in
jae
out
inc
in
movsb
cld
and
cmc
test
testl
shll
call
test
or
scas
into
popa
dec
jmp
mov
xlat
scas
jmp
xorl
push
jmp
dec
push
xlat
testl
dec
xor
daa
inc
adc
roll
mov
aas
mov
dec
mov
push
popf
sub
or
test
pop
mov
sbb
test
test
stos
mov
fisttpll
or
inc
push
jmp
repz
int3
xor
out
retw
mov
jbe
push
push
pop
and
xchg
push
subl
mov
shll
xchg
xchg
decl
scas
mov
or
xor
daa
jmp
sbb
mov
mov
addb
jle
and
push
popf
ds
and
xchg
inc
popa
sahf
stos
xchg
arpl
jnp
es
cltd
jg
jnp
js
test
int3
aas
cltd
lds
or
mov
pusha
outsb
adc
dec
out
icebp
inc
push
movsl
fs
xchg
push
add
dec
pop
shll
push
std
rorb
lods
mov
leave
repnz
aad
lcall
stos
pop
cwtl
insb
or
popa
clc
out
cmpsb
jmp
sti
roll
add
cmp
aad
push
test
lret
add
in
dec
push
fdivr
xor
and
xor
jge
xchg
sub
mov
push
xor
xor
fs
nop
aas
shll
and
lods
sbb
inc
mov
pop
jecxz
mov
add
js
fisttps
xlat
xchg
test
inc
lods
in
pop
popa
sbb
fnstsw
add
unpcklps
lock
sti
push
in
adc
mulb
mov
fldenv
sub
jo
hlt
out
cmp
das
cwtl
jge
xchg
inc
pop
lret
lcall
mov
aas
adc
jmp
fsubl
pop
push
mov
loop
dec
imul
and
inc
cmc
mov
test
sahf
mov
mov
test
xor
popf
leave
hlt
cmp
inc
jge
imul
ja
xor
pop
mov
ds
aam
mov
and
iret
cs
push
cwtl
and
aaa
push
stos
in
jl
fs
dec
mov
adc
test
movsb
nopl
sbb
sbbb
pop
loopne
dec
dec
mov
imul
dec
rorl
or
or
shrb
and
sub
add
cmovb
push
aas
mov
test
xlat
mulb
xchg
sbb
push
jns
xchg
inc
mov
or
inc
gs
sub
out
cmc
push
lcall
cwtl
mov
fsubrs
inc
fcoml
imul
fdivrl
lds
xchg
shr
mov
dec
and
push
sbb
hlt
mov
in
inc
pop
das
fildl
gs
cwtl
stos
pushf
mov
inc
jecxz
fisubrs
aaa
push
xchg
xchg
int
idivl
sub
in
sub
fistpl
mov
subl
inc
insl
fstpt
cli
cmpsb
sahf
outsl
pop
sbb
cmc
mov
push
pop
push
in
mov
mov
adc
inc
mov
push
push
movsl
xchg
mov
mov
add
sti
into
and
pop
cmpsb
xor
and
outsb
and
push
popl
pop
sub
push
outsl
jnp
sub
mov
mov
nop
test
lret
call
or
inc
cmp
aaa
push
push
inc
sbb
or
scas
mov
xor
pop
xchg
out
or
push
cmp
ja
nop
mov
addr16
stc
mov
jmp
sbb
cmpsb
push
hlt
add
pop
jno
jge
cltd
ja
cmp
jo
sbb
push
inc
jns
es
sub
inc
lea
fcompl
inc
inc
fwait
jne
jecxz
inc
fbld
mov
or
fisttpl
stc
out
jns
movsl
push
inc
loope
inc
cmc
dec
jae
fbstp
fsin
loope
adc
mov
test
or
icebp
xor
mov
and
inc
mov
inc
sub
pop
fs
push
icebp
inc
out
sti
je
or
or
pusha
movsb
call
jb
or
sub
add
mov
or
sub
pop
into
xchg
sub
out
js
xchg
mov
les
into
aas
cmpsl
jb
xchg
xor
sub
push
sbb
xor
push
mov
iret
imul
xchg
ret
bnd
sub
mov
pop
mov
pop
icebp
icebp
aam
add
xchg
xchg
fwait
pushf
mov
push
shlb
loopne
lcall
pop
popa
fnsave
pop
insl
jne
out
add
push
adc
xchg
insl
cltd
push
push
and
mov
push
cwtl
icebp
dec
inc
pop
cltd
or
addr16
or
mov
xchg
mov
jg
ja
mov
mov
dec
mov
scas
aaa
imul
stos
xor
pop
addr16
data16
inc
mov
mov
mov
add
test
mov
inc
cmp
pcmpgtw
mov
leave
xor
in
inc
pop
cmpsb
inc
push
lret
mov
sbb
pop
in
fisttpl
jae
sub
fcmovnbe
out
mov
loope
mov
shr
xchg
andb
xchg
insl
inc
shrl
mov
cmpsb
push
fwait
test
cmp
add
push
outsl
push
and
mov
pop
mov
addb
fdivrp
sbb
mov
stos
mov
and
sti
repz
je
pop
daa
fldenv
nop
dec
cmp
sub
pop
pop
or
and
lahf
sub
add
mov
pop
xor
icebp
std
nop
lods
sub
push
fadds
ret
js
lahf
cmp
dec
repnz
or
push
fwait
xor
xchg
ret
sbb
add
rorb
jp
loop
in
das
add
test
mov
dec
mov
scas
pop
jecxz
pop
out
stc
nop
test
dec
mov
sub
jno
in
shll
pop
fldt
jecxz
subb
mov
add
les
and
adc
push
sbb
dec
into
adc
aad
sarl
pop
lret
pop
bound
push
push
sub
enter
push
pop
pop
dec
aaa
into
subb
mov
jns
sub
jle
lahf
aaa
shll
sub
xchg
xchg
out
xchg
jae
xchg
nop
inc
inc
fidivl
shl
push
fcomps
push
and
pop
cmp
cmp
in
inc
pop
inc
xchg
jns
add
leave
mul
pop
les
sbb
mov
test
mov
sbb
pop
mov
std
adc
push
lea
lock
into
lahf
fsubl
outsb
mov
and
pop
insb
xor
adc
mov
xchg
push
pop
movsl
nop
jne
mov
jp
inc
xlat
cld
aam
and
ret
lea
outsb
and
lods
lret
call
repz
leave
arpl
mov
sbb
int3
pop
out
fcomps
test
mov
pop
call
sbb
cli
inc
add
push
mov
sbb
repz
rorl
dec
in
mov
pop
jae
ret
lcall
test
cmp
dec
gs
jns
inc
mov
cmpsl
or
data16
daa
pop
dec
lock
insl
xchg
mov
int
or
leave
nop
lods
divl
jmp
sub
mov
jo
xchg
mov
lahf
stos
push
popf
icebp
rcl
fcoml
jg
adcl
lods
outsb
jmp
dec
pop
xchg
mov
into
jno
pop
pop
das
xchg
adcl
gs
jo
cmp
dec
xchg
cmp
aad
es
ds
sub
out
dec
fsubs
in
mov
jno
inc
xchg
out
xchg
addl
daa
into
fsubl
add
and
leave
xor
call
inc
fldt
leave
push
insl
adcl
push
test
xor
je
lds
xchg
ljmp
mov
hlt
lock
lods
aas
adc
sub
jne
mov
push
push
in
les
adc
cwtl
mov
cmp
push
push
mov
mov
and
push
mov
inc
mov
fmulp
test
aad
cmp
clc
cmp
std
pop
test
andb
rcrl
jnp
shlb
dec
sahf
cld
test
or
xchg
cwtl
gs
add
push
mov
nop
loop
inc
notb
inc
andb
stos
jnp
daa
scas
enter
adc
xlat
outsl
mov
adc
aaa
push
gs
push
mov
add
jge
cmp
jo
ljmp
testl
fcmovbe
es
jnp
dec
loope
lahf
inc
rcrl
imul
jecxz
scas
xor
outsl
incb
fisttpll
push
adc
or
sub
cmp
subb
push
scas
sub
jno
jmp
add
movsl
inc
push
push
pop
loopne
inc
xlat
repz
sub
jmp
sbbb
nop
fcoms
jmp
push
dec
cmp
jbe
imul
xor
jo
imul
lods
sub
sub
sahf
pop
aad
popa
daa
inc
and
test
mov
fisubrs
xchg
pop
sarl
or
scas
jge
mov
outsl
cmc
and
sub
mov
push
push
or
ficoms
test
push
pop
jno
lcall
fnstenv
das
pop
imul
daa
or
repnz
dec
ja
std
cli
sar
add
mov
add
adc
and
inc
push
gs
enter
in
jg
sub
loope
add
mov
cs
outsb
aad
stos
push
nop
jne
add
sub
stc
jo
push
jnp
stc
add
or
mov
leave
sbb
dec
sar
xchg
add
test
dec
out
in
pop
fadd
scas
mov
xchg
scas
filds
jo
and
pop
testl
sti
pop
mov
dec
dec
pop
es
inc
cmpsb
in
mov
sarb
scas
loope
xchg
shlb
inc
fnstsw
loope
mov
or
popa
or
mov
mov
and
adc
inc
je
add
xchg
mov
data16
gs
out
xchg
cmp
push
daa
add
push
stc
sahf
jp
ret
rcr
jb
in
aam
outsl
andb
push
xor
mov
aam
and
add
out
nop
int
ljmp
or
stc
sub
movsb
xchg
xchg
sbbl
sbb
ret
loope
dec
pop
xor
fwait
sub
inc
mull
add
enter
in
cmc
adc
out
inc
cmpsb
mov
add
jl
out
push
sub
mov
mov
inc
add
pop
mov
loopne
orb
cmp
enterw
sbb
movq
clc
subb
xchg
push
stos
test
xlat
lahf
or
lcall
dec
pop
lea
mov
sbb
dec
repnz
loope
int3
mov
dec
cs
add
clc
iret
les
in
jecxz
mov
jbe
outsb
filds
imul
and
outsl
mov
cmp
and
imul
test
ss
ret
aaa
push
jmp
jae
pop
add
popa
push
out
sub
dec
jecxz
mov
add
frstor
adc
cmp
icebp
mov
sbb
imul
inc
push
testl
push
add
xchg
ja
mov
std
arpl
mov
mov
cmp
cmpsl
mov
xlat
add
cmpsb
cld
fdivrs
inc
out
enter
push
clc
je
arpl
inc
stc
test
pop
mov
stos
pop
test
inc
out
push
and
xor
xor
sub
outsb
jae
nop
insl
mov
lock
ss
mov
pop
jl
clc
inc
sahf
outsl
mov
in
test
push
or
jb
in
sbb
movl
and
pushf
sbb
mov
insl
dec
mov
mov
jge
jp
lds
mov
outsb
or
inc
dec
leave
int
flds
jnp
loopne
push
sbb
mov
xor
das
out
and
mov
popa
pop
repz
cli
cwtl
xor
xor
xchg
mov
pop
sti
cmp
mov
sahf
mov
loop
rclb
push
cmc
je
pop
bnd
mov
mov
jne
das
sub
dec
mov
jle
mov
mov
gs
jb
xor
xchg
cwtl
push
lds
cmp
adc
repnz
and
push
sub
pop
jecxz
cli
add
jmp
pop
or
mov
add
inc
clc
inc
test
jns
int
jne
mov
std
or
rcll
jns
inc
fidivrs
xchg
lods
push
sub
pop
aas
xor
pop
pop
jns
nop
xor
mov
or
cbtw
adc
xchg
jne
jns
xchg
sub
cld
xchg
rorl
sbb
lahf
or
inc
jnp
push
in
xchg
aaa
pusha
bswap
xchg
pop
dec
scas
jle
cmp
fisubrl
pop
lock
jmp
push
or
jo
cmp
orb
jg
insb
sub
pop
sahf
jo
and
dec
pop
data16
push
add
test
xor
out
loope
mov
sub
xchg
xor
ja
xchg
xorl
adc
sarb
and
add
or
cmp
and
lods
mov
aad
mov
leave
sbb
jae
insl
cld
inc
sbb
inc
jb
in
js
cmp
mov
scas
inc
or
adc
out
leave
pop
push
testb
into
push
test
xorb
dec
xor
or
daa
mov
fs
int
maskmovq
testl
xchg
xor
imul
scas
mov
push
and
pop
lcall
jno
sbb
adc
jp
insb
lahf
cmp
adc
add
pop
test
mov
mov
dec
jp
mov
test
fidivrl
daa
lret
mov
dec
movsb
int3
push
cmc
mov
fnstcw
and
enter
mov
clc
cmc
or
insb
pop
sar
popf
lds
and
sbb
push
cmpl
mov
fmull
push
out
bound
pop
xorl
jne
xchg
das
pop
fistps
ds
fsubr
xor
int
and
mov
fistps
popa
shll
jl,pt
and
hlt
lods
inc
xor
add
outsl
stos
cmp
pop
popa
mov
push
adc
out
fisttpll
aad
sbb
in
test
ja
pop
mov
push
cld
incl
ja
inc
mov
pop
aad
adc
cli
adc
fsubrl
rorb
lret
pop
or
or
ljmp
cmpb
fldcw
push
out
daa
test
shll
lock
lock
adc
lret
js
out
inc
arpl
in
test
in
test
je
pop
mov
jo
std
dec
pop
fisttps
sbbl
sub
mov
sub
fisubs
sub
sub
jns
xor
arpl
sub
pushf
or
dec
mov
inc
std
inc
adc
out
pop
imul
lods
xchg
cs
dec
mov
addr16
je
xchg
push
int
xor
ds
rol
mov
push
int3
fdivs
mov
les
dec
je
aad
push
xchg
jecxz
negb
aas
cmp
les
push
lret
jp
jmp
cltd
fisubs
or
test
enter
cmc
sbb
xchg
and
test
enter
mov
jo
mov
negb
mov
andl
mov
pop
hlt
mov
push
add
or
sub
sub
push
jmp
sub
xor
mov
push
test
scas
pop
jp
pop
xor
mov
inc
cmp
cld
xchg
push
test
dec
pop
mov
or
and
sbb
push
out
dec
sbb
mov
pusha
mov
push
mov
mov
dec
imul
push
imul
scas
fsubl
lods
mov
jge
movsb
in
out
xorb
outsb
arpl
out
xor
pop
jne
and
mov
stc
push
xchg
jno
xchg
fs
andl
aam
movsb
popf
mov
jb
repnz
jge
pusha
push
popa
xor
xchg
jb
insl
mov
add
loopne
out
dec
pop
xor
cmp
jl
fwait
sbb
inc
adc
pop
stos
pop
outsb
mov
repnz
mov
nop
jmp
loope
je
fdivrl
cmpsl
add
mov
jge
pop
addr16
sub
mov
sub
inc
mov
into
aaa
jae
movsl
adc
ljmp
call
das
mov
xchg
push
xorl
lds
mulb
rclb
aad
cmp
push
mov
sbb
xor
xchg
pusha
sbb
rolb
and
int
pop
sbb
pop
cmp
mov
in
in
movsl
xor
sub
subb
pop
adc
shll
insl
pop
lahf
jns
movsb
xchg
enter
xor
jnp
aaa
mov
push
mov
pop
add
fisttpl
enter
inc
ficoml
sbb
jb
push
or
adc
lea
jnp
outsl
cli
adc
insb
sub
cmp
sub
pop
push
ret
notrack
dec
sbb
cltd
shlb
daa
cmp
sub
cmpsl
cmp
iret
data16
mov
inc
mov
iret
or
bound
pop
sub
popa
stc
mov
jae
icebp
inc
sbb
xor
shrb
dec
xchg
sub
mov
aad
outsl
aad
jg
imul
or
lret
out
out
bound
xor
adcb
mov
and
sub
fdivrp
push
mov
or
pop
sub
mov
pop
out
lahf
jo
dec
out
sti
mov
cmp
add
arpl
jmp
mov
jno
xchg
mov
cmp
sub
mov
cmp
ljmp
in
lock
sbb
out
sbb
cmpsl
or
push
jmp
push
in
dec
jmp
in
pop
into
call
dec
jg
aaa
push
mov
cmp
mov
mov
xor
jmp
leave
ficoms
mov
mov
mov
push
dec
or
adc
in
jecxz
and
mov
mov
adc
inc
in
jb
aas
fisubl
insb
sbb
pop
lds
in
jg
or
cmp
sub
scas
mov
imul
fdivrl
sbb
sub
fs
aas
dec
jns
insl
jmp
sahf
push
repnz
lods
mov
xchg
pop
sahf
mov
cmp
jne
mov
dec
xchg
jne
mov
scas
sub
stos
mov
push
cmp
enter
shl
mov
mov
test
iret
int
inc
jmp
xor
add
lods
inc
mov
js
or
aam
not
insl
adc
xchg
repnz
fs
add
mov
add
clc
cmp
jecxz
cmp
in
lds
mov
add
cmpsl
ds
imul
or
dec
aam
mov
dec
shll
add
xor
and
lds
mov
shrl
cmp
push
imul
cmpsl
fwait
loope
add
lret
mov
out
js
inc
pop
inc
fisttps
push
add
ja
xchg
out
ds
scas
out
mov
adc
fxtract
stos
int
test
lea
cmc
das
pop
fisubs
adc
xor
mov
fldt
dec
push
cwtl
fbstp
mov
out
push
adc
jns
xor
mov
sub
jecxz
sbb
insb
add
adc
mov
fwait
shrb
or
aaa
mov
add
jne
xchg
mov
adc
adc
jmp
adc
leave
dec
lds
mov
repz
push
push
mov
xchg
xlat
cs
sub
movsl
fdivs
ja
insb
jl
sarb
js
jmp
subl
ret
push
cwtl
cld
stos
xor
jmp
movsb
cmp
shrb
bound
push
push
gs
xor
gs
jns
xchg
mov
xorl
push
cli
xchg
mov
adc
filds
mov
imul
sub
xchg
and
mov
movsb
add
mov
repnz
scas
ljmp
jno
out
push
sub
sbb
mulb
arpl
pop
xor
rolb
lock
enter
jnp
into
popf
testb
out
cld
sti
in
xor
push
jge
popf
xor
inc
test
xchg
mov
xor
jo
cmp
in
push
dec
xor
das
jo
mov
ds
cmc
out
pop
daa
fdivrs
bound
jae
lods
cmc
fldenv
testb
dec
mov
dec
push
pushf
dec
mov
xrelease
or
xor
mov
dec
sbb
push
loope
in
and
sub
sbb
dec
mov
mov
sarl
cmpl
adc
test
sub
pop
orb
mov
or
loopne
mov
addr16
adc
sbb
adc
out
repz
leave
cmp
jb
mov
stc
or
fwait
dec
pop
lds
add
xchg
or
add
shl
scas
or
ljmp
andl
mov
jb
add
and
mov
fldl2t
push
xlat
testb
inc
pop
cmp
idivl
movsb
cld
cmp
insl
mov
scas
sbb
inc
push
mov
mov
das
int3
arpl
movsb
jle
outsl
sar
adc
xchg
in
int3
push
cmp
lahf
loop
pop
lods
xor
daa
ljmp
pop
jne
mov
test
and
mov
sub
cmp
fwait
pop
sub
in
and
divb
cmc
mov
subb
push
mov
dec
xor
imul
or
xchg
and
and
stc
sti
lret
nop
daa
mov
test
mov
leave
test
inc
stos
jmp
add
subb
in
sar
in
test
or
mov
scas
hlt
fsubrl
rclb
ret
jne
lock
test
push
jns
cmc
popa
add
ds
orl
lret
sub
cwtl
jecxz
inc
jle
xchg
in
insl
pop
dec
adc
pop
pop
pop
dec
jg
cmp
mov
daa
mov
pop
mov
loop
in
inc
imul
cmc
jae
scas
test
pushf
add
nop
nop
data16
xchg
shl
pop
adc
pusha
mov
jp
sub
sbb
pushf
sti
repz
sub
mov
mov
maxps
jecxz
sub
ss
push
ror
iret
add
pop
pop
xor
and
in
stos
xor
movsb
idivl
test
dec
and
pop
loop
pop
lret
scas
repnz
sbb
pop
into
dec
in
cmp
adc
sbb
jae
stos
xor
cmp
mov
lret
mov
dec
cwtl
enter
cmp
daa
shlb
pop
mov
xor
dec
dec
or
imul
mov
arpl
inc
cmp
shl
ror
mov
push
cmc
push
sahf
nop
xor
xchg
inc
sbb
adc
outsl
inc
cmp
testb
incb
or
mov
mov
aam
mov
cli
stos
inc
fmuls
sub
add
push
sahf
lahf
cs
rcrb
das
das
loopne
push
and
sub
pop
pop
mov
addr16
xchg
imul
xchg
rclb
dec
xlat
jmp
sbb
in
ret
dec
repnz
loopne
rcll
adc
lods
movsb
fimuls
sub
or
cmpsl
jl
icebp
mov
inc
cmpsl
loop
jmp
leave
iret
testw
xchg
in
daa
dec
repz
stc
fwait
inc
adc
dec
imull
and
cmp
inc
adc
jl
mov
mov
dec
int3
or
and
inc
jl
loope
sbb
call
out
jb
xchg
inc
inc
popf
pushl
push
fs
or
loopne
sbbl
or
fs
mov
mov
xor
push
push
push
or
cmpsb
iret
lahf
jns
and
movsl
pop
stos
or
push
add
ss
pop
and
scas
lods
and
hlt
mov
rol
imul
mov
rcr
fadds
ret
fcoml
scas
lret
lret
sti
scas
inc
sub
jno
fiadds
call
xor
nop
inc
loope
cmpsl
je
xchg
repz
cmpl
pop
sub
mov
jnp
lods
and
xchg
mov
xor
ret
dec
gs
fstpl
adc
mov
sbb
or
and
outsl
bnd
daa
lret
sti
dec
lea
aad
addl
pop
sub
lea
mov
mov
pop
cmpsl
orl
imul
je
pop
xor
jbe
adc
or
mov
in
daa
pushf
adc
inc
dec
xor
push
fwait
push
adc
test
pop
insl
mov
jmp
cmp
add
aaa
mov
fstl
loope
jmp
jnp
fdivrs
popa
sub
adc
cmc
lds
cld
jge
cmpsb
fwait
xor
int
sbb
adc
repz
and
xchg
js
dec
loop
cmp
add
pop
xor
ljmp
or
out
mov
xchg
sbbl
sti
mov
shll
or
mov
dec
sub
inc
add
xchg
lret
sbb
nop
test
mov
and
pop
icebp
fwait
mov
cli
xchg
loopne
inc
cltd
push
mov
fidivs
aas
jmp
testb
outsb
outsl
stos
add
lea
inc
xchg
sahf
call
jle
sub
popf
inc
mov
dec
xchg
iret
enterw
popa
in
jns
dec
lods
ljmp
pushf
cld
out
les
fdivrs
mov
imul
jg
into
test
call
loopne
mov
inc
pop
jecxz
fistpll
cmp
inc
in
pop
out
fdivrs
mov
sub
lret
jae
pop
outsb
pop
and
inc
cmp
in
out
and
sti
xor
mulb
ds
or
mov
mov
pop
pop
mov
stos
fcom
pop
xchg
inc
aad
data16
stos
test
rcrb
jbe
cs
mov
pop
push
imul
and
xor
cld
sbb
ret
mov
into
es
movsl
out
aam
icebp
adc
cmpsl
inc
adc
stos
addr16
sbb
and
cmp
xchg
mov
xchg
push
xchg
test
loope
notl
and
cwtl
mov
push
imul
adc
sbb
pop
dec
mov
push
xor
packsswb
sahf
fldl2t
push
xor
decb
fdivrl
sbb
mov
js
in
jne
xchg
add
mov
bound
or
xor
jbe
movsl
push
inc
and
loope
and
adc
xchg
sub
test
insb
lret
das
mov
mov
jecxz
cs
and
xchg
std
out
outsb
popf
rclb
addb
dec
out
sti
pop
pop
repz
in
rcr
jae
imul
sarb
lahf
ss
cltd
pop
lock
add
insl
mov
dec
inc
cltd
adc
adc
cmc
mov
jne
ret
adc
scas
adc
xchg
testb
lods
mov
xchg
fists
shlb
sarl
jnp
dec
bound
std
loopne
pop
ja
test
test
inc
mov
add
mov
lds
and
lcall
rorb
xor
cltd
cmp
ret
fistpl
jno
cmp
outsb
fldenv
pop
test
test
jge
xchg
push
xor
add
fs
push
sbb
cwtl
repz
lcall
and
push
add
out
jp
xor
xchg
xor
cmp
loope
int
loopne
sarb
inc
arpl
xor
insl
add
je
fwait
in
mov
cmp
rolb
popa
add
mov
gs
nop
cmp
out
in
inc
push
mov
or
rcrl
rclb
sahf
pop
push
push
and
pop
aaa
loope
call
insl
mov
push
mov
dec
inc
jecxz
jge
jg
movsb
pushf
cmp
jp
push
pop
and
and
push
pushf
lods
enter
xor
int
into
fadd
in
stos
lcall
sbb
loop
dec
mov
adc
pop
xchg
cld
pop
xlat
imul
in
cld
xor
loopne
and
test
mov
add
mov
nopl
nop
pop
mov
push
pop
repnz
pop
inc
mov
ljmp
fcmovnb
add
mull
jle
rcll
mov
adc
test
sub
rorb
sub
clc
pop
cmp
or
ficoml
pushf
in
mov
push
pop
shll
jl
sarb
inc
pushl
insl
jno
gs
mov
adc
xor
mov
sub
out
add
mov
jb,pt
dec
sub
mov
sar
pop
rcrl
mov
xchg
inc
inc
adc
dec
sub
push
sub
mov
pop
xor
out
pop
dec
inc
fidivrl
jbe
in
mov
aam
dec
adc
jge
stos
cli
or
or
mov
mov
mov
sbb
pop
test
lea
dec
nop
in
cwtl
adc
pop
xor
nop
sbb
jnp
lock
cmp
sub
sub
sbb
incl
in
ss
pushf
or
pop
clc
enter
inc
nop
ror
xor
adc
pop
stos
cltd
fucomip
out
mov
jne
ja
popa
add
pop
repnz
lcall
adc
ss
lods
push
iret
mov
mov
fldt
cmpsl
loop
jmp
addl
ds
lds
mov
int3
mov
add
push
dec
out
xchg
pushf
insb
je
sahf
mov
adc
ja
ja
loop
stc
loopne
push
repz
into
shl
xchg
ja
add
sahf
xor
shrl
in
lret
lret
jne
scas
add
pop
inc
mov
jle
pop
fs
loope
and
xrelease
cli
dec
xchg
daa
ss
imul
pop
and
add
mov
sti
and
xchg
lcall
cmp
push
mov
sti
xchg
inc
cmp
xchg
cmp
shll
pop
scas
adcb
xor
into
ret
fwait
or
fwait
xor
ljmp
inc
mov
iret
xchg
icebp
mov
mov
push
sub
adc
lcall
popa
add
cmpsl
jns
or
or
mov
sub
popf
ljmp
xchg
out
mov
jnp
rcrl
push
sbb
scas
mov
stos
cmp
aas
imul
cmpsl
cmp
add
scas
js
std
add
sbb
lcall
loopne
lea
dec
push
sub
movsl
cmp
add
ss
adc
pop
xchg
xor
fwait
mov
pop
push
push
lret
dec
inc
and
out
jno
mov
aaa
push
inc
fucom
movsb
cmp
cmpsb
test
mov
or
cld
nop
sub
pop
mov
fidivrl
cmp
inc
clc
ud2
adc
inc
movsl
ret
stos
sub
mov
test
push
sbb
iret
xor
movsb
dec
ret
xchg
xor
mov
shll
sti
or
out
iret
mov
add
les
mov
rcrl
mov
cmp
xlat
push
test
mov
xchg
xor
and
out
mov
out
xchg
es
adc
push
je
icebp
cltd
fsubr
add
decb
jle
jle
std
xchg
sub
pop
sbb
fwait
mov
adc
fs
cmp
sub
lds
clc
sub
std
test
dec
sbbb
arpl
call
mov
cli
pop
jne
lcall
repnz
mov
or
pop
lea
pop
insb
out
stos
out
and
sub
test
mov
les
into
in
or
cmpb
pop
mov
ss
fsubl
pop
scas
sub
xor
pop
pop
mov
add
movsl
jo
mov
pop
xchg
lcall
in
xchg
ljmp
scas
mov
pop
imul
cmpl
mov
sti
xchg
ret
jo
daa
movsl
push
push
and
or
fldt
std
xchg
testb
jae
sbb
mov
add
sbb
jg
test
adc
mov
mov
mov
add
ljmp
lock
fistl
push
xchg
push
andb
test
dec
sub
clc
aad
std
or
mov
push
add
and
loop
mov
mov
stos
daa
scas
pop
or
dec
stc
insl
xor
out
ret
mov
xchg
stc
adc
add
jbe
sbb
xchg
jmp
xchg
adc
mov
pop
sub
ss
mov
and
jp
sub
fisubrs
popa
and
lcall
and
xor
nop
xchg
mov
aaa
adc
add
inc
mov
inc
jle
mov
mov
dec
out
adc
jo
les
out
mov
pop
data16
daa
mov
test
test
test
in
add
lods
sbb
out
pop
inc
jge
int3
pop
jp
sbb
decb
cmp
sbb
cmpsl
jecxz
sbb
fsubrp
adc
push
cmpl
dec
cld
mov
mov
stos
push
lods
fstpt
adc
and
push
lods
in
push
cwtl
aaa
sub
pop
sub
aas
imul
inc
ljmp
les
roll
pushf
inc
fcmovne
pop
xor
or
dec
sbb
inc
fs
aaa
shr
push
cltd
sbb
lret
cmp
sbb
test
stos
aas
cld
scas
test
insl
test
imul
loopne
xor
mov
imul
je
cwtl
push
les
sti
es
loop,pn
push
push
dec
dec
loopne
bound
aas
jp
xchg
sub
test
mov
cmc
mov
and
pop
add
movl
cmpsl
mov
adcl
adc
mov
es
and
inc
lods
cmp
test
scas
nop
movsl
ret
jbe
js
mov
es
sbbb
sbb
adc
and
fisttpl
shll
lret
jbe
sub
das
out
mov
add
loopne
or
jo
jle
jge
loopne
adc
nop
test
cmp
pop
imul
fsubrs
mov
push
sarl
xor
adc
jae
mov
sbb
cmp
adc
add
mov
dec
idivl
dec
mov
dec
xor
mov
inc
pop
insb
fdivrp
pusha
mov
add
daa
inc
push
inc
xlat
daa
std
sub
xor
mov
sub
mov
push
mov
shl
hlt
scas
ljmp
hlt
cli
lea
sbb
call
adc
cs
jbe
shlb
les
mov
fisubs
pop
out
pop
fnsave
popf
xor
scas
aam
add
repz
loope
adcb
mov
andb
add
pop
cmp
add
cmp
testl
sbb
adc
xchg
jno
sub
cld
push
lret
jle
mov
pop
pusha
testl
leave
pusha
or
es
and
mov
mov
ja
inc
mov
mov
lock
xor
into
dec
loopne
mov
insl
call
push
inc
xchg
lds
sti
xchg
fildll
mov
push
or
xchg
or
fnsave
mov
out
add
imul
aad
jae
out
test
adc
shrb
and
outsb
test
dec
out
sub
mov
out
and
add
cmp
ret
lret
xchg
stc
xlat
je
aad
lcall
shlb
sbb
and
or
sbb
dec
jmp
jnp
xchg
subl
cmp
and
fs
and
and
out
dec
or
xchg
lock
pusha
addr16
xor
into
data16
out
push
mov
jae
sbb
mov
cmpsb
arpl
mov
xor
imul
out
jp
xor
xchg
mov
sbb
test
sub
add
adc
mov
negl
dec
adc
js
mov
or
bound
scas
xchg
mov
xor
rclb
xchg
xchg
hlt
dec
dec
jmp
cmp
fisubl
stc
fadds
lock
test
pop
pop
imul
xor
xchg
push
xchg
pop
ds
lret
sub
mov
jne
jg
mov
mov
sahf
jmp
inc
test
xchg
jbe
pop
push
adcl
add
sbb
xor
add
sub
and
jno
pop
push
mov
hlt
push
fs
lcall
loop
mov
in
and
or
es
push
push
xor
push
xchg
cmp
jb
inc
push
mov
mov
stc
xor
aas
lds
mov
pushf
sbb
lds
add
mov
jmp
inc
sbb
cmp
cmp
dec
dec
fists
dec
out
add
ret
das
push
xchg
mov
mov
nop
adc
cmp
mov
mov
movsl
cmp
push
test
jb
cmpsl
dec
adc
cmp
out
sbb
sub
xor
std
insl
divb
or
ja
xchg
aaa
xchg
sbb
popf
in
mov
push
sbb
mov
lock
mov
test
mov
push
xchg
jl
leave
pop
hlt
mov
or
mov
bound
jmp
aaa
and
rep
nop
mov
xchg
and
or
inc
mov
sbb
and
adc
jae
cmp
jno
nop
pop
lret
mulb
sbb
adc
add
sbb
pop
out
cmpsb
out
insb
jle
cmp
jge
and
xorb
call
and
pusha
mov
fdivrl
dec
pop
cmp
sbb
fs
jbe
and
shrl
jmp
jecxz
mov
push
in
push
cld
loopne
addr16
pusha
add
mov
xchg
mov
xor
movsb
fisttpl
mov
fadds
mov
adc
jo
sbb
out
sarl
loopne
imul
dec
push
sti
adc
fsubs
push
rorl
mov
sub
shr
mov
shlb
mov
mov
jns
push
iret
subb
pop
and
lea
es
or
dec
lea
hlt
rorl
int3
out
xchg
test
leave
outsb
xor
mov
pop
push
and
fadds
roll
ss
fsub
test
popf
lods
push
stc
out
push
movsb
int3
pop
inc
mov
inc
data16
push
sub
imul
dec
aad
cmpsl
outsl
mov
push
pop
dec
inc
inc
aas
imul
dec
cmp
mov
push
mov
cmp
inc
jno
call
pop
imulb
popf
testb
xchg
fmuls
movsl
xchg
ja
test
mov
push
call
aaa
aam
faddl
loop
add
call
fcomps
cmp
inc
bound
mov
mov
add
and
cmp
cmp
sti
stc
pop
lods
int
out
jmp
mov
or
mov
stc
sbb
stos
mov
fwait
jnp
jl
push
movsl
ret
sub
cs
push
jae
loope
add
add
lods
sub
fs
test
ljmp
lret
sbb
rcr
jge
cmpsb
mov
mov
sub
fwait
xor
xor
xor
inc
cltd
bound
pushf
cmp
ds
ljmp
shl
int3
mov
cwtl
mov
add
sbb
cwtl
mov
dec
aas
xchg
shrl
gs
xlat
adc
pop
icebp
lods
in
jecxz
ljmp
hlt
or
xchg
gs
movsl
hlt
mov
insl
push
add
push
mov
pop
aam
rcl
in
add
insl
cmc
xor
jns
ret
movsb
ret
lcall
and
addl
inc
mov
aas
lret
std
or
cmp
jmp
pop
mov
dec
in
testb
ss
gs
jns
pop
pushf
adc
inc
jp
cmp
mov
inc
xor
sbb
mov
mov
cltd
dec
dec
dec
jmp
repz
aam
std
cmp
jle
push
jmp
icebp
add
push
pop
cmp
xchg
je
mulb
fnstenv
push
and
mov
mov
mov
fs
scas
sub
push
or
das
mov
or
mov
sbbl
or
or
inc
mov
outsl
add
ffree
push
push
cld
pop
mov
mov
cmp
mov
call
jge
mov
rorb
sti
fwait
push
popf
outsl
cli
sbb
jmp
jo
clc
adc
jbe
mov
das
out
scas
js
jno
jno
mov
cld
in
aaa
test
inc
dec
jp
fnstsw
pusha
int3
xor
int
mov
sbb
mov
cmp
push
pop
in
mov
cmp
sbb
rcrb
loope
push
aad
xor
xor
stc
fstpt
jp
mov
cmp
inc
btr
rol
shlb
cwtl
insl
std
bound
xchg
testl
lret
sbb
mov
jno
negb
js
inc
and
add
mov
adc
fidivrl
imul
scas
add
andl
in
sbb
sbb
pop
jnp
mov
push
adc
mov
xchg
enter
xor
ss
mov
in
cmpsl
addr16
sub
aas
jno
outsl
mov
iret
jne
out
pop
sahf
or
ret
dec
push
inc
stc
es
aam
out
scas
cmp
ret
xor
out
mov
bound
and
cmpsb
sub
call
add
ret
mov
outsl
push
push
inc
sbb
mov
mov
int
jnp
pop
arpl
jns,pt
les
inc
call
inc
pop
add
pop
inc
mov
add
inc
cmp
mov
sbb
add
inc
out
xchg
test
out
popa
int3
xchg
ret
test
adc
cmp
sbb
xchg
in
test
icebp
mov
push
stc
and
xchg
pop
ret
xchg
xor
in
add
jge
cmpsb
jg
lahf
cmp
inc
fadds
pop
cs
mov
cs
mov
enter
sub
stos
jne
dec
sti
fwait
add
sbb
testl
adc
mov
add
icebp
subb
insb
pop
xchg
ret
ffree
in
mov
aam
js
pop
iret
and
push
xchg
fidivrl
add
outsb
shlb
jl
arpl
paddusb
push
sbb
insb
jecxz
lea
ds
popf
scas
fxch
xchg
aaa
mov
or
pop
adc
push
lods
mov
mov
inc
pusha
pop
insb
rcr
lret
add
push
ds
andb
mov
aad
out
ret
jp
jb
push
and
clc
mov
pop
insl
cmp
scas
mov
ud1
add
stos
push
cs
test
sti
int3
or
shl
fildll
fistps
test
xor
std
ja
stos
lds
js
rorl
adc
jecxz
xor
fwait
repnz
sbb
int3
lds
movsl
add
in
mov
inc
add
pop
mov
nop
repnz
cli
ror
mov
cmp
or
mov
bound
sbb
insl
cmp
jg
xchg
sbb
addb
lcall
cmc
int3
mov
mov
xchg
sarb
cmpsb
lds
jbe
daa
mov
or
test
inc
inc
popf
in
icebp
arpl
popa
pop
popf
cltd
inc
or
in
push
mov
sbb
notl
mov
cmc
mov
sbb
lods
inc
loop
ljmp
mov
mov
lret
jmp
or
or
shll
lea
out
jne
movnti
inc
adc
pop
jbe
mov
jns
int3
xor
psrlw
cmp
mov
adc
xor
fwait
mov
arpl
adc
and
xor
fisubrl
stos
out
divb
jl
out
int3
pushf
xchg
push
fimuls
push
mov
call
rclb
mov
setge
xor
xchg
sbb
push
enter
ja
out
arpl
or
in
sahf
popa
inc
in
inc
or
sub
cmp
adc
jne
add
seta
xchg
sub
jbe
std
and
sahf
dec
scas
incl
mov
mov
cmpsb
mov
pop
sub
jmp
cmp
mov
cs
movsl
cltd
mov
lahf
daa
aas
dec
pop
rcr
jg
xchg
icebp
xor
xor
pop
mov
out
xor
ljmp
jo
adc
sbb
and
xor
lret
in
mov
lock
or
out
inc
inc
into
lea
movsb
pop
xchg
mov
loop
xchg
lods
inc
aam
stos
das
iret
jno
lret
xlat
insb
push
mov
cmp
xchg
add
mov
add
mov
push
xchg
xchg
pop
add
je
inc
test
pusha
aaa
xchg
mov
std
jo
leave
xchg
pop
shrl
push
test
add
xor
ret
mov
aad
pop
pop
cwtl
loop
js
mov
jp
mov
enter
fwait
nop
push
mov
imul
xchg
cwtl
stos
icebp
xor
add
jbe
scas
outsb
divl
mov
insb
es
push
lock
push
mov
sub
adc
decl
imul
aaa
mov
lcall
lahf
mov
imul
movb
mov
adc
dec
cmp
test
mov
sbb
adc
lret
adc
arpl
in
cmp
mov
sarb
mov
out
mov
and
inc
outsl
or
fwait
or
sub
in
dec
push
dec
fistps
dec
add
xchg
and
daa
adc
adcb
pop
in
stos
arpl
sarb
sbb
rolb
pop
lret
xchg
dec
inc
stc
testl
fldt
pop
insl
pop
iret
psubsw
in
rclb
mov
mov
lret
xchg
mov
pop
cmp
lds
dec
adc
add
lcall
adc
pop
xlat
repnz
addr16
mov
mov
lods
sti
cltd
xchg
in
sbb
xor
ljmp
shlb
pop
adc
fwait
sub
xchg
mov
mov
jle
nop
aaa
cmp
orl
movsb
aaa
inc
lret
into
jmp
loope
lret
mov
jmp
mov
iret
mov
pcmpgtd
xor
mov
adc
fadds
out
jge
mov
test
aaa
into
xlat
lcall
lret
cmp
mov
fidivs
push
sbb
mov
pop
mov
sub
jp
sub
add
sbb
sbb
mov
inc
fdivr
inc
xchg
sbb
pushf
int3
xchg
cmpl
lods
ja
pop
arpl
xchg
xor
jmp
orl
adc
ror
out
stc
pop
cmp
subl
pop
popf
ljmp
mov
adc
loop
arpl
inc
mov
pop
or
xor
sarl
jg
sbb
jo
movsb
cmp
cmp
lcall
xor
out
dec
out
lds
mov
jg
jb
add
fst
in
push
test
xor
push
sub
jo
insb
xor
les
movsl
ret
ljmp
pushf
scas
and
scas
ljmp
es
fildl
fwait
mov
pop
stos
out
dec
test
inc
addr16
adc
and
sbb
xchg
inc
lahf
divb
out
xchg
nop
pop
dec
nop
aas
mov
shrl
pushf
ljmp
pushf
scas
aad
mov
sbb
fidivs
mov
add
fists
test
lahf
shrb
gs
mov
sbbb
jge
and
outsl
push
notb
xchg
jb
aaa
mov
jne
adc
testl
ljmp
aas
jmp
outsb
test
adc
cwtl
shr
pop
mul
pop
mov
cwtl
sbb
insb
orl
sahf
mov
ret
lods
stos
das
push
push
inc
fdiv
mov
jne
sub
push
adc
mov
mov
aam
xor
icebp
mov
popa
xor
cli
jl
in
test
mov
rcr
ret
jle
adc
pop
adc
sbb
mov
clc
push
mov
cmpsl
adc
scas
mov
shlb
mov
pop
xor
mov
push
movsl
cmp
and
mov
sub
sub
jl
jg
xchg
jo
in
mov
xor
fbstp
cmp
ret
sub
lock
jmp
sub
outsb
mov
jo
pop
inc
aam
dec
jg
push
jbe
xor
inc
fbstp
cmpsb
inc
data16
test
in
cmpsl
mov
sub
inc
adc
jg
dec
mov
push
mov
xchg
xlat
repz
nop
icebp
mov
insb
add
push
insb
setle
ja
movsb
movsb
xor
or
xchg
jg
pop
mov
mov
push
push
hlt
testl
cmp
or
mov
pushf
lods
gs
mov
inc
fdivs
sbb
mov
repz
cmpsl
out
in
inc
pusha
imull
insb
xor
jecxz,pt
movsl
dec
pushf
xlat
outsb
lods
fidivrl
fisubrl
scas
inc
js
jecxz
jl
push
stos
dec
popf
add
jno
sbb
or
jle
aad
aas
aas
push
mov
dec
subb
fldl
out
jbe
rolb
jge
test
imul
inc
pop
repz
bound
inc
pop
mov
mov
shrb
mov
xor
cli
daa
clc
sbb
mov
jno
inc
pop
pop
pop
add
imull
or
aas
das
jb
mov
sub
dec
orl
mov
mov
imul
xorb
xchg
sub
xchg
xchg
shll
outsb
inc
push
enter
jl
imul
cmp
mov
in
scas
mov
arpl
jl
fstl
mov
addl
leave
aad
sub
loopne
sbb
mov
mov
mov
jg
jmp
inc
sub
and
and
pop
andl
int3
xchg
push
add
in
jg
pop
push
addb
dec
cmc
mov
adc
mov
jae
mov
aam
push
inc
les
mov
inc
stos
rcrb
adc
dec
sub
movsl
scas
cmp
addb
and
and
aas
cmpsl
ficomps
sti
sub
pop
loopne
and
fs
lods
out
repz
sub
je
jmp
xchg
lret
popf
pop
ret
mov
dec
add
push
mov
cmp
in
push
mov
xchg
dec
push
mov
pop
mov
pop
jge
or
xchg
mov
es
scas
dec
jp
jge
push
movsl
pop
jmp
rcrb
mov
push
sbb
fidivl
insl
mov
mov
sbbb
rcrl
push
push
shlb
cmp
rcl
mov
or
cmp
je
into
xchg
in
out
shl
pop
aam
xorb
pop
xor
ljmp
inc
jp
mov
loop
xor
popa
xchg
imul
jge
and
xor
cmpsb
cs
outsl
cmp
add
or
data16
jmp
mov
fsub
add
movsl
cmp
fs
sub
fadd
int3
jne
fs
test
adcb
add
icebp
or
stos
push
inc
xchg
push
and
arpl
xchg
xchg
push
ss
add
dec
mov
sbb
in
xor
pop
scas
mov
mov
cmp
lret
pop
xlat
mov
jl
lret
sbb
jnp,pt
and
mov
jae
cmpsl
int3
aam
js
rol
mov
push
cltd
test
mov
hlt
add
loop
sub
lods
std
pop
sti
mov
fwait
xorl
push
nop
push
inc
mov
imul
xor
inc
scas
push
or
nop
pop
repnz
mov
outsb
outsl
rol
mov
iret
bound
ret
push
pop
test
pop
cmp
addb
pop
dec
dec
int3
pusha
rclb
fstpl
lods
mov
fs
pop
cmc
pop
mov
pop
jl
stos
fmull
aaa
lock
pop
int3
xor
add
push
add
jl,pn
and
lds
xor
rcl
sub
std
repnz
mov
dec
popl
mov
push
inc
into
push
adc
ficoms
mov
push
mov
jno
out
cmpsb
inc
add
lret
pop
cmp
std
cmp
mov
inc
dec
push
or
loopne,pt
lods
mov
addr16
dec
sbb
ficomps
loope
movsbl
aaa
enter
in
xor
pop
push
mov
adc
ja
jo
and
jge
addr16
subb
sub
aaa
ficompl
cmp
repz
popf
push
inc
xchg
out
adc
inc
aas
testl
lods
mov
fsincos
out
in
test
imul
mov
fidivrl
cltd
inc
jne
repnz
cltd
sub
or
outsb
cmp
fwait
dec
add
dec
mov
loope
movsl
in
insb
sub
loope
ljmp
and
xchg
dec
xchg
call
mov
xor
add
xchg
cmp
push
jge
dec
in
ficomps
push
lahf
out
test
cwtl
outsl
ss
cmp
jmp
popf
aas
shl
xchg
pop
jae
push
xchg
cmp
xchg
lcall
dec
fiadds
movsl
cmp
jo
insl
in
lods
xchg
mov
mov
mov
adc
shl
pop
mov
nop
sbb
inc
push
insb
or
xor
insb
pop
adc
cmp
fwait
xor
fidivrs
in
out
fimuls
popf
stc
std
xchg
jns
xchg
cld
fwait
mov
mov
cmpsl
mov
or
add
pop
ljmp
pop
je
orb
call
mov
cmpsl
push
mov
testb
mov
jnp
mov
mov
sahf
aam
jge
decl
in
js
add
mov
ret
pop
push
mov
mov
je
add
pop
iret
idivb
les
push
pop
outsb
sub
add
ja
inc
inc
fidivl
xchg
out
lcall
test
and
testb
adc
insl
or
es
sbb
pop
dec
jg
or
mov
call
sub
add
sbb
cmp
pop
ret
and
mov
pop
xor
into
add
push
add
aas
pop
insl
push
aam
aaa
pop
xchg
outsl
push
dec
testl
js
outsb
test
ja
sub
jo
jnp
cld
dec
lea
lahf
call
nop
xor
push
out
mov
cmp
fsubrs
test
ficoml
cmp
negl
popaw
sbb
insb
or
std
mov
cmp
xsha256
cmpsb
xchg
sub
push
add
mov
or
jecxz
mov
fisttpll
add
scas
pop
bound
xor
pop
push
or
xorb
xor
mov
in
sub
pusha
orb
dec
fildl
push
sub
cmp
adc
xchg
push
pop
nop
xchg
in
inc
xor
cmp
das
mov
test
mov
movsb
repnz
and
mov
insl
cmp
mov
jl
or
cmpsl
cltd
mov
pop
sti
or
sbb
shr
cs
jno
jb
fnsave
xchg
or
inc
stos
test
sarl
rclb
std
inc
cmpsl
insl
fisubl
enter
hlt
pop
add
repz
cmp
mov
pop
adc
sub
clc
into
xchg
loope
dec
jmp
stc
repnz
cmpsb
xchg
pop
aas
sbb
aas
push
push
popf
aad
mov
sbb
lcall
out
out
xchg
pop
pusha
ror
js
push
in
push
mov
jp
pop
outsb
cmp
mov
inc
in
sbb
sub
fs
and
sbb
add
movb
std
jbe
dec
js
stos
xor
inc
notb
and
inc
or
js
dec
out
inc
mov
popa
fisttpll
sbb
dec
outsl
shl
enter
popf
push
push
ret
sub
cwtl
imul
jns
mov
mov
inc
mov
add
jno
mov
add
mulb
xchg
mov
inc
sub
jb
ret
fistpll
sbb
sbb
mov
fbstp
mov
or
stos
dec
jecxz
mov
adc
push
xor
xor
sbb
arpl
push
xchg
pushw
sarb
ss
fdivrl
bound
fs
pop
mov
clc
cmpsl
loope
sbbl
ret
frstor
push
sub
cld
sbb
mov
gs
andb
adc
sti
mov
idivb
xlat
jge
nop
int3
call
repnz
add
repnz
jb
xor
fdivrs
push
fisubrl
or
test
cmc
fnstenv
in
ljmp
ret
aam
inc
fisttpll
push
imul
mov
adc
and
das
inc
cmp
pop
addl
sbbl
jecxz
stos
insb
iret
sub
inc
sub
and
clc
push
add
dec
sub
outsl
call
icebp
insb
push
mov
in
xlat
add
dec
loopne
lcall
xchg
lcall
xor
das
int
add
jae
insl
adc
es
xor
repnz
in
sbb
outsl
aam
stos
inc
push
movsl
mov
scas
xchg
push
pop
sub
insw
cmp
in
jecxz
push
xor
paddb
out
test
dec
loopne
sbb
movsl
mov
stos
test
mov
xor
pushf
adc
sahf
cmp
sub
push
ljmp
jno
dec
mov
jmp
xchg
shrl
in
jno
pop
or
inc
repnz
push
adc
popf
andb
adc
repz
fwait
lock
mov
jp
test
push
call
data16
push
stos
dec
sbb
pop
push
adc
fsubp
mov
pop
sbb
sbb
jns
and
sub
sub
dec
sbb
and
xchg
fmuls
cmp
js
lret
mov
outsb
mov
sub
mov
int3
repz
push
push
xlat
sub
mull
jnp
sbb
xchg
out
xor
cmp
and
cmp
test
jmp
test
mov
ret
cmc
mov
mov
or
imulb
xchg
notb
pop
push
sub
imul
push
mov
fnsave
sub
js
test
pop
jno
xchg
mov
xchg
call
cmp
push
dec
dec
popa
inc
ja
andl
sub
mov
mov
scas
xor
arpl
or
adc
cmp
bound
in
fadds
and
stc
or
decl
dec
pop
jecxz
cmp
rcrl
mov
inc
cwtl
imul
pushf
lock
dec
pop
sbb
and
adc
or
jb
imul
pusha
and
out
xor
jmp
add
mov
das
pushf
cli
sbb
xor
call
hlt
mov
adc
xchg
out
insl
es
jns
dec
shl
sbb
and
or
cmp
ret
lahf
pop
gs
adc
inc
pushf
sub
fstpt
je
push
dec
inc
lret
cmp
or
ds
add
mov
lcall
cld
std
and
insb
push
cld
dec
iret
mov
add
or
or
addr16
pusha
adc
inc
test
jg
out
and
sub
mov
scas
jb
or
and
xor
in
jmp
add
fwait
dec
mov
cmpsb
lahf
sub
in
push
xor
fsubl
sbb
fwait
mov
sahf
mov
movsl
pop
imul
ss
mov
popf
in
jmp
lea
mov
ret
int
enter
enter
sahf
std
and
xor
arpl
xchg
les
mov
fldt
cmpsb
clc
cmp
jmp
jns
sbbb
mov
mov
popa
push
xchg
dec
push
mov
out
mov
push
xchg
cmp
cmpsb
into
cltd
fisttps
fwait
sbb
jb
xor
inc
arpl
pop
fisttps
repz
mov
push
mov
sbb
mov
out
neg
xchg
sub
xchg
data16
pop
in
orl
insb
notb
mov
push
xor
jb
sar
imul
or
dec
mov
hlt
scas
push
or
cmpl
add
mov
rclb
xor
mov
leave
add
xor
inc
stos
sub
jns
cmp
mov
pop
subb
jb
fidivl
mov
jae
daa
movsl
aaa
jae
push
xor
inc
add
cmp
mov
pop
imul
lods
dec
pop
es
xchg
xor
lds
ja
jge
inc
fucomip
push
scas
xchg
iret
or
out
loope
jg
add
fisubrl
pop
fldenv
repnz
lcall
test
or
pop
lock
in
dec
mov
xchg
ja
ret
iret
sub
mov
or
pop
icebp
aam
push
inc
sub
mov
popf
adc
lods
cmp
in
repz
testb
je
sub
dec
inc
push
pop
lahf
xchg
jle
mov
leave
das
lock
mov
std
dec
jge
divl
push
sbb
les
das
les
aam
in
add
add
fwait
test
mov
sbb
sub
popa
push
inc
ret
outsl
jle
shl
jle
lds
lods
jle
push
shr
addl
xchg
mov
test
mov
add
cld
or
je
and
dec
xor
lret
repz
cmp
xor
or
and
inc
lea
int3
push
mov
add
movl
into
fsubrs
aam
or
lahf
testb
add
cmpsb
int
lock
sbb
ret
icebp
cs
loopne
pop
pop
push
jg
movsb
mov
ljmp
aaa
arpl
push
jne
dec
mov
push
inc
loop
in
xchg
sub
loope
adc
xor
pushfw
cltd
test
test
xchg
sub
xchg
repnz
pop
adc
fnstenv
notb
insl
and
sbb
ss
in
push
imul
scas
inc
inc
sbb
mov
and
das
mov
sti
push
sub
xorb
insb
cmp
sbb
jbe
lahf
sub
es
pop
mov
dec
jp
dec
lods
arpl
stos
xchg
lcall
push
mov
clc
pop
subl
movsb
out
roll
test
sti
mov
lods
ds
in
jecxz
pop
adc
jge
inc
xor
out
movsl
enter
cmpsb
and
xor
mov
or
movsb
inc
pop
push
and
adc
pop
cmpsb
or
mov
jp
stc
jae
mov
fmul
mov
fdivr
test
or
cld
push
push
je
inc
jl
push
loop
or
dec
and
aad
jo
out
insl
push
xor
xchg
fildll
mov
fwait
stc
xchg
add
lahf
mov
imul
mov
ljmp
adc
inc
insb
ret
out
jecxz
jne
lods
scas
shr
dec
mov
xchg
ljmp
sbb
inc
sbb
stos
pop
in
rclb
mov
adc
loope
pop
in
inc
fadds
repz
stos
shrb
arpl
xchg
jmp
repz
add
pop
repz
or
xor
sahf
sub
pop
cmp
mov
and
das
push
push
loope
and
add
jae
nop
movsl
movsb
lock
out
cli
es
fcompl
cld
sub
rolb
mov
push
insl
shlb
call
repz
mov
jb
fildll
adc
dec
insl
addr16
pop
cltd
mov
add
or
adc
jg
cwtl
sub
test
inc
aas
xor
mov
lock
lods
cs
jo
je
outsl
xor
dec
pop
pop
push
and
or
mov
in
mov
adc
js
or
mov
nop
add
mov
mov
lods
in
dec
inc
fdivrs
and
add
push
adc
sub
nop
dec
xchg
pop
push
xchg
dec
inc
test
decl
fisttpll
mov
in
test
pop
mov
mov
xor
xchg
inc
xchg
mov
xor
shlb
jae
lahf
pop
inc
inc
lock
jb
mov
stc
ss
call
jl
mov
dec
out
cmpsb
les
cmpsb
xlat
fwait
icebp
roll
mov
pop
cwtl
push
inc
sbb
add
jmp
xor
scas
out
jns
sbb
mov
imul
in
xor
pop
mov
or
jne
lods
sub
in
inc
insb
cmpsl
and
pop
inc
xor
push
adc
leave
cli
and
dec
jmp
pop
movsb
mov
push
aaa
push
mov
shrl
mov
mov
jge
lahf
or
push
xchg
in
dec
and
iret
shl
or
mov
mov
dec
xchg
leave
or
out
fcompl
push
mov
test
std
mov
shrl
ljmp
xchg
out
xchg
mov
adc
addr16
xchg
orl
mov
mov
xchg
dec
xchg
shlb
es
sub
dec
adc
ss
mov
and
popf
popf
sub
push
add
fwait
and
mov
dec
imul
add
inc
popf
sbb
cmp
inc
push
cmpsb
add
xchg
mull
movsl
stos
mov
mov
cmpsb
push
fsubrl
or
icebp
leave
dec
and
sub
lcall
jb
dec
add
rcrb
pop
lret
sti
jo
fidivrs
es
fistps
jbe
mov
push
cs
in
scas
adc
js
in
adc
cmp
inc
inc
adc
rorl
test
repnz
push
jne
sahf
outsb
mov
popf
xor
jg
into
xor
mov
ja
cmp
pop
ljmp
popa
xor
mov
fiaddl
and
js
stos
ljmp
pusha
adc
ss
jmp
inc
filds
out
lods
aaa
and
inc
mov
test
lock
addr16
hlt
cwtl
jnp
push
xchg
dec
inc
cmp
add
xchg
adc
in
xor
xor
outsb
int
negb
addl
fistpl
fsubrl
call
pop
lea
or
mov
int3
inc
sub
jae
mov
mov
loop
sbb
mov
inc
cmp
dec
jmp
and
lret
rorl
shl
xchg
fsubs
mov
dec
mov
jecxz
leave
icebp
jae
test
lock
sub
add
xchg
out
xor
sub
inc
xor
push
fldt
bound
add
ret
or
stos
clc
call
movsb
cmp
lret
push
aaa
mov
sar
sbb
jno
jb
pop
jle
stos
and
xchg
push
mov
stos
mov
sahf
loop
loopne
cmovne
fabs
mov
jne
mov
test
jmp
xchg
mov
fsubs
out
addr16
retw
in
jmp
mov
aas
mov
mov
lahf
and
mov
xor
in
call
idivb
mov
std
or
mov
sub
bound
jmp
push
xorl
test
ret
push
jo
jae
lcall
cmp
call
sbb
mov
mov
sbb
scas
fdiv
xchg
incl
pop
jle
stos
rolb
cmpsb
leave
inc
sub
aaa
inc
addr16
sbb
mov
adc
loope
fbld
add
pop
push
lcallw
scas
jne
jmp
xchg
adc
imul
or
push
add
mov
cmpsl
dec
fcoms
jnp
stc
iret
inc
dec
pusha
movsb
dec
or
shrb
aad
ss
ja
pushf
in
movsb
mov
loope
sub
repnz
cmp
insb
push
movups
js
imull
sarb
add
popf
xor
in
pop
inc
lcall
sahf
pop
pop
jo
xchg
mov
mul
fldcw
mov
dec
pop
add
dec
in
ficompl
adc
dec
in
lret
out
jnp
in
ja
push
mov
sbb
push
mov
push
add
xchg
jmp
into
test
push
out
ljmp
sub
fcmovnu
addb
dec
jnp
mov
pop
pusha
dec
je
sub
pop
sub
xchg
push
push
sbb
pop
clc
rcll
mov
mov
mov
pop
in
sub
jno
imul
sti
pop
movsl
sti
decl
mov
aad
pop
mov
inc
cmp
mov
adc
mov
fidivs
jo
addr16
sub
add
in
mov
leave
popf
and
ret
test
xlat
inc
sbb
inc
ret
loope
cmc
jg
adc
addr16
pop
pop
cld
aad
xlat
rolb
xchg
lcall
jg
arpl
cmp
mov
js
sub
cmp
mov
dec
pop
clc
lods
cwtl
push
or
iret
sbb
lods
xchg
in
inc
cmp
jecxz
sbb
mov
sub
insl
insl
ret
xchg
scas
mov
cli
mov
repnz
jmp
in
adc
das
shlb
aam
adc
xchg
test
mov
xorl
dec
movsl
in
pushf
mov
in
addr16
mov
adc
mov
pop
out
sbb
into
dec
stc
xchg
cs
popf
fldl
icebp
loopne
ret
popl
ds
xchg
mov
dec
test
lcall
and
adc
in
iret
fdivrp
icebp
pop
insl
add
push
ja
rorl
int
aad
inc
xchg
loopne
or
jge
test
daa
xchg
sub
push
fwait
call
mov
adc
aam
mov
push
pop
and
jl
bsf
inc
leave
icebp
or
popa
mov
int
or
cmp
cmp
iret
adc
fnstcw
xlat
sub
popa
je
les
cmc
enter
out
fwait
sti
mov
bound
sub
inc
cmpsl
sbb
inc
add
and
xchg
pop
ljmp
cmp
fcmovnbe
jge
stos
std
sbb
pop
inc
insl
mov
mov
ret
lds
jo
jl
leave
xchg
cmp
hlt
cmp
add
xor
mov
or
inc
pushf
fcompl
push
fbstp
xor
cmpl
or
xchg
or
subb
cld
mov
dec
and
clc
lock
sub
es
ret
gs
xchg
sbb
mov
pop
ret
ret
inc
pusha
cmc
sbb
push
insl
add
dec
and
shrl
loope
add
inc
mov
push
cmpsb
mov
ljmp
adc
and
int3
leave
mov
push
mov
and
sbb
stos
kxorw
jno
test
push
xchg
outsl
fcmovnb
daa
jo
and
jnp
mov
lods
mov
mov
mov
mov
cmpb
scas
mov
sahf
and
lds
aad
scas
xor
push
jmp
adc
jns
jne
into
and
mov
jnp
notl
call
stc
shr
test
xchg
mov
es
push
aas
fidivl
popf
xor
cwtl
xor
lret
push
test
mov
movsl
push
inc
push
push
jno
and
daa
sbb
mov
adc
mov
push
jmp
mov
bound
fsincos
jle
into
and
out
sub
pop
push
ja
or
cmpsb
cmp
add
jnp
push
fdivl
and
xchg
stc
nop
xor
fisubrl
sub
mov
cld
mov
cltd
cmp
lock
pop
jae
add
inc
fstpt
xlat
repz
inc
scas
fisubrl
repnz
adc
cmpl
push
mov
movsl
and
dec
push
data16
mov
hlt
push
fldl
in
adc
dec
outsb
stos
cmp
pop
insb
cld
aaa
cwtl
outsl
cli
out
push
adcb
lcall
cwtl
sbb
sbb
scas
mov
fwait
sti
mov
inc
out
enter
je
cmp
dec
push
mov
push
mov
push
lret
insb
call
or
push
mov
iret
sbb
aad
loop
enter
jnp
daa
movsb
stos
cmp
movsl
jnp
xchg
call
mov
sub
fsubrl
orb
lods
or
lock
arpl
cmpsb
movsl
cmp
and
mov
pop
clc
and
cld
std
adc
mov
test
adc
pop
inc
in
adc
and
stc
pop
lret
shlb
pop
repnz
std
shll
icebp
jns
adc
jg
and
sti
popf
out
add
andl
xchg
push
xchg
mov
ret
and
nop
out
bound
mov
int
test
push
lods
add
pop
rorl
mov
aam
inc
fldln2
pop
inc
pop
push
rcr
cmc
xchg
sahf
mov
cmp
adc
fistpll
adc
mov
call
test
cmpsb
mov
mov
cmpsl
fwait
mov
add
cs
mov
ret
cmp
pop
insb
shrb
std
and
aam
sbb
mov
sbb
jo
cmp
pushf
mov
lods
shrb
sbb
push
mov
test
daa
popl
or
sbb
and
int
jge
jae
int3
sub
and
aaa
push
imul
push
cmp
xchg
or
jbe
stc
pop
jmp
cmp
and
or
push
add
push
xchg
push
test
push
mov
mov
mov
mov
fcomps
push
xchg
mov
cmpsl
ds
imul
lds
pop
out
adc
or
outsb
add
aad
testl
lret
xor
cs
rcl
ds
jns
and
jne
push
das
inc
lds
mov
fistpl
insl
dec
shr
mov
popf
mov
ja
xchg
push
push
enter
fsubs
dec
pop
aaa
adcb
inc
xchg
sbb
jmp
adc
cwtl
daa
daa
fld
sar
pop
ss
mov
dec
ja
jnp
test
add
movsb
mov
cmp
lods
mov
xor
sbb
jge
shrl
lock
and
cmc
loopne
rcr
repnz
jge
imul
jmp
inc
hlt
lods
imull
lea
inc
add
andl
dec
lods
outsb
insl
sbb
dec
xchg
loope
jnp
les
stc
ret
add
jmp
and
stos
mov
cmc
js
pop
sub
sbb
pop
in
aad
xchg
in
pop
hlt
ret
jle
mov
insb
jnp
popf
dec
daa
xorb
aad
mov
fisubl
jle
jae
call
pushf
push
lahf
je
mov
xchg
mov
popa
stos
xchg
fwait
and
add
inc
pop
push
adc
xchg
or
xlat
mov
imul
cmp
inc
lock
loopne
and
in
and
jge
cmp
mov
push
shll
push
repnz
std
sbb
clc
mov
pop
jb
xchg
sub
scas
push
scas
ret
or
repnz
sub
outsb
aad
mov
sub
lret
jle
mov
and
fdiv
xor
jbe
pusha
pop
pop
out
dec
xchg
xchg
ss
in
scas
push
sub
mov
xor
push
or
jg
push
mov
pusha
shl
mov
popf
jns
push
stos
mov
aas
mov
push
insb
mov
mov
jnp
repnz
cli
cltd
test
stos
sbb
mov
jle
std
loopne
outsb
ficoms
adc
scas
mov
rcrb
out
xor
mov
add
out
movsb
jecxz
xchg
lret
test
inc
xor
loop
imul
inc
lock
stos
xchg
addr16
sub
cmp
xlat
sbb
das
push
push
cmp
lcall
jae
add
push
cltd
pop
pop
xlat
cmpsb
rol
mov
sahf
xor
ret
stos
mov
ds
lea
iret
pop
dec
cmp
cmpl
imul
pop
mov
mov
out
test
ret
jge
les
mov
push
loopne
sub
test
ret
clc
out
push
jb
pop
je
lea
jge
ret
scas
popf
xchg
loopne
lcall
mov
cwtl
in
aad
call
mov
dec
imul
sub
mov
popw
stos
addr16
sub
xor
and
ret
jbe
jp
xchg
sub
fstpt
push
push
iret
cmp
in
xor
nop
sbb
sub
mov
inc
mov
fnstenv
inc
pop
push
xlat
mov
mov
adc
insb
and
dec
xor
mov
insb
add
inc
mov
xchg
mov
xor
or
or
sbb
pop
dec
loopne
dec
iret
jb
and
add
xchg
mov
pop
xor
xchg
ret
fiadds
imul
test
aaa
ljmp
cmp
sbb
pop
mov
aaa
sbb
xor
pop
rcrl
mov
in
inc
xor
and
xchg
sbbb
push
pop
ret
aad
push
jne
imul
xchg
out
sbbb
icebp
dec
fwait
test
ljmp
mov
loope
inc
fnstsw
cmpsl
call
dec
lock
jbe
push
test
sahf
pop
rcrl
std
std
cwtl
sarl
adc
les
outsl
shlb
sub
xchg
jle
dec
mov
push
data16
mov
pop
and
enter
sbb
cltd
stos
cs
cmp
sbb
lods
int3
push
outsl
pop
insb
ret
inc
notb
jb
sub
repz
mov
ds
pop
outsb
loope
aad
sahf
push
push
movsb
cmp
cmp
push
insb
mov
and
mov
or
rorl
in
das
call
stos
lea
mov
sub
lret
push
stc
cmp
ret
push
jge
outsb
shll
ja
pop
pmaxsw
addb
push
lock
int3
gs
bnd
mov
push
nop
add
je
mov
or
dec
or
lret
mov
fcomp
add
and
xor
push
push
decl
sti
sbb
push
mov
cmpb
adc
out
mulb
mov
cmpsb
mov
cmpsl
dec
xchg
fs
dec
int
iret
jb
push
andb
imul
scas
mov
sahf
add
add
lock
push
adc
cltd
pop
repnz
dec
enter
jnp
sub
inc
sbb
mov
and
cmp
inc
movsb
mov
cmpsl
or
sub
mov
mov
add
mov
push
in
hlt
iret
push
mov
and
stos
jle
xchg
mov
push
daa
inc
or
test
sbb
cmp
mov
fnstcw
xor
stos
push
sti
aam
nop
sbb
imul
push
out
ss
xorb
inc
push
jae
lret
jae
testb
mov
jo
hlt
aad
es
push
push
pop
popa
repz
mov
or
fnstcw
or
pushf
mov
fsub
mov
shl
mov
rclb
push
loope,pt
mov
fsts
pop
icebp
jle
jne
adc
orb
sub
push
pop
js
mov
cs
mov
sub
xor
loopne
inc
ret
and
ja
shll
cmp
push
pop
push
dec
add
pop
out
xchg
jl
mov
jp
push
scas
adc
loope
rolb
add
cmp
and
adc
rorb
loop
mov
leave
jo
in
pop
out
lret
inc
rcll
lret
bound
mov
jmp
shrl
bound
repnz
adc
lods
push
add
test
ret
rclb
sub
mov
pop
repz
dec
jp
clc
in
nop
push
sbb
pop
lret
cmp
pusha
add
mov
int3
xchg
arpl
pop
sti
ja
inc
fcomip
addb
adcb
outsl
xchg
inc
pop
jb
sbb
xchg
pop
ds
push
mov
jno
daa
adc
fstpt
cwtl
das
fistpl
sub
jns,pn
movsb
pop
les
add
dec
pop
nop
into
in
jl
movsl
cltd
xor
addl
cmp
pushf
dec
movsb
xchg
in
das
dec
mov
mov
int3
int3
addr16
dec
xchg
fistps
lahf
lahf
jl
dec
dec
js
ljmpw
lea
sbb
movb
inc
push
xor
inc
pop
cmc
lea
in
fimuls
stos
gs
push
and
jbe
or
pop
adc
sub
cmpsb
gs
xchg
sub
cmc
sub
xchg
cmp
or
inc
ret
hlt
ljmp
shlb
fldt
adc
push
test
lcall
mov
mov
movsb
sbb
mov
ror
xchg
pop
cmp
fiadds
cltd
stc
cld
sub
jecxz
and
int
lret
hlt
mov
stos
inc
das
mov
inc
mov
cltd
mov
popf
xchg
arpl
add
push
mov
xchg
test
mov
push
outsb
jp
fdiv
pop
adc
xor
jns
ljmp
cmp
rorl
cltd
std
mov
adc
xlat
xchg
add
das
pop
jge
popa
sub
loop
notb
loope
lret
enter
movsb
and
or
xor
inc
into
jne
fsubs
jbe
pop
jnp
or
or
loopne
iret
in
add
icebp
sub
mov
lss
in
in
xchg
sub
popa
dec
mov
jecxz
popf
cmpsl
mov
jo
flds
push
xlat
fadd
cmpl
es
aaa
add
lcall
inc
push
loope,pt
jecxz
imul
lock
aaa
movsl
repz
aas
lcall
pop
hlt
sbbb
pusha
pop
jnp
fiadds
push
jae
push
jns
out
cmp
fdivs
dec
stos
and
mov
add
icebp
pop
jno
pop
mov
cmp
fldt
mov
or
cmpsl
cmpsl
sbb
inc
adc
lahf
fdivl
lcall
bnd
adc
push
pop
repz
cltd
data16
rcrb
jmp
sbbl
call
adc
adc
shl
fsubs
lahf
sbb
cmp
mov
jns
repnz
sbb
push
pop
arpl
pop
aas
jno
mov
fidivrl
add
push
sbb
sbb
add
and
in
sbb
and
ds
dec
ret
sub
and
rcr
jge
xchg
out
lea
inc
add
jle
sbb
sbb
dec
xchg
sub
lahf
xor
int3
and
dec
loopne
cmpsb
adc
cmc
xchg
mov
xchg
sub
stos
scas
rcrl
data16
pop
repz
gs
add
ds
sub
je
rol
test
int3
lods
xchg
lods
sub
sbb
cwtl
sub
cmp
pop
hlt
add
mov
or
push
mov
lock
bound
add
ds
daa
fidivs
mov
fucomp
mov
inc
insb
push
lahf
xor
xchg
rcrl
pop
pop
sbbb
jnp
data16
clc
push
jmp
sbb
test
fcos
mov
mov
mov
jnp
xor
dec
jp
pop
inc
mov
aam
pop
fnstsw
gs
ja
mov
dec
cmp
mov
cmpsb
mov
sub
pop
fistpll
pop
ja
or
and
jbe
shl
test
mov
das
outsl
jle
mov
jmp
or
push
mov
mov
cmpb
jp
adc
shrl
dec
xor
sub
adc
dec
xor
clc
or
negb
cmp
push
or
ja
jmp
or
jmp
xor
sub
fs
push
iret
jo
pop
lock
repnz
cmp
scas
adc
sete
xchg
mov
mov
push
popl
cmp
lods
jmp
aaa
aad
fs
sti
and
in
jmp
sti
jnp
in
test
mov
int
nop
sub
cmpsl
inc
icebp
inc
pop
xchg
mov
push
sub
pop
or
out
in
sub
sahf
add
in
into
and
mov
sbb
sbb
lcall
fstl
lcall
icebp
mov
dec
mov
pushf
mov
mov
sar
rolb
shll
adc
fcom
outsl
jl
pop
mov
mov
push
ljmp
pop
cmp
cmpb
stos
xchg
inc
loop
lock
mov
push
adc
fsubrs
xor
punpcklbw
inc
mov
jne
incb
es
mov
fucomp
fprem1
pop
or
gs
mov
xor
ja
out
mov
mov
rol
add
std
pop
mov
mov
xorl
jle
je
pop
outsb
aas
pop
xchg
out
xchg
or
jecxz
pop
imul
push
push
sbb
sbb
cmp
and
test
bound
data16
sahf
inc
dec
aam
jne
hlt
xlat
cmpsb
mov
mov
pop
jne
fldl
mov
mov
xchg
mov
sbb
movsl
jb
in
adc
inc
adc
inc
lret
xchg
jns
jb
xor
mov
cmp
mov
fistpll
jmp
pop
dec
gs
xor
add
and
push
and
test
cmpsl
inc
push
pop
dec
test
sub
test
fidivl
push
test
pop
mov
or
ja
es
or
repnz
test
jae
jg
dec
pop
lock
push
rcll
js
popa
sbb
push
mov
pushf
pop
sarl
jl
xchg
jl
enter
loope
inc
lcall
and
cmp
adc
xor
cmpsl
lahf
std
in
and
cmp
lret
data16
icebp
mov
dec
sub
or
cmp
loopne
mov
imul
dec
adc
and
jge
jl
or
jbe
inc
sub
pop
or
jmp
sbb
scas
and
xor
arpl
stc
mov
cmp
je
inc
fcompl
outsb
test
insl
sub
dec
arpl
ljmp
pop
mov
mov
jecxz
fwait
cmp
gs
fidivs
cli
or
loopne
leave
icebp
inc
std
adc
loopne
jl
xchg
adc
cmp
addr16
dec
pop
and
es
arpl
xor
cwtl
addr16
in
sub
addl
ljmp
cmc
mov
sbb
pop
and
jg
jecxz
leave
sbb
or
inc
cltd
shl
jne
cltd
sub
movsb
cmpsl
and
call
subb
leave
lds
pop
adc
adc
or
xor
push
and
shrl
int3
inc
out
outsl
aam
pop
cld
fisttpl
repz
inc
iret
jg
in
push
and
jb
test
fcoms
dec
jecxz
repz
loope
mov
insb
inc
inc
push
xor
gs
and
add
out
outsl
sbb
scas
mov
inc
in
stos
in
push
int
imul
movsb
bound
loop
imul
daa
adc
loopne
adc
stos
cmp
push
sti
fwait
sahf
push
adc
inc
add
cmc
imul
sbb
idivl
into
push
aas
xlat
sbb
xchg
out
cmp
inc
push
icebp
or
lods
push
mov
mov
stc
popa
shrl
xchg
xchg
push
stc
out
xchg
movsb
movsl
cmp
add
movsl
xor
les
push
sub
jp
test
jmp
iret
cli
pop
hlt
sub
sbbl
dec
xchg
sub
insb
add
pop
hlt
into
xchg
sbbl
loop
sub
insb
add
dec
pop
hlt
jle
sbbl
mov
insb
add
outsl
sbbl
mov
insb
add
xor
jle
sbbl
mov
insb
push
add
sbb
and
jae
mov
cli
xchg
add
arpl
push
push
or
lds
inc
and
jns
fucomi
mov
sbb
outsl
xchg
shlb
push
jmp
or
stos
or
mov
xchg
sub
xlat
push
movsb
or
jb
aam
loop
rcr
jge
dec
mov
sbb
pop
aam
mov
je
outsb
shr
and
icebp
cltd
sub
mov
out
frstor
dec
add
sbb
pushf
notb
and
in
mov
pop
mov
rcrb
push
lea
test
mov
sbb
sub
add
movsb
cmp
fistpl
and
jne
jg
and
cmc
or
sbb
cmp
jp
sbb
xorl
insb
mov
pop
jp
xchg
mov
je
xor
dec
insl
inc
daa
inc
clc
adc
mov
iret
xor
mov
pop
fsubrs
mov
jno
dec
jns
cmp
sub
push
test
arpl
pop
lods
aaa
scas
popa
jne
sub
and
ljmp
out
and
icebp
cltd
jne
shrb
hlt
mov
dec
or
mov
popf
jo
lret
cld
repnz
pop
mov
mov
add
mov
sbb
loopne
cmpsb
sub
popl
lcall
mov
je
add
int
in
mov
jbe
pop
test
scas
inc
mov
fildl
stos
leave
movsb
or
jnp
lods
fcompl
or
int
adc
push
in
imul
xchg
repz
movsb
jne
mov
dec
lea
inc
mov
lret
lock
pop
enter
push
and
jmp
mov
dec
dec
mov
xlat
jnp
sbb
fucomp
mov
jmp
mov
rcrl
lcall
inc
sbb
fdivrs
cmp
push
sub
aad
mov
adc
sbb
cmp
push
leave
dec
sub
adc
jmp
push
mov
andl
jmp
cwtl
sbb
jns
mov
mov
mov
xchg
push
sbb
jl
test
push
xchg
cs
test
ljmp
push
pop
push
scas
push
ljmp
stc
fimuls
shl
decb
enter
out
cmp
inc
rcr
or
lea
xchg
add
mov
add
test
xchg
sub
dec
mov
or
mov
filds
fs
xor
lds
movsb
pop
xchg
cwtl
in
sbbb
inc
loop
insl
xchg
adc
stos
lock
xchg
xchg
insl
cmpsb
outsl
mov
lret
jg
fists
sub
sub
jl
shll
cmp
mul
xchg
dec
rcrb
fcmovb
cld
fldt
addr16
jne
mov
sub
out
outsl
push
or
outsl
xlat
fadds
addb
shl
shlb
lods
pop
dec
loop
pop
shl
bndstx
push
lahf
pusha
lret
or
sub
fs
inc
enter
dec
in
fstl
pop
add
jp
xchg
adc
xchg
lahf
gs
and
test
xchg
add
in
xchg
xor
out
loop
jp
sub
fimull
mov
je
scas
out
dec
hlt
out
out
insb
inc
mov
mov
lcall
sarw
cmp
or
mov
pop
mov
pop
outsb
xchg
pop
dec
xchg
loope
jb
into
gs
xchg
imul
jae
clc
movsb
mov
scas
ret
mov
je
sub
out
adc
cmc
mov
mov
add
fwait
or
mov
test
call
or
push
mov
push
repz
lods
mov
aad
mov
mov
mov
enter
or
gs
cmp
out
cmp
scas
jmp
scas
mov
scas
jb
push
push
cld
aam
push
adcl
xchg
inc
loope
push
jmp
xchg
pop
insl
test
mov
jno
lret
insb
adc
int3
popa
loop
mov
fidivrs
adc
arpl
movsb
fdivrs
hlt
pop
sub
movsl
sarl
aam
xchg
outsl
loop
pop
loop
xlat
mov
xor
push
jne
sti
cmc
dec
movsl
mov
mov
xor
lcall
fimuls
jp
and
xchg
adcb
dec
lods
aas
clc
jle
popf
jecxz
cmp
cmp
jp
incb
sbb
popa
fwait
mov
cmp
mov
pop
lock
mov
call
clc
cmp
fsincos
xchg
and
lret
pop
imul
mov
mov
std
mov
mov
inc
add
xor
jno
jns,pt
movsl
call
mov
mov
pop
xor
enter
ds
jp
dec
pop
jnp
movl
jp
cmpsl
movsb
jo
lds
enter
stos
movb
cld
cmpsb
aaa
idivl
test
dec
fndisi(8087
pop
loope
cmp
lock
mov
mov
out
jno
aaa
into
dec
xchg
jo
imul
aaa
mov
fcmovnb
sahf
xchg
adc
repnz
push
filds
push
or
dec
in
out
jp
adc
inc
aad
mov
cmp
in
dec
out
xchg
push
out
stos
and
hlt
sbb
mov
mov
mov
fistpll
jnp
aas
daa
mul
cmp
adcb
arpl
dec
xlat
pop
outsb
and
outsb
fnstsw
outsb
int
pusha
pop
mov
lar
ret
fldenv
mov
lret
aad
cmc
movsl
jmp
mov
iret
sti
rcrl
icebp
xchg
cmc
lock
les
push
cmp
jo
or
int
xor
xor
ja
in
jmp
cld
mov
sbb
lds
jo
sahf
ss
andl
jne
aam
sahf
fsubrs
pop
fs
mov
dec
jae
mov
leave
cmp
loop
fisubrs
aam
fists
xor
adc
or
fdivrp
fcmove
jg
hlt
stos
fidivl
pop
bound
dec
lods
scas
lret
push
outsl
insb
add
aaa
xchg
jne
jo
mov
dec
pop
xor
lret
popf
and
push
mov
and
cmp
lret
pop
mov
xlat
add
inc
shlb
mov
cmpsb
push
pop
xor
hlt
mov
std
inc
xor
daa
popf
fcmovnu
cmpb
or
push
enter
xchg
mov
push
fidivl
std
adc
outsl
cld
clc
sbb
ss
cmp
jp
out
gs
cwtl
pop
nop
daa
mov
pop
cli
lods
scas
inc
mov
rcll
imul
int3
cmc
inc
daa
lret
insl
dec
shrb
aad
out
mov
mov
mov
xchg
testl
xchg
xor
add
xchg
pop
jnp
lods
jp
mov
inc
mov
and
inc
lods
cltd
clc
xchg
adc
adc
stos
inc
xchg
enter
jbe
push
test
fwait
add
out
sbb
xchg
jae
movsl
mov
addl
cmp
rcrl
jnp
stc
adc
pop
xchg
daa
imul
cwtl
imul
mov
rolb
cmp
popl
pop
or
gs
loop
ret
xchg
les
repnz
cmp
sub
jb
xchg
sub
xchg
out
push
and
lods
push
push
clc
jno
sub
and
in
push
stc
das
ret
mov
push
fldt
add
es
jo
adc
lea
dec
fwait
leave
xchg
fbstp
imul
mov
test
push
in
mov
je
pop
push
in
fdivrp
cmpsl
pop
repz
in
mov
imulb
push
push
stos
cmp
ss
out
xchg
adc
cmpl
jo
and
xchg
lods
mov
frstor
jl
push
and
adc
out
call
and
sbb
inc
and
mov
imul
push
pop
scas
dec
xor
xor
bound
inc
test
pop
frstor
push
repz
pop
mov
es
sub
sbb
popf
std
lods
js
fistps
and
pusha
arpl
clc
subb
mov
jp
into
jp
out
xor
xchg
or
dec
icebp
mov
fildll
imul
lock
repnz
dec
ds
mov
mov
outsl
lea
mov
dec
iret
fwait
mov
roll
fwait
adc
and
cmp
sub
orl
cltd
adc
jns
push
outsb
imul
and
add
add
movsb
in
xor
push
ds
sahf
xor
addr16
add
stos
cmpsb
and
arpl
adcb
in
ja
push
int
jno
loope
inc
data16
aad
out
sbb
jnp
jo
shrl
imul
jge
fnsave
fdivrl
jbe
inc
xlat
jno
dec
push
pop
and
xchg
or
fiadds
insl
add
add
cmpl
insl
imul
pop
jle
mov
adc
dec
mov
push
hlt
scas
fiaddl
jne
fcmove
pop
pop
testb
mov
aas
add
out
dec
lea
xorb
adc
xchg
or
int
mov
mul
mov
test
xchg
sub
and
cli
int
femms
sbb
in
pop
scas
cwtl
loopne,pt
jl
mov
xchg
dec
mov
adc
sub
in
mov
sbb
int
push
or
bound
iret
arpl
jl
pop
mov
gs
adc
mov
filds
push
cmp
xor
popf
mov
mov
movq
xor
rcr
in
sbb
jecxz
movsl
sub
cmp
sub
adc
shll
fldcw
in
add
popa
lea
jmp
sub
adc
push
add
lcall
fucomp
jmp
cmp
adc
loope
out
imul
rdpmc
cs
push
or
orb
dec
dec
jp
int
push
xor
pop
sub
and
repnz
insl
lock
xchg
inc
or
xchg
push
jb
pop
cmp
add
dec
push
pop
sbb
ljmp
pushf
lods
je
push
inc
jnp
mov
mov
shrl
pop
iret
or
addr16
addr16
add
and
jg
insb
mov
insl
sub
js
push
or
sub
cmp
add
stos
and
mov
sbb
add
cmp
cmp
mov
jge
outsl
sbb
adc
push
cwtl
repnz
add
and
mov
jnp
xor
pop
inc
leave
in
cli
and
hlt
jbe
ret
dec
jnp
lea
lds
in
lcall
push
int3
jo
xor
sub
pop
daa
addb
xchg
pop
ret
ja
mov
dec
bnd
cmc
movsl
loopne
gs
js
mov
push
mov
fcomi
cmp
aaa
add
loop
stc
rcrb
pop
arpl
cmp
outsl
aad
dec
inc
jl,pt
outsb
mov
xor
insb
adc
iret
loop
fisubrl
fnsave
push
clc
jnp
mov
scas
push
mov
xor
push
test
fisttpll
fnstsw
or
pusha
iret
mov
mov
iret
mov
jg
mov
inc
out
push
jne
add
sti
dec
data16
cmpsl
in
inc
and
outsb
cmp
xchg
cmp
ljmp
in
jmp
xchg
push
mov
pop
cmp
outsl
dec
pop
data16
push
in
inc
pop
jle
adc
out
xor
pop
adc
xchg
cmp
test
lret
in
subb
inc
test
adc
jecxz
stos
aaa
add
stc
out
mov
orl
push
sub
xchg
ret
jo
inc
jae
test
cli
rorb
jns
stc
mov
adc
cwtl
mov
xchg
pop
fadds
sub
inc
pop
jno
add
sbb
ds
and
xor
push
ja
fiadds
mov
xor
xor
lret
mov
shrb
cmp
les
jae
xchg
mov
and
push
mov
or
inc
and
fisubrs
push
pop
push
fildll
dec
and
aaa
roll
fidivrl
scas
mov
adc
jno
into
loop
xlat
lods
sub
ret
iret
inc
repz
test
jmp
jne
jne
je
mov
repnz
pop
movsl
mov
mov
hlt
sub
out
dec
lret
in
dec
cli
pop
xlat
das
lods
mov
jl
jb
and
or
dec
ss
fbld
cli
in
jns
push
jne
cltd
push
cmp
sub
jnp
decb
imul
icebp
xor
adc
mov
pop
sbb
std
icebp
js
adc
stos
xchg
add
sbb
dec
shrl
pop
jae
popa
clc
mov
std
pop
cmp
faddp
and
repnz
cli
imul
js
ficompl
adc
fdivrs
mov
mov
push
scas
xor
sarl
pop
jnp
cmpsb
mov
mov
jle
movsl
insl
push
add
in
inc
out
and
cmp
cld
inc
repnz
push
inc
pop
lcall
and
hlt
fisubrs
sub
in
sub
xchg
or
xchg
js
and
sbb
inc
adc
mov
mov
fs
xchg
repz
add
das
cld
insl
sub
dec
mov
loope
movsl
loope
rorl
arpl
jo
mov
clc
ret
pop
push
mov
jmp
add
pusha
inc
je
jle
imul
sub
pop
and
scas
jne
cmp
pop
fs
inc
sbb
xor
arpl
fwait
xor
test
aas
stc
inc
dec
pop
sub
ret
ja
vpshaq
mov
dec
aam
cmp
orl
nop
test
pop
cmp
mov
pop
pop
mov
ss
push
add
ret
flds
mov
ja
inc
test
insl
stos
adcl
outsb
stos
sub
in
int
cmpsl
leave
xor
pop
mov
les
lock
push
mov
cld
add
loopne
jecxz
call
lea
adc
insb
mov
push
cmp
and
sbb
enter
arpl
push
push
mov
int
lds
pop
aam
bnd
lcall
sub
cs
pop
add
sub
add
sbb
inc
fsubrs
cmp
mov
jl
insb
pop
mov
sub
sbb
cltd
ja
sbb
cltd
xor
mov
in
cwtl
sub
mov
cmpb
out
ss
out
daa
ret
sbb
or
lahf
jbe
in
add
mov
mov
mov
jmp
sbb
int
xor
mov
mov
mov
fistpll
sbb
lea
or
mov
pushf
fldenv
iret
arpl
jo
int
xchg
pop
xchg
adc
movsl
push
orb
fisubl
or
int
lahf
or
push
sub
in
nop
xchg
aad
fisttps
add
stos
sbb
xor
cli
out
fucomip
jmp
out
inc
fs
sub
in
ljmp
jae
iret
and
mov
push
popf
cmp
je
lcall
in
movsb
mov
inc
push
add
dec
push
inc
pop
movsl
outsl
movsl
cmp
sub
xor
fmull
cli
sub
das
xchg
out
xor
push
inc
in
pusha
xchg
les
mov
cmp
popf
je
iret
or
pop
lahf
mov
cltd
sbb
jae
fstpl
into
popa
fbstp
fnsave
mov
stc
nop
mov
lds
lret
movsl
imul
lea
pop
movsb
lds
pop
mov
inc
leave
pusha
mov
fs
pop
outsb
out
inc
pop
and
sub
sti
jmp
daa
sbb
ljmp
ret
call
mov
xchg
test
fwait
sbb
cli
repz
sbb
stos
ret
shl
rclb
pop
orb
inc
dec
fdivrs
mov
mov
inc
shll
lret
mov
cld
bound
jle
dec
es
dec
xchg
testb
das
pop
and
div
js
sbb
lds
mul
mov
loopne
test
insl
push
mov
mov
add
cld
jnp
dec
sbb
xchg
cmc
inc
ficompl
rcr
mov
arpl
jmp
dec
daa
mov
out
sbb
xor
fldt
lds
inc
pop
rcrl
stos
mov
pop
mov
push
scas
mov
lret
or
loope
stos
mov
jae
seta
fwait
clc
mov
jo
enter
je
pop
das
mov
mov
lds
dec
pop
fcmovnb
cmp
cmp
jge
pop
idivb
sahf
mov
mov
jmp
stc
nop
mov
lret
mov
hlt
push
in
aas
repnz
ficoml
mov
xor
mov
xor
inc
roll
mov
push
lret
xlat
std
inc
mov
jne
xchg
mov
inc
popa
in
cwtl
pop
ror
push
mov
sub
adc
sbb
fnstenv
aam
int3
arpl
dec
pop
push
ljmp
xor
sub
pushf
cli
rclb
or
jg
loopne
and
decb
adc
gs
out
mov
jmp
nop
out
das
cmp
lods
mov
js
and
mov
not
jo
add
pop
repnz
mov
loope
ss
scas
cmp
mov
mov
mov
push
pop
push
inc
xchg
cmp
out
mov
popf
outsb
xchg
adc
sub
add
inc
push
into
enter
jns
mov
or
adc
sub
adc
pop
repnz
mov
lock
lea
jp
mov
push
cmp
aas
dec
jle
jmp
bound
push
push
or
lods
fcoms
fadd
or
xor
aad
mov
mov
mov
outsl
outsb
loope
adc
mov
testb
add
inc
dec
test
dec
pop
in
inc
inc
dec
xchg
lahf
or
sub
shl
inc
sub
sub
out
add
fimuls
imul
cmp
rclb
or
mov
fsubl
in
std
adc
aam
cwtl
int3
jo
inc
fcompl
mov
and
or
mov
out
add
mov
cld
mov
rep
aas
and
ret
push
out
adc
inc
xor
push
call
sub
popf
out
sbb
sbb
mov
sub
loope
cmp
jmp
push
cltd
pop
pop
scas
cmp
aaa
daa
sbb
xchg
stc
sub
jmp
sbb
adcb
stos
inc
and
fwait
jbe
dec
insl
cld
cmp
std
push
loop
out
std
mov
cmpsl
cmpsb
and
inc
imul
lret
or
fcmovbe
mov
stos
add
sub
jne
in
ds
pop
jo
xchg
sub
mov
cli
out
xchg
nop
mov
int3
jno
bound
fisubrl
popa
mov
mov
lds
mov
fs
jne
call
cld
stos
ret
fisttpll
xor
add
scas
sbb
fidivs
cs
jo
into
rcll
enter
cmpsb
mov
outsb
in
xlat
or
outsb
lcall
and
lods
mov
mov
clc
es
das
dec
ret
lret
lock
out
pushf
mov
les
push
mov
in
pop
mull
and
test
mov
jae
loope
pop
movsl
cld
adc
push
or
cwtl
pop
cmp
xchg
dec
sub
imul
cmc
jno
pop
lea
jbe
dec
xchg
lock
std
inc
mov
sub
adc
jecxz
add
js
xchg
shl
jnp
push
cltd
push
push
mov
aas
jo
fbld
xchg
cmpsl
add
bound
loopne
inc
data16
inc
loope
rclb
lret
xchg
loopne
fcmove
das
xchg
add
outsb
int3
iret
enter
cmc
mov
or
adc
xchg
mull
insl
jp
int3
out
adc
inc
dec
xchg
loop
insb
adc
clc
push
test
sbb
xchg
dec
push
xchg
outsb
or
lret
aam
xor
sub
and
pusha
test
shl
out
push
sbb
cmp
mov
lret
push
das
adc
inc
data16
push
shll
sub
or
out
adc
pop
shlb
data16
nop
push
leave
push
push
and
cmpsl
dec
cmc
lret
mov
pop
xor
jmp
add
lds
jo
and
icebp
enter
jp
decb
cmpsb
xchg
inc
push
add
sbb
loopne
pop
xor
xchg
cmpsb
inc
in
mov
adc
sbb
pop
mulb
cmp
je
mov
inc
dec
or
hlt
mov
dec
sub
mov
loope
sub
lret
push
test
and
adc
mov
xchg
sbb
aam
sti
inc
sbb
sbb
cmp
add
jl
pop
and
jecxz
xchg
add
dec
push
sbb
jmp
loope
fnstenv
shrl
rcrb
shlb
lods
in
lcall
cwtl
fs
adc
test
std
mov
mov
xor
jae
or
xchg
pop
xlat
js
leave
sub
pop
ljmp
cmp
icebp
xor
inc
cltd
add
andb
mov
inc
out
adc
sub
jl
sub
mov
fdivr
mov
pop
ja
xchg
test
pop
cmc
jb
leave
jl
sub
sbb
inc
imul
mov
or
jge
sti
push
int3
dec
push
sub
stc
dec
mov
in
cmp
out
aam
dec
mov
cmp
xchg
call
call
sbb
jmp
and
xor
jmp
addb
pop
jle
lods
xchg
cmp
dec
jne
push
cmp
pop
add
push
cmp
data16
js
jmp
jno
cmp
cltd
jp
jmp
pop
push
dec
add
fwait
cmp
lcall
sub
cs
notb
cmp
adc
insl
cmp
dec
dec
sbb
pushf
pop
cmp
mov
aad
roll
pop
cmp
popf
push
out
seta
xor
add
inc
dec
lret
mov
pandn
or
sbb
sbbb
dec
pop
stc
dec
pop
cmp
dec
outsl
adcb
fdivs
xchg
push
mov
lahf
ss
mov
cmp
dec
in
sbb
mov
movsb
mov
push
popf
sub
gs
mov
and
mov
loopne
mov
push
stos
ret
pop
sbb
loope,pt
repnz
insl
add
dec
push
jnp
pop
xchg
shl
or
popf
sub
and
pop
jae,pt
arpl
mov
rcrl
jns
das
rcr
mov
icebp
jbe
in
sub
dec
scas
mov
dec
enter
scas
lds
mov
fidivl
fs
or
jp
jno
push
aaa
aam
imul
mov
int
rol
outsb
xchg
sub
sbbb
pop
shrl
mov
icebp
movsl
mov
cmc
insl
add
out
ret
or
je
fs
pusha
aas
movsl
cmp
addl
stc
push
cmc
mov
push
add
ss
and
pop
xchg
or
add
xor
mov
mov
xchg
rorl
add
cmp
addr16
xchg
mov
mov
addr16
bound
mov
mov
fimuls
jge
inc
push
call
insb
xchg
outsl
push
lea
pop
push
int
cmp
pop
loopne
cmp
ret
pop
xchg
nop
jbe
outsl
test
js
fnstcw
mov
sub
inc
dec
ljmp
scas
jl
loope
xor
xor
lods
jmp
fimuls
orl
aam
das
lret
hlt
leave
pusha
add
leave
xor
ret
pop
sub
out
dec
loope
andb
jecxz
pushf
xor
pop
cmc
xor
pop
jl
out
repz
mov
jp
imul
push
jmp
push
sbbb
popa
mov
xchg
mov
test
loop
dec
loop
pop
sti
xchg
inc
in
pop
push
push
jecxz
gs
into
in
rcrl
mov
imul
cmpsl
shll
push
gs
sub
mov
lock
or
aas
lahf
test
or
cmpsb
nop
daa
fcoms
es
sub
dec
lea
inc
stos
inc
je
jmp
jnp
add
lahf
xor
add
test
and
sarl
xlat
stos
clc
sbbb
lret
mov
add
pop
jge
lds
push
out
jl
cltd
test
int3
xchg
sub
je
out
push
cwtl
fidivl
je
push
mov
ret
fbstp
aas
ss
sbb
jmp
fidivs
insb
call
and
mov
testb
xorb
mov
stos
inc
lcall
mov
and
movsb
cmp
je
dec
mov
les
mov
inc
add
mov
xchg
xchg
push
daa
mov
out
inc
adc
pop
inc
repnz
pop
cmpsl
inc
daa
mov
std
lahf
insl
add
adc
mov
pop
outsl
push
xchg
xor
cli
jecxz
lea
add
adc
test
dec
in
movsb
sbb
mov
loope
and
add
sbb
cmp
cmp
in
fwait
pop
out
sbb
inc
add
sbb
sbb
or
xor
dec
jecxz
in
pop
sbb
xchg
dec
push
xchg
sub
shlb
pop
push
sbb
mov
cmp
cmp
add
cltd
xor
sbb
adc
add
and
lret
jecxz
xchg
adc
fwait
xor
popf
xor
lret
cli
loope
int3
adc
testl
sti
call
xor
xor
iret
pop
repnz
lock
into
push
cli
cmc
mov
iret
xor
std
clc
jg
sub
repnz
cmp
add
push
ljmp
decl
jns
cmp
loope
pop
adc
out
add
sahf
xor
dec
call
push
ljmp
int3
arpl
mov
and
cli
sbb
pop
cmp
aaa
into
daa
out
insb
pop
sti
jne
sub
fidivl
cmc
fbstp
out
xor
clc
xchg
sub
hlt
xor
sub
mov
sbb
xchg
cs
hlt
push
out
sub
jle
sbb
popa
clc
sub
pop
mov
jmp
test
xchg
rep
inc
and
pop
repz
add
sti
xor
inc
fisubrl
xchg
daa
add
sbb
add
mov
adc
cmpsb
cmp
inc
or
pop
or
daa
mov
dec
adc
aad
hlt
pop
call
jb
push
push
xlat
outsb
aaa
les
stc
loope
mov
fs
loopne
jmp
inc
xchg
and
push
daa
push
fs
xor
andl
add
hlt
push
movsl
sub
sbb
xchg
pop
cmc
stc
sub
sub
pop
cmp
xchg
xchg
push
jmp
cli
xchg
xchg
shrb
xchg
je
ret
jno
push
scas
inc
xchg
hlt
mov
xchg
shrb
cli
adc
mov
add
into
loop
dec
adc
push
nop
pop
dec
jecxz
mov
add
xor
pop
popf
xor
stc
outsb
add
filds
dec
jae
ret
pop
daa
xchg
in
dec
jns
jbe
sbb
or
imul
mov
adc
imul
mov
lea
sub
pop
pusha
loopne
xchg
adc
xor
std
push
test
lods
mov
or
add
insl
movsb
sub
out
repz
test
inc
sar
xchg
push
arpl
rcrb
mov
lods
inc
movsb
adc
mulb
fwait
cwtl
adc
dec
mov
xor
fwait
adc
inc
rcl
mulb
xchg
adc
jmp
adc
imul
xchg
cmp
xchg
mov
out
cmp
jns
popl
fdivl
mov
loop
pop
and
push
mov
ret
mov
adc
testl
aas
loop
stos
pop
popa
adc
xchg
cmp
into
insl
mov
mov
mov
shl
jle
pop
stc
nop
mov
add
push
js
js
cli
arpl
das
imul
inc
testl
int
data16
popf
call
pusha
imul
xor
xchg
sub
mov
inc
aad
push
scas
into
fnsave
lret
loop
f2xm1
das
subl
push
test
or
dec
loop
icebp
xlat
outsb
daa
subb
test
cmpsb
xcrypt-ofb
cmpsl
imul
sub
mov
stos
dec
inc
fdivrs
dec
pusha
cmc
lcall
dec
call
mov
insb
rolb
lea
mov
loopne
stos
adc
sbb
cmpsb
out
rcl
pop
cmp
fisttps
or
xor
sub
aad
in
mov
xlat
aas
ficomps
or
aaa
test
repnz
pop
repz
in
subl
or
mov
adc
shrl
cltd
add
mov
jb
sbb
cmpsb
jae
add
adc
out
gs
and
cltd
xor
inc
stos
inc
jns
jnp
iret
mov
sub
sahf
and
test
inc
push
ljmp
jno
or
out
mov
clc
hlt
das
into
jle
les
lock
sarl
out
xor
in
fbstp
clc
xor
lret
jle
add
ret
cmpsl
cmp
outsb
xor
or
js,pn
dec
cmc
cmp
jp
cmpsl
sarb
mov
push
push
jb
cltd
dec
jb
mov
test
pusha
pop
jbe
cmp
dec
mov
ret
xor
fadds
lret
push
shl
mov
je
test
or
dec
lahf
dec
in
insl
push
lret
xor
es
arpl
in
dec
sbb
pop
mov
mov
aas
out
insl
ret
fildll
dec
les
cld
rolb
push
mov
mov
mov
negl
cmp
out
jmp
out
mull
lds
movsb
xchg
xchg
movups
rolb
adc
lcall
sub
fistpll
insl
lods
test
inc
mov
sub
imul
sub
negl
jae
movsl
pop
aaa
pop
jmp
es
fcoms
pop
push
int3
pop
ret
aam
mov
sub
dec
mov
insl
xchg
imul
xchg
sub
cmp
ret
xchg
fimull
movl
data16
cmp
aad
xchg
xchg
cmp
pop
rcrb
rcrb
jns
out
push
inc
ret
inc
mov
jbe
push
mov
and
call
sub
xor
stos
fistpll
int
sahf
shlb
ja
and
pop
les
icebp
cmp
adc
icebp
adc
xor
mov
in
fisubs
aad
out
mov
or
mov
fdivl
addr16
data16
mov
popa
bound
nop
aaa
sub
xor
cmpsl
mov
add
cwtl
mov
sub
lcall
jae,pt
test
lret
xor
pop
mov
pop
out
pop
into
jmp
mov
jl
or
pop
int
xor
jbe
inc
shll
xor
repnz
sub
adc
inc
fwait
aas
sub
mov
cwtl
mov
sub
in
mov
ret
in
xchg
inc
test
stos
adc
pusha
push
scas
popa
mov
lock
mov
push
xchg
xchg
ret
ja
int3
xor
rcll
jns
mov
and
fiadds
call
lods
jbe
cmc
push
call
cltd
fchs
sbb
push
pushf
mov
in
test
mov
scas
jno
in
in
mov
test
mov
fisttps
fcmovb
int3
arpl
iret
das
loope
adc
sbb
push
stos
sbb
adc
push
scas
pop
cltd
adc
xchg
fnstcw
dec
mov
sbb
inc
test
insl
pop
into
dec
jg
addr16
sub
xchg
xor
xchg
popa
aaa
into
and
adc
inc
jo
movsb
inc
dec
cld
and
inc
jg
cmp
dec
out
xor
js
and
dec
xchg
mov
push
flds
lods
pop
lret
daa
movsb
pop
jp
mov
sti
cmp
dec
fcoml
mov
cli
push
rol
push
xchg
sub
mov
cmp
dec
and
in
push
fisubs
pop
or
cmp
outsl
inc
push
sahf
xor
bound
dec
outsb
pop
aad
inc
aas
call
les
orl
les
fimull
sbb
mov
jg
push
cmp
xchg
sahf
xor
lods
jecxz
inc
mov
repnz
les
loope
mov
jecxz
lret
mov
xor
dec
jns
xchg
mov
pusha
cmpsl
cmp
add
cltd
shl
xor
add
push
mov
jmp
iret
and
lods
clc
inc
sti
mov
mov
cmp
fdivrl
lcall
dec
movsl
pop
mov
pop
out
out
and
add
mov
imul
cli
xchg
lea
pop
sbbl
sub
insl
insl
lcall
jne
stc
ret
pop
aad
fildll
mov
mov
divl
mov
sti
jae
push
aas
icebp
inc
in
mov
xor
dec
aad
adc
jbe
inc
mov
nop
rcll
inc
mov
adc
pop
mov
xor
outsl
fwait
cli
ss
cmp
adc
xor
sbb
out
jg
cmp
fs
and
in
inc
fisubrl
pop
call
mov
stc
inc
cltd
xlat
mov
sbb
mov
sti
jg
stc
popf
rol
xchg
sub
popa
hlt
dec
cmp
pop
jmp
jp
ds
icebp
and
inc
cmc
es
xor
out
xchg
sbb
fiaddl
or
cmpsl
fdiv
mov
fidivrl
add
fmul
out
fcmovnbe
lock
inc
lret
mov
push
mov
mov
pusha
cwtl
pop
sahf
xor
mov
call
outsl
repz
dec
push
adc
sbb
adc
xchg
lea
mov
bound
inc
mov
xchg
adc
popa
stos
mov
dec
out
xchg
popa
fwait
add
push
inc
outsb
jbe
imul
jg
bound
sbb
xchg
loopne
enter
sub
inc
fists
lahf
test
scas
popa
lret
int3
push
mov
push
add
jns
aad
pushf
sub
push
js
orl
loopne
mov
nop
push
mov
lea
jl
and
mov
das
lods
or
aad
or
lcall
dec
push
mov
mov
pop
test
pusha
outsb
or
push
push
mov
imul
cmp
xor
dec
iret
dec
jecxz
outsl
leave
inc
xor
lods
ljmp
int
fisttps
cmpsb
testl
popf
mov
in
xchg
and
testl
inc
pop
and
mov
sbb
mov
nop
sbb
push
sbb
sub
xchg
mov
jb
jns
sbb
inc
xor
jne
pop
dec
adc
pop
in
add
pop
mov
adc
sti
jne
xchg
dec
lods
add
cltd
cli
mov
leave
or
lds
daa
pop
cmpsb
stos
xor
fsqrt
xchg
js
frstor
loope
enter
mov
mov
mov
bound
ljmp
add
fisubrl
lock
fsubl
test
mov
out
outsl
push
dec
mov
arpl
insl
or
xchg
or
mov
cwtl
adc
loop
sub
sarl
ss
xchg
xchg
xchg
mov
add
sbb
negb
jnp
outsb
and
cmpl
sbb
xlat
and
and
icebp
inc
inc
mov
icebp
xor
xchg
adc
cmp
mov
sbb
mov
add
sub
push
scas
pop
push
cmpsb
loope
pop
push
ret
test
sbb
mov
hlt
xor
mov
fists
adc
stos
fwait
lods
pop
es
out
jae
push
movsl
repz
rol
jecxz
fidivrl
lret
and
lahf
jne
adc
test
ret
pop
xor
jle
test
xchg
xchg
jo
dec
mov
cwtl
mov
fimuls
xorl
mov
jecxz
je
cltd
xchg
rcrb
inc
gs
addb
enter
adc
aaa
xchg
testb
adc
cmpsl
cld
pop
ret
lds
loop
sarl
stos
leave
movsb
insl
rcrl
cld
xchg
lods
rorl
ret
addr16
jecxz
or
pushf
xor
mov
stc
nop
pop
xchg
jae
add
and
push
adc
adc
and
pop
adc
sbb
js
jle
jmp
lds
loop
dec
cmp
fildl
cmp
sti
inc
pusha
cmpsb
inc
mov
dec
mov
or
fwait
jg
movl
out
insl
outsl
xchg
xchg
ds
and
bound
int3
push
sub
je
sub
insl
pop
push
lret
xor
or
sbb
dec
jbe
imul
mov
xchg
mov
xchg
cs
adc
mov
shrb
pop
mov
negb
and
imulb
cli
dec
mov
push
add
mov
sbbb
sbbl
mov
mov
bnd
int
lea
mov
out
sbb
sbb
sub
aam
adc
rcrl
cmp
jae
loop
dec
aaa
stos
adcb
je
repz
cli
dec
rcll
cld
xchg
add
dec
mov
ret
movsb
pop
fidivs
addr16
into
ret
pusha
pusha
notl
mov
xor
ja
push
inc
cwtl
leave
push
and
sbb
inc
fisttpl
mov
push
sbb
popf
mov
push
xchg
xchg
gs
popa
inc
dec
js
jno
mov
add
addl
insb
mov
cmpsl
and
cltd
lds
loop
stos
imul
mov
hlt
sub
out
lods
cmp
inc
and
fidivrl
or
ja
inc
dec
sbb
inc
dec
ret
pop
cmp
das
mov
mulb
jecxz
dec
push
sbb
outsb
pop
lret
dec
xor
sbb
inc
mov
jbe
push
out
push
mov
sbb
pop
mov
das
push
jle
xchg
addr16
in
pushf
dec
dec
lds
sbb
lock
cltd
lea
out
dec
loopne
les
mov
out
enter
fwait
sbb
or
pop
into
mov
inc
fsubr
ds
dec
jg
and
clc
sub
pop
xchg
mov
rcrl
jg
jns
xchg
jns
cmp
lahf
xor
stos
pop
int
arpl
xor
inc
int
fistl
xchg
inc
fdivp
dec
fsubl
pop
test
repz
mov
sarl
rorb
adc
ljmp
call
lea
fisubrs
out
fcoml
adc
lahf
xchg
xor
js
add
adc
adc
pop
xchg
cmp
jne
mov
inc
stc
jl
insl
inc
lods
mov
lods
push
ljmp
sbb
js
call
cmc
sarb
mov
and
adc
sbb
aaa
push
push
jnp
mov
sub
ret
inc
xlat
jno
ret
inc
test
aad
add
push
adc
out
jmp
cmp
cmp
hlt
sub
jnp
push
jno
in
rdmsr
jmp
xorl
jno
mov
sbb
xchg
xchg
jg
rcll
sbb
pop
in
xchg
mov
loopne
out
mov
and
int3
cmp
cmp
mov
sbb
mov
dec
test
out
sbb
enter
xchg
test
push
aaa
cmpsb
data16
hlt
pushf
icebp
cmp
mov
xlat
dec
push
cmc
hlt
sbb
pop
mov
sbb
push
mov
xor
stos
aas
insb
push
lds
cmp
cltd
sbbl
xchg
sub
sbb
sbb
cld
pop
fcomps
sub
or
loopne
cmpsl
sub
clc
scas
ljmp
mov
push
loopne
icebp
sbb
sbb
lcall
add
stos
mov
ret
ficoms
cmpsb
roll
dec
in
cmp
notb
adc
or
sbb
cwtl
out
cmp
fisubrl
es
jle
std
dec
rorb
add
cli
flds
or
orl
jo
xchg
mov
fs
clc
pop
xchg
decl
addl
pop
pop
adc
xchg
push
xor
notl
mov
xor
jno
rcrb
sub
and
mov
loope
mov
or
pop
mov
xor
inc
cli
pop
aaa
adc
cwtl
push
sub
mov
fdivl
rorl
adc
movsb
mov
popf
mov
ficoms
cli
fcomps
adc
inc
mov
and
jl
xchg
pop
or
lahf
ret
loope
call
int
add
inc
sahf
test
lret
das
std
aas
adc
sub
xor
add
pop
repnz
lret
jo
jb
lds
test
scas
xchg
jl
popa
ja
xor
push
outsb
movsb
repz
andl
sub
or
das
popf
mov
mov
xchg
add
es
lea
ja
sub
sbb
enter
add
and
xor
cmc
push
inc
dec
fisttpl
pop
xor
pusha
rclb
filds
in
fwait
cmpb
jo
ret
mov
cmp
jo
lret
inc
push
push
sahf
pop
inc
pop
add
xchg
xor
in
mov
andb
lret
jp
xchg
imul
add
adc
pop
mov
jle
jmp
lods
enter
lods
outsl
add
xchg
sub
ds
mov
sbb
cmpsl
jnp
and
inc
fcmovb
push
stos
test
adc
sub
jge
xchg
add
dec
rcll
sub
aaa
arpl
out
mov
sbb
aas
pop
adc
pop
push
fcoms
jbe
jnp
mov
or
xchg
push
xor
inc
mov
mov
lods
inc
lock
fwait
xchg
adc
sbb
fmull
add
dec
mov
rorb
push
push
push
mov
xor
xchg
xchg
cmp
jg
mov
lret
gs
mov
xlat
dec
cmpb
sbb
push
mov
push
mov
call
nop
ja
cmpsl
cltd
xor
sbbl
pop
bound
xchg
cmp
leave
popf
mov
lcall
pop
inc
mov
lcall
int
add
sbb
jg
mov
clc
outsb
mov
lea
stos
mov
fists
in
ljmp
push
rorb
sub
outsb
les
sbb
in
xchg
fistpl
add
loopne
clc
xor
adc
xorb
push
cli
add
mov
cmpl
jecxz
adc
imul
dec
rcll
std
es
push
inc
fimull
mov
daa
hlt
mov
adc
sub
idivb
xor
ja
push
mov
jno
dec
ds
fwait
arpl
xor
jl
inc
ljmp
xor
push
cmp
out
test
push
lret
cmp
pop
test
push
push
cmp
pop
hlt
sub
dec
sti
xor
ja
xor
repnz
sbb
je
dec
adc
cmpsl
dec
shlb
mov
ret
clc
inc
jecxz
cmp
push
mov
push
std
jb
nop
dec
lods
stos
pop
negl
cmp
or
pop
add
sahf
fwait
and
xchg
add
mov
or
inc
add
test
xchg
mov
cmc
adc
xor
sahf
ss
ja
or
in
andl
mov
or
fsts
push
add
xchg
cs
lcall
aaa
mov
xor
dec
jle
dec
mov
cmp
push
loop
or
mov
or
or
push
rclb
sbb
push
loope
mov
adc
jns
cmpb
dec
iret
pop
icebp
add
dec
xchg
push
imul
popf
push
mov
dec
mov
mov
std
push
push
arpl
xor
test
hlt
sbb
stc
imulb
ror
sub
or
test
fisubl
aad
fdivs
frstor
adc
add
mov
inc
ret
mov
mov
fidivrs
mov
add
sbb
sub
rcll
dec
sub
ds
sub
jne
sahf
js
ljmp
xor
dec
jne
mov
cmc
cmp
pop
icebp
pop
lahf
xchg
stos
push
xchg
cmp
xchg
mov
mov
shrb
test
jmp
jns
xor
hlt
xor
arpl
js
jl
arpl
xlat
dec
jns
stos
gs
xor
pop
and
and
cmp
push
dec
inc
push
xlat
outsb
inc
pop
xchg
cmp
pop
jg
sub
dec
adc
xor
sbb
pop
test
mov
adc
dec
sarl
xor
cmp
inc
cmp
or
dec
add
xor
outsb
addr16
xor
orl
pop
test
or
nop
daa
push
xchg
xchg
mov
jmp
aas
bound
inc
inc
jmp
pop
enter
bound
jg
cmpsl
push
test
xchg
sub
out
repnz
sub
jae
xchg
adc
enter
inc
mov
xchg
mov
shll
fisttps
mov
stos
nop
call
fcompl
in
or
push
mov
pop
punpckhbw
jg
lods
pusha
xor
lcall
inc
imul
mov
adc
xor
aas
sbb
inc
xor
lea
mov
cmp
stos
dec
pop
ret
sub
jge
stos
pop
imul
mov
movsb
cmp
dec
mov
xchg
scas
bound
push
jns
pop
arpl
mov
sub
es
mov
cmp
sub
pop
icebp
fwait
mov
or
sub
pushf
adc
outsl
mov
sbb
popa
xchg
iret
mov
sbb
cltd
insl
add
fsubs
shr
mov
or
jnp
xchg
pop
push
pop
hlt
cwtl
pusha
into
xor
sub
lret
push
fldl
in
dec
stos
pop
ss
mov
jp
outsl
mov
fwait
lds
mov
lds
sub
cmp
ret
sub
shlb
and
sbb
fisttpl
dec
insb
aad
mov
cmp
jle
shll
and
jnp
leave
dec
int3
xor
out
jge
fs
mov
scas
pop
insl
ja
test
sub
cld
mov
icebp
adc
jp
jmp
mov
lds
loop
insl
stc
cwtl
mov
sbb
mov
add
mov
xchg
sbb
ja
and
jg
push
popa
lods
je
inc
xchg
insb
arpl
mov
mov
jnp
dec
sub
cltd
push
mov
test
in
push
lret
cmpsb
xchg
dec
sahf
in
jge
mov
pop
pop
int3
pushf
jae
or
sbb
xchg
pop
push
jle
dec
push
hlt
sub
pop
pop
sarb
jae
push
dec
jo
add
cs
mov
mov
jmp
xor
in
xchg
out
jg
fdivs
arpl
hlt
rcll
daa
loopne
adc
xchg
sbb
or
push
xchg
mov
stos
pop
test
inc
add
fidivl
hlt
cmp
test
xor
mov
add
pop
cmc
clc
and
into
add
jns
xchg
xchg
and
sub
dec
fbstp
jecxz
pop
mov
fdivl
sub
mov
xchg
ja
scas
aad
jnp
cwtl
ret
mov
out
jle
mov
sti
pop
aad
lcall
xchg
cmp
and
movlps
loop
jnp
mov
mov
mov
mov
test
icebp
data16
push
inc
mov
pop
push
push
mov
inc
push
dec
test
jg
mov
add
xchg
ds
cmp
int
cwtl
cmp
fcoml
push
adc
xor
rcrb
pop
outsb
dec
sub
jg
lds
sahf
mov
lret
inc
cltd
xchg
and
add
test
add
pusha
cmp
inc
int3
cld
and
and
in
cmc
aam
xlat
std
cmp
add
cmp
mov
fsubrp
and
xor
jmp
mov
add
sti
cltd
push
jmp
sbb
mov
ficoms
push
iret
xchg
int
in
sbb
mov
fbld
sti
xor
mov
in
mov
inc
sub
and
test
rclb
or
lock
mov
fcoms
add
mov
ficoml
shrb
ds
inc
push
add
fstps
add
cs
out
push
mov
xchg
xchg
push
ljmp
mov
push
fstps
add
lahf
rclb
fucomip
andl
jae
jbe
mov
jl
movsl
insb
sub
inc
rorl
fsubs
popa
jbe
xchg
jp
xchg
xor
pop
enter
lcall
xchg
popa
sbb
test
push
sbb
sub
or
or
int
hlt
xor
fistpl
xor
jecxz
scas
mov
sarb
in
aam
mov
sarl
or
cli
pop
mov
clc
std
inc
dec
int
lods
fldl
jb
scas
dec
rorl
sub
sarb
call
mov
fcmovb
inc
loopne
pop
xchg
scas
mov
cld
pop
xor
mov
fbld
in
inc
mov
in
push
shlb
cmc
sub
jnp
fldenv
loop
xchg
mov
cmp
fadds
push
out
sub
popf
xor
dec
jne
jle
mov
sub
jnp
jo
repnz
and
testl
push
cltd
in
test
je
lret
or
clc
ds
outsl
sbb
dec
nop
inc
faddp
insb
mov
adc
lods
inc
repnz
sbb
lret
bound
mov
sbbb
pop
sahf
jmp
fnsave
es
mov
inc
fisttpl
mov
stc
loop
aaa
into
push
add
in
test
lahf
ss
jae
sti
test
xchg
sub
jo
inc
mov
ret
into
gs
mov
in
test
xor
mov
ja
sub
in
cwtl
jno
lret
fistpll
jmp
es
lods
inc
jo
test
in
lret
cmp
jmp
pop
mov
pop
sahf
push
mov
xchg
xor
inc
fimull
sbb
test
cmp
xlat
jg
push
mov
pop
out
sub
popf
xor
sub
popf
add
xchg
sub
pop
inc
fisttpl
iret
loop
rol
lcall
or
inc
xor
mov
data16
push
push
dec
fildll
lret
sti
push
fnsave
jg
mov
rcrl
jno
ljmp
inc
inc
stos
fsubrs
arpl
gs
testb
in
adc
sarb
sub
and
and
data16
mov
hlt
mov
jl
frstor
leave
xchg
repz
mov
out
push
adc
test
add
xlat
mov
lea
por
int
or
and
daa
push
frstor
push
jbe
sbb
das
test
shrl
jae
jp
fcomip
dec
pushl
jl
and
out
lds
fiaddl
clc
sbb
ds
in
pop
or
cmpl
push
clc
pop
or
sahf
xchg
push
leave
mov
push
cltd
xchg
dec
xchg
inc
mov
push
mov
adc
and
jg
xlat
sub
fsubrl
idivl
and
repz
movsl
shll
sbb
flds
mov
adc
mov
mov
std
mov
mov
mov
lock
std
xor
or
bound
shrl
dec
add
cmpsb
inc
jns
add
and
pop
stos
jne
inc
popf
jae
pop
pusha
clc
loopne
jbe
jg
dec
push
test
xchg
les
mov
and
insb
lock
test
push
add
fcompl
jge
ljmp
adc
arpl
iret
sub
aas
std
xor
inc
daa
imul
and
and
fs
or
jno
push
xchg
bound
mov
adc
mov
bound
ds
ret
loopne
andb
js
pop
aad
popf
aaa
mov
jno
add
ficomps
lret
test
bnd
iret
cmp
sub
fdivrs
shlb
xlat
jns
jns
lods
shr
mov
xchg
sti
pusha
notb
sub
cmp
mov
or
movsl
xor
push
cmp
mov
fwait
pop
push
sar
jae
in
insb
hlt
insb
sbbb
sub
sbb
mov
push
xchg
inc
cmp
hlt
sbb
cwtl
in
push
roll
mov
arpl
inc
out
sbb
mov
subb
aas
add
mov
mov
fldl
addr16
out
das
cs
dec
in
mov
out
ss
cmp
test
dec
leave
push
add
push
add
dec
mov
fistl
cmpsl
sub
inc
mov
push
cmp
inc
jmp
push
fcom
nop
cli
lret
pop
aam
push
int
sbb
sbb
loope
shrb
dec
lods
add
pop
aas
aad
xorb
ja
sub
inc
push
call
int
addr16
and
scas
cmp
xchg
xchg
les
ss
or
pop
mov
bound
cld
lods
inc
out
push
out
adc
pop
sahf
fsubl
sub
dec
pop
icebp
adc
sbb
jbe
mov
xchg
sub
ret
das
outsl
jne
jl
and
lea
and
dec
lods
es
dec
sub
ja
push
and
jp
or
dec
sub
add
jp
shlb
sub
xchg
lcall
call
dec
and
mov
popf
ja
les
leave
pop
incb
jl
movsb
xor
scas
dec
loope
hlt
xor
and
cmp
loop
adc
cwtl
add
pop
and
mov
jno
ss
jno
out
xchg
jo
mov
int
add
aam
pop
xor
pop
sti
sub
or
sti
mov
sub
dec
or
pushf
pop
cld
leave
call
fisubrl
fstpt
jae
fnstsw
rolb
scas
or
lahf
adc
pop
shll
mov
int
xor
pop
sarl
enter
or
jo
mov
inc
or
cmp
dec
xchg
pop
test
popf
jb
jns
nop
fadds
push
jp
sahf
lahf
add
test
or
sub
jne
lahf
out
add
jmp
lock
pop
cli
xor
add
lods
mov
cltd
jg
jne
pushf
outsb
faddl
insl
scas
lock
fldl
fiadds
das
mov
mov
icebp
xchg
or
pop
adc
xor
xor
daa
mov
cmc
daa
stos
bound
jne
hlt
jb
je
call
and
mov
mov
mov
and
fsubl
arpl
cmp
lret
and
adc
mov
stos
mov
outsl
lret
cmpsb
jg
andl
aad
fsubs
in
in
ret
add
cmp
xor
and
and
adc
or
jp
mov
jo
pop
in
pop
add
and
jo
xor
push
jno
add
in
mov
enter
fstps
flds
xchg
mov
mov
xchg
or
push
ja
cmc
pop
dec
bound
mov
scas
jno
fmul
mov
adc
mov
lea
pop
sbb
flds
insl
lods
jo
pop
jnp
sbb
nop
flds
mov
mov
call
add
push
mov
shlb
out
ja
mov
mov
mov
dec
or
sbb
lea
mov
scas
cs
jb
popa
or
cmp
movl
pop
std
std
push
push
push
fsub
nop
inc
sbb
mov
inc
fdivrl
popf
ljmp
or
std
mov
roll
mov
mov
aam
jge
push
jno
scas
sub
mov
std
mov
add
xlat
nop
inc
or
pop
fnstsw
inc
out
imul
mov
and
std
pop
cmp
xchg
ja
adc
cmp
cmp
and
jge
cmp
mov
add
pop
out
mov
outsb
std
xchg
inc
and
lcall
aas
sub
xor
aad
cmpsb
push
push
cld
les
fwait
jmp
mulb
or
movl
mov
mov
adcl
mov
cmp
cmpsl
mov
pushw
mov
mov
pusha
mov
js
add
inc
data16
cmpsl
and
xchg
stos
fidivrl
adc
sbb
fwait
dec
dec
push
xchg
pop
sbb
mov
sbb
push
cmp
and
jle
xchg
xchg
inc
sbb
inc
sbb
dec
push
or
pop
sbb
sbb
xchg
stos
fnstcw
sbb
ret
push
push
dec
or
fnstenv
add
inc
sub
jle
cltd
xchg
inc
pop
push
inc
sbb
or
dec
pop
push
pop
xor
mov
cmpsl
fdivrs
sbb
adc
xchg
dec
loopne
mov
insb
repz
daa
pop
add
inc
sahf
enter
lods
xor
out
fxch
cmp
mov
sbb
insb
mov
mov
push
push
ret
aas
sbbb
xor
repnz
pop
mov
jecxz
mov
push
sub
cmp
pushf
inc
or
mov
sbb
xchg
pop
adc
stos
cmp
jp
xor
xor
cltd
out
icebp
pop
add
and
sbb
jle
dec
adc
sub
mov
mov
sbb
icebp
pop
xorb
sbb
push
mov
xchg
cmp
movsl
sarl
dec
test
leave
xor
push
sbb
cwtl
adc
inc
and
mov
scas
sub
loop
dec
imul
cltd
or
aam
inc
fildl
insb
inc
test
mov
cmp
push
jecxz
inc
inc
lds
into
in
mov
arpl
lods
lods
ja
mov
outsl
icebp
push
jp
in
inc
inc
sbb
imul
mov
and
mov
ja
addr16
mov
mov
movsl
in
std
ret
mov
std
cmp
lods
push
sbb
dec
mov
sbb
and
enter
movsl
jmp
sarl
mov
add
sbb
push
mov
test
ja
pusha
int3
cmp
xchg
out
movsl
cld
ret
push
clc
xor
sbb
shrb
inc
or
mov
pop
add
aaa
xchg
jae
arpl
cmc
mov
js
in
addr16
movl
pushf
fwait
jbe
cwtl
int3
push
push
repnz
in
cltd
cmp
push
pop
cld
pushf
jmp
inc
fld
aas
sahf
lret
cmp
mov
mov
jb
pop
nop
out
pop
xchg
jnp
xchg
xchg
mov
movsl
mov
mov
in
sar
repz
pop
or
js
pop
fdivrl
ret
xchg
pusha
popf
scas
sub
adc
cmp
mov
mov
js
jle
fnstcw
lods
sub
mov
cmpb
stos
sub
je
clc
pop
dec
imul
jns
mov
mov
pushf
popa
push
sarb
outsl
out
sub
repnz
add
dec
movaps
xor
pop
lret
test
mov
jg
add
test
jle
ds
push
mov
out
addr16
idivb
movsl
or
push
test
aas
mov
xchg
push
int3
sbb
mov
ljmp
mov
xchg
inc
fstps
loope
push
stos
rclb
sub
out
mov
mov
loopne
xchg
mov
mov
test
push
cmpsb
cwtl
sub
cwtl
xorl
add
mov
mov
aad
imul
inc
push
outsb
mov
xor
in
push
jmp
mov
and
and
jno
dec
loop
add
mov
movsl
sub
and
jo,pt
adc
xor
pop
mov
lods
jge
dec
std
cld
fs
loop
push
arpl
mov
xchg
mov
or
leave
adc
outsl
jmp
cld
push
mov
sub
stos
xchg
cmp
mov
ret
push
aam
sub
repz
sbb
lret
or
sbb
les
mov
cmp
pop
jl
and
mov
lock
xchg
out
mov
xor
xchg
sub
lahf
mov
test
pop
int3
xor
js
add
mov
mov
or
gs
sub
push
inc
push
sar
mov
xchg
mov
ret
loope
dec
or
mov
xchg
movsl
push
fstpt
mov
sbb
push
out
scas
lods
inc
loopne
outsb
add
inc
cmp
cmp
xchg
fimull
fsts
mov
mov
rorl
or
push
pop
in
sbb
popl
sbb
iret
sub
test
sub
mov
stos
xor
ret
and
insb
inc
cli
push
push
ja
fwait
movsb
push
or
push
shlb
xor
test
test
fiadds
jae
add
inc
adc
out
dec
xchg
mov
flds
enter
push
mulb
ret
xchg
inc
adc
and
jmpw
xchg
cmp
aaa
cltd
out
insb
sbb
and
inc
pop
xchg
cmp
pop
adc
push
lcall
sbb
xor
xchg
mov
pop
cld
or
mov
sahf
pop
stos
sub
and
push
add
out
push
rcll
pop
cld
xor
mov
sub
fdivr
mov
and
mov
cwtl
das
mov
pushf
mov
into
inc
scas
xor
xchg
sub
repz
ljmp
xchg
or
arpl
sub
or
jae
popf
aaa
cmc
faddl
movsb
cld
mov
imulb
xor
fistpl
mov
push
add
xchg
iret
mov
jns
sbb
mov
sbb
inc
inc
shrd
ret
add
inc
popf
into
mov
lcall
mov
mov
scas
movsb
xor
cmp
fwait
or
push
add
push
imul
imull
xchg
cmp
enter
sub
in
inc
test
cli
das
mov
mov
push
stc
lret
jae
cmpsb
cmpsb
adc
out
rorb
shl
in
xor
mull
sub
sbb
repnz
push
or
cmpsb
dec
pop
sbbb
xchg
xchg
les
cmp
cmp
sbb
orl
push
sti
push
loopne
mov
xchg
aas
mov
jnp
lahf
mov
xor
addr16
bound
aad
insl
inc
gs
add
into
pushf
inc
cmp
jbe
je
sub
jl
push
sar
dec
cmp
and
xor
lods
sub
clc
int
sahf
push
jne
scas
sub
fidivrs
ss
sub
mov
sbb
repz
cmp
jge
lret
pop
pop
jmp
mov
or
or
imul
pusha
cwtl
xor
popf
inc
ror
mov
push
add
ja
push
mov
movsl
xor
scas
and
sbb
cmp
push
cmp
jo
mov
adc
push
stc
sbb
jmp
add
or
pop
lods
xor
aas
fwait
add
dec
or
ss
iret
jmp
aad
mov
mov
sbb
or
pusha
jmp
pusha
or
int
add
cli
sbb
in
mov
mov
addl
stos
jb
out
or
pop
add
lret
cmp
mov
sarb
mov
aam
in
xchg
jmp
jb
mov
test
mov
leave
and
jle
cld
pop
shll
inc
add
adcb
inc
setbe
fnstenv
loopne
idiv
testl
inc
in
add
xchg
inc
push
pop
scas
das
mov
xchg
add
ss
lods
sub
xor
pop
sub
int
sbb
sbb
psrlq
add
push
push
int
cmp
aas
inc
or
shl
iret
pop
xchg
pop
movsl
fldcw
push
stc
lods
in
jne
mov
xor
mov
mov
imul
jge
xor
fxch
xchg
jae
mov
push
sbb
clc
xor
mov
mov
dec
push
shll
add
sbb
pop
bswap
pop
out
inc
adc
dec
lods
sub
in
cli
pop
pop
dec
mov
enter
cmpsb
pop
dec
or
out
nop
inc
popf
cli
xchg
inc
test
mov
sbb
sbb
xchg
aam
inc
adc
mov
or
xchg
push
sub
int3
aam
or
sbb
int3
xchg
lcall
flds
dec
outsl
cmc
mov
xchg
mov
mov
fs
push
xchg
xlat
jnp
leave
xchg
icebp
imul
xchg
fwait
xor
outsl
mov
mov
jl
mulb
lock
xor
stc
cmp
clc
fs
cmp
scas
fstps
pshufw
mov
out
push
fstpl
mov
xor
jle
sub
ret
xlat
scas
cs
sbb
mov
push
stc
pop
pop
outsl
rcll
push
enter
pop
ret
mov
loop
xor
xchg
jl
mov
mov
and
adcl
dec
ljmp
sbb
scas
dec
mov
xchg
jecxz
jge
xor
orl
out
jae
jnp
movsl
push
sub
jne
xchg
cmp
cld
clc
lock
sti
ds
sub
dec
jg
pop
jl
jl
or
jbe
push
cmp
ja
lds
stc
sarb
sub
xchg
and
repz
inc
aad
mov
pop
add
test
pop
ret
or
adc
jae
loop
xor
aad
and
addr16
std
pop
mov
rcll
dec
or
mov
arpl
adc
loope
pop
idivl
ljmp
orl
scas
movsl
mov
repz
jg
in
jae
jo
xchg
dec
jmp
push
in
mov
pop
lret
cld
mov
pop
adc
js
inc
mov
test
mov
adc
pop
std
cltd
cmp
aad
loope
mov
mov
mov
xchg
aas
push
scas
xchg
inc
push
inc
adc
jne
int3
dec
lock
cwtl
call
les
enter
int
fwait
pop
sbb
push
mov
pusha
sqrtps
daa
fcompl
jecxz
push
dec
lgs
mov
mov
fidivl
push
or
subl
sub
arpl
sahf
jns
jne
push
jo
push
push
xchg
iret
lods
push
jge
mov
mov
cltd
sub
rclb
into
sbb
dec
in
lret
push
in
cld
xchg
adc
test
inc
aaa
popf
mov
test
aad
aaa
fwait
push
or
sbb
cmp
mov
fidivl
fldcw
repz
push
ss
mov
stos
cmpsb
sub
rorb
das
pushf
aas
mov
ss
pop
movsl
sbb
push
dec
mov
rolb
ljmp
ret
mov
insb
out
lods
xchg
out
jb
mov
or
repnz
sahf
call
sbb
cmp
sub
mov
stos
mov
stos
sbb
adc
push
push
inc
adc
push
adc
mov
mov
sub
cmp
xlat
shll
mov
mov
iretw
mov
jge
mov
out
test
xchg
add
jecxz
ficompl
jmp
mov
mov
js
inc
out
ss
popf
xchg
and
nop
mov
pop
add
ret
sub
mov
mov
push
repz
pop
fucomip
mov
jbe
cmp
jo
fs
repz
push
inc
out
push
sti
out
cwtl
mov
test
dec
xor
nop
cmp
test
test
cmpsb
adc
in
jne
inc
cmpsl
sub
jb
add
scas
lahf
inc
add
lods
mov
mov
int
pop
test
or
arpl
sbb
or
mov
add
orb
ljmpw
xchg
orl
push
clc
stos
std
jo
pop
rcl
imul
sarb
rolb
inc
mov
dec
adc
sbb
addr16
push
lcall
stc
mov
xchg
stos
sub
mov
pop
lods
sub
mov
mov
mul
lock
aad
ds
js
scas
cs
bound
push
add
mov
ds
test
scas
dec
or
push
sahf
cmp
mov
cwtl
adc
mov
xlat
push
leave
cmpsb
clc
dec
or
fldl
pop
out
push
shlb
mov
test
inc
cmp
cs
mov
test
mov
mov
nop
daa
inc
movd
in
push
into
cmc
push
lock
jnp
gs
and
cmc
int3
sub
jns
and
rclb
mov
out
imul
dec
xchg
aas
and
inc
les
int
sbb
scas
addr16
push
add
cmpsb
cmp
xlat
push
adcb
pop
pop
icebp
mov
xchg
pop
fimull
popl
push
mov
xchg
cmp
cmpsb
mov
mov
orb
in
in
aad
shl
fldenv
lea
fisubl
scas
test
testl
or
out
sub
imul
sbb
xor
test
mov
outsl
hlt
rcll
sub
add
xor
arpl
sub
push
add
cmpsl
xor
push
fadds
mov
jno
loop
in
xchg
push
cmpsb
xor
int
jg
inc
xchg
fwait
or
mov
lret
stos
js
hlt
mov
dec
ljmp
xchg
outsb
sbb
sahf
ret
xchg
test
mov
imul
mov
push
adc
daa
sub
fs
gs
sti
adc
out
jne
inc
push
mov
pop
lds
jae
imul
ja
subl
pop
mov
push
push
rorb
daa
inc
or
fiadds
mov
aam
mov
mov
dec
pusha
xor
stc
les
and
arpl
xor
push
dec
adc
xchg
lcall
js
mov
bound
iret
mov
cmpsl
icebp
fs
push
lcall
mov
jnp
lea
xor
insl
ss
cmp
daa
pop
add
clc
test
movsl
sub
mov
add
mov
lods
inc
pop
imul
add
aaa
lcall
std
pop
out
fadds
adc
jle
and
sbb
jecxz
and
lahf
sbb
in
sbb
test
push
psrlw
add
bound
pop
add
cwtl
lret
xchg
xor
lahf
aas
push
daa
sahf
cmp
scas
cmp
dec
mov
or
fstps
mov
mov
mov
sub
sub
fdivrl
jge
dec
ss
xchg
call
clc
push
movsl
sub
jl
and
imul
and
pop
fucomp
jnp
bound
jp
and
and
cmp
push
es
pop
negl
aas
mov
cli
cwtl
inc
or
lock
arpl
or
mov
lods
popa
out
and
xor
stos
iret
in
stos
xor
sbb
pop
pop
xchg
mov
push
mov
jo
push
fadds
pop
xorb
nop
cmc
pop
ja
cli
pop
aam
in
insb
clc
or
xor
test
call
add
call
pop
mov
in
fidivs
ja
pop
clc
cmp
test
mov
dec
or
sub
xchg
lock
mov
leave
inc
xor
dec
jl
inc
adc
push
add
cltd
aaa
lahf
jb
push
call
sahf
shrl
add
scas
xor
add
or
ficoms
aad
gs
repz
addl
sub
shlb
add
lods
ss
ja
sub
cmpsl
jae
mov
test
pop
clc
into
mov
rcrb
data16
sbb
xchg
sub
fsubrs
inc
inc
or
dec
pop
mov
lahf
jno
scas
adc
mov
ljmp
lahf
loopne
push
sub
mov
pop
aas
ret
dec
shld
int3
jnp
xchg
cmp
outsb
pop
add
xchg
cmp
lret
cmp
out
in
sub
lea
xorl
jp
dec
or
xchg
inc
ret
or
inc
adc
test
es
sub
xor
movsb
jb
arpl
push
outsb
jmp
rclb
lahf
inc
loope
push
out
stc
pusha
xchg
testl
xor
movsl
adc
setbe
addr16
enter
mov
in
mov
mov
movsl
sub
mov
cltd
inc
clc
push
cld
data16
cmpsl
sub
mov
das
mov
jecxz
dec
bound
int3
je
sub
in
push
jbe
icebp
push
xchg
push
inc
and
sbb
xchg
sub
add
imul
lods
jl
xchg
sub
xlat
jge
push
test
inc
and
jns
in
xor
xchg
jnp
inc
pop
outsb
imul
jle
out
jmp
jmp
repnz
cmpsb
ss
mov
in
and
imul
dec
or
jp
xlat
cmpb
pop
stc
stc
and
stos
adc
into
test
pop
cld
movsl
scas
test
into
inc
adc
or
fisubs
mov
mov
add
test
mov
int3
jo
sbb
cmp
add
xor
addr16
dec
ret
jge
jae
push
adcb
sub
out
mov
aas
cmp
loopne
mov
pushf
dec
push
inc
bswap
xchg
les
sbb
dec
push
lea
add
in
outsl
fwait
inc
lahf
std
add
cmpsl
iret
xchg
cmp
in
adc
adc
jle
sbb
sub
fstpt
jecxz
loope
and
pop
mov
jge
push
mov
push
shll
inc
push
cmpl
bound
xor
add
cmp
add
out
icebp
inc
rclb
loope
xbegin
out
fnsave
xor
jp
sub
or
dec
pop
shr
imul
icebp
les
pop
pop
cmp
inc
test
pushw
fwait
push
add
dec
xchg
inc
push
rorb
data16
clc
pop
sbb
rolb
mov
push
loope
xor
fbstp
xor
mov
sub
sbb
call
cld
mov
mov
dec
xor
stc
bound
and
movsl
ficoml
andl
xor
shrb
fiadds
enter
aam
xor
mov
fcmovu
cmp
push
clc
xchg
ljmp
lea
xchg
mov
insl
out
stos
xchg
aas
dec
and
adcb
ja
out
push
shlb
xchg
ret
imul
add
movb
outsl
cmp
cmp
mov
adc
adc
dec
out
je
sub
test
or
ret
int3
xchg
adc
and
inc
push
aam
les
arpl
mov
jno
imul
mov
cld
mov
aad
adc
mov
and
push
sub
push
mov
cmp
jb
mov
add
cld
loopne
mov
test
add
in
testb
sbb
decl
fwait
lahf
inc
xor
pop
into
mulb
aad
call
mov
adcb
xchg
sbb
mov
inc
xor
or
add
push
fldenv
mov
add
or
in
pop
sub
into
loopne
icebp
push
push
arpl
or
mov
mov
push
stc
push
dec
movd
daa
mov
scas
pop
add
sbb
aaa
inc
cmc
mov
xchg
rorl
sbb
mov
cmp
and
xor
mov
inc
pop
rorl
or
loop
mov
mov
dec
add
test
and
cli
cmp
repz
mov
push
jae
or
scas
push
add
lods
push
out
sarb
sub
cltd
leave
in
jno
rolb
push
scas
or
mov
mov
jmp
mov
sbb
fimull
call
mov
and
jmp
clc
insl
ljmp
in
das
mov
fwait
cmp
test
ljmp
aad
or
movsl
sub
fildll
test
movsb
sub
cwtl
inc
or
jmp
and
insl
push
fnstsw
xor
inc
or
es
cmp
clc
mov
jne
inc
add
pop
js
dec
mov
cs
movsb
arpl
cld
data16
sub
sbb
insl
je
push
ss
test
and
std
bound
sarl
out
inc
sbb
ret
das
shlb
adc
push
or
push
ja
negl
clc
mov
nop
push
mov
test
mov
lock
fisubrl
push
std
add
mov
jb
popf
inc
repz
push
fwait
aas
enter
negl
mov
cmp
lret
xchg
sbb
pop
mov
scas
xorl
xor
cmp
mov
jno
inc
loope
and
clc
lahf
cmp
icebp
and
outsl
fsub
xchg
cmp
dec
ffree
xchg
pop
xchg
push
add
fisubrl
ljmp
or
pop
or
scas
test
and
adc
imul
mov
mov
int3
mov
cmp
imul
sub
cltd
adc
mov
dec
jecxz
ljmp
test
icebp
push
dec
mov
jecxz
fcomps
negb
or
pop
loopne
das
mov
hlt
dec
adc
inc
adc
mov
stos
stc
fs
jno
clc
and
xor
in
dec
jne
inc
fwait
test
cwtl
sahf
cmp
mov
fidivrs
lods
sbb
lahf
mov
in
imul
decb
or
mov
pop
cmp
addl
and
or
inc
adc
fistpl
push
xchg
stos
sub
push
in
mov
or
loope
or
pop
sahf
pop
sub
or
filds
aaa
cmp
lret
lahf
es
xchg
sub
movsb
addr16
lods
popf
or
daa
shl
insl
and
insb
mulb
xor
pop
xor
lea
mov
cmp
aad
cmp
and
leave
xchg
inc
xor
popf
insb
xchg
sbb
ret
jno
ja
and
iret
addr16
adc
mov
fcoml
pushf
cmp
mov
popfw
mov
loopne
xchg
pop
in
insb
lock
pop
clc
and
in
in
cmp
cltd
loope
sbb
dec
pusha
jae
mov
add
push
stos
enter
lahf
shrl
repnz
push
sbb
int3
xchg
mov
jmp
pop
mov
imul
adc
dec
fs
sbb
flds
jmp
jae
mov
mov
mov
jnp
in
fisubl
call
jge
das
lods
mov
pop
clc
cmp
ja
or
pop
les
ror
mov
jmp
ss
ja
xlat
popw
mov
xchg
outsb
adc
in
xor
addr16
subl
mov
clc
cmp
int3
mov
pop
jae
aas
xchg
ds
and
push
fistpll
adc
popa
inc
pusha
out
jb
lcall
clc
pusha
js
rorb
out
je
sbb
test
mov
sbb
shrl
mov
jge
dec
xor
loop
fsubrs
out
push
cmp
out
xchg
pop
dec
jge
mov
mov
add
outsb
fidivl
sbb
jp
xlat
xchg
mov
jmp
leave
jp
popl
push
jg
flds
outsl
rorl
outsb
pusha
in
fnsave
xchg
notl
mov
jne
sarl
arpl
xchg
loope
cmpsl
ss
imul
insl
xchg
out
sbb
inc
inc
adc
leave
push
mov
mov
mov
in
jno
mov
cmc
mov
rcl
jle
jmp
push
sti
cmpl
sarl
cmp
cmp
sbb
inc
out
out
jp
pop
fldcw
sti
and
lock
out
jmp
sub
jl
fidivl
and
add
inc
gs
push
mov
ret
hlt
stos
ret
idiv
mov
call
dec
adc
shl
pop
mov
cmp
sbb
pusha
and
xor
adc
push
clc
sub
sbb
aas
cwtl
inc
clc
divb
and
inc
or
sahf
in
loopne
jb
adc
and
xor
fprem
lret
loope
out
lock
xchg
jnp
push
add
insl
fnstsw
lock
fnstenv
lcall
xor
xchg
jns
insl
ss
ss
sub
push
xor
movsl
xor
sub
aad
mov
jne
imul
popf
inc
sbb
push
stos
sub
mov
mov
leave
mov
dec
push
shll
adc
out
xchg
iret
mov
aad
mov
jmp
fwait
scas
int
adc
lret
dec
out
push
adc
cltd
lea
mov
enter
daa
stos
sub
mov
lret
mov
add
inc
lcall
xchg
mov
mov
pop
sbb
mov
jno
ljmp
jp
aaa
sub
test
xor
pushf
aad
fs
or
popa
mov
push
in
push
add
fbstp
cltd
inc
adc
frstor
or
xchg
movsl
sub
mov
loope
mov
negl
dec
nop
jl
jle
scas
insl
mov
mov
les
out
lods
add
jg
pop
push
lock
in
mov
xchg
cmp
pop
std
dec
and
stos
inc
leave
lods
dec
ljmp
mov
mov
movsl
cmp
movsb
dec
out
mov
sub
stos
mov
push
mov
and
es
pusha
testl
push
sbb
cmp
mov
sub
mov
or
mov
mov
push
mov
and
mov
fistpll
dec
bswap
or
push
rcrb
das
mov
pop
inc
or
cmc
xchg
cmp
cli
push
sti
addr16
out
je
sbb
and
test
cmp
or
or
cld
sub
shll
stos
mov
icebp
lcall
pop
xor
aas
outsl
cs
fistps
pop
cmc
xor
fnstcw
and
pop
sub
test
dec
adc
jnp
fwait
aam
inc
or
aad
inc
adc
add
pusha
sbb
cwtl
das
pop
cli
out
sub
jge
cmp
adc
ds
pop
add
sub
mov
fdivrl
push
fidivrs
mov
leave
push
pop
in
xor
fs
add
movsb
xor
add
aaa
gs
or
xchg
jnp
jb
iret
lret
mov
in
orb
cmp
jno
mov
mov
iret
mov
scas
xor
repz
idivl
jl
gs
fwait
lock
inc
je
into
out
cmpl
pop
adc
pop
aas
mov
loope
nop
sbb
push
jmp
add
mov
jle
leave
xor
adcb
rolb
xor
mov
jb
outsb
push
int
push
aas
sahf
hlt
or
pop
inc
sub
imul
jmp
add
xchg
pop
stc
pusha
or
out
scas
push
lods
sbb
jno
loopne
lds
and
rcrl
push
inc
or
cwtl
cmp
enter
jb
test
std
bswap
xchg
cs
cmp
bswap
xchg
les
lods
dec
lret
mov
sbbb
pop
rorb
cmpsl
mov
push
mov
sub
repz
sub
mov
pop
cmp
lret
xchg
dec
mov
rorl
xor
icebp
mov
clc
bound
mov
fldl
pop
xor
xor
cwtl
aam
loop
int3
add
inc
daa
mov
inc
mov
dec
adc
xor
aam
insl
add
cmc
dec
in
repz
and
inc
test
and
cltd
pop
lret
out
test
and
in
pop
inc
pop
je
add
xchg
and
sbb
aas
push
cmp
mov
aaa
pop
hlt
push
mov
mov
fstpl
adc
dec
bound
aad
mov
mov
or
repz
sub
imul
test
jg
mov
rclb
cmpsl
add
dec
in
and
imul
ja
jecxz
je
and
cmpsl
ds
sbb
and
pop
dec
outsl
cmpsl
mov
ret
hlt
rolb
icebp
adc
and
cltd
fs
xchg
mov
pop
hlt
out
aas
cmp
pop
pop
hlt
pop
lcall
scas
mov
xor
push
mov
mov
cmpsl
adc
cs
xor
sub
test
jge
xor
rcrl
dec
in
repnz
and
insb
add
test
and
cwtl
pop
lret
aas
pop
in
in
push
inc
pop
jae
add
xchg
and
sbb
aas
adc
ss
hlt
mov
mov
mov
fcompl
adc
mov
popa
test
insb
mov
mov
or
repz
sub
imul
test
jle
mov
rcll
cmpsl
add
dec
in
and
lds
add
dec
jecxz
jae
and
test
clc
sbb
pop
dec
insl
cmpsl
ds
insb
in
sahf
rol
repnz
in
inc
adc
mov
xchg
arpl
xchg
mov
pop
cmc
out
aas
cmp
jge
cmp
lea
xor
mov
xor
add
outsl
xor
xchg
lea
cmpsb
adc
xlat
cli
hlt
mov
xor
sub
test
jl
xor
rcrl
dec
in
icebp
mov
and
add
stos
inc
jbe
mov
lret
pop
leave
jmp
aas
sbb
aas
pop
jno
add
outsl
xchg
in
les
add
adc
and
data16
aad
xchg
fcompl
fistpl
adc
mov
das
mov
insl
mov
mov
pop
aad
mov
sub
imul
test
scas
jp
stos
iret
adc
and
lds
insl
add
jae
jecxz
jb
and
test
and
enter
cmpsl
ds
imul
popf
mov
add
out
adc
jnp
adc
mov
xchg
bound
xchg
mov
mov
mov
mul
or
cmp
jle
cmp
hlt
mov
xor
lods
mov
xor
add
jo
push
mov
test
mov
cmpsb
adc
mov
stc
xor
sub
jge
push
call
iret
popf
outsl
push
iret
lock
in
icebp
lea
inc
imul
inc
stos
inc
jbe
mov
enter
leave
jmp
out
sbb
ds
jp
nop
and
adc
inc
fcoms
pop
mov
xor
cmp
adc
ficompl
or
fwait
xor
cs
cs
xlat
outsb
mov
mov
add
daa
shrl
sub
stos
pop
jp
mov
dec
dec
out
pop
lds
outsb
add
mov
ret
push
cmc
les
and
leave
pusha
dec
imul
pop
out
mov
in
inc
mov
xchg
popa
inc
fsts
mov
mul
push
aas
aaa
add
pop
hlt
mov
xor
stos
jnp
fsubrl
cltd
xor
fnstenv
push
mov
adcl
test
lods
div
mov
clc
xor
sub
test
dec
push
call
into
pushf
outsl
push
into
out
dec
in
lock
inc
imul
inc
stos
inc
jne
mov
xchg
leave
pusha
enter
sbb
out
sbb
lds
add
jp
and
adc
inc
fcoms
xor
pop
mulb
cmp
adc
fstps
or
fwait
xor
jns
pop
sub
xchg
cs
xlat
outsb
mov
mov
add
cmc
mov
shrl
daa
adc
stos
jns
enter
cmpsb
std
lret
dec
out
push
lds
outsb
add
mov
ret
hlt
ret
stos
inc
cmc
adc
leave
pusha
dec
push
out
fwait
mov
add
jnp
push
and
aas
popa
add
xchg
mov
mov
mov
mul
add
jg
ss
pop
hlt
mov
xor
test
mov
xor
fnstenv
push
mov
adcb
andl
lods
aad
repz
divl
lret
adc
jp
das
int
outsl
push
int
dec
in
out
lea
inc
imul
inc
stos
inc
je
mov
xchg
leave
pusha
out
ds
out
sbb
lds
add
jp
mov
mov
adc
inc
fcoms
xor
mov
xor
xchg
adc
fcomps
or
fwait
xor
sub
pop
sub
push
pop
jle
cs
xlat
outsb
mov
mov
add
cmc
mov
adc
stos
js
enter
cmpsb
cld
lret
sti
sbb
outsb
add
mov
shrl
ret
hlt
adc
and
leave
pusha
inc
cmpsl
ds
push
lds
add
jnp
or
add
nop
mov
mov
mov
mul
add
xor
push
pop
hlt
xchg
xor
test
adc
test
cltd
xor
dec
mov
adcl
insb
aam
adc
mov
divb
lret
adc
jns
das
int3
lcall
push
out
lea
inc
imul
inc
stos
inc
jae
mov
lds
ds
out
sbb
lds
add
jp
lea
mov
adc
inc
fcoms
xor
mov
xor
arpl
jge
mov
pop
repnz
fwait
xor
sub
pop
sub
cs
jle
outsb
mov
mov
add
cmc
mov
shrl
and
icebp
mov
lret
sti
leave
dec
out
sbb
lds
outsb
add
lahf
outsb
mov
mov
shrl
inc
adc
pusha
inc
cmpsw
ds
addr16
cltd
mov
add
jnp
or
mov
nop
pop
inc
mov
mul
add
xor
jg
xor
pop
hlt
xchg
xor
cmpsl
jnp
fldcw
cltd
xor
fnstenv
dec
mov
orb
andl
repz
cmc
xor
es
adc
js
das
lret
cltd
outsl
push
lret
in
dec
in
in
lea
aas
imul
inc
stos
inc
jb
mov
les
cmpsl
ds
out
jle
cmp
pop
imul
pushf
imul
mov
filds
adc
pop
mov
xor
bound
adc
pop
repnz
xlat
fwait
xor
sub
pop
sub
cs
jge
outsb
scas
iret
mov
add
cmc
mov
and
push
and
stos
push
jbe
mov
leave
cli
enter
sbb
lds
add
sahf
insl
mov
lahf
mov
stos
inc
repnz
pusha
inc
cmpsl
ds
out
cwtl
mov
add
jnp
or
cmp
add
mov
pusha
mul
add
xor
jg
xor
test
xchg
mov
xor
sti
fnstenv
dec
mov
jg
testl
shl
repz
inc
adc
ja
das
lret
push
lret
in
in
lea
imul
aas
stos
inc
jno
mov
ret
xchg
leave
pusha
in
ds
out
jle
cmp
pop
push
add
jp
mov
mov
pmaxub
rdtsc
pop
mov
xor
popa
cmpl
mov
pop
repnz
fwait
xor
sub
pop
sub
lods
jl
outsb
scas
into
mov
add
cmc
mov
and
push
and
stos
push
jne
mov
enter
dec
out
sbb
lds
outsb
add
popf
insb
mov
sahf
mov
stos
inc
icebp
adc
pusha
inc
cmpsl
ds
gs
xchg
mov
pop
jmp
or
jnp
or
cmp
cltd
mov
lea
pusha
neg
add
xor
jg
xor
hlt
test
xor
movsl
jnp
xlat
cmpsb
mov
xor
cli
fnstenv
dec
mov
jle
testl
shl
repz
xor
and
adc
jbe
das
leave
xchg
outsl
push
leave
ljmp
sbb
ds
inc
jo
mov
ret
pusha
ret
jecxz
ds
aaa
lds
add
jp
mov
mov
push
fldl
push
xor
mov
das
pop
mulb
cmp
adc
aam
repnz
daa
jns
pop
sub
lods
jnp
outsb
lods
int
dec
dec
cmc
mov
and
imul
stos
push
je
mov
adc
negb
das
dec
pop
outsb
add
pushf
push
and
stos
inc
out
adc
pusha
inc
arpl
jle
mov
pop
call
or
jl
or
cmp
lea
lods
pusha
neg
add
xor
jle
xor
cmc
test
xor
movsb
mov
xor
clc
fsubrs
dec
mov
lea
insl
rcrl
hlt
mov
xor
and
test
je
xor
leave
xchg
outsb
add
sbb
mov
sbb
stos
inc
outsb
nop
mov
ret
pop
shl
aas
adc
aaa
pop
imul
in
mov
fldl
cltd
push
fildl
or
and
pop
cmpb
mov
jl
mov
pop
repz
daa
jp
pop
es
das
lods
jns
insl
stos
int
dec
dec
hlt
mov
and
insb
push
pop
adc
movsl
jno
enter
test
ret
dec
out
sbb
dec
adc
dec
in
push
insb
add
mov
mov
inc
push
leave
pusha
inc
bound
jle
mov
pop
out
add
jge
push
and
aaa
pop
add
mov
stos
pusha
neg
incl
xor
jle
das
push
pop
cmc
adcl
andb
aad
lcall
dec
mov
lea
insl
rcrb
hlt
mov
lock
and
test
jae
xor
enter
jmp
mov
sbb
add
stos
inc
insl
mov
pop
shl
aas
adc
out
adc
pop
push
mov
jnp
xchg
mov
or
das
and
pop
cmpl
adc
rcrb
adc
mov
das
stos
js
insl
stos
int3
mov
dec
hlt
mov
pop
aad
push
push
adc
movsb
jo
enter
test
ret
repz
xor
dec
adc
add
lcall
add
mov
mov
inc
or
test
jle
mov
pop
out
add
jge
add
add
mov
test
inc
xlat
das
cld
jle
cs
pop
cmc
orb
andl
lcall
dec
mov
lea
insl
iret
pushf
adc
int
hlt
mov
out
xor
and
jne
push
out
xchg
xor
xchg
outsb
add
sbb
mov
sbb
insb
add
stos
inc
insb
mov
pop
mov
loope
jge
xor
add
gs
jnp
xchg
mov
or
inc
xlat
or
and
pop
cmpb
mov
jl
scas
rcrb
rcrl
adc
mov
das
stos
ja
insl
test
lret
cld
push
aad
push
sbb
repz
les
test
rorl
push
xor
inc
adc
inc
push
mov
cwtl
mov
stos
inc
jmp
mov
aas
or
pusha
ds
test
jle
mov
pop
in
add
jge
add
mov
mov
flds
test
neg
std
inc
xlat
cs
jle
sub
dec
pushf
xor
mov
lcall
dec
mov
lea
insl
into
fwait
adc
int3
out
hlt
mov
out
xor
pop
inc
adc
jno
xor
xchg
outsb
add
sbb
mov
sbb
insb
add
inc
imul
pop
mov
loopne
jge
xor
pop
xor
fs
jnp
test
mov
or
inc
xlat
or
pop
cmc
pop
jg
aad
jl
adc
rcrb
adc
mov
das
test
lret
cld
leave
hlt
mov
sbb
adc
mov
ret
adc
icebp
adc
outsb
add
cwtl
mov
xchg
mov
stos
inc
ljmp
pusha
cmp
pop
out
nop
mov
pop
in
add
jge
add
xor
add
mov
flds
cmpsl
pusha
neg
cld
inc
xlat
sub
dec
pop
cmc
orb
jg
jl
shll
lcall
dec
mov
lea
insl
int
adc
lret
out
hlt
mov
in
xor
push
inc
adc
jo
xor
lds
dec
in
in
and
cmp
cmp
and
fildll
jge
xor
pop
xor
arpl
and
or
inc
xlat
or
mov
sub
pop
jle
aad
jnp
adc
iret
lcall
and
das
test
insl
cmpsl
leave
mov
sti
enter
sbb
insb
dec
sbb
stos
dec
outsl
repz
ret
repz
xor
inc
adc
inc
dec
in
mov
xchg
mov
stos
inc
jmp
or
pusha
cmp
test
jle
mov
pop
jecxz
add
jge
add
xor
fwait
mov
test
pusha
not
sti
inc
xlat
sub
jle
sub
cmc
jg
pushf
xor
jl
rcrb
lcall
inc
mov
lea
insl
int3
cltd
adc
lret
mov
in
xor
sbb
ds
out
xchg
xor
les
dec
in
in
and
cmp
aaa
stos
inc
imul
test
adc
out
adc
pop
xor
bound
and
or
inc
xlat
pop
sub
mov
sub
pop
jge
aad
jp
adc
lcall
and
das
cmpsl
je
insl
cmpsb
enter
hlt
mov
sbb
insb
dec
sbb
stos
dec
outsb
repz
rcll
repnz
xor
inc
adc
inc
gs
in
arpl
jmp
or
pusha
cmp
inc
pop
out
mov
add
jge
add
xor
fwait
xchg
flds
pusha
not
cli
inc
xlat
sub
jle
sub
cmc
jle
pushf
xor
jl
rcrl
lcall
inc
mov
lea
insl
lret
cwtl
adc
leave
in
hlt
mov
jmp
leave
sbb
adc
outsb
xchg
xor
ret
outsb
add
adc
aaa
insb
add
stos
inc
push
mov
pop
mov
fucom
jge
xor
pop
arpl
add
popa
test
jnp
andb
mov
add
push
sub
mov
daa
pop
cmc
pop
jl
aad
jns
adc
int3
lcall
pop
mov
xor
mov
clc
negl
insl
dec
sbb
dec
insb
hlt
mov
mov
push
out
adc
enter
push
inc
arpl
xchg
popa
lea
mov
add
mov
inc
out
mov
cmp
lret
pop
stos
inc
lea
jg
scas
enter
push
popf
fiadds
out
xor
and
xor
pushf
xchg
flds
mov
inc
fsubrs
idivb
sub
jge
pushf
xor
jge
rcrb
xor
lock
inc
mov
lea
xlat
outsb
lret
stos
jmp
mov
aas
adc
insb
xchg
xor
ret
add
adc
mov
adc
insl
add
xor
inc
mov
pop
mov
jge
xor
pop
bound
add
pop
and
mov
and
pop
roll
add
and
push
jnp
lods
ja
adc
lret
cld
pop
jl
push
sbb
lcall
lds
mov
sbb
outsb
dec
push
adc
inc
imul
popf
push
adc
jmp
xor
inc
or
push
bound
xchg
pop
lea
mov
add
in
lea
add
stos
inc
mov
jg
lods
leave
pusha
fildll
call
mov
test
flds
mov
inc
fldcw
hlt
jle
es
pusha
idivl
xor
jle
iret
lcall
and
fsubrs
inc
mov
lea
fsubrs
xchg
adc
lea
xor
sbb
adc
outsl
cmp
push
xor
rorl
out
fisttps
xor
mov
mov
stos
inc
or
das
enter
add
pop
and
mov
and
push
roll
add
and
push
jp
xlat
stos
jne
adc
enter
push
jge
push
sbb
xor
les
mov
pop
fsubrs
adc
stos
inc
push
lea
adc
out
mov
xor
inc
or
cmp
push
call
mov
push
in
stos
inc
loop
mov
xor
push
call
popa
fisubrs
call
mov
test
fnstcw
and
mov
inc
fldcw
repz
and
inc
pushf
xor
jle
into
cltd
mov
xor
in
fsubrs
inc
mov
lea
fsubrs
xchg
adc
jmp
xor
pop
cmp
push
out
xor
rorb
out
fimuls
xor
and
fisubrl
jge
cs
add
pop
and
mov
rcl
dec
mov
cmp
stos
mov
xchg
arpl
popa
and
add
arpl
pushf
js
fs
xchg
sbb
loopne
andl
sub
scas
xchg
jnp
lods
adc
pushf
xchg
add
push
idiv
je
dec
add
cmp
or
rcl
push
cmpsb
mov
jg
lret
mov
sub
add
push
lcall
fwait
stc
mov
and
xor
xorb
js
bswap
sub
loopne
sbbl
shrb
rcl
repnz
jo
nop
lret
push
imul
add
mov
jmp
sbb
arpl
push
mov
ret
aam
cmpsl
push
stos
pop
scas
push
add
dec
jb
mov
jle
or
xchg
ret
push
orl
lods
xor
fisubrs
out
jmp
mov
mov
xchg
xchg
and
mov
inc
es
sar
mov
orb
pop
jecxz
mov
xchg
adc
sbb
idivl
adc
adc
pop
fsts
gs
mov
jge
addr16
cmpsb
cmovge
test
mov
iret
enter
cs
push
push
add
pop
mov
les
lret
cltd
mov
repz
mov
push
test
hlt
out
pop
and
pushf
cmpsb
fidivs
push
fnsave
or
fwait
jecxz
xor
xchg
rcll
leave
ljmp
loope
mov
mov
dec
adc
inc
jno
orl
cmp
or
jp
outsb
cmpsb
adc
mov
fwait
jns
pop
popa
movsl
jp
rorl
dec
sbb
insl
cwtl
arpl
shr
xchg
add
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
mov
add
jbe
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
pop
enter
add
mov
jno
or
jb
push
cmpsb
shrb
ss
test
push
loop
xchg
sbb
mov
mov
push
sbb
lock
mov
mov
inc
