xchg
mov
in
sub
xorl
push
push
lea
push
add
in
push
push
push
in
mov
or
push
hlt
call
ret
addr16
ljmp
or
div
rcrb
roll
jns
jmp
xchg
int
in
negl
sub
push
pop
or
fs
fdivp
mov
and
push
push
call
jns
mov
addr16
in
call
in
gs
inc
arpl
sub
rcrl
or
fstpl
jmp
dec
cmp
jne
push
sub
and
push
sbb
lods
add
add
lock
sub
xchg
movb
push
fdivl
mov
xor
xor
jne
push
stc
out
addr16
push
xorl
gs
mov
inc
push
xor
push
bound
arpl
pop
insb
ja
pop
jns
adc
xor
jo
data16
jnp
mov
push
push
mov
loopne
in
call
or
mov
jns
dec
or
cmp
pusha
jg
lcall
decl
loope
sbb
pop
in
popa
inc
or
mov
pop
sub
add
repz
ret
leave
ljmp
lock
push
scas
xor
push
negl
mov
dec
iret
call
addl
subb
and
jl
xor
xor
insl
shr
push
dec
dec
dec
sbb
or
mov
or
mov
lock
push
and
fildll
xor
inc
dec
jmp
mov
testl
jmp
aad
pop
xor
pop
fildl
xlat
sbb
jmp
loopne
mov
sbb
lock
xchg
mov
pop
in
push
sbb
js,pn
fstp
or
dec
dec
push
add
je
jg
push
cmp
ds
pop
push
call
or
dec
aas
mov
jne
out
js
push
hlt
push
or
je
cmp
aas
mov
pusha
dec
xor
xchg
push
data16
inc
xor
dec
push
ja
pop
insb
unpckhps
add
not
push
popa
fucompp
idivb
ja
push
pop
not
inc
sub
add
add
dec
inc
mov
outsb
das
inc
sbb
scas
xor
push
inc
ds
fistpl
cmp
xor
ret
sub
sbb
mov
sub
fldcw
sahf
popa
in
mov
xor
jle
js
adc
addb
push
xchg
jno
jmp
dec
inc
inc
scas
jb
mov
leave
pop
sub
ljmp
sbb
dec
adc
dec
movsl
sub
movl
jmp
jge
sti
add
inc
loopne
inc
cmp
add
jbe
jmp
gs
in
push
hlt
dec
pop
add
adc
sub
inc
push
mov
jmp
jg
andl
adc
push
aad
pop
push
dec
inc
push
fnsetpm(287
inc
cld
lea
adc
dec
sub
push
add
not
jmp
cltd
pop
inc
les
push
int
idivl
pop
clc
push
push
inc
jo
insl
xchg
add
call
mov
shll
sbb
cld
xor
lods
int
cmc
mov
mov
jo
movsl
dec
sbb
cld
jmp
xchg
test
lahf
neg
sbb
jmp
dec
dec
incl
and
push
rclb
fidivs
insb
jmp
std
fisttps
pop
jg
inc
jmp
adc
in
jno
nop
push
dec
push
popf
hlt
es
fwait
mov
dec
je
lahf
xor
and
fstps
add
jmp
push
in
jne
mov
and
inc
xor
fdivrp
jbe
adc
inc
outsl
cmp
jbe
push
adc
push
shlb
aas
push
mov
ja
push
sub
mov
dec
xor
mov
push
fisttpl
pop
lret
push
jae
adc
call
sbb
pushf
push
or
dec
mov
imul
std
ljmp
out
lods
cmp
fsubrs
sbb
xchg
les
jle
jns
outsb
aas
and
inc
mov
jl
notl
jnp
subl
cli
pop
loope
mov
mov
xor
lret
push
out
jg
or
scas
dec
dec
dec
push
xlat
mov
dec
push
aaa
mov
cmp
push
mov
mov
xor
dec
fldl
pop
pop
mov
clc
mov
add
dec
rorl
pushf
aaa
add
mov
and
xchg
pop
sub
js
adc
mov
sti
sbb
inc
adc
inc
cmp
jo
in
lods
jne
add
fistpl
push
fsub
sub
rorb
adc
adc
js
fwait
or
pop
pop
roll
into
ret
cmp
inc
mov
adc
jmp
ja
ficomps
sbb
sub
loopne
insl
loopne
sbb
push
inc
jo,pn
jp
adc
jp
fnstsw
add
shr
xlat
mov
push
add
sbb
test
push
jno
mov
dec
mov
icebp
jbe
pop
imul
inc
jb
mov
cld
sarb
insl
add
and
into
inc
repz
test
hlt
lods
cld
je
push
push
pop
pop
nop
fsubr
sar
jno
mul
mov
jbe
data16
cmp
sbb
push
orl
sarb
inc
outsb
outsb
xor
insb
mov
pop
jecxz
mov
aad
fwait
mov
or
dec
jae
inc
dec
add
push
jae
inc
xor
call
xor
sbbl
aaa
mov
movl
pop
push
dec
dec
inc
mov
mov
add
inc
cmp
fsubrs
addl
fcompl
or
pop
movsl
shll
xlat
fisttpll
dec
sbb
add
fsubl
clc
inc
popa
dec
imul
sti
mov
popa
rcrb
jle
sbb
dec
insb
inc
pop
rorb
mov
add
lock
out
imul
sub
dec
imul
pop
in
inc
dec
bound
pop
mov
pop
xorl
adc
mov
test
jnp
js
fs
fdivs
jne
mov
pop
mov
fildll
inc
cmp
cmpsl
inc
push
pop
incb
or
repnz
pushf
clc
aaa
add
xor
and
rolb
jno
xor
dec
push
xor
cmp
imul
loopne
out
call
imul
cmp
outsl
mov
dec
enter
dec
out
test
sbb
inc
xchg
add
fdivrp
mov
jmp
cmp
dec
stc
or
jmp
int3
in
inc
jecxz
in
push
sbb
sar
arpl
push
outsb
xor
push
fistl
dec
dec
call
dec
push
xchg
imul
pop
cmp
pop
push
or
fsub
xchg
cltd
lods
popa
imul
push
mov
mov
fidivl
push
xor
pop
fsubl
dec
call
jl
push
push
in
fidivrs
mov
or
jmp
jbe
jae
and
jo
pop
bound
jge
inc
dec
gs
push
pop
imul
pop
ds
addl
test
push
pop
push
jns
imul
push
lcall
imul
stc
add
ret
test
leave
xor
lods
jg
dec
not
dec
jmp
mov
cmp
dec
inc
or
push
inc
lret
add
inc
mov
mov
jmp
add
adc
popa
cmp
lret
or
std
and
sbb
nop
pop
bound
into
and
out
sbb
jmp
lea
inc
js
push
fcomps
cmc
pop
xor
sbb
push
adc
xchg
cli
mov
in
outsb
lcall
fsts
daa
outsb
repz
adc
incb
sbb
fildl
in
sbb
push
mov
sbb
add
jg
mov
add
jns
jns
jno
rcrb
pop
outsl
push
inc
fnstsw
pusha
and
es
insl
mov
push
call
mov
insb
inc
incb
push
call
pop
sbb
jmp
mov
push
push
mov
fistl
shlb
or
sub
jo
sbb
jmp
js
shlb
push
imul
or
jb
or
ss
push
mov
xor
mov
icebp
adc
push
ljmp
dec
popa
fsts
ja
in
xor
xchg
push
std
jne
push
je
hlt
loope
lea
sahf
jbe
push
ret
mov
jp
pop
add
subl
mov
outsb
les
test
push
out
fs
mov
dec
push
clc
xchg
or
aaa
and
or
and
mov
mov
add
push
push
lea
add
idivb
inc
aam
roll
pop
and
fcomp
iret
adc
dec
clc
jg
dec
pop
gs
push
or
orl
outsl
ja
jb
movsl
data16
stos
inc
outsl
or
pop
push
mov
mov
xor
pop
fisubs
dec
xorb
cmp
xor
add
popa
push
push
xor
push
addr16
mov
dec
fbstp
push
xchg
or
pop
stos
sbb
jmp
add
push
inc
adc
mov
loope
mov
inc
inc
loopne
add
cmc
and
jne
mov
mov
insb
clc
out
sub
push
cmp
lcall
negb
mov
inc
dec
inc
add
ja
shrb
xchg
mov
pop
and
pop
pop
push
sahf
sbb
not
dec
pop
jmp
inc
sub
inc
das
inc
call
sbb
pop
lahf
adcb
jge
add
in
out
sbb
push
inc
insb
fisttpl
jne
test
dec
ret
or
push
out
pop
jmp
pop
adc
shr
into
sbb
test
inc
inc
push
mov
mov
fs
push
outsb
call
push
add
push
dec
sub
push
pop
jmp
mov
insl
push
pop
sbb
mov
dec
xor
les
jge
and
sbb
push
cwtl
arpl
dec
lods
push
out
lcall
sub
adc
sti
icebp
lahf
and
insl
mov
xchg
sub
ficoml
push
dec
fimuls
cmc
cmp
add
jl
mov
mov
jmp
sbb
leave
inc
aas
xchg
stc
fwait
adc
ja
pop
outsb
xor
push
pop
sub
je
je
orb
pmulhuw
push
jno
push
rclb
ja
dec
jmp
xor
mov
sbb
mov
jecxz
fxtract
jmp
inc
push
or
iret
in
jns
ror
cltd
push
push
mov
xchg
mov
push
call
inc
addl
mov
pop
rorl
xor
jne
pop
ss
adc
inc
sbb
dec
insl
repnz
mov
insb
pop
mov
cmpsl
sub
not
push
push
not
test
mov
sbb
outsb
mov
push
push
imul
mov
xor
bound
lock
stos
call
inc
lret
aam
add
in
inc
sub
mov
adc
mov
imul
sti
lock
movsb
xor
pop
adc
inc
xor
js
xor
or
ljmp
adc
decl
ds
xor
push
inc
ja
mov
ret
je
dec
jecxz
xchg
inc
push
les
sti
add
dec
or
fidivs
clc
stc
cmp
sbbl
call
push
dec
and
xchg
in
imul
jbe
dec
xor
dec
mov
lds
pop
lods
add
xor
jo
sbb
xchg
outsl
pop
dec
push
pop
push
push
cld
das
inc
ret
in
fcompl
or
push
int
mov
push
sar
jo
or
hlt
stos
ret
jne
cmc
movhps
ret
dec
sub
inc
jmp
popf
shll
mov
in
icebp
inc
sbb
jcxz
rcpps
push
mov
gs
je
sbb
adc
int3
sbb
adc
je
jg
fsub
dec
inc
push
sbb
push
orl
and
inc
and
xchg
les
call
or
cmp
lahf
sbb
fs
call
cmp
adc
pop
loope
pop
push
inc
push
jle
sti
mov
inc
out
imul
xor
inc
adc
jo
jns
addr16
cmp
or
test
jmp
xchg
sub
out
or
in
adc
xor
push
or
es
mov
daa
jno
mov
mov
inc
pop
cwtl
loopne
and
rorb
push
push
outsb
dec
xchg
gs
insb
scas
or
lcall
pop
ret
cli
pop
scas
mov
push
mov
inc
fwait
call
push
popl
jecxz
test
shrl
rclb
cmp
enter
push
push
orb
mov
popa
ss
jbe
fidivl
push
xor
jo
or
dec
sbb
repz
dec
mov
sbb
pop
addr16
shrb
aaa
imul
fs
mov
cmp
mov
ds
xorl
aaa
fs
sub
push
push
out
js
push
arpl
arpl
mov
push
sbbl
dec
in
xchg
push
outsl
sub
and
mov
dec
iret
pop
xor
sbbl
cmp
mov
lea
and
and
or
sub
push
out
aas
jns
push
push
ret
dec
je
outsl
dec
jae
xor
push
insb
push
rcrl
outsb
das
and
xor
dec
xor
mov
cmp
jne
sub
dec
ja
ss
sbbl
xchg
push
inc
jno
jl
xrelease
or
mov
push
mov
sub
bound
loopne
sub
test
fmull
fcom
fmuls
out
aas
push
outsl
addb
fldt
ja
push
add
fadd
ret
dec
mov
test
inc
jmp
inc
xchg
inc
cmp
les
call
pushf
dec
out
pop
lock
dec
dec
cld
xor
ljmp
inc
and
int3
push
cld
fisubl
jg
cld
mov
push
outsb
inc
scas
orl
dec
add
mov
icebp
mov
loop
pop
mov
adc
mov
iret
jle
xlat
jmp
lock
push
fcompl
imull
testl
sub
and
clc
sub
inc
inc
dec
adc
rorb
jmp
or
cld
inc
jbe
pop
std
in
imul
dec
test
fs
mov
inc
mov
xchg
push
pushf
aam
xor
and
test
inc
fsubrs
std
cmp
sbb
sub
std
jo
xchg
lcall
or
mov
xchg
pop
jl
or
jae
sbb
jns
cmc
inc
les
outsl
jmp
outsb
push
lahf
ss
insb
dec
dec
jo
addb
cmc
cld
roll
sub
push
mov
je
hlt
mov
in
add
mov
add
insl
enter
imul
insb
sbb
bound
push
mov
mov
popf
leave
ljmp
scas
rclb
jmp
shl
lea
inc
jns
adcb
mov
and
inc
push
icebp
addb
insl
inc
or
mov
popf
mov
jmp
das
cmp
inc
stc
int
add
std
mov
repnz
je
sbb
push
cmp
and
addr16
repz
sub
in
cmp
adc
addr16
inc
adc
jecxz
cs
and
lret
push
movsb
out
inc
sub
push
shlb
pop
outsl
bound
imul
mov
push
insb
fdivrs
sub
imul
lock
sub
popl
aaa
dec
iret
stos
test
and
fdivrs
fimuls
xchg
jnp
mov
and
jl
inc
aad
in
imul
out
test
sbb
imul
jmp
dec
mov
push
mov
mov
mov
sti
out
insb
add
mov
add
or
adc
sbb
pop
mov
inc
mov
mov
adc
cmpsl
nop
scas
or
mov
add
fistpll
push
out
cli
add
mov
jg
std
dec
mov
mov
dec
icebp
das
mov
mov
mov
pop
mov
push
mov
adc
sti
jns
mov
insl
adc
mov
rorb
mov
decl
fs
insb
stos
ss
bound
fwait
push
or
push
pop
repz
sub
out
flds
punpckldq
jns
enter
or
dec
mov
mov
push
inc
lret
pop
adc
mov
mov
mov
inc
jg
mov
inc
enter
add
out
inc
mov
mulb
jecxz
int
xchg
arpl
xor
push
fdivl
xchg
aas
sti
pop
lock
mov
mov
testl
push
pop
js
mov
inc
psrad
mov
push
mov
mov
adc
pop
adc
scas
xor
cmp
loope
sub
cld
xchg
in
popa
jl
mov
mov
cmp
sbb
mov
cld
sarl
mov
mov
arpl
shll
mov
sbb
ss
mov
jmp
or
push
pop
jb
cmp
icebp
sti
dec
and
inc
add
mov
pop
fisubrs
pop
loop
mov
mov
mov
cmp
fsubl
icebp
xchg
lods
jecxz
shlb
or
fldt
mov
xchg
inc
cmp
mov
add
or
lods
add
sbb
mov
mov
jb
push
mov
jns
rorb
bound
das
stos
mov
fcomps
gs
xchg
jae
add
add
mov
in
fcoms
scas
jne
mov
mov
xchg
faddp
pop
ret
adc
xorb
aam
dec
test
add
ljmp
sub
fmul
notb
mov
sbb
int3
and
add
nop
dec
fsubr
xchg
jg
pop
adc
xchg
mov
mov
shlb
jne
mov
lahf
inc
lods
cmp
xchg
sbb
mov
imul
xchg
mov
dec
xor
fwait
data16
sti
test
dec
xlat
test
sub
inc
inc
gs
shrl
rorb
movsb
xchg
insb
fistpl
adc
add
pop
mov
ja
push
scas
jecxz
cmp
mov
enter
xor
push
out
fucompp
jnp
jmp
imul
mov
outsb
or
mov
or
and
ds
adc
mov
ja
mov
ja
pop
mov
xlat
add
fdivl
mov
in
or
cmpsl
ret
jle
mov
call
or
jge
cmp
fwait
movsb
add
fists
and
clc
out
add
bound
imul
rorb
cwtl
jae
test
mov
out
inc
rclb
and
and
loopne
add
sub
mov
dec
push
divl
dec
stc
and
fwait
and
movb
cs
or
bound
mov
jmp
in
push
mov
lds
je
repnz
je
std
clc
icebp
lcall
jge
addr16
add
fwait
test
dec
ss
cs
mov
jge
xchg
pushf
push
and
mov
add
mov
cmc
sbb
into
sub
lods
inc
pop
lret
dec
jae
push
sbb
in
jb
push
sti
push
mov
jp
out
rcrl
mov
xor
cli
push
xchg
enter
dec
loope
daa
xor
test
ja
sbb
sub
or
cmpsl
cmp
pop
daa
pop
inc
dec
movsl
jmp
mov
cmp
and
jne
cmp
enter
enter
and
pop
pop
adc
rorl
pop
jmp
adc
insl
fisttpll
imul
ja
sub
jl
cmp
or
orps
loope
stos
aas
movsb
cwtl
push
int3
stos
add
mov
cmc
mov
sbb
sub
xor
sti
push
movups
and
jl
mov
jne
outsb
adc
or
scas
cltd
lcall
xor
push
pusha
xor
xor
or
xor
sbb
je
cmp
mov
mov
cmpsl
add
or
xchg
or
mov
jmp
cmpsb
adc
call
fcmovb
cs
xor
shll
fsubl
sub
cmpsb
adc
cwtl
mov
xor
jae
jns
imul
adc
jo
inc
cmp
aam
push
mov
push
cmp
fs
dec
pop
pop
lods
jecxz
ss
xchg
xor
mov
mov
dec
add
out
add
aam
sarl
sbb
not
xchg
mov
pop
pop
fs
ds
fcomps
inc
mov
inc
dec
neg
ret
mov
insl
xchg
and
cmpb
fnstcw
pushf
repnz
ret
jb
test
mov
xchg
fidivrs
int
add
mov
sub
mov
test
dec
pop
ja
jo
rorl
mov
mov
gs
pop
jnp
adc
aaa
sbb
loopne
outsl
add
mov
pushf
hlt
xor
mov
rcrb
dec
xor
adc
inc
cs
stos
and
pushf
out
pop
aam
cmp
lods
out
or
xchg
push
in
iret
test
leave
sbb
leave
pusha
arpl
lock
cs
icebp
loopne
mov
xchg
xchg
mov
fsubrs
sbb
xor
jecxz
pop
lcall
fs
bound
into
fmull
sti
mov
pop
dec
ret
push
test
fstl
xor
xor
dec
sbb
aas
add
add
or
jbe
aaa
sbb
mov
xchg
push
jl
push
sti
xchg
loope
out
push
outsb
add
mov
mov
dec
mov
dec
pop
inc
or
std
pop
ss
lods
enter
sbb
xchg
popf
ror
mov
stc
sbb
and
dec
mov
subb
sahf
enter
pop
and
in
mov
fcoml
mov
xor
sbb
sarb
cmp
out
xchg
push
mov
in
push
xor
ss
popf
mov
mov
or
insb
jmp
mov
bts
lahf
push
sub
popf
imul
mov
in
xor
ljmp
xor
fbld
outsl
pop
or
mov
insl
xchg
js
adc
adc
lcall
jecxz
add
adc
ficompl
es
push
inc
mov
adc
lock
sub
add
add
inc
cltd
pop
xor
lea
clc
dec
xchg
js
or
sahf
outsb
adc
scas
sahf
or
enter
xchg
jge
arpl
push
mov
mov
nop
sti
mov
lock
jnp
mov
mov
mov
pcmpeqd
mov
xchg
xor
insb
lcall
loop
bound
push
push
into
jge
inc
test
xchg
ja
cld
andb
dec
sbb
movsb
cmp
fisubrl
and
fidivl
loope
adc
or
jp
fcoml
hlt
je
aas
dec
sbb
or
sbbl
bound
or
jno
and
in
push
pop
fldl
sbb
push
inc
dec
movsb
movl
cmp
or
test
repnz
cmp
xchg
add
and
addb
push
scas
add
mov
push
cmp
test
enter
cmp
xchg
mov
fadds
adc
push
mov
faddl
test
add
fisttps
and
mov
add
inc
inc
cmc
add
dec
sbb
insl
icebp
add
rcr
xchg
aaa
rclb
sbb
jns
popf
cmp
popf
clc
mov
jb
dec
es
and
mov
insb
mov
out
pop
shll
inc
repz
mov
arpl
inc
outsb
jne
mov
popa
sbb
add
mov
test
adc
es
mov
and
out
pop
push
push
add
in
jae
movsb
ja
dec
inc
cmp
pushf
sbb
dec
add
or
stos
pshufw
sub
sbb
mov
lea
ljmp
ss
xlat
cmp
or
add
decb
call
ret
leave
push
js
and
cmp
sbbl
aaa
scas
jbe,pn
call
movsb
push
std
adc
xorl
pop
lods
pop
subl
pop
sbb
mov
test
push
xchg
pop
or
xchg
add
popf
xor
cmc
mov
pusha
add
fnstenv
insb
pop
pop
mov
pop
mov
pusha
call
outsb
fs
jp
in
imul
cmpxchg
mov
cmp
fcompl
out
cmp
lahf
rorb
or
fwait
outsb
cwtl
pop
sbb
stc
xor
in
outsl
xchg
js
cmp
iret
xor
xchg
jg
adc
shlb
das
aaa
mov
add
sbb
mov
pop
inc
jl
xchg
sbb
sbb
push
mov
mov
inc
dec
mov
jg
sti
fmuls
mull
dec
int3
xchg
pop
xchg
push
xor
mov
lcall
scas
pop
push
add
pop
pop
imul
and
adc
movsb
hlt
jp
xor
dec
test
jecxz
jl
lea
push
push
or
mov
jge
rol
jg
das
cmp
sarb
xor
jle
mov
rcll
pop
dec
imul
cmp
mov
ljmp
in
dec
cmp
clc
popf
lret
sub
dec
ljmp
cmp
xor
daa
add
dec
rcl
mov
rcrb
add
scas
lahf
fdivrl
insb
xchg
stc
jns
cmpsb
clc
jge
int
sbb
sub
push
cmp
and
sub
xchg
mov
out
test
mov
cli
aam
pop
pop
xchg
xchg
inc
pop
mov
cmp
adc
inc
sbb
jne
popa
add
pop
jne
lods
and
int
xchg
jo
sub
rorb
out
jl
or
ret
inc
mov
scas
daa
inc
xlat
das
mov
test
jno
xchg
in
add
dec
add
sub
sub
stos
xchg
clc
pop
inc
mov
mov
je
mov
push
dec
pop
loope
dec
push
inc
mov
adc
and
cmp
cmc
cld
xchg
ja
add
adcl
jmp
into
mov
add
ljmp
sbb
xor
mov
loope
sbb
ja
mov
dec
sbb
scas
xor
clc
rorb
mov
adc
and
xchg
pop
rcrb
int
and
or
and
cs
mov
jecxz
adc
sbb
push
xor
or
inc
jne
rolb
mov
cmpsl
cmp
sub
iret
inc
js
in
and
add
rolb
movsb
scas
loopne
pusha
mov
subl
jmp
add
adc
daa
ds
fadds
xlat
sbb
sub
movsb
das
cmpsl
rolb
test
or
and
sbb
fisttpll
insb
sahf
cs
mov
adc
call
push
je
bound
sahf
hlt
ljmp
ret
in
bound
mov
daa
pop
and
push
lods
call
jl
xchg
out
or
loopne
xlat
in
xchg
sbb
arpl
mov
mov
aaa
gs
std
inc
sbb
pushf
ret
mov
in
shll
rcrl
iret
pop
out
test
mov
sahf
and
push
or
xchg
xor
stos
and
cmp
mov
jmp
lcall
aam
mov
mov
xchg
dec
mov
pop
sbb
insb
in
call
mov
sbb
or
xchg
sbb
push
add
ljmp
sbbl
dec
ss
cwtl
jecxz
sti
orb
rcl
nop
and
xor
cld
mov
xor
incl
pop
cmpsb
sbb
lcall
andb
jne
fcomps
out
cli
repz
jle
out
mov
and
sahf
lea
cmp
ja
leave
mov
call
loope
jge
or
inc
scas
mov
loopne
or
iret
enter
int
or
out
es
mov
push
cmp
fdivrs
mov
scas
mov
jle
packuswb
movsb
daa
or
ss
push
or
jmp
rcll
addr16
out
adc
iret
fiaddl
out
adc
jge
mov
xor
mov
je
mov
adc
jns
xor
push
ficompl
icebp
xchg
stos
iret
cmp
cmp
test
adc
mov
icebp
stos
cmp
mov
push
or
push
or
dec
popf
adc
xlat
push
ljmp
cmp
movsb
iret
cltd
lea
outsl
add
push
pop
lods
aaa
incb
dec
test
pushf
push
aas
adc
leave
movsb
repz
xchg
push
and
repz
pop
insb
sbb
frstor
sar
popa
outsb
pop
xchg
pop
jno
sub
mov
or
mov
xlat
movsb
outsb
seta
xchg
xchg
icebp
add
enter
test
outsb
lock
das
inc
or
mov
jns
inc
bound
aas
icebp
cli
aad
fbstp
xchg
fsubrl
inc
sbb
jecxz
inc
adc
xor
or
jne
inc
sub
std
xor
or
sbb
rcrl
pop
loope
adc
and
ss
cmp
mov
xor
fidivrs
psadbw
lret
scas
sbb
add
jl
pop
js
pop
mov
xchg
aas
fadds
test
and
dec
ljmp
add
inc
cli
lea
add
xor
lret
pop
and
sbb
and
icebp
push
adc
jb
add
pop
rol
mov
xchg
xchg
loopne
aaa
mov
in
mov
inc
in
inc
add
in
add
inc
or
lahf
sbb
jge
dec
xorl
cmp
pop
mov
push
enter
sub
cld
cmc
daa
pop
or
mov
in
inc
ret
jp
rcrb
pushf
loope
jg
mov
mov
nop
dec
push
adc
jo
scas
lods
ss
mov
fiaddl
pop
sbb
push
mov
jmp
mov
les
push
inc
dec
call
adc
mov
mov
jl
mov
fcmovnu
sbb
push
loope
js
push
cmpsl
push
or
push
lds
mov
loopne,pt
addr16
mov
push
add
mov
xchg
xchg
fisubl
in
adc
add
or
or
xlat
fstpt
cmpsb
imul
mov
shlb
add
data16
in
gs
pushf
divb
sti
int3
rcl
in
popa
insl
inc
jecxz
addr16
inc
out
sbb
aam
mov
mov
sbbb
push
out
mov
adc
dec
icebp
rcl
ljmp
rcl
in
iret
je
xchg
mov
cmp
cli
das
or
icebp
jae
outsb
pop
mov
fcom
dec
popf
sbb
add
mov
loop
jbe
sti
add
loopne
push
xor
cmpsl
cmp
or
cmp
mull
call
addr16
xlat
and
fsubrl
and
and
sar
push
pop
fadds
or
cmp
in
pop
mov
pushf
fadd
cmp
mov
xchg
and
dec
ljmp
lock
icebp
and
shr
push
mov
out
enter
xlat
cs
cwtl
outsl
mov
xchg
sbb
jb
push
test
rcll
pusha
shl
js
jmp
icebp
xor
sub
push
or
inc
ljmp
or
test
loopne
mov
flds
cmp
ret
dec
push
add
js
jecxz
mov
lcall
out
mov
mov
daa
cmpl
inc
mov
out
push
addb
movsb
pop
lds
repz
dec
lock
jne
mov
aam
loop
jno
into
mov
popa
out
adc
pop
bound
je
jg
and
jecxz
cmp
xorb
mov
sub
sub
sbb
or
hlt
mov
xor
jmp
mov
sub
addl
or
xchg
flds
mov
xchg
xchg
push
mov
adc
jbe
popf
cmovg
cmp
cwtl
mov
sbb
in
inc
repz
xchg
scas
pop
mov
cmp
or
cmp
and
xchg
rcrl
cmc
mov
xor
xor
repz
add
cmp
xchg
aam
flds
push
stc
jno
scas
rcrb
push
and
jmp
sub
inc
out
test
push
sbb
xchg
xchg
and
and
fadds
lock
push
dec
fsubrs
xor
pop
sbb
xor
mov
data16
loopne
push
aas
sahf
mov
mov
mov
push
fmul
mov
and
leave
adc
pop
rep
sbb
xlat
pushf
cmpsb
mov
rolb
fisttps
fiadds
stos
xchg
fs
xor
les
dec
mov
mov
push
push
test
push
leave
shlb
aas
inc
jl
testl
inc
lea
shrl
testb
decb
fadd
cwtl
inc
xchg
sbb
push
fnstsw
and
sti
test
jp
data16
jne
shl
sub
add
jno
mov
imul
inc
or
mov
popa
insl
call
xor
or
pop
insl
aaa
add
fcoml
jge
cli
adc
test
mov
jne
pop
enter
push
dec
sbbb
sbbb
aaa
cmp
push
xor
push
fldt
and
inc
ret
pop
adcl
and
loopne
aam
addr16
push
push
nop
lods
cmp
push
insb
sbb
mov
stc
rolb
sti
mov
imul
push
and
inc
cmp
mov
pop
hlt
mov
sbb
jle
cltd
js
filds
cmpsb
popa
aam
movsb
jl
and
icebp
dec
hlt
fnstsw
sub
into
scas
dec
pop
mov
imul
inc
outsb
sub
add
dec
add
or
mov
mov
push
hlt
inc
or
push
rcl
jle
and
ret
mov
in
into
mov
push
sub
jp
test
inc
adc
mov
fs
clc
mov
jne
and
fs
sarb
push
js
mov
jns
pop
scas
addr16
repnz
cwtl
cli
ret
pop
js
adc
add
mov
aas
or
inc
mov
dec
push
push
in
add
sub
test
xchg
repnz
or
jle
mov
ror
and
pop
addb
sbb
add
xor
jl
mov
mov
dec
loopne
les
mov
sub
sbb
into
ds
stc
psubsb
jo
xchg
sub
dec
fisubl
lcall
loopnew
xchg
add
jle
mov
xchg
ja
mov
mov
scas
xchg
sbb
pop
sbb
or
in
test
and
loope
mov
pop
mov
jmp
icebp
cmp
es
push
lods
mov
shl
xchg
pusha
mov
loope
das
inc
insl
inc
lcall
mov
arpl
lods
int3
and
mov
insb
loop
and
stos
pushf
aaa
fildl
adc
es
popf
sbb
mov
dec
pop
pop
add
or
inc
cwtl
rclb
pop
jb
test
jmp
add
sbb
sbb
adc
push
mov
inc
add
add
sbb
outsb
test
push
add
dec
loope
add
add
push
xor
sub
mov
mov
add
mov
int3
es
js
scas
sbb
or
mov
out
push
adc
inc
adcb
adc
sbb
ljmp
xor
shrb
cmc
and
lea
inc
or
add
repnz
xor
addr16
push
stc
mov
jmp
fcoms
sbb
adc
or
outsb
pop
inc
sarb
call
lea
cmp
cmp
cltd
test
daa
xchg
jne
mov
notl
daa
mov
test
ja
ret
into
insl
pop
and
in
pop
shll
popa
and
cmpxchg
xlat
inc
int3
filds
mov
stc
pop
scas
inc
and
push
hlt
inc
dec
mov
loopne
shl
sbb
repz
jge
lds
add
je
dec
dec
and
pop
lods
add
dec
xor
jnp
mov
mov
call
scas
popa
rclb
ret
or
push
stos
cmp
sub
mov
pop
dec
out
mov
cmp
sarl
push
int3
js
loope
mov
leave
mov
xor
mov
int
push
mov
sub
or
push
mov
pop
data16
mov
sbb
out
pushl
lahf
aad
and
movsl
pop
jb
or
jo
out
jo
and
xlat
frstor
cs
dec
iret
sub
aad
incb
and
push
dec
jnp
xchg
inc
push
movsb
pop
adcb
in
enter
sahf
stos
sub
mov
jge
clc
push
addr16
mov
addr16
leave
adc
xlat
inc
in
xorb
jle
inc
xchg
xor
test
and
in
test
test
mov
test
loope
mulb
push
fwait
dec
pop
pop
sahf
mov
out
push
jae
cli
inc
xchg
pop
cmp
out
sbb
jmp
es
and
loop
xor
inc
adc
adc
inc
pop
push
test
ret
adc
jbe
fwait
and
clc
fs
or
add
jne
out
mov
xchg
adc
daa
rol
or
cmp
shlb
hlt
jns
dec
stos
mov
in
pushf
cltd
movsl
cmpsl
add
fidivs
mov
mov
adc
test
andb
js
es
push
push
rcl
xor
jb
add
test
mov
xor
je
les
iret
dec
imul
sub
scas
ljmp
hlt
fildl
mov
js
bound
aaa
decl
loop
nop
inc
xchg
sub
adc
es
cmp
ja
mov
dec
push
ds
xor
decb
stc
aam
jb
es
pop
pushf
cmp
dec
xlat
icebp
fisttpl
xor
adc
lret
lods
roll
jae
test
adc
add
arpl
fistpl
pushf
out
jo
pushf
rolb
shlb
xor
test
and
mov
dec
xor
sbbl
repnz
loop
mov
popf
adc
mov
pushf
shlb
bts
lods
xor
jmp
imul
subb
or
adc
sub
adc
test
hlt
push
inc
xlat
and
shr
push
add
mov
filds
jae
call
out
add
inc
xchg
ds
pop
fucomp
xchg
mov
popf
je
fs
test
mov
or
bound
xchg
addr16
xchg
and
loopne
shlb
icebp
mov
leave
lcall
mov
sbb
push
loopw
jno
rcl
stos
or
jl,pt
or
ss
inc
lds
xlat
mov
mov
ret
mov
repz
adc
cmpsl
add
jge
sbb
inc
inc
sarb
repz
fprem
js
test
cmpsb
scas
sbb
divb
xchg
cltd
xchg
aad
push
xchg
shl
test
movsl
sub
mov
hlt
enter
insb
icebp
sub
stos
sti
pop
repnz
and
xor
call
xor
push
shll
sbb
subl
xchg
xchg
xchg
cwtl
sub
scas
cmovg
mov
icebp
int
aas
insl
cmp
insb
std
mov
int
mov
pop
cmp
fcoml
fstl
pop
arpl
out
mov
rolb
cwtl
out
aaa
mov
testb
xchg
cwtl
cmp
fcmovnb
or
ss
inc
dec
mov
lods
sub
adc
jmp
pop
sub
in
ds
data16
mov
imul
es
and
insl
or
out
xor
int3
stos
xor
stos
sbb
fcomps
cmc
dec
test
and
add
or
lcall
sbbl
sbb
sbb
pop
sbb
das
sub
cltd
js
pushf
aam
popa
fstl
mov
std
adc
mov
lods
orb
mov
arpl
sarb
mov
shl
xor
pop
nop
xor
jbe
outsb
imul
test
iret
shrl
jo
ljmp
mov
jecxz
addb
fbld
push
and
outsl
loope
mov
scas
in
mov
dec
cmpsl
out
pop
ljmp
mov
arpl
mov
jle
sub
cmp
xorps
mov
xor
mov
pop
or
jecxz
aam
movl
fdivrs
mov
cs
inc
clc
roll
cmp
add
sbb
and
dec
push
or
aas
or
jl,pt
jae
or
lds
popf
and
push
xchg
popf
lcall
daa
and
cmpsb
mov
jmp
push
jecxz
mov
mov
pop
jle
imul
icebp
mov
pop
mov
lds
mov
rorl
pushw
ds
xor
icebp
sbb
xchg
push
sbb
je
pop
mov
mov
in
adc
lods
cmp
lahf
lock
orl
mov
fmull
cmp
push
push
mov
jp
xor
cmp
jb
out
pop
push
adc
cmp
push
gs
fistpll
xor
fwait
in
dec
or
dec
mov
add
cmp
ja
or
jmp
mov
aas
mov
sbb
dec
inc
frstor
imul
jp
push
bound
das
insl
sbb
int3
stos
sbb
sub
mov
xchg
mov
adc
outsb
roll
out
rorb
lret
adc
and
inc
inc
pop
sbb
xor
cs
bound
pop
fists
sub
je
loopne
lock
aam
fisttpl
int
ds
es
inc
sbb
push
iret
aam
sbb
cli
mov
int3
xchg
mov
inc
mov
cmpsb
outsb
sub
mov
mov
stc
scas
xchg
jmp
lods
nop
js
dec
adc
fdivl
jg
add
xor
add
mov
fldcw
mov
sbb
iret
xchg
mov
in
sub
xchg
ret
add
jb
int
dec
inc
daa
rolb
mov
xlat
lahf
push
popf
cmp
inc
add
adcb
das
adc
sbbb
ja
in
ljmp
das
minps
mov
nop
jmp
rorl
imul
cmp
sbb
jno
aam
insl
clc
stc
daa
sub
addl
insb
and
adc
aad
aas
out
cmc
icebp
ss
mov
jnp
add
insb
jp
lock
or
pop
fstl
nop
pusha
ret
pop
adc
sub
cli
js
jmp
sub
pop
cwtl
adc
js
lock
adc
jo
dec
push
xor
cmpsb
push
out
xchg
adc
in
pop
mov
shl
or
xchg
mov
lret
xor
adc
dec
pop
xchg
pop
dec
ror
mov
decb
sub
ret
pop
lods
mov
jns
add
imul
repnz
ss
xor
ret
or
adc
pop
pop
pop
popf
cmpsl
xchg
scas
mov
adc
xchg
stc
shlb
enter
xor
adc
sub
arpl
mov
clc
adc
je
sbb
cmpsl
lock
sbb
and
lret
fisttpll
inc
mov
jne
push
gs
mov
ss
imul
iret
mov
jecxz
popa
ljmp
clc
xor
aas
cmp
fsub
je
xor
jmp
add
andb
mov
cmp
out
xchg
mov
push
scas
cmp
dec
or
in
mov
out
mov
jmp
cld
or
pop
loop
bound
ja
fwait
dec
mov
adc
lock
test
inc
andb
push
lea
cmpsb
shrl
shlb
mov
fcmovne
inc
lea
jae
rolb
rcll
sbb
add
addr16
imul
push
sbb
fsubr
mov
dec
and
in
mov
cmpl
lahf
or
push
movsb
enter
and
inc
mov
xchg
mov
fidivl
mov
dec
push
hlt
mov
js
adc
pop
inc
adc
ss
daa
and
jmp
xchg
imul
xchg
mov
dec
adc
std
data16
mov
jo
cmpsl
adc
sbb
adcl
mov
xor
sbb
aas
iret
scas
and
dec
add
mov
inc
mov
aam
sbb
frstor
aas
and
dec
dec
movsl
and
iret
xchg
cmpb
sub
lahf
fisttps
outsb
das
pop
sub
movsl
add
inc
jl
outsb
mov
imul
std
push
ret
loope
cmp
cld
shrl
add
bound
insl
cmpb
add
lods
or
add
cmpsb
shlb
daa
daa
int
dec
add
sbb
jp
add
jne
or
bound
xor
outsb
mov
fstpl
test
dec
push
insl
xchg
cltd
mov
inc
mov
mov
fmuls
mov
roll
icebp
sub
and
addl
sbb
sbb
push
xlat
shll
shrl
push
dec
mov
xor
xor
or
sbb
sbb
jae
enter
xor
stc
inc
lret
loopne
adc
daa
cld
andl
mov
dec
push
aaa
cmp
or
stc
xchg
adc
pusha
fnstcw
jmp
xor
adc
sbb
outsl
enter
cli
pop
jbe
push
div
mov
lock
scas
fstl
fs
sbb
add
dec
add
addr16
dec
push
call
cld
adc
add
push
jmp
subb
dec
test
xchg
and
inc
xor
push
adc
dec
shll
cmp
dec
int3
adc
push
xchg
push
call
adc
cs
aam
jbe
std
lods
fs
jns
es
popa
inc
push
inc
mov
mov
pop
fisttps
push
clc
out
add
arpl
dec
scas
call
adc
jno
mov
aas
inc
lds
fs
in
xchg
and
add
inc
in
and
leave
add
jmp
add
clc
mov
daa
hlt
fistpll
in
std
cld
call
and
lret
add
xchg
jecxz
loop
sti
dec
repz
movsl
mov
inc
adc
sbb
mov
mov
mov
fisubrl
adcb
xor
inc
lock
hlt
or
iret
mov
inc
pop
mov
pop
cs
outsl
jae
outsb
mov
inc
sarb
pop
cmpsl
inc
icebp
lahf
jo
adc
push
add
neg
sbb
pop
icebp
mov
mov
adc
clc
push
cld
fistpll
inc
sbb
or
outsl
push
dec
jle
push
xlat
fistpll
loopne
jno
addr16
neg
jmp
orb
imul
and
dec
aaa
or
rorl
test
pushf
fimull
and
jmp
mov
xor
sbb
ret
pop
xor
cs
sbb
push
add
lock
xor
pop
dec
js
adc
addr16
jmp
adc
push
dec
daa
in
push
dec
xor
dec
daa
sbb
adc
push
std
mov
stc
push
adc
sbb
inc
jmp
test
outsl
dec
jo
outsl
add
cmp
ss
jbe
push
insl
mov
and
aam
outsb
adc
push
push
cld
bound
sub
inc
shlb
inc
mov
fimuls
dec
je
bound
outsb
call
cli
xlat
dec
push
push
sahf
jge
push
add
cmp
push
int
mov
or
nop
mov
and
outsb
notl
orl
push
jns
mov
cld
sbb
mov
add
jmp
jo
jne
loop
dec
inc
xor
dec
xchg
and
dec
ss
xor
mov
add
imul
insl
jg
cmpsl
add
outsl
dec
inc
bound
fisttpll
call
shr
add
inc
aam
jmp
xor
or
scas
push
xor
fs
inc
les
in
sbb
and
mov
inc
xchg
scas
push
sub
dec
not
add
sub
or
fists
testl
bound
clc
das
push
mov
data16
rcrb
outsb
stos
bound
decb
not
push
not
add
push
aad
mov
sbb
rolb
pop
cli
mov
lods
dec
pop
dec
inc
ds
pop
loop
jmp
inc
add
cmp
or
push
jo
out
xor
xchg
outsl
dec
es
and
inc
fbld
mov
mov
cmp
ss
inc
outsl
inc
fdivrs
data16
ljmp
loope
gs
pop
aaa
push
inc
add
xchg
and
mov
jle
insb
in
subl
ja
mov
in
fildl
sub
xor
arpl
insl
jo
jb
push
xor
inc
cld
test
sub
jb
dec
sub
mov
push
adc
dec
sub
pop
in
test
inc
jmp
pushl
sub
cmc
cmp
xchg
and
dec
add
lock
xor
ret
dec
subb
int3
mov
cld
notb
sbb
inc
aad
dec
inc
push
outsl
mov
arpl
push
adc
rclb
fisttpl
add
sbb
push
incb
mov
out
cmp
cld
out
mov
sbb
inc
lcall
sub
lret
push
out
pop
add
jo
dec
push
adc
out
inc
call
push
test
lahf
inc
lock
loope
gs
jecxz
movhps
insl
ss
js
sbb
in
outsb
push
imul
xor
adc
das
imull
insb
jo
inc
mov
fstpl
scas
xor
int
push
mov
push
dec
js
ja
in
mov
lods
jb
cmovno
pop
jne
or
popa
jae
inc
push
add
aas
push
push
popa
and
jecxz
mov
jle
inc
imul
xor
clc
xor
lahf
sbbb
push
gs
push
addr16
icebp
or
push
jbe
inc
scas
jb
push
inc
es
mov
add
and
dec
inc
cmp
lds
xchg
dec
mov
sti
and
inc
callw
das
dec
dec
imul
imul
pop
push
jecxz
add
xchg
dec
clc
push
mov
add
inc
xor
insl
jnp
xor
mov
shrb
dec
jno
mov
add
cmp
int3
cmp
lock
in
sbb
stos
and
jge
pop
xor
int
sub
int3
ja
ja
xchg
mov
rcrb
daa
insl
adc
fsts
test
push
mov
jg
jmp
push
sbb
push
iret
xor
je
dec
outsl
and
jo
cmpb
icebp
add
pushf
or
mov
pop
inc
jmp
fdivs
insl
lock
or
fld
scas
dec
inc
dec
rcll
lret
loopne
mov
dec
cmpsl
ja
push
jmp
and
and
gs
in
add
movsb
cmpsl
jae
jo
call
cmpsb
adc
aaa
call
fcom
xor
fcompl
adc
add
fidivs
imul
loopne
mov
jge
imul
mov
std
mov
cmp
pop
incl
shrb
dec
dec
push
outsb
push
scas
test
scas
ja
cld
rcll
movsb
cmp
movsl
xor
sbb
push
mov
mov
inc
imul
outsl
popf
jl
cmp
cmc
dec
mov
sub
push
mov
movsb
dec
mov
movb
je
neg
test
ret
jo
addl
ss
pop
call
xorb
mov
mov
loopne
mov
pop
sbb
or
xor
cmpsb
fs
out
pop
and
aad
xor
ret
lret
sub
lock
jns
lds
cmp
adcb
cltd
mov
jmp
jbe
cld
popa
dec
jno
dec
addr16
sbb
adc
pop
jmp
jns
dec
add
mov
js
and
push
xchg
jb
pop
mov
jb
or
push
jae
stc
sbb
push
sbb
push
sub
orb
loopne
push
sar
mov
andl
cmpsb
scas
mov
fsubs
cld
cmpl
sahf
insl
mov
daa
jmp
push
dec
adc
adc
add
pop
or
imul
gs
xor
cs
lock
add
mov
mov
mov
and
add
and
shll
xchg
push
mov
jne
popa
lea
jle
das
lock
cltd
inc
mov
mov
add
aaa
sub
mov
mov
loop
or
push
push
dec
movl
push
sub
pop
adc
and
pop
cmp
xchg
nop
or
js
loopne
imul
test
jmp
sbb
push
jb
add
jo
sarb
and
jo
add
loop
mov
fidivrl
fwait
shll
lds
je
push
mov
in
dec
pop
fistpll
mov
outsl
psadbw
mov
mov
pop
adc
and
pop
test
mov
mov
pop
or
xchg
lods
aaa
outsl
cmpsb
lods
mov
outsb
add
hlt
sub
setg
cli
dec
addr16
out
insl
daa
inc
jl
and
flds
cli
enter
add
push
fcoms
js
shl
div
sarb
push
push
je
mov
mov
fadds
push
adc
fcmovne
mov
adc
imul
scas
mov
push
fimuls
mov
loope
test
mov
ljmp
mov
ja
sub
call
lock
filds
lahf
test
sub
pop
adc
pusha
ja
inc
lds
hlt
or
xor
inc
movaps
addr16
inc
inc
mov
je
add
or
push
push
imull
sub
fwait
lods
mov
and
pop
mov
cmp
push
jbe
fld
xor
inc
dec
ret
pop
mov
dec
dec
mov
sbb
mov
shlb
sub
dec
push
lock
inc
test
mov
cld
inc
jb
popf
mov
out
js
fidivl
add
mov
xor
les
xor
mov
mov
hlt
jno
fwait
mov
gs
xchg
push
inc
mov
leave
dec
dec
cmp
pop
cmpsb
leave
clc
dec
cmp
jcxz
lcall
jecxz
adc
and
sub
out
or
cs
stos
rolb
sub
cmp
in
pop
mov
enter
fistpl
lahf
pop
pop
inc
push
inc
push
dec
cltd
pop
jle
mov
cld
shlb
push
repnz
xchg
xchg
pop
jns
jp
lock
sti
out
call
push
sbb
dec
xorl
cmp
cwtl
push
mov
addb
fidivl
add
xchg
pusha
adc
call
mov
in
push
das
cld
xor
jge
nop
and
insb
jp
xor
sbb
sub
inc
push
das
cmp
fildl
xchg
mov
inc
cmpb
call
cmp
add
cmpsb
inc
fldcw
stos
cltd
das
lods
jmp
test
addr16
push
int3
fildll
orb
mov
mov
aaa
les
adc
jnp
mov
les
ror
adc
mov
jns
or
test
in
sub
outsl
sbb
shrb
sbb
mov
inc
je
mov
pushf
push
cmc
aam
adc
and
mov
sbb
or
aaa
xor
lahf
outsl
and
sub
mov
adc
xchg
jmp
push
pusha
or
test
xor
cmp
dec
nop
test
sti
and
jg
pushf
outsl
enter
mov
sbb
push
dec
jne
xlat
mov
push
aad
ror
sbb
xor
mov
popf
mov
orl
push
pop
push
mov
dec
push
or
je
callw
pop
dec
mov
insb
mov
pop
iret
jo
mov
mov
cs
sbb
add
or
shrb
out
stos
js
arpl
lock
ret
mov
rcrl
mov
cmp
adc
cs
ds
std
movl
fbld
and
add
sbb
cld
neg
pusha
bound
enter
and
inc
xor
push
pop
iret
adc
adc
and
xor
cwtl
pop
aas
les
or
jl
push
or
daa
sahf
into
popf
imull
inc
jecxz
mov
mov
imul
rolb
enter
es
enter
pop
dec
fists
adc
inc
jmp
jl
pushf
xchg
js
test
hlt
pop
mov
ljmp
adc
push
adc
add
int
adc
jmp
in
mov
mov
mov
jge
jnp
push
mov
pop
js
fidivl
push
rorl
xchg
mov
int
adc
pop
sub
push
cmp
inc
xchg
pop
fistl
sbb
imul
in
xchg
fidivrs
sbb
pushf
clc
lret
mov
pop
rorb
movsb
adc
mov
xlat
jbe
mov
out
loopne
roll
push
aad
arpl
testl
loope
pop
dec
pop
incl
jo
js
mov
adc
loope
cmp
pop
incb
rcll
test
inc
fdivr
sub
jmp
jo
xor
shrl
icebp
dec
inc
loope
std
pushf
mov
jecxz
push
mov
jb
push
push
mull
cld
sub
add
sbb
rclb
mov
push
add
adc
movsl
lods
mov
sbb
push
push
and
pop
push
nop
fdivrs
mov
jmp
cwtl
jno
repz
call
jae
nop
mov
and
out
clc
roll
and
lods
mov
cmp
addl
add
inc
xchg
andb
roll
or
sub
jmp
nop
pop
cwtl
fnstsw
xor
shll
mov
pop
pushf
aam
icebp
or
loope
leave
ss
pusha
dec
daa
mov
fisubrs
mov
imul
enter
int3
sbb
mov
mov
or
out
mov
xchg
sbb
mov
jmp
inc
and
lods
dec
rcll
adc
jnp
push
sub
loopne
insl
loope
or
lock
inc
pop
fisttpl
sub
push
stc
pop
sti
ffree
mov
orl
dec
shrl
in
xchg
inc
jbe
pusha
ret
cmc
sti
lcall
icebp
mov
mov
imul
mov
scas
aas
clc
xchg
mov
sub
lret
int
nop
rcpps
popf
pushf
jge
stc
and
mov
mov
hlt
pushl
mov
mov
sbb
rorb
in
inc
pop
xor
cli
xchg
mov
outsb
ret
jbe
fisttpl
jo
setbe
imul
mov
xchg
mov
les
lret
bound
cld
nop
lods
xlat
mov
out
mov
mov
ret
push
push
jecxz
out
lret
int
cld
mov
inc
pusha
xchg
mov
sub
mov
frstor
push
jb
aad
lea
aaa
jbe
mov
outsb
xor
stos
xorl
jb
or
out
outsl
divb
sub
das
mov
jge
in
aaa
subb
mov
xor
out
loop
mov
cs
nopl
frstor
inc
dec
sub
decb
sbb
add
push
mov
adc
mov
lret
in
add
xlat
push
push
fdivl
pop
jecxz
fcmovne
dec
sbb
arpl
cwtl
sbb
mov
lods
cmp
add
inc
inc
fstp
mov
sti
adc
cmp
mov
int3
aam
cmc
pop
xor
cmp
dec
out
jbe
mov
insl
jne
and
xor
push
push
dec
mov
pop
and
das
jb
add
adc
jae
or
in
rcrl
pop
scas
xor
or
js
sbb
xchg
adc
daa
sbb
pop
pushf
int
fs
icebp
push
out
lret
clc
xchg
shr
and
cmp
mov
sbb
add
mov
add
ljmp
hlt
mov
cltd
jecxz
pop
call
mov
xchg
icebp
pop
nop
fadd
adc
mov
je
enter
fwait
push
test
jnp
addb
stos
stos
pop
sub
inc
mov
fnsave
ret
inc
mov
addr16
adc
outsb
test
stc
cmp
lret
repnz
imul
cmp
cmp
jbe
nop
fcmovnb
and
jnp
sub
scas
mov
adc
testl
jnp
mov
sbb
movsb
dec
mov
int
mov
data16
mov
sbb
jo
jecxz
pop
jne
sub
lret
jecxz
subb
arpl
xor
gs
dec
mov
dec
leave
js
out
addl
add
jp
jo
add
and
hlt
sahf
cmp
mov
ret
cmpsl
push
sbb
and
xlat
pop
xchg
repz
pop
jne
xchg
fwait
adc
xor
popl
data16
jge
mov
outsl
jcxz
cmp
mov
cmpsl
jg
movq
jnp
sub
sub
rcrl
pusha
nop
add
jno
fsubrs
cmp
leave
and
sbb
imull
mov
cmpsb
mov
in
fbld
pop
lods
sti
clc
pushl
pop
sub
popl
test
fisubs
add
jnp
jmp
rcll
stos
popa
fldl2t
mov
nop
xor
call
mov
pop
dec
rol
je
or
mov
in
pavgw
mov
xchg
cld
shll
add
jge
jo
test
inc
xor
popa
add
push
pop
aas
add
leave
push
call
and
out
push
jle
mov
inc
and
jl
inc
push
jmp
and
mov
adc
ja
push
cmpsb
gs
ret
fildll
jae
imul
rorl
jo
mov
jmp
out
xlat
cmpsl
pop
dec
flds
mov
cmc
int
sub
pop
clc
test
push
adc
rcrl
inc
pop
dec
dec
add
mov
repnz
out
icebp
sub
es
sbb
add
jge
sahf
inc
aas
in
pop
out
aaa
das
mov
iret
mov
insb
rcl
or
xorl
inc
hlt
jne
sbbb
outsl
inc
xchg
popa
mov
sub
mov
mov
mov
sbb
rolb
jmp
or
xor
les
loope
jbe
mov
fs
sahf
lcall
enter
sub
jae
mov
test
fidivl
mov
add
mov
inc
loopne
or
push
cmp
stos
pushf
dec
push
mov
mov
ja
xchg
add
mov
loop
cmp
mov
shl
push
lcall
xchg
pop
xchg
cld
adc
pop
rol
lret
sti
push
rorl
sahf
sbb
dec
dec
mov
mov
cmp
sub
test
arpl
out
out
adc
or
sahf
jp
lahf
cld
mov
ret
pop
mov
and
fstp
sarb
icebp
xchg
fnstsw
add
mov
pop
popf
dec
push
add
and
in
push
repz
xchg
test
add
fiadds
nop
movsb
mov
sbb
in
pop
dec
test
fistps
test
and
shll
dec
ss
adc
scas
sahf
xchg
cmp
push
fs
movsl
test
outsb
dec
mov
push
inc
mov
negb
adc
stos
and
pop
inc
je
nop
imul
adc
dec
je
sahf
bnd
jp
ret
rcrl
and
lahf
in
sub
es
lods
test
pop
and
add
jmp
arpl
mov
mov
mov
lods
loop
imul
sub
sbbl
cmpsl
pushf
dec
insl
fisttps
ret
pop
push
cltd
loop
in
jmp
pop
pop
adc
sub
mov
or
xchg
inc
test
or
xchg
scas
adc
inc
movsl
inc
imul
add
mov
arpl
dec
adc
pop
push
jmp
add
jp
add
fdivs
inc
jg
icebp
add
in
in
xchg
ret
dec
cmp
mov
orl
and
into
cmpsl
stos
cmpsb
cwtl
jmp
ret
jge
rcr
add
ljmp
je
gs
arpl
les
jnp
ljmp
cmp
mov
cmc
dec
add
xchg
cmp
xor
inc
jne
addr16
inc
in
push
lcall
mov
jnp
cmp
dec
sbb
loope
lret
xorb
push
lret
xchg
cmp
jmp
mov
adc
xor
inc
jb
jge
movsb
mov
push
mov
notl
mov
hlt
lock
adc
sti
daa
fildll
sub
sbb
sbb
pop
adc
iret
les
cltd
sbb
dec
lds
test
add
adc
loope
mov
fcomps
pop
push
sub
sbb
dec
push
loope
ss
pop
lods
mov
popa
pop
inc
jo
stos
xchg
jae
andl
dec
clc
jmp
push
xchg
and
sub
push
cld
xor
pop
mov
push
shrl
mov
shld
jnp
dec
pop
popa
enter
clc
fidivl
mov
test
or
int3
xor
add
cmp
lahf
in
stc
scas
js
or
call
ret
ret
add
pop
push
out
jg
lds
inc
je
sub
addb
ds
add
jecxz
hlt
jp
mov
xchg
mov
mov
ss
les
and
pop
inc
adc
out
jbe
ds
cmp
mov
enter
mov
movsb
inc
outsb
pop
dec
mov
inc
inc
movl
xorl
hlt
mov
pop
mov
mov
call
dec
leave
fists
fsub
std
cmp
test
adc
and
mov
pop
mov
cs
cwtl
cmc
mov
mov
mov
imul
push
popf
fwait
inc
pop
nop
or
cmp
xchg
xor
sti
pop
sub
pop
sbb
cmp
adc
push
pop
jge
push
add
cmp
mov
dec
das
add
sub
sbb
aad
sbb
mov
scas
js
aas
fwait
cmp
sbb
push
mov
arpl
adc
push
arpl
inc
loop
aam
add
test
sbb
inc
cwtl
or
cwtl
cmc
mov
or
mov
add
hlt
sub
stos
mov
lock
data16
inc
xor
in
inc
jg
aas
stos
pop
inc
mov
inc
push
xchg
ds
shll
mov
xlat
or
push
movsl
sbb
jl
icebp
jle
pop
pop
int3
push
sub
ror
cld
xchg
loopne
sub
mov
cld
adc
call
popa
mov
pop
popf
pop
pop
nop
negl
scas
add
cmp
push
mov
jl
cltd
data16
fcmove
cli
push
rolb
push
push
filds
xor
xor
aad
push
jbe
cwtl
movsb
or
xor
sbb
mov
out
fldl
mov
aam
cli
xor
sbb
dec
cltd
dec
cmpsl
jbe
cli
mov
adc
cmp
mov
lahf
ljmp
jecxz
fadd
mov
push
cmp
and
in
ja
ljmp
ds
outsb
push
lahf
jecxz,pt
pushf
out
mov
rclb
stc
push
xor
orl
dec
push
lret
xchg
lods
xchg
mov
icebp
xor
mov
push
orl
cld
subl
mov
lds
addr16
jmp
test
clc
popf
jmp
push
sbb
inc
pop
outsb
outsl
mov
add
sbb
imul
std
ret
pop
sbbb
das
push
and
add
fidivrl
jp
icebp
or
ret
into
aam
cmp
sub
add
sub
clc
jmp
sub
mov
lock
or
arpl
mov
insb
mov
pop
jg
mov
inc
ret
nop
and
mov
pusha
and
sub
jae
fcoms
pop
and
pop
cmp
mov
les
int
pushf
stc
movsb
insl
inc
dec
and
fstl
lret
add
mov
pop
xchg
xlat
into
xor
fadds
jmp
lea
push
stos
mov
or
push
outsl
js
fadds
sbb
in
push
cmp
imull
dec
outsb
xor
sub
xor
jns
scas
xor
es
imul
pop
push
lret
inc
push
jl
pop
fldenv
mov
mov
outsl
scas
adc
sbb
sti
fisubrs
in
push
call
cmpsl
push
sub
add
push
inc
std
inc
fiadds
int3
push
sbb
lock
sbb
lcall
int
xor
add
ljmp
stos
lcall
jnp
pop
mov
sbb
push
scas
sbb
push
outsl
mov
ljmp
jmp
sbb
adc
test
sub
ja
or
shr
loop
pop
stos
outsb
insl
jp
pop
mov
inc
ljmp
pop
sbb
test
mov
lds
mov
nop
fldt
or
inc
cli
ljmp
xor
xchg
or
inc
dec
sbb
cmp
mov
dec
adcl
ja
fnstenv
repnz
ret
push
fidivl
pop
inc
xchg
dec
xchg
and
mov
mov
or
jp
xor
decl
push
mov
add
fdivs
cmp
mov
dec
fidivrl
and
xchg
mov
aas
data16
xor
ret
pop
insl
mov
jbe,pn
xchg
popa
jmp
adcb
not
in
inc
and
and
mov
mov
fnstsw
mov
jecxz
addr16
mov
push
adc
addr16
test
and
xchg
arpl
fldt
sbb
dec
lock
sbb
push
loop
sbbl
pop
xchg
xchg
sahf
lcall
push
addb
insl
ret
add
or
dec
hlt
inc
shll
lret
les
rcl
push
xchg
cmc
sbb
pop
fsubl
lods
cmp
andb
and
aas
mov
loop
dec
dec
mov
and
pop
adc
xor
dec
in
enter
inc
ret
mov
fldcw
mov
into
stos
and
adc
or
xorb
lods
mov
and
jle
ljmp
imul
xlat
or
sbb
rol
or
ljmp
jbe
or
js
sbb
sar
pop
and
pop
sahf
in
jge
inc
movl
pop
dec
mov
sub
ret
or
inc
fdecstp
int3
sbb
sahf
call
pop
lods
movsl
pop
outsb
sbb
gs
pop
inc
mov
inc
test
ja
lods
daa
add
or
add
xor
mov
fcompl
add
mov
or
dec
xorb
jns
add
xchg
fistl
cmp
data16
jecxz
mov
push
std
push
in
adc
arpl
jmp
lret
pop
xchg
xchg
jp
leave
jnp
out
and
shll
les
or
mov
cmp
cld
xchg
add
and
xor
lock
lock
cmpsb
inc
lahf
add
popf
vpinsrw
adc
orl
test
ret
sub
shrl
add
testb
sub
or
movsl
jnp
pop
mov
inc
xor
js
fstpt
pop
fcoml
std
add
jl
mov
rclb
inc
in
jb
xor
js
mov
pop
push
imul
adc
sub
sub
outsl
repz
orl
push
cltd
stc
ljmp
push
mov
or
mov
popa
or
nop
mov
iret
mov
jbe
jmp
mov
or
shlb
mov
jmp
je
jecxz
jmp
adc
js
cmp
lahf
movsb
cmp
ret
jp
negl
push
pop
push
popa
pop
fwait
pop
mov
pusha
cli
clc
cmpsb
test
mov
test
pusha
divl
jbe
out
iret
xchg
je
jg
pop
insb
pop
insl
call
and
into
sbb
mov
inc
ret
jne
ja
jbe
out
les
sbb
and
xchg
loop
pop
sub
aas
inc
test
mov
or
mov
lret
shrl
pop
icebp
js
and
jg
jo
inc
xchg
test
cmp
js
loop
nop
sbb
mov
dec
mov
popl
rclb
negb
je
in
ret
mov
add
sub
pop
mov
adc
iret
rcrb
cwtl
dec
les
push
cmc
daa
add
shlb
and
or
stc
jno
insb
mov
jmp
xchg
mov
dec
push
push
test
andl
add
adc
inc
pop
adc
stos
mov
and
dec
js
andl
pop
cmp
sarb
lahf
shll
xor
pop
pop
sub
xor
addr16
jb
lret
jge
push
mov
cli
push
mov
ret
cmp
loop
rcl
adc
jge
dec
adc
sub
fcompl
cmpsb
push
inc
pop
scas
andl
mov
imul
loop
lds
dec
jo
aaa
insb
sti
pop
dec
or
jnp
mov
jno
adcl
mov
ljmp
pushf
mov
cmp
stos
pop
xor
fstpl
push
mov
mov
mov
and
cmp
push
jge
push
cmp
lds
xchg
cmp
push
mov
jecxz
adc
cs
pop
repz
xor
mov
aaa
insl
or
arpl
aad
push
xchg
subb
jmp
scas
push
ficoms
mov
movsl
mov
lahf
fistpll
dec
jg
stos
test
ja
ret
pop
xor
dec
jae
cli
arpl
dec
insb
add
adc
xchg
cmp
jl
leave
xchg
pusha
inc
xor
fisttpll
test
fwait
mov
dec
mov
push
fs
pop
dec
imul
js
or
dec
mov
aad
fidivrs
push
stos
outsb
cmp
xor
pop
popa
or
dec
iret
xchg
adc
cmp
daa
inc
ret
cld
in
add
sub
movb
inc
sub
fidivrs
or
decl
insl
add
lahf
gs
scas
xchg
xor
pop
nop
scas
in
leave
cmp
push
test
lret
inc
push
iret
mov
lret
or
or
pop
scas
pop
sbb
and
cmp
adc
mov
jge
ds
mov
jle
adcb
push
pusha
es
mov
or
clc
cli
testl
aas
int3
jp
insb
or
xlat
cltd
iret
mov
ds
mov
lret
je
inc
xorb
inc
aas
rclb
or
hlt
negl
or
dec
inc
cli
int3
pusha
xor
arpl
das
mov
rcll
sub
xchg
movsl
loope
adc
sbb
insl
mulb
mov
inc
arpl
out
shrl
sbb
jg
fidivrs
repnz
in
add
lcall
mov
pop
push
imul
push
adc
ss
sub
pop
pushf
in
je
lock
popf
insb
push
je
enter
pushf
xorb
jb
in
xchg
cmp
xor
lods
mov
pop
cmp
pop
adcb
fiaddl
into
xlat
pop
mov
lea
fadds
or
es
mov
pop
mov
sbbb
mov
inc
into
popf
test
inc
push
mov
mov
or
push
outsb
loope
cmp
and
mov
push
ret
xor
cmp
aad
jge,pn
pop
or
push
xor
adc
ljmp
sbb
cmc
test
dec
jno
mov
js
fstpt
xor
sbb
jl
push
mov
cmc
inc
call
add
or
add
sub
pop
repnz
xchg
dec
jge
mov
adc
sbb
fisttpl
pop
or
mov
imul
cld
fcmovnb
ret
icebp
sub
cmp
addb
call
or
sub
stos
xor
pop
ficomps
cmp
in
cmp
push
aas
cmc
int3
push
inc
out
add
add
jne
cwtl
adc
rolb
imul
cld
xor
mov
adc
cmpsb
cmc
add
shll
mov
mov
or
clc
add
mov
mov
pusha
or
xlat
and
call
aaa
into
sub
jle
or
out
pop
mov
fsubrl
xchg
fs
jp
fnstsw
mov
iret
inc
inc
lea
ds
xchg
adc
fisttpl
xor
pop
jns
dec
add
and
mov
mov
in
inc
fwait
ja
dec
jmp
clc
and
or
inc
aaa
and
or
push
mov
fildl
in
jne
jbe
pop
fcomip
mov
fildll
mov
lcall
fcoms
cs
sub
out
pop
popa
sub
cmpsb
jmp
dec
mov
pop
jge
xorl
mov
enterw
lock
mov
dec
sbb
sbb
jns
inc
ss
icebp
jmp
push
mov
std
gs
imul
cld
add
aas
push
adc
lcall
ja
les
mov
lods
loopne
out
sbb
in
scas
sbb
call
jmp
int
int3
mov
jno
cltd
xor
inc
psubq
xor
ds
sbb
jae
roll
or
andb
inc
les
cmp
repz
mov
inc
mov
je
mov
and
outsb
movsb
pop
lcall
shrb
in
mov
scas
add
test
push
clc
or
inc
sbb
das
stos
fistl
subb
aad
add
push
test
sub
dec
mov
or
and
pusha
cmp
insb
lret
ss
lods
pop
adc
sub
aam
sub
test
mov
cli
lcall
cmp
and
dec
mov
push
and
test
call
mov
mov
xor
lea
pop
lret
je
and
jns
punpcklwd
lahf
cmp
cmp
mov
jge
nop
adc
in
lret
mov
inc
out
mov
repnz
and
mov
or
shlb
popa
int3
dec
lds
xor
add
jecxz
mov
inc
call
lret
je
xlat
jne
rcrb
jle
sbb
sub
fs
xlat
add
aaa
sbb
mov
inc
das
xor
mov
daa
test
cmp
xorb
inc
ret
repz
mov
pop
dec
adc
imul
notl
xor
cmp
or
jns
test
or
and
push
inc
push
inc
or
ret
arpl
adc
add
test
jp
ljmp
jge
jmp
repnz
ljmp
scas
mov
pop
and
mov
mov
push
sub
sub
ss
in
sub
or
jne
inc
jno
adc
lds
cmpsb
sarb
sbb
or
mov
push
into
addb
adc
call
loope
cmpsb
lock
mov
mov
sbb
mov
mov
push
inc
shlb
xchg
mov
fsub
jmp
mov
jmp
xchg
pusha
pop
ds
je
imul
mov
and
push
stos
or
jbe
testl
jae
mov
mov
or
popa
or
sub
arpl
xchg
data16
clc
subb
cmp
lds
insb
cmp
sub
dec
pop
mov
in
add
dec
or
push
popl
inc
daa
pop
mov
or
test
loope
sbbb
add
lahf
push
inc
es
fwait
cmpsb
inc
inc
sub
jl
sbb
jge
dec
nop
fcomp
dec
dec
cmp
test
stc
or
sbb
add
scas
and
jae
iret
add
fsubs
scas
jge
mov
dec
je
fcompl
fldcw
testb
sbb
jge
xor
movsb
dec
insb
mov
dec
adc
ljmp
daa
aas
imul
inc
and
mov
and
outsl
cmp
les
mov
xchg
fbstp
les
ja
add
cld
loop
xchg
cmp
push
imul
xchg
adc
sbb
out
call
cmpsb
nop
jnp
test
incl
mov
push
inc
loope
push
je
int
cmp
insb
cmp
pop
and
addr16
fld
int3
mov
pop
movd
xor
push
xor
rorl
push
fdivrl
inc
jns
pop
push
dec
decl
mov
mov
arpl
jge
cmp
int
dec
jl
jno
out
xor
scas
lcall
cmpsl
push
stos
add
push
std
lret
stos
loopne
mov
sbb
or
mov
icebp
inc
lcall
cmp
jge
cmp
add
loope
movsl
ret
dec
xor
bound
lock
pusha
daa
scas
lds
lea
cli
shlb
mov
push
dec
loope
jp
das
add
xchg
pop
pop
mov
jg
xor
jae
test
cmp
mov
shrl
adc
mov
or
cli
pop
lret
sbb
xchg
and
or
stos
loope
sbb
jo
xorb
jno
imul
pop
mov
pop
mov
out
push
jne
push
xchg
and
int3
outsl
jl
or
rcll
aad
fs
cli
icebp
lods
dec
xor
fcomps
daa
mov
lods
pop
icebp
add
insb
mov
mov
xchg
out
jne
mov
and
out
jmp
add
mov
loope
fists
mov
xchg
mov
mov
test
lods
iret
test
mov
ret
pop
jbe
push
into
and
insl
insl
sar
add
mov
mov
loope
fcom
fisubrl
xchg
mov
hlt
aas
js
jno
xor
inc
repnz
sbb
jne
jl
sbb
int3
xor
sbb
rorl
clc
ss
pushf
push
es
iret
mov
call
fadds
or
add
inc
add
jmp
lds
mov
loope
push
fdiv
and
adc
cmp
cmc
push
and
test
mov
inc
sub
inc
in
push
pop
jb
cwtl
cli
xor
rorl
decl
xor
pop
dec
scas
insb
pusha
jecxz
mov
dec
ret
pop
ror
lret
lock
jmp
xchg
movl
enter
xorl
int3
lods
lcall
push
rcrb
and
and
push
outsb
add
sub
sub
sub
mov
dec
and
and
mov
cmp
lods
fcomp
leave
xor
iret
mov
sbb
sti
in
lcall
pop
aam
pop
jne
ret
inc
sahf
js
push
rorb
mov
int
jmp
dec
jle
xor
xor
rcr
loop
sub
leave
xchg
in
outsl
stc
outsb
jg
push
lret
mov
dec
mov
mov
insl
inc
adc
or
test
mov
mov
sub
cmpsb
dec
pop
jb
arpl
pop
mov
repz
dec
loop
xor
dec
cmpsl
mov
sarb
push
sar
jmp
imul
adc
xchg
ficoml
roll
aas
out
mov
mov
add
xchg
jnp
inc
push
orb
sbb
ds
shlb
sahf
insb
aas
jg
daa
popf
sbb
dec
popa
add
dec
and
ljmp
jb
mov
cs
iret
inc
sub
ficomps
bound
fistps
sbb
sbb
pop
imul
jge
mov
outsl
mov
xchg
xchg
xlat
adc
shll
pop
inc
mov
movsl
and
test
test
addr16
imull
subl
dec
or
bound
cmc
mov
xor
dec
push
lcall
es
das
clc
push
xorl
loopne
incb
outsb
add
mov
sahf
jnp
inc
lret
jb
cmpsb
sbb
lods
dec
mov
pop
jecxz
dec
sbb
mov
lds
sti
mov
lds
xor
pop
dec
pushf
mov
or
mov
insb
jge
jl
dec
testb
xor
cld
sbb
xor
dec
mov
ss
push
push
loopne
xchg
jmp
xor
icebp
dec
inc
xchg
or
mov
cmpsb
or
add
aas
test
data16
iret
or
jp
sub
outsb
xor
cs
jns
and
pop
xchg
sbb
and
aaa
xchg
shrb
loope
testb
mov
repnz
lcall
push
rcl
xchg
and
adc
sub
aad
adc
dec
cmp
mov
loopne
lea
lahf
outsl
outsb
fisttpll
push
loop
sub
jno
shrl
test
xor
push
jne
or
mov
xchg
sub
out
jl
dec
nop
loope
test
cld
enter
mov
mov
sub
push
add
jb
sub
inc
mov
xor
ja
fcompl
pop
cld
cli
and
sbb
add
sbb
add
ret
pop
cwtl
pop
lock
dec
cmpsb
popf
subb
fidivl
jno
je
or
test
xor
mov
mov
mov
aas
mov
inc
sbb
cmp
and
movsb
pop
mov
pop
leave
mov
insl
arpl
loop
mov
mov
pop
sub
fcoms
lret
mov
mov
or
mov
xchg
fsubs
mov
call
ja
lret
mov
sub
pop
jp
mov
mov
inc
push
push
pop
es
mov
into
and
cmp
aad
mov
xor
jns
aam
inc
jb
jno
mov
jp
sti
inc
mov
movsb
mov
inc
pop
xchg
in
xor
and
cltd
shl
jae
cmc
pop
mov
and
xchg
mov
cmp
inc
loopne
mov
sbb
dec
test
outsl
dec
in
lahf
push
das
insb
cli
cmc
adc
testb
pop
mov
imul
adc
and
push
fstl
push
mov
insl
cmp
adc
movsb
popf
cwtl
repz
cmpsl
xlat
std
xor
sarl
adc
add
iret
or
cmpsb
mov
pushf
aad
jbe
push
inc
test
cmp
mov
lea
jne
js
xor
or
lea
ret
ds
test
pop
mov
sub
inc
cmp
xchg
arpl
add
push
aam
adc
xor
sarb
xchg
push
xchg
jns
movsb
push
jbe
icebp
scas
ret
fnsave
add
js
mov
and
sbb
shlb
lock
push
xchg
sbb
daa
mov
rorb
mov
push
add
sbb
mov
dec
or
pop
stos
cli
and
ret
pop
inc
ficoml
out
push
xchg
or
popa
xchg
push
testl
cmp
push
or
dec
stc
dec
out
sti
in
out
cmp
mov
jecxz
jb
in
div
aad
mov
dec
addr16
pop
pop
js
mov
je
out
inc
jnp
and
push
xchg
inc
in
fisttpll
xchg
mov
clc
push
adc
lods
loope
mov
scas
push
cmp
jmp
cmp
pop
test
push
movsl
mov
push
sub
fcmovnbe
dec
sub
test
mov
clc
imul
sbb
add
scas
popa
ret
shl
mov
add
dec
adc
add
jg
popf
pop
add
hlt
pop
clc
and
mov
movsl
cltd
inc
or
inc
sub
lods
lret
fimull
push
and
push
lret
sbb
mov
shlb
adc
xchg
sti
stc
push
pop
mov
xor
imul
sub
jne
dec
outsb
jne
cmc
addr16
enter
int
mov
sti
xchg
mov
arpl
fdivp
mov
and
movsb
cmp
pushf
scas
inc
or
lods
mov
mov
push
decb
xor
push
iret
xlat
xor
mov
sub
inc
mov
jmp
sbb
push
push
inc
jecxz
or
dec
scas
stos
mov
leave
mov
push
inc
pushf
les
push
dec
mov
ss
cmp
dec
popf
sbb
pop
xchg
fidivl
xchg
scas
aad
sbb
push
pop
sarb
cmpsb
push
cmp
mov
mov
mov
push
xor
in
and
insl
or
outsb
inc
out
sub
testb
and
mov
jbe
xchg
sbb
adc
mov
mov
mov
in
mov
movd
pop
cmpsl
in
mov
push
mov
mov
jg
enter
leave
adc
mov
test
and
fdivrs
popf
or
out
pop
mov
push
push
sub
xor
pop
rcrb
nop
enter
sbb
mov
fneni(8087
loope
sbb
mov
inc
rcl
xchg
fstl
enter
pop
fsubrs
pop
pop
int
cmp
mulb
sarl
jle
js
mov
inc
test
icebp
mov
aad
or
sub
cmp
ss
test
jnp
or
sub
push
clc
add
sbb
test
lock
lods
xchg
clc
shlb
ljmp
xor
xchg
call
lea
push
sbb
gs
push
ret
mov
pop
adc
movsl
sbb
ficoms
fsubs
mull
pop
mov
jg
out
outsl
loope
xor
les
aaa
mov
dec
xchg
xchg
pop
or
xor
je
mov
insl
inc
cmp
out
xor
shll
aas
std
insl
rcll
xadd
dec
inc
and
fisttpl
or
ss
pop
nop
fldt
mov
mov
test
mov
out
js
rol
pop
pop
mov
lods
jge
cmc
inc
or
inc
inc
mov
jmp
sarb
dec
loope
inc
pop
sbb
adc
xchg
cmp
push
xor
jg
mov
data16
stos
dec
inc
push
andb
adcl
and
xchg
push
in
push
loopne
enter
lret
mov
push
xor
mov
mov
pop
xchg
inc
add
orb
bnd
roll
arpl
and
and
cmp
sbb
jns
cmp
inc
movsb
dec
add
mov
pop
jge
sar
jno
jle
xor
dec
loopne
sbb
mov
je
dec
daa
xchg
jb
pop
pop
dec
push
cmpsl
into
xchg
das
test
jns
lock
je
inc
mov
pushf
sub
jge
daa
jne
fistpll
dec
adc
push
mov
out
sbb
add
movsb
sbb
aaa
sahf
sbb
test
pop
add
lock
xor
push
mov
adc
xor
pop
out
dec
add
icebp
push
xchg
fwait
test
mov
imul
push
xlat
dec
dec
mov
inc
mov
xchg
add
xchg
insb
lods
mov
mov
and
mov
lods
mov
hlt
jno
add
testb
mov
and
in
sbb
insl
into
pop
clc
pop
jno
inc
out
repnz
mov
in
adc
popa
inc
xchg
cmc
nop
sbb
mov
mov
mov
xor
pmullw
or
add
xor
push
and
and
mov
dec
int3
aad
cmpl
adc
lcall
sbb
sub
pusha
je
pop
bound
adc
or
and
add
call
cmp
dec
xchg
movsb
mov
xchg
xor
mov
fmul
jg
pop
fildl
lea
pop
je
cmpb
lea
mov
dec
les
jbe
adc
mov
mov
je
inc
jnp
push
or
ret
add
or
xchg
test
inc
pop
add
mov
test
out
and
sbb
sub
cmpsb
cmc
sub
or
cli
pop
xorl
insb
mov
lods
push
or
das
fsubr
add
mov
fwait
aaa
inc
out
addl
jl
mov
cmp
adc
pop
jae
into
insb
sbb
ss
dec
xor
push
adc
or
lcall
inc
fdivr
fwait
adc
movsb
xchg
movsb
cmp
pop
adc
ja
outsb
test
repnz
shld
ljmp
mov
fmull
add
dec
in
pop
pop
lret
das
pusha
cmp
mov
into
into
sub
loopne
push
out
fs
add
add
lea
push
test
mov
inc
add
movzbl
cmp
sbb
stos
adc
add
mov
outsb
cli
daa
cltd
stos
aaa
jne
sbb
rol
mov
adc
jg
js
pop
and
mov
push
in
std
lock
lcall
lea
and
jmp
cli
inc
push
jno
andl
cld
cmpl
push
pop
in
mov
mov
stos
insb
cwtl
icebp
push
adc
mov
or
dec
jne
dec
or
pop
push
xchg
lods
js
inc
push
shll
test
loopne
aaa
mov
push
push
das
jne
mov
push
ja
cld
add
inc
je
jecxz
sub
test
aas
sbb
cmp
mov
int3
insb
mov
sbb
mov
shlb
cmp
mov
sbb
pop
jge
fs
dec
or
xor
add
mov
dec
lock
push
iret
jb
loop
xor
movsb
ds
lock
scas
roll
in
popa
push
scas
std
or
push
pushf
mov
jp
flds
mov
sub
lea
roll
add
jns
shrl
mov
roll
mov
insb
and
inc
jle
sarl
push
mov
inc
pop
mov
push
les
jl
lea
aad
add
ficomps
jb
movsl
stos
push
int
mov
clc
mulb
aas
enter
icebp
mov
dec
mov
sahf
ret
jo
inc
adc
jge
mov
ret
jg
push
mov
and
and
add
adc
sar
xchg
lcallw
sbb
add
mov
sbb
mov
cmp
test
shr
sahf
test
aaa
fadds
mov
xor
add
fdivrp
outsl
sub
dec
inc
mov
cmpsb
jg
lcall
inc
adc
and
mov
std
sbb
mov
sarl
std
jl
ret
push
cld
add
int
andl
pop
inc
xchg
jo
mov
mov
pop
popf
pop
push
gs
dec
pop
lock
adc
add
ja
sbb
jae
inc
not
bnd
sbb
lods
sarb
mov
addr16
adc
xor
push
addr16
jge
and
add
outsl
jo
mov
add
push
jge
pop
sub
push
pop
add
movsb
add
adc
jecxz
mov
test
xchg
fcoml
ret
jne
nop
mov
add
int
pusha
test
xrelease
inc
mov
xchg
xor
std
adcl
imul
mov
jp
xchg
pop
cmp
pop
adc
cli
mov
inc
loopne
arpl
xchg
and
push
xchg
les
insb
jecxz
and
popa
mov
sarb
rorl
xorb
adc
stos
mov
push
mov
xabort
mov
fs
inc
shlb
icebp
adc
aas
stos
aas
outsb
icebp
adc
orl
outsb
leave
adc
xchg
inc
dec
aam
popf
sub
or
cld
inc
cmpl
pop
inc
mov
pop
cmc
and
xchg
mov
cmp
pop
popl
mov
xchg
add
push
insb
subl
dec
ret
enter
jbe
xorl
movl
jge
mov
sar
orb
adc
lret
mov
xlat
icebp
dec
sarb
mov
loop
pop
orl
divb
push
adc
pusha
push
cmp
adc
scas
test
xchg
xchg
lahf
movsb
add
sub
and
and
mov
arpl
inc
pushf
push
xchg
rclb
loope
mov
das
cmpsl
mov
nop
mov
outsb
and
mov
stc
jle
pusha
arpl
repnz
divl
mov
cmpsb
push
and
icebp
maxps
outsl
mov
push
orl
inc
mov
lret
cli
adc
sbb
mov
or
mov
mov
add
mov
jne
adc
pusha
mov
and
imulb
fmuls
icebp
inc
and
data16
jbe
std
aas
test
xor
or
mov
add
xchg
movsl
ret
push
test
fcoms
and
pushl
loope
setne
inc
adc
jecxz
inc
inc
xchg
pusha
stos
outsb
sbbb
xchg
mov
add
mov
shr
mov
aaa
cmc
add
push
mov
inc
or
xor
loope
jae
out
jb
mov
push
sbb
sbb
fwait
es
mov
push
jecxz
leave
repz
inc
and
xor
shrb
pop
fisttpl
cmp
push
jo
je
mov
test
mov
std
push
stc
adc
mov
ss
sub
xchg
xor
jp
lods
sub
cs
bound
fistps
test
and
shrl
aad
sbb
rcr
or
mov
mov
and
enter
js
enter
test
dec
sub
wbinvd
loopne
fldenv
scas
dec
adc
cmp
or
outsl
ja
jmp
sub
xor
jno
jecxz
cmp
mov
fcomps
push
xchg
adc
sub
aaa
push
insl
adc
loopne
cmpsl
dec
cwtl
adc
dec
jge
or
iret
adcl
xor
lods
mov
inc
std
pushf
je
out
ljmp
fdivl
bound
jb
sti
cmp
or
sub
pop
inc
mov
sub
imul
mov
inc
popf
and
test
es
pop
loop
mov
cmp
sub
inc
testb
fdivs
dec
pop
push
mov
xor
add
clc
or
shlb
fwait
loop
jne
add
inc
aam
aam
movsb
aam
in
sysenter
pusha
xor
and
shlb
push
in
popa
xor
push
cmp
push
xor
cmp
sbb
push
inc
xor
fsts
rcrb
xor
jne
outsb
sub
xorb
in
clc
repz
dec
das
inc
push
or
fldt
sti
mov
into
inc
stc
adc
sub
push
or
out
lods
inc
add
pop
add
xchg
push
xor
jmp
iret
into
repz
rcl
mov
add
jecxz
scas
nop
outsb
cmpsb
push
inc
pop
adc
jl
mov
out
mov
dec
addl
shrl
sbb
cmp
nop
les
pop
xchg
pop
repz
jle
xor
mov
pmullw
mov
mov
add
push
loop
add
test
mov
push
nop
and
stos
into
sub
idiv
sub
sbbb
adc
rclb
rolb
out
mov
mov
or
stos
cmp
out
mov
repnz
xor
mov
inc
in
gs
cli
sbb
sub
cli
subl
cmc
mov
adc
fwait
outsb
cwtl
cli
xchg
add
push
xor
fidivl
aas
mov
add
xchg
or
cmp
push
hlt
bound
jns
std
in
sub
adc
jnp
ret
mov
leave
and
mov
call
or
dec
sti
insb
shrl
fisttps
ja
clc
push
jg
sub
xor
adc
mov
in
fidivrs
ds
and
dec
je
xorb
pusha
mov
sbb
inc
adc
push
xorb
in
test
xchg
filds
iret
daa
cmc
push
in
outsl
pop
call
pop
pop
fs
adc
jle
xlat
mov
clc
pop
test
daa
push
adcl
fwait
sbb
push
mov
test
push
lcall
testl
adc
xchg
pushf
in
cli
push
mov
hlt
or
mov
or
ds
mov
retw
loope
sbb
in
ss
scas
movsl
movsl
dec
in
or
das
dec
sub
cmc
nop
stos
sbb
mov
xchg
mov
sbb
inc
ret
sub
jo
fcoms
mov
adcb
adc
sarl
jp
sbb
lahf
das
jle
inc
insl
pop
inc
icebp
lcall
xchg
xor
cmp
cmpsl
and
and
and
movsb
pop
fdivl
mov
cmp
or
std
cli
mov
and
pop
sti
test
adc
fcmovb
daa
jle
and
inc
dec
fdiv
outsl
flds
stos
and
je
and
test
dec
icebp
mov
and
push
push
push
pop
mov
push
lock
es
jae
fisubl
push
outsl
insb
fdivr
stos
xchg
fstps
pop
mov
test
je
pop
mov
sub
mov
pop
orl
and
aas
push
js
lock
and
inc
push
stos
insb
xchg
mov
test
mov
sub
sbbl
mull
or
adc
aad
hlt
adc
inc
push
pop
cmc
insl
mov
sbb
xor
jo
jmp
fcompl
adc
push
xchg
ret
push
clc
mulb
js
mov
ja
pop
ss
lods
mov
test
femms
icebp
xchg
leave
addr16
scas
mov
movl
int3
push
jg
inc
mov
or
ja
je
adc
mov
jb
dec
xchg
cmp
data16
insl
or
adcb
test
mov
repz
add
add
fisttpll
mov
cmp
test
sub
inc
insl
jns
mov
mov
add
loop
hlt
mov
ds
scas
cmp
outsb
jle
arpl
dec
repz
push
push
xchg
mov
dec
lds
pop
sbb
mov
hlt
flds
movsl
jp
pop
lret
jge
mov
out
stc
loopne
fcmovnbe
loop
ret
adc
cmp
icebp
movsl
or
ret
aam
sub
imul
jecxz
test
std
out
lds
insl
adc
sub
sub
jge
xor
cwtl
out
inc
je
hlt
mov
inc
insl
jmp
add
fwait
sbb
push
cwtl
cmp
mov
insl
mov
lds
lock
xor
stos
push
arpl
js
pop
mov
pop
cli
mov
jb
sbb
and
repz
pop
subb
xchg
aas
arpl
mov
and
adc
or
dec
fsub
nop
mov
idivb
push
push
addb
out
xchg
pop
jecxz
cmp
loopne
jge
into
jb
loopne
repz
ds
add
push
insl
mov
add
mov
xchg
lea
nop
mov
xor
and
and
xchg
adc
cmc
xlat
jecxz
inc
cmp
mov
or
add
push
ror
pusha
xor
xchg
loop
fs
push
xor
shl
loop
sub
mov
insl
cli
aad
push
mov
loop
xchg
xor
jecxz
test
mov
lahf
push
pop
add
jg
pop
js
xor
lret
sub
inc
xchg
test
xchg
sub
mov
mov
addr16
loop
call
in
cs
xchg
je
in
push
ljmp
jbe
cs
les
mov
jae
ret
cmp
test
mov
mov
popa
nop
mov
cmp
mov
push
in
ret
rcrl
fadds
cmp
les
sar
js
xchg
sub
jg
out
ud0
repz
shll
repnz
jge
and
and
or
or
test
dec
pop
movsb
mov
mov
fldt
hlt
lahf
cmp
pop
xchg
stc
fistpll
inc
test
jp
xor
mov
sahf
fmull
cmp
cmp
pop
pop
icebp
movsl
xchg
pop
ds
or
jne,pn
shlb
mov
mov
jno
rclb
int3
repnz
push
cmp
sbb
xor
jne
leave
lahf
add
cmp
cmp
xchg
aaa
cmp
fcomps
fidivrl
cwtl
lcall
dec
mov
mov
or
out
pop
ror
mov
dec
mov
repnz
outsb
movsl
sub
push
or
cmp
lods
push
pop
xchg
aad
icebp
cs
and
pop
jbe
into
adcb
jns
aas
xchg
pop
pop
faddl
jl
popf
cmp
push
pop
shll
jmp
push
rcll
jnp
stos
in
mov
insb
cmp
fdivl
ljmp
cmp
xlat
add
push
inc
clc
sbb
ja
add
cli
in
scas
ret
xchg
addl
inc
or
xlat
mov
setp
and
mov
sub
sbb
xor
inc
inc
dec
adc
stc
mulb
dec
add
fs
xchg
aas
adc
jo
inc
in
or
cmpxchg8b
leave
mov
outsb
xchg
inc
popf
cmpl
mov
pop
push
pop
clc
xlat
or
fucom
sahf
or
mov
in
jns
mov
ss
into
jo
addb
pushf
jbe
push
jl
xchg
xor
mov
lret
push
push
xchg
pushf
cmp
pop
dec
cmp
pushf
and
mov
aad
fwait
dec
icebp
inc
cmp
dec
aaa
jbe
jmp
je
popa
test
sub
aad
fs
adc
mov
and
jl
sub
mov
icebp
jl
fisttps
dec
jo
xor
sbb
pop
cmpsl
or
or
add
jl
repz
lea
add
out
pusha
cltd
mov
sub
fldcw
repnz
xor
insb
mov
cmpb
faddl
mov
inc
in
mov
lods
and
je
xchg
cmp
out
jp
sub
adc
sbb
ds
pop
push
nop
mov
lods
sub
dec
lahf
push
jg
push
cmp
jbe
add
xor
fimull
sub
xchg
or
push
dec
data16
fnstcw
jmp
or
movsl
jnp
filds
outsl
addr16
mov
sub
imul
xchg
je
inc
in
sub
sbb
cmpsb
jne
push
cmp
fdivr
add
inc
addr16
xor
adc
jmp
mov
ljmp
pop
adc
mov
mov
outsb
fdivrl
xlat
gs
push
loope
mov
sub
daa
aas
insb
jle
outsl
stos
sub
mov
adc
fbstp
sbb
fistpll
or
jp
aad
sub
mov
mov
shl
pusha
clc
test
dec
cs
and
repz
fidivrl
int
xchg
xor
mov
stc
jnp
jge
or
orb
jge
fnstcw
and
jne
sub
lods
femms
pop
fs
int3
sbb
add
lods
adc
popa
cs
aad
das
int
mov
nop
mov
inc
jecxz
ja
or
into
dec
insb
sub
mov
and
jbe
push
xchg
sbb
pushl
mov
cmpsl
aas
negb
repz
inc
xlat
or
pop
test
popa
sub
xchg
sbb
dec
adc
and
mov
rcr
push
icebp
mov
int3
add
call
mov
adc
xchg
je
sbb
cli
callw
imul
loopne
inc
push
adc
and
shrb
mov
jo
mov
addl
dec
push
leave
or
inc
add
sbb
adc
sub
and
loopne
cmc
out
addr16
xor
pop
mov
adc
adc
ss
sub
es
jle
jns
js
or
jmp
xchg
rcl
cmpsl
adc
mov
cli
andl
icebp
imul
dec
jbe
nop
sub
mov
pop
jo
iret
das
in
add
adc
adc
aas
xchg
cld
in
pop
xchg
loop
mov
mov
or
clc
dec
aas
push
lds
cmp
inc
movsl
jae
pop
cmc
dec
jmp
add
enter
pop
dec
inc
jmp
sbb
xchg
in
push
insl
cli
in
lods
xor
scas
push
push
test
test
clc
iret
test
fstpt
pop
cmp
xor
mov
add
stc
aas
add
sub
cli
inc
sbb
hlt
adc
outsb
sbb
mov
dec
add
xchg
push
push
cld
inc
pop
mov
xchg
xchg
and
clc
mov
ds
das
xchg
dec
movsl
cmc
mov
mov
testl
clc
inc
sbb
add
cld
cmp
jp
call
mov
rcl
push
insl
cmc
ret
mov
and
pop
sahf
mov
sbb
mov
inc
pop
pop
fidivrl
fcoms
int3
xchg
mov
pop
jmp
jge
movsl
in
jbe
dec
es
jne
pop
jle
pop
repnz
push
cld
enter
sbb
pop
fisubl
push
sarb
mov
fwait
jb
push
sti
ss
dec
sub
mov
shr
mov
mov
or
pusha
popl
jne
inc
in
pop
cmp
insb
jns
outsb
test
push
and
push
push
add
rcl
aaa
lcall
jnp
jnp
mov
push
bnd
xchg
out
push
ds
pop
repz
test
jge
sbb
push
test
mov
and
adc
dec
hlt
fwait
hlt
lcall
mov
dec
dec
mov
ret
pop
fists
cli
ret
mov
es
movsb
jnp
dec
xchg
scas
sbb
add
int3
jmp
sbb
js
cmp
mov
arpl
fs
dec
xchg
out
movsl
and
pop
mov
das
or
mov
test
out
das
xor
stos
cmp
mov
stos
leave
push
cmpsb
mov
shrb
and
adc
jne
add
inc
lods
paddw
jae
andb
scas
xor
jmp
pop
jne
test
add
push
ss
lret
mov
inc
aaa
mov
mov
and
dec
insb
imul
fisubl
inc
add
mov
fstpt
and
pop
pop
clc
inc
rcrl
int3
imul
imul
test
enter
add
jbe
hlt
fldenv
ss
inc
leave
shrl
mov
or
pop
addb
inc
mov
lret
adc
shl
or
jbe
pusha
pushf
xchg
rep
and
ss
cmp
cwtl
out
cmpsl
cmc
add
aad
clc
pop
jmp
enter
addr16
divl
hlt
push
es
fldl
add
ja
ficoml
sub
or
xchg
test
ss
sbb
rcll
pop
add
jg
mov
rorb
adc
dec
pusha
xlat
jbe
ss
mov
pop
or
cmpsl
jg
cmp
jge
inc
aad
inc
decb
cmp
sbb
inc
lret
push
ss
or
idivl
stos
fdivs
mov
fdivr
cmp
jg
cld
mov
pop
jae
rclb
ja
xchg
dec
cmp
xchg
adc
cmp
outsl
mov
nop
cmp
cmp
mov
mov
add
stos
push
insb
shll
push
push
stos
mov
inc
sbb
mov
dec
pop
cmp
out
add
outsl
mov
cmp
dec
setno
pop
add
hlt
push
movb
cld
rol
cmpsb
mov
lcall
sbb
jmp
imul
mov
cld
cmp
cmpsb
mov
inc
xchg
popa
mov
pop
cmp
or
mov
lock
dec
fldt
xor
inc
movb
and
push
ffree
cmp
jl
mov
xor
imul
adc
xor
pop
jle
mov
test
leave
mov
dec
pop
sbb
aam
inc
je
inc
sarl
aaa
xor
pusha
ljmp
xor
incb
test
ret
or
ret
cmpsl
ret
xchg
hlt
mov
add
pop
int
shrl
jg
adc
aad
mov
sub
adc
mov
inc
and
sub
mov
push
call
stc
imul
push
jle
ja
js
mov
loope
aas
int3
adcb
sub
jnp
xlat
and
out
loopne
or
mov
icebp
int3
fisttpl
jne
dec
jg
jno
and
cmp
and
xchg
sub
mov
loopne
dec
pop
lock
repz
cs
cs
push
dec
adc
push
roll
enter
xchg
pop
icebp
lcall
and
push
add
cmp
imul
cli
or
fidivrs
jl
or
test
or
movsb
xchg
stos
clc
push
lcall
mov
mov
in
add
pushf
test
pop
mov
ss
inc
push
daa
aam
in
scas
mov
adc
push
fisubrl
aam
mov
test
fdivl
push
rorl
mov
sub
mov
jmp
inc
in
jecxz
outsl
mov
ret
cmp
mov
fdivrs
push
mulb
xor
xchg
inc
les
jecxz
xchg
hlt
xlat
fadds
jo
pop
adc
ret
clc
adc
cmp
mov
shrb
rclb
fcmovbe
sbb
mov
imulb
mov
sarl
jnp
insl
sahf
cmp
add
xchg
pop
inc
mov
dec
mov
xchg
addr16
mov
shrb
mov
and
out
and
mov
icebp
fldl
movl
inc
insb
mov
inc
add
adc
add
in
roll
pop
pop
cmpl
jge
sub
pop
mov
dec
inc
sbbl
push
in
mov
mov
pop
mov
jg
jecxz
enter
xor
push
add
push
dec
mov
jg
inc
out
testl
push
ja
xor
dec
movsb
pop
pop
jg
cli
adc
loope
lods
mov
mov
cld
test
popa
pop
adc
mov
xor
fstpt
jnp
dec
mov
ret
pop
and
pop
mov
pop
lock
jne
mov
xchg
fdivrs
insb
or
adc
dec
or
into
mov
shrb
int
dec
into
adc
aas
dec
daa
xor
jnp
pop
cmp
and
push
add
fbstp
jecxz
aaa
or
adc
pop
and
nop
test
pop
das
xor
add
ficoml
dec
cmpsb
dec
pushf
or
jge
sti
sbb
xchg
fwait
mov
push
ficoms
es
iret
rorb
sub
sub
or
je
jo
xchg
mov
mov
outsl
jle
mov
paddsw
ljmp
jg
push
or
filds
mov
ret
xchg
pop
daa
pushf
mov
out
nop
lods
inc
in
aaa
sahf
mov
and
and
loope
pusha
pop
jle
jb
sub
cmpsb
jbe
mov
and
stos
push
fwait
jne
fxam
pop
mov
mov
loop
negb
lcall
jge
mov
add
mov
rorb
mov
cmp
mov
pop
cli
ja
pop
ret
add
sbb
inc
push
lods
adc
aas
inc
std
out
xchg
jns
orl
inc
xor
jne
sub
jmp
or
xor
insl
out
cli
push
mov
dec
jge
push
add
cmp
mov
pop
pop
mov
jle
imul
add
jge
test
cli
rorl
mov
push
orb
frstor
lcall
in
mul
jno
pop
lcall
mov
mov
arpl
pushl
xchg
xor
push
pop
mov
inc
hlt
pop
bound
add
js
rolw
adc
adc
mov
xchg
xor
cmp
push
add
or
jmp
cmc
leave
mov
cmp
cwtl
scas
mov
mov
loopne
inc
sub
stos
imul
jo
dec
add
or
je
test
mov
adc
ds
mov
lods
jmp
jo
jo
out
add
shlb
or
push
lock
jo
push
aad
pop
xor
add
js
aam
push
and
lods
mov
jo
bsf
xchg
mov
and
enter
inc
shll
mov
add
push
subb
cmpsb
lea
xorl
aas
lea
mov
pop
inc
out
push
or
cmp
ja
inc
test
pop
cmpsb
test
cli
add
xchg
mov
pop
subl
stos
jmp
adc
mov
cli
lods
outsb
jecxz
jmp
iret
insb
addl
mov
mov
and
outsl
push
push
push
outsb
and
nop
faddl
call
icebp
xor
popa
jge
sbb
adc
cs
add
adc
mov
xchg
adc
jl
in
inc
shrl
push
andl
dec
or
cmc
cld
sbb
mov
push
clc
shr
mov
dec
int
xchg
dec
fistpl
testb
jo
loopne
ja
clc
add
jecxz
adc
aad
jmp
xlat
mov
push
pop
sbb
shl
or
adc
mov
das
ds
lds
jbe
out
cmp
sbb
adc
pop
lods
mov
pop
pop
jecxz
leave
and
add
xor
sti
movsl
dec
hlt
test
inc
inc
inc
inc
shll
in
js
add
fcmovnbe
sub
push
pop
loop
inc
fmuls
cmpsb
mov
aaa
mov
in
lock
adc
xor
add
inc
mov
je
and
xor
loopne
sub
inc
dec
cwtl
in
outsb
add
jne
movq
mov
lea
movsb
mov
jns
push
mov
sti
adc
add
ret
add
rcrb
in
jo
and
push
jae
pop
fldcw
aad
push
jmp
ret
inc
insb
lods
mov
pop
cwtl
add
orb
mov
subb
sbb
sub
adc
dec
xlat
push
aas
enter
test
ja
lods
repnz
mov
jbe
in
fscale
push
mov
mov
mov
add
outsl
lea
push
cwtl
cli
mov
or
sub
push
dec
je
push
jle
gs
enter
out
inc
pop
stc
pop
mov
mov
mov
adc
mov
fstpl
movsl
cmpsb
stc
xor
dec
jl
addr16
push
imulb
pop
pop
and
fcmovb
ret
add
ret
and
test
hlt
test
pop
jl
jmp
call
pushf
loop
jmp
mov
push
loop
ds
jb
mull
fisttpll
imul
ficompl
mov
scas
sbb
lea
pusha
imul
lds
int
loopne
fistps
into
mov
ljmp
add
jmp
outsl
cltd
pop
add
les
cmc
fistpl
shll
push
rolb
in
mov
push
push
mov
sbb
imul
js
test
out
and
movsl
orl
shrb
clc
orb
xchg
repnz
or
mov
leave
loop
inc
jle
int
inc
jo
bound
je
adc
mov
stos
decb
xchg
jecxz
fwait
test
leave
imul
jl
and
iret
flds
loope
lds
daa
mov
mov
call
push
cmpl
pop
xor
mov
cwtl
in
cmp
add
in
aaa
cmp
scas
leave
adc
popf
fstpt
outsl
test
cmp
xor
in
pop
cmp
ss
dec
fildl
fistps
dec
push
pop
pop
mov
sahf
mov
rorb
pop
dec
test
xchg
pop
call
inc
lret
lods
adc
sbb
mov
test
out
subb
jbe
mov
push
test
insb
dec
adc
push
mov
sbb
sub
inc
sbb
push
sub
add
shll
inc
aam
dec
fildl
pop
add
insb
dec
cmp
cli
or
dec
mov
arpl
ds
xor
fisubl
cmp
cmpb
imul
aaa
lock
out
xor
cmc
and
fs
sahf
or
jo
mov
fwait
sub
jp
or
cs
inc
dec
movsl
and
test
sbb
cmp
and
mov
ret
inc
test
and
ds
mov
roll
mov
loop
mov
jne
sti
push
call
xchg
cmp
jecxz
mov
adc
gs
mov
mov
fnstsw
push
push
adc
mov
cmpl
cmpsl
aas
jge
testl
jle
or
js
inc
sbb
xchg
enter
arpl
and
adc
sbb
sti
jecxz
fiaddl
enter
add
add
gs
add
nop
jecxz
push
lcall
fs
fisttpll
cmp
sti
add
mov
pop
jmp
loope
jbe
in
in
ljmp
dec
ret
sbb
test
jg
mov
sbb
adc
out
sub
mov
mov
push
mov
pop
in
fwait
or
sub
cmp
cmpxchg
xchg
xchg
aaa
sub
mov
push
and
das
outsb
inc
push
push
inc
and
inc
push
mov
cmpsl
fisubrs
rolb
out
shrb
inc
xor
loop
and
xchg
loop
ret
lret
ret
mov
fisttpll
push
shll
mov
das
push
cmp
xor
jl
aad
push
je
fisttps
add
sbb
aas
xlat
mov
add
sub
add
or
cmpsl
call
pop
pop
mov
jl
orl
jg
adc
pusha
ret
imul
or
xchg
mov
jne
icebp
jmp
cmpsl
xchg
cmp
or
mov
ret
pop
and
stc
mov
mov
jns
cmp
insl
mov
sbb
clc
ljmp
jl
sbb
sub
xchg
add
test
cld
sbb
push
aam
fnstsw
stos
clc
sbb
clc
xchg
movsl
rol
testb
xorb
fsub
out
and
loope
dec
or
cli
ret
inc
dec
fidivrl
mov
aaa
mov
popa
jmp
inc
dec
outsb
fcomp
push
cmp
inc
mov
scas
fsubs
rcll
ja
hlt
xor
js
mov
sbb
lahf
adc
sbb
pop
or
rolb
bound
ret
lahf
add
repz
imul
add
imul
push
pop
mov
mov
lods
mov
mov
or
xchg
add
pop
mov
dec
mov
js
jae
add
test
jl
repnz
in
loopne
jbe
pop
dec
sahf
jl
xor
sub
dec
mov
into
es
and
gs
sbb
xchg
sbb
xchg
shrl
cmpb
mov
cmp
div
sbb
push
popa
jne
adc
insb
xchg
cld
inc
je
and
add
aas
fdivrp
arpl
das
add
dec
stos
ror
pop
adc
fldt
or
mov
addr16
sbb
roll
std
inc
repnz
and
push
xchg
decb
gs
cmpsb
pop
or
dec
test
inc
mov
or
outsb
scas
xor
jg
inc
mov
shrl
call
cmpsl
mov
add
cmpsb
and
lock
dec
out
mov
inc
cmp
push
inc
subb
shr
cwtl
aaa
pop
mov
fs
push
push
aad
push
in
cmp
shl
lea
aad
adc
imul
test
or
or
imul
inc
pop
or
arpl
ret
sub
xchg
add
sub
shr
fwait
stc
mov
or
xor
cld
mov
or
mov
mov
insb
js
outsb
mov
fwait
aam
inc
ja
imul
lcall
fistps
scas
inc
lcall
push
ja
fists
push
and
mov
ss
jg
push
push
sti
test
inc
ljmp
outsb
sub
pop
mov
test
adc
fs
mov
xorb
inc
in
rcrb
fildl
sbb
or
and
lock
xor
cld
adc
xor
mov
test
nop
and
xchg
inc
mov
nop
rol
subl
lret
or
nop
ss
or
lahf
imul
mov
ljmp
add
popf
shr
pushl
mov
roll
xlat
roll
jne
adc
mov
jns
fisubl
push
and
aam
jb
sub
jl
sbb
in
inc
mov
sbb
mov
mov
cmp
pop
pop
inc
jmp
pop
mov
add
push
ffreep
add
mov
fidivrl
stos
cmpsb
jno
mov
call
imul
ss
mov
jo
mov
adc
in
push
push
sbb
jns
inc
push
push
inc
mov
call
mov
dec
sub
insb
mov
inc
enter
inc
cmp
loope
cmp
mov
add
inc
cmpsb
push
call
xlat
sbb
test
stc
fbstp
or
decl
xor
adc
jmp
push
xchg
dec
sub
pop
pop
add
cli
mov
inc
mov
clc
andb
sub
push
push
hlt
fldt
jge
pop
fsubrs
jg
movsl
xchg
pop
mov
xchg
js
aas
push
cld
ds
add
or
pop
dec
jecxz
cmp
cmp
or
mov
xchg
pop
mov
or
repz
or
jo
daa
lds
repnz
or
push
jbe
add
cmp
push
cmp
lea
fcmovu
cmp
fisttps
mov
repz
xlat
ljmp
ffree
mov
rorl
pusha
test
data16
mov
lods
xchg
mov
fistps
dec
or
test
pop
stc
cs
lock
adc
mov
sub
out
scas
out
cmpb
outsb
jno
je
inc
adc
or
loopne
mov
dec
jo
xor
fcmove
aam
ds
out
std
add
jmp
pop
inc
jo
mov
cmp
cmp
pop
mov
or
fisubrs
inc
xchg
les
and
repz
lock
fsubr
mov
clc
inc
stc
cli
call
xchg
mov
cmp
idivb
cltd
inc
mov
push
subl
lcall
incb
sub
aam
sahf
roll
fnsave
in
in
mov
pushl
adc
repz
ds
cld
push
inc
xorl
hlt
adc
push
stc
add
outsb
or
in
pop
lea
pop
inc
xor
lock
lods
inc
ja
pop
sbb
dec
roll
mov
lock
repz
add
dec
outsl
orb
mov
je
adc
add
fiadds
inc
push
dec
pop
das
fidivrl
or
loope
mov
xor
push
lahf
add
mov
lock
call
mov
outsl
mov
push
mov
jl
dec
fimuls
inc
ja
fcmovnbe
mov
scas
lods
sub
cmpsb
adc
jne
test
fsubrl
in
xchg
and
sarl
pop
stos
outsl
pop
xor
lret
mov
cmp
int
mov
scas
stos
dec
filds
lret
dec
ljmp
jmp
jecxz
aaa
fisubrl
loopne
hlt
fdivrs
mov
cs
add
jnp
lods
ret
loopne
insb
xorl
pop
or
push
repnz
adc
stos
push
push
bound
push
icebp
mov
mov
out
filds
adc
adc
data16
and
lds
mov
push
lahf
and
std
push
xchg
sbb
rcpps
sbb
or
psubb
push
addr16
lock
imul
addr16
insl
jecxz
push
mov
sbb
or
out
clc
cwtl
push
mov
js
xchg
inc
mov
pusha
lahf
or
sub
in
fildll
lods
cmp
mov
inc
cmp
xor
subl
cmpsb
test
push
jl
js
xlat
into
jno
adcl
lock
xchg
push
ja
push
clc
xchg
ljmp
daa
inc
sub
jg
std
and
cmp
dec
out
mov
clc
cmp
jne
test
jl
enter
mov
in
clc
push
pop
and
xor
sbb
push
sub
jns
lret
xchg
jle
dec
enter
jno
std
inc
xchg
xor
maxps
fsubr
das
fst
lret
das
sub
mov
jb
push
sbb
fdivrs
pop
mov
sbb
mov
mov
int3
jp
shll
dec
mov
jg
lea
xchg
cmp
add
push
das
orb
mov
mov
mov
or
cmp
scas
outsl
lcall
mov
movsl
in
test
or
jnp
scas
outsb
mov
mov
push
mov
jns
adc
jo
stos
ja
sbb
sbb
or
loopne
inc
and
test
jno
mov
push
in
lds
loopne
jg
insl
push
lret
push
mov
bound
and
jecxz
scas
aaa
hlt
rcrl
fistl
pop
stos
mov
and
mov
push
mov
imul
push
ja
outsl
sbb
cmp
or
dec
repz
jo
sbb
sbb
test
sub
xlat
pusha
xor
jecxz
fucomi
mov
inc
inc
mov
add
push
jo
jg
stos
dec
rorb
rcll
rcr
mov
dec
push
sbb
push
jbe
mov
adc
std
or
add
hlt
fisttps
nop
mov
addw
cmp
push
xchg
mov
mov
test
pop
fwait
and
in
aas
mov
hlt
lcall
cmp
aas
cltd
leave
inc
or
cmp
pop
stc
sub
cmpsb
sub
push
aam
jecxz
lcall
pop
jbe
idivl
and
insl
jb
lcall
cmp
dec
or
jae
mov
or
mov
insl
xor
notb
mov
ficomps
fidivs
adc
lret
add
pop
mov
gs
ds
mov
movsl
clc
xchg
inc
sarb
mov
jg
mov
pushl
data16
mov
lods
xchg
push
movsl
stos
sbb
insl
adc
decl
sub
or
shlb
mov
addl
jmp
lods
mov
lahf
fwait
cmpsb
and
sub
fwait
mov
xor
dec
cwtl
mov
sub
dec
jmp
insb
sti
test
add
sbb
inc
sbb
adc
and
mov
aam
inc
jb
pop
loop
stos
jbe
lds
jno
notb
das
jl
out
or
dec
sub
add
mov
and
mov
mov
sbb
mov
and
jns
push
arpl
outsb
ja
inc
inc
push
nop
adc
je
xchg
push
outsl
ficoms
jecxz
movsl
and
mov
and
xor
lcall
add
xor
imul
sub
adc
outsl
loope
cwtl
add
pop
adc
mov
das
xlat
add
test
mov
mov
outsl
fidivs
arpl
aas
push
fldt
lds
jne
xchg
cmp
sar
mov
in
pop
movsl
xchg
sbbl
out
inc
daa
mov
pusha
xchg
or
mov
ret
mov
jle
rol
mov
lds
cmpl
jae
mov
xchg
push
addb
xchg
add
imul
push
lret
les
hlt
dec
and
cmpsl
hlt
jmp
fistpll
mov
cwtl
es
inc
in
mov
push
lret
loopne
dec
jbe
mov
and
test
cmp
cmpsb
movb
dec
mov
mov
ja
aam
addr16
add
adc
popa
jle
cmc
loop,pn
xor
cmpsb
adc
fyl2x
push
lret
push
mov
mov
cmc
pop
or
enter
xchg
mov
orl
add
incb
aam
adc
jno
rcrl
movsb
imul
sub
incl
test
xchg
clc
scas
aam
rcrb
dec
pushl
mov
in
xchg
inc
mov
orb
jo
insl
cli
jg
adcl
movsl
pop
push
in
pop
dec
je
mov
popf
jno
and
push
jg
ret
mov
or
gs
jg
lods
adcl
cmp
mov
cld
inc
inc
pop
int
pop
aaa
in
jl
mov
sbb
dec
xchg
insl
imul
lods
addr16
pop
adc
insb
loopne
cmp
scas
dec
insb
aad
icebp
inc
gs
mov
sub
aas
cmc
pushl
mov
mov
inc
xchg
nop
shlb
aas
push
fmull
inc
push
aad
sbb
or
int
lret
cmp
xchg
pop
loope
call
mov
cmp
adcl
add
icebp
inc
sub
scas
jp
inc
and
insl
arpl
aaa
mov
pop
mov
sbb
cmp
orl
dec
sbb
cli
lcall
pop
repz
sarl
enter
es
mov
sbb
cli
inc
xchg
mov
test
iret
or
mov
or
sbb
test
or
arpl
cltd
jnp
jge
leave
fnstsw
movsl
loopne
sarl
lcall
adc
add
mov
popa
mov
push
sub
xor
test
or
mov
mov
test
xlat
subb
mov
sbb
add
popa
adc
jb
or
pop
rolb
jecxz
jbe
cli
fistpl
and
xchg
movsl
ljmp
js
pop
xorl
jecxz
xchg
add
sahf
adc
jno
adc
out
arpl
lock
jne
cmpsb
and
ret
adc
andl
jnp
mov
mov
pusha
in
and
adc
inc
cmp
xchg
xor
push
inc
push
sub
push
out
iret
xchg
add
xchg
jb
ja
sbb
xor
pop
jg
icebp
ret
xchg
cmp
stos
adc
bnd
mov
dec
mov
repz
lahf
add
clc
adc
pop
insb
pop
and
and
mov
add
ljmp
mov
sbb
idivb
shrb
mov
loopne
cs
push
push
cwtl
sbb
pop
aad
add
inc
mov
sbb
sbb
xchg
ret
cwtl
hlt
lret
push
sbb
jmp
test
sbb
pop
es
popa
in
mov
outsl
jl
or
push
arpl
aas
mov
or
mov
loopne
pop
mov
out
sbb
dec
imul
mov
jl
fistpll
in
or
add
fidivl
mov
int
mov
shl
paddsb
iret
add
mov
sti
loope
das
sub
and
aaa
int
pop
mov
imul
mov
adc
les
nop
popa
test
push
hlt
mov
je
inc
pop
pop
push
std
dec
adc
scas
fisttpll
sbb
mov
ret
fwait
insl
aas
loope
push
pop
and
mov
cmp
cmp
pop
decb
icebp
push
adc
adc
inc
fsubs
out
mov
fadds
or
mov
int
xlat
add
scas
adc
rcl
sbb
notl
aam
shlb
addr16
rol
loop,pn
mov
nop
dec
dec
sub
xor
jg
xchg
shl
in
cmpsl
call
shll
xorb
outsb
fildll
shlb
pushf
sbb
sbb
xchg
out
pop
mov
addb
cmpsb
nop
ljmp
mov
shll
add
mov
popf
sub
std
mov
adc
inc
aad
xor
fistpl
cmpsl
test
mov
icebp
aas
dec
push
xchg
mov
pop
dec
pusha
adc
push
lods
jge
mov
jne
fisubrs
out
daa
sub
mov
repnz
mov
fdivl
sbb
data16
mov
fucomp
adc
inc
and
aam
es
cmp
sbb
cld
push
add
scas
push
or
cmp
cmp
sub
cmp
mov
sub
movsl
dec
fistl
mov
sbb
xchg
aaa
cmc
ret
push
add
adc
fcoml
bound
mov
push
test
and
pushf
fnstsw
jne
loop
sub
out
jb
jecxz
cli
data16
aas
cli
pop
cmp
dec
mov
xlat
loop,pt
ja
fisttpll
mov
pop
vminps
lock
pop
adc
xchg
or
jmp
in
add
rolb
je
lea
enter
nop
nop
push
inc
in
stos
in
aam
xchg
test
jno
jnp
inc
mov
adc
rcll
stos
jmp
and
sarb
pop
sbb
loop
adc
inc
imul
movsl
fcomps
imul
out
cmp
push
inc
aam
hlt
xor
push
jnp
lods
ljmp
aam
lcall
popf
into
cmpsb
mov
dec
lea
pop
iret
mov
jnp
outsl
jp
xor
push
fs
mov
shr
shll
sub
fcomip
push
cmp
pop
sbb
fwait
ds
mov
testb
jbe
cmpsb
rolb
inc
and
mov
sysexit
lock
or
lods
sbb
pusha
sub
jmp
jge
jae
outsb
cmp
and
sbb
das
sbbl
outsl
cmp
adc
pushf
jge
and
sarb
ljmp
cmp
adc
xchg
jnp
sub
pop
pushl
push
pop
pop
mov
sbb
mov
pop
hlt
xchg
or
push
xlat
ficomps
ja
and
jge
fwait
ljmp
cmc
pop
sbb
adc
shll
fwait
movsl
es
sbb
jo
xchg
pop
and
js
sub
inc
filds
dec
inc
fwait
mov
mov
or
xor
inc
cwtl
xor
fwait
test
add
dec
movsl
mov
je
movl
fistpll
incl
popa
cli
xchg
sbb
lret
scas
mov
outsl
in
filds
lds
pop
ret
outsb
loopne
fwait
icebp
pop
dec
sub
mov
in
test
push
pop
dec
dec
into
sbb
scas
cld
data16
dec
js
nop
or
mov
les
test
sbb
jo
jne
and
cld
adc
lock
xor
pop
mov
mov
and
aas
inc
and
add
cmp
lret
inc
cmc
cmpsl
in
sub
inc
mov
dec
push
or
mov
mov
ljmp
jns
shl
je
add
jne
cmpsb
push
cs
sub
xchg
jmp
lods
or
add
rcr
push
test
shl
lahf
repnz
jecxz
cmpsl
stos
xorl
push
adcl
int3
fs
push
mov
adc
and
mov
cmp
xchg
scas
mov
xchg
adc
dec
divl
cmp
out
cmp
cmpl
jmp
roll
adc
push
mov
add
aad
push
in
mov
test
ljmp
push
xor
push
xchg
sbbb
and
cmp
mov
mov
out
jno
cmp
das
cmp
ret
imul
xlat
add
ficompl
and
inc
add
hlt
xor
lds
enter
adc
dec
hlt
sbb
push
pushf
in
lds
ret
jb
cltd
lcall
cmpsl
xor
xchg
in
repz
arpl
jg
push
nop
xchg
jne
pop
sbb
xchg
dec
pop
cmpsb
lods
xchg
div
pop
inc
xchg
orb
mov
sbb
movsb
dec
inc
ficoml
sub
lods
adc
pusha
cltd
push
add
ss
lahf
adc
xor
and
enter
add
push
xlat
rorl
sub
pop
mov
rol
pop
inc
cwtl
xchg
sub
shlb
cmp
add
lcall
ficoms
test
lods
mov
dec
sar
sti
int
jecxz
sub
enter
jge
xor
mov
outsl
sbb
movsb
mov
inc
fwait
sbb
loop
fildl
mov
push
mov
inc
fadd
xchg
jb
mov
cmp
fbld
or
sub
jg
push
fdivr
mov
mov
sub
inc
or
mov
fbld
adc
sbb
les
mov
fidivl
sub
cmpb
decb
cltd
sbb
adcl
inc
pushf
clc
loopne
add
dec
aaa
testl
aad
into
and
fisubl
rcll
inc
outsl
cld
sub
clc
out
dec
scas
mov
lahf
in
ss
push
mov
hlt
fsts
push
push
fldt
fnstenv
shll
mov
lds
inc
inc
and
jbe
in
cld
jb
adc
and
orb
add
imul
or
das
insb
jo
punpckhwd
cmp
dec
xchg
test
adc
jno
icebp
push
sbb
xor
je
cmp
mov
push
sahf
pop
fdivrs
ljmp
sbb
movsb
and
xorl
pop
ljmp
pop
sub
addr16
jle
dec
enter
xor
sbb
dec
add
sub
mov
push
aam
outsl
aaa
lds
inc
and
fs
stos
mov
fisubrl
mov
inc
aam
sbbb
mov
orb
jne
dec
pop
in
shll
ss
cmpsb
cwtl
sub
jmp
push
inc
mov
jmp
and
in
inc
repnz
sub
sub
mov
cmovne
and
mov
push
mov
lea
out
pusha
adc
push
bound
inc
cld
fwait
inc
es
xorl
mov
pop
push
pop
xor
inc
lcall
push
in
lahf
push
lock
inc
fisubrs
fidivrs
mov
push
sbb
mov
fisubl
adc
jne
subl
mov
test
loope
into
lods
cmp
jne
into
mov
and
mov
add
out
pop
pusha
hlt
fisubrl
jp
std
test
pop
aas
cmp
adc
mov
and
mov
loop
aam
rcrl
loop
cmpsb
or
in
sti
cli
stos
hlt
xchg
and
mov
add
out
aad
dec
gs
movsl
dec
daa
jbe
arpl
and
jmp
add
xchg
add
je
pusha
mov
mov
ss
push
sub
push
das
fdivrl
mov
daa
negb
test
cwtl
test
pop
dec
mov
xor
scas
fcmovb
fisttpll
lods
or
icebp
jl
add
mov
std
fyl2x
sbb
mov
mov
inc
xor
fldln2
inc
add
popf
or
xchg
outsl
or
fnstsw
int
insb
jl
out
or
pop
dec
mov
ja
rclb
popf
add
outsb
xor
adc
popa
repz
gs
dec
insb
pop
add
or
inc
cmp
icebp
in
inc
mov
test
mov
pop
clc
dec
mov
je
inc
push
push
notb
pop
mov
xchg
sbb
mov
jne
pop
cmp
shrl
mov
or
nop
xorb
jb
leave
mov
cmpb
nop
data16
stos
aaa
mov
push
mov
outsb
scas
push
test
shll
inc
adc
arpl
dec
sub
mov
es
sbb
in
stos
cmp
fdivrp
aaa
push
push
add
lock
andl
das
xor
or
js
xor
xlat
push
or
inc
pop
scas
std
inc
loopne
xchg
or
mov
ret
pop
leave
mov
add
scas
and
mov
add
xor
fidivrs
pop
rorl
sbb
mov
cmpb
cmp
pop
and
mov
ss
shl
sbb
push
out
or
bound
lea
movsl
add
push
xacquire
and
push
cmp
dec
in
jnp
out
test
addb
cs
test
mov
adc
pop
icebp
push
inc
cmpsl
sub
shl
sub
rorl
jge
mov
adc
idivl
movsl
add
imul
pop
dec
jno
jle
cmp
lcall
fwait
mov
cld
bound
aam
xchg
out
lahf
mov
pop
sub
ljmp
leave
ret
push
mov
std
sarb
bound
pop
sbbl
fdivrs
imul
cmp
test
inc
jo
les
push
push
sub
dec
out
xchg
sbb
cmpl
adcb
movsl
add
je
xor
push
out
test
aaa
aaa
aas
mov
or
push
or
pop
cmp
adc
outsl
dec
pop
mov
frstor
push
push
pop
sub
lret
int
fisttps
in
test
loope
push
rcr
in
push
mov
mov
xchg
push
jle
enter
es
sti
shlb
lcall
into
les
fisttps
and
loope
mov
mov
push
pop
sti
insl
adc
mov
mov
aad
pop
cld
jp
fnsave
cmp
scas
int3
xchg
xchg
xor
push
fucomip
fcomps
push
rolb
mov
sub
inc
out
js
push
and
arpl
add
xchg
adc
jmp
fs
sbb
mov
mov
or
roll
pusha
jmp
in
inc
cli
push
loop
cmp
or
adc
dec
imul
test
sbb
in
cwtl
jne
je,pn
jne
cs
push
xchg
cmp
pop
jl
cmpsb
stc
rcll
sbb
adc
mov
lds
pop
test
cmc
dec
inc
fnsave
xchg
insl
push
inc
test
jl
popa
ret
push
rolb
test
cs
jmp
xchg
push
sahf
adc
lret
xchg
js
pop
sub
ja
add
pop
call
in
insl
imul
inc
arpl
and
fadd
out
xchg
subl
scas
lds
push
add
push
xchg
pusha
push
fisttps
push
jmp
mov
cmp
add
addb
mov
adc
push
test
mov
rcr
in
push
jb
jnp
outsl
mov
or
loope
movsl
inc
les
adc
scas
xor
pop
push
adc
pop
clc
int
fs
lea
mov
pop
ficompl
stc
andb
testb
xchg
imul
add
insl
adc
aaa
or
push
jbe
aaa
lock
iret
scas
inc
stos
pop
dec
or
adc
jo
push
xchg
xchg
mov
mov
notb
mov
lds
mov
aaa
insl
xor
cmp
cmc
jnp
jecxz
push
push
sbb
imul
xlat
insl
add
xor
push
pop
std
aas
cmp
xchg
in
mov
int3
and
pop
sbb
sub
and
outsb
pop
stos
loopne
adc
ss
scas
call
out
rcrl
sub
fstps
gs
cmp
lea
aas
das
ror
sbb
es
es
dec
jno
imulb
dec
push
ret
jo
mov
add
out
ljmp
xor
mov
dec
rclb
mov
inc
imul
adc
mov
add
sub
xor
das
push
add
shr
pop
shl
in
mov
cld
ret
lods
stos
bound
add
cmp
fldl
fbstp
rclb
ret
je
inc
ret
int3
punpcklbw
clc
pop
lds
xlat
clc
scas
adc
dec
movsb
jnp
add
scas
fwait
jg
mov
lods
popf
sub
push
dec
add
pushl
pop
mov
cmp
mov
mov
cmpsl
sar
aaa
mov
xor
subl
rcl
add
subb
insl
jae
inc
ret
or
pop
or
push
lcall
sbb
push
fidivs
dec
inc
sbb
or
out
loopne
or
ret
mov
rolb
sbb
jo
rcrb
mov
or
lcall
outsl
or
pop
add
pusha
sbb
sub
pop
sbb
stc
jns
cmpsl
test
jle
xor
jo
jmp
incl
push
pusha
lahf
ss
adc
pusha
mov
stc
fwait
imul
pavgb
insl
push
mov
mov
sbb
cld
aas
mov
sub
ret
lea
cli
push
ret
xor
cmp
aad
js
cld
jg
loop
pop
push
mov
jl
andl
xchg
fiaddl
xchg
xchg
fs
jp
mov
dec
sub
rorb
push
add
push
jnp
rclb
test
imul
sbb
pop
fsubrs
cld
aas
out
es
sbb
inc
adc
push
loopne
lret
orl
loopne
sbb
in
fdivrs
xor
cmp
pop
cld
jp
push
add
test
jmp
adc
dec
loopne
cmc
inc
inc
std
push
inc
xchg
push
movsb
and
sbb
push
lods
xor
dec
ss
jg
shll
mov
dec
mov
push
lock
xor
cmp
fcmovnbe
cs
or
fs
movsl
push
mov
lea
aad
push
mov
std
push
and
popl
inc
aam
cmpsl
test
neg
sahf
cmp
rcll
cmc
jnp
es
dec
sub
rcrw
insl
lds
mov
inc
mov
pop
inc
cmpsl
inc
aas
clc
ss
add
push
push
out
idivb
in
mov
pop
into
sarb
sbb
xchg
cmpb
imul
cmc
cmp
adcl
lea
mov
int
push
jnp
pop
sbb
cs
faddl
leave
cmp
lods
or
sbb
sub
pop
mov
dec
aam
xchg
sub
lret
jecxz
popa
mov
xor
xchg
dec
out
int
in
push
cmc
in
loop
xor
fwait
in
and
cld
xchg
test
pop
xor
test
sbb
inc
sbb
cli
and
adc
push
pusha
imull
and
jg
or
outsb
push
mov
arpl
in
call
or
shl
xchg
mov
add
outsb
fcomps
push
cmp
subb
push
cmpsb
outsl
pop
js
into
jnp
push
cmp
mov
pop
and
mov
aas
lods
xor
mov
adc
jo
dec
push
ljmp
loope
fwait
xor
divb
fistps
or
icebp
fiadds
es
dec
xor
in
xchg
notl
add
sub
xchg
gs
icebp
xchg
les
cmpsb
testb
insb
or
je
jge
cmpsb
mov
roll
push
and
and
mov
add
pop
pop
inc
or
push
inc
jge
outsl
pop
inc
sti
xor
insl
jge
inc
cld
dec
popa
and
lret
or
out
cmpsl
leave
lds
lods
stos
ja
add
adc
cltd
jae
movl
fidivs
mov
push
fcoml
test
cmp
les
stos
cmp
pop
xchg
adc
fnstcw
shrl
sbb
pushl
jmp
and
les
cld
and
mov
or
call
cli
les
sub
cmpsl
or
xchg
xchg
test
pop
jg
sbb
and
and
and
push
xchg
inc
xor
mov
mov
pop
push
inc
or
fadd
jae
jle
cld
cld
popa
scas
and
int3
adc
sub
fisttpl
xchg
aam
cwtl
and
aaa
mov
ret
mov
outsb
dec
mov
push
adc
pusha
xchg
les
and
mov
and
orb
mov
daa
js
into
xlat
cmp
lds
movl
mov
js
pop
inc
adc
xchg
addr16
nop
jg
lds
mov
push
neg
fst
add
inc
mov
mov
cli
mov
jl
aaa
xchg
cld
jl
cmc
loope
mov
insl
pop
jl
and
lea
push
jnp
stos
inc
xlat
aaa
lret
mov
inc
xor
ja
sbb
cs
mov
pop
fistps
jecxz
fstpt
sahf
add
inc
mov
dec
ret
bound
jae
stos
fcmovbe
xchg
fcomps
xchg
mov
aaa
mov
test
sub
cmpsb
ds
rcl
and
xor
loopne
mov
mov
imulb
lock
mov
movd
dec
mov
clc
add
je
test
xchg
mov
fmull
int3
add
sub
pop
mov
jne
je
dec
cli
aaa
or
inc
js
push
mov
stos
insb
clc
in
aaa
fcoms
lret
out
inc
xchg
and
ja
xorb
mov
je
jmp
jmp
add
push
shl
lock
dec
punpckldq
fs
cwtl
mov
cwtl
cmp
loop
sarb
dec
movsl
stos
xlat
mov
push
in
sub
cmp
fwait
sbb
cli
push
shlb
jecxz
push
mov
cmp
sti
jb
xchg
fdivl
repnz
dec
or
adc
dec
xchg
ds
xlat
sub
repz
sti
xchg
dec
xchg
sarb
jecxz
adc
test
roll
bound
aas
xchg
mov
jae
inc
mov
in
test
mov
cmpsb
mov
mov
xor
sti
adc
mov
aad
ror
mov
lds
shll
mov
xchg
push
cmp
jb
pop
loopne
dec
mov
mov
pop
inc
lret
and
xchg
sub
push
cmp
xchg
fisubs
or
and
data16
dec
adc
sub
xchg
clc
xchg
add
das
mov
sbb
pusha
aam
xchg
cmp
insb
cmp
jmp
inc
test
sub
sahf
int3
int
shlb
jns
cmp
pusha
or
inc
xor
fs
mov
cld
push
add
adc
adc
sbb
popa
loopne
and
test
push
addr16
in
pop
sub
movsl
xchg
pop
pop
aaa
mov
jecxz
sbb
sbb
out
std
out
sub
adc
shll
dec
mov
lcall
lret
or
add
in
aad
mov
push
movsl
fcmovbe
aaa
repz
jns
sub
pop
lea
fistl
mov
adc
sbb
and
fsubl
lahf
or
stos
stos
xor
andb
mov
divb
xor
adc
jl
cld
jecxz
pop
mov
adcl
inc
int
mov
xchg
movsl
ret
push
loope
in
push
je
adc
aad
int
stos
fcmovnu
sar
es
xchg
les
sbb
pop
sub
decl
dec
xchg
mov
pop
mov
mov
xchg
mov
aam
rcrb
ret
add
mov
sbb
call
lahf
sti
in
jo
lds
ja
and
mov
and
outsl
in
mov
ret
mov
popf
push
adc
dec
cmp
mov
fidivs
jae
mov
ja
mov
fsubrp
fdivs
xor
mov
add
adc
cmp
mov
pop
shrb
dec
imul
mov
mov
lret
daa
aad
cmpl
fucomp
xchg
int3
jb
das
test
addr16
fdivp
mov
ljmp
lret
xor
bound
jmp
mov
shlb
add
jecxz
push
mov
or
leave
ficompl
xchg
notl
outsb
pop
jp
add
jmp
sbb
pop
cmp
pop
sbbb
ljmp
sub
test
aaa
ss
in
sbb
test
or
int
jns
pop
outsb
sbb
test
nop
mov
sub
mov
xchg
sub
das
lods
cmp
mov
lds
cltd
loopne
cmp
add
mov
sbbl
xchg
scas
mov
push
ljmp
inc
rcrl
in
pop
or
xchg
jecxz
jl
test
shlb
mov
mov
cltd
sbb
add
and
add
sbb
loopne
jp
fdivr
sub
fistpll
sbb
cmp
pop
dec
les
iret
popf
add
insl
cmp
jg
and
sub
call
test
sub
xchg
fucomi
mov
mov
xor
jo
push
icebp
push
mov
insl
imul
out
mov
pop
mov
ja
mov
sbb
dec
loop
add
pop
mov
add
xchg
aad
mov
jbe
and
xchg
in
fs
mov
xchg
push
mov
iret
push
xor
sarb
dec
add
fisttpl
pusha
jle
sbb
ss
negl
dec
mov
or
out
jecxz
sbb
add
jle
fnstsw
dec
jb
jo
inc
sub
mov
mov
hlt
fimuls
pop
adc
cmp
xor
pop
xlat
or
and
jmp
sbb
and
out
je
movsb
xor
fsubr
jle
xor
dec
repnz
ficomps
and
fcmovnbe
fidivrl
jo
js
fsubp
shlb
stc
call
add
sbb
lahf
in
mov
mov
jno
adc
mov
mov
in
xor
adc
fbstp
cmp
or
jmp
xor
ljmp
fwait
loope
test
enter
xlat
inc
jg
lcall
roll
loopne
mov
inc
stos
cmp
arpl
leave
or
leave
pop
cli
lahf
fdivrl
xor
repnz
or
movsl
inc
and
fistps
sub
push
fs
sbb
and
test
mov
push
pop
push
sbb
jle
mov
cmp
push
insl
push
leave
pop
je
pop
pop
sbb
xchg
clc
lods
stos
movsb
jmp
pop
mov
sbb
aaa
push
fs
lea
pop
enter
pop
stos
jmp
out
nop
sub
roll
pop
ss
pusha
pop
push
das
mov
loopne
movsb
incl
inc
sub
jge
in
push
mov
mov
negb
into
hlt
jo
inc
add
mov
cmp
aaa
std
fwait
cli
mov
and
dec
scas
inc
push
jbe
bound
pop
sbb
lret
cmp
test
outsb
imul
gs
mov
fildll
xchg
je
sub
mov
adc
cmc
xor
xor
lods
inc
pop
dec
lock
ss
test
dec
sub
adc
push
dec
adc
cltd
mov
je
jbe
mov
std
cmp
pop
test
mov
dec
adc
inc
jo
ja
mov
and
mov
xchg
inc
mov
shl
add
pop
cmpb
jo
aam
or
mov
popa
cli
addl
and
jbe
sbb
sarb
xchg
jae
push
stc
adc
jp
mov
movsl
sbb
adc
and
or
test
jo
bound
pop
lcall
or
sbb
pop
int3
in
xor
std
roll
sti
stos
push
adc
pop
and
mov
or
add
leave
pop
pushf
adc
or
in
test
incl
xchg
in
cmp
mov
add
insl
sub
inc
push
lret
sub
dec
push
or
jne
sub
daa
push
xor
test
shrl
adc
andb
inc
mov
scas
push
pop
jge
ficoml
mov
sub
adc
lea
and
sahf
in
les
fs
xchg
mov
adc
adc
sub
xchg
inc
mov
adc
lods
fstpt
adc
push
lea
push
ja
mov
imul
cmpsl
cltd
mov
insl
jnp
aad
and
jge
xor
mov
mov
jbe
in
push
xchg
stos
scas
xor
xchg
mov
mov
or
or
jp
add
ficoml
bound
dec
fstps
mov
and
and
push
pusha
sti
nop
outsb
cmp
data16
dec
int
inc
cs
stc
mov
push
mov
or
dec
mov
add
clc
sub
mov
pusha
xchg
jle
or
sub
push
push
mov
imul
sub
push
sub
add
jge
ret
push
xchg
aad
pop
lahf
xor
push
loopne
cmp
push
clc
pop
jbe
add
pop
or
pop
outsl
mov
xor
je
jle
cmp
lds
push
cmp
enter
aam
in
add
push
iret
iret
xchg
jns
jmp
rcll
inc
int
cli
add
jb
test
jmp
xchg
mov
xor
rorl
data16
das
mov
jb
loopne
pop
or
lods
nop
dec
test
fstpl
pop
mov
ret
rcr
mov
jo
imul
sti
scas
adc
mov
fnstsw
scas
sbbb
dec
dec
add
adc
and
ss
imul
ljmp
push
ret
pop
in
or
subl
inc
pop
mov
xchg
dec
icebp
outsl
fdivrl
dec
add
mov
fsubr
or
ficomps
inc
mov
push
inc
pop
cli
mov
in
ljmp
xor
adc
ds
pusha
jmp
loopne
mov
stos
jl
or
aaa
leave
push
xchg
dec
mov
das
mov
repnz
mov
xchg
or
fisttpl
scas
pop
js
push
mov
lcall
fcomps
mov
cmp
shrb
jp
test
aam
mov
fistl
push
mov
and
cmpsl
mov
aaa
test
xchg
int3
jp
ja
and
pop
cmp
cmp
pop
jae
fidivl
mov
rol
hlt
cmpsb
cltd
lret
ljmp
pushf
daa
imul
inc
jmp
cmp
ficoms
and
or
data16
scas
mov
sub
jmp
jns
shr
xor
inc
loopne
je
mov
jle
and
adc
divl
sub
mov
jne
xchg
xor
cld
lods
fwait
mov
push
dec
jno
push
outsb
or
mov
sti
js
dec
jnp
dec
add
adc
jb
cmc
cmp
sub
je
mov
fistl
addb
mov
test
xchg
adc
insl
mov
jno
push
outsl
add
shlb
out
hlt
xchg
fstpt
aam
jecxz
push
push
insl
je
lret
add
int3
sti
cmpsb
imul
sub
push
xlat
inc
inc
rcrb
popa
jae
test
ficoms
xchg
std
add
sub
jp
or
insb
test
push
cmp
aaa
add
out
rcr
mov
cmp
xor
fwait
xor
pop
adc
in
inc
mov
mov
ja
mov
sub
jns
lods
jle
inc
dec
dec
adcb
mov
push
mov
cmpsb
je
adc
fcmovu
insl
sti
cltd
pop
mov
mov
inc
xlat
push
mov
pop
mov
or
das
insb
and
es
and
add
sub
add
clc
push
or
xchg
and
pop
add
pushf
add
jmp
in
xor
aad
jno
cs
adc
sbb
fstl
scas
sub
mov
iret
ds
mov
call
mov
dec
popf
sbb
mov
xchg
call
and
std
scas
and
mull
or
mov
jmp
jne
jecxz
mov
pop
outsb
shrb
jle
repnz
ret
mov
mov
mov
das
hlt
cli
and
add
add
push
fucomp
xchg
xchg
ret
ljmp
notl
inc
mov
dec
mov
loopne
sub
ss
cmp
add
ljmp
jmp
pop
test
sbb
js
fbstp
sub
add
inc
push
xor
inc
aad
dec
sahf
jmp
mov
mov
les
mov
stos
repnz
popf
sti
push
or
inc
add
arpl
mov
dec
sub
jg
sbb
xlat
add
or
xchg
movsb
rorb
repnz
ss
jnp
add
andl
jge
arpl
xor
adc
push
add
sti
jns
pop
mov
cmpsb
and
sbb
repz
mov
lock
sti
pop
and
mov
dec
mov
outsb
rclb
gs
jae
in
pushf
jp
mov
and
jb
sub
fcomip
mulb
in
movl
sbb
enter
out
cld
rorb
pop
jne
fistpl
jmp
jg
repz
loopne
in
pop
mov
jmp
lret
sub
cmp
add
cmp
adc
add
fildl
lea
inc
aaa
dec
imul
sub
fildll
and
pop
lods
lds
inc
inc
push
mov
xchg
push
or
xor
or
lret
add
pop
sahf
jp
shll
sub
fwait
out
in
inc
inc
sbb
sar
loopne
mov
addb
mov
out
push
es
sarb
test
popa
stos
mov
inc
mov
xchg
mov
pop
int
mov
mov
mov
js
loope
sbb
mov
dec
inc
mov
lahf
shlb
leave
sbb
jmp
arpl
pop
sbb
clc
aaa
push
jmp
mov
movsb
jg
fcmovb
mov
pop
popa
or
test
xchg
ficomps
or
scas
mov
jno
ja
mov
cmp
lret
pop
das
adc
pop
xchg
out
sbb
mov
mov
maxps
adcb
stos
outsl
jg
pop
xchg
movsb
gs
xor
xchg
loop
test
test
xor
decl
cmp
cmp
test
mov
fwait
mov
jno
or
xchg
stos
inc
add
mov
pop
mov
adc
in
mov
lods
jmp
lret
mov
and
mov
pop
cmp
into
sbb
xor
inc
pop
enter
bound
aas
and
clc
mov
push
imul
mov
xlat
cli
leave
stos
popa
mov
fwait
push
ret
mov
push
sbb
sarb
xchg
ret
scas
std
mov
adc
jb,pt
mov
or
or
test
stos
pop
push
adc
enter
mov
lcall
sbb
jne
xorb
mov
mov
jmp
sbb
imul
push
mov
or
xchg
or
loope
pop
pop
adc
sarl
mov
inc
sarl
int3
push
daa
add
mov
mov
arpl
ret
test
ret
xchg
jns
aaa
incl
cmp
mov
popa
mov
mov
xor
inc
jne
inc
pop
pop
sbb
pop
push
add
clc
in
xchg
mov
cmpsl
cwtl
and
fst
dec
lret
test
enter
adc
jmp
push
andl
dec
and
and
fcmovu
xchg
call
ljmp
test
nop
loope
inc
xchg
and
mov
mov
leave
sbb
mov
xchg
pusha
cmpsb
imul
mov
dec
aad
jnp
mov
xchg
fiaddl
mov
adc
sbb
jnp
adc
js
pop
lock
imul
mov
push
cltd
lahf
push
sbbb
mov
pop
pop
cmp
loopne
lret
mov
mov
insl
cmp
xlat
or
inc
clc
or
add
dec
jae
test
mov
negl
in
jno
sbb
fwait
xchg
iret
rcrb
scas
jnp
mov
outsb
dec
lods
imul
lret
xor
popf
and
mov
addl
addl
adc
cmc
add
and
pop
test
add
jge
push
or
and
jg
pop
add
mov
loopne
cmp
incb
div
dec
mov
dec
movsb
nop
add
mov
fwait
out
mov
std
cmpsb
cmp
cmp
cmp
psrlw
cltd
movsl
push
sbb
pusha
orb
cmp
test
push
mov
jb
mov
push
cmp
int
adc
test
dec
int3
xchg
cmp
cmp
xchg
add
xor
aam
lods
sub
jmp
jo
jg
add
test
push
loope
or
cli
incl
mov
sub
mov
fdiv
inc
jnp
sti
std
pop
jmp
shrl
push
xor
sbbb
inc
xchg
in
and
aaa
lock
mov
les
cmp
adc
and
and
sub
enter
fisttpll
ret
add
push
jg
out
mov
in
shrb
jne
orl
pop
push
sbb
icebp
lods
mov
pusha
cmp
xchg
mov
loopne
adc
or
aas
and
scas
rol
push
mov
pop
pusha
mov
outsl
mov
sub
xchg
inc
cmp
mov
ret
sbb
les
out
iret
add
shl
out
or
pop
outsb
sti
fwait
pop
and
sub
cli
es
out
jo
and
mov
loop
scas
cmp
in
inc
jb
fimuls
test
negl
cmp
out
push
leave
inc
xchg
fdivrs
sbb
add
and
and
ficoms
mov
xor
jo
mov
mov
fadds
icebp
aam
iret
dec
jb
negb
and
push
hlt
push
pop
sub
and
xlat
sub
testl
lea
icebp
hlt
or
subb
push
xchg
jg
sbbb
ret
push
clc
fstps
pop
jle
rcrl
inc
ss
stos
jecxz
sbb
stos
ljmp
xchg
adc
dec
outsl
imul
cs
lea
scas
dec
lock
and
repnz
push
adc
jns
je
fnsave
adc
cmpsb
divl
and
mov
scas
mov
mov
inc
xchg
in
lea
jmp
loop
inc
xor
fbstp
icebp
test
cmc
subl
inc
push
in
jo
loop
push
pop
mov
dec
in
insb
pop
adc
or
loope
rol
sbb
ja
jmp
inc
sub
orl
scas
or
lret
adc
cmc
sbb
shll
and
push
dec
jge
sub
popa
add
rclb
cli
aas
lock
add
pop
or
dec
mov
mov
pop
cwtl
js
incl
call
xchg
mov
push
cli
ffreep
inc
fwait
jle
stos
lret
mov
sti
dec
mov
in
shlb
xchg
xchg
sbb
clc
xchg
jno
testb
fnsave
sub
jbe
mov
fidivrl
aam
stc
out
mov
mov
in
cmc
xchg
jo
and
fucomi
push
lcall
clc
jae
mov
les
or
out
cmp
ret
and
push
and
jb
adcb
xor
fcomip
xor
xor
push
insl
mov
lahf
ja
adc
repnz
cmpsl
xchg
or
push
scas
out
xor
jo,pn
pop
ret
ljmp
add
sti
les
xor
rcl
inc
xorl
cmp
jle
int3
sbb
dec
bound
jp
mov
pop
shl
lock
in
insl
rolb
sub
xchg
sub
xchg
les
adc
add
movsb
add
mov
out
add
inc
and
inc
sub
dec
ljmp
xchg
jo
dec
cli
xchg
test
ret
adcb
ss
jecxz
inc
sub
movsl
call
jge
xchg
loop
loope
adc
pop
out
push
minps
das
sbb
mov
loopne
inc
cmp
xchg
cmp
jnp
adc
mov
mov
testl
or
add
sbb
sti
jecxz
movsl
mov
push
sbb
sbb
fisubrs
test
jge
xor
loop
fsubl
fsubrl
aaa
pop
jecxz
and
mov
and
rorb
sbb
arpl
jmp
adc
mov
pop
pop
or
pop
dec
pop
jne
jp
or
mov
imul
loope
push
cmp
push
outsb
es
push
xor
in
rcl
call
or
and
repz
xchg
mov
jle
daa
test
in
movsb
outsb
jecxz
and
lea
add
imul
push
mov
test
xor
imul
mov
push
push
lcall
mov
mov
mov
sub
shl
fisubrs
popw
jbe
add
xadd
push
or
clc
or
sub
mov
jle
adc
test
je
xor
push
mov
mov
sbb
or
and
scas
ja
jge
mov
add
bound
cmp
mov
xor
or
flds
je
cmp
arpl
or
cmp
push
fisttpl
cmp
scas
rorl
pop
pop
push
mov
or
jb
cmp
mov
fdivr
or
cld
std
es
in
dec
fmuls
pop
ficoml
push
dec
jmp
stos
cli
pop
add
popa
sub
popl
push
int3
addl
or
test
and
jo
or
ja
push
test
dec
sbbl
aad
es
je
idivb
imull
push
out
and
sub
inc
mov
mov
lret
nop
lret
inc
cmp
pusha
add
loopne
inc
sbb
push
xchg
sarb
add
adc
and
or
jbe
rcrb
inc
adc
mov
sub
mov
cmpl
sub
push
insb
or
stos
mov
in
cmp
pop
adc
xchg
jg
test
sbb
dec
mov
in
xchg
movsl
pop
sub
les
add
pop
rclb
clc
xor
inc
sbb
inc
or
fs
sbb
ljmp
shl
and
cs
scas
pop
sub
xor
and
fisubrl
push
and
push
sbb
mov
pop
mov
mov
adcb
leave
sbb
push
sbb
aaa
shlb
mov
mov
pop
je
add
jg
push
and
pop
mov
and
mov
andl
xchg
push
stos
mov
add
xor
mov
movsb
xchg
jo
pop
and
jo
shrb
fildll
loopne
push
sub
jns
popa
scas
ljmp
inc
jbe,pt
iret
cltd
inc
mov
cmc
insl
ja
jb
and
and
shll
dec
fcmovnu
jmp
out
mov
add
dec
arpl
add
subl
adc
mov
mov
icebp
jmp
out
adc
add
sub
xor
test
inc
shll
inc
leave
mov
jmp
addb
xchg
push
mov
inc
lret
insb
jg
orb
daa
push
outsl
subl
mov
dec
pop
mov
ss
enter
into
cwtl
dec
adc
push
xor
loope
and
sti
lret
dec
xlat
pop
jb
xlat
popf
mov
sbb
fisttpl
inc
mov
push
aaa
inc
and
adc
inc
cmp
pop
movsl
push
xchg
and
fiadds
sub
jg
sbb
int
scas
cmp
insb
push
xorb
test
xor
pop
or
dec
lock
or
sub
mov
add
and
test
pop
dec
cmp
and
inc
pushf
xchg
jl
rol
push
dec
adc
cmp
mov
sub
sub
mov
sahf
cmpsl
push
dec
js
clc
fwait
mov
xor
and
xor
das
inc
ret
cmp
movsl
xchg
cmp
cmp
sub
mulb
cli
pop
insb
loopne
cmpsl
in
ret
or
out
pop
cmpsb
mov
push
or
xchg
int3
rorl
and
mov
mov
clc
jns
js
push
gs
in
inc
insl
mov
loop
test
sbb
xlat
dec
cld
pop
js
loopne
mov
xchg
cmp
ljmp
dec
imul
mov
adc
and
xchg
lods
ret
mov
stos
and
and
ss
xchg
push
add
pop
adc
mov
les
push
xchg
movsb
call
xor
daa
lret
pop
and
adc
add
call
sbb
jle
sahf
xchg
sbb
mov
movl
add
inc
test
jne
push
into
pop
sbb
movsl
divb
int
ljmp
ds
push
add
bound
mov
fmull
loope
sbb
stos
cmp
jp
loop
jo
inc
pop
outsb
and
mov
fsubl
mov
push
ret
test
dec
mov
fisubl
mov
dec
xor
mov
loopne
add
ljmp
cmp
aaa
cs
mov
mov
pop
fwait
push
lods
lds
adc
aas
loopne
pusha
cmp
and
shrb
mov
sbb
shlb
mov
aaa
pop
lret
fbstp
mov
mov
xor
lds
add
shlb
rolb
xchg
pop
pop
inc
sbb
add
inc
or
pop
clc
ret
ret
dec
inc
test
mov
adcl
add
sub
popa
cli
aam
sub
scas
rcll
jle
mov
cmp
movsl
outsb
and
add
mov
nopl
jecxz
mov
inc
mov
pushw
orb
and
jno
and
sub
inc
pop
pop
mov
jecxz
lock
jo
imul
loopne
push
cmp
lods
icebp
pop
rorl
arpl
jg
jo
sub
je
aaa
es
outsl
push
add
data16
fildl
cmp
mov
je
fwait
inc
movsl
fsubs
outsb
insb
adc
mov
sbbw
stc
sbbb
push
fcomps
fbstp
dec
lock
add
inc
test
insl
jl
ljmp
enter
fiaddl
cmp
add
xchg
fcoml
arpl
jl
imul
enter
mov
sbb
pop
fadds
pop
push
cmpsl
cmpsb
jne
mov
adc
in
pop
xchg
jne
mov
les
xchg
xchg
jo
mov
jmp
loopne
in
push
sbb
in
mov
inc
jl
or
stos
sub
jecxz
fsubrs
insl
in
lret
scas
scas
lds
jl
and
inc
lods
aad
add
es
jbe
arpl
mov
cwtl
aam
pop
loop
hlt
cli
movsb
fcom
out
in
lods
rol
cmp
cmp
cmp
pushf
or
or
or
stos
mov
call
std
mov
das
je
and
push
xchg
jg
out
fisttps
pushf
icebp
mov
cmp
gs
and
lea
outsl
das
adc
push
dec
enter
jbe
adc
mov
rorb
add
popa
fwait
inc
fs
aas
push
mov
mov
xorl
icebp
pop
or
fstp
pushf
imul
pop
adc
mov
mov
shr
mov
int3
movsb
dec
jnp
mov
jbe
testl
xlat
sub
push
addl
add
jmp
scas
lods
ja
add
rcl
fists
leave
lret
and
or
inc
mov
aad
add
mov
jl
mov
or
push
jmp
mov
sub
adc
pusha
icebp
in
cmc
mov
inc
mov
ja
mov
daa
inc
incb
lea
outsb
fwait
push
insl
adc
sub
cs
mov
lea
jp
mov
jmp
xor
aad
pop
mov
ficoml
jbe
mov
xchg
out
push
movsl
pop
mov
pop
orl
in
iret
in
aad
dec
pop
lret
pusha
pop
mov
orb
in
dec
jl
xchg
jb
mov
cwtl
push
jle
js
test
xor
jecxz
jae
roll
xorb
or
xchg
jo
in
adc
aas
jae
mov
sub
hlt
ret
push
leave
flds
pop
cs
xchg
sub
aam
dec
popf
std
ja
insb
lret
data16
xchg
pop
sbb
sub
xchg
loopne
clc
fdivs
and
adc
cmpsb
mov
mov
sti
jne
insb
mov
or
insl
cmp
or
data16
test
roll
loope
pushl
inc
add
stos
sbb
dec
xor
pusha
cmp
shlb
hlt
call
arpl
sbb
mov
pop
icebp
or
pmullw
fiaddl
das
mov
or
pop
test
jbe
sbb
dec
sbb
push
lahf
cltd
in
call
cmpl
in
adc
out
sub
adc
popa
xor
movsl
pop
jmp
clc
add
int
insl
mov
sub
mov
pop
sbb
outsb
test
and
or
pop
stos
fdivr
or
mov
int
push
pop
push
stos
mov
jns
cmp
loop
test
pop
aam
sbb
sub
divl
jl
cmp
push
nop
cmp
sbb
fsubrp
in
imul
bnd
mov
movsl
mov
ret
xchg
cmc
int
test
xchg
push
mov
adc
aaa
sub
and
mov
pop
jp
push
add
pop
mov
aaa
jge
or
sub
ret
fwait
dec
jp
mov
das
jae
dec
and
sub
ss
inc
mov
fildll
push
push
addr16
cmp
dec
adc
in
push
fisttpl
repnz
outsl
shrb
inc
push
addr16
inc
inc
aas
inc
cmp
or
adc
std
and
sub
push
xchg
faddp
daa
fdivr
adc
mov
add
mov
xchg
or
mov
out
add
rcrl
fsubs
or
incl
aaa
mov
int3
imul
shlb
cwtl
mov
je
insl
mov
dec
insb
lds
push
jecxz
or
and
push
inc
sub
fadds
dec
mov
mov
pop
mov
and
es
pop
dec
fists
mov
and
xchg
adc
in
adc
out
sbb
mov
cmpsb
inc
inc
pop
xor
fisubrs
jle
sub
daa
fisubs
pop
push
xchg
push
aas
mov
mov
aam
inc
pop
adc
mov
in
movsb
jmp
nop
loop
inc
lcall
int3
insb
push
jns
jae
jnp
push
in
popa
mov
mov
pop
inc
pop
pop
inc
jmp
cmp
shrb
nop
mov
icebp
xchg
jmp
ss
dec
lret
push
pusha
jb
sbb
sub
mov
pop
fcmovnu
mov
sbb
fistpll
inc
sbb
stc
orb
arpl
cmpsb
mov
and
hlt
out
je
ret
push
insb
mov
nop
ret
jne
adc
mov
xchg
insb
xchg
rcll
fadds
mov
pusha
or
outsl
mov
in
cmc
xor
inc
mov
in
sahf
inc
std
scas
push
jo
mov
and
je
dec
repz
movsl
insl
sti
adc
lea
cmp
frstor
cltd
imul
or
push
jae
or
outsl
xchg
aam
xchg
subl
scas
inc
into
cmp
std
aad
mov
and
loope
cmpl
mov
push
cmp
cli
fucomip
call
cltd
stc
cmp
push
loope
test
aaa
pusha
cmp
push
adc
pop
shrb
cmovns
cmp
sar
xlat
push
cmp
mov
or
or
jbe
or
push
fucomip
or
or
ret
sarb
bound
popa
add
adc
xor
jae
lods
mov
push
or
mov
cmp
pop
rorb
add
mov
inc
inc
push
pop
sarb
pop
dec
jl
nop
xor
arpl
mov
loope
and
incl
ficoml
loope
xchg
pop
xor
std
add
jl
jle
pop
inc
cwtl
and
inc
test
jno
xor
fistpll
mov
fstpt
cmp
sbbb
loopne
movsl
jno
and
lds
pop
leave
push
scas
fcmovnu
lods
and
mov
addb
jne
loope
mov
mov
sti
test
add
icebp
dec
rcrl
in
or
sbb
mov
sbb
call
and
outsb
and
dec
xchg
shll
sahf
mov
jp
leave
pop
int
xchg
pop
insl
insl
jae
shll
push
je
mov
pop
in
cs
mov
leave
loopne
and
push
dec
sbb
add
sub
aas
mov
mov
mov
fistl
popf
std
sbbb
mov
lcall
sbb
std
inc
add
add
icebp
adc
mov
imulb
es
dec
and
mov
jb
cmpsb
jp
loop
mov
push
test
pop
xchg
mov
addl
popa
inc
sbb
cmp
psubsb
pop
fdivs
fnstenv
sbbb
add
test
jg
testb
add
sbb
adc
jge
out
pop
mov
out
ljmp
shrl
je
je
mov
push
call
mov
pusha
inc
xor
stos
addr16
adc
loop
aam
adc
sarb
sub
jb
dec
and
xorb
push
in
jo
jo
lea
mov
mov
dec
inc
scas
xchg
mov
push
daa
roll
mov
sub
mov
push
and
pushl
popa
cmp
mov
je
cmp
mov
aad
pop
lret
adc
or
scas
sbb
mov
jmp
xchg
xchg
int
sbb
mov
and
movl
iret
call
add
inc
in
mov
nop
sub
jbe
jl
mov
int3
frstor
sarl
push
loopne
xor
or
pusha
mov
push
stos
mov
jno
xor
jbe
push
das
jbe
xor
sub
aam
jne
pop
jge
or
enter
out
cmp
insl
fistl
mov
xor
mov
je
movsl
and
lcall
in
dec
cmpb
clts
or
loopne
inc
lret
xor
movsl
and
mov
cmp
jecxz
pop
mov
arpl
repnz
lea
test
mov
pop
add
ret
jge
lock
test
sbbb
sub
ret
outsl
insl
fiadds
ds
stos
loope
xchg
fdivrs
inc
les
pop
mov
jne
dec
xor
imul
ret
js
xor
sub
loope
cmp
fisubl
mov
iret
lods
jmp
popf
or
pop
xlat
fimull
jg
lret
sub
jo
mov
je
xlat
xor
daa
xor
test
mov
mov
xchg
pop
fs
push
pop
in
movsl
or
scas
pop
inc
jmp
rorb
loop
insl
mov
sbb
or
mov
and
shlb
in
js
push
jnp
jnp
mov
mov
inc
and
scas
icebp
js
ds
mov
mov
lods
inc
mov
mov
addl
sub
push
adc
dec
loope
repz
pop
js
or
pop
sub
call
mov
jg
es
pop
clc
jo
sub
pop
ljmp
clc
sarb
pusha
xchg
jo
cmp
pushf
adc
xchg
add
roll
mov
scas
xor
fwait
loope
aam
inc
movups
add
mov
jecxz
mov
push
loopne
mov
add
inc
adc
sub
loopne
mov
rcr
mov
negb
fsubs
mov
mov
jl
jmp
sbb
clc
xchg
push
push
sub
test
outsl
test
mov
aas
inc
or
or
lahf
push
stos
or
adc
aas
scas
pop
sub
xchg
es
adc
push
les
mov
out
pop
cmc
pushf
loope
pop
add
jle
jns
inc
add
mov
pop
mov
sub
mov
inc
sbb
inc
dec
sbb
and
jo
adc
mov
xchg
jg
xor
sbb
jno
dec
push
push
xor
aas
add
add
fwait
push
dec
pop
push
and
mov
sub
orl
das
cwtl
and
cmpb
jb
cmpsl
push
inc
jb
push
outsb
add
xor
mov
add
popf
inc
mov
ret
lds
sbb
jo
pop
sub
cltd
lods
mov
movsl
adc
popf
pop
clc
pop
lods
mov
inc
cltd
aam
sbb
or
push
movsb
xor
sbbb
add
and
xor
cmpl
add
shlb
pop
mov
pop
ljmp
les
sub
sub
rcr
xchg
mov
leave
in
pushf
.byte
insb
xchg
mov
in
sub
xorl
push
push
lea
push
add
in
push
push
push
in
mov
or
push
hlt
call
ret
addr16
ljmp
or
div
rcrb
roll
jns
jmp
xchg
int
in
negl
sub
push
pop
or
fs
fdivp
mov
and
push
push
call
jns
mov
addr16
in
call
in
gs
inc
arpl
sub
rcrl
or
fstpl
jmp
dec
cmp
jne
push
sub
and
push
sbb
lods
add
add
lock
sub
xchg
movb
push
fdivl
mov
xor
xor
jne
push
stc
out
addr16
push
xorl
gs
mov
inc
push
xor
push
bound
arpl
pop
insb
ja
pop
jns
adc
xor
jo
data16
jnp
mov
push
push
mov
loopne
in
call
or
mov
jns
dec
or
cmp
pusha
jg
lcall
decl
loope
sbb
pop
in
popa
inc
or
mov
pop
sub
add
repz
ret
leave
ljmp
lock
push
scas
xor
push
negl
mov
dec
iret
call
addl
subb
and
jl
xor
xor
insl
shr
push
dec
dec
dec
sbb
or
mov
or
mov
lock
push
and
fildll
xor
inc
dec
jmp
mov
testl
jmp
aad
pop
xor
pop
fildl
xlat
sbb
jmp
loopne
mov
sbb
lock
xchg
mov
pop
in
push
sbb
js,pn
fstp
or
dec
dec
push
add
je
jg
push
cmp
ds
pop
push
call
or
dec
aas
mov
jne
out
js
push
hlt
push
or
je
cmp
aas
mov
pusha
dec
xor
xchg
push
data16
inc
xor
dec
push
ja
pop
insb
unpckhps
add
not
push
popa
fucompp
idivb
ja
push
pop
not
inc
sub
add
add
dec
inc
mov
outsb
das
inc
sbb
scas
xor
push
inc
ds
fistpl
cmp
xor
ret
sub
sbb
mov
sub
fldcw
sahf
popa
in
mov
xor
jle
js
adc
addb
push
xchg
jno
jmp
dec
inc
inc
scas
jb
mov
leave
pop
sub
ljmp
sbb
dec
adc
dec
movsl
sub
movl
jmp
jge
sti
add
inc
loopne
inc
cmp
add
jbe
jmp
gs
in
push
hlt
dec
pop
add
adc
sub
inc
push
mov
jmp
jg
andl
adc
push
aad
pop
push
dec
inc
push
fnsetpm(287
inc
cld
lea
adc
dec
sub
push
add
not
jmp
cltd
pop
inc
les
push
int
idivl
pop
clc
push
push
inc
jo
insl
xchg
add
call
mov
shll
sbb
cld
xor
lods
int
cmc
mov
mov
jo
movsl
dec
sbb
cld
jmp
xchg
test
lahf
neg
sbb
jmp
dec
dec
incl
and
push
rclb
fidivs
insb
jmp
std
fisttps
pop
jg
inc
jmp
adc
in
jno
nop
push
dec
push
popf
hlt
es
fwait
mov
dec
je
lahf
xor
and
fstps
add
jmp
push
in
jne
mov
and
inc
xor
fdivrp
jbe
adc
inc
outsl
cmp
jbe
push
adc
push
shlb
aas
push
mov
ja
push
sub
mov
dec
xor
mov
push
fisttpl
pop
lret
push
jae
adc
call
sbb
pushf
push
or
dec
mov
imul
std
ljmp
out
lods
cmp
fsubrs
sbb
xchg
les
jle
jns
outsb
aas
and
inc
mov
jl
notl
jnp
subl
cli
pop
loope
mov
mov
xor
lret
push
out
jg
or
scas
dec
dec
dec
push
xlat
mov
dec
push
aaa
mov
cmp
push
mov
mov
xor
dec
fldl
pop
pop
mov
clc
mov
add
dec
rorl
pushf
aaa
add
mov
and
xchg
pop
sub
js
adc
mov
sti
sbb
inc
adc
inc
cmp
jo
in
lods
jne
add
fistpl
push
fsub
sub
rorb
adc
adc
js
fwait
or
pop
pop
roll
into
ret
cmp
inc
mov
adc
jmp
ja
ficomps
sbb
sub
loopne
insl
loopne
sbb
push
inc
jo,pn
jp
adc
jp
fnstsw
add
shr
xlat
mov
push
add
sbb
test
push
jno
mov
dec
mov
icebp
jbe
pop
imul
inc
jb
mov
cld
sarb
insl
add
and
into
inc
repz
test
hlt
lods
cld
je
push
push
pop
pop
nop
fsubr
sar
jno
mul
mov
jbe
data16
cmp
sbb
push
orl
sarb
inc
outsb
outsb
xor
insb
mov
pop
jecxz
mov
aad
fwait
mov
or
dec
jae
inc
dec
add
push
jae
inc
xor
call
xor
sbbl
aaa
mov
movl
pop
push
dec
dec
inc
mov
mov
add
inc
cmp
fsubrs
addl
fcompl
or
pop
movsl
shll
xlat
fisttpll
dec
sbb
add
fsubl
clc
inc
popa
dec
imul
sti
mov
popa
rcrb
jle
sbb
dec
insb
inc
pop
rorb
mov
add
lock
out
imul
sub
dec
imul
pop
in
inc
dec
bound
pop
mov
pop
xorl
adc
mov
test
jnp
js
fs
fdivs
jne
mov
pop
mov
fildll
inc
cmp
cmpsl
inc
push
pop
incb
or
repnz
pushf
clc
aaa
add
xor
and
rolb
jno
xor
dec
push
xor
cmp
imul
loopne
out
call
imul
cmp
outsl
mov
dec
enter
dec
out
test
sbb
inc
xchg
add
fdivrp
mov
jmp
cmp
dec
stc
or
jmp
int3
in
inc
jecxz
in
push
sbb
sar
arpl
push
outsb
xor
push
fistl
dec
dec
call
dec
push
xchg
imul
pop
cmp
pop
push
or
fsub
xchg
cltd
lods
popa
imul
push
mov
mov
fidivl
push
xor
pop
fsubl
dec
call
jl
push
push
in
fidivrs
mov
or
jmp
jbe
jae
and
jo
pop
bound
jge
inc
dec
gs
push
pop
imul
pop
ds
addl
test
push
pop
push
jns
imul
push
lcall
imul
stc
add
ret
test
leave
xor
lods
jg
dec
not
dec
jmp
mov
cmp
dec
inc
or
push
inc
lret
add
inc
mov
mov
jmp
add
adc
popa
cmp
lret
or
std
and
sbb
nop
pop
bound
into
and
out
sbb
jmp
lea
inc
js
push
fcomps
cmc
pop
xor
sbb
push
adc
xchg
cli
mov
in
outsb
lcall
fsts
daa
outsb
repz
adc
incb
sbb
fildl
in
sbb
push
mov
sbb
add
jg
mov
add
jns
jns
jno
rcrb
pop
outsl
push
inc
fnstsw
pusha
and
es
insl
mov
push
call
mov
insb
inc
incb
push
call
pop
sbb
jmp
mov
push
push
mov
fistl
shlb
or
sub
jo
sbb
jmp
js
shlb
push
imul
or
jb
or
ss
push
mov
xor
mov
icebp
adc
push
ljmp
dec
popa
fsts
ja
in
xor
xchg
push
std
jne
push
je
hlt
loope
lea
sahf
jbe
push
ret
mov
jp
pop
add
subl
mov
outsb
les
test
push
out
fs
mov
dec
push
clc
xchg
or
aaa
and
or
and
mov
mov
add
push
push
lea
add
idivb
inc
aam
roll
pop
and
fcomp
iret
adc
dec
clc
jg
dec
pop
gs
push
or
orl
outsl
ja
jb
movsl
data16
stos
inc
outsl
or
pop
push
mov
mov
xor
pop
fisubs
dec
xorb
cmp
xor
add
popa
push
push
xor
push
addr16
mov
dec
fbstp
push
xchg
or
pop
stos
sbb
jmp
add
push
inc
adc
mov
loope
mov
inc
inc
loopne
add
cmc
and
jne
mov
mov
insb
clc
out
sub
push
cmp
lcall
negb
mov
inc
dec
inc
add
ja
shrb
xchg
mov
pop
and
pop
pop
push
sahf
sbb
not
dec
pop
jmp
inc
sub
inc
das
inc
call
sbb
pop
lahf
adcb
jge
add
in
out
sbb
push
inc
insb
fisttpl
jne
test
dec
ret
or
push
out
pop
jmp
pop
adc
shr
into
sbb
test
inc
inc
push
mov
mov
fs
push
outsb
call
push
add
push
dec
sub
push
pop
jmp
mov
insl
push
pop
sbb
mov
dec
xor
les
jge
and
sbb
push
cwtl
arpl
dec
lods
push
out
lcall
sub
adc
sti
icebp
lahf
and
insl
mov
xchg
sub
ficoml
push
dec
fimuls
cmc
cmp
add
jl
mov
mov
jmp
sbb
leave
inc
aas
xchg
stc
fwait
adc
ja
pop
outsb
xor
push
pop
sub
je
je
orb
pmulhuw
push
jno
push
rclb
ja
dec
jmp
xor
mov
sbb
mov
jecxz
fxtract
jmp
inc
push
or
iret
in
jns
ror
cltd
push
push
mov
xchg
mov
push
call
inc
addl
mov
pop
rorl
xor
jne
pop
ss
adc
inc
sbb
dec
insl
repnz
mov
insb
pop
mov
cmpsl
sub
not
push
push
not
test
mov
sbb
outsb
mov
push
push
imul
mov
xor
bound
lock
stos
call
inc
lret
aam
add
in
inc
sub
mov
adc
mov
imul
sti
lock
movsb
xor
pop
adc
inc
xor
js
xor
or
ljmp
adc
decl
ds
xor
push
inc
ja
mov
ret
je
dec
jecxz
xchg
inc
push
les
sti
add
dec
or
fidivs
clc
stc
cmp
sbbl
call
push
dec
and
xchg
in
imul
jbe
dec
xor
dec
mov
lds
pop
lods
add
xor
jo
sbb
xchg
outsl
pop
dec
push
pop
push
push
cld
das
inc
ret
in
fcompl
or
push
int
mov
push
sar
jo
or
hlt
stos
ret
jne
cmc
movhps
ret
dec
sub
inc
jmp
popf
shll
mov
in
icebp
inc
sbb
jcxz
rcpps
push
mov
gs
je
sbb
adc
int3
sbb
adc
je
jg
fsub
dec
inc
push
sbb
push
orl
and
inc
and
xchg
les
call
or
cmp
lahf
sbb
fs
call
cmp
adc
pop
loope
pop
push
inc
push
jle
sti
mov
inc
out
imul
xor
inc
adc
jo
jns
addr16
cmp
or
test
jmp
xchg
sub
out
or
in
adc
xor
push
or
es
mov
daa
jno
mov
mov
inc
pop
cwtl
loopne
and
rorb
push
push
outsb
dec
xchg
gs
insb
scas
or
lcall
pop
ret
cli
pop
scas
mov
push
mov
inc
fwait
call
push
popl
jecxz
test
shrl
rclb
cmp
enter
push
push
orb
mov
popa
ss
jbe
fidivl
push
xor
jo
or
dec
sbb
repz
dec
mov
sbb
pop
addr16
shrb
aaa
imul
fs
mov
cmp
mov
ds
xorl
aaa
fs
sub
push
push
out
js
push
arpl
arpl
mov
push
sbbl
dec
in
xchg
push
outsl
sub
and
mov
dec
iret
pop
xor
sbbl
cmp
mov
lea
and
and
or
sub
push
out
aas
jns
push
push
ret
dec
je
outsl
dec
jae
xor
push
insb
push
rcrl
outsb
das
and
xor
dec
xor
mov
cmp
jne
sub
dec
ja
ss
sbbl
xchg
push
inc
jno
jl
xrelease
or
mov
push
mov
sub
bound
loopne
sub
test
fmull
fcom
fmuls
out
aas
push
outsl
addb
fldt
ja
push
add
fadd
ret
dec
mov
test
inc
jmp
inc
xchg
inc
cmp
les
call
pushf
dec
out
pop
lock
dec
dec
cld
xor
ljmp
inc
and
int3
push
cld
fisubl
jg
cld
mov
push
outsb
inc
scas
orl
dec
add
mov
icebp
mov
loop
pop
mov
adc
mov
iret
jle
xlat
jmp
lock
push
fcompl
imull
testl
sub
and
clc
sub
inc
inc
dec
adc
rorb
jmp
or
cld
inc
jbe
pop
std
in
imul
dec
test
fs
mov
inc
mov
xchg
push
pushf
aam
xor
and
test
inc
fsubrs
std
cmp
sbb
sub
std
jo
xchg
lcall
or
mov
xchg
pop
jl
or
jae
sbb
jns
cmc
inc
les
outsl
jmp
outsb
push
lahf
ss
insb
dec
dec
jo
addb
cmc
cld
roll
sub
push
mov
je
hlt
mov
in
add
mov
add
insl
enter
imul
insb
sbb
bound
push
mov
mov
popf
leave
ljmp
scas
rclb
jmp
shl
lea
inc
jns
adcb
mov
and
inc
push
icebp
addb
insl
inc
or
mov
popf
mov
jmp
das
cmp
inc
stc
int
add
std
mov
repnz
je
sbb
push
cmp
and
addr16
repz
sub
in
cmp
adc
addr16
inc
adc
jecxz
cs
and
lret
push
movsb
out
inc
sub
push
shlb
pop
outsl
bound
imul
mov
push
insb
fdivrs
sub
imul
lock
sub
popl
aaa
dec
iret
stos
test
and
fdivrs
fimuls
xchg
jnp
mov
and
jl
inc
aad
in
imul
out
test
sbb
imul
jmp
dec
mov
push
mov
mov
mov
sti
out
insb
add
mov
add
or
adc
sbb
pop
mov
inc
mov
mov
adc
cmpsl
nop
scas
or
mov
add
fistpll
push
out
cli
add
mov
jg
std
dec
mov
mov
dec
icebp
das
mov
mov
mov
pop
mov
push
mov
adc
sti
jns
mov
insl
adc
mov
rorb
mov
decl
fs
insb
stos
ss
bound
fwait
push
or
push
pop
repz
sub
out
flds
punpckldq
jns
enter
or
dec
mov
mov
push
inc
lret
pop
adc
mov
mov
mov
inc
jg
mov
inc
enter
add
out
inc
mov
mulb
jecxz
int
xchg
arpl
xor
push
fdivl
xchg
aas
sti
pop
lock
mov
mov
testl
push
pop
js
mov
inc
psrad
mov
push
mov
mov
adc
pop
adc
scas
xor
cmp
loope
sub
cld
xchg
in
popa
jl
mov
mov
cmp
sbb
mov
cld
sarl
mov
mov
arpl
shll
mov
sbb
ss
mov
jmp
or
push
pop
jb
cmp
icebp
sti
dec
and
inc
add
mov
pop
fisubrs
pop
loop
mov
mov
mov
cmp
fsubl
icebp
xchg
lods
jecxz
shlb
or
fldt
mov
xchg
inc
cmp
mov
add
or
lods
add
sbb
mov
mov
jb
push
mov
jns
rorb
bound
das
stos
mov
fcomps
gs
xchg
jae
add
add
mov
in
fcoms
scas
jne
mov
mov
xchg
faddp
pop
ret
adc
xorb
aam
dec
test
add
ljmp
sub
fmul
notb
mov
sbb
int3
and
add
nop
dec
fsubr
xchg
jg
pop
adc
xchg
mov
mov
shlb
jne
mov
lahf
inc
lods
cmp
xchg
sbb
mov
imul
xchg
mov
dec
xor
fwait
data16
sti
test
dec
xlat
test
sub
inc
inc
gs
shrl
rorb
movsb
xchg
insb
fistpl
adc
add
pop
mov
ja
push
scas
jecxz
cmp
mov
enter
xor
push
out
fucompp
jnp
jmp
imul
mov
outsb
or
mov
or
and
ds
adc
mov
ja
mov
ja
pop
mov
xlat
add
fdivl
mov
in
or
cmpsl
ret
jle
mov
call
or
jge
cmp
fwait
movsb
add
fists
and
clc
out
add
bound
imul
rorb
cwtl
jae
test
mov
out
inc
rclb
and
and
loopne
add
sub
mov
dec
push
divl
dec
stc
and
fwait
and
movb
cs
or
bound
mov
jmp
in
push
mov
lds
je
repnz
je
std
clc
icebp
lcall
jge
addr16
add
fwait
test
dec
ss
cs
mov
jge
xchg
pushf
push
and
mov
add
mov
cmc
sbb
into
sub
lods
inc
pop
lret
dec
jae
push
sbb
in
jb
push
sti
push
mov
jp
out
rcrl
mov
xor
cli
push
xchg
enter
dec
loope
daa
xor
test
ja
sbb
sub
or
cmpsl
cmp
pop
daa
pop
inc
dec
movsl
jmp
mov
cmp
and
jne
cmp
enter
enter
and
pop
pop
adc
rorl
pop
jmp
adc
insl
fisttpll
imul
ja
sub
jl
cmp
or
orps
loope
stos
aas
movsb
cwtl
push
int3
stos
add
mov
cmc
mov
sbb
sub
xor
sti
push
movups
and
jl
mov
jne
outsb
adc
or
scas
cltd
lcall
xor
push
pusha
xor
xor
or
xor
sbb
je
cmp
mov
mov
cmpsl
add
or
xchg
or
mov
jmp
cmpsb
adc
call
fcmovb
cs
xor
shll
fsubl
sub
cmpsb
adc
cwtl
mov
xor
jae
jns
imul
adc
jo
inc
cmp
aam
push
mov
push
cmp
fs
dec
pop
pop
lods
jecxz
ss
xchg
xor
mov
mov
dec
add
out
add
aam
sarl
sbb
not
xchg
mov
pop
pop
fs
ds
fcomps
inc
mov
inc
dec
neg
ret
mov
insl
xchg
and
cmpb
fnstcw
pushf
repnz
ret
jb
test
mov
xchg
fidivrs
int
add
mov
sub
mov
test
dec
pop
ja
jo
rorl
mov
mov
gs
pop
jnp
adc
aaa
sbb
loopne
outsl
add
mov
pushf
hlt
xor
mov
rcrb
dec
xor
adc
inc
cs
stos
and
pushf
out
pop
aam
cmp
lods
out
or
xchg
push
in
iret
test
leave
sbb
leave
pusha
arpl
lock
cs
icebp
loopne
mov
xchg
xchg
mov
fsubrs
sbb
xor
jecxz
pop
lcall
fs
bound
into
fmull
sti
mov
pop
dec
ret
push
test
fstl
xor
xor
dec
sbb
aas
add
add
or
jbe
aaa
sbb
mov
xchg
push
jl
push
sti
xchg
loope
out
push
outsb
add
mov
mov
dec
mov
dec
pop
inc
or
std
pop
ss
lods
enter
sbb
xchg
popf
ror
mov
stc
sbb
and
dec
mov
subb
sahf
enter
pop
and
in
mov
fcoml
mov
xor
sbb
sarb
cmp
out
xchg
push
mov
in
push
xor
ss
popf
mov
mov
or
insb
jmp
mov
bts
lahf
push
sub
popf
imul
mov
in
xor
ljmp
xor
fbld
outsl
pop
or
mov
insl
xchg
js
adc
adc
lcall
jecxz
add
adc
ficompl
es
push
inc
mov
adc
lock
sub
add
add
inc
cltd
pop
xor
lea
clc
dec
xchg
js
or
sahf
outsb
adc
scas
sahf
or
enter
xchg
jge
arpl
push
mov
mov
nop
sti
mov
lock
jnp
mov
mov
mov
pcmpeqd
mov
xchg
xor
insb
lcall
loop
bound
push
push
into
jge
inc
test
xchg
ja
cld
andb
dec
sbb
movsb
cmp
fisubrl
and
fidivl
loope
adc
or
jp
fcoml
hlt
je
aas
dec
sbb
or
sbbl
bound
or
jno
and
in
push
pop
fldl
sbb
push
inc
dec
movsb
movl
cmp
or
test
repnz
cmp
xchg
add
and
addb
push
scas
add
mov
push
cmp
test
enter
cmp
xchg
mov
fadds
adc
push
mov
faddl
test
add
fisttps
and
mov
add
inc
inc
cmc
add
dec
sbb
insl
icebp
add
rcr
xchg
aaa
rclb
sbb
jns
popf
cmp
popf
clc
mov
jb
dec
es
and
mov
insb
mov
out
pop
shll
inc
repz
mov
arpl
inc
outsb
jne
mov
popa
sbb
add
mov
test
adc
es
mov
and
out
pop
push
push
add
in
jae
movsb
ja
dec
inc
cmp
pushf
sbb
dec
add
or
stos
pshufw
sub
sbb
mov
lea
ljmp
ss
xlat
cmp
or
add
decb
call
ret
leave
push
js
and
cmp
sbbl
aaa
scas
jbe,pn
call
movsb
push
std
adc
xorl
pop
lods
pop
subl
pop
sbb
mov
test
push
xchg
pop
or
xchg
add
popf
xor
cmc
mov
pusha
add
fnstenv
insb
pop
pop
mov
pop
mov
pusha
call
outsb
fs
jp
in
imul
cmpxchg
mov
cmp
fcompl
out
cmp
lahf
rorb
or
fwait
outsb
cwtl
pop
sbb
stc
xor
in
outsl
xchg
js
cmp
iret
xor
xchg
jg
adc
shlb
das
aaa
mov
add
sbb
mov
pop
inc
jl
xchg
sbb
sbb
push
mov
mov
inc
dec
mov
jg
sti
fmuls
mull
dec
int3
xchg
pop
xchg
push
xor
mov
lcall
scas
pop
push
add
pop
pop
imul
and
adc
movsb
hlt
jp
xor
dec
test
jecxz
jl
lea
push
push
or
mov
jge
rol
jg
das
cmp
sarb
xor
jle
mov
rcll
pop
dec
imul
cmp
mov
ljmp
in
dec
cmp
clc
popf
lret
sub
dec
ljmp
cmp
xor
daa
add
dec
rcl
mov
rcrb
add
scas
lahf
fdivrl
insb
xchg
stc
jns
cmpsb
clc
jge
int
sbb
sub
push
cmp
and
sub
xchg
mov
out
test
mov
cli
aam
pop
pop
xchg
xchg
inc
pop
mov
cmp
adc
inc
sbb
jne
popa
add
pop
jne
lods
and
int
xchg
jo
sub
rorb
out
jl
or
ret
inc
mov
scas
daa
inc
xlat
das
mov
test
jno
xchg
in
add
dec
add
sub
sub
stos
xchg
clc
pop
inc
mov
mov
je
mov
push
dec
pop
loope
dec
push
inc
mov
adc
and
cmp
cmc
cld
xchg
ja
add
adcl
jmp
into
mov
add
ljmp
sbb
xor
mov
loope
sbb
ja
mov
dec
sbb
scas
xor
clc
rorb
mov
adc
and
xchg
pop
rcrb
int
and
or
and
cs
mov
jecxz
adc
sbb
push
xor
or
inc
jne
rolb
mov
cmpsl
cmp
sub
iret
inc
js
in
and
add
rolb
movsb
scas
loopne
pusha
mov
subl
jmp
add
adc
daa
ds
fadds
xlat
sbb
sub
movsb
das
cmpsl
rolb
test
or
and
sbb
fisttpll
insb
sahf
cs
mov
adc
call
push
je
bound
sahf
hlt
ljmp
ret
in
bound
mov
daa
pop
and
push
lods
call
jl
xchg
out
or
loopne
xlat
in
xchg
sbb
arpl
mov
mov
aaa
gs
std
inc
sbb
pushf
ret
mov
in
shll
rcrl
iret
pop
out
test
mov
sahf
and
push
or
xchg
xor
stos
and
cmp
mov
jmp
lcall
aam
mov
mov
xchg
dec
mov
pop
sbb
insb
in
call
mov
sbb
or
xchg
sbb
push
add
ljmp
sbbl
dec
ss
cwtl
jecxz
sti
orb
rcl
nop
and
xor
cld
mov
xor
incl
pop
cmpsb
sbb
lcall
andb
jne
fcomps
out
cli
repz
jle
out
mov
and
sahf
lea
cmp
ja
leave
mov
call
loope
jge
or
inc
scas
mov
loopne
or
iret
enter
int
or
out
es
mov
push
cmp
fdivrs
mov
scas
mov
jle
packuswb
movsb
daa
or
ss
push
or
jmp
rcll
addr16
out
adc
iret
fiaddl
out
adc
jge
mov
xor
mov
je
mov
adc
jns
xor
push
ficompl
icebp
xchg
stos
iret
cmp
cmp
test
adc
mov
icebp
stos
cmp
mov
push
or
push
or
dec
popf
adc
xlat
push
ljmp
cmp
movsb
iret
cltd
lea
outsl
add
push
pop
lods
aaa
incb
dec
test
pushf
push
aas
adc
leave
movsb
repz
xchg
push
and
repz
pop
insb
sbb
frstor
sar
popa
outsb
pop
xchg
pop
jno
sub
mov
or
mov
xlat
movsb
outsb
seta
xchg
xchg
icebp
add
enter
test
outsb
lock
das
inc
or
mov
jns
inc
bound
aas
icebp
cli
aad
fbstp
xchg
fsubrl
inc
sbb
jecxz
inc
adc
xor
or
jne
inc
sub
std
xor
or
sbb
rcrl
pop
loope
adc
and
ss
cmp
mov
xor
fidivrs
psadbw
lret
scas
sbb
add
jl
pop
js
pop
mov
xchg
aas
fadds
test
and
dec
ljmp
add
inc
cli
lea
add
xor
lret
pop
and
sbb
and
icebp
push
adc
jb
add
pop
rol
mov
xchg
xchg
loopne
aaa
mov
in
mov
inc
in
inc
add
in
add
inc
or
lahf
sbb
jge
dec
xorl
cmp
pop
mov
push
enter
sub
cld
cmc
daa
pop
or
mov
in
inc
ret
jp
rcrb
pushf
loope
jg
mov
mov
nop
dec
push
adc
jo
scas
lods
ss
mov
fiaddl
pop
sbb
push
mov
jmp
mov
les
push
inc
dec
call
adc
mov
mov
jl
mov
fcmovnu
sbb
push
loope
js
push
cmpsl
push
or
push
lds
mov
loopne,pt
addr16
mov
push
add
mov
xchg
xchg
fisubl
in
adc
add
or
or
xlat
fstpt
cmpsb
imul
mov
shlb
add
data16
in
gs
pushf
divb
sti
int3
rcl
in
popa
insl
inc
jecxz
addr16
inc
out
sbb
aam
mov
mov
sbbb
push
out
mov
adc
dec
icebp
rcl
ljmp
rcl
in
iret
je
xchg
mov
cmp
cli
das
or
icebp
jae
outsb
pop
mov
fcom
dec
popf
sbb
add
mov
loop
jbe
sti
add
loopne
push
xor
cmpsl
cmp
or
cmp
mull
call
addr16
xlat
and
fsubrl
and
and
sar
push
pop
fadds
or
cmp
in
pop
mov
pushf
fadd
cmp
mov
xchg
and
dec
ljmp
lock
icebp
and
shr
push
mov
out
enter
xlat
cs
cwtl
outsl
mov
xchg
sbb
jb
push
test
rcll
pusha
shl
js
jmp
icebp
xor
sub
push
or
inc
ljmp
or
test
loopne
mov
flds
cmp
ret
dec
push
add
js
jecxz
mov
lcall
out
mov
mov
daa
cmpl
inc
mov
out
push
addb
movsb
pop
lds
repz
dec
lock
jne
mov
aam
loop
jno
into
mov
popa
out
adc
pop
bound
je
jg
and
jecxz
cmp
xorb
mov
sub
sub
sbb
or
hlt
mov
xor
jmp
mov
sub
addl
or
xchg
flds
mov
xchg
xchg
push
mov
adc
jbe
popf
cmovg
cmp
cwtl
mov
sbb
in
inc
repz
xchg
scas
pop
mov
cmp
or
cmp
and
xchg
rcrl
cmc
mov
xor
xor
repz
add
cmp
xchg
aam
flds
push
stc
jno
scas
rcrb
push
and
jmp
sub
inc
out
test
push
sbb
xchg
xchg
and
and
fadds
lock
push
dec
fsubrs
xor
pop
sbb
xor
mov
data16
loopne
push
aas
sahf
mov
mov
mov
push
fmul
mov
and
leave
adc
pop
rep
sbb
xlat
pushf
cmpsb
mov
rolb
fisttps
fiadds
stos
xchg
fs
xor
les
dec
mov
mov
push
push
test
push
leave
shlb
aas
inc
jl
testl
inc
lea
shrl
testb
decb
fadd
cwtl
inc
xchg
sbb
push
fnstsw
and
sti
test
jp
data16
jne
shl
sub
add
jno
mov
imul
inc
or
mov
popa
insl
call
xor
or
pop
insl
aaa
add
fcoml
jge
cli
adc
test
mov
jne
pop
enter
push
dec
sbbb
sbbb
aaa
cmp
push
xor
push
fldt
and
inc
ret
pop
adcl
and
loopne
aam
addr16
push
push
nop
lods
cmp
push
insb
sbb
mov
stc
rolb
sti
mov
imul
push
and
inc
cmp
mov
pop
hlt
mov
sbb
jle
cltd
js
filds
cmpsb
popa
aam
movsb
jl
and
icebp
dec
hlt
fnstsw
sub
into
scas
dec
pop
mov
imul
inc
outsb
sub
add
dec
add
or
mov
mov
push
hlt
inc
or
push
rcl
jle
and
ret
mov
in
into
mov
push
sub
jp
test
inc
adc
mov
fs
clc
mov
jne
and
fs
sarb
push
js
mov
jns
pop
scas
addr16
repnz
cwtl
cli
ret
pop
js
adc
add
mov
aas
or
inc
mov
dec
push
push
in
add
sub
test
xchg
repnz
or
jle
mov
ror
and
pop
addb
sbb
add
xor
jl
mov
mov
dec
loopne
les
mov
sub
sbb
into
ds
stc
psubsb
jo
xchg
sub
dec
fisubl
lcall
loopnew
xchg
add
jle
mov
xchg
ja
mov
mov
scas
xchg
sbb
pop
sbb
or
in
test
and
loope
mov
pop
mov
jmp
icebp
cmp
es
push
lods
mov
shl
xchg
pusha
mov
loope
das
inc
insl
inc
lcall
mov
arpl
lods
int3
and
mov
insb
loop
and
stos
pushf
aaa
fildl
adc
es
popf
sbb
mov
dec
pop
pop
add
or
inc
cwtl
rclb
pop
jb
test
jmp
add
sbb
sbb
adc
push
mov
inc
add
add
sbb
outsb
test
push
add
dec
loope
add
add
push
xor
sub
mov
mov
add
mov
int3
es
js
scas
sbb
or
mov
out
push
adc
inc
adcb
adc
sbb
ljmp
xor
shrb
cmc
and
lea
inc
or
add
repnz
xor
addr16
push
stc
mov
jmp
fcoms
sbb
adc
or
outsb
pop
inc
sarb
call
lea
cmp
cmp
cltd
test
daa
xchg
jne
mov
notl
daa
mov
test
ja
ret
into
insl
pop
and
in
pop
shll
popa
and
cmpxchg
xlat
inc
int3
filds
mov
stc
pop
scas
inc
and
push
hlt
inc
dec
mov
loopne
shl
sbb
repz
jge
lds
add
je
dec
dec
and
pop
lods
add
dec
xor
jnp
mov
mov
call
scas
popa
rclb
ret
or
push
stos
cmp
sub
mov
pop
dec
out
mov
cmp
sarl
push
int3
js
loope
mov
leave
mov
xor
mov
int
push
mov
sub
or
push
mov
pop
data16
mov
sbb
out
pushl
lahf
aad
and
movsl
pop
jb
or
jo
out
jo
and
xlat
frstor
cs
dec
iret
sub
aad
incb
and
push
dec
jnp
xchg
inc
push
movsb
pop
adcb
in
enter
sahf
stos
sub
mov
jge
clc
push
addr16
mov
addr16
leave
adc
xlat
inc
in
xorb
jle
inc
xchg
xor
test
and
in
test
test
mov
test
loope
mulb
push
fwait
dec
pop
pop
sahf
mov
out
push
jae
cli
inc
xchg
pop
cmp
out
sbb
jmp
es
and
loop
xor
inc
adc
adc
inc
pop
push
test
ret
adc
jbe
fwait
and
clc
fs
or
add
jne
out
mov
xchg
adc
daa
rol
or
cmp
shlb
hlt
jns
dec
stos
mov
in
pushf
cltd
movsl
cmpsl
add
fidivs
mov
mov
adc
test
andb
js
es
push
push
rcl
xor
jb
add
test
mov
xor
je
les
iret
dec
imul
sub
scas
ljmp
hlt
fildl
mov
js
bound
aaa
decl
loop
nop
inc
xchg
sub
adc
es
cmp
ja
mov
dec
push
ds
xor
decb
stc
aam
jb
es
pop
pushf
cmp
dec
xlat
icebp
fisttpl
xor
adc
lret
lods
roll
jae
test
adc
add
arpl
fistpl
pushf
out
jo
pushf
rolb
shlb
xor
test
and
mov
dec
xor
sbbl
repnz
loop
mov
popf
adc
mov
pushf
shlb
bts
lods
xor
jmp
imul
subb
or
adc
sub
adc
test
hlt
push
inc
xlat
and
shr
push
add
mov
filds
jae
call
out
add
inc
xchg
ds
pop
fucomp
xchg
mov
popf
je
fs
test
mov
or
bound
xchg
addr16
xchg
and
loopne
shlb
icebp
mov
leave
lcall
mov
sbb
push
loopw
jno
rcl
stos
or
jl,pt
or
ss
inc
lds
xlat
mov
mov
ret
mov
repz
adc
cmpsl
add
jge
sbb
inc
inc
sarb
repz
fprem
js
test
cmpsb
scas
sbb
divb
xchg
cltd
xchg
aad
push
xchg
shl
test
movsl
sub
mov
hlt
enter
insb
icebp
sub
stos
sti
pop
repnz
and
xor
call
xor
push
shll
sbb
subl
xchg
xchg
xchg
cwtl
sub
scas
cmovg
mov
icebp
int
aas
insl
cmp
insb
std
mov
int
mov
pop
cmp
fcoml
fstl
pop
arpl
out
mov
rolb
cwtl
out
aaa
mov
testb
xchg
cwtl
cmp
fcmovnb
or
ss
inc
dec
mov
lods
sub
adc
jmp
pop
sub
in
ds
data16
mov
imul
es
and
insl
or
out
xor
int3
stos
xor
stos
sbb
fcomps
cmc
dec
test
and
add
or
lcall
sbbl
sbb
sbb
pop
sbb
das
sub
cltd
js
pushf
aam
popa
fstl
mov
std
adc
mov
lods
orb
mov
arpl
sarb
mov
shl
xor
pop
nop
xor
jbe
outsb
imul
test
iret
shrl
jo
ljmp
mov
jecxz
addb
fbld
push
and
outsl
loope
mov
scas
in
mov
dec
cmpsl
out
pop
ljmp
mov
arpl
mov
jle
sub
cmp
xorps
mov
xor
mov
pop
or
jecxz
aam
movl
fdivrs
mov
cs
inc
clc
roll
cmp
add
sbb
and
dec
push
or
aas
or
jl,pt
jae
or
lds
popf
and
push
xchg
popf
lcall
daa
and
cmpsb
mov
jmp
push
jecxz
mov
mov
pop
jle
imul
icebp
mov
pop
mov
lds
mov
rorl
pushw
ds
xor
icebp
sbb
xchg
push
sbb
je
pop
mov
mov
in
adc
lods
cmp
lahf
lock
orl
mov
fmull
cmp
push
push
mov
jp
xor
cmp
jb
out
pop
push
adc
cmp
push
gs
fistpll
xor
fwait
in
dec
or
dec
mov
add
cmp
ja
or
jmp
mov
aas
mov
sbb
dec
inc
frstor
imul
jp
push
bound
das
insl
sbb
int3
stos
sbb
sub
mov
xchg
mov
adc
outsb
roll
out
rorb
lret
adc
and
inc
inc
pop
sbb
xor
cs
bound
pop
fists
sub
je
loopne
lock
aam
fisttpl
int
ds
es
inc
sbb
push
iret
aam
sbb
cli
mov
int3
xchg
mov
inc
mov
cmpsb
outsb
sub
mov
mov
stc
scas
xchg
jmp
lods
nop
js
dec
adc
fdivl
jg
add
xor
add
mov
fldcw
mov
sbb
iret
xchg
mov
in
sub
xchg
ret
add
jb
int
dec
inc
daa
rolb
mov
xlat
lahf
push
popf
cmp
inc
add
adcb
das
adc
sbbb
ja
in
ljmp
das
minps
mov
nop
jmp
rorl
imul
cmp
sbb
jno
aam
insl
clc
stc
daa
sub
addl
insb
and
adc
aad
aas
out
cmc
icebp
ss
mov
jnp
add
insb
jp
lock
or
pop
fstl
nop
pusha
ret
pop
adc
sub
cli
js
jmp
sub
pop
cwtl
adc
js
lock
adc
jo
dec
push
xor
cmpsb
push
out
xchg
adc
in
pop
mov
shl
or
xchg
mov
lret
xor
adc
dec
pop
xchg
pop
dec
ror
mov
decb
sub
ret
pop
lods
mov
jns
add
imul
repnz
ss
xor
ret
or
adc
pop
pop
pop
popf
cmpsl
xchg
scas
mov
adc
xchg
stc
shlb
enter
xor
adc
sub
arpl
mov
clc
adc
je
sbb
cmpsl
lock
sbb
and
lret
fisttpll
inc
mov
jne
push
gs
mov
ss
imul
iret
mov
jecxz
popa
ljmp
clc
xor
aas
cmp
fsub
je
xor
jmp
add
andb
mov
cmp
out
xchg
mov
push
scas
cmp
dec
or
in
mov
out
mov
jmp
cld
or
pop
loop
bound
ja
fwait
dec
mov
adc
lock
test
inc
andb
push
lea
cmpsb
shrl
shlb
mov
fcmovne
inc
lea
jae
rolb
rcll
sbb
add
addr16
imul
push
sbb
fsubr
mov
dec
and
in
mov
cmpl
lahf
or
push
movsb
enter
and
inc
mov
xchg
mov
fidivl
mov
dec
push
hlt
mov
js
adc
pop
inc
adc
ss
daa
and
jmp
xchg
imul
xchg
mov
dec
adc
std
data16
mov
jo
cmpsl
adc
sbb
adcl
mov
xor
sbb
aas
iret
scas
and
dec
add
mov
inc
mov
aam
sbb
frstor
aas
and
dec
dec
movsl
and
iret
xchg
cmpb
sub
lahf
fisttps
outsb
das
pop
sub
movsl
add
inc
jl
outsb
mov
imul
std
push
ret
loope
cmp
cld
shrl
add
bound
insl
cmpb
add
lods
or
add
cmpsb
shlb
daa
daa
int
dec
add
sbb
jp
add
jne
or
bound
xor
outsb
mov
fstpl
test
dec
push
insl
xchg
cltd
mov
inc
mov
mov
fmuls
mov
roll
icebp
sub
and
addl
sbb
sbb
push
xlat
shll
shrl
push
dec
mov
xor
xor
or
sbb
sbb
jae
enter
xor
stc
inc
lret
loopne
adc
daa
cld
andl
mov
dec
push
aaa
cmp
or
stc
xchg
adc
pusha
fnstcw
jmp
xor
adc
sbb
outsl
enter
cli
pop
jbe
push
div
mov
lock
scas
fstl
fs
sbb
add
dec
add
addr16
dec
push
call
cld
adc
add
push
jmp
subb
dec
test
xchg
and
inc
xor
push
adc
dec
shll
cmp
dec
int3
adc
push
xchg
push
call
adc
cs
aam
jbe
std
lods
fs
jns
es
popa
inc
push
inc
mov
mov
pop
fisttps
push
clc
out
add
arpl
dec
scas
call
adc
jno
mov
aas
inc
lds
fs
in
xchg
and
add
inc
in
and
leave
add
jmp
add
clc
mov
daa
hlt
fistpll
in
std
cld
call
and
lret
add
xchg
jecxz
loop
sti
dec
repz
movsl
mov
inc
adc
sbb
mov
mov
mov
fisubrl
adcb
xor
inc
lock
hlt
or
iret
mov
inc
pop
mov
pop
cs
outsl
jae
outsb
mov
inc
sarb
pop
cmpsl
inc
icebp
lahf
jo
adc
push
add
neg
sbb
pop
icebp
mov
mov
adc
clc
push
cld
fistpll
inc
sbb
or
outsl
push
dec
jle
push
xlat
fistpll
loopne
jno
addr16
neg
jmp
orb
imul
and
dec
aaa
or
rorl
test
pushf
fimull
and
jmp
mov
xor
sbb
ret
pop
xor
cs
sbb
push
add
lock
xor
pop
dec
js
adc
addr16
jmp
adc
push
dec
daa
in
push
dec
xor
dec
daa
sbb
adc
push
std
mov
stc
push
adc
sbb
inc
jmp
test
outsl
dec
jo
outsl
add
cmp
ss
jbe
push
insl
mov
and
aam
outsb
adc
push
push
cld
bound
sub
inc
shlb
inc
mov
fimuls
dec
je
bound
outsb
call
cli
xlat
dec
push
push
sahf
jge
push
add
cmp
push
int
mov
or
nop
mov
and
outsb
notl
orl
push
jns
mov
cld
sbb
mov
add
jmp
jo
jne
loop
dec
inc
xor
dec
xchg
and
dec
ss
xor
mov
add
imul
insl
jg
cmpsl
add
outsl
dec
inc
bound
fisttpll
call
shr
add
inc
aam
jmp
xor
or
scas
push
xor
fs
inc
les
in
sbb
and
mov
inc
xchg
scas
push
sub
dec
not
add
sub
or
fists
testl
bound
clc
das
push
mov
data16
rcrb
outsb
stos
bound
decb
not
push
not
add
push
aad
mov
sbb
rolb
pop
cli
mov
lods
dec
pop
dec
inc
ds
pop
loop
jmp
inc
add
cmp
or
push
jo
out
xor
xchg
outsl
dec
es
and
inc
fbld
mov
mov
cmp
ss
inc
outsl
inc
fdivrs
data16
ljmp
loope
gs
pop
aaa
push
inc
add
xchg
and
mov
jle
insb
in
subl
ja
mov
in
fildl
sub
xor
arpl
insl
jo
jb
push
xor
inc
cld
test
sub
jb
dec
sub
mov
push
adc
dec
sub
pop
in
test
inc
jmp
pushl
sub
cmc
cmp
xchg
and
dec
add
lock
xor
ret
dec
subb
int3
mov
cld
notb
sbb
inc
aad
dec
inc
push
outsl
mov
arpl
push
adc
rclb
fisttpl
add
sbb
push
incb
mov
out
cmp
cld
out
mov
sbb
inc
lcall
sub
lret
push
out
pop
add
jo
dec
push
adc
out
inc
call
push
test
lahf
inc
lock
loope
gs
jecxz
movhps
insl
ss
js
sbb
in
outsb
push
imul
xor
adc
das
imull
insb
jo
inc
mov
fstpl
scas
xor
int
push
mov
push
dec
js
ja
in
mov
lods
jb
cmovno
pop
jne
or
popa
jae
inc
push
add
aas
push
push
popa
and
jecxz
mov
jle
inc
imul
xor
clc
xor
lahf
sbbb
push
gs
push
addr16
icebp
or
push
jbe
inc
scas
jb
push
inc
es
mov
add
and
dec
inc
cmp
lds
xchg
dec
mov
sti
and
inc
callw
das
dec
dec
imul
imul
pop
push
jecxz
add
xchg
dec
clc
push
mov
add
inc
xor
insl
jnp
xor
mov
shrb
dec
jno
mov
add
cmp
int3
cmp
lock
in
sbb
stos
and
jge
pop
xor
int
sub
int3
ja
ja
xchg
mov
rcrb
daa
insl
adc
fsts
test
push
mov
jg
jmp
push
sbb
push
iret
xor
je
dec
outsl
and
jo
cmpb
icebp
add
pushf
or
mov
pop
inc
jmp
fdivs
insl
lock
or
fld
scas
dec
inc
dec
rcll
lret
loopne
mov
dec
cmpsl
ja
push
jmp
and
and
gs
in
add
movsb
cmpsl
jae
jo
call
cmpsb
adc
aaa
call
fcom
xor
fcompl
adc
add
fidivs
imul
loopne
mov
jge
imul
mov
std
mov
cmp
pop
incl
shrb
dec
dec
push
outsb
push
scas
test
scas
ja
cld
rcll
movsb
cmp
movsl
xor
sbb
push
mov
mov
inc
imul
outsl
popf
jl
cmp
cmc
dec
mov
sub
push
mov
movsb
dec
mov
movb
je
neg
test
ret
jo
addl
ss
pop
call
xorb
mov
mov
loopne
mov
pop
sbb
or
xor
cmpsb
fs
out
pop
and
aad
xor
ret
lret
sub
lock
jns
lds
cmp
adcb
cltd
mov
jmp
jbe
cld
popa
dec
jno
dec
addr16
sbb
adc
pop
jmp
jns
dec
add
mov
js
and
push
xchg
jb
pop
mov
jb
or
push
jae
stc
sbb
push
sbb
push
sub
orb
loopne
push
sar
mov
andl
cmpsb
scas
mov
fsubs
cld
cmpl
sahf
insl
mov
daa
jmp
push
dec
adc
adc
add
pop
or
imul
gs
xor
cs
lock
add
mov
mov
mov
and
add
and
shll
xchg
push
mov
jne
popa
lea
jle
das
lock
cltd
inc
mov
mov
add
aaa
sub
mov
mov
loop
or
push
push
dec
movl
push
sub
pop
adc
and
pop
cmp
xchg
nop
or
js
loopne
imul
test
jmp
sbb
push
jb
add
jo
sarb
and
jo
add
loop
mov
fidivrl
fwait
shll
lds
je
push
mov
in
dec
pop
fistpll
mov
outsl
psadbw
mov
mov
pop
adc
and
pop
test
mov
mov
pop
or
xchg
lods
aaa
outsl
cmpsb
lods
mov
outsb
add
hlt
sub
setg
cli
dec
addr16
out
insl
daa
inc
jl
and
flds
cli
enter
add
push
fcoms
js
shl
div
sarb
push
push
je
mov
mov
fadds
push
adc
fcmovne
mov
adc
imul
scas
mov
push
fimuls
mov
loope
test
mov
ljmp
mov
ja
sub
call
lock
filds
lahf
test
sub
pop
adc
pusha
ja
inc
lds
hlt
or
xor
inc
movaps
addr16
inc
inc
mov
je
add
or
push
push
imull
sub
fwait
lods
mov
and
pop
mov
cmp
push
jbe
fld
xor
inc
dec
ret
pop
mov
dec
dec
mov
sbb
mov
shlb
sub
dec
push
lock
inc
test
mov
cld
inc
jb
popf
mov
out
js
fidivl
add
mov
xor
les
xor
mov
mov
hlt
jno
fwait
mov
gs
xchg
push
inc
mov
leave
dec
dec
cmp
pop
cmpsb
leave
clc
dec
cmp
jcxz
lcall
jecxz
adc
and
sub
out
or
cs
stos
rolb
sub
cmp
in
pop
mov
enter
fistpl
lahf
pop
pop
inc
push
inc
push
dec
cltd
pop
jle
mov
cld
shlb
push
repnz
xchg
xchg
pop
jns
jp
lock
sti
out
call
push
sbb
dec
xorl
cmp
cwtl
push
mov
addb
fidivl
add
xchg
pusha
adc
call
mov
in
push
das
cld
xor
jge
nop
and
insb
jp
xor
sbb
sub
inc
push
das
cmp
fildl
xchg
mov
inc
cmpb
call
cmp
add
cmpsb
inc
fldcw
stos
cltd
das
lods
jmp
test
addr16
push
int3
fildll
orb
mov
mov
aaa
les
adc
jnp
mov
les
ror
adc
mov
jns
or
test
in
sub
outsl
sbb
shrb
sbb
mov
inc
je
mov
pushf
push
cmc
aam
adc
and
mov
sbb
or
aaa
xor
lahf
outsl
and
sub
mov
adc
xchg
jmp
push
pusha
or
test
xor
cmp
dec
nop
test
sti
and
jg
pushf
outsl
enter
mov
sbb
push
dec
jne
xlat
mov
push
aad
ror
sbb
xor
mov
popf
mov
orl
push
pop
push
mov
dec
push
or
je
callw
pop
dec
mov
insb
mov
pop
iret
jo
mov
mov
cs
sbb
add
or
shrb
out
stos
js
arpl
lock
ret
mov
rcrl
mov
cmp
adc
cs
ds
std
movl
fbld
and
add
sbb
cld
neg
pusha
bound
enter
and
inc
xor
push
pop
iret
adc
adc
and
xor
cwtl
pop
aas
les
or
jl
push
or
daa
sahf
into
popf
imull
inc
jecxz
mov
mov
imul
rolb
enter
es
enter
pop
dec
fists
adc
inc
jmp
jl
pushf
xchg
js
test
hlt
pop
mov
ljmp
adc
push
adc
add
int
adc
jmp
in
mov
mov
mov
jge
jnp
push
mov
pop
js
fidivl
push
rorl
xchg
mov
int
adc
pop
sub
push
cmp
inc
xchg
pop
fistl
sbb
imul
in
xchg
fidivrs
sbb
pushf
clc
lret
mov
pop
rorb
movsb
adc
mov
xlat
jbe
mov
out
loopne
roll
push
aad
arpl
testl
loope
pop
dec
pop
incl
jo
js
mov
adc
loope
cmp
pop
incb
rcll
test
inc
fdivr
sub
jmp
jo
xor
shrl
icebp
dec
inc
loope
std
pushf
mov
jecxz
push
mov
jb
push
push
mull
cld
sub
add
sbb
rclb
mov
push
add
adc
movsl
lods
mov
sbb
push
push
and
pop
push
nop
fdivrs
mov
jmp
cwtl
jno
repz
call
jae
nop
mov
and
out
clc
roll
and
lods
mov
cmp
addl
add
inc
xchg
andb
roll
or
sub
jmp
nop
pop
cwtl
fnstsw
xor
shll
mov
pop
pushf
aam
icebp
or
loope
leave
ss
pusha
dec
daa
mov
fisubrs
mov
imul
enter
int3
sbb
mov
mov
or
out
mov
xchg
sbb
mov
jmp
inc
and
lods
dec
rcll
adc
jnp
push
sub
loopne
insl
loope
or
lock
inc
pop
fisttpl
sub
push
stc
pop
sti
ffree
mov
orl
dec
shrl
in
xchg
inc
jbe
pusha
ret
cmc
sti
lcall
icebp
mov
mov
imul
mov
scas
aas
clc
xchg
mov
sub
lret
int
nop
rcpps
popf
pushf
jge
stc
and
mov
mov
hlt
pushl
mov
mov
sbb
rorb
in
inc
pop
xor
cli
xchg
mov
outsb
ret
jbe
fisttpl
jo
setbe
imul
mov
xchg
mov
les
lret
bound
cld
nop
lods
xlat
mov
out
mov
mov
ret
push
push
jecxz
out
lret
int
cld
mov
inc
pusha
xchg
mov
sub
mov
frstor
push
jb
aad
lea
aaa
jbe
mov
outsb
xor
stos
xorl
jb
or
out
outsl
divb
sub
das
mov
jge
in
aaa
subb
mov
xor
out
loop
mov
cs
nopl
frstor
inc
dec
sub
decb
sbb
add
push
mov
adc
mov
lret
in
add
xlat
push
push
fdivl
pop
jecxz
fcmovne
dec
sbb
arpl
cwtl
sbb
mov
lods
cmp
add
inc
inc
fstp
mov
sti
adc
cmp
mov
int3
aam
cmc
pop
xor
cmp
dec
out
jbe
mov
insl
jne
and
xor
push
push
dec
mov
pop
and
das
jb
add
adc
jae
or
in
rcrl
pop
scas
xor
or
js
sbb
xchg
adc
daa
sbb
pop
pushf
int
fs
icebp
push
out
lret
clc
xchg
shr
and
cmp
mov
sbb
add
mov
add
ljmp
hlt
mov
cltd
jecxz
pop
call
mov
xchg
icebp
pop
nop
fadd
adc
mov
je
enter
fwait
push
test
jnp
addb
stos
stos
pop
sub
inc
mov
fnsave
ret
inc
mov
addr16
adc
outsb
test
stc
cmp
lret
repnz
imul
cmp
cmp
jbe
nop
fcmovnb
and
jnp
sub
scas
mov
adc
testl
jnp
mov
sbb
movsb
dec
mov
int
mov
data16
mov
sbb
jo
jecxz
pop
jne
sub
lret
jecxz
subb
arpl
xor
gs
dec
mov
dec
leave
js
out
addl
add
jp
jo
add
and
hlt
sahf
cmp
mov
ret
cmpsl
push
sbb
and
xlat
pop
xchg
repz
pop
jne
xchg
fwait
adc
xor
popl
data16
jge
mov
outsl
jcxz
cmp
mov
cmpsl
jg
movq
jnp
sub
sub
rcrl
pusha
nop
add
jno
fsubrs
cmp
leave
and
sbb
imull
mov
cmpsb
mov
in
fbld
pop
lods
sti
clc
pushl
pop
sub
popl
test
fisubs
add
jnp
jmp
rcll
stos
popa
fldl2t
mov
nop
xor
call
mov
pop
dec
rol
je
or
mov
in
pavgw
mov
xchg
cld
shll
add
jge
jo
test
inc
xor
popa
add
push
pop
aas
add
leave
push
call
and
out
push
jle
mov
inc
and
jl
inc
push
jmp
and
mov
adc
ja
push
cmpsb
gs
ret
fildll
jae
imul
rorl
jo
mov
jmp
out
xlat
cmpsl
pop
dec
flds
mov
cmc
int
sub
pop
clc
test
push
adc
rcrl
inc
pop
dec
dec
add
mov
repnz
out
icebp
sub
es
sbb
add
jge
sahf
inc
aas
in
pop
out
aaa
das
mov
iret
mov
insb
rcl
or
xorl
inc
hlt
jne
sbbb
outsl
inc
xchg
popa
mov
sub
mov
mov
mov
sbb
rolb
jmp
or
xor
les
loope
jbe
mov
fs
sahf
lcall
enter
sub
jae
mov
test
fidivl
mov
add
mov
inc
loopne
or
push
cmp
stos
pushf
dec
push
mov
mov
ja
xchg
add
mov
loop
cmp
mov
shl
push
lcall
xchg
pop
xchg
cld
adc
pop
rol
lret
sti
push
rorl
sahf
sbb
dec
dec
mov
mov
cmp
sub
test
arpl
out
out
adc
or
sahf
jp
lahf
cld
mov
ret
pop
mov
and
fstp
sarb
icebp
xchg
fnstsw
add
mov
pop
popf
dec
push
add
and
in
push
repz
xchg
test
add
fiadds
nop
movsb
mov
sbb
in
pop
dec
test
fistps
test
and
shll
dec
ss
adc
scas
sahf
xchg
cmp
push
fs
movsl
test
outsb
dec
mov
push
inc
mov
negb
adc
stos
and
pop
inc
je
nop
imul
adc
dec
je
sahf
bnd
jp
ret
rcrl
and
lahf
in
sub
es
lods
test
pop
and
add
jmp
arpl
mov
mov
mov
lods
loop
imul
sub
sbbl
cmpsl
pushf
dec
insl
fisttps
ret
pop
push
cltd
loop
in
jmp
pop
pop
adc
sub
mov
or
xchg
inc
test
or
xchg
scas
adc
inc
movsl
inc
imul
add
mov
arpl
dec
adc
pop
push
jmp
add
jp
add
fdivs
inc
jg
icebp
add
in
in
xchg
ret
dec
cmp
mov
orl
and
into
cmpsl
stos
cmpsb
cwtl
jmp
ret
jge
rcr
add
ljmp
je
gs
arpl
les
jnp
ljmp
cmp
mov
cmc
dec
add
xchg
cmp
xor
inc
jne
addr16
inc
in
push
lcall
mov
jnp
cmp
dec
sbb
loope
lret
xorb
push
lret
xchg
cmp
jmp
mov
adc
xor
inc
jb
jge
movsb
mov
push
mov
notl
mov
hlt
lock
adc
sti
daa
fildll
sub
sbb
sbb
pop
adc
iret
les
cltd
sbb
dec
lds
test
add
adc
loope
mov
fcomps
pop
push
sub
sbb
dec
push
loope
ss
pop
lods
mov
popa
pop
inc
jo
stos
xchg
jae
andl
dec
clc
jmp
push
xchg
and
sub
push
cld
xor
pop
mov
push
shrl
mov
shld
jnp
dec
pop
popa
enter
clc
fidivl
mov
test
or
int3
xor
add
cmp
lahf
in
stc
scas
js
or
call
ret
ret
add
pop
push
out
jg
lds
inc
je
sub
addb
ds
add
jecxz
hlt
jp
mov
xchg
mov
mov
ss
les
and
pop
inc
adc
out
jbe
ds
cmp
mov
enter
mov
movsb
inc
outsb
pop
dec
mov
inc
inc
movl
xorl
hlt
mov
pop
mov
mov
call
dec
leave
fists
fsub
std
cmp
test
adc
and
mov
pop
mov
cs
cwtl
cmc
mov
mov
mov
imul
push
popf
fwait
inc
pop
nop
or
cmp
xchg
xor
sti
pop
sub
pop
sbb
cmp
adc
push
pop
jge
push
add
cmp
mov
dec
das
add
sub
sbb
aad
sbb
mov
scas
js
aas
fwait
cmp
sbb
push
mov
arpl
adc
push
arpl
inc
loop
aam
add
test
sbb
inc
cwtl
or
cwtl
cmc
mov
or
mov
add
hlt
sub
stos
mov
lock
data16
inc
xor
in
inc
jg
aas
stos
pop
inc
mov
inc
push
xchg
ds
shll
mov
xlat
or
push
movsl
sbb
jl
icebp
jle
pop
pop
int3
push
sub
ror
cld
xchg
loopne
sub
mov
cld
adc
call
popa
mov
pop
popf
pop
pop
nop
negl
scas
add
cmp
push
mov
jl
cltd
data16
fcmove
cli
push
rolb
push
push
filds
xor
xor
aad
push
jbe
cwtl
movsb
or
xor
sbb
mov
out
fldl
mov
aam
cli
xor
sbb
dec
cltd
dec
cmpsl
jbe
cli
mov
adc
cmp
mov
lahf
ljmp
jecxz
fadd
mov
push
cmp
and
in
ja
ljmp
ds
outsb
push
lahf
jecxz,pt
pushf
out
mov
rclb
stc
push
xor
orl
dec
push
lret
xchg
lods
xchg
mov
icebp
xor
mov
push
orl
cld
subl
mov
lds
addr16
jmp
test
clc
popf
jmp
push
sbb
inc
pop
outsb
outsl
mov
add
sbb
imul
std
ret
pop
sbbb
das
push
and
add
fidivrl
jp
icebp
or
ret
into
aam
cmp
sub
add
sub
clc
jmp
sub
mov
lock
or
arpl
mov
insb
mov
pop
jg
mov
inc
ret
nop
and
mov
pusha
and
sub
jae
fcoms
pop
and
pop
cmp
mov
les
int
pushf
stc
movsb
insl
inc
dec
and
fstl
lret
add
mov
pop
xchg
xlat
into
xor
fadds
jmp
lea
push
stos
mov
or
push
outsl
js
fadds
sbb
in
push
cmp
imull
dec
outsb
xor
sub
xor
jns
scas
xor
es
imul
pop
push
lret
inc
push
jl
pop
fldenv
mov
mov
outsl
scas
adc
sbb
sti
fisubrs
in
push
call
cmpsl
push
sub
add
push
inc
std
inc
fiadds
int3
push
sbb
lock
sbb
lcall
int
xor
add
ljmp
stos
lcall
jnp
pop
mov
sbb
push
scas
sbb
push
outsl
mov
ljmp
jmp
sbb
adc
test
sub
ja
or
shr
loop
pop
stos
outsb
insl
jp
pop
mov
inc
ljmp
pop
sbb
test
mov
lds
mov
nop
fldt
or
inc
cli
ljmp
xor
xchg
or
inc
dec
sbb
cmp
mov
dec
adcl
ja
fnstenv
repnz
ret
push
fidivl
pop
inc
xchg
dec
xchg
and
mov
mov
or
jp
xor
decl
push
mov
add
fdivs
cmp
mov
dec
fidivrl
and
xchg
mov
aas
data16
xor
ret
pop
insl
mov
jbe,pn
xchg
popa
jmp
adcb
not
in
inc
and
and
mov
mov
fnstsw
mov
jecxz
addr16
mov
push
adc
addr16
test
and
xchg
arpl
fldt
sbb
dec
lock
sbb
push
loop
sbbl
pop
xchg
xchg
sahf
lcall
push
addb
insl
ret
add
or
dec
hlt
inc
shll
lret
les
rcl
push
xchg
cmc
sbb
pop
fsubl
lods
cmp
andb
and
aas
mov
loop
dec
dec
mov
and
pop
adc
xor
dec
in
enter
inc
ret
mov
fldcw
mov
into
stos
and
adc
or
xorb
lods
mov
and
jle
ljmp
imul
xlat
or
sbb
rol
or
ljmp
jbe
or
js
sbb
sar
pop
and
pop
sahf
in
jge
inc
movl
pop
dec
mov
sub
ret
or
inc
fdecstp
int3
sbb
sahf
call
pop
lods
movsl
pop
outsb
sbb
gs
pop
inc
mov
inc
test
ja
lods
daa
add
or
add
xor
mov
fcompl
add
mov
or
dec
xorb
jns
add
xchg
fistl
cmp
data16
jecxz
mov
push
std
push
in
adc
arpl
jmp
lret
pop
xchg
xchg
jp
leave
jnp
out
and
shll
les
or
mov
cmp
cld
xchg
add
and
xor
lock
lock
cmpsb
inc
lahf
add
popf
vpinsrw
adc
orl
test
ret
sub
shrl
add
testb
sub
or
movsl
jnp
pop
mov
inc
xor
js
fstpt
pop
fcoml
std
add
jl
mov
rclb
inc
in
jb
xor
js
mov
pop
push
imul
adc
sub
sub
outsl
repz
orl
push
cltd
stc
ljmp
push
mov
or
mov
popa
or
nop
mov
iret
mov
jbe
jmp
mov
or
shlb
mov
jmp
je
jecxz
jmp
adc
js
cmp
lahf
movsb
cmp
ret
jp
negl
push
pop
push
popa
pop
fwait
pop
mov
pusha
cli
clc
cmpsb
test
mov
test
pusha
divl
jbe
out
iret
xchg
je
jg
pop
insb
pop
insl
call
and
into
sbb
mov
inc
ret
jne
ja
jbe
out
les
sbb
and
xchg
loop
pop
sub
aas
inc
test
mov
or
mov
lret
shrl
pop
icebp
js
and
jg
jo
inc
xchg
test
cmp
js
loop
nop
sbb
mov
dec
mov
popl
rclb
negb
je
in
ret
mov
add
sub
pop
mov
adc
iret
rcrb
cwtl
dec
les
push
cmc
daa
add
shlb
and
or
stc
jno
insb
mov
jmp
xchg
mov
dec
push
push
test
andl
add
adc
inc
pop
adc
stos
mov
and
dec
js
andl
pop
cmp
sarb
lahf
shll
xor
pop
pop
sub
xor
addr16
jb
lret
jge
push
mov
cli
push
mov
ret
cmp
loop
rcl
adc
jge
dec
adc
sub
fcompl
cmpsb
push
inc
pop
scas
andl
mov
imul
loop
lds
dec
jo
aaa
insb
sti
pop
dec
or
jnp
mov
jno
adcl
mov
ljmp
pushf
mov
cmp
stos
pop
xor
fstpl
push
mov
mov
mov
and
cmp
push
jge
push
cmp
lds
xchg
cmp
push
mov
jecxz
adc
cs
pop
repz
xor
mov
aaa
insl
or
arpl
aad
push
xchg
subb
jmp
scas
push
ficoms
mov
movsl
mov
lahf
fistpll
dec
jg
stos
test
ja
ret
pop
xor
dec
jae
cli
arpl
dec
insb
add
adc
xchg
cmp
jl
leave
xchg
pusha
inc
xor
fisttpll
test
fwait
mov
dec
mov
push
fs
pop
dec
imul
js
or
dec
mov
aad
fidivrs
push
stos
outsb
cmp
xor
pop
popa
or
dec
iret
xchg
adc
cmp
daa
inc
ret
cld
in
add
sub
movb
inc
sub
fidivrs
or
decl
insl
add
lahf
gs
scas
xchg
xor
pop
nop
scas
in
leave
cmp
push
test
lret
inc
push
iret
mov
lret
or
or
pop
scas
pop
sbb
and
cmp
adc
mov
jge
ds
mov
jle
adcb
push
pusha
es
mov
or
clc
cli
testl
aas
int3
jp
insb
or
xlat
cltd
iret
mov
ds
mov
lret
je
inc
xorb
inc
aas
rclb
or
hlt
negl
or
dec
inc
cli
int3
pusha
xor
arpl
das
mov
rcll
sub
xchg
movsl
loope
adc
sbb
insl
mulb
mov
inc
arpl
out
shrl
sbb
jg
fidivrs
repnz
in
add
lcall
mov
pop
push
imul
push
adc
ss
sub
pop
pushf
in
je
lock
popf
insb
push
je
enter
pushf
xorb
jb
in
xchg
cmp
xor
lods
mov
pop
cmp
pop
adcb
fiaddl
into
xlat
pop
mov
lea
fadds
or
es
mov
pop
mov
sbbb
mov
inc
into
popf
test
inc
push
mov
mov
or
push
outsb
loope
cmp
and
mov
push
ret
xor
cmp
aad
jge,pn
pop
or
push
xor
adc
ljmp
sbb
cmc
test
dec
jno
mov
js
fstpt
xor
sbb
jl
push
mov
cmc
inc
call
add
or
add
sub
pop
repnz
xchg
dec
jge
mov
adc
sbb
fisttpl
pop
or
mov
imul
cld
fcmovnb
ret
icebp
sub
cmp
addb
call
or
sub
stos
xor
pop
ficomps
cmp
in
cmp
push
aas
cmc
int3
push
inc
out
add
add
jne
cwtl
adc
rolb
imul
cld
xor
mov
adc
cmpsb
cmc
add
shll
mov
mov
or
clc
add
mov
mov
pusha
or
xlat
and
call
aaa
into
sub
jle
or
out
pop
mov
fsubrl
xchg
fs
jp
fnstsw
mov
iret
inc
inc
lea
ds
xchg
adc
fisttpl
xor
pop
jns
dec
add
and
mov
mov
in
inc
fwait
ja
dec
jmp
clc
and
or
inc
aaa
and
or
push
mov
fildl
in
jne
jbe
pop
fcomip
mov
fildll
mov
lcall
fcoms
cs
sub
out
pop
popa
sub
cmpsb
jmp
dec
mov
pop
jge
xorl
mov
enterw
lock
mov
dec
sbb
sbb
jns
inc
ss
icebp
jmp
push
mov
std
gs
imul
cld
add
aas
push
adc
lcall
ja
les
mov
lods
loopne
out
sbb
in
scas
sbb
call
jmp
int
int3
mov
jno
cltd
xor
inc
psubq
xor
ds
sbb
jae
roll
or
andb
inc
les
cmp
repz
mov
inc
mov
je
mov
and
outsb
movsb
pop
lcall
shrb
in
mov
scas
add
test
push
clc
or
inc
sbb
das
stos
fistl
subb
aad
add
push
test
sub
dec
mov
or
and
pusha
cmp
insb
lret
ss
lods
pop
adc
sub
aam
sub
test
mov
cli
lcall
cmp
and
dec
mov
push
and
test
call
mov
mov
xor
lea
pop
lret
je
and
jns
punpcklwd
lahf
cmp
cmp
mov
jge
nop
adc
in
lret
mov
inc
out
mov
repnz
and
mov
or
shlb
popa
int3
dec
lds
xor
add
jecxz
mov
inc
call
lret
je
xlat
jne
rcrb
jle
sbb
sub
fs
xlat
add
aaa
sbb
mov
inc
das
xor
mov
daa
test
cmp
xorb
inc
ret
repz
mov
pop
dec
adc
imul
notl
xor
cmp
or
jns
test
or
and
push
inc
push
inc
or
ret
arpl
adc
add
test
jp
ljmp
jge
jmp
repnz
ljmp
scas
mov
pop
and
mov
mov
push
sub
sub
ss
in
sub
or
jne
inc
jno
adc
lds
cmpsb
sarb
sbb
or
mov
push
into
addb
adc
call
loope
cmpsb
lock
mov
mov
sbb
mov
mov
push
inc
shlb
xchg
mov
fsub
jmp
mov
jmp
xchg
pusha
pop
ds
je
imul
mov
and
push
stos
or
jbe
testl
jae
mov
mov
or
popa
or
sub
arpl
xchg
data16
clc
subb
cmp
lds
insb
cmp
sub
dec
pop
mov
in
add
dec
or
push
popl
inc
daa
pop
mov
or
test
loope
sbbb
add
lahf
push
inc
es
fwait
cmpsb
inc
inc
sub
jl
sbb
jge
dec
nop
fcomp
dec
dec
cmp
test
stc
or
sbb
add
scas
and
jae
iret
add
fsubs
scas
jge
mov
dec
je
fcompl
fldcw
testb
sbb
jge
xor
movsb
dec
insb
mov
dec
adc
ljmp
daa
aas
imul
inc
and
mov
and
outsl
cmp
les
mov
xchg
fbstp
les
ja
add
cld
loop
xchg
cmp
push
imul
xchg
adc
sbb
out
call
cmpsb
nop
jnp
test
incl
mov
push
inc
loope
push
je
int
cmp
insb
cmp
pop
and
addr16
fld
int3
mov
pop
movd
xor
push
xor
rorl
push
fdivrl
inc
jns
pop
push
dec
decl
mov
mov
arpl
jge
cmp
int
dec
jl
jno
out
xor
scas
lcall
cmpsl
push
stos
add
push
std
lret
stos
loopne
mov
sbb
or
mov
icebp
inc
lcall
cmp
jge
cmp
add
loope
movsl
ret
dec
xor
bound
lock
pusha
daa
scas
lds
lea
cli
shlb
mov
push
dec
loope
jp
das
add
xchg
pop
pop
mov
jg
xor
jae
test
cmp
mov
shrl
adc
mov
or
cli
pop
lret
sbb
xchg
and
or
stos
loope
sbb
jo
xorb
jno
imul
pop
mov
pop
mov
out
push
jne
push
xchg
and
int3
outsl
jl
or
rcll
aad
fs
cli
icebp
lods
dec
xor
fcomps
daa
mov
lods
pop
icebp
add
insb
mov
mov
xchg
out
jne
mov
and
out
jmp
add
mov
loope
fists
mov
xchg
mov
mov
test
lods
iret
test
mov
ret
pop
jbe
push
into
and
insl
insl
sar
add
mov
mov
loope
fcom
fisubrl
xchg
mov
hlt
aas
js
jno
xor
inc
repnz
sbb
jne
jl
sbb
int3
xor
sbb
rorl
clc
ss
pushf
push
es
iret
mov
call
fadds
or
add
inc
add
jmp
lds
mov
loope
push
fdiv
and
adc
cmp
cmc
push
and
test
mov
inc
sub
inc
in
push
pop
jb
cwtl
cli
xor
rorl
decl
xor
pop
dec
scas
insb
pusha
jecxz
mov
dec
ret
pop
ror
lret
lock
jmp
xchg
movl
enter
xorl
int3
lods
lcall
push
rcrb
and
and
push
outsb
add
sub
sub
sub
mov
dec
and
and
mov
cmp
lods
fcomp
leave
xor
iret
mov
sbb
sti
in
lcall
pop
aam
pop
jne
ret
inc
sahf
js
push
rorb
mov
int
jmp
dec
jle
xor
xor
rcr
loop
sub
leave
xchg
in
outsl
stc
outsb
jg
push
lret
mov
dec
mov
mov
insl
inc
adc
or
test
mov
mov
sub
cmpsb
dec
pop
jb
arpl
pop
mov
repz
dec
loop
xor
dec
cmpsl
mov
sarb
push
sar
jmp
imul
adc
xchg
ficoml
roll
aas
out
mov
mov
add
xchg
jnp
inc
push
orb
sbb
ds
shlb
sahf
insb
aas
jg
daa
popf
sbb
dec
popa
add
dec
and
ljmp
jb
mov
cs
iret
inc
sub
ficomps
bound
fistps
sbb
sbb
pop
imul
jge
mov
outsl
mov
xchg
xchg
xlat
adc
shll
pop
inc
mov
movsl
and
test
test
addr16
imull
subl
dec
or
bound
cmc
mov
xor
dec
push
lcall
es
das
clc
push
xorl
loopne
incb
outsb
add
mov
sahf
jnp
inc
lret
jb
cmpsb
sbb
lods
dec
mov
pop
jecxz
dec
sbb
mov
lds
sti
mov
lds
xor
pop
dec
pushf
mov
or
mov
insb
jge
jl
dec
testb
xor
cld
sbb
xor
dec
mov
ss
push
push
loopne
xchg
jmp
xor
icebp
dec
inc
xchg
or
mov
cmpsb
or
add
aas
test
data16
iret
or
jp
sub
outsb
xor
cs
jns
and
pop
xchg
sbb
and
aaa
xchg
shrb
loope
testb
mov
repnz
lcall
push
rcl
xchg
and
adc
sub
aad
adc
dec
cmp
mov
loopne
lea
lahf
outsl
outsb
fisttpll
push
loop
sub
jno
shrl
test
xor
push
jne
or
mov
xchg
sub
out
jl
dec
nop
loope
test
cld
enter
mov
mov
sub
push
add
jb
sub
inc
mov
xor
ja
fcompl
pop
cld
cli
and
sbb
add
sbb
add
ret
pop
cwtl
pop
lock
dec
cmpsb
popf
subb
fidivl
jno
je
or
test
xor
mov
mov
mov
aas
mov
inc
sbb
cmp
and
movsb
pop
mov
pop
leave
mov
insl
arpl
loop
mov
mov
pop
sub
fcoms
lret
mov
mov
or
mov
xchg
fsubs
mov
call
ja
lret
mov
sub
pop
jp
mov
mov
inc
push
push
pop
es
mov
into
and
cmp
aad
mov
xor
jns
aam
inc
jb
jno
mov
jp
sti
inc
mov
movsb
mov
inc
pop
xchg
in
xor
and
cltd
shl
jae
cmc
pop
mov
and
xchg
mov
cmp
inc
loopne
mov
sbb
dec
test
outsl
dec
in
lahf
push
das
insb
cli
cmc
adc
testb
pop
mov
imul
adc
and
push
fstl
push
mov
insl
cmp
adc
movsb
popf
cwtl
repz
cmpsl
xlat
std
xor
sarl
adc
add
iret
or
cmpsb
mov
pushf
aad
jbe
push
inc
test
cmp
mov
lea
jne
js
xor
or
lea
ret
ds
test
pop
mov
sub
inc
cmp
xchg
arpl
add
push
aam
adc
xor
sarb
xchg
push
xchg
jns
movsb
push
jbe
icebp
scas
ret
fnsave
add
js
mov
and
sbb
shlb
lock
push
xchg
sbb
daa
mov
rorb
mov
push
add
sbb
mov
dec
or
pop
stos
cli
and
ret
pop
inc
ficoml
out
push
xchg
or
popa
xchg
push
testl
cmp
push
or
dec
stc
dec
out
sti
in
out
cmp
mov
jecxz
jb
in
div
aad
mov
dec
addr16
pop
pop
js
mov
je
out
inc
jnp
and
push
xchg
inc
in
fisttpll
xchg
mov
clc
push
adc
lods
loope
mov
scas
push
cmp
jmp
cmp
pop
test
push
movsl
mov
push
sub
fcmovnbe
dec
sub
test
mov
clc
imul
sbb
add
scas
popa
ret
shl
mov
add
dec
adc
add
jg
popf
pop
add
hlt
pop
clc
and
mov
movsl
cltd
inc
or
inc
sub
lods
lret
fimull
push
and
push
lret
sbb
mov
shlb
adc
xchg
sti
stc
push
pop
mov
xor
imul
sub
jne
dec
outsb
jne
cmc
addr16
enter
int
mov
sti
xchg
mov
arpl
fdivp
mov
and
movsb
cmp
pushf
scas
inc
or
lods
mov
mov
push
decb
xor
push
iret
xlat
xor
mov
sub
inc
mov
jmp
sbb
push
push
inc
jecxz
or
dec
scas
stos
mov
leave
mov
push
inc
pushf
les
push
dec
mov
ss
cmp
dec
popf
sbb
pop
xchg
fidivl
xchg
scas
aad
sbb
push
pop
sarb
cmpsb
push
cmp
mov
mov
mov
push
xor
in
and
insl
or
outsb
inc
out
sub
testb
and
mov
jbe
xchg
sbb
adc
mov
mov
mov
in
mov
movd
pop
cmpsl
in
mov
push
mov
mov
jg
enter
leave
adc
mov
test
and
fdivrs
popf
or
out
pop
mov
push
push
sub
xor
pop
rcrb
nop
enter
sbb
mov
fneni(8087
loope
sbb
mov
inc
rcl
xchg
fstl
enter
pop
fsubrs
pop
pop
int
cmp
mulb
sarl
jle
js
mov
inc
test
icebp
mov
aad
or
sub
cmp
ss
test
jnp
or
sub
push
clc
add
sbb
test
lock
lods
xchg
clc
shlb
ljmp
xor
xchg
call
lea
push
sbb
gs
push
ret
mov
pop
adc
movsl
sbb
ficoms
fsubs
mull
pop
mov
jg
out
outsl
loope
xor
les
aaa
mov
dec
xchg
xchg
pop
or
xor
je
mov
insl
inc
cmp
out
xor
shll
aas
std
insl
rcll
xadd
dec
inc
and
fisttpl
or
ss
pop
nop
fldt
mov
mov
test
mov
out
js
rol
pop
pop
mov
lods
jge
cmc
inc
or
inc
inc
mov
jmp
sarb
dec
loope
inc
pop
sbb
adc
xchg
cmp
push
xor
jg
mov
data16
stos
dec
inc
push
andb
adcl
and
xchg
push
in
push
loopne
enter
lret
mov
push
xor
mov
mov
pop
xchg
inc
add
orb
bnd
roll
arpl
and
and
cmp
sbb
jns
cmp
inc
movsb
dec
add
mov
pop
jge
sar
jno
jle
xor
dec
loopne
sbb
mov
je
dec
daa
xchg
jb
pop
pop
dec
push
cmpsl
into
xchg
das
test
jns
lock
je
inc
mov
pushf
sub
jge
daa
jne
fistpll
dec
adc
push
mov
out
sbb
add
movsb
sbb
aaa
sahf
sbb
test
pop
add
lock
xor
push
mov
adc
xor
pop
out
dec
add
icebp
push
xchg
fwait
test
mov
imul
push
xlat
dec
dec
mov
inc
mov
xchg
add
xchg
insb
lods
mov
mov
and
mov
lods
mov
hlt
jno
add
testb
mov
and
in
sbb
insl
into
pop
clc
pop
jno
inc
out
repnz
mov
in
adc
popa
inc
xchg
cmc
nop
sbb
mov
mov
mov
xor
pmullw
or
add
xor
push
and
and
mov
dec
int3
aad
cmpl
adc
lcall
sbb
sub
pusha
je
pop
bound
adc
or
and
add
call
cmp
dec
xchg
movsb
mov
xchg
xor
mov
fmul
jg
pop
fildl
lea
pop
je
cmpb
lea
mov
dec
les
jbe
adc
mov
mov
je
inc
jnp
push
or
ret
add
or
xchg
test
inc
pop
add
mov
test
out
and
sbb
sub
cmpsb
cmc
sub
or
cli
pop
xorl
insb
mov
lods
push
or
das
fsubr
add
mov
fwait
aaa
inc
out
addl
jl
mov
cmp
adc
pop
jae
into
insb
sbb
ss
dec
xor
push
adc
or
lcall
inc
fdivr
fwait
adc
movsb
xchg
movsb
cmp
pop
adc
ja
outsb
test
repnz
shld
ljmp
mov
fmull
add
dec
in
pop
pop
lret
das
pusha
cmp
mov
into
into
sub
loopne
push
out
fs
add
add
lea
push
test
mov
inc
add
movzbl
cmp
sbb
stos
adc
add
mov
outsb
cli
daa
cltd
stos
aaa
jne
sbb
rol
mov
adc
jg
js
pop
and
mov
push
in
std
lock
lcall
lea
and
jmp
cli
inc
push
jno
andl
cld
cmpl
push
pop
in
mov
mov
stos
insb
cwtl
icebp
push
adc
mov
or
dec
jne
dec
or
pop
push
xchg
lods
js
inc
push
shll
test
loopne
aaa
mov
push
push
das
jne
mov
push
ja
cld
add
inc
je
jecxz
sub
test
aas
sbb
cmp
mov
int3
insb
mov
sbb
mov
shlb
cmp
mov
sbb
pop
jge
fs
dec
or
xor
add
mov
dec
lock
push
iret
jb
loop
xor
movsb
ds
lock
scas
roll
in
popa
push
scas
std
or
push
pushf
mov
jp
flds
mov
sub
lea
roll
add
jns
shrl
mov
roll
mov
insb
and
inc
jle
sarl
push
mov
inc
pop
mov
push
les
jl
lea
aad
add
ficomps
jb
movsl
stos
push
int
mov
clc
mulb
aas
enter
icebp
mov
dec
mov
sahf
ret
jo
inc
adc
jge
mov
ret
jg
push
mov
and
and
add
adc
sar
xchg
lcallw
sbb
add
mov
sbb
mov
cmp
test
shr
sahf
test
aaa
fadds
mov
xor
add
fdivrp
outsl
sub
dec
inc
mov
cmpsb
jg
lcall
inc
adc
and
mov
std
sbb
mov
sarl
std
jl
ret
push
cld
add
int
andl
pop
inc
xchg
jo
mov
mov
pop
popf
pop
push
gs
dec
pop
lock
adc
add
ja
sbb
jae
inc
not
bnd
sbb
lods
sarb
mov
addr16
adc
xor
push
addr16
jge
and
add
outsl
jo
mov
add
push
jge
pop
sub
push
pop
add
movsb
add
adc
jecxz
mov
test
xchg
fcoml
ret
jne
nop
mov
add
int
pusha
test
xrelease
inc
mov
xchg
xor
std
adcl
imul
mov
jp
xchg
pop
cmp
pop
adc
cli
mov
inc
loopne
arpl
xchg
and
push
xchg
les
insb
jecxz
and
popa
mov
sarb
rorl
xorb
adc
stos
mov
push
mov
xabort
mov
fs
inc
shlb
icebp
adc
aas
stos
aas
outsb
icebp
adc
orl
outsb
leave
adc
xchg
inc
dec
aam
popf
sub
or
cld
inc
cmpl
pop
inc
mov
pop
cmc
and
xchg
mov
cmp
pop
popl
mov
xchg
add
push
insb
subl
dec
ret
enter
jbe
xorl
movl
jge
mov
sar
orb
adc
lret
mov
xlat
icebp
dec
sarb
mov
loop
pop
orl
divb
push
adc
pusha
push
cmp
adc
scas
test
xchg
xchg
lahf
movsb
add
sub
and
and
mov
arpl
inc
pushf
push
xchg
rclb
loope
mov
das
cmpsl
mov
nop
mov
outsb
and
mov
stc
jle
pusha
arpl
repnz
divl
mov
cmpsb
push
and
icebp
maxps
outsl
mov
push
orl
inc
mov
lret
cli
adc
sbb
mov
or
mov
mov
add
mov
jne
adc
pusha
mov
and
imulb
fmuls
icebp
inc
and
data16
jbe
std
aas
test
xor
or
mov
add
xchg
movsl
ret
push
test
fcoms
and
pushl
loope
setne
inc
adc
jecxz
inc
inc
xchg
pusha
stos
outsb
sbbb
xchg
mov
add
mov
shr
mov
aaa
cmc
add
push
mov
inc
or
xor
loope
jae
out
jb
mov
push
sbb
sbb
fwait
es
mov
push
jecxz
leave
repz
inc
and
xor
shrb
pop
fisttpl
cmp
push
jo
je
mov
test
mov
std
push
stc
adc
mov
ss
sub
xchg
xor
jp
lods
sub
cs
bound
fistps
test
and
shrl
aad
sbb
rcr
or
mov
mov
and
enter
js
enter
test
dec
sub
wbinvd
loopne
fldenv
scas
dec
adc
cmp
or
outsl
ja
jmp
sub
xor
jno
jecxz
cmp
mov
fcomps
push
xchg
adc
sub
aaa
push
insl
adc
loopne
cmpsl
dec
cwtl
adc
dec
jge
or
iret
adcl
xor
lods
mov
inc
std
pushf
je
out
ljmp
fdivl
bound
jb
sti
cmp
or
sub
pop
inc
mov
sub
imul
mov
inc
popf
and
test
es
pop
loop
mov
cmp
sub
inc
testb
fdivs
dec
pop
push
mov
xor
add
clc
or
shlb
fwait
loop
jne
add
inc
aam
aam
movsb
aam
in
sysenter
pusha
xor
and
shlb
push
in
popa
xor
push
cmp
push
xor
cmp
sbb
push
inc
xor
fsts
rcrb
xor
jne
outsb
sub
xorb
in
clc
repz
dec
das
inc
push
or
fldt
sti
mov
into
inc
stc
adc
sub
push
or
out
lods
inc
add
pop
add
xchg
push
xor
jmp
iret
into
repz
rcl
mov
add
jecxz
scas
nop
outsb
cmpsb
push
inc
pop
adc
jl
mov
out
mov
dec
addl
shrl
sbb
cmp
nop
les
pop
xchg
pop
repz
jle
xor
mov
pmullw
mov
mov
add
push
loop
add
test
mov
push
nop
and
stos
into
sub
idiv
sub
sbbb
adc
rclb
rolb
out
mov
mov
or
stos
cmp
out
mov
repnz
xor
mov
inc
in
gs
cli
sbb
sub
cli
subl
cmc
mov
adc
fwait
outsb
cwtl
cli
xchg
add
push
xor
fidivl
aas
mov
add
xchg
or
cmp
push
hlt
bound
jns
std
in
sub
adc
jnp
ret
mov
leave
and
mov
call
or
dec
sti
insb
shrl
fisttps
ja
clc
push
jg
sub
xor
adc
mov
in
fidivrs
ds
and
dec
je
xorb
pusha
mov
sbb
inc
adc
push
xorb
in
test
xchg
filds
iret
daa
cmc
push
in
outsl
pop
call
pop
pop
fs
adc
jle
xlat
mov
clc
pop
test
daa
push
adcl
fwait
sbb
push
mov
test
push
lcall
testl
adc
xchg
pushf
in
cli
push
mov
hlt
or
mov
or
ds
mov
retw
loope
sbb
in
ss
scas
movsl
movsl
dec
in
or
das
dec
sub
cmc
nop
stos
sbb
mov
xchg
mov
sbb
inc
ret
sub
jo
fcoms
mov
adcb
adc
sarl
jp
sbb
lahf
das
jle
inc
insl
pop
inc
icebp
lcall
xchg
xor
cmp
cmpsl
and
and
and
movsb
pop
fdivl
mov
cmp
or
std
cli
mov
and
pop
sti
test
adc
fcmovb
daa
jle
and
inc
dec
fdiv
outsl
flds
stos
and
je
and
test
dec
icebp
mov
and
push
push
push
pop
mov
push
lock
es
jae
fisubl
push
outsl
insb
fdivr
stos
xchg
fstps
pop
mov
test
je
pop
mov
sub
mov
pop
orl
and
aas
push
js
lock
and
inc
push
stos
insb
xchg
mov
test
mov
sub
sbbl
mull
or
adc
aad
hlt
adc
inc
push
pop
cmc
insl
mov
sbb
xor
jo
jmp
fcompl
adc
push
xchg
ret
push
clc
mulb
js
mov
ja
pop
ss
lods
mov
test
femms
icebp
xchg
leave
addr16
scas
mov
movl
int3
push
jg
inc
mov
or
ja
je
adc
mov
jb
dec
xchg
cmp
data16
insl
or
adcb
test
mov
repz
add
add
fisttpll
mov
cmp
test
sub
inc
insl
jns
mov
mov
add
loop
hlt
mov
ds
scas
cmp
outsb
jle
arpl
dec
repz
push
push
xchg
mov
dec
lds
pop
sbb
mov
hlt
flds
movsl
jp
pop
lret
jge
mov
out
stc
loopne
fcmovnbe
loop
ret
adc
cmp
icebp
movsl
or
ret
aam
sub
imul
jecxz
test
std
out
lds
insl
adc
sub
sub
jge
xor
cwtl
out
inc
je
hlt
mov
inc
insl
jmp
add
fwait
sbb
push
cwtl
cmp
mov
insl
mov
lds
lock
xor
stos
push
arpl
js
pop
mov
pop
cli
mov
jb
sbb
and
repz
pop
subb
xchg
aas
arpl
mov
and
adc
or
dec
fsub
nop
mov
idivb
push
push
addb
out
xchg
pop
jecxz
cmp
loopne
jge
into
jb
loopne
repz
ds
add
push
insl
mov
add
mov
xchg
lea
nop
mov
xor
and
and
xchg
adc
cmc
xlat
jecxz
inc
cmp
mov
or
add
push
ror
pusha
xor
xchg
loop
fs
push
xor
shl
loop
sub
mov
insl
cli
aad
push
mov
loop
xchg
xor
jecxz
test
mov
lahf
push
pop
add
jg
pop
js
xor
lret
sub
inc
xchg
test
xchg
sub
mov
mov
addr16
loop
call
in
cs
xchg
je
in
push
ljmp
jbe
cs
les
mov
jae
ret
cmp
test
mov
mov
popa
nop
mov
cmp
mov
push
in
ret
rcrl
fadds
cmp
les
sar
js
xchg
sub
jg
out
ud0
repz
shll
repnz
jge
and
and
or
or
test
dec
pop
movsb
mov
mov
fldt
hlt
lahf
cmp
pop
xchg
stc
fistpll
inc
test
jp
xor
mov
sahf
fmull
cmp
cmp
pop
pop
icebp
movsl
xchg
pop
ds
or
jne,pn
shlb
mov
mov
jno
rclb
int3
repnz
push
cmp
sbb
xor
jne
leave
lahf
add
cmp
cmp
xchg
aaa
cmp
fcomps
fidivrl
cwtl
lcall
dec
mov
mov
or
out
pop
ror
mov
dec
mov
repnz
outsb
movsl
sub
push
or
cmp
lods
push
pop
xchg
aad
icebp
cs
and
pop
jbe
into
adcb
jns
aas
xchg
pop
pop
faddl
jl
popf
cmp
push
pop
shll
jmp
push
rcll
jnp
stos
in
mov
insb
cmp
fdivl
ljmp
cmp
xlat
add
push
inc
clc
sbb
ja
add
cli
in
scas
ret
xchg
addl
inc
or
xlat
mov
setp
and
mov
sub
sbb
xor
inc
inc
dec
adc
stc
mulb
dec
add
fs
xchg
aas
adc
jo
inc
in
or
cmpxchg8b
leave
mov
outsb
xchg
inc
popf
cmpl
mov
pop
push
pop
clc
xlat
or
fucom
sahf
or
mov
in
jns
mov
ss
into
jo
addb
pushf
jbe
push
jl
xchg
xor
mov
lret
push
push
xchg
pushf
cmp
pop
dec
cmp
pushf
and
mov
aad
fwait
dec
icebp
inc
cmp
dec
aaa
jbe
jmp
je
popa
test
sub
aad
fs
adc
mov
and
jl
sub
mov
icebp
jl
fisttps
dec
jo
xor
sbb
pop
cmpsl
or
or
add
jl
repz
lea
add
out
pusha
cltd
mov
sub
fldcw
repnz
xor
insb
mov
cmpb
faddl
mov
inc
in
mov
lods
and
je
xchg
cmp
out
jp
sub
adc
sbb
ds
pop
push
nop
mov
lods
sub
dec
lahf
push
jg
push
cmp
jbe
add
xor
fimull
sub
xchg
or
push
dec
data16
fnstcw
jmp
or
movsl
jnp
filds
outsl
addr16
mov
sub
imul
xchg
je
inc
in
sub
sbb
cmpsb
jne
push
cmp
fdivr
add
inc
addr16
xor
adc
jmp
mov
ljmp
pop
adc
mov
mov
outsb
fdivrl
xlat
gs
push
loope
mov
sub
daa
aas
insb
jle
outsl
stos
sub
mov
adc
fbstp
sbb
fistpll
or
jp
aad
sub
mov
mov
shl
pusha
clc
test
dec
cs
and
repz
fidivrl
int
xchg
xor
mov
stc
jnp
jge
or
orb
jge
fnstcw
and
jne
sub
lods
femms
pop
fs
int3
sbb
add
lods
adc
popa
cs
aad
das
int
mov
nop
mov
inc
jecxz
ja
or
into
dec
insb
sub
mov
and
jbe
push
xchg
sbb
pushl
mov
cmpsl
aas
negb
repz
inc
xlat
or
pop
test
popa
sub
xchg
sbb
dec
adc
and
mov
rcr
push
icebp
mov
int3
add
call
mov
adc
xchg
je
sbb
cli
callw
imul
loopne
inc
push
adc
and
shrb
mov
jo
mov
addl
dec
push
leave
or
inc
add
sbb
adc
sub
and
loopne
cmc
out
addr16
xor
pop
mov
adc
adc
ss
sub
es
jle
jns
js
or
jmp
xchg
rcl
cmpsl
adc
mov
cli
andl
icebp
imul
dec
jbe
nop
sub
mov
pop
jo
iret
das
in
add
adc
adc
aas
xchg
cld
in
pop
xchg
loop
mov
mov
or
clc
dec
aas
push
lds
cmp
inc
movsl
jae
pop
cmc
dec
jmp
add
enter
pop
dec
inc
jmp
sbb
xchg
in
push
insl
cli
in
lods
xor
scas
push
push
test
test
clc
iret
test
fstpt
pop
cmp
xor
mov
add
stc
aas
add
sub
cli
inc
sbb
hlt
adc
outsb
sbb
mov
dec
add
xchg
push
push
cld
inc
pop
mov
xchg
xchg
and
clc
mov
ds
das
xchg
dec
movsl
cmc
mov
mov
testl
clc
inc
sbb
add
cld
cmp
jp
call
mov
rcl
push
insl
cmc
ret
mov
and
pop
sahf
mov
sbb
mov
inc
pop
pop
fidivrl
fcoms
int3
xchg
mov
pop
jmp
jge
movsl
in
jbe
dec
es
jne
pop
jle
pop
repnz
push
cld
enter
sbb
pop
fisubl
push
sarb
mov
fwait
jb
push
sti
ss
dec
sub
mov
shr
mov
mov
or
pusha
popl
jne
inc
in
pop
cmp
insb
jns
outsb
test
push
and
push
push
add
rcl
aaa
lcall
jnp
jnp
mov
push
bnd
xchg
out
push
ds
pop
repz
test
jge
sbb
push
test
mov
and
adc
dec
hlt
fwait
hlt
lcall
mov
dec
dec
mov
ret
pop
fists
cli
ret
mov
es
movsb
jnp
dec
xchg
scas
sbb
add
int3
jmp
sbb
js
cmp
mov
arpl
fs
dec
xchg
out
movsl
and
pop
mov
das
or
mov
test
out
das
xor
stos
cmp
mov
stos
leave
push
cmpsb
mov
shrb
and
adc
jne
add
inc
lods
paddw
jae
andb
scas
xor
jmp
pop
jne
test
add
push
ss
lret
mov
inc
aaa
mov
mov
and
dec
insb
imul
fisubl
inc
add
mov
fstpt
and
pop
pop
clc
inc
rcrl
int3
imul
imul
test
enter
add
jbe
hlt
fldenv
ss
inc
leave
shrl
mov
or
pop
addb
inc
mov
lret
adc
shl
or
jbe
pusha
pushf
xchg
rep
and
ss
cmp
cwtl
out
cmpsl
cmc
add
aad
clc
pop
jmp
enter
addr16
divl
hlt
push
es
fldl
add
ja
ficoml
sub
or
xchg
test
ss
sbb
rcll
pop
add
jg
mov
rorb
adc
dec
pusha
xlat
jbe
ss
mov
pop
or
cmpsl
jg
cmp
jge
inc
aad
inc
decb
cmp
sbb
inc
lret
push
ss
or
idivl
stos
fdivs
mov
fdivr
cmp
jg
cld
mov
pop
jae
rclb
ja
xchg
dec
cmp
xchg
adc
cmp
outsl
mov
nop
cmp
cmp
mov
mov
add
stos
push
insb
shll
push
push
stos
mov
inc
sbb
mov
dec
pop
cmp
out
add
outsl
mov
cmp
dec
setno
pop
add
hlt
push
movb
cld
rol
cmpsb
mov
lcall
sbb
jmp
imul
mov
cld
cmp
cmpsb
mov
inc
xchg
popa
mov
pop
cmp
or
mov
lock
dec
fldt
xor
inc
movb
and
push
ffree
cmp
jl
mov
xor
imul
adc
xor
pop
jle
mov
test
leave
mov
dec
pop
sbb
aam
inc
je
inc
sarl
aaa
xor
pusha
ljmp
xor
incb
test
ret
or
ret
cmpsl
ret
xchg
hlt
mov
add
pop
int
shrl
jg
adc
aad
mov
sub
adc
mov
inc
and
sub
mov
push
call
stc
imul
push
jle
ja
js
mov
loope
aas
int3
adcb
sub
jnp
xlat
and
out
loopne
or
mov
icebp
int3
fisttpl
jne
dec
jg
jno
and
cmp
and
xchg
sub
mov
loopne
dec
pop
lock
repz
cs
cs
push
dec
adc
push
roll
enter
xchg
pop
icebp
lcall
and
push
add
cmp
imul
cli
or
fidivrs
jl
or
test
or
movsb
xchg
stos
clc
push
lcall
mov
mov
in
add
pushf
test
pop
mov
ss
inc
push
daa
aam
in
scas
mov
adc
push
fisubrl
aam
mov
test
fdivl
push
rorl
mov
sub
mov
jmp
inc
in
jecxz
outsl
mov
ret
cmp
mov
fdivrs
push
mulb
xor
xchg
inc
les
jecxz
xchg
hlt
xlat
fadds
jo
pop
adc
ret
clc
adc
cmp
mov
shrb
rclb
fcmovbe
sbb
mov
imulb
mov
sarl
jnp
insl
sahf
cmp
add
xchg
pop
inc
mov
dec
mov
xchg
addr16
mov
shrb
mov
and
out
and
mov
icebp
fldl
movl
inc
insb
mov
inc
add
adc
add
in
roll
pop
pop
cmpl
jge
sub
pop
mov
dec
inc
sbbl
push
in
mov
mov
pop
mov
jg
jecxz
enter
xor
push
add
push
dec
mov
jg
inc
out
testl
push
ja
xor
dec
movsb
pop
pop
jg
cli
adc
loope
lods
mov
mov
cld
test
popa
pop
adc
mov
xor
fstpt
jnp
dec
mov
ret
pop
and
pop
mov
pop
lock
jne
mov
xchg
fdivrs
insb
or
adc
dec
or
into
mov
shrb
int
dec
into
adc
aas
dec
daa
xor
jnp
pop
cmp
and
push
add
fbstp
jecxz
aaa
or
adc
pop
and
nop
test
pop
das
xor
add
ficoml
dec
cmpsb
dec
pushf
or
jge
sti
sbb
xchg
fwait
mov
push
ficoms
es
iret
rorb
sub
sub
or
je
jo
xchg
mov
mov
outsl
jle
mov
paddsw
ljmp
jg
push
or
filds
mov
ret
xchg
pop
daa
pushf
mov
out
nop
lods
inc
in
aaa
sahf
mov
and
and
loope
pusha
pop
jle
jb
sub
cmpsb
jbe
mov
and
stos
push
fwait
jne
fxam
pop
mov
mov
loop
negb
lcall
jge
mov
add
mov
rorb
mov
cmp
mov
pop
cli
ja
pop
ret
add
sbb
inc
push
lods
adc
aas
inc
std
out
xchg
jns
orl
inc
xor
jne
sub
jmp
or
xor
insl
out
cli
push
mov
dec
jge
push
add
cmp
mov
pop
pop
mov
jle
imul
add
jge
test
cli
rorl
mov
push
orb
frstor
lcall
in
mul
jno
pop
lcall
mov
mov
arpl
pushl
xchg
xor
push
pop
mov
inc
hlt
pop
bound
add
js
rolw
adc
adc
mov
xchg
xor
cmp
push
add
or
jmp
cmc
leave
mov
cmp
cwtl
scas
mov
mov
loopne
inc
sub
stos
imul
jo
dec
add
or
je
test
mov
adc
ds
mov
lods
jmp
jo
jo
out
add
shlb
or
push
lock
jo
push
aad
pop
xor
add
js
aam
push
and
lods
mov
jo
bsf
xchg
mov
and
enter
inc
shll
mov
add
push
subb
cmpsb
lea
xorl
aas
lea
mov
pop
inc
out
push
or
cmp
ja
inc
test
pop
cmpsb
test
cli
add
xchg
mov
pop
subl
stos
jmp
adc
mov
cli
lods
outsb
jecxz
jmp
iret
insb
addl
mov
mov
and
outsl
push
push
push
outsb
and
nop
faddl
call
icebp
xor
popa
jge
sbb
adc
cs
add
adc
mov
xchg
adc
jl
in
inc
shrl
push
andl
dec
or
cmc
cld
sbb
mov
push
clc
shr
mov
dec
int
xchg
dec
fistpl
testb
jo
loopne
ja
clc
add
jecxz
adc
aad
jmp
xlat
mov
push
pop
sbb
shl
or
adc
mov
das
ds
lds
jbe
out
cmp
sbb
adc
pop
lods
mov
pop
pop
jecxz
leave
and
add
xor
sti
movsl
dec
hlt
test
inc
inc
inc
inc
shll
in
js
add
fcmovnbe
sub
push
pop
loop
inc
fmuls
cmpsb
mov
aaa
mov
in
lock
adc
xor
add
inc
mov
je
and
xor
loopne
sub
inc
dec
cwtl
in
outsb
add
jne
movq
mov
lea
movsb
mov
jns
push
mov
sti
adc
add
ret
add
rcrb
in
jo
and
push
jae
pop
fldcw
aad
push
jmp
ret
inc
insb
lods
mov
pop
cwtl
add
orb
mov
subb
sbb
sub
adc
dec
xlat
push
aas
enter
test
ja
lods
repnz
mov
jbe
in
fscale
push
mov
mov
mov
add
outsl
lea
push
cwtl
cli
mov
or
sub
push
dec
je
push
jle
gs
enter
out
inc
pop
stc
pop
mov
mov
mov
adc
mov
fstpl
movsl
cmpsb
stc
xor
dec
jl
addr16
push
imulb
pop
pop
and
fcmovb
ret
add
ret
and
test
hlt
test
pop
jl
jmp
call
pushf
loop
jmp
mov
push
loop
ds
jb
mull
fisttpll
imul
ficompl
mov
scas
sbb
lea
pusha
imul
lds
int
loopne
fistps
into
mov
ljmp
add
jmp
outsl
cltd
pop
add
les
cmc
fistpl
shll
push
rolb
in
mov
push
push
mov
sbb
imul
js
test
out
and
movsl
orl
shrb
clc
orb
xchg
repnz
or
mov
leave
loop
inc
jle
int
inc
jo
bound
je
adc
mov
stos
decb
xchg
jecxz
fwait
test
leave
imul
jl
and
iret
flds
loope
lds
daa
mov
mov
call
push
cmpl
pop
xor
mov
cwtl
in
cmp
add
in
aaa
cmp
scas
leave
adc
popf
fstpt
outsl
test
cmp
xor
in
pop
cmp
ss
dec
fildl
fistps
dec
push
pop
pop
mov
sahf
mov
rorb
pop
dec
test
xchg
pop
call
inc
lret
lods
adc
sbb
mov
test
out
subb
jbe
mov
push
test
insb
dec
adc
push
mov
sbb
sub
inc
sbb
push
sub
add
shll
inc
aam
dec
fildl
pop
add
insb
dec
cmp
cli
or
dec
mov
arpl
ds
xor
fisubl
cmp
cmpb
imul
aaa
lock
out
xor
cmc
and
fs
sahf
or
jo
mov
fwait
sub
jp
or
cs
inc
dec
movsl
and
test
sbb
cmp
and
mov
ret
inc
test
and
ds
mov
roll
mov
loop
mov
jne
sti
push
call
xchg
cmp
jecxz
mov
adc
gs
mov
mov
fnstsw
push
push
adc
mov
cmpl
cmpsl
aas
jge
testl
jle
or
js
inc
sbb
xchg
enter
arpl
and
adc
sbb
sti
jecxz
fiaddl
enter
add
add
gs
add
nop
jecxz
push
lcall
fs
fisttpll
cmp
sti
add
mov
pop
jmp
loope
jbe
in
in
ljmp
dec
ret
sbb
test
jg
mov
sbb
adc
out
sub
mov
mov
push
mov
pop
in
fwait
or
sub
cmp
cmpxchg
xchg
xchg
aaa
sub
mov
push
and
das
outsb
inc
push
push
inc
and
inc
push
mov
cmpsl
fisubrs
rolb
out
shrb
inc
xor
loop
and
xchg
loop
ret
lret
ret
mov
fisttpll
push
shll
mov
das
push
cmp
xor
jl
aad
push
je
fisttps
add
sbb
aas
xlat
mov
add
sub
add
or
cmpsl
call
pop
pop
mov
jl
orl
jg
adc
pusha
ret
imul
or
xchg
mov
jne
icebp
jmp
cmpsl
xchg
cmp
or
mov
ret
pop
and
stc
mov
mov
jns
cmp
insl
mov
sbb
clc
ljmp
jl
sbb
sub
xchg
add
test
cld
sbb
push
aam
fnstsw
stos
clc
sbb
clc
xchg
movsl
rol
testb
xorb
fsub
out
and
loope
dec
or
cli
ret
inc
dec
fidivrl
mov
aaa
mov
popa
jmp
inc
dec
outsb
fcomp
push
cmp
inc
mov
scas
fsubs
rcll
ja
hlt
xor
js
mov
sbb
lahf
adc
sbb
pop
or
rolb
bound
ret
lahf
add
repz
imul
add
imul
push
pop
mov
mov
lods
mov
mov
or
xchg
add
pop
mov
dec
mov
js
jae
add
test
jl
repnz
in
loopne
jbe
pop
dec
sahf
jl
xor
sub
dec
mov
into
es
and
gs
sbb
xchg
sbb
xchg
shrl
cmpb
mov
cmp
div
sbb
push
popa
jne
adc
insb
xchg
cld
inc
je
and
add
aas
fdivrp
arpl
das
add
dec
stos
ror
pop
adc
fldt
or
mov
addr16
sbb
roll
std
inc
repnz
and
push
xchg
decb
gs
cmpsb
pop
or
dec
test
inc
mov
or
outsb
scas
xor
jg
inc
mov
shrl
call
cmpsl
mov
add
cmpsb
and
lock
dec
out
mov
inc
cmp
push
inc
subb
shr
cwtl
aaa
pop
mov
fs
push
push
aad
push
in
cmp
shl
lea
aad
adc
imul
test
or
or
imul
inc
pop
or
arpl
ret
sub
xchg
add
sub
shr
fwait
stc
mov
or
xor
cld
mov
or
mov
mov
insb
js
outsb
mov
fwait
aam
inc
ja
imul
lcall
fistps
scas
inc
lcall
push
ja
fists
push
and
mov
ss
jg
push
push
sti
test
inc
ljmp
outsb
sub
pop
mov
test
adc
fs
mov
xorb
inc
in
rcrb
fildl
sbb
or
and
lock
xor
cld
adc
xor
mov
test
nop
and
xchg
inc
mov
nop
rol
subl
lret
or
nop
ss
or
lahf
imul
mov
ljmp
add
popf
shr
pushl
mov
roll
xlat
roll
jne
adc
mov
jns
fisubl
push
and
aam
jb
sub
jl
sbb
in
inc
mov
sbb
mov
mov
cmp
pop
pop
inc
jmp
pop
mov
add
push
ffreep
add
mov
fidivrl
stos
cmpsb
jno
mov
call
imul
ss
mov
jo
mov
adc
in
push
push
sbb
jns
inc
push
push
inc
mov
call
mov
dec
sub
insb
mov
inc
enter
inc
cmp
loope
cmp
mov
add
inc
cmpsb
push
call
xlat
sbb
test
stc
fbstp
or
decl
xor
adc
jmp
push
xchg
dec
sub
pop
pop
add
cli
mov
inc
mov
clc
andb
sub
push
push
hlt
fldt
jge
pop
fsubrs
jg
movsl
xchg
pop
mov
xchg
js
aas
push
cld
ds
add
or
pop
dec
jecxz
cmp
cmp
or
mov
xchg
pop
mov
or
repz
or
jo
daa
lds
repnz
or
push
jbe
add
cmp
push
cmp
lea
fcmovu
cmp
fisttps
mov
repz
xlat
ljmp
ffree
mov
rorl
pusha
test
data16
mov
lods
xchg
mov
fistps
dec
or
test
pop
stc
cs
lock
adc
mov
sub
out
scas
out
cmpb
outsb
jno
je
inc
adc
or
loopne
mov
dec
jo
xor
fcmove
aam
ds
out
std
add
jmp
pop
inc
jo
mov
cmp
cmp
pop
mov
or
fisubrs
inc
xchg
les
and
repz
lock
fsubr
mov
clc
inc
stc
cli
call
xchg
mov
cmp
idivb
cltd
inc
mov
push
subl
lcall
incb
sub
aam
sahf
roll
fnsave
in
in
mov
pushl
adc
repz
ds
cld
push
inc
xorl
hlt
adc
push
stc
add
outsb
or
in
pop
lea
pop
inc
xor
lock
lods
inc
ja
pop
sbb
dec
roll
mov
lock
repz
add
dec
outsl
orb
mov
je
adc
add
fiadds
inc
push
dec
pop
das
fidivrl
or
loope
mov
xor
push
lahf
add
mov
lock
call
mov
outsl
mov
push
mov
jl
dec
fimuls
inc
ja
fcmovnbe
mov
scas
lods
sub
cmpsb
adc
jne
test
fsubrl
in
xchg
and
sarl
pop
stos
outsl
pop
xor
lret
mov
cmp
int
mov
scas
stos
dec
filds
lret
dec
ljmp
jmp
jecxz
aaa
fisubrl
loopne
hlt
fdivrs
mov
cs
add
jnp
lods
ret
loopne
insb
xorl
pop
or
push
repnz
adc
stos
push
push
bound
push
icebp
mov
mov
out
filds
adc
adc
data16
and
lds
mov
push
lahf
and
std
push
xchg
sbb
rcpps
sbb
or
psubb
push
addr16
lock
imul
addr16
insl
jecxz
push
mov
sbb
or
out
clc
cwtl
push
mov
js
xchg
inc
mov
pusha
lahf
or
sub
in
fildll
lods
cmp
mov
inc
cmp
xor
subl
cmpsb
test
push
jl
js
xlat
into
jno
adcl
lock
xchg
push
ja
push
clc
xchg
ljmp
daa
inc
sub
jg
std
and
cmp
dec
out
mov
clc
cmp
jne
test
jl
enter
mov
in
clc
push
pop
and
xor
sbb
push
sub
jns
lret
xchg
jle
dec
enter
jno
std
inc
xchg
xor
maxps
fsubr
das
fst
lret
das
sub
mov
jb
push
sbb
fdivrs
pop
mov
sbb
mov
mov
int3
jp
shll
dec
mov
jg
lea
xchg
cmp
add
push
das
orb
mov
mov
mov
or
cmp
scas
outsl
lcall
mov
movsl
in
test
or
jnp
scas
outsb
mov
mov
push
mov
jns
adc
jo
stos
ja
sbb
sbb
or
loopne
inc
and
test
jno
mov
push
in
lds
loopne
jg
insl
push
lret
push
mov
bound
and
jecxz
scas
aaa
hlt
rcrl
fistl
pop
stos
mov
and
mov
push
mov
imul
push
ja
outsl
sbb
cmp
or
dec
repz
jo
sbb
sbb
test
sub
xlat
pusha
xor
jecxz
fucomi
mov
inc
inc
mov
add
push
jo
jg
stos
dec
rorb
rcll
rcr
mov
dec
push
sbb
push
jbe
mov
adc
std
or
add
hlt
fisttps
nop
mov
addw
cmp
push
xchg
mov
mov
test
pop
fwait
and
in
aas
mov
hlt
lcall
cmp
aas
cltd
leave
inc
or
cmp
pop
stc
sub
cmpsb
sub
push
aam
jecxz
lcall
pop
jbe
idivl
and
insl
jb
lcall
cmp
dec
or
jae
mov
or
mov
insl
xor
notb
mov
ficomps
fidivs
adc
lret
add
pop
mov
gs
ds
mov
movsl
clc
xchg
inc
sarb
mov
jg
mov
pushl
data16
mov
lods
xchg
push
movsl
stos
sbb
insl
adc
decl
sub
or
shlb
mov
addl
jmp
lods
mov
lahf
fwait
cmpsb
and
sub
fwait
mov
xor
dec
cwtl
mov
sub
dec
jmp
insb
sti
test
add
sbb
inc
sbb
adc
and
mov
aam
inc
jb
pop
loop
stos
jbe
lds
jno
notb
das
jl
out
or
dec
sub
add
mov
and
mov
mov
sbb
mov
and
jns
push
arpl
outsb
ja
inc
inc
push
nop
adc
je
xchg
push
outsl
ficoms
jecxz
movsl
and
mov
and
xor
lcall
add
xor
imul
sub
adc
outsl
loope
cwtl
add
pop
adc
mov
das
xlat
add
test
mov
mov
outsl
fidivs
arpl
aas
push
fldt
lds
jne
xchg
cmp
sar
mov
in
pop
movsl
xchg
sbbl
out
inc
daa
mov
pusha
xchg
or
mov
ret
mov
jle
rol
mov
lds
cmpl
jae
mov
xchg
push
addb
xchg
add
imul
push
lret
les
hlt
dec
and
cmpsl
hlt
jmp
fistpll
mov
cwtl
es
inc
in
mov
push
lret
loopne
dec
jbe
mov
and
test
cmp
cmpsb
movb
dec
mov
mov
ja
aam
addr16
add
adc
popa
jle
cmc
loop,pn
xor
cmpsb
adc
fyl2x
push
lret
push
mov
mov
cmc
pop
or
enter
xchg
mov
orl
add
incb
aam
adc
jno
rcrl
movsb
imul
sub
incl
test
xchg
clc
scas
aam
rcrb
dec
pushl
mov
in
xchg
inc
mov
orb
jo
insl
cli
jg
adcl
movsl
pop
push
in
pop
dec
je
mov
popf
jno
and
push
jg
ret
mov
or
gs
jg
lods
adcl
cmp
mov
cld
inc
inc
pop
int
pop
aaa
in
jl
mov
sbb
dec
xchg
insl
imul
lods
addr16
pop
adc
insb
loopne
cmp
scas
dec
insb
aad
icebp
inc
gs
mov
sub
aas
cmc
pushl
mov
mov
inc
xchg
nop
shlb
aas
push
fmull
inc
push
aad
sbb
or
int
lret
cmp
xchg
pop
loope
call
mov
cmp
adcl
add
icebp
inc
sub
scas
jp
inc
and
insl
arpl
aaa
mov
pop
mov
sbb
cmp
orl
dec
sbb
cli
lcall
pop
repz
sarl
enter
es
mov
sbb
cli
inc
xchg
mov
test
iret
or
mov
or
sbb
test
or
arpl
cltd
jnp
jge
leave
fnstsw
movsl
loopne
sarl
lcall
adc
add
mov
popa
mov
push
sub
xor
test
or
mov
mov
test
xlat
subb
mov
sbb
add
popa
adc
jb
or
pop
rolb
jecxz
jbe
cli
fistpl
and
xchg
movsl
ljmp
js
pop
xorl
jecxz
xchg
add
sahf
adc
jno
adc
out
arpl
lock
jne
cmpsb
and
ret
adc
andl
jnp
mov
mov
pusha
in
and
adc
inc
cmp
xchg
xor
push
inc
push
sub
push
out
iret
xchg
add
xchg
jb
ja
sbb
xor
pop
jg
icebp
ret
xchg
cmp
stos
adc
bnd
mov
dec
mov
repz
lahf
add
clc
adc
pop
insb
pop
and
and
mov
add
ljmp
mov
sbb
idivb
shrb
mov
loopne
cs
push
push
cwtl
sbb
pop
aad
add
inc
mov
sbb
sbb
xchg
ret
cwtl
hlt
lret
push
sbb
jmp
test
sbb
pop
es
popa
in
mov
outsl
jl
or
push
arpl
aas
mov
or
mov
loopne
pop
mov
out
sbb
dec
imul
mov
jl
fistpll
in
or
add
fidivl
mov
int
mov
shl
paddsb
iret
add
mov
sti
loope
das
sub
and
aaa
int
pop
mov
imul
mov
adc
les
nop
popa
test
push
hlt
mov
je
inc
pop
pop
push
std
dec
adc
scas
fisttpll
sbb
mov
ret
fwait
insl
aas
loope
push
pop
and
mov
cmp
cmp
pop
decb
icebp
push
adc
adc
inc
fsubs
out
mov
fadds
or
mov
int
xlat
add
scas
adc
rcl
sbb
notl
aam
shlb
addr16
rol
loop,pn
mov
nop
dec
dec
sub
xor
jg
xchg
shl
in
cmpsl
call
shll
xorb
outsb
fildll
shlb
pushf
sbb
sbb
xchg
out
pop
mov
addb
cmpsb
nop
ljmp
mov
shll
add
mov
popf
sub
std
mov
adc
inc
aad
xor
fistpl
cmpsl
test
mov
icebp
aas
dec
push
xchg
mov
pop
dec
pusha
adc
push
lods
jge
mov
jne
fisubrs
out
daa
sub
mov
repnz
mov
fdivl
sbb
data16
mov
fucomp
adc
inc
and
aam
es
cmp
sbb
cld
push
add
scas
push
or
cmp
cmp
sub
cmp
mov
sub
movsl
dec
fistl
mov
sbb
xchg
aaa
cmc
ret
push
add
adc
fcoml
bound
mov
push
test
and
pushf
fnstsw
jne
loop
sub
out
jb
jecxz
cli
data16
aas
cli
pop
cmp
dec
mov
xlat
loop,pt
ja
fisttpll
mov
pop
vminps
lock
pop
adc
xchg
or
jmp
in
add
rolb
je
lea
enter
nop
nop
push
inc
in
stos
in
aam
xchg
test
jno
jnp
inc
mov
adc
rcll
stos
jmp
and
sarb
pop
sbb
loop
adc
inc
imul
movsl
fcomps
imul
out
cmp
push
inc
aam
hlt
xor
push
jnp
lods
ljmp
aam
lcall
popf
into
cmpsb
mov
dec
lea
pop
iret
mov
jnp
outsl
jp
xor
push
fs
mov
shr
shll
sub
fcomip
push
cmp
pop
sbb
fwait
ds
mov
testb
jbe
cmpsb
rolb
inc
and
mov
sysexit
lock
or
lods
sbb
pusha
sub
jmp
jge
jae
outsb
cmp
and
sbb
das
sbbl
outsl
cmp
adc
pushf
jge
and
sarb
ljmp
cmp
adc
xchg
jnp
sub
pop
pushl
push
pop
pop
mov
sbb
mov
pop
hlt
xchg
or
push
xlat
ficomps
ja
and
jge
fwait
ljmp
cmc
pop
sbb
adc
shll
fwait
movsl
es
sbb
jo
xchg
pop
and
js
sub
inc
filds
dec
inc
fwait
mov
mov
or
xor
inc
cwtl
xor
fwait
test
add
dec
movsl
mov
je
movl
fistpll
incl
popa
cli
xchg
sbb
lret
scas
mov
outsl
in
filds
lds
pop
ret
outsb
loopne
fwait
icebp
pop
dec
sub
mov
in
test
push
pop
dec
dec
into
sbb
scas
cld
data16
dec
js
nop
or
mov
les
test
sbb
jo
jne
and
cld
adc
lock
xor
pop
mov
mov
and
aas
inc
and
add
cmp
lret
inc
cmc
cmpsl
in
sub
inc
mov
dec
push
or
mov
mov
ljmp
jns
shl
je
add
jne
cmpsb
push
cs
sub
xchg
jmp
lods
or
add
rcr
push
test
shl
lahf
repnz
jecxz
cmpsl
stos
xorl
push
adcl
int3
fs
push
mov
adc
and
mov
cmp
xchg
scas
mov
xchg
adc
dec
divl
cmp
out
cmp
cmpl
jmp
roll
adc
push
mov
add
aad
push
in
mov
test
ljmp
push
xor
push
xchg
sbbb
and
cmp
mov
mov
out
jno
cmp
das
cmp
ret
imul
xlat
add
ficompl
and
inc
add
hlt
xor
lds
enter
adc
dec
hlt
sbb
push
pushf
in
lds
ret
jb
cltd
lcall
cmpsl
xor
xchg
in
repz
arpl
jg
push
nop
xchg
jne
pop
sbb
xchg
dec
pop
cmpsb
lods
xchg
div
pop
inc
xchg
orb
mov
sbb
movsb
dec
inc
ficoml
sub
lods
adc
pusha
cltd
push
add
ss
lahf
adc
xor
and
enter
add
push
xlat
rorl
sub
pop
mov
rol
pop
inc
cwtl
xchg
sub
shlb
cmp
add
lcall
ficoms
test
lods
mov
dec
sar
sti
int
jecxz
sub
enter
jge
xor
mov
outsl
sbb
movsb
mov
inc
fwait
sbb
loop
fildl
mov
push
mov
inc
fadd
xchg
jb
mov
cmp
fbld
or
sub
jg
push
fdivr
mov
mov
sub
inc
or
mov
fbld
adc
sbb
les
mov
fidivl
sub
cmpb
decb
cltd
sbb
adcl
inc
pushf
clc
loopne
add
dec
aaa
testl
aad
into
and
fisubl
rcll
inc
outsl
cld
sub
clc
out
dec
scas
mov
lahf
in
ss
push
mov
hlt
fsts
push
push
fldt
fnstenv
shll
mov
lds
inc
inc
and
jbe
in
cld
jb
adc
and
orb
add
imul
or
das
insb
jo
punpckhwd
cmp
dec
xchg
test
adc
jno
icebp
push
sbb
xor
je
cmp
mov
push
sahf
pop
fdivrs
ljmp
sbb
movsb
and
xorl
pop
ljmp
pop
sub
addr16
jle
dec
enter
xor
sbb
dec
add
sub
mov
push
aam
outsl
aaa
lds
inc
and
fs
stos
mov
fisubrl
mov
inc
aam
sbbb
mov
orb
jne
dec
pop
in
shll
ss
cmpsb
cwtl
sub
jmp
push
inc
mov
jmp
and
in
inc
repnz
sub
sub
mov
cmovne
and
mov
push
mov
lea
out
pusha
adc
push
bound
inc
cld
fwait
inc
es
xorl
mov
pop
push
pop
xor
inc
lcall
push
in
lahf
push
lock
inc
fisubrs
fidivrs
mov
push
sbb
mov
fisubl
adc
jne
subl
mov
test
loope
into
lods
cmp
jne
into
mov
and
mov
add
out
pop
pusha
hlt
fisubrl
jp
std
test
pop
aas
cmp
adc
mov
and
mov
loop
aam
rcrl
loop
cmpsb
or
in
sti
cli
stos
hlt
xchg
and
mov
add
out
aad
dec
gs
movsl
dec
daa
jbe
arpl
and
jmp
add
xchg
add
je
pusha
mov
mov
ss
push
sub
push
das
fdivrl
mov
daa
negb
test
cwtl
test
pop
dec
mov
xor
scas
fcmovb
fisttpll
lods
or
icebp
jl
add
mov
std
fyl2x
sbb
mov
mov
inc
xor
fldln2
inc
add
popf
or
xchg
outsl
or
fnstsw
int
insb
jl
out
or
pop
dec
mov
ja
rclb
popf
add
outsb
xor
adc
popa
repz
gs
dec
insb
pop
add
or
inc
cmp
icebp
in
inc
mov
test
mov
pop
clc
dec
mov
je
inc
push
push
notb
pop
mov
xchg
sbb
mov
jne
pop
cmp
shrl
mov
or
nop
xorb
jb
leave
mov
cmpb
nop
data16
stos
aaa
mov
push
mov
outsb
scas
push
test
shll
inc
adc
arpl
dec
sub
mov
es
sbb
in
stos
cmp
fdivrp
aaa
push
push
add
lock
andl
das
xor
or
js
xor
xlat
push
or
inc
pop
scas
std
inc
loopne
xchg
or
mov
ret
pop
leave
mov
add
scas
and
mov
add
xor
fidivrs
pop
rorl
sbb
mov
cmpb
cmp
pop
and
mov
ss
shl
sbb
push
out
or
bound
lea
movsl
add
push
xacquire
and
push
cmp
dec
in
jnp
out
test
addb
cs
test
mov
adc
pop
icebp
push
inc
cmpsl
sub
shl
sub
rorl
jge
mov
adc
idivl
movsl
add
imul
pop
dec
jno
jle
cmp
lcall
fwait
mov
cld
bound
aam
xchg
out
lahf
mov
pop
sub
ljmp
leave
ret
push
mov
std
sarb
bound
pop
sbbl
fdivrs
imul
cmp
test
inc
jo
les
push
push
sub
dec
out
xchg
sbb
cmpl
adcb
movsl
add
je
xor
push
out
test
aaa
aaa
aas
mov
or
push
or
pop
cmp
adc
outsl
dec
pop
mov
frstor
push
push
pop
sub
lret
int
fisttps
in
test
loope
push
rcr
in
push
mov
mov
xchg
push
jle
enter
es
sti
shlb
lcall
into
les
fisttps
and
loope
mov
mov
push
pop
sti
insl
adc
mov
mov
aad
pop
cld
jp
fnsave
cmp
scas
int3
xchg
xchg
xor
push
fucomip
fcomps
push
rolb
mov
sub
inc
out
js
push
and
arpl
add
xchg
adc
jmp
fs
sbb
mov
mov
or
roll
pusha
jmp
in
inc
cli
push
loop
cmp
or
adc
dec
imul
test
sbb
in
cwtl
jne
je,pn
jne
cs
push
xchg
cmp
pop
jl
cmpsb
stc
rcll
sbb
adc
mov
lds
pop
test
cmc
dec
inc
fnsave
xchg
insl
push
inc
test
jl
popa
ret
push
rolb
test
cs
jmp
xchg
push
sahf
adc
lret
xchg
js
pop
sub
ja
add
pop
call
in
insl
imul
inc
arpl
and
fadd
out
xchg
subl
scas
lds
push
add
push
xchg
pusha
push
fisttps
push
jmp
mov
cmp
add
addb
mov
adc
push
test
mov
rcr
in
push
jb
jnp
outsl
mov
or
loope
movsl
inc
les
adc
scas
xor
pop
push
adc
pop
clc
int
fs
lea
mov
pop
ficompl
stc
andb
testb
xchg
imul
add
insl
adc
aaa
or
push
jbe
aaa
lock
iret
scas
inc
stos
pop
dec
or
adc
jo
push
xchg
xchg
mov
mov
notb
mov
lds
mov
aaa
insl
xor
cmp
cmc
jnp
jecxz
push
push
sbb
imul
xlat
insl
add
xor
push
pop
std
aas
cmp
xchg
in
mov
int3
and
pop
sbb
sub
and
outsb
pop
stos
loopne
adc
ss
scas
call
out
rcrl
sub
fstps
gs
cmp
lea
aas
das
ror
sbb
es
es
dec
jno
imulb
dec
push
ret
jo
mov
add
out
ljmp
xor
mov
dec
rclb
mov
inc
imul
adc
mov
add
sub
xor
das
push
add
shr
pop
shl
in
mov
cld
ret
lods
stos
bound
add
cmp
fldl
fbstp
rclb
ret
je
inc
ret
int3
punpcklbw
clc
pop
lds
xlat
clc
scas
adc
dec
movsb
jnp
add
scas
fwait
jg
mov
lods
popf
sub
push
dec
add
pushl
pop
mov
cmp
mov
mov
cmpsl
sar
aaa
mov
xor
subl
rcl
add
subb
insl
jae
inc
ret
or
pop
or
push
lcall
sbb
push
fidivs
dec
inc
sbb
or
out
loopne
or
ret
mov
rolb
sbb
jo
rcrb
mov
or
lcall
outsl
or
pop
add
pusha
sbb
sub
pop
sbb
stc
jns
cmpsl
test
jle
xor
jo
jmp
incl
push
pusha
lahf
ss
adc
pusha
mov
stc
fwait
imul
pavgb
insl
push
mov
mov
sbb
cld
aas
mov
sub
ret
lea
cli
push
ret
xor
cmp
aad
js
cld
jg
loop
pop
push
mov
jl
andl
xchg
fiaddl
xchg
xchg
fs
jp
mov
dec
sub
rorb
push
add
push
jnp
rclb
test
imul
sbb
pop
fsubrs
cld
aas
out
es
sbb
inc
adc
push
loopne
lret
orl
loopne
sbb
in
fdivrs
xor
cmp
pop
cld
jp
push
add
test
jmp
adc
dec
loopne
cmc
inc
inc
std
push
inc
xchg
push
movsb
and
sbb
push
lods
xor
dec
ss
jg
shll
mov
dec
mov
push
lock
xor
cmp
fcmovnbe
cs
or
fs
movsl
push
mov
lea
aad
push
mov
std
push
and
popl
inc
aam
cmpsl
test
neg
sahf
cmp
rcll
cmc
jnp
es
dec
sub
rcrw
insl
lds
mov
inc
mov
pop
inc
cmpsl
inc
aas
clc
ss
add
push
push
out
idivb
in
mov
pop
into
sarb
sbb
xchg
cmpb
imul
cmc
cmp
adcl
lea
mov
int
push
jnp
pop
sbb
cs
faddl
leave
cmp
lods
or
sbb
sub
pop
mov
dec
aam
xchg
sub
lret
jecxz
popa
mov
xor
xchg
dec
out
int
in
push
cmc
in
loop
xor
fwait
in
and
cld
xchg
test
pop
xor
test
sbb
inc
sbb
cli
and
adc
push
pusha
imull
and
jg
or
outsb
push
mov
arpl
in
call
or
shl
xchg
mov
add
outsb
fcomps
push
cmp
subb
push
cmpsb
outsl
pop
js
into
jnp
push
cmp
mov
pop
and
mov
aas
lods
xor
mov
adc
jo
dec
push
ljmp
loope
fwait
xor
divb
fistps
or
icebp
fiadds
es
dec
xor
in
xchg
notl
add
sub
xchg
gs
icebp
xchg
les
cmpsb
testb
insb
or
je
jge
cmpsb
mov
roll
push
and
and
mov
add
pop
pop
inc
or
push
inc
jge
outsl
pop
inc
sti
xor
insl
jge
inc
cld
dec
popa
and
lret
or
out
cmpsl
leave
lds
lods
stos
ja
add
adc
cltd
jae
movl
fidivs
mov
push
fcoml
test
cmp
les
stos
cmp
pop
xchg
adc
fnstcw
shrl
sbb
pushl
jmp
and
les
cld
and
mov
or
call
cli
les
sub
cmpsl
or
xchg
xchg
test
pop
jg
sbb
and
and
and
push
xchg
inc
xor
mov
mov
pop
push
inc
or
fadd
jae
jle
cld
cld
popa
scas
and
int3
adc
sub
fisttpl
xchg
aam
cwtl
and
aaa
mov
ret
mov
outsb
dec
mov
push
adc
pusha
xchg
les
and
mov
and
orb
mov
daa
js
into
xlat
cmp
lds
movl
mov
js
pop
inc
adc
xchg
addr16
nop
jg
lds
mov
push
neg
fst
add
inc
mov
mov
cli
mov
jl
aaa
xchg
cld
jl
cmc
loope
mov
insl
pop
jl
and
lea
push
jnp
stos
inc
xlat
aaa
lret
mov
inc
xor
ja
sbb
cs
mov
pop
fistps
jecxz
fstpt
sahf
add
inc
mov
dec
ret
bound
jae
stos
fcmovbe
xchg
fcomps
xchg
mov
aaa
mov
test
sub
cmpsb
ds
rcl
and
xor
loopne
mov
mov
imulb
lock
mov
movd
dec
mov
clc
add
je
test
xchg
mov
fmull
int3
add
sub
pop
mov
jne
je
dec
cli
aaa
or
inc
js
push
mov
stos
insb
clc
in
aaa
fcoms
lret
out
inc
xchg
and
ja
xorb
mov
je
jmp
jmp
add
push
shl
lock
dec
punpckldq
fs
cwtl
mov
cwtl
cmp
loop
sarb
dec
movsl
stos
xlat
mov
push
in
sub
cmp
fwait
sbb
cli
push
shlb
jecxz
push
mov
cmp
sti
jb
xchg
fdivl
repnz
dec
or
adc
dec
xchg
ds
xlat
sub
repz
sti
xchg
dec
xchg
sarb
jecxz
adc
test
roll
bound
aas
xchg
mov
jae
inc
mov
in
test
mov
cmpsb
mov
mov
xor
sti
adc
mov
aad
ror
mov
lds
shll
mov
xchg
push
cmp
jb
pop
loopne
dec
mov
mov
pop
inc
lret
and
xchg
sub
push
cmp
xchg
fisubs
or
and
data16
dec
adc
sub
xchg
clc
xchg
add
das
mov
sbb
pusha
aam
xchg
cmp
insb
cmp
jmp
inc
test
sub
sahf
int3
int
shlb
jns
cmp
pusha
or
inc
xor
fs
mov
cld
push
add
adc
adc
sbb
popa
loopne
and
test
push
addr16
in
pop
sub
movsl
xchg
pop
pop
aaa
mov
jecxz
sbb
sbb
out
std
out
sub
adc
shll
dec
mov
lcall
lret
or
add
in
aad
mov
push
movsl
fcmovbe
aaa
repz
jns
sub
pop
lea
fistl
mov
adc
sbb
and
fsubl
lahf
or
stos
stos
xor
andb
mov
divb
xor
adc
jl
cld
jecxz
pop
mov
adcl
inc
int
mov
xchg
movsl
ret
push
loope
in
push
je
adc
aad
int
stos
fcmovnu
sar
es
xchg
les
sbb
pop
sub
decl
dec
xchg
mov
pop
mov
mov
xchg
mov
aam
rcrb
ret
add
mov
sbb
call
lahf
sti
in
jo
lds
ja
and
mov
and
outsl
in
mov
ret
mov
popf
push
adc
dec
cmp
mov
fidivs
jae
mov
ja
mov
fsubrp
fdivs
xor
mov
add
adc
cmp
mov
pop
shrb
dec
imul
mov
mov
lret
daa
aad
cmpl
fucomp
xchg
int3
jb
das
test
addr16
fdivp
mov
ljmp
lret
xor
bound
jmp
mov
shlb
add
jecxz
push
mov
or
leave
ficompl
xchg
notl
outsb
pop
jp
add
jmp
sbb
pop
cmp
pop
sbbb
ljmp
sub
test
aaa
ss
in
sbb
test
or
int
jns
pop
outsb
sbb
test
nop
mov
sub
mov
xchg
sub
das
lods
cmp
mov
lds
cltd
loopne
cmp
add
mov
sbbl
xchg
scas
mov
push
ljmp
inc
rcrl
in
pop
or
xchg
jecxz
jl
test
shlb
mov
mov
cltd
sbb
add
and
add
sbb
loopne
jp
fdivr
sub
fistpll
sbb
cmp
pop
dec
les
iret
popf
add
insl
cmp
jg
and
sub
call
test
sub
xchg
fucomi
mov
mov
xor
jo
push
icebp
push
mov
insl
imul
out
mov
pop
mov
ja
mov
sbb
dec
loop
add
pop
mov
add
xchg
aad
mov
jbe
and
xchg
in
fs
mov
xchg
push
mov
iret
push
xor
sarb
dec
add
fisttpl
pusha
jle
sbb
ss
negl
dec
mov
or
out
jecxz
sbb
add
jle
fnstsw
dec
jb
jo
inc
sub
mov
mov
hlt
fimuls
pop
adc
cmp
xor
pop
xlat
or
and
jmp
sbb
and
out
je
movsb
xor
fsubr
jle
xor
dec
repnz
ficomps
and
fcmovnbe
fidivrl
jo
js
fsubp
shlb
stc
call
add
sbb
lahf
in
mov
mov
jno
adc
mov
mov
in
xor
adc
fbstp
cmp
or
jmp
xor
ljmp
fwait
loope
test
enter
xlat
inc
jg
lcall
roll
loopne
mov
inc
stos
cmp
arpl
leave
or
leave
pop
cli
lahf
fdivrl
xor
repnz
or
movsl
inc
and
fistps
sub
push
fs
sbb
and
test
mov
push
pop
push
sbb
jle
mov
cmp
push
insl
push
leave
pop
je
pop
pop
sbb
xchg
clc
lods
stos
movsb
jmp
pop
mov
sbb
aaa
push
fs
lea
pop
enter
pop
stos
jmp
out
nop
sub
roll
pop
ss
pusha
pop
push
das
mov
loopne
movsb
incl
inc
sub
jge
in
push
mov
mov
negb
into
hlt
jo
inc
add
mov
cmp
aaa
std
fwait
cli
mov
and
dec
scas
inc
push
jbe
bound
pop
sbb
lret
cmp
test
outsb
imul
gs
mov
fildll
xchg
je
sub
mov
adc
cmc
xor
xor
lods
inc
pop
dec
lock
ss
test
dec
sub
adc
push
dec
adc
cltd
mov
je
jbe
mov
std
cmp
pop
test
mov
dec
adc
inc
jo
ja
mov
and
mov
xchg
inc
mov
shl
add
pop
cmpb
jo
aam
or
mov
popa
cli
addl
and
jbe
sbb
sarb
xchg
jae
push
stc
adc
jp
mov
movsl
sbb
adc
and
or
test
jo
bound
pop
lcall
or
sbb
pop
int3
in
xor
std
roll
sti
stos
push
adc
pop
and
mov
or
add
leave
pop
pushf
adc
or
in
test
incl
xchg
in
cmp
mov
add
insl
sub
inc
push
lret
sub
dec
push
or
jne
sub
daa
push
xor
test
shrl
adc
andb
inc
mov
scas
push
pop
jge
ficoml
mov
sub
adc
lea
and
sahf
in
les
fs
xchg
mov
adc
adc
sub
xchg
inc
mov
adc
lods
fstpt
adc
push
lea
push
ja
mov
imul
cmpsl
cltd
mov
insl
jnp
aad
and
jge
xor
mov
mov
jbe
in
push
xchg
stos
scas
xor
xchg
mov
mov
or
or
jp
add
ficoml
bound
dec
fstps
mov
and
and
push
pusha
sti
nop
outsb
cmp
data16
dec
int
inc
cs
stc
mov
push
mov
or
dec
mov
add
clc
sub
mov
pusha
xchg
jle
or
sub
push
push
mov
imul
sub
push
sub
add
jge
ret
push
xchg
aad
pop
lahf
xor
push
loopne
cmp
push
clc
pop
jbe
add
pop
or
pop
outsl
mov
xor
je
jle
cmp
lds
push
cmp
enter
aam
in
add
push
iret
iret
xchg
jns
jmp
rcll
inc
int
cli
add
jb
test
jmp
xchg
mov
xor
rorl
data16
das
mov
jb
loopne
pop
or
lods
nop
dec
test
fstpl
pop
mov
ret
rcr
mov
jo
imul
sti
scas
adc
mov
fnstsw
scas
sbbb
dec
dec
add
adc
and
ss
imul
ljmp
push
ret
pop
in
or
subl
inc
pop
mov
xchg
dec
icebp
outsl
fdivrl
dec
add
mov
fsubr
or
ficomps
inc
mov
push
inc
pop
cli
mov
in
ljmp
xor
adc
ds
pusha
jmp
loopne
mov
stos
jl
or
aaa
leave
push
xchg
dec
mov
das
mov
repnz
mov
xchg
or
fisttpl
scas
pop
js
push
mov
lcall
fcomps
mov
cmp
shrb
jp
test
aam
mov
fistl
push
mov
and
cmpsl
mov
aaa
test
xchg
int3
jp
ja
and
pop
cmp
cmp
pop
jae
fidivl
mov
rol
hlt
cmpsb
cltd
lret
ljmp
pushf
daa
imul
inc
jmp
cmp
ficoms
and
or
data16
scas
mov
sub
jmp
jns
shr
xor
inc
loopne
je
mov
jle
and
adc
divl
sub
mov
jne
xchg
xor
cld
lods
fwait
mov
push
dec
jno
push
outsb
or
mov
sti
js
dec
jnp
dec
add
adc
jb
cmc
cmp
sub
je
mov
fistl
addb
mov
test
xchg
adc
insl
mov
jno
push
outsl
add
shlb
out
hlt
xchg
fstpt
aam
jecxz
push
push
insl
je
lret
add
int3
sti
cmpsb
imul
sub
push
xlat
inc
inc
rcrb
popa
jae
test
ficoms
xchg
std
add
sub
jp
or
insb
test
push
cmp
aaa
add
out
rcr
mov
cmp
xor
fwait
xor
pop
adc
in
inc
mov
mov
ja
mov
sub
jns
lods
jle
inc
dec
dec
adcb
mov
push
mov
cmpsb
je
adc
fcmovu
insl
sti
cltd
pop
mov
mov
inc
xlat
push
mov
pop
mov
or
das
insb
and
es
and
add
sub
add
clc
push
or
xchg
and
pop
add
pushf
add
jmp
in
xor
aad
jno
cs
adc
sbb
fstl
scas
sub
mov
iret
ds
mov
call
mov
dec
popf
sbb
mov
xchg
call
and
std
scas
and
mull
or
mov
jmp
jne
jecxz
mov
pop
outsb
shrb
jle
repnz
ret
mov
mov
mov
das
hlt
cli
and
add
add
push
fucomp
xchg
xchg
ret
ljmp
notl
inc
mov
dec
mov
loopne
sub
ss
cmp
add
ljmp
jmp
pop
test
sbb
js
fbstp
sub
add
inc
push
xor
inc
aad
dec
sahf
jmp
mov
mov
les
mov
stos
repnz
popf
sti
push
or
inc
add
arpl
mov
dec
sub
jg
sbb
xlat
add
or
xchg
movsb
rorb
repnz
ss
jnp
add
andl
jge
arpl
xor
adc
push
add
sti
jns
pop
mov
cmpsb
and
sbb
repz
mov
lock
sti
pop
and
mov
dec
mov
outsb
rclb
gs
jae
in
pushf
jp
mov
and
jb
sub
fcomip
mulb
in
movl
sbb
enter
out
cld
rorb
pop
jne
fistpl
jmp
jg
repz
loopne
in
pop
mov
jmp
lret
sub
cmp
add
cmp
adc
add
fildl
lea
inc
aaa
dec
imul
sub
fildll
and
pop
lods
lds
inc
inc
push
mov
xchg
push
or
xor
or
lret
add
pop
sahf
jp
shll
sub
fwait
out
in
inc
inc
sbb
sar
loopne
mov
addb
mov
out
push
es
sarb
test
popa
stos
mov
inc
mov
xchg
mov
pop
int
mov
mov
mov
js
loope
sbb
mov
dec
inc
mov
lahf
shlb
leave
sbb
jmp
arpl
pop
sbb
clc
aaa
push
jmp
mov
movsb
jg
fcmovb
mov
pop
popa
or
test
xchg
ficomps
or
scas
mov
jno
ja
mov
cmp
lret
pop
das
adc
pop
xchg
out
sbb
mov
mov
maxps
adcb
stos
outsl
jg
pop
xchg
movsb
gs
xor
xchg
loop
test
test
xor
decl
cmp
cmp
test
mov
fwait
mov
jno
or
xchg
stos
inc
add
mov
pop
mov
adc
in
mov
lods
jmp
lret
mov
and
mov
pop
cmp
into
sbb
xor
inc
pop
enter
bound
aas
and
clc
mov
push
imul
mov
xlat
cli
leave
stos
popa
mov
fwait
push
ret
mov
push
sbb
sarb
xchg
ret
scas
std
mov
adc
jb,pt
mov
or
or
test
stos
pop
push
adc
enter
mov
lcall
sbb
jne
xorb
mov
mov
jmp
sbb
imul
push
mov
or
xchg
or
loope
pop
pop
adc
sarl
mov
inc
sarl
int3
push
daa
add
mov
mov
arpl
ret
test
ret
xchg
jns
aaa
incl
cmp
mov
popa
mov
mov
xor
inc
jne
inc
pop
pop
sbb
pop
push
add
clc
in
xchg
mov
cmpsl
cwtl
and
fst
dec
lret
test
enter
adc
jmp
push
andl
dec
and
and
fcmovu
xchg
call
ljmp
test
nop
loope
inc
xchg
and
mov
mov
leave
sbb
mov
xchg
pusha
cmpsb
imul
mov
dec
aad
jnp
mov
xchg
fiaddl
mov
adc
sbb
jnp
adc
js
pop
lock
imul
mov
push
cltd
lahf
push
sbbb
mov
pop
pop
cmp
loopne
lret
mov
mov
insl
cmp
xlat
or
inc
clc
or
add
dec
jae
test
mov
negl
in
jno
sbb
fwait
xchg
iret
rcrb
scas
jnp
mov
outsb
dec
lods
imul
lret
xor
popf
and
mov
addl
addl
adc
cmc
add
and
pop
test
add
jge
push
or
and
jg
pop
add
mov
loopne
cmp
incb
div
dec
mov
dec
movsb
nop
add
mov
fwait
out
mov
std
cmpsb
cmp
cmp
cmp
psrlw
cltd
movsl
push
sbb
pusha
orb
cmp
test
push
mov
jb
mov
push
cmp
int
adc
test
dec
int3
xchg
cmp
cmp
xchg
add
xor
aam
lods
sub
jmp
jo
jg
add
test
push
loope
or
cli
incl
mov
sub
mov
fdiv
inc
jnp
sti
std
pop
jmp
shrl
push
xor
sbbb
inc
xchg
in
and
aaa
lock
mov
les
cmp
adc
and
and
sub
enter
fisttpll
ret
add
push
jg
out
mov
in
shrb
jne
orl
pop
push
sbb
icebp
lods
mov
pusha
cmp
xchg
mov
loopne
adc
or
aas
and
scas
rol
push
mov
pop
pusha
mov
outsl
mov
sub
xchg
inc
cmp
mov
ret
sbb
les
out
iret
add
shl
out
or
pop
outsb
sti
fwait
pop
and
sub
cli
es
out
jo
and
mov
loop
scas
cmp
in
inc
jb
fimuls
test
negl
cmp
out
push
leave
inc
xchg
fdivrs
sbb
add
and
and
ficoms
mov
xor
jo
mov
mov
fadds
icebp
aam
iret
dec
jb
negb
and
push
hlt
push
pop
sub
and
xlat
sub
testl
lea
icebp
hlt
or
subb
push
xchg
jg
sbbb
ret
push
clc
fstps
pop
jle
rcrl
inc
ss
stos
jecxz
sbb
stos
ljmp
xchg
adc
dec
outsl
imul
cs
lea
scas
dec
lock
and
repnz
push
adc
jns
je
fnsave
adc
cmpsb
divl
and
mov
scas
mov
mov
inc
xchg
in
lea
jmp
loop
inc
xor
fbstp
icebp
test
cmc
subl
inc
push
in
jo
loop
push
pop
mov
dec
in
insb
pop
adc
or
loope
rol
sbb
ja
jmp
inc
sub
orl
scas
or
lret
adc
cmc
sbb
shll
and
push
dec
jge
sub
popa
add
rclb
cli
aas
lock
add
pop
or
dec
mov
mov
pop
cwtl
js
incl
call
xchg
mov
push
cli
ffreep
inc
fwait
jle
stos
lret
mov
sti
dec
mov
in
shlb
xchg
xchg
sbb
clc
xchg
jno
testb
fnsave
sub
jbe
mov
fidivrl
aam
stc
out
mov
mov
in
cmc
xchg
jo
and
fucomi
push
lcall
clc
jae
mov
les
or
out
cmp
ret
and
push
and
jb
adcb
xor
fcomip
xor
xor
push
insl
mov
lahf
ja
adc
repnz
cmpsl
xchg
or
push
scas
out
xor
jo,pn
pop
ret
ljmp
add
sti
les
xor
rcl
inc
xorl
cmp
jle
int3
sbb
dec
bound
jp
mov
pop
shl
lock
in
insl
rolb
sub
xchg
sub
xchg
les
adc
add
movsb
add
mov
out
add
inc
and
inc
sub
dec
ljmp
xchg
jo
dec
cli
xchg
test
ret
adcb
ss
jecxz
inc
sub
movsl
call
jge
xchg
loop
loope
adc
pop
out
push
minps
das
sbb
mov
loopne
inc
cmp
xchg
cmp
jnp
adc
mov
mov
testl
or
add
sbb
sti
jecxz
movsl
mov
push
sbb
sbb
fisubrs
test
jge
xor
loop
fsubl
fsubrl
aaa
pop
jecxz
and
mov
and
rorb
sbb
arpl
jmp
adc
mov
pop
pop
or
pop
dec
pop
jne
jp
or
mov
imul
loope
push
cmp
push
outsb
es
push
xor
in
rcl
call
or
and
repz
xchg
mov
jle
daa
test
in
movsb
outsb
jecxz
and
lea
add
imul
push
mov
test
xor
imul
mov
push
push
lcall
mov
mov
mov
sub
shl
fisubrs
popw
jbe
add
xadd
push
or
clc
or
sub
mov
jle
adc
test
je
xor
push
mov
mov
sbb
or
and
scas
ja
jge
mov
add
bound
cmp
mov
xor
or
flds
je
cmp
arpl
or
cmp
push
fisttpl
cmp
scas
rorl
pop
pop
push
mov
or
jb
cmp
mov
fdivr
or
cld
std
es
in
dec
fmuls
pop
ficoml
push
dec
jmp
stos
cli
pop
add
popa
sub
popl
push
int3
addl
or
test
and
jo
or
ja
push
test
dec
sbbl
aad
es
je
idivb
imull
push
out
and
sub
inc
mov
mov
lret
nop
lret
inc
cmp
pusha
add
loopne
inc
sbb
push
xchg
sarb
add
adc
and
or
jbe
rcrb
inc
adc
mov
sub
mov
cmpl
sub
push
insb
or
stos
mov
in
cmp
pop
adc
xchg
jg
test
sbb
dec
mov
in
xchg
movsl
pop
sub
les
add
pop
rclb
clc
xor
inc
sbb
inc
or
fs
sbb
ljmp
shl
and
cs
scas
pop
sub
xor
and
fisubrl
push
and
push
sbb
mov
pop
mov
mov
adcb
leave
sbb
push
sbb
aaa
shlb
mov
mov
pop
je
add
jg
push
and
pop
mov
and
mov
andl
xchg
push
stos
mov
add
xor
mov
movsb
xchg
jo
pop
and
jo
shrb
fildll
loopne
push
sub
jns
popa
scas
ljmp
inc
jbe,pt
iret
cltd
inc
mov
cmc
insl
ja
jb
and
and
shll
dec
fcmovnu
jmp
out
mov
add
dec
arpl
add
subl
adc
mov
mov
icebp
jmp
out
adc
add
sub
xor
test
inc
shll
inc
leave
mov
jmp
addb
xchg
push
mov
inc
lret
insb
jg
orb
daa
push
outsl
subl
mov
dec
pop
mov
ss
enter
into
cwtl
dec
adc
push
xor
loope
and
sti
lret
dec
xlat
pop
jb
xlat
popf
mov
sbb
fisttpl
inc
mov
push
aaa
inc
and
adc
inc
cmp
pop
movsl
push
xchg
and
fiadds
sub
jg
sbb
int
scas
cmp
insb
push
xorb
test
xor
pop
or
dec
lock
or
sub
mov
add
and
test
pop
dec
cmp
and
inc
pushf
xchg
jl
rol
push
dec
adc
cmp
mov
sub
sub
mov
sahf
cmpsl
push
dec
js
clc
fwait
mov
xor
and
xor
das
inc
ret
cmp
movsl
xchg
cmp
cmp
sub
mulb
cli
pop
insb
loopne
cmpsl
in
ret
or
out
pop
cmpsb
mov
push
or
xchg
int3
rorl
and
mov
mov
clc
jns
js
push
gs
in
inc
insl
mov
loop
test
sbb
xlat
dec
cld
pop
js
loopne
mov
xchg
cmp
ljmp
dec
imul
mov
adc
and
xchg
lods
ret
mov
stos
and
and
ss
xchg
push
add
pop
adc
mov
les
push
xchg
movsb
call
xor
daa
lret
pop
and
adc
add
call
sbb
jle
sahf
xchg
sbb
mov
movl
add
inc
test
jne
push
into
pop
sbb
movsl
divb
int
ljmp
ds
push
add
bound
mov
fmull
loope
sbb
stos
cmp
jp
loop
jo
inc
pop
outsb
and
mov
fsubl
mov
push
ret
test
dec
mov
fisubl
mov
dec
xor
mov
loopne
add
ljmp
cmp
aaa
cs
mov
mov
pop
fwait
push
lods
lds
adc
aas
loopne
pusha
cmp
and
shrb
mov
sbb
shlb
mov
aaa
pop
lret
fbstp
mov
mov
xor
lds
add
shlb
rolb
xchg
pop
pop
inc
sbb
add
inc
or
pop
clc
ret
ret
dec
inc
test
mov
adcl
add
sub
popa
cli
aam
sub
scas
rcll
jle
mov
cmp
movsl
outsb
and
add
mov
nopl
jecxz
mov
inc
mov
pushw
orb
and
jno
and
sub
inc
pop
pop
mov
jecxz
lock
jo
imul
loopne
push
cmp
lods
icebp
pop
rorl
arpl
jg
jo
sub
je
aaa
es
outsl
push
add
data16
fildl
cmp
mov
je
fwait
inc
movsl
fsubs
outsb
insb
adc
mov
sbbw
stc
sbbb
push
fcomps
fbstp
dec
lock
add
inc
test
insl
jl
ljmp
enter
fiaddl
cmp
add
xchg
fcoml
arpl
jl
imul
enter
mov
sbb
pop
fadds
pop
push
cmpsl
cmpsb
jne
mov
adc
in
pop
xchg
jne
mov
les
xchg
xchg
jo
mov
jmp
loopne
in
push
sbb
in
mov
inc
jl
or
stos
sub
jecxz
fsubrs
insl
in
lret
scas
scas
lds
jl
and
inc
lods
aad
add
es
jbe
arpl
mov
cwtl
aam
pop
loop
hlt
cli
movsb
fcom
out
in
lods
rol
cmp
cmp
cmp
pushf
or
or
or
stos
mov
call
std
mov
das
je
and
push
xchg
jg
out
fisttps
pushf
icebp
mov
cmp
gs
and
lea
outsl
das
adc
push
dec
enter
jbe
adc
mov
rorb
add
popa
fwait
inc
fs
aas
push
mov
mov
xorl
icebp
pop
or
fstp
pushf
imul
pop
adc
mov
mov
shr
mov
int3
movsb
dec
jnp
mov
jbe
testl
xlat
sub
push
addl
add
jmp
scas
lods
ja
add
rcl
fists
leave
lret
and
or
inc
mov
aad
add
mov
jl
mov
or
push
jmp
mov
sub
adc
pusha
icebp
in
cmc
mov
inc
mov
ja
mov
daa
inc
incb
lea
outsb
fwait
push
insl
adc
sub
cs
mov
lea
jp
mov
jmp
xor
aad
pop
mov
ficoml
jbe
mov
xchg
out
push
movsl
pop
mov
pop
orl
in
iret
in
aad
dec
pop
lret
pusha
pop
mov
orb
in
dec
jl
xchg
jb
mov
cwtl
push
jle
js
test
xor
jecxz
jae
roll
xorb
or
xchg
jo
in
adc
aas
jae
mov
sub
hlt
ret
push
leave
flds
pop
cs
xchg
sub
aam
dec
popf
std
ja
insb
lret
data16
xchg
pop
sbb
sub
xchg
loopne
clc
fdivs
and
adc
cmpsb
mov
mov
sti
jne
insb
mov
or
insl
cmp
or
data16
test
roll
loope
pushl
inc
add
stos
sbb
dec
xor
pusha
cmp
shlb
hlt
call
arpl
sbb
mov
pop
icebp
or
pmullw
fiaddl
das
mov
or
pop
test
jbe
sbb
dec
sbb
push
lahf
cltd
in
call
cmpl
in
adc
out
sub
adc
popa
xor
movsl
pop
jmp
clc
add
int
insl
mov
sub
mov
pop
sbb
outsb
test
and
or
pop
stos
fdivr
or
mov
int
push
pop
push
stos
mov
jns
cmp
loop
test
pop
aam
sbb
sub
divl
jl
cmp
push
nop
cmp
sbb
fsubrp
in
imul
bnd
mov
movsl
mov
ret
xchg
cmc
int
test
xchg
push
mov
adc
aaa
sub
and
mov
pop
jp
push
add
pop
mov
aaa
jge
or
sub
ret
fwait
dec
jp
mov
das
jae
dec
and
sub
ss
inc
mov
fildll
push
push
addr16
cmp
dec
adc
in
push
fisttpl
repnz
outsl
shrb
inc
push
addr16
inc
inc
aas
inc
cmp
or
adc
std
and
sub
push
xchg
faddp
daa
fdivr
adc
mov
add
mov
xchg
or
mov
out
add
rcrl
fsubs
or
incl
aaa
mov
int3
imul
shlb
cwtl
mov
je
insl
mov
dec
insb
lds
push
jecxz
or
and
push
inc
sub
fadds
dec
mov
mov
pop
mov
and
es
pop
dec
fists
mov
and
xchg
adc
in
adc
out
sbb
mov
cmpsb
inc
inc
pop
xor
fisubrs
jle
sub
daa
fisubs
pop
push
xchg
push
aas
mov
mov
aam
inc
pop
adc
mov
in
movsb
jmp
nop
loop
inc
lcall
int3
insb
push
jns
jae
jnp
push
in
popa
mov
mov
pop
inc
pop
pop
inc
jmp
cmp
shrb
nop
mov
icebp
xchg
jmp
ss
dec
lret
push
pusha
jb
sbb
sub
mov
pop
fcmovnu
mov
sbb
fistpll
inc
sbb
stc
orb
arpl
cmpsb
mov
and
hlt
out
je
ret
push
insb
mov
nop
ret
jne
adc
mov
xchg
insb
xchg
rcll
fadds
mov
pusha
or
outsl
mov
in
cmc
xor
inc
mov
in
sahf
inc
std
scas
push
jo
mov
and
je
dec
repz
movsl
insl
sti
adc
lea
cmp
frstor
cltd
imul
or
push
jae
or
outsl
xchg
aam
xchg
subl
scas
inc
into
cmp
std
aad
mov
and
loope
cmpl
mov
push
cmp
cli
fucomip
call
cltd
stc
cmp
push
loope
test
aaa
pusha
cmp
push
adc
pop
shrb
cmovns
cmp
sar
xlat
push
cmp
mov
or
or
jbe
or
push
fucomip
or
or
ret
sarb
bound
popa
add
adc
xor
jae
lods
mov
push
or
mov
cmp
pop
rorb
add
mov
inc
inc
push
pop
sarb
pop
dec
jl
nop
xor
arpl
mov
loope
and
incl
ficoml
loope
xchg
pop
xor
std
add
jl
jle
pop
inc
cwtl
and
inc
test
jno
xor
fistpll
mov
fstpt
cmp
sbbb
loopne
movsl
jno
and
lds
pop
leave
push
scas
fcmovnu
lods
and
mov
addb
jne
loope
mov
mov
sti
test
add
icebp
dec
rcrl
in
or
sbb
mov
sbb
call
and
outsb
and
dec
xchg
shll
sahf
mov
jp
leave
pop
int
xchg
pop
insl
insl
jae
shll
push
je
mov
pop
in
cs
mov
leave
loopne
and
push
dec
sbb
add
sub
aas
mov
mov
mov
fistl
popf
std
sbbb
mov
lcall
sbb
std
inc
add
add
icebp
adc
mov
imulb
es
dec
and
mov
jb
cmpsb
jp
loop
mov
push
test
pop
xchg
mov
addl
popa
inc
sbb
cmp
psubsb
pop
fdivs
fnstenv
sbbb
add
test
jg
testb
add
sbb
adc
jge
out
pop
mov
out
ljmp
shrl
je
je
mov
push
call
mov
pusha
inc
xor
stos
addr16
adc
loop
aam
adc
sarb
sub
jb
dec
and
xorb
push
in
jo
jo
lea
mov
mov
dec
inc
scas
xchg
mov
push
daa
roll
mov
sub
mov
push
and
pushl
popa
cmp
mov
je
cmp
mov
aad
pop
lret
adc
or
scas
sbb
mov
jmp
xchg
xchg
int
sbb
mov
and
movl
iret
call
add
inc
in
mov
nop
sub
jbe
jl
mov
int3
frstor
sarl
push
loopne
xor
or
pusha
mov
push
stos
mov
jno
xor
jbe
push
das
jbe
xor
sub
aam
jne
pop
jge
or
enter
out
cmp
insl
fistl
mov
xor
mov
je
movsl
and
lcall
in
dec
cmpb
clts
or
loopne
inc
lret
xor
movsl
and
mov
cmp
jecxz
pop
mov
arpl
repnz
lea
test
mov
pop
add
ret
jge
lock
test
sbbb
sub
ret
outsl
insl
fiadds
ds
stos
loope
xchg
fdivrs
inc
les
pop
mov
jne
dec
xor
imul
ret
js
xor
sub
loope
cmp
fisubl
mov
iret
lods
jmp
popf
or
pop
xlat
fimull
jg
lret
sub
jo
mov
je
xlat
xor
daa
xor
test
mov
mov
xchg
pop
fs
push
pop
in
movsl
or
scas
pop
inc
jmp
rorb
loop
insl
mov
sbb
or
mov
and
shlb
in
js
push
jnp
jnp
mov
mov
inc
and
scas
icebp
js
ds
mov
mov
lods
inc
mov
mov
addl
sub
push
adc
dec
loope
repz
pop
js
or
pop
sub
call
mov
jg
es
pop
clc
jo
sub
pop
ljmp
clc
sarb
pusha
xchg
jo
cmp
pushf
adc
xchg
add
roll
mov
scas
xor
fwait
loope
aam
inc
movups
add
mov
jecxz
mov
push
loopne
mov
add
inc
adc
sub
loopne
mov
rcr
mov
negb
fsubs
mov
mov
jl
jmp
sbb
clc
xchg
push
push
sub
test
outsl
test
mov
aas
inc
or
or
lahf
push
stos
or
adc
aas
scas
pop
sub
xchg
es
adc
push
les
mov
out
pop
cmc
pushf
loope
pop
add
jle
jns
inc
add
mov
pop
mov
sub
mov
inc
sbb
inc
dec
sbb
and
jo
adc
mov
xchg
jg
xor
sbb
jno
dec
push
push
xor
aas
add
add
fwait
push
dec
pop
push
and
mov
sub
orl
das
cwtl
and
cmpb
jb
cmpsl
push
inc
jb
push
outsb
add
xor
mov
add
popf
inc
mov
ret
lds
sbb
jo
pop
sub
cltd
lods
mov
movsl
adc
popf
pop
clc
pop
lods
mov
inc
cltd
aam
sbb
or
push
movsb
xor
sbbb
add
and
xor
cmpl
add
shlb
pop
mov
pop
ljmp
les
sub
sub
rcr
xchg
mov
leave
in
pushf
mov
ret
or
adc
ss
out
das
and
pop
inc
lret
lods
inc
dec
int3
mov
pminsw
inc
lcall
sbb
fadds
fisttps
pop
push
sub
lea
cmpsb
and
inc
es
push
js
dec
and
add
or
dec
mov
inc
sbb
cmp
stc
lods
lea
lock
mov
push
fists
add
inc
xchg
ds
pop
sbbl
lcall
cwtl
mov
cmp
inc
jmp
lock
pusha
testl
in
nop
rclb
jb
ret
push
sarb
sbb
fstl
movsl
in
push
jg
adc
mov
popa
pop
sub
xor
inc
xlat
lock
mov
mov
in
jnp
cmc
aaa
jbe
inc
out
sbb
dec
mov
fildll
fwait
ljmp
jmp
adc
mov
push
mov
test
cmpsb
fidivs
inc
inc
outsb
mov
int
mov
sbb
mov
push
mov
mov
movsb
out
mov
adc
push
pop
popa
inc
int3
cmpsl
popa
adcl
pop
bound
inc
pusha
or
in
cmp
mov
ss
sub
mov
mov
xchg
push
notb
pusha
test
lret
push
xchg
jecxz
lods
shlb
or
cld
add
in
push
call
enter
addr16
loopne
mov
push
popf
hlt
mov
sbb
cmp
or
lock
push
sbb
and
test
cmp
out
orb
mov
repnz
hlt
fbstp
xor
dec
lahf
cmpsl
add
or
das
mov
enter
push
repnz
sbb
mov
clc
jmp
cmpsb
adc
or
roll
inc
dec
pop
pop
sbb
loop
xchg
leave
cmp
ret
roll
and
mov
orl
push
mov
adc
mov
or
pop
js
mov
xlat
outsl
jle
lahf
xchg
cmp
push
push
scas
dec
xchg
add
sub
dec
aas
add
call
cmp
loop
or
inc
in
push
sbb
es
lods
adcb
ljmp
inc
cmp
sbb
out
mov
add
lods
or
sub
cmp
outsb
mov
sub
arpl
jb
test
mov
push
sbb
mov
jne
ret
ja
aaa
push
sub
jl
sub
mov
adc
fisubrs
lds
pop
push
sbb
or
dec
test
or
xchg
into
mov
hlt
dec
mov
loop
or
push
js
fisttps
xlat
ret
rolb
arpl
mov
sub
adcl
in
and
xor
inc
fsubp
popf
mov
int3
dec
mov
mov
stos
sbb
mov
lods
sub
shrd
fdivs
cmovb
dec
les
adc
cmpsb
fnstsw
sarb
ja
outsl
add
inc
and
xor
push
dec
sub
or
mov
adc
loopne
cmpsb
push
leave
mov
inc
lods
fcoml
sahf
fcmovnb
fldt
scas
xorl
jbe
push
imul
inc
fbld
call
push
cmp
cmp
add
xchg
sub
js
orl
mov
mov
jne
movq
and
and
adc
aaa
fsts
inc
shr
inc
fmul
cmpl
es
andb
cmpsb
fidivrs
int
js
dec
daa
and
or
lods
add
imul
lcall
test
sub
pop
adc
jno
or
pop
cmpsb
push
inc
push
loop,pn
imul
sbb
sbb
bound
sbb
and
sti
inc
inc
xor
mov
pop
sub
cli
mov
pusha
jl
aam
jge
les
outsb
sub
inc
or
cmp
xor
sub
or
add
pop
cmp
push
movd
xor
lea
stc
rcl
ds
ja
repz
pop
cmp
adc
xchg
lcall
add
or
push
mov
cmc
sbb
inc
mov
cmp
ds
fwait
push
mov
lret
fisttpll
pop
push
jecxz
mov
mov
jle
cli
orb
push
mov
xchg
fisttpl
xor
loope
and
andl
fs
and
test
mov
or
stos
jb
add
cmp
bound
or
and
dec
cmp
roll
into
hlt
aaa
inc
scas
test
aad
out
test
push
add
mov
cmp
mov
xchg
addr16
inc
sbb
add
ret
xor
cmc
pushl
mov
shll
test
pop
mov
add
fdivrs
stos
insb
pop
scas
dec
test
jg
or
aam
mov
add
fistpll
cld
pop
mov
jle
rcr
ficoms
rcll
xchg
dec
xchg
inc
enter
xchg
mov
test
in
jg
push
and
or
shl
pop
incl
xchg
insl
ds
scas
mov
jp
inc
cwtl
or
mov
adc
push
mov
sbb
adc
mov
insl
scas
push
sbb
stos
xor
loop
pop
mov
movsb
push
xor
xor
inc
orl
ret
or
push
xlat
outsl
adc
out
jbe
jo
pusha
add
or
pop
outsl
and
inc
inc
ja
add
mov
xchg
xor
cmp
sub
xchg
cs
inc
adc
mov
mov
scas
cmc
and
subb
call
lea
rcrl
pop
xchg
sbb
rorl
mov
cli
mov
cmc
loope
sahf
xchg
pop
mov
add
pop
in
ret
mov
sbb
lds
mov
cld
xchg
dec
addb
push
or
lret
or
and
sbb
sbb
jnp
jg
dec
pop
jmp
pop
pop
stos
mov
sub
loopne
fwait
stos
dec
mov
stos
adc
sarb
aam
sub
inc
jl
jle
xor
sub
cmpb
sbb
fsubl
mov
lock
cltd
cmpb
jg
mov
fstpt
cwtl
or
add
push
push
test
repnz
pop
sti
sub
bound
pushf
cmp
xor
lea
sbb
mov
mov
mov
sti
mov
jnp
rolb
sbb
jle
add
lahf
mov
fs
push
add
sbb
popa
aam
fdivrl
aam
testb
icebp
mov
mov
in
out
sbb
loopne
int
mov
mov
lcall
push
test
ret
popaw
imul
adc
cmpb
cmp
jno
mov
in
nop
imul
and
mov
cmc
add
and
inc
es
jmp
sub
dec
fdivrl
mov
push
sub
in
and
or
rorb
lret
insb
jg
xlat
mov
push
popa
xor
fdivr
mov
fs
cli
outsb
cwtl
pop
mov
sarl
icebp
fadds
andb
pop
cmpsl
dec
cmp
daa
daa
shrb
sahf
movsb
and
rorl
pop
sbbb
adcl
and
jg
ret
sbb
pop
clc
sbb
sti
mov
and
vpunpcklwd
xor
mov
cmpsb
inc
dec
inc
iret
lret
shl
fisubs
jo
mov
out
cmp
test
lret
lods
lcall
je
push
xchg
xchg
inc
xor
pop
js
sbb
sbb
adc
shlb
ja
nop
ficompl
sti
pop
pop
or
push
xlat
adc
pop
xchg
add
dec
out
pop
fiadds
mov
xor
cmpsb
fistpll
pop
sti
and
xchg
sub
and
jo
push
jno
cmp
fistpl
push
sub
cmp
and
insl
arpl
sbb
jae
stc
sub
jl
pop
inc
dec
pop
lods
lret
jo
inc
push
sti
cmp
out
loop
and
lods
dec
pop
push
sbb
adc
addb
mov
sub
pop
adc
lock
fldt
movb
and
mov
mov
mov
and
call
test
jnp
adc
mov
jl
jl
mov
jp
dec
aad
mov
lcall
push
xor
add
cmpsb
mov
popf
cwtl
inc
js
ss
cmp
push
xor
mov
mov
cmp
icebp
aaa
jbe
dec
mov
pop
pop
rolb
and
enter
xchg
aam
fimull
mov
stos
pop
int
fistpl
inc
mov
push
and
clc
push
and
lahf
sub
push
clc
xor
jb
loope
adc
sbb
jbe
ss
jne
dec
je
cmpsb
das
mov
or
sbb
jecxz
mov
xor
dec
sbbb
sub
or
xor
pop
pop
jle
xchg
or
or
dec
and
mov
push
lock
push
push
jecxz
push
and
fidivrl
mov
outsl
mov
mov
adc
or
jl
inc
out
aam
in
mov
adc
fnstenv
push
mov
ss
jmp
xchg
mov
pop
rcll
addr16
dec
push
dec
in
in
clc
and
iret
jne
paddb
or
ror
sbb
push
stos
je
or
fldenv
icebp
cmpsb
pop
popa
in
and
mov
adc
outsl
or
inc
jne
mov
cmp
jnp
mov
push
shrl
push
rclb
test
xlat
imulb
xlat
lds
adc
jp
cmpsb
sbbl
testl
jns
or
pop
cs
sub
lret
push
aad
in
mov
inc
jge
pop
fwait
addr16
loopne
mov
in
xchg
out
jle
adc
add
sarb
mov
mov
lock
lds
mov
cmp
push
int3
push
jae
loop
cmp
push
adc
add
lods
sbb
cmp
stc
das
inc
fnsave
cmp
call
test
or
out
aas
dec
cmpsb
jbe
fwait
push
push
add
cmp
lods
rorb
jge
xchg
mov
lods
les
mov
enter
clc
outsl
sbb
pop
sbb
mov
mov
sbb
pop
insb
loop
inc
add
mov
mov
mov
xchg
push
and
dec
nop
add
fstpt
add
dec
sbb
mov
pop
pop
push
and
cwtl
xor
pop
fsubl
xlat
fildl
repnz
sbbl
insb
jns
mov
xlat
push
jle
sbb
jno
imulb
inc
cs
js
push
inc
in
add
addr16
jbe
mov
ss
push
jl
jb
jecxz
pop
popa
mov
push
mov
dec
les
push
lock
fistpll
push
fs
les
enter
dec
inc
sarl
fdivrl
rorb
ffree
in
push
add
cld
data16
jmp
rorb
inc
sbb
cmp
fisubrs
daa
or
xchg
iret
push
xor
out
fisttps
stc
aad
mov
adc
mov
shrb
cmp
out
sahf
add
adc
push
mov
xchg
aas
sub
outsl
jecxz
scas
mov
je
sub
adc
cwtl
cmp
lods
add
lods
call
and
out
out
push
dec
aad
cmp
shrl
lods
adc
mov
add
adc
xchg
inc
mov
jo
mov
rorb
mov
mov
jae
rorl
or
test
and
mov
or
lods
pop
insl
inc
je
xchg
adc
imul
jmp
divb
and
fcom
pop
fsubl
insb
test
ret
sti
jbe
test
into
ror
cmp
fldcw
dec
dec
fnstsw
xchg
push
push
das
std
mov
adcl
mov
jg
call
lret
push
les
movsw
imul
das
sbb
add
lcall
sarl
lds
stos
insl
movsl
sub
rcll
pop
ljmp
lock
call
icebp
sbb
adc
rcrl
pop
jb
jp
test
and
push
fnsave
mov
and
xchg
mov
xor
push
hlt
lods
fidivl
or
pushf
jle
cmp
xor
cs
les
lea
outsl
xchg
nop
test
mov
insl
mov
fstpl
and
or
mov
xlat
inc
cmpsb
add
sbb
sub
pop
push
add
adc
mov
fcomp
hlt
out
inc
inc
cmp
bound
incl
das
cmp
mov
cmp
lods
mov
add
add
mov
adc
xchg
sub
ret
int
iret
or
jmp
mov
outsl
dec
ds
stos
popf
lods
pop
aam
or
xchg
mov
or
mov
out
jnp
sahf
loopne
inc
scas
lods
mov
fwait
push
lods
enter
loopne
jbe
pop
ljmp
adc
scas
mov
outsb
cmpsb
lret
mov
stc
cs
cmp
test
mov
push
aaa
ljmp
adc
fs
sbb
and
orb
dec
les
insl
and
fs
xchg
daa
jge
pop
neg
jle
mov
mov
inc
cmpsb
add
jl
in
and
add
pop
pop
or
in
xchg
jl
push
pop
push
xor
adc
mov
xor
scas
and
data16
add
outsl
mov
loop
push
sub
aas
je
mov
pop
inc
pop
in
pop
and
add
fbld
add
and
xchg
mov
mov
lods
out
jo
test
jecxz
loopne
fs
cmc
push
dec
fdivrp
sti
fwait
clc
das
xchg
and
cmp
cmpsb
push
ret
pop
aaa
mov
mov
sub
xchg
sub
mov
out
xchg
mov
xchg
mul
das
je
aas
adc
movsl
imul
mov
ja
inc
lock
pop
rep
ret
push
pop
mov
mov
arpl
dec
ds
jp
xor
gs
clc
outsb
push
push
not
push
jmp
sub
sbb
jp
hlt
pop
fcomi
cmp
ljmp
sbb
jle
bound
test
cmpsb
divb
mov
dec
jecxz
lods
loop
rcr
movsl
cld
rclb
test
jo
enter
ficompl
in
stc
dec
icebp
imul
jne
daa
arpl
xor
mov
adc
adc
rolb
clc
aas
ret
outsb
mov
and
loop
or
or
push
and
sub
loopne
lods
scas
stos
neg
orb
xor
ja
jnp
inc
sbb
push
ljmp
popf
jns
xchg
in
pop
fisttps
jp
ret
leave
sub
push
inc
ljmp
push
inc
fwait
sub
mov
xor
sbb
jle
test
pop
dec
jl
sti
ljmp
sub
add
ret
movsl
push
or
xchg
test
cmp
movsb
xchg
adc
imul
pop
lock
mov
mov
jno
jno
aaa
dec
inc
jo
fstpl
lcall
adc
stos
mov
add
sbbl
jp
mov
fnstenv
insl
bswap
rcrb
add
lods
insb
fidivrs
repnz
mov
xlat
ret
popa
ficoms
adc
cmp
inc
das
or
dec
dec
je
pop
jb
pop
data16
cld
lods
mov
sbb
lcall
sti
jmp
xchg
adc
test
mov
jmp
add
mov
inc
mov
dec
out
cmp
pusha
jnp
lret
pop
leave
cltd
outsb
dec
sub
mov
mov
mov
pop
jp
cmp
sbb
inc
cmpl
cmp
std
lods
lcall
xor
cmpsb
and
adc
arpl
sbb
ljmp
adc
mov
pop
jns
mov
fidivl
rcr
shrl
jns
fistl
jecxz
adc
mov
cli
jo
repnz
push
cmc
or
xlat
fistpll
pop
mov
and
and
or
cmp
fdiv
adc
jp
ljmp
rol
xchg
faddp
mov
mov
insb
ja
fisubl
fists
scas
adc
outsb
pop
adc
or
les
das
mov
rolb
adc
or
imul
or
push
sbb
and
ja
jb
dec
mov
or
push
dec
movsl
dec
xlat
jge
mov
cmp
add
inc
lret
jno
fisttpll
inc
xor
test
mov
mov
stos
or
das
or
push
rolb
lds
std
imul
adc
pop
xor
cltd
out
clc
mov
shlb
jo
into
in
insb
cs
aas
add
ljmp
js
push
shl
in
js
fwait
sbbb
jmp
dec
mov
inc
inc
ja
xchg
xor
mov
outsb
call
loopne
jae
pop
je
out
push
aad
lods
pop
or
jp
das
mov
rol
sub
mov
mov
pop
push
dec
aas
and
cmp
fsubr
rcl
icebp
lea
jnp
cmp
sub
mov
lahf
js
xor
roll
cmpb
cmp
daa
push
arpl
inc
adc
or
sbb
xor
jno
and
ret
sar
addb
inc
jo
loope
test
jmp
aaa
loop
cmp
xor
cmpl
push
outsb
pop
mov
popf
idiv
jne
in
jecxz
mov
xor
cmp
add
cmc
push
out
outsl
xor
std
and
outsl
xor
ja
cmc
pop
icebp
dec
outsl
mov
movsl
jge
dec
fwait
mov
jo
mov
cmp
xchg
sbb
mov
movsl
ss
insb
add
outsl
sbb
dec
call
lock
fsub
mov
or
xchg
adc
std
outsl
das
loope
ja
loopne
mov
js
ja
outsl
popa
popa
inc
mov
mov
push
sbb
rorl
xchg
cmc
mov
adcb
xor
stc
xor
cmp
sbb
mul
fildll
fwait
push
cs
sbb
mov
aad
daa
sub
cmp
dec
std
rol
outsl
adc
and
ljmp
sub
mov
pop
aaa
mov
loop
lods
or
mov
sarl
cmpsl
mov
fsubrs
and
pop
xor
icebp
pop
jg
and
test
imul
sarl
test
jecxz
mov
jb
mov
add
fildll
nop
inc
das
or
inc
mull
add
adc
imul
pushf
push
inc
cli
arpl
inc
cmp
ret
mov
loop
jo
daa
sbb
mov
sti
out
stos
pushf
mov
mov
imul
pop
dec
or
shll
lds
sbb
or
mov
cmpb
xor
popf
xor
push
faddp
pop
pop
mov
repnz
rcr
repz
out
imul
jg
test
push
mov
push
push
mov
lahf
out
inc
mov
loope
jp
and
fcoml
test
inc
movsl
sub
or
addr16
inc
cli
test
fstpt
mov
and
xchg
rcrl
push
lret
shlb
stc
sub
jo
mov
pop
and
jnp
imul
rol
push
aas
inc
mov
pop
dec
inc
stos
push
adc
mov
test
jbe
jne
inc
outsl
fdivr
cs
dec
and
xor
aaa
daa
pushf
add
push
pop
push
push
and
pop
xor
push
add
cltd
test
mov
xchg
or
inc
fcoml
add
and
gs
jl
inc
adc
add
test
add
or
les
mov
mov
cmp
fisttps
out
dec
or
add
shlb
or
fwait
icebp
fwait
mov
mov
dec
and
dec
mov
push
nop
aam
lods
dec
xchg
mov
sbb
mov
loopne
fiadds
pop
jno
pop
mov
push
iret
addr16
cli
clc
fistps
shlb
jmp
xor
adc
inc
inc
stc
and
incl
movsl
dec
js
aas
lret
dec
in
loopne
pop
test
dec
lea
mov
jo
adc
pop
or
cmp
iret
or
outsl
or
repz
mov
mov
roll
inc
lods
ljmp
sub
sti
data16
jns
into
xchg
xchg
fisttpl
inc
cli
pop
mul
jae
js
arpl
cmc
jle
movl
in
or
popl
out
mov
insb
mov
jo
mov
popa
mov
and
je
dec
mov
into
sar
ja
push
fstl
sbb
popa
test
stos
lea
cmp
jg
jg
pusha
mov
mov
mov
or
add
add
mov
js
mov
mov
jae
out
or
mov
fiaddl
mov
fidivs
dec
pop
jns
inc
push
inc
and
dec
ret
jp
aam
pop
push
out
andb
popa
lock
jl
cs
add
in
or
mov
dec
pop
pushf
xlat
jp
test
outsl
in
popa
mov
call
xchg
stos
inc
rolb
lcall
jle
sub
fisttps
push
xchg
nop
jb
mov
arpl
shll
jle
push
scas
cli
es
push
xchg
lahf
je
pop
cmp
pop
loope
es
adc
loop
fsubrl
push
push
mov
loop
hlt
pop
lret
rorl
mov
jbe
jnp
xchg
into
pop
dec
pop
xor
pop
adc
inc
add
mov
push
push
lahf
add
mov
pop
mov
clc
sub
popa
subl
std
inc
pop
fucomip
and
nop
push
jo
shrb
xchg
dec
jge,pn
xlat
jbe
ja
stos
inc
int3
inc
les
or
dec
js
or
adc
lock
mov
jmp
push
add
mov
cmp
mov
mov
dec
fnstsw
jmp
sti
jo
enter
je
pushf
jge
loop
in
and
mov
stc
aam
jbe
push
std
sbbb
mov
incl
cmp
mov
xchg
fidivrl
loopne
cmpsb
xorl
out
popf
loopne
cmpl
adc
inc
pusha
add
mov
add
pop
shrl
mov
adc
cmp
mov
cltd
ds
ja
movsb
rolb
test
rol
jecxz
sbb
dec
test
pop
cs
cli
mov
gs
adc
aas
fs
popf
add
fwait
xorb
movsl
xchg
mov
jb
push
ficoml
cmpsb
dec
filds
push
fstl
xlat
add
mov
adc
fistps
or
mov
es
sbb
gs
inc
mov
dec
ret
and
loop
fsubl
and
adc
cld
or
jle
jbe
aam
or
aam
test
je
loope
xor
mov
sbb
jb
outsb
mov
js
push
dec
inc
insb
ja
fstpt
mov
mov
aam
cmpsb
pop
rcll
cmp
dec
lods
hlt
xchg
clc
pop
add
scas
cmpsl
push
jl
dec
subb
cli
xor
adc
pop
leave
cmp
addb
add
fldenv
gs
mov
push
adcb
roll
push
fdivl
std
mov
repnz
inc
pop
fisttps
cmpsb
adcl
dec
shl
xor
add
and
leave
sub
and
push
mov
and
cmp
sub
das
call
cmp
dec
jge
xor
or
sub
xor
aam
push
inc
daa
mov
out
mov
mov
dec
xchg
stos
clc
fbstp
cli
repz
rol
in
jo
jo
loope
inc
mov
cs
lret
mov
jg
lock
and
faddl
aad
pop
xchg
and
xor
push
cltd
ficoml
fcmovnbe
mov
cmpsl
sub
inc
sti
stos
mov
mov
out
or
mov
leave
push
push
pushf
rorl
pop
lret
repz
pop
pop
fninit
cmp
incb
outsl
pand
into
es
adc
pop
and
rorl
aam
xor
test
or
mov
dec
fildl
in
mov
sbb
insb
mov
clc
jbe
push
mov
push
movsb
jb
jp
mov
mov
mulb
std
sbb
pop
bound
inc
bswap
mov
dec
dec
sub
idivb
xchg
call
rcrl
jmp
xchg
xor
and
mov
dec
xchg
aas
cmp
idivl
scas
cmp
sub
mov
shll
add
dec
jnp
jmp
hlt
aaa
stos
test
jae
dec
mov
outsb
out
push
out
pop
mov
inc
xchg
mov
or
call
mov
sbb
repnz
xchg
sahf
and
mov
fdivs
sub
dec
aad
mov
insl
inc
mov
popf
cs
call
push
add
outsl
nop
and
fbstp
add
lock
mov
out
sub
sub
outsl
or
jnp
cmp
xor
push
in
dec
pop
test
or
push
lods
subb
ret
icebp
lea
jg
sub
ret
pusha
push
out
adc
mov
sbb
push
cmp
lcall
mov
es
lods
mov
loop
and
inc
shlb
fidivrs
notb
fsubs
inc
inc
out
add
xchg
inc
shrb
dec
push
add
adc
and
mov
ljmp
sub
cmp
xor
cmp
int
fbld
or
push
popa
and
or
sub
xchg
loopne
pop
add
xchg
xchg
mov
xor
inc
mov
outsl
dec
dec
inc
push
daa
inc
lock
pop
jmp
incl
aam
mov
es
xchg
and
adc
mov
addr16
inc
js
aaa
mov
lret
lods
and
ja
fsubl
lcall
inc
pop
mov
push
mov
mov
inc
pop
and
push
pop
setno
lahf
mov
dec
addl
sti
xlat
orb
in
sbb
xchg
push
or
test
push
mov
icebp
outsl
lret
jno
mov
push
aad
inc
imul
jle
pop
add
cmpl
bound
aad
andl
pusha
inc
cmp
into
js
xor
les
in
rcl
jne
ljmp
fwait
pop
adc
pop
pop
testb
adc
pop
pop
stos
mov
test
orb
bound
mov
jo
outsb
sub
and
icebp
stos
inc
mov
jno
filds
loop
cmp
sub
call
popa
int
addl
mov
mov
rol
aaa
mov
pop
add
xlat
shl
sub
jmp
scas
mov
jne
loop
cmc
fnsave
icebp
jb
push
push
or
push
mov
xor
sti
ljmp
mov
dec
sub
sarl
xor
popa
ret
lea
cmp
mov
sbb
jae
hlt
test
and
std
jg
xor
and
add
loopne
call
movsl
loop
jge
jb,pn
sub
mov
popf
bound
fwait
dec
out
pop
sbb
pop
dec
popf
or
push
dec
test
cltd
dec
mov
fistpl
sahf
dec
xchg
xchg
cmc
pop
sti
dec
sbb
in
notb
jns
jle
arpl
test
add
or
jecxz
hlt
adc
sbb
decl
cltd
adc
jae
addb
aam
stc
and
popa
shll
inc
push
icebp
jnp
adc
test
lods
sbb
loop
cld
sub
shrb
pop
int3
or
aad
orl
sbb
xchg
clc
push
out
pusha
adc
shlb
addr16
les
adc
xor
mov
insl
cs
in
fldl
and
je
push
mov
mov
fnstenv
sbb
inc
les
stc
inc
std
fwait
outsb
mov
andb
int
sub
xorl
cld
adc
lcall
or
xchg
out
fdivr
xor
negl
sbb
or
roll
inc
cs
jge
lock
inc
lahf
pop
decl
mov
shl
adc
xchg
jge
fdivl
aas
test
mov
jle
inc
fwait
stos
mov
ljmp
push
add
aad
ror
ret
jbe
push
mov
pusha
imul
fnstsw
ret
or
out
push
cmp
loop
push
cltd
push
roll
fistl
pop
xchg
adc
clc
dec
stos
cmpsb
inc
arpl
push
sbb
cli
in
xor
inc
adc
jnp
cld
data16
cmp
dec
hlt
push
or
and
push
or
inc
cli
sbb
shll
fstpt
dec
stos
arpl
mov
pop
clc
mov
nop
int3
cmpsl
lds
sub
aam
andl
das
jl
push
adc
jo
cwtl
mov
jecxz
push
xor
mov
imul
inc
movsb
cmp
mov
xor
out
pop
sub
and
sahf
cmp
xor
aad
sbb
out
or
cmpsl
arpl
pop
sbb
push
das
sub
ljmp
ljmp
cmp
xchg
lods
cmp
jno
jmp
loopne
ds
jno
cmp
pop
push
cmpsb
jp
cmp
adc
lcall
dec
mov
hlt
loop
das
adc
hlt
pop
add
push
cs
push
ja
xchg
cli
sub
dec
int3
mov
xchg
pmaxsw
dec
sbb
loopne
out
push
cmpsb
cmc
loope
push
pop
jo
mov
aas
mov
xchg
or
dec
lret
movsl
in
or
pop
push
jg
dec
inc
adc
nop
cli
aaa
cs
or
inc
inc
cmp
in
jl
movsl
mov
cmp
stc
ss
and
fdivrs
mov
mov
mov
xchg
adc
fwait
pop
jmp
out
pop
stc
or
xor
mov
jl
xor
pop
mov
sbb
mov
leave
stos
shrb
xchg
mov
or
ret
stos
or
lods
mov
enter
les
sub
rcl
sti
cmc
dec
stos
cs
dec
add
add
sub
data16
add
insb
jge
cli
imul
sbb
xlat
psraw
jo
add
test
cli
or
or
or
sbb
sarl
cld
push
sub
sbb
ljmp
cmp
dec
mov
pop
push
rolb
in
sbb
call
std
jl
and
and
mov
mov
lret
stc
lret
dec
gs
ljmp
nop
mov
aas
rcrb
and
and
orl
mov
jo
cld
idiv
out
pop
popa
pop
add
add
mov
adc
lar
int3
inc
add
inc
testb
outsl
decl
ret
fsubp
sub
xorb
out
pop
or
mov
fisttps
mov
push
and
jbe,pt
fistps
mov
out
arpl
push
shll
test
sbb
insl
cmp
mov
pushf
cmp
xorb
push
cli
xchg
jns
les
cwtl
mull
in
mov
data16
mov
add
mov
add
and
test
jle
bound
addr16
lods
insl
pop
data16
push
lods
inc
in
call
nop
add
mov
les
std
cmp
lahf
test
outsl
mov
inc
inc
loop
add
mov
mov
adcl
int3
mov
pop
jo
and
xchg
sbb
jb
mov
and
push
sub
daa
leave
cmp
fdivrl
sbb
cmpsl
or
mov
sub
mov
adc
iret
push
mov
or
loop
cli
add
add
push
les
or
xchg
inc
push
dec
sbb
decb
mov
inc
nop
mov
xchg
push
jno
adc
mov
shlb
ljmp
sbb
push
xor
pop
fidivrl
xchg
in
pop
cmc
out
inc
jne
pop
out
mov
dec
and
cmp
cwtl
sub
add
fnstsw
or
nop
add
jae
push
inc
jmp
mov
or
fdivl
push
sti
mov
mov
mov
push
push
mov
lds
push
mov
stos
icebp
add
xor
xchg
call
pop
test
mov
pop
dec
sub
adc
pop
mov
mov
lock
sbb
hlt
inc
xlat
mov
jbe
xlat
test
jno
push
test
imul
push
das
scas
sbb
push
aaa
loope
mov
jg
jecxz
and
pop
or
cli
mov
mul
mov
adc
les
ljmp
mov
movsb
dec
insl
stos
pop
push
or
popa
dec
std
test
adcb
jmp
or
insb
test
jg
sti
enter
lret
subl
mov
adc
shl
pop
mov
adc
sub
icebp
ret
and
ds
mov
push
cld
daa
and
pop
out
push
mov
cmpsb
mov
mov
je
inc
mov
xor
and
nop
mov
lahf
dec
test
roll
and
xor
cli
imul
jbe
mov
dec
xor
mov
jle
adc
push
or
mov
add
fstpl
xor
add
or
mov
cwtl
or
pop
cld
mov
in
adc
pop
js
testb
cmp
pop
or
ficoms
pop
in
push
push
pushl
fsubrs
jo
bound
add
push
stos
push
inc
decl
mov
adc
lock
orb
mov
jp
fnstsw
imul
call
fisttpll
add
and
and
add
mov
pop
outsl
test
sbb
pop
jno
outsl
cmpsb
sbb
xor
or
rolb
adc
icebp
jle
mov
int3
xor
bound
aas
and
fbstp
aas
or
andl
jmp
nop
push
in
sub
hlt
repnz
and
pop
mov
pop
push
add
mov
aaa
je
call
pop
mov
jbe
movsl
adc
and
inc
in
stos
stc
lahf
int
test
add
fwait
or
sub
jae
push
mov
mov
sub
mov
adc
in
or
mov
mov
mov
or
or
push
push
and
out
cmp
and
pop
lds
xchg
filds
or
rep
stc
push
inc
pop
mov
mov
push
sbb
mov
pop
cmp
or
cmc
fwait
jb
idivl
pop
sub
fimull
sub
xchg
pop
pop
rorl
adc
jl
add
lret
icebp
jg
mov
inc
shl
pop
nop
scas
xchg
inc
mov
out
or
mov
inc
hlt
out
pusha
pop
mull
add
lock
fwait
aad
and
add
shl
shlb
push
or
enter
dec
push
push
or
mov
test
ret
add
mov
lcall
or
movsb
or
mov
mov
lock
js
jo
cwtl
shlb
cmp
or
loopne
jne
scas
dec
bound
pop
into
dec
sbbl
ret
adc
mov
inc
outsb
ret
push
ja
xchg
arpl
test
subl
setae
xchg
mov
push
stc
jg
and
mov
lret
fisubrl
mov
mov
outsl
imul
xlat
add
je
mov
sti
pop
call
andl
insb
jg
push
shrb
gs
jp
or
imul
loop
add
lret
add
in
loopne
imul
push
sbbb
cmpsl
pop
cmp
fidivl
xchg
je
cmc
loope
loope
jg
fildl
mov
inc
adc
mov
lret
push
mov
jecxz
jg
fidivs
jbe
paddb
addr16
je
fwait
jg
push
xchg
fiaddl
inc
push
pop
xchg
call
test
mov
shll
fdiv
clc
mov
xchg
loopne
jmp
pop
js
xor
out
fld
jg
pop
jle
loopne
movsl
sub
fistpll
sub
inc
cmp
mov
mov
lret
imul
cmpl
push
pop
decl
lea
cmp
test
out
mov
dec
mov
pop
cmpsb
ret
pop
shr
inc
enter
shr
mov
inc
dec
out
dec
shrb
insb
mov
dec
dec
cs
jbe
add
outsl
or
popa
movb
or
inc
shl
pop
movsl
or
bound
outsl
or
fistpll
and
roll
adcl
ja
push
sub
in
dec
mov
pop
add
xchg
adc
mov
lcall
jp
xlat
pop
push
lret
add
das
lcall
dec
lods
popf
pop
lcall
in
mov
push
mov
add
pop
mov
pop
or
cli
subl
jle
fcmovnbe
mov
in
add
xchg
push
inc
scas
push
test
scas
sti
fcmovnbe
inc
je
mov
xorl
movsl
push
lods
andb
ljmp
sbb
pop
test
test
jb
into
xchg
or
push
pushl
mov
pop
pop
aas
out
movsb
dec
mov
mov
rolb
mov
push
pop
pop
ljmp
cmp
imul
je
add
add
popf
inc
fcoms
outsb
je
xchg
pop
sbb
jmp
orl
pop
add
mov
loope
mov
insb
cwtl
pop
adc
jl
mov
xlat
jo
clc
insl
xchg
ss
sub
testb
repz
cmp
movsb
lds
pop
mov
and
pop
cmp
scas
bswap
xchg
stc
std
mov
dec
or
inc
adc
les
jl
xlat
ds
loope
shl
insb
and
rcll
outsb
xchg
pop
call
adcl
or
test
mov
xor
dec
je
call
adc
or
ljmp
mov
cmp
lock
subb
xor
in
cmp
pop
insb
movsb
push
and
inc
mov
ja
adc
in
mov
or
mov
cmpsb
jne,pn
add
sbb
jle
pop
adc
adc
scas
repz
dec
repz
or
add
nop
outsb
push
push
fstpt
pop
add
sbb
xorb
lods
sbb
lret
fiaddl
pop
rcrl
or
add
inc
hlt
sub
pop
xor
aaa
push
pusha
adc
inc
aas
add
icebp
pop
mov
outsb
lock
das
sbb
inc
adc
jno
lea
cltd
mov
mov
or
push
decl
nop
es
xor
cwtl
jl
mov
mov
push
dec
sub
mov
sar
aam
push
pop
adc
rcrb
adc
lock
dec
out
fidivrs
cli
into
xchg
pop
pop
mov
pop
adc
cwtl
push
lea
ret
and
mov
aam
push
js
icebp
int3
mov
dec
sbb
pop
rcr
in
or
adc
fldt
icebp
mov
xchg
fs
inc
xchg
push
in
sub
mov
inc
ljmp
ror
movsl
cmp
sub
add
push
jae
inc
in
sbb
adc
xor
add
ja
inc
dec
dec
sub
loopne
jp
or
dec
std
fwait
mov
into
pop
adc
outsb
jns
inc
daa
into
insl
call
movsb
test
pop
jecxz
ret
adcb
out
fisttpll
jne
ficoml
xchg
dec
shl
or
mov
rolb
fisttpll
pop
push
jmp
or
add
mov
test
nop
mov
add
xchg
test
pusha
lret
sub
outsl
ja
lcall
dec
xchg
pop
push
push
cmc
push
or
mov
or
jecxz
pop
mov
mov
xorl
add
fistps
sub
mov
cmp
xchg
dec
inc
sbb
mov
jne
adc
mov
dec
sbb
pop
push
xchg
xchg
mov
fisubrl
out
outsb
ljmp
push
ret
push
and
in
and
lret
and
pushf
jmp
ficomps
mov
and
rcrl
movsl
mov
push
je
ret
dec
dec
push
dec
decl
mov
xchg
ds
addb
lods
sete
imul
loop
test
jne
jle
outsb
fimuls
add
fcoms
rcl
mov
ret
adc
lret
repnz
mov
jl
mov
inc
cli
lea
jle
and
stos
pop
nop
jnp,pt
adc
push
in
lret
push
mov
jbe
mov
sbb
mov
js
sbb
and
daa
mov
and
cmpsl
push
cmp
push
shrb
pop
mov
or
and
cltd
loopne
lea
loopne
outsb
cmp
sti
je
mov
sbb
aaa
inc
inc
add
in
push
pop
cs
mov
jmp
sbb
push
push
clc
nop
faddl
mov
mov
pusha
pop
movb
iret
or
mov
aam
aam
cmc
and
sbb
dec
std
scas
sbbb
das
int
fisubs
stos
add
pop
push
aas
push
mov
les
jb
dec
jge
rcrl
jle
sbb
aaa
xchg
and
sti
xorb
fdivl
sub
xor
aam
mov
fmull
push
das
in
adc
shr
inc
jns
mov
dec
sub
filds
xor
mov
cmp
jle
scas
dec
cmp
add
add
sub
dec
iret
sbb
ja
fisttps
adc
rcll
jae
and
push
loop
mov
sub
xchg
inc
or
and
dec
scas
mull
cld
or
test
mov
dec
call
fists
sbb
pop
push
iret
mov
ret
xchg
iret
adc
data16
jmp
inc
call
shlb
jne
fs
cmp
clc
stc
in
lret
xchg
adc
and
ljmp
shl
dec
cmp
dec
add
subb
jb
add
hlt
adc
call
or
jae
idivl
mov
dec
mov
xchg
or
dec
inc
fwait
or
cmp
mov
stos
jl
and
bound
gs
pop
insb
xor
mov
lock
adc
pop
mov
and
push
push
loopne
test
jl
fdivs
or
mov
lock
sbb
sub
sbb
ljmp
ljmp
push
loopne
lods
pop
aaa
loopne
lret
jb
xor
xchg
pop
fwait
jp
mov
test
add
mov
inc
sub
sub
jecxz
fsubr
and
cs
sub
push
in
loopne
je
lahf
gs
adc
adc
pop
movsl
inc
push
mov
orl
jnp
repnz
mov
out
jl
mov
adcb
mov
add
or
hlt
aaa
sbb
mov
or
xchg
push
xchg
jmp
test
loope
icebp
cmp
aas
add
mov
add
push
ret
inc
ret
popa
ds
mov
loopne
movsl
jecxz
jne
xlat
cli
fcoms
ret
inc
ja
testb
lcall
call
inc
cmpsl
ret
stos
cmp
call
popa
sbb
push
jnp
mov
push
rolb
cmpb
sahf
cmp
add
push
sbb
popa
scas
inc
scas
adc
and
and
addr16
cmp
iret
jl
inc
add
ja
mov
add
xlat
in
je
ljmp
and
xchg
lret
and
hlt
push
mov
loopne
adc
stos
imul
jge
jb
push
movsl
outsl
fidivs
jg
ss
add
xor
bound
add
or
dec
loope
loopne
clc
add
addl
shr
fildll
and
push
jns
jne
xchg
adc
outsl
icebp
pop
mov
xor
add
sbb
aas
les
das
xor
gs
push
xchg
pop
gs
push
std
cmpsb
cmp
mov
jle
outsb
je
cmp
mov
or
test
mov
xor
aad
jb
xchg
popa
push
dec
jne
xchg
xor
mov
in
mov
pop
xchg
adc
mov
jl
jbe
mov
outsb
ja
sub
gs
out
imul
mov
lret
inc
pop
mov
jl
in
sarl
addb
test
adc
mov
outsl
add
dec
push
cmpb
loope
std
test
mov
push
inc
inc
or
lds
in
ja
loopne
pusha
test
fimull
cmpsb
add
dec
repz
mov
xor
and
ljmp
iret
cwtl
adc
add
aaa
iret
shlb
nop
xor
add
push
sbb
jmp
add
dec
xor
add
pop
out
mov
cmp
inc
mov
mov
dec
sbb
stos
pop
cmc
mov
pusha
and
mov
mov
fcomps
add
pop
lock
shlb
std
movsb
outsl
daa
or
or
cli
and
out
imul
pop
rorb
incb
or
sub
addl
loope
sbb
stos
test
loop
sub
jl
adc
lods
call
sbb
inc
scas
or
sbb
insl
inc
pop
stos
push
xor
xlat
and
xor
xchg
adc
xchg
out
dec
pop
movsl
pop
cmp
or
popa
sub
lret
roll
jecxz
xchg
dec
test
xchg
sti
sbb
aad
jbe
icebp
pop
cmpsl
pop
in
and
inc
xor
or
or
xchg
mov
fwait
push
es
add
pop
jl
sub
stos
mov
pop
xchg
clc
scas
pushf
daa
data16
sub
sbbl
cli
icebp
and
push
sub
or
jl
push
mov
icebp
push
sub
and
std
ret
loop
in
std
mov
ljmp
inc
and
sub
jg
mov
or
test
mov
xor
outsl
add
adcb
and
jbe
dec
stos
mov
mov
loopne
aad
xchg
scas
das
mov
call
inc
popa
push
adc
fcmovnu
das
inc
loope
popf
pop
dec
jmp
inc
push
mov
cmpsl
xor
cld
push
sti
lods
or
mov
test
xor
and
mov
sub
lret
push
stc
xor
sti
lahf
push
mov
ret
adc
sarb
mov
and
sbb
inc
out
mov
pop
cmc
sbb
adc
lods
sub
or
mov
scas
mov
ljmp
jle
fwait
test
fdivs
jle
adc
aad
dec
add
nop
jg
js
pushf
dec
sbb
pop
lret
fs
jp
clc
fwait
mov
dec
dec
xor
pop
push
jno
stos
rcl
mov
pop
fists
in
xor
jg
xlat
inc
leave
imul
mov
mov
les
daa
mov
icebp
in
aaa
mov
mov
xchg
nopl
out
js
mov
jmp
push
aas
sub
out
inc
add
out
jge
jg
and
inc
sub
sbb
fidivl
push
dec
test
inc
sbb
loopne
cmp
test
push
xor
fildl
push
lret
or
cmpsl
arpl
fists
cmp
ret
mov
add
mov
sub
stc
les
sub
inc
lret
pop
fsts
or
mov
decl
mov
and
aad
xchg
or
jl
pop
in
push
repnz
xlat
inc
and
mov
outsb
ret
aad
shll
or
mov
fimuls
jo
pop
sub
repz
adc
bound
rcrb
inc
push
and
push
popf
mov
mov
inc
mov
pusha
mov
mov
sbb
dec
repnz
sar
jnp
xchg
dec
xchg
inc
in
outsl
cld
lea
xor
mov
cmp
or
ja
mov
or
push
lea
movsl
xchg
mov
mov
dec
cmp
loopne
clc
xor
mov
pop
test
or
test
in
jbe
aaa
adc
xchg
or
addr16
xor
push
dec
callw
push
jge
daa
test
andl
mov
push
and
cli
sbb
sbb
inc
add
out
sub
push
scas
sub
and
test
sbb
fbstp
out
jmp
adc
aaa
dec
jecxz
push
pop
into
btc
xor
pop
jo
data16
into
add
enter
or
lock
sbb
pop
subb
insb
xor
xchg
sarl
cld
scas
mov
add
lods
sub
call
ret
cltd
xor
push
jle
imul
cmc
sbb
std
mulb
jno
pop
mov
sub
or
cmp
add
xchg
test
or
fwait
and
jl
insl
sub
jb
stc
jbe
fs
pop
lret
enter
xorb
mov
push
xor
push
cmp
mov
push
jae
lock
fisttps
call
repz
ss
jecxz
or
cmp
sti
xor
icebp
adc
pop
iret
cwtl
mov
test
sub
int3
mov
pop
adc
jg
pop
pop
sub
divb
push
sub
mov
iret
ss
ret
aam
adc
xlat
pop
push
xchg
dec
jp
or
arpl
das
push
inc
and
xor
je
popf
jne
xchg
mov
fbstp
pop
add
rcl
jp
mov
aad
call
pop
and
mov
aas
push
sbb
push
push
mov
xchg
mov
aad
js
outsl
arpl
sar
inc
mov
xor
fisttps
xor
test
dec
mov
and
jge
repnz
mov
push
repz
dec
pop
popa
mov
inc
movsb
fiadds
dec
or
mov
sbb
xchg
push
dec
jnp
adc
mov
mov
push
mov
std
aaa
or
pop
es
pop
stos
stos
mov
aaa
mov
pop
push
or
dec
gs
sbbb
add
push
js
lahf
cli
rcll
ljmp
mov
leave
popf
aas
sbb
add
jne
push
cmp
dec
loope
push
and
cmpl
xchg
int
xor
rorb
jno
xlat
xor
in
lods
inc
out
cmp
adc
jmp
mov
sub
inc
dec
push
mov
push
in
push
jl
xor
fisubrs
push
push
sbb
call
inc
xchg
pusha
sub
aad
movb
dec
sarl
jecxz
push
xor
jno
dec
imul
clc
fwait
loop
pop
leave
fnstcw
mov
sub
cmp
outsb
sub
dec
das
pop
fsubrs
aas
jecxz
inc
or
cltd
and
jle
aad
mov
stos
mov
and
jmp
mov
pushf
jbe
adc
lock
cmpsb
sub
and
faddp
add
add
enter
xchg
loop
xchg
jo
mov
cli
fistpll
dec
pop
adc
fidivrl
outsl
mov
add
insl
outsl
idiv
int3
or
jne
popa
jnp
jo
sub
jne
stos
jg
mov
in
push
lcall
adc
inc
xor
sti
add
sbb
sahf
mov
stc
xor
add
ret
loopne
data16
outsb
jg
loop
mov
int
fistps
pop
das
fstp
fwait
ss
int3
mov
movlps
leave
or
xlat
js
pushl
fiadds
push
adc
push
out
lcall
jg
pushf
sbb
mov
int
rolb
rcrl
push
mov
std
shl
lret
sub
pop
popa
sub
test
mov
aaa
sub
rep
fbld
test
aaa
je
xor
scas
sub
mov
cmpsl
cwtl
dec
sti
cmp
xchg
outsl
mov
decl
pop
xor
xor
fidivl
je
mov
das
lret
mov
fstpt
fcom
pop
fprem
xchg
push
adc
or
sbbb
lret
sub
mov
outsb
popf
aad
je
add
stos
cwtl
comiss
fiaddl
cmp
push
cmp
mov
add
sbb
outsb
sbb
xchg
mov
sbb
mov
add
das
mov
xchg
pop
sbb
mov
push
orb
add
or
fst
and
xchg
in
or
dec
jge
fistps
push
lret
pop
jns
cmpsb
sbb
push
subl
mov
jns
fstpt
pusha
or
push
movsb
mov
imul
sbb
jmp
les
lcall
lds
imul
insl
or
xchg
das
divl
pop
icebp
xor
jl
addb
lea
xchg
hlt
xor
das
xor
pop
stos
cld
add
insb
cmp
jle
outsb
jmp
jo
lods
in
jg
in
jmp
push
movsb
add
add
xor
imul
cmp
adc
pop
test
pop
inc
rolb
shrl
mov
mov
add
jo
mov
adcl
sbb
std
mov
adc
and
push
push
sbb
push
dec
loop
or
and
xchg
lahf
fwait
pop
aaa
adc
subl
outsl
and
ds
jle
mov
mov
add
inc
cld
in
sarl
aad
jle
test
inc
stc
add
xor
mov
lods
clc
or
ret
pop
addr16
cmp
jl
ja
xor
cmp
bound
or
rorb
pop
sahf
sub
xchg
or
lock
push
mov
outsb
add
pop
fbstp
sbb
cmp
test
xchg
inc
aad
call
hlt
pop
adc
push
call
mov
test
jne
arpl
aad
dec
in
sbb
mov
jo
inc
jne
fwait
lock
push
add
add
ljmp
and
cld
test
in
shlb
int3
out
push
cli
pop
push
fstl
xor
je
sti
loopne
xor
push
dec
idivb
pop
jge
sub
mov
mov
push
faddl
out
bswap
inc
test
lock
cld
hlt
and
adc
das
std
push
or
enter
hlt
inc
inc
add
fwait
popf
scas
pop
cmp
push
in
mov
cmp
sbb
lahf
lock
push
sub
ret
mov
cmpsl
gs
sub
test
push
loopne
mov
or
add
gs
xchg
adcb
insb
mov
add
seto
pop
push
ret
and
mov
es
pop
sarb
addl
adc
test
xchg
add
pusha
nop
push
jge
hlt
cmp
push
dec
add
bound
mov
mov
in
fbstp
jmp
jns
mov
add
sub
daa
push
mov
xor
lods
or
mov
dec
push
xchg
loopne
mov
sub
sti
xor
ss
jl
in
iret
das
cld
cs
xchg
push
test
adc
mov
mov
mov
cltd
sbb
shlb
adc
push
mov
jmp
mov
pop
loop
shrb
inc
insl
insb
in
adc
cmp
jle
movsl
push
insb
add
or
and
inc
xchg
into
xchg
sti
stc
pop
rcr
sbb
mov
adc
incl
push
cwtl
das
ret
and
and
xchg
rolb
add
push
in
call
xlat
sub
cld
push
adc
push
push
add
lock
icebp
fistpl
or
imul
jbe
jle
sbb
cwtl
stc
push
adc
push
mov
in
lea
hlt
rolb
ret
ss
mov
js
inc
xchg
cmp
fwait
es
adc
ret
push
in
lahf
sbb
mov
jb
daa
mov
inc
xlat
fstpt
pop
out
test
stos
outsb
fs
dec
adc
test
xor
cmp
je
ljmp
jp
jg
mov
pop
pop
inc
mov
ret
add
loope
cmpb
repnz
lds
jl
xchg
test
bound
out
sbb
adc
or
cmc
test
loopne
xchg
sbb
dec
in
mov
cld
push
xor
mov
jmp
cmc
es
lsl
les
push
pop
pop
xchg
test
xor
inc
pop
pusha
mov
xchg
xchg
lods
or
ret
sbb
pop
xchg
mov
enter
clc
xchg
cmp
mov
cmp
add
leave
outsl
rorl
add
mov
cli
xchg
mov
adcb
adc
lods
aad
fildll
hlt
push
aas
lret
add
push
cmc
push
movsl
inc
add
add
sbb
out
pop
mov
sub
xor
pop
dec
jmp
sub
xor
xchg
rolb
push
into
add
movsb
jns
sbb
or
dec
into
pop
fisttpll
dec
push
insl
stos
movq
mov
es
xor
clc
imulb
sbb
clc
loopne
arpl
or
or
pop
psubd
and
mov
xchg
push
jno
dec
shl
out
inc
add
add
daa
sub
fwait
sub
fwait
add
mov
dec
fstl
scas
push
sbb
adc
add
mov
imul
cmp
sbb
fidivrl
mov
add
in
jmp
fcmovu
mov
fstpt
insb
and
dec
fisttpl
push
loop
test
ss
ret
test
mov
mov
fnstsw
pop
cmp
ffree
insb
and
inc
or
icebp
mov
mov
in
lods
shlb
mov
lea
mov
data16
cmp
lods
leave
sub
push
jb
jmp
jg
outsl
or
adc
fstl
aam
fisttpl
push
xchg
cmp
push
and
pusha
or
xlat
fs
push
divl
movsb
cmp
inc
add
lahf
mov
jg
in
inc
cwtl
jae
aad
and
pop
fidivs
ja
movsl
xchg
fiaddl
and
or
add
or
outsl
adc
jns
aaa
js
mov
test
inc
clc
jg
loop
inc
push
stos
int
fsubr
sub
xor
xchg
mov
mov
jmp
call
movsl
sbb
add
mov
push
inc
lahf
fs
sbb
stos
imul
decb
push
xor
jo
jno
inc
sbb
repz
fidivrl
push
stc
stos
fucomp
push
jo
dec
sbbl
inc
inc
jo
in
xchg
or
xchg
in
mov
scas
mov
adcb
cmp
movsl
out
jb
inc
pop
ret
imul
nop
in
push
je
cmpsb
or
xor
mov
cmovae
data16
lock
insl
sub
ja
nop
mov
hlt
push
push
inc
mov
pop
jl
inc
in
jo
daa
sbb
je
mov
push
mov
insb
pop
mov
adc
jge
out
cmpb
popa
sub
sbb
les
stc
popa
adc
mov
mov
fmul
movsb
and
adc
cmp
mov
outsl
and
adc
ss
mov
or
mov
xor
bound
xor
inc
xchg
into
sub
add
sbb
hlt
add
shrb
call
pop
cwtl
mov
xchg
jl
pop
dec
push
jno
stos
rorb
daa
inc
sbb
add
outsl
andl
mov
push
sub
push
and
push
inc
adc
mov
xchg
push
adc
mov
fiaddl
push
test
aaa
jl
xor
or
pop
outsl
mov
test
push
push
xor
dec
sub
clc
mov
cld
pop
ss
jne
lods
nop
sub
notl
incl
pusha
lcall
aad
clc
jp
ret
and
jmp
in
sbb
bound
and
xor
out
or
sub
mov
cs
js
cmpsb
cs
imul
lods
popa
mov
or
mov
adc
pop
and
ret
fs
into
das
ss
imul
xor
sub
ret
std
inc
into
and
test
lea
dec
push
cmp
add
faddl
rol
sbb
or
cmp
cmp
pop
sti
dec
cmp
rcl
inc
dec
out
rcrb
inc
sbb
add
mov
in
xchg
mov
mov
xchg
jne
sub
inc
scas
incl
shrl
or
or
mov
es
xchg
sub
xor
mov
movb
xchg
and
mov
push
mov
dec
pop
pop
cli
andb
sbb
cltd
add
cltd
pop
adc
adc
testl
mov
sbb
das
cmc
int
je
mov
pop
cmp
into
sbb
call
shlb
adc
push
outsb
or
pop
cmp
arpl
push
push
jge
shlb
and
sbb
in
or
shlb
jbe
test
dec
adc
lods
inc
inc
pushf
aas
pop
stc
clc
mov
inc
push
cs
je
push
add
pop
sub
jbe
add
ret
pminub
lret
mov
les
jb
mov
in
push
outsl
push
add
repnz
fwait
arpl
addr16
lods
repz
loopne
lret
test
fstpt
dec
or
add
cmpsl
outsl
add
sbb
jge
mov
sbb
imul
lods
push
imul
mov
ljmp
pop
shll
xchg
or
sbb
jmp
dec
rolb
movsl
adc
jb
outsb
sub
push
mov
mov
jle
mov
dec
adc
or
jb
jecxz
adc
jo
cmp
fbstp
jns
imul
bound
sti
stos
jmp
cld
enter
jp
and
shrb
fimull
mov
push
fs
aaa
into
outsb
and
idivl
and
ret
add
mov
jle
rcrl
jno
push
mov
inc
inc
add
cmp
mov
and
mov
cld
insl
push
mov
inc
push
jg
mov
mov
dec
test
mov
mov
lahf
push
je
imul
inc
icebp
push
test
mov
decl
jne
pop
pop
push
mov
cld
test
mov
sbb
xchg
scas
loopne
mov
leave
jle
adc
or
mov
call
ficoms
jo
mov
pop
in
outsl
jl
or
loope
or
aaa
xchg
and
mov
jg
lods
xorl
add
nop
cs
stc
cld
jle
pop
cwtl
cltd
pushf
add
clc
ja
mov
inc
add
jmp
dec
pop
or
lods
mov
jb
xchg
pop
pusha
inc
or
mov
rclb
mov
mov
add
inc
rorb
nop
and
rolb
xor
and
mov
add
iret
mov
pop
jle
xchg
push
add
jg
mov
insb
ljmp
orl
sbb
jae
stos
add
jmp
out
adc
test
std
mov
xor
addl
sbb
sub
or
vfrczss
pop
adc
pop
xor
das
sub
cli
pop
mov
out
xchg
fnstenv
decl
inc
pop
xchg
push
xor
fstp
ss
sbb
mov
fisttps
adc
ds
xchg
test
jno
or
imul
jg
loope
adc
inc
ljmp
popf
push
out
in
testb
movsb
jl
lret
call
fistpll
xchg
push
push
fstl
sub
or
mov
sbb
jne
xlat
outsl
pop
sti
imul
pop
adc
pop
das
cmp
pop
sub
aam
out
push
adc
xchg
dec
sbb
lcall
repz
adc
mov
scas
pop
push
dec
sbb
inc
mov
frstor
push
cld
adc
adc
add
test
jl
outsb
movsb
adc
cld
mov
cmpsb
add
or
mov
mov
inc
enter
add
sbb
jl
or
xchg
jno
leave
mov
stos
cmp
and
das
pop
jo
cmp
dec
pop
jo
lret
stc
shll
or
or
inc
mov
enter
cmp
orb
or
sub
push
adc
sub
cli
or
mov
sbb
push
leave
dec
sti
cli
pop
pop
xor
enter
mov
xchg
shrl
into
jb
mov
orl
loop
jp
pop
addr16
imul
and
fcomip
test
mov
cwtl
add
mov
mov
ljmp
outsl
xor
mov
mov
mov
mov
or
ret
stos
inc
dec
test
sub
push
sub
rorl
inc
adcl
cld
xchg
sub
or
xor
pop
lods
mov
inc
jb
mov
ljmp
mov
aas
repnz
clc
mov
insl
adc
fcoms
jne
js
xlat
cld
inc
addl
into
scas
rclb
aaa
or
mov
in
jecxz
adc
gs
pop
or
pop
in
cmpsb
cmpsl
inc
cmp
sbb
mov
push
sub
or
sti
mov
movsl
fisubrs
mov
inc
and
push
sbb
popl
adc
xor
insb
mov
fdivrl
cmp
shll
andb
stos
push
test
jmp
aad
out
jle
movsl
mov
jl
push
adc
call
lcall
xor
mov
imul
and
pop
cmp
pop
jne
push
add
mov
add
inc
std
mov
pop
andb
xchg
in
cmp
cmp
mov
push
pop
test
aad
adc
ljmp
jbe
lock
nop
arpl
mov
aas
es
cltd
pusha
xor
lea
sahf
mov
aad
and
or
pop
or
and
xchg
and
push
dec
adc
popf
sub
or
ja
mov
aas
js
dec
inc
jl
fsubrl
pop
or
adc
pop
jg
sub
shl
push
pop
add
iret
or
popf
loop
call
mov
or
pop
dec
mov
or
push
je
cli
pop
aaa
pop
or
lahf
adc
sub
inc
imul
jmp
rcrb
pop
push
dec
cmp
dec
outsl
xchg
ficoms
cmp
push
mov
test
dec
fcompl
or
movsl
mov
sar
xchg
or
arpl
cli
in
shlb
cmp
test
inc
jg
sbb
push
repz
test
idivb
nop
addl
mov
jecxz
lea
mov
add
push
into
inc
sbb
popf
outsl
ret
nop
jmp
jne,pt
xor
add
mov
or
rorl
xor
decl
ds
and
xor
add
rcr
call
dec
mov
dec
insb
outsl
lock
popf
fs
sub
mov
aam
xchg
xchg
pop
in
sbb
mov
cmp
stc
nop
mov
bound
push
insl
es
sbb
adc
outsl
or
pop
add
or
adc
aaa
inc
pop
test
fidivl
daa
cmp
jae
lahf
js
xchg
fldcw
cmc
sarb
mov
ljmp
xorl
aam
out
pop
cmpsb
jecxz
inc
cmp
call
mov
outsl
aad
xchg
mov
fxch
call
mov
mov
pusha
imul
shll
movsb
cs
and
xchg
leave
xlat
add
pop
mov
mov
push
push
daa
jne
mov
add
xor
insl
rol
out
mov
ret
inc
mov
stos
jg
mov
inc
repnz
lods
mov
fsubrl
std
mov
push
daa
fstl
dec
jo
add
shl
popa
lcall
ljmp
xchg
pop
push
fistps
xlat
shrb
das
or
stc
adc
pop
ret
push
push
sub
or
mov
cld
out
adc
daa
cwtl
aad
and
test
test
ds
or
test
scas
mov
push
mov
sub
sub
dec
xor
inc
adc
int3
mov
scas
xchg
dec
dec
push
mov
xor
xchg
cli
mov
add
adc
jne
and
add
jecxz
rcll
adc
mov
outsl
cli
sub
sahf
adc
xchg
add
mov
mov
add
pop
jle
or
pop
popa
sbb
js
fistpl
mov
mov
decl
push
ljmp
and
pop
test
and
push
rcrl
imul
movsb
xchg
add
std
or
and
arpl
cmp
or
int3
push
fs
xchg
xchg
xlat
dec
sub
cmpsb
call
push
mov
pop
xor
and
les
outsl
adc
stos
or
jnp
insl
push
cwtl
mov
or
imul
call
push
jmp
adc
mov
mov
shrb
add
cmc
or
dec
ret
rcrl
fs
or
fisttps
in
loope
inc
cmp
daa
jo
jg
lcall
imul
pop
out
adc
popf
cmp
outsl
ljmp
xor
idivl
mov
repz
xchg
and
out
insl
mov
mov
pusha
xchg
pop
jg
add
ret
dec
fs
test
std
ret
inc
jmp
gs
repnz
mov
inc
xchg
sbb
push
sub
push
push
inc
add
scas
clc
push
pop
xor
ret
cwtl
mov
push
jno
dec
test
xor
cmc
lcall
mov
fs
mov
sti
faddl
pop
xor
insb
xchg
cmpsb
dec
pop
js
mov
movsb
out
mov
cli
pop
js
bound
cs
aad
aad
and
add
push
sub
xor
cmc
sub
mov
test
add
stos
pop
or
das
enter
push
in
add
mov
pushf
repnz
jle
add
push
rol
in
pop
mov
push
lcall
pop
mov
ljmp
fimuls
call
dec
lahf
pop
fisubrs
jmp
push
das
add
jge
pop
shrl
or
cmp
cs
and
pusha
or
sahf
sub
imul
mov
int3
loopne
icebp
sub
clc
mov
pop
add
dec
fs
sub
and
rorb
inc
int
cmp
test
mov
or
clc
and
popf
fstpl
sti
sbb
nop
cwtl
popf
and
mov
push
or
xor
test
and
outsl
lock
fstpt
fiadds
icebp
psubsb
xor
jne
push
daa
outsl
sbb
ljmp
cmp
pop
ja
push
mov
jl
pop
inc
xor
fldt
subb
faddl
mov
out
xchg
jbe
jecxz
mov
sub
cmpl
or
sbb
mull
sbb
fistps
mov
pop
xchg
cmp
fldt
sarb
shl
ja
push
inc
out
pop
mov
and
pusha
jne
clc
jg
pop
ja
cmp
popf
addr16
mov
and
add
lods
fistpl
mov
cmp
shll
adc
jmp
out
push
sti
pop
jbe
test
insb
out
push
mov
push
and
cmp
inc
out
ss
lods
sub
shrb
jmp
xchg
sbb
inc
mov
or
pop
call
or
nop
mov
add
sub
les
or
pushf
arpl
mov
sub
lret
fs
ret
mov
dec
pushf
das
and
ret
sahf
xchg
gs
push
xor
test
outsb
frstor
inc
into
stos
insl
dec
cmpsl
add
mov
sbb
mov
xchg
jbe
add
jle
mov
mov
lret
incl
inc
mov
and
push
mov
lcall
jle,pn
stos
mov
adc
idiv
push
mov
outsb
fcmovu
sbb
mov
iret
push
push
incl
test
mov
test
ret
hlt
fisttpll
inc
add
inc
push
stos
fisubrs
mov
mov
mov
pop
inc
push
bound
pop
mov
loope
adc
jp
jl
inc
jl
sub
jmp
les
mov
sub
lcall
cld
inc
les
xor
cmpsb
aas
sub
cli
fcmovnbe
pop
addb
js
dec
loopne
sbb
jo
out
mov
adc
mov
jnp
shr
jo
and
aaa
sub
clc
push
mov
imulb
sbb
adc
or
scas
add
outsl
fdiv
flds
addb
cmp
je
in
incl
push
sbb
cmp
mov
les
loopne
js
test
lahf
dec
insb
ljmp
fdivrs
and
cmc
pop
cli
sub
daa
out
jmp
xor
sub
inc
fcoml
inc
or
inc
js
mov
inc
mov
mov
add
test
sbb
rolb
dec
shlb
loopne
dec
loope
loopne
or
xchg
mov
lret
mov
lea
andb
sub
test
into
sub
mov
mov
dec
xor
test
pop
mov
js
call
dec
test
nop
loopne
out
cmpsb
cmc
jo
insb
and
in
push
mov
mov
jg
push
add
rol
aaa
inc
adc
es
loopne
mov
xor
orb
cltd
call
mov
cli
out
lds
mulb
xchg
dec
and
fs
adc
or
xchg
pushf
sub
adc
xchg
ret
mov
data16
shl
inc
pop
imul
ret
es
or
fisubrl
mov
lock
adc
mov
inc
scas
xor
pusha
movl
push
fcmovu
and
or
or
adc
ss
or
add
fcoms
inc
sbb
pop
mov
or
mov
mov
sub
sti
dec
rcr
push
pop
adc
or
xchg
inc
cmp
shll
push
inc
cs
adc
add
mov
lock
aam
rcrb
pop
fdivr
ljmp
sub
mov
fcomip
daa
js
notl
scas
jb
cltd
adc
jmp
mov
lret
jg
push
testb
jl
jae
jmp
adc
scas
mov
adc
stos
fldl
pop
add
aam
outsl
adc
cli
pop
test
data16
pop
jle
mov
int3
and
cli
outsb
cltd
adc
inc
jecxz
mov
sbb
adc
int3
sahf
push
mov
jecxz
or
rcrl
mov
jne
gs
nop
in
aad
mov
jmp
sbb
sub
inc
stc
imul
arpl
pop
insl
into
mov
inc
fcmovnb
dec
jecxz
add
lock
js
push
jmp
adc
outsb
shlb
mov
gs
mov
sbbb
aas
or
loopne
inc
pop
ds
cmp
call
repz
fadds
fwait
push
fucomip
inc
sub
and
pop
xor
fwait
mov
das
ret
xchg
push
daa
mov
fmuls
add
xchg
jg
loope
or
ja
cltd
push
int3
out
or
inc
mov
clc
push
xor
inc
loopne
add
fbld
mov
rorb
sahf
or
pop
push
or
push
push
sbb
sti
mov
int3
hlt
das
push
cwtl
repz
jbe
lock
jl
enter
add
pushf
mov
das
sbb
mov
orl
test
subb
cmp
and
enter
mov
rcr
popw
or
repz
mov
pop
xchg
in
movsl
jne
clc
ds
sub
rcr
outsl
loopne
aaa
and
andl
mov
and
dec
jg
pop
imul
pop
repnz
stos
ja
std
adc
imul
jmp
push
sub
je
test
test
rclb
int3
into
in
rorb
push
jmp
sub
mov
pop
clc
cmp
jp
stos
sti
cmp
clc
sub
stos
mov
adc
jg
xor
and
or
das
and
jg
push
jbe
outsl
fbld
pushf
in
sbb
cs
cmp
add
adc
sarl
dec
fsubl
sbb
and
aad
call
pusha
push
es
mov
call
jmp
outsb
xchg
outsl
imul
inc
inc
mov
jbe
jmp
or
push
adc
mov
sub
mov
push
test
cmpb
add
pop
in
mov
jae
nop
lcall
out
jle
jp
pop
mov
out
jo
bound
sub
out
push
addr16
push
lea
inc
cmpl
inc
jl
mov
mov
rolb
mov
xlat
dec
xor
aam
mov
inc
xchg
fwait
mov
in
lea
mov
cli
je
mov
test
dec
fwait
pop
pop
and
mov
xorl
shrl
repnz
aam
pop
stos
push
and
mov
push
loope
sub
ss
mov
mov
loopne
jnp
pushl
cmp
add
cld
loope
xor
jo
out
lods
mov
add
push
add
adc
xchg
subb
push
subb
pop
addl
aam
clc
inc
mov
repz
sbb
or
int3
jbe
pop
sub
addr16
out
fisttpll
int3
ljmp
xchg
adc
out
insb
add
cmp
push
incl
push
adc
outsb
mov
sub
ljmp
call
xor
rcl
or
je
repnz
push
sub
scas
outsl
sbb
jo
stos
push
ds
push
sbb
jmp
adc
inc
insl
je
sbb
movsb
aam
sub
shll
stos
adc
hlt
add
jo
mov
fidivrs
incl
sbb
sahf
and
jbe
or
aad
mov
call
mov
and
sub
pop
pop
inc
das
fsubrl
and
stos
add
jl
or
sbb
add
fcomip
jg
xchg
into
cmp
insb
loop
jno
mov
pop
mov
loopne
and
outsl
stos
and
jno
fwait
mov
and
push
cmpsb
out
outsl
sbb
sbb
mov
cmp
shrl
lods
popa
mov
mov
adc
xor
test
inc
and
movl
test
fcmovne
mov
mov
inc
stos
jne
mov
stos
pop
sub
adc
cld
filds
cwtl
push
cmp
leave
and
mov
pop
push
push
push
pop
mov
inc
jl
outsl
lock
xchg
fdivrs
pop
clc
pop
push
dec
add
icebp
inc
stos
adc
mov
lods
movsl
loop
xor
sub
add
mov
call
les
das
xor
or
daa
sub
sbb
scas
mov
and
dec
insl
addr16
mov
mov
outsl
movsl
or
jge
sbb
stc
jb
cmp
mov
scas
push
call
incl
cmp
repz
cld
adc
add
mov
push
into
adc
mov
ss
std
mov
in
jg
aaa
cs
mov
pusha
fldenv
sub
xchg
inc
mov
inc
das
call
iret
ret
and
mov
pop
fdivrs
shl
ja
icebp
mov
icebp
sbb
jns
nop
in
pop
mov
dec
pusha
arpl
or
cmpsl
daa
ss
add
repnz
pop
mov
xchg
dec
pusha
sub
jb
dec
roll
mov
inc
mov
nop
fnstsw
push
and
add
mov
test
and
adc
divl
fisttps
dec
hlt
ds
add
sub
das
xor
int3
lret
jb
ds
icebp
push
pop
add
mov
test
sti
shrl
mov
xchg
shrb
dec
aaa
push
push
sarb
pop
dec
pushf
rcll
mov
mov
nop
mov
mov
adc
pop
pop
xchg
test
test
dec
decb
lea
test
sti
inc
test
js
jl
shrb
mov
pop
rclb
xor
or
mov
adc
lods
movsl
adc
jl
lret
sarl
stos
jg
leave
pop
pop
adc
ret
lock
outsl
mov
shrb
xor
bound
int
push
lahf
push
jns
and
xchg
or
inc
adc
ret
mov
clc
or
insl
push
pop
push
jno
das
rclb
subl
mov
inc
hlt
or
cmp
lcall
mov
std
jmp
loopne
add
outsl
outsl
ljmp
imul
mov
adc
pop
mov
inc
sub
call
or
or
mov
lock
adc
aam
movsl
decl
push
pop
cmp
sahf
xchg
incb
lea
and
jg
enter
xlat
mov
into
sub
mov
fsubrs
jmp
fistpll
cli
js
jle
stos
shlb
ja
add
nop
or
test
add
and
lods
in
dec
lods
or
jmp
test
repz
push
push
xchg
scas
scas
jecxz
test
add
insb
jg
lods
jg
nop
mov
push
imul
cmp
jns
cmpsl
fisttpl
and
dec
lcall
sarl
aad
outsb
cli
mov
stos
jl
or
jp
add
adc
adc
cld
sbb
inc
inc
dec
mov
in
fcmovnu
aad
shlb
incb
mov
jae
pusha
das
adc
inc
lds
or
mov
inc
out
sub
cmp
push
loop
addr16
mov
or
shl
fsubrs
sbb
cmpsl
sub
out
in
ljmp
cmp
pushl
cli
sbb
test
mov
and
and
add
rcr
test
stos
mov
mov
jne
out
addl
push
cs
stc
mov
std
test
cmc
inc
add
outsb
inc
add
ja
dec
xchg
repnz
pop
inc
cmc
fbld
xchg
scas
push
jl
pop
xor
nop
and
leave
cmp
and
out
incb
rcrb
ss
jb
pop
and
cs
aas
shrl
or
adc
sub
jnp
cmp
pusha
or
or
push
mov
xor
out
sub
outsl
sub
or
nop
cltd
pushf
cmpsl
mov
xchg
js
mov
lock
shlb
lods
dec
adc
lods
sarb
out
pop
adc
rol
xchg
rol
cmpsl
jle
xor
lods
call
and
movsb
adc
add
out
or
hlt
dec
mov
mov
cli
lds
xor
cltd
jb
and
movsb
xchg
das
std
aaa
adc
jmp
cmc
xchg
lahf
fisttpll
sti
mov
or
das
cld
inc
jns
fistl
bound
dec
lock
dec
adc
mov
dec
sbb
lock
adc
push
cmp
jg
arpl
mov
jae
inc
adc
stc
scas
sub
pop
ljmp
jle
add
and
or
hlt
and
xor
jo
pop
add
pop
pop
add
data16
jae
adc
sub
xor
roll
mov
add
arpl
sbb
add
sub
loope
jb
push
hlt
xchg
dec
out
sub
rcl
inc
push
mov
sub
nop
dec
push
sar
fidivrl
add
dec
syscall
pop
jecxz
mov
loopne
dec
outsl
shll
or
pop
sbb
fsubs
js
das
xchg
ret
test
insl
mov
sti
es
sub
ret
es
push
pop
stc
xchg
test
jmp
push
xchg
outsl
inc
add
xor
mov
ja
imul
les
xor
cmp
push
push
jne
cs
fcoml
push
push
inc
dec
jo
push
inc
mov
pavgb
push
xor
ljmp
and
lds
add
xor
jbe
fstpl
add
scas
xor
dec
nop
pushf
mov
leave
push
out
aas
mov
clc
mov
mov
xor
mov
and
sbb
adc
sub
enter
mov
dec
leave
jp
sti
pop
cmp
cli
inc
jnp
gs
test
das
cmc
addb
cwtl
sbb
stos
lock
lds
pop
clc
pop
js
mov
lret
aas
push
cltd
shll
popa
cmp
sbb
fldt
mov
pushf
rorl
jmp
jmp
mov
pop
scas
mov
mov
cmp
lock
into
jns
or
sbb
lock
std
xor
jl
out
add
mov
mov
test
popa
sub
push
les
or
shl
xchg
scas
nop
enter
ret
sub
jns
mov
xor
mov
pop
loope
cs
js
dec
sbb
pop
mov
push
dec
sahf
xor
push
mov
mov
inc
or
shrb
mov
sub
and
jp
and
in
add
fidivs
mov
push
insl
pop
xor
pop
pushf
pop
sbb
rolb
or
push
push
sbbb
lea
lcall
sub
loope
hlt
aaa
or
std
pop
imul
outsl
dec
mov
push
add
gs
or
jb
mov
lahf
js
xchg
and
xchg
imul
fistpl
push
dec
sub
mov
cmp
push
pop
loopne
adc
jnp
ss
xchg
jg
or
lahf
xchg
and
jp
and
jb
in
dec
xor
incl
scas
add
mov
mov
cmpsl
ret
lahf
test
enter
inc
cmc
pop
loop
addr16
movsb
movsb
xchg
data16
nop
sub
jge
pop
jne
or
sbb
cmp
subb
jge
and
data16
shlb
mov
xchg
inc
push
les
ffreep
pusha
sbb
stc
push
lea
mov
mov
xchg
jne
daa
mov
mov
insl
loope
inc
push
int3
arpl
or
or
faddp
lret
in
mov
jg
dec
fistps
mov
xor
int
add
sbb
add
dec
sbb
inc
cld
das
push
adc
pop
iret
or
mov
daa
jp
popl
loope
addl
rorb
cld
or
rclb
hlt
or
or
mov
mov
dec
and
mov
push
pavgb
add
outsb
add
enter
push
add
out
mov
pop
push
mov
cmp
mov
ret
in
mov
fnstsw
scas
xchg
push
sbb
outsl
data16
xchg
and
subb
pop
dec
insb
inc
sti
test
xor
add
test
pusha
out
inc
mov
add
movsl
adc
jne
out
or
stos
pop
inc
fcmovnu
jge
xchg
xchg
pop
fsubrp
jecxz
mov
fisubrs
sbbb
int3
std
fidivrs
sub
movsb
dec
cltd
cltd
xor
adc
in
fbld
or
push
xchg
push
xchg
popf
out
sbb
and
into
push
cmp
xchg
pop
mov
xchg
add
adc
and
mov
cmpsb
xchg
adc
gs
clc
jg
cmpsl
popf
js
xor
adc
movsb
pop
mov
inc
repnz
fcmove
testl
jle
inc
sti
xor
sbbl
pop
jecxz
pop
pusha
pop
dec
cld
push
sub
movsbl
sahf
mov
jmp
cld
pusha
movsb
cmpsl
enter
dec
xlat
test
call
rolb
dec
sbb
cmpsb
call
push
sbb
mov
int
dec
js
punpckldq
dec
sub
call
aad
imul
and
and
pop
add
jg
ret
int
pop
sub
push
fcomi
std
rcll
ret
imul
stos
and
or
shlb
stos
call
dec
cmc
mov
pop
cs
mov
xchg
lds
inc
inc
movsb
imul
add
test
mov
jnp
dec
out
and
xor
cwtl
loopne
clc
fistl
dec
sub
ret
cmpsb
cmp
fstpt
and
lods
in
popf
jo
adc
inc
xchg
jo
jmp
outsb
xor
dec
mov
or
mov
fwait
mov
lds
std
test
mov
push
pop
repz
fstpt
jg
sub
inc
cld
pushf
xchg
clc
xchg
repz
push
cltd
ficompl
sbb
aad
xor
push
inc
inc
mov
or
aaa
or
push
add
in
repz
jl
inc
jbe
push
iret
sahf
pop
fcmovnu
push
mov
sub
cmp
outsl
add
mov
js
or
adc
mov
mov
adc
dec
mov
inc
rcr
push
cmp
enter
cmc
dec
rcll
jp
ficompl
xor
mov
imul
inc
leave
push
xchg
stos
inc
testl
dec
or
and
scas
pusha
lods
loop
sbb
push
jne
inc
pop
mov
mov
ret
mov
mov
push
fsubs
jg
pop
enter
and
sub
xchg
subb
mov
sbb
lds
xor
aam
xchg
aaa
fidivrl
xlat
adc
inc
and
fildll
or
std
aaa
add
jmp
and
push
pop
jae
dec
daa
mov
push
jno
cmp
stos
out
out
idivb
add
push
xchg
xchg
inc
lret
push
insb
sub
push
testl
cld
test
insb
push
in
inc
in
das
test
lock
mov
fcoml
pop
addr16
movsl
mov
push
cmp
fsubp
outsb
push
mov
mov
mov
rcll
dec
ja
and
jp
dec
cld
dec
push
test
push
call
or
addr16
or
sbbb
mov
repz
mov
sub
stos
cmp
nop
arpl
jae
cmp
arpl
filds
and
xchg
jecxz
das
xchg
xor
jp
push
mov
in
mov
cmp
xchg
and
sub
push
ja
cld
ja
mov
out
add
sub
in
shl
call
xchg
es
push
inc
push
std
add
outsl
sbb
bound
test
stc
stc
or
daa
int3
mov
add
push
nop
push
mov
lea
lcall
in
add
cld
lcall
xlat
sub
mov
subb
or
shr
xor
fiaddl
repnz
mov
shll
shl
add
push
rorl
push
adc
jo
in
js
stc
dec
and
lret
adc
sbb
xchg
mov
cmp
cmp
pop
js
adcl
inc
rorl
adc
mov
in
mov
mov
mov
fyl2x
mov
mov
push
inc
or
scas
aad
xor
sti
or
int
sbb
sbb
mov
mov
scas
inc
sub
sub
insl
add
jae
inc
in
push
clc
daa
xchg
iret
xchg
call
stos
xor
into
loop
cwtl
insb
ret
shll
jp
aaa
cli
orb
mov
mov
repz
enter
mov
jmp
lret
adc
mov
stc
jg
add
aas
jecxz
loopne
adc
inc
nop
mov
push
mov
scas
mov
sbb
test
enter
mov
xor
inc
mov
jnp
test
fisttpl
cmp
test
pop
arpl
mov
mov
rclb
mov
orl
test
inc
mov
std
divb
or
adc
aaa
call
std
and
mov
add
jne
push
fs
lods
inc
cmp
mov
or
cmpsb
outsl
outsl
cld
push
adc
jecxz
jge
faddl
in
cmpsb
decl
and
movsl
push
and
icebp
or
fidivs
xor
loope
or
jg
shrb
aas
mov
fcoml
sub
xchg
fimull
mov
and
push
mov
fbld
lahf
pop
sbb
xchg
xchg
push
loope
adc
lret
int
hlt
out
push
mov
in
popa
sbb
cmp
outsl
ss
jp
inc
lcall
stos
notb
inc
das
lds
inc
inc
lahf
stc
xchg
push
shrl
jle
cmp
jns
xchg
stos
in
shlb
or
out
pop
fiaddl
cmpsl
push
ja
sub
sub
imul
xchg
mov
enter
mov
xchg
xor
orb
aas
jge
inc
stos
call
inc
pop
shll
test
push
lahf
adc
xchg
pcmpeqw
movsb
std
lds
xor
jg
fnstsw
adc
mov
and
shll
cmpsb
call
xchg
ds
mov
enter
mov
jo
mov
pop
mov
xchg
cmp
push
jge
adc
sub
jae,pn
push
bound
jmp
jmp
push
pop
inc
adc
data16
pop
add
jb
lret
daa
cltd
xchg
jmp
mov
push
rclb
and
ja
xchg
cwtl
das
mov
lock
jns
les
xchg
push
insl
or
inc
cmp
and
sub
inc
movsl
fs
jbe
inc
mov
fidivs
push
jmp
lods
fwait
dec
mov
jp
bound
lock
mov
or
arpl
mov
sub
arpl
jp
enter
xchg
lahf
inc
jo
jp
inc
push
mov
add
mov
pop
sbb
xchg
fdivp
lret
inc
inc
outsl
pop
adc
mov
minps
test
push
fistpll
and
dec
inc
sbb
rcll
cmp
rclb
outsl
add
cmp
push
pop
cli
lods
mov
xchg
ffreep
inc
inc
mov
add
je
mov
mov
add
xchg
clc
dec
stc
and
lea
sub
push
std
inc
popa
xor
jle
les
mov
mov
inc
insl
xor
les
sub
orl
enter
fldt
jns
add
mov
into
insb
data16
mov
rorl
rolb
sub
adc
pop
dec
enter
push
cmp
out
test
mov
imul
push
inc
fbstp
test
mov
std
xchg
aam
test
sbb
pushl
scas
push
rclb
out
test
jg
in
adc
inc
fbld
xchg
decl
jne
fists
stos
pushf
fbstp
and
lea
leave
cmp
cmpsb
lds
mov
xchg
popa
out
bound
mov
loope
jmp
cli
add
or
mov
and
push
inc
mov
test
or
pop
cmpsb
sbb
xor
or
fcmove
pop
or
dec
sub
add
lea
jg
xor
les
add
mov
jl
xlat
adc
lahf
sarl
dec
les
mov
add
and
ret
mov
scas
movsl
and
sti
add
and
xchg
std
mov
jl
dec
add
cwtl
test
add
arpl
gs
cmp
jmp
shll
pop
das
frstor
pop
add
aaa
je
and
xlat
xchg
lret
pop
pop
jmp
popa
add
cltd
test
outsl
adc
jno
dec
jns
int3
add
or
add
es
stc
add
xor
incl
shrl
fildll
cmc
dec
pop
add
mov
and
or
insb
lcall
mov
repnz
andl
hlt
xchg
shrb
push
pop
cltd
adc
jmp
rcrl
sar
mov
and
sbb
sti
outsl
or
lock
stc
jbe
dec
lods
inc
add
cltd
mov
sub
xchg
clc
addr16
rol
add
outsl
mov
pushf
sbb
add
mov
xor
popf
les
push
rol
or
jecxz
mov
hlt
test
hlt
sarb
inc
repnz
int3
jnp
mov
outsl
jl
add
sub
jo
dec
mov
xor
icebp
lea
std
call
sbb
and
adc
pop
push
rdmsr
cld
xor
xor
loope
sub
and
lahf
mov
dec
mov
jmp
pop
adc
adc
inc
out
pop
pop
or
jg
jns
push
adcb
jo
push
fisubrl
cli
aaa
jmp
sbb
jb,pt
mov
xor
ret
insl
out
add
adc
inc
gs
mov
fs
inc
rcrl
push
and
cmpsb
fcmovne
xchg
gs
jge
sbb
andb
mov
into
vpacksswb
insb
pop
adc
mov
cmc
dec
dec
inc
ds
xor
adc
test
stos
in
add
fbstp
or
test
ja
in
cmp
and
orl
xorb
dec
pop
call
mov
nop
add
or
fmulp
imul
cmp
add
mov
pop
pop
inc
pop
aaa
popa
cmp
nop
test
imul
mov
insl
mov
fisttps
dec
test
sbb
stc
push
mov
clc
mov
lea
lds
lahf
mov
mov
xor
js
adc
jecxz
jae
pushf
out
mov
xor
or
pop
enter
xor
icebp
pop
push
stos
rcl
je
ret
and
cmc
or
sbb
sub
stos
push
pop
push
test
insl
test
adc
sbb
std
rcrl
or
or
jno
arpl
mov
loop
in
clc
in
fistps
pushf
movsl
adcl
mov
jo
adc
inc
mov
fldenv
xchg
xor
in
cli
leave
outsb
insl
clc
idiv
inc
ljmp
scas
jecxz
or
es
mov
negb
cltd
dec
insb
sbb
xchg
xor
ret
js
dec
mov
xchg
push
push
add
inc
dec
jmp
pop
push
imulb
push
xor
js
lret
xchg
ret
pop
call
insb
insl
std
lea
test
das
mov
and
decb
pop
nop
js
dec
fdivr
jecxz
inc
xlat
mov
and
mov
adc
sti
jbe
call
xor
movsb
pop
iret
pushf
hlt
add
jbe
jg
inc
and
pop
and
ljmp
or
xor
sbb
mov
loope
sbb
fiadds
or
lret
cmp
and
imul
cld
sub
xchg
or
push
jg
inc
cmp
xor
testl
out
sti
cmp
and
mov
inc
outsl
leave
pushf
sar
movsl
insl
fstpt
mov
sub
inc
ror
movsb
mov
cmp
in
pop
jbe
mov
mov
mov
inc
xor
mov
test
or
testl
inc
push
test
pop
pop
aas
addb
out
jecxz
pusha
ss
shr
push
jb
std
dec
call
and
mov
loope
dec
mov
pop
fstps
and
decb
mov
fs
push
jns
not
mov
sbb
xor
dec
push
fildl
lahf
out
aas
sbb
fstp
push
add
sbb
or
jle
mov
loop
stos
in
sub
mov
ret
jae
inc
jle
push
loope
mov
push
add
mov
push
inc
adc
aad
jno
call
jmp
mov
lcall
test
push
inc
aad
loopne
xor
in
cmp
outsl
and
push
cld
sete
icebp
or
mov
scas
push
int3
nop
inc
movsb
push
adc
mov
in
ss
cld
fildll
and
nop
movsl
inc
lods
data16
push
mov
loope
inc
cld
mov
add
out
ds
inc
pusha
or
scas
inc
and
popa
sahf
sub
lods
loopne
or
jg
cmp
mov
inc
dec
inc
xor
gs
jle
aas
das
mov
sub
push
mov
std
push
test
addr16
ffree
fwait
sub
outsb
dec
loopne
push
cmc
cli
push
xchg
test
outsb
test
loopne
mov
mov
push
mov
or
in
and
cmp
ljmp
bound
out
push
shrl
jg
outsb
jmp
mov
add
mov
push
inc
or
jle
sub
fimull
jae
mov
stos
pop
push
push
cmpsl
pop
and
xor
and
sub
fdivrl
or
push
rcrl
pop
cmp
sbb
add
dec
sub
repz
fldl
mov
and
into
mov
stos
cmp
cld
xchg
mov
xchg
xchg
icebp
push
imull
lret
mov
pop
inc
sbb
mov
pop
rcrb
sub
aad
mov
movsl
or
dec
out
dec
sbbl
mov
scas
xchg
sbb
mov
pop
or
mov
xor
push
jae
movsb
arpl
dec
cmc
das
icebp
dec
rclb
push
mov
pop
and
ja
xor
cmp
std
iret
dec
enter
imulb
mov
and
loopne
rcrb
inc
sub
push
adc
xchg
out
dec
test
test
fmuls
test
mull
jns
and
push
adc
mov
das
inc
or
cmp
scas
mov
faddl
mov
jl
sbbb
push
mov
push
les
and
adc
fstps
and
pop
bound
popf
add
rcr
sahf
fnstsw
mov
cli
fistpll
shll
jo
lds
inc
xchg
dec
push
shll
shrb
std
push
xchg
sub
dec
push
and
loop
ljmp
scas
loopne
cmp
sarb
sub
mov
neg
add
ja
and
push
pusha
cmp
jnp
mov
mov
js
sub
cmp
ret
adc
mov
pop
mov
imul
dec
inc
dec
adcl
lods
std
pop
test
sti
in
pop
mov
jns
out
outsb
mov
int
push
mov
loopne
dec
mov
cli
cmp
ret
jnp
jo
mov
adc
loop
add
filds
sbb
cmp
test
or
jmp
pushf
cmpsl
daa
int
dec
outsb
dec
movsl
jecxz
cmpb
mov
lcall
pop
mov
test
inc
clc
dec
sub
sbb
jmp
loop
je
inc
inc
add
lcall
cmp
or
divb
sbb
and
xchg
les
rcll
clc
icebp
ljmp
lock
or
js
movsb
icebp
dec
xchg
decb
cltd
outsl
fidivrl
das
xor
add
or
fistps
ds
jge
inc
lea
mov
pop
fildll
daa
cli
pop
xchg
jne
stos
push
lods
inc
mov
lods
mov
push
xor
icebp
adc
inc
inc
aas
push
shll
push
inc
pause
cmp
divl
jnp
filds
push
mov
mov
inc
aas
sub
movsl
sub
inc
sub
inc
xor
push
add
rolb
push
cmp
sub
sbbl
test
and
push
test
jo
dec
adc
pop
js
repnz
nop
testb
fisttpll
xchg
dec
mov
jae
cmp
js
movsl
sub
mov
les
sbb
jne
out
or
dec
adc
pop
sbb
gs
inc
push
arpl
mov
pushf
clc
or
aam
mov
ss
mull
add
mov
lahf
cmp
in
ss
push
inc
jp
jmp
or
bound
add
bound
clc
call
mov
jp
pushl
and
pop
aam
fwait
test
movsl
pop
xorl
pop
call
jle
out
bound
mov
xchg
rorl
test
fildl
xor
jb
clc
enter
fidivs
jle
jg
sub
fcmovbe
mov
jl
push
sub
inc
subl
std
orl
or
push
cmpsl
jne
sub
jge
sub
int3
hlt
adc
lret
mov
mov
dec
cmp
aam
test
orb
dec
in
add
rol
repnz
icebp
out
or
mov
push
int3
stos
addl
imul
fists
movsb
jb
adc
jg
jg
jo
test
loopne
stos
push
dec
in
or
popa
adc
repz
jp
jns
adc
inc
bound
mov
rclb
pop
lret
mov
and
xor
push
cmp
sbb
adc
dec
xchg
xor
cmp
fidivrs
mov
call
repz
daa
adcb
pusha
cs
adc
push
andb
mov
xor
fildll
pop
lret
out
test
jno
adc
xor
shll
pop
jp
cmp
inc
mov
hlt
mov
mov
hlt
jecxz
cltd
cld
and
jp
mov
dec
lea
jl
aad
mov
mov
mov
hlt
lahf
or
clc
lahf
sbb
mov
jge
cmp
sti
movsb
mov
push
pop
in
negl
test
sub
or
jne
and
add
std
dec
stos
mov
je
adc
js
das
aam
mov
dec
nop
or
aas
rcll
popa
pop
sub
cmp
lods
jmp
mov
cmpsl
les
and
push
ret
rolb
test
enter
sub
cmpsb
fbld
mov
jne
outsb
jge
jl
in
fwait
jae
adc
test
ja
lods
inc
test
pop
or
fists
imul
and
stos
inc
add
in
ss
sbb
fstps
mov
imulb
sbb
or
and
adc
adc
lret
adc
ds
xchg
mov
cwtl
es
loop
or
dec
cmpl
test
or
inc
dec
cld
fwait
and
cli
cmp
adc
loope
mov
mov
add
sub
mov
cltd
xor
add
or
sub
fldt
jg
stos
rcr
sub
gs
push
mov
ja
mov
ret
fdivrs
xor
ret
mov
sbbb
hlt
cmp
xchg
fucomi
lods
mov
lahf
inc
xor
sub
and
add
stc
das
cld
push
fbld
mov
cmp
jno
cwtl
mov
xchg
and
ljmp
sub
adc
mov
sub
cmp
jbe
push
or
fmull
js
jge
rcr
inc
inc
cs
or
add
xchg
test
mov
aam
fisubrs
add
or
adc
addb
push
mov
ljmp
out
mov
cmp
je
and
cmp
sub
pop
movsl
dec
sub
adc
mov
sbb
inc
inc
xchg
mov
int
jge
jg
fwait
arpl
jge
cltd
cli
push
jp
jns
cmp
xchg
shll
hlt
push
lcall
jmp
or
std
pop
inc
loopne
push
inc
push
aaa
imul
add
addr16
fiaddl
cmp
or
cmp
imul
mov
insl
div
shlb
push
lcall
clc
cmp
lods
outsb
or
push
jmp
sti
test
jg
fadds
cmp
mov
lods
xchg
loopne
lahf
rorl
ficompl
jae
inc
aam
popa
jne
outsl
insb
add
mov
sub
jmp
inc
fwait
adc
cld
mov
pop
or
xchg
loop
jl
movq
inc
adc
shl
cmpsl
add
push
movb
jo
das
stos
xlat
jl
mov
decl
lock
mov
in
xchg
xchg
ljmp
loop
or
fldenv
iret
mov
push
sahf
push
sbb
out
push
push
int3
lock
jle
insl
js
adc
xchg
loopne
enter
ljmp
add
xor
aam
insb
inc
movsl
test
movb
lahf
jg
push
sbb
xchg
mov
mov
pushf
ds
add
into
arpl
add
lods
dec
lods
mov
clc
test
sbb
sub
popf
xor
cmp
decl
jg
lret
fadds
shl
pop
cld
jmp
adc
decl
add
enter
or
stos
idiv
mov
and
loopne
fs
scas
mov
xchg
sbb
shr
out
hlt
mov
fisttpl
jo
lea
stos
vprotb
ljmp
add
dec
negb
mov
mov
and
cld
sbb
popf
outsl
jne
or
je
fnsave
jmp
loope
ret
clc
push
jmp
mov
or
scas
scas
sar
push
std
aad
popa
add
fisttps
gs
push
leave
out
in
movsl
popl
movsb
xchg
das
add
loope
clc
jle
sbb
pop
mov
jae
ss
push
push
add
sbb
das
push
add
pusha
xchg
dec
sub
mov
fildl
mov
outsl
jge
lock
lock
add
loop
icebp
or
fcomps
jbe
jl
pushl
cmp
nop
cmp
loope
insl
push
push
ret
xor
sub
rcr
and
mov
xchg
out
or
push
pusha
mov
in
fsts
sub
arpl
sub
and
xlat
push
mov
aam
adc
into
stos
lea
std
test
test
icebp
pushf
inc
add
out
les
pop
xchg
stos
call
mov
mov
divb
and
adc
fisubl
push
jnp
mov
xor
in
hlt
cs
icebp
test
cmc
stc
arpl
dec
les
mov
pop
mov
outsl
ror
subb
cmp
xchg
lahf
out
mov
aaa
ficomps
idivl
mov
out
cli
and
or
xchg
add
fsubrl
loop
dec
push
stos
ss
add
adc
xor
insl
test
jle
loopne
iret
sbb
arpl
and
xor
lock
mov
inc
iret
or
xchg
popa
push
mov
adc
cmp
or
mov
outsb
pop
sbbl
inc
imull
mov
ret
jecxz
push
sbbl
fidivs
lock
iret
pop
jne
and
or
rclb
sbb
aad
sub
add
mov
jne
aas
jl
inc
movsl
inc
push
xor
inc
jbe
std
add
pop
clc
or
rorb
or
dec
popf
nop
adc
inc
fdiv
xchg
xchg
inc
push
adc
ljmp
xchg
push
cmp
inc
pushf
dec
nop
aad
mov
mov
decl
add
das
adcl
hlt
movl
dec
inc
or
pop
movsl
jo
xchg
mov
or
fidivrl
rcrb
cmp
pop
mov
repz
and
dec
jecxz
or
insl
outsb
lods
test
mov
test
pop
push
pop
pop
inc
mov
out
stos
push
stos
subl
push
pop
dec
outsl
dec
inc
loop
mov
xchg
mov
jne
jp
ds
cli
filds
lock
pop
loope
add
cmp
push
sbb
pushf
lret
push
gs
rol
std
xchg
incl
das
call
mov
adc
pop
ss
divb
inc
jmp
lds
pop
fucom
lcall
ja
test
fsub
add
hlt
sti
fidivrs
loope,pn
push
push
cld
cmpsl
ret
shll
rorb
adc
add
stc
ljmp
out
xor
adc
push
dec
movsl
dec
rcll
mov
push
push
xlat
push
hlt
sub
inc
cmp
or
insl
std
sbb
xlat
lods
push
fidivrl
xchg
adc
push
add
mov
lahf
push
mov
pusha
add
outsl
and
int3
xor
fwait
push
dec
adc
cmp
or
cmpsb
jecxz
adc
loop
cmp
sub
pop
push
xchg
mov
out
loopne
pop
jno
cmpsl
add
insb
inc
unpcklps
mov
sbb
inc
and
or
sub
push
stc
rcr
pushf
ljmp
cmc
add
je
incb
xchg
lods
lahf
pushf
in
push
incl
xor
and
orl
shl
sar
cwtl
adc
pop
js
adc
or
push
shl
pusha
stos
aam
push
insb
mov
mov
mov
push
sbb
cmpsl
ret
rorb
jmp
std
dec
jb
or
lahf
jno
jno
cmp
cwtl
or
push
sub
cmp
movsl
ret
sbb
fiadds
cs
pushw
cwtl
push
cmp
jae
adc
jno
lods
inc
test
mov
push
repz
add
pop
and
cmp
pop
xorb
and
icebp
das
sub
pop
test
push
int
imul
pop
stos
dec
aaa
or
sbb
nop
icebp
jge
push
or
fbld
test
movsl
xor
jbe
adc
nop
inc
cld
cmpsl
ds
orl
ljmp
xor
adc
lret
outsl
fistl
lods
cltd
sarb
and
hlt
enter
push
jmp
inc
jne
lods
lea
cmp
lods
mov
pop
push
ss
fiaddl
loop
and
ljmp
ss
data16
ret
test
xchg
mov
imul
fcoms
xor
imul
push
mov
lcall
mov
xor
cs
loopne
inc
dec
push
dec
adc
ljmp
adc
mov
dec
mov
int
scas
adc
ja
mov
and
mov
mov
lock
jbe
mov
decb
dec
inc
test
xor
test
aam
scas
lock
pushf
popa
fs
dec
pop
xlat
jnp
in
pop
in
push
inc
mov
out
mov
movsb
jne
inc
adc
dec
and
adc
ret
mov
xchg
jecxz
xchg
addr16
add
cld
fsubs
sbb
test
scas
push
cli
push
lahf
pop
xor
add
mov
outsb
cld
pusha
imul
mov
or
dec
or
std
pandn
or
clc
je
mov
and
mov
aaa
filds
rcll
mov
inc
dec
daa
push
sub
stos
mov
loopne
ljmp
mov
sti
sbb
ret
and
jae
xor
sbb
push
push
xchg
pop
iret
js
and
inc
xchg
sbb
jmp
dec
in
es
mov
ja
add
outsb
and
push
pop
or
push
clc
xchg
icebp
mov
mov
mov
inc
adc
mov
or
cmpb
ret
inc
xchg
loopne
rorl
inc
pop
pusha
cmc
pop
sbb
add
mov
push
das
push
mov
lds
push
nop
out
ret
and
incl
and
rorl
push
lahf
cwtl
xor
pushf
dec
xchg
je
imulb
clc
bound
ret
jb
stos
out
aam
push
dec
les
ds
pop
fistpl
ffreep
cmp
xor
cs
jno
sahf
and
pusha
lock
fidivrl
adc
je
lds
cmp
xchg
adc
push
cmc
dec
repnz
or
js
shrb
fstl
adc
pop
pushf
mov
mov
js
inc
lds
testb
add
call
lds
adc
cmc
scas
aad
lds
inc
aad
push
cli
xor
in
decl
jo
mov
dec
mov
add
push
cli
inc
lahf
push
sahf
call
inc
sub
notl
es
andb
and
mov
cmpsl
push
js
mov
aad
cs
mov
bound
adc
mov
mov
icebp
push
add
imul
aas
xchg
cmpsl
mov
pop
jnp
adc
cltd
inc
dec
and
xor
test
xchg
call
xchg
xchg
xacquire
pop
lock
mov
push
pop
outsl
ljmp
and
out
add
push
mov
test
pop
rcl
jp
int3
xorb
cmp
adc
or
cmp
mov
movsl
neg
sub
cmp
test
jno
dec
pop
cmp
push
cld
dec
mov
inc
sub
outsl
jbe
add
xor
jb
jl
add
mov
hlt
stos
add
sub
ljmp
xor
in
repnz
pop
ret
pop
xchg
dec
or
mov
sbb
add
sub
lcall
shrb
fldl
or
or
test
ljmp
mov
popf
leave
jp
call
add
loop
std
mov
ss
push
stos
in
sbb
jbe
mov
jb
xor
mov
int
clc
push
fsts
push
lret
out
mov
icebp
mov
call
inc
sarl
xchg
popa
mov
jb
cmp
aas
dec
enter
push
mov
xor
pop
aaa
std
das
pop
adc
mov
inc
sti
adc
mov
adc
and
xchg
xor
add
xor
es
push
push
aam
rcr
cmpsb
push
mov
pop
sub
test
sub
div
lcall
cmp
std
mov
xor
inc
push
sbb
dec
cld
mov
inc
add
mov
or
mov
movsl
inc
sahf
inc
jo
xchg
or
dec
dec
rol
sbb
xor
sub
sbb
or
outsl
sahf
jle
xor
push
inc
call
out
inc
mov
in
push
ljmp
mov
jge
jae
sbb
xor
pop
and
icebp
ret
add
sub
jle
outsb
adc
movl
and
mov
lcall
jle
mov
dec
push
aaa
and
sahf
push
outsl
in
jmp
adc
mov
sbb
sbb
andb
scas
scas
or
mov
xor
or
dec
out
in
cvtps2pd
xchg
mov
ja
and
cmp
inc
and
lods
imul
xchg
or
mov
or
shll
jbe
jmp
fldcw
sub
cmc
sub
jae
arpl
out
jnp
or
mov
cs
outsl
sbb
sub
in
les
lret
push
movsl
sbb
mov
outsl
fistps
stos
mov
pop
fcoml
push
push
or
sbb
outsl
aam
cmp
push
imul
add
outsl
fbstp
mov
fisubrl
div
mov
lock
or
inc
add
lret
cwtl
dec
std
mov
divl
and
push
test
test
popf
xchg
cmpl
jmp
jg
inc
clc
aad
es
test
inc
dec
pushl
hlt
pop
push
popa
flds
fst
rcrl
inc
das
aad
mov
xor
xchg
mov
adc
xchg
mov
mov
jg
jb
addl
jne
mov
cmc
xchg
in
nop
mov
aad
filds
imul
pushf
adc
inc
icebp
aas
sbb
stos
movsl
fcmovnu
icebp
into
lods
adc
jo
mov
adc
fists
xchg
fstps
xchg
xor
xchg
fildl
and
pop
pop
xor
es
sbb
frstor
dec
outsl
xor
and
cmp
call
ljmp
sub
cmp
insl
imul
mov
mov
idiv
fstpl
ret
or
daa
cmpsl
and
pop
cmp
inc
sub
xor
ja
dec
push
push
sbb
mov
loop
call
push
push
int
sub
shrb
and
scas
xchg
xchg
xor
fcmovu
mov
test
lods
scas
and
xor
incl
jo
test
scas
fiaddl
or
dec
popw
inc
fldt
cmp
subl
jno
xlat
test
loop
dec
gs
lock
insl
insl
push
sbb
pop
in
mov
sub
sbb
dec
mov
xlat
inc
pop
stos
or
jno
mov
inc
mov
mov
lds
je
dec
fwait
mov
push
mov
mov
fsubrl
out
jecxz
decl
out
mov
adc
sub
mov
xor
push
adc
add
int
mov
fists
push
mov
jmp
mov
jno
adc
call
dec
mov
je
xchg
and
mov
push
nop
pop
mov
arpl
in
movsb
inc
cwtl
aad
xchg
mov
jbe
aas
or
mov
cli
das
mov
loopne
or
xor
adc
sti
xchg
mov
icebp
sub
hlt
dec
subb
sub
je
cwtl
repz
outsl
call
jns
sub
adc
add
test
and
push
adc
call
decl
rolb
stos
mov
pusha
dec
lret
push
ljmp
cmp
mov
lods
scas
or
or
call
sbb
adc
icebp
sahf
sbb
mov
fadds
or
cmp
mov
push
cmp
jle
mov
das
je
sbb
inc
pop
push
push
lock
pop
mov
adc
push
in
test
xor
stc
jg
jbe
pop
imul
jmp
fbld
pop
xor
out
mov
mov
push
push
fildl
xor
incl
pusha
ljmp
jle
addr16
sub
sub
xor
cmp
inc
xlat
inc
jmp
mov
fdivr
mov
cld
je,pt
push
lods
pop
jnp
lds
cwtl
enter
mov
and
pop
rcll
mov
stos
stos
jge
push
setno
div
aam
lea
jp
add
test
push
leave
cltd
shll
pop
ss
rcrl
sbb
lea
nop
insl
inc
xchg
out
roll
aaa
xor
push
sbb
loop
add
ret
inc
inc
sub
xor
pop
mov
dec
ds
jge
sti
pop
test
les
sbb
mov
sarl
dec
xchg
hlt
inc
mov
mov
dec
imul
and
in
clc
outsl
sub
and
outsl
mov
mov
dec
push
push
xor
sahf
cmp
sub
adc
imul
shlb
std
in
test
gs
das
push
xor
and
das
sbb
push
mov
cmpsb
imul
call
ret
lea
aad
scas
pop
lret
mov
cltd
sub
cmp
cld
ffreep
dec
lret
orb
push
jg
xor
xor
jno
pop
addr16
pop
test
sbb
adc
lds
lock
sbb
inc
push
push
pop
inc
pop
mov
dec
call
sub
fs
nop
mov
sub
sub
lahf
xlat
dec
popa
inc
aad
jmp
inc
fsubr
xor
test
outsl
sub
sub
les
xchg
es
cmpl
lods
or
or
cld
cmp
lea
sub
inc
pop
sub
mov
mov
shl
jg
loopne
push
xor
lock
in
jbe
addr16
insb
xchg
std
test
sbbb
jno
cmc
sub
adc
pop
or
mov
rcll
lahf
ret
addr16
fbld
movsl
cmp
ljmp
push
rclb
addl
outsl
icebp
daa
sub
sti
mov
aad
add
es
fldl
rol
and
fistpll
xorl
popa
xor
xchg
int
ss
rcrb
xchg
xor
mov
call
mov
mov
fs
xchg
aad
sub
and
mov
in
dec
adc
adc
sub
jno
jl
or
push
insl
xchg
pop
inc
pop
es
pop
sbb
rclb
push
insb
push
xchg
test
push
or
popf
push
pop
inc
jge
fwait
cmpsb
pop
jno
das
iret
std
out
std
add
dec
je
mov
sbb
ljmp
filds
pop
leave
jmp
div
or
mov
and
shl
inc
and
lcall
popf
sub
mov
pop
mov
xor
cmpsl
xchg
repz
mov
mov
add
and
cli
mov
xchg
xor
lcall
mov
loopne
xchg
stos
into
ja
loop
inc
add
push
add
jo
add
or
sbb
and
int
imul
jbe
cmp
sub
cld
ss
adc
cmpsb
cwtl
sbb
xlat
arpl
int
popa
jmp
xchg
repnz
les
mov
jg
sbb
pop
loop
mov
and
or
inc
xchg
stc
mov
roll
in
in
test
call
das
fdivrl
jns
pop
jnp
jns
into
mov
jnp
sar
rcrl
fldt
std
pop
pop
push
test
je
loopne
push
pop
jp
fucomp
ret
outsl
pcmpeqd
xchg
scas
jne
test
mov
jmp
das
adc
sbb
ss
outsl
clc
cmc
pop
sbb
push
popa
add
dec
sbb
pop
mov
sub
pushl
lock
pop
inc
sbb
cmp
push
outsl
mov
decl
add
scas
pop
lock
mov
and
imul
ret
mov
mov
jl
sahf
sub
sbb
mov
xchg
cmp
xchg
sbb
and
lods
pop
xchg
daa
inc
mov
shl
mov
pop
jp
xor
or
sub
mov
and
es
lcall
or
push
and
inc
sbb
sub
mov
xchg
mov
and
sahf
mov
mov
pop
cli
cmp
repnz
or
enter
rorl
push
adc
cmpsl
les
jg
mov
out
dec
test
push
add
add
inc
in
pop
mov
jg
lock
jno
push
inc
sbb
int3
and
pop
mov
clc
negb
repnz
pop
lods
jp
dec
shlb
mov
or
push
dec
fs
loope
sbb
clc
popf
mov
and
lds
test
mov
cwtl
cmpb
ds
outsl
decl
enter
pop
aad
call
ficoms
xor
cmp
loope
dec
mov
xor
insb
clc
add
clc
rolb
in
out
xchg
mov
test
or
mov
in
mov
add
jmp
sub
ret
in
cwtl
mov
add
mov
jb
ret
push
add
pushl
mov
mov
loopne
xorb
cmp
push
or
or
add
and
cs
mov
fcomps
and
adc
test
scas
frstor
fsubrp
dec
cltd
fcomp
test
mov
jecxz
fdiv
ljmp
pop
adc
outsl
call
jo
mov
movsl
aad
pusha
adc
repz
xorl
pop
mov
popf
pop
inc
xor
mov
or
cli
fwait
mov
push
mov
sbb
aad
leave
xor
pop
sub
outsb
mov
movsl
mov
sub
movsl
jp
loopne
loope
adc
test
adc
jo
xchg
dec
dec
cld
movsl
out
add
sub
pop
inc
inc
rorl
rorl
cmp
mov
imul
ret
adc
xchg
stos
jge
int
stos
or
mov
idivl
pop
fistpll
nop
xor
mov
xchg
inc
mov
mov
lea
sub
mov
mov
sbb
daa
sub
lds
std
inc
insl
aad
lea
mov
sbb
test
insb
mov
icebp
shrb
push
mov
jg
repz
outsl
adc
and
adc
fucomi
pop
loopne
test
out
inc
jnp
mov
push
roll
icebp
leave
jb
jl
jne
cs
std
aaa
andl
and
or
adc
push
stos
sbb
mov
imul
les
inc
sbb
fdivl
pop
cltd
rolb
mov
cmp
sbb
lcall
fs
cmpsl
adc
cmc
inc
dec
xchg
sarb
ds
test
and
xlat
dec
cmpsl
jecxz
add
js
outsl
js
shlb
scas
ret
sub
pop
outsb
pop
add
pop
add
xchg
orb
push
jmp
cld
cmp
into
imul
add
sbb
xor
push
cmp
stc
shrb
int3
or
inc
mov
inc
pop
mov
xor
xchg
sti
loopne
arpl
pushl
sub
jno
add
adc
adc
jne
sbb
pop
fbstp
sub
and
add
cltd
jle
adc
mov
add
pop
or
lock
adc
sub
shll
lcall
jne
ficoms
jg
std
pop
xor
aas
movsb
sti
xor
push
int3
push
cmp
pop
mov
jge
mov
movsb
adc
test
mov
and
fs
push
pop
sbb
or
pop
inc
mov
mov
jecxz
decl
jo
mov
jmp
repz
call
cltd
sub
lahf
rorl
dec
mov
sbb
push
inc
jbe
or
test
xchg
mov
and
movsl
jl
scas
rclb
into
mov
aas
mull
adc
js
frstor
outsb
lea
mov
pop
mov
push
flds
lcall
in
add
add
push
outsb
je
ss
and
mov
lcall
push
jno
jle
scas
lret
pop
clc
loopne
insl
ss
pop
cmp
and
stos
inc
mov
stos
sub
loopne
arpl
xor
nop
adc
stos
ljmp
jg
out
lock
pop
stos
xor
inc
pop
sub
inc
pop
or
das
insl
mov
inc
add
ret
mov
pop
jg
inc
add
les
fimull
sub
dec
and
inc
scas
into
cld
pop
add
stos
xchg
addb
movsl
adc
rcll
mov
mov
inc
cmp
pop
mov
pushl
insl
and
inc
mov
inc
das
fildl
sbb
pop
lods
les
int3
inc
ror
xchg
inc
aaa
inc
mov
jl
add
lods
inc
decl
test
dec
cmpsb
sbb
idivb
pop
lahf
push
aam
lahf
iret
lahf
and
xor
adc
loop
test
mov
dec
dec
cli
test
jecxz
and
cmp
inc
popf
ljmp
pop
stos
or
les
or
ljmp
loope
fadds
loope
cmp
fadd
mov
xchg
dec
add
call
test
sbb
filds
mov
cltd
or
and
fwait
xor
repz
pop
loopne
jmp
ds
jb
popf
aam
and
mov
sub
icebp
cmp
and
mov
mov
jne
cld
or
shrb
mov
cmp
adc
insl
hlt
mov
mov
mov
push
fs
popf
dec
lret
out
mov
data16
push
push
movsb
filds
repz
xor
jge
add
hlt
mov
aam
outsb
pop
or
stos
daa
or
leave
sarb
loope
aad
sub
movsl
pushf
test
push
addr16
loopne
mov
clc
rcr
fisttpl
mov
adc
jb
mov
or
lock
ljmp
icebp
insl
stos
cmpsl
mov
ss
cld
cmp
jle
sub
or
stc
repnz
sahf
std
dec
inc
jne
cs
and
dec
add
and
mov
adc
xor
aas
out
mov
cmpsb
or
adc
in
cmp
push
push
mov
jb
and
push
fstpt
adc
adc
adc
hlt
cmp
and
sbb
dec
scas
pop
outsl
mov
sub
mov
mov
rorb
adc
and
ret
add
mov
lock
lods
pop
inc
push
mov
arpl
pop
out
ljmp
sbb
cli
pop
lods
add
jno
pop
bound
dec
add
push
mov
mov
fucomip
insb
imul
xlat
push
pop
hlt
das
mov
fldt
sti
cmp
adc
loope
and
ss
icebp
jg
mov
insl
push
add
fidivrl
iret
test
lcall
lret
cmp
adc
add
cmp
xchg
incl
mov
pop
enter
loope
adc
icebp
add
pop
enter
or
dec
cmp
mov
push
or
dec
arpl
mov
and
icebp
jns
xor
jg
repz
out
ljmp
xchg
test
and
je
cli
cltd
pushf
andb
repnz
sti
in
xor
xchg
or
mov
cwtl
inc
jns
adcl
movsb
lods
movl
aam
dec
dec
pop
je
adc
lcall
in
or
xchg
jbe
mov
aam
adc
sub
in
or
sar
mov
ds
stc
push
sbb
pop
je
and
mov
dec
dec
rcrl
xchg
sbb
repnz
and
cwtl
sub
fsubs
stos
mov
inc
pop
sub
sub
jp
jl
test
out
sbb
and
mov
and
leave
cmp
jbe
shr
pop
mov
cld
mov
std
mov
loope
pop
repz
sub
insl
jo
sarb
inc
xchg
int3
cli
mov
and
clc
pop
stos
add
hlt
ret
add
mov
das
mov
and
push
inc
insl
int3
mov
add
je
adc
fidivrl
icebp
dec
jo
fcmove
imul
lods
incl
pop
dec
flds
stos
sbb
fcmovbe
inc
test
dec
and
outsl
mov
mov
lea
lahf
ja
pop
arpl
pop
mull
jb
push
sar
xor
sbb
or
sbb
jg
xchg
movntps
xor
mov
scas
adcb
mov
mov
cwtl
inc
mov
push
or
pop
push
movsl
xchg
adc
push
mov
mov
pop
pusha
sti
aad
negb
filds
adcb
push
orb
mov
and
enter
incl
lods
sbb
inc
shlb
out
mov
or
xchg
or
movsb
test
loop
aaa
jle
add
inc
inc
aaa
mov
push
jb
or
in
sbb
subl
shrb
push
or
stc
add
add
jle
push
cld
and
mov
dec
pop
out
aam
add
hlt
jg
lods
mov
fs
test
and
xlat
daa
sbb
mov
icebp
jno
lock
pop
hlt
test
push
jno
add
adc
scas
jg
lahf
loopne
mov
fcomps
mov
arpl
ljmp
pop
mov
mull
xchg
sub
mov
adc
pop
test
les
fbld
shll
mov
and
out
test
mov
xor
out
jg
mov
mov
dec
fldl
ds
ss
xlat
push
pop
xor
or
mov
lret
mov
pop
fs
push
stos
adc
fs
sbb
inc
mov
jo
pop
ja
inc
data16
das
jl
fldenv
cmp
inc
lret
or
inc
sbb
xchg
mov
call
out
pop
mov
rep
sub
pop
mov
mov
jnp
loop
movsl
sub
push
mov
movsb
pushl
fbstp
inc
incb
xor
xchg
push
add
mov
push
adc
pop
adc
push
xor
xor
lods
cli
fbstp
sbb
or
cld
test
add
mov
mov
decl
inc
jg
test
xor
inc
cmc
and
push
add
ss
cmpb
jl
cmp
inc
cli
sbb
out
fcmovnbe
or
nop
push
divb
sbb
xor
mov
ficomps
mov
jne
push
icebp
lods
in
xchg
loope
ss
xchg
notb
out
das
adc
add
js
fbstp
imul
sarl
or
fistl
adc
mov
ja
push
roll
cmp
roll
mov
dec
adc
in
lea
data16
xor
cs
fdivrl
cmpl
jno
jle
aaa
adc
sahf
dec
rorb
lcall
je
mov
inc
mov
mov
mov
popa
faddl
mov
ret
dec
insl
cli
jb
adc
jmp
das
mov
inc
pop
or
xor
mov
sub
loopne
outsb
cld
popf
jne
and
jecxz
decl
push
sub
clc
movsl
or
sub
mov
rcl
aaa
loope
pushf
push
leave
outsb
aaa
push
add
scas
sbb
add
pop
fisttps
test
pusha
mov
enter
and
std
jg
enter
xchg
fsubs
ss
mov
adc
mov
lods
and
inc
mov
outsl
ja
ds
test
jg
addl
jl
cmc
ret
andb
push
cmc
outsb
stos
into
dec
lahf
arpl
add
fdivl
inc
cmpsl
jae
and
xchg
jecxz
sub
cld
in
pushf
inc
jbe
std
jg
dec
divps
out
pop
aad
test
loope
call
js
xorb
inc
cmp
push
cltd
cmp
mov
outsb
das
jl
and
adc
mov
int3
sbb
push
xchg
jg
sub
out
call
int3
imul
and
outsb
mov
in
push
mov
mov
sti
pop
hlt
sub
repnz
mov
call
push
jmp
jmp
jns
shrb
mov
shrb
fldt
scas
xlat
push
jb
int
xor
add
call
cmpsl
fidivl
add
dec
mov
in
sub
pusha
icebp
jns
stos
adc
outsb
aas
xor
cmp
out
mov
clc
jecxz
pop
shll
les
and
pop
mov
xchg
test
ds
mov
or
inc
leave
xchg
lahf
xor
into
xor
mov
fimuls
adc
pop
push
orl
push
pop
mov
stos
xor
nop
pop
mov
pusha
push
test
pop
inc
rcl
lcall
cmp
mov
sbb
xchg
lea
xchg
xor
xor
inc
lret
loop
xchg
sbb
pusha
inc
pop
in
xor
xorl
mov
xchg
fwait
lock
add
cmp
fisttps
inc
inc
mov
das
cwtl
push
or
fidivs
hlt
lahf
lret
pop
mov
mov
icebp
fcomip
cmpsl
lcall
mov
lret
inc
rcrb
mov
jno
pop
test
hlt
add
mov
xchg
js
jg
jecxz
and
add
and
sub
sarl
push
pop
je
leave
out
cs
clc
adc
inc
push
adc
mov
mov
fwait
test
mov
push
cld
xchg
or
xchg
mov
pop
std
icebp
jg
pop
add
cltd
dec
and
add
adc
mov
ja
mov
inc
and
adc
mov
movsl
cmpsb
push
xor
or
mov
pop
fisttps
sub
daa
add
push
or
adc
push
dec
cs
lock
movsl
lahf
outsl
add
hlt
mov
and
subb
iret
pop
in
push
nop
add
pop
xor
fstpt
lods
mov
ljmp
push
push
cmpsb
fstl
sar
pop
inc
call
add
mov
shll
jns
loope
cli
inc
inc
mov
push
sti
adc
outsb
je
sub
jo
cwtl
cmpsb
jecxz
test
aas
push
xor
pushl
bound
inc
mov
cmp
inc
mov
out
add
push
aaa
fsubs
push
imul
lock
cmp
push
call
sbb
sub
mov
call
shr
cli
and
add
loopne
adc
pushl
aad
add
rcrl
int3
pop
push
ds
decl
dec
ss
jnp
cli
push
dec
jl
int3
lods
sbb
inc
xchg
jg
sbb
ja
call
movsl
aas
test
sub
cwtl
cmp
test
adc
in
lods
sub
cmpsb
shl
fmuls
xlat
mov
pop
xchg
adc
push
pextrw
mov
jmp
or
mov
lcall
mov
and
aaa
push
and
sbb
jae
xchg
aas
xor
mov
fcoms
je
inc
sbb
fdivs
outsl
push
xchg
add
cmpsl
scas
mov
push
scas
cs
pop
pop
mov
mov
adc
std
loop
push
lcall
int3
cmc
cmpsl
pop
xchg
cli
or
jl
push
and
jl
add
fidivs
sub
dec
add
repnz
push
cmp
dec
mov
jle
adc
fs
fs
jno
push
popf
jbe
out
popa
mov
das
pop
out
jbe
xor
pop
cmp
fs
jg
mov
cmp
pop
fsts
loope
sbb
sub
pop
fsubs
push
cli
fldcw
mov
pop
je
test
lcall
lods
scas
cmp
mov
into
rcrb
pop
pop
push
add
dec
aaa
cmp
sbb
cmc
add
push
add
xorl
push
cmpb
sub
imul
jg
test
cmp
outsb
les
iret
test
movsl
clc
jno,pn
and
test
fcom
or
push
xorb
pop
in
outsb
sti
pushl
and
and
inc
mov
jb
sbb
incb
roll
xchg
stos
push
mov
mov
rcrb
pushf
movsl
test
mov
or
push
ljmp
sbb
fdivrl
or
mov
or
or
push
adc
sbb
mov
negb
cmpsl
outsb
xchg
stos
shrl
mov
xchg
push
mov
fisubrs
lds
fwait
cmp
inc
add
outsb
addl
adc
mov
mov
repz
lds
sub
fs
mov
cmpsb
xchg
sbb
add
sbb
lock
pop
xchg
daa
ja
mov
and
rcr
inc
lock
test
sbb
xor
jbe
jbe
sarb
pop
cmpsb
sbb
test
shll
clc
outsl
jl
aaa
out
lcall
xor
movsl
mov
sbbb
inc
hlt
or
test
xchg
xchg
xor
std
std
mov
inc
adc
push
out
mov
adc
mov
mov
push
mov
dec
daa
inc
sbb
andl
xchg
sbb
inc
jnp
jecxz
scas
mov
jne
mov
aaa
jo
mov
outsb
sbb
andb
dec
mov
call
push
cmc
fs
rcrb
xchg
aas
cmp
negl
jae
fidivrs
dec
adc
sahf
or
std
lcall
inc
push
cmp
popf
pushf
popa
mov
sub
mov
cmc
mov
mov
push
add
lcall
das
xor
cld
sbb
pop
add
push
es
add
clc
mov
dec
dec
sub
sbb
ret
pop
lahf
lods
sub
cmpsl
stc
dec
jle
adc
sub
and
daa
pushl
mov
outsl
sub
shll
xor
fistpll
loope
ficompl
aaa
les
lea
or
in
aaa
push
loop
addr16
adc
mov
stos
xor
gs
or
dec
mov
cmp
push
aad
pushf
push
in
insb
add
sbb
xchg
sbb
cltd
cwtl
push
push
sbb
fistpl
fiaddl
pop
enter
add
pusha
or
cmp
mov
shrl
xchg
mov
dec
mov
push
je
dec
in
and
push
sub
out
iret
xchg
nop
mov
call
jmp
jecxz
cmp
or
les
outsl
hlt
xchg
mov
push
jle
xchg
adc
sbb
sub
nop
sbb
adc
inc
jecxz
and
add
jecxz
jo
mov
pop
push
push
ljmp
sub
jmp
dec
xor
ret
fdivl
sub
dec
adc
jge
add
xchg
roll
lea
jp
inc
push
in
lea
mov
ja
lea
dec
add
add
cli
adc
jbe
pop
lds
fsubp
cmp
adcb
les
sarl
push
fneni(8087
sbb
andl
sub
gs
and
inc
dec
les
adc
in
mov
leave
loop
fdivrp
test
insl
dec
test
stc
sub
mov
cli
or
fnsave
and
push
fstps
loop
sub
gs
pop
pop
mov
inc
outsb
outsb
cmp
addl
lds
or
push
or
mov
bound
adc
adc
jecxz
and
shlb
cli
dec
popa
imul
fisttpll
sub
in
mov
aaa
xchg
imul
daa
sbbl
cmp
lcall
lea
cmp
cmp
outsl
clc
std
sbb
cmp
es
cmpsb
mov
in
aaa
jp
add
mov
in
not
dec
mov
repnz
push
cmp
icebp
mov
in
add
inc
cmp
rorb
sub
lock
jne
xor
mov
aas
or
mov
fucomp
mov
mov
loope
add
jl
push
bound
xlat
int3
ja
scas
jecxz
fldlg2
inc
pop
fsubrl
cld
jns
rcll
aam
mov
mov
mov
in
inc
test
mov
inc
lock
xchg
cli
outsl
sbb
rorl
adc
sbb
and
mov
insb
add
pop
pop
outsb
push
sbb
clc
ret
pop
mov
iret
jo
loope
icebp
mov
test
mov
jmp
ret
mov
rcl
fs
popa
or
jp
pop
dec
aam
das
jge
rorb
or
ss
or
push
mov
sbb
mov
mov
shlb
lds
cld
or
or
adcb
mov
inc
loope
lds
nop
lods
cmp
push
mov
mov
lahf
xor
je
mov
fstl
mov
imull
xchg
adc
adc
jmp
xor
shlb
add
dec
clc
lret
jbe
lea
sbb
fisubrs
inc
push
imul
in
daa
adc
loop
call
cmpsl
jp
lea
add
nop
jge
fbstp
dec
bound
aas
dec
push
dec
pushl
imull
imul
loop
fcom
cli
mov
call
add
and
sbbl
mov
xor
push
xchg
arpl
jb
orw
add
cwtl
ljmp
in
in
test
jbe
jb
adc
movsb
jle
cltd
insl
jecxz
and
add
fbld
jo
sbb
lock
rorl
cs
mov
and
mov
add
mov
mov
push
adc
jle
call
push
jno
mov
pop
mov
fldt
insl
fimuls
fsubs
adc
jae
orps
cld
pop
pushf
jmp
mov
and
and
shlb
cmc
or
mov
add
jbe
inc
dec
jmp
cwtl
or
test
cmpsl
lods
adc
js
sub
fwait
decb
orl
clc
mov
or
jns
mov
and
call
sub
inc
out
cmp
in
mul
pop
lret
lahf
stc
fucomip
fiaddl
jnp
enter
mov
jecxz
incl
fsubl
jbe
xor
sahf
rcrl
jle
cli
push
fcomps
out
adc
mov
pop
mov
ret
pop
ds
outsb
pop
clc
mov
inc
ret
stos
sub
mov
mov
xchg
cmp
inc
daa
sub
cwtl
iret
dec
cmpsb
mov
ja
or
jbe
cs
push
mov
mov
xchg
cmpsl
insl
in
mov
mov
scas
xchg
sbb
mov
push
testl
inc
pop
clc
cmp
sbb
cmp
xchg
xor
sbb
popa
enter
and
and
aad
pop
mov
rep
jo
push
push
stos
mov
xor
dec
mov
orl
out
push
pop
loope
test
test
xor
jb
loope
lds
lret
sub
push
cmp
mov
sbb
sbb
or
call
push
inc
or
cmpb
arpl
sbb
adc
shlb
cmp
pop
jg
mov
inc
jns
push
add
and
aas
jg
adc
pop
es
ret
add
insl
mov
nop
inc
add
fbld
lahf
cmp
dec
in
movsl
popa
cmc
icebp
cmp
sbb
outsl
mov
leave
stos
mov
or
mov
inc
add
dec
mov
sar
sub
movb
mov
pop
insb
cld
push
add
into
dec
mov
and
test
xchg
sti
push
outsb
mov
les
stc
mov
push
ss
dec
adc
sbb
and
cmp
cltd
mov
adc
inc
in
aas
mov
out
ficompl
enter
outsb
xchg
jle
aam
jnp
jle
ret
data16
push
fisttps
xor
mov
jno
jmp
jb
adc
sub
push
js
decl
jg
inc
incb
and
ds
stc
mov
sbb
lock
xor
cmpsb
cmp
outsl
outsl
hlt
mov
xor
es
out
mov
cmp
inc
jp
dec
adc
outsl
dec
push
imul
icebp
pop
call
cmp
push
push
push
sub
jo
sub
movsb
lock
in
incl
rcrl
mov
mov
mov
out
sub
sbb
outsl
cli
orb
test
inc
decl
lods
aas
int3
mov
insl
notl
or
sbb
adc
inc
ja
and
test
push
push
lcall
nop
dec
nop
mov
lods
stos
adc
push
daa
insb
adc
mov
or
leave
mov
xor
or
aaa
sub
aas
jb
int3
mov
adc
mov
in
das
ds
movsl
inc
test
pop
jg
or
xor
mov
mov
leave
outsl
fcmovnbe
push
repz
jl
sub
cmpsl
adc
call
cli
leave
nop
lret
push
outsl
jmp
cli
mov
cmpb
inc
lahf
mov
std
mov
cmpsl
inc
movsb
ret
or
test
xor
aam
adc
or
adc
mov
mov
ret
inc
inc
gs
jmp
jns
mov
mov
outsl
sub
fcom
int3
rcll
adc
outsl
fidivs
into
cmp
outsl
push
out
loopne
xchg
enter
jnp
mov
adc
sti
imul
fistps
add
mov
xchg
pusha
pop
data16
mov
or
pop
imul
and
flds
lock
inc
jg
or
mov
aaa
stos
sbb
loop
daa
sub
sub
aaa
icebp
mov
je
pop
inc
dec
jg
mov
out
idiv
xor
xor
popf
or
cmc
test
jne
ja
repnz
loope
pop
lret
pop
inc
mov
xor
pop
jp
xchg
in
dec
icebp
lods
ja
enter
cvttps2pi
and
or
lds
push
xor
cmp
in
in
sub
sbb
fimull
fistps
dec
lret
fsub
das
add
in
insl
xchg
mov
std
repz
stos
jo
pop
pop
pop
clc
stc
das
insl
mov
mov
loope
or
dec
mov
mov
popf
push
rorl
sbbb
mov
rclb
test
add
add
stc
adc
add
xchg
jg
pop
fsubp
xchg
sub
dec
loope
test
pop
mov
test
mov
mov
inc
mov
cmp
loopne
subl
and
call
push
loop
or
std
jg
cli
and
mov
xchg
out
and
push
lea
js
shll
loop
mov
roll
cmp
fadds
mov
dec
mov
lods
mov
sub
mov
loop
outsl
xlat
sbb
sbb
call
and
dec
cmp
popa
jnp
dec
add
cmp
xor
and
xor
adc
iret
push
inc
es
insb
push
std
xchg
outsl
sub
push
push
pop
push
or
mov
cmp
loope
aaa
and
xor
dec
pushf
aam
and
nop
add
fstp
test
and
sub
icebp
lea
nop
popw
gs
mov
mov
pop
jne
or
aad
jno
xchg
dec
int
sti
push
mov
cmpsl
js
pop
pop
mov
pop
aaa
in
leave
mov
mov
lret
addr16
repz
test
mov
aad
pushf
jno
in
jp
fucomip
push
pusha
xor
inc
push
dec
arpl
xor
adc
outsl
pop
sub
jns
icebp
fstps
add
mov
sbb
roll
sbb
mov
mov
dec
mov
adc
and
andps
stc
and
and
cmp
adc
xorb
in
testb
pop
incl
nop
and
mov
outsb
add
jbe
test
add
inc
insb
pusha
cmp
jg
outsb
fbstp
adc
pop
cmp
fidivs
ljmp
es
ss
enter
cld
loop
mov
test
and
pop
jne
xor
pop
loopne
jno
adc
add
std
add
xchg
xchg
adc
std
dec
cld
mov
push
cld
nop
mov
or
test
xchg
add
das
adc
shlb
xchg
fwait
lea
dec
je
fcompl
ja
add
call
adc
and
subb
lret
or
xor
jp
mov
mov
add
inc
pop
sub
xor
pop
test
adc
popf
ja
inc
lcall
fs
loop
or
adc
inc
insb
cld
sub
adc
add
movsl
mov
mov
pop
enter
cs
imul
cmp
sbb
cmp
out
je
repz
push
adc
aaa
xor
xchg
mov
rolb
ss
test
push
jg
fcomp
push
insl
cmp
dec
pop
push
test
std
mov
jo
jle
xlat
bound
add
scas
mov
hlt
push
jecxz
ljmp
mov
sub
jbe
push
inc
orl
aas
icebp
mov
add
es
mov
mov
decl
xor
sahf
push
clc
xchg
aas
jmp
inc
rolb
sub
addr16
inc
pop
cmp
jo
pop
outsl
lret
inc
adc
sbb
popf
sub
jae
rol
jl
mov
decl
pop
in
mov
push
and
push
lret
gs
fs
test
and
or
mov
pop
mov
std
adc
cmpsb
aam
cmp
lcall
mov
lcall
fmull
add
std
push
xor
inc
movd
mov
jmp
stos
adc
js
xlat
repnz
icebp
xchg
les
jne
enter
xchg
out
dec
test
filds
xchg
xorb
jno
pushf
sti
ret
mov
lret
pop
fstps
out
mov
in
mov
add
pop
clc
es
dec
sbb
sub
fcmovnu
jg
into
sub
adc
xorb
push
and
test
mov
add
inc
push
mov
call
mov
outsl
je
jle
fildll
and
lds
ficoms
pushf
sbb
mov
add
push
cwtl
loope
gs
inc
bound
mov
sahf
cltd
int3
sar
and
jmp
or
daa
int
test
xor
and
push
lds
or
daa
cmpsl
pop
or
mov
insb
enter
dec
insb
adcb
arpl
fsubs
insl
outsl
std
ja
jg
adc
pop
push
sub
fs
addps
dec
cld
inc
mov
cmp
out
sbb
add
and
cmp
jae
shrl
fildll
dec
sbb
imul
sub
les
push
jg
dec
in
leave
and
cmp
stos
pop
loop
ffreep
and
jecxz
mov
pop
add
jecxz
incl
mov
fldl
shll
std
ret
push
mov
iret
mov
adcb
loop
dec
pushf
gs
xor
jg
mov
in
adc
aaa
inc
xchg
inc
outsl
push
sbb
push
mov
decb
decb
mov
xchg
add
scas
push
and
lea
inc
sbb
das
out
dec
push
clc
push
fisttps
ljmp
clc
dec
sbb
jp
icebp
mov
ror
dec
gs
xor
cli
jbe
mov
jbe
adc
pop
test
jg
mov
mov
test
xorb
mov
xchg
add
dec
in
inc
pop
jp
dec
js
sub
adc
sete
push
cld
and
inc
ja
lods
mov
int
imul
pop
fwait
in
mov
jo
jno
aas
ss
rcl
or
mov
mov
mov
ljmp
xchg
sub
adc
aaa
clc
jg
mov
inc
loope
sahf
sbb
stc
mov
pop
push
add
jmp
push
jge
mov
sbb
shl
dec
outsl
jl
sbb
cmpsb
pop
and
push
shr
js
pusha
repnz
inc
cwtl
lret
fwait
cli
mov
inc
cmp
mov
aam
inc
fisttpl
xor
addb
rcll
out
push
mov
mov
mov
aaa
jmp
adc
fisttps
jge
cld
fidivrl
mulb
adc
pop
mov
xor
mov
es
add
jge
dec
lods
sbb
push
push
icebp
cmp
push
sub
loop
dec
jl
or
cli
pop
lahf
and
or
push
bound
cli
push
insb
iret
push
or
stc
mov
clc
xchg
mov
pop
outsl
xlat
or
test
xchg
inc
in
aad
js
pop
ret
add
es
push
inc
jbe
das
lock
fldenv
add
xchg
jg
push
inc
sub
mov
es
in
pop
mov
jecxz
adc
pop
mov
or
je
add
clc
push
fwait
xchg
nop
mov
sar
sbb
inc
rcll
add
rcrb
jg
fwait
xchg
fildl
adc
sti
fdivr
add
or
ds
insl
mov
sub
pop
or
xchg
add
lock
pushf
mov
nop
xchg
pop
mov
mov
ja
dec
cmpsb
cmp
push
jns
fistps
mov
mov
test
push
cli
add
xor
inc
adc
call
push
ret
lods
xchg
xor
pop
das
xor
push
outsb
mov
cmp
sub
rclb
push
xor
enter
loopne
fcoms
and
clc
mov
mov
sbb
and
lcall
icebp
mov
pushf
pop
decl
je
xchg
sub
jmp
add
pop
jmp
ja
or
xorl
pop
jno
add
mov
sahf
mov
cwtl
lock
push
add
inc
pop
mov
jno
imul
ret
out
aam
testb
adc
lods
mov
xor
lcall
dec
cmpsl
sub
cwtl
push
add
pop
mov
jns
je
sub
sti
adc
jno
jle
scas
inc
aam
jne
lds
inc
add
sub
scas
loop
loope
into
hlt
call
mov
andb
xchg
add
xchg
and
fdiv
push
lods
into
mov
icebp
in
or
or
and
push
mov
add
mov
sahf
push
inc
sti
pop
add
cmp
std
aam
sbb
cld
add
dec
and
jg
adc
mov
dec
inc
in
mov
pop
push
jo
jno
jns
outsl
mov
dec
sar
adc
daa
aas
xchg
mov
test
mov
push
ret
popl
xchg
inc
lea
ss
cld
inc
dec
push
aad
jmp
mov
dec
pop
lret
rcrl
adc
shrl
into
jle
push
dec
mov
dec
adcb
adc
lods
inc
int
jno
fs
lcall
cmc
xchg
lea
and
test
lret
test
dec
mov
xor
dec
sub
jmp
jg
lahf
idivl
add
and
aas
inc
pop
mov
lret
pop
icebp
mov
cmp
out
fs
ret
incl
adc
pop
hlt
cmp
mov
or
sub
jno
pop
inc
jg
mov
sahf
adc
les
push
xchg
fst
jg
pop
xchg
test
xchg
cmc
in
aaa
add
xchg
cmpsl
jo
cltd
xchg
cmp
lods
and
sub
sub
inc
nop
add
push
shrl
std
mov
or
xlat
mov
leave
nop
or
call
add
add
inc
sbbb
shll
pop
test
cmp
cmp
cli
inc
inc
pop
sub
xchg
cld
test
jle
push
mov
out
and
pop
sub
sbb
and
lods
stc
mov
sub
or
push
push
bound
xchg
adc
imul
mov
shl
dec
inc
mov
mov
cli
sbb
adc
loope
jl
es
nop
pop
xchg
mov
incb
mov
sbb
lahf
jae
loope
shlb
jge
nop
out
push
js
push
pushl
and
jne
ljmp
and
pop
cmpsb
loopne
mov
insb
popf
or
inc
filds
test
jp
addr16
sbbb
imul
xchg
fistpl
loopne
adc
jmp
loopne
dec
xor
imul
push
push
add
mov
je
inc
sbb
pop
lods
aam
mov
aas
push
xchg
std
pop
push
mov
roll
adc
dec
cmpsl
ja
cmpsb
dec
inc
jbe
mov
sbb
ds
pop
ljmp
in
mov
jb
stc
xor
mov
incl
lods
and
mov
sbb
int
mov
cmc
and
aas
push
imul
sub
adc
adc
shll
or
push
push
and
sbb
push
cmp
insl
mov
inc
outsl
inc
jae
push
imulb
dec
orl
cli
insl
jecxz
add
pop
fidivrl
mov
in
dec
cmp
sti
mov
div
pminsw
pop
inc
push
or
xchg
dec
repnz
aam
loopne
pop
leave
and
aaa
sub
mov
push
adc
xchg
or
das
pop
add
push
call
enter
jg
inc
outsl
out
add
sbb
and
std
iret
js
leave
mov
or
push
or
sub
push
jbe
andb
dec
inc
aad
cld
subl
pop
rclb
cmp
cmp
push
add
out
sub
js
dec
lret
jecxz
push
sub
andl
jp
rcrb
cmpl
push
mov
rcl
comiss
incl
in
fsin
and
ss
das
js
in
dec
bound
stos
adc
fldpi
movsl
lods
inc
mov
das
cld
negb
sub
and
cli
jo
nop
push
lcall
cmpsl
mov
addr16
adc
cmc
in
lret
addr16
adc
and
mov
adc
cli
aaa
inc
imul
jecxz
and
std
scas
outsb
rcr
jnp
aam
sbb
enter
sub
ret
dec
push
and
std
or
adc
xor
rclb
mov
in
decl
mov
nop
stos
loop
lock
out
add
addr16
loopne
mov
in
xchg
jno
mov
mov
iret
aas
rorl
fistpll
out
enter
mov
or
cmp
subb
cmpsb
int
test
mov
mov
loopne
faddl
sub
pop
push
push
sub
clc
sbb
adc
lods
test
adc
fdivs
sub
dec
or
xchg
jge
int
test
pop
mov
inc
cltd
add
mov
fildl
cld
inc
cld
out
fisubs
mov
jmp
iret
fnstsw
xchg
sbb
push
cwtl
push
std
push
mov
mov
pop
adc
and
pop
ljmp
xor
and
movsl
jg
mov
nop
into
sub
int3
push
fcomps
cmp
je
xchg
es
xchg
stos
mov
mov
pop
push
xchg
sbb
stc
leave
xor
mov
mov
sub
mov
lret
add
repnz
jge
add
hlt
lods
cmp
in
das
xor
nopl
nop
xlat
shl
mov
jnp
es
or
int
dec
sub
or
out
push
xor
push
sbb
pop
aad
mov
xchg
pushf
mov
jae
dec
in
int3
push
insb
out
imul
xchg
sub
jg
mov
add
or
sub
jnp
sub
mov
ds
mov
loopne
fwait
xchg
mov
jp
mov
sbb
clc
mov
pop
add
movsb
adc
mov
xchg
ljmp
mov
adc
dec
dec
add
and
adc
push
mov
adc
xchg
icebp
popl
daa
add
xor
pushf
xor
ljmp
outsl
leave
or
jae
test
outsb
aaa
loopne
aas
sub
mov
cmp
lods
dec
xlat
pop
js
xorl
aas
sub
iret
mov
dec
or
sahf
cli
push
gs
std
lcall
test
ss
and
cmp
sbb
dec
ljmp
push
loop
lahf
loop
xor
lods
and
mov
dec
pop
shll
push
sub
test
mov
dec
aad
mov
xchg
xchg
mov
std
inc
lret
xchg
imul
hlt
lea
pop
jecxz
add
sbb
outsl
fcoml
repz
add
dec
adcb
mov
testl
and
or
orl
pop
sarl
inc
add
push
and
test
add
cmp
shlb
sub
call
cmpsb
aas
daa
adc
out
cmp
add
dec
mov
push
loope
mov
sbb
pushf
ret
xchg
insb
rolb
add
mov
sarl
mov
stc
push
push
xchg
push
std
out
cmpsb
mov
testb
cli
test
sbb
mov
call
sbb
jns
add
and
sbb
repz
clc
dec
fcompl
push
mov
das
jl
jne
enter
ffreep
test
xchg
cmp
xor
push
xor
and
hlt
jns
lock
push
inc
faddl
fildl
pusha
cmpl
sub
repz
add
cmc
cltd
mov
jnp,pt
cmp
fcmovbe
outsl
jmp
les
iret
jo
sbbl
arpl
fidivrl
sub
fisttpl
test
fwait
push
and
cmc
inc
mov
lret
or
stos
adc
adc
sub
sub
pop
ja
popf
fprem
jmp
xchg
cld
pop
xchg
cli
in
dec
xor
mov
jne
xor
xor
sub
pusha
subl
add
add
scas
add
outsb
jl
push
std
push
cmc
aaa
push
scas
mov
mov
lea
inc
or
popf
jnp
aas
push
mov
adc
mov
xchg
ds
cmpsb
cld
cmp
jmp
loop
inc
outsl
mov
outsb
xchg
jecxz
cs
lcall
adc
push
cmp
pop
add
add
or
mov
inc
mov
or
cld
pop
sub
xor
dec
test
xor
std
test
incl
xor
adcb
jo
loope
pop
test
andb
cmpsb
mov
xor
or
pusha
sub
inc
fcoml
outsl
ljmp
je
xor
movb
push
pop
mov
lods
push
push
pusha
ret
ja
hlt
cld
jecxz
push
popf
and
sahf
add
les
dec
jl
jno
test
push
addb
cwtl
adc
dec
jmpw
aas
stos
icebp
inc
adc
lock
pop
push
jecxz
and
in
sbb
mov
push
push
pop
jg
fbstp
pop
mov
scas
push
out
outsb
adc
es
mov
sub
push
jmp
sti
aas
ss
cmp
aam
xor
inc
shll
pop
mov
outsl
hlt
push
lods
xor
jb
bound
je
nop
pop
sub
xlat
push
mov
pop
push
cmpb
data16
mov
push
add
dec
out
stos
mov
inc
jg
fdivr
ds
inc
stc
mov
data16
lods
pop
or
imul
pop
and
rcr
or
xchg
mov
pop
push
out
in
pushf
mov
inc
inc
pop
and
adc
div
repz
dec
fdivr
sbb
xor
mov
pushl
cmp
dec
jmp
xor
sahf
jb
mov
ret
shll
xchg
jecxz
xchg
in
mov
push
lds
mov
es
sarl
bound
mov
lods
cmp
fnstsw
sbb
cmc
dec
and
push
icebp
dec
arpl
xor
test
sbb
push
and
icebp
jns
add
or
and
lock
movsl
sbb
out
stos
test
js
sahf
movsb
pushl
or
push
sbb
add
inc
jecxz
mov
stc
cltd
bound
fdiv
sbbb
loopne
mov
repz
adc
lods
pop
mov
cvtps2pd
aaa
push
int
test
and
xchg
adc
or
pushl
mov
loopne
nop
orl
xchg
repz
push
mov
jo
push
lea
decl
pusha
inc
daa
push
xchg
mov
int3
out
in
and
push
rcr
clc
ss
rclb
push
inc
xchg
int3
mov
insl
pop
lcall
lcall
test
out
pushf
cli
jno
mov
mov
push
jge
sti
mov
les
scas
mov
xor
adc
cld
movsl
jle
in
repz
fisttpll
popf
cmp
lods
test
decb
loope
xchg
sti
scas
roll
clc
mov
add
inc
or
add
or
notl
shrb
pop
les
cld
mov
scas
ret
mov
cli
in
test
test
test
in
mov
les
jmp
and
subl
sbb
dec
or
sbb
hlt
jbe
mov
and
add
movsb
cmpsb
push
inc
xor
lods
add
mov
push
pop
imul
mov
mov
or
aas
mov
add
repz
push
lods
mov
in
or
jg
lahf
roll
inc
lock
xchg
mov
jns
pop
and
outsl
and
inc
ljmp
jo
fwait
iret
cmpsb
pop
mov
inc
mov
hlt
push
and
push
mov
cmp
into
aad
mov
pop
cmp
ljmp
and
bound
add
xchg
je
call
xor
sbb
ss
and
test
pop
mov
lock
mov
mov
lods
push
push
or
mov
cmp
test
jg
aas
aad
pop
notl
push
lods
xchg
dec
stc
outsl
adc
mov
aaa
clc
pop
adc
int
sub
outsl
mov
inc
jb
aad
cmp
or
bound
inc
xchg
inc
stos
imul
ds
shrd
insb
je
cld
xchg
cmp
loopne
push
testb
xor
cs
sub
fwait
ss
incl
icebp
xor
xor
mov
sbb
pop
ljmp
push
push
inc
popf
ja
in
cmp
adc
dec
cli
imul
cmpb
mov
sbb
mov
enter
sub
push
mov
cwtl
dec
inc
inc
dec
insb
or
mov
mov
aad
sahf
sub
mov
shll
lcall
aam
add
add
jmp
sahf
adc
push
mov
sub
aad
jo
mov
sub
sub
int
inc
adc
shll
mov
test
xchg
mov
out
lds
push
insb
or
xorb
outsl
mov
dec
cmp
push
lock
in
lds
adc
lret
filds
divb
je
push
bound
or
inc
pop
js
repz
ja
test
jmp
add
push
and
loop
mov
mov
push
mov
hlt
lods
or
out
dec
mov
imul
into
mov
xchg
inc
subl
dec
jo
inc
mov
or
cmpl
pop
inc
or
push
mov
hlt
mov
ret
dec
mov
add
stc
ja
ja
pop
xchg
call
in
out
ss
movsb
adc
clc
and
popa
aaa
clc
decl
pop
sti
pop
lcall
mov
cmp
daa
pop
aaa
arpl
mov
sub
xchg
mov
mov
or
jbe
cmp
pop
inc
cwtl
xor
inc
xchg
lods
mov
dec
mov
rcr
outsb
jnp
pop
add
ds
loope
jecxz
and
push
pop
adc
mov
pop
xchg
loopne
sbb
pop
out
add
outsl
dec
push
push
cmp
adc
xchg
push
data16
sub
xor
fs
stc
adc
add
lds
lret
mov
cld
mov
repz
popa
mov
push
movsb
and
std
or
ds
mov
lcall
dec
sbb
subb
xchg
adc
or
mov
fmull
loopne
or
cmpsl
inc
cld
loop
lock
outsb
mov
sbb
pushl
and
mov
xor
and
shrb
sbb
stos
mov
fbstp
js
imul
jo
out
jmp
dec
mov
bound
adcb
xor
pop
arpl
add
in
xchg
scas
bound
inc
and
mov
mov
into
or
push
mov
and
int3
inc
xlat
mov
shll
ror
push
mov
xchg
pop
inc
mov
enter
push
das
cmc
sub
rorb
adc
sti
hlt
sbb
mov
lret
cmp
mov
sub
add
aaa
outsb
dec
sar
movsl
test
sbb
mov
popl
jecxz
js
push
cwtl
loop
mov
nop
test
or
mov
sub
xchg
fbld
fs
cs
mov
mov
rorb
push
adc
mov
ret
dec
hlt
mov
ret
jnp
mov
mov
stos
mov
mov
pop
mov
inc
pop
xchg
sarl
mov
mov
bound
mov
cmp
and
pusha
mov
test
mov
mov
orb
cmpsl
aad
or
lea
pop
call
test
pop
gs
lahf
rcll
aam
inc
lock
rol
aaa
shlb
mov
stos
dec
sbb
in
ja
pop
das
inc
insl
mov
jo,pt
push
cwtl
gs
repz
add
mov
pop
pusha
out
clc
sbb
pop
push
jg
arpl
fstl
cmc
sbb
jno
jp
and
adc
sti
dec
or
push
sbb
ds
scas
pop
pop
les
pop
jp
push
jb
jl
loopne
arpl
add
out
outsl
insb
push
cmp
sub
jle
std
or
inc
inc
imul
sub
xchg
pop
pop
hlt
in
sub
or
aad
movsl
and
fadds
inc
ja
mov
dec
lret
rcrb
mov
jnp
loop
nop
add
rcrl
mov
inc
and
push
jg
adc
push
mov
cltd
add
out
push
popa
jno
or
lds
icebp
jle
jg
jle
insl
hlt
push
add
dec
mov
or
pushf
adc
push
ja
pop
pop
les
pop
adc
test
jbe
push
push
movsb
and
mov
rcrl
mov
xchg
shlb
push
mov
push
out
dec
mov
mov
push
mov
into
xchg
daa
mov
subb
sub
xlat
jecxz
cwtl
outsb
mov
cmc
adc
sub
iret
notl
push
test
xor
xor
add
cmp
je
pusha
xor
xchg
mov
std
or
or
dec
sbb
inc
pop
cmp
imul
stos
mov
aad
xor
in
inc
js
fwait
orb
sub
roll
cmp
xor
jle
jg
outsl
call
push
jecxz
inc
dec
addr16
and
jecxz
loopne
jne
in
mov
xor
fs
cmp
push
dec
pop
ds
dec
lods
in
std
dec
sub
lcall
frstor
inc
addl
movsl
stc
lods
add
jnp
test
clc
inc
mov
push
cli
test
dec
call
push
or
adc
push
fwait
mov
jbe
aad
lock
dec
sbb
movups
test
pusha
out
stc
loopne
fnstsw
out
shlb
mov
jg
divb
and
mov
ja
aad
flds
test
push
mov
jo
adc
xchg
adc
push
cli
jb
jne
push
sub
mov
jne
xor
subb
cmp
push
loopne
adc
lds
xchg
imul
inc
mov
pop
ss
iret
jne
lea
cmp
das
inc
sub
fisttpl
divb
fmuls
loop
push
push
mov
and
jb,pn
pop
pop
sbb
les
enter
decl
or
ljmp
dec
ret
xchg
adc
lods
ja
jle
sar
test
mov
js
and
push
fldt
jmp
in
mov
sti
lahf
jp
cmp
scas
test
das
das
add
dec
std
or
inc
and
daa
xchg
push
aas
adc
outsb
jne
cmc
pop
xor
test
pop
clc
loop
jecxz
mov
jecxz
nop
dec
es
cs
mov
pop
dec
sub
subb
ret
mov
pop
fs
or
mov
mov
sti
outsb
sub
icebp
dec
cmc
in
push
loope
movsb
mov
add
ret
dec
adc
cmp
adc
cmc
test
xchg
repz
inc
dec
jbe
data16
outsl
cld
add
cmp
cmp
xchg
mov
sub
in
inc
in
test
sub
mov
enter
or
or
fsubrl
pop
jb
add
jp
sub
lock
pop
add
and
push
lret
sub
sbb
mov
fiadds
cmp
cmpsl
xor
jb
fbstp
mov
daa
push
push
dec
push
jbe
ss
imul
adc
into
dec
xor
cmpsb
inc
inc
daa
dec
push
std
clc
adc
sub
cmp
mov
or
stos
cltd
ljmp
mov
pop
sub
ret
ret
sbb
push
jecxz
inc
pop
mov
addr16
mov
icebp
nop
pusha
push
sub
push
aaa
pop
hlt
es
push
xchg
ja
cli
aaa
fs
ljmp
sub
in
jno
lods
xchg
or
andb
push
clc
mov
mov
inc
push
or
fadds
mov
dec
pop
clc
mov
mov
and
jl
repnz
mov
imul
aad
add
call
push
loope
jecxz
cltd
imul
and
sti
ret
or
loopne
rol
rcll
jle
lahf
mov
xchg
jns
add
insl
mov
cld
cmpsb
aas
cltd
add
and
or
subl
aas
sub
mov
pop
test
cmp
test
jmp
or
or
and
loopne
mov
adc
incl
xchg
and
add
divl
mov
in
jp
or
loope
call
sarb
pop
pusha
cmpsl
lds
ret
cmp
dec
dec
lea
jge
cmp
xor
push
mov
mov
xchg
push
dec
pop
adc
adc
test
fdivrs
outsl
jns
sbb
scas
imul
movsl
js
lret
cmp
pop
push
in
decl
push
push
xlat
out
push
inc
nop
das
jmp
adc
pop
xorl
add
mov
imul
bound
mov
and
adc
sbb
scas
dec
mov
arpl
nop
cmpsb
fldenv
rcrb
mov
imul
add
out
mov
icebp
aaa
icebp
pop
xchg
fistpll
push
mov
pop
mov
cmovbe
das
pop
mov
jb
xchg
stc
sbb
add
or
push
shl
sbb
xchg
inc
aad
or
das
rclb
lods
cwtl
dec
ror
add
in
add
dec
inc
pop
lret
fisttpl
js,pn
repz
inc
mov
decl
adc
and
push
adc
cmp
or
xchg
inc
mov
mov
lods
dec
or
cli
icebp
sub
fsubl
fsubrs
push
push
xchg
adc
mov
jae
or
add
mov
add
cmpsl
cs
or
pop
cmp
jmp
sar
push
add
ret
rol
xor
rorl
lsl
ljmp
loope
sub
jecxz
cld
mov
shr
movsb
mov
inc
rcr
outsb
cli
dec
out
pop
xor
mov
sub
mov
pop
dec
sbb
mov
xchg
jg
sub
and
outsb
shrb
das
jmp
xchg
mov
dec
iret
loop
push
sbbl
imul
pop
lcall
push
push
jns
mov
hlt
jns
add
add
push
inc
rol
inc
mov
mov
fcmove
sub
lret
into
push
push
clc
pop
add
dec
enter
inc
adc
fildl
xchg
inc
push
jns
mov
dec
je
inc
adc
pop
fisubrs
fists
int
loopne
bound
fstpl
into
and
js
and
stos
loope
pusha
dec
xchg
lods
mov
pop
shll
adc
ret
mov
or
push
insb
mov
sar
add
push
mov
jg
xchg
adc
or
repz
repz
test
enter
stos
rcrb
les
arpl
push
push
jno
lods
fnsave
jbe
push
lods
scas
mov
or
push
test
cmc
mov
test
and
push
cmc
add
std
jl
outsl
incb
cmp
pop
rcrl
adc
push
push
mov
push
ret
test
cmp
ret
das
cld
neg
imul
add
sub
fsub
sbbl
ss
test
fidivrs
lds
jmp
inc
and
sbb
inc
mov
mov
mov
pop
pop
jle
cli
cli
and
mov
pop
fwait
xor
sub
mov
cli
stc
pop
push
inc
in
or
stc
cmp
aam
mov
jle
pop
outsb
das
je
not
mov
mov
dec
cmpsl
mov
push
mov
pop
fldl
cmp
and
sub
and
sbb
fcmovne
lods
ljmp
fsubrl
and
addb
test
fildll
xchg
jo
mov
lea
iret
push
pop
out
lods
xorb
jle
divb
popf
push
push
insl
pop
outsb
mov
xor
mov
fcmovu
or
adc
mov
mov
push
push
mov
xchg
jo
fldt
mov
push
ficoms
loop
lds
jmp
mov
mov
cmp
jg
jg
mov
shlb
adc
adc
aaa
push
sub
aad
outsl
mov
add
lock
cld
loopne
shlb
pop
push
jge
lds
sub
inc
enter
ja
ret
aam
dec
lea
cmc
xchg
jmp
jp
stos
jge
lods
rolb
push
push
sbb
mov
cmpsl
mov
push
mov
xor
adc
pushl
or
pop
mov
adc
push
test
das
aam
icebp
imul
lahf
push
inc
aam
sbb
daa
les
adc
jl
cmpsb
mov
orb
into
jo
mov
xlat
push
sub
sbb
add
xor
fsubs
mov
sub
mov
mov
mov
fsubrs
sub
add
lahf
mov
push
sbb
in
pop
sahf
push
jnp
incb
sbb
int
mov
aas
aam
aas
icebp
mov
dec
push
mov
sub
adc
xchg
stos
fists
shlb
rcr
into
push
lcall
fcmovnbe
out
js
sbb
mov
ljmp
jl
dec
aaa
push
das
push
xchg
push
cmp
aam
jmp
loop
jle
incl
and
pusha
cmpb
ret
aas
pop
dec
rol
int
pusha
mov
cld
add
mov
inc
leave
mov
lock
cld
or
pushf
pop
cmpsb
sbb
mov
xchg
adc
ljmp
dec
dec
ljmp
jo
cmp
fidivs
les
inc
push
clc
add
stos
int3
push
les
mov
dec
xor
pop
pop
out
jo
dec
or
inc
fidivl
gs
sbb
mov
jb
rcl
call
and
xor
mov
mov
push
stos
rol
frstor
mov
push
aam
xor
les
mov
xor
fistps
popa
and
dec
pusha
lret
sub
int3
push
cmp
adc
es
jbe
add
xchg
push
lcall
and
jecxz
mov
push
sbb
push
jle
and
add
xor
jle
movb
xchg
aaa
mov
adc
inc
xchg
mov
cld
dec
movsb
clc
in
adcb
inc
inc
mov
loope
loope
jg
jmp
fisttpll
push
mov
inc
add
clc
or
test
out
xchg
xchg
bound
sahf
std
push
lock
or
lcall
cli
xchg
inc
adc
or
outsl
clc
incl
sub
das
icebp
jbe
out
cs
cmp
enter
add
mov
push
jns
lock
dec
pop
call
imul
jo
jl
push
cwtl
push
xor
sub
mov
pop
pop
shll
std
or
enter
outsl
xor
push
pop
or
inc
leave
xchg
pop
xchg
outsb
jl
movsl
aas
adc
mov
scas
add
sbb
ss
divl
lahf
mov
scas
repnz
cmp
test
mov
cld
stc
fcmovnbe
xchg
mov
aad
loopne
add
xchg
mov
stos
sar
movsl
or
incb
shlb
lea
push
fnstsw
mov
adc
insl
lret
in
decb
and
std
cwtl
int3
sbb
sbb
xor
pop
cmp
adc
dec
cmpsb
jo
test
addl
push
mov
test
dec
adc
into
add
lret
test
fs
sbb
mov
inc
or
je
sti
dec
jge
push
dec
shrb
in
cmc
and
and
add
mov
xor
push
ret
sarl
lds
or
outsb
push
inc
and
sub
movsb
sub
aaa
clc
or
ret
add
fs
js
loopne
aam
xchg
mov
lea
es
mov
pop
and
rcl
mov
out
or
int3
push
adc
dec
pop
loopne
and
scas
inc
fsubs
sub
lock
sub
and
cld
dec
data16
pop
xchg
push
cmp
test
push
fdiv
or
cmovs
cmp
or
sbb
push
icebp
arpl
and
popf
or
loop
data16
add
mov
test
ret
sub
sbb
iret
xchg
push
icebp
outsl
push
lret
lock
pop
xchg
mov
add
jo
loope
dec
jae
sub
xchg
inc
call
les
icebp
mov
out
aas
sbb
mov
xchg
les
inc
pop
cli
ret
arpl
in
cmpsl
pop
mov
dec
jecxz
push
and
xchg
mov
add
inc
mov
sub
sub
cli
pop
imul
fistpll
ficompl
and
sbb
icebp
in
insl
sub
insb
sub
inc
outsl
dec
dec
cmp
insl
xor
and
fildl
dec
test
cmp
or
das
inc
jg
sbb
mov
mov
or
add
inc
xorl
lds
dec
jmp
ljmp
cld
mov
pop
icebp
js
add
popl
inc
nopl
mov
cld
outsl
mov
sbb
aaa
inc
test
stos
fsts
jne
cmp
mov
mov
in
xor
icebp
dec
js
add
push
mov
shll
ja
ficoml
iret
xlat
xorl
push
pop
or
daa
test
ljmp
ret
in
push
sub
das
add
shrb
call
sbb
push
jne
scas
mov
outsb
outsb
sahf
cmp
nop
jo
cld
rorb
cmp
jg
mov
push
int
xchg
xlat
test
push
jo
mov
inc
inc
fst
jmp
ret
je
sub
cmp
and
repnz
dec
in
inc
xchg
clc
stc
sub
jne
dec
cld
aas
outsl
insb
aam
popa
sahf
push
jae
dec
in
je
mov
xlat
filds
je
inc
push
fistps
hlt
lcall
imul
fisttps
decl
xlat
scas
in
sarl
push
jecxz
or
call
sub
jnp
sahf
test
mov
insl
imul
pusha
inc
in
jmp
cld
stos
push
lock
xchg
jle
cwtl
fiadds
and
and
sbb
call
sub
lea
ljmp
inc
adc
lret
inc
sub
inc
icebp
adc
xchg
test
mov
mov
sbb
adc
incl
sub
cmp
xchg
repz
fistps
sbb
xor
lods
in
lods
dec
lods
cld
dec
fiadds
out
adc
mov
lcall
testb
mov
xor
popa
lret
or
shl
push
jl
outsl
in
lock
decl
sub
xchg
pop
es
mov
fnstsw
sub
outsb
loope
dec
lods
mov
sub
test
push
mov
add
sbb
rcll
stos
test
notb
mov
shrb
rcll
dec
pop
mov
sbb
test
popf
fisttpll
aam
mov
ret
and
insl
push
lods
cmp
jl
lret
mov
xor
add
and
loop
aam
mov
inc
je
pop
push
movsb
add
or
outsl
cld
movsl
or
mov
xchg
lods
and
sbb
mov
ficoms
idivb
adc
xor
arpl
adc
loopne
jg
sub
outsl
cltd
dec
movsl
movsl
pop
loop
push
clc
adc
addb
pop
sub
mov
xlat
or
aaa
in
or
and
sub
inc
pop
lret
fld1
dec
test
adc
lcall
mov
push
cmpsl
cltd
hlt
dec
mov
test
jmp
pop
xor
push
jg
inc
add
dec
or
in
push
std
xchg
fcomps
idiv
add
scas
adc
es
movsl
dec
mov
bound
mov
push
lcall
arpl
cld
pop
mov
rclb
or
test
jg
or
dec
push
push
cmpsb
insl
jb
lock
in
pop
clc
mov
pop
mov
shr
pop
mov
test
mov
pop
inc
mov
inc
out
and
outsl
out
test
jno
and
lea
xlat
xchg
jmp
xor
ret
xor
inc
cmpsl
push
aaa
in
ja
sub
movsl
mov
out
jno
lea
push
das
nop
repz
mov
cmp
clc
fwait
test
movsl
cmpl
inc
outsl
std
fidivl
sub
imul
inc
cmp
popf
shrb
mov
adc
dec
inc
fwait
mov
cmp
leave
lock
sub
stos
push
inc
mov
or
pop
hlt
add
cmp
stc
jo
add
enter
test
repnz
addl
in
in
aas
leave
out
mov
mov
sti
stos
or
test
mov
xor
pop
or
cmp
sbbb
lcall
mov
movsl
cltd
in
fcmovne
fs
xor
jle
jb
mov
dec
or
insb
mov
adc
dec
inc
push
cmp
adc
xchg
pop
pop
ljmp
icebp
or
xor
pop
mov
inc
pop
aad
addl
aad
push
es
or
push
inc
hlt
jb
lods
or
outsl
inc
sbb
push
fs
xor
xor
int
out
mov
sbb
out
xor
mov
add
or
jp
mov
or
movsl
add
inc
adc
sbb
or
push
pop
inc
push
lret
sbb
push
dec
pop
xchg
jl
pop
idivb
adc
and
xchg
daa
xchg
js
mov
mov
cmp
movsl
dec
gs
push
fldl
sub
bnd
lret
sub
int
repnz
lahf
sbb
xchg
jb
sub
shlb
movsb
push
xchg
cli
pop
loope
loop
mov
pop
cmp
inc
sbb
outsl
das
cld
das
xchg
pop
loopne
repnz
sbb
dec
cmp
add
and
sbb
mov
and
lcall
decl
cld
cltd
pop
and
jne
sarb
pop
mov
pop
or
or
dec
jmp
jb
aad
push
xchg
in
xchg
adcb
flds
pop
sahf
xchg
push
and
imul
ret
roll
aaa
mov
rcr
sbbb
mov
or
arpl
mov
sub
xorb
inc
xchg
add
test
ljmp
mov
add
pop
outsl
jno
lods
push
adc
sbb
and
loope
sbb
pop
push
outsl
fisttpl
or
cmp
xchg
outsb
add
pushf
mov
sti
sahf
xlat
les
mov
inc
inc
jmp
mov
xor
cmp
pop
mov
mov
icebp
mov
nop
sbb
dec
mov
lock
push
ret
popf
and
mov
hlt
xor
inc
and
in
push
dec
fdivrs
jmp
jl
sbb
fwait
jg
jmp
cmp
jp
movsl
bound
sub
frstor
add
jl
je
movsl
adc
fnstsw
push
pop
pop
jg
pop
lea
movsl
inc
icebp
jo
inc
push
or
lods
jne
inc
cmp
jp
mov
pop
push
inc
mov
int
call
lret
xchg
cmp
lods
jg
lcall
push
daa
and
hlt
mov
fiaddl
fldt
inc
sub
cmp
scas
pop
andl
add
inc
je
or
mov
cmp
addr16
jb
popa
cli
pusha
jbe
pop
lcall
jle
xchg
push
lahf
dec
xor
and
jp
jg
mov
fdivp
stc
xor
jg
xor
popa
inc
jno
add
in
push
fldt
mov
rcl
nop
and
fcmovne
xor
pop
mov
xor
test
inc
insb
fists
inc
jnp
lahf
xchg
fsubrl
pop
mov
lcall
pop
cs
js
or
pop
aaa
test
in
mov
in
jmp
enter
repnz
loop
add
daa
sub
outsl
cli
fmull
pop
pop
subb
inc
sti
dec
mov
xor
icebp
sub
add
xchg
mov
add
or
out
xor
push
push
xlat
out
push
push
popa
add
dec
shll
cmpsl
ja
mov
jo
inc
das
sub
adc
loopne
mov
in
nop
jecxz
dec
mov
mov
xchg
stos
or
repnz
icebp
mov
inc
dec
outsb
mov
pop
push
mov
shll
fndisi(8087
ret
inc
call
adc
adc
test
jge
js
or
test
icebp
cli
pop
cld
mov
and
or
push
les
cli
jbe
mov
add
addl
pop
cld
outsl
cmp
fcompl
sub
cmp
data16
leave
scas
mov
cmp
push
sarb
adc
mov
call
jnp
lods
hlt
cmp
jno
pop
xchg
cltd
push
lock
push
inc
fwait
jae
or
jae
mov
cs
jmp
sub
das
insl
mov
pop
push
add
xor
mov
mov
or
xchg
mov
cld
and
stos
ficompl
and
fbld
iret
jmp
testb
xchg
jecxz
fidivrl
mov
pop
inc
cld
imul
fcoml
mov
ret
and
in
dec
daa
pop
pusha
adc
out
andl
mov
cli
xor
int3
xchg
leave
out
and
inc
jne
data16
jg
pop
outsl
insl
std
cmp
mov
js
add
clc
mov
or
xor
sarl
inc
cmpl
sbb
inc
lods
call
test
inc
sub
push
ds
jle
push
and
mov
mov
shlb
mov
inc
sub
sbb
ljmp
cmp
cmc
mov
dec
movsb
mov
movsl
lret
mov
push
outsb
sbb
pusha
movsl
and
out
dec
jnp
cmpsb
mov
test
insl
jns
mov
and
fwait
inc
mov
bound
divb
mov
and
shll
je
lods
jb
je
lods
mov
aas
xor
or
decl
sti
add
daa
cmp
push
pushf
pop
xchg
mov
daa
mov
inc
ljmp
lds
jae
imul
cmp
pop
rcll
shr
call
dec
mov
pop
cmp
jno
push
mov
test
imul
outsl
mov
cmp
adc
stos
sbb
xorb
lds
sub
xchg
shr
test
lock
jbe
test
or
sahf
outsl
sti
in
subb
pop
movsb
out
xchg
insb
sub
iret
out
ud2
test
dec
fidivl
pop
aas
jecxz
test
insl
outsl
push
mov
aas
movsl
loop
inc
and
aam
cwtl
xchg
jl
add
aas
bound
cmc
dec
stc
out
sbb
jl
inc
sbb
xchg
push
icebp
pop
and
lret
popf
push
push
push
filds
pop
adc
push
int3
push
jmp
and
push
pop
inc
xchg
mov
shrl
push
hlt
leave
nop
push
push
or
pop
pop
mov
movsb
sarb
outsl
cld
and
pop
sub
pop
add
push
adc
dec
movsl
pcmpeqb
sub
mov
in
cmp
pop
andb
int3
lahf
inc
ficomps
pop
mov
adc
orl
jno
fcoms
cmc
sbb
adc
int
jg
loop
pcmpgtb
pop
push
imul
sub
popa
sbb
or
mov
push
in
ret
movsb
dec
lods
mov
aas
lock
or
xchg
lock
xchg
loopne
mov
pop
and
rolb
adc
outsb
dec
add
inc
push
sub
adc
dec
iret
lods
call
test
in
andl
nop
or
cli
cmp
enter
pop
lods
cmpsb
and
lods
xor
sub
mov
std
xor
orl
cld
mov
mov
add
adc
dec
adcl
out
inc
loopne
add
ljmp
xor
bound
or
mov
pop
xor
add
lahf
add
inc
repnz
addb
es
aam
stos
fbld
cmp
sbb
nop
xchg
push
xor
xor
dec
cltd
mov
adc
or
or
repnz
mov
sarl
jg
cmpb
shll
idivb
mov
push
and
outsl
stos
ret
pop
sbb
dec
loop
mov
dec
icebp
addl
inc
ljmp
fdivrl
xchg
into
rorb
mov
std
mov
jecxz
jmp
les
andb
je
les
std
mov
adc
in
xor
std
pop
std
push
rolb
xchg
insb
bound
push
adc
mov
push
push
xor
loopne
je
inc
cmp
popf
outsl
ss
je
std
mov
ret
mov
sub
sarl
mov
sub
sub
iret
lock
push
pushl
out
cmp
or
mov
adcl
cwtl
xchg
pop
fistpll
pop
cmpsb
adc
cmp
pop
rcr
mov
std
add
clc
out
add
push
sub
pop
movsb
sti
cltd
decl
dec
call
scas
dec
lahf
adc
in
jp
outsl
std
sbb
push
dec
ljmp
adc
ret
cld
jg
lods
push
ret
fsub
aas
ficoml
insl
in
adc
adc
mov
or
xchg
loop
stos
test
les
cmc
mov
adc
test
xchg
add
fbld
xchg
xchg
mov
sahf
mov
dec
sub
incb
movl
or
aad
jge
xor
in
in
scas
lcall
sti
and
sub
clc
in
add
push
push
xchg
jp
mov
xor
cmp
pop
mov
inc
xchg
fwait
mov
inc
mov
mov
mov
pusha
clc
cmc
pop
sbb
add
test
icebp
dec
outsb
push
xchg
xor
cmpsb
ss
xor
outsl
ret
jo
inc
jo
and
dec
xchg
mov
lds
pop
sbb
icebp
add
mov
jl
dec
lahf
xlat
adc
xchg
ss
xchg
sbb
out
bound
jg
movsl
test
push
test
mov
cli
jno
scas
test
add
dec
je
ljmp
cld
das
add
out
ds
faddl
xchg
mov
mov
adc
add
jne
ficomps
mov
loopne
aam
and
pusha
or
and
xor
lahf
sbb
mov
aaa
rorb
les
fldl
in
mov
int
xchg
or
mov
mov
mov
mov
fnstenv
adc
sub
test
shrb
in
sub
test
std
imul
cvtps2pi
gs
inc
lock
ss
pusha
cmp
mov
mov
incl
fisubl
add
aaa
sbb
mov
or
cmp
loopne
or
adc
enter
jg
mov
push
movsl
xchg
xor
inc
dec
scas
rorl
lahf
stos
loopne
ret
jns
push
adcb
sbb
movsl
cmp
sahf
pop
mov
jb
cwtl
std
ljmp
fldl
das
inc
pop
lcall
xchg
ret
push
pop
or
dec
inc
mov
mov
daa
jl
test
scas
leave
bnd
inc
loopne
shrb
cmp
loopne
outsb
test
xchg
paddw
test
fwait
imul
in
jg
add
mov
jecxz
add
xor
int3
xchg
adc
pop
cmc
dec
cwtl
inc
scas
mov
jecxz
sub
rol
fdivs
fsubs
clc
sub
aaa
ljmp
rorl
and
sbb
pop
das
adc
sub
jl
bound
and
shr
pop
cld
or
ja
test
jle
mov
and
or
cmpsl
inc
icebp
pop
ljmp
mulb
mov
cli
int
loopne
adc
pop
out
xor
popa
jmp
mov
inc
and
jmp
sbb
nop
push
mov
mov
pop
fwait
mov
or
dec
add
pop
int
test
mov
inc
or
xchg
cwtl
in
cmpl
jge
loopne
push
rcrl
hlt
pop
inc
fisttpl
mov
clc
sbb
xchg
sub
or
lock
hlt
lds
ja
mov
sbb
addb
aaa
push
and
xor
movhps
movsl
cmpsb
cltd
pop
js
push
mov
pop
mov
sbb
fidivrl
nop
cli
push
and
mov
add
cmpps
test
inc
movsb
insl
aam
cmp
jne,pn
xchg
imul
jbe
xor
iret
push
scas
mov
clc
aaa
ljmp
dec
pop
pop
jmp
mov
inc
call
cmp
lret
pop
or
shll
inc
pop
xchg
add
jg
loope
jne
jne
int3
nop
lcall
cs
mov
sbb
mov
xorl
add
lea
sbb
ret
xchg
pushf
rcrl
cmp
xchg
out
lock
aam
ss
or
pop
outsl
ret
and
out
or
sub
mov
outsb
lock
aam
sub
cmpsb
in
std
push
sbb
lcall
or
mov
mov
push
aas
push
pop
decl
push
sbb
mov
orb
jge
lea
pop
xor
add
ret
sbb
sar
outsl
mov
test
and
mov
mov
add
jo
mov
scas
insb
jle
je
int3
or
pop
call
arpl
dec
push
pop
bound
xlat
addl
mov
push
xor
in
aad
ret
jge
test
inc
cld
push
add
nop
sbb
mov
mov
pop
mov
mov
push
inc
sub
pop
fs
add
ljmp
call
pop
les
xor
xchg
mov
movsl
jp
pop
lock
xor
mov
jg
or
jmp
inc
mov
jbe
push
and
iret
adc
fistpl
pusha
xchg
out
pop
push
dec
ret
or
movsl
push
in
movsl
push
bound
add
mov
xor
je
jmp
sub
sar
jmp
fs
cmc
and
fwait
sbb
mov
sub
adc
or
nop
pop
mov
scas
xchg
add
push
ret
mov
and
inc
out
push
or
in
inc
mov
clc
mov
faddp
mov
xor
leave
push
lahf
stos
dec
jecxz
das
cmc
incl
adc
testl
ss
sub
rcll
das
ss
sti
lds
jg
out
fnstsw
or
xor
dec
and
pop
gs
push
jne
mov
pop
jo
pop
jg
lcall
les
cli
cmpsb
cwtl
sbb
inc
lock
aam
sub
movsb
decl
aad
mov
push
cwtl
jb
cwtl
pop
xor
in
jae
lcall
dec
or
push
mov
mov
fucom
test
lret
shlb
xchg
push
mov
ljmp
push
jns
push
ds
ljmp
js
cmp
insb
pop
stc
ja
sbb
pushl
orb
in
into
jp
xchg
shrl
lods
jb
mov
rol
mov
push
mov
mov
decl
std
shlb
loop
mov
mov
fstl
cmpsl
mov
xchg
xchg
dec
and
push
test
mov
aad
jmp
mov
lret
jl
lea
sti
out
scas
sbb
in
jg
inc
jmp
cmp
mov
sbb
into
cs
addb
nop
jg
cmp
mov
in
sahf
xor
sub
outsw
into
out
pushf
cs
pushl
jns
and
loop
icebp
mov
ljmp
lcall
mov
jb
scas
mov
rclb
jo
jns
mov
sbb
out
das
cld
decl
sti
mov
ret
mov
in
dec
ja
mov
pmulhw
incl
ret
nop
and
xchg
push
rorl
jbe
jno
sti
lea
fwait
js
push
cli
fidivs
fsts
outsb
sub
sbbl
dec
aas
inc
je
sub
lods
aas
aam
xchg
inc
jg
jmp
call
cmp
push
fisttps
nop
es
jns
fstpt
test
mov
flds
xchg
sarb
aad
mov
jmp
cld
mov
mov
push
mov
push
cmp
jg
loop
cmp
push
pop
es
cltd
mov
push
push
push
test
sub
pushl
outsl
dec
out
mov
mov
test
mov
ljmp
movsl
pop
cli
ljmp
cmpsl
push
cli
je
punpckhbw
ficoms
dec
loopne
sbb
adc
loope
in
pop
mov
fstps
loopne
ljmp
mov
push
call
jg
xor
adc
mov
mov
push
fwait
stos
mov
pushl
insb
dec
or
repz
xchg
or
mov
std
xchg
adc
push
ljmpw
fisttps
xchg
inc
sti
lock
xor
aas
rcr
xchg
addr16
sbb
inc
call
add
shlb
test
stos
cmp
xchg
scas
lret
sbb
call
mov
clc
pushl
jge
sbb
clc
insl
mov
and
push
mov
outsb
dec
repnz
inc
negb
mov
xlat
stc
mov
lods
push
insb
mov
call
stc
loope
pop
sbb
test
pop
arpl
push
mov
call
sbb
mov
dec
out
jle
fcompl
in
jecxz
jmp
ja
addl
adc
aaa
aad
test
cld
pop
push
mov
mov
jg
fistps
cmp
push
cltd
jle
inc
add
int
jae
leave
out
add
outsb
inc
test
cs
lahf
pop
pop
jecxz
mov
sti
push
cmp
fists
ret
arpl
clc
mov
and
pop
add
mov
cmc
inc
mov
mov
xlat
lcall
imul
call
sub
cld
int
mov
cmc
lcall
daa
xchg
mov
pop
inc
ljmp
dec
pop
mov
hlt
ljmp
add
jp
es
pop
repz
pop
sub
push
xchg
enter
push
xchg
repnz
dec
repz
pop
shll
shrb
incl
ss
sbb
xchg
jmp
test
test
adc
xchg
fcompl
lods
ljmp
push
je
push
in
movsl
push
aaa
aaa
sahf
sub
out
add
call
mov
push
in
jle
call
sbb
decl
cmp
psllq
shll
ljmp
pushf
mov
rcll
insb
inc
pusha
xor
enter
daa
sub
pusha
stc
xchg
and
xor
cli
pushl
mov
xchg
scas
out
jle
cwtl
enter
sbb
lods
jmp
ret
ffreep
std
xchg
out
xorb
dec
fs
repz
repnz
lods
incl
add
sbb
mov
gs
pop
scas
inc
cld
ljmp
dec
push
shl
cmp
pop
pop
cmp
push
mov
push
lahf
in
sbb
popa
decl
sti
xor
mov
popf
push
mov
lret
repnz
and
imul
cmp
mov
adc
leave
enter
xor
incb
pop
push
jo
mov
incl
es
ss
out
add
or
cmpsb
movsb
outsb
popa
subb
inc
out
jg
icebp
pop
testl
insb
test
ret
outsb
jmp
cli
mov
incl
repnz
sub
sub
aas
adc
inc
cld
in
roll
mov
test
jge
xor
sub
jmp
jmp
pop
inc
ljmp
push
mov
add
mov
sbb
adc
outsb
add
mov
ljmp
std
or
in
jl
cli
lods
or
push
fsubrs
addr16
inc
jecxz
sbb
adcb
aaa
xor
jg
fmuls
ljmp
fbstp
and
int3
and
shlb
outsb
push
hlt
jmp
repz
push
inc
call
sbb
test
dec
xor
mov
pop
xor
dec
je
cmp
dec
sub
les
imul
lock
leave
push
pop
push
xor
push
lret
push
cli
movsb
sbb
js
aam
pop
clc
decl
jbe
xor
movsl
movsl
or
call
mov
pop
sub
cld
ljmp
dec
ret
push
out
into
callw
into
inc
xor
add
cmp
mov
test
mov
je
ret
pop
pushf
inc
pop
mov
fisubl
out
add
dec
mov
arpl
lds
jg
jb
mov
ret
add
outsl
lock
lret
inc
pop
fyl2x
ds
mov
dec
lret
sub
mov
mov
pop
fsubrs
ja
cmc
inc
fdivs
jb
enter
out
into
jne
adc
flds
sahf
and
pop
push
jl
decl
incl
in
aas
shll
bound
js
adc
in
xor
lcall
cmp
xchg
aaa
cmpsb
and
stos
xchg
cmpsb
add
pushf
fcoms
jb
cmp
ja
jmp
pop
mov
inc
inc
dec
pushf
adc
aas
push
push
sarl
sbb
inc
dec
pushf
adc
xchg
jbe
fucomip
push
or
jae
aam
out
in
cld
push
fstpl
jae
mov
mov
jnp
mov
int
lcall
jns
cmp
cmp
decl
cld
xor
dec
ret
outsb
or
jbe
addl
sar
decl
mov
jae
adc
pop
sub
push
loopne
lods
pushl
dec
ljmp
xlat
xchg
js
pop
daa
mov
imulb
jg
mov
dec
mov
cmpsl
mov
mov
les
lock
popf
cmp
add
test
ja
roll
lret
sub
clc
xchg
roll
aam
int3
and
pop
fsubrs
stos
fidivs
xchg
xor
fstpt
movsl
inc
mov
out
aas
push
pmaddwd
icebp
pop
lods
ds
xor
xchg
jno
and
jg
fdivr
and
outsl
add
jne
xor
jg
test
adc
jae
xchg
pop
lret
outsl
call
inc
or
pop
stos
call
mov
das
jg
lahf
jnp
fdivrp
insb
xor
pop
push
iret
mov
pushf
or
sub
repnz
sti
xor
xchg
or
pop
xchg
mov
imul
or
push
clc
cli
lods
dec
cld
add
mov
decl
inc
pop
fcomps
sub
icebp
inc
cmc
mov
cwtl
cmp
pop
nop
je
mov
pushf
adc
insb
inc
mov
dec
xlat
jns
cmp
ljmp
mov
dec
ficoml
and
add
pop
clc
ljmp
jle
cld
mov
sub
out
sub
into
ljmp
cld
cmp
clts
loop
and
pop
lods
scas
repz
mov
adc
inc
jno
fnstcw
rorl
mov
stc
or
ja
popa
mov
xor
decl
pop
xchg
pop
pop
inc
lea
cs
mov
sub
fs
jmp
lcall
xchg
push
sbb
pop
das
mov
jmp
fsubrp
repz
pop
sub
lcall
jnp
int
in
sar
movsb
sbb
call
cmp
loope
jle
dec
push
pop
dec
jge
and
push
mov
hlt
test
sub
or
ficoms
sarl
test
pop
dec
xlat
lds
inc
lock
jle
xchg
call
fbstp
pop
push
outsl
or
pop
scas
xchg
mov
in
xlat
stos
and
lcall
xor
sub
mov
pop
out
imul
pop
and
or
ljmp
je
fsubrl
jbe
mov
mov
push
sub
push
mov
inc
fistpl
and
mov
mov
pusha
inc
push
jge
call
sub
xchg
in
mov
shlb
lock
out
lods
rclb
ljmp
cld
adc
mov
mov
inc
sahf
iret
sbb
bound
adcb
xchg
lock
mov
fnstsw
jmp
jle
jg
scas
adc
xchg
mov
mov
adc
push
popf
leave
mov
or
dec
pop
js
sbb
outsl
fadd
inc
pop
stos
ret
ds
pusha
xchg
cld
outsl
mov
inc
sub
nop
inc
cmp
jae
sub
test
push
or
jmp
call
cwtl
sub
mov
jno
incl
xchg
das
movb
sahf
es
cmp
fcompl
rorb
sub
ret
insb
ret
leave
inc
xchg
and
dec
mov
scas
add
loop
cmp
cs
xchg
and
jbe
int
aad
nop
cmp
or
cli
sbb
inc
jnp
imul
jb
mov
decl
int3
inc
mov
loopne
add
rclb
push
out
mov
adc
sub
sti
jno
jo
or
bound
and
aaa
jecxz
add
lret
loop
cmp
stos
insb
lea
adc
jg
and
movsl
jge
je
inc
aas
xchg
mov
ds
test
arpl
aaa
ret
testb
or
ja
icebp
fwait
popa
push
fldcw
rcrl
push
mov
cmp
jbe
cld
lcall
fisubl
dec
stos
sub
jns
stos
aas
adc
pushl
int
xacquire
loopne
cmpl
inc
xchg
scas
and
loope
mov
xor
cs
inc
shll
cmp
rorb
jmp
divl
pop
call
inc
cmc
imul
daa
cs
nop
sub
mov
pop
cmc
xchg
dec
cmc
pop
mov
jns
push
fsubl
dec
jl
pop
sahf
add
pop
std
call
pop
loope
loopne
mov
incb
popa
repz
in
bound
cli
sar
pop
call
insb
imul
stos
aaa
mov
call
cli
cmpsb
cmp
push
add
inc
sti
outsb
leave
pop
mov
sahf
aaa
mov
pop
inc
mov
pop
stos
cmpsl
stc
in
ds
push
addr16
xchg
sbb
mov
fldl
das
mov
sub
cli
incl
test
push
in
and
inc
jo
pop
fcoml
push
lcall
das
je
mov
sti
pop
mov
sbb
push
xor
xchg
imul
decl
mov
jecxz
fistpl
lcall
stc
or
call
ficompl
or
out
test
sbb
in
pop
xchg
fsubrs
mov
push
mov
mov
out
sub
sub
rcll
sub
hlt
movsb
inc
sarl
arpl
loopne
adc
das
lock
mov
pop
pop
xor
data16
jg
idivl
sbb
test
in
pushf
dec
pop
cmpsl
sub
int3
pop
sbb
mov
call
adc
cwtl
xchg
adc
sbb
sahf
mov
fcompl
insb
push
jg
call
movsl
jmp
ljmp
cmpb
mov
lahf
out
xchg
shrl
ljmp
adc
fsubl
add
mov
js
sarb
add
xchg
jg
pop
push
cwtl
pop
or
fstpl
call
les
js
sbb
movsl
sub
jbe
shl
lcall
aam
fsubrp
cmp
inc
fdivrs
dec
fdivrl
push
dec
aad
hlt
jg
push
pause
and
ror
sbb
and
das
pop
pusha
std
mov
inc
ljmp
out
int3
xchg
rclb
add
movsb
dec
mov
js
mov
mov
sub
sbb
jl
xchg
mov
lock
add
mov
repnz
jmp
clc
ljmp
cmc
xlat
fucom
cmp
and
imul
mov
outsb
decl
add
imul
lods
popf
das
cmc
jp
in
push
dec
lcall
cld
sub
xor
dec
arpl
ss
dec
faddl
sub
or
mov
fldl
push
pop
mov
push
call
pop
test
movsb
lea
shl
cmp
ret
stc
test
call
xchg
sub
mov
push
xchg
sub
dec
test
std
inc
lock
jbe
mov
sahf
fcomps
push
pop
ljmp
or
inc
imul
mov
call
mov
jb
insb
iret
sahf
movsb
lock
inc
insb
or
outsl
std
dec
mov
pop
leave
mov
popf
cmpsl
ja
das
in
sub
outsl
cld
add
fdivrs
lock
xor
cmp
ljmp
lock
pop
push
cmp
es
mov
dec
dec
mov
lods
lahf
call
mov
inc
pop
cmpsl
in
outsb
hlt
add
flds
mov
test
sbb
and
nop
dec
add
mov
lock
cmp
jbe
pop
dec
mov
sub
mov
testl
mov
hlt
aad
mov
decl
cmp
sarl
push
pop
sbb
xchg
mov
call
push
inc
sub
xchg
inc
mov
jne
jg
jl
imul
push
sbb
pop
cwtl
sub
cmp
mov
or
jmp
shlb
clc
int3
jmp
add
orb
in
pusha
push
sbb
pop
ja
incl
call
daa
add
jne
mov
mov
pop
xchg
and
subl
incl
inc
xor
and
js
push
push
add
sub
incl
and
inc
flds
aaa
daa
fistpl
add
loopne
repz
js
jle
in
push
incl
imulb
je
sahf
cmp
cmp
test
mov
mov
mov
mov
mov
outsb
pushl
mov
jg
mov
cmp
mov
jecxz
incl
call
cs
xor
fdivrs
movb
stos
adc
cli
call
scas
pop
sub
adc
xchg
sar
das
sub
shrb
mov
or
pop
aas
loop
dec
mov
cltd
stos
enter
movsb
jae
in
popf
push
popf
inc
adc
fistps
mov
ljmp
add
push
sbb
jp
or
xchg
jg
sar
jbe
test
sahf
mov
xor
sbb
js
sar
jg
push
popf
sub
or
pop
mov
mov
gs
lcall
add
inc
cmp
xchg
lods
adc
shll
and
inc
and
vpcmov
adc
mov
mov
dec
stos
mov
mov
lcall
test
push
inc
stos
and
and
sbb
std
pop
arpl
inc
dec
outsl
sbb
fildll
mov
ss
dec
mov
pop
stc
dec
call
inc
icebp
scas
add
jns
fimull
mov
sar
cmp
mov
sti
or
adc
jl
jge
or
bound
mov
add
push
jno
jp
and
add
rolb
sar
jg
xchg
mov
dec
sbb
inc
mov
jne
pop
neg
jns
aas
lds
ljmp
cmpsb
repnz
mov
add
out
add
stos
mov
xchg
mov
cmovnp
sub
sbb
test
pop
std
ljmp
fmull
insl
movsb
add
xor
jb
insl
push
jp
xlat
test
addl
mov
divl
loop
mov
notl
loopne
sub
sub
movb
or
dec
rcrl
roll
mov
mov
xor
loopne
subb
mov
cld
push
add
cmp
enter
xchg
test
scas
hlt
cltd
or
outsl
std
das
or
sbb
fwait
or
js
xchg
mov
sub
pop
add
sbb
lahf
aam
add
xor
movsb
idivl
inc
sarl
pop
lods
test
sub
fistps
call
rolb
ds
adc
call
jmp
add
xor
or
inc
ljmp
cwtl
pop
xchg
repz
mov
push
movsl
xchg
adc
xorb
rcll
jecxz
mov
insl
lea
jg
out
stc
xor
aas
xlat
inc
lds
sarb
push
pop
xorl
into
sbb
mov
bound
jg
call
loopne
outsl
ds
jns
jle
loope
out
jg
pop
sbbl
pushf
mov
jmp
adc
mov
out
jmp
xchg
jae
xchg
imul
aad
xchg
cmp
mov
xchg
mov
inc
mov
fimuls
sahf
fiaddl
imul
outsb
mov
inc
cmp
je
into
mov
fimull
mov
xor
fildl
sbb
cli
jmp
fnsave
shl
fwait
sbb
pop
call
pop
fdivr
jmp
mov
stc
adc
jne
inc
nop
cmp
or
aas
movsl
cmpsl
ret
cld
incl
or
dec
fidivrl
jnp
and
loopne
aad
sub
fldcw
imul
decl
or
sub
cmp
add
add
addr16
jmp
test
sbb
xchg
adc
push
outsl
lods
jne
sbb
jg
mov
mov
and
mov
sub
lcall
ret
daa
scas
inc
or
push
mov
inc
mov
movsl
std
and
pop
lods
das
inc
xchg
push
xchg
mov
imul
aad
pop
add
test
push
loop
mov
pop
pusha
sahf
ljmp
decl
mov
push
das
jge
inc
sub
movsl
cli
mov
cmc
rcr
stc
call
inc
mov
mov
in
repnz
add
movsl
pushl
cmp
pop
mov
lcall
xor
sbb
std
or
xchg
int3
jecxz
push
mov
xchg
decl
xor
jb
int3
inc
dec
bound
aaa
jp
mov
insb
mov
dec
sub
pop
sbb
call
jg
inc
jae
adc
fdivp
lret
ljmp
push
ljmp
pop
mov
les
push
and
call
jge
mov
ret
and
js
or
push
icebp
adc
fildll
jnp,pn
sbbl
push
cmp
lds
xchg
insb
std
call
inc
fucomip
in
ljmp
imul
cmp
mov
cli
dec
add
sbb
sbb
fldenv
int3
mov
push
xchg
pop
mov
scas
test
push
inc
mov
mov
out
out
xorl
jle
xchg
mov
mov
outsb
pushl
aaa
pop
insb
ljmp
jne
aaa
push
adc
sar
mov
mov
aad
daa
jo
rcrl
xchg
sbb
or
cmpsl
iret
pop
push
jmp
negb
jbe
cmp
out
lods
cmp
inc
lock
leave
add
inc
jle
jle
mov
lret
jle
insb
xchg
xchg
dec
xor
jg
jle
jo
pop
xchg
inc
int
pop
jmp
cmp
xchg
sub
jmp
pushl
call
stc
lret
lock
jecxz
mov
ja
mov
idiv
ljmp
jo
pop
lret
or
clc
mov
adc
sbb
xchg
andb
jno,pn
inc
test
xchg
inc
jae
mov
mov
ljmp
clc
jne
stos
cld
xor
insl
lcall
jmp
cmp
loope
enter
cld
repnz
dec
fwait
mov
add
pushl
dec
pop
jmp
adc
xor
popa
pop
and
ljmp
xchg
sbb
or
stos
sbb
mov
mov
ds
js
jg
mov
mov
in
adc
sbb
jae
outsb
sub
or
std
bnd
xchg
lock
push
jge
int
adc
jnp
fistpl
and
je
jl
sbb
jne
xor
orb
mov
decl
xor
add
movsl
jg
adc
adc
cs
pop
xor
pop
rcl
outsb
outsl
decl
mov
mov
lcall
ljmp
aam
jecxz
dec
out
jbe
aad
sbb
xchg
decl
iret
std
pusha
clc
inc
jno
idivb
shl
pop
dec
add
push
sbb
call
xchg
sar
pop
fmuls
inc
enter
imull
das
cmc
jmp
pop
lret
pop
repnz
jle
jno
js
cmc
sti
out
inc
outsb
or
dec
cld
dec
mov
cltd
out
pop
xchg
mov
cltd
push
fidivrl
sarl
xor
lcall
inc
out
cmp
jg
cmc
mov
rcll
lret
add
ljmp
add
xchg
int
push
fwait
sub
add
push
test
aaa
or
add
btr
mov
jecxz
dec
mov
mov
stos
cmpl
in
and
in
pusha
dec
fsubrl
jnp
test
fiaddl
pop
movsb
dec
ss
mov
pop
aas
cmp
addr16
inc
loopne
mov
fcom
lcall
cmp
inc
fbstp
test
aaa
or
mov
arpl
xchg
rolb
idivb
imulb
jo
fidivrs
test
pop
daa
fnsave
mov
clc
adc
fiaddl
adc
mov
es
pop
pushl
out
push
int3
pop
in
and
push
mov
les
sbb
decb
jnp
icebp
mov
imul
xchg
mov
xchg
sarl
daa
icebp
out
dec
push
cwtl
cmp
mov
cmpsb
mov
inc
push
stos
pop
in
in
pushl
pop
sbb
xchg
int3
sub
sub
scas
cli
repnz
mov
fisubrl
ret
mov
push
movq
jg
loopne
dec
fisubs
in
rcr
push
dec
jmp
push
adc
cmpsl
push
test
push
mov
nop
xor
jmp
xor
push
push
or
lea
push
shrb
xlat
push
js
lods
mov
incl
lcall
jge
jne
gs
lods
xchg
lock
xchg
sarl
out
out
cli
mov
daa
in
xchg
cmc
xchg
mov
jns
enter
sub
xor
rclb
cmp
push
cld
mov
and
mov
pop
dec
adc
rcrl
jecxz
out
in
xchg
jg
jbe
incl
fcomps
xchg
shrb
mov
decl
sti
jl
mov
lods
push
call
pop
xchg
hlt
fistl
lods
into
and
sbbl
fs
push
ljmp
aam
add
or
jmp
andb
outsl
cmc
sub
loopne
roll
in
mov
jne
mov
decl
push
xchg
sub
insl
leave
xchg
lods
aam
push
bound
loope
jecxz
movsb
and
inc
pop
xor
insb
cld
pop
sar
jg
pop
cmp
outsb
fcoms
cmp
push
cmpsb
test
mov
scas
outsl
and
daa
gs
incl
call
inc
fwait
jge
push
insb
mov
lahf
fcoml
imul
mov
scas
adc
mov
cmpsl
fs
jg
mov
dec
stos
rcrl
stos
xchg
jns
mov
mov
and
out
pop
repnz
adc
sub
mov
call
je
jne
nop
sub
and
mov
mov
jg
jle
cmp
ret
mov
add
mov
mov
das
je
xor
and
movsb
jb
fdiv
sbb
and
sbb
jmp
loopne
ret
stos
imul
xlat
cmpsb
and
icebp
push
mov
bound
xor
movsb
call
loop
dec
sbb
ljmp
mov
fs
mov
jae
and
sub
lcall
add
call
decl
xchg
sub
repnz
fimuls
scas
call
jno
fldt
pushl
repz
sub
add
sbb
pop
cmp
das
shl
mov
in
lret
dec
movsb
ss
in
mov
dec
repnz
rcr
adc
stc
aas
ror
jl
sti
pop
xchg
clc
pop
ficomps
dec
sarb
enter
stos
cltd
xor
lcall
outsb
jns
inc
and
sbb
push
jecxz
inc
cmp
jecxz
int3
jp
incl
cwtl
lods
fadds
cmp
lret
ja
inc
jl
adc
in
jmp
loope
loopne
adc
mov
shll
sbb
xor
dec
xchg
aas
push
mov
bound
movsb
jmp
call
jns
sbb
in
xchg
imul
in
adc
jne
pop
scas
sub
outsb
cmc
push
incl
cmp
sub
mov
jae
jbe
lcall
xchg
dec
push
gs
xchg
mov
loop
lods
xchg
jg
xchg
in
push
dec
push
cmp
nop
faddl
pop
clc
pushl
mov
mov
mov
fwait
popf
jmp
jg
add
aas
inc
and
push
rolb
fwait
inc
lcall
xchg
push
int
dec
push
fiaddl
mov
gs
into
push
inc
test
cld
push
cltd
mov
lods
pop
lods
ds
add
lods
testl
jecxz
das
add
jbe
mov
push
mov
or
and
pop
mov
jmp
mulb
jmp
pop
outsb
pop
jmp
sub
jecxz
cli
fistpll
cli
icebp
adc
fnstsw
sbb
decl
mov
lea
adc
mov
xor
ss
out
lods
inc
mov
or
and
cmp
les
jmp
xchg
add
je
cmp
pop
lcall
fwait
and
xor
mov
lds
stc
mov
add
out
repnz
dec
adc
sub
ret
jne
inc
stc
cmp
cmpsb
push
out
xchg
and
mov
out
stos
sahf
ret
movsl
shrb
movsb
mov
lret
add
add
popf
std
test
fwait
pushl
loop
cmp
sar
ljmp
arpl
mov
pop
xor
cmp
pop
call
int
push
sti
call
and
add
pusha
iret
pusha
jl
dec
sbb
sar
mov
push
jg
lcall
es
or
mov
xor
jle
xor
dec
std
inc
inc
xor
enter
adc
imul
mov
cmpsl
mov
xor
sbb
ja
cmp
incl
mov
cmp
cmpl
xor
push
test
repz
cmp
aaa
jg
xchg
loope
dec
add
pop
cmp
inc
in
idivb
mov
inc
decl
xchg
adc
fldenv
jno
and
cld
cld
aaa
xchg
sub
mov
cmp
mov
bound
and
decl
add
test
arpl
mov
int3
lock
insb
xchg
scas
and
push
shrl
jo
stos
mov
push
pop
aas
jp
mov
mov
rorl
or
push
testb
shrl
xchg
inc
sbb
call
bound
jb
out
lods
je
les
push
icebp
sbbb
xor
fdiv
dec
push
xorl
adcb
xchg
cmpsl
pop
ret
aam
sbb
jg
mov
repz
in
jle
idiv
mov
dec
repz
lret
xor
outsb
scas
imul
mov
push
aam
mov
aas
aaa
adc
stos
mov
in
pop
mov
std
fdivr
call
jg
test
mov
lods
lret
adcb
cmc
pushl
les
lcall
andb
xchg
dec
mov
push
mov
rclb
mov
popf
add
and
fldt
ret
data16
stos
jp
dec
jbe
les
inc
loope
pushl
popa
or
outsl
fsubrs
sbb
idivl
imul
mov
hlt
pop
pop
pop
or
mov
ds
or
mov
xor
mov
inc
lret
jmp
into
insl
xchg
pop
leave
popa
repz
jb
cmp
popa
repnz
jg
pop
aad
jae
std
and
lock
push
shrb
call
add
movsl
adc
sbb
outsb
in
sub
rcrb
jge
or
pop
mov
jg
or
sbb
mov
cmp
xchg
jmp
xor
das
ret
xchg
or
iret
jmp
das
sahf
cmp
and
jo
fldcw
mov
fnstcw
push
test
sbb
enter
or
dec
loopne
repz
push
jnp
es
pushl
pop
adc
cli
out
es
imul
inc
push
jl
mov
subb
jmp
or
ret
add
mov
dec
pop
shlb
mov
movsl
cs
das
dec
arpl
push
xlat
stos
aam
flds
jne
das
lock
mov
fistps
sub
scas
cs
fcomi
outsl
xor
insb
imul
fisubs
int
dec
inc
fsubl
incl
or
test
in
xor
xchg
stos
xchg
jae
adc
shll
aad
sti
das
lock
mov
les
mov
pop
sahf
ds
xchg
test
add
stos
das
jl
xchg
out
sub
stc
push
cmc
jecxz
cmp
daa
dec
incl
adc
insl
jns
jnp
jl
xchg
mov
and
popf
das
sbb
ljmp
incl
int
dec
cmpsl
nop
jl
mov
mov
sub
clc
xchg
loopne
cld
cltd
das
fists
arpl
lods
push
jg
jl
ljmp
daa
cs
dec
into
mov
jge
mov
bound
in
loope
faddl
imul
decl
and
or
fdivr
pop
jle
mov
lcall
push
fcomps
je
ljmp
idivb
lret
outsl
sub
call
movsl
lods
mov
and
push
stc
mov
clc
pushl
mov
nop
adc
pop
pop
adc
jecxz
stos
jle
fistl
aam
add
outsl
ljmp
mov
in
sahf
or
mov
in
cmp
aad
aas
mov
dec
stos
cld
cmp
inc
dec
or
call
mov
ror
icebp
shlb
aad
and
scas
stos
sub
and
pushl
jnp
jno
les
cs
pusha
push
cmpsl
cli
sti
je
push
jecxz
sbb
and
loopne
aaa
sbb
icebp
lcall
retw
cmp
jecxz
sub
pop
clc
pop
mov
add
shl
jl
loope
sbb
jmp
push
cwtl
push
sub
or
pop
fisubrl
sub
fldt
arpl
das
push
ljmp
mov
pop
into
add
jmp
mov
jns
jo
clc
mov
gs
popf
dec
popf
push
sub
pop
xchg
xchg
adc
add
push
push
sahf
dec
cmovp
daa
mov
decl
rcl
jl
sbb
pusha
pushf
imul
pop
movsl
and
push
icebp
incl
iret
pop
icebp
push
dec
add
js
push
jo
pop
sti
pushl
clc
out
in
fbstp
xchg
and
fs
rorl
xor
sbb
test
sahf
filds
pop
sbb
mov
adc
and
inc
fs
das
std
pop
sbb
imul
popf
ja
loope
sbb
jmp
aad
jmp
shrl
loope
xor
mov
push
icebp
pop
es
fiadds
das
lock
bound
xor
mov
xchg
mov
jno
sbb
mov
mov
xchg
daa
mov
mov
mov
or
stos
call
and
jl
jg
sbb
pop
cmp
stos
mov
repnz
sub
aam
xchg
mov
mov
push
jmp
xor
cmp
mov
dec
negl
xlat
mov
sbb
dec
out
xor
aaa
cli
sbb
inc
and
lds
sbb
scas
cwtl
or
xchg
outsl
lock
pop
cmpsb
sub
imul
test
aam
xchg
inc
mov
cld
push
xor
pop
xchg
subb
mov
xor
adc
rcrb
or
xor
lock
call
repz
cmp
movsl
test
lahf
xor
sbb
xorb
call
cwtl
sbb
push
repnz
pushl
cli
fwait
movsb
sbb
int3
repz
pop
aad
sub
sub
mov
push
push
inc
jecxz
movsb
rol
jo
loope
int
cld
push
inc
bound
dec
dec
add
inc
fsubrl
inc
jg
shlb
sahf
sub
insb
xchg
sub
and
push
js
lods
inc
xlat
dec
or
into
xor
push
and
sub
mov
jbe
testl
pop
push
dec
push
mov
lds
mov
mov
sbb
sub
mov
and
mov
cs
scas
jbe
ja
push
or
out
notb
jl
icebp
mov
sbb
pop
negb
xchg
mov
sbb
sub
dec
push
pusha
lds
adcb
aam
dec
out
sbb
jp
xchg
clc
jl
adc
gs
mov
mov
or
cld
inc
mov
orb
jmp
sbb
js
adc
adcl
test
cmc
push
out
or
xor
dec
std
pushl
iret
push
divl
jne
fimull
or
dec
loop
push
sub
in
cwtl
rcrl
mov
clc
std
loop
fisttps
ja
adc
fisubrs
cld
or
nop
ret
jg
ret
or
xchg
xor
or
xor
nop
incl
jne
repnz
dec
inc
in
sbb
out
jecxz
imul
lods
cmp
jmp
lahf
lret
jbe
xor
lods
inc
shlb
mov
in
test
pop
ljmp
adc
fsub
xor
dec
add
push
xlat
dec
cld
fnstsw
dec
test
adc
jae
cmc
sahf
or
mov
jmp
cltd
negl
xor
shlb
dec
pop
push
out
cmp
mov
mov
inc
mov
mov
dec
pop
jmp
lods
ljmp
add
add
in
push
sub
push
jns
out
push
loope
lcall
js
mov
sahf
mov
inc
popf
imul
sbb
or
xlat
cmpl
sbb
shl
sarl
cmp
xchg
daa
mov
pop
xor
mov
jg
test
and
and
sahf
pop
pop
pop
lds
or
incl
inc
cld
push
inc
cmp
ret
and
mov
push
pop
das
inc
std
lods
pushl
mov
and
in
push
fwait
outsl
shll
dec
add
inc
push
fistpll
clc
notl
sbb
addr16
addb
ljmp
dec
incb
out
pushf
ss
push
repz
push
mov
std
shll
jmp
outsl
mov
mov
daa
and
sbb
cld
adc
or
lods
test
mov
shll
cld
mov
ljmp
and
std
rorl
jge
mov
inc
insb
ljmp
push
cmpsl
or
add
jl
push
jns
call
clc
push
jp
inc
jnp
sub
in
test
sbb
das
pushl
mov
mov
lcall
pop
pop
scas
cmp
add
cli
decl
cld
test
rcll
es
pop
in
mov
nop
mov
lcall
rclb
xchg
movsb
adc
sub
sbb
popa
loope
ret
test
cld
adc
fists
mov
popa
adc
mov
jne
aaa
fisubl
mov
popf
cs
jg
jmp
shll
scas
inc
or
clc
daa
lcall
push
cmp
add
sbb
add
sub
es
outsl
jge
mov
test
in
enter
jmp
in
xchg
movsb
xor
out
in
shlb
fucomip
pop
out
mov
pushl
mov
lea
and
xor
push
xorb
stos
mov
mov
aad
fwait
sub
fdecstp
scas
les
mov
and
ljmp
mov
in
adc
insl
ljmp
hlt
sti
pushl
js
shlb
push
ja
mov
pop
sub
outsl
std
dec
or
jp
adc
pop
ljmp
add
outsl
out
dec
loopne
lcall
push
xlat
loop
push
imul
dec
fildl
decl
outsl
add
inc
leave
scas
aaa
enter
ss
and
and
lock
icebp
dec
cld
ret
lcall
cli
xchg
mov
clc
gs
xchg
xor
in
sub
lea
fisubl
cltd
fsub
sub
ret
cwtl
outsb
push
pusha
push
bound
mov
out
movsl
lods
and
mov
pop
add
out
lds
les
negl
jg
mov
imul
pop
sbb
fwait
std
jmp
lret
or
xor
subl
xchg
decl
out
push
mov
push
outsb
xchg
mov
int
je
jns
jmp
sub
push
outsb
outsb
cltd
insb
out
jbe
popl
jg
out
xchg
mov
test
stos
cs
test
enter
push
cwtl
xchg
jmp
dec
lcall
xchg
sub
call
sub
jp
pop
dec
js
xor
dec
push
mov
incl
fbld
cmpsl
ljmp
pop
jae
sub
shrl
mov
cmpl
stos
pop
or
push
push
filds
adc
iret
ljmp
incl
sahf
jl
in
mov
xchg
jl
mov
pop
mov
xchg
dec
out
pop
pop
clc
jns
jecxz
xor
jg
cs
out
loop
xchg
lcall
or
sub
add
int
nop
add
cmpsl
inc
out
mulps
adcb
dec
jbe
into
lcall
outsl
or
push
xlat
pop
inc
push
xor
push
inc
or
pop
ror
dec
clc
call
xchg
jge
dec
mov
adc
gs
xchg
inc
sub
inc
pop
sub
hlt
andl
push
inc
inc
xchg
popa
das
mov
cmp
mov
lret
ljmp
and
sub
mov
out
lock
test
lcall
out
aad
jne
adc
xor
les
dec
fnsave
jecxz
pop
loop
imul
into
sti
xchg
and
in
cli
arpl
mov
jg
fwait
call
inc
insb
loope
mov
ds
lds
stos
loop
cld
and
xchg
sbb
push
das
lcall
xor
pop
add
or
cli
or
or
jg
outsb
xor
inc
fbld
je
icebp
ficomps
out
sbb
add
lods
ljmp
push
sbb
shr
pop
bound
ret
jmp
fld
scas
push
dec
xchg
pushf
imul
dec
aaa
out
int3
leave
inc
pop
mov
push
push
cmc
idiv
push
add
scas
div
jnp
into
mov
mov
mov
stos
pop
pop
gs
pop
lods
int
push
lock
cld
fisttps
lock
adc
cmp
jle
cmp
das
cwtl
shrl
je
adc
jle
imul
cmpsb
pop
push
je
mov
jg
aas
jecxz
or
add
sbb
mov
push
cmp
pop
or
cmpsl
pop
cmp
jae
out
test
push
ss
pop
aas
xchg
adc
mov
jns
adc
xchg
inc
test
incl
cs
cmp
lea
cli
cld
insb
stc
or
mov
bound
sub
lcall
adc
es
arpl
scas
pop
pop
jnp
xchg
adc
test
outsl
sbb
xchg
fs
in
std
mov
inc
jg
mov
stc
push
xchg
and
repz
lret
and
pop
out
jg
inc
icebp
xorl
pop
call
push
pop
pop
dec
lret
xor
mov
aam
les
jne
hlt
decl
lds
xchg
rcl
add
jg
ficomps
cmc
ljmp
cltd
pop
hlt
pop
mov
into
jo
pushf
cs
sub
jg
outsl
leave
dec
xor
ds
out
adc
out
add
mov
call
sub
mov
or
xor
and
inc
fdivr
jmp
xchg
push
xor
das
dec
dec
mov
clc
sti
and
cmp
lcall
repz
outsb
dec
ret
popf
je
imul
clc
add
lcall
cld
ljmp
sbb
jnp
mov
hlt
push
inc
push
mov
jae
test
jg
into
dec
mov
test
ljmp
dec
push
lock
clc
lcall
stos
lock
je
dec
daa
cmp
xor
mov
test
mov
loopne
adc
jb
stos
inc
stos
out
lcall
push
outsb
jecxz
cmp
and
pop
push
mov
sub
xchg
ljmp
cmc
pushl
mov
shrl
xor
push
mov
das
fmul
dec
stc
jns
daa
jbe
ret
loopne
dec
imul
mov
rclb
sahf
dec
adc
jge
and
test
inc
jl
xchg
ret
cmc
icebp
lcall
pop
mov
xchg
sub
cli
push
inc
inc
and
movsb
addr16
jno
pop
bnd
pop
test
stc
jge
scas
dec
test
dec
in
pop
data16
jl
cwtl
dec
pop
xchg
sti
pop
mov
inc
mov
or
test
out
rorl
mov
mov
les
dec
dec
push
cli
cmpb
popf
pop
movsb
js
pop
mov
pop
and
gs
mov
icebp
jmp
negl
jo
stos
cmp
jge
and
clc
sbb
push
outsl
ror
out
dec
push
mov
pop
cmp
addr16
mov
inc
in
stc
mov
cld
xor
pop
or
lahf
mov
add
pushl
and
cmp
push
ljmp
outsb
into
mov
push
call
ffreep
lret
mov
cmp
ljmp
dec
cld
dec
ss
pop
arpl
push
scas
sahf
mov
fisttps
loop
push
outsb
ss
xchg
xor
cld
push
sbbb
push
mov
add
sub
mov
sub
dec
add
pop
fadds
mov
push
inc
sahf
or
or
pop
sbb
push
mov
ret
daa
call
adc
fcmovnb
dec
mov
jl
ds
push
fwait
adc
xchg
or
or
pop
rcrb
in
lcall
ret
orb
add
faddl
xor
sbb
lock
fadds
pop
push
mov
outsl
movsb
cmpsl
or
dec
push
sar
mov
jg
pushf
fstp
into
cmpsb
cmp
stc
xor
cmp
sub
inc
push
cmp
inc
and
outsb
data16
in
mov
aaa
sub
insl
push
rcl
adc
iret
adc
rclb
ds
push
or
jg
and
pop
jns
cmp
inc
xchg
clc
imul
icebp
rcrb
or
or
dec
rolb
leave
aam
loope
fcmovu
sbb
mov
shll
movsl
pop
xor
push
cli
shlb
xchg
rclb
aaa
mov
add
jl
call
sar
ss
sbb
inc
call
ss
shl
incl
fmuls
xor
cld
lods
dec
jbe
ja
lcall
dec
push
push
enter
inc
inc
or
or
ljmp
mov
mov
pop
sarb
fs
mov
movsl
xor
mov
dec
inc
daa
xor
repz
lret
sbb
icebp
cltd
add
lcall
adcl
xchg
rcrl
pushl
xchg
or
frstpm(287
push
into
in
jle
inc
jle
mov
pextrw
pop
loopne
test
adc
sbb
or
push
iret
fucomip
sar
push
call
xor
lods
test
bnd
jmp
ljmp
shrb
lods
addb
mov
mov
stos
jbe
test
cmp
subl
push
mov
dec
jg
xchg
pop
pop
clc
call
test
mov
jge
xlat
or
mov
out
and
cmp
lods
adc
and
das
pop
fwait
push
pop
or
cmp
fistpll
xchg
xchg
orb
lea
ljmp
cmp
test
jne
xchg
xor
pop
clc
add
sbb
xchg
sub
dec
cld
push
cmc
and
repnz
leave
adc
stos
cmp
sbb
adc
aaa
push
sbbl
in
loope
loope
pop
xchg
push
test
adc
push
lea
jmp
std
xor
adcb
lahf
arpl
jmp
xchg
pusha
test
loopne
scas
sub
push
imul
mov
adc
cmpsl
add
jne
addl
inc
test
call
push
cmp
xor
idivb
enter
out
mov
test
decl
mov
daa
mov
in
dec
lock
xor
push
push
jge
or
push
or
lcall
sub
sarl
xor
mov
mov
pop
mov
inc
jmp
js
and
in
and
push
mov
or
popa
push
nop
and
call
inc
ds
inc
push
xchg
pop
jns
xchg
or
xlat
push
mov
in
sub
gs
lods
lcall
xor
inc
mov
mov
movsl
add
mov
jnp
cmp
rolb
decl
dec
lds
add
cwtl
mov
loop
call
insb
sbb
cmp
cmpsb
and
call
jg
imul
aaa
leave
stc
fimull
sbb
jns
and
pop
in
xchg
dec
mov
jbe
addr16
xor
je
push
rcrb
mov
lcall
mov
insb
or
cmc
mov
ret
out
pop
sarl
jl
popa
sub
jg
xchg
and
or
roll
push
dec
lods
mov
pop
clc
push
shr
cmp
stc
pop
shll
and
lcall
mov
jmp
and
fucom
jg
les
xchg
and
mov
jmp
ljmp
jns,pt
rolb
lcall
in
mov
adc
mov
pop
fwait
lea
cmpsl
cmc
adc
push
mov
int3
repz
gs
push
jg
sbb
nop
adc
bound
sar
pusha
inc
jbe
movsl
jmp
icebp
call
cmp
cmp
icebp
or
or
cmp
fldcw
mov
xcrypt-cbc
cmpsl
sarb
fdivrs
das
xchg
pop
sbb
lds
pop
adc
xchg
and
xor
loop
pop
sub
cmp
test
push
call
pop
out
xor
cmp
pop
call
mov
mov
push
orl
jge
and
cmp
je
push
sub
lock
stos
aaa
dec
sub
xchg
cmp
nop
push
movsb
es
add
pop
push
push
pop
jl
das
cld
or
jnp
push
xor
xchg
outsl
or
shr
test
shrl
jno
push
fistps
ja
mov
jne,pn
push
lcall
dec
sub
ja
popf
xchg
and
ljmp
inc
int3
xor
jecxz
push
and
sbb
xchg
add
testl
inc
adc
xchg
fcompl
gs
cmpsl
ud0
mov
mov
cld
add
sbb
iret
add
shl
push
int3
in
es
shll
cmp
loope
cmpl
imul
and
push
mov
aas
icebp
aad
mov
adc
xor
outsb
jno
jg
clc
xor
aam
jmp
inc
je
mov
push
out
add
jmp
ss
sbb
stos
icebp
mov
or
jg
adc
lea
cli
sub
mov
jae
xchg
jg
jmp
push
notl
cmp
jo
add
jg
test
popa
ljmp
xchg
sub
fdivrl
test
pop
or
std
cld
call
cli
leave
xlat
jp
in
push
inc
dec
xchg
jne
ss
jmp
inc
jne
and
push
inc
push
leave
mov
in
mov
pop
cli
pop
inc
lret
pop
cltd
pusha
fidivs
mov
lods
test
ljmp
stc
xor
pusha
pcmpeqb
sub
cmc
xchg
cmp
aaa
mov
mov
lock
lods
mov
pop
js
incl
push
push
clc
jg
jb
cmp
jno
inc
jno
fstpt
sbb
push
cwtl
sahf
xchg
jns
add
pop
cli
lcall
cmpsb
test
fisttpll
in
fdivrs
mov
mov
imul
test
call
notl
das
sarb
movsl
lret
sbb
mov
shll
hlt
stos
sbb
ffree
inc
inc
mov
jb
jge
outsb
pop
clc
mov
jmp
ret
lock
insl
sbb
mov
pushf
sbb
subb
mov
clc
jns
shl
pop
dec
mov
das
mov
sub
pop
lahf
enter
cld
incl
pop
xor
das
xchg
and
and
loop
push
addr16
ljmp
xchg
pop
xor
mov
adc
shr
mov
mov
in
ja
aas
cmp
sbb
pop
cld
incl
mov
fidivs
dec
pop
data16
loopne
dec
scas
icebp
add
add
shlb
inc
test
clc
lahf
add
or
cwtl
inc
cmp
scas
cmpsb
lret
push
ss
pop
ljmp
mov
mov
nop
stos
xchg
addr16
pop
out
imul
lds
mov
js
cmp
inc
sbb
jge
idivl
or
add
mov
sub
cwtl
pop
addl
mov
sbb
fldl
mov
cmp
stos
or
in
xchg
mov
sub
sbb
bound
loop
xchg
cli
pop
ljmp
test
sub
out
mov
icebp
jg
aaa
push
and
inc
stc
mov
aam
sub
push
mov
or
stc
cld
cmp
scas
insl
incl
aam
adc
cld
or
daa
fldenv
mov
mov
xchg
stos
imul
push
xor
stos
jb
scas
jge
mov
jg
and
push
cmp
fldl
fbld
pushl
in
ds
inc
adc
mov
mov
mov
or
jno
mov
mov
sahf
sbb
mov
icebp
mov
les
rclb
iret
dec
out
pop
incl
adc
adc
sub
pop
loop
inc
cmp
mov
mov
xchg
out
xchg
rcr
loop
ds
mov
in
fs
decl
lods
lret
sub
push
sbb
imul
jg
sbb
xchg
out
jg
int
sbb
push
push
pop
add
fsubrl
out
outsb
and
jae
aad
in
dec
das
outsb
ljmp
std
jg
test
jg
add
stos
and
mov
loop
out
imul
scas
or
pop
call
mov
fs
insl
out
or
dec
adc
xchg
clc
mov
push
ror
insl
lods
cmc
add
add
popa
in
fistpl
sbb
mov
cmp
repnz
add
jp
lcall
movsl
or
push
xchg
pop
lods
and
xchg
jl
jo
cli
decl
cwtl
dec
push
mov
dec
mov
adc
ret
imul
lea
xchg
add
xlat
xlat
jmp
push
les
sbb
xorl
cmp
pop
ret
push
mov
cld
lcall
jg
movsb
sbb
call
insl
movsl
sub
lods
cmp
mov
xchg
sbb
stos
dec
or
decb
jle
shlb
cmp
call
incl
jbe
subl
movsb
fisttpl
mov
add
sub
jb
inc
clc
xchg
pop
sti
roll
outsl
jmp
xchg
add
cltd
outsl
lock
mov
push
ds
push
jae
pop
loop
jecxz
pop
adc
mov
repz
dec
pop
adc
std
decl
inc
fsubrs
and
or
mov
lods
dec
jmp
and
loope
xchg
iret
mov
jbe
xchg
sub
lods
out
mov
mov
std
xchg
ljmp
imul
mov
out
pop
cmp
adc
mov
sarb
pop
lods
incb
xor
add
ss
adc
decl
fwait
adc
inc
mov
add
sbb
lods
mov
ret
mov
adcl
fmulp
adc
dec
sub
lcall
jo
cmp
cwtl
lea
xor
sti
int
pop
pop
decl
out
insb
movsb
faddl
lea
pop
rcrl
dec
lea
jg
or
xor
sahf
pop
mov
xchg
mov
mov
xor
add
sbb
mov
inc
mov
mov
mov
and
mov
shll
inc
mov
mov
cli
dec
mov
rorl
lret
mov
pop
clc
call
cmpsb
cld
xchg
jbe
sbb
mov
dec
dec
mov
sub
xor
ljmp
pop
mov
add
pop
push
xor
stos
cmp
pop
stos
out
bound
sub
in
js
nop
sub
mov
mov
mov
add
pop
outsb
mov
xlat
pop
inc
fwait
pop
ljmp
xor
jmp
dec
mov
out
out
pop
pop
ja
fdivrl
fs
jae
jmp
mov
push
ljmp
xor
dec
xchg
cmc
mov
xchg
pop
inc
test
lea
loopne
rcll
daa
clc
aad
xchg
clc
rcl
adc
mov
mov
sar
sbb
int
fcompl
mov
mov
leave
loope
out
rolb
mov
fwait
ljmp
shrb
std
fbld
or
dec
jno
xchg
mov
enter
sbb
pushl
push
dec
lods
and
loope
test
add
addr16
add
mov
sbb
ljmp
ljmp
cmp
and
add
adc
add
fstpl
mov
insl
testb
mov
add
dec
mov
add
outsb
ret
cmp
cwtl
les
cmp
call
or
test
ljmp
std
mov
push
loope
mov
dec
bound
adc
in
lock
frstor
or
push
and
jge
movsl
stc
mov
ljmp
loop
xchg
jp
sbb
sti
cmc
ss
and
jge
fucomip
fists
cli
inc
roll
push
xchg
fldenv
cltd
and
addr16
and
adc
mov
mov
lcall
js
je
aas
jp
jb
dec
mov
sbb
xorl
mov
pop
sub
pop
push
cmp
shll
xor
cmc
das
call
push
scas
fimull
adc
inc
neg
popf
gs
push
sub
mov
mov
mov
stos
into
inc
test
inc
das
lcall
xchg
and
jmp
xor
mov
ljmp
outsl
mov
mov
mov
ja
rcll
cmp
mov
ljmp
cmpl
adc
mov
jnp
adc
out
fldt
movsl
call
mov
or
das
mov
and
rcll
sbb
mov
jmp
pushl
add
push
out
popa
jmp
add
pop
inc
pop
pop
ds
cmp
mov
gs
pop
push
test
jp
cld
jmp
cld
and
dec
add
sahf
fcoml
insl
vpunpcklqdq
movsb
sub
shr
loopne
sub
xor
out
push
jmp
mov
in
cld
inc
sahf
jmp
das
jbe
xor
cli
lock
fnstsw
js
scas
add
jl
mov
xchg
fcoml
out
sub
and
insl
decl
push
and
icebp
mov
jg
lcall
icebp
inc
aad
jecxz
sbb
cmp
mov
adc
sbb
jb
mov
test
jl
or
jg
bound
adc
pushl
cli
ror
mov
aaa
mov
or
roll
loope
hlt
mov
mov
lcall
imul
cmp
mov
pop
jmp
sahf
sbb
adc
or
incl
sub
adc
xor
adc
ljmp
inc
jg
sbb
mov
popf
das
js
daa
and
pop
les
mov
dec
in
cmp
shrl
fstpl
push
lcall
or
lret
push
push
daa
jl
sbb
pop
repnz
popf
in
ss
leave
adc
and
jo
jae
jns
jnp
jle
lea
mov
cmp
sahf
push
js
divb
cld
scas
arpl
dec
fmuls
ret
subb
incl
push
pop
dec
mov
repnz
filds
dec
jbe
fisubs
pop
fs
gs
ljmp
les
cltd
mov
loopne
testl
in
xchg
inc
fdivs
lods
pop
lret
push
loopne
divl
cli
fists
inc
pop
dec
nop
sub
inc
push
test
inc
cs
adc
cmpb
test
pop
aaa
aas
sub
out
push
xor
adc
js
xchg
inc
lret
call
icebp
jmp
pop
scas
test
jnp
jns
mov
jge
add
dec
xor
lcall
cltd
push
out
into
and
and
pop
inc
push
mov
or
dec
ljmp
rorb
pop
rep
movsl
mov
add
std
cmp
aas
xor
mov
loop
dec
frstor
in
fcoml
xchg
adc
das
or
cmp
iret
int3
arpl
xor
mov
mov
je
add
scas
xlat
mov
push
pop
and
pushl
pop
sub
test
mov
shll
imul
xchg
das
loopne
jo
outsl
cmp
jl
test
js
outsl
lret
pop
loopne
sbb
mov
int
cmpsl
cmp
xchg
cld
jmp
xor
mov
cmp
lods
xchg
outsl
std
add
and
push
and
nop
in
or
mov
jg
lcall
or
outsl
shlb
xor
jmp
xchg
dec
and
mov
cli
jmp
ret
lds
jne
js
pop
jmp
xchg
push
in
pushl
ljmp
push
jecxz
movsl
jno
pushf
fcmovbe
enter
and
inc
cmp
cmpsb
jo
leave
jae
xchg
sub
movsl
ljmp
pop
jmp
sar
xlat
add
femms
sub
lcall
call
inc
jge
push
pop
inc
inc
xchg
les
ret
nop
addl
cwtl
pop
mov
mov
xchg
jge
jg
fsubl
je
inc
sbb
lock
lcall
add
lcall
aas
rorl
das
decl
pop
mov
push
adc
outsb
push
cmpl
dec
out
mov
sub
mov
or
call
in
clc
and
test
sbb
mov
cmp
sti
loopne
enter
jae
jmp
push
mov
insb
jmp
dec
sub
and
mov
arpl
pop
xor
out
insb
and
mov
rcrb
jp
test
or
push
xchg
pop
dec
addr16
adc
cmp
cmp
sub
das
hlt
imul
mov
add
adc
cld
jg
fisubrs
jne
cltd
adc
sahf
orb
outsl
lock
inc
mov
ds
sti
sbb
mov
xor
stos
cmp
in
cltd
xor
and
xor
mov
push
fs
push
sbb
data16
mov
rcr
mov
xchg
xchg
dec
clc
cmc
in
xchg
cli
mov
inc
loope
xlat
lcall
jmp
add
sub
in
scas
push
outsb
xor
aaa
ljmp
dec
jl
dec
add
aad
dec
mov
pop
incl
leave
inc
out
ret
inc
hlt
mov
or
jmp
aad
xchg
mov
int3
and
rcl
cmp
jmp
xchg
push
out
jle
adc
pop
inc
sbb
push
dec
add
push
das
cld
mov
icebp
add
push
jl
add
fs
cli
ljmp
in
cmpsl
dec
or
push
out
push
and
jno
call
lcall
enter
mov
push
add
in
gs
into
push
and
jmp
popf
push
dec
add
out
xchg
jle
xchg
and
aam
outsb
pop
loopne
and
add
push
cmp
ljmp
icebp
scas
jg,pn
clc
iret
ret
insl
push
mov
out
jne
mov
sub
mov
rcr
popf
jnp
add
and
inc
loopne
jg
jno
mov
fcmovnbe
lret
iret
ja
jnp
std
fbstp
pop
in
xchg
arpl
inc
or
inc
lock
fwait
popl
pop
jae
mov
stos
adc
pop
mov
or
push
jmp
mov
xor
idiv
les
xchg
shr
inc
imul
lcall
stc
sbb
jns
jb
push
fldl
hlt
inc
popa
sbb
insb
out
std
pop
sub
test
cmc
pushl
jnp
adc
sub
setae
cwtl
out
xor
sbb
cmc
ret
sbb
add
lcall
mov
cmpsb
pop
jl
fdiv
aad
push
jg
adc
call
cmpsl
adc
ljmp
inc
and
dec
sbbb
aaa
cli
jmp
pusha
and
dec
pop
jecxz
push
sub
or
clc
or
insb
pop
sbb
loop
pop
loopne
fs
cmpsb
rol
sub
test
xchg
jo
jmp
jge
mov
les
sbb
aaa
cmp
bound
pop
dec
push
sub
cmp
jmp
or
mov
les
xchg
test
mov
jae
jae
das
mov
mov
int
jb
xchg
mov
fmull
xchg
mov
ljmp
cld
pop
cmp
ret
cmp
sahf
pop
and
mov
fwait
ds
iret
lcall
xor
mov
pusha
mov
sub
ljmp
pop
sub
sub
mov
dec
cld
mov
es
ret
out
call
jne
or
inc
insb
pop
jo
mov
outsl
jo
push
mov
out
arpl
xor
fimull
fldt
pop
lret
in
ret
mov
loope
jg
cmp
mov
cmc
fildl
pushf
jne
mov
je
shll
xor
jmp
jg
push
rolb
test
add
jb
andb
pop
dec
mov
call
mov
iret
popa
pop
repz
cmp
sbb
addl
outsl
cld
inc
mov
sbb
cmc
movsl
cmp
mov
insl
xor
sti
test
outsl
cmc
das
cmc
leave
pop
add
negb
nop
xchg
jae
aaa
outsb
outsl
lock
clc
mov
pop
popf
out
scas
xchg
cld
inc
push
lahf
cli
das
std
shlb
add
loopne
bound
xor
mov
dec
inc
jnp
push
repnz
xor
sub
or
shl
mov
cmp
ljmp
cmc
loop
and
or
inc
ds
enter
ljmp
frstor
mov
adc
mov
pop
xor
out
cld
adc
aad
loopnew
fstpl
cmp
add
jbe
test
lcall
movsb
inc
sti
mov
pop
mov
lods
mov
xchg
outsl
in
fsubl
cmp
sbb
sub
aam
mov
cmp
sub
xor
fstps
or
dec
cmpsb
dec
pop
mov
mov
jge
popa
dec
nop
pusha
adc
push
mov
outsl
lock
imul
cmp
mov
jmp
mov
sti
addr16
pop
add
in
mov
pop
jmp
mov
cmpsl
push
mov
xor
mov
jg
incl
sbb
out
jne
sub
leave
pop
cmpb
mov
pop
ret
in
mov
push
fldenv
lahf
je
imul
incb
dec
xchg
jo
sub
dec
push
sbb
jg
sub
outsl
add
in
lcall
ja
mov
jbe
lret
pop
mov
xor
pop
mov
inc
ret
sar
and
push
mov
decl
sbb
mov
sahf
ja
xchg
inc
insl
jae
sahf
cmpsb
push
sub
jp
mov
mov
jg
scas
je
xchg
mov
ret
mov
lods
stos
call
das
icebp
sbb
mov
dec
ss
daa
lea
test
pop
cld
lcall
sbbb
test
mov
mov
insb
cwtl
mov
push
jg
pop
mov
pop
in
ffreep
adc
insl
and
pop
pop
pandn
jge
call
dec
jmp
jns
sbb
xor
lods
adc
je
dec
notl
ret
gs
call
sbb
mov
sbb
in
into
test
xchg
add
mov
cltd
clc
ljmp
mov
lret
mov
subl
mov
ret
in
cmpsb
inc
fists
ret
test
call
in
cs
mov
pop
xorl
jns
xor
jg
add
jae
mov
ret
sbb
sub
das
mov
pop
or
mov
into
adc
lcall
dec
or
cmp
add
lea
sub
inc
clc
mov
mov
ss
popf
inc
in
sub
mov
out
inc
mov
decl
adcl
mov
repnz
shll
adcl
lcall
and
stos
push
mov
incl
push
pop
adc
jae
inc
inc
inc
sar
in
jle
loope
mov
mov
jb
adc
std
xchg
pop
ljmp
xor
jmp
inc
xor
sub
bound
jns
inc
mov
adc
arpl
movsl
addl
popa
bound
cld
or
adc
pusha
lock
push
ljmp
push
rolb
orl
add
pop
mov
jno
mov
add
xchg
mov
jbe
xchg
adc
jg
ljmp
sbb
inc
nop
popf
imul
inc
fnstenv
loopne
sar
ljmp
lret
test
js
int3
inc
fmul
repz
xchg
inc
andb
pop
imul
mov
jb
divb
ja
cmp
scas
aas
ljmp
mov
je
sar
outsl
cld
jmp
shl
loop
dec
inc
subb
or
pushf
into
dec
push
pop
pop
test
lock
inc
pop
int3
jnp
stc
adcl
imul
push
pop
add
jmp
shll
pop
in
ds
popl
xchg
sbb
jecxz
ljmp
mov
add
test
test
es
mov
inc
pop
pusha
mov
cmp
mov
cmp
push
out
jo
ret
xchg
clc
fildll
mov
add
cmc
leave
negb
dec
out
loope
push
mov
addb
movsl
aaa
pop
push
add
inc
outsb
or
cltd
pop
jnp
push
or
jle
cmc
ja
xor
cwtl
and
sub
test
add
and
in
loop
decl
sub
push
std
mov
in
std
mov
mov
mov
jg
or
call
xor
sub
pop
orl
pop
incl
pop
mov
lea
ror
xchg
dec
lds
mov
sub
lock
outsl
fidivrl
jo
add
or
jb
mov
dec
sbb
add
pop
mov
mov
mov
call
mov
pop
push
inc
adc
pop
pop
in
jg
jle
xlat
stc
xlat
jnp
sub
pop
sar
mov
shlb
sti
sub
jp
fs
push
push
in
push
mov
jno
call
test
push
out
in
adc
repz
mov
jl
push
adc
pop
xchg
imul
ljmp
mov
cltd
pop
in
push
or
andb
mov
je
test
insl
fsubl
lock
bound
je
sbb
movsl
cli
mov
shlb
sbb
iret
push
adc
fisttpll
testl
jae
jp
mov
mov
sub
inc
jp
mov
aad
or
fsts
inc
sbb
xor
mov
bound
mov
inc
cmp
cmc
xchg
xorb
jg
cwtl
scas
sbb
mov
jmp
xchg
ds
xchg
popa
mov
neg
mov
mov
add
mov
inc
nop
pop
adcl
lcall
mov
pop
push
dec
and
jbe
cltd
xor
icebp
pop
push
add
int
jp
and
fldt
and
jg
arpl
ret
and
ja
adc
xchg
movsl
jg
jg
inc
inc
rcll
hlt
pop
jnp
add
pushf
icebp
sub
adc
jne
adc
cmpsl
enter
and
cmp
mov
mov
jmp
mov
cli
ljmp
add
test
sbb
ljmp
sbb
pop
jecxz
jg
cmc
jmp
cld
cmp
mov
mov
lahf
cmpsl
cli
and
push
lcall
push
inc
fisttps
or
pushl
cmpl
es
loop
out
xchg
lahf
loope
insb
aad
imul
jl
and
fbld
sbb
mov
add
enter
xor
insl
adc
pop
lods
pop
fisttps
jge
and
outsb
icebp
xorl
mov
out
pop
test
js
pop
out
push
cmpsb
pop
outsl
xchg
lret
jb
or
call
add
jp
enter
xor
push
imulb
loopne
cmp
cwtl
and
int3
imull
les
or
xor
adc
jns
push
lcall
js
push
cmc
cmpl
stos
aam
in
icebp
mov
mov
cli
shrl
cmp
ljmp
loopne
and
cmp
ror
adc
or
sub
fcmovu
pushl
xchg
sub
mov
mov
dec
dec
dec
sarb
fsub
push
rorb
dec
dec
ljmp
je
mov
pushl
cmp
fstps
pmulhuw
adc
push
fbld
jo
dec
dec
inc
xchg
dec
jo
ret
mov
jg
decl
or
arpl
fidivs
pop
push
mov
leave
ja
fidivrs
ljmp
loopne,pn
fnsave
dec
js
push
test
jno
icebp
sbb
insl
sub
pop
incl
cmp
test
test
std
and
leave
pop
xlat
add
mov
inc
fucomp
jne
inc
mov
cwtl
pop
ljmp
clc
rclb
push
mov
andb
xor
ds
clc
call
fdivrs
jmp
xchg
pop
sub
out
xor
cli
pop
ljmp
xor
loop
sbb
sbb
ljmp
push
les
daa
js
cwtl
xchg
push
movsb
mov
adc
adc
in
imul
dec
iret
shlb
mov
adc
inc
std
loope
and
leave
gs
mov
lahf
push
mov
and
jecxz
push
and
push
jns
decl
data16
addr16
xlat
push
inc
dec
or
btc
push
sbb
and
fdiv
dec
push
popf
not
jns
cld
pushl
dec
and
cmp
icebp
dec
jge
sbb
daa
mov
dec
orl
pushf
and
xor
cmp
lcall
or
pop
shlb
out
cmp
mov
add
push
or
xchg
aas
loopne
loop
mov
pop
addr16
jbe
xor
xor
cmp
sbb
jg
jmp
jmp
frstor
push
or
lahf
add
iret
adc
in
xchg
sub
jae
sbb
mov
enter
insl
and
mov
ljmp
lea
pop
arpl
loope
andl
dec
pop
jecxz
push
push
dec
jge
fucomip
aaa
jo
jo
mov
jnp
or
rsqrtps
adc
inc
stos
insb
iret
pop
push
xchg
aas
mov
or
inc
push
mov
inc
fsubrs
sahf
mov
imul
push
lcall
cli
mov
pushl
addr16
or
pushf
js
pop
sub
dec
cmp
arpl
shrl
cmp
and
stos
dec
fst
push
scas
mov
cmp
pop
pop
pop
mov
pop
shrb
push
mov
or
lock
and
popl
stos
add
adc
fbstp
negl
lahf
mov
inc
lock
out
add
sar
decl
xor
jmp
xchg
xor
shrb
int
xor
sbb
pushf
scas
mov
hlt
inc
bound
sbbl
mov
mov
fdivrl
push
loope
pusha
shll
movl
or
cltd
sub
cmp
lahf
mov
call
mov
arpl
loopne
or
shr
inc
jmp
xor
and
pop
mov
iret
loop
ret
stos
sub
mov
push
das
cld
decl
dec
stos
rorl
and
pop
jl
pop
pushf
sbb
pushl
jg
xor
jne
cmp
cmp
cmp
dec
outsl
nop
sbb
insl
mov
decl
subl
fadds
adc
mov
mov
pop
arpl
and
sub
pop
jg
add
cmp
gs
inc
jge
popa
inc
bound
adc
out
icebp
add
sub
add
mov
das
jnp,pt
lcall
out
adc
stos
or
jno
incl
mov
or
scas
and
sbb
sbb
js
cwtl
aad
mov
push
hlt
adc
adc
test
bound
aad
sbb
push
testl
adc
lock
jg
decl
mov
clc
lds
fiadds
andl
sbb
cmp
movntq
out
mov
pushl
cmc
mov
sbb
jmp
mov
mov
xor
decb
add
scas
popf
call
xchg
adc
sarl
ret
push
sarb
push
lcall
mov
pop
jle
mov
idivl
cltd
cmp
fcompl
add
sahf
sbb
pop
xchg
jl
cs
jbe
dec
rcrl
xchg
add
int3
add
mov
inc
roll
jne
call
lock
add
jle,pn
push
jno
leave
or
xchg
jge
inc
jns
xlat
lock
mov
int
and
mov
xor
mov
lds
cmpsl
pop
mov
pop
xchg
icebp
ljmp
xor
call
dec
out
stc
inc
leave
xor
add
out
shlb
sbb
es
pop
mov
insl
push
out
daa
mov
ljmp
mov
xchg
daa
jns
mov
cmp
stc
mov
dec
jmp
or
and
and
call
jl
scas
dec
fisubrl
inc
lcall
test
aaa
clc
jg
adc
mov
dec
add
jge
fwait
rcl
push
dec
cli
pushl
dec
pmaxub
lcall
push
roll
mov
push
sub
shll
cli
incl
lcall
int
mov
mov
dec
add
cmpsb
push
loope
inc
jg
outsl
mov
cld
adc
fst
repz
inc
jbe
addr16
aaa
mov
lea
clc
clc
cwtl
sbb
inc
sbb
pop
xchg
and
cmp
icebp
sbb
push
cld
xor
pop
in
cmp
in
enter
jle
rorb
pop
int3
xlat
cmp
nop
ss
mov
shrb
mov
mov
sub
xchg
lcall
mov
pop
icebp
mov
cmp
pop
jmp
mov
es
jbe
xchg
sub
xor
fistl
ret
aaa
pop
push
ds
jle
aam
lret
xor
jl
mov
add
dec
sub
je
mov
dec
scas
mov
fdivrl
or
jle
inc
or
or
inc
mov
rorl
mov
inc
insl
fisttpll
loopne
insl
cli
lcall
pushf
push
jae
pop
inc
rcl
int
sub
loopne
clc
fildll
dec
fildl
cmp
sub
xchg
pusha
repnz
ret
cmp
mov
daa
decl
mov
int3
pop
mov
fstl
cli
jg
cmp
test
jl
lcall
rorl
call
and
loop
mov
pop
int
popa
xchg
or
test
pop
xchg
test
subl
add
sub
js
gs
sub
imul
cmc
test
pop
mov
sub
in
das
test
enter
daa
rcll
shl
cmpsb
and
hlt
push
pop
jp
xlat
negl
nop
repz
jg
lods
int3
mov
iret
lds
repz
ljmp
cmc
add
incb
adc
push
es
sahf
xor
fnstsw
inc
xchg
je
test
cwtl
cmc
inc
stos
or
sub
into
mov
mov
loope
incl
outsl
lcall
ds
push
ret
inc
xchg
ljmp
xor
cmp
sub
jnp
jb
mov
shr
mov
rorb
add
cmp
popa
or
jle
cmp
cmc
mov
das
mov
adc
pop
loop
cs
pop
jg
loope
mov
mov
addr16
int3
inc
ds
mov
pop
movsb
or
xchg
call
jp
mov
int3
test
dec
cmc
inc
addr16
cmp
or
les
std
divb
rolb
push
imul
sahf
bound
test
ljmp
icebp
ret
sbb
insb
add
dec
std
sbb
incl
hlt
adcb
push
out
jno
repz
in
movsb
sub
mov
out
inc
xchg
jle
leave
dec
fidivs
and
idivl
add
pushl
inc
and
push
pop
data16
test
cltd
clc
jg
jnp
jmp
mov
out
adc
mov
jge
adc
lcall
loopne
adc
inc
aad
fisubl
and
lds
jns
dec
out
sub
mov
test
in
jge
shl
xchg
sti
filds
xor
ljmp
dec
add
sub
pop
sub
fistpll
mov
xor
mov
lods
fcos
ret
pushf
and
enter
ret
push
sti
jae
or
dec
mov
les
jp
xchg
mov
inc
add
push
aas
outsl
adc
fnsave
sbb
jnp
lods
cli
add
pop
shr
lcall
out
clc
jg
stc
jnp
mov
rorb
mov
rcll
push
mov
mov
jecxz
insb
push
sub
xor
pop
pop
push
sub
mov
xlat
sarb
adc
mov
xor
test
mov
gs
loop
inc
mov
shr
pop
bound
mov
loope
rcr
add
inc
fldl
pop
call
jl
mov
and
sub
push
in
cli
push
add
sbb
popa
loope
lcall
jecxz
sbbb
fs
mov
pop
mov
add
jg
and
int
xchg
pop
xchg
pop
repnz
ret
mov
jmp
mov
inc
adc
add
lahf
movsb
and
sub
jg
data16
or
imul
sbb
call
cmp
cmp
addr16
fwait
push
lret
mov
cmp
mov
add
mov
fimuls
ficoml
jb
cld
mov
pop
cli
outsl
mov
mov
cmp
or
pusha
push
ljmp
adc
push
cwtl
sub
jae
fsubr
push
mov
test
mov
sbbb
pop
loop
rcrb
xchg
iret
jbe
psubusb
add
pushl
pop
out
jne
fxch
aad
and
mov
repnz
mov
loop
cmpl
into
or
mov
inc
out
lcall
add
cmp
push
fmull
xor
mov
cld
pop
loopne
sbb
lds
pop
xor
jmp
jo
mov
ficoml
xchg
or
jg
pop
cmpsl
mov
mov
cmp
jp
fildll
xchg
lock
lret
jg
decl
xchg
cmp
push
int3
pop
nop
inc
push
jg
ret
ficoml
mov
std
jl
ss
cmpsl
sti
cmp
xchg
xor
or
ljmp
dec
in
je
or
cltd
xchg
push
and
hlt
lcall
pop
loop
lahf
icebp
mov
int3
icebp
or
jge
ja
inc
jmp
das
mov
or
mov
cmp
punpckldq
test
ljmp
aad
and
movb
test
xchg
add
in
mov
icebp
dec
out
dec
ret
or
lods
pop
insb
loopne
gs
or
sub
mov
scas
xlat
and
call
pop
inc
enter
sarl
dec
inc
mov
inc
roll
incl
cld
mov
insl
lret
add
adc
bound
decl
iret
mov
xchg
fisubl
fisubl
xchg
mov
int3
and
insl
scas
xchg
inc
pop
xor
aad
icebp
jg
push
mov
jbe
out
mov
imul
mov
inc
jne
das
cld
mov
jge
imul
test
mov
ret
mov
rcrl
mul
inc
les
and
loop
xchg
dec
enter
lcall
and
sbb
test
call
pop
mov
fdivrl
in
cmpsl
and
jae
mov
add
fnstenv
fsubs
lods
incb
jg
jmp
push
roll
call
ljmp
aam
dec
push
mov
testl
push
mov
adcb
call
repnz
jbe
mov
hlt
dec
mov
and
jl
pop
fsubr
clc
mov
lcall
cli
fcomp
aaa
ja
popf
push
xchg
jnp
das
jae
test
jg
incl
mov
mov
sbb
cmp
push
lret
or
jno
repz
sub
sbb
push
outsl
inc
and
icebp
addb
push
lcall
shlb
mull
bound
outsb
outsl
scas
sbb
in
cmp
out
dec
xchg
mov
inc
xor
pop
ljmp
and
inc
inc
repnz
decl
xchg
dec
outsb
aam
stc
mov
mov
ret
mov
push
fs
push
ss
or
fwait
cs
loope
shl
xchg
cmp
dec
or
je
or
cld
pushl
push
push
sub
add
je
imulb
lods
fdivrl
nop
enter
hlt
outsl
cmc
ret
cld
jp
rorl
test
call
or
call
call
int3
les
bound
add
decl
push
out
jmp
jae
xor
stos
cs
mov
dec
aas
shrl
push
cmp
mov
push
jmp
dec
mov
mov
lds
pop
jnp
dec
cmp
lods
jbe
ljmp
pop
fwait
and
fstl
stos
cmp
lcall
popf
sahf
insl
outsb
test
mov
test
or
cmp
pop
clc
pop
mov
inc
insl
xor
aas
pop
push
stc
and
xchg
lret
lcall
pop
xor
inc
cmp
fbld
mov
mov
mov
je
jmp
jge
popf
mov
pop
ljmp
fdivl
hlt
push
sbb
push
enter
cmpsb
mov
sub
test
pop
clc
pop
std
xor
jp
sti
adc
jae
push
lods
js
pop
mov
mov
jle
jno
sbbb
sub
add
inc
test
stc
js
sbb
sbb
and
mov
ljmp
cmp
call
outsl
inc
xor
sbb
mov
andb
pop
aas
popa
pop
in
sbb
sbb
push
call
sub
jge
scas
dec
cli
xor
push
lcall
sar
lea
inc
inc
mulb
mov
stos
or
daa
or
xchg
shlb
jbe
iret
shlb
lcall
jle
mov
jae
or
int3
pop
movsb
pushf
xchg
jge
fistps
inc
mov
out
jo
add
mov
mov
mov
imul
add
xor
mov
pop
cs
sar
repz
xor
sti
pop
cld
out
lods
mov
lcall
std
mov
jno
push
sbb
dec
push
bound
pushf
scas
or
test
jne
in
leave
stos
xor
adc
aad
iret
mov
xorl
pop
movsl
pop
xor
lcall
in
mov
dec
dec
adc
pop
inc
test
push
xor
xor
cvtps2pd
mov
pop
xchg
gs
jno
mov
ret
popf
mov
push
imul
fildll
rorl
iret
inc
addr16
movsl
ljmp
mov
inc
mov
jno
cmp
call
or
cmpsl
mov
add
push
push
jmp
sub
stos
jge
mov
dec
icebp
push
dec
in
push
test
outsb
pushf
addb
sar
fistpll
lods
xlat
add
lea
xor
movsl
dec
and
sti
mov
lcall
or
cmpsb
das
sbb
inc
mov
popf
jl
mov
nop
nop
mov
aam
xor
sub
mov
fiadds
cmc
jg
mov
or
push
mov
repz
pop
inc
call
cmp
imulb
int
ret
xor
test
call
sbb
cwtl
adc
adc
xor
jno
bound
push
lods
call
in
jns
dec
cwtl
cmp
push
popa
repnz
daa
mov
xchg
jns
imul
ljmp
test
xchg
adc
icebp
mov
mov
sti
ljmp
cmc
das
int3
push
outsb
sub
sbb
add
push
xor
and
sti
lea
cs
jg
adc
ljmp
pop
cld
paddq
xor
sbb
add
sub
lock
int3
lods
pop
pop
arpl
icebp
in
call
mov
cmp
pop
mov
inc
add
sbb
pop
inc
and
clc
dec
push
mov
incb
lret
pop
add
push
fadds
imull
pop
scas
mov
pop
sub
cli
xor
jcxz
loop
hlt
stos
popa
jns
clc
pop
push
das
hlt
decl
or
sbb
inc
add
xor
decl
scas
xchg
jae
lret
sbb
bound
jo
pushl
arpl
push
or
sub
jb
and
lret
pop
push
cli
call
push
sbb
pop
bound
or
invd
ljmp
jne
stos
lahf
fmull
mov
fsubrl
lea
ffreep
call
dec
pop
aam
inc
ficoml
inc
and
push
imul
push
jg
test
cmp
nop
rorb
mov
mov
loop
nop
sbb
inc
mov
icebp
pop
loopne
push
aam
les
adc
pop
aad
xor
cmp
pop
sbb
xor
inc
nop
fdivs
push
test
aaa
cli
pop
mov
mov
loopne
xchg
hlt
das
hlt
je
mov
jns
cld
inc
jmp
lea
lcall
fdivrp
sub
pop
aad
xor
jne
ljmp
adc
gs
push
xchg
dec
or
notb
pop
inc
out
lret
xchg
data16
pop
mov
lea
lcall
push
pushl
data16
popf
xchg
dec
fs
xor
adc
loopne
fists
sbb
xlat
adc
cmp
fidivs
or
aad
rol
adc
push
fstl
inc
add
adc
test
adc
sub
dec
adc
call
aad
jp
fldcw
and
addb
cmp
and
in
loopne
dec
mov
dec
int3
scas
inc
mov
mov
cwtl
shll
dec
std
movsl
jle
fs
cmp
gs
std
lcall
pop
xor
arpl
add
leave
dec
pop
bound
add
sub
dec
test
arpl
inc
mov
push
call
dec
mov
stos
cli
imul
xchg
cwtl
lock
xor
flds
ljmp
icebp
gs
cmp
push
dec
or
add
lcall
mov
mov
popf
das
addr16
sub
call
xlat
cmp
xor
fwait
cwtl
nop
js
jg
push
pop
push
lock
mov
popf
mov
xchg
add
in
and
mov
jns
pop
arpl
mov
and
mov
cli
call
aaa
dec
sub
push
jns
pop
mov
sub
pop
jg
dec
rcrb
hlt
sub
lods
cmp
xchg
clc
mov
shrl
ds
xchg
mov
movsb
jecxz
fisubrl
inc
ret
jae
push
popa
sti
jle
mov
enter
mov
fbstp
sbb
das
sub
mov
sbb
mov
pop
xchg
std
mov
jmp
ret
mov
sub
add
jle
adc
inc
cmp
rcrb
jg
adc
mov
and
out
push
pop
cli
das
mov
loope
mov
mov
sbb
out
push
int3
pop
push
push
cltd
push
stc
hlt
dec
xor
push
in
fwait
movsl
xchg
stos
adc
push
pushf
pop
jg
in
std
mov
fs
pop
add
push
sub
pop
decl
insb
mov
das
sarl
or
mov
xchg
xchg
ljmp
jnp
lods
sahf
xchg
mov
mov
fnstcw
fmull
outsl
std
pop
cli
rcl
push
sbbl
das
cmp
and
bound
fistl
push
outsb
xor
mov
out
cmpsl
cli
sbb
lcall
pop
dec
and
pop
push
pop
xchg
cmp
push
xchg
jae
inc
fcomps
cld
dec
call
cmp
les
jo
ljmp
and
jo
sub
fsubr
test
leave
pop
stc
ret
cld
outsb
dec
dec
insb
or
dec
push
mov
jg
stos
dec
pop
sar
sbb
pop
cmpsl
pop
pop
adc
aad
leave
and
decl
sbbb
fimull
push
aaa
or
incl
cwtl
or
jno
ljmp
xchg
daa
dec
std
lods
call
movsb
jbe
in
or
mov
sub
scas
pop
xchg
pushl
cmpsl
mov
in
xor
daa
ficompl
aaa
and
sarb
subl
lahf
lods
xchg
es
lcall
pop
xor
sub
sarl
dec
sub
jp
push
pushl
pushf
inc
std
mov
lcall
andb
incl
shll
inc
cwtl
or
fdivr
and
mov
and
sub
testb
sub
sti
les
xchg
clc
hlt
jo
jno
mov
inc
inc
ljmp
cmp
int
sub
or
mov
pop
scas
xchg
mov
outsl
clc
add
add
cmc
pop
outsb
or
mov
xchg
pop
in
xor
jp
fiadds
mov
fistl
mov
ljmp
test
std
lods
cmp
or
aam
outsl
pop
loop
jl
lcall
fcoms
xor
and
shrb
test
mov
mov
fucomip
das
cld
xchg
ja
cmp
mov
jno
ja
inc
adc
jmp
xchg
sub
hlt
pushl
adc
adc
xchg
sbb
adc
leave
inc
adc
push
les
cmp
cmp
cli
jp
sbb
inc
test
push
loop
dec
add
imul
push
xor
lds
and
or
xorb
cmp
jle
call
les
out
inc
push
and
xor
stos
call
outsl
icebp
cli
sbb
mov
jmp
lcall
mov
hlt
xchg
pushl
jl
mov
and
ds
ss
xlat
xchg
mov
in
adc
mov
or
test
jae
and
ljmp
call
adc
fstpt
jg
aad
int
jmp
add
inc
xchg
and
mov
xchg
push
push
mov
pop
clc
mov
mulb
push
pop
push
sub
dec
xor
pushl
pop
ljmp
gs
push
jecxz
lahf
push
pop
mov
test
mov
rcrb
call
fsts
sub
andl
mov
cmp
dec
jmp
sub
fimuls
cwtl
pop
outsl
jmp
rclb
pushl
cmpsl
dec
nop
adc
sbb
or
push
jo
js
loop
cmp
bound
push
sti
mov
cmp
shrb
or
mov
test
shlb
push
lods
aas
in
adc
pop
les
or
cmp
sbb
fistps
es
xor
subl
stos
mov
lds
ljmp
icebp
mov
pop
enter
cmp
fcmovb
jl
stos
dec
aas
fisubs
outsl
icebp
xchg
orl
outsb
jne
fisubl
call
mov
out
test
inc
dec
ss
ljmp
cmpsl
pop
jmp
test
lods
test
js
cli
sub
cmc
mov
cmp
or
xchg
ljmp
test
pushf
je
add
nop
jp
jecxz
push
and
fstpl
lods
cmp
rcrl
fs
loop
std
fistpll
mov
jge
cli
sub
xor
sbb
pop
pushf
xchg
cmpsb
insb
lds
xchg
and
sahf
in
js
sbb
fld
mov
and
aaa
sub
sub
jmp
adc
or
sbb
jae
mov
das
std
lods
inc
ret
jae
nop
out
and
inc
jae
mov
pop
or
add
jge
mov
cmp
sub
add
ljmp
add
sub
cli
xchg
cmp
cmp
mov
and
cmp
pop
pop
xchg
xorl
movsb
out
neg
incl
push
jns
xchg
stos
push
imul
mov
mov
sub
aam
ret
mov
aad
lahf
test
inc
jmp
sub
sbb
jg
loop
sbb
adc
test
out
pop
mov
cld
jg
ljmp
and
pusha
sub
out
mov
stos
ds
jg
movsl
pop
mov
je
in
add
jns
imul
push
cltd
jb
mov
xor
dec
pop
cmc
insl
and
fcmovbe
sbb
ljmp
mov
and
push
loop
fldt
sbb
xor
mov
hlt
lods
decl
cmp
mov
cmc
pushf
jo
push
in
mov
ljmp
or
aad
fs
popa
add
sub
or
push
loop
inc
jnp
mov
sub
push
cmc
xchg
fists
test
popa
cwtl
mov
cmpsb
mov
enter
or
fcmove
fistps
sarb
adc
and
cmp
pop
std
pop
jmp
ljmp
xor
cmp
mov
pop
in
jle
push
ljmp
pop
mov
scas
dec
pop
xor
inc
jmp
adc
test
out
out
cmc
mov
orb
je
in
mov
loope
in
enter
fwait
jge
idivb
sub
jae
sbb
test
mov
pop
cmpsb
loop
mov
dec
sbb
test
pop
jg
mov
fstpl
jle
mov
jp
and
lock
push
insb
sqrtps
fisubs
int3
xchg
test
xor
das
xor
jle
jge
addr16
pushf
in
cwtl
cmc
jg
fbstp
push
iret
mov
inc
aam
or
out
in
mov
scas
les
jns
mov
testb
dec
fcomps
test
fisubs
pop
mov
fildl
mov
jp
xor
ss
sub
arpl
and
out
adc
rcl
pushf
je
mov
pop
in
push
or
sahf
cltd
out
mov
aam
cld
call
inc
jecxz
push
popf
adc
xchg
cs
inc
pop
and
sub
lods
push
enter
inc
ds
cmp
ljmp
lret
stos
mov
jbe
pop
add
sub
test
mov
cltd
inc
xor
pop
cli
dec
mov
lods
adc
out
dec
sti
push
popf
fcoms
mov
jmp
jns
or
inc
adc
sub
or
addr16
call
push
popf
inc
fldt
jo
inc
sahf
dec
pop
sbbb
pop
ret
loop
in
pop
sbb
mov
lret
sbb
mov
or
incl
test
lret
aam
in
pop
ss
xchg
adc
cmp
mov
ljmp
fdiv
mov
ss
push
cmc
xchg
push
mov
cli
mov
fucomip
incl
ljmp
xlat
test
adc
test
inc
out
sbbb
xchg
sbb
mov
lea
sbb
stos
incl
rcr
lds
cltd
push
pop
stc
xchg
push
aam
call
push
ficomps
mov
fs
dec
xor
and
dec
ja
scas
sub
std
decl
popf
testl
cmp
jl
mov
push
jecxz
or
inc
std
incb
xchg
lock
cli
inc
leave
xchg
sub
je
adcb
cld
mov
fistps
in
dec
add
mov
test
test
outsb
and
fucom
ljmp
jl
mov
adc
ret
xchg
mov
aad
dec
std
lcall
bound
fs
hlt
not
jmp
jmp
jmp
ljmp
into
cs
gs
push
xchg
push
jl
push
mov
cmp
adc
shlb
push
pop
jo
in
mov
mov
inc
jo
je
into
cmc
bnd
call
insl
stos
push
cmp
mov
jae
sbb
fidivl
pop
push
and
and
call
push
xchg
jecxz
pop
xor
lods
jb
jg
leave
or
jnp
dec
sub
mov
jmp
fnsave
add
ljmp
jne
insb
inc
insb
insb
outsl
arpl
pop
ljmp
mov
add
imul
outsb
insl
popa
jo
imul
outsl
lahf
adc
jae
insl
push
imul
insl
adc
gs
push
push
inc
outsl
fucomi
das
inc
jns
es
je
punpckldq
jae
cmp
mov
adc
fs
push
adc
outsb
mov
bound
or
arpl
jae
fs
dec
pop
dec
jo
out
jg
outsb
sub
insb
je
inc
jns
mov
fs
push
in
and
popa
insb
inc
gs
fcomi
push
add
xor
popa
jb
inc
div
mov
jb
imul
js
aaa
outsb
addr16
ficoml
inc
arpl
adc
pop
lods
outsl
ja
inc
imul
in
mov
push
adc
push
adc
inc
outsl
jne
test
sbb
out
outsb
add
dec
outsb
outsw
jge
popa
fimull
inc
xor
pop
bound
jb
sete
in
dec
outsl
fs
gs
mov
add
or
inc
jp
popa
insl
and
mov
jnp
ss
pop
inc
jne
jb
pusha
lret
push
adc
adc
adc
mov
cmp
popa
insl
jo
jb
adc
mov
popa
cmp
inc
push
pop
mov
shrl
mov
mov
popf
jne
mov
jae
out
xlat
fldl
pop
dec
inc
cmp
mov
daa
xadd
lcall
push
push
std
loope
jnp
jae
ss
dec
push
ss
idiv
jo
dec
jae
jne
bound
xor
sub
inc
cwtl
xor
or
jae
inc
jb
jae
jp
pop
adc
dec
loop
fsubrs
addr16
push
push
adc
ret
inc
insb
addr16
shrl
mov
sbb
js
jl
inc
rclb
loop
adc
dec
adc
cmp
sbb
out
icebp
ja
arpl
ret
fnsave
sub
pop
jecxz
adc
outsb
and
pushf
inc
call
inc
add
dec
add
add
lahf
lret
jmp
add
add
add
add
pop
mov
inc
or
add
add
mov
add
add
lret
add
xor
in
outsl
pusha
pop
push
add
mov
add
adc
mov
push
cld
push
js,pn
or
mov
mov
pop
inc
push
nop
les
sarb
daa
adc
and
outsb
add
daa
loop
fsubrs
ds
cs
neg
shlb
push
or
out
sti
xchg
inc
inc
jb,pn
mov
jnp
dec
lcall
imul
movsb
shlb
dec
lods
jmp
rolb
xor
dec
popa
inc
movsb
xchg
sti
movsl
in
fld
lods
add
xor
or
sbb
add
adc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
inc
add
sub
add
pop
adc
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jns
push
outsb
add
and
dec
add
jb
jo
insb
add
add
add
add
push
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jns
push
outsb
add
and
push
add
data16
push
jns
and
inc
add
insl
add
jae
jae
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
xor
sub
and
add
add
and
xor
xor
sub
and
cmp
xor
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
arpl
jns
push
outsb
add
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jns
push
outsb
add
and
dec
add
jb
jo
insb
add
add
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jns
push
outsb
add
add
js
add
add
add
adc
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jns
push
outsb
add
and
push
add
data16
push
jns
and
inc
add
insl
add
jae
jae
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
sub
and
add
add
and
xor
xor
sub
and
cmp
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
inc
add
rolb
icebp
inc
add
faddl
add
inc
add
or
sbb
sub
cmp
inc
inc
add
add
add
push
inc
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
insl
gs
arpl
