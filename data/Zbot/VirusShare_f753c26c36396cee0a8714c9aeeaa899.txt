mov
and
xor
arpl
icebp
adc
pop
testl
xor
and
mov
pop
aaa
and
out
pop
mov
mov
push
int3
mov
pop
inc
mov
cmp
repnz
dec
xchg
ror
push
mov
or
inc
pusha
rcpps
imul
dec
decl
fldt
push
jl
call
into
and
cs
out
and
dec
jbe
rolb
fstpl
data16
dec
add
mov
popa
push
les
mov
in
sub
decl
cmpb
jb
stos
sbb
push
sub
pop
sub
ss
fidivs
in
decl
das
into
es
inc
pop
outsb
mov
sub
sbbl
xor
scas
cmp
incl
mov
adc
lahf
in
or
jmp
cli
sub
or
jge
mov
decl
int3
push
mov
mov
sub
xor
shlb
push
aas
push
push
xor
cmp
ss
inc
inc
sarl
ret
decl
push
aad
jnp
je
cltd
and
cli
xchg
push
inc
mov
ljmp
das
xchg
sub
adc
mov
fiadds
jmp
jns
mov
sub
fyl2xp1
xor
jmp
adc
dec
pop
cmp
sub
mov
fst
lahf
push
add
lods
hlt
arpl
int3
mov
mov
mov
clc
mov
and
xchg
int
push
xor
pop
cmp
js
repz
jge
cwtl
xchg
pop
gs
mov
loope
leave
pop
xchg
mov
fwait
mov
fidivl
pushl
sarl
cmpsl
in
lds
jno
and
push
movsb
fxch
je
mov
pop
mov
ljmp
lahf
dec
out
hlt
dec
loop
xchg
mov
fimull
hlt
lret
test
push
xor
int3
jge
dec
lcall
lea
sub
jecxz
xchg
sub
out
push
jecxz
mov
xchg
jg
js
ljmp
test
call
loop
sub
adcl
fcomip
jmp
push
into
dec
mov
jmp
nop
push
movsb
mov
mov
mov
adc
js,pt
stos
pop
cmp
push
jnp
fld1
cmp
ret
loope
sbb
inc
bound
or
mov
push
add
or
inc
push
incl
imul
xor
jle
mov
mov
jle
imulb
loope
iret
fmull
xchg
xchg
call
cmc
fnstsw
hlt
jg
jae
xchg
adcb
pop
and
movl
add
sahf
xchg
rcl
cmpsb
pushl
cmpb
cmp
repnz
rclb
fcomip
xor
movsl
jo
cmp
jmp
cmpl
clc
rorl
lret
jno
icebp
sbbb
popf
jns
push
or
adc
xor
adc
jp
out
scas
out
pop
mov
popa
mov
ret
sbb
test
pop
aad
add
in
add
pushf
shll
add
xchg
or
aad
pop
popf
repz
incl
sub
inc
sub
nop
or
add
jae
add
aaa
push
jle
adc
out
popa
shl
decl
lret
movsb
clc
mov
xchg
or
movsb
push
adcl
divl
fcoms
cmp
cmp
loop
mov
mov
and
push
or
inc
out
in
repz
xor
call
imul
jmp
in
xor
lds
test
inc
cli
stc
xchg
mov
inc
xor
insl
push
or
jg
scas
fimuls
add
mov
dec
sbb
cmpsb
sbb
sub
addr16
inc
in
mov
test
enter
mov
decb
and
int3
sub
push
mov
add
lea
jge
in
loop
fdivr
call
dec
pop
rcll
inc
js
in
aad
sbb
pop
cmpsb
subb
in
in
out
decl
cltd
inc
stos
outsl
xchg
push
subl
pushf
fisubl
lcall
arpl
jg
jmp
adc
clc
cltd
lea
into
mov
adcb
lahf
mov
and
lcall
push
shufps
insb
dec
sub
dec
icebp
test
jle
pushl
lods
sub
ret
jnp
pop
mov
imul
mov
dec
int
outsl
jg
decl
iret
push
xchg
jae
sub
or
dec
dec
in
insl
jno
jno
pop
mov
sbb
loopne
cmp
mov
jb
movsb
add
mov
nop
xchg
xchg
rorb
pushl
outsl
and
sti
stos
jge
lock
jbe
aam
ss
adcl
lods
push
push
popf
push
jg
arpl
lcall
ds
add
popa
push
shlb
xchg
dec
lcall
nop
paddsb
mov
incl
mov
stos
ljmp
xor
lds
jmp
mov
mov
ljmp
xchg
int3
flds
dec
pop
icebp
fnstenv
and
push
dec
je
fnsave
aam
outsb
mov
rorb
inc
push
imul
icebp
and
adc
pushl
jbe
sub
and
or
fdivl
mov
gs
fdivr
cmc
fwait
and
mov
sub
adc
cmpl
ljmp
loop
xlat
lea
lods
xor
mov
cmp
or
mov
mov
test
pop
inc
movsb
clc
in
mov
and
or
xor
shll
fnstcw
int3
dec
cwtl
lds
test
repnz
fmull
daa
cmpsb
jl
cmp
sbb
orl
call
add
lret
outsl
pop
inc
cmpsb
repz
add
inc
movsl
inc
mov
repz
incl
pop
ds
xchg
fsts
push
movsl
jecxz
in
xchg
aam
dec
js
shlb
popf
in
xor
pushl
in
jo
jnp
call
dec
fcmovne
pop
or
test
or
lcall
das
shrl
lods
sarl
jle,pn
aam
lea
sbb
pushf
or
lcall
mov
pop
pop
push
jmp
int3
sub
repnz
push
jl
mov
jne
shlb
or
mov
mov
cmp
mov
jp
mov
pop
test
jbe
jmp
imul
push
popa
cltd
push
fcmovnu
pop
mov
inc
or
cmpsb
repnz
mov
xor
movsb
aas
push
pop
shrb
incl
aas
dec
inc
adc
pop
add
push
lret
dec
pusha
movsl
xchg
movsb
pop
cmp
mov
sub
call
push
xchg
push
mov
not
fimuls
cmp
je
pop
iret
inc
mov
call
cmp
imul
dec
hlt
fistpl
out
ljmp
or
in
or
cmp
inc
pushf
mov
sbb
sub
cld
xchg
jns
popf
mov
sbb
lcall
mov
addb
aad
test
sbb
test
lods
jmp
fsubs
push
sbb
and
cmpsb
push
cwtl
clc
into
xchg
cmp
inc
lcall
xor
lods
lock
or
sbb
movsb
jb
xchg
cli
js
sbb
push
int3
xlat
arpl
lcall
mov
xchg
dec
ds
sub
aad
outsb
mov
aad
sbb
lret
aam
sub
rcll
test
cmp
imull
out
clc
pushl
and
pop
push
add
out
add
and
loopne
xor
aad
std
push
cmp
pushf
pop
pop
dec
repz
lds
and
mov
mov
outsb
xor
add
lret
cmp
mov
fisubl
incl
dec
add
lock
jnp
addr16
or
mov
aas
insb
dec
or
lcall
call
jg
loop
fldenv
or
mov
add
push
daa
pinsrw
sti
movsb
popf
dec
mov
mov
dec
inc
push
stos
xchg
das
push
ret
insb
jp
xchg
loop
icebp
push
outsb
xor
lcall
mov
imul
xchg
scas
xor
add
lods
leave
into
das
push
jmp
push
add
mov
push
pop
sub
testl
pop
cli
mov
out
fiaddl
or
pop
push
mov
mov
push
adc
cld
adc
call
pop
and
adc
inc
stc
sti
push
sub
aas
mov
mov
or
jmp
mov
mov
sub
mov
mov
pop
andl
add
orl
add
movsb
jge
jmp
lds
movsb
sarb
mov
test
fs
dec
js
iret
testl
add
cmp
andl
loope
adc
jbe
imul
ljmp
mov
mov
sub
out
or
jo
pop
dec
add
mov
std
into
push
inc
test
je
lds
sahf
loopne
mov
out
cmp
xor
or
xor
pop
std
das
cmp
in
mov
jae
jne
push
and
test
pop
sub
ret
pusha
mov
mov
inc
xor
push
push
sub
sub
mov
add
outsb
andb
jmp
pop
pop
mov
sahf
inc
aas
aas
popa
gs
loope
imul
adc
adc
push
adc
xor
rcr
stc
popf
test
ds
sti
jo
mov
ret
inc
add
out
jl
cwtl
adc
fnstcw
jno
adc
repnz
out
sbb
cli
push
rolb
fists
leave
ja
mov
outsl
mov
dec
mov
dec
dec
jmp
pop
inc
test
dec
adc
and
lods
sub
sub
push
push
dec
and
nop
add
inc
xor
dec
std
add
inc
sub
incl
repnz
pusha
lahf
shlb
mov
jnp
cmp
adc
dec
inc
int
dec
cmpsl
int
sbb
xlat
dec
mov
in
inc
jl
nop
push
xchg
rorb
outsb
fcoml
cmp
sbb
push
scas
add
cmp
stc
cmpsl
jb
mov
mov
cmc
add
pop
sarl
pop
xchg
xchg
pop
les
cmp
push
sbb
jnp
xor
leave
mov
call
incb
and
pop
mov
js
int3
and
pop
loop
ds
int
sbbb
or
clc
fbld
dec
sbb
adcb
testl
adc
ljmp
xor
adc
inc
sbb
lds
mov
addr16
and
pushf
out
hlt
in
int3
clc
adc
lcall
inc
cmc
sub
out
stos
or
mov
dec
xor
fs
jo
push
mov
and
mov
sbb
add
call
nop
mov
adc
int
jg
xchg
add
mov
out
mov
push
cmp
push
xor
fdivrl
push
add
inc
push
roll
aad
repnz
mov
or
test
add
sahf
and
inc
add
xor
push
push
iret
repz
insb
jl
movsb
mov
repz
cmp
repnz
mov
dec
fbld
push
mov
mov
call
cmp
shll
dec
pusha
jle
cmpsl
stc
cmp
mov
in
add
push
sahf
out
sahf
xor
outsb
mov
jns
lock
sahf
push
ss
out
sahf
dec
pop
jp
lods
sarb
in
ds
repz
push
movsb
ret
ds
loopne
or
cmp
jbe
stos
mov
jge
out
out
sub
sahf
out
sahf
pop
jp
scas
ret
dec
repz
sbb
xor
repz
repz
scas
int3
ljmp
sbb
push
data16
out
sahf
sbbb
out
sahf
ja
push
dec
pop
jb
fucom
jns
mov
jmp
out
sahf
out
cmp
js
int
jns
test
fsubr
or
push
cmp
repz
dec
pop
je
stc
cmp
repz
loopne
adc
out
sahf
cmpsl
xor
mov
int3
loopne
or
es
repz
pop
outsb
mov
in
out
sbb
out
sahf
out
data16
enter
push
xor
cmp
repz
fs
test
push
ds
mov
icebp
push
sahf
out
sahf
cmp
mov
in
sbb
xor
cmp
repz
sbbb
lret
repz
sahf
out
sahf
push
jo
mov
repz
add
sbb
inc
repz
repz
js
stos
enter
iret
in
push
cmc
sub
sahf
out
sahf
pop
jp
movsb
mov
jns
or
push
xor
repz
repz
jl
cmpsb
mov
fsubr
add
push
push
xor
cmp
repz
iret
fdiv
push
clc
and
sahf
out
sahf
dec
bound
stos
enter
jns
cli
push
stc
and
repz
repz
push
pushf
mov
stc
cmp
into
loop
or
es
out
sahf
inc
pop
jbe
cmpsb
out
out
fsubr
add
incb
cmp
pusha
je
lods
enter
jns
cli
push
cld
sub
repz
repz
jo
mov
iret
int3
ljmp
jns
inc
bound
test
cmp
out
shr
add
sbb
repz
repz
pop
outsb
mov
loopne
sbb
xor
insb
adcb
jns
testb
repz
repz
inc
pop
jp
mov
stc
cmp
shr
cld
sbb
sub
out
sahf
dec
data16
out
aam
or
sbb
out
outsl
or
push
fs
jbe
sahf
out
sahf
lcall
jns
jge
add
push
sub
sahf
out
sahf
pusha
jb
xchg
test
xor
out
int3
fdivp
add
repz
repz
outsb
iret
repz
adcb
out
cmp
adc
out
inc
pop
push
mov
repz
push
mov
sahf
out
ds
push
sub
dec
jns
out
pop
jo
xchg
cmpsb
repz
out
lret
add
iret
repz
adc
dec
pop
insb
cmp
repz
nop
mov
iret
repz
cld
push
or
out
sahf
out
inc
push
push
sahf
mov
sahf
ja
adc
push
or
push
and
jns
out
ds
pop
push
out
xchg
mov
jns
lret
hlt
add
adc
repz
sub
dec
push
repz
repz
mov
mov
sahf
cmpsl
stc
cmp
or
sbb
ss
cmpb
or
inc
inc
inc
adc
add
call
inc
add
dec
xchg
mov
aas
pushl
xchg
cmc
and
fisubrl
out
and
hlt
std
and
fidivs
test
out
xor
push
sub
sub
or
in
jmp
data16
out
fsub
and
fbld
push
cltd
out
pop
loop
ljmp
jmp
inc
out
sbb
jecxz
cmp
out
lret
scas
ds
add
mov
dec
sarl
incl
mov
inc
popf
mov
stos
sub
sbb
xchg
sahf
dec
ljmp
mov
mov
lret
pushl
int3
mov
in
stc
mov
mov
mov
push
cmp
dec
xorl
inc
xchg
dec
popf
scas
xchg
jo
lahf
mov
aas
pop
jp
sbb
loopne
pop
repz
jg
dec
and
roll
fidivrl
inc
dec
loope
outsl
sahf
out
ja
jo
aas
movsl
das
aad
out
jmp
mov
std
or
into
mov
mov
decl
mov
daa
outsl
clc
fbstp
lret
addr16
imul
mov
dec
mov
mov
testl
mov
add
sbb
hlt
xor
incl
inc
orl
ss
xchg
das
clc
add
mov
push
mov
inc
mov
mov
dec
mov
mov
mov
mov
fimuls
call
fmull
stc
push
fsts
mov
jmp
inc
xchg
neg
jbe
push
mov
mov
push
sbb
fdivrs
mov
pop
dec
jns
int
leave
pop
adc
mov
mov
call
push
mov
inc
sub
dec
test
and
icebp
clc
out
out
and
into
scas
add
inc
pushf
mov
jns
outsl
mov
cmp
pop
adc
incl
fwait
add
mov
dec
xchg
jge
pushl
fistpll
and
movsb
fldenvs
fidivl
stc
out
iret
cmp
xchg
xor
mov
movsl
fwait
and
push
movsb
mov
push
ds
ficoml
and
mov
jb
add
mov
push
mov
pop
mov
ss
out
mov
out
and
mov
mov
mov
pop
xor
xchg
pop
and
sti
mov
mov
xor
dec
mov
mov
and
stos
push
ret
ret
mov
dec
out
lret
add
ljmp
pop
jbe
dec
jne
adc
or
inc
int3
xchg
ss
and
clc
rorb
out
fildll
push
aam
loope
outsl
mov
test
pop
test
cli
outsl
mov
es
and
in
ficompl
add
out
fucomi
mov
dec
fcmovne
mov
mov
iret
xlat
cmp
fcomp
sbb
lcall
idiv
outsl
in
cmp
and
sbb
nop
repnz
sar
sti
mov
ficoml
lods
push
sar
incl
fwait
xchg
jle
fucomip
lods
xor
cmp
mov
dec
adc
dec
in
sarl
mov
bound
push
andl
push
test
lea
push
les
data16
lret
jmp
and
sbb
lcall
adc
cld
pop
out
push
cmp
sub
xchg
cmpsb
mov
mov
std
flds
push
jle
out
mov
loopne
mov
lcall
jle
bound
in
dec
test
pop
cmp
push
fcomi
jg
cmp
push
xchg
jmp
or
fs
sbb
mov
push
pop
ficoms
xchg
sub
mov
mov
fwait
nop
jecxz
fs
in
das
scas
mov
decl
mulb
adc
xchg
sub
scas
das
jns
cmp
leave
mov
lods
sbb
call
idiv
xor
push
lcall
sbb
fwait
push
fcmovnb
pop
test
sbb
cmpsl
fs
in
ljmp
mov
mov
int3
pop
insb
cmpsl
ja
lcall
xchg
lcall
sub
pop
aam
jbe
enter
push
jo
lock
xchg
aas
jp
clc
hlt
lcall
push
mov
in
push
lock
ss
repz
xor
and
push
pop
incl
sbb
fs
xor
cmp
sbb
inc
xchg
lods
in
fcmovnbe
xor
mov
dec
mov
adc
sbb
xchg
mov
fucomip
sub
jle
push
iret
pop
mov
ljmp
xor
das
push
mov
call
outsl
scas
scas
sahf
or
das
rcr
xor
cwtl
loope
es
adc
sub
push
mov
loope
mov
push
sbb
or
clc
xchg
ljmp
xor
pop
jbe
xchg
xchg
mov
adc
ret
inc
jne
idiv
cmp
mov
imul
sbb
in
movsl
lods
xchg
push
pop
push
decl
lcall
imul
out
mov
and
add
fsqrt
pop
fsubl
lcall
andb
lock
hlt
xor
jl
adc
or
insb
in
neg
push
jg
mov
stos
andl
subl
in
mov
pop
into
imulb
push
rcll
fnstenv
jmp
xor
sahf
mov
ret
push
lea
cld
inc
mov
jl
add
xchg
adc
xchg
push
jmp
stos
loope,pn
pop
shl
lcall
test
inc
sbb
lahf
fadds
outsl
fcmovnu
decl
or
pop
and
push
sbb
pop
sub
mov
fsubl
pop
inc
adc
pop
push
mov
es
cmp
mov
jne
pushl
popa
xlat
sub
nop
ljmp
add
jo
jne
dec
gs
pop
xor
decl
jno
inc
outsb
ja
jne
addr16
dec
xor
xor
call
xor
dec
jne
xor
jb
push
aaa
bound
push
push
push
jne
inc
cmp
incl
outsl
imul
push
cmp
jno
xor
cmp
cmp
popa
dec
data16
ljmp
imul
ss
xor
jb
jns
gs
push
push
pop
inc
push
cmp
inc
addr16
jno
std
in
mov
push
push
data16
outsb
ss
dec
jb
xor
jno
imul
xor
arpl
arpl
push
jp
addr16
jne
xor
add
ss
bound
push
push
data16
jp
dec
je
sar
pushl
dec
inc
push
jns
xor
push
inc
insl
dec
arpl
jb
xor
imul
jg
inc
insb
xor
gs
bound
push
dec
push
push
aaa
push
stos
or
imul
imul
incl
mov
xchg
outsl
cmp
add
pop
fs
inc
dec
fistpll
pop
dec
je
bound
dec
xor
push
jp
imul
push
incl
inc
gs
inc
dec
bound
inc
inc
inc
popa
jns
mov
imul
xorb
mulb
xor
fs
jne
mov
jbe
fdiv
fistpl
push
xor
dec
push
ja
dec
addr16
push
inc
sti
idiv
pop
push
jb
js
pop
inc
xor
inc
in
jns
inc
inc
add
sbb
adcb
inc
movsb
roll
daa
lock
int3
pop
dec
repz
xlat
loopne
inc
ds
repnz
dec
jae
fcoms
and
and
shrl
test
movsb
push
or
test
jae
iret
and
pop
ss
pop
cmc
inc
sti
mov
jo
mov
mov
sub
outsb
sbb
sub
mov
and
adc
imul
push
sub
outsl
mov
sbb
sbb
xor
flds
and
inc
mov
lods
aad
rorb
push
jle
xor
loop
loopne
inc
fnstenv
jbe
jne
xchg
dec
dec
mov
push
mov
mov
pop
pop
subl
cmpsb
xchg
push
xchg
adc
outsl
jo
les
jnp
push
std
xor
jnp
std
into
insb
out
dec
mov
pop
dec
push
popf
inc
pop
pop
ds
jbe
js
sub
push
rolb
pop
sti
jbe
adc
mov
pop
adc
cvtps2pi
test
in
mov
outsb
adcb
fisttpll
inc
push
sbb
lock
in
fldenv
jmp
iret
ucomiss
inc
push
in
jo
pop
xchg
loop
xlat
inc
aas
inc
jnp
ret
andb
ss
pop
jbe
sbb
test
outsl
outsb
push
cmp
enter
outsl
and
inc
adc
sbb
mov
es
jb
push
pop
xor
cmp
inc
and
aas
test
scas
leave
xor
push
push
push
mov
mov
pop
push
jo
out
fwait
int
fcomi
sarl
add
mov
nop
lcall
pop
jmp
xor
jns
xchg
ffreep
jl
mov
sti
or
fsubrs
pop
sti
fiaddl
das
jge
insb
les
jle
scas
ds
jnp
dec
jl
call
out
adc
loope
jbe
push
jae
loop
pop
inc
icebp
sti
dec
push
scas
ds
mov
lds
jg
lahf
data16
imul
mov
ja
push
pop
imul
gs
xor
cs
insb
pop
inc
sbb
jg
je
inc
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
out
aad
push
add
pop
jb
dec
outsb
and
notb
and
imul
inc
jb
sbb
outsb
fwait
inc
outsl
arpl
or
pop
mov
subb
xor
inc
outsl
jne
pop
in
std
push
push
outsw
jb
popa
outsb
arpl
sbb
jg
int
push
adc
sbb
jb
cmp
cs
push
fs
push
mov
jbe
mov
cs
ds
ja
rcrl
push
imul
popa
jb
outsl
dec
jne
mov
jns
sub
mov
sub
sub
movsb
mov
add
fildl
pop
arpl
sbb
pusha
rcr
jb
jns
js
push
dec
and
and
popa
divb
rcr
mov
pop
inc
and
cmp
fs
jae
imul
push
lods
xor
push
or
inc
imul
dec
popa
insl
sub
xchg
mov
out
loopne
outsl
insl
mov
lods
mov
fs
jb
scas
shlb
bound
mov
loopne
mov
xor
incl
pop
mov
cmp
jo
sti
cmp
ss
push
outsl
xchg
fisubrl
xor
inc
pop
dec
data16
push
je
xorb
push
out
rclb
cmp
popa
imul
sbb
pop
adc
xchg
cmpsl
lea
push
jns
inc
sbb
loopne
xchg
dec
push
mov
sub
gs
add
jb
jae
int3
mov
mov
popa
addr16
outsl
mov
dec
gs
push
inc
jbe
jo
jae
cwtl
loop
addr16
add
push
cs
outsb
mov
shrl
clc
and
outsl
adc
je
push
jns
sbb
xchg
gs
icebp
pop
pop
aas
and
dec
mov
daa
lret
mov
subl
rorb
inc
lds
inc
shrl
sbb
inc
push
lcall
push
insb
push
dec
bound
repz
ljmp
jno
jb
sub
sbb
scas
mov
in
mov
stos
jecxz
jbe
out
mov
fildll
inc
imul
sub
add
fs
xchg
arpl
or
xor
or
outsl
popa
sub
sti
lods
popl
push
mov
insb
push
sbb
adc
push
aad
sahf
jae
mov
jo
jae
inc
rcrb
cmpsl
pushf
xchg
sub
sub
daa
push
add
int3
add
pop
inc
sbb
ret
add
push
frstor
push
out
in
mov
pop
sbb
lds
les
inc
jo
cs
mov
loop
xchg
dec
inc
mov
test
jo
adc
mov
aaa
or
sbb
or
hlt
es
add
andb
inc
sub
mov
lds
movsb
in
jnp
int3
orb
sbb
fistl
push
xor
inc
imul
pop
inc
insb
js
stos
rorb
mov
pop
movsl
jecxz
shl
mov
idivl
mov
arpl
add
insl
addl
insb
sub
inc
nop
cmp
popa
jo
addr16
dec
adc
jecxz
outsl
pop
mov
inc
cmpsl
push
xchg
inc
or
daa
sub
or
dec
incl
jne
push
ja
decl
sub
sub
mov
test
push
add
sub
mov
add
push
ljmp
adc
nop
inc
add
lods
lret
lcall
inc
xorl
and
adc
jmp
add
inc
add
adc
adc
nop
inc
add
add
sub
call
push
and
test
adc
stos
and
nop
push
add
add
xorl
and
inc
inc
add
adc
adc
nop
inc
add
add
subl
push
push
mov
sub
add
fs
add
nop
push
add
push
cltd
push
decl
push
xorl
lods
mov
push
xorl
and
adc
or
call
addb
mov
test
or
adc
nop
inc
add
add
subl
push
push
push
and
inc
inc
pushl
adc
enter
mov
adc
jmp
or
add
pusha
add
and
add
test
mov
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
add
incl
mov
add
aaa
call
mov
cld
cmp
decl
es
mov
inc
pop
std
incb
hlt
cmc
sub
incl
mov
or
dec
jle
mov
add
mov
enter
addb
addl
push
mov
adcb
cld
jle
add
sbbl
adc
push
outsl
adc
push
pop
loopne
dec
jnp
cwtl
unpckhps
stc
xchg
sbb
mov
xchg
adcb
sarl
sub
nop
lahf
rcrl
sti
incl
add
fiaddl
add
ds
or
add
rorl
pushf
dec
in
in
fstpt
fstl
add
cmp
into
or
jg
add
adc
pusha
add
stos
outsl
push
pop
add
dec
repz
sbb
or
pusha
ds
fidivl
cmp
inc
sub
push
sbb
mov
std
ds
and
jbe
aad
ret
stos
mov
imul
xchg
xor
adcb
push
fstps
roll
pusha
or
insl
pop
sti
pop
std
push
pushl
sbb
gs
push
popl
fstpl
jecxz
mov
addr16
add
int
out
lahf
adc
jnp
add
mov
lcall
pop
popa
or
xor
push
xor
imul
add
adc
push
sub
imul
fldt
iret
mov
test
push
pop
push
add
rcrl
ret
push
dec
shll
mov
xchg
insl
pop
movsl
pusha
or
lcall
add
mov
cs
dec
imul
inc
aad
aas
mov
sti
lock
adc
dec
shll
sarl
das
or
test
or
jns
sarl
dec
xadd
cmpsb
cmc
add
adc
dec
push
dec
jnp
js
sub
mov
roll
in
xchg
sbb
sbb
emms
imul
mov
jae
movsl
xor
sbb
loopne
pop
push
xor
cs
int
in
imul
mov
out
add
js
xor
xchg
ja
loopne
jo
adc
mov
or
jnp
mov
pop
mov
loopne
loope
clc
and
jg
incl
shlb
imulb
and
popa
add
pop
fadds
cmp
loopne
lcall
cmp
cmpsl
sbb
aas
xlat
sbb
cmc
or
pop
sbb
sarl
cmp
jne
xchg
popa
or
in
stos
push
mov
and
pop
or
shrb
and
dec
inc
ja
sbb
dec
sti
jnp
int
cmpsl
stos
outsb
and
movsl
xor
xor
std
sub
cmp
mov
push
filds
lret
push
mov
mov
add
iret
mov
or
or
xor
stos
or
dec
mov
jnp
iret
add
mov
sbb
movsl
sbb
sub
shll
or
sub
pop
divl
sbb
loopne
cmpsl
imul
shl
mov
sbb
jmp
stos
pop
addr16
sarl
pop
stos
data16
add
sar
xor
sub
mov
popf
out
mov
ja
iret
pop
fsubl
lcall
stc
lock
push
mov
pop
xor
push
push
jae
pop
out
imul
mov
ror
pop
lock
sbb
fistpll
sbb
sbb
lahf
add
nop
mov
sub
add
repnz
adc
int
dec
fstps
mov
mov
stos
mov
xor
jo
jmp
outsl
lcall
push
mov
lock
out
aaa
xor
in
cld
mov
std
jo
dec
xor
jg
pop
call
test
or
adc
jno
pop
pop
push
sti
jmp
sarl
jo
xor
imul
jge
setp
mov
xor
add
ljmp
jle
int3
leave
test
aas
mov
rcrl
jo
or
mov
push
shll
pop
pop
ss
push
dec
and
call
add
fisttps
fsubs
popl
push
dec
dec
mov
inc
jo
aaa
lcall
jns
lods
out
dec
xlat
mov
pop
add
or
das
dec
in
or
or
xor
sarb
ljmp
push
enter
push
cld
sbb
stc
cmp
mov
xchg
mov
testb
repz
mov
mov
sahf
lea
lcall
add
nop
fistpll
xchg
xchg
lcall
mov
xchg
rol
mov
mov
cld
in
xor
jg
and
cld
push
jns
testb
cli
cli
mov
iret
iret
jg
fildll
sar
add
call
fadd
scas
test
cwtl
clc
dec
sub
outsl
dec
imul
jg
jg
add
lahf
add
insb
lods
std
mov
add
divl
notl
add
jo
lods
add
jbe
mov
fdivp
add
lods
ljmp
idiv
mov
movsb
test
call
rolb
lcall
lcall
xchg
inc
decl
xchg
mov
fildl
cwtl
pop
cli
add
sar
mov
mov
lock
add
add
cmpsb
mov
add
mov
add
pop
add
sub
mov
add
inc
fidivl
xor
inc
je
cmpsb
mov
adc
add
pop
add
or
insb
fwait
adc
mov
xor
mov
dec
out
cmpsl
imul
mov
test
dec
add
loope
jg
inc
std
dec
rclb
adc
mov
bound
push
adc
xor
mov
fcmovu
decb
add
std
add
mov
add
add
add
push
mov
stc
cld
pop
push
push
and
fucompp
adc
cld
adc
mov
rorb
das
mov
add
fcmovu
add
mov
mov
rcl
cs
into
int
lret
lret
enter
add
jg
cltd
cwtl
xchg
xchg
xchg
xchg
xchg
add
lea
xchg
mov
sbb
add
add
outsl
or
add
incl
nopl
add
xor
sti
and
stc
clc
div
inc
mov
cmc
hlt
lock
lock
cmpsb
add
add
or
aaa
cld
filds
std
push
add
lock
and
add
add
fbld
inc
out
mov
dec
shll
mov
sbb
push
xchg
and
adc
dec
shlb
into
popf
test
jnp
in
sbb
mov
sarb
shl
mov
test
out
xchg
mov
push
lcall
jb
pop
jns
mov
fstps
mov
mov
pop
sbb
xor
mov
lock
clc
jecxz
mov
mov
push
mov
les
incl
push
pop
sbb
add
push
mov
in
inc
mov
pand
adc
shlb
leave
cmc
mov
js
pop
icebp
pop
ljmp
xchg
loopne
jecxz
mov
aaa
cld
out
sub
outsb
es
rcrl
clc
out
jecxz
je
das
xchg
add
push
sbb
sti
add
mov
xor
data16
mov
mov
cli
xchg
mov
jecxz
incl
mov
loop
aam
pushf
cmpsl
int
cmp
adc
ljmp
hlt
mov
out
add
test
loop
inc
lret
repz
add
xlat
mov
mov
add
std
push
popf
add
pop
sub
sbb
pop
std
sbb
sahf
rolb
sub
pop
mov
dec
adc
ret
jg
dec
fiaddl
addl
imul
add
or
sbbl
inc
stos
test
push
add
push
push
sub
jg
add
adc
in
rolb
out
cwtl
adc
les
mov
stos
rorl
add
fimuls
repnz
ret
es
inc
dec
dec
insb
ficoml
call
repz
jb
lcall
add
add
add
adc
call
je
repz
sub
or
stc
cld
aas
push
fisubrl
notb
insl
adc
push
lret
push
pop
lods
imul
add
add
mov
aaa
jg
push
rclb
mov
daa
call
stc
dec
add
iret
push
sub
fisubl
xchg
add
sarl
into
mov
in
decl
lods
adc
push
ss
lcall
getsec
push
or
out
xor
add
hlt
imul
in
pusha
xchg
lahf
cwtl
xchg
push
push
add
cmp
ss
xchg
rol
sub
dec
imul
cs
ldmxcsr
out
mov
fadds
cmpsb
insl
pop
aaa
in
in
and
push
mov
push
outsl
shl
xchg
clc
rcrb
or
repnz
jg
pop
mov
mov
xchg
mov
lahf
inc
push
ljmp
stc
push
push
fwait
sbb
inc
sbb
xor
data16
pop
add
scas
ljmp
pcmpeqb
adc
sbb
outsl
add
or
fcmovnb
inc
add
decl
loopne
sbb
mov
inc
inc
ljmp
outsl
add
mov
imul
dec
stc
imul
in
jmp
push
in
loopne
imul
loopne
ja
or
call
jmp
roll
or
push
fs
or
pop
xor
push
pop
pop
out
loopne
daa
sbb
mov
ss
fcos
dec
jo,pn
push
or
push
pop
or
out
or
call
loopne
mov
fstp
mov
in
adc
stos
lods
loope
lret
push
inc
pop
shrl
or
push
int3
loopne
or
outsl
ficompl
adc
push
and
lcall
jmp
mov
pop
shrb
lods
xor
lahf
add
fcmovnu
jbe
or
or
rclb
or
shrl
jecxz
adc
add
mov
fistpl
test
pop
cs
loopne
daa
or
xor
js
jmp
test
add
fs
adc
mov
and
stos
or
push
daa
pop
ret
rorb
fldt
aas
mov
or
or
mov
mov
cmp
idivl
in
call
ljmp
cltd
aas
outsl
sbb
loopne
ja
loopne
jnp
or
pop
bound
fnstsw
inc
cmpsl
js
and
push
mov
push
mov
lret
sbbb
shll
add
or
pop
outsb
pop
addb
sub
pusha
dec
push
add
mov
in
pusha
xchg
or
cmp
add
mov
push
shll
addr16
loopne
jae
in
std
std
push
loopne
sbb
fwait
cmp
rcr
mov
mov
cmp
adc
xchg
dec
ret
jbe
mov
push
dec
pop
jecxz
push
or
in
loop
cli
xor
sbb
add
pop
sub
mov
mov
aam
seto
pop
jns
js
and
pop
and
loopne
aaa
inc
jnp
cld
or
cmp
loopne
ja
orl
mov
xchg
inc
add
lret
into
scas
sub
in
stc
std
xor
ficoml
or
rorl
fidivrl
adc
int
xchg
insb
shrl
sub
xor
sbb
inc
sbb
xchg
jno
data16
xor
adc
mov
cmp
mov
stos
cmp
loopne
mov
push
mov
ret
xor
jo
lret
jo
push
repz
add
or
or
sub
out
stos
in
push
mov
mov
and
arpl
mov
or
push
push
lock
xchg
cmpsb
jo
shll
scas
or
jo
adc
mov
lock
jo
sbb
adc
fimuls
jo
out
ss
mov
mov
jmp
dec
stos
cmp
jo
xor
fildl
inc
or
lock
fs
push
mov
stos
jnp
cwtl
shlb
xchg
sbb
notb
lcall
or
jo
iret
add
daa
stos
jecxz
shl
loopne
mov
pop
mov
xor
das
nop
push
insb
cltd
shlb
pop
shl
sbb
jo
mov
cmpsl
or
fdiv
out
inc
test
cmp
jnp
xchg
add
jecxz
xchg
xor
sbb
iret
cmp
dec
push
orps
aam
dec
aad
dec
mov
xor
push
lods
loopne
or
or
or
or
jmp
repz
or
jbe
push
movhps
dec
push
xor
negb
fiadds
outsl
fs
pop
addl
jge
lahf
mov
sbb
lock
mov
jl
in
ljmp
adc
lock
and
mov
fcmovbe
push
adc
test
or
fnstenv
test
js
loop
xor
adc
outsl
in
cmp
out
and
xchg
add
push
mov
and
lcall
xor
xor
xchg
sahf
es
mov
sarb
sub
mov
cmp
mov
push
sti
pop
daa
std
add
pop
inc
incb
pop
movsl
push
lahf
adc
out
push
mov
push
incb
push
incb
out
dec
and
dec
mov
dec
movsb
dec
cmp
in
outsl
out
sahf
inc
mov
inc
incb
mov
filds
cld
incb
aas
stos
cmp
adc
inc
cmp
int
stc
aaa
repz
xor
in
xor
icebp
das
cld
int
cld
out
cs
mov
sub
scas
daa
cmpsl
es
xchg
int
and
and
popf
pop
stos
sbb
cld
sbb
int
cld
int
clc
pop
repnz
adc
in
adc
lock
out
decb
mov
or
scas
pop
cmpsb
incb
nop
pop
outsl
int
add
mov
add
pushf
add
in
fdivr
add
scas
push
std
loope
push
std
lret
dec
std
fcoms
insb
cs
ficompl
xor
lret
fwait
cmp
cmc
incb
fists
adc
jecxz
or
and
mov
adc
hlt
std
test
std
fdivrp
pop
std
loop
cld
int
add
xchg
std
mov
pop
cld
test
jg
out
pop
cld
cld
in
cld
fisttpll
dec
cld
test
ds
ds
cld
ret
js
in
cld
fmul
fbstp
mov
inc
cld
mov
aas
cld
cmp
cld
cld
sar
xor
jmp
mov
cld
leave
ret
mov
aaa
es
into
cld
xchg
adc
cld
xchg
pop
cs
outsb
incb
or
cld
sar
adc
call
mov
adc
cld
enter
incb
cld
xchg
add
xchg
out
js
scas
xor
rcr
pop
sti
hlt
pop
sti
repz
add
repnz
pop
cld
int
sbb
adc
add
pop
sti
or
push
sti
pop
int
push
sti
pop
iret
push
sti
pop
push
sti
push
iret
push
sti
sbb
sti
sbb
push
int
cld
int
sbb
cmp
dec
sti
add
pop
iret
dec
sti
pop
dec
cld
int
cld
sti
pop
iret
dec
sti
push
dec
sti
push
iret
dec
sti
push
dec
sti
push
iret
inc
sti
push
int
inc
sti
dec
iret
inc
sti
dec
inc
sti
dec
iret
inc
sti
dec
inc
sti
inc
iret
inc
int
cld
int
inc
inc
sti
inc
iret
aas
sti
inc
ds
ds
cmp
int
cld
sti
cmp
cmp
aaa
cmp
xor
cmp
xor
aaa
sti
xor
cld
int
ss
xor
xor
sub
xor
daa
iret
xor
int
and
sti
and
das
sti
and
sti
pop
iret
sub
rcr
sti
sbb
sub
sbb
sub
pop
shrb
sti
push
iret
daa
sti
adc
es
adc
and
adc
and
adc
sti
or
jo
repz
and
fs
arpl
repz
push
cli
in
inc
cli
aaa
jg
mov
adc
cli
fdivrp
cmp
fdivr
cmp
fstpt
cli
aaa
jg
stc
cmp
fnstcw
cli
fdivr
aaa
cli
xlat
ss
stc
xor
aaa
jg
cli
aam
xor
shll
cli
sar
xor
shll
cli
sar
das
cli
iret
aaa
jg
aaa
cs
into
stc
sub
int3
stc
sub
lret
sub
lret
jg
stc
sub
leave
sub
enter
es
stc
and
aaa
jg
cli
mov
sbb
cli
mov
sbb
mov
sbb
mov
pop
cli
mov
push
cli
mov
cli
mov
aaa
jg
stc
adc
mov
cli
mov
adc
mov
cli
mov
adc
mov
cli
aaa
jg
cli
scas
stc
push
cli
scas
or
stc
lods
sti
xor
lods
fcoml
push
mov
scas
adc
stos
mov
stc
test
stc
test
push
stc
cmpsl
into
stc
cmpsb
adc
movsl
fcoml
push
jle
movsb
adc
mov
push
stc
mov
nop
stc
mov
fimuls
std
dec
stc
cld
mov
cwtl
adc
sti
stos
stc
cli
adc
jno
jno
adc
clc
adc
idivl
cmc
jno
jno
stc
hlt
adc
repz
stc
outsl
adc
icebp
jno
jno
fdivr
lock
stc
mov
stc
iret
adc
jg
xchg
stc
mov
sti
cmp
lret
mov
mov
aaa
jg
stc
mov
xor
lds
xor
les
stc
ret
adc
stc
ret
rcll
stc
rcrb
stc
mov
stc
mov
sub
mov
repz
adc
stc
leave
sti
sub
int
stc
mov
es
mov
stc
enter
sbb
and
mov
and
mov
stc
mov
push
stc
shrl
out
adc
je
sar
fsts
sbb
jmp
stc
ljmp
jno
loop
in
adc
stc
fiaddl
stc
out
cmp
adc
stc
in
stc
jecxz
adc
loop
aaa
jg
mov
loope
psubw
sti
push
stc
rorb
mov
je
stc
or
fmull
sti
or
in
stc
sar
push
stc
aam
stc
call
add
pop
jne
stc
sar
add
add
fmuls
stc
aad
cmp
jns
pop
clc
mov
cld
clc
jbe
pop
clc
jne
pop
clc
test
jae
jle
aaa
jg
clc
jno
push
clc
push
push
clc
jo
push
clc
jp
clc
ljmp
mov
push
dec
clc
push
cld
dec
clc
push
cld
dec
ljmp
dec
clc
outsl
cld
dec
clc
test
xor
inc
clc
xor
inc
clc
dec
cld
inc
clc
xor
ds
outsb
cld
cmp
clc
insb
cld
cmp
imul
clc
push
cmp
imul
aaa
clc
addr16
pushl
clc
data16
xor
clc
fs
xor
arpl
xor
cld
xor
popa
cld
xor
pusha
cld
das
clc
pop
cld
add
add
cs
pop
cld
sub
pop
cld
sub
lret
dec
sub
sub
pop
cld
daa
clc
push
cld
es
push
cld
push
clc
dec
cld
sbb
clc
fwait
add
clc
dec
cld
sbb
fcompl
clc
sbb
ss
decl
pop
clc
inc
cld
push
clc
inc
cld
adc
adc
add
add
adc
adc
inc
cld
adc
idiv
dec
psubb
clc
ds
or
clc
cmp
cld
or
cmp
or
cmp
or
clc
cmp
pop
clc
aaa
cld
push
clc
ss
pop
testl
pop
idiv
ficompl
pop
neg
fcompl
push
std
ficompl
pop
fcoml
pop
fcoml
pop
fcoml
pop
fcoml
fcoml
fcoml
popa
fcoml
push
pop
fcoml
push
fmull
push
faddl
fldl
lahf
fldl
lcall
test
push
loop
cmp
idiv
fnsave
test
fnsave
imull
fidivs
imull
idiv
push
in
and
idivl
not
frstor
not
frstor
neg
frstor
not
fstl
idiv
mov
imull
add
outsl
fiadds
imull
add
fiadds
imull
neg
fistpl
idivb
ficompl
push
push
insl
ficompl
div
fistpl
div
fistpl
div
fistl
sbb
push
div
fistl
mov
out
ficoml
ficoml
imul
ficoml
test
adc
inc
fmull
testb
pushl
testb
testb
mul
fimull
data16
test
or
rcr
pop
idiv
dec
incl
fistps
std
fistps
pop
cmc
cli
fistps
clc
jg
pop
cmc
and
neg
push
cmc
cmc
fists
jmp
push
cmc
in
fists
push
cmc
fcos
call
fists
fcmovu
dec
cmc
lods
mov
stos
fimuls
stos
fimuls
fimuls
test
dec
cmc
in
jmp
fimuls
movsl
fiadds
fiadds
filds
faddl
sar
inc
cmc
aad
jg
cmp
movsb
fidivrs
cmc
mov
fidivrs
cmc
mov
fidivs
fidivl
cmc
decl
xor
xor
xor
push
fisubrl
cmc
out
cs
out
sub
cmc
loop
sub
loope
sub
int
sub
int3
fbld
push
fsubs
aas
fisubl
cmc
dec
fisubl
cmc
xor
and
push
jg
loope
cmc
sbb
cmc
push
cmc
push
ficompl
inc
ficompl
cmc
insl
mov
fistps
cmc
push
ficoml
cmc
dec
ficoml
cmc
inc
ficoml
add
adc
pushf
fsts
cmc
cltd
fsts
cmc
lcall
fisttps
loopne
fisttps
fmuls
cmc
call
cmc
xchg
cmc
mov
flds
in
pop
popa
push
icebp
flds
ss
filds
cmc
in
add
data16
ret
lcall
sar
hlt
jle
hlt
mov
jg
mov
hlt
push
cmp
hlt
mov
hlt
pusha
cmp
mov
adc
xor
push
xor
pop
fnsave
hlt
sub
neg
sub
out
daa
ja
dec
hlt
jl
hlt
and
pop
fldl
hlt
pop
push
repz
lcall
repz
cli
push
repz
sbb
repz
sbb
sub
sbb
sub
sbb
sub
sbb
sub
call
repz
cli
push
repz
adc
repz
adc
and
adc
and
adc
and
adc
and
decl
repz
cli
push
repz
cli
or
repz
or
sbb
or
sbb
or
sbb
or
sbb
incl
repz
cli
push
repz
cli
add
repnz
icebp
pop
repnz
icebp
pop
repnz
icebp
pop
repnz
icebp
pop
repnz
icebp
jg
lcall
stc
icebp
pop
repnz
icebp
push
repnz
push
repnz
push
repnz
repnz
icebp
push
repnz
mov
repnz
push
add
push
repnz
dec
repnz
icebp
dec
repnz
icebp
dec
repnz
icebp
dec
repnz
icebp
dec
push
jmp
dec
repnz
bnd
icebp
inc
repnz
inc
repnz
inc
repnz
inc
push
jecxz
inc
repnz
inc
repnz
inc
repnz
aas
repnz
ds
cmp
repnz
cmp
incl
icebp
cmp
cmp
fyl2x
cmp
fdiv
aaa
repnz
icebp
ss
icebp
xor
pushl
aam
xor
shl
xor
shl
xor
shl
xor
shl
das
repnz
icebp
cs
icebp
sub
ljmp
int3
icebp
sub
lret
icebp
sub
lret
repnz
icebp
sub
enter
icebp
es
icebp
and
jmp
repnz
repnz
repnz
icebp
sbb
repnz
icebp
sbb
mov
lcall
repnz
icebp
pop
repnz
push
repnz
adc
repnz
adc
mov
adc
mov
decl
repnz
icebp
push
repnz
icebp
or
repnz
icebp
or
stos
icebp
or
stos
icebp
or
test
icebp
incl
repnz
icebp
push
repnz
icebp
pop
icebp
into
into
pop
icebp
int
pop
icebp
int3
into
pop
icebp
lret
into
pop
icebp
lret
icebp
leave
into
lcall
enter
into
push
icebp
into
push
icebp
vandps
into
push
icebp
ret
into
push
icebp
ret
icebp
ror
call
ror
icebp
mov
into
dec
icebp
mov
into
dec
icebp
mov
into
dec
icebp
mov
decl
mov
into
inc
icebp
mov
inc
icebp
mov
inc
icebp
mov
inc
icebp
mov
inc
icebp
mov
inc
icebp
mov
incl
mov
aas
icebp
scas
into
ds
scas
into
cmp
icebp
lods
into
cmp
stos
into
cmp
stos
into
cmp
test
cmp
test
aaa
icebp
cmpsl
into
ss
cmpsb
into
xor
icebp
movsb
into
xor
mov
into
xor
mov
pushl
icebp
mov
into
cs
sahf
into
sub
icebp
pushf
into
sub
out
sub
data16
out
sub
sub
daa
out
es
fldcw
and
out
and
and
and
pop
out
push
out
sbb
insb
ss
sbb
sbb
sbb
sbb
fwait
int
out
pop
out
push
out
adc
mov
out
adc
adc
xchg
into
psllw
into
or
icebp
or
icebp
jle
or
jnp
or
jns
or
jb
or
jno
pop
and
andb
push
adc
add
ja
dec
in
push
mov
lods
incb
lods
incb
xchg
pop
filds
pop
jns
out
pop
pop
pop
pop
pop
out
sahf
out
push
push
push
push
jns
lods
lahf
push
testl
push
mul
jns
out
repz
int
jns
in
in
add
scas
cmp
repz
scas
fisubrl
rep
fsubrs
cmp
fisubrs
repz
jns
sahf
push
rcrl
ficomps
xchg
cld
ror
lock
fbstp
aas
jns
repz
outsb
push
insl
push
mov
sahf
out
imul
imul
js
out
data16
arpl
gs
sahf
out
push
fisubs
popa
repz
repz
shlb
push
xchg
iret
repz
push
xchg
push
xchg
push
xchg
lcall
nop
decb
cmp
jns
dec
push
sahf
dec
popf
iret
repz
dec
pushf
dec
fwait
dec
lcall
dec
cwtl
inc
pop
cmp
repz
inc
xchg
inc
out
inc
jns
daa
daa
aas
ds
sahf
out
mov
mov
sahf
out
sahf
mov
xchg
xchg
jns
out
test
test
out
xorb
xor
xor
jle
jns
out
jge
jl
jnp
jns
out
jp
jns
sahf
out
sahf
js
pop
sbb
out
pop
sbb
pop
idivl
repz
push
call
sahf
mov
mov
sbb
mov
in
test
hlt
inc
pop
stc
mov
fcmovb
adc
les
pop
lret
jbe
and
lock
ret
jno
ror
jmp
pop
sti
sbb
pusha
movsl
jle
fwait
push
imul
lods
jge
int3
xchg
test
lcall
mull
dec
jb
outsl
inc
add
dec
popf
sbb
mov
mov
pushl
scas
enter
lock
jl
bound
cmpsb
pop
and
incl
push
jl
and
rol
mov
and
js
rorl
and
jmp
dec
mov
inc
loop
mov
aas
cltd
call
adc
imul
fs
decl
icebp
adc
psubsb
jp
fsubrl
cld
cmp
aam
test
cltd
jge
sti
std
nop
inc
and
cmpsl
xchg
xchg
xchg
mov
jmp
xor
lcall
jmp
outsl
mov
pop
outsb
mov
dec
cmp
xchg
xor
leave
or
in
fisttps
pushl
cwtl
push
iret
je
sbb
mov
xchg
xor
lcall
dec
loop
inc
int3
into
push
insl
into
or
int
int
int
int
int
dec
repnz
int
int
rcrl
fnstcw
jnp
mov
fiaddl
mov
jmp
dec
inc
ljmp
subb
out
stos
insb
insl
pop
cmp
mov
xchg
aad
adc
stos
decl
leave
gs
sbb
cli
fwait
int3
xchg
int3
mov
or
int3
jae
imul
int3
pop
int3
push
bound
mov
cwtl
les
stc
cmpsl
adc
dec
adc
jle
test
in
push
fcmovne
ror
add
lret
mov
lret
mov
and
sub
mov
out
sbb
mov
add
mov
lret
sub
and
sbb
adc
or
add
sti
lret
jmp
sti
rcl
je
inc
pusha
mov
dec
dec
xor
sbb
dec
lret
jae
ljmp
arpl
pop
lret
dec
lret
cmp
or
fwait
mov
inc
imul
arpl
or
test
lcall
mov
ret
leave
mov
leave
mov
leave
inc
leave
aas
arpl
scas
clc
dec
adc
lods
test
push
daa
sub
mov
or
aas
sar
jg
push
jmp
iret
add
mov
scas
into
add
test
mov
iret
sti
mov
and
xor
mov
pusha
les
and
ret
mov
clc
inc
xchg
ret
pop
ret
cmp
pop
inc
sub
add
jo
insl
andb
sbb
xchg
push
ss
cmpsl
rcl
rorb
shlb
adc
add
addb
jmp
adc
dec
and
xorb
or
out
in
pop
test
iret
push
iret
into
ror
call
lods
into
cmpsb
into
push
into
jle
int
cltd
xor
rcll
xor
div
ret
cmp
mov
out
in
lret
lahf
lret
mov
or
lret
jno
fnstcw
and
mov
xorl
pop
pop
xor
daa
mov
leave
repnz
in
aas
cld
leave
out
loopne
shrl
leave
pop
leave
dec
inc
add
cs
and
and
jmp
mov
enter
enter
enter
outsb
imul
dec
dec
sub
or
mov
xchg
mov
mov
call
lds
fadd
mov
movsl
les
sbbb
push
xor
int3
jmp
mov
ja
cmp
xor
cli
ret
jmp
ret
mov
inc
sub
shrl
jb
dec
pop
callw
ficomps
mov
jp
jb
ljmp
rcrl
roll
ret
andl
nop
inc
aam
rclb
ds
mov
call
add
fmulp
jnp
je
pop
lret
adc
pop
lret
ror
lret
xor
adc
cmp
int
pop
mov
testb
fidivs
adc
or
inc
icebp
clc
inc
rol
lds
xor
orb
add
sahf
aaa
stc
mov
lods
ljmp
cmp
shl
xchg
sub
adc
into
ret
push
ret
xor
sbb
add
pop
inc
cmpsb
sub
call
imul
mov
sti
inc
inc
hlt
imul
orb
rol
pop
shlb
in
incl
clc
inc
cwtl
lret
pop
jns
out
and
aad
xor
clc
int3
lahf
int3
fs
or
rol
sti
rorl
and
lock
or
lods
inc
decl
pop
or
inc
inc
cmc
hlt
ret
pop
cmp
jmp
jmp
in
loop
loopne
test
sbb
fcom
aad
rcl
roll
lock
inc
ret
mov
test
push
in
call
inc
movsb
mov
aas
test
pushl
jb
jg
jge
jnp
jns
ja
jne
jae
jno
outsl
outsb
ljmp
imul
data16
pusha
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
decl
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
aas
ds
cmp
ss
xor
pushl
ljmp
sub
es
and
sbb
push
adc
call
adc
femms
or
or
push
add
add
and
addb
lcall
xchg
or
lahf
mov
mov
mov
mov
mov
add
scas
lods
jbe
test
movsl
adc
adc
xchg
add
sbb
add
add
add
add
sbb
add
add
xchg
add
add
add
add
inc
inc
sti
ljmp
cmp
add
add
sub
cld
adc
and
jg
add
mov
sbb
and
adcb
add
loopne
incl
addb
lea
sbbl
mov
rorb
jg
pusha
adc
push
fildll
fdivr
add
in
add
cld
inc
cmp
out
fildl
adc
mov
mov
aas
add
adc
mov
inc
shlb
pushf
mov
pushf
sahf
add
rcrl
mov
lcall
call
jle
mov
xchg
add
xchg
mov
mov
decl
rorl
lcall
rclb
mov
or
push
adc
mov
les
cld
je
inc
invd
inc
inc
add
pop
inc
hlt
mov
stos
scas
adc
into
ror
add
scas
mov
add
adc
mov
popl
mov
shl
xchg
orb
repnz
add
iret
add
inc
fiaddl
inc
add
ret
mov
push
orl
sbb
adc
cld
in
fcmovb
adc
mov
pop
popl
add
add
mov
pop
add
inc
add
fisubrl
mov
mov
imul
lods
pushl
sub
cli
add
or
add
mov
xchg
and
push
mov
das
clc
fistl
int3
or
sbb
add
xorb
outsl
dec
mov
mov
pusha
add
test
push
lea
mov
scas
and
pop
xchg
pusha
push
lcall
fstpt
arpl
stos
add
and
pusha
xchg
rol
pushl
mov
or
cwtl
rcrl
ret
xchg
jg
add
xchg
lcall
sbb
mov
or
pusha
or
and
das
js
loopne
xchg
and
popa
or
pusha
add
les
jg
add
jmp
scas
mov
int3
push
adc
decl
loop
loope
loope
xor
mov
loop
xor
sub
adc
xchg
sahf
xchg
lcall
add
imul
jb
jne
ja
jge
add
pop
inc
ret
pushl
ja
add
outsb
inc
cli
std
call
movsb
jecxz
fwait
es
test
lods
movsb
test
mov
jmp
pop
rcl
aad
repnz
out
jmp
add
add
sbb
or
add
xor
adc
or
loopne
movsb
mov
std
adc
push
push
inc
or
aaa
and
lcall
inc
pop
pop
push
test
movl
std
loope
rcl
loope
rol
cmc
xlat
add
std
sbb
int3
out
rcr
lret
rcl
stc
sti
out
in
clc
fwait
sbb
adc
push
adc
pop
xor
push
sbb
add
ljmp
ret
push
push
sbb
add
inc
inc
inc
dec
fisubrl
aad
push
xchg
sbb
adc
or
inc
cmp
add
xchg
pop
push
sub
sbb
or
dec
sbb
std
fwait
push
sbb
or
push
dec
dec
dec
dec
add
aam
mov
out
xlat
ror
int3
and
and
cmp
cmp
fcomip
lcall
jp
add
dec
gs
popa
jo
pop
je
or
push
or
add
hlt
aaa
cld
adc
cmp
add
cli
sbbb
dec
test
ljmp
dec
mov
lods
stos
mov
jmp
cltd
nop
mov
add
mov
xchg
xchg
xchg
popa
pop
sub
lock
insb
sub
cmp
aas
add
pusha
add
nop
push
sbb
pop
sbb
jmp
decl
sbb
or
or
add
mov
pushl
mov
js
add
insl
insl
and
incl
incb
lcall
sahf
add
add
lds
lcall
jg
ja
pusha
ja
jno
lcall
add
push
outsb
push
popa
imul
jl
imul
inc
pop
add
imul
pop
dec
out
jo
call
mov
cld
std
add
mov
sti
ljmp
movsb
loope
nop
in
loop
lahf
incl
in
mov
adc
lcall
decl
add
jmp
mov
mov
mov
mov
cmc
cld
call
incl
sti
inc
or
dec
dec
dec
add
pop
inc
inc
pushf
mov
cmpsl
mov
movsb
lcall
in
mull
out
mov
mov
mov
test
or
repnz
push
push
add
inc
pop
inc
call
jg
mov
hlt
lcall
sbb
pop
out
in
add
ljmp
add
decl
icebp
mov
mov
mov
pop
add
pop
inc
push
sbb
mov
pop
pop
dec
dec
inc
add
dec
dec
inc
dec
dec
or
or
je,pt
add
addb
mov
mov
repnz
loopne
in
loopne
loopne
out
loop
icebp
jecxz
cmc
call
pop
xchg
ljmp
in
or
or
add
jg
mov
adc
sbb
or
or
das
aaa
add
fbld
ljmp
sub
and
daa
sub
and
jle
movsb
mov
mov
mov
stos
mov
movsl
mov
stos
mov
mov
sbb
sbb
or
movlps
adc
add
push
mov
cmpsl
mov
ja
cmpsb
xorb
mov
mov
cmpsl
movsb
aaa
sub
add
shl
jmp
jg
pop
icebp
jecxz
loop
cmp
div
out
jbe
push
jb
outsb
push
outsb
jp
scas
clc
ljmp
outsl
push
jle
addr16
imul
push
js
jl
jno
scas
ret
adc
mov
mov
cld
mov
pop
pop
pop
dec
pop
jae
pop
push
push
jge
inc
ss
pop
loope
push
std
inc
add
cmp
aas
xor
and
dec
pop
pop
push
push
inc
push
js
dec
dec
inc
inc
dec
pop
incl
pop
inc
push
cmp
stos
stos
mov
xchg
test
mov
dec
mov
adc
adc
sbb
in
ljmp
andb
repnz
pop
xchg
fwait
xchg
jb
push
gs
pop
pop
dec
pop
jmp
inc
inc
push
pop
pop
inc
push
icebp
add
dec
pusha
jno
fs
pop
loopne
les
jg
or
inc
push
je
gs
jmp
mov
aad
and
jmp
jecxz
idiv
stc
mulb
jg
loopne
ljmp
dec
and
cmp
add
es
hlt
decl
add
cmp
cmp
mov
mov
pop
add
cs
adc
inc
insl
repnz
jp
cld
in
jecxz
cli
aaa
mov
stc
ret
jae
addb
into
je
mov
mov
sbb
push
add
sbb
in
adc
inc
ficoml
inc
fldl2e
int3
rcl
add
lret
sar
or
sysenter
or
jmp
sbb
mov
jecxz
xchg
ss
loopne
cld
mov
mov
mov
out
lods
hlt
inc
mov
outsl
mov
xlat
add
ja
insl
inc
imul
push
std
outsl
inc
fildl
jmp
clc
lret
ficoml
loopne
or
add
insb
data16
data16
sbb
dec
ss
mov
outsl
push
pop
pop
push
or
or
or
dec
pop
dec
xor
outsb
dec
pop
imul
jns
add
xchg
hlt
mov
lcall
in
aas
pop
test
stc
mov
mov
movsb
add
cwtl
sti
fwait
pop
addb
cltd
addb
lcall
test
inc
cmpsl
lods
mov
scas
adc
pop
lock
inc
jp
shrb
add
in
cs
ja
fistpll
into
adc
xchg
ret
pop
inc
rolb
scas
mov
incl
movb
mov
pushf
fwait
decl
jo
inc
dec
pop
xor
or
cmp
xchg
xor
or
aas
xor
lock
xor
sbb
or
add
xor
rcl
add
and
inc
xchg
xchg
xchg
cltd
nop
nop
rcrl
stos
lods
negb
mov
mov
sbb
fistps
cld
stc
loop
out
xchg
clc
mov
scas
in
js
lods
push
mov
ret
mov
rcl
aam
lret
push
add
jno
fcmovbe
cld
into
icebp
cmc
leave
fmulp
mov
jg
std
in
cld
std
je
stc
out
icebp
add
add
movsl
push
add
cmp
scas
test
inc
bnd
popa
imul
jae
call
std
xor
add
push
add
inc
push
push
dec
dec
add
dec
dec
push
push
dec
adc
mov
inc
insb
inc
push
inc
adc
jl
jg
imul
add
lea
mov
push
jmp
inc
push
pop
mov
adc
jmp
xor
incl
sub
and
mov
test
ja
jo
outsl
outsl
xor
pop
sbb
inc
inc
add
pop
inc
insl
push
inc
dec
add
outsl
cli
jmp
push
dec
dec
dec
lcall
inc
dec
pop
pop
inc
dec
pop
add
jno
push
push
jg
xchg
loopne
mov
inc
jnp
outsl
inc
jns
pusha
push
fsubrs
sar
adc
push
es
and
fwait
or
pop
mov
inc
dec
add
jg
push
inc
push
mov
sub
sbb
test
dec
insl
jb
data16
lcall
inc
inc
inc
cmp
adc
pop
push
cmc
mov
lea
cli
ja
xchg
jp
cmp
and
cmp
xor
push
adc
mov
icebp
hlt
adc
add
adc
adc
add
cmp
jmp
cmp
and
or
and
addl
mov
add
aad
incl
xor
aas
xor
xor
mov
jp
push
mov
and
and
es
push
clc
dec
sub
push
rcr
add
mov
add
addb
cltd
mov
outsl
incl
rorb
and
xchg
inc
xor
add
cmc
outsl
clc
pop
pop
adc
add
sbb
adc
push
jno
jg
ljmp
push
nop
xor
rol
ret
add
inc
cmc
cmc
call
fcomip
fcmovnbe
ljmp
loopne
loopne
in
in
adc
xor
stos
push
fidivrl
push
cld
incl
push
inc
pop
push
pop
and
inc
adc
or
aaa
insb
push
ja
js
jne
data16
stos
mov
cmc
loopne
fsubp
repz
loopne
ljmp
add
sbb
pop
incb
mov
dec
xchg
inc
pop
pop
jo
mov
fildll
dec
inc
dec
add
xchg
fwait
mov
nop
call
enter
mov
or
jb
add
mov
or
adc
add
cmc
outsl
mov
test
and
rolb
pop
push
mov
lret
xchg
testl
fmulp
enter
lock
xchg
nop
into
nop
icebp
adc
out
fistps
mov
dec
dec
inc
xor
cmpb
cmp
dec
lock
out
std
cli
mov
mov
ret
mov
add
adc
push
adc
dec
sbb
dec
push
in
out
xchg
inc
xchg
mov
xor
mov
aad
and
or
icebp
add
or
das
sar
pop
dec
push
sub
cmp
sbb
fsubs
and
xor
xor
les
cmp
sbb
cmp
das
rol
loop
in
out
cli
lods
cs
into
add
ljmp
mov
cmp
sbb
or
jno
add
push
add
push
clc
dec
dec
sbb
sbb
add
sbb
or
aam
inc
jge
push
push
or
add
loopne
ljmp
aaa
outsb
jne
jae
inc
dec
scas
stc
enter
clc
add
mov
je
jmp
xchg
ljmp
xor
pushl
add
and
pop
add
sub
or
sbb
xchg
mov
mov
mov
mov
in
and
lret
ret
mov
inc
int
lret
add
push
jae
es
mov
std
popa
jge
sub
mov
ljmp
sahf
mov
mov
push
dec
pop
add
xor
pop
or
add
jl
aaa
add
arpl
and
enter
add
xor
mov
fmull
pop
ret
dec
and
outsl
clc
lcall
push
dec
adc
xor
inc
leave
add
fmulp
fxch
stc
jmp
rclb
fcmovne
jecxz
jmp
xchg
add
rcr
enter
jg
into
int
ffree
mov
mov
jg
das
pushf
enter
add
dec
jo
imul
and
jle
insl
mov
jns
sahf
movsl
cmpsl
mov
negb
lods
push
movsl
adc
mov
in
outsl
mov
fimull
xor
ret
ljmp
mov
pop
into
pop
add
pop
push
push
dec
adc
mov
enter
pusha
inc
sub
inc
outsl
dec
dec
out
cli
mov
dec
xor
cmp
jl
jnp
fwait
rcrb
ljmp
ss
decl
mov
pushl
lret
cltd
cmc
fcomp
rcl
add
ret
push
inc
divb
incl
subb
mov
mov
mov
mov
cwtl
mov
xchg
adc
jg
push
xchg
and
add
mov
out
jg
mov
mov
mov
scas
std
push
stos
sbbl
pushf
xchg
push
faddl
aas
xor
fisubrl
aas
sub
cld
jl
xor
scas
mov
scas
cmpsl
add
lcall
mov
or
lcall
push
sbb
addb
lock
jb
jb
jo
jp
jle
jge
pop
push
jecxz
je
jl
shlb
bound
push
movsb
sub
bound
outsl
insb
add
add
sbb
pushf
ror
cltd
loope
mov
mov
mov
fmul
xlat
test
add
xadd
ja
std
call
push
push
addl
jg
data16
inc
push
jb
std
fcomip
jns
jae
dec
addr16
push
insb
push
imul
mov
imul
pop
pop
add
jb
dec
pop
dec
ljmp
jno
push
push
xor
dec
pop
jbe
inc
inc
dec
adc
or
daa
rcll
mov
incl
mov
xchg
mov
add
jo
je
insl
jg
dec
je
bound
pushl
imul
inc
rorl
arpl
push
loop
mov
test
test
or
loope
inc
mov
movsl
scas
mov
hlt
mov
repz
pushl
lahf
mov
add
mov
addl
cmp
or
sbb
cmp
add
add
mov
cmp
xor
daa
add
or
xor
xor
cli
jmp
sub
xor
and
add
push
pop
pop
rcrb
jg
or
mov
mov
stos
test
movsl
mov
or
sti
cmpsl
cmpsl
mov
add
mov
ffreep
addl
xlat
out
ljmp
stos
test
xchg
fadds
fstpl
mov
in
div
lock
xchg
jmp
test
test
cmpsb
mov
adc
inc
outsb
outsl
jns
cmp
call
jb
bound
andb
pusha
popa
data16
bound
insl
insb
popa
jns
ret
dec
incl
pop
dec
push
push
dec
adc
add
or
incl
pop
pop
dec
inc
or
push
dec
push
inc
cmp
add
xor
cmp
sbb
adc
cmp
and
adc
push
and
es
call
lret
and
or
add
jb
or
mov
orb
or
sbb
sbb
dec
add
add
jecxz
adc
ss
icebp
icebp
stc
ret
ljmp
repnz
sbb
div
push
repnz
shl
scas
cli
aaa
scas
fwait
lret
fcmovu
enter
jl
rcl
fcompl
mov
nop
int
mov
fadd
ret
mov
mov
aaa
std
ja
push
icebp
mov
mov
inc
jle
mov
idivb
out
sahf
cltd
mov
rolb
xor
cld
call
xchg
sbbb
pushf
lret
jp
push
enter
and
je
dec
add
jno
and
jnp
jbe
ret
or
jo,pn
ja
fs
adc
or
jg
arpl
inc
push
push
add
push
add
add
inc
inc
inc
add
jge
lock
sbb
aas
jo
push
adcb
out
sub
add
push
mov
test
test
js
insb
inc
mov
insb
push
jns
jp
fs
in
das
sbb
imul
incl
cld
add
sbb
test
mov
inc
inc
inc
add
arpl
ljmp
dec
adc
lahf
mov
stos
mov
mov
popa
add
or
or
add
jbe
jbe
shll
jo
push
pop
add
xchg
add
cld
dec
pushl
inc
push
add
add
mov
pop
jl
test
jg
mov
cld
jnp
or
outsb
pop
js
pop
insb
arpl
jmp
movsb
test
sbbl
add
pop
addr16
adc
mov
inc
push
dec
push
add
inc
pusha
or
es
jmp
in
loop
or
inc
add
and
xor
xor
insb
cmp
inc
pop
inc
push
inc
push
or
push
add
decl
inc
pop
loopne
mov
mov
lret
xor
loope
cli
xlat
aad
stos
hlt
incl
fcom
lret
xchg
std
aad
aad
rcr
test
decl
mov
xchg
mov
mov
jg
scas
pop
sub
pop
inc
jnp
jne
cmpb
jo
js
pusha
add
mov
and
and
into
ret
rorl
fiaddl
add
xor
jle
xchg
call
ljmp
imul
jle
loope
adc
xor
and
aaa
cmp
xor
pop
cld
fisttps
leave
fcmovnu
test
in
leave
lds
int3
enter
adc
lods
ror
mov
mov
pop
decb
or
or
adc
adc
pop
lcall
adc
pop
adc
push
sbb
and
adcl
mov
dec
into
and
rcll
incl
pushf
add
mov
jmp
ljmp
inc
test
call
sbb
push
decb
imul
imul
sub
jns
imul
call
js
add
ja
and
adc
loope
inc
lcall
jae
sub
popa
insl
fdivl
outsb
xor
jno
outsl
jge
icebp
xor
inc
jno
outsl
jg
adc
lret
sub
jmp
jmp
mov
out
movsl
mov
jbe
push
sbb
sbb
mov
sbb
fstp
fidivs
xor
aas
jb
scas
adc
clc
lods
cli
test
jmp
call
nop
into
jmp
in
mov
pushl
mov
add
std
sti
mov
leave
ret
xlat
rcrl
fiadds
mul
or
es
xor
mov
cmp
push
dec
push
call
cmp
fxch
int
je
int3
jge
jno
insb
jl
sbb
push
repz
jae,pn
test
cld
inc
push
add
std
cmp
and
rolb
dec
add
adc
pop
andb
enter
nop
add
repnz
cwtl
in
call
and
loopne
jecxz
sbb
or
jmp
push
stc
add
scas
inc
cld
sbb
adc
push
mov
movsb
mov
hlt
pusha
lock
or
pop
inc
cs
dec
insb
jle
jne
stos
std
pop
or
and
add
enter
mov
mov
test
xchg
mov
lods
scas
cli
jno
push
add
movsl
mov
in
jmp
movsb
aad
jmp
mov
testl
out
loopne
mov
jmp
mov
test
orl
xchg
jo
add
pop
pop
pop
loope
lock
add
add
inc
push
push
inc
dec
push
xchg
inc
pop
push
dec
dec
adc
jg
lret
push
pop
inc
add
jp
gs
add
push
and
push
sbb
jnp
sub
or
add
xlat
cmpsl
and
add
add
sbb
sbb
pop
and
and
incl
mov
addl
add
jg
shl
add
test
movb
clts
add
add
add
push
mov
add
sub
dec
or
xchg
adc
add
hlt
push
lcall
fldcw
mov
loope
stos
call
decl
pushf
lcall
popa
pop
rcrb
xchg
mov
lock
mov
add
mov
mov
mov
sbb
add
nop
lds
and
enter
popa
add
jg
cmpsb
js
xor
mov
mov
mov
push
mov
xor
aaa
inc
pushf
mov
call
mov
ss
lcall
add
sahf
lea
add
mov
stos
sbb
pushl
pop
fwait
mov
hlt
add
stos
mov
add
mov
mov
mov
jo
lea
sub
mov
lods
mov
incl
push
mov
and
mov
xchg
fwait
xchg
or
jg
nop
or
pop
mov
out
xor
cmp
in
pop
out
mov
pop
stos
mov
stos
mov
mov
mov
or
filds
subb
shrb
nop
push
mov
mov
pushl
mov
stos
icebp
or
mov
inc
mov
mov
lods
cmpsl
lock
scas
mov
push
xchg
mov
mov
mov
ljmp
scas
scas
mov
mov
movsb
jo
mov
in
loope
fwait
xchg
mov
mov
mov
add
dec
or
scas
sbb
decb
add
mov
pop
mov
lret
mov
pop
fdivrl
fildl
mov
add
xor
rorl
push
rcrb
cld
testb
mov
xchg
or
mov
cmp
cwtl
xchg
pusha
cltd
push
shlb
bound
fwait
push
cmp
xchg
xchg
mov
mov
add
cmp
xchg
lcall
jno
loop
ljmp
nop
sbb
push
daa
mov
nop
and
and
stc
add
pushl
loop
shlb
shlb
test
mov
sbb
icebp
or
inc
mov
pushf
repnz
nop
adc
cmp
xchg
in
mov
cmpsb
fists
sbb
xor
and
mov
jg
mov
inc
lea
sar
iret
or
add
sti
xchg
xor
add
jo
scas
adc
lcall
mov
lret
mov
add
into
lock
dec
je
push
test
cld
inc
add
cmc
lret
and
mov
xchg
mov
xchg
adc
pop
mov
pushf
fbstp
adc
sbb
test
cmp
shrb
mov
mov
pushl
add
nop
mov
icebp
add
push
das
mov
scas
mov
mov
mov
cmpsb
mov
mov
xchg
lcall
lock
cwtl
mov
sub
add
or
xchg
test
mov
adc
push
lods
sahf
mov
xor
scas
cli
and
xchg
inc
dec
sbb
arpl
mov
add
mov
les
mov
lcall
stos
cmpb
push
sbb
mov
pusha
scas
roll
sbb
jbe
adc
jg
mov
lods
rolb
inc
mov
pop
mov
jno
xchg
mov
and
inc
push
sbbb
jb
in
das
out
add
mov
mov
dec
and
mov
inc
icebp
pop
cmp
push
and
cmc
and
add
jns
inc
jge
mov
cmpsl
cmp
jg
xchg
cld
ss
insl
repz
mov
out
test
lock
aaa
std
decl
and
nop
pop
lock
or
mov
mov
cld
jg
mov
inc
inc
fidivl
dec
sub
mov
push
in
mov
mov
xor
mov
lcall
add
ljmp
loop
mov
cmc
jbe
jbe
outsl
clc
fimull
fistps
loop
hlt
add
mov
jo
xor
pop
mov
movsb
xchg
nop
and
cltd
cltd
pop
push
pop
arpl
sarb
shlb
cs
xlat
or
cs
jo
shrl
sbb
insl
mov
cld
or
add
jo
pop
xorb
adc
mov
enter
mov
jnp
push
lcall
mov
dec
ljmp
pop
pusha
dec
lret
cmpb
fmulp
aaa
stc
fwait
jmp
std
pusha
cmp
icebp
pop
jle
dec
inc
add
jbe
adc
mov
jmp
bnd
nop
int3
aas
mov
je
jle
push
adc
aaa
adc
xor
mov
pop
push
add
aas
fisubrs
and
loopne
fsubl
mov
movl
neg
mov
pop
bound
dec
movsl
add
lock
out
inc
iret
add
int3
ss
jnp
incb
je
scas
pop
lcall
mov
rcr
mov
adc
add
outsl
rcrb
push
mov
inc
adc
push
fnstenv
jo
roll
mov
add
inc
aaa
add
adcb
lds
je
int3
je
jb
mov
stos
cmp
adc
jp
push
jle
mov
sar
push
xor
roll
loope
mov
enter
xchg
mov
adc
idiv
call
push
je
pop
sub
pop
incl
rdmsr
add
jne
pop
or
loopne
ss
and
mov
xor
add
fistpl
stos
and
sub
xchg
test
andb
jl
fiadds
add
int
inc
xor
fildl
adc
inc
scas
into
ljmp
xchg
jl
mov
sbb
jo
andb
dec
pop
mov
adc
out
mov
add
and
pop
sub
std
int
xchg
icebp
js
jg
cli
lea
mov
ljmp
dec
ss
adc
or
dec
scas
jp
mov
scas
lock
and
fdivrs
testl
test
in
push
dec
aas
loopne
test
push
lds
add
add
daa
dec
cld
jl
add
roll
decb
idiv
mov
addb
mov
jp
mov
stos
cltd
jbe
clc
adc
cs
mov
mov
pop
fdivl
movsb
mov
jle
repz
xchg
and
mov
orb
push
fucompp
shrb
or
add
push
sbb
test
add
cmp
sbb
shrb
mov
sbb
pop
cs
sti
mov
out
test
push
push
pop
in
rcrb
adc
fidivrl
mov
rolb
adc
cmp
add
jl
sub
rolb
leave
movb
rclb
fistl
or
mov
testl
push
pop
int3
and
lods
inc
dec
lods
xchg
std
lods
add
outsb
scas
inc
cltd
hlt
or
stc
add
fiaddl
add
pop
rolb
add
repz
push
sbb
test
jne
movsb
or
outsl
sbb
adc
jl
inc
test
ss
decl
sbbl
sbb
jbe
add
add
enter
mov
les
cli
es
adc
mov
mov
jge
loopne
inc
or
add
inc
sbb
add
imul
pop
mov
testl
mull
or
popa
js
adcb
sbb
pop
lods
or
cmp
ret
pop
sbb
add
in
add
cmp
add
les
pusha
roll
out
sub
jmp
xor
push
jge
inc
sub
add
add
lods
shll
inc
xchg
jae
pop
sub
pop
or
mov
scas
jb
mov
add
mov
sbb
nop
andb
fnstsw
dec
xadd
xlat
bound
mov
inc
and
jl
les
icebp
decl
inc
repz
repz
cmp
sti
test
and
jmp
mov
xchg
dec
sub
pop
mov
xlat
mov
loopne
add
and
jmp
add
sbb
out
pop
pop
cld
pusha
or
add
negl
int3
inc
adc
xor
fildl
xor
inc
out
inc
addl
xor
and
push
pop
test
mov
and
adcb
pop
ljmp
out
adc
cmpsb
lcall
adc
ss
adc
je
mov
pop
cmc
sti
xchg
mull
pusha
daa
xor
fisttpl
mov
xor
add
and
pusha
pop
ret
cltd
insl
push
mov
xchg
jecxz
ss
inc
mov
push
add
repz
adc
or
jg
add
add
xchg
pop
inc
adc
adc
ret
rcrb
dec
cltd
outsl
or
xchg
dec
jnp
mov
mov
adc
sub
adc
cmpsl
adc
sub
test
hlt
push
stc
rolb
xor
cmp
jmp
jg
rorb
cld
test
sbb
loopne
je
adc
pop
roll
lcall
sub
and
inc
pop
pusha
add
add
incl
jo
sbb
adc
and
loopne
pop
call
jg
pop
lock
testl
and
sbb
and
inc
je
pop
add
loopne
push
cmp
pop
xchg
and
fwait
in
cmp
inc
adc
out
add
mov
and
add
es
sbb
jnp
mov
mov
adc
mov
jbe
pusha
or
mov
lods
xchg
sti
sbbb
cmp
dec
jle
inc
filds
loopne
subl
jb
mov
test
push
cwtl
movsb
repnz
jne
push
insb
fsubs
mov
adc
or
lock
aam
insb
pop
mov
out
pusha
ja
add
inc
xchg
pop
movsl
add
mov
or
add
ret
call
fistl
lcall
jle
pusha
test
add
sti
in
sbb
inc
pusha
and
add
push
inc
add
test
orb
and
test
call
data16
loope
and
mov
or
or
test
inc
cmp
clc
outsl
push
or
mov
or
and
add
jg
push
lock
pop
nop
pusha
movsl
mov
or
filds
add
je
decl
sti
fistl
out
rorb
inc
dec
mov
aad
stos
jp
mov
adc
incl
lods
scas
mov
push
loope
cmc
popa
add
pusha
add
sbbb
bound
loop
dec
hlt
jmp
nop
adc
lea
divb
or
sbb
adc
lcall
mov
xchg
pop
sti
xor
mov
mov
sub
push
mov
and
add
andb
andb
aas
add
adc
fwait
loop
cwtl
jg
jne
pop
push
inc
ljmp
add
dec
in
or
cmp
mov
aam
bound
xchg
jnp
subb
ret
inc
and
jecxz
shrb
push
mov
pop
push
cmc
mov
bound
pushf
xor
mov
loope
mov
aad
or
or
sbbb
fwait
mov
sbb
daa
add
inc
push
mov
neg
jle
cltd
jbe
jg
lret
push
sub
mov
and
adc
repnz
in
mov
xchg
scas
addb
cmp
xor
cmp
int3
add
ret
add
loopne
inc
lock
shlb
xchg
repz
adc
or
cmp
les
cmp
jnp
jo
push
xor
mov
es
sub
lret
pop
push
add
iret
push
outsl
dec
mov
adc
mov
pop
and
mov
mov
es
mov
test
add
in
incl
xchg
sarb
xchg
inc
add
jno
mov
xchg
idiv
mov
sbb
add
lock
cli
add
dec
mov
incl
sbb
push
dec
aas
adc
add
or
or
pusha
sti
xor
xchg
stos
mulb
sub
mov
subb
sar
imulb
mov
aas
scas
sub
out
bound
daa
and
push
add
xchg
cld
lods
inc
lods
cmp
cli
in
nop
sub
test
add
add
jmp
mov
mov
push
push
mov
push
xlat
mov
push
add
pop
icebp
pop
out
pop
inc
mov
cmp
sub
dec
xor
xchg
fwait
push
adc
push
dec
pushf
nop
mov
xchg
dec
push
sub
into
add
pop
adc
je
call
pop
xor
inc
subl
hlt
adc
shrb
test
cmc
mov
enter
push
scas
test
and
inc
cmpsb
push
insb
xor
jnp
jb
pusha
mov
mov
and
or
or
add
and
jb
adc
lods
sub
orb
aas
mov
insb
movsb
inc
and
adc
or
ljmp
incl
cld
je
adcb
sub
rolb
inc
jb
and
test
shlb
mov
cmp
xchg
dec
mov
push
jb
or
push
adc
cs
loope
dec
ffreep
adc
jg
decl
in
clc
inc
adc
mov
sub
call
rolb
fs
idiv
fcomip
inc
jno
inc
cmp
jno
lods
je
pop
xchg
inc
mov
dec
je
mov
jb
ss
or
adc
push
adc
mov
jo
cli
das
cli
outsl
push
xchg
test
orb
add
mov
adc
pop
sbb
add
decl
je
imull
push
scas
xchg
adc
cwtl
loopne
cli
xchg
je
pop
add
in
in
in
jo
mov
je
xor
iret
shrb
shrb
mov
icebp
sbb
je
test
ljmp
inc
xor
jo
ret
loopne
and
add
incl
push
decb
filds
inc
adc
jg
inc
mov
jbe
jb
mov
mov
je
bound
rol
dec
cmp
xchg
mov
cwtl
std
das
xchg
scas
iret
jae
mov
mov
mov
jl
mov
jl
cltd
sti
call
jl
add
jg
filds
push
cmpsl
das
sar
pushf
pusha
ss
sub
add
add
test
fcmovnu
cli
aaa
std
inc
ljmp
jae
inc
dec
or
push
cli
ljmp
or
insb
sti
push
orb
pop
je
arpl
pop
bound
mov
mov
test
mov
mov
int
aas
adc
loopne
jle
jb
int3
and
loopne
iret
pop
aam
mov
repz
cmp
dec
adc
add
add
icebp
scas
sbb
loope
dec
call
adc
jbe
lods
adc
loopne
xor
pusha
mov
ljmp
decl
daa
push
sub
je
add
mov
loopne
sbb
dec
jmp
jg
int3
das
hlt
sbb
test
adc
mov
lea
jbe
stc
inc
inc
push
jmp
sti
test
orb
mov
mov
mov
or
fwait
push
insl
in
adc
add
mov
push
ret
add
je
js
inc
and
rol
pop
adc
ret
scas
cli
incb
out
int3
adcb
rcr
js
das
jbe
nop
pop
mov
add
add
sub
aaa
mov
pop
sbb
sub
ja
incl
jg
ret
push
sti
dec
adc
and
add
mov
xor
shlb
clc
push
std
loope
repnz
sbb
in
je
test
int
hlt
mov
les
lea
jo
cmp
stos
adc
pause
mov
test
je
adc
jnp
xor
test
addb
or
cmc
cmp
pop
rcrl
inc
or
xchg
ss
xlat
inc
shll
mov
mov
add
push
and
mov
pusha
lods
lods
pushl
shll
and
adc
jl
add
add
jbe
repz
out
push
jmp
jg
aam
out
mov
cmp
adc
add
sub
cmpl
sbb
fsubl
jmp
loope
fadds
jg
and
rorb
test
cld
pop
xor
out
sbb
std
add
jb
out
daa
or
pushl
pop
lods
stc
jl
xlat
mov
or
les
mov
jp
fisubrl
loop
sub
ret
mov
andl
in
in
mov
ret
pop
mov
scas
test
xor
pop
pop
and
lcall
movsb
add
outsb
jnp
imulb
mov
pop
int3
adc
or
fdivrl
add
rorb
xchg
mov
sbb
lcall
jb
add
sub
sbb
fsubr
je
std
xchg
push
add
test
jnp
fcoml
lret
add
int
sahf
xchg
in
cmp
push
jp
mov
idiv
jp
mov
div
dec
imul
add
cmp
xorb
jnp
movsb
mov
lret
clc
out
add
add
mov
test
jmp
scas
aam
jg
mov
add
mov
or
repz
mov
out
ret
add
cmp
rcrb
bound
bound
in
stos
xchg
ret
int3
inc
subb
orl
incb
outsl
repnz
mov
popl
pop
addb
dec
or
cld
scas
adc
sub
jb
add
mov
in
or
int
mov
or
sbb
js
or
cwtl
cld
fwait
jecxz
lods
xchg
fdivl
jle
push
or
add
std
call
jp
les
inc
xchg
hlt
pop
or
and
or
adcb
out
clc
and
sub
xchg
cmp
scas
cmpsb
fisttps
push
cmc
and
scas
jge
mov
and
fdivl
nop
loope
bound
adc
pop
add
add
orl
inc
or
add
ljmp
shrl
xchg
push
push
add
push
lods
cli
rorl
addl
insb
pop
orb
fwait
arpl
shlb
loopne
lcall
loope
or
scas
pop
push
inc
push
ljmp
add
jb
ja
adc
cmp
sbb
mov
outsl
roll
xchg
xor
jge
jbe
lahf
ret
lcall
fldt
imul
add
xor
pop
inc
movsl
mov
mov
pop
sarl
push
inc
adc
mov
cltd
dec
les
ja
sbb
jmp
xchg
ret
daa
push
aam
pop
and
out
ljmp
xorl
scas
scas
insl
lcall
sarb
mov
mov
cmp
add
adc
in
rorb
adc
or
jmp
mov
js
stos
pop
xchg
pop
jbe
pop
fcomip
xchg
jb
mov
jo
loope
push
adc
rcrb
out
adc
je
test
inc
jmp
mov
scas
or
xchg
add
pop
push
test
mov
aam
rcll
cld
scas
adc
pop
jo
push
adcb
add
scas
test
aaa
imul
nop
add
repnz
inc
dec
ltr
pushl
in
test
pushf
aam
add
add
adcb
pop
or
push
xchg
mov
sbb
int
fildll
adc
das
pop
or
inc
ss
mov
jle
cli
and
inc
dec
mov
dec
pop
mov
jb
ljmp
hlt
jl
cmpsb
jp
lock
mov
mov
enter
das
clc
outsl
loop
mov
ret
adc
mov
adc
and
adc
pop
mov
jb
mov
pop
rorb
jl
xchg
push
mov
lahf
add
test
and
pop
mov
mov
push
adc
adc
pop
xchg
add
enter
and
add
xchg
out
add
xchg
pop
int3
sub
jmp
sub
sbb
cmpsb
push
out
inc
std
mov
in
cmp
mov
rolb
add
mov
les
jns
add
dec
imulb
adc
test
sahf
fucomip
inc
xchg
jmp
sti
pop
pusha
ret
ja
pop
stos
jle
pop
loope
shl
push
arpl
mov
jg
nop
add
stos
movsl
nop
add
in
je
pop
hlt
mulb
into
inc
adc
cmpb
lods
mov
sbb
or
adc
aam
sub
scas
jp
imul
mov
xchg
and
push
scas
inc
adc
decl
aam
push
pushf
inc
push
add
jl
push
cld
or
sub
mov
dec
xor
fcmovnu
sub
add
adc
inc
stos
add
pop
je
mov
or
movsl
rolb
sbb
pusha
insl
mov
mov
push
sar
xchg
dec
test
aam
add
sub
push
testl
mov
loopne
jbe
pusha
pop
inc
leave
test
lock
inc
mov
daa
jb
sti
cld
adc
in
outsl
cmpsb
mov
je
adc
mov
pop
hlt
xchg
rorb
mov
add
repz
add
push
jl
adc
and
jl
pop
add
subl
rcll
out
jp
cmpb
mov
or
out
and
add
push
je
fwait
rclb
in
ss
fisubs
js
call
pusha
test
arpl
mov
sub
or
test
add
mov
mov
loopne
stos
push
jbe
fldt
fcmovnb
push
loop
ret
add
jb
fcmovnb
pop
jbe
mov
mov
dec
sub
lock
add
fistps
mov
jbe
inc
lret
out
jbe
xchg
je
imul
adc
mov
ss
mov
mov
lock
xlat
xorb
rclb
jle
mov
add
lock
dec
mov
cmpsl
and
ljmp
pusha
xchg
std
je
cmp
pop
clc
mov
and
push
xor
incb
insl
mov
filds
dec
inc
xchg
sti
mov
loopne
pop
sub
cmpsb
jl
xor
scas
rolb
out
mov
add
and
push
xor
mov
mov
add
movsb
scas
cmp
shll
adc
pop
inc
jmp
jg
jmp
decl
test
inc
jge
mov
adc
ljmp
ss
pusha
sbb
xchg
sub
jns
out
nop
add
rcrb
cld
test
inc
rep
pop
mov
xchg
dec
dec
xor
sbb
or
or
lcall
rolb
pop
jo
loopne
inc
add
push
int3
lret
shlb
iret
pop
push
or
sbb
mov
sub
lods
sub
jge
out
lods
je
loop
inc
rcrw
add
ja
add
enter
xor
das
fwait
push
loop
dec
incl
lret
add
cmp
imulb
cli
stos
jo
sub
mov
mov
adcb
pop
add
push
jo,pn
pop
les
mov
jbe
jl
and
push
sub
mov
test
xor
and
push
pcmpeqd
mov
pusha
and
mov
das
test
xchg
in
clc
pop
loopne
inc
or
je
ret
nop
add
test
in
jmp
outsb
mov
rorl
add
inc
add
dec
xchg
or
shrl
clc
xchg
test
jl
xchg
xchg
rolb
xlat
nop
or
sbb
mov
mov
and
add
mov
subb
fldt
fidivs
addb
out
loopne
icebp
and
lret
add
add
pop
dec
pop
push
mov
push
pusha
fists
pusha
xlat
adc
add
cltd
subb
pusha
outsl
lcall
cmp
test
pushl
pop
cld
xor
and
test
mov
sbb
scas
adc
mov
je
mov
fldt
in
lods
out
push
out
lea
push
or
xor
out
adc
push
fists
sbb
xlat
pop
cmp
mov
out
ja
dec
hlt
lret
jbe
mov
scas
aam
mov
jl
jnp
dec
sub
xchg
mov
loopne
in
cmp
pop
out
adcb
movb
or
push
loope
mov
out
mov
daa
pop
cmp
add
sbb
inc
add
cmp
fs
sbb
and
jmp
ja
jmp
sarl
pushl
or
mov
mov
inc
sbb
add
imulb
stc
mov
inc
pop
hlt
ljmp
adcb
ljmp
daa
adc
je
push
dec
outsl
mov
out
cmp
adc
rcll
jb
or
mov
jl
sti
mov
sbb
ret
jmp
jle
xchg
decl
js
pop
push
das
adc
movsb
push
repz
das
pusha
test
lods
test
roll
ret
cmc
jb
repz
pop
icebp
fwait
mov
cmp
add
bound
adcb
loopne
push
cmp
xchg
incl
imul
xchg
rclb
xchg
nop
or
add
sbb
and
dec
test
pop
inc
add
mov
xor
lock
lds
pop
mov
jno
clc
add
pop
mov
jle
movsb
inc
cld
and
or
mov
inc
dec
or
or
mov
xlat
xchg
jecxz
jno
out
or
test
cltd
mov
in
loop
add
xor
pop
ljmp
jo
jl
xchg
leave
jbe
mov
lds
popa
or
cmp
incl
stos
shl
dec
popa
inc
or
adc
nop
add
push
sub
push
inc
mov
pop
mov
sub
sub
fs
add
push
sbb
ret
mov
jmp
and
call
xor
push
loopne
mov
cltd
mov
xchg
mov
std
xor
pop
add
mov
loopne
ret
ds
mov
adc
shlb
adc
mov
sbb
ror
push
out
dec
test
data16
mov
push
sbbl
je
loopne
fnstsw
xchg
mov
shll
adc
loope
and
add
iret
xor
sbb
or
adc
pop
stos
nop
and
rcl
adc
addr16
adc
fdiv
into
clc
add
popa
adc
adc
fcmovnbe
cmpsl
into
jle
pop
xlat
pushl
scas
loopne
xchg
nop
push
pop
cmp
shrb
add
xor
test
nop
add
add
add
xlat
add
adc
into
lock
sbb
add
add
aam
push
jg
enter
mov
test
pusha
xchg
movsb
movsb
decl
pusha
and
je
iret
jmp
adc
mov
inc
sbb
mov
jl
rorl
cld
fwait
stc
push
out
add
jecxz
pop
jae
incl
adc
jbe
stc
out
lds
sub
fistl
test
jo
xchg
jg
or
aas
lods
mov
xor
mov
adc
or
rolb
pop
test
mov
ljmp
outsb
jbe
push
xchg
shrb
jmp
or
dec
jp
push
rcll
add
fidivs
icebp
sarb
sbb
aas
sbbb
out
and
js
pushf
sar
rcll
int3
or
mov
mov
jo
repz
pusha
sub
mov
jbe
add
repz
mov
fcomip
call
jo
fs
scas
rclb
sub
ficompl
push
repz
daa
pusha
fldt
add
and
jo
push
inc
add
add
inc
push
rolb
mov
xchg
xchg
sti
xlat
mov
ljmp
dec
not
jo
adc
loopne
or
push
lock
mov
or
mov
jmp
jecxz
mov
out
js
push
and
cmpsb
jbe
add
sub
push
sub
xor
jo
mov
jecxz
add
adc
cld
add
icebp
mov
adc
je
push
call
lcall
jl
add
rcll
mov
dec
xchg
adc
jle
mov
pusha
xor
mov
jne
mov
push
shlb
shrl
repz
shlw
and
xor
or
das
pusha
ret
add
xor
adc
add
add
jb
inc
sti
pusha
int3
jbe
movsl
add
mov
shll
xorb
jl
pop
test
je
loopne
add
cld
adc
fdivrp
or
out
add
stos
ss
adcb
mulb
mov
push
mov
jle
fucomi
pop
inc
adc
es
cmp
movsb
cmp
sarb
lods
xlat
add
mov
and
loop
dec
test
scas
mov
jbe
cmpb
jbe
cmp
or
dec
dec
fnsave
add
add
sub
sbbl
popf
shlb
sbb
xlat
mov
jmp
sub
je
xchg
loopne
test
ljmp
andb
test
inc
int
push
mov
push
add
mov
gs
xor
es
add
add
std
cmpb
jne
add
xchg
popl
xchg
add
test
stos
lret
cld
mov
cli
xor
or
data16
scas
icebp
xchg
aad
pusha
je
out
fwait
xor
mov
sub
xor
out
adc
inc
fidivl
lcall
scas
shlb
leave
add
add
add
clc
mov
xchg
sub
mov
test
addl
lea
pop
imul
orb
je
inc
or
stos
push
cmp
mov
mov
inc
xchg
jmp
lcall
xchg
mov
sbb
xchg
push
pushl
inc
cmp
push
mull
mov
in
divb
call
jo
leave
add
inc
or
adc
add
and
jl
sti
scas
jp
sbbb
outsl
cli
sub
ljmp
add
xor
inc
cli
aas
cmp
cmp
jl
sti
dec
pop
add
ds
mov
xor
scas
decl
adc
add
pop
mov
push
aaa
rclb
rolb
mov
in
mov
lret
dec
pop
das
push
mov
mov
testb
cmp
mov
inc
jb
je
xor
inc
push
pusha
or
cmpsb
loopne
cli
jg
inc
test
shrl
add
stc
ja
adc
or
cld
call
lods
les
or
inc
mov
orl
ret
push
cld
inc
xor
sbb
jp
adc
dec
loopne
leave
cld
enter
loopne
and
mov
mov
repz
je
push
aam
jne
stc
jne
lds
hlt
lock
lea
dec
shlb
ljmp
cmp
or
and
inc
imul
testl
mov
jp
mov
aam
pop
loope
ljmp
adc
adc
jb
addb
nop
sbb
mov
add
mov
inc
cmp
je
dec
and
int3
data16
or
lock
or
push
mov
and
scas
jb
and
jp
add
loopne
mov
pop
pop
or
push
mov
pop
jns
stc
and
jb
das
inc
fdiv
mov
clc
mov
or
sbb
test
cmpsb
clc
jb
pop
cmpsl
pop
mov
mov
hlt
cmp
mov
int
adc
push
inc
dec
xchg
mov
ss
je
aaa
std
dec
push
or
mov
movsb
jb
sub
incl
std
add
jmp
cltd
loopne
lock
inc
pop
and
inc
shrb
inc
jb
orl
jb
jg,pn
sar
or
loope
lods
mov
fimull
add
add
push
addb
pop
scas
mov
lcall
add
mov
push
stos
loopne
mov
cmp
mov
add
and
rclb
adc
cld
ja
hlt
rolb
xchg
mov
sub
add
sbb
sub
jbe
out
sub
hlt
lcall
loop
sub
adc
mulb
sub
cs
cmp
es
adc
xor
xor
pop
xchg
notl
jg
popf
push
ljmp
test
add
dec
pop
or
jg
mov
cmpsb
and
fwait
mov
and
or
sub
mov
and
cltd
shlb
sbbb
loope
lcall
xchg
out
push
pop
inc
add
pop
or
mov
and
inc
jg
or
outsl
inc
cpuid
or
mov
gs
add
jle
or
cmp
incl
nop
outsb
xchg
les
xchg
testl
or
push
add
in
inc
push
or
mov
ss
mov
sub
jae
stos
mov
cmp
jo
add
xor
adc
fwait
and
mov
dec
and
std
ja
lcall
push
cli
add
add
or
xor
mov
and
sbbb
data16
popa
stos
cli
and
or
sbb
jl
and
nop
pusha
sti
fwait
mov
push
jp
or
add
xor
mov
and
or
lods
pop
shlb
sub
add
jno
jle
test
push
out
push
mov
jge
movsl
adcb
js
shrb
inc
cmpb
pop
pusha
test
add
and
mov
xchg
and
mov
fistpll
xor
inc
pop
inc
inc
sbb
test
sbbb
or
dec
rcr
iret
xchg
out
push
mov
add
call
sbbb
mov
ljmp
js
cltd
ds
negl
add
mov
lret
mov
imulb
mov
push
add
push
add
add
aaa
cld
fistps
mov
mov
movsb
cmpsb
xor
sub
cld
lock
add
int3
sub
fucomi
aaa
jb
stos
add
add
mov
adc
lock
lods
repz
cmc
pop
hlt
adc
inc
or
loopne
pop
sti
jo
xor
out
out
xor
push
in
inc
das
push
or
mov
lock
call
adc
orps
or
adc
xorl
lods
hlt
dec
ret
popf
inc
stos
push
inc
pop
scas
hlt
fildll
fs
aaa
adc
repnz
in
mov
stc
das
cmpsl
aaa
jl
push
dec
movsb
mov
push
or
mov
pop
clc
sub
call
xor
push
repz
sbb
je
inc
push
xor
outsb
mov
and
les
icebp
loopne
push
stos
fistpll
loopne
jle
push
nop
aas
cltd
lcall
push
aad
pop
cmp
pop
sbb
mov
cwtl
cmpsl
mov
inc
or
ret
jg
cld
mov
aas
rcrl
cmp
loopne
adc
push
inc
sub
pop
lret
mov
add
outsl
sub
mov
xor
lock
mov
shrl
cmpl
mov
out
xchg
roll
fildll
cmp
mov
pop
cld
mov
out
mov
adcl
sub
fcomip
stos
or
jo
pushl
out
nop
cmp
insb
leave
or
mov
int3
hlt
lcall
sbb
xchg
mov
add
or
push
mov
adc
push
add
mov
xchg
repz
fcmovnu
andb
test
outsb
mov
iret
pop
int3
pop
or
inc
add
jno
push
add
cs
scas
int3
jbe
andb
sbb
add
pop
adc
jo
jecxz
dec
jge
lods
out
add
xchg
xor
ffreep
push
fidivs
subb
je
add
jecxz
add
andb
jb
dec
out
shlb
adc
sub
jmp
add
jecxz
js
adc
adc
shlb
cmp
mov
adc
jb
or
jg
push
pop
adc
popf
lock
aas
loope
lock
loop
or
testb
outsb
push
xor
adc
jb
mov
rclb
cmpb
lods
mov
inc
or
add
xchg
ljmp
push
mov
lock
and
shrb
jmp
out
rolb
add
in
lret
sub
aas
push
test
xchg
gs
add
int3
add
test
pop
dec
push
scas
jb
cmp
mov
mov
jo
mov
add
fists
loopne
mov
pop
and
mov
dec
xchg
xor
sub
mov
cmp
sbb
rolb
pop
nop
mov
xchg
repz
add
mov
inc
out
lock
sbb
mov
cwtl
test
xor
insb
jo
mov
test
xor
mov
jbe
and
adc
jge
mov
push
and
pop
outsb
addb
adc
das
js
loop
xchg
stc
xchg
jbe
aaa
inc
pop
push
add
aam
loopne
je
mov
cld
mov
jmp
sub
das
sarb
mov
add
inc
mov
xchg
jne
add
add
in
cld
orb
sub
xor
add
je
xchg
jmp
add
das
push
sbb
rol
add
lcall
cmp
les
lea
push
sbb
adc
enter
inc
inc
ret
adc
jl
mov
dec
mov
js
or
add
push
and
cmp
dec
adc
pop
lock
jb
testl
and
daa
push
stos
in
mov
and
push
xor
mov
inc
mov
mov
loopne
int
xor
pop
cld
je
pop
and
push
mov
ja
loopne
inc
adc
push
and
pop
mov
xchg
pop
loop
shlb
js
arpl
rcrb
jl
subb
lretw
and
out
clc
decl
xchg
test
adc
pop
sbb
sysret
incb
repz
pop
add
or
xor
and
decl
cmp
jo
sarl
aas
and
xor
jp
mov
add
adc
les
mov
inc
je
xchg
push
lock
mov
fldl
or
movsb
int3
push
xchg
cmp
shlb
fildl
pop
shlb
xor
cwtl
add
jl
int3
pop
loope
jg
mov
lock
repnz
jo
sbb
xor
cmc
out
clc
ss
xchg
inc
push
mov
pop
in
add
push
mov
js
add
shll
nop
or
fcompl
out
adc
xchg
inc
inc
add
scas
sbb
or
push
add
call
out
clc
pop
dec
push
adc
xchg
pop
jl
das
mov
mov
jb
daa
test
mov
call
lcall
and
xor
push
lock
cmp
mov
add
jo
jmp
mov
pop
jo
fwait
mov
and
push
int
xchg
loop
add
shrl
int
jg
lock
shrb
dec
out
lods
stos
rorb
or
aas
sti
adc
into
jnp
and
arpl
add
data16
stos
xor
fidivrl
fcomip
mov
push
push
stos
mov
out
add
add
mov
fdiv
incl
xchg
or
add
scas
mov
dec
xchg
jmp
mov
inc
and
cmp
iret
subb
imul
movb
scas
scas
dec
xor
sahf
and
lods
sbb
add
mov
jg
add
scas
pop
push
lock
in
inc
fwait
add
mov
in
decl
in
nop
push
dec
xor
xchg
dec
jecxz
decl
xchg
nop
sbb
sub
std
lock
mov
mov
std
jnp
aas
mov
add
cli
lea
repnz
fistps
cmp
incb
push
lret
add
pop
inc
dec
sub
mov
jl
xchg
ljmp
adc
and
mov
into
jae
ret
xchg
mov
std
jle
pop
add
mov
mov
lods
insb
add
roll
loope
jle
subb
xor
add
jecxz
add
jle
out
xor
shrb
pop
outsl
add
lock
lods
cwtl
add
add
push
pop
pop
xor
add
mov
sbb
add
and
movsb
mov
ret
js
adc
or
seta
in
add
add
jp
push
lods
shrb
imul
sub
add
mov
and
add
ja
pop
orb
sbb
out
fcomps
and
jo
imul
cmp
jp
or
insb
add
lcall
repz
aas
push
pop
push
in
aaa
xchg
and
cltd
cmp
and
aad
push
xor
mov
cmp
ret
mov
test
negb
ja
loopne
add
add
mov
cld
test
mov
les
testb
jg
les
xrelease
call
sub
orl
push
andb
fistpll
subb
mov
jp
nop
inc
jnp
add
or
push
test
inc
adc
push
add
xchg
orb
sbb
and
add
mov
cmp
mov
into
jl
add
mov
or
mov
push
cld
sbb
inc
or
outsl
cmpb
testl
adc
je
out
ds
adc
or
mov
je
xlat
adc
adc
je
int
inc
fidivs
out
imul
ljmp
add
mov
rcl
int3
les
mov
jmp
movsb
jg
push
xchg
jmp
ss
mov
add
lds
scas
scas
push
repz
int3
call
add
or
mov
aam
dec
out
les
fdivp
pop
cld
movd
repz
incb
insb
shll
add
jp
push
adc
add
adc
push
add
adc
push
lods
std
and
ret
add
mov
xchg
sub
ljmp
mov
or
into
add
pop
adc
push
push
xor
pop
into
adc
shrb
mov
orb
rolb
jl
negl
rolb
fbstp
shl
loop
enter
push
jl
testl
je
je
add
and
fbld
and
sbbb
dec
ret
adc
push
pop
repz
add
imul
mov
xchg
sbb
sbb
sub
jno
mov
or
add
mov
mov
jae
mov
aad
adc
jg
in
add
add
xchg
subb
add
clc
divb
roll
pop
jmp
push
aaa
adc
clc
frstor
or
add
cmp
out
or
jne
or
ret
sbb
mov
fildl
das
addb
jns
adc
mov
cld
adc
push
cmpsb
pop
mov
xorb
loope
mov
cmp
int3
cld
jl
push
cs
adc
mov
and
mov
or
mov
ret
mov
aaa
je
push
lock
sti
and
lea
mov
push
in
sti
pop
cltd
xchg
sub
testb
sbb
or
inc
loopne
jg
jbe
mov
les
outsl
add
hlt
fstpt
das
scas
popa
inc
jb
rorl
adc
loopne
sti
jecxz
stc
push
mov
loopne
and
testl
loop
test
mov
and
pop
loopne
andb
cld
mov
les
call
adc
inc
and
rclb
dec
daa
ret
dec
push
inc
mov
mov
stc
roll
mov
mov
push
rcrb
add
ss
addl
and
loopne
ljmp
sbb
stc
loope
sub
in
mov
aam
and
loop
decl
mov
mov
mov
lock
mov
ds
dec
inc
mov
insb
pusha
inc
or
add
pop
cmp
and
inc
test
aaa
shlb
cli
or
mov
jmp
cmc
jb
jo
icebp
adc
lock
add
out
mov
dec
pop
sub
shrl
dec
xchg
dec
ds
aas
out
stc
mov
jmp
cwtl
es
mov
sbbl
incb
rcrl
cmpb
das
add
add
and
lods
mov
inc
push
mov
add
xchg
addb
mov
cli
add
mov
psrld
add
out
add
les
and
add
jg
rorl
ljmp
adc
adc
in
daa
mov
rol
sahf
cmpsl
enter
mov
pop
jl
insb
mov
rcl
add
insb
add
pushf
cltd
push
pop
adc
sub
rclb
inc
or
pop
aaa
mov
das
mov
outsl
js
loope
cld
mov
je
add
repnz
xor
or
push
popa
inc
xchg
mov
add
je
adc
jp
loopne
mov
iret
jb
pop
fsubs
push
sarb
adc
inc
lret
rolb
inc
sub
fdiv
mov
clc
and
jp
and
cmp
fldenv
or
and
adc
xlat
pop
sbb
cmp
pop
inc
push
outsb
fistpll
les
sub
add
sbb
push
sbb
inc
cmp
jno
es
pop
fwait
lock
jg
mov
sbb
mov
rorb
xor
dec
inc
jmp
pusha
xor
push
loope
sti
dec
jne
jnp
rorb
add
adc
add
jg
ret
fistps
or
push
and
mov
lods
mov
int3
sar
jg
mov
je
loopne
mov
je
mov
je
dec
scas
pusha
rclb
rorb
add
push
mov
push
dec
dec
add
mov
addb
dec
call
and
adc
in
mov
jp
adc
fbstp
push
pop
lock
cmp
cld
fnstcw
and
lret
push
dec
and
scas
adc
xorb
stos
mov
and
daa
jbe
xor
push
loopne
adc
mov
jge
inc
add
divb
xor
cmp
pop
push
pop
adc
adc
add
add
hlt
pop
pusha
mov
push
idivb
sbb
nop
jbe
sbb
mov
push
pop
adc
pop
jbe
mov
addb
and
fbld
pop
stos
mov
nop
adc
stos
scas
es
and
ss
shrb
decl
xchg
or
ljmp
je
jge
pop
pop
push
push
test
cmp
in
lcall
jecxz
je
not
inc
add
or
inc
xchg
xchg
leave
xorb
scas
popf
push
push
xrelease
mov
cmp
sub
add
mov
mov
sbb
sub
push
pop
nop
inc
mov
adc
push
lods
je
ljmp
mov
and
das
mov
loope
repnz
add
or
sbb
push
add
repz
sti
repnz
clc
and
pop
inc
pop
adc
push
repz
repz
jae
add
pop
loopne
clc
test
ret
push
mov
push
add
subb
lret
and
sbb
or
testb
push
add
sbbb
sbb
push
add
add
inc
push
lcall
mov
push
push
add
clc
ret
fisubrs
jle
or
jmp
mov
mov
int
adc
fbld
dec
sti
adc
dec
std
adc
dec
cld
adc
add
je
sbb
repz
xchg
xor
or
loopne
sbb
lock
cmp
mov
mov
push
inc
mov
mov
push
mov
aaa
xor
mov
jl
mov
jo
jg
mov
dec
loop
jo
add
pop
sub
adc
daa
push
push
pop
pop
xchg
xor
icebp
mov
repz
repnz
jno
pop
or
mov
test
fimuls
jb
push
inc
notl
inc
add
jecxz
fidivs
test
loopne
nop
jg
scas
push
jge
mov
lock
adc
out
xchg
mov
mov
cmpb
push
scas
cltd
adc
adc
js
sti
mov
iret
adc
add
xchg
in
inc
dec
sbb
pusha
mov
orb
mov
and
pop
ss
jo
cmp
add
outsl
jno
ret
sub
sbb
xchg
popa
movsl
enter
pop
je
cmp
jle
jmp
push
pop
jo
lock
jbe
and
adc
lock
mov
ss
ret
ljmp
push
jl
adcb
std
sbb
add
dec
cmpsb
test
or
and
and
rcrl
add
sub
cmp
movsb
testl
push
push
dec
mov
or
loopne
rorb
add
inc
or
add
ja
mov
jo
negb
popa
mov
inc
sub
cli
mov
add
mov
push
lcall
outsl
data16
add
pop
addl
jg
out
stc
insl
pusha
test
decl
mov
repz
sti
cmp
loope
movsl
add
xor
sbb
xorb
in
cld
fildll
push
subb
js
inc
cmp
mov
xor
call
pop
dec
hlt
and
inc
push
add
fwait
mov
jb
add
mov
mov
jbe
cld
adc
mov
pop
adc
mov
cmp
jp
and
xchg
ljmp
or
fildl
and
add
ret
mov
jo
inc
jmp
mov
cltd
lret
clc
mov
sbbb
inc
xchg
ss
aas
xchg
add
push
ljmp
decl
mov
fsubp
mov
mov
mov
xchg
fbld
movsl
cltd
outsl
mov
mov
add
sbb
ret
shlb
sub
lahf
es
std
scas
clc
adc
mov
xor
fistpl
adc
jno
jo
lcall
push
jbe
dec
mov
ss
mov
xchg
in
test
or
jb
inc
jl
je
je
dec
rclb
mov
mov
lahf
sarb
mov
jp
ss
inc
fwait
sub
decb
dec
inc
mov
xchg
test
adc
xor
jl
lahf
push
or
aas
test
hlt
in
cwtl
add
fprem
cmp
ja
hlt
adc
or
gs
fcoml
jle
in
jg
incl
inc
hlt
adc
push
sbb
pop
testb
add
add
mov
lods
pop
dec
or
cmp
pop
std
xor
push
pusha
xchg
or
notb
xchg
cmp
and
sbb
flds
add
add
or
icebp
push
insl
cli
and
ret
outsb
pop
outsb
out
adc
or
mov
iret
add
je
and
stc
add
adc
add
push
jne
or
outsl
jg
adc
lock
mov
add
mov
je
out
idiv
sbb
mov
fisubl
les
mov
or
cmp
inc
sar
xor
mov
and
fadds
add
divl
add
add
call
ja
loopne
adc
or
les
into
or
fbld
sar
inc
andb
sbb
clc
decl
jno
pop
and
sub
fmuls
mov
pop
and
add
les
je
or
je
aam
xor
inc
movsb
aam
nop
push
mov
and
adc
xchg
adc
cld
sub
ljmp
xor
insl
pop
std
subb
lock
adc
mov
mov
hlt
jno
add
int3
adc
pop
and
call
xor
push
sbb
push
jbe
add
add
es
lcall
mov
aas
movsb
dec
loop
out
mov
push
pushf
lock
mov
out
and
and
mov
or
push
add
les
mov
cltd
and
out
cltd
jp
sti
lcall
mov
out
and
stos
sub
mov
pusha
rclb
push
movsb
das
mov
outsb
jl
nop
aad
mov
add
orb
push
stc
mov
inc
loopne
sbb
inc
adc
lods
or
ret
bound
mull
add
mov
loop
shr
test
xchg
clc
add
inc
fldl
add
mov
data16
xchg
orb
aad
dec
xchg
lcall
push
add
push
ja
xorl
repz
jbe
mov
jmp
mov
enter
stos
add
cwtl
addb
sbb
adc
enter
xchg
sub
sub
jp
mov
aaa
je
jp
insl
aad
push
mov
je
jmp
lods
or
cld
add
xor
add
pop
pop
mov
pop
icebp
rolb
add
cld
jbe
add
sub
dec
lods
popa
sti
adc
add
sbb
sbb
je
mov
lods
add
incb
test
and
jle
les
push
pop
xchg
jae
or
std
mov
mov
mov
cmp
sub
cmpl
loopne
je
cld
test
and
add
cld
les
cmp
clc
arpl
add
cmc
mov
inc
inc
add
jl
or
mov
and
iret
orb
xor
pop
lock
inc
jg
flds
out
adcb
add
mov
test
mov
adc
ja
adcb
or
pop
inc
add
or
fisubs
push
add
sub
push
or
add
rcrb
push
mov
or
ds
mov
jg
mov
dec
or
in
ss
pop
push
pop
push
fistpll
add
js
fsubs
sarb
mov
pop
scas
lret
and
fcmovbe
lcall
sbb
cmpsb
or
adc
cmp
pushf
jl
fsubs
test
or
fidivrl
sti
push
cs
inc
jle
fdiv
aaa
or
inc
dec
sub
pop
dec
pop
sub
adc
jmp
js
aaa
pop
orl
mov
pop
adc
push
lods
mov
je
rorb
xchg
cld
mov
daa
ror
adc
stc
ljmp
imul
pop
leave
jae
adcb
aad
xor
pop
xor
lock
lods
xchg
ss
xor
xorb
decb
mov
sbb
fs
pop
dec
inc
in
push
ja
push
xchg
and
rcll
repz
notl
je
in
repz
lea
les
movsl
add
fisttps
rolb
mov
lds
and
push
test
addb
mov
jmp
aaa
loope
add
cld
inc
dec
scas
cmpsb
xchg
xchg
clc
jbe
jmp
cmp
inc
cld
lock
mov
jl
add
mov
jae
idiv
pop
pusha
push
aam
jl
hlt
out
sarb
inc
int
ret
pop
mov
ss
mov
add
notb
xor
stc
fldl
dec
pop
test
ret
pop
or
pop
xchg
adc
pop
pushf
inc
test
lret
pop
dec
rclb
repnz
mov
add
mov
mov
inc
add
lret
pop
xchg
push
rcl
adc
pushf
hlt
jmp
scas
mov
mov
adc
pop
xor
mov
pusha
or
and
mov
cmp
mov
inc
dec
push
aad
or
jge
decb
push
jge
cli
pop
inc
jl
int3
and
cmp
ja
fildl
in
pop
cmp
add
lock
xor
test
xchg
push
and
add
push
insb
push
popa
xchg
addb
out
push
inc
ja
imul
xchg
push
pusha
add
sbb
or
inc
xchg
pusha
push
sarb
xchg
push
loopne
adc
pop
lcall
std
lods
lock
adc
pop
jno
lds
test
sti
jnp
xchg
imull
and
or
add
add
and
jmp
or
or
loopne
and
mov
pop
sbb
lret
add
ds
adc
cmp
adc
add
adc
call
add
push
clc
cmpsl
fisttps
xor
je
les
or
inc
sub
cmp
in
pop
mov
scas
pop
je
pop
je
cmp
test
and
jg
ret
sar
push
push
mov
push
and
mov
je
scas
add
pop
xor
outsb
pop
or
out
or
shrl
popa
push
and
add
fistps
test
push
out
or
sub
sub
incl
add
int
loope
rorl
scas
xchg
in
and
sbb
fildll
mov
ljmp
add
cmc
jle
aaa
rolb
sbb
add
adc
in
xor
nop
mov
sbb
fcomip
push
out
adcb
push
pop
push
and
popa
aas
les
xor
jmp
dec
popf
aam
cwtl
and
add
add
push
cmpsl
hlt
pop
je
mov
cli
jg
adc
xchg
roll
scas
ret
sub
lcall
cmpb
pop
pop
and
pusha
add
mov
push
cwtl
pop
mov
add
lock
jg
inc
out
shr
ljmp
and
lret
inc
pop
pop
loopne
roll
jg
rcll
mov
or
jg
icebp
sbb
andb
scas
loopne
icebp
pushl
movsb
jbe
testl
inc
pop
mov
pusha
mov
enter
test
stos
xchg
lock
sub
adc
cs
or
sti
dec
or
std
pop
push
mov
or
aas
mov
lea
adc
cmc
mov
mov
mov
cmp
xor
cld
or
shlb
mov
sub
mov
popa
add
repz
ja
lret
jo,pn
fwait
mov
sub
push
std
or
fs
dec
mov
movl
cmp
ljmp
mov
hlt
sbb
out
test
cli
das
clc
bswap
je
pop
loope
add
pop
push
loopne
subb
jae
jg
cs
negl
test
cmp
mov
pop
je
fwait
jmp
sbbb
lahf
test
xchg
or
andb
dec
mov
cli
sti
or
mov
mov
call
dec
ljmp
mov
sbb
add
in
out
fadds
pop
or
les
mov
aaa
mov
loope
xchg
aas
ljmp
push
mov
ljmp
jl
or
inc
je
xchg
add
jg
addb
xor
xorb
cmpsb
std
shlb
add
jo
adc
ret
rcrl
mov
lret
lock
jb
inc
add
scas
nop
pop
cmp
lock
adc
mov
je
aas
and
cld
insl
lods
jg
jns
aaa
inc
push
repnz
sti
mov
add
xchg
mov
mov
in
je
hlt
repz
cmp
inc
rolb
loopne
shrb
jae
add
das
fsubrs
push
pusha
push
bound
add
xchg
inc
adc
add
les
and
and
call
clc
mov
pusha
push
mov
pop
out
adc
add
or
mov
push
bound
or
stos
and
pop
or
insb
sub
and
jl
mov
repz
test
jb
or
cltd
add
aam
popa
stos
add
mov
push
push
in
cmp
adc
ss
clc
pop
adc
outsb
mov
nop
xor
sti
jno
test
pop
push
inc
ljmp
lods
pushf
loopne
inc
sub
xlat
push
ljmp
push
add
mov
sub
and
rolb
test
dec
jo
and
test
shrb
in
shlb
dec
andb
fidivs
or
clc
push
adc
fcoml
ljmp
push
add
cmp
and
je
push
insb
stos
jle
mov
dec
cmpb
mov
inc
add
push
or
scas
test
mov
add
aad
icebp
jg
fstpt
xchg
dec
inc
mov
adc
jb
adc
das
inc
sti
add
jne
jnp
xlat
lock
iret
mov
jne
adc
mov
jg
cmpsl
mov
imulb
cmp
adc
or
in
mov
xchg
and
clc
in
decl
testl
lock
scas
cmc
test
xor
notb
test
call
cld
mov
addb
dec
mov
repnz
lock
mov
and
mov
add
pop
or
cltd
push
ss
rcrb
test
mov
dec
mov
cltd
mov
mov
ds
ja
ljmp
dec
out
add
xor
and
jo
cmp
pop
and
add
inc
jmp
cmp
mov
sub
jg
cli
push
fwait
mov
cld
jb
out
call
insb
call
xor
ficoml
jne
les
fdivr
add
rclb
pop
aas
sti
adc
cli
call
fs
dec
cld
xchg
sti
mov
mov
inc
or
mov
jo
add
bound
and
fistps
xor
fs
rorb
sbb
pop
fwait
adc
mov
lock
mov
adc
fidivl
adc
loope
cmp
stc
sbb
rclb
xchg
dec
test
out
add
xorb
hlt
out
xchg
pushf
clc
andb
fildl
xchg
incl
xchg
jb
enter
cmp
adc
outsl
nop
xor
adc
or
cld
add
fildl
push
xchg
push
les
test
adc
cmp
mov
push
lock
cmp
lock
insl
xlat
inc
cmp
loope
sub
ja
cld
mov
jge
fisubl
iret
xor
mov
add
pop
xor
or
test
mov
jmp
mov
orb
daa
das
lock
nop
popa
xchg
pop
out
add
or
je
scas
mov
loop
lds
push
push
mov
bound
xor
adc
lods
adc
adc
icebp
push
sub
out
add
movsb
push
add
xchg
cld
out
incl
jmp
add
sbb
dec
fstpt
orb
push
mov
sar
pop
jno
hlt
adc
iret
orb
jno
jecxz
and
sbb
and
in
orb
mov
xchg
or
bnd
mov
adc
jbe
stos
icebp
push
cmpsl
push
lret
sbb
add
jns
mov
test
sbb
sub
add
lea
outsl
lock
pop
xorb
sti
jo
mov
int3
adc
test
or
ja
aaa
add
icebp
cltd
mov
sbb
out
add
push
push
add
pushf
mov
xorl
aaa
mov
push
scas
lea
adc
rorb
incl
cld
xor
ret
jmp
rcrb
sahf
decb
dec
mov
pop
lret
mov
scas
cwtl
iret
test
mov
pusha
pop
lock
shll
push
rorl
fstpt
stos
in
clc
mov
sub
dec
dec
inc
aam
sbbb
mov
cmpsb
push
repnz
mov
dec
jbe
ret
pop
xor
out
loope
out
pop
and
les
nop
hlt
ljmp
xchg
iret
add
cli
nop
add
scas
mov
mov
push
pop
jecxz
jl
sbb
mov
xor
inc
inc
xor
mov
shlb
or
adc
xchg
lock
hlt
push
test
lock
icebp
sahf
push
add
insb
push
clc
inc
cld
and
and
dec
ljmp
xchg
call
test
xchg
bound
add
cmpsb
dec
mov
std
mov
dec
sti
pop
sub
jecxz
xorb
jno
mull
sub
incl
pop
add
sub
or
pop
add
push
or
add
inc
mov
jp
and
mov
add
ret
push
enter
jo
add
dec
fiadds
std
mov
add
jb
xor
imul
or
rcrb
stc
in
add
imul
add
cmp
fiaddl
movsb
and
into
loopne
add
adc
notb
ss
jb
mov
add
inc
jecxz
push
mov
or
add
scas
xchg
fbld
stos
pop
sub
dec
sub
dec
jo
xchg
xlat
inc
addb
sbb
jo
testl
ljmp
ret
mov
add
decb
cs
jl
sbb
mov
add
pop
push
sub
adc
fs
dec
mov
and
sti
lods
pop
add
ret
mov
push
ret
lds
jl
cmp
loope
jp
test
pop
imul
fidivrl
adc
cmpsb
hlt
inc
rolb
pushw
mov
out
xchg
xchg
addl
sub
and
mov
adc
out
out
sub
ret
push
mov
add
into
inc
add
inc
stos
add
std
xchg
fsubrp
ret
jp
mov
jbe
and
mov
shr
inc
pop
mov
cmp
add
decl
lret
mov
sbb
fadds
add
add
stos
lods
xchg
xor
fcomps
cmp
jne
stc
jl
fcmovnu
jp
shr
pop
add
push
into
or
mov
or
and
sti
orb
aaa
push
add
push
mov
enter
int
jne
adc
mov
jne
cmp
inc
sbb
clc
lcall
adc
jb
scas
pusha
addl
mov
pop
adc
clc
aas
pop
sti
ja
dec
jbe
mov
xlat
jnp
and
fistpl
filds
jl
mov
daa
mov
int3
or
imul
fbld
dec
outsb
jecxz
rorb
xchg
jno
add
out
shrb
or
adc
adc
adc
and
mov
mov
je
or
add
pop
movsl
fistpl
gs
ljmp
add
into
pop
add
mov
cmp
mov
adc
mov
mov
or
cmpb
aaa
fisubs
rol
cmp
push
loop
mov
shll
mov
add
mov
mov
xchg
pop
or
sbbb
mov
mov
add
mov
popa
push
pop
insl
mov
xchg
les
call
out
cmp
cmp
jp
cmpsb
add
jp
lods
jbe
ss
mov
rclb
mov
xchg
incl
mov
js
add
mov
mov
add
fbld
aam
lds
lds
test
lret
jge
in
or
das
add
add
mov
les
int3
sub
in
and
sbb
jg
mov
jmp
pop
jne
lock
outsb
cmp
stc
mov
int
pushf
and
lea
xor
mov
jnp
push
ret
loop
pusha
subl
cmp
add
das
je
add
add
aaa
test
jle
mov
lock
pusha
sub
add
lock
sub
adc
xor
shll
add
ljmp
inc
int3
add
movsl
pusha
roll
mov
inc
inc
ss
dec
pop
sbb
xor
mov
cmp
cmp
add
and
fs
add
mov
and
pop
jg
rorb
sub
mov
mov
loopne
or
push
and
adc
loop
add
rclb
iret
pushf
or
sbb
jbe
and
push
std
mov
xchg
fistps
push
sbb
lret
and
add
insb
mov
cmpsl
cmp
add
lea
orl
loopne
mov
cmp
std
sbb
and
and
ret
adc
inc
clc
shlb
scas
cli
mov
into
data16
cs
cmpsb
jmp
aaa
add
nop
les
mov
pusha
imul
cli
loopne
mov
andb
mov
andl
jp
mov
aad
cltd
movsb
mov
jle
xor
aas
mov
or
mov
sub
test
ret
xor
int
mov
jl
xor
aas
ret
cmpsl
lea
int3
adc
push
loope
adc
cmp
sbb
stos
lcall
jmp
loopne
push
mov
pop
out
faddl
cltd
outsb
nop
jbe
mov
fdivrs
fisttps
jg
or
mov
repz
sti
cmp
je
lock
aaa
lock
lcall
in
es
not
and
mov
mov
addb
popa
sar
inc
pop
adc
movsl
add
jbe
or
outsb
loopne
mov
add
adc
jg
add
add
aas
sbb
dec
aas
cltd
sbbb
or
mov
clc
jg
call
shll
mov
and
je
sub
stos
push
cmp
je
adc
add
add
xchg
test
mov
sub
movsb
sbb
push
cmp
cmp
add
stos
test
fisubs
popa
add
ljmp
dec
rolb
push
je
jl
jmp
mov
mov
or
icebp
lret
adc
add
or
lcall
inc
and
and
mov
lcall
or
add
fldenv
test
pop
std
xor
sbbb
adc
mov
test
xchg
dec
pop
movb
cmp
je
movsb
pusha
jle
pusha
mov
mov
adc
fs
lods
xchg
loop
mov
je
or
out
fcomip
sub
iret
rclb
cli
notb
outsl
mov
loope
mov
sahf
iret
out
inc
pop
enter
aaa
adc
xchg
add
rcll
lods
add
shrl
sti
cmp
mov
pop
stos
mov
mov
push
dec
mov
sti
je
mov
movb
pop
mov
loop
cmp
or
les
jne
cmpsl
push
insl
pop
push
mov
xchg
mov
or
cmc
outsl
add
cmpsb
adc
aam
addb
adc
and
out
xor
pop
shrl
mov
test
sbb
loope
or
jmp
das
fadds
xor
cmp
std
cmp
add
pusha
push
xchg
add
sub
mov
cmpsl
jbe
pop
adc
and
mov
std
mov
adc
jg
xor
adc
lock
and
inc
add
jl
iret
les
push
clc
incl
les
add
xchg
and
adcb
mov
xor
jb
out
xchg
jg
movsb
dec
js
mov
jle
and
mov
or
jbe
sub
fiadds
adc
mov
jg
xor
push
xor
or
movsb
and
adc
das
cli
outsb
xchg
test
mov
cmpsl
pop
lret
xor
jae
adc
xor
lods
scas
scas
xchg
adc
loopne
iret
in
mov
or
lods
ljmp
loop
addl
bound
add
cltd
xchg
repz
rolb
add
jb
mov
outsb
rdtsc
or
add
push
xor
cmp
mov
jg
mov
rcll
jo
add
jb
mov
inc
shrl
push
inc
sbb
push
cmp
insb
pop
lds
subps
xor
or
ds
outsl
div
jo
add
pop
jle
jb
rcrb
jae
adc
loop
dec
std
and
pusha
or
xor
push
bound
cli
push
insb
pop
add
pusha
push
imul
dec
cld
jg
inc
add
loopne
mov
mov
dec
filds
test
adc
mov
mov
cmpsb
push
push
xchg
adc
iret
mov
in
incl
rorb
jecxz
or
adc
in
jb
mov
adc
or
je
sbb
out
or
adc
inc
idiv
xchg
popf
nop
jge
adc
push
mov
mov
faddl
mov
jb
cmpsl
push
ljmp
xor
imul
adc
mov
jnp
push
jo
mov
add
xchg
std
test
mov
mov
or
push
xor
xchg
les
arpl
add
dec
cli
and
ficoms
add
add
inc
mov
loope
jo
sub
sub
bswap
sbb
js
add
rolb
add
pop
adc
add
add
and
dec
das
xchg
push
pop
add
pusha
add
jo
push
or
and
inc
add
outsl
xor
mov
adc
scas
fimull
sarb
lock
pusha
or
sub
insl
jo
lret
fidivs
jnp
or
call
rcr
test
addb
jp
mov
push
dec
test
and
movsl
lcall
or
and
lcall
cmp
or
pop
push
mov
add
jg
sub
mov
and
xlat
xor
and
adc
mov
fiaddl
xchg
out
or
adc
inc
push
jno
loopne
adc
lcall
mov
repnz
or
dec
nop
push
cmp
and
or
loop
push
ljmp
negl
mov
pop
or
push
mov
out
rcrl
loopne
lds
push
lret
pop
mov
xor
dec
mov
and
sbb
fisubrl
xchg
rcrb
pushl
out
cmp
sbb
add
pop
dec
inc
movsl
add
std
add
pop
addr16
push
les
mov
inc
loop
add
adc
add
mov
rolb
decb
stc
ja
loop
rorl
push
sarl
or
jo
mov
fcmovbe
mov
cmpsb
std
data16
mov
adc
aas
sub
pusha
mov
adc
les
scas
nop
sub
pop
pop
rclb
sbb
xor
pop
sarl
lcall
adc
test
icebp
fistpll
jbe
or
roll
push
jo
loopne
incl
mov
pop
fdivrs
add
add
sbb
out
js
mov
adc
aas
scas
lretw
daa
push
xor
fisubl
mov
mov
or
scas
aaa
add
das
mov
hlt
xor
ljmp
and
pop
or
add
shl
roll
cmc
lock
push
ss
mov
inc
adc
imul
mov
sbb
mov
mov
inc
push
cmc
sbbb
ss
adc
or
and
cld
add
mov
cmp
rolb
sub
mov
cmpsb
lret
add
sbb
ficoml
int
push
inc
jg
shlb
sbb
bound
mov
xor
fistpl
not
jno
inc
pcmpeqb
and
mov
pop
cmp
idiv
adc
cmp
pop
mov
je
ljmp
pop
lret
mov
mull
xor
rolb
mov
xor
shlb
cmc
je
idivl
xor
out
daa
pusha
mov
jp
add
repz
bound
or
mov
pusha
add
xchg
cmp
cs
outsl
js
sub
inc
push
adc
mov
adc
inc
adc
and
scas
adc
inc
subb
rcl
jbe
jmp
jne
add
xchg
popa
and
scas
mov
mov
aaa
jne
jg
out
adc
pusha
ret
scas
scas
push
xor
cld
push
test
sub
sub
push
push
scas
or
push
add
push
mov
fbld
mov
mov
data16
mov
aaa
jbe
aad
add
into
add
cld
cmp
and
jno
mov
fnsave
iret
ja
cld
mov
adc
orb
lock
shlb
test
or
inc
push
lret
pop
addb
pusha
and
decl
push
push
mov
push
xor
mov
loopne
cmp
mov
aas
pop
call
or
cmp
dec
lock
inc
sbb
mov
fisubrl
pop
sub
rol
test
jmp
lcall
cmp
out
loopne
orb
jecxz
stos
and
aam
testl
add
aas
es
repz
jle
je
std
adc
jle
into
aam
aam
add
lods
jg
das
sub
roll
jno
loopne
adc
sbb
cltd
in
jo
rorl
push
shr
bound
jno
lock
cli
sbb
jmp
adc
fildll
jle
out
add
or
cmp
jnp
mov
incl
inc
cmpsb
cmpsb
add
repz
pusha
xchg
jo
imul
xchg
inc
mov
call
shrb
pop
notl
daa
lock
ss
inc
aas
mov
test
sub
xor
mov
loop
cmp
cld
repz
cmpsl
aad
and
dec
push
cmpsb
faddp
and
fucomi
push
lret
cli
add
push
add
jge
mov
js
addr16
rcrb
adc
loopne
movsb
ljmp
xchg
mov
adc
mov
add
cld
mov
push
lods
mov
pop
fs
and
mov
pop
add
out
pop
cmpb
decl
sbb
inc
adc
xchg
adc
push
sbbl
push
fdivs
pop
jbe
gs
gs
scas
sub
out
add
mov
cmc
cmp
or
add
shll
push
outsb
incb
out
sar
inc
aaa
dec
repnz
pop
dec
enter
divb
push
popf
sahf
hlt
adc
jl
mov
test
clc
sub
push
sbb
lcall
xlat
out
sbb
iret
xchg
faddl
xchg
add
fimull
xchg
rorb
inc
jb
out
jl
jmp
push
add
or
imul
mov
pusha
xlat
incl
jo
xchg
lods
scas
mov
loop
mov
xchg
or
inc
jnp
incb
pop
insl
incl
add
xor
rolb
push
inc
mov
adc
or
sub
stc
cmpb
je
cmpsb
cld
pop
int
cmc
loop
data16
cmpb
scas
sbbb
lret
xchg
rcr
add
sub
add
das
xor
mov
lds
inc
xor
aaa
cld
pop
cmp
mov
mov
ret
sbb
cmpb
add
pop
fcos
ffreep
sbb
shlb
cmpb
adcl
std
mov
aaa
and
ret
rcll
shll
jg
pop
sub
inc
and
mov
orl
cmp
dec
in
decl
inc
add
adc
je
inc
pop
shll
and
sti
pop
or
pop
mov
dec
mov
js
add
add
sti
hlt
out
adc
or
mov
fidivrl
add
les
pushl
xlat
pop
movl
xlat
insb
jbe
mov
add
jmp
add
rolb
in
rcrb
xchg
loopne
or
test
sti
incl
jbe
fwait
push
and
xor
sub
mov
sbb
aas
xchg
jmp
mov
inc
iret
adcb
sarb
data16
insl
add
add
inc
jg
inc
lock
aam
mov
adc
sbb
and
fcomp
mov
imul
fisubl
scas
lret
pop
sbb
xor
add
sub
mov
inc
lock
leave
cs
xchg
ret
scas
fdivl
add
pop
adc
inc
inc
dec
insb
inc
dec
scas
push
or
pop
pop
and
mov
movsb
xor
mov
ret
add
fcmovnb
xchg
adc
push
hlt
lods
or
or
int3
ss
lock
adc
xor
mov
inc
sbb
test
cli
shl
xchg
idivl
pusha
inc
ret
loopne
nop
insl
ljmp
and
mov
xchg
and
xchg
and
scas
xor
jbe
jp
call
xchg
xchg
cli
cmpsl
scas
lods
pop
cli
inc
xchg
pop
and
les
pop
movsb
or
mov
sti
adc
int3
repz
push
loopne
adc
mov
mov
mov
jg
xchg
push
mov
cltd
cmp
repnz
sub
add
add
shlb
mov
loop
and
and
mov
inc
jl
xchg
jbe
cmpsl
pop
sbb
cmp
neg
aaa
mov
js
add
xchg
jmp
loop
inc
sbb
or
cmpsb
dec
test
cmp
test
int
inc
sbb
xor
cmp
push
jl
jmp
test
or
xchg
int3
and
push
ds
mov
sub
in
jb
xor
lock
pop
or
imul
and
cmp
aaa
movsb
ret
push
jmp
je
pusha
adc
adc
add
xchg
fldcw
inc
inc
mov
imulb
fidivrl
scas
mov
and
inc
ds
add
ss
fidivl
and
in
fbld
jg
xchg
or
add
or
inc
ret
in
mov
mov
cmpsl
jecxz
out
stos
les
stos
lret
mov
mov
and
test
mov
fbld
sbb
shrd
lods
add
pop
popa
mov
or
add
ss
fbld
enter
add
mov
fwait
mov
mov
cltd
je
mov
mov
mov
jmp
arpl
adc
cld
rorb
mov
mov
addb
inc
pusha
xchg
add
out
push
add
dec
jno
movsb
mov
pushl
add
or
or
add
sbb
decl
inc
and
cmp
aas
ja
push
cld
cli
ret
mov
dec
mov
movsb
mov
inc
pop
cmp
in
adc
loopne
mov
loope
add
adc
or
ljmp
in
mov
jecxz
jmp
pop
std
add
andps
and
adc
rclb
adc
jnp
jnp
cs
cmpsb
mov
out
clc
jg
jg
and
inc
and
jecxz
sbbl
popa
outsb
bound
add
push
decl
inc
inc
add
pop
and
push
je
add
ret
sub
ja
xor
addl
mov
imul
pop
imul
call
lock
inc
adc
outsb
sbb
aas
adc
jl
sbb
jl
push
je
outsl
lcall
and
mov
test
xchg
and
xor
dec
and
pusha
sbb
mov
xor
cmp
es
adc
pop
inc
add
add
fwait
inc
or
inc
or
ds
das
xor
add
les
and
sti
jmp
or
repnz
xchg
inc
ret
adc
fmuls
decl
les
mov
jmp
push
jb
out
je
or
out
adc
inc
cld
push
lods
ja
mov
adc
add
adc
add
or
add
in
or
pop
add
push
add
jp
insl
loop
push
add
fstpt
scas
lock
or
inc
ret
mov
mov
adc
je
push
cmovp
lret
lods
jmp
test
shll
sbbb
aaa
lds
stos
lock
mov
xorb
jbe
add
arpl
jg
lock
rcrb
push
sub
loopne
push
or
hlt
or
add
cmp
outsb
push
and
pop
add
xchg
loopne
push
rol
and
add
nop
test
insl
pop
sarb
das
clc
dec
ljmp
xor
mov
add
ret
and
lods
ljmp
movsb
cld
ljmp
mov
push
xchg
sbb
push
rcrb
add
ret
pushl
mov
xchg
outsl
mov
out
mov
pushf
and
cmp
and
lahf
xchg
inc
cmpsl
cmpsb
adc
mov
stos
cld
push
aam
xor
add
lock
pop
mov
mov
fwait
leave
or
call
fwait
mov
in
fs
hlt
daa
add
iret
add
cmp
stos
pop
fdivrs
mov
lock
inc
nop
mov
add
adc
lahf
adc
xor
fnsave
cmp
dec
add
jg
xchg
adc
mov
push
pop
inc
jo
les
mov
aam
cmp
adc
aam
nop
jl
xchg
inc
lods
jecxz
decl
xchg
mulb
and
cli
sbb
fs
and
or
xor
or
adc
ljmp
stc
or
cmpsl
xchg
and
jecxz
rorl
testl
jae
and
adc
adc
es
mov
fyl2x
inc
fldt
jmp
sub
es
add
add
ljmp
mov
pushf
cmp
test
ficoms
dec
pop
push
or
mov
hlt
seto
cltd
xchg
or
cmp
cmp
mov
mov
add
mov
push
sub
xchg
cmp
xor
mov
inc
rcr
test
xor
mov
add
adc
outsb
xor
out
pop
call
jae
and
pushf
xchg
cmpsl
pusha
inc
enter
jg
mov
sub
and
stos
jmp
push
outsb
aad
lods
xchg
fwait
add
xchg
daa
push
push
mov
test
jmp
jnp
lret
and
and
mov
jo
js
sti
fbstp
fstpt
icebp
add
xlat
pop
ret
xor
inc
sub
loopne
or
pop
fdiv
data16
in
mov
loopne
xchg
add
jmp
or
and
rcr
das
mov
pusha
lock
iret
jp
or
sbb
mov
loope
hlt
jg
adc
loopne
mov
adc
jecxz
push
pushl
idivl
sar
push
mov
cmp
dec
mov
popa
in
ljmp
or
jo
push
add
addb
rolb
push
xchg
or
inc
add
push
mov
rol
bound
or
cs
clc
bound
int3
jb
inc
pop
xchg
lahf
ret
mov
xchg
inc
popf
xorb
mov
addr16
in
mov
fdivr
daa
inc
add
out
mov
xchg
inc
add
jmp
mov
mov
in
aad
mov
add
jmp
adc
rorb
lcall
mov
mov
mov
lock
inc
jmp
add
push
adcb
add
pushl
pop
sti
push
adc
mov
repz
xor
dec
decl
sti
inc
in
mov
jp
sbb
pusha
mov
filds
sbb
sbb
mov
pop
xor
mov
lahf
cmp
jmp
pushf
mov
mov
jbe
fwait
push
mov
dec
xor
cs
call
xor
push
xor
jo
ljmp
sar
lock
rclb
incl
xchg
mov
pop
nop
and
or
sbb
lcall
and
cld
call
outsb
mov
inc
ds
sbb
loop
mov
je
pop
jae
rol
add
ljmp
and
fnstcw
addl
inc
aas
xchg
push
pusha
push
push
and
sbb
pusha
ret
cmp
orb
push
jp
in
incb
shlb
rcrb
std
cmpsl
or
pop
into
mov
add
movb
aaa
dec
ss
icebp
das
mov
adc
cld
add
xor
enter
ljmp
loopne
sti
test
mov
inc
and
pop
xchg
dec
mov
cltd
add
pop
mov
test
add
sti
rcrb
rclb
mov
out
add
mov
adc
clc
inc
and
andl
pop
mov
and
and
stc
xchg
jo
add
sbbl
aas
mov
leave
add
sti
subl
dec
loop
outsl
add
xchg
mov
pop
dec
xchg
sub
xchg
popa
pop
xor
push
jnp
or
iret
pop
mov
insb
cmp
inc
cmp
or
or
lea
adc
mov
and
ficoms
sub
int3
jg
xor
mov
aam
out
add
aas
add
adc
cltd
add
inc
add
sti
or
inc
arpl
mov
lock
pop
fs
mov
inc
inc
jp
add
push
push
pop
test
dec
in
ljmp
or
or
pop
mov
xor
xor
into
xor
xchg
jecxz
push
pop
out
push
inc
mulb
sti
orb
and
jbe
in
add
push
stc
addl
das
xchg
call
and
mov
cmp
icebp
call
adc
enter
push
add
jmp
pusha
rolb
mov
add
orb
mov
add
dec
jmp
jmp
adc
mov
xlat
addb
xor
ja
xor
lods
push
jnp
push
mov
mov
push
in
mov
and
js
imul
pop
lods
add
or
shrl
out
orl
xchg
push
fisubrl
xor
or
addl
test
add
mov
or
mov
dec
push
jnp
and
lods
sarl
xor
cli
cmp
add
pop
ss
andb
or
cmc
jg
cmp
pushf
pop
loopne
pop
lea
test
add
mov
mov
loop
shlb
mov
add
insl
std
addl
mov
in
add
or
xorb
addb
adc
mov
jecxz
push
pop
addb
idiv
add
inc
sub
jl
and
xchg
call
insb
or
orb
notl
push
add
cld
add
or
adc
shl
incl
or
add
add
jmp
pop
mov
ja
cli
add
jle
scas
lods
push
and
les
pusha
fdivs
call
cmpsb
div
sti
push
inc
or
sub
movsb
aaa
ss
incb
cld
sbb
xor
mov
loop,pt
mov
jg
decb
std
lea
rorl
mov
or
mov
add
bound
out
rorb
inc
xor
add
or
or
adc
xchg
call
divb
inc
out
sti
adc
ret
xor
inc
xchg
pop
jbe
mov
adc
push
sahf
inc
std
inc
mov
sub
pushf
scas
ror
add
sbb
aas
push
adc
std
decl
push
shl
movsb
add
shl
xor
pop
loopne
fistps
or
je
sbb
xchg
mov
sub
sar
or
in
and
or
pusha
add
je
pop
fadds
sbb
push
roll
es
je
outsl
rolb
int3
cmp
add
inc
or
jp
xchg
pusha
cmpsb
inc
push
add
call
movsb
notb
add
repz
mov
iret
and
mov
xor
out
cwtl
mov
push
xchg
cld
dec
pop
sub
inc
ja
inc
test
loopne
adc
push
add
or
subb
jb
cmp
mov
icebp
das
shlb
add
and
sbb
jp
loopne
push
jbe
and
and
hlt
jecxz
push
add
push
bound
cli
push
mov
inc
inc
and
out
xchg
cs
ja
mov
and
jno
inc
and
jno
clc
pop
and
push
mov
lods
xchg
gs
loop
jmp
and
pop
xchg
icebp
push
pop
push
ljmp
or
inc
inc
andl
sbbl
shlb
shll
mov
mov
inc
cmp
sub
les
jp
and
cmp
shl
cltd
lcall
and
jb
push
pop
jno
jb
lret
popa
das
fcoms
jg
ja
fisttps
loop
pop
and
imul
add
pop
fs
mov
sub
or
loopne
imul
pop
mov
adcb
sub
xor
add
push
mov
mov
addr16
push
addb
push
lods
dec
add
cld
sbb
mov
or
pop
mov
add
inc
imul
aaa
adc
call
sbb
mov
dec
xchg
loope
scas
pusha
and
and
pop
std
pusha
push
adc
add
popa
mov
inc
jb
clc
les
jo
data16
pop
inc
scas
ds
scas
jb
mov
push
sbb
in
add
adcl
adc
cmp
xor
scas
scas
scas
roll
adc
jb
pusha
pop
cmp
xchg
out
les
movsl
push
in
popa
jb
mov
push
loopne
dec
cltd
sub
test
outsl
clc
or
mov
inc
or
dec
add
push
xor
xchg
ljmp
pop
hlt
outsl
inc
leave
rclb
std
push
sbb
add
mov
dec
repnz
jl
std
push
jecxz,pn
add
in
pusha
scas
jo
sub
add
xorb
adc
pop
xchg
pusha
js
and
dec
mov
mov
call
or
cmc
in
add
orl
pop
mov
push
lock
out
jo
lcall
in
inc
out
les
mov
adc
inc
adc
push
pop
jecxz
pop
sbb
pop
fdiv
adc
mov
adc
inc
push
xor
cmp
enter
sub
fbld
mov
mov
jl
and
ja
jg
hlt
mov
gs
add
jg
cld
add
inc
add
and
dec
cmp
mov
pusha
and
and
mov
outsb
add
xchg
jo
xchg
xor
stos
mov
pop
sbb
inc
scas
push
pop
imul
sbb
sbb
std
filds
cld
sbb
scas
mov
mov
push
or
inc
and
or
mov
add
jl,pt
std
jbe
jb
testb
out
icebp
cmp
ds
roll
lods
add
sarb
push
xor
add
mov
mulb
xor
dec
adc
lock
lret
mov
movsb
push
cld
ja
test
ljmp
pop
dec
out
adc
add
mov
mov
dec
cmp
mov
push
adc
jbe
sti
mov
lock
je
xor
cli
dec
stos
adc
pop
add
or
test
subl
aam
cmp
push
rolb
or
jl
fldt
push
push
ret
add
pop
jl
aaa
adc
roll
xor
sub
jg
cs
pop
inc
insb
jno
adc
int
add
sub
movsb
xor
add
mov
inc
adc
xchg
ljmp
or
cli
adc
cmc
jg
mov
pusha
dec
pop
cli
and
pop
mov
mov
call
test
add
inc
icebp
push
add
dec
std
inc
dec
add
mov
inc
push
in
rolb
inc
fcmovb
or
fcoms
push
ficoml
adc
nop
add
jl
adc
sbbl
adc
xchg
das
rorb
adc
shl
adc
adc
add
sbb
xchg
and
pop
push
or
xchg
or
test
push
sub
incl
xchg
jle
or
jo
lods
inc
or
adc
xchg
or
push
and
test
ss
outsl
pop
sbb
dec
inc
and
mov
cmp
mov
or
mov
test
dec
loop
adc
inc
mov
sbb
lock
jmp
ds
loope
push
dec
dec
les
out
mov
push
ds
adc
movsl
ret
int
incb
pop
and
js
pop
mov
decl
add
imul
add
xor
ljmp
mov
sub
test
pop
push
arpl
add
push
push
in
sbb
inc
xchg
movsb
cli
ljmp
add
sti
add
mov
je
jecxz
cmpsl
xchg
test
lock
cmp
filds
xchg
cmp
cmpsb
push
pop
pop
addb
addb
dec
dec
scas
mov
sbb
mov
adc
adc
sub
push
inc
jb
push
jg
dec
pusha
pop
mov
jmp
jle
push
icebp
xchg
jb
pop
or
shrl
and
add
scas
js
add
and
mov
or
sub
mov
std
add
mov
call
ja
testb
adc
or
push
adc
xchg
sub
fbstp
sbb
cmpb
test
pusha
cmc
mov
add
adcb
push
sub
or
pop
mov
mov
xor
int
adc
xor
xor
ret
lds
add
push
fistpll
int
sub
add
popl
push
xchg
cs
movsb
adc
adc
lock
lock
xor
addb
test
and
arpl
or
pushl
adc
jnp
sub
ds
add
jne
aaa
lds
test
je
stc
test
mov
inc
push
cmpsb
out
std
decl
push
jne
shlb
push
ja
or
call
push
jle
mov
add
outsb
sbb
mov
cmp
jno
xor
pop
jne
jne
or
sarl
sti
mov
push
or
sub
pop
pop
jg
dec
test
shl
mov
sti
ja
jb
iret
lock
sub
cmp
repz
stos
add
push
xor
pop
sbbl
into
andb
or
stos
movsb
push
cwtl
cmp
xor
fimull
xor
stc
int3
sub
and
cld
xor
js
cmp
lea
jecxz
adc
add
cli
repnz
xchg
nop
test
adc
push
add
jecxz
mulb
cltd
nop
inc
sti
adc
aad
cld
dec
add
add
repnz
and
pop
adc
in
push
stc
fs
in
aaa
std
nop
xchg
xor
filds
push
cmpsb
repnz
aaa
mov
push
js
pushl
mov
or
clc
jno
movsl
fbld
and
lock
std
call
or
inc
ja
in
icebp
loop
ljmp
sar
push
xchg
mov
rolb
fcmovb
call
push
mov
adc
jb
pop
or
or
push
add
add
lods
inc
fsubrs
mov
enter
stos
repz
aas
inc
or
push
rclb
sbb
cld
and
mov
jle
fimull
adc
mov
insl
jnp
cmp
jmp
adc
xchg
cld
or
add
add
add
pop
out
lods
mov
int
add
in
mov
out
jmp
fbld
jne
cld
mov
jecxz
mov
cmp
int3
and
mov
std
mov
out
mov
cmp
add
adc
xor
dec
aad
ljmp
dec
sbb
fiaddl
jmpw
es
shl
push
mov
inc
icebp
lock
add
or
enter
or
mov
inc
sti
ja
fdivl
xor
jbe
xor
sbb
lcall
adc
adc
cwtl
add
jl
mov
adc
out
and
inc
outsl
cmp
add
push
jbe
adc
mov
adc
div
jg,pt
inc
mov
fists
or
xor
jl
ret
mov
add
sti
je
pop
movsl
fidivl
repz
or
xchg
aam
stos
ss
movsb
data16
in
pop
adc
mov
jg
je
aam
aaa
pusha
add
ds
mov
or
test
test
aas
sarb
or
cmpb
data16
mov
dec
movsb
jns
hlt
inc
imul
addr16
jb
addr16
pop
gs
incb
dec
inc
pop
add
mov
jo
and
ret
rorb
xlat
and
cmp
jb
cld
xchg
cmc
shrl
add
xor
mov
cwtl
mov
imulb
fwait
mov
xchg
pop
xor
adc
std
add
pop
push
add
and
fstpt
sub
push
adc
out
mov
outsl
add
andb
push
fcompl
pop
jecxz
add
pop
add
insb
loope
and
mov
stos
mov
push
mov
fwait
add
cld
aas
pop
cld
and
mov
jl
jge
mov
xor
std
add
add
xor
jmp
into
jl
filds
jno
psrld
fimull
pop
sbb
incb
inc
jbe
out
cld
mov
subb
dec
pop
push
ds
andl
decb
jg
lock
addb
mov
and
addb
subb
mov
jmp
incl
mov
test
in
mov
adc
push
push
cmpb
andb
daa
sahf
inc
xorb
xchg
test
mov
int
test
mov
pop
or
hlt
mov
adc
or
mov
mov
jg
and
jb
dec
mov
pushf
push
stos
inc
pop
ret
gs
clc
ja
jecxz
sub
js
data16
bound
pop
fldenv
decl
imul
push
fdivs
imul
inc
arpl
xchg
nop
pop
ret
jnp
shlb
les
inc
imul
cwtl
xor
sbb
inc
fs
arpl
arpl
cmp
pop
popa
loopne
xor
es
jmp
inc
call
xchg
or
inc
clts
arpl
mov
dec
out
dec
mov
nop
cltd
outsb
cmp
sahf
mov
test
add
inc
sbbb
js
xor
ja
incl
lock
jp
add
inc
jl
adcb
je
inc
aam
add
idiv
pop
sbb
adc
inc
or
jo
rolb
add
cmpsl
push
xchg
aam
addr16
jbe
and
lcall
add
jecxz
test
mov
push
push
pop
popa
int
fdivs
push
test
incl
push
cli
outsb
add
sarb
mov
sti
addb
add
pop
mov
orb
push
mov
adc
les
pop
jnp
loop
dec
arpl
fidivs
pushf
lock
mov
sbb
fisubs
jb
or
lcall
ret
xchg
dec
add
cmp
adc
push
into
add
jno
pop
lods
xor
add
std
push
ffree
add
inc
dec
jmp
jns
mov
jmp
sub
add
rol
out
inc
mov
adc
jns
shlb
filds
and
or
adc
enter
inc
xor
negl
xorb
push
mov
adc
roll
call
mov
dec
fs
insb
rorb
adc
ret
adc
loopne
inc
test
add
lcall
mov
roll
in
in
adc
adc
fwait
aad
insb
outsl
cmp
push
xor
xchg
push
and
out
cmpsb
pop
loopne
jg
les
add
add
xchg
sub
ret
cmp
mov
and
xchg
bound
stos
lret
popa
jle
nop
mov
popa
add
or
or
addl
xor
mov
jg
and
cld
add
lcall
cmp
imul
jnp
mov
jb
rorb
jp
add
jmp
sti
inc
xor
inc
test
push
roll
sbb
js
fstpt
pusha
test
ds
mov
jmp
loopne
incl
incl
mov
test
and
dec
gs
ret
loopne
cli
test
sbb
adc
mov
mov
subb
outsl
mulb
les
movb
mov
or
fisttps
dec
xor
pop
jl
push
mov
push
adcb
jb
call
filds
push
jecxz
pushf
add
jmp
push
test
mov
outsl
push
pusha
int
and
push
aad
inc
xchg
inc
fdiv
mov
fadds
stos
fdivs
xor
push
add
jmp
cmp
mov
and
cld
loop,pt
lcall
sbb
fstpt
push
scas
cld
int
mov
mov
and
pop
addb
adc
pusha
or
mov
aaa
fistpl
add
out
fs
lock
je
sti
je
jno
adc
adc
xor
add
cwtl
aaa
jo
jg
push
cmpsb
pop
sub
test
or
sbb
mov
mov
notb
sahf
nop
outsb
cli
jg
add
mov
mov
mov
xor
pusha
jbe
aaa
frstor
cwtl
add
adc
cld
ja
fists
je
add
jbe
add
dec
cmp
lods
add
mov
push
jb
negb
outsl
jmp
dec
inc
mov
mov
sti
mov
je
lahf
dec
xchg
dec
es
or
or
push
xchg
xchg
rcl
and
pusha
push
mov
mov
or
push
cmpsb
cmp
push
jo
and
or
aam
loop
mov
adc
xor
dec
and
or
sbb
jg
mov
push
and
jo
inc
jl
ret
pushl
cmp
jnp
mov
std
insb
pop
adc
push
xchg
les
mov
aam
add
incb
push
fbld
sahf
xchg
lcall
push
loope
test
mov
adc
cmp
rorb
jecxz
aaa
inc
add
subl
lds
dec
rclb
clc
xchg
mov
jne
inc
and
lcall
popa
jo
addb
adc
orb
cld
inc
adc
mov
jg
sbb
or
mov
roll
lock
inc
pop
cmc
inc
push
jbe
push
rolb
rcr
jne
add
hlt
lds
mov
jne
adc
nop
pushl
je
insl
push
add
subl
inc
outsl
cli
incl
cmpsb
mov
add
add
lret
push
mov
inc
scas
divb
push
fisubl
inc
push
in
adc
divb
mov
push
les
or
incl
rolb
loop
push
mov
fisubl
or
test
push
roll
mov
divb
pushl
push
mov
loopne
and
rorl
mov
dec
add
notl
loopne
mov
pop
push
aad
push
les
daa
mov
push
dec
push
inc
mov
fidivs
ret
adc
push
pop
mov
stc
pusha
jbe
xchg
inc
or
lret
push
repz
push
aaa
jge
push
incb
or
sbb
add
mov
inc
je
in
int3
sub
les
pop
dec
adc
pop
cld
add
test
ds
fdivr
sub
call
pop
mov
adc
adc
adc
je
incb
pop
or
call
xor
mulb
inc
push
jo
in
or
fwait
xchg
scas
jg
and
mov
jecxz
or
sarb
xchg
clc
mov
add
or
cmpb
sbb
inc
adc
or
popa
xlat
or
jbe
adc
add
mov
dec
push
scas
lods
mov
mov
cld
call
sti
idiv
push
sbb
add
imul
inc
icebp
add
add
push
dec
hlt
add
sub
xor
lock
fisubs
mov
or
mov
cmpsl
mov
jl
dec
mov
inc
push
out
dec
jns
cmpsb
lock
or
cmp
and
mov
ret
push
mov
dec
ret
lock
jns
ret
mov
mov
sub
jl
push
xor
lahf
or
and
ljmp
jg
pop
insb
mov
fs
add
inc
icebp
mov
fiaddl
ret
aam
jbe
fiaddl
or
push
ret
fimuls
push
fcmovnu
lods
jg
sub
inc
pop
incl
cmc
and
icebp
add
jnp
mov
push
jnp
push
or
iret
shrb
testb
pop
iret
pusha
add
fcoms
sti
fstpt
xor
ret
ret
jno
jge
pop
addl
mov
iret
mulb
pop
pop
and
cmp
cmp
mov
in
pop
std
adc
add
lock
loope
inc
or
fwait
dec
adc
sbb
adc
push
adc
lods
inc
icebp
inc
add
dec
or
nop
loope
inc
add
in
loopne
or
sbb
imul
xchg
jbe
aad
addl
sti
jle
xchg
rclb
mov
cs
cwtl
test
cld
mov
sub
jne
jbe
inc
or
mov
or
inc
add
js
sbb
mov
std
js
pusha
faddl
jo
imul
xchg
or
xchg
fimuls
mov
inc
push
mov
nop
decb
push
cmp
repnz
clc
jg
mov
jb
inc
lock
mov
call
enter
inc
jg
push
mov
inc
add
mov
xor
xor
jp
jg
mov
xchg
adc
decl
mov
add
into
jmp
loopne
xor
clc
lahf
inc
pop
jmp
dec
mov
leave
fsubrs
sub
or
add
jl
clc
das
clc
cmp
inc
int3
push
xchg
mov
pusha
ret
lcall
add
test
ljmp
cmp
inc
nop
movsl
mov
mov
adc
das
inc
or
lea
repnz
enter
add
and
pop
adc
add
xor
addl
add
aas
loopne
add
add
push
je
xor
or
sbb
jne
add
dec
inc
jnp
inc
and
xor
jmp
add
lock
mov
in
fbstp
sub
aad
adc
ds
repnz
push
arpl
sub
cmp
outsb
hlt
jbe
test
call
ljmp
mov
fidivl
jbe
jne
mov
aaa
cltd
adc
cmp
mov
pop
inc
sti
and
and
adc
iret
add
jne
std
inc
inc
jmp
adc
jge
ljmp
mov
adc
fstpl
adc
or
lcall
roll
or
cld
pop
loopne
movsb
adc
addl
lds
or
adc
push
add
lods
std
aaa
insb
and
inc
push
xchg
mov
mov
sbb
pusha
xchg
or
adc
push
pop
test
repz
lcall
cmpsb
push
sar
push
cld
subb
imul
test
int3
outsb
in
push
and
or
add
push
adc
mov
cld
pushl
cmp
andb
push
rclb
in
jo
mov
fcmovb
fadds
faddl
int
jp
in
dec
xchg
xorb
add
sub
pop
jo
rclb
mov
sbb
mov
out
clc
inc
pop
add
gs
push
add
je
xor
jnp
rolb
push
cmp
add
ljmp
rorl
ljmp
add
push
incb
sahf
sbbb
hlt
ret
xor
adc
shlb
and
xor
adcb
add
jle
int
pop
icebp
mov
or
adc
xor
xor
adc
idiv
lcall
enter
and
rorb
adc
xorl
les
cli
ss
repz
enter
pop
pop
push
push
mov
xchg
mov
mov
call
mov
lahf
int3
add
and
adc
mov
mov
adc
hlt
mov
push
fwait
ret
push
dec
xchg
fists
and
lcall
out
inc
addr16
and
push
and
or
push
mov
cltd
in
lds
or
std
sarl
push
fimull
cmp
or
pushl
rorl
mov
push
les
arpl
or
inc
rclb
xor
rorb
add
int3
add
outsl
or
inc
or
or
and
push
pop
sbb
pop
test
insl
add
mov
mov
fldt
xchg
sbb
loopne
popa
popf
jg
outsl
xchg
ret
je
adcb
insl
jecxz
push
sub
dec
mov
lahf
test
sbb
roll
shlb
cli
jmp
cltd
add
nop
sub
fs
sub
jo
jno
pop
enter
dec
int3
rolb
and
outsb
push
add
or
and
cmp
lock
mov
inc
jle
loop
jbe
push
mov
jb
loop
inc
add
pusha
add
icebp
xor
sbb
cld
adc
mov
out
incl
push
stc
insb
lahf
cmp
mov
xor
mov
mov
mov
push
orl
out
add
les
decl
sub
push
add
data16
data16
loop
jecxz
xor
or
mov
sbb
outsl
push
incb
shlb
add
mov
sbb
mov
aam
les
sbb
mov
dec
pusha
add
jo
loopne
xchg
mov
or
add
and
orb
sub
lea
adc
mov
and
add
aaa
dec
push
sbbl
lock
ljmp
mov
cmc
mov
mov
cmpsl
and
or
fwait
lock
fisttps
pop
popa
cmp
repnz
test
fbstp
xor
or
call
xchg
or
mov
fisttps
xor
or
push
pop
and
pop
icebp
and
add
ljmp
cmc
adcl
cwtl
mov
inc
xor
and
jnp
aaa
add
cs
arpl
jae
add
push
fdivr
incl
adc
jp
cmp
xor
mov
popa
scas
clc
push
cld
jo
pop
mov
rol
pop
mov
inc
hlt
push
test
call
push
adc
shl
add
push
out
mov
std
mov
add
mov
mov
mov
and
pop
or
idivb
repz
rolb
xchg
dec
imul
xor
inc
pop
sbbl
push
add
dec
add
inc
add
clc
out
js
lds
lret
dec
inc
adc
pop
push
and
add
xchg
incl
adc
insl
adc
ss
xor
push
xchg
outsl
push
lods
clc
add
aaa
enter
inc
sahf
scas
addb
inc
push
daa
mov
loop
je
aaa
add
xor
test
shll
clc
adc
jne
cld
lds
mov
ret
fistps
lret
adc
mov
orl
aam
ljmp
xchg
das
aam
les
mov
roll
push
cmp
jo
pop
sti
call
std
pop
dec
int3
xchg
icebp
lds
cmp
adc
rorl
jle
jbe
xor
daa
hlt
mov
xor
fistl
jno
jecxz
mov
mov
mov
hlt
xorl
sub
push
lahf
incl
or
mov
mov
add
sbb
add
mov
push
mov
das
push
aam
add
cmp
std
fcmovnu
imull
inc
add
fdivrs
testb
add
cmovno
popa
sbb
push
data16
mov
mov
sbb
int
mov
or
cmp
dec
lcall
fisttpll
imul
mov
lea
push
je
insl
and
bound
xor
jg
mov
in
mov
lods
mov
jno
mov
sti
out
pusha
aaa
mov
and
mov
xor
or
add
cs
jg
mov
jecxz
out
sub
outsb
add
ss
xor
fwait
scas
fldt
adc
inc
ss
insl
loopne
cmp
lods
push
push
mov
xor
repnz
jns
cmpsl
mov
popf
pop
stos
rcrb
incl
adc
sti
adc
rol
jb
xor
cld
adc
and
pop
add
push
out
aam
mov
push
insb
lock
jo
cld
repnz
xchg
jp
push
or
pop
pusha
loopne
les
pop
sahf
xor
clc
decl
inc
add
call
jl
add
mov
das
pushl
add
clc
shlb
loop
jo
out
sub
shll
push
xchg
adcb
bound
aaa
sarl
stos
hlt
loope
xor
dec
or
fmull
or
stos
mov
je
std
add
pop
adc
add
xor
shrb
jmp
std
rolb
fwait
mov
push
inc
mov
jb
push
adc
inc
nop
add
adc
addl
push
add
add
test
cmp
add
clc
cmp
push
push
mov
mov
in
mov
and
push
jp
jb
mov
je
xor
scas
xlat
or
jmp
inc
cld
cmp
or
pop
xchg
and
pop
jle
and
push
mov
add
ljmp
mov
mov
pushl
mov
mov
add
pop
decl
add
mov
mov
pop
mov
popf
adc
pushl
sub
lock
xor
andb
pop
add
mov
xor
cmp
inc
roll
ret
add
push
mov
incl
lds
leave
add
paddb
add
jle
add
add
lock
lret
jle
and
and
mov
add
repz
and
adc
test
inc
pop
xchg
cs
inc
jno
incb
mov
add
or
test
mov
fdivl
or
add
jbe
xchg
mov
mov
nop
and
or
sub
inc
in
mov
dec
add
dec
rclb
add
sub
and
mov
pop
add
mov
je
repnz
mov
sti
fs
aam
insb
sub
pushf
ja
ret
pop
cmp
je
jno
jg
pop
pop
dec
mov
xchg
orb
jbe
testl
inc
mov
mov
lock
mov
dec
add
push
bound
data16
inc
sbb
xchg
fcmovu
cli
outsb
jp
clc
push
xchg
inc
jbe
cli
arpl
mov
xchg
cld
push
jg
sbb
inc
fbld
movsb
dec
push
ret
out
addl
push
popa
jno
testb
add
mov
jo
fcmovnu
popa
dec
int3
aas
push
push
jns
sub
and
push
push
clc
lods
add
push
push
les
lcall
mov
push
push
or
jns
rclb
movsb
es
mov
addb
add
sarb
mov
add
out
xor
mov
add
adcb
push
add
and
test
icebp
lock
cmp
push
imul
xor
dec
and
or
and
xchg
clc
das
xor
ds
jbe
mov
je
imul
das
jb
das
jbe
je
movsb
cld
mov
daa
push
pop
jl
loope
hlt
jb
jb
add
add
jecxz
aaa
loopne
pop
or
stos
add
adc
push
jp
sbb
adc
mov
and
lods
addr16
icebp
mov
in
ljmp
jecxz
add
ret
sahf
in
add
inc
cmpsb
mov
aad
xorl
outsl
cld
stos
fists
test
mov
mov
and
or
and
mov
jp
cmc
sub
out
enter
sub
outsl
mov
mov
mov
shll
orb
test
inc
inc
mov
sbb
xchg
fsubrs
mov
and
bound
cld
incl
ljmp
add
inc
or
push
lock
add
push
jae
adcb
shll
inc
pop
mov
xor
addl
loopne
std
sbb
push
mov
mov
cmp
xor
pop
mov
pop
mov
sbb
cvtps2pd
cmp
and
cli
dec
and
pop
cld
mov
pusha
xchg
loopne
adc
or
adc
mov
and
imul
mov
sbb
rcrb
lods
mov
lods
loopne
mov
jg
ljmp
dec
xchg
in
rclb
mov
mov
outsl
inc
pusha
sbb
xor
rclb
jno
sub
jecxz
adcb
aaa
cltd
add
adc
pop
mov
dec
ljmp
inc
and
cmc
mov
push
jge
add
xor
jns
add
movsl
jo
ret
pop
mov
bound
and
add
push
enter
std
jg
add
std
jnp
arpl
add
and
cli
shll
and
shlb
scas
pusha
adc
mov
rcrb
ja
or
addl
and
shlb
sti
fildl
adc
and
test
and
push
sbb
xchg
push
jo
inc
or
loopne
lock
xchg
cltd
decb
fcoms
or
inc
add
jg
ja
push
adc
lds
adc
insl
in
insb
popa
add
dec
mov
clc
add
sbb
or
jp
addb
and
daa
mov
push
and
test
stos
leave
push
sar
mov
orl
mov
bound
test
shlb
outsl
aam
dec
push
jnp
xchg
jbe
push
push
sub
popa
jb
fstpt
loop
inc
jl
je
inc
cmp
jb
jno
lcall
mov
xchg
insb
orb
mov
xchg
movsl
and
lahf
inc
add
push
loop
or
mov
fmull
add
mov
call
loop
int
xchg
std
movsbl
and
aam
add
add
pop
adc
call
jo
adc
ds
lock
mov
inc
std
jb
clc
mov
and
ljmp
pop
repnz
ret
sbb
or
jp
xchg
sarb
fists
add
xor
jl
fcmovb
outsb
and
fimuls
pop
rcll
adc
movsl
push
jle
jecxz
sub
hlt
scas
xchg
rolb
xchg
sub
pop
push
mov
add
lret
outsl
fstpt
lea
rolb
fidivl
mov
jge
lock
lahf
cli
outsl
push
mov
dec
mov
mov
adc
je
add
cmpl
dec
test
adc
adc
and
ljmp
lock
dec
xor
sub
pop
mov
repnz
add
mov
cmp
pop
pushf
xor
and
pop
sbb
adc
add
rcrl
adc
pop
push
stos
mov
mov
stos
fs
push
and
or
pop
loop
cmp
adc
adc
sti
sbb
dec
lock
jo
add
inc
cmp
mov
scas
xor
xchg
adc
fidivrl
neg
xchg
xor
push
mov
push
decl
cmpsl
imul
xor
aad
pushf
jge
xchg
or
into
push
adc
test
insl
fsubs
add
lods
add
push
push
mov
sbb
cmpsl
jge
mov
or
js
add
jle
data16
push
and
mov
add
add
pop
fiadds
xchg
pop
add
or
in
cmpxchg
pop
sbb
add
les
mov
dec
loop
dec
add
mov
push
add
pop
add
in
jo
and
fs
xchg
and
dec
push
insb
xor
and
adc
aad
je
xchg
mov
into
rcl
pusha
addl
add
leave
mov
mov
xchg
sub
addr16
mov
or
outsl
push
lcall
loop
inc
lock
sub
mov
sub
inc
add
or
push
jg
imul
lods
lds
jo
or
pusha
das
sub
mov
std
jo
lret
or
or
outsb
xor
cmc
add
xor
das
scas
imul
mov
mov
js
pop
std
aad
adc
cmp
jge
stos
mov
jmp
inc
add
sub
cmpl
jl
mov
aaa
loopne
mov
ljmp
ss
cld
cmp
int
mov
add
push
add
or
cmp
fcompl
push
xchg
add
subb
fwait
sub
jno
mov
out
push
ljmp
cs
icebp
mov
stos
rolb
inc
orb
pop
mov
mov
insl
pop
add
jp
push
xor
adc
adc
add
jmp
inc
jp
sahf
and
push
mov
or
fadds
push
loop
call
inc
ja
jle
mov
adc
cmp
loope
dec
push
movsb
andl
adcb
rcrb
xor
pop
xor
pop
loopne
lock
pop
in
hlt
xor
mov
fildll
faddl
or
fdivl
rclb
mov
cs
add
jb
call
cmp
push
aaa
add
cld
xor
outsl
or
call
ja
add
add
sbb
and
xor
out
add
or
pop
test
fwait
add
pop
jno
xchg
aad
out
add
mov
test
testl
mov
ret
jecxz
rcrl
jg
icebp
outsl
sbb
clc
je
nop
add
mov
clc
outsl
mov
and
adc
stos
xchg
add
insl
push
sbb
xchg
fdivrl
jbe
inc
and
inc
add
push
cmc
mov
and
push
ljmp
je
mov
xchg
push
push
in
scas
jbe
stos
jg
jmp
or
mov
not
pushl
add
add
jp
mov
add
std
je
xchg
cltd
add
mov
sbb
xor
jmp
or
out
clc
pop
addb
and
jno
adc
mov
pop
les
inc
mov
push
cld
in
jg
or
or
idivl
and
and
ja
mov
ja
adc
push
pusha
mov
adc
cmc
mov
repnz
jbe
and
nop
adc
or
inc
jp
movb
clc
repnz
push
lahf
icebp
stos
push
sbb
sub
out
pusha
xchg
or
mov
sbb
aam
cltd
nop
push
sbb
data16
or
les
adc
xchg
pop
loopne
and
jp
or
mov
icebp
adc
mov
shlb
inc
pop
mov
bound
out
and
jb
cmpsl
push
sbb
iret
mov
sub
or
lcall
add
les
pop
jl
mov
add
add
or
add
inc
and
aam
aad
fistl
cs
mov
outsb
adc
jl
push
push
decb
mov
jl
sub
std
mov
rolb
lock
and
aaa
jle
add
or
and
or
test
xchg
enter
sarl
or
mov
or
mov
orb
mov
jnp
notl
pop
dec
mov
ficomps
fiadds
je
or
stos
and
push
lock
xor
inc
or
js
mov
aam
mov
adc
std
mov
add
add
add
pop
mov
jl
mov
inc
shll
js
push
je
push
add
mov
jb
sbb
ss
stos
or
mov
cmp
adc
inc
jae
jp
add
xor
inc
pop
mov
jne
lds
jmp
dec
push
sub
jne
inc
test
mov
push
lock
xor
lea
sub
repz
test
insl
pusha
adc
mov
pop
daa
mov
adc
data16
je
scas
xchg
mov
imul
add
jbe
pop
push
mov
xor
adc
jbe
mov
inc
jp
add
jnp
pop
add
ss
subb
inc
insl
stos
inc
pusha
mov
ja
xchg
movl
jo
fcom
add
or
jle
sbb
mov
add
pop
cmp
jo
fstl
add
or
les
aaa
lea
cmp
ds
cmp
out
mov
jl
mov
sbb
jmp
subl
push
xchg
incl
ss
repnz
add
add
mov
sub
mov
add
or
and
stos
adc
mov
pushf
or
andl
xor
test
push
xorb
sub
pop
bound
push
fdivl
mov
inc
add
mov
fs
adc
add
aam
hlt
stos
clc
mov
aaa
mov
adc
orl
das
call
add
push
mov
push
stos
jnp
adc
mov
add
or
cld
test
jb
outsl
cli
sbb
add
jbe
or
fwait
xor
adc
sub
xchg
mov
sbbb
outsb
push
or
mov
sbb
in
sbb
pushl
jnp
adcb
jl
add
jecxz
add
call
inc
add
out
rcrb
adc
subb
pop
test
dec
add
data16
mov
sub
pop
outsb
sahf
jae
es
mov
or
xchg
inc
and
sar
push
jo
adcl
cltd
ret
cld
inc
cltd
add
jne
adc
popf
add
lcall
push
cmpsb
pop
mov
aaa
cli
inc
arpl
add
aad
shlb
ljmp
loopne
inc
addr16
inc
addr16
stos
in
lock
ret
push
jl
inc
call
cmpb
outsb
jl
out
add
ret
sub
data16
adc
cld
or
addb
or
jmp
xchg
or
cmpsl
test
clc
cs
push
dec
subb
sbb
cmp
pushf
stos
dec
push
aam
sahf
stos
cli
cmc
or
or
mov
push
jne
and
rorl
adc
fadd
and
push
and
mov
mov
fnsave
scas
je
test
jecxz
rcrl
adc
pop
test
add
jle
add
mov
pop
xor
ja
decl
and
pop
sub
cli
cmp
add
mov
and
cs
hlt
std
addb
out
xchg
shlb
pusha
and
or
scas
push
add
clc
scas
pop
xchg
dec
hlt
sbb
add
sbb
es
in
fstp
sbb
sti
and
add
cmc
push
pop
sbb
cmp
outsb
shll
xchg
inc
pop
test
add
pop
shrb
xor
aaa
mov
dec
ds
dec
mov
aaa
adc
int3
je
lret
sub
icebp
ljmp
jnp
imul
xor
addl
adc
rolb
fsubrs
jp
xor
cmp
jne
loopne
dec
sub
push
and
stos
add
mov
push
ret
xchg
enter
jp
jbe
pop
xor
or
push
add
mov
adc
or
adc
mov
inc
and
daa
pop
add
cs
mov
rorl
dec
add
stos
loopne
insb
incl
or
js
mov
inc
pop
or
cmp
cld
mov
mov
push
mov
add
scas
bound
and
sub
cs
add
repnz
add
lods
lcall
loopne
outsb
push
cmp
ret
repz
lcall
inc
or
sub
adc
dec
xchg
loope
adc
aam
mov
or
int3
xchg
xchg
subb
ss
mov
popa
sub
sub
in
and
pusha
push
jbe
mov
pop
and
and
add
shr
hlt
and
inc
xor
and
jno
lret
ret
lret
add
and
nop
outsl
add
nop
in
lock
loopne
clc
syscall
cld
xorb
pop
add
and
clc
cmpsb
clc
mov
add
mov
xorl
xchg
xor
orb
inc
xchg
or
cmpb
jo
adc
test
pusha
push
mov
pop
or
dec
insb
and
sbb
insl
test
push
push
xor
test
je
or
or
decl
sbb
sbb
sub
test
and
or
dec
jne
les
mov
and
rcrb
incl
dec
dec
sti
std
ss
mov
adc
idiv
incl
or
xchg
push
xor
fidivl
popf
or
jbe
lret
adc
clc
jmp
mov
mov
add
cmc
rol
and
mov
and
add
ss
gs
pop
test
std
sti
or
cmc
sbb
push
or
mov
pop
imul
ds
push
add
mov
cwtl
xchg
mov
sub
fcomi
inc
and
and
pop
mov
pop
cmp
das
cli
lcall
add
in
cwtl
mov
out
sbb
and
in
mov
ss
inc
fs
adc
lret
pusha
push
nop
add
decb
gs
add
sbb
add
sbb
cmc
and
jmp
mov
mov
pop
adc
push
add
xchg
inc
das
dec
out
xchg
xchg
adc
ret
inc
or
cmp
rclb
xlat
test
and
dec
je
mov
fists
es
inc
lods
or
sarl
xchg
sbb
ret
adc
je
je
insl
push
les
mov
dec
lods
xchg
stc
cli
xor
or
loop
xchg
inc
clc
scas
dec
cld
and
add
add
xchg
je
orl
sub
inc
mov
hlt
mov
inc
lahf
mov
enter
jb
inc
fldt
cld
sbb
or
or
aas
xchg
mov
pop
and
pop
mov
jne
sub
push
or
add
cmp
and
push
adc
push
mov
inc
loop
fadds
push
pusha
lods
jmpw
mov
inc
testl
pushl
sub
rorb
xchg
rorb
jne
push
inc
xchg
jo
sarl
jmp
test
xchg
mov
add
xor
xor
dec
and
mov
add
sub
add
adc
mov
sarb
ficoms
sbb
or
pop
shrb
mov
sbb
inc
mov
fmull
mov
icebp
mov
je
inc
add
mov
push
add
add
test
jl
ljmp
xor
inc
pop
js
stos
repz
push
inc
dec
movsb
repz
mov
adc
pop
add
pop
mov
cmp
push
adc
pop
xlat
orl
test
mov
and
jle
add
pusha
add
dec
fs
sub
stc
mov
aad
scas
pusha
add
das
mov
jb
loop
and
scas
lods
inc
sbb
loopne
mov
decl
jbe
jo
lods
push
xchg
xchg
movsb
inc
jbe
je
incl
xchg
ljmp
test
jo
out
adc
loopne
sub
mov
add
inc
mov
fistl
ret
inc
add
ret
data16
adc
ljmp
loop
dec
jbe
addb
add
pop
insl
pusha
js
inc
scas
jb
jno
scas
add
mov
push
or
adc
sub
mov
jb
sub
jl
mov
out
sti
cwtl
cmp
push
push
call
clc
push
lods
je
sub
int
or
mov
popl
addb
jg
fiadds
nop
push
pop
and
pop
pop
mov
js
pop
nop
adc
loopne
call
lock
sti
lcall
lods
xchg
jo
add
pop
xchg
sub
std
adc
or
push
sti
cmpsl
or
jl
inc
lret
scas
inc
cmpsb
das
cltd
and
idiv
or
pop
push
das
adc
and
cs
add
ss
push
or
cld
incl
hlt
adc
push
jl
std
adc
movsb
cltd
and
cld
pop
pop
pop
mov
jbe
xor
adc
dec
shrb
sub
aad
loopne
test
and
imul
mov
and
int
test
jbe
cld
mov
je
cltd
icebp
mov
xlat
push
sub
adc
mov
mov
xchg
sbbl
add
std
ljmp
add
inc
loope
pop
jge
ljmp
shlb
rolb
pop
and
jmp
movups
and
xchg
adc
daa
lods
mov
adc
out
andb
xchg
bound
inc
mov
nop
pop
sub
xor
push
xor
fildll
loopne
mov
cmc
cmp
dec
lock
push
in
xchg
inc
cli
call
jecxz
cmp
sbb
cmp
ds
adc
out
lods
push
pop
lcall
pushl
fbstp
mov
cli
mov
fildl
pop
aas
xlat
rolb
add
cmp
jge
arpl
inc
shlb
mov
call
imul
in
das
mov
add
fistl
push
movl
xchg
and
mov
pusha
ds
pusha
xor
lcall
or
scas
movsl
push
add
push
add
scas
mov
jno
ja
add
xchg
dec
roll
xor
rcrb
loop
dec
adc
je
lcall
das
adc
pop
and
cli
mov
mov
mov
mov
pop
nop
or
mov
pcmpeqw
pop
push
pop
in
xor
imul
lock
lcall
xchg
jmp
xchg
rorl
xor
ret
mov
pushf
loopne
sub
shlb
mov
ljmp
and
scas
in
jae
lods
mov
sti
jmp
xchg
mov
jp
je
rclb
inc
icebp
ss
xchg
add
decl
mov
mov
mov
lods
scas
test
adc
pop
jg
add
inc
sbbl
mov
and
iret
icebp
pop
mov
and
mov
inc
stos
xor
push
mov
add
mov
sub
and
inc
or
mov
mov
jg
sbbb
test
sbb
mov
mov
mov
and
and
call
xchg
fs
cmp
cli
push
mov
je
loope
mov
mov
outsl
test
orb
jne
icebp
cs
add
clc
ja
mov
add
outsl
out
mov
inc
test
clc
jg
adc
std
icebp
mov
std
jbe
test
andl
mov
scas
faddl
orb
push
shlb
pop
add
hlt
call
out
add
mov
mov
mov
inc
hlt
jl
std
push
mov
cmp
loopne
fstpt
sub
arpl
dec
lock
mov
inc
jmp
jle
icebp
pop
mov
dec
testl
cli
inc
test
inc
or
xchg
push
pushaw
lcall
push
push
mov
push
push
mov
cltd
rorb
mov
fdivl
mov
and
inc
subb
lahf
add
loopne
jp
mov
adcb
js
pushl
pop
pop
adc
cmpsb
ljmp
in
loope
mov
aaa
lock
add
jecxz
pop
or
lods
push
ret
addb
adc
and
les
rolb
dec
rolb
or
pusha
loope
or
addr16
mov
in
cs
insb
pusha
cmp
sub
and
mov
inc
add
jno
add
mov
pop
lret
xor
pushf
mov
adc
xor
add
imul
in
push
test
pop
stc
mov
add
rorb
cwtl
jo
pop
mov
or
ds
jecxz
dec
aad
out
inc
inc
xchg
loope
sub
mov
les
cmp
jbe
adc
xchg
add
xchg
dec
stos
and
out
lcall
mov
scas
and
xchg
adc
out
in
add
test
fistps
sbb
js
jmp
std
mov
add
add
stos
inc
xchg
mov
out
out
add
sbb
xorb
mov
jle
xor
aaa
arpl
icebp
add
test
sub
test
clc
sub
add
dec
movsl
subb
xor
jmp
add
pop
add
cmp
xchg
adc
je
sbb
mov
mov
ljmp
mov
pop
adc
jl
add
je
sar
adcl
scas
scas
cmp
add
add
add
pop
je
add
mov
das
mov
cmp
and
fs
inc
stos
cli
xchg
add
maxps
mov
dec
ret
incl
or
or
addb
fsubs
lcall
lock
cld
add
incb
pop
lcall
out
mov
xchg
test
shlb
and
or
mov
addb
mov
push
incl
sub
andb
idiv
incl
in
mov
orb
subb
subl
icebp
push
clc
lea
sti
pop
sub
or
push
add
repz
ljmp
shlb
sub
sub
rcrw
inc
mov
inc
mov
lcall
sti
or
inc
and
sarb
and
adc
std
mov
jp
jl
sbb
cmc
sub
bound
inc
call
sub
mov
mov
xchg
push
popa
nop
mov
inc
push
icebp
jg
lods
inc
cmp
dec
add
cmpl
scas
mov
add
lds
test
ret
aaa
cmp
dec
mov
inc
xchg
std
and
xlat
fildl
jle
mov
push
adcl
cmpsb
inc
aas
push
add
rcrb
nop
cmp
jge
rolb
mov
jge
cmp
es
adc
push
lea
outsb
out
adc
fsubs
imul
ljmp
add
inc
cmpsb
scas
mov
add
adc
notb
jno
xchg
sbb
jne
scas
add
jp
jbe
bound
popa
bound
fisubrs
aas
add
cli
out
std
mov
xchg
mov
inc
out
test
ljmp
or
cmp
dec
lods
roll
push
andl
inc
out
lods
lods
add
mov
shr
add
inc
cmp
xchg
fcmovnb
repz
hlt
xchg
shll
je
mov
in
outsl
and
cwtl
mov
mov
cltd
orb
ss
jmp
and
stos
aam
rcl
movsb
dec
repnz
ret
and
aam
out
mov
push
stos
mov
mov
cmp
clc
aaa
gs
cwtl
mov
sub
jo
add
cmpsl
mov
in
call
xchg
es
pop
push
adc
cmp
pop
xchg
out
jne
scas
sub
rolb
and
and
ret
int
mov
sub
and
sub
pop
addb
addl
or
or
hlt
inc
jg
test
and
je
sub
mov
mov
mov
push
inc
add
mov
mov
js
loop
mov
add
mov
sbb
pop
or
or
jbe
fisttpl
add
loopne
inc
mov
add
addl
bound
ljmp
ja
and
rorb
cmovo
mov
das
ret
enter
es
daa
add
ret
movsl
jg
les
and
or
jnp
inc
subb
mov
inc
push
je
cmp
std
adc
test
cmc
adc
mov
sarl
mov
lret
dec
mov
pushl
jecxz
idivl
add
mov
loope
mov
inc
cmp
out
pusha
sub
add
dec
adcb
in
inc
sub
or
or
mov
lds
rorl
inc
lcall
out
shlb
jecxz
inc
and
je
sbb
fildl
sbb
pop
lcall
adc
and
scas
mov
push
jl
inc
sub
mov
mov
and
cmp
outsl
mov
lock
jl
adc
inc
int3
pusha
lock
shrb
mov
and
lods
bswap
incl
and
addb
mov
add
cmp
add
inc
cmp
les
lods
mov
cmc
mov
push
pop
aad
incl
mov
mov
inc
leave
scas
in
mov
cmpb
mov
adc
cld
aaa
push
les
adc
jo
dec
jo
dec
xchg
push
pop
xor
add
or
enter
dec
xor
pop
jl
mov
jle
push
push
pop
popa
outsb
add
lock
jecxz
xor
or
adc
or
popa
add
inc
adc
fadd
test
inc
call
jp
and
lock
push
in
mov
mov
pushf
fisubrl
test
ljmp
jb
add
pop
jo
incb
bound
lcall
stc
mov
mov
xchg
stc
adc
sub
push
add
sub
pop
sti
mov
mov
test
repz
fistl
or
push
or
push
cmc
and
xchg
jp
clc
mov
popa
pop
clc
add
jo
xor
leave
nop
sbb
sub
aas
cs
cmp
mov
jo
mull
jg
mov
xor
ja
inc
add
mov
sub
sub
mov
push
mov
inc
mov
mov
les
insb
xchg
mov
fcoml
push
inc
js
incl
lock
mov
push
add
outsb
or
in
mov
ret
xlat
nop
inc
in
jg
pop
mov
pop
and
cld
xchg
ljmp
or
scas
inc
adc
pop
cmp
push
fcom
and
mov
mov
cmpsl
pop
icebp
ljmp
inc
and
inc
aaa
rcll
mov
dec
cmp
mov
mov
in
add
sub
test
push
in
xor
or
mov
fbld
orb
div
loope
inc
lea
dec
jo
xchg
inc
cli
add
cmp
in
test
int3
loopne
add
je
or
or
inc
jle
test
repz
or
xor
cmp
ljmp
mov
out
cmpsb
and
mov
dec
xchg
or
or
cli
mov
or
or
aas
repz
je
cmp
jno
mov
push
or
aaa
jecxz
cli
pop
or
ja
ffree
je
jle
push
popa
add
pop
or
cld
sub
je
add
test
nop
enter
push
ret
mov
lods
push
ss
pshufw
adc
notl
sub
push
mov
push
pop
xor
out
push
cmp
push
lock
ror
pusha
aaa
pop
mov
xchg
inc
pop
lods
ss
mov
sub
test
or
push
mov
nop
mov
pushl
inc
stc
adcb
stc
xor
adc
divb
sti
adc
loope
and
pushl
inc
mov
mov
mov
std
fistpll
addr16
cld
cmp
call
add
ds
aam
cltd
add
stc
test
icebp
scas
stos
scas
test
pop
loopne
push
push
sub
push
mov
or
imul
mov
cmp
jle
add
call
stos
pop
lock
mov
mov
or
mov
and
loopne
test
adc
insl
ret
cltd
jns
or
add
adc
add
jle
inc
inc
add
outsl
mov
rclb
out
ret
push
mov
loopne
ret
fisubrl
xor
aam
pop
pop
inc
ds
lock
push
jno
dec
inc
lock
dec
jle
std
push
jg
mov
jo
repz
test
add
mov
pop
xchg
pusha
add
and
jmp
or
xchg
push
inc
adc
notb
jg
ljmp
mov
nop
pop
pop
jp
std
das
andb
call
icebp
xchg
ljmp
repz
jmp
mov
insl
fs
add
pop
add
pop
incl
cld
aaa
sub
xorl
push
add
jecxz
sbb
ret
dec
inc
lods
or
xor
dec
jp
adc
les
mov
je
and
mov
fistpll
dec
lret
sti
addl
mov
movsb
je
xchg
lods
pop
xor
es
arpl
push
into
pop
or
add
nop
or
das
clc
decl
add
cmp
or
mov
mov
adc
push
xchg
out
leave
cmp
fwait
or
fwait
sarl
int3
or
ja
or
inc
mov
mov
dec
ret
push
or
sbb
or
or
call
rorb
insl
out
loopne
test
xor
movb
cld
out
es
xchg
daa
and
loope
cli
ljmp
sbb
cmpsb
inc
inc
mov
jbe
loop
push
mov
insb
sub
ret
shll
push
dec
add
add
in
rorb
pop
adc
add
shll
add
lret
jle
call
fistpll
ss
jl
push
imul
and
mov
movsb
mov
icebp
ret
lock
mov
sub
add
out
xor
cmpsb
fstpt
or
or
jl
loop
test
lods
xchg
rcll
add
xchg
push
loopne
adc
inc
mov
or
test
sbb
ror
repz
add
aaa
inc
dec
movsl
or
nop
sub
nop
inc
push
push
invd
outsl
add
push
add
shll
cmpsl
loopne
scas
add
or
call
mov
mull
push
rcrb
mov
ljmp
mov
mov
mov
lret
rcrl
jle
cli
mov
mov
or
addr16
add
add
lods
adc
jmp
mov
ret
aam
aad
call
loopne
outsb
adc
inc
mov
fisttps
cmp
sub
iret
or
mov
outsb
roll
or
xchg
outsl
movsl
mov
cld
pop
in
scas
add
add
lock
test
std
ret
xchg
lods
sar
sbb
jo
add
fbstp
xor
inc
add
pop
inc
sub
adc
cmp
cmpsb
mov
and
pop
lods
mov
dec
add
pushl
pop
sbb
jmp
sbb
and
mov
or
push
daa
cmp
and
enter
jp
cmpb
cmp
outsl
bound
aaa
inc
std
add
pop
icebp
sbb
lods
insb
pop
mov
mov
mov
mov
add
mov
addl
sub
sub
cwtl
pop
cli
add
leave
mov
imulb
cltd
loop
ret
adc
jb
push
mov
je
lcall
loopne
add
les
add
mov
fbstp
cs
add
add
nop
mov
pop
dec
sub
sub
ds
mov
dec
xchg
or
add
adc
add
sbb
dec
ja
jne
pop
add
jp
js
xchg
sub
jo
outsb
cmc
adc
adc
out
mov
mov
rcrb
add
push
out
out
out
hlt
add
fcmovnu
xor
in
pop
xor
pop
jo
fnstsw
mov
xor
jg
pop
jb
out
outsl
fistps
call
cmc
and
in
dec
loop
sarl
mov
sub
add
pushf
icebp
add
inc
inc
pop
pushf
fldt
pushl
sub
cmpsl
jo
dec
popl
wrmsr
adc
imul
add
push
inc
cmp
adc
lahf
mov
cmp
jns
add
ret
subb
decl
andb
sub
fcmovbe
in
xor
add
test
and
stc
dec
decl
pusha
cld
add
out
sbb
sbbb
add
xor
scas
push
and
adc
adcb
adcl
sub
cs
aaa
or
inc
and
sbb
adc
incb
cmc
sbb
xorb
adcb
loop
xor
movsb
in
mov
xor
jmp
cwtl
push
xor
ds
sub
mov
push
xchg
sub
mov
inc
jne
mov
mov
jb
xlat
add
or
push
push
out
dec
jb
push
add
and
test
jmp
pop
mov
movsl
int3
ds
push
inc
fisttps
cmpsb
or
lret
pushf
ret
add
nop
add
jmp
int
ret
or
aam
fdivr
jg
cmp
adc
add
jnp
pop
cmp
clc
cmp
add
pop
push
xchg
adc
fs
mov
incb
imul
xchg
push
adc
jl
rep
xchg
inc
repnz
sbb
add
add
nop
pop
mov
pushl
and
test
out
inc
sbb
sbb
xchg
add
cmp
iret
lods
and
fisubl
ss
and
or
popf
scas
jo
add
pop
inc
fcoms
fsubl
je
sub
out
out
or
or
add
add
cs
push
out
add
ljmp
xchg
add
rcrb
lret
cwtl
or
in
add
outsl
push
lock
push
pop
test
clc
incl
mov
pop
jbe
pop
imul
lods
sti
add
pop
mov
mov
or
fadds
cld
inc
data16
enter
add
pushf
ret
cmp
cmp
or
mov
aam
lods
test
push
fs
movsb
pop
shll
pop
sub
sbb
push
add
imulb
push
mov
aaa
arpl
add
mov
jbe
lods
clc
push
push
push
cmp
or
inc
cmc
pusha
or
mov
cmpl
je
nop
popa
sti
aas
je
bound
push
add
add
jle
lock
cs
add
popa
jns
js
dec
add
das
adc
xchg
inc
sbb
pop
inc
fbld
mov
insb
push
xchg
loop
add
mov
fists
pop
rcl
mov
loopne
loopne
push
ret
xchg
fs
lea
sbb
dec
push
loopne
cmp
add
call
repz
pop
jo
stos
jp
insb
add
andl
pop
pop
sbb
pop
pushf
or
cwtl
lods
xchg
addl
add
cld
rorl
mov
fbstp
aaa
repnz
and
xchg
rorb
icebp
push
shlb
and
jmp
pop
loopne
mov
cmpsb
inc
add
cmpb
jmp
and
outsl
cmp
add
and
testl
cs
xor
inc
add
jle
adc
sbb
cs
sub
jb
xchg
clc
jg
aas
or
pushl
into
out
test
pop
jbe
test
push
lods
in
pop
or
add
popa
cvtps2pi
ja
pop
movsb
adc
mov
jnp
xchg
cli
sbb
adcl
mov
aaa
pop
clc
mov
push
or
add
popa
ret
sub
add
sub
call
cwtl
roll
sub
jl
paddd
inc
pop
xor
call
js
inc
add
push
aad
shll
pop
pop
es
jo
adc
or
sub
movsb
je
push
jmp
cmpsb
and
repnz
inc
xchg
rolb
jnp
adc
sub
aaa
rcll
sub
or
mov
lcall
inc
and
loope
orb
mov
mov
sbb
pop
push
cmc
mov
xchg
movsl
add
loopne
inc
ret
mov
std
inc
lods
shll
xor
xor
cmpsb
jb
and
and
xchg
rcrb
movsl
add
xchg
dec
jo
jbe,pt
test
mov
inc
aaa
jmp
inc
mul
adc
ja
data16
sbb
out
cltd
mov
mov
and
loopne
bound
or
loope
pop
lods
aaa
inc
out
scas
xchg
ljmp
mov
mov
sbb
dec
sub
mov
cmp
lret
jl
inc
jecxz
push
or
daa
je
pop
dec
std
push
xchg
ja
or
jg
aam
lret
add
shrl
inc
pusha
pop
add
and
shlb
inc
and
push
lcall
xchg
fisubrs
or
aam
popa
inc
cmp
cmp
pop
incb
mov
adc
push
lret
xchg
repnz
ljmp
xchg
fistpll
mov
sbb
mov
iret
mov
or
fldenv
icebp
mov
jmp
pop
hlt
xor
in
orb
shlb
shlb
popf
sar
stos
bound
ljmp
xchg
mov
jb
test
call
or
jo
orb
cmp
fistl
lods
mov
lock
inc
cli
push
popw
add
lock
sbb
ljmp
and
pop
xchg
lods
test
adc
aad
mov
aam
mov
ret
or
and
mov
cwtl
in
and
sub
adc
insl
es
dec
shrb
stc
add
or
push
jnp
cld
int
add
dec
and
or
pop
push
add
and
sbb
shrb
and
jns
pusha
add
jg
lock
sub
ret
xor
jno
mov
jle
pop
add
mov
mov
xchg
or
sub
mov
push
testl
jo
and
jbe
add
add
mov
rcll
inc
leave
sub
movsb
mov
lock
scas
rcrl
addb
mov
push
sbb
adc
push
clc
jno
testl
or
mov
push
push
add
jecxz
adc
les
nop
sub
push
mov
loopne
mov
cmp
or
hlt
ds
lods
pop
mov
add
mov
andb
in
fistpl
sub
lock
add
fs
roll
inc
sub
ljmp
loope
ljmp
and
decb
mov
les
pop
test
inc
scas
xor
adc
aas
push
add
jp
test
scas
push
inc
xor
adc
pop
mov
add
stos
cs
or
mov
pusha
push
lock
sbb
push
int
push
cld
mov
jb
add
adc
mov
faddp
pop
adc
mov
ret
mov
ret
outsl
clc
add
xlat
ret
mov
cmp
scas
add
add
xchg
es
jg
and
rorb
push
dec
adc
sub
xor
lods
push
mov
push
cmp
les
inc
xor
mov
push
or
add
or
xchg
add
mov
jg
outsl
jmp
inc
xchg
lahf
sqrtps
add
in
nop
add
inc
es
jg
pop
cwtl
out
adc
mov
adc
adc
dec
bound
in
clc
push
lret
cmpsb
xchg
mov
sbb
cmp
dec
push
mov
add
in
pop
shr
lock
mov
filds
push
cmpl
pop
mov
inc
dec
or
cmpsb
movsb
ja
mov
mov
leave
and
mov
cld
js
inc
jg
pop
aad
cmp
lods
inc
add
adc
add
and
xchg
add
adc
je
sbb
sub
sbb
lcall
adc
and
loopne
cli
iret
push
add
call
add
jmp
add
xchg
inc
shl
mov
adc
mov
test
push
push
rorb
lods
or
mov
or
enter
decl
cltd
movb
mov
add
pop
mov
mov
testl
jo
xchg
cmp
pop
mov
add
incl
pop
adc
pop
jbe
or
insb
cli
mov
test
arpl
out
mov
push
fistpll
sbb
loop
out
or
rorl
test
push
pop
jp
das
testb
fsubrl
lea
mov
or
adc
incb
in
outsl
incl
mov
inc
cmp
fbstp
in
mov
dec
mov
pop
and
mov
push
pop
mull
out
and
imul
jo
add
push
jb
cli
mov
push
xchg
pop
pop
cmpsb
pop
repz
mov
nop
aas
or
aas
fistps
xchg
pshufw
inc
out
aas
pushl
les
test
vunpcklpd
sti
jg
push
add
add
dec
jo
cli
xchg
fdivs
dec
add
test
xchg
or
pop
fadd
adc
stos
decl
adc
scas
je
pop
popa
nop
test
push
pop
shlb
mov
mov
sub
add
add
outsl
clc
das
xor
mov
icebp
sarb
mov
add
adc
add
jg
jle
cwtl
xor
xor
push
scas
rolb
cs
add
test
push
ret
scas
decl
lea
aaa
sbb
xchg
push
lret
xchg
ficoml
insb
mov
in
lock
push
cmpsl
push
push
clc
adc
jecxz
and
mov
jp
dec
repz
inc
sbb
mov
sub
xchg
les
orb
loope
jg
inc
xchg
sarl
xchg
loope
adc
adc
loop
add
pushl
stos
pop
sbb
pop
push
pop
gs
andl
jg
xor
dec
bound
lret
jno
xchg
mov
insl
in
dec
mov
pop
mov
pop
push
or
dec
xchg
add
inc
mov
cli
xor
loopne
mov
and
and
mov
or
data16
add
pop
pop
dec
jp
fadds
mov
decl
dec
jns
mov
sub
lock
scas
xchg
cmc
mov
jp
inc
out
decl
cli
adc
pop
mov
mov
repnz
and
ljmp
adcb
add
add
pop
adc
mov
add
xor
fcoml
add
and
daa
mov
movsb
mov
sub
inc
mov
repz
add
pop
mov
arpl
pop
jno
jmp
incb
nop
xchg
and
xor
xor
mov
xchg
outsb
les
es
ljmp
lods
inc
cli
mov
mov
addb
jnp
xor
inc
ret
les
mov
pusha
test
movsb
xchg
hlt
inc
scas
fiadds
pop
pop
add
add
fucomip
cld
test
lods
xor
cmp
adc
test
or
add
mov
cmp
mov
mov
add
pop
mov
repz
inc
inc
popa
pop
roll
jnp
mov
cli
ja
jg
pop
pusha
push
out
ljmp
add
and
add
and
push
fnstenv
pop
jp
inc
mov
test
push
aaa
jp
aas
inc
dec
bound
lods
push
mov
arpl
cmp
lock
adcb
cmp
orb
add
roll
mov
pop
add
add
incl
jbe,pn
sub
test
sti
addb
and
xchg
inc
mov
cmpl
aas
inc
loopne
cltd
mov
mov
daa
push
gs
test
xchg
adc
adc
adc
cli
subb
add
icebp
fistpll
cmp
push
adc
loopne
in
jbe
adc
add
adc
sub
fwait
stos
push
ret
or
ljmp
mov
xor
sti
jmp
mov
out
mov
js
mov
dec
mov
in
mov
pop
nop
mov
rcrb
inc
jge
pop
cli
add
addb
cmp
adcb
mov
xorl
inc
adc
sbb
xchg
cmpsl
add
sbb
dec
je
dec
hlt
push
adc
ljmp
cmc
pop
mov
cmpsb
popa
int3
arpl
dec
add
push
out
sub
add
cld
es
dec
add
fsubrl
loop
mov
cmc
lret
aam
add
add
dec
mov
stos
stos
sbb
sti
ljmp
mov
adc
ficomps
outsl
enter
sub
stos
lods
notl
mov
popf
mov
fsubrp
jg
cmc
lods
in
cld
test
or
shrb
les
mov
icebp
je
push
adc
inc
je
add
add
jle
adc
inc
aad
cmp
movsb
sti
adc
pop
shll
mov
and
shl
aaa
loop
inc
xor
add
cld
xor
rolb
xor
outsb
loopne
cmp
mov
iret
lods
adc
add
pop
add
xor
mov
inc
aaa
cmc
mov
and
add
lods
les
pop
adc
adcl
popf
mov
orb
or
repnz
mov
xor
scas
mov
ret
or
inc
lds
pop
int3
fdivrl
pusha
push
sub
xchg
mov
sub
test
push
inc
pop
mov
or
iret
shlb
pushf
add
mov
push
inc
mov
rolb
or
and
lret
push
mov
push
add
or
and
push
jle
je
or
xchg
fiaddl
and
or
aas
loope
std
adc
add
fst
jbe
jl
sbb
mov
adc
fstpt
sub
mov
imul
lods
sub
sub
sbb
mov
inc
cld
incl
and
adcb
and
sub
jb
testl
mov
xchg
es
xchg
mov
xor
jbe
cmp
add
cmp
push
outsl
mov
adc
fs
loopne
inc
adc
xor
jae
push
or
or
cmp
sub
inc
mov
les
or
pop
jnp
rolb
lret
pop
cmp
and
fiaddl
pusha
xchg
test
std
sub
push
xchg
pop
and
xchg
xor
jno
mov
and
mov
mov
push
cltd
xchg
add
and
lcall
call
iret
inc
or
cmp
fdivl
add
loope
cmp
cmp
aaa
adc
ja
lcall
add
jb
and
cld
jl
jg
jg
shrb
and
cltd
jbe
popa
push
adc
mov
inc
in
sbb
loop
fcmovb
out
add
loope
rcrb
imul
xchg
ret
adc
adc
mov
inc
les
cltd
and
push
add
and
imul
and
testl
clc
jg
mov
mov
mov
jo
add
ja
mov
loopne
cmpb
mov
and
xor
adc
adc
repnz
pop
inc
jo
add
pop
cli
and
and
mov
lea
sbb
push
cltd
ret
and
cli
addl
inc
xchg
les
sar
daa
or
push
adc
pop
add
inc
orl
insl
ret
inc
pop
xor
out
inc
push
mov
pop
inc
adc
mov
std
pop
add
jmp
shlb
mov
lods
mov
sub
jmp
shll
imul
inc
or
lock
int3
test
imul
cmp
das
sbb
mov
mov
cld
outsb
or
add
sbb
inc
add
adc
fsubp
push
scas
lock
icebp
fisubl
incl
pop
movsl
decl
loop
adc
and
bound
jmp
or
fmul
out
fisttps
fidivrl
or
in
add
ja
jae
push
and
je
shll
add
shl
stos
sbbb
outsl
mov
add
and
lods
js
adc
or
or
and
mov
or
adc
loopne
add
inc
mov
inc
loop
loope
add
add
call
js
icebp
sbb
in
lods
popa
incl
xchg
sbb
rorb
inc
xchg
xchg
pop
out
and
push
or
push
aaa
mov
pop
or
incl
stc
mov
pop
lds
nop
push
adc
notl
xor
rorl
decl
inc
and
ror
gs
sub
mov
sarb
adc
loope
ret
sub
ds
add
in
data16
add
dec
jp
jo
or
in
es
pusha
mov
lcall
jbe
stos
cli
dec
incl
mov
cmp
ds
std
js
test
loope
insb
xor
loop
add
cmp
adc
fimull
out
xchg
lock
xor
sti
xor
push
fidivrs
into
jo
cli
fistpll
sub
ljmp
sbb
sti
jne
jmp
cmc
inc
add
int
mov
loop
je
test
add
aam
cmp
mov
fcompl
scas
or
inc
adc
addb
mov
dec
add
test
cmp
add
lock
xor
std
mov
clc
adc
ljmp
cld
jl
cmp
add
mov
mov
ds
aas
not
push
dec
push
pop
push
ss
adc
adc
lods
jne
adc
fmul
test
push
push
aaa
add
cmpsb
sub
dec
adc
cltd
push
mov
xrelease
or
inc
xor
push
ret
push
aas
les
lock
mov
sbb
insl
ret
mov
jl
incb
push
cld
or
enter
push
cld
cmp
hlt
sub
fcoms
or
mov
lcall
pop
jmp
insb
sub
and
cld
sahf
ret
or
and
nop
jl
sub
pop
call
or
ret
std
outsl
add
inc
adc
ret
std
stos
lods
mov
push
cld
mov
or
jns
xchg
clc
mov
nop
adc
iret
pusha
inc
int3
sub
adc
add
pop
subl
stos
jmp
and
cmp
or
mov
cli
les
jno
xchg
add
sub
add
les
lds
dec
add
mov
fs
rolb
add
rsqrtps
push
je
adc
and
pop
jl
mov
addb
sar
icebp
adc
loope
ljmp
int
jmp
stc
rolb
add
cld
xor
pop
sbb
stos
sub
leave
jne
cld
mov
cmp
test
aad
or
jmp
push
aam
mov
aam
aam
mov
mov
mov
pusha
sub
and
push
es
xor
out
push
or
or
jo
rorb
in
out
pop
jg
push
jb
icebp
pop
fdivs
je
out
dec
in
or
jo
sbbb
and
aam
pushf
sahf
fildl
mov
push
pop
aas
add
clc
push
or
cmc
aaa
repnz
jg
aam
fs
mov
mov
mov
add
subb
insb
ret
cmp
cmpb
cs
stos
sub
push
adc
in
imul
nop
sbb
jmp
push
jl
divl
out
ja,pn
int
les
lock
or
aad
fwait
jmp
and
subl
fidivl
mov
push
adc
xor
and
adc
andl
pusha
push
hlt
not
or
sub
jno
or
xor
sbb
jecxz
test
mov
add
sub
push
lcall
clc
orb
sub
jb
sub
aam
fidivrl
adc
test
mov
lock
add
sub
or
jne
out
cmpsb
cmp
sbb
inc
or
les
xchg
clc
adc
pop
and
orb
es
adc
cmp
fdivl
rcrb
repz
incl
jl
push
mov
icebp
mov
xchg
mov
jl
adc
call
add
sbb
mov
in
sub
stos
dec
lds
inc
sbb
mov
loopne
push
sub
add
mov
mov
insb
mov
enter
add
or
cmpsb
sti
cmp
sub
jge
insb
cmp
stos
call
data16
and
insb
jl
in
clc
push
in
mov
lds
cmp
lock
ja
add
adc
cmc
fiaddl
cmpsb
cmp
pushf
jns
pop
sub
push
sub
mov
mov
xor
push
lock
stos
insb
add
dec
cmp
repz
ja
ja
cmp
add
xchg
fcmovu
and
jo
ja,pt
sub
icebp
mov
inc
and
rorb
cld
sbb
orb
add
adc
data16
adc
lods
mov
adc
add
pop
and
add
test
test
jbe
mov
or
je
outsb
ret
loop
adc
out
les
loope
mov
pop
fidivl
pop
fs
lods
insl
es
xor
and
or
shlb
ror
xchg
pop
shll
jmp
cmp
fcmovb
loope
pop
rcrb
cmp
bound
loopne
sub
sbb
xor
adc
inc
daa
inc
repz
cltd
pop
adc
pop
mov
cmp
stos
adc
fs
inc
fisttpl
add
inc
je
inc
jo
inc
push
aad
cltd
jecxz
push
mov
add
std
outsl
mov
lock
cs
xchg
les
aas
scas
lods
jge
add
cmp
sbb
sbb
ret
in
inc
inc
out
ss
loop
push
data16
loopne
std
int
mov
pop
cld
or
cmp
out
fisttpl
sub
call
cld
sub
inc
cmp
cmp
cli
adc
inc
imulb
push
ja
push
cmp
or
cmp
sub
outsb
sub
loop
mov
add
cmc
mov
mov
mov
add
jg
push
mov
rolb
cltd
dec
jge
idiv
and
cltd
ja
divb
lods
addb
mov
and
pop
xchg
ds
mov
cli
cmpb
xchg
jbe
mov
imul
or
and
divb
xor
mov
or
add
dec
scas
lock
dec
mov
lcall
cmp
dec
dec
adc
add
inc
lret
mov
outsl
add
inc
movsb
movsb
or
sahf
lods
cmp
out
or
push
ss
cld
inc
cwtd
in
insl
call
daa
pop
inc
fmul
add
adcl
pusha
aas
les
mov
adc
lock
int3
dec
insb
mov
jl
and
sub
add
leave
test
dec
jp
mov
das
mov
mov
mov
dec
and
loope
adc
or
dec
mov
or
and
fisubs
jle
cmp
adc
cmp
divb
mov
xor
inc
push
outsb
mov
mov
lahf
xor
rolb
lock
js
mov
nop
inc
mov
orb
and
push
and
and
mov
stc
andb
leave
jo
sbb
mov
dec
das
ds
gs
pop
adc
ja
push
fdivr
xchg
aas
cmp
and
push
les
lcall
hlt
repnz
popa
out
jo
adc
and
push
mov
add
lods
dec
mov
subl
call
mov
mov
add
loop
out
add
cli
fstpt
sub
daa
adcb
mov
and
bound
or
sub
or
dec
or
add
push
inc
xlat
aaa
or
ret
add
pop
mov
mov
loopne
add
or
pop
mov
xor
adc
mov
out
xchg
mov
rolb
dec
lock
cltd
lods
fidivl
or
or
cmp
dec
js
orb
fmuls
stos
and
pop
nop
adc
mov
add
hlt
cmp
push
sbb
inc
bound
jl
adc
aas
adc
ds
add
mov
repz
out
sbb
jnp
adc
or
push
rolb
es
add
andb
ljmp
add
icebp
bound
repz
stos
mov
dec
addb
jp
dec
pop
inc
xchg
data16
cwtl
cmpsl
adc
add
add
sbb
mov
push
fcomps
push
cmp
daa
sbbb
test
pusha
dec
pop
dec
and
sub
xchg
mov
pop
add
test
ret
push
push
jecxz
addl
ret
jle
and
mov
inc
adc
or
je,pt
in
fwait
jo
jp
ja
enter
xchg
enter
jne
ss
add
loopne
xor
push
lahf
push
cmc
dec
scas
ret
pop
add
add
mov
push
std
pop
xchg
loop
ja
movl
shlb
jbe
stos
and
movb
jmp
sub
pop
and
fcompl
add
insb
cmpsb
and
fucomp
xchg
loopne
rcrb
rorb
ret
jl
cmpl
cmp
mov
sbb
subl
inc
and
stc
push
xor
mov
and
push
call
subb
inc
pusha
cmp
sub
jecxz
or
and
outsl
movsb
pop
pop
and
or
loope
pop
push
or
adcl
call
and
stos
das
xor
sub
add
add
push
inc
insb
and
adc
and
jb
dec
pop
lods
sbb
je
xchg
daa
or
or
pop
push
lock
mov
in
inc
jge
addl
jg
sti
push
dec
aaa
test
scas
aaa
sub
mov
adc
loopne
pop
cmc
cmpsb
testb
mov
jb
aam
cmpb
ds
fs
stos
loope
add
out
pusha
ds
rolb
jmp
cld
add
movsl
in
adc
or
lds
bound
lret
inc
jg
jo
and
and
add
inc
mov
push
out
or
or
faddl
sub
loope
mov
cmc
decl
and
pop
or
mov
xorl
loope
jnp
and
jb
nop
scas
pop
rcl
loope
out
and
jo
xchg
jo
mov
inc
push
pusha
sub
fbld
add
xchg
rolb
or
sbb
mov
adc
push
or
and
add
scas
je
mov
clc
adc
pop
sbb
pop
jmp
cld
add
les
je
pusha
jmp
mov
mov
sub
inc
mov
mov
jne
out
out
mov
xlat
cs
addb
std
fistl
adc
mov
and
cli
push
adc
adc
cld
push
lock
pop
sarl
and
imul
adc
mov
aam
pop
sub
add
inc
mov
lret
das
sarb
mov
divb
inc
sub
ds
mov
jbe
rorb
mov
incl
xchg
lahf
mov
mov
icebp
scas
or
mov
popa
mulps
pop
aam
lock
push
cltd
fprem
mov
cld
pop
mov
mov
lock
popa
mov
xlat
popa
iret
jnp
mov
fs
cmp
mov
or
add
adc
int
or
sub
inc
adc
loope
and
outsl
pop
and
adc
insb
mov
sbb
out
and
adcb
or
mov
add
mov
add
and
and
push
fdivp
ljmp
jp
daa
jbe
rcrb
push
sbb
iret
jg
push
jbe
pusha
push
cmp
cmc
aad
inc
inc
sarb
sbbl
loop
gs
aas
les
mov
push
mov
aam
jno
xchg
lock
lds
incb
add
inc
aas
in
repz
or
das
decl
outsb
add
mov
je
les
add
add
stos
cmpb
les
cmp
je
push
mov
je
push
and
nop
jb
mov
lea
add
mov
mov
xor
rclb
outsl
clc
or
rcll
in
add
addb
push
lret
or
jo
adc
aam
cmp
cli
xor
adc
insb
decl
cli
mov
cmp
adc
adc
xor
shl
call
mov
mov
je
and
pop
adc
adcb
sbb
inc
sar
adc
and
jns
sbbb
cmp
push
sbb
or
pop
out
mov
sti
add
jge
lock
lcall
mov
mov
mov
xorb
scas
call
lods
sbb
cmpb
lods
add
mov
mov
fbld
add
push
mov
jp
test
cmp
es
inc
imul
mov
test
clc
scas
mov
add
xor
or
mov
mov
mov
rclb
adc
add
pusha
cmp
unpcklps
cmpsb
add
rorb
adc
lret
ja
call
data16
push
mov
dec
mov
rcll
push
call
add
cmp
add
int3
orb
out
sub
call
pusha
adc
inc
add
mov
add
ss
cs
loop
add
add
lcall
std
pop
aad
gs
pop
notl
mov
cmpsb
push
push
pop
fs
incb
add
pusha
jge
icebp
das
and
adc
add
ret
jbe
cltd
mov
jle
mov
xchg
test
mov
mov
and
outsl
xor
mov
and
sub
scas
mov
xlat
pusha
or
add
lods
pop
sbb
or
out
push
inc
sahf
add
je
loopne
cwtl
mov
push
fists
push
ds
repz
xor
and
pop
add
rolb
mov
fbstp
cli
jg
or
and
cmpb
icebp
add
push
push
pop
test
shlb
pop
push
shr
ljmp
mov
or
loopne
and
push
mov
pusha
add
insl
mov
aad
mov
and
fs
jo
mov
aam
flds
push
pop
cmp
inc
mov
add
add
ret
add
add
scas
pop
push
fadds
iret
roll
notb
out
ss
add
lret
and
lret
add
sbb
adc
inc
adc
loop
adc
icebp
popf
mov
add
adc
jp
mov
out
adc
ljmp
ss
sub
scas
cmp
sti
lcall
pop
add
mov
inc
add
push
fxch
jb
xorb
out
pop
push
ds
hlt
add
pop
sbb
cmp
sahf
scas
test
out
repz
rcrb
jl
jg
adc
clc
ds
add
push
jle
jno
je
ds
pop
add
add
icebp
mov
ja
and
popa
add
pop
mov
loop
cmpsl
lcall
xor
aas
sbb
xor
loopne
xor
test
rolb
addl
inc
sarb
pusha
lret
adc
inc
lods
cli
add
add
and
test
dec
cmp
adc
jo
jl
stos
pop
fbld
je
sbb
cmp
and
mov
mov
inc
mov
nop
add
xor
sub
push
jmp
xor
cmp
addb
or
push
pop
inc
mov
sbb
add
cli
lcall
adc
adc
pusha
cmp
jo
cltd
adc
jae
adc
lods
std
hlt
loope
int3
xor
adc
cltd
enter
mov
loop
and
inc
xor
je
inc
mov
faddl
lcall
shl
mov
xor
xor
jp
adc
sarb
or
adc
pop
and
jo
xchg
icebp
sub
ret
inc
sbb
loopne
mov
maskmovq
testl
xchg
scas
push
jle
and
fdivs
and
adc
call
or
inc
sub
mov
jnp
pop
push
jl
ds
mov
sub
inc
add
and
mov
jo
sbb
mov
pusha
inc
arpl
xor
jb
xchg
adc
sarb
or
mov
mov
sub
sub
dec
pushf
pushf
mov
and
push
or
or
mov
lret
ds
inc
add
xchg
out
arpl
and
mov
xlat
adcb
or
stos
test
dec
xchg
inc
fcoml
mov
or
ret
loope
or
inc
adc
push
dec
test
pop
xor
cwtl
jp
and
nop
add
rolb
adc
test
add
jl
cmp
and
inc
dec
dec
and
lock
xchg
rolb
cwtl
adc
inc
outsb
adc
adc
jp
mov
ljmp
pop
adcb
cmc
lock
add
ljmp
mov
scas
out
inc
imul
call
or
mov
icebp
notb
pop
xchg
add
and
mov
lret
cltd
jl
insb
test
movsl
jmp
mov
xchg
pusha
jo
popa
push
jnp
in
or
pop
roll
cmpsb
cwtl
mov
add
adc
je
adcb
lock
pop
testl
orb
push
xor
clc
fcmovnb
xchg
idivb
bound
or
add
cmp
fneni(8087
rclb
loop
push
mov
add
xchg
adc
fmul
adc
ds
rorb
repnz
mov
mov
push
xor
mov
shlb
mov
push
aas
mov
mov
xor
shrb
xchg
add
jle
outsl
push
and
or
mov
insb
outsl
inc
xchg
pop
sti
and
sub
add
lahf
add
and
sbb
sahf
xchg
push
adc
loop
mov
inc
aam
push
add
sub
scas
mov
je
fldl
ss
push
or
pop
in
sbb
cmpsb
push
cmp
add
hlt
add
jl
movsb
not
dec
test
mov
xor
and
add
orb
mov
sahf
cli
nop
mov
es
cmpb
loope
ss
and
int3
add
es
inc
jmp
xchg
ljmp
xor
aaa
xchg
add
or
sub
inc
rcrb
daa
jne
push
sub
mov
xchg
jg
inc
xor
add
les
add
mov
mov
mov
sbbb
inc
adc
or
inc
rep
add
outsl
adc
hlt
push
add
sti
or
sbb
in
mulb
or
or
add
addb
lds
test
xor
push
out
je
xor
pop
jl
mov
push
mov
inc
xor
jge
jle
stos
pop
out
adc
xchg
cmpb
pop
fidivs
clc
and
nop
mov
scas
fistpll
push
adc
sbb
cs
in
add
pop
call
clc
dec
imul
iret
and
std
repnz
and
adc
push
push
push
fwait
ds
enter
sub
add
insl
aaa
adcb
test
adc
or
cld
push
inc
add
push
mulb
mov
push
sbbb
pop
xor
add
add
adc
rcrb
fiaddl
ljmp
mov
in
aas
clc
cltd
add
add
lock
mov
orb
sbb
out
std
and
dec
mov
and
mov
inc
sahf
add
cmpl
cld
clc
xchg
ret
pop
pop
inc
push
push
xlat
add
call
outsb
fiadds
idivb
adc
or
std
stos
or
pop
sbb
sbb
test
dec
pusha
orb
add
mov
jl
mov
shrb
loopne
dec
add
cltd
jbe
mov
jp
cmpb
add
sbb
insb
mov
push
sbb
loopne
and
inc
push
adcb
cmp
clc
rol
ds
shrb
fcompl
add
adc
mov
dec
sub
or
je
jo
je
call
faddl
pop
xchg
dec
and
les
add
cmp
push
xchg
les
mov
cmpsb
loop
stc
outsl
sbb
jbe
mov
out
xchg
mov
les
mov
mov
cli
lea
cli
ret
mov
fmull
adc
imull
add
fwait
adc
imul
scas
dec
and
pop
pop
cli
mov
or
rol
fwait
test
repnz
xchg
sti
rcl
aaa
xor
in
xchg
mov
jecxz
cmp
push
push
push
rclb
sub
aaa
lock
jg
adc
push
mov
shrl
in
push
jle
add
sub
pop
inc
mov
dec
dec
xor
inc
pop
mov
pusha
adc
sahf
fildll
add
push
testl
cwtl
clc
incl
inc
add
addl
dec
cmpsb
orb
lock
mov
pop
jb
into
lock
mov
loope
xchg
aas
add
mov
push
cmpsb
loopne
orl
fucomi
mov
cmpsl
mov
and
test
daa
cmc
push
cwtl
dec
add
fwait
insl
mov
adc
push
cs
mov
add
add
mov
int3
sub
sub
movsl
adc
ret
lods
es
repnz
add
das
fcoms
mov
lods
or
subb
or
loopne
call
pusha
adc
loopne
cld
or
shlb
std
mov
stc
dec
jb
cmc
xchg
aas
popa
inc
test
sub
dec
adc
test
je
jg
sbb
jl
repnz
mov
jg
add
cmc
rorl
adc
cmpb
fs
loopne
adc
pusha
add
push
repz
push
fisttpl
push
jp
sub
add
pusha
or
pusha
and
pop
inc
jnp
lods
repz
je
loopne
push
mov
imull
mov
psraw
jmp
lods
int3
dec
aas
and
lcall
int
shlb
fildl
jmp
push
rorl
in
adc
les
dec
and
rcrl
shlb
pusha
sbb
add
jb,pt
push
mov
sbb
sti
hlt
pop
ret
and
cs
and
push
jl
sub
add
lcall
add
test
mov
xor
inc
scas
mov
xchg
pop
loope
es
dec
sbb
mov
cmpl
or
mov
fs
and
je
sub
pop
ss
sti
xchg
test
adc
or
mov
inc
push
mov
je
outsl
inc
mov
cld
jb
ret
decb
mov
push
add
inc
add
mov
pop
loopne
arpl
sarl
push
push
cmpb
sub
loopne
dec
mov
xor
dec
rcrb
inc
loopne
xor
push
incl
jl
rclb
movsb
mov
jle
add
sbb
push
push
je
push
movb
cld
sub
mov
ret
insb
out
and
cwtl
pop
mov
add
mov
xor
int3
or
lods
sub
subb
add
cmp
clc
pop
mov
stos
mov
cmp
ret
mov
mov
mov
add
or
add
lret
or
inc
out
test
cld
decl
sub
daa
lea
and
mov
xchg
cmp
icebp
adcb
pushl
jecxz
nop
mov
or
pop
mul
cmc
push
notl
ficompl
add
bound
out
add
insb
pop
faddl
lock
xor
or
add
sub
movsl
pop
add
aad
sbb
dec
or
ja
fdiv
clc
and
cld
loope
scas
pop
or
mov
pop
jbe
inc
nop
and
xor
jne
lock
or
xlat
pusha
or
add
push
ret
sbb
adc
add
add
pushf
mov
mov
mov
xchg
icebp
inc
sbb
pusha
add
xchg
or
fldenv
mov
pop
pop
loope
inc
das
dec
sbbb
push
mov
nop
subb
into
insb
loopne
inc
add
faddl
add
gs
clc
sub
cmp
push
rolb
sub
adc
cmp
xlat
jg
push
enter
adcb
lock
push
outsl
or
sub
jge
lock
je
scas
adc
es
mov
repnz
dec
out
mov
or
outsl
mov
add
cmp
je
cmpsl
and
jl
xchg
clc
out
xchg
xchg
movsl
je
mov
mov
mov
cmp
xchg
add
test
fcomip
adc
addr16
stos
add
sub
push
test
and
mov
cmpsl
outsb
outsb
sbb
cmp
and
or
cmp
adc
xor
xor
rorb
add
sub
movsl
jno
mov
and
ljmp
adc
add
add
stos
lock
xchg
and
scas
add
jo
lret
and
jmp
add
mov
cwtl
fadds
add
sub
dec
inc
hlt
jno
test
ds
cld
in
cli
cmp
and
clc
aaa
xor
jo
inc
idiv
lock
call
nop
mov
and
cmp
jb
mov
nop
insl
mov
dec
mov
insb
test
xor
rcl
and
fildl
mov
or
dec
cmc
pushl
nop
sub
ds
dec
mov
fimull
jmp
fwait
mov
repz
add
ljmp
push
lods
mov
xor
pusha
or
ret
add
add
mov
mov
or
jl
lock
jg
mov
jo
subb
adc
cmp
sbb
lcall
aad
inc
out
je
adc
lds
adc
inc
mov
add
push
mov
push
call
jl
sub
call
arpl
add
sarb
jbe
or
scas
xor
roll
es
xchg
movsl
and
outsl
adc
jecxz
adcb
fisubs
or
push
repz
out
xchg
aam
scas
scas
lods
mov
push
or
call
ficoml
add
insb
xor
lock
cld
ljmp
push
pop
mov
sbb
push
add
mov
mov
mov
lock
les
pop
pusha
add
je
icebp
mov
pusha
or
in
shr
faddl
sbb
add
lcall
or
aas
push
mov
and
adc
mov
add
mov
or
or
xor
or
push
hlt
jl
mov
jmp
xor
pop
xor
mov
xor
lret
mov
or
fsubl
mov
push
rcl
xor
test
add
loopne
in
mov
cmc
popf
xchg
stos
jp
scas
and
jl
add
clc
je
outsl
outsb
pushl
jnp
mov
movsb
les
mov
jbe
inc
stos
xchg
mov
mov
cmp
pop
call
shrb
mov
mov
inc
lods
mov
add
xchg
negl
mov
and
adc
rcl
pusha
pusha
fisttpl
mov
aad
adc
jbe
mov
xchg
jecxz
jno
jns
sarl
push
mov
in
es
movsb
shlb
push
pop
in
inc
add
mov
decb
add
popa
mov
lock
cmp
icebp
pop
inc
jb
sti
mov
lds
push
in
push
add
mov
mov
sbb
jg
sbb
jb
addr16
add
iret
pop
add
dec
push
mov
jle
stos
rorb
rcrl
sub
ljmp
sahf
je
mov
mov
fwait
pusha
xchg
xchg
mov
js
or
mov
push
inc
mov
movsb
inc
icebp
sbb
scas
adc
push
repz
stos
sbb
ja
lret
mov
add
rorb
mov
add
xchg
loopne
pop
pop
jmp
test
fstl
jb
push
xchg
sbb
mov
cmp
addb
mov
pop
add
and
xor
js
fidivs
or
rorb
sbb
sbb
or
nop
dec
or
push
das
push
int3
add
jbe
mov
mov
sti
dec
imul
adc
fbstp
ds
jecxz
pushf
scas
sub
inc
sub
into
push
or
jo
es
out
cli
scas
rcl
push
mov
mov
adc
mov
dec
add
xchg
inc
or
mov
push
repz
cmpb
push
das
movsl
js
push
mov
push
xor
pop
push
cmp
cmp
stos
and
cmp
add
ret
adc
incl
pusha
pop
outsl
movsb
jo
movsb
int3
jl
adc
mov
xor
decl
pop
mull
add
add
mov
jo
arpl
and
mov
shlb
gs
and
mov
mov
mov
and
psrld
icebp
push
ljmp
add
jge
add
addl
inc
jb
xor
mov
std
xchg
mov
jnp
xchg
jnp
lock
lea
decl
pop
mov
add
les
mov
or
and
ja
push
push
pushl
pusha
ljmp
add
test
pop
and
sub
pushl
sub
lods
lcall
daa
xchg
and
mov
loope
jno
pop
mov
xchg
push
pop
push
pop
add
mov
pusha
and
fs
sbb
add
jle
push
hlt
xchg
adc
test
xorb
sbb
or
pop
jo
jne
sbb
jle
int
fstl
aas
push
nop
pop
pop
mov
ret
decb
add
inc
je
movsl
dec
add
inc
ret
call
mov
xchg
mov
xor
popa
scas
sbb
dec
push
pushf
push
adc
ds
ss
push
out
js
push
add
ljmp
mov
adc
jmp
mov
xchg
ficoms
int3
push
or
pusha
outsl
xchg
aas
pop
js
xor
add
or
ja
dec
mov
mov
ficompl
xor
ds
loop
inc
mov
lahf
or
ffree
loopne
add
int3
addl
gs
or
add
mov
sti
or
mov
and
cmc
add
test
cmp
xor
jle
loop
add
lahf
add
lods
mov
loop
mov
cld
orb
and
rolb
jbe
outsl
or
cmpsb
or
adc
jg
loopne
lock
push
add
orb
mov
push
xchg
mov
jle
adc
pop
loop
repz
mov
sar
xchg
dec
movsb
call
add
fists
les
aad
cmpb
andl
dec
adc
cld
inc
fldcw
xchg
adc
inc
mov
aam
mov
testl
dec
sar
mov
test
je
sti
movb
xor
testb
flds
test
add
les
jae
in
dec
outsb
aad
mov
pop
leave
mov
lcall
test
xchg
cli
ja
lock
or
sarl
in
adc
lds
add
das
xchg
xor
adc
std
movsl
or
je
xchg
lds
fistl
js
and
out
or
js
outsl
mov
xor
push
xor
pop
subb
jle
push
in
push
push
push
rorb
inc
pop
lods
push
inc
pop
sub
push
ret
lock
mov
sbbb
cwtl
add
adcb
rolb
add
push
mov
sbb
pop
mov
ljmp
add
jbe
or
lret
add
pop
fimull
mov
lock
push
sarb
xor
mov
and
mov
aad
lret
cmp
mov
add
test
outsb
mov
ret
imul
mov
test
lret
add
adcb
sub
inc
jmp
mov
jecxz
jo
sarl
add
push
les
mov
sub
insl
and
test
add
sahf
pop
test
incl
cmc
lret
pop
cli
shr
add
out
mov
pop
jg
sti
lea
xchg
jbe
or
adc
pop
aaa
rolb
loop
adc
inc
hlt
mov
dec
and
or
or
push
mov
dec
cmp
or
sbb
pop
push
adc
mov
movsb
data16
ljmp
or
cli
fbld
pop
push
int
pop
jbe
jbe
sti
xor
adc
xor
dec
or
add
inc
cwtl
incb
jmp
out
mov
mov
fmuls
inc
or
icebp
pusha
sbb
mov
adc
or
add
incb
adc
mov
jmp
pop
cmp
jl
adc
cld
repz
mov
add
pop
fildll
sbb
addl
pusha
add
scas
mov
add
xor
adc
test
in
sub
repnz
sub
loopne
and
lcall
repnz
ss
das
movsb
and
cmpsb
push
push
pop
adc
push
ljmp
sbb
adc
and
decl
popa
push
and
pop
xchg
sub
pusha
pop
movsb
je
ds
inc
mov
cld
adc
loop
jb
mov
lcall
adc
inc
lock
and
mov
jecxz
inc
movsl
mov
cmc
adc
loopne
rcrb
mov
int3
adc
arpl
loopne
jmp
jecxz
adc
jne
aaa
and
add
fnstsw
pusha
or
xchg
out
aaa
sub
adc
adc
cli
cmpsl
shr
mov
add
xchg
ljmp
mov
repz
mov
loopne
es
add
adc
mov
and
cltd
xchg
in
lock
adc
sub
add
push
loopne
aas
test
inc
sub
or
rcrb
lods
push
loopne
test
push
dec
pop
ljmp
push
mov
ja
iret
fsubs
movsb
add
nop
or
mov
loopne
mov
repz
lcall
adc
mov
pusha
imul
pusha
xor
pusha
dec
and
pushl
cmp
adc
and
loopne
mov
xchg
in
dec
les
adc
adc
adcl
lods
call
hlt
sbb
mov
xchg
adc
mov
pusha
aaa
loop
mov
lea
scas
rcrb
and
nop
pop
sti
rcl
fildll
add
inc
sahf
jle
jmp
sahf
shrl
inc
add
mov
sbb
jle
and
nop
hlt
orl
fcmovb
pop
bound
in
inc
je
outsl
sub
ds
sahf
stc
add
sbb
adc
popa
pop
fbstp
les
push
bound
loop
imul
mov
push
lock
fneni(8087
add
out
popa
inc
mov
jb,pn
mov
or
push
cmp
testl
sub
jne
aas
adc
pop
loopne
mulb
or
add
jl
iret
cltd
cld
or
mov
sub
sbb
cmp
mov
scas
std
movsb
mov
mov
or
aas
scas
cmpsb
jmp
sarl
cld
loopne
dec
jne
fildll
out
and
in
and
fdivr
xchg
add
flds
int3
jmp
shlb
jo
lret
add
nop
nop
test
adc
test
or
xor
cmp
adc
rorl
jl
jo
xor
add
rsm
icebp
mov
sbb
add
add
sub
or
stos
sub
enter
xor
jl
xor
mov
mulb
ja
inc
int3
jb
idiv
pop
dec
push
sbb
jo
scas
add
add
lods
mov
and
pop
mov
sub
or
outsb
daa
rclb
adc
jno
and
push
add
addb
loopne
mov
aaa
mov
js
icebp
add
adc
in
push
std
cld
in
add
mov
ds
les
push
and
cmp
cltd
adc
xor
add
jp
push
or
jb,pt
mov
push
pushl
add
mov
adc
add
and
mov
fs
lods
sbb
or
sbb
adc
push
jo
add
das
xchg
xchg
jg
fisttpll
cmp
inc
rclb
mov
cli
ss
and
icebp
push
pusha
xor
cli
add
and
mov
sahf
add
sahf
add
rorb
inc
cltd
dec
idivl
les
and
adcl
movsb
bound
inc
xorb
add
pop
shl
lods
jl
cmp
add
dec
xor
add
imul
pop
shlb
adc
add
testb
mov
je
inc
sbb
jle
mov
mov
mov
aam
push
cltd
push
cld
mov
repnz
nop
push
push
adc
add
clc
push
pop
pop
lock
rcrb
call
inc
cli
div
sbb
xchg
lcall
push
inc
xor
push
add
sti
adc
add
ljmp
fwait
jnp
rolb
or
ficoms
mov
je
add
push
xchg
loop
mov
loopne
lods
data16
mov
add
jne
enter
ja
mov
notb
add
mov
into
adcl
sbbb
sub
sbb
ja
mov
adc
add
pushf
pop
in
adc
adc
icebp
lahf
and
lret
sbbl
add
and
js
addb
inc
add
and
pusha
fldl
or
nop
adcl
mov
or
aaa
andb
mov
add
outsb
call
out
dec
xchg
testb
mov
mov
sbb
adc
fisttpll
or
mov
mov
filds
bound
adc
jne
inc
in
add
loopne
cmpsb
inc
add
scas
mov
aam
adc
movl
mov
add
mov
cs
cmc
das
out
add
les
mov
addb
lds
addr16
ret
lds
xchg
xchg
add
inc
xchg
insl
outsl
ss
xorb
sbbb
pop
icebp
jecxz
pop
popa
adc
pop
mov
xchg
cmpsb
stos
or
push
cld
push
inc
enter
pop
test
je
pop
sbb
daa
in
dec
adc
and
rsm
subb
add
sbb
dec
jl
sbb
jl
in
lods
rolb
lods
mov
mov
dec
lock
dec
xor
and
add
and
sub
push
cld
ret
dec
add
sbb
mov
add
les
rcrb
add
add
mov
das
cli
pop
dec
adc
jno
je
and
addb
xchg
add
out
xor
cs
cli
lods
les
push
lahf
add
adc
add
adc
rcll
mov
jb
nop
adc
adc
add
mov
jmp
mov
pop
lock
sub
mov
xor
call
adc
ljmp
int3
xchg
adc
or
or
mov
jl
nop
jo
xchg
jle
jmp
cmp
loop
and
xor
jb
in
jecxz
sub
pop
xor
repnz
adc
mov
notl
test
mov
jbe
cmc
cmp
add
hlt
lret
test
mov
sbb
add
icebp
jo
scas
gs
movsb
sti
add
mov
stos
rcrl
subb
rcl
or
cwtl
pop
adc
dec
divl
add
pop
decl
mov
pusha
imul
push
or
cld
jmp
add
arpl
loopne
dec
adcb
add
mov
inc
dec
jmp
sahf
mov
add
and
rclb
mov
pop
into
add
aam
nop
mov
scas
scas
add
xor
mov
xchg
scas
daa
pusha
pop
xchg
shl
add
test
and
add
or
loop
mov
mov
or
ljmp
out
mov
or
cmc
dec
rclb
mov
cld
pop
pop
mov
iret
movsb
inc
add
faddl
xchg
mov
or
clc
stos
ljmp
insb
and
or
or
repnz
or
rcl
or
xchg
sbb
aam
mov
inc
push
and
sbb
adc
and
sub
idiv
mov
test
fiadds
ret
jp
inc
mov
pop
rol
std
call
mov
or
repnz
mov
sarb
negl
in
inc
ss
sub
push
out
push
mov
dec
shlb
imul
and
cli
adc
cmp
jle
and
push
inc
adc
push
movsb
daa
push
lods
ficompl
test
mov
pop
jl
fs
inc
outsb
push
shrl
loop
lods
dec
test
add
push
lcall
adc
jmp
cmpb
rol
inc
mov
addr16
subb
jb
adc
movsl
pop
imul
pop
xchg
loope
and
cltd
inc
test
roll
push
mov
add
xor
aam
sarb
in
adc
sub
or
es
inc
push
mov
stos
in
pop
cmp
push
and
add
lcall
mov
mov
lea
lock
cmp
add
pop
and
add
mov
daa
ret
fdivs
stos
xor
push
or
out
xchg
pop
js
int3
dec
cmp
or
sub
or
repz
addb
or
clc
cwtl
push
subb
jl
cltd
sub
xlat
ja
add
fadds
cmp
outsl
test
pusha
stc
jmp
outsb
xor
scas
jbe
or
dec
mov
add
scas
mov
rcll
mov
out
mov
mov
cli
xchg
push
add
adc
add
ret
dec
mov
xor
or
and
fisttps
sti
adc
jne
ret
add
call
mov
xor
mov
data16
jmp
scas
into
les
mov
jg
sbb
mov
jg
cmc
sbb
xor
shlb
addb
or
push
filds
push
das
stos
mov
xorb
adc
or
xor
jbe
lock
into
pusha
aam
sub
pop
pop
inc
add
sub
xorl
arpl
dec
ss
sbb
in
or
lret
push
outsb
pop
data16
mov
mov
or
dec
ret
sbb
mov
sti
jne
test
inc
adc
rolb
xchg
and
jge
jno
sbb
repz
lock
jge
mov
jecxz
out
repz
jb
inc
incl
push
out
cld
jg
filds
mov
add
jg
fists
sbb
fadds
fidivrl
or
mov
test
ljmp
fisubs
push
add
rorb
mov
shl
je
add
bound
or
fisttpll
enter
xorb
stos
and
or
add
add
in
sarb
add
add
adc
xor
mov
notl
insl
jg
mov
pop
mov
shll
add
add
adcb
xlat
xchg
les
cmp
push
lcall
add
sti
push
cmp
clc
cmp
call
inc
pop
and
dec
cmpsb
gs
test
cmpsb
push
and
ja
mov
shll
push
add
push
mov
mov
mov
rolb
add
push
pop
inc
add
ds
cmc
pop
or
pusha
and
and
mov
jo
clc
mov
add
push
mov
test
idivl
cmc
fbld
ds
jg
aad
add
ljmp
in
add
loop
jl
mov
fists
cmp
popa
ljmp
and
out
add
xchg
lock
std
mov
pop
shll
pushl
jmp
fists
aaa
clc
in
mov
fldenv
mov
xchg
jecxz
pushf
dec
pop
jnp
incl
mov
push
loopne
cli
lods
push
mov
mov
scas
xchg
mov
jle
pusha
adc
and
pop
xchg
add
movsl
adc
sub
call
mov
push
test
jp
divb
inc
or
cmpb
pop
les
inc
insb
xor
sbb
iret
add
add
add
xlat
sub
jmp
pop
mov
push
add
scas
outsl
out
mov
loopne
and
sub
sub
sub
sbbl
inc
xchg
inc
push
subb
inc
adc
mov
and
mov
jnp
push
mov
xchg
loopne
enter
add
add
and
pop
mov
push
mov
jp
or
xchg
sbbl
add
enter
and
cmp
add
gs
sbb
mov
cmp
cli
jecxz
adc
ret
and
int3
dec
sbb
add
pop
push
jbe
jecxz
mov
movsb
addb
add
in
sar
adc
pusha
adc
ret
sub
xorb
or
sbb
or
insl
jl
jge
fisubl
fbld
loopne
mov
loopne
push
xchg
fildl
lds
add
sub
xorl
xchg
adc
and
add
mov
mov
js
mov
mov
adc
and
mov
push
pusha
sbb
call
inc
mov
xor
inc
dec
clc
add
bnd
push
jae
lock
in
cmp
jb
cmp
loope
cmp
sub
out
shll
adc
pop
jbe
in
jg
int
int
add
lea
mov
hlt
mov
cmp
push
sahf
add
bound
mov
cmp
cltd
add
cltd
int3
add
or
jg
lock
faddl
or
loope
orb
sti
mov
insb
push
jne
add
xorb
adc
adc
bound
or
pushf
xor
push
adc
add
add
pushf
add
add
mov
pop
mov
stc
sub
xor
stc
sbb
inc
xor
xchg
jle
and
ss
repz
ds
testl
sbb
jne
ja
or
mov
pop
sub
or
push
jns
xor
inc
xchg
add
adc
push
mov
test
and
rclb
repz
or
add
xor
lcall
sbb
pop
inc
filds
adc
ja
adc
stos
push
jl
cld
push
fadds
mov
adc
loopne
jne
jno
xchg
xchg
and
inc
dec
mov
mov
adc
jg
test
ds
and
hlt
xor
mov
adc
inc
dec
ret
std
mov
loop
push
push
add
xchg
mov
fiadds
or
iret
loopne
or
jo
xchg
pop
and
mov
sbb
enter
mov
aas
repnz
ja
pop
popa
add
cmpsl
mov
cld
ja
das
add
or
and
mov
ss
ja
inc
dec
repz
pusha
setb
mov
cli
add
or
add
rclb
mov
ss
jmp
lea
fdivrp
mov
ret
mov
scas
fisttpl
sbb
pop
pusha
push
xor
bound
cmp
cmp
test
les
lea
add
clc
mov
mov
ljmp
fsubrs
mov
test
aam
arpl
aas
push
std
pop
pop
sti
cmc
ds
inc
fdivs
jne
and
cmc
pusha
aas
sbb
cmpb
cmc
cmp
sbb
adc
mov
xor
add
pusha
ja
jmp
adc
loop
jge
lods
and
or
add
jo
jne
call
mov
sub
inc
loope
push
shll
int
ja
mov
stos
inc
movl
sbb
jns
mov
jne
hlt
adc
repz
or
nop
xchg
push
std
push
daa
mov
pusha
xor
popf
ficomps
mov
scas
lods
sbb
es
pushf
or
and
inc
jg
lods
add
sub
mov
or
outsl
xor
je
lods
push
jo
jne
out
jmp
mov
mov
shll
loope
sub
and
and
cld
mov
mov
inc
sbb
je
out
pusha
cs
cmc
cld
mov
and
jecxz
enter
aad
and
out
xchg
sub
add
daa
or
inc
and
mov
cld
pusha
sbb
pop
or
push
xchg
mov
ljmp
cmc
xchg
je
sub
inc
imul
adc
mov
je
adc
fbld
dec
and
pop
loop
add
and
imul
hlt
add
aam
adc
xor
inc
int3
je
or
rcll
out
fucompp
in
scas
ljmp
aaa
push
stos
ljmp
cmp
addb
icebp
xor
shlb
or
add
cmc
or
je
cld
fneni(8087
xchg
loop
pop
ss
or
or
or
pop
fdivrl
je
adc
or
add
or
jmp
add
cmpsb
cmp
or
lock
xor
lret
inc
cli
mov
or
scas
or
mov
loopne
or
lock
mov
mov
je
imull
clc
fbld
mov
lret
aam
lock
mov
push
mov
push
add
mov
or
cltd
mov
mov
cld
paddb
push
push
push
mov
push
sar
stc
jbe
nop
xchg
aam
adc
dec
mov
jno
pop
out
addl
fwait
or
call
jne
insb
pushw
icebp
mov
mov
cld
or
lea
adc
ret
std
mov
mov
popa
add
pusha
add
aaa
adc
and
rcr
test
pop
or
adc
andb
xlat
aam
mov
mov
in
mov
cmc
inc
xchg
add
mov
push
nop
add
es
jecxz
pop
adc
jge
in
pop
call
add
xor
xor
add
fcmovnbe
dec
or
xchg
cmc
push
pop
aad
mov
rorb
lock
std
aaa
cmp
nop
mov
fiaddl
inc
push
jl
nop
iret
xor
insb
and
movsl
ret
in
jbe
shrb
mov
ret
and
push
mov
fwait
test
aam
adc
test
dec
call
add
jecxz
cli
dec
xor
stos
add
fdivrl
loopne
mov
cli
aam
nop
sahf
push
je
clc
je
push
je
fcoms
and
scas
decl
mov
inc
push
fistps
pushl
in
adc
mov
add
in
mov
inc
add
xor
movsb
sbb
push
pop
adc
cli
mov
mov
jnp
add
or
sbb
shl
nop
xchg
or
dec
loopne
inc
sbb
stos
pop
gs
je
jo
mov
fisttpl
add
push
jecxz
insb
mov
sarb
jo
repz
adc
push
push
sti
lock
in
sbb
xlat
cltd
mov
inc
dec
push
push
or
inc
inc
addb
mov
imul
dec
es
sbb
daa
pop
and
fistpll
rolb
adc
inc
stos
jmp
xlat
jle
call
ficompl
incl
je
ret
pop
mov
decl
dec
adc
ljmp
cmp
rolb
or
adc
pusha
adc
push
push
add
add
mov
jb
cmp
in
xor
icebp
sbb
xchg
or
dec
sub
mov
cld
testb
nop
pop
pop
dec
repz
add
clc
xor
add
push
and
je
inc
bound
adc
lret
mov
push
test
sbb
adc
push
xor
adcl
repnz
sub
data16
xchg
and
nop
mov
rorb
loope
lahf
add
lods
lods
insb
xchg
or
das
fimuls
test
sti
scas
or
add
adc
adc
or
jp
movsb
outsl
adc
push
sub
push
or
push
sti
jo
icebp
pop
je
xadd
jg
hlt
add
loopne
dec
jo
add
push
test
and
sbb
mov
push
push
sub
sub
add
or
loope
test
lods
or
mov
mov
and
push
pushf
lock
jo
jl
mov
out
fs
cmp
nop
in
lock
lock
cmp
jecxz
mov
aaa
cltd
adc
fidivs
mov
mov
les
pusha
stos
mov
mov
jbe
xor
jecxz
ljmp
scas
jl
xor
or
cwtl
add
in
rol
push
adc
lods
mov
mov
movsb
movsl
add
add
mov
jo
inc
cmc
les
xchg
les
mov
es
pop
cs
es
mov
pop
call
push
jecxz
les
push
call
add
sbb
call
out
sbb
cmp
add
andl
test
dec
fsts
push
inc
in
and
dec
repnz
cmp
mov
mov
clc
adc
dec
add
aad
les
nop
mov
testl
or
xlat
fdivs
or
cmp
nop
aam
add
cltd
push
inc
stos
inc
jo
mov
push
mov
insl
and
dec
dec
jae
and
shrb
in
lock
cmp
jg
mov
and
xor
mov
dec
cmp
jp
imul
lock
pop
pop
pop
add
inc
add
andl
xchg
or
andl
out
add
or
js
dec
inc
insb
test
mov
sarb
jmp
leave
and
jl
lock
jle
pop
fmul
fdivs
ret
hlt
fwait
jmp
mov
pop
ret
and
dec
and
aam
test
dec
xchg
add
inc
loop
push
mov
loopne
lahf
push
add
inc
add
and
inc
les
js
repz
mov
mov
add
mov
ret
sbb
mov
sbbb
pop
cmpsb
loopne
adc
xchg
scas
test
mov
inc
mov
push
jg
pop
scas
adc
and
sbb
leave
add
or
outsl
test
stos
add
lock
and
mov
pop
out
xor
push
adc
cs
pop
adc
aaa
daa
mov
das
add
cmp
mov
xchg
sbb
mov
in
lret
pop
lock
je
inc
imul
je
inc
sbb
mov
ljmp
call
mov
addb
lahf
les
cwtl
dec
jecxz
jmp
and
mov
inc
lret
repnz
add
jle
mov
ret
xchg
insb
mov
jl
pop
sub
fs
sbb
popa
adc
sub
lods
test
mov
std
sti
cmp
in
inc
imul
insb
loopne
ret
clc
decl
mov
xchg
adc
jb
scas
insb
or
jg
add
mov
push
pusha
sub
xor
xchg
sbb
add
mov
push
and
add
or
pusha
mov
sub
or
push
jl
hlt
ds
fdivrp
mov
push
push
xchg
and
mov
xchg
fwait
enter
dec
loopne
or
cmp
inc
pusha
mov
sbb
add
test
and
dec
add
or
orb
add
dec
push
ja
and
jae
or
insl
xor
inc
and
xchg
add
decl
push
cmpsl
xchg
inc
dec
data16
mov
add
or
inc
loopne
add
pop
cmp
aaa
loopne
xchg
stc
rolb
mov
decl
add
xchg
cmc
imul
dec
add
push
test
mov
xchg
mov
dec
or
insb
jbe
pop
pop
dec
in
push
out
scas
sub
adc
fisubl
loopne
je
fisttpl
add
mov
jb
inc
adc
je
jl
and
or
mov
or
sbb
hlt
push
pop
sub
inc
pop
shll
and
lods
cmpsb
adc
dec
push
add
addb
mov
out
je
pop
adc
xor
jmp
push
inc
xlat
or
ret
aam
loope
or
add
adc
xchg
cmpsb
scas
xor
xchg
ss
mov
inc
and
add
inc
pop
pushf
add
pop
adc
jl
dec
adc
loopne
jno
cld
jbe
stos
movsb
movsb
add
cs
and
outsb
adc
sub
es
jmp
mov
wbinvd
mov
ds
clc
or
test
pop
outsl
adc
mov
and
decl
int3
mov
add
out
data16
dec
pop
repnz
mov
pusha
adc
adc
sbb
dec
inc
xchg
in
lock
stos
inc
mov
in
add
sbb
xlat
std
pop
mov
dec
es
add
out
and
fst
xchg
pop
cmp
add
loopne
jo
push
jne
and
std
pop
xchg
pusha
and
lock
das
cld
pop
std
cmpsl
mov
add
add
push
andb
push
addb
or
out
add
xchg
or
divb
cli
xlat
xor
xor
addl
cmpb
jmp
testl
add
mov
cld
fwait
outsb
push
roll
inc
fdivl
iret
sbb
xchg
or
scas
test
jmp
or
mov
jl
cmc
dec
push
ss
push
mov
mov
or
mov
xchg
sahf
movsb
lret
jle
dec
pop
add
or
icebp
add
jg
loop
cmp
add
mov
sub
jb
inc
pop
jo
add
pop
inc
test
inc
out
xchg
fwait
shrb
and
pop
mov
dec
dec
jo
pop
mov
mov
pop
jg
sbb
push
jecxz
enter
mov
xchg
mov
xor
lock
add
push
and
icebp
pop
xchg
push
sbb
pop
jl
shll
sar
adcl
add
mov
adc
rorb
jbe
xchg
cmp
mov
add
add
inc
test
mov
xchg
cmp
arpl
orl
jno
pusha
inc
lock
xchg
dec
jb
loop
and
in
aaa
add
xchg
imul
push
std
inc
cs
pop
mov
adc
sbb
loope
mov
push
adc
xchg
push
pushl
add
add
add
sbb
jge
je
mov
sarb
mov
bnd
mov
adc
sbb
cmpl
add
add
inc
cmpsb
in
pop
mov
call
and
sti
jb
in
and
nop
mov
in
bound
jae
mov
mov
inc
jg
mov
outsl
lcall
push
mov
or
test
push
mov
movsb
ret
add
or
rcll
mov
ret
pop
mov
lock
repz
pop
int3
jl
mov
xor
ja
in
adc
and
add
add
adc
push
add
pop
dec
jnp
scas
and
sub
mov
xlat
ficoml
std
adc
and
out
cmpb
out
call
mov
mov
cmpb
cmp
aaa
xchg
push
nop
cmp
pop
orb
lcall
xlat
xor
pushl
push
xor
add
rcrb
mov
cli
out
adc
mov
icebp
ljmp
pop
fstl
add
mov
xor
inc
adc
test
adc
jl
repnz
js
mov
and
ss
js
pop
rcrl
cmp
cwtl
xorl
adc
add
ljmp
jbe
sti
je
jle
sbb
or
mov
jb
push
xchg
out
sahf
hlt
fldt
mov
mov
loopne
lods
add
add
or
add
mov
cmp
adc
mov
jle
test
aam
adc
je
push
mov
dec
inc
andb
aam
jle
sub
sub
add
call
insb
mov
add
push
clc
mov
xchg
adc
xorb
inc
das
adc
or
jl
add
mov
pusha
or
nop
out
pop
lock
add
js
addb
ja
xor
ficoml
loopne
pushf
mov
cmpsb
pop
mov
or
and
nop
fiaddl
sti
mov
fistl
shlb
add
aas
xchg
out
imul
gs
dec
jmp
les
and
mov
or
ja
cli
jg
or
xor
jmp
xor
daa
jl
les
xchg
pop
add
std
add
icebp
add
dec
rcll
xchg
jg
pusha
push
xchg
add
loopne
xor
or
add
pusha
xchg
adc
movsb
jg
loop
ret
rorl
xlat
jno
in
xor
mov
xor
xlat
mov
push
mov
pop
add
add
jo
adc
mov
dec
inc
stos
lock
or
or
push
jg
loop
mov
sub
xor
dec
call
mov
xchg
push
xchg
add
adc
mov
ret
out
jo
cmp
adc
subb
pusha
clc
scas
js
and
fildl
fistl
xor
or
fimuls
and
and
ljmp
cmp
dec
inc
aad
shrl
cmp
fisubl
add
repnz
popa
mov
out
add
aam
push
jecxz
add
call
push
add
adc
shll
push
cmpsl
data16
cmc
fcomi
mov
ficoms
cmpsl
inc
add
lret
and
out
xchg
push
push
or
dec
insl
mov
fildll
add
notb
pop
add
jmp
add
add
pop
add
in
in
or
push
xor
and
out
or
and
xor
cs
mov
cs
sbb
pop
xor
sbb
loopne
mov
cmp
mov
outsb
bound
sbbb
add
add
stos
jp
sbb
add
insl
fcoml
add
sbb
cmp
mov
adc
dec
cmp
mov
cmpsl
rclb
je
lock
stos
adc
inc
nop
push
push
nop
rcr
jno
xor
pop
hlt
add
pop
scas
dec
incl
lsl
inc
mov
push
inc
cmp
or
adc
add
outsl
fisttpll
repz
sbbb
add
mov
hlt
xchg
mov
and
adc
pop
add
or
addr16
inc
inc
gs
pusha
cmp
xor
push
std
dec
addb
xchg
es
push
aam
cli
add
pop
icebp
adc
push
orl
xchg
and
inc
pop
scas
addl
inc
jl
mov
xor
pop
adc
pop
ljmp
pusha
daa
scas
ret
loopne
add
scas
adc
addl
and
call
incb
jo
adc
or
stos
mov
lock
or
iret
dec
es
int3
or
cmp
dec
aad
es
jle
mov
daa
repnz
add
fisttps
std
inc
inc
pop
andl
repz
inc
xchg
xchg
dec
adc
push
adc
adc
xchg
add
jmp
inc
scas
adcb
adc
push
add
insl
mov
mov
xchg
cli
adc
add
add
imul
jg
out
add
jb
xchg
lahf
push
mov
mov
push
adc
out
inc
dec
hlt
add
pop
add
push
inc
sbb
enter
rolb
inc
pop
add
xchg
sub
xor
mov
adc
mov
int3
scas
testl
or
ja
jb
pushl
es
into
inc
pop
outsl
sahf
enter
es
add
inc
adc
cld
fwait
mov
sbb
sbb
mov
inc
sbb
pop
sar
sbbl
lods
sahf
outsl
xor
adc
cltd
inc
sbb
dec
pop
mov
sti
sarb
pop
add
push
mov
cwtl
pop
push
lcall
dec
push
jo
mov
scas
je
stc
popa
dec
jmp
xchg
mov
inc
in
inc
nop
add
mov
sbb
lods
les
pop
repnz
jmp
mov
jb
pusha
add
mov
or
and
pop
or
xor
adc
cmpb
ja
sub
dec
lea
loopne
movsb
mov
cmp
fstpt
out
jae
mov
sti
push
or
or
add
rcrb
std
mov
les
lret
xchg
inc
std
aas
xchg
scas
loopne
inc
andl
rclb
cld
add
fs
add
ljmp
add
adc
out
add
popa
mov
sub
push
push
add
jbe
mov
fwait
je
cmpl
cmp
inc
out
outsb
jg
or
sahf
addl
rcr
ds
cld
jb
movd
xor
mov
mov
ret
jmp
jmp
inc
inc
pusha
pop
testl
inc
aaa
outsl
loop
cmc
mov
add
sub
andl
insl
mov
cmp
sbb
loope
dec
in
ret
dec
addb
or
pop
pop
aas
add
repnz
xor
adc
and
or
adc
push
les
adc
or
xchg
push
adc
jl
jne
adc
repz
cmp
push
std
cmp
mov
pusha
or
pop
call
xchg
jecxz
sahf
add
push
out
xor
add
daa
add
and
mov
or
lahf
mov
jecxz
and
pop
fcmovnb
mov
sub
stos
or
xchg
out
or
sub
add
mov
or
idivl
push
cs
pop
mov
lods
jle
mov
cmpsb
jl
out
and
and
aaa
in
add
enter
inc
lret
loopne
inc
xlat
sub
push
dec
or
lods
rolb
mov
cmp
test
inc
lds
roll
popa
cmp
jp
jg
je
inc
daa
andb
lods
fucomi
pop
imul
pop
inc
mov
pop
add
lds
mov
mov
add
sti
or
pop
fcmovnu
mov
cmp
add
orb
sbb
gs
push
inc
pop
fadds
fsubrs
inc
push
loopne
pop
pop
test
add
cli
loope
add
inc
pop
sbb
mov
cmp
inc
loopne
aaa
call
jle
adc
mov
pop
test
jp
xchg
lret
out
test
orw
sbb
test
pop
inc
push
subb
sbbb
cli
cmp
into
adcb
or
cmp
add
ljmp
les
push
xchg
popa
rcrb
adc
mov
lea
es
cmp
sbbb
lock
sarb
aam
pop
jmp
loop
dec
adcb
add
cmp
inc
movb
out
mov
dec
addr16
dec
andl
aam
push
cld
call
and
movhps
in
movsb
jbe
xorps
clc
stos
mov
add
mov
mov
mov
jb
adc
decl
aas
cmp
loopne
adc
inc
adcb
pop
jg
cli
test
jle
sbb
lock
push
loope
aaa
jmp
push
xor
nop
sub
push
jmp
xorb
jge
hlt
push
adc
ss
inc
orb
fcmovbe
mov
mov
out
and
test
dec
je
mov
lcall
inc
dec
mov
xor
push
xor
decl
push
je
pop
adc
cpuid
dec
push
hlt
int
sbb
sbb
add
and
xor
je
add
outsb
cmp
add
mov
pop
or
jge
push
push
mov
sub
mov
inc
dec
and
testb
inc
daa
ret
pusha
mov
clc
sbb
stc
inc
dec
data16
pop
add
add
jns
cmc
add
cld
cs
shlb
mov
pusha
addl
enter
pop
daa
and
cli
push
adc
sbb
pop
fdivl
sub
inc
push
jo
inc
ja
or
ret
inc
decl
mov
add
xor
xchg
mov
es
call
xor
pop
jne
in
addb
clc
pop
stc
lock
incb
xorb
jl
jbe
das
stc
pusha
cwtl
stc
push
fcomip
inc
xor
movsl
and
fs
mov
lods
inc
maskmovq
testl
pop
out
hlt
mov
adc
lret
ret
add
loop
loopne
or
adc
cmp
jno
xchg
testl
cmpsb
ja
aas
divl
pop
jb
mov
adc
mov
jne
sbb
andb
std
shlb
mov
lock
and
clc
outsl
xchg
mov
xchg
or
dec
sbb
lods
lods
push
inc
rclb
pop
cmpsb
rolb
subb
xor
push
f2xm1
pop
mov
mov
repnz
hlt
add
rolb
dec
outsb
push
outsl
add
lahf
and
ds
jp
or
pop
mov
loop
add
bound
cmp
lods
rolb
adc
adc
xor
fwait
mov
lcall
out
into
sarl
push
inc
inc
in
insb
insb
jnp
push
loop
dec
mov
push
je
push
xor
jo
call
shlb
mov
pop
dec
out
mov
and
adc
pop
cmc
ljmp
lds
cmp
arpl
mov
stos
clc
inc
fs
inc
dec
and
test
test
pop
mov
fdivrs
jg
fisubs
cmpsb
outsl
jle
rolb
and
mov
push
dec
pop
int
cmp
mov
xchg
scas
inc
adc
jo
nop
jmp
scas
add
ret
sub
notb
std
fwait
mov
ss
xor
xor
test
and
mov
cs
lcall
xor
lock
pop
xor
adc
mov
or
xchg
and
cmovg
inc
ja
clc
or
in
nop
pop
inc
or
xor
ljmp
mov
icebp
mov
aas
orb
mov
inc
adc
and
lods
leave
inc
xor
and
outsl
xchg
icebp
fdivl
es
add
push
adcb
mov
dec
inc
decl
hlt
push
jnp
ljmp
jmp
sub
idivb
mov
lods
inc
and
mov
pop
das
jo
push
scas
add
mov
mov
jbe
andl
add
jo
or
xor
inc
inc
les
outsl
testb
jne
add
inc
xchg
sub
add
lret
inc
adc
push
add
mov
push
mov
enter
adc
mov
sbb
shlb
and
xchg
sti
aas
ss
cmpsb
xor
and
cmp
js
fwait
xchg
shlb
xlat
nop
mov
repnz
xorb
or
nop
std
ljmp
in
lods
test
jecxz
lock
daa
test
and
sub
dec
add
sahf
es
pushf
xchg
scas
popa
sbb
add
lods
and
out
clc
outsl
or
inc
add
inc
jnp
add
push
inc
mov
cli
mov
inc
or
mov
jae
inc
mov
jg
loope
inc
inc
mov
jb
mov
inc
or
add
icebp
xor
push
test
repnz
and
mov
jbe
mov
test
cmp
jb
mov
bound
adc
or
push
and
fs
push
xchg
jb
mov
xchg
xchg
shlb
mov
enter
loop
sub
rorl
xchg
push
push
daa
adc
or
xor
or
fdivrl
jmp
shlb
cmpsl
pop
out
loop
xchg
loopne
mov
mov
add
je
add
stos
cmp
mov
cmc
inc
pop
ljmp
mov
inc
cmp
xrelease
mov
clc
stos
xor
repnz
inc
cld
xchg
sub
pushl
jne
dec
out
mov
bound
roll
dec
sub
add
dec
xchg
add
cmp
lret
lock
pop
icebp
incl
xorl
inc
and
jb
repz
cmpb
pusha
mov
orb
adc
adc
or
or
add
or
add
shrb
push
ss
fs
je
pushf
mov
pop
mov
mov
nop
mov
cwtl
pop
pop
pusha
loopne
adc
inc
jnp
and
lods
cli
decl
sub
cli
andb
xor
add
mov
add
sub
lock
enter
mov
push
divb
std
xchg
add
sbb
loop
add
idivb
cmc
les
pusha
add
pusha
paddb
aaa
and
es
sbb
xor
lret
clc
mov
movsb
xchg
aas
add
cld
nop
add
mov
cld
sub
jbe
add
pop
push
faddl
mov
ret
rorl
movsb
cld
mov
addl
pusha
cld
shr
repz
and
add
fldt
and
add
add
push
fcoms
dec
lds
mov
mov
inc
enter
test
add
bound
jecxz
add
sbb
add
pop
repz
push
mov
incl
loop
xchg
inc
adc
enter
enter
std
aaa
je
or
jp
loope
mov
inc
loopne
rorl
mov
push
push
and
jne
cli
pop
iret
jae
add
and
xor
dec
mov
sbb
xor
xor
lcall
stos
sbb
mov
js
adc
xchg
mov
add
rorb
adc
sbb
xchg
mull
jb
andb
sbbl
or
xor
xor
adc
xorl
addb
lods
or
xor
xchg
scas
orb
push
cwtl
add
sbb
lods
push
jl
cs
addb
mov
jbe
sub
jl
mov
mov
lock
inc
xor
push
clc
outsb
bound
pop
add
or
aam
xchg
arpl
pop
nop
pop
ret
jg
sub
addr16
adcb
andb
data16
sbb
out
loope
adc
and
test
hlt
fisubs
js
orb
add
inc
call
in
je
cmp
add
loopne
and
imul
scas
les
adc
add
ret
or
fisttpll
or
add
push
sbb
mov
mov
push
jmp
stos
cli
das
inc
addl
dec
enter
outsb
fsubrs
jb
fs
pop
sahf
sahf
xchg
add
inc
sbb
jbe
push
xor
mov
out
and
aaa
jg
jmp
mov
or
dec
lods
or
icebp
scas
mov
xchg
or
subb
dec
pop
addb
pop
cmp
adc
scas
subb
and
push
lret
inc
lods
inc
mov
movsl
cmp
pop
dec
daa
mov
jle
scas
imul
xlat
shl
cmpsb
fsubrs
pop
inc
or
add
dec
popa
xor
adc
int
add
cli
or
dec
add
test
pop
jp
int3
inc
sub
hlt
mov
xor
jg
loopne
xchg
inc
push
add
push
hlt
add
mov
add
or
std
xchg
add
fldt
das
cmc
bound
shlb
add
cmp
mov
xorb
and
push
es
add
cmp
subb
sub
test
aaa
cwtl
push
hlt
xor
adc
inc
outsl
xchg
jbe
bound
pop
cwtl
bound
call
and
dec
out
outsl
pop
add
push
pop
fldt
pop
pop
out
sbb
lods
insl
pop
dec
subl
and
or
dec
mov
dec
pop
pop
mov
dec
movsb
mov
mov
jle
out
call
das
mov
push
fisttps
loop
and
sbb
inc
pop
test
sbbb
cmp
push
test
mov
jp
push
and
inc
cmp
sbb
out
sbb
repnz
ret
cmp
adc
lods
and
aad
lds
inc
xor
adc
fwait
push
cmp
clc
imul
or
sub
outsl
call
adcb
and
out
push
mov
add
push
xchg
out
ret
push
adcb
jbe
pop
aam
enter
icebp
outsl
cmpsb
icebp
sub
jp
pop
or
andl
xchg
xor
lret
or
dec
sbb
fmul
xor
xor
xchg
jmp
clc
insl
sub
pop
dec
pusha
sub
ljmp
sub
subb
jbe
xchg
jle
lret
inc
push
mov
pusha
test
adc
add
loopne
pop
xchg
push
mov
mov
cmp
pop
adc
sub
pop
dec
test
rorb
or
jno
sti
inc
xor
in
mov
xchg
dec
add
subb
pushl
add
fs
and
xor
xchg
add
mov
dec
cmp
mov
jg
pusha
out
mov
and
mov
jmp
repz
dec
shl
or
bound
cwtl
or
mov
push
pop
adc
mov
dec
loopne
add
je
add
inc
and
das
mov
mov
dec
inc
adc
rorl
or
call
mov
je
inc
lcall
and
sbb
add
jg
mov
add
nop
mov
nop
mov
rolb
ss
mov
addl
jbe
xchg
mov
mulb
addl
and
fwait
adc
jbe
rcll
fwait
ds
pop
in
dec
cmp
mov
test
fwait
arpl
and
insl
pop
mov
popa
xchg
jge
shll
and
mov
jl
inc
ret
outsb
add
add
jle
or
es
test
mov
xchg
or
jmp
adcb
mov
add
in
pusha
loope
movsl
add
add
and
sti
dec
add
inc
mov
add
cs
push
cltd
mov
rorb
out
fimull
add
mov
adc
std
adc
js
add
adc
pusha
jg
xchg
or
loopne
cmpsb
pop
das
jb
cmpb
xor
out
sbb
clc
outsl
clc
adc
and
or
or
inc
pop
aas
sbb
imul
movsl
mov
jne
mov
mov
inc
scas
mov
sub
je
mov
lret
add
adc
cld
scas
jg
repnz
enter
jnp
add
ljmp
fsubrl
inc
push
loope
movsb
mov
imul
inc
insl
mov
xor
or
inc
cmp
xorb
cmp
and
shlb
add
add
jb
repz
clc
cmp
sub
sbb
mov
mov
addb
add
std
pop
sahf
add
jo
stc
ficomps
test
andb
dec
xor
call
sahf
orb
xchg
divb
cmpsl
rolb
add
clc
fildll
xchg
push
clc
xchg
jl
jl
inc
clc
cld
cmp
xchg
daa
test
push
push
push
lock
les
loopne
add
test
mov
and
mov
mov
rorb
mov
jne
ja
notb
shrb
mov
adc
add
test
and
pop
mov
sub
pusha
pop
jb
jo
adc
mov
or
mull
add
cmp
movsb
mov
out
adc
or
popa
nop
sbb
add
test
dec
jmp
xor
pop
fisttpl
adc
pop
jbe
mov
sti
ret
nop
inc
rorb
ss
cli
xor
xchg
add
aad
test
inc
and
shlb
push
jnp
adc
add
inc
xchg
scas
inc
mov
mov
sbb
add
rolb
fdivs
roll
imul
dec
loopne
daa
les
jecxz
test
mov
fwait
jecxz
ffree
push
dec
mov
and
fadds
sub
mov
push
push
cmpsb
mov
adc
popa
xchg
repz
cs
clc
jg
mov
popa
aas
subl
pop
xor
mov
sbb
pop
fsubrs
push
testl
ja
clc
add
jbe
cwtl
lock
lods
daa
mov
clc
add
out
test
ret
ss
add
jg
push
cs
data16
pop
jp
lock
adc
clc
pop
rcrb
rclb
iret
decl
rcl
adc
scas
cmp
pushl
or
and
xchg
repnz
jmp
pop
mov
sub
mov
xchg
jne
fwait
and
jo
inc
cmp
or
fwait
sbb
push
stc
out
xchg
and
fdivr
mov
inc
dec
jne
incb
iret
ret
testb
std
aas
adc
lret
cmp
add
lahf
adc
mov
push
outsl
push
and
add
sub
das
pop
add
je
mov
and
push
std
lea
les
add
cld
rolb
xchg
cli
dec
lods
ret
int3
mov
ror
or
pusha
test
dec
adc
cli
mov
ret
iret
test
mov
cli
loope
push
rclb
mov
outsb
aam
push
xor
inc
xchg
sbb
push
stc
push
loopne
ret
test
mov
roll
aaa
std
fsubrl
icebp
jmp
loop
and
push
aam
shrb
cmp
mov
sbb
lods
jo
dec
mov
push
jmp
push
lods
mov
xchg
andl
popf
jo
adc
jl
out
mov
inc
mov
dec
aam
pushf
and
inc
aaa
mov
stos
ss
jl
lea
inc
mov
xor
cld
cli
pusha
cmp
cltd
sbb
sbb
out
xchg
test
lods
ret
into
push
cmc
xchg
jo
hlt
push
add
mov
test
daa
pop
fs
sbb
add
rol
xchg
stc
loopne
xor
incb
scas
dec
xor
fwait
and
test
add
testb
jecxz
xchg
mov
cld
cmp
mov
mov
jae
adc
and
dec
push
ret
or
adc
cmp
adc
mov
mov
imul
mov
into
decl
sub
or
pop
inc
xor
lcall
mov
hlt
add
xor
add
int3
push
push
dec
adcb
sar
jl
xor
cmpsb
je
orb
mov
pop
push
and
loop
testl
test
mull
mov
push
push
mull
add
add
cltd
jbe
test
fwait
sub
mov
lock
cmp
or
push
repz
imul
jmp
shrb
or
jecxz
xor
cmpsl
imul
inc
shl
out
xchg
hlt
and
lret
pop
jo
jo
jbe
stc
mov
or
les
jo
inc
lock
pop
enter
das
test
cmp
shrb
outsl
or
popf
call
stos
lods
xchg
movsb
push
inc
or
data16
lea
adc
out
xchg
jg
mov
xor
sbb
push
mov
sub
or
cmp
addb
test
add
and
push
and
pop
loopne
add
lcall
jmp
push
dec
repz
rclb
lock
pusha
and
andb
or
add
jb
pop
sbb
adc
cmpl
or
and
sahf
adc
andb
xor
mov
sub
or
push
dec
pop
push
mov
add
shlb
jl
call
lock
test
jnp
imul
fisubrl
pop
or
jp
xor
xchg
cmp
lcall
inc
and
testb
inc
test
cmp
mov
pop
sbb
pop
dec
jl
incb
and
cmp
push
fidivl
decl
jbe
pushf
adc
mov
push
or
imulb
incb
ficoml
cli
call
cmp
aaa
rolb
or
xchg
es
es
adc
shrb
adc
aaa
inc
inc
xchg
decl
mov
pop
mov
push
adc
mov
sub
or
shl
inc
scas
lods
sbb
jl
lret
jno
add
fldt
add
loopne
mov
jecxz
push
loop
sahf
sar
pop
dec
jp
cld
sub
insb
dec
mov
out
and
outsb
shlb
mov
ss
stos
push
inc
pop
cmp
xor
push
xchg
mov
and
add
inc
add
insb
xor
and
js
cmp
cld
insb
out
add
pop
loope
stos
sbb
aam
add
test
or
add
adc
push
xchg
push
movsb
stos
mov
add
sub
push
pop
xchg
jg
and
or
add
out
leave
cli
cmpsl
pop
pusha
mov
or
mov
xchg
or
xchg
test
adc
sbbl
lods
fs
push
imul
inc
mov
adc
inc
and
shrb
divb
nop
add
jb
cld
mov
jmp
testb
xchg
lea
mov
fwait
popa
jl
nop
addb
in
xor
mov
in
cmp
cld
and
mov
cs
mov
xchg
sub
call
es
jnp
fstpl
pusha
les
dec
cmpsb
sub
xchg
inc
js
add
sub
xchg
mov
xchg
xor
push
adcb
mov
nop
rcrb
notl
bound
loop
filds
jbe
jg
loop
add
mov
jno
adc
es
add
xor
mov
push
cmp
test
mov
sub
jg
jo
out
inc
add
test
outsb
sub
pop
dec
add
xchg
or
mov
test
add
test
movsl
popf
inc
ds
sbb
push
cltd
pop
mov
cld
mov
nop
jb
jecxz
or
test
ljmp
mov
lret
cmp
add
mov
icebp
orb
jle
mov
inc
dec
ror
xchg
fucomip
test
mov
mov
inc
lcall
mov
adc
pop
mov
or
fisttpl
sbb
loope
cmpb
cmp
lods
pop
add
ss
shlb
je
add
clc
aaa
pop
or
dec
cs
hlt
jb
lods
inc
and
adc
inc
xor
ljmp
addl
addl
test
shlb
dec
out
mov
mov
inc
push
mov
pop
hlt
test
push
push
xchg
iret
mov
test
xor
in
mov
adc
inc
mov
cmp
jbe
test
add
fiaddl
stos
ja
orb
cmp
fucomi
xchg
lods
out
test
and
inc
or
fcomps
or
push
stc
inc
add
mov
int
test
push
mov
stc
testl
mov
cmp
test
test
pop
int
ja
jmp
mov
or
push
adc
jmp
push
inc
sub
ja
jecxz
popa
pop
and
sbb
pop
push
scas
sbb
add
add
add
dec
test
mov
dec
into
leave
fdivl
cld
inc
js
pop
add
add
add
add
push
jecxz
pop
and
xor
add
out
push
add
xor
jg
mov
xadd
loopne
addl
cmc
add
dec
xchg
pop
or
aas
subb
add
jg
lret
cmpsl
into
lea
pop
jnp
adc
andb
adc
sub
sbb
loope
cmp
xchg
mov
rolb
mov
testb
push
inc
cs
inc
cs
test
sub
adc
loop
adc
push
pop
aam
dec
scas
adc
mov
and
mov
fisubl
mov
nop
out
adc
pusha
and
or
sub
adc
mov
stos
mov
mov
inc
mov
mov
fs
into
jp
std
dec
jg
mov
rcrb
hlt
push
rclb
add
out
test
sub
in
addb
mov
sbbb
rolb
movsb
es
clc
es
shlb
pop
pop
sub
adc
pushf
and
sub
cli
loope
inc
outsl
mov
ljmp
and
lcall
popa
add
je
test
mov
adc
push
add
add
icebp
outsl
push
jne
push
dec
in
and
jmp
jne
pop
ljmp
mov
adc
mov
out
lods
sub
mov
iret
dec
sub
faddl
add
add
rcl
test
mov
add
push
mov
cld
cltd
bound
pop
es
or
movsb
cmpsb
aaa
mov
repnz
mov
sub
jo
filds
push
insl
shll
jno
dec
and
add
mov
sti
mov
data16
call
rcr
fildll
add
pusha
jl
enter
xchg
sarl
and
xlat
rolb
hlt
mov
or
mov
aad
mov
pop
cmp
sbb
cmp
daa
movsb
out
inc
das
cwtl
jp
andb
sub
add
bound
push
rcrb
dec
jl
shll
xchg
hlt
dec
loopne
adc
xchg
jo
out
loope
mov
inc
loopne
mov
je
ret
jne
inc
sbb
mov
into
or
in
jl
insl
ret
add
adc
mov
jle
push
mov
xchg
je
insl
xor
cmp
test
add
mov
push
inc
dec
sbb
ljmp
mov
lock
popa
or
sub
mov
repnz
and
out
adc
add
add
push
scas
add
loop
outsl
rolb
mov
inc
mov
repz
call
cltd
inc
push
mov
sbb
add
dec
in
xor
push
sti
fwait
inc
mov
cwtl
jmp
loopne
cmp
or
sbb
push
inc
pop
push
and
add
sub
push
loopne
bound
add
push
stos
and
mov
add
push
add
push
add
clc
outsl
sub
push
mov
fidivrl
mov
xchg
adc
add
aaa
pop
sub
xor
testl
adc
out
push
icebp
add
add
adc
shll
hlt
add
add
cmp
movb
xchg
aas
inc
cmc
loopne
sarb
ds
add
nop
add
inc
addl
fcom
mov
push
push
mov
mov
call
mov
repz
add
adc
mov
repnz
push
mov
add
adc
pop
cwtl
ret
push
sbb
mov
fistpll
dec
rolb
xor
push
push
mov
jle
or
and
and
add
add
push
scas
push
xlat
mov
mov
xlat
adcl
or
rcrb
pop
and
add
push
push
or
stos
add
movsl
lock
aaa
pop
adc
and
sbb
and
repnz
fisubl
pop
mov
cmpsl
mov
cli
mul
mov
adc
mov
mov
push
mov
imul
xor
inc
mov
push
and
push
jns
int3
dec
imul
adc
cli
push
mov
mov
pop
mov
mov
nop
inc
xlat
xchg
fnstsw
jg
mov
loop
shl
icebp
nop
mov
mov
xor
lods
or
adc
insb
cld
push
add
jecxz
lds
push
add
mov
je
repz
or
call
ret
push
cld
push
sbb
adc
in
mov
popa
inc
jecxz
aaa
add
rorl
add
dec
or
jmp
addb
out
adc
sbb
std
push
cld
imulb
shlb
pusha
add
adc
scas
les
or
test
sbb
scas
mov
jae
fidivl
mov
divb
add
push
aaa
or
rolb
in
inc
inc
sbb
rcrb
f2xm1
add
push
andl
mov
fisubrs
faddl
ret
cmpsb
mov
cltd
out
push
jge
movsb
jmp
cmp
ret
insb
xor
cmp
sahf
jg
mov
adc
sub
adc
and
or
xchg
xor
xlat
xor
loope
add
std
in
out
call
and
lods
or
and
jmp
stos
pop
sbb
cmp
inc
enter
popa
pop
mov
inc
repz
fsubs
or
aam
or
dec
fcomip
dec
ficoml
bound
xorb
jnp
addb
xor
rcl
inc
sti
mov
jg
sahf
sbb
nop
pushf
fcomip
sbb
and
cltd
rolb
jne
repz
sahf
addb
mov
push
and
ljmp
insb
fcmovnbe
inc
call
iret
outsb
testb
rolb
inc
loop
imul
jp
je
jmp
push
fs
fildll
add
inc
cmp
mov
shl
sahf
data16
or
shrb
filds
adc
shlb
inc
movb
or
mov
mov
add
add
ret
add
fs
mov
add
test
addl
add
xchg
popl
sbb
mov
ds
ja
add
adc
std
in
add
jmp
cmp
aam
in
push
sarb
mov
mov
int
sub
adc
push
cmpsl
inc
pushw
cmpsb
mov
sti
outsl
pop
xchg
clc
mov
mov
js
sbb
outsl
mov
add
jae
push
rolb
roll
adc
call
sbb
add
push
inc
push
mov
out
xor
addb
arpl
mov
or
stos
add
push
mov
mov
jae
add
scas
stos
push
lods
popa
mov
fisttps
rolb
and
mov
inc
aad
addb
shrb
push
insl
add
nop
mov
sbb
outsb
fistpl
sahf
mov
push
test
stos
and
pop
xor
dec
add
inc
pusha
push
insb
fdivrl
sbb
mov
cwtl
pop
mov
xchg
ljmp
xchg
add
mov
lea
sbb
cmp
fwait
add
data16
mov
nop
mov
clc
repnz
fsubrs
pop
jno
shrb
and
lods
or
sbb
into
sahf
mov
push
sti
incl
sahf
lock
adc
jg
out
xor
mov
xor
rclb
test
adc
xor
sub
mov
mov
pusha
popf
mov
mov
fadds
sbb
add
or
sbb
sbb
push
sub
mov
insb
fwait
push
aam
and
decb
add
xor
add
call
loop
sbb
fs
jl
mov
jmp
fs
pop
pop
lret
sub
fcomps
mov
nop
lock
sbb
push
xor
or
xchg
add
cld
adc
pop
pop
add
push
push
mov
sbb
das
add
mov
lret
push
imul
lcall
cmc
mov
sub
fcomip
mov
cwtl
ffreep
sbb
add
push
idivb
adcl
or
std
add
testb
add
mov
int
xor
andl
andb
cmp
int
pop
jl
adc
sbb
add
adc
mov
cmp
adc
mov
loopne
adc
cmpl
xorl
fldl
sahf
orl
aam
sub
negl
sub
pop
lcall
neg
sbbl
pop
mov
nop
orb
fcomps
popf
mov
pop
ret
cli
rcr
outsb
ret
stc
pop
sbbb
roll
adc
inc
adc
cli
adc
dec
jp
repz
fidivs
adc
into
add
mov
jle
in
je
add
cs
xor
call
jmp
mov
dec
pop
jmp
sahf
not
add
dec
inc
or
pop
not
inc
add
inc
movlhps
and
xlat
mov
stos
fidivrs
stc
inc
pop
inc
es
add
shlb
or
into
out
inc
sbb
sbbb
adc
jg
inc
sbb
mov
scas
xchg
je
inc
das
and
push
pusha
sarb
je
or
repz
add
notb
or
scas
push
cltd
andb
sub
jl
testb
cmpb
jle
hlt
xchg
inc
adc
mov
lcall
add
pushf
mov
repnz
and
lods
add
add
dec
cmovno
test
jbe
fstpt
jge
data16
fisubrl
or
mov
test
mov
or
add
add
pushf
add
or
push
push
push
sbbb
jg
fbld
push
clc
incl
inc
push
inc
sub
loop
mov
das
ret
xor
jo
ljmp
out
push
inc
sbb
push
bound
ja
jne
add
fisubs
add
adc
xor
es
bnd
retw
mov
and
sbb
fsubl
dec
pop
sbbb
xor
fs
shlb
dec
fdivl
ds
das
das
mov
mov
jmp
xchg
iret
outsb
pop
jne,pn
pop
scas
insb
orb
jg
ret
loopne
lods
or
pusha
or
pop
or
dec
loope
loopne
add
adc
mov
xor
jl
sub
jno
inc
pusha
sub
test
scas
push
aad
or
push
mov
sbb
push
repnz
dec
jp
jae
or
jae
inc
fistl
xor
mov
add
jae
add
js
pop
arpl
fldt
inc
push
insl
sbbb
push
fsubrp
or
inc
filds
jl
or
shl
xor
fwait
add
not
inc
or
add
incl
inc
shlb
loop
testl
loope
xor
push
or
or
mov
push
hlt
repz
pusha
sub
js
popa
inc
add
mov
cltd
push
xchg
and
or
cld
push
pop
xchg
or
inc
mov
incl
pusha
mov
or
jmp
xor
cld
jno
loopne
pushf
dec
add
sar
push
out
mov
in
jmp
mov
add
sti
je
cmp
insb
and
loopne
faddl
fisttps
insl
ret
lods
mov
mov
mov
mov
loopne
aas
sub
sti
dec
and
pop
lds
movsb
div
int3
pop
or
mov
hlt
jnp
loopne
insl
mov
adcl
mov
fs
add
popa
test
xor
fwait
mov
mov
repz
loopne
jl
mov
int3
add
rclb
clc
jae
add
adc
loop
xor
adc
jl
aas
inc
adc
clc
outsl
cmpsb
imul
pop
ljmp
add
fs
mov
add
and
jg
or
cli
lahf
rcrl
pop
shlb
andb
add
in
mov
mov
test
pop
add
subb
mulb
inc
adc
lcall
pop
add
cmp
call
outsl
push
les
sarl
and
and
jmp
pop
mov
jg
add
mov
shll
push
sysexit
mov
shlb
adc
rcll
and
pop
xor
js
sub
lret
push
xor
lcall
loop
enter
pop
and
cmpsl
sbb
subb
rcr
sub
add
cmp
icebp
stos
fbstp
jo
xchg
lock
pop
jmp
fdivl
mov
adc
and
pushl
les
pusha
xor
int3
and
add
xor
hlt
xchg
pop
dec
aam
lret
into
movsb
adc
sarb
adc
psrld
mov
and
push
sbb
test
rcl
mov
push
and
xor
ds
sbb
add
push
pop
dec
lock
call
insl
mov
mov
lods
push
add
outsl
test
movsl
add
imul
std
fisttps
add
add
xlat
mov
mov
add
add
mov
push
lcall
lock
xor
cltd
push
push
addl
mov
rcrl
inc
push
repz
sahf
in
and
jo
in
cli
adc
sub
outsb
lcall
sub
add
push
imul
mov
in
aas
add
or
push
xor
fiadds
add
mov
mov
mov
mov
xor
std
das
mov
mov
push
and
or
cmp
sub
push
mov
pop
ja
xlat
sub
flds
xchg
js
stos
push
je
jo
jb
xlat
insb
pop
mov
sub
xor
shrb
sbb
adc
in
or
lods
or
jne
or
das
mov
loop
stc
test
mov
mov
inc
pop
movsb
mov
xchg
inc
aad
dec
push
cld
iret
testl
mov
icebp
clc
icebp
push
imul
add
incb
addb
xor
dec
jmp
loope
cmpsl
inc
xor
pop
ret
push
jmp
cmc
call
mov
clc
imulb
stos
lock
mov
inc
mov
push
scas
outsb
push
mov
repnz
or
mov
test
add
jmp
pop
js
movsb
mov
jae
push
das
add
loopne
cmpb
les
jb
ljmp
jg
in
and
jbe
pop
adcb
jne
es
xchg
cmpb
or
mov
verw
addr16
test
nop
jl
int
add
mov
les
hlt
adc
popf
test
add
nop
jno
notw
or
lcall
stos
dec
or
sub
shl
subl
pop
jecxz
sub
push
subb
pop
inc
stos
decb
cwtl
mov
les
rorb
mov
xchg
lret
nop
pusha
push
mov
add
push
push
push
dec
rolb
loopne
repz
inc
mov
jb
and
fs
test
repnz
or
and
jl
sub
pusha
pop
stos
rorb
lods
mov
das
mov
or
xor
jg
popa
jp
ss
rolb
mov
mov
jg
add
adc
fwait
lea
add
hlt
shr
push
push
dec
movsb
sbb
outsb
movsb
or
sbb
sub
adc
add
test
add
ja
mov
cs
jg
cmpb
adc
inc
add
push
orb
stc
mov
cmp
insb
jp
sbb
test
add
scas
and
hlt
or
xor
mov
xor
cmp
inc
mov
sub
mov
adc
or
pop
dec
inc
imul
sbbb
xchg
adc
add
sbb
sbb
add
rcl
jp
mov
and
incl
adc
add
fmuls
add
das
push
xor
shl
xchg
pusha
fwait
push
push
scas
in
inc
add
mov
test
sbb
in
aaa
jno
mov
add
or
jmp
andb
dec
xchg
push
adc
and
inc
cld
das
adc
jl
mov
add
jl
nop
pop
out
adc
xlat
xor
fidivs
and
hlt
into
rorb
mov
mov
cmp
icebp
inc
sarl
aas
jne
cli
repz
stos
loop
mov
mov
aad
sarb
call
and
xchg
xor
or
int
addb
inc
and
and
jmp
mov
mov
clc
mov
adc
inc
sub
xchg
scas
clc
call
test
adcl
rol
mov
push
xchg
xor
sbb
add
fwait
insl
add
out
push
push
inc
jo
je
cmp
nop
aad
daa
sbbb
into
test
dec
mov
pop
jecxz
stc
popa
xor
int3
sbb
jg
pop
jnp
adc
mov
push
add
sub
or
pop
add
dec
rcr
xor
sub
cmpsb
je
test
or
mov
jno
mov
mov
jmp
out
xchg
sbb
and
cld
adc
jbe
fists
movsb
xchg
ss
popa
add
clc
adc
cs
push
ds
sbb
data16
push
cmpsb
cmp
js
test
out
clc
std
and
push
pop
mov
and
sub
ljmp
add
cmp
pop
xchg
pop
add
es
push
or
mov
adc
lods
pop
daa
data16
inc
push
cs
std
dec
or
or
shlb
clc
xchg
cld
push
jbe
fcomip
scas
fdivrs
inc
incl
add
add
std
mov
je
jae
mov
fildl
lods
cmpsb
cmpsb
sbbb
and
ja
cmp
int3
push
daa
pop
faddl
cmp
je
cs
sbb
outsl
and
mov
repnz
add
sbb
jecxz
add
cmp
pop
ret
out
cld
or
repz
jo
push
mov
popf
lea
je
ret
add
out
add
mov
jle
and
subl
outsb
xchg
fdivp
pop
pop
mov
ds
ds
or
sbb
add
int3
cli
testl
jle
lods
and
cwtl
sub
lods
xor
addb
mov
cmpsl
lds
pop
clc
add
sub
sub
cmp
fmull
xor
in
xchg
push
sarb
xchg
cmp
jnp
arpl
adc
adc
dec
dec
arpl
addb
into
push
add
jmp
cmp
push
stos
add
test
xchg
push
subb
jb
adcb
mov
push
and
mov
pop
imul
cli
roll
or
ss
adc
sbb
aas
ds
add
add
sbb
sub
cmp
and
loopne
or
sbbb
add
push
or
jne
mov
and
stos
adc
dec
aas
lods
push
push
lock
sbb
add
sbb
pop
add
pop
testb
icebp
js
out
lea
mov
cmpsb
into
inc
test
push
subb
mov
roll
aaa
add
dec
mov
adc
test
jo
push
cmpsb
pushf
sbb
bound
adc
sub
push
fiadds
xor
or
aad
xorb
es
nop
xchg
add
out
adc
or
lock
push
shlb
adc
je
fidivrl
stos
pop
sub
je
out
add
es
decb
pop
sbbb
aaa
inc
incb
fdivl
les
in
push
mov
fbld
mov
sarb
arpl
ss
and
add
jo
nop
fidivl
push
mov
xchg
cli
dec
mov
mov
out
xchg
idivb
inc
rcll
adc
mov
iretw
orl
test
je
jp
loopne
ret
cmpsl
pop
jle
push
xor
xchg
pushl
dec
cli
nop
push
adc
adc
sbb
fimuls
add
not
popa
cltd
je
cmpsb
or
or
sbb
notl
or
decl
enter
inc
pop
rcrb
clc
fildll
call
enter
lldt
mov
sub
movsb
mov
out
ljmp
add
fisttps
lock
push
std
mov
or
xchg
repz
add
cld
pop
add
fsubrl
add
push
test
outsb
insb
xor
sub
or
and
in
add
jle
xchg
mov
pop
bound
mov
jecxz
les
push
add
cwtl
test
fwait
shrb
mov
or
addl
or
mov
pop
andb
push
jg
adc
xchg
lods
shlb
pop
inc
inc
xor
leave
cmp
xor
jl
cmp
cmp
insl
loopne
lods
sti
outsl
js
pop
push
outsb
arpl
insb
adc
pop
add
add
xor
hlt
insl
sbb
jle
add
xchg
fwait
jbe
lret
inc
dec
andb
add
sbb
pop
fcmovu
call
aas
hlt
cmp
js
add
inc
add
out
dec
add
inc
add
sbb
andl
es
push
xor
xorb
in
and
cmp
hlt
pusha
push
loope
cs
call
sbb
jp
mov
out
inc
clc
inc
lahf
rorb
test
fsubrs
push
lret
mov
cmpsb
fdivs
daa
jl,pn
test
insb
insb
adc
sbb
sub
mov
push
push
out
jbe
fwait
mov
sub
inc
and
cmp
and
enter
and
add
sbb
add
popa
and
pop
lcall
and
loopne
xchg
andl
add
or
fildl
and
add
sbb
and
cmp
icebp
mov
arpl
pusha
in
jle
jns
mov
push
xchg
add
es
sub
sti
mov
mov
adc
into
pusha
push
in
adc
xorb
rolb
and
add
inc
pop
fs
or
adc
push
cli
mov
jmp
adc
mulb
dec
cwtl
mov
out
ljmp
pop
fistps
push
inc
and
and
adc
loope
aam
incl
loopne
inc
or
add
push
inc
es
faddl
inc
or
rolb
cmp
xor
cli
imul
push
xorb
mov
jmp
add
nop
jg
inc
sub
movsb
aaa
rclb
fcmovnb
ret
and
xor
lcall
mull
pop
pop
sbbb
sub
mov
pushl
inc
push
out
cmp
sub
enter
pop
icebp
subl
inc
mov
cmpb
ret
das
cmpsb
icebp
ja
mov
adc
and
cmp
xchg
and
cmp
xor
sahf
pusha
dec
sti
jmp
arpl
leave
add
shrl
mov
mov
mov
mov
jle
mov
cli
add
inc
shrl
adc
dec
cwtl
rclb
lahf
dec
std
arpl
cmpsl
test
pusha
insl
mov
je
mov
lret
fcmovnb
sbb
mov
or
sbb
test
adc
add
inc
addb
test
rcr
hlt
or
or
or
pop
nop
sti
scas
mov
int3
mov
add
add
and
loopne
cltd
cmp
in
jmp
pop
xchg
push
cli
test
fs
mov
sub
mov
mov
aaa
cwtl
or
jmp
out
and
inc
pop
in
mov
add
pusha
xchg
hlt
or
add
xor
or
sub
jb
shrb
shll
outsb
ficomps
mov
or
cmp
sbbl
fiaddl
mov
ljmp
cmp
inc
mov
push
or
enter
mov
sbb
and
bound
or
sti
adc
or
xor
jb
imul
mov
outsb
inc
outsb
test
jns
repz
data16
mov
cmc
pop
sub
mov
fists
adc
adc
xchg
testl
xor
add
dec
push
mov
xor
inc
push
repz
lods
mov
push
sub
jmp
inc
mov
add
inc
repz
out
cmp
clc
mov
xchg
incb
jno
lahf
mov
jbe
je
fs
stc
jne
sub
out
or
cmp
icebp
adc
iret
rclb
ret
cmp
stos
shl
xor
les
out
jg
add
cld
incl
js
and
ret
adc
and
mov
xor
not
in
pop
rorb
jo
rcl
adc
push
inc
loopne
mov
fs
mov
mov
pop
mov
cmp
adc
push
pop
sub
loop
sub
mov
push
ret
loopne
jo
cmp
push
sbb
pop
push
mov
cld
stos
inc
xor
ljmp
add
sbb
xchg
dec
cld
sbb
add
lcall
adc
inc
pushl
lods
test
out
or
jl
adc
jb
in
jmp
fwait
dec
decb
mov
je
adc
push
push
inc
add
mov
ret
push
push
cli
incl
loopne
imull
cmpsl
pop
rclb
mov
aam
fiadds
mov
lods
push
fsubl
mov
xchg
jle
mov
mov
mov
cmc
scas
mov
in
addr16
xchg
popa
add
rorb
inc
inc
add
cwtl
add
xor
out
push
mov
scas
inc
push
cmc
lods
pop
push
pop
in
dec
cld
cmp
adc
or
cmp
out
sbb
out
jb
nop
sti
cmpsl
xchg
pop
dec
mov
inc
xor
adc
jb
jp
add
add
pop
or
scas
orb
and
mov
inc
addr16
out
push
aam
pop
test
loope
lea
ret
add
repnz
and
cmp
enter
je
cmp
mov
mul
sbb
loope
insb
loopne
nop
daa
out
adcb
rolb
std
sbb
mov
and
cmpsb
push
adc
pop
cmp
mov
es
mov
sub
mov
push
sahf
mov
repz
scas
jb
xor
out
sbb
push
aam
es
je
loope
lret
xchg
aam
add
loop
scas
mov
xor
clc
jg
pusha
push
test
xchg
mov
jle
test
ror
ss
mov
mov
fiadds
stos
add
jne
xor
iret
jmp
ljmp
and
ret
lods
add
test
inc
push
push
insl
loope
mov
lcall
cmpsl
jp
inc
rol
jbe
xorb
add
xchg
or
les
dec
inc
dec
pusha
or
mov
or
ja
fs
daa
adc
xchg
add
shrl
mov
push
add
mov
jmp
test
fcoml
pop
xchg
jp
into
adc
mov
adc
adc
push
add
fcoms
call
loopne
pop
test
je
icebp
mov
addb
icebp
js
mov
mov
jmp
imul
mov
sbb
in
and
outsb
jecxz
shlb
jg
cwtl
icebp
adc
sbb
aam
lds
sbb
or
das
adc
or
xchg
bound
imul
test
fsubl
or
enter
adc
stos
imul
jg
stos
mov
pop
add
fdivl
dec
dec
inc
push
ds
xor
xor
sub
int3
mov
push
and
push
sbb
or
gs
jmp
mov
cwtl
lods
push
adc
sbb
mov
bound
pop
dec
push
test
mov
sub
jmp
pop
out
mov
out
call
jne
shrl
or
int3
fwait
mov
mov
sub
mov
sub
cld
push
add
push
sarb
jbe
sbb
push
cmc
leave
push
adc
lret
incl
sub
add
fdivrl
lock
ret
nop
add
loopne
sub
sbb
gs
stc
add
js
out
das
and
pop
lock
cli
icebp
jge
mov
jp
imul
std
pop
push
inc
push
cli
add
sbb
mov
push
xchg
jle
scas
clc
incl
rcrb
decb
test
dec
sbbl
fidivl
inc
and
nop
jg
or
mov
divl
mov
xor
scas
rclb
mov
inc
mov
sbb
or
decl
sub
pop
mov
or
and
mov
xchg
imull
add
jecxz
jae
xchg
ljmp
mov
out
jne
clc
je
fbstp
or
mov
sbb
mov
sub
push
repz
pop
mov
mov
test
mov
mov
pop
insb
sub
xchg
insb
hlt
bound
les
or
mov
es
andb
ss
popf
mov
mov
divl
xchg
inc
or
pop
es
lea
and
pusha
inc
ss
and
mov
aaa
pop
das
or
push
shrb
cs
push
loop
cld
js
mov
push
or
sub
adc
sbb
lods
pop
push
popa
mov
in
adc
add
inc
dec
sbb
leave
pop
mov
dec
sbb
add
xchg
rorl
push
push
es
mov
es
icebp
sbb
or
inc
mov
add
inc
je
jno
mov
mov
test
or
add
std
pop
stos
jb
push
leave
xor
lret
ret
sub
or
popa
into
push
xor
aad
cmp
js
or
jbe
lods
in
mov
mov
add
mov
lock
pop
cld
sub
sub
dec
pop
push
dec
insl
xchg
pop
insl
xorl
pop
add
and
mulb
inc
iret
bound
outsb
or
add
adcb
xchg
sbb
mov
push
ds
in
dec
xchg
int3
and
push
dec
cld
push
add
dec
mov
sub
mov
dec
jmp
fmul
jp
cmpsl
mov
ss
test
mov
add
push
mov
push
fwait
scas
and
xchg
lock
rcrb
stos
lea
fisttps
add
dec
fdivrs
inc
mull
addl
scas
xchg
fildl
push
lea
mov
or
mov
inc
cs
lcall
cli
add
xchg
sti
add
and
iret
movb
lock
push
xchg
or
adc
movsb
lds
add
pop
pop
inc
lcall
adc
outsb
mov
jo
das
adc
test
test
fldt
add
imul
lcall
orb
pop
inc
lret
jl
movl
int
loope
and
outsb
sarl
bound
and
into
loopne
mov
add
idivb
add
cmp
pop
sbb
popa
inc
push
inc
sbb
outsl
mov
or
inc
sbb
inc
sbb
mov
pop
push
mov
ret
xlat
push
lds
sbb
jbe
inc
nop
decb
sbb
xorb
jns
cli
mov
jmp
add
je
rcll
adcb
add
xor
cmp
cmp
div
mov
popa
sar
fcmovnbe
inc
in
addr16
mov
mov
imul
pop
movb
and
out
aas
ret
cmc
sbbb
cmpb
sbbl
pop
aaa
inc
adc
inc
or
push
inc
std
xchg
ljmp
mov
sub
cmpl
adc
dec
loopne
leave
stc
mov
mov
mov
mov
inc
xchg
add
inc
xchg
or
jl
lea
sbb
jb
std
jg
adc
adc
or
cmpps
cmp
lcall
or
shlb
jo
pop
sbbl
cmp
or
cmp
cmp
orl
call
fdivr
push
cli
shll
xchg
shrb
push
push
cli
scas
pop
inc
mov
xor
jle
les
mov
call
icebp
aam
sbb
aam
cmp
sarb
inc
push
test
mov
push
je
sbb
cmp
push
ss
push
es
jge
loopne
popa
and
add
xor
dec
adc
lret
mov
fdivl
push
outsl
pusha
xor
push
lock
and
sub
cmp
add
mov
test
insl
mov
js
jne
pop
or
push
push
cmpsb
push
pop
mov
sar
push
dec
cmp
shl
sbb
pop
dec
cli
mov
out
jb
lret
fiadds
dec
inc
xor
cmp
movsb
loop
jb
cli
jl
mov
sub
mov
sub
lods
cmp
sub
loop
daa
loopne
popa
std
sub
add
into
sbbb
add
mov
fisubrl
sub
stos
inc
repz
mov
adc
std
aas
rcrb
mov
mov
xor
addr16
sub
adc
jecxz
pop
xchg
out
or
test
push
push
nop
or
repnz
mov
ljmp
mov
out
je
pusha
xchg
or
adc
fidivrl
sbb
sub
repnz
inc
cmp
stc
pusha
sbb
inc
loop
aam
aaa
fdivl
or
aam
loop
test
cmp
ret
and
and
add
rol
push
fwait
jb
adc
jg
push
add
pusha
sub
sub
push
test
sbb
popa
rolb
and
adcl
inc
int3
mov
repz
in
fildll
cwtl
jl
cli
in
pop
les
sub
les
jle
stos
shll
ret
decl
or
outsl
aad
add
mov
dec
adc
mov
mov
mov
lods
ss
gs
loopne
sub
mov
loopne
test
xor
and
and
lret
pop
mov
testl
pop
push
and
jmp
je
and
pusha
dec
and
inc
roll
or
out
enter
arpl
pop
jecxz
pusha
pop
loopne
in
xor
or
dec
sbb
js
inc
push
and
add
mov
fdivrl
sbb
xchg
std
int3
outsb
or
lods
lods
mov
pop
addb
stos
xor
add
xor
mov
inc
pop
int3
int3
xor
inc
test
faddp
pop
lods
jbe
sub
ja
add
das
add
push
fadd
jg
xor
stos
movsl
fisubs
cmp
add
pop
jecxz
ja
cmpsb
pop
and
stc
shl
jmp
hlt
mov
adc
pusha
push
in
loope
sbb
fcompl
sub
mov
pusha
or
add
loopne
push
sub
mov
sub
dec
out
inc
es
add
add
and
mov
mov
mov
cmp
push
mov
xor
adc
dec
out
ret
xchg
sub
mov
loope
movsl
repnz
or
mov
int3
sbbb
push
dec
xlat
sbbb
pop
xor
jecxz
es
iret
jno
mov
sub
mov
lods
rcrb
ljmp
mov
dec
jo
loop
aam
pop
repz
loopne
add
and
sub
push
inc
data16
adc
push
fdivs
loop
or
repz
addb
enter
sub
and
and
fdivrl
add
repnz
loopne
or
push
add
fadds
or
inc
rorb
divb
movsl
sub
jns
add
push
js
je
sbb
fadds
or
mov
mov
jp
jg
jg
add
arpl
shrb
inc
mov
push
bnd
rcl
data16
lods
add
subl
add
rorb
sbbl
inc
dec
mov
dec
or
lock
adc
andl
and
cmp
dec
les
mov
lds
add
jo
fsubs
je
cs
or
push
push
cld
xchg
hlt
stos
mov
jecxz
push
cmpsb
cmpsb
andb
jb
test
loopne
and
or
lock
loop
les
mov
push
cld
and
fs
and
ret
or
test
ret
jb
movsb
outsb
xchg
hlt
jb
inc
in
insb
aam
sar
insl
jmpw
push
mov
and
mov
dec
cmp
outsb
mov
add
nop
cmp
stos
incb
nop
xchg
sub
lahf
mov
ds
add
pop
push
dec
fwait
addb
stos
or
dec
mov
outsb
push
add
dec
jmp
inc
push
fsubrl
mov
mov
adc
fisttpl
rolb
hlt
in
jg
lahf
mov
loope
pop
xchg
sub
es
sub
fbld
add
adc
icebp
jle
adc
sub
add
repz
xor
push
hlt
imul
add
shlb
pop
and
sbb
dec
or
je
or
and
inc
push
sub
sbb
les
fsubs
loope
xchg
mov
xchg
push
add
rolb
addl
adc
mov
xor
pop
mov
sti
in
xchg
out
test
pushw
iret
add
adc
cmpsb
push
std
jbe
hlt
cli
fbld
fcomps
jmp
cmpsl
xchg
add
mov
les
inc
pop
xor
and
or
fdivrl
jns
cmp
adc
add
mov
rol
dec
mov
mov
enter
clc
mov
or
or
cmp
add
add
add
inc
decb
jmp
adc
adcb
nop
jp
ljmp
loop
pop
rclb
push
jne
mov
xor
sbb
inc
pusha
mov
nop
mov
les
adc
in
loopne
xor
pop
in
ret
add
or
cmp
lret
loopne
add
adc
xchg
in
rolb
adc
dec
and
call
and
aaa
inc
nop
dec
jo
test
rorl
pop
jo
or
jb
jp
jecxz
jmp
adc
roll
ljmp
dec
or
pop
and
mov
dec
je
roll
cld
daa
call
lcall
adc
xor
xor
cmp
out
push
jo
je
fdivs
pop
cmc
jg
xor
xchg
add
add
aas
cmp
in
dec
clc
pop
cld
sbb
add
adc
mov
pop
add
int
jmp
orb
mov
repnz
call
xor
loope
stc
xchg
fisubrs
insl
xchg
add
nop
mov
loope
lock
loop
mov
or
and
fisttps
stos
cld
xchg
or
rcrl
pop
gs
inc
push
xchg
and
lds
pop
cli
loopne
jae
xchg
add
aaa
jl
add
sbb
sub
decl
jo
mov
add
std
jbe
mov
flds
lock
jb
jae
adc
xor
out
stos
ss
mov
and
ss
rolb
loope
inc
add
stos
push
mov
or
jbe
enter
add
pop
sarb
fadd
or
jne
xchg
sub
push
and
mov
or
push
mov
andl
pop
incl
mov
test
xchg
rcll
mov
push
xor
std
push
orb
adc
inc
ljmp
test
mov
mov
ret
add
pop
leave
arpl
inc
mov
orb
in
test
dec
out
lods
ficompl
xchg
inc
sub
out
jp
xchg
mov
jbe
je
sti
jo
loopne
cli
or
xor
call
hlt
pop
push
and
inc
cmc
mov
push
idivb
pop
scas
mov
adc
add
mov
pusha
dec
pop
fcomip
or
rolb
adc
pop
and
jp
sti
incl
mov
decl
aas
mov
cmpsb
add
roll
pop
inc
cld
mov
push
test
mov
out
pop
push
and
xor
xchg
stc
jnp
popa
adc
pushl
add
sub
inc
lock
sbb
push
push
fists
clc
insl
mov
xchg
out
scas
add
inc
inc
sub
xor
fildll
je
xor
js
loop
xor
jg
jle
ljmp
fwait
call
outsl
xchg
cmp
cltd
out
incl
pusha
iret
jecxz
cpuid
scas
mov
push
rcll
mov
pop
add
push
and
fisubs
cmp
jg
loopne
sbb
cli
stos
notl
pop
test
cmc
push
mov
stc
test
xchg
cli
add
xchg
add
cld
push
adc
adc
push
lods
mov
aam
mov
pop
inc
or
mov
ss
mov
sbb
aas
fnstcw
mov
sti
fisttps
add
mov
add
aam
dec
insl
test
dec
mov
jae
dec
add
mov
dec
mov
fadds
add
pusha
shrb
cmp
clc
aad
jg
ljmp
incl
lcall
sbb
adc
inc
fadds
out
add
out
push
aas
daa
cmc
jbe
test
push
or
add
add
add
incl
lret
push
add
testl
sbb
inc
inc
sub
add
sbb
mov
or
add
add
mov
mov
adc
in
mov
cmc
add
ds
xorb
mov
addb
xchg
das
xchg
mov
ljmp
adc
sub
test
inc
jmp
in
xor
scas
or
sbb
andb
pop
dec
inc
dec
mov
dec
std
data16
or
and
test
adc
or
push
inc
enter
jp
mov
cmp
addb
inc
mov
cmc
orl
dec
loop
addb
lret
mov
call
sqrtps
push
sbbb
push
xchg
jno
adc
hlt
adcb
stos
clc
cmp
imul
add
add
inc
adc
push
je
lcall
jb
addl
insl
sbb
adc
dec
test
mov
out
jp
push
cmp
xor
xchg
jo
jg
enter
jle
or
clc
fstl
pusha
jbe
je
rolb
inc
cmp
add
add
shrb
out
outsb
fiaddl
movsl
fildll
inc
or
shlb
inc
popl
cmpb
dec
inc
aaa
cmp
or
into
mov
add
adc
orb
add
inc
push
mov
insb
adc
inc
add
addb
push
jl
jnp
sub
and
ds
xchg
out
mov
cmpb
jbe
sbb
incl
rorb
stos
inc
ds
mov
pushl
add
pop
dec
out
mov
addl
add
inc
or
jbe
sti
pop
or
lods
cmpsb
xor
out
adc
test
sub
lods
lret
pop
adcb
mov
inc
push
orb
fistps
fld
shlb
inc
jp
hlt
jg
icebp
std
rcl
inc
push
outsl
test
xchg
push
jl
and
add
add
or
cmpsb
sub
lds
xorb
andb
lock
and
sti
pop
pop
adc
addb
push
push
rolb
and
sbb
adc
fists
fdivl
stos
adc
mov
add
dec
cmp
add
loope
sub
pop
xchg
or
mov
enter
lldt
insl
repz
sti
xchg
ljmp
push
pop
or
movb
dec
add
rclb
mov
es
stos
inc
clc
cmp
ror
adc
addr16
jb
or
in
dec
ret
pop
adc
fistpll
mov
rcr
adc
push
xchg
das
loopne
pusha
bound
jmp
outsb
cmp
sbbb
adc
dec
cld
nop
push
sbb
fs
popa
push
cld
cmpsb
adc
xchg
mov
aaa
xchg
clc
aam
cli
outsl
dec
mov
adc
cmp
fimull
push
add
push
orb
test
jp
pop
addr16
adc
sbb
scas
or
incb
adc
in
dec
cli
jl
or
adc
mov
iret
adc
subb
xchg
xchg
add
loop
popa
call
or
or
fisubrl
ljmp
mov
in
sub
daa
and
loopne
leave
pop
leave
sub
push
lcall
addb
cmpsb
stos
push
cld
add
and
pop
test
inc
adc
jg
test
jbe
pop
and
inc
pop
add
stos
mov
pop
or
loopne
and
dec
add
in
fucomi
lods
xchg
fldln2
or
xor
out
xchg
fnsave
subl
aaa
testb
pop
dec
dec
fcmovb
cmp
jb
ss
push
out
inc
xor
mov
scas
lods
inc
pop
mov
or
pop
sub
pop
int3
movsb
ss
sub
mov
sub
dec
or
jb
cmc
and
insl
push
pop
movsb
push
pop
cs
ljmp
jmp
out
push
or
popa
dec
imulb
rcrl
inc
lods
add
das
test
xchg
cmp
pusha
push
enter
sub
jb
lock
jnp
bound
and
inc
or
inc
mov
mov
jmp
call
add
add
lcall
add
xchg
pop
pop
inc
addb
push
xchg
push
ljmp
adc
rclb
mov
or
shrb
adc
rcll
inc
es
divb
jmp
push
add
mov
rcrl
insb
xchg
push
or
and
scas
push
and
nop
sub
xchg
or
fistps
sahf
ldmxcsr
xchg
loopne
or
push
jne
and
and
xchg
adc
inc
popa
dec
adc
stos
jo
push
and
mov
mov
addb
add
lret
sub
xor
inc
int3
add
xchg
mov
push
mov
jp
outsb
add
jmp
jecxz
mov
stos
fs
add
daa
push
dec
jmp
dec
inc
jne
addb
outsb
out
mov
nop
pop
mov
cmpsl
mov
and
clc
dec
xchg
push
scas
cli
adcb
jb
pop
adc
mov
scas
andl
add
rolb
sbb
sub
movsl
rolb
xor
dec
xchg
pop
popa
xchg
mov
adc
scas
and
fs
pop
test
movb
pusha
jecxz
add
decb
jb
not
and
mov
mov
pushl
loopne
xchg
scas
cmpsl
loopne
jecxz
push
sub
mov
aaa
push
push
int
and
test
sbb
fs
movsl
cmpsl
or
mov
and
cvtpi2ps
mov
add
fadds
jnp
mov
movsb
scas
xor
mov
outsl
pop
or
pusha
ret
jbe
add
mov
loopne
pop
inc
sbb
dec
mov
add
cmc
jb
fistpl
lcall
adc
mov
loopne
add
lock
jb
clc
stos
ljmp
adc
rorb
add
or
and
insl
sub
mov
sti
mov
mov
add
mov
ss
mov
lcall
incl
les
je
and
mov
xchg
or
add
mov
and
mov
aas
push
test
pop
mov
cmp
incb
ja
enter
xor
stos
test
in
jo
scas
fmuls
inc
mov
jbe
xor
outsl
cli
pop
pop
in
test
arpl
xchg
stc
mov
pop
test
into
out
push
adc
aaa
push
or
pop
add
je
loopne
or
mov
adc
pusha
stc
dec
std
adc
dec
add
gs
and
mov
cmp
and
xor
fs
dec
aam
stos
dec
cmpsb
xchg
out
sbb
cld
dec
pushf
add
fcos
aaa
cwtl
pushf
pop
and
push
or
adc
pusha
sub
push
and
sti
nop
mov
sbb
nop
mov
add
and
fisubrs
test
dec
add
xor
jbe
xor
jno
hlt
pop
push
push
and
pusha
push
jecxz
push
sub
mov
fbstp
mov
das
loope
push
je
add
hlt
addb
add
ljmp
push
adc
rcll
movsl
adc
fdivrp
or
adc
push
jno
orl
cmc
lock
int3
push
xchg
hlt
filds
call
inc
adc
lods
andb
add
call
lock
push
and
or
jle
adc
adc
ss
push
mov
subb
imul
push
or
add
push
pop
test
inc
ljmp
test
xor
jmp
ds
add
hlt
ds
decl
mov
mov
je
xor
fdivr
jg
popf
and
sub
xchg
adc
mov
push
mov
pop
pusha
sub
jno
call
add
add
push
popa
push
dec
fisttps
xchg
ja
cmp
inc
int3
nop
push
nop
or
icebp
pop
inc
ffree
inc
sbb
adc
inc
add
lods
add
fldcw
cmpsb
outsb
in
xchg
xor
add
jmp
add
out
mov
icebp
mov
sarb
add
mov
loopne
or
in
push
add
pop
test
adc
int3
sbb
cli
cld
call
std
push
cmp
loopne
insb
mov
roll
mov
xchg
and
mov
ret
add
icebp
xchg
jmp
or
mov
xor
or
mov
or
ljmp
and
or
push
shrb
addb
das
xchg
jo
pop
loop
push
cltd
jbe
jp
mov
xchg
out
xor
xor
das
sub
push
jl
pop
les
pop
cltd
loope
jns
ds
test
add
add
lcall
roll
pop
jecxz
add
mov
ret
mov
xchg
push
inc
push
stos
jno
mov
add
movb
jnp
loopne
adc
jo
and
add
sbb
pop
dec
dec
mov
cmpsb
add
jbe
sub
mov
pop
les
jl
lods
fisubrs
rorb
xor
mov
adc
lock
in
bound
stc
loopne
add
out
xchg
cld
mov
adc
or
pop
into
xchg
mull
xor
xor
adc
clc
or
add
sbb
ret
aas
sbb
cmpsb
add
pop
mov
mov
add
push
cmp
call
pop
adc
rorl
and
sub
adc
lret
rcr
or
inc
jp
ret
js
mov
decl
ss
inc
test
mov
and
movsl
and
push
or
lock
pop
lods
and
sub
inc
ret
aad
ja
shlb
out
pop
jg
mov
mov
sbb
dec
or
sub
std
or
push
mov
adc
push
pop
lds
adc
cmpsb
jmp
testl
add
into
mov
adc
bound
sbb
cmp
and
loopne
xchg
dec
inc
cmpsb
or
shrl
xor
sub
push
jecxz
fbld
and
jo
movsl
xchg
add
push
push
cltd
test
mov
xor
jo
daa
sub
cmp
call
sub
pop
mov
loopne
mov
adc
movsl
pusha
sbb
rclb
jp
xor
lcall
push
push
cld
push
in
mov
add
shlb
addb
decl
inc
ret
cmp
mov
lcall
mull
xchg
adc
nop
or
leave
rolb
cmp
or
xor
mov
gs
pushl
dec
mov
into
jb
mov
scas
inc
adc
push
add
dec
add
lds
jbe
lret
je
in
mov
mov
xchg
out
cltd
pop
addl
xor
mov
and
ja
loop
test
das
jne
pop
insl
rolb
lret
pop
xor
and
and
mov
push
je
out
ljmp
xor
or
push
das
subb
in
pushf
add
stos
je
fisubrs
js
dec
test
inc
sbb
jmp
pusha
add
in
and
add
cli
add
mov
pop
pop
stc
adc
sbb
add
ret
ficomps
xchg
call
xchg
add
inc
roll
sbb
and
xor
repnz
sub
or
pop
jno
add
inc
add
insb
leave
je
pop
cmc
lea
mov
pop
daa
mov
adc
addb
add
sbb
mov
xorb
mov
adc
pop
xchg
sub
add
xorl
jg
add
adc
incb
and
dec
mov
jmp
lea
filds
mov
in
pop
lret
gs
movsl
lea
dec
aad
add
sub
jne
cmpsb
sub
sub
lock
je
inc
cmp
and
sub
fnstsw
and
into
lcall
sahf
test
out
nop
mov
add
lahf
mov
cmp
cmovbe
test
and
aad
outsl
lret
push
icebp
call
inc
popa
rcrb
movsb
ret
cs
add
shrb
ds
popa
add
lcall
popa
in
mov
lds
lds
cmp
xor
mov
and
cmpsl
pop
aam
jg
movsl
add
outsl
inc
push
xchg
std
rorb
adc
mov
jbe
inc
mov
or
or
pop
aaa
sub
mov
andb
addr16
mov
mov
add
push
test
mov
adcb
das
sbbb
loopne
incl
testl
inc
dec
les
rcrl
data16
mov
les
or
add
insb
pop
xlat
pop
adcb
mov
cmpb
fidivl
les
and
add
call
mov
fcmovb
adc
fisubrs
and
jb
lock
and
pop
roll
sub
nop
rcrb
pusha
mov
mov
jle
or
sbb
inc
pop
out
call
adc
sbb
jbe
rorb
ret
dec
and
cmpsb
cs
add
add
addb
mov
enter
adc
aas
scas
test
lods
addb
ljmp
sbb
flds
pop
adc
push
xchg
lcall
ss
cmp
jae
es
es
les
inc
mov
dec
pusha
xor
push
xchg
xor
daa
jmp
scas
lods
mov
push
push
mov
push
xlat
das
and
outsl
add
jno
movsb
mov
hlt
jmp
mov
mov
push
inc
repnz
push
inc
mov
lret
iret
std
mov
lcall
mov
pop
xchg
call
rcr
lret
push
andl
cmp
mov
sub
inc
add
or
pop
outsl
stos
cmpsb
mov
push
jb
pop
mov
inc
or
pop
mov
inc
pop
cmp
inc
enter
add
and
scas
test
and
sbb
mov
outsb
add
cs
mov
das
shrb
loop
loopne
orb
and
sar
les
mov
inc
or
mov
inc
pop
pop
and
shlb
jle
adc
cli
inc
jge
cmp
mov
jnp
lcall
jle
incb
jb
aad
pop
andb
or
push
dec
push
xchg
repz
sub
add
test
mov
cmp
test
rolb
inc
jbe
scas
mov
mov
dec
mul
or
add
pusha
add
ss
lds
push
cmpl
push
mov
andb
adcb
adc
cmp
scas
mov
popa
cmp
or
mov
jecxz
ret
or
ljmp
mov
cld
mov
out
pop
adc
fbld
lods
lds
jbe
jp
fidivrl
adc
call
cmp
and
jnp
fildl
scas
fiadds
rolb
push
push
mov
inc
call
dec
mov
pop
pop
divb
inc
inc
inc
arpl
aad
clc
mov
inc
mov
insb
jecxz
mov
lcall
mov
orb
and
add
push
in
add
mov
adcl
addb
push
inc
xor
add
add
inc
add
xchg
and
jg
inc
rolb
inc
or
in
mov
jns
test
ljmp
cli
inc
inc
shll
dec
xchg
repz
push
pop
mov
and
ds
fisubs
dec
mov
aam
inc
lock
scas
test
xchg
mov
add
xchg
mov
or
pop
test
pop
rorb
bound
dec
xor
mov
push
jo
clc
pop
lock
js
inc
les
testl
push
mov
sub
daa
orb
cmp
add
add
cltd
sub
pushf
sbbl
clc
push
push
add
sbb
int3
xor
jmp
jg
test
push
fnstenv
loop
adc
outsb
lock
push
mov
fistpl
adc
xchg
pop
mov
push
daa
inc
or
orb
add
bound
loop
mov
xchg
cld
repz
pop
ljmp
imul
les
aaa
fsqrt
cmp
cmp
lcall
fdivrs
and
or
mov
adc
fsubp
xor
pop
and
add
mov
shrl
inc
jbe
or
out
and
push
test
pop
enter
pushl
xor
scas
xchg
ss
adc
sbb
pop
sub
and
mov
xchg
addb
aaa
leave
clc
jmp
pop
push
mov
mov
adc
fdivrl
pop
hlt
dec
lock
mov
pop
outsb
call
adc
mov
fwait
adc
nop
and
or
push
pusha
adc
mov
je
fidivrl
xchg
adc
or
and
pushf
push
push
or
fbld
adc
push
adc
sahf
sbb
cmp
sbb
int
adc
fstpt
sub
push
gs
and
mov
cmp
push
mov
dec
lcall
xor
sub
pop
adc
lods
cmp
jecxz
pop
outsb
jmp
bound
lock
out
loopne
mov
xorl
sbb
inc
inc
repnz
jl
sub
inc
aam
mov
bound
gs
xchg
shrb
sahf
test
mov
and
cmp
mov
add
cmc
mov
call
cmp
xchg
int
push
retw
roll
and
and
rolb
call
push
add
adc
jmp
imul
bound
or
dec
xchg
push
mov
fisttps
cs
or
shlb
sub
test
dec
icebp
je
mov
stos
add
ret
xor
push
cmpsb
xchg
cld
inc
or
add
pushl
jecxz
gs
add
xchg
lcall
jmp
mov
mov
push
pop
in
lods
push
pop
pop
ljmp
mov
cli
mov
add
lods
inc
outsb
push
cmp
stos
dec
fdivl
xchg
lock
lcall
cltd
sbb
jg
andl
mov
loopne
fists
mov
rolb
pop
pusha
cmp
pop
cmp
add
add
loopne
lock
jg
mov
dec
xor
add
mov
push
pop
rcll
xor
loopne
jecxz
sub
sub
xchg
cmp
jo
pop
jg
hlt
inc
or
pop
xchg
add
sahf
test
in
xchg
lds
loopne
cmpl
dec
jb
sub
mov
cmp
inc
sub
jne
lock
call
adc
and
aad
add
dec
fcomip
das
shrb
push
mov
sub
push
or
clc
sbb
push
sub
jp,pn
or
xchg
rolb
pop
jo
dec
sbb
cmp
adc
out
rclb
jo
pop
jne
fs
mov
jmp
jl
shll
xchg
int3
and
and
call
scas
out
mov
mov
mov
jmp
aam
fwait
call
mov
jl
call
mov
push
hlt
rolb
mov
jg
mov
pop
adc
mov
adc
add
sbb
sbb
lock
xchg
add
je
xlat
rolb
rcll
mov
sub
adcb
jp
rcrb
jo
push
leave
cli
add
insb
pusha
outsb
and
test
add
outsb
lods
xor
add
cmp
cmp
loopne
adc
jp
sbb
sbb
push
cmc
lea
add
xor
xor
int
stc
mov
cs
mov
call
and
add
out
push
add
incl
push
inc
and
adc
jecxz
mov
push
xchg
call
sub
push
pop
and
adc
dec
sub
inc
xchg
je
incl
inc
test
mov
xchg
push
lods
pusha
sub
sub
xor
lock
sbb
clc
add
negl
pop
sub
or
in
adc
sbb
mov
dec
add
add
xchg
cmp
lcall
or
push
out
pop
fimuls
mov
mov
out
out
add
adc
add
inc
add
pushf
jp
add
xor
add
outsl
or
add
sbb
ret
test
xorb
xchg
pop
jmp
adc
add
add
push
lods
repnz
push
add
test
adc
data16
adc
inc
add
call
aam
jmp
push
enter
xor
mov
lods
push
aam
or
push
pop
idivb
pop
mov
sbb
xor
insb
or
add
mov
mov
sbb
inc
or
orb
hlt
xchg
lock
and
cmp
jo
push
cld
bndstx
or
xchg
out
imul
sbb
inc
arpl
cmp
push
mov
or
adc
mov
push
sbb
jle
push
rcrb
dec
mov
adc
cmpb
incl
fwait
pop
jmp
jno
jmp
xor
push
jecxz
xchg
lds
stos
icebp
mov
mov
icebp
cld
testb
std
ljmp
lret
scas
pop
inc
dec
jns
rcrl
xchg
mov
in
or
xchg
das
rclb
repz
scas
and
push
test
pop
das
rclb
sub
mov
and
jg
push
push
mov
clc
xor
push
andl
cmpsl
aad
add
mov
jmp
sbb
jb
pop
test
sub
lahf
sbb
xorb
leave
icebp
ljmp
fildl
or
inc
ss
inc
ss
dec
loopne,pn
rcrb
pop
aam
or
scas
mov
add
bswap
cwtl
mov
cld
inc
push
ret
call
les
incb
sti
inc
or
cs
mov
iret
inc
addb
add
sahf
test
jno
loope
xchg
add
jp
or
pop
mov
and
sub
test
jle
mov
aam
popa
subb
icebp
cmpsb
or
dec
fcom
sbb
lock
pop
test
or
add
icebp
bound
fwait
add
inc
push
fcos
andb
jg
fldt
out
pop
mov
push
inc
push
out
idivl
jl
cld
mov
xchg
push
repz
adc
out
cmp
add
adc
adc
rorb
aad
add
jecxz
lcall
inc
adc
addb
ret
add
rorb
fbstp
mov
pop
inc
addl
add
jb
mov
sbbb
enter
inc
aam
cmpsl
inc
outsl
fwait
mov
push
or
scas
call
inc
shl
addl
inc
push
push
sub
and
jo
push
fbld
push
jmp
xor
fcomip
mov
lock
add
test
clc
stos
adc
jg
popa
xorb
shll
push
outsl
ds
xor
adc
add
lock
lea
or
pop
and
loopne
xchg
movb
sub
call
sbb
push
sbb
fbld
out
inc
loopne
loop
xorb
decl
lock
mov
add
mov
sub
popa
inc
and
or
test
adc
pop
imul
pop
sub
aam
cmpsb
and
adc
mov
xor
shrl
xchg
mov
add
add
add
or
jmp
dec
clc
scas
mov
out
add
or
pop
dec
mov
xor
xor
shlb
mov
add
dec
push
lcall
pusha
or
movsb
add
movsb
ljmp
xor
sub
ds
fs
repz
nop
cmp
cmp
stos
call
sub
fcmovnb
adc
shlb
loopne
mov
mov
xor
add
and
inc
and
addb
and
adc
push
add
pusha
mov
out
lock
rorl
flds
lds
mov
push
stos
outsb
mov
repnz
add
and
add
xor
sti
mov
nop
fbstp
into
xor
pushf
ret
xor
loopne
lds
adc
xor
negl
adc
inc
pop
loopne
pusha
shlb
mov
jg
js
js
movsl
leave
xor
addb
loop
rclb
ret
and
jg
dec
pop
add
daa
insb
xor
scas
jbe
adc
sbbl
inc
adc
loop
das
nop
mov
les
mov
xchg
or
push
loopne
nop
and
add
and
inc
aaa
scas
and
jg
mov
mov
inc
scas
inc
outsl
jmp
add
das
mov
inc
and
xchg
mov
inc
jo
pop
out
xor
and
sbb
test
aas
xor
test
incb
add
adc
test
adc
adc
dec
lock
nop
fistps
mov
push
ljmp
mov
xor
aam
arpl
clc
nop
or
add
test
test
ret
fsubrs
inc
js
sarb
jo
sub
push
adc
xor
test
sub
fisttps
enter
add
loopne
sub
add
data16
pop
or
ja
mov
mov
popf
les
sub
jbe
sti
mov
aam
mov
scas
inc
add
pop
adc
popa
pop
subb
jnp
loope
call
jo
scas
jmp
sub
inc
push
mov
ljmp
call
dec
add
xadd
xor
inc
ljmp
jp
adc
or
andl
rcrb
or
sbb
xchg
push
enter
mov
jg
das
jo
roll
std
pusha
or
lock
xchg
cwtl
clc
bound
or
jl
xor
dec
sub
jge
cmpsb
add
push
mov
xchg
xor
add
nop
andb
cmp
mov
jb
pop
inc
cmp
jmp
dec
sbb
xor
mov
test
mov
out
adcb
loopne
inc
push
dec
lods
xchg
cli
add
xlat
cmp
mov
mov
jne
mov
adcb
sub
mov
push
and
rorb
add
mov
insb
push
cld
jo
test
loop
decb
int3
subb
inc
sbb
dec
sti
outsl
or
cs
mov
inc
mov
out
test
nop
cmp
push
and
cld
stos
or
shlb
nop
add
push
mov
cmp
adc
jp
mov
fwait
jbe
mov
mov
push
in
mov
subl
test
push
int3
mov
mov
mov
jmp
add
mov
pop
lods
fbstp
xchg
mov
or
pop
popa
push
or
or
xchg
sub
add
push
mov
adc
and
add
out
push
xchg
push
cmpsl
mov
loopne
bound
mov
xchg
push
sbb
sub
adc
mov
loop
jne
inc
jg
test
and
xor
sti
inc
jmp
inc
sarl
push
xchg
mov
imulb
sbb
nop
lcall
in
rorl
je
add
push
jb
orb
mov
stos
loopne
popa
adc
add
cmp
roll
and
test
adc
aad
xchg
ret
jg
add
lods
pusha
maskmovq
pusha
xchg
rcrb
jo
and
gs
mov
push
subl
clc
ljmp
dec
adc
xchg
out
test
push
je
adc
mov
fwait
jo
ja
sub
xchg
rolb
dec
or
sub
and
mov
push
or
idiv
lds
inc
xchg
out
and
pop
pop
pushl
mov
rcrb
cld
add
pop
nop
aaa
mov
mov
cmp
jbe
jne
adc
xchg
rorb
call
ss
clc
push
mov
push
cltd
adcb
or
inc
cli
repz
or
hlt
scas
ja
icebp
test
or
mov
hlt
fwait
or
arpl
lar
jl
sub
xor
ljmp
cli
or
mov
xorb
mov
sub
mov
adc
and
or
lock
and
jg
mov
cmp
enter
add
xchg
fcomip
xchg
fdivs
xchg
adc
nop
loopne
loopne
and
call
add
adc
pinsrw
jl
and
scas
adc
add
add
mov
add
nop
xor
repz
mov
roll
or
ret
ffreep
idivb
and
test
rorb
arpl
std
int3
xchg
ss
mov
loop
mov
or
fildll
mov
div
jns
mov
test
outsb
mov
ret
loopne
shll
push
bnd
jne
mov
lret
mov
test
jmp
push
ret
sbb
xchg
pop
or
popa
fdivl
mov
movsb
lcall
test
fbld
or
push
add
xchg
stc
mov
sbb
adc
inc
clc
push
std
incl
push
addl
add
mov
js
subb
clc
outsl
ffreep
mov
arpl
xchg
sbb
jp
inc
or
rol
scas
js
mov
out
pop
rolb
push
lea
stos
gs
or
jne
jg
loopne
rolb
mov
loope
mov
shll
or
rolb
aam
push
cli
xchg
inc
shrb
xchg
loopne
jp
pop
shrl
cmp
jo
ffreep
das
xor
ja
out
shlb
subl
subb
mov
movsb
pop
mov
cld
fisubrs
jne
mov
push
ljmp
add
clc
lods
pop
out
jne
cltd
scas
mov
rclb
adc
push
iret
mov
cmc
or
shlb
in
jbe
sub
adc
mov
cli
mov
add
data16
jb
es
aas
adc
test
incb
pushf
pop
fs
cmp
push
and
xor
shll
pusha
add
mov
iret
add
add
pop
adc
repz
mov
imulb
sub
mov
adc
xchg
aas
cld
shl
incl
mov
pop
mov
add
out
loope
dec
pop
fadds
andb
or
add
or
add
mov
js
dec
mov
test
mul
inc
adc
mov
jmp
fiadds
mov
rolb
jp
xorb
test
je
or
jno
out
in
mov
mov
mov
stos
or
xchg
sbb
pusha
loope
push
les
push
push
add
add
jbe
and
mov
cld
lds
xorb
jle
and
add
add
mov
pop
and
push
push
sub
mov
push
jbe
adc
sbb
or
in
lock
mov
jne
shrb
xchg
jl
scas
and
jb
sti
and
or
cmc
les
and
push
lea
mov
in
add
adc
mov
in
add
adc
fmuls
subl
push
adc
faddl
pop
sbb
ljmp
jb
cld
rorl
jne
push
fs
scas
clc
push
pop
cmpsb
fnsave
cmp
adc
mov
cmp
cltd
dec
sbb
lods
or
add
fs
inc
push
loopne
add
add
outsb
dec
clc
je
cwtl
les
inc
cmp
pop
sub
shlb
mov
mov
test
push
loopne
clc
jns
xchg
mov
lds
sbb
cmp
sub
xor
insb
cld
scas
lods
pop
in
lods
add
in
cmp
lret
xchg
addb
mov
fsubr
cmp
add
dec
sbb
mov
int3
push
mov
pusha
pop
lcall
cmp
out
pop
outsb
pop
in
sub
fiaddl
mov
inc
add
pop
xor
loopne
or
push
dec
inc
sbb
pop
ret
xchg
sbb
xchg
mov
scas
or
xchg
ret
daa
dec
fwait
sub
push
sub
jp
addl
pop
add
lahf
addb
shlb
add
int3
loopne
outsl
outsl
sbb
mov
inc
push
cld
addb
and
inc
or
addb
or
dec
cld
invd
aaa
dec
adc
jge
mov
inc
push
mov
push
pop
pushf
xorl
pop
cmovl
inc
pop
sub
cli
movsl
inc
aaa
or
incl
dec
rclb
mov
push
mov
xchg
push
pop
mov
es
std
sbbb
lcall
cli
mov
adc
pusha
cld
adc
andb
pop
ret
inc
or
sbb
and
mov
cmp
mov
and
sti
lds
cmc
xor
add
pop
andl
jp
mov
mov
add
cmpsl
nop
mov
psrad
push
scas
xchg
cmp
inc
cwtl
lock
andb
jne
or
push
cld
adc
sbb
xor
cmpb
test
ss
mov
pop
xchg
cmpsl
add
inc
mov
pop
lock
dec
adc
mov
das
push
sbb
mov
inc
mov
lock
test
push
fs
pusha
mov
ret
push
lret
lock
jne
or
sub
inc
xchg
gs
mov
push
cli
dec
pop
stos
or
shrb
mov
adc
adc
sub
dec
pop
add
sbb
sub
in
je
shlb
adc
pop
jge
xchg
repnz
in
les
repz
mov
jp
pop
pop
out
shlb
shrl
sbb
popa
adc
outsl
cs
inc
adc
cmpsb
push
add
idiv
xor
mov
adc
push
add
syscall
arpl
lock
push
cli
adc
or
je
and
imulb
pusha
loop
loopne
xchg
fwait
sbb
jbe
adc
out
mov
pop
hlt
mov
stos
xchg
push
fistpl
push
add
sbb
mov
std
inc
nop
repnz
outsb
sbb
es
fs
or
data16
ret
fcomi
dec
dec
push
jne
mov
je
and
into
mov
mov
xor
loopne
test
pop
sbb
data16
pop
mov
add
aas
inc
sahf
xor
pop
add
cmp
enter
jmp
mov
stos
add
and
incb
jmp
fcomps
adc
mov
add
pusha
pusha
cli
pop
cmc
add
lods
and
pusha
add
push
repz
shl
ret
jg
inc
jecxz
out
add
sbb
or
push
inc
out
loope
and
std
scas
cmp
insb
test
xchg
decb
data16
rorb
clc
clc
push
and
dec
loop
inc
xorps
pop
fisttpll
cltd
in
sbb
arpl
hlt
mov
pop
pop
mov
mov
mov
sbb
jle
and
lock
pusha
add
add
jne
lock
sub
mov
mov
call
and
sub
scas
jb
add
cmp
add
mov
mov
xchg
xor
sub
aaa
adc
lods
mov
and
xor
out
pop
mov
adc
cmp
mov
sub
sub
cmovne
or
jmp
sti
popa
sbb
loopne
add
xor
or
xchg
mov
notl
or
push
pop
mov
mov
lods
push
add
xor
sbb
push
test
call
add
scas
push
test
clc
mov
orl
and
imul
mov
mov
or
and
mov
imul
pop
es
or
cld
mov
sub
jmp
cmp
pop
adc
in
fildl
and
shlb
loopne
xchg
jmp
cmc
mov
push
jecxz
hlt
daa
add
in
mov
xlat
add
fildl
cmp
cmp
add
mov
out
iret
add
add
add
and
mov
push
mov
mov
or
cmc
push
push
xchg
iret
and
or
sbb
or
fwait
inc
add
sub
pop
aam
inc
inc
idivb
xor
mov
jo
jnp
jo
inc
sub
or
insb
xlat
xchg
sbb
pop
mov
imul
pop
add
push
pop
fimuls
pop
fs
sbb
loope
xorb
ficompl
movsb
stos
nop
or
test
xor
movsb
hlt
decl
adc
popa
test
les
dec
mov
add
or
xchg
push
out
test
popa
add
inc
mov
mov
jbe
add
dec
adcb
aas
mov
mov
inc
inc
and
insl
jmp
pusha
andb
adc
test
or
jecxz
mov
inc
jl
adc
jbe
cli
xor
push
sahf
mov
sub
inc
push
inc
mov
daa
xor
pop
and
pop
stos
pop
pushf
loopne
jg
adc
adc
inc
pop
add
jg
adc
test
and
jmp
add
sub
cmp
std
popl
add
scas
scas
or
jl
xchg
mov
mov
cmpsb
data16
xchg
ss
loop
mov
mov
xchg
insb
push
sahf
xor
inc
fs
aaa
push
int3
rolb
or
mov
mov
adc
ret
fildll
add
sub
mov
add
test
add
sub
add
cld
lods
movsb
shll
cmp
pop
in
jg
es
es
or
or
adc
das
cli
test
bound
jae
mov
cmp
push
push
int
dec
xor
fimuls
loop
scas
sbb
mov
pop
popa
pop
enter
pop
xchg
inc
aaa
shll
and
xchg
sbbl
stos
sub
mov
mov
jle
sub
add
lahf
push
add
xor
jg
les
mov
xchg
test
inc
insl
inc
stc
sbb
out
push
inc
xchg
or
xor
pushf
inc
add
mov
lods
cltd
or
rorl
icebp
xchg
inc
dec
inc
xor
pop
or
in
fdivl
xor
mov
push
loopne
es
aam
adc
sub
pop
nop
or
mov
lock
jno
fwait
icebp
ljmp
inc
mov
clc
or
jb
dec
into
jo
dec
lods
push
jo
add
lahf
or
mov
ljmp
stos
jmp
and
adc
sbb
mov
add
push
in
add
cmp
dec
lret
xor
mov
jb
das
les
inc
mov
fadds
push
pop
or
inc
ss
xlat
es
shll
adc
xchg
add
jb
jg
xchg
pop
push
aas
or
mov
ja
lock
jbe
pop
sbb
xchg
jo
push
in
leave
dec
and
mov
repnz
push
outsb
adc
fmull
mov
add
gs
loopne
js
lock
sub
nop
jo
mov
rclb
shrb
adc
mov
adc
outsb
outsl
mov
cmp
cmp
mov
xchg
jno
out
repnz
sbb
mov
lcall
push
mov
fs
add
test
mov
sub
test
clc
sub
lock
mov
xor
jb
daa
add
jbe
lea
je
pop
push
std
add
push
cmpb
push
sbb
rolb
and
push
xor
adc
scas
adc
nop
mov
add
sbb
adc
push
jb
xchg
mov
mov
mov
sub
mov
outsl
jo
lds
fsts
mov
jmp
add
jb
mov
outsb
pop
mov
fdivrl
mov
mov
ljmp
adc
dec
and
aam
lds
jb
jbe
sbb
dec
popa
push
inc
push
pop
lods
popa
jno
inc
shr
inc
push
jo
loopne
mov
and
mov
lods
push
jo
add
adc
les
jbe
lea
decl
popf
adcb
add
xchg
push
inc
mov
or
adc
dec
rolb
add
stos
mov
cld
or
ss
idivl
test
inc
hlt
int
clc
sbb
movsb
decl
adc
je
pop
out
cmp
mov
adc
xchg
add
jp
insb
mov
add
lock
scas
push
push
sub
aad
mov
or
and
mov
inc
push
js
clc
mov
jmp
and
push
push
pusha
adcb
cmp
fmul
out
cli
pop
mov
mov
mov
lret
rolb
xchg
test
loop
sbb
adc
pop
fldl
jne
cmp
je
enter
sbb
jp
scas
data16
out
je
sub
lods
out
xchg
mov
lea
mov
cmp
add
decl
or
mov
adc
push
incl
push
test
idivl
nop
push
test
call
push
es
faddl
mov
arpl
test
add
and
sarl
cli
or
fisubrs
jb
out
and
jns
inc
pusha
scas
aam
adc
push
or
add
loope
add
mov
add
adc
sti
push
push
jle
loop
mov
adc
mov
clc
inc
incl
cmpsb
cmp
loope
add
adcl
dec
insb
enter
mov
pop
mov
xchg
fdivl
testb
cli
adc
mov
mov
and
xchg
pop
jbe
pminsw
mov
and
lock
aaa
adc
push
mov
inc
xchg
push
jl
nop
popf
insb
sti
push
sub
xor
push
dec
mov
sti
fdivrl
in
mov
pop
js
sbb
adc
mov
hlt
fdivl
inc
mov
push
xor
and
icebp
inc
push
out
fbstp
sub
push
rclb
es
mov
sbb
or
xchg
inc
xor
cli
pushl
insb
dec
rolb
adc
adc
add
xchg
add
push
stc
dec
mov
adc
repz
clc
mov
mov
cmp
iret
push
sbb
out
mov
out
cmp
or
mov
adc
jl
cmpsb
xor
andb
push
aaa
push
repz
pop
cwtl
mov
data16
je
roll
add
cs
or
mull
mov
pop
mov
mov
movsb
lock
outsb
in
scas
adc
push
xchg
or
or
pop
es
stc
jbe
or
and
fisttps
icebp
outsl
je
jmp
js
xchg
out
das
scas
xor
test
add
insb
imul
xlat
fsub
add
lods
and
pop
push
call
js
add
leave
cmp
or
cld
out
subb
je
jb
adc
inc
insb
stos
sti
pop
jb
or
add
pop
insb
ljmp
les
out
hlt
lret
mov
push
pop
dec
mov
pop
mov
scas
inc
and
dec
rorb
mov
or
outsb
test
hlt
cmp
add
sbb
movsl
loope
mov
cmpsl
hlt
jne
jne
lea
xorb
add
mov
sub
test
push
jl
fs
pop
and
dec
or
sbb
aam
mov
jno
or
iret
xor
and
pop
iret
dec
test
js
divl
out
sbbb
add
ja
incl
addl
mov
add
and
lahf
push
insb
dec
add
scas
pop
and
sub
ret
outsl
call
shl
sarb
ret
or
cmp
aas
shlb
dec
loope
test
jp
and
adc
pop
fwait
sub
xchg
inc
xor
or
icebp
adc
push
test
das
test
lock
push
mov
sub
or
andb
test
out
ljmp
push
stc
sbb
or
cmp
mov
add
test
sbb
dec
ficompl
add
xor
push
iret
rorb
mov
out
daa
push
mov
adc
and
daa
in
jg
push
add
stos
push
andb
mov
test
mov
jb
imul
adc
xchg
shl
add
add
mov
mov
mov
mov
push
xchg
jmp
jno
jno
inc
dec
push
rorb
mov
dec
sarb
push
inc
aas
push
inc
add
orl
inc
xlat
or
mov
popa
mov
inc
add
jb
xchg
jne
aaa
sar
adc
test
push
je
xor
mov
ja
sbbb
dec
ja
jg
orb
add
jl
push
or
out
adc
sahf
test
ret
ret
les
clc
decl
lcall
xchg
jbe
add
ja
mov
adc
aas
fsubrl
mov
lods
shrl
jmp
mov
xor
mov
stos
mov
add
test
or
xchg
jo
add
push
jbe
mov
add
ja
and
out
cwtl
jmp
lea
fcmovbe
mov
and
and
jnp
jg
mov
loopne
int
arpl
jbe
mov
cmp
jmp
mov
pop
idiv
inc
sbb
push
pop
out
and
and
filds
add
lahf
ljmp
mov
adc
jg
scas
xchg
mov
dec
jnp
mov
xchg
sub
xchg
push
outsl
shll
dec
cmpsl
aas
fidivl
das
fwait
pop
push
adc
add
negl
outsb
jmp
adc
add
and
jg
adc
mov
and
addr16
mov
or
mov
popa
add
arpl
into
inc
jo
xor
aas
pop
stos
aas
out
sarl
add
loopne
in
sti
jle
adc
aam
push
xlat
and
idivl
stos
adc
sbb
rorb
shlb
popa
pop
pop
mov
xor
jnp
mov
sahf
data16
xor
inc
sub
sarb
xchg
incb
xor
or
add
out
cmp
pop
mov
loope
stos
jmp
das
and
lahf
dec
rorb
push
arpl
dec
xchg
xchg
loope
mov
loope
pop
jg
dec
clc
inc
mov
add
inc
stos
xchg
mov
dec
loop
rclb
pop
loope
test
adc
fsubs
pop
addl
or
or
aas
push
mov
add
loope
das
add
inc
adc
stos
adc
dec
daa
pushf
and
mov
add
sbb
loopne
xchg
orb
in
into
jl
lods
jg
leave
xor
jmp
stos
roll
les
fbld
loope
mov
add
add
lret
dec
mov
cli
inc
roll
mov
add
or
cmc
sahf
imul
adc
ja
pop
inc
int
ss
dec
lock
les
mov
les
repz
push
mov
ljmp
xor
pop
jp
insb
inc
stos
jb
add
cli
arpl
test
jno
jl
sahf
std
mov
cli
mov
inc
lret
mov
sti
dec
fnsave
adc
leave
loopne
in
jbe
or
inc
flds
pop
rorl
push
or
iret
pusha
xchg
test
xor
sahf
mov
ljmp
push
jo
add
sbb
shr
inc
xlat
push
push
cld
out
sbb
loopne
add
push
push
leave
push
loope
push
push
sub
push
xchg
mov
push
mov
outsl
pop
or
icebp
add
pushf
cmpsl
xor
pop
orl
jb
pushf
cmp
loope
and
xchg
nop
xchg
into
fisubrl
mov
cld
or
ja
inc
xor
mov
rorb
jmp
decl
stos
jnp
jne
lock
mov
or
pushaw
add
add
adc
xchg
dec
js
mov
insl
mov
aad
add
cmpl
test
pop
addb
add
lret
shr
jb
jo
clc
xor
rol
loop
add
les
repz
jmp
mov
xchg
rolb
or
out
add
adc
adc
or
push
out
test
pusha
add
add
and
add
adc
lock
add
test
jo
mov
and
pavgw
cmp
sub
loop
cmp
sbb
or
sbb
jp
pop
push
addl
iret
pop
or
jg
mov
sti
add
addl
pop
fmuls
pusha
insl
and
mov
mov
pop
add
lods
scas
xor
add
ja
fisttpl
push
mov
and
out
or
mov
jle
xlat
std
mov
add
cld
ret
pusha
sahf
lret
sbb
sbb
outsl
popa
ljmp
andl
imul
in
shll
enter
fisttps
inc
cld
sub
inc
daa
loopne
xor
jecxz
imulb
mov
cltd
cmp
cmpsb
sbb
sub
fwait
cs
aam
jb
in
pop
sti
and
push
add
adc
jns
cld
sub
mov
or
pop
rcrb
ljmp
and
repz
add
out
pop
call
and
pop
cwtl
xor
leave
sti
pop
dec
incl
ficoms
ljmp
or
js
js
cltd
mov
xchg
clc
nop
in
or
mov
ljmp
xchg
cld
cwtl
jl
cmp
nop
int
or
ss
les
aam
lods
adc
mov
sysenter
pusha
test
jo
jmp
std
lods
out
adc
outsl
cld
loopne
scas
cmp
add
mov
jg
mov
add
push
loopne
popa
sbb
roll
jb
adc
mov
gs
dec
pushl
pop
loopne
mov
lret
adc
shlb
push
or
adc
dec
mov
clc
nop
pop
push
popa
sub
and
jl
scas
test
aad
lcall
bound
add
push
pop
incl
mov
cmp
sub
insb
pop
mov
adc
ds
out
mov
inc
dec
push
test
es
data16
push
ret
dec
mov
mov
adc
jmp
cmp
mov
movsb
sti
push
ficoms
mov
adc
adc
inc
loope
in
mov
sti
adc
ret
repz
inc
loopne
pushl
orb
pop
adc
add
out
push
cmp
adc
les
cmp
incb
cmp
adc
xlat
fs
add
add
fldt
sti
pusha
add
out
cmp
cltd
add
pop
xchg
rclb
adc
jae
pop
mov
inc
inc
clc
push
push
add
ljmp
mov
fsts
fiadds
add
mov
xchg
aaa
mov
shlb
pop
frstor
lock
jo
pop
push
insb
scas
xchg
mov
popf
fcom
aam
adc
sti
and
add
rcl
ljmp
mov
and
adc
out
push
lock
mov
into
and
inc
cmpsb
out
xchg
loopne
je
movsb
stos
cmc
mov
cld
jo
shrb
xor
add
sbb
idivb
push
bnd
mov
rorb
push
pushl
push
clc
cmpsl
nop
adc
pop
sub
push
inc
scas
loope
dec
add
push
or
cmpsb
cmpsb
andb
xchg
pop
aad
out
movsb
pop
and
add
popf
sub
add
sbb
inc
addb
sti
sub
jno
lret
icebp
mov
mov
jb
pop
scas
je
xchg
push
add
outsb
dec
data16
push
cld
filds
xor
mov
lret
sti
loopne
jecxz
test
sub
bound
push
stos
inc
mov
jg
or
rcrb
cmp
sbb
mov
or
das
clc
loopne
fists
mov
inc
xor
lock
lods
std
jg
cs
pop
es
aad
add
sub
outsb
dec
mov
popa
add
test
fiaddl
push
dec
sbb
mov
ss
push
jmp
ja
pop
dec
mov
fs
mov
test
ret
shlb
add
cmp
daa
add
adc
add
sbb
pop
out
mov
add
mov
repnz
dec
xor
clc
outsl
lods
movb
fcomi
cmp
insb
push
inc
push
pop
in
stos
stos
lods
mov
jo
xlat
add
stc
mov
mov
adc
jl
xlat
mov
loopne
incl
xlat
aam
aaa
jle
jg
mov
int3
mov
mov
pusha
cld
imulb
mov
lret
or
adc
nop
pop
inc
pusha
int3
repz
mov
out
or
movmskps
cs
add
loopne
push
xchg
mov
dec
movsb
pop
cld
mov
jecxz
pop
cli
lret
rcr
into
rcll
push
adc
mov
pusha
add
sarl
dec
adc
add
incl
add
notb
dec
add
dec
dec
push
fstpt
pushf
and
notl
and
dec
fldt
inc
insb
test
mov
xor
sti
inc
mov
adc
aad
inc
jmp
xchg
lods
mov
cmp
jge
mov
or
movsb
push
cmpl
in
or
pop
and
cld
xchg
pop
js
pop
mov
pop
push
and
pop
loopne
dec
add
hlt
sub
mov
adc
lods
cld
inc
in
mov
cmpsl
cld
outsb
imulb
ret
icebp
sub
mov
add
es
filds
xchg
push
add
loopne
pushf
daa
add
outsl
add
daa
imul
ljmp
push
xchg
mov
mov
clc
xchg
pop
push
out
add
icebp
cmp
int
or
push
xor
add
insl
fst
out
push
xchg
add
or
inc
adc
js
inc
sub
movsl
add
addb
adc
xchg
sbb
adc
add
push
jmp
int3
lods
xchg
movsl
aam
pusha
clc
jecxz
add
or
lock
dec
andb
jbe
push
jmp
ds
sbb
cmp
repnz
inc
or
lea
pop
add
shlb
nop
sbb
add
out
mov
xor
icebp
xchg
repnz
adc
jb
xor
push
or
or
jge
sti
adc
inc
mov
iret
adc
cmpsb
and
xor
pop
add
test
jbe
inc
mov
stos
add
outsb
inc
adc
orb
mov
push
mov
add
fadds
inc
pop
add
js
xchg
add
pop
lods
das
push
clc
in
push
incl
shrb
sbb
add
fcmovne
add
pop
push
mov
adcb
sub
clc
inc
pop
jmp
sub
negl
or
cs
movsb
je
testl
aaa
dec
jg
rolb
cmpl
pushf
je
orl
out
push
stos
rolb
subl
fdivs
or
mov
out
out
dec
or
add
lret
inc
or
cmp
adc
push
cli
insb
and
pop
inc
das
idivl
lods
in
sub
push
popf
adc
jp
add
adc
shrb
pushf
gs
mov
mov
ret
adcb
lods
cmp
sub
ljmp
add
movzwl
jb
inc
mov
inc
rorl
rclb
mov
js
xorl
mov
cwtl
add
dec
fildll
pop
js
inc
mov
insl
sub
rol
mov
push
jl
xor
inc
add
incl
inc
iret
cmpb
and
outsb
pop
popf
adcb
mov
adc
inc
add
aaa
hlt
and
push
sub
and
or
ret
inc
mov
pop
sbb
add
cmp
orb
mov
sub
in
and
inc
adc
rcll
sub
pop
ret
jmp
or
push
shll
rclb
pusha
inc
es
insb
movsl
mov
push
imul
mov
jmp
iret
sbb
outsl
and
stos
inc
xor
pusha
add
sub
mov
cltd
jbe
push
jmp
xor
sbb
ljmp
jo
mov
push
rorl
push
fwait
mov
add
decl
fadds
repnz
rcrb
push
addl
sub
rcrb
push
xchg
repnz
xchg
adc
mov
pop
shl
mov
jg
mov
xchg
imul
inc
in
jb
lahf
and
sbb
pop
push
and
add
jp
roll
xor
sbb
cmpsl
mov
adc
test
and
jg
cltd
cld
fidivrs
leave
cmp
cli
ret
jg
add
sbbb
pop
dec
mov
fisubl
das
push
xor
shrb
add
jmp
cmp
jl
and
jno
in
ret
pop
lods
fiadds
out
adc
xor
push
std
scas
fwait
dec
cmp
jo
call
sub
mov
cs
sbb
mov
mov
pusha
sub
jnp
add
enter
sarb
ljmp
jmp
pop
fcoml
cwtl
mov
cmp
mov
loop
ds
add
int3
or
sub
push
add
sarb
add
out
pop
add
inc
mov
sub
or
test
test
cli
add
inc
ret
cwtl
orb
loopne
sbb
das
mov
add
mov
mov
imul
loopne
test
add
cwtl
cmp
jb
mov
movsb
stc
into
and
faddl
iret
add
fst
in
lods
jb
pop
mov
loop
cli
inc
mov
push
aas
mov
mov
push
shll
xchg
lods
mov
cmp
pusha
sub
xchg
mov
xchg
ret
jno
lock
and
pusha
mov
mov
push
shll
add
call
fwait
shlb
cli
add
hlt
inc
add
xor
gs
cltd
pop
add
nop
or
xchg
addb
incb
cmp
add
test
pop
decb
scas
loope
and
data16
add
xchg
iret
movsl
test
clc
scas
pop
xlat
addl
testl
outsb
xor
loop
cli
and
add
sub
mov
cmp
sbbb
cld
and
dec
mov
dec
dec
das
scas
sub
test
xor
loopne
pop
ljmp
loop
add
stos
jmp
and
xchg
test
push
out
sub
bound
xchg
lahf
pusha
push
or
aam
sub
or
jl
repnz
gs
or
pop
xor
mov
and
ret
jle
testl
sbb
mov
es
pop
mov
push
jnp
pop
add
roll
cmpsl
hlt
ljmp
ds
and
repz
mov
cmpsb
inc
xor
and
stos
lods
push
hlt
pop
adc
mov
inc
sub
frstor
jmp
ret
or
mov
pusha
adc
push
sbb
test
rorl
mov
mov
roll
cld
and
mov
out
rep
jo
jo
and
xchg
mov
mov
icebp
dec
push
adc
mov
loopne
movsl
or
std
jno
push
and
fbstp
out
add
sub
popa
adc
mov
shlb
sarb
pushl
nop
cmp
push
add
adc
and
pop
and
inc
adc
adc
mov
jb
add
push
and
jo
daa
xchg
adc
das
fimull
pushaw
xor
adcl
pop
ret
pop
loopne
xchg
jb
mov
adc
and
inc
shrd
rolb
jmp
lods
jmp
test
stc
and
cli
incl
sub
or
add
mov
int3
add
cli
cmp
adc
ret
orb
add
inc
inc
out
out
rcrl
jecxz
movsb
paddsw
orb
loop
add
push
aam
pop
loope
outsb
insb
add
push
mov
adc
sub
decl
push
push
lods
or
nop
sahf
or
cmpsl
mov
sbb
or
rclb
inc
sbb
mov
add
test
aaa
mov
push
xchg
or
push
test
mov
add
pusha
push
add
jno
jnp
jbe
mov
clc
mov
push
nop
sub
cmpl
hlt
es
push
aam
subb
stc
jo
fisttps
push
mov
pop
jecxz
rcrl
jnp
cmp
adc
fstpt
lock
inc
aam
jg
loope
int3
nop
and
clc
nop
mov
call
jnp
mov
cmp
push
sub
in
ljmp
ljmp
adc
xchg
pusha
push
and
xor
push
pop
mov
push
inc
jns
xor
lods
lock
loope
lock
incl
adc
inc
inc
loope
test
lock
nop
or
xchg
paddb
in
mov
rcrl
daa
adc
mov
push
lods
incl
xor
jecxz
sbb
xor
filds
push
test
jmp
add
adc
or
rclb
loop
les
dec
dec
fbstp
pop
xchg
sbb
ss
das
xor
xor
add
xor
aaa
call
and
loope
and
inc
mov
sub
xchg
mov
jnp
add
push
xor
movsb
fiaddl
lock
cmp
mov
rolb
fadd
int
std
cli
and
mov
sub
or
xchg
xchg
add
sub
push
ss
inc
add
call
sub
gs
add
or
cld
popa
in
rclb
roll
ret
add
rorb
scas
std
aaa
add
and
fwait
xchg
cmp
adc
push
xchg
xor
aad
dec
cmp
cli
adc
negl
xchg
lods
mov
and
movsb
or
push
rolb
insb
mov
test
mov
sar
fcomip
jo
xorb
and
add
sbb
sbb
mov
sbb
push
xor
dec
outsl
scas
and
int3
enter
cmpsb
mov
aas
lock
incl
repz
xor
pop
push
push
aad
pop
add
or
movsb
in
mov
je
fwait
or
cltd
fmulp
mull
lock
push
nop
push
or
imul
inc
cmc
mov
pop
inc
pusha
sarb
testl
mov
mov
test
lock
sti
cmpsb
add
adc
ret
add
jo
mov
js
and
adc
adc
jl
add
aam
and
jbe
mov
xor
insl
pop
inc
pop
add
sbb
pop
mov
push
sbb
pop
adc
in
pop
nop
push
aad
ret
adc
mov
lcall
sbbb
add
add
adc
inc
jl
xchg
jne
jb
int3
ret
sub
mov
push
sahf
mov
orl
push
jg
hlt
or
pop
js
add
add
sti
xor
adc
inc
adc
mov
mov
jecxz
gs
incl
mov
aaa
mov
jb
and
lock
push
outsl
sbb
xor
xor
mov
adc
mov
xor
ljmp
lcall
mov
rolb
xor
jg
and
icebp
inc
inc
cmpsl
push
or
mov
pop
adc
ret
lock
mov
xor
adcb
popa
xchg
inc
sub
xchg
pop
daa
and
scas
movsb
mov
or
sub
popf
xchg
lods
or
adc
lea
test
cmp
pop
push
lock
sbb
inc
adc
out
test
sub
xorl
ficoml
mov
adc
push
bound
incb
jo
lock
out
add
xchg
dec
push
pop
into
clc
ljmp
dec
andb
sub
fadds
inc
decl
mov
hlt
loopne
and
xchg
incl
cs
rorl
mov
mov
add
mov
cmp
pushf
int3
incb
cmp
jo
loop
fcoml
or
roll
xor
push
sub
mov
das
pop
sbb
xor
adc
rcr
fwait
jo
outsl
cmpsl
push
aas
mov
push
push
cmp
outsl
incl
daa
pop
dec
adc
or
add
addb
push
pusha
jae
scas
cli
out
ljmp
inc
add
push
add
sub
adc
test
clc
add
loope
pusha
test
push
dec
pop
enter
adc
cs
pusha
cld
das
inc
xor
sub
pop
subb
push
fldl
pop
inc
push
jge
inc
pop
cmpsl
xor
xchg
mov
roll
mov
je
push
aas
insb
sbb
fsts
sbb
xchg
bound
jnp
add
push
test
ja
add
add
add
adcb
cwtl
push
xchg
mov
push
ss
cmp
push
and
sbb
pop
dec
outsb
adc
sbb
adc
insb
sbb
xchg
push
shl
cmp
inc
or
and
mov
scas
cli
inc
add
movsb
add
xchg
andb
std
orb
xchg
sti
push
cwtl
enter
scas
inc
sbb
inc
fdivrs
mov
adc
inc
leave
mov
loop
jg
loopne
aam
or
sbbb
jp
test
test
add
orl
mov
pushf
jmp
in
nop
gs
nop
cmp
addl
data16
test
daa
dec
cmp
adc
mov
shr
adc
movsl
adc
fwait
addb
dec
aaa
fidivrl
dec
inc
addr16
cmp
mov
mov
push
sub
nop
jb
cmp
inc
dec
cmp
addb
xchg
push
xor
dec
dec
movsb
lahf
dec
loop
icebp
pop
jmp
jae
test
sub
xchg
jg
cwtl
nop
add
jns
sub
test
inc
xchg
push
sub
xchg
les
adc
and
sub
inc
orl
ficoml
cmpsl
sbb
adc
pop
add
mov
inc
mov
mov
ljmp
mov
xchg
cmc
add
fdivrs
insl
jge
add
sub
mov
stos
xor
xor
push
xchg
push
sub
pusha
add
jmp
xor
jne
inc
or
inc
shl
incb
adc
ds
sub
inc
or
inc
push
pop
inc
push
aaa
push
lods
xor
inc
adc
decl
add
inc
je
mov
adc
push
mov
add
sbb
push
and
push
test
add
inc
add
mov
sti
add
xchg
enter
jns
add
adc
popa
adc
cld
push
push
fdivr
pop
sub
add
iret
mov
mov
xchg
outsb
cwtl
test
mov
pop
sbb
xor
mov
ljmp
clc
scas
les
mov
pop
cwtl
incl
les
inc
pop
sub
dec
jbe
sub
or
inc
test
mov
lods
les
cmp
mov
mov
add
add
out
inc
inc
jmp
jge
mov
mov
dec
rcrb
add
xchg
fimuls
cmove
repz
mull
lret
movsb
shr
outsb
outsl
pop
pushf
lods
out
cmpb
add
sub
das
bound
ja
inc
add
pop
adcb
pop
mov
test
shll
shlb
push
fwait
xchg
cmp
cmp
pop
insb
and
movsb
mov
push
rcll
xorl
jl,pt
add
push
insb
sti
loop
stos
push
and
push
decl
inc
fldl
clc
jl
sub
adc
incl
scas
xchg
loopne
repz
xor
push
cwtl
adc
int
or
hlt
cmpsb
adc
add
inc
sbb
xor
test
adc
shl
hlt
xchg
rcrl
loope
vmread
outsb
insb
sbb
das
js
xor
clc
or
push
popa
or
subb
mov
scas
fildll
pushf
and
add
imul
mov
stos
repnz
cmp
pusha
push
decl
sub
lods
pushf
and
rclb
mov
sub
rcrl
add
inc
inc
frstor
add
mov
adc
rol
or
negl
mov
xchg
mov
incl
add
pusha
aas
inc
mov
adc
add
shlb
pop
test
decb
or
nop
jns
orb
cmpsb
fwait
cwtl
pop
inc
sbb
adc
jp
aas
je
and
fdivp
pop
push
loopne
and
push
and
lods
or
movsb
push
xchg
outsb
loope
or
inc
pushl
lret
addb
cmc
dec
pop
mov
pusha
add
add
icebp
aaa
std
dec
pop
mov
pop
cmp
cmpsb
mov
xor
outsb
loope
cmp
xchg
inc
movsl
cli
ljmp
and
rorl
inc
inc
sbb
loopne
out
jb
fwait
push
adc
les
or
xorb
pop
pop
loop
pop
repz
sbb
pop
add
loope
or
int
cmp
inc
rorb
stos
pop
push
mov
or
or
add
or
mov
int
repnz
mov
pushl
repnz
aaa
aad
add
call
add
mov
das
int3
bound
jbe
pop
call
add
jl
mov
xchg
adc
pusha
sbb
push
xor
loop
xchg
inc
add
stos
loopne
adc
inc
or
mov
arpl
arpl
xchg
aaa
popf
inc
lods
lahf
push
cmpsb
pusha
add
lods
test
dec
jnp
test
call
imul
inc
sbb
mov
decl
cli
pop
jns
mov
and
xor
fs
adc
and
push
xchg
int3
lods
ja
xor
je
mov
ret
mov
adc
ja
mov
pop
inc
push
orl
and
add
cmp
inc
je
test
outsb
es
xor
rorl
fisubrs
lret
pop
movsl
fisttpll
cld
push
inc
xor
xchg
xor
sub
or
scas
aaa
cmp
and
push
cmpl
out
test
pop
xor
or
adc
loopne
imulb
pushf
mov
add
lcall
xor
cmpsl
mov
loope
jnp
push
scas
inc
add
adc
inc
aam
push
incl
in
mov
dec
test
jmp
mov
or
xor
mov
mov
sti
pushl
or
sub
jno
filds
mov
das
add
rolb
lahf
flds
stos
in
xorb
xor
in
pop
subb
cmpl
rolb
addl
pusha
adc
pusha
xor
out
pop
cmc
pop
and
add
add
lock
cmc
movsb
mov
pusha
call
push
fbstp
and
inc
and
fistl
fists
adc
adc
jp
push
add
mov
in
test
frstor
out
mov
testb
mov
push
inc
xchg
jno
enter
xor
push
add
addr16
jl
test
pop
std
jo
cwtl
add
or
sbb
mov
insl
stos
rolb
and
inc
ja
ja
pop
add
rorb
fstpt
insb
jg
cmp
adc
xchg
lock
and
xchg
xorb
pop
add
inc
das
and
cmp
inc
fsubl
adc
in
add
xchg
pusha
out
lods
lea
jl
push
inc
es
dec
pop
lods
lock
pop
bound
cmp
fmuls
stos
jmp
test
mov
movsb
inc
mov
cld
lea
jo
mov
in
and
rorb
orl
shl
dec
loopne
cwtl
int
inc
xchg
inc
in
inc
call
aam
icebp
inc
popa
aas
ucomiss
jle
in
cs
pusha
subb
sbb
lock
mov
push
or
inc
incl
cmp
add
fsubrs
push
jae
cltd
sub
cmpsl
movsl
outsb
adc
insb
mov
adc
push
dec
cmpb
addb
jp
nop
jg
pusha
cli
cmp
add
mov
pushf
xchg
or
ss
scas
and
add
inc
jne
cmp
rolb
outsl
cmp
filds
js
push
sbb
inc
cmp
inc
mov
fdivrl
mov
jg
addb
sarl
scas
rolb
xchg
repz
sarl
nop
add
cmp
sbb
push
jbe
loopne
repnz
jle
fcomi
mov
sub
push
dec
push
adc
lds
push
arpl
ja
dec
ljmp
push
mov
and
hlt
sub
lret
push
paddd
outsl
nop
or
cmp
sarb
mov
sub
test
imul
jne
arpl
aas
mov
clc
mov
cmp
les
hlt
rorb
push
jle
dec
cmp
add
inc
clc
pop
fs
das
ficompl
pop
push
mov
jno
repz
jo
jns
outsl
add
add
gs
push
and
nop
mov
lock
into
or
test
mull
mov
cli
fs
adc
fs
and
cmp
inc
repnz
call
notb
mov
mov
mov
pusha
xor
jb
dec
xchg
jle
dec
rorl
int
jo
adc
jns
fidivl
inc
adc
xor
push
push
jg
js
xor
mov
rcll
shll
pop
shlb
cmp
mov
sbb
loopne
ljmp
mov
jo
andl
out
aam
dec
pop
shl
call
loope
pop
icebp
add
stos
jne
add
rclb
mov
add
lds
add
outsb
les
push
sbb
xchg
inc
decl
sar
mov
je
inc
and
sbb
test
mov
xor
es
rolb
inc
dec
pop
mov
add
ljmp
xor
fabs
aaa
cmp
stc
mov
inc
jae
inc
jno
xchg
std
sbb
and
mov
dec
ret
lea
add
lea
jo
mov
std
mov
or
adc
fcomi
or
adc
scas
sbb
add
lcall
nop
adc
sahf
adc
adc
cmpsb
or
push
xchg
adc
mov
xchg
orl
add
jmp
cmpsl
dec
pop
inc
jb
rclb
push
adc
adc
sahf
add
mov
scas
dec
push
imul
addr16
push
add
xorl
idivb
and
movhps
xchg
nop
sbb
sbbb
ljmp
sub
add
popa
inc
jns
lods
adc
pusha
add
jb
in
or
mov
xchg
adc
xorb
jb
pushl
mov
xchg
adc
jno
add
inc
jo
outsl
jg
adc
cmpl
lret
add
inc
push
aaa
cld
aaa
or
inc
sbb
inc
out
pushl
sbb
or
loopne
push
push
xchg
roll
or
adc
cmp
sub
xor
stos
ja
dec
inc
add
ljmp
add
sub
je
rclb
fstpt
js
sub
dec
add
mov
add
out
dec
inc
inc
jmp
or
outsb
cmp
jae
mov
popl
subb
xchg
jmp
fists
ret
xor
mov
daa
jne
data16
cmp
xchg
sbb
xchg
inc
and
rol
mov
ss
and
out
sub
add
pop
push
fcoms
in
leave
add
rcll
repz
add
inc
pop
ss
inc
and
jae
cmpb
sbb
nop
mov
jmp
add
and
inc
push
fsubr
ds
mov
inc
insb
jno
lds
test
sbb
inc
or
jg
push
or
arpl
xchg
adc
add
add
sub
xor
sbb
aam
bnd
test
mov
and
inc
xchg
lret
imul
lcall
push
and
fstps
movsb
testb
paddusb
int3
and
rolb
clc
add
cmpsb
loope
sub
xchg
xchg
out
or
cltd
and
dec
adc
pop
cli
sbb
fiadds
push
mov
inc
sbb
xchg
clc
ja
dec
pop
xchg
xor
adc
xor
add
out
dec
push
or
or
pop
push
or
pop
std
addl
push
inc
fmuls
inc
pop
pop
loopne
aaa
nop
addb
adc
outsb
movl
sub
sbb
call
and
adc
pushf
push
fists
push
push
push
mov
add
add
je
dec
pusha
and
out
push
iret
orb
mov
push
push
lock
push
daa
hlt
push
hlt
lret
jp
mov
push
xchg
inc
or
or
jbe
jb
pop
stos
aam
lret
outsl
test
add
stos
mov
push
fwait
pop
je
sbb
mov
scas
fildl
loop
xchg
enter
pop
jmp
ljmp
nop
add
adc
or
pop
xchg
or
push
cli
into
repnz
sub
test
push
fwait
mov
clc
outsl
pop
xchg
orb
add
mov
add
lea
lods
jmp
pop
xor
addb
push
bound
pop
sbb
mov
mov
fildl
push
repnz
sbb
daa
add
incl
xor
inc
or
dec
add
pop
rclb
push
pop
xchg
ds
or
mov
xor
rcrb
mov
mov
mov
jl
and
mov
xor
mov
stos
add
out
cmc
jmp
hlt
mov
cmc
or
les
mov
cmp
out
ret
sub
test
pop
std
adc
add
and
mov
sub
mov
or
out
inc
jo
add
imul
mov
cmpsb
jo
mov
icebp
inc
outsl
push
or
ds
insl
mov
add
lods
pop
loopne
lods
loopne
pop
pusha
xor
mull
add
fmull
addb
fbld
scas
testl
mov
push
jbe
and
test
decl
push
in
test
adc
push
jmp
and
inc
pop
test
loopne
rorb
test
pop
sub
filds
addl
imul
push
repnz
and
sar
and
mov
cmp
loopne
sahf
sbbb
jb
jne
pusha
add
jb
test
std
adc
mov
scas
cmp
das
mov
out
inc
add
rcrb
pusha
mov
mov
sarb
mov
inc
add
jnp
and
shll
mov
rep
adc
add
add
out
clc
lcall
inc
jbe
xchg
sbb
mov
dec
stos
or
inc
popa
push
add
jmp
cltd
dec
pop
dec
and
pusha
loope
or
jp
loope
ljmp
adc
pop
ljmp
pop
xchg
aaa
add
shlb
inc
addb
adc
pop
adc
in
iret
push
loopne
and
rcrb
adc
jecxz
test
xlat
add
sub
cmp
cwtl
jp
xchg
add
add
adc
add
stos
pop
lock
lods
sbbb
movsb
scas
inc
pop
inc
mov
in
and
dec
cmpsb
mov
shrb
xchg
jmp
inc
adc
fsubl
adcb
cmp
push
int3
sbbb
push
dec
add
sub
jmp
add
aas
jmp
mov
imul
enter
or
sub
hlt
jb
push
scas
es
and
add
mov
xor
lcall
mov
adc
mov
sub
pusha
andb
mov
fdivrs
mov
cltd
in
test
xlat
cs
cmp
fisubrs
xchg
jno
add
add
pop
xchg
mov
ret
cmp
fnstsw
xchg
adc
mov
and
pop
inc
rolb
clc
or
ds
sub
setne
mov
je
orb
adcl
push
add
and
popa
pop
lock
test
inc
push
js
sbb
pop
popa
push
sub
es
dec
sbb
push
jnp
adc
roll
cli
mov
insl
ret
or
sbb
pop
movsb
jo
xor
subl
bnd
cli
adc
add
mov
push
pusha
cmpsb
jbe
icebp
adc
icebp
sub
sar
js
ljmp
cmpsb
testl
jb
adc
dec
lret
les
mov
inc
clc
dec
into
adc
inc
loope
stc
cld
mov
aad
and
outsb
ljmp
push
int
push
lret
xor
test
test
mov
jg
nop
insb
mov
jecxz
push
xor
xchg
fistpll
jbe
pavgb
pusha
loopne
sub
es
pop
test
decb
orb
adc
inc
pop
xor
push
aaa
jge
inc
push
jg
or
xor
jg
add
nop
xor
pushl
lock
roll
push
mov
or
jae
add
inc
adc
ret
inc
push
popf
xchg
add
lock
xor
xor
inc
out
clc
xchg
fidivl
mov
pop
jbe
repz
and
mov
pop
jno
push
xor
xor
out
clc
push
shrl
inc
pop
lods
jo
pop
add
add
push
or
inc
mov
daa
mov
add
and
mov
das
cld
mov
xor
sub
xchg
mov
mov
pop
cmp
jl
add
jle
sub
add
ljmp
rolb
test
es
nop
jl
nop
lahf
push
mov
xchg
test
jg
mov
lar
mov
lahf
mov
bound
xor
and
das
pop
je
repnz
add
inc
pop
add
fisttpl
push
add
mov
push
sbb
pop
js
mov
xchg
dec
les
add
call
scas
pop
je
jb
inc
out
mov
cmp
push
insl
outsl
ljmp
and
inc
xchg
or
push
xchg
mov
inc
push
popa
push
mov
or
inc
xchg
fisttps
iret
xchg
mov
popa
add
lcall
jnp
popa
sbb
adc
pop
xchg
add
bound
test
decl
clc
push
js
shlb
roll
add
filds
mov
jmp
add
and
push
addl
lock
cmc
inc
sub
mov
add
add
iret
inc
push
adc
mov
repz
inc
sub
rolb
and
sub
sub
adc
fists
push
and
xlat
inc
or
inc
lret
inc
cmp
data16
incl
jmp
mov
lret
sub
pop
jmp
test
scas
aad
bound
clc
add
adc
add
ret
add
movsb
dec
daa
movb
icebp
jnp
xor
dec
loope
dec
cs
cmc
jo
mov
push
test
push
xor
jl
pop
addb
cli
and
sub
push
lret
mov
add
jl
sbb
mov
add
xchg
or
rorb
ret
aas
dec
mov
mov
cmpsl
mov
hlt
inc
or
fsubrl
pop
stos
notb
out
rclb
pusha
adcl
adc
cmp
or
mov
xchg
nop
outsl
mov
out
add
push
pop
sbb
dec
adc
negb
xchg
jne
rolb
inc
mov
push
add
ljmp
ret
cld
inc
adc
xchg
lea
lock
lock
decb
adc
sbb
cli
les
incl
push
push
sbb
cs
iret
jle
xchg
mov
xlat
les
fildl
add
repz
add
mov
aaa
std
das
mov
mov
rcrl
sarl
pop
push
inc
dec
add
and
xchg
nop
add
sub
repz
or
mov
in
cmpsb
push
outsb
xchg
push
cs
inc
mov
and
jg
lock
inc
dec
inc
inc
sub
cmp
pop
mov
rorl
fs
cmp
std
call
std
pusha
or
pop
mov
insb
jnp
andb
pop
sbb
push
test
dec
fdivs
adc
sub
in
aad
insl
call
sub
inc
add
inc
dec
mov
test
inc
inc
mov
ljmp
dec
fwait
push
mov
cmp
sub
lds
subb
cmpsl
pop
mov
add
inc
sub
push
pop
fs
cmp
and
mov
push
mov
daa
mov
lock
mov
lods
xchg
lock
sub
add
or
outsb
push
lods
pop
inc
test
test
cs
sbb
scas
sub
dec
test
mov
add
cmp
adc
sub
std
sbb
pop
add
jle
jge
xchg
mov
mov
stc
mov
pop
ror
mov
xor
enter
nop
mov
scas
pushf
rolb
les
mov
mov
inc
pusha
das
mov
add
sub
roll
push
push
rcrb
out
sub
or
xlat
nop
mov
pop
outsl
sub
add
mov
xchg
pop
mov
add
inc
mov
fadds
js
add
rcl
notl
push
xlat
outsb
mov
and
stos
cmp
adc
test
cltd
mov
jnp
rorb
add
or
dec
or
inc
movsl
and
mov
outsl
outsl
jne
and
or
test
imul
mov
imul
pop
imul
orb
ds
fisubs
int
out
testl
arpl
and
stos
pop
jns
insb
sbb
inc
lcall
fidivrs
and
push
inc
adc
and
jle
test
in
push
repz
cmpsl
jmp
inc
cs
push
ds
bound
inc
fisttps
cmpl
inc
jo
adc
inc
adc
ret
inc
inc
ja
jno
xor
sub
or
cs
xor
or
inc
mov
fisttpl
xor
cmp
or
cmp
lds
xchg
cs
inc
out
cmp
xor
jae
xor
or
cmp
cmpsb
jle
int
mov
sub
lock
es
mov
or
inc
cli
inc
jmp
sbb
leave
sbb
push
insb
pop
dec
push
inc
xor
rorl
lcall
popf
stc
push
data16
or
push
shrb
pop
pop
fadds
cmpsb
stc
testb
mov
add
inc
and
cmp
std
outsl
mov
inc
adc
stc
inc
push
testl
lcall
cmp
xchg
icebp
dec
mov
decl
dec
adcl
bound
inc
add
inc
popa
inc
inc
fcmovnu
or
inc
cmp
ret
mulb
adc
pushl
jp
jecxz
inc
dec
or
inc
cmp
add
aaa
sbbb
filds
pop
roll
fldl
xor
inc
inc
cs
push
flds
add
adc
pop
lock
inc
cmpsb
imul
cmp
inc
lret
std
ja
push
and
mov
sub
add
push
mov
inc
dec
mov
daa
ret
mov
inc
adc
mov
adc
mov
add
loopne
mov
add
ss
xchg
mov
call
es
cmp
mov
inc
pop
pusha
xchg
orw
pop
in
ja
fildl
cmpsl
inc
ret
adc
mov
lods
loope
arpl
jb
outsl
mov
adc
fwait
lods
push
clc
inc
add
or
jl
adc
xchg
inc
mov
ljmp
xchg
data16
adc
outsb
push
lea
mov
and
rcrb
unpcklps
outsl
sub
sub
mov
mov
loope
jb
ds
and
inc
pusha
or
sbb
mov
hlt
lods
adc
fsubs
add
jb
add
xor
negb
rcll
add
cltd
int3
stos
mov
add
fbld
es
subb
mov
pop
or
into
jg
cmp
xchg
xchg
cmc
push
imul
fucomi
push
jbe
inc
dec
es
mov
cmp
out
xchg
push
jle
mov
push
add
loopne
cmp
xchg
cmc
or
sahf
je
add
cmp
popl
scas
and
stos
xchg
jno
add
mov
sub
orb
pop
js
and
jge
lods
push
stc
push
mov
inc
jp
out
xchg
loop
push
daa
pusha
jl
pop
hlt
mov
push
inc
test
mov
mov
lods
clc
xor
adc
xor
mov
addb
stos
test
push
dec
addb
add
insb
lahf
jo
call
or
js
mov
pop
jbe
mov
pusha
inc
add
mov
pusha
add
shll
adc
push
outsb
imul
mov
je
xor
rclb
add
inc
pusha
push
and
or
mov
ds
ret
addr16
daa
outsb
push
sub
pop
shll
adc
jb
shlb
or
sbb
imul
mov
pop
add
xorb
hlt
inc
sub
and
sub
scas
or
push
and
and
inc
sbb
rorb
mov
or
cwtl
jne
push
inc
adc
add
out
add
rcrb
les
pusha
add
mov
pop
xchg
or
inc
loope
adc
xchg
pop
xchg
and
sub
or
jg
or
dec
bound
xor
pusha
jmp
mov
mov
loopne
out
or
sbb
fwait
mov
or
sub
bound
add
sti
and
add
pop
push
push
mov
jo
mov
call
rorl
rol
inc
sbb
push
inc
loopne
adc
inc
pushl
es
lock
hlt
jo
mov
jb
daa
push
out
inc
adc
je
insl
inc
push
add
inc
aas
clc
push
mov
icebp
add
push
je
pusha
dec
outsb
adc
inc
xchg
mov
mov
lock
adc
mov
xchg
cs
lcall
adc
inc
popa
and
and
inc
das
add
mov
add
add
jg
aas
or
inc
mov
pop
loopne
push
and
test
add
loope
cmp
push
sub
or
push
add
push
dec
or
call
or
cmpl
in
stos
bound
xor
and
xor
or
pop
sbb
sbb
inc
sbb
jle
adcb
add
int
or
or
mov
shrb
jl
add
int
out
and
mov
inc
adc
js
mov
mov
and
mov
daa
or
mov
sub
call
mov
subb
rep
or
xchg
and
js
xlat
icebp
or
lret
push
sarb
ret
std
or
test
aas
ljmp
sub
mov
cmpb
adc
add
imul
or
ret
addb
or
and
adc
inc
popf
in
inc
int
popf
into
std
cltd
push
les
sbb
ret
ljmp
add
mov
mov
jnp
inc
inc
cmp
cmc
mov
test
push
aaa
test
jl
pop
or
fidivl
adc
inc
jl
adc
mov
adc
xchg
loopne
adc
aas
adc
andb
cmp
je
scas
sbb
cli
pop
add
pop
and
or
pop
push
dec
outsl
lcall
pop
insl
inc
add
xchg
enter
add
cs
sti
inc
add
mov
add
mov
adc
pop
sub
add
sti
push
add
inc
in
es
jb
cmpsb
hlt
cwtl
adc
cwtl
stos
adc
fisttpl
sub
xor
andl
call
xor
add
adc
movsb
lock
lock
je
int3
sahf
fcomip
or
daa
mov
push
sbb
xchg
in
cwtl
orb
cmc
mov
inc
or
add
shlb
cld
inc
mov
sbb
jl
adc
cmp
pop
mul
jbe
inc
sub
cltd
push
js
cld
adc
js
lea
imul
xchg
add
xor
hlt
mov
pop
and
lds
lods
nop
xor
and
mov
loop
add
mov
add
fbld
xchg
shrd
incl
pusha
add
imull
adc
pop
xor
nop
inc
sbb
and
push
push
das
mov
loop
fimull
add
jecxz
adc
and
mov
mov
mov
shlb
scas
push
rolb
add
inc
notl
pop
and
ljmp
faddl
jbe
xor
fnstcw
inc
outsl
incl
xchg
lock
repz
testl
shrb
cld
push
pop
rolb
rolb
ljmp
out
mov
sbb
pusha
add
movl
and
mov
or
movhps
daa
adc
popa
push
and
mov
mov
loopne
push
sub
push
add
dec
icebp
fstpt
call
ret
xchg
fistpll
nop
add
or
adc
jmp
gs
out
mov
jmp
push
or
ljmp
jno
pop
ljmp
pop
scas
fistpl
dec
js
and
add
repz
mov
inc
add
add
incb
push
scas
jo
push
hlt
scas
andl
push
les
imul
test
pop
adc
jo
lea
add
inc
cwtl
shlb
cmp
lahf
out
or
aam
push
aam
pop
ljmp
dec
push
lods
fadds
fadd
cmp
mov
dec
mov
xchg
lock
popa
add
arpl
call
int
fistps
imul
fst
mov
jg
cld
pushf
roll
adc
and
fwait
movsl
or
xchg
xor
xchg
pop
push
cmp
jge
adc
add
or
clc
int3
or
dec
outsl
push
and
mov
cmpsl
aam
hlt
and
mov
xchg
add
and
mov
push
test
pusha
cmp
mov
mov
inc
movsb
cmp
addl
mov
test
out
roll
cwtl
ds
aaa
cld
xlat
adc
add
sbb
pop
dec
or
sub
shll
loopne
in
std
outsl
js
inc
mov
shrb
adc
mov
push
repz
shlb
pusha
dec
mov
mov
aaa
jp
outsl
icebp
or
mov
add
out
mov
add
add
mov
add
sbb
sub
aam
and
add
mov
sar
xor
pop
inc
std
adc
pusha
sub
or
addb
push
pusha
or
jge
cmp
lahf
xchg
lret
xchg
inc
shll
sub
pushl
xor
nop
imul
rol
loope
mov
add
jb
shrb
add
adc
mov
fwait
addl
int
or
jbe
dec
add
mov
pop
mov
imul
add
stc
pop
test
cwtl
sbb
dec
add
xor
add
mov
test
scas
mov
mov
and
loope
lahf
lcall
rclb
and
leave
add
and
in
mov
shlb
call
ret
adc
xor
les
add
test
lock
addb
pop
lea
and
daa
sub
scas
add
repz
andb
movb
add
adc
in
out
add
addl
add
sbb
pop
dec
inc
xchg
jnp
jg
mov
outsl
pop
pop
inc
adc
aaa
and
jmp
je
sub
mov
sbb
adc
mov
movsl
mov
add
pop
xchg
cli
dec
imul
dec
add
xchg
pusha
xor
js
subl
add
xchg
les
add
add
add
add
xchg
jmp
sbb
sub
cmp
ljmp
sbb
mov
ret
and
mov
js
subb
lret
sbbb
icebp
stos
fcomps
or
add
test
add
sti
add
or
cmp
ljmp
sbb
cwtl
orb
mov
inc
test
add
js
js
xor
mov
inc
imul
test
push
cmp
sub
int3
push
pop
testl
adc
add
cvttps2pi
mov
movsb
add
lea
test
dec
or
pop
fbstp
ret
lea
inc
lds
add
adc
pop
add
add
mov
sub
fbld
push
inc
insb
or
xchg
sub
popa
add
outsb
sbb
aaa
xor
xor
and
cmp
inc
xchg
or
inc
and
pop
jl
add
cmp
dec
mov
and
mov
jo
out
loop
jne
mov
lock
je
inc
mov
test
imul
adc
pop
sbb
jo
jbe
inc
push
sub
jb
std
subb
lret
mov
fimuls
lcall
rcrb
push
add
mov
cld
adc
out
adc
and
mov
push
addb
adc
mov
std
aam
add
add
mov
and
dec
rclb
add
sbbl
dec
add
movsb
test
or
push
push
test
lea
daa
mov
movsb
or
mov
orl
xor
data16
adc
adc
shl
inc
shrb
out
rclb
clc
insl
add
ficoms
push
adc
add
add
movsb
outsb
mov
adcb
test
outsl
inc
rcrb
cmp
movsb
cmpsl
in
stos
or
movl
in
mov
shll
jo
std
pop
fiadds
jg
test
rolb
shrb
jmp
mov
sub
push
aas
mov
sbb
and
addb
pop
subb
je
sbb
and
pop
xor
pop
loopne
mov
and
sub
std
add
pusha
or
out
pop
and
movb
or
dec
adc
je
jp
pusha
add
cmp
and
cmp
xorl
pop
inc
or
das
adc
andl
push
cwtl
cli
scas
inc
xor
loope
xchg
jbe
scas
fistps
sbbl
outsl
lock
sti
or
mov
add
mov
jp
or
adc
mov
inc
or
push
popa
add
sar
loope
inc
bound
and
or
jb
add
fildl
test
mov
add
test
mov
and
mov
mov
inc
and
or
add
sbb
inc
call
add
pop
xor
push
adc
inc
add
adc
add
cmc
addr16
and
or
aas
and
clc
fistpll
bound
mov
mov
out
mov
loop
mov
outsb
inc
or
mov
dec
adc
add
xchg
stos
idivl
out
decb
sti
cwtl
dec
adc
loopne
loopne
repnz
mov
ret
aad
mov
clc
push
xchg
pop
lea
mov
push
jbe
lock
enter
mov
pop
sbb
push
push
call
adc
data16
stc
push
test
pusha
pop
ljmp
or
shr
insb
ds
inc
pusha
inc
inc
add
mov
push
sub
adc
and
add
add
callw
add
pushf
mov
imul
inc
xor
cli
push
mov
fwait
fs
scas
adc
popa
mov
cli
inc
sub
add
xchg
pop
sbb
adc
push
mov
stc
push
jb
jg
and
lock
es
frstor
arpl
lock
loop
or
stos
stos
int3
pop
lods
pop
adc
sbb
or
repnz
fstps
mov
loopne
arpl
test
push
js
mov
fdivrs
or
mov
call
push
cmp
fs
outsl
fimull
adc
add
sbb
inc
adc
xchg
adc
loopne
inc
ds
add
mov
and
sbbb
aad
aam
rcrl
stos
and
and
mov
pop
xchg
jp
mov
mov
add
test
mov
sub
mov
xchg
shll
and
xor
cmp
or
stc
and
push
xchg
lock
cwtl
ret
sub
or
xorl
testb
in
aas
test
pusha
sahf
sub
pop
andb
mov
ljmp
pushf
pop
or
add
loopne
or
sbb
or
loop
imul
fincstp
jne
cmp
mov
pop
out
shll
daa
jb
mov
inc
adc
ss
test
int3
test
adcb
jmp
data16
push
mov
xor
jnp
jg
out
decl
enter
adc
jae
add
and
nop
pop
add
or
stos
clc
cltd
xchg
in
aad
adcl
fdivrl
xchg
cmp
mov
mov
pop
scas
jo
scas
xchg
loopne
mov
popa
dec
and
bound
shlb
sub
pop
aaa
sbb
add
cmp
loopne
sbbb
xor
add
nop
cmp
out
or
test
fildl
cmp
cld
loopne
pop
cmpb
add
and
add
sub
adc
adc
xchg
xchg
shlb
std
outsl
nop
jecxz
adc
pop
cmp
sbbl
inc
mov
in
mov
or
jo
hlt
mov
lods
or
lods
push
or
jecxz
fdivl
push
or
or
or
or
xchg
ficoml
orl
push
adc
jae
stos
add
bound
cmp
sbb
xchg
rolb
cld
add
jg
push
jg
mov
adc
xor
mov
pushf
scas
pop
gs
push
and
aam
outsl
mov
decl
mov
xor
cmp
mov
je
fimuls
sbb
xchg
hlt
daa
mov
or
scas
es
nop
out
push
loopne
call
xchg
std
bound
mov
mov
xchg
cmp
mov
andl
aaa
push
fists
orb
in
stos
das
clc
ffreep
inc
sahf
rcrb
rorb
jbe
pusha
xchg
pop
lock
je
out
add
adc
js
rolb
or
ds
and
jge
inc
and
js
stc
std
mov
or
mov
mov
mov
jmp
cmp
dec
add
dec
push
or
xor
imul
xchg
mov
pop
jle
aaa
mov
adc
loope
repnz
jg
bound
mov
or
aas
sub
sbb
outsl
add
lock
jle
or
js
pop
mov
lcall
and
add
jl
sbb
pusha
add
popa
xchg
call
xor
push
cmc
push
pop
cmp
out
ds
dec
lea
test
movsb
popf
shlb
test
cmp
movsb
add
fmull
add
or
dec
nop
sbb
ret
decl
cmp
loop
fwait
adc
loop
and
dec
sti
and
push
jg
mov
push
jnp
cmp
adc
push
popa
orb
hlt
out
mov
add
pop
mov
mov
sub
adc
add
enter
popf
popa
cmp
aaa
icebp
adc
hlt
pop
cmp
dec
adc
daa
imul
js
cltd
roll
mov
add
clc
mov
push
or
arpl
fmuls
rcrb
ljmp
test
aad
test
imul
mov
push
cli
push
rcl
or
ja
ss
shlb
out
push
hlt
cwtl
and
pop
outsb
adc
sub
decl
mov
push
jae
decl
adc
imulb
push
add
pusha
push
jb
push
add
push
and
sub
dec
mov
push
inc
xor
pop
test
mov
and
mov
icebp
adc
aaa
dec
jp
dec
push
pop
aas
push
push
inc
sub
scas
push
jle
add
jp
mov
jbe
jp
sbb
iret
mov
dec
adc
incl
lods
or
xchg
inc
add
and
sarb
pop
shlb
mov
data16
push
test
inc
ljmp
les
inc
js
movsb
or
xchg
adc
stc
or
les
adc
pusha
adc
mov
mov
int3
out
ja
add
idivb
add
push
dec
push
add
and
aaa
je
fcoms
les
cmc
lods
rorb
test
fdivl
fdivl
cmpsb
clc
pop
and
pop
fildl
xor
mov
scas
sbb
in
loopne
std
and
xor
mov
mov
inc
sub
cmp
loopne
mov
in
dec
es
push
outsl
jne
inc
ja
jecxz
hlt
out
add
sub
aam
mov
pushf
mov
pop
dec
clc
inc
and
or
pop
and
or
mov
aaa
or
and
and
mov
jno
sarl
test
lods
cmp
jmp
xor
inc
cmp
clc
xor
sub
add
out
pop
xchg
stos
sub
mov
pop
sbb
dec
adc
mov
lcall
lock
add
xor
adc
fs
xchg
xorb
or
loopne
and
testl
subb
push
sbb
push
popa
push
xor
jmp
sbb
cld
sbb
and
call
repz
push
or
sarb
fwait
rolb
rolb
pop
mov
adc
add
jns
xor
pop
shll
add
fcom
mov
push
push
and
sti
push
inc
jmp
loop
mov
add
push
sbb
add
inc
fdivp
add
test
sbb
add
mov
mov
add
and
push
repnz
hlt
pop
fs
xor
add
gs
jle
push
clc
xchg
and
sub
or
pop
sti
pushl
rcr
xor
add
sbb
jnp
jle
lea
loopne
add
sub
mov
roll
jle
mov
inc
aam
ret
aam
cmp
sub
jb
push
push
adc
jb
pusha
in
lcall
and
mov
mov
and
and
imul
xor
andl
aaa
or
mov
xchg
inc
nop
mov
ja
push
imulb
adc
imul
and
inc
imul
leave
mov
xor
xor
je
dec
sbb
mov
lods
scas
push
add
xchg
xchg
imul
add
add
stos
test
cmp
fwait
jbe
inc
add
jmp
test
iret
je
testl
repz
add
sbb
lret
jl
add
sti
les
mov
push
add
lods
hlt
test
lcall
test
ret
add
mov
push
or
dec
sbb
pop
push
dec
sbb
add
fwait
jo
xchg
call
inc
pop
or
inc
or
dec
cld
pop
mov
outsl
idivl
rolb
xor
push
xchg
dec
call
dec
jmp
decl
push
pushf
lret
and
jbe
std
xchg
pusha
mov
sbb
pusha
inc
mov
add
push
xlat
xor
sub
or
push
xor
add
jmp
pop
adc
sub
test
and
xor
orb
xor
sbb
xchg
dec
jb
les
scas
dec
xchg
loope
pop
push
clc
adcb
mov
inc
cli
xchg
adc
dec
bound
addl
test
push
push
in
push
mov
addl
mov
je
enter
jb
jge
add
inc
inc
test
bound
clc
inc
gs
push
int3
repz
in
pop
nop
sbb
test
add
mov
out
sub
cltd
pop
in
fadds
jbe
ret
inc
ss
pop
jbe
dec
cmp
pop
lods
mov
lahf
dec
add
jl
je
imul
aaa
out
mov
pop
fcomps
sub
jg
sbb
scas
add
insb
je
rcrl
jecxz
fildll
xchg
or
or
cltd
clc
jg
inc
sub
js
jle
pushf
mov
xchg
jbe
ret
adc
xchg
roll
cmp
adc
movsl
mov
lock
lods
xchg
jne
add
punpcklbw
add
push
orb
cmpsl
repz
lds
in
je
sarw
jo
inc
add
and
orb
add
xor
lods
lods
xchg
xor
cmp
mov
hlt
adc
mov
rcrb
mov
xorb
pop
mov
or
ljmp
inc
or
jg
ret
dec
cltd
jae
push
addb
arpl
add
push
cli
mov
adc
cmp
pop
sub
pop
imul
pop
rolb
pop
add
add
imul
pop
lods
mov
inc
int3
mov
pop
pop
arpl
cmp
stos
adc
imulb
aas
adc
or
mov
daa
orb
adc
adc
pop
lods
dec
push
sub
daa
adc
fucomi
sbb
or
xor
and
xor
adc
ss
roll
push
icebp
jmp
aas
mov
inc
hlt
repz
test
outsl
push
jmp
lret
adc
add
adc
incl
adc
mov
push
add
popa
add
push
cs
test
sub
hlt
mov
or
sub
js
jmp
add
orb
pop
icebp
loopne
lods
jecxz
add
testl
aam
in
jmp
mov
and
add
repz
sbb
and
and
pop
cmp
push
rorl
inc
out
pusha
sbb
outsb
rclb
sahf
adc
mov
aad
mov
cmpsl
cmpsb
mov
jae
das
cmp
or
add
inc
mov
arpl
imul
sub
mov
scas
mov
adc
data16
inc
hlt
loopne
and
inc
or
mov
mov
xchg
aam
mov
xchg
or
stc
dec
or
mov
je
out
in
adc
inc
inc
mov
mulb
lcall
fdiv
mov
mov
add
sub
mov
add
imul
sbb
adc
pop
sahf
orb
pusha
add
inc
lcall
jnp
cmp
add
cmp
cli
cs
xchg
ds
loopne
das
jp
aad
xor
add
push
add
cmp
nop
push
test
rorb
add
mov
add
test
or
lock
test
aaa
hlt
aaa
and
popa
shr
stos
add
lret
sub
outsb
es
add
fsubrs
dec
decl
pop
add
loopne
lcall
sbb
dec
into
int3
xchg
cmp
leave
sahf
add
add
fwait
js
pusha
sbbl
into
cld
pop
mov
adc
mov
cmp
daa
and
jbe
rorl
mov
sbb
insl
push
out
add
sbb
mov
outsl
xchg
addr16
adc
or
and
mov
punpcklbw
sbb
loopne
popa
shll
or
pop
out
loopne
jmp
or
pop
movsb
pop
sub
pop
mov
xlat
add
repz
push
loop
fstpt
dec
inc
fildl
pop
fcompl
add
mov
mov
sbb
xchg
add
popa
sub
daa
inc
adc
scas
adc
pop
or
jg
and
add
jp
js
add
mov
xchg
mov
call
cld
mov
push
loopne
add
shll
scas
loop
mov
addr16
xor
int
jae
shr
repnz
out
cltd
sbb
pusha
adc
popa
mov
fdivs
scas
in
adc
jg
lahf
out
push
mov
push
dec
cmpsl
xchg
fwait
cmpsb
push
xchg
xor
push
ja
jnp
mov
sbb
sbb
add
fistps
fcoms
push
jecxz
out
test
cltd
fistpl
icebp
add
and
mov
adc
aad
push
pop
mov
or
sub
xlat
das
pop
xor
and
daa
mov
sbb
lock
mov
cs
inc
inc
loope
int
fimull
cmp
pop
push
arpl
add
pop
mov
cmpl
xchg
sub
pushl
testl
xor
push
xor
imul
add
xlat
sbb
roll
insb
shrl
in
out
xor
sti
push
incl
std
imul
cmovs
icebp
lock
sub
push
push
pusha
inc
call
xchg
mov
test
pop
mov
xor
jo
stos
aas
jo
xor
mov
sbb
call
test
inc
jae
outsl
jae
stos
jg
aaa
pop
mov
icebp
stos
xor
inc
inc
adc
jle
pusha
and
add
adc
jmp
mov
jo
cmp
or
cld
mov
sahf
loopne
adc
mov
adc
clc
stos
stos
add
add
or
shl
cmp
inc
push
jg
test
jge
imul
das
je
xor
add
sub
mov
jns
jge
int3
mov
lcall
adc
jo
adc
push
aam
jo
fmul
xchg
shl
xorb
inc
mov
lock
aad
sbb
xchg
cvtps2pd
xchg
push
sti
xchg
add
pop
push
insb
add
add
out
lods
loop
dec
xor
push
push
fimuls
cmp
mov
mov
push
xor
movsl
lock
mov
sbb
ds
aad
icebp
mov
stos
cmp
push
movsb
sbb
cmpsb
cmp
mov
pop
mov
lahf
addb
shll
ret
mov
sub
out
push
jne
mov
aas
jb
pusha
jmp
add
lock
cs
sub
lock
jne
roll
mov
stos
lds
leave
add
out
stos
ja
xor
addr16
mov
out
addb
or
xor
sarl
add
and
je
lds
sbb
sbb
jae
lds
sbb
stc
fistl
in
add
push
lock
cmc
jno
sbb
or
push
aas
push
sarl
push
add
sbb
jno
popa
mov
sbb
mov
jno
outsl
push
out
imul
sbbl
sbb
mov
jle
fwait
or
or
mov
addb
fiaddl
or
mov
xor
adcb
cmpl
cmpsb
adc
pop
sti
insb
clc
subl
mov
add
jo
mov
push
das
cwtl
cmp
mov
and
inc
aad
addr16
jo
stos
popa
pop
mov
insl
pusha
cmpsb
mov
mov
xor
push
xchg
push
outsl
lahf
mov
lea
add
sub
add
sub
push
loopne
negb
std
stos
das
scas
mov
mov
jo
out
leave
mov
mov
arpl
outsl
push
xchg
push
jns
push
mov
std
lahf
mov
lcall
bound
fdivs
fwait
mov
xchg
mov
movl
push
or
imul
dec
mov
sbb
jns
jge
sbb
add
stos
mov
push
loop
push
add
xchg
sbb
cltd
push
popf
add
divl
push
pop
add
add
lods
stos
shrl
xchg
push
add
push
bound
imul
inc
leave
fmulp
or
add
sub
add
mov
dec
xor
adc
fwait
cmpsb
xor
add
push
sbbb
adc
cld
cmc
cld
insl
shll
push
outsb
jb
jbe
jp
xor
xchg
or
cmp
add
dec
stos
push
cmpsb
jns
push
push
sbb
popa
gs
jne
jge
lcall
xchg
cmpsb
jns
cmpsb
xchg
cltd
popf
mov
lcall
jns
cmpsb
jns
shll
loope
lcall
cmc
stc
std
fcmovbe
xor
add
adc
adc
sbb
sbb
shll
sub
inc
subl
dec
sahf
imul
cmpsb
imul
imul
cmpsb
imul
test
sahf
cmpsb
imul
cmpsb
imul
cmpsb
imul
int
std
add
jb
or
shll
and
shrl
mov
lahf
mov
inc
hlt
aam
add
add
mov
stos
mov
push
andl
stos
mov
dec
fwait
orb
insb
repz
push
mov
lods
and
out
add
jns
push
xchg
repnz
pushf
enter
int
lcall
mov
movsl
test
lcall
or
int
pop
repz
int
rcrl
aad
shll
in
in
add
xchg
ret
fisubl
std
add
and
cmpsl
imul
adc
roll
sub
je
cmp
cmpsb
pusha
rol
sub
pusha
cmpsl
dec
shll
movsb
call
popa
or
xor
imul
jo
sbb
add
mov
or
push
movsb
pushf
mov
insb
mov
lds
fcoml
fcoml
cmpsl
fstps
cmpsl
jmp
adc
sub
stos
movsl
mov
cmpsb
sbb
xor
out
mov
or
mov
mov
mov
mov
or
mov
repz
repz
pushf
stos
xchg
add
loope
push
aas
cmpb
push
push
xor
push
ljmp
sub
push
cli
add
add
cmp
ret
push
pop
inc
stos
adc
lcall
and
adc
int
sbb
lcall
test
es
sub
test
shlb
fdivrl
mov
lods
jb
aad
mov
popa
add
mov
outsb
adc
fdivrl
cmp
pushl
or
inc
xor
stc
mov
das
and
movsl
cmpsb
jl
cmp
mov
mov
adc
mov
inc
sub
into
and
cmc
mov
push
jl
adc
hlt
addb
stos
outsb
ds
cli
decb
es
add
insl
std
outsl
mov
les
jl
xchg
mov
push
jbe
jmp
or
fimuls
lods
enter
in
and
cli
mov
cmc
or
sub
jb
jae
inc
push
or
sub
or
add
cmp
popf
adc
nop
pop
push
jl
data16
jp
and
mov
dec
arpl
adc
add
jbe
lea
notb
xor
add
rolb
pop
mov
dec
cmp
mov
mov
dec
adc
cli
adc
popa
push
inc
add
lock
loopne
icebp
add
mov
add
jg
add
adc
and
filds
adc
inc
add
or
adc
fbstp
je
add
je
sbb
mov
and
cmp
test
add
fcoms
add
das
push
or
cmc
and
adcb
cmp
pop
adc
out
add
xchg
adc
ret
push
cld
loope
mov
mov
push
shlb
or
cmp
cld
incl
push
mov
dec
ss
add
out
sbbb
lds
mov
jg
cmp
sbbb
xor
shrb
fsubrl
clc
roll
mov
xchg
hlt
sbb
or
pop
xchg
cld
outsl
pop
mov
test
addr16
jae
clc
adcl
std
scas
mov
sub
push
stc
shll
fcmove
fwait
stc
xchg
test
rsm
das
call
sbb
add
jmp
std
pushl
ljmp
add
mov
or
les
data16
cmpsb
clc
mov
cmp
adc
test
test
add
adc
aaa
sahf
add
repz
mov
cwtl
std
pop
or
pop
hlt
out
icebp
adc
fs
pop
mov
adc
call
jns
jno
xor
ja
stc
rolb
add
xchg
jl
fbld
add
lds
adc
push
lcall
addb
stc
and
sbb
add
aaa
pop
pop
jge
add
fistl
push
add
test
enter
sub
add
mov
xor
sub
inc
fdivp
sti
lock
nop
push
push
pop
push
sub
push
cmc
add
add
sub
jge
add
insb
in
pop
pop
outsb
sub
repz
push
add
repz
or
add
leave
push
mov
aam
jmp
frstor
push
xchg
add
pop
aad
add
xor
dec
loop
xchg
aam
push
sub
add
call
cli
lcall
pop
stc
push
add
or
int
or
bound
sbb
call
cmp
mov
xor
out
lods
icebp
es
mov
mov
adc
add
xor
inc
mov
aad
ss
or
jo
pop
jno
mov
clc
loopne
ja
flds
inc
mov
add
xchg
je
xor
or
fisubl
cs
idivb
push
mov
lods
pop
mov
add
push
ret
mov
dec
mov
add
and
push
xchg
pop
in
das
push
clc
repz
add
sbb
outsl
mov
decl
sarl
push
mov
pusha
inc
or
inc
or
imul
popa
xor
and
or
scas
mov
jo
or
xchg
mov
push
adc
outsb
pop
mov
push
jle
or
sub
dec
ljmp
jnp
jmp
and
fs
mov
adc
dec
dec
jmp
pop
add
sub
mov
sbb
lcall
xchg
adc
add
push
mov
pop
and
clc
mov
adc
and
jl
in
cmp
add
aas
rorb
mov
or
lods
xchg
jo
adc
mov
pop
inc
push
sub
push
sub
mov
add
cmpsb
std
ljmp
addl
stos
jp
xor
add
std
add
push
xor
xchg
sbb
cld
pop
inc
mov
sub
push
inc
push
out
leave
add
cli
add
fcoml
iret
pop
loopne
push
ficoms
sbb
testb
notl
clc
adc
aaa
mov
or
xchg
dec
test
add
mov
flds
dec
les
push
scas
inc
in
testb
inc
insb
lds
dec
pushf
std
lds
fcoml
mov
inc
mov
push
push
jb
das
jb
sub
add
fwait
dec
sub
pop
out
mov
int3
add
sub
add
adcl
mov
adc
add
lret
add
add
adc
stc
cs
pop
in
in
push
jp
sbb
cs
jbe
or
sbb
sbb
push
insb
ret
pop
mov
ret
pop
mov
icebp
ret
sub
cmc
ret
push
adc
ret
lock
push
pop
addb
pop
orl
sbb
outsl
mov
fists
lods
vcvtsd2ss
mov
adcb
push
stos
mov
mov
ret
push
mov
push
ret
push
mov
dec
in
aaa
int
add
push
ret
xchg
sbbb
nop
push
xchg
nop
pop
sbb
decl
xorb
addb
dec
fimuls
add
mov
scas
rolb
inc
inc
mov
aaa
adc
adc
xorb
daa
lods
fmuls
mov
jb
or
mov
xor
mov
rorl
fildll
test
subl
xchg
nop
fiadds
jl
lock
dec
cld
mov
jp
add
ljmp
mov
sub
push
cld
push
addb
addl
dec
or
add
add
cs
es
es
dec
push
pop
xadd
mov
inc
andl
mov
mov
jg
dec
or
and
push
sti
mov
sub
adc
mov
or
std
mov
pop
inc
loope
mov
lret
jmp
xchg
in
pop
ljmp
add
popa
add
jmp
icebp
cmp
and
andb
addl
loope
fisttps
clc
ljmp
mov
ret
punpcklbw
fstl
lock
adc
daa
or
cmp
decb
or
sbb
inc
sbb
jg
mov
daa
repz
daa
pusha
subb
add
daa
jbe
inc
mov
incb
pop
sbb
and
mov
or
subl
add
jbe
jo
int
or
fcmovu
or
ljmp
sarb
ds
pop
and
and
or
loope
inc
add
out
adcl
inc
loopne
fimull
cs
inc
add
or
ret
data16
inc
push
sub
out
cmp
mov
add
in
fsubrs
sbb
cmp
and
adc
push
rorb
xlat
pusha
add
adc
in
fisttpl
imul
jnp
out
inc
or
jmp
jmp
or
adc
test
repnz
aaa
out
mov
imul
pushl
cs
loope
push
xor
xor
dec
rcll
rcrl
jb
loopne
stos
lcall
aad
push
sbb
jmp
xchg
push
or
lea
rol
and
sub
and
or
cs
mov
add
test
pop
sub
sbb
js
cmpb
flds
rcll
loopne
mov
stos
mov
pusha
mov
mov
and
add
jo
jmp
incl
jo
adc
jp
pop
push
xchg
add
pop
test
mov
fnsave
lock
or
daa
icebp
add
mov
aam
xchg
sbb
or
mov
iret
mov
pop
cltd
pop
xorb
lret
call
das
xor
dec
shrl
insw
cmp
jp
pop
sub
mov
or
push
mov
inc
aad
add
add
gs
pop
inc
or
mov
xchg
pushl
popf
cmc
test
fcmovbe
cmp
pop
jne
sub
test
stc
icebp
and
rcl
test
jmp
adc
shll
rorb
fwait
out
leave
sbb
test
sub
daa
push
stos
dec
rsqrtps
pop
sbb
mov
sub
xor
pop
xor
pop
jns
pop
addr16
inc
dec
push
pop
xchg
mov
addb
pusha
rolb
lock
push
pop
pop
loopne
add
mov
imul
imul
mov
and
pop
add
adc
jo
call
and
movl
jmp
mov
es
cmp
add
mov
add
aaa
xor
mov
dec
addr16
lods
sti
lock
cmpsl
xchg
leave
sbb
decb
jo
push
das
xor
push
mov
jne
gs
shll
jp
sub
add
negl
push
sbb
imul
mov
out
sarl
loope
adcl
aam
mov
xor
sub
fistps
and
push
lods
sbbb
je
inc
lods
or
mov
xchg
ficomps
lock
push
lods
xchg
mov
dec
mov
and
inc
inc
stos
fs
ficomps
lods
sub
jl
inc
sahf
jbe
movhps
andl
clc
mov
loopne
push
lods
cli
addb
pusha
shll
add
sub
shrl
mov
inc
fcmovnu
lret
shll
push
xor
jb
ret
sbb
pop
stos
lods
sbb
lods
inc
cs
js
push
or
jp
stos
push
ret
mov
sar
xchg
pop
sub
shrl
and
addb
pop
jg
dec
push
pusha
popa
jg
fwait
and
jg
and
or
fadds
pusha
lods
push
pusha
addb
pop
clc
lods
stos
scas
addr16
cmp
insw
push
pop
mov
scas
lods
xchg
inc
push
scas
jp
jecxz
test
sub
sahf
xchg
mov
inc
loope
mov
popf
xchg
add
clc
push
or
mov
insb
sbb
or
fwait
adc
sbb
dec
sti
lods
inc
mov
jge
xchg
mov
data16
mov
cwtl
popa
sti
or
mov
fwait
mov
stos
inc
xchg
xchg
and
pop
rolb
mov
std
std
jo
mov
mov
mov
xchg
pop
and
ds
jo
scas
stos
xchg
xchg
push
nop
inc
mov
xchg
orl
loope
xchg
cs
sahf
xor
pop
popf
mov
push
hlt
xchg
xor
insb
pop
inc
mov
pushl
pop
mov
jg
ficoml
jno
pushl
jb
test
push
xor
xor
add
idivb
aas
cld
lods
adc
bound
cs
xor
pop
scas
fcoms
add
xchg
mov
fcmovne
pop
decb
add
or
mov
mov
adc
or
call
add
push
inc
push
and
adc
mov
mov
add
push
add
sub
adc
mov
mov
cmp
xchg
test
xchg
rclb
sbb
sbb
fnstenv
and
test
xchg
decl
adc
jbe
add
clc
scas
incl
mov
orb
pop
nop
pop
nop
test
sbb
push
dec
popa
shl
pushf
mov
sarb
lret
sub
cwtl
or
sti
ret
sbb
mov
add
ret
add
mov
mov
add
bswap
lea
cmp
sbb
add
cltd
ljmp
roll
xchg
adc
mov
mov
add
cmpsb
xor
sub
mov
inc
cs
out
push
mov
inc
push
lods
mov
push
xor
xor
and
push
add
add
xor
je
jg
mov
mov
mov
jo
add
call
sti
test
scas
clc
fbstp
and
imul
jno
mov
addr16
adc
or
xchg
pop
mov
mov
nop
xchg
xchg
into
popl
xor
nop
xorb
mov
cld
mov
jecxz
mov
mov
mov
subb
addl
and
xchg
addl
lock
sahf
or
sbb
orl
push
int
sub
insl
sarl
inc
popl
mov
cmp
fsubs
negb
or
sub
mov
mov
or
test
cmp
pop
test
add
sbbb
adcl
cli
mov
mov
xorb
inc
jge
xchg
xchg
std
push
jnp
adcb
negb
inc
nop
sbb
decb
jle
sbb
lret
incl
popa
call
mov
pop
shrl
or
cmp
xchg
cmpsb
cld
shlb
mov
lds
adc
inc
mov
test
aam
inc
pop
lret
rcll
adc
cmp
pop
rolb
sbb
lcall
clc
stos
or
add
pop
je
loope
xchg
sahf
mov
and
addl
stos
push
sbb
adc
xor
lcall
add
movzbl
mov
inc
popl
add
inc
sub
inc
mov
inc
xor
lods
shlb
int
push
or
mov
scas
loop
stos
mov
inc
push
rorl
rol
test
xor
mov
inc
and
dec
loopne
and
stos
xchg
add
call
add
sti
adc
xchg
mov
add
rorb
shlb
stos
jbe
inc
push
push
testb
out
sahf
xchg
fcoml
push
mov
orb
xchg
add
jecxz
pop
inc
cmp
dec
sti
xchg
cs
stos
pop
shlb
movsl
cwtl
lcall
mov
ja
jns
add
jg
add
mov
cmp
data16
fs
jo
jo
or
mov
cmpsb
adc
add
sti
shr
pushl
and
dec
ret
dec
cmp
push
xchg
in
cmp
mov
pop
clc
jmp
add
outsb
inc
jg
ja
mov
xorb
call
jmp
adc
jmp
jge
sbb
movsb
add
and
xorb
mov
out
inc
dec
decl
mov
and
bound
jecxz
pop
sbb
pop
addl
pop
std
das
clc
test
dec
or
aaa
addl
add
pop
cld
xchg
std
sub
jl
xchg
fstpt
sub
shlb
sub
dec
lcall
ds
ret
push
xchg
or
mov
pop
pusha
add
inc
mov
or
loopne
bound
data16
popa
push
add
and
push
stos
ds
stos
mov
xchg
cwtl
call
add
sar
jmp
mov
and
lcall
xchg
adc
js
or
shlb
push
fs
popf
inc
lods
cmp
push
std
inc
add
mov
push
cmp
add
pushl
mov
mov
dec
std
scas
nop
mov
clc
pushl
jb
adc
xor
std
loop
dec
ret
lcall
mov
nop
mov
scas
cli
das
add
add
mov
mov
mov
add
lods
loopne
mov
repnz
sbb
inc
adc
inc
cmp
or
js
or
push
push
pop
xor
add
mov
lods
dec
cs
daa
adc
mov
cli
pop
push
and
inc
push
test
mov
fbld
lea
mov
fisttpl
std
mov
lcall
add
xor
cli
loope
mov
cwtl
cmp
or
mov
aam
jne
or
or
and
adc
dec
rclb
cmp
inc
add
add
sbb
inc
dec
pushl
or
mov
arpl
add
jae
rcll
or
std
pop
or
sub
xchg
pushf
sarl
and
xchg
xchg
popf
push
sub
lea
mov
or
mov
adc
add
clc
mov
dec
jle
jno
test
lock
lock
mov
jne
adc
sti
outsl
jmp
bound
push
lds
std
mov
push
scas
jg
outsl
rcl
xchg
xor
jb
arpl
or
mov
loopne,pn
leave
icebp
push
or
xor
mov
mov
pusha
mov
ja
add
stos
fwait
add
jb
icebp
cld
lcall
pop
test
jb
cmp
inc
mov
xor
or
call
inc
or
mov
add
push
push
push
ja
xor
or
inc
and
fwait
adc
xchg
push
cmpsb
xchg
jecxz
mov
lock
mov
push
incl
dec
and
loope
mov
adc
and
add
jg
mov
loop
mov
jo
xor
cmp
mov
push
sbb
adc
incb
xchg
mov
pusha
cli
addr16
pop
mov
mov
aam
fwait
loope
adc
imul
mov
xchg
cwtl
jecxz
scas
adc
add
pop
ljmp
imulb
pop
in
jmp
add
push
cmpsb
add
mov
xchg
add
and
xor
jecxz
adc
ret
xlat
add
sub
adc
mov
and
lcall
data16
orl
add
or
sbb
pop
mov
add
cmc
std
dec
js
loopne
or
test
mov
test
sbb
aad
add
test
lock
or
sbb
adc
mov
data16
xor
stos
mov
mov
sub
ss
pushf
xchg
mov
cmp
inc
ret
ljmp
pushl
nop
xchg
add
ljmp
xor
sbb
jecxz
std
mov
cwtl
dec
xchg
das
testb
adc
mov
ret
cmp
loope,pn
call
repnz
xchg
push
adc
or
jnp
ret
xchg
xor
cli
pop
lock
pushl
adc
pop
add
jl
ja
push
jg
and
outsl
negb
into
or
xor
repz
cmp
je
shll
mov
scas
xchg
mov
push
shll
addr16
ljmp
push
push
ljmp
push
pop
test
call
sbb
and
adc
xor
lea
xorb
and
pop
sub
test
repnz
pop
movsl
xchg
mov
dec
jo
aam
shrb
shlb
int3
scas
mov
cs
mov
aad
decl
fwait
adc
add
jge
mov
aas
add
adc
lahf
mov
jo
and
sbb
out
push
sarb
jp
jo
mov
jo
add
xor
xor
rcl
incl
test
cmp
add
pop
inc
add
inc
lret
dec
push
mov
aaa
pop
roll
add
clc
or
xchg
lods
xchg
lock
or
js
data16
push
pop
clc
divb
jb
push
add
jge
adcb
adc
push
sub
jle
clc
in
xchg
cltd
xchg
cwtl
and
fdivs
adc
sbb
sub
xor
mov
je
loop
or
push
dec
lods
xchg
pop
outsl
js
mov
and
mov
and
std
mov
enter
cli
and
nop
or
xchg
nop
xor
adc
or
sbb
addl
repnz
adc
mov
push
loop
icebp
or
orl
out
push
mov
mov
pop
add
pusha
out
dec
ss
xchg
mov
xor
mov
jp
dec
pop
shrl
fwait
xchg
fmuls
push
pop
push
pop
test
add
aam
in
push
jne
loopne
scas
mov
pop
loop
pop
mov
mov
and
push
push
adc
ds
xor
jb
les
outsl
je
adc
add
lods
lcall
mov
push
add
movsb
add
inc
mov
rorb
insb
add
xchg
lcall
pop
cmp
add
stos
xchg
mov
idivb
mov
xchg
or
sub
fiadds
add
mov
xor
cltd
push
sbb
mov
scas
movl
inc
xchg
test
push
mov
sub
das
clc
sbb
iret
orb
or
or
add
mov
fsubrl
jbe
mov
loope
xchg
mov
inc
stos
mov
mov
sub
add
mov
adc
mov
test
ret
cmp
lods
jb
nop
xor
push
fnstsw
cli
fadds
movb
jae
or
out
mov
clc
mov
mov
fists
pop
xor
mov
shlb
enter
add
add
jb
rclb
test
jmp
or
mov
mov
mov
cmp
push
xchg
add
jg
add
sbb
out
rcrb
or
lcall
int
sbb
xchg
mov
ret
rolb
inc
cld
add
movb
xor
jns
movsl
add
add
lock
push
pop
jbe
or
mov
popa
sarb
pop
mov
sbb
inc
xchg
lds
xchg
adc
or
sbbl
xchg
incl
iret
les
decl
mov
add
lods
adcb
add
mov
dec
xchg
sub
sbb
sbb
adc
test
call
mov
or
adc
inc
scas
xor
rorb
adc
mov
ret
pop
xor
cli
outsl
push
mov
mov
add
lods
loop
int
add
xor
cld
orb
out
mov
mov
cltd
add
sahf
fwait
fwait
xor
cltd
nop
sub
jbe
lcall
cmp
mov
or
divb
mov
fisttps
pop
enter
aad
cmpsl
fistl
bound
adc
pusha
fsubs
add
mov
mov
xchg
addb
leave
loope
mov
or
mov
insb
es
int
test
loopne
sbb
or
or
xchg
cltd
stos
and
arpl
mov
add
add
mov
cs
inc
rolb
dec
in
loop
fdiv
fildl
movsb
call
cmpsl
add
fs
into
rorl
adc
or
cmp
aad
mov
dec
add
out
clc
pop
pop
outsb
pushl
stos
or
aaa
sub
loopne
sbbb
rorl
dec
not
mov
test
mov
mov
sti
mov
pop
subl
orb
outsb
cmpsb
mov
enter
and
mov
incl
sbb
add
and
dec
aaa
mov
xchg
popf
cmp
cmc
incl
adc
cmpsb
add
or
sahf
push
sahf
and
call
dec
pop
and
and
loope
inc
punpcklbw
dec
call
add
mov
adc
adc
enter
sbbb
mov
ljmp
cmp
or
pop
lcall
rol
and
cs
xor
ljmp
and
call
cmpsb
or
ds
ljmp
bound
mov
loopne
sbb
mov
cld
lea
andb
dec
les
loopne
push
and
add
and
jne
ficoml
sub
push
cld
mov
inc
mov
add
adc
inc
repnz
push
inc
fs
mov
mov
rorb
mov
movsl
add
push
push
xchg
loop
mov
aaa
push
std
pusha
ja
sti
xchg
lcall
fnstsw
jg
sub
add
mov
jmp
mov
loopne
call
loope
add
loopne
jmp
in
int
incb
and
inc
xchg
repnz
sahf
popf
mov
fwait
add
push
mov
cmp
fwait
std
sbb
jbe
mov
inc
js
je
mov
adc
sti
lods
mov
data16
insb
loopne
std
jbe
aas
xchg
dec
inc
xor
dec
icebp
adc
rclb
nop
call
adc
sub
dec
lcall
nop
adc
add
clc
add
repz
lods
dec
sbb
add
sbb
jg
incl
cli
sbb
mov
cli
insb
out
add
stos
dec
adc
add
xchg
loopne
add
mov
inc
jo
out
divl
mov
std
xchg
aaa
cli
mov
xchg
add
jbe
mov
cmp
or
fisttpl
in
mov
fcomip
insl
xor
jmp
inc
out
les
ss
add
pop
adc
add
in
sub
mov
mov
decb
aam
push
cmp
mov
add
mov
pushl
out
jl
mov
sub
icebp
cli
jb
push
inc
mov
adc
cmp
mov
jge
mov
out
loopne
cmp
cmp
jg
test
inc
insb
push
mov
stos
fadd
jb
cli
pop
add
and
mov
adc
push
scas
mov
sbb
or
mov
xlat
out
call
out
sbb
cmp
aaa
pop
je
or
mov
push
xor
icebp
pop
add
out
cli
out
pop
mov
mov
mov
cmpsl
mov
add
lret
jg
inc
dec
adc
cmp
insl
movsl
decb
or
stos
pop
jae
sahf
jg,pn
add
daa
mov
add
push
push
mov
jmp
pop
aaa
mov
mov
jne
lods
lahf
cmp
test
xor
add
add
mov
cmc
sub
add
xchg
scas
pop
shlb
decl
jle
in
jl
sarb
lcall
cs
shrb
fdivrl
add
stos
push
sar
mov
stos
pop
dec
ss
cli
or
loopne
inc
enter
ror
inc
mov
inc
sub
shlb
or
jnp
mov
push
sbb
shlb
or
inc
imul
shrb
les
xchg
gs
shlb
inc
imul
sar
scas
fildl
fdivrl
sbb
push
je
rcrb
dec
lods
sub
mov
into
adc
jb
inc
insl
jp
push
pushl
pop
push
push
fcoms
addb
pop
sbb
cmpl
dec
loope
rcrl
add
ret
mov
out
pushf
fidivrl
jbe
jge
mov
push
andb
jns
scas
movsb
and
cmp
mov
data16
and
lds
out
sub
mov
pop
js
aas
test
and
dec
int
add
pusha
mov
rcr
mov
ror
add
mov
ljmp
cli
lods
push
xor
aas
and
cmp
popa
sbb
push
mov
outsb
ret
es
out
lcall
jo
stc
add
out
and
subb
cmc
ret
sub
sub
mov
daa
sub
add
test
add
incb
out
adcl
adc
cmp
dec
js
int
repz
sti
or
or
add
sub
sub
inc
outsl
pop
shrl
fs
and
jno
sub
stos
arpl
iret
fdivl
xchg
les
repnz
std
mov
pop
dec
movsl
sub
add
imul
adc
jno
scas
sub
mov
outsl
lods
push
jl
xor
testl
outsl
jg
ret
mov
dec
test
or
cmp
or
xchg
xor
lds
lcall
push
inc
icebp
out
paddd
or
addr16
and
cmpb
test
ret
pop
cmpsl
fmuls
insl
xchg
cmp
rolb
cmp
jnp
shll
movl
fildll
out
out
add
pop
test
pop
femms
pop
add
xchg
das
dec
cmpsb
fnstenv
push
arpl
push
and
test
sti
cmpsl
cmpl
addb
outsl
jae
ja
mov
xor
add
mov
popl
mov
out
jo
sub
xlat
inc
mov
fcmovnb
rol
lret
adc
mov
cld
int
stos
mov
mov
imul
or
pop
push
dec
and
cmp
xor
add
pop
decb
aaa
add
inc
shl
rcr
lret
rol
cld
int
adc
shll
roll
frstor
shll
dec
roll
fwait
mov
shrl
and
rcll
or
adc
shl
jmp
mulb
ror
mov
aam
shrb
inc
fwait
rclb
jae
push
mov
aaa
jg
pop
rclb
rol
shlb
sub
rcl
push
addl
add
sub
xor
lods
push
mov
sti
iret
repz
jmp
mov
iret
cld
int
test
iret
mov
stos
iret
mov
mov
sbb
int
jnp
jae
imul
pop
iret
push
iret
dec
iret
inc
cmp
xor
sub
and
iret
adc
or
add
into
repz
jmp
mov
fcmovne
repz
jg
ror
lret
into
into
mov
into
into
fwait
into
xchg
into
mov
jg
aaa
jg
jnp
jae
imul
pop
into
push
into
dec
into
into
cmp
xor
sub
aaa
jg
aaa
into
sbb
adc
or
into
sti
int
int
int
fcmovne
fwait
dec
popa
repz
lret
int
mov
out
mov
fwait
int
int
int
jnp
jae
imul
pop
int
out
out
dec
int
cmp
xor
sub
int
int
int
int
out
dec
sti
int3
repz
jmp
int3
fcmovne
ror
lret
int3
int3
mov
int3
popa
push
push
test
int
jle
int3
dec
int3
mov
cmp
xor
sub
int3
sbb
adc
or
fsts
sti
lret
repz
jmp
mov
fwait
lret
pop
push
mov
mov
fwait
ret
mov
pop
lret
push
lret
dec
lret
lret
cmp
mov
add
stc
jno
mov
fcmovne
ror
lret
lret
fwait
mov
lret
lret
xchg
jo
sub
jns
in
mov
cmpsb
jnp
cmp
xor
sub
mov
cld
int
cld
sbb
adc
or
lret
repz
jmp
leave
fcmovne
ror
lret
leave
test
and
outsl
xchg
leave
cmp
pusha
xor
inc
out
cmp
cmp
push
pusha
cmp
mov
inc
mov
shlb
add
xor
xor
loopne
test
inc
and
push
decb
loopne
das
xchg
les
jb
insb
les
push
mov
stos
insb
fsubs
adc
ret
and
ret
lds
ret
rcrl
dec
stc
lods
out
fwait
inc
ljmp
and
pop
jecxz
inc
lahf
hlt
mov
loopne
xor
cwtl
mov
iret
adcb
iret
pusha
iret
dec
iret
cmp
cmpsb
jo
xchg
mov
aaa
fwait
ret
and
into
int3
xchg
or
ret
pop
sub
rclb
add
hlt
lret
subb
loop
and
pushl
and
lretw
lret
push
lret
and
ds
push
fwait
dec
loope
adc
push
lret
cli
leave
add
add
mov
xor
das
leave
sub
and
leave
push
test
adc
or
fmul
add
fsts
xchg
add
push
cwtl
dec
adc
icebp
int3
mov
or
movsb
popf
xchg
adc
push
sbb
add
push
mov
push
xchg
les
les
les
out
adc
scas
xchg
push
adc
dec
int
rcr
stos
add
and
add
adc
cld
fcmovnb
outsl
and
ret
cmp
jns
add
std
rcrl
mov
pop
js
add
ja
insl
shlb
push
pusha
xor
pusha
pop
add
int
int3
push
int3
cmp
shl
or
dec
mov
xor
jg
pop
leave
push
leave
subb
sbb
push
pusha
lcall
dec
ss
loope
push
clc
mov
mov
dec
mov
rol
les
fcomip
aaa
stc
ret
mov
inc
ret
das
ret
sub
test
xchg
outsb
lds
dec
ffreep
enter
sarl
loopne
sbb
rorl
rorl
mov
lret
or
mov
loopne
add
call
in
lods
into
xchg
jo
imul
sbb
mov
int
fmul
mov
or
pop
out
das
clc
loopne
add
enter
xchg
dec
push
les
mov
les
les
cmp
ret
add
out
ret
ret
fcomip
jbe
lret
and
outsl
cmpsl
pusha
or
cmp
es
cld
pushl
mov
and
lret
mov
and
or
mov
leave
lods
enter
jg
push
cld
bswap
mul
push
sub
es
sbb
add
in
scas
xchg
arpl
and
lahf
ret
pop
pusha
sub
xor
pop
cmp
add
mov
mov
pop
loopnew
movsl
iret
push
pop
loopne
iret
pop
into
pop
iret
ss
daa
iret
or
jb
dec
into
and
pop
and
into
add
mov
int
int3
inc
pusha
cs
adc
aad
cmpsb
ss
lret
adc
lret
stos
lock
jg
jl
lret
push
test
lret
jge
pusha
dec
in
test
sub
mov
test
mov
and
stos
jg
jmp
jecxz
fistl
rol
lret
and
sub
sub
and
push
lds
mov
les
les
lock
fadd
mov
mov
xor
sub
pushl
cmp
dec
xor
mov
xor
iret
adc
rcll
mov
add
data16
dec
into
and
add
jecxz
popf
mov
int3
pusha
adc
inc
rcr
hlt
dec
adc
lret
das
lret
imul
out
leave
in
ret
cmpsb
jg
mov
xchg
leave
add
enter
enter
enter
push
fdivr
int
mov
xchg
enter
outsl
and
push
enter
incl
inc
enter
mov
stos
les
ret
ljmp
shll
mov
mov
jae
or
ret
sti
clc
mov
ret
addps
xor
sub
inc
insb
mov
ljmp
iret
scas
iret
mov
xchg
into
inc
add
scas
int
int
int
add
or
int3
insl
int3
cmp
std
ljmp
dec
cmp
and
leave
out
mov
jp
js
leave
ror
andb
idivb
cmp
leave
adc
pop
out
enter
enter
adc
push
push
ficompl
push
cli
push
mov
xchg
add
lds
cmp
adc
fcmovnb
into
xchg
std
mov
pop
in
ret
mov
adc
push
mov
shlb
cld
stos
mov
sbb
iret
mov
pushl
repnz
mov
test
int
notb
lret
and
leave
clc
fwait
dec
leave
jg
enter
jo
jno
pop
les
les
sbb
xor
or
test
or
sti
ud0
xor
ror
lret
enter
mov
ret
clc
decl
ret
mov
repz
and
iret
or
jo
enter
ljmp
rcl
lds
les
sahf
test
xchg
adc
incb
mov
pop
daa
mov
mov
rorb
push
jo
or
lret
jg
dec
or
mov
mov
lret
jl
dec
je
and
lret
push
pusha
lret
pop
nop
dec
push
sub
lret
inc
lret
cmp
xor
adc
lret
and
lret
in
lock
xor
dec
add
cld
leave
clc
leave
hlt
leave
lock
dec
and
mov
or
leave
in
dec
fmul
fsubrs
aam
push
int3
leave
dec
out
mov
mov
adc
leave
movsb
outsb
jbe
mov
xchg
adc
leave
test
leave
add
in
scas
fmuls
leave
cld
or
enter
enter
enter
enter
enter
enter
mov
out
decb
mov
mov
lods
test
movsb
enter
dec
cwtl
enter
enter
test
enter
push
or
enter
enter
enter
enter
add
andl
dec
lds
mov
gs
js
mov
call
sti
jmp
aad
iret
adc
into
xchg
into
sbbl
mov
adc
into
cwtl
in
int
adc
int
int
xor
push
push
int3
jb
or
lahf
and
push
int3
cmp
cmp
int3
mov
lret
push
dec
xor
lret
and
cli
pop
mov
enter
enter
xor
std
mov
or
xor
adc
mov
jne
push
les
aaa
pop
hlt
les
jmp
nop
jge
je
push
int
test
hlt
or
in
shl
nop
ret
dec
inc
sub
push
ret
mov
rcl
xchg
cmp
pop
nop
insl
and
mov
mov
fbld
adc
insb
into
iret
ror
iret
cld
inc
inc
ljmp
cmp
add
leave
movsl
into
xchg
into
or
pop
xchg
lods
adc
fcmovne
or
outsl
lret
pop
lret
inc
jo
or
lock
or
pop
icebp
jg
lret
mov
or
sbb
add
leave
icebp
leave
ljmp
decl
cmp
mov
inc
lock
movl
mov
xchg
mov
test
adcl
jnp
jne
insl
push
sbb
adc
fbld
inc
out
lds
enter
imul
int
mov
mov
dec
les
les
les
mov
push
ret
add
repnz
and
shll
lcall
adc
iret
jae
std
add
rclb
iret
data16
mov
movsl
jp
into
pusha
into
cmp
into
aam
rclb
decl
dec
int
int3
roll
lock
jg
js
pop
int3
push
test
or
xchg
popa
lret
pop
lret
xor
ret
lret
and
idiv
mov
ljmp
mov
movb
lds
jge
sti
lcall
and
les
les
push
pop
cmc
cld
ret
test
add
dec
mov
xor
stos
ljmp
pop
ret
push
ret
dec
push
shlb
ret
sbb
sbb
or
add
mov
ret
shlb
push
ret
ror
movsb
shrb
cmc
inc
inc
adc
sbb
jb
jg
clc
into
call
ror
add
push
ret
pushl
into
mov
ret
nop
and
lds
sbb
push
into
or
into
stc
adc
aad
or
int
int
int
int
int
int
xor
pop
andb
int3
imul
lret
fdivs
cli
dec
movb
push
lret
cmc
lret
ljmp
jecxz
cli
mov
bound
lret
xchg
jge
xchg
xor
enter
mov
testb
cld
lds
stc
les
inc
les
sar
inc
ret
and
push
sar
incb
jo
outsb
xchg
test
add
jp
dec
lret
mov
push
leave
out
enter
add
pushl
lods
movsb
lahf
jo
adc
adc
rclb
je
fldt
cld
cmp
sub
sti
pop
sub
dec
lds
lret
sahf
cmpsl
ret
loop
incl
push
ret
into
inc
ret
test
ret
sbb
adc
add
outsb
adc
sub
shlb
iret
sbb
sub
jbe
int
adc
mov
enter
mov
pop
int3
cli
cmp
lret
test
add
jno
sub
loope
xchg
and
ffreep
inc
lods
lds
pop
stos
push
dec
nop
ret
jg
xchg
ret
ret
notl
dec
sahf
decb
loope
jmp
ljmp
icebp
push
cmp
xor
into
or
mov
mov
rcrb
into
and
sbb
icebp
push
ror
and
dec
mov
icebp
mov
int
int
int
adc
jmp
fnsave
movsl
lret
mov
xchg
aaa
lods
lret
aam
jo
fadds
cmp
vmaxpd
mov
cmp
lds
adc
dec
lds
sub
call
pop
les
mov
les
jno
ret
mov
push
push
cvtpi2ps
mov
cmp
ret
xchg
mov
cmpsb
mov
ret
jno
addr16
dec
add
ret
or
ja
or
sub
enter
mov
jbe
popa
rcll
inc
fbld
rcl
lock
int
test
add
sub
outsl
mov
hlt
ljmp
iret
ret
mov
sahf
iret
shrb
rorb
iret
jne
imul
test
add
mov
es
int
scas
test
pushl
fwait
dec
add
xor
jo
clc
mov
push
sbbl
xchg
push
lret
jne
pop
dec
push
mov
scas
inc
pop
test
jo
cltd
leave
jns
leave
popf
mov
mov
push
cmp
add
enter
enter
push
sbb
mov
adc
in
iret
mov
ja
pop
adc
mov
adc
rol
cmp
add
or
lds
lds
clc
push
rol
call
pushf
mov
out
les
add
ret
mov
adc
pop
fistl
mov
push
ljmp
ret
testb
test
jns
scas
imul
ret
push
ret
sub
call
mov
adc
shr
scas
rcrl
aam
sti
out
sbb
add
shlb
inc
shlb
ja
leave
mov
xchg
push
xor
xor
iret
das
jne
mov
movsb
mov
loop
jge
push
inc
into
aas
adc
into
mov
push
add
into
sbb
aaa
push
jne
or
add
int
int
mov
mov
adc
int
int
adc
call
imul
aam
adc
out
int
int
int
or
add
std
int3
lret
mov
scas
int3
cmpsl
int3
xchg
and
mov
dec
clc
test
jo
es
add
cli
add
stc
fwait
mov
adc
lret
mov
lret
pop
shrb
push
mov
lret
lret
leave
inc
stos
xchg
xchg
adc
hlt
es
outsb
or
add
dec
fsubrl
hlt
sub
leave
add
leave
fisubrl
adc
test
adcb
adc
leave
ds
pop
leave
sbb
cmpb
sbb
enter
call
enter
and
sarl
lea
adc
addr16
push
mov
es
daa
adc
or
out
shrb
subl
movsb
add
mov
lds
andb
les
in
cld
in
outsl
fcmovb
mov
jp
insl
ret
xor
sub
adc
or
add
sbb
fcomip
shr
aad
lret
shll
movsl
cmp
mov
and
adc
inc
dec
mov
idiv
add
decb
lods
iret
popf
sub
jb
and
iret
or
test
xchg
faddl
cs
push
xchg
into
hlt
int
lods
je
int
hlt
in
sub
inc
int
adc
int3
aad
into
popa
mov
test
outsb
int3
pop
int3
dec
adc
icebp
or
int
mov
jns
add
aam
ja
bound
mov
lret
mov
lds
ret
or
jecxz
sbb
addl
cmp
mov
xor
add
cmpsl
mov
add
iret
sub
lcall
ljmp
into
and
into
stos
into
insb
inc
jg
into
add
inc
jbe
or
in
int3
movsl
fadds
pop
fs
aam
lds
add
fcomip
ret
pop
ret
mov
jg
sub
xlat
rol
sbbb
das
mov
mov
or
xchg
add
addr16
mov
pop
cld
in
arpl
cmp
add
push
lret
mov
lret
dec
lret
fwait
mov
cmp
adc
lret
sub
es
outsl
pop
test
lret
dec
or
push
sub
shlb
push
jg
inc
js
js
leave
and
leave
loop
inc
jp
hlt
outsl
sbb
into
mov
mov
mov
mov
scas
leave
stos
leave
sub
sahf
leave
divb
leave
mov
mov
xchg
or
adc
jbe
jb
outsb
rorl
leave
leave
pop
leave
add
test
jge
cld
int
dec
enter
sbb
jnp
jno
rclb
push
cld
es
or
jae
and
xor
pop
std
add
fbstp
fadd
rol
imul
les
adc
jmp
mov
ret
les
movsl
xchg
call
jnp
jae
outsb
ret
pop
adc
dec
ret
inc
ret
ds
add
repz
icebp
pop
add
ret
lret
ret
mov
ret
or
mov
test
or
outsb
rcll
mov
mov
xor
xor
iret
pop
xor
into
lret
loopne
pop
mov
int3
loopne
aad
arpl
lret
cli
clc
dec
pop
jecxz
and
mov
mov
lret
and
out
call
popf
xor
add
stc
jg
decl
mov
jmp
fstpl
int
pop
add
movb
mov
xor
or
mov
mov
lds
inc
loope
and
cmp
mov
sbb
ret
sar
inc
lods
ret
cltd
pusha
sbb
and
lock
sbb
nop
mov
ret
std
dec
push
jg
ret
fcmovb
mov
cmc
sbb
mov
outsb
xchg
cli
mov
aaa
xchg
mov
push
sbb
iret
jg
adc
xchg
fcmovne
iret
int3
jns
push
cld
aaa
jno
ds
adc
fmul
mov
leave
repz
cmp
or
nop
test
mov
clc
mov
jae
jp
mov
sti
ret
insb
jmp
loope
sub
ret
push
loopne
bnd
loopne
cmpsb
ret
bsr
xorb
and
inc
pusha
cltd
inc
mov
push
movsb
pop
jl
loopne
insb
lock
outsl
dec
pop
mov
int3
push
mov
ror
push
fs
or
lret
cmp
cmp
xor
sub
imull
lret
lret
lret
mov
ljmp
or
leave
fistl
mov
adc
enter
fildll
inc
enter
stos
pushf
mov
mov
mov
sahf
sbb
inc
jae
pop
cmp
sub
in
test
mov
mov
inc
js
push
add
adc
hlt
les
add
inc
fldcw
push
lock
in
ret
aam
lret
hlt
out
ffreep
aam
mov
test
fldt
arpl
pop
mov
ret
or
pusha
outsb
ret
cld
call
movsl
xchg
sahf
inc
adc
cmp
sub
and
pusha
mov
sub
test
out
shlw
xchg
rcll
sbb
shl
out
std
add
sub
mov
dec
iret
jle
pusha
sub
into
lds
cmp
int
int3
inc
int3
mov
mov
xchg
fchs
cmpsb
in
aad
jp
jbe
lret
call
leave
scas
push
mov
ljmp
in
pop
stc
add
out
pusha
iret
inc
mov
lds
lds
pop
mov
jl
shl
out
cli
pop
mov
jb
and
push
shll
pop
loope
fisttps
les
xchg
fimuls
rcl
iret
push
iret
and
or
into
mov
dec
into
sbb
rcrb
test
jp
sub
ljmp
out
xchg
mov
inc
int3
xor
repnz
mov
mov
lods
lret
sahf
lret
xchg
pusha
adc
fsubr
popa
or
ljmp
scas
pop
in
sahf
fadds
lret
jmp
aaa
dec
fsubs
mov
adc
enter
enter
enter
or
dec
add
dec
lods
mov
xchg
pop
lds
aad
xor
cwtl
ret
adc
sub
and
jns
or
pusha
test
int
ds
sub
jmp
test
inc
xor
mov
dec
mov
push
pop
int
call
enter
in
cmp
rolb
mov
pop
lock
sahf
adc
fcmovb
shlb
add
sarb
or
loopne
push
fwait
aad
iret
incl
sub
iret
lods
iret
cmpsl
add
mov
loopne
cwtl
jb
push
iret
mov
test
mov
inc
iret
imul
decl
pop
adc
push
bound
dec
iret
inc
iret
ds
push
push
xor
jbe
nop
pop
and
cmp
push
sub
iret
or
pop
fdivr
cmp
out
add
jmp
into
fidivrl
add
aad
shlb
mov
inc
sti
inc
into
lods
into
test
mov
xchg
into
into
mov
test
addb
lcall
add
pop
addr16
into
pop
into
pop
xor
dec
xor
into
sbb
mov
and
sbb
icebp
lcall
pop
push
sbb
jnp
into
adc
stc
int
xor
int
js
in
cmp
int
add
int3
rcrb
int
int
and
int
int
int
push
int
idiv
lcall
nop
jo
test
push
arpl
jl
cmp
int
int
int
mov
cs
add
jle
cli
push
jge
int
xchg
int3
inc
lret
cs
daa
movsb
scas
clc
sub
leave
xor
das
shlb
stos
xchg
pop
enter
in
jge
repz
and
or
ljmp
je
loope
ret
ja
or
ja
js
sub
pusha
roll
es
movsb
stos
lock
cmp
iret
dec
into
mov
ljmp
cmp
jo
push
xchg
int
int
int3
add
adc
lret
nop
lret
ds
jp
sti
inc
fimull
clc
rcl
enter
cmpsl
jle
scas
jp
mov
je
pop
lods
jo
add
test
push
xor
ja
insb
mov
add
into
outsl
xchg
xchg
rclb
std
dec
lock
jecxz
or
test
dec
scas
lret
add
out
lcall
leave
dec
leave
or
sbb
addb
push
call
cld
enter
loopne
ret
movb
cmpsb
lds
inc
lds
adc
ret
jl
pop
add
ret
pushl
ret
icebp
sub
notb
into
int
xor
or
dec
ljmp
popa
int
int3
push
int3
add
xor
dec
adc
aaa
add
cmp
sarb
push
insb
cmp
cmp
les
or
add
mov
jnp
jg
mov
mov
sbb
cmp
nop
adc
in
std
ljmp
mov
outsl
adc
dec
xor
sub
adc
aam
pop
test
push
adc
cmp
or
mov
ljmp
jbe
push
lds
adc
jmp
mov
scas
adc
in
ret
mov
ret
scas
add
mov
adc
push
movsb
lods
roll
xor
shl
mov
js
pop
pushf
sbb
xor
dec
cmp
iret
fmul
mov
addr16
xchg
nop
aaa
sub
rclb
mov
dec
jnp
lahf
clc
add
loop
mov
inc
lret
jle
jb
xchg
bound
xor
out
xchg
into
sub
mov
xor
sbb
mov
inc
stc
in
in
ret
pop
add
shl
fs
mov
mov
adc
rorb
je
jg
add
pusha
and
rorb
sarb
xor
add
pop
es
lock
into
pop
cmp
rorb
sbb
inc
shrb
int
mov
pop
addr16
mov
xor
mov
cs
int3
mov
int3
outsl
mov
fisttps
xor
inc
int3
inc
aas
das
int3
addb
mov
mov
fwait
adc
xor
outsl
jg
jo
cmp
sbb
lock
jmp
add
xor
decb
rcr
or
imul
adc
add
and
push
sub
lret
adc
fisttps
add
lret
jp
decl
add
jo
sti
leave
add
xor
aaa
adc
fwait
leave
mov
jnp
imul
pop
push
sub
mov
adc
bswap
or
pop
rcr
pop
leave
add
dec
sti
outsb
repz
enter
shlb
cli
jecxz
fisttpl
enter
add
mov
enter
enter
std
mov
xchg
and
enter
enter
or
enter
add
cld
incl
lahf
adc
pushf
mov
cld
add
ret
mov
jmp
cmp
mov
test
cli
xchg
add
push
and
outsl
xor
loop
inc
fsubl
je
push
std
dec
push
add
lret
stos
or
icebp
mov
call
je
shll
adc
jmp
lods
clc
cmpsb
mov
mov
mov
cmpsb
sahf
movsl
jle
jmp
testb
inc
ljmp
je
dec
inc
jg
inc
mov
inc
add
or
ss
mov
in
scas
lods
mov
aaa
jecxz
movsl
or
push
sub
inc
add
xor
add
inc
mov
dec
pop
adc
mov
add
add
ljmp
incb
inc
dec
test
adc
jl
jg
cmp
xor
and
add
in
or
mov
add
ljmp
mov
cld
jle
jg
cli
fistpll
add
push
and
push
fistl
mov
sbb
and
add
arpl
xchg
jno
dec
add
fcomps
fsubrp
xor
mov
mov
xor
inc
cmpsb
mov
arpl
lahf
adcb
outsb
inc
xor
fcmovnu
hlt
rorb
pop
pushf
stc
test
pushl
push
adc
insl
mov
cmp
push
jl
insb
hlt
inc
mov
pop
push
mov
mov
in
push
pop
add
cmpsl
test
pop
outsl
mov
mov
hlt
popf
rcl
insl
js
jo
cli
cmp
pushl
pop
pop
in
lret
sub
jo
out
fldt
in
das
xchg
pushf
je
lret
sub
pop
mov
jle
incl
push
cmc
dec
add
dec
cs
into
outsl
jp
mov
inc
in
lea
add
ja
push
cld
jae
sub
daa
test
pop
insl
or
or
push
subb
pop
fwait
and
xor
mov
mov
arpl
inc
adc
xchg
sub
test
cld
push
sbb
push
inc
insb
cmp
xchg
fidivs
add
loop
jno
fsubl
imul
lcall
inc
js
add
lcall
add
jmp
jg
push
or
dec
pop
fiadds
das
js
test
mov
gs
std
adc
pop
dec
sbb
popf
aam
lcall
lret
inc
in
xor
or
std
add
sub
fidivs
xchg
lds
je
mov
cld
or
cmp
aad
pop
scas
and
cld
je
decl
and
xor
arpl
icebp
adc
pop
testl
xor
and
movl
and
aaa
and
out
pop
mov
mov
push
int3
mov
pop
inc
mov
cmp
call
pop
dec
xchg
ror
push
mov
or
inc
pusha
rcpps
imul
dec
dec
or
ljmp
push
jl
call
into
and
cs
out
and
dec
jbe
rolb
fstpl
data16
ss
mov
mov
popa
push
les
mov
in
sub
mov
jbe
call
adc
stos
sbb
push
sub
pop
sub
ss
fidivs
or
das
dec
std
outsl
dec
es
inc
pop
outsb
mov
sub
sbbl
stos
mov
les
dec
iret
or
adc
lahf
in
or
jmp
cli
sub
pushl
push
or
jge
mov
push
mov
mov
sub
sbb
aas
push
fnstenv
xchg
ss
pushl
std
inc
inc
sarl
ret
push
aad
jnp
je
cltd
and
cli
xchg
pushl
lahf
push
inc
mov
outsl
shrb
xchg
sub
adc
mov
fiadds
jmp
jns
mov
sub
fyl2xp1
xor
jae
sbb
dec
pop
cmp
sub
mov
cmp
add
lods
hlt
arpl
jae
mov
clc
mov
and
xchg
int
push
pushl
insl
mov
xchg
adc
jne
pop
jge
cwtl
xchg
pop
gs
mov
loope
leave
pop
xchg
std
decl
jecxz
mov
fidivl
sarl
cmpsl
in
lds
jno
and
push
movsb
fxch
pushl
add
pop
pop
mov
aam
mov
loop
dec
out
hlt
dec
loop
xchg
mov
out
fimull
hlt
lret
test
push
xor
int3
jge
dec
sahf
dec
call
lea
sub
jecxz
xchg
sub
out
push
jecxz
mov
xchg
jg
js
ljmp
test
call
loop
sub
adcl
fcomip
jmp
push
into
dec
mov
jmp
nop
push
movsb
mov
mov
adc
ds
js
stos
pop
cmp
push
jnp
fld1
cmp
ret
loope
sbb
inc
bound
or
pushl
or
inc
push
test
mov
fsubr
pushf
mov
in
pop
or
jmp
aas
jle
imulb
mov
xor
pop
xchg
call
ljmp
cmc
fnstsw
ret
xchg
adcb
pop
and
out
cli
outsb
enter
mov
sahf
xchg
rcl
cmpsb
xor
cmpb
cmp
repnz
call
fcomip
xor
movsl
jo
cmp
cmp
test
jbe
sti
pushl
jno
icebp
sbbb
popf
jns
push
or
test
xor
jg
out
scas
out
pop
mov
popa
mov
ret
sbb
test
sbb
rcr
in
add
pushf
jg
call
jbe
add
xchg
or
aad
pop
popf
repz
mov
inc
sub
inc
and
push
nop
scas
add
jae
cmp
jle
adc
out
popa
shl
dec
nop
lret
movsb
clc
mov
xchg
or
movsb
push
adcl
divl
sar
fcoms
cmp
loop
mov
mov
and
push
or
inc
or
adc
repz
xor
mov
in
sub
sbb
xchg
in
xor
inc
or
and
inc
xor
insl
push
or
jg
scas
fimuls
add
jmp
clc
inc
dec
add
mov
lret
sub
addr16
inc
in
mov
test
fbld
enter
mov
decb
and
int3
sub
push
mov
add
lea
clc
incl
shl
fcoml
dec
pop
adc
mov
cmp
aad
sbb
pop
cmpsb
subb
in
in
out
dec
xor
call
popf
cs
fisubl
lcall
arpl
adc
clc
cltd
lea
in
mov
pop
dec
adcb
lahf
mov
xor
jmp
movb
insb
dec
sub
dec
icebp
test
jle
jae
lods
sub
ret
push
jnp
pop
mov
imul
mov
dec
int
outsl
jg
or
cld
mov
ror
call
pop
arpl
sub
or
dec
dec
in
insl
jno
jno
pop
mov
cmp
mov
sbb
stc
jb
movsb
add
mov
nop
xchg
xchg
rorb
mov
cmp
stos
jge
lock
jbe
aam
ss
adcl
lods
lcall
push
popf
push
jg
arpl
pop
push
ds
add
popa
push
shlb
xchg
dec
lcall
call
and
data16
inc
mov
stos
ljmp
xor
lds
jg
inc
jmp
mov
mov
mov
adc
int3
flds
dec
pop
icebp
fnstenv
push
add
addr16
push
dec
je
xor
cmp
cmp
push
jae
mov
fcmovb
mov
push
imul
js
leave
icebp
and
adc
sub
and
or
fdivl
mov
ljmp
jmp
mov
and
fdiv
fwait
and
mov
sub
adc
cmpl
stos
mov
lea
lods
xor
mov
cmp
decl
popf
stos
xchg
inc
clc
mov
pop
inc
movsb
clc
in
mov
and
or
xor
ljmp
shll
fnstcw
int3
dec
cwtl
lds
test
repnz
fmull
daa
cmpsb
jl
cmp
sbb
call
orl
roll
out
outsl
pop
inc
cmpsb
repz
add
inc
movsl
call
inc
mov
repz
pop
ds
xchg
fsts
push
movsl
jecxz
in
xchg
aam
dec
js
shlb
mov
in
xor
jo
in
jo
jnp
call
dec
fcmovne
pop
or
mov
divl
das
shrl
lods
sarl
jle,pn
aam
lea
pushl
or
mov
pop
pop
push
jmp
int3
sub
repnz
push
lcall
outsl
jne
shlb
loop
mov
mov
cmp
mov
jp
mov
ljmp
sbb
mov
mov
popa
cltd
push
fcmovnu
pop
mov
inc
or
cmpsb
repnz
mov
std
xor
movsb
aas
push
pop
shrb
aas
dec
inc
adc
pop
add
push
lret
dec
pusha
movsl
xchg
movsb
pop
cmp
call
mov
sub
pop
xor
push
xchg
push
mov
not
fdivrp
jg
pop
lods
push
cmp
je
pop
iret
inc
mov
inc
and
pop
mov
call
clc
dec
hlt
fistpl
out
ljmp
or
in
or
cmp
inc
pushf
mov
sbb
sub
cld
xchg
jns
popf
mov
sbb
sar
bound
cmc
mov
pop
dec
aad
incl
sbb
test
lods
jmp
fsubs
push
sbb
and
sbb
sbb
xchg
cmp
inc
pop
shrb
aaa
std
call
jecxz
jb
xchg
cli
js
sbb
push
int3
xlat
arpl
push
push
jg
jmp
xchg
dec
ds
sub
aad
outsb
sub
ss
incl
lret
aam
sub
rcll
test
cmp
imull
mov
add
mov
icebp
sub
add
out
add
and
loopne
xor
aad
repnz
pushf
pop
pop
dec
repz
push
testb
lds
and
mov
and
sub
insl
adc
incl
lret
cmp
mov
fisubl
out
add
lock
jnp
call
jmp
or
mov
aas
insb
dec
or
adc
loop
fldenv
aaa
cld
push
orb
mov
add
push
daa
pinsrw
dec
mov
call
leave
dec
inc
push
stos
xchg
das
push
ret
insb
jp
xchg
loop
icebp
push
outsb
xor
pop
mov
sub
inc
stc
xchg
scas
xor
add
lods
leave
into
das
push
jmp
push
add
push
stos
out
pop
sub
std
pop
loopne
testl
outsb
shrb
mov
popf
push
push
popa
ret
sahf
adc
call
divl
int
out
dec
fbld
cmc
push
insb
or
test
dec
sub
stos
mov
push
lcall
sbb
addr16
bound
imulb
mov
lods
ret
js
cmp
pop
or
xchg
iret
cld
iret
jae
jg
mov
jo
jle
enter
jp
sub
xorb
mov
mov
andl
popf
pop
xor
fldcw
pop
ffreep
mov
decl
xor
pop
mov
sti
popf
sub
jl
loope
sahf
cltd
daa
test
in
push
jge
mov
adc
pop
testb
push
mov
and
sbb
popa
mov
lcall
or
push
pop
xchg
and
addr16
or
int
jo
xlat
std
cmp
inc
popa
push
leave
sbb
movsl
xor
or
scas
rcrl
mov
mov
dec
out
mov
fisubl
mov
sbb
xchg
std
jb
xor
mov
pushl
ja
out
cmp
adc
sub
inc
xchg
loopne
sbb
fiadds
arpl
jmp
mov
pop
mov
pop
bound
pop
xchg
adc
mov
in
dec
je
mov
loopne
jnp
rclb
sub
inc
cmp
xchg
mov
ljmp
and
fstps
clc
push
test
push
jmp
test
jp
sarl
incl
dec
xor
aad
xor
mov
sub
ljmp
cmp
ljmp
fstl
sub
loope
lret
adc
imul
aas
incl
nop
lahf
dec
int3
push
xchg
mov
in
jmp
pop
nop
repnz
int
es
ja
test
pop
stos
fnsave
jmp
ljmp
mov
addl
mov
xor
sub
sbb
dec
mov
or
adc
cmc
loope
loope
mov
fiaddl
pop
xorb
pop
cld
repnz
or
mov
clc
adc
jmp
pusha
push
addr16
mov
cmp
aas
cld
repz
pop
lcall
push
popf
xchg
outsl
jge
adc
or
add
add
idivb
lods
cmpsl
push
jmp
push
aam
push
cld
pop
sti
pop
mov
xor
mov
sub
mov
mov
ds
pop
push
jbe
and
mov
cld
lds
popf
decl
xchg
pushf
cmpsl
fisubrl
and
shll
pop
js
daa
inc
jge
das
push
repz
dec
mov
pop
gs
jb
mov
adc
xchg
shr
mov
xchg
push
insb
ret
lret
xchg
aaa
loopne
push
cmpsl
js
lcall
inc
mov
out
mov
or
xlat
pusha
push
xor
sbbb
rolb
pop
dec
cli
jg
inc
arpl
dec
fs
push
rcll
ljmp
enter
jne
inc
or
mov
jl
in
insb
test
pushl
loope
sbb
mov
fwait
sar
cli
cmp
mov
sarl
fisubl
mov
sarb
stos
insb
cld
xchg
leave
sbb
and
stos
pop
adc
stos
test
fwait
pushl
sub
adc
fwait
xlat
shll
add
push
in
cs
and
inc
push
cmp
add
push
fsubrp
daa
adc
in
and
mov
test
imul
lret
push
adc
push
jg
not
cmp
cmp
in
incl
es
jo
mov
dec
jp
pop
lcall
test
pop
dec
adc
xlat
inc
add
mov
push
xchg
xor
push
repz
adc
fcoms
iret
mov
cs
jne
sbb
imul
iret
int
incl
add
imul
into
repnz
aaa
ss
stc
movsl
xchg
aad
daa
xor
decl
popf
outsb
add
mov
or
mov
in
loop
lea
push
and
fbstp
jae
push
mov
imul
cmp
sub
mov
das
pxor
std
out
clc
out
in
sarb
sti
push
jne
jmp
push
xor
out
pop
xlat
cmp
stos
notb
cmp
push
xchg
ds
jp
pop
movsl
inc
rcll
fiaddl
cli
add
adc
lods
into
shll
mov
cmp
cmp
push
cmpsb
fcmovne
aaa
stc
adc
jmp
push
push
dec
and
ficoml
xchg
and
in
push
out
fisttpl
aam
or
lcall
pop
cmp
scas
in
add
addr16
out
out
cli
ljmp
lcall
mov
xor
pusha
clc
jmp
enter
mov
xor
xorl
out
inc
ljmp
inc
add
cmp
mov
mov
sbb
and
ljmp
push
push
imul
mov
faddl
cmp
dec
gs
dec
or
loope
sarl
jl
mov
imul
scas
scas
cltd
push
iret
dec
dec
inc
mov
call
xchg
bt
insl
cwtl
repnz
sbb
xor
pop
mov
movsl
nop
dec
popf
incl
mov
add
pop
cmp
push
pop
pop
movb
ljmp
pop
stos
push
mov
sub
cld
loop
dec
iret
mov
cmpsb
dec
xor
mov
mov
mov
fcmovu
aas
adc
cmc
cli
shlb
in
mov
jo
and
lret
sub
push
nop
push
mov
push
fsubrl
aas
and
aaa
std
call
push
mov
shlb
xchg
xchg
test
or
jmp
fdivrl
cld
and
mov
mov
test
daa
add
mov
sub
add
pusha
or
or
rcrl
cli
lahf
psrld
jne
pop
incl
lods
fcoml
or
stos
fisubrs
faddp
push
pop
jae
pop
cmp
rcrb
cltd
repz
outsl
cli
call
dec
mov
jnp
andb
sbb
sti
loop
mov
sbb
stc
idiv
call
ljmp
or
rcr
in
mov
scas
or
inc
pop
ret
mov
sub
call
and
mov
adc
sub
pop
mov
call
add
orb
add
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
fwait
add
add
add
adc
add
add
xorl
and
adc
inc
push
add
add
add
push
inc
outsl
mov
push
enter
gs
imul
popa
je
inc
imul
outsb
addr16
dec
and
inc
cs
in
fldt
inc
gs
jne
add
insl
jo
je
outsl
outsb
push
je
in
out
aas
insb
jne
jno
jb
arpl
jae
push
inc
jne
sub
mov
out
je
push
es
jne
fs
jns
push
outsl
push
imul
push
arpl
jbe
push
inc
je
push
dec
add
imul
lret
arpl
fneni(8087
push
push
popa
imul
dec
bound
pop
inc
sbb
notb
push
push
into
or
shrb
push
fs
repz
jae
outsl
jnp
xor
dec
imul
imul
popa
insb
inc
je
pop
inc
insb
in
test
std
sub
push
jns
dec
insl
push
imul
sbb
push
add
jns
inc
jae
jb
leave
cld
cmp
lret
into
sub
popaw
inc
sub
orl
inc
inc
and
rcr
subl
insb
ret
jns
pop
xchg
jmp
push
sbb
or
pop
cmp
push
je
jo
test
push
inc
pop
ja
mov
cld
daa
push
jo
outsb
fs
outsb
push
inc
mov
add
outsb
insl
scas
fcmovb
fs
test
add
add
sbb
mov
test
and
inc
daa
and
adc
mov
addr16
mov
mov
push
and
loopne
movsl
mov
adcb
or
aam
out
cmp
mov
dec
inc
test
sub
sub
inc
push
or
fstl
push
popa
adc
push
andb
and
mov
adc
mov
add
rclb
mov
aam
sub
jg
cmp
ret
repz
push
or
inc
gs
sub
push
stos
mov
inc
inc
add
ret
add
je
mov
push
adc
inc
adc
sbb
mov
pop
sub
mov
mov
adc
adc
push
or
push
sub
pop
sbb
test
iret
rorl
add
pop
push
lret
sbb
arpl
pop
lods
and
stos
mov
das
mov
add
or
mov
outsb
sub
loopne
and
dec
and
xor
or
add
add
add
push
jecxz
inc
and
push
mov
or
loopne
mov
or
mov
addr16
mov
mov
sbb
imul
scas
push
inc
mov
sbbl
dec
or
xchg
sbb
xchg
popf
out
push
roll
test
filds
fldl
inc
add
inc
popa
jb
dec
popa
insl
gs
and
fildll
push
push
inc
dec
add
es
out
mov
loopne
popl
mov
jl
data16
std
daa
mov
adc
pop
add
mov
mov
and
cmp
cmp
in
add
lea
xchg
pop
imul
xor
adc
pop
js,pn
or
je
js
shlb
scas
sbb
mov
and
cs
jae
loopne
je
push
inc
add
dec
fcomi
mov
sahf
push
xor
dec
or
mov
rcrb
std
xor
xlat
out
cli
xor
cmp
add
incl
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
xor
loopne
add
in
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
arpl
add
test
add
add
add
add
add
add
add
add
add
rolb
add
jae
add
add
add
add
add
pusha
xor
loop
lock
sbb
ret
cs
push
mov
push
adc
sbb
xchg
xchg
fnsave
sbb
fmull
data16
pop
xor
idiv
add
enter
and
fucomip
or
adc
pop
pop
inc
pop
mov
xor
flds
push
xchg
pop
and
pop
cs
adc
xchg
mov
mov
popf
mov
or
push
jmp
into
pop
imull
stc
push
push
into
fwait
jecxz
lcall
cmpsb
fdivl
std
fdivrp
movsb
gs
push
dec
pop
push
adcl
jle
mov
popa
out
sub
int3
push
jmp
daa
outsl
sbb
rcrl
dec
fcomp
test
adc
test
addb
xchg
fadd
scas
pop
mov
lock
test
sbb
imul
adc
adc
xchg
daa
pop
xor
sbb
mov
scas
xorb
or
stos
dec
xchg
mov
mov
idiv
js
sub
lret
adc
test
or
dec
sub
add
stos
clc
mov
cmpsb
nop
xor
aas
cs
xchg
push
inc
add
mov
push
xlat
cmpb
hlt
sbb
and
and
xor
adc
add
mov
cld
mov
sub
or
dec
mov
xor
popf
xlat
jbe
cs
in
cli
fdivrs
mov
adc
jmp
xchg
insb
repnz
in
cmpsb
fs
cltd
inc
dec
cld
je
inc
repnz
ds
mov
jp
pop
and
mov
ljmp
hlt
outsl
sbb
popf
mov
mov
sub
imul
inc
push
push
frndint
outsl
push
out
in
mov
test
mov
sbbb
xor
dec
sub
cmp
fsubrp
clc
fisubrs
stos
popf
cli
aad
sub
push
or
sbb
movsb
mov
xchg
adc
jae
ret
repz
iret
repnz
fwait
jl
cmp
shlb
sti
movsb
push
imulb
mov
or
into
lock
hlt
les
adc
push
ja
push
cmc
adc
jno
inc
in
inc
lret
inc
jmp
rorl
imul
andl
jb
add
push
cmc
andb
push
cmc
dec
sub
std
jg
jge
jno
dec
mov
lret
xchg
clc
or
lret
rclb
sub
jg
cmpsl
push
pushf
and
mov
xchg
mov
in
lock
sbb
ret
cs
push
mov
push
adc
sbb
xchg
xchg
fnsave
sbb
fmull
data16
pop
xor
idiv
add
enter
and
fucomip
or
adc
pop
pop
inc
pop
mov
xor
flds
push
xchg
pop
and
pop
cs
adc
xchg
mov
mov
popf
mov
or
push
jmp
into
pop
imull
stc
push
push
into
fwait
jecxz
lcall
cmpsb
fdivl
std
fdivrp
movsb
gs
push
dec
pop
push
adcl
jle
mov
popa
out
sub
int3
push
jmp
daa
outsl
sbb
rcrl
dec
fcomp
test
adc
test
addb
xchg
fadd
scas
pop
mov
lock
test
sbb
imul
adc
adc
xchg
daa
pop
xor
sbb
mov
scas
xorb
or
stos
dec
xchg
mov
mov
idiv
js
sub
lret
adc
test
or
dec
sub
add
stos
clc
mov
cmpsb
nop
xor
aas
cs
xchg
push
inc
add
mov
push
xlat
cmpb
hlt
sbb
and
and
xor
adc
add
mov
cld
mov
sub
or
dec
mov
xor
popf
xlat
jbe
cs
in
cli
fdivrs
mov
adc
jmp
xchg
insb
repnz
in
cmpsb
fs
cltd
inc
dec
cld
je
inc
repnz
ds
mov
jp
pop
and
mov
ljmp
hlt
outsl
sbb
popf
mov
mov
sub
imul
inc
push
push
frndint
outsl
push
out
in
mov
test
mov
sbbb
xor
dec
sub
cmp
fsubrp
clc
fisubrs
stos
popf
cli
aad
sub
push
or
sbb
movsb
mov
xchg
adc
jae
ret
repz
iret
repnz
fwait
jl
cmp
shlb
sti
movsb
push
imulb
mov
or
into
lock
hlt
les
adc
push
ja
push
cmc
adc
jno
inc
in
inc
lret
inc
jmp
rorl
imul
andl
jb
add
push
cmc
andb
push
cmc
dec
sub
std
jg
jge
jno
dec
mov
lret
xchg
clc
or
lret
rclb
sub
jg
cmpsl
push
pushf
and
mov
xchg
mov
add
add
add
aaa
cmp
pop
aaa
cmp
sub
cmp
bound
cmp
xor
cmp
push
aaa
cmp
jne
cmp
inc
aaa
cmp
jle
cmp
mov
cmp
pushf
aaa
cmp
lods
aaa
cmp
mov
aaa
cmp
add
add
aaa
cmp
add
add
out
cmp
add
add
clc
aaa
cmp
add
add
or
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
je
jbe
fs
fs
ja
jb
jae
je
insb
jae
fs
insb
add
popa
jb
fs
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
insb
outsl
arpl
jae
je
add
add
je
jne
popaw
arpl
jb
insl
inc
inc
add
push
gs
je
insb
push
je
jo
gs
imul
je
jo
outsb
inc
popa
jb
dec
popa
insl
gs
