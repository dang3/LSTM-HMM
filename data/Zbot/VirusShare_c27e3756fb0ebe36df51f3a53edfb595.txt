and
mov
mov
loopne
inc
les
mov
pop
mov
nop
cmp
decb
cli
jp
cli
cli
and
cmpsl
dec
push
jg
mov
int
mov
mov
movsl
sahf
loop
inc
icebp
aad
cmpsb
popf
jno
cmp
xchg
loopne
out
data16
add
bound
adc
addb
xchg
cli
and
mov
sti
dec
mov
bound
xchg
add
sti
stos
sti
stos
add
jae
add
daa
scas
lock
push
add
fildl
pop
leave
inc
mov
add
dec
popl
add
test
cmp
add
mov
iret
dec
fwait
movsb
fwait
ljmp
add
fbstp
cmp
jmp
push
rcrb
mov
add
icebp
je
jp
or
add
pop
mov
adc
in
fwait
test
andl
sub
leave
gs
daa
add
imul
or
add
inc
out
je
ficompl
ljmp
popf
dec
test
and
sti
add
insb
out
adc
divl
in
jp
jge
out
not
imul
mov
jecxz
loope
test
or
mov
push
lods
les
int
add
inc
insl
or
fadd
in
outsl
inc
imul
insb
loop
nop
bound
add
in
int
add
push
add
add
ret
sahf
add
add
push
jmp
xor
xchg
fadds
add
jge
pop
fists
mov
addr16
add
pop
pop
pop
jae
add
add
add
xchg
add
mov
mov
add
cld
ja
mov
add
insb
sub
add
stc
mov
add
add
pop
add
cltd
adc
push
cmc
js
sub
add
aas
cmp
mov
pop
hlt
add
sbb
push
mov
dec
jbe
add
pop
cwtl
dec
or
add
pop
pop
push
stos
push
into
out
add
jnp
mov
outsb
cmp
mov
push
xchg
cld
add
call
icebp
push
mov
add
add
in
loope
add
add
mov
add
add
imul
mov
add
jmp
xor
add
add
xor
sti
ret
add
cmp
cmp
add
mov
ret
xor
in
add
add
and
add
das
push
pop
fcompl
cld
mov
outsb
not
add
add
pop
loopne
mov
or
outsl
test
add
jp
ret
dec
add
outsl
add
adc
add
add
loopne
xchg
andb
movsl
pop
insl
adc
pop
into
out
inc
add
add
xchg
pushf
mov
xorb
shll
std
data16
add
add
mov
mov
push
mov
add
add
add
scas
and
mov
add
ja
mov
aaa
into
pushf
sub
or
in
fiadds
sahf
and
lods
add
add
xlat
xchg
xchg
in
add
add
das
push
out
xor
popa
mov
xchg
inc
add
add
or
test
add
add
faddl
push
andb
lret
add
xchg
and
and
add
inc
fsubrs
jne
add
cmp
pusha
inc
cmpsl
test
jae
repnz
inc
das
enter
add
add
ja
xchg
dec
add
jmp
stc
mov
pusha
popa
xchg
add
lcall
daa
mov
mov
add
out
or
mov
addr16
out
out
push
add
cmp
push
push
iret
pop
dec
mov
add
push
mov
mov
add
add
cli
imul
jne
jle
mov
sub
stos
lcall
shll
add
add
add
add
fiadds
hlt
div
xor
int3
xchg
add
inc
mov
cmpb
je
cmp
je
pusha
mov
mov
inc
add
mov
mov
mov
not
dec
popa
xor
inc
dec
add
ror
loop
push
push
push
push
call
push
call
push
push
push
push
call
call
push
call
ret
mov
lea
mov
inc
dec
je
neg
inc
mov
dec
lea
not
xchg
inc
lea
mov
mov
push
xor
call
add
adc
call
add
test
in
iret
xchg
lea
xor
not
call
add
cmp
je
test
mov
call
add
test
inc
and
neg
jmp
add
mov
sub
lea
popa
pop
loop
call
xor
add
mov
add
jmp
lea
xor
call
add
jne
lea
sub
cmp
jne
push
push
push
push
call
lea
sub
dec
mov
mov
xchg
inc
pusha
dec
lea
xor
neg
neg
mov
and
popa
popl
pusha
mov
push
inc
mov
lea
mov
lea
not
not
dec
or
lea
neg
mov
inc
not
mov
inc
pop
loop
xor
pusha
mov
not
xchg
dec
mov
lea
jmp
dec
popa
mov
xor
mov
pusha
add
mov
not
xor
xor
dec
lea
neg
popa
addl
xor
pusha
mov
and
mov
mov
adc
mov
neg
popa
mov
xor
xor
mov
inc
loop
popa
add
add
lock
lea
not
not
add
inc
mov
popa
jmp
add
add
jmp
jmp
jmp
pop
and
add
add
add
add
add
add
dec
and
add
add
and
add
add
and
add
add
add
add
add
add
add
sub
inc
gs
popa
jae
inc
jb
outsl
jb
add
jb
gs
xor
cs
insb
add
mov
dec
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
adc
add
add
mov
add
add
add
sbb
add
xor
add
dec
add
sbbb
add
pusha
add
sbbb
add
js
add
nop
add
sbbb
add
rolb
sbbb
add
fadds
add
lock
andb
add
or
add
and
add
cmp
add
push
add
andb
add
addb
andb
add
cwtl
add
subb
add
mov
add
add
add
add
add
add
or
add
add
enter
add
add
loopne
add
clc
add
addb
add
add
addb
add
inc
add
addb
add
pop
add
orb
add
jo
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
and
add
lock
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
popa
add
add
push
add
add
add
add
add
dec
add
add
push
add
add
add
add
add
bound
add
inc
push
add
add
add
add
add
push
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
cmp
add
jo
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
rolb
add
add
add
add
pop
add
add
push
add
add
add
add
add
adc
add
loopne
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
enter
in
add
add
add
sbb
add
add
in
add
add
add
subb
test
add
in
add
add
add
sub
add
in
add
add
add
shlb
add
in
add
add
add
pop
stos
add
push
add
add
add
add
scas
add
jbe
add
in
add
add
add
cmp
add
in
add
add
add
add
add
jbe
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
jl
add
add
add
in
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
or
add
add
add
add
add
add
add
adc
push
or
add
push
and
adc
adc
add
push
xor
sub
add
cmp
cmp
sub
add
cmp
inc
or
add
adc
add
sbb
addr16
sbb
jno
push
add
add
pop
add
and
jbe
and
pop
and
add
cmp
inc
xor
add
aaa
add
sub
jnp
and
insb
xor
add
and
sub
add
add
cmp
cs
inc
add
cmp
cmp
cmp
add
aas
bound
inc
xor
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
inc
add
inc
add
dec
add
push
add
inc
add
dec
add
dec
add
dec
add
dec
add
pop
add
push
add
pop
add
push
add
add
pop
add
pop
add
add
imul
push
pop
imul
pop
jae
bound
add
add
jp
fs
insb
add
jns
jp
jns
fs
add
add
das
sub
xchg
sub
cwtl
xor
xor
mov
inc
add
inc
cmp
xchg
push
cmp
movsb
inc
add
dec
xor
add
push
inc
add
pop
add
push
dec
add
pop
pop
add
arpl
mov
pop
add
pop
arpl
xchg
add
push
add
jae
add
outsl
imul
mov
push
mov
push
push
add
je
add
jp
add
imul
pusha
ja
add
mov
push
lcall
jns
add
jae
add
jns
add
jnp
add
jb
add
rolb
mov
add
orb
jnp
sahf
add
lods
add
test
add
mov
pop
xor
push
xchg
cld
add
and
add
clc
add
xchg
testb
stos
incl
sbb
cli
add
stos
sti
add
movsl
incb
sub
aam
push
mov
add
incl
dec
xchg
incl
push
cwtl
incl
gs
incl
push
mov
out
add
add
incl
gs
std
add
aam
add
lret
incb
sub
incb
xor
std
add
in
add
flds
push
enter
leave
stc
add
incb
inc
sar
add
incl
insb
iret
in
jne
in
lretw
js
incl
gs
add
std
add
incb
push
jmp
incb
mov
mov
test
xchg
add
xchg
lcall
mov
add
mov
movsb
add
mov
add
mov
mov
add
cmpsb
cmpsb
add
stos
stos
add
mov
add
mov
add
scas
lods
add
mov
add
mov
add
mov
add
mov
add
cli
add
call
incl
xchg
incl
cwtl
repnz
mov
jmp
stos
jmp
incl
test
incl
mov
ret
ret
rcl
add
rcl
add
add
int
add
fcmovu
add
fnstsw
add
in
add
jecxz
add
out
incl
leave
cmc
incb
shl
incb
in
in
in
out
add
out
add
jmp
add
cld
incb
repz
div
add
clc
testl
std
std
std
add
incl
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
add
add
sti
sti
sti
sti
sti
cli
sti
cli
sti
clc
sti
clc
sti
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
div
clc
div
div
div
div
icebp
div
icebp
div
iret
add
add
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
clc
sti
clc
cli
cli
clc
sti
clc
clc
clc
clc
clc
clc
clc
clc
div
clc
cmc
cmc
cmc
cmc
icebp
cmc
icebp
div
div
imul
imul
roll
add
in
sti
cli
sti
cli
sti
cli
cli
cli
cli
cli
cli
clc
cli
clc
sti
clc
clc
cli
clc
cli
clc
clc
clc
clc
clc
cmc
clc
clc
clc
cmc
cmc
clc
cmc
clc
div
div
div
imul
not
add
add
sti
cli
or
or
sbb
sub
sub
xor
xor
cmp
xor
sub
sub
xor
cs
sub
sbb
or
add
add
sti
std
or
cmp
inc
inc
dec
dec
imul
outsb
ja
ja
ja
ja
dec
inc
cmp
cmp
xor
aaa
sub
pop
add
div
iret
add
add
sti
sti
sub
inc
dec
dec
imul
ja
rol
ret
ret
ret
ret
ret
mov
dec
and
cmp
cmp
add
add
icebp
test
add
in
std
sti
xor
dec
insl
insl
xchg
mov
leave
leave
leave
leave
leave
ror
ret
ret
xor
and
imul
ss
inc
inc
cmc
test
add
in
cld
cld
cmp
insl
insl
ja
ret
ret
leave
leave
rcl
aam
aam
rol
inc
jl
inc
mov
insl
imul
test
add
in
cld
cld
cmp
xchg
leave
leave
rcl
aam
aam
xlat
xlat
xlat
ror
dec
jl
inc
ret
ret
shll
outsl
fs
sbb
cmc
roll
add
in
cld
cld
ds
insl
xchg
rcl
aam
aam
aam
xlat
xlat
aam
sarl
daa
js
xor
push
cmc
cmc
roll
add
icebp
cld
cld
ds
xchg
rcl
aad
xlat
xlat
aad
xlat
jmp
jns
and
shll
push
sbb
add
out
cld
cld
xchg
rcl
rcl
aad
aad
xlat
jmp
xlat
aad
jns
jl
xor
outsl
jbe
pop
cmc
clc
roll
add
in
cld
cld
xchg
rcl
aam
aad
jmp
aam
xlat
aad
jns
jns
mov
shrl
pop
cmc
cmc
roll
add
idiv
cld
ds
rcl
rcl
aad
xlat
xlat
jmp
aad
sarl
push
jnp
enter
ret
shll
jne
clc
clc
roll
add
out
cld
cld
inc
xchg
rcl
aam
xlat
xlat
xlat
aam
aam
xlat
aad
aad
jns
jge
enter
jbe
pop
cmc
cmc
roll
add
icebp
cld
cld
ds
rol
rcl
aam
xlat
aam
aam
aad
xlat
aam
jge
jnp,pn
enter
ret
shrl
je
clc
clc
roll
add
idiv
cld
xchg
rcl
vpsrld
aad
aam
aam
jge
add
jne
je
clc
cmc
roll
add
icebp
cld
cld
inc
test
leave
rcl
rcl
leave
aad
aam
aam
xor
jbe
jae
push
clc
clc
roll
add
idiv
cld
outsb
xchg
rcl
rol
leave
aad
aam
and
ret
ret
ret
shll
pop
pop
push
clc
clc
roll
add
out
cld
cld
test
ret
leave
rol
ret
ret
vmovq
rcl
sarb
add
ret
ret
ret
shll
pop
pop
pop
push
clc
clc
roll
add
icebp
cld
cld
outsb
insl
xchg
mov
vmovq
rol
rcl
jnp
inc
js
ret
ret
shll
pop
pop
push
clc
clc
roll
add
idiv
cld
imul
ret
ja
rol
rol
jge
mov
shll
pop
pop
pop
push
clc
clc
roll
add
out
cld
cld
imul
mov
mov
rol
ret
ret
rol
jno
insb
pop
pop
pop
pop
sbb
clc
roll
add
idiv
cld
imul
mov
ret
ret
ret
ret
leave
leave
leave
ret
mov
outsb
push
push
push
push
sbb
cli
roll
add
icebp
cld
cld
ds
insl
mov
mov
ret
ret
enter
ret
ret
ret
ret
ret
rol
ret
ret
jmp
push
push
push
dec
adc
clc
roll
add
idiv
cld
ds
test
test
mov
ret
ret
ret
rol
rol
rol
xlat
jmp
push
push
dec
dec
adc
add
icebp
cld
cld
inc
dec
test
or
mov
rol
rol
rcl
in
outsb
imul
adc
clc
roll
add
icebp
cld
std
inc
mov
xchg
xchg
into
lret
lret
lret
int3
mov
shll
shr
sti
enter
push
push
push
cli
cli
roll
add
icebp
std
std
jp
sbbb
fxch
into
fwait
mov
mov
leave
out
cld
cld
cld
imulb
aas
cmp
push
cli
clc
roll
add
icebp
std
stc
dec
lcall
test
cwtl
fwait
mov
outsb
fs
popa
fdivr
cld
cld
imulb
cmp
push
push
push
adc
clc
cli
roll
add
icebp
std
stc
dec
lea
mov
test
mov
push
push
dec
arpl
cld
ret
cmp
adc
or
add
icebp
stc
stc
dec
mov
out
loop
jecxz
mov
sarb
push
dec
dec
dec
dec
aad
aas
imul
adc
adc
or
cli
roll
add
icebp
stc
stc
xchg
hlt
hlt
hlt
hlt
hlt
mov
jnp
aas
and
sbb
pop
sbb
imul
push
adc
or
cli
roll
add
lock
mov
stos
mov
hlt
repz
out
hlt
std
std
std
cld
cld
cld
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
aad
add
fistpl
jecxz
hlt
hlt
hlt
hlt
repz
cmpsl
cwtl
xchg
xchg
sahf
fdiv
cld
cld
cld
cld
cld
cli
cli
cli
cld
cli
cli
sti
cli
cli
cli
cli
jmp
in
fidivs
hlt
hlt
hlt
repz
add
add
loope
mov
hlt
hlt
mov
add
mov
mov
loop
jecxz
loopne
add
call
cmpsb
mov
test
ficoms
stos
test
cwtl
loope
add
out
cwtl
call
movsb
add
add
xchg
xchg
add
sahf
sahf
add
lahf
mov
add
faddl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
inc
pop
incl
add
incl
add
out
incl
add
out
incl
add
out
incl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
aaa
add
sbb
add
and
xor
cmp
cmp
inc
or
add
adc
push
unpckhps
inc
adc
add
push
add
sbb
popw
sbb
ja
sbb
push
sbb
add
and
inc
xor
add
aas
add
aaa
add
add
and
jno
cmp
add
xor
cmp
cmp
inc
xor
add
inc
add
inc
add
dec
add
add
inc
add
inc
add
add
dec
jp
push
inc
dec
add
dec
add
pop
add
pop
add
push
add
push
add
pop
add
push
add
pop
add
dec
add
add
push
add
push
add
add
pop
add
pop
add
push
add
add
pop
add
pop
add
arpl
popa
dec
bound
insb
push
bound
jnp
add
push
add
outsb
add
ja
jg
jl
jle
jle
test
push
add
daa
add
cmp
add
cmp
add
cmp
add
cmp
cmpsl
inc
das
add
push
add
push
inc
add
pop
push
add
addr16
add
pop
add
bound
andl
add
insl
jne
xchg
insb
jo
mov
add
jo
add
je
add
jp
add
jbe
add
jne
add
inc
add
jo
add
jae
add
jp
add
jnp
add
test
push
jns
add
add
mov
jge
nop
add
jle
add
jnp
add
jg
add
xchg
add
mov
add
mov
add
lods
add
mov
add
cwtl
int
adc
fiaddl
and
ljmp
xchg
loop
sub
call
add
xchg
in
add
sahf
call
add
mov
movl
dec
test
add
fiaddl
pop
lods
loopne
inc
mov
add
out
add
add
enter
jecxz
adc
call
add
shr
add
jmp
cmp
out
add
add
out
add
out
sti
add
lock
add
icebp
sti
add
add
out
add
in
add
out
add
icebp
add
in
add
add
in
add
test
add
test
pushf
test
add
adcb
xchg
add
mov
add
mov
add
xchg
add
xchg
mov
movsb
lea
add
xchg
xchg
add
xchg
cltd
add
lcall
mov
lahf
add
nop
mov
add
lahf
mov
add
mov
movsb
add
cmpsl
test
add
stos
lods
add
mov
add
scas
scas
add
lods
mov
shlb
les
mov
add
ljmp
mov
repz
call
hlt
add
enter
testl
fdivp
testl
jmp
jmp
loopne
cli
add
cli
sti
add
cld
cld
add
repz
sti
cld
add
incl
add
inc
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
inc
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
clc
std
clc
std
clc
std
clc
clc
clc
clc
clc
clc
clc
clc
add
add
std
std
std
std
std
std
std
std
std
clc
std
clc
clc
std
clc
std
clc
clc
clc
clc
clc
std
clc
clc
clc
clc
clc
clc
add
add
std
std
or
adc
pop
and
sub
sub
sub
push
push
adc
pop
pop
push
clc
clc
add
add
std
std
and
inc
pop
bound
mov
into
mov
ds
clc
clc
add
add
std
std
sub
bound
enter
roll
inc
and
pop
inc
xorb
add
add
std
std
xor
lret
rcl
loop
out
fnsave
jp
enter
lret
clc
add
add
std
std
aaa
gs
loop
jecxz
ljmp
ror
enter
clc
std
add
add
std
std
aaa
mov
loop
jecxz
ljmp
xor
fmul
pop
pop
push
clc
clc
add
add
std
std
inc
mov
jecxz
ljmp
add
enter
std
clc
add
add
std
std
inc
mov
loop
ljmp
sbb
fcomp
ror
insl
jb
clc
std
add
add
std
std
inc
mov
loopne
loop
loop
jecxz
mov
ror
imul
clc
add
add
std
std
aaa
mov
fucom
fcomp
loop
jecxz
jns
fcom
lret
outsl
dec
clc
std
add
add
std
std
aaa
mov
fmul
rcr
loop
loop
js
rcl
int3
mov
clc
add
add
std
std
aaa
jnp
lret
lret
fmul
int3
rcr
fstp
fsubp
ja
mov
push
push
dec
std
clc
add
add
std
std
cmp
test
mov
fstp
jl
fmul
enter
push
adc
std
add
add
std
std
xor
mov
lret
fmul
rcl
rcl
into
into
int
shrb
dec
dec
adc
clc
add
add
xchg
cld
cmp
xchg
lds
leave
enter
arpl
dec
adc
std
add
add
cmc
xchg
adcl
leave
enter
jle
repz
aas
dec
dec
push
std
clc
add
add
cmc
xchg
cmpsl
mov
test
jle
mov
cmp
inc
adc
std
std
add
add
cli
mov
stos
test
mov
mov
pop
outsb
std
std
call
adc
std
std
add
add
mov
mov
lock
mov
dec
dec
inc
inc
hlt
repz
adc
wbinvd
std
std
add
add
std
std
std
std
lock
test
pop
pop
push
adc
inc
push
or
or
std
std
add
add
std
std
std
std
mov
xchg
popf
in
icebp
std
std
std
std
std
std
std
std
std
std
std
std
std
add
add
imul
mov
lock
cmpsb
idiv
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
add
add
add
mov
mov
add
add
mov
add
xchg
in
sahf
in
mov
add
nop
mov
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
jmp
pop
jmp
pop
fidivrs
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
and
add
and
add
sub
add
cs
inc
or
add
add
adc
add
sbb
push
pop
sbb
jae
sbb
jo
sbb
gs
and
push
cmp
add
xor
inc
ss
add
inc
add
inc
add
inc
add
dec
add
inc
add
dec
add
push
add
pop
add
pop
add
pop
add
push
add
pop
add
pop
add
inc
add
push
add
push
add
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
imul
push
outsb
add
jl
arpl
add
pusha
add
push
pop
arpl
push
jbe
jno
jge
jae
jae
xchg
push
add
cmp
add
inc
das
add
xor
pushf
dec
dec
add
push
dec
add
pop
pop
add
insw
add
pusha
arpl
mov
add
jae
add
jbe
add
jnp
add
gs
add
addl
jle
add
cwtl
add
mov
add
add
add
scas
add
mov
xor
fwait
into
add
mov
add
jmp
push
mov
flds
dec
cmpsl
loop
pop
mov
ljmp
mov
fiadds
sbb
loopne
sbb
out
add
add
int
add
leave
out
add
jmp
cmp
jecxz
xor
jmp
add
shl
add
aad
add
add
out
add
in
add
out
add
repz
jmp
addr16
jo
out
add
lock
testl
push
out
testl
jge
cmc
add
addb
lcall
add
mov
add
cltd
add
popf
add
xchg
lahf
add
xchg
mov
mov
add
nop
mov
mov
lea
add
xchg
xchg
add
xchg
xchg
add
cwtl
add
cwtl
add
cltd
pushf
add
fwait
pushf
add
sahf
popf
add
sahf
cmpsb
add
fwait
mov
add
mov
mov
add
movsb
movsb
add
test
add
lods
stos
add
scas
scas
add
mov
mov
les
mov
les
mov
add
add
fsubr
add
repnz
lock
add
hlt
testl
jecxz
filds
shl
add
out
repz
cmc
testl
leave
idiv
add
idiv
add
clc
stc
add
jmp
hlt
add
hlt
cmc
add
cmc
cmc
add
std
incb
clc
incb
incl
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
add
add
add
add
add
and
and
adc
add
add
sbb
adcl
sub
add
add
and
mov
mov
lcall
add
add
sub
mov
mov
add
add
xor
mov
test
add
add
xor
mov
mov
lcall
add
sub
mov
mov
lods
lahf
xchg
dec
cmp
add
add
sub
mov
mov
sbb
xchg
test
cmp
add
add
daa
push
mov
lcall
xchg
dec
cmp
add
add
int
xor
push
push
xchg
subl
add
js
push
pop
pop
pop
pop
pop
lea
xchg
sub
or
add
add
fs
jge
addr16
inc
ror
test
or
add
add
insb
adc
push
xor
push
or
inc
sub
pop
push
add
add
jle
fcomp
sarb
enter
add
add
jo
xlat
xlat
leave
jbe
ret
add
add
shrb
rol
outsl
roll
add
gs
jg
insl
imul
jp
lds
enter
add
bound
add
incl
loopne
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
sarb
add
mov
incl
incl
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
and
add
adc
pop
or
add
push
add
sbb
outsl
sub
add
inc
add
dec
add
dec
add
pop
add
add
push
add
pop
add
bound
push
dec
data16
add
jo
push
popa
add
bound
jae
bound
jp
popa
add
push
add
push
jl
push
jle
insl
add
cmp
xchg
cmp
add
pop
dec
add
pop
push
add
jo
add
je
add
jp
add
addl
jae
add
jl
add
mov
je
mov
add
mov
add
nop
int3
add
xchg
into
add
xchg
roll
sub
rolb
cmp
roll
xor
fiaddl
and
cli
add
mov
movl
inc
lcall
popa
cltd
aad
imul
in
add
lret
in
add
iret
out
add
shr
add
hlt
add
test
add
mov
add
xchg
add
mov
add
nop
add
xchg
nop
add
xchg
xchg
add
lcall
mov
sahf
add
cwtl
stos
add
lahf
mov
add
stos
stos
add
mov
mov
add
scas
lods
add
stos
test
add
scas
scas
add
mov
mov
mov
add
lods
stos
add
scas
scas
add
mov
add
mov
add
mov
add
mov
mov
add
ljmp
shl
xchg
lret
loop
add
repnz
mov
repz
ret
loopne
add
jmp
add
out
out
add
clc
incl
repnz
div
add
clc
clc
add
incl
incb
incl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
or
adc
or
add
mov
mov
das
push
popa
insb
jnp
sbb
and
mov
mov
push
pop
outsb
ja
ja
adc
mov
mov
outsb
jle
dec
insb
push
and
pop
outsb
insb
jp
adc
and
dec
inc
pop
pusha
outsb
jp
cs
sub
nop
addr16
xor
push
and
ds
xor
aas
pop
push
insl
push
pop
push
nop
je
xorb
mov
nop
es
add
inc
xchg
or
pop
add
nop
je
mov
dec
xchg
test
nop
nop
je
inc
cmp
ds
je
ja
ja
ja
add
addl
add
add
add
aad
add
idiv
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
adc
add
aaa
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
rcl
sar
div
idiv
cmc
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
ljmp
jmp
jmp
call
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
add
add
add
add
add
fcos
div
idiv
div
idiv
cmc
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
ljmp
jmp
jmp
call
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
ljmp
add
add
add
add
add
fcos
div
idiv
div
idiv
div
idiv
cmc
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
ljmp
jmp
jmp
jmp
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
add
sub
add
add
fcmovu
div
idiv
div
idiv
aaa
sub
cmp
cmp
aas
das
cmp
inc
xor
incl
aas
decl
inc
decl
decl
inc
call
inc
call
dec
call
dec
call
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
decl
dec
decl
inc
incl
inc
incl
inc
decl
call
dec
decl
dec
decl
dec
decl
incl
inc
decl
dec
call
dec
call
dec
decl
inc
decl
incl
cmp
sub
incl
dec
ljmp
cmp
in
in
in
in
cmpsl
cmpsl
cmpsb
stc
add
add
add
add
fcmovu
clc
clc
clc
push
div
incl
cmp
pop
inc
push
jmp
pop
ljmp
pushl
pusha
pushl
arpl
jge
push
incl
addr16
mov
call
js
lcall
test
lahf
addb
popf
addb
jg
lcall
imul
inc
pop
incl
push
decl
pop
lcall
pop
lcall
pop
incl
call
push
decl
push
incl
dec
cmp
inc
ljmp
sbb
lcall
adc
lcall
push
daa
call
or
call
or
decl
add
in
in
in
cmpsl
cmpsb
cmpsb
stc
add
add
add
add
fcmovu
clc
clc
clc
clc
clc
clc
decl
inc
ljmp
pop
pushl
jns
addr16
jg
insb
incl
je
mov
call
jns
lcall
test
jmp
xchg
ljmp
xchg
xchg
ljmp
xchg
xchg
ljmp
xchg
xchg
lcall
jle
decl
popa
cmp
push
call
sbb
decl
pushl
insl
ljmp
das
dec
pushl
addr16
jl
imul
outsl
dec
pop
jmp
push
call
inc
lcall
nop
push
push
sbb
adc
sbb
or
in
jmp
in
jmp
add
sub
add
add
fcmovnu
fdivr
stc
stc
stc
clc
clc
clc
call
dec
pushl
jl
imul
push
jbe
mov
xchg
js
lcall
test
jmp
xchg
ljmp
xchg
cltd
ljmp
lahf
mov
pushl
mov
pushl
xchg
cltd
lcall
dec
imul
xor
push
decl
inc
jge
outsl
lcall
imul
pusha
push
ljmp
push
decl
push
decl
pop
call
outsl
decl
jmp
in
jmp
in
jmp
add
sub
add
add
fcmovnu
fdivr
stc
stc
stc
stc
stc
stc
lcall
dec
jl
insb
incl
jno
call
jge
lcall
mov
ljmp
xchg
cwtl
ljmp
popf
lahf
pushl
movsb
movsl
mov
stos
stos
mov
lods
scas
mov
lods
scas
pushl
xchg
pushf
lcall
jno
push
lahf
pushl
insl
lcall
jo
xchg
orb
test
jmp
jge
call
outsb
incl
mov
dec
rol
leave
mov
mov
in
in
in
in
cmpsl
cmpsl
cmpsl
stc
add
add
add
add
cli
cli
cli
stc
stc
stc
lcall
push
incl
js
xchg
jns
lcall
xchg
jmp
xchg
cwtl
ljmp
sahf
lahf
pushl
cmpsb
pushl
stos
lods
mov
lods
scas
inc
mov
inc
mov
inc
mov
inc
mov
pushl
movsb
jmp
jp
imul
cmp
lcall
js
pushf
mov
mov
ljmp
mov
xchg
jne
decl
insl
imul
pusha
pop
incl
aaa
jmp
out
jmp
out
jmp
add
sub
add
add
fdivrp
cli
cli
cli
cli
cli
cli
jmp
push
decl
js
call
xchg
jmp
xchg
lcall
sahf
mov
mov
lods
lods
mov
mov
mov
scas
mov
ret
inc
mov
mov
pushl
stos
ljmp
cmp
ja
pushl
aas
ljmp
cmp
inc
cmp
test
scas
lcall
movsb
mov
incl
sub
lcall
sub
pop
and
incl
push
jmp
out
jmp
out
jmp
add
sub
add
add
fdivrp
sti
sti
sti
cli
cli
cli
jmp
pop
decl
cmp
test
jmp
xchg
xchg
ljmp
mov
mov
scas
scas
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
scas
mov
mov
outsl
mov
js
xchg
ss
ljmp
xchg
test
mov
call
mov
cltd
jmp
xchg
lcall
dec
inc
call
xor
jmp
out
jmp
out
jmp
add
sub
add
add
fdivrp
sti
sti
sti
sti
sti
sti
ljmp
pop
decl
jle
lcall
lea
ljmp
lahf
pushl
cmpsb
cmpsl
mov
mov
inc
mov
inc
mov
inc
mov
mov
inc
mov
mov
mov
mov
mov
mov
pushl
pushl
cmp
jb
mov
scas
lahf
movsb
incl
call
mov
fwait
ljmp
mov
inc
ja
mov
push
decl
out
jmp
out
ljmp
add
sub
add
add
fdivrp
cld
cld
cld
sti
sti
sti
ljmp
pop
call
orb
movsl
xchg
ljmp
cltd
pushf
pushl
mov
test
mov
mov
mov
mov
inc
mov
mov
mov
lods
lods
mov
mov
mov
mov
js
mov
je
jle
sub
jne
pushl
orl
mov
mov
ljmp
mov
mov
jge
inc
ja
mov
push
inc
call
out
ljmp
add
sub
add
add
cld
cld
cld
cld
cld
cld
ljmp
pop
call
mov
mov
xchg
ljmp
pushf
sahf
pushl
mov
test
mov
mov
inc
mov
inc
mov
mov
mov
scas
mov
mov
mov
mov
lods
mov
jnp
mov
inc
dec
call
adc
jns
mov
mov
stos
jmp
cwtl
fwait
mov
pushf
fwait
ljmp
mov
sarl
jp
inc
jne
call
call
call
stc
add
add
add
add
loopne
loopne
cld
cld
cld
cld
cld
cld
ljmp
call
mov
mov
xchg
xchg
ljmp
pushf
lahf
pushl
movsb
movsl
mov
stos
lods
mov
mov
inc
mov
inc
mov
mov
mov
scas
scas
mov
mov
inc
mov
mov
mov
jns
xchg
pushl
jge
dec
inc
dec
pushl
mov
mov
stos
jmp
fwait
mov
pushf
fwait
ljmp
mov
inc
jge
dec
js
inc
jae
call
call
call
stc
add
add
add
add
loopne
loopne
std
std
std
cld
cld
cld
ljmp
call
mov
mov
nop
xchg
ljmp
pushf
sahf
pushl
mov
cmpsl
mov
scas
scas
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
mov
jl
xchg
pushl
jge
inc
inc
dec
pushl
mov
mov
stos
jmp
cltd
fwait
pushl
lcall
test
mov
mov
mov
je
inc
outsl
push
call
jmp
call
stc
add
add
add
add
loope
loope
std
std
std
std
std
std
ljmp
pop
call
addb
mov
xchg
xchg
ljmp
pushf
lahf
pushl
mov
cmpsl
mov
scas
mov
mov
popf
lahf
mov
lods
lods
mov
mov
mov
mov
mov
scas
mov
jl
xchg
incl
pop
call
test
mov
test
ljmp
sahf
popf
pushl
nop
jmp
jge
dec
je
inc
insl
dec
inc
push
aaa
jmp
jmp
test
sub
add
add
loope
loope
std
std
std
std
std
std
ljmp
pop
call
addb
mov
xchg
xchg
ljmp
popf
pushl
movsb
movsl
mov
test
test
mov
fwait
pushl
cmpsb
cmpsl
mov
scas
scas
inc
mov
inc
mov
mov
scas
mov
mov
adcb
adc
ljmp
pushl
cwtl
ljmp
fwait
lcall
mov
mov
inc
imul
gs
mov
inc
xor
ljmp
ljmp
add
sub
add
add
loopne
loopne
std
std
std
ljmp
pop
decl
jle
lcall
mov
ljmp
lcall
mov
movsb
mov
movsb
movsl
ljmp
fwait
pushf
mov
cmpsl
cmpsl
mov
lods
lods
inc
scas
lods
mov
scas
scas
mov
lods
scas
jge
xchg
cmp
push
call
adc
ljmp
pushl
xchg
cwtl
ljmp
xchg
ljmp
mov
pushl
arpl
mov
pop
cmp
mov
ljmp
ljmp
add
sub
add
add
loopne
ljmp
pop
decl
jnp
lcall
mov
test
xchg
ljmp
sahf
pushl
mov
nop
ljmp
fwait
popf
pushl
movsl
movsb
mov
test
stos
mov
stos
stos
mov
test
mov
cmp
dec
incl
push
and
bound
pushl
xchg
xchg
ljmp
xchg
ljmp
xchg
pushl
pop
cmp
mov
cmp
mov
cmp
xchg
jmp
jmp
ljmp
stc
add
add
add
add
loopne
jmp
pop
decl
js
call
test
jmp
xchg
xchg
ljmp
fwait
jmp
xchg
ljmp
cltd
fwait
pushl
mov
mov
cmpsl
cmpsb
mov
test
mov
movsl
cmpsl
jns
mov
dec
push
outsb
incl
ljmp
test
mov
pushf
ljmp
xchg
xchg
ljmp
mov
lcall
inc
pushl
dec
ljmp
aaa
daa
jmp
jmp
jmp
jmp
stos
stos
stos
stc
add
add
add
add
loopne
loope
jmp
push
decl
jne
call
addl
jmp
xchg
xchg
lcall
mov
ljmp
cwtl
lcall
lahf
mov
pushl
movsl
mov
mov
movsb
movsb
pushl
mov
je
jg
mov
cwtl
lea
ljmp
mov
jmp
jle
lcall
push
cmp
mov
xor
stos
dec
xor
cmpsl
inc
xor
jge
and
in
in
in
in
in
in
ljmp
add
sub
add
add
loopne
loopne
jmp
push
incl
jbe
mov
call
xchg
mov
mov
lcall
mov
ljmp
xchg
cwtl
ljmp
lcall
mov
sahf
pushl
mov
mov
pushl
mov
test
xchg
cwtl
jmp
mov
ljmp
cmpb
ja
lcall
dec
xor
cmpsl
inc
xor
movsb
inc
jmp
sub
in
in
in
in
in
in
ljmp
add
sub
pop
or
xor
loope
std
jmp
push
incl
jne
decl
orl
sahf
nop
xchg
incl
mov
jmp
xchg
xchg
jmp
cltd
pushf
ljmp
cltd
pushf
ljmp
pushf
pushf
pushl
popf
pushf
pushl
lcall
stos
xchg
xchg
ljmp
xchg
xchg
jmp
lea
mov
test
lcall
addr16
movsb
inc
xor
mov
cmp
lcall
sub
in
in
in
in
in
in
ljmp
add
sub
or
adc
loopne
jecxz
std
cld
jmp
push
incl
jne
decl
xchg
call
jns
ljmp
lcall
xchg
cwtl
jmp
cwtl
lcall
cltd
lcall
cltd
lcall
cwtl
cltd
ljmp
xchg
xchg
ljmp
xchg
xchg
ljmp
nop
xchg
jmp
lea
jmp
ret
lahf
addb
xchg
outsb
jno
mov
lcall
aaa
sub
xchg
xor
call
and
out
out
out
in
in
in
ljmp
add
sub
push
adc
xor
loop
sti
cli
jmp
pop
jle
ja
xorl
mov
nop
decl
mov
push
jg
lcall
cwtl
pushf
jmp
cltd
pushf
jmp
cwtl
cltd
jmp
xchg
xchg
ljmp
xchg
xchg
ljmp
xchg
xchg
jmp
mov
jmp
mov
mov
fwait
popf
inc
mov
dec
rol
lcall
decl
pop
popa
call
xor
decl
sub
jmp
sbb
out
out
out
out
out
out
ljmp
add
sub
adc
sbb
cli
clc
lcall
pop
jl
jp
cmpl
mov
decl
mov
cmp
test
popf
popf
mov
jmp
fwait
sahf
jmp
xchg
xchg
jmp
xchg
jmp
lea
jmp
mov
jmp
xchg
pushl
mov
sar
xchg
jb
decl
pusha
data16
jle
pop
decl
sub
incl
and
jmp
sbb
out
out
out
out
out
out
ljmp
add
sub
pop
sub
in
idiv
push
lcall
jp
popa
subl
xchg
decl
cwtl
icebp
pushl
cltd
repz
movsl
lods
lcall
mov
test
lcall
xchg
xchg
jmp
mov
jmp
test
lcall
cmp
sar
div
cmc
ljmp
jmp
jno
xchg
jg
arpl
js
pop
incl
es
jle
and
lcall
sbb
out
out
out
out
out
out
ljmp
add
es
cmp
fsub
in
cmc
push
std
jmp
cmp
jae
ljmp
jns
call
aam
test
scas
incl
mov
ljmp
mov
lret
scas
mov
xchg
mov
jge
aam
dec
mov
call
out
xchg
mov
xchg
lcall
xchg
lcall
jle
call
pushf
popf
jmp
fcmovu
std
std
std
stc
clc
idiv
lods
fwait
cltd
in
call
imul
pop
arpl
js
pop
pushl
push
jg
daa
jnp
and
ja
and
jae
pop
call
push
push
lock
out
out
out
ljmp
add
xor
ds
in
repnz
in
std
jmp
js
push
mov
hlt
call
stc
jmp
cmpsl
clc
call
ljmp
sar
pushl
xlat
std
ljmp
pushl
loopne
inc
iret
idiv
sub
ljmp
mov
fcos
xchg
cltd
sahf
call
mov
call
jns
call
inc
aas
jmp
mov
cld
sti
sti
stc
clc
clc
ljmp
out
incl
push
pop
ljmp
pop
pushl
aas
jns
and
jne
and
jo
push
ljmp
call
adc
push
lock
add
aaa
push
push
inc
out
lock
ljmp
pushl
mov
sub
cli
cmp
cld
lcall
sar
call
lcall
call
lcall
in
call
pushl
xlat
std
incl
clc
call
xchg
popf
call
mov
xchg
jge
call
dec
inc
lcall
cmp
call
sub
mov
int
stc
div
ljmp
out
jnp
popa
ljmp
pop
ljmp
pushl
and
jae
and
outsb
sbb
ljmp
sbb
adc
decl
adc
icebp
icebp
icebp
push
icebp
icebp
ljmp
add
cmp
in
in
std
call
jb
jnp
sahf
lcall
call
sar
jae
call
out
ljmp
hlt
incl
hlt
lcall
fdivr
pushl
call
call
mov
call
dec
inc
call
cmp
decl
cs
mov
mov
mov
in
jmp
popa
incl
es
pushl
pop
ljmp
sbb
jmp
sbb
pop
push
adc
push
repnz
icebp
icebp
ljmp
add
inc
pusha
fs
fsub
out
in
std
jmp
cld
ljmp
pushl
test
lcall
into
std
incl
pushl
call
idiv
call
idiv
call
idiv
call
idiv
lcall
ljmp
jg
aam
test
xchg
js
test
jb
js
ja
push
pushl
pushl
xor
outsl
das
sub
ljmp
and
jmp
jmp
and
arpl
incl
xor
ljmp
aas
call
sbb
push
adc
call
sbb
dec
unpckhps
dec
or
ud0
or
push
repnz
add
add
add
push
jg
inc
int3
in
dec
cmc
ljmp
ljmp
incl
jmp
fdivr
call
mov
idiv
call
idiv
call
idiv
call
idiv
dec
cmc
lcall
ljmp
call
pushl
call
ljmp
std
in
sti
cld
push
sti
cld
push
sti
sti
push
sti
sti
stc
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
stc
stc
stc
clc
clc
clc
clc
clc
clc
push
div
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
add
and
dec
scas
xlat
dec
subb
ljmp
mov
lcall
stos
ljmp
iret
call
jmp
cmc
call
idiv
call
idiv
call
idiv
call
idiv
dec
cmc
jmp
out
ljmp
sar
jmp
mov
jmp
fwait
pushl
xchg
call
decl
repnz
push
cld
cld
clc
cld
cld
stc
sti
sti
cli
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
stc
stc
stc
clc
clc
clc
clc
clc
clc
push
div
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repz
enter
add
adc
add
add
ret
imul
in
mov
cmc
iret
push
sti
jmp
and
std
dec
jmp
call
idiv
call
idiv
call
idiv
call
idiv
dec
cmc
lcall
sub
std
inc
aad
repz
int3
cli
jecxz
int
int3
je
in
mov
lret
fimuls
jl
stos
push
jnp
xchg
inc
jne
addb
jns
outsl
jb
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
insb
insb
cmp
cmp
dec
dec
xor
add
add
add
add
cmc
ljmp
test
cmc
decl
cmc
ljmp
cmc
decl
sbb
in
mov
dec
cmc
call
idiv
call
idiv
call
idiv
call
idiv
lcall
ljmp
fdivr
decb
cmc
jle
cmc
jmp
cmc
decl
cmc
cmp
cmc
lcall
test
cmc
decl
test
cmc
incl
test
add
add
cmc
jmp
test
cmc
lcall
cmc
pushl
fcoms
ret
jae
nop
out
jle
stos
repnz
ljmp
repnz
pushl
ljmp
fdivr
pushl
call
test
pushl
cmc
call
cmc
incl
cmc
pushl
test
cmc
call
test
cmc
incl
test
cmc
incl
test
add
add
cmc
jmp
test
cmc
cmp
mov
call
mov
sti
push
sar
adc
pop
call
sbb
in
call
pushl
fdivr
std
cmp
lock
test
cmc
ljmp
test
cmc
decl
cmc
incl
test
cmc
incl
test
add
add
cmc
lcall
test
cmc
pushl
cmc
decl
pushl
adc
push
push
aam
ficoms
jmp
daa
sar
std
das
fdivr
std
in
shll
dec
cmp
lret
daa
mov
pushl
test
cmc
jmp
test
cmc
call
test
cmc
incl
test
add
add
cmc
call
test
lock
jle
lds
cmp
mov
movsl
cmc
jl
out
mov
sub
lcall
lcall
lods
ds
dec
lock
cmc
ljmp
test
cmc
call
test
cmc
incl
cmc
incl
test
add
add
cmc
call
test
cmc
lcall
and
dec
push
mov
jl
out
pop
test
cmc
call
cmc
lcall
loope
subb
jmp
sub
jnp
cmc
lcall
cmc
call
cmc
decl
lock
sar
jae
in
ds
cmc
call
test
cmc
decl
test
cmc
incl
test
add
add
cmc
decl
test
cmc
call
test
cmc
pushl
test
cmc
incl
cmc
decl
out
lcall
jle
shll
repnz
cmc
decl
cmc
incl
cmc
cmp
cmc
ljmp
test
cmc
call
test
cmc
incl
test
cmc
incl
test
cmc
incl
test
cmc
decl
test
cmc
lcall
test
cmc
pushl
test
cmc
incl
jae
mov
test
movsl
test
cmp
cmc
pushl
test
cmc
ljmp
test
cmc
lcall
cmc
call
test
cmc
incl
test
cmc
incl
test
add
add
cmc
incl
test
cmc
decl
test
cmc
lcall
test
cmc
jmp
test
cmc
ljmp
xor
pushl
cmc
ljmp
test
cmc
jmp
test
cmc
lcall
test
cmc
decl
test
cmc
incl
test
cmc
incl
test
add
add
cmc
incl
test
cmc
incl
test
cmc
decl
test
cmc
call
test
cmc
lcall
mov
cmp
cmc
lcall
test
cmc
call
test
cmc
decl
test
cmc
incl
cmc
incl
test
cmc
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
pop
incl
add
add
pop
incl
add
add
ud0
add
add
add
incl
add
add
pop
incl
add
add
aas
incl
add
add
aas
incl
add
add
jg
incl
add
add
jg
incl
add
add
add
add
add
add
add
and
add
add
adcb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
lods
add
add
add
lods
add
add
add
lods
add
add
add
lods
add
add
add
lods
add
add
add
lods
add
add
add
lods
add
add
add
sub
add
cmp
cmc
cmc
push
hlt
hlt
push
repz
repz
repnz
icebp
icebp
push
lock
lock
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
ljmp
jmp
jmp
call
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
repz
repnz
icebp
icebp
push
icebp
icebp
push
lock
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
ljmp
jmp
jmp
call
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
incl
add
cmp
add
cmp
div
push
cmc
cmc
cmp
cmp
aas
das
cmp
inc
xor
decl
inc
call
inc
call
dec
call
dec
lcall
dec
lcall
push
lcall
push
lcall
call
dec
call
dec
incl
inc
incl
inc
decl
decl
dec
incl
inc
decl
inc
incl
ds
xor
xor
xor
ljmp
and
out
out
out
add
add
add
add
div
idiv
div
idiv
dec
xor
ljmp
pop
js
incw
insb
jae
xchg
jno
call
addb
cmpsl
nop
ljmp
nop
xchg
ljmp
jnp
incl
pop
lcall
pop
aaa
jmp
cmp
push
call
dec
call
inc
lcall
add
incl
add
jmp
out
jmp
out
incl
add
cmp
add
cmp
div
push
div
call
dec
jg
outsb
decl
js
lcall
mov
ljmp
fwait
pushl
movsl
pushl
test
pushl
popa
jp
inc
pop
test
jnp
ja
inc
cmp
fwait
jg
lcall
pop
pushl
push
pushl
cmp
call
out
add
add
add
add
clc
clc
clc
push
div
lcall
push
decl
jns
lcall
mov
ljmp
mov
cmpsb
mov
scas
scas
inc
mov
inc
mov
mov
push
jp
xorl
jmp
test
lcall
xchg
mov
jns
push
call
call
add
add
add
stc
stc
stc
clc
clc
clc
jmp
call
test
ljmp
popf
lahf
mov
lods
lods
mov
mov
mov
mov
scas
mov
jne
cmp
mov
ljmp
xchg
xchg
jmp
aaa
cmp
incl
pop
jmp
call
add
add
add
stc
stc
stc
stc
stc
stc
ljmp
pop
call
mov
ljmp
movsb
mov
mov
mov
mov
inc
mov
mov
mov
mov
nop
cmp
pop
call
dec
pop
ljmp
fwait
jmp
addr16
mov
dec
cmp
jmp
jmp
add
add
add
cli
cli
cli
stc
stc
stc
ljmp
pop
lcall
mov
pushl
movsl
cmpsb
mov
mov
inc
mov
inc
mov
mov
mov
mov
inc
mov
jmp
sbb
lcall
xchg
sahf
pushl
pushf
jmp
jbe
dec
jnp
decl
ljmp
add
add
add
add
sti
sti
sti
cli
cli
cli
ljmp
lcall
mov
pushl
cmpsb
cmpsb
mov
mov
inc
mov
mov
mov
test
mov
mov
inc
mov
xchg
cmp
inc
call
popf
mov
pushl
mov
dec
jp
call
ljmp
add
add
add
add
sti
sti
sti
sti
sti
sti
ljmp
lcall
lea
pushl
mov
test
mov
lods
scas
pushl
scas
scas
mov
mov
inc
mov
xchg
cmp
call
popf
mov
pushl
mov
dec
jo
call
jmp
ljmp
cmp
add
cmp
cld
cld
sti
sti
sti
ljmp
pop
call
mov
ljmp
mov
cmpsl
mov
fwait
pushf
mov
lods
scas
mov
mov
inc
mov
jge
nop
incl
add
call
popf
sahf
pushl
xchg
xchg
jmp
jae
inc
inc
decl
jmp
jmp
jmp
add
add
add
add
cld
cld
cld
cld
cld
cld
ljmp
pop
call
mov
cmpsb
nop
xchg
ljmp
mov
ljmp
popf
popf
mov
stos
stos
mov
lods
stos
inc
mov
js
mov
add
adc
scas
fwait
pushf
ljmp
lea
mov
pop
cmp
mov
sub
in
in
in
jmp
jmp
add
add
add
add
std
std
std
cld
cld
cld
ljmp
pop
decl
addb
test
mov
xchg
jmp
sahf
sahf
pushl
cmpsb
cmpsb
mov
test
inc
scas
scas
pushl
mov
push
es
incl
lcall
cmpsl
mov
mov
push
incl
in
in
in
in
incl
add
cmp
add
cmp
std
std
std
std
std
jmp
push
decl
test
incl
addb
cmpsb
xchg
xchg
ljmp
popf
sahf
pushl
mov
mov
jle
decl
lcall
mov
lcall
inc
sub
cmpsl
inc
das
jnp
and
in
in
in
in
in
in
incl
add
cmp
add
cmp
cld
std
std
jmp
push
incl
xchg
ljmp
xchg
loop
insl
lcall
mov
mov
ljmp
fwait
cltd
pushl
sahf
pushf
pushl
xchg
xchg
ljmp
xchg
lcall
cltd
cwtl
lcall
insl
jno
cmpsl
cmp
pushl
pop
out
out
out
in
in
in
incl
add
cmp
movups
sahf
call
lcall
arpl
jg
jl
js
mov
incl
call
mov
lcall
cwtl
loope
stos
xchg
xchg
ljmp
xchg
xchg
ljmp
xchg
nop
jmp
nop
pushl
movsl
movsb
call
bound
pushf
das
and
xchg
das
daa
ljmp
sbb
out
out
out
incl
add
cmp
add
add
add
add
and
mov
popf
call
incl
call
mov
jmp
mov
int
subb
ljmp
cwtl
loop
lcall
jmp
mov
mov
jge
lcall
ret
mov
mov
jg
arpl
xchg
sub
incl
sbb
lock
out
out
out
incl
add
cmp
add
add
add
add
and
inc
shr
pushl
xchg
in
jmp
call
cmpsl
sar
push
mov
incl
decl
enter
enter
shl
es
pushl
cwtl
int
xchg
mov
sahf
addb
cltd
addl
inc
mov
mov
jp
pop
pushl
incl
and
pop
adc
lock
lock
add
cmp
adc
cmp
jbe
icebp
incl
loopne
es
cli
pushl
std
std
out
std
std
ljmp
in
jmp
lock
decl
fdivrp
inc
xchg
lret
decl
ja
call
addb
jne
inc
mov
mov
dec
push
ljmp
dec
jnp
sbb
call
push
push
icebp
icebp
push
lock
add
cmp
add
add
jmp
cmpb
call
in
incl
call
lcall
sti
std
jmp
sti
std
lcall
incl
iret
out
pop
mov
test
decl
aaa
xor
xchg
cs
jle
push
faddp
enter
ret
pushl
inc
dec
pushl
sbb
jmp
sbb
inc
or
push
repnz
icebp
icebp
incl
add
cmp
add
add
lahf
jmp
hlt
es
call
pushl
icebp
sti
mov
decl
out
sti
ljmp
loop
jmp
xchg
loop
and
push
pop
ljmp
ljmp
and
jmp
pop
lcall
sbb
je
dec
pushl
pop
lcall
aaa
call
adc
decl
adc
inc
or
push
repnz
add
cmp
add
add
mov
shlb
and
aad
decl
incl
in
incl
out
pushl
mov
out
decl
out
push
stc
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
clc
clc
clc
clc
clc
clc
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
repz
add
sub
add
add
call
inc
fdivp
idiv
mov
icebp
call
lret
jmp
lcall
sti
std
jmp
sti
std
lcall
jmp
fldlg2
inc
hlt
hlt
jmp
stc
stc
out
sti
sti
cli
cld
cld
cli
sti
sti
sti
sti
sti
cli
cli
cli
cli
cli
cli
stc
stc
stc
stc
stc
stc
clc
clc
clc
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
add
sub
sbb
sub
mov
shll
in
cli
pushl
std
std
out
std
std
ljmp
in
jmp
lock
incl
mov
fxch
adc
cmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
xor
add
add
add
add
jmp
int3
es
sti
add
jmp
incb
shr
in
add
call
out
es
adc
call
add
mov
out
cs
ljmp
mov
jmp
sub
fldl2t
adcl
jmp
repnz
jecxz
sbb
loopne
add
cwtl
out
pusha
fldl2t
xor
jmp
and
jmp
clc
push
mov
pushf
je
jmp
sbb
cs
fucomi
sub
cwtl
out
cmp
jmp
add
jmp
pop
dec
jmp
out
cs
pop
jecxz
adc
loop
add
jmp
add
fsubrp
add
jmp
jmp
xor
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
inc
pop
clc
aas
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
sub
add
jae
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jae
add
sub
add
cmp
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
aas
cs
dec
xor
inc
lcall
dec
lcall
push
jmp
push
jmp
pop
jmp
lcall
push
incl
inc
aas
xor
inc
xor
inc
aas
sub
jmp
adc
lcall
push
and
cmc
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
call
dec
incl
jbe
lcall
mov
pushl
mov
mov
incl
imul
inc
pop
decl
push
pop
lcall
pop
decl
pop
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
jmp
push
call
lea
pushl
stos
test
inc
mov
mov
mov
jl
arpl
ljmp
test
ljmp
inc
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
ljmp
pop
lcall
xchg
cwtl
pushl
lods
scas
mov
mov
mov
shll
call
outsb
ljmp
jbe
scas
fwait
pushf
jmp
push
dec
pushl
xor
cmc
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
ljmp
pusha
jmp
cltd
pushf
pushl
scas
scas
inc
mov
mov
mov
mov
sahf
incl
pop
jmp
mov
xchg
mov
pop
inc
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
ljmp
pusha
lcall
cltd
pushf
pushl
lods
lods
mov
cmpsb
cmpsl
mov
mov
lahf
decl
push
ljmp
sahf
popf
ljmp
jae
call
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
ljmp
lcall
xchg
cwtl
pushl
movsb
movsl
pushl
test
mov
mov
call
and
ljmp
xchg
xchg
jmp
gs
decl
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
ljmp
pop
call
xchg
ljmp
xchg
ljmp
mov
cmpsb
mov
xchg
ljmp
mov
mov
cmp
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
cmp
cmc
cmc
push
cmc
cmc
jmp
pop
lcall
incl
jle
jmp
xchg
xchg
ljmp
lahf
popf
pushl
xchg
xchg
jmp
nop
jmp
jbe
ljmp
sub
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
add
add
add
jno
push
ljmp
aas
fwait
into
jmp
decl
call
cmpsb
ljmp
xchg
xchg
ljmp
test
ljmp
fs
sub
ljmp
sbb
cmc
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
add
add
jns
imul
lcall
mov
pushl
fwait
scas
ljmp
mov
push
mov
xchg
jmp
mov
mov
int
jmp
push
pop
incl
sbb
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
add
add
outsb
jbe
push
in
jmp
shl
call
mov
call
hlt
cmp
jecxz
sbb
loopne
sbb
out
call
decl
jae
call
dec
dec
push
jmp
pushf
test
pushl
sbb
push
unpckhps
cmc
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
add
jmp
aas
je
pop
lcall
jge
cmc
dec
idiv
dec
idiv
decl
enter
mov
ljmp
cmp
ljmp
sbb
gs
pop
pushl
pop
call
decl
incl
push
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
add
call
loopne
aad
call
idiv
stc
clc
clc
inc
idiv
decl
idiv
inc
into
repz
ljmp
hlt
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
add
lods
jmp
cmpsb
dec
in
pushl
fsubr
inc
cmc
idiv
hlt
std
push
std
ljmp
fucomip
jmp
in
call
in
push
hlt
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
incl
add
cmp
add
add
jmp
aas
je
pop
inc
mov
test
jge
idiv
lret
dec
idiv
decl
shr
out
inc
movsb
mov
push
add
or
and
and
add
cmp
and
inc
add
add
and
and
add
cmp
and
inc
add
add
and
and
add
cmp
add
cmp
add
add
add
fucompp
das
and
hlt
repnz
jmp
push
ljmp
adc
ljmp
mov
xchg
data16
or
add
add
add
jmp
scas
cmp
jmp
nop
adc
mov
mov
jmp
jp
mov
mov
dec
in
cmp
iret
jmp
fucomp
adc
ljmp
jmp
sbb
jmp
dec
shr
cs
push
aam
add
fucomp
stos
call
xor
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
add
incl
sbbb
add
incl
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cltd
cltd
lcall
cltd
cltd
lcall
cltd
cltd
lcall
cltd
cltd
lcall
cltd
cltd
lcall
cltd
cltd
lcall
cltd
cltd
lcall
cltd
cltd
lcall
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lcall
in
in
in
decl
inc
lcall
ljmp
push
pushl
jnp
push
ljmp
popa
incl
dec
incl
dec
lcall
dec
pushl
and
lcall
in
in
lcall
lahf
out
out
out
ljmp
pop
call
mov
mov
mov
mov
pusha
jle
inc
inc
pop
ljmp
pop
push
out
out
out
lcall
mov
icebp
jns
imul
lea
mov
mov
inc
mov
mov
push
cmp
dec
data16
mov
je
incl
icebp
icebp
jmp
movsb
movsb
push
repz
xchg
xchg
pushl
mov
inc
mov
mov
mov
jo
nop
mov
ljmp
imul
movsb
movsb
movsb
jmp
div
jle
insl
jmp
sahf
sahf
mov
movsb
movsb
inc
scas
scas
inc
mov
decl
mov
jne
stos
pop
cmp
div
idiv
cmpsl
cmpsl
cmpsl
ljmp
clc
clc
jnp
push
xchg
mov
jmp
sahf
sahf
mov
mov
incl
decl
xchg
xchg
ljmp
inc
sub
clc
clc
clc
ljmp
lods
lods
call
jae
incl
mov
incl
xchg
ret
xchg
mov
mov
mov
jmp
mov
xchg
xor
cli
cli
cli
ljmp
scas
incl
mov
ljmp
nop
int3
lcall
lret
xor
stc
lcall
jmp
mov
jmp
ds
cld
cld
cld
ljmp
mov
ljmp
loop
ljmp
loop
ljmp
xchg
aam
je
mov
inc
lods
stos
cli
decl
sub
pushl
lcall
and
out
lcall
clc
lcall
shr
pushl
lret
pushl
and
lcall
pop
popa
lcall
adc
push
or
pushl
mov
mov
jnp
hlt
decl
fdiv
cmp
icebp
inc
loopne
pushl
mov
ljmp
sar
and
cli
pushl
xchg
sar
and
in
pushl
xchg
sar
es
aad
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
push
test
jo
mov
test
loopne
xor
loopne
xor
aam
add
add
add
add
add
add
xchg
in
xor
js
add
add
add
jg
add
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
push
add
add
adc
add
add
or
push
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
or
push
inc
int3
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
pop
add
or
or
fiaddl
add
or
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
xor
xor
xor
xor
xor
add
add
push
sub
add
inc
add
insl
add
add
je
jae
add
inc
add
insl
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
or
add
dec
add
and
jbe
xor
add
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
inc
add
and
push
add
outsl
add
add
je
add
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
inc
add
and
push
add
je
je
imul
jae
add
cmp
or
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
inc
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
je
je
imul
jae
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insl
add
imul
add
add
outsl
add
insl
add
outsb
add
je
jns
and
inc
add
add
arpl
and
push
add
arpl
imul
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
in
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
or
popa
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
or
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
or
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
add
add
adc
add
add
add
add
test
add
sbb
add
push
stc
push
xchg
in
shll
fcomp
fmull
fisttpl
es
out
ret
leave
inc
rcll
int
ret
mov
loopne
call
in
add
add
add
add
xchg
pop
repnz
xorb
and
lcall
in
sbb
loope
mov
insl
mov
add
pop
loop
add
add
add
add
add
add
add
xor
sub
add
add
add
inc
add
xlat
add
mov
add
add
add
add
add
add
add
add
dec
add
add
add
add
lret
add
incb
add
add
add
add
add
add
add
push
add
add
loope
add
add
add
add
flds
add
add
add
push
add
add
jne
add
fldl
add
add
add
testl
add
add
add
jp
add
sahf
inc
add
add
add
add
add
add
add
add
jbe
jne
xor
add
add
in
add
add
add
and
add
stos
add
add
scas
iret
add
pop
add
add
aaa
add
sldt
jmp
add
add
sarl
push
fmul
jmp
imul
jmp
cmc
repnz
sbbl
clc
mov
xor
add
cmpsb
imul
dec
sti
mov
rcrl
dec
mov
lea
imul
faddl
jb
mov
aad
push
lds
lods
adc
add
iret
jb
adcb
jle
stos
xor
into
test
pop
push
ss
add
in
dec
sub
xlat
or
pop
popf
xchg
int3
out
sbb
iret
xchg
pop
sbb
mov
inc
inc
add
mov
in
cmp
xchg
fildl
add
clc
mov
jb
je
and
scas
and
icebp
cltd
mov
inc
enter
inc
add
cli
aaa
or
adc
xchg
pop
jbe
int3
sbb
or
cmp
bound
xor
cmp
lock
mov
cwtl
aaa
add
push
mov
push
and
add
cld
push
sub
or
mov
or
xchg
and
daa
out
out
into
mov
mov
sub
jb
cmp
lods
nop
adc
sbbb
sub
mov
int3
or
mov
adc
int3
mov
mov
lock
or
leave
popa
fwait
lret
push
push
push
or
xchg
mov
shr
popf
jnp
out
push
gs
icebp
lret
mov
sti
push
and
aam
mov
insl
mov
xchg
ss
cmpsb
pmaddwd
leave
fcmovbe
add
es
add
shll
sbb
psubsb
out
sbb
pushf
mov
push
movsb
rorb
lds
inc
pop
movsb
aad
pop
jo
imul
dec
mov
inc
fwait
pop
call
loope
int3
xor
js
in
nop
inc
and
mov
inc
mov
incb
popa
dec
fisttpl
sbb
into
jle
jg
or
fnstenv
adcl
cs
xor
sub
sbbl
stos
xor
outsl
les
inc
pushf
push
inc
lods
xchg
push
sub
and
fildll
test
xorl
idivl
pop
sbb
push
push
lahf
aad
add
gs
mov
adc
jle
or
mov
test
aam
outsb
add
xchg
add
add
add
sbb
inc
push
xor
pop
cmp
je
movlps
push
and
jp
clc
aaa
push
dec
mov
xchg
pop
ljmp
dec
and
jle
fisubrl
mov
fidivrl
adc
jle
inc
sbb
push
scas
add
sub
xchg
mov
in
inc
test
inc
mov
push
or
repz
mov
push
cmp
add
mov
into
ret
or
in
pusha
and
push
pop
push
movsb
mov
sbb
call
mov
fwait
xlat
xchg
enter
ja
scas
jmp
jmp
lret
add
movsl
dec
xor
adc
mov
jae
fcoml
das
bound
bound
js
jle
pop
adc
push
pop
pop
fwait
loopne
cmpsb
lods
cmp
loope
cmpl
xchg
or
aad
xor
pop
xchg
outsl
push
or
hlt
fisubl
adc
inc
es
sub
dec
lahf
bndstx
cmpsl
dec
xchg
sarl
pop
mov
mov
sub
add
xor
push
leave
push
jp
imul
sub
fwait
mov
xchg
xor
mov
mov
fnstenv
and
data16
or
insl
pop
xchg
clc
outsl
ffree
rorb
mov
adc
sbb
add
pop
add
sti
idiv
mov
cmpsl
loop
loope
or
sbb
mov
test
or
into
lds
movsl
jnp
xchg
fwait
jo
cmpl
mov
dec
inc
js
clc
fdiv
xchg
push
sub
sbbb
jno
or
inc
pop
jmp
mov
ficompl
sbb
cwtl
xchg
rorb
dec
pop
push
or
les
mov
xor
sub
mov
dec
inc
adc
jl
rolb
cmp
ss
data16
dec
inc
dec
jb
into
in
pushf
insl
test
outsl
sbb
xlat
sbb
adc
xchg
nop
movsb
jo
loope
lahf
and
movsb
aas
std
dec
and
clc
pop
std
rcrb
in
adc
cltd
loopne
mov
jl
push
test
cmp
sbb
mov
out
neg
push
pushf
pushf
cmp
rorb
lret
add
test
lahf
push
dec
daa
lods
loop
inc
mov
sahf
ret
lods
in
aad
dec
es
inc
push
pop
cmpb
in
inc
mov
lods
xorl
cmp
inc
adc
lret
and
lds
and
jecxz
or
and
pushf
out
cwtl
or
jno
xchg
cmp
push
cli
mov
loope
mov
cmp
sub
lahf
mov
jo
jbe
push
inc
into
inc
pop
jmp
in
sub
and
incb
test
mov
js
ds
pusha
aas
outsb
sub
jno
addr16
outsl
adc
push
and
movsb
mov
xor
test
add
jl
lock
test
pop
jg
fdiv
test
test
jb
and
cmp
jnp
das
in
inc
wrmsr
mov
add
addr16
add
xchg
nop
rcll
lods
test
and
fbstp
stos
scas
pop
loopne
sahf
jmp
pop
inc
and
cmp
xchg
mov
ja
jle
movsb
out
mov
xchg
sarl
pop
sar
lods
cmp
mov
inc
mov
aaa
aam
mov
stos
inc
fisubrl
sub
mov
ljmp
xchg
or
sbb
aas
inc
mov
cwtl
inc
lds
je
mov
xor
inc
clc
dec
aas
dec
or
jp
add
adc
xchg
aad
xchg
fsubl
push
inc
or
sub
mov
repz
fs
jmp
jmp
daa
jmp
out
jns
js
cmc
loope
xor
lahf
lahf
xchg
mov
imul
repz
test
add
mov
fmulp
sbb
fnstcw
inc
mov
cvtpi2ps
insl
adc
mov
add
xchg
fisubrs
ljmp
insl
daa
dec
inc
test
pop
repz
mov
out
and
repnz
rcll
in
cli
and
scas
lret
jecxz
sbb
clc
pop
jno
pop
ds
mov
mov
es
inc
ret
push
and
add
insl
inc
popa
dec
dec
mov
dec
pop
xchg
scas
add
cs
ds
xchg
cmp
add
ret
in
add
mov
add
hlt
or
xchg
jbe
and
arpl
cmc
and
and
repnz
xor
or
imul
jbe
xor
pop
inc
jae
jge
push
sbb
rorl
lods
jnp
and
inc
lods
int
mov
nop
loop
mov
pushf
ficoml
in
sub
rorl
out
mov
decb
xchg
stc
sti
mov
cld
int
bound
iret
sahf
jne
hlt
dec
pop
fcoml
repz
sbb
jb
shr
mov
xorb
sbb
sbb
pop
add
pop
fsubrs
mov
insb
enter
repz
decb
pop
lods
fnsave
mov
xchg
xchg
imul
insb
test
ja
cld
mov
mov
jne
adc
fiaddl
xor
mov
cwtl
push
fsubp
mov
cmpsl
jg
and
ficoms
std
int
mov
mov
mov
jb
mov
add
xor
sbb
je
fistl
xchg
out
cmp
pusha
sbb
lret
aad
inc
add
lahf
sub
mov
push
jge
lret
mov
repz
cmp
pushf
scas
imul
and
test
and
je
je
xlat
jmp
sub
nop
and
jmp
xlat
push
lret
jle
add
inc
imul
fsubs
imul
rcrl
std
movsl
leave
lods
movsl
dec
sarb
xlat
push
pop
int3
jge
jo
xchg
dec
xchg
incl
stos
lret
jne
cmpsl
cmpsl
dec
cld
adc
pop
movsl
aam
add
lea
stos
aam
jbe
ja
inc
jl
loope
fcmovb
pop
in
dec
xchg
movsb
xor
out
in
add
cmpb
testl
mov
dec
fisttpl
lret
xchg
dec
pop
aas
scas
or
xchg
and
sub
pop
roll
dec
incl
fistps
push
sti
mov
mov
jle
xor
hlt
adc
mov
or
jge
push
mov
or
notl
adc
aaa
in
jno
jo
int
daa
xlat
xlat
faddl
in
add
pop
aad
lret
sti
mov
jmp
bound
xor
dec
nop
repnz
inc
dec
repz
out
sbb
rorb
adc
movsb
sahf
inc
loope
insl
cmp
inc
add
addr16
pushf
data16
jmp
cmc
shll
je
pop
jecxz
outsb
xor
addr16
mov
mov
test
fldenv
pushf
popa
gs
push
dec
add
shlb
das
fists
mov
ds
push
rorb
addb
jb,pt
sub
jmp
lods
loopne
inc
cmp
popa
rcll
pop
mov
mov
cs
ss
push
push
sbb
adc
add
aam
cmp
bound
cld
adc
cmpsb
jmp
loope
push
fildll
loopne
clc
icebp
cwtl
mov
movsl
cmp
rcrl
out
pop
jg
xor
addr16
mov
xor
stos
into
inc
mov
sbb
cmpsb
out
clc
add
andl
cwtl
ja
clc
mov
in
or
push
pop
jnp
or
scas
push
test
nop
sbb
cmp
cmp
jo
in
mov
in
jle
mov
xchg
sub
or
cmp
or
sub
movb
sbb
insl
enter
sbb
loope
cwtl
dec
int
sti
xor
movsb
test
and
push
xchg
push
rcrl
dec
in
shlb
sub
push
add
xor
sub
dec
pop
roll
cmp
mov
jg
sti
test
shl
or
add
inc
add
cmp
pop
les
adc
popf
ss
lahf
icebp
out
mov
mov
fwait
daa
scas
push
rcr
push
or
xor
xchg
lret
aaa
mov
ret
fadd
fs
xchg
add
sub
push
aad
mov
xchg
dec
test
shlb
in
cwtl
es
adc
sti
and
cmpsl
xchg
mov
lahf
lds
lea
mov
lock
or
arpl
mov
push
gs
adc
cmc
sub
mov
movsl
cmp
scas
and
lds
sahf
mov
add
jae
inc
cmp
cmpl
imul
xor
outsl
jno
lds
add
aad
inc
mov
pop
rcrb
inc
adc
jbe
mov
cltd
mov
push
jecxz
adc
jae
pop
cli
call
xchg
fidivs
cmc
lret
aad
scas
outsl
stos
xchg
ficomps
andl
jge
cmp
loop
mov
ja
push
icebp
fsubp
lret
lret
mov
push
xchg
and
jns
outsb
or
adc
dec
stos
sub
cmp
movsl
inc
cmp
lret
fmuls
icebp
ljmp
movsl
hlt
xchg
mov
push
jb
mov
fsubr
test
xchg
push
mov
hlt
lahf
mov
sbb
push
int3
sbb
mov
jl
arpl
orb
and
pop
fdivrp
jo
push
inc
sbb
dec
and
out
jnp
aaa
insl
inc
aas
pop
dec
test
nop
mov
and
movsl
xor
and
xchg
and
add
mov
jge
in
out
jb,pt
rcr
cmpsl
out
gs
push
pushl
insl
sbb
xchg
lock
or
xchg
sub
pop
loopne
pop
stos
in
pop
adc
fsubrl
xlat
cltd
iret
xchg
pusha
push
mov
aas
sahf
jne
and
mov
jg
pop
rorl
lods
dec
sub
and
or
aaa
mov
cmpsl
sub
les
and
movsb
nop
mov
popf
sbb
mov
stos
mov
movb
mov
inc
jae
pop
push
gs
lret
xor
xchg
mov
fwait
movsl
out
repz
imul
mov
pop
in
lea
sar
xor
and
cmp
fistpl
fimuls
loopne
pop
jmp
add
movsl
aad
pop
sub
faddl
mov
adc
sbb
lds
mov
push
jns
iret
rol
or
loopne
rcr
pop
sarb
adc
icebp
sub
xchg
sahf
inc
xchg
add
cs
jbe
jb
xor
dec
or
scas
xchg
xor
add
jne
ret
out
fisubl
fimuls
pop
aaa
daa
mov
stos
rorb
xchg
dec
out
fstpt
out
sti
sub
addr16
out
fsub
ficoms
mov
or
push
std
mov
iret
movsl
sarb
push
inc
sbb
pushf
and
insl
adcl
pop
pop
loopne
sti
cs
aaa
into
mov
aaa
enter
loope
test
cmp
cmp
lea
push
out
test
adc
stos
insb
add
ret
in
in
jl
push
rcrl
aad
mov
aas
dec
popa
sub
or
pop
arpl
mov
or
stos
push
push
ljmp
orb
lock
pop
jns
cmp
lcall
mov
mov
dec
sarb
lahf
xorl
mov
or
xchg
andl
add
fadd
or
push
stc
xchg
lret
loop
jmp
pop
icebp
addr16
repnz
sbb
pop
mov
movsb
xchg
and
imul
jae
mov
jb
xor
xchg
pop
dec
movsb
in
rcr
mov
jo
mov
in
je
sbb
push
push
mov
cmpl
aas
pop
hlt
inc
xchg
pop
mov
movsb
js
dec
cmp
loop
mov
ja
movsl
or
xchg
inc
sti
adc
mov
add
mov
ja
mov
xchg
xchg
dec
pop
pop
movsl
inc
pop
ljmp
jle
jmp
mov
mov
sub
add
ret
mov
popa
inc
jnp
loope
mov
fsubs
cmp
gs
shlb
jne
addl
scas
inc
push
ficoml
dec
cmp
mov
sub
xor
sub
fcompl
jle
sub
add
xor
sub
in
scas
call
enter
mov
and
leave
cmp
jp
dec
sub
xchg
jmp
les
fdivrp
add
nop
add
mov
daa
fwait
push
int
xorl
xchg
or
fistpl
ljmp
push
jle
pop
or
jae
xchg
cmp
ja
sub
fidivrs
cmpsl
lahf
rorb
and
or
pop
xor
call
aad
insb
mov
pop
insb
fisttpll
xor
xchg
sub
or
cmpsl
lods
lahf
sarl
addr16
bound
xlat
jmp
add
jno
xchg
in
insb
and
movsl
push
xchg
pop
repz
push
add
and
sub
mov
shrb
push
pop
mov
mov
mov
jns
lahf
add
mov
mov
out
test
fisttps
rcrl
pop
jmp
test
dec
cmp
push
pop
out
mov
mov
jno
ret
cmpsb
rol
or
bound
add
or
adc
add
xchg
pop
mov
ret
add
shrb
and
ror
loopne
lahf
ljmp
jnp
jg
jp
mov
aad
or
outsb
insb
into
cmp
mov
mov
in
int
adcb
mov
int
jns
push
jmp
xchg
aas
mov
cmpsl
dec
in
in
in
out
add
xlat
xchg
add
shll
add
sub
xchg
adc
dec
jnp
sub
push
out
xchg
add
push
jecxz
mov
outsb
sub
and
loope
add
and
lahf
pop
popf
sbb
aaa
adc
mov
dec
or
sub
shlb
notb
gs
shl
pushf
push
out
xchg
loop
lods
fdiv
fmull
add
pop
fcoms
rolb
mov
push
sbb
jle
jmp
mov
mov
in
lds
imul
int
xor
ljmp
fidivrl
je
and
movsb
mov
adc
cltd
call
mov
es
cmp
outsb
mov
inc
repz
movsb
push
lods
dec
insl
imul
xchg
pop
add
jge
dec
sbbl
xor
fistpll
pop
sbb
sbb
mov
push
imul
and
jns
sbb
jae
add
inc
ret
push
jge
lds
sbb
inc
sub
sbb
sbb
gs
mov
adc
xchg
add
dec
pop
xchg
xchg
hlt
cmp
rclb
cmpl
js
aaa
fildl
pop
test
pop
add
inc
mov
fidivrs
lods
sarl
xchg
ret
repz
enter
enter
push
lds
sbb
insl
and
int
movsl
pslld
lods
dec
dec
push
test
dec
push
mov
stos
addr16
and
adc
pop
scas
cmp
in
xchg
aam
cmp
xlat
test
pop
sub
xchg
and
in
cmpsb
xorb
inc
push
mov
jae
inc
xor
jle
lahf
fsubl
mov
push
jmp
test
xor
dec
add
inc
push
sahf
cmp
mov
pop
jns
mov
fwait
add
mov
or
popa
push
lods
gs
or
mov
adc
test
mov
and
sbb
jge
imul
hlt
js
negl
sub
jmp
lock
cmp
lods
adc
fsubrl
mov
lea
repnz
push
add
cltd
es
pop
mov
fs
sub
mov
xlat
dec
mov
fwait
mov
lods
sahf
push
add
push
pop
mov
test
sub
dec
add
jecxz
and
pushf
dec
shll
je
mov
popf
jmp
push
mov
xchg
mov
bt
jecxz
xchg
rcll
dec
jmp
fdivl
and
push
fld
jg
adc
gs
pop
add
dec
cmp
jecxz
fwait
adc
or
int
in
add
add
inc
add
add
add
add
add
add
add
ljmp
mov
or
mov
adc
or
sbb
cmc
sub
add
add
fdivs
mulb
cwtl
fs
out
sub
repnz
cmc
push
jge
jg
in
in
pop
mov
lcall
mov
adc
lret
dec
daa
xor
popf
xchg
in
repnz
sar
lret
xchg
cld
mov
mov
mov
inc
push
mov
mov
mov
pusha
pop
add
jae
arpl
or
cmpsb
or
cmp
and
mov
imul
insb
repz
out
out
stos
outsl
jmp
hlt
arpl
xchg
lcall
add
add
insb
push
cmp
mov
addb
cmp
loope
fldenv
cmpsb
cmc
into
repnz
xchg
add
cmp
push
fs
inc
cltd
sarl
add
std
inc
xchg
xlat
pop
icebp
fwait
xor
add
fstpt
mov
xchg
jb
sbb
adc
jo
mov
jns
popf
add
jecxz
sbb
xor
or
sub
cmp
add
inc
outsb
add
xor
jbe
fildl
add
test
mov
jle
jmp
in
cld
stc
push
jns
lret
and
inc
xchg
pop
and
hlt
and
push
add
add
outsl
add
mov
add
add
add
fidivs
add
ss
movsb
jnp
add
add
je
add
add
add
inc
gs
add
add
aad
int3
rcrl
mov
into
jg
xor
ret
ret
rcr
ret
mov
les
add
sbb
pop
xor
sbb
popf
leave
jecxz
add
sbb
or
push
push
sbb
add
rcrb
push
sub
test
sbb
cmp
and
and
sub
add
cs
jno
pop
jg
pop
pop
add
add
mov
scas
pop
insb
inc
dec
push
inc
inc
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
push
int3
add
add
add
add
add
add
fs
mov
push
stos
add
add
add
adc
and
cmp
call
mov
cmpsb
add
stc
ljmp
imul
clc
xchg
xor
iret
jp
ret
push
push
outsb
add
pop
jmp
idivb
push
add
sub
add
push
rolb
int
sbb
mov
lret
push
add
add
xchg
pop
or
sub
sub
outsl
icebp
add
xor
pop
dec
jmp
adc
fs
std
jp
add
lcall
pop
xchg
out
jecxz
add
pop
xor
and
mov
add
das
roll
fsubp
add
sub
jne
mov
mov
pop
mov
aas
add
add
mov
add
adc
push
add
mov
jp
sub
fisubl
movsl
lret
cmp
cmp
add
clc
int3
add
leave
add
data16
clc
add
in
or
pop
fcomi
add
out
add
in
add
jmp
add
cmpsb
pusha
lods
sbb
sbbb
outsb
or
cmp
add
or
inc
movl
inc
xor
lods
cmp
xchg
loope
add
and
push
rcrl
dec
add
jno
add
roll
jo
add
cmp
mov
mov
add
add
enter
jl
mov
add
add
cmp
daa
xor
add
add
push
push
cld
out
loope
jp
sarl
push
jmp
cmpl
jbe
add
cld
add
mov
cmp
add
sub
stos
sub
add
mov
in
fwait
lods
add
stos
scas
mov
add
les
adc
into
add
fildl
jge
add
into
add
add
dec
lret
int3
data16
mov
add
mov
add
jmp
or
add
sbb
add
add
cmp
hlt
xchg
sbb
mov
or
cmp
add
pop
adc
xchg
arpl
add
je
aaa
add
mov
add
add
dec
das
add
mov
dec
add
add
dec
add
pop
add
cmp
sbb
add
pusha
dec
add
add
lret
data16
pop
add
insb
add
sti
sbb
fmul
add
add
outsb
add
insb
add
xchg
es
cmp
jge
xchg
add
add
nop
add
popl
in
add
or
push
add
insl
stos
add
sbb
flds
fiadds
das
in
add
add
test
push
mov
push
or
int
add
test
push
cmp
add
int3
add
mov
das
sub
pop
hlt
add
inc
mov
outsb
push
mov
add
add
push
xor
repnz
mov
add
or
scas
adc
mov
or
out
addr16
push
sub
imul
xor
add
enter
add
lods
dec
outsb
sub
adc
inc
mov
push
add
enter
push
add
dec
add
and
lret
mov
add
add
jp
pop
jnp
add
incl
shlb
fcomps
add
add
scas
add
add
mov
sbb
test
mov
mov
es
negb
cmpsl
js
add
sbb
push
jns
dec
sbb
add
fwait
or
add
pop
mov
adc
sbb
imul
mov
add
jns
dec
loop
pop
push
add
lock
out
add
in
add
and
cli
rcrl
add
bound
and
imul
or
add
int3
xchg
mov
push
ljmp
das
push
ret
ret
cmpsb
lods
sbb
add
add
add
add
jne
adc
aad
add
add
add
cmp
inc
fidivs
add
mov
or
add
mov
pop
jae
and
jnp
mov
dec
add
cmpb
mov
movsl
loop
or
sbb
and
mov
jle
insl
push
add
cld
ret
cmp
jge
dec
rorl
lods
mov
in
leave
inc
jmp
hlt
mov
add
rorb
scas
add
xchg
mov
add
out
sub
loope
add
dec
popa
mov
lahf
add
dec
add
add
add
sub
cmpsb
pop
add
rcll
or
add
adc
aaa
adc
ficomps
push
pop
push
lods
sub
add
push
jne
hlt
push
add
jp
push
mov
mov
movsl
icebp
dec
or
add
ficompl
clc
mov
and
dec
mov
add
cmpsb
mov
add
jle
add
xchg
shrb
add
pop
repnz
pop
mov
sub
jmp
mov
out
stos
in
or
xchg
nop
ret
cld
push
add
dec
push
nop
add
subl
hlt
stos
add
int3
mov
add
push
cmp
aam
bnd
push
shrb
lcall
mov
add
test
and
jns
in
test
nop
in
xor
iret
cmpsb
xor
sub
arpl
pushf
test
out
jl
test
cmpsl
pop
roll
out
mov
dec
test
add
mov
inc
and
add
ss
push
addb
add
pop
pop
dec
iret
rcrl
fimull
in
out
add
fwait
repnz
mov
hlt
iret
call
int3
sub
pusha
xor
add
dec
outsl
or
loop
pop
add
pop
adc
add
mov
dec
add
inc
and
bound
mov
insb
mov
orl
in
sub
jecxz
adc
pop
pop
add
push
ljmp
dec
jbe
into
ret
sub
add
sbb
int3
lcall
lcall
push
fcomps
add
shll
repz
or
mov
pop
fstps
movsl
mov
and
add
mov
jnp
add
xor
mov
out
add
stos
lret
inc
out
cli
mov
inc
pop
add
ret
out
fsubp
and
add
les
movsl
jns
push
sbb
fsubrl
add
add
jne
and
jbe
push
add
inc
test
add
sbb
ja
inc
mov
rol
push
cmp
add
mov
add
pop
add
add
scas
add
jnp
dec
clc
sbb
and
add
jns
cltd
pusha
add
add
testl
filds
addb
mov
add
jmp
dec
cltd
out
jg
add
popf
add
add
push
add
add
sub
pop
sbb
stc
cmp
add
mov
add
add
mov
popf
push
add
add
add
sub
push
flds
sbb
rolb
fldl
adc
add
aas
add
add
add
add
add
mov
rolb
add
add
add
add
add
add
insl
add
popa
jmp
aaa
add
sbb
adc
rolb
jge
insb
mov
xor
push
nop
and
pop
dec
cmp
jmp
shll
pop
in
cmpsl
dec
add
js
add
add
xor
adc
sub
or
incl
add
arpl
sub
lods
add
add
add
add
inc
and
jge
push
in
js
mov
les
add
stos
dec
add
add
add
incl
mov
mov
jae
add
mov
mov
add
aas
lret
add
add
dec
add
ret
add
cmp
add
ljmp
fsubrl
jbe
movsb
pop
add
mov
out
cli
add
js
jge
add
cltd
sti
add
add
mov
or
imul
insb
sahf
int3
jo
push
jl
add
mov
inc
or
out
or
or
add
add
add
adc
adc
add
add
mov
add
sub
rcr
aad
add
nop
xchg
add
insb
add
add
imul
add
mov
xchg
les
pop
jl
sbb
add
add
add
mov
ret
jp
add
addb
popf
add
stos
mul
push
add
daa
sbb
filds
scas
cmpsl
add
add
cs
mov
mov
stos
mov
lret
add
inc
add
incb
aam
add
add
add
out
lods
mov
rolb
fiadds
mov
add
aam
add
add
bound
add
cwtl
jb
incb
fisubs
inc
fdivr
add
add
scas
sbb
add
mov
ss
mov
jo
lcall
add
repz
add
and
cmc
iret
mov
aam
add
pop
cmp
add
cmp
inc
aaa
dec
popf
je
sahf
mov
inc
add
sub
enter
jl
add
add
pop
add
pop
add
lldt
push
xor
aad
add
add
push
add
sub
jns
push
xchg
adc
add
fcmovu
xor
xchg
add
add
pop
in
inc
mov
add
inc
add
jl
fistl
repz
add
mov
sub
int
push
adc
cmpsb
and
hlt
mov
gs
sub
xor
scas
xchg
rolb
fiadds
mov
fiaddl
add
xor
nop
out
add
and
lret
dec
fldl
adc
pop
incb
sti
addb
add
xor
iret
mov
xor
and
mov
add
int
jp
cwtl
add
add
fldt
jg
add
aas
add
inc
cmp
add
xchg
add
add
add
inc
adc
add
lock
cmp
xor
add
pop
sub
add
in
pop
ljmp
loop
add
dec
out
push
mov
add
sbb
les
pop
mov
sub
jne
data16
add
mov
imul
cmp
add
add
add
add
or
scas
add
add
add
mov
ror
fldl
mov
dec
add
sub
ltr
rclb
xchg
add
mov
cmp
jne
add
add
xchg
out
add
aas
add
push
add
jg
sub
add
outsl
add
add
pop
push
add
pusha
add
dec
add
add
jae
add
scas
add
xor
xchg
lldt
add
hlt
add
dec
add
add
and
inc
ja
jge
add
jge
add
add
sub
sub
pop
sub
dec
add
mov
add
add
xor
sub
bound
add
out
xor
movb
mov
and
push
sbb
pop
adc
pushf
and
out
jmp
sub
sub
lcall
les
lds
jp
push
xorb
sub
cs
cmp
xchg
jns
mov
ret
cltd
fucomp
test
rorl
xor
ud1
or
pop
or
fiadds
mov
jns
xchg
mov
inc
or
cli
lcall
test
ljmp
out
and
rorb
cltd
mov
cmp
add
into
dec
add
jecxz
movl
add
add
or
xor
jecxz
xchg
mov
push
fisubrs
test
aas
rsqrtps
sub
add
arpl
add
push
aam
lahf
or
add
std
add
lods
mov
cwtl
outsl
out
mov
sub
add
push
ror
lahf
mov
imul
mov
add
xchg
xor
and
ljmp
sub
xchg
ret
jb
lea
loop
inc
add
cmp
add
add
add
add
lea
jle
jp
sub
add
add
add
add
add
ljmp
outsl
cmp
cmp
add
add
add
stos
jb
or
pop
sub
pop
sub
xchg
add
or
add
add
ljmp
inc
and
sub
add
jmp
and
push
inc
jne
or
shlb
mov
add
jae
push
add
lcall
jnp
xor
add
jne
push
jge
bound
into
add
test
inc
push
fdivl
jno
cli
inc
mov
xchg
mov
popf
push
ret
add
mov
dec
stos
test
lods
mov
enter
or
lcall
xor
pushf
pop
dec
add
leave
jmp
ffreep
insl
das
stc
add
adc
stos
xchg
push
add
push
jbe
cmp
int
sub
stc
call
loop
out
mov
cli
push
cmp
xchg
leave
add
cmp
fs
inc
or
pop
inc
inc
push
pop
jg
pop
adc
sbb
push
and
inc
sbb
push
add
add
imul
or
dec
sbb
adc
dec
jecxz
add
push
aas
xchg
add
dec
jle
pop
mov
lods
pop
cmp
pop
inc
jno
dec
dec
pop
add
repnz
fcompl
enter
add
dec
js
jb
inc
inc
add
sbb
test
add
sub
les
push
add
xchg
popa
call
add
pop
dec
dec
inc
popa
add
dec
inc
aam
mov
add
mov
dec
add
add
adcl
jo
cmp
xchg
jae
aam
stos
addr16
or
outsb
mov
inc
push
repnz
sub
mov
sbbl
jg
enter
mov
aad
add
aam
mov
insb
push
add
fdivp
test
push
repnz
test
fwait
out
cld
jbe
dec
movsb
push
add
add
and
cmpsl
mov
xchg
sub
outsl
fstps
jle
arpl
add
xor
test
dec
pop
add
arpl
outsl
js
imul
mov
add
inc
out
add
mov
mov
test
cmp
arpl
and
jge
incb
andb
add
aam
loope
cmpsl
in
roll
push
ja
jno
inc
dec
add
fisttpl
cs
popa
xor
scas
xor
imul
push
inc
jne
add
mov
mov
sbb
and
xor
and
add
add
add
out
sub
ficoml
add
add
add
jne
push
mov
pushf
arpl
xchg
clc
cmc
push
add
add
js
add
imul
add
push
lods
jl
pop
add
mov
cmp
or
jne
cmp
insl
add
sub
sbb
movsl
adc
add
xor
push
add
xor
and
adcl
or
jbe
add
sbb
sbb
add
mov
jno
in
pop
les
out
test
dec
sbb
enter
mov
xchg
mov
out
lds
dec
xor
add
sub
incl
fadd
out
add
lret
aas
jg
verr
repz
add
mov
sar
pop
adc
add
adc
xor
add
sbb
enter
mov
cmp
movsl
jb
add
out
aam
into
ret
rolb
ror
enter
xor
inc
sbb
lods
cwtl
jecxz
xor
jge
mov
xor
xor
mov
add
jl
mov
in
jbe
movsl
sahf
nop
pushf
ret
lcall
ss
add
mov
mov
outsb
out
dec
add
into
xchg
outsb
jge
jns
arpl
and
add
in
push
loopne
add
xor
pop
lea
fiadds
icebp
mov
loope
cli
hlt
stc
add
mov
das
nop
daa
movsb
pop
loope
test
jecxz
pusha
add
pop
or
push
inc
push
adc
dec
dec
add
ret
loopne
loope
call
ja
int
out
add
popa
pop
push
push
inc
inc
add
push
inc
or
mov
xor
mov
jg
call
ret
outsb
jnp
add
dec
or
push
bound
out
pop
mov
inc
mov
cmp
mov
es
pop
cmovl
inc
inc
fisttpl
add
add
into
add
pop
fwait
cmpsl
call
in
imul
jecxz
jecxz
lds
out
js
inc
and
push
add
ds
fmull
popa
imul
push
and
imul
int
inc
nop
add
dec
test
add
enter
das
cmp
add
xor
clc
iret
dec
add
dec
mov
ljmp
jmp
scas
add
xchg
add
add
outsl
hlt
mov
add
xor
aas
sub
and
xor
cmp
es
int
cmpsl
cmp
jp
mov
fadd
mov
sub
or
sbb
fstpt
push
add
and
xor
add
pop
dec
dec
int
push
js
inc
frstor
xchg
sub
in
pop
sbbb
add
mov
xchg
add
adc
xchg
mov
in
imul
mov
add
fmul
enter
out
into
fcmovnbe
fld
push
mov
repnz
or
adc
nop
lret
and
sti
add
rcl
clc
dec
add
add
loope
mov
add
cmp
in
rcr
ret
int
cmp
lcall
fwait
or
add
ljmp
pop
push
loopne
or
add
sub
pop
sub
adc
call
add
add
jbe
add
bound
jg
add
xlat
cmp
js
cld
xor
sahf
shrb
jno
dec
push
pop
pop
lods
sub
add
aas
popf
mov
add
or
scas
mov
add
fcomi
xchg
add
scas
aaa
add
jno
rorl
add
ss
add
iret
fmulp
outsb
lret
or
dec
push
lods
cmpsb
lods
in
pop
call
repnz
cmp
ss
sub
adc
sbb
out
mov
jns
add
sbb
mov
add
imul
jo
dec
int3
mov
mov
cwtl
gs
and
pop
add
js
add
lock
in
cmp
sbb
xchg
ret
and
pop
mov
or
jle
jo
add
cs
cmp
ds
sbb
es
add
scas
cwtl
mov
stos
popf
int
ljmp
push
rcl
roll
hlt
add
sti
out
loopne
sbb
jmp
pop
cmp
jne
into
into
sbb
pop
ficoms
cmp
push
bound
and
add
adc
add
xchg
xchg
test
pop
dec
dec
add
movsl
es
iret
mov
adc
add
rol
fsubrl
clc
cld
repz
clc
inc
push
pop
add
mov
daa
add
pop
push
pop
xlat
add
cmp
push
insb
ja
add
leave
mov
mov
cwtl
in
cmc
add
add
mov
lods
scas
mov
or
xor
push
push
stos
lock
add
mov
mov
cmp
adcb
adcb
aam
inc
mov
add
or
pop
ret
mov
jno
ja
outsb
popa
imul
xchg
jno
add
add
out
adc
add
js
jge
jbe
add
outsl
push
add
shll
mov
ljmp
cld
sbb
add
and
add
cmp
mov
jne
jnp
pop
js
push
pop
add
and
sub
sbb
dec
jp
add
cwtl
add
push
inc
add
pop
add
pop
dec
ja
jge
jb
push
inc
add
xor
icebp
add
vpsubsw
aam
out
std
ret
fcom
faddl
fiaddl
cli
clc
je
jle
inc
or
icebp
add
xchg
sub
cmp
mov
add
lret
add
jg
push
push
leave
sbb
or
subb
rcrb
jb
add
xchg
insb
mov
cs
mov
add
jns
std
enter
hlt
out
loopne
out
in
add
add
add
js
pop
add
ret
add
gs
add
xor
cltd
add
int3
rolb
rol
rol
jo
inc
add
pop
fxch
push
stos
bnd
aaa
rol
and
push
lcall
add
jb
stos
lds
jp
pop
ljmp
dec
push
or
push
push
lods
fchs
xchg
xor
add
loopne
test
add
push
push
push
dec
inc
dec
dec
push
int3
dec
push
or
push
adc
cmp
daa
add
mov
or
rol
into
ret
add
add
adc
add
sbb
add
or
xor
and
sub
add
cmp
sub
cmp
test
in
add
xor
mov
repnz
repz
cmp
sar
nop
lret
push
and
pop
adc
mov
enter
add
add
es
lcall
sub
pop
sub
scas
add
test
mov
push
or
hlt
scas
mov
push
push
pop
inc
pop
add
jge
out
dec
jne
aas
mov
pop
push
and
repnz
bnd
fdivl
push
pop
dec
add
mov
add
addps
cmp
add
add
daa
sub
add
aaa
and
lret
sub
cmpsb
and
lea
mov
ljmp
adc
sbb
out
and
mov
test
sub
pop
aas
adc
add
xchg
add
mov
jecxz
inc
jb
ds
fwait
sbb
add
and
jb
arpl
add
scas
pop
pop
inc
mov
inc
xchg
enter
add
dec
jle
push
pop
push
dec
push
dec
subb
and
cs
push
inc
sar
cmpsb
repnz
add
jnp
dec
pop
inc
inc
dec
dec
add
xor
add
in
sub
filds
add
dec
push
dec
push
mov
loopne
add
out
cld
addl
pop
pop
cmpsl
aam
insb
mov
pop
dec
add
sbb
push
sbb
ja,pt
mov
pop
add
add
mov
mov
ret
xchg
cmc
add
add
xor
xor
pop
dec
fnstsw
lret
and
cwtl
fisttps
pop
add
push
mov
add
out
mov
in
es
rclb
mov
jae
insl
imul
insb
add
mov
pop
add
std
imul
sub
xor
cmp
mov
clc
fidivs
mov
sarl
mov
adc
or
or
das
add
mov
ljmp
pop
or
dec
inc
dec
gs
dec
dec
inc
sub
add
cld
shrl
sbb
add
jnp
arpl
jo
add
and
ss
add
jge
arpl
mov
scas
cmpsb
lea
insl
aaa
jle
daa
cmpb
dec
inc
in
pop
jo
pop
sub
jecxz
xchg
mov
add
jne
fs
jbe
dec
pop
sti
mov
outsl
jmp
push
out
mov
push
add
push
sbb
add
and
pop
mov
inc
sub
mov
mov
cmpsl
inc
add
daa
add
sbb
dec
add
add
add
arpl
mov
lods
and
pop
hlt
test
jg
pop
dec
inc
imul
inc
pop
dec
pop
dec
inc
roll
push
je
xor
dec
clc
movsl
imul
add
add
jno
jge
pop
jno
add
and
fs
out
je
add
push
add
cmpsl
clc
jbe
adc
add
imul
xor
add
adc
add
adc
pop
add
das
jb
pusha
sti
cmp
js
movsb
or
clc
cmp
jb
fmul
add
nop
add
mov
add
adc
scas
out
jbe
add
sub
movsl
add
mov
pushf
lea
sbb
inc
mov
bound
loop
mov
lock
xchg
add
and
lahf
mov
mov
lret
pop
cmpsl
mov
jecxz
out
loop
mov
add
repnz
add
add
sbb
add
jge
jnp
sub
out
xchg
add
sarb
add
test
cmc
lods
mov
mov
sub
cwtl
test
mov
inc
sbb
out
add
xlat
in
ljmp
out
add
mov
or
xor
mov
add
in
dec
add
mov
jl
add
xchg
stc
pusha
stc
or
add
je
xor
add
jecxz
sahf
jge
je
pop
jmp
andl
mov
mul
rcl
mov
subl
fcoms
scas
cmp
add
vpxor
push
lock
or
rolb
sti
cli
insl
push
and
mov
and
mov
rol
lods
mov
aas
add
and
xchg
and
gs
add
jmp
add
add
idiv
je
xchg
out
add
pop
aam
nop
add
dec
insb
gs
psubusw
add
or
test
rcr
fs
add
mov
ja
ret
enter
xchg
xlat
into
ret
add
aad
or
push
repnz
cs
or
add
loopne
add
add
out
ljmp
add
and
xor
ficomps
pop
add
sub
jp
pusha
addr16
pop
add
cmp
scas
jo
lret
fiadds
push
aad
add
enter
fwait
add
adc
jbe
mov
add
mov
add
sbbl
or
add
cmp
lock
ret
test
mov
add
jbe
sub
pop
add
add
inc
lret
mov
mov
fdivl
std
iret
mov
mov
daa
dec
add
push
sub
hlt
or
outsb
pop
push
cmp
cmp
sub
gs
mov
or
imul
add
jge
rcrl
inc
xor
movsb
movsl
and
lahf
cmp
sbb
test
pusha
bound
shll
sahf
mov
call
cmpsb
daa
insl
add
dec
push
sbb
daa
jle
out
mov
mov
cmp
test
gs
ss
pop
jns
aam
add
mov
cmpsl
add
mov
lock
add
add
add
sub
add
pop
pop
or
pop
das
pop
pop
pop
add
popa
jns
icebp
arpl
add
jnp
xor
in
add
sbb
push
inc
jge
outsb
fs
dec
xlat
xchg
mov
mov
fldcw
je
out
call
xchg
xchg
xchg
add
sub
sbb
xorb
popa
xchg
mov
lret
xchg
sub
add
in
movsl
shrb
fsts
nop
fadds
enter
std
ljmp
lods
out
fmulp
lret
add
cmp
and
cld
add
jecxz
lahf
cli
popa
mov
and
aam
cld
in
int3
test
in
pusha
movsb
sub
dec
mov
movsb
fldt
or
insb
dec
or
shl
ja
push
pop
pop
xchg
inc
mov
sahf
dec
or
add
push
dec
add
daa
dec
inc
sub
aam
jnp
fdivs
mov
cmp
std
sub
jae
pop
pop
dec
pop
inc
dec
pop
inc
int
inc
lock
fdiv
sub
inc
jl
push
rorb
pusha
arpl
pop
imul
pop
pop
cmp
daa
jb
add
jne
test
fildll
fcompl
or
int3
out
add
pop
add
add
add
outsb
dec
adc
add
cli
scas
add
stos
add
int
add
test
mov
add
lods
sub
add
in
mov
int
add
sbb
icebp
cwtl
push
sbb
data16
cli
arpl
imul
into
int3
into
enter
iret
dec
out
filds
cs
in
or
sub
sub
xor
xor
or
addl
mov
mov
and
add
in
add
pop
add
movsb
mov
fdiv
cmp
shlb
xlat
mov
sub
dec
dec
pop
add
or
ret
add
add
ja
stos
add
popf
lea
bound
jns
cmp
and
data16
scas
xchg
fwait
adc
scas
test
pusha
mov
mov
in
aam
loope
loopne
or
and
pushf
inc
popf
shrl
dec
or
jl
out
mov
movsb
mov
add
add
clc
dec
push
cmc
mov
cs
test
data16
leave
or
adc
adc
xor
stos
jnp
lcall
loop
icebp
mov
stos
mov
push
je
jnp
movsb
jae
pop
fldl
and
sub
cmp
inc
pop
push
enter
sbb
js
and
into
rorl
dec
iret
cmp
add
aas
and
dec
es
push
mov
xchg
jo
fwait
dec
mov
add
sub
pop
add
add
and
mov
ds
push
add
pop
add
add
add
or
or
xor
jb
sarl
xchg
ljmp
add
cmpsb
mov
int3
in
popf
dec
call
pop
push
add
mov
pop
cwtl
add
jno
addl
add
jmp
daa
shl
jb
cld
mov
in
sahf
or
mov
leave
mov
lret
loope
adc
add
mov
add
dec
std
add
mov
cld
in
mov
cmpsl
shlb
pop
fmul
push
push
cmp
xor
jbe
pop
jno
push
add
add
add
or
mov
add
jns
or
add
jle
sbb
sbb
add
add
lcall
adc
dec
fimull
scas
xchg
sti
mov
pop
fcoms
rorb
inc
inc
and
mov
jo
call
jecxz
xchg
lret
xor
add
fdiv
pop
shl
mov
in
out
mov
jmp
add
add
mov
add
sbb
ret
xlat
add
add
add
into
and
add
add
add
das
jb
adc
fdivp
xor
test
mov
adc
mov
or
adc
add
ja
int3
je
add
push
xchg
jmp
stos
lods
add
roll
add
and
add
ss
jecxz
and
fldl
in
lahf
or
stos
inc
cltd
cmp
rclb
or
std
or
adc
mov
pop
sub
test
sub
add
ror
out
lahf
sub
das
jbe
jle
jecxz
in
insb
xor
xchg
or
cmp
sarb
inc
add
or
setge
fdivrl
enter
add
lret
add
adcb
xor
mov
mov
lds
mov
push
int3
pop
push
aas
xchg
add
jae
aaa
and
das
mov
inc
add
lahf
pop
mov
test
dec
xor
pop
add
sub
les
mov
push
filds
fcmove
adc
bound
fs
xchg
sub
add
adc
dec
roll
dec
sbbb
add
sbbb
cltd
add
add
les
add
out
xchg
push
push
mov
lock
adc
test
pop
push
dec
jl
in
dec
dec
jne
xor
cltd
ret
xchg
lds
jle
add
sub
inc
adc
inc
sub
testl
cmc
in
ret
in
arpl
scas
mov
xor
or
add
mov
stos
pop
mov
mov
cli
sub
adc
push
add
sub
adc
xlat
filds
add
outsb
jbe
add
sbb
test
idivl
mov
or
add
adc
inc
dec
dec
icebp
jnp
xchg
jp
mov
inc
sub
pop
or
push
pop
push
add
sbb
lret
push
ror
out
jmp
insb
dec
sbb
fadds
or
in
jge
lret
xchg
xchg
add
add
fcomi
sbb
into
sub
push
mov
and
xlat
cwtl
or
mov
pop
mov
push
pop
mov
push
dec
ret
ss
jp
out
add
sbb
jp
add
adc
jmp
movsl
scas
loopne
stos
sub
aaa
in
data16
add
push
subb
mov
xchg
pop
lods
sbb
sbb
es
mov
lahf
adc
into
mov
popf
scas
dec
mov
repz
add
mov
lret
out
add
out
pop
es
fwait
add
add
cltd
add
lock
pushf
inc
jo
fcmovnbe
and
add
add
addr16
in
adc
and
xor
mov
and
push
push
insb
lods
mov
shll
mov
scas
inc
pop
std
aam
adc
add
into
mov
mov
mov
outsl
daa
pushf
aam
push
cmp
je
jno
insb
add
mov
cld
and
mov
add
adc
or
icebp
inc
ret
inc
ret
push
cmp
add
xchg
jns
inc
scas
add
mov
add
imul
and
push
mov
xchg
push
jp
sbb
xor
mov
mov
call
sbb
sti
xor
or
dec
xchg
push
scas
push
ficompl
punpcklwd
or
ss
call
roll
out
push
fmull
orb
roll
add
jge
jge
aas
jmp
adc
hlt
dec
test
jns
scas
pop
movsl
cmp
add
push
ja
add
daa
pusha
add
add
xlat
add
ret
jbe
jbe
dec
repnz
xchg
inc
cmp
xchg
cli
loop
add
or
mov
rclb
sub
adc
pop
aam
jns
xchg
or
push
push
xor
push
cmp
sub
jle
pop
mov
xchg
add
mov
cmp
insb
mov
mov
inc
lds
add
les
inc
xchg
jnp
out
mov
push
sub
mov
int3
add
add
xor
out
cmpsw
sub
roll
mov
cmp
mov
lods
add
jl
enter
pop
movsl
out
cmpsb
fcomps
dec
dec
rcrl
add
out
dec
mov
xchg
jbe
xchg
xor
out
push
scas
jmp
mov
test
cmc
into
push
push
pop
and
push
jg
sub
lods
inc
loop
jno
pop
mov
movsl
xchg
lods
icebp
mov
fisubrl
sbb
pop
bound
add
cmp
pop
lret
and
add
lahf
lcall
add
enter
imul
test
cmpb
xchg
jns
pop
in
cmpl
xchg
subl
std
cmp
push
lock
pop
sbb
test
push
push
xor
add
xchg
pop
jbe
xor
nop
lret
jno
xor
cmp
jp
add
dec
push
sbb
adc
int3
sbb
sbb
jnp
stc
hlt
or
jg
inc
nop
adc
aas
add
sbb
sbb
and
in
mov
outsb
ds
cmpsb
sub
inc
add
test
dec
jb
icebp
sbb
or
hlt
mov
adc
call
cmp
push
inc
add
add
icebp
sub
xor
into
jnp
enter
add
add
andl
lods
cmpsb
inc
inc
mov
add
std
and
lock
add
add
scas
add
add
pusha
stc
add
add
addb
or
add
add
mov
mov
daa
rcl
add
enter
push
imul
sbb
cs
or
ljmp
int
loop
adc
pop
mov
inc
and
mov
add
and
push
fldl
data16
add
add
incl
add
inc
sbb
decb
mov
imul
push
mov
push
clc
xchg
idivl
mov
outsl
leave
add
adc
leave
dec
or
add
pushf
add
aaa
add
pop
mov
lods
add
leave
jmp
add
adc
out
mov
dec
xchg
mov
adc
out
repnz
dec
scas
inc
mov
dec
or
jmpw
popa
out
dec
push
mov
add
pop
cs
fnstsw
stc
rclb
fs
test
sub
add
roll
aad
mov
enter
cltd
dec
xchg
add
int3
push
ret
add
add
ds
ljmp
xchg
outsb
fists
add
cmp
cmp
add
lods
xlat
push
cmp
shrl
out
add
leave
or
dec
iret
push
rolb
pop
js
add
add
and
pop
cmp
sub
stos
js
sti
mov
addr16
add
addl
jns
imul
loopne,pt
add
add
maxps
dec
or
xchg
in
adc
sbb
or
push
or
pmaxsw
insb
in
or
lock
inc
ja
sti
ret
mov
add
imul
rcrb
mov
or
mov
mov
pop
lcall
fcoms
shlb
add
bound
inc
sbb
mov
mov
or
pushf
loopne
shlb
aaa
dec
je
mov
or
sub
sub
mov
add
jg
mov
icebp
sub
ret
cmc
test
add
push
ret
sbb
or
pop
addl
xor
lds
xchg
mov
fcomps
jge
mov
or
sub
jns
jmp
sub
push
mov
add
test
popa
fists
data16
lods
imul
add
scas
cld
test
lods
stc
mov
jge
inc
in
gs
lods
sbb
cmp
sub
mov
add
daa
call
mov
imul
and
xchg
lock
popf
and
sbb
mov
movsl
sub
xlat
adc
out
jp
mov
outsb
int3
adc
decl
mov
in
dec
xchg
cmp
jns
lcall
xchg
enter
mov
mov
icebp
xor
test
sbb
cmp
add
jp
add
add
adc
mov
sub
enter
pop
sbb
xorb
adc
gs
daa
aas
fcoms
xor
lods
pop
sub
daa
xor
ljmp
adcb
xor
rep
lea
dec
cmp
mov
sbb
gs
gs
adcb
mov
dec
mov
mov
shll
fildll
mov
int3
aaa
enter
lcall
and
test
into
and
or
xor
and
push
inc
mov
xor
cli
mov
add
push
mov
adc
xor
inc
and
stc
sbb
or
add
sahf
sbb
dec
add
jns
mov
xor
out
ja
cwtl
int
and
movsb
mov
add
out
mov
ljmp
iret
std
int3
sbb
mov
mov
das
cmpsb
push
icebp
ret
incl
mov
add
mov
dec
push
sbb
push
das
add
lods
or
or
dec
xchg
lea
cmp
out
enter
or
jno
mov
lds
test
sub
add
inc
mov
sbb
test
sbb
imulb
shl
inc
inc
adc
lret
inc
popf
iret
lret
add
hlt
dec
jg
jne
dec
xor
shrb
xor
mov
pop
in
push
aaa
xchg
aam
pop
pop
fildl
stos
xchg
xor
inc
sub
mov
rcr
lea
ja
cmpb
test
xchg
xchg
pop
sbb
std
out
sub
xchg
push
je
dec
out
pusha
into
and
out
cmp
inc
dec
mov
mov
mov
inc
jmp
inc
mov
sbb
sbb
rorl
cmpsb
xorl
mov
mov
rolb
std
cmp
inc
faddl
dec
out
nop
add
mov
and
sub
jge
xchg
lea
xchg
das
add
and
addb
add
cltd
test
repnz
xchg
mov
cld
cmp
sub
mov
xchg
repnz
adc
stos
push
daa
insb
mov
repnz
dec
mov
mov
push
cltd
add
xor
or
pop
iret
lods
scas
mov
mov
aas
mov
cmp
sub
rcll
jmp
sub
sti
push
aad
fldl
cld
push
mov
aam
add
mov
mov
jmp
mov
push
cmp
push
lcall
push
lods
add
xchg
push
in
pop
jnp
sarl
adc
in
or
scas
test
enter
movsb
call
pop
or
pusha
fcomps
aas
scas
jmp
xor
stc
dec
dec
roll
movsb
xchg
stos
inc
push
or
add
test
or
inc
out
out
arpl
out
sar
es
adc
add
cmp
adc
test
add
subb
add
lret
sarb
dec
out
add
ror
lret
mov
jo
xchg
arpl
in
pusha
scas
aas
xchg
or
mov
xor
mov
push
jg
push
push
cwtl
ds
cli
data16
or
dec
call
add
mov
aad
add
addl
adcl
in
mov
push
sbb
insl
nop
imul
mov
mov
test
and
ror
cmp
dec
inc
mov
inc
jecxz
test
pop
jne
nop
jg
rolb
sub
cmp
lock
or
push
test
sbbb
adc
push
test
inc
aaa
mov
add
lret
push
movsb
fcmovne
lret
insb
add
ja
test
sbb
loope
iret
xchg
add
sarl
inc
inc
jno
popl
jp
jo
cmc
shll
and
mov
add
negl
adc
pop
rcrb
sbb
popf
lods
daa
in
mov
push
add
add
mov
imulb
adc
stc
mov
xchg
sbb
dec
mov
mov
cwtl
out
lods
int3
ret
ljmp
fisubrs
fldcw
pusha
fistpll
test
mov
pop
mov
ja
test
out
stos
cmp
dec
ret
aad
add
push
movsl
push
dec
inc
or
add
jo
jno
in
and
xor
jb
add
cmp
cmp
pop
loopne
scas
inc
cmp
aad
push
push
cs
aam
cmpl
lahf
add
pop
fs
in
jmp
mov
cmc
jns
add
sbb
movsb
into
addl
cmpsl
popl
adc
sbb
scas
icebp
insl
outsl
xchg
and
mov
out
arpl
popf
dec
enter
test
mov
scas
int3
pop
lds
mov
enter
in
leave
stos
aas
add
stos
pop
incl
lea
fiadds
dec
inc
fwait
pop
fs
jmp
aaa
stos
das
fimuls
jg
jns
mov
lods
call
xchg
hlt
push
or
dec
cmpsl
not
daa
dec
outsb
jnp
jo
jge
bound
stos
add
lods
enter
movsl
imul
roll
lock
dec
scas
sub
mov
in
dec
add
add
mov
xor
mov
cltd
push
mov
test
sbb
pop
push
sahf
dec
pop
sub
pop
add
push
fcomps
lock
sbb
repz
andps
or
add
sbb
das
jae
cwtl
ret
add
out
pushl
lahf
mulb
dec
adc
imul
je
sub
cmpsb
mov
mov
subb
or
inc
or
outsl
loope
movsb
pop
mov
lret
dec
mov
ljmp
mov
mov
pop
mov
loope
xchg
test
add
shlb
imul
pop
aad
sbb
popa
mov
mov
add
sub
pop
pusha
shr
test
push
or
add
insl
fcoms
aad
out
imul
dec
push
lock
adc
sarb
int3
cwtl
mov
add
fnstenv
pop
js
push
push
mov
xchg
dec
xchg
push
mov
das
cli
je
pop
sub
fs
mulb
dec
or
xor
sub
or
fpatan
mov
cmpxchg8b
outsl
xor
lods
pop
push
mov
cld
sub
cmpsl
pop
add
jno
into
enter
sarb
jnp
jmp
adc
push
cmp
push
fistpll
xchg
cwtl
adc
xlat
pushf
outsb
cli
lea
mov
adc
dec
add
fld
sub
cld
adc
mov
stc
popa
mov
adc
iret
mov
mov
pop
repz
sahf
leave
insl
push
sti
jb
int3
outsb
sahf
call
push
xor
jb
cs
int
mov
pop
mov
jg
xchg
or
sub
add
fldl
push
aaa
movsb
jmp
leave
and
xchg
pushf
scas
lahf
test
mov
add
in
add
or
mov
add
dec
movsl
push
sbb
xchg
ja
add
jae
mov
push
movsl
incl
add
adc
fs
sub
imul
xchg
inc
pop
insb
test
dec
mov
dec
mov
pop
aaa
xchg
add
repz
jbe
inc
add
je
int
push
or
flds
hlt
xor
sub
stos
inc
clc
push
jae
sti
add
adc
sub
lods
leave
fstp
orl
inc
or
inc
pop
push
dec
stc
ds
fildll
push
cs
push
repz
push
pop
pop
ljmpw
jp
add
nop
fs
mov
add
dec
dec
bound
mov
cmp
cmpsl
lea
jo
test
insb
xor
xchg
and
dec
adc
pop
lcall
xor
cmp
test
scas
aaa
push
or
out
pusha
outsb
add
sbb
fwait
mov
xor
pop
sbb
ss
dec
pop
inc
add
sahf
inc
mov
sbb
in
jns
loope
or
test
mov
adc
leave
daa
mov
rcr
dec
lahf
push
popf
sar
and
repnz
sbb
and
test
lret
mov
add
sub
in
dec
jns
add
call
call
xchg
adc
icebp
vpperm
add
stos
xchg
pop
daa
add
xor
xchg
out
movsl
orl
sbb
pusha
icebp
nop
and
sub
pop
ss
mov
dec
add
add
bound
push
pop
shll
add
lock
push
scas
add
dec
add
and
push
push
je
and
pop
push
mov
pushf
rolb
add
lcall
add
jl
add
pop
rolb
add
add
nop
sbb
and
pop
test
in
xor
arpl
cwtl
jp
add
insb
sbb
sahf
arpl
add
and
inc
push
inc
mov
mov
adc
add
adc
sahf
add
sub
push
movsb
sti
xchg
add
stos
std
daa
insl
cli
cmpsb
sahf
add
fbld
add
dec
add
arpl
dec
add
add
rolb
ja
sbb
add
aas
jb
popf
add
lods
sbb
xlat
mov
xor
sti
add
imul
test
jg
mov
scas
aad
cmp
adc
mov
fists
mov
pop
ss
insb
xor
fsubrs
ds
pop
cmpsb
lods
outsb
cmp
add
pusha
adc
scas
xlat
rcll
in
mov
fwait
add
lea
add
aaa
xchg
xchg
lds
xor
pusha
mov
push
jne
lock
icebp
xchg
addr16
add
jae
pop
in
push
test
add
dec
and
gs
pushf
scas
inc
add
push
cmpsl
dec
add
and
add
insb
or
push
lods
les
sub
sub
mov
mov
imull
add
add
mov
add
cmc
add
add
sbb
fiadds
add
cmp
cmp
pop
cmp
add
add
loopne
mov
add
jns
fdivl
xor
loop
push
mov
dec
mov
mov
iret
hlt
push
mov
adc
ficoms
jb
cmp
mov
mov
fdivr
add
xor
int
std
push
xchg
insl
inc
sub
hlt
mov
insl
pop
sbb
andl
or
fdivrl
dec
inc
movsl
inc
push
lods
push
mov
out
add
bound
sub
inc
fs
xchg
sub
or
fbld
and
dec
in
sbb
bound
mov
scas
push
movsb
add
add
cli
add
cmp
cmpsl
stc
sahf
ja
cmp
sti
sbb
add
out
jo
gs
test
mov
sbb
packsswb
cld
or
push
sub
orb
adc
jge
aas
in
dec
loopne
xorl
fwait
cmp
add
cmpsl
mov
push
inc
inc
sbb
sbb
dec
ljmp
rolb
cld
sbb
xor
xchg
out
push
mov
aas
sub
cmpsl
mov
ret
xor
repz
add
scas
push
fisubrl
rclb
mov
rcll
add
aam
sbb
cmp
fs
in
push
addr16
fadds
aad
cltd
jecxz
sub
into
movsb
lahf
dec
or
int
and
mov
xchg
add
cmp
nop
rcrb
sub
xchg
add
aaa
add
dec
iret
and
pusha
loopne
stos
out
push
test
ds
adc
xchg
pop
add
aaa
jnp
scas
loope
inc
cmp
mov
addr16
mov
sti
stos
push
call
push
iret
in
add
sub
ret
ret
add
outsl
add
in
sub
dec
scas
lods
adcl
scas
nop
sub
movsb
mov
fistpll
fimuls
mov
pop
das
inc
pop
dec
mov
dec
roll
imul
push
sub
sbb
xor
lret
pop
dec
jecxz
xchg
mov
xchg
lds
mov
adc
or
pop
insl
or
xchg
sub
xor
xchg
pop
dec
ds
fcoms
int3
mov
mov
call
pop
mov
scas
in
imul
pop
xchg
xchg
ds
adc
add
int
and
inc
mov
insl
andb
sub
jg
lret
dec
ja
test
leave
dec
ljmp
lea
jae
cli
bsr
subb
test
and
jmp
pop
into
mov
add
stos
or
out
mov
into
rclb
or
daa
iret
jno
rclb
loop
mov
mov
test
xor
ss
lods
inc
decb
bound
add
cmp
xchg
xchg
mov
loope
pop
sub
leave
test
jl
out
mov
clc
shrd
mov
push
mov
jle
icebp
gs
clc
in
lea
sarl
lods
add
addl
mov
ret
cmpsb
xor
call
add
mov
push
pop
xchg
out
or
aas
fisubl
mov
movsb
movb
and
sub
adc
xchg
mov
dec
call
cs
mov
sub
dec
fildll
inc
stos
rolb
je
stc
stos
add
inc
jmp
sub
mov
fwait
jo
data16
loop
push
mov
push
pushf
daa
and
xchg
jae
fisttps
mov
cwtl
mov
loopne
pop
xchg
in
pop
inc
imul
and
pop
fwait
enter
mov
pop
enter
sub
push
das
pop
addl
pop
out
xchg
add
mov
jle
pop
fwait
jmp
or
cmp
pop
jbe
add
add
adc
and
dec
mov
jle
fnstsw
enter
into
xor
add
out
and
cli
fistpl
imul
fstpt
icebp
loopne
iret
into
mov
or
test
mov
cmp
aaa
lock
mov
sub
xchg
sub
pop
fildl
insl
sub
mov
cwtl
cltd
mov
insb
int
scas
or
cmp
sbb
sti
cmp
dec
jb
adc
pop
lret
jp
add
fs
call
jp
xchg
mov
int3
in
outsl
adc
gs
jg
pop
arpl
inc
inc
xchg
mov
mov
arpl
sbb
imul
dec
in
push
lret
aaa
inc
ret
mov
inc
xor
pop
mov
fnstenv
cltd
push
dec
out
pop
sbb
xor
shlb
sub
sub
imul
push
jp
js
aad
clc
xor
and
clc
mov
movsl
hlt
jo
lea
cld
or
data16
in
aas
or
iret
add
add
cwtl
in
adc
lcall
xchg
fidivrs
or
xchg
icebp
inc
imul
mov
sub
inc
push
push
xor
jge
pop
add
or
scas
in
movl
pop
sub
sub
sbb
cmp
cmpsl
mov
movsl
xchg
in
add
loope
sbb
in
imul
lahf
out
jp
insb
test
in
arpl
push
mov
setnp
mov
add
or
cmp
shrl
add
call
add
mov
push
popf
mov
xchg
xor
sbb
inc
add
ljmp
outsl
or
push
adc
out
dec
outsb
dec
push
adc
sub
push
push
push
leave
push
add
fcom
ljmp
push
enter
shrl
mov
test
test
mov
sbb
pop
cmp
ss
sbb
adc
pushf
repz
rorb
shlb
movsl
cli
mov
test
iret
add
mov
out
mov
dec
fstpt
stos
sahf
out
mov
hlt
add
leave
xchg
stc
sti
xchg
outsb
dec
frstor
test
or
rolb
imul
shrl
movsl
idivb
test
lret
inc
insb
test
je
out
lret
dec
imul
insl
jmp
and
pushf
mov
dec
jmp
rcrl
inc
out
push
int
mov
imul
mov
push
fsubl
push
jle
mov
cltd
sub
rorb
push
fnstenv
mov
insb
cld
inc
dec
in
add
loop
das
clc
pop
xorb
call
stos
inc
sub
push
scas
sti
into
bnd
xchg
add
xlat
mov
inc
mov
pop
test
in
sub
lret
jecxz
jne
ds
cmpsl
push
mov
outsl
dec
xchg
xchg
dec
lret
gs
filds
add
add
in
cltd
and
xor
cmpsb
adcb
inc
mov
iret
movsl
test
cmp
xchg
mov
ljmp
movsb
or
mov
cmp
test
fcmovnbe
push
mov
mov
sbb
or
bound
das
ret
dec
lds
gs
add
jge
cs
dec
scas
mov
ja
mov
pop
sbb
call
jmp
test
outsb
ja
ret
adc
push
scas
or
jo
test
cmp
xchg
mov
lea
bound
push
andb
fwait
ljmp
lahf
add
add
faddl
dec
bound
fwait
pop
loopne
fimull
xor
mov
add
xchg
in
xchg
ljmp
mov
cmpsl
out
int3
jo
add
insb
adc
mov
cmp
jle
fldcw
into
and
push
inc
test
ficomps
add
clc
out
mov
cmp
adc
pop
imul
jne
mov
add
stos
int3
aad
mov
push
cs
data16
push
push
stos
ret
fiaddl
jmp
scas
shlb
xor
popf
xchg
add
mov
int3
sub
add
jecxz
pop
cmp
stc
add
xor
dec
dec
jp
add
mov
xor
mov
mov
add
je
scas
movsl
fmulp
and
pop
mov
or
inc
mov
inc
cmp
pop
sub
lea
push
cmp
add
mov
add
xor
add
jge
jle
lret
jno
imul
and
adcl
pop
push
ss
les
mov
xchg
mov
mov
jae
daa
add
add
fcoml
aam
rcrl
ljmp
add
lret
mov
lea
aad
lds
idivl
adc
cmp
mov
push
flds
xor
lret
lods
fcomip
ss
mov
sub
push
inc
sbb
dec
outsl
add
push
cmp
xchg
andb
lock
add
sbb
push
mov
jo
fnstenv
or
dec
ljmp
shlb
repnz
sub
clc
pop
jmp
shrb
call
lods
xchg
jl
cwtl
pop
test
or
cmp
das
mov
cltd
xor
add
pop
sub
add
xorb
popf
shll
jae
jns
shl
out
fucom
into
cltd
lea
gs
xchg
mov
jge
adc
lock
inc
xchg
xor
dec
add
testl
cltd
inc
mov
add
hlt
jl
push
inc
mov
pop
ds
and
add
mov
sub
sbb
or
nop
mov
or
movsb
cli
sub
cmp
sbbb
mov
lret
test
ds
mov
or
in
jg
scas
sti
jbe
icebp
mov
jp
hlt
fisubrl
testl
ds
pop
addl
push
les
dec
sub
dec
aam
aaa
pop
iret
xor
ret
lods
imul
inc
fisttps
pop
adc
sub
jnp
ret
and
nop
pop
add
xor
mov
and
add
jle
out
into
or
mov
pop
test
push
mov
out
push
sbb
loopne
mov
push
xchg
popf
mov
lods
push
lahf
inc
repnz
sub
pop
repz
loope
hlt
xor
outsb
xor
je
pop
rolb
sbb
scas
mov
and
insl
int3
outsl
sti
jg
rol
popa
in
push
aas
enter
test
lock
enter
cs
add
push
imul
adc
out
xor
xchg
push
push
loopne
sbbl
mov
ljmp
out
jno
aad
add
add
sbb
pop
test
incb
add
subl
xor
in
iret
xor
add
cmp
sbb
pop
test
inc
pop
jno
fs
mov
lret
sub
lock
mov
lods
xchg
add
cld
and
loope
fildl
rcrb
jg
sub
imul
add
mov
loop
add
mov
sbb
add
nop
insl
mov
out
movsl
insl
add
add
add
mov
arpl
imul
ljmp
add
xor
pop
arpl
add
jo
sahf
aad
or
add
mov
sub
into
add
mov
dec
add
sub
jl
xchg
or
mov
add
and
jae
mov
add
fimuls
sub
clc
imul
add
in
shrl
dec
push
jno
imul
mov
pop
mov
inc
arpl
loopne
cmpl
add
and
pop
sti
mov
inc
mov
mov
jmp
loop
cs
pushf
adc
dec
les
mov
dec
movsb
in
pop
aad
nop
js
mov
rclb
jle
clc
add
mov
inc
sub
push
jb
jae
dec
add
xchg
push
pop
cmp
lock
sbb
xor
cmp
ss
add
adc
fwait
cmpsl
xchg
sub
push
sub
sbbb
rcr
rcll
leave
mov
out
int
iret
mov
out
and
cmp
cmp
ss
add
outsl
cmp
add
std
and
hlt
xor
pusha
xor
add
push
mov
add
outsl
sbb
xchg
or
jb
xchg
xchg
rclb
insl
lods
jae
cld
aaa
mov
std
dec
scas
ret
mov
pop
cmp
jae
xor
jnp
mov
nop
xor
xor
shl
sbb
push
mov
jo
jle
sbb
mov
mov
inc
insl
add
pop
or
add
sub
lahf
add
add
mov
sbb
inc
je
bound
pop
add
jo
push
mov
aas
adcl
enter
add
into
in
add
push
daa
xchg
add
cmpsb
fs
mov
arpl
clc
sbb
xor
dec
lret
xchg
add
adc
adc
dec
jo
add
sbbb
jno
ja
jle
cmp
negl
test
adc
adc
jge
stos
rolb
in
stos
jno
pop
movsb
ja
ret
mov
faddl
jnp
lea
dec
mov
out
add
sub
in
xor
mov
repz
fwait
insl
es
mov
push
gs
outsb
mov
dec
xor
es
mov
jb
jns
aaa
cmp
jle
jae
adc
and
rcl
dec
mov
test
xchg
in
testl
call
add
test
rolb
fisttps
out
sar
loope
rcll
xlat
pop
pop
repnz
push
sbb
std
cmpsb
inc
jmp
sub
xchg
jmp
shlb
push
icebp
lret
outsb
adc
lahf
mov
divl
jno
mov
insb
shrb
movsl
cwtl
or
add
out
int3
lds
inc
arpl
std
pusha
pop
andl
mov
mov
lods
scas
inc
iret
imul
cs
inc
push
sub
test
loop
cmpsl
add
xor
xchg
enter
shl
xchg
scas
adc
repz
inc
insl
inc
xchg
or
jb
cmp
xor
cld
sub
les
mov
rorb
jns
jg
add
imul
add
or
mov
ret
repnz
and
scas
lods
push
add
js
cmp
push
and
insb
inc
jbe
je
lods
inc
mov
jns
push
xor
xor
sub
pop
pop
imul
popf
pushf
es
addl
divb
jnp
insl
iret
iret
jmp
arpl
inc
xchg
in
cli
imul
icebp
lret
in
lret
jmp
and
add
roll
loope
add
js,pn
sub
nop
mov
push
fldt
push
mov
dec
pusha
mov
pop
aas
ret
cmp
push
js
mov
fs
dec
cwtl
adc
xor
insb
jmp
leave
ret
clc
cwtl
lods
cmpsb
push
sbb
cmp
out
sub
rorl
inc
repz
cmp
iret
add
push
ret
dec
add
movsl
mov
add
push
inc
inc
or
rcrb
lcall
imul
pop
lods
sub
imul
cltd
adc
out
and
lock
add
xchg
imul
stos
sub
add
sbb
loope
cmp
fwait
call
xchg
mov
out
adc
mov
out
xchg
enter
enter
jecxz
insb
jp
inc
lock
pop
pop
lods
mov
movsb
lret
out
leave
js
out
inc
mov
add
or
gs
mov
xchg
outsb
mov
call
push
fbld
ds
and
mov
sub
outsb
in
lods
push
adc
pop
leave
mov
or
adc
xor
mov
iret
nop
pusha
sbb
xor
in
test
ja
addr16
loopne
sub
mov
lods
sbb
dec
pop
dec
dec
and
sub
dec
aas
dec
ret
addr16
mov
out
mov
xlat
clc
adc
push
clc
cmc
dec
aas
xor
sub
ret
add
mov
mov
inc
mov
or
xchg
sbb
or
jecxz
ret
in
arpl
mov
andb
mov
insb
scas
testb
pop
mov
jl
xchg
push
pop
rcl
xor
push
pusha
fdiv
loope
xchg
or
mov
daa
call
pushf
or
push
loopne
add
std
test
and
add
inc
add
pop
in
add
sbb
pop
xchg
fucomi
dec
pop
mov
sbb
xchg
jmp
push
mov
leave
adc
cmpsl
cmp
dec
pushf
movsb
fdivrl
pop
outsb
jns
add
scas
outsb
and
int
and
mov
add
test
jbe
adcl
add
dec
adc
leave
jo
lret
mov
outsb
test
ja
sub
add
dec
xor
fwait
jecxz
sub
movsb
rolb
into
or
popf
hlt
add
or
inc
hlt
dec
xor
popf
sbb
js
je
insw
dec
or
test
icebp
gs
inc
push
test
adc
mov
xlat
cwtl
je
push
daa
push
add
les
imul
or
jmp
les
fxch
fwait
xchg
adc
xlat
or
jge
scas
lods
or
mov
pushf
and
mov
inc
mov
pop
test
pop
dec
mov
push
popa
fstps
and
movb
lea
cs
or
divb
add
std
xor
aaa
add
xor
fdivrl
add
repnz
sbb
cmpsb
je
or
rcll
popa
sti
add
daa
jp
xchg
xchg
mov
jecxz
dec
push
push
ja
imull
lods
and
add
je
sub
pop
and
hlt
lahf
outsl
adc
or
pusha
push
pop
cmpsb
inc
push
xlat
mov
es
daa
jg
lods
dec
add
mov
mov
hlt
jne
dec
push
and
and
fldl
stos
xlat
pop
jmp
sbb
adc
xchg
push
mov
and
cld
pop
sbb
mov
inc
cli
cli
in
shr
movsl
sahf
mov
add
pop
popf
ret
xchg
xchg
ret
fs
lcall
sbb
test
scas
pushf
int
aam
imul
mov
sub
daa
loop
adc
pop
mov
jp
mov
sti
sbb
iret
bound
pop
add
mov
leave
andl
in
sbb
inc
cmp
inc
push
pusha
ljmp
xchg
cmp
push
aam
jne
in
mov
pop
mov
and
in
add
cs
adc
call
lods
mul
xchg
repnz
sub
xchg
inc
xchg
das
push
pop
mov
sbb
rclb
outsb
fistpl
jbe
lret
sub
xchg
dec
bound
xchg
std
cmpsl
imul
scas
add
push
imul
stos
std
mov
fistps
mov
loope
add
outsl
orl
pop
out
hlt
adc
pop
mov
daa
subb
mov
jmp
xchg
loopne
sub
nop
add
push
jmp
sub
push
push
daa
fwait
test
cld
jns
dec
sbb
hlt
pop
mov
or
sbb
fs
je
aad
add
push
lods
mov
mov
lahf
push
out
cmp
das
pop
jnp
aas
push
loopne
add
imul
cmpsb
movb
xor
inc
les
xor
lcall
cmp
repz
shrb
scas
nop
mov
add
stos
lock
js
push
add
or
shll
mov
rcl
cli
cmp
add
cmc
mov
cli
sbb
xchg
mov
add
div
adc
icebp
js
or
push
jne
cmc
ret
jge
add
imul
fwait
loope
loop
insl
jo
add
lods
int3
into
or
in
enter
pop
add
pusha
scas
lahf
lea
movsb
xlat
lcall
sub
insl
jge
push
ljmp
lock
lock
test
shlb
cmp
orb
push
adc
pop
stos
sahf
scas
loopne
or
adc
pusha
or
lea
xchg
adc
scas
and
sub
in
add
mov
push
push
in
pop
and
cmpsb
mov
out
movl
xor
add
pushf
add
loop
lret
jg
mov
xor
cmpsb
addr16
popf
lcall
mov
aad
out
clc
sub
mov
dec
lahf
or
add
test
mov
xor
jmp
pop
xor
leave
mov
jecxz
movsb
clc
out
gs
ljmp
into
addr16
mov
inc
lahf
das
out
sbb
ret
mov
rolb
pop
mov
in
cwtl
adc
hlt
sub
andb
pop
rclb
inc
ret
std
movsl
in
repnz
cmp
cli
add
bound
cmp
stc
adc
add
cwtl
mov
add
add
cmp
mov
dec
insb
pushf
and
add
std
imul
data16
shll
sbb
in
ja
iret
xchg
sub
pop
dec
mov
add
or
push
inc
and
andb
xchg
daa
jle
sarb
jno
jne
arpl
test
lret
fs
pop
adc
shll
in
rol
pop
jne
int3
clc
scas
push
pop
mov
add
or
mov
sub
dec
je
push
jp
and
push
out
inc
std
in
pusha
add
push
pop
pushf
mov
lea
cld
xchg
push
popa
inc
sbb
mov
movb
adc
cmp
jbe
sbb
xlat
in
divl
sbbb
cli
inc
es
pmulhw
clc
fdivrl
push
push
cmp
sub
pusha
jns
iret
mov
pushf
fcomp
popa
push
xchg
arpl
and
sub
repz
outsl
es
add
mov
push
inc
loop
stos
add
lret
mov
adc
sar
mov
sbb
fistpl
pop
dec
dec
inc
sbb
inc
jbe
and
mov
add
scas
sbb
in
xor
call
xchg
xchg
dec
hlt
or
jecxz
add
aam
xor
add
add
add
inc
cmpb
mov
push
cmp
push
mov
cwtl
movl
inc
pushf
out
mov
xor
repz
js
loopne
call
cmpsl
flds
inc
test
inc
subl
outsb
push
mov
xlat
fdiv
data16
xchg
cmp
scas
in
test
and
pop
sti
pop
ja
testl
jne
shll
js
sbb
add
add
or
popf
push
ret
into
andl
popf
add
pop
dec
mov
nop
popl
in
cmpsb
xchg
xor
mov
and
xchg
out
mov
outsl
jbe
add
aad
and
cmpsb
pop
add
add
ret
mov
in
sub
add
add
xchg
repnz
clc
div
mov
mov
pop
mov
inc
add
mov
add
add
mov
sub
add
sti
filds
add
fbstp
add
lahf
xchg
pusha
cwtl
mov
add
jnp
adc
add
rcrb
imul
outsl
int3
inc
icebp
sub
add
dec
adc
cmp
in
cmpb
push
lock
sbb
add
pop
jg
cwtl
mov
cmc
mov
mov
push
add
outsl
addr16
pop
sbb
mov
stos
cmc
addl
enter
dec
xchg
sub
and
call
aad
add
xorl
lods
outsb
mov
dec
cli
sub
cmc
add
sahf
lock
popf
into
jne
push
pop
push
pop
push
mov
dec
inc
stos
or
and
out
mov
hlt
adc
and
sub
and
or
ds
lds
std
add
xor
mov
rolb
and
pop
test
int3
out
iret
jo
mov
fst
cmpsl
dec
ljmp
in
out
hlt
ljmp
test
outsl
mov
lahf
mov
mov
mov
add
daa
leave
jns
lahf
das
lret
add
xchg
dec
scas
push
movl
out
notb
mov
jnp
adc
add
pushf
out
add
test
add
in
push
lcall
test
clc
cmpsl
or
lret
and
out
lock
add
and
pusha
sti
lods
xchg
scas
popa
pop
push
add
movsl
je
daa
mov
nop
cld
loope
add
inc
rcll
jg
mov
mov
add
lcall
sub
fisubs
icebp
sub
pop
adc
jne
sbb
insb
cmp
push
xor
sti
fdivs
push
cltd
adc
mov
mov
or
loope
jo
sub
dec
sub
dec
mov
les
mov
cs
loop
stos
out
and
sub
popf
sbb
add
lret
and
ljmp
jmp
movsl
cmp
ret
jne
adc
in
jnp
sub
rorl
and
inc
inc
call
setae
and
mov
aaa
xor
jnp
xor
fildl
pop
bound
test
lahf
xchg
dec
xor
pushl
pop
mov
add
js
xchg
pushw
imul
arpl
push
mov
or
pop
ret
mov
xchg
push
mov
inc
add
aaa
add
sub
add
ror
add
jmp
shrb
add
mov
and
mov
imul
xor
adc
bswap
cs
xchg
cmpsb
sahf
cmp
je
fbld
add
sbb
and
repz
icebp
fs
std
sub
aaa
mov
repnz
push
push
jmp
loopne
lods
faddl
rorl
ljmp
push
stos
cld
fldenv
std
sahf
mov
pop
add
jbe
in
mov
add
mull
adc
pop
inc
xor
xchg
js
inc
jno
or
dec
std
xchg
push
js
mov
mov
out
cmc
inc
cmpsb
add
out
out
or
lock
xor
out
xor
add
add
mov
sub
ss
leave
lock
mov
repnz
lods
dec
push
adc
cmpb
dec
das
push
add
mov
outsb
movsb
es
ja
or
add
roll
out
adcl
jns
lret
mov
push
jo
adc
xor
pop
jmp
mov
scas
fwait
pop
movsb
stos
push
imul
inc
xchg
rorb
in
je
outsb
mov
xchg
shr
insl
cmpsb
cmpsl
int3
adc
add
mov
adc
in
add
subl
fldt
inc
jmp
loopne
add
je
fimuls
fiaddl
jno
ljmp
and
push
das
push
push
cmpsb
lods
and
push
add
lods
call
and
shrl
jae
jge
add
addb
or
mov
imul
add
mov
cmp
ss
loop
aaa
fs
jbe
iret
sub
jle
and
lods
jne
add
call
mov
scas
rolb
into
insb
mov
inc
int
out
pop
lahf
add
add
mov
pop
sahf
add
pusha
aas
movsb
pmaxsw
lcall
mov
mov
bound
inc
lahf
cli
orb
add
xor
xlat
mov
jo
jb
iret
insl
mov
mov
enter
mov
push
int3
mov
popa
sbb
add
adc
repnz
testl
inc
shrb
jmp
iret
lahf
mov
add
pop
or
stos
add
push
cmpsb
or
fisttpll
inc
jmp
or
xor
fs
push
cmp
jns
mov
adc
inc
xchg
mov
nop
dec
iret
into
in
xor
sbb
jns
es
add
bound
lock
cmpsb
pusha
sbb
das
int
mov
push
fcmovne
stos
mov
lret
push
mov
imul
or
rclb
sar
xchg
push
mov
sub
insb
pop
stos
fcoml
fadd
push
imul
add
test
leave
mov
pop
inc
push
enter
xchg
jae
pop
adc
add
add
or
jecxz
ds
sarb
les
push
in
add
stos
sub
arpl
out
out
mov
dec
and
add
inc
rol
mov
jb
cmc
push
mov
and
loope
mov
mov
add
inc
push
rorl
add
inc
imul
mov
in
cmp
out
or
rol
fwait
dec
push
dec
sti
pop
mov
adcb
jg
jg
fdivrl
out
int3
pop
push
sbb
mul
add
cmp
idivb
fsubrs
sbb
sbb
push
jl
in
or
leave
ss
test
les
mov
aas
repnz
rcl
or
push
xor
sbb
add
cmp
push
jge
out
push
rorb
dec
scas
sahf
mov
je
pop
mov
sbb
repz
cmp
sbb
add
and
arpl
xchg
in
je
cmpsl
daa
xor
stos
int
cmc
rcrb
lods
dec
mov
addl
insb
fisubrs
test
push
and
jae
shrl
pop
ds
jae
daa
cmp
loop
ret
repz
lret
loope
inc
sbb
sti
mov
enter
lock
pop
outsb
add
mov
cmp
add
or
cmpsl
lds
nop
gs
adc
mov
aaa
cld
call
adc
or
xchg
add
mov
mov
dec
cmpsl
iret
popa
adcb
clc
pop
test
add
stc
icebp
lock
add
cmp
cmp
mov
add
cmp
sbb
push
and
sub
add
rcll
into
adcl
loope
sahf
pusha
add
add
inc
add
mov
pop
mov
cmp
lret
inc
mov
jp
hlt
jecxz
daa
or
loopne
add
mov
and
mov
test
xor
fisttpll
add
jae
lret
lods
loop
dec
and
add
test
rclb
add
pop
cmpsl
int3
inc
mov
lahf
pop
leave
cmp
aas
movsl
lret
jae
lret
shrb
push
sbb
pop
inc
cld
testl
repnz
in
cmc
int
lret
and
hlt
mov
or
xchg
jae
add
fsubrs
and
mov
add
push
idivl
mov
inc
pop
mov
je
dec
add
inc
jnp
add
or
es
dec
les
add
xor
push
cs
sub
scas
inc
clc
ror
in
mov
inc
out
dec
add
push
fimuls
adc
xor
mov
and
out
sub
and
mov
pop
push
xchg
pop
pop
xor
pop
mov
sbbb
jnp
aaa
imul
mov
lret
fcoml
xor
pop
leave
xchg
sbb
iret
dec
add
inc
push
int3
mov
jle
push
je
sarl
call
mov
sbb
es
add
mov
add
clc
cmp
ljmp
scas
imul
leave
cmpsb
jo
xor
cmp
mov
jg
xchg
fldenv
mov
cmpsb
mov
ljmp
sub
sbb
daa
dec
in
inc
cmc
insl
popa
fisubrl
imul
mov
xor
push
cmp
int
jl
pop
out
jae
pop
adc
movsb
inc
and
mov
repnz
dec
and
jl
add
fwait
call
dec
sbb
pop
or
iret
sub
sbb
mov
loopne
sbbb
jle
out
ljmp
daa
inc
or
int3
cmp
repz
add
push
xor
or
pop
mov
inc
vpaddsw
and
in
add
xor
ss
add
sub
adc
push
imul
pop
mov
pop
movl
stos
icebp
daa
jecxz
add
xor
ds
stos
lods
jbe
imul
mov
add
or
or
mov
bound
rolb
addr16
scas
add
jo
add
xchg
in
mov
dec
into
fildll
add
dec
dec
dec
xor
jo
mov
xchg
sbb
and
sub
in
clc
pushf
pushf
mov
add
ja
addb
lcall
dec
dec
ret
add
movsb
xor
in
sub
add
adc
dec
jns
mov
sub
add
gs
pop
dec
ss
pop
fcompl
xor
sar
pop
push
out
inc
sbb
add
mov
mov
stc
popf
pusha
push
inc
jns
xchg
fcmovnu
sbb
movsl
test
xchg
stos
lret
ja
mov
xchg
cmpsl
xchg
adc
out
dec
sub
dec
jl
fwait
jmp
mov
or
fadd
dec
jo
sti
jne
pop
dec
fwait
pop
out
out
dec
test
add
loop
mov
aaa
out
shrl
or
daa
xchg
push
cmp
mov
cwtl
xchg
decl
andl
adc
hlt
shr
fwait
sbb
pop
or
in
mov
sbb
pushw
insb
imul
bound
in
add
pop
pop
add
xchg
sbb
int
dec
iret
ds
or
xor
clc
add
fstpl
dec
hlt
jecxz
and
fisubs
jge
add
rorb
sbb
mov
gs
call
mov
pushl
add
out
je
add
bound
les
lods
rclb
fnstenv
je
xor
xchg
hlt
cmp
inc
dec
xchg
jns
xor
inc
cltd
cmpsb
rcl
int
movsl
jl
dec
and
in
add
xor
pushf
addr16
insb
test
xchg
call
inc
mov
cltd
fwait
aaa
out
cltd
ljmp
xchg
mov
pusha
hlt
push
jmp
pop
xor
repnz
dec
int
add
push
ljmp
testl
mov
lods
add
arpl
add
push
scas
andl
sbb
xor
inc
add
jle
pop
and
enter
mov
cli
cli
push
mov
flds
imul
inc
or
mov
xchg
in
outsl
jbe
pop
pop
add
pushf
push
pop
enter
add
clc
jne
and
mov
xchg
hlt
adcb
and
jae
dec
out
add
pop
xor
or
cwtl
mov
out
xor
dec
das
movb
je
xchg
mov
add
imul
int
rcl
div
pop
add
cwtl
add
out
add
sbb
jp
fcmovu
add
mov
stos
add
cmp
sub
pop
stos
add
in
add
shr
pop
sbb
cli
jbe
popf
fistpll
rcrl
add
add
mov
jl
inc
in
shr
jmp
add
xchg
push
jmp
cmpsb
lea
insl
mov
sub
mull
sub
xchg
call
add
dec
push
lock
js
into
xchg
add
arpl
add
pop
mov
test
push
ljmpw
add
adc
test
cmpsl
add
add
add
js
xorl
push
or
or
dec
and
inc
lods
lret
add
fs
iret
fidivrl
mov
add
js
in
dec
fwait
mov
mov
faddp
pop
add
inc
test
push
aad
into
jns
adc
mov
stos
lock
incb
ja
lea
add
sub
mov
lret
pushl
mov
and
dec
add
lahf
fwait
or
add
add
add
pop
xchg
leave
aas
mov
push
insb
js
lods
sbb
outsb
es
hlt
sub
xor
dec
xchg
cmp
repz
cmp
test
pop
stos
jp
rcrl
adc
jae
int3
in
add
adc
mov
cmp
out
movl
pop
jp
ja
add
inc
mov
aad
mov
push
mov
mov
adc
mov
add
dec
sub
sub
leave
add
rcll
lret
jmp
sbb
out
lods
mov
push
test
fsub
aaa
push
cld
push
lock
mov
shll
or
leave
mov
add
stos
mov
rolb
int3
jg
push
xchg
movsb
dec
popf
inc
add
mov
add
xlat
jg
dec
fstpt
push
int
imul
mov
popa
xor
addb
mov
and
inc
hlt
xchg
mov
push
mov
lods
sbb
pop
sti
push
xchg
xchg
add
stos
cs
imul
add
pop
adc
ficoml
imull
pusha
adc
das
mov
inc
sub
dec
cmpsb
mov
push
dec
inc
mov
mov
mov
fwait
sahf
ds
fadds
add
das
mov
loop
inc
je
xor
mov
inc
adc
stos
pusha
jae
outsb
fcomps
out
or
cli
pop
loopne
pop
jmp
out
add
mov
leave
stos
dec
jecxz
mov
jmp
leave
mov
dec
add
add
repnz
pop
jl
adc
mov
pop
xchg
adc
out
ror
mov
sbbb
arpl
movsb
or
jmp
inc
ljmp
adcb
data16
sub
push
in
mov
not
mov
inc
sti
or
xchg
push
flds
add
test
xchg
pop
jmp
shlb
push
push
in
add
rdpmc
xchg
arpl
push
add
movl
aad
lcall
sub
inc
jbe
dec
mov
or
icebp
xchg
loope
xchg
add
pop
add
add
call
cltd
in
jae
outsl
test
addr16
mov
or
dec
or
stc
les
add
mov
cmpsl
lret
in
lods
imul
pop
sahf
mov
jo
lea
jmp
imul
jmp
sti
push
jbe
xchg
jno
ret
stc
jbe
xchg
insb
push
iret
or
inc
cli
mov
fdivs
sbb
push
xor
das
call
f2xm1
scas
dec
cmpsb
sub
mov
sbb
xlat
int3
outsl
add
fisubrs
and
sub
inc
iret
add
scas
sub
add
les
jmp
test
mov
fs
inc
test
out
popa
loope
orl
daa
and
andb
pop
fsubl
mov
push
cs
sub
add
mov
xchg
mov
out
or
jp
cmp
push
sub
mov
sub
aad
sahf
pop
rcrl
out
test
movl
adc
and
cmp
xchg
jecxz
gs
xchg
adc
decb
sub
dec
ds
or
movl
sub
addl
inc
xchg
aam
pop
iret
aad
mov
and
jo
or
rol
pop
sub
add
mov
mov
push
lea
add
loopne
popa
ja
dec
push
pop
xlat
cmpb
mov
cmp
sub
aad
leave
mov
mov
jecxz
pusha
mov
or
mov
jg
shrb
add
pop
push
push
add
add
ss
nop
push
add
rorb
fstl
or
pcmpgtw
sbb
clc
cmpsb
jl
cmpl
dec
cmp
push
and
dec
xchg
xchg
push
int
leave
testl
ja
pushf
and
pavgw
and
xchg
aaa
fcoml
iret
outsb
inc
pop
movb
call
rolb
mov
ljmp
inc
xchg
mov
and
push
mov
add
inc
les
lret
and
inc
cmp
mov
pop
sbb
pushf
or
push
aad
daa
sbb
sbb
xchg
hlt
sub
sub
xor
daa
aaa
idivb
xchg
ret
inc
clc
jo
jmp
leave
xchg
add
xchg
fmull
dec
and
cmp
hlt
jmp
cs
xor
scas
dec
jle
dec
sti
movsb
fisttpll
push
push
shrl
and
dec
cs
ret
lret
mov
enter
pop
daa
cmp
add
sbb
and
cmp
scas
sti
cmp
cmpsl
push
jmp
into
cmpb
ret
sub
pop
xor
pop
data16
xchg
pop
xchg
adc
and
jne
dec
ljmp
pop
scas
cwtl
dec
add
dec
dec
sar
push
out
cmp
pop
ja
add
jbe
fdivrs
xchg
add
xchg
cmpsl
lahf
shr
mov
and
jno
fistl
fs
pop
pusha
mov
xchg
add
test
push
mov
xchg
inc
jo
gs
cli
loope
ret
jae
push
cld
mov
outsb
mov
js
jg
cltd
or
test
xchg
lds
xchg
cmp
mov
and
loope
daa
and
add
add
shl
add
dec
stc
stos
push
stos
js
ret
mov
inc
into
outsl
stc
dec
add
adc
cltd
into
mov
sbb
xor
nop
daa
movsl
gs
mov
lods
js
cwtl
loope
dec
mov
pop
adc
pop
fistps
icebp
gs
or
mov
add
dec
xlat
data16
popf
int3
out
lods
sbb
cmp
ds
sbb
outsb
jecxz
add
mov
jne
add
inc
lods
fidivl
sub
dec
les
pop
aam
pop
imul
mov
lret
jge
push
pusha
int3
cltd
cld
xor
shll
add
and
clc
inc
add
mov
sbb
test
sti
xchg
add
int
lods
add
lods
or
fiaddl
adc
cmp
hlt
into
pcmpgtb
ret
dec
repz
std
leave
stos
xchg
pop
int3
int
xchg
nop
out
data16
xchg
push
dec
jns
dec
jp
jb
cmp
je
inc
mov
vmwrite
and
adc
xchg
data16
adc
in
lret
sub
das
ret
add
ret
adc
decl
jnp
push
add
pop
pop
pop
xchg
xchg
xchg
or
dec
stos
pop
xor
popl
mov
icebp
adc
sti
cmp
mov
pop
dec
add
push
jle
add
mov
leave
out
jno
inc
push
inc
dec
cmp
and
imul
andl
mov
loopne
push
mov
cmp
push
js
gs
sbb
cld
mov
shll
arpl
pop
jnp
add
dec
in
repnz
push
fstps
jo
sbb
ds
stos
bound
call
sub
jae
cmpb
out
push
out
mov
dec
dec
outsb
outsb
test
int3
mov
inc
iret
int3
lret
pop
fwait
add
imul
cmp
inc
xchg
insb
es
mov
fwait
sub
insl
push
add
add
mov
ror
in
call
push
int3
mov
subps
imul
pop
and
dec
cmp
cld
es
push
cli
mov
add
xlat
movsl
roll
out
mov
movb
insb
fst
cmp
cwtl
and
cmp
out
xchg
pop
xchg
pop
add
subb
inc
sbb
add
pop
into
roll
mov
jae
adc
add
dec
mov
addr16
jns
cmpsl
shll
aam
dec
test
loope
bound
pop
pop
cmp
mov
dec
iret
repnz
sbb
dec
cmp
fstpl
ror
add
inc
fsubs
mov
call
mov
jmp
and
movsl
xchg
orl
pop
cmpsb
mov
push
std
push
js
push
cwtl
rclb
aad
sbb
rcl
xor
inc
cld
add
jg
hlt
and
xchg
add
sbb
pop
push
pop
xor
or
add
mov
movsb
xchg
imul
add
adc
fiadds
sbb
and
push
movsb
lea
add
mov
fistl
js
cltd
mov
jb
fisubrl
fstpt
movsl
aam
or
cwtl
push
lret
or
orl
fadds
or
pop
mov
add
mov
add
int
pop
jg
cmp
ss
imul
sti
push
jae
push
fwait
push
cltd
cmp
sar
in
jo
add
into
pushf
xchg
sbb
cmp
and
mov
push
adc
in
out
fsts
xor
pop
inc
pop
stc
push
dec
aam
jb
frstor
or
mov
pop
test
lcall
xchg
xor
int3
mov
dec
mov
jp
pop
pop
in
cmp
xor
inc
lret
push
push
jae
push
add
test
cld
scas
cmc
int3
cli
mov
or
rcr
mov
in
das
cmpsl
loopne
sahf
cmp
bound
push
fsubrs
lock
mov
xlat
vmovdqa
stos
and
mov
adcb
mov
ret
sub
lahf
inc
aad
pop
gs
es
cmp
stc
ficoms
gs
or
mov
or
mov
bound
out
insl
cmovno
sbbb
aaa
inc
mov
repz
loope
daa
mov
or
test
jmp
fdivrl
push
xor
cwtl
inc
mov
pop
fdiv
lock
lods
sub
enter
lea
rcl
shll
add
add
arpl
mov
add
mov
repz
push
add
mov
sub
adcl
add
into
inc
mov
jmp
xor
enter
inc
adc
add
out
adc
add
arpl
xchg
jno
out
rcl
mov
mov
addb
mov
jae
out
and
daa
mov
xchg
push
scas
repnz
cmp
int3
add
jecxz
and
or
shll
enter
adc
mov
add
add
add
add
inc
pop
dec
inc
imul
inc
xlat
pop
jle
push
add
adc
adc
arpl
inc
stos
jae
prefetcht2
jmp
pop
cmp
add
scas
pop
cmpsb
pop
or
push
ds
scas
pop
add
iret
add
inc
mov
in
loope
lret
cmp
movsb
pop
or
decb
ss
add
xchg
cmp
push
pusha
inc
cmp
cmp
sbbl
aaa
add
jle
mov
mov
aad
dec
cmp
cmp
fisttpll
enter
loopne
loope
and
push
or
mov
jae
mov
lahf
inc
xchg
cli
inc
lret
add
xchg
pop
add
mov
xor
xor
data16
jmp
sub
sub
pop
push
pusha
in
or
mov
adc
pop
filds
je
add
cltd
sbb
bound
popl
inc
out
jecxz
add
jle
add
adc
xor
push
loop
mov
cwtl
xor
add
cmp
add
sub
mov
iret
adc
imull
and
sub
push
ret
and
dec
add
or
into
add
dec
add
cmp
stos
jnp
or
add
add
jp
outsb
out
jns
and
std
bnd
add
sti
fdiv
mov
jmp
iret
or
out
pop
jnp
shll
xchg
jge
sahf
or
mov
lds
sub
cwtl
into
sub
wrmsr
in
mov
sbb
ljmp
testb
int
xchg
and
loop
nop
mov
inc
mov
cltd
inc
adcb
add
lock
clc
into
call
rcr
inc
cs
mov
pop
popl
cwtl
jp
jnp
mov
push
test
insl
or
mov
andl
push
imul
andl
mov
sbb
add
xlat
insl
pop
pop
jns
inc
adc
and
mov
mov
insb
sbb
dec
mov
in
inc
jp
loopne
lahf
sub
je
movsb
scas
outsl
scas
add
iret
jge
add
ja
je
insl
lahf
add
jnp
aad
lret
out
add
mov
add
rcrb
testl
daa
pusha
add
xchg
out
dec
cmp
sbb
subl
add
lods
mov
repz
call
loop
sti
mov
add
inc
or
ret
ret
stc
add
jg
scas
xchg
js
add
jg
lods
adc
stos
xor
jne
lods
sahf
jle
mull
cmp
call
insb
mov
loope
cld
jle
data16
or
dec
mov
or
xchg
or
mov
loopne
add
push
push
mov
scas
jne
mov
xor
fs
out
mov
and
je
faddl
xchg
sti
add
adc
mov
push
outsl
jg
pop
pop
sbb
idivl
pop
leave
jbe
mov
out
add
lahf
add
mov
popa
xlat
ret
gs
add
mov
add
out
adc
or
cmp
dec
or
dec
or
dec
sbb
push
movsb
push
orb
sub
xchg
dec
jmp
fstpl
jo
adc
test
add
fld
test
nop
add
and
fimuls
mov
loope
jmp
xchg
lret
or
nop
lods
mulb
imul
imul
and
mov
out
es
enter
or
jle
imull
ds
arpl
sarb
push
push
std
lea
lret
cmp
ss
inc
fsubr
xlat
push
in
fstpt
adc
xor
push
sbb
cmpsb
fsubrs
rolb
out
mov
jp
movsl
dec
sub
pop
int
test
dec
mov
push
and
in
jo
jns
sbb
mulps
add
movsb
push
add
jg
jp
or
sub
hlt
pop
sub
mov
enterw
add
aaa
jo
adc
and
movsl
mov
jmp
add
sbb
pushf
cli
add
jge
aam
push
and
pusha
imul
pop
fs
into
inc
ret
sub
pusha
xchg
jle
ds
cmp
repnz
ljmp
aaa
jle
cmpsl
fadd
or
mov
add
add
lret
std
sti
insb
fcoms
inc
out
test
adc
adc
add
push
mov
push
inc
jno
lret
int
sbb
sbb
or
sub
jle
inc
les
push
push
adc
stos
push
jbe
and
imul
hlt
sbb
rclb
gs
or
sub
jl
pop
je
sbb
mov
repnz
xchg
mov
push
mov
inc
in
pmullw
jecxz
cmp
aaa
jl
jnp
insl
mov
in
notb
in
popw
cmc
sbb
dec
lea
mov
xor
loope
mov
fldl
jo
incl
sub
out
add
dec
out
out
das
sub
mov
out
sub
add
mov
insl
mov
loop
leave
daa
inc
xchg
scas
mov
pop
outsl
loop
aam
les
mov
icebp
out
mov
mov
clc
jecxz
xchg
xor
popa
mov
jnp
xchg
xchg
mov
scas
inc
sub
dec
adc
add
lahf
push
push
loopne
add
add
pop
add
pop
loop
movsb
lret
jg
xchg
lcall
pusha
sbb
mov
lds
mov
pop
cs
dec
sbb
enter
mov
sub
add
les
sbb
or
call
or
push
xor
nop
dec
cmp
add
daa
sahf
pop
inc
add
sub
clc
cmc
add
add
imul
jp
movsb
idivb
in
loope
sbb
lea
das
shl
dec
mov
imul
lea
stos
in
inc
push
push
stos
rolb
mov
add
push
nop
fld
inc
ret
xchg
fwait
jae
je
pushf
sbb
les
xlat
mov
push
daa
loop
in
fsubrl
les
dec
jbe
les
add
pusha
js
lahf
mov
int3
ja
shll
repz
pop
pop
nop
mov
add
jl
dec
outsl
sti
fs
or
push
mov
jmp
xor
mov
sbb
fistl
inc
sbb
add
add
inc
popa
sbb
sub
jbe
mov
add
sub
jb
stos
sub
jb
xchg
pop
dec
mov
mov
inc
std
mov
or
outsl
mov
mov
pop
jp
xchg
mov
mov
inc
sub
jo
sbb
mov
add
repz
xchg
mov
loop
out
sbb
dec
push
mov
add
lcall
add
arpl
sub
mov
lret
add
sub
mov
inc
push
paddsw
scas
or
add
sbbl
int3
in
jno
add
lahf
mov
popf
mov
add
xchg
xchg
sbb
or
xor
data16
xchg
jg
mov
fdivrs
test
mov
mul
add
int3
adc
frstor
inc
inc
sbb
cmp
sub
por
jmp
stos
dec
and
pop
or
add
stos
jge
shl
out
xchg
pop
setno
add
inc
popa
dec
mov
xlat
cwtl
dec
repnz
or
sbb
push
aam
aaa
and
cmp
pop
xor
inc
imul
or
fwait
pop
fs
lret
js
xchg
adc
pop
clc
cwtl
and
add
scas
ds
stos
out
dec
ljmp
testb
push
bound
pop
lods
aad
adc
movsb
dec
das
sbb
cmp
xchg
es
test
mov
js
ja
xor
adc
push
add
add
sbb
xchg
adc
cld
xchg
test
outsl
outsl
lock
push
iret
add
dec
mov
cwtl
push
mov
sub
outsb
inc
pusha
gs
in
test
cmpsl
jecxz
sbb
scas
pop
add
inc
mov
ljmp
call
or
pop
jnp
cmp
add
das
icebp
push
fstps
xchg
pop
stos
xchg
pop
push
push
mov
iret
push
orb
pop
mov
adc
inc
jnp
sbb
xchg
add
lahf
fisubs
cs
mov
mov
hlt
into
test
lret
add
pop
scas
xlat
push
idiv
cmp
pop
call
icebp
xchg
jg
clc
xchg
dec
mov
push
je
add
sbb
add
mov
adc
sbb
jge
fmulp
or
push
in
cli
sbb
data16
mov
orl
int
mov
add
dec
jg
stc
fisttps
push
loop
adc
xchg
push
mov
add
fimull
mov
inc
sbb
push
mov
dec
roll
in
lods
add
xchg
add
add
ret
jp
push
movsl
test
inc
sahf
inc
aad
ljmp
pop
add
xor
mov
jmp
dec
sti
adc
dec
das
adc
xor
mov
dec
adc
lret
or
clc
jecxz
add
loop
mov
sahf
enter
xor
inc
xchg
imul
inc
jae
mov
pop
xchg
fimuls
scas
lret
mov
cmpsl
rorl
icebp
lea
jbe
jnp
mov
mov
sub
sub
lahf
test
sub
mov
sbb
cltd
lods
nop
bound
stos
jle
outsb
lods
leave
adc
scas
into
movsl
repz
popa
insb
push
jne
jno
in
push
imul
and
popf
inc
mov
mov
enter
fidivrs
pop
imul
adc
push
pop
inc
lods
shlb
call
lcall
int
xor
incb
scas
push
and
pop
or
cmp
fwait
ljmp
sub
xchg
mov
inc
sarb
fadds
sbb
mov
cltd
pop
adc
in
pop
js
sub
jb
mov
adc
mov
jae
xchg
pop
in
dec
dec
std
xlat
outsb
pop
ss
sub
pop
out
push
jg
mov
fists
int3
jns
jbe
popa
fyl2x
jo
jbe
cmpsl
jge
rclb
adc
add
mov
popf
pop
jl
fsubrs
lahf
xor
test
cmp
push
scas
mov
testl
in
add
mov
pushf
gs
xor
cmp
insl
sbbl
outsb
lcall
xor
lcall
iret
mov
fwait
push
leave
dec
test
loope
js
vmaskmovdqu
icebp
testl
dec
sbb
jae
enter
ljmp
jmp
xor
stos
es
dec
mov
mov
mov
jns
adc
or
adc
addl
das
sub
pop
add
addb
and
xchg
mov
mov
mov
add
pop
pushf
jmp
or
add
test
add
incl
add
push
fimull
fisttpl
mov
dec
lahf
add
test
push
neg
cs
inc
mov
fwait
dec
mov
stos
filds
add
add
int
add
into
add
add
in
dec
fiadds
add
dec
pop
insl
mov
or
xor
add
in
dec
jle
mov
stc
cld
out
sti
sub
dec
jl
fiaddl
pop
mov
dec
les
inc
sbb
jle
mov
add
xor
jl
jne
push
xchg
xchg
sbb
adc
push
aas
xor
lods
add
cmpsl
pop
mov
mov
mov
jle
fstpt
sti
add
arpl
inc
fwait
pop
test
mov
dec
pop
test
loop
push
cmp
das
clc
aad
jle
sub
lcall
ljmp
inc
rolb
int
in
ficompl
nop
push
mov
add
pop
and
push
sbb
xor
inc
popf
in
mov
add
dec
ret
mov
mov
add
cs
adc
sub
fbstp
or
and
addr16
int
mov
mov
or
inc
movsl
shrb
outsb
push
push
insb
lahf
and
jno
cwtl
add
sldt
jmp
rcl
cmpsl
cmc
adc
mov
xchg
sub
cmp
rcrl
lret
inc
push
mov
ret
push
mov
flds
in
add
jb
aad
repz
jp
xor
sbb
mov
movsb
mov
lret
int
add
roll
adc
inc
xchg
add
cmp
inc
bound
pop
clc
mov
bound
jnp
sub
scas
lods
pusha
mov
cs
cltd
adc
xchg
dec
popa
dec
in
pushl
dec
mov
or
mov
push
or
mov
sbb
cli
loope
rolb
jl
add
lret
das
inc
jmp
sbb
push
and
enter
dec
loopne
pop
push
jge
fidivrl
mov
rorb
mov
add
xchg
xchg
sub
lsl
sub
mov
xchg
mov
push
sub
mov
sub
push
sub
mov
rcr
ljmp
pop
dec
sbb
push
scas
jl
sbb
dec
jns
sbb
test
pop
or
add
adc
mov
adc
inc
jl
arpl
insl
les
push
jge
lahf
lea
sub
mov
jg
inc
sbb
xor
add
fiadds
shll
jecxz
dec
negl
jmp
popf
mov
sub
sti
mov
add
push
roll
cmpsb
mov
stos
jmp
insb
lcall
movsl
rcll
push
ret
or
stos
test
mov
jle
add
or
mov
push
push
xor
push
adc
jns
fildl
scas
or
pusha
adc
int3
mov
ret
ljmp
pop
pop
pop
adc
dec
aas
jns
in
add
out
stos
sbb
mov
jno
aaa
add
nop
cmp
inc
jle
inc
jb
mov
fisttpl
cmc
ja
call
sub
add
cmc
adc
rcrb
rol
jno
xor
or
mov
xchg
or
pushl
or
adc
or
xorb
add
repnz
inc
aas
push
stos
add
add
clc
mov
pop
inc
jg
mov
arpl
cld
or
loop
in
xor
mov
jmp
mov
jo
push
cmpsb
push
ss
dec
lret
jo
sarb
sbb
jle
test
lods
and
sub
stc
push
mov
js
jmp
sbb
fstpl
fsubs
pop
in
insb
outsl
lcall
cltd
inc
rcl
mov
push
aas
out
imul
mov
add
xlat
pop
scas
in
add
pop
cmpsb
insl
orb
mov
jbe
stos
or
imul
inc
ret
adc
and
bswap
jno
mov
pop
nop
mov
mov
sub
xchg
and
cmp
mov
cmpsl
push
or
imul
add
dec
shlb
data16
cmc
add
iret
fwait
lock
jb
mov
jnp
push
sbb
push
in
mov
hlt
mov
fs
pop
add
jp
add
inc
xchg
fadds
pop
add
dec
mov
xchg
cmpsl
sbbl
cld
sbb
mov
jnp
sub
add
and
gs
mov
repnz
sub
shl
scas
js
xchg
into
data16
or
aad
xchg
repz
stc
push
loop
cmp
mov
jecxz
out
ret
or
popl
pop
stos
cwtl
jp
add
jecxz
jae
jae
lds
dec
add
add
int3
or
or
icebp
test
outsb
push
add
fdivrs
add
xchg
popl
lcall
mov
aaa
or
lock
loope
dec
mov
push
pop
sub
idivb
aam
pop
xor
xchg
inc
add
adc
in
dec
inc
test
sti
int
xchg
aam
sarb
sbb
mov
xchg
int3
lods
aad
ss
bound
fstpt
cmpl
jne
xchg
jp
adc
mov
sub
fidivs
mov
movsl
push
mov
inc
into
mov
xor
cwtl
daa
push
cmp
adc
adc
out
add
pop
xchg
clc
mov
add
sub
add
out
xchg
xchg
sbb
in
pop
adc
aad
add
jg
call
or
rorb
sbb
lret
mov
inc
enter
out
cmp
inc
dec
and
pop
xor
shrl
jl
push
shlb
loopne
repnz
cmp
or
mov
int
fildl
sub
pop
add
lcall
fnstenv
sub
jmp
pop
test
jp
in
lds
push
lea
stc
mov
adc
pop
mov
into
jecxz
push
dec
jge
ja
lcall
cmp
scas
lret
lea
inc
mov
aad
sbb
enter
push
sti
pop
popf
ds
lods
jnp
sbb
hlt
fistpll
inc
cmp
das
shrl
movsl
aad
lods
sbb
pop
pushf
dec
js
subb
hlt
xchg
stos
imul
add
mov
push
or
cmp
pop
pusha
in
or
sbb
xchg
sbb
cmp
or
outsl
pop
mov
xor
pop
adc
imul
inc
jmp
loopne
aad
mov
xchg
aam
mov
push
push
jmp
pop
cmp
xor
ret
rcl
cmp
fnstcw
in
call
and
pop
clc
push
mov
sbb
pop
or
ja
ss
outsb
mov
or
push
adc
fcompl
das
mul
cwtl
enter
loop
into
orb
xor
push
mov
fistl
mov
cwtl
inc
dec
lea
xor
fcmovb
dec
xchg
testb
mov
lods
cmp
add
push
xor
in
mov
xchg
inc
jns
inc
ret
int
clc
pop
jns
push
daa
add
stos
pop
lahf
mov
mov
add
and
jnp
cmp
mov
jle
mov
in
cmp
imul
test
xor
push
add
les
pop
ss
movsl
inc
into
sbb
inc
mov
out
pop
and
aad
pop
xor
jbe
pop
pop
cmp
sub
or
push
jg
mov
mov
push
loop
into
mov
cwtl
stc
clts
add
jns
orb
jg
mov
mov
add
pop
jl
or
in
push
call
push
push
syscall
lret
jge
add
pop
sub
sbb
cs
es
enter
lahf
add
add
push
jge
jae
into
lods
and
jbe
out
mov
lret
push
jg
cmp
jge
push
adc
push
js
sbb
ret
stc
aad
add
test
sbb
fcmovnu
and
dec
lds
test
and
xor
sub
push
fnstenv
aas
cmp
mov
adc
popa
dec
jo
imul
cmovae
mov
add
popa
mov
sub
add
aas
mov
push
and
lret
dec
pusha
cmpsl
push
jge
jae
add
push
push
fidivrs
addl
mov
fucomi
rorb
pop
int
cmp
test
movsl
outsb
mov
add
mov
repnz
ds
icebp
pop
jecxz
in
cmp
in
es
test
or
fwait
lret
in
pop
clc
jo
iret
rcr
push
pop
sahf
lds
outsl
inc
push
xchg
movl
pop
add
fistpll
mov
and
insb
lock
sub
cmp
test
fs
adc
dec
insb
lea
fs
mov
js
cmp
psllq
jmp
fdivrs
dec
outsl
hlt
mov
inc
sub
mov
xchg
clc
add
aas
cwtl
and
and
add
out
outsb
pusha
pusha
mul
push
dec
lock
add
adc
pop
daa
cmp
push
mov
inc
mov
arpl
cmp
mov
jl
cmp
inc
sub
sub
ja
sub
xor
fcompl
mov
push
shll
push
dec
add
push
xlat
ret
or
out
fistl
add
cmpsb
adc
scas
shr
xor
sbb
pop
mov
push
std
enter
fcos
push
cli
dec
dec
sub
add
dec
adc
pop
add
rcr
jmp
sbb
sub
mov
ja
jle
or
add
add
or
subl
sahf
gs
add
and
insb
pop
outsb
adc
scas
cmp
mov
jg
stc
pushf
mov
test
fs
inc
sub
sub
mov
adc
in
inc
add
pop
add
aad
test
jmp
lcall
dec
xchg
sbb
sbb
inc
ret
insb
shll
xlat
movsl
pushf
lret
out
in
xchg
or
xchg
xor
in
and
js
add
or
dec
inc
out
vmovss
outsb
xor
jecxz
mov
add
inc
push
jmp
add
arpl
je
cmp
fwait
add
sarl
mov
push
adc
dec
xor
dec
xor
mov
mov
dec
xchg
sbb
std
sub
call
or
push
xchg
mov
pop
fnstsw
int
mov
rcrl
sub
pop
pop
sbb
adc
cmc
les
pop
shll
sub
mov
jp
in
shl
lods
lea
cli
push
and
jbe
fs
shlb
ja
pop
jecxz
add
dec
mov
sbb
int
insb
jmp
ds
mov
dec
ret
int
xor
dec
dec
mov
and
outsb
mov
test
jns
mov
aaa
out
lods
xor
pop
call
add
pusha
call
add
jne
cli
add
add
jns
xor
adc
pop
add
cltd
lret
push
jae
xchg
mov
rcr
lods
das
lahf
leave
push
pop
div
mov
ror
outsl
out
movsb
xchg
sub
loope
int3
inc
test
leave
cmpl
pop
pop
iret
out
leave
and
add
mov
test
add
inc
mov
addb
jmp
add
inc
mov
add
popa
int3
sbb
or
dec
stc
cmc
imul
dec
pop
sub
add
dec
xchg
mov
push
sbb
imul
gs
dec
mov
add
shrb
lahf
mov
arpl
movl
rcrb
jo
jb
add
adc
adc
add
ss
add
xor
add
push
cmp
cmp
iret
add
pop
iret
out
arpl
fwait
xlat
clc
pop
pop
add
add
out
lret
add
push
cmp
xor
add
add
fistpll
pushf
lock
mov
aad
cwtl
cld
mov
cmc
pop
sbb
push
pop
cmp
repz
popf
add
lahf
mov
inc
mov
xchg
and
lret
clc
add
jnp
cmp
call
xchg
mov
inc
jnp
std
xchg
add
xchg
mov
fsubrl
push
push
pop
cli
add
das
sub
dec
jp
inc
xchg
adcl
lret
lcall
lods
add
int3
and
insl
pop
mov
sub
jo
add
mov
mov
andb
fwait
stos
dec
bound
sti
cmp
cmp
ret
sbb
arpl
jl
shrb
testl
test
outsl
imull
lods
lods
aad
mov
sbb
sar
pop
das
stc
gs
out
lock
loopne
adc
adc
in
imul
imull
add
add
add
push
mov
sbb
test
pop
mov
jmp
arpl
xor
sub
xchg
jae
leave
cmpsb
pusha
push
add
cmp
sbb
xchg
add
lock
inc
lods
add
xor
add
add
mov
xor
sub
push
xlat
or
lret
mov
mov
dec
data16
and
mov
add
mov
shlb
sahf
mov
and
sub
add
std
adc
inc
test
inc
movsl
inc
sarb
add
pop
int
lea
dec
add
arpl
jno
inc
ret
jbe
or
dec
lahf
and
lock
jp
inc
xchg
jge
out
sub
add
les
lods
aad
pop
sub
pushf
inc
push
nop
sahf
out
cmp
lret
push
aas
ljmp
into
out
enter
or
inc
and
dec
cwtl
push
inc
add
inc
mov
cmp
out
add
outsb
or
out
inc
inc
cmp
outsl
ja
pop
jb
push
pop
and
in
pop
or
mov
mov
lahf
aas
mov
dec
mov
xchg
push
add
mov
das
lods
es
inc
and
int3
add
and
push
add
imul
mov
aam
or
xchg
mov
sbb
adc
and
imull
les
pop
shr
das
jmp
inc
scas
in
imul
int
jp
add
test
inc
push
adc
mov
fimull
or
add
incl
and
adc
sbb
mov
adc
xor
movsl
jo
fucomp
sub
clc
push
inc
je
mov
sub
adc
dec
into
in
loope
xchg
jmp
push
or
push
dec
add
add
arpl
xchg
dec
fadd
addl
into
add
sub
outsb
bound
add
sbb
rcrb
mov
mov
and
add
movb
dec
add
xor
inc
xor
imul
cmpsb
notb
push
stos
lcall
movsl
mulb
scas
stos
ljmp
add
insb
lods
nop
popf
sbb
lcall
in
xlat
adc
or
xchg
add
js
and
add
mov
pop
into
mov
cld
add
add
jae
adc
add
gs
jo
imul
out
cmc
lahf
push
dec
mov
dec
fwait
add
dec
pop
inc
out
lods
add
lea
sarb
fucomp
sbb
add
add
and
sbb
push
push
popf
cmp
mov
push
xchg
test
in
sti
outsl
nopl
or
dec
test
movsl
aas
xor
xor
loope
jbe
dec
sub
loopne
mov
ljmp
clc
jmp
bound
push
mov
mov
jl
push
pop
add
addl
or
fnstcw
inc
mov
cli
and
mov
mov
inc
and
lds
mov
in
cmp
add
mov
int3
xchg
stos
and
mov
inc
cmpsl
xor
movsl
push
jmp
cmp
mov
sub
jo
dec
dec
push
ljmp
sbb
add
sub
les
add
sarb
ret
dec
out
dec
push
inc
push
inc
or
xchg
xchg
xchg
dec
sbb
xor
sub
and
outsb
add
sub
push
add
lods
push
ds
dec
xor
push
or
addb
sub
xchg
lea
mov
lods
inc
stc
xchg
jp
sub
int
mov
out
sub
xchg
xchg
fistps
sub
pop
jle
in
cwtl
scas
roll
mov
sub
cmp
out
rolb
mov
sahf
pop
mov
test
jle
out
lea
daa
out
jo
add
rorl
pop
adc
sbb
jg
jnp
stos
sahf
xchg
incl
mov
out
pushf
add
rorb
cmp
add
es
dec
xor
out
xorl
arpl
cmp
pop
fmuls
jae
into
lods
jle
jecxz
push
push
xor
sbb
dec
loope
mov
es
pusha
sub
pop
fcompl
cmp
sbb
inc
adc
sub
add
sub
add
cmpsl
fdivr
stc
lret
test
add
mov
push
sbb
sub
mov
or
call
test
or
std
cs
push
add
mov
add
int3
lods
daa
push
scas
into
mov
mulb
data16
push
movsb
cli
movsl
lret
lods
loop
xchg
lds
mov
mov
mov
mov
pusha
or
cld
inc
call
or
jmp
arpl
icebp
pop
testl
mov
scas
in
xchg
fcmovnu
jecxz
push
out
mov
mov
mov
insl
in
ljmp
jb
punpckhdq
shrl
mov
je
inc
pop
cmp
add
shll
cmp
add
pop
add
or
sub
mov
cmp
lods
jne
mov
cmp
in
lret
in
xor
sub
sub
or
test
ficoms
xor
mov
add
and
in
xor
rcl
pop
into
add
sarb
xchg
add
fs
mov
mov
adc
push
imul
pop
add
das
jecxz
int3
negb
rorb
cltd
mov
sub
enter
movsb
push
push
lods
iret
jnp
call
add
mov
flds
test
jle
add
sbb
icebp
mov
imul
add
add
cld
lea
aad
add
add
xor
ja
or
cwtl
mov
cmp
or
pop
cmp
cmp
addr16
jbe
mov
movsl
push
dec
adc
sbb
je
repnz
jg
mov
dec
or
loopne
scas
lea
frstor
fisttps
push
fidivrl
add
add
jmp
aad
test
gs
jp
into
adc
inc
pop
fs
mov
sub
sbb
inc
or
mov
add
cmp
mov
call
mov
add
add
pushf
sub
add
adc
add
add
add
daa
aam
pushf
fwait
xor
mov
aad
outsb
pop
and
mov
addb
hlt
pop
mov
sub
mov
hlt
push
addl
jne
jne
xchg
mov
cwtl
sbb
add
ja
mov
leave
js
jle
mov
or
fidivl
inc
add
outsb
rolb
add
cmp
imul
jnp
leave
cld
cwtl
push
mov
fstl
mov
add
mov
mov
jg
adc
cmc
and
loopne
outsb
es
inc
repz
or
cmp
jo
frstor
popa
roll
movsb
jo
gs
dec
ret
jae
or
ss
or
movsl
jle
push
and
add
out
cmc
sbb
sahf
fisttpl
insb
push
in
cltd
mov
mov
enter
add
and
jnp
flds
inc
movsl
fsubrs
fisubl
dec
mov
xlat
test
sbb
dec
jecxz
rcrb
add
dec
ljmp
add
add
add
addb
out
cmp
mov
push
jno
cltd
or
imul
add
jb
fpatan
mov
scas
add
or
xchg
jb
out
and
out
add
xchg
sti
mov
fwait
sbb
and
add
adc
jge
jo
sbb
imul
rclb
outsb
add
adc
cs
push
pop
pop
xchg
sub
les
int
dec
push
test
in
sub
icebp
push
fmull
cmpsb
push
jae
jbe
lret
wrmsr
push
mov
mov
add
das
add
fsub
outsb
dec
add
mov
andl
inc
lcall
mov
or
cmc
lds
adc
xchg
pusha
imul
ljmp
mov
icebp
mov
mov
add
adc
mov
jns
jp
jb
mov
sub
fisttpl
jb
iret
push
popf
cmpsb
mov
aas
call
mov
add
insl
pop
popa
or
arpl
test
aam
in
jg
push
jae
xchg
flds
adc
jp
ds
mov
je
in
mov
loop
lcall
nop
cmp
cmc
adc
jbe
pop
ljmp
add
test
pop
push
push
outsl
pop
add
dec
sbb
fdivrs
das
or
add
aas
pop
fnstenv
pusha
xchg
add
jp
inc
sbb
fsubs
mov
lods
mov
dec
pop
flds
mov
hlt
inc
enter
out
bound
add
js
fisttps
mov
add
test
and
movl
push
xor
mov
and
jne
fidivrl
xchg
or
in
add
pop
rcll
mov
sub
repnz
popa
sub
jno
xor
mov
clc
mov
mov
ljmp
jne
jb
dec
push
inc
mov
dec
ret
push
out
xchg
inc
mov
loope
jg
mov
loopne
jns
sarb
in
out
sbb
jnp
sub
les
mov
mov
mov
cmpsl
outsl
jle
cld
add
out
addb
add
and
cwtl
jmp
andl
mov
sbb
add
jae
repnz
out
mov
lcall
subl
arpl
in
std
ret
adc
mov
pop
or
add
dec
mov
shll
add
pushf
dec
cli
mov
mov
cmp
jl
sub
mov
and
in
iret
std
mov
scas
out
pop
clc
jbe
shll
jae
mov
rclb
and
mov
mov
insb
add
sbb
xchg
movsb
inc
test
arpl
mov
pop
mov
mov
xor
sub
fstps
jno
inc
push
sub
sub
pop
out
movsb
in
test
xor
add
push
mov
lea
pop
xchg
movsb
in
leave
out
es
ljmp
mov
repnz
js
mov
push
mov
test
loope
jmp
push
cmp
int3
fwait
add
arpl
iret
arpl
mov
cmp
inc
push
or
lea
shlb
push
roll
lds
sti
mov
lods
dec
ud1
inc
push
inc
rcr
xchg
jae
in
movsl
outsb
or
test
xchg
sub
push
jo
add
push
jb
iret
leave
sbb
cmp
mov
sub
cmpsb
inc
mov
or
and
jne
arpl
pop
outsb
push
pop
lret
outsl
pop
cs
add
sbb
mov
cltd
xor
dec
add
stc
add
or
jl
add
scas
jp
add
push
jno
jmp
sarb
add
pop
add
nopl
xchg
and
clc
incl
jl
add
add
add
sub
add
dec
pextrw
adc
pop
test
add
sub
lock
test
or
dec
add
add
mov
jae
mov
sub
xor
test
fistps
ss
inc
xchg
stc
pop
add
clc
add
cmp
add
and
scas
movsb
add
mov
xorb
ret
add
lahf
icebp
data16
jmp
popf
add
test
mov
add
add
iret
es
sbb
aad
scas
jo
push
orl
outsb
addr16
add
add
aas
sub
fistpl
dec
mov
movsl
jbe
stc
dec
or
mov
mov
add
ret
stos
rol
add
mov
lcall
dec
out
sbb
pop
add
inc
adc
pop
mov
mov
sahf
adc
mov
in
add
inc
popf
push
fistps
dec
fwait
sbb
cmp
adc
pop
add
pop
add
add
sarl
adc
xchg
ja
jb
mov
add
and
loope
xchg
cmpl
testl
jno
das
inc
mov
xchg
iret
int3
push
aaa
add
mov
pop
xchg
mov
lods
daa
call
lods
xchg
sbb
xor
in
add
jp
sti
test
fmull
in
add
enter
mov
mov
jns
xor
in
mov
stos
outsl
in
pop
sbb
in
into
add
push
pmullw
sti
mov
adc
femms
adc
mov
dec
and
mov
int
mov
cld
add
xchg
neg
add
sub
add
sub
stos
sub
loopne
dec
popf
fstl
inc
xor
add
add
jno
lret
test
shr
das
dec
popl
add
out
jno
inc
stos
push
xor
add
pop
lods
shrl
mov
jae
out
jmp
xchg
push
add
or
test
adc
test
ret
int3
lods
nop
mov
jo
inc
int3
sbb
or
add
enter
add
cmpb
std
dec
pop
testl
movsb
daa
fsin
cmp
jbe
sti
nop
cli
inc
cmp
outsb
nop
add
xchg
lret
add
adc
mov
sub
rclb
jge
jge
jae
sub
pop
cmp
and
dec
add
sub
pop
mov
cmc
sahf
mov
dec
adc
sbb
lds
imul
add
push
adc
les
sbb
add
out
bound
jp
ret
add
and
rolb
pop
add
or
inc
cmpl
inc
add
cwtl
int
cmc
jl
add
or
or
iret
add
pushf
sub
add
fs
scas
es
outsl
dec
jle
call
push
add
iret
inc
add
or
movhps
xchg
add
sbb
incl
or
aaa
jge
stos
mov
mov
sbb
lcall
loopne
test
pop
icebp
imul
leave
lock
mov
shrl
cmp
add
dec
subb
jp
sbb
test
test
fistpl
mov
repnz
sbb
std
add
ljmp
cmp
add
sub
jbe
imul
or
cmpsb
sub
sbb
inc
fucomp
push
sub
sbb
dec
cmp
fdivrp
pop
xorl
push
sub
stos
adc
jl
add
mov
cmpsb
test
cmp
inc
inc
xchg
int3
mov
add
sub
jne
rcl
shr
mov
icebp
mov
lods
xchg
test
or
mov
pop
insb
enter
xchg
mov
jo
sbb
mov
je
sub
and
test
xchg
add
mov
out
add
ja
fsubrs
jmp
push
xorb
lock
jg
jne
mov
popa
jne
cmp
int
add
sub
push
or
xchg
filds
pusha
in
mov
xlat
pop
call
xchg
out
int3
fs
andb
pop
imul
jge
rorb
dec
pop
rcrl
sub
or
jmp
xchg
xlat
pop
push
pop
in
mov
pusha
xchg
scas
nop
inc
roll
xor
movsb
sub
into
add
pop
inc
div
mov
jns
mov
fs
pop
orl
in
or
arpl
lahf
mov
mov
loope
ljmp
lahf
sub
lods
sbb
jb
test
and
mov
pop
xchg
adc
scas
stc
inc
dec
lret
out
xorb
es
dec
mov
xor
jb
scas
mov
cltd
mov
jno
ss
push
les
enter
xchg
xchg
js
jb
jle
lret
in
add
adc
and
sbb
push
xchg
lds
pusha
add
sub
xchg
add
pop
add
inc
andl
insb
add
lods
imul
outsl
xchg
mov
loopne
xorl
and
inc
add
sbb
fwait
addr16
cwtl
stos
fildll
cmpsb
add
repz
cld
and
pop
in
ror
fcomps
push
out
add
outsl
jae
lret
inc
stos
lahf
and
enter
jecxz
in
stos
adc
sbb
xchg
gs
cmpsl
pusha
iret
stos
imul
xchg
mov
xor
loop
mov
xor
lret
pop
adc
daa
daa
imul
dec
mov
sbb
mov
sbb
pop
popa
dec
fsts
mov
ljmp
shld
jmp
cmpb
mov
ss
pusha
adc
sahf
cmp
pop
sahf
dec
or
and
or
cltd
lock
mov
xor
cwtl
inc
fcmovnu
add
fiaddl
rclb
les
sub
add
cmp
test
mov
jno
jbe,pt
int3
outsb
add
dec
inc
adc
test
sub
push
or
je
xor
xchg
cmpsb
mov
pop
dec
jo
out
insb
enter
xor
sbb
inc
ret
sub
dec
sub
js
push
popa
inc
outsl
cmp
movsl
push
ss
nop
ss
sub
or
add
out
push
mov
pop
push
mov
jmp
cmp
pop
aad
or
mov
test
sti
fisubl
test
jge
jb
add
xchg
cmpsl
mov
mov
adc
cmp
sti
jb
in
ljmp
sub
or
es
hlt
and
jl
js
popf
push
jl
rclb
push
inc
out
insb
int3
cld
nop
pop
das
adc
fsubs
jns
inc
sti
js
pop
cmp
jbe
loopne
out
add
and
jo
pop
xchg
adc
add
aas
lea
jmp
pop
mov
dec
or
je
cmpl
repz
pushf
loopne
jl
aad
cltd
push
notl
int3
loopne
fwait
jmp
imul
insb
add
cs
sbb
add
sub
and
and
mov
gs
or
lret
das
decl
cmpb
mov
rcrl
pop
popf
mov
xor
sub
add
movswl
pop
ror
inc
cwtl
into
lret
adc
fwait
ret
pop
jge
or
std
cmp
fiaddl
add
scas
xchg
sti
mov
sahf
mov
test
movb
outsl
add
push
push
scas
out
cli
mov
daa
mov
mov
mov
movsb
int
push
sub
jb
daa
pop
pop
insl
pop
fcmovnb
adc
fadds
and
or
push
mov
scas
test
cmp
push
js
dec
inc
cmp
js
inc
into
sbb
mov
cwtl
hlt
mov
inc
pop
lret
add
aas
mov
arpl
insl
sub
xchg
jns
popf
stos
jp
inc
pop
or
das
ljmp
clc
push
mov
repz
mov
xchg
add
sub
pop
adc
incb
into
movb
cmc
fdivl
sti
push
jl
jp
mov
sbb
xchg
or
jb
adc
outsl
dec
fdivrs
out
mov
imul
add
add
insb
xchg
mov
aaa
sub
out
adc
aam
add
lcall
mov
mov
add
add
sub
push
in
lahf
inc
and
jmp
inc
xor
test
fs
pop
subb
jle
insb
jbe
mov
xchg
cwtl
inc
pushf
lock
mov
jb
decb
icebp
mov
adc
loopne
add
repz
pushw
enter
pop
int3
add
jbe
mov
les
jle
movsb
outsl
jbe
bound
xchg
in
das
push
cmp
lcall
cmpsb
out
ja
xorb
jb
jmp
nop
dec
outsb
adc
test
mov
add
mov
mov
push
and
testb
lret
dec
pop
fisubl
dec
fdivr
xchg
outsl
jb
or
movsl
xlat
cmp
call
out
daa
in
popf
data16
gs
add
fxch
gs
cmp
cmp
fmulp
sbb
pop
lods
and
dec
xchg
inc
cmp
mov
movsl
add
sub
sub
loope
cli
fnsave
push
xchg
jl
dec
sbb
cmp
ljmp
cmp
push
lret
cltd
and
jge
pop
mov
xlat
cs
xor
add
lahf
hlt
outsb
mov
jg
or
sbb
push
xor
pusha
cmc
sub
aad
imul
fnstenv
inc
inc
xchg
mov
ja
out
ss
lock
das
adc
push
and
negb
sahf
add
dec
fwait
call
pushf
iret
leave
inc
into
xchg
sahf
lret
stos
mov
inc
repnz
push
js
mov
mov
leave
push
mov
out
js
adc
movl
and
fistpl
adc
mov
in
enter
in
jp
mov
cmc
hlt
sub
pusha
addr16
jae
cmovns
jns
dec
jp
xorl
add
adc
sub
and
mov
push
add
jge
cmp
add
mov
mov
add
lret
roll
lahf
push
movb
lret
mov
add
fiadds
add
jecxz
mov
and
lock
add
mov
movsb
sub
das
das
mov
popl
cmp
sbb
push
add
mov
add
mov
js
jno
movsb
lods
lds
dec
push
push
rcll
shrl
add
add
fwait
add
int3
add
add
cmp
push
pop
sbb
test
and
das
movsl
xor
pop
add
add
push
out
jmp
movb
xor
pop
mov
mov
lods
add
sub
jge
sub
add
add
loopne
stc
add
dec
add
scas
sbb
mov
sub
or
xchg
cmp
pop
xchg
pushw
sub
pop
cmp
add
loope
sub
cli
in
jb
gs
push
cmp
cmpsb
test
mov
js
xchg
dec
jmp
les
fucom
jp
pop
ja
pushf
jp,pt
add
scas
out
adc
popa
push
mov
shlb
inc
and
and
loop
mov
sbb
add
or
scas
mov
mov
std
add
cmp
inc
nop
dec
int
add
aam
mov
push
xchg
cld
cwtl
in
mov
ret
inc
insb
xchg
add
add
stos
and
mov
icebp
daa
int3
mov
or
push
lods
mov
mov
mov
repz
add
cmpsb
mov
mov
add
divb
sarl
inc
insb
stos
lods
dec
ljmp
pop
push
popf
movl
add
or
mov
hlt
jo
inc
movsb
sahf
sub
in
gs
scas
shlb
mov
sbb
jp
sub
mov
sahf
push
sti
add
cmpsl
and
jg
movb
shlb
xchg
sbb
mov
int3
insl
dec
dec
add
es
sbb
cld
xorl
push
add
add
jo
addb
imul
lock
push
cmp
jl
cmp
fwait
daa
decb
or
pop
bound
aam
pop
mov
or
sbb
in
lea
cltd
insb
xchg
jmp
aam
inc
cmp
into
aam
inc
cmp
sub
mov
add
add
sub
in
pop
frstor
jmp
add
dec
stc
loopne
jo
mov
gs
mov
xlat
add
mov
sbb
dec
fcoms
and
clc
jo
int
push
inc
js
nop
enter
dec
fst
xchg
sbb
inc
mov
imul
cwtl
rorb
sub
outsl
rolb
cmc
mov
xor
ljmp
lret
mov
mov
je
rorb
sbb
cld
outsb
cli
jl
out
das
add
lods
lret
stos
mov
dec
xchg
mov
or
lret
jbe
dec
jmp
inc
jae
pop
pop
xchg
push
shrd
std
or
jl
lods
lea
jbe
fwait
sbb
mov
movsb
clc
adc
add
movb
mov
mov
add
add
mov
push
xlat
inc
dec
jmp
inc
lods
inc
frstor
insl
sbb
iret
mov
add
fidivl
es
in
inc
out
loop
or
fmull
mov
and
mov
mov
lods
shrb
and
xor
cmpb
pop
push
mov
pop
add
aaa
xchg
or
push
sbb
test
add
jp
sub
jl
lcall
push
shlb
sldt
sub
sub
les
jge
or
or
cli
dec
cmp
or
add
push
pop
jo
inc
sub
push
xor
cld
mov
adc
outsl
test
add
jno
jnp
push
pop
icebp
push
xchg
in
into
loope
mov
test
scas
sub
movsb
aad
mov
mov
out
lret
jnp
push
cli
push
add
mov
int3
inc
pop
dec
cmp
sbb
dec
ds
push
sub
aad
scas
in
movsb
out
mov
faddl
data16
cmp
sub
das
into
testb
fiaddl
pop
or
add
aad
dec
mov
add
mov
sub
je
or
sbb
shll
call
scas
inc
add
xchg
data16
add
or
rcrb
fsubl
sub
mov
ds
adc
push
pop
jg
js
dec
cmpsl
jge
or
lds
inc
sbb
ret
cld
push
cmp
int3
xchg
push
inc
jo
jno
xor
test
scas
cmp
xchg
cmpsb
adc
in
add
bound
lret
mov
push
push
jns
add
add
mov
push
add
pop
es
fimuls
fstps
add
adc
mov
in
mov
nop
stos
arpl
ljmp
js
or
stos
repnz
mov
add
das
fcomps
push
or
mov
push
dec
mov
xlat
popa
jbe
das
jmp
test
scas
sub
mov
std
clc
pop
es
call
dec
add
adc
mov
addb
push
and
add
js
imul
addr16
cmp
fs
cmp
js
push
adc
out
mov
cmp
fiadds
in
out
mov
and
ror
ficomps
mov
negb
mov
aas
cltd
rcrb
popf
push
fstpt
xor
lds
leave
sbb
test
scas
leave
xorl
lret
es
cmpsl
or
cltd
bound
or
pushf
test
dec
mov
mov
dec
or
cmp
add
rorl
lret
in
xor
dec
cli
ss
jae
call
push
out
xor
xchg
add
sbb
sub
pop
cli
add
mov
movsl
add
lock
and
cmp
or
addr16
lods
out
dec
lahf
repz
out
and
push
sub
cli
ljmp
loopne
fdivrs
or
sub
or
mov
lods
or
fidivrs
push
xor
push
bound
hlt
sarl
jmp
addl
dec
loope
lret
sub
ljmp
add
sysexit
pusha
xchg
inc
pop
enter
call
add
repnz
mov
out
fcoml
jg
xchg
mov
test
gs
sub
ss
je
lret
orb
clc
data16
in
add
xchg
mov
cs
mov
adc
or
cwtl
push
shlb
stc
inc
test
sahf
cmc
and
xor
sahf
lret
into
pop
imul
pusha
sbb
add
scas
gs
les
pusha
jne
mov
dec
add
sahf
xor
or
xor
cld
xchg
mov
pop
mov
jmp
mov
call
jo
push
pushf
push
dec
adc
pop
mov
rorb
pushf
mov
test
mov
or
bound
pop
mov
jns
enter
add
push
or
mov
add
add
nop
or
outsl
repnz
test
aas
cltd
into
add
add
adc
cmpb
xchg
mov
lock
sub
ds
add
ret
call
mov
mov
mov
mov
sbb
ret
jbe
and
cmpsb
pop
inc
in
mov
pop
xchg
aas
je
loope
cld
icebp
lock
push
popa
insl
test
jmp
shrb
das
xor
scas
mov
add
mov
add
notl
fbstp
mov
pop
mov
or
into
jmp
add
cld
add
cmp
xchg
sub
pop
sub
popa
mov
add
hlt
out
and
cmp
mov
imul
xorb
pushl
lcall
mov
sub
push
hlt
lcall
pop
sarb
aad
lret
pop
jmp
jns
push
cmpsb
mov
mov
lcall
fstps
mov
pop
dec
mov
push
inc
test
jp
rcrb
mov
xchg
mov
add
add
inc
mulb
pop
stos
fadds
aam
adc
mov
push
nop
test
mov
into
add
add
add
sbb
clc
in
stos
sub
popa
in
pop
add
lret
out
rol
add
dec
add
add
xchg
fmulp
add
test
shrl
mov
lods
loop
sub
call
xor
pop
inc
jno
mov
pushf
or
sub
add
and
mov
cmc
cwtl
mov
loopne
add
push
jbe
psrlq
or
cmpsb
mov
xchg
repnz
xlat
push
pop
dec
jmp
add
add
nop
or
aaa
add
ds
dec
icebp
push
test
add
enter
test
sbb
je
ss
sbb
icebp
fwait
xchg
imul
fadds
pop
mov
add
sub
add
sub
mov
sbb
pop
dec
and
sub
jns
mov
add
xchg
dec
pop
inc
add
lods
push
jo
sub
lods
js
and
jecxz
dec
xchg
dec
sub
mov
dec
and
aad
mov
xchg
inc
mov
mov
cmp
imul
dec
push
dec
xor
adc
mov
jne
mov
dec
push
les
mov
cmp
or
dec
mov
jl
cwtl
add
sub
imul
outsb
hlt
mov
aam
mov
jmp
push
andl
mov
xor
inc
jae
jl
pop
aaa
inc
aad
jecxz
je
pop
fcomps
dec
fwait
adc
mov
inc
pop
or
push
testb
in
aad
lds
dec
or
sbb
sub
cmp
inc
and
mov
add
or
push
stc
add
add
mov
adc
inc
test
cmp
pop
lods
adc
pop
mov
aad
add
adc
pop
outsb
add
pop
and
out
xor
ljmp
movsb
mov
pusha
add
mov
jge
scas
and
out
int
xor
int3
ret
das
and
test
scas
jo
cwtl
leave
addr16
lods
mov
mov
test
insb
pop
mov
lods
push
call
cltd
xor
jb
sbb
add
icebp
jmp
mov
fwait
dec
daa
mov
inc
repnz
inc
and
pushf
rolb
xchg
pop
insb
enter
dec
loopne
lret
or
mov
jns
add
inc
lahf
mov
mov
add
mov
add
adc
sbb
in
sahf
sub
roll
lods
outsb
lock
xor
push
add
lock
inc
lcall
outsb
stos
fsubs
cmpsb
mov
and
out
add
orb
je
add
scas
lods
sbb
roll
in
mov
mov
ljmp
sub
adc
add
mov
aam
mov
and
es
add
add
or
sub
test
push
jae
cmp
cmpsl
mov
shlb
mov
push
icebp
shrb
inc
loop
and
adc
dec
add
cmp
test
movsl
pop
add
arpl
int3
movsb
into
mov
mov
adc
add
add
push
add
xchg
sbb
out
insb
idivl
add
add
mov
add
jae
cmp
add
int3
enter
mov
and
cld
xchg
movsb
das
cmp
repnz
aaa
scas
in
cs
in
repz
insb
cmc
sub
mov
into
and
call
out
sti
fwait
stc
in
sbb
add
cmp
push
stos
add
into
movsb
pop
shll
rorb
add
test
add
in
push
add
inc
pop
addr16
enter
rolb
cmpsl
icebp
data16
xor
fistpll
inc
enter
pop
movl
add
imul
iret
add
mov
addb
mov
cmp
add
adc
cli
leave
inc
xchg
notl
push
cmp
fcomp
add
push
out
add
mov
insb
lcall
pop
xchg
lret
lock
in
dec
nop
sub
popa
sbb
int
push
xor
add
jmp
lret
ljmp
cmc
enter
add
add
add
xor
adcl
add
sub
jge
jge
shrl
sbb
std
or
and
add
bswap
add
filds
add
cmpsl
add
sbb
push
push
inc
and
inc
cmp
mov
in
test
xlat
outsl
rcll
pop
stos
add
sub
pop
inc
xchg
dec
and
add
add
xor
outsl
sbb
fmuls
add
scas
movsb
or
sbb
pop
leave
push
xchg
pop
xchg
inc
mov
pushf
cwtl
push
push
imul
cli
enter
add
xor
mov
mov
cmp
fbstp
jl
shll
enter
pop
in
sub
add
adc
add
sbb
imul
push
aas
sub
xchg
js
pop
sbb
xchg
repz
bnd
inc
rorl
out
xor
data16
xor
xchg
loopne
xchg
jge
lods
add
or
imul
add
jl
outsl
and
sahf
cmp
jo
mov
dec
dec
pop
cli
jmp
dec
fxch
push
mov
lds
mov
dec
push
add
arpl
add
and
add
imul
dec
dec
xchg
je
dec
xchg
sbb
test
mov
lods
jp,pt
add
jg
xor
dec
mov
js
push
push
test
and
push
pop
pop
into
push
push
add
sub
in
add
push
sub
xor
fistpll
jl
xchg
sbb
cwtl
or
add
fldl
rolb
ret
data16
xor
mov
out
sbb
sub
fs
cmp
inc
push
inc
mov
or
cwtl
sub
push
int
dec
addr16
in
dec
inc
outsb
add
movsb
cmp
aad
adc
dec
add
xorb
sub
stos
shr
adc
add
mov
pop
pusha
sarb
sbb
cmpsb
dec
pop
or
dec
clc
test
or
insb
push
jb
popf
pop
es
add
add
cmp
and
jmp
adc
int3
in
iret
loopne
popf
push
iret
fs
sbb
lds
subb
add
stc
aaa
mov
xor
aad
into
cs
mov
adc
lods
add
cmp
cmpb
out
popf
ljmp
mov
fnstsw
aas
pop
inc
push
inc
in
jbe
jl
test
xchg
mov
mov
stos
out
frstor
es
neg
or
call
ret
test
popl
dec
jl
jecxz
push
add
out
lahf
push
mov
jno
stos
mov
xorl
and
or
ss
xor
test
icebp
ret
stos
add
dec
and
add
movsl
or
dec
cmp
lea
push
xor
adc
leave
arpl
inc
pop
add
gs
movl
push
adc
call
sbb
add
and
std
mov
add
je
xchg
mov
or
push
hlt
mov
mov
mov
pop
stos
or
mov
lods
insb
dec
or
shrb
insl
in
fs
and
dec
aad
int3
lcall
sbb
push
fisttpll
add
cmc
stos
test
out
add
cli
sbb
and
pop
and
pop
fnstcw
lods
rorb
jns
mov
jg
sub
mov
jo
out
shll
jb
mov
jecxz
scas
mov
xor
out
addps
xor
out
cmpsb
pop
fiadds
mov
in
std
rclb
js
decb
imull
fdivrs
fsubrl
decb
add
add
add
mov
sbb
inc
xor
js
lret
or
cmc
scas
jae
mov
sub
gs
aaa
add
jecxz
sub
jle
arpl
leave
push
aas
lahf
negl
xchg
inc
inc
dec
in
jmp
mov
sahf
dec
outsl
push
jne
shlb
dec
pop
push
dec
xchg
add
push
mov
stos
loope
dec
rcll
or
test
cmp
add
lods
mov
add
enter
mov
data16
scas
out
cmp
into
add
test
mov
jb
add
dec
cmp
out
in
mov
mov
push
test
icebp
jmp
xchg
jg
mov
push
addr16
int3
cltd
arpl
push
xchg
into
add
push
mov
mov
das
imul
add
out
jl
or
mov
mov
mov
je
push
mov
xor
pop
mov
rcll
or
sub
cmp
popf
repnz
lahf
call
push
cmc
adc
jp
out
in
push
xor
pop
cmpsb
pop
fistl
mov
jg
jno
stos
add
shrb
decl
lcall
mov
or
out
daa
jne
or
mov
test
add
setne
repnz
out
movsb
hlt
sub
xchg
cltd
mov
orb
add
mov
cld
ja
cmp
adc
add
loop
pop
jns
xor
jb
sahf
lods
ret
subl
sbbb
xchg
in
fmuls
js
dec
adcb
aad
inc
lret
ficompl
and
aad
push
adc
outsb
jbe
sub
dec
mov
cmp
inc
push
bound
add
in
in
add
inc
movl
sahf
hlt
mov
xor
fs
push
ds
cmp
and
dec
mov
pushf
jge
xchg
sub
in
xchg
popa
mov
jp
adc
imul
andb
mov
fadds
aas
add
and
inc
push
dec
xchg
add
mov
mov
mov
lcall
xor
push
and
add
hlt
iret
pushf
pop
inc
fcompl
pop
pusha
dec
pop
xor
push
sbb
movsb
and
xchg
jnp
sub
sbb
cltd
jecxz
push
loopne
push
andb
xorb
add
xchg
jb
xchg
add
aaa
pusha
incb
out
cmp
xor
pop
mov
in
jne
repz
add
add
sub
sub
mov
pop
aas
nop
add
and
leave
roll
cld
add
out
or
xchg
das
in
dec
push
in
lock
mov
out
push
cmp
and
daa
sub
push
fcomp
inc
pop
mov
gs
mov
insl
cs
xchg
rorb
dec
clc
dec
jbe
push
lcall
out
movsb
mov
leave
mov
add
mov
dec
xchg
and
divb
xchg
roll
call
out
jns
push
out
xchg
sbb
cmp
mov
mov
push
jo
jo
push
je
stc
fwait
add
icebp
lock
daa
fdivrs
ds
dec
push
jge
xor
jg
and
xchg
ss
xlat
aaa
jl
and
lret
xor
fs
leave
movsl
dec
mov
mov
movsl
scas
pop
sub
add
fstps
push
xor
add
add
lods
sub
add
mov
gs
repnz
pop
inc
std
ljmp
icebp
int3
mov
in
bound
push
lods
out
or
insl
adc
leave
cs
dec
leave
scas
out
fadds
push
push
push
xor
xchg
test
inc
pushf
jne
mov
sahf
sub
cmp
in
dec
dec
xor
mov
cld
sbb
jmp
in
push
xlat
inc
push
or
cltd
stc
jno
lret
movsb
jg
mov
inc
ficompl
cmpsb
arpl
dec
inc
out
mov
inc
push
add
ljmp
dec
adc
sbb
inc
imul
jl
inc
int3
add
mov
xchg
hlt
add
arpl
add
call
sub
add
dec
or
daa
insl
mov
or
adc
sbb
fsubrs
cwtl
inc
xchg
popf
sbb
dec
add
add
pop
aas
and
jle
jne
je
add
push
cmp
mov
les
and
aas
pop
in
inc
pop
add
movb
insb
cmp
mov
mov
js
mov
mov
lret
faddl
je
leave
mov
dec
xchg
pop
test
mov
out
cmc
add
cmpsb
out
dec
sti
enter
ds
inc
out
ficompl
test
add
pop
jmp
ljmp
mov
les
and
in
cmpl
add
movsb
cmc
mov
push
cmpsb
les
aad
cmp
cli
dec
daa
fucomip
movsb
cmp
test
jnp
fimull
or
xchg
sbb
pop
sti
imul
ret
dec
jo
push
and
pop
stos
mov
and
xchg
pop
fs
lret
pop
test
int3
mov
or
sbb
push
dec
loop
movb
adc
negl
xor
xchg
fisubl
in
or
iret
out
jp
sbb
pusha
ret
mov
je
jno
pop
es
js
loop
add
mov
adc
adc
mov
add
imul
jge
add
pop
daa
out
add
xor
xchg
test
dec
outsl
sub
pop
sbb
push
fistpl
cmovbe
adc
out
mov
mov
cmp
in
clc
test
sub
aam
in
pop
arpl
jecxz
out
pusha
or
lcall
sub
insl
xchg
das
lods
les
cmp
in
dec
mov
jl
push
fwait
jnp,pn
das
sbb
or
xchg
fimuls
push
fisttpl
stos
adc
test
scas
dec
leave
inc
lock
add
or
xorb
inc
add
js
aam
pusha
mov
je
xchg
inc
add
jl
sub
xchg
inc
jl
aaa
inc
mov
stc
mov
call
dec
cmpsb
inc
push
outsb
pusha
jecxz
mov
mov
imul
mov
fstps
jge
push
icebp
out
scas
add
adc
fdiv
mov
lret
inc
and
mov
ljmp
push
lods
pop
xchg
ds
stos
add
rcl
pop
testb
dec
xchg
xchg
rolb
jp
mov
push
out
rcrb
xor
adc
jg
popa
inc
es
scas
and
add
scas
dec
cmp
sub
add
pop
add
lods
jns
jmp
add
outsl
rolw
cmp
je
add
arpl
cmp
test
add
adc
mov
pop
cmp
mov
imul
add
sub
stos
add
cmp
push
add
cmp
sti
sbb
xchg
loop
jbe
cltd
pop
add
aaa
ljmp
movsb
ss
icebp
shrb
jmp
add
add
mov
test
movsl
add
jne
add
push
loopne
cmp
inc
push
mov
add
adc
jb
fldz
lcall
mov
das
scas
movsb
push
xchg
stos
mov
cmp
out
dec
sti
jbe
and
mov
clc
adc
or
ror
in
les
test
adc
add
dec
jmp
cli
outsl
push
jmp
sub
test
fst
imulb
add
xchg
sbb
sbb
jle
pop
mov
into
add
call
andl
lcall
ss
jle
sub
sub
enter
lods
test
shlb
outsl
add
add
bound
aad
pxor
mov
add
mov
out
addl
and
add
loope
and
add
push
add
add
das
stc
jnp
insl
pop
or
incb
xchg
xchg
sub
pop
lea
inc
nop
cmp
int
xchg
std
inc
sub
loopne
dec
das
xchg
cli
jae
aas
jmp
pop
mov
test
xlat
adc
pop
jns
add
in
or
les
jnp
and
add
add
imul
call
aad
xchg
push
in
mov
jae
add
fsubs
cmp
stos
add
mov
inc
jb
inc
cmc
lods
test
push
xchg
pop
lret
incl
dec
jo
add
orl
frstor
mov
cmp
addl
adc
lcall
xchg
sub
sub
rorb
cmp
xor
mov
loopne
adc
dec
or
xor
jo
add
dec
test
or
jecxz
cmc
repz
outsb
repz
in
mov
or
mov
mov
fdivrp
loopne
js
push
fld
push
sub
push
testb
dec
mov
dec
test
jbe
xor
in
int
rolb
lea
cli
add
call
dec
xor
push
cld
pusha
out
std
sbb
in
jecxz
jns
in
stos
jl
or
mov
aam
ds
test
jle
or
verw
jle
test
aas
pop
loopne
aaa
sub
mov
add
add
pushf
or
add
mov
icebp
out
arpl
add
or
lret
add
and
mov
ja
pop
ret
add
pop
stos
loope
cltd
push
adc
jnp
pop
lret
or
xchg
mov
mov
add
gs
mulb
fs
or
out
fildll
out
fisubl
ljmp
test
and
orl
sbb
pop
ret
add
inc
add
dec
std
jb
movsl
jecxz
jb
pushf
adc
dec
outsb
mov
dec
dec
fbstp
out
scas
jg
cmp
or
sbbl
mov
mov
nop
roll
sbb
cmp
icebp
pop
cmp
dec
cs
stos
cmpl
fadds
call
sbb
jo
pop
dec
imul
fisttpl
cmpsb
insb
pop
dec
push
or
ds
rorl
jge
mov
fstpt
cmpsl
add
call
js
pop
les
add
fwait
sarl
mov
mov
push
out
add
daa
add
dec
or
sub
jmp
inc
dec
ret
adc
dec
inc
mov
mov
add
mov
enter
in
mov
test
imul
pop
cltd
std
es
xchg
dec
fcmovnu
out
int3
jl
int3
jnp
jmp
push
jle
mov
movsl
fdiv
fidivrl
mov
daa
sub
movsl
vmptrst
invd
fistpll
mulb
xor
shl
lcall
xchg
sbb
mov
dec
pusha
lret
js
pop
mov
testb
sub
call
mov
lods
rcrb
add
int
loope
sbb
scas
add
dec
lock
dec
pop
lds
or
mulb
xchg
add
mov
adc
loop
roll
mov
mov
push
enter
stc
stos
fwait
jmp
nop
dec
push
push
into
pop
add
inc
in
int3
pushf
jecxz,pt
insb
fiadds
inc
adc
jnp
xchg
and
add
imul
add
cwtl
xor
push
mov
add
push
insb
push
push
leave
mov
lcall
xchg
imul
inc
xlat
lcall
mov
sub
loopnew
cmp
mov
push
addl
push
jmp
lret
or
mov
xor
mov
lea
int
sbb
popl
xchg
lea
dec
add
adc
or
jmp
mov
sbb
in
lock
xor
movsl
inc
sbb
dec
lods
add
lcall
addr16
movsb
imul
mov
lret
loop
ljmp
cld
movb
mov
xlat
sub
inc
fwait
loopne
sub
sbb
push
xorb
sbb
mov
xchg
mov
cmpsl
mov
clc
pusha
xchg
int
sub
pop
pop
mov
xor
imul
sub
inc
xor
roll
les
call
add
add
fildll
add
inc
cmp
nop
arpl
inc
xchg
pop
das
or
sbb
call
mov
mov
dec
push
jne
add
xor
jl
js
loop
add
dec
add
push
ja
sti
mov
cmp
push
ss
cld
push
out
lods
add
daa
inc
xchg
cmpsb
push
js
adc
mov
mov
cmp
sbb
and
js
lea
fmulp
add
adc
add
loope
arpl
les
sub
mov
inc
push
xor
cltd
gs
mov
cld
xor
xchg
call
add
arpl
in
sahf
mov
and
pop
and
fisubrl
jae
jo
daa
cs
add
mov
stos
add
aas
xor
inc
add
add
str
mov
and
dec
pop
into
cmp
les
scas
or
int
mov
add
and
or
js
mov
add
shr
loope
arpl
test
sbb
inc
insl
insl
mov
dec
mov
pop
fstpl
and
pop
cmpsl
dec
adc
pop
inc
adc
add
in
mov
adcl
lret
mov
jb
aas
lock
insl
addl
dec
sbb
rolb
enter
int
add
divb
or
push
cmp
stos
push
sub
mov
xor
in
xor
icebp
and
loope
pop
sbb
jae
add
push
push
pop
cli
cmc
cmpsb
inc
cwtl
pop
lock
aam
stos
stos
push
jnp
cld
inc
lcall
push
add
cli
push
xor
adc
or
repnz
test
sub
pusha
dec
xor
xor
or
jp
in
ljmp
xchg
mov
push
shll
add
mov
push
hlt
nop
ficoml
js
push
and
fldcw
jbe
rcll
push
or
ret
mov
sub
xchg
mov
jne
add
adc
lret
mov
xchg
test
aas
fnstenv
lcall
push
add
je
push
mov
test
mov
add
fwait
cmp
ljmp
int3
aaa
mov
pop
das
std
add
sbb
outsb
xlat
push
loop
int3
not
lret
add
jno
pusha
adc
call
repnz
adc
xor
loop
push
jge
dec
les
fists
add
js
lret
cli
sbb
out
mov
std
cmp
lret
add
nop
div
data16
sbb
jmp
sti
mov
test
gs
mov
popf
mov
stos
mov
and
roll
scas
xchg
sub
flds
xchg
test
insl
jge
jle
xchg
mov
pop
mov
inc
jmp
in
scas
filds
push
pop
outsl
adc
sub
sub
jecxz
sub
pusha
or
inc
ret
in
add
mov
out
adc
out
lds
aam
add
leave
out
addr16
push
adc
fiaddl
orb
xlat
cmp
das
scas
add
test
data16
jle
cli
add
data16
pop
push
add
sbb
repz
es
jle
filds
and
mov
aaa
pop
and
fbld
sahf
out
mov
inc
pop
ds
bound
mov
sbb
add
into
ret
cwtl
cmp
and
daa
ret
push
cmp
repz
movsl
clc
fldcw
sub
test
jecxz
lods
mov
inc
mov
jbe
not
repz
or
jb
xor
pop
xor
addb
mov
cli
test
add
imul
pop
sbb
mov
inc
aas
mov
cli
jb
outsb
cmp
cs
jmp
cli
jmp
add
jl
xchg
lahf
mov
stos
pusha
and
dec
lret
out
sub
pop
out
pop
negl
xor
add
movsb
ljmp
stos
shrb
add
fcomip
lahf
ja
mov
js
popf
jae
add
inc
aas
dec
xor
add
iret
add
push
fisubs
int
add
xor
mov
add
ret
call
pop
xchg
inc
xchg
jnp
xchg
jnp
add
add
dec
add
daa
push
xchg
fstl
shrb
jl
pop
jecxz
sbb
push
dec
pop
insl
andl
lock
fdivrp
and
or
push
jo
js
int
out
out
xor
dec
orb
sarl
inc
pop
stc
das
je
test
ds
imul
xor
sbb
sbb
add
jmp
or
or
test
testl
nop
dec
pop
dec
out
jno
int3
inc
icebp
shrb
xchg
push
push
push
jg
clc
push
inc
outsb
aas
xchg
lods
shrl
sbb
repz
cwtl
or
idivl
sub
pop
mov
xor
in
popf
popa
nop
fiadds
or
or
iret
aad
and
cmp
fucomp
stos
push
or
add
pop
cmp
adc
in
cmp
stos
out
add
fdivrs
push
pop
aas
fnstenv
add
jmp
pop
enter
dec
adc
ds
or
adc
lahf
fdivr
aam
test
jg
add
add
xchg
mov
sub
mov
dec
xor
pop
add
add
cmp
cmc
cld
scas
jg
add
iret
sbb
add
adcb
in
cmp
out
mov
lret
adc
ficoms
outsl
or
outsb
loope
in
idiv
pushf
add
sbb
add
dec
adc
mov
icebp
push
insb
push
pop
dec
test
cwtl
mov
sarb
stos
pop
fadds
push
ljmp
pop
test
loopne
outsb
or
and
ret
mov
lock
cltd
dec
add
push
repz
add
js
or
mov
mov
mov
sahf
mov
out
cmp
leave
insl
call
add
mov
lahf
loope
and
jg
add
dec
insb
pop
xor
xchg
xchg
add
sub
popf
add
ret
or
jbe
test
pushf
adc
add
fwait
icebp
fsts
add
add
cmp
mov
out
add
mov
sub
mov
les
push
add
sbb
decl
add
les
pop
and
int
push
or
sbb
and
sti
mov
sub
mov
dec
insl
ja
xor
mov
cmp
push
mov
aad
cmp
pop
mov
mov
add
push
or
loop
mov
out
pop
enter
mov
cmp
pop
cmp
jecxz
test
cld
shl
les
ljmp
mov
lock
mov
push
pushf
scas
notl
daa
stos
inc
hlt
cmpsb
cmp
notb
lcall
mov
add
pop
sbb
cmp
pop
add
dec
aaa
in
mov
add
jbe
add
out
xchg
test
cmp
insb
pop
mov
and
scas
das
push
lea
pop
bound
filds
lea
sub
arpl
lahf
xchg
lea
addl
or
sti
les
iret
icebp
aam
xor
inc
stos
push
mov
je
add
data16
lods
mov
add
dec
lds
xor
add
sbb
cmp
shrb
or
dec
mov
jb
cmc
pop
mov
sbb
push
outsl
adc
addl
movsb
in
les
and
cmp
dec
push
dec
or
and
leave
mov
and
lock
cmpb
cmpsl
adc
xchg
dec
lret
hlt
imul
or
adc
das
add
push
stc
lret
xchg
or
scas
inc
out
mov
aas
jo
out
js
mov
int3
push
pop
xor
dec
and
pop
sub
mov
fs
gs
mov
pop
cmp
sub
int
add
daa
ficomps
and
adcl
out
push
push
dec
cmp
pusha
add
lea
mov
sbb
and
insb
aad
push
test
push
shlb
sub
cmpsl
into
add
pop
cmp
push
mov
lods
cmp
push
int3
or
add
mov
or
popf
lcall
add
arpl
cmp
add
add
aas
push
mov
out
int
add
jne
cmp
sub
js
push
cmpsb
in
add
mov
mov
dec
mov
pop
cmpsb
test
or
stos
mov
fisttpll
popf
adcl
cmp
sbb
cmp
xchg
lods
scas
pop
sbb
xor
xchg
imul
xchg
outsb
rolb
inc
inc
sub
cmc
ljmp
xor
push
jbe,pn
push
push
cmpsl
dec
into
mov
push
inc
cld
or
shl
mov
xor
scas
addr16
mov
dec
push
das
cmp
arpl
add
daa
jg
add
dec
xor
cmp
or
aaa
cmpsl
or
shl
cli
iret
call
mov
jle
xchg
ss
push
cmp
and
add
jge
sbb
mov
mov
and
std
jb
dec
add
and
push
push
add
jmp
mov
cmp
popl
mov
jnp
aam
imul
xchg
out
call
scas
pop
dec
imul
xor
push
test
xchg
out
xor
int3
int
xchg
aad
scas
out
jo
add
or
ljmp
enter
push
addb
mov
aam
cmp
add
cmp
sub
or
jns
jmpw
out
add
jbe
lods
out
ds
or
push
shlb
lret
inc
ret
cmc
dec
xor
jbe
fisubrs
fs
sbbb
add
inc
push
adc
jno
sti
sbb
jns
sarl
out
dec
out
and
dec
mov
cmp
jb
add
sbb
jmp
lret
adc
push
xor
mov
outsb
sub
mov
xlat
pop
add
bound
add
dec
cmp
sbb
add
add
lods
mov
outsb
imul
adc
ljmp
sub
icebp
scas
pop
add
insb
nop
dec
mov
bound
xor
popa
push
inc
test
bound
or
dec
pusha
negb
fs
imul
inc
mov
add
fidivl
lock
stos
push
imul
dec
jbe
lock
pop
fistpll
xchg
push
sbb
mov
mov
cwtl
addb
pop
cmp
or
pop
rorb
aam
jmp
in
jno
shrb
push
popw
outsb
push
sub
mov
es
add
fs
mov
add
pop
and
add
xchg
scas
cmp
add
sbb
add
pop
or
jnp
int
icebp
mov
add
lods
push
loope
scas
nop
dec
mov
js
dec
xor
not
adc
adc
repnz
inc
adc
call
call
out
sub
jl
mov
push
mov
mov
add
and
inc
subl
sahf
lret
dec
inc
rol
lock
cmp
subb
or
dec
movsb
imull
out
scas
int3
test
inc
mov
jnp
fbstp
inc
in
dec
sub
lea
lds
or
xchg
or
data16
ret
fldt
adc
mov
mov
nop
jnp
in
lret
xor
xor
js
add
dec
dec
and
repnz
pop
mov
and
into
add
std
stos
jne
adc
pop
mov
adc
gs
mov
inc
lods
sub
enter
in
push
and
dec
mov
stos
fucomi
add
addb
xor
add
ret
dec
or
insl
sub
jmp
mov
icebp
lret
jo
push
loope
jmp
inc
aad
fisttpl
loopne
xchg
mov
xchg
add
mov
adc
xchg
iret
dec
inc
mov
push
add
mov
xchg
insb
sub
inc
aas
push
je
dec
das
push
lods
jmp
add
xchg
xlat
inc
inc
dec
sbb
imul
xchg
adc
push
orb
jl
mov
mov
jl
pop
int
add
pop
test
inc
out
pusha
xchg
xchg
xchg
fcompl
loopne
addr16
ret
and
add
jmp
out
pop
mov
push
mov
add
dec
lods
or
sbb
addr16
xchg
dec
or
sub
adc
insl
add
xor
add
xor
mov
cli
mov
mov
dec
test
dec
sbb
out
jg
insb
xchg
outsb
aam
cmp
xchg
inc
sarb
jnp
fsubrl
call
notl
inc
jne
stc
and
dec
adc
push
dec
aaa
cltd
insb
ret
mov
ret
mov
dec
cs
ja
lods
and
push
add
add
pushf
stos
mov
mov
add
cld
in
pop
jg
testl
pop
add
sbb
push
and
mov
dec
call
ret
aaa
lret
push
ficompl
lods
sub
add
add
cmp
jg
aam
sbb
aam
xchg
movsl
jnp
push
pusha
add
daa
dec
lods
sub
repnz
out
stos
mov
xchg
orl
xlat
sarl
pop
lahf
sub
enter
in
outsl
sarl
push
inc
push
lods
mov
cmp
imul
pop
push
stc
ja
bound
movsl
outsb
lds
xchg
add
clc
test
ret
es
enter
dec
gs
inc
add
ret
add
pop
dec
fcompl
ret
xchg
add
pop
fildl
mov
mov
or
leave
std
pop
insl
add
fimuls
outsb
xchg
ficoml
cld
addl
mov
dec
mov
imulb
xor
adc
mov
cmp
add
add
xchg
and
popl
push
das
inc
jle
loopne
mov
test
je
cltd
xchg
mov
or
mov
fwait
jmp
aas
jp
push
imul
imul
add
dec
insl
ja
add
sbb
es
repz
push
mov
add
orl
cli
cmp
stos
jno
xchg
dec
dec
insb
xor
or
jecxz
push
movsb
jecxz
lods
jbe
push
xor
cmp
mov
add
imul
sbb
les
pushf
wbinvd
xor
mov
aam
in
inc
sub
sub
addr16
fildll
int
add
mov
and
pop
and
jbe
js
loop
leave
push
neg
and
rclb
int3
mov
add
cs
leave
bound
scas
shlb
mov
cmp
data16
insb
fs
nop
mov
dec
int3
or
and
fisubrl
mov
jnp
aas
mov
pop
or
cmpsb
push
mov
and
sbb
mov
adc
sbb
loopne
filds
imul
jg
mov
add
mov
add
jnp
cmc
das
xchg
add
mov
xchg
test
adc
add
adc
nop
jmp
int3
pop
mov
push
movsb
add
popf
sub
add
and
add
test
fimull
pop
adc
or
xor
mull
xchg
sbb
add
add
mov
pop
pusha
test
sbb
inc
aaa
push
mov
addb
jecxz
fists
adc
adc
lcall
xor
jns
jle
stc
mov
bound
inc
push
fdivr
into
sbb
addb
outsb
add
and
sub
push
int3
jge
mov
or
dec
adc
sbb
call
jo
outsl
stos
pop
lods
or
bnd
imul
lcall
dec
shlb
mov
out
pop
out
test
lret
and
add
cmpsb
mov
push
rcrl
fst
lea
lock
cwtl
fiadds
fs
ljmp
daa
ds
outsb
cmc
outsb
sub
cmc
xchg
fsubs
adc
jne
addr16
dec
imul
jge
nop
add
in
les
and
mov
pushf
or
setg
les
rorb
dec
dec
fcompl
sbb
dec
iret
popa
mov
iret
stos
mov
sub
aaa
ret
cmp
ljmp
xchg
nop
xor
push
sub
imul
outsb
pop
add
mov
dec
xor
push
clc
xor
add
inc
and
pop
and
jp
fwait
cltd
mov
mov
popa
xlat
sub
out
xor
lock
test
rcl
xchg
loope
es
mov
xchg
scas
loopne
scas
cmpl
add
mov
cmp
mov
sub
add
inc
dec
mov
rcrl
mov
mov
lret
std
bound
lcall
mov
rolb
add
xchg
gs
leave
xchg
mov
ss
nop
push
movsl
mov
fnsetpm(287
jmp
pop
push
add
mov
and
sub
test
fsubs
out
add
addr16
mov
xchg
or
aad
mov
cmpb
shl
lcall
fs
ja
cmp
loopne
cs
push
mov
mov
lahf
testl
jmp
cmp
push
push
sbb
push
mov
pop
in
cwtl
in
cld
lcall
xchg
fmuls
sub
fbld
jle
repz
lret
cli
mov
pushf
add
gs
add
sub
repz
add
jbe
pop
or
mov
adc
jle
add
loopne
sub
lock
lds
cwtl
xchg
ss
pop
xchg
out
out
jb
sub
push
push
mov
je
add
lods
sbb
arpl
add
add
aam
add
aad
push
mov
add
pop
xchg
push
jecxz
add
add
add
icebp
pop
rolb
add
fnstenv
inc
clc
mov
xchg
jae
jp
add
add
and
inc
add
add
cmp
popl
cmp
add
fcoms
adc
lret
adc
call
add
adc
test
add
xor
dec
scas
and
adc
xor
test
sub
xor
imul
jnp
add
inc
jo
jmp
add
add
or
icebp
add
int
add
xor
add
push
daa
cli
out
add
mov
mov
add
mov
cwtl
in
adc
inc
nop
add
imul
add
test
push
in
lret
shll
inc
mov
fwait
mov
in
cli
and
mov
add
and
repnz
test
cwtl
cmp
mov
mov
ret
js
sti
int3
je
jg
dec
fisubl
lds
add
into
add
pop
xor
add
inc
pop
outsl
sti
add
mov
mov
add
xor
stos
adc
mov
and
add
leave
movb
push
lahf
adc
or
xchg
dec
arpl
dec
add
jl
pop
add
fdivl
add
rcll
add
inc
mov
cmp
mov
jl
test
xlat
mov
lret
les
hlt
mov
ljmp
jp
or
inc
jl
xchg
pop
add
ficompl
mov
add
xor
outsb
cld
add
scas
cmp
mov
and
test
nop
xchg
add
scas
xchg
xchg
movsl
enter
outsl
sub
jmp
es
push
adc
aad
cld
sbb
jmp
les
cmp
inc
push
push
sbb
in
stc
or
int3
mov
jne
push
outsl
js
dec
lret
js
popf
add
lea
or
dec
jae
testl
add
gs
jmp
mov
outsl
add
cmp
jne
cs
inc
inc
sbb
cmp
and
cmpsb
add
dec
ret
lret
inc
sti
or
fcoms
ret
aam
test
int
popa
roll
jbe
testb
pop
shlb
inc
sub
pop
mov
inc
add
call
sub
mov
cmp
sub
sbb
mov
add
xor
xchg
sbb
test
sar
fisttps
imul
out
call
dec
sahf
movsb
push
sahf
adc
push
inc
cwtl
mov
or
push
mov
movsl
aad
scas
mov
mov
and
fists
fildll
pop
mov
inc
scas
add
inc
jae
daa
aas
icebp
jmp
and
scas
mov
les
add
aad
test
leave
sarb
xor
jae
aas
subl
add
imul
orl
lret
xor
inc
daa
bound
jle
add
lock
daa
add
and
add
add
jmp
and
in
es
int3
or
shlb
sbb
push
out
mov
into
iret
rorl
mov
xchg
iret
or
sbb
mov
cmpsl
push
sahf
ret
mov
add
shrb
cwtl
jae
iret
jecxz
xchg
repz
and
inc
and
mov
sarb
inc
daa
push
call
pushf
cwtl
lcall
add
cld
add
inc
push
push
int
fs
pushf
ja
jo
mov
mov
fdivrl
lds
loop
add
or
ja
and
imul
pop
decb
leave
mov
in
or
xor
sbb
push
pop
adc
mov
sbb
xchg
sbb
shlb
add
dec
mov
lret
xor
push
push
cmpsl
int
dec
stos
cmp
and
fwait
das
xchg
mov
cmp
sub
add
jo
lods
sub
orb
stos
add
mov
push
inc
frstor
push
testl
jne
divb
leave
xor
stc
adc
std
push
jmp
cld
rclb
mov
xor
gs
bound
out
pop
xchg
sub
dec
mov
ror
or
mov
fs
lret
push
pop
dec
fistl
out
xorb
push
add
xlat
popa
into
add
mulb
scas
fwait
lds
cltd
outsl
mov
je
cltd
test
xchg
push
fimull
adc
xor
add
sub
add
dec
xorb
dec
add
sbb
ljmp
lods
add
xor
mov
iret
cwtl
jo
shlb
add
mulps
or
mov
ss
cmpsb
imul
cmc
das
shll
lods
adc
mov
add
int
jnp
jge
jp
les
je
adc
sbb
add
mov
mov
adc
cmp
leave
dec
daa
cmpsl
lret
xor
sahf
jb
imulb
add
popf
leave
xchg
add
or
xorl
dec
xchg
cmp
fdivs
ret
xor
mov
into
sahf
lcall
sbb
inc
test
int
in
push
movsl
icebp
cld
inc
orb
push
sahf
add
add
mov
enter
pop
add
push
enter
or
push
xchg
cmpsl
jae
cmp
xor
inc
inc
add
out
pushf
js
xor
ds
pop
sub
adc
xchg
cltd
iret
xor
jns
jmp
cmpsb
leave
adc
mov
dec
adc
int
mov
mov
mov
sti
jge
adc
scas
add
cmp
xor
mov
mov
pushf
testb
scas
push
fstpt
scas
inc
mov
test
push
ret
fpatan
es
aas
rcrb
scas
nop
icebp
out
adc
in
fs
or
arpl
xlat
addr16
stc
aad
add
in
imul
movsl
and
mov
add
add
add
push
or
xchg
adc
loopne
sbb
mov
fs
test
fldcw
ret
addr16
fistpll
call
xor
insl
jecxz
test
cli
add
xchg
sbb
fbstp
iret
test
jle
xor
pop
mov
push
into
outsb
into
jno
aas
mov
xlat
mov
xor
pop
add
outsb
cmpsb
lods
jle
sbb
sub
js
jbe
js
sbb
mov
dec
in
lods
pop
nop
lds
pusha
lock
test
idiv
and
xor
jle
sub
pop
mov
lea
xchg
push
lahf
mov
ja
add
gs
cmp
femms
or
inc
frstor
dec
scas
mov
scas
cmc
nop
loope
fadds
fmul
push
jno
inc
mov
clc
sti
iret
inc
cmp
dec
rolb
mov
addl
jmp
inc
orb
inc
lahf
xor
xlat
jp
add
and
cmp
loop
add
andb
scas
insb
dec
scas
cltd
add
push
negl
repnz
xor
xor
cmp
push
add
push
mov
test
int3
cli
ss
hlt
add
sub
dec
pop
popa
mov
popa
fisubrl
loope
sbb
xchg
xchg
mov
jno
add
icebp
fsub
shll
sbb
arpl
lds
ljmp
mov
ds
or
and
das
add
cli
cmpsl
ja
lods
inc
xor
add
add
add
sub
gs
loopne
loope
xlat
gs
adc
clc
aad
stos
and
adc
mov
daa
jnp
add
cmp
and
out
jno
jbe
mov
aaa
test
xor
icebp
xchg
rcrb
inc
mov
icebp
xor
andl
adc
out
cld
scas
jo
pop
out
stos
nop
cmp
cmpsl
and
je
in
mov
jg
mov
cmp
sub
das
sbb
fsubrl
sub
pop
lcall
movsb
add
cmp
dec
add
jecxz
les
cmpsb
cmp
bound
insl
fsubr
pop
sbb
jg
push
imul
aas
faddl
inc
pop
inc
int3
xchg
repnz
sarb
or
sub
sbb
imul
addb
stos
ret
cmpsb
jne
decb
push
ljmp
and
dec
add
sbb
mov
mov
les
out
mov
mov
adc
sbb
jae
roll
stc
shr
pusha
es
test
add
jecxz
add
mov
mov
push
in
cmp
push
leave
out
adc
loopne
inc
repnz
in
pop
xchg
jns
lea
jns
testl
outsb
pop
orl
bsr
pmulhw
adc
mov
and
lret
add
aam
pop
dec
fs
sbb
cmp
jl
js
insb
dec
add
jns
test
xlat
jb
pop
clc
mov
push
mov
dec
roll
cmp
jns
adc
scas
pop
cmpb
int3
cmc
add
xchg
push
and
push
cld
cmp
push
mov
mov
out
inc
pop
add
clc
dec
fs
jg
stc
testb
pop
xchg
mov
pop
and
mov
xchg
ss
daa
pop
stos
adc
pop
mov
sbb
out
inc
icebp
iret
sarb
xchg
addl
pop
xor
push
fucomip
sbb
push
mov
shll
test
xchg
jno
push
std
filds
pushf
sub
lahf
push
add
fildll
mov
clc
cld
cmpsb
sahf
push
pop
test
xor
lods
xchg
mov
jl
rclb
dec
sbb
add
mov
mul
mov
xchg
jno
add
clc
aaa
outsl
mov
jno,pn
jbe
sub
insl
sbb
fsin
movsb
cmp
mov
out
mov
pop
loopne
jne
ds
dec
int3
sbb
and
in
aam
ror
sbb
jg
cltd
add
jmp
add
ja
cmpsb
ja
dec
add
xlat
pop
xor
xor
jb
mov
jecxz
push
xchg
and
stos
push
or
jno
inc
mov
into
lret
cmp
add
add
add
sti
add
rolb
xor
pop
cmpsl
mov
inc
sbb
mov
imul
dec
aaa
or
into
mov
sbb
mov
mov
cmpsl
and
add
adc
stc
add
or
inc
add
movb
add
popf
jecxz
insl
std
push
arpl
xchg
movsb
rcll
pop
rcll
imul
das
add
and
shrl
mov
inc
dec
test
mov
inc
inc
add
xlat
jle
ja
sbb
jns
mov
dec
add
test
fsubrl
push
sub
xor
xor
mov
cwtl
xchg
aaa
cwtl
aad
aad
cmp
xor
das
push
test
cltd
add
jnp
int
push
xchg
jb
add
pop
push
push
daa
xor
cs
ljmp
mov
add
add
sbb
lds
lret
add
mov
shlb
mov
dec
addl
cld
push
sbb
arpl
xchg
and
repz
out
mov
fimuls
scas
xor
loop
mov
jmp
sub
cmp
and
addl
dec
pop
int
adc
popa
ja
xor
push
xchg
movsb
xchg
add
push
jge
add
push
pop
push
add
rcr
xchg
stc
inc
inc
dec
add
test
dec
add
push
imul
dec
cmp
add
outsb
and
add
add
dec
sbbl
pop
xor
fs
add
and
in
jne
add
stc
or
sbb
add
adc
push
in
jns
leave
jmp
pop
add
sub
mov
insl
xor
add
fldenv
ret
add
push
cmc
jmp
jb
xor
xor
jnp
dec
icebp
fmuls
cmp
inc
fwait
int
inc
sbb
mov
mov
jl
aas
adc
inc
lret
fildll
cmp
add
incb
cmp
data16
or
xor
aas
clc
ret
cmpsb
loop
and
mov
pushf
in
stos
lods
test
sahf
lods
adcl
xchg
inc
scas
fsubrl
mov
pop
mov
scas
add
push
in
arpl
roll
xchg
and
dec
add
into
mov
add
mov
push
add
adc
or
movsb
jbe
xor
xchg
add
inc
mov
cmp
incl
divb
or
insb
aam
sbb
cltd
add
xchg
xchg
stc
mov
call
clc
pop
push
add
push
push
leave
pop
add
xor
scas
xor
jb
pop
stos
push
add
sub
sub
repz
add
mov
or
out
mov
add
imul
std
mov
jae
push
jle
int3
cld
int3
std
sbb
shlb
or
iret
mov
xchg
out
mov
add
icebp
add
in
sbb
aas
mov
xchg
call
clc
inc
add
adc
xchg
mov
mov
mov
xchg
sbb
mov
sahf
add
sbb
add
add
test
push
pop
cld
verw
adc
inc
dec
push
fwait
arpl
add
clc
lahf
jnp
pop
add
push
xor
adc
add
lds
dec
add
addb
cld
faddl
call
incl
in
add
add
jb
and
push
fsts
test
add
pop
call
cmp
clc
neg
icebp
xacquire
xchg
mov
out
jno
and
push
movsb
push
popa
add
dec
cmp
add
pop
add
mov
faddl
jecxz
add
shrl
add
cmpsl
sbb
jb
xor
mov
repz
lods
dec
aad
push
int3
out
fldl
out
dec
add
aas
int3
add
jp
xlat
mov
fwait
cwtl
cmp
cli
aaa
add
cmp
insl
jne
lcall
inc
add
fwait
js
ja
jae
add
sub
or
add
icebp
cmp
mov
insb
adc
hlt
dec
ljmp
cmpsl
les
add
mov
xchg
lcall
inc
add
mov
int
fisttpll
add
shl
sbb
je
cs
inc
cmp
out
pop
pop
mov
xor
push
adc
cmpsl
adc
out
aad
leave
push
mov
push
mov
sbb
inc
sub
dec
add
sub
push
xor
sbb
mov
add
lret
test
popa
xor
cmp
cmp
and
add
push
jo
adc
int3
lcall
add
out
rolb
ds
push
stos
iret
xor
lods
dec
pop
push
mov
test
inc
dec
mov
add
imul
cmp
add
rcll
cltd
dec
sahf
mov
dec
imul
add
call
jne
and
test
mov
mov
out
imul
add
or
add
push
rorb
cmpsb
iret
fxch
inc
int
or
lds
mov
lock
jne
push
add
push
fcoml
xor
mov
dec
out
mov
ja
xor
lea
nop
popf
lea
xchg
jmp
out
dec
sub
in
add
ret
xchg
add
or
dec
mov
lret
jmp
inc
into
fists
mov
cld
mov
xchg
shrb
jo
imulb
jle
add
ficoml
add
and
xor
mov
add
js
dec
sub
test
dec
addb
xor
fisubrl
cmc
xor
testl
sti
inc
xchg
gs
adc
lock
jecxz
popf
mov
pop
repz
sti
ljmp
add
and
pushf
add
cmpsb
cmp
inc
jae
les
sbb
or
add
mov
cmp
inc
push
ret
push
test
fs
mov
xor
push
out
imul
aaa
movsb
arpl
mov
stos
jle
mov
add
sysenter
mov
pop
inc
mov
in
mov
add
int
add
inc
test
adc
mov
jbe
pop
je
xchg
fcos
test
aam
decl
jle
pop
xchg
mov
ror
aas
inc
jnp
loop
pushf
lock
mov
aad
imul
xchg
sub
in
std
lahf
shlb
inc
add
loopne
and
pop
mov
xchg
or
ljmp
or
dec
dec
mov
xchg
lods
mov
stos
dec
imul
sbb
add
add
jl
cs
clc
add
add
shlb
pop
push
aaa
mov
jno
add
pop
dec
or
dec
jo
cmp
xor
add
insl
or
sbb
dec
test
add
cmpsb
in
xchg
ret
add
xor
add
gs
pop
dec
xor
rolb
push
call
std
sub
dec
jecxz
cmp
cmp
sbb
mov
xor
sbb
mov
and
mov
insl
adc
jmp
mov
imul
cld
cmp
inc
or
dec
mov
sbbl
mov
add
aam
gs
push
adc
loop
sub
add
mov
xchg
adcl
fisubl
leave
add
jmp
outsb
add
jnp
xchg
in
inc
je
test
xchg
cmc
add
gs
jl
loope
mov
es
inc
mov
outsb
out
arpl
insl
xchg
add
pop
cltd
test
dec
add
jbe
cmpsl
xor
mov
ljmp
add
es
sbb
fisttps
mov
push
add
inc
inc
fadds
mov
data16
xor
cltd
sbb
add
mov
push
xor
nop
fimull
mov
inc
pop
pop
imul
add
mov
add
mov
or
scas
insl
js
out
and
xor
mul
add
add
icebp
int
je
popw
jl
xor
lret
add
push
sahf
mov
das
push
fcmove
jg
adcb
negl
insl
xchg
imul
cmpsb
pop
vmovdqu
addr16
mov
movsb
mov
out
push
dec
push
lock
pushf
lds
sub
push
test
adcb
jo
xchg
in
add
or
enter
mov
jb
in
cmp
adc
cs
cmovl
sti
outsl
mov
shl
jmp
cmp
mov
jg
leave
mov
sub
insb
pop
and
sub
sarb
add
in
pushf
push
push
cmp
loope
cmp
ds
sub
pop
cmp
mov
ja
addb
or
push
mov
pop
out
pop
pop
fidivs
xchg
hlt
fbld
xlat
flds
sub
in
mov
sub
jo
insl
push
mov
nop
pop
dec
pop
stc
push
aaa
pop
cmp
xor
dec
cmp
aad
add
lcall
add
sbb
fdivl
roll
mov
fcmovnu
and
stos
xchg
outsl
fisubs
pop
jno
jecxz
jae
cltd
or
push
mov
cs
mov
outsb
cmpsl
add
jecxz
mov
dec
ret
fstpt
lret
pushf
pop
and
push
xchg
push
shlb
jmp
add
cmpb
aas
pusha
mov
push
inc
aad
sub
dec
add
sub
sarl
popf
mov
fimuls
stos
sbb
loope
and
in
fisttpl
mov
cmp
pop
sbb
xor
test
testl
mov
pushl
test
int
or
sbb
lret
or
jmp
adc
push
cld
xchg
mov
adc
or
mov
xchg
mov
jb
fwait
sub
mov
cmp
add
cmp
sub
mov
ret
icebp
mov
jecxz
mov
stos
loopne
les
sti
ret
add
rcll
pop
subl
dec
subb
mov
in
add
xchg
or
rorl
mov
stos
das
add
int3
pushf
mov
out
sbb
add
sbb
lock
sub
inc
es
clc
add
inc
xor
xchg
add
jns
je
inc
push
nop
adc
pop
daa
dec
js
mov
pop
and
pop
ret
mov
rcl
adc
es
mov
and
cmp
add
ficoml
push
pop
jmp
push
add
mov
or
pop
or
stos
adc
inc
xchg
dec
test
sbb
add
cmp
in
test
test
dec
hlt
sub
mov
or
icebp
out
or
aam
les
cmp
daa
pop
popa
add
sbb
insb
cltd
inc
jle
jno
fucomip
add
rcr
jmp
out
push
addr16
scas
test
or
in
popa
add
xchg
testb
mov
dec
insb
sub
add
rcll
add
dec
cli
adc
pop
lods
jp
pop
xorb
mov
xor
jge
sti
out
rclb
repnz
out
call
push
sbb
adc
lret
adc
fnstsw
mov
pop
mov
sarb
add
push
jp
rcrl
rcrb
sarl
mov
cmpsb
ficoml
dec
popa
dec
clts
negb
inc
jno
mov
adc
mov
dec
ficoms
nop
dec
lea
inc
bound
in
push
clc
out
in
out
mov
mov
call
filds
std
sbb
sbb
lds
dec
jnp
mov
sbb
xchg
pushf
push
adc
or
or
jecxz
scas
scas
in
stos
sarl
sub
push
xchg
or
imul
outsl
mov
leave
pop
sbb
or
ficomps
xchg
mov
cmp
gs
jg
add
sbb
loope
call
add
xchg
mov
xor
or
les
and
xor
dec
or
adc
push
push
push
xchg
ss
cmpsb
int3
pusha
mov
jbe
xor
jmp
pop
enter
mov
cltd
loopne
mov
push
dec
add
call
fistpl
add
jp
fxch
or
lret
jle
mov
xchg
sbb
mov
cld
sub
mov
mov
sarb
pop
rcrl
pop
aad
mov
add
js
mov
rorb
mov
fstpt
movb
call
lods
push
sbb
es
inc
mov
or
test
mov
push
clc
hlt
rorl
outsb
mov
add
jno
mov
add
pusha
cmpsb
mov
pop
test
fadd
xchg
adc
rcll
dec
dec
mov
imul
and
stos
inc
popf
fcoml
add
fcoml
push
cmpl
add
cmp
testb
add
xor
push
leave
pushw
lea
sar
push
add
jg
jg
in
lds
or
inc
mov
testb
mov
out
jmp
xchg
lahf
imul
push
iret
jnp
jno
cmp
imul
push
jno
out
add
movsl
fldenv
inc
leave
cmp
dec
enter
daa
pop
popf
and
push
js
sbb
pop
pop
stos
stos
stos
shlb
cmpsl
sub
adc
push
add
pop
cltd
and
pop
iret
shll
mov
pop
data16
mov
adc
and
outsl
add
sbb
movsb
add
cld
insb
add
imul
addr16
add
mov
add
pop
push
hlt
and
lahf
adc
jmp
idiv
add
mov
add
add
pop
nop
mov
rolb
pusha
add
add
adc
xchg
aas
inc
pop
ljmp
pushf
repnz
sahf
mov
rol
fistps
adc
add
data16
loop
lods
ficomps
inc
inc
xchg
add
add
add
ret
jecxz
call
aad
cltd
jae
sub
lock
enter
add
lcall
xor
jl
popl
inc
xor
dec
ss
xor
in
ljmp
das
pushf
leave
push
mov
sub
hlt
ljmp
cld
add
add
add
and
loope
add
add
popl
add
lods
cmp
xchg
mov
xlat
add
cmc
push
xor
mov
add
lahf
add
push
ss
fdivrs
adc
mov
and
cld
add
loopne
push
cmpb
rol
add
repz
push
repz
add
pushf
pop
fsubrs
sbb
xor
add
mov
push
jle
mov
insl
mov
arpl
mov
pop
fwait
add
out
adc
add
scas
adc
ljmp
adc
mov
out
mov
mov
dec
or
sub
mov
push
divb
pop
adc
push
or
ror
flds
outsb
dec
xchg
adc
add
in
loope
lds
fisubrl
mov
mov
scas
inc
stos
cmpl
adc
jno
mov
mov
repz
pushf
cmp
add
mov
int3
add
push
sub
push
xor
lret
add
sar
nop
mov
insb
inc
push
rclb
mov
clc
mov
mov
xor
sbb
push
rolb
add
mov
lods
movb
cmp
add
into
and
dec
jb
shrd
xchg
sahf
ljmp
push
loopne,pn
dec
inc
jle
addb
aaa
fsubr
ss
repnz
xchg
imul
test
sub
lods
loopne
jmp
pop
clc
dec
ret
mov
xor
adc
cmpsb
lret
shll
sub
mov
enter
dec
insl
and
cmp
insl
push
sbb
shr
jnp
adc
lock
and
fs
add
mov
cwtl
fsubs
push
dec
outsl
outsl
mov
mov
iret
push
int3
xchg
jae
xchg
mov
in
add
cld
and
add
insb
jp
sbb
iret
cmp
mov
in
gs
movsb
movsl
jnp
push
scas
daa
pop
movups
pop
or
inc
inc
pop
movsl
mov
in
xchg
out
roll
fiadds
addr16
movsb
imul
mov
mov
push
clc
xor
mov
or
add
mov
pop
loop
add
jecxz
cmpsb
repz
pop
cmpsl
movsb
adc
dec
add
test
stos
stos
xchg
mov
sbb
mov
push
dec
cmp
jg
xor
mov
fwait
xor
cld
fidivrs
xlat
sub
cmpsb
aam
add
lock
fwait
out
mov
push
imul
stc
adc
je
rol
out
push
lahf
cli
mov
lods
cs
stc
add
mov
add
cmp
dec
rolb
mov
sub
js
jnp
in
jmp
pop
sub
push
fiadds
mov
cmp
push
scas
gs
mov
fs
pop
or
mov
sti
push
push
test
mov
add
push
orl
mov
cmp
sub
fldt
xchg
sbb
ja
pop
shlb
xchg
insl
jp
ljmp
test
jbe
push
ss
xchg
mov
xlat
out
adc
push
or
std
push
xor
push
scas
loope
bound
cmc
cmpsl
jnp
add
pop
test
pop
cmpb
loop
leave
lahf
and
or
test
pop
iret
mov
sub
mov
sub
je
add
mov
add
lea
sbb
inc
jnp
jae
flds
mov
pop
add
cmp
mov
mov
mov
in
pop
sbb
mov
testb
mov
scas
jle
xor
je
xor
loop
add
cmp
add
xchg
les
lret
sbb
in
mov
xchg
pop
ret
dec
lret
and
and
ja
dec
pop
leave
pop
neg
out
call
test
jg
mov
loop
aam
or
popf
mov
xchg
inc
repnz
cmpsb
xor
int3
xor
clc
js
mov
std
das
cmpsb
dec
cmpsl
inc
sub
and
cmpsl
mov
add
dec
mov
out
cwtl
or
das
sti
test
lret
int
inc
adc
jecxz
or
inc
jae
ds
push
outsl
xor
xchg
rorl
out
in
dec
jecxz
sbb
idiv
sub
shll
or
out
xchg
add
dec
dec
repnz
sbb
sub
call
lcall
jmp
dec
or
pop
rcl
and
jnp
xchg
push
scas
pop
sbb
arpl
dec
enter
fdivrs
mov
add
and
push
add
push
mov
popf
or
add
outsb
mov
adc
or
cmpsb
cmp
lock
jae
pop
xor
ss
xlat
mov
fnstenv
icebp
add
mov
mov
dec
or
adc
xor
test
repz
jmp
rcll
xchg
dec
mov
add
cld
sbbl
repnz
cwtl
or
dec
pop
rcrb
sbb
ficomps
dec
adc
add
mov
xlat
adc
and
les
in
outsl
scas
xchg
cmp
sub
add
stos
out
loopne
adc
push
pop
or
adc
addl
xchg
stc
test
or
push
mov
jecxz
std
lock
or
xchg
or
insl
nop
jbe
jno
lods
popa
add
imul
lods
add
inc
leave
xchg
jnp
mov
les
dec
arpl
scas
aam
dec
rcrb
sbb
pop
ret
in
loope
es
jp
ljmp
aas
out
jge
cmpsb
cmp
repz
pop
jnp
pop
adc
lods
mov
inc
pushf
xchg
dec
adc
gs
jle
or
in
outsl
das
in
xor
xor
pop
outsl
jb
and
lods
setbe
test
mov
cmp
cld
out
mov
mov
cli
repnz
sub
ret
sbb
clc
and
fmuls
mov
movsl
outsb
dec
mov
mov
aas
or
das
insb
mov
fsubrs
std
or
mov
mov
and
rcrl
aad
lret
jg
sahf
and
mov
outsb
sbb
mov
push
and
imul
or
out
pop
dec
lret
and
lods
push
xor
ret
adc
mov
cmp
jbe
cltd
mov
jge
jmp
out
cmp
mov
sub
stos
or
dec
nop
cmpsb
outsb
fwait
int
imul
pop
ds
negb
pop
dec
dec
das
dec
add
sbb
jb
ret
sbb
fsubrl
subl
aam
push
pop
mov
xchg
inc
fidivrs
aas
sub
cltd
jle
les
ret
lcall
pop
or
add
sbb
outsl
movsl
mov
imul
pop
jmp
dec
cmp
xor
lret
lds
or
frstor
cmpsb
pop
mov
ljmp
in
jmp
add
xchg
ds
sbb
insb
into
pop
push
fwait
mov
push
xor
add
loope
adc
inc
adc
rcrl
pop
fistl
mov
add
mov
xor
cwtl
cltd
pusha
sarb
mov
cmp
and
sub
and
imull
lods
add
jns
rcll
movsl
inc
cmp
hlt
fdivs
push
sub
or
mov
push
jle
das
pusha
xchg
xor
mov
sub
mov
cmp
adc
insl
sub
add
add
or
jo
mov
icebp
adc
inc
mov
push
call
cs
jl
jo
sbb
or
outsb
test
mov
sbb
push
and
lds
mov
xchg
dec
lds
cli
mov
movb
push
icebp
xchg
int
mov
enter
cmp
lock
push
pop
fs
jb
fisubrs
pop
data16
shl
clc
push
fidivrl
ljmp
or
mov
inc
ficoml
movsb
in
sbb
push
sti
in
pop
add
xchg
sub
ds
cmp
mov
aas
adc
cmpsb
jb
inc
or
andb
cld
add
mov
es
xchg
xor
fdiv
mov
jmp
mov
shll
aam
das
enter
mov
adcl
popf
cmp
fdivp
movl
ljmp
movsl
int
shlb
fcomip
les
addr16
sub
cs
mov
lods
jp
sti
leave
call
jl
sub
jnp
and
dec
cmc
mov
cs
ret
ret
push
in
fiadds
stc
sbb
inc
jmp
imul
add
rcrl
shlb
test
jno
jnp
mov
jg
sub
push
mov
push
xchg
add
sub
sub
push
mov
xor
push
dec
mov
lock
inc
push
fsubrs
and
and
cmp
mov
int
or
test
xor
adc
pop
jo
inc
pop
fs
xor
add
push
push
movsl
in
stos
cwtl
push
add
loop
add
sub
loopne
add
frstor
add
arpl
dec
and
jp
jl
xchg
popf
push
add
push
dec
mov
add
into
jmp
jl
js
and
add
dec
dec
or
xor
lret
mov
loope
imul
or
jle
dec
sbb
or
mov
push
sbb
mov
lods
mov
mov
sub
jmp
or
xor
fdivrp
into
pushf
decl
movsl
lahf
add
jo
das
lea
sbb
jmp
sbb
sbb
pop
xchg
add
mov
cmpsl
dec
or
jecxz
inc
add
pop
iret
pop
lcall
pop
xchg
cmp
adc
arpl
and
fs
idivl
inc
jl
std
push
shrb
jp
or
into
push
add
pop
mov
jmp
xor
pop
add
in
mov
mov
imull
sarl
out
insb
adc
and
enter
sub
daa
mov
cmp
mov
lret
sub
ljmp
lods
fldl
mov
sti
inc
dec
mov
adc
int
mov
mov
loope
int
inc
xor
pop
rolb
xchg
sub
call
mov
add
pop
test
add
mov
jge
jno
in
sbb
ds
mov
pusha
or
fldt
sub
sub
add
mov
mov
xchg
lret
xchg
loope
and
pop
and
cmpsl
push
cmp
or
and
fimull
inc
inc
out
inc
mov
push
cmp
mov
xchg
pop
xchg
fucomi
repz
bound
shrb
xchg
addr16
add
cmc
sarb
add
jb
xchg
add
sub
and
cmp
mov
cli
jmp
add
or
add
movsl
xchg
add
test
pop
stos
xchg
mov
add
add
dec
add
sbb
and
repz
jbe
dec
roll
cli
fidivs
jb
add
out
dec
or
push
jmp
in
repnz
or
jl
add
add
incb
int
mov
jecxz
sbb
jno
push
adc
add
shlb
mov
repnz
test
and
push
sbb
mulb
sbb
add
and
pop
mov
sar
movsb
add
push
sbb
pusha
imul
pusha
shr
lea
popf
add
adc
in
lcall
sbb
rol
add
dec
ljmp
or
jno
out
pop
xchg
xor
lods
iret
add
lret
repnz
and
sbb
ret
jno
jecxz
add
mov
andl
sbb
mov
cld
push
daa
inc
sub
pop
mov
xchg
mov
scas
cwtl
add
inc
sbb
frstor
addl
add
pusha
pusha
sub
cmpsl
nop
add
out
inc
mov
ret
sbb
mov
stc
ss
sub
enter
add
sarb
adc
dec
dec
loopne
cmovs
add
push
inc
pop
add
adc
push
adc
mov
push
pop
xchg
push
fidivl
and
push
scas
outsb
jnp
aad
cmp
lret
jge
jne
add
aam
push
pcmpgtb
daa
pop
push
mov
jb
cmp
xlat
insl
int3
shlb
data16
fwait
std
lods
mov
add
sahf
in
leave
inc
fwait
or
add
and
push
roll
leave
xchg
xchg
ret
inc
and
or
test
mov
or
sub
mov
mov
arpl
push
jae
sbb
fidivrl
in
sti
mov
and
aaa
push
jbe
mov
add
mov
inc
aam
inc
mov
jle
pop
sbb
xchg
add
cmp
xchg
push
add
bound
adc
add
daa
sahf
mov
bnd
push
aaa
ds
sbb
lea
jle
inc
add
pop
add
inc
xor
dec
in
push
add
lods
push
aad
movsb
in
clc
add
or
jge
repz
test
xor
add
data16
and
add
dec
push
loope
std
cmpsb
add
packuswb
loope
push
jmp
xlat
sub
faddl
sbb
sti
jo
dec
popa
jne
dec
xchg
rcrl
xor
cmp
add
aas
push
mov
js
push
push
fimuls
iret
sbb
and
roll
insb
insb
sbb
dec
pop
mov
movsl
mov
scas
mov
add
lahf
add
dec
je
xchg
push
add
sti
mov
add
out
sahf
fildl
imul
pop
testb
mov
cmp
outsl
in
push
call
ret
mov
xor
ds
dec
add
loopne
add
push
mov
xor
lret
ret
push
add
std
lcall
sub
adc
pop
jo
loopne
add
ret
mov
mov
mov
fistpl
add
cmp
add
dec
jp
sti
pop
inc
add
in
ljmp
lods
and
out
int3
loop
cwtl
add
lcall
stc
test
popa
lret
push
cmp
call
ficomps
xchg
enter
shl
add
mov
test
xchg
add
sub
scas
sbb
push
jge
add
mov
mov
in
aam
add
insl
hlt
xchg
addl
xchg
out
mov
adc
add
xor
in
or
lea
push
vmovapd
xor
jge
add
push
mov
cmpl
adc
ffreep
repnz
push
out
cmp
scas
cmp
or
add
jnp
mov
or
push
loopne
arpl
fmuls
xor
add
add
push
add
jle
aaa
dec
mov
xlat
xorb
jle
cs
testl
add
int
mov
rolb
cmp
fs
mov
sub
test
call
cmpsl
in
cmpl
pop
dec
sahf
shrl
in
stc
les
js
mov
icebp
les
inc
int
or
mov
sbbl
pop
sub
push
jg
jb
mov
mov
inc
inc
mov
pop
sbbl
pop
loope
mov
jbe
scas
sbb
add
jae
pop
mov
int3
adc
xchg
or
mov
repnz
mov
out
jl
scas
add
cs
das
adc
push
lock
adc
sub
popa
add
inc
lds
data16
movl
inc
sbb
gs
sbb
sarb
push
pop
sar
insb
xchg
dec
cmc
mov
cmp
cmp
sbb
call
xchg
mov
out
shl
sarl
sub
pop
mov
pop
add
dec
loop
push
mov
test
add
bound
ret
mov
loopne
filds
out
push
push
aam
jb
lds
jg
xchg
and
loop
lret
cli
fiadds
sub
adc
sbb
lcall
stos
scas
fsts
outsb
sub
sbb
dec
inc
shll
cmp
jmp
fisttpll
jge
sbb
jo
out
call
mov
inc
and
adc
cmc
ds
mov
jmp
add
xor
mov
scas
jle
inc
in
xchg
mov
int3
inc
aad
lods
roll
rcrl
movsl
jge
dec
test
sbb
and
jno
test
test
fisttpl
or
pop
sub
fs
test
imul
arpl
inc
testb
mov
inc
out
mov
inc
nop
inc
fcomps
cmc
test
and
fisttpl
test
push
daa
loop
sub
pop
mov
mov
push
mov
cli
jge
pop
mov
fs
or
push
mov
shl
jbe
int
aas
js
mov
push
sbb
push
add
movsb
in
mov
lea
mov
add
insb
or
add
cmp
jg
and
scas
mov
enter
push
adc
clc
mov
push
dec
mov
xchg
cmp
outsl
xchg
jmp
push
pushf
sub
or
add
xor
setno
sbb
test
fstpl
mov
adc
jbe
lds
lret
add
jp
popf
lahf
iret
shlb
ja
outsl
sub
mov
nop
mov
sbb
cmpsb
or
ret
popa
iret
and
cmp
add
call
mov
adc
insb
mov
xlat
stc
mov
lea
lret
call
adc
lret
mov
jb
jb
and
xchg
out
cltd
xchg
mov
xchg
xchg
jle
rolb
idivl
mov
cmp
lret
pop
ds
sbb
mov
lret
pop
stos
sub
sarl
add
mov
daa
jg
dec
jne
push
imul
xchg
test
ficompl
adcl
out
mov
mov
sub
add
cmp
outsl
sbb
lods
sbb
mov
cltd
jmp
or
negb
or
sub
push
pop
dec
cmp
clc
cmp
outsl
cwtl
mov
pop
xchg
cmc
sub
push
xor
add
and
and
or
je
mov
push
bound
in
and
add
add
dec
inc
dec
mov
movsl
imul
popa
out
inc
mov
lea
int3
pop
out
repnz
sbb
add
andl
in
jle
fsubs
jne
mov
mov
int3
push
call
mov
arpl
jo
test
dec
mov
sar
cmp
push
push
sti
ret
inc
stc
rcrb
dec
push
mov
cmc
stc
add
cmp
scas
push
rol
out
cmp
xor
sub
xlat
sub
cmp
mov
jbe
adc
nop
sbb
pusha
stos
inc
ret
pop
pop
and
mov
adcb
nop
mov
and
jo
add
add
push
out
icebp
inc
pop
push
pop
add
adc
rcr
nop
mov
dec
and
insb
cmp
test
and
ljmp
sarl
icebp
into
stos
push
or
jnp
sbb
dec
add
fldenv
movsb
mov
sbb
lock
add
pushf
in
jae
jmp
add
xchg
xchg
jp
push
push
sub
aad
out
imul
and
add
sbb
mov
or
sbb
jns
loope
dec
imul
popa
sahf
jnp
dec
push
sub
and
add
add
add
push
dec
dec
adcl
aam
sbb
and
jle
pop
sbb
fldl
cmp
jae
fdivl
add
sbb
pop
out
sti
hlt
push
fdivrl
and
ds
cmc
dec
decl
push
jmp
pushf
mov
int
add
or
rcrb
mov
rcrb
dec
dec
fistpl
jns
add
sub
popa
pop
aas
pushf
xchg
mov
dec
cmp
dec
and
inc
mov
jne
inc
mov
pop
cmp
aaa
pop
jge
pop
inc
stos
and
in
lret
neg
ret
dec
hlt
mov
in
add
call
adc
lret
scas
or
stos
cltd
xor
loope
das
and
in
ret
xchg
push
enter
or
sub
out
arpl
ficoms
or
dec
test
lcall
add
dec
cld
icebp
sbb
mov
dec
add
cmp
jnp
daa
sahf
test
test
or
cmpb
or
xchg
data16
pop
jl
push
or
cmp
fs
jle
in
or
jecxz
jl
cmp
ljmp
loopne
mov
fadds
xor
cmc
jb
inc
lds
fisttpl
cltd
ret
xor
fldcw
fisubrs
cmp
and
pop
add
daa
jg
je
pusha
sbb
fists
mov
adc
sbb
add
add
dec
xchg
or
jle
test
mov
stos
insb
dec
out
dec
loope
in
mulb
adc
test
xchg
stc
xchg
xchg
cs
mov
mov
mov
rcrb
fldl
sbb
inc
jne
test
cmpsb
fistpll
sub
inc
add
dec
les
sahf
daa
sub
data16
or
push
and
or
adc
or
sub
add
movsb
in
test
cmp
je
das
push
sbb
push
pop
shrb
lahf
clc
pop
and
push
push
je
test
outsb
outsb
xlat
pop
and
pop
outsb
or
inc
mov
pop
mov
push
inc
add
or
out
je
ss
imul
fisttps
jno
lcall
jge
jae
loop
adc
fimull
add
jecxz
lret
in
decb
gs
add
je
sbb
dec
out
repz
adc
sub
xor
mov
int3
shlb
jge
lret
jle
add
mov
ljmp
mov
adc
in
mov
mov
or
add
lcall
add
ret
jge
insl
and
inc
add
xor
and
stc
out
pop
inc
mov
out
dec
add
ja
jns,pn
dec
addr16
cmc
mov
add
inc
push
scas
cmp
fists
scas
mov
dec
rcl
sub
enter
out
sbb
outsb
out
sarb
add
cmpsl
dec
xor
lea
repnz
xor
push
and
fldt
or
fsubrl
inc
insl
cwtl
stc
test
and
imul
or
loope
or
or
sbb
ret
add
or
xor
cs
mov
out
lods
loop
daa
mov
xor
add
xor
xor
xchg
je
call
fdivl
mov
inc
mov
pop
sub
inc
aas
lahf
bound
inc
inc
mov
sub
push
pop
xchg
lea
popa
xchg
adcl
and
add
les
fldt
add
sbb
jle
je
jbe
int
out
aad
loopne
add
lds
xchg
nop
aad
in
js
add
and
jne
xor
and
xor
inc
add
pop
mov
dec
push
dec
pop
daa
pop
inc
push
push
movsb
add
test
scas
cmp
fmull
push
push
add
mov
inc
add
inc
pop
wrmsr
popf
pop
aam
xor
dec
negb
pop
xchg
or
add
mov
mov
adc
sub
adc
in
add
stos
popf
stc
xchg
nop
scas
fiaddl
cltd
shll
in
xor
pop
push
mov
bound
add
push
rorl
mov
inc
inc
add
add
jg
mov
add
scas
jmp
imul
jge
ljmp
pop
add
sub
add
mov
les
add
aam
and
adc
push
aad
push
js
adcl
sub
cmc
push
pop
cmp
lahf
mov
stc
sub
adc
add
imul
inc
ret
scas
jno
stos
sub
pop
sub
xor
cmc
pushf
add
sbb
xor
jno
lods
in
cs
pop
shrl
ja
dec
cmp
jbe
mov
add
icebp
jnp
add
cmp
pusha
jecxz
inc
add
mov
mov
outsb
sub
ja
pushf
mov
cmp
mov
inc
ror
int3
loope
dec
adc
add
aad
sub
add
xchg
sub
dec
cwtl
testb
pushf
jbe
inc
popf
jmp
mov
cmp
mov
inc
mov
outsb
or
add
fadds
mov
hlt
push
add
push
hlt
ds
mov
push
hlt
add
andb
add
add
loop
cmp
mov
sbb
jg
push
nop
mov
push
clc
push
mov
out
ja
add
lahf
int
push
rcl
add
and
or
movb
or
and
add
outsb
add
iret
jle
sub
add
cld
dec
or
add
ficomps
jle
add
add
outsb
in
sub
add
movl
sbb
or
xchg
mov
add
xor
add
jns
lock
push
jnp
sub
lret
mov
sub
imul
mov
test
inc
jbe
xor
xchg
or
mov
or
scas
jne
pop
in
xchg
and
add
aas
repz
jg
test
jmp
xchg
scas
cmp
add
setne
add
loopne
insl
push
push
or
mov
into
add
sahf
mov
scas
cmp
cmpsl
sbb
mov
add
add
jmp
sbb
xor
int3
pop
cmp
cmpsb
idivb
popf
xchg
test
adc
fidivs
arpl
add
roll
lahf
test
jnp
add
gs
sbb
mov
jmp
aad
insb
das
xchg
ds
fistpll
add
cmpsl
cltd
dec
les
pop
stos
jo
loop
jle
add
test
mov
jmp
mov
nop
push
jae
fcmovnbe
lods
repnz
fcomps
add
sub
enter
xor
jns
out
in
mov
pop
push
test
arpl
add
loop
mov
sbb
call
das
aas
sub
dec
test
aam
adc
ficoml
sub
sti
stos
push
out
jno
sbb
outsb
movsb
jl
movl
aam
inc
les
push
cmpsb
xchg
push
movsb
jl
or
sbb
clc
popa
mov
or
idivl
cmp
adc
in
popl
jno
iret
cvtps2pi
jae
add
sub
shrl
pop
test
mov
add
push
lret
bound
icebp
call
loopne
xchg
in
sub
cmpb
add
jl
arpl
mov
pop
add
stos
ret
push
ja
inc
into
mov
mov
sub
fnsave
arpl
divl
pushf
dec
iret
sahf
mov
mov
arpl
jo
cmp
pop
lahf
mov
daa
and
in
loopne
daa
cmp
push
sub
dec
dec
inc
loop
jmp
mov
xchg
xchg
and
arpl
int3
jg
aam
mov
scas
pop
mov
mov
aaa
xor
mov
xchg
aam
mov
imul
lods
pusha
and
movsb
sbb
add
adc
and
out
sbb
adc
shlb
xchg
xchg
cltd
and
jno
repnz
xorb
pop
mov
cli
cmpsl
js
adc
push
sub
cmc
enter
je
outsb
mov
xchg
sbb
stos
in
lcall
aad
dec
pop
mov
enter
insl
pushf
pop
imul
das
xchg
pop
fistl
in
pop
shl
js
in
sub
leave
push
pop
add
mov
mov
repnz
cli
dec
sbbl
repz
stos
test
mov
cmp
sub
sub
or
push
fwait
js
push
xor
in
ficoms
push
adc
add
jmp
push
jo
cwtl
int
push
sbb
push
out
out
xchg
fiadds
stos
add
cmp
orl
mov
mov
push
mov
ja
mov
xor
popf
iret
rclb
jmp
mov
cmp
adcb
sbb
adc
and
mov
mov
test
xor
lods
sub
bnd
icebp
sub
cmp
out
mov
dec
scas
mov
add
jl
in
loop
ljmp
out
cmpsb
cmp
pop
es
cli
shlb
aam
push
mov
push
jo,pt
push
jl
jbe
enter
pop
shrb
test
icebp
adc
push
movsb
xchg
or
lcall
jae
scas
movsb
add
add
add
fwait
cltd
sub
rolb
sbb
add
push
dec
ds
leave
test
popa
sub
test
lds
push
test
adc
cmc
sub
imul
sub
ret
daa
sub
cli
clc
shl
add
xor
das
mov
andl
pop
add
aas
lret
xor
push
imul
pop
ficomps
jb
sub
xchg
test
test
add
sub
xchg
xchg
dec
mov
adc
int3
inc
orb
test
sub
stos
sbb
out
inc
add
enter
imulb
mov
mov
or
add
sbbl
jmp
sti
inc
jmp
xchg
aam
cmp
mov
cmp
sbb
sahf
in
clc
ja
fiadds
cmc
addb
scas
mov
jecxz
shll
sub
add
push
jp
ja
out
outsl
out
arpl
bswap
inc
movsb
or
js
and
sub
mov
imul
inc
decb
out
clc
mov
aad
clc
add
sub
or
jns
sbb
push
cmp
clc
and
pop
bound
jns
dec
adc
repnz
idivl
push
sbb
or
add
outsl
test
mov
jmp
cs
add
add
mov
mov
pop
xchg
lcall
nop
popa
push
xor
cmpsb
iret
jmp
lds
or
mov
xor
clc
adcb
push
out
cmp
insb
out
push
jns
add
cmp
cli
push
sar
int
test
cmp
lea
xchg
adc
jp
xlat
fstp
add
jge
movsb
out
sub
jb
add
fidivrl
push
sub
push
jbe
fstpt
sub
add
add
movsb
movsl
mov
inc
push
scas
cmp
cs
cmp
pushf
add
add
add
cmp
fistpll
shlb
add
add
add
xchg
jbe
test
sub
into
stc
sbb
lahf
add
cmp
sub
pop
or
or
xchg
cltd
orl
dec
lcall
aaa
ds
xor
xor
cmp
add
xor
adcl
loop
add
xor
cmc
or
lret
or
nop
cwtl
add
jne
pop
or
jo
pop
test
stc
fcompl
or
sbb
leave
icebp
inc
int
add
pusha
mov
add
mov
xorl
mov
arpl
push
lods
cwtl
aad
lock
push
ljmp
add
push
push
adc
add
pusha
mov
dec
sub
out
xlat
push
stos
jns
and
adc
les
inc
push
ret
ss
pop
into
jge
cltd
outsl
add
lods
mov
arpl
xchg
daa
jbe
adcl
pop
ss
fwait
jmp
dec
ljmp
iret
mov
jle
dec
add
xor
mov
movsb
clc
gs
jne
lods
mov
jae
idivl
add
imul
mov
add
int
shlb
daa
roll
mov
scas
mov
xchg
jl
jmp
arpl
and
add
and
push
mov
fdivrl
add
sub
or
mov
cs
mov
lcallw
lods
mov
fisubl
in
mov
outsl
call
push
fstl
pop
outsb
add
pop
aaa
xchg
jae
adc
pushf
pop
enter
add
or
mov
maxps
shr
mov
pusha
ret
paddsw
aas
mov
outsb
add
adc
int3
push
xchg
add
test
xor
ret
add
or
inc
cmp
repnz
mov
push
movsb
lret
aam
push
mov
sarb
adc
mov
loop
arpl
in
xor
pop
loope
cmpsl
jmp
add
imul
pop
sub
lcall
jg
hlt
cmp
xchg
jmp
idivb
mov
inc
or
cmp
faddl
bound
mov
sbb
jno
mov
js
push
dec
rclb
es
push
ja
in
outsb
mov
imul
or
push
enter
add
notl
fadd
fldt
xchg
xor
add
jle
xchg
and
sbb
out
sbb
flds
lcall
dec
or
add
mov
pop
xchg
aam
mov
or
add
add
rorl
xchg
mov
sub
or
sub
shrd
add
pop
aas
cmp
hlt
xor
mov
or
or
dec
int
mov
mov
nop
lods
cltd
lret
mov
notl
mov
jnp
jo
push
out
cltd
mov
leave
insb
dec
inc
pusha
sub
test
mov
addb
jo
inc
leave
inc
mov
add
pop
out
jl
sub
add
dec
fistpl
test
jmp
dec
mov
ror
shlb
movsb
or
xchg
pop
mov
add
data16
mov
mov
hlt
sbb
test
cmp
cwtl
outsl
lods
outsb
andb
ja
jge
or
pop
cmp
mov
xchg
mov
movsl
mov
dec
and
dec
je
mov
mov
aas
push
inc
pop
xor
pop
lods
loopne
pop
pop
enter
out
sub
xor
out
outsb
inc
into
add
lea
fsubs
and
data16
push
ss
and
iret
dec
or
push
sahf
push
sub
and
push
xor
mov
push
lea
sti
add
mov
loopne
sub
jmp
sub
cld
or
lock
repnz
push
ret
iret
dec
jg
xchg
or
shlb
cld
mov
push
cli
xchg
pop
jg
mov
mov
pop
scas
cld
testb
jnp
jge
nop
neg
add
call
add
sub
fsubrl
push
movsl
faddl
jne
push
push
in
fnstcw
jb
add
insb
inc
fwait
loope
popa
push
add
inc
repz
loope
push
dec
add
in
mov
mov
movsl
pop
dec
push
xchg
out
cmc
mov
add
subl
add
add
aam
mov
test
fyl2x
mov
push
add
jo
inc
jp
pcmpgtw
mov
add
mov
stos
and
mov
daa
fnsave
loope
int
add
cwtl
in
add
jns
push
add
dec
mov
adc
jb
stc
shrb
sar
ds
cmp
out
or
pushf
outsl
inc
out
mov
movsl
ja
add
scas
stos
dec
add
pop
jp
subl
jno
mov
stos
add
dec
cli
test
clc
mov
aam
add
add
dec
add
hlt
repz
lret
and
test
push
dec
fiadds
jbe
clc
je
and
sub
jmp
nop
jge
scas
lret
inc
js
dec
jns
out
jne
lcall
lret
mov
push
sub
mov
bound
lods
push
xor
add
sbb
scas
jnp
imul
stos
testb
mov
fiaddl
insl
xchg
sub
push
adc
div
add
rorb
mov
dec
mov
add
mov
sub
mov
out
call
dec
mov
sbb
jae
pop
cmp
pop
sub
das
mov
rcll
mov
jg
mov
mov
fcmovu
jmp
add
pop
stos
mov
sbb
insl
daa
cmp
fwait
es
xchg
int
pop
js
div
inc
movsb
fnsave
xchg
js
dec
mov
pop
dec
push
shl
in
scas
lcall
or
fmull
push
add
cli
xor
xor
xor
add
mov
add
cmpsl
and
or
inc
sbb
and
fcompl
add
sbb
hlt
cmp
sbb
mov
cwtl
push
or
das
add
popf
test
add
popf
jp
test
loop
ficoms
or
scas
adc
lods
push
xchg
mov
lret
into
push
mov
adc
push
add
xchg
dec
add
jae
enter
jl
btr
lock
stos
xchg
int
ret
add
hlt
ja
or
push
test
xchg
movsb
push
sti
sbb
cmp
pop
jmp
and
in
sar
add
add
xor
adc
push
pushf
lods
mov
vpmacssww
pop
sbb
out
clc
sbbb
inc
pop
push
in
xchg
mov
xorb
sbb
std
loope
loop
or
and
cmp
aas
lods
sbb
or
push
push
pop
or
sub
and
jb
push
push
insl
jle
sub
iret
ss
mov
or
add
outsb
shr
out
mov
pop
aam
jbe
aam
pop
xor
add
test
test
sub
mov
imulb
ret
cld
push
pop
call
iret
in
in
add
test
pop
add
rcrb
mov
inc
std
jnp
pop
enter
rcr
fldt
lret
inc
xchg
daa
push
sbb
mov
add
xor
movsb
adc
add
cli
xchg
lods
inc
rorb
sub
or
or
daa
mov
cli
mov
add
and
add
aas
aam
lret
popf
addr16
sbb
jne
sub
daa
adc
dec
dec
orb
mov
cmp
cld
imul
sub
dec
add
dec
movsb
icebp
stos
dec
dec
arpl
cmc
loop
push
adc
and
xor
add
imul
pop
fimull
jbe
ljmp
sti
test
cmp
xchg
jp
add
sub
xor
push
mov
mov
add
and
push
add
nop
icebp
ss
iret
ss
scas
jo
loopne
push
cmp
cmpsb
dec
inc
xchg
ljmp
add
lds
mov
xchg
das
scas
lds
fucomp
lret
loopne
out
xor
push
sub
les
lods
mov
pop
das
dec
sahf
insb
jmp
lods
pop
pop
nop
pop
in
add
dec
mov
cmp
push
mov
add
mov
dec
jle,pn
cmp
mov
xchg
add
loopne
sbb
sbbl
dec
in
fdivrp
xchg
pop
xchg
jno
aam
pop
aad
add
sti
adc
mov
fcoms
mov
add
jno
and
or
cmp
cltd
std
sbb
xchg
lds
or
inc
or
aaa
or
add
addl
push
mov
call
pushf
inc
out
dec
add
xchg
jl
enter
adc
fwait
daa
nop
adc
pushf
clc
loopne
out
push
cltd
dec
fisubrs
fldt
add
fdivs
icebp
push
sbb
movsl
mov
add
dec
dec
test
in
mov
jo
insl
div
inc
in
add
or
lret
push
and
push
add
mov
xchg
add
addr16
ret
push
cmp
jbe,pn
push
adc
push
or
or
sbb
popf
or
add
mov
adc
xchg
mov
pop
push
cs
adc
adc
mov
adc
sub
cmpsb
enter
dec
popa
sarl
mov
and
and
daa
out
cmp
stos
push
jle
mov
lds
sub
leave
sbb
repnz
mov
mov
fadds
ret
jp
out
data16
add
bnd
and
popf
verr
aam
ret
xor
insl
jnp
out
xchg
add
or
push
insb
push
out
add
push
xchg
mov
flds
pop
repnz
adc
sub
xchg
popf
ss
out
add
jl
daa
jmp
xchg
push
popa
lock
mov
adc
and
inc
xor
xlat
cwtl
pop
xlat
arpl
cmp
xor
dec
fisttpl
mov
int
lods
jnp
or
test
pop
push
ja
lret
xor
in
in
sub
repnz
or
fcmovu
add
jb
imul
inc
test
push
lret
hlt
shlb
dec
dec
sub
jae
mov
scas
mov
test
or
mov
lds
lret
jl
inc
test
test
stos
imul
mov
popl
out
push
push
jge
sbb
insl
in
flds
lods
xor
in
sub
subb
jb
fsubp
add
mov
add
mov
push
test
aas
and
fldenv
sarb
out
inc
mov
shlb
sbb
adc
lcall
das
scas
shl
xchg
frstor
lods
fisubrs
outsb
rorl
dec
add
lret
push
pop
push
addr16
xchg
scas
popa
or
mov
sbb
mov
pushf
ficomps
sti
ror
test
stos
lfs
cmpsl
push
inc
icebp
add
out
jp
fwait
gs
sar
ljmp
pop
fxch
ja
in
xchg
jle
scas
popa
adc
nop
movaps
fisttps
imul
pop
jmp
dec
xor
das
js
jae
pop
cmp
dec
sbb
sti
pop
dec
cmc
push
jbe
push
shlb
and
or
adc
push
scas
push
mov
fstpl
push
push
idiv
iret
in
jo
xor
ret
add
stos
or
add
lock
ret
pusha
test
icebp
ret
cs
nop
popa
fs
xor
aam
xchg
pop
lods
jae
xor
inc
sbbl
and
sub
sbb
xor
xchg
sub
and
lret
dec
rcrb
in
xor
mov
addr16
mov
pop
sub
mov
sbb
ficompl
out
mov
arpl
ficoml
es
fs
cmp
or
sbb
pusha
loop
pop
test
out
roll
mov
inc
jle
loope
std
pusha
outsl
push
ja
or
xor
mov
lret
fdivs
jbe
pop
inc
out
sub
test
xor
clc
mov
sub
cmp
call
jp
xchg
xlat
aas
adc
test
adc
mov
mov
pop
mulb
out
mov
lcall
repnz
cltd
test
jnp
mov
dec
jge
xlat
sbb
ficoms
and
lods
sub
mov
in
lock
lret
xor
divb
pushf
pushf
cmp
insl
adc
lds
mov
fldenv
add
push
cld
insl
xor
or
dec
test
jbe
pop
jecxz
jmp
fstps
clc
cmc
push
popa
sub
sub
in
mov
xor
loopne
jb
mov
add
lret
pop
test
mov
mov
shll
cmp
inc
fxch
mov
xor
lods
add
lahf
hlt
daa
je
aas
cmp
inc
js
es
mov
loop
dec
out
cwtl
cmp
outsl
lret
and
cmpsb
push
pop
ds
mull
nop
lock
jo
add
sar
outsb
repnz
mov
pop
lods
push
je
pushf
icebp
loop
loope
je
out
in
ftst
rcl
loopne
ret
add
sub
fidivl
jae
mov
dec
xor
dec
xchg
jnp
or
ja
dec
out
xchg
xchg
push
movb
cmp
test
mov
cld
push
cltd
push
and
incb
mov
mov
iret
shll
test
pop
in
xchg
test
and
or
xchg
add
stos
sub
pop
sub
notb
insb
push
add
packssdw
popa
add
daa
inc
lock
je
mov
adc
push
mov
mov
gs
sti
pop
in
xchg
xlat
movsb
mov
pop
in
out
ret
and
sahf
add
inc
mov
pusha
inc
push
xchg
pop
sub
push
ss
aam
out
sbbb
xchg
sub
jne
cmp
pusha
insl
mov
incb
dec
pop
test
cmp
xchg
cli
std
insl
mov
cld
jmp
imul
call
gs
faddl
popa
cmc
add
popf
dec
cmp
jns
mov
dec
push
testb
inc
pop
xchg
push
movsb
fbld
sbb
jne
and
rcrl
dec
sub
adc
mov
cmpsb
daa
jns
aaa
or
stc
mov
insl
loop
pop
push
jp
sbb
stos
sahf
cld
cmp
mov
push
mov
mov
push
sarl
pusha
or
sbb
mov
sbb
push
add
cwtl
movsb
mov
lods
fucomip
js
mov
add
cmp
dec
sbb
lret
testb
add
outsb
pop
push
push
pop
add
add
pop
add
outsl
pop
add
cwtl
pop
push
call
mul
push
sahf
fdivs
add
mov
and
loope
mov
push
gs
in
inc
mov
iret
rorb
sti
mov
mov
addr16
outsl
jg
jl
jmp
or
leave
push
dec
into
pushf
lahf
pushf
stos
lret
pop
or
popf
es
xor
adc
iret
push
sub
std
xor
mov
jge
aam
dec
and
add
dec
push
pop
test
xchg
add
push
inc
xchg
sbb
lret
test
push
adc
or
pop
and
stc
xchg
sub
inc
and
icebp
inc
ss
shl
es
sbb
or
iret
cmpsb
xchg
mov
add
add
sbb
push
xchg
push
push
sbb
cld
in
arpl
xchg
inc
xor
addb
push
test
or
or
or
daa
jp
ds
les
mov
mov
xor
adc
int3
into
xor
pop
xchg
lock
lods
aaa
push
add
loope
xchg
push
add
mov
in
lret
jb
aam
daa
lods
in
stos
shrl
sub
cmpsb
adc
loopne
cli
test
mov
sub
cmp
mov
scas
or
dec
test
sub
movsl
pop
push
in
aam
scas
xchg
xchg
stos
test
or
sub
jp
je
out
add
ret
sub
test
sbb
sbb
loope
sbb
popf
add
sub
add
add
add
in
sub
mov
xor
or
mov
mov
adc
inc
add
lds
push
loop
stos
mov
mov
push
xchg
xchg
repz
pusha
cld
mov
jns
repz
add
or
ret
add
stc
add
icebp
ret
sub
add
cmpsl
or
mov
or
or
popf
pop
add
mov
cli
add
push
mov
cmp
add
jp
stos
and
int
add
dec
add
mov
lret
and
add
inc
push
add
lcall
mov
add
nop
add
add
mov
mov
imul
add
push
mov
pusha
into
xor
pop
and
dec
test
out
jno
icebp
dec
enter
jg
push
inc
jo
mov
push
jno
mov
iret
inc
lock
int
ror
dec
adc
test
out
jae
inc
xsha1
cmpsb
mov
push
scas
xor
stos
jbe
sub
aam
decl
xlat
jbe
cmc
enter
and
sub
das
mov
mov
out
mov
call
lea
xchg
add
das
add
sub
out
test
dec
aad
stos
mov
add
bound
add
out
add
add
test
add
or
pushf
inc
daa
pop
pop
dec
das
add
add
add
adc
mov
sti
insl
stos
test
call
add
lea
jbe
and
fmull
xor
add
dec
add
dec
add
popl
movsb
sbb
pop
jmp
add
add
add
fsubrs
pop
cmpb
aam
cmpsb
in
add
mov
cmp
jp
add
adc
jae
add
movl
fcomps
mov
enter
cmp
sub
lock
out
add
ljmp
add
pop
inc
lock
add
add
into
das
inc
rolb
cli
int
dec
lret
pop
add
leave
cld
lcall
add
aaa
or
cmp
daa
cs
sub
add
add
lock
add
icebp
add
mov
je
add
or
rolb
cmp
test
cmc
or
sbb
aam
scas
sub
imul
sub
push
xchg
mov
add
push
cmp
mov
push
add
dec
daa
mov
add
jne
push
sub
mov
mov
stc
inc
xchg
and
add
dec
int3
cmp
add
test
add
insb
fiaddl
imul
inc
add
push
and
xor
mov
add
mov
xor
add
mov
clc
shlb
out
dec
add
xchg
loope
add
mov
pusha
je
add
incb
mov
xchg
outsb
add
push
jmp
popf
inc
or
ror
add
pop
add
adc
or
mov
adc
pop
sub
add
xchg
insb
cmp
rolb
adc
repnz
int
sub
add
out
add
jp
xor
add
add
add
leave
add
add
mov
test
mov
and
lock
add
add
jl
or
adc
add
add
add
cmp
add
mov
jbe
add
aad
push
out
or
cs
cmpsb
das
inc
mov
ljmp
add
add
repnz
jle
cld
push
add
sub
add
xor
lods
add
es
add
add
imul
call
gs
aam
mov
cwtl
pop
add
mov
in
add
mov
loopne
add
pusha
movl
hlt
add
and
sbb
dec
test
gs
add
stos
add
add
or
ss
xor
add
into
add
outsb
int
pop
lret
fbld
mov
add
add
add
add
jo
fcomps
cwtl
cmpsl
out
jl
pusha
popa
mov
es
jp
mov
adc
push
or
xorb
cwtl
dec
add
add
jg
add
add
sub
stos
dec
and
and
cli
in
aas
popf
repnz
add
push
lcall
es
add
out
jbe
call
xor
add
sbb
add
jo
cld
outsl
add
insb
add
add
mov
add
in
test
add
mov
adc
inc
es
inc
inc
inc
mov
cmc
sub
add
add
jmp
add
pop
scas
add
add
out
jno
add
test
jp
sahf
pop
clc
incb
ret
fmul
add
enter
dec
add
add
push
add
add
push
add
dec
lock
data16
lret
jnp
aad
ja
add
dec
add
mov
mov
add
add
add
add
pop
add
cwtl
sub
clc
add
mov
adc
mov
jle
test
add
in
add
add
movsl
add
add
sub
add
sub
push
add
xlat
add
mov
cmp
add
stc
add
xor
cli
mov
dec
sub
pusha
add
cmp
cltd
mov
gs
add
gs
push
add
push
add
flds
test
add
add
xchg
add
dec
test
add
add
add
stc
add
add
add
insb
add
pop
add
inc
fs
xor
sahf
add
addb
popf
lods
and
add
pop
add
add
jns
insb
xchg
add
sbb
out
add
mov
add
mov
jno
add
and
imul
inc
add
add
and
arpl
xor
add
push
dec
jg
out
jnp
pop
clc
add
inc
fnstsw
movsl
add
push
add
add
inc
daa
mov
add
add
mov
add
add
jbe
push
fisttps
imul
cmpsb
int
or
add
add
jecxz
add
je
add
rolb
fldl
jne
add
xchg
add
or
mov
add
add
add
stc
add
push
add
mov
mov
je
add
add
sahf
add
out
add
pushf
add
cltd
add
cmp
mov
add
dec
add
cmpsl
mov
add
test
push
fadds
rcrb
les
inc
outsb
add
fisubrl
add
add
add
test
pop
mov
push
scas
add
pusha
add
add
push
aaa
add
add
movsl
add
mov
add
add
sbb
push
xlat
add
mov
and
add
stc
add
xor
les
add
add
push
add
incl
lret
das
cltd
add
add
add
add
add
lahf
add
insb
mov
mov
add
loopne
xchg
incl
repz
add
stc
add
sbb
xor
add
add
into
add
add
fwait
add
add
add
lds
lock
outsb
es
dec
add
mov
bound
dec
push
sub
or
repnz
or
add
movsl
pop
add
lods
pop
add
pop
add
int3
add
add
inc
add
lret
jns
cli
mulb
in
jge
aad
add
add
dec
aas
add
add
flds
in
pusha
add
pop
cmp
stos
push
add
add
sbbl
filds
mov
inc
add
add
fadds
push
add
cmp
inc
cmp
lea
mov
sbb
mov
xor
out
add
rolb
filds
faddl
inc
iret
pop
add
mov
add
mov
add
add
sti
loopne
enter
cli
add
mov
out
add
loopne
push
mov
add
add
add
add
jo
add
add
ret
adc
clc
pop
add
mov
add
mov
sub
sbb
add
add
sub
or
and
dec
pop
add
in
imul
adc
add
add
inc
add
add
ds
dec
and
add
add
cmpb
scas
stos
add
flds
xor
add
sarl
sbb
push
add
xor
insb
fldl
adcl
mov
add
dec
add
out
add
xchg
add
mov
cmp
sbb
add
push
add
rcrl
pushf
add
add
fadds
add
rolb
fiadds
inc
sbb
add
add
mov
les
push
loopne
inc
popf
adc
mov
pop
sahf
jg
lret
scas
pop
add
add
add
sahf
add
addb
popf
add
or
cmpsb
pop
add
lret
fcmovnb
add
adc
mov
add
mov
add
mov
xor
add
sbb
inc
loop
divb
mov
outsb
add
inc
add
pop
add
pop
add
cmp
add
in
sub
add
test
add
add
pushaw
add
gs
loop
add
cli
aas
add
stos
add
add
int3
cmp
cmp
add
xor
and
add
mov
inc
lahf
pushf
cs
add
aas
inc
add
xchg
add
jecxz
add
cmp
aam
add
pop
add
add
mov
xor
out
add
add
add
add
pop
add
and
nop
mov
add
add
mov
push
loopne
jp
incb
pop
sti
add
add
add
and
ds
add
call
add
sahf
add
fwait
add
dec
push
add
add
lds
pop
nop
addb
or
xor
and
mov
sub
inc
add
add
sbb
mov
hlt
dec
pop
add
add
add
add
testb
pop
add
mov
mov
aam
clc
sbb
mov
inc
stos
pusha
add
mov
add
xchg
add
aas
add
faddl
or
fidivrl
add
pop
add
sbb
loopne
add
add
add
add
into
add
add
mov
push
pop
add
cmp
rclb
or
add
add
jbe
dec
mov
add
push
add
sub
js
add
jl
das
add
add
nop
add
xchg
lahf
add
stc
push
add
add
cmp
ljmp
xchg
add
fwait
add
add
push
cmp
push
faddl
repz
scas
add
and
xchg
addb
addl
sbbb
add
and
add
pop
add
dec
add
add
and
outsl
lea
push
add
dec
test
packsswb
mov
add
mov
push
add
add
sbb
dec
pop
add
add
xor
negl
add
add
add
jl
xor
add
add
movb
inc
mov
push
pop
add
add
add
push
fstl
or
mov
dec
imul
aas
aaa
dec
filds
jo
push
outsl
out
mov
sahf
lds
loop
sarl
lea
push
jg
aaa
test
sbb
cmp
movsl
enter
dec
ret
add
ret
ljmp
add
jp
push
fidivl
add
mov
or
in
add
movsl
idivb
dec
mov
mov
add
add
push
mov
cmp
mov
ss
sub
or
nop
add
sahf
push
shrb
nop
lcall
out
mov
shrl
dec
push
dec
lret
and
out
outsl
call
inc
add
repz
sub
in
mov
js
xor
loope
mov
xor
adc
sbb
mov
pop
push
scas
add
adc
push
xorb
and
ljmp
insb
test
xchg
mov
fmuls
jb
cmc
in
jns
mov
movsb
movsl
adc
dec
iret
in
dec
enter
shlb
popf
stos
daa
cmp
dec
sub
roll
test
in
jae
das
repz
mov
push
inc
dec
pop
aam
jmp
leave
jae
cmc
in
sarb
jg
adcb
mov
lea
sbb
pextrw
xor
les
push
movsb
push
das
and
lock
imul
lods
and
jmp
cmp
or
loope
add
loopne
xor
pop
push
add
dec
dec
pop
mov
inc
jae
dec
jmp
pushf
cld
xchg
stos
adc
cmpb
lret
sahf
push
add
jo
dec
add
in
mov
mov
lea
mov
hlt
ret
bound
push
dec
stos
push
sbb
enter
add
xor
scas
inc
fldl
clc
lock
xor
fsubrs
push
ficoms
cmc
mov
mov
stos
lret
jmp
hlt
inc
icebp
pushf
fstl
aam
out
lock
dec
rcl
add
jmp
cmp
insb
cmp
push
inc
cmp
push
fwait
jbe
shrd
data16
cmp
sub
sbb
or
sti
imul
scas
test
enter
xor
xor
adc
jl
scas
pop
outsl
out
jge
xchg
imul
dec
out
mov
jmp
mov
cmpsl
jbe
mov
dec
mov
cs
add
cli
and
sub
sbbb
mov
fildll
xor
ss
xchg
sub
add
and
dec
mov
push
mov
adc
pop
or
mov
ss
into
addr16
dec
push
sub
mov
flds
in
in
imul
lods
ficoml
xchg
dec
out
incb
test
je
in
out
iret
mov
push
xchg
mov
sbb
xchg
fsubrl
jge
add
xchg
cwtl
or
daa
pcmpeqw
adc
mov
hlt
ret
sbb
lahf
xchg
xchg
jno
pop
dec
lea
testb
xorb
ficompl
test
jno
scas
inc
in
push
push
cmpsl
int
pushf
sub
call
adc
pushf
ljmp
pop
dec
cmp
lret
dec
mov
call
mov
adc
xor
xor
outsl
sub
imul
inc
push
push
adc
in
nop
rcrb
jbe
jb
mov
dec
add
je
dec
sbb
leave
repz
daa
in
jne
push
or
loopne
adc
das
add
imul
jmp
jns
arpl
jo
mov
sti
arpl
fnstenv
add
popa
shrl
sbb
cli
int
pop
repnz
sahf
pop
nop
test
leave
mov
std
das
xchg
sbb
pop
mov
inc
mov
xor
movsl
jecxz
inc
add
sarb
cmp
xchg
xchg
andl
mov
cmp
mov
bound
jnp
sti
scas
push
fs
mov
mov
in
pop
sub
dec
add
cs
adc
add
int
push
fwait
cltd
movb
add
jb
ds
add
adc
adc
sub
les
mov
out
xchg
cmp
int
enter
dec
stos
dec
pop
pop
mul
push
clc
in
adc
dec
pop
xchg
loope
aaa
fadd
jns
mov
insb
lock
lret
lcall
xchg
dec
mov
xlat
add
mov
mov
scas
imul
or
mov
aaa
test
cmp
add
lret
mov
add
mov
bound
enter
jg
mov
push
and
hlt
cs
xor
and
lahf
lea
dec
add
mov
std
addb
ds
test
xor
xchg
mov
dec
jno,pn
add
movsb
lods
xchg
xchg
add
push
repz
dec
in
loopne
inc
add
pop
push
leave
in
add
test
sbb
mov
xchg
sbbl
mov
add
in
jbe
jecxz
outsl
jo
out
daa
mov
enter
out
incl
stos
pop
frstor
jl,pn
pop
aaa
push
add
arpl
mov
add
js
push
das
inc
push
negl
push
add
xchg
or
ljmp
push
add
mov
push
ss
jge
inc
into
sbb
out
stos
inc
enter
push
repz
pop
sbb
mov
mov
add
add
ja
bound
negl
jge
call
in
adc
lret
mov
inc
or
mov
jl
or
jnp
out
out
fs
push
mov
inc
int3
jno
xor
std
fstps
daa
add
push
add
push
mov
arpl
add
pop
cmpsl
dec
bound
sbb
je
leave
fsts
scas
lock
sub
jns
push
bound
pusha
pushf
ss
aad
lret
sbb
cwtl
push
test
xchg
add
inc
push
push
cmpsb
xchg
outsl
or
movl
scas
sbbb
push
das
aas
xor
sahf
sbb
adc
add
sub
scas
rolb
and
movl
fistps
mov
insb
push
clc
dec
incl
in
add
jg
outsl
lret
add
sub
add
or
in
fs
pop
add
cmp
sbb
ret
fdivs
lret
lret
jmp
scas
push
add
outsl
test
bound
and
jbe
std
loope
mov
mov
cmp
xchg
dec
lcall
rclb
stc
mov
or
mov
lcall
adc
pop
dec
subl
jnp
add
gs
cmp
jbe
cmp
in
mov
push
lock
add
roll
push
add
adc
loopne
push
fcoms
out
pusha
lods
xor
pop
pop
adc
scas
mov
push
add
je
xlat
jbe
je
mov
pushf
and
scas
push
add
push
xor
mov
pop
adc
daa
add
xchg
in
je
icebp
add
jmp
jbe
sub
dec
jle
mov
pop
add
mov
pop
jmp
adc
ficoms
int3
add
add
cmc
mov
add
adc
push
add
push
add
add
add
xor
add
scas
add
lds
lret
sar
add
push
mov
pushf
insb
add
mov
add
add
mov
add
je
dec
addb
xchg
jbe
imulb
jb
out
xchg
add
add
add
xchg
mov
mov
jbe
into
sub
imul
addb
xor
lret
push
mov
add
pop
add
add
dec
add
push
add
movsl
add
add
push
add
lods
add
add
add
add
add
push
add
push
add
add
add
and
repz
push
add
jmp
popl
insb
das
dec
mov
iret
sbb
jns
ds
jp
dec
int3
dec
dec
lret
pop
enter
pop
and
xchg
push
jle
sub
aas
scas
add
add
aam
out
or
dec
pop
int
and
push
xchg
lcall
xchg
or
dec
xchg
pushf
dec
fdivl
es
scas
jl
dec
clc
jmp
adc
ljmp
loop,pn
mov
jle
in
cld
test
jecxz
rclb
iret
dec
mov
dec
cli
leave
leave
lods
ds
fisttpll
xchg
cmpsl
adc
xchg
sub
mov
cmp
das
sarb
xchg
cli
int
dec
jae
mov
xchg
nop
adc
add
add
cmc
add
test
push
out
mov
add
push
loopne
xor
neg
das
add
negb
mov
dec
pop
popl
add
pop
mov
rclb
add
lret
push
lret
add
add
ja
push
aad
lcall
pop
add
jo
outsl
outsb
add
repz
add
xchg
lock
xor
mov
cli
add
mov
push
xchg
decl
es
add
faddl
pop
hlt
add
or
aam
push
add
clc
scas
jno
jbe
enter
pop
test
push
fisttpll
inc
pop
int3
add
jb
sub
popf
push
or
add
nop
push
xor
add
mov
loopne
or
xor
add
add
outsl
mov
sub
add
gs
add
in
add
jmp
dec
mov
mov
mov
jp
push
add
add
add
lret
pop
add
add
imul
pop
add
std
out
xor
sub
dec
sub
adc
mov
repnz
movsb
pop
stos
std
jle
mov
add
or
fbld
add
cmpsb
dec
dec
sub
add
test
add
mov
jo
hlt
mov
add
cmp
add
add
aad
out
fdivr
add
imul
movb
jmp
push
lret
std
add
imul
outsb
aas
push
push
sub
push
add
mov
jo
add
add
test
test
mov
add
cmp
sub
sub
lret
sub
lods
rolb
int3
jmp
add
cltd
loope
loopne
xor
or
inc
push
pop
pop
add
add
sub
out
repz
cmpsl
lea
inc
data16
add
jne
or
bound
pop
ss
add
aas
faddl
jne
and
rcrb
mov
loopne
mov
lods
addb
xchg
mov
add
gs
add
add
mov
or
xor
xor
jae
xor
int3
add
std
ss
ljmp
stc
add
dec
mov
mov
pop
push
xchg
cld
inc
add
jne
sbb
jmp
add
add
clc
cld
out
ljmp
flds
cltd
inc
mov
add
sbb
add
jo
inc
and
das
mov
lahf
mov
cmpb
adc
push
add
sub
add
add
outsb
sbb
or
leave
sahf
or
add
lcall
push
dec
pop
jecxz
add
mov
xchg
and
fldenv
cs
test
stc
xchg
or
es
aas
pusha
or
cmpsb
xchg
pop
lock
mov
inc
mov
or
movsl
xchg
stc
cmpsb
dec
shrb
das
pop
mov
enter
cmpsb
mov
sbb
fdivrs
call
rolb
pop
cmp
sbb
or
add
leave
clc
int
adc
or
xor
mov
std
in
cmc
loop
jecxz
in
sbb
outsb
es
je
lods
int
ja
aam
add
cmp
sti
adc
dec
add
mov
xchg
dec
leave
push
iret
push
leave
stc
add
xchg
das
ja
cmp
add
mov
sub
movsb
es
inc
mov
add
xor
sub
mov
sbb
inc
out
or
sub
stos
stos
out
iret
mov
add
ficomps
call
repz
scas
or
mov
mov
add
xor
adcl
or
sub
jns
test
stc
add
and
ror
mov
sub
xchg
dec
lret
sub
imul
mov
aaa
fwait
sub
sti
iret
iret
lock
cli
out
int
int
dec
insl
popa
mov
and
add
sbb
ja
or
insb
or
out
repnz
dec
add
cmp
jae
lods
aam
scas
fsubr
ret
movsl
les
ja
mov
jb
into
or
daa
fwait
add
or
add
je
cli
lcall
push
aas
push
mov
dec
pop
add
push
add
add
inc
jl
or
xor
cmp
cmp
and
test
inc
cld
add
jmp
dec
add
or
add
add
or
or
xor
add
testb
ret
in
cmc
addl
cwtl
nop
mov
ds
nop
add
cmp
xor
add
lret
mov
mov
movsl
lods
mov
mov
xor
and
ljmp
ljmp
add
or
je
xor
inc
roll
add
mov
loope
jmp
sub
test
add
mov
bnd
add
mov
cmp
ss
add
mov
add
sti
mov
add
loopne
inc
inc
and
pop
flds
push
mov
pushf
lahf
push
jbe
cmp
cli
pop
cwtl
and
add
add
xor
mov
inc
add
divl
fistpl
loopne
push
sbb
push
adc
mov
push
add
imul
hlt
call
xchg
idivb
outsl
or
jmp
js
int
push
push
dec
add
adc
add
sub
add
mov
xchg
fldl
in
sub
es
sbb
test
scas
mov
test
push
dec
push
mov
mov
inc
mov
add
push
and
out
jmp
addb
add
outsb
cmpsl
push
mov
xlat
add
les
je
cmp
jae
data16
add
dec
mov
out
iret
std
jne
dec
add
addl
insl
dec
cmp
add
loop
sbb
lcall
inc
mov
rol
sbb
or
cmp
pop
inc
pop
jp
aaa
jmp
mov
mov
mov
sbb
mov
add
push
jmp
lret
mov
lods
pop
push
pusha
cmp
lret
mov
jp
cmp
sbb
sbb
dec
mov
mov
roll
int
aad
mov
lret
arpl
push
fidivrl
dec
sbb
mov
jmp
aam
add
dec
enter
push
add
add
xchg
add
sahf
out
pop
cmc
loop
pop
add
in
test
daa
in
stos
jmp
push
loop
adc
add
add
cmpsl
popf
add
inc
add
add
xor
psubd
add
and
cli
push
scas
dec
in
sbb
mov
mov
pushf
lock
and
inc
add
pop
pop
pop
mov
mov
scas
jmp
idivl
insl
mov
cmp
pop
cmp
mov
xchg
addr16
into
das
inc
out
pushf
loope
add
popa
xchg
orl
lea
fdivr
ds
sbb
lea
mov
std
xchg
cwtl
jns
mov
mov
fildll
pop
jbe
cmp
adc
and
pop
cltd
dec
mov
mov
jle
pop
or
jge
clc
lret
add
push
out
mov
xchg
jmp
dec
je
ret
dec
push
mov
loope
flds
pushf
mov
xchg
pop
push
push
es
js
jb
sub
push
mov
ljmp
pop
cmpsb
popw
rorl
dec
xor
inc
cli
pop
cmp
cmp
fwait
outsl
roll
fucomip
xchg
inc
xor
sbb
idivb
test
bound
iret
lahf
dec
imul
and
jnp
daa
mov
and
in
push
jg
adc
push
add
jp
sbb
add
xchg
cli
mov
jmp
ds
imul
xor
add
movsl
push
jb
fstpt
stos
jle
cmc
lret
ds
pop
adc
add
and
aaa
inc
pop
mov
add
jmp
ret
lds
add
push
or
jecxz
add
xchg
mov
gs
in
sti
jecxz
out
std
add
faddl
adc
adc
icebp
add
test
dec
orl
in
add
pop
std
cmp
cmp
add
cmp
xlat
mov
mov
add
xchg
mov
cwtl
inc
push
dec
adc
push
push
add
or
ds
xchg
sbb
popa
incl
pop
out
mov
or
mov
scas
insl
dec
mov
push
push
pop
add
xchg
ss
clc
mov
scas
add
sahf
add
sub
add
add
jnp
fs
mov
pop
mov
notl
sbb
shrl
stc
mov
scas
mov
test
movsl
hlt
add
call
pop
adc
andb
mov
add
pop
lock
add
daa
xchg
xchg
stc
add
insl
inc
add
mov
std
lods
fcmovnb
add
cld
out
loopne
mov
add
sub
mov
nop
cmp
dec
cmc
pop
pop
sub
fwait
test
adc
sahf
push
stos
iret
stc
out
call
jb
pushf
push
mov
mov
add
cli
test
outsb
sbb
push
add
adc
popa
loopne
test
scas
callw
jle
fs
sbb
dec
dec
push
push
pop
or
in
add
xchg
loop
add
add
add
outsl
arpl
daa
dec
add
stos
cs
fiadds
or
sbb
add
sub
lea
xchg
imul
mov
enter
adc
arpl
push
sbb
mov
jno
cli
cmpsb
orl
js
add
inc
jb
sbb
mov
or
mov
or
inc
daa
arpl
popa
or
data16
sti
lcall
fistpll
call
add
inc
cmp
inc
mov
ja
loopne
std
roll
mov
add
cwtl
pop
sbb
pop
and
jg
sub
imul
daa
jns
and
mov
stos
stc
dec
add
ret
add
lahf
pop
dec
sub
and
pop
aaa
jge
mov
inc
xchg
cmc
lods
xchg
mov
outsl
inc
test
push
test
sub
dec
pop
leave
cmpsb
lock
sbb
jbe
or
mov
lds
pop
mov
add
add
push
dec
shll
push
mov
shll
jle
das
sbb
mov
inc
jmp
lahf
mov
movsb
ret
and
jp
jne
arpl
outsl
fildll
mov
int
or
fs
iret
call
stos
jnp
cwtl
add
fidivrl
fiadds
lret
into
fmuls
je
sub
pop
es
or
xchg
sbb
js
lea
xchg
jno
iret
add
pusha
test
add
xor
xor
shr
insb
mov
xor
and
cs
xchg
fnstcw
add
mov
adc
dec
enter
push
outsl
dec
or
popa
mov
mov
add
pop
sub
push
add
add
rclb
das
adc
push
sub
rolb
pop
int
xor
in
mov
cli
clc
add
or
add
out
add
sub
mov
cmp
pop
test
ret
jno
clc
jo
icebp
mov
clc
ja
jmp
pop
test
sarl
dec
xor
mov
sub
iret
add
int
jne
ret
jne
sbb
push
ds
jl
inc
mov
mov
cmpsb
xor
xchg
roll
add
inc
add
dec
dec
add
push
add
pop
mov
mov
xchg
mov
sub
or
push
les
loop
sub
pop
add
inc
adc
add
jl
pop
mov
enter
push
add
inc
int
or
mov
dec
je
jb
add
mov
int3
scas
add
mov
add
jne
push
or
add
adc
add
adc
fdivp
fyl2x
movb
sbb
shlb
xor
add
int3
aaa
ljmp
cmp
movsl
ret
push
mov
jbe
cmp
or
icebp
loop
stos
leave
mov
mov
mov
add
xor
inc
shll
add
pop
mov
add
insb
jmp
pop
add
xchg
mov
faddl
and
ljmp
xchg
pushf
mov
nop
in
xor
out
pusha
push
insb
outsb
xchg
jbe
add
mov
push
ljmp
and
xor
add
push
push
xor
ds
add
dec
add
dec
push
inc
push
faddl
std
test
sbbl
fcomip
rcrl
imul
ret
jne
add
jb
cmp
dec
push
sub
jmp
adc
adc
cmp
cwtl
shll
dec
add
out
add
push
xor
xor
xor
lea
hlt
mov
nop
stc
xchg
out
sub
add
adc
cmp
int3
sub
or
in
xlat
push
add
adc
jne
add
fcompl
add
pushf
in
fwait
add
nop
imulb
add
adc
std
add
dec
jns
addr16
sbb
add
sbb
xor
lea
xor
add
jge
repnz
scas
add
mulb
and
cmp
sbb
push
add
jmp
mov
pop
xchg
add
adc
mov
lea
mov
ljmp
and
pop
je
jb
fcomps
in
dec
mov
nop
mov
cli
pop
add
xor
add
sub
adc
adc
cli
in
push
dec
and
popf
out
mov
imul
xor
mov
xor
std
jmp
pmaddwd
add
outsl
or
mov
xor
sub
add
cmp
xor
mov
jb
add
lret
inc
and
fsts
xchg
notl
into
ficompl
in
and
add
ds
inc
add
inc
xchg
jns
xor
or
es
cmp
mov
mov
push
lret
mov
lods
mov
mov
bound
mov
pop
dec
or
adc
adc
add
dec
push
inc
add
push
and
push
push
dec
clc
add
xchg
mov
mov
ret
sub
push
pusha
inc
jg
jge
add
clc
rcll
iret
fisttpll
push
enter
cmp
sbb
add
add
and
mov
fdivrs
cli
and
xchg
mov
cmp
and
and
cmp
add
add
repnz
outsl
jns
mov
sbb
add
inc
fcomps
push
fmull
add
mov
add
repz
sub
hlt
jo
xchg
fiaddl
adc
and
aam
out
sub
shll
mov
out
xchg
add
xchg
fadd
and
fwait
add
inc
jbe
cmp
jl
jg
xor
fistl
and
aad
out
add
cwtl
sbb
and
dec
add
add
aad
sbb
fsubs
loopne
mov
popa
cmp
push
add
sti
popa
in
push
jle
mov
cli
inc
add
cmp
inc
add
and
or
sbb
in
push
loopne
sbb
fwait
or
loopne
clc
dec
cmp
add
add
mov
mov
fidivrs
aam
leave
bound
outsl
jo
inc
add
call
call
pusha
loope
fistpl
fstp
add
jno
dec
xor
xor
mov
nop
js
ret
ljmp
pop
xlat
inc
js
out
into
lea
adc
movsl
add
fldenv
arpl
add
movsl
aaa
insl
cmp
inc
adc
ret
dec
out
mov
mov
mov
mov
mov
xor
gs
mov
lods
add
pop
mov
add
pop
xor
add
push
and
stos
aas
xor
js
movsl
jns
add
jbe
je
jb
add
je
add
clc
lods
sbb
push
xchg
push
int
push
sub
ja
or
pop
sbb
fdivrp
insb
gs
xchg
les
dec
pop
loop
sbbl
loopne
dec
or
pushf
jp
inc
cli
jbe
addb
mov
lahf
insl
add
hlt
add
and
jecxz
shrb
fistl
mov
sbb
or
mov
daa
dec
inc
loope
loop
sahf
jmp
jnp
adc
inc
into
pop
adc
shl
inc
lret
movsb
sbb
fwait
xchg
cltd
cli
lahf
hlt
sbb
pop
xor
jp
dec
les
pop
mov
into
cmpsb
sahf
cmpsl
mov
fnstcw
sub
les
movsb
stc
mov
daa
xor
insb
scas
push
jp
jbe
inc
sub
in
stos
les
inc
aad
lea
push
dec
outsl
cmpsb
pop
cmp
mov
pop
mov
or
icebp
jp
fisttpl
and
incb
xor
or
das
frstor
adc
xchg
jecxz
jae
aam
out
xchg
pop
push
in
mov
aam
mov
daa
xor
sub
xor
xor
ss
out
mov
add
and
mov
add
ficoms
add
movsb
pop
adc
dec
outsl
add
and
out
add
dec
xchg
aam
shr
aam
mov
je
ss
les
sub
ljmp
fisubs
mov
push
add
and
sub
js
mul
push
test
push
add
adc
and
ret
jne
xchg
aas
adc
daa
add
jg
sub
inc
mov
pop
ja
push
pop
ljmp
test
xchg
or
mov
shll
fimull
pop
dec
add
ja
jne
jae
add
jg
loop
mov
outsl
rorl
dec
daa
and
mov
rclb
mov
ret
cmp
pop
dec
mov
pop
add
imul
das
aaa
aas
mov
bound
cmp
push
mov
xlat
jle
into
aad
jbe
jae
rcrb
subb
nop
mov
add
data16
sub
mov
movsb
shl
lahf
in
std
out
std
add
jno
cmp
cs
sub
jmp
lds
movsl
sub
xchg
add
pop
mov
push
or
add
mov
aam
mov
mov
mov
push
add
stos
sub
xor
add
xchg
scas
xor
das
add
mov
jl
jmp
inc
lret
out
jns
je
add
pmaxub
fisttpl
inc
jbe
shlb
add
jae
jno
aas
xchg
popa
in
js
movsb
cld
stc
fs
out
and
mov
adc
push
das
add
xor
add
add
dec
outsl
mov
mov
rolb
sarb
push
add
and
xchg
add
xchg
jns
pop
leave
nop
add
mov
in
rol
shlb
je
pop
adc
mov
cmp
testb
add
repz
add
inc
js
push
push
insb
xor
xor
aad
add
in
jl
pop
test
xchg
push
xchg
ficoms
cmp
add
add
clc
repnz
add
mov
sub
add
clc
out
loope
mov
push
pop
call
mov
pop
add
mov
mov
pop
mov
push
jbe
ja
add
repnz
iret
sbb
pop
rolb
jo
inc
mov
or
add
mov
adc
addb
inc
jp
cmc
leave
jp
cwtl
fwait
xchg
add
xor
add
jmp
or
push
inc
push
imul
cld
shr
add
lock
rol
xlat
movl
xchg
jbe
jns
or
orps
cmp
push
add
test
dec
testl
mov
dec
scas
push
scas
push
rolb
in
lcall
lock
loope
pop
push
jmp
push
mov
mov
adc
cli
loopne
add
mov
scas
xorb
inc
aaa
mov
add
add
loope
stos
add
sub
outsl
and
inc
add
pop
sub
pop
or
adc
cmpsb
xchg
daa
das
add
inc
stos
cmp
imul
es
js
or
add
leave
add
lds
mov
imul
sbb
out
sbb
push
pushf
in
pusha
mov
cwtl
loope
stc
pop
add
add
js
cmp
cmp
add
cli
mov
filds
orb
lahf
imul
add
in
incb
aas
add
cli
aad
rcll
rorl
jg
inc
stc
jno
add
and
movsb
addr16
push
add
shr
fdiv
aad
hlt
add
mov
sbb
data16
add
push
repz
fsubl
cli
xchg
sub
xchg
scas
xchg
mov
idivb
enter
and
into
cmp
sub
or
jns
cmc
push
mov
add
mov
add
int3
in
mov
push
sbbl
dec
mov
mov
mov
fdivrp
add
aas
fcoms
mov
mov
pusha
inc
add
jl
jp
js
add
pop
stos
int3
add
mov
jmp
add
lock
mov
add
inc
ja
mov
add
adc
aam
jge
dec
cmc
dec
push
sub
xor
iret
lcall
cld
mov
cltd
les
add
mov
out
inc
dec
jle
jp
sti
add
bound
imul
sbb
add
in
jo
push
insb
xor
dec
xlat
push
enter
das
add
dec
mov
nop
in
in
add
cmp
lea
popf
in
push
push
outsb
shlb
add
nop
mov
dec
push
loopne
mov
stos
jmp
movzbl
add
cli
and
stc
je
loopne
inc
xchg
out
cmp
add
push
aam
stos
dec
inc
add
push
cmp
sbb
divl
add
in
lcall
test
mov
push
dec
and
jmp
xchg
in
add
push
push
push
hlt
jo
add
sbb
xor
xor
push
add
sbb
xlat
fisubs
mov
mov
dec
mov
int
add
inc
fdiv
cmp
and
das
cmp
dec
les
push
add
push
test
and
cltd
cli
add
fdivl
filds
add
push
pop
lahf
jne
dec
add
mov
sub
pushf
lods
cld
out
in
pushf
cli
test
mov
sub
push
dec
sub
jl
push
sahf
mov
xchg
cwtl
bound
adc
inc
add
xchg
insb
push
je
jno
out
es
sub
stos
cli
insl
int
mov
xor
fldl
pop
jae
or
inc
lods
addl
add
push
add
popa
jmp
jne
inc
mov
pop
cmp
mov
xlat
mov
and
jns
jns
xchg
jle
sub
adc
add
dec
cmpsl
scas
gs
add
sub
push
push
pop
sbb
mov
das
sbb
add
fsubrs
outsb
hlt
pop
icebp
add
call
xor
lods
sub
aaa
cmp
xor
inc
mov
pop
dec
movsl
insl
push
xchg
loop
pushf
nop
inc
aas
xor
add
in
aad
lret
add
mov
mov
mov
sbb
cmp
add
add
fsubrp
aas
loop
enter
scas
ljmp
xor
push
push
add
pop
jne
jle
fldenv
mov
aaa
mov
mov
xchg
add
nop
push
xchg
fwait
pop
int
add
leave
into
add
sbb
mov
mov
ret
jmp
sbb
out
inc
scas
jecxz
jmp
add
inc
xchg
add
pop
or
inc
mov
call
movsb
fmul
repnz
leave
and
and
mov
add
push
imul
hlt
jae
pop
pushf
movsl
out
enter
xchg
add
mov
icebp
or
adc
push
aad
adc
xchg
xchg
mov
mov
add
inc
add
lock
lcall
and
cmp
mov
ljmp
mov
bound
out
popf
fbstp
shr
aam
insb
cwtl
inc
sub
dec
stos
jae,pt
lea
jle
mov
out
lret
xor
enter
dec
cwtl
daa
ljmp
adc
or
pop
xchg
lahf
mov
scas
mov
scas
mov
push
mov
mov
js
lret
or
push
hlt
push
repz
scas
and
xchg
xchg
mov
mov
mov
jae
pop
icebp
por
out
test
or
pop
add
pop
push
add
dec
test
xchg
pop
call
insb
shl
adc
dec
and
cmp
gs
inc
mov
push
mov
out
mov
add
test
dec
cs
push
inc
arpl
pop
inc
or
xchg
idivb
aad
jmp
jmp
sub
lret
sarb
xor
and
sub
jge
mov
push
mov
adc
data16
imul
hlt
lods
mov
rcl
into
rcl
rcr
xlat
leave
xlat
inc
xchg
imul
sbb
mov
dec
cmp
cli
addb
mov
bound
inc
cmp
sub
scas
sbb
loopne
call
call
es
xchg
jne
dec
or
sbb
or
mov
cmp
rcl
enter
enter
pop
push
mov
insb
cmpb
out
fiadds
pop
or
and
aaa
sub
aas
das
sub
and
mov
popa
dec
loop
hlt
dec
test
mov
dec
dec
pop
or
pop
wbinvd
or
add
cwtl
inc
loop
xchg
inc
out
lods
ret
lods
das
push
subl
dec
pop
pusha
pusha
ja
push
bound
cmpsb
ret
mov
xor
ss
push
sti
lods
mov
dec
pop
dec
dec
dec
inc
inc
dec
fadds
das
in
add
adc
push
outsl
pop
ret
outsb
fisttpl
test
scas
test
cmp
add
loope
int3
fdivl
dec
mov
cli
addb
mov
bound
inc
cmp
sub
scas
sbb
loopne
call
call
es
xchg
jne
dec
or
sbb
or
mov
cmp
rcl
enter
enter
pop
push
mov
insb
cmpb
out
fiadds
pop
or
and
aaa
sub
aas
das
sub
and
mov
popa
dec
loop
hlt
dec
test
mov
dec
dec
pop
or
pop
wbinvd
or
add
cwtl
inc
loop
xchg
inc
out
lods
ret
lods
das
push
subl
dec
pop
pusha
pusha
ja
push
bound
cmpsb
ret
mov
xor
ss
push
sti
lods
mov
dec
pop
dec
dec
dec
inc
inc
dec
fadds
das
in
and
insl
out
aas
mov
dec
sub
pop
popa
or
add
xchg
add
cmp
jo
lret
iret
sarb
lret
enter
outsb
adc
repnz
maskmovq
cmp
scas
sbb
xchg
les
pop
dec
in
and
push
mov
sub
in
arpl
adc
daa
mov
pop
pushf
lock
lahf
jne
xor
jecxz
jp
dec
ret
int
cmp
leave
les
das
or
ds
xor
cmp
aad
sti
aas
mov
fstpl
sub
jl
icebp
jo
and
and
clc
stos
lds
jnp
dec
jo
jb
jl
adc
mov
cmp
xchg
nop
cltd
sahf
sub
mov
sbb
xchg
xor
mov
mov
mov
outsb
pop
pop
inc
sbb
xchg
shl
add
adc
int3
adc
cvtps2pd
xorl
fbld
pop
shr
or
iret
sbb
pop
imul
xchg
data16
fistps
shrl
cmpsb
fcomip
outsl
sbb
je
shr
stc
pop
pushf
out
pusha
push
push
lock
jnp
or
andb
jbe
mov
mov
sbb
sti
push
add
stos
pushf
sbb
aaa
ret
inc
adc
movl
in
clc
call
ds
ljmp
jecxz
mov
jle
push
shl
push
adc
cmpsb
dec
sbb
bound
mov
paddsb
dec
push
xchg
loop
add
cwtl
data16
loop
inc
sbb
idivl
cmp
pop
loope,pn
adc
out
std
jp
outsb
xchg
lock
push
and
fstp
nop
jmp
dec
adc
inc
