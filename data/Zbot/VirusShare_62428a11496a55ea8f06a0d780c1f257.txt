push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
add
mov
add
mov
movl
mov
add
mov
mov
mov
movl
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
push
lea
push
call
lea
push
push
push
push
push
call
test
je
jmp
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
lea
push
call
lea
push
call
push
push
push
push
mov
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
xor
jmp
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
pushl
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
movzbl
mov
movl
movl
mov
add
mov
mov
movl
movl
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
add
add
aad
inc
add
data16
insl
jb
xchg
add
pusha
bound
jnp
inc
insl
dec
add
xchg
popaw
mov
jb
js
inc
dec
pop
add
sbb
dec
sub
insb
cmp
outsb
xor
inc
aad
add
push
js
popa
or
imul
js
jb
push
inc
aad
add
adc
push
add
in
arpl
js
imul
ja
inc
aad
add
xchg
outsb
je
ret
insb
mov
popa
outsb
mov
or
add
or
loope
inc
add
or
popf
or
orl
inc
add
inc
add
outsl
je
inc
arpl
outsb
jb
inc
jns
add
gs
sbb
jb
js
inc
add
sbb
outsb
jb
lock
mov
insb
insb
aad
add
add
arpl
jge
fs
add
call
jge
add
jge
fs
outsb
insl
arpl
bound
mov
outsl
arpl
or
add
push
inc
andl
add
pop
imul
inc
cmp
add
popa
jb
inc
imul
jle
add
data16
outsl
testb
add
insb
jb
clc
xor
stos
insl
insb
insb
aad
add
adc
push
out
arpl
jbe
gs
add
aad
rolb
aad
pop
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
jmp
or
jmp
or
mov
cmp
adc
or
jmp
or
repnz
add
jmp
cmpsb
or
jmp
lret
jmp
es
add
out
add
fmuls
add
or
call
add
or
jmp
movb
jmp
or
jmp
jl
adc
insb
sbb
add
add
add
cmp
add
sub
add
or
add
add
cmp
add
sub
add
sub
add
cld
or
add
or
add
or
add
jmp
add
add
add
cld
or
add
or
add
or
add
add
lods
or
add
add
mov
or
add
add
jl
add
or
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
outsl
gs
mov
add
loopne
add
add
loopne
lcall
loope
add
loopne
add
loopne
add
add
jne
pusha
popa
imul
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
and
xchg
jno
xor
arpl
aad
push
add
loopne
add
or
sub
or
popf
or
add
or
add
or
add
or
dec
jmp
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
or
add
add
jl
add
jl
add
insb
or
add
add
add
add
add
add
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cld
pop
add
cld
pop
add
add
in
pop
add
in
pop
add
cld
pop
add
cld
pop
add
in
pop
add
in
pop
add
mov
pop
add
lods
pop
add
lods
pop
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
aad
add
aad
cwtl
add
xor
add
adc
add
ficoms
add
enter
sub
add
ds
add
push
nop
add
jb
add
test
add
xchg
nop
add
or
nop
or
nop
or
nop
or
nop
or
xchg
or
xchg
or
nop
or
or
or
xchg
or
or
or
xchg
or
xchg
or
xchg
or
or
or
add
or
cmpsb
or
cmpsl
or
cmpsb
or
movsl
or
movsl
or
cmpsl
or
jmp
jns
add
jns
add
add
jo
add
js
add
cmp
add
or
add
or
add
or
add
js
add
or
pop
or
or
inc
or
add
inc
or
add
imul
add
or
inc
or
add
add
add
jp
add
pop
jl
add
add
add
dec
jl
add
add
jle
add
add
mov
jg
add
jg
add
jg
add
jg
add
add
push
jg
add
addb
sahf
jg
add
add
jge,pn
add
jle
add
jge
add
add
add
adc
add
add
pop
jge
add
add
jo
add
aad
xchg
add
scas
xchg
add
mov
aad
xchg
add
mov
xchg
add
ret
aad
cwtl
add
sbb
add
adc
add
push
xchg
add
sbb
add
push
xchg
add
mov
add
or
add
add
fsubrs
add
mov
xchg
add
mov
add
mov
xchg
add
rclb
add
fdivrs
aad
addb
or
jg
or
jg
or
or
or
jg
or
or
jg
or
jle
or
jle
or
jle
or
or
or
jle
or
jle
or
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
adc
or
das
push
or
cmp
lea
add
push
or
dec
push
or
push
push
or
and
das
add
push
or
icebp
push
or
aad
or
call
add
push
or
out
or
adcl
or
scas
add
add
cli
or
xchg
or
addr16
lret
fimull
add
lret
andnps
add
or
pushl
or
sbb
jmp
enter
xchg
mov
add
add
or
add
or
and
add
out
or
cmpb
add
lods
add
stos
test
add
add
mov
add
dec
xchg
add
push
add
push
xchg
add
xor
add
inc
xchg
add
fcoml
add
and
add
push
xchg
add
inc
xchg
add
add
and
add
aad
lea
aad
mov
aad
mov
aad
mov
aad
mov
aad
add
push
repnz
aad
mov
add
cmp
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
xchg
add
adcb
adcb
sbb
add
aad
xchg
add
xchg
add
mov
xchg
add
xchg
mov
aad
mov
aad
mov
aad
sbb
or
mov
or
mov
or
mov
or
mov
or
or
or
or
or
or
or
or
or
or
or
mov
or
mov
or
mov
or
or
mov
or
or
or
mov
or
sub
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
gs
add
addr16
add
inc
push
add
inc
push
add
add
inc
push
add
addr16
add
fs
add
or
add
or
add
addr16
add
addr16
add
inc
or
add
or
add
mov
add
js
add
bound
add
adc
add
add
hlt
mov
add
jns
add
add
cs
add
sbb
add
mov
add
mov
add
adc
add
out
addb
push
addl
add
add
or
add
sub
add
push
stos
add
ljmp
add
lret
aad
lahf
add
add
mov
add
adc
add
repnz
add
cld
movsb
add
sbb
add
dec
movsl
add
dec
movsl
add
repnz
aad
movsl
add
roll
push
in
add
push
icebp
add
push
in
add
add
push
and
push
xor
add
xor
add
in
add
push
jmp
add
cmpsb
add
cld
movsl
add
add
mov
add
add
push
aad
add
jmp
aad
sti
add
mov
add
mov
add
mov
movsl
or
movsl
or
add
mov
add
mov
add
mov
add
mov
add
or
sahf
or
popf
or
popf
or
popf
or
popf
or
popf
or
sahf
or
popf
add
or
sahf
or
sahf
or
sahf
or
sahf
or
lahf
or
sahf
or
sahf
or
or
pop
push
or
push
dec
or
lea
add
jae
add
imul
sbb
add
pop
or
inc
push
or
jmp
jns
add
jno
add
cmp
add
or
dec
cmp
add
xor
add
add
or
jmp
cmp
sub
outsb
mov
mov
pop
jnp
sub
das
mov
mov
fldt
add
adc
or
xchg
shl
and
or
dec
loopne
sbb
dec
xchg
xchg
testl
mov
fiaddl
xchg
cmc
sbb
repnz
movsl
or
sub
dec
stos
jp
jbe
add
jge
outsb
mov
fadds
xor
aam
xor
mov
or
or
pop
mov
sbb
fdivl
push
call
mov
sbb
addr16
gs
ja
inc
inc
in
adc
pop
add
xor
enter
aad
arpl
fstpl
clc
loopne
jo
fbstp
stc
shrb
mov
and
add
call
lds
enterw
mov
repnz
aad
lods
inc
aad
stos
inc
aad
add
aad
add
add
aad
add
aad
push
jne
jbe
add
repnz
aad
addl
repnz
push
jb
adcb
add
es
test
mov
jno
add
lock
fisttpll
cmp
add
out
lret
push
and
sub
orl
add
or
fs
jno
pop
int
out
imul
jae
adc
add
adc
sti
inc
add
add
or
add
or
add
or
add
or
or
or
add
or
add
or
add
or
add
or
add
or
add
pop
or
add
or
add
or
add
or
add
or
or
sub
sub
inc
add
stc
ljmp
mov
sub
inc
add
sub
imul
inc
add
mov
jmp
or
aam
add
flds
add
rorl
adc
add
cs
or
leave
fisttps
add
into
cmp
jmp
ficoms
sti
add
call
into
sbb
jmp
fisttps
add
into
imul
jmp
fimuls
add
into
mov
add
loopne
mov
add
sbb
jl
nop
add
add
cmp
jl
rolb
lea
add
add
add
mov
cmp
or
add
sub
mov
sub
dec
add
lock
add
sub
push
add
jecxz
sub
in
add
add
add
add
add
or
add
add
add
or
loop
inc
aad
or
aad
or
aad
or
or
or
loop
jl
add
loop
cmp
loop
fcom
mov
pop
aad
or
or
loop
or
loop
mov
loop
dec
aad
or
aad
or
aad
or
loop
adc
fisttpll
mov
aad
or
loop
xor
loop
aad
or
aad
or
or
or
or
or
jmp
or
jmp
or
or
or
or
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
or
or
or
or
or
or
or
or
or
or
or
add
or
fmul
push
add
into
outsl
add
fisubrs
add
fldenv
add
into
popl
jmp
fxam
add
fildl
add
into
aaa
add
fdivp
call
fldt
jmp
ficoms
add
fnstenv
call
fisubs
add
fsts
add
into
xchg
jmp
add
add
fisttpl
add
into
cmp
jmp
fimuls
call
cld
add
add
add
add
push
or
in
add
mov
push
mov
add
inc
add
push
add
sbb
jl
xchg
add
cmp
insb
add
jl
cmp
jl
rolb
jge
adc
add
insb
add
cmp
sub
cmp
mov
sub
or
sub
mov
cmp
dec
add
repnz
or
sub
push
add
add
add
iret
push
sub
loop
jne
loop
xor
aad
push
or
aad
or
aad
or
aad
or
loop
ljmp
or
add
loop
sbb
aad
add
aad
or
loop
cmp
aad
add
aad
or
loop
sub
aad
or
aad
or
loop
cli
aad
add
aad
or
or
or
or
or
or
add
or
or
jmp
or
or
add
or
or
or
or
add
or
or
jmp
or
jmp
or
or
or
or
or
or
or
std
add
or
or
or
or
or
add
or
or
or
or
or
or
jmp
or
or
or
jmp
fdivrp
ljmp
add
rcll
add
ficomps
jmp
iret
ret
add
roll
add
fisubrs
jmp
shll
add
fimuls
add
shl
add
xlat
add
jmp
fdivp
call
xlat
data16
ficoms
jmp
shll
call
fisubs
add
rcll
into
add
jmp
cmp
dec
add
add
cld
std
dec
add
std
str
jb
incb
pop
add
std
outsl
add
std
das
add
add
add
push
or
mov
add
mov
add
inc
add
push
add
add
add
add
cmp
add
jl
js
jl
cmp
insb
rolb
jge
adc
cmp
push
add
mov
aad
or
aad
or
aad
or
aad
add
loop
adc
aad
jecxz
roll
sub
loop
je
loop
xor
loop
leave
aad
add
aad
or
loop
add
loop
test
add
loop
inc
aad
or
aad
add
aad
or
or
into
add
loop
jl
loop
cmp
loop
mov
pop
aad
or
jmp
or
or
or
or
jmp
or
flds
or
or
or
or
or
add
or
or
add
or
add
or
or
or
or
or
or
jmp
or
jmp
or
or
or
or
or
or
or
std
add
or
or
or
or
or
fcmovnbe
cli
call
into
and
jmp
fiadds
add
fiadds
add
add
iret
aam
add
jmp
into
idiv
test
or
cli
aad
add
ficoms
jmp
iret
mov
call
into
daa
add
leave
pushf
add
fiadds
add
fiadds
add
leave
faddl
fsts
das
add
into
out
call
jae
add
fimuls
add
add
add
add
iret
sbb
cmp
outsb
add
add
push
add
mov
sub
dec
add
cld
add
in
add
add
add
add
add
in
add
add
cld
ret
int3
or
mov
add
add
add
mov
add
lods
loop
lods
int3
add
add
insb
add
add
add
iret
cmp
loop
jns
loop
cmp
loop
rcl
mov
adc
loop
imul
loop
mov
loop
or
loop
mov
loop
dec
aad
or
aad
incb
aad
or
loop
adc
aam
sub
loop
jne
loop
xor
aad
decb
add
loop
and
aad
or
aad
or
loop
jmp
mov
pop
aad
or
or
or
or
or
std
cld
pop
or
or
or
or
or
cld
jecxz
jmp
or
or
or
jmp
or
jmp
or
or
cld
xlat
or
or
add
or
or
or
cld
mov
jmp
or
or
cld
fisttps
jmp
or
or
or
jmp
or
jmp
or
add
mov
jmp
into
out
call
imul
jmp
fbstp
call
into
push
add
add
fists
call
into
ds
add
or
add
into
xor
jmp
fimuls
add
jmp
push
add
into
adc
jmp
leave
sti
call
mov
fwait
add
scas
add
jmp
lods
into
inc
add
add
pop
add
add
add
add
bound
insb
into
jle
insb
into
add
sbb
sub
outsb
add
add
push
add
mov
sub
dec
add
int3
incb
sub
add
sub
add
incl
adc
xlat
add
adc
add
add
add
mov
add
adc
add
and
mov
add
aad
or
add
aad
or
int
or
aad
or
aad
or
aad
or
int
or
aad
or
shl
or
in
add
fimull
add
or
aad
or
in
or
leave
call
or
aad
add
aad
add
aad
add
aad
add
aad
add
add
aad
add
aad
add
aad
add
aad
add
aad
jmp
adc
inc
add
xor
mov
outsb
fdivr
cmp
cmpsb
divb
fstpt
pop
inc
mov
test
sarb
mov
cmp
test
push
jge
pop
out
jnp
int
imul
and
xor
inc
pop
les
push
call
sub
mov
pushf
jle
xchg
lret
std
mov
aam
and
sub
mov
push
cli
hlt
mov
aaa
cmp
mov
sub
pop
push
das
mov
es
push
dec
mov
adc
movsl
mov
stc
jnp
mov
mov
xor
add
cli
out
cmpsb
inc
fstp
adc
fsubrs
and
out
imul
fnstcw
or
or
xor
sub
outsb
or
pop
das
push
mov
adc
das
lods
push
push
shrl
mov
dec
fdivl
pop
fildl
dec
in
rcrl
add
mov
push
mov
lahf
jg
mov
js
aad
psubd
push
loope
or
sbb
insl
or
mulb
nop
cld
push
push
sub
test
or
test
jno
sbb
into
pmaddwd
je
gs
mov
aad
mov
shr
lock
jp
mov
dec
mov
aam
dec
gs
jne
mov
data16
jbe
adc
pop
pushf
js
rorb
xor
xchg
cmpsl
lods
outsb
test
orl
xchg
lock
sbb
or
dec
or
test
repz
and
push
cltd
push
mov
mov
cmp
out
add
and
test
cld
repnz
jp
fwait
stos
int3
ficoms
xchg
add
jl
pop
outsl
leave
or
bound
jae
inc
cmp
mov
cmpsb
fsubl
mov
sti
clc
imull
xlat
pop
call
aas
repnz
int3
cwtl
into
popf
aad
cmp
inc
lods
jo
add
mov
rcl
and
movsb
xor
mov
add
outsb
lahf
std
xlat
decb
mov
fists
sbb
jns
stc
add
jnp
adc
jp
shll
pop
and
mov
cmp
jle
inc
enter
sarb
lret
ja
ret
int
fsubrs
scas
lahf
pushf
push
or
sub
adc
sub
lock
xor
inc
sub
add
mov
pop
divl
push
add
dec
or
repz
add
jb
mov
mov
lock
mov
xlat
ret
shlb
mov
lret
fs
arpl
add
and
jne
cmp
gs
or
es
jb
idiv
add
add
loop
and
or
aas
rclb
sti
jl
outsl
fisttpl
call
lods
aam
aad
xchg
fnstsw
xchg
ljmp
mov
cmpb
int
or
pop
pminub
push
push
add
cmp
add
pop
push
push
lcall
xor
mov
or
mov
cmp
add
jne
add
push
and
js
pop
movsl
out
imul
pop
shll
jg
jl
ficoms
and
mov
sbb
lret
or
lds
sbb
pop
xchg
jmp
and
iret
add
adc
bound
popa
cmp
cmp
push
cmp
mov
jns
int3
shrb
xlat
out
call
adc
sti
test
mov
add
outsl
mov
adc
icebp
jge
shll
lea
ret
mov
cmp
add
jbe
addr16
sahf
cmp
lret
icebp
loop
cmp
mov
pushf
inc
outsl
cs
jne
push
bound
add
add
or
jae
clc
test
sti
ss
and
call
fmull
dec
scas
popa
int
ret
lret
mov
pop
jl
dec
and
mov
movb
inc
mov
ret
inc
inc
vrcpss
inc
rorl
jbe
stos
pop
xor
dec
in
sub
sbb
push
or
adc
jg
inc
fistpll
or
sub
pop
imul
aad
mov
xor
mov
push
nop
mov
lahf
pop
jbe
test
gs
and
fistl
jae
add
push
add
scas
les
sbb
pop
mov
js
lock
jmp
xor
adc
frstor
cmpsb
ds
cmp
test
mov
xchg
fistps
add
cltd
clc
adc
cwtl
sub
mov
jl
mov
incb
lea
notb
sbb
pushf
int3
sbb
lret
add
bound
bound
fnstsw
cmc
nop
push
adc
imul
jecxz
and
icebp
push
inc
and
mov
xor
sub
adc
std
lret
or
adc
data16
adc
mov
mov
mov
jbe
and
std
xchg
int3
adcl
rclb
cmp
add
mov
in
xchg
cmp
push
adc
out
cmp
popf
push
mov
arpl
daa
shl
movsb
pop
rcl
xchg
je
int3
mov
dec
mov
inc
lahf
jno
imul
insb
push
add
lcall
popa
mov
push
out
push
imul
pop
imul
sub
add
repz
dec
ljmp
xor
cs
out
lea
and
pop
pop
push
xor
sub
adc
cwtl
repz
and
or
mov
mov
jns
insb
mov
add
xchg
fistpll
fstl
dec
enter
loope
rclb
scas
xchg
add
or
mov
xor
fwait
add
push
imul
ljmp
adc
inc
loope
or
les
stc
out
push
pop
repz
dec
fidivl
sbb
test
sbb
sub
in
and
repz
daa
call
xorb
sahf
mov
je
sub
stos
push
xor
sub
pop
dec
xor
clc
cmpsl
jo
test
mov
sub
cli
lret
xorl
aad
jns
jl
mov
jne
adc
mov
push
inc
mov
mov
add
in
out
fwait
dec
mov
jo
jns
xor
bound
jp
and
imul
add
cltd
adc
clc
gs
dec
jmp
sbb
or
inc
cli
and
lcall
int3
aaa
aam
lea
xchg
jle
loope
lods
mov
rorl
aad
adc
inc
xchg
or
aas
sar
repz
inc
pop
mov
sbb
dec
mov
in
add
dec
ja
jg
mov
or
and
lret
shll
xor
push
xchg
into
jne
stc
jg
and
inc
sbb
and
dec
sti
dec
mov
fcoms
cmp
adc
or
test
sti
adc
cmp
jno
mov
xchg
clc
mov
in
xchg
jmp
mov
lea
xor
add
pop
rclb
xchg
mov
sbb
outsb
dec
mov
test
or
inc
rorl
jecxz
xchg
or
out
sbb
mov
sub
xchg
loopne
sbb
cmpsb
sbb
hlt
arpl
xor
and
xor
mov
adc
cmp
add
add
cltd
mov
pop
pushf
inc
dec
cmp
mov
cli
pushf
leave
cmp
or
fdivrs
aas
popl
mov
cmp
pop
add
fcomi
fwait
aaa
and
fidivl
rorb
xor
shlb
dec
or
xor
test
daa
mov
sub
and
mov
into
xchg
out
add
and
mov
cld
in
xchg
or
jno
jecxz
mov
pop
lret
cmc
jmp
fs
ret
lcall
pop
push
push
cmp
lods
call
push
jmp
mov
loope
lcall
out
dec
ret
or
mov
cmp
popf
push
add
add
nop
out
mov
jo
mov
cli
sbb
mov
imul
insl
mov
icebp
jp,pt
ficomps
xor
mov
xlat
jae
or
imull
pop
sub
mov
inc
daa
pop
es
push
cmp
and
inc
pop
jbe
inc
test
add
insl
inc
sbbl
xchg
dec
test
push
dec
sub
pop
rorb
movsl
mov
pop
dec
mov
add
pop
pop
addb
jne
in
pop
subb
add
xor
push
adc
stos
pop
ds
ljmp
pop
insl
pop
mov
pop
loop
xchg
or
gs
imul
xchg
mov
loop
cli
cmp
and
jle
out
mov
in
jecxz
in
pushf
jmp
out
ss
aas
pop
addr16
or
in
lea
out
push
cmpsb
jmp
sub
and
pop
mov
std
es
ja
pushf
incb
rcrb
sti
cs
sahf
stc
mov
add
add
arpl
xor
pop
inc
icebp
or
hlt
pop
lret
pushf
div
je
negb
js
lret
mov
cld
fcmovb
push
jno
out
mov
ds
fstpl
inc
aaa
fcoml
imul
in
test
lcall
aad
sub
pop
lds
shl
mov
or
pop
pushf
les
add
fucompp
fstps
push
sbb
std
push
push
pop
dec
call
pop
stos
adc
xor
loop
leave
popf
adc
or
xchg
jne
add
pop
mov
sub
jmp
inc
sub
movsl
dec
xchg
push
fs
outsb
scas
and
test
popa
push
imul
add
cmp
mov
iret
add
out
xor
aam
outsl
or
icebp
dec
test
pop
mov
rorb
jg
mov
jle
dec
flds
jno
pop
lea
sbb
mov
fimuls
xchg
sbb
mov
xor
ja
jbe
mov
cmpsl
clc
arpl
sub
add
gs
cmp
pusha
xor
lods
pusha
pop
add
js
add
push
push
sub
arpl
in
sub
inc
fildll
inc
dec
mov
cmp
lds
xchg
ja
mov
sbb
mov
mov
filds
xchg
cmc
test
mov
fs
mov
cmp
mov
adc
mov
jmp
mov
mov
mov
inc
sub
xchg
lods
and
jo
xlat
popf
xchg
xor
mov
jge
jns
outsl
call
xchg
xor
dec
cmp
push
dec
stc
fsubp
loop
arpl
pop
sbb
mov
call
or
lds
add
dec
sub
addr16
jb
shl
int
pop
repnz
xchg
rcll
sub
cmp
sbb
outsb
xorb
cmpsb
lds
mov
mov
cmp
sub
xchg
push
jnp
test
mov
fst
cli
dec
sbb
jmp
stos
push
adc
das
test
pop
add
cmpsl
movsl
fucomi
xchg
or
std
cmpl
and
out
daa
dec
pop
push
or
lcall
cld
xor
lahf
add
jo
pusha
fstpl
xchg
dec
inc
cmp
cli
test
jecxz
xlat
push
mov
in
stos
dec
sub
dec
mull
movsb
jae
mov
rcrl
jle
add
or
psrlw
int
enter
pop
fmuls
out
xor
dec
mov
mov
enter
and
add
sbb
inc
pop
mov
scas
mov
xor
fidivrs
rolb
jae
cmpsl
gs
mov
or
jle
cli
repnz
cmp
loope
push
add
repz
ljmp
mov
mov
jecxz
and
jbe
decb
call
sbb
jo
fildl
ficoml
jmp
mov
leave
mov
bound
test
push
xor
rcr
jg
xor
dec
in
es
pop
test
popa
mov
dec
subb
push
mov
sub
int
mov
cltd
inc
fwait
test
xor
jmp
in
aas
xchg
inc
mov
popf
incl
add
xchg
sbb
enter
jo
xchg
in
sub
cmp
addb
push
cmp
jecxz
pop
hlt
movb
dec
push
mov
mov
cmc
scas
lahf
xor
pop
sahf
mov
xchg
and
and
std
rcrb
or
push
push
xchg
notl
sub
jl
pop
jle
and
imul
cmc
aad
shlb
enter
push
xchg
pop
mov
mov
cltd
cmp
mov
pop
sbb
arpl
add
add
push
inc
pop
mov
dec
imul
loopne
inc
jb
dec
ljmp
aad
lret
adc
jne
lcall
sbb
ljmp
lea
gs
daa
cmp
jae
mov
lea
jp
cli
lods
orb
and
jge
mov
push
into
roll
sbb
dec
xchg
jne
push
outsb
ficompl
nop
lret
insl
gs
decb
add
push
mov
mov
sbb
mov
pop
sar
mov
xor
jge
sbb
hlt
ss
jae
cmp
add
lahf
xchg
mov
cli
mov
lods
push
jno
add
add
movsl
and
mov
push
sbb
jge
sbb
cmp
int3
outsb
lcall
les
pop
pop
repz
in
repnz
rcl
adc
and
rorb
add
jae
test
and
cld
mov
jmp
das
xchg
mov
cmp
imul
popa
mov
add
mov
mov
mov
sti
sub
inc
inc
xor
jnp
mov
push
lret
and
mov
fidivrs
add
adc
xchg
lcall
mov
or
hlt
adc
icebp
xchg
mov
cmc
mov
jmp
mov
add
sbb
xor
sbb
fs
sbb
bnd
jno
jo
inc
fidivs
fsub
jmp
ret
das
mov
cwtl
push
push
push
test
aad
and
leave
add
or
add
push
cmc
sbb
add
inc
jno
sub
or
in
faddl
aam
add
mov
mov
lds
das
repz
mov
insb
leave
add
outsb
stc
xchg
lret
insb
imul
rcrb
mov
lret
xor
add
cwtl
shll
adc
cmpb
imul
insb
xchg
pop
sbb
loop
roll
dec
adc
jge
pop
cld
jge
aad
or
daa
and
add
jb
sub
in
rclb
call
shlb
repz
jne
nop
out
mov
push
outsl
xor
or
and
sbb
out
add
mov
push
push
sbb
and
hlt
push
sub
xchg
xchg
or
sbb
insb
sub
push
aad
pusha
mov
add
and
imul
mov
push
mov
ret
sti
sub
ljmp
pop
mov
dec
cmpsb
repz
xor
sub
fdivrl
into
mov
or
fabs
xor
outsl
inc
cld
push
jg
lea
into
insl
lcall
push
rol
inc
repz
inc
mov
popa
shrb
xlat
push
in
cld
push
pop
mov
and
fstpl
cmp
xlat
dec
stos
xchg
fists
and
add
add
mov
int3
add
mov
out
rorl
shr
jecxz
xchg
stc
push
test
leave
cwtl
cld
mov
test
xor
sbb
cmpl
xor
mov
outsl
push
loop
test
rcrb
mov
shll
adc
pop
ljmp
cmp
lcall
pop
mov
popf
testb
daa
add
xchg
inc
jnp
mov
repnz
in
push
and
daa
mov
and
sbb
mov
xlat
sbb
sbb
sub
mov
dec
cltd
or
repnz
jl
je
push
xchg
jae
andb
insl
xchg
rclb
lret
ret
int
cmpsl
subl
mov
jbe
adc
jno
sahf
enter
push
stc
sbb
repnz
jp
imul
push
cmp
mov
jmp
mov
es
popf
and
cmpsl
imul
clc
adc
or
lret
pusha
xchg
push
repz
arpl
into
icebp
shll
das
js
jo
or
xor
mov
lret
xchg
int
add
and
jmp
push
jbe
jmp
pcmpgtw
fdivs
cli
add
cmp
mov
idivb
popl
adc
jae
jno
loope
push
jle
sarl
adc
cmc
sbb
and
mov
pop
add
pop
clc
out
add
cwtl
lea
das
clc
int3
aaa
sub
pop
es
shll
dec
ja
mov
xor
aam
leave
clc
rcll
jbe
jg
add
mov
inc
mov
js
pop
mov
push
adc
pop
ret
out
cltd
div
mulb
rorb
out
int3
sbb
push
or
rolb
sub
adc
out
add
add
xor
jg
sbb
jmp
cmpsb
cs
pop
xchg
xor
sbb
add
push
rclb
addr16
lock
mov
xchg
add
xchg
rcrb
mov
sub
out
lea
add
push
xor
fwait
popa
adc
push
ret
nop
add
add
add
inc
rorb
xchg
dec
xchg
fs
or
mov
call
push
outsl
dec
leave
aad
jle
cmp
sbb
pop
lds
test
and
mov
cwtl
inc
negl
and
mov
dec
xor
test
scas
dec
repnz
xor
mov
sar
inc
aas
mov
dec
push
inc
push
jg
aaa
sub
jne
cmc
mov
mov
fwait
loope
mov
leave
xor
mov
inc
imul
mov
sbb
add
shl
outsl
leave
fisttpll
fiaddl
popf
sub
inc
mov
pop
inc
xor
sbb
cmp
sbb
xchg
push
pusha
pop
add
inc
adc
add
std
mov
out
jg
arpl
pop
stos
and
jne
loope
mov
sahf
xchg
fwait
sbb
sbb
leave
scas
fstp
sub
roll
aaa
clc
xchg
adc
insb
imulb
add
xor
ret
les
jecxz
data16
cli
jge
into
and
and
inc
pop
aas
sub
cmp
mov
cmp
adc
js
or
daa
mov
adc
mov
xchg
fwait
hlt
mov
xchg
shll
mov
test
out
int
sub
fwait
dec
sub
cmpsl
pop
jae
out
mov
and
add
and
and
xor
pusha
add
cmpl
sub
inc
loope
stos
dec
cmp
sub
jbe
ret
movsb
js
ljmp
je
cli
sub
dec
loopne
mov
jmp
out
xor
jle
bnd
mov
loopne
mov
cli
divb
mov
adc
cmp
add
lea
cli
or
push
lret
dec
jecxz
pop
mov
inc
lret
aas
adc
rorl
jg
adc
jno
jo
pop
sub
lcall
mov
out
or
mov
sub
pop
push
pop
fstps
in
jge
or
sub
js
mov
out
xorl
push
bound
outsl
push
movsb
out
xchg
hlt
add
cmpsl
dec
xchg
lret
or
pop
pop
jb
repnz
fldcw
lock
lods
lods
lcall
sub
cmp
lret
test
mov
test
out
jno
movsb
loop
pop
mov
and
test
popa
pop
lds
aas
mov
add
push
imul
popf
jnp
int3
fildl
pop
mov
cwtl
neg
sbb
in
add
mov
je
cwtl
sbb
xchg
mov
pop
ja
jae
dec
mov
and
test
ja
out
push
mov
dec
mov
sti
cmp
add
cs
fdivr
fcmovb
roll
in
test
xchg
add
lahf
rcrb
into
pop
xorl
jg
dec
in
or
cmp
sti
sub
mov
dec
pop
mov
aas
out
mov
jp
adc
adc
xchg
jb
fnop
lcall
lods
cwtl
inc
xchg
outsb
mov
add
lahf
xor
test
std
stos
sub
cmp
nop
sbb
sub
outsb
mov
mov
inc
arpl
and
cmp
mov
rolb
mov
insb
pop
and
test
adc
cmp
ja
sbb
push
mov
pop
hlt
aad
ss
decl
jmp
or
add
and
cmc
sahf
gs
lret
cmpsb
xor
cld
mov
lds
movsb
xchg
stos
movsb
dec
mov
or
mov
push
push
pop
mov
mov
push
lods
js
and
std
clc
jno
mov
sub
adc
cmpsl
leave
sbb
and
jns
scas
popa
add
ds
sub
test
cli
cwtl
pop
xchg
clc
push
mov
stc
adc
jns
fisttps
aam
movsl
ljmp
cmp
dec
xchg
test
adc
mov
or
cmp
decb
fistpll
in
add
loop
jg
fdivrl
cmp
mov
mov
add
mov
sub
push
outsb
push
mov
cwtl
pop
out
xadd
sbb
fs
adc
or
and
jge
adc
shlb
mov
inc
shll
cmc
repz
and
movl
lods
pop
iret
test
pop
add
scas
pop
adc
in
sbb
call
cltd
jb
add
dec
jb
daa
pop
mov
push
mov
adc
add
or
push
sbb
xchg
repz
repnz
sar
sub
scas
int3
loopne
xchg
sahf
xchg
fidivrs
xchg
xchg
jmp
xchg
mov
cmp
dec
ficoml
dec
mov
rcll
xlat
aam
in
mov
mov
add
add
lret
and
fcomps
dec
negb
jne
jecxz
arpl
repnz
lret
lock
mov
icebp
adc
lcall
dec
dec
idivb
mov
pop
jae
inc
out
incl
push
addr16
sbb
outsl
fwait
rclb
test
ja
pop
jle
enter
add
jecxz
lcall
xchg
in
cli
jl
inc
scas
xorl
rcl
push
ret
add
iret
inc
mov
loopne
or
pop
addr16
into
sbb
mov
mov
mov
in
loope
js
mov
xchg
pop
xchg
pop
mov
fs
mov
cmpsl
lret
push
jne
je
aaa
shll
cli
shl
inc
mov
cltd
dec
xor
sbb
sbb
push
adc
mov
stc
cld
or
hlt
enter
mov
testl
rcrl
mov
pop
add
fnsave
shll
push
cmp
xchg
mov
aam
lods
mov
push
mov
or
mov
arpl
xlat
lcall
mov
pop
sub
xchg
adc
insb
fistpll
scas
rorb
jmp
cli
sub
mov
xor
arpl
and
clc
lock
push
and
es
mov
pop
aam
sub
jns
xchg
ja
inc
dec
jp,pn
add
sbb
rcrl
pop
sti
lahf
repnz
xor
clc
jg
fs
jne
notl
add
and
testb
mov
dec
es
jge
jg
xor
inc
pop
pop
cmp
loope
or
mov
xchg
fcomi
or
hlt
lret
and
out
int
mov
std
push
fcmovbe
add
lock
push
icebp
movsl
arpl
pushf
pop
cmp
shlb
mov
into
push
xor
dec
pusha
js
dec
sahf
adc
in
adc
jne
sbb
adc
inc
push
aas
xchg
inc
fwait
sub
inc
fldl
inc
pop
std
jg
pop
xchg
pusha
insl
mov
sbb
ja
int
adc
fildl
add
adc
mov
adc
adc
and
sub
inc
adc
ss
cmp
inc
mov
fists
cmp
das
loopne
xor
mov
pop
addr16
xchg
dec
scas
xor
es
adcb
pop
sub
lods
push
lods
mov
push
push
cmc
and
add
xor
add
lods
lods
mov
in
mov
pop
in
push
hlt
dec
imulb
sbb
cmp
adc
repnz
addr16
sbb
repnz
pop
and
jecxz
insl
out
adc
cmc
pop
loope
lcall
mov
push
fwait
adc
push
xor
and
mov
ljmp
add
cltd
loop
arpl
or
xchg
mov
pop
aas
pop
push
or
ds
cmp
test
adc
jecxz
jb
or
pop
test
outsl
les
sbb
dec
nop
arpl
xchg
sbb
addr16
push
sbb
std
mov
sub
icebp
jo
mov
jmp
jmp
xchg
inc
add
mov
cmp
sbb
mov
mov
sti
into
push
ret
test
xor
loope
lret
xchg
and
push
mov
sbb
pop
rcrb
test
repz
mov
inc
imul
cpuid
ss
sub
sub
xchg
cmc
rcrb
nop
adc
dec
jle
push
aaa
sbb
add
or
sbb
out
jo
mov
adc
pop
js
lahf
jecxz
hlt
imull
nop
data16
out
dec
or
sub
aas
pusha
test
mov
test
test
add
in
pop
iret
jp
jp
fisubrs
xchg
xchg
dec
mov
das
stos
ja
addb
lahf
add
push
iret
add
lret
aas
cmp
sahf
outsb
movsb
push
cmp
adc
xor
mov
xchg
into
out
ret
sahf
addl
shrl
daa
mov
mov
or
cmp
xor
mov
mov
fnstenv
add
xchg
shll
add
in
pop
imul
iret
dec
test
xchg
sarb
movsb
in
xchg
add
jo
movsb
inc
mov
in
push
leave
decb
fidivrl
or
loope
xchg
jae
in
push
jmp
pushf
in
mov
dec
cmp
cmp
repz
insl
mov
lods
jmp
leave
jae
add
lcall
jns
pusha
into
add
hlt
mov
jmp
fistpll
inc
lcall
cltd
mov
fldl2t
fnstenv
xchg
popa
jae
imul
fs
inc
adc
aam
add
cmp
sahf
mov
test
pop
xchg
test
jg
inc
imul
and
int3
or
fwait
cltd
pop
and
add
rcrb
fisttpl
cmp
xchg
dec
out
push
jp
mov
inc
lea
cmpsb
js
mov
lahf
mov
pop
sbb
mov
out
mov
bound
clc
push
mov
and
cltd
xor
loop
mov
cld
cmp
jno
shrb
fs
stos
outsl
pop
in
pop
xchg
andl
xchg
cmp
adc
test
cmp
insl
lahf
test
hlt
push
shlb
cmp
outsl
stc
fldcw
in
fadd
es
mov
mov
aad
push
fs
ret
negl
push
test
push
daa
fcmovb
mov
or
pop
incb
add
clc
cwtl
mov
call
sub
jb
scas
jno
push
and
jmp
jp
addl
pop
push
rorl
stos
mov
shll
and
add
fs
xor
call
add
or
jp
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
in
or
in
or
in
or
in
or
in
or
in
or
jmp
inc
sbb
loope
add
adc
jecxz
adc
xlat
push
add
or
jmp
or
jmp
or
call
or
jmp
or
ljmp
add
or
in
or
in
or
in
or
out
or
out
or
out
or
out
or
add
add
jne
add
add
jne
add
data16
add
add
ja
add
aaa
or
add
add
xor
add
xor
add
adc
add
cmp
add
sub
add
sub
add
cld
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
lods
or
add
add
add
mov
or
add
jae
add
jb
add
jle
or
testb
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
sbb
or
add
or
fisttpll
repz
or
int
mov
add
or
add
or
int
addl
or
add
or
add
or
int
xchg
add
or
add
or
add
or
or
fisttpll
roll
or
int
das
add
or
add
or
int
fisttpll
xchg
or
int
add
fsts
add
fsts
add
adc
push
rcll
add
adc
outsl
rcll
add
rcll
add
adc
dec
rcll
add
add
adc
out
adc
pop
rcll
add
rcll
add
fsts
add
fsts
add
adc
call
adc
sub
adc
test
adc
enter
dec
adc
or
adc
mov
adc
add
pop
or
int
or
dec
push
or
mov
push
or
lods
push
or
add
sub
push
or
add
push
or
mov
or
test
or
add
push
or
aad
or
xor
push
or
inc
push
or
lds
or
cmc
or
or
movsl
or
or
icebp
add
or
rorl
add
push
or
xchg
or
add
aad
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
aad
add
aad
add
aad
add
aad
cmp
or
add
fmull
mov
add
or
add
or
add
or
add
or
add
or
fmull
pop
add
or
add
or
add
or
fmull
bound
or
add
or
add
or
add
or
add
or
add
add
or
fmull
inc
add
or
int3
or
fmull
ret
or
add
or
add
or
add
or
push
rcll
add
adc
inc
rcll
add
adc
mov
adc
mov
adc
ret
add
xlat
adc
xor
adc
xor
adc
loop
adc
loop
adc
push
rcll
add
adc
out
adc
out
adc
outsb
add
rcll
add
adc
scas
adc
cmpsb
xlat
adc
rcll
add
adc
into
adc
xlat
adc
dec
rcll
add
adc
dec
rcll
add
adc
into
adc
xlat
adc
add
or
add
or
add
or
add
or
add
or
add
or
imul
add
or
add
add
or
add
or
stos
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
inc
add
aad
add
or
pop
add
aad
add
aad
add
add
aad
add
aad
add
or
stos
add
or
mov
add
aad
add
or
pop
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
or
rorb
adc
or
rorb
in
add
or
add
or
rorb
std
add
or
add
or
add
or
fisttpll
sub
or
add
or
add
or
int
jmp
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
jecxz
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
hlt
add
in
add
in
add
ljmp
add
add
rcl
add
out
add
not
add
jmp
add
jp
add
out
add
loope
add
loope
add
lock
adc
lock
adc
jecxz
adc
jecxz
adc
add
orl
or
orb
aaa
orb
pop
orb
pop
orb
clc
jb
or
jae
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jae
or
or
test
jae
or
jns
or
mov
or
jp
or
push
push
or
push
jp
or
push
dec
je
push
cmp
aad
cmc
or
jecxz
cmc
or
shll
or
jecxz
adc
fldt
push
shll
bswap
pop
adc
add
loop
adc
fisubrl
psrld
bswap
pop
adc
loop
adc
fisubl
psrld
bswap
push
adc
loop
adc
fisubl
psrld
bswap
push
adc
loop
adc
fisubl
psrld
adc
je
adc
push
pop
adc
pop
sbb
ret
pusha
sbb
jmp
sbb
and
sbb
and
sbb
adc
sbb
adc
sbb
add
adc
sbb
adc
sbb
adc
sbb
fcoml
repz
iret
adc
sbb
mov
adc
sbb
out
adc
push
fists
repnz
ficoms
push
into
adc
push
into
adc
push
mov
adc
push
out
adc
pop
out
adc
pop
ficoms
pop
rcll
fstpl
add
rcll
int
adc
sbb
loop
sbb
ficoml
sbb
lret
ffree
adc
sbb
repnz
sbb
loop
sbb
fistl
sbb
in
push
sbb
aam
push
sbb
add
adc
cld
jecxz
sbb
in
rcll
fadd
adc
aam
add
adc
add
adc
cld
jecxz
sbb
in
sysret
add
or
or
jo
or
xor
or
push
xor
sbb
adc
adc
or
sbb
adc
sbb
adc
sbb
adc
lcall
adc
call
pop
adc
or
adc
stc
pop
adc
pop
adc
adc
mov
adc
push
mov
push
push
mov
push
push
jnp
pop
pop
stos
adc
pop
mov
pop
pop
mov
pop
pop
aad
sbb
int
sbb
int
sbb
mov
pop
sbb
in
pop
sbb
in
or
fisttpll
sbb
fnstsw
sbb
jns
sbb
imul
sbb
sbb
add
in
or
sbb
jp
sbb
jp
sbb
push
sbb
pop
sbb
out
pop
sbb
out
or
sbb
or
sbb
ja
sbb
ja
sbb
sbb
mov
push
sbb
out
push
sbb
out
or
sbb
adc
sbb
adc
call
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
aad
dec
add
or
add
or
jmp
or
jmp
add
or
jmp
or
ljmp
add
or
loope
or
fst
or
stc
or
add
or
leave
or
or
test
or
imul
or
jmp
or
jmp
aad
add
fimull
add
rorb
add
fimuls
add
fimull
add
out
add
fimuls
add
add
testb
jmp
lods
inc
ljmp
aas
add
jb
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
pop
add
xor
push
add
or
xor
pop
or
add
pop
pop
add
pop
pop
add
or
cmp
mov
add
push
mov
add
push
add
mov
push
adc
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
push
add
aad
add
pop
add
aad
add
aad
add
imul
push
add
aad
add
aad
add
loope
rcl
add
aam
add
add
popa
or
shll
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
xchg
xchg
or
add
or
add
or
xchg
xchg
or
add
or
xchg
xchg
or
add
or
xchg
xchg
or
xchg
xchg
or
add
or
popa
add
jno
leave
call
pop
add
leave
in
push
add
leave
lcall
or
inc
add
fs
cmp
sbb
pop
fs
jmp
inc
leave
call
pop
add
inc
leave
incl
pop
add
inc
fs
jmp
or
mov
adc
add
lcall
fs
lcall
fs
decl
inc
leave
jmp
inc
leave
jmp
add
inc
add
add
or
add
add
inc
add
add
inc
add
and
sub
add
add
jle
add
jle
add
or
pusha
addb
add
inc
add
verw
inc
add
cltd
inc
add
jg
add
add
in
inc
add
or
add
fcompl
adc
push
jg
add
mov
adc
mov
pop
aad
popl
sub
push
aad
mov
sbb
mov
xchg
add
cwtl
add
aad
popl
repz
aad
add
aad
popl
lods
add
aad
popl
or
aad
popl
fiaddl
adc
add
aad
add
aad
popl
inc
add
aad
popl
faddl
adc
insb
xchg
inc
aad
add
aad
xchg
inc
aad
mov
or
add
or
add
or
add
or
adc
or
adc
or
adc
or
adc
or
adc
add
or
add
or
adc
or
xchg
or
add
or
xchg
or
xchg
xchg
or
xchg
or
xchg
xchg
or
rcl
sbb
lcall
std
call
inc
lret
inc
lret
flds
pushl
add
call
ljmp
jmp
flds
add
leave
lcall
fldenv
add
leave
pushl
push
add
leave
jmp
add
imul
add
inc
leave
jmp
adc
lds
jmp
cld
call
push
add
adc
jmp
push
add
cwtl
inc
add
pop
pop
add
cwtl
inc
add
test
add
repnz
push
add
test
scas
pop
add
cwtl
test
movsb
pop
das
add
test
js
pop
add
test
jmp
test
sahf
pop
lldt
test
xor
test
les
inc
add
and
xchg
inc
pop
or
cmp
add
xor
add
enter
aad
add
add
aad
test
cs
aad
xchg
pop
add
aad
xchg
xor
or
test
inc
aad
add
aad
test
call
test
mov
xor
adc
or
and
inc
aad
add
add
aad
test
popl
pop
aad
test
xchg
add
adc
aad
test
add
inc
add
mov
add
sub
inc
aad
and
rorl
add
add
or
xchg
or
xchg
or
add
or
xchg
or
adcl
or
add
or
adc
or
add
or
add
add
or
add
or
add
or
adcl
or
fisttps
or
adc
aad
lret
rcll
icebp
push
lret
rcll
or
rcll
add
or
arpl
or
decl
adc
leave
leave
fcom
adc
mov
lret
sub
jns
add
jl
adc
test
lret
adc
andl
adc
pop
adc
incl
cli
incl
push
leave
pushl
adc
std
repnz
inc
sbb
mov
adc
mov
orb
js
aas
add
aas
add
add
call
add
sub
aas
add
add
adc
aas
add
add
call
pop
add
out
add
in
add
or
add
or
add
or
aas
add
add
inc
in
add
in
add
or
aas
add
add
lods
in
add
rolb
or
jl
inc
aad
add
aad
jge
aad
add
add
aad
jl
aad
add
aad
jl
aad
add
aad
jl
aad
add
aad
jl
aad
add
jb
or
add
inc
aad
add
aad
jge
aad
add
aad
jl
aad
add
aad
jge
aad
add
aad
jge
aad
add
aad
jge
aad
add
aad
jge
aad
add
aad
jge
add
aad
inc
add
or
jge
or
jge
or
fisttpl
lea
or
or
add
or
add
or
xchg
or
add
or
add
or
add
or
jp
or
and
or
sub
or
add
or
jns
or
add
add
or
jns
or
jns
or
rorl
fnstsw
or
not
or
pushl
fmul
jmp
call
fsts
add
leave
call
test
lcall
leave
cli
xor
jmp
or
jne
leave
jmp
fsts
add
adc
pop
leave
cmp
or
incl
add
stc
cmp
pushl
sub
mov
sbb
incl
adc
fisttpll
lret
mov
or
insb
in
add
loopne
add
loope
add
or
aas
add
or
add
or
add
or
add
add
add
or
add
adc
and
add
or
push
loopne
add
or
add
or
hlt
in
add
adc
rcr
add
in
add
or
aas
add
mov
test
lods
add
aad
test
jge
adc
js
inc
aad
add
aad
test
aas
add
add
aad
test
mov
test
pop
add
aad
test
lds
pop
aad
test
and
aad
test
and
aad
test
std
add
aad
test
cs
aad
test
lcall
aad
add
aad
test
addl
inc
aad
aas
add
or
adc
or
add
adc
or
adc
or
adc
or
xchg
or
test
or
test
or
xchg
or
add
or
xchg
or
add
or
xchg
or
add
or
adc
add
or
mov
stc
decl
lret
rcll
xor
rcll
and
jb
or
sub
xor
sti
mov
shll
add
push
lret
rorl
add
lret
adc
inc
push
lret
rcll
add
push
lret
rorl
decl
idiv
pop
push
lret
push
add
add
jmp
push
lret
rcll
imul
add
leave
incl
mov
and
inc
add
add
jl
add
insb
or
add
add
add
add
add
add
add
cmp
add
fsubrs
es
sub
sub
cmp
add
add
ss
xor
add
cld
or
add
fs
arpl
gs
insl
outsl
insb
push
jno
push
je
add
loop
ss
xor
insl
cmp
repz
adc
jmp
aad
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
push
jb
jle
push
jbe
bound
push
push
pop
pop
push
inc
pop
dec
push
xor
push
xlat
or
rolb
icebp
cli
adc
push
iret
or
push
push
ljmp
out
jb
jmp
add
cmp
fidivs
pop
call
mov
or
cmp
mov
cmp
scas
xor
cmpsb
cli
pop
lcall
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
cld
or
add
or
add
or
add
or
add
add
lods
or
add
add
mov
or
add
add
jl
add
insb
or
add
add
add
add
add
add
add
cmp
add
add
sub
add
sub
add
add
sub
add
add
std
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jo
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
push
lret
test
mov
cmp
adc
mov
cmp
scas
jg
xchg
repz
add
xchg
decb
popf
add
add
aad
inc
call
push
test
xor
arpl
add
mov
push
mov
aad
pop
pop
xor
cwtl
ret
jbe
or
mov
in
lahf
xchg
cmp
out
adc
int3
sarb
or
or
cmc
dec
jo
enter
movsl
jb
test
jae
xchg
dec
xor
cmc
sbb
jmp
xor
mov
std
jae
nop
lahf
dec
aam
jne
das
je
xor
lods
jo
jge
ret
push
mov
push
cld
adc
mov
xchg
xor
pop
sbb
sbb
push
test
outsl
ret
xlat
xchg
mov
sbb
or
pusha
and
dec
enter
push
lds
push
es
add
lods
inc
je
mov
sbb
mov
xchg
jns
dec
dec
test
jne
or
es
inc
jp
dec
test
pop
shr
lret
xorl
jns
pop
pop
fdivs
sbb
add
or
int3
repnz
xor
and
add
cld
rol
add
xchg
pop
dec
xchg
call
out
inc
mov
add
cmpsl
lods
pop
add
or
mov
mov
add
mov
insb
repnz
lret
sbb
call
aas
into
mov
hlt
enter
add
jo
adc
xlat
sbb
adc
push
sbb
pushf
lods
fisubrl
ss
add
add
push
pop
test
int
rcrl
cmp
arpl
bswap
aad
mov
pop
cmp
dec
sbb
out
fs
leave
or
jmp
or
jmp
xor
in
push
ret
pop
and
jmp
not
pop
xchg
lcall
lea
jecxz
sbb
ret
or
loop
xor
add
ljmp
out
cmp
imul
mov
enter
sahf
pop
daa
push
out
lret
sub
or
in
in
xor
fnstenv
cmp
mov
jmp
dec
xchg
dec
sarl
cmp
mov
jmp
sub
jg
xor
lock
mov
repnz
xor
icebp
stos
xor
repnz
test
jno
pop
add
out
imul
jns
mov
inc
jg
push
xor
icebp
ret
xor
icebp
lret
xor
icebp
add
mov
int3
jecxz
dec
sub
mov
mov
sar
stos
hlt
fsubl
cmc
inc
cmp
icebp
xchg
cmp
cmp
cli
out
orb
loopne
add
aad
jns
pop
outsl
pusha
mov
sarl
push
mov
pop
push
rorb
test
add
bound
add
push
pop
scas
mov
vpcmpeqd
cmp
dec
scas
or
mov
ret
shll
test
pop
fwait
mov
lds
fcmovne
addr16
lods
mov
inc
testb
push
mov
mov
cmpl
fcoml
sbb
dec
sbb
or
sbb
xchg
orb
push
stos
fistl
mov
es
fdivrs
and
popa
and
adc
xchg
pop
add
xchg
or
sbb
call
pop
btc
cld
xchg
jnp
adc
jno
push
adc
sbb
adc
sbb
ret
jno
push
inc
dec
aaa
add
add
fldenv
xor
sbb
loop
divl
shl
mov
pop
in
xor
xor
dec
repz
lret
aad
push
sbb
adc
mov
cmpsb
loope
aaa
add
in
aaa
into
xor
inc
mov
add
jae
dec
cld
repnz
mov
or
dec
es
mov
cmp
mov
cmc
mov
jns
or
push
aas
jmp
rorl
lcall
pushf
out
push
sbb
jb
add
mov
cmp
push
stc
sub
add
xor
cli
and
mov
call
imul
arpl
and
pop
jno
jns
fucomip
add
cmp
ljmp
outsl
jo
sarl
mov
xor
push
jp
mov
and
and
test
add
add
mov
lret
cmp
mov
jge
rcll
xor
and
in
dec
xlat
and
imul
or
test
mov
int3
push
sti
inc
dec
jl
fs
neg
sub
inc
ja
push
test
sub
rcl
lret
lret
add
bound
aad
add
aad
xchg
adc
mov
cmp
inc
imul
outsl
adc
subl
adc
and
push
or
push
and
push
inc
sbb
xchg
inc
xchg
daa
xchg
xchg
lret
mov
xor
in
inc
mov
adc
push
sbb
pop
sbb
mov
lock
aam
mov
aad
pop
dec
and
dec
orl
stos
cmp
jbe
cs
out
insl
jae
or
sbb
ja
xor
mov
add
xor
out
cmpsb
repz
stos
inc
mov
add
or
jmp
xlat
or
jmp
jnp
pop
icebp
filds
or
sar
push
stc
addr16
adc
imul
loope
lock
inc
in
push
leave
imull
and
daa
adc
add
and
or
sbb
adc
out
adc
std
jecxz
aas
test
sbb
xchg
fildll
repz
pop
fdivs
or
jbe
push
xor
push
push
gs
imul
ss
add
jne
adc
jns
enter
in
xchg
xchg
jle
mov
add
orb
loopne
xchg
xchg
mov
cltd
fwait
test
popf
lahf
mov
cmpsb
cmpsl
inc
lahf
stos
stos
pop
mov
mov
inc
jnp
mov
outsl
mov
mov
mov
mov
int
aad
xor
stos
sub
fisubs
push
popa
out
cmp
ds
xor
ss
testb
pop
incb
data16
ficompl
or
pop
or
rclb
adc
push
lock
out
cs
sbb
testb
cli
cli
sub
sub
repnz
out
adc
lret
cmp
dec
sbb
ret
popa
jbe
loopne
jp
xchg
in
jl
mov
jo
cwtl
aam
add
rorb
sbb
scas
pushf
mov
adc
movsb
rcrb
xor
sbb
sub
adc
xor
sub
cmp
add
push
jg
xorl
jg
xchg
jns
inc
ja
outsl
imul
outsl
outsl
pop
ja
imul
cmpsl
inc
lahf
jnp
xchg
stos
jg
lea
addr16
xchg
popl
add
sbbl
xchg
inc
ret
and
sahf
aas
lret
sub
cmpsb
aaa
shll
push
xor
sbb
ss
out
aas
pusha
jmp
cmp
pop
pop
repz
push
test
sub
loopne
add
or
jmp
or
jmp
or
jmp
add
or
jmp
dec
add
or
or
jmp
or
add
add
add
in
add
incl
cld
add
add
in
add
add
mov
or
add
mov
pop
lods
or
add
jl
add
jl
add
add
insb
or
add
jl
add
jl
add
inc
pop
insb
or
add
cmp
add
sub
add
sub
add
cmp
incl
mov
incb
aad
add
aad
add
aad
add
aad
add
aad
add
aad
push
ljmp
lcall
add
aad
add
aad
add
aad
add
add
aad
add
aad
push
ljmp
addr16
lcall
xor
add
xor
add
xor
add
xor
add
xor
add
js
add
add
pop
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
aad
jmp
add
mov
add
or
add
or
add
or
add
or
add
aad
jmp
add
or
add
or
add
or
add
or
add
or
add
or
add
or
aad
imul
and
in
addb
aad
jmp
in
int3
sbb
cmc
les
sti
cmc
les
sti
cmc
in
sti
cmc
in
fcomi
in
imul
add
and
sti
sub
adc
and
adc
or
adc
add
adc
or
subb
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cld
or
add
or
add
or
add
or
add
popf
inc
inc
xchg
into
add
mov
inc
inc
sti
sbb
dec
popa
cs
or
dec
ss
sub
add
imull
in
in
test
cmp
or
scas
outsb
dec
cld
cmpsb
lea
sub
addr16
pop
aad
repz
mov
pop
pop
lret
sub
fldt
inc
outsl
mov
add
jno
xor
jns
in
cltd
mov
in
pop
pop
fcom
in
mov
add
add
add
es
inc
les
clc
mov
mulb
data16
dec
sahf
imul
arpl
sub
cmp
je
push
aaa
pop
sbb
ss
cmp
cs
jp
ret
scas
data16
xchg
cmp
ficoml
jg
pop
ljmp
dec
cld
or
jecxz
imul
xor
cli
call
aaa
mov
push
push
gs
addr16
enter
push
mov
lock
mov
add
or
aad
int3
add
or
add
or
std
lcall
add
or
std
addb
aad
mov
imul
or
fwait
rorl
add
or
int3
or
lcall
xlat
or
or
jge
or
mov
inc
decl
or
jmp
outsb
enter
enter
or
mov
lcall
outsl
enter
add
lock
or
call
mov
add
or
xchg
or
inc
sahf
add
fcmovnbe
or
add
or
gs
add
stc
or
icebp
or
add
add
add
test
add
enter
popa
push
add
cmp
add
cmp
pop
add
sub
pop
add
aas
pop
add
sub
or
add
pop
add
incb
add
out
or
out
pop
add
pop
add
incb
add
clc
pop
add
call
or
add
or
add
or
add
add
or
push
scas
or
add
or
add
xor
add
xor
xor
add
xor
add
xor
add
jns
add
cmp
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
add
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
add
aad
dec
inc
aad
mov
dec
adc
or
add
or
add
or
add
or
aad
mov
add
or
add
or
or
aad
lahf
add
or
add
or
xchg
or
add
or
add
aad
repz
dec
add
or
add
or
or
wbinvd
push
add
or
inc
add
movsl
add
mov
add
bound
jp
lret
add
add
add
loop
pop
inc
add
test
push
fiadds
push
movsb
add
ret
add
pop
add
mov
add
aad
sub
or
sub
add
daa
pop
add
or
add
invlpg
sbb
cmp
lret
movb
flds
add
or
cmc
or
or
lret
add
add
add
xchg
or
add
or
add
or
add
add
inc
add
dec
add
push
add
add
outsl
add
or
jnp
flds
pop
add
add
and
push
add
add
push
add
xor
pop
add
add
and
add
add
pop
pop
add
add
aam
add
aam
add
aam
add
sbb
or
add
add
aam
add
aam
add
aam
add
aam
add
nop
add
aam
add
lds
sub
int3
add
aam
add
aam
add
aam
add
incl
push
aam
add
aam
add
push
aam
add
aam
add
test
dec
aam
add
repnz
aam
add
aam
xor
add
or
add
or
add
or
add
or
add
or
sub
or
add
or
add
or
add
or
add
or
scas
or
add
add
jmp
dec
fdivrp
dec
call
stc
dec
call
stc
inc
decl
stc
mov
add
test
xor
stc
jg
cmp
xchg
pushl
stc
xchg
ljmp
xor
xor
and
dec
ret
pop
mov
imul
cmp
arpl
xor
jno
lahf
aad
xor
aad
xor
xor
aad
xor
jb
insb
aad
xor
jle
pop
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
cmpsb
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
add
or
xor
or
xor
or
xor
out
dec
cmp
xor
xor
cmp
xor
cmp
xor
out
xor
repnz
cmp
xor
cmp
push
xchg
cmp
push
insl
cmp
push
outsb
cmp
push
aas
cmp
push
mov
cmp
aad
std
and
sar
std
daa
add
std
sub
out
sub
jmp
sub
std
sub
in
sub
lock
sub
rcll
das
fistl
xor
adc
xor
adc
xor
jbe
xor
jge
xor
fstpt
aaa
shrl
cmp
imul
cmp
inc
or
orl
inc
roll
or
or
nop
or
add
xchg
inc
fisttpl
push
or
inc
or
andps
nop
cmovg
mov
inc
or
adc
or
adc
or
adc
pop
push
dec
or
push
dec
or
inc
or
push
dec
or
push
inc
or
push
mov
sub
xchg
or
push
orl
push
xchg
or
or
test
add
fs
push
or
ljmp
or
xor
cmp
push
add
fmull
add
int3
adc
int3
add
faddl
add
faddl
add
int3
add
jge
add
add
faddl
add
int3
push
add
int3
movl
sub
clc
add
int3
iret
add
fdivr
add
add
fmul
add
iret
int3
add
fcomip
add
iret
repnz
hlt
add
iret
testb
ffreep
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
add
add
add
mov
add
fiaddl
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
add
add
add
xchg
or
rcll
or
sarl
and
mov
or
add
shrl
or
rcr
or
fxch
or
shl
or
shl
or
fldpi
or
rol
pop
xchg
rolb
mov
pop
mov
int
stos
ret
pop
mov
lret
cltd
pop
stos
xchg
pop
mov
test
mov
adc
mov
lods
scas
push
scas
mov
pop
pop
wbinvd
push
pop
add
inc
or
sbb
push
pop
adc
inc
pop
push
or
inc
or
pop
sbb
test
or
pop
or
pop
inc
or
pop
dec
or
pop
inc
or
pop
push
and
insl
or
pop
pop
or
pop
pop
or
pop
dec
or
pop
inc
or
pop
cmp
cs
jb
sbb
xor
or
push
cmp
mov
or
push
xor
mov
nop
shll
enter
mov
ja
mov
js
sarl
test
jle
sarl
xchg
jl
adc
jb
push
shrl
push
inc
shll
cmp
jbe
push
shll
dec
cmp
dec
add
fisttpl
sbb
inc
add
fildl
sbb
add
fisttpl
rorb
neg
dec
add
rolb
lock
mov
jp
mov
add
and
add
and
pop
push
add
push
push
mov
and
add
popf
and
add
test
mov
push
and
pusha
and
and
sub
add
lods
add
sbb
and
add
cmp
in
inc
and
add
shlb
jecxz
popa
and
add
andb
add
sub
xor
sub
aad
or
mov
or
mov
or
idivl
xchg
aam
or
hlt
insl
or
hlt
jnp
and
orb
lock
jle
or
mov
or
mov
leave
or
mov
xlat
or
clc
mov
or
lock
pop
or
notb
or
clc
adc
mov
mov
or
sub
or
or
or
xlat
out
push
jmp
mov
fldl2t
test
add
shr
mov
fucompp
xchg
int
dec
push
fsubr
push
push
fucomip
aas
push
leave
jmp
push
push
mov
dec
push
mov
inc
push
mov
ljmp
sub
push
mov
xchg
push
sub
push
sub
jmp
push
pop
jmp
push
shr
popa
push
jmp
push
push
repz
out
in
sub
cs
push
sub
ljmp
add
ror
and
lret
iret
and
fcomps
movsl
rorb
pushf
enter
loopne
and
cltd
rclb
and
loopne
and
rorb
and
loopne
pop
mov
rcrb
enter
loopne
and
rcrb
dec
enter
loopne
and
dec
sarb
inc
add
enter
loopne
es
fsubr
pop
push
shlb
add
jnp
add
cld
mov
xlat
cld
sbb
mov
es
add
daa
jge
and
mov
and
popl
adc
addb
daa
addl
insl
es
add
inc
add
inc
add
es
add
and
lcall
and
add
sbb
add
cmp
and
es
cld
scas
add
cld
movsb
and
cld
sub
add
or
repnz
pop
add
ljmp
mov
or
mov
or
mov
push
or
xorl
or
mov
or
mull
pop
cmc
inc
pop
rcr
inc
pop
rcl
inc
pop
rcr
addl
add
rolb
aad
xchg
fdivrs
xlat
rcrb
pop
fnop
mov
fcmovu
fildl
fcmovnbe
mov
push
fst
out
push
roll
repnz
loopne
icebp
push
loope
lock
loop
or
pop
mov
adc
pop
mov
pop
pop
jnp
incb
jb
add
insl
pop
lock
insb
pop
repz
jg
mov
aam
mov
add
xlat
sti
mov
sti
test
fsincos
mov
sar
xchg
lea
sar
orb
sti
dec
or
sti
push
or
sti
inc
or
sti
cmp
loope
push
or
sti
dec
or
sti
inc
or
sti
cmp
or
sti
lcall
sti
xchg
or
sti
jnp
loopne
jbe
jmp
jge
adc
jno
adc
pusha
fcoml
push
arpl
femms
push
add
int3
adc
dec
fmull
push
aas
int3
or
ss
or
sub
jmp
or
stos
int
or
lods
fucom
or
scas
int
or
mov
loop
mov
fisttps
popf
fstp
or
scas
int
or
cltd
or
cmp
testl
cmc
or
push
ljmp
push
les
cmp
adc
add
push
loop
ds
ret
add
push
faddl
inc
push
int
inc
push
into
add
filds
inc
push
cwtl
add
add
mov
inc
push
sbb
inc
push
and
dec
push
and
add
pop
add
inc
add
add
cmp
push
push
insl
add
add
mov
push
push
jg
push
push
js
push
push
imul
push
push
mov
push
push
aad
push
pop
jecxz
push
pop
fildl
push
xor
push
xor
test
xor
mov
add
aaa
enter
flds
cmp
movl
cmp
movsb
addl
add
add
add
add
add
add
add
in
add
in
add
in
add
in
add
fadds
leave
add
movb
testl
movsb
or
mov
xchg
add
and
fldt
add
push
or
es
sub
and
sbb
xor
and
or
mov
add
scas
add
fisubl
add
ficompl
add
sti
mov
add
mov
add
sti
lahf
add
sti
mov
xchg
xlat
js
xlat
pop
adc
adc
xlat
pop
adc
xlat
pop
adc
pop
adc
pop
adc
pop
adc
add
pusha
adc
popa
adc
bound
pop
xlat
arpl
push
xlat
adc
xlat
adc
xlat
adc
xlat
adc
xlat
push
adc
aam
adc
aam
adc
aam
xor
aam
xor
aam
xor
aam
xor
xchg
xor
aam
adc
push
or
adc
stc
adc
test
ljmp
add
call
push
js
pop
sub
and
mov
and
mov
and
sub
and
cmpsl
and
sub
and
jmp
add
or
add
ljmp
or
add
decl
or
add
add
lcall
or
add
sbb
add
sbb
add
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
add
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
xor
aad
add
aad
adc
aad
ljmp
or
add
or
aad
lock
or
or
add
or
aad
flds
aad
jnp
aad
fadds
aad
pop
xor
or
xor
or
xor
or
add
add
or
aad
les
aad
pop
xor
or
add
or
aad
movb
or
add
or
aad
or
or
add
or
push
cli
or
or
or
test
or
in
or
ja
or
mov
stos
or
iret
or
inc
mov
or
xchg
stos
or
rcl
or
test
add
or
mov
ljmp
xchg
or
mov
ljmp
pop
mov
or
cmp
or
cmp
or
lcall
add
add
mov
or
lcall
repz
fisttpl
incl
add
or
inc
or
faddl
add
xor
ljmp
repz
lcall
repz
ljmp
add
repz
ljmp
add
out
repz
ljmp
add
mov
pop
add
test
push
add
mov
push
add
sub
pushl
push
add
add
aad
sub
add
sub
hlt
add
aad
sub
add
insb
sub
add
pop
sub
add
push
add
mov
add
fldt
aad
add
aad
sub
aad
add
aad
sub
add
sub
aad
add
aad
sub
aad
add
aad
sub
aad
add
aad
sub
stos
add
aad
sub
add
or
sub
or
sub
or
sub
or
sub
or
sub
or
or
add
or
add
or
sub
aad
jmp
aad
sub
aad
call
add
or
mov
add
or
mov
and
add
or
add
or
add
or
add
or
add
or
add
or
jmp
or
out
or
mov
mov
lcall
incl
push
repz
outsb
mov
add
adc
jmp
add
out
xor
or
sub
lods
sbb
dec
or
je
cmpsb
cmp
add
or
and
stos
outsl
scas
insl
les
push
stos
bound
add
out
arpl
cmp
mov
data16
add
push
push
add
add
insb
or
add
push
dec
add
push
push
add
add
add
sahf
push
imul
add
push
jb
repnz
ja
outsl
loope
ljmp
jmp
add
or
lret
add
pop
jae
testb
mov
andl
mov
outsl
jae
cmpsb
inc
ja,pn
pop
sub
insb
push
inc
bound
test
jp
scas
aas
aad
scas
aas
aad
add
xchg
push
add
aad
add
add
add
aad
add
aad
lds
in
inc
jmp
mov
push
mov
fxch
pusha
ja
mov
push
jae
mov
and
inc
stos
js
add
xor
std
out
xor
add
add
aad
add
aad
fbld
icebp
insl
mov
or
pushf
mov
add
mov
int3
fbstp
fisubrs
mov
or
pushf
mov
into
cmp
movsb
mov
or
mul
add
mov
and
mov
movsl
mov
inc
mov
jle
push
cltd
jb
call
add
or
or
add
or
add
or
add
or
add
lds
add
xor
fiadds
sub
mov
add
or
add
or
int3
movsb
inc
or
out
sbb
call
mov
decl
aaa
stos
push
test
ljmp
push
rolb
je
jae
rorl
add
push
rolb
jne
push
das
push
rolb
inc
cwtl
sub
stos
push
add
push
rolb
es
jno
cmp
sub
mov
mov
pop
sbb
xlat
sub
jmp
dec
pop
inc
and
add
jl
add
jl
add
insb
or
add
add
call
or
add
or
add
add
and
add
add
add
xor
aam
js
sub
add
add
inc
add
imul
fadds
push
push
fsubs
leave
push
jnp
push
push
aad
mov
cmp
aad
lahf
push
xor
mov
pusha
add
pop
rorl
les
arpl
insb
pushf
jb
mov
mov
add
jmp
push
mov
mov
bound
lcall
add
jecxz
push
mov
xchg
bound
xor
add
jecxz
push
cmp
xchg
pusha
xor
int3
iret
xor
ret
add
or
add
lock
push
cwtl
jnp
add
lret
sbb
mov
rcll
rcrb
add
or
scas
push
sbb
or
or
add
or
stc
rorl
jmp
neg
or
add
or
stos
add
jecxz
cli
sbb
pusha
xchg
or
add
or
add
add
add
imul
mov
movsl
call
shrb
fisttpll
dec
lods
fs
fldz
mov
or
lret
out
lcall
out
jns
or
je
scas
jno
push
movsl
ljmp
imul
pop
sbbb
cmp
push
ljmp
jae
inc
xchg
inc
pop
pop
mov
fs
dec
lret
imul
movsb
call
jno
or
bound
sahf
and
test
bound
lahf
sbbb
loope
and
xchg
pop
jae
int3
popa
decl
or
add
bound
sub
push
stc
or
push
push
and
cmp
add
add
mov
add
or
jae
fimuls
outsl
add
or
add
in
pop
pop
dec
fsubl
push
scas
pop
push
outsl
aad
scas
fs
and
add
repnz
xchg
push
mov
cmp
add
aad
mov
and
push
mov
pop
inc
movsb
arpl
push
mov
or
jae
and
add
or
add
add
aad
add
aad
add
dec
add
inc
add
and
add
dec
add
aad
add
aad
stos
insl
mov
fwait
sub
sub
add
and
add
in
pop
aad
add
aad
add
and
or
add
or
ljmp
sub
or
add
or
add
add
or
add
or
add
or
add
or
add
or
push
or
add
or
add
or
add
or
mov
dec
add
or
mov
inc
add
or
add
or
add
or
xchg
add
movsl
incl
mov
incl
add
cmpsb
lcall
test
stc
lcall
fdivr
mov
rcl
call
xchg
mov
inc
movsb
mov
mov
add
ljmp
and
fwait
fs
adc
arpl
addr16
inc
jmp
add
dec
enter
cltd
add
popa
pushl
outsb
jae
mov
ja
arpl
js
add
jno
jne
ja
dec
loop
outsb
jb
outsb
jae
ret
dec
jb
addr16
or
add
imul
jno
test
popa
cwtl
push
jae
dec
jl
jmp
jno
arpl
inc
pusha
fs
pushl
insb
jno
add
pop
jl
insb
inc
inc
pusha
outsb
pop
fs
arpl
sub
add
decl
push
add
roll
inc
aad
add
out
add
mov
add
iret
add
add
je
add
or
aad
add
aad
add
inc
add
hlt
add
add
add
dec
add
xor
push
aad
add
add
dec
add
inc
add
jl
push
aad
add
addb
aad
add
insb
add
outsl
add
add
aad
add
xchg
add
or
rorl
add
or
or
mov
sbb
or
add
or
xchg
shl
xchg
test
stc
inc
add
xchg
cli
loopne
addr16
adc
lret
xlat
ret
fdivrs
adc
shrl
adc
stos
and
mov
xchg
mov
rcll
adc
add
pop
ljmp
pop
jecxz
iret
jmp
repnz
jns
cwtl
push
push
ja
outsl
and
or
sub
push
enter
clc
add
add
or
push
mov
int3
cld
gs
adc
or
ds
cmp
movsb
mov
std
imul
push
stc
mov
mov
dec
inc
adc
adc
sbb
xchg
imul
sahf
mov
std
out
popf
cmp
arpl
or
sahf
mov
or
dec
dec
rclb
add
mov
mov
es
cmp
aam
dec
add
add
dec
add
add
cmp
testl
add
add
gs
add
imul
insb
or
add
or
add
or
add
cmp
aam
dec
add
add
cmp
aas
or
add
or
add
cmp
dec
aad
add
outsl
add
push
cmp
pop
add
aad
add
stc
add
aad
pop
inc
aad
add
aad
add
aad
test
insl
jb
test
outsb
addr16
stos
bound
xchg
jno
incb
add
ljmp
sbb
mov
aad
movsb
jno
push
xchg
pop
add
cmp
jecxz
xor
xchg
cmp
add
aad
mov
xor
push
es
push
jno
inc
pop
add
xchg
lahf
icebp
jmp
lcall
test
cmpsl
mov
call
mov
scas
cltd
scas
test
sub
mov
pop
stos
cmpsb
movsb
pop
lahf
jbe
cmp
ja
dec
mov
jns
push
mov
sbb
aad
and
leave
sub
push
scas
pop
lret
sbb
adc
leave
mov
mov
test
leave
test
lcall
pusha
lcall
lds
mov
stos
sbb
mov
add
jg
pop
dec
jns
jno
add
js
fs
xor
je
cmp
jb
arpl
arpl
pushl
and
pop
xor
mov
and
mov
mov
incl
outsl
xchg
pusha
std
jg
pop
lret
jno
jns
pushf
insl
add
insl
je
popa
outsb
mov
and
jmp
inc
pop
add
xor
inc
inc
pop
jg
dec
push
jns
push
pop
jo
dec
inc
dec
inc
incl
pop
arpl
pop
pusha
jb
push
push
popa
mov
add
push
inc
mov
inc
pop
mov
inc
inc
stc
push
pop
push
add
dec
lods
or
add
dec
pop
arpl
data16
lahf
jl
jb
push
jo
cmp
clc
inc
add
aad
mov
and
pop
adc
inc
push
ja
inc
aad
movsl
jne
jle
arpl
lea
add
pop
mov
lcall
inc
mov
mov
lcall
add
leave
movsl
jne
mov
arpl
jb
shrb
aad
mov
jp
lds
in
int3
inc
add
sub
mov
daa
ljmp
sbb
add
aad
shlb
ss
aad
mov
sbb
movsb
int3
push
stos
cwtl
les
ret
aad
nop
movsl
loopne
test
xchg
call
mov
stos
lahf
lds
stos
cmp
test
inc
cmpsb
mov
push
movsl
add
xchg
and
enter
stos
xor
xchg
add
ss
imul
inc
mov
pop
mov
mov
pusha
mov
xor
jae
cmp
pop
mov
mov
lods
pop
pop
movsb
xchg
mov
sahf
mov
call
add
outsl
cmpsb
pop
mov
inc
xchg
pusha
pop
push
xchg
pop
dec
jo
fs
inc
lds
sbb
sbb
or
adc
xchg
pusha
or
test
leave
pop
outsb
jb
mov
or
inc
pop
cmc
iret
push
inc
push
enter
into
dec
add
fwait
arpl
mov
add
mov
test
and
imul
jb
pusha
in
popa
outsl
lret
arpl
mov
outsb
push
in
popa
insb
pop
lcall
lea
pop
mov
rcrl
lret
lret
dec
inc
scas
roll
or
insl
and
scas
insb
jns
movsl
arpl
push
test
jae
add
jb
push
mov
add
daa
adc
fs
movsl
jae
add
aad
mov
and
mov
and
rcll
xchg
jno
xchg
lahf
pop
mov
shlb
pop
rcrb
jae
mov
jae
pop
test
inc
mov
ret
es
inc
lcall
add
ds
add
mov
push
mov
inc
imul
mov
xor
or
aaa
jae
test
or
lds
jne
xchg
pop
imul
mov
icebp
or
mov
int
mov
jb
test
mov
mov
lds
add
sub
stos
jno
mov
fwait
push
lahf
xorb
dec
outsb
and
jae
or
insb
imul
imul
mov
sub
push
sti
inc
addr16
inc
jbe
int3
inc
insl
add
outsb
insl
and
xor
push
mov
dec
insl
and
aaa
jb
lret
aaa
imul
imul
add
sbb
mov
gs
jl
test
add
insl
and
addr16
pop
inc
insb
imul
push
sahf
stos
popa
imul
pop
imul
lret
pop
push
fidivrs
bound
test
arpl
shll
gs
mov
push
add
sahf
test
imul
pop
imul
iret
pop
pushw
test
insl
dec
stos
jb
push
stos
pop
jne
movsl
push
arpl
push
pop
scas
imul
pop
lods
jmp
mov
pop
jne
pusha
mov
fs
sahf
pop
fs
xchg
jae
dec
sahf
data16
movsl
imul
bound
shll
test
aad
mov
adc
ret
push
test
sbb
xchg
jae
ficompl
mov
pushf
pop
add
iret
mov
adc
arpl
mov
rcrb
xchg
addr16
lcall
lea
pop
mov
movsl
push
jne
dec
mov
js
inc
mov
jmp
mov
fs
xorl
addr16
test
cmp
or
cltd
aaa
addr16
daa
or
mov
arpl
mov
push
inc
mov
aad
mov
daa
pop
stos
mov
pop
mov
mov
sbb
or
lods
push
add
xchg
push
jmp
enter
dec
movsb
add
or
stos
pop
dec
inc
mov
or
sub
dec
inc
cmp
cs
sbb
push
dec
sbb
dec
dec
sub
cmp
push
inc
and
or
cmp
push
inc
jmp
pusha
pop
inc
jmp
dec
inc
dec
lods
or
movsl
inc
inc
dec
jmp
xor
jmp
add
or
mov
push
dec
scas
mov
stos
adcl
dec
mov
aas
inc
sub
add
jo
dec
inc
ror
lcall
test
imul
loop
outsl
lcall
outsb
mov
sahf
insb
je
lahf
jb
mov
movsl
jmp
add
test
arpl
or
gs
test
jae
xchg
arpl
lods
push
jb
lcall
insl
jae
lea
add
ret
add
sahf
add
xchg
add
test
imul
push
add
aad
add
aad
add
aad
add
dec
add
aad
add
aad
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
xor
lods
cmp
add
rorb
idivb
cwtl
dec
icebp
enter
rol
insl
leave
or
nop
stos
or
call
roll
std
fisttpll
loope
rcrb
fcmovu
cmp
rolb
add
aaa
fdivrs
mul
loop
push
fnstsw
std
add
or
ss
leave
mov
mov
lret
mov
aad
dec
popa
ja
inc
dec
mov
mov
add
or
add
fldcw
add
or
movsb
shll
adc
lock
mov
push
fistpl
push
dec
mov
add
sbb
mov
or
or
aad
sub
into
ror
icebp
repz
std
int
fmulp
leave
sarb
mov
lret
lret
fucomip
sti
mov
stos
loope
cmpsb
test
stos
dec
out
loope
mov
mov
add
fisubs
mov
call
add
xchg
cmp
or
add
je
mov
xchg
mov
jnp
ds
imul
inc
dec
lret
push
test
fs
stos
dec
inc
test
cmp
mov
push
outsb
mov
cwtl
inc
push
mov
aas
inc
in
or
add
cmpsb
jb
lods
mov
lods
or
add
add
aad
imul
popa
jmp
iret
popa
add
cs
shrl
aad
in
aad
loopne
mov
sbb
sub
lods
mov
scas
mov
aas
mov
mov
dec
fisubs
push
mov
pop
imul
dec
fwait
dec
nop
pop
nop
pusha
lods
xor
pop
xchg
push
mov
arpl
cmp
pop
pop
cmpsb
push
dec
add
aad
rclb
ror
jo
out
jno
pop
mov
or
mov
sbb
or
xchg
pop
mov
stc
adc
punpckldq
cld
lds
stos
std
out
outsl
out
sti
mov
sbb
fcom
sarb
sub
or
inc
xchg
pop
sub
adcl
push
inc
push
les
or
hlt
fstps
movl
push
decl
add
or
roll
into
testb
dec
push
or
or
bound
mov
xor
mov
pushf
push
shll
pop
out
mov
dec
add
add
jmp
je
sub
add
cs
sub
cmp
ss
pop
inc
sub
out
inc
adc
or
push
popf
mov
movsl
lods
mov
test
mov
sarb
mov
mov
pop
inc
fcos
mov
fisubl
fcmovnu
mov
lcall
add
cmp
push
add
and
push
mov
mov
dec
mov
pop
sbb
rol
or
sar
cmp
shl
inc
fmulp
imulb
ret
sub
add
insl
xchg
popf
lods
outsl
sbbl
add
mov
je
orb
pop
pushf
lahf
gs
add
add
ret
add
std
incl
aam
push
sbb
aad
sti
adc
adc
scas
push
pop
push
ret
push
sub
lcall
lcall
sub
mov
sbb
add
aad
push
mov
subl
jl
dec
add
dec
popa
mov
insb
dec
mov
aaa
pop
test
mov
dec
add
aad
fdivl
add
mov
shlb
mov
xor
mov
ja
test
xchg
aas
jb
mov
mov
or
adc
or
or
sbb
add
aad
pushf
xchg
fiaddl
loopne
call
pop
orl
dec
push
dec
pop
add
push
movsb
dec
jmp
and
add
sub
cmp
aas
fildl
pushl
jmp
outsl
xchg
addr16
jg
ja
cmpb
aad
jne
inc
xchg
insl
sahf
push
mov
test
mov
leave
repz
lods
out
jmp
inc
cmpl
test
xchg
popf
stos
aas
cmp
idiv
movntps
add
sbb
mov
or
xchg
and
mov
xchg
idiv
mov
shll
jo
fwait
or
mov
jle
scas
outsl
addr16
or
and
sub
sbb
cmp
mov
xor
pushl
sahf
xor
push
or
mov
pop
add
add
dec
inc
add
cmp
pop
mov
pop
add
sahf
cmp
and
add
xchg
xor
test
add
icebp
scas
stos
mov
cmp
add
test
js
bound
add
push
inc
jge
inc
push
jp
jne
inc
gs
mov
insl
push
insb
push
push
xor
cmp
push
pop
push
add
aad
insl
push
mov
push
dec
mov
add
aad
adc
fistpl
adc
push
sbb
adc
loope
add
jmp
and
mov
into
and
mov
pop
sub
shlb
or
and
and
mov
call
push
sbb
fmuls
aad
mov
je
mov
add
add
jp
test
aad
mov
add
mov
jmp
and
sbb
adc
adc
add
adc
add
or
aad
loop
std
and
sbb
or
push
aad
leave
es
jmp
pop
out
push
jmp
mov
aad
sbb
and
adc
mov
or
pop
rorb
or
jmp
or
push
in
test
jne
push
add
or
in
mov
std
or
push
pop
repnz
add
in
lods
mov
and
decb
xchg
repz
popf
pusha
adcl
mov
rolb
mov
out
dec
add
lods
call
loop
sub
mov
add
mov
or
jg
xchg
jmp
inc
clc
repz
inc
jmp
aas
ds
and
out
and
sti
lock
and
out
add
repnz
rcl
xchg
in
rol
rol
repz
lret
fildl
stos
icebp
out
icebp
add
lahf
or
imul
repnz
inc
add
addr16
mov
push
add
aaa
jmp
add
loope
inc
push
mov
dec
inc
jl
add
or
jecxz
or
std
imulb
add
lret
fcomip
xlat
hlt
in
fld
hlt
loopne
loopne
shr
aad
fsubr
sub
clc
out
aad
or
in
add
add
fxch
or
mov
cmp
fidivs
xor
frstor
sub
in
or
add
lods
orl
mov
leave
xlat
jl
add
aad
sub
mov
hlt
dec
push
and
add
aad
pop
inc
adc
add
aad
xor
cmpsl
adc
ret
mov
sub
movb
add
aad
pusha
insl
test
mov
or
and
and
mov
inc
or
incb
out
hlt
sti
cli
int
sbb
shll
les
or
add
or
rcrb
or
insl
mov
clc
daa
mov
aad
mov
or
out
add
sub
pusha
cli
push
out
ss
xor
mov
xor
xor
or
pop
lea
jns
xlat
int3
or
iret
xor
fld
imul
orb
adc
orl
lock
mov
scas
rcl
cwtl
sahf
out
pop
dec
xchg
jl
add
mov
sbb
xchg
aas
inc
mov
cmp
mov
jmp
inc
mov
dec
mov
cld
rolb
jecxz
add
add
add
cltd
out
cli
sub
add
rol
int
xchg
xlat
add
cmpsl
mov
sahf
movsb
mov
iret
std
in
mov
dec
insl
je
ja
dec
inc
add
in
or
add
in
mov
lahf
fnstsw
inc
push
fistl
push
les
add
mov
daa
xchg
cwtl
add
cs
insb
or
add
push
inc
push
jl
add
xchg
dec
pop
pop
aad
add
aad
jbe
aad
sbbb
bound
cmp
in
xor
mov
aad
mov
mov
pop
add
aad
adc
lds
popa
sbbl
adc
pusha
push
sub
add
aas
dec
jecxz
add
xlat
cli
incb
pop
mov
mov
lcall
scas
lea
hlt
lcall
ss
movsl
or
imul
or
add
or
aad
mov
cmc
xor
aad
cld
xor
ds
jne
pop
jmp
add
ss
sub
lock
push
leave
and
add
call
movsl
dec
mov
adc
cmp
or
lret
push
jmp
adc
xor
lds
sar
call
addl
ds
pop
jle
cwtl
jno
aad
add
xchg
push
mov
xchg
pop
sahf
out
arpl
mov
pop
xchg
mov
jl
stos
xchg
call
mov
xorl
int3
mov
dec
testl
inc
lock
lock
mov
out
imul
neg
in
pop
stos
movsl
ficomps
fdivs
add
out
lahf
int
test
jmp
hlt
clc
sbb
fdivrl
push
and
or
add
jno
push
outsl
jns
data16
adc
adc
fmul
fdivrl
pop
add
fwait
cmpsb
mov
out
mov
add
fmull
add
mov
repnz
in
push
add
add
arpl
jne
es
insb
pop
outsb
add
stos
ja
imul
jg
push
je
jl
outsl
push
pop
or
pop
es
adc
push
push
push
lods
push
add
aad
ds
sub
dec
pop
syscall
push
push
sbb
adc
inc
adc
mov
pop
aad
test
jo
mov
in
push
add
cmpsl
mov
loopne
add
xchg
dec
push
mov
dec
pop
scas
cmpsl
push
pop
aad
sub
mov
xor
es
mov
pop
and
sub
sub
cs
add
pop
dec
test
dec
sbbl
dec
or
cmp
pop
sbb
or
imul
push
imul
add
mov
cld
arpl
js
negl
dec
pushf
imul
dec
stos
dec
cwtl
cmp
hlt
or
inc
aad
int
mov
cmp
out
push
int3
sbb
add
or
sub
mov
mov
sbb
daa
fstps
lock
adc
add
call
pop
add
rorb
jne
add
cwtl
xorl
ret
push
push
xchg
cltd
arpl
pop
xchg
inc
cmp
loop
rorl
add
mov
mov
lcall
imul
inc
dec
enter
clc
xchg
push
add
mov
adc
inc
pop
xchg
mov
add
mov
sub
add
popf
xor
sub
and
add
pop
and
aam
push
and
or
mov
xor
insl
mov
add
popf
jne
pop
mov
add
dec
inc
jl
add
int3
jno
fs
or
add
add
leave
andb
sahf
mov
cmpsb
lods
scas
xchg
test
mov
jg
cmpb
insb
lahf
mov
xchg
xchg
sbbb
adcl
aad
or
sbb
ret
adc
int
add
aad
jp
add
outsl
insb
cvtps2pi
add
outsb
push
pop
adc
call
xor
out
cmpsl
cmp
rcrb
add
mov
lock
aad
add
ljmp
push
mov
jmp
or
sbb
aam
or
cld
adc
std
and
rcl
push
push
xchg
sbb
fadds
push
sub
sti
sub
sbb
or
std
or
insb
mov
dec
cmpsb
xchg
in
push
sub
push
add
adc
jo
cmp
sbb
push
loopne
sub
inc
sbb
add
lret
push
test
aad
leave
outsl
stos
push
rcrl
aad
jnp
push
pushf
pop
mov
scas
jg
xor
cmpsl
shrd
aaa
scas
inc
mov
ds
xorb
lds
iret
call
pop
testb
push
gs
xchg
pop
add
cmp
in
mov
lock
mov
adc
add
xchg
in
cmp
out
fs
imulb
loop
arpl
hlt
cld
dec
push
aad
xor
shll
fwait
imul
sub
lds
imul
dec
xor
cmpsb
xor
lods
pushf
movsb
stos
mov
cmpsl
mov
mov
lock
mov
inc
mov
fistpll
xchg
xchg
es
mov
xor
xchg
mov
add
movsb
mov
data16
jns
pop
insl
loop
push
outsb
bound
jno
push
sbb
es
outsb
jo
imul
add
push
adcb
add
dec
and
adc
pop
push
jo
pop
push
pop
cmp
push
pop
dec
aad
sbb
fisubs
insl
mov
pop
pusha
pop
jnp
and
lock
or
jb
out
out
add
sbb
jmp
or
mov
add
mov
add
or
push
in
dec
push
pop
jecxz
fprem1
je
stos
mov
out
out
jl
cli
add
jo
scas
mov
pop
repz
inc
xchg
dec
cmp
iret
adc
mov
fstpl
int
adc
fdivr
sub
fnsave
or
imul
sub
push
mov
jb
jmp
mov
fs
mov
lret
scas
ja
mov
or
ret
mov
mov
call
mov
mov
repz
or
mov
jb
ja
movsl
call
cmc
dec
fisubl
or
lea
inc
lods
pop
or
pop
lcall
dec
or
xor
add
cli
cs
fsubp
add
loopne
js
pop
gs
push
inc
push
inc
add
xchg
xchg
push
ffree
cmpb
lds
jmp
add
mov
cld
inc
mov
es
add
jmp
add
cmp
jmp
push
test
add
add
mov
add
stos
jne
mov
or
add
sub
sbb
aaa
outsl
cmc
sbb
sub
or
add
push
sbb
test
or
lcall
out
add
movsl
mov
pop
xchg
mov
pop
xchg
mov
push
mov
mov
or
add
push
add
and
roll
or
dec
inc
mov
add
mov
sub
imul
add
adc
addr16
push
sbb
lock
aad
sti
jmp
into
addr16
filds
add
dec
loope
sti
add
lock
add
aad
ret
ret
mov
sub
adc
lret
ss
sbb
sbb
adc
aaa
inc
push
pop
or
sbb
ds
pop
arpl
push
addr16
adc
pop
jns
lock
aad
and
add
mov
adc
fcmovnbe
or
ffreep
or
shr
sti
or
sub
or
repnz
or
or
dec
aad
jns
pusha
xchg
dec
test
mov
mov
cmpsb
jnp
arpl
cmp
dec
mov
cltd
aaa
scas
inc
in
imul
popa
int
ret
pop
lea
bound
roll
test
in
frstor
shll
cmpsl
rcll
ret
xchg
mov
jnp
xchg
aad
rol
aad
popa
mov
stos
call
add
add
adc
sub
cld
or
add
in
sbb
sahf
xor
add
iret
push
je
or
int
cmp
xchg
dec
adc
loopne
cmc
inc
or
xchg
test
addl
add
pop
in
jecxz
add
popa
mov
lock
mov
push
and
adc
pop
sub
cmp
enter
xor
shll
inc
sub
inc
cmp
cmp
cmc
outsb
incb
out
sub
insb
or
add
xor
cmp
and
and
jp
lret
sub
add
test
xchg
push
aad
scas
add
inc
cmpsl
cmc
mov
leave
movsl
decl
pusha
jmp
pop
jmp
mov
xchg
pushf
mov
dec
iret
aam
shr
xchg
dec
pop
out
inc
xchg
lahf
xor
out
add
aas
gs
filds
push
add
scas
mov
push
jg
mov
js
add
pop
push
push
sbb
inc
sub
add
add
ret
daa
movsl
lock
aad
mov
xchg
push
cs
lcall
mov
jg
movsl
add
aad
cmp
mov
add
sbb
pop
sbb
int
adc
leave
or
orl
idivb
push
push
xchg
fisttpll
rcr
out
pushf
mov
movsb
aad
nop
cmpsl
add
jae
add
aad
jne
dec
or
mov
mov
insb
xchg
dec
mov
dec
andl
stos
mov
pop
js
lods
jge
popf
mov
xlat
nop
mov
fistl
lock
xchg
fldl
or
add
or
add
or
add
or
in
adc
pushf
js
add
dec
rcll
jmp
adc
cmp
cmp
push
mov
dec
add
ret
jle
aas
in
or
ret
decb
and
mov
dec
sbb
ret
lret
jmp
int3
push
mov
sub
mov
aad
icebp
fldl
add
insl
mov
sbb
jg
jnp
cltd
aaa
ret
ds
push
in
jmp
and
inc
repnz
loope
pop
rorl
lea
adc
rorl
addl
add
inc
int3
push
xor
xchg
cmc
add
or
push
adc
mov
ret
insb
ret
inc
hlt
push
inc
inc
add
inc
enter
mov
mov
mov
add
mov
jns
cmp
mov
inc
in
addl
add
arpl
in
or
ss
or
jmp
cmpb
insb
in
je
mov
push
adc
or
fadds
aad
add
sub
loope
sbb
xor
mov
add
push
sbb
add
arpl
add
fs
pop
or
cwtl
mov
jmp
scas
mov
jmp
adc
xor
mov
mov
dec
sbb
mov
loopne
out
out
loop
notb
adc
jle
lds
push
cs
gs
fsubl
loope
add
or
xor
inc
leave
insb
les
stc
popa
or
xlat
sbb
mov
pop
dec
mov
adc
cmc
cwtl
lret
sub
or
sbb
stos
pop
jmp
pop
or
pop
pop
outsb
loope
arpl
xor
subl
add
call
or
subb
sub
loopne
aad
jg
adc
iret
add
sbb
jmp
cmp
or
dec
aad
aaa
mov
loop
jmp
loop
mov
or
pop
pop
lcall
into
add
test
popa
inc
lock
pop
or
sub
or
dec
pop
and
mov
lods
addb
add
xor
or
jb
xchg
cmp
cltd
scas
mov
pushf
cs
jge
adc
xchg
into
addb
data16
insb
and
inc
rolb
je
push
dec
adc
push
jae
in
lods
or
jmp
bound
add
shll
mov
mov
mov
pushf
pop
or
stc
push
call
add
cmc
push
test
dec
fdivrp
jne
addb
jnp
dec
cmpsl
int3
dec
lea
dec
call
xchg
orb
jae
jle
push
sbb
push
adc
or
inc
in
adc
loop
push
lods
pop
push
cmpsb
ljmp
pop
mov
inc
mov
jae
push
or
adc
xor
add
add
aad
rorb
shl
dec
aad
add
and
mov
sbb
inc
add
enter
mov
insl
ret
jae
fistl
dec
movsl
xchg
sbb
mov
dec
jne
pusha
pusha
sti
aam
or
jecxz
rolb
aad
xchg
iret
cli
inc
cmp
cmp
sbb
add
jl
and
xchg
ss
mov
inc
std
push
scas
push
rcll
test
cmp
cmp
lock
in
xor
popa
inc
flds
icebp
xor
pop
adc
adc
jo
sub
and
aad
jmp
mov
inc
aad
rcr
fstl
or
call
xor
inc
mov
cmp
sar
arpl
add
fwait
add
jmp
adc
fs
add
sbb
ljmp
dec
inc
ljmp
fucompp
mov
xchg
out
pop
call
loope
je
push
push
sbb
push
dec
push
incb
sti
mov
or
dec
inc
jmp
push
lea
in
mov
enter
call
and
add
or
or
cmp
adc
fimull
jge
add
xchg
lret
jge
dec
sbb
daa
mov
fists
cmp
ljmp
mov
add
inc
jns
dec
call
iret
ffree
sti
add
xor
call
xchg
icebp
inc
daa
cmp
jl
adcl
push
cmp
or
cmp
jne
sbb
dec
or
popf
fadds
dec
movsl
into
ljmp
fnstcw
daa
push
xorps
fsin
fisubl
std
xlat
jne
mov
fnstcw
dec
lret
roll
and
aad
subb
add
out
arpl
aad
cmc
out
fiadds
pop
and
mov
leave
test
dec
loope
adc
or
xchg
in
or
leave
adc
adc
roll
dec
push
fmull
mov
pusha
fimull
aam
jmp
lock
test
stos
das
mov
out
xor
stc
imul
test
add
add
or
inc
in
or
jg
or
add
loopne
xor
call
ficompl
and
inc
int
shll
xor
outsb
jnp
into
call
inc
insl
xor
pop
push
popf
jg
push
sub
movb
into
in
jmp
mov
inc
jo
ljmp
xlat
addl
pop
mov
or
pusha
adc
xchg
add
dec
cs
stc
adc
in
pop
mov
inc
call
adc
je
popf
inc
clc
jb
sarl
scas
add
add
xorb
mov
addb
lea
pop
addr16
int3
adc
push
out
push
add
cmp
popa
add
addb
inc
push
inc
int3
out
cmp
add
and
std
adc
xchg
neg
jns
push
sbb
sub
cmp
cmpl
push
in
or
jae
call
test
cmp
push
inc
out
mov
mov
sarl
jmp
jbe
rolb
add
add
fcoms
jae
jg
nop
cmc
roll
push
mov
cmp
mov
and
imul
xlat
cmpsl
loop
pop
push
out
xor
xchg
cli
adc
scas
rolb
pop
mov
ss
dec
movsb
jmp
mov
xor
repnz
test
scas
mov
std
icebp
aas
aad
shlb
fwait
sbb
add
push
decl
push
push
dec
inc
xor
pop
sbb
mov
and
test
add
add
cmp
andl
jge
or
add
in
ss
jle
cmp
push
jmp
repnz
call
add
add
add
popf
roll
or
mov
aad
mov
add
loop
adcl
xor
or
cmp
in
out
pop
xor
sbb
add
adc
add
insl
inc
loop
aad
add
mov
adc
lea
icebp
cmp
mov
mov
inc
pop
sbb
sbb
add
cmc
fistl
cmp
aaa
pop
orl
xor
jbe
out
push
push
jmp
call
cs
mov
pop
push
cmp
dec
dec
clc
push
stos
loope
test
or
push
jb
mov
loop
enter
decl
add
lea
mov
push
jl
test
add
test
mov
std
adc
mov
push
mov
xchg
sbb
sti
stc
adc
jp
incl
adc
jae
mov
ficoml
cmp
mov
rol
push
xchg
inc
or
mov
mov
lcall
cld
lds
or
test
inc
hlt
mov
adc
divb
add
add
pop
push
push
aad
xchg
mov
sub
inc
or
adc
lds
lds
mov
pop
adc
jb
push
mov
repnz
test
jge
test
sbb
aad
inc
clc
pop
jae
xorl
add
je
or
mov
mov
pop
dec
jmp
cwtl
add
shrb
sar
inc
and
inc
add
rcrl
cli
lds
aad
jge
push
lds
push
add
fmull
ret
test
test
pop
or
add
flds
dec
addr16
adc
call
mov
pop
push
add
dec
dec
test
mov
push
aad
fs
cwtl
push
push
or
add
xchg
in
push
cwtl
rol
cli
cmp
shrb
ds
rol
repz
fstp
ljmp
flds
bound
xchg
fldt
enter
leave
je
xchg
dec
add
mov
rcl
or
loope
dec
xchg
push
cltd
orb
pop
call
arpl
pop
push
rol
add
pop
mov
add
mov
xchg
jl
mov
mov
jmp
nop
adc
pop
and
subl
pop
call
cli
xchg
cmp
jmp
add
xchg
inc
cmp
sbb
imul
sub
andb
dec
jo
and
mov
jl
xchg
arpl
lea
dec
push
fcmovbe
cmp
and
orl
jmp
cmpb
cmp
fsts
leave
sub
std
mov
ficompl
test
push
add
inc
jmp
mov
fmuls
sbb
push
bswap
push
cmpl
add
jb
fmulp
out
std
or
lea
leave
mov
xchg
or
cmpl
mov
mov
aad
add
in
jne
jno
mov
dec
mov
mov
push
xor
cmp
fists
sti
sbb
add
mov
mov
push
fwait
cmc
lret
in
int3
add
rclb
xchg
mov
mov
sub
aaa
aam
and
add
sbb
dec
aas
dec
cli
pop
fstpt
dec
add
add
push
mov
call
mov
ret
outsl
inc
fld
fidivrs
push
add
clc
or
jnp
mov
lahf
fcmovnb
mov
loopne
or
rcrb
add
imul
or
cmpsb
fisttpl
fwait
out
pop
lret
dec
cld
jno
fnstenv
gs
cmpsb
or
jle
add
sub
pop
cmp
mov
insl
jg
ret
repnz
icebp
stos
or
fimuls
add
push
ret
push
inc
stc
jmp
mov
mov
scas
ret
adc
movsb
add
fs
pop
mov
test
mov
inc
mov
add
or
push
insb
adc
out
add
loopne
add
mov
jo
or
xchg
call
xchg
inc
test
mov
mov
sbb
inc
or
sbb
xchg
add
aam
or
or
pop
pop
add
inc
jmp
mov
push
lea
push
push
cli
dec
incl
xor
add
sbb
mov
mov
add
rorb
hlt
notl
sti
mov
add
mov
or
add
or
sub
mov
scas
push
add
xor
add
or
inc
add
je
es
xor
mov
adc
fnsave
or
cs
add
lret
adc
jg
rcr
adc
les
pop
jnp
push
sub
ret
leave
add
push
jb
adc
mov
inc
cmp
xor
dec
add
in
add
sar
call
fwait
aaa
push
cmp
mov
mov
mov
dec
in
sti
mov
sbbl
add
jmp
rcrl
add
cmp
jl
add
bound
lea
add
push
sub
add
ret
mov
push
pop
cmc
mov
sahf
sbb
add
cmp
jb
int
es
or
push
pop
bsr
jmp
jnp
add
mov
cli
inc
aad
mov
movb
mov
push
mov
xor
je
test
or
ljmp
adc
and
or
sbbb
insl
call
pop
cld
ret
jmp
xchg
cmp
inc
test
mov
cmp
jae
imul
mov
sbb
add
sbb
xchg
sub
call
push
mov
arpl
call
movd
pop
sbb
mov
mov
cmp
xor
add
or
jo
cmpsb
add
or
icebp
mov
ret
or
lock
ret
popa
ds
ror
jg
mov
sti
push
push
add
daa
sar
adc
stc
pop
and
aam
and
insb
ds
jle
add
jl
push
incl
mov
add
add
push
rorb
or
ljmp
mov
daa
sti
mov
push
sbb
xor
mov
add
mov
aas
and
sub
xor
dec
outsl
push
adc
addr16
sbb
mov
add
adc
hlt
jnp
int
inc
add
stos
adc
push
outsb
push
xor
mov
imulb
pop
aas
and
pushl
jmp
jb
dec
mov
jnp
mov
out
fucomi
pushf
mov
mov
pop
nop
and
mov
jl
or
imul
dec
add
dec
inc
vminsd
mov
cli
mov
push
jl
inc
sub
xor
mov
aad
mov
dec
mov
imul
add
adc
xor
iret
lds
int3
andb
jmp
xor
jae
adc
dec
jmp
testl
call
dec
jne
enter
mov
cwtl
adc
or
pop
add
repnz
idivb
add
mov
je
iret
jae
pop
ret
out
movsl
mov
pop
add
fimull
cmp
sbb
adc
or
out
in
add
and
call
testb
in
in
ss
fnsave
incb
insb
xor
or
jbe
lds
sub
inc
sub
mov
cmp
inc
and
mov
and
lds
ret
and
xchg
add
add
lods
add
adc
je
inc
pop
jl
fsubrp
and
adc
scas
add
add
fcomi
js
je
dec
cld
cmp
setne
add
jne
inc
andl
add
pop
inc
andl
add
lods
xor
call
bound
jge
cmp
add
movsb
sub
add
movsb
lcall
out
xchg
dec
adc
ja
sub
fwait
lahf
adc
mov
pop
je
add
mov
les
mov
dec
cmovs
or
lret
std
shl
ret
jae
scas
ja
lods
pop
aam
mov
movsb
sar
stos
or
pop
jbe
icebp
xchg
ficompl
movsb
add
aad
jg
aad
call
ficompl
mov
pusha
mov
cmp
push
dec
loopne
pop
stc
inc
xor
dec
add
xor
imul
or
xchg
in
loopne
adc
imul
mov
jae
mov
or
bound
int3
fwait
mov
mov
inc
inc
rorl
jmp
push
stos
cmp
push
sbb
and
jmp
sar
mov
pop
add
adc
sub
or
add
lahf
or
xor
sub
mov
icebp
pop
inc
adc
pop
push
add
pop
push
mov
add
xor
sub
addb
lret
je
arpl
out
or
inc
push
add
pop
push
jb
scas
and
or
int
add
pop
mov
addb
cmpl
pop
dec
iret
mov
mov
adc
out
jecxz
add
mov
mov
or
mov
cld
and
add
jp
add
test
dec
andl
add
movsl
jb
cld
and
jne
xor
je
or
scas
add
mov
std
push
push
push
push
loope
je
or
jne
pop
pushl
lret
aad
inc
add
test
mov
dec
or
dec
push
lcall
dec
pop
pop
inc
aad
xchg
mov
mov
inc
add
add
jne
push
jne
lcall
shlb
xchg
sbb
fstl
popl
arpl
aad
add
repnz
adc
leave
jp
aad
add
sbb
enter
sar
mov
daa
shrb
test
xchg
test
in
arpl
adc
mov
adc
dec
jmp
enter
cmp
add
mov
mov
jne
sub
dec
icebp
push
push
leave
stc
push
push
mov
mov
push
ss
add
sbb
loope
fimuls
ljmp
sbbl
cmp
push
rcll
cmp
mov
mov
jno
jne
push
sbb
fcompl
call
in
dec
add
add
jne
dec
jae
out
das
out
stc
mov
stos
ret
bound
pop
xor
in
pop
cmpsb
popf
add
cmp
sbbl
out
sbb
push
or
mov
jmp
inc
mov
xlat
incl
test
or
push
sbb
add
repnz
add
or
add
cld
push
aaa
inc
or
jae
or
repnz
insb
cmpl
cmp
clc
mov
std
test
add
enter
add
mov
cld
cmpsl
or
inc
sub
decl
push
push
inc
cld
addb
rorl
stos
add
nop
add
iret
mov
add
push
call
aad
mov
rolb
out
imul
pop
push
ljmp
push
call
push
add
xlat
push
std
and
aad
add
mov
inc
call
test
mov
loop
mov
mov
decl
push
mov
mov
mov
and
clc
fdiv
adc
mov
in
out
add
push
or
mov
fnsave
jmp
mov
mov
out
lods
mov
add
jecxz
mov
sahf
mov
mov
std
push
adcb
adc
push
bound
hlt
sub
rorl
add
jmp
mov
xchg
or
push
xor
mov
cld
xorl
call
pop
sahf
ret
aad
add
mov
roll
std
mov
xor
test
add
cs
jmp
add
add
outsl
mov
stc
push
or
add
in
pushf
cmp
subl
pop
push
lcall
bound
mov
test
ss
rorl
jmp
inc
inc
add
pusha
int3
pop
jp
push
mov
lds
mov
adc
lods
add
mov
push
ret
fnsave
sub
push
xor
adc
add
jo
add
lods
or
jmp
mov
adc
daa
jae
pushl
push
lea
jbe
push
sbb
insb
fdivr
mov
jbe
shl
lret
out
sti
cmp
add
orb
add
or
push
dec
add
fidivl
clc
imul
adc
add
leave
ret
loope
ljmp
add
testb
sbb
add
mov
das
or
in
jle
pusha
js
inc
ror
inc
jmp
cs
inc
aad
mov
inc
mov
xor
aaa
mov
mov
pop
push
push
inc
mov
int
rolb
pop
pop
push
test
cmpsl
mov
dec
fs
pop
stos
lret
aad
repz
lret
mov
test
push
mov
or
xchg
or
xchg
lods
adc
add
icebp
mov
mov
sub
xor
test
add
ljmp
or
pop
lods
mov
push
or
icebp
mov
add
shrb
stos
add
mov
leave
xchg
pop
pushf
loopne
or
inc
mov
dec
fnsave
aad
xor
pop
idiv
push
add
movsl
subl
adc
lods
aad
adc
adc
rorl
mov
aas
fisttpll
mov
mov
add
dec
cs
leave
adc
pop
inc
cld
mov
dec
or
mov
mov
jle
in
add
add
or
add
pop
pop
idivl
in
scas
bound
push
fidivrl
pusha
or
push
or
mov
jns
push
je
or
add
cld
decl
cmp
add
jle
hlt
cmp
jb
and
push
inc
inc
hlt
push
xchg
push
mov
mov
jae
cmp
mov
jae
andl
je
push
pop
pop
add
ljmp
push
add
or
shlb
andb
add
daa
out
jg
loopne
push
sbb
aas
incl
add
or
les
push
lods
out
add
pop
in
aas
popa
insl
stos
pop
xchg
mov
fnstenv
mov
push
push
ret
incl
mov
push
dec
add
sub
adc
das
add
fstpl
shr
arpl
xor
mov
subl
add
add
into
or
test
mov
mov
bound
test
jmp
dec
out
pop
cld
xlat
or
xchg
fisubrl
adc
nop
add
imul
sbb
cmp
adc
dec
shl
cs
fsubrl
push
xchg
das
call
int3
inc
aad
sub
mov
push
or
stos
pop
add
loop
sub
or
add
leave
cmc
insl
lcall
test
xchg
in
pop
ja
fiaddl
ret
push
insl
imul
int
pusha
ds
xlat
pop
cli
inc
roll
cld
mov
push
mov
sub
xchg
inc
fldcw
adc
repnz
sub
mov
or
or
add
pop
mov
in
add
imulb
vpsraw
iret
cltd
stos
pop
fwait
iret
push
pop
mov
fmul
rcll
addr16
add
int
add
or
or
push
lea
cmp
pop
push
push
or
pop
call
fists
inc
cmp
sbb
jmp
mov
cld
fisubs
call
add
sti
and
sbb
adc
mov
lea
in
or
and
loop
push
movsb
or
add
pop
leave
mov
jg
les
push
push
sbb
mov
jp
or
adc
jp
push
in
pop
jecxz
out
test
mov
mov
mov
sub
cmp
mov
mov
mov
add
inc
mov
leave
push
sub
test
xchg
sbb
aad
ljmp
repz
sub
repz
sub
fsub
jb
xor
leave
inc
aad
xor
lcall
out
int3
test
mov
dec
jmp
movsl
fcmovne
les
sbb
gs
inc
daa
dec
jmp
inc
aad
fadds
xor
push
cmp
sub
lret
fmuls
add
pushl
ret
cwtl
mov
call
aad
out
jl
mov
cmc
xchg
in
add
xchg
dec
test
lret
test
add
out
fmul
pop
or
lahf
gs
xlat
fistl
or
jmp
sub
decb
pop
fs
push
in
repz
sbb
add
rcrl
push
out
lds
sub
das
add
push
sbb
add
scas
dec
or
inc
movsb
jmp
cmp
jmp
mov
xor
add
xor
add
in
std
fsub
mov
sbb
push
or
add
imul
out
or
push
imull
in
mov
sub
pop
add
cmp
mov
out
add
mov
pop
lea
push
dec
sahf
mov
or
cmp
and
enter
shlb
push
push
push
add
add
lods
mov
mov
cmp
inc
in
xchg
mov
and
aaa
lea
push
lea
repz
and
sbb
lods
jg
adc
lods
mov
or
aaa
je
lock
pop
out
aam
fisttpl
jl
adc
out
lcall
add
out
lcall
xor
daa
mov
sbb
add
dec
cmp
cmovs
out
aam
add
in
pop
sub
daa
xor
sub
cmp
mov
incl
xor
add
and
or
js
out
cwtl
lret
mov
or
add
mov
xchg
js
aas
sub
add
mov
jb
and
cmp
lods
imul
scas
push
in
add
add
or
jmp
push
sub
fsubrl
jns
mov
repz
or
adc
xchg
inc
aad
cmp
sbb
icebp
cmp
pop
jbe
sahf
test
mov
sub
push
dec
dec
push
add
jae
pop
cmp
dec
pop
and
fiadds
rorl
push
sbb
adc
mov
xor
mov
out
data16
jne
or
pop
xchg
mov
sti
fisubrs
mov
movsb
sti
outsb
test
add
or
lea
dec
xchg
add
jbe
call
lea
sbb
clc
pop
lea
xor
in
std
mov
ret
mov
and
push
jb
inc
xorl
lea
insb
subl
mov
cmp
leave
mov
orl
inc
add
std
mov
je
push
inc
cld
fs
jne
add
insl
addl
sbb
std
cmp
adc
add
or
rcl
jge
orb
add
cwtl
push
call
pop
jno
leave
xchg
pop
jge
push
inc
stos
add
add
aad
push
mov
fistpll
or
mov
xorl
int3
mov
add
aad
push
lea
int
push
out
mov
mov
sub
add
sub
add
sub
add
decl
clc
hlt
les
sub
or
add
cmp
push
pop
leave
in
fisttps
jmp
add
test
add
or
comiss
jmp
aad
mov
mov
dec
jmp
or
fstps
adc
add
leave
aas
or
jbe
bound
test
push
pop
aas
inc
cmp
ret
scas
cmpsl
dec
popf
arpl
aad
insb
jle
fwait
aad
lcall
fwait
mov
mov
arpl
pushf
push
adc
sarb
mov
mov
add
jp
pop
and
add
lret
jno
pushf
mov
cmp
inc
test
push
cld
ss
popf
jae
pushf
call
fisubrl
xchg
in
jne
jb
xor
rclb
movsb
inc
or
aaa
mov
rorl
mov
dec
lea
incb
adc
pushf
mov
add
std
push
ja
mov
jge
cmp
pop
mov
jns
jae
jno
mov
push
fs
call
movsl
std
incl
cmp
inc
add
ret
sbb
mov
adc
scas
add
add
std
lea
ja
push
push
push
add
in
bound
dec
jg
add
add
mov
adc
push
xor
out
dec
pop
add
jle
rcll
push
stos
ss
incb
mov
lea
js
cli
ljmp
add
jo
and
cmpsl
or
sub
das
mov
xor
mov
adc
adc
push
lcall
jp
rcl
dec
mov
add
push
push
and
inc
cld
add
mov
insb
pop
or
jae
pop
inc
cld
mov
cli
lcall
mov
aas
pushf
pusha
fucomip
add
and
jns
xchg
or
cmpb
push
mov
adc
push
fcompl
rclb
mov
mov
pusha
imul
push
add
sub
test
push
mov
xchg
addr16
or
add
or
jmp
test
popl
pop
sarl
add
mov
insb
aas
dec
cmp
adc
add
jmp
call
jb
mov
pop
and
mov
jmp
xchg
or
ds
fcmovb
daa
cltd
jmp
jecxz
xor
pop
fwait
push
dec
adc
iret
dec
add
mov
jns
dec
insb
cmp
out
rorl
mov
mov
or
call
adc
in
jge
add
pop
mov
repnz
in
je
sub
or
mov
sbb
cmp
cld
add
fmull
test
mov
fisttpll
add
xchg
test
repnz
lea
sti
lcall
out
or
add
ljmp
mov
jp
mov
lods
aaa
inc
add
adc
jl
inc
or
loopne
imul
sti
incl
add
pushl
call
pop
outsb
or
push
cld
mov
inc
pop
sbb
push
add
icebp
pop
add
and
outsl
sub
add
cmpsb
cmp
adc
mov
mov
fidivl
int3
dec
mov
pop
stc
mov
add
add
add
add
mov
dec
adc
sti
cld
fidivrl
stos
mov
pop
mov
and
sub
dec
xchg
jno
int
sbb
push
xchg
call
pop
scas
or
lods
sbb
test
or
jmp
dec
iret
inc
add
enter
or
adc
push
js
xchg
or
aad
fisttpl
sbb
ret
cmp
dec
aaa
loope
imul
popa
xchg
push
pushf
sar
popa
dec
lahf
mov
call
xor
mov
push
clc
adc
mov
and
inc
nop
or
fildl
add
shlb
or
popf
sar
call
jne
dec
shl
call
pop
pop
rol
in
mov
or
jmp
pusha
mov
call
and
or
or
and
or
bound
std
stc
push
jae
icebp
dec
mov
inc
jl
add
insb
mov
adc
mov
cmc
push
cld
ret
add
in
ljmp
xorl
push
mov
je
stos
mov
add
xor
in
mov
add
add
fdivl
leave
outsl
jo
mulps
push
push
mov
pushl
inc
add
xor
push
aad
mov
xchg
inc
lahf
dec
pop
loopne
pop
int
pop
fildl
add
sahf
out
sahf
add
pop
icebp
mov
call
sahf
movsl
or
scas
aad
stos
cmp
popf
mov
test
pop
sub
out
push
mov
sub
pop
loopne
call
pop
imul
push
in
nop
aad
repnz
popf
dec
in
mov
ret
fmul
rcl
and
inc
mov
xchg
push
rcll
or
rorl
mov
scas
mov
or
xor
call
fidivrl
sahf
push
pop
mov
stos
fwait
adc
insb
ret
jecxz
es
or
int
aas
sahf
cmp
cltd
mov
xchg
fisttpll
stos
jle
lods
out
jmp
or
xchg
stc
xchg
add
cmpsl
xchg
imul
adc
pop
mov
imul
push
add
push
mov
adc
test
mov
mov
add
add
xchg
and
stos
or
test
mov
inc
sar
imul
push
insb
xchg
mov
add
call
adc
push
or
jmp
out
and
je
jg,pn
mov
add
jmp
push
lret
pushf
cmp
pop
adc
add
jecxz
jb
out
xor
mov
pop
sbb
mov
add
add
or
sbbb
dec
adc
mov
mov
sbb
mov
xchg
add
mov
enter
fs
or
jne
mov
call
mov
or
dec
xchg
pop
mov
jb
or
aad
add
add
xchg
add
add
cmp
stc
add
xor
mov
lcall
mov
or
lcall
out
add
jl
cltd
incb
movsl
or
pop
out
add
mov
je
xchg
mov
jo
nop
cwtl
xor
sub
ret
xchg
mov
xchg
adc
inc
xor
mov
or
pusha
push
cld
ljmp
add
mov
push
or
ret
stos
loopne
call
stos
cmp
insl
lcall
sub
xchg
xor
mov
xor
mov
stc
mov
add
pushf
das
push
int3
cwtl
scas
xchg
or
adc
scas
add
mov
or
add
dec
xor
adc
lea
cmp
pop
push
mov
xchg
add
dec
sub
mov
fistl
mov
ret
sbb
or
call
clc
ret
jle
mov
sbbb
repnz
mov
dec
cmp
mov
inc
test
mov
cs
out
jb
movsl
dec
jb
test
inc
in
pusha
rcrb
dec
movsl
scas
in
or
nop
aad
call
cmp
ljmp
mov
mov
jb
push
addl
mov
or
add
lods
fsin
daa
inc
or
jb
in
enter
or
test
out
pop
mov
call
add
lret
jge
push
lea
out
push
or
jne
mov
sti
and
add
cmpb
stc
push
xor
pop
xchg
add
lea
aad
ret
mov
xchg
je
pop
mov
loop
cmp
push
adc
pusha
out
dec
cmp
or
adc
mov
add
add
mov
mov
push
xchg
es
mov
notb
xchg
mov
mov
add
lret
pop
sub
stos
daa
adc
dec
pop
or
rcrb
push
mov
or
mov
iret
push
xchg
xchg
aas
lods
rcl
add
lods
cwtl
repz
lods
mov
add
roll
test
xchg
rorl
enter
jg
mov
xchg
sub
sub
sub
adc
jp
add
aad
sahf
pop
push
adc
out
dec
jl
or
mov
cmp
push
push
dec
mov
add
imul
mov
arpl
cld
out
add
inc
cmp
mov
mov
shlb
pop
or
insl
dec
mov
xor
mov
push
bound
loopne
aam
sbb
dec
popa
push
fs
or
pop
popa
test
leave
bound
dec
inc
fstpt
dec
fiadds
push
cmp
lods
cmp
inc
sbb
add
lea
mov
push
sahf
aam
cmpsl
dec
adc
sub
test
mov
mov
mov
add
or
clc
jno
jae
aam
in
jne
popf
jae
adc
xor
in
pop
mov
ret
cmpb
jne
dec
pop
hlt
call
in
or
out
xchg
ljmp
dec
clc
push
add
movsb
cmc
ljmp
repnz
incl
icebp
xchg
jb
test
rorb
mov
jae
aad
divb
dec
sbb
repnz
push
sub
std
or
rcrb
aad
or
pop
or
jmp
jecxz
ljmp
pushf
mov
jb
mov
mov
jg
add
push
out
aad
test
xor
add
jo
dec
in
sti
add
jo
incl
jns
out
les
mov
add
adc
add
push
jle
aam
jno
ja
or
dec
fimuls
adc
subl
imul
fiaddl
jle
fcmovbe
rolb
xchg
add
sti
fstps
push
xchg
xchg
repnz
aad
popf
jle
jno
loope
xchg
lret
add
scas
dec
mov
jb
xlat
popf
mov
rcrb
leave
cld
or
lds
or
std
test
pop
int3
inc
xchg
mov
push
int3
jmp
cmpsb
xchg
test
lret
dec
mov
push
pop
sub
add
xchg
out
insb
dec
std
adc
testb
jg
sarb
jnp
push
stc
xchg
int
pop
inc
std
negl
rorl
sub
jno
loopne
or
adc
mov
imul
popa
sub
arpl
adc
jno
test
jae
adc
cmpsb
push
inc
jo
sbb
add
add
arpl
mov
xchg
sub
mov
sub
mov
insb
mov
mov
cmp
jmp
or
xor
dec
adc
mov
out
dec
aas
mov
mov
ret
ret
push
mov
push
push
xor
sti
push
aam
mov
cltd
mov
add
cmp
sti
mov
out
mov
adc
add
and
adc
pop
mov
enter
lcall
dec
xor
pop
outsb
add
push
xor
in
cld
test
mov
dec
sub
inc
or
leave
xor
inc
xchg
cmc
push
rcrb
lods
fisttpll
or
rolb
out
imul
add
mov
leave
xchg
insl
add
or
jno
add
add
xchg
jae
out
adc
xlat
jb
mov
or
inc
xchg
mov
adc
sbb
cmp
or
cltd
adc
ja
xchg
inc
cs
fld
repnz
popa
sub
cmp
pushf
and
pop
push
jmp
call
xchg
adc
ret
sbb
popf
pop
iret
enter
or
xchg
rolb
push
bound
in
pop
shl
mov
adc
pusha
into
adc
mov
test
mov
fiaddl
repnz
in
fcmovnu
sbb
sahf
adc
aaa
fadds
add
gs
jo
adc
aas
jmp
dec
call
xor
fcompl
sbb
pop
test
rorb
push
fs
sar
and
push
shll
jmp
in
and
adc
dec
push
adc
push
or
add
adc
lret
dec
or
lods
sbb
lods
mov
dec
add
ds
sbb
and
cmp
int
xor
add
add
jg
add
or
inc
add
jg
add
or
lcall
dec
add
roll
sbb
je
into
inc
jmp
or
out
sbb
je
xor
jmp
aaa
call
aad
cmp
sub
rol
xlat
pusha
jg
add
and
or
adc
js
add
jg
shrl
sti
decb
lret
fwait
sub
jb
and
cs
mov
ret
xor
aaa
fnstenv
orl
sti
orl
add
add
jg
sub
mov
lock
aad
mov
aam
or
add
pop
fcmovnb
mov
mov
mov
lods
call
xor
in
ret
out
jnp
imul
lea
pushf
cli
xor
add
arpl
inc
jb
fiadds
fld
lods
or
add
add
mov
je
leave
call
shlb
loopne
pop
test
add
jg
xchg
mov
mov
or
add
jno
jle
xchg
pop
ja
cmp
lea
pop
xor
pop
jg
adc
xchg
pop
icebp
dec
cmc
pop
insb
adc
icebp
ljmp
or
das
aad
add
lea
outsb
jae
add
movsb
jno
adc
push
cmp
add
push
enter
lea
jae
call
mov
jno
add
xchg
into
addr16
or
imul
add
fstps
ja
rorl
ss
mov
pop
pop
jne
add
jmp
add
add
jl
jnp
jl
push
push
testl
or
add
or
pushl
or
xor
mov
cmpb
sbb
xor
mov
lea
aam
mov
mov
aad
add
jmp
add
xor
xor
out
inc
add
fwait
in
dec
xor
jge
stos
mov
scas
lcall
jb
add
push
jb
xor
lret
aad
jnp
dec
imull
sub
jb
aad
add
stos
gs
mov
xor
or
xchg
lret
imul
add
fcmovnb
in
stos
call
dec
inc
cltd
push
inc
aad
add
int
jae
scas
jle
xchg
xchg
mov
jnp
sub
mov
mov
jg
cmc
js
addw
or
pushf
lds
xchg
pusha
jge
adc
fisttpll
sbb
mov
in
aad
stos
cli
add
fdivl
adc
adc
decb
jmp
xchg
fiaddl
daa
ja
jmp
adc
jnp
add
jmp
jecxz
rcl
pop
jl
xchg
cmp
outsb
inc
mov
jne
repnz
jmp
out
sbb
or
enter
or
imul
mov
mov
jl
dec
pop
xchg
bound
or
xor
add
pop
add
push
std
pop
jmp
pop
or
push
or
gs
in
add
out
movl
xor
adc
lea
jo
lret
incl
add
fistl
add
std
call
stc
cmp
jl
les
stc
call
jne
add
adc
push
pushl
inc
adc
repnz
mul
repnz
out
inc
les
mov
add
bound
lea
test
adc
cmp
mov
es
pop
mov
std
mov
jmp
loope
call
arpl
jbe
faddl
pop
mov
mov
sbb
push
cld
mov
out
jle
add
loopne
orl
cld
dec
dec
in
cmpsb
sti
jb
jns
mov
cmp
mov
fwait
sti
cli
bound
mov
in
jge
cmp
test
or
rolb
add
js
js
jno
push
fnstsw
sti
pop
into
cmp
stos
flds
fwait
pop
or
add
icebp
xorb
xchg
sub
mov
mov
movsb
mov
jbe
jl
lods
iret
add
bound
test
stc
mov
xchg
or
mov
mov
adcb
mov
jmp
or
add
add
mov
sbbl
aam
or
jne
ja
call
int3
lds
test
jp
std
sub
lahf
jmp
hlt
ror
sub
or
jp
jmp
fimull
add
add
cmp
lea
call
out
xor
or
out
fdivrp
adc
popa
mov
or
mov
nop
outsl
or
jmp
fwait
jbe
fstp
cmp
push
push
jbe
jmp
push
ja
add
inc
mov
cmp
les
jmp
std
jne
cltd
inc
mov
aas
or
in
or
inc
cld
xchg
notl
test
sbb
pop
cld
ret
adc
popf
add
mov
mov
faddl
call
daa
push
testb
and
add
mov
insb
or
push
pop
jmp
ds
xor
setne
out
imul
imul
pop
mov
cmc
xor
or
out
pop
sti
sbb
pushf
xor
cmp
add
dec
sub
push
mov
add
ret
jecxz
push
jg
in
mov
dec
dec
mov
std
pop
mov
out
push
add
arpl
aad
add
lea
push
insl
pop
sub
aad
test
jo
jg
jge
cmc
mov
iret
je
jnp
jbe
add
pusha
mov
add
adc
add
cmp
out
push
jae
sbbb
jle
je
push
cltd
mov
jmp
or
add
cwtl
imul
cmc
jg
into
sub
jb
movsl
ret
loop
out
aad
aad
and
sub
push
mov
pop
or
fs
call
fdivrp
inc
stos
or
fsubl
push
outsb
nop
test
ljmp
lcall
add
mov
add
mov
out
push
xor
jmp
and
scas
es
inc
or
shll
rclb
or
jmp
push
jae
xchg
shll
fistl
int3
or
jmp
jle
fwait
jmp
mov
imul
imul
pop
jae
adc
frstor
jb
call
andb
jle
sahf
das
add
das
ret
std
add
ficomps
sahf
insb
push
jmp
lock
add
lea
xor
cmp
call
mov
adc
jecxz
icebp
call
mov
push
jbe
inc
pop
pop
jmp
aaa
leave
sbb
setne
push
aas
add
add
mov
cmp
js
lock
push
dec
andb
scas
or
xor
mov
adc
mov
mov
cmc
and
arpl
jmp
dec
inc
es
dec
sbb
sbb
and
out
sar
or
aad
and
imul
add
rcll
add
int
and
arpl
mov
inc
push
call
out
cmp
cmp
scas
mov
lret
ret
inc
jnp
inc
pop
fsub
call
sub
inc
cmp
xchg
jl
and
or
add
or
sarl
je
test
sbb
add
fsts
xor
insb
add
subl
cwtl
aam
xchg
dec
in
add
popa
jmp
aad
mov
loop
call
push
fstl
test
xorl
mulb
cmc
or
jnp
popa
inc
mov
aaa
add
push
dec
ds
or
cmp
popa
sbb
mov
pop
testb
add
bound
aas
xchg
pop
dec
cmc
fadd
je
pop
or
jno
call
adc
push
rcrl
out
mov
cli
iret
bound
push
inc
flds
jmp
cltd
out
pop
mov
bound
outsl
popw
cmpsb
rorl
push
dec
xchg
pop
outsl
dec
jb
add
sub
test
roll
aas
and
add
cmp
ret
jle
mov
mov
daa
dec
sbb
stos
loop
and
je
add
ljmp
add
in
add
sbb
repz
push
pop
std
adc
mov
or
push
add
inc
xor
jns
inc
jge
or
jo
add
jle
cld
inc
push
mov
add
add
aam
cld
or
push
or
or
push
inc
in
test
or
cmp
pop
notl
add
mov
jnp
inc
in
or
mov
pop
mov
dec
cmp
mov
inc
push
push
pop
das
and
xor
xchg
aas
sub
push
bound
add
out
and
push
adc
sbb
jae
jbe
jae
add
bound
inc
adc
add
test
add
cmp
add
aad
scas
inc
xchg
sbb
aad
mov
outsb
jle
shl
movsl
cli
in
add
negb
sbb
push
and
aam
fimull
jb
sarb
les
loop
out
mov
and
aad
test
xor
jbe
notb
xor
fadd
adc
xchg
out
pusha
jecxz
push
es
cld
or
add
mov
fs
insl
imul
sub
add
adc
or
or
add
and
push
call
jmp
imul
add
mov
mov
call
jl
insb
jae
mov
jmp
frstor
insl
push
shll
add
add
mov
xor
pop
pop
add
pop
push
cmp
mov
jge
push
xchg
sbb
bound
test
lret
pop
inc
jae
popa
and
or
mov
sub
jmp
into
jle
movsl
and
call
push
insb
push
outsb
xchg
lret
pop
add
sub
fsubs
inc
hlt
jae
inc
testl
dec
mov
std
mov
out
add
std
or
ffree
add
fistl
push
repnz
add
movsb
js
xorl
mov
daa
dec
loop
xchg
repz
dec
push
call
mov
jb
aad
setne
jle
hlt
xchg
sub
cmp
add
jno
jmp
imul
aad
push
cli
jecxz
jae
add
or
adc
inc
push
jbe
push
and
pop
mov
mov
rcll
pop
adc
adc
scas
pop
inc
or
add
aad
outsl
clc
aam
jg
shll
cli
aam
adc
shl
repz
out
popl
add
pop
test
xor
mov
sub
add
jb
je
lret
adc
mov
leave
mov
add
loope
imul
je
loope
imul
je
rclb
aam
lods
adc
mov
out
fcmovnb
lds
popf
sti
sub
enter
adc
lock
sbb
pop
roll
imul
or
push
adc
cmpsl
dec
xchg
mov
dec
or
lods
ret
lods
or
jb
into
sbb
and
lock
fsubrl
or
lret
lock
aad
push
es
sub
mov
adc
enter
mov
jmp
push
das
add
xlat
mov
std
movsb
mov
adc
mov
jns
jae
call
or
insb
test
testl
mov
xor
push
rorl
pushl
adc
testl
add
pop
mov
or
add
aas
add
dec
push
push
mov
cli
jne
nop
arpl
in
inc
jne,pn
or
add
and
pop
xchg
or
rol
mov
push
push
push
pop
xor
or
mov
dec
push
push
lret
xchg
mov
inc
push
or
add
ljmp
out
lea
add
jne
add
lea
sbb
cmpsl
jge
pusha
aas
sbb
add
adc
cmp
jge
fstps
pop
subl
mov
je
add
shl
jae
jp
push
fiaddl
adc
jb
jne
add
inc
pop
adc
enter
aad
inc
pop
add
adc
pop
cs
adc
cli
push
fwait
das
sub
xlat
xchg
adc
add
jo
pop
inc
cmp
xchg
jb
and
inc
gs
add
arpl
popf
jno
add
sub
daa
vpunpckhbw
xchg
mov
jl
sahf
jnp
and
push
mov
aad
sub
add
push
out
add
aad
mov
or
inc
inc
add
mov
dec
std
xchg
adc
pop
fistpl
add
int3
daa
pop
dec
andb
mov
ljmp
int3
jae
jle
adc
push
fs
jmp
ret
add
test
jns
pushaw
hlt
leave
mov
sahf
xor
call
lret
sbb
arpl
icebp
jno
cld
add
aam
test
ret
call
sub
add
or
mov
push
outsl
xorb
ud0
dec
stc
aas
jmp
xchg
adc
add
push
jmp
std
adc
test
push
jle
xor
sub
mov
pop
pop
pop
decb
add
jmp
push
add
jae
add
mov
adc
push
repz
paddusw
jne
ffreep
call
aaa
testb
fcmovnu
adc
add
xlat
xor
clc
push
jmp
or
call
test
pop
pop
pop
cmp
or
jo
mov
push
call
jecxz
out
add
rolb
add
inc
inc
imul
gs
adc
jo
or
lods
adc
inc
xor
jnp
fwait
dec
inc
or
popf
jns
xchg
dec
push
sub
push
arpl
out
add
dec
push
das
idivb
dec
stos
push
js
pop
dec
in
and
out
pop
aas
pop
mov
sbb
sbb
add
or
add
push
pop
adc
or
add
neg
jno
insb
pop
popa
jno
aas
or
inc
stos
mov
jmp
rorb
xchg
push
jns
popa
fisttpl
sub
call
adcl
push
add
add
into
hlt
pop
pop
call
and
add
pusha
pop
cld
pop
add
fistl
push
loope
mov
pop
faddp
ljmp
mov
jle
movb
mov
add
and
lds
out
data16
adc
xchg
pusha
add
mov
jmp
mov
scas
xor
jmp
mov
jae
pusha
jae
add
mov
mov
push
pusha
subl
cmp
cld
xchg
or
rcr
mov
sahf
mov
mov
cmp
call
push
push
and
sbb
repnz
in
dec
data16
or
pop
lret
sbb
loopne
mov
mov
xchg
push
roll
add
clc
xchg
adc
add
insb
hlt
jb
hlt
cmp
movsl
roll
xchg
lds
add
std
jne
repz
mov
dec
decb
outsb
and
cli
mov
movb
test
insb
add
arpl
mov
imul
insb
imul
es
test
add
cmp
add
out
or
mov
add
insb
add
sbb
je
arpl
mov
cmp
jae
pop
imul
add
aam
inc
jae
negl
mov
dec
inc
testb
in
push
aad
aas
inc
or
rorb
xor
lock
rclb
call
cld
jnp
int3
adc
jno
imul
dec
inc
pop
clc
lahf
mov
aam
lcall
hlt
pop
add
mov
add
pop
push
mov
cmp
out
aam
sub
test
sub
aad
lods
pop
rorl
mov
jge
aad
jl
inc
cli
ret
fiaddl
out
add
idiv
push
and
pop
jb
mov
xlat
jno
repnz
or
test
or
sbb
repz
cltd
add
lahf
mov
hlt
dec
cli
aas
jmp
add
fwait
and
or
and
and
out
dec
sbb
add
mov
add
ror
mov
les
xchg
leave
repnz
add
pop
jne
test
jbe
fdivrl
add
aaa
push
call
mov
popf
rcll
fisttpl
sbb
into
data16
out
pop
ja
push
mov
push
add
push
or
cli
inc
insb
add
call
mov
add
insb
sbb
mov
jb
xor
inc
xor
or
out
mov
jae
jo
jae
aad
add
xlat
ds
pop
cs
mov
lea
daa
jae
je
aad
add
cmc
jo
mov
cmp
icebp
loop
decw
out
bound
dec
and
fcom
out
pop
pop
cwtl
cmpl
jns
push
loop
or
sub
pop
aas
mov
repz
call
mov
mov
test
decl
xlat
push
nop
adc
je
mov
jmp
or
or
lret
test
aad
insb
inc
hlt
cltd
jp
bound
push
scas
test
and
pop
dec
in
dec
or
add
call
scas
jns
xchg
jnp
adc
out
or
lods
adc
mov
arpl
clc
add
imul
bts
dec
jae
movl
or
push
push
pop
popf
out
fsubr
lock
push
push
add
sub
jg
lea
lahf
push
sbbl
dec
add
roll
adc
packssdw
into
sti
push
fwait
mov
stos
out
mov
repnz
call
cld
mov
or
pusha
lcall
adc
aad
mov
push
push
in
dec
push
push
add
adc
or
jl
mov
or
cmp
cmp
ds
ret
sahf
add
jg
cmc
jae
sub
and
aam
cld
xchg
mov
sub
push
je
mov
or
add
inc
xlat
mov
ljmp
cmp
leave
pop
xor
icebp
inc
std
jmp
dec
inc
addb
and
jb
lret
jae
inc
cmp
ds
cmp
sub
decl
xchg
sub
mov
mov
add
aad
cwtl
pop
aad
xchg
push
rcl
aas
aad
insl
add
jne
mov
jg
mov
mov
mov
lods
sti
dec
cmpsl
imul
inc
popa
mov
add
dec
insl
or
sub
int
aad
test
push
rcrl
mov
imul
pop
jmp
dec
add
cwtl
in
pop
and
and
mov
add
or
lcall
push
int
in
xchg
add
mov
insl
loope
lret
mov
aad
ficomps
add
push
push
mov
and
mulb
pop
xlat
in
loope
xchg
adc
or
in
iret
or
punpckhdq
frstpm(287
test
insb
popa
inc
mov
adc
rcrb
fwait
push
orl
mov
pop
jle
or
dec
add
sbb
and
add
push
add
pop
pop
inc
push
imull
in
add
or
xor
push
jmp
mov
sbb
addl
add
mov
add
out
xor
pop
mov
daa
mov
rcrl
repz
or
sarb
notl
dec
push
call
push
push
pop
add
xchg
mov
add
pop
pop
push
push
outsl
adc
pop
hlt
movsl
xchg
idivb
dec
add
xchg
add
xchg
mov
add
xor
decb
pop
fs
je
push
mov
or
add
aam
jbe
aas
enter
pop
test
jmp
int
jge
std
adc
or
aaa
lea
mov
inc
add
sub
out
insb
pop
test
rclb
mov
inc
mov
inc
push
pop
pop
jmp
inc
mov
sahf
stos
mov
adc
jle
push
clc
cli
adc
jge
loopne
aad
or
mov
in
shll
mov
dec
add
testl
or
pop
pop
mov
cltd
inc
pop
aad
xlat
repz
idiv
mov
inc
ljmp
dec
jb
sub
jmp
jno
or
mov
pop
push
popa
rcr
jle
mov
fstp
adcb
jg
and
mov
fsubr
adc
push
call
add
or
ret
ljmp
loopne
add
push
xchg
and
out
add
pop
jnp
out
inc
fs
es
das
pop
faddl
cmpsl
xor
pop
push
outsb
jg
aaa
pop
cmpsl
test
or
pop
imul
or
cltd
pop
mov
mov
xchg
sbb
ds
insb
pop
iret
adc
push
sbb
aaa
sub
hlt
int
inc
test
add
jl
sub
inc
test
jo
jb
push
xlat
loop
mov
movsl
fists
sub
scas
pop
sub
or
inc
mov
bound
test
pusha
test
mov
cld
andb
bound
out
pushl
test
or
test
insb
or
mov
mov
ljmp
lods
jae
inc
jne
sldt
stos
sti
sub
jmp
mov
add
jne
por
cmp
jl
jmp
cmp
push
mov
pop
push
mov
mov
addb
xchg
or
mov
ss
test
aaa
sbb
in
xchg
jle
mov
ret
jbe
sub
or
ret
jmp
xor
add
mov
push
mov
bound
pop
aad
add
pop
in
or
imul
test
mov
data16
push
cmovp
test
push
gs
and
pop
mov
mov
jle,pt
jecxz
pushf
and
push
lods
xchg
lock
add
push
iret
sti
push
jo
adc
xor
jmp
or
pop
sub
ss
loope
fcmovb
jb
test
pop
sbb
mov
lods
int3
or
sbb
mov
lret
imul
add
les
test
pop
neg
or
mov
add
or
dec
repz
in
call
inc
in
aad
sub
fcmovnbe
int3
pop
rcl
les
mov
dec
mov
scas
mov
jno
pop
jmp
dec
je
dec
dec
mov
sub
inc
aad
push
push
jnp
fidivrl
xchg
xor
dec
xor
call
push
or
mov
bound
inc
push
jb
mov
lea
std
dec
outsb
or
lea
dec
mov
push
js
popf
aad
push
add
call
mov
loope
or
mov
pusha
push
push
push
pushl
outsl
enter
orl
leave
repz
das
or
and
add
je
inc
cld
out
push
mov
les
add
cli
out
push
or
push
lcall
add
sbbl
or
cmp
or
add
jl
stos
cmp
or
jmpw
add
pop
mov
test
and
mov
dec
std
adc
inc
dec
push
mov
popa
imul
and
sub
loopne
and
xor
addb
popf
inc
into
or
fistps
add
test
sbb
mov
filds
repz
add
dec
pop
add
loop
add
push
mov
fisttpll
stc
pop
imul
test
gs
cmp
das
push
mov
mov
jae
lods
mov
scas
ljmp
sbb
pusha
pop
mov
add
adc
jo
xchg
add
imul
push
scas
neg
mov
mov
sub
imul
add
int3
data16
sbb
stos
clc
int
jle
or
inc
outsl
sarb
hlt
scas
inc
pop
enter
xor
test
enter
loop
cmpsb
mov
pop
daa
mov
lret
cld
mov
add
adc
inc
dec
pop
mov
lods
ret
lock
pop
dec
call
cltd
xchg
dec
sbb
cwtl
or
push
xchg
cmpsl
add
mov
jmp
sahf
sti
mov
stos
out
out
out
add
jle
mov
xchg
adc
dec
xlat
sbb
dec
cmc
test
mov
je
add
pop
aam
imul
mov
push
rolb
sub
les
push
add
mov
aad
or
arpl
fimuls
or
inc
in
xchg
inc
pushl
mov
mov
jle
inc
rorb
mov
or
mov
or
movsb
and
mov
jae
jae
mov
and
cmp
add
test
inc
xchg
xchg
jmp
clc
or
push
incl
or
std
mov
fnstcw
dec
xor
addl
mov
or
push
sub
cmp
inc
hlt
cmp
inc
clc
aad
push
inc
jmp
js
addps
push
fiaddl
cmc
sbb
mov
shlb
cmpsb
repnz
popa
icebp
imul
mov
mov
aas
jb
js
add
addr16
ret
or
jge
in
xchg
std
jb
fstpl
add
bound
aad
add
or
xlat
pop
out
jmp
in
mov
jl
adc
dec
add
dec
push
adc
jge
and
lret
mov
push
repz
movsl
push
add
imul
xor
fcmovne
aas
jae
inc
sub
add
dec
mov
xor
jmp
pusha
add
mov
jle
adc
push
or
rcrl
movsl
or
jle
mov
int3
mov
or
pop
mov
or
loop
or
or
mov
lret
jle
inc
fbld
or
add
adc
cmp
fcom
or
mov
decb
bound
add
fcoms
jecxz
addr16
add
cld
jp
inc
jmp
sbb
jbe
or
or
inc
adc
mov
add
or
mov
in
add
add
adc
and
or
sbb
aad
cmp
aad
cmp
ss
mov
dec
xor
push
inc
cld
stc
test
sti
jmp
incb
cld
or
loope
push
inc
in
mov
or
add
push
push
pusha
jle
or
mov
mov
jb
add
stc
test
test
pop
or
ror
jmp
adc
mov
hlt
mov
mov
or
fcmovnbe
push
addl
out
dec
cmc
addr16
sbb
setne
jns
stc
jbe
jae
mov
loopne
jb
push
repnz
incb
test
pop
insl
adc
adc
add
jle
decb
mov
mov
clc
repnz
aad
inc
jae
dec
lods
repz
dec
mov
outsb
xor
or
inc
mov
leave
mov
call
fdiv
bound
adc
lods
rcl
dec
pop
out
or
aad
sbb
orb
fldcw
inc
sahf
dec
mov
sbb
add
mov
jmp
fistpl
push
sbb
fadd
mov
lcall
fwait
in
call
dec
inc
bound
dec
roll
pop
sti
jecxz
cmp
or
or
lcall
jp
dec
mov
push
icebp
nop
in
xlat
cmp
pop
es
subl
add
xchg
or
pop
ljmp
xchg
imul
stc
aam
add
mov
call
movl
inc
push
stc
rclb
das
out
lea
int3
pushl
pop
out
cmp
xor
inc
imul
jmp
testb
or
add
outsb
jmp
or
loop
xchg
add
xor
ljmp
dec
or
mov
cmp
mov
roll
mov
aam
scas
add
lcall
dec
xor
ret
and
filds
iret
or
pop
lahf
pop
adc
jg
pop
mov
inc
add
mov
cmpsb
mov
fadd
dec
decb
mov
fldenv
inc
and
xchg
or
inc
inc
cmp
push
jb
push
pop
mov
inc
aad
cmc
jecxz
repnz
loopne
lock
aad
inc
je
cmpsl
cmc
add
add
stos
add
mov
roll
xchg
pop
mov
adc
arpl
call
je
add
lods
in
fcmovnb
jo
push
add
jne
div
push
xor
lea
add
mov
pop
inc
aas
int
push
dec
cmp
sbb
lds
or
add
xlat
popf
aaa
push
aad
xor
add
ret
xchg
fdivs
or
inc
mov
lds
imul
shlb
sar
cmpsl
dec
push
sti
mov
cli
sbb
xchg
sub
adc
lock
out
iret
iret
testb
enter
mov
xor
xor
insb
les
pop
mov
jb
das
fadd
cmc
add
aam
int
xor
pop
mov
cmpsb
mov
mov
es
aas
test
rorl
add
push
inc
inc
lea
aas
jmp
or
call
inc
inc
dec
push
mov
out
orl
pusha
mov
cmp
stos
or
jmp
ss
orb
call
shll
je
enter
pop
add
jge
mov
jp
inc
in
pop
pop
add
out
test
inc
incb
stc
fsin
jae
mov
cmp
test
std
incl
or
and
enter
dec
or
jmp
pop
mov
mov
inc
push
je
add
fiaddl
cmp
daa
call
aad
std
xor
and
sbb
cltd
stc
push
insl
lock
jp
mov
loop
inc
gs
jb
dec
cs
divps
jle
pop
in
mov
sbb
jae
xor
xchg
adc
xchg
clc
adcb
inc
cmc
nop
cmp
data16
das
add
jae
pushl
mov
test
pop
sti
mov
imul
int
into
adc
or
and
popa
arpl
add
mov
add
clc
push
cmp
inc
jnp
idivb
int
ror
mov
clc
dec
into
pop
inc
mov
push
push
aam
cmp
pop
add
fdivp
scas
dec
xchg
adc
fisttpll
sbb
or
push
inc
pop
rcr
xchg
mov
push
sbb
cmp
push
jmp
push
mov
add
xor
mov
cmp
jb
fadd
in
aam
add
or
cmp
push
imul
jmp
add
or
outsb
fdivrl
jmp
pushl
add
mov
push
adc
repnz
cmpsl
xchg
cmp
jmp
or
mov
xor
jle
and
or
jmp
push
or
fistl
or
pushl
fldl
jbe
push
add
add
in
testl
cmc
jbe
jmp
sbb
test
dec
or
dec
adc
lret
jmp
ja
test
jnp
or
xor
pop
jne
push
add
or
push
ret
add
into
adc
sub
mov
aad
insb
cld
or
decl
xor
aad
add
dec
push
incl
jne
jmp
inc
push
out
mov
jns
mov
sbb
and
mov
push
ja
in
ret
push
out
gs
call
add
xchg
lret
push
and
mov
movsl
mov
aam
fsubrs
mov
stos
xor
ret
clc
inc
aam
add
fdivr
push
addr16
push
add
adc
mov
or
dec
xchg
in
in
addl
lret
lods
mov
subb
xchg
push
jmp
sti
dec
adc
lcall
xchg
push
inc
add
mov
dec
mov
jge
mov
out
push
dec
pop
or
bound
add
lock
xor
push
aaa
cmp
mov
scas
and
or
scas
or
sbb
notl
stos
or
fdivl
movsl
fidivs
push
inc
sti
mov
mov
out
mov
add
dec
int
push
loop
addr16
idiv
ret
nop
sub
or
push
pop
mov
jmp
add
xor
mov
push
pop
mov
sub
mov
push
sbb
fdivl
hlt
decb
icebp
mov
push
xchg
sbb
ss
decb
pop
adc
in
jb
jmp
pushf
lret
push
jo
add
or
inc
add
dec
std
adc
xor
std
xchg
sbbl
inc
pushl
sbb
incl
pop
out
mov
jno
xor
jle
jnp
jb
xlat
push
mov
or
call
lcall
mov
fsts
adc
decl
movl
sbb
add
pop
sbb
jne
fs
fidivrl
loopne
incl
add
es
xchg
and
jne
and
lcall
and
push
ret
adc
popf
mov
repz
fdivrp
sti
and
xchg
cmpsl
push
mov
xorb
adc
aam
xor
inc
push
loop
sbb
add
aad
fsubl
add
cmc
aaa
loopne
adc
add
add
or
sbb
sbb
shlb
sbb
leave
call
add
and
and
lea
shrb
inc
or
testb
jns
mov
mov
mov
ljmp
aad
fwait
push
incl
mov
xlat
imulb
ret
dec
or
or
or
push
and
push
xor
mov
leave
inc
addr16
test
jmp
jmp
fsub
pop
jmp
xlat
push
add
push
lret
mov
loop
xchg
test
xchg
aam
icebp
roll
inc
or
push
xor
mov
lock
add
or
lds
add
or
enter
pop
xor
pop
xor
leave
or
pop
xor
or
or
fwait
or
jmp
inc
jb
add
and
jns
lret
sub
add
ss
and
jnp
and
or
pop
add
pop
xor
mov
inc
rorb
mov
add
aas
loope
push
mov
cwtl
lret
addr16
pop
inc
add
mov
mov
xor
je
test
push
dec
lock
jl
add
sbb
jl
add
pop
std
nop
test
add
out
push
push
xor
add
movsb
fisubrl
xchg
and
inc
popf
inc
je
int
jmp
addr16
sbb
loop
push
add
cli
movsl
mov
jae
gs
out
mov
lahf
mov
data16
cmp
jb
bound
add
mov
sar
add
fistpl
jecxz
enter
jmp
jecxz
and
inc
jle
sub
pop
cmp
jae
movsl
jecxz
and
add
add
roll
mov
add
sbb
add
int3
xchg
lock
jle
cmp
sub
dec
cmpsw
lea
pop
dec
repz
repz
jecxz
in
xchg
xor
mov
es
ret
ret
cmp
fidivrl
faddl
subl
lea
sub
fs
jle
mov
add
or
push
outsb
or
fcom
cltd
into
addb
push
jb
fsts
push
xor
jmp
pop
or
jmp
push
pop
jae
bound
mov
adcl
ja
jle
sbb
jmp
or
mov
pop
sbb
out
add
fiadds
xor
add
imull
das
call
mov
lods
fidivs
push
dec
xchg
jge
add
insl
add
rolb
mov
out
mov
push
push
mov
sub
cmpsb
incb
xor
or
dec
and
jns
xor
dec
jne
push
pop
pop
add
push
addr16
inc
add
in
ljmp
xchg
add
push
sub
push
mov
xchg
add
inc
sbb
lea
push
cmpl
std
push
decl
incb
orb
aad
inc
add
popa
enter
jo
insl
mov
mov
jecxz
into
clc
push
inc
add
inc
bound
add
mov
mov
add
and
dec
or
cmp
loope
popa
sub
mov
and
push
aaa
add
pop
mov
test
mov
inc
arpl
jmp
mov
jg
push
add
jo
xor
pushf
or
mov
and
push
fisubl
xlat
mov
add
jg
cs
shl
mov
mov
add
test
cmp
sub
fidivrl
sub
inc
faddl
test
xchg
test
cld
cmp
push
in
out
xchg
add
pop
jl
sbb
imul
xor
leave
add
fs
dec
out
push
or
add
out
push
leave
lcall
mov
add
jae
jae
je
push
add
ja
clc
int
lret
push
dec
std
and
cmp
mov
mov
add
fists
enter
lods
lods
insb
sti
mov
jae
xor
mov
sub
test
dec
mov
mov
sbb
dec
out
int3
inc
xchg
jle
data16
movb
std
test
xlat
in
je
pop
or
adc
inc
hlt
and
or
push
inc
cmp
add
pop
testl
pop
movsl
movl
mov
incl
roll
sbb
cli
add
adc
cmp
hlt
ret
push
enter
in
bnd
add
out
add
out
add
dec
adc
or
movsb
js
ret
andl
pop
add
mov
adc
std
adc
aad
or
inc
add
jge
jmp
test
enter
dec
mov
mov
aad
add
aad
mov
movsl
sub
push
sbb
mov
add
lods
or
std
fisubrl
add
nop
pop
mov
inc
fidivs
nop
lods
add
divb
cwtl
pop
scas
into
mov
fmul
pop
sbb
mov
mov
incl
leave
jae
or
xlat
popf
jmp
inc
pop
dec
inc
loope
sub
shrb
or
xor
mov
sub
or
in
int
add
add
aad
arpl
loope
mov
cmpb
push
lret
movb
mov
rclb
pop
aas
jno
dec
dec
rcrb
sub
sub
mov
int
xchg
mov
shll
xchg
xor
sub
or
push
test
pop
xor
stos
or
incb
movsl
xchg
aad
adc
aaa
push
jmp
add
xchg
or
lcall
test
mov
pop
inc
add
shll
inc
jmp
and
sub
or
mov
push
test
jge
mov
out
insb
cltd
lcall
rcrb
xchg
add
out
rorb
add
xchg
pop
stos
jmp
add
out
loopne
inc
je
out
rorb
shr
rclb
out
or
std
jmp
fldt
daa
call
les
mov
int
push
pop
int3
out
mov
iret
xor
rdpmc
shrb
je
jne
and
mov
gs
out
cmpsb
les
sbb
jmp
or
push
mov
cmpsl
enter
std
ljmp
fldt
aad
inc
gs
in
pop
sub
push
push
jae
mov
test
decb
inc
push
pop
ret
jge
sbb
data16
lods
sbbb
aad
add
loopne
and
xchg
inc
out
cld
xor
push
repz
dec
pop
out
push
fidivl
xor
ds
out
xor
add
jae
pop
pop
sub
test
jmp
js
sbb
andl
scas
inc
add
adc
repz
or
add
adc
sahf
fisubl
outsl
nop
enter
movsl
cli
ret
mov
xlat
sub
or
out
or
add
mov
test
or
mov
loope
mov
lds
shrl
fstpt
movsb
dec
xchg
or
push
mov
sub
dec
push
or
dec
roll
dec
or
pop
or
add
arpl
fsubrl
inc
jmp
push
and
push
call
xor
mov
push
add
add
and
hlt
jle
aas
jmp
jb
add
stc
mov
pop
push
daa
cltd
and
cld
inc
stc
aas
jmp
jmp
cld
test
and
dec
decb
out
add
popf
repnz
add
ret
mov
mov
nop
xor
mov
xor
repz
push
pop
pop
or
test
add
adc
popa
and
jno
or
ds
mov
or
adc
fistpl
push
push
dec
sub
call
daa
fiadds
je
or
je
or
test
xchg
or
lret
pop
ret
mov
sub
fwait
shl
add
adc
push
dec
sub
push
xor
adc
in
or
inc
or
sbb
out
int3
rcl
aam
arpl
jnp
sub
adc
popa
dec
sbb
mov
cmp
ret
cmp
jno
pop
inc
pop
xor
add
loopne
push
mov
shrl
cwtl
ljmp
push
or
adc
hlt
cli
dec
outsb
out
push
cmp
movl
icebp
rclb
add
out
bound
adc
adc
loop
jmp
fs
rcr
xlat
mov
or
fimuls
jmp
add
or
in
test
sbb
pop
lods
sub
imul
pop
cmp
and
sub
mov
je
ret
mov
mov
mov
add
or
add
mov
add
lock
jp
or
sti
mov
popa
push
add
or
cld
sub
bound
pusha
int3
repnz
pop
cmp
xor
sbb
adc
cmp
xor
mov
sub
cmc
call
xor
negl
fstp
mov
scas
push
pop
je
add
pop
mov
std
jle
mov
roll
add
add
addr16
xlat
or
fs
pop
push
pop
xlat
imul
adc
test
out
popf
pop
push
adc
xchg
fcompl
je
jecxz
testl
lock
call
mov
std
decl
pop
gs
sahf
ljmp
add
aaa
push
push
jge
incb
in
or
cltd
mov
std
mov
jne
outsl
jo
add
mov
pop
pop
inc
and
incl
add
pop
imul
jmp
std
std
jo
inc
cmp
repz
sbb
push
xor
std
aad
sub
aam
add
pop
push
sub
add
push
lock
lcall
mov
pop
and
mov
dec
das
push
dec
pop
test
loope
mov
cmp
or
stos
cmpsl
pop
mov
xlat
mov
test
add
aad
mov
decb
sub
pcmpgtb
jb
test
stos
mov
fdivrl
jne
adc
mov
dec
jg
adc
ss
std
sbb
es
in
inc
stos
sub
sarl
xchg
and
scas
into
sbb
sti
xor
dec
push
xchg
or
scas
es
mov
out
pop
push
shr
rorl
jmp
clc
cli
mov
sbb
hlt
add
or
jge
or
mov
mov
icebp
inc
pop
into
lock
xchg
sub
add
dec
ror
inc
mov
repnz
pop
in
jbe
push
pusha
jg
sbb
popa
xchg
mov
xor
inc
test
mov
or
add
pop
decb
pop
push
shl
mov
or
push
popf
or
or
pop
cmc
push
pop
mov
xor
nop
aas
aad
rclb
fnstcw
out
add
rcrb
insl
xchg
cwtl
inc
jb
nop
outsl
std
rcrl
mov
roll
je
inc
dec
mov
mov
out
xor
std
sbb
loope
or
add
add
pop
add
cmc
push
or
jge
adc
lods
push
pop
pop
mov
pop
ret
push
mov
test
or
cmp
jne
xchg
jae
add
mov
mov
shrb
jae
inc
pop
or
mov
jecxz
mov
je
inc
jecxz
mov
dec
mov
leave
and
inc
mov
incl
inc
scas
testb
lahf
cmpsl
rcll
push
icebp
adc
push
stc
push
dec
pusha
cli
add
pop
jecxz
icebp
mov
inc
ljmp
cli
je
xchg
mov
add
mov
scas
or
aam
add
lods
inc
je
outsb
idiv
mov
loop
push
mov
scas
inc
add
jp
testl
cmc
adc
add
mov
popf
and
andb
loopne
scas
sti
xchg
lahf
loopne
sbb
lahf
cmp
adc
lods
fiaddl
stos
sti
jp
enter
popa
dec
cmp
adc
dec
lea
add
add
loope
shl
in
cwtl
add
in
sbb
leave
sbb
loopne
scas
fisubl
jmp
mov
test
sub
push
icebp
add
in
cmp
add
mov
popf
int3
clts
sbb
idiv
pushl
in
adc
sbb
test
add
fnsave
pop
jb
mov
fidivrl
out
or
in
mov
or
or
lods
dec
or
or
mov
or
test
lock
cmc
push
add
xor
call
popf
popa
bound
or
jmp
adc
sahf
cmpsb
pop
mov
aad
ret
add
mov
and
lahf
sarb
dec
test
or
insb
pop
jp
jne
ljmp
decb
mov
jmp
mov
cmc
shrl
jo
andl
add
int
std
lock
andl
xchg
les
sti
ljmp
xchg
xor
sbb
mov
adc
ja
xchg
cmpl
outsl
loope
or
aad
add
pop
call
int3
sbb
xor
mov
lea
fwait
adc
add
mov
in
cmpsl
pop
out
and
loop
decl
lea
push
xchg
testb
stos
rolb
pop
push
mov
fwait
rorl
pop
call
xchg
mov
mov
mov
mov
adc
xor
aas
aad
push
into
andb
aad
rcl
andb
dec
adc
add
sub
mov
call
lods
push
dec
cmp
pop
xchg
or
inc
and
jp
fs
out
ret
std
cltd
sub
and
add
cld
xchg
add
pop
inc
adc
jmp
mov
cmp
and
and
sbb
adc
xchg
sbb
adc
mov
cmp
add
adc
enter
mov
mov
and
cmp
jb
xchg
xlat
mov
stos
mov
and
hlt
adc
roll
cmc
insb
fistps
pop
adcb
adc
mov
fisttps
dec
aas
frstor
adc
jmp
sub
add
add
mov
aaa
ror
mov
mov
add
xchg
andl
pop
push
mov
mov
imul
add
xor
cmp
ret
xorb
mov
fiadds
xor
push
push
call
test
xchg
add
jge
pop
je
mov
fdivrp
incl
add
jmp
mov
mov
out
cmp
std
mov
or
add
std
je
adc
das
jns
call
in
and
cli
xchg
ret
imul
push
loopne
dec
dec
out
adc
xchg
js
and
and
cmovs
jecxz
pop
imul
aad
inc
or
cwtl
sbb
add
sub
popa
cmpb
xorl
mov
outsb
xor
add
dec
sti
sarb
pop
sbb
push
pop
add
jecxz
lahf
das
or
push
mov
or
out
mov
leave
hlt
nop
xchg
add
clc
push
dec
cmp
cs
mov
mov
add
subl
test
cmp
test
or
div
pop
ret
out
mov
icebp
outsl
ret
out
mov
in
pop
ret
out
mov
imulb
mov
mov
inc
push
test
mov
imulb
into
jle
push
and
mov
idivl
jmp
popf
add
cmpsb
add
hlt
sysexit
pop
cmp
cmp
and
ret
enter
dec
movl
movb
clc
sahf
call
mov
stc
dec
inc
mov
jp
aaa
outsl
or
shr
paddd
add
test
xchg
push
fnstcw
cli
push
mov
ret
pop
sub
or
add
add
or
push
in
xor
test
sti
push
jbe
mov
cli
or
add
rclb
mov
arpl
push
sub
mov
out
jae
imul
rcrb
push
push
iret
arpl
push
sub
jmp
lret
or
add
js
incl
add
or
das
and
sub
mov
out
aad
mov
neg
aad
mov
je
cmpl
divb
loop
int
mov
pop
mov
mov
mov
or
adc
xchg
fisubl
inc
rcr
mov
stos
fwait
cwtl
or
rcll
repz
xchg
adc
mov
lcall
aas
aad
sar
jecxz
add
mov
fcompl
or
loopne
sbb
or
ret
dec
andl
adc
call
and
mov
in
add
rcrb
test
cmp
push
int
push
dec
cmp
lods
xchg
aam
add
lahf
subb
fcmovnbe
js
lcall
sbb
adcl
fmull
or
and
mov
add
sbb
and
adc
cmpsb
fsubrp
cmc
mov
or
jl
or
popf
sub
call
fistl
lods
rcr
fdivrs
das
add
adc
lds
roll
mov
cltd
xchg
xchg
jmp
xchg
ret
sbb
and
insl
rorl
add
xchg
add
add
pop
mov
or
fiadds
andb
or
addb
mov
and
and
xor
or
and
das
pop
and
add
add
adc
pop
ljmp
cmp
pop
or
and
je
sub
push
adc
xor
in
pop
lea
dec
mov
leave
std
pushl
xchg
cmp
ret
mov
add
mov
std
je
sub
or
pop
add
fsubrs
push
add
add
mov
pmullw
cmc
scas
xchg
aas
mov
loope
imul
cltd
mov
mov
mov
xor
mov
data16
push
push
mov
mov
aad
cmpb
clc
nop
insb
pop
fstp
push
test
ds
mov
aad
pop
in
cmp
or
adc
xor
inc
stc
adc
dec
fs
aas
aad
and
test
shlb
inc
cld
xchg
or
sub
fcoml
out
popa
xor
lods
fcomip
loopne
ficomps
pop
sahf
in
ljmp
lods
or
mov
mov
out
add
mov
out
mov
jmp
cld
roll
push
sbb
fdivp
push
dec
mov
or
cmp
pop
jp
fwait
xchg
add
mov
call
push
sub
std
push
lret
jl
add
pop
jne
xor
pop
pop
int3
pop
jb
gs
pop
mov
clc
bound
adc
out
push
imul
repz
xchg
pop
mov
push
in
clc
bound
adc
scas
add
mov
push
xchg
jecxz
adc
dec
adc
jae
nop
xchg
add
dec
add
jae
incl
lcall
dec
das
sarb
or
xor
std
subps
subl
inc
jl
scas
add
add
xor
xor
mov
push
or
cmp
or
add
xor
test
sbb
std
xor
or
add
xchg
add
sbb
ficomps
sbb
add
mov
and
cld
xor
add
add
xchg
sub
repnz
add
es
xorb
dec
das
xchg
mov
jmp
inc
jae
add
push
and
dec
jp
testl
gs
sub
jae
bswap
fildl
mov
mov
mov
sub
lock
in
inc
cmpsl
ljmp
lock
fcmovb
jg
mov
xchg
fmul
mov
and
or
add
adc
pop
pop
or
or
rcl
or
add
jo
leave
orl
mov
jge
jle
negb
sbb
ljmp
mov
cld
stos
icebp
sub
push
arpl
cli
pushf
or
push
pop
out
jae
mov
xchg
fs
push
pop
mov
pop
clc
add
sbb
add
out
cltd
push
push
cli
xchg
mov
jecxz
sbb
scas
out
pop
lret
dec
dec
std
pop
loope
out
cmpsb
out
mov
arpl
adc
pusha
mov
or
adc
outsl
incl
es
push
daa
enter
pop
push
ret
aaa
flds
movsl
adc
add
out
xor
ret
xor
push
xchg
lock
push
add
push
decb
test
push
out
lret
insb
fistpll
cmp
call
loop
adc
fldenv
add
mov
std
out
push
ljmp
push
push
cmpsb
std
out
push
ljmp
mov
sub
or
jmp
mov
add
lock
mov
adc
flds
add
xor
incb
xchg
cmp
ret
push
xchg
stos
data16
shll
mov
insb
sbb
push
enter
adc
jbe
test
pop
lea
stc
outsl
cmovo
or
push
aad
xchg
add
mov
push
sub
jle
sarl
pop
add
aad
mov
push
mov
test
popf
inc
mov
add
and
cwtl
test
aad
jl
insl
aas
arpl
jp
inc
jae
pop
mov
aam
push
add
in
insl
into
arpl
push
mov
es
push
ljmp
cs
jl
push
or
mov
test
dec
add
pop
sub
ja
icebp
add
or
mov
sbbb
out
jnp
stos
stos
pop
in
sbb
add
ret
push
out
add
mov
fiadds
stos
cmpsl
inc
pop
or
push
or
lods
xchg
mov
xchg
int3
icebp
shrl
aad
xchg
out
xlat
jge
pushf
mov
cmp
test
inc
xchg
or
xor
add
test
shlb
mov
sbb
hlt
rorb
mov
jge
jno
jmp
jecxz
mov
push
add
sbb
stos
add
pop
mov
push
push
adc
aas
incl
push
or
or
pop
cwtl
or
pop
push
xchg
inc
insl
jnp
add
pop
shll
out
jmp
push
push
or
mov
inc
jae
call
jle
std
push
into
pop
call
in
push
add
mov
mov
add
jg
gs
add
pop
repnz
add
sbb
stc
push
les
add
incl
add
inc
jno
or
dec
jmp
mov
ljmp
imull
insb
or
ss
out
lcall
fnstcw
push
dec
scas
pop
leave
adc
push
cmpsl
sub
add
ret
js
in
sar
xchg
xchg
lar
mov
jae
or
jle
adc
xor
into
or
add
cmp
add
pusha
xchg
push
mov
adc
and
push
dec
or
pop
xchg
add
aad
addl
dec
and
xchg
cmc
out
mov
push
sbb
pusha
or
ja
add
insb
sar
call
jae
out
insl
out
dec
test
cmp
test
mov
call
sbb
or
add
je
add
dec
pop
insb
es
imulb
push
fistpl
push
inc
mov
cltd
cmc
aaa
pushf
inc
or
add
xchg
mov
dec
add
lret
test
aad
jb
cmpsb
jae
test
fs
push
add
or
or
pop
mov
inc
cmpsb
xchg
out
or
jge
cli
addr16
or
in
adc
je
pop
ds
add
out
add
push
mov
shlb
movl
xlat
inc
inc
sbb
mov
jle
loopne
ja
and
add
sub
jo
xor
notl
adc
push
mov
mov
fstl
pop
rclb
in
daa
sub
xchg
jle
loope
hlt
jb
push
jle
jmp
mov
dec
push
cmp
clc
inc
in
std
dec
push
mov
je
movsb
adc
incl
push
add
add
push
call
inc
icebp
push
push
mov
icebp
lea
cmp
cmp
incl
incl
xorb
jne
mov
or
lea
cld
incl
or
mov
xchg
mov
mov
xchg
adc
decb
mov
mov
mov
add
std
addr16
add
sub
mov
aad
sub
cs
inc
call
push
gs
cmp
mov
push
sbb
je
addr16
out
or
push
add
aad
test
push
add
test
add
jge
imul
icebp
fadd
lods
andl
mov
xor
add
js
testl
gs
mov
mov
jne
jge
sbb
push
jb
pop
hlt
aam
dec
test
sbb
out
sub
or
lods
sti
mov
mov
mov
sub
aad
das
int3
addl
adc
cli
fs
std
out
pop
lcall
xchg
loop
cmpsl
sbb
cli
pop
xchg
mov
fistpl
cli
arpl
inc
or
icebp
fistps
cli
pop
and
int3
mov
jp
inc
pop
mov
cmpsl
cmpsl
and
inc
or
sbb
out
jg
or
add
daa
push
push
jb
add
aaa
std
mov
fs
std
fsubrl
push
inc
pusha
pop
xacquire
mov
jmp
nop
inc
call
icebp
push
add
jne
xchg
in
add
pop
mov
dec
lahf
int3
je
dec
push
add
jnp
inc
push
inc
or
outsl
xor
sbb
add
mov
mov
orl
dec
ljmp
test
sub
jne
je
call
mov
icebp
mov
mov
je
clc
mov
icebp
lea
mov
mov
incb
lds
mov
jmp
cmpb
je
xor
add
mov
add
mov
in
cmpsb
push
jmp
cmp
add
add
jae
stc
add
loop
add
mov
ja
dec
imul
pop
ljmp
js
int
lret
outsb
call
mov
loopne
repnz
aad
jmp
cmp
sub
push
pop
popf
sbb
xchg
xor
decb
jg
adc
jge
aad
add
add
and
gs
out
push
aaa
jns
add
loop
push
loop
loop
lds
sbb
lret
adc
rol
call
lea
sbb
daa
sahf
sbb
mov
repz
into
insl
daa
add
lret
dec
dec
cmpl
cmpsb
mov
aad
call
hlt
dec
dec
pop
js
add
mov
aad
call
loope
inc
cmp
push
xor
pushf
in
imulb
decb
movsb
pop
lcall
add
testb
adc
and
mul
mov
loope
in
enter
push
cli
bound
test
bound
in
out
or
cs
push
cltd
adc
mov
add
mov
cld
fmull
mov
or
jb
add
jmp
adc
fsts
mov
jne
fstps
or
jmp
mov
sbb
jmp
iret
out
negb
xor
ret
or
mov
std
push
inc
and
xlat
add
fucomi
das
xchg
add
mov
adc
out
add
lret
mov
stc
pop
je
pop
out
add
jl
or
idivl
decb
imul
call
mov
or
call
adc
std
ljmp
test
or
inc
and
pop
call
mov
sub
cmp
jne
and
add
aam
inc
in
jg
and
test
and
inc
icebp
out
mov
mov
push
dec
push
sub
dec
push
sub
lcall
add
cld
inc
add
mov
aad
in
mov
decl
stc
repnz
pop
daa
in
loopne
inc
incl
adc
cmp
cmp
push
std
add
out
addr16
je
std
in
push
cld
std
cli
or
int
movsb
mov
addb
xor
mov
add
add
inc
jmp
pop
dec
pusha
out
push
stc
inc
stc
mov
adc
mov
pop
inc
xchg
or
dec
jp
push
cli
pop
xor
aad
imul
add
lea
aad
fs
and
dec
aas
enter
add
or
sbb
lret
fnstcw
loop
subl
outsb
jnp
adcl
mov
jle
sbb
mov
or
dec
push
std
imulb
stos
pop
sbb
or
pusha
rorb
add
sbb
std
and
jbe
fiadds
in
cmpsb
and
mov
pop
enter
or
fs
jbe
fdivs
jmp
aas
push
mov
push
cmc
ss
xlat
jae
sbb
pop
nop
mov
jmp
inc
jbe
add
or
outsb
push
arpl
push
rcrb
clc
adc
add
sbb
xchg
sbb
inc
movsb
push
jno
jae
outsb
gs
out
jae
pop
outsl
jmp
add
add
lret
push
pop
and
test
sbbl
push
stc
inc
call
ljmp
mov
pop
sub
cmp
inc
call
adc
std
xchg
out
sti
adcl
mov
popf
std
mov
add
push
xchg
add
add
inc
aad
adc
dec
sti
cld
adc
in
add
push
mov
das
shrb
call
scas
icebp
mov
lret
lea
xor
pop
mov
mov
add
mov
jnp
call
push
mov
mov
addr16
clc
push
int
call
jbe
les
add
jb
jmp
ror
or
enter
xchg
or
pop
jge
cmpsl
add
mov
jnp
call
or
ss
stos
add
adc
stos
push
dec
fisubs
leave
mov
add
push
and
das
js
inc
cmp
ret
outsl
or
add
out
xchg
jecxz
mov
jl
inc
add
add
or
push
xor
rorb
out
pop
mov
pop
aad
and
shlb
and
rcrl
out
or
add
jne
ds
add
jne
in
or
jmp
in
pop
push
in
or
mov
adc
or
jmp
rorb
add
xor
pop
imul
add
or
jmp
rclb
xor
add
in
adc
dec
add
mov
cmpsb
add
pop
std
xchg
jle
lock
fldl
in
adc
mov
pop
shrd
jmp
jp,pt
push
in
call
add
jge
or
push
xchg
jge
lock
add
pop
xchg
push
add
clc
imul
incl
add
loope
out
lock
loop
add
xchg
adc
inc
cmc
jno
mov
ljmp
std
add
jne
pop
jg
arpl
xchg
arpl
out
movb
add
add
ret
out
add
cmp
add
aad
mov
mov
inc
cli
std
push
cmp
call
add
adc
add
aad
mov
add
sbb
std
aad
inc
std
jp
int3
ret
push
mov
mov
xchg
add
and
std
lcall
or
pop
cld
sti
orb
std
pushf
lahf
or
mov
mov
pop
cld
std
leave
lret
add
rorl
test
pop
out
sahf
add
outsl
shr
mov
sbb
mov
les
dec
sub
xchg
out
test
jmp
xor
jnp
lret
inc
fisttps
inc
cld
push
push
das
or
mov
pop
out
aas
or
pop
mov
or
mov
inc
add
aad
cmpsl
outsl
jle
or
pop
push
push
jg
pop
int
add
jbe
fs
jbe
les
inc
jmp
xor
std
lahf
cs
sti
ds
enter
and
je
jnp
je
popa
inc
and
push
loop
jge
inc
je
mov
sbb
jmp
rcl
cmp
cmp
add
and
push
push
push
into
cmp
call
gs
jne
mov
push
call
inc
xchg
mov
sahf
and
push
bound
dec
loope
fisttpll
add
add
lret
push
xchg
ficomps
mov
cli
mov
insb
fimuls
shlb
shlb
mov
in
add
add
add
xor
sti
push
addr16
adc
loop
push
add
cld
loopne
push
mov
jns
lea
in
lcall
or
mov
adc
mov
push
xchg
adc
xchg
std
dec
or
inc
add
inc
xor
add
adc
mov
jnp
ret
mov
xor
jae
cmp
mov
std
mov
sbb
mov
add
out
or
imul
cltd
out
std
inc
push
jg
mov
push
mov
scas
push
std
sub
hlt
adc
mov
inc
pop
sub
sub
and
dec
out
out
pop
aas
add
pop
call
aam
out
out
xchg
int
inc
jmp
xchg
call
add
or
or
mov
add
outsl
jo
pop
xor
fidivrs
outsl
fldl
inc
sti
out
sbbl
inc
lods
lret
mov
mov
jbe
out
sub
out
lahf
dec
out
in
into
sub
into
idivb
add
out
sub
aas
jmp
sarl
std
mov
sub
xor
and
dec
mov
inc
jmp
mov
and
stos
test
es
or
aas
mov
in
add
add
add
mov
mov
or
and
es
or
and
add
adc
int
xlat
adc
jmp
int3
jno
sub
test
cmpsl
sbb
cmp
imul
mov
ret
inc
jl
adc
cmp
inc
jl
std
pop
das
fimull
cmp
dec
add
cmp
add
sub
xor
cli
dec
add
sub
inc
sub
push
xor
fiaddl
out
in
or
cmp
std
incl
cld
xor
roll
js
sub
xchg
cmp
or
nop
ds
jl
mov
repnz
repnz
aad
pop
add
repnz
loopne
push
inc
aad
rorl
outsb
mov
aad
lods
std
push
fs
fwait
movb
stc
xor
pop
or
mov
xchg
mov
mov
add
aad
fldcw
hlt
sbb
push
lret
xchg
repnz
or
adc
insl
arpl
ds
xor
adc
pop
icebp
shlb
hlt
inc
aad
imul
into
dec
out
push
sub
jno
std
ret
or
add
jno
add
xor
mov
leave
or
sbb
icebp
sub
inc
jb
mov
mov
or
nop
cld
mov
dec
out
or
leave
xchg
in
lock
inc
in
pop
add
out
aad
jl
sarl
ljmp
add
add
in
in
sub
fs
call
insl
xchg
pop
jp
cli
fstps
test
rorl
add
pop
setle
adc
add
shl
jmp
insb
inc
pop
cmp
adc
pop
rorb
add
std
dec
js
gs
and
roll
adc
jmp
outsl
add
add
in
push
lret
sbb
stos
mov
add
sti
addb
ljmp
fisttps
lds
inc
fwait
push
pop
leave
ds
push
imul
jge
je
add
scas
mov
stc
cmp
dec
repnz
mov
push
test
inc
xor
inc
fimuls
rclb
mov
push
lea
add
cmp
sti
test
pop
mov
dec
push
push
mov
xchg
adc
mov
rorb
in
xor
pop
inc
lock
xor
and
hlt
mov
mov
adc
cld
lds
dec
cmpl
jnp
jge
pop
or
stc
push
mov
adcl
in
add
in
push
incl
add
fsts
cmpsl
repnz
rclb
dec
cs
push
mov
cwtl
out
xor
ficomps
lds
insl
shll
std
aam
dec
lock
loop
lock
aaa
adc
dec
mov
pop
int
loopne
cs
loopne
jns
loope
mov
into
cmp
sbb
add
adc
nop
dec
out
add
test
stc
sub
es
mov
adcl
test
insl
sbb
dec
sti
lret
jecxz
mov
loopne
les
lcall
cmp
in
in
fs
xchg
enter
fldt
or
inc
add
loope
repnz
pop
lock
push
std
ljmp
xor
add
pop
add
jo
lds
rcr
test
add
fmull
loope
or
in
sbb
inc
jmp
adc
inc
and
out
add
cmpsb
adc
in
jle
cmpsb
xchg
or
ds
cmc
xchg
nop
adc
adc
bound
icebp
cs
insb
mov
fldl
add
or
add
in
or
mov
lret
imul
dec
add
iret
sti
incl
pop
outsl
or
out
aaa
xchg
dec
mov
incl
adc
xchg
mov
or
add
std
push
call
xchg
jl
add
mov
repnz
test
decl
in
add
ret
test
cmpsl
cmp
add
jns
std
push
aad
insl
push
pusha
js
add
lock
fcmovnu
add
out
call
mov
shl
add
nop
in
inc
fnsave
aad
add
cld
jne
jno
jecxz
push
lds
lret
add
repnz
repz
add
xchg
add
add
cld
ljmp
idiv
add
mov
data16
ficoms
mov
in
add
add
nop
or
or
mov
add
mov
sbb
stc
mov
inc
aad
adc
clc
cmpsb
add
add
and
hlt
out
out
push
enter
jne
mov
add
jmp
aad
xchg
jp
add
cmpsb
push
and
mov
mov
add
call
add
xchg
push
nop
inc
cmpsb
inc
aad
xchg
sbb
pop
add
fnsave
push
and
cltd
sti
pop
sub
rcr
xor
inc
in
xor
aas
jmp
icebp
sahf
in
add
xlat
or
jge
lds
mov
aas
jmp
mov
out
mov
push
sbb
add
std
pop
or
sbb
pop
add
hlt
addb
outsl
cmpsb
add
dec
add
lahf
fsubl
xchg
fisttpl
add
pop
in
push
mov
idiv
jne
bnd
mov
add
lock
add
in
pop
shlb
push
stos
imul
push
mov
push
pop
ret
push
mov
cmp
jne
pop
jns
stos
insb
sbb
and
push
incl
notb
add
cld
adc
cmc
dec
sbb
sub
inc
test
cmp
mov
lds
sub
xchg
mov
je
add
leave
sub
lcall
mov
mov
mov
and
arpl
sarl
outsl
or
test
std
or
into
pop
dec
movsl
add
sbb
jne
in
mov
outsl
adc
je
std
dec
out
out
fldl
pmuludq
mov
out
js
or
shrb
jg
and
out
test
add
mov
fimull
out
loop
std
add
out
inc
sti
push
jp
add
inc
ret
xor
inc
cmp
xor
push
xor
dec
sub
dec
and
out
in
inc
aad
lods
pop
push
lret
push
loopne
inc
in
and
add
lea
outsl
addl
mov
adc
ljmp
add
iret
jns
push
pop
pop
aad
jl
test
push
jmp
aad
in
and
ret
rol
outsl
fcmovnu
aam
lret
dec
add
mov
and
xchg
lea
call
xor
xor
std
xchg
pop
stos
fisttpll
mov
xchg
sub
ficoml
leave
std
aad
add
roll
or
std
sub
sbb
outsb
sti
aas
jmp
mov
mov
adc
popa
pop
or
test
enter
lret
or
add
add
inc
call
add
out
std
pushl
and
sti
sbbl
jg
cmp
mov
in
inc
mov
add
cmp
popa
clc
cmp
push
mov
xchg
jns
je
push
and
sub
push
inc
call
test
xchg
addr16
or
jp
mov
push
inc
or
addr16
push
jno
sti
pop
clc
add
out
mov
roll
jmp
pushf
iret
loope
jno
mov
add
data16
bound
lret
ret
cmp
fchs
add
xchg
mov
adc
fcompl
lds
dec
aad
out
push
stos
dec
mov
loopne
shrb
lds
in
add
xor
loope
test
add
lock
ret
std
loopne
cmc
aas
aad
push
hlt
insl
in
add
add
or
rcl
or
nop
push
out
loop
mov
inc
add
int3
aaa
xchg
push
out
loop
cmp
add
lret
out
or
rcrl
clc
mull
add
mov
xor
pop
in
cmc
inc
out
and
loop
add
add
fdivr
lret
pop
mov
imul
out
jmp
aad
sub
and
push
loop
or
add
xchg
repz
orl
cltd
fdivrl
xor
jecxz
xor
dec
add
call
gs
pop
data16
pop
adc
push
std
xor
jae
inc
sahf
xor
fsubs
call
xchg
fwait
cmpb
jae
xor
fsubrs
xor
add
lcall
insb
pop
pop
sub
cmp
std
jmp
lods
loope
in
xlat
or
mov
aad
arpl
call
jmp
int
pop
inc
rol
lods
sbb
in
ljmp
ret
arpl
call
outsl
ljmp
js
or
cmc
adc
add
div
je
adc
sub
add
adc
les
jno
stos
push
jg
sti
je
pop
call
mov
and
movsl
jmp
or
xchg
mov
xor
pop
inc
and
jo
ss
pop
and
xor
loope
rolb
or
jmp
xor
int
ret
adc
pushf
and
or
fs
aad
cmpb
jae
addr16
and
popl
out
mov
add
mov
out
and
adc
negb
mov
dec
jb
pop
inc
and
fwait
inc
jg
add
add
or
daa
fst
fucomp
add
movb
pop
lret
aas
or
stc
xchg
imul
cmp
adc
pop
dec
or
negl
repnz
insb
ret
out
rclb
shll
push
stc
sub
adc
aad
cmpsl
push
pop
cmp
faddp
adc
cmpsl
push
pop
dec
data16
cmp
jne
or
xchg
add
sarb
adcb
or
pop
out
stos
into
std
jb
mov
push
and
dec
push
lods
mov
ss
stos
enter
aaa
call
jb
lret
test
or
sub
sbb
or
mov
loope
and
or
jo
out
xchg
sbb
adcl
add
add
xlat
sbb
sbb
into
ss
leave
or
jmp
sbb
xor
or
ret
in
andl
inc
in
sbb
leave
rcll
inc
lods
addb
dec
or
xchg
jae
inc
lods
mov
or
test
xor
push
es
mov
sbb
mov
and
jno
add
mov
lods
jno
cmpl
ljmp
scas
roll
jmp
cmp
stc
lods
std
ljmp
jno
xor
mov
ljmp
add
neg
adc
orps
fimull
jg
aad
xchg
sti
xor
call
jg
popf
arpl
sbb
add
jo
ss
inc
add
pop
pop
dec
out
add
sahf
lret
dec
aaa
adc
pop
and
in
subl
add
pop
and
adc
pop
hlt
xchg
loopne
add
outsl
add
loopne
inc
stc
mov
jae
fwait
jae
or
push
movsl
or
in
in
mov
push
insb
into
adc
add
stos
pop
add
in
roll
inc
lret
notl
int
mov
xlat
fimull
loope
xchg
loop
mov
int
mov
out
or
stc
ss
and
mov
lret
dec
inc
or
or
add
sub
add
or
mov
mov
icebp
outsl
dec
int
add
add
fucom
or
pop
sbb
mov
and
adc
add
mov
aad
inc
or
pop
push
fiaddl
mov
push
filds
std
mov
test
sub
pusha
mov
into
or
jmp
lea
mov
dec
sub
or
xchg
and
mov
mov
into
adc
mov
je
scas
xor
add
inc
sub
adc
aas
mov
or
aaa
or
rcr
adc
pop
test
and
dec
lea
in
xchg
int3
mov
dec
jmp
inc
add
pop
jmp
add
fsubrl
inc
nop
cld
push
jnp
and
add
fwait
cmp
mov
out
mov
sub
pop
out
pop
ret
dec
shrb
pop
test
cmp
adc
out
xlat
xchg
jmp
add
add
not
loope
add
pusha
pop
add
imul
mov
push
jb
adc
mov
add
dec
add
ficoml
rclb
pop
lcall
sti
loopne
shl
in
aas
push
loop
or
mov
xor
insb
hlt
les
loope
std
rcrb
rclb
stos
jmp
test
and
mov
mov
push
xlat
lods
flds
sub
adc
aam
inc
out
dec
lea
mov
add
mov
stc
inc
aad
cmc
or
loopne
aad
cs
ficompl
cmpsl
add
int
mov
pop
mov
ds
scas
and
dec
nop
leave
idivb
aas
jecxz
xchg
mov
mov
or
pop
adc
push
fildll
xchg
ds
out
cmpsb
inc
push
push
add
or
out
dec
cld
ljmp
std
sbb
mov
add
mov
hlt
adc
std
hlt
fcmovb
jae
and
cld
hlt
add
inc
jmp
push
dec
jmp
and
shlb
xchg
sarb
sbb
pop
stos
pop
xor
pop
stos
std
jmp
into
cli
add
inc
jmp
and
xchg
enterw
rol
icebp
pop
mov
cmpsb
xchg
push
loope
push
std
add
add
mov
je
push
jno
jnp
cld
adc
or
jmp
test
sub
add
mov
add
sbb
add
jno
cld
push
jmp
add
mov
jg
std
push
add
or
je
out
into
lret
out
aaa
push
repz
aam
push
daa
mov
in
mov
push
lea
call
incl
add
ja
call
call
test
jnp
std
pop
jno
add
mov
add
insb
xchg
leave
jae
inc
js
mov
dec
leave
ret
mov
xor
pop
aam
add
imul
mov
dec
or
icebp
out
std
sar
out
mov
jmp
mov
sbb
je
cmp
or
ss
test
add
call
call
das
mov
jnp
enter
mov
push
push
sub
xor
loope
jmp
adcl
pop
clc
dec
dec
fbstp
pop
cmp
shl
gs
aad
scas
add
cmp
fstpt
sahf
roll
sub
in
adc
stc
mov
dec
fcomip
movsl
xchg
add
dec
out
popa
ss
sar
aam
jecxz
call
orb
cmp
jle
lds
xor
adc
ss
arpl
add
jnp
scas
mov
mov
or
pop
lods
mov
in
or
cmp
lds
mov
add
mov
lahf
pop
mov
sbb
das
add
sub
jg
out
les
or
fmul
nop
jnp
ret
leave
call
dec
jl
mov
cmpsl
cmp
cltd
cmpsl
ficoml
mov
and
rclb
or
xchg
sahf
xor
pushl
stos
decb
into
add
pop
mov
add
mov
jg
jb
dec
xor
cs
push
and
adc
sub
add
je
push
sarb
xchg
push
stc
repnz
or
add
stc
jnp
leave
xor
lock
ja
repz
sbb
roll
adc
enter
add
sub
or
xor
scas
push
push
lock
inc
in
mov
mov
or
or
aaa
loop
inc
cmp
sarb
inc
std
sub
lret
mov
fadd
cmp
add
std
sbb
jp
stos
cmpl
mov
pop
push
sub
repz
add
push
pop
add
push
into
mov
rcll
mov
aam
movsb
or
cld
enter
aaa
in
jl
out
and
xor
xchg
jl
xchg
pop
and
ss
dec
leave
mov
lret
mov
jnp
mov
int3
mov
fcmovb
mov
mov
add
and
or
aad
cld
iret
dec
shl
add
cmp
or
shrl
or
add
rorl
fidivrs
push
add
mov
adc
lret
mov
bound
cmp
push
push
add
adc
call
sahf
xchg
rcl
jl
cld
pop
xchg
add
mov
mov
or
fwait
dec
push
jbe
fsts
inc
scas
rcrl
sbb
xchg
sbb
pop
push
adcl
int
adc
into
dec
mov
and
scas
lret
incl
inc
incl
rclb
rorb
test
or
add
or
add
adc
push
das
cld
jae
adc
push
push
push
mov
cld
out
arpl
test
push
in
add
jg
xor
add
sbb
and
add
jp
pusha
ljmp
aad
add
or
jecxz
inc
adc
push
cmc
xchg
mov
push
fidivrl
inc
adc
add
dec
incl
push
mov
jmp
rcrl
call
outsb
lret
adc
testl
or
cmpsl
fsubs
sbb
fcomps
shlb
inc
or
mov
inc
or
cltd
add
inc
leave
jno
add
add
push
sbb
jmp
into
pop
sbb
jno
mov
test
ljmp
sub
jmp
add
jmp
add
jmp
add
cmpsl
add
add
cmpsl
add
jmp
add
cmpsl
add
cmpsl
add
add
ljmp
push
xchg
roll
aad
cmp
leave
dec
mov
out
or
addr16
fisubrl
jo
and
pusha
inc
or
mov
add
clc
mov
pop
push
dec
mov
mov
inc
jmp
sbb
out
sub
sbb
call
movb
or
jmp
cld
mov
cld
mov
add
add
mov
xchg
pop
fisttpll
mov
loopne
mov
sub
push
push
andl
push
mov
pop
mov
xor
fcoms
sti
call
jo
or
insb
dec
push
xchg
add
add
in
inc
adc
sti
mov
insb
or
jne
iret
adc
clc
jo
jnp
sti
sub
or
xchg
jge
cmc
mov
cmc
push
jmp
nop
adc
cmp
je
lret
cmp
push
mov
cli
cli
adc
aad
adc
sbb
jge
in
sub
push
in
cmp
add
add
pop
dec
clc
mov
daa
and
std
mov
inc
je
aad
xor
or
aam
sbb
call
lock
cltd
or
std
adc
jo
add
xor
enter
aad
inc
cmpsb
mov
stc
fneni(8087
sbb
push
xor
movb
and
sub
add
popa
xor
xchg
or
add
stos
int3
lock
dec
mov
mov
add
out
add
test
jbe
int
enter
out
repnz
cmpsl
add
add
add
or
add
sub
jo
xchg
jbe
imul
shlb
dec
out
add
push
leave
fidivrs
or
add
push
das
mov
xor
jmp
pop
sar
leave
mov
lcall
mov
test
or
sbb
ss
nop
lock
push
inc
xchg
dec
stc
jmp
adc
icebp
push
mov
jne
sub
ds
adc
ret
push
sarb
ss
add
push
lahf
mov
stc
fwait
sbb
subl
aas
xor
test
and
mov
sar
call
mov
or
push
testl
or
inc
in
mov
in
dec
or
jns
idiv
arpl
out
es
jno
inc
mov
rclb
test
add
mov
or
repz
in
lcall
xor
push
aam
cmp
hlt
cmpsb
push
call
xlat
xchg
mov
or
movb
add
adc
add
pop
cli
inc
subb
adc
jns
jae
sarl
or
add
and
add
adc
or
data16
ja
rolb
les
aad
or
pop
or
pusha
ret
jge
in
and
hlt
mov
mov
sub
cli
je
jecxz
rep
popf
mov
lock
mov
adc
mov
mov
cmc
or
sbb
icebp
or
xchg
sbb
and
sarb
or
pop
outsb
imul
out
add
popa
lret
lds
repz
shrb
in
sbb
js
add
rolb
jbe
sarb
inc
fimull
hlt
mov
add
push
bound
shl
mov
xor
andl
mov
sbb
sarb
push
sbb
int
in
add
sbb
lds
add
add
jge
mov
fiadds
aas
sub
jb
jp
cmp
std
push
mov
or
rcr
adcl
shl
repnz
cmp
bound
dec
mov
mov
mov
stos
lds
push
jb
mov
mov
add
cld
scas
lret
jne
mov
lea
push
pop
fsubs
scas
aaa
pushf
lret
jb
or
bound
xchg
adc
sub
cmp
out
fs
sub
push
aam
or
hlt
pop
sti
cmp
adc
test
push
add
mov
insl
std
ljmp
xchg
xlat
inc
adc
testb
leave
jno
jge
mov
cmp
aas
xchg
daa
sub
jge
test
adc
aaa
jne
aas
aaa
jge
hlt
icebp
dec
daa
jns
push
add
inc
dec
call
jge
dec
decl
sbb
jle
xlat
dec
call
add
loop
add
dec
adc
imul
sub
inc
in
jge
sub
or
iret
adc
mov
daa
pop
lock
cmc
mov
out
rorb
fmuls
stos
mov
dec
loopne
lods
mov
cmp
add
push
adc
add
add
adc
cmp
nop
mov
mov
test
mov
or
ljmp
add
call
dec
loopne
or
les
add
add
jae
cs
push
xor
pusha
pop
test
sub
xchg
jle
movsb
pop
inc
filds
add
cmpl
xchg
mov
mov
cmpsb
test
cmp
aam
pop
pop
dec
rorb
lea
or
dec
inc
jae
pop
ror
dec
pop
mov
sbb
dec
mov
mov
hlt
test
lods
fbld
icebp
inc
aad
test
xchg
mov
movsb
sarb
xor
add
mov
cmc
push
pop
xor
mov
cmp
pop
dec
sbb
stos
mov
dec
ds
outsl
adcb
roll
es
and
or
test
adc
push
fmuls
add
push
pop
xchg
sbb
push
into
rorl
scas
lret
xchg
add
inc
shrb
dec
test
jle
faddl
inc
hlt
mov
shll
popa
or
inc
rolb
jae
push
in
testl
ljmp
jo
rcpps
hlt
mov
sbb
in
mov
sub
cmp
mov
icebp
mov
inc
xor
inc
cld
movb
add
movb
movb
adc
in
icebp
add
aad
add
sbb
add
and
aad
push
sbb
add
ljmp
inc
popf
decl
adc
cmp
fcmovu
test
add
cmpsl
cmp
fnstsw
push
pop
fstl
mov
add
mov
add
nop
pop
cmp
push
lahf
incl
lock
cmpl
or
push
mov
or
dec
pop
rcrl
push
divb
repz
mov
dec
pop
pop
sbb
movsb
mov
sbb
lods
mov
out
je
shrl
pop
xor
xchg
mov
inc
scas
fiadds
inc
test
loopne
jbe
lods
and
ret
mov
dec
enter
sub
pop
inc
repz
jb
rcrl
ss
add
mov
stc
dec
dec
in
push
ficoml
adc
lret
call
dec
call
loop
jb
insl
or
mov
or
ret
pop
mov
test
xor
inc
lods
inc
sbb
xchg
dec
pop
hlt
pusha
test
xchg
push
jg
call
loope
push
leave
pop
inc
lock
sbb
out
das
call
pop
jle
lock
mov
mov
add
mov
ss
aam
test
add
or
jno
std
ljmp
adc
popf
jl
lock
roll
sbb
cli
dec
mov
xchg
xchg
inc
adc
jl
clc
push
scas
sbb
pop
inc
cmp
lods
in
jne
jle
in
movsl
icebp
repz
jns
add
repz
add
jp
fadds
jmp
sahf
xchg
mov
int3
decl
iret
xor
mov
push
out
dec
mov
sub
pop
jne
sub
inc
mov
pop
mov
inc
sbb
add
or
int
pop
call
shll
pop
fmuls
sbb
add
pop
mov
mov
add
push
add
and
xlat
sbbb
or
rorb
imul
popa
inc
jmp
shrl
jg
mov
sarl
iret
mov
push
add
mov
mov
movsb
iret
fadd
mov
lea
scas
ljmp
stos
jo
add
jns
repz
scas
add
push
sub
jb
cmp
das
in
jle
or
fmuls
add
std
lahf
rcll
pop
cmp
call
mov
ret
and
orl
pop
xchg
xchg
sub
test
lock
inc
adc
push
daa
outsb
jge
inc
cmc
dec
fdivl
add
add
or
sub
mov
jb
mov
cltd
pop
or
push
push
mov
sbb
mov
pop
push
adc
mov
cli
mov
xlat
ret
inc
not
orb
cs
test
jle
call
xchg
decl
cmpb
or
pop
enter
pop
decl
push
mov
dec
clc
inc
push
fdivrs
jge
decb
add
mov
fdivs
inc
fmuls
dec
push
in
bndstx
lock
dec
decl
sti
jne
jne
clc
mov
or
jo
inc
hlt
out
ljmp
mov
ljmp
push
std
mov
data16
jno
rolb
add
js
adc
test
or
mov
outsb
add
inc
fsubrl
mov
in
jnp
adcl
rol
sbb
add
sbb
adc
sbb
mov
xorl
int
pop
jne
jge
dec
std
lds
jecxz
mov
sti
stc
inc
jno
pop
or
and
fnsave
outsb
push
and
cmp
aad
jo
adc
cmpsl
xor
or
test
fstl
and
cli
nop
cmp
push
iret
jmp
add
and
aad
testb
and
sti
repnz
and
int
push
mov
pop
fucomi
rcrl
xlat
leave
or
sbb
lods
int
mov
mov
xchg
mov
push
shr
test
adc
out
fsubs
add
mov
shr
sar
jno
std
push
gs
aad
movsl
add
fwait
leave
jae
dec
sbb
out
jns
in
mov
mov
std
sbb
xchg
jae
sub
mov
xchg
inc
xchg
cmc
jle
nop
inc
in
add
rclb
popf
add
push
mov
sub
add
dec
lock
dec
dec
lock
aad
add
gs
cs
dec
in
stc
pop
dec
in
push
rcll
shlb
movsb
std
add
inc
pop
mov
cmp
ret
push
mov
es
sub
inc
push
xor
cld
inc
mov
and
test
mov
imul
or
mov
and
loopne
dec
adc
lret
mov
dec
dec
and
add
cmpsl
mov
sbb
or
pushl
or
mov
xchg
and
in
or
addr16
push
sbb
cmp
outsb
test
push
add
lcall
cmp
ret
or
das
hlt
mov
xor
aad
sti
cmp
sub
cmpl
in
hlt
add
push
sahf
adc
in
dec
add
fmulp
adc
jl
mov
pop
hlt
out
pop
lods
mov
aas
fsubrp
ficoml
leave
or
repz
jle
add
mov
inc
insl
mov
jle
shll
mov
or
nop
xchg
adc
je
sbb
jmp
mov
xchg
lds
jmp
push
sarb
pop
add
xor
fiadds
and
jmp
aas
ror
or
rcrl
call
shll
mov
mov
lret
pop
push
incb
push
lret
jmp
pusha
adc
shlb
cld
ljmp
in
mov
dec
cld
add
mov
gs
adc
xorl
loope
rolb
xor
es
ret
stc
cld
sub
mov
clc
loop
mov
cld
bound
add
adc
imul
lea
test
or
add
inc
or
rol
mov
test
push
das
rclb
push
mov
in
push
out
pop
mov
jecxz
mov
cmp
hlt
or
inc
cmp
inc
ljmp
mov
test
roll
jecxz
in
add
enter
push
or
push
rorb
mov
ret
int3
jmp
and
int3
cmc
push
mov
popa
test
mov
jge
push
inc
hlt
aad
inc
enter
add
std
or
mov
dec
lods
jae
shlb
call
stc
out
ljmp
add
jp
mov
mov
testb
mov
into
add
mov
sub
mov
cwtl
jbe
inc
and
mov
shrb
jnp
mov
add
jl
lods
sub
cmp
imul
ret
jmp
aad
push
adc
cli
add
cmp
pop
mov
inc
scas
push
mov
roll
lcall
lods
cmpsl
stos
inc
pop
xor
pop
dec
sub
dec
dec
pop
cmpl
mov
std
aam
jecxz
dec
mov
xor
or
outsl
inc
adc
mov
add
add
add
orl
cld
push
insb
out
aad
out
sti
add
cmp
add
data16
je
aad
mov
push
push
push
jb
pop
call
call
roll
jno
add
popa
xchg
incl
daa
xchg
pushf
ljmp
push
jmp
lods
orl
shlb
cld
push
or
sbb
cmp
sbb
sarl
cltd
subl
xor
or
jae
fsts
test
movb
or
xor
sti
call
daa
dec
mov
or
push
pushl
cmp
xor
mov
and
dec
adc
rorb
fdivrp
jmp
inc
call
scas
inc
adc
inc
mov
mov
add
push
xchg
lcall
in
ja
or
mov
or
fistpll
xchg
pop
jno
out
into
xor
mov
mov
cmpsb
bnd
mov
repnz
mov
leave
cmp
lahf
xor
dec
or
adc
inc
or
cld
jl
push
dec
add
xchg
mov
mov
add
subl
icebp
mov
inc
aas
out
call
cmp
daa
inc
decb
xchg
idivl
or
jecxz
xchg
mov
cmpsb
stos
jnp
dec
and
out
dec
lods
jb
leave
or
push
mov
into
or
fdivrl
out
fcoms
sti
loopne
cli
push
add
add
or
inc
push
pop
cli
sub
jb
aam
ljmp
lds
sbb
and
nop
movsb
mov
adc
ss
and
cltd
pop
lcall
mov
rorl
les
add
fmull
pushw
add
cltd
add
dec
push
add
or
sbb
or
lods
stos
cs
call
jo
mov
movsb
jb
inc
sub
xchg
or
pop
movl
or
sub
inc
hlt
xchg
out
jecxz
jmp
push
or
jmp
sbb
push
into
out
test
loopne
add
xchg
or
ficomps
enter
mov
inc
clc
out
inc
clc
jae
mov
or
je
inc
mov
mov
xchg
add
mov
mov
or
testl
lds
test
lods
mov
adc
pop
dec
or
cmp
mov
add
fstpt
or
push
jbe
aad
std
ljmp
cmc
add
test
add
pop
cmp
add
sarl
pop
filds
mov
jno
jae
sub
sarb
lock
push
and
add
fs
div
cmp
mov
add
add
aad
mov
sub
mov
jp
insl
movsb
les
and
sub
out
dec
push
rorl
pop
icebp
jb
and
add
or
clc
int
pop
aam
mov
jge
mov
cmpsl
add
inc
in
iret
or
je
mov
aad
loope
push
xchg
pop
aas
mov
add
inc
jae
adc
fstpt
mov
inc
dec
cwtl
pop
jg
or
aad
out
push
cmpsb
ljmp
das
sub
int
pusha
adc
test
mov
mov
mov
lret
mov
test
pushf
jb
mov
cmp
adcl
mov
add
call
sbb
sbb
cld
scas
xor
aas
xor
dec
dec
adc
fldenv
mov
dec
sarb
aas
xchg
std
inc
mov
cmp
inc
ret
movsb
xchg
inc
mov
std
cs
cld
pushf
push
adcl
add
repnz
insb
test
sbb
je
add
adc
sub
lret
rorb
mov
or
in
fisttps
mov
outsb
sti
mov
insl
call
push
std
jnp
sbb
or
xor
inc
test
add
mov
xchg
arpl
out
or
adc
mov
insl
jno
add
das
add
je
add
repz
out
das
imul
out
call
cmp
mov
pop
mov
ret
out
lods
shr
adc
incl
movsb
daa
xchg
sub
fstpl
or
frstor
mov
xchg
cmp
stc
or
add
lret
daa
pushf
mov
add
pop
lsl
aad
pop
or
add
sbb
pop
lods
daa
xchg
stos
adc
jb
daa
xchg
cltd
adc
sbb
movsl
or
hlt
add
insb
sub
or
add
pop
out
nop
fwait
std
xchg
nop
xchg
add
mov
inc
subl
loope
out
pop
pop
out
sub
adc
inc
fildll
xchg
mov
adc
in
pop
xchg
add
les
fldt
sbb
push
flds
fstl
pop
dec
in
mov
jmp
dec
mov
lds
inc
leave
outsl
dec
mov
jmp
mov
add
lea
add
dec
test
inc
cmc
aam
add
imul
icebp
notl
adc
add
xor
or
jmp
xor
add
push
dec
sub
dec
dec
and
pusha
inc
or
push
dec
sub
dec
dec
cmp
clc
xchg
popf
xchg
std
jle
dec
sub
dec
dec
sub
pusha
inc
hlt
push
sub
stc
push
pavgw
or
std
add
test
in
cmp
psrlq
or
jp
incb
add
das
sti
pushl
icebp
adc
and
inc
clc
mov
je
rolb
shl
cmp
xchg
push
jbe
and
call
lahf
jo
movb
push
leave
jle
add
stos
or
and
jbe
imul
ljmp
js
std
add
jb
stc
out
adc
call
stos
dec
lods
mov
jmp
push
dec
add
push
cmp
std
enter
aad
xchg
and
mov
shl
cmpsl
ret
and
mov
popa
mov
call
into
popa
mov
inc
or
inc
fwait
test
test
div
push
add
stos
mov
imul
xchg
add
add
leave
mov
cmp
mov
or
add
bound
frstor
fldt
lods
pop
cmpsl
add
xchg
imul
test
pop
aad
popl
hlt
out
leave
jle
lret
movsl
mov
imul
test
push
aad
inc
or
cmp
dec
out
int3
imul
add
scas
mov
mov
and
mov
jle
test
inc
add
mov
sub
daa
mov
sub
push
shr
std
ds
or
jmp
fildl
mov
push
sub
jmp
jle
push
je
popf
xchg
push
push
in
pop
dec
in
bound
adc
das
stc
jle
rorl
std
jmp
mov
std
jmp
xor
or
jno
out
xchg
lods
or
pop
sbb
loop
xchg
jns
xor
lods
or
pop
insl
xchg
mov
add
or
add
ja
or
sbb
mov
add
out
dec
or
test
cld
orl
or
orb
mov
nop
ret
pop
test
cld
xor
or
mov
mov
in
jg
mov
or
jo
push
add
insl
jno
cmp
call
inc
push
sbb
aad
add
and
inc
add
inc
pop
pop
sbb
mov
add
test
and
xchg
mov
mov
push
dec
into
mov
or
pop
out
incl
add
fsubp
xchg
adc
icebp
mov
ret
mov
psraw
or
inc
mov
nop
mov
rolb
cli
and
pop
or
aas
cmpsb
fnstsw
inc
jge
sub
add
push
or
and
adc
add
test
add
xchg
jmp
hlt
or
push
add
test
or
in
add
orb
dec
out
pop
out
xchg
out
aad
pop
xor
xchg
xor
movsb
mov
add
sbbl
out
add
push
decl
mov
cld
insb
mov
aad
add
adc
mov
adcl
movsl
mov
sub
rorb
or
jmp
loop
push
dec
sbb
mov
inc
in
arpl
std
cltd
inc
cmpl
push
mov
add
call
bound
xorb
mov
adc
pop
or
fsubp
add
into
cmp
clc
add
add
jl
test
mov
pop
jno
daa
lret
cmovo
jb
clc
das
popa
add
in
push
ret
scas
push
pop
or
jp
jno
incl
add
xchg
mov
xchg
gs
inc
clc
mov
jg
sub
or
cli
adc
sub
sbb
shll
jge
fistpll
ja
push
push
jno
cli
push
aam
sub
in
or
vmread
add
aad
or
aad
jge
fldenv
jge
xlat
mov
out
aad
dec
or
add
aad
push
test
add
sbb
mov
cld
in
lahf
xchg
push
test
test
mov
cld
mov
jo
add
mov
jge
shll
mov
aad
mov
ljmp
shl
or
aad
out
fdivrl
leave
or
add
jo
cltd
lret
repnz
jp
mov
sbb
or
sub
ljmp
add
lea
add
xchg
lods
pop
pop
fbld
mov
fists
rcr
sbb
inc
lods
push
mov
xchg
pop
pop
fildll
xchg
add
add
fimull
push
stc
or
jg
sbb
aam
out
add
push
iret
testl
adc
daa
xchg
fsubp
xor
sub
mov
inc
dec
int
testb
inc
test
out
cmp
out
mov
out
ss
std
add
mov
jmp
or
push
aaa
mov
lret
xor
enter
jno
cli
and
fiaddl
add
popf
mov
push
or
out
jae
mov
in
push
imul
std
and
adc
cmp
sete
xor
dec
or
sti
pop
cmp
aam
loope
mov
dec
jl
fldl
rorb
cmp
sarb
shlb
or
mov
inc
xchg
je
add
and
add
fwait
xchg
inc
lock
pop
add
add
pop
mov
inc
in
call
setae
push
insb
push
mov
aad
xor
nop
mov
pop
daa
xchg
push
in
sbb
cli
add
inc
jne
jo
add
in
cmp
rorb
lock
rolb
lret
push
pop
xor
enter
and
jo
add
mov
icebp
and
incl
add
test
inc
loope
mov
or
stos
mov
iret
xchg
mov
js
inc
lret
push
in
int3
test
clzero
or
jg
push
imul
or
sbb
jae
movsb
int
daa
or
test
add
xchg
pop
out
subl
add
sbb
mov
and
mov
cmpsl
or
inc
pop
xchg
es
or
dec
push
dec
loopne
pop
sbbb
int3
push
jg
loop
and
dec
xlat
outsb
pop
xchg
adc
jb
push
push
lea
aad
ret
or
lahf
mov
popf
pop
mov
cs
insl
sub
push
adc
jae
outsb
or
jmp
pop
pop
call
into
leave
je
shr
add
push
shrl
or
jmp
push
ljmp
or
test
adc
pop
adc
inc
subps
gs
or
jmp
aas
pop
mov
adc
sbb
or
add
inc
ja
or
cmp
jns
xchg
adc
add
rorb
sub
popa
adc
pop
mov
add
inc
dec
jg
xchg
adc
dec
adc
movsl
inc
ja
xchg
jge
adc
mov
mov
scas
dec
out
jge
or
dec
insl
mov
mov
add
roll
pop
xchg
addl
outsl
add
add
pcmpgtd
inc
adc
inc
dec
jb
movsl
add
aad
inc
dec
pop
cmp
notl
mov
push
pushl
int
mov
push
push
or
sbb
imul
shll
outsl
js
xor
mov
add
add
jge
adc
in
rorb
dec
pop
add
jo
jno
cwtl
in
lcall
xlat
mov
in
outsl
nop
jae
mov
aad
out
xchg
adc
aad
out
into
adc
sbb
movsl
jno
fidivl
andb
out
pushw
imul
pop
xrelease
addr16
add
inc
adc
add
add
rcr
sub
mov
push
int
push
push
aad
idiv
addr16
outsl
dec
mov
sub
and
push
stos
imul
add
daa
popf
and
add
sbb
jbe
adc
inc
jmp
mov
inc
sti
jbe
inc
add
push
std
jmp
out
std
ss
push
mov
dec
aad
es
jae
push
mov
imul
scas
dec
ret
xlat
mov
pop
js
cwtl
insb
pop
test
or
in
in
or
sarb
mov
movsb
rolb
push
js
es
or
fists
xor
fldenv
sbb
xorb
or
addb
sar
add
mov
xchg
jp
push
je
add
pop
dec
xchg
mov
mov
sti
or
ret
jge
cld
mov
add
inc
call
or
cmp
iret
sti
sti
cmp
and
std
ljmp
jmp
add
repz
inc
add
call
xchg
ja
fucomp
inc
add
cmp
out
add
or
sub
mov
sti
mov
jno
add
inc
test
lret
adc
shr
adc
mov
xor
adc
shr
push
mov
hlt
js
into
jnp
xor
aaa
aaa
adc
ret
int
mov
mov
clc
into
xor
xor
pushl
push
dec
mov
mov
mov
clc
into
cmp
jo
ret
push
push
cmp
xchg
mov
mov
push
outsl
xor
iret
xchg
cwtl
ret
or
out
xor
loope
movsb
decl
sub
or
loop
add
mov
bound
sbb
loopne
nop
add
jb
repnz
std
mov
xchg
jl
push
pop
bound
fnstenv
mov
jge
inc
fsts
int
rclb
sub
pop
cli
loopne
fst
fmuls
jmp
lea
gs
or
jmp
in
enter
mov
dec
jg
data16
les
add
cmc
adc
xchg
adc
es
ss
pop
add
jle
or
adcb
push
sub
pop
jg
cltd
insl
enter
leave
or
mov
fs
into
dec
call
xchg
cmp
xor
sti
pushl
jb
add
out
mov
mov
inc
inc
vmread
push
add
push
lea
push
call
xchg
jns
sbb
leave
fists
mov
inc
adc
or
imul
add
pop
out
mov
leave
sti
push
cld
pop
add
add
add
test
mov
movb
aad
clc
add
mov
cmp
push
mov
push
push
es
lcall
add
test
rorb
adc
xchg
add
jo
push
dec
pop
stc
push
stos
fdivs
aad
aam
add
xchg
adc
lods
push
mov
mov
mov
add
testl
mov
aad
dec
inc
out
lahf
xor
fimull
aaa
pushf
xor
out
loopne
out
enter
mov
add
xchg
inc
sbb
les
stos
in
dec
int3
add
jp
add
inc
out
push
xchg
nop
sub
out
pop
pop
jno,pt
mov
add
out
and
out
add
mov
les
xor
add
mov
inc
jge
mov
dec
mov
mov
sahf
jb
xchg
mov
or
insl
xchg
jmp
lret
mov
sub
jns
stc
jnp
mov
or
cmpsb
adc
add
or
fistps
mov
or
cmpsb
adc
adc
push
adc
dec
jb
add
pop
xchg
push
adc
or
loop
inc
out
push
jmp
call
pop
in
je
push
std
ds
bound
pop
test
mul
pop
push
and
stos
jbe
add
xlat
cmp
or
push
es
adc
lea
jno
ljmp
addb
mov
add
adc
mov
xchg
repz
test
add
movsb
and
nop
add
jl
mov
loop
push
icebp
push
call
test
jg
loop
or
punpckldq
cmc
mov
cmp
push
jns
adc
mov
mov
adc
aad
shlb
cmc
rcrl
insb
add
add
iret
rorl
mov
or
mov
leave
inc
rcr
in
adc
mov
add
scas
cmp
enter
adc
adc
cld
in
cltd
add
clc
addb
outsb
mov
aaa
jns
fucomp
sub
inc
ja
fstl
dec
push
add
sub
or
add
push
iret
ds
stos
add
pop
jo
or
dec
lods
mov
arpl
sbb
rorb
jecxz
jbe
mov
ss
sub
xor
or
ds
fnstcw
jg
cld
testl
and
xchg
dec
jecxz
fwait
int3
jno
popf
aam
hlt
add
push
sub
add
out
jno
adc
andb
popf
push
arpl
or
jmp
adc
mov
push
movsb
push
or
push
sti
jne
push
push
or
jmp
mov
out
fdivrp
hlt
sbb
dec
dec
or
jmp
inc
mov
push
sbb
jne
test
or
xchg
es
xchg
data16
and
jbe
stc
or
into
cld
push
lea
fs
std
dec
push
bound
mov
jle
jecxz
test
decl
std
jmp
sti
xor
jecxz
js
cmp
xchg
pop
hlt
jo
stos
inc
hlt
add
insl
add
mov
add
add
push
xchg
cltd
idiv
xchg
mov
add
or
in
xor
sti
push
imul
pop
pop
mov
sti
add
mov
adc
pushl
xchg
jmp
aad
testl
and
imul
adc
sub
jae
add
sbb
hlt
enter
adc
bound
std
pusha
or
std
xchg
es
aad
add
addl
add
je
push
je,pn
dec
out
std
xchg
movsb
aam
std
stos
jg
aad
jg
insl
pushf
adc
mov
hlt
rcrl
pusha
add
push
jecxz
or
aad
lds
add
in
ja
rorb
test
jg
jae
xchg
jb
cmp
sbb
sbb
jb
sbbb
jg
jb
jb
xchg
or
subl
out
push
adc
add
jmp
and
mov
add
jbe
fadds
shll
add
add
jb
shll
incl
je
push
popf
sti
push
sbb
in
dec
mov
dec
outsb
std
inc
push
out
jo
pushw
or
pop
push
and
dec
push
jecxz
push
test
rorl
test
xlat
or
mov
in
scas
call
jecxz
lea
ret
jo
add
mov
lcall
cmpsb
add
les
push
add
popa
xlat
inc
ljmp
add
inc
inc
mov
cmpxchg
sub
mov
test
add
push
test
lcall
push
test
add
dec
add
mov
pop
dec
mov
add
rorl
insb
out
adc
insb
incl
xor
testb
sbb
mov
orl
dec
add
sbb
inc
js
jne
mov
push
pushf
pushl
cltd
jle
aad
mov
adc
pop
push
lock
std
mov
mov
adc
add
cltd
aaa
jle
pop
cmc
xor
add
jle
or
sbb
enter
mov
clc
mov
add
pop
jnp
das
pop
mov
xor
std
add
pusha
add
lods
mov
std
xchg
lret
or
jmp
sbb
push
in
mov
subb
mov
pop
loop
add
or
insb
jbe
add
mov
adc
ret
cmp
jno
add
jge
andb
inc
or
loope
jl
push
outsl
mov
or
mov
jecxz
out
adc
pop
inc
sbb
dec
icebp
mov
pop
and
xchg
add
mov
hlt
fnstsw
add
std
scas
add
add
mov
fimull
adc
insb
adc
push
std
out
scas
add
insb
jae
dec
mov
mov
call
gs
cld
adcl
mov
insb
std
es
mov
and
mov
pop
cli
jmp
call
xor
outsb
sar
mov
add
in
outsb
std
fdivp
rcr
movsl
cmp
inc
push
incl
adcl
sti
incl
or
dec
add
fsts
hlt
inc
add
pop
or
call
fmull
jne
pop
add
xchg
push
mov
push
in
pop
icebp
cli
push
orb
jno
xor
pop
loope
movsl
mov
cli
jne
add
orb
pop
add
push
cmp
jo
rcrl
in
jl
out
jg
xchg
xor
xorl
xor
jp
push
mov
ja
mov
movl
jp
mov
stc
xchg
xchg
jp
push
xor
std
movsl
vmwrite
sub
lcall
or
pop
push
gs
add
cs
xchg
sbb
add
ljmp
cli
and
add
bound
inc
ljmp
xor
jp
inc
xlat
cmc
pop
push
or
fxch
mov
aam
sub
lods
lock
mov
insb
scas
or
out
aad
adc
add
cmp
je
jns
jb
jns
divb
xchg
pop
pop
insb
movsb
sub
add
lea
hlt
pop
add
xchg
mov
add
test
push
or
mov
jns
jle
test
or
hlt
adc
jbe
add
dec
not
rcll
insb
std
out
sar
into
add
sbb
mov
jmp
or
or
jb
mov
sahf
jnp
sub
push
jmp
repz
or
hlt
mov
push
jbe
add
xsaves
scas
push
repnz
into
pop
mov
pusha
push
push
insb
jae
xchg
hlt
call
jns
loop
or
xchg
mov
dec
pop
insb
mov
add
call
jg
ret
or
test
jecxz
mov
stc
imul
jp
cli
incl
into
or
dec
loope
mov
in
and
bound
inc
and
inc
pusha
or
inc
pusha
ds
jne
sub
sbb
add
inc
adc
adc
mov
jae
scas
aad
jmp
loopne
loopne
dec
std
ljmp
jne
cmc
data16
jecxz
add
data16
mov
mov
out
pop
lods
insl
push
ret
adc
call
out
jge
shl
inc
mov
mov
push
push
cmp
xorb
sbb
push
push
jnp
add
jb
mov
inc
imul
mov
add
sub
add
pop
xor
or
xor
jb
sbbb
jns
jg
mov
subl
adc
inc
jb
stc
xchg
sub
aad
push
add
imul
mov
add
cli
icebp
push
push
out
inc
mov
loop
or
and
out
jl
or
add
add
or
pop
int
aam
arpl
jg
fidivs
bound
push
push
jge
inc
mov
jbe
or
add
addr16
xchg
mov
cmp
pop
add
aam
sti
aas
jmp
mov
sbb
push
or
jne
nop
jbe
std
pop
jae
add
cmp
repz
push
push
fs
insl
push
roll
out
mov
shll
cmc
xor
mov
xlat
adc
ret
add
jmp
dec
jle
add
sub
mov
fnstsw
pop
iret
pop
lret
jo
jecxz
rorl
dec
add
movb
out
in
or
lea
mov
rorb
jno
outsl
fdivr
je
fnsave
inc
push
push
in
inc
clc
add
jno
and
push
xor
push
xchg
out
add
lock
testb
or
inc
arpl
mov
retw
inc
dec
push
out
insb
or
push
push
dec
add
in
cmp
push
inc
push
call
add
cmpsl
cmc
jle
aad
clc
pop
adc
popa
call
dec
sahf
popa
call
push
xor
or
loop
jo
data16
inc
into
jb
inc
into
stos
iret
pop
mov
or
xor
loop
ljmp
and
aaa
sbb
jb
lock
dec
jb
pop
or
jp
pop
rcr
jb
std
loopne
fistpl
and
add
jb
dec
jno
pop
mov
jb
or
fldt
pop
sbb
popa
add
mov
outsb
or
bound
pusha
fs
fucomp
mov
cmp
arpl
mov
mov
inc
jbe
add
or
mov
out
dec
hlt
ret
lcall
lret
cs
daa
test
and
out
mov
out
pop
std
scas
push
xchg
or
xor
fsub
pop
xchg
jbe
shl
dec
add
enter
and
das
fisubrl
stos
bound
ljmp
lods
mov
mov
xchg
inc
icebp
pop
int
loope
int3
push
bound
add
dec
or
stos
xchg
in
push
mov
or
leave
call
dec
inc
jmp
loopne
ljmp
imul
rorl
aam
scas
in
rcrb
leave
inc
daa
and
cmpsl
shrl
add
or
fistl
cld
or
mov
pop
add
cld
add
add
add
inc
pop
mov
mov
repnz
adc
jno
jae
and
orb
cmp
inc
add
leave
or
mov
mov
adc
sar
xor
mov
dec
push
add
xchg
aam
cmp
out
insl
or
add
nop
push
push
dec
mov
ret
shll
xor
mov
mov
mov
pop
mov
add
xor
xlat
cltd
xlat
push
out
insl
xor
xchg
cmp
mov
jae
add
adc
inc
cmp
int
jnp
sarb
add
sub
jle
aas
xchg
rclb
add
sbb
rolb
aad
andb
lea
pop
mov
add
aam
stos
outsb
jecxz
sahf
sbb
out
add
dec
stos
jp
mov
test
pusha
aam
leave
out
jecxz
hlt
imul
out
daa
test
mulb
add
jno
pop
insl
lahf
add
or
mov
push
outsb
and
or
add
test
out
adc
add
pop
cld
cmpsl
out
out
xchg
aad
js
ss
aad
or
ret
shlb
dec
dec
sbb
add
rol
xlat
rol
imul
jae
in
rcrl
or
test
fildl
cli
xchg
dec
push
push
dec
push
add
push
dec
or
xchg
rorb
xor
adc
sbb
adc
xchg
movb
pop
std
out
lock
fisttpll
pop
adc
call
or
test
neg
adc
xlat
lds
leave
jle
add
call
push
sti
xor
add
aas
ret
sub
push
mov
xor
mov
in
cli
js
jae
push
sbb
jg
cli
ljmp
jae
ret
xchg
incl
push
stc
push
jmp
sbb
adc
or
das
jmp
xor
inc
aad
add
or
aad
sar
je
xor
scas
sub
mov
add
imul
insl
push
sar
jl
shrl
pop
sub
push
adc
in
mov
or
pop
and
jb
adcl
out
aad
dec
std
pusha
push
imul
add
leave
pop
push
sub
aad
jle
out
test
jno
or
xor
lcall
pop
add
jge
aam
addb
push
loope
in
aam
scas
add
lods
jo
adc
test
cli
pop
push
sarl
fmull
leave
out
adc
adc
lock
cli
push
pop
hlt
mov
adc
outsb
or
ret
fimull
push
push
pop
cld
fwait
add
out
out
xchg
mov
or
or
lods
nop
sbbl
std
push
sarl
std
bound
add
in
push
adc
mov
jecxz
fs
std
cmpsb
xor
and
sbb
or
fistpll
push
add
push
bound
data16
adc
xchg
sar
pop
jl
inc
loope
jle
dec
add
insb
pop
call
gs
xor
rorb
push
test
or
cmp
push
xor
leave
inc
clc
mov
add
stos
fwait
icebp
mov
and
inc
hlt
cs
xor
push
ret
xchg
std
ljmp
out
sub
cli
xor
push
ljmp
icebp
adc
test
incl
add
daa
dec
push
ret
lock
add
push
cmc
out
push
icebp
cli
cmp
out
cmpsl
icebp
cli
mov
inc
xor
cmp
pop
in
sti
jmp
mov
scas
xor
pop
push
jge
push
stos
ds
cld
rcrb
aad
adc
loopne
or
jmp
call
or
lods
cltd
add
push
sar
enter
aad
inc
pop
mov
lret
fistl
xor
push
mov
fmull
xchg
cld
add
fildll
inc
aad
inc
jle
arpl
std
lret
xor
push
add
mov
add
push
bound
mov
or
aam
into
out
fld
jo
add
or
sub
jae
add
ljmp
out
cltd
call
inc
aas
icebp
mov
out
mov
cmpsl
pop
outsl
pop
cmp
insb
pop
adc
inc
mov
fwait
inc
subb
into
fisubrs
hlt
cmpsb
js
push
lret
pop
cld
sti
lods
or
xchg
or
data16
jp
xchg
or
inc
fisttpll
pushf
jp
mov
test
pop
xor
mov
or
jmp
push
add
cld
mov
xchg
push
test
mov
add
in
xor
push
test
std
hlt
aas
jmp
fisubrl
jp
mov
loope
shll
jae
mov
shr
sub
and
fimull
insb
pushf
aam
cmp
mov
adc
dec
or
add
les
pop
jo
fistpl
mov
out
bound
in
cli
push
mov
or
je
add
sti
xor
push
in
insb
or
leave
aas
out
wbinvd
into
rorl
mov
das
mov
sbbl
push
lret
in
jo
pop
xor
adc
js
xlat
ljmp
rolb
aaa
in
in
cmp
add
mov
lds
add
and
jne
fiadds
or
cld
adc
aad
dec
orl
add
in
repnz
inc
je
out
or
lock
or
subl
bound
jmp
aam
add
mov
adc
add
paddw
outsb
bound
push
xchg
jmp
loopne
sti
aad
or
shrb
lcall
mov
outsl
xorl
repnz
icebp
mov
jg
pause
xchg
pop
mov
or
jnp
dec
xchg
pop
call
leave
loop
or
pop
pop
clc
out
sar
stc
add
cli
or
cmp
dec
cmpsl
dec
xchg
or
cwtl
in
sbb
xchg
push
push
cwtl
ret
sbb
in
bound
add
jle
cld
xor
leave
out
lock
ret
fwait
inc
jecxz
add
stc
ds
enter
dec
sub
stc
lods
xor
es
push
xchg
or
jmp
scas
push
std
insl
xchg
fisttpll
es
stos
add
and
sbbl
xchg
ja
fcmovnu
xchg
push
xchg
and
jb
or
add
push
push
xchg
sarb
icebp
push
dec
std
pop
fimull
xor
xchg
push
push
lahf
mov
pop
arpl
mov
xchg
pop
data16
loopne
push
shll
xor
sub
add
xor
lcall
adc
inc
push
ffree
das
pop
jno
movsb
lods
repz
roll
mov
std
daa
cmp
out
inc
mov
adc
inc
lods
test
outsl
fs
add
adc
inc
std
mov
jle
jnp
add
sub
ja
loope
adc
xchg
push
push
or
add
mov
pushf
push
mov
jecxz
xchg
jg
cld
pop
adc
aad
inc
sub
push
xchg
pusha
push
push
repnz
add
out
sti
into
lahf
aad
in
adc
std
cli
fadd
pop
scas
pop
aad
xchg
pusha
jae
adc
pop
es
cld
inc
sbb
pop
and
or
rcrb
pop
sahf
or
sub
pusha
adc
add
sahf
or
jl
ret
mov
cmp
sar
mov
push
and
inc
inc
aad
pop
adc
pop
popa
xchg
or
add
repz
push
xchg
mov
lods
ret
sbb
sbb
adc
arpl
int
add
push
cld
aas
out
out
pop
push
mov
fimull
adc
cmp
add
or
imul
cs
and
negb
repnz
cld
jle
sub
out
es
std
clc
out
sti
cmpsb
add
dec
add
inc
or
mov
or
add
popa
fbstp
push
jo
inc
xchg
test
mov
push
das
test
mov
rcrb
cmpl
int3
imul
add
cmp
inc
loope
leave
add
cmp
xor
or
or
lods
ss
inc
inc
xlat
or
jmp
push
sbb
mov
jmp
sti
daa
popf
dec
add
cmpb
test
or
jmp
lds
cmp
incb
mov
add
std
xchg
lds
icebp
mov
or
lods
in
lods
jne
xor
adc
imul
add
mov
add
cmp
je
addl
adc
add
jae
daa
or
jne
lods
jo
cmp
xorl
loop
rolb
repnz
cld
jne
adcl
or
stc
pop
inc
test
loop
js
aad
out
mov
cmpsl
out
xor
pop
adc
dec
sar
and
cmpsl
ja
iret
cmc
jmp
and
movb
xorb
inc
inc
add
sbb
popf
inc
adcl
repnz
mov
pop
adc
and
dec
add
fwait
pusha
add
fnclex
aam
pop
push
jmp
inc
lods
jae
jae
pop
repz
out
daa
add
pop
call
pop
arpl
inc
push
push
xor
aad
sar
add
cld
push
inc
xchg
mov
xchg
pusha
leave
es
jecxz
xchg
dec
call
ja
dec
jbe
jle
out
cwtl
mov
or
push
pop
add
mov
movsb
pop
adc
add
jno
and
add
std
lret
out
sar
subb
cwtl
aad
push
test
cs
or
push
pop
sub
lcall
rcrb
shrb
pop
loope
aad
cmc
dec
jmp
daa
aad
je
inc
mov
aas
jmp
or
mov
add
into
or
xor
mov
leave
call
sahf
dec
std
sbb
dec
sbb
or
cld
repnz
aas
jmp
sti
dec
std
jmp
push
fdivrp
cs
std
cmp
or
ficompl
mov
bound
ljmp
dec
out
mov
cli
jne
leave
add
std
add
xchg
mov
add
add
cmp
addl
addr16
std
ljmp
cli
push
shll
loopne
cli
incl
add
add
lock
push
decl
dec
popa
lret
das
pop
push
jmp
out
inc
jbe
or
inc
das
jae
sti
mov
jne
out
andb
std
and
aas
add
add
pop
ret
call
imull
std
jp
into
push
lods
aad
cld
push
into
push
fwait
pop
push
popa
call
dec
mov
leave
pop
aas
add
call
sbb
lods
jae
std
pop
jnp
add
addr16
cmc
and
rcll
add
aad
mov
inc
sbb
push
mov
data16
shll
add
mov
add
mov
mov
and
ret
mov
dec
push
pop
sti
insb
xchg
dec
adc
aaa
add
inc
rep
test
sbb
dec
fiadds
int
mov
lods
mov
dec
xchg
in
jmp
int
adc
dec
stos
test
or
sbb
xchg
ds
or
ret
add
add
mov
adc
out
and
call
mov
es
rolb
movsl
lret
add
aam
sbb
pusha
test
xor
or
stos
or
cmp
push
testb
cmp
stos
lret
test
call
gs
mov
lds
flds
pop
sub
add
dec
add
repz
jnp
adc
jno
enter
push
dec
push
inc
jmp
xor
xchg
dec
iret
add
push
add
add
dec
std
decl
or
add
adc
scas
dec
std
jg
or
inc
lods
or
aam
stc
call
mov
add
dec
std
aaa
add
bound
lds
ret
inc
insb
or
lcall
adc
jge
push
jmp
sbb
push
xchg
lea
add
call
or
sub
inc
jmp
cmp
incb
adc
jle
je
jns
inc
aad
mov
dec
inc
push
jae
cmpsb
push
adc
sar
lock
add
stos
cld
add
sar
aas
aad
push
jmp
sub
or
decb
imul
andl
mov
cmpsb
pop
lods
push
dec
js
add
jo
xorb
in
pushl
xor
adc
sar
testb
or
xor
add
pop
dec
movsl
mov
add
add
stos
les
ja
lods
pop
pop
int3
loop
nop
mov
cli
jmp
aad
xchg
lods
test
or
fisttpll
sub
jge
adc
or
mov
inc
loope
jb
fiaddl
and
leave
fiadds
push
add
out
push
out
fld
cmp
ret
or
aad
popf
sbb
add
pop
fcomip
rorb
mov
rolb
out
out
adc
adc
pop
push
mov
dec
dec
je
incb
scas
mov
xchg
inc
mov
cld
aam
pop
inc
jmp
repnz
daa
mov
and
daa
mov
adc
xchg
inc
test
cwtl
shrb
mov
in
add
inc
mov
stc
mov
mov
adc
sub
mov
sbb
fdiv
sbb
lret
inc
movl
xchg
dec
push
jns
cmc
push
jnp
add
inc
in
nop
shlb
clc
aaa
cmp
mov
lret
int
ret
push
incl
pop
jmp
fdivs
add
jo
adc
std
test
add
loop
in
pop
or
add
lcall
jle
imulb
add
and
inc
cmp
cmp
cmp
add
sbb
inc
inc
in
aad
dec
std
movsl
or
xor
popl
xor
add
dec
sti
loop
pop
or
jecxz
sbbl
add
jl
dec
in
stc
mov
pop
mov
xor
test
cwtl
addl
cld
xor
cli
xor
add
gs
adc
in
inc
push
bound
add
xor
xchg
pop
jno
pop
sahf
jns
or
and
sbb
xor
or
lcall
mov
cld
inc
xchg
out
aad
fdivrl
lahf
cmp
add
mov
sti
test
inc
mov
pop
mov
mov
mov
jmp
aad
pop
mov
mov
push
nop
lea
call
push
xlat
mov
dec
insb
outsb
gs
testb
jecxz
aad
cmpsl
fmul
mov
dec
adc
stc
ficomps
daa
add
dec
cmp
nop
mov
jo
sti
xchg
ficomps
loopne
add
inc
inc
ljmp
mov
mov
cmp
data16
or
out
jb
clc
mov
mov
xor
push
fisttpl
sbb
xor
xchg
call
xlat
fisubrl
jle
add
je,pt
mov
adc
add
jb
mov
decb
add
and
pop
lods
and
dec
or
sub
mov
aaa
inc
fwait
roll
inc
lds
cld
add
mov
in
lods
loopne
add
or
das
repz
inc
ja
xchg
fs
xor
jae
shrb
xchg
mov
mov
mov
or
mov
jle
add
repz
cmp
pop
outsb
xor
pusha
std
add
mov
mov
mov
add
in
lods
add
xchg
mov
inc
xchg
in
std
aad
dec
xchg
inc
dec
mov
movsl
test
and
push
test
jnp
lock
jns
mov
cli
xchg
adc
lods
inc
dec
pop
jno
push
add
dec
scas
pop
sti
rcr
mov
loopne
out
aas
aad
inc
jae
mov
inc
pop
or
push
out
scas
addr16
add
pushl
mov
fimull
dec
je
inc
dec
adc
cmp
or
movsl
fcmovu
xlat
mulb
cmp
ret
cmp
stos
dec
push
fld
and
pusha
inc
jl
out
add
add
cmp
dec
out
fld
repnz
ja
jecxz
call
add
fmull
int
xchg
mov
js
stc
es
xchg
in
movb
ret
mov
setno
es
out
xchg
xor
fwait
in
cmc
in
cmp
add
dec
jnp
inc
jg
mov
add
test
jg
orl
mov
call
cmp
add
mov
pop
push
out
jmp
or
adc
sbb
fistl
cmp
std
aad
popl
push
pop
sti
inc
push
xchg
mov
nop
inc
or
cmc
leave
add
xor
sub
add
sbb
add
je
rorl
loopne
ljmp
out
leave
jl
or
dec
cld
sub
mov
js
incl
and
inc
sub
shlb
cld
adc
in
add
in
jb
adc
iret
rclb
clc
or
jb
xchg
sub
mov
cltd
les
sbb
add
add
andl
add
cmp
aam
and
add
and
call
xor
lret
jb
js
mov
mov
pop
dec
aad
aad
mov
call
mov
dec
std
lret
add
xor
pop
sar
jp
jae
hlt
in
push
adc
in
cld
loopne
idivb
aad
add
cli
xor
addb
add
add
pop
in
inc
in
mov
fisubl
add
mov
and
scas
arpl
inc
and
loope
into
or
loop
inc
stos
insl
cmc
add
sub
jae
or
out
xor
sahf
mov
adc
hlt
stos
or
adc
pop
cmp
out
out
xor
loope
mov
inc
test
add
or
jmp
mov
dec
add
and
in
sbb
mov
mov
arpl
mov
add
fnstenv
mov
mov
adc
push
out
xlat
cmp
out
popa
push
into
fiaddl
out
xchg
aam
or
jmp
mov
ss
or
aaa
std
push
jmp
and
es
add
jb
adc
pusha
stc
jmp
push
cmp
ss
fisubs
in
sub
pop
and
cmp
mov
fstl
mov
inc
xchg
xlat
addb
mov
and
pop
hlt
xchg
fistl
cmp
add
jae
dec
cmp
ss
pusha
xchg
cmp
and
pop
add
add
test
add
xchg
js
ja
js
stc
int
adc
mov
mov
int3
insl
arpl
scas
add
jge
test
mov
mov
ss
xchg
stc
shrb
leave
aam
cld
jns
ss
rcll
jne
add
je
jp
push
push
arpl
adc
pushl
push
pop
pop
lret
addl
jp
sti
jne
aam
ljmp
adc
ljmp
mov
add
pop
icebp
adc
sarl
rcl
and
mov
movsb
push
sub
lahf
adc
and
push
push
sbb
push
dec
ss
inc
loope
mov
mov
pop
inc
mov
and
push
and
add
add
and
xlat
test
fisubl
push
out
mov
add
aad
pop
xchg
push
or
das
push
pop
iret
rolb
mov
inc
inc
pop
arpl
ss
fiadds
mov
inc
push
pop
das
mov
push
iret
fiaddl
mov
inc
negb
mov
out
add
aad
out
adc
cltd
xor
fimuls
dec
lret
push
inc
adc
jbe
fmull
jl
or
add
bound
call
or
sbb
add
mov
pop
mov
mov
pop
call
out
inc
adc
jae
in
cwtl
push
or
fdivrp
cld
outsb
pop
inc
jmp
or
loope
orl
or
jnp
lret
fiaddl
mov
add
pop
mov
push
pop
or
push
push
aad
out
add
sub
lahf
pcmpeqb
add
jmp
les
std
in
cltd
jg
mov
adcl
sbb
add
push
add
cmp
mov
lods
or
push
mov
call
adc
jl
mov
inc
or
pop
loopne
imul
loope
sub
push
lea
cld
cmp
std
xorb
test
cli
mov
xchg
push
xchg
adc
ja
cmp
mov
sub
in
push
add
cmpsl
inc
call
lret
or
mov
add
aad
test
shlb
add
aad
dec
xchg
pop
push
lcall
jne
or
and
add
test
jg
int
add
mov
add
mov
std
inc
in
pop
jno
add
sbb
add
ror
sbb
push
and
pop
pusha
mov
sub
push
or
cli
xor
sub
test
ljmp
inc
outsl
sbb
cld
push
push
inc
outsb
sub
mov
jmp
outsl
insl
cs
aad
in
lcall
cmp
inc
aad
inc
js
sbb
or
mov
add
push
stos
add
xchg
jmp
inc
roll
adc
stos
pop
or
inc
xor
xor
out
xlat
cltd
add
or
mov
cmpsb
xchg
and
adc
or
or
or
negb
pop
push
dec
or
stos
sub
repnz
incb
add
mov
mov
and
js
add
or
call
jb
call
bound
or
adc
std
xor
mov
dec
add
daa
test
outsl
cmc
push
insb
push
or
cmpl
jno
add
int
call
or
push
push
jmp
jns
ja
or
xchg
adc
cmp
add
fcompl
add
fsubs
mov
xchg
add
lods
pop
mov
insb
out
aad
mov
or
lcall
mov
inc
or
enter
push
sub
cmpsb
cld
cmp
mov
aad
add
jge
ds
add
push
mov
rorl
aad
add
or
xchg
mov
add
aad
test
fisubl
add
in
or
repnz
xchg
and
in
or
mov
into
pop
icebp
out
mov
and
lods
sub
jno
add
aad
repnz
pop
adc
adc
mov
add
push
or
add
cmp
sub
lds
fcmove
mov
iret
add
cmpsl
aam
xlat
imul
xlat
movsl
xchg
das
xchg
push
insb
outsl
shrb
pop
cltd
adc
add
mov
xlat
push
mov
cs
add
fdivl
out
out
nop
scas
into
ljmp
fwait
sldt
lock
inc
mov
dec
lods
dec
xchg
std
out
xchg
and
pop
sbb
sbb
cmp
fs
dec
in
jl
mov
fsubrs
push
add
cmp
jns
or
in
jmp
sbb
in
std
cld
std
mov
sbb
mov
xchg
shrb
or
shrl
insb
sub
dec
ret
add
lock
je,pn
test
push
or
or
push
push
ret
jno
add
rol
push
jmp
icebp
adc
mov
jmp
jl
push
fstl
insl
movb
xchg
int
jns
add
jne
jge
cld
gs
jmp
cwtl
adc
add
mov
je
or
addl
mov
fldt
clc
mov
sbb
jbe
loopne
test
icebp
test
fisttpll
adcl
push
lret
ja
incl
call
mov
lock
ss
hlt
loopne
cmp
add
call
cwtl
ss
cmp
je
mov
pop
lret
fstl
std
add
dec
push
mov
popf
cmp
ss
mov
lahf
xchg
bound
mov
mov
std
fidivrl
idivl
mov
dec
ret
iret
push
pop
test
ljmp
jo
adc
xor
lcall
test
mov
xor
dec
nop
rcrb
daa
pop
add
push
hlt
ret
add
push
xchg
mov
lahf
out
inc
adc
fs
test
adc
add
jle
cmp
xor
ret
adc
lds
cmp
cmp
or
loopne
mov
roll
leave
out
rcrb
mov
scas
outsb
xor
outsb
cmp
shlb
cmp
jg
sub
faddl
or
mov
add
sahf
push
add
movsb
mov
mov
std
push
xchg
inc
jmp
or
jns
and
mov
std
out
push
sub
cld
hlt
push
sub
sub
mov
into
push
lcall
mov
addb
aam
insb
xor
orl
dec
orl
add
or
pusha
arpl
aad
out
sub
insb
jp
std
push
jge
andb
ret
or
in
or
or
add
inc
jo
dec
add
jecxz
jae
test
je
push
iret
mov
cmp
xchg
je
call
stc
in
push
add
mov
clc
adc
dec
mov
std
incl
add
jmp
test
xchg
sub
pop
or
call
in
das
loope
xor
or
push
cmc
sbb
sub
push
xchg
add
lods
jle
xchg
xlat
xor
pushl
adc
repnz
adc
xchg
ljmp
push
test
jb
orl
or
std
add
xchg
ss
cmp
scas
inc
jae
clc
cmp
les
jmp
out
jge
mov
pop
mov
cmpsb
jb
jmp
or
in
cmp
std
fidivl
mov
add
or
add
mov
xchg
adc
adc
sbbb
mov
out
fadd
cmpb
add
add
adc
jmp
ss
sahf
int
xorb
inc
popf
mov
das
push
dec
add
mov
es
dec
push
or
leave
out
or
bound
cli
xor
add
or
scas
fdivrs
xchg
aad
add
loope
push
xor
ljmp
add
sahf
or
mov
data16
nop
into
push
mov
xchg
in
cwtl
xchg
add
dec
shrl
add
mov
fists
es
sub
std
jmp
xchg
push
push
and
insb
adc
dec
aas
enter
xchg
lcall
sub
mov
pop
mov
dec
add
add
push
stos
imul
pop
leave
sti
fidivrs
xchg
loop
dec
or
fs
pop
xor
jae
and
sbb
in
dec
xchg
inc
or
cmp
pop
adc
decl
add
and
xchg
iret
mov
inc
sub
in
insb
or
mov
sub
cmc
je
inc
cld
je
or
adc
aas
add
cmp
and
push
fcoml
mov
adc
xchg
popf
aas
cld
push
aad
mov
inc
sbb
je
inc
jle
and
or
fwait
decl
lods
sarl
push
repnz
pop
xor
cld
and
mov
jle
adc
or
jge
in
add
movb
pop
sbb
sti
xor
cmp
cmpsb
sti
aad
or
mov
and
push
sbb
fildl
jo
add
int
sti
pop
bound
or
cmpsb
rcr
mov
in
fxch
mov
xchg
popa
dec
xchg
mov
es
insl
mov
cwtl
and
push
and
pop
dec
inc
repz
dec
int
jb
cmp
mov
loop
jge
sti
jle
mov
popa
dec
pop
or
xor
jge
jle
mov
sub
add
xor
add
adc
out
out
repnz
es
mov
mov
sbb
ficomps
std
mov
cmpsb
imul
dec
sbb
jg
add
mov
xchg
pop
outsb
or
jae
adc
fdivrl
or
mov
movsb
cmp
and
adc
mov
adc
push
test
pop
cli
je
and
adc
push
jmp
ds
je
fldenv
inc
adc
fdivs
mov
add
filds
push
xor
lock
sub
lods
or
and
mov
cmp
xchg
movsb
jo
add
xchg
psubw
std
ljmp
hlt
xlat
rorl
test
pop
stc
psubsb
cmp
stos
jg
flds
test
or
add
jo
add
and
decl
add
cs
pop
xor
lret
or
cmp
mov
popa
sub
sbbb
call
jmp
aas
and
icebp
sub
push
jge
lahf
andb
repnz
push
mov
lcall
xchg
xor
mov
mov
push
jb
jns
adc
add
pop
in
jb
jle
xchg
stos
ljmp
mov
inc
jno
sbb
cwtl
ficompl
xlat
cmp
add
or
dec
mov
rsqrtps
jle
sub
arpl
out
xchg
sbb
add
sub
pop
lds
pop
lds
cs
adc
jp
and
cli
dec
adc
das
add
or
jo
mov
in
jp
mov
repnz
mov
inc
xchg
movsb
sub
inc
add
xchg
cmp
adc
cs
xchg
ret
pop
lods
inc
pop
fiaddl
xchg
ret
outsl
cmp
inc
jmp
push
cs
dec
aas
mov
mov
jl
or
daa
mov
xchg
push
push
lcall
inc
data16
add
lcall
xorl
xchg
in
push
cmc
orb
sub
or
sbb
inc
fstl
imul
pop
dec
je
in
int3
pop
bound
push
sub
loope
icebp
add
mul
adc
jb
mov
sbb
cmpb
add
mov
jg
clc
sbb
cmc
cld
or
cmp
add
or
add
add
cmp
add
and
in
leave
or
insb
cld
add
or
shrl
add
ljmp
in
mov
sbb
jno
xor
jno
incl
add
rorb
jle
jl
addb
add
add
aaa
ret
pop
sarb
mov
mov
inc
int
mov
inc
mov
mov
inc
in
mov
inc
int
inc
jae
pop
inc
add
xor
jae
es
push
je
add
xor
je
cmpsl
les
pop
xlat
testl
rcll
xchg
mov
in
and
add
ss
pop
pop
stc
adcb
add
aad
addr16
inc
movsb
sub
in
fcoml
sahf
cli
neg
mov
sub
sbb
test
les
sar
jmp
lret
fildl
cmpsl
dec
shlb
xchg
jmp
aad
adc
pop
popf
out
jle
lret
inc
add
inc
mov
jmp
mov
add
stc
push
ss
or
rorl
jle
incl
sub
xor
jl
sbb
test
pop
add
sub
notb
add
loopne
add
xchg
sub
lret
mov
pop
sub
xorl
jmp
nop
fnsave
cmp
xlat
lods
sbb
test
add
or
xor
nop
inc
scas
inc
jmp
dec
or
jmp
pop
mov
adc
xor
jl
sbb
test
or
fsub
nop
roll
push
std
dec
push
dec
or
ljmp
or
push
cld
ja
jl
out
pop
cld
mov
add
add
in
xchg
add
sahf
jo
scas
out
or
jle
cld
pushf
incb
mov
add
pop
icebp
pop
in
pushf
inc
add
mov
or
add
in
cvtpi2ps
std
mov
cltd
adc
lods
or
mov
add
decb
aad
sub
aad
xor
shrb
aad
cmpl
mov
sti
inc
clc
sbb
inc
add
push
stos
cmp
and
jmp
and
into
pop
xor
inc
jmp
jp
push
dec
clc
dec
pop
in
dec
push
pop
xor
addr16
cmpsb
jl
ret
mov
andb
call
cwtl
and
push
popa
add
scas
in
push
or
lds
jl
test
bound
ss
push
sbb
sbbl
movsb
pop
cmp
mov
inc
cmpsb
mov
imul
mov
pop
subl
std
push
adc
or
rolb
and
fcomps
ret
add
lret
dec
inc
cmc
imul
mov
xorl
aad
lcall
out
or
jmp
xchg
adc
popa
xlat
out
inc
push
xlat
xor
push
pop
std
ss
lret
mov
or
test
lods
mov
add
xchg
cld
push
lahf
inc
xchg
data16
sbbb
add
xchg
mov
out
cmc
cmp
aad
je
lods
xor
mov
jecxz
pop
insb
xchg
or
sub
addb
lcall
push
sbb
shl
mov
testb
inc
in
jo
add
fs
push
pop
fisttpll
mov
fmuls
cld
xchg
dec
enter
jne
add
and
push
push
cmp
inc
adc
cvttps2pi
out
inc
dec
icebp
jne
xchg
dec
cmp
jo
sbb
xor
pushl
jae
addr16
cmp
mov
and
dec
pop
mov
cld
cmc
pop
jp
jnp
jmp
dec
out
mov
cmp
orl
pop
es
jp
mov
cli
jbe
test
and
push
pop
jl
out
pop
and
dec
fs
cld
lcall
call
sub
dec
or
jne
xchg
enter
adc
aad
shlb
in
cld
push
push
and
xchg
pop
lret
bound
fsubs
or
xchg
inc
jecxz
push
addl
addl
xchg
add
int
or
xchg
loop
adc
call
add
stc
mov
mov
mov
sub
xchg
xor
add
sbb
and
push
add
into
sbb
xchg
adc
xchg
or
sbb
movsl
subl
dec
add
jmp
and
adc
jmp
pop
dec
sub
xchg
call
lret
flds
xchg
mov
jecxz
push
add
add
decl
jmp
mov
push
cli
push
or
ss
dec
jae
gs
push
arpl
xorl
dec
out
add
add
push
imulb
cmpsb
out
sub
mov
xchg
mov
les
push
xlat
arpl
mov
aad
decl
loop
jae
loope
add
jmp
call
add
daa
inc
and
jne
jg
hlt
push
add
cli
mov
cli
cs
in
cmp
or
add
dec
jmp
xchg
or
jmp
cmp
or
add
cmpsl
add
vmread
cld
jmp
mov
je
inc
xchg
mov
out
jbe
lods
int
push
daa
addb
and
mov
jae
sbb
repz
sub
add
std
call
xchg
int
pop
push
xchg
outsl
mov
call
add
cmp
lods
mov
cmp
cmp
cmp
fcoml
fldenv
out
pop
pop
adc
leave
rcrb
adc
or
ret
repnz
adc
push
dec
mov
into
adc
mov
sub
add
push
push
push
jb
mov
mov
push
mov
xchg
lock
push
push
jae
adc
loope
xchg
cltd
int
fcoml
jge
push
push
push
lea
out
mov
dec
subl
cwtl
and
mov
adc
test
adc
mov
mov
aas
rol
fmulp
fstpt
stos
rorb
push
jb
jmp
fisttpll
add
pop
add
xorl
cmpsb
popf
push
std
xchg
popf
aaa
adc
shrl
mov
jp
jmp
fdivrp
call
popa
ficompl
jne
rol
call
fimuls
in
enter
pop
xor
add
data16
test
test
out
add
cli
jle
or
test
jnp
mov
push
loope
adc
cmpl
test
or
add
add
pushf
lock
lods
or
sbb
out
enter
loope
jle
push
add
inc
fdivrs
fdiv
inc
fucomp
push
inc
cld
incl
or
add
jg
or
in
cli
call
push
or
sti
sti
in
push
call
aad
inc
push
sub
fwait
jmp
sbb
or
jo
jnp
repz
call
pop
pusha
xchg
inc
dec
lods
int3
cld
rolb
pop
out
xlat
lods
sarl
mov
daa
jge
mov
add
mov
sbb
pop
fisubrs
push
popf
or
mov
sbb
jb
mov
add
and
or
repnz
sbb
dec
sbb
push
sarl
sub
xchg
ljmp
and
push
fldenv
icebp
push
xlat
and
push
aam
jmp
xchg
fimull
mov
imulb
or
xlat
xchg
xorb
pop
dec
cmp
leave
dec
stos
xchg
std
frstor
test
nop
aad
repz
add
push
adc
nop
fdivrs
cmp
lods
sbb
dec
adcl
out
fimull
mov
iret
push
mov
ficoms
inc
and
cwtl
adc
adc
push
add
out
lcall
fisttps
test
or
ljmp
insl
mov
jge
or
jb
out
imul
out
sbb
iret
xchg
sbb
jg
enter
in
sbb
in
mov
sub
fwait
dec
or
jmp
loop
add
addb
dec
or
cwtl
ljmp
or
mov
sbb
out
push
call
jecxz
sub
sub
addb
pop
add
jle
in
fisttps
cmp
pop
mov
pop
std
dec
xchg
sbb
les
lock
mov
test
add
or
test
inc
test
add
add
add
push
adc
jge
xor
aad
imul
dec
ret
test
movsl
enter
and
fsubrl
jecxz
cwtl
repz
push
repnz
std
pop
pop
int
adc
mov
imul
sbb
pop
std
xor
xor
mov
sbb
mov
adc
pop
std
push
scas
add
add
xchg
inc
roll
xchg
and
jae
jle
pop
das
cmc
mov
std
pop
cs
shlb
inc
aad
push
std
add
sbb
insb
adc
bound
mov
dec
out
into
add
out
sar
jle
test
stos
sbb
jge
sub
mov
test
add
or
out
add
aad
test
add
push
repnz
sbb
mov
mov
gs
fsubrs
pop
sahf
pop
push
dec
xchg
adcl
inc
sub
add
bound
or
das
jae
cwtl
or
inc
loope
testb
or
jmp
dec
cmp
mov
add
rcll
add
or
xchg
and
lock
or
mov
lret
nop
inc
stc
push
test
jmp
or
and
ljmp
mov
mov
loope
dec
add
xor
add
sti
mov
adc
add
mov
mov
je
movsl
jg
je
outsl
pop
es
data16
btr
cmp
jg
cmp
push
mov
or
jae
xchg
ds
or
in
pop
and
mov
xchg
pshufw
in
mov
pop
mov
sbb
push
mov
cmp
das
dec
or
inc
mov
data16
or
sti
call
lahf
adc
xchg
in
push
call
icebp
lea
jecxz
mov
jbe
std
std
pop
in
aam
cmpsb
adc
cmp
jnp
out
popf
and
sahf
loopne
imulb
nop
aas
aad
mov
inc
and
pop
mov
xchg
lock
lock
pusha
mov
std
pusha
add
mov
adc
add
rolb
mov
ret
imul
jo
or
or
adcb
jg
add
mov
testb
out
jle
out
outsb
sbb
out
mov
sbb
fsubrl
cmp
cld
stos
sbb
jle
mov
mov
es
mov
sbb
jge
addb
mov
mov
nop
test
add
lcall
lret
push
push
fisttps
sarb
jg
icebp
add
jb
ret
scas
fwait
in
pop
mov
cmc
sbb
mov
test
xchg
sub
call
xlat
mov
call
rorl
psubsb
or
adc
add
sbb
loopne
loope
cmpsl
repnz
or
jae
sbb
outsl
div
sub
push
orl
or
imul
call
cmp
js
jno
inc
sub
or
std
arpl
push
inc
dec
add
mov
mov
orb
js
in
add
add
add
mov
test
stc
pop
je
jmp
pop
add
mov
add
rcrl
push
test
mov
xchg
adcl
enter
dec
adc
jecxz
mov
test
test
jno
std
out
xchg
sti
ljmp
je
inc
push
xchg
aad
xchg
out
push
xlat
add
repz
pusha
sub
push
pop
hlt
rorl
enter
xchg
lock
ja
repz
xor
push
push
cld
shl
imul
xchg
testl
xor
xchg
cld
dec
pop
xorl
jnp
loope
int3
mov
mov
enter
pop
or
adc
pop
stos
mov
ret
sarb
in
pop
mov
add
ljmp
sub
adc
mov
dec
inc
bound
aam
lods
mov
jo
mov
loopne
or
jnp
test
cmpsb
xchg
add
cli
jne
les
xchg
pop
daa
add
loop
xchg
adc
aad
out
xchg
cmc
movsl
lret
fdivl
add
arpl
test
aad
mov
or
pop
mov
bound
mov
xchg
in
sbb
lret
loope
mov
sub
pop
jl
roll
std
fimuls
or
jo
inc
rorl
in
push
insb
clc
jmp
inc
clc
sub
push
dec
adc
add
jl
push
sub
mov
cmc
jecxz
clc
insb
pushf
lods
dec
sbb
sbb
xlat
add
xchg
add
icebp
iret
or
push
or
std
call
paddw
cs
fsubp
xchg
jecxz
cld
jae
std
pop
mov
mov
add
mov
adc
push
mov
mov
test
test
mov
shr
jb
aam
hlt
repz
jmp
adc
aad
lock
add
push
hlt
out
and
rclb
ljmp
push
out
daa
cli
xor
sti
add
leave
in
mov
je
xchg
mov
outsl
stos
jne
andl
add
imul
inc
hlt
dec
mov
dec
and
mov
mov
imul
std
sbbl
stc
mov
fnsave
jmp
or
leave
or
fadds
stos
mov
in
lcall
mov
stc
mov
or
inc
add
aad
xorb
or
mov
clc
dec
xor
dec
add
aad
lds
loop
and
aad
ja
leave
gs
out
scas
add
rorl
ljmp
add
or
js
icebp
mov
fiaddl
add
mov
inc
sbb
or
ret
add
sbb
loope
cmp
test
mov
cmc
fimull
xor
mov
pop
bound
fistl
jmp
or
push
mov
decl
negl
xlat
imul
add
idivl
adc
push
lods
push
jg
xor
js
fcoms
adc
into
push
add
inc
in
jg
incb
jne
push
mov
mov
test
dec
add
bound
sbb
dec
std
cld
sbb
xlat
or
push
fidivrs
cmp
sbb
notl
add
movb
push
js
sbb
dec
std
jl
sub
push
fisttpll
xor
cld
mov
inc
in
lret
cmp
or
test
call
je
rcl
ljmp
mov
popf
add
aam
out
inc
jnp
std
ljmp
or
mov
adcb
test
mov
stc
sbb
hlt
pop
mov
mov
add
jl
add
jae
popl
cmp
aaa
inc
mov
addl
fwait
mov
jae
jo
add
jb
cmc
cld
xlat
cmp
mov
push
dec
scas
and
push
xor
aaa
xchg
testb
in
mov
pop
mov
and
fildl
mov
jmp
jne
movsl
and
jae
cmp
xor
sbb
fwait
push
test
test
jae
dec
add
aad
sbb
shr
jnp
cld
or
ds
test
jl
add
xor
roll
add
jmp
sti
sti
out
std
xchg
jg
jne
or
or
mov
shl
add
icebp
pop
int
stc
cltd
sbb
data16
sarb
pop
data16
or
fwait
out
aad
dec
cmp
stos
sbb
add
cmp
dec
pop
fistpll
imulb
fnstcw
jge
mov
in
add
je
enter
xchg
or
jmp
fiadds
mov
ljmp
in
popa
idiv
gs
jge
push
or
add
jmp
enter
dec
test
push
test
adc
ret
inc
jmp
xor
roll
push
jno
leave
sub
add
notb
lds
lock
mov
jns
inc
add
jle
ficoml
sti
xor
in
in
pop
mov
or
push
mov
sti
jbe
adc
imul
jb
lret
adc
jbe
adc
imul
bound
adc
jbe
adc
imul
sti
jbe
adc
imul
xchg
mov
je
add
adc
call
repnz
pop
ret
fwait
test
call
dec
test
mov
call
aad
lods
mov
push
je
push
jns
out
jle
add
hlt
cmpb
sbb
inc
jo
dec
rcrb
cmp
cltd
cld
sub
or
shl
add
cmpsb
sahf
lods
cld
test
ja
add
mov
sbb
push
loope
test
loopne
xor
mov
call
fcoml
lods
mov
cld
mov
and
adc
xchg
push
add
aad
jmp
push
and
or
lret
push
cs
hlt
push
lahf
out
aad
sbb
leave
sub
pop
add
out
repz
add
xor
sub
push
popa
call
sti
pop
or
loop
insl
faddl
mov
mov
fidivrl
push
jne
vcvtps2pd
outsb
sbb
and
or
dec
ret
out
rorl
out
fwait
out
daa
add
jle
mov
loop
rorl
cmovle
xor
jmp
add
jne
pop
sbb
cmp
push
cmc
fs
fadds
and
fcomp
imul
outsb
in
lretw
mov
adc
sbb
cmp
dec
mov
es
aas
mov
testb
mov
test
and
jge
or
pop
std
sub
lea
add
idiv
add
jb
jo
mov
incl
inc
and
in
sub
or
lea
or
cltd
decl
rorb
jo
aam
add
dec
arpl
push
xchg
jno
and
or
adc
sti
incl
loopne
loopne
or
mov
sbb
dec
sub
push
sub
adc
stc
inc
add
outsl
lcall
enter
scas
pop
add
aad
leave
inc
stc
cmp
add
loopne
pop
mov
inc
add
add
popa
jge
leave
mov
dec
push
adc
aam
adc
std
and
cmp
adc
out
cmpb
add
add
adc
add
add
call
pop
mov
rcrb
pusha
ret
add
call
cld
dec
int
call
mov
add
stc
and
call
and
push
inc
xor
push
pop
dec
mov
aaa
lea
xlat
pop
jge
and
pusha
pop
pusha
dec
mov
cltd
mov
add
repnz
and
test
jb
icebp
adc
xor
ja
repnz
int
inc
aad
bound
adc
sbbb
adc
lea
fucomip
inc
incb
pop
inc
add
negb
movsl
repnz
sbb
xor
psrad
aam
mov
fptan
jb
jg
std
mov
add
daa
inc
push
pop
dec
push
xor
pop
dec
or
shl
test
or
out
sbb
fistl
test
xchg
lcall
dec
dec
dec
adc
and
dec
xor
lcall
add
std
cmp
push
mov
jmp
in
addr16
lock
ret
add
xor
jo
daa
sbb
lret
incl
jo
aaa
adc
lret
mov
aas
subl
xor
aas
test
aam
dec
add
push
jg
pop
cmp
push
or
ljmp
lds
sub
out
add
add
aas
add
xor
jb
in
mov
pop
testb
test
jne
add
add
aam
xchg
loop
xchg
cmp
std
adcl
leave
inc
aad
pop
aam
and
mov
loopne
add
mov
inc
aad
es
and
sub
mov
xor
pop
filds
aad
inc
sbb
call
stos
jne
cmp
sbb
dec
movsb
pop
ret
mov
add
mov
xor
adc
orb
aad
jecxz
jb
mov
ret
jno
or
or
leave
add
orl
mov
or
jge
bsr
test
roll
adc
std
cli
or
inc
lds
mov
in
dec
adc
jae
cmp
sbb
add
mov
popa
rorl
je
jbe
imul
add
cld
adcl
sbb
mov
imul
or
dec
inc
add
push
scas
jae
xchg
xor
shl
jae
bound
out
cld
push
inc
add
xchg
cmp
cld
testb
popf
cmp
cld
out
sub
and
add
and
call
push
rcll
clc
out
cld
scas
rolb
rcrl
push
push
jb
fs
jno
or
ljmp
jmp
rcll
sbb
cmp
je
add
sub
mov
or
inc
sbb
dec
add
sbb
xchg
add
in
aas
cmpl
jmp
fldl
add
sti
mov
inc
icebp
add
int3
sarl
daa
mov
add
xor
sti
adc
jno
in
fiadds
cs
je
mov
jne
push
call
and
fadd
inc
cmp
push
mov
lds
dec
mov
pusha
incl
daa
inc
add
add
lea
pop
aad
dec
push
dec
scas
jae
and
push
in
negl
fisubl
into
cld
clc
dec
push
and
out
std
loopne
adc
or
xor
add
das
xchg
and
cmp
jbe
jp
jl
loop
xor
push
push
push
push
nop
push
insl
fwait
push
call
sbbb
stc
dec
add
dec
mov
cli
adcl
out
dec
test
cli
out
stc
inc
aad
ds
roll
sarl
pop
pop
std
jp
add
pop
loope
addr16
call
jo
push
sbb
out
pop
jmp
push
fdivs
and
or
pop
pop
insb
stos
in
lret
stc
sub
cld
add
jnp
bound
push
dec
mov
stc
dec
inc
push
push
pop
ret
out
fadds
jle
test
ljmp
jle
lds
in
cld
mov
jle
mov
leave
repz
insb
mov
int
cs
pop
xchg
test
out
xchg
popf
imul
jae
xor
aaa
movb
inc
adc
pshufw
ficomps
jae
pop
out
push
mov
sbbb
mov
insl
out
dec
or
cld
cmpsb
outsb
js
sahf
pop
lea
xor
or
loopne
pushl
or
jo
jp
sti
subb
testb
das
sti
lcall
into
add
push
xchg
call
jo
in
cmp
jno
test
in
jns
add
stos
cmp
mov
lcall
adc
cld
ljmp
push
punpckhbw
jl
inc
icebp
jns
cmp
aas
add
imul
or
pop
add
aad
imul
ja
xor
add
cmp
pop
aam
dec
mov
jp
inc
aad
aas
clc
movsl
cmp
mov
idiv
ljmp
adcb
outsb
sub
inc
aam
jb
call
add
imul
sbb
push
push
lcall
aad
mov
pop
mov
arpl
xlat
loop
cld
loopne
cmc
adc
add
out
clc
push
std
sahf
adc
pop
xrelease
jp
xor
jg
pop
out
push
gs
int3
adc
idivb
inc
aad
lcall
xchg
add
jno
outsb
xchg
or
adc
stc
cmpsb
add
in
push
or
add
jp
xor
popf
test
fadds
xchg
ljmp
add
out
cld
push
out
pop
dec
mov
jmp
pusha
in
pop
repnz
das
dec
in
arpl
out
lcall
dec
push
pop
arpl
call
dec
int
insb
shl
dec
inc
notl
dec
push
lret
adc
dec
ss
fdivs
jmp
out
adc
bound
enter
icebp
std
test
int
xchg
dec
icebp
adc
cmp
popf
dec
add
mov
add
add
sti
ror
mov
sti
aas
add
and
mov
mov
or
mov
aas
add
and
mov
mov
adc
push
sarb
add
stos
cwtl
lret
aas
or
inc
test
test
add
xchg
ret
push
dec
xchg
xor
or
mov
and
in
push
add
test
outsl
or
push
pop
lahf
mov
dec
add
insl
out
jp
leave
dec
jb
cwtl
enter
aad
loopne
xchg
mov
add
sarb
call
dec
stos
push
std
add
add
mov
mov
mov
xchg
bnd
int3
in
enter
adc
je
sbb
pushf
enter
cmp
popf
push
mov
mov
sbb
sub
subb
push
call
das
movsl
jg
popa
or
fmull
call
jo
inc
mov
jle
add
stc
jno
fsts
pop
add
stc
lea
arpl
add
mov
xor
cmp
lret
adc
out
pop
dec
dec
push
jg
mov
add
nop
stos
xlat
push
lret
cmp
out
push
cmp
enter
aad
insb
dec
mov
cmp
enter
jl
arpl
add
add
repnz
pop
mov
jmp
sub
push
sarl
jnp
call
cltd
adc
add
fcos
in
push
inc
add
mov
mov
icebp
jg
rorl
xchg
xchg
jmp
shrl
fs
push
inc
sbb
call
imul
in
or
jg
call
push
fs
jmp
or
rdpmc
or
add
jb
movsb
repnz
ret
jle
add
jge
add
and
and
or
out
scas
outsl
in
sbb
xchg
sar
add
in
add
ret
inc
loopne
cld
or
pop
jno
jp
cmp
adc
gs
faddl
fistps
test
les
mov
push
pop
pop
dec
daa
fstps
push
sti
imul
repnz
xor
pop
sub
add
dec
es
pop
mov
add
dec
std
bound
or
jbe
add
pop
sub
add
dec
jp
inc
xor
bnd
and
push
ja
adcb
fadd
stos
aas
in
xchg
out
dec
and
sub
fistps
or
out
adc
sbb
adc
mov
aad
fists
lods
out
mov
stos
lcall
jmp
or
push
filds
pop
pop
mov
add
jge
ds
or
xlat
out
out
iret
or
sbb
jp
loope
cmc
getsec
jnp
repnz
inc
cmp
pop
inc
lds
stos
jns
and
jns
mov
fcmovnbe
push
in
lds
sbb
dec
out
icebp
mov
fcmovnbe
push
fs
loopne
pushl
sub
mov
add
fs
dec
std
jl
fdivl
jle
xchg
jmp
in
nop
jb
push
aam
out
es
pop
std
into
out
dec
sbb
in
mov
xlat
cld
scas
push
fidivs
int
enter
xchg
fnstenv
pop
ret
xchg
rolb
call
pushf
lds
mov
cld
fmull
out
jbe
or
aam
add
add
push
and
das
decb
mov
xchg
in
xchg
add
inc
clc
push
push
inc
shr
test
rcrl
out
test
bound
add
out
sti
out
mov
mov
in
out
mov
xchg
or
repnz
sti
mov
jne
add
sbb
jmp
lret
aas
and
add
std
incl
lds
xor
std
inc
xchg
ljmp
arpl
jge
roll
sub
mov
adcl
rolb
jne
sub
jmp
std
or
push
call
and
data16
xor
lock
add
push
jbe
xlat
push
aas
cld
scas
js
fcom
and
add
movsl
jp
pop
cmp
inc
xor
pop
add
xchg
sub
insl
les
hlt
fisttpl
vsqrtpd
addr16
inc
jmp
inc
sarl
sub
inc
in
lds
enter
popl
xchg
or
add
jo
fcmovu
lret
popf
inc
out
and
and
push
jmp
ljmp
outsl
mov
iret
sub
loop
orl
mov
aad
sbb
cmp
test
scas
or
fcoml
xchg
loopne
add
out
xor
cld
sbb
aas
jmp
sbb
push
jb
add
or
mov
or
xchg
jmp
and
cmp
mov
or
cmp
inc
jmp
jecxz
add
mov
cld
into
push
sar
cmp
insb
fstl
mov
pop
jb
inc
shll
push
je
mov
pop
and
sub
jo
adc
add
add
js
ss
je
cmc
out
cmp
sti
add
xchg
sub
cmpb
je
xchg
test
adc
mov
lea
cmp
push
call
adc
jo
aam
idiv
jnp
push
lea
sti
movsb
dec
pop
decl
sbb
mov
scas
or
aas
add
add
push
les
aad
mov
fstpt
mov
mov
stc
enter
paddsw
or
jnp
lea
jb
and
decl
cmp
add
imul
and
inc
stc
push
out
xchg
aam
add
sbb
mov
xchg
sbb
pop
cmpsb
sbb
pop
sbb
add
loop
inc
mov
xor
xor
pop
pop
and
and
or
cmp
imul
sub
jb
leave
test
adc
inc
lret
xor
ret
das
rorb
insb
inc
mov
in
out
leave
cmc
jg
or
add
sub
fistpl
dec
iret
mov
in
cmp
and
push
or
sbb
test
outsl
mov
ficoms
sar
add
into
ficompl
test
cltd
xor
mov
int
and
test
sbb
xlat
push
add
jmp
out
addb
cmp
aam
stc
aas
jmp
push
dec
pop
data16
sar
addb
cmp
ds
pushf
pop
or
idivl
ret
sahf
xchg
std
push
mov
cmpb
xor
mov
xlat
cld
insb
shrb
and
es
insb
and
or
pop
mov
leave
or
add
adc
call
and
add
inc
push
mov
and
push
fmull
adc
cmp
mov
pop
jae
add
sbb
data16
jb
inc
in
cmp
mov
out
sti
mov
rclb
pop
cmc
sub
mov
ret
or
mov
sti
ja
mov
pop
xchg
out
xchg
andl
cmc
push
sub
test
call
mov
or
xor
int3
mov
aas
loope
shrb
ret
adc
pop
push
andl
push
add
jge
aad
add
add
jne
stc
xchg
push
push
mov
sbb
dec
cmpsb
call
xor
loop
and
lods
lret
mov
sbb
call
add
dec
movsl
int3
dec
xchg
pop
in
jge
incl
or
in
test
add
and
pop
dec
lret
in
dec
adc
pop
fnstsw
mov
out
test
nop
scas
in
ds
les
call
popa
and
or
mov
cmp
cmp
cmp
es
xchg
jg
ss
loop
xchg
adc
mov
les
sbb
das
in
mov
lret
cmp
pop
jecxz
dec
dec
jmp
xor
loop
lret
scas
addb
inc
clc
jb
aad
ret
push
pusha
push
pop
xchg
std
mov
mov
dec
or
xchg
add
cld
jmp
movsb
aam
xchg
scas
add
jmp
not
mov
or
std
aad
outsb
gs
or
jle
adc
jle
out
cmpsb
aam
loope
idivl
push
or
repnz
cld
push
push
add
popa
mov
push
or
lahf
cmp
add
test
in
repnz
inc
add
mov
jno
out
fs
jno
call
pop
cmc
mov
incl
add
mov
imul
movl
incb
dec
cmp
clc
int
call
in
dec
or
inc
add
add
add
inc
clc
test
mov
sbb
sbb
mov
xchg
xchg
test
je,pt
repz
jl
aad
nop
sti
mov
add
or
std
mov
mov
xlat
mov
movsb
add
test
in
cmpb
xor
xchg
mov
imul
pop
ss
pop
es
or
test
loop
orl
cmp
js
add
loop
inc
adc
xchg
mov
test
clc
pop
pusha
int3
out
movsb
push
push
or
mov
add
inc
sbb
lods
mov
push
mov
loopne,pn
or
nop
incl
repz
ret
ljmp
push
daa
add
leave
cli
jmp
xor
fists
sarl
add
mov
cmp
dec
add
lcall
and
or
cmp
ss
pop
iret
mov
add
rcrb
push
push
repz
or
pop
in
popa
jnp
adc
sti
out
out
int3
cld
pop
jb
push
cld
add
aaa
sbb
adc
cwtl
into
cld
gs
pop
jecxz
xchg
sub
add
repnz
je
pop
sbb
and
add
mov
sahf
add
add
pop
insb
push
pop
add
into
call
in
cld
mov
std
cmpl
jmp
sub
arpl
fldl
add
inc
push
adc
lods
test
loop
inc
mov
adc
andb
dec
push
imul
subb
call
clc
lds
test
or
add
add
cs
xor
jg
sbb
or
mov
or
dec
cmc
incl
mov
cld
cmpb
cs
add
fildll
jmp
cld
xorl
aad
call
leave
rolb
repnz
pop
je
xchg
add
vandps
lcall
cli
jl
call
push
mov
in
jge
jmp
push
inc
lock
mov
lea
push
push
pop
push
aam
adc
loope
push
test
xlat
cld
and
or
dec
call
addr16
in
decb
mov
push
jns
aad
add
mov
testl
cltd
add
or
add
fabs
cli
xor
test
int3
out
pop
fidivs
push
or
add
fwait
hlt
xchg
cltd
add
or
mov
int
xchg
fisubrs
repnz
add
loopne
mov
mov
add
cmp
cmp
in
inc
ss
fisttpl
lret
out
mov
xchg
or
inc
aad
adc
sbb
fiaddl
shrb
add
dec
mov
ror
call
or
xorl
scas
xor
sub
addb
cmpl
or
push
popa
les
sbb
fs
popa
add
pushf
jecxz
pop
sahf
into
xchg
mov
call
cltd
cmp
or
pusha
xchg
fstl
movsl
std
mov
loope
pop
dec
add
xchg
or
aaa
leave
lret
add
divl
shll
test
jne
bound
aaa
push
mov
add
add
sbb
je
jp
in
ja
addb
push
dec
imul
cmp
incl
mov
pop
add
xor
jl
jl
mov
adc
shl
sbb
jnp
inc
in
add
testl
cmp
cld
ljmp
push
sub
cwtl
test
add
cmpb
mov
loopne
aaa
fdivrp
iret
sti
jne
xorl
les
std
lods
sub
or
stos
add
aad
cmp
xor
mov
jle
aad
add
xchg
call
add
cmp
and
cld
dec
outsb
rorb
jns
inc
jo
jbe
mov
sub
pop
outsb
in
in
mov
jno
jl
sub
push
jns
xchg
adc
out
roll
and
fwait
mov
sbb
adc
out
xchg
mov
fisubrs
clc
enter
enter
push
adc
add
loope
stos
shrl
ret
out
aas
iret
es
dec
ljmp
dec
shl
pop
addr16
enter
mov
add
jg
jb
or
inc
aad
mov
dec
lods
iret
jb
stos
cmp
dec
sahf
xchg
es
dec
push
mov
xchg
xor
push
dec
xor
addl
and
dec
out
out
jge
nop
ds
dec
lock
icebp
mov
push
mov
test
std
cld
jb
mov
rolb
stos
sbb
fistl
or
jge
dec
add
movsb
jecxz
test
push
scas
cld
push
mov
or
push
iret
cld
adc
std
fsubl
sbb
mov
out
push
std
push
add
loope
adc
adcb
add
add
ret
cmpsl
push
pusha
push
leave
testl
lret
mov
hlt
hlt
decl
jg
inc
in
notl
call
mov
xchg
outsl
xchg
xorl
jo
mov
adc
mov
mov
aas
jecxz
jne
xor
push
cmpsl
cmp
sub
aas
add
add
out
push
lret
insb
or
add
sarl
add
jg
pop
testl
sti
ss
dec
call
fildll
stos
enter
iret
out
aam
arpl
popf
push
psubusw
roll
push
xor
add
add
mov
cmp
push
scas
xrelease
pop
sub
add
lret
push
mov
adc
leave
sub
add
in
jb
mov
mov
jo
push
jp
sbb
sbb
mov
add
fimuls
cmp
inc
aad
dec
ljmp
fisubrl
xor
sbb
icebp
mov
xchg
or
cmp
adc
les
add
out
aam
xchg
enter
cmp
outsb
out
pop
cmpsl
add
fs
sub
xchg
cmp
push
or
add
adc
lea
add
ja
add
mov
pop
aad
arpl
leave
lea
aad
shlb
adc
insl
ljmp
notb
call
cld
mov
aad
lds
lea
jge
dec
add
push
pop
fdivr
xchg
or
mov
sub
std
xchg
cld
jmp
xchg
or
movl
adc
dec
cmpsb
mov
add
xor
sub
ss
adc
or
sahf
stos
inc
std
pushf
xchg
jb
push
add
fucomi
ljmp
inc
and
mov
pushl
mov
adc
fdivr
mov
mov
sbb
push
incl
jae
inc
sub
jno
imul
icebp
vunpckhps
lret
stos
repnz
mov
sbb
cmp
icebp
dec
pshufw
mov
test
out
add
ljmp
jo
inc
call
sti
incl
adc
mov
push
fs
aad
rclb
inc
out
add
test
push
cwtl
xchg
aad
xchg
int3
hlt
cmpsl
xlat
mov
add
cmp
jp
pop
incb
add
push
cmp
test
mov
jmp
xor
jnp
mov
das
dec
add
mov
add
add
pop
int3
and
es
iret
cld
lret
adc
add
pop
ljmp
clc
into
jg
pop
repz
or
mov
out
add
daa
rol
ffreep
dec
out
out
into
fildl
not
pop
ss
adc
scas
cmc
or
jb
stc
in
imul
test
add
or
push
iret
mov
sbb
add
mov
or
int
jmp
dec
jge
sub
ljmp
push
mov
xchg
mov
push
ffree
xchg
daa
push
or
add
jl
sar
jle
jecxz
movsl
cmpsl
mov
or
ljmp
inc
lds
mov
or
sar
iret
dec
or
add
pop
in
sub
or
mov
in
and
out
call
test
daa
adc
and
xchg
les
push
dec
and
mov
and
push
dec
mov
xor
bound
xchg
jnp
mov
mov
push
push
sbb
mov
mov
mov
movsb
repz
xor
add
add
push
ds
push
push
and
push
and
js
push
mov
out
test
or
cmp
add
clc
icebp
pop
push
adc
je
lret
sti
je
popa
push
call
xor
insb
test
sbb
jmp
js
or
jno
pop
pop
or
mov
jns
movsb
cmp
pop
cmp
add
jg
std
and
mov
or
pop
mov
or
into
cld
pop
insb
and
push
xchg
dec
outsb
pop
mov
adc
inc
insb
aad
dec
pop
pop
fs
movsl
lret
in
dec
sub
sub
leave
cmp
inc
lods
outsb
inc
insb
aad
adc
or
mov
das
or
add
add
pop
pop
outsl
cmpsb
aas
pop
frstor
or
lods
call
aad
es
push
xor
testl
mov
enter
push
pop
mulb
fsubrl
sbb
pop
mov
mov
xor
mov
aad
stos
add
out
or
aad
push
lret
add
and
call
dec
leave
cmp
sub
pop
ret
icebp
ret
push
in
sbb
test
adcb
push
jl,pn
add
sarl
lcall
xchg
cld
gs
sbb
add
insb
cmp
pushf
mov
mov
lahf
out
jb
sbb
pop
adc
mov
ret
ds
mov
flds
add
ss
xor
jecxz
jle
pop
mov
adc
insl
jo
add
mov
cmc
lahf
cwtl
cmc
pop
stos
pop
in
inc
or
fldcw
add
fnstcw
jmp
add
xor
push
mov
mov
mov
out
jns
sti
mov
out
roll
xchg
add
daa
dec
add
add
inc
jl
mov
add
sti
adc
incl
cmp
xchg
mov
sarb
das
adc
ret
iret
lds
mov
dec
push
call
lods
cmovo
les
add
cmp
push
outsl
sub
add
cld
push
aad
dec
or
mov
add
push
add
pusha
mov
pop
fiaddl
push
jo
add
xchg
aad
xor
jne
jmp
fwait
ja
int
pop
or
jmp
pop
in
add
call
mov
mov
iret
jae
das
dec
or
cmp
mov
mov
jb
shr
daa
adcl
cmp
adc
subb
inc
aad
movsb
sub
fiadds
xchg
sbb
pop
fnstcw
out
mov
cs
std
mov
dec
xor
shll
add
or
pop
dec
aaa
or
adc
push
out
into
sbb
fildl
mov
out
adc
mov
out
dec
cmpsb
imul
sub
and
leave
movl
adc
mov
sbb
adc
out
ljmp
cmp
mov
or
lds
pop
lds
mov
stc
cmpsb
clc
jmp
cmp
lcall
push
add
or
inc
jmp
lea
lods
fistl
or
call
xor
adc
roll
add
in
jmp
call
lds
push
sti
xor
adc
sbb
add
cld
or
push
ja
sub
lods
or
dec
push
out
sti
jne
iret
roll
mov
add
xchg
add
inc
inc
sar
mov
add
je
xor
cmp
jno
sub
decl
sti
xlat
stc
int
cmp
pop
sti
adc
xchg
jo
mov
cmp
lcall
call
push
lds
shll
adc
mov
add
xor
iret
lods
add
aad
out
add
push
add
movsb
cmp
les
aaa
lock
out
add
arpl
xchg
jne
jmp
and
cld
aad
mov
adc
loopne
and
inc
dec
inc
aad
lds
sub
loopne
adc
les
pop
iret
push
loopne
add
loope
rclb
call
pop
rol
or
ds
sub
cli
lahf
adc
add
das
pusha
aaa
sbb
lods
dec
out
and
ja
popa
sbb
add
in
mov
into
and
dec
aas
ja
mov
dec
fnstsw
fs
mov
pop
lds
mov
incl
pop
mov
sti
lret
dec
out
push
adc
push
sbb
aas
imul
cmp
add
popa
aas
pop
jns
add
mov
push
jo
inc
cmc
sbb
int3
shr
pop
mov
lock
cmc
pop
fildl
adc
xchg
dec
add
sbb
xor
or
mov
loope
mov
sub
pop
call
push
add
cmpsl
adc
std
fdivrl
aaa
adc
push
call
inc
add
and
mov
scas
mov
lds
ret
sub
subb
push
or
adc
mov
repz
mov
add
test
test
dec
add
lock
add
enter
lock
add
repz
mov
jns
mov
sti
mov
incl
add
decl
jge
iret
test
lock
push
mov
cld
or
push
insb
enter
inc
add
push
dec
mov
add
mov
mov
mov
sbb
add
movsl
add
aad
push
push
cmp
push
adc
or
loopne
adc
add
aad
shll
aaa
loopne
enter
rcl
adc
dec
in
in
ss
mov
ret
cld
and
sbb
daa
dec
lock
jmp
inc
add
cmp
enter
adcl
ds
mov
aaa
aam
push
sbb
ret
xchg
mov
test
pop
out
cmpsl
sbb
aaa
fnstenv
pop
push
pop
daa
add
leave
cmp
movsl
mov
lret
in
out
xchg
sbb
push
movsb
leave
inc
fimuls
xor
out
xchg
pop
sub
ror
jge
shlb
shl
rolb
jle
shrb
lahf
cmp
or
mov
cmp
andl
popf
add
jge
push
mov
add
or
jmp
scas
jmp
sub
or
jp
in
dec
fimull
add
jl
adcb
sbb
pop
jle
scas
subl
or
xchg
xchg
sbb
mov
cld
outsb
push
scas
jb
add
pop
dec
or
ljmp
sbb
jg
ret
sbb
ret
testl
inc
pop
call
ljmp
mov
in
inc
incl
xlat
push
cmp
cmp
xorl
xor
add
or
jmp
incl
push
andl
les
std
incl
add
cwtl
xorl
jo
add
dec
add
or
mov
mov
push
push
aad
pop
sbb
pusha
add
sti
cmp
and
inc
mov
inc
jmp
cld
add
sbb
inc
aad
add
cwtl
sbb
add
mov
mov
hlt
std
fisttpl
mov
add
mov
inc
inc
enter
adc
pop
popf
add
insl
sub
aam
shll
push
push
pusha
sbb
adc
mov
xchg
lods
push
mov
cmp
mov
or
mov
cmpsb
adcl
cmp
sub
scas
sub
add
xchg
icebp
in
or
add
dec
pop
push
cmp
xchg
mov
xchg
or
add
je
sbb
and
push
jg
int
sub
daa
add
sub
add
add
push
fisubrl
cmp
mov
pop
mov
mov
fcmovbe
adc
mov
xor
sahf
pop
daa
cmp
jae
pop
je
cmp
add
subl
les
mov
stos
std
xor
les
sbb
adc
cmc
aas
push
hlt
jne
test
pop
adc
cmp
in
leave
and
mov
lods
cld
sbb
movaps
xor
sub
lods
cmp
loope
vminpd
add
add
inc
cmpsl
inc
lods
push
sti
jbe
popa
cli
dec
mov
adc
inc
sub
cld
xorl
aad
inc
cld
xor
mov
popa
or
lods
popa
pop
mov
call
xor
dec
pop
pop
add
pushf
into
inc
cmp
mov
aam
inc
add
cld
inc
add
sub
ret
add
inc
add
or
pop
aad
inc
in
and
shrb
dec
inc
add
inc
aad
mov
push
mov
add
je
cmovo
jg
mov
mov
add
xor
cmovo
jg
mov
mov
add
je
cmovo
aas
push
mov
mov
add
inc
add
inc
aad
xor
call
xchg
inc
add
nop
mov
mov
add
aad
sahf
adc
inc
out
mov
leave
xor
push
dec
shll
out
cmpsb
adc
add
fwait
inc
aad
cmp
adc
inc
out
dec
adc
xor
jne
aad
unpckhps
dec
adc
adc
add
inc
aad
push
setne
dec
repz
inc
out
inc
adc
xchg
inc
aad
mov
xchg
or
into
adc
add
sub
jg
or
dec
mov
mov
jg
sbb
lahf
ror
dec
add
pop
inc
jmp
add
fldcw
lahf
adc
lahf
std
jecxz
add
testl
mov
loope
dec
add
negl
push
pop
nop
or
dec
sbbl
test
cwtl
or
mov
pop
inc
jmp
fldcw
add
add
pop
popf
mov
in
sub
adc
add
add
mov
lods
sub
pusha
jmp
add
dec
fdivl
adc
imul
in
sbb
pop
jl
inc
jl
mov
sub
lahf
mov
int3
sbb
lahf
sbb
inc
sub
and
jmp
add
mov
fstl
add
mov
xchg
xor
adc
xchg
mov
xchg
mov
mov
aad
inc
add
cmovo
push
adc
push
mov
scas
jmp
dec
inc
add
inc
aad
hlt
mov
mov
cmpsl
lds
push
mov
popa
aas
cmp
dec
mov
xchg
test
mov
enter
mov
std
sub
ja
add
cmp
cmp
sub
lods
jo
push
jbe
js
aad
lret
or
aad
mov
dec
dec
out
sub
ret
cmp
popa
sub
mov
outsl
inc
aad
jbe
adc
cmpsb
xchg
mov
cmpsb
mov
mov
dec
out
out
lahf
inc
aad
adc
add
inc
popl
mov
mov
xchg
inc
sub
out
mov
out
testl
xchg
in
jp
icebp
push
xor
adc
cmpsb
roll
popa
bound
shll
xor
dec
and
jo
lods
imul
cmp
xor
movsb
xor
mov
xchg
xor
out
add
mov
call
adc
jb
dec
fcomp
aaa
adc
push
dec
mov
ret
jmp
out
movsl
call
and
cld
push
mov
push
loope
or
add
pusha
icebp
ljmp
add
add
cmp
mov
jecxz
mov
repnz
xchg
inc
in
add
sub
sub
mov
pop
sti
call
mov
jnp
mov
mov
xchg
int3
jne
mov
inc
pop
sti
pushl
testl
lea
icebp
decl
mov
call
out
add
add
repz
pushl
push
jmp
add
aad
sbb
xchg
mov
ret
loope
test
mov
test
adc
xchg
mov
ret
fldcw
aas
cld
add
ret
aas
push
pop
daa
call
cmpsl
jb
dec
and
push
mov
mov
push
and
pop
scas
mov
add
ja
lcall
mov
cmpsb
or
adc
xor
cmc
xor
add
cmp
pop
sbb
sub
or
add
mov
ja
mov
sbb
in
xlat
inc
aad
out
mov
ret
leave
lea
cmp
and
jg
push
imul
lcall
xor
es
leave
adc
pop
cmp
subb
mov
or
mov
add
out
pop
ret
pop
adc
mov
xchg
ss
sbb
cmpsb
add
adc
add
gs
icebp
or
or
push
sbb
push
push
in
adc
cltd
inc
fdivs
lcall
bound
stc
adc
in
pop
push
lret
mov
movsl
mov
mov
cld
sahf
popa
or
xchg
test
mov
pop
xchg
mov
inc
push
xor
jno
dec
gs
sahf
jb
inc
cld
sub
push
or
aam
sahf
adc
movsb
idivl
add
dec
fucomip
outsb
xchg
mov
adc
in
repz
push
push
sahf
cmp
iret
jecxz
rcr
imul
repnz
xchg
xlat
sub
add
mov
jg
iret
xor
xchg
iret
lds
test
fs
xor
xchg
mov
das
or
xchg
fisubs
pop
sub
sbb
mov
rcrb
fcmovbe
iret
sub
aam
pop
int3
imul
aad
xor
cmp
sysexit
sub
dec
adcl
pop
or
roll
add
ljmp
mov
mov
pop
or
mov
xchg
dec
adc
xor
movsl
sub
je
pop
mov
dec
popa
aas
and
xor
jp
add
int
jl
push
cmpsb
and
lds
mov
pop
mov
mov
sub
or
jnp
pop
cld
mov
sub
add
sbb
fcomps
mov
xchg
adc
pop
pop
scas
addr16
out
movsb
aaa
mov
leave
mov
inc
aad
and
movntq
test
jmp
out
cld
inc
aad
mov
sbb
or
sti
pop
inc
lahf
push
outsl
sahf
movsl
dec
cmc
or
add
sahf
shl
fisttpl
jp
nop
sbb
add
or
cmp
shll
xchg
in
clc
es
inc
add
leave
jb
push
sbb
push
ljmp
inc
jb
cld
dec
fs
pop
cmpsl
shl
popa
divl
dec
sbb
popa
push
inc
jmp
add
sbb
mov
cld
aas
ss
testb
fstpl
jge
fisttps
ret
xchg
cmp
add
or
test
stos
mov
push
adc
cmp
nop
cmp
push
int3
pushf
push
cmp
mov
pop
outsl
sti
push
sbb
pop
mov
or
adc
icebp
lds
stc
aam
call
out
in
fwait
outsb
sti
call
ss
test
loope
call
sti
adc
add
scas
insl
sti
je
sbb
xchg
xchg
sti
mov
jne
outsb
shr
dec
xor
in
ja
pop
orl
cmp
iret
enter
sbb
jnp
mov
add
mov
add
notb
mov
das
stos
sbb
cltd
test
or
ja
dec
push
clc
out
jo
cld
pop
repnz
add
repnz
jb
add
cld
dec
lods
jg
out
push
mov
enter
leave
cli
bound
repz
push
xlat
xor
push
sub
push
push
adc
cli
mov
les
fistl
mov
pushf
std
das
pop
test
xchg
fstp
orb
stc
xchg
xchg
or
jno
cmp
popf
xchg
stos
sbb
outsb
inc
enter
add
fwait
jne
jge
cmp
mov
or
cld
bound
jb
or
andb
adc
int
aad
mov
adc
repz
add
jl
or
fisttpll
inc
fiaddl
push
leave
test
xor
pop
jb
xchg
or
ret
test
faddl
add
mov
out
or
inc
sub
ds
imul
add
jmp
and
inc
call
jb
adc
jmp
or
int
mov
or
push
leave
call
into
pop
call
or
cltd
popf
test
jmp
and
add
repnz
bound
xchg
mov
imul
pop
inc
jp
inc
lods
sahf
mov
push
daa
mov
add
lods
push
rorb
sbb
je
sbb
jne
daa
xchg
je
or
push
or
push
shr
sbbl
xchg
mov
add
adc
or
xor
aas
mov
aas
xchg
aam
add
in
adc
add
aad
jo
jg
ret
xchg
sarb
ficomps
cmp
jns
mul
std
adc
pushf
cli
das
add
dec
jae
cld
call
jb
or
movsl
enter
add
mov
sub
mov
push
orl
jne
inc
jmp
xchg
jmp
je
mov
pop
adcb
fwait
les
mov
lock
push
or
pop
adc
ret
imul
sbbl
sbb
data16
and
mov
add
lahf
dec
out
out
test
loopne
mov
jno
pushf
cmp
dec
shlb
cmpsl
add
ds
mov
std
adc
loopne
adcb
jno
cmp
push
adc
or
out
xchg
dec
add
cmpsb
mov
xor
push
push
and
add
add
stos
in
jg
or
push
sbb
stos
scas
jae
call
ss
aaa
sti
push
or
push
jno
mov
adc
pop
les
outsb
xchg
push
jb
inc
dec
mov
push
adc
iret
cmpsb
cmp
dec
mov
sub
or
and
mov
add
push
push
or
ret
and
sahf
inc
outsl
sti
mov
adc
jo
iret
insb
test
mov
add
or
rcpps
imul
dec
or
add
push
push
mov
rcll
jle
pushf
outsb
inc
cld
out
sti
cmpl
shr
or
add
jae
jno
cmp
lcall
or
pushf
cmp
lret
outsb
jno
aad
int3
out
mov
dec
cmp
xchg
inc
pop
dec
loopne
pop
stos
add
mov
add
push
cld
add
outsl
add
sbb
jmp
pop
push
call
pop
mov
out
mov
aad
cmp
or
add
sahf
push
mov
movsl
cld
jp
rep
jb
jbe
lods
xor
adc
cmp
sbb
mov
jb
icebp
test
mov
cmp
or
mov
adc
fnstenv
leave
xchg
sbb
in
out
clc
mov
xchg
in
add
sub
sbb
sub
add
xchg
mov
xchg
dec
scas
pushl
aad
mov
int
fiadds
push
scas
in
xchg
out
dec
mov
je
ficoms
cmp
bound
aam
pop
mov
push
xchg
ljmp
lcall
and
sub
inc
or
rcll
add
clc
cltd
mov
xchg
xor
xor
cld
dec
mov
dec
call
rclb
bound
cld
cmpsb
ja
shlb
jg
xchg
and
into
or
mov
pop
cmp
adc
xor
add
xchg
test
popf
xchg
mov
jns
dec
push
add
inc
addr16
mov
cld
ljmp
inc
or
stc
lea
addr16
push
add
push
xchg
and
cld
push
sti
pushl
sbb
mov
add
cmp
mov
mov
clc
and
push
les
xor
mov
dec
sbb
mov
inc
je
or
add
lea
movsl
mov
icebp
aas
aad
inc
clc
pop
jecxz
sbb
push
data16
sbb
mov
movsl
jp
and
mov
repnz
les
mov
mov
rorb
and
ss
aas
aad
shll
inc
clc
add
pop
bound
popa
in
sti
mov
mov
and
mov
adc
mov
dec
inc
fnop
add
dec
lods
ds
xor
stos
or
pushw
and
pushf
stc
pop
fsubs
xchg
add
mov
test
or
xorb
add
or
mov
out
dec
sub
xor
pop
xor
sbb
dec
inc
xchg
xor
sub
hlt
cld
fisttps
mov
push
add
xor
cld
pop
andb
sub
repz
out
mull
mov
and
cld
es
dec
jae
pop
dec
call
or
in
mov
jl
xorb
cmpsb
pop
cld
out
mov
addb
fs
or
push
pandn
or
in
xchg
jae
jle
pusha
cmpsb
inc
lea
inc
test
call
lcall
add
lret
test
int3
lock
out
add
add
inc
ljmp
lods
movl
call
dec
cmp
pop
rol
ret
call
mov
mov
out
pop
outsl
sti
mov
test
je
mov
pushl
xor
das
xchg
in
fldt
inc
addb
pop
xor
jnp
out
subb
sar
not
out
jns
push
xchg
test
add
or
cld
jb
stos
lea
xchg
test
push
test
xchg
pop
dec
lock
dec
adc
dec
mov
sub
test
xchg
cli
les
adc
test
mov
adc
or
push
jge
or
aad
add
push
bound
push
inc
hlt
incl
add
add
add
dec
adc
mov
or
es
fcmovb
jge
popa
adc
xchg
js
imul
or
add
mov
sbb
adc
mov
mov
mov
or
shlb
in
xor
jbe
sub
xor
sbb
or
add
mov
cmc
mov
ret
cmpsl
mov
cltd
sub
or
mov
out
clc
pop
xchg
and
or
je
out
ljmp
pop
push
sbb
lds
sbb
xchg
or
mov
fmuls
and
or
cltd
dec
xchg
cltd
fmuls
add
xchg
or
in
pop
mov
jae
pop
inc
and
cld
mov
jmp
cmp
les
or
and
or
add
add
inc
and
fnstsw
push
cmc
lret
and
and
add
cli
adc
add
pop
jg
pusha
call
call
test
incl
xorb
or
add
inc
and
ja
sbb
cmp
lods
imul
repz
cmp
inc
add
in
jle
and
nop
inc
and
xor
mov
add
add
lods
inc
add
add
out
jecxz
mov
loopne
xor
mov
push
in
mov
add
mov
add
jb
andb
add
pop
into
add
aad
test
jbe
xchg
push
dec
mov
and
xchg
adc
mov
pop
cmpb
loop
mov
cld
shr
push
fimull
out
add
filds
loopne
sbb
ret
mov
xlat
xchg
cs
xor
mov
and
leave
out
pop
std
loopne
xlat
icebp
xchg
imul
out
orb
add
repz
push
and
mov
xlat
in
out
mov
shll
sub
xchg
stos
fcomip
fnstenv
xor
fcompl
push
in
lret
repnz
add
mov
or
xor
add
dec
out
xlat
out
rorl
add
xchg
inc
in
lcall
push
jae
pop
ja
lods
in
test
les
mov
push
jae
arpl
call
sub
stc
jmp
inc
mov
inc
sti
and
jle
mov
loope
add
frndint
cld
push
inc
jmp
xchg
or
jmp
or
notb
xchg
or
jecxz
or
add
mov
std
jmp
sbb
dec
xchg
out
push
mov
and
xchg
push
jle
mov
pop
mov
pop
mov
in
loopne
dec
push
lahf
xor
push
xchg
in
test
push
cmp
add
mov
push
imul
cld
mov
cmp
mov
sub
cmp
xchg
in
add
add
xor
add
xor
jmp
jnp
cmp
sub
cmpsl
cmpb
sub
adc
add
add
jb
mov
mov
and
push
jge
fdivr
sub
sbbb
add
lcall
pop
jle
mov
xchg
adc
addl
mov
jb
add
cmp
mov
lret
adc
es
xchg
adc
xchg
push
add
out
out
addr16
add
xchg
std
sub
mov
push
mov
mov
nop
xor
push
test
pop
nop
cmp
fadd
test
xchg
jns
sbb
pop
pop
outsl
xor
pop
into
jp
rolb
xchg
dec
nop
mov
rcl
mov
mov
push
jne
xor
add
sub
xchg
push
xchg
insl
push
clc
or
mov
enter
or
lods
cli
pop
call
leave
xchg
inc
stc
loopne
push
jae
orl
add
mov
imul
xchg
lea
sbb
add
pop
inc
shl
fimull
dec
outsl
adc
push
movsb
call
fsubrs
ret
imul
sti
push
xchg
mov
pushl
xchg
insb
adc
lahf
enter
xchg
pop
pushf
jo
inc
or
xor
and
aam
xor
je
add
call
xor
adc
add
cmp
pop
inc
and
lret
xchg
adc
das
and
dec
jno
lea
lahf
in
loop
sti
mov
test
aaa
repz
sti
ss
xchg
das
xor
ss
push
in
xlat
testl
mov
sbb
pop
mov
pop
dec
stos
lock
or
das
call
mov
xor
lret
cmpb
add
pop
jge
movsl
int
push
mov
adc
leave
in
in
nop
hlt
jecxz
xor
in
add
movsl
or
push
sbb
add
mov
adc
out
pop
outsb
imul
les
in
or
jecxz
add
xlat
mov
sahf
and
testl
aad
fdivrl
and
in
nop
push
dec
cmc
xchg
or
add
hlt
cmp
pop
inc
fstp
dec
out
or
cmp
test
add
adcb
jns
cli
sbb
inc
aam
andb
test
das
or
mov
or
or
add
cmp
jno
adc
aad
popf
jmp
push
cld
adc
add
jg
mov
or
inc
mov
call
inc
scas
nop
outsb
outsb
dec
push
jmp
mov
xchg
jae
shll
pop
jle
push
fdivs
mov
jge
call
push
or
xor
jl
bound
add
icebp
adc
nop
jnp
lock
add
push
push
jecxz
and
and
call
addr16
dec
cs
lcall
shll
adc
jle
mov
ja
scas
add
add
les
cmpsb
fistl
je
xor
push
sahf
inc
das
fwait
popl
pop
add
out
loop
outsb
jbe
push
daa
lahf
xchg
lcall
std
mov
jmp
sti
push
aad
xchg
sub
add
push
dec
jb
ljmp
sub
jmp
cmp
push
fisttpl
test
sbb
stos
sahf
lea
in
jb
daa
sbb
mov
mov
out
push
mov
add
dec
sub
call
xor
rcrl
add
subb
das
push
pop
es
dec
mov
mov
mov
push
mov
cmpsb
pop
jns
adc
jge
nop
dec
bound
mov
subl
cmp
ljmp
jge
jp
jb
jmp
jo
std
pop
stc
ret
test
pop
shll
jecxz
aad
mov
xchg
addl
inc
enter
sbb
daa
add
aas
aam
aad
out
pop
or
add
into
mov
icebp
decl
leave
lcall
pop
clc
cmpsb
dec
int3
cld
hlt
cmpsb
pop
inc
jmp
jecxz
out
dec
jge
xchg
add
aaa
lahf
cld
jbe
mov
pop
je
fs
pop
popa
fs
cmpsl
pop
jge
sub
shrb
fwait
xchg
cmp
jge
fs
xor
pop
xchg
cwtl
es
mov
add
cld
fs
clc
add
jge
cmc
pop
clc
out
mul
or
dec
in
jle
shrl
rorl
out
xchg
sti
push
add
sti
call
sti
push
enter
sub
ret
push
mov
push
mov
inc
cld
mov
leave
sti
add
pop
add
sub
cmovo
mov
cld
mov
mov
xchg
sbb
je
jle
or
sub
cmc
pop
dec
or
and
inc
outsl
dec
cld
je
lcall
add
aam
and
lods
xor
ret
jmp
dec
mov
aam
add
pop
xor
cmpsl
sbb
xor
dec
or
adc
jge
unpckhps
inc
mov
int
shl
inc
lcall
jge
insl
pusha
inc
add
xchg
int
roll
inc
sub
into
shrb
mov
out
jno
add
fcompl
add
cmp
stc
and
int
and
leave
or
es
mov
aas
aad
ja
icebp
or
xor
incb
in
pusha
imul
lea
inc
mov
push
cli
ret
insl
movswl
js
jnp
cs
xchg
or
bound
sbb
stc
sub
xor
ret
pusha
imul
add
lea
aad
mov
test
jns
adc
js
jge
fisubrl
add
ret
js
mov
leave
out
sub
cwtl
or
add
or
call
pop
jne
sahf
loop
sub
pushf
mov
or
lret
sbb
lea
gs
or
cmp
mov
jno
add
or
cmp
dec
dec
add
or
call
dec
jne
movsl
mov
add
shrb
ja
jecxz
push
fidivl
cmpb
not
cmp
push
fisubrl
std
push
mov
addr16
adc
ss
and
dec
and
mov
adc
add
sub
or
roll
xchg
mov
loop
adc
rcll
add
inc
enter
sub
xor
ret
out
sub
add
xchg
or
add
sti
neg
add
or
stos
outsl
or
test
add
repnz
dec
sub
adc
aad
inc
add
add
xorb
or
inc
in
push
cmp
das
add
aad
xchg
and
pusha
ja
sbb
incb
inc
sbb
cmc
mov
das
xor
inc
sub
xor
bound
ja
push
xor
ds
std
pop
sarb
mov
imul
std
in
adc
daa
xor
sbb
std
dec
xchg
or
shlb
vmread
or
lds
imul
adc
add
add
js
iret
xor
cmp
sub
xchg
jne
imul
aad
pop
out
arpl
xchg
jne
sub
sub
test
push
out
pop
jne
sub
add
push
dec
or
dec
imul
jno
rcr
arpl
add
aam
jl
jmp
repnz
fiadds
div
adc
adc
push
pop
inc
out
sahf
or
xchg
pop
jnp
addl
mov
sti
add
enter
add
hlt
sbb
or
add
imul
cmp
fdivr
push
or
adc
fimull
mov
fadds
mov
enter
ret
mov
popf
leave
orps
jg
add
popa
mov
clc
push
mov
aaa
jg
clc
aaa
push
addr16
add
mov
repnz
pop
xlat
ret
fadds
inc
cld
sub
jo
stos
push
std
jae
addb
dec
or
fs
and
pop
sti
jne
addl
or
add
or
sub
mov
ret
push
mov
pop
add
mov
xlat
stos
out
out
movsb
add
jnp
jnp
lret
incl
add
pusha
call
mov
jge
fiaddl
xchg
stc
lret
call
dec
lahf
adc
and
mov
lcall
mov
cmp
shr
cmp
pusha
out
pushf
cmp
mov
stos
dec
jg
popa
stc
jae
xor
jp
dec
adc
cld
movsb
filds
pusha
gs
add
add
in
andb
testl
jp
push
daa
nop
lea
or
inc
sahf
adc
sbb
inc
xlat
arpl
and
es
and
popa
pop
xor
push
pop
sbb
mov
popa
cmp
jno
jne
icebp
imul
out
dec
loope
aam
cmpsl
loope
aad
inc
add
or
push
jno
aam
iret
repnz
adc
test
icebp
inc
or
sbb
adcl
test
jmp
or
or
dec
mov
es
mov
movsl
cmc
add
xchg
addr16
or
or
adc
or
call
outsb
jb
push
dec
out
add
push
insl
cld
shrb
cld
jmp
jo
inc
push
js
cmp
imul
cltd
push
leave
pminub
mov
adc
int
sbb
insb
test
and
ret
dec
sub
push
and
pop
jmp
gs
pushl
xor
add
xor
lret
aad
mov
add
loop
add
add
test
fldl
sub
test
cmp
push
sub
push
push
cmc
push
in
mov
repnz
adc
jg
jg
js
inc
in
gs
add
jl
call
aad
mov
xor
jecxz
out
pushl
fldl
loop
jl
cmpsb
jbe
decb
lahf
insb
add
aad
imul
nop
les
outsb
aad
mov
pop
cmp
cmovle
jb
aad
mov
sti
repz
jne
dec
mov
sti
jo
or
push
insb
cmp
insl
or
jge
jmp
out
pop
and
int3
jge
outsb
outsl
enter
jl
hlt
fimull
imul
outsb
popa
add
out
or
or
popa
outsl
sbb
outsb
push
add
sti
nop
cltd
pop
xchg
imul
jle
imul
outsl
call
mov
mov
jae
pop
out
cli
mov
dec
or
jle
test
je
adc
popl
add
mov
imul
jecxz
xchg
jno
call
inc
add
adc
fs
iret
mov
insl
cld
bound
add
out
jge
cld
jae
fs
inc
rorl
std
aam
fs
js
mov
jl
push
ss
call
xabort
sub
or
inc
mov
adc
mov
in
jmp
add
or
lahf
subl
je
sub
fcmovbe
out
pop
insl
cld
gs
incb
add
sub
mov
push
mov
addr16
dec
cld
dec
arpl
jg
and
add
mov
out
roll
sub
jne
jp
and
pop
in
imul
test
jg
and
jb
xorb
inc
jg
xchg
mov
jl
inc
adc
popa
or
js
dec
push
push
ja
inc
lods
out
roll
aad
add
jae
or
mov
mov
adc
add
add
add
cmp
add
aad
xchg
dec
rorb
aad
add
xlat
dec
add
add
sub
add
aad
add
inc
stc
add
aad
movb
add
mov
cli
js
push
and
test
popa
add
outsl
pop
xchg
pop
rorb
ret
push
adc
xchg
and
popa
cmp
jmp
or
adc
add
out
arpl
into
jp
in
or
aad
xor
mov
add
decb
mov
push
test
out
hlt
push
test
fldenv
adc
lock
jle
jp
add
orb
add
inc
syscall
aad
bnd
add
jl
pop
mov
imul
out
int3
xor
lock
jecxz
push
cs
fldenv
jo
add
or
push
mov
mov
mov
adc
out
lret
std
cmpsb
int3
xchg
xor
fmull
adcl
xchg
int
gs
xchg
inc
sub
xor
and
add
rorl
mov
repnz
rcll
adc
leave
pushl
mov
xchg
jl
pop
and
inc
add
mov
add
ja
push
stos
pop
fcoml
insb
or
jge
into
std
jl
xor
hlt
sbb
loope
lock
jo
out
add
insb
cmp
dec
cld
mov
pop
add
add
or
add
add
mov
adc
loope
mov
adc
divb
adc
sti
push
add
xchg
loope
decl
push
jg
clc
cmp
fildl
xchg
inc
inc
clc
cmp
jbe
mov
mov
out
pop
ja
aas
jb
inc
lods
jnp
mov
gs
rorl
mov
out
or
add
cmp
jmp
cmpsl
je
xchg
mov
aad
insl
out
pop
mov
add
cmpsl
jg
call
jne
pop
ss
push
cmp
subb
add
mov
mov
fiaddl
dec
mov
cmp
movsl
add
fldln2
roll
or
lods
or
dec
and
mov
adc
aam
add
imul
mov
fwait
dec
out
add
xchg
lret
add
cmpsl
rolb
add
nop
sub
inc
adc
adc
pop
sarb
sub
xchg
cmp
lcall
adc
xor
jne
lea
jmp
lcall
add
aas
add
or
mov
mov
pop
or
call
out
add
sti
jno
cmp
mov
push
data16
add
or
ja
xchg
int3
add
and
mul
flds
mov
aad
cld
fdivl
adc
jmp
sbb
pusha
dec
jno
push
gs
enter
inc
addr16
push
loop
xchg
or
test
pop
jl
call
dec
hlt
imul
push
xor
xchg
add
sub
add
cmc
add
dec
out
jge
in
je
pop
push
jne
mov
add
cmp
jae
daa
movsl
lock
add
jl
adc
stc
fnsave
mov
movsb
hlt
call
out
in
test
add
stc
fdivrp
mov
xchg
jno
fs
out
sub
sti
inc
pop
mov
cmp
and
pop
pop
jecxz
add
test
cli
incl
dec
or
in
nop
inc
adc
out
repz
push
decb
inc
add
push
enter
sahf
js
mov
xor
and
fs
pop
jno
dec
fldl
add
aad
out
sub
or
cld
sub
jae
out
out
sti
aad
and
dec
add
es
add
pusha
adc
pop
addl
pop
mov
pop
out
divb
pop
mov
or
adc
xor
cmp
push
out
xchg
gs
nop
sbb
arpl
fisubl
andb
cli
fsub
add
push
mov
jae
dec
fstpl
push
mov
out
lret
add
jb
add
jns
ficomps
outsl
out
push
dec
cmp
sbb
outsb
or
fcoml
or
mov
cld
cmp
cmpsb
clc
fldenv
incl
enter
sbb
out
mov
push
bound
in
inc
or
adc
add
add
aas
jmp
push
mov
jmp
lret
mov
ja
or
ret
dec
gs
pop
jmp
insb
out
fsubrl
cmp
arpl
mov
mov
xor
andb
push
jmp
add
or
das
leave
shl
add
xor
rolb
and
cmpb
pop
push
addb
jne
adc
in
or
sti
xor
pop
out
pop
cld
push
inc
ljmp
mov
add
push
add
scas
or
into
jnp
sti
ljmp
mov
xor
adc
adc
pop
jno
cmpsb
jae
lret
push
in
test
or
in
dec
add
aad
clc
fisubrs
out
mov
lds
jb
call
dec
cmpsb
and
scas
xor
test
mov
jl
pusha
test
mov
cld
mov
cmp
push
popf
add
aad
pop
js
pusha
insb
cld
or
call
dec
je
call
mov
adcl
dec
flds
aam
loope
or
lret
cmp
or
leave
test
add
xchg
es
test
sti
jne
mov
popa
shlb
pop
pop
pop
and
out
pop
add
or
add
movb
and
subl
xlat
aam
aad
inc
cwtl
outsb
add
mov
es
pop
push
or
outsb
jp
subb
sub
lds
jle
pop
out
arpl
dec
leave
out
push
hlt
ljmp
leave
incl
xchg
or
pop
cld
jmp
loop
call
je
sub
adcl
or
and
jmp
mov
call
add
or
or
aam
cli
aas
jmp
lcall
lds
or
insb
mov
sub
adc
jmp
nop
addl
mov
cld
add
cmovo
mov
and
pop
add
cld
loop
lea
or
call
insb
bound
add
mov
faddl
loopne
dec
stc
adc
inc
cld
mov
or
xchg
and
sub
sbb
push
and
push
mov
xor
in
call
popa
and
sti
call
repz
sub
sti
je
stc
xchg
aad
push
cld
jmp
lods
les
loop
das
rolb
movsl
add
addr16
inc
add
cmp
adc
jb
jnp
arpl
jae
mov
pusha
out
cld
aad
add
dec
inc
insb
cli
jno
inc
mov
add
cld
imul
xor
fsubrl
les
scas
add
adc
push
mov
lds
dec
mov
lds
dec
shl
add
int
add
adc
or
loop
sub
lock
push
es
add
or
adc
or
jle
adc
idiv
mov
and
lea
jno
or
pop
sbb
jg
mov
jno
jae
push
push
aad
mov
pop
pop
push
out
pop
mov
mov
add
add
test
aad
insb
mov
pop
xchg
pop
xor
push
imul
imull
pop
jb
out
in
ljmp
cli
or
cld
lcall
fistl
pop
cmp
rorl
add
pop
lds
pop
push
subl
fistpll
out
push
data16
data16
jg
mov
xchg
mov
push
jle
pop
dec
outsl
addb
cltd
jae
dec
or
mov
ficompl
pop
push
pop
xlat
add
test
sti
cwtl
dec
mov
pop
in
xlat
icebp
stc
pop
fmuls
je
sti
lea
out
stc
decl
loop
orb
cld
push
ror
cmp
cld
imul
shr
test
incl
add
cwtl
hlt
cmpxchg
ljmp
jns
in
jno
cld
add
xchg
mov
incl
mov
icebp
addr16
cmovae
call
add
push
add
scas
push
rolb
lock
aad
in
or
movsl
addr16
jg
fiadds
adc
jno
push
imull
add
aas
sub
std
call
dec
push
sbb
mov
push
mov
cli
ljmp
add
sarl
out
aad
jl
xorb
fmull
addr16
ljmp
cld
push
inc
addr16
in
cld
lret
jb
leave
pop
xchg
mov
or
out
rcrl
add
mov
push
lods
jbe
xchg
push
int
or
push
test
out
jp
add
andl
sbb
add
ficomps
into
mov
inc
ds
sahf
cld
out
dec
fstp
xorb
adc
lods
fst
test
movsl
test
addr16
dec
dec
push
xchg
push
pop
jns
icebp
mov
ret
add
rol
popf
js
pop
jno
mov
push
push
pop
jae
dec
je
pop
mov
add
push
xor
adc
lret
push
test
jl
push
jb
cmpsb
loopne
xchg
push
inc
add
repz
stc
push
pop
sbb
push
pushf
call
das
push
sub
or
sub
mov
push
xchg
or
dec
push
cld
jmp
push
push
cmp
add
or
hlt
std
push
jb
jae
fistl
push
or
ficoms
sar
mov
mov
test
shl
test
gs
mov
std
adc
lea
dec
lea
push
dec
out
iret
add
add
mov
ljmp
roll
out
leave
adc
out
outsb
dec
add
lea
add
sub
sbb
outsb
inc
add
add
cmp
or
ret
out
add
addr16
push
call
andl
fdivr
mov
xchg
cmp
fldenv
mov
xlat
push
and
cmp
sti
les
aad
jns
icebp
pop
jge
or
out
popa
add
out
push
arpl
add
leave
xor
jmp
fs
call
push
mov
add
cmp
add
aad
mov
in
int3
and
dec
stc
ljmp
stos
jns
stc
data16
sbb
mov
jno
and
outsl
bnd
mov
jmp
or
js
sub
push
testb
fs
fadd
mov
add
in
sub
lret
jo,pn
dec
mov
xchg
lcall
or
jl
jle
inc
add
pop
mov
push
sti
mov
filds
sbb
or
jp
fwait
pop
movsl
mov
into
xchg
fadd
dec
xchg
sub
out
addl
cmc
pop
dec
mov
int3
shlb
jno
add
mov
mov
push
and
jge,pt
inc
addb
ret
test
adc
sbb
push
cld
insb
lea
sbb
testb
jb
sbb
bound
mov
mov
and
inc
push
dec
roll
or
jle
or
sub
add
mov
in
inc
and
inc
push
mov
addb
hlt
dec
jne
fwait
in
add
xor
jnp
fcmovnbe
das
push
sti
adc
flds
std
ljmp
sti
pushl
sbb
movsl
mov
pop
pop
xchg
and
mov
loopne
in
xor
or
je
in
call
add
out
push
clc
push
adc
in
sbb
mov
std
sbb
or
shr
std
lock
xchg
aad
aam
std
jp
std
add
ret
sub
rcr
mov
jecxz
or
fstpl
cmpsl
fstp
xor
pop
cmpsl
dec
dec
lods
imul
movb
xor
sub
mov
gs
add
sbb
xlat
dec
mov
sbb
aam
push
sub
cmp
aad
sti
dec
and
add
fldl
adcb
adc
and
popl
xchg
add
sti
add
mov
icebp
dec
sbb
insl
pusha
movsb
xor
in
dec
pop
mov
add
flds
jno
push
cmp
fisttps
sbb
adc
mov
adc
sti
jo
fwait
iret
and
push
add
in
mov
pop
mov
subl
repz
movsb
xor
imul
xorl
ret
mov
test
pushl
fsubp
cmp
lret
push
pop
jbe
push
add
add
std
in
inc
fsubp
clc
or
orps
fimuls
inc
push
inc
mov
cmp
out
loope
inc
pop
cmpsl
pop
sbb
rcr
out
loope
lods
shlb
jae
test
xchg
mov
and
in
or
int3
mov
rorb
push
call
pop
loope
repz
mov
inc
push
pop
das
add
add
repnz
cmpsb
add
test
incl
inc
mov
or
test
pop
ret
das
lret
fidivrl
das
xor
xor
cld
xor
add
sub
inc
cld
cmp
lret
and
in
cmp
and
mov
and
mov
lcall
out
out
add
clc
test
jl
or
mov
xchg
aaa
lret
stos
sub
inc
aad
push
fisttpl
or
movsl
sub
adc
pop
call
and
push
pop
stos
aam
xchg
pop
dec
daa
inc
xor
jp
adc
lret
xchg
movsl
jb
fistpl
rclb
arpl
add
dec
xor
mov
push
push
jo
xchg
add
ljmp
adc
jmp
inc
fucomp
mov
xchg
das
mov
fnstcw
mov
or
push
mov
push
mov
cmp
add
sub
sahf
icebp
loop
scas
aad
popa
into
cmc
adc
fiaddl
inc
pop
stc
dec
cld
sti
cli
cmc
aam
jmp
add
repnz
rorb
adc
test
xlat
pop
jg
das
test
out
xchg
fistps
sub
xlat
cmp
out
fadds
sbb
jge
lds
jp
rcrl
add
std
mov
std
cmp
scas
dec
adc
sahf
cmpl
out
lcall
lods
mov
cmp
arpl
adc
out
fmull
add
add
or
mov
xchg
xor
out
add
push
insl
aam
orl
push
out
jmp
dec
sti
mov
incb
jmp
inc
mov
add
cmp
int3
inc
insb
xchg
sti
adc
cmp
and
std
ljmp
hlt
andl
sbb
add
pop
or
cmp
push
std
pop
incl
fimuls
inc
in
scas
mov
adc
jo
outsl
xor
loopne
sti
jne
in
adc
pop
or
mov
in
leave
cmp
push
dec
jp
fstps
or
shl
std
incl
add
iret
aad
add
loopne
repnz
aad
mov
sub
and
jmp
pop
scas
push
mov
addr16
addr16
add
out
jne
test
xor
add
lock
xchg
xor
ror
rcll
pop
ds
xchg
xor
sbb
push
add
jno
jmp
lods
pop
mov
xor
add
fiaddl
add
ret
mov
mov
mov
mov
xor
stos
or
out
cmpsl
add
mov
mov
mov
add
dec
mov
pop
mov
in
fstp
in
fstpl
add
pop
popa
push
std
ds
es
add
add
fildll
sbb
jmp
adc
in
and
out
add
nop
adc
add
repnz
int
hlt
leave
inc
push
out
icebp
add
sbb
add
or
ss
or
leave
inc
dec
scas
out
cs
inc
std
cld
ret
jmp
and
push
sub
xchg
jmp
repnz
popa
cld
pop
cld
push
inc
push
push
aad
xlat
ss
int3
sti
cmp
add
sbb
dec
push
jo
inc
cld
lahf
push
xchg
pop
aam
insb
cwtl
mov
cld
xchg
push
xchg
pop
int3
sti
sbb
sbb
sbb
cld
inc
cld
xchg
push
xchg
push
ret
imul
xchg
jns
sbb
xor
add
mov
mov
mov
add
push
pop
sbb
adc
push
xor
xor
aas
or
shrb
or
add
hlt
data16
lahf
in
iret
out
or
adc
mov
or
andb
rolb
or
xchg
add
lret
add
sbb
aas
popa
pop
dec
pop
inc
movsl
or
in
das
cmp
bound
adc
popa
outsl
add
add
add
mov
dec
cmc
mov
ds
jb
jb
dec
push
push
out
push
or
xor
inc
dec
adc
roll
mov
jmp
adc
jmp
nop
push
add
aad
xchg
movsl
mov
add
mov
in
xchg
cli
mov
jae
scas
fsubrl
sbb
mov
add
pop
test
and
or
add
push
movsbl
dec
cmp
pop
iret
xchg
dec
test
xchg
mov
pop
mov
push
ficoml
xchg
pop
mov
push
jp
fst
ret
pop
lea
iret
fists
pop
insb
and
out
sub
sbb
push
icebp
pop
into
xor
dec
mov
or
jle
mov
and
mov
xchg
mov
add
mov
xchg
int
cld
sarl
jb
jno
mov
scas
pop
mov
or
mov
pop
enter
mov
dec
loopne
xor
std
jl
nop
inc
inc
es
xchg
pop
addb
add
cmpsb
inc
out
movsl
inc
cld
inc
push
scas
add
pop
jb
fimull
mov
jnp
call
mov
mov
push
scas
incl
fisttpll
data16
mov
push
push
test
add
pop
sti
dec
mov
pop
jp
jg
xchg
add
jge
pushf
ds
incl
add
subb
aas
xlat
jno
stc
pusha
loopne
cmp
in
pop
xlat
sti
test
add
or
sti
jne
ret
inc
call
sbb
in
icebp
mov
jne
ficomps
cmp
test
in
add
das
rcl
cmpsl
inc
push
loop
xchg
shlb
fiaddl
ss
mov
pop
mov
lret
test
and
add
out
jl
int
push
or
jmp
add
stos
mov
mov
mov
push
or
fildl
add
mov
add
scas
mov
jnp
das
jnp
xor
xchg
add
aad
push
add
scas
jbe
sub
jnp
dec
cmp
call
xor
adc
push
popf
mov
add
mov
dec
cli
adc
xorb
inc
pop
xchg
bound
gs
mov
popa
push
mov
scas
test
dec
xchg
jle
ds
push
mov
xor
jl
cmp
lcall
nop
mov
jbe
pop
pop
inc
push
sub
test
or
adc
fisubrl
xor
inc
bound
sbb
jb
ficoml
ficomps
cld
cmpsb
movsl
xor
sahf
or
out
cld
push
inc
pushl
cmp
fldenv
inc
pop
ret
add
imul
jmp
mov
ds
fwait
or
negb
cld
insl
push
mov
pop
pop
fisttpll
je
add
jecxz
testl
lret
pop
fs
mov
adc
push
mov
das
add
repz
sti
test
push
mov
or
mov
fstp
cmovae
std
pop
hlt
iret
jno
inc
mov
call
repnz
mov
xchg
hlt
std
xor
dec
call
dec
add
leave
out
adc
push
add
daa
stos
jg
adc
call
push
push
dec
add
sub
loop
or
xchg
cmc
push
and
out
add
js
adc
inc
mov
test
push
cmpsb
in
mov
aam
xor
xor
xchg
pop
cld
daa
and
dec
xor
aam
mov
mov
mov
hlt
lock
sub
incb
add
sub
out
push
lods
xor
mov
cmpb
push
jg
stc
push
pop
inc
push
les
xchg
ja
push
and
push
out
cs
popa
ja
sub
call
dec
cmc
adc
jae
mov
and
cmpsl
mov
inc
icebp
or
jns
sbb
mov
xor
fildll
pusha
push
cs
mov
add
fstps
push
ficoml
add
icebp
popf
dec
jmp
cmp
and
mov
lods
mov
fiadds
aad
and
ss
add
sub
or
or
out
mov
sub
mov
cmpsb
in
dec
imul
mov
outsb
mov
or
rcll
jmp
mull
or
or
mov
or
std
sbb
inc
inc
jmp
push
cmp
mov
lods
mov
sti
xchg
and
adc
adc
mov
dec
imul
xlat
cmp
rol
sti
ljmp
dec
andb
cmp
mov
mov
insb
xchg
daa
dec
lahf
adc
mov
sbb
or
nop
inc
sbb
fistl
mov
mov
cmp
mov
jno
cmp
test
cld
add
add
rolb
frstor
mov
jo
test
ud0
flds
push
dec
iret
add
push
add
mov
inc
push
jno
add
daa
dec
or
int3
fnstsw
or
xchg
outsl
pop
pop
vmovsd
adc
popa
mov
jg
addb
mov
push
inc
aad
scas
push
in
xor
inc
aad
dec
cld
es
call
push
cmp
pop
xor
add
mov
sub
or
fnstsw
cmp
fwait
push
stc
test
xor
add
out
imul
lds
mov
inc
mov
add
movsb
and
add
repz
sbb
and
mov
sub
inc
shll
xchg
movsl
add
outsl
sbb
adcb
adc
or
std
sbb
iret
mov
pop
mov
cmp
loopne
mov
pop
add
mov
cmp
jge
add
aam
leave
lea
aad
addr16
clc
push
fwait
out
aad
mov
aam
shlb
xchg
or
in
ss
nop
or
jbe
enter
mul
pop
jnp
out
ret
mov
das
dec
mov
test
pop
iret
rclb
cmp
ss
shr
or
xor
cld
jmp
add
es
outsl
pushf
xor
xchg
jmp
std
out
out
ss
jb
icebp
clc
push
cs
testb
std
push
mov
cld
cmp
adc
sub
popf
xor
mov
lds
loope
dec
jae
push
aaa
or
mov
mov
mov
xor
and
and
add
inc
fdivrp
add
and
jnp
cld
ljmp
cmp
inc
push
mov
xor
ret
cmp
bound
inc
inc
or
enter
enter
aam
jne
inc
addr16
daa
sar
decl
xor
jmp
pop
and
and
pop
incl
jo
aam
stos
or
xchg
test
mov
and
mov
sbb
js
addl
push
into
jo
cmpsl
je
mov
add
cld
je
push
cld
shrd
add
add
jge
inc
std
mov
hlt
or
jle
xor
add
mov
push
add
mov
ret
insl
lock
mov
add
fsubr
iret
xchg
and
xor
sar
in
adc
add
sbb
adc
mov
int3
sbb
sbb
xor
aas
stc
cld
shlb
mov
imul
add
mov
or
sbb
cmpsl
add
jp
mov
and
push
ds
xor
jp
add
std
pop
xor
loop
dec
mov
je
add
push
xor
int
mov
into
les
lods
dec
leave
aad
adc
roll
and
jbe
xor
jnp
add
movsl
pop
int3
xchg
mov
jle
xchg
xor
inc
inc
or
call
movsl
les
jmp
orb
call
xchg
dec
pcmpgtb
add
xor
sub
xchg
lret
ss
cltd
sti
loopne
or
push
cmp
call
lcall
pop
or
jp
sbb
mov
mov
addr16
or
adc
adc
sahf
push
cmp
xchg
leave
xor
dec
rorb
xor
jo
inc
jge
mov
push
push
add
cmp
cli
jmp
filds
and
je
cmpsb
sub
jne
iret
mov
stos
int
shlb
xorw
in
sub
fildl
call
lds
sbbb
ljmp
subl
jno
sti
lcall
rolb
in
ljmp
dec
call
add
lahf
in
or
in
aad
inc
cld
pop
ljmp
leave
and
mov
lahf
daa
notl
mov
push
add
xrelease
xor
pop
insl
or
or
test
jp
cmp
or
inc
cld
push
loopne
test
push
add
pop
insl
or
push
xor
in
pop
loop
out
into
inc
cld
dec
in
pop
add
insl
and
or
dec
in
add
cld
dec
add
aad
add
aad
push
negb
out
ror
idiv
out
inc
out
mov
and
cmpsb
nop
push
out
nop
push
out
sub
push
inc
push
dec
mov
hlt
and
adc
push
sub
sub
xor
in
inc
out
clc
ret
inc
test
out
xchg
mov
xorb
and
test
or
sub
mov
push
fdivr
ljmp
es
jmp
fimull
loope
push
imul
mov
ljmp
cmpb
sub
adc
mov
adc
or
adc
mov
enter
shrb
sahf
sbb
push
mov
out
incb
bound
call
and
fucomi
into
xchg
icebp
rolb
pop
xchg
pop
and
inc
cld
pop
repnz
js
adc
sub
or
rolb
add
add
call
mov
das
add
lods
lods
sub
aas
or
jp
cld
mov
add
pop
int3
inc
jl
dec
and
test
pop
lods
sub
jg
xchg
test
popf
sub
inc
cld
mov
add
or
jo
mov
andb
add
aad
lahf
fwait
add
jnp
add
outsl
mov
lds
ret
jecxz
aam
rolb
fwait
push
mov
enter
shrl
mov
push
mov
dec
in
addr16
jne
push
pop
and
decl
or
out
lock
scas
jecxz
or
leave
test
shl
mov
je
push
inc
aad
xor
inc
xchg
add
add
mov
push
sub
arpl
xchg
cs
in
out
xchg
in
sub
xchg
lds
pop
lds
sbb
lret
test
aad
jno
mov
test
xor
shl
repz
incl
aad
inc
ds
sbb
fisubrs
or
or
lret
divps
add
pop
fcmovbe
or
push
rorl
sbb
mov
cli
push
cmpsl
add
cmp
out
or
pop
sbb
xor
push
mov
jb
inc
adc
or
cmp
jb,pn
cltd
pop
jo
xchg
sub
adc
test
push
pop
cmp
adc
mov
out
add
adc
xor
sar
add
pop
inc
jmp
mov
xor
dec
gs
out
jae
cld
adc
daa
insb
sbb
add
and
inc
cmp
rorb
and
adc
add
daa
cmp
jne
push
in
repnz
sti
cmp
xor
or
sbb
pop
add
and
jnp
and
imul
xor
inc
lods
xorb
xorb
jl
and
push
mov
dec
push
sti
jae
xor
fisubs
sub
jg
or
inc
and
jg
inc
or
jae
jmp
adc
jne
push
sti
jne
out
adc
sub
and
push
pop
std
jg
sbb
or
add
aad
jl
adc
xchg
dec
sti
jb
in
push
push
test
sbb
loopne
adcl
cmp
dec
and
push
lods
js
cld
mov
lods
and
xor
sub
add
aad
cmp
or
jae
cmp
jb
mov
add
jmp
add
stos
filds
add
fnstenv
xor
cmp
xchg
cmp
add
pop
dec
fidivrl
xchg
out
out
push
adc
sub
clc
adc
adc
lret
test
aad
sbb
in
rcl
decl
adc
rol
aad
cmpsb
scas
test
jne
decl
aaa
jg
xchg
add
inc
cmp
dec
adc
enter
dec
in
mov
sub
lea
rclb
int3
movq
loopne
aad
add
fistps
std
pop
loope
jb
scas
shl
mov
push
pop
or
rcr
mov
fst
or
sbb
cmc
adc
sub
jae
pop
into
pop
leave
mov
cmc
jecxz
jb
cmp
dec
mov
scas
push
cmc
dec
lods
mov
add
jns
ljmp
sbb
jne
cmp
jne
loope
inc
dec
dec
cld
pop
or
call
mov
ja
lea
push
add
push
jne
out
ljmp
sti
jne
add
ds
and
ror
add
xor
cmp
jo
or
mov
push
arpl
fcoms
cld
or
in
and
jg
add
imul
add
mov
adc
cmp
xorl
lods
add
cwtl
sub
cld
loopne
adc
addr16
pop
cmp
adc
add
xor
test
push
or
sub
xor
or
clc
adc
xor
test
adc
call
ficoml
iret
mov
std
or
cmp
push
sub
xor
sbb
in
xchg
mov
cld
mov
fists
adc
scas
out
test
aas
mov
or
mov
add
dec
mov
leave
inc
sarl
imul
aad
es
mov
adc
add
leave
out
out
fadd
adc
adc
or
aaa
movl
jbe
or
add
push
iret
jecxz
or
rcr
fistl
dec
or
les
mov
mov
aad
cmpsb
fcoms
addr16
add
jb
add
scas
ljmp
adc
cld
hlt
cmp
jmp
cmp
push
push
lods
jmp
call
xchg
xchg
add
call
nop
adc
and
pop
lret
jmp
rcl
or
out
mov
xchg
insb
xor
test
mov
dec
dec
dec
shrl
cld
mov
add
scas
fidivl
les
add
xchg
sti
xchg
and
and
sub
add
pop
pop
push
stc
je
mov
and
clc
add
in
outsb
dec
cld
mov
aas
fnsave
fadd
dec
cld
repnz
inc
in
xor
fs
lea
add
fmuls
push
inc
pop
mov
add
insb
mov
mov
pop
dec
call
rcl
cld
cmp
je
pop
sbb
call
fistpl
mov
add
xchg
call
push
pop
push
cld
rcll
xor
fadds
add
pop
pushf
sub
stos
xor
push
cmp
adc
iret
xchg
aam
mov
clc
jecxz
pop
lods
add
icebp
daa
add
add
icebp
rcrb
rorb
add
aad
lret
xor
cld
movsl
mov
pop
mov
sbb
xor
mov
imul
xor
call
cmpsl
addr16
shlb
orb
or
adcl
cld
and
adc
push
cmp
sub
ret
mov
out
add
jp
mov
mov
and
xlat
ror
out
sbb
xor
pop
mov
cmp
adc
out
push
cmpsb
adc
mov
xlat
shll
or
cmp
in
divb
movl
out
pushf
and
notb
and
fldl
sub
push
xor
add
push
lret
and
mov
aaa
cltd
xchg
and
mov
xchg
push
inc
jmp
xchg
and
xchg
or
mov
push
adc
ror
in
iret
add
adc
add
fmul
stos
loop
xchg
jae
iret
out
or
repz
push
cld
insl
xchg
pushf
insl
out
adc
adc
mov
inc
sub
add
jmp
or
push
shl
add
push
sti
mov
add
sti
je
adc
call
fisubl
ljmp
sti
incb
xchg
mov
cmp
dec
cmovnp
inc
shrb
or
je
or
in
cmp
sti
data16
inc
shrb
push
sub
push
inc
add
sub
pop
pop
jno
add
push
inc
sarb
or
ljmp
aam
inc
in
jge
pop
adc
xor
aad
add
push
push
inc
aad
idiv
shll
mov
dec
ds
jae
sbb
sbbb
das
push
jbe
push
inc
aad
adc
pop
xchg
sub
and
mov
jae
xor
push
add
jp
movsl
das
or
add
add
aad
fsubs
aad
test
cmp
jnp
fnstcw
incl
lods
insb
push
inc
aad
adc
out
add
outsb
in
iret
xchg
or
add
xchg
aad
das
loope
out
fildl
insb
mov
ret
sbb
and
add
sbb
das
xchg
das
pop
push
dec
cli
mov
ret
xor
add
xor
mov
push
out
mov
out
cmp
push
ret
push
test
mov
out
fadd
cmp
and
add
lret
mov
out
dec
in
add
pushf
daa
std
out
jg
and
xchg
into
out
xchg
cld
sbb
xchg
jp
add
outsb
leave
iret
sub
push
adc
imul
jae
push
sahf
pop
repnz
dec
jle
push
adc
call
jno
inc
add
jp
call
sbb
and
or
cltd
repz
pop
fisttpll
test
xor
adc
add
or
push
add
mov
bound
mov
cs
xchg
mov
inc
and
cmp
imul
scas
adc
add
loope
jle
add
ljmp
dec
hlt
mov
clc
add
and
push
lds
out
in
jl
add
insb
or
sbbl
or
cli
pop
add
sbbl
adc
fcom
lods
inc
jae
cmpsl
inc
inc
mov
stc
sub
mov
dec
pop
pop
adc
mov
sbb
xor
mov
inc
clc
push
aas
xor
in
pop
fdivrp
add
fdivrl
or
lock
cli
ret
pushl
cld
sbb
mov
adc
add
sub
out
mov
clc
cld
rclb
addr16
fnstsw
pop
pop
sub
inc
adc
or
mov
cmc
add
dec
mov
lcall
push
push
daa
or
xchg
loope
aad
in
push
pop
and
and
lret
out
dec
imul
and
adc
ss
out
jl
add
out
sub
push
stc
ret
lcall
jg
sbb
cli
dec
int3
fidivrs
out
shll
or
fcoms
imul
pop
sub
push
sub
mov
sbb
inc
hlt
ljmp
loop
jmp
xchg
add
fwait
xor
adc
sbb
mov
push
sbb
sub
aad
cld
pop
adc
rorl
add
add
adc
mov
fwait
or
in
pop
mov
mov
call
adc
adc
xlat
xchg
add
cld
mov
adc
aam
aam
cmc
cmc
fcoms
rol
sub
pop
sbb
ljmp
fs
cwtl
ljmp
jl
xor
xchg
cmp
mov
add
js
or
pop
jmp
and
call
stos
xchg
ret
push
xchg
lea
sub
xor
cli
push
inc
add
in
hlt
mov
mov
cmp
xor
mov
test
test
test
in
stos
jecxz
test
addb
add
fwait
leave
fldenv
add
outsb
fcompl
sub
scas
inc
jae
out
scas
and
fwait
mov
daa
aad
flds
sub
lds
cmp
hlt
in
push
jb
cltd
lods
and
sti
inc
jne
stos
movsb
and
fwait
xor
inc
sub
add
inc
adc
scas
subb
add
xor
pop
inc
lahf
daa
xor
or
and
repnz
in
cli
sbb
dec
sub
or
sub
subl
mov
outsl
rorb
out
lds
mov
push
mov
jp
sub
xchg
das
pop
mov
jp
inc
outsl
leave
push
shrl
xchg
rclb
out
ret
push
add
push
adc
notb
out
aad
xor
pop
int3
xchg
sbb
lret
out
lods
xchg
popa
mov
pop
subb
or
aam
add
popl
in
lret
stos
mov
fld
stos
pusha
and
xchg
adc
dec
xor
adc
cld
je
mov
push
repnz
inc
add
or
jmp
mov
add
push
cld
sbb
lds
out
push
push
cld
push
jecxz
and
xchg
fiadds
pop
add
cmp
adc
pop
xlat
xchg
adc
imul
mov
aad
mov
sub
sti
xor
es
jno
push
call
sti
pop
in
call
xchg
icebp
cli
cli
lcall
ljmp
jno
add
mov
call
jmp
cmc
std
lds
cld
jl
popl
out
push
xor
inc
shlb
in
popa
in
mov
dec
call
pop
test
int3
cvtpi2ps
mov
dec
add
stc
mov
or
cmpsl
movsb
lret
or
js
cmp
jmp
add
dec
ja
cmpl
lret
adc
jg
shll
mov
adcb
out
xor
xor
xchg
mov
or
ret
add
aad
mov
cli
and
sbbb
add
pop
addr16
push
xor
adcl
mov
fcmovnbe
pop
sar
enter
aad
cmp
add
mov
inc
bnd
xor
shlb
and
and
lahf
out
aad
dec
sub
or
jg
add
adc
js
jg
sbb
out
pop
dec
in
sahf
or
add
and
xchg
add
mov
adc
sbb
out
push
int
jle
add
jmp
out
xchg
add
add
jle
mov
out
and
sti
es
dec
jmp
js
data16
fwait
cmp
aad
lahf
mov
incb
aad
inc
popa
dec
mov
add
sub
dec
xor
jle
cmp
adc
inc
or
inc
dec
imull
adc
pop
sbb
sub
or
call
shrl
add
ljmp
sub
or
pop
cmc
lahf
sub
or
jb
out
mov
cmp
mov
inc
clc
add
in
mov
add
loope
in
lods
add
sti
dec
in
fisttpll
add
mov
inc
add
out
repz
cmp
jo
mov
xchg
addb
push
xchg
xchg
not
push
jg
rolb
push
lea
in
sub
add
in
pop
loopne
cmp
mov
jp
sti
add
popf
sbb
aas
xchg
cmpsl
lods
dec
movsl
inc
jbe
push
xchg
fisttps
daa
out
push
and
push
add
aaa
mov
add
pop
shl
jp
sub
cltd
pop
fildl
das
mov
pop
cmpsl
push
cld
enter
dec
mov
mov
fwait
int3
ret
pop
jne
mov
sbb
ljmp
adc
sbb
pop
cli
add
ljmp
dec
or
iret
paddusw
inc
cs
mov
mov
adc
fldcw
and
loope
and
outsb
cmpsb
shlb
lahf
inc
rorb
sbb
jle
sbbb
push
into
mov
mov
sti
xchg
leave
out
xchg
in
mov
add
mov
cmpsb
add
adcb
call
adc
inc
and
sbb
push
push
add
addr16
aam
mov
test
sub
out
mov
addl
or
mov
add
sar
jmp
xchg
push
subl
clc
aas
jmp
mov
sub
fstpl
sbbl
bound
daa
pushf
scas
or
daa
sbb
mov
les
rol
mov
add
out
lret
or
push
ljmp
xchg
lcall
or
add
lahf
cld
in
jl
and
addl
or
mov
ljmp
adc
std
dec
call
xor
jno
add
and
cld
insb
and
insb
ja
mov
or
add
jge
add
add
adc
ror
cmp
inc
add
shlb
stc
shr
jmp
shlb
sahf
fldz
sti
test
adc
shlb
call
jmp
mov
fadd
and
and
jae
xchg
inc
mov
and
addb
aaa
xchg
out
adc
lahf
and
add
pop
or
roll
push
aam
xor
xchg
push
add
cmpsl
ja
pop
stc
or
fxch
ror
cmp
sbb
test
jg
mov
cmpsb
icebp
aas
aad
rol
mov
fildl
test
mov
test
and
es
add
adc
sbb
dec
push
or
inc
add
or
notb
es
or
cwtl
aam
call
jb
xchg
sbb
jge
add
mov
es
ret
ljmp
mov
mov
out
clc
ret
cmp
inc
sbb
pop
ljmp
mov
aas
jmp
pop
ret
pop
sub
addr16
cmp
call
or
push
jl
addl
cltd
testb
xchg
add
sbb
gs
cltd
sbb
scas
add
pusha
mov
sahf
test
mov
jo
subb
xor
decb
fcompp
mov
call
add
popa
inc
sub
addr16
jnp
mov
jle
loopne
xchg
cmpl
cld
incb
mov
or
fmuls
cmp
push
or
inc
sbbb
pop
add
sbb
iret
push
mov
sub
cmpsl
daa
cmpb
push
adc
add
sbbb
cmp
push
nop
stc
or
xchg
cmp
andb
mov
push
fcmovbe
cmpsb
push
pop
mov
mov
mov
push
push
push
or
repnz
inc
ficoml
movsb
icebp
adcb
or
dec
int
decb
jp
idivl
pop
pusha
orb
sbb
add
xchg
xor
cmp
test
mov
mov
add
cmpsl
xchg
lock
fmuls
lcall
aad
dec
and
mov
and
mov
pusha
mov
cmpsl
adc
mov
test
fstl
icebp
movups
or
pop
push
cmp
mov
pop
pop
scas
add
or
pop
sbb
pop
inc
and
sbb
loop
fiaddl
cmc
lahf
lret
dec
jmp
adc
jge
sub
std
mov
lret
mov
jno
addl
xchg
mov
push
cmc
mov
dec
jmp
pop
pop
add
out
fsubl
movl
adc
cld
sbb
or
jae
rcrl
aas
jmp
nop
stc
push
add
jb
inc
ljmp
push
mov
jge
mov
ljmp
adc
add
xchg
inc
in
xlat
int3
push
fs
mov
mov
cmp
jecxz
inc
int3
mov
or
out
jne
cld
jmp
outsl
inc
add
add
cld
jne
push
dec
or
dec
outsl
and
rcr
mov
enter
cmp
movsb
subl
mov
xor
xor
orb
xor
aam
bound
cld
inc
add
inc
add
lret
sti
out
stos
cli
decl
xchg
push
cld
inc
into
aaa
mov
adc
shl
mov
sti
incl
add
inc
sub
or
ja
outsl
cmp
insl
roll
pop
sub
rcr
push
and
repnz
clc
mov
stc
xchg
jns
lds
out
jle
fsts
adcb
es
into
daa
lds
adc
jo
inc
int
xchg
insl
aas
jae
mov
adc
mov
xor
jecxz
push
pop
loop
mov
rcll
push
dec
inc
or
shlb
adc
ret
jp
sbb
in
jo
test
aad
jp
mulb
sub
add
insb
inc
or
std
in
add
stos
mov
or
cwtl
mov
dec
in
xchg
add
aad
insb
inc
xchg
adc
mov
adc
ret
rorb
insb
pop
jl
mov
add
inc
inc
xchg
cld
aad
test
aad
cmpsb
scas
pop
testb
pop
fildl
cmpsb
loope
fcoms
cmp
mov
call
jb
xchg
cld
dec
cmp
adcb
inc
pop
add
loopne
lret
jns
arpl
mov
dec
adc
test
adc
sahf
js
ret
outsl
add
dec
cmovg
sti
cmp
test
leave
loope
and
hlt
cli
out
dec
leave
pop
inc
test
add
insl
xchg
in
push
cli
jg
mov
sub
add
adc
dec
outsl
jl
rcrb
or
mov
mov
or
roll
xchg
mov
and
push
je
scas
cltd
pop
and
push
decl
ljmp
mov
mov
adc
cld
adc
out
xor
mov
add
stc
icebp
roll
adc
add
pushf
cltd
add
dec
or
aad
rcrb
jb
lcall
mov
cwtl
and
pop
int
lds
cld
cld
rcr
inc
aad
stos
mov
push
inc
pop
aad
jnp
push
push
cmp
aad
mov
mov
dec
cwtl
sub
mov
mov
cwtl
sbb
mov
cld
cmp
jb
pop
cwtl
or
add
mov
xchg
jp
dec
repnz
icebp
incb
aad
mov
add
mov
adc
xchg
add
sbb
jmp
xchg
or
add
lcall
leave
fiaddl
movsl
icebp
scas
cli
dec
add
xacquire
add
push
mov
in
jae
mov
repnz
add
xchg
cmp
and
cmpsb
add
jle
xor
adc
arpl
inc
in
or
xchg
std
cli
adc
or
call
aas
add
inc
jb
repz
lds
adc
stos
cmc
add
fldcw
das
je
add
cmpsb
repz
xchg
jge
mov
lret
std
sti
scas
add
pop
cmp
jle
or
call
inc
aas
add
push
rcl
mov
jmp
xor
das
inc
or
test
in
enter
pop
jno
sub
scas
enter
xchg
in
add
push
add
mov
scas
cld
and
pop
rorb
add
imul
mov
mov
jne
add
std
jne
femms
cmp
lret
xchg
nop
cld
jns
nop
fdivrs
nop
cmc
je
mov
jge
or
mov
cld
adc
adcb
shrb
sti
je
popf
ja
or
adc
jno
outsl
or
jecxz
xchg
cld
jmp
repnz
push
notb
push
add
ret
adc
mov
pop
xchg
add
push
or
sbbb
push
xlat
aad
sahf
aas
rorb
jmp
popf
or
mov
aam
aad
mov
leave
repz
sub
addr16
jb
mov
or
adc
mov
iret
jb
repnz
mov
clc
out
add
or
pop
or
jns
or
movl
outsb
pop
push
in
loope
aas
push
jmp
jp
out
pop
cli
cmp
inc
cmpsb
pop
inc
shll
push
inc
jnp
repnz
outsl
pop
shll
mov
adc
sbb
jb
add
out
arpl
sbb
push
adc
xchg
add
loop
fdivr
xor
or
test
cwtl
xlat
cmp
std
push
testb
in
add
lock
or
and
or
push
mov
jne
fsts
add
xchg
sti
xchg
push
loop
ret
das
mov
dec
cltd
sti
xchg
push
jmp
fscale
push
jb
jecxz
sahf
enter
dec
sbb
add
push
jg
push
jns
ficoml
pop
pop
xor
leave
add
insl
decb
mov
sti
out
imul
jmp
lcall
add
mov
inc
in
jg
add
push
cld
jne
fdivrs
add
adc
lea
dec
push
in
verw
push
sub
sti
mov
add
std
cmp
clc
imul
and
xchg
mov
sbb
xchg
mov
push
dec
cmp
scas
add
adc
jge
or
dec
outsl
lods
out
xchg
mov
and
adc
jg
sti
pushl
mov
repnz
aad
ret
adc
icebp
js
pop
mov
addr16
hlt
incl
add
jnp
cmp
cwtl
popf
add
mov
mov
mov
push
add
push
xchg
xlat
push
adc
outsb
mov
jp
jl
vpmovmskb
push
mov
push
or
inc
pop
jecxz
adc
mov
cmp
call
decl
aad
iret
sti
xchg
adc
push
jge
or
add
fisttps
xchg
jo
scas
clc
adc
and
xor
lock
sbb
lock
js
sub
or
add
aam
test
lds
sbb
in
push
or
add
test
clc
test
cli
lock
dec
dec
loope
and
loop
xchg
and
push
mov
mov
push
leave
add
addr16
aas
mov
sub
int3
js
icebp
xlat
iret
inc
push
push
test
rorl
add
repz
into
inc
xor
loope
xlat
or
ds
test
aad
out
cltd
std
fdiv
lea
hlt
sti
ficomps
fldl
add
inc
xchg
fdiv
push
je
add
add
mov
sub
inc
int
sti
adc
addb
outsl
push
pop
mov
idiv
add
mov
push
jg
push
push
mov
or
add
dec
or
or
add
test
lret
sti
mov
cld
adc
lea
mov
fisubrl
or
add
mov
jae
pop
mov
cltd
sbb
pop
dec
add
adc
add
or
mov
ret
or
push
cmp
adc
or
mov
add
and
pop
jo
inc
leave
pop
cmpl
pop
sbb
cmpb
jnp
add
add
add
nop
add
push
icebp
mov
adcb
ja
in
inc
jae
xchg
add
add
mov
mov
andb
in
mov
insl
cmpsl
incb
out
cld
sub
add
ffreep
or
add
mov
inc
or
pop
and
cmc
jmp
mov
add
pop
repz
outsb
jge
or
add
fldl
movsl
hlt
xor
mov
add
mov
mov
jmp
icebp
mov
hlt
jmp
cltd
lret
push
mov
aam
lds
test
loope
arpl
enter
inc
stc
dec
add
jmp
bnd
or
add
repnz
push
cmpsl
pushf
add
mov
inc
push
push
int
jp
lds
jle
mov
jge
cmpsb
test
jmp
xchg
add
cltd
loope
jno
mov
int
test
hlt
sti
jmp
je
sti
jmp
in
or
adc
or
jl
xchg
pop
add
aad
rcl
cmpb
add
mov
pop
je
ljmp
add
or
incl
scas
cs
cmp
dec
mov
lods
sbb
add
push
decl
jg
inc
cld
mov
adc
imul
add
xchg
pop
lea
jae
inc
or
add
leave
sbb
inc
mov
mov
test
outsb
inc
inc
push
xchg
dec
push
test
dec
aad
sub
adc
je
dec
ljmp
adc
call
pop
mov
pop
into
xchg
loopne
out
push
add
push
cwtl
idiv
sub
xchg
add
mov
incb
add
fnstcw
add
sub
movsb
add
adc
das
daa
test
lea
test
loopne
mov
mov
and
mov
out
nop
push
icebp
xchg
nop
dec
mov
mov
or
xchg
insl
mov
mov
or
add
add
add
pop
test
adc
add
xchg
cwtl
loope
in
add
add
int
pop
push
sti
outsb
dec
pop
aam
jmp
add
pop
iret
addr16
hlt
push
lods
loope
out
lock
cmp
cwtl
mov
loop
test
sbb
jmp
mov
xchg
daa
leave
pop
adc
or
add
fimull
push
bound
inc
or
test
clc
int3
add
in
outsl
call
adc
icebp
sti
fimuls
add
hlt
jne
aad
adc
xchg
or
insl
xchg
or
jmp
aad
sti
aam
add
leave
fmuls
jmp
adc
lahf
mov
mov
jns
jl
push
es
add
hlt
aas
jmp
adc
pop
add
add
jle
inc
lods
or
ljmp
add
jne
or
adc
dec
add
jnp
clc
add
push
ret
or
pop
push
dec
add
or
adc
xor
adc
cmovnp
push
mov
or
lock
subl
cmc
pshufw
add
lock
and
push
pop
test
add
add
mov
jbe
push
xchg
or
sbb
dec
add
lret
add
loopne
inc
icebp
call
jne
lcall
rcr
lea
aad
imul
jmp
add
push
add
add
mov
loopne
add
adc
das
adc
outsl
sbb
add
and
sbb
loopne
mov
mov
adc
loopne
cli
sub
adc
in
or
dec
movsb
and
or
xor
sbb
subb
cmp
jle
daa
stc
sbbb
vpaddsb
jle
popa
sarl
adc
shll
add
sub
dec
ret
mov
add
pop
push
fisubs
mov
dec
jmp
inc
into
or
xchg
jle
lahf
movsl
popa
fs
and
loopne
jmp
dec
inc
in
add
icebp
adc
adc
lock
mov
add
fmull
inc
jmp
mov
add
or
or
sbb
aad
or
testl
in
lret
mov
sbb
ret
shrb
fnstenv
jbe
sbb
icebp
mov
pop
add
adc
adc
sti
add
add
adc
inc
dec
mov
in
add
ljmp
push
aaa
jae
je
filds
shrb
xor
or
divl
orb
je
call
xchg
pop
divl
out
jne
lret
or
adc
adc
add
add
add
cmp
jne
jae
call
test
je
inc
xor
sarb
pop
jne
add
mov
movsl
adc
push
inc
cld
out
sub
fisubrl
pop
sti
loopne
adc
stos
pop
mov
rcll
or
js
or
ret
loopne
incl
enter
aad
adc
call
ret
jno
insl
mov
adc
enter
in
divl
mov
faddl
add
and
nop
sahf
adc
xorb
fdivr
aad
aad
push
xchg
or
adcl
cmpsb
add
inc
jno
jle
sbb
jae
jmp
out
sti
mov
and
call
pushf
pop
scas
pop
loope
rclb
pushf
mov
dec
jmp
adc
sub
outsl
add
loopne
jmp
ds
cltd
inc
aad
fsqrt
enter
in
call
popf
cli
ds
idiv
test
mov
aas
xorb
hlt
or
call
dec
add
lods
cmpsl
adc
movsl
nop
in
push
aad
into
stos
or
je
icebp
xor
mov
cmpsb
sub
pushf
out
jne
dec
push
adc
and
add
in
aad
pop
adc
fidivrl
pop
stos
loope
push
bound
add
in
add
jne
ljmp
adc
loop
mov
sub
pop
adc
add
loop
adc
cld
dec
jmp
adc
adc
sub
mov
in
add
mov
or
push
aaa
ja
je
cmc
xchg
or
or
cmp
cmp
inc
sti
divb
xchg
dec
sbb
out
call
cld
divb
loopne
adc
loopne
or
js
jmp
adc
ret
push
mov
flds
add
xchg
jne
loopne
call
call
imul
movsl
jg
add
xchg
lock
adc
or
sarl
xor
cli
inc
in
pslld
pop
sti
pusha
fcoml
push
daa
or
mov
pop
sub
or
cmc
or
insl
iret
or
aad
cmp
test
aas
add
out
mov
fidivs
lret
adc
icebp
jo
cmp
mov
add
push
pop
shlb
sbb
add
xor
mov
or
in
rclb
mov
aad
cmp
sub
lea
jo
xchg
and
in
test
decb
add
push
xor
fwait
inc
neg
movsb
xlat
pusha
dec
adc
xchg
imul
sub
inc
aad
xor
mov
sub
or
dec
pop
pop
loope
add
mov
or
add
fs
jmp
icebp
sbb
pop
in
ret
loope
dec
sub
xchg
add
cmp
inc
ss
jo
lds
call
lds
daa
or
push
sbb
in
sarl
jmp
ficomps
inc
mov
leave
je
push
fdivs
pop
xor
add
mov
xchg
lds
mov
scas
neg
pop
mov
dec
rcrb
rcrb
leave
stos
aad
push
bound
in
sbb
or
ds
add
xchg
jne
or
call
test
test
push
addl
jne
mov
or
xchg
idiv
jns
je
sbb
push
call
idiv
gs
lea
mov
notl
jb
mov
push
aaa
mov
nop
ds
and
lea
sub
pop
cmpsb
ds
pop
add
mov
pop
pop
mov
notl
jmp
rclb
out
aad
push
cltd
or
add
repnz
call
dec
mov
mov
mov
mov
sti
pushf
xor
adc
hlt
jb
mov
fdivrp
imul
jo
or
mov
jmp
mov
cli
loopne
adc
imul
inc
xchg
jmp
inc
leave
outsl
imull
lock
xchg
rep
dec
in
outsl
mov
push
dec
or
xchg
add
push
les
mov
mov
dec
loop
dec
inc
xchg
and
movsl
loop
jnp
dec
jmp
and
fisttpll
add
dec
jns
loope
mov
aad
sbb
pop
mov
xchg
movsb
repz
repnz
xchg
js
jae
adcb
mov
out
fsub
adc
fldl
fnstsw
cli
xchg
mulb
pop
in
add
dec
add
mov
push
popa
ret
in
fldlg2
dec
add
add
faddl
pop
inc
jo
push
ss
fld1
fisttpll
in
ficomps
inc
pop
or
jmp
add
mov
push
add
addr16
mov
pop
arpl
add
xchg
inc
jmp
inc
and
ds
lcall
push
cli
sub
and
xchg
push
call
cmpsl
push
and
je
not
dec
or
jno
add
imul
adc
popa
sub
jl
jnp
fs
not
out
rorl
cli
or
push
cmp
loop
je
add
out
xor
xor
sbb
xor
and
add
je
cld
cli
into
outsl
popf
imul
shll
or
dec
sub
sub
add
pop
ds
dec
sbb
mov
pop
mov
xor
cmp
popf
jl
out
in
into
push
icebp
push
push
pop
xchg
xor
adc
mov
lea
loope
sti
call
dec
icebp
sti
sub
je
add
repz
or
dec
or
xor
sti
cli
rolb
aad
mov
out
cli
push
mov
shl
int
fldcw
adc
xor
decl
das
add
lock
fstps
adc
mov
jmp
or
xor
lods
frstor
or
and
stc
orl
adc
jae
push
inc
cmpsb
pop
push
in
data16
icebp
mov
pop
fiadds
mov
lock
or
jnp
loope
inc
aad
sbb
mov
mov
jb
xchg
inc
aad
test
imul
xchg
sbb
adc
push
insl
stc
into
inc
aad
sub
into
loope
add
call
insl
xchg
push
add
xchg
repz
or
or
mov
adc
add
inc
push
out
xchg
aas
jmp
cmp
push
test
xchg
or
scas
dec
add
sub
add
fnstcw
xchg
or
mov
inc
jbe
shl
xor
dec
fcmove
aas
jmp
push
pop
popf
and
xor
pop
or
add
inc
je
insb
or
xor
pop
adc
inc
mov
jae
add
and
aas
or
ljmp
cmp
or
cmp
clc
or
cmp
or
cmp
clc
fnsave
call
add
sub
loop
push
leave
outsb
adc
push
ja
jnp
std
push
adc
test
ljmp
je
jg
add
aas
or
push
sub
mov
mov
jnp
pusha
cmpsl
mov
pop
pop
xor
out
dec
mov
sub
or
aad
xlat
cmpsl
paddusb
cmp
pop
loop
pop
aas
in
sti
aaa
inc
fdivrs
add
aad
mov
inc
push
int3
sub
xchg
scas
je
fdivrs
aad
enter
add
inc
push
push
stc
or
xchg
lock
sti
std
in
mov
or
int
lock
lret
push
sti
movsl
imul
lds
test
rcrl
inc
jmp
roll
or
add
fidivrl
push
xlat
ret
bound
filds
add
add
or
inc
fisttpll
jl
push
test
out
jle
cltd
pop
aad
jmp
ljmp
test
fists
fdivrl
repnz
jmp
testb
lcall
jno
add
or
fstpt
movsl
outsl
add
push
cmp
xchg
or
pop
xor
sub
add
outsb
into
stos
add
sub
add
add
jb
jmp
rorl
mov
or
jmp
add
hlt
nop
xor
dec
add
test
or
mov
sub
sbb
dec
add
ljmp
cli
xchg
or
xor
jnp
add
cmp
push
sbb
push
lret
push
mov
adc
shlb
inc
mov
mov
jb
mov
shrb
add
jno
int
jl
or
jno
int
insb
or
loopne
sar
or
push
pop
add
mov
or
push
mov
sub
fists
in
dec
add
pop
pop
inc
and
xchg
mov
push
xor
mov
cmp
in
rclb
loope
mov
add
aas
aad
xor
push
loope
adc
push
sub
jae
mov
test
mov
ss
mov
pop
mov
sti
push
stos
push
popa
lock
sti
pop
test
out
std
inc
sarb
call
pop
cmpsl
dec
call
lods
or
shlb
jmp
xor
inc
adc
cmp
add
jmp
push
push
dec
pop
jmp
loopne
testl
mov
add
pop
test
push
mov
out
mov
adc
or
outsb
jns,pt
movsb
jmp
xlat
fdivrl
sbb
data16
pop
pop
in
aam
out
adc
outsl
jo
nop
fnstcw
and
sti
scas
add
cmpsb
xor
sbbl
ret
sub
xorb
add
movsb
xor
iret
push
pusha
fdivr
pop
xor
test
jmp
pop
or
loop
pop
mov
out
in
test
and
mov
mov
pop
cmpsl
inc
or
xchg
aas
xchg
jge
add
inc
push
ss
push
or
push
push
jecxz
shl
add
add
push
sbb
incl
add
aad
pop
ja
testl
or
in
or
add
in
adc
mov
mov
jne
xor
outsl
adc
mov
mov
mov
lds
or
mov
sbb
enter
loopne
xor
inc
clc
mov
push
add
jae
lea
dec
push
aad
add
add
enter
aad
cmp
sub
les
call
data16
inc
into
xchg
loop
adc
push
in
xchg
loop
lahf
stc
adc
push
and
subl
in
lods
popf
jecxz
mov
movsb
in
stos
sbb
or
les
add
pop
mov
sti
mov
or
add
inc
add
mov
into
push
loope
arpl
loop
or
ljmp
or
sar
or
sub
pop
add
mov
aad
xchg
in
adc
jmp
or
push
sbb
shll
inc
jmp
add
clc
jne
pop
loope
roll
add
or
int
pusha
out
shrb
fimuls
test
dec
loope
dec
hlt
in
rorb
andl
or
sbb
jae
call
pop
xchg
cs
xchg
fucomp
pop
stos
fisttpll
push
jb
push
in
pop
in
loope
or
inc
xchg
and
rorl
add
mov
sti
jmp
add
andb
add
test
mov
inc
and
outsb
push
aam
loope
cmp
or
mov
cli
add
shll
sbb
or
aam
add
arpl
test
sub
add
mov
add
jl
jne
inc
in
adc
xor
add
and
jle
add
loopne
in
add
in
in
or
and
adc
cli
ljmp
jne
xchg
or
mov
dec
push
imul
shrb
fs
mov
or
pop
ret
push
mov
mov
push
sbb
push
sbb
or
pop
jmp
cmp
push
xchg
or
inc
into
inc
add
orl
lock
clc
push
pop
add
incl
cmp
sar
aas
aad
mov
add
loop
or
and
adc
loop
ret
xor
enter
aad
cmp
or
xchg
mov
mov
ljmp
xor
dec
and
push
or
loopne
ret
xor
mov
add
add
adc
jmp
push
inc
clc
or
or
cmp
test
ret
fwait
int
cmpsb
add
or
mov
xchg
xor
push
out
cwtl
into
ss
fnstcw
in
ljmp
mov
into
mov
add
shrb
mov
add
fnsave
subl
iret
pop
push
mov
cmpsb
add
xor
mov
fcomps
push
ljmp
sbb
cmp
jne
adc
jmp
lods
rclb
adc
inc
clc
xchg
pop
or
adc
mov
jmp
xchg
or
mov
push
xor
inc
add
in
jge
mov
sarb
jl
add
or
jmp
xchg
or
hlt
mov
or
adc
icebp
adc
push
or
add
jo
ret
lods
dec
push
mov
jnp
jo
test
lods
notl
mov
shrl
add
lds
add
outsl
jp
jo
lods
imul
inc
popa
add
sub
lea
lret
adc
or
fnstcw
cmc
cld
or
call
jno
inc
mov
push
rolb
cld
jg
push
jno
mov
or
add
mov
add
pop
aad
pop
mov
mov
pop
dec
jo
leave
add
mov
add
pop
xchg
xor
add
aad
adc
scas
nop
inc
in
jb
lea
xor
fdivs
jmp
pop
int3
sti
push
mov
ret
repnz
gs
insb
jg
aaa
call
add
imul
mov
sti
pop
and
mov
dec
faddl
aad
out
movsl
loope
dec
pop
or
add
or
xor
lret
int
movsb
aas
add
pop
xchg
jmp
add
lea
in
pop
push
push
test
sti
or
sbb
dec
lret
enterw
inc
mov
dec
fistps
cmp
sub
mov
xor
rorb
jmp
inc
add
aad
xchg
mul
repz
std
mov
push
mov
dec
fstpl
daa
ss
cmc
add
rorl
fmull
fldl
jmp
xor
add
leave
mov
notb
into
call
push
push
dec
xchg
out
jns
test
sub
call
jb
dec
stc
add
arpl
push
rorl
lret
sarb
test
adc
iret
jg
jmp
or
inc
or
inc
or
cmpl
dec
cltd
add
in
pop
inc
data16
adc
jne
aas
imul
je
idiv
xor
pop
test
or
call
and
add
add
mov
flds
je
jecxz
hlt
dec
mov
mov
mov
mov
cwtl
inc
clc
mov
add
jns
pushl
cld
lock
cmp
add
mov
mov
xchg
push
hlt
test
add
scas
add
aaa
push
hlt
fwait
mov
add
pop
inc
lock
insl
iret
aaa
add
sbb
sti
pusha
outsl
add
test
popf
or
mov
fdivr
insb
rcl
sti
pop
cmp
mov
gs
cmp
repnz
sbb
sub
mov
dec
jge
sti
decl
dec
les
or
xchg
fldz
mov
mov
pop
or
add
fsts
add
jmp
xchg
pop
fldcw
movsl
push
fcomps
enter
ds
xchg
es
fistpll
adc
arpl
rorl
mov
jno
adc
xor
test
sub
xchg
or
enter
push
mov
or
cmp
xchg
add
pop
clc
cmpsl
sbb
sbb
mov
ret
mov
test
xchg
pop
leave
stos
mov
jb
mov
and
or
mov
xlat
or
lcall
add
cli
cs
pop
ret
lods
sahf
mov
sbb
pop
leave
leave
xchg
jecxz
cli
testb
and
icebp
inc
cmp
aaa
fiaddl
xchg
jne
xor
sti
add
fidivrs
dec
or
idiv
fcoml
idiv
js
je
ja
call
mov
clc
cmp
jbe
xchg
outsb
xor
adc
add
fldl
movsb
nop
mov
call
add
clc
int
or
aad
mov
fdiv
mov
jecxz
add
call
xlat
dec
lea
xor
push
xor
jnp
aad
xor
pop
mov
push
pop
xlat
test
icebp
mov
ljmp
mov
mov
call
out
mov
shlb
aas
aad
mov
incl
add
xchg
pop
into
push
mov
loopne
mov
or
call
cltd
incl
aad
dec
daa
std
sti
incl
jmp
shr
shlb
dec
and
fimull
xchg
add
inc
push
sti
int
mov
sub
daa
push
icebp
mov
or
push
ficoml
ret
lds
mov
or
add
or
push
in
stos
or
add
add
dec
jmp
lods
aad
jnp
fcmovbe
es
ds
jmp
mov
loope
loop
imul
ret
imul
std
in
mov
or
mov
pop
mov
adc
jmp
sbb
mov
add
add
out
push
fs
das
mov
nop
pop
xchg
mov
mov
mov
call
xchg
xchg
or
push
adc
sub
sbb
or
mov
cmc
push
or
inc
jmp
mov
bound
in
fst
or
je
adc
sbb
ret
add
sbb
cmp
shlb
inc
push
mov
sub
push
inc
add
call
pop
mov
sarb
addr16
dec
add
cld
add
add
jno
je
outsl
aad
je
inc
mov
adc
add
add
fcoml
dec
cmp
idivl
add
hlt
scas
mov
dec
bound
jmp
cld
push
mov
leave
ret
push
mov
push
and
lea
call
push
repz
adc
mov
call
gs
in
jp
js
xlat
aam
enter
mull
mul
repnz
jae
divl
aaa
cmp
iret
add
add
sbb
cmp
in
mov
sti
mov
mov
sti
stos
and
mov
test
mov
shlb
and
adc
aad
rcr
inc
mov
jno
cmp
test
pop
clc
xor
adcb
data16
shrb
shl
or
xchg
add
mov
sub
cli
sarb
lods
mov
fidivrl
cmpl
add
fs
icebp
icebp
mov
lcall
pop
lret
push
inc
add
and
ss
or
test
xchg
pop
and
shl
jne
fistpll
and
cs
cmp
add
and
out
push
xlat
or
out
pop
add
call
insl
push
adc
mov
pop
push
xchg
and
sti
xchg
pop
inc
and
push
sub
adc
sarb
jmp
push
or
cs
xor
cld
cmp
inc
jmp
jl
jne
ret
push
and
add
ret
mov
adc
mov
cmp
push
test
add
sub
je
test
adc
or
call
test
jne
mov
and
decb
add
outsl
int3
idiv
jno
and
clc
or
call
dec
call
idivb
mov
add
sub
adc
add
mov
add
aad
or
or
xor
sbb
adc
and
add
enter
aad
aam
push
std
push
pop
mov
xor
aas
aad
add
loop
lret
aaa
and
adc
daa
adc
mov
mov
call
sub
in
mov
mov
xlat
dec
inc
xor
add
sbb
fwait
lret
into
jmp
lcall
mov
scas
mov
icebp
pushl
mov
test
hlt
lret
ret
or
and
or
movsb
loope
cmpsb
add
adc
adc
mov
lcall
fstpt
inc
lds
sub
call
adcb
lods
or
mov
mov
sbb
shlb
add
cmp
add
int
xchg
push
bswap
pop
inc
int
aad
mov
xchg
ss
imul
jmp
push
or
xor
es
mov
or
nop
sub
ds
xchg
or
jmp
mov
cmp
add
mov
push
xor
stos
pop
xchg
mov
and
xlat
or
shll
sti
fdivrp
addb
and
inc
mov
dec
push
push
or
inc
or
push
lret
pop
ds
pushl
fs
sub
pop
add
dec
add
push
mov
add
mov
jae
int
or
add
pop
or
jns
int
insb
pop
imul
push
call
jmp
mov
mov
mov
jg
push
mov
fisubs
sub
push
xor
stc
divb
addl
adc
pop
or
mov
into
testl
mov
pop
shrb
test
add
mov
push
pop
into
push
mov
add
aad
mov
in
jo
add
dec
jl
mov
aad
or
add
aad
inc
and
xchg
xor
push
andb
jmp
rcr
inc
and
lret
enter
aam
inc
and
xchg
push
cmp
faddp
sti
pusha
out
xor
add
mov
aad
lock
loop
xchg
and
cltd
or
repz
ss
mov
xor
call
movsb
jmp
pusha
dec
int
sbb
lret
testl
dec
jmp
dec
xlat
mov
adc
jmp
pusha
sub
pop
cmp
dec
add
mov
add
add
pop
inc
aad
sarl
xchg
fistpl
push
dec
add
jge
push
cmpsl
cld
add
fsubs
add
cmp
test
or
aam
add
lea
lea
sbb
push
data16
jecxz
test
lahf
ds
adc
or
cltd
ds
iret
push
repnz
roll
mov
shlb
jmp
add
and
icebp
cmp
push
mov
add
pop
repnz
sti
hlt
out
inc
jmp
cltd
or
add
ret
adc
push
jnp
hlt
dec
xor
dec
stos
push
xor
push
idivb
je
push
mov
call
aaa
sahf
mov
add
fdivs
add
adc
loopne
adc
push
mov
jp
add
rol
push
push
or
pop
mov
cli
out
out
testl
into
dec
add
test
pushl
movsb
fistl
in
or
sub
aad
cmpsl
or
xor
loopne
cmc
aas
aad
xor
add
dec
std
sti
push
fidivl
inc
leave
and
add
push
xor
lods
jnp
sub
push
repz
xchg
adc
fdivrl
push
dec
push
and
xchg
add
ficompl
cmp
jl
push
add
test
xchg
push
leave
pop
cli
dec
aaa
pop
retw
lea
mov
lea
mov
cmp
and
add
or
xchg
mov
mov
pop
lret
movsb
mov
mov
jmp
stos
jp
add
mov
add
cmp
pushf
loope
sub
adc
das
cli
shlb
pop
sbb
rclb
inc
aad
sub
into
in
sbb
pusha
inc
addl
xor
subb
add
or
or
ret
sub
jmp
sub
cs
jl
mov
inc
lods
out
addb
adc
loopne
or
sub
scas
dec
mov
dec
lock
dec
cld
jb
mov
lea
cli
mov
xchg
mov
pop
mov
scas
mov
aad
mov
push
adc
cli
pop
add
lods
imul
aam
pop
call
sbb
dec
xor
xchg
add
mov
sbb
sub
cmpsl
repz
and
inc
xor
addl
mov
xor
outsl
into
sti
jae
out
jae
fs
add
push
out
roll
mov
add
jle
sti
push
add
aaa
fstpt
mov
scas
mov
sbb
call
xor
je
pop
hlt
repz
mov
addl
or
jo
stc
and
inc
hlt
and
cmc
xorb
rcl
add
mov
nop
or
sbb
lock
mov
decl
aad
add
aad
mov
scas
aas
add
cmp
sbbl
aad
or
mov
clc
and
mov
leave
mov
mov
leave
mov
add
mov
test
cmp
mov
cmp
sbb
pop
sti
enter
aad
les
or
jbe
enter
fbstp
repz
in
mov
cmp
jns
scas
adc
test
dec
push
jmp
scas
in
lahf
pop
ret
push
loope
sub
dec
das
mov
push
fldl
imul
or
pop
mov
ds
aaa
fisttps
icebp
ret
adcb
or
nop
leave
adc
leave
in
jmp
add
push
ret
insb
ret
add
fiadds
add
add
ss
cs
jmp
or
jle
iret
add
xor
or
imul
or
jmp
daa
add
je
ficoms
test
or
sub
or
jnp
or
inc
iret
push
aaa
mov
sbb
or
xchg
loope
sti
xchg
dec
lret
pushf
inc
cli
call
add
lret
inc
jbe
add
mov
cmpl
jmp
inc
lock
adc
call
mov
inc
testl
mov
mov
inc
cmp
jne
jl
cmc
add
inc
cmp
cwtl
inc
cmp
mov
cmp
test
popf
mov
or
push
pop
push
clc
call
pop
adc
add
addb
inc
lock
pop
or
add
sbb
aad
mov
lock
dec
mov
lock
jl
lahf
test
pop
idivl
daa
adc
les
sarl
and
lahf
mov
add
pop
mov
maxps
add
pushf
out
incb
stc
movsl
repz
add
icebp
and
stc
cld
adc
lea
test
fcoms
or
push
mov
jb
sub
sarb
loope
or
int3
cld
jp
jg
imul
int3
cld
pop
ret
imul
fld1
inc
fidivl
add
pop
les
mov
mov
pop
fiadds
ds
pop
push
jecxz
lahf
loope
pop
inc
add
inc
xchg
mov
pop
mov
mov
aaa
icebp
std
cmp
lods
mov
bound
or
push
add
sub
fstl
adc
add
enter
out
adc
pusha
sbb
es
jmp
movsl
std
dec
xchg
gs
pop
jb
adc
fdivrs
adc
adc
pop
cli
negb
sbb
mov
sub
dec
or
push
stc
stos
jg,pt
rorl
cs
cs
mov
cmp
scas
add
sti
hlt
add
push
sti
aas
jmp
pop
inc
cld
add
sti
cmp
mov
jb
mov
leave
ret
jnp
insb
or
testl
lock
loop
mov
mov
jae
jg
xor
outsl
or
stc
or
cs
add
xor
repnz
add
push
je
jg
smsw
or
aaa
dec
clc
inc
xchg
cli
sbbb
inc
clc
out
pusha
sti
mov
fnsave
mov
dec
pushf
sbb
xor
fbstp
in
jl
or
jnp
pop
test
pop
adc
mov
pop
xchg
repz
xchg
xchg
dec
push
stos
jecxz
adc
mov
push
xchg
mov
inc
clc
dec
pop
or
xchg
push
xchg
mov
sti
loopne
push
inc
aad
rorb
mov
adc
insb
stos
call
divb
fsts
sahf
add
mov
in
sub
adc
mov
fldt
aam
repz
adc
xor
test
pop
loop
jmp
out
add
loope
lcall
stc
fiaddl
repnz
pop
daa
icebp
xchg
push
out
loope
out
mov
xchg
sahf
mov
int3
in
mov
stc
xor
mov
test
mov
fldcw
add
lcall
dec
rorl
push
mov
jmp
add
fstpl
sti
pusha
adc
lea
fsubl
loopne
fildll
stc
cli
fdivr
sbb
push
leave
jne
push
in
repz
test
cmpsb
inc
cltd
je
pop
ds
bound
mov
jge
xchg
inc
fchs
inc
icebp
lds
push
pop
rolb
xchg
sub
or
fstpt
push
ljmp
idiv
add
aas
add
stc
divb
int3
add
mov
adc
mov
in
jne
les
sti
jl
xchg
inc
or
loopne
add
xchg
jne
outsl
pop
add
xchg
pop
hlt
mov
idiv
xor
leave
ret
push
mov
cmp
mov
adc
decl
not
shl
pop
mov
pusha
into
test
loope
test
add
stos
aas
and
cmpsb
adc
shlb
push
dec
out
or
add
cmp
pusha
in
sti
std
push
jo
lods
pop
cli
mov
cld
call
push
push
mov
fwait
jne
pusha
pop
cld
out
dec
mov
repz
or
and
mov
mov
sub
cld
sbb
mov
ds
add
mov
leave
pop
cwtl
call
jle
lds
push
data16
scas
pop
adc
add
imul
sub
xlat
rcll
pop
xor
pop
or
add
stc
adc
add
orb
icebp
cmpsl
add
adc
mov
jae
jle
fs
add
bound
aad
jmp
mov
ret
loope
jbe
cmp
mov
ds
add
mov
add
lock
mov
xchg
pushf
pop
xchg
cmp
add
std
xor
dec
dec
mov
add
cmp
mov
rolb
adc
or
out
pop
pop
dec
sbb
imul
test
addb
or
aam
fsubrs
and
clc
mov
xor
call
fcmovb
inc
cmp
outsb
sbb
jmp
and
jmp
dec
inc
add
cmp
add
add
inc
cld
xchg
or
out
push
jmp
in
mov
add
push
sub
in
sbbl
dec
cmpl
leave
daa
add
lods
push
jg
lods
pop
add
mov
adc
jecxz
call
in
pop
adc
xorl
test
fwait
and
xor
lea
cwtl
icebp
push
call
mov
sti
cmp
repnz
sti
jo
mov
jnp
add
aad
xor
lods
cmpsb
push
aaa
adc
in
lods
mov
adc
es
dec
cli
mov
add
sub
jle
mov
decl
fs
mov
mov
call
fnsave
test
jge
rcl
aaa
add
sbb
mov
pop
imul
jb
pop
push
clc
mov
sub
out
inc
add
push
cld
xor
dec
sti
and
jmp
outsb
fcom
or
xchg
mov
loopne
andb
test
mov
cmp
in
push
dec
int
or
jmp
mov
add
inc
aad
pop
dec
lds
ret
mov
add
adc
jl
push
outsb
dec
sarl
jb
int
pusha
dec
fmull
adc
dec
jmp
mov
pop
add
ljmp
xor
movsl
sti
push
or
shll
inc
pop
hlt
je
fnsave
incl
push
neg
cmc
adc
pop
lret
sbb
push
ss
cltd
add
jne
add
dec
int
std
pop
mov
jne
dec
out
cmpsl
mov
and
subb
sti
xchg
stc
dec
pop
push
popl
push
mov
jns
movsb
xchg
push
hlt
insb
daa
push
add
sbb
sti
mov
dec
push
xchg
sar
incl
mov
add
pop
bound
rolb
sub
out
je
mov
or
add
popf
orb
divl
ljmp
xorl
or
sbb
inc
or
call
je
jp
or
inc
xchg
mov
lods
push
jge
arpl
sti
jne
inc
call
mov
bound
in
sbb
pop
jl
in
mov
lea
add
add
pop
jmp
xchg
nop
in
jle
add
outsb
fld
mov
jne
arpl
out
and
fwait
bound
test
or
test
cmc
jmp
iret
add
insb
mov
shl
call
push
in
scas
add
sarl
aam
mov
push
loop
mov
add
mov
inc
add
add
out
out
or
mov
pop
call
mov
cmp
jmp
inc
cmp
inc
outsb
pop
lahf
and
and
movsb
iret
loop
pushf
or
leave
add
cwtl
mov
mov
stc
or
jmp
add
push
adc
mov
mov
jb
out
aaa
xchg
and
add
xor
je
mov
cmp
add
cmc
sbbb
scas
jle
add
push
adcl
sub
adc
fadds
sub
cmp
inc
bound
pop
data16
push
mov
cmp
pandn
mov
cltd
push
inc
mov
add
inc
adc
mov
out
rcr
les
jmp
dec
std
cli
mov
cmp
in
mov
jae
insl
jle
mov
lods
jmp
andl
idivl
or
call
ror
test
add
leave
push
in
xor
cmp
mov
imul
add
ret
fwait
jg
cld
pop
add
pop
jl
xchg
or
add
mov
cmp
adc
outsl
rorl
cmp
pop
xor
fcomp
jmp
jp
or
jge
neg
aad
call
or
cs
dec
out
imul
adc
add
mov
call
stos
sti
ds
icebp
mov
cmp
xchg
sarb
sub
stc
repnz
hlt
jbe
add
xor
adcl
lea
popf
adc
xchg
mov
je
loop
ret
sahf
mov
aad
outsb
mov
jmp
mov
or
mov
add
add
jge
test
add
xchg
insb
jge
or
add
mov
insb
pop
lcall
leave
or
cmp
adc
fwait
aas
ja
lods
cs
fwait
aas
pop
sub
sbb
lods
push
inc
or
test
jmp
cld
jo
rep
out
lods
jg
cwtl
adc
stos
test
fs
into
test
jge
add
mov
push
add
fstpl
add
push
pop
call
testb
sti
hlt
loop
aas
jmp
cltd
push
or
push
int3
xlat
call
outsb
daa
loopne
les
or
scas
xchg
mov
sti
mov
mov
lea
xchg
ret
or
pushf
adc
xchg
mov
test
dec
aas
xchg
xchg
or
jmp
inc
dec
in
test
arpl
jne
jle
jmp
mov
imul
insl
fiaddl
mov
insl
notl
out
jmp
je
mov
add
adc
inc
notb
push
add
dec
arpl
cmp
test
cmp
testb
mov
cmp
push
out
addl
inc
lock
or
or
mov
mov
cmp
aad
les
push
call
sbb
hlt
in
das
xchg
das
xchg
sti
std
popa
pop
out
outsl
pop
pop
insl
out
minps
aam
incb
add
mov
jne
test
mov
inc
bound
or
pop
loopne
adc
cld
popa
fsubp
sbb
aas
idivb
dec
pusha
outsb
addr16
xchg
cmp
inc
bound
or
fs
popa
dec
or
jmp
leave
enter
test
dec
dec
xchg
jbe
loopne
adc
test
add
add
dec
jmp
test
test
test
push
push
ret
and
fisubrs
push
dec
xor
add
push
stos
call
sbb
outsb
dec
loope
stc
cs
mov
fwait
das
jmp
xchg
inc
push
dec
or
cltd
cltd
xchg
jmp
sbb
jbe
icebp
xchg
test
mov
fistl
add
or
push
dec
aaa
jb
adc
push
or
mov
das
adc
sbb
add
push
push
cmpsb
in
push
sub
xchg
popa
adc
jne
cmp
insb
aad
cmp
xchg
sti
push
adc
pop
add
lea
mov
mov
mov
popf
sbb
mov
xlat
sti
xchg
or
push
push
or
push
insb
adc
xorl
or
adc
movsb
mov
ljmp
lahf
mov
fwait
adc
lret
dec
push
leave
outsb
pushf
sti
push
aaa
jge
in
nop
xchg
jl
cmpl
testl
jl
gs
jl
bound
push
inc
lock
or
add
inc
in
mov
add
pop
inc
clc
xchg
flds
sub
shlb
inc
hlt
cmpsl
pop
call
cmp
in
mov
in
and
arpl
add
jecxz
cmp
cmp
dec
jbe
or
xchg
dec
lea
lods
testl
mov
les
pop
cmp
dec
imul
insl
fdecstp
mov
cmpsl
xchg
add
jge
idivl
mov
hlt
pop
xchg
sti
cli
sbb
lcall
inc
clc
or
stos
or
movsb
sti
inc
pop
inc
leave
push
pop
js
pop
in
in
shll
add
xchg
test
call
aad
sub
sarl
jns
mov
insl
les
mov
xchg
xor
icebp
sbb
dec
pop
movsl
cmp
cmp
cmp
add
aad
jmp
movsb
push
xchg
imulb
push
dec
lods
sbb
mov
xchg
shlb
jns
in
lea
movsl
pop
jle
test
xchg
scas
movsl
leave
shlb
aam
adc
push
xchg
push
mov
pop
sbb
js
mov
aas
ljmp
adc
sti
push
push
call
add
dec
mov
out
pop
out
mov
das
test
lcall
sbb
jo
lea
aas
int
sub
inc
pop
adc
jmp
pop
lret
ss
or
rcll
in
dec
lret
aaa
inc
cld
sub
cmp
xchg
add
cld
mov
ret
xchg
add
adc
push
pop
insb
sub
mov
sti
cmp
jbe
xchg
sti
pop
mov
in
repnz
xchg
and
insb
jne
jecxz
movhps
shlb
inc
cld
out
mov
jl
jg
cld
repz
ret
dec
push
aaa
jne
inc
mov
in
jmp
clc
add
xchg
jp
cwtl
shl
fwait
push
imul
add
push
push
jge
pop
int3
jecxz
int3
inc
pop
adc
addl
dec
aad
ja
rorl
lds
xchg
mov
loopne
mov
cmp
jno
sti
movsl
or
add
jecxz
inc
mov
mov
cmp
or
or
ds
add
out
adc
add
mov
dec
test
in
mov
dec
filds
push
dec
testb
and
mov
arpl
mov
lret
add
mov
mov
sub
pop
fisttpl
sub
sbb
fwait
pop
sub
mov
dec
cli
push
jg
mov
mov
test
imul
add
ljmp
lret
and
adc
pop
sarl
test
or
ds
int
jmp
mov
aas
in
mov
aad
lods
divps
fadds
add
xchg
jg
imul
mov
add
aaa
xchg
je
mov
loope
pop
xor
add
test
add
out
data16
test
or
and
and
cmp
ds
jne
mov
mov
sbb
jne
test
cld
pop
inc
add
out
ret
inc
pop
cli
mov
lret
pop
inc
add
cwtl
and
rcrw
cmp
sbb
sti
add
mov
or
pop
push
pop
jle
add
add
pop
jnp
insb
xlat
mov
pop
mov
cmp
orl
add
lret
insb
push
leave
mov
cmp
fstpl
pop
lret
inc
lock
call
jo
je
push
jbe
add
insl
adc
addl
mov
mov
std
rolb
add
add
inc
testl
shrl
call
or
adc
loop
jg
scas
mov
leave
repz
xor
lcall
push
mov
or
scas
sub
arpl
dec
push
pop
sti
dec
cli
xchg
out
adc
in
sti
aam
push
inc
mov
fdivrl
cmc
or
orb
je
cmp
sti
add
aam
cmpl
mov
jae
sbb
pushf
adc
push
or
in
add
sbb
jge
mov
into
insb
test
fistl
stc
jae
icebp
cmp
cmp
test
mov
mov
or
inc
std
and
iret
mov
pop
inc
ffree
add
nop
mov
mov
enter
lret
push
cwtl
pop
push
push
cmc
out
pop
push
dec
in
push
test
test
fimuls
adc
mov
sti
xchg
test
xor
dec
aas
add
sahf
shl
aaa
add
xchg
and
push
pop
xor
andl
das
sbb
add
add
add
jmp
push
inc
in
mov
push
hlt
adc
xchg
or
rolb
es
inc
pop
in
ljmp
mov
push
add
jno
cmp
or
testb
or
push
xor
and
xor
push
mov
mov
je
sarb
add
xchg
push
jnp
ret
inc
push
ret
add
pushf
sub
cmc
cmp
cmp
sbb
gs
xor
negl
push
jl
adc
and
icebp
mov
cmp
je
jl
adc
imul
push
imul
sub
or
aad
pop
add
or
add
out
and
xchg
xchg
jg
dec
das
in
jge
xchg
sti
bound
mov
lahf
das
lea
data16
aas
aad
mov
add
add
aad
lea
cltd
sti
adc
lea
or
sarb
in
jb
cli
repnz
jg
jmp
xchg
push
loop
ja
xchg
jb
shlb
lret
sbbb
mov
jecxz
outsb
jb
inc
aad
test
xchg
ret
cltd
mov
insl
ret
lcall
stos
lods
jne
fwait
cltd
push
dec
sbb
push
je
addb
fiaddl
push
aam
sbb
xor
sbb
mov
lcall
fyl2x
add
ret
rcr
lods
std
pop
or
faddl
int
into
cmp
cmp
push
add
pop
inc
clc
daa
adc
add
mov
aas
cmp
fdivr
push
or
jmp
je
sti
scas
cli
dec
je
pop
sub
cmpsl
adc
add
rorl
push
xchg
push
sub
jecxz
addl
dec
cmp
dec
std
and
cmp
or
fidivrl
loop
leave
mov
int3
push
sbb
or
push
xchg
sbb
sub
inc
add
pop
in
push
xor
mov
bound
sbb
adc
inc
js
not
cmpsl
adc
jmp
add
inc
aad
les
xchg
and
std
jae
daa
cmp
adc
aas
sbb
xchg
ds
pushf
lret
cmpsw
inc
and
push
jns
inc
loopne
push
jmp
adcl
or
dec
pop
gs
xor
mov
dec
out
adc
mov
push
pop
lods
add
fwait
je
cli
mov
xor
add
xchg
jbe
jg
adc
rcr
pop
lea
outsl
das
lea
pop
das
sti
test
pop
lea
pop
sub
add
sub
jle
outsb
sbb
jg
jmp
jle
mov
push
das
sti
or
loope
mov
out
in
pop
jg
das
sti
es
mov
bound
push
push
or
add
add
and
inc
aad
stos
repz
and
cli
mov
es
xchg
and
adc
mov
pop
shl
dec
lds
into
fidivrl
dec
xlat
shll
adc
repz
int3
loopne
pusha
lret
int3
xor
add
popl
add
xor
jmp
ret
stos
iret
add
xor
mov
xor
fdivl
push
add
dec
enter
iret
decb
adc
call
push
sub
mov
push
xlat
test
loop
bound
subb
mov
call
push
push
cld
repz
jle
flds
cmp
xchg
std
sbb
mov
sti
xchg
inc
cld
repz
add
fsqrt
cld
fidivs
push
ret
jg
push
orl
enter
push
bound
in
push
jne
add
add
lea
sub
dec
je
call
popf
test
repz
dec
xchg
testl
sub
or
popf
notl
pop
add
out
out
inc
adc
add
and
imul
jno
call
out
rolb
cltd
mov
jecxz
cmp
add
mov
movsl
sub
cmp
jnp
mov
das
not
xor
fstl
and
fidivrl
and
jb
jle
mov
adc
xor
je
in
pop
and
or
rorb
pushf
cmpsb
push
jae
jle
add
pop
xchg
iret
ss
aaa
or
clc
jae
inc
pushf
add
pop
mov
pusha
inc
mov
and
sarl
xchg
data16
jg
and
aaa
add
cli
stos
aaa
aaa
push
stos
pop
adc
pop
add
repnz
sbb
add
leave
call
cmp
add
leave
call
cmc
stos
or
xor
insl
lahf
pop
insl
fnstenv
daa
hlt
lcall
jb
pop
aad
xchg
movsb
fcoms
div
sbb
add
dec
pop
mulb
lea
jge
or
jle
test
inc
jp
test
jecxz
lds
xchg
lea
aad
xor
js
sub
xchg
add
mov
jno
xchg
rorl
lea
sti
dec
imul
ret
sti
cltd
imul
push
cmp
mov
in
icebp
fmuls
add
std
testb
out
inc
addb
jl
outsb
negb
sbb
outsb
jg
push
push
lret
adc
nop
dec
popf
jecxz
pop
cmp
bound
out
add
add
mov
or
mov
decl
std
dec
or
mov
jno
bound
pop
test
testl
enter
call
dec
jne
sti
cmp
scas
addl
mov
jl
cwtl
xchg
divl
aas
mov
sahf
or
rclb
mov
call
clc
test
and
mov
and
mov
sub
mov
push
mov
adc
clc
cs
jb
call
stos
lret
or
mov
clc
dec
cld
push
xor
lret
pop
mov
or
add
xchg
dec
and
movsl
xchg
int
sbb
insb
xor
jne
testl
sub
push
mov
xorl
cld
xchg
sbb
push
or
or
repz
movsl
or
iret
inc
int
pop
jnp
lea
test
jno
rcr
imul
xchg
nop
out
add
mov
jl
pop
xchg
jl
jmp
dec
mov
out
cmc
fdivrl
jne
mov
outsb
mov
cmc
clc
fwait
ja
adc
int
add
cmc
loopne
scas
fisubl
and
outsb
add
jnp
cmp
fsubrl
ss
outsb
push
jmp
popa
aas
jmp
fnstenv
or
add
xchg
test
in
jmp
mov
or
xchg
mov
idivl
sarb
pop
dec
jne
into
popa
ja
icebp
mov
idivl
bound
sti
xchg
movsb
lea
add
sti
cltd
sub
scas
cltd
push
hlt
divl
or
sbb
ret
add
out
jg
add
sahf
out
std
and
push
or
ret
testl
push
ss
loope
idiv
cmpsl
or
cmp
push
int3
add
adc
jnp
jnp
adc
scas
rclb
leave
scas
xor
add
add
incl
in
add
std
jmp
cmp
jne
repnz
mov
add
nop
shlb
or
xchg
adc
sub
bound
aad
mov
cli
jp
inc
or
jno
lea
test
bound
xchg
cmp
test
jp
cmovs
jg
xor
xor
stos
xchg
js
test
dec
cmpsb
out
xchg
movsb
adc
iret
xor
add
adc
pop
out
cld
loop
xor
push
cmp
sti
pop
sbb
push
xchg
adcl
out
push
mov
out
test
incl
je
fcmovu
adc
xor
mov
mov
jecxz
jns
lea
pushf
mov
jae
cmp
or
jle
adc
ror
subb
jns
add
xchg
subb
cwtl
xchg
std
in
cwtl
popa
data16
or
jle
sub
xor
std
loopne
nop
lea
imul
call
fwait
ret
lahf
add
and
add
pop
cmpsb
cli
out
dec
std
pop
rcll
roll
inc
mov
int
data16
add
or
movsb
loope
and
leave
incl
mov
cld
out
inc
add
xlat
out
add
pop
fidivrl
insb
sbb
test
or
jb
test
cmpsb
out
or
adc
test
or
adc
or
jmp
mov
cmp
decl
test
mov
add
jg
jge
add
dec
or
add
xchg
cld
xor
mov
jl
decl
jbe
pop
pop
xchg
or
pop
cmp
fs
mov
popf
addl
pop
push
jns
jg
stos
orl
dec
adcl
filds
jg
add
sti
adcl
aad
jae
mov
decb
test
bound
and
xchg
stos
xchg
push
ja
jge
mov
sbb
sbb
mov
cmpsl
xor
inc
jbe
push
xchg
bound
pusha
es
pusha
fldl
cli
mov
cli
push
cli
add
or
jg
ret
adc
inc
mov
jecxz
mov
outsw
sbb
mov
repz
aad
insb
inc
mov
xchg
negl
movsl
or
xor
gs
incl
cmp
adcl
andl
inc
imul
shlb
jno
sbb
or
jns
ror
xchg
add
sbb
popf
sub
sbb
dec
sbb
jne
testl
jge
rsm
fistpll
fwait
dec
lods
jmp
xor
pop
push
xchg
gs
std
fisubs
mov
mov
xchg
out
inc
cmc
aas
inc
cld
out
pop
mov
movsb
pop
xchg
add
pop
bound
fdivr
sbb
dec
or
jo
cmpsb
int3
int3
jmp
inc
ret
cli
cmp
mov
aaa
pop
fiaddl
jb
jno
lods
add
out
shl
mov
mov
enter
in
push
ret
dec
cld
je
test
add
lea
aaa
mov
push
and
call
xchg
xchg
incb
add
push
pop
test
or
mov
orb
and
mull
add
rcrb
xorb
push
movsb
xchg
jecxz
pop
inc
push
pop
scas
mov
in
mov
push
dec
push
sti
lock
jmp
out
push
adc
idiv
mov
xor
pop
movsb
xchg
jmp
dec
jbe
in
xchg
outsl
add
ljmp
mov
and
dec
cmpsb
mov
sti
mov
test
or
jbe
popf
pusha
push
lcall
add
bound
mov
jmp
out
push
push
add
cmp
add
dec
jbe
cli
test
mov
test
push
add
push
outsb
lahf
call
lods
sbb
pop
in
scas
or
subl
inc
dec
sbb
add
pop
add
loop
mov
cmc
push
inc
push
cmpl
xchg
into
inc
test
leave
mov
in
ss
fs
out
jecxz
dec
mov
cmp
sub
jge
je
pop
test
jle
dec
movsl
fcoml
nop
cwtl
pop
ss
push
inc
adc
neg
subb
add
or
je
insl
loopne
call
pop
call
shr
jl
std
push
je
xchg
ds
sahf
jmp
mov
nop
add
arpl
repz
xchg
je
add
add
inc
or
jge
xchg
xchg
test
bound
cmp
fsqrt
notl
xchg
push
dec
call
push
or
cltd
add
out
out
idiv
add
out
pop
mov
jmp
jecxz
inc
daa
mov
incl
iret
out
aaa
mov
jmp
repz
addr16
mov
add
push
pop
xchg
ret
mov
in
cmp
or
outsb
push
dec
lea
ds
decl
xchg
sbb
jnp
rorb
ljmp
cltd
mov
push
test
clc
mov
cli
test
sub
addl
aas
notl
das
adcl
imul
xchg
int
repz
cmpsl
mov
push
fxam
or
std
call
mov
pop
push
lods
mov
in
jmp
leave
repz
sbb
ret
adc
test
cli
mov
repnz
cmp
mov
imul
adcl
jmp
lea
fmull
xor
incl
dec
push
pusha
dec
pop
into
dec
dec
rclb
mov
add
dec
cmpl
dec
out
js
jns
cld
xchg
lods
popa
mov
aad
outsb
leave
incb
mov
pop
fdivrs
add
xchg
stc
loope
mov
jle
subb
fisttps
jg
rcll
xorl
pop
fnstcw
repnz
into
add
xchg
fcmovb
test
gs
cmc
jmp
adc
xlat
dec
cmp
sahf
mov
push
fs
jnp
xchg
adc
or
aas
pop
outsb
xorl
outsb
inc
pop
pop
jae
repnz
aam
xlat
gs
test
or
rol
jle
dec
scas
sbb
add
gs
push
inc
add
add
pop
dec
push
bound
outsl
sti
gs
idiv
notb
imul
add
arpl
idivl
addb
test
call
in
mov
loopne
fisttpll
cmp
lea
push
dec
mov
addb
pop
cld
xchg
in
add
or
ret
js
jae
jae
repz
jp
sbb
mov
add
adc
cmpb
addb
or
push
add
mov
stos
add
mov
in
std
stc
cmpsl
add
rolb
adcl
fs
jl
push
mov
mov
sbb
pusha
jmp
popa
lcall
iret
mov
jl
and
mov
pusha
jg
push
or
sti
or
aas
call
jecxz
ret
loop
cmpsl
add
pusha
cmp
dec
sbbl
div
fildll
lds
testl
sbb
dec
dec
scas
ja
adc
adc
pop
xor
adc
sub
add
xchg
push
jl
pop
dec
add
sbb
outsl
add
push
mov
xchg
adc
sarl
rolb
ret
and
icebp
inc
ret
outsb
or
shlb
iret
pusha
mov
shlb
add
mov
cmp
jno
sbb
sbb
cmp
adc
or
inc
xor
add
mov
flds
add
push
add
aad
push
in
mov
jne
or
cmp
fidivrs
jmp
icebp
add
or
xchg
sub
js
scas
fs
cmpl
sti
notb
and
call
outsl
pop
clc
push
push
mov
jmp
int
pop
inc
add
lahf
addl
movsl
push
sti
hlt
jle
inc
jmp
or
add
jl
dec
lea
fists
cmp
push
fmull
add
jl
inc
loopne
adc
mov
inc
dec
mov
in
push
nop
out
cmpxchg
add
inc
loopne
adc
mov
inc
gs
loopne
fmuls
cmp
test
add
test
or
orl
add
jno
add
in
xchg
inc
aam
push
lea
inc
arpl
lods
sub
push
jmp
xor
mov
mov
xchg
daa
test
cli
and
jp
shl
js
aad
mov
fildl
lea
movsl
aad
lds
pop
and
test
jo
xchg
pop
pop
or
add
call
jecxz
sub
sti
mov
ja
xchg
aad
decl
fnsave
jmp
lret
mov
push
leave
sbb
add
and
in
xchg
in
aas
pop
call
js
pop
or
out
or
xchg
movsb
jnp
add
mov
orl
insl
das
pop
jns
add
push
shrb
lret
ja
bound
adc
orl
sarl
outsl
pop
xchg
mov
mov
add
leave
or
jle
fs
out
lods
outsl
push
dec
adc
lret
in
push
pop
repz
ja
sbb
mov
data16
ficoml
push
shrl
iret
out
jb
inc
xchg
or
push
push
sti
push
add
dec
cwtl
add
pop
bound
push
icebp
dec
into
shll
mov
inc
xlat
jb
mov
inc
leave
pop
adc
add
and
mov
cmp
pop
push
adc
mov
sti
outsb
in
sti
cld
and
inc
jmp
add
xchg
mov
les
mov
push
arpl
fwait
inc
sti
addr16
inc
add
mov
inc
clc
mov
test
mov
mov
jl
bound
pop
lret
pop
aam
xchg
add
lea
ljmp
mull
sub
or
mov
fstl
xor
mov
add
decl
sbb
test
std
push
add
mov
pop
push
pop
pushf
add
xchg
inc
clc
addr16
add
shll
lcall
arpl
and
adc
add
lcall
arpl
pop
mov
adc
cmc
inc
or
add
aad
mov
inc
push
addl
das
push
pusha
xchg
mov
dec
addr16
pushf
cmc
or
call
xlat
mov
mov
fldl
sti
or
dec
dec
dec
std
imul
or
sbb
push
je
or
pusha
inc
je
add
lods
dec
adc
je
call
cmc
adcb
imul
addl
add
sbb
jle
pusha
ljmp
iret
aam
pop
xchg
jae
dec
push
adc
dec
push
or
leave
call
pop
cmp
data16
stos
aad
xchg
mov
pusha
repnz
js
adc
add
xchg
jbe
inc
dec
pop
adc
test
xchg
mov
adc
or
fs
mov
icebp
sbb
xchg
or
mov
pop
out
pop
fwait
push
mov
fsubp
sbb
inc
mov
sti
sahf
adc
push
shrl
mull
cmpsl
fs
testb
loopne
orl
cld
xchg
cld
inc
dec
push
dec
xor
imul
into
dec
sti
test
push
add
ret
mov
fnsave
add
inc
xor
outsl
mov
xor
aam
clc
js
add
in
xchg
add
xlat
add
mov
ljmp
lea
fnstsw
pushl
adc
xor
add
idivl
sub
sub
aad
ret
gs
sub
cli
fistpll
loopne
outsb
sti
ljmp
es
jo
sarb
pop
inc
adc
sub
inc
add
inc
pop
movsl
imul
xor
xchg
mov
mov
adc
out
jmp
jns
mov
jo
add
ljmp
cltd
aad
jl
fnstsw
js
nop
lods
jbe
sub
lods
xor
test
cmp
pop
aam
jle
push
add
lret
call
pop
leave
cli
jns
push
cmpsl
sti
ljmp
sub
out
aad
mov
xchg
stc
xchg
jmp
pop
and
sub
dec
xacquire
add
add
mul
pop
xchg
sti
push
xchg
jg
or
sarl
icebp
outsl
outsb
jae
add
or
sub
out
loopne
or
xchg
jnp
sbb
xchg
push
or
or
jmp
add
sub
jmp
test
pusha
adc
sbb
mov
add
cli
sbb
lods
hlt
or
insl
adc
test
add
testb
fsubrl
aas
jmp
mov
sub
or
pusha
popf
sub
in
or
jmp
fstpl
jmp
sbb
and
rcll
mov
bound
push
pop
inc
xchg
mov
bound
add
pop
dec
les
bound
push
pop
pop
les
jmp
lea
and
mov
pop
in
jae
nop
mov
cmp
repz
adc
rolb
lea
aaa
gs
dec
xor
adc
in
pop
and
idiv
aad
decl
add
pop
loope
add
aad
and
jno
incl
adc
icebp
sbb
dec
stos
jnp
cld
in
add
adc
dec
ja
aad
iret
push
ljmp
pusha
xchg
adc
in
inc
je
call
inc
call
push
xor
ds
mov
out
mov
mov
dec
mov
and
add
and
pop
and
cli
loope
and
add
pop
fiaddl
mov
mov
cmp
test
or
je,pt
mov
xchg
inc
mov
jmp
cld
push
stc
subl
mov
fdivr
iret
fiadds
mov
mov
insl
data16
adc
add
in
aad
mov
dec
pop
iret
adc
adc
or
leave
call
out
pop
pop
mov
push
or
int3
fmulp
inc
test
xchg
add
or
adc
push
insb
adc
push
fs
cmp
scas
xchg
call
add
push
je
stos
cwtl
jb
add
test
add
sti
sbb
push
outsb
les
inc
popa
mov
push
sti
mov
adc
movsb
ljmp
stc
xchg
jmp
xchg
jo
jmp
and
add
jl
mov
add
hlt
pop
fimull
or
dec
jmp
stc
das
adc
or
dec
push
add
mov
xor
bound
out
lea
rorl
ljmp
add
pop
cmp
pop
or
lret
mov
inc
jecxz
push
in
jmp
in
clc
add
fwait
jmp
pop
pop
cmc
iret
push
mov
in
add
add
xchg
adc
mov
xchg
push
incl
add
in
mov
push
call
push
mov
add
adc
and
rcrb
add
imul
xor
test
pop
sti
aas
scas
cmpsb
call
repnz
clc
mov
outsb
cli
shr
fisttpll
fwait
cmp
das
xchg
dec
jbe
sub
cmp
pop
mov
lret
xchg
add
or
xchg
imul
sbb
jnp
push
mov
popf
int3
fcom
or
push
inc
movsl
push
pop
clc
pop
mov
es
inc
in
pop
lock
popa
psubw
push
adc
pop
add
push
add
sti
sub
loope
add
push
paddb
sbb
push
pop
push
push
dec
add
add
jg
or
add
push
push
adc
sti
fsts
addb
out
xchg
popa
call
insl
push
add
bound
add
xor
aas
jmp
lods
sbb
fidivs
push
cli
call
movsl
push
cli
call
jns
cli
call
mov
xchg
inc
mov
jmp
cld
lcall
pop
or
insb
les
mov
inc
clc
jle
add
add
lods
mov
xchg
jl
lea
movsl
test
insb
or
pop
stc
or
add
out
push
adc
lea
cmp
rorb
test
inc
les
add
inc
not
mov
or
add
add
ljmp
push
mov
clc
aas
add
jae
push
pop
add
dec
push
jmp
adc
int3
inc
sti
test
bound
aad
testl
adc
cld
lds
mov
or
push
clc
xor
test
add
mov
fs
bound
xchg
sti
pop
sub
cli
shlb
inc
adc
out
in
popa
sti
push
movsl
adc
adc
insb
int3
xchg
dec
pop
jge
lods
add
pop
fs
shrl
dec
lea
pusha
incl
push
xchg
fs
shl
ljmp
push
and
lcall
jmp
inc
das
inc
int
pushf
js
xchg
push
gs
add
or
shlb
mov
dec
insl
test
sub
out
pop
jecxz
pop
int
cld
movb
ds
sarl
aas
int3
fs
lock
sbb
mov
scas
cltd
call
inc
xor
jmp
or
rolb
push
int3
sbb
sar
jecxz
adc
rcl
ret
cmc
dec
xchg
or
push
mov
inc
ja
add
sub
xchg
sbbl
jbe
jmp
or
mov
push
sti
push
xchg
jmp
xlat
or
imul
pop
test
pop
push
test
mov
adc
adc
fs
push
pop
pop
push
mulb
je
sti
fs
push
testb
lea
inc
in
div
cmp
mov
test
xor
add
mov
mov
in
idivb
adc
mov
jl
jne
hlt
addb
insb
in
xchg
jl
lea
jle
in
jmp
jmp
inc
add
dec
jg
jno
and
sub
mov
cmp
inc
in
add
jecxz
sub
add
jns
lea
mov
adc
setne
shlb
cli
stc
dec
std
dec
pop
es
push
push
fdivrp
cld
mov
mov
sti
out
jmp
sti
lcall
inc
add
lea
outsl
sub
add
aad
pop
sti
insl
pop
or
pop
test
sti
sahf
jg
pop
je
aad
push
cmp
popa
mov
cmp
aad
ret
pop
flds
add
dec
mov
aad
mov
sbb
cmp
out
mov
mov
or
add
rcl
rorb
pop
into
aad
xchg
add
test
scas
dec
mov
testl
or
mov
sub
bound
outsb
or
in
fwait
or
add
popa
cld
dec
dec
decb
ds
imul
sub
outsl
mov
aam
fwait
pusha
or
jmp
or
xchg
jo
push
das
test
or
lea
dec
imul
rcll
jl
in
push
push
cmpl
dec
jle
or
push
enter
xor
into
loop
sti
insl
push
add
int
jae
mov
pop
fs
es
jmp
push
push
sti
fiadds
add
pop
add
test
add
add
or
inc
in
stos
int
xor
sarb
aaa
std
adc
or
lea
cwtl
add
or
push
lods
jmp
dec
push
xor
pop
cmp
push
notl
jl
push
mov
jle
and
jge
and
jge
and
loopne
sbb
shlb
push
push
add
mov
mov
out
mov
add
testb
or
aad
decl
adc
inc
add
aad
ret
in
and
bound
inc
decl
in
ret
outsb
add
fst
and
sbb
aad
addr16
popa
decl
popa
incl
add
aad
and
mov
aad
addr16
gs
call
pusha
movsl
and
pop
adc
push
and
test
popa
lcall
and
jnp
loop
aad
xor
and
sub
testl
dec
loop
cmp
xchg
jnp
or
mov
hlt
arpl
mov
cmp
call
enter
pop
mov
xorb
or
jno
add
mov
or
sbb
test
push
dec
popf
xlat
popa
test
jnp
or
mov
dec
xchg
daa
mov
mov
mov
hlt
push
inc
or
fs
aad
out
es
and
sub
test
dec
or
jo
add
sub
je
jns
mov
dec
je
mov
jl
mov
je
out
add
or
sbb
dec
sti
jmp
xchg
xchg
imul
mov
out
nop
jne
popa
nop
lret
ret
push
dec
je
xor
add
int
inc
or
or
fs
sti
push
add
xchg
add
in
pop
add
adc
je
dec
pusha
pop
sub
rcll
cmp
iret
add
loope
in
subl
jg
push
xchg
adc
repz
lods
in
sbb
dec
sti
xorb
lea
movsl
mov
mov
push
add
lods
or
call
dec
or
add
mov
jle
mov
add
add
add
in
mov
insb
jl
jnp
lret
pop
and
aad
int
add
cmpb
push
push
pop
out
mov
call
in
testl
pop
push
sti
sbb
mov
jne
mov
aad
addr16
xor
xchg
ja
out
xor
lcall
cmc
addr16
xor
ret
and
aad
mov
test
add
push
mov
sti
mov
mov
stos
pop
nop
call
jo
test
movsb
mov
mov
jmp
or
mov
adc
pop
xor
add
stos
xchg
ja
cld
in
shl
xchg
insb
pop
mov
xorl
clc
inc
lret
inc
cmp
std
jl
pop
out
mov
add
add
inc
push
aad
ss
cmp
xchg
push
add
or
fistpl
lods
popa
loope
scas
lea
or
out
aad
jmp
es
shlb
or
imul
add
mov
pusha
xchg
ljmp
std
mov
pop
and
or
and
rorl
add
push
or
out
add
xchg
test
inc
cs
lods
inc
xchg
dec
lds
std
jnp
or
inc
sti
jmp
inc
mov
mov
out
push
and
xchg
pop
or
insb
push
adc
bound
punpckldq
xchg
push
add
adc
ret
ja
test
add
add
push
or
add
ret
mov
cmp
inc
and
xchg
or
mov
dec
push
inc
mov
test
mov
je
icebp
out
mov
testb
xchg
or
lcall
add
ja
pop
or
push
lea
dec
mov
dec
lcall
mov
jne
je
mov
add
fcoml
sbb
clc
out
scas
fbld
loope
mov
xchg
xchg
aad
jmp
fidivrl
sbb
sub
xchg
mov
add
aad
inc
jne
cmpsl
iret
and
pop
mov
fsubrs
xor
xlat
pusha
ficomps
cmp
call
pop
cmp
aad
xchg
xchg
pop
push
and
xchg
je
add
aad
incl
dec
daa
call
pop
mov
bound
cmpsl
ljmp
push
pop
sahf
jmp
adc
lea
aad
out
xor
aad
mov
mov
mov
or
fmulp
notl
sti
xor
fildl
aad
insl
pop
int
push
or
cld
pop
inc
jmp
rolb
mov
faddl
aad
dec
rorl
or
pusha
jle
adc
jmp
add
inc
sbb
push
inc
out
loopne
adc
imul
std
lcall
inc
fwait
jge
add
ret
add
dec
jp
dec
mov
pop
bound
xor
sub
aas
je
mov
imul
sbb
sti
push
and
add
int
incb
ds
add
int3
cli
out
int
in
dec
adc
inc
or
icebp
pop
frstor
in
inc
sar
sbb
add
cmpsb
mov
inc
int
mov
cmp
fildl
add
dec
fmull
push
mov
mov
in
sub
or
lret
mov
add
and
addb
xchg
mov
hlt
jg
mov
outsb
dec
movl
inc
sti
ljmp
inc
lock
or
adc
in
add
testl
sbb
call
cmovge
test
sbb
orl
cmc
sar
xor
pop
lea
push
sti
add
mov
mov
scas
jle
xor
ret
fcoml
jb
stos
shl
std
jmp
add
mov
aad
push
adc
out
fdiv
insl
lcall
push
jge
in
push
incl
aad
xlat
cli
aad
call
lods
add
sub
scas
out
rcll
lods
add
adc
aad
dec
sti
dec
fldl
cli
jle
rclb
xchg
add
or
mov
into
aas
xlat
xor
ja
jmp
adc
roll
sti
push
add
das
inc
add
in
aad
mov
cli
or
lock
test
sub
push
aam
ror
call
jl
and
rolb
icebp
ds
push
insl
lahf
jmp
jge
add
or
inc
ficoml
push
add
xor
aad
je
mov
mov
movsb
push
iret
je
arpl
and
sbb
xchg
jle,pt
aad
jne
dec
push
xor
or
jmp
adc
add
mov
push
push
add
repz
jno
or
jmp
add
mov
pusha
adc
add
jo
cs
pusha
adc
mov
xchg
xor
dec
and
add
insb
fsts
or
sti
test
test
add
je
stc
int
lea
icebp
sti
call
mov
jbe
sbb
movsl
testb
testl
add
cmp
sti
call
jns
inc
adc
ja
jl
mov
test
incl
or
ret
inc
xchg
into
add
cmpl
mov
js
test
int3
idiv
dec
mov
pop
add
inc
clc
jg
divb
push
mov
nop
jb
mov
push
sti
ljmp
arpl
xor
scas
dec
sti
add
fisubrl
push
mov
aad
jbe
test
or
cld
xchg
call
lods
inc
jne
xchg
dec
jne
movsl
enter
xorb
dec
arpl
xor
push
ljmp
cmp
mov
out
sub
adc
mov
cwtl
jno
rorb
add
or
fdiv
mov
jp
push
sbb
mov
xchg
hlt
daa
lea
mov
xchg
fs
enter
mov
cmp
adc
add
or
clc
add
test
xchg
cmp
dec
ds
dec
add
loopne
fadd
xor
push
stos
mov
jle
mov
sti
out
daa
call
adc
pop
jb
jge
fistl
or
jmp
xor
mov
out
and
cli
xchg
jo
push
mov
push
sub
dec
pop
push
cli
jg
jnp
pop
aas
adcl
lea
or
faddl
jp
inc
sti
insl
cltd
mov
ficoml
mov
sti
add
jns
cmp
pop
ljmp
xchg
pushl
int3
idiv
jns
sti
decb
int
push
imul
dec
or
cmp
ret
dec
inc
add
imul
jecxz
xor
dec
sub
add
jmp
je
scas
js
sub
sbb
test
add
and
xlat
std
jnp
pop
hlt
pop
mov
loop
das
int
pop
add
jne
in
push
aaa
ljmp
pushf
imull
lods
shl
xchg
dec
adc
push
outsl
clc
addr16
ljmp
inc
xor
jmp
or
jl
in
inc
or
add
add
and
sub
jl
lea
jl
jns
nop
lock
scas
inc
mov
lcall
ret
sbb
add
aad
pop
sbb
decl
or
add
xchg
cmp
mov
jmp
add
xchg
add
jmp
adc
jno
add
or
fs
or
jl
cmp
ds
mov
mov
dec
dec
lea
ret
mov
test
add
ficoml
dec
and
aaa
pop
mov
aad
mov
push
call
push
outsb
int
mov
add
fisttpl
mov
sti
push
xchg
arpl
addb
xor
out
mov
mov
jmp
inc
xchg
inc
xchg
sbb
sti
rcl
lods
call
and
or
or
jmp
sub
mov
pop
and
mov
sub
push
bound
call
ss
jo
jg,pt
or
jl
sbb
add
out
call
mov
mov
jmp
rorb
aad
jmp
jge
inc
rcl
test
cmp
rolb
hlt
mov
push
or
jbe
push
adc
xchg
pop
mov
mov
fildl
cltd
fldl
fadds
divb
add
add
stc
aas
cmc
adc
xor
mov
stc
clc
enter
je
xor
divl
inc
insl
xchg
jb
insl
testl
push
jle
ret
nop
ljmp
popf
xor
orl
dec
sti
and
out
aas
aad
mov
shll
cli
pop
inc
jne
dec
xchg
in
cld
out
xchg
fadd
aad
pushl
lods
stc
sub
mov
pop
xchg
pop
mov
add
cmp
addr16
loop
movsl
inc
test
pop
outsb
inc
dec
shl
les
es
and
inc
jo
xor
mov
adcb
push
popf
lds
or
js
add
and
pop
xor
inc
into
lea
aad
repz
fidivrl
sub
daa
gs
subb
adc
mov
fcomp
sub
or
lds
shll
jnp
lods
ljmp
and
or
mov
push
imul
add
adc
std
call
sub
lea
adc
dec
jb
out
add
int
leave
push
xor
out
lcall
out
or
cltd
cld
mov
cld
push
add
and
dec
gs
and
and
rorl
add
and
pop
jle
add
add
pop
or
jp
jl
jae
sarb
movsl
insl
push
add
nop
adc
lss
xor
mov
and
mov
and
pushl
mov
sub
xorl
jno
pop
mov
in
inc
loopne
mov
push
mov
add
jge
xor
jno
xor
mov
and
xor
adc
mov
aas
fisttpl
out
and
je
xchg
pop
jnp
aam
cmp
push
in
or
call
or
call
mov
js
icebp
addb
jle
sub
inc
xchg
add
cmp
sti
pop
in
xor
addl
adc
loop
sarl
and
sti
sarb
ss
lods
add
in
stc
adc
out
and
pause
adc
fmuls
aad
jle
push
lods
or
push
push
push
mov
or
rorb
or
add
dec
xor
add
add
enter
add
or
notb
jnp
xchg
in
or
jge
push
or
inc
mov
sbb
mov
mov
add
popa
fldt
ljmp
jmp
xchg
lock
sbb
or
std
mov
xchg
jp
cli
std
jb
xchg
je
insl
js
ljmp
stc
dec
pop
inc
adc
push
mov
jb
pop
push
bound
test
xorb
cmpsl
fidivl
inc
int
mov
clc
inc
int
add
xchg
xchg
xor
testb
add
and
pusha
scas
and
mov
jl
add
inc
jecxz
mov
negb
mov
pop
aaa
out
ret
test
push
mov
in
inc
mov
jle
enter
jl
aaa
cmpb
std
mov
xor
dec
push
mov
or
sub
adc
cmp
mov
ljmp
adc
cmp
cmp
sub
mov
sar
enter
leave
jae
in
notb
jns
je
mov
add
leave
movsl
cmp
aam
shl
pusha
sahf
ds
lret
and
pop
inc
inc
push
fs
cltd
sub
jge
or
aad
ja
aad
jmp
inc
mov
outsb
sub
jge
pop
mov
fistps
loopne
xchg
sub
xlat
and
dec
stos
xchg
lods
pop
push
sbb
cli
loopne
push
inc
aad
inc
or
add
mov
sti
loopne
dec
aas
aad
adc
mov
or
aam
jmp
add
or
or
add
or
or
add
xchg
add
aas
scas
jno
add
or
nop
and
js
or
sub
mov
add
mov
add
addr16
jle
jg
add
and
test
or
jno
add
or
push
or
nop
cwtl
sub
arpl
test
cli
sbb
xchg
fimuls
add
mov
inc
roll
jge
sub
out
sbb
or
jmp
sti
out
repz
jmp
xchg
sub
add
sti
sbb
sti
xchg
insl
sar
call
mov
or
jmp
loop
add
dec
lods
jecxz
lds
xor
das
push
bound
sub
jo
xor
jecxz
xorl
add
pop
enter
push
add
ja
xlat
push
cltd
inc
iret
push
imul
out
stos
add
add
jp
mov
cmp
imul
add
mov
push
mov
in
addb
rclb
cmp
or
in
idiv
jl
outsb
add
jnp
mov
cmpb
incl
in
je
cmpsl
ret
divb
mov
add
and
dec
sub
lahf
inc
adc
add
mov
out
cmpsl
cmpsb
stc
repnz
je,pt
dec
ret
ja
dec
xchg
mov
add
sti
and
fidivrs
ret
sbb
add
xor
push
jae
test
cmp
mov
cmp
call
mov
repz
test
push
jmp
mov
dec
dec
add
xor
aad
jmp
add
imul
sub
push
sub
fdivrl
inc
adcb
das
aam
jmp
add
scas
pop
push
bound
xor
or
cwtl
xchg
mov
pop
into
jo
and
add
xchg
sub
jge
fiaddl
aad
outsl
rcrl
jge
or
lea
cwtl
push
xchg
and
jmp
jl
sub
add
add
xchg
and
sub
scas
outsl
roll
outsl
aad
ret
mov
or
mov
mov
stos
mov
or
adc
mov
pop
into
cltd
inc
cmpsb
mov
inc
dec
jno
mov
and
popa
mov
pusha
xchg
imul
push
int
jno
movsl
call
inc
push
cs
stos
mov
in
bound
jae
and
or
cmovs
test
jmp
fimuls
jmp
enter
mov
add
dec
scas
mov
sbb
in
add
mov
mov
pop
mov
movsl
mov
jb
add
dec
mov
jne
incl
add
xchg
roll
in
push
aas
xchg
mov
dec
or
mov
add
xchg
inc
movb
add
inc
inc
movsl
jo
insb
or
test
or
mov
aad
xchg
js
pop
aad
mov
jnp
xor
popa
pop
insl
push
mov
add
mov
orl
and
inc
jge
xor
fabs
xor
popa
pop
cmc
pop
mov
jae
mov
add
aam
inc
mov
xor
sarl
xor
popa
dec
out
and
sti
test
enter
xchg
xor
jnp
jl
add
add
xchg
lods
sub
aad
outsl
mov
cmp
jno
mov
jmp
jnp
or
add
movsb
xor
aad
outsl
mov
repnz
mov
or
popf
dec
iret
sarb
call
cmp
cmp
popa
lock
stos
and
lea
and
movb
pop
into
call
add
xchg
and
cmp
or
xchg
or
dec
into
add
push
sti
jmpw
mov
or
adc
mov
popa
into
or
call
jle
mov
movsb
les
mov
or
adc
or
inc
add
pop
int
subl
xchg
inc
shrl
out
jmp
mov
or
xchg
pushl
add
xchg
inc
push
adc
lock
data16
push
sbb
xchg
xchg
dec
and
cmp
cmp
mov
movsb
rolb
sub
pop
mov
mov
movsw
push
and
bound
out
add
add
test
mov
push
pop
mov
mov
gs
sub
adc
xchg
add
ds
sbb
mov
mov
xchg
adc
outsb
aad
addb
xchg
imul
mov
dec
xchg
mov
scas
add
aad
popf
mov
xor
popa
dec
jne
mov
sbb
jnp
mov
add
xchg
xchg
enter
xor
sahf
loop
jmp
in
int
insb
inc
pushl
stos
mov
mov
fisubl
sbb
inc
jl
aas
jmp
fiaddl
mov
aad
outsl
mov
add
aad
or
fisttps
jmp
jnp
adc
movsb
mov
aad
outsl
mov
sub
ret
mov
or
popf
pop
movl
test
aad
pop
mov
aad
dec
jge
scas
mov
test
loope
jmp
mov
nop
add
add
rorl
bound
pushf
popa
jo
fcmovb
and
push
lods
shlb
push
psubb
jno
int3
orl
mov
mov
adc
imul
mov
fstps
aas
out
sarb
mov
mov
and
bound
and
push
add
push
sbb
out
push
lods
push
stos
shrb
add
test
cmpsl
addb
jl
add
inc
dec
out
scas
sbb
leave
jg
sub
out
addl
push
lret
mov
mov
add
cli
pop
into
out
add
inc
and
sbb
push
push
adc
mov
jmp
fdiv
pop
inc
push
and
enter
add
test
mov
or
push
dec
mov
cld
call
mov
sub
mov
cmc
js
push
test
pop
add
stos
adc
je
and
mov
xor
push
pop
xor
mov
idivl
add
jns
jne
ja
fadd
ja
mov
jns
call
stos
add
adc
ja
add
aad
add
lods
cmp
inc
cmp
rorl
orl
mov
xor
mov
xor
out
jp
ljmp
xor
mov
sti
pop
out
in
xor
pop
or
add
xchg
imul
inc
add
nop
and
push
adc
mov
mov
add
add
sbb
pop
xchg
mov
lds
js
push
hlt
xor
mov
add
nop
lods
das
pop
adc
mov
cmp
pop
dec
mov
push
xchg
inc
sbb
mov
add
add
cmp
or
add
xchg
ljmp
or
je
sub
and
dec
add
push
xchg
cmp
test
leave
push
jns
repnz
ret
je
cmpb
mov
sti
jb
lea
xchg
xchg
push
rorl
add
or
mov
jg
and
pusha
or
out
mov
divl
sub
and
loopne
push
test
or
rclb
add
shlb
push
sub
cmpb
imul
ljmp
cwtl
mov
xchg
outsl
std
ljmp
add
xchg
ljmp
add
adcl
out
mov
std
mov
jmp
add
popa
repz
mov
decl
push
jmp
les
jle
mov
fwait
popa
out
mov
and
shlb
inc
add
je
in
jne
aad
sub
or
jne
clc
lea
loop
shl
dec
bound
sti
sarb
sub
sti
inc
dec
sbb
in
sub
or
das
sar
and
xor
enter
push
dec
pushf
jle
mov
incl
add
repz
int
ret
xor
cli
call
scas
inc
or
jge
cli
cmp
imul
dec
call
mov
rcl
jmp
add
mov
aad
add
push
popa
daa
add
or
xor
jmp
sub
subl
and
mov
and
add
dec
iret
les
andl
pop
stos
mov
add
push
in
add
or
sub
sub
jge
pop
sbb
divb
call
jp
or
cmpb
aad
mov
sbb
rcrl
add
push
sbb
lods
adc
add
dec
add
sub
imul
add
and
xchg
jmp
add
jne
sti
into
rolb
sti
cmp
and
pop
mov
inc
xchg
mov
or
sbb
in
or
push
adc
xor
mov
rorl
repnz
push
jl
sti
pop
loope
jmp
out
and
push
adc
add
idiv
test
xor
add
jp
loopne
out
fmull
pop
test
adc
dec
lock
aas
or
xchg
dec
or
xlat
imul
xlat
push
sbb
mov
imul
sub
and
cmp
dec
sti
out
hlt
lcall
mov
jp
add
inc
or
divl
aad
jnp
cmp
rolb
push
sahf
cmp
popa
mov
mov
lret
inc
xlat
pop
idivb
and
inc
int
mov
push
outsb
and
adc
inc
push
pushf
lahf
out
outsb
and
pop
loope
insl
mov
and
xchg
aaa
jo
xor
sub
and
clc
mov
and
add
jge
stos
add
cli
jb
inc
call
add
aad
cld
push
mov
into
cs
or
push
leave
iret
jmp
cmp
adc
fldenv
sub
scas
sub
loop
sbb
xchg
stc
sbb
out
test
fdivs
aaa
and
insl
or
add
xor
add
add
jnp
mov
jle
sahf
cmp
lea
cmc
test
mov
adc
insb
xchg
adc
ljmp
test
or
push
sub
andb
push
out
lods
inc
lcall
popf
lock
in
mov
gs
ja
adc
pop
cmp
leave
adc
xchg
push
sbb
ljmp
jge
bound
adc
adc
xlat
xorb
add
incl
mov
jg
leave
les
mov
adc
arpl
sahf
js
pextrw
dec
adc
mov
inc
jmp
les
mov
cmp
jl
cmp
adc
cmp
sti
test
pop
cmp
add
jno
dec
lea
dec
jmp
mov
in
adc
sub
sti
test
divb
in
je
and
adc
cld
inc
sti
test
notb
das
push
idiv
not
jae
adcl
jle
xchg
push
or
dec
imul
jle
mov
mov
in
adc
loopne
das
mov
bound
gs
cwtl
jnp
and
adc
push
loope
cmp
sub
outsb
and
data16
push
sbb
mov
xor
sbb
jge
dec
xchg
movq
and
or
push
xchg
xchg
add
ret
push
adc
push
add
fnstsw
add
js
add
in
xor
sti
and
or
add
lock
mov
push
ror
call
aam
int3
je
adc
bound
test
mov
into
add
pushf
lock
mov
mov
jle
sbb
mov
sbb
xor
jmp
rcrb
add
add
ljmp
sbb
lret
jbe
adc
int
int3
sarl
or
scas
rclb
xchg
jle
xchg
cli
or
xchg
es
adc
into
and
xchg
mov
clc
fs
or
sbbl
add
adc
loope
cmp
push
aad
stc
push
and
mov
sub
adc
mov
add
call
jb
xchg
xchg
or
std
out
mov
xchg
jne
mov
or
pop
rcll
mov
xlat
idivb
add
dec
test
mov
pop
add
pop
add
adc
adc
add
idiv
clc
lds
jno
add
adc
adc
add
sub
add
in
movl
andl
dec
lea
call
add
dec
or
mov
cmp
sub
adc
call
hlt
xor
pop
adc
outsl
cmpb
insb
or
call
and
adc
fwait
into
sbb
mov
test
add
and
xchg
sbb
lods
rorl
xchg
es
and
mov
and
push
cmpsb
push
push
jne
scas
notl
shll
and
jae
dec
cmpsb
jae
jne
xlat
imul
jmp
sub
je
out
divl
pusha
decl
adc
mov
sti
lret
jne
jbe
adc
add
mov
cmp
push
dec
pop
or
paddusb
call
bsf
sbb
fwait
and
sbb
pop
hlt
xchg
clc
lcall
mov
cmpsb
mov
popa
idivl
sti
test
push
xbegin
add
xorb
aam
jmp
mov
add
add
add
subb
aad
jmp
div
idiv
test
mov
aas
jmp
popa
fdivrl
call
jge
jae
mov
jae
xchg
or
pop
std
xchg
or
or
sub
pop
mov
fstl
xchg
imul
sti
push
or
mov
add
xlat
or
fidivrs
adc
or
mov
orb
imull
add
or
adc
adc
mov
dec
cmc
push
or
or
or
data16
insb
repz
xorb
mov
sub
add
add
out
leave
cmc
add
loopne
lsl
xorl
sbb
adc
rclb
dec
add
shlb
dec
inc
cmovae
fbld
mov
loopne
es
inc
outsl
push
je
add
js
lock
sbb
call
shl
std
mov
mov
push
xchg
inc
in
push
sbb
push
loope
dec
das
adc
jne
sbb
mov
loopne
test
sub
test
push
add
xchg
into
pop
sti
loopne
idivl
aad
movsl
jnp
and
cmp
jmp
and
lcall
xchg
cmp
out
mov
data16
xchg
sti
xor
stos
adc
jmp
mov
cwtl
adc
mov
stos
dec
shlb
jns
shrb
ljmp
jmp
inc
dec
test
test
aad
sub
mov
xlat
mov
and
pop
jmp
mov
out
aad
iret
inc
sbb
addb
movsb
data16
jmp
and
or
add
imull
add
adc
rcl
bound
xchg
jle
lods
aad
jmp
ficomps
push
mov
jmp
adc
inc
aam
add
arpl
push
or
sub
addr16
insl
or
jmp
or
bound
xchg
mov
or
jo
outsb
add
xchg
cmpl
push
enter
nop
jmp
test
jb
sbb
add
add
or
add
je
push
add
jne
cmp
cli
add
notl
ja
xor
dec
out
mov
std
mov
mov
mov
adc
dec
push
push
push
jmp
jne
and
cli
test
addl
cli
push
clc
push
add
jl
jl
js
test
insl
or
mov
add
sahf
jl
scas
pop
pop
adc
adc
or
mov
mov
and
ret
lcall
sbb
jne
aad
sub
inc
jl
sti
add
mov
push
sbb
call
rcrb
es
ret
or
mov
flds
adc
add
lock
pop
call
jae
jecxz
push
add
lock
jle
mov
sbb
repnz
push
call
and
cmp
icebp
inc
xlat
sahf
aad
jae
mov
mov
call
or
lahf
sub
xchg
stos
or
iret
add
xchg
sbb
lods
aad
repnz
inc
mov
add
cwtl
and
fiadds
pushf
jecxz
icebp
xchg
sbb
push
les
jmp
lods
scas
push
jae
mov
and
aad
jmp
lods
mov
mov
add
and
jmp
push
xchg
pop
adc
aad
jmp
xor
and
jmp
xchg
or
lods
mov
add
icebp
mov
add
rorl
add
mov
or
insl
mov
add
and
lret
push
callw
adc
xor
ret
add
xor
cmpsl
call
int
sti
jb
adc
sub
jge
xchg
jbe
call
iret
jge
out
push
sti
scas
int
idiv
cmp
jle
push
sbb
add
push
or
sti
add
pushf
add
pop
test
and
jmp
mov
add
dec
jnp
cmp
xor
lcall
and
cmp
inc
lock
or
add
mull
mov
adc
xchg
sbb
add
pop
mov
xor
or
adc
cmp
shll
mov
cmp
out
aad
adc
rcl
jne
sbb
sti
mov
jg
push
scas
push
dec
bound
cli
pop
fisttpll
int3
lcall
add
test
addr16
or
sub
fisubs
adc
jmp
cli
jae
add
xchg
add
shlb
mov
icebp
decl
aaa
lcall
adc
xchg
mov
shl
or
hlt
push
push
in
mov
or
add
jmp
jg
pop
jmp
cmpb
outsl
call
incl
add
mov
sub
gs
outsl
call
ret
inc
adc
sub
xchg
icebp
adc
cmp
lock
outsl
call
hlt
push
adc
push
orl
adc
sarl
cmp
scas
jmp
jne
call
jb
mov
add
pusha
inc
jle
and
rol
push
sti
hlt
scas
adc
jg
add
push
jbe
adc
shr
fstps
sbb
jae
outsl
or
in
push
jl
mov
push
push
std
xchg
add
loop
mull
sub
out
leave
mov
pop
mov
jge
bound
jmpw
adc
add
or
call
idiv
cmp
repnz
jmp
xchg
pop
hlt
mov
push
adc
test
test
xchg
add
imul
pop
cld
mov
or
mov
adc
je
push
or
add
sub
in
idiv
jecxz
testl
lods
xchg
lods
mov
incl
add
cli
test
test
rclb
leave
or
xchg
not
xor
cmp
shrl
out
imul
out
sub
jp
fxch
mov
bound
sti
idiv
bnd
fnsave
out
aad
add
fisubl
aad
xchg
add
repnz
out
cmp
pop
add
rcrl
fs
lock
std
aam
cli
inc
or
jne
insb
inc
call
push
or
jne
mov
jb
add
or
jnp
call
cld
stos
jne
mov
jb
add
or
cld
push
call
enter
cwtl
ds
stos
sbb
jp
stos
jl
add
movsl
call
jno
add
add
loope
xchg
mov
aad
in
add
loop
stos
pop
and
movl
sbb
adc
xchg
rcrl
fwait
dec
or
jmp
or
pop
loope
inc
xchg
inc
add
add
out
lret
add
mov
or
xor
pop
add
out
add
lods
dec
adc
popf
leave
dec
test
sbb
mov
pushw
jmp
or
cld
rolb
adc
movb
add
hlt
in
dec
ds
jne
cli
ds
leave
jae
popa
or
sbb
decb
pop
push
push
add
adc
jmp
cmpsl
dec
mov
inc
lods
and
add
into
loop
push
sbb
test
add
incb
adc
add
add
mov
cli
mov
orb
dec
inc
ret
sub
push
adc
and
mov
or
aas
or
ficompl
test
xor
lahf
mov
cmp
decb
mov
jge
mov
inc
incl
add
add
aad
sarl
mov
repz
aas
mov
or
sbb
lret
or
pop
hlt
cs
jne
adc
push
push
enter
das
add
rcrb
cmpsl
mov
lods
loope
decl
aad
setne
in
push
stos
inc
xor
adc
add
mov
int
repnz
adc
sti
sbb
loopne
clc
ret
mov
repz
inc
jmp
add
je
mov
aaa
test
sub
cmpb
outsb
sti
cmc
inc
cmovp
inc
sti
add
clc
adc
sub
lret
lock
jmp
or
pop
xchg
sbb
add
lret
pop
adc
outsb
add
movsl
add
aam
pop
mov
fs
lret
adc
aad
cli
subl
adc
das
xor
adc
icebp
inc
fdivr
push
mov
adc
jecxz
lods
std
xchg
cli
jge
insl
push
add
jnp
add
push
divl
add
lret
add
fwait
xchg
cli
xor
loop
jg
incb
popa
add
add
or
jmp
mov
iret
sub
cmpb
or
jo
adc
add
dec
sbb
xchg
mov
push
sbb
or
cli
mov
mov
testl
sub
add
mov
mov
mov
adc
mov
testl
nop
mov
cmc
jne
push
jne
arpl
dec
ljmp
dec
adc
cmp
clc
push
inc
mov
jmp
test
adc
mov
jne
aad
or
inc
xchg
adc
mov
cli
push
sub
aas
add
aad
pop
push
mov
jnp
pop
sbb
ja
icebp
cli
mov
lahf
jnp
or
push
xchg
xor
jp
adc
loopne
and
loope
jae
insl
pop
jp
imul
mov
mov
call
sarl
mov
int3
sbb
sbb
sbb
adc
movsb
sti
lcall
add
add
lret
roll
push
clc
rcll
out
adc
jle
mov
or
mov
xorl
pushf
loope
ljmp
mov
ljmp
pop
shr
mov
rcr
and
dec
mov
ror
icebp
xchg
stc
call
cli
test
pop
rorb
xchg
add
iret
mov
cmp
loope
inc
stos
cmp
sub
int3
jo
cmpsl
es
mov
mov
ror
fcomip
add
jg
roll
lods
add
push
repz
push
or
jmp
inc
inc
insb
jo
xchg
xchg
sub
fiadds
or
into
addb
lods
jb
cs
and
add
sbb
add
out
add
or
mov
ja
or
mov
shll
xchg
xchg
es
out
mov
icebp
pop
addl
mov
mov
add
in
jle
cwtl
mov
xchg
add
or
mov
dec
notl
jno
pop
ljmp
or
mov
dec
add
add
sbb
push
bnd
lods
or
addl
add
out
jmp
pop
clc
adc
push
psrad
decl
loop
cld
rcrb
sarl
jmp
mov
jmp
jmp
orl
mov
jnp
pop
std
push
or
add
add
outsb
popa
sbb
loop
rolb
popa
out
sbb
dec
or
push
arpl
call
filds
call
sti
push
inc
shl
push
push
fsubs
pop
or
and
fisubs
mov
push
mov
push
gs
jg
aad
incb
shl
clc
push
cmp
lcall
adc
nop
or
add
adc
loopne
add
pusha
xor
mov
hlt
sub
push
dec
aad
nop
in
mov
cwtl
sbb
pop
inc
aad
jmp
rol
stos
fildl
shll
sbb
adc
gs
mov
sbb
inc
add
pop
mov
into
mov
loopne
sub
test
stc
add
push
pop
in
adcb
call
or
in
aaa
das
adc
bound
addb
adc
push
adc
mov
xchg
xrelease
inc
and
adc
pop
sti
mov
ret
xor
nop
jns
mov
sbb
mov
add
testb
sub
leave
lods
cmpsb
jne
jb
add
jle
push
or
pop
sti
or
jmp
sub
aaa
daa
jns
scas
add
aas
add
inc
add
or
insl
or
xor
add
xchg
push
xor
add
jnp
das
mov
cld
adcl
add
es
jne
jo
decl
ficoms
or
or
mov
loop
add
add
imul
add
cli
incl
xchg
add
and
roll
pop
mov
icebp
add
loopne
repnz
pushl
add
clc
call
loop
cmp
aam
jle
mov
jle
mov
or
add
daa
push
push
lock
in
dec
sbb
testl
xor
add
bsf
inc
mov
cmpsb
ljmp
and
sbb
movl
pop
add
adc
jbe
movsl
jmp
daa
and
mov
jg
in
xchg
pop
add
xchg
add
aad
inc
mov
jbe
adc
fnstcw
aam
or
lret
pop
lcall
repnz
in
cli
or
inc
pop
inc
popf
jns
xor
sub
mov
dec
add
and
pop
inc
jns
cltd
adc
je
in
out
pop
xchg
frstor
loopne
mov
pop
pop
es
lds
mov
mov
or
pop
push
lret
inc
lock
push
cmp
call
sub
pop
sub
xchg
jmp
daa
sub
cli
xlat
repnz
das
mov
adc
inc
or
call
scas
popf
cmc
add
or
jle
imul
cmpsl
out
mov
pop
loop
mov
or
adc
jl
cmovns
call
xchg
add
push
inc
or
mov
xchg
add
flds
cmc
dec
sbb
add
push
or
pop
inc
push
testl
cld
or
add
mov
jmp
mov
xchg
cli
ljmp
test
flds
pop
test
add
mov
mov
xchg
rorl
add
divb
or
mov
add
push
cmpl
inc
adc
call
inc
movsb
loopne
sti
jmp
pop
mov
or
add
or
negl
mov
cli
or
mov
xchg
pushl
int3
cli
loopne
pushl
ret
cmc
pop
mov
xor
leave
std
cmpb
movsb
decl
push
push
and
aad
mov
lret
mov
pop
fisubs
push
je
mov
xchg
bound
rcrb
sbb
loop
inc
cmc
loope
test
call
insb
dec
add
je
xchg
or
or
lret
and
bound
xchg
or
in
push
std
jg
pop
inc
mov
pop
jmp
push
pop
push
lret
add
subb
int
cld
stc
aas
in
gs
aad
insb
mov
mov
test
aad
les
or
jns
mov
into
jmp
das
mov
gs
out
je
mov
jne
inc
mov
test
daa
aad
ljmp
inc
daa
mov
icebp
jg
or
add
mov
add
aam
fcomip
iret
enter
xor
stc
inc
or
incb
xchg
in
out
push
lock
testb
cmpsl
add
test
shll
inc
mov
or
sarb
outsl
mov
push
js
and
sub
jmp
or
lahf
xchg
or
cli
bound
decb
incl
add
addb
mov
cmc
jmp
pop
or
in
xorl
mov
imul
sarl
sub
sti
lods
inc
outsb
cmc
pop
orb
cmp
or
jg
nop
xor
or
inc
xchg
mov
adc
movsl
inc
test
sub
inc
mov
xchg
add
add
cmc
incl
add
andb
in
cld
add
adc
aad
inc
add
or
call
pop
std
sbb
fisttpl
stc
stos
xor
lock
mov
inc
and
out
mov
out
sbb
push
sti
call
out
jno
insl
fwait
idiv
pop
je
add
or
cmp
inc
test
or
and
add
aad
mov
aam
mov
xlat
mov
pop
into
mov
notl
push
je
jl
xchg
insb
add
nop
fiadds
cmp
or
xchg
add
add
lahf
test
add
inc
cmp
mov
mov
add
xchg
mov
or
orb
and
repz
lea
jg
arpl
mov
add
pop
dec
or
xchg
sub
lahf
sub
shr
rorb
adc
sub
dec
add
sbb
fiaddl
pop
ds
insl
aad
sbb
push
pop
icebp
push
push
pop
fsqrt
mov
fsubr
loop
adc
test
mov
std
call
fiadds
daa
mov
pop
sub
loope
out
sbb
adc
add
loope
push
dec
dec
and
push
cmp
pop
sbb
cmpsb
in
loope
rclb
in
cli
je
loop
icebp
outsb
int
ficomps
mov
jmp
fcoms
mov
ror
jecxz
mov
and
sbb
pop
in
bound
adc
and
adc
loope
sbb
add
out
orl
add
jecxz
sbb
cmp
mov
jecxz
adc
pop
or
jno
call
test
adc
jmp
xor
scas
inc
insl
adc
or
stc
idiv
and
bnd
jnp
add
mov
xadd
inc
adc
roll
pop
adc
xor
aad
hlt
mov
adc
jle
out
jp
into
lock
jg
enter
or
push
cmp
push
jge
add
jb
push
lret
push
aad
jle
or
jp
mov
movsb
push
push
cli
popa
or
add
aad
mov
repz
fnstenv
filds
fisubrs
adcl
pop
inc
hlt
dec
jne
call
cmp
add
push
pop
ret
fwait
or
call
bnd
pop
xor
push
adc
or
push
js
out
pop
push
fsts
jo
push
push
outsb
inc
jmp
dec
fnstcw
mov
add
fs
add
mov
outsl
cld
and
std
pop
adc
mov
jmp
ret
mov
jno
in
adc
add
dec
jmp
js
xchg
stos
adc
add
repnz
out
dec
in
inc
loope
or
push
rorl
mov
sbb
fimull
jg
jns
mov
test
dec
dec
and
push
sub
lds
pop
sbb
and
dec
mov
mov
je
add
ret
pop
or
fdivrp
ss
mov
add
push
mov
cmc
jno
adc
mov
add
sbb
add
push
imul
pushf
sbb
mov
pop
add
call
gs
sbb
push
bound
int
lea
mov
incl
add
add
call
addl
enter
jp
lret
push
add
popf
and
ret
mov
pop
mov
jb
mov
xor
or
inc
aad
repz
pop
push
push
hlt
push
add
outsl
and
cmp
jecxz
aad
cmp
xlat
cmp
xchg
or
jne
jae
inc
add
dec
and
xchg
js
push
or
mov
sbb
or
push
or
ss
movsb
add
push
imul
jbe
inc
add
repz
push
mov
pop
adc
bnd
add
mov
aaa
lods
jg
xchg
fstpt
add
aaa
jae
adc
repnz
ds
sbb
or
hlt
push
lret
push
stc
call
cmp
or
push
or
mov
and
sub
xchg
or
or
aad
fisttpll
rclb
or
or
mov
sbb
push
cmp
addr16
in
jmp
hlt
pop
dec
int
mov
insl
add
add
adc
insb
ret
push
daa
sti
cli
jle
and
int3
adc
or
push
add
movsl
leave
xchg
or
rclb
dec
sbb
jns
fnstcw
xchg
add
fadds
xor
rorb
and
sbb
push
push
leave
nop
das
loop
jle
inc
push
add
pop
loope
add
lea
xlat
fwait
ds
cmp
imulb
sub
push
pop
mov
add
pop
loope
adc
cmp
xchg
push
add
xor
ljmp
jmp
or
add
inc
xor
bound
cli
rclb
loopne
pop
push
inc
mov
sbb
cmp
xchg
ret
sub
test
ds
mov
loopne
fdiv
jmp
addr16
sbb
loopne
xor
scas
bound
mov
loop
test
cmc
test
or
jmp
pop
inc
sbb
popf
xor
jae
orb
dec
sub
aad
xor
jb
out
test
repnz
mov
xor
out
lock
xor
loopne
add
lock
insb
call
pop
int
mov
sbb
ja
test
movsl
in
cli
cli
or
push
cld
scas
in
cli
ljmp
mov
imul
push
cmp
jecxz
ret
pop
sub
stos
or
jnp
loope
clc
add
out
incl
jl
push
fstp
push
icebp
pop
dec
add
add
pop
inc
test
or
mov
sub
insl
jbe
fists
es
adc
fmull
sub
mov
icebp
das
fucomp
mov
fcmovbe
in
loop
outsb
icebp
paddusw
push
jno
dec
fmull
inc
mov
stc
jge
push
dec
std
sub
or
inc
into
fcompl
xchg
cmpsb
test
pminub
inc
lock
ljmp
adc
pop
aam
popf
jmp
test
or
sub
jmp
fs
mov
aad
cmc
in
inc
fildll
test
dec
frndint
sub
fcmovne
inc
fbstp
mov
xor
jg
sbb
test
sub
sti
sahf
repnz
cli
pop
xlat
popl
fisttps
aas
add
mov
aas
mov
push
sub
mov
lock
xchg
push
stc
push
test
pop
fprem1
jmp
fdivrl
shr
cmp
in
clc
jmp
sbb
and
sub
cmc
jmp
loope
add
jp
in
cmc
cmp
xor
cmp
add
std
incl
add
add
sub
jmp
cmp
jmp
push
xchg
stc
mov
mov
fdivrl
pusha
jmp
addl
fcmovnu
cmc
ljmp
out
sbb
aad
or
mov
pop
mov
jle
aad
fisttpl
and
cmp
sar
dec
outsb
sti
cld
jb
xor
mov
decb
pop
fucomip
cli
add
pop
xchg
sbb
aad
stc
cmpl
and
aad
sbb
lret
in
cmp
loopne
ljmp
jmp
insb
loop
xlat
cld
or
xor
out
mov
jle
aam
adcl
insl
add
aad
xorb
xor
add
or
stos
cld
sub
add
popl
jle
add
data16
sbb
iret
lahf
in
repnz
cld
call
lea
dec
popl
xchg
call
in
aas
pop
or
aad
in
loope
or
fldcw
in
iret
lahf
and
into
lahf
and
adc
loopne
adc
or
add
push
punpckldq
add
push
in
push
popl
fs
add
push
daa
cmp
cmp
rclb
cmp
sbb
mov
cli
jmp
mov
fdivr
jmp
add
lcall
cld
in
lahf
out
or
enter
mulb
cmpsl
xor
pop
stos
nop
inc
cld
pusha
xchg
shll
add
sar
sahf
outsb
addb
hlt
push
or
mov
imul
mov
add
dec
add
adc
mov
add
shll
mov
jecxz
rorb
loop
sarb
push
push
adc
xchg
jbe
fistpl
mov
cmc
jne
pop
rorl
in
rolb
sub
adc
add
inc
adc
dec
adc
icebp
loope
fdivs
cld
mov
push
call
jge
mov
or
or
aad
inc
cld
dec
adc
adc
dec
jmp
mov
xor
roll
pop
cmpb
loopne
pop
mov
pushf
ljmp
aam
mov
test
int3
inc
outsb
call
popf
aaa
jae
mov
push
fpatan
mov
mov
mov
xlat
out
mov
pop
cmc
xlat
or
inc
xor
sti
loop
inc
call
or
stc
jg
in
imul
or
shll
shl
mov
test
arpl
mov
stc
jl
mov
test
lods
inc
aad
jo
cltd
andl
dec
aad
jmp
mov
ret
pop
inc
adc
aad
sbbb
or
call
push
ret
mov
jmp
ss
rolb
push
icebp
inc
pop
mov
imulb
jns
cld
loopne
std
jns
imul
add
cmp
lcall
decb
gs
clc
call
das
dec
and
jge
jmp
loope
sub
sbb
adc
test
repz
push
jge
jno
insl
iret
xchg
sbb
sub
adc
or
lahf
out
inc
sbb
lcall
icebp
std
add
add
pop
mov
mov
push
pop
mov
pop
shl
into
mov
ljmp
in
pop
pop
mov
push
pop
mov
pop
jnp
inc
push
shl
sarb
ret
cmpl
imul
add
inc
pop
and
shrb
lock
xchg
jl
rolb
lock
repnz
add
xchg
add
push
sbbb
pop
mov
aad
cmp
sbb
mov
cli
or
adc
pop
push
hlt
fisubl
loop
jne
movsl
fldt
sbb
dec
rcrl
push
loope
mov
add
xchg
jge
shl
or
jne
add
or
lahf
sub
fstpt
insb
repz
adc
jne
popa
mov
and
in
dec
fildl
test
cmpb
jecxz
push
sub
sub
ss
fwait
aad
pushf
sbb
lods
into
out
add
out
dec
cmc
sub
out
pop
ds
mov
cld
inc
add
sbbl
add
icebp
je
rcrl
sub
add
xchg
xlat
lahf
sar
inc
xchg
add
adc
jns
es
outsl
mov
rcrb
outsl
mov
shlb
dec
push
add
push
mov
test
or
xor
pusha
aam
jle
cli
lea
add
or
add
xlat
dec
and
cwtl
pop
or
sar
xchg
jmp
ds
notb
clc
jle
roll
ds
mov
idivb
std
rorl
push
dec
in
jmp
adc
xor
lods
xor
add
repnz
adc
movsb
lret
add
push
inc
jl
int3
outsb
adc
add
test
cmp
xchg
cltd
mov
push
jno
in
decl
pop
cld
sbb
addl
jmp
and
xchg
add
sbb
xchg
jae
loop
jae
sub
or
xchg
add
or
jmp
dec
xor
add
call
dec
cld
jae
fcoml
pop
cmp
jp
mov
cmc
sldt
add
cmp
aad
testb
fisttpl
push
aam
adc
push
and
cmp
loop
test
mov
cli
cmp
xlat
cli
and
cwtl
inc
aam
std
iret
mov
inc
add
dec
dec
adc
pop
dec
cld
push
test
jmp
lret
add
push
ss
push
add
push
pop
xchg
xchg
mov
lods
repz
xchg
xchg
pop
cmp
add
scas
sbb
inc
test
call
cmpsl
jmp
mov
adc
jmp
sbb
mov
fisubl
dec
aam
xor
mov
or
inc
flds
aad
jmp
xchg
mov
jecxz
xorb
fisttps
jmp
aas
xchg
or
mov
subl
mov
iret
dec
jo
int
xor
pop
aam
cld
aad
adc
filds
outsb
push
in
lcall
insl
dec
mov
aaa
jmp
push
out
leave
mov
or
cli
call
cmpsl
sbb
aas
in
aas
rclb
cli
out
xor
int
sub
push
aad
or
test
add
add
cli
push
outsl
xchg
cmc
or
call
push
dec
cmp
xchg
pop
outsl
repz
or
fiaddl
cmp
inc
adc
sbb
jnp
mov
xchg
loope
add
add
inc
mov
in
rorb
cmp
inc
test
jl
test
and
incl
add
inc
and
lds
mov
or
jne
add
mov
push
jns
cmc
jne
stos
jae
and
loope
inc
cmpb
cld
xor
cmp
jmp
ja
cld
stc
sar
mov
sub
cmp
pop
pop
xorl
jmp
cmp
pmullw
xchg
cmp
inc
loope
push
cld
add
mov
fadd
or
call
in
aad
push
adc
pop
iret
adc
loopne
pop
dec
enter
enter
scas
or
mov
aam
inc
shll
out
addr16
jl
mov
or
iret
lret
inc
pop
jmp
aaa
adc
mov
pop
jo
or
jmp
lret
cld
rcrb
cmc
add
mov
and
pop
stc
jle
imul
mov
inc
pop
in
mov
jle
loope
add
sub
push
leave
icebp
mov
imul
add
ffreep
mov
or
add
xchg
call
les
enter
or
add
subb
xchg
ret
pop
or
add
xchg
sub
into
xchg
sbb
add
adc
loopne
adc
aad
pop
or
mov
fnstenv
lea
mov
ret
ds
jns
or
jmp
jp
out
in
aas
pusha
adc
inc
cli
xchg
xchg
dec
cmp
cld
cmpsb
jge
or
or
push
mov
clc
mov
jmp
sub
mov
add
xor
mov
inc
jmp
lret
dec
add
dec
dec
cld
jo
roll
les
xchg
rorl
loope
mov
sub
ljmp
hlt
btc
mull
lds
inc
out
add
add
sbb
inc
notl
cmp
adc
imul
cmp
cli
jae
xor
jmp
mov
xchg
mov
inc
int3
add
jmp
cwtl
push
sbb
xlat
xor
mov
push
sub
and
shl
cmp
test
and
repz
xchg
cltd
inc
sti
sbb
sbb
jne
xchg
mov
lcall
push
or
add
iret
cli
xchg
mov
call
lcall
jle
mov
mov
mov
lcall
push
sar
push
mov
push
xchg
xor
add
push
aad
push
mov
fimull
adc
jmp
xor
cmpl
adc
repnz
out
cmp
or
aad
fidivrs
add
inc
cmp
in
add
call
fcmovnbe
push
pop
cmp
xor
push
fcmovu
jg
inc
add
out
or
xor
and
iret
pop
fnstsw
or
add
jecxz
dec
or
add
xor
call
add
or
aad
insl
hlt
adc
call
xor
rcr
jg
inc
jb
fistps
cmp
call
mov
push
cmp
or
jmp
or
push
or
insl
dec
or
jmp
pop
jge
inc
pushf
adc
jecxz
pop
jg
ficoml
mov
cli
push
adc
cli
push
cli
sbb
roll
lods
or
jmp
or
push
or
gs
or
jmp
add
add
cli
notb
mov
loop
xorl
or
out
add
cmc
pushl
add
cmp
mov
add
lods
sbb
adc
mov
or
jmp
add
lret
ljmp
decb
insb
adc
mov
cmp
xor
add
jns
js
aad
ljmp
adc
ds
push
aad
out
scas
or
insb
loop
ljmp
daa
sub
mov
decl
push
outsb
aam
ret
adc
cmc
out
jns
add
or
adc
out
add
mov
into
pop
sbb
insb
lret
or
mov
mov
daa
sub
in
ds
adc
cli
dec
sbb
adc
insl
ljmp
mov
into
xchg
sub
adc
out
add
scas
in
sbb
ss
data16
or
push
daa
movd
in
mov
lea
aad
ret
loope
sub
cmp
jge
ljmp
shrl
jle
repnz
es
xor
jmp
mov
pop
pop
in
imul
fs
sbb
lock
roll
add
ss
pop
pop
std
sbb
notl
inc
ljmp
in
add
or
aaa
iret
mov
pop
push
adc
push
test
out
into
and
adc
mov
enter
lods
cli
cmpsb
push
ds
jmp
or
sbbl
push
adc
outsb
decb
add
sub
ljmp
adc
xchg
roll
xor
jno
add
dec
leave
mov
add
push
ret
mov
dec
clc
add
mov
mov
mov
and
sub
or
std
push
cmp
scas
or
inc
stc
push
xor
sbb
adc
mov
hlt
and
ja
imul
dec
pop
mov
outsb
adc
sbb
inc
xor
add
sub
fdivr
push
icebp
lret
or
pop
cld
imul
inc
rolb
inc
rcl
jae
insl
fs
dec
sbb
aad
shll
shll
dec
or
xor
aam
mov
std
call
jmp
cld
xchg
out
into
into
decb
or
pusha
mov
imul
push
imul
shl
or
inc
aaa
test
fistpll
lret
aad
jns
mov
test
sti
jae
xor
or
movsl
xor
mov
jmp
sub
inc
sti
sbb
or
insb
nop
call
dec
add
sarb
mov
cld
filds
gs
mov
mov
call
push
insl
sbb
mov
test
add
mov
data16
iret
mov
data16
xor
adc
push
ret
dec
add
or
mov
mov
scas
les
loop
rorl
loop
mov
ja
xchg
ljmp
aas
mul
xlat
test
daa
daa
ret
jle
inc
adc
cli
push
or
cli
push
mov
jmp
sbb
cli
out
dec
aaa
test
sub
daa
ret
cli
adc
sar
aam
push
push
add
rcrb
push
sbb
sub
jg
mov
xchg
call
xchg
cli
sub
cmc
shr
mov
movsb
rorb
sti
xor
test
pop
add
pminub
adcl
decb
cmp
test
cmc
inc
jecxz
adc
push
mov
faddp
inc
idiv
and
adc
enter
fcomi
pushl
call
scas
add
xor
clc
mov
idiv
and
inc
test
dec
adc
ja
sbb
fprem1
mov
shll
xchg
cmp
incb
add
xor
or
and
cmc
bswap
add
decb
insl
or
cli
push
dec
inc
adc
jne
jnp
pop
pop
repz
jmp
inc
lret
cmpsl
xor
mov
xor
add
sub
leave
cld
adc
or
pop
stos
call
pop
in
ss
jg
add
loopne
lret
inc
sti
jle
outsb
lret
pop
incl
in
stc
test
lret
test
fsubr
idivl
mov
inc
loope
push
fst
jg
or
sub
mov
outsb
mov
or
dec
mov
cmc
or
adc
or
das
or
inc
xor
add
ror
or
fcmovne
pop
push
push
into
dec
jae
add
adc
loopne
adc
push
xor
into
iret
or
lret
ss
xchg
ror
pop
inc
test
push
bnd
push
jmp
pop
and
mov
dec
push
jmp
inc
add
mov
mov
mov
push
or
pushf
cs
adc
mov
or
out
test
push
jp
loop
pop
cld
out
sbb
test
pusha
inc
add
dec
dec
cmpsl
icebp
add
test
rorl
nop
or
jg
mov
shrl
push
adc
add
dec
aam
add
stos
lahf
std
push
loop
mov
testl
push
adcb
mov
push
jne
jae
sbb
call
ror
test
cli
inc
dec
and
daa
xor
add
insl
std
divb
xor
jmp
mov
jae
and
sbb
add
cld
mov
add
xor
lds
into
add
jnp
clc
jmp
aad
fld1
jge
decl
daa
or
incl
inc
push
and
std
cli
or
ja
leave
push
push
sbb
xor
loopne
or
cmpsl
sti
mov
loop
inc
aad
push
or
out
dec
sub
cmp
xorb
lret
popf
jmp
je
mov
aaa
jmp
pop
lods
sub
es
add
call
push
mov
loop
je
cmp
pop
daa
push
ret
mov
dec
cmp
and
fsts
iret
jg
les
dec
jmp
mov
mov
repz
ret
pop
push
loope
jb
dec
lret
pop
lea
sti
push
or
add
jno
dec
mov
outsb
cmp
test
add
cs
or
push
cmp
test
push
es
ljmp
add
lods
stos
out
mov
ret
iret
mov
into
mov
mov
push
out
popl
js
call
icebp
add
testb
sbb
sti
cld
jle
rcll
cmp
je
repz
cli
faddl
add
subb
mov
sub
xor
or
push
mov
addr16
cli
jmp
mov
pop
sti
jl
add
out
xchg
pop
jmp
cmp
je
or
add
call
pop
or
lods
xor
xor
idiv
push
ror
ljmp
cwtl
mov
push
lods
dec
push
decl
ret
mov
dec
add
mov
jae
outsl
jns
jne
ss
mov
cmc
loop
cmc
test
mov
cmc
inc
or
cmp
mov
sbbl
in
or
mov
adc
and
lret
jne
mov
nop
cmp
inc
add
fisttpl
jnp
sti
add
pusha
sarb
sar
idiv
inc
stos
lods
mov
mov
mov
sahf
cli
lods
out
cli
lcall
add
rcll
or
and
je
lahf
mov
and
dec
or
out
je
dec
pop
fidivrl
jmp
mov
aad
xchg
and
enter
enter
pop
insb
repnz
jnp
aam
xor
or
fcoms
stc
sbb
test
jnp
add
int
bound
or
adc
fidivrl
mov
aad
mov
or
lds
dec
or
xlat
mov
and
jnp
sti
dec
jmp
scas
add
dec
cmp
sub
mov
imull
cmp
adc
pop
lret
fsts
add
cmpsl
xlat
or
jmp
addl
cs
mov
xlat
enter
int3
mov
outsb
mov
aas
inc
adc
or
mov
das
ss
pusha
sbb
add
loopne
daa
xor
mov
clc
pusha
add
fimull
cli
fnsave
inc
in
jmp
or
sub
add
mov
pop
sti
mov
adc
mov
pushf
cs
mov
cmp
cmc
jne
lret
aam
fdivr
jmp
mov
cld
into
out
call
hlt
inc
sbb
or
je
aad
push
je
xor
or
cmp
inc
xchg
mov
mov
xchg
add
pop
icebp
pop
mov
xor
pushf
insb
or
in
fcom
lds
sbb
cmc
mov
inc
inc
jmp
dec
int
jmp
sbb
add
jg
add
add
push
pop
movsb
mov
roll
xlat
bswap
clc
cmp
add
jecxz
ds
ret
or
sub
shlb
cmp
dec
and
mov
and
sbb
clc
mov
cmp
fsubrl
ja
xchg
addl
ds
cmp
pop
loop
add
pop
test
mov
mov
jno
fisttps
xor
cld
repz
les
js
sbb
icebp
andb
or
into
les
ljmp
in
cmp
ja
les
dec
jmp
ret
dec
push
pop
iret
mov
xor
cltd
cmp
mov
pop
dec
jmp
test
or
pop
sub
cmp
add
in
repnz
pusha
inc
sbb
aad
ljmp
xchg
or
mov
xchg
jnp
call
sbb
mov
jmp
jge
test
mov
bound
addl
scas
xchg
test
sahf
xchg
mov
dec
add
push
lock
jg
stos
cli
xchg
fsubrl
stc
jbe
test
out
out
pushl
push
jmp
bound
into
xchg
mov
ljmp
add
adc
dec
cmp
mull
incl
push
inc
push
add
pop
ljmp
divl
bound
fiadds
enter
addb
add
or
addl
jl
out
lret
cmc
jne
jle
hlt
arpl
out
mov
jg
call
jmp
add
hlt
cmp
sub
push
sbb
dec
clc
push
sti
rcl
je
or
les
or
pop
add
or
dec
adc
cli
cmp
sub
mov
xchg
fcmovbe
cmpl
dec
in
aaa
adc
fdivrl
push
jae
cmpsl
pusha
insb
daa
mov
pop
fstl
das
xchg
loop
inc
and
or
cmpsl
cli
jb
pop
cld
fimull
divl
pop
mov
out
mov
sbbb
add
aad
mov
push
shlb
int
sub
lds
stos
mov
adc
pop
leave
flds
mov
lods
jne
std
scas
add
out
jg
inc
pop
ret
out
movsl
sarl
dec
movsb
lret
mov
into
adcl
ljmp
shll
dec
loope
jae
jns
jns
add
sbb
add
push
mov
mov
dec
ret
cmp
add
or
ljmp
or
cmpsb
cli
cs
adc
fsub
gs
sub
push
push
mov
scas
je
ds
mov
ljmp
dec
and
pop
push
push
loop
ja
add
add
test
loope
adc
fnsave
mov
xchg
xlat
addl
pop
mov
inc
add
inc
clc
jl
pop
adc
mov
test
adcb
pop
fs
add
dec
js
mov
sti
scas
pop
cld
cmp
addl
imul
shll
icebp
sbb
bound
adc
icebp
or
add
popa
out
adc
cld
test
or
cld
jae
jne
in
addl
fdivrp
jnp
pop
or
jg
call
dec
stc
aas
test
and
subb
mov
aaa
pop
dec
xlat
in
pop
mov
test
inc
and
dec
in
xchg
add
lahf
mov
mov
or
push
mov
xchg
stos
aas
cmp
mov
sti
dec
pop
es
cmp
xor
dec
pop
push
sti
sub
mov
or
test
ret
push
pop
jg
mov
sub
mov
dec
aad
push
fisttps
add
mov
cmpsl
dec
test
jne
dec
add
sbb
test
mov
stc
xor
mov
nop
mov
aas
or
in
jnp
sbb
icebp
mov
in
cmp
and
adc
stc
mov
mov
insb
movsb
xchg
cmpsl
pushl
pop
scas
jecxz
pop
adc
ljmp
add
or
orb
cli
fidivrs
movsb
inc
push
and
fldenv
cli
aam
mov
mov
add
sti
mov
outsb
movsb
test
in
call
jb
in
aas
jo
in
dec
add
popl
dec
adc
dec
sub
das
loopne
test
xchg
shl
cmp
add
cli
into
adc
test
sbb
aaa
fcoms
mov
arpl
push
das
into
call
mov
add
repnz
test
ljmp
cld
in
adc
jns
cmp
or
add
dec
clc
cmp
pop
lea
outsl
cmc
pushl
adc
fsubs
andl
jne
add
xchg
inc
sbb
outsb
pop
inc
or
dec
incb
repz
fdivr
aad
lods
and
in
pop
daa
lea
xlat
jb
sbb
adc
push
mov
add
hlt
loop
pop
push
cli
jp
inc
hlt
loop
add
xchg
sbb
pop
les
and
mov
xchg
test
jle
test
and
faddl
sbb
sub
jns
notl
mov
pusha
loop
sbb
fwait
movsl
stos
aad
ss
push
or
call
push
into
mov
aad
es
inc
or
add
mov
mov
fisttps
shll
movsb
call
or
add
sbb
lret
testb
add
mov
cmpsb
dec
movsb
dec
pop
lret
xor
into
mov
cmpsb
das
movsb
sti
jle
movsb
call
or
shld
sbb
add
shrb
test
mov
sub
xor
fisttpl
add
mov
dec
adc
outsl
je
pop
lds
add
adc
icebp
in
into
stc
out
dec
push
xor
aad
adc
or
loopne
dec
mov
and
fstps
cli
cld
mov
push
adc
push
sti
aam
mov
aas
mov
jl
push
out
cld
lcall
xor
out
push
in
out
in
icebp
push
in
ljmp
ja
add
jle
add
add
cmp
push
jle
add
cmp
push
jbe
add
jge
add
jns
add
cmp
push
mov
sub
cmp
out
cmp
mov
cmp
inc
xchg
cmp
jle,pn
add
xchg
cmp
xchg
cmp
adc
add
add
cmp
sti
xchg
cmp
sbb
out
xchg
cmp
aad
xchg
cmp
aad
xchg
cmp
aad
cltd
cmp
aad
xchg
cmp
aad
cltd
cmp
aad
cwtl
cmp
aad
xchg
cmp
aad
test
aad
cmpl
aad
xchg
xchg
aad
pop
cmp
aad
cmpb
out
pusha
cmp
aad
pop
pusha
enter
rorb
pop
mov
or
pop
test
mov
xchg
cwtl
or
mov
or
xchg
or
or
add
pop
ljmp
push
and
iret
adc
adc
cmc
sldt
loopne
icebp
sbb
add
sbb
add
sbb
std
jecxz
into
jmp
loop
jmp
out
in
repnz
adc
cli
repnz
jmp
popf
push
mov
pushf
push
mov
out
lock
add
xor
clc
aam
loopne
sar
aad
mov
loop
cmp
lcall
shlb
add
fs
aaa
addr16
pop
inc
scas
inc
roll
xchg
dec
sbb
cmp
ljmp
cmc
fdivr
add
inc
xlat
inc
pop
inc
push
fs
shll
call
mov
daa
cmp
add
cmp
mov
add
sub
sub
add
and
cmp
add
sub
add
sub
add
sub
add
sub
add
ds
add
sub
add
sub
add
sub
adcl
add
dec
orb
dec
adc
push
xchg
pop
das
daa
ja
negl
lods
mov
sub
pop
insl
stos
mov
sbb
and
mov
ss
xchg
sbbb
mov
cmp
mov
pop
or
pop
add
or
sbb
add
xchg
ja
mov
jb
ja
add
leave
sbb
or
in
or
dec
or
jp
out
push
mov
xchg
arpl
das
popf
inc
jge
jmp
stos
stos
lret
mov
push
inc
and
jmp
inc
test
add
dec
xchg
mov
pushf
cwtl
jl
mov
xchg
mov
xchg
pop
or
sahf
mov
hlt
add
nop
nop
and
push
shll
pop
or
jo
mov
xchg
sbb
fists
xchg
mov
test
add
call
mov
rclb
stos
xor
pop
inc
icebp
scas
cmp
pushl
lcall
bound
enter
mov
cli
push
imul
sub
add
in
pop
das
sti
out
jp
inc
icebp
cltd
mov
test
mov
rcl
cli
shlb
sti
mov
test
xchg
xor
add
daa
sti
mov
xchg
xchg
add
push
jmp
xorb
push
push
mov
inc
test
dec
sbb
cmc
mov
xchg
ds
incl
add
or
sbb
mov
push
mov
push
inc
or
pop
add
add
pop
pusha
in
add
cli
dec
add
add
mov
push
inc
add
fistpll
lods
add
jmp
add
mov
xchg
inc
aad
test
call
add
xchg
aad
sti
add
dec
sub
test
and
xchg
and
cmpsb
inc
out
mov
out
sbb
adc
test
aas
add
test
inc
repnz
cli
loop
inc
or
adc
test
test
cmpsl
lods
cli
dec
push
mov
loop
inc
push
mov
call
gs
cmp
mov
or
and
add
cmpsl
mov
sub
js
sbbl
cltd
jno
and
loop
dec
mov
and
or
add
movsb
fnstsw
stc
outsl
xchg
cwtl
cmp
into
jb
add
sbb
cmp
add
iret
cwtl
loope
adc
pop
dec
aad
jo
add
test
or
lods
aaa
sti
test
mov
mov
xchg
jb
enter
pop
jmp
stc
push
add
push
or
mov
fwait
xchg
cli
jbe
adc
icebp
scas
cmp
inc
std
lods
rolb
jmp
or
and
push
xchg
cli
push
add
icebp
pop
add
outsl
dec
hlt
pop
cwtl
add
mov
call
jno
jmp
adc
xchg
add
mov
or
int3
testl
inc
xor
shll
inc
in
icebp
xchg
jns
and
aad
jmp
ret
push
repnz
mov
sub
pop
mov
add
dec
jnp
insb
fs
ljmp
sbb
dec
ja
dec
test
mov
mov
cmc
lea
idiv
rcll
mov
pushl
cld
test
inc
xchg
xchg
mov
pushl
add
pop
testb
je
and
lcall
inc
aam
jg
andb
shl
ljmp
lods
icebp
mov
scas
jnp
lret
leave
pop
cltd
adc
push
clc
cmpsb
cli
cmp
inc
hlt
fisubl
jmp
mov
ljmp
mov
add
andl
call
pop
repnz
out
clc
pop
call
mov
test
shrb
xchg
mov
jp
sbbl
data16
ficoml
in
and
push
jle
lds
xchg
mov
inc
outsb
xchg
xchg
test
pop
mov
insl
dec
dec
mov
bound
sub
or
ja
xchg
inc
test
ret
adc
jg
dec
out
xchg
sbb
xchg
or
cmpsl
mov
add
test
push
add
pop
push
aas
out
insl
popl
pop
scas
adc
jmp
pushl
xor
and
imul
push
clc
cli
aas
cmpl
rorb
das
xchg
add
mov
sahf
or
shlb
mov
fcmovu
ret
sbb
jmp
add
xchg
fmull
repz
inc
sbb
adc
fadd
out
cmp
mov
les
dec
int3
in
cmp
fsubr
jmp
iret
xor
stos
mov
add
jl
aaa
cmp
dec
sbb
decl
mov
lods
out
stc
dec
mov
test
sub
cmc
call
add
jg
sbb
daa
cmpsb
dec
call
dec
adc
adc
fwait
push
test
pop
adc
stos
push
pop
je
cld
dec
sahf
shlb
icebp
mov
mov
add
lret
or
stc
repnz
sub
jmp
mov
pushf
adc
xchg
in
imul
add
jne
dec
imul
jae
mov
mov
das
push
mov
fisubrl
xchg
aaa
cld
movsl
xchg
pop
sub
dec
pop
jns
sbb
ss
jecxz
pop
jl
cli
add
push
cmpsb
aad
xchg
jns
cmp
cmpsb
fistpll
cmpsl
or
das
xor
adc
sbb
imul
and
jmp
shll
xrelease
cli
or
mov
add
jg
out
jecxz
arpl
cltd
add
add
push
xchg
mov
pop
jecxz
lds
push
xchg
imul
icebp
pop
dec
push
lds
lea
movsl
xchg
add
test
mov
add
xor
stos
daa
hlt
mov
mov
jae
cmp
or
ljmp
pop
lds
or
nop
cli
jmp
sbb
mov
std
cmp
mov
aad
jge
or
cmp
cmp
sbb
push
or
lret
lret
or
jno
xchg
cli
sbb
jle
add
push
inc
xchg
xchg
adc
sub
aas
add
push
cmp
xor
push
jne
pop
pushl
gs
inc
jmp
mov
lods
filds
xor
jno
mov
cwtl
sub
repnz
loope
not
xchg
sub
adc
jnp
or
dec
add
pop
adc
push
pop
add
xor
jg
push
out
shl
jne
mov
add
cmp
pop
pushl
or
jae
push
xor
adcb
add
or
sbb
decb
push
pop
shll
push
xor
aas
aad
dec
or
jecxz
pop
cmp
rcrb
add
add
push
inc
sti
aam
adc
and
incl
divl
sti
rolb
xlat
sahf
adc
xchg
add
jmp
mov
sub
mov
sub
jmp
cmc
fimull
mov
inc
mov
call
mov
fdivrs
jnp
sub
lret
add
sti
dec
or
or
add
push
shl
add
jle
out
cmp
push
stc
in
and
fsts
aad
jbe
sub
pop
call
call
push
mov
fistl
orl
add
fsubrs
sbb
sbbb
shr
test
test
lahf
add
or
stc
enter
jnp
sti
push
pop
dec
and
sub
or
add
sbb
lods
and
in
or
cld
out
aas
jmp
in
lea
outsb
ds
jne
xchg
jne
test
lret
and
mov
sti
xor
or
in
mov
ret
xor
mov
jle
aaa
jne
mov
dec
add
adc
add
cmp
outsb
and
pusha
ds
jp
jle
xor
addl
cmc
je
movsl
cmc
inc
rclb
xchg
pop
cmp
fldt
rolb
inc
nop
cli
add
mov
cmc
incl
mov
ds
aad
je
or
adc
icebp
lds
insb
cmc
cmp
and
cmp
jl
mov
cli
dec
jl
and
js
xor
or
inc
stc
mov
test
and
mov
add
push
jno
lret
sbb
add
jae
inc
fsts
adc
xchg
add
mov
inc
lods
xchg
dec
cltd
test
das
mov
test
add
or
cs
or
into
xchg
shl
lock
adc
cli
addb
add
mov
shrb
hlt
inc
push
or
sbb
cltd
sbb
inc
push
pop
rorb
adcl
mov
adc
or
arpl
mov
jns
call
shrb
test
pop
fidivl
outsb
and
fisubrs
mov
adc
es
icebp
and
aaa
xchg
testl
push
xorb
jae
dec
xchg
iret
in
sbb
adc
pop
lock
add
loopne
dec
out
ljmp
ret
add
mov
mov
sbb
mov
adc
mov
xchg
push
rcll
mov
or
je
sbbb
rcl
or
cmp
loop
repz
push
jle
hlt
xchg
adcb
fimull
cmp
push
push
adc
add
or
call
inc
std
or
ret
adc
hlt
sub
inc
jmp
adc
sub
mov
mov
push
iret
sti
call
add
jle
add
mov
dec
or
xchg
pop
push
lret
xchg
repnz
int
mov
pusha
and
and
lret
dec
and
jne
cld
mov
adc
lock
test
hlt
or
mov
xchg
mov
mov
xorl
push
or
dec
hlt
movlps
add
notl
push
lret
aaa
cmp
add
jno
pop
dec
cs
dec
clc
pusha
test
out
ljmp
xchg
and
inc
dec
pop
shrl
das
cmp
test
xchg
cs
sbb
mov
repz
aaa
adc
mov
or
ret
insl
or
jmp
fnstcw
test
xchg
or
xchg
add
jmp
cmpl
lods
xchg
ss
or
das
call
jmp
cmpsl
pop
or
add
loopne
fwait
loope
pop
fwait
jp
and
pop
int3
xchg
imul
jmp
push
aad
mov
mov
cmpsb
adc
dec
sub
push
int3
pop
or
push
mov
add
mov
or
mov
xor
leave
nop
ret
cmpsl
pop
out
mov
jb
cmp
test
xlat
mov
call
fcoml
or
test
mov
push
mov
dec
orb
dec
dec
mov
mov
cmp
aas
iret
adc
push
mov
pop
xorb
add
lret
test
into
out
int3
mov
push
push
add
inc
push
into
repz
xchg
ss
call
dec
out
adc
or
roll
inc
dec
add
pop
jg
sub
hlt
mov
jnp
xlat
dec
xchg
xchg
add
incl
add
gs
mov
xor
cmp
movsb
jae
and
or
mov
clc
lcall
notl
mov
xor
sti
add
jnp
dec
incl
lods
or
cmp
pushf
mov
cmp
mov
divl
aaa
notl
aad
cmp
das
or
or
fcmovnb
mov
call
xchg
cli
xchg
scas
fwait
add
sub
mov
aad
test
inc
mov
adc
inc
mov
movsb
es
dec
mov
call
jmp
js
xor
adc
xchg
jo
pop
insl
ljmp
xchg
jo
jl
jb
cmp
test
add
mov
xchg
adc
fs
add
adc
or
icebp
xchg
sbb
fstpl
jbe
add
in
pandn
stc
adc
adc
loop
call
mov
dec
sar
or
sti
or
push
call
cmp
adcb
mov
xor
push
jmp
xchg
leave
sbb
and
or
jno
xchg
add
jb
pop
lock
sbb
add
mov
aad
add
in
sti
jmp
dec
in
lock
push
call
movb
adc
std
or
lret
out
subb
rorl
dec
mov
dec
rclb
test
pop
cli
cmp
jl
rclb
inc
push
jo
add
ret
sbb
inc
jmp
fcmovnbe
cli
cld
dec
test
test
out
data16
rclb
ret
clc
mov
outsb
stc
in
xchg
jae
mov
or
inc
les
add
loopne
cmc
push
jecxz
jbe
jg
notl
xlat
aas
out
inc
mov
in
jne
add
pop
lock
dec
decl
xchg
cmc
jne
notl
mov
mov
cmc
push
cs
dec
adc
adc
or
dec
push
mov
rclb
ficoml
aad
push
bnd
setne
inc
ficomps
add
lret
cmpsb
mov
inc
enter
xchg
stc
cmp
add
and
or
adc
lock
mov
unpckhps
lea
and
mov
addb
lea
jne
add
sbb
sub
xor
add
sti
das
and
ss
xchg
mov
mov
mov
mov
cld
dec
in
call
sbb
add
xor
inc
xchg
aad
jle
dec
fstl
jo
fpatan
clc
adcb
xchg
cmp
xchg
pop
lock
aam
sti
daa
fucomi
clc
push
sub
loopne
rorb
fisttpl
fstpl
add
xlat
insl
pop
mov
out
xchg
dec
test
lret
loope
testl
add
inc
stc
pop
test
mov
fidivl
loope
cli
and
int3
adcb
push
add
dec
ds
lds
je
outsb
sbb
mov
xorb
mov
test
cmp
sbb
les
movaps
adc
pop
aad
adc
cmpl
or
add
lret
xor
fdivr
fcompl
sbb
add
or
in
dec
ds
cmp
mov
jle
adc
clc
mov
mov
sub
test
adc
lock
in
pop
addl
std
push
or
adc
or
mov
out
add
rolb
nop
subb
mov
add
fwait
test
jl
incb
cmpl
add
add
cmp
xchg
dec
pushl
mov
mov
or
incl
aad
jge
icebp
pop
adc
sub
out
jae
repz
das
add
call
in
jae
pop
adc
pusha
sarl
fidivl
rcrb
adc
jo
xchg
mov
add
call
pop
call
pop
xor
bound
jno
adc
cmpb
pop
popa
mov
loope
pop
fnstcw
jae
repz
or
xor
xchg
hlt
sub
mov
mov
push
fadds
out
call
adc
js
mov
loope
hlt
inc
aad
xor
sub
dec
push
int
outsl
inc
mov
leave
call
jnp
outsb
repz
sbb
loope
adc
jbe
test
ror
xchg
jp
jae
sti
cwtl
call
cld
and
pop
pushf
out
rorl
pop
xor
mov
or
sub
sub
add
push
add
pop
xchg
rclb
cmc
dec
cmc
or
mov
jl
cmc
sub
dec
clc
pop
pop
in
inc
pop
jecxz
dec
enter
mov
fsts
test
xchg
fdivr
lahf
mov
je
and
mov
shl
in
arpl
psadbw
add
push
sub
add
rcll
xchg
add
xchg
or
add
mov
jmp
mov
push
jae
out
cld
or
add
mov
clc
test
call
mov
xchg
mov
cmc
mov
cmc
xor
add
xacquire
jnp
addl
roll
inc
aaa
xchg
xchg
adc
xchg
lea
aas
push
ljmp
mov
aad
ds
bound
je
stc
inc
mov
pop
cmp
xchg
bound
inc
adc
insl
xor
add
push
mull
xchg
call
pop
mov
xchg
xor
jns
add
popa
incl
add
push
call
inc
mov
push
add
adc
and
aad
enter
aad
mov
bound
pop
pushf
and
xchg
mov
push
and
dec
add
stos
or
mov
int
inc
aad
sti
jg
lret
call
inc
aad
xchg
jg
push
inc
aad
and
add
xchg
sub
cwtl
inc
aad
mov
mov
dec
jl
lret
call
or
add
or
or
jb
mov
popa
mov
or
testb
add
or
mov
or
xor
inc
mov
mov
lock
std
test
cmp
mov
stos
movsl
mov
push
call
in
xchg
dec
add
push
roll
test
fmuls
add
dec
xchg
add
aam
pop
inc
jmp
fdivs
stos
cmpsb
fsqrt
aam
test
adc
pop
test
pop
jo
sub
std
cli
cs
mov
cli
jno
jno
in
xchg
into
cli
jmp
add
jl
xor
pushl
fwait
inc
hlt
pushf
sbb
decl
jb
jnp
cmp
or
jae
paddsb
inc
xor
adc
dec
dec
dec
jne
jne
adcb
and
incl
subb
fs
lods
or
stos
add
or
rorl
pop
mov
jns
adc
push
add
add
clc
jmp
or
repnz
mov
jae
push
scas
dec
popa
call
arpl
or
cli
out
xchg
jo
add
or
dec
pop
hlt
jg
push
call
popa
or
dec
and
add
aad
sar
enter
aad
out
adc
ds
add
aas
cmpb
lea
cmpsb
ljmp
lds
sti
xchg
ljmp
or
xor
or
out
rcrb
fwait
sub
dec
loopne
and
xorl
cwtl
into
xor
jg
lock
dec
call
xchg
sbb
sbb
aam
aad
test
push
xchg
call
lock
ret
adc
std
jecxz
pushf
or
retw
mov
daa
add
or
bt
inc
ror
xor
fdivl
pop
int
call
push
mov
push
cltd
xchg
cmc
push
mov
mov
push
or
cmpsl
jb
jle
aad
mov
push
out
lea
jmp
mov
test
inc
mov
mov
dec
push
lods
pop
outsl
xchg
push
mulb
in
mov
enter
sub
push
sub
mov
and
in
sti
pop
mov
mov
lods
xchg
jle
add
cmp
cmp
mov
das
add
add
jp
add
mov
call
mov
jno
xor
mov
enter
inc
daa
inc
insb
out
jae
add
cmp
out
scas
push
push
and
adc
add
dec
push
mov
mov
cmp
cmc
adc
jmp
push
push
dec
cwtl
aaa
push
or
mov
inc
mov
or
add
add
insl
xchg
or
pop
mov
shlb
adc
jecxz
mov
sbb
xchg
fidivl
insl
mov
mov
xchg
add
jle
xchg
xchg
filds
pop
insl
mov
push
lods
mov
das
dec
dec
pop
clc
push
test
cmp
sub
or
add
fdivl
cld
or
call
dec
and
out
cli
popa
ja
pusha
ja
mov
or
outsl
call
std
outsl
dec
jg
not
xor
push
cmp
in
mov
xor
or
jecxz
pushf
ror
int3
hlt
jecxz
xor
outsl
jae
lock
lcall
leave
call
add
test
add
xor
inc
aad
sbb
lcall
cs
xchg
sub
arpl
mov
sbbb
push
add
push
outsl
loope
call
mov
leave
cmp
jb
popa
push
push
fdivr
push
outsl
pop
arpl
fmul
sub
or
push
or
push
sahf
inc
lock
into
hlt
cli
cld
aas
jmp
add
mov
add
sti
das
jb
lds
outsb
ljmp
data16
in
in
pop
or
xor
out
les
repnz
mov
add
ss
aas
cli
daa
loope
cli
hlt
stos
cld
aas
add
jnp
and
push
pop
vrcpss
and
cmp
out
out
pushl
add
push
cmc
jne
pop
xchg
xor
inc
cld
das
icebp
pushl
jl
cld
dec
imul
jo
jnp
rclb
je
jmp
adc
lea
push
cmc
adc
xchg
or
add
loopne
mov
test
jmp
mov
xor
cli
adc
or
aad
jg
mov
in
jp
decb
add
aad
adc
les
add
adc
insl
inc
or
mov
data16
push
dec
into
dec
and
lret
dec
std
gs
repz
dec
popf
jp
lcall
mov
in
ds
and
ret
je
or
jp
mov
decl
imul
cmpsl
jg
dec
cmp
imul
je
pop
add
aam
push
jg
push
jne
or
add
inc
je
jmp
mov
insb
or
repz
and
xor
sub
pop
push
gs
cmc
incb
rclb
fsubrs
mov
push
adc
aam
push
sub
dec
xchg
add
aas
add
jb
roll
add
and
into
or
fnstenv
xorl
pop
ljmp
add
jae
scas
mov
test
in
gs
sti
cmp
sbb
or
out
or
movd
xor
mul
int
cmp
outsb
pushl
outsb
enter
push
bound
add
fsqrt
pushf
ljmp
outsb
je
add
sti
fdivrl
aas
jmp
fcmovb
jl
jecxz
pop
stc
xchg
push
cmpsb
xor
mov
mov
ja
mov
push
dec
push
push
dec
push
jae
add
int3
jl
cld
arpl
js
lods
add
divl
ljmp
jae
push
incl
add
jmp
aas
add
int
add
divl
call
cli
mov
inc
mov
rorb
decl
xorl
das
les
jmp
cmp
jne
out
decl
sub
je
idivl
push
aas
jae
dec
sti
and
mov
inc
add
or
mov
and
leave
add
fucom
xor
add
inc
je
jmp
cmovle
ret
mov
out
xlat
repnz
dec
and
mov
xor
inc
aad
ret
dec
inc
mov
xchg
mov
clc
and
rdmsr
sti
enter
aad
xor
jge
push
adc
dec
cmp
add
xchg
or
stos
dec
in
dec
mov
ljmp
sub
call
cmp
mov
lgs
push
mov
daa
fiaddl
push
jno
test
adc
test
into
or
cmpsb
inc
fldl
push
andb
inc
lcall
mov
add
movsl
mov
and
xchg
fisttpll
incl
add
sbb
insb
jns
cli
jmp
pop
bound
ficoms
call
pushf
out
push
into
mov
incb
dec
pop
imul
out
mov
mov
xor
popa
sub
mov
clc
push
lds
push
add
sti
fisttpll
imul
cld
out
mov
out
dec
mov
jb
push
popa
sub
add
cli
push
outsl
filds
imul
inc
insb
or
in
in
jne
je
jmp
cmp
push
inc
cmp
je
xchg
jmp
andb
loope
in
je
push
rolb
cli
push
mov
add
cmp
cld
pop
out
jmp
adc
push
jl
add
sbb
ret
loopne
ljmp
sbb
idivl
popa
shl
in
mov
leave
push
inc
jl
jne
cld
in
je
mov
mov
cltd
mov
and
mov
and
add
sbb
add
adc
add
or
add
and
add
add
sbb
add
adc
add
dec
cmpsl
test
or
push
adc
nop
outsb
xor
dec
das
and
aaa
and
das
and
dec
aaa
and
dec
sub
sbb
push
dec
sbb
inc
movsb
mov
ljmp
xchg
mov
jns
sub
inc
jae
or
mov
je
cli
imul
loopne
outsb
roll
lret
lock
test
adc
in
dec
lret
icebp
insb
outsl
sub
and
repnz
sub
adc
add
out
mov
sub
in
sahf
sub
les
leave
aaa
rcr
aaa
out
add
in
aaa
jmp
clc
aaa
loop
fdivl
aaa
leave
fucom
aaa
rcr
in
add
dec
iret
and
pop
pop
adc
daa
adc
daa
and
push
adc
insb
or
jb
daa
adc
pmaxsw
or
push
subl
add
xchg
mov
rcl
jle
loope
and
or
scas
mov
pop
pop
arpl
int3
push
test
rorl
add
or
insl
or
add
push
sub
imul
add
loop
mov
lea
dec
popa
or
add
adc
push
icebp
or
jl
cmp
or
sub
icebp
or
insb
push
cmp
or
cli
or
cmp
sub
test
outsb
cmpsl
dec
push
adc
push
push
adc
push
push
adc
mov
incl
add
je
nop
inc
pop
or
push
pop
je
or
jg
mov
addl
or
call
aad
jne
loop
repz
aad
jle
int3
outsl
jp
into
jb
rcrl
es
push
sub
or
std
call
in
cld
mov
shl
rolb
aad
cmp
aam
cmpsb
xadd
add
jmp
ljmp
mov
mov
stc
outsl
xchg
jmp
bswap
mov
adc
cltd
je
push
jnp
je
sub
call
jle
pop
fnstsw
inc
stc
aas
add
xchg
movsb
pop
in
lods
pop
mov
xchg
stos
pop
cli
lds
push
iret
in
sbb
dec
mov
xchg
mov
push
xchg
adc
pop
into
mov
pop
cmp
mov
decb
pop
mov
sub
xor
fldl
aad
loopne
scas
and
loope
mov
int
xor
mov
stc
cltd
mov
adc
inc
pop
iret
hlt
add
gs
add
inc
ljmp
and
and
andl
insb
add
push
fldt
bound
sub
jb
sub
test
mov
cs
neg
nop
or
pop
leave
adc
cld
and
roll
test
add
ror
arpl
fimuls
or
stos
test
scas
cmpsb
dec
test
out
and
inc
idivb
adc
out
inc
lds
add
adc
addr16
push
adc
inc
or
lods
mov
push
mov
fadds
add
jecxz
sub
inc
rdtsc
lahf
or
jl
and
mov
adc
mov
stc
add
sub
jl
and
out
dec
add
out
dec
push
mov
test
or
add
test
cmp
add
repnz
jmp
cmc
ljmp
cld
iret
inc
add
mov
cmp
sbb
test
lcall
cs
call
repz
jb
inc
aam
pop
rcr
jb
jg
pop
std
test
jb
call
aam
decl
pop
cmc
dec
repz
repz
add
add
insb
sar
call
imul
aam
push
xchg
into
jb
jg
add
and
clc
int3
jl
mov
push
lds
jnp
pop
stos
jecxz
lret
mov
adc
imul
or
jge
cmc
int3
sbb
or
jle
cmp
daa
outsl
lret
dec
ret
sbb
jp
clc
and
add
aad
inc
xor
or
orl
out
jge
fiadds
aad
or
insl
popf
fsubrl
ljmp
fsubrp
iret
fwait
lods
jmp
cmp
dec
jnp
idivl
das
int3
aam
jmp
cld
stc
in
nop
inc
std
mov
add
pop
add
leave
aad
out
or
in
add
jo
fst
or
cld
out
scas
ret
sub
call
out
aas
push
mov
insl
dec
call
imul
push
or
jmp
xchg
shll
pop
cli
imul
xchg
add
sti
push
pop
addl
add
pop
cli
jl
add
dec
loopne
pop
sbb
sbb
mov
sbbb
push
cmp
pop
jle
cmpsb
push
add
mov
jns
mov
es
jae
dec
or
jp
addl
pop
mov
insb
les
insl
xchg
dec
rcrl
cmp
outsb
sub
add
popf
outsb
sbb
out
push
add
fs
call
mov
leave
rcrl
les
xlat
ja
rcll
les
aad
rol
inc
pop
out
test
and
sub
sbb
popa
mov
enter
lods
pop
call
inc
inc
inc
jecxz
push
adc
add
push
inc
inc
lret
aaa
push
add
aas
outsl
inc
inc
jecxz
inc
inc
aam
pop
add
or
insl
push
xor
jmp
cld
fs
insl
or
jne
or
lods
and
pop
mov
jb
loop
pusha
add
insb
ficompl
jns
or
aad
into
lea
aad
imul
add
push
mov
adc
aad
imul
or
subl
xchg
iret
repnz
insl
lahf
call
stc
rol
push
push
pop
dec
pop
cs
inc
imull
or
imul
adc
lahf
call
jmp
andb
add
cli
push
sub
clc
jmp
mov
or
hlt
mov
stc
rsqrtps
sub
and
std
les
leave
adc
sbb
fiadds
das
cwtl
stc
add
xchg
xlat
imulb
or
add
mov
add
cli
jg
sbb
xorb
jae
jb
adc
pop
add
push
sbbl
push
add
ljmp
jno
enter
xlat
jnp
dec
int
dec
mov
or
pop
mov
add
jo
pop
jne
xlat
ds
aad
and
push
rolb
push
mov
pop
push
mov
insl
mov
idivl
add
aad
adc
inc
add
ljmp
or
pusha
jle
iret
fcoml
cs
ljmp
dec
inc
jg
push
andnps
jae
loopne
pop
mov
inc
inc
aam
pop
pop
cmpsb
mov
fmull
jge
imul
mov
add
fcmovb
add
negb
and
out
dec
add
bound
shll
inc
jae
out
and
out
and
idivl
push
add
pop
and
jmp
dec
lods
or
call
icebp
jge
std
int3
ljmp
test
dec
push
gs
sub
pop
pop
or
or
push
jle
add
mov
mov
adc
ret
iret
xchg
or
addl
fnstcw
push
mov
and
fldl2t
add
mov
push
add
aad
or
or
subl
pop
imul
cmp
push
xchg
or
inc
ret
or
jmp
pop
incl
xchg
mov
xchg
or
jecxz
add
push
pop
sub
mov
dec
inc
call
or
out
add
imulb
xchg
ljmp
ret
inc
inc
call
or
scas
xchg
or
andb
add
push
pop
add
push
sub
dec
jg
pop
push
add
push
dec
or
jmp
mov
jo
add
mov
movb
shlb
mov
add
cmp
cmp
jne
cmpsl
xchg
push
adc
lods
mov
inc
out
push
mov
sub
mov
je
xchg
add
std
inc
punpckhwd
mov
mov
push
lods
push
mov
pop
mov
or
call
and
add
pusha
icebp
mov
cmpl
xor
add
aam
decb
sub
testb
inc
cld
decl
and
cmp
mov
sub
cmp
adc
cmp
fs
fldt
dec
mov
pop
cmp
inc
adc
call
mov
fs
fisttps
bnd
add
xchg
aaa
sub
outsb
gs
mov
insb
lods
adcb
jge
loop
xor
jmp
cld
insl
xchg
jecxz
aad
stos
add
in
dec
cli
icebp
jle
or
add
xchg
pop
sub
add
push
call
ss
in
pushf
or
imul
xor
inc
cmp
subl
in
imul
repnz
rorl
jmp
pop
cmp
in
or
add
cli
jb
mov
inc
jle
ds
add
std
icebp
pop
lret
push
inc
ljmp
jae
popa
lcall
push
imul
lret
icebp
add
mov
or
mov
in
add
or
daa
xlat
or
out
add
imul
add
mov
mov
in
or
adc
nop
pop
orl
lret
enter
mov
pop
ror
push
push
hlt
mov
jg
push
packssdw
push
clc
stos
in
rolb
add
add
in
loope
jne
or
mov
add
incl
jmp
xlat
test
int3
cli
adcl
push
test
add
aad
push
adc
std
addb
inc
rclb
inc
in
pop
mov
sti
aad
xlat
dec
xor
sbb
or
lcall
adc
xchg
sub
xchg
add
repz
xchg
mov
add
xor
mov
lret
or
call
cmc
and
fadd
and
addr16
inc
lcall
mov
inc
add
aad
pop
add
aam
push
lret
std
pop
mov
or
fsubs
mov
dec
sbb
add
pop
loop
jmp
push
rorl
pop
sub
jae
mov
add
push
loopne
push
or
add
cld
mov
jge
loopne
and
aas
dec
orl
repnz
out
dec
adc
jecxz
sub
jmp
js
dec
xor
fiadds
in
aad
stos
add
bound
cltd
pushf
pop
pop
inc
into
sub
leave
cld
imul
and
aad
iret
or
add
test
xor
std
add
push
call
sub
or
dec
cli
jmp
filds
subl
add
add
xlat
fisubs
adc
or
sub
das
push
sub
jmp
xchg
and
add
out
cmp
jmp
mov
jg
add
faddl
test
add
or
jmp
and
xor
cmpl
jge
xor
cmc
sub
sub
testb
dec
add
add
cmp
lods
shll
testb
stos
cmc
cld
scas
decb
stc
mov
inc
add
pop
testb
outsl
jge
add
scas
add
mov
stc
lods
shll
test
subl
stos
cmc
mov
int3
cld
ljmp
popl
aad
jg
or
loop
sar
dec
repz
fmuls
sbb
pusha
jg
push
imul
jg
pop
imul
jg
imul
xlat
pusha
inc
sbb
jmp
dec
ljmp
xchg
xchg
in
test
cld
decb
sub
push
xlat
mov
filds
ds
or
add
testb
cli
add
or
pop
pand
pop
decl
pop
fdivr
arpl
dec
mov
xchg
repnz
mov
add
or
pop
inc
xorb
stos
fidivrl
fs
or
pop
aaa
or
xor
aad
fs
push
mov
jae
jae
imul
stos
pop
push
push
pushf
or
shl
push
cmp
out
aad
add
dec
cmp
ljmp
or
ret
add
jle
or
jb
add
or
nop
inc
cs
cltd
sarb
lret
in
aas
lret
cli
sahf
sub
push
int
mov
pshufw
and
dec
int3
and
das
loop
jmp
pop
enter
dec
ss
enter
or
jg
mov
push
fstl
lret
add
mov
mov
in
add
adc
cmpsl
xlat
cli
call
add
sahf
mov
inc
sub
divl
mov
cmp
push
test
ret
jmp
ja
add
xchg
shl
xchg
dec
or
sbb
push
mov
or
fdivrs
jmp
mov
or
push
testb
or
addl
jl
je
mov
and
int3
inc
add
mov
add
xor
xchg
pusha
xchg
xor
cmovle
fildl
xchg
mov
mov
je
mov
xlat
and
cwtl
cli
lds
xchg
dec
out
mov
xor
adc
xchg
add
es
ss
add
mov
test
push
cli
fwait
jbe
xor
mov
or
mov
scas
and
or
dec
movsl
xchg
sub
mov
rcl
xchg
mov
or
iret
rorl
push
int
or
mov
fbstp
mov
or
add
out
inc
outsl
mov
dec
sub
in
sub
in
and
mov
mov
and
insl
ret
test
notl
mov
in
cs
push
push
xor
aam
pop
int3
fstps
push
push
jecxz
adc
add
xchg
sbb
push
stos
in
es
ret
jnp
xor
dec
enter
mov
adc
add
jmp
xchg
scas
push
test
add
and
xchg
inc
testb
mov
mov
pushl
mov
dec
test
push
fsubs
leave
dec
shlb
stc
add
pop
inc
iret
sbb
and
fisttpll
inc
negb
inc
cli
push
call
sub
add
sbb
adcb
dec
sbb
and
jge
enter
mov
pop
sbb
or
vmwrite
out
push
xchg
inc
adc
xchg
add
or
jmp
jbe
or
jmp
inc
dec
or
jmp
es
or
jmp
xchg
inc
pop
add
cwtl
mov
test
and
bound
out
and
push
mov
pop
gs
and
dec
add
xor
leave
aas
mov
icebp
das
pop
mov
sbb
push
adc
icebp
in
out
jg
aas
pop
imul
xchg
or
out
cli
pop
push
iret
pop
jno
test
ljmp
pop
imul
test
cmp
xchg
leave
ss
ljmp
pop
mov
enter
das
push
cli
mov
or
mov
cmpsb
add
pop
cmpsb
add
cmpsb
add
pop
cmpsb
add
pop
cmpsb
add
pop
cmpsb
add
cmpsb
add
pop
cmpsb
add
cmpsb
add
cmpsb
add
pop
cmpsb
add
push
es
add
push
es
push
es
push
es
pop
es
pop
es
pop
es
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
ljmp
fstps
aad
sar
aam
add
stos
aam
lods
aam
ret
mov
aam
dec
aam
sub
stos
scas
leave
stos
add
mov
stos
sbb
stos
xchg
stos
sub
stos
pop
stos
xlat
stos
ret
sub
dec
sub
pop
sub
cmp
sub
jno
sub
aas
sub
fcmovnu
sub
mov
lret
add
sub
loopne
sub
xchg
shrl
shrl
add
add
mov
add
inc
xlat
cs
xlat
add
ds
xlat
ds
xlat
cs
xlat
cs
xlat
jle
dec
mov
inc
sub
pop
leave
push
setae
mov
fs
in
ljmp
xchg
je
mov
je
xchg
mov
and
cmp
mov
aas
jns
les
imul
xor
rolb
or
mov
pmullw
add
cmp
incl
sub
pop
push
das
xchg
hlt
dec
add
pop
push
out
rclb
push
idivl
pop
sbb
mov
and
xor
adc
mov
and
xor
xchg
pop
cmpsb
stos
or
movb
add
call
add
add
mov
sbb
std
or
push
or
ja
aas
sahf
test
sub
push
test
jmp
pusha
out
jmp
push
ret
bound
and
mov
jmp
mov
ficompl
inc
xor
pop
aas
mov
mov
or
add
xor
adc
insb
inc
xchg
jecxz
fcomp
clc
ficomps
sub
dec
push
in
xlat
into
mov
sarl
cli
push
daa
inc
gs
jl
je
push
xchg
xchg
pop
inc
dec
cmp
add
jmp
loope
mov
or
add
cmpsb
std
add
out
cmp
cmp
je
add
cmpsl
adc
jge
cmpsl
mov
enter
stos
call
and
push
jb
lea
inc
je
cmpsl
aad
insb
xchg
mov
or
test
test
adc
decl
ss
aaa
xorl
in
add
dec
dec
inc
xorl
aad
inc
lods
js
mov
add
cmp
test
jb
cmc
jne
and
mov
inc
loop
pop
pop
cmp
jo
adc
cmc
jne
fsts
enter
pop
adc
or
imul
mov
sub
inc
cli
pushl
dec
ljmp
xor
inc
in
mov
add
call
mov
add
xor
out
sub
incl
add
xchg
or
add
jnp
xlat
push
push
xor
jge
cmc
decl
ss
cli
mov
pop
ss
xor
ljmp
cmc
lcall
inc
dec
push
jbe
cli
and
xchg
sub
out
test
lahf
add
out
lock
cli
adc
adc
scas
inc
cli
add
orl
fcmovu
rcr
cmp
leave
dec
dec
popa
les
mov
aad
in
mov
decl
jecxz
adc
add
fdivrl
and
or
sar
sbb
inc
cmpsb
pop
cmp
fildl
or
mov
dec
test
cmp
popl
add
leave
call
inc
fimull
add
mov
pushf
fcmovu
sti
fs
push
decl
mov
mov
cld
pop
icebp
xchg
cld
aaa
icebp
xchg
mov
pop
cmc
femms
lods
dec
orl
imul
jb
inc
jg
int
sbb
int
scas
mov
xor
jne
subb
jge
add
iret
arpl
out
mov
jp
push
mov
mov
pop
ret
mov
or
mov
adc
int
int3
es
std
xchg
mov
rolb
mov
xchg
dec
dec
sti
test
dec
jnp
popf
and
or
rcrl
mov
cld
mov
fdivrl
test
sub
cmp
daa
or
add
dec
andb
sub
cmp
enter
jae
mov
pop
jae
dec
lods
cltd
pop
rcrb
jae
pop
filds
stos
mov
add
lcall
jmp
jae
pop
inc
out
lahf
sbbl
roll
inc
aas
fstpl
lds
test
lea
inc
shr
dec
mov
test
push
sbb
mov
mov
cmp
add
inc
cmp
cld
jne
mov
inc
fcos
call
xchg
mov
lods
push
call
out
pop
mov
or
not
pop
test
jle
add
add
and
dec
lea
ss
int3
push
lret
call
dec
push
dec
push
cmc
pop
dec
sbb
mov
stos
and
add
test
scas
ss
pop
xchg
test
lahf
mov
orb
add
ret
or
or
shl
loopne
call
adc
pop
ss
mov
mov
dec
add
dec
andl
fwait
and
shll
push
xchg
sub
dec
andl
dec
dec
dec
ds
ss
adc
lahf
pop
jge
repnz
jp
mov
inc
scas
mov
push
cmpsb
int3
inc
fcmove
push
sub
fisttpl
lds
stos
mov
adc
mov
add
add
and
pop
xchg
jb
push
cs
test
jb
jo
xor
cmpsb
push
negb
or
fwait
test
dec
jg
popf
mov
and
xor
push
inc
sub
ret
mov
dec
lret
hlt
stos
xchg
jl
jno
es
jmp
popf
mov
jns
pop
repnz
das
sub
into
add
adc
jo
mov
mov
pop
sub
lret
scas
xor
bound
fdivrs
repnz
aas
stos
push
lods
mov
movsl
out
mov
mov
lds
inc
adc
in
cs
mov
pop
aad
jnp
push
push
rolb
aad
mov
dec
cs
call
xchg
jno
adc
out
add
sub
lcall
scas
cli
enter
aad
dec
mov
pop
or
fisubl
jl
scas
ret
add
mov
push
cli
ror
aas
aad
inc
jae
mov
jno
js
inc
push
pop
push
dec
cli
test
dec
aad
enter
dec
dec
dec
fidivrl
add
leave
call
jbe
add
and
ficompl
out
inc
sbb
dec
pop
lea
pushl
cwtl
jbe
push
inc
out
fldl2t
in
xchg
push
sub
dec
push
out
int
jns
int3
jo
iret
xor
sbbl
mov
mov
dec
sub
notb
icebp
dec
pop
sub
or
out
or
and
xor
outsl
and
xor
movsb
stos
ret
cmpsb
ret
mov
xor
xchg
test
or
test
fiadds
loop
sub
call
rorl
add
lods
xor
jmp
jecxz
mov
or
sub
cmpsl
adc
sbb
adc
xchg
xor
jmp
xchg
mov
ljmp
lea
cmc
dec
enter
pop
aaa
sti
mov
je
mov
mov
test
mov
xchg
add
sti
mov
je
mov
push
les
jmp
mov
push
mov
dec
mov
sar
in
mov
je
push
cli
mov
add
idiv
fwait
jne
add
mov
nop
gs
cmc
push
daa
jno
mov
xchg
out
pushf
inc
cli
subb
aas
aad
or
dec
orb
inc
cli
loopne
inc
adc
xor
jl
faddl
add
pop
jp
xor
inc
mov
dec
cli
and
add
and
push
add
or
jns
xorb
mov
inc
dec
push
popf
data16
dec
scas
push
mov
movsb
jae,pt
push
jae
gs
inc
cli
add
pop
inc
adcl
cltd
add
xchg
movsb
sub
lahf
inc
sub
jmp
aad
sbb
pop
insb
inc
pop
and
les
xchg
dec
pop
xor
push
and
call
sub
bound
sbb
arpl
push
das
or
mov
inc
push
inc
cwtl
inc
add
mov
adc
mov
fimull
ficompl
mov
sub
inc
inc
add
and
cld
aas
jmp
push
jle
test
cmc
mov
mov
jg
add
xor
cwtl
xor
cli
add
jl
mov
inc
jge
pop
xchg
xor
jb
xor
bound
or
test
mov
inc
negb
xchg
mov
cli
push
sub
shll
stc
xchg
mov
cli
out
push
xor
je
pop
mov
or
roll
jmp
xchg
enter
add
ret
enter
mov
mov
int3
jl
push
adc
ljmp
inc
out
cmc
call
out
les
test
loop
cld
lret
shl
rolb
enter
or
adc
addl
clc
incl
lcall
ret
push
mov
test
or
or
push
add
dec
sbb
incl
in
cmc
call
repnz
je
cmpsl
inc
out
dec
cmp
mov
adc
popf
pop
inc
cli
lods
mov
jae
lahf
mov
sti
add
je
stos
adc
loop
test
xor
adc
xor
jae
arpl
sub
sbb
pop
add
add
sub
xorb
push
pop
dec
mov
xchg
and
cmpsb
mov
testl
sub
add
or
movsb
test
push
sbb
add
int
lods
sub
adc
push
aas
or
and
jp
arpl
xchg
xor
aad
mov
inc
loope
jno
pop
dec
repz
add
pop
inc
daa
xchg
xor
mov
inc
cltd
add
shlb
and
das
or
mov
sub
loopne
lds
loope
inc
es
aam
scas
mov
addr16
or
jmp
hlt
sub
arpl
cli
out
add
dec
push
mov
push
xor
xchg
sub
cld
xchg
sti
aas
jmp
loop
dec
scas
add
leave
call
adc
cli
cmp
sub
jbe
das
adc
leave
ljmp
mov
insb
pop
data16
push
add
mov
sub
shlb
rorl
adc
pushf
inc
fstpt
add
mov
push
sub
test
popa
add
adc
add
adc
test
testl
sbbl
push
push
out
divb
xchg
xlat
dec
call
sub
push
out
rcll
sbb
test
xor
cmp
das
int
and
push
scas
dec
or
jo
divl
jp
call
cmp
in
lock
stc
bnd
push
pop
sahf
cs
ss
lret
adc
add
mov
or
scas
ret
cmp
daa
add
xchg
aad
add
lods
inc
xchg
xchg
dec
dec
in
xor
inc
mov
adc
imul
ja
jb
cs
add
add
bound
outsl
int3
mov
lock
inc
lock
pop
or
std
je
mov
jae
mov
inc
leave
out
loope
inc
fbld
dec
jo
lcall
stc
adc
jmp
push
xchg
sbb
pop
scas
movsl
fbld
or
fldt
cmp
daa
call
cmpsb
dec
out
cmpsb
ret
mov
sbb
lock
adc
lret
shlb
dec
fdivrs
adc
cmp
pop
popf
dec
pop
cmpsb
sti
scas
sub
or
xchg
mov
and
rcrb
pcmpgtd
push
sahf
pop
xchg
scas
inc
xor
push
loopne
pop
lret
popl
dec
cwtl
add
nop
xlat
mov
add
aas
sahf
imul
gs
lea
sarl
adc
in
aas
mov
mov
out
pop
sbb
and
das
mov
or
rorl
loope
dec
out
xchg
sub
nop
jge
cld
aaa
dec
call
cmc
mov
xchg
xchg
jno
mov
add
or
mov
mov
cmp
push
scas
loopne
push
xchg
imul
fsub
adc
mov
cmpb
add
push
dec
cli
mov
or
in
jl
cmp
test
cmp
in
pop
cmp
je
in
loopne
or
cmp
xor
scas
push
mov
inc
out
add
test
sbb
add
sbb
jb
jle
inc
xchg
xchg
xor
adc
xor
inc
sbb
ljmp
dec
lret
inc
and
and
cs
aam
inc
jnp
mov
dec
insb
add
aad
adc
jp
addb
mov
imul
mov
addl
xchg
movsl
stos
mov
clc
call
mov
mov
mov
add
add
inc
loopne
adcb
rclb
arpl
aad
shll
and
mov
arpl
cmpsb
mov
icebp
roll
and
shll
loopne
add
pop
push
sbb
dec
lret
in
push
jbe
add
mov
inc
cli
mov
incl
mov
test
dec
arpl
ljmp
mov
dec
fidivrs
push
sahf
popa
and
cmpsb
dec
adc
push
ret
jmp
jb
add
mov
and
dec
into
adc
xor
jmp
add
test
jp
dec
orb
jecxz
and
call
stc
mov
mov
jae
addb
insb
sub
cli
jmp
stc
and
jmp
movsb
push
outsb
jae
push
add
add
popf
cli
ljmp
jae
outsl
fldt
sub
cmc
adc
cmpsl
dec
push
mov
mov
je
or
pop
add
fcmovnu
cmc
test
add
insl
outsb
xchg
sub
lea
cmc
into
insl
mov
pop
cmc
ja
xchg
cmp
mov
xor
xor
pop
fdivrs
rolb
loopne
mov
add
mov
out
lahf
xchg
and
mov
or
out
or
cli
pop
rep
sub
add
mov
shrb
test
mov
add
incl
sub
cmp
mov
mov
xchg
aad
mov
fwait
mov
add
xor
cs
jae
push
dec
dec
mov
stos
mov
jae
or
jnp
add
add
stos
or
xor
cmpsb
pop
and
leave
push
dec
dec
xor
test
xchg
test
inc
inc
cmp
dec
icebp
shlb
ljmp
cmp
xchg
in
lock
aam
jmp
cltd
stos
xchg
cwtl
sub
dec
pop
cmp
sub
nop
push
movsb
mov
aas
add
add
mov
shrb
lcall
test
sbb
repnz
mov
pop
daa
jl
add
and
pop
push
dec
adc
add
cltd
daa
xor
ret
aam
mov
cmpsl
es
jb
shlb
sub
push
jg
shll
xor
sti
xchg
add
lea
out
jp
cli
das
clc
mov
test
fisttpll
push
cmc
lahf
jmp
mov
xor
push
push
push
push
add
imul
js
idiv
cmc
push
repnz
test
insl
or
mov
fnstcw
sub
jp
sub
pop
int3
pop
mov
adc
xchg
mov
sub
dec
push
inc
mov
add
pushf
inc
cld
xchg
lret
mov
inc
lea
dec
push
aam
mov
test
aad
pop
mov
idivl
cs
hlt
push
adc
shrb
xor
jb
inc
lea
add
aad
repz
xor
lods
xchg
mov
or
add
add
aad
repz
fwait
out
or
add
aad
push
hlt
stc
mov
test
xor
test
push
cmc
push
pop
fcoms
rcr
xor
adcl
mov
std
adc
stc
loop
push
aad
add
xchg
xor
sti
lods
or
pop
mov
insl
scas
cmpsb
mov
leave
jge
push
dec
inc
fiadds
xor
add
pop
push
test
fldcw
arpl
jge
sub
inc
nop
outsb
dec
sbb
jl
and
repnz
stos
das
pop
ret
or
xchg
sbb
repnz
sbb
jge
adc
pop
lret
mov
push
xchg
or
xor
mov
fsubs
sbb
push
fmul
call
add
or
enter
mov
sub
pop
cli
inc
out
out
les
or
icebp
stc
sbb
sub
mov
adc
roll
jns
or
jmp
add
sbb
or
mov
idivb
adc
inc
mov
je
add
push
sbb
add
and
add
fsincos
jmp
int3
dec
ljmp
adc
loop
mov
cmc
push
xchg
stos
cmc
std
mov
push
leave
aas
inc
sub
cmp
push
push
inc
ljmp
jo
inc
cli
add
mov
push
jbe
stos
mov
insb
jle
add
add
add
outsb
mov
dec
idivl
add
mov
inc
in
scas
cld
test
mov
or
cmp
idivl
mov
or
inc
xchg
rcrl
xchg
dec
sub
sahf
mov
xchg
js
pop
add
add
cmp
shll
xlat
xchg
aam
mov
test
inc
or
in
pop
jae
stos
les
fsubp
mov
pop
outsb
sub
xlat
les
dec
imul
sub
divl
in
add
mov
fildl
pop
add
loop
sub
push
into
fsubr
adc
push
cmp
add
and
das
push
jo
fiaddl
add
loop
adc
pop
clc
adc
ficomps
sti
sub
pushf
adc
add
sub
sub
sub
mov
or
mov
fcom
cmpsl
dec
mov
fistl
inc
jmp
out
mov
leave
flds
add
mov
ja
nop
inc
loope
push
add
sbb
adc
or
into
dec
sbb
fsub
sti
aas
jmp
push
sahf
inc
bound
xchg
jl
pushf
or
lahf
addl
xor
es
mov
std
cmp
cmc
jno
or
fcmovnbe
adc
in
cmp
pop
pusha
roll
add
clc
pop
add
call
adc
lds
out
cmp
addl
mov
jb
out
lock
cld
fistl
jl
addb
push
leave
outsb
adc
jns
movsb
mov
adc
jae
add
xchg
ds
xchg
cmp
xchg
ds
ja
mov
sub
push
out
notl
aas
add
popw
xorl
add
mov
icebp
mov
movsl
ret
fists
fadd
pusha
incb
imul
jae
push
into
out
push
sub
dec
or
icebp
test
es
insb
jle
and
add
filds
push
jne
mov
sbb
cli
call
add
movsl
and
or
xchg
mov
ds
and
gs
add
pushf
icebp
out
enter
or
xor
call
inc
mov
add
adc
mov
mov
insl
mov
add
mov
xchg
jle
mov
fidivrl
sub
xchg
adc
out
test
xchg
adc
mov
and
adc
dec
jmp
sub
dec
enter
inc
sub
sti
stos
dec
loop
xchg
sar
xchg
adc
inc
enter
sbb
mov
push
mov
mov
or
sbb
movsb
lods
adc
lods
mov
xchg
add
leave
lret
cld
lods
mov
call
jmp
mov
push
adc
in
push
add
out
adc
pop
mov
adc
test
push
icebp
adc
rcll
je
sub
jae
pop
and
fstpt
call
mov
dec
add
push
mov
mov
or
add
xchg
imul
shrl
inc
jb
xor
loope
push
imul
pop
jle
inc
or
jge
push
je
aaa
inc
add
push
jae
lods
jo
pop
daa
fsub
lds
cmc
test
aaa
push
xchg
inc
loopne
mov
call
or
call
add
cmp
adc
and
sahf
fsqrt
inc
mov
mov
frstor
cwtl
add
and
mov
add
mov
out
mov
add
add
and
sub
repnz
test
mov
push
gs
cli
pusha
and
out
jle
cli
lret
cli
ret
xlat
xchg
cmpsb
add
mov
jbe
adc
and
popf
mov
lods
sub
dec
aas
and
push
into
push
out
out
and
pop
fs
xorb
add
or
iret
dec
imull
or
fiaddl
jp
pop
or
add
jl
repnz
call
sbb
test
sar
mov
dec
dec
cli
adc
jp
adc
adcb
adc
add
mov
insl
rol
and
scas
adc
push
xor
jne
or
add
in
sub
adc
jns
sbb
dec
xchg
outsl
adc
sbb
adc
insb
jmp
adc
xchg
test
sbb
and
and
pushf
add
sbb
adcb
addr16
or
mov
idiv
push
mov
mov
rcll
sub
dec
rcll
out
mov
cli
repnz
pushf
push
loopne
add
out
dec
dec
xchg
jmp
addl
adc
imul
or
out
daa
inc
jecxz
adc
jno
cld
into
mov
push
hlt
std
xor
orl
mov
jae
mov
push
enter
add
test
inc
stc
out
stc
in
push
orl
push
cmp
jnp
lock
mov
jmp
add
sub
dec
insl
xor
cmp
dec
cwtl
cli
orb
and
sbb
fs
xor
mov
ljmp
sub
js
jae
aad
add
xchg
sbb
add
add
pop
clc
adc
loopne
jg
adc
mov
push
sub
sub
push
mov
pop
mov
cli
loop
sub
test
xchg
inc
fildl
sub
push
pop
sti
mov
scas
aad
aaa
lods
push
sahf
sub
add
sbb
je
xchg
add
xchg
sub
add
add
jle
das
xchg
adc
fidivrs
iret
and
test
adc
shl
pop
push
aad
cwtl
mov
cltd
test
add
adc
or
cmpl
and
or
aam
loop
repnz
incl
in
add
mov
and
add
cmc
fists
xchg
test
decb
cwtl
sarb
jmp
mov
cwtl
jp
jns
pop
pop
test
enter
cmc
pop
notl
mov
inc
sub
das
orl
dec
loopne
jl
rorl
lret
or
mov
and
ds
jle
adc
cli
cld
push
cli
aas
jmp
std
mov
pusha
or
aad
jb
fsubs
mov
pop
leave
push
push
out
scas
cmpb
add
xchg
pop
aaa
rcrb
dec
mov
in
mov
ss
adcl
mov
jmp
or
adcb
cmp
push
imul
adc
divb
ljmp
xor
add
add
out
cwtl
cli
add
in
push
mov
add
add
xor
and
je
mov
ljmp
push
es
pop
cs
cltd
mov
xchg
adc
gs
sbb
xchg
add
push
sub
incl
aad
aad
out
push
and
dec
push
mov
loope
es
arpl
cs
loopne
bound
out
dec
adc
mov
sub
cli
adc
outsl
in
xor
cli
cli
mov
add
xchg
dec
cli
lds
ds
jnp
dec
mov
sbb
pop
xor
add
or
ficoml
jle
nop
inc
shl
add
sbb
adc
shrl
inc
xlat
xchg
fsts
movsl
ret
cld
push
add
or
test
pop
or
repnz
sub
xor
mov
push
xchg
sub
inc
outsl
jo
sbb
inc
mov
jnp
adc
jno
fimull
aam
add
aad
in
repz
xchg
fdivl
push
imul
push
cs
mov
cmc
push
test
push
data16
fstpt
pop
fwait
pop
push
push
out
in
ret
jge
arpl
xor
out
sub
mov
roll
stc
into
pop
test
in
inc
or
test
xchg
and
xchg
imul
add
inc
testl
lcall
stc
cld
sbb
lcall
and
and
inc
pop
call
add
pop
dec
adc
nop
icebp
mov
or
ja
cwtl
test
loop
imul
cli
sbb
jmp
dec
call
push
aaa
cmp
mov
mov
lea
and
into
adc
add
cmpb
adc
cmp
push
idiv
and
jae
pop
mov
xor
sub
and
cmpsl
and
ret
jmp
testb
xchg
mov
out
pop
sbb
push
dec
sti
or
std
call
insl
ret
lret
mov
cli
ret
adc
insb
cmp
stos
lock
push
add
push
lods
xor
mov
mov
push
out
push
mov
mov
jb
out
xlat
les
add
xchg
idivl
aad
std
push
pusha
xor
mov
add
incb
andl
lcall
jge
sub
add
push
js
je
or
mov
or
xchg
lds
stos
add
insl
or
xchg
add
outsb
inc
sti
dec
jmp
cmp
data16
xchg
mov
roll
stos
shlb
sbb
add
add
xor
pop
aad
dec
fucomip
sub
xlat
add
dec
xchg
rclb
lcall
xchg
and
lcall
inc
cmpsb
or
pusha
add
insl
std
pop
pop
adc
add
inc
outsl
stc
push
in
pop
mov
sbb
mov
pushf
arpl
jg
push
pop
cli
jmp
xor
pusha
xchg
add
push
push
xchg
fdivr
mov
add
aam
fdivr
xchg
int3
jmp
repnz
sti
mov
std
add
ja
fwait
mov
stc
pop
dec
les
sti
add
pop
mov
addl
mov
cld
decl
test
std
fwait
and
add
pop
xchg
aaa
into
cmc
push
inc
sbb
lret
and
adc
daa
lret
cmc
xor
xor
mov
add
test
call
int3
or
mov
or
add
loopne
add
mov
dec
mov
test
je
mov
testb
loop
inc
push
jnp
lock
sbb
sbb
inc
lret
or
sbb
scas
xchg
pop
sbb
push
or
mov
push
add
scas
out
orb
mov
pop
ss
sub
andb
addr16
fwait
scas
cli
sub
jg
leave
insl
inc
jns
addr16
loope
bnd
test
scas
pop
pop
roll
pop
or
jmp
cltd
pop
cld
push
sbb
xor
stc
pop
leave
fimuls
pop
sbb
add
aad
dec
push
aad
dec
push
aad
dec
sahf
into
pop
pop
and
call
mov
fiadds
add
out
out
mov
test
jp
out
jb
call
push
jecxz
xchg
pop
add
adc
and
add
lret
adc
push
add
insb
add
insb
add
roll
adc
or
sub
mov
mov
mov
jg
jmp
std
dec
divb
incb
inc
hlt
jmp
jge
mov
or
jmp
mov
test
xchg
xchg
pop
dec
adc
dec
pop
dec
jb
call
jle
popa
icebp
lcall
add
gs
push
fistpll
mov
or
mov
mov
mov
incl
mov
push
sub
ja
addr16
mov
push
idiv
addr16
mov
mov
or
scas
or
nop
adc
outsl
sbb
add
cwtl
or
push
pop
push
push
adc
ds
cmp
jecxz
sbb
sub
mov
es
push
cmpsb
and
push
jmp
mov
out
hlt
orb
xchg
pmaxub
cld
push
stos
and
push
loope
cmp
pop
mov
call
pop
mov
xchg
fucom
xchg
or
inc
dec
sahf
or
aam
xchg
in
add
in
jmp
push
pop
add
int
adc
repnz
cli
xchg
incl
cli
xor
movsbl
ficoml
sbb
inc
leave
lcall
pop
adc
test
xchg
iret
repnz
popf
or
adc
add
negb
fistpll
jb
out
mov
sub
pop
jg
add
pop
idiv
ds
adc
xor
dec
cmp
pop
rol
arpl
pop
mov
adc
dec
dec
adc
cmpb
adc
outsl
cltd
ficoml
addr16
out
xor
sub
xchg
pushf
fs
add
into
fstps
stc
sub
dec
hlt
repnz
imul
test
xchg
xchg
jnp
leave
inc
cli
xchg
movl
xchg
stc
bound
incl
push
xchg
push
dec
pop
inc
clc
jb
test
push
xlat
stc
ss
add
dec
push
jb
add
inc
fwait
jmp
in
xchg
pop
or
mov
adc
mov
cmp
mov
push
add
push
add
pop
mov
call
call
xorl
pop
test
xchg
sar
add
divl
sbb
sbb
jns
sub
mov
addl
pop
hlt
add
add
or
add
cmp
jge
lea
hlt
dec
incl
clc
divb
sbb
xchg
idiv
or
vmaxps
dec
mov
add
or
aad
loope
add
add
pop
icebp
mov
call
push
add
push
icebp
aam
pop
and
loop
pop
icebp
std
xchg
clc
jl
stc
add
sbb
add
mov
call
jae
xlat
adc
jne
jno
sbb
jbe
leave
outsl
mov
aad
cmp
add
icebp
std
decl
cmc
out
add
decl
les
lods
lock
mov
or
add
or
test
pop
mov
add
add
shr
aad
jae
pop
inc
or
push
push
out
rcrb
cli
xor
mov
cli
aaa
hlt
aas
jns
sbb
cli
stos
btr
repz
inc
ret
sti
add
pop
push
lret
repz
pop
dec
add
or
inc
mov
mov
push
test
fcomp
repnz
filds
jecxz
sub
mov
in
inc
repz
cli
add
repnz
jecxz
iret
ret
pop
sub
out
test
push
lret
out
dec
psubsw
sub
mov
les
stc
out
mov
pop
push
push
fldcw
inc
add
idivb
jmp
rorl
pop
pop
outsb
push
mov
loope
pop
stc
sbb
shl
stc
push
add
stos
push
stc
lds
ret
lret
pop
test
in
jb
adc
and
adc
add
shl
sti
shr
lods
or
lea
jp
repnz
stc
into
jg
xor
add
dec
clc
orb
dec
or
sub
pop
push
or
rorl
mov
sti
add
insb
ja
call
testl
inc
sbb
pop
insl
pusha
inc
jnp
add
jg
lea
sbb
icebp
test
adc
mov
test
add
jl
testl
cmp
sub
cmc
jnp
jg
pop
cwtl
push
dec
scas
add
mov
xchg
stc
xchg
in
push
int
cmp
loope
or
fnstcw
repz
cmpsl
xchg
aas
ret
std
call
loopne
int3
dec
cs
cmp
insb
xor
xor
ds
xchg
pop
lods
xor
ds
dec
pmullw
add
add
insl
cmp
movq
scas
cli
rorb
xor
or
rolb
dec
or
subb
sbbb
rorl
pushf
negb
js
push
pop
mov
push
pcmpgtd
jl
out
js
push
out
ret
add
outsb
mov
pop
push
clc
or
xor
push
dec
mov
lcall
inc
mov
das
mov
or
mul
mov
push
arpl
mov
ret
cld
cmc
jp
mov
add
repz
in
add
sbb
and
xor
test
loope
ljmp
add
shll
inc
or
pusha
jl
mov
xorb
adc
jo
shll
mov
fidivs
or
or
dec
int
enter
arpl
int
sub
mov
cltd
mov
jmp
xchg
xor
jge
or
xchg
xchg
in
xchg
lret
stc
mov
lret
stc
mov
int3
stc
mov
cmc
ljmp
dec
add
gs
stc
add
cmp
pop
sbb
inc
add
mov
int3
stc
or
adc
inc
jl
add
insb
insl
stc
scas
das
or
lcall
outsl
test
js
imulb
add
dec
enter
cli
cmp
jnp
fstl
cld
or
sar
adc
inc
sub
notb
aad
inc
lret
adc
cmp
and
inc
mov
cld
mov
jnp
mov
jl
stc
in
aam
ret
xlat
dec
movsl
flds
ret
out
pop
and
arpl
sarb
and
arpl
lock
jle
jl
pop
movsl
dec
xchg
dec
lods
flds
test
sub
xlat
into
mov
jl
dec
inc
loopne
pop
test
adc
xchg
xchg
or
adc
or
or
loopne
add
jnp
mov
jecxz
ret
out
mov
into
mov
mov
jp
out
sub
sub
jl
jle
test
adc
xchg
sti
mov
or
sbb
sbb
sahf
or
push
push
fsubp
clc
dec
leave
mov
add
push
mov
add
or
or
outsb
pop
add
scas
add
pop
stc
mov
jns
add
mov
das
repnz
out
je
push
jne
jmp
xchg
mov
cmp
fdivp
es
xor
jle
test
out
icebp
je
pop
dec
or
fsubr
sub
hlt
dec
loope
call
stos
push
xor
mov
hlt
adc
mov
daa
jae
pop
les
push
add
shrb
loope
je
cmpsl
das
dec
mov
add
fnstcw
xchg
inc
fcomps
cltd
xor
movl
or
subb
and
cmp
fsubl
les
daa
push
jno
add
add
adc
fcmove
stc
mov
jp
mov
imul
cmp
loopne
xor
add
cli
mov
mov
jae
fdivs
and
decl
mov
pop
aad
cld
test
gs
test
incl
lea
cli
sbb
ja
mov
int
incl
add
and
sbb
sti
xchg
ja
int
ja
leave
adc
ss
jmp
or
push
repz
lcall
sahf
aad
std
cmpsb
mov
jg
daa
jge
in
add
or
jmp
aad
jmp
push
xchg
mov
push
insb
or
hlt
pop
or
adcb
outsb
cmp
out
and
mov
fsubrl
out
imul
stc
xor
hlt
test
cltd
mov
pop
cmp
out
mov
leave
std
rol
ljmp
inc
repz
adc
jo
or
xor
enter
and
cmp
add
sub
repz
std
lock
mov
sbb
push
int3
pop
je
pop
xchg
sbb
add
outsl
fldl
push
pop
sbb
call
mov
fnstsw
mov
or
jo
in
test
cmp
xor
pop
sub
fldenv
mov
xrelease
mov
xchg
mov
xchg
stc
ds
mov
out
xchg
stc
es
mov
xchg
stc
push
mov
or
orb
inc
push
dec
push
mov
push
add
call
xorl
enter
or
xor
loopne
orb
mov
std
imul
mov
or
incl
or
jmp
std
imul
leave
sti
test
or
add
or
cmp
cmc
ljmp
jle
mov
sbb
add
mov
dec
pop
ja
pop
mov
jnp
xorb
add
aad
mov
cli
jb
mov
adc
cmp
xchg
stc
stc
dec
pop
cld
or
pop
push
add
adc
add
mov
sbbl
inc
add
add
in
sti
or
stc
stc
cli
push
incl
loop
mov
fcomps
xchg
jp
enter
out
jmp
mov
inc
push
dec
add
in
or
or
dec
sbb
pop
loop
aad
out
lock
insb
jmp
ljmp
idiv
dec
jmp
ljmp
sarb
jmp
ljmp
mov
sbb
addr16
or
or
test
pushf
add
pop
adc
or
sub
cld
sub
add
fldcw
test
add
subb
pop
adc
filds
aad
pop
repz
ljmp
pushf
ljmp
popa
xchg
and
out
sub
add
add
cmp
int3
add
out
out
into
or
pusha
and
sti
out
push
loop
icebp
or
out
movl
mov
lock
add
push
jle
pushf
add
stc
orb
call
test
inc
inc
or
lret
adc
add
mov
loope
add
cmp
popa
sbb
mov
jp
std
jecxz
add
insb
or
add
das
mov
add
add
scas
jns
std
and
adc
jo
add
mov
call
add
jbe
cmp
jmp
and
scas
dec
jns
add
dec
or
cld
mov
add
in
sub
jne
mov
out
bound
inc
outsl
lea
stc
mov
cli
stc
mov
out
or
add
aad
insb
or
add
aad
push
push
bound
add
js
push
pop
add
aad
jne
push
jb
add
mov
or
add
aad
mov
cmp
push
xchg
add
stc
stc
and
add
pop
mov
sub
mov
sub
sti
stc
pusha
cmp
in
xchg
fbld
xchg
xor
push
or
or
aad
fs
push
testl
out
in
cld
jecxz
std
jb
jmp
ret
clc
loope
or
add
add
push
imul
arpl
out
pop
cmp
mov
out
fmull
data16
pop
testl
pop
out
dec
lea
fs
or
adcl
xchg
in
cld
add
out
dec
xchg
cmp
out
mov
in
cld
xchg
and
fsubp
add
mov
insb
leave
loopne
insb
mov
or
call
stos
loopne
notb
call
addl
stc
out
or
adc
stc
jmp
jno
xor
or
insb
or
jmp
dec
loopne
loope
or
jo
or
push
fsincos
sbb
jmp
dec
fsincos
mov
mov
push
loopne
in
loopne
xchg
outsb
fs
mov
add
notl
in
add
cmc
cmp
in
sbb
pop
test
fildll
dec
cli
scas
inc
lods
xchg
jge
leave
loopne
mov
jmp
jge
fchs
testl
mov
stc
out
cmc
pop
xchg
cli
cmp
dec
je
xor
lcall
push
dec
xadd
mov
std
pop
loopne
or
or
loop
jmp
sbb
push
push
aad
xor
mov
push
dec
outsb
rcrb
call
push
ss
rcrl
stc
stos
icebp
std
call
aaa
adc
mov
subb
add
repnz
pop
insl
fsincos
bound
in
call
fisubrl
add
xor
inc
jmp
ret
mov
push
xor
push
pop
aaa
lock
cmc
std
incl
insl
hlt
sti
add
mov
or
sbb
mov
mov
orb
arpl
or
mov
adc
or
mov
push
stc
lods
mov
inc
stc
pushf
icebp
addr16
popf
in
stc
pop
popf
or
add
jl
adc
jecxz
mov
pop
lea
negl
push
push
xchg
filds
shll
rclb
out
sub
or
add
lea
aad
data16
jbe
add
in
jmp
dec
or
sahf
in
fs
add
jge
insb
adc
into
jo
insb
mul
stc
jmp
mov
add
ljmp
pop
sbb
fsincos
lea
call
pop
fsincos
es
shll
push
fmuls
add
push
xchg
add
loopne
jmp
lret
call
mov
xchg
call
push
fisubl
flds
test
idiv
std
add
xor
shl
addb
incl
and
call
xchg
sub
dec
notl
gs
test
adc
testl
mov
fdiv
mov
mov
inc
hlt
push
mov
in
cmc
call
hlt
decb
inc
out
jge
xor
testl
aad
std
incl
add
imul
pusha
scas
clc
stc
adc
or
clc
stc
cli
jae
or
sti
ljmp
pushf
fadds
dec
stc
addb
ret
cwtl
mov
pop
mov
call
push
cs
adc
sti
subb
jp
repnz
stc
pop
insl
fsincos
bound
mov
add
pop
add
idivl
repz
inc
daa
sub
or
cmc
fisttpll
out
push
jbe
negl
mov
add
or
pop
add
cld
mov
add
or
cmc
mov
out
movl
insb
cmc
mov
push
arpl
push
mov
cwtl
mov
cmp
mov
pop
jg
cmc
xchg
test
imull
add
or
test
or
faddl
push
push
test
stos
clc
xchg
dec
je
fldenv
or
fstl
pop
in
flds
mov
lahf
arpl
sti
mov
dec
je
or
add
xor
xchg
push
iret
add
pop
mov
loopne
jmp
sbb
sti
inc
mov
nop
jmp
jle
stc
popf
pop
mov
jmp
outsb
loop
push
xlat
or
add
adc
dec
repnz
cmp
mov
decb
or
or
pusha
and
cmc
incl
add
insl
repz
call
lea
pushl
ja
ja
add
shrb
addl
xor
push
jecxz
out
hlt
cmp
jnp
int3
test
cmp
flds
push
jg
mov
push
pop
mov
and
xor
jge
aad
in
stc
aad
std
lcall
sti
dec
fdivrl
out
stc
add
rcll
lret
xor
mov
out
test
lock
or
das
inc
jae
sub
xor
pop
lock
fisubl
out
jae
push
or
xorl
loope
stos
cmp
add
and
xor
push
inc
lock
subb
js
out
jge
add
or
insb
fsub
add
call
repz
faddl
fwait
xchg
push
mov
aad
out
rcll
mov
fsubp
icebp
lock
push
mov
icebp
or
into
std
xor
xor
pop
xchg
leave
push
mov
out
aad
je
mov
int3
das
pop
aam
push
fisubrl
push
fcompl
add
lods
xchg
xchg
out
pushf
fisttpll
and
fdivl
cmp
add
add
test
test
stc
push
loop
fcoms
loope
pop
sub
lcall
sub
stc
loope
push
adc
fisubs
dec
sbb
loope
push
std
loopne
push
push
jge
cs
cmpsb
push
outsl
push
add
ljmp
push
xchg
test
loopne
xor
fdivrp
jbe
xchg
fsub
mov
clc
pop
mov
mov
push
inc
adc
in
inc
test
adc
insl
sub
movsb
std
ret
fnstenv
xchg
movsb
std
rcr
test
mov
hlt
call
mov
ljmp
jecxz
jg
fdivr
adc
imul
hlt
ljmp
xchg
icebp
cmc
pushl
mov
inc
ljmp
add
jmp
out
test
idiv
mov
xor
lea
cmc
call
aas
fsubrl
xchg
fistpll
inc
push
jmp
stc
sub
stc
push
pop
cmp
mov
out
stc
add
push
jecxz
test
out
stc
inc
pop
scas
fdivrl
loopne
sub
push
shl
and
je
insb
mov
ret
stc
or
ret
loop
jmp
adc
jge
stc
fcmovbe
stc
adc
clc
push
out
pop
ljmp
addr16
push
or
int3
mov
add
lods
inc
out
pop
inc
cmp
sbb
cmp
xchg
ret
add
add
cmpsb
add
add
add
add
add
fdivs
sub
add
shlb
cld
xlat
mov
clc
and
in
xlat
mov
pop
leave
jmp
add
or
add
or
cmp
push
and
sar
push
jl
mov
data16
out
dec
mov
add
stc
mov
and
loopne
adc
ds
pop
sar
bound
and
xor
stos
push
aaa
lods
cmp
mov
pop
and
xor
shr
sbb
shr
js
lea
jno
in
add
mov
call
out
shlb
xchg
in
sub
pop
das
sbb
movl
fistpll
mov
in
dec
add
mov
dec
mov
daa
pop
and
cmc
adc
mov
push
subl
inc
push
pop
inc
enter
mov
int3
int3
test
int3
int3
mov
dec
mov
inc
or
xor
add
mov
sub
pop
leave
addl
mov
add
pop
out
dec
movsb
add
in
or
les
mov
int3
sub
int3
int3
aad
in
pop
push
jns
int
cmp
lcall
ficompl
jae
out
dec
mov
fildl
test
mov
dec
roll
jmp
int3
push
dec
or
stc
sub
add
out
inc
jge
mov
xor
mov
dec
pop
push
mov
addr16
inc
add
pop
pop
cld
aad
add
xchg
loop
call
lods
gs
or
xor
stc
repnz
dec
adcl
lret
in
hlt
xchg
rcll
call
ljmp
mov
and
xchg
push
in
add
aad
repnz
pop
subb
pop
outsb
aas
ret
dec
ljmp
out
aad
xor
test
lds
mov
lds
mov
lds
icebp
add
stc
stc
in
mov
cmpsl
add
icebp
or
out
and
outsb
int3
pop
dec
or
add
mov
mov
lock
adc
stc
incl
clc
cmp
add
jp
xor
or
bound
adc
adc
mov
push
push
jbe
mov
fldenv
inc
gs
push
jo
loop
fdivrl
inc
dec
xchg
inc
cld
inc
insb
sar
jo
rorl
jmp
fdivrs
lock
call
lea
push
jb
das
dec
sub
shll
sub
add
adc
aam
or
inc
adc
in
xor
cmp
push
in
push
lcall
fs
mov
roll
test
clc
aas
add
add
lods
push
jnp
andb
enter
add
inc
cmp
clc
adc
mov
push
jecxz
pop
sbb
or
mov
dec
inc
loopne
movsl
rolb
or
out
andl
add
add
imul
aad
ss
popf
mov
and
in
stc
jl
and
jae
ja
jo
and
push
mov
icebp
adc
hlt
dec
rcl
std
call
cmp
les
add
arpl
aad
mov
in
sbb
or
loope
ljmp
ljmp
lret
pop
xor
decb
cmp
mov
or
testl
roll
outsb
inc
loope
mov
jmp
push
sarl
imul
xorb
nop
add
add
stos
sbb
adc
sub
push
xor
push
mov
out
popa
stc
inc
aad
and
jmp
push
add
add
int
les
movsb
jle
sti
lcall
or
loope
movsb
out
dec
add
mov
jge
and
jl
clc
in
jb
add
add
mov
stos
add
sub
dec
add
pop
flds
stc
and
jb
cmp
sbb
in
sbb
dec
cmpl
std
loopne
into
jnp
fists
bound
test
push
or
sti
cmc
pushl
iret
cmp
mov
mov
add
ret
cmp
add
sti
dec
scas
add
or
je
jnp
pop
sub
or
je
jg
inc
je
mov
pop
mov
pop
sbb
cmp
or
popf
idiv
pop
in
pop
jle
stc
mov
int
shlb
addl
not
out
mov
mov
addl
shlb
and
add
sub
test
push
cmp
pop
mov
and
pop
cmp
test
iret
jge
call
aas
cmp
pop
or
sub
push
sub
cli
nop
add
pop
es
xchg
cld
xor
jo
or
xchg
adc
inc
std
call
and
jge
dec
aas
mov
add
lcall
add
mov
push
pop
dec
sbb
jecxz
mov
pop
adc
add
or
lret
jecxz
xchg
in
pop
inc
fisttpll
insl
adc
mov
xchg
aaa
ds
mov
add
pop
cmp
cmp
or
mov
inc
fistpll
mov
mov
int3
mov
cmpps
xchg
sub
mov
mov
push
cld
sbb
push
pop
add
add
insb
int3
push
aam
mov
pop
inc
add
mov
cmp
mov
cmp
pop
cltd
add
insb
push
std
es
loop
or
lcall
add
adc
adc
out
sbb
inc
bound
pop
out
test
lcall
cli
push
int3
ss
and
and
test
or
std
jns
or
int
or
or
jmp
int
test
fdivrs
cmp
cmp
push
ja
stc
add
je
dec
xor
push
int3
test
push
outsl
cmp
add
cmp
lcall
pminsw
stc
xor
and
push
mov
dec
addl
xor
js
in
stc
jl
and
testl
out
imul
insb
add
mov
mov
push
add
insl
cli
add
sti
int
add
idiv
out
ret
add
aad
aas
xchg
idiv
push
les
aad
ret
insl
cli
pop
aam
adc
call
mov
xor
and
push
cmp
jno
inc
das
rcr
jge
lods
mov
lret
mov
or
test
push
inc
or
mov
add
pop
cmc
push
jno
pop
pop
mov
std
call
sub
add
push
fwait
add
lcall
and
les
pop
pop
add
aad
call
aas
push
popa
ret
adc
out
aad
je
mov
jecxz
test
sub
push
xchg
mov
inc
loop
movsb
add
mov
or
mov
or
les
add
jnp
xchg
outsb
push
or
jmp
rcr
pop
sbb
add
lds
cmp
pop
sbb
add
xchg
xor
or
add
ficoml
pop
pop
push
iret
add
in
xchg
xor
xor
call
fildl
stc
dec
push
pop
inc
pop
stc
dec
pop
sbb
enterw
ret
stc
ss
mov
pushf
rorb
mov
sarb
pop
dec
cmp
add
sbb
int
xor
test
test
into
cmp
pop
call
bound
mov
push
sbb
mov
sar
fdiv
mov
out
push
les
sub
pop
das
sbb
add
adc
xchg
cmp
push
lea
fxch
int3
test
int3
int3
xor
cmpb
stc
incl
add
pushl
or
add
out
ftst
testl
sub
imul
filds
test
add
jno
pop
test
loop
jno
nop
aas
dec
ja
pop
mov
cmp
mov
and
sti
xor
ds
inc
push
inc
and
mov
inc
dec
cmp
aas
xor
add
add
outsl
sbb
adc
cmp
dec
pop
xchg
pop
fildll
dec
les
xchg
jl
test
or
jg
mov
call
stos
jno
xorb
sar
call
add
xchg
nop
cmpb
or
mov
std
jnp
inc
insb
jae
inc
jo
inc
movsb
adc
mov
inc
jne
lea
push
xchg
add
sbb
xchg
pop
or
add
nop
push
movsb
or
daa
test
jecxz
mov
xchg
adc
daa
add
or
add
jp
rorl
out
and
inc
add
and
push
sbb
shl
xchg
mov
mov
or
out
aam
cmp
ja
push
sbbl
add
add
xor
les
int
enter
sbb
add
inc
or
adc
xchg
add
push
mov
jmp
xchg
outsl
cmp
lea
fsubs
jb
xor
dec
adc
cmp
fs
ljmp
mov
scas
rorb
test
fildl
in
adc
mov
arpl
pop
or
mov
or
je
lods
jge
or
movsl
jp
push
and
pop
insb
jb
popa
shrl
or
jmp
out
mov
dec
outsl
scas
pop
mov
push
sub
iret
dec
push
mov
push
jecxz
daa
stc
imul
xchg
xchg
sub
add
data16
sbb
sti
insl
push
add
add
cwtl
push
add
dec
mov
shlb
jg
sub
add
cmp
test
jl
lret
adc
push
pop
xchg
mov
pop
mov
shl
call
fisttpl
shlb
inc
cmp
jno
incb
jno
push
xor
and
mov
add
daa
inc
insb
dec
jmp
test
das
mov
stc
mov
or
loopne
or
sar
jb
aaa
sub
dec
mov
add
ds
adc
push
pop
test
sarl
xor
xor
or
inc
cmpl
test
in
lock
or
mov
mulb
pop
add
pusha
ret
jecxz
inc
leave
and
sub
in
pop
cmpsb
cmpl
inc
cmp
out
push
int
mov
aas
out
lcall
pop
inc
or
out
shll
pop
inc
jmp
shl
fisttpl
es
shl
adc
imul
lea
add
add
pop
mov
stc
xchg
sarl
clc
aam
mov
es
push
out
bound
sub
in
sub
in
and
dec
cmp
add
push
stos
inc
test
adc
jno
xor
pusha
bound
or
jo
inc
xchg
push
leave
je
mov
add
or
pop
pop
insb
bound
test
call
fwait
stc
dec
mov
les
add
aas
pusha
jg
std
jbe
sbb
add
clc
add
repnz
jo
jecxz
adc
pusha
mov
pop
jnp
scas
push
jp
mov
and
add
rclb
dec
add
pop
std
imul
xchg
xchg
movsb
jb
add
xor
mov
nop
mov
lds
dec
mov
xchg
cwtl
xor
add
xchg
add
aad
mov
pop
mov
call
mov
mov
dec
popa
fs
xchg
mov
decl
jne
aad
addb
mov
mov
mov
incl
add
mov
mov
loop
jle
adc
add
shlb
cld
or
pop
dec
adc
das
test
aad
mov
mov
das
popf
adc
mov
inc
int
imul
adc
or
fnsave
call
addr16
push
inc
scas
mov
rcr
mov
in
and
sub
push
dec
and
push
repnz
daa
push
push
or
jg
push
outsb
cmp
and
or
sub
inc
or
cs
int
pop
dec
add
stos
pop
aad
out
xchg
inc
movl
dec
xchg
xchg
das
push
fadds
mov
xchg
add
fcmovnb
in
ret
les
ret
jnp
mov
or
push
sbb
testl
xor
jmp
pop
ret
pop
das
ljmp
push
fsts
test
or
bound
test
flds
xchg
dec
pushf
mov
adc
out
icebp
pop
add
dec
jmp
mov
stc
jno
add
jne
pop
add
xlat
ja
add
add
add
mov
xchg
cmp
add
sub
mov
add
pusha
daa
mov
jl
push
jae
jmp
adc
mov
js
push
fldl
inc
and
aas
pop
inc
adc
pushf
fcomip
cmc
sbb
bsr
imul
add
popa
xor
loopne
jmp
stc
pop
loopne
inc
je
stc
addr16
lcall
add
ds
cmp
es
push
sub
jecxz
std
test
idiv
cmp
xlat
bound
test
idiv
and
jg
ret
mov
xchg
sar
xor
bnd
aam
xchg
sub
add
mov
jno
add
inc
pop
pop
imul
xchg
xlat
add
out
test
shll
cmp
xor
mov
xor
mov
inc
icebp
cmp
dec
stos
test
lds
bound
or
mov
mov
jecxz
pop
test
add
shrl
out
jle
mov
mov
mov
daa
push
mov
sti
jl
adc
mov
mov
jo
flds
pop
jge
loop
cmp
subb
pop
inc
fistpll
arpl
out
xchg
dec
fildl
push
or
jl
add
pop
xchg
adc
mov
add
pop
into
adc
mov
inc
adc
mov
jno
mov
cs
add
int3
sub
movsl
test
cmp
stc
jge
inc
push
bound
sub
out
aam
rcl
idivb
xor
imul
xor
push
add
call
mov
les
add
add
xor
int3
je
and
cld
addb
inc
and
leave
mov
jl
xor
aas
xor
or
add
push
or
idiv
sbb
push
pop
out
mov
mov
idiv
cmp
mov
int3
test
int3
int3
push
xor
mov
mov
mov
add
mov
lods
or
add
mov
push
add
ret
or
ss
aad
sub
sub
add
sub
pushf
into
and
out
inc
and
jns
add
adc
push
mov
sub
jge
mov
sub
dec
sbb
sub
leave
xchg
jbe
add
rcll
jecxz
loop
js
push
int3
push
adc
out
test
or
add
outsl
inc
sbb
mov
ja
decb
inc
ret
pop
leave
mov
testl
mov
stos
mov
sbb
iret
inc
aad
cmpsl
aaa
rorb
out
adc
mov
cmc
dec
out
xchg
push
in
add
or
mov
add
cmp
js
adc
mov
or
in
pop
xor
or
jecxz
inc
mov
int3
adc
adc
lea
out
aad
outsb
loope
leave
test
dec
add
add
test
cmc
jnp
call
adc
pusha
pop
out
aaa
loope
je
sti
inc
sub
sahf
and
bound
add
pop
and
pop
jle
stc
bound
mov
out
lret
or
jmp
xor
mov
movsb
sbb
rcrb
lret
add
xor
jno
out
dec
fstpl
or
cwtl
cmp
test
add
dec
sub
dec
call
aaa
sti
daa
addl
push
filds
pop
imull
sub
ret
inc
sub
inc
mov
or
jae
or
mov
loop
in
lret
int3
int3
dec
xor
mov
jl
cld
idivb
xor
adc
pop
cmpl
testl
cld
mov
cld
scas
jge
incl
add
add
aas
inc
add
aad
jp
out
std
jl
mov
add
mov
hlt
xchg
cltd
jnp
in
inc
add
sub
cmp
xchg
xchg
jnp
or
dec
cmp
out
roll
jne
cmp
aad
std
call
out
pop
add
cmp
inc
add
cmc
adcb
std
call
sbb
sldt
aad
test
in
and
or
or
repz
ljmp
test
or
sti
push
pop
iret
add
xchg
repz
mov
or
scas
sarb
xor
xor
or
sub
or
jp
adc
add
pop
push
mov
sbb
insl
inc
rolb
aad
mov
inc
in
negb
add
aam
out
aad
pop
repnz
stos
repz
fwait
add
xlat
enter
rcll
out
aad
xor
sub
mov
sbb
or
fcoms
push
ds
div
sbb
test
xchg
pop
dec
sbb
dec
add
decl
test
add
rorl
push
push
jge
popa
mov
hlt
int3
mov
pop
mov
jmp
aaa
sub
ret
mov
push
xor
loope
pop
clc
sub
add
cmp
imul
aas
fnstcw
sub
jmp
daa
jne
lds
imul
lea
out
popf
mov
adcl
xchg
int
adc
sbb
add
scas
add
sti
mov
loopne
ljmp
mov
mov
adc
sub
or
mov
adc
sub
mov
je
xor
xchg
pusha
dec
add
imul
mov
jmp
out
and
lcall
lret
add
mov
jecxz
js
mov
mov
mov
cmp
daa
icebp
fcomi
lret
test
leave
jne
mov
push
std
in
and
and
ret
cmpb
hlt
addl
std
clc
adc
jge,pt
mov
movsl
jge
add
dec
push
add
add
lds
adc
adc
sub
in
jmp
add
lods
dec
push
add
pop
xor
dec
pop
out
pop
push
iret
jp
adc
test
test
add
add
hlt
push
or
pop
add
js
fiaddl
jp
mov
stos
add
fsubrs
stos
and
shr
pop
ret
cmp
out
pop
inc
out
js
jmp
add
lahf
out
or
rcrl
add
or
push
in
sub
pop
in
jno
mov
push
add
sbb
jmp
push
adc
out
rorb
add
outsl
dec
adc
rorb
add
jecxz
jge
add
xchg
or
insl
aaa
add
jmp
and
test
lahf
add
push
sbb
bound
jo
dec
subl
scas
mov
stos
stc
add
mov
mov
mov
jl
sbb
or
mov
jno
inc
hlt
mov
xor
pop
push
mov
test
mov
or
add
add
sti
adc
pop
test
or
add
inc
inc
mov
leave
addl
jnp
mov
test
jl
orl
shll
adc
cmc
xor
aad
ljmp
jne
std
sbb
lret
pop
push
in
loopne
push
or
add
lahf
dec
in
jb
dec
push
sti
mov
push
fstpl
rorl
or
jae
aaa
push
hlt
dec
out
test
mov
mov
aad
mov
cmp
dec
fidivs
sarb
cmpl
adc
xchg
faddl
aad
std
rcl
std
call
xor
aad
out
add
cli
bound
out
scas
lods
out
push
cmp
add
mulb
xchg
or
jns
sbb
dec
mov
lods
cmpsl
push
lret
pop
inc
jmp
sahf
aad
lret
imul
sahf
jecxz
sti
pop
push
mov
add
pop
push
lods
xchg
xor
incb
aaa
jb
adc
out
aad
sbb
pop
cmp
mov
mov
dec
add
int
xor
add
jle
mov
popa
inc
hlt
rclb
in
dec
push
clc
out
mov
jmp
jmp
shrl
enter
or
jmp
or
cmpsb
or
jmp
or
push
cmpsb
add
push
imul
insb
in
in
jmp
sub
adc
add
pop
dec
hlt
jb
ljmp
js
dec
add
nop
push
adc
dec
xor
bound
xchg
mov
mov
push
clc
cmpl
add
cmp
jb
popa
aas
adc
add
pusha
add
clc
ja
sbb
cmp
add
in
cmp
add
add
dec
clc
mov
or
push
inc
push
and
cld
mov
mov
or
add
adc
jle
add
notb
fbstp
add
aad
inc
cld
aad
orl
and
int
hlt
jl
int
pop
clc
dec
jle
or
adc
cmc
add
push
out
sub
xchg
adc
dec
in
mov
xchg
idivl
xor
mov
aas
mov
add
mov
add
mov
test
cltd
mov
sub
pop
repnz
std
call
mov
cmp
jecxz
jl
or
adc
or
jne
test
rcrb
movsb
fwait
mov
cmp
imul
push
lret
sub
or
add
adc
mov
aad
out
pop
push
out
ret
out
pop
dec
out
mov
lahf
sub
push
daa
jecxz
fmull
dec
add
or
mov
xchg
xor
pop
dec
fisttps
into
add
add
fisttpll
add
push
and
leave
lea
lds
or
adc
add
or
test
insl
in
out
cs
call
or
aad
es
rclb
add
movsl
add
pop
movb
xor
bound
aam
stos
push
lret
or
mov
std
jp
pop
sbb
add
mov
leave
fimull
push
push
mov
xor
into
jecxz
cmp
add
out
outsl
jbe
or
push
xchg
out
call
jne
push
call
cmp
add
into
jecxz
scas
outsl
sti
call
std
je
cmp
ljmp
out
test
add
cld
xchg
cmp
xchg
dec
dec
add
add
jmp
add
cld
int
add
sti
call
addr16
jnp
mov
mov
and
scas
jl
mov
pop
test
adc
add
stos
outsl
mov
jg
ds
insb
add
fcoms
pop
lret
jnp
and
std
call
adcb
pop
scas
jge
incl
add
jecxz
std
fidivl
scas
push
aad
mov
lcall
cmp
rcl
push
add
mov
dec
icebp
cmpsb
les
daa
les
in
les
pop
les
shrb
push
aad
out
push
sahf
outsb
dec
lods
sub
adc
aaa
lods
in
mov
mov
push
mov
and
mov
f2xm1
sub
faddl
aad
orl
icebp
or
inc
or
jg
movntq
fcompl
mov
adc
jo
or
adc
fstps
mov
jae
call
lds
xchg
lock
int
stos
fiaddl
bound
push
and
iret
mov
dec
dec
fs
or
fwait
stc
mov
push
hlt
imulb
add
xchg
or
jmp
test
push
in
push
dec
add
movsb
outsb
lret
push
push
cld
jmp
or
lahf
fsubs
int
cwtl
and
icebp
pop
ss
ljmp
test
stos
cltd
and
add
aaa
or
inc
dec
aas
jo
loope
mov
mov
add
dec
pop
jb
push
or
lods
or
sbb
adcl
add
push
push
lock
dec
add
add
inc
aam
inc
push
mov
add
mov
mov
dec
test
or
push
push
repz
cld
or
adc
outsl
push
push
or
add
aam
cmp
or
or
aad
cmp
cmpsl
lldt
mov
inc
xor
or
call
sub
pop
mov
call
sbbl
xchg
sub
jle
push
out
xchg
imul
in
xor
fmuls
or
add
aad
imul
in
test
sbbl
adc
std
call
jecxz
test
pop
fidivrs
icebp
stos
or
or
push
inc
adc
or
sub
push
mov
das
les
jecxz
xor
mov
xchg
out
aad
data16
cltd
or
jg
adc
add
push
in
add
push
sahf
pop
mov
jo
insl
or
insl
mov
xchg
xor
enter
sarl
repz
push
dec
jno
pop
dec
stos
xor
iret
stos
xchg
or
add
mov
xchg
ljmp
xchg
in
scas
insl
xlat
push
data16
or
push
popf
add
push
dec
or
adc
bound
add
mov
std
rcrb
pop
or
test
mov
mov
out
pop
add
adc
stos
push
test
rolb
dec
hlt
push
lahf
call
pop
push
xchg
psadbw
sbb
xchg
pushf
ss
vpmulhuw
sti
xchg
outsl
xlat
sti
add
add
push
flds
cld
or
mov
push
inc
cld
ja
lret
loopne
inc
faddl
pop
or
hlt
cmpl
xor
fcmovbe
roll
adc
scas
push
cmp
mov
pop
idiv
cmpsl
inc
test
lods
jmp
cld
jl
test
add
dec
pusha
sbb
inc
fsubr
test
inc
cmp
dec
clc
add
notl
jl
ret
aad
movsb
jns
repz
xchg
mov
mov
loope
inc
in
mov
decl
adc
fs
imul
xlat
mov
jl
xchg
std
jae
pop
dec
in
scas
addb
ds
pop
out
cmp
and
jge
pop
std
jb
daa
inc
fs
jmp
aaa
add
sbb
cld
jge
jne
stc
push
lret
adc
push
loope
add
add
mov
aad
orl
aad
fs
adcl
out
mov
xchg
push
lcall
push
dec
inc
xchg
push
cmp
lcall
cld
or
xchg
test
add
hlt
mov
cmp
dec
dec
dec
jnp
add
fs
test
out
sbb
outsb
inc
cmc
ret
aad
out
adc
aaa
jg
dec
pop
push
repz
jg
decl
out
adc
jo
sbb
mov
jge
sub
test
or
out
pop
add
enter
or
push
popf
add
rcrl
test
add
lock
or
test
test
push
in
pop
adcl
sbbl
sbb
shr
call
es
test
loope
pop
icebp
icebp
sbb
add
add
xchg
adc
push
orl
ss
add
inc
cld
cmpxchg
std
cmp
jg
pop
push
add
mov
add
add
push
mov
add
fbld
xchg
add
mov
dec
add
lret
loope
stos
adc
mov
xor
inc
dec
cmp
call
mov
mov
push
lret
loopne
fcoms
out
iret
or
xor
stc
jl
lret
loopne
fmuls
mov
adc
mov
mov
add
inc
hlt
push
stc
adcl
stc
sbbb
lcall
ret
sub
aam
sbb
mov
movsb
inc
in
outsb
leave
mov
push
add
mov
or
leave
loope
adc
loope
enter
test
sub
mov
push
jl
mov
js
std
xchg
sti
shll
add
std
call
and
cld
aad
sbbl
int3
pop
in
pop
mov
mov
dec
out
int3
pop
movsb
jl
lods
loop
adc
imul
out
or
sub
push
ds
cmp
int3
push
fwait
int3
pusha
lods
int
enter
test
test
sbb
in
add
jne
or
int3
pop
mov
push
dec
repz
add
into
into
add
subb
lcall
sarb
mov
push
scas
outsb
mov
out
inc
inc
gs
sbb
call
or
outsb
or
xchg
stc
jbe
or
or
or
xchg
cltd
sbb
shrl
scas
or
or
jg
add
adc
dec
cs
call
push
leave
je
lods
cmpsb
insl
sarb
outsb
and
or
push
xchg
add
pop
add
add
bound
loopne
push
lret
or
add
mov
orl
stc
ljmp
loopne
pop
dec
and
aas
inc
jg
stc
mov
add
cmpsl
aad
mov
add
add
cld
or
rorl
addl
add
ja
mov
leave
gs
hlt
cmp
fistpll
nop
aas
in
add
or
mov
inc
cld
aaa
push
lret
loopne
push
inc
das
enter
es
call
mov
xor
dec
mov
jns
push
sub
add
mov
aas
hlt
push
gs
addb
ret
out
sbb
aam
aam
xchg
mov
sarl
inc
jns
icebp
pop
loop
push
cmp
loope
lcall
fs
test
sbb
mov
xlat
jp
leave
loope
or
aam
std
xchg
mov
cld
aad
jns
or
add
add
pop
in
lahf
mov
lret
inc
out
fcompl
jl
scas
loop
lcall
add
test
test
cmp
enter
pop
sub
sub
pop
cmp
dec
pop
std
add
jno
or
int3
pop
mov
pop
dec
xor
lock
add
int
add
subb
mov
add
or
mov
idivl
scas
dec
inc
and
add
add
test
fldcw
test
pop
cli
jl
insb
mov
out
dec
dec
scas
aam
call
ror
je
cmp
cld
jmp
or
aaa
rcll
int
xchg
adc
icebp
ss
ljmp
enter
mov
or
dec
or
movsl
add
call
or
xchg
or
inc
sar
mov
fucomi
mov
xor
xor
and
add
mov
or
jl
add
icebp
sub
ljmp
xor
outsb
movl
sub
add
mov
cltd
and
aas
shrl
mov
pop
orl
fcmovnu
cmp
jne
mov
and
addr16
inc
mov
ret
enter
ja
out
cmp
mov
adc
xchg
repz
xchg
mov
jne
adc
insl
xchg
xchg
dec
xchg
or
js
aad
aaa
aam
scas
add
add
sbb
aaa
hlt
dec
ficomps
inc
aad
cmpb
mov
std
call
mov
xor
repnz
decl
fwait
xchg
das
aaa
lock
pop
xchg
rcl
std
call
cmp
ljmp
andl
and
cmp
imul
or
mov
or
add
add
push
in
push
mov
mov
jo
lea
cmpb
push
inc
ficoml
lcall
bound
jl
stos
fs
leave
loop
cmp
in
cmpb
fwait
fwait
add
add
push
jg
sbb
outsb
push
or
dec
pop
cmpl
xchg
cltd
jo
cmc
andl
add
shl
call
dec
xlat
dec
test
cltd
cmpsl
or
or
jmp
xlat
dec
test
cltd
cmpsl
sbb
xchg
aad
rol
std
test
lret
fs
inc
jmp
fs
shr
or
jmp
popa
mov
es
or
or
jmp
aaa
push
jnp
roll
test
or
out
add
test
cmp
sarb
mov
aam
jge
stc
sbb
add
inc
sbb
dec
adc
stos
dec
sbb
mov
adc
and
pop
xchg
jbe
call
idiv
mov
outsl
push
ret
addl
inc
call
mov
adcl
movsb
cmc
adcb
outsl
cmp
adc
add
out
cli
cmp
push
mov
mov
xor
lcall
cmp
add
stc
mov
jecxz
cmp
xlat
std
jae
testl
loope
xor
pop
mov
push
loope
xor
jl
or
sub
or
sub
popf
test
fwait
call
test
add
fisttpll
int3
in
add
xchg
movb
mov
pop
cld
push
popf
pop
dec
aas
mov
frstor
inc
sar
faddl
test
mov
idiv
mov
mov
aam
cs
lock
or
add
std
pop
dec
int
xor
or
or
push
cmp
mov
std
into
sbb
movhps
add
mov
mov
pop
dec
in
loop
lods
clc
jp
xchg
inc
out
add
or
xchg
inc
out
add
push
fidivrl
stos
daa
xchg
ljmp
mov
adc
out
adc
xor
mov
xor
pop
xlat
mov
psrlw
add
arpl
fs
add
mov
cmc
push
aaa
xchg
pop
bound
xchg
xchg
ss
bound
mov
es
pop
jb
das
mov
jle
into
call
into
mov
jg
inc
jle
decl
outsb
into
jmp
jnp
push
jno
ljmp
into
jnp
into
lcall
inc
into
incl
add
and
into
ljmp
cmp
jge
cmp
loop
cmp
or
cmp
xchg
mov
add
mov
add
cmp
and
mov
add
mov
add
mov
add
mov
add
lcall
js
cmp
dec
lcall
div
pop
test
or
adc
rolb
inc
xor
je
in
jl
sub
push
orb
dec
sub
daa
inc
and
into
sahf
rclb
add
call
mov
roll
aas
pop
pop
pushf
std
lret
sbb
enter
enter
enter
mov
pop
cmpsb
add
push
dec
sub
stc
stos
jae
jl
add
scas
or
dec
arpl
push
jp
stc
aad
lar
stc
aad
notb
stc
aad
lar
stc
aad
xchg
adc
hlt
pop
into
or
add
adcb
shl
cmp
loope
data16
in
and
nop
xor
out
aad
loop
xlat
or
inc
loopne
scas
sbb
add
mov
int3
or
adc
mov
mov
mov
andl
lds
dec
cltd
les
xchg
or
mov
rorl
push
add
mov
outsb
cmp
and
pop
fdivrp
in
outsb
mov
or
insb
cli
sub
std
mov
xlat
cmp
add
jecxz
push
jmp
cmp
sarl
std
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
mov
mov
std
mov
popa
or
add
add
or
add
scas
push
inc
or
add
icebp
cmpl
ud1
call
push
loope
mov
imul
ret
mov
jg
lods
mov
paddsb
inc
or
xor
rep
jge
ret
mov
add
jp
lods
or
mov
dec
call
add
or
adc
push
insl
or
add
adc
add
stos
or
add
mov
add
stos
or
mov
mov
add
stos
or
xorl
mov
add
stos
or
mov
cmp
subl
sub
cmpl
cmp
and
not
sub
add
and
not
cmp
add
not
sub
add
cmp
jge
arpl
push
or
insb
test
adc
push
xlat
or
adc
cmp
jo
sub
adc
lods
pop
mov
insl
test
int3
repnz
or
test
add
xlat
cmp
dec
mov
push
out
sbb
mov
jl
and
sub
cmp
sar
or
push
sub
sub
movsl
sbb
ljmp
sub
imul
stc
jmp
aad
stc
sbb
mov
test
sbb
push
add
scas
or
jb
xchg
sbb
add
xchg
or
sub
mov
test
and
sub
sub
jmp
push
and
test
push
ret
mov
jmp
push
and
test
imul
or
add
addl
icebp
mov
add
ret
in
je
std
pushf
je
cmp
in
lods
testl
icebp
test
inc
jl
cmp
add
idivl
fadd
daa
push
jns
mov
add
lods
stos
testl
mov
push
inc
cmp
or
add
pop
or
add
mov
or
add
ss
scas
inc
call
add
cmp
aaa
les
mov
sti
pop
sub
mov
test
add
stos
sbb
je
sbb
std
call
mov
inc
add
mov
adc
mov
stc
aad
std
test
in
and
jo
jmp
jl
sbb
xor
fs
mov
add
add
inc
pop
jp
shlb
mov
fisubrl
incl
add
jp
lock
test
aam
add
or
aam
sahf
ljmp
out
aam
sahf
lret
movsl
jl
out
test
push
sti
mov
sub
inc
pop
shl
pop
pop
mov
xor
push
add
push
cld
test
out
aad
sti
js
xor
add
bound
cmp
js
sub
add
and
aad
sti
or
cmpsl
add
dec
aas
hlt
testl
add
jle
jg
inc
or
jmp
test
shl
cmpsl
or
loope
inc
add
addb
cs
outsb
xor
sbb
adc
cmp
push
pop
mov
xchg
cli
sar
mov
xchg
es
sahf
or
bound
ret
sbb
xchg
or
push
cs
out
es
jmp
fisubrs
je
push
inc
jmp
mov
andl
lods
mov
add
xchg
mov
test
push
adc
int3
test
jl
add
in
sub
add
sbbl
jl
inc
jne
rcrb
push
int3
int3
cltd
nop
in
mov
adc
or
or
mov
adc
jno
negl
adc
int3
fldcw
push
jg
and
call
imul
add
nop
push
jl
push
add
mov
or
dec
pop
flds
add
jmp
je
enter
enter
js
outsb
int
mov
sti
and
decl
fcomps
pop
daa
mov
push
push
add
pop
add
std
and
std
sub
sti
js,pt
sub
sbb
rolb
ret
and
addr16
pop
int
xchg
mov
sti
call
inc
aad
or
add
or
inc
test
ljmp
jo
add
jge
mov
mov
shrb
xchg
stos
or
lcall
negb
mov
and
outsb
pop
mov
out
pop
mov
and
fwait
int3
rorb
out
pop
mov
cld
dec
jge
jle
aaa
testb
neg
jle
aaa
jecxz
xchg
aas
jmp
add
aam
movsl
cld
cmpsl
jb
adc
or
out
xchg
data16
sti
dec
add
and
mov
adc
rcll
stc
jmp
mov
and
mov
add
mov
lcall
push
data16
addl
inc
jns
mov
and
fstpt
push
add
insl
add
sahf
add
fmul
xchg
xor
mov
addb
sub
or
lds
test
insb
test
dec
sarl
cli
mov
pop
sbb
mov
insl
repnz
das
and
sub
mov
outsl
insb
adc
xchg
adc
mov
imul
pop
insb
add
gs
outsl
push
xor
data16
daa
and
adc
dec
popa
push
adc
enter
add
sub
in
push
or
int3
int3
push
adcl
pop
add
xor
aad
xchg
bound
rcr
adc
dec
out
jnp
aad
inc
sbb
jo
sub
dec
jbe
push
xor
inc
dec
fidivrs
add
dec
addr16
jl
std
call
in
daa
and
jg
bound
rcr
adc
pop
jno
call
mov
popa
fs
inc
xor
sub
lcall
adc
jo
jle
jp
decl
adc
jo
mov
adc
int3
and
insb
push
leave
or
add
mov
test
add
mov
mov
aad
in
pop
mov
and
or
jl
xorb
jmp
cwtl
ror
cld
iret
push
int
push
or
sbb
outsl
das
fmuls
out
data16
add
add
ljmp
push
xchg
or
inc
sbb
cmp
arpl
add
popf
sbb
add
sbb
test
nop
mov
lds
add
cltd
push
cmc
or
hlt
out
cmp
dec
insl
pusha
test
mov
xchg
mov
lds
cmpsl
cmp
stc
xchg
das
insl
pop
sub
xchg
mov
lahf
js
mov
xchg
inc
int3
sbb
xchg
inc
int3
sub
int3
pushf
out
gs
jle
dec
in
cmpsl
mov
jb
add
pusha
std
push
test
fldl
dec
mov
lods
adcl
cmpl
ret
mov
rol
jl
lret
cmp
in
or
pushl
inc
or
or
incl
dec
or
stc
incl
push
or
inc
je
pushl
repz
adc
or
add
data16
mov
pop
repz
adc
or
idivb
sbb
mov
test
icebp
or
add
outsl
jp
aam
std
mov
das
add
and
enter
fmul
mov
cmp
gs
cmp
dec
jb
mov
sar
or
and
mov
ja,pn
dec
push
test
movsb
jo
movzbl
in
rolb
jmp
ss
shlb
imul
pop
ja
jne
xlat
mov
xlat
iret
mov
push
sti
test
popa
jne
lret
pusha
std
test
sbb
cld
mov
or
push
pop
ljmp
or
js
jne
push
sub
jbe
mov
add
int3
lea
dec
lea
sbb
xchg
out
gs
popf
xor
fs
xor
idivl
cs
aad
cwtd
ret
ret
add
mov
cmp
add
add
or
clc
mov
mov
outsl
or
mov
add
lret
insb
cmp
mov
add
shl
repz
push
cld
jns
xchg
mov
adcb
fbstp
sbb
imul
in
xchg
clc
int
jns
mov
je
fstpt
div
stc
ret
cmc
bound
or
je
cmp
stc
mov
mov
sub
fildll
mov
push
fcmovne
xchg
mov
fiadds
test
int3
int3
mov
repz
pop
js
push
adc
lock
mov
cs
lret
icebp
test
lcall
jg
inc
insb
icebp
inc
pop
mov
sbb
mov
jns
sti
mov
jg
add
testb
mov
pcmpgtb
in
mov
cld
inc
add
mov
add
mov
mov
int
shrl
xor
pusha
sub
imul
or
das
aad
mov
clc
jmp
in
add
aad
pop
stc
push
and
jmp
pop
mov
pusha
std
in
ret
adc
jmp
mov
sbb
jmp
jb
xchg
xor
add
push
cli
mov
pusha
std
lcall
and
cmp
call
pusha
jb
rcr
cmp
rcl
xor
dec
loope
pop
push
call
mov
int3
xchg
xchg
jl
push
xor
dec
sub
outsb
xchg
fdivrl
mov
xchg
insb
jb
mov
bnd
or
aas
pop
or
mov
add
or
add
add
mov
clc
push
cmp
add
xchg
xchg
pop
hlt
mov
out
pop
jb
push
add
cld
jp
sbb
jp
xchg
mov
add
xchg
faddl
push
das
mov
or
jbe
es
aad
add
add
jno
jb
scas
adc
mov
jmp
mov
add
mov
fiaddl
add
mov
rolb
dec
jmp
jns
sbb
jmp
inc
jno
jb
adc
inc
frstor
mov
stc
jb
adc
sbb
jg
mov
fstps
jo
inc
bound
popa
jmp
cltd
adc
jmp
movsl
ljmp
add
lods
or
rorl
adc
nop
add
stc
jg
and
out
xchg
adc
call
mov
add
or
divb
ret
or
jne
ja
stos
sub
add
pop
clc
scas
jle
or
mov
jle
dec
xrelease
push
push
jl
or
mov
repz
or
jecxz
add
cmc
sti
mov
mov
icebp
jg
lret
mov
pop
hlt
test
lds
pop
sar
adc
mov
ljmp
icebp
inc
adc
pusha
jbe
imul
vmovlps
push
iret
jo
nop
xchg
push
std
lcall
mov
test
cwtl
pop
mov
jp
mov
cmc
jmp
hlt
mov
outsl
std
call
sbb
jmp
xchg
das
idiv
fidivl
hlt
call
pusha
fdiv
pop
or
mov
out
dec
inc
lods
in
add
adcb
add
jno
out
jae
pop
out
push
fsqrt
jns
mov
add
sub
add
adc
lahf
sti
add
push
cltd
mov
out
int
ja
or
js
pop
call
fsts
out
xchg
pop
mov
xchg
jp
lods
icebp
add
cmpb
orb
or
cwtl
lret
out
dec
sbb
add
out
xchg
add
mov
add
popa
sbb
add
sub
or
push
out
mul
fmul
xchg
add
roll
mov
mov
jmp
fmull
mov
inc
xchg
xlat
rcll
jb
sbb
jmp
int
test
sbb
jmp
sbb
mov
dec
lcall
sub
loope
out
or
outsw
jecxz
or
push
add
and
inc
adc
mov
pop
xchg
lods
or
movlps
or
stc
add
dec
push
add
jle
pop
scas
nop
lods
sti
jmp
push
in
out
jecxz
dec
xor
cmp
mov
in
adc
add
clc
push
xor
adc
inc
add
in
jg
sldt
aad
mov
xchg
add
shll
es
sti
push
jmp
sub
xchg
pop
add
out
sti
xor
mov
lret
pusha
std
in
inc
mov
repz
test
push
add
orb
imul
lea
dec
lds
add
testl
shl
filds
aaa
call
pop
es
adc
pusha
mov
out
mov
clc
mov
jle
sbb
push
sbb
or
rolb
xor
aad
pop
ljmp
sbb
test
pusha
xchg
popa
adc
add
cmpl
mov
out
notl
ljmp
inc
push
add
or
mov
aad
lock
adc
add
cmp
fnsave
out
xchg
push
sti
jge
or
dec
cld
add
jb
push
xchg
pop
add
pop
add
jmp
mov
rolb
arpl
adc
xchg
adc
dec
jp
not
or
cmc
addr16
and
push
jmp
popf
fcomps
pop
inc
cld
call
pop
mov
in
insb
mov
xchg
cld
call
jecxz
add
add
cld
call
cli
or
cmpl
jp
cmc
push
mov
fstps
dec
xchg
dec
or
frstor
jl
push
in
or
push
clc
xchg
cmpb
mov
push
pop
adc
or
cmpsl
push
add
pop
mov
dec
push
add
in
jge
or
mov
ret
nop
mov
cmc
movsl
mov
adc
fldenv
jl
push
sub
jnp
sub
add
pop
jmp
clc
or
incl
add
mov
not
jb
out
sysexit
out
push
jb
rcrb
data16
jo
call
mov
neg
jo
call
insl
add
movsl
or
ja
mov
fistpll
xchg
pop
dec
fistpll
add
jns
or
neg
out
popa
pop
add
int3
add
aaa
in
lret
or
mov
jno
or
mov
add
add
fadds
scas
std
pop
xchg
dec
add
add
cli
mov
xchg
sti
or
orb
or
fucom
cwtl
xlat
sub
dec
je
movsl
stc
add
out
outsl
xchg
out
mov
out
out
test
out
or
mov
roll
add
aad
lods
addps
lahf
subb
aad
xchg
pop
out
imul
nop
add
sti
call
push
mov
add
xlat
ret
adc
sahf
adc
mov
dec
roll
bound
bound
pop
rorb
call
lods
dec
bound
pop
js
or
push
mov
outsb
or
loopne
mov
mov
xlat
or
insl
loopne
add
data16
fcmovu
push
dec
cmp
hlt
mov
xor
mov
bound
addb
or
add
stc
adcl
mov
xchg
adc
ja
mov
pop
add
loopne
adc
ss
xrelease
mov
addb
cld
pop
rcrl
add
das
iret
add
jl
idivl
dec
clc
push
mov
push
add
testl
pop
pmullw
mov
testb
dec
add
int3
aaa
out
adc
jb
or
add
mov
aad
mov
ficoml
sub
or
mov
dec
leave
xlat
into
pop
pop
data16
dec
mov
or
lahf
adc
mov
call
jno
adc
jb
pop
repz
aad
mov
scas
syscall
mov
ffree
aas
aad
mov
dec
push
fdivrp
or
xchg
sub
dec
out
add
dec
cmpsb
icebp
add
push
cmp
mov
aad
int3
pop
jl
add
or
sub
sbb
lcall
mov
jb
jnp
bound
fstpl
inc
inc
sbb
dec
adc
jmp
and
clc
aaa
adc
or
adc
or
jg
push
out
mov
insb
loopne
or
cmpsb
mov
add
out
out
inc
adc
add
or
ja
xor
jo
pop
xorl
xchg
mov
mov
adc
out
test
call
sbb
scas
sbb
or
movsb
out
lret
pop
roll
jo
pop
loopne
mov
push
std
pop
cmpl
cmc
popa
rolb
jae
add
adc
xchg
dec
loop
test
cld
call
daa
mov
je
add
test
adcb
xchg
mov
push
add
clc
push
add
dec
mov
pop
mov
inc
popf
mov
leave
aad
sti
cmp
scas
mov
xor
stc
jmp
cld
xor
mov
add
fldl
jle
or
add
lea
lret
mov
or
push
add
add
aaa
ss
inc
test
scas
cwtl
aad
or
aad
lret
adc
add
nop
cmp
lcall
insl
stc
adc
sbb
int3
outsb
jmp
mull
pop
lock
ret
aad
fildl
or
aad
adc
add
jb
popa
push
push
fildl
gs
add
jae
testl
sbb
cmp
aas
aad
iret
sti
dec
sbb
cmc
and
into
faddl
jno
mov
inc
std
call
dec
jbe
lcall
fisttpll
out
mov
int3
xchg
pop
mov
add
in
cmc
pop
pop
mov
xchg
jg
or
mov
xchg
jecxz
pop
cmpb
aad
bnd
xlat
sub
call
xchg
lcall
ja
rcr
cltd
outsl
push
aad
out
push
xchg
arpl
aad
sub
jp
or
add
adc
lods
jae
and
mov
inc
mov
adc
jmp
inc
or
add
xchg
lods
inc
jp
dec
mov
scas
pop
cmp
mov
dec
icebp
and
nop
inc
lret
or
out
cmpl
clc
mov
cli
or
test
dec
std
push
bound
adc
pusha
inc
std
add
daa
stc
and
bound
pop
xchg
sbb
push
add
mov
jmp
xchg
push
or
xchg
sbb
mov
cmpl
push
jl
cmpl
cmp
xchg
push
or
aad
test
lods
fadds
xchg
push
add
adc
cmp
and
test
xchg
fsubr
dec
lock
add
jmp
cwtl
mov
lods
add
adc
mov
std
lcall
sbb
lret
xlat
mov
aaa
mov
out
pop
out
scas
inc
jl
dec
pop
std
lcall
sub
dec
movsl
cmc
xchg
adc
bound
ljmp
add
pop
mov
add
out
repz
fisubl
jge
push
outsb
stc
ficoml
xchg
jb
test
pop
add
je
add
jb
out
dec
std
sti
xor
sbb
or
add
jb
test
or
push
sti
das
cld
pop
mov
dec
sbb
or
out
pop
stos
or
jnp
clc
imul
push
shr
jge
mov
aad
lods
jae
div
jle
sahf
roll
aad
cmpsl
pop
cmp
cld
cmp
push
adc
pop
pusha
xchg
mov
out
mov
aaa
stos
out
out
fs
in
aad
mov
pop
xchg
fwait
sbb
or
jge
mov
out
aad
dec
push
idivl
add
or
mov
or
push
push
mov
jge
call
sbb
xor
mov
or
jmp
adc
out
fnsave
jmp
push
push
iret
inc
push
popa
sbb
sub
add
xor
or
jl
out
aas
icebp
or
jmp
stc
or
jmp
or
push
xlat
leave
jl
add
sub
add
rol
pop
add
in
lret
int3
sbbb
int3
scas
int
mov
fiadds
mov
rolb
cmp
rcrb
int3
not
mov
adcl
cwtl
mov
cmp
orl
sbb
repz
or
push
xor
scas
cwtl
xchg
repnz
incl
add
cld
jl
mov
dec
adc
test
sbb
push
push
jmp
fldt
mov
cmp
jle
inc
int3
or
inc
int3
cltd
adc
jne
dec
aam
mov
imul
push
push
adc
aad
std
call
ds
push
int
mov
rolb
lds
push
jmp
xchg
cmc
test
add
leave
aaa
push
leave
fucomi
adc
cmc
test
pop
push
mov
loope
fcmovb
out
imul
pop
mov
cltd
sbbb
negl
rolb
lds
adc
das
mov
inc
xchg
inc
fwait
aas
mov
aas
mov
inc
sbb
add
mov
jnp
pop
test
popa
rolb
aad
out
cmpsl
test
ret
mov
je
or
and
int
ret
rcll
in
sbb
mov
rol
incb
cmp
adc
std
test
push
jmp
call
dec
jle
mov
lods
fs
and
int3
sbb
gs
add
test
dec
lret
test
dec
stc
mov
cs
sti
scas
pop
mov
add
dec
xorb
or
fs
aam
iret
push
adc
clc
outsl
mov
call
or
jmp
xchg
lea
add
cmp
jmp
sbb
data16
addb
add
jnp
mov
dec
adcl
mov
pushl
or
push
rorb
mov
jg
or
add
std
jle
xor
pop
adc
or
decl
jno
add
je
push
mov
out
or
xchg
jmp
cli
jnp
iret
inc
cld
cmp
mov
add
xchg
adc
aad
pop
mov
push
or
jnp
outsl
js
sub
sbb
incl
jmp
js
mov
std
call
out
push
shll
popa
in
add
bound
xor
ljmp
aam
cmp
lcall
jmp
xor
std
incl
add
jmp
or
aad
jne
shll
inc
in
movl
subb
or
jl
subl
rorl
and
pop
adc
or
test
lret
out
out
sbb
xchg
mul
add
push
scas
imul
lcall
popa
add
stos
subb
or
les
or
pop
lds
fwait
pop
push
dec
jmp
aas
mov
bnd
push
cmp
test
popf
lret
bound
jmp
inc
push
stc
bound
xchg
mov
jmp
das
pusha
stc
negb
push
add
fsubrl
xor
pop
stos
add
lods
inc
int3
mov
inc
int3
lods
popf
inc
int3
pop
pop
pop
test
or
jmp
or
js
stc
mov
mov
repnz
or
jmp
cld
push
mov
or
jmp
in
push
jge
insl
lcall
outsl
fildl
jae
mov
mov
add
pop
das
or
add
cmp
jl
mov
add
insl
cmp
cwtl
mov
outsl
stos
xchg
add
pop
mov
iret
cmp
addr16
jp
add
mov
mov
xorl
xor
cmpsl
push
mov
fmuls
jge
xchg
mov
cwtl
cmp
aad
ja
lret
std
pop
xchg
in
std
add
push
lahf
mov
adc
mov
adc
xor
or
cmc
test
push
add
jecxz
or
or
xchg
fcmove
neg
mov
mov
and
stos
adc
bound
shr
psrad
mov
adc
jmp
pop
pop
pop
adc
inc
or
aad
ret
adc
add
sti
jae
test
or
addb
xchg
cmp
out
pop
mov
fstl
jg
aad
cltd
lret
aas
cmp
sub
mov
mov
mov
add
jl
mul
add
fst
jns
push
aad
pop
rcr
jecxz
pop
arpl
js
jmp
xor
mov
adc
sbb
add
sarl
jnp
add
push
or
add
mov
shrb
adc
imul
dec
je
cs
data16
xchg
cld
mov
loop
or
sub
inc
fldl
dec
inc
decl
cs
inc
or
bound
pop
mov
test
cld
call
or
sbb
mov
daa
add
test
adc
push
clc
gs
arpl
test
xchg
fcoms
sbb
subl
mov
mov
lods
leave
dec
call
sbb
ljmp
add
inc
adc
test
add
pop
fdivrs
jge
xlat
dec
add
loop
jle
sub
ret
fisttps
add
mov
push
add
pushl
or
inc
add
sahf
pushl
or
sbb
sarl
repnz
pushl
or
shl
iret
mov
mov
push
add
pop
movsb
adc
bound
mov
adc
ja
lods
push
std
incl
add
add
adc
mov
stc
pop
fidivrs
fsubl
dec
pop
lods
mov
aad
into
test
sti
and
xor
jg
rorl
add
bound
pop
xor
or
shl
mov
dec
xchg
out
mul
int
jae
ja
lret
std
or
lods
fwait
adc
bound
push
ret
clc
int
jns
add
or
mov
negb
fiaddl
cmp
xchg
dec
jb
out
xlat
sub
clc
inc
push
lea
stc
add
jecxz
mov
clc
shlb
jecxz
mov
dec
out
dec
icebp
add
loope
leave
ljmp
mov
popa
aaa
pop
or
dec
fldl
loop
push
dec
push
or
mov
dec
lret
mov
push
mov
pop
test
mov
stc
push
push
pop
stos
adc
int3
mov
ds
lods
and
int3
sbb
pop
test
push
stc
push
push
pop
sub
ds
sbb
or
int3
sub
iret
or
jmp
gs
call
inc
ret
call
call
or
ljmp
add
or
or
push
rorl
add
or
add
push
add
xchg
push
add
addl
jae
add
jae
call
add
inc
sub
add
stc
call
call
jmp
cli
push
call
push
add
jmp
add
jmp
adc
testb
jmp
testb
call
testb
call
idivb
shr
idivb
call
dec
push
mov
jl
and
jl
sbb
nop
std
mov
pop
add
push
inc
or
xchg
cld
das
xchg
psubb
arpl
nop
xor
jg
xor
call
xor
push
sbb
and
test
daa
mov
mov
enter
call
xor
pop
das
and
dec
test
int3
xor
mov
stos
iret
das
dec
adcb
xchg
push
adc
mov
jp
pop
mov
cmc
insl
shlb
jmp
inc
shl
mov
loope
out
add
lock
fs
and
inc
shlb
mulb
jle
movsl
dec
out
aad
repz
xchg
sahf
cmpl
ss
dec
insb
push
lds
and
push
xchg
cwtl
or
push
pop
xchg
in
aad
mov
jg
or
out
cmc
or
cld
fcoms
mov
ja
jnp
add
mov
jle
stc
mov
and
out
mov
or
divb
icebp
push
sub
push
or
xlat
and
jae
aas
push
shr
jbe
jmp
decl
shl
jbe
jmp
cmp
push
sar
nop
imul
dec
bound
subb
push
loopne
mov
and
add
negl
in
test
push
jmp
xchg
mov
cmpsb
add
mov
in
or
je
aas
jo
add
xchg
rol
push
ds
or
stos
push
je
and
jae
nop
loope
jl
cmpsb
mov
mov
call
jl
add
pop
push
and
iret
lret
cli
adcb
inc
jns
jnp
push
xor
mov
call
mov
sbb
add
nop
rol
cmp
cmp
sub
subl
mov
pop
adc
jae
xchg
push
jae
int3
cmc
sub
mov
xor
loopne
or
std
mov
add
dec
sub
in
push
aas
or
cld
call
mov
and
cmpsl
push
and
pop
xor
incb
stos
ret
pop
movsb
jl
xor
dec
xchg
sub
arpl
or
sub
mov
iret
mov
insl
add
xor
mov
mov
push
xor
iret
pop
add
faddl
int
flds
aad
jg
aad
out
mov
add
mov
adc
sub
pop
pop
pushf
inc
aas
int
test
aad
aas
add
jne
lds
dec
pop
mov
adc
add
inc
pop
dec
push
int
adc
shl
add
inc
int3
xchg
pop
rorl
add
mov
or
repz
sbb
add
and
repz
mov
cmp
sub
and
subl
mov
in
dec
int
sbb
push
jb
sarb
and
and
test
and
or
sbb
mov
xor
movsb
and
jle
xor
aad
cmp
add
xorb
sub
add
arpl
and
repz
xchg
je
shlb
jmp
pop
or
xchg
jecxz
push
and
arpl
jae
xchg
pop
and
mov
jecxz
mov
adc
xor
movlps
jnp
mov
add
seta
push
fistpl
aad
mov
adc
xchg
scas
add
add
je
jl
or
mov
sbb
adc
cs
lcall
cmp
or
add
aad
arpl
test
cmp
shlb
add
xlat
and
int
scas
push
and
out
push
jb
or
popa
test
mov
insb
rcrl
or
imul
add
or
lods
clc
jl
mov
insb
adc
cltd
or
lret
in
or
cld
call
mov
or
sbb
int
sub
loop
ds
push
adc
les
xor
adc
stos
pop
in
add
or
xchg
sbb
test
or
pop
rcll
mov
mov
mov
clc
mov
add
pop
iret
mov
insl
mov
faddl
mov
or
lret
sbb
push
or
test
sub
adc
data16
fnstcw
insb
aad
jp
push
inc
add
adc
push
adc
cmp
adc
testb
jmp
test
cli
add
mov
adcl
add
adc
cmp
or
pushl
in
or
lahf
xchg
js
stc
out
xchg
jb
xchg
cmp
bound
adc
or
ljmp
jae
out
jle
cwtl
mov
dec
in
inc
pop
cmp
cmp
inc
sub
mov
repz
and
jbe
or
or
sub
repz
cmp
dec
and
int
mov
mov
xor
fisttpll
int
mov
jmp
or
sub
and
jbe
repz
out
sub
nop
ret
xchg
je
fcoms
and
fwait
aam
add
dec
stc
mov
xchg
icebp
cmpsl
and
add
adc
mov
aad
clc
mov
call
std
call
mov
test
inc
and
sbb
add
aad
add
or
add
shrl
adc
jae
std
mov
insb
sbb
jmp
push
loope
fs
scas
inc
ds
dec
xchg
xchg
mov
jns
clc
xor
lock
pop
dec
test
mov
push
test
xor
adc
out
aad
xchg
or
push
xchg
rorb
into
rorb
inc
fdivrl
jge
sti
add
mov
push
ss
paddd
popf
add
xor
movsl
add
fidivs
push
into
xor
add
or
shlb
hlt
sub
xor
call
repz
inc
daa
jno
fidivrs
mov
dec
cmp
mov
push
xchg
or
cmp
dec
add
push
pop
cmc
sbb
mov
sub
test
add
mov
mov
inc
test
ret
fs
mov
push
iret
nop
xchg
jmp
add
outsl
or
dec
lea
test
cmc
mov
shll
orl
push
mov
add
mov
in
enter
mov
push
lock
dec
sbb
and
sti
ljmp
add
xor
sar
add
pop
scas
push
mov
add
mov
add
jbe
xor
arpl
jne
push
xor
cs
iret
das
add
jge
cwtl
stc
ljmp
adc
and
push
pop
add
sub
int3
push
jbe
mov
jne
imul
clc
jae
ja
xorl
xor
inc
aad
mov
ret
in
add
mov
and
xor
incl
jp
fsubs
jge
cs
sbb
cmpl
cmc
repz
pop
adc
push
imul
cmp
mov
or
test
idivl
sti
push
push
movsl
mov
pop
cmpsl
mov
xchg
daa
outsb
sub
xchg
add
dec
je
js
or
add
gs
sahf
jo
rcrb
out
push
cs
adc
out
add
mov
mov
mov
sub
add
and
jp
sub
sahf
push
sub
loopne
out
push
iret
fidivrl
and
push
jl,pt
xor
out
xor
xor
test
jle
add
andl
or
aad
fldl
ftst
add
or
push
ss
jmp
rolb
add
dec
xchg
jae
iret
inc
mov
lea
mov
dec
and
dec
inc
stc
cs
jmp
fucomip
push
nop
adc
out
add
bound
adc
mov
in
nop
int3
bswap
out
bound
push
test
mov
dec
cmp
jmp
into
inc
jmp
lods
mov
or
add
or
clc
test
sub
mov
clc
cmp
mov
jg
orb
mov
add
add
ret
jl
lock
js
in
lock
xor
cmp
jl
pop
add
xlat
insb
sbb
jo
cmpxchg
ljmp
inc
call
xorl
orb
enter
push
xchg
enter
push
lds
aad
jl
adc
loop
in
clc
ljmp
pop
fldcw
pop
in
mov
mov
mov
pushl
cmp
loopne
adc
xlat
push
cmp
xchg
cmp
sub
cld
xor
repz
ja
cltd
stos
mov
dec
in
sti
mov
es
rorb
xchg
jne
jle
pushf
add
aad
idivb
rorb
push
or
ss
cmpl
jns
sbb
gs
sbbl
cld
insl
mov
lret
mov
or
aad
xor
movsl
adc
subl
push
xor
xchg
xchg
inc
movb
xlat
enter
pop
cli
js
clc
cmp
xor
lret
xorb
sbb
lods
repz
push
add
lret
clc
jno
or
jmp
sub
nop
cmp
mov
jge
jg
inc
cmp
lock
xchg
or
xchg
jmp
mov
fsts
es
stc
push
filds
popa
xor
jmp
sub
int3
xchg
add
mov
movaps
inc
int3
jb
ja
adc
lods
cmp
jp
add
or
adc
call
lar
mov
clc
movsl
sub
push
mov
cmc
cmp
idiv
mov
addb
cmp
dec
imul
cld
pop
mov
mov
pop
add
in
fs
pop
testb
ljmp
pushl
inc
add
fsubs
test
test
sub
dec
fiadds
or
fiadds
enter
adc
bound
or
enter
enter
insb
hlt
stos
fildl
and
cmpsl
xor
xchg
add
lock
xor
lret
aaa
test
insl
shlb
mov
dec
out
jns
xchg
ja
adc
add
or
loop
std
call
sbb
shlb
std
call
sub
ret
cmp
jp
cmp
and
call
dec
inc
stc
mov
mov
call
imul
cmp
cmp
aad
std
call
mov
bound
inc
aas
aad
std
call
or
cmp
dec
cli
or
dec
repnz
add
or
add
sbb
add
or
inc
rorb
out
aad
and
xor
inc
mov
out
aad
add
xor
xchg
or
adc
or
dec
mov
or
add
or
dec
pushf
xor
xchg
fimull
push
xchg
rorb
out
aad
mov
xchg
mov
or
add
or
iret
add
cwtl
or
and
call
or
jmp
pop
push
and
rorb
mov
jmp
int
jmp
aad
jmp
lea
jmp
test
jmp
in
push
jmp
cmc
push
jmp
lods
push
jmp
clc
adc
jmp
psubsw
adc
jmp
in
jmp
rorl
insb
or
adc
adc
cld
adc
clc
adc
hlt
adc
add
cmp
cmp
cmp
sub
sub
and
sub
loopne
cld
or
adc
or
adc
or
adc
or
adc
or
cld
or
adc
or
adc
mov
or
mov
or
lods
or
adc
pushf
adc
adc
adc
adc
and
fcmovnb
and
popa
les
std
ret
lds
std
jg
and
jnp
and
ja
and
jae
and
add
std
mov
les
std
mov
in
std
or
and
pop
add
in
std
add
and
inc
and
sti
lds
std
test
and
ret
in
std
mov
in
std
mov
and
mov
and
scas
lds
std
stos
lds
std
cmpsl
lds
std
das
in
std
sub
and
daa
in
out
mov
out
mov
out
leave
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
out
sbb
out
add
std
out
iret
sbb
add
out
aas
sbb
add
sbb
add
out
jmp
sbb
add
out
xchg
std
out
in
sbb
add
std
out
pop
std
out
popa
std
out
dec
std
call
pop
or
popa
or
add
gs
imul
jmp
xchg
or
cltd
or
jge
jmp
test
jmp
lods
or
mov
jmp
daa
psubsw
cmp
or
jmp
rorl
lds
jmp
in
or
icebp
or
cmc
or
stc
or
add
fisttpll
jmp
lods
or
jl
xor
jl
sub
insb
or
or
jl
and
jl
sbb
insb
or
or
cmp
adc
cmp
or
sub
mov
or
or
push
sub
clc
push
sub
hlt
push
cld
pop
inc
adc
pop
push
adc
pop
cmp
in
pop
dec
adc
pop
loopne
cld
pop
fmull
add
in
pop
fmuls
in
pop
aam
mov
pop
or
lods
pop
enter
les
mov
and
mov
lret
and
mov
and
mov
and
scas
shll
std
stos
lret
and
cmpsl
jecxz
std
mov
shll
std
fwait
lret
and
xchg
jecxz
std
and
fcmovnbe
and
xlat
lret
and
shl
and
iret
std
lret
shll
std
movl
ret
jecxz
std
aam
and
rcl
and
mov
and
arpl
and
sbb
and
mov
loop
std
imul
std
dec
shll
std
nop
lret
add
cld
out
adc
cld
out
sub
sti
out
mov
out
loope
out
out
leave
sti
out
mov
out
mov
out
mov
add
sti
out
push
adc
add
adc
add
add
adc
add
movntq
ret
add
cld
out
add
sti
out
std
sti
out
icebp
sti
out
cmc
sti
out
stc
sti
out
lods
pop
out
in
add
adc
or
push
or
dec
or
gs
popa
or
pop
or
add
mov
or
ss
fistl
jmp
test
jmp
mov
or
xchg
or
xchg
or
lea
jmp
movsl
or
jno
jmp
inc
adc
and
jmp
mov
or
lds
jmp
mov
or
or
dec
or
mov
or
shrd
lods
or
or
jl
and
insb
or
or
jl
adc
insb
or
or
cmp
jge
sub
cld
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
in
or
add
in
or
push
cld
or
cld
or
pmullw
std
xor
loop
std
sub
shll
std
mov
loope
std
mov
xor
scas
shll
std
stos
leave
xor
cmpsl
loope
std
mov
shll
std
stos
leave
xor
cmpsl
loope
std
mov
shll
std
fwait
leave
xor
icebp
jecxz
std
in
std
mov
lret
xor
aam
add
xor
fstp
xor
xor
aad
xor
shl
xor
int
xor
pop
shll
std
pop
leave
xor
push
loope
out
adcl
out
sbb
push
out
adc
adc
out
loope
out
in
out
jmp
adc
out
mov
out
fsts
out
add
rcll
add
adc
out
rcll
out
cmp
out
sub
adc
add
adc
add
adc
add
adc
add
adc
jmp
inc
add
jmp
push
add
jmp
dec
add
jmp
pop
add
dec
add
jmp
insl
add
jmp
clc
push
jmp
jns
jmp
xchg
add
jmp
movsl
add
daa
or
inc
or
cltd
add
mov
jmp
cld
or
or
or
or
or
or
add
in
or
mov
or
lods
or
mov
or
or
or
or
or
or
or
or
or
or
or
cmp
add
sub
add
sub
cld
or
clc
or
hlt
or
lock
xor
jmp
add
xor
out
xor
jecxz
xor
out
iret
xor
jmp
xor
out
xor
ror
xor
inc
into
xor
lret
fbstp
std
xor
xor
sub
iret
xor
lret
fbstp
std
fbstp
std
mov
xor
and
xor
stos
fbstp
std
addr16
std
mov
iret
xor
fbstp
std
xchg
fbstp
std
xchg
iret
xor
iret
xor
mov
xor
xchg
add
xor
or
std
jg
xor
mov
xor
jmp
or
add
movntq
orl
out
jns
out
jne
out
xchg
movntq
lea
out
mov
out
test
out
and
out
sbb
adc
add
adc
add
adc
add
movntq
int
out
add
leave
movntq
mov
out
rorl
out
int
out
leave
movntq
lds
out
loope
out
jb
out
out
aad
add
and
pop
jmp
sbb
jmp
xor
jmp
sub
jmp
inc
pop
jmp
cmp
jmp
test
jmp
add
dec
pop
jmp
popa
pop
jmp
pop
pop
jmp
jno
jmp
sbb
pop
jmp
jne
jmp
lea
jmp
sub
test
sub
orb
or
js
sub
je
sub
jo
cld
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
dec
or
inc
or
cmp
lods
or
or
xchg
or
or
or
or
or
or
or
or
xor
and
xor
jno
xor
sbb
xor
imul
add
xor
popa
into
xor
pop
into
xor
out
fnsave
std
jmp
xor
out
xor
dec
into
xor
neg
xor
repnz
std
out
int
std
ljmp
std
loop
xor
xor
xor
sub
fnsave
std
rcr
xor
into
int
std
lret
std
sbb
xor
adc
into
xor
or
fnsave
std
mov
xor
scas
add
int
out
cs
add
out
jbe
out
inc
adc
add
out
dec
adc
add
out
push
adc
add
out
pop
adc
add
out
adcb
add
out
push
out
adc
add
adc
add
adc
add
adc
add
adc
add
out
jae
out
ja
out
add
cmp
out
outsl
adc
add
out
addr16
add
out
pop
adc
jmp
mov
jmp
mov
add
jmp
mov
jmp
stos
add
jmp
mov
jmp
iret
add
jmp
lret
add
jmp
add
jmp
jmp
jmp
jecxz
jmp
sti
add
jmp
testl
or
or
or
or
testb
or
or
out
or
ljmp
or
or
fimuls
sub
fimull
cld
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
mov
lods
or
or
mov
or
xchg
or
xor
xchg
int3
xor
xchg
int3
xor
fdivl
std
mov
xor
test
xor
or
xor
jns
xor
jne
add
xor
jno
xor
insl
fdivl
std
imul
xor
popa
int3
xor
pop
fdivl
std
pop
fdivl
std
push
int3
xor
push
int3
xor
dec
fdivl
std
dec
fdivl
std
inc
int3
xor
inc
int3
xor
cmp
fdivl
std
xor
int3
xor
sub
fdivl
std
and
int3
or
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
out
dec
adc
add
out
inc
adc
add
out
aas
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
jmp
addr16
jnp
jmp
jae
jmp
mov
jmp
orl
xchg
jmp
lahf
pop
jmp
xchg
pop
jmp
scas
pop
jmp
cmpsl
pop
jmp
mov
pop
jmp
lret
pop
jmp
pop
jmp
movl
jmp
filds
jmp
mov
or
and
lods
or
sbb
jl
push
or
or
or
or
pop
insb
or
incb
cmp
cli
pop
cmp
testb
or
out
pop
cmp
ljmp
add
fiadds
cld
or
pop
cld
or
pop
in
or
pop
in
or
pop
cld
or
pop
cld
or
pop
in
or
pop
in
or
pop
mov
or
pop
aad
std
mov
and
mov
and
lods
shlb
std
fsubs
std
pusha
shlb
std
pop
fsubs
std
pop
shlb
std
push
fsubs
std
push
shlb
std
dec
fsubs
std
and
and
mov
and
test
add
and
sbb
and
xor
and
xor
and
sub
and
sub
and
imul
and
popa
fisubl
std
pop
shlb
std
pop
fisubl
std
push
shlb
std
push
fisubl
std
dec
shlb
std
add
and
add
and
cld
out
or
out
decl
out
add
out
out
out
sti
push
out
out
push
out
repz
out
add
mov
out
jmp
out
fisttps
out
jecxz
out
push
out
fisttpl
out
iret
push
out
rorl
out
xlat
push
out
dec
adc
add
adc
add
out
daa
adc
add
adc
add
adc
add
adc
add
movntq
sub
out
pop
adc
add
adc
add
adc
add
adc
add
add
mov
xchg
add
add
push
add
push
add
pop
add
pop
add
addr16
arpl
jmp
imul
ja
jmp
jg
jmp
xchg
jmp
popl
jmp
xchg
add
xchg
add
lahf
add
fwait
add
cmpsl
add
mov
add
stos
add
mov
jmp
add
mov
add
cld
or
in
or
add
or
add
testl
lods
or
push
mov
or
push
lods
or
push
lods
or
push
jl
push
push
jl
sbb
insb
or
push
insb
or
push
jl
push
push
jl
or
insb
or
push
insb
or
push
cmp
incb
sub
testb
add
cmp
ljmp
or
add
cld
or
add
aad
std
aad
and
rcl
and
int
and
leave
shlb
std
std
rcl
std
mov
shlb
std
mov
and
mov
and
lods
fsubs
std
test
fsubs
std
mov
fsubs
std
cltd
shlb
std
xchg
add
fsubs
std
xchg
shlb
std
fsubs
std
mov
and
test
and
adc
and
jns
and
jne
and
jno
and
insl
fsubs
std
imul
and
popa
rorb
out
mov
push
out
mov
out
xchg
out
xchg
push
out
push
out
sbb
out
add
out
jmp
out
add
out
out
repz
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
out
aas
push
out
sub
out
daa
push
out
xor
out
das
push
add
sub
daa
add
xor
das
add
cmp
aaa
add
add
inc
add
aas
add
dec
add
inc
add
push
add
dec
add
pop
add
push
add
arpl
pop
add
imul
addr16
jae
jmp
jnp
jmp
addl
jg
jmp
xchg
xchg
add
popl
jmp
xchg
add
sub
push
add
sub
data16
add
pop
add
add
push
add
add
dec
add
add
inc
add
or
ds
or
ss
or
cs
or
es
or
push
add
or
push
add
or
push
add
or
push
add
add
incb
sub
cli
add
std
cmc
and
icebp
and
in
and
jmp
and
loope
and
fst
and
and
aad
and
rcl
and
int
and
push
aam
std
sbb
and
push
aam
std
adc
and
or
aam
std
cmp
and
add
and
aad
std
cli
add
aad
std
not
and
repnz
std
in
aad
std
ljmp
std
loop
and
and
fcmovbe
and
aad
out
es
add
or
add
or
add
or
add
or
add
out
dec
or
add
out
inc
or
add
out
ds
add
or
add
or
add
bsf
pop
lds
in
out
push
or
add
or
rcl
out
aad
test
ficoml
add
or
loope
cwtl
sti
dec
push
imul
insl
cmp
pop
xchg
call
sar
call
sbb
or
sti
lret
or
bound
adc
or
inc
push
psubw
add
add
push
je
push
lret
adc
shl
lea
fiaddl
add
push
or
or
push
push
stc
cmp
test
stos
pop
inc
call
out
or
lods
fmuls
sub
lea
test
pusha
pop
inc
jmp
sub
add
dec
or
mov
sub
std
sub
add
add
mov
or
es
mov
jne
mov
bound
testb
mov
inc
iret
enter
or
jne
icebp
repz
call
decl
add
mul
idiv
rorl
in
sti
jl
jp
aas
dec
outsb
push
movsb
sub
jl
testb
aad
jge,pt
and
jnp
lahf
mov
inc
negb
inc
jge
and
sbb
pop
cmpb
stos
add
fiadds
push
mov
adc
stc
cwtl
aas
inc
jge
out
ret
jb
jecxz
std
stos
and
jmp
gs
nop
push
mov
popf
clc
mov
and
rcll
mov
inc
stc
adc
jge
add
xor
sbb
fistpll
inc
hlt
jb
or
or
inc
pop
movb
dec
or
xchg
mov
dec
inc
mov
loope
and
mov
add
inc
pop
mov
add
pop
or
xchg
mov
add
jmp
movb
add
fmull
leavew
icebp
pop
xchg
cmpsb
cwtl
aam
lahf
add
or
xchg
out
inc
sub
lds
pusha
xchg
ror
or
jmp
or
out
and
fbstp
or
out
popa
cli
testl
pop
sbb
xchg
mov
push
cwtl
add
out
push
stos
pop
sbb
xchg
mov
add
push
cwtl
add
out
cld
test
pop
or
sti
pop
mov
sub
jmp
cmp
adc
sub
aas
add
dec
subb
stc
push
testl
out
sar
mov
jne
fidivrs
imul
call
aas
test
lods
jb
out
add
jne
add
fdivl
xor
add
scas
inc
sbb
jg
jp
ds
insl
adc
decl
cmp
xorl
idiv
imul
inc
sbb
xor
sub
add
call
ret
aas
test
jnp
iret
adc
ret
hlt
call
pop
cmpl
xchg
add
sbb
mov
sub
add
repnz
mov
call
in
inc
jge
hlt
fdivl
jae
sbb
mov
inc
div
inc
add
std
jb
lret
xor
cld
call
pop
and
sbb
mov
stc
add
and
push
mov
pop
je
std
ret
call
push
mov
add
aas
test
add
hlt
inc
call
lods
icebp
in
pushf
or
les
xchg
or
dec
fldl
push
sub
es
pop
call
pop
insb
or
enter
jecxz
lret
mov
cmp
pushf
and
mov
pop
dec
in
add
sub
leave
icebp
montmul
cmpsb
orl
add
cld
pop
cmpsb
mov
add
mov
mov
insl
push
inc
pop
dec
test
add
add
sbb
inc
lret
jl
test
je
out
aas
stc
push
repnz
push
dec
sbb
in
roll
call
push
sbb
push
shl
push
into
repz
and
xchg
xlat
out
cmc
add
push
add
add
fcomi
cli
xchg
mov
cld
clc
xchg
push
call
testb
mov
clc
mov
pop
ret
test
int
add
add
add
dec
addl
cmp
add
xor
add
daa
testl
jg
jge
insb
or
addl
add
adc
add
incb
add
add
je
mov
adc
add
xchg
mov
cmp
jp
inc
and
add
cli
je
mov
adc
insb
in
or
call
aas
mov
sahf
add
add
sti
je
mov
sbb
dec
idivl
iret
out
xchg
inc
mov
xor
lret
in
xchg
add
add
xor
jecxz
xchg
or
pop
std
add
and
jae
sbb
call
out
xchg
pop
push
push
iret
aas
sar
jnp
repnz
or
mov
add
lods
sbb
xchg
iret
jg
mov
aas
call
in
rclb
cli
outsl
lcall
or
enter
or
push
add
add
repnz
cs
xchg
aam
sub
pushf
add
sbbb
in
aam
dec
push
mov
cmp
out
aam
inc
push
insb
add
sub
jmp
aam
xchg
pop
add
xchg
sbb
nop
aam
pop
sbb
cmpsb
xchg
icebp
pop
sbb
cmpsb
xchg
pop
call
out
jle
add
add
xchg
out
aam
incl
add
stos
push
adcb
inc
or
leave
mov
jg
jmp
adc
mov
add
push
or
inc
sub
add
xchg
aam
cmp
add
jl
jmp
add
add
loopne
insl
mov
mov
or
sbb
into
out
les
add
jae
out
or
mov
test
sarl
xchg
clc
sahf
xchg
icebp
cli
xchg
out
add
pushl
or
call
jg
push
add
or
loope
pop
test
mov
and
ret
das
mov
loopne
in
testl
jmp
mov
je
cs
cld
add
jnp
mov
je
cs
stc
jnp
jnp
or
adc
cld
lcall
dec
jnp
and
outsb
push
and
sti
ljmp
jnp
add
insl
adc
cmp
or
pop
sbb
add
pop
mov
xchg
iret
addl
inc
call
push
out
incl
and
rorl
push
mov
sub
and
test
cmpsb
out
std
and
and
mov
pop
jge
in
add
pop
mov
call
sbb
sti
jb
inc
jge
fadds
jae
jae
std
lret
out
fsts
stc
push
dec
or
sub
cmp
pop
mov
sub
mov
icebp
out
or
cmpsb
test
icebp
jp
cld
add
mov
add
icebp
xchg
faddl
xchg
rorb
ljmp
gs
in
mov
repz
sbb
aas
lods
add
test
adc
into
icebp
es
add
sub
or
inc
xchg
stos
std
jnp
movb
out
pop
pop
mov
pop
jne
sub
pop
enter
int3
xchg
xchg
add
mov
jle
xlat
add
fnstcw
cmp
test
ljmp
call
stos
push
test
jmp
sbb
or
add
push
push
std
in
push
push
push
push
ljmp
mov
out
xor
add
int3
cld
jae
out
aas
cmc
push
ljmp
out
cmp
push
loop
jl
orb
mov
jl
repz
xlat
jp
rorl
clc
xchg
jl
testl
clc
pushl
je
aas
lcall
outsl
mov
xchg
jmp
imul
loopne
push
sbb
ret
addr16
adc
mov
or
aas
mov
loopne
sub
testl
jecxz
mov
je
xor
pop
jnp
jbe
insl
cmp
dec
bnd
dec
jnp
mov
insl
adc
pop
out
pushl
je
outsl
sbb
pop
and
call
mov
jnp
xrelease
sub
jae
add
dec
mov
jle
adc
std
inc
mov
mov
inc
mov
mov
jmp
and
jg
adc
jae
pop
mov
add
lret
test
adc
mov
jne
mov
bnd
shll
xor
sbb
fdivr
lcall
inc
mov
xchg
sbb
rorb
stc
xchg
js
add
mov
or
imul
cmp
fcmovb
mov
sub
loop
jbe
sub
add
loope
add
mov
xlat
ss
xlat
xor
jbe
xlat
sub
jne
sub
ret
mov
loopne
mov
xchg
mov
add
lret
test
stos
add
enter
sti
stos
loope
jg
add
add
push
mov
or
inc
movb
mov
mov
jbe
lods
sti
jne
and
mov
jne
or
and
mov
sbb
mov
push
in
mov
adc
jb
push
fnsave
js
int
js
xchg
ffree
inc
call
xlat
mov
je
cld
call
or
inc
call
mov
jg
out
or
mov
adc
out
sub
mov
or
cld
clc
add
add
inc
add
int3
inc
testl
cwtl
sbb
mov
call
ret
mov
sbb
incl
add
add
outsl
sbb
sub
pop
jne
push
repnz
dec
sbb
mov
mov
out
push
jnp
rclb
ret
repz
add
pop
mov
add
mov
push
or
jmp
jnp
xchg
pcmpeqd
in
clc
call
adc
inc
adc
ljmp
out
inc
rcll
cld
call
lock
imul
push
inc
aam
dec
add
lock
adc
outsl
mov
aam
xchg
jl
rolb
jp
cwtl
cmp
fwait
inc
cmp
xor
adc
pop
xchg
sbb
jbe
jb
outsl
add
pop
int
bsr
jb
fs
dec
lods
cmp
mov
rorl
notl
repz
aam
rorb
jl
and
or
call
pop
int
or
jle
sbb
icebp
loope
mov
call
cmp
pop
loopne
and
mov
push
push
push
stc
out
add
push
dec
push
add
call
add
into
pop
stc
mov
loope
sbb
clc
movsl
into
sbb
out
push
das
jo
mov
loop
orb
inc
movsb
clc
pushl
imul
sub
fidivrs
inc
repz
dec
sbb
sub
or
bound
add
adc
cmp
sub
aam
loop
jl
and
out
push
je
out
inc
adc
or
jns
out
cmp
imul
mov
xor
xchg
mov
jl
fidivl
insl
sbb
pusha
leave
je
push
hlt
insb
repnz
std
aam
out
push
add
push
test
mov
lock
call
push
test
jecxz
cmp
cmpl
cli
ret
adc
insb
or
mov
pop
mov
or
mov
cmp
or
or
jbe
add
out
jmp
xor
jl
jbe
shll
shrl
addl
push
inc
sbb
jmp
call
mov
jecxz
inc
fisttps
scas
dec
mov
call
loopne
inc
idiv
push
inc
aam
dec
add
loopne
push
jge
adc
mov
adc
pushf
hlt
jl
testb
xlat
or
out
testb
xchg
mov
add
loopne
and
out
jns
jge
out
test
idivl
mov
cmp
mov
add
pop
mov
in
add
rcrl
pop
cmpsl
rclb
and
std
cmp
je
sbb
push
or
das
sub
cmp
leave
out
aad
int
dec
lret
or
pop
lret
gs
mov
out
or
jge
sbb
loop
adc
loopne
sub
rorl
js
sub
add
xor
out
push
dec
push
std
fs
call
add
mov
lea
hlt
movsl
into
sub
out
popa
dec
jo
sbb
in
dec
mov
mov
jne
cmc
imul
dec
jecxz
clc
sub
or
shl
sarb
repnz
fsts
pushl
sbb
sub
repnz
sub
or
icebp
push
or
cmp
repnz
sub
xchg
in
out
fimuls
sbb
test
push
idiv
jmp
or
mov
add
clc
popf
xor
add
or
jno
idiv
add
mov
mov
pop
add
push
sti
ljmp
sti
mov
add
sti
decl
outsl
sti
ljmp
add
add
ljmp
cld
clc
dec
jne
ljmp
add
add
mov
cld
clc
incl
add
cmp
add
add
call
cli
cld
push
add
in
push
add
repnz
sti
call
push
in
ljmp
incl
add
loopne
call
xor
lret
inc
inc
cmp
loopne
call
loopne
call
push
std
mov
insb
jnp
xchg
loopne
call
loopne
call
jl
std
jp
out
pushl
je
push
cld
call
loopne
call
push
icebp
decl
je
inc
loopne
call
loopne
call
mov
std
sub
repz
sub
std
sbb
cld
incl
add
loopne
call
add
std
add
repz
cli
icebp
out
aad
out
aad
out
aad
out
aad
out
aad
cmpsl
insl
enter
shl
insl
mov
icebp
cli
addr16
addr16
addr16
icebp
stos
addr16
icebp
les
icebp
mov
xor
push
jo
push
push
pusha
icebp
adc
icebp
loop
push
icebp
into
data16
dec
icebp
mov
addr16
sub
icebp
xor
icebp
dec
addr16
outsb
data16
pop
data16
decl
jnp
clc
mov
clc
mov
jl
clc
pop
outsl
out
clc
adc
clc
std
cmp
clc
pop
cmp
clc
dec
sub
clc
lea
out
clc
jmp
xor
clc
or
xor
clc
in
stc
out
clc
cmp
add
clc
out
clc
gs
clc
xchg
stc
out
clc
jmp
imul
clc
test
out
clc
and
out
clc
mov
out
clc
stos
mov
out
clc
mov
data16
incl
data16
ds
decl
sti
cld
or
add
jne
decl
jbe
ljmp
sti
call
sti
incl
add
jbe
call
je
inc
je
jmp
pushl
sti
call
sti
cli
je
lcall
jne
incl
sti
dec
je
decl
cmp
decl
jns
fidivrl
cli
jnp
call
sub
std
and
std
sbb
outsb
std
adc
std
or
std
add
outsl
std
add
repnz
outsb
std
ljmp
std
insl
std
shr
insl
std
lret
std
ret
std
mov
pushf
insl
std
stos
shrb
fsubrs
lcall
std
mov
outsb
std
jp
outsb
std
jb
outsb
std
push
push
std
pop
mov
push
std
inc
xchg
push
jo
out
fs
add
out
mov
out
mov
out
mov
adc
jo
out
sub
out
pop
clc
in
cli
pop
lock
out
pop
call
in
push
je
in
and
sub
mov
shr
jae
in
push
je
in
ljmp
in
jne,pt
in
adc
nop
in
and
in
xorb
dec
jne
in
jo
jo
fs
in
xchg
je
add
xchg
lods
je
in
mov
leave
out
clc
in
out
clc
out
clc
mov
mov
out
clc
push
sub
popa
mov
clc
aaa
sub
adc
clc
inc
arpl
clc
and
clc
int
out
clc
mov
inc
out
clc
fisttpl
clc
jmp
out
clc
push
sub
clc
cmp
sub
clc
cltd
add
and
clc
lea
out
clc
popa
add
clc
gs
clc
lods
add
clc
xchg
jmp
clc
ret
jecxz
clc
scas
jmp
clc
shl
out
clc
add
jae
ljmp
jae
lcall
jae
pushl
jae
pushl
sti
lcall
sti
pushl
sti
incl
sti
jp
sti
pushl
sti
dec
cltd
sti
decl
cltd
sti
mov
jl
call
sti
incl
add
jnp
ds
sti
ljmp
sti
pushl
call
sti
ljmp
add
jne
add
jl
add
pop
cmpsl
sti
call
mov
pushf
cld
push
loope
call
lret
inc
out
cld
cmp
popf
cld
xor
popf
cld
sub
popf
cld
sbb
popf
cld
add
or
sahf
cld
cli
sbb
cld
repnz
cld
loop
popf
cld
fcmovbe
popf
cld
sarb
cld
ret
cld
mov
dec
lahf
cld
stos
ss
cld
mov
lret
push
loopne
call
fs
cld
and
call
mov
mov
popa
ljmp
push
ljmp
add
inc
ljmp
xor
ret
ljmp
sbb
nop
cltd
adc
mov
add
pop
cltd
stc
jmp
push
cltd
jmp
jmp
stos
pushf
shr
je
leave
jmp
fcomps
mov
and
mov
jmp
fs
mov
push
fwait
sub
pop
out
jne
out
sub
ds
sbb
out
lea
clc
xchg
imul
clc
cltd
pop
out
test
dec
out
pop
inc
out
cmp
clc
jecxz
out
ret
push
out
push
pop
out
ret
push
out
lds
clc
lods
inc
out
test
imul
clc
lds
clc
mov
add
dec
in
mov
dec
in
mov
in
popf
insl
in
add
cmp
in
sti
jmp
cmp
dec
cmp
int3
cmp
lock
nop
cmp
movsb
cmp
movsb
cmp
xchg
cmp
mov
sti
jle
sti
decl
sti
call
jg
call
jg
ljmp
pushl
sti
incl
add
sti
mov
test
cli
cmp
nop
cmp
pushl
sti
decl
call
adcb
mov
xchg
cld
orb
jp
xchg
cld
jb
xchg
cld
push
xchg
cld
bound
cld
call
andb
inc
movsl
cmpsl
cld
cmp
cmpsl
cld
xor
cmpsl
cld
sub
mov
lahf
mov
cld
adc
mov
cld
cli
dec
test
repnz
cld
loop
mov
cld
shl
mov
cld
ret
cld
mov
dec
sahf
cld
stos
or
add
or
mov
aad
jmp
aad
out
aad
jecxz
aad
loope
aad
xchg
add
mov
inc
mov
dec
out
add
mov
cmp
jne
aad
andb
out
add
mov
add
mov
aad
in
aad
aam
aad
call
add
mov
mov
fxam
mulb
aad
in
aad
aad
aad
incl
or
push
jb
clc
pop
add
cmp
clc
dec
xor
clc
out
cmp
clc
fnstenv
out
sarl
out
pop
xor
clc
aad
out
xlat
xor
clc
test
jo
clc
fwait
js
clc
xchg
jo
clc
mov
clc
jns
out
addr16
clc
addr16
clc
jnp
out
jae
out
lea
out
xor
clc
jne
out
mov
cmp
clc
mov
js
clc
jmp
add
ds
sti
jp
sti
jmp
test
decl
sti
pushl
or
add
dec
jns
pop
pop
insl
pusha
outsl
gs
jne
imul
imul
push
or
gs
popa
insl
push
inc
outsb
push
dec
data16
pop
gs
mov
outsb
cmp
outsl
add
push
push
mov
je
cltd
cmp
xchg
or
loopne
jno
mov
jb
pop
popa
je
insb
pop
insb
lahf
push
je
jo
add
jns
push
xor
jo
xor
push
sub
push
arpl
push
fstps
pop
push
icebp
cld
fst
test
arpl
pop
cmp
not
pusha
dec
clc
xchg
cld
lods
fstps
cld
ss
pushf
pop
pop
add
ret
lea
mov
fs
arpl
lock
jmp
jo
inc
outsb
insb
and
pop
je
push
arpl
imul
cld
adc
es
push
or
inc
cmp
add
or
and
push
cld
and
addr16
lds
shll
or
add
insl
mov
jne
pop
shlb
add
jbe
pusha
or
push
or
jbe
push
mov
jne
add
push
mov
dec
out
xchg
or
jbe
push
inc
je
jae
add
or
jbe
insb
sbb
push
dec
jbe
or
test
inc
gs
inc
insl
data16
and
add
push
arpl
outsb
arpl
fnstcw
ljmp
sub
imul
pop
add
jmp
xor
enter
fisttpl
jae
jmp
adc
mov
add
lcall
imul
xchg
or
cmpsb
xor
jge
jo,pt
xchg
or
sub
jne
push
mov
imul
add
add
add
cmp
add
add
push
push
outsl
add
je
inc
jno
flds
insb
je
inc
jno
fnstcw
addr16
aad
pop
inc
test
add
outsl
lahf
imul
pop
add
dec
jne
push
jno
cltd
push
pop
outsl
push
addr16
outsb
dec
aas
cmp
jb
outsb
or
add
je
gs
outsl
data16
or
add
pop
popa
add
js
push
push
aad
cld
int
sub
test
aas
orl
inc
js
je
imul
std
inc
xor
je
inc
push
pop
add
sbb
inc
cmp
dec
outsb
cmp
insl
sub
and
cwtl
pop
pop
add
ret
popa
ja
adc
insb
cmp
clc
lock
call
add
leave
jne
insb
movsl
andb
xchg
push
imul
insb
push
aad
ljmp
or
mov
push
dec
aad
hlt
add
popa
push
outsl
gs
addr16
addr16
dec
imul
jb
or
or
add
jno
popa
sub
pusha
and
addr16
inc
or
add
or
adc
fisttpl
insb
xlat
cmp
int3
inc
and
dec
aad
daa
add
gs
ret
pusha
aad
add
xchg
push
stos
push
jg
aad
ret
add
jo
pusha
mov
pusha
subl
jge
data16
dec
movsl
imul
sub
insl
push
push
xchg
jo
dec
jbe
addr16
jnp
ja
jbe
fs
aam
imul
addr16
sbb
push
and
sub
insb
addr16
add
ficompl
or
mov
mov
dec
addr16
or
lock
inc
addr16
lds
nop
mov
push
jmp
scas
outsl
add
addr16
or
cmp
je
jo
gs
add
insb
add
lea
dec
mov
pop
js
or
add
arpl
push
data16
popa
loopne
outsb
lods
or
enter
fists
push
lods
or
dec
popf
insb
popa
jbe
cmp
mov
add
aas
and
jb
outsl
outsb
xor
add
dec
gs
push
popa
insb
aad
dec
imul
aad
std
cmp
lea
mov
outsb
js
js
xchg
add
movb
insb
inc
js
je
inc
outsb
jo
add
fcos
data16
dec
pusha
arpl
cli
pop
arpl
addl
sub
das
push
inc
js
jns
push
sub
jo
xor
inc
insb
add
dec
clc
lds
lock
pop
outsb
clc
iret
jo
add
out
push
add
push
add
xchg
inc
rorl
push
mov
test
daa
or
push
test
mov
nop
fs
mov
test
push
pop
stos
push
push
imul
and
dec
push
push
subb
jbe
out
adc
sub
cmp
imul
pop
adc
add
out
flds
and
cmp
pop
pop
imul
imul
push
lcall
inc
add
fsubl
mov
ret
fwait
mov
cmp
inc
sbb
mov
jo
mov
vcvtss2si
cmp
inc
jge
push
jmp
imul
jo
inc
dec
add
push
fiaddl
dec
sbb
pop
add
roll
or
cmp
sub
cmp
fs
inc
arpl
ljmp
jb
insb
je
cmp
insb
adc
insb
jo
pop
dec
outsb
dec
pop
imul
add
mov
dec
insl
push
insb
data16
data16
imul
push
movsl
jo
dec
mov
insb
cltd
or
gs
pushf
xor
fwait
dec
pop
inc
adc
or
je
ljmp
jo
imul
or
add
pusha
jo
aad
pop
je
adc
outsb
cwtl
cmp
aad
add
mov
imul
push
outsb
clc
shll
mov
inc
mov
add
jns
arpl
loop
cltd
xlat
cmpsl
popa
je
push
bound
test
mov
push
pushf
push
arpl
cmp
cld
xchg
fsts
addr16
cmp
je
push
outsb
insb
dec
outsb
addr16
sbb
adc
insl
je
rep
imul
repnz
cmp
inc
jb
vmread
aad
incb
or
popa
add
and
pop
sbb
add
imul
push
push
out
inc
or
jb
imul
add
push
mov
mov
dec
jne
mov
outsl
add
or
pop
gs
dec
pusha
insb
push
insb
aad
stc
or
xor
jae
insl
cmp
cmp
add
and
add
pushl
imul
push
dec
or
push
add
imul
popa
push
in
push
je
inc
movsl
std
pop
push
mov
out
fs
les
popf
lods
inc
jae
lods
push
push
jmp
mov
arpl
push
mov
int
insb
pop
xchg
gs
inc
add
je
add
fwait
arpl
sub
je
inc
arpl
inc
add
inc
arpl
and
imul
sub
aas
gs
dec
insl
mov
sahf
pop
pop
insl
xchg
add
and
aas
orb
xchg
dec
je
push
xor
nop
insb
imul
add
popa
or
push
aaa
cmp
push
add
cmp
mov
inc
mov
pop
push
jb
imul
sub
xor
outsb
popf
push
pop
push
test
popa
nop
or
pop
popa
add
gs
ss
aad
push
push
daa
cld
pop
arpl
shrb
sbb
outsb
insl
add
add
test
insl
cmpsb
lock
mov
aad
incl
sahf
popa
outsb
ror
gs
xor
imul
incl
jle
outsb
mov
pop
gs
inc
arpl
bound
push
jno
aad
ljmp
jb,pt
xorb
aas
aad
call
arpl
bound
add
sar
push
insl
or
daa
imul
add
insl
adc
jo
add
cmp
pop
xor
jbe
or
push
or
int3
pop
push
pop
shll
cmp
add
mov
adc
outsl
lcall
pop
mov
mov
pusha
mov
insl
out
jb
mov
push
cmpsb
test
mov
mov
push
xchg
pop
jno
push
popa
mov
pop
imul
xor
dec
aas
pop
add
dec
inc
add
addr16
inc
dec
addr16
or
adc
xor
adc
fs
sub
add
cmc
cmp
sti
insw
fidivrl
pop
add
cmp
repnz
pop
aad
imul
xchg
inc
dec
lods
add
insb
jmp
jg
je
mov
insl
mov
push
jmp
fwait
jns
push
push
sbbl
lea
test
add
fsts
add
xor
mov
xor
push
imul
addr16
or
je
iret
xor
loop
add
push
inc
jb
pop
inc
arpl
push
cmp
imul
adc
xchg
or
mov
jno
add
mov
gs
dec
popa
push
pop
push
add
add
cmp
push
push
outsl
arpl
gs
cld
or
add
pop
imul
pop
jae
dec
add
aad
std
inc
js
outsb
je
pop
push
inc
inc
arpl
sti
cld
inc
cmp
xor
hlt
pop
popa
cmp
push
insl
aad
std
inc
cmp
dec
addr16
push
jno
aad
pop
and
cld
sbb
and
add
jmp
mov
arpl
cmp
mov
push
mov
jb
imul
jae
arpl
jae
add
jle
dec
js
pop
pop
xchg
pop
test
outsb
jo
out
dec
or
popa
ja
sub
jno
xor
add
sub
inc
cmp
pop
adc
add
or
jo
bound
popa
sub
push
add
or
sbb
pop
repnz
lret
push
add
dec
aad
outsb
add
rorl
lret
push
les
mov
test
out
mov
xchg
pusha
test
inc
cmpsb
add
or
pusha
test
mov
dec
out
jmp
add
xchg
push
add
xlat
cmp
add
mov
pop
cs
inc
mov
add
xor
aaa
popa
pop
cmp
or
jae
cmp
sbb
add
push
push
or
sub
aas
arpl
and
add
or
inc
loope
or
push
aam
outsb
enter
enter
pop
pop
into
mov
add
rorl
popf
xchg
jo,pn
movsl
pop
arpl
add
out
movsl
mov
inc
add
or
xor
push
jl
pop
je
cmp
nop
add
pop
imul
pop
inc
jo
xor
outsb
cld
pop
je
adc
je
push
add
and
inc
rorb
push
cltd
sub
jb
push
add
push
inc
rorb
fcoml
arpl
or
inc
lea
jne
add
add
scas
or
cmpb
outsb
adc
outsl
inc
outsl
or
sub
imul
push
pop
cmpsb
outsl
cmp
loop
pop
aam
pop
je
jge
insl
je
pop
push
aad
incb
ss
jo
inc
jo
xchg
add
sub
inc
xor
xor
adc
xor
add
aad
push
fs
jecxz
sub
pop
pop
pop
add
pop
pop
push
jno
rorb
aad
call
cmc
push
divb
aad
std
inc
clc
scas
aaa
arpl
rclb
mov
pop
add
incb
xchg
dec
addr16
or
add
xchg
jo
mov
pop
test
lcall
xor
jb
pop
push
push
insb
pop
dec
cmp
or
adc
cmp
add
xor
inc
ds
jb
xor
add
pop
cmp
data16
pop
add
pop
add
or
push
divb
out
push
or
push
add
shll
out
lret
push
mov
add
rorb
xchg
fbld
lea
pop
pop
imul
add
flds
dec
test
push
cmp
sbb
pop
insl
dec
ds
jmp
sub
push
cmp
dec
or
addr16
adc
add
adc
shll
addr16
in
ds
or
or
and
cmp
add
push
add
pop
pop
push
add
sub
dec
add
je
pop
pop
insl
dec
dec
popa
gs
push
xor
cld
add
je
pop
pop
insl
push
js
je
cld
add
je
nop
imul
gs
in
add
imul
popa
sub
gs
cmp
jmp
out
add
pop
pop
arpl
std
data16
pop
inc
shlb
js
or
mov
cmp
mov
gs
aad
arpl
std
inc
mov
dec
arpl
insl
popa
push
imul
mov
outsl
stos
cmpsb
cld
daa
xlat
cmpsl
dec
arpl
popa
insl
outsb
jo,pt
mov
outsl
popa
je
bound
pop
push
add
dec
add
pop
dec
arpl
pop
inc
dec
xor
popa
add
and
inc
add
xor
dec
arpl
push
inc
je
push
inc
inc
aad
incb
xor
push
pop
adc
push
gs
or
add
call
xor
data16
enter
out
decb
lcall
sub
mov
cmp
aad
cmp
aaa
insl
cmp
jo
push
push
add
aad
sub
push
ss
inc
push
xor
push
push
aad
dec
add
inc
aaa
inc
imul
or
or
ss
add
sub
push
std
xor
or
xor
push
add
add
push
mov
dec
mov
cmp
add
out
imul
fs
push
je
stos
imul
jge
arpl
cmp
add
cmp
je
inc
cmp
push
and
cmp
cmp
imul
std
xor
mov
dec
insl
ss
xor
pop
add
xor
dec
gs
pusha
outsb
shlb
outsl
push
mov
add
aas
add
xor
arpl
pop
je
jle
adc
jae
je
sbb
data16
xchg
add
je
push
xor
outsl
arpl
imul
add
xor
pop
pop
outsb
pusha
or
test
outsl
xor
pop
arpl
push
xor
fcoml
outsb
add
pusha
outsb
and
outsl
add
cmp
push
shrl
je
aad
std
inc
add
sti
push
popa
outsb
push
push
pop
je
push
pop
je
outsl
add
push
inc
stc
shll
aad
add
mov
iret
push
add
fwait
add
dec
pop
test
jg
pop
mov
decb
xchg
xor
sahf
inc
imul
imul
push
insl
aad
das
inc
xchg
push
sub
dec
jo
aad
std
inc
add
xor
addr16
pusha
dec
sub
pop
arpl
and
or
insl
and
and
and
stos
add
aaa
adc
or
or
sub
decb
cmp
mov
dec
push
xor
data16
mov
add
aaa
mov
mov
sub
push
jbe
fwait
add
or
inc
add
imul
push
jbe
mov
or
add
dec
inc
push
dec
cmp
sbb
or
push
sub
dec
add
inc
dec
add
push
jo
lcall
push
repnz
sbb
xor
out
or
push
fmuls
std
mov
fs
fmull
xor
sarl
popf
cmpsb
es
scas
xor
add
xchg
pop
imul
popf
jecxz
fs
lcall
stos
outsl
ss
pop
ljmp
jae
push
outsl
daa
imul
xor
dec
flds
add
sub
arpl
pop
imul
push
mov
push
dec
outsl
shll
insl
jo
pop
popa
jbe
xor
fincstp
pop
insb
add
imul
cmp
imul
gs
imul
sub
lret
jb
push
je
sbb
jne
pusha
bound
je
outsb
sub
mov
push
je
pop
push
inc
gs
dec
xor
add
or
je
aad
push
imul
cld
mov
repz
ja
aas
arpl
add
notl
sbb
pop
ja
daa
std
inc
push
add
icebp
jmp
imul
mov
xor
out
pop
je
push
popaw
loope
xor
mov
imul
addr16
lds
cmpsb
fstps
ret
outsb
mov
das
add
xchg
add
xchg
jo
dec
arpl
push
aad
add
xchg
push
test
pop
gs
push
add
aad
pop
push
and
inc
inc
cmp
push
pop
sbb
push
add
or
push
ss
arpl
xor
dec
sub
sbb
daa
push
gs
xor
push
in
cmp
add
push
pop
jmp
cmp
push
ljmp
push
leave
xor
aas
stos
sub
add
mov
rorl
mov
xchg
pop
mov
mov
test
xor
or
push
mov
jb
mov
sub
push
jb
add
sub
mov
xor
sub
daa
daa
je
adc
daa
jo
xor
push
jmp
xor
dec
or
cmp
and
pop
outsb
add
ss
shll
sbb
xor
outsb
shlb
add
xor
pop
aad
idiv
lcall
je
scas
pop
add
leave
cmp
cltd
pop
pop
add
pop
inc
push
lock
ljmp
dec
gs
cld
pop
je
and
js
lods
or
add
push
insl
popa
or
pusha
fs
inc
push
dec
lahf
sbb
fs
add
jbe
add
pop
jo
aad
je
roll
data16
pop
popa
outsb
pusha
pop
cmp
das
or
and
inc
jae
clc
dec
push
sub
inc
add
push
jb
insb
cmp
addl
and
pop
imul
inc
jl
pop
dec
test
aad
cld
dec
je
gs
inc
out
outsb
xor
imul
aad
add
xor
imul
push
dec
xor
aad
add
hlt
push
insb
push
sti
and
or
das
jo
mulps
mov
je
and
in
in
je
or
jo
iret
sub
aad
std
dec
leave
loopne
imul
sub
aad
cld
dec
mov
fs
test
dec
arpl
or
add
sub
add
jg
xchg
xor
test
insb
add
sub
and
push
gs
daa
and
push
aad
dec
add
cmp
das
daa
ss
cli
cmp
or
add
ss
dec
mov
ss
xor
aaa
xor
or
or
cmc
xor
aaa
mov
aad
xchg
add
rcrl
sub
dec
add
mov
out
jo
add
mov
arpl
sbb
mov
xchg
sahf
stc
lcall
jp
mov
sub
cmp
ss
inc
or
xor
rorl
into
cli
dec
xor
sbb
cmp
daa
insb
std
sbb
arpl
add
fnstcw
cltd
dec
arpl
pushf
xor
sub
stos
xor
pop
add
sbb
sub
adc
addr16
add
add
cmp
xor
cs
pop
insb
add
pop
aas
gs
dec
pop
insl
dec
push
js
mov
popa
push
fsubp
arpl
jle
call
popa
call
xor
add
repz
dec
inc
shlb
pop
popa
loopne
adc
scas
cmp
and
gs
imul
gs
push
insb
add
daa
popa
je
and
add
aad
add
ret
addr16
insb
lods
addr16
popf
mov
pop
aad
cmp
insb
inc
outsb
jb
xor
pop
popa
aad
add
ds
push
bound
push
add
jne
push
repz
pusha
insb
aad
add
daa
dec
pop
je
in
imul
popa
ds
pop
pop
add
jecxz
arpl
push
popa
cmp
loope
bound
inc
add
mov
dec
mov
or
push
aad
dec
add
cs
gs
or
add
cmp
bound
add
or
add
andb
push
jo
push
add
andl
mov
add
and
sub
out
fwait
or
and
inc
cmp
ss
or
push
imulb
xor
inc
and
pop
in
daa
out
cli
or
push
testb
in
add
mov
arpl
add
fadds
aad
sub
push
cmp
lods
mov
es
cltd
jae
push
nop
jnp
jo
mov
dec
js
dec
inc
mov
out
test
add
add
push
ss
testl
shrl
outsb
dec
sub
fs
pop
das
push
xor
add
sub
clc
sub
sbb
push
fldl2t
pushl
pop
and
roll
ficoml
add
or
insl
inc
outsb
or
sbb
pop
je
or
add
cmp
push
gs
and
outsl
dec
push
cmp
jae
or
add
cld
cmp
das
push
pop
pop
push
outsl
aas
pop
push
pop
das
dec
add
hlt
data16
sub
add
add
dec
insb
outsl
fbld
cmp
add
cli
sub
sbb
fs
or
cmp
mov
je
push
dec
je
mov
cld
push
aad
data16
leave
fs
mov
addr16
mov
pop
pop
test
lds
add
cltd
cld
cmp
xchg
push
dec
test
push
arpl
add
push
imul
cld
cmp
xor
cmp
arpl
push
pop
outsb
xor
pusha
outsb
and
pop
jae
loopne
outsb
and
testb
push
ljmp
testb
add
aas
pop
pusha
cli
sub
pop
testb
leave
and
pop
test
repz
roll
or
push
add
lods
aaa
mov
xor
xor
add
or
ss
xchg
pop
popa
xchg
sub
aad
cmpsb
xor
pop
fwait
adc
jecxz
pop
xor
inc
add
ds
push
and
dec
push
and
data16
out
sub
xor
das
add
sub
je
and
push
hlt
cmp
lcall
or
arpl
add
je
add
add
outsb
add
cmp
pop
push
jmp
cwtl
cmp
je
mov
cmpsl
jg
arpl
ljmp
test
je
jnp
dec
cltd
mov
or
mov
xchg
mov
arpl
daa
insl
jge
or
fwait
inc
je
and
arpl
outsl
pop
xor
je
xor
add
pop
imul
jl
push
add
fs
jne
pop
je
jl
popl
mov
je
pop
push
pop
je
pop
pop
outsb
std
or
je
push
push
pop
je
pop
addr16
out
pop
outsb
sbb
add
sub
sbb
jne
pop
jno
pop
inc
popa
outsl
bound
add
sub
dec
inc
dec
gs
dec
outsl
add
push
push
pop
inc
lods
push
imul
push
je
push
push
pop
je
fists
ss
das
outsb
sub
add
dec
je
adc
stc
push
pop
outsl
add
push
je
jmp
add
sbb
dec
lock
mov
mov
js
mov
push
je
into
push
arpl
fsubl
mov
les
jbe
inc
add
add
push
std
inc
imul
pusha
test
cltd
orl
inc
andb
mov
push
je
or
ss
pop
xor
and
fimull
and
daa
inc
pusha
adc
cmp
cmp
xor
or
adc
sbb
pop
add
or
sti
xor
sub
dec
mov
sub
add
mov
out
cltd
or
push
loopne
pop
mov
rorl
xor
add
cmp
push
es
dec
lea
mov
cmp
aad
xchg
cmp
inc
add
and
add
in
dec
aas
xor
fisubrs
jmp
xor
push
cmp
and
and
or
or
add
inc
arpl
adc
add
dec
outsb
or
or
jl
inc
arpl
repz
arpl
sti
and
inc
inc
mov
pop
inc
sbb
jecxz
mov
xlat
push
arpl
cmpsl
add
or
adc
and
jns
jo
mov
gs
aas
add
sub
push
jne
aas
addr16
or
add
add
push
insl
jb
sub
fadds
imul
or
sbb
jbe
push
pushf
add
pop
insb
je
and
add
or
rclb
or
fldcw
push
add
or
add
pop
outsb
arpl
ds
push
add
bound
pop
jb
sub
add
sub
pop
je,pt
cld
or
add
add
ja
imul
dec
push
xor
jg
xlat
jg
je
inc
add
rclb
je
inc
pop
add
pop
clc
push
push
pop
imul
pop
and
inc
pop
imul
pop
cld
pop
add
pop
imul
pop
add
sbb
mov
add
xlat
call
mov
adc
dec
fnstenv
outsb
add
lods
aam
add
out
pop
jl
arpl
cld
xchg
dec
je
or
je
fwait
push
jb
addb
lcall
mov
das
xor
daa
add
daa
pop
inc
cmp
das
ss
push
sub
inc
push
add
xchg
add
sbb
arpl
and
das
popa
idivb
sbb
sbb
pop
icebp
xor
inc
add
add
and
push
mov
xor
pop
movsl
xor
rclb
es
jge
stos
pop
lea
int3
push
orl
fwait
sbb
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
add
pop
add
in
pop
add
in
pop
add
cld
pop
add
cld
pop
add
in
pop
add
xor
cmp
mov
add
cmp
sub
mov
lods
pop
add
lods
pop
add
jl
add
jl
add
insl
imul
jns
add
ja
add
mov
add
add
add
idiv
xor
add
inc
pop
add
or
add
inc
pop
add
cmp
add
sub
add
aad
pop
std
shlb
cld
call
mov
xchg
mov
cld
call
mov
cld
call
mov
cwtl
or
mov
rorl
mov
cld
call
add
or
aad
cld
call
xchg
adc
mov
jg
adc
mov
mov
xchg
mov
enter
rorl
shrb
cmpsl
js
sub
mov
in
sbb
mov
cltd
and
jl
jb
dec
xor
sarb
test
dec
push
jmp
or
xchg
dec
mov
lcall
xchg
jb
mov
sti
dec
mov
mov
pop
enter
mov
outsb
or
stos
in
lcall
xorl
jb
lods
mov
imul
push
add
dec
rolb
add
jb
add
inc
in
cli
or
push
mov
sqrtps
nop
lods
mov
jno
mov
mov
stos
pop
fcoml
inc
xor
push
sub
mov
fstps
jb
push
bound
add
pusha
xchg
inc
mov
sub
sub
mov
or
dec
dec
popf
jmp
jmp
xchg
ror
lods
mov
lret
movsl
and
roll
fdivl
arpl
xor
lret
cwtl
outsb
push
in
aas
out
mov
push
pop
arpl
sbb
xor
aas
cmp
scas
imul
add
mov
data16
xchg
sbb
fistpll
out
addr16
into
pop
xor
push
loope
shll
aas
push
rorb
rcll
cli
andl
gs
movsl
push
std
mov
nop
lods
mov
xor
adc
push
adc
jae
mov
jne
ljmp
lea
mov
add
rclb
mov
out
iret
fs
stc
sbb
jl
add
push
mov
aam
jno
call
xor
push
bound
in
xor
pop
mov
rcr
test
fwait
jae
jbe
arpl
mov
mov
xchg
call
mov
fisubrl
loopne
xchg
add
dec
popa
xchg
test
cmp
push
dec
dec
adc
cmc
or
hlt
adc
popf
cmp
pop
fldcw
fnstsw
and
stos
adc
push
cmpsb
push
inc
xchg
xchg
sahf
data16
mov
sub
pop
jne
xchg
aas
sti
or
pushf
test
rcrl
adc
add
or
add
or
add
or
inc
adc
add
or
add
or
out
or
rcrl
add
dec
add
or
not
or
or
jmp
xchg
dec
add
or
fcmovbe
or
out
or
jmp
or
add
or
jmp
push
in
clc
stos
dec
add
in
rorb
dec
add
in
push
add
push
in
js
in
adcb
mov
incl
in
cmp
sub
in
adc
jl
cmp
les
cmp
jl
cmp
mov
add
cmp
push
mov
add
cmp
dec
mov
add
cmp
js
cmp
inc
mov
add
cmp
and
cmp
xor
cmp
add
fadds
cmp
mov
cmp
rolb
add
cmp
dec
mov
add
cmp
push
mov
add
cmp
nop
mov
add
cmp
aad
cmpl
jl
aas
aad
test
aad
test
aad
test
aad
jl
aad
test
aad
xor
aad
xor
aad
xor
inc
aad
xor
movsb
xor
inc
aad
xor
inc
aad
xor
inc
aad
xor
inc
aad
ss
aad
xor
inc
aad
ss
aad
ss
aad
ss
aad
ss
aad
ss
aad
ss
aad
ss
aad
jecxz
adc
or
cmp
or
adc
add
or
cmp
or
aaa
xchg
or
aaa
xchg
or
add
or
add
or
add
or
add
or
add
or
add
aad
out
aad
out
aad
jb
fwait
or
add
or
add
or
add
or
scas
sti
or
add
or
add
or
jmp
add
imul
call
or
jmp
xor
call
or
jmp
sub
or
jmp
or
fwait
insl
loopne
call
or
jmp
jae
call
or
jmp
xor
call
or
jmp
xor
call
add
or
jmp
insb
mov
or
add
cmp
jl
add
jl
add
insb
or
add
jae
add
add
add
add
or
add
add
sub
add
je
cmp
cmp
add
cmp
add
sub
add
cs
cmp
cld
or
add
add
or
add
or
add
cli
cmp
cld
or
add
or
add
or
add
cmp
mov
or
add
mov
call
icebp
or
aad
cld
call
mov
call
mov
call
rorl
aad
cld
call
mov
call
mov
call
lahf
add
call
mov
call
mov
call
aad
ds
cld
call
mov
incl
add
mov
call
cmp
call
mov
call
mov
call
mov
ds
cld
call
mov
call
mov
call
add
cld
call
mov
call
mov
call
inc
or
aad
out
aad
out
aad
out
aad
xor
repz
add
or
add
or
add
or
or
or
add
or
add
or
add
add
or
or
add
or
add
or
add
or
adc
out
aad
out
aad
out
aad
add
aad
out
aad
out
aad
addr16
aad
out
aad
out
aad
sbb
mov
out
aad
out
aad
add
or
into
fcmovnu
call
or
jmp
add
xchg
call
or
jmp
xchg
call
or
jmp
cltd
call
or
jmp
pop
call
or
jmp
push
call
or
jmp
push
call
or
jmp
push
incl
add
or
add
or
add
or
add
enter
or
add
add
addl
add
add
sub
or
add
add
add
cmp
jl
add
insb
or
add
add
mov
add
add
sub
add
sub
add
xor
add
add
sub
add
sub
add
ret
mov
add
pop
add
in
pop
add
aad
cld
call
insb
jg
aad
cld
call
mov
call
mov
call
and
call
mov
call
mov
call
fidivrl
aad
cld
call
mov
call
mov
call
stc
jg
aad
cld
call
mov
call
mov
call
pop
mov
aad
cld
call
mov
incl
add
mov
call
xchg
mov
aad
cld
call
mov
call
mov
call
xchg
ds
cld
call
mov
call
mov
call
inc
cwtl
ds
out
aad
out
aad
out
aad
cmp
add
or
add
or
add
or
or
out
aad
out
aad
out
aad
or
jmp
out
aad
out
aad
out
add
aad
add
add
or
add
or
or
stos
or
add
or
das
xchg
or
das
xchg
or
das
xchg
or
das
xchg
or
das
xchg
or
das
xchg
or
das
xchg
or
das
xchg
or
sbb
mov
dec
add
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
sub
add
sub
add
cld
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
lods
or
add
add
mov
or
add
add
jl
add
insb
or
add
add
add
add
add
add
add
cmp
add
sub
add
add
sub
add
aad
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
or
aad
cld
call
jl
outsl
loop
clc
add
mov
sbb
enter
loopne
dec
mov
add
mov
in
sahf
call
in
push
dec
in
decb
pop
jmp
rcrb
lock
lock
push
jbe
push
lock
cmp
push
mov
lock
push
lock
pop
lock
aam
lock
aam
lock
adc
cmpsb
aam
lock
aad
lock
lock
lock
aad
lock
aam
icebp
add
inc
aam
icebp
jbe
push
icebp
data16
icebp
xchg
aam
icebp
cmpsb
aam
icebp
jbe
shl
xchg
xlat
loop
xlat
ljmp
xlat
cli
in
xchg
xlat
jmp
cmp
or
sub
cmp
cmp
insl
xor
push
sub
cmp
clc
mov
cmp
cltd
cmp
or
in
stc
cmp
add
repz
cmp
ret
dec
cmp
mov
cmp
ret
mov
gs
imul
cmp
jnp
cmp
push
xchg
clc
jmp
or
add
add
sub
and
dec
cltd
xor
call
popf
push
xor
popf
fs
popf
je
add
test
test
test
xchg
xor
popf
mov
test
les
test
aam
cwtl
popf
in
mov
add
test
adc
fcomps
xor
push
xchg
push
xor
xor
je
sub
xchg
xor
cltd
movsb
xor
cwtl
mov
sub
aam
aad
in
jmp
mov
out
or
add
mov
out
sub
lahf
out
cmp
out
dec
out
in
pop
out
out
imul
in
jnp
es
mov
ds
fwait
movl
mov
cmpsl
fsubrp
ds
sti
cmpsl
cmpsb
out
or
mov
out
sub
popf
out
cmp
gs
dec
out
out
pop
out
out
imul
out
jnp
and
mov
cmp
fwait
add
movb
fsubr
mov
sahf
xlat
mov
mov
lret
xlat
shl
pop
xlat
ljmp
fisttpll
lock
out
lock
fnsave
lock
or
scas
fstl
lock
pop
ficoms
outsb
fimuls
fidivs
lock
xchg
out
aad
mov
aad
jmp
jbe
mov
testb
negl
push
testl
idiv
out
push
fimuls
out
push
fisubrs
pop
fstl
outsb
dec
test
xor
cmpb
int
sahf
xor
push
clc
jmp
rorl
add
xor
xor
inc
xor
cmp
xor
and
dec
aaa
xor
stc
insl
cmp
xchg
clc
and
add
or
jno
jge
jge
imul
icebp
dec
cmp
aaa
loope
cmp
idivb
repnz
mov
xor
imul
cmpb
mov
clc
jl
stc
lcall
add
cmp
out
xchg
pusha
xor
xchg
loopne
cmp
fnsave
das
mov
pop
lcall
mov
mov
sub
cmp
xchg
cmp
popf
sbb
and
cmp
movsb
cwtl
cmp
sarl
or
sbb
mov
mov
add
xchg
fsubrp
ljmp
push
loopne
shl
sarl
stos
loopne
add
test
loopne
mov
pop
out
adc
in
or
cmp
repnz
std
call
test
ss
hlt
imul
in
stc
lds
in
push
les
jle
sbb
mov
in
mov
add
in
testb
or
out
push
cmc
outsl
fcoml
add
mov
out
stc
aam
out
in
xchg
icebp
xlat
imul
cli
push
out
xor
jmp
rorl
in
push
shrl
shll
ljmp
shr
ror
out
int
call
cmp
repnz
iret
sub
out
into
out
repnz
aad
repz
inc
hlt
add
lods
fadd
hlt
pop
fcomps
repnz
sub
cmpsb
loop
fdivrl
mov
xor
pop
xor
cmc
xor
imul
ret
xor
enter
int
inc
imul
fdivrs
and
xorb
fisubrs
xor
arpl
xor
jno,pn
mov
add
cli
lods
cmp
std
dec
cmp
sti
fstpt
push
repz
jmp
or
jmp
out
das
clc
leave
jmp
dec
xor
xchg
std
xor
fwait
xor
lcall
xchg
pushl
popfw
xchg
popf
repz
lcall
hlt
popf
jge
fcomps
mov
mov
sbb
pop
aas
xchg
cmpsb
clc
cmp
clc
incl
add
je
stc
xor
cwtl
dec
xor
cwtl
jge
stos
cwtl
popf
xor
cltd
clc
xor
xchg
inc
xor
fwait
push
xor
lret
pop
and
xchg
pop
sub
mov
jecxz
rolb
out
in
in
std
out
out
push
out
out
cmp
push
out
push
pop
out
insb
mov
jg
add
sbb
mov
loop
shll
out
in
cmpsb
test
std
cmpsb
test
push
or
call
lret
call
pop
loopne
jmp
mov
add
clc
lret
mov
inc
ret
lret
jmp
mov
dec
in
lods
or
adc
and
cmpsb
shrb
jmp
rclb
jmp
sar
ljmp
and
xchg
ljmp
fs
call
push
iret
push
call
loope
mov
loope
int
loop
mov
xchg
push
mov
aad
daa
aad
fcoms
aad
fsubrs
pop
dec
fstps
pop
fnstenv
aad
fsincos
aad
fmuls
fsub
aam
ret
push
xor
add
ss
sti
sti
xor
mov
xor
stos
cmpsl
xor
mov
add
fbstp
cmp
mov
clc
jmp
rorl
add
cmpsb
inc
xor
stos
das
add
add
or
jae
sub
and
jno,pn
jne
sbb
mov
or
add
xor
xchg
xor
jmp
xor
das
cmp
and
ljmp
stos
jbe
pop
stos
nop
cmp
popf
cmp
push
aad
sub
imulb
xlat
insb
xor
aas
and
push
insb
test
aas
mov
sarl
imul
imul
aam
in
add
subb
insb
jge
jmp
push
add
aas
pop
add
cmp
xor
pop
sub
sub
xor
pop
dec
xor
pop
jle
aad
rcr
lds
int
les
sbb
int
movsb
sub
cmp
int3
in
add
int3
std
add
shll
rcl
mul
arpl
push
out
rcrl
add
clc
rcrb
xor
iret
psrlq
test
insl
sarl
cmp
push
hlt
roll
add
aam
push
xlat
insb
ljmp
fsubr
or
push
inc
dec
fistl
xchg
fnclex
inc
mov
jmp
dec
fisttpll
inc
hlt
fcoml
mov
cmc
inc
std
fists
add
fidivrs
inc
or
lock
sti
loope
inc
sahf
loope
dec
mov
xchg
dec
inc
loope
inc
mov
jecxz
xchg
shll
cmp
aam
cmp
shll
sarl
aad
inc
cmp
sarl
in
aam
in
xlat
fdivrl
xor
std
inc
xor
sub
xor
xor
enter
xorb
push
mov
add
enter
xchg
ss
test
ss
scas
xor
and
mov
clc
movsl
or
jbe
stos
cs
call
xor
xchg
mov
add
int3
jle
cmp
mov
jmp
inc
aaa
xlat
sub
sbb
xor
test
cmp
data16
cmp
addr16
ds
addr16
cld
cmp
jmp
or
and
cmp
xor
mov
pop
push
xor
pop
bound
pop
pop
xchg
xor
mov
xor
pop
xor
pop
add
jo
xchg
xor
mov
leave
pop
aad
ret
xor
pop
scas
xor
pop
cmp
add
leave
xor
pop
jmp
jge
push
mov
xor
push
pop
sub
aad
shlb
mov
filds
js
sbb
and
jns
fucomi
ja
jnp
rcr
mov
jecxz
ror
fcmovnu
mov
lods
dec
aad
lods
sub
dec
pushf
sbb
pusha
pushf
push
aad
or
aad
or
aam
cld
addr16
sbb
sbb
sub
add
jge
inc
out
cmpsl
dec
fistps
aad
iret
fcmovnbe
or
mov
fcomps
inc
loopne
test
mov
push
jae
xchg
fisubs
inc
vcvttss2si
inc
fcmovnu
roll
fdivrp
inc
out
fstl
inc
push
fidivs
or
xchg
fiadds
inc
pop
fnstsw
inc
dec
fldl
add
inc
xor
and
fisttpll
inc
inc
fnsave
inc
push
inc
neg
jecxz
or
cmc
inc
scas
fdivl
inc
scas
fsubrl
adc
and
or
sarl
cmp
sarl
cmp
adc
xor
sub
int
js
mov
mov
and
sub
dec
add
or
sub
sub
pushf
and
xor
and
inc
xor
add
mov
flds
xor
xor
pop
cmp
cltd
ja
jae
sub
stos
mov
xor
orl
jp
cmp
stos
aas
cmp
lods
gs
popf
adc
repz
and
cmp
cmp
add
rcrl
sub
ds
pop
and
add
aas
mov
clc
cmp
stc
call
push
add
int3
pop
sbb
xor
xorb
pop
popf
xor
pop
repz
pop
add
std
pop
hlt
xor
outsl
pop
aad
add
cmp
cmp
pop
lds
xchg
pusha
adc
cmp
or
add
arpl
ds
xlat
stc
mov
aad
stos
jb
movsb
sarl
inc
rolb
cld
shrb
jmp
dec
enter
into
add
lret
fs
aaa
ret
dec
iret
push
lret
jnp
lock
stos
stos
mov
fldt
popf
cltd
aad
add
or
aam
call
fidivrl
pushl
fsts
fisubrs
adc
movsl
rclb
or
xlat
pop
cmp
cltd
mov
aas
cmp
sub
push
fisubl
in
fxch
inc
inc
fnstcw
xchg
fadds
inc
mov
fdivrs
inc
mov
jae
adcb
or
shl
cmp
sarl
add
cmp
ja
adc
bound
adc
cmp
iret
dec
xor
xor
cmpsb
ss
iret
mov
jmp
out
jmp
add
into
jb
add
mov
xor
sahf
and
repz
repz
mov
repz
mov
cmp
cmp
inc
sub
cmp
ljmp
add
and
cmp
cmpl
add
cmp
cmp
and
cmp
sahf
cmp
push
cmp
jbe
clc
mov
or
mov
test
jns
ljmp
sub
add
pop
stos
xor
xor
dec
cmp
insl
dec
js
adc
xor
pop
sbb
dec
xor
icebp
pop
mov
xor
cmp
fisttps
ss
dec
ss
dec
out
sbb
aaa
jnp
test
cmp
aaa
lock
pop
cmp
bound
repz
movsb
cmp
bound
cmp
pop
dec
cmp
pop
mov
cmp
arpl
pop
out
aam
or
add
or
dec
fisubs
aad
into
popa
rclb
add
and
dec
shrb
mov
dec
rolb
mov
rclb
xchg
rcrb
test
imul
xlat
jno
call
xlat
test
fcmovnbe
xchg
jmp
xlat
cmpsl
flds
xlat
mov
shll
aad
stos
xlat
jecxz
cltd
xlat
jmp
xlat
negl
rorl
or
clc
in
fidivrl
or
clc
ds
out
add
fdivrl
cmpsb
adc
movsb
and
xchg
cs
mov
hlt
ds
ljmp
push
jo,pt
dec
ds
xlat
inc
ds
xlat
jo
inc
xlat
jle
cwtl
test
sahf
jp
lods
sbb
lcall
cmp
xor
add
mov
push
ds
aad
cmp
aad
cmp
aad
cmp
aad
cmp
mov
cmp
cmp
mov
clc
cmp
cmp
jae
mov
push
andb
jp
mov
xor
pusha
cmp
mov
fldl
cmp
mov
add
cmpsb
jnp
push
or
call
and
xor
xchg
das
xchg
add
das
rorl
adc
pop
add
cs
sub
cs
and
cs
sub
mov
add
add
pop
xor
bound
frstor
xor
les
ss
pusha
mov
cmp
dec
and
add
dec
dec
test
adc
movsl
dec
cmp
dec
imul
pop
cmp
dec
pop
ja
or
pop
addr16
pop
pushf
ds
pop
mov
aas
xchg
push
clc
ljmp
stc
call
push
xor
mov
push
xor
push
mov
pushf
push
mov
aad
fsubrs
test
jb
jle
mov
or
mov
js
add
gs
add
lret
fwait
leave
iret
ficoms
sbb
iret
shl
iret
es
incb
add
mulb
sbb
rorl
push
or
sar
push
jge
or
jmp
mov
mov
jecxz
aad
lret
xchg
aad
ret
mov
test
add
dec
inc
jno
stc
inc
pop
int3
add
xchg
or
into
leave
xor
int3
push
xor
add
inc
xor
cmp
mov
xor
pop
rolb
rorb
sub
mov
add
fnstenv
fmul
scas
ss
into
lock
into
in
gs
push
ss
iret
je
xor
sub
sti
into
inc
ss
cmp
repnz
add
jae
cmp
mov
imul
rcrl
add
ss
jge
or
add
or
sub
or
flds
push
xor
stos
mov
push
mov
aas
xor
xchg
xor
mov
aaa
cld
icebp
ss
movsb
sub
imul
jge
out
aas
ss
add
cwtl
shlb
mov
out
cmp
sub
jb
pop
and
mov
cmp
add
pop
mov
cmp
in
inc
adc
sbb
inc
cmpl
jl
into
xor
aas
xchg
inc
push
aas
xlat
inc
cltd
aas
jns
aas
adc
mov
or
insb
pop
inc
xor
pop
scas
xor
pop
mov
xor
pop
loopne
jecxz
out
xor
adc
xor
pop
pop
xor
pop
jae
mov
pop
xchg
xor
mov
xor
outsb
into
adc
or
pusha
out
into
jne
xchg
mov
scas
into
icebp
push
sub
es
cmpsb
ror
mov
into
cmpsb
mov
repnz
cmpsb
dec
shrb
in
rclb
or
shlb
in
lret
and
adc
lds
into
cmp
enter
iret
popa
mov
add
leave
xor
cld
std
push
dec
add
aad
int3
inc
add
or
jle
scas
aam
cmp
shll
cmp
cmp
rcl
aaa
add
lds
cmp
mov
add
rcrb
js
push
cmp
jae
stos
sarl
ds
ss
ja
fadds
ds
mov
sbb
jns
aas
xlat
fistpll
or
enter
sbb
aad
cmp
xchg
sbb
iret
cmp
aad
cmp
aad
xor
xor
inc
adc
push
push
out
ss
pop
xchg
ss
cmovns
mov
jge
fcompl
ss
pop
jmp
xor
pop
sbb
xor
cli
or
into
xor
pushf
std
xor
popf
movsl
xor
lea
jno
or
lcall
orb
cmp
fwait
daa
cmp
add
xchg
iret
cmp
mov
cmp
cmp
fwait
popa
cmp
xchg
jae
out
add
add
inc
adc
pop
inc
es
ds
mov
aas
sarl
pusha
aas
mov
aas
lds
aaa
aas
call
decl
xor
xor
jge
jns
mov
adc
xor
pop
dec
xor
pop
pop
xor
pop
xchg
xor
add
pop
movsb
xor
mov
dec
pop
mov
xor
pop
xor
pop
loop
int3
pop
in
xor
pop
cli
xor
push
xor
adc
nop
pop
and
aad
rcrl
jg
imul
push
sub
roll
add
rcll
adc
xor
sbb
dec
loope
iret
xchg
in
enter
enter
enter
iret
adc
add
push
iret
dec
test
iret
pop
mov
sbb
xchg
lret
iret
mov
add
inc
jmp
into
dec
jecxz
into
arpl
push
into
mov
lret
push
iret
fld
ret
into
out
xor
test
int
stos
or
shlb
sahf
rorb
cmp
rcrb
inc
sarb
pop
rorb
cmp
roll
add
push
int3
sbb
mov
lret
sti
lret
cmp
outsb
xor
push
xor
cmp
cmpsb
lret
adc
test
int
xor
int
xor
into
dec
xor
int3
imul
enter
call
cs
push
push
cmp
lahf
cmp
add
lret
cmp
sbb
push
cmp
outsb
clc
inc
rorl
add
push
sbb
push
add
das
inc
or
das
fwait
push
jns
sbb
daa
dec
cs
and
sub
jno
xchg
sub
fwait
add
test
sub
mov
insb
sub
mov
xor
xor
add
mov
sub
push
xor
cmp
xor
dec
inc
mov
int3
aas
aam
addr16
push
test
ss
pop
sbb
int3
inc
or
adc
push
cmp
cmpl
sbb
xor
cmp
inc
addr16
inc
loope
xchg
inc
push
bound
aas
sbb
aas
mov
cld
pop
cli
dec
add
push
xor
add
cmp
cmp
xor
pop
out
mov
xor
mov
pop
lret
cmc
leave
push
ret
mov
and
inc
scas
fcmovnb
leave
scas
and
pop
ror
data16
adc
add
fwait
clc
ret
cmpsb
lock
mov
loopne
repnz
ret
add
arpl
or
pusha
cmp
cli
add
clc
int3
shlb
int3
rep
jp
fiadds
into
xor
dec
int
push
je
ret
enter
iret
or
jecxz
ror
xor
lret
fdivs
jno
cmp
repnz
mov
cs
adc
sub
vcvttsd2si
xor
jle
aad
rcl
cmp
aam
add
aaa
ret
aaa
jo
and
rcl
in
cmp
xlat
xor
cltd
rclb
ss
icebp
ss
push
xor
into
add
xor
movsb
int3
in
or
cltd
xor
leave
sti
das
sbb
enter
and
xor
lea
lea
insb
lcall
mov
or
xlat
add
cmpsb
and
testb
das
push
xchg
sub
mov
sbb
xor
and
mov
shlb
or
pop
sbb
ss
mov
loope
add
out
xorb
or
imul
or
pop
add
inc
add
sub
or
fldenv
fidivl
add
cmp
dec
cmp
add
aad
and
jno
xchg
aaa
mov
cmp
aas
ja
push
aas
fwait
cmp
ds
inc
and
xor
cmp
aas
lea
fwait
aas
scas
cmp
inc
out
cmp
inc
jg
mov
inc
sarl
jbe
ja
or
out
leave
out
jge
push
aas
fwait
mov
in
xchg
lcall
add
aaa
push
xor
xor
xor
mov
aad
xor
add
xor
add
xor
out
xor
adc
xor
stc
xor
and
aam
es
pop
xor
cmpsb
add
inc
cmpsb
mov
insl
cmpsb
xchg
ret
cmpsb
adc
mov
add
ss
mov
out
gs
add
pusha
mov
sbb
add
aad
cmp
sbb
pop
enter
ret
std
cmp
aad
movsb
scas
cltd
cmp
or
mov
aad
xchg
xor
iret
sbb
scas
aaa
loopne
sbb
dec
pop
mov
and
jge
pusha
cmp
and
cmp
daa
mov
inc
pop
sub
inc
sub
add
cmp
sub
jge
cmp
sub
inc
jge
cmp
sub
inc
sbb
sub
inc
cmc
daa
lret
inc
std
daa
mov
inc
std
daa
mov
in
xchg
adc
fstl
add
std
adc
xor
mov
adc
lret
adc
cmp
adc
add
repnz
adc
mov
insl
adc
cmp
jp
jge
cmpb
xchg
or
jmp
add
push
push
xor
out
xor
out
xor
loope
xor
leave
int
and
aad
cmp
mov
pop
xor
insb
xor
jl
cmp
test
add
xor
mov
cmp
xchg
xor
pushf
xor
movsb
xor
lods
xor
sbb
mov
sbb
xor
cmp
aaa
jle
push
cmp
and
in
xchg
cmp
and
cmp
and
cmp
jno
popf
and
cmp
dec
cmp
cmp
add
rclb
int3
mov
movsb
ds
stos
sub
push
mov
sub
xchg
adc
cmp
add
push
cli
bound
xor
cmp
lea
add
jo
std
xchg
je
add
insl
sub
lds
xor
lds
xor
movsl
int
cld
movsl
jb
sbb
inc
xor
add
xor
xorl
add
add
xor
in
xor
in
xor
in
cld
xor
sbb
xor
sbb
sub
sbb
xor
sbb
xor
push
xor
sbb
aaa
loopne
shlb
sbb
adc
ss
divl
and
pushf
aaa
rcrb
and
pop
pop
jo
pusha
pop
daa
cmp
push
cmp
sbb
xor
xor
inc
xor
cltd
sbb
ss
sbbb
cmp
and
cmp
and
je
cmpsl
aaa
and
inc
aaa
fcom
adc
std
iret
sbb
adc
iret
xor
pop
ss
jp
stos
lahf
inc
xor
sbb
xor
or
xor
adc
cmp
jl
or
repz
jmp
cmp
jecxz
cmp
cmp
shlb
cmp
lret
push
ret
or
jmp
add
movsb
or
test
xor
push
xor
or
aas
incb
ss
std
xchg
xor
jp
pop
ds
bound
pop
es
mov
and
jb
cmpb
mov
andb
jp,pt
lcall
add
stos
bound
mov
cmp
ret
and
sarb
jp
fidivrl
push
and
ljmp
and
jb,pt
add
jp
or
andb
aas
jp
sbb
shlb
aas
fisubl
aas
bound
xor
cmp
cmp
jb
inc
aas
aad
cmp
lcall
ljmp
add
add
jo
std
adc
xor
lds
cmc
inc
movsb
pop
xor
movsb
insl
xor
lods
xor
pop
push
xor
push
jns
cli
push
pop
sub
xor
call
in
cli
enter
ret
inc
jbe,pn
jg
dec
ret
subl
xor
popf
das
popf
mov
or
and
cmp
cli
pop
mov
cmp
jmp
push
ja
int
pusha
cmp
test
sbb
and
cmp
daa
cmp
ret
or
jae
popa
push
add
or
xor
jg
movsl
xor
sbb
xor
cmp
cmp
add
rcrb
adc
cmp
aad
sbb
mov
xor
add
movsl
aam
addl
xor
xor
addr16
lahf
aaa
lret
ss
adc
mov
lret
jg
aas
cmp
mov
jg
pop
scas
mov
clc
cmp
cmpsl
cs
push
jge
dec
add
or
cmp
in
xor
cli
fnsave
imul
xor
jl
dec
lds
xchg
lds
xor
lds
movsl
xor
add
jmp
xor
das
or
xor
insb
das
jo
mov
sbb
aaa
mov
sbb
aaa
pop
and
cmp
and
cmp
and
cmp
add
cli
pushl
jb
push
push
mov
xor
push
push
xor
push
xor
xor
das
ljmp
xor
adc
and
aad
cs
stos
in
cs
adc
fldcw
xorb
adc
xor
add
std
cmp
incl
add
mov
xor
out
sub
jecxz
cs
leave
ss
jo
std
cli
mov
add
sub
mov
cmp
pushf
cmp
or
cmp
or
cmp
cld
inc
cmp
cld
inc
cmp
in
xor
cmp
inc
cmp
and
dec
fsubl
push
int3
hlt
cmp
or
cmp
and
cmp
and
cmp
and
cmp
add
and
cmp
and
dec
and
push
sbb
xor
sub
jecxz
lret
cmp
sbb
cmp
sbb
cmp
lods
cmp
sbb
cmp
sbb
xor
stos
pop
xor
mov
dec
ss
pop
arpl
cmpsb
sbb
xor
aad
out
mov
out
add
or
add
lods
push
fbstp
enter
ret
jmp
rorl
add
cmpsb
out
xor
xor
sahf
in
sub
xor
lea
xchg
cmp
add
cmp
jecxz
add
ss
clc
mov
or
addr16
js
dec
shrl
add
xor
ret
sbb
int
sbb
add
out
xor
cli
fnsave
imul
jge
dec
add
xor
insb
sub
xor
jl
sti
fmuls
add
jl
adc
int3
sbb
rcrb
cmp
dec
sbb
sbb
sbb
sbb
mov
sbb
xchg
sbb
xchg
sbb
les
mov
int3
xor
aam
adc
fdivl
sbb
in
adc
in
xor
hlt
xor
cld
xor
or
mov
sbb
aad
sub
dec
sub
mov
sub
xor
inc
shrl
dec
leave
mov
sub
sub
sub
sub
sub
sub
mov
loope
xchg
add
sub
and
mov
enter
xor
vmovaps
leave
dec
aaa
hlt
shll
or
xor
and
push
test
ss
in
xchg
or
ss
or
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
dec
cmp
mov
adc
adcl
or
mov
adc
cmp
adc
imul
and
sub
or
inc
adc
sub
and
sub
and
sub
and
xor
aaa
sub
and
sub
and
sub
and
add
or
jmp
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
add
or
add
add
lods
or
add
add
mov
or
add
add
jl
add
insb
or
add
add
add
add
add
add
add
cmp
add
sub
add
sub
add
cmp
add
add
cmp
add
sub
add
sub
add
cld
or
add
or
add
or
add
or
add
or
add
cld
call
cld
call
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
incl
add
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
lods
or
add
add
mov
or
add
add
jl
add
insb
or
add
add
add
add
add
add
add
cmp
add
add
sub
add
sub
add
cmp
add
cmp
add
aad
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
incl
add
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
add
add
sub
add
cmp
add
cmp
add
add
sub
add
sub
add
cld
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
lods
or
add
add
mov
or
add
add
jl
add
insb
or
add
add
add
add
add
add
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
incl
add
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
add
add
add
add
add
add
add
add
cmp
add
sub
add
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cld
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
lods
or
add
add
mov
or
add
cld
call
cld
call
cld
call
cld
incl
add
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
call
pusha
cld
incl
add
pusha
cld
call
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
add
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
add
add
mov
or
add
jl
add
jl
add
insb
or
add
jl
add
jl
add
insb
or
add
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cld
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
cld
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
incl
add
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
lods
add
inc
insl
sbb
outsl
ja
and
add
mov
aam
mov
jns
pusha
cs
loope
popf
stos
xchg
insl
adc
lret
pop
jle
dec
into
and
sub
jge
mov
sbb
out
and
shlb
cmpsl
testb
gs
jecxz
cwtl
enter
aaa
add
lret
inc
jg
sub
dec
mov
sbb
add
add
adc
xchg
add
cmpsl
cmp
adc
sbb
pop
dec
pushf
stc
repz
jecxz
loopne
and
and
mov
shrb
mov
les
test
cld
loope
rolb
pusha
dec
jg
fucom
outsl
roll
add
add
les
jae
sub
push
imul
lea
push
loope
mov
mov
cmp
js
and
addr16
xor
movsl
jle
js
push
pusha
xor
mull
push
dec
ret
ljmp
outsb
mov
cld
fidivrs
add
jnp
or
cs
out
ja
jbe
mov
rcr
loop
xchg
mov
jge
mov
ss
jb
mov
out
ret
pop
in
or
ja
lods
imul
repnz
scas
dec
mov
outsb
mov
xor
leave
push
sbb
or
add
xor
mov
lock
into
pop
data16
add
stc
jecxz
sbb
addr16
push
sub
lret
mov
dec
and
repnz
and
enter
lds
ja
in
mov
pop
call
push
in
mov
mov
stos
add
and
fistps
fs
add
adc
jp
gs
or
add
cmpsl
out
jp
sbb
popa
jle
jge
or
int3
and
int3
orb
mov
xchg
dec
lcall
pop
ret
and
sub
xor
or
int
inc
cld
dec
ret
pop
mov
mov
imul
cmpb
mov
pop
mov
mov
xorl
inc
int
inc
loopne
aam
mov
add
xchg
push
in
int3
jecxz
popf
sar
fstl
testl
pop
aam
mov
push
lock
int3
testl
adc
repz
or
jmp
xchg
push
hlt
push
dec
decb
lods
xchg
dec
hlt
out
rcll
jae
xchg
push
lock
or
inc
fstl
push
leave
decl
add
inc
or
add
test
adc
in
dec
xlat
jmp
nop
cmp
inc
or
jne
add
iret
out
jmp
std
mov
int3
adc
int3
or
int3
and
int3
adcb
fiaddl
mov
xor
ret
addl
xchg
add
jmp
or
add
out
lcall
sub
ljmp
mov
mov
inc
add
sub
push
or
cld
aad
add
adc
add
cmpl
inc
cld
pop
or
call
out
adc
and
xchg
or
lea
add
pop
test
mov
adc
int3
or
int3
mov
xchg
jmp
push
xor
sti
xchg
aas
xor
pop
ds
rolb
pop
xchg
dec
lret
int3
mov
int3
mov
xchg
jmp
sbb
push
mov
adc
enter
aad
mov
int3
mov
int3
and
int3
mov
adc
scas
or
leave
incb
add
icebp
out
aad
inc
clc
lods
xor
aas
aad
inc
clc
movsl
xor
int
inc
cld
pop
int
push
pop
aad
push
dec
lds
push
fcmovbe
sti
mov
xchg
jmp
lcall
jmp
xchg
inc
cld
push
dec
decb
cltd
add
push
pop
test
or
shlb
mov
push
std
dec
jno
mov
scas
dec
jae
add
sbb
xor
jmp
cli
mov
int3
adc
int3
or
int3
and
int3
adcb
add
mov
inc
aad
mov
int3
or
int3
and
int3
adcb
inc
int
ja
aad
test
adc
test
mov
or
inc
or
pop
mov
add
cmp
inc
xchg
or
add
xor
mov
jl,pt
aam
dec
cld
pop
xlat
sti
cmp
ss
inc
dec
sti
mov
cmp
mov
lret
test
xchg
dec
lock
adc
sub
pmullw
xchg
xchg
inc
or
or
fstl
lsl
nop
push
or
sbb
or
jb
push
add
fstl
add
mov
fidivrs
mov
test
xchg
inc
in
into
jecxz
and
cld
push
rcll
mov
call
xchg
dec
lock
mov
hlt
add
or
lock
fisttps
lds
or
or
dec
into
fisttps
add
clc
adc
dec
sti
mov
mov
mov
or
mov
test
rorl
mov
cs
pop
aad
mov
adc
inc
lds
fisttps
pop
aad
sbb
call
or
adc
mov
mov
sub
mov
cwtl
inc
call
or
xchg
inc
sub
add
push
mov
mov
cmp
decl
mov
cmp
sbbl
xchg
das
sbb
dec
int
lea
adc
push
pop
sti
push
lods
xchg
cli
mov
fisttpl
adcl
inc
hlt
pop
int3
jmp
xchg
add
imul
jl
rcll
lcall
loop
push
dec
lret
int3
mov
adc
leave
dec
stc
out
aad
inc
clc
lods
cmp
inc
clc
movsl
xor
std
or
jl
int
inc
cld
dec
int3
sqrtps
or
les
push
loop
sti
mov
fstpt
and
cmp
xchg
or
add
enter
aad
dec
add
xchg
mov
int3
and
lahf
subb
mov
lret
xchg
or
pop
iret
repz
test
pop
mov
pop
dec
jae
push
mov
add
cmc
test
test
mov
test
add
pop
or
fldl
mov
scas
adc
mov
xor
sub
sub
mov
dec
test
sub
int3
xchg
inc
lret
int3
mov
int3
mov
test
xorl
inc
pop
or
add
mov
lahf
insb
sub
fdivr
pushl
mov
or
push
add
test
dec
std
lret
decl
aad
push
hlt
ss
inc
aad
cmp
ljmp
mov
jmp
orl
leave
decl
mov
add
or
pop
sbb
jg
aad
add
daa
and
shll
add
or
mov
int
inc
aad
mov
add
mov
adc
call
into
out
aad
test
popf
sub
clc
sbbl
test
faddl
mov
fisttpll
and
int3
addb
inc
leave
mov
in
mov
aam
int3
mov
int3
mov
sub
mov
rolb
adc
add
addb
int3
xlat
mov
push
test
or
pop
mov
sub
mov
push
test
test
in
addb
sbb
or
call
hlt
ljmp
mov
or
push
mov
push
push
ss
lock
int3
jecxz
mov
test
flds
icebp
rcl
clc
addl
xchg
push
roll
add
aad
push
mov
jl,pt
aam
inc
hlt
dec
fisttps
fildl
cmp
ds
pop
pop
iret
out
std
sbb
dec
call
loope
test
cmpl
inc
in
test
stc
int
cmc
test
add
test
orl
pop
mov
add
push
clc
xor
sbbl
test
mov
jmp
adcl
lret
fldenv
lahf
insb
mov
xor
mov
into
fildl
aad
jae
dec
push
pusha
call
or
cmp
aad
sbb
mov
test
xlat
test
addb
add
out
aad
adc
mov
test
xlat
add
fsubrp
mov
push
testb
or
jne
lahf
aas
push
dec
into
sti
push
aas
or
push
lds
call
mov
dec
fcomps
xlat
mov
push
cld
inc
loope
inc
loopne
and
dec
mov
cs
mov
int
inc
aad
out
add
jno
clc
adcl
mov
aad
add
leave
lock
jg
fcom
sbbl
loopne
into
out
aad
cmp
inc
aad
or
call
sbb
dec
mov
das
clc
call
or
sbb
cmp
fsubs
mov
out
aad
cmp
incl
add
out
inc
lods
decl
add
call
loopne
out
aad
out
jns
clc
sbbl
decl
lret
pop
xchg
add
test
decl
aad
out
sub
clc
adcl
xchg
jle
inc
sub
int3
fisttps
aad
dec
sub
call
incl
add
test
or
test
shl
or
mov
xor
adc
jge
inc
aad
clc
push
andl
mov
aad
add
aad
lret
int3
mov
test
mov
add
int3
and
lret
int3
mov
fadds
pop
subps
xchg
or
add
add
push
pop
push
ds
int3
mov
lds
inc
aad
imul
or
cmp
clc
call
pop
mov
fisubl
pop
push
mov
push
or
and
test
adc
int3
add
rolb
add
aad
inc
fmull
repz
or
sbb
call
or
inc
jns
add
aad
dec
or
add
call
dec
xor
mov
clc
xor
add
mov
fsubs
add
aad
add
inc
aad
add
aad
cmp
lret
jmp
roll
or
add
addr16
shlb
out
aad
pop
call
xor
mov
out
add
aad
inc
call
adc
test
orl
addr16
adc
popf
insb
cmp
lods
out
aad
add
mov
test
xchg
mov
call
jge
cmp
ss
aad
jnp
xchg
or
and
clc
call
add
add
aad
cs
sbbl
decl
aad
arpl
push
or
imul
or
jne
push
cld
scas
aam
jae
addb
orl
and
int
outsl
call
movsl
and
xchg
call
xor
test
mov
idiv
add
cli
mov
or
aam
add
jg
in
sti
add
dec
xchg
orl
push
or
adc
call
or
or
testl
mov
orb
jge
incl
sbb
test
mull
testl
aad
test
cmp
divl
iret
push
call
or
subl
in
enter
inc
aad
mov
clc
mov
and
lret
or
dec
mov
inc
add
add
or
mov
shl
inc
aad
push
call
shrl
clc
call
add
out
aad
out
pop
sub
test
and
inc
aad
ret
add
out
addr16
int3
push
call
mov
sub
mov
test
inc
aad
mov
pop
push
cmp
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
add
or
add
cmp
xor
mov
xor
flds
add
xor
cmp
or
cmp
sbb
or
ds
xor
aas
aad
add
orl
divl
nop
cmp
xor
cmp
xor
aaa
pop
xor
add
cmp
hlt
aaa
imul
pop
cmp
xor
mov
jle
int
or
loopne
sub
adc
mov
cmp
xor
lods
xor
ds
xor
fbstp
cmp
adc
push
aas
inc
xor
pop
ds
xor
ret
ds
xor
mov
add
cmp
sarl
inc
sbb
ss
cmp
ljmp
ss
cmp
ss
cmp
ss
cmp
aaa
sarl
aaa
sahf
cmp
aaa
mov
xchg
inc
cmp
aaa
je
test
aaa
and
aaa
hlt
cmp
aaa
add
cmp
xor
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
and
stos
mov
aad
jge
jno
mov
xchg
cwtl
mov
mov
jns
das
call
ret
inc
stos
adc
pop
xor
jmp
mov
out
and
pop
stos
in
insb
jbe
adc
js
pop
fwait
and
rorb
dec
shlb
mov
jno
aam
mov
sbb
push
fisubs
popa
dec
into
ss
sbbb
mov
push
adc
pop
push
add
repnz
roll
scas
cmp
sub
inc
push
fists
cmp
xor
mov
sbb
and
push
jg
mov
xlat
lahf
mov
test
xor
rcr
mov
hlt
pop
xchg
jnp
or
pop
dec
inc
jae
scas
lea
int3
mov
and
lods
popf
add
cmp
mov
jns
adc
hlt
addr16
insl
sahf
int3
in
jne
push
add
imul
and
test
adc
mov
xor
std
mov
adc
int3
xchg
mov
push
scas
call
add
jne
call
cmp
cmp
dec
loope
pop
mov
xchg
pop
and
icebp
rcpps
lea
or
inc
pop
jns
es
in
lahf
iret
ds
ljmp
sub
into
lret
adc
sub
add
in
aam
sub
roll
out
shr
es
and
sbb
cli
das
mov
pusha
push
jae
cld
jp
mov
pop
sub
leave
fdivl
testb
add
cltd
sbb
hlt
out
daa
and
lret
cmc
or
dec
and
fs
sbb
out
.byte
cwtl
loope
inc
jb
xor
xor
xor
cmp
xor
add
add
inc
add
add
cmp
push
pop
add
popa
add
aaa
add
jb
dec
add
add
add
inc
add
add
jno
push
add
data16
xor
add
add
add
add
add
jp
inc
add
add
add
sbb
inc
add
dec
add
push
add
inc
add
inc
add
add
add
dec
add
push
add
inc
add
inc
add
add
add
jae
add
pop
add
inc
add
dec
add
insl
add
jae
jo
popa
add
add
pop
add
insb
add
imul
add
or
add
xchg
xor
sub
add
and
add
mov
add
inc
xor
dec
xor
pop
xor
jo
add
jle
add
mov
add
add
add
movsb
xor
add
add
dec
xor
pop
xor
jo
add
jle
add
mov
add
add
add
movsb
xor
add
add
push
add
imul
insb
insb
outsl
arpl
add
push
imul
imul
jns
add
js
inc
jb
popa
je
inc
imul
jae
jb
outsb
inc
add
scas
add
jae
jb
jo
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
add
bound
add
add
add
add
add
add
addb
add
js
add
mov
add
add
add
addb
add
bound
add
add
add
add
add
add
pop
add
addb
add
addb
addb
add
bound
add
add
add
add
or
add
add
cmp
add
add
add
pop
dec
add
add
add
add
or
add
inc
add
sub
add
bound
add
add
add
add
add
add
add
andb
add
add
subb
add
add
subb
add
add
bound
add
add
add
add
or
add
add
add
add
addb
bound
add
add
add
add
or
add
add
add
dec
add
and
add
pop
dec
add
add
add
add
or
add
add
in
dec
add
push
add
add
pop
dec
add
add
add
add
or
add
add
inc
dec
add
ret
add
pop
dec
add
add
add
add
pop
add
add
add
add
pop
dec
add
add
add
add
or
add
push
add
sbb
add
bound
add
add
add
add
addb
add
add
addb
add
bound
add
add
add
add
or
add
add
add
add
and
add
bound
add
add
add
add
add
add
adc
add
bound
add
add
add
add
or
add
add
add
add
xor
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xchg
nop
add
jns
add
add
sbb
add
add
sbb
add
add
mov
add
notl
add
data16
add
add
add
add
pusha
add
jle
jle
jle
add
div
div
mul
add
add
add
jg
jg
jle
pusha
add
add
xchg
incl
mul
pusha
add
add
xchg
decl
mov
add
add
xchg
mov
mov
add
xchg
decl
jle
pusha
add
add
xchg
clc
mov
add
add
add
mov
add
add
add
xchg
div
mull
add
add
xchg
clc
mov
add
add
xchg
mov
mov
add
add
add
xchg
push
add
add
add
xchg
push
add
add
add
mov
mov
add
add
test
inc
inc
inc
inc
inc
inc
add
add
add
test
inc
inc
inc
hlt
hlt
hlt
add
add
add
test
inc
inc
inc
inc
inc
inc
add
add
add
mov
mov
add
add
push
jmp
inc
incl
incb
cld
pop
clc
ud0
lock
clc
add
jmp
add
rolb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
pop
nop
add
add
add
jns
add
add
add
xchg
add
add
add
jns
add
add
orb
add
xchg
jle
add
add
add
add
add
add
add
add
jo
add
jo
add
jo
add
add
mov
add
stc
push
jmp
inc
incl
incl
ud0
add
incl
ud0
add
incl
ud0
add
incl
ud0
add
incl
ud0
rolb
addb
add
or
add
add
and
addb
add
add
bound
outsl
add
je
and
dec
add
add
imul
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
add
add
add
add
add
add
incl
add
je
jb
and
dec
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
test
add
add
add
add
and
xor
cmp
cmp
cmp
and
jno
ja
add
add
add
outsl
add
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
push
add
add
out
insl
add
add
add
add
incl
add
push
add
add
sub
sub
icebp
add
add
incl
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
push
add
add
sub
aaa
add
add
incl
add
outsb
add
data16
add
and
imul
imul
add
add
add
add
add
add
jb
outsl
add
imul
and
popa
add
add
imul
insl
add
insl
add
add
add
add
add
data16
add
jne
outsb
add
je
imul
popa
add
add
add
add
outsl
add
and
jne
jae
add
jae
and
ja
imul
and
jae
insb
add
add
je
and
jbe
imul
popa
add
add
insl
add
popa
add
jb
insl
add
outsb
add
add
add
add
outsl
add
je
and
jne
jae
add
jae
and
ja
imul
and
jbe
imul
popa
add
add
insl
add
popa
add
jb
insl
add
outsb
add
add
add
imul
and
outsb
add
add
add
and
insl
add
add
imul
arpl
popa
add
add
outsb
add
add
je
imul
je
jns
and
jo
jb
outsl
add
jb
popa
add
and
ja
imul
and
push
add
add
and
data16
outsb
add
je
imul
popa
add
add
add
add
outsl
add
and
add
imul
and
jne
jae
add
add
add
add
add
push
add
add
sub
adc
icebp
add
add
add
incl
add
jae
imul
and
xor
add
add
add
add
add
push
add
add
sub
pusha
add
add
repnz
add
imul
add
imul
outsl
add
add
cmp
inc
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
ja
add
add
add
outsl
add
das
add
outsb
add
bound
insb
add
das
add
das
add
add
add
add
add
push
add
add
sub
push
add
add
add
add
incl
add
and
popa
add
add
add
je
and
outsl
add
and
push
add
outsb
add
add
jae
sub
add
add
add
popa
add
outsb
add
data16
arpl
popa
add
add
outsb
add
add
je
imul
je
imul
sub
and
jae
add
add
add
add
add
incl
add
add
add
les
lret
add
add
add
add
add
popa
add
outsb
add
data16
add
and
push
add
je
je
imul
jae
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
incl
add
outsb
add
data16
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
push
insl
add
add
add
add
jae
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
push
push
add
add
add
add
incl
add
add
ja
and
add
outsl
add
jae
add
add
jne
jb
jae
outsl
add
add
push
push
add
pop
add
add
add
add
incl
add
add
ja
and
add
add
bound
outsl
add
jb
add
add
outsl
add
jne
jae
add
push
push
add
pop
add
add
add
add
incl
add
add
ja
and
add
add
je
and
add
add
add
add
add
add
and
push
push
add
pop
add
add
add
add
incl
add
jbe
add
je
and
arpl
outsl
add
add
jae
add
push
push
add
pop
add
add
add
add
incl
add
and
dec
add
add
and
add
outsl
add
je
jb
popa
add
je
and
insl
add
add
add
add
push
push
add
add
add
add
incl
add
add
je
and
dec
add
outsb
add
insl
add
jp
add
add
add
and
push
push
add
add
add
add
incl
add
add
ja
and
dec
add
add
imul
add
add
add
add
add
in
add
add
incl
add
add
outsl
add
jne
jae
add
add
add
add
add
incl
add
imul
add
add
add
add
add
add
incl
add
insb
add
add
pop
add
push
pop
add
add
incl
add
arpl
imul
add
add
add
add
add
push
pop
add
mov
sub
incl
add
add
jae
pop
add
push
pop
add
add
incl
add
jae
add
je
popa
add
add
outsb
add
add
add
add
incl
add
add
add
xchg
add
add
add
cmp
xor
add
add
dec
add
add
imul
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
rolb
addb
add
push
add
add
add
add
add
add
jno
ja
add
add
add
popa
add
outsb
add
data16
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
push
add
add
roll
add
add
add
add
incl
add
push
add
add
daa
add
add
add
incl
add
outsb
add
data16
add
and
imul
imul
add
add
add
add
add
add
jb
outsl
add
imul
and
popa
add
add
imul
insl
add
insl
add
add
add
add
add
data16
add
jne
outsb
add
je
imul
popa
add
add
add
add
outsl
add
and
jne
jae
add
jae
and
ja
imul
and
jae
insb
add
add
je
and
jbe
imul
popa
add
add
insl
add
popa
add
jb
insl
add
outsb
add
add
add
add
outsl
add
je
and
jne
jae
add
jae
and
ja
imul
and
jbe
imul
popa
add
add
insl
add
popa
add
jb
insl
add
outsb
add
add
add
imul
and
outsb
add
add
add
and
insl
add
add
imul
arpl
popa
add
add
outsb
add
add
je
imul
je
jns
and
jo
jb
outsl
add
jb
popa
add
and
ja
imul
and
push
add
add
and
data16
outsb
add
je
imul
popa
add
add
add
add
outsl
add
and
add
imul
and
jne
jae
add
add
add
add
add
push
add
add
sub
dec
add
or
lock
incl
add
add
outsl
add
add
push
add
add
add
jae
and
insl
add
jae
jae
popa
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
ds
add
outsb
add
and
push
add
outsb
add
add
add
cmp
inc
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
ja
add
add
add
outsl
add
das
add
outsb
add
bound
insb
add
das
add
das
add
add
add
add
add
push
add
add
daa
add
add
add
add
add
incl
add
and
popa
add
add
add
je
and
outsl
add
and
push
add
outsb
add
add
jae
sub
add
add
add
popa
add
outsb
add
data16
arpl
popa
add
add
outsb
add
add
je
imul
je
imul
sub
and
jae
add
adc
add
bound
outsl
add
je
and
dec
add
add
imul
add
add
add
add
add
insb
add
arpl
imul
add
outsb
add
add
add
add
add
add
and
ja
imul
outsl
add
and
je
outsl
add
add
add
imul
add
add
add
add
insb
add
arpl
imul
add
outsb
add
add
add
add
add
add
and
ja
imul
outsl
add
and
je
outsl
add
add
popa
add
add
add
je
and
data16
add
je
add
add
add
push
add
cmp
das
add
add
ja
ja
add
ja
add
add
add
outsl
add
das
add
outsb
add
bound
insb
add
das
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
add
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jo
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
jno
ja
add
add
add
outsl
add
jo
outsl
add
popa
add
add
outsb
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
jno
ja
add
add
add
popa
add
outsb
add
data16
add
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
inc
add
dec
add
inc
add
inc
add
add
insb
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
ja
add
add
add
outsl
add
jo
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
inc
add
dec
add
pop
add
add
pop
add
add
jbe
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
jno
ja
add
add
add
sub
and
push
add
outsb
add
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
jo
add
fidivl
jae
xchg
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
les
loope
jmp
cmc
xor
adc
sbb
and
ss
ss
ss
ss
ss
mov
xchg
ss
lods
ss
sub
xor
cmp
inc
aaa
pop
aaa
jp
cltd
aaa
lahf
aaa
movsl
aaa
stos
aaa
mov
mov
add
add
add
or
add
adc
.byte
.byte
