push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
add
shlb
pop
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
call
add
jmp
ret
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
mov
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
lea
jge
popf
pushl
pop
dec
push
mov
call
jmp
add
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
xor
xor
add
test
je
add
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
call
add
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
call
pusha
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
lock
add
add
cmpsb
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
into
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
push
and
add
add
add
and
add
and
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
add
fsubl
add
mov
and
add
and
add
add
cwtl
and
add
add
lock
add
add
cmpsb
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
into
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
push
and
add
add
add
and
add
and
add
and
add
add
add
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
gs
jb
arpl
jae
gs
jo
add
add
fs
imul
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
imul
je
imul
push
add
add
outsb
fs
je
insl
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
insb
jae
gs
popa
insb
jne
add
jo
outsb
fs
push
add
add
je
jb
jbe
je
push
jb
imul
push
add
popa
je
inc
jbe
outsb
je
add
aad
inc
gs
gs
inc
imul
gs
insl
gs
push
add
dec
add
insb
outsb
inc
add
roll
dec
gs
jo
jb
add
lock
imul
jb
je
arpl
push
add
je
jb
arpl
jae
gs
imul
gs
jb
jbe
push
jns
gs
add
popa
je
inc
jbe
outsb
je
add
movb
gs
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
inc
inc
inc
push
push
cs
insb
add
add
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
add
push
popa
insl
jo
insb
fs
jb
add
inc
xor
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
xor
add
or
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
or
add
addb
add
and
add
add
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jg
add
jp
stos
lods
lods
add
cmpsb
cmpsl
push
mov
mov
mov
les
int
int3
rcl
in
rcl
shl
rcl
shl
int
int
enter
enter
in
mov
mov
lods
stos
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
lret
leave
not
rcl
cld
fcom
std
xlat
fdivr
xlat
aad
rcl
iret
dec
int
aam
rcl
sar
ret
ret
ret
mov
mov
iret
movsl
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
sbb
mov
jnp
mov
sar
dec
lret
leave
call
rcl
xlat
fcomp
call
xlat
xlat
call
aad
dec
int
dec
into
int3
call
dec
int3
int3
inc
rol
mov
mov
scas
std
cmpsl
cmpsb
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
int
rcl
sar
xlat
fcom
call
xlat
call
dec
int3
into
dec
leave
lret
into
into
inc
inc
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
imul
pop
pop
pop
fs
sbb
sbb
push
or
push
xor
aaa
ss
cmp
cmp
and
and
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
mov
ret
inc
enter
rcl
call
aam
call
aad
call
rcl
dec
mov
inc
ret
mov
mov
ljmp
mov
pushf
cwtl
cwtl
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
outsl
xor
jle
jge
jle
jo
jb
bound
mov
cmp
inc
mov
outsb
outsl
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
lret
lret
lret
leave
inc
enter
ret
mov
mov
lods
scas
scas
jmp
lcall
xchg
xchg
xchg
cwtl
xchg
xchg
lcall
lahf
aas
cmp
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
jo
pop
pop
pop
or
jp
nop
lea
incb
jl
idivb
jl
jo
jo
addr16
pushw
jae
ret
jg
js
js
fs
inc
inc
cmp
sbb
sbb
movups
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsb
lcall
nop
incl
test
xchg
xchg
xchg
lahf
mov
mov
mov
js
jns
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
xchg
std
mov
jle
jno
jb
jne
je
jg
jg
test
jp
push
cmp
ss
jg
cmp
mov
test
icebp
stos
lods
lods
sti
lods
lods
lods
lods
stos
stos
stos
test
movsl
std
cltd
lcall
xchg
jge
jp
jns
jl
jns
mov
xchg
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
lea
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
push
or
inc
dec
insb
insl
imul
test
cltd
fistps
lcall
mov
decl
mov
fwait
cltd
cltd
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
lods
call
lcall
incl
xchg
xchg
xchg
xchg
pushf
popf
popf
std
mov
mov
xchg
in
nop
xchg
in
test
jne
femms
dec
add
add
inc
daa
es
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
lea
xchg
call
sahf
lahf
jmp
cmpsl
stos
pushl
cmpsl
lods
mov
xchg
test
rolb
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
pushf
xchg
pushf
decl
mov
nop
xchg
nop
decl
xchg
xchg
popf
pushf
pushf
movsl
movsl
movsb
test
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
bound
jb
mov
jg
test
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
ja
mov
cmpsb
mov
mov
lods
stos
mov
movsl
movsb
add
pop
pop
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
xchg
cltd
fwait
cltd
lcall
mov
mov
lcall
nop
xchg
les
cltd
cltd
in
xchg
cwtl
out
lea
xchg
stc
xchg
test
std
xchg
jb
fwait
addr16
lahf
pop
cmp
push
cmp
inc
jnp
mov
jnp
mov
jae
mov
outsl
ljmp
adc
stos
or
or
mov
jge
mov
mov
stos
pushf
movsl
movsl
movsl
and
add
mov
pop
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
popf
popf
lcall
pushf
popf
lcall
xchg
xchg
call
cwtl
xchg
call
lcall
fwait
lahf
stc
sahf
xchg
popf
cld
pushf
mov
xchg
insb
xchg
xchg
push
jle
xchg
dec
js
cltd
cmp
imul
push
imul
movsb
push
jmpw
adc
lods
packuswb
lods
adc
lods
adc
mov
imul
adc
mov
insl
mov
lcall
lods
scas
lods
scas
mov
mov
mov
add
add
add
pop
pop
adc
mov
mov
sahf
call
sahf
jmp
mov
mov
call
lea
incl
jg
xchg
ja
lcall
xchg
dec
jns
xchg
jo,pt
nop
sub
decl
pop
call
add
call
add
lahf
add
ljmp
pushl
sbb
outsl
mov
and
mov
pop
jne
mov
xchg
lods
mov
lods
scas
mov
mov
movsb
movsb
add
pop
pop
adc
lods
mov
mov
lcall
movsb
movsb
movsl
jmp
test
ljmp
cmpsb
cmpsl
lcall
jg
decl
outsl
decl
sub
mov
pusha
decl
or
addb
decl
add
xchg
add
xchg
add
cltd
add
sahf
add
cmpsb
or
mov
jo
mov
jne
mov
sub
shrl
les
inc
sub
cmp
xor
dec
lea
cld
scas
mov
lret
movsl
dec
mov
movsb
movsb
add
push
push
adc
test
mov
jmp
test
ljmp
stos
pushl
scas
scas
jmp
jo
decl
push
push
incl
or
add
push
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
ss
aaa
cmp
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
cmpsl
test
lods
lods
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
decl
add
sahf
add
mov
add
lods
add
pushl
cmp
dec
inc
mov
roll
call
inc
mov
fmuls
call
dec
xchg
fisttpl
fisttpl
ficoml
call
xchg
std
mov
mov
movsl
mov
mov
add
dec
inc
adc
jl
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
ss
decl
sbb
call
adc
pop
decl
push
decl
add
sahf
add
add
cmpsb
add
test
pusha
pushl
es
into
dec
call
push
xchg
call
push
cltd
fistl
fstl
jmp
push
pushf
jmp
push
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
mov
add
inc
inc
adc
ja
lahf
fwait
popf
jmp
mov
stos
stos
pushl
mov
mov
mov
mov
ljmp
inc
je
nop
and
and
xchg
and
call
sbb
nop
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
ficompl
jmp
bound
jmp
cmpsl
jmp
cmpsl
jmp
addr16
jmp
push
stos
fldl
mov
cmpsl
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
jp
xchg
cwtl
call
mov
scas
lods
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
cltd
outsl
lcall
daa
push
call
add
lcall
jmp
add
mov
pushl
adc
roll
fsubrl
jmp
jo
jmp
jo
jmp
jno
ljmp
in
jne
out
jbe
out
je
out
jae
jmp
mov
mov
cmpsl
cmpsb
lcall
lahf
add
jg
cmp
cmp
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
jo
lahf
cmp
sahf
cmp
lahf
xor
fwait
sbb
call
add
sahf
add
add
test
add
mov
gs
mov
sbb
ficoml
jmp
jbe
jmp
jle
in
cmpl
push
xchg
push
test
ljmp
inc
mov
stos
cmpsl
popf
popf
sahf
daa
lahf
mov
mov
add
add
xor
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
ret
ret
pushl
insb
mov
lcall
jmp
jbe
fwait
sbb
xchg
add
sahf
add
movsb
add
test
pusha
ljmp
add
mov
add
shll
cmp
movsl
ljmp
out
sar
pop
push
nop
ret
push
nop
ret
push
nop
push
xchg
xchg
stc
pop
out
pop
ret
clc
stos
lods
stos
mov
popf
pushf
xor
sahf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
nop
pushl
mov
mov
inc
ret
ret
mov
ljmp
inc
jp
cmpsb
dec
jg
lods
dec
cmp
xor
popa
lcall
add
test
pop
ljmp
add
mov
add
movl
out
xchg
cltd
push
cltd
push
lcall
negl
sti
popf
int3
cli
lahf
int
cld
cwtl
leave
push
xchg
ret
mov
dec
mov
rcrb
popl
lcall
add
das
cs
cmp
outsb
push
dec
dec
jecxz
pusha
popa
decl
mov
mov
mov
mov
inc
inc
enter
mov
mov
ljmp
mov
movsl
sub
fwait
pop
pop
lcall
add
lods
add
mov
popa
mov
add
movl
jne
filds
out
lea
push
cmpsb
into
push
movsb
into
clc
cmpsb
int
sti
test
cld
movsl
into
sti
test
std
stos
sar
stos
sar
cld
test
mov
int
mov
mov
lahf
lahf
sahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
or
inc
bound
pop
xlat
jne
jno
mov
rol
ret
mov
ret
ret
ret
vshufps
leave
enter
pushl
push
test
lods
push
mov
scas
dec
test
lahf
sbb
sahf
add
jmp
add
mov
fs
mov
add
into
add
xlat
add
adc
in
pop
cmpsl
push
popf
leave
cld
lods
sar
cld
mov
sti
scas
aad
sti
mov
cld
mov
std
mov
std
mov
std
mov
mov
cld
mov
push
movsl
mov
dec
leave
int3
mov
mov
sahf
mov
xchg
or
add
add
xor
add
dec
dec
outsb
jo
mov
vpsubusb
fcom
jmp
fcom
not
rcl
std
lret
into
into
dec
leave
leave
dec
leave
lret
lret
lret
inc
leave
leave
mov
scas
ljmp
push
mov
stos
cmp
lcall
add
add
mov
fs
mov
add
roll
outsl
call
add
fiadds
je
ljmp
cli
scas
aam
cld
mov
mov
fcos
cld
mov
xlat
std
mov
fcos
std
rcr
mov
int
out
call
leave
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
pop
or
movb
in
out
out
in
in
loope
loop
fsub
fcmovu
fsqrt
aam
xlat
std
int
sar
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
call
add
fildl
jne
jecxz
ja
out
xor
cli
mov
loopne
inc
loope
inc
loope
inc
loopne
std
std
inc
inc
std
enter
lret
cli
mov
enter
sar
mov
mov
xchg
adc
add
add
incb
std
add
incl
hlt
cmc
hlt
or
in
in
pop
jmp
in
sub
out
in
dec
call
jmp
call
aad
jmp
mov
xchg
cmpsl
cmp
movsb
adc
jmp
popa
pushl
add
lds
imul
add
fadds
jb
fiadds
ja
call
inc
pushf
cli
mov
loop
cld
lret
in
std
into
out
std
int3
in
dec
loop
dec
loop
std
int
std
iret
in
shl
call
in
std
shl
cli
ret
fdivr
out
mov
xlat
inc
ret
test
cmpsl
mov
xchg
xchg
add
add
add
std
add
std
incl
idiv
testb
repnz
add
hlt
icebp
push
in
icebp
lock
in
repnz
out
out
pop
loopne
loop
mov
xchg
sti
lahf
es
movsl
add
add
mov
gs
mov
add
roll
jb
fildl
jbe
in
jp
in
adc
pop
stos
cld
mov
cld
iret
out
shl
call
jmp
call
in
std
aam
xlat
out
std
call
fldl2e
cld
shl
push
ret
jmp
rcr
dec
leave
lret
rep
test
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
cli
add
cld
stc
add
cld
clc
add
div
or
aam
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
add
add
fildl
jne
out
js
in
sbb
sti
fdivrp
cld
xlat
call
fucomi
std
std
fucomi
fucomi
fucomi
std
fucomp
fucomip
jmp
in
jmp
in
shl
push
ret
aam
call
rcl
clc
stos
stos
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
enter
mov
cltd
repnz
pop
lcall
jmp
add
mov
add
int
outsl
call
add
fiadds
jne
jmp
sub
std
shl
std
fdivp
std
fsubr
fucomi
call
out
cld
aam
cld
shl
sti
iret
loop
cli
shl
push
int
clc
int3
test
lret
jmp
rcr
fcom
fdivr
mov
mov
cltd
cltd
fwait
cmp
fwait
add
xlat
xlat
add
enter
mov
sahf
jmp
sub
sahf
add
test
add
mov
add
rolb
jo
fadds
jae
loopne
jp
call
aaa
xchg
cli
cwtl
sti
leave
loope
cld
lret
cli
fdivrp
idivl
aad
repz
iret
push
mov
int
ljmp
ljmp
cli
ljmp
cmc
fnstsw
fsubrp
mov
mov
xchg
add
add
add
int
mov
sarb
sahf
xor
pusha
ljmp
add
mov
add
int
jo
rorl
jne
js
loopne
cmp
dec
cwtl
ljmp
ljmp
std
loopne
scas
cli
fdivrl
lock
int3
in
enter
iret
shl
aad
out
loope
in
in
test
out
out
popf
call
lret
lret
lods
stos
adc
cmpsl
cmpsb
cmpsb
add
ret
mov
ret
mov
lods
aam
dec
cmp
sbb
test
imul
es
mov
js
mov
inc
xchg
ret
stc
lret
test
mov
sarb
enter
lret
ret
int
rol
int
aam
shlb
rcl
jg
jb
loopne
gs
in
out
jmp
xor
div
cmc
and
repnz
fcmovnu
or
mov
int
mov
add
mov
sarl
mov
test
lock
sbbl
sarb
mov
ret
mov
cmpsl
mov
mov
lret
iret
int3
shlb
iret
iret
push
rcl
rorb
xlat
aad
aam
aad
aam
fldenv
fistpl
ficoms
fsubp
loop
loope
jecxz
call
repnz
add
sti
testb
std
cld
add
incb
std
std
std
add
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
ret
inc
ror
xor
int3
lret
daa
int
shlb
rcl
rcrb
rcl
rclb
rcl
aam
rcl
aam
rcr
add
fcmovnu
add
add
in
add
jmp
add
xlat
add
std
add
mov
add
rol
ret
sub
mov
mov
push
ret
or
enter
movl
lret
add
xlat
add
fcom
add
xlat
add
aam
add
xlat
loopne
aad
add
loopne
add
fstp
add
out
add
lock
std
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
into
into
jmp
aam
cmc
rcl
aam
into
iret
sar
lret
int3
int3
stc
lret
int3
int3
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
cmpb
inc
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
leave
leave
leave
cld
into
ror
xlat
call
aad
call
rcl
dec
into
into
dec
lret
sarb
cld
stos
stos
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
je
jne
fs
inc
dec
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
aam
sar
int3
lret
int3
inc
mov
sarb
ljmp
lahf
lahf
cwtl
cwtl
xchg
jmp
jno
xchg
push
push
push
dec
add
add
add
add
add
add
jg
jg
jnp
jl
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jo
jo
mov
mov
mov
mov
mov
mov
inc
rol
inc
mov
mov
ljmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
fwait
fwait
cltd
add
popf
xchg
lcall
addb
jl
jnp
jp
jns
jns
jp
jp
jnp
jb
jb
push
push
push
cmp
jae
popf
sahf
pushf
mov
scas
scas
rep
lods
lods
sti
scas
scas
scas
std
test
test
popf
pushf
sahf
call
test
call
mov
scas
jmp
scas
scas
leave
movsb
movsb
movsl
cltd
jb
je
adc
adc
add
add
add
add
insl
insl
outsb
pop
lods
movsb
stos
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsb
jo
mov
cwtl
cwtl
lcall
lea
call
sahf
ljmp
stos
scas
std
mov
scas
mov
xlat
movsl
mov
addb
add
add
add
add
popa
or
scas
mov
movsl
sahf
movsb
decl
mov
nop
mov
cwtl
xchg
xchg
std
lahf
popf
sahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
push
outsl
imul
jge
subl
mov
std
xchg
mov
ljmp
jg
pushl
pop
mov
mov
jnp
mov
scas
lods
insl
stos
stos
test
add
add
add
pusha
or
mov
in
mov
nop
call
xchg
call
cltd
fwait
cltd
popf
fwait
pushf
lahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
lea
popl
mov
xchg
push
cld
xchg
pop
cmp
dec
jnp
movsl
inc
js
scas
aaa
ja
mov
je
mov
outsl
ljmp
sbb
pop
mov
scas
mov
movsb
movsl
movsl
push
popa
pop
popa
or
mov
in
mov
xchg
lcall
mov
mov
decl
addb
xchg
jb
cld
xchg
pusha
cmp
dec
jp
cmp
xchg
daa
push
call
push
pusha
jmp
sbb
mov
insb
pushl
pop
jae
mov
pop
xchg
mov
lods
scas
xchg
sahf
popf
sahf
adc
add
add
pusha
pop
popa
or
stos
mov
stos
movsb
cmpsl
jmp
cmpsb
cmpsl
ljmp
cmpsl
test
fwait
xchg
cltd
decl
cmp
mov
decl
adc
xchg
pop
decl
add
xchg
add
pushf
add
or
mov
jb
mov
jge,pn
les
jge
xor
dec
pop
cwtl
inc
test
scas
movsb
cmpsl
cmpsl
test
add
add
add
pusha
or
movsl
test
ljmp
scas
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
push
push
decl
add
xchg
add
lahf
add
add
mov
outsb
inc
aaa
cmp
inc
mov
into
inc
mov
rolb
aad
xchg
call
arpl
stc
mov
mov
mov
incl
add
add
pop
pusha
pusha
or
mov
ljmp
mov
pushl
mov
stos
call
push
arpl
xchg
sbb
decl
or
decl
add
sahf
add
cmpsb
add
scas
add
mov
dec
nop
fsts
fcompl
ficomps
jmp
pop
mov
jmp
insl
cmpsb
dec
cmpsl
mov
ret
cmpsb
xor
addl
dec
dec
dec
pop
jle
jl
pushf
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
push
pop
call
add
test
pop
pushl
or
int3
xor
fisubl
jmp
outsb
test
in
stos
ljmp
in
jno
jmp
cmpsl
mov
shrl
jg
add
add
add
dec
pop
outsb
outsl
insb
bound
cwtl
xchg
pushl
mov
mov
mov
jbe
lcall
jbe
sahf
sub
xchg
or
lcall
add
lods
add
mov
gs
or
call
dec
xchg
jmp
jns
jmp
mov
push
test
xrelease
fisubl
mov
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
mov
ret
inc
mov
sahf
jmp
inc
cmp
cltd
or
mov
add
mov
arpl
mov
adc
jmp
popa
mov
push
xchg
ret
push
xchg
xchg
clc
fwait
leave
cli
pushf
lret
xchg
lods
inc
mov
stos
popa
lahf
lahf
mov
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
mov
test
cmpsl
pop
mov
stos
dec
test
mov
add
test
add
mov
add
fsubs
cmp
jnp
push
mov
iret
clc
test
cli
stos
sar
std
stos
sar
std
stos
sar
sti
cmpsl
int
out
enter
in
test
sahf
popf
or
add
add
dec
push
dec
aaa
jb
je
test
int3
int
int3
int
cmc
leave
lret
int3
sti
lret
std
enter
movsb
mov
stos
pusha
mov
lods
inc
cmp
adc
cmpsl
add
mov
fs
add
int
insl
flds
xchg
push
xchg
mov
std
mov
fdivr
std
mov
fdivr
std
mov
sar
jmp
enter
repz
lods
mov
add
add
add
add
pop
or
aad
dec
loope
loope
fstp
ffree
fcmovnu
aad
out
shll
test
jb
cmpsb
push
pusha
ljmp
add
leave
add
add
in
jl
repnz
mov
sti
ret
loopne
inc
loopne
std
loope
inc
loopne
dec
loopne
dec
loope
sti
fdivr
lock
lret
divb
sahf
sbb
add
add
incl
std
std
add
jmp
in
sbb
jmp
xor
loopne
jecxz
mov
mov
mov
add
pushl
add
iret
add
fldl
jne
jmp
insl
mov
std
ret
fdivrp
cld
shl
call
in
call
in
call
out
call
out
std
xlat
out
std
shl
push
fcos
fmul
sar
mov
mov
add
std
incl
incl
std
std
incb
aam
aad
mov
pop
xchg
popf
or
test
add
lds
push
filds
jbe
out
and
std
shl
fldpi
std
fldl2e
fsubr
std
fsub
std
std
aam
push
fdivr
loope
aad
mov
sahf
popf
das
add
add
int3
into
int3
or
arpl
lods
add
mov
add
add
loop
js
out
xor
sti
int3
loopne
clc
leave
loopne
cmc
bnd
xlat
bnd
out
ret
sar
in
vpsubw
vpsadbw
aam
jecxz
fucomp
leave
mov
das
std
std
add
add
add
aad
mov
je
or
mov
imul
pop
jb
lret
and
xlat
sub
sti
fists
clc
in
mov
out
in
leave
jmp
fdivrl
lret
leave
ffreep
iret
mov
in
ficompl
in
call
rorl
mov
add
lods
lods
stos
add
xchg
mov
ljmp
xchg
fidivrl
andb
int
mov
shlb
jge
aam
iret
pop
rcl
iret
dec
fcomp
fdivrs
fnstsw
fisubrs
in
fsubl
in
icebp
adc
in
in
or
std
add
add
add
incb
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
mov
rcll
rol
adc
rcl
or
or
int
add
std
std
add
incl
cltd
cltd
lcall
rol
or
int3
into
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
lcall
ret
enter
leave
mov
ret
mov
scas
mov
insb
lods
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
aad
rcl
sar
int
into
std
mov
stc
mov
test
jle
sbb
sbb
add
add
add
add
add
add
add
add
jno
jae
push
inc
inc
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
aam
dec
int
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
je
jne
xchg
aad
outsb
outsb
ret
bound
outsb
outsb
outsb
jb
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jno
es
add
add
add
je
jb
popf
xchg
pushf
mov
test
mov
xchg
or
addl
push
push
dec
inc
mov
fwait
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
pushf
lcall
mov
mov
ret
xchg
aas
sub
push
add
add
xorl
cmpsl
test
cmpsl
cld
mov
xchg
xchg
xchg
cld
popf
pushf
sahf
cmc
cwtl
lcall
push
push
push
imul
jg
mov
xchg
testl
mov
pushl
jno
mov
mov
stos
lods
lods
push
lods
lods
stos
add
add
add
mov
scas
test
cld
xchg
xchg
xchg
call
cltd
fwait
lcall
lcall
xchg
mov
loope
jne
out
xchg
fs
push
jl
pushf
inc
jbe
movsl
aaa
jne
lods
sub
mov
outsl
pushl
aaa
jge
mov
mov
imul
int3
add
xchg
pop
scas
movsb
lods
test
sahf
pushf
sahf
jmp
movsl
movsb
call
jl
mov
xchg
inc
jae
lea
push
lea
pop
call
or
pushl
and
mov
sub
les
xchg
rcrb
subl
jae
push
movsb
fwait
lahf
test
test
test
mov
scas
pushl
xchg
decl
or
xchg
decl
add
mov
adc
ret
dec
ds
iret
inc
mov
aam
mov
aad
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
imul
test
lahf
movsb
cld
scas
scas
lods
pushl
mov
mov
call
push
pop
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
movsw
call
pushf
mov
mov
mov
test
cmpsl
pop
add
add
popa
popa
bound
sahf
pushf
lcall
mov
mov
lcall
xor
cwtl
and
call
add
stos
add
mov
push
jmp
jo
jmp
jnp
out
jge
push
jg
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
fs
movsl
inc
jl
lahf
and
pop
ljmp
add
ret
pop
insb
fisttpl
out
lea
push
xchg
push
cwtl
enter
jmp
cmpsl
mov
cmpsb
sub
inc
aas
aas
adc
push
xchg
xchg
cld
rol
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
gs
add
adc
ljmp
stc
stos
iret
sti
lods
sar
sti
lods
sar
std
lods
sar
jmp
lret
mov
movsl
ds
std
incl
xor
xor
inc
scas
mov
mov
aad
aam
aad
rcl
shr
lret
lret
mov
mov
jmp
add
ret
call
add
out
xchg
notl
fdivr
cld
rcr
inc
cld
ret
cld
ret
out
mov
ret
test
addl
stos
stos
stos
add
in
jmp
out
jmp
inc
loop
in
fcmovu
fisubl
movsb
outsb
ljmp
add
lret
add
faddl
ja
out
aaa
xchg
sti
scas
aad
dec
in
std
shl
std
shl
aam
std
aad
push
leave
fcos
ror
int3
in
scas
lods
scas
popa
addb
add
std
add
std
std
push
int3
int
sub
lahf
sbb
stos
add
mov
add
loop
jns
repz
cmpsb
std
enter
aad
aad
aad
cld
aam
cli
aam
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
ret
les
mov
push
fs
mov
or
fstpl
cmp
imul
in
mov
iret
repnz
loope
lret
aam
call
fcmovu
scas
ret
ret
lds
lcall
sarb
xchg
and
push
mov
shll
lret
js
mov
xlat
mov
lret
adc
into
outsl
fxch
iret
pop
fst
dec
in
loope
out
out
in
out
out
sbb
mov
mov
cmp
movsb
scas
arpl
lods
mov
ret
les
sbb
bswap
int3
int3
or
aam
push
std
add
std
add
add
add
rol
std
incl
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
push
rorb
cmp
sub
sbb
mov
dec
push
cmp
inc
and
dec
pushf
out
or
sub
xchg
sahf
pusha
xchg
orl
test
sub
fbld
fnstenv
add
sbb
sub
in
into
mov
cld
adcl
inc
rol
sbb
sub
mul
sbb
jp
call
inc
mov
hlt
insb
lea
in
push
add
inc
adc
xchg
cs
pop
jae
dec
roll
jno
pop
stos
ja
stos
jne
mov
xor
push
aad
and
lahf
mov
sub
fstpt
mov
push
xchg
dec
les
outsl
pop
push
mov
jbe
lock
push
push
sub
std
fisubrs
fs
jp
jmp
push
cwtl
scas
mov
push
mull
lods
xor
ss
push
dec
push
add
mov
pop
mov
jmp
dec
mov
jg
fisubl
loopne
pusha
dec
lret
adc
inc
add
orl
shll
jbe
mov
xchg
cmp
dec
lahf
push
xlat
jmp
pusha
sbb
jmp
mov
shr
mov
arpl
sub
mov
push
out
mov
ret
mov
ret
xchg
pop
jae
fisubrl
push
les
and
inc
push
and
stos
push
jg
push
pop
mov
xchg
outsb
jl
xor
dec
adc
sub
popf
aad
sbb
inc
mov
sbb
or
and
add
mov
iret
xchg
sub
jne
or
cmp
xor
testb
stos
out
dec
mov
cwtl
les
inc
and
stos
xor
aad
xchg
xor
orb
aad
add
push
or
pop
push
mov
jmp
sbb
fstpl
xor
out
repz
call
add
out
les
pop
jge
mov
cmp
inc
sahf
shlb
das
xchg
imull
in
lcall
scas
in
lods
or
dec
push
mov
jl
push
or
dec
mov
adc
push
cmc
loop
test
out
cmp
push
xchg
in
insb
mov
call
jg
adc
cmpsl
adc
lds
adc
loop
or
arpl
out
xor
mov
sarl
mov
xchg
lahf
loope
pop
sbb
jb
push
leave
xor
imul
in
and
in
lock
fstpt
sbb
mov
ja
xchg
hlt
out
mov
divb
out
mov
repz
inc
daa
mov
push
xchg
fidivs
movsb
sbb
pop
add
movsb
pop
jge
inc
movsl
lock
adcb
mov
mov
imul
sbb
mov
mov
test
push
add
fldenv
mov
xlat
add
jmp
push
icebp
sub
sub
cmpsl
xor
xlat
in
test
adcl
into
cmp
xorl
scas
subb
jo
mov
add
adc
outsb
mov
sbb
pop
insb
das
fidivs
test
ljmp
xlat
dec
stos
adcl
add
mov
jbe
xchg
xchg
mov
icebp
mov
and
dec
loop
sub
dec
lods
fisubrl
scas
repz
loope
cmpsl
imull
leave
cmc
stos
pop
xor
dec
xchg
dec
cli
and
push
enter
mov
fmull
lahf
xor
repz
pop
icebp
xor
fwait
test
daa
push
xchg
jns
cli
test
inc
sbb
and
jecxz
int
sbb
cmp
or
sti
cmpsl
andl
repnz
pop
hlt
mov
hlt
adc
sub
mov
js
inc
sahf
sub
in
leave
popf
mov
pmaxub
pop
movsl
sbb
jno
jo
mov
mov
bound
cltd
push
fidivs
xchg
lds
sub
lret
fiaddl
incb
mov
mov
lret
aaa
push
ds
xchg
add
std
stos
cmc
pop
add
bound
jo
mov
add
das
xchg
inc
lock
push
fistl
aam
stos
ss
insl
mul
xlat
into
cltd
adc
dec
sub
xchg
std
pop
cmpsl
xchg
addl
fucomi
xchg
xchg
sbb
lret
sahf
cmp
mov
add
sub
adc
call
shl
lds
jo
dec
adc
popa
addr16
int3
int
lea
sub
inc
ficomps
push
repz
dec
out
mov
inc
cmp
test
aad
push
mov
cmpsb
std
push
enter
imul
inc
cmp
cmpsb
int3
inc
and
jne
pop
dec
imul
mov
mov
xor
or
xor
movsl
pop
cmpsb
jne
mov
inc
shrl
popa
xchg
and
add
int
or
xchg
mov
dec
jg
iret
fwait
loop
cmp
pop
adc
nop
cmp
push
xor
loop
xchg
sub
xor
mov
adc
add
mov
fadds
test
movsb
or
push
jnp
daa
ret
push
xchg
out
iret
jge
fsubl
xlat
dec
jmp
and
mov
push
imul
jle
pop
or
js
mov
pop
fcoms
mov
push
cmpsb
xor
inc
push
shrb
pop
idivl
es
fwait
ja
sbb
pop
neg
nop
jbe
sbb
push
loopne
addr16
adc
int3
pop
neg
jae
sub
shll
loopne
inc
dec
rclb
out
push
jnp
push
add
daa
scas
ret
xchg
pop
pop
inc
je
fsubrl
lock
mov
xlat
fildl
cmp
in
rclb
push
repz
push
inc
ja
jle
or
mov
pusha
push
int3
daa
sub
es
jno
adc
xchg
packsswb
insl
jl,pn
mov
loope
xor
mov
test
gs
rcl
push
scas
mov
popa
repz
sbb
sbbb
nop
adc
pop
cmpsl
data16
mov
inc
xchg
sbb
mov
and
pop
xchg
jne
mov
inc
test
sahf
dec
add
divb
push
out
xchg
inc
movl
mov
iret
inc
test
xlat
inc
movl
mov
rcll
mov
xchg
add
jo
adc
addr16
mov
xor
inc
cmpsl
add
fs
jnp
nop
aaa
inc
lahf
mov
xlat
xchg
cmpsl
adcb
rcl
in
jmp
arpl
out
pop
push
xor
loopne
xor
xor
inc
pop
out
jbe
jo
push
inc
or
inc
xchg
pop
adc
dec
data16
repz
daa
addr16
push
shlb
push
hlt
push
je
mov
daa
xchg
cmpsb
mov
int3
scas
jb
inc
imul
lock
push
js
add
xchg
cmpb
lret
rclb
ret
repz
jmp
xchg
inc
jo
ja
xchg
ljmp
mov
mov
push
call
ds
outsl
push
loope
push
mov
add
jg
lods
inc
xchg
lret
bnd
and
call
xor
push
popf
sbbb
mov
xchg
push
in
fadds
pusha
divl
stc
jae
sub
adc
jle
pushf
xor
lahf
scas
aas
xchg
inc
push
jmp
mov
pop
in
jb
lret
jl
jmp
daa
sbb
ds
shl
lock
lds
push
lods
cmp
xor
mov
add
test
out
test
popf
inc
aam
or
jbe
mov
repnz
std
xchg
nop
push
jp
cmp
cwtl
xlat
ds
repnz
mov
pusha
or
lods
cmp
xor
mov
add
loopne
icebp
mov
xor
mov
xchg
lock
adc
and
xchg
jp
mov
xor
xchg
insl
out
mov
mov
inc
fnstenv
cmp
test
lea
mov
fimuls
mov
insl
xor
bound
mov
mov
lock
xlat
daa
mov
jo
fwait
shlb
hlt
mov
testb
add
mov
jp
sbb
test
dec
fs
and
or
jmp
cltd
and
pop
mov
cmp
nop
ficompl
lea
imul
shrl
sbb
mov
icebp
mov
adc
enter
icebp
jmp
dec
in
cmp
insb
gs
add
mov
xchg
adc
inc
xor
pop
xchg
xchg
pop
mov
fabs
js
push
add
aaa
sub
xchg
pop
pop
and
mov
inc
xlat
fcmovnbe
cmp
add
pop
cmc
cs
lock
dec
jl
xorl
xor
leave
xchg
sub
cmc
mov
dec
inc
dec
in
jp
in
xchg
fwait
push
popf
int3
mov
xchg
in
es
aas
ja
jno
pop
repz
xchg
les
loope
in
inc
pop
and
out
pusha
cmp
ret
outsb
add
mov
and
loope
pushf
xor
dec
je
xchg
sub
push
cmp
xchg
repnz
mov
adc
aas
push
std
xchg
push
rdmsr
leave
cmp
out
lock
jno
add
jecxz
pop
jge
jge
lcall
ds
inc
xchg
sarl
cmp
call
fwait
mull
call
or
push
scas
pushf
push
lods
or
das
arpl
mov
rcll
std
lods
inc
sub
ss
jb
sub
pop
add
ljmp
lock
adc
push
pop
test
lret
pop
out
xor
mov
xchg
test
repz
in
test
sar
or
fmull
push
loopne
sbbb
fcoms
aam
iret
repz
movsl
movsb
test
jb
mov
fdivl
fsubs
mov
icebp
ljmp
out
std
or
in
psubb
out
cmp
adc
xor
test
push
int3
lret
mov
mov
scas
mov
pop
jb
pusha
testl
cwtl
ljmp
loopne
inc
and
jp
movsl
dec
add
and
es
movsl
jae
sahf
fs
sub
das
xchg
js
je
dec
push
xor
or
push
jg
mov
enter
cmp
ret
and
aad
enter
jno
call
or
call
push
dec
pushw
xor
mov
ret
mov
mov
inc
movsb
adc
fidivl
aas
in
lret
add
data16
jg
montmul
cmpsb
les
sbb
movsb
sahf
jnp
mov
jecxz
fs
clc
lret
js
es
in
adc
fldl
sub
inc
dec
gs
loopne
adcl
dec
out
movsb
pop
lock
shrl
arpl
lret
popa
clc
mov
int
insl
push
ret
pop
imulb
mov
loopne
adc
mov
stos
inc
pop
inc
pop
hlt
jae
mov
stos
sub
sbb
fstpl
xlat
dec
lock
inc
loop
add
jne
mov
push
xchg
mov
push
jbe
es
push
mov
mov
orl
cmc
dec
pusha
outsl
push
push
push
xchg
sub
and
or
stc
enter
lods
inc
mov
insl
cli
lods
inc
ficomps
imul
outsb
lds
cmp
adc
pusha
not
adc
daa
call
or
push
iret
push
out
repnz
sete
sarb
pop
inc
fimull
das
fnsave
movsl
cmp
clc
addr16
mul
sub
fcoms
outsb
add
jnp
push
jmp
dec
sahf
cmp
paddsb
xchg
xor
mov
ret
mov
mov
je
mov
std
xchg
enter
xchg
das
fisubl
pushf
xor
clc
in
testb
es
jge
or
out
mov
inc
ffree
xor
cmp
lcall
subl
pop
cmp
out
pop
mov
add
mov
fstl
iret
data16
out
xchg
dec
inc
fcoms
hlt
mov
repz
sub
xor
pop
inc
fcoml
jmp
icebp
jno
bound
push
cmc
testl
xchg
or
lods
hlt
cltd
xor
into
or
mov
loopne
test
xchg
mov
push
jecxz
lods
push
push
lods
ja
sub
mov
dec
out
sub
in
mov
pusha
idiv
push
sbbl
popf
inc
fnstenv
push
inc
inc
out
jle
and
lock
sbb
mov
pop
lods
aad
pop
mov
mov
xor
repnz
jns
sahf
rcrw
sbbl
jns
les
outsb
add
cld
jmp
push
ljmp
sbbb
xlat
in
adcl
xlat
outsb
aaa
mov
adc
dec
nop
sbb
int
arpl
pop
push
inc
lahf
jl
mov
pop
mov
mov
fidivs
and
xchg
xchg
lret
pushl
cmp
inc
std
xchg
cmp
pop
test
sub
dec
dec
data16
jb
out
pop
pop
movsl
cmp
jg
test
sbb
mov
outsb
add
lret
mov
int
lcall
xchg
mov
mov
cmp
fstps
mov
adcb
leave
push
in
add
shrl
cmpsl
adc
push
adc
fs
inc
xlat
mov
ffree
pop
iret
cli
fnsave
xor
loop
xchg
testb
insl
jne
leave
pusha
mov
mov
or
jle
cmp
lcall
pop
sub
dec
xchg
inc
ret
or
push
jae
mov
gs
pop
cmc
jl
push
mov
sbb
movsb
push
sbb
lcall
dec
fistps
aad
stc
cmp
sub
repz
jl
cmp
push
scas
inc
mov
push
in
out
loope
pusha
pop
mov
jns
in
xor
insb
add
insl
pop
cs
lahf
mov
dec
in
sarb
rcl
xchg
imul
xlat
aas
xchg
jmp
or
jnp
xchg
sub
mov
aam
xor
xchg
mov
push
fnsave
mov
adc
xlat
dec
call
ret
sti
or
repnz
cmp
mov
pop
push
jmp
xor
enter
stc
push
into
gs
inc
fdivrs
xlat
dec
aam
mov
ljmp
cld
xchg
sub
xor
rorl
pop
subl
cltd
adc
add
movsl
fadd
pop
push
ljmp
testl
sbb
addr16
push
adc
xlat
outsb
xchg
xlat
outsb
test
mov
or
fdivl
sahf
je
dec
popf
sub
popa
clc
push
adc
out
jg
or
dec
inc
jl
xor
ja
jbe
adc
push
xlat
dec
lds
pop
test
iret
jae
mov
add
popa
ja
xor
dec
inc
mov
or
sub
jp
stc
mov
or
mov
imul
test
jb
add
mov
adc
addl
mov
outsl
mov
mov
jl
inc
jno
andl
mull
adc
enter
jno,pn
jno
or
hlt
mov
adc
mov
int
shrl
icebp
mov
cmp
cmp
jo
add
mov
mov
jecxz
jl
jo
cmpsb
xchg
push
mov
sub
jecxz
push
push
or
scas
sub
pop
out
lods
dec
into
repz
sarb
mov
pop
arpl
xchg
xchg
outsl
jmp
mov
xor
mov
dec
sbb
loop
test
leave
or
test
cwtl
cmp
sbb
add
mov
cwtl
cmp
leave
test
mov
repnz
cwtl
cmp
adc
xchg
hlt
add
dec
jns
adc
sbb
cmpsb
add
imul
outsb
add
push
cmp
pop
fdivl
adc
inc
mov
xchg
jecxz
pusha
notl
mov
hlt
out
aaa
cmpsl
inc
jecxz
adc
gs
inc
imull
loop
jecxz
xchg
adc
aaa
sbb
xchg
std
sub
out
enter
dec
iret
or
lods
inc
fsts
aas
lret
psrlw
and
xchg
sbb
mov
out
das
sub
lret
ja
jne
movsb
cmp
cld
xchg
mov
sbb
push
add
shlb
das
xchg
popa
push
push
out
test
jne
fcom
cmp
add
daa
pop
out
pop
dec
mov
jg
jbe
stos
mov
xchg
sub
repz
test
inc
or
movsl
cwtl
sub
leave
out
xchg
ljmp
dec
cmp
cld
insl
insb
sub
popf
mov
loope
loope
cmp
adc
inc
xor
push
xchg
int
xor
push
ja
fisubrs
addr16
out
cwtl
adc
add
dec
dec
adc
cmpsb
mov
imul
shrl
dec
dec
out
pusha
ss
cmp
arpl
push
inc
push
mov
mov
jge
push
mov
xor
insb
xor
scas
and
pop
and
subl
add
xchg
cmp
movsl
clc
mov
mov
jle
mov
sub
pop
sarb
aad
jl
icebp
lods
and
into
js
add
adc
enter
je
dec
cmpsb
sbb
imul
sbb
mov
mov
insl
sahf
adc
test
lock
xchg
adc
mov
push
xchg
or
cmp
mov
call
or
inc
loop
lds
enter
jecxz
loope
out
mov
add
ficoml
faddl
mov
in
ss
push
mov
cltd
mov
mov
mov
popf
in
mov
xlat
subb
pop
mov
inc
pop
scas
jb
loopne
sub
xor
push
lods
push
push
jmp
add
pusha
notl
subb
mov
push
jnp
clc
sti
pushf
arpl
int
testl
or
add
movl
pop
mov
mov
aad
cli
jmp
dec
push
push
add
loope
push
jl
dec
push
test
nop
sbb
les
sub
cs
ja
xchg
bound
mov
clc
or
pop
pop
fcomi
add
cwtl
fldt
mov
pusha
or
mov
mov
pop
jmp
mov
addl
cmp
dec
sub
pop
push
insb
enter
pop
push
inc
ljmp
out
mov
sbb
ja
fwait
mov
jl
jne
sahf
lods
pop
fisttpll
cwtl
pop
pusha
rcll
push
das
mov
push
adc
adcb
xor
pop
add
xorl
xchg
dec
popa
mov
inc
cmpl
inc
testl
fimuls
lcall
cwtl
xor
lcall
jmp
inc
push
lea
scas
lret
sub
hlt
sub
pop
loopne
inc
roll
sub
int
call
scas
inc
push
in
gs
jae
pop
movsb
aaa
jmp
push
mov
popf
mov
fbld
mov
pushf
sub
pop
mov
pusha
sti
scas
or
xchg
add
cwtl
and
cmp
mov
pop
scas
adc
js
int3
out
add
sti
push
rcll
test
cmpsl
and
leave
push
lds
mov
mov
shrl
gs
xchg
adc
or
data16
inc
cwtl
or
jae
pop
mov
or
xchg
ds
data16
pop
scas
push
jae
test
jae
rclb
repnz
jns
inc
stos
notb
imul
vpcmpeqb
bound
mov
fbstp
sbbl
and
cltd
xor
popa
mov
addr16
jmp
repz
aaa
cmc
jns
pop
ljmp
mov
icebp
sbb
lds
in
inc
mov
out
lods
inc
and
rcrb
mov
or
jge
fwait
xor
icebp
lds
stc
nop
sub
xchg
xor
and
mov
cmp
jecxz
iret
pushfw
xchg
test
push
loopne
add
mov
push
and
dec
push
and
xchg
or
cli
jg
out
test
jecxz
fs
jp
or
or
sti
shr
test
addr16
lock
jne
mov
fdivp
xchg
mov
mov
inc
xor
pop
inc
fs
jb
dec
mov
dec
lea
pop
dec
stc
nop
jnp
inc
xlat
fstps
ret
pop
out
gs
addr16
lahf
xchg
mov
icebp
cmc
push
mov
push
shll
out
mov
lock
mov
or
pop
addr16
xor
es
cmp
sbbb
sbb
mov
sub
movsb
cmp
inc
iret
pop
addl
test
mov
mov
ret
add
xlat
mov
test
pop
sub
xor
mov
call
adc
mov
jb
inc
fsubrs
outsb
fnstenv
cltd
xchg
sub
bound
sub
xor
push
jo
aad
cmp
stos
sbb
jno
sub
leave
loop
sti
dec
or
jo
pop
sahf
ds
xlat
outsb
ret
pop
inc
fisubl
mov
jmp
or
pop
cmp
mov
cmp
enter
push
js
inc
and
add
sub
jns
and
mov
enter
jl
cmp
xchg
sub
ret
dec
nop
cs
add
enter
push
cltd
and
sub
jae
movsl
cmp
pop
and
in
aam
jg
xchg
mov
pop
icebp
in
adc
mov
es
push
sbb
es
adc
std
xchg
cmp
push
jmp
mov
test
dec
add
sbb
cld
inc
cmp
mov
cmp
push
out
in
push
out
imul
push
in
lock
xchg
adc
iret
xchg
mov
rorb
sub
lds
xor
cmp
daa
mov
xor
out
cmpsl
push
insl
add
enter
subb
lahf
dec
ljmp
xor
adc
es
push
in
imul
pop
sahf
cmc
pushf
scas
inc
and
xchg
dec
inc
cmpsl
sub
int
dec
adc
cmp
shrl
jo
int
sub
adcl
lcall
adc
jno
daa
jbe
cltd
push
cmp
mov
sub
cltd
or
repnz
testb
lds
mov
pusha
lret
or
daa
mov
mov
xor
pop
int3
and
pop
insl
sub
xor
pushf
jnp
jb
cmpsl
mov
out
leave
mov
cmp
add
fidivs
cmp
mov
insb
out
es
movsl
mov
mov
cmc
jne
rcr
fmuls
jecxz
in
xor
xor
ret
lret
mov
jmp
add
dec
pop
cmc
mov
les
les
mov
jecxz
add
divb
out
test
fidivl
int
push
jmp
xchg
sbb
mov
lds
test
cwtl
pop
out
leave
std
xchg
sub
jmp
push
sbb
int
out
mov
mov
mov
mov
dec
cltd
scas
inc
or
xchg
cwtl
mov
dec
jp
lahf
adc
dec
and
xor
add
fs
adc
shrl
lcall
daa
mov
pop
push
mov
xchg
popf
fidivs
dec
mov
fs
vpsubd
mov
xchg
mov
sbb
mov
scas
shlb
pop
std
mov
aam
cmc
mov
pop
je
in
ds
or
and
test
xchg
aad
or
nop
or
rcrl
xor
in
mov
inc
cwtl
sti
xchg
lret
xlat
push
stos
sbbl
cmp
cli
mov
or
mov
cld
fistps
add
aam
jo
xor
xchg
or
int
ljmp
mov
in
adc
das
enter
dec
lcall
xchg
lods
inc
les
movsl
aas
test
sbbb
dec
jmp
test
jo
cmc
inc
ret
cld
pop
jne
mov
mov
fidivl
xor
inc
adc
test
jne
stos
add
xchg
adc
inc
add
sti
xchg
lahf
add
lds
cs
mov
mov
push
dec
popa
imul
enter
sbbl
and
inc
mov
mov
ja
cmp
cmp
sbbl
or
jle
mov
jns
jmp
add
imul
pop
cmp
sub
and
cmp
insb
xor
or
or
sti
ret
adc
mov
adcb
mov
ljmp
push
or
and
adc
enter
jp
test
fidivrs
xchg
push
or
sbb
cltd
stos
pop
jge
lea
call
sbb
in
mov
adc
cwtl
inc
mov
mov
mov
stos
mov
ret
push
mov
add
mov
sub
mov
add
jl
lret
out
mov
dec
cwtl
lea
pop
idiv
xor
loope
jmp
bound
mov
inc
into
push
dec
jbe
jp
push
aad
daa
stc
inc
jb
and
and
push
jno
rclb
in
negb
insb
xchg
fdiv
sti
xchg
popf
jle
adc
popf
test
sbb
xchg
dec
mov
cmc
lods
mov
xchg
std
sbb
arpl
mov
cmpb
pop
jae
fidivl
xchg
cmpsl
in
stc
inc
das
push
xchg
xchg
adc
shrl
pop
sahf
test
lds
mov
ret
repz
cmp
pop
fidivl
adc
cld
stos
xchg
mov
adc
mov
jnp
and
leave
push
push
add
aaa
imul
sbb
out
jge
das
mull
test
sub
stc
call
mov
movsb
push
xchg
xchg
daa
push
out
aam
ret
out
mov
jecxz
push
fidivl
dec
jg
add
or
movsl
mov
lods
cmp
ret
cmpl
movsb
cld
inc
fidivs
pop
jo
sbb
add
jmp
nop
lcall
cmp
inc
push
push
and
mov
dec
push
jns
loope
mov
add
vphaddwd
mov
js
jae
cmpsl
cmp
mov
shl
sti
xchg
loop
sub
jp
cld
stc
xlat
jno
outsb
jp
jmp
pop
mov
jne
imul
leave
andnps
mov
test
outsl
push
xorl
cmpl
cwtl
insl
add
imul
xor
aad
sbb
fcmovu
cmp
call
mov
inc
inc
cmp
enter
rorl
lds
adc
pop
sbb
sbb
adc
sub
mov
loopne
xor
test
pop
jmp
arpl
dec
or
pop
nop
dec
add
fsubrp
test
and
ljmp
ror
out
clc
das
dec
sub
dec
aam
jle
mov
dec
xchg
int
ret
gs
mov
test
add
shlb
cmp
fcomip
mov
inc
cs
rsm
mov
push
mov
cmpsl
mov
mov
lods
inc
xor
or
or
mov
lcall
sbb
jp
jns
ret
pop
fs
in
lcall
mov
sbbb
sub
in
pop
faddl
lods
cld
fadd
out
aas
dec
add
fdiv
mov
sub
in
push
mov
loop
loop
and
nop
mov
add
mov
hlt
and
mov
nop
mov
aas
xchg
adc
divb
push
in
lret
bound
mov
push
fcompl
and
push
rcr
sub
cmp
jl
push
lahf
sbb
mov
push
add
xor
jne
jne
mov
adc
fwait
jg
int
cs
pop
fstpt
xchg
cli
adc
aas
pop
lods
adc
outsl
pop
rcrl
jne
outsb
add
out
mov
mov
push
push
cmp
stos
movsb
cs
mov
or
push
adc
test
or
lahf
add
mov
mov
data16
push
add
sbb
clc
pop
cmpsl
ds
into
test
xchg
sub
add
std
push
push
cmp
cmpsb
cmp
mov
sbb
mov
xchg
or
rorb
mov
ret
repz
fisttpl
dec
mov
mov
mov
push
pop
repz
push
cmp
jecxz
iret
ss
adc
cmc
mov
stos
and
out
popf
dec
je
push
mov
es
adc
mov
cmp
add
lods
in
scas
push
addr16
dec
loope
inc
out
jle
sahf
ja
les
push
and
pop
mov
dec
lds
adc
adc
mov
outsl
call
push
and
out
and
add
clc
add
js
cmp
pop
js,pn
in
ss
lcall
or
in
xchg
sbb
sbb
inc
xchg
int3
adc
jge
and
push
addb
mov
js
fcomp
ret
jne
es
gs
lret
add
sbb
es
xchg
pop
jg
mov
out
pop
jge
push
sub
push
lods
sbb
and
dec
xor
shrl
jae
mov
shll
aam
xchg
fdivl
es
fnstsw
popl
je
lcall
outsb
xchg
dec
sub
jp
inc
jp
push
pop
push
push
cmp
cmp
in
ja
mov
rcr
lahf
xor
xor
fimull
jb
jecxz
in
outsb
imul
xor
mov
pop
icebp
icebp
iret
test
stos
gs
mov
jl
inc
cmp
mov
adc
xchg
gs
adc
jb
je
xchg
xchg
stos
ds
pop
mov
add
stc
test
push
into
ficompl
cmp
mov
add
mov
jmp
lock
pop
xor
mov
fsubs
dec
or
shll
push
mov
adc
jne
xchg
cmp
aad
rolb
stos
lods
inc
mov
aaa
cmp
imul
pushf
xor
sbb
xor
sahf
imul
stc
sahf
mov
xchg
xor
xchg
sbb
mov
cmp
aaa
jb
jmp
or
or
call
pop
js
lret
ja
push
mov
je
xor
jp
mov
mov
fst
adcb
jp
add
dec
dec
in
lods
pop
sub
fs
stos
dec
dec
xor
scas
bound
xor
arpl
scas
ffree
cmc
mov
jge
jge
push
fimull
fcmovb
aaa
lock
stos
imul
dec
adc
les
jmp
cwtl
orb
arpl
idivl
cld
lock
cli
xchg
leave
cmp
insb
cmp
mov
stc
in
push
outsl
pop
and
gs
mov
mov
mov
fildll
into
fisubl
in
jno
mov
push
adc
fdivl
imul
sahf
in
cmp
dec
and
sbb
ja
adc
cwtl
imul
stos
jnp
stos
xchg
inc
push
lds
push
test
jp
test
mov
fwait
push
jbe
sub
lahf
neg
lret
inc
jb
xor
mov
out
push
cmp
mov
pop
inc
stos
jp
sbb
cmpsl
jp
ss
push
push
add
leave
aas
int3
arpl
scas
and
jl
das
jge
xchg
dec
clc
js
inc
stos
sbb
sub
xchg
call
xchg
mov
and
ss
pop
loopne
dec
push
ret
and
imul
dec
shl
sti
push
sti
sbb
xchg
jmp
sti
popa
adc
jg
int
in
pop
loop
pop
int3
or
ficompl
and
fst
aas
frstor
shrb
stc
jge
push
in
push
callw
dec
pushl
cltd
jmp
aas
inc
sbb
fimull
es
sarl
mov
icebp
mov
scas
dec
cmp
cmp
test
and
clc
out
or
shrb
fwait
repz
ljmp
fstps
cmp
data16
dec
pop
mov
fcmovne
mov
mov
inc
lahf
in
sar
push
jb
adc
fsubrs
ss
enter
clc
jmp
in
movsl
mov
testl
jle
cmp
push
or
test
sti
jae
push
lods
movl
jmp
fwait
call
int3
pop
stc
sbb
xchg
test
fwait
dec
xchg
pushf
int3
cmp
jne
addr16
mov
and
ret
jno
clc
pop
sub
mov
mov
in
jae
lahf
pop
in
jb
sub
dec
mov
mov
lcall
cli
jl
insb
arpl
adc
xchg
testl
mov
jae
jmp
fidivl
pop
fwait
cmpsl
pop
lock
sub
mov
aas
imul
mov
dec
mov
jmp
adc
push
cltd
sbb
sub
jmp
addr16
jge
xchg
push
push
movsl
pop
cmp
inc
fbstp
fldt
or
pop
mov
jae
mov
imul
adc
sbb
add
pop
pusha
pop
push
adc
scas
dec
pop
ds
push
inc
roll
xchg
push
pop
mov
outsb
cmp
test
enter
push
std
cmp
dec
mov
mov
test
mov
lret
push
ret
scas
xchg
lret
mov
ss
dec
jns
mov
cmp
dec
xchg
in
and
jbe
fbld
mov
aaa
inc
xlat
loop
xor
xor
inc
adc
and
shlb
imulb
cmp
xchg
mov
ja
stos
jo
or
jns
cmp
sub
adc
push
pop
add
fisubl
es
inc
mov
repnz
adc
or
and
das
insb
test
xchg
inc
nop
cmp
lret
sub
mov
or
rorl
stos
ret
cmp
sub
mov
mov
je
je
xor
lahf
add
inc
lock
das
je
pop
popf
mov
dec
mov
dec
and
js
adc
addr16
bound
mov
outsl
inc
pop
fidivs
add
and
das
pop
in
daa
dec
pop
pop
mov
mov
scas
rcl
and
xor
jae
mov
sub
imul
fidivs
aaa
call
push
daa
imul
js
lods
dec
inc
push
into
pop
sahf
push
stos
pop
imulb
sub
dec
cs
inc
and
je
outsb
adc
jbe
stos
jge
jp
aaa
dec
cmp
out
jns
rcrl
xchg
sub
or
hlt
pop
and
mov
imul
lods
shl
bound
pushf
inc
out
push
shr
cld
icebp
repz
in
mov
out
add
xchg
sbb
frstor
and
pusha
out
and
scas
dec
mov
lods
sub
sarb
cmp
imull
inc
in
adc
stos
mov
sarb
add
dec
fcompl
cs
sbbl
outsb
lods
dec
arpl
sub
xor
xchg
mov
inc
sti
in
sub
add
inc
std
dec
adcb
inc
or
les
xchg
loope
or
sarb
sti
xchg
jno
ficompl
xor
in
xchg
add
and
xor
xor
pop
call
lds
movsb
cmp
call
fcompl
stc
sbb
mov
mov
sbb
xchg
dec
or
out
mov
jnp
add
gs
dec
adc
jle
gs
cwtl
dec
aad
jne
dec
loopne
xchg
add
sti
imul
xor
and
dec
push
mov
call
out
roll
inc
mov
mov
cmp
mov
loopne
lret
popa
push
push
sub
xor
pusha
jg
mov
rolb
pop
push
inc
test
add
cmp
cs
out
jmp
or
xor
sub
rcrb
adc
cmpsb
mov
push
add
testb
daa
pop
xchg
int3
sbb
test
inc
or
fisubs
jecxz
pusha
mov
out
xchg
rcr
repz
push
repz
imul
or
shr
test
daa
mov
popa
jns
cli
lods
ja
and
imul
ficompl
loop
into
test
push
sub
lret
movsl
pop
fsubrl
aas
scas
mov
inc
and
mov
mov
push
xor
sbb
cld
pminub
mov
lds
negb
imul
xchg
mov
stos
mov
add
stc
cmpsl
cmpsb
pusha
sti
rcl
push
mov
addl
pop
icebp
mov
int3
arpl
xlat
stc
mov
mov
ror
js
mov
pop
sahf
gs
pop
mov
xchg
sbb
cmp
mov
add
mov
fs
push
ljmp
nop
daa
test
bound
mov
aaa
roll
push
or
or
stc
xchg
je
movsl
adc
cmpsb
out
fidivrs
hlt
cmp
mov
lock
sti
ja
fldenv
ja
mov
out
sub
sbb
or
adc
fs
mov
add
loopne
jbe
dec
dec
stc
pop
cmpsb
and
cmpsl
jns,pt
push
jmp
lcall
stos
inc
in
pop
lret
push
in
cld
jle
stc
cmp
pop
pop
push
sub
push
jae
xor
scas
xchg
add
cmp
daa
mov
aaa
aas
jg
scas
push
test
inc
aas
pop
out
scas
cmpsb
cmp
sti
jns
xchg
aas
mov
insl
lcall
sbbl
setne
das
mov
mov
call
cmp
lcall
adc
fadds
es
mov
test
pop
sub
sahf
stos
jnp
xchg
inc
int3
jae
xlat
fs
test
push
pop
mov
lock
icebp
out
clc
sbb
ds
adc
aad
xor
lock
mov
adc
enter
not
mov
vpsubb
mov
mov
fnstenv
out
fisttpll
mov
fwait
lock
icebp
mov
les
xlat
and
inc
js
push
jmp
cltd
mov
sti
mov
pop
cmpsb
and
mov
sbb
aas
cmp
dec
loope
pop
pop
dec
lea
pop
cmp
nop
outsl
cmc
mov
out
xor
mov
adc
lds
mov
push
loope
repz
enter
jge
leave
pusha
and
inc
mov
pop
xchg
mov
lea
nop
daa
push
mov
imul
jbe
sub
dec
xchg
sub
mov
or
sbb
mov
mov
outsb
ja
inc
ficoms
xor
mov
fnstcw
jp
mov
pop
out
and
pop
or
push
mov
mov
mov
xor
iret
pop
xor
int
jb
mov
add
cmp
pop
sti
xchg
in
adc
dec
ja
es
scas
fmuls
lock
adc
jmp
ljmp
lock
jae
in
ds
xor
push
movd
xchg
xchg
shrb
icebp
push
in
mov
jae
jae
jl
and
sub
jl
iret
lods
adc
loopne
repnz
jmp
out
repz
int
rol
fidivs
je
lock
jbe
pop
test
testb
out
push
xlat
push
add
rclb
sbb
fnstenv
inc
addr16
or
push
lret
mov
sub
xchg
lcall
aad
cmp
ret
mov
hlt
and
jnp
dec
lods
jo
adc
fsubrs
js
cmc
pop
and
cltd
cmpsb
sbb
mov
arpl
enter
push
jmp
xor
push
xor
jae
loope
jbe
jbe
xchg
ret
jmp
aaa
jecxz
testb
in
mov
mov
jle
jae
lds
je
scas
movsl
sub
add
fnstenv
mov
in
adcl
push
fdivl
inc
stos
push
popa
push
mov
daa
xor
sub
iret
and
sub
inc
popf
mov
enter
mov
adc
dec
push
push
xchg
sub
je
sbbl
dec
loope
or
add
mov
sub
mov
clc
mov
inc
hlt
push
ret
jae
popa
add
cwtl
xor
adc
inc
mov
repz
mov
and
push
out
popa
insb
in
sbb
xor
ljmp
dec
mov
jne
stos
add
adcb
shrl
outsb
inc
lret
cmp
mov
jle
add
push
mov
das
lds
mov
xchg
xchg
incl
rcrb
pop
add
mov
lahf
montmul
cmpsb
inc
dec
repz
jp
inc
jb
mov
cmpsb
repnz
sti
rolb
add
jmp
jle
dec
jp
lods
imul
or
out
inc
out
daa
les
push
je
lea
lea
jg
jbe
sub
pop
xor
shll
fcmovbe
jb
cmp
sti
xchg
rorb
es
loopne
mov
addr16
adc
inc
ljmp
pop
pop
or
fists
fs
inc
or
out
test
mov
insl
mov
dec
fucomip
cltd
test
add
xchg
push
mov
cmp
jle
clc
jge
in
sbb
add
insb
mov
and
mov
mov
push
and
cmp
test
cmp
imul
mov
inc
adc
movsb
pop
cmp
lds
lcall
pop
mov
or
inc
mov
test
mov
scas
inc
pusha
jmp
int3
jg
pusha
scas
jb
lret
mov
popa
mov
repz
push
pop
pop
mov
in
mov
fcoml
dec
mov
lcall
push
popf
add
cli
popa
inc
inc
mov
gs
imul
cmpsl
xchg
adc
add
stc
sub
pop
mov
addr16
sub
in
push
mov
inc
push
js
mov
adc
xorl
inc
fldcw
and
mov
lock
and
inc
fildl
jne
les
icebp
daa
mov
jno
pop
hlt
bound
leave
xchg
ja
mov
repz
pop
lret
or
or
jp,pn
push
icebp
outsb
sti
sub
sbbb
inc
js
ja
movsb
cmp
aaa
pop
imul
fidivs
cmp
jo
fiadds
xchg
jg
ja
das
sbb
ds
lods
xchg
adc
sbb
push
sbb
aas
add
dec
xor
repnz
cmp
sub
mov
pop
sbb
xor
sub
leave
cmp
cli
xchg
loopne
pop
pusha
movsl
pop
les
sub
jg
xor
and
adc
jne
pop
aaa
fisubrs
jne
bound
mov
bound
cmpsb
or
sbb
mov
inc
inc
cmpsb
mov
repz
mov
push
mov
cltd
xor
pushl
test
in
inc
mov
out
mov
mov
sti
adc
jg
lods
fwait
mov
stos
int3
push
xchg
push
in
gs
mov
add
xlat
push
inc
faddp
jo
lods
dec
out
fsts
push
out
dec
in
pop
jnp
mov
cmp
insb
les
jmp
mov
cmpb
jns
inc
xor
int3
arpl
cmpsb
mov
and
inc
xlat
loopne
mov
movsb
jge
repnz
push
jmp
test
mov
ds
popf
lcall
adc
es
sbbl
pop
cmc
cli
sub
test
cmpsb
mov
ljmp
push
lods
orb
xchg
mov
test
inc
sbb
jns
arpl
sbb
adc
jb
pop
repnz
and
push
pop
icebp
aas
mov
sbb
mov
mov
or
push
jmp
xchg
sub
mov
mov
push
cwtl
cwtl
ja
mov
idivb
fisttpl
mov
xor
dec
in
push
add
push
mov
scas
call
or
fwait
gs
cmc
cmp
pop
and
jae
data16
add
daa
sbb
jg
ss
mov
xor
mov
xchg
daa
mov
cmc
out
cli
mov
ficomps
mov
lret
fdivl
dec
loope
std
inc
fnstcw
pusha
neg
call
and
mov
filds
out
aas
arpl
test
inc
fsubrs
lret
in
adc
test
push
call
fstl
mov
das
test
push
or
movsl
pop
jbe
cmc
push
jl
loop
jno
mov
shll
ljmp
and
mov
push
out
push
rcll
out
inc
fimuls
lods
gs
negb
repnz
push
lods
xchg
mov
mov
lcall
iret
add
mov
and
mov
xor
inc
fsts
sbb
mov
cmp
cli
in
sub
xchg
push
dec
in
mov
adc
das
add
mov
pop
out
subb
mov
mov
pop
lock
into
gs
or
test
dec
loop
movsl
out
xchg
sbb
ds
adcl
cmpsl
add
cwtl
enter
mov
cmp
mov
fildl
pushf
leave
adc
sbb
ret
insl
fdivp
add
xor
sub
xchg
sub
cmpsb
mov
outsb
cld
stc
fnsave
adc
push
shrl
add
sbb
push
jp
int
js
cmp
lret
ret
push
jae
push
push
loope
push
jno
sub
les
mov
pop
into
gs
push
cmp
cmpl
lods
movsb
pop
icebp
aad
pop
push
js
sub
in
inc
loope
ret
lret
cwtl
in
sub
leave
push
mov
inc
fisubl
lcall
enter
fidivrl
adc
lods
stc
and
or
mov
mov
ffree
sbbb
ja
pop
stos
outsb
and
mov
inc
fdiv
inc
pop
adc
ficoml
filds
bound
cmp
add
hlt
push
push
add
stos
insb
negl
push
xchg
sub
out
lods
adc
add
enter
adcl
aas
push
and
cmp
add
ror
adc
adc
sub
xlat
cmpsw
mov
in
pop
test
lret
mov
mov
mov
scas
push
jl
or
daa
out
hlt
add
jg
movsb
out
insl
pop
inc
ret
mov
xchg
and
les
ljmp
adc
lret
push
in
push
pop
repz
pop
ss
and
sub
in
and
clc
xchg
cltd
cmp
or
pop
sahf
xchg
rcr
mov
sahf
xor
xor
lods
jmp
push
and
lret
cmp
out
test
and
jecxz
mov
notb
pop
adc
lcall
adc
fldt
dec
pop
cs
movsl
enter
jne
adc
xor
sub
mov
repz
push
shll
push
mov
mov
gs
mov
insl
ret
fwait
movsb
and
xchg
aas
out
xor
jno
cli
mov
lret
mov
in
test
sub
loope
or
pop
idivb
adc
fstps
jno
inc
addr16
push
shlb
push
call
sahf
jg
sbb
sub
addr16
cmp
int3
arpl
leave
ljmp
push
cltd
or
hlt
sub
mov
mov
mov
outsl
sti
nop
adc
cmp
mov
mov
xchg
fnstsw
das
jne
ljmp
lock
pop
add
push
xor
iret
scas
cli
sbb
jb
and
jae
cli
sbb
icebp
add
loope
or
jbe
movl
pop
xor
xchg
imul
mov
xchg
bound
jge
outsb
scas
dec
daa
pop
jmp
mov
adc
enter
adc
sbbb
xchg
push
mov
push
insb
loope
jmp
lret
sub
push
xchg
inc
jl
repnz
inc
push
ret
pop
jl
out
mov
cmp
fildl
lds
mov
pop
adc
xchg
int3
xchg
add
and
mov
lock
or
xor
mov
test
stos
jne
test
inc
xor
aam
jae
int3
out
xor
bound
in
mov
arpl
push
mov
xchg
jo
adc
push
cmp
jge
jne
push
in
push
add
pop
ss
cld
rdpmc
shl
sub
add
xchg
inc
loop
cmp
mov
xor
xchg
cltd
xchg
aad
fsubs
dec
dec
cmp
sub
pop
sbb
mov
cli
iret
sbb
sub
push
fidivrl
cld
cmp
fucomi
and
decb
xchg
fnstenv
jmp
sub
push
mov
mov
dec
pop
stos
iret
fildl
xor
ret
call
or
in
push
inc
stos
fcoml
push
sbb
mov
popl
insb
push
neg
data16
out
hlt
pop
psubq
repnz
mov
mov
sub
aaa
into
out
mov
daa
or
mov
in
gs
push
lret
fsubrp
mov
fwait
dec
fsubr
std
xor
out
push
jae
mov
xor
popa
lret
lahf
lcall
in
mov
loop
push
bound
xchg
imul
and
mov
in
cmc
push
xchg
add
sti
fsubrl
cld
xchg
or
cltd
sbb
ljmp
jge
insb
jp
cmpsb
hlt
jle
int
cli
push
mov
xor
jo
nopl
call
leave
mov
cwtl
and
pop
fcomps
lea
pusha
lret
xchg
xchg
lret
int3
mull
scas
leave
mov
ja
mov
mov
and
cmp
pop
pop
imul
and
lahf
ret
mov
mov
ljmp
cmp
push
mov
ret
movsb
rcl
sub
clc
cmpsl
cmpsb
xchg
mov
cltd
imul
mov
les
idivb
in
jae
xchg
mov
es
shlb
pusha
nop
push
pop
push
hlt
jb
scas
sarl
ltr
iret
lret
mov
cmp
ss
push
pop
es
jno
das
data16
xor
ret
hlt
fbld
pop
dec
sub
xchg
out
adc
jmp
xor
outsl
arpl
imul
int
add
in
xchg
movb
pop
sbb
mov
mov
dec
push
adc
sbb
xor
popf
roll
xor
popf
xor
jmp
push
inc
xchg
dec
test
xchg
iret
fs
shl
adc
or
push
lods
xchg
jo
pop
shl
dec
adc
scas
shlb
mov
clc
push
fldcw
inc
div
into
jecxz
jne
and
mov
pop
pusha
test
and
jle
aas
inc
push
dec
inc
jp
dec
mov
jb
xchg
sub
push
std
das
cmp
inc
insl
sbb
jne
or
xchg
pop
int3
fs
dec
fwait
xchg
pusha
lods
cmpb
je
fsubrl
and
jp
sub
out
or
loope
pop
insl
add
adc
adc
xor
xor
xchg
cs
mov
lea
jecxz
ret
adc
cmp
mov
push
push
push
addb
out
aaa
movsl
cmc
mov
in
decb
imul
sub
pop
xchg
pop
lock
mov
out
mov
push
sub
movsb
fisubl
das
mov
sti
xchg
xchg
in
cmp
cltd
mov
inc
push
mov
xchg
das
xlat
mov
in
lock
ds
cmp
push
mov
out
jp
push
lods
jbe
jecxz
cmp
push
mov
loope
mov
pop
lock
pop
js
into
pop
mov
addr16
in
es
add
mov
dec
jne
push
out
lret
bound
pop
pop
add
dec
jmp
movsb
cmp
xchg
mov
cmc
iret
lret
pop
jp
nop
jns
sub
cmp
dec
cld
mov
sbb
aam
pop
pop
mov
jae
add
out
add
cmp
loop
cmp
pop
xchg
xor
mov
xor
or
xchg
sbb
iret
aaa
cmp
mov
sbb
mov
data16
adc
lahf
cld
lahf
popa
mov
sbb
or
clc
lahf
sbb
xchg
or
mov
jmp
xor
popa
inc
jb
cmp
mov
cmpsb
xor
add
popa
xor
push
pop
xor
cld
xchg
daa
fnstenv
scas
call
push
and
inc
fstpt
and
aas
and
mov
push
loope
in
stos
sbb
and
divb
out
sti
xchg
or
ss
sbb
sbb
pop
jns
mov
sti
push
icebp
and
pushf
addr16
cmc
gs
outsl
jnp
sub
rcrl
adcl
rcrl
and
mov
cwtl
inc
adc
pop
aam
or
insl
cmpsb
loopne
mov
sub
lock
iret
sub
dec
in
add
rorl
jle
xor
loope
dec
push
cmpsl
testl
push
cmp
cwtl
lahf
mov
mov
mov
dec
cmc
or
xor
dec
mov
pop
jle
ljmp
xor
movsl
xchg
jge
aaa
lret
sub
jg
push
mov
pop
and
cmpsl
push
subb
pushf
xor
jp
lods
adc
xor
jecxz
lods
inc
ja
mov
std
test
stos
imul
cmpsb
push
push
aam
repnz
mov
adc
adcl
or
fidivrs
outsl
push
aad
pop
jg
dec
and
mov
ja
mov
push
ja
hlt
or
repz
mov
je
das
sub
stc
fs
push
add
xlat
lods
mov
out
cmp
stos
or
daa
cmp
or
mov
xchg
int
scas
mov
inc
cmpsb
mov
or
sbb
push
outsb
in
xchg
dec
in
or
out
push
xchg
fstpt
call
and
out
mov
mov
pop
outsb
sub
gs
movsb
add
xor
insl
addl
ds
jl
lock
xchg
loop
ret
adc
cmp
pop
inc
push
shrb
add
leave
pusha
pop
mov
sarb
call
ret
mov
imul
pop
dec
sarl
lret
fwait
stos
or
push
mov
dec
pop
in
jmp
test
xchg
pop
and
repnz
enter
sbb
dec
lahf
sbbb
sub
stos
jle
xor
push
add
fmuls
mov
test
cwtl
fnstcw
inc
fwait
bts
in
stc
lds
mov
shlb
pop
push
loop
pushf
scas
in
and
lea
and
rorl
mov
cmp
and
mov
shlb
popa
dec
std
push
int3
cli
dec
lcall
sbb
jge
mov
sti
loope
imul
push
jb
or
jo
and
repz
cli
stos
lahf
jb
dec
loopne
rcrl
jne
icebp
and
adc
xchg
int
mov
push
jmp
xchg
mov
into
into
jb
add
sbb
ds
mov
sbb
jne
roll
pusha
imul
sbb
sti
mov
mov
ret
shlb
and
and
dec
pop
shlb
cmpsb
inc
xor
out
dec
cmc
mov
sub
xor
mov
xchg
mov
sahf
jo
and
sti
les
movsb
mov
daa
sti
mov
sahf
adcb
sbb
pop
imul
int3
add
pop
in
pop
repnz
pop
std
and
movsl
push
or
add
cmpsb
jne
mov
mov
cltd
jmp
inc
or
push
aad
sahf
sbb
adc
mov
dec
push
mov
add
mov
mov
sub
std
add
push
in
shll
mov
es
lods
popf
rcrb
mov
mov
jmp
fisubs
xchg
xor
xor
inc
lcall
daa
sbb
shlb
xor
fiadds
movsb
data16
lods
hlt
adc
test
mov
lcall
xchg
inc
loop
stc
cmp
insl
sbb
dec
push
mov
mov
insb
aam
sbb
dec
loop
sub
imul
xchg
movsl
push
and
add
or
imul
and
push
clc
push
fs
push
roll
xchg
scas
cmp
sub
stos
insb
fidivs
dec
push
push
popf
adc
xor
nop
stos
adc
addb
fwait
xor
mov
inc
pop
popa
faddl
xchg
test
movsl
jno
push
jnp
xchg
sub
xor
add
push
dec
fiadds
cmc
inc
inc
addr16
int
movsb
mov
xor
ja
leave
jo
cwtl
pop
cmp
add
jg
outsl
aam
lods
ret
icebp
xchg
cmp
dec
or
sarb
xchg
jbe
adc
sbb
or
xchg
ss
adc
mov
or
mov
inc
mov
insl
and
mov
in
into
and
adc
mov
xchg
mov
xchg
addr16
in
mov
fdivp
inc
lret
pop
ret
and
and
jnp
push
or
pop
xchg
mov
xchg
ds
cmp
push
xchg
rorl
out
fwait
and
xor
sti
push
sub
sbb
push
aad
inc
or
xchg
insb
fstp
mov
xchg
call
outsl
fwait
jae
dec
pop
xlat
cmp
push
shll
mov
jnp
or
scas
rcl
fldt
lds
xchg
mov
pop
inc
fs
mov
and
test
pop
xor
jno
aad
mov
push
stc
test
sbb
out
lock
mov
ja
add
dec
xor
xchg
sub
jb
lea
nop
gs
popa
inc
pop
xchg
subb
add
jae
shrb
mov
je
ja
jno
push
dec
gs
div
cmpsb
test
and
jns
jne
pop
je
xchg
imull
inc
adc
add
xchg
test
mov
and
mov
xor
jnp
test
add
or
cwtl
call
aad
push
and
xchg
and
dec
cmp
pushf
nop
xchg
insb
mov
sbb
mov
cmp
cmp
xchg
push
and
adc
sbb
inc
leave
arpl
pop
cmp
outsb
movsl
dec
rcrl
mov
data16
aas
and
push
mov
fwait
test
mov
das
das
cli
jne
ret
into
xor
idiv
push
sub
pop
pop
ljmp
testl
aad
push
mov
lock
scas
sub
push
cwtl
cmp
lahf
sub
mov
jo
mov
xlat
push
dec
pop
cmp
in
enter
sub
cmpsb
fbstp
fcmovbe
jl
jecxz
repnz
push
repz
dec
add
cltd
je
jl
pop
daa
adc
push
shl
jl
jp
dec
lods
adc
and
imul
test
cs
sbb
lret
adc
sub
jle
pusha
shrb
lcall
add
into
inc
rcrb
jns
int
outsl
das
jge
xchg
add
and
mov
cwtl
pop
lock
sbb
call
in
ljmp
pusha
dec
xchg
sbb
subl
xchg
or
sbb
push
push
inc
je
int
jo
inc
inc
xchg
sbb
mov
subl
enter
dec
inc
dec
pop
das
clc
sarl
jb
sarb
cs
sub
loopne
fistl
dec
in
ss
inc
out
repz
lods
test
push
shll
les
mov
imul
pop
fwait
jmp
jae
fistpll
pop
bound
mov
data16
out
pop
or
stc
adc
sub
or
mov
addr16
ror
pop
les
outsb
push
push
rol
dec
loope
mov
bnd
jmp
lods
xchg
addl
ds
xor
xor
pop
addr16
push
arpl
js
mov
ret
fstl
pop
dec
std
js
test
int3
loop
aad
pop
aas
aaa
sub
pusha
sahf
mov
xchg
notl
int3
ret
cmc
pushf
lods
or
cmp
je
pop
mov
icebp
sbb
push
and
xor
jle
dec
pusha
test
cmp
or
lcall
cwtl
and
cld
cmp
xor
subl
test
out
icebp
cmp
in
aas
or
xchg
repz
cmp
movsl
sub
sbb
pop
outsb
into
adc
lret
mov
add
cmp
test
mov
addr16
lret
mov
dec
and
fucomip
push
adc
mov
aam
cmc
mov
pcmpgtw
test
push
subl
sti
xchg
mov
and
mov
in
jg
cmp
ja
or
add
add
js
push
push
dec
cmp
jo
mov
inc
sbbl
leave
nop
mov
mov
inc
sbb
adc
loop
jg
mov
and
pop
je
lret
cmpsl
sbbl
inc
out
cwtl
nop
je
fnsave
lret
cmc
mov
push
push
push
mov
mov
outsl
mov
pop
hlt
addr16
lock
inc
fnsave
add
pop
stc
mov
sub
into
pop
cmp
call
adc
lea
rolb
in
and
xchg
cs
in
es
shll
sahf
sub
dec
lods
addr16
dec
mov
mov
push
and
adc
jns
mov
xchg
cmpsl
andb
or
inc
sbb
jnp
insl
lods
push
scas
js
mov
sti
dec
notl
leave
or
jl
mov
pushf
es
dec
cld
jns
fsub
ja
mov
jp
push
cmp
jns
xchg
sbb
adc
cmc
rolb
cmp
and
mov
cmpsl
jge
icebp
mov
popf
or
or
mov
push
movsb
stos
in
fmul
pop
addr16
js
pusha
xchg
xchg
cmp
cmp
push
sbb
mov
fcoml
sbb
mov
cmp
je
test
push
and
mov
push
frstor
out
push
add
outsb
pop
outsl
lea
or
js
les
mov
aam
movsb
inc
jmp
mov
adc
movsl
in
nop
pop
add
inc
pop
loop
clc
addr16
xor
add
shlb
jne
pop
or
cmp
imul
cltd
mov
imull
mov
push
shrb
jbe
cmp
addr16
insb
mov
pop
faddp
testb
lret
cmpl
lds
imul
pop
mov
into
sub
adc
jbe
push
pop
jo
insb
cmpsb
das
xor
push
pop
mov
dec
sub
fnstcw
sub
add
out
insb
jle
mov
aas
gs
ljmp
insb
push
add
mov
fldenv
fsubrs
push
add
and
and
cmpl
test
xor
xor
xchg
pop
mov
sub
in
aad
jmp
lret
incl
sub
lock
daa
push
test
xlat
clc
adc
jo
sbb
icebp
movsb
out
stc
cmp
xchg
and
inc
pop
loopne
and
add
repnz
pop
fldt
lods
outsb
adc
xor
call
lcall
jbe
fisubs
in
notb
in
mov
add
push
mov
jge
mov
fsubrs
lds
and
mov
jle
cmp
in
add
push
pop
push
repz
ja
dec
ret
push
sahf
sub
movsl
sbb
jmp
xor
xchg
sub
dec
idivl
iret
call
xchg
hlt
js
and
and
mov
add
xchg
mov
hlt
jb
and
sbb
mov
movsb
sbb
hlt
in
adc
ss
out
cmp
add
js
jb
xchg
test
cli
loopne
fnsave
clc
lods
ret
idiv
out
in
lret
push
repz
sbb
lahf
and
or
xor
mov
mov
mov
pushf
push
or
fists
icebp
jp
jo
add
mov
arpl
xchg
aaa
out
inc
gs
and
test
mov
mov
xor
xchg
stc
je
sub
repz
test
lret
negb
mov
jne
movl
inc
fdivrl
iret
sub
cmpsl
xchg
fnstcw
outsl
add
fstpl
fldt
mov
jnp
inc
inc
mov
sbb
ss
adcb
rcll
mov
sahf
mov
lods
dec
add
inc
sub
ret
ss
and
scas
adc
push
mov
cmpl
xchg
xlat
dec
pusha
idivl
stos
test
int3
fldl
mov
rorl
sub
iret
jp
sbb
inc
pusha
sub
test
ja
push
test
xchg
sub
fstps
in
mov
out
adc
lcall
mov
jb
jmp
xor
shlb
adc
xor
mov
mov
cmpsl
xchg
or
push
or
popa
ja
ficomps
adc
pop
hlt
int3
mov
mov
push
sub
fistl
mov
cmp
sbb
ret
bound
scas
jmp
push
pop
push
fmul
into
mov
test
dec
jae
xchg
pop
rorb
lcall
and
icebp
lock
shlb
sub
dec
faddl
cbtw
lea
pop
jp
push
mov
scas
add
ja
mov
shlb
stc
sub
call
es
ja
cltd
mov
popf
jmp
daa
mov
xchg
sub
insb
adc
pop
adc
sub
mov
dec
and
xchg
in
lret
push
mov
call
dec
enter
jns
fldcw
add
jmp
iret
xorb
in
fcmovnb
inc
push
sbb
jae
inc
dec
dec
jmp
cli
or
ljmp
call
test
mov
cltd
push
and
cmp
fldenv
or
xchg
ja
add
push
xor
std
xor
pop
and
push
adc
dec
loop
and
pop
movsb
xor
mov
icebp
sub
sti
and
sbb
mov
call
fists
aaa
mov
xlat
ret
jb
mulb
mov
data16
and
inc
shrl
jae
push
mov
loope
dec
pop
adc
shrb
arpl
iret
data16
das
cmpsb
mov
ja
xchg
arpl
xchg
out
outsl
dec
in
test
adc
mov
popf
cmc
popa
sarl
pop
push
daa
mov
subb
paddusw
mov
stos
mov
mov
add
dec
or
inc
and
pop
iret
jno
xchg
jge
jbe
xor
jae
js
sbb
out
clc
les
add
xor
add
xor
out
aam
call
mov
out
das
insb
dec
faddl
dec
mov
fmulp
push
push
add
adc
xlat
lods
pop
aam
xchg
hlt
mov
ss
ds
adc
out
fdivs
sub
dec
sbb
jbe
insl
int
out
mov
hlt
or
mov
mov
xor
test
aaa
popa
xor
sbb
inc
iret
or
cmp
data16
aad
xor
orl
nop
out
pop
nop
orl
cs
pop
or
lds
jno
dec
xchg
fnstenv
mov
insb
out
divb
icebp
ret
cmc
cltd
ret
adc
jle
shll
leave
es
or
inc
inc
adc
std
addb
sbb
mov
cwtl
xchg
mov
imul
arpl
cmc
push
out
cmp
inc
push
xchg
cmp
lds
test
faddp
xchg
add
mov
push
fcomps
cmc
adc
ret
pop
sub
les
movb
lods
dec
adcl
clc
or
lcall
push
add
cmp
dec
addr16
loop
sbb
gs
or
adc
stos
test
bound
push
out
lret
outsb
add
adc
pop
rolb
aad
adc
jns
xor
mov
and
push
inc
pop
xchg
add
ljmp
out
xchg
jne
jae
push
mov
stos
cmp
fcmovnb
sbb
mov
rep
xchg
decl
cmpsb
adc
cmp
xchg
xchg
pushf
lahf
pop
out
jmp
or
sub
fstpl
pop
pop
dec
adc
in
fimuls
cmp
clc
out
repnz
adc
mov
pop
xchg
addr16
mov
xchg
xchg
sub
adc
clc
push
jnp
pop
rcl
fldt
jge
or
cmpsl
jle
add
pushf
stos
adc
imul
sahf
pop
jmp
mov
out
pop
movsb
xor
cmp
sarl
push
add
xchg
sbb
and
and
jp
inc
addr16
sub
mov
testb
jl
lret
pop
pop
loope
jle
sub
movsl
sub
fisttpll
and
mov
ljmp
inc
data16
ss
in
mov
fistps
ja
test
jmp
idivb
push
jge
xchg
and
daa
mov
pop
lahf
loopne
sbb
jns
inc
rep
jae
pop
adc
fwait
sbb
loopne
jmp
fdivl
xchg
sahf
dec
dec
push
mov
outsl
call
and
jg
ds
dec
xor
mov
sbb
adcl
xchg
popa
lea
int
sahf
ja
icebp
or
sbb
mov
adc
add
imul
lret
insl
xor
out
jne
pop
sub
add
inc
cs
jb
sub
idiv
inc
out
cmc
push
cmp
push
push
subl
push
arpl
imul
pop
lock
in
fbstp
xchg
testb
lahf
pop
into
gs
mov
rol
sbb
and
fsubs
test
loop
xor
in
push
pop
mov
loopne
lods
sbb
adc
int3
addr16
mov
inc
jle
notl
repnz
sbb
xchg
sbbl
inc
mov
in
lret
fstpl
mov
add
sub
ficomps
gs
andl
mov
dec
test
popf
xchg
outsl
inc
std
jecxz
shl
push
enter
stos
insl
mov
push
jp
shl
aam
pusha
outsl
fwait
dec
imul
ljmp
adc
sti
xor
inc
lods
divb
scas
shr
sti
repnz
jns
cs
bound
call
aad
es
add
test
mov
fiadds
or
lock
lds
or
push
pushf
push
das
ja
aad
sahf
setg
aam
rcll
mov
or
push
sub
and
inc
fs
and
jns
xor
loope
lret
ljmp
mov
or
or
and
dec
cmpsl
out
mov
hlt
add
insl
cmp
or
add
jle
jp
adc
push
push
pop
cli
cwtl
xor
out
jno
and
mov
jp
xchg
and
fdivs
inc
fisubrs
gs
lcall
sub
jp
add
cmpps
in
sbb
xchg
lret
cltd
repnz
or
or
popf
nop
or
and
mov
sbb
stc
aas
or
jge
insb
rclb
add
xor
fidivs
add
aaa
shlb
mov
pop
rcll
or
cmp
and
push
lcall
cmp
adc
gs
bound
test
rcrl
inc
adc
mov
fwait
xor
adc
clc
pop
rclb
fsubrs
lds
push
xchg
popf
dec
cmp
jle
lahf
subb
pop
add
mov
sbb
dec
fimuls
dec
xchg
pusha
mov
sbb
dec
lock
stos
js
pusha
daa
js
xor
lds
aad
lods
inc
pop
in
pop
popa
push
rclb
in
pop
insl
push
mov
cmp
jmp
or
rcrb
mov
imul
sbb
rcll
add
insb
dec
loopne
push
das
lods
cld
xchg
sub
dec
xor
out
ja
imul
and
mov
out
outsl
or
fisubl
mov
mov
into
sbb
or
cmp
xor
inc
lea
and
out
cmp
inc
cltd
into
mov
leave
in
mov
push
test
pop
and
mov
clc
pushw
ss
push
adcb
dec
outsl
mov
dec
mov
sbb
in
add
popf
add
enter
mov
movsb
pop
int3
mov
cmpsb
mov
setle
pop
outsb
mov
push
rcr
add
jmp
stos
test
jp
mov
fidivrs
out
std
xor
pop
add
cmp
pusha
ljmp
loope
loop
test
fbld
and
xor
add
or
lods
dec
fimull
nop
mov
push
push
out
push
and
out
jno
scas
sub
xchg
ja
iret
sub
hlt
and
push
mov
fstl
out
or
jno
stos
mov
push
jle
mov
or
in
mov
xchg
in
mov
mov
adc
pop
adc
sti
or
divb
cmp
nop
sbb
mov
inc
jmp
mov
sbbb
cmp
push
push
test
into
pop
subl
arpl
data16
inc
and
sbb
cmpsb
mov
jb
lea
mov
mov
in
mov
out
lcall
ds
sub
call
dec
mov
add
sbb
push
sahf
cld
xchg
popa
and
popa
fcompl
or
fistps
mov
dec
cmp
cmc
adc
int3
pop
stos
mov
fisubl
mov
data16
mov
pop
xor
push
inc
sbb
stc
int
sub
mov
ss
sub
cltd
nop
jae
stos
daa
sahf
jae
fidivs
sbb
jbe
adc
mov
dec
inc
push
out
loop
repz
adc
sbb
mov
dec
sbb
pop
movsb
jnp
pushf
or
adcb
mov
inc
inc
aad
into
out
mov
xchg
add
jae
lods
add
add
stc
int3
arpl
popa
and
inc
or
sub
in
lret
cli
pop
jo
pop
mov
jns
dec
in
push
or
fs
mov
mov
in
addl
xchg
cld
or
fiadds
inc
add
mov
imul
mov
rorb
lahf
add
hlt
adc
push
imull
add
sbb
adc
into
scas
pop
cli
mov
dec
adc
fwait
adc
mov
xchg
aad
ljmp
jno
xchg
add
cmp
lahf
jne
sub
test
dec
dec
mov
sbb
sub
jb
mov
fdiv
imul
dec
xchg
pop
in
adc
orl
into
cmp
pop
ja
lcall
adc
inc
dec
inc
pop
xor
sbb
lea
or
xor
xchg
xchg
mov
xor
rorb
cltd
fistps
mov
xchg
add
pop
orb
or
nop
in
mov
add
rcrl
bound
or
cwtl
dec
and
push
iret
xor
fadd
frstor
nop
adc
addr16
stos
push
sahf
fcompl
inc
adc
insl
inc
daa
jnp
imul
nop
and
js
add
xor
cmpsl
pop
sub
shl
pop
ret
cmc
cmp
ret
scas
inc
mov
mov
cmp
pushf
out
cltd
dec
adc
lahf
stos
jo
sbb
mov
lahf
add
rcll
mov
or
mov
dec
mov
insb
out
push
push
lcall
test
stos
je
loop
fwait
in
mov
pop
clc
push
hlt
mov
pop
mov
scas
sbb
jp
jb
js
and
or
mov
shl
ss
aam
or
sbb
std
jp
popl
adc
shlb
sbb
popf
inc
pushf
loope
sub
push
pushf
mov
xor
shl
add
sub
repz
lock
mov
jnp
inc
stos
inc
jae
inc
cli
or
adcb
aaa
mov
jb
std
push
pop
mov
and
shld
mov
and
mov
xor
push
push
mov
loopne
call
mov
dec
pop
or
sub
dec
movsl
or
roll
and
mov
fwait
sti
pop
nop
pushf
scas
ja
push
push
loope
push
push
outsl
sti
shlb
fisubrl
lock
jmp
mov
push
popf
repz
dec
or
test
inc
push
pushf
lock
testl
aas
xor
push
call
xlat
and
mov
lret
outsl
imul
outsl
lret
in
in
or
cmpsl
sbbb
add
ds
cmpsb
mov
insb
or
clc
iret
fwait
sub
inc
fsubr
leave
push
mov
in
lea
and
inc
lods
inc
or
inc
push
scas
lret
mov
imul
out
mov
fbstp
mov
stos
lahf
cs
xor
cmp
nop
cmp
mov
add
sub
xchg
cmp
adc
inc
cmp
or
or
dec
pop
aad
mov
sub
xchg
ss
xchg
inc
lcall
sbb
add
fildl
out
jle
out
std
mov
fwait
xor
dec
mov
andl
pop
add
stos
lcall
cmp
or
inc
icebp
push
flds
lret
mov
lret
cmp
push
lret
and
scas
sub
and
call
jmp
les
dec
fisubrl
cmc
adc
and
add
mov
loop
cmp
push
sbb
push
out
loope
int
js
movsl
fnstcw
inc
hlt
sbb
cmp
xor
nop
xchg
inc
jecxz
xor
mov
sbb
mov
or
pop
sub
or
test
adc
xchg
enter
inc
jp
jmp
out
ja
or
cmp
ss
lods
sarl
jo
pop
pop
sbbl
aas
in
test
mov
mov
test
mov
or
sub
repz
mull
insb
fbld
pop
xorl
or
out
pushf
decb
lahf
mov
call
imul
sbb
sub
dec
mov
sti
sbb
adc
sbb
cwtl
das
sub
femms
cmpsl
fsubp
adc
inc
add
sbb
hlt
sbb
and
cltd
or
jle
out
pop
mov
fcoml
idivl
mov
or
sbb
ljmp
lds
lret
lret
push
push
mov
stos
pop
sbb
loope
call
rorb
xlat
shrb
xchg
xor
xor
cmp
cltd
pusha
pop
int3
in
lret
and
mov
stos
imul
add
pop
or
jae
popf
sarb
mov
add
inc
mov
sbb
mov
icebp
mov
pop
jne
cmp
xchg
gs
pop
sbb
sbb
push
mov
push
or
fcmove
outsl
stc
pop
popa
out
xor
mov
test
stos
cltd
add
lcall
dec
je
push
mov
push
loop
inc
stos
stc
repz
push
lret
aas
inc
testl
or
shlb
dec
xor
add
ret
adc
ret
push
add
or
and
loop
inc
out
mov
pop
and
pop
pop
push
gs
sbb
push
outsl
pop
mov
jae
jl
jecxz
xchg
add
sub
cltd
or
dec
pop
imul
pop
lret
pop
stos
addps
sbb
data16
test
inc
aas
pop
xchg
jbe
pop
lods
arpl
test
jb
xor
add
jnp
out
dec
xlat
cmc
lea
inc
aas
adc
dec
loop
cld
ja
mov
push
scas
xchg
dec
cwtl
lcall
mov
insb
push
mov
inc
sbb
rcr
inc
pop
push
out
bound
iret
add
or
and
fstpl
arpl
ljmp
imul
cmp
push
push
jns
shll
sbb
dec
mov
stos
adc
add
es
pop
insb
cmp
mov
call
or
xchg
fsubrs
mov
fwait
shr
lds
dec
imul
push
or
add
popf
xor
xchg
xor
ffreep
jecxz
rorb
movsl
inc
outsl
lods
pusha
jmp
mov
js
or
jmp
rcrl
jecxz
sub
add
or
sbb
popf
lods
adc
cld
imul
lods
inc
mov
decb
rorl
mov
xchg
aaa
scas
mov
cmpsb
push
add
push
adc
test
inc
in
aas
in
mov
jbe
cmp
in
dec
pop
subb
inc
pop
dec
pop
mov
addb
jge
pop
movsb
xlat
icebp
in
es
and
ds
iret
and
pop
enter
insb
pop
fdivp
mov
sbb
rcl
jo
cmpsb
subl
cmp
pop
jecxz
ja
cmc
pop
imul
lds
or
pop
dec
pop
mov
mov
xchg
and
cmpsl
jmp
mov
sahf
xor
sqrtps
mov
movsl
enter
test
and
xor
push
inc
inc
adc
jg
sti
cmpl
ljmp
aas
mov
ljmp
int3
ror
int
dec
loop
popa
mov
rcll
cwtl
das
clc
sbb
mov
enter
and
adc
imul
mov
cmp
cmp
ret
shlb
test
jno
cmp
push
xchg
mov
std
dec
ss
inc
lods
inc
pushf
xor
or
lock
inc
mov
sarl
xchg
sub
sub
jne
test
je
pop
scas
pusha
mul
out
stc
adc
pop
cli
xchg
xor
push
sbb
mov
lahf
lea
cwtl
adc
repz
fidivrs
montmul
cmpsb
inc
stos
mov
adc
add
cmpsb
icebp
insb
fs
in
test
add
pop
jo
lock
and
fistl
std
leave
mov
push
int
dec
out
fidivrl
gs
shl
jge
cwtl
cmp
push
jns
push
pop
idivl
jp
loopne
repz
cmp
cltd
movsl
push
dec
es
js
rcl
push
add
jbe
jecxz
xor
inc
outsb
ds
mov
ja
stos
add
jae
or
mov
jb
mov
das
inc
inc
fdivs
or
fwait
pop
cmc
je
adc
stos
dec
jl
stc
adc
push
pop
hlt
addr16
ror
fcoml
repnz
cwtl
pop
fmul
push
cmc
mov
outsl
ljmp
repz
lcall
hlt
aam
imull
repnz
fsubr
sub
mov
adc
adc
jb
cli
jns
adc
or
xchg
mov
jl
repz
imul
ds
pusha
fisubrl
mov
jp
bound
sahf
xor
ljmp
inc
inc
jmp
cmp
jecxz
in
cli
adc
xor
xlat
movsl
push
stos
stc
add
popa
jge
popa
cmp
cmp
mov
stc
lds
lcall
lock
inc
push
jg
jnp
cld
fmul
xor
cmp
pop
sub
mov
movsb
xor
pop
sub
int
add
cmc
and
jmp
dec
pop
jnp
cmp
mov
fidivl
add
ret
popf
add
sub
inc
and
call
js
cwtl
adc
loopne
inc
mov
xchg
fnsave
add
ss
jb
arpl
nop
mov
sub
or
dec
pop
mov
mov
and
fsubrl
adc
bound
and
cmpsl
push
insl
insl
lahf
xchg
std
xorb
sbb
movsl
add
mov
rolb
insl
sahf
pop
pushf
pop
cltd
lahf
testl
shrl
mov
inc
bound
leave
movsl
hlt
pop
aam
scas
int
cld
gs
xor
adc
xchg
pop
lcall
lcall
add
push
xor
dec
imul
insl
sbb
inc
stc
pop
ret
icebp
xchg
push
xchg
mov
outsb
andb
iret
rorl
addr16
sbb
movsl
pop
aam
add
cmpsb
das
lds
mov
je
loopne
sbb
sbb
pop
idivb
mov
jge
fbld
dec
mov
clc
mov
les
mov
dec
negb
jecxz
push
mov
test
lods
enter
dec
pop
mov
mov
cmp
push
xor
cmp
imul
cmc
cmp
mov
scas
fwait
bound
and
pop
mov
loopne
mov
pusha
movsl
call
mov
or
jge
jno
push
jb
mov
pop
sbb
cmp
pop
ljmp
jno,pn
clc
stos
lods
mov
imul
jo
inc
test
jle
icebp
es
pop
rorb
and
xchg
xor
mov
movsl
add
sub
jo
pop
jmp
insl
add
and
jmp
jge
hlt
jl
adc
and
mov
mov
dec
ret
fdivrs
dec
testb
in
in
stos
in
mov
stos
dec
push
adc
out
iret
cmpsb
mov
dec
xor
fiadds
sar
ret
cwtl
jae
ljmp
jae
jge
rcll
xlat
mov
mov
and
gs
fbld
cmp
add
inc
xor
mov
pusha
shrb
pop
stos
sub
xchg
loop
in
add
or
repz
xor
jb
xchg
xor
scas
cmp
stos
xor
mov
sub
jge
push
lods
push
sub
rorl
lock
cltd
pop
fisttpll
or
pcmpgtd
cmp
and
repz
push
xchg
dec
ljmp
mov
out
jg
rcl
push
daa
lret
leave
xlat
jle
sbb
stc
push
out
je
shll
mov
rcrb
aas
pop
adc
inc
cwtl
mov
jb
push
movsb
ret
imul
mov
xchg
andb
sbb
sub
push
and
jnp
ds
jo
or
test
jg
dec
jecxz
dec
pop
out
mov
movsb
push
cmc
add
mov
sub
xor
lds
js
jecxz
stc
fsubrl
inc
push
aas
and
inc
leave
inc
test
fcomps
fistl
mov
push
inc
test
xchg
xor
xchg
ljmp
inc
and
xchg
mov
xchg
mov
lret
outsl
jge
jmp
xorb
stos
hlt
mov
cmp
mov
jmp
or
pop
jbe
adc
imul
dec
ljmp
std
and
dec
mov
pushf
sub
push
rcl
std
int3
xor
inc
push
sbb
lret
mov
test
mov
ljmp
mov
mul
xor
dec
bound
mov
cmp
sbb
inc
lods
mov
mulb
rcll
in
scas
inc
repz
cltd
clc
cmpsl
jle
insb
mov
lea
mov
sbb
xor
mov
jno
scas
ja
push
pop
mov
in
or
or
add
in
aas
cmc
dec
push
cld
pop
jno
push
ret
fwait
dec
scas
push
out
or
lds
mov
mov
insb
xchg
mov
and
shlb
mov
lods
ret
xchg
push
cmp
arpl
sbb
imul
icebp
mov
fisubl
lds
or
rorb
test
mov
xchg
push
sarl
in
mov
fcomps
mov
add
inc
lret
pop
push
into
mov
xor
xchg
mov
outsl
add
rcr
rolb
inc
fsubrs
dec
pop
xchg
mov
add
hlt
into
mov
imul
xchg
pop
dec
mov
or
adc
xchg
mov
cld
dec
or
cli
adc
int3
pop
mov
in
xchg
ja
leave
push
dec
ret
push
sub
shrl
iret
mov
lods
lcall
mov
pop
mov
cmp
dec
imul
jbe
frstor
test
mov
cmp
push
add
xchg
xchg
call
cmp
sub
push
mov
mov
cmc
stos
and
adc
xor
xor
pop
jns
xchg
pop
cmpsl
inc
dec
fnsave
push
xlat
cmp
lret
xor
mov
loopne
aas
xchg
sub
std
lahf
lcall
and
sbb
xchg
incl
test
add
sub
and
cld
dec
stos
and
shll
aas
xchg
imul
pop
xlat
inc
xchg
call
les
jnp
enter
adc
fistpl
jp
inc
cs
loopne
mov
jmp
mov
cs
iret
cmp
jbe
test
cmpl
movsb
mov
and
inc
out
add
fs
in
out
xor
mov
aam
and
pop
les
mov
mov
iret
testb
add
js
test
ret
adc
lcall
adc
in
xchg
lcall
mov
cmpsb
cmp
pusha
scas
les
rcr
cli
popf
daa
mov
bound
rcl
adc
mov
jo
lods
inc
pop
fcompp
call
call
pop
xchg
cmp
xor
out
xor
ds
sarl
cld
rcll
mov
popa
jge
sbb
cmc
adc
shrl
xchg
add
push
aaa
pop
sub
out
inc
cmp
add
sub
int
int
mov
adc
adc
mov
ret
and
push
popf
les
xchg
pop
cmp
bound
enter
lahf
cmp
push
je
out
xchg
pop
and
out
xchg
adc
sbb
mov
mov
xchg
mov
sbb
pushf
jp
fucom
cmp
in
sub
imul
sti
sub
lods
test
add
cmpsl
xchg
lods
cmp
push
inc
push
inc
xchg
js
leave
pusha
jb
jge
dec
sbb
add
mov
dec
fidivs
hlt
pop
lds
sbb
or
test
in
addb
sbb
js
xchg
push
into
adc
mov
inc
pop
and
ficomps
mov
mov
aam
rorl
sti
mov
xor
fnclex
stc
in
outsl
sbbl
enter
dec
pop
inc
mov
xor
and
out
mov
sbb
and
or
out
sti
pop
push
xchg
les
jnp
jmp
jl
testb
data16
fdivl
lods
in
push
sub
inc
les
call
sahf
rcll
inc
push
sbb
add
stc
mov
adc
mov
push
sarb
xchg
jg
fmul
icebp
pop
sub
push
adc
xchg
jg
adc
in
pop
pop
test
sbb
jnp
dec
add
dec
stc
lds
dec
mov
nop
pop
fiadds
or
call
pop
adc
cmpsb
mov
imul
ljmp
pop
cmpsb
add
and
cltd
and
into
cli
jmp
rcrb
lods
cmp
fnstenv
mov
pop
sti
sahf
fwait
inc
loopne
bound
dec
repnz
jbe
jmp
ss
dec
call
mov
xor
lea
out
in
neg
and
cmp
sti
mov
cltd
addr16
cmp
mov
insb
sti
push
mov
andb
iret
mov
js
add
sub
ss
push
and
mov
jbe
sub
jae
ficomps
leave
and
jnp
push
jb
push
cmpsl
mov
mov
fsubrs
mov
jno
xchg
push
ljmp
stos
mov
pusha
sub
imul
xchg
jb
and
and
iret
in
mov
ds
andb
lds
mov
add
dec
push
dec
pop
cmp
in
lds
test
in
mov
out
inc
mov
dec
fsubrl
cltd
int3
loopne
mov
fcmovnu
cmpsl
ds
mov
or
cmc
pop
subb
scas
pop
dec
mov
aad
lret
rcrl
imul
insb
rol
test
mov
push
aad
pop
arpl
push
scas
mov
aas
jns
xor
and
cmovl
mov
mov
pop
outsl
adc
aas
mov
mov
sbb
daa
out
daa
mov
add
push
in
lock
adc
xor
push
bound
dec
cwtl
aaa
sbb
jns
scas
mov
push
sti
test
and
adc
ficomps
pop
jnp
jle
cmp
mulb
sub
jae
clc
sbb
sahf
repz
jp
loop
dec
out
push
jns
mov
sub
orl
push
ljmp
lock
stc
repz
mov
sub
popf
xchg
jno
test
stos
xchg
orl
adc
in
adc
test
cmp
dec
push
push
xlat
inc
or
gs
mov
or
sub
inc
or
jb
filds
pop
imul
cmp
aad
fstps
rorl
pop
dec
sbb
ret
loope
adc
inc
ficomps
aas
gs
jo
mov
adc
mov
ljmp
pushf
outsl
nop
pop
sbb
hlt
xor
dec
pop
icebp
cmp
cmp
inc
push
mov
lds
enter
std
add
cmpsb
subl
shl
js
add
cs
push
test
rorb
pushf
arpl
mov
hlt
push
mov
jg
xchg
sub
mov
aas
mov
popf
ficompl
mov
pushf
inc
lcall
xor
adc
fs
sbb
pop
adc
popl
subb
jo
dec
lea
fiaddl
inc
mov
in
mov
lds
mov
or
push
lret
jg
jg
cld
enter
push
stos
hlt
pop
out
push
pop
xchg
adc
inc
cltd
arpl
adc
icebp
push
imul
adc
testl
mov
ret
lret
mov
in
popf
int
xchg
xchg
call
in
jge
or
jge
mov
int
mov
data16
mov
adcl
shl
pop
add
jns
add
xchg
clc
mov
repz
test
xchg
out
lcall
test
mov
scas
mov
sub
repz
pop
push
pop
jne
mov
popa
mov
push
push
sub
mov
les
shl
fsubl
push
fdiv
lea
push
lods
push
scas
loopne
test
lods
mov
sub
addr16
fsubr
adcb
dec
mov
push
push
sub
test
jge
hlt
push
inc
outsl
jo
insl
ja
push
lahf
neg
mov
mov
fsts
mov
ret
ja
call
incb
xorl
mov
sub
lret
lods
dec
out
cmp
push
jbe
xchg
jle
xchg
int3
xor
popa
sbb
leave
or
repz
dec
fmul
fstpl
pop
mov
add
xor
mov
mov
mov
iret
test
cwtl
mov
stos
pop
sub
rcl
sbb
xor
inc
outsl
je
sub
jne
shlb
das
fwait
mov
into
inc
or
in
dec
pop
lret
fbld
movsb
fdivl
cmpsb
cmp
xchg
movsb
test
and
add
in
dec
dec
fcmovbe
daa
bound
repnz
test
mov
shll
mov
aad
xor
and
sub
cli
xchg
movsb
cmpl
and
push
imul
int3
arpl
or
sub
cmp
cs
shr
xor
ljmp
nop
add
shr
sub
pop
jne
pop
cmp
pop
sub
sbb
add
cld
pop
pop
dec
hlt
divb
out
mov
add
push
jp
mov
inc
mov
ja
popa
negl
jne
cmp
inc
jle
sub
xorb
push
mov
nop
cmp
lock
int3
sub
mov
out
insl
fnstenv
scas
outsb
push
pop
fwait
push
mov
cmp
jecxz
dec
pop
jns,pn
mov
es
push
xlat
inc
or
or
jbe
bound
push
xchg
xor
loope
leave
test
movsl
imul
sbb
mov
and
pop
push
call
and
sub
pop
cmc
sub
out
xor
fwait
add
in
negb
lds
insl
jnp
mov
jle
mov
shll
push
inc
fnstsw
mov
inc
mov
jnp
sti
iret
inc
fiadds
mov
gs
fstpt
fcoms
jle
or
xor
fs
mov
mov
push
into
gs
cld
xor
and
pop
lea
sub
in
mov
rolb
and
jp
fs
mov
xor
lock
lahf
daa
gs
and
aam
in
sahf
test
xor
or
or
adcb
std
dec
andb
fwait
rclb
inc
pop
mov
sub
sub
jo
lahf
fnstenv
mov
and
aas
arpl
jno
lret
ja
push
mov
pop
std
lcall
in
jp
lods
stos
inc
mov
pop
leave
int3
jbe
or
shrb
mov
addr16
jo
shll
xchg
sub
dec
iret
mov
rcrl
sbb
imul
push
add
lcall
and
lret
ret
push
jbe
or
cmpl
xor
popf
sbb
xor
cmp
push
pop
cmc
in
mov
loop
pop
adc
xchg
es
adc
dec
jle
and
filds
jo
dec
cli
dec
repz
lea
fwait
rorb
dec
lret
mov
mov
and
jecxz
shl
adc
or
rcrb
mov
add
sub
mov
pop
mov
cmp
ret
xchg
xchg
aam
push
mov
sbb
dec
imul
mov
push
push
add
mov
adc
inc
in
andl
xchg
pop
lea
mov
fbstp
xchg
push
and
test
adc
loopne
out
sbb
psraw
lcall
je
push
rcrl
lcall
imul
je
adc
test
stos
inc
push
out
sbb
stos
lea
loop
daa
or
in
adcl
cltd
and
and
ret
cmpsb
repnz
pop
aad
add
ret
lods
inc
cmc
lds
in
dec
inc
fidivl
push
xchg
test
inc
push
adc
fdivl
test
jno
sti
inc
scas
xchg
aad
test
adc
cmpsb
fstl
xchg
out
mov
int
mov
mov
imul
sbb
push
icebp
adc
repz
das
inc
daa
xor
inc
repnz
cmpsl
jo
cmp
int
xor
inc
stos
dec
sbb
and
aam
mov
mov
cmc
mov
xor
xchg
xchg
or
inc
data16
jl
fs
and
mov
pusha
pop
xor
insb
push
sub
mov
rorb
and
out
mull
dec
in
sahf
jno
dec
sub
sbbl
imul
jmp
adc
outsl
dec
fdivrl
lret
adc
fwait
icebp
test
jle
add
rcrb
inc
xor
fistl
and
and
push
inc
inc
fcoms
ss
stc
jne
lret
pushf
jg
scas
add
cli
xchg
xchg
and
pusha
and
push
and
add
inc
xor
pusha
dec
push
pop
jp
insb
add
in
xchg
add
sbb
cmp
mov
out
push
repnz
insb
out
sub
mov
cmp
not
gs
rcr
mov
sbb
outsl
mov
fnsave
cmp
imul
mov
sbb
lods
fldcw
mov
aad
xor
sub
je
dec
dec
cltd
test
mov
dec
mov
mov
rol
jbe
inc
aas
adc
jbe
add
xchg
cwtl
stos
movb
divl
cmp
test
mov
fldenv
xorl
add
sub
das
pop
pop
jge
dec
lcall
xchg
ss
loop
not
ret
add
jmp
jecxz
mov
or
aaa
repnz
leave
sub
push
jns
insl
mov
mov
je
and
je
leave
jns
rcrl
dec
add
sbb
pop
cmp
sbb
sbb
mov
add
cmp
xchg
and
scas
jb
shlb
lret
sub
mov
addr16
sti
out
lock
xchg
cmp
inc
pop
or
lods
pop
aam
mov
mov
mov
push
ljmp
mov
lods
jae
imul
dec
shrl
hlt
or
sub
push
add
cmp
in
add
das
fs
pop
inc
xor
pop
mov
mov
movsl
sbb
sti
cmp
sub
popa
cmp
int3
arpl
daa
ljmp
in
xor
push
iret
xor
cs
or
sti
cmpsb
data16
mov
popa
add
cmpsl
xchg
or
add
fwait
lret
cmp
stos
push
ljmp
icebp
int3
pop
scas
fs
jp
imul
insl
and
test
int
stos
lcall
adc
pop
iret
out
add
js
mov
add
clc
scas
xor
mov
lea
insl
mov
dec
jo
jg
js
adc
sbb
ret
mov
shll
scas
mov
xchg
sub
sub
fbstp
in
mov
cmp
push
mov
mov
ret
pop
cmpsb
sbb
mov
movsl
mov
insb
loopne,pt
add
ror
and
xor
push
inc
cmp
or
cs
push
ljmp
fistps
push
xor
imul
jecxz
xchg
daa
mov
movsl
jg
mov
add
jbe
fidivl
loop
cmpsl
sbb
cmp
out
imulb
nop
popf
xor
or
hlt
jb
ret
mov
das
bound
xchg
test
ja
out
mov
mov
push
lods
jl
pop
testl
scas
and
ljmp
jno
jbe
lret
fisubrs
cwtl
es
cmp
lods
inc
xchg
mov
mov
jecxz
fs
sub
jle
hlt
in
test
push
arpl
push
sbb
testl
cmp
xchg
rorl
mov
and
cs
shl
push
push
mov
fnstenv
cmpsb
cmpsb
inc
xchg
clc
sub
or
cmpsl
xor
xchg
repnz
add
xchg
sub
pop
cmp
in
inc
mov
mov
call
xchg
jg
lcall
popf
jo
xchg
cmc
add
or
cmpsl
jns
add
add
push
adc
inc
mov
and
inc
sahf
mov
mov
sbbl
fsubs
pop
xor
and
push
outsb
cmp
stc
cwtl
addr16
testl
movsl
in
mov
notl
xchg
test
cmp
mov
and
pushf
inc
pop
inc
fldenv
mov
gs
ret
xchg
cltd
mov
sbb
lds
sbb
add
cmp
cld
jle
sub
and
out
push
push
cld
outsl
fmul
inc
xlat
cld
mov
xchg
pushf
sub
cmpsb
lock
mov
xchg
sub
pop
inc
mov
sub
sbb
or
and
dec
fildll
jmp
fnstcw
mov
xchg
scas
das
cltd
dec
loop
sub
mov
out
pusha
negl
push
jle
sbb
xchg
add
xchg
ljmp
in
mov
call
int3
mov
pop
and
out
sub
into
or
sarb
leavew
pop
gs
and
aam
cwtl
pop
bound
js
cwtl
lds
scas
push
mov
int
lock
or
scas
jbe
or
cmp
mov
nop
loopne
ret
clc
sbb
fs
hlt
and
or
push
fdivl
jbe
xlat
jmp
aaa
scas
dec
and
gs
inc
aam
lock
scas
inc
pop
rclb
push
mov
scas
ja
in
icebp
mov
xlat
clc
xlat
fadds
dec
testb
mov
inc
sahf
out
call
adcl
in
hlt
push
sti
adc
mov
mov
push
rcl
orb
lods
lods
sub
jmp
mov
cmpsb
fdivl
lds
fwait
sub
dec
jecxz
xor
rcrb
test
imul
mov
adc
jbe
cmp
cmpsb
inc
pop
and
scas
push
or
out
jle
test
xchg
lret
inc
fstpt
push
out
mov
fucomi
jns
cwtl
and
cmp
jle
push
lea
jg
pop
imul
mov
mov
cld
mov
adc
mov
scas
mov
lret
in
jmp
dec
sbb
jb
fwait
aaa
pop
xchg
mov
dec
aaa
mov
sub
push
nop
and
dec
outsb
add
sbb
xor
cmpsb
jae
pop
cmc
adcl
sub
mov
rol
aad
add
inc
lods
sub
fistpl
dec
or
inc
xlat
push
xchg
lods
or
jge
mov
cmpsl
adc
frstor
outsb
es
jb
mov
add
and
sub
es
loope
lods
les
lods
ret
adc
bound
les
and
xchg
dec
in
pop
dec
xchg
sub
insb
add
aaa
pop
iret
fisttpl
lret
jne
jne
rclb
jecxz
stos
outsb
jo
test
lea
inc
mov
fbstp
mov
lods
or
arpl
inc
sbb
jne
xor
adc
add
push
push
adc
test
dec
ss
xorl
add
mov
xchg
jecxz
scas
xchg
mov
cmp
mov
stos
or
sub
sub
or
dec
push
in
mov
nop
pop
inc
cli
jno
daa
adc
inc
pop
mov
cld
int3
and
sub
add
js
pop
cmp
inc
xlat
dec
loope
fs
cs
subl
daa
add
sub
inc
sarl
push
insl
dec
mov
mov
xor
adc
scas
pushf
push
nop
es
movl
and
mov
test
jmp
inc
fcoml
icebp
insl
add
sbbl
je
mov
dec
icebp
movsb
repnz
push
xchg
push
daa
xchg
add
inc
or
arpl
js
jbe
outsl
cltd
mov
cmp
addl
or
adc
dec
mov
mov
repnz
sbb
mov
fstps
cmp
pop
out
pop
pop
push
popl
ret
test
bound
xchg
imul
pop
int3
xchg
nop
pop
adc
lods
mov
mov
data16
popf
lds
sbb
mov
mov
adc
lods
inc
mov
movsb
in
jb
or
es
pop
clc
mov
push
repz
lock
pop
mov
sbb
lods
lds
pop
or
and
inc
divl
scas
xor
cmpsl
aad
nop
es
jp
int
sub
add
popa
call
mov
inc
or
shlb
mov
mov
cli
sub
mov
mov
lahf
lods
jle
or
or
imul
arpl
movsl
icebp
jns
mov
leave
popl
jp
sbb
pop
fcompl
fbld
lods
loope
insl
adc
aas
dec
xor
hlt
dec
out
mov
int3
xor
ret
jnp
mov
xchg
cld
xchg
fdivs
cld
pop
loopne
push
xchg
mov
cli
mov
jno
and
enter
sbb
subl
dec
out
test
cmp
ds
lahf
movsl
sbb
daa
movsl
xchg
negb
xchg
sub
lahf
movsl
inc
xchg
sbb
add
mov
sbb
dec
dec
ja
mov
mov
push
or
nop
daa
testb
add
sbb
jnp
push
jmp
pop
loope
jmp
push
adc
shrl
stos
cs
lods
aas
jb
mov
leave
xor
cli
sub
jl
fcmove
jecxz
cltd
ret
inc
jns
jbe
in
out
sti
les
imul
aam
cmc
add
std
push
in
cs
mov
packuswb
lds
inc
inc
lret
repnz
aam
test
or
cmpsb
inc
push
mov
rcll
arpl
ficompl
xchg
and
mov
es
jl
xor
imul
xchg
sbbb
repnz
mov
push
sub
add
pusha
das
lea
inc
loopne
pop
lret
and
cli
fnsave
cmpsb
sahf
insb
orl
xor
scas
mov
sbbb
xchg
adc
into
mov
addr16
stos
in
in
add
lcall
or
sub
jae
push
adc
test
xchg
add
pusha
hlt
mov
xchg
sub
clc
jbe
and
mov
fnsave
lea
sti
adc
call
xchg
xor
mov
pop
gs
add
mov
iret
and
bound
mov
ss
cmp
dec
aaa
movsl
shll
loop
cmc
mov
je
push
inc
and
iret
stos
pop
aaa
pop
lock
and
mov
inc
fimull
cwtl
das
cmp
mov
mov
push
mov
in
arpl
pop
push
call
inc
es
cmp
cmp
pop
call
outsb
add
mov
fistps
adc
cltd
xor
push
insl
outsl
mov
mov
mov
mov
aad
std
pop
popl
sub
mov
jg
xchg
mov
inc
test
lods
rolb
je
sbb
sahf
dec
call
and
jo
mov
xor
and
jo
pop
mov
sbb
sbb
pop
movd
sbb
xchg
gs
sub
pop
imul
popf
pop
mov
jb
pushf
mov
aas
and
mov
add
pop
lods
cmp
lahf
pop
lods
sarb
add
lock
fsts
pushf
xor
jg
mov
aad
dec
leave
mov
sub
inc
dec
adc
ljmp
fwait
xchg
in
jmp
inc
std
out
mov
popf
xchg
lods
sbb
ja
loop
negb
std
rcll
xlat
mov
sbb
xchg
cmp
jecxz
sbb
je
pop
jb
xchg
stos
js
mov
lds
int
xchg
pop
adc
add
xor
dec
push
inc
adc
jns
into
pop
clc
fidivl
lret
pop
in
jb
mov
inc
arpl
push
push
jge
mov
mov
pop
nop
cmc
pop
repnz
mov
ss
pop
shlb
scas
jnp
icebp
fs
xchg
popf
jns
sarb
call
in
out
cmp
notb
pop
dec
lods
jg
js
pop
lret
stos
gs
push
ljmp
push
xlat
loopnew
push
mov
aaa
mov
test
mov
movsl
mov
pop
call
cmp
dec
insb
push
fwait
xor
push
stos
push
test
jbe
mov
xchg
mov
mov
jnp
lcall
and
push
stos
mov
push
cmp
dec
loope
pop
movsb
pop
inc
enter
xor
xchg
sub
pslld
sbbb
pop
test
xchg
push
jae
cmp
into
mov
mov
call
jne
jg
loopne
mov
mov
ret
ret
pop
cmc
rorb
scas
les
lea
cltd
adc
lret
sbb
mov
jp
xchg
jae,pn
outsl
scas
cmpps
adc
add
xor
inc
aam
std
add
lods
ret
arpl
mov
dec
aad
cmp
mov
scas
dec
xchg
rcll
cmp
add
and
adc
call
dec
testl
adc
outsb
jle
jno
lret
mov
xchg
sbb
pop
sti
jle
lret
sbb
mov
mov
lods
ja
cmpsl
loop
fstps
add
lods
inc
mov
popf
mov
xchg
dec
ficomps
ret
dec
js
sub
inc
jae
sub
bound
jecxz
xor
push
mov
inc
mov
push
xlat
inc
into
xchg
in
sbb
push
add
ret
cmp
adc
and
jge
fcomps
adc
sbb
pop
sbb
mov
pop
ret
lret
and
lret
cmp
or
push
lahf
push
pop
sub
std
xchg
mov
stos
mov
cmpsb
jge
xchg
push
lods
mov
sbb
jne
xor
cmpsb
enter
mov
dec
movsb
leave
jne
adc
call
and
fcmovbe
or
arpl
ljmp
jo
jecxz
push
hlt
jne
or
mov
jno
dec
pop
adc
add
jmp
lahf
sti
fildll
arpl
sbb
push
push
push
and
lea
in
repnz
xchg
xorps
movsl
xor
push
xchg
lahf
out
pushf
in
shrb
add
adc
push
rcrl
inc
sti
shlb
dec
sbb
mov
xchg
add
dec
adc
add
lcall
jbe
cwtl
cmpsl
fistps
xchg
pop
sub
sbbb
or
daa
mov
push
mov
cmc
test
lret
jne
add
stos
lods
test
sbb
cs
cmp
out
sub
or
add
addr16
out
inc
xor
jge,pn
cmp
dec
xor
mov
sbbl
pop
scas
push
mov
jno
or
lea
test
lret
imul
mov
dec
addr16
adc
xchg
jg
insb
lds
pop
cmp
ljmp
mov
inc
mov
sbbb
loop
and
mov
dec
mov
mov
cmp
cmpsb
push
sahf
pop
sub
test
push
jl
sti
imul
fsts
sbbb
rcll
jne
fidivrl
stos
pop
aam
push
sub
cmp
in
pop
cmp
jae
jle
scas
and
jae
aam
add
lds
or
jbe
es
xor
inc
push
aad
cwtl
adc
mov
push
in
fs
imul
daa
pop
mov
xchg
fsubr
fadd
pushf
xor
sbb
mov
push
push
xor
ret
xchg
jns
push
inc
inc
fisttps
mov
dec
outsl
popf
test
dec
jae
es
pop
aam
shrb
lcall
stos
mov
repz
idivl
jns
aam
mov
ss
push
out
mov
sti
push
sti
sub
inc
and
adc
jecxz
hlt
mov
jmp
or
out
cwtl
hlt
in
addr16
sub
xchg
cmp
sbbl
lds
push
popf
mov
stos
fptan
cli
data16
out
add
push
xor
lods
pop
or
fstps
add
jbe
or
cmp
adc
or
fwait
push
xchg
push
cmp
inc
mov
dec
xor
or
or
mov
ljmp
ret
in
std
push
movsb
cmp
nop
addr16
mov
insl
lock
sahf
test
mov
push
je
mov
dec
loopne
out
ror
xchg
mov
pop
lret
ljmp
xchg
jb
mov
mov
fbld
movsb
fimull
addr16
insl
lret
push
loopne
mov
lods
insb
add
jne
add
dec
push
lret
out
jne
je
fldcw
and
cmp
mov
mov
xor
popf
xchg
mov
cld
push
mov
loopne
mov
iret
std
pslld
sbb
cmp
cltd
push
loop
jae
pop
notl
jecxz
or
jmp
nop
mov
mov
jae
int
xor
mov
jg
add
adc
mov
or
add
jge
repnz
inc
inc
ret
insl
mov
cli
test
pusha
sub
or
pop
mov
sbb
mov
cmp
stc
test
std
sub
in
lret
flds
sti
inc
jl
sub
popf
and
addr16
mov
test
repz
sub
in
subb
insl
pop
sti
jbe
add
in
pusha
out
cltd
push
jns
xchg
inc
xchg
iret
fcmovne
addr16
pop
sbb
inc
sub
mov
js
pop
and
push
jne
and
mov
arpl
iret
jmp
lods
insb
repz
addr16
jnp
ljmp
push
or
xchg
and
xchg
cmp
fisttpl
invd
cmp
cmp
or
inc
xchg
push
and
and
enterw
stc
repnz
movsb
jl
push
movsl
lds
jmp
xchg
daa
sub
cmpsl
sbb
shll
pop
fmuls
dec
cmp
loope
ds
dec
pop
or
fisubl
cmpsb
sub
sti
inc
and
fs
xchg
lcall
adc
push
insl
shlb
mov
ret
in
adc
or
fwait
inc
jecxz
xchg
adc
ret
hlt
cwtl
das
sbb
jle
aad
add
daa
xor
ds
xor
inc
sti
mov
sbb
adc
mov
stc
sbb
orb
mov
add
bound
movsl
xchg
popa
jle
push
jo
mov
addl
imul
fsubrp
mov
inc
push
dec
pop
add
out
lahf
and
ja
mov
mov
inc
mov
fdivs
pop
adc
mov
jo
jmp
cmpsb
push
dec
insl
sbb
mov
lret
or
push
std
sub
repz
push
dec
sub
test
movsl
inc
adc
inc
mov
fimuls
in
ret
xchg
shl
lcall
lcall
push
pushf
fistl
xor
pop
fldcw
shrl
push
test
lret
and
popf
pop
xchg
or
adc
mov
sub
lahf
aaa
pushl
dec
pop
aad
sub
jecxz
cltd
dec
cli
xchg
jge
test
fcompl
xchg
shl
jg
lods
jne
push
push
popf
push
push
fyl2x
mov
xor
fcmove
loopne
fstp
bound
lds
imul
pop
sarb
fs
pusha
or
lds
call
push
add
pop
shlb
sarb
std
fistl
jbe
cmp
push
sub
dec
fcmovnbe
rolb
mov
or
es
push
sbb
pushf
cltd
pop
mov
xorl
aad
add
xor
or
mov
push
fsubr
ja
enter
rcrl
fldenv
mov
sarl
ss
xor
js
pop
stos
and
clc
add
dec
popa
shld
mov
fcoml
or
scas
shr
sbb
lock
mov
movsl
not
fcomi
xor
cld
sbb
push
in
cltd
cs
ljmp
sahf
pop
outsl
sar
sbb
lods
dec
ss
inc
sti
fwait
hlt
pop
fnsave
xchg
inc
sbb
pushf
or
jl
push
dec
decl
and
pusha
xor
pop
mov
lahf
loope
rcrb
fmuls
sbb
adc
sub
pop
xor
and
inc
mov
dec
int3
mov
mov
int3
push
inc
sbb
inc
repz
loop
pop
mov
mov
xchg
or
or
leave
mov
pop
mov
notl
adc
int
add
inc
mov
jecxz
andb
clc
mov
addb
fidivs
daa
xlat
outsl
jge
shrb
jae
push
dec
arpl
repnz
fsubrl
call
test
test
ds
add
inc
sub
pop
addr16
cmpsl
aad
and
mov
mov
sub
test
and
sar
icebp
mov
cmc
jae
lret
fildll
test
cmp
into
mov
xchg
loopne
and
push
xor
xor
push
lret
ja
ds
pop
repnz
addr16
ret
add
dec
jb
inc
cmpsl
xor
out
in
sbb
cmp
cmp
pop
jbe
add
pop
test
push
fldenv
dec
push
clc
fwait
aaa
sub
in
andb
leave
xchg
cmp
repnz
aam
jp
pusha
jns
sub
mov
push
add
leave
mov
add
cmpb
mov
mov
in
rcrl
pop
mulw
std
xchg
mov
adc
sbb
aas
lock
icebp
jb
cs
jg
out
inc
and
sub
pop
aam
stos
and
pop
cltd
inc
sahf
ja
ret
shll
jnp
sbb
out
popa
sub
loopne
idivl
cld
xchg
imul
adc
and
fisttps
add
and
popa
test
loopne
leave
sahf
mov
add
dec
icebp
popf
sbb
call
or
fwait
scas
xchg
mov
and
add
daa
ret
xor
and
xchg
xchg
iret
add
stc
sbb
or
imul
test
push
or
aaa
into
or
popf
rcrb
movsl
fwait
scas
fistpl
aas
enter
out
lret
lret
push
scas
add
cmp
xlat
cmp
pop
push
or
or
and
inc
or
mov
stos
push
cmp
repnz
cmp
push
add
push
inc
pop
dec
xor
mov
fnsave
or
inc
fldl
shll
inc
or
dec
fisttps
jae
lods
pop
xor
stos
ficoms
jne
aad
jo
xchg
push
push
inc
sub
stos
stc
xor
ss
sub
data16
rorb
mov
test
scas
lret
and
add
cmpsl
jle
clc
dec
icebp
or
lock
sub
stos
xor
cmpb
xchg
fdivr
nop
cmpsl
cmp
imul
stc
cmp
pushf
xchg
dec
xor
jnp
mov
test
xchg
or
pop
mov
add
add
aaa
mov
jg
push
andl
push
mov
movsb
fcoms
cmpsl
sbb
popa
pop
mov
adcl
xor
lock
in
and
push
pop
cmp
out
ja
or
mov
sbb
daa
adc
lods
xor
mov
push
pusha
add
popf
inc
std
xchg
push
mov
dec
ljmp
xor
or
enter
cmp
cmpsb
mov
pop
imul
out
movsb
sti
rclb
and
int
cs
cltd
mov
adc
jae
and
sbb
add
mov
dec
clc
mov
shlb
in
fs
jecxz
or
lahf
xor
and
sarl
add
push
lds
mov
out
add
sbb
push
mov
sub
addr16
xor
mov
or
push
pop
jge
mov
sub
pop
jb
mov
mov
xchg
fidivl
xchg
sub
or
cs
inc
dec
xchg
and
mov
icebp
and
xlat
fistpl
adc
fsubs
xor
in
insb
fidivrs
pop
test
inc
repz
loop
aam
inc
es
xor
fildl
movsl
xor
xchg
cmp
fwait
fwait
sahf
imul
aam
and
sbb
jae
mov
faddl
cli
pushf
mov
sbb
jle
testl
ret
mov
in
scas
mov
jg
popa
sti
js
ljmp
add
repz
or
loopne
inc
xchg
gs
mov
mov
daa
and
lahf
mov
dec
cli
add
aaa
sarl
push
cmp
clc
adc
addr16
jns
out
outsb
out
inc
ret
repnz
jnp
sbb
adc
adc
dec
xlat
xchg
mov
popf
adc
mov
mov
jmp
add
lret
mov
out
dec
dec
fwait
int3
xor
dec
stos
dec
in
out
mov
arpl
int
aam
xor
cmc
sbb
subl
add
jl
bound
mov
out
lods
dec
out
pop
in
in
sub
xor
lret
pop
add
dec
imul
stos
outsl
mov
ljmp
or
add
jmp
sbb
xchg
mov
test
mov
add
stos
xchg
add
out
push
pop
arpl
xor
mov
dec
jg
aaa
shrl
pavgb
cmp
mov
cltd
fnstcw
out
cmc
xor
push
dec
in
xchg
jno
addr16
mov
cmp
nop
sub
in
arpl
lcall
add
jecxz
cmp
cltd
stos
jmp
mov
popf
or
push
aas
inc
dec
movsl
inc
sub
mov
mov
aas
sti
push
scas
pop
ret
push
mov
mov
data16
out
mov
adc
outsl
mov
ja
outsl
add
sbb
lret
lret
stos
cmp
push
sbb
xor
cmp
mov
stos
divb
test
icebp
inc
cmp
stos
das
ja
fs
push
lock
jbe
adc
dec
mov
fldenv
dec
inc
imul
dec
dec
movsb
out
popa
fdivrs
rorb
inc
lods
call
cmp
lahf
rolb
and
or
xchg
or
or
mov
outsl
test
push
xorb
mov
mov
aad
mov
add
mov
push
jecxz
or
sub
lods
inc
in
test
lcall
push
iret
cmp
in
sbb
dec
rorb
mov
loopew
ficompl
xor
les
stos
lock
orb
inc
out
mov
movsl
push
pushf
xchg
imul
sub
sarb
or
pusha
and
jb
pop
std
xchg
cmp
jg
fistpl
jnp
xlat
andl
mov
push
cmpsl
sbb
leave
outsb
inc
xor
xorl
out
sbb
cmp
imul
mov
aaa
insl
cmp
lods
mov
ds
mov
inc
pop
or
xor
push
stc
push
in
fs
repz
imul
imul
repnz
ret
hlt
push
in
out
fld
pop
mull
in
repz
push
adc
lcall
and
mov
lahf
call
cmp
sarb
jns
aad
stos
push
mov
repz
adc
jp
xor
xchg
inc
and
enter
stos
xor
mov
push
pop
clc
pop
adc
ret
pop
ss
and
pop
ret
jmp
cs
xor
cmpsb
ss
sub
in
rcrb
mov
add
into
gs
pop
jne
lea
and
in
arpl
xchg
or
and
xchg
in
xlat
push
in
dec
inc
pop
mov
jp
xchg
xor
adc
lock
fwait
ret
mov
jg
push
mov
cmpl
or
cmp
movsl
dec
sahf
aas
and
push
lcall
xor
stos
test
jno
and
popf
outsl
cltd
mov
dec
inc
pop
cmp
iret
inc
loop
out
into
jge
inc
xchg
les
push
sub
jecxz
add
and
mov
popf
lock
jnp
xchg
cmpsb
cmp
jl
out
popf
test
fucomi
dec
test
mov
push
push
inc
or
cmp
fists
loope
inc
push
int3
add
mov
and
pop
sub
sub
xchg
fucomip
jg
lahf
inc
hlt
mov
loopne
jno
adc
dec
jbe
xchg
test
ja
loope
add
inc
pop
or
int
add
cwtl
das
adc
ljmp
rcl
push
push
mov
dec
fbld
sti
data16
sub
mov
jg
es
jmp
shlb
mov
ljmp
push
mov
inc
rorb
lret
mov
pop
enter
repz
sub
push
inc
mov
mov
sbb
daa
arpl
sbb
cwtl
mov
xchg
fimull
push
stos
and
jge
jg
xor
mov
xor
bound
or
push
aas
push
repnz
in
mov
mov
mov
cmp
jne
mov
aam
cld
movsl
jae
mov
insl
jge
rorl
cltd
test
mov
in
pop
lahf
aam
cmc
pop
rcl
push
hlt
mov
jnp
dec
xlat
adc
fisubl
leave
pop
adc
pop
adc
ss
sub
inc
loope
ds
pop
inc
in
insb
mov
sub
flds
sub
out
clc
and
sub
leave
fnstenv
jno
sahf
mov
ret
popa
clc
clc
mov
jg
sbb
test
xchg
jecxz
sti
pop
adc
push
shr
inc
mov
jo
fwait
or
inc
adc
shll
mov
pop
cmp
out
inc
je
sti
xor
mov
mov
push
fadds
add
xor
sti
or
adc
popa
pop
push
lahf
jg
outsl
into
mov
sub
in
jl
jae
dec
sbb
add
pop
enter
stos
cmp
inc
pushf
push
jo
sub
aas
jbe
sub
ljmp
cmp
jne
xchg
cmpsb
and
repnz
mov
imul
sub
xor
xor
es
xchg
and
jmp
xchg
sbb
popl
outsl
mov
cmp
mov
addr16
cmp
jbe
and
inc
fisttpll
inc
ja
push
js
loopne
xor
mov
lea
inc
insb
xchg
or
in
xchg
adc
pusha
push
sbb
mov
roll
adc
add
jae
je
jl
int3
jg
std
mov
les
adc
pop
sahf
and
add
mov
pushf
dec
das
xchg
imul
out
gs
cmp
sub
scas
scas
inc
loope
mov
rol
int
mov
out
nop
push
sbbb
sub
aaa
mov
inc
cs
or
xchg
mov
mov
inc
ja
sbb
push
call
pusha
mov
pop
xchg
pop
cmp
mov
bound
cmp
mov
fs
cwtl
sub
xchg
jns
inc
in
sub
sbb
mov
nop
jge
pop
repnz
xchg
pminsw
dec
push
movsl
push
fnstenv
rcrl
sarb
jb
loope
adc
rcr
mov
iret
cltd
in
mov
jle
push
push
mov
popf
push
push
shl
nop
call
sbb
lea
insl
cltd
test
inc
enter
bound
je
lds
cs
fcmovnb
dec
jecxz
sti
and
std
rcll
push
imul
aaa
imul
or
mov
inc
push
mov
jo
cmc
mov
nop
daa
dec
inc
ficoms
or
inc
ret
xlat
adc
push
scas
sbb
out
jb
movsb
mov
dec
notb
and
stc
aas
push
jmp
fbstp
jmp
repnz
fdivrl
cli
popf
cmp
pop
icebp
xchg
mov
push
popf
daa
cwtl
push
test
and
cmpsb
xchg
dec
sbb
subl
jo
sub
jle
sbb
insl
pushf
sbb
gs
adc
rolb
cmpl
pop
lock
mov
push
inc
sub
jmp
lds
lret
in
andl
adc
int3
inc
or
stos
std
andb
rclb
jae
lock
mov
enter
push
fcomps
mov
sub
lods
stos
pop
mov
gs
xchg
add
adc
rcrb
xchg
xchg
shl
in
adc
fistpl
hlt
aam
xchg
in
sbbb
mov
jl
sbb
xchg
sub
and
lods
ljmp
pushf
je
xchg
fwait
sub
aas
scas
mov
pop
xchg
fidivrs
pop
push
inc
or
cs
in
sbb
insb
xor
jp
shrl
int
jg
xchg
out
xchg
lcall
cli
ja
mulb
sub
dec
xchg
xchg
rcl
pop
add
popf
push
cld
test
js
cltd
loop
dec
ret
hlt
push
negl
mov
push
decl
outsl
push
shl
aad
hlt
lea
push
aam
push
jge
out
lods
test
movsl
cmp
leave
scas
in
jnp
pop
addr16
xchg
outsb
test
jns
cmp
add
lahf
flds
shlb
es
pop
dec
jae
mulb
lret
lock
scas
pop
cmc
filds
mov
cs
fcoml
scas
xchg
cmp
and
push
test
and
stos
push
mov
mov
jg
popa
mov
aaa
int
mov
jl
sub
stos
insl
and
mov
pop
sbbb
jno
jns
mov
xor
stos
push
jmp
inc
and
nop
nop
inc
enter
stos
adc
out
mov
rol
rcrb
stos
jbe
sahf
lods
cmc
inc
cmpsl
ret
lahf
repnz
mov
ds
mov
iret
mov
jbe
sbb
insl
jle
inc
js
out
inc
adc
es
test
jmp
push
in
cmpsb
sbb
pushf
cmc
mov
shl
aas
push
test
inc
mov
sbb
insl
loopne
mov
mov
jnp
push
sahf
daa
mov
lret
adc
mov
arpl
cmp
xor
mov
jnp
imull
jnp
int
push
js
addr16
das
insl
push
add
mov
mov
dec
mov
fstpt
loop
cmp
or
inc
lds
lret
hlt
xchg
cld
pop
pop
ss
fisubrl
mov
stos
pusha
inc
in
jne
xor
gs
out
ret
add
lret
mov
fwait
iret
mov
xchg
xor
std
jmp
test
or
sub
shlb
pop
push
jbe
or
test
adc
or
rcrl
ret
jno
cmp
mov
aam
push
ficomps
cmpsb
sbb
add
lahf
xor
std
mov
dec
or
mov
jbe
pop
xchg
decl
iret
rcrb
test
push
out
cmpsb
call
iret
es
jbe
icebp
adc
and
xchg
rorl
jp
lods
icebp
cmp
pop
jae
in
sub
dec
fidivrs
push
xchg
xchg
mov
mov
pop
addr16
xor
js
cmp
push
add
pop
jmp
lret
fbstp
lret
bndstx
dec
jg
and
mov
ja
jne
lods
sub
jae
ds
rcl
jno
cltd
xor
xchg
shlb
inc
daa
pop
cmp
jns
mov
cmp
rolb
popf
add
movsb
jmp
das
and
add
jb
mov
xchg
imul
xchg
adcb
cmpsl
mov
sub
dec
cmpsb
test
sbb
sbb
addr16
imul
cmpsb
test
add
adc
sti
push
repz
xor
pop
push
out
and
pop
lods
mov
fbstp
push
js
jo
ljmp
jno
mov
ret
pop
pushf
adc
daa
fdivs
inc
sbb
ds
or
sar
popl
mov
xchg
sbb
scas
dec
mov
stos
lods
out
adc
sbb
jp
cmp
cmpsl
cmc
mov
fcomip
out
push
lahf
sahf
mov
mov
xchg
scas
inc
mov
add
call
mov
fdivs
out
repz
ds
aas
adcl
test
bound
sbb
inc
fcmovnb
mov
bound
notb
ficompl
or
mov
fs
iret
adc
test
mov
das
jne
sub
mov
mov
sbb
arpl
lcall
inc
out
insb
mov
popl
movsl
or
dec
sbb
mov
sub
cmp
inc
rol
inc
arpl
push
jno
clc
in
xchg
fiadds
lahf
frstor
mov
test
inc
fcoml
stos
inc
jae
outsb
jno
inc
or
jne
fnstsw
cld
hlt
xchg
mov
sbb
add
or
push
cmp
imul
ds
cwtl
cmp
shll
sub
or
and
and
rolb
in
loope
mov
rcrb
test
add
push
cmp
je
ja
xchg
mov
pop
cmp
lds
ja
ljmp
add
jno
xchg
and
mov
out
jecxz
jp
jge
push
jnp
out
sti
inc
sub
lock
and
xor
xchg
adc
xor
mov
and
arpl
mov
aam
arpl
mov
pop
or
cmp
or
jecxz
mov
pop
sub
aaa
clc
xchg
add
dec
push
mov
jb
mov
xchg
xchg
mov
mov
je
cmpsb
pop
mov
popl
iret
inc
test
xchg
std
cmp
cmp
jp
add
mov
sbb
xor
inc
test
adc
dec
cmp
mov
mov
ret
jge
lds
insl
push
imulb
add
shl
inc
loopne
jne
dec
add
or
aam
jnp
dec
lock
cmp
repz
push
mov
sti
repz
cmp
pop
fwait
xor
les
cmp
loope
jp
mov
mov
sub
or
mov
pop
jne
sbb
sub
lahf
stos
js
cmpsb
jae,pt
out
xchg
jne
adc
leave
pusha
mov
sub
mov
leave
adc
test
fdivl
setbe
outsl
jne
xchg
daa
mov
lds
inc
repz
xchg
pop
cwtl
test
push
cmp
inc
fnsave
popa
repz
lock
xor
pusha
cmp
in
mov
dec
jae
pusha
sahf
lods
xchg
jo
rclb
outsl
daa
mov
mov
xor
imul
jecxz
fcom
jae
sub
shl
inc
cmpsb
fstps
lea
jnp
add
pop
mov
cmp
lock
inc
fisubrl
andl
adc
add
call
inc
fs
bound
cltd
hlt
mov
and
and
mov
into
xchg
inc
out
inc
out
fnstenv
iret
jae
push
rolb
xor
fbld
dec
mov
insb
js
lods
shlb
xor
xchg
jb
sbb
mov
dec
lret
rcr
cld
lcall
in
stos
fiadds
sub
jg
sub
mov
mov
pop
faddl
xor
or
js
imul
pop
les
mov
lea
mov
out
inc
fcomp
inc
dec
in
and
lods
in
jg
push
pop
clc
dec
sti
pop
imul
mov
sub
dec
sbb
xchg
mov
es
cld
jle
dec
jo
mov
stos
mov
mov
pop
out
addr16
fnsave
in
test
ds
fsubs
pop
repnz
push
popf
xor
sub
lcall
out
sub
test
stos
mov
or
out
fildll
shll
aad
inc
cwtl
inc
fimull
fimull
movsl
lret
add
push
cmpsb
int3
test
xchg
fs
add
xor
repz
cmp
gs
test
pop
mov
mov
xchg
inc
test
jae
in
test
push
jmp
cltd
xor
in
push
movsl
ficomps
gs
nop
inc
push
in
xor
sbb
jae
pop
repnz
xchg
mov
adc
push
fwait
push
mov
es
outsb
addr16
push
jecxz
sahf
cld
js
inc
jg
xchg
int3
in
data16
pop
adc
and
xorl
xor
dec
xor
adcl
ss
dec
mov
mov
hlt
pop
les
cmp
dec
and
cmp
inc
push
jo
sub
mov
or
out
ss
test
shrl
arpl
lahf
in
adc
pop
hlt
rorb
pop
hlt
jnp
loope
cmp
clc
pop
repz
es
out
push
dec
loope
mov
sub
sub
dec
sahf
push
lcall
fdivs
into
leave
or
or
cmp
xchg
sub
std
xor
out
pop
aam
dec
and
popf
xchg
ret
mov
inc
xlat
cmc
fs
in
sub
movsb
cmp
mov
and
jle
ret
std
xchg
mov
fsubrs
jno
fldenv
enter
xchg
sub
mulb
out
and
mov
add
xchg
mov
lds
cltd
cmpb
scas
movsb
pop
out
mov
push
mov
add
fldl
idiv
push
lods
sub
stos
aas
push
inc
xor
std
daa
push
je
aad
jmp
movsb
and
cmp
pusha
fcmovne
shll
cmp
in
loop
outsl
xor
ret
jp
xchg
mov
cmpsb
xchg
xor
sub
mov
push
rolb
scas
les
nop
adc
jge
cltd
xor
outsb
movsl
out
xlat
pop
pop
leave
mov
xor
pop
stos
mov
in
fs
jmp
inc
sub
pop
out
cmp
xor
cltd
pop
lods
mov
leave
cmp
push
dec
es
insb
call
push
in
lods
lods
mov
clc
push
je
insb
lea
mov
js
pop
and
push
icebp
push
dec
sub
push
aaa
int
cld
pop
lods
test
push
cmc
repnz
sub
fstl
xchg
arpl
pop
pop
push
mov
push
leave
fsubs
jo
stc
lods
dec
out
inc
push
sbb
sub
not
test
lret
pop
mov
in
loop
pop
lret
pop
mov
and
out
inc
mov
push
xor
cs
lea
pop
xchg
int
stos
inc
in
hlt
pop
xchg
enter
stos
and
pop
rol
push
add
arpl
xchg
daa
inc
pop
sti
xchg
nop
sahf
dec
movsb
inc
mov
test
push
outsb
adc
cltd
mov
lret
mov
push
and
out
data16
mov
jo
sbb
dec
pop
int
jp
xchg
sub
mov
stc
loop
fdivl
pusha
cmp
loopne
subl
les
es
add
inc
sbb
xor
sub
lods
cmp
enter
and
out
dec
pop
mov
ret
movsb
into
and
mov
cmpsb
jl
pusha
adc
pop
lret
or
stos
and
cmp
sub
fdiv
mov
mov
sub
and
test
push
jae
fdivrs
ja
push
shl
cmp
lods
addl
xor
xor
ret
xchg
inc
mov
lcall
sahf
or
out
push
pushf
nop
daa
into
sbb
dec
cwtl
scas
push
dec
imul
adc
lahf
sbb
or
rcrl
inc
cwtl
pop
xor
xchg
sub
js
or
aad
push
mov
out
aaa
cmp
cmp
test
ss
cmp
shlb
pop
pop
inc
imul
xor
xchg
mov
jp
mov
lock
mov
and
mov
xchg
call
test
in
lods
add
ljmp
push
xchg
scas
popa
push
in
mov
sub
sub
jp
sbb
mov
xchg
push
xor
adc
aaa
test
test
adc
cmpsl
mov
and
pop
cmpb
das
fwait
or
mov
mov
fidivl
rorb
loope
add
loope
mov
fcoms
jo
xor
shlb
adc
pop
pop
insb
jmp
out
xchg
adc
icebp
leave
testl
pop
mov
jnp
push
sbb
jb
cmp
js
cmp
fsubrs
faddl
mov
pusha
ss
fmul
insb
cs
inc
mov
je
movl
xchg
imul
mov
push
in
push
mov
xchg
mov
sub
cwtl
jnp
es
mov
hlt
daa
mov
xchg
out
int
sahf
cmp
loopne
movb
jns
xor
test
out
mov
jne
adc
nop
push
pop
cs
mov
cmp
push
in
pop
xchg
dec
inc
test
nop
repz
pop
jmp
push
enter
in
push
jae
test
outsl
bound
adc
dec
jns
fisubl
insb
push
jmp
fsubrs
push
jns
mov
test
or
cli
xchg
push
mov
rorl
stc
or
mov
sbb
sti
ds
data16
sbb
mov
sbb
shrb
dec
fmulp
into
inc
in
mov
inc
mov
or
dec
add
or
test
loopne
add
dec
lcall
iret
leave
xlat
jp
pop
push
scas
and
negb
cmpl
shll
cmp
arpl
leave
fwait
xchg
addr16
xchg
sub
fldcw
stos
jo
cmp
add
das
push
ljmp
testb
imul
mov
stos
add
sbbl
pop
add
cli
sub
out
dec
addl
mov
xlat
sbbl
and
sub
jl
test
xor
insl
lds
add
xor
pushf
xor
mov
or
xor
insb
outsl
sarl
les
test
sti
loop,pt
dec
add
lcall
dec
xchg
add
clc
mov
jb
fnstenv
inc
fldcw
inc
pusha
repnz
dec
in
lcall
pop
xor
push
add
outsl
cmpsl
dec
dec
shl
sub
sub
cmpsl
lods
imull
dec
dec
dec
gs
xor
data16
lods
outsl
or
in
jge
sub
push
lahf
rorb
repnz
dec
or
call
dec
mov
hlt
daa
ja
clc
aad
aad
lret
outsl
repz
fwait
push
or
and
lcall
and
push
xor
pop
sbb
movsl
js
inc
jbe
jb
adc
jl
ljmp
loop
fisubrs
inc
fdivrl
push
add
test
dec
popa
stos
mov
or
jl
in
movsl
fsubrs
or
sub
je
mov
shl
mov
inc
data16
xchg
out
cs
aam
popf
xlat
outsb
iret
cmp
mov
pop
lea
add
ret
mov
adc
dec
lds
push
insb
mov
push
jbe
sbb
and
cli
xchg
ss
mov
pushf
push
or
fmul
mov
pop
jmp
aaa
sub
test
mov
push
sub
ss
push
xchg
or
pop
addr16
nop
rcll
out
stos
sbb
pop
lods
and
hlt
cltd
sub
aam
sub
xor
push
xchg
sub
mov
mov
ja
ss
je
pop
rcrl
lods
mov
shll
xchg
insb
xchg
inc
jne
data16
jbe
rolb
icebp
or
sbbl
clc
xor
push
jnp
std
and
es
push
pusha
negl
or
jle
jp
and
in
movsl
js
sbb
cli
push
and
sub
mov
cmp
xor
loop
loopne
mov
mov
xor
test
xor
inc
fucomi
aaa
loopne
inc
cld
mov
dec
mov
pushf
orb
hlt
popa
in
pop
push
adcb
xlat
fwait
mov
pop
loopne,pt
in
inc
dec
bound
daa
inc
jmp
mov
mov
inc
ljmp
push
jne
rclb
sbbl
xchg
movsb
je
jle
pop
fs
jmp
mov
cmp
xor
pop
inc
xchg
sub
add
dec
out
hlt
jns
out
push
std
sbb
rol
arpl
xchg
movsb
in
ds
jl
dec
cmp
lahf
ljmp
push
fstp
add
das
sbbl
push
test
sub
or
ret
ret
repz
adc
nop
jbe
ret
xor
push
pop
and
dec
jmp
rclb
inc
jne
pop
mov
fisubs
mov
test
lret
lods
cmp
jecxz
out
xchg
movsb
shl
fistps
add
ret
mov
loop
dec
dec
push
add
lea
popf
cmp
cs
and
shl
cmpl
clc
fwait
cmp
js
add
xchg
xchg
xor
addr16
cld
rorb
loope
push
mov
jecxz
out
xor
xor
cmp
stos
or
push
scas
mov
mov
sarl
imul
data16
jo
test
lcall
adc
or
into
push
jmp
iret
pop
popa
add
outsb
std
jb
xchg
popf
repnz
and
aam
or
shr
outsl
mov
cltd
sbb
movsl
cmp
jae
adc
mov
pop
push
pop
and
daa
sub
into
hlt
stc
inc
xor
push
xor
ficomps
mov
cmp
cwtl
stos
loop
imul
repnz
out
test
stos
mov
sub
xchg
mov
iret
xor
sbb
aad
repz
mov
push
insb
inc
in
lds
loopne
cmp
xchg
or
adcl
xor
xchg
lea
add
inc
mov
mov
in
fs
ljmp
cmp
sub
mov
or
mov
cmp
push
shll
jns
pop
andl
clc
scas
imul
xchg
adc
or
push
mov
data16
stc
in
fcomip
scas
sti
mov
in
pop
and
jmp
inc
xchg
mov
mov
andl
inc
adc
nop
inc
push
out
test
push
mov
and
pop
jae
or
lret
sbb
shrl
cwtl
pop
xchg
mov
mov
fucomi
or
jle
ja
cmp
and
xchg
xchg
mov
fwait
and
xor
inc
push
dec
or
ss
push
out
sub
and
mov
push
shrl
sti
addr16
jb
or
mov
mov
adc
xor
dec
fildl
ljmp
xchg
mov
in
out
inc
jle
sub
push
in
lods
xchg
daa
sbb
insb
add
sub
add
lcall
mov
jnp
jno
pop
sti
dec
or
sbb
aad
das
addr16
scas
rclb
fdivr
shll
or
popf
xchg
pop
in
jle
dec
adc
mov
leave
push
dec
add
out
mov
push
jb
xchg
call
push
adc
push
jns
jne
lea
push
push
adc
jl
arpl
mov
sub
pop
lods
test
adc
scas
lret
dec
adc
fdivr
push
add
ja
sahf
clc
andb
loope
mov
push
inc
mov
lret
imul
shlb
ja
hlt
les
sbb
jmp
dec
xlat
aam
loop
jle
hlt
pop
xor
les
hlt
dec
hlt
shll
pop
mov
cmp
lea
dec
or
push
adcb
sbb
add
cmpsl
orb
xchg
outsb
dec
or
shrb
shl
mov
xchg
xlat
sub
and
or
std
cltd
xchg
out
or
clc
adc
imul
mov
cmc
sbb
mov
mov
nop
inc
inc
cwtl
mov
dec
sbb
push
jbe
xchg
sbb
test
loop
das
cmp
push
jb
pop
jnp
dec
test
dec
arpl
push
notl
adc
add
xor
adc
lcall
mov
push
push
insl
mov
clc
jl
or
sbb
xor
arpl
lret
sbb
lods
push
cmp
movsb
aam
cltd
add
and
push
add
repz
int
sub
sub
xchg
dec
in
in
pop
aaa
ljmp
and
and
mov
or
pop
daa
out
imul
jae
outsb
adcl
ljmp
mov
pushf
jno
and
inc
adc
aaa
jb
in
data16
test
aas
aad
xor
pop
pop
add
pop
push
scas
or
pop
call
es
jb
ja
lcall
and
pushf
xchg
test
es
push
jbe
push
test
adc
and
xchg
cmpsl
dec
andl
out
dec
fs
inc
test
lret
jno
jns
popa
xchg
in
les
xchg
adc
es
mov
rclb
mov
mov
arpl
dec
inc
in
fcoml
test
or
pop
lods
test
setns
ljmp
popa
mov
aaa
ja
sub
rcrl
mov
xor
ret
xchg
stos
inc
pop
lock
cltd
movsb
push
out
aad
push
sbb
ret
es
pop
inc
fnstenv
mov
cli
or
xor
jp
dec
xor
in
jmp
push
mov
mov
or
ja
lods
mov
int3
jmp
ljmp
fs
sbb
jns
fwait
cmpsl
mov
lret
xchg
imul
mov
add
in
insb
sbb
add
jb
cmp
jmp
das
mov
cmp
scas
rol
pop
fsts
pop
icebp
xchg
sub
cmp
add
push
daa
sbb
cmpsl
sarb
iret
inc
imul
das
mov
xlat
ffreep
movsb
push
mov
jbe
jecxz
fsub
fisubl
pop
subl
lods
test
rol
xor
sub
mov
xchg
and
jmp
push
add
pop
jne
enter
gs
dec
int3
sbb
mov
leave
adc
mov
xchg
pop
fwait
stc
lea
and
int3
ret
inc
stos
es
imul
jmp
call
imul
jmp
cmp
cmp
xor
xor
xchg
dec
mov
int3
jecxz
mov
adc
push
notb
jae
sahf
inc
std
add
repnz
inc
push
push
dec
push
lock
and
inc
mov
mov
mov
mov
or
mov
jecxz
xchg
and
jge
mov
mov
fwait
mov
inc
daa
clc
out
jne
cmc
xlat
fldt
mov
out
aaa
push
mov
fnstcw
mov
cs
lea
sarl
xchg
mov
xchg
xchg
out
pop
stos
xor
lods
cmp
dec
dec
mov
push
mov
pop
dec
sub
fsincos
or
xchg
jae
les
mov
das
adc
add
jns
mov
mov
xchg
rorl
bound
testl
cmp
adc
dec
outsb
sub
xchg
sbb
xchg
loop
pop
push
ret
or
jnp
fidivrs
nop
pop
adc
pop
decl
inc
xchg
xchg
out
outsb
shr
in
pop
ds
test
cmp
pop
mov
xchg
mov
fnstenv
push
inc
nop
in
jae
rcrl
add
inc
sbb
inc
shll
testb
mov
add
icebp
jnp
daa
jmp
or
lds
cs
outsb
cmp
jne
gs
movsb
xor
sbbb
dec
movsb
mov
into
pop
popa
mov
out
cmp
loop
jge
or
data16
xchg
pop
in
inc
scas
es
fstps
testb
pop
fldenv
cmpsl
xchg
push
xchg
lods
jg
add
pop
pop
js
repnz
xchg
and
adc
andl
pop
pop
push
or
jge
lock
es
lea
and
test
inc
adc
in
loopne
xchg
add
js
xor
and
testl
leave
cmp
sti
or
stc
mov
cwtl
notl
add
addb
nop
cmc
mov
add
cmp
mov
sub
pop
push
dec
pop
push
int3
xchg
lds
pop
mov
lea
push
fnsave
fiaddl
loopne
add
shlb
cmp
or
mov
xlat
mov
fimuls
stc
ds
gs
pop
dec
lea
adc
push
or
push
mov
pop
pop
cmpsb
fsubr
iret
mov
outsl
cmp
inc
fiadds
sbb
icebp
stc
shrl
test
insl
mov
sub
rclb
push
cmp
insb
add
outsb
inc
fnsetpm(287
out
cmp
loop
test
ret
orb
scas
enter
mov
fwait
cmpsl
xchg
hlt
mov
mov
jns
jb
dec
or
daa
adcl
jmp
push
loope
cmpsb
bound
data16
cs
mov
cmp
lods
jno
sub
repz
and
xor
inc
std
int
cltd
sbb
test
cmovp
mov
xor
jecxz
mov
jmp
inc
pop
mov
inc
lcall
inc
int3
sub
inc
pause
adc
adc
sub
imul
pop
cs
xchg
xor
aam
stc
cwtl
test
gs
cmp
outsb
push
xlat
stc
out
in
mov
cmp
pop
jmp
pop
inc
repz
cmc
ja
call
mov
jmp
sbb
cmp
xchg
in
cmp
insl
or
inc
lret
or
sbb
ljmp
pop
jne
xchg
testl
or
mov
sbb
cmp
push
and
aam
cs
sbb
cmp
and
dec
fldt
jmp
jl
popf
lock
popf
ficoms
and
fisubrl
test
mov
lea
mov
jg
push
add
pop
adc
mov
idivb
xchg
fistl
stos
hlt
push
jmp
or
call
sub
inc
pushw
mov
int3
sarb
pop
push
and
xchg
mov
je
xor
mov
inc
fwait
sbb
repnz
pop
push
mov
mov
movsl
sub
imul
and
add
scas
jp
nop
insb
fisubrs
xor
and
push
cmp
xlat
idivl
stc
and
pop
test
sub
cmp
loop
int3
inc
stc
jmp
movsb
jo
sbb
pop
mov
jae
sbbb
jmp
and
aaa
mov
in
nop
push
arpl
pop
adc
test
cmp
aad
cmp
mov
lds
inc
fadds
dec
fwait
popf
addr16
jae
aaa
sub
stos
ret
mov
in
mov
pusha
imul
dec
je
dec
cmpsb
cmpsl
daa
add
adc
jnp
rolb
dec
push
out
pop
jo
mov
push
add
fwait
xor
lahf
inc
push
shll
out
xchg
dec
xor
testl
lahf
jnp
cmp
fimull
pop
mov
push
mov
sbb
mov
fwait
lret
fs
xor
lcall
stc
and
mov
mov
nop
cmp
popa
outsb
ja
jb
jae
dec
jmp
add
push
popf
in
or
and
repz
cmpsl
mov
push
lods
or
and
push
mov
xchg
scas
and
leave
and
in
xor
movsb
cmpsl
dec
stos
mov
aad
mov
loopne
cmp
xor
cmpsb
mov
lret
pop
jbe
xchg
cs
adc
or
push
inc
cs
pusha
push
xchg
pushl
add
mov
outsl
mov
pop
leave
add
xchg
inc
mov
pop
mov
ror
or
xor
aam
cmp
pushf
adc
sub
jp
push
xor
mov
dec
imul
mov
pop
add
fsubs
mov
test
push
out
clc
xchg
bound
mov
xor
xchg
roll
sub
ror
xor
xor
or
jle
jbe
test
mov
adc
ret
or
mov
adc
or
add
ss
fs
sbbl
xchg
pop
fldl
sbb
icebp
aam
sbbl
inc
adc
test
dec
lret
push
insl
mov
sahf
jne
repnz
ret
jl
jmp
sti
insb
add
mov
adc
in
inc
in
pop
in
rorb
scas
aad
mov
xchg
mov
push
cmpsb
lock
push
pop
mov
insb
idiv
pop
sahf
or
pop
sti
orb
pusha
cmp
mov
in
push
lahf
das
adc
popa
jns
pop
je
xor
jl
bound
nop
popf
sbb
mov
aam
filds
fwait
or
lahf
movsb
jo
lret
repz
jg
sarb
xor
adc
fwait
xlat
out
cmp
jae
daa
jno
dec
rorb
cmp
mov
mov
pop
jge
mov
nop
or
lahf
xchg
lret
jb
jb
stos
push
add
inc
popa
mov
imul
mov
leave
dec
xlat
mov
mov
mov
xchg
and
add
push
cld
dec
pop
js
inc
mov
fsubrp
or
mov
int3
mov
ret
aas
dec
inc
and
xchg
sbb
sbb
in
test
aaa
adc
push
or
jecxz
repz
imull
in
into
jne
nop
add
mov
sbb
dec
loopne
mov
cmpsb
leave
aas
mov
ja
ja
movsb
test
js
mov
push
or
cmpb
xchg
adc
sti
xchg
aaa
cmpsl
call
fidivl
mov
inc
aas
fimull
and
push
xorl
add
mov
mov
sti
mov
pop
push
sub
mov
cld
sbb
rorb
adc
dec
in
and
push
es
in
push
rolb
inc
or
mov
jbe
jmp
adc
pop
sbb
add
xor
aam
push
lods
xorb
cmc
call
negl
push
out
es
push
subl
mov
push
xor
xor
xchg
jne
xor
cld
scas
mov
pusha
rol
imul
mov
or
inc
push
stos
clc
iret
lea
add
push
sub
jge
dec
mov
lahf
ss
test
and
pusha
jnp
lret
mov
mov
lods
rorl
push
pop
xlat
mov
shrb
sti
vsubpd
lock
cmpsb
adc
fisubl
xor
mov
xor
and
dec
lods
pop
push
mov
push
aad
inc
or
ljmp
test
sub
adc
cs
cmp
imull
xchg
mov
ja
inc
data16
ljmp
lea
data16
jb
es
cmp
push
dec
mov
dec
push
aad
sahf
xchg
repnz
and
mov
xchg
or
gs
test
scas
mov
pop
ljmp
push
inc
stc
adc
int
mov
sbb
lea
bound
xchg
ds
pushf
aaa
inc
dec
popf
stc
pop
fwait
stos
inc
add
mov
imul
out
sahf
sub
popf
andb
and
daa
sti
pop
push
fbstp
adc
sub
sub
or
cmpsl
call
lret
push
inc
arpl
cld
push
dec
and
pop
mov
aam
push
jne
and
xchg
pop
icebp
popa
and
push
ror
and
mov
inc
inc
icebp
mov
ljmp
addl
push
xlat
pop
jp
pusha
cmp
imul
add
mov
jno
shrl
outsb
pop
pop
inc
enter
xchg
in
xchg
mov
xchg
adc
subb
pop
scas
jmp
out
call
fimull
inc
je
cld
mov
rcll
in
mov
ficoms
mov
int
or
jns
adc
mov
lahf
call
sub
pop
jmp
mov
or
lods
mov
aas
xchg
jge
sub
test
hlt
mov
int
dec
mov
aas
outsl
adc
inc
dec
loopne
add
aaa
hlt
adc
lds
inc
fisubrl
mov
pop
adc
jae
sbb
xchg
mov
jne
les
and
mov
lods
pop
cli
adc
ucomiss
jmp
inc
inc
int
js
faddl
or
lods
xchg
push
subb
dec
and
lea
insb
frstor
shlb
mov
inc
or
scas
push
int
lods
lcall
fsubrs
cltd
arpl
cld
push
cs
outsb
pusha
daa
lret
cmp
cmpsb
mov
andl
push
sub
xchg
fsubrl
js
cld
mov
cmp
dec
insb
mov
ret
stos
out
cmpsb
nop
ret
mov
leave
jecxz
push
jne
inc
xchg
ficoml
int3
sub
jae
in
jno
imul
sub
dec
lods
insl
sub
imul
stos
push
cmp
push
mov
mov
aas
cmp
hlt
pop
cmp
cmc
pop
cmp
push
pusha
sub
es
iret
in
pop
ftst
lods
jmp
fbld
orl
mov
movsl
out
pop
inc
add
and
dec
add
push
loop
sbbb
mov
cwtl
add
xor
bound
mov
mov
sub
pop
mov
fwait
clc
daa
mov
cwtl
cli
and
sub
shl
jb
sahf
movsb
adc
call
sbb
enter
lds
cs
daa
lcall
fisubs
cmp
adc
out
cmp
je
push
mov
insl
ja
push
rcrl
fadd
inc
or
add
adc
xor
loope
ret
ret
leave
pusha
xor
inc
das
ret
je
int3
arpl
adc
cmpsb
mov
addr16
popa
lcall
cld
iret
xor
add
std
cmp
lods
rcl
fimuls
mov
push
ss
sub
inc
mov
jl
mov
fstl
pop
pop
or
in
ret
dec
adc
add
cmp
adc
lret
cltd
mov
std
pop
lock
add
lods
test
pop
rolb
out
xchg
xchg
or
add
adc
xchg
outsb
jmp
mov
mov
jae
fildll
shrl
pusha
add
cmpsl
pop
aas
and
add
cs
xchg
aam
dec
in
jp
fwait
jo
psrad
mov
bound
enter
and
push
mov
bound
es
push
out
xchg
mov
insb
cmp
fnstsw
enter
jbe
mov
push
pop
mov
loopne
rcl
fiadds
dec
leave
test
pop
pop
cmpsb
cmp
rorb
sti
insb
push
loope
cmc
jae
add
adc
xlat
jmp
aad
mov
cltd
dec
repz
aam
adc
xchg
adc
jle
cmp
sbb
sbb
mov
cld
xchg
lock
imul
int
xor
in
ret
jg
loope
lock
add
out
sub
inc
lods
insl
add
dec
movsb
fistl
mov
aaa
sbbl
popf
mov
add
mov
cmc
cltd
dec
stos
xchg
mov
cmp
fadd
jbe
jnp
mov
or
popl
jne
adc
inc
mov
xor
xor
inc
fisubs
sbb
xor
pop
lcall
lcall
cmpsb
adc
sub
jle
sub
pop
sarl
jmp
in
out
sub
mov
and
in
pop
xor
insb
stos
ret
jle
add
xor
or
stos
add
sub
and
push
test
lret
lods
mov
daa
pusha
es
je
jb
and
push
and
xchg
jp
xchg
sub
jmp
xchg
test
insb
es
imul
jp
fwait
mov
mov
sbbb
pop
pop
dec
xchg
sub
cmp
icebp
add
jmp
sub
cmp
pop
into
leave
add
push
push
outsl
repnz
imul
lret
jl
jne
in
arpl
add
inc
dec
mov
and
cmc
loope
test
jae
sbb
mov
jae
imul
push
insb
xchg
clc
mov
lods
cs
adcb
mov
or
iret
xor
inc
in
idivl
ret
pop
xchg
jp
xchg
in
pop
xor
outsb
and
fimuls
push
adc
cmp
insb
negb
in
cmp
cmp
fcmovnu
inc
mov
shll
inc
cmp
cmp
lds
jne
movl
rorl
cli
jno
mov
shrl
inc
les
sahf
mov
xchg
cs
push
xchg
popf
cmc
cld
data16
fidivrs
shrl
loop
test
imul
fcmovb
popa
mov
ds
sti
nop
adc
sbb
fdivrl
xlat
arpl
mov
cmp
cmp
pop
xchg
stos
jge
and
and
sbb
rorl
push
dec
jbe
mov
das
dec
aas
cmp
test
mov
insb
js
outsb
scas
stc
nop
loopne
pop
jg
or
xchg
jns
pop
in
ret
repz
pop
imul
outsl
push
shufps
ret
fbld
ljmp
add
xchg
add
in
repnz
inc
pop
notb
sbb
imul
push
fcmovb
daa
mov
testl
xor
inc
mov
jno
dec
ljmp
in
cmp
and
jecxz
dec
pusha
or
scas
xchg
jp
sub
xor
jge
jle
sbb
ss
add
xchg
int3
jmp
ret
shr
jmp
adc
lahf
aas
push
rcrb
mov
push
push
xor
fidivrs
xor
adc
xor
sti
or
pop
iret
xlat
or
arpl
bound
cld
xlat
hlt
int
or
sub
mov
push
or
adc
scas
aas
cmpsb
mov
inc
aas
repnz
or
cmp
and
fstl
mov
and
adc
inc
sbb
push
push
jb
push
jb
push
imul
das
addr16
add
stc
and
cmpsb
ds
fistps
jo
insl
mov
aas
cmp
adc
jbe
fidivrs
mov
pop
nop
pusha
addr16
in
shl
mov
ja
ss
in
xor
jmp
out
lock
das
cmp
jmp
inc
xor
jmp
idivl
pop
pop
cs
mov
test
dec
in
bound
subl
add
addr16
mov
enter
xchg
dec
or
cmpsl
fstpt
jmp
mov
test
add
mov
push
movsb
stos
mov
sbb
mov
insl
arpl
lret
dec
test
xchg
xor
jno
jmp
mov
pop
xor
ss
mov
fimuls
je
adc
push
js
mov
cmpsl
add
cli
mov
fistl
sub
jns
nop
stos
je
sti
dec
into
and
jl
stos
adc
das
xchg
add
icebp
sub
popf
pop
adc
popf
jo
and
fisttpl
arpl
or
adc
pop
sbb
mov
or
rclb
cltd
push
imul
les
arpl
jns
push
fistps
loope
in
jnp
lea
xchg
xchg
push
test
xchg
pop
xor
xchg
test
mov
fwait
popf
pusha
dec
xchg
shlb
lods
loop
pop
call
cld
cli
jne
insl
xchg
dec
imul
add
pop
xchg
add
xlat
lcall
inc
sbbl
aaa
cmp
mov
loop
cmc
push
push
jl
push
jns
and
push
push
mov
jae
push
rcpps
rorb
in
and
imul
inc
aas
push
mov
xchg
loopne
out
pop
adc
and
mov
jge
dec
push
sbb
test
mov
aas
add
jne
push
lds
popw
scas
push
in
cmp
mov
dec
out
ret
in
ja
push
gs
imul
scas
add
sub
daa
imul
imull
cld
data16
sti
mov
or
fidivs
call
js
inc
test
jp
mov
outsl
xchg
scas
dec
fidivrl
iret
dec
inc
rcrl
dec
movsl
ds
insl
adc
sub
fdiv
outsl
fiadds
mov
idivb
ret
inc
popf
cmp
loope
push
ret
fistl
bound
in
dec
add
push
adc
cltd
cmp
fldenv
fwait
add
adc
cmpsb
pop
mov
jbe
push
push
out
xchg
adc
out
mov
aam
pop
pop
ret
sbb
cli
push
fstpl
push
ss
out
aaa
lods
ja
cs
dec
jbe
fildl
fstps
cwtl
push
push
sub
or
out
xchg
push
inc
pop
add
jg
ja
pop
mov
int3
mov
stos
dec
cld
rclb
ljmp
aaa
sub
popf
push
jmp
adc
jo
cmc
or
push
push
dec
data16
push
inc
imul
xor
leave
push
sub
das
loope
shr
icebp
cmp
cli
or
iret
cmp
push
cmp
cltd
mov
jl
inc
fdivl
xor
dec
popf
mov
mov
aam
mov
sub
mov
lret
mov
adc
ds
fcomip
sub
mov
push
jmp
loop
cmp
imul
popf
mov
nop
cmp
popa
into
out
jl
aam
xchg
cmp
in
movsb
jecxz
lret
cld
mov
ljmp
xorl
fcmovnb
outsb
test
out
fwait
xor
test
test
xchg
out
xchg
xchg
leave
outsl
push
or
int
movsl
cmp
ror
test
jo
jg
pop
cmp
test
pop
mov
add
pop
or
cmpsl
inc
sahf
stc
sbb
aaa
hlt
add
loopne
cld
pop
iret
std
xchg
add
fidivrs
test
mov
cmpl
mov
mov
mov
mov
inc
sub
add
sbb
cmp
fnstcw
fcmove
mov
jmp
std
pop
notb
mov
mov
iret
fmull
fstpl
mov
jne
jns
loop
jge
xchg
mov
sbb
insb
jle
out
aam
mov
hlt
or
inc
into
mov
popa
cld
in
movsb
dec
fiaddl
jo
andb
cld
inc
cmovs
jb
jns
cmp
pop
jle
pop
ljmp
js
cli
push
andb
mov
dec
in
dec
scas
add
sbb
mov
fsubl
mov
add
dec
scas
or
or
xor
jmp
mov
cmp
mov
addr16
dec
sbb
pop
mov
cmp
pop
or
cwtl
mov
lret
movsb
or
fsin
fstpt
into
mov
out
idivb
pop
adc
dec
adc
ss
rcrb
xchg
loopne
cs
sbb
clc
pop
adc
enter
fisubrs
pop
or
sub
ret
sti
pusha
fsub
jnp
mov
jns
inc
push
mov
add
push
or
mov
or
insb
mov
fsubrl
fisubl
fwait
mov
out
jle
dec
adc
cwtl
cmp
xchg
stc
in
int3
lcall
xchg
adc
out
movsb
xchg
outsb
mov
shrb
xor
add
pop
mov
bound
adc
cltd
push
out
adc
cmp
pushf
pushf
jno
pusha
mov
cmp
test
xor
ret
fst
mov
jecxz
fwait
inc
out
add
push
std
mov
push
rorl
fiadds
arpl
leave
mov
das
push
sbbb
cltd
sbb
fdivrl
lahf
xchg
in
mov
jg
sub
stos
es
add
lds
or
jl
orl
cltd
add
push
daa
mov
pop
dec
and
push
ja
jb
mov
aaa
jl
sbb
nop
xor
inc
mov
shrl
dec
add
test
ret
jmp
je
mov
sti
and
sub
sbb
je
adc
push
mov
push
ds
push
xchg
cmp
inc
inc
sub
pop
xchg
cmp
inc
or
cmc
xlat
mov
or
inc
push
loopne
jg
pop
or
mov
cmc
adc
cmc
test
or
inc
fwait
idivb
outsb
fidivrl
imul
jp
mov
aaa
and
iret
cmp
and
pop
repz
jne
out
xchg
mov
das
mov
cmc
mov
repz
out
es
lret
sub
xor
push
mov
sbb
movsb
movsb
push
sti
sahf
xor
js
cmpsb
stos
jns
cmc
or
dec
out
fldl
or
sub
adc
lea
jo
push
jo
pop
mov
fsubr
dec
imul
movsb
icebp
xor
xchg
sub
shrl
sub
jno
xor
mov
cltd
inc
loop
stos
mov
lods
or
das
movsl
jne
mov
xchg
jge
sarl
shll
xchg
fldcw
mov
xor
xor
gs
in
xchg
int3
cmp
push
push
in
push
bound
clc
cmp
bound
loope
mov
call
and
int3
push
jge
sahf
inc
mov
repz
outsl
out
sbb
dec
add
or
sbb
jnp
repnz
push
inc
add
std
xchg
int
test
cwtl
xor
mov
in
in
push
cs
jne
mov
iret
mov
faddl
ror
call
push
outsl
dec
jo
sub
pushf
sbb
popf
and
lock
sbb
xor
add
mov
arpl
jp
jno
scas
push
mov
mov
test
icebp
fcmovbe
mov
fsubr
sbb
imul
mov
xchg
and
loop
int3
adc
pop
or
addr16
out
and
inc
iret
cld
arpl
aad
mov
dec
sub
inc
cmpsb
addr16
addl
add
imul
int
mov
mov
xchg
jl
mov
push
leave
loope
xor
mov
jge
add
push
dec
sub
je
cmpsb
and
xlat
sbb
and
mov
stos
inc
pop
mov
mov
dec
outsl
push
in
inc
inc
xor
mov
enter
ss
int3
int
std
arpl
pusha
negl
push
inc
dec
sub
das
fsubr
aas
lods
pop
ret
loop
xor
movsl
xchg
lods
fldt
cs
sti
cmpsb
into
mov
adc
in
scas
fidivrs
adc
cmc
cmp
add
sub
add
test
cltd
lock
add
cmpsb
mov
fs
xchg
dec
insb
or
pop
in
les
cltd
out
dec
cmp
test
cmpsb
mov
cwtl
ljmp
std
aad
jl
sub
pop
or
dec
mov
jns
mov
jae
in
add
test
mov
add
bound
sub
popa
jl
arpl
popa
cmp
xchg
or
xor
xchg
jecxz
sub
fidivl
fisttpll
dec
cmc
clc
jae
jecxz
adc
jp
adc
pop
jbe
xor
outsl
or
jb
push
loopne
xlat
xchg
jno
mov
pop
aas
xchg
mov
out
mov
jbe
xchg
loop
lea
inc
mov
lcall
inc
pop
imul
test
jo
repnz
xchg
ret
test
mov
jns
sbb
mov
sahf
aam
dec
jbe
cmp
ja
sarb
jbe
insb
imul
ss
stos
cwtl
pushf
outsb
jl
jmp
mov
shlb
sbb
aaa
xor
arpl
xchg
sub
movb
icebp
das
lret
notl
mov
pop
cli
mov
pop
es
cmp
xchg
jnp
enter
and
in
inc
fiadds
lret
mov
cwtl
sahf
rolb
es
lahf
shrb
mov
push
outsl
jne
mov
inc
jb
enter
sbb
xchg
sbb
jp
xlat
lcall
daa
jle
xor
cltd
dec
out
repz
fdivrp
scas
mov
pop
and
xchg
imulb
pop
xor
xchg
pop
mov
cwtl
pop
lock
fstpt
jo
in
mov
ret
icebp
sub
cmp
ss
and
lret
dec
mov
mov
xor
inc
nop
cmp
mov
mov
in
or
out
jle
adc
adc
mov
pop
addl
jp
ja
xchg
fists
mov
jae
push
xor
ja
fwait
jno
push
xchg
loopne
xor
fstps
inc
and
jp
stc
scas
sbb
cmp
inc
sbb
jne
sub
mov
call
cld
je
das
cmp
add
and
scas
gs
jbe
aaa
dec
aas
xchg
loope
lds
aaa
fidivrl
jo
into
sub
add
out
ja
test
movsl
cmp
test
mov
test
loope
push
cmp
ret
in
push
or
mov
cmp
xchg
lahf
pop
xchg
sbb
hlt
mov
ja
jne
xchg
sub
mov
xor
mov
ficoml
or
fstpl
int
sbb
out
adc
fnstsw
mov
pop
pop
fcomps
cli
pop
cmpsb
addl
inc
sub
notb
rcr
add
arpl
jecxz
jb
sub
xchg
xor
nop
or
pop
repnz
hlt
pop
jmp
adc
loop
loopne
int
ret
pop
aaa
rcrb
jnp
into
push
sbb
and
mov
cld
cmpsl
ds
roll
and
aas
fs
jo
sahf
mov
shll
out
ja
mov
adc
dec
jp
aam
fwait
xor
movsl
mov
fwait
dec
adc
sub
stos
in
xlat
add
sbb
add
xor
cmpsb
jmp
push
jno
mov
adc
outsb
hlt
lds
push
repnz
call
cmc
sarb
push
shld
pop
ret
and
ret
jnp
or
sahf
sub
icebp
dec
cltd
xchg
stc
sbb
mov
push
xchg
xchg
push
lock
decb
movsl
das
and
push
xor
lret
iret
jmp
xchg
xchg
xorb
jl
mov
in
loope
and
inc
xchg
or
out
cmpsb
pop
lds
push
popl
es
cmp
pusha
push
out
mov
sub
lret
cmpsb
mov
popa
pop
icebp
xchg
mov
add
repnz
mov
xchg
mov
or
fsubrp
sub
jo
inc
enter
test
nop
ficompl
aas
aad
mov
popa
mov
movsl
xchg
sub
ret
mov
dec
sub
les
xor
pop
mov
inc
xchg
test
inc
cmpsl
jbe,pt
test
fs
nop
outsl
lods
or
nop
sbb
dec
xchg
pop
xchg
out
lea
lcall
lcall
mov
cmpsb
jns
pop
repz
adc
or
mov
mov
jae
or
xchg
push
pop
push
std
fisubrl
add
mov
cmp
out
dec
popa
sbb
pop
pop
inc
in
mov
dec
dec
in
ret
jb
insb
mov
out
xchg
popf
pop
lock
aam
add
pop
loopne
inc
jne
fldenv
inc
cmp
imul
aas
fs
loopne
clc
adc
jp
push
mov
mov
mov
leave
mulb
outsb
xchg
movsl
jmp
add
xor
test
inc
mov
cmpsb
fwait
ss
dec
outsl
jnp
mov
fcmovnbe
lcall
fmul
inc
or
xchg
stos
outsl
or
popf
xor
xor
dec
nop
adc
enter
aad
adc
repz
xor
sbb
pop
and
inc
pop
cwtl
jne
int
lock
loop
test
outsl
sub
shrb
cmp
mov
pop
and
xchg
xchg
sub
jae
decl
sub
adc
ss
push
sub
mov
aaa
dec
push
sbb
fimuls
inc
dec
sti
shrl
xchg
bound
out
jl
sub
mov
mov
jp
sbb
push
push
outsl
cmpsb
fucomi
mov
ljmp
add
mov
testl
orl
cmpsl
xor
enter
lds
sub
pop
pop
daa
addr16
push
testl
xor
out
popl
jbe
jecxz
pop
and
cmp
imul
mov
mov
out
insb
lods
pop
repz
push
adc
push
cmpsb
jns
fwait
lock
sub
cmpsl
iret
jmp
push
jmp
cmp
mov
adc
jns
call
cmp
fisubs
mov
jmp
inc
arpl
mov
insb
imul
repz
stc
jne
sahf
test
xchg
sub
cmp
shl
jge
jl
sbb
add
std
notb
sub
outsb
add
notl
insb
movsb
mov
or
lahf
jbe
int3
scas
pop
jl
std
inc
xlat
popf
out
inc
and
push
popa
fsubrp
out
adc
dec
or
jg
insl
movsl
jl
inc
add
sub
xchg
stc
call
or
mov
mov
and
cmp
pop
inc
dec
add
inc
sbb
dec
popa
insb
cmp
adc
daa
add
add
adc
sarl
ficomps
les
push
or
mov
push
sub
insb
mov
pop
pop
jle
scas
imul
fscale
xchg
jge
fbstp
ja
fdivs
jmp
mov
jbe
mov
icebp
push
push
or
push
lods
imull
repz
pop
lods
rorb
push
jnp
icebp
dec
shrb
iret
fldt
iret
and
lds
int
das
decb
mov
push
scas
dec
in
xchg
lret
flds
lret
sbb
mov
mov
inc
inc
inc
lods
inc
bound
dec
pop
sbb
loop
outsb
mov
in
sub
adc
movsb
repnz
cmc
sbb
sbb
ja
jg
xlat
repz
pop
mov
mov
mov
in
lcall
movsl
out
lds
push
adc
pop
popa
lret
ds
int
cmpsl
dec
mov
pop
cmp
jecxz
jg
ja
fdivl
push
ljmp
scas
iret
mov
cmp
xchg
loopne
in
mov
shl
cmp
roll
pop
fucomip
aad
mov
push
or
jns
and
push
push
mov
pusha
mov
pop
xchg
add
repz
xchg
lahf
cmc
mov
dec
fisubrl
push
lret
addb
sbb
jne
xchg
pop
clc
call
xlat
cli
xchg
cmc
ret
and
push
inc
int3
mov
icebp
lcall
mov
loope
fnstcw
adc
rep
inc
aaa
sub
dec
loope
cmp
sbb
call
test
call
mov
mov
jmp
andl
jmp
pop
cld
jg
dec
jg
lcall
sbb
jns
stos
cli
pusha
ficomps
sbb
mov
add
mov
add
xor
dec
mov
lods
lahf
fstpl
imul
dec
shll
inc
xchg
mov
sub
cmc
sub
shrl
popa
ret
ret
pop
pop
int
pop
and
mov
ds
lock
xor
push
mov
dec
addl
lret
xor
aas
rol
fbstp
repnz
and
shr
mov
lods
sub
xchg
jns
xor
cmp
pop
das
lahf
das
mov
sbb
imul
sub
add
ja
bound
push
jmp
movsl
jecxz
inc
push
out
jbe
popa
adc
inc
ljmp
mov
outsb
jne
das
icebp
in
cmc
pop
mov
ljmp
lea
fsubrl
lret
or
lret
fwait
test
mov
adc
xlat
daa
lret
mov
rcrl
cmpl
icebp
mov
jecxz
add
je
push
push
inc
jno
mov
jae
arpl
cs
hlt
scas
xor
lahf
mov
les
cmpl
push
pushf
mov
bound
pop
push
ljmp
cmc
aad
shrb
add
pushf
push
testb
js
mov
movsb
adc
cwtl
inc
addl
stc
in
sub
lret
jecxz
bound
loop
and
pop
test
ja
outsb
sub
rcl
mov
cmp
jno
fdivrl
or
push
jo
push
pop
fs
fsts
or
add
movsl
mov
fs
pop
push
pop
pop
ficompl
lret
out
pop
dec
into
cwtl
repnz
divl
call
dec
test
inc
jb
insb
xor
std
test
ja
add
jecxz
add
loop
sub
jg
xchg
ret
jnp
jne
pop
aaa
jo
and
xchg
mov
jbe
jmp
xchg
dec
loop
sbb
scas
xchg
ret
imul
mov
push
or
adc
mov
enter
mov
popa
inc
pop
xchg
or
mov
sbb
dec
xchg
cmp
lds
cmpb
leave
sbb
pop
pop
xchg
mov
pop
je
mov
ljmp
nop
dec
in
fdivl
mov
and
fdivs
xor
jno
mov
dec
loope
leave
loope
mov
jp
pop
lock
mov
dec
and
fucomip
pop
add
xor
jecxz
cltd
subl
lods
js
xor
jne
shrb
xchg
sub
movsl
int3
popa
clc
std
lds
adc
cld
xchg
cmpsb
or
cmp
jmp
insl
jns
loope
iret
mov
nop
gs
pop
pushf
out
pushf
cmp
shl
jne
idivb
lret
popa
lea
mov
fwait
ret
and
mov
inc
push
push
sahf
lods
sahf
mov
add
mov
add
push
fldcw
inc
xor
xor
mov
push
add
inc
fdivrs
pop
fwait
imul
idivb
fstpt
mov
adc
sbb
sub
testl
xchg
callw
negb
test
xchg
icebp
cld
xchg
adc
mov
cltd
loopne
fcmovnbe
stos
lock
loope
mov
sbb
lods
xchg
pop
aaa
jb
jmp
jns
xor
xchg
push
mov
fnstsw
push
sub
mov
loopne
mov
fwait
dec
insl
fsubr
sahf
sub
mov
nop
loop
pop
aam
movsl
enter
cli
ret
pop
sub
in
sahf
pop
mov
add
cmp
jle
sahf
mov
rorb
inc
mov
fcompl
sbb
sarl
scas
cmc
pop
lock
leavew
test
ja
ss
jmp
pop
in
pop
int
ret
pop
insl
in
bound
sti
rorb
leave
xchg
pop
add
int3
adc
cmp
fwait
push
mov
push
lods
inc
jp
aaa
into
push
fwait
pop
pop
ja
cmp
cmpsl
rcrl
aad
fwait
mov
hlt
push
cmp
jbe
xor
sbb
test
ret
pop
aas
dec
inc
lcall
inc
arpl
push
shlb
out
lea
mov
mov
movsl
add
je
and
dec
push
int3
jmp
xor
leave
xor
mov
push
inc
mov
test
fwait
mov
movsl
inc
data16
cli
ds
sarl
adc
das
lcall
mov
mov
lods
testb
stos
popa
inc
push
mov
xor
js
push
push
xchg
adc
adc
mov
mov
adc
xor
popa
add
jno
xchg
sbb
inc
fidivl
mov
cmpsl
in
loopne
and
pop
cld
insl
iret
mov
push
rcl
out
dec
pop
mov
mov
insb
cmp
add
shlb
and
and
dec
inc
pusha
jg
arpl
sbb
push
dec
orl
xor
xchg
jp
cli
or
xor
inc
cmpsl
aas
or
test
dec
repnz
lahf
dec
rol
add
sub
in
icebp
adc
mov
psrad
xlat
icebp
mov
movsb
lcall
movsl
pop
dec
loope
lds
test
sub
sub
jmp
push
icebp
sti
mov
ret
mov
mov
stos
loopne
faddl
xchg
pop
mov
lcall
push
hlt
cmpsb
xchg
mov
adc
mov
js
or
out
xlat
mov
insl
bound
nop
fmul
lahf
ss
xor
mov
inc
fistl
pop
cmc
inc
cld
into
loope
repnz
mov
inc
data16
dec
leave
fdiv
scas
jnp
loopne
and
rcrb
mov
xchg
cli
or
testb
daa
sub
fwait
xchg
dec
dec
scas
mov
leave
and
pop
cwtl
arpl
ret
gs
xchg
das
mov
ljmp
jp
sub
mov
dec
inc
mov
mov
test
add
insl
adc
sarb
aad
faddl
cmp
dec
sub
xchg
inc
aad
mov
fdivrs
dec
pop
enter
inc
bound
mov
mov
jl
lret
fistl
sub
cld
test
xor
push
push
xchg
push
les
repnz
test
push
and
pop
sar
push
push
push
mov
test
and
mov
add
push
jmp
push
sub
dec
fistpll
data16
and
or
inc
dec
out
gs
lret
ljmp
popf
idivl
sub
inc
sub
lcall
stc
adc
ret
jp
dec
inc
insb
std
dec
pop
das
pushf
xor
push
ret
mov
call
jb
mov
ds
in
enter
jno
push
jp
mov
stc
and
add
mov
mov
mov
adc
jecxz
and
cmp
insb
cmpsl
adcb
pop
sub
sub
jb
mov
pop
sbb
mov
lcall
push
daa
mov
loope
pop
cmp
cwtl
xor
adc
sbb
fimull
shll
mov
sub
dec
mov
push
hlt
push
sub
dec
add
lods
cmp
jl
sub
pop
adc
lods
ljmp
negb
insl
rcrl
fbld
mov
lea
sub
cltd
imulb
sub
add
daa
mov
in
test
vpcomub
and
cltd
xchg
add
push
xchg
sbb
or
cmp
popf
xchg
cs
pop
popf
cmp
dec
cmp
les
movsl
out
lret
mov
xchg
das
push
dec
iret
ficompl
mov
xor
sub
or
test
movb
aas
loopne
inc
pop
fwait
mov
or
dec
add
fisttps
dec
shll
xor
xor
stc
rorb
loope
mov
das
pop
not
rcrb
push
jns
push
enter
jp
cmpsb
and
add
add
mov
inc
mov
in
fwait
push
arpl
xchg
insb
jle
out
repnz
test
push
aad
repnz
dec
adc
jg
ret
xchg
outsb
iret
cmp
into
imul
incb
push
fnstcw
add
dec
push
daa
xor
imul
lods
add
scas
adcb
repz
and
outsl
add
xchg
mov
sbb
sbb
inc
jb
dec
push
xor
cwtl
movsl
lea
push
cmp
mov
aad
sub
addr16
or
mov
or
int
aad
dec
mov
jl
pushf
xor
xchg
sub
mov
insl
mov
mov
xor
insb
fnsave
scas
fldcw
xchg
push
jae
jl
daa
loop
loopne
divb
push
pop
popa
mov
xchg
movsb
mov
or
adc
xchg
mov
dec
dec
mov
mov
xchg
jmp
sbb
mov
shlb
push
pusha
mov
test
shr
xor
mov
jp
fadd
dec
push
jo
mul
pop
rorl
daa
jbe
mov
lea
and
jo
ja
cmp
pop
sub
lea
or
ds
pop
cmp
mov
in
mov
je
mov
push
inc
dec
or
xor
push
loope
or
popf
icebp
sahf
or
movsb
mov
dec
mov
sbb
mov
stc
lea
aam
push
js
xchg
xchg
adc
lds
adc
cmp
push
mov
or
xchg
jo
leave
or
lea
fs
push
mov
ret
sub
cmc
stc
je
mov
aam
in
arpl
mov
js
push
test
or
ss
push
pop
inc
cltd
lods
lods
mov
mov
shlb
es
ljmp
mov
scas
icebp
add
lock
lea
out
js
mov
jge
das
xchg
or
jp
jb
cmpsl
mov
xchg
pop
jg
mov
cmpsb
lahf
mov
jne
xor
and
add
aaa
jl
into
lods
call
push
sub
add
push
jle
and
testb
push
dec
imul
arpl
test
ret
pop
clc
fwait
icebp
xchg
aaa
and
jle
push
xchg
add
mov
lcall
cmp
lods
add
in
add
jnp
mov
loopne
notb
fisttpll
testb
sub
nop
adc
sub
mov
cwtl
xchg
dec
lahf
and
shrb
sub
mov
and
jne
dec
lahf
xor
es
mov
aas
fcomps
jns
les
shll
mov
ja
dec
xchg
test
jb
and
mov
add
in
adc
aaa
pop
lods
push
push
bound
jecxz
sbb
sbbb
cmp
clc
add
or
popf
scas
pop
test
std
dec
leave
xor
add
mov
fwait
or
out
xor
out
pop
sub
sub
xor
leave
cmp
std
xabort
inc
popf
add
mov
fwait
jmp
adc
lret
xor
push
in
mov
call
and
xchg
lods
and
lods
push
clc
scas
dec
push
cmpsl
ds
mov
cmp
rol
les
lock
pop
push
insl
add
xchg
or
sti
cmp
lcall
in
mov
daa
pusha
add
mov
aad
fnstsw
push
cmpsb
pop
mov
mov
pusha
xchg
mov
mov
imul
sarb
repz
push
je
cmc
xchg
mov
das
cmpsl
fmul
pop
push
loope
pop
stos
cli
fs
dec
fisubl
adc
sbb
pushf
outsl
test
scas
shrb
mov
hlt
xor
jl
test
idiv
mov
inc
pop
or
mov
int3
loope
add
inc
lahf
hlt
cwtl
push
adc
aam
or
jg
sbbb
dec
pop
mov
rcrb
lcall
cmp
shl
jno
mov
adc
lea
jo
adc
es
dec
inc
pop
pop
xor
cmpsl
cld
orb
or
push
cmpsl
mov
addr16
leave
pop
mov
add
or
pop
sub
in
icebp
add
aam
adcb
mov
push
pop
cli
sub
fisubs
addr16
mov
push
mov
push
push
mov
dec
out
add
mov
cmp
xchg
pop
pop
ss
mov
pop
fistpll
add
je
pop
data16
and
icebp
adc
xor
in
out
fstpl
cwtl
mov
ret
mov
daa
pop
rolb
inc
pop
xor
xor
xchg
jge
fdivl
mov
jg
lods
jae
jle
push
cwtl
lds
cmp
test
fidivl
ja,pt
pop
insb
push
dec
ds
aaa
mov
fs
dec
mov
mov
sub
mov
xchg
sbb
push
mov
sti
inc
inc
xchg
in
dec
inc
mov
rclb
orl
mov
sub
jle
lcall
gs
sbbl
jns
jl
dec
jb
movsb
jo
aas
xchg
jbe
or
xchg
push
ds
push
adc
jp
iret
subb
in
or
jle
stos
and
xlat
mov
and
movsl
popf
pop
cld
and
cmp
sbb
mov
daa
mov
cli
shr
push
mov
hlt
dec
loop
das
pop
outsb
mov
in
mov
clc
pop
cli
and
mov
daa
outsb
test
addr16
push
mov
decb
xchg
fucomip
mov
xchg
inc
lret
mov
cmp
add
inc
push
mov
into
popf
pop
add
mov
cmp
push
fmull
jno
cmp
cmpsl
loop
pop
and
pop
sub
mov
push
mov
lret
xor
or
ljmp
inc
ds
sub
and
test
into
sbbl
pop
jo
mov
lret
les
inc
sub
add
in
and
jecxz
int3
or
sahf
icebp
xchg
sbb
mov
and
xor
mov
imul
mov
or
fiadds
stos
dec
mov
bound
xor
mov
stos
push
es
ret
sub
jns
das
addr16
inc
mov
pop
ss
mov
cmp
clc
push
outsb
inc
sbb
pop
loope
push
mov
icebp
adc
adc
leave
fs
sub
ja
adc
push
xor
fildll
push
test
inc
scas
push
and
scas
outsl
sbb
pop
adc
cmp
inc
sub
mov
cs
jb
in
add
aas
loope
movsl
or
cli
mov
lock
pxor
sub
xor
arpl
push
or
ss
into
lret
pop
xor
jecxz
sbb
mov
inc
jecxz
sub
inc
mov
cmp
and
fs
xchg
add
sub
mov
cld
stos
fnsave
ficoml
cmp
sub
xchg
jg
mov
sbbb
pushf
scas
mov
insb
out
adc
repnz
sub
lock
mov
pop
in
xrelease
mov
lods
inc
test
lret
test
in
test
enter
mov
rol
pop
roll
and
jl
mov
test
sbb
pop
mov
cmp
fmull
inc
lock
aam
mov
cs
pushf
xchg
push
xor
dec
scas
xorl
out
bound
push
xor
mov
dec
das
jns
or
test
mov
mov
or
subl
pop
lret
insb
cld
in
sbb
sti
ret
lahf
mov
data16
lods
lret
mov
aaa
mov
out
push
xchg
repnz
mov
mov
xor
jp
cmc
lds
mov
adc
roll
pushf
or
mov
stc
and
cld
mov
movsl
dec
pop
xlat
pop
dec
loop
adc
lret
jne
imul
jecxz
xchg
movsb
call
scas
lods
sub
xor
and
inc
fwait
inc
xchg
in
insb
pop
inc
cltd
std
lock
sbb
testl
cld
mov
outsb
sub
xchg
xor
cmc
int3
ljmp
call
or
add
inc
popf
xor
nop
dec
mov
mov
test
fstpt
sbb
pop
ret
jnp
dec
and
clc
lock
or
int
mov
insb
bound
xor
cltd
mov
arpl
jle
push
xor
jp
push
loope
pusha
aad
mov
ret
sbb
sub
mov
push
ljmp
jb
repnz
pop
dec
ss
repnz
mov
pop
imul
das
pop
xchg
mov
xchg
or
pop
mov
data16
mov
cld
push
lret
mov
lret
pop
setl
push
mov
adc
into
nop
xor
loop
xchg
push
dec
cmp
mov
adc
aaa
fstpt
les
dec
loope
pusha
sbbb
pop
cmpsl
pop
aad
int
loope
mov
loope
lds
jno
pop
mov
mov
js
sub
repnz
inc
adc
xchg
in
gs
mov
aam
decl
xorb
int
xchg
cs
inc
out
out
jns
mov
enter
in
cwtl
out
pop
or
cmpsl
imul
das
mov
inc
or
or
push
cmp
negl
or
xor
pop
or
sarl
adc
lods
inc
syscall
jnp
test
test
pop
fwait
in
and
mov
or
ja
in
xchg
jmp
mov
and
stc
int3
xchg
push
pop
nop
shll
dec
mov
mov
data16
sub
push
lea
jmp
lret
or
xchg
xchg
cs
insb
sub
xchg
pop
icebp
jecxz
test
test
sub
fmull
dec
in
pop
ds
jno
inc
xchg
call
leave
addr16
push
imulb
mov
mov
jns
stos
stos
lods
xorb
repz
sahf
mov
subl
mov
cmp
vcomisd
jae
or
dec
hlt
add
imul
popf
test
push
inc
outsb
push
jg
xchg
mov
mov
lahf
xchg
and
es
mov
mov
xor
sub
jp
push
cmpsb
dec
dec
mov
push
cmp
bound
cmp
cmpl
push
pop
mov
popf
or
aad
repz
sbb
and
decl
and
decl
cltd
imul
mov
fmull
pop
and
xor
shlb
inc
lcall
out
lds
out
cmp
mov
sbb
dec
pop
lea
inc
adc
fucomip
stos
sbb
imul
add
cs
pushf
das
movsb
insl
add
insb
sti
ficoms
mov
jbe
test
mov
fsubrp
jg
mov
stos
xor
subb
scas
push
lods
ficompl
stos
mov
or
mov
mov
sbb
ret
cmp
fwait
add
sub
jge
testl
fwait
inc
std
sar
jno
clc
pop
ret
adc
hlt
js
loope
fisubrs
xchg
mov
sub
mov
mov
cmp
repnz
es
xchg
in
inc
xchg
mov
or
out
push
cmc
in
fdivrl
popa
in
mov
call
add
and
subl
lods
insl
loopne
jb
pop
mov
icebp
inc
leave
imul
ss
in
dec
push
sbb
hlt
adc
or
xlat
cmc
jae
loopne
js
test
dec
dec
pop
incl
in
cli
lahf
stc
or
sbb
pop
push
jbe
daa
jmp
jmp
shll
fimuls
and
enter
leave
fldcw
es
leave
stc
fmulp
jno
pushf
or
mov
mov
fadds
bound
jo
cs
xchg
and
cmp
fidivs
repnz
nop
imul
insb
push
mov
mov
imul
mov
pop
loopne
outsb
mov
std
add
xor
pusha
mov
xchg
sub
jge
popa
mov
rcrl
sub
or
lret
notb
fs
shlb
in
mov
js
sub
mov
outsb
mov
shll
mov
dec
xor
sahf
test
xchg
icebp
pop
popa
or
xchg
push
sub
xchg
pop
jae
nop
fwait
and
pop
call
xchg
pop
cmp
push
outsb
sbbb
lds
test
lret
test
adc
push
ss
out
add
pop
or
in
push
cli
std
xchg
sub
jnp
loop
sbb
std
and
cli
mov
jg
jb
lcall
insb
enter
or
nop
jae
xor
or
sub
int
dec
push
in
into
push
cmp
clc
hlt
and
idivb
sbb
adc
cmp
test
std
sbb
stos
ret
hlt
int3
mov
xchg
sbb
dec
out
mov
or
xchg
popf
cmpsl
cltd
test
sub
sbb
cmc
inc
bound
mov
jecxz
js
loop
adc
mov
orb
jp
ret
fistl
add
stos
push
int3
fiadds
and
cmp
sub
and
xor
inc
mov
mov
loope
fmuls
mov
pop
movsl
lods
dec
mov
xor
ljmp
scas
mov
cs
js
adc
cmp
test
inc
add
inc
pusha
sub
lea
fs
scas
das
addr16
and
jp
stc
lods
adc
ds
lahf
les
rcr
mov
sbb
mov
cmc
jl
xchg
hlt
xor
pop
push
out
bound
inc
orl
mov
call
jg
addr16
mov
leave
popw
cwtl
add
xor
data16
cmp
outsb
or
ret
mov
or
idiv
xor
sbb
adc
jae
int3
lret
pop
fcomip
test
testb
int
push
jecxz
aad
mov
sub
push
pop
sub
pop
dec
out
xchg
add
cmp
outsb
lret
cmp
mov
ljmp
jno
and
or
mov
jno
sub
add
sbb
pop
test
mov
and
lods
jo
jp
out
sub
and
sub
add
adcl
inc
xchg
push
loop
inc
ljmp
cli
sbb
pop
test
xchg
and
push
pop
dec
nop
cmp
inc
data16
outsl
jnp
push
in
test
lea
cmp
or
inc
sarl
out
sub
mov
stos
cmpb
xchg
nop
inc
fidivs
scas
xor
mov
sub
and
sti
inc
mov
xchg
inc
inc
pop
jb
push
push
pop
stc
pushf
lods
das
hlt
xchg
cs
xor
repz
fildl
nop
and
rcrl
adc
xor
fnstsw
sti
je
adc
push
out
fndisi(8087
and
pop
add
out
pop
out
dec
cmp
cltd
xor
cmpsb
pushf
xor
insl
inc
and
mov
imul
xlat
xor
sbb
add
fcmovnb
imul
pusha
shrb
lea
es
adc
mov
ljmp
adc
ja
jecxz
rclb
and
sub
aam
mov
test
movsb
cvtpi2ps
repnz
adc
sub
and
mov
push
cmp
jo
cmpb
push
cmpsl
stos
stc
sub
int
sub
adc
add
inc
and
sub
cmp
or
dec
add
cmpsb
xchg
cwtl
mov
mov
fwait
sub
pop
push
std
stos
das
xchg
cmp
lcall
push
movsl
push
jno
xchg
cmc
mov
mov
push
out
jne
or
in
push
ljmp
inc
or
jnp
in
pop
fsub
add
cmpsb
push
out
rcr
jne
pop
cmpsb
loopne
dec
fwait
das
fimuls
sbb
mov
fs
call
vpavgw
ds
push
xorb
xor
xchg
push
push
lcall
xor
lahf
and
es
aad
enter
in
push
enter
sub
or
pop
dec
test
jno
je
add
aad
xchg
out
jne
lock
cld
and
sbb
inc
cmpb
jle
loopne
jecxz
inc
out
test
xchg
cmp
push
outsb
and
sub
xchg
or
imul
mov
popf
inc
xchg
pop
push
orb
cld
mov
adc
inc
xrelease
daa
jmp
xor
fstp
sbb
sub
cmp
jno
ds
leave
loop
cli
dec
lds
lods
mov
pop
pop
cmovge
lahf
jb
sbbb
js
nop
ds
inc
fimull
cmc
pop
fildl
outsb
fimull
jecxz
pusha
stc
sub
pop
sbb
js
addr16
clc
das
push
int
aad
in
mov
outsl
mov
ljmp
flds
push
fnstenv
mov
mov
inc
jo
jge
mov
xchg
jmp
dec
lcall
es
lret
test
fsubs
dec
gs
jbe
xchg
das
fs
rcrb
scas
aad
pop
shll
gs
cmp
xor
outsb
jmp
pop
ret
jp
rcll
mov
jne
rorl
add
insl
outsl
dec
pop
icebp
jp
fimull
sti
xchg
fildll
movsb
dec
stos
cmpsb
in
mov
cmpsb
xchg
sbbl
push
pop
inc
arpl
inc
push
mov
dec
in
add
cmc
or
and
aam
fs
jo
jo
or
loope
dec
mov
incl
lods
dec
in
imul
lock
shrl
cmp
es
and
mov
push
decb
dec
popl
les
mov
loop
cmpsb
push
pop
fsubr
test
dec
sub
inc
or
jecxz
arpl
js
rorb
mov
shl
inc
push
xor
xor
adc
cmpsl
dec
xchg
daa
pop
fidivs
add
mov
pop
fidivl
cmpsb
xchg
xor
jnp
stos
sub
popa
pop
lret
repz
pop
xlat
xor
cmp
cmp
pusha
in
insb
jbe
mov
inc
popf
cmc
mov
sahf
lcall
call
push
sub
cmp
jge
ljmp
or
outsb
mov
pop
xchg
or
mov
mov
mov
out
cmp
ljmp
cmp
adc
mov
xor
sahf
xor
aad
aas
adc
cmp
test
and
nop
jmp
negb
insl
clc
lea
add
sbb
jl,pt
mov
int
out
insb
popf
ret
fcmovbe
sbb
or
dec
iret
sub
and
cmpsb
mov
pop
push
push
clc
pop
cmp
xchg
daa
enter
loopne
mov
mov
ljmp
adc
cmp
sub
inc
les
mov
ret
mov
push
mov
es
dec
xor
lods
div
enter
and
inc
aad
imul
outsb
adc
call
push
enter
push
outsb
loop
outsb
das
addr16
insl
sbb
aaa
lret
out
mov
mov
cmc
sub
lcall
gs
sub
call
mov
mov
subl
mov
cmc
and
mov
xor
and
mov
dec
lahf
rorb
sbb
add
cmc
push
jecxz
adc
es
lock
mov
pop
loopne
xchg
mov
arpl
mov
push
inc
lea
fwait
mov
icebp
add
xchg
testl
lods
aad
sub
adc
jns
mov
icebp
sub
jle
sbb
lds
pop
das
mov
cmp
xchg
cmp
mov
ljmp
mov
addr16
lcall
and
mov
jp
hlt
mov
nop
sbb
sarl
gs
xchg
mov
lcall
mov
pushf
test
dec
xchg
sbb
mov
leave
lods
add
xchg
xchg
jp
cltd
idivl
and
push
orb
mov
cmp
addl
lahf
add
gs
push
pop
sahf
cmc
and
pop
sub
les
inc
sub
xlat
scas
mov
jmp
or
test
adc
jg
les
ss
xor
jo
push
bound
mov
xlat
sbb
loop,pt
xor
pop
adcl
push
sbb
leave
cmp
mov
push
shrl
and
pushf
mov
jne
arpl
movsb
pop
and
stos
out
loop
sub
mov
and
push
jp
bound
inc
mov
scas
in
loopne
inc
jmp
add
movsl
mov
imull
add
lcall
aad
push
inc
inc
enter
lods
mov
sahf
stos
pop
mov
mov
or
int3
lods
sbb
jmp
dec
loopne
out
xor
mov
push
pop
adc
mov
test
arpl
push
aaa
xchg
jae
pop
das
or
lods
clc
inc
xor
dec
add
add
adc
stos
pushl
push
and
inc
mov
scas
dec
pop
inc
out
movsl
mov
rorl
jnp
ja
loope
sbb
pop
cs
mov
pop
fisttps
push
mov
dec
pop
xor
mov
add
pop
push
bound
jne
mov
xor
int3
jo
jo
dec
xchg
push
jno
mov
add
daa
dec
int
decl
insb
and
push
int
in
push
push
xchg
and
mov
xor
push
or
jge
arpl
out
test
lret
sbb
je
push
push
loop
aaa
xor
fs
or
faddp
sbb
pop
repnz
mov
jge
or
out
ret
xor
jp
movsl
test
lcall
stos
in
nop
jae
add
inc
das
adc
dec
aam
loope
mov
push
cmpsb
mov
fadds
ds
sbb
ljmp
pop
jno
insb
adc
shll
inc
aas
sbb
gs
jne
std
push
sarb
jno
and
rorb
mov
sahf
sub
decl
and
and
cwtl
mov
cwtl
and
cwtl
fistl
insb
inc
je
iret
mov
sbb
jno
mov
adc
sbb
in
leave
bound
jo
ret
rcll
xlat
pop
jmp
js
mov
lcall
data16
leave
stos
mov
cmpl
movsl
dec
xor
dec
in
push
xchg
outsb
mov
jle
push
mov
fwait
push
adc
ja
and
icebp
xor
jle
xchg
cmp
test
cli
add
andb
xchg
xchg
repz
and
lcall
orb
out
in
add
or
je
cmpsb
decl
enter
sub
dec
in
pop
adc
push
icebp
inc
xchg
cmp
es
insl
xchg
and
mov
push
and
repnz
shll
jne
aam
push
jns
or
bnd
pop
imul
call
jb
outsl
div
lods
pop
hlt
ficoms
jnp
test
sbb
popa
dec
sbb
test
imul
pushf
int
aas
shlb
cs
notb
lods
addr16
in
fnsave
shrl
xchg
out
mov
test
dec
ret
aaa
icebp
mov
mov
mov
push
stos
mov
aam
in
sbb
sub
mov
pop
in
and
sahf
xor
in
pusha
push
decb
pop
ss
into
cltd
std
lods
mov
mov
jns
sahf
stos
fnstsw
arpl
sbb
push
and
iret
mov
aas
add
mov
jns
gs
scas
stos
and
adc
in
hlt
ret
loopne
sbb
and
ret
sarl
scas
repnz
pop
and
jmp
mov
push
xor
jp
and
and
out
repnz
push
sbb
test
movsb
xchg
test
or
mov
mov
jle
jecxz
jg
mov
mov
xor
inc
jecxz
outsb
and
or
and
push
jp
in
outsl
daa
lds
scas
jo
mov
push
cltd
jb
mov
mov
pop
hlt
lea
cmp
jbe
or
mov
cs
mov
jl
xchg
xchg
lret
pop
mov
int
and
pop
test
mov
push
aas
sub
pop
repnz
mov
clc
sbbl
inc
imul
mov
fidivrs
lods
fwait
mov
xlat
push
fwait
cmp
cli
js
cmpsl
inc
sbb
imul
pusha
popa
ffreep
test
data16
rcrb
jecxz
stos
and
sub
sbb
add
cmp
push
pop
mov
divl
push
icebp
or
je
ljmp
mov
mov
xchg
enter
test
xchg
cmc
ja
jmp
lock
cmp
popl
add
pushf
loopne
adc
into
popa
icebp
push
jl
negl
aam
mov
add
lods
mov
inc
xchg
adc
fmulp
fadds
or
idivl
or
inc
movsl
pop
xor
loopne
insb
add
xchg
or
mov
ja
jp
lods
fst
aad
stos
mov
xchg
inc
mov
pop
out
nop
push
aas
imul
cmp
xchg
nop
paddw
cmp
cmpsl
xchg
ljmp
cs
jmp
push
or
out
mov
das
adc
sub
pop
xchg
jbe
dec
adcb
add
jno
jmp
out
sbb
sbb
in
ja
test
arpl
mov
aad
xchg
lock
fs
jmp
sbb
jnp
andb
jp
das
lods
into
adc
dec
mov
pop
repz
add
or
pop
movsb
fsubrl
sbb
imul
inc
xchg
sbb
mov
dec
cwtl
filds
outsb
and
data16
out
int3
test
jne
scas
cld
aas
mov
adc
or
pop
aas
or
in
in
daa
adc
icebp
dec
mov
pop
ljmp
ljmp
hlt
arpl
stc
jns
out
pop
inc
adc
inc
stc
xchg
inc
fiadds
hlt
dec
cmpsb
sbb
inc
xor
test
jae
push
ds
xchg
lcall
or
or
inc
mov
les
subl
clc
adc
push
push
fildll
das
minps
dec
xor
bound
push
lods
cwtl
inc
fnstcw
mov
sbb
push
data16
test
adc
in
ja
mov
cli
leave
cmp
adc
repz
icebp
and
jp
js
xchg
fwait
xor
cld
mov
mov
push
jbe
sub
adc
inc
fnstenv
sahf
xchg
push
imul
lcall
imul
push
aam
pop
outsb
pop
adc
xor
out
inc
xchg
fwait
cmp
sbb
shll
jne
fwait
mov
push
xchg
mov
pop
stos
jne
shl
inc
fiadds
cli
cmp
insl
sbb
jle
xlat
xor
std
dec
lret
sbb
mov
sub
jno
mov
fmull
and
ss
leave
mov
sbb
adc
xchg
cmpsb
sbb
inc
adc
lock
xchg
dec
or
test
pop
inc
adc
data16
loop
jge
and
mov
iret
outsb
push
pop
xlat
pop
mov
jecxz
arpl
mov
adc
shll
pop
lahf
out
jns
or
sti
decb
sbb
jb
inc
fsubs
adc
stc
mov
repnz
cld
lock
in
and
roll
rcll
cmp
imul
scas
push
mov
mov
arpl
push
sahf
sbb
ljmp
xor
dec
cmpsb
outsw
sbb
enter
gs
push
arpl
cmp
and
iret
std
mov
inc
jle
mov
fwait
jns
test
jmp
lods
push
push
sbb
ret
mov
clc
pop
iret
dec
cmpsl
gs
div
pop
add
xor
and
icebp
sbb
and
popa
sub
shrb
dec
xor
push
dec
and
pop
push
inc
adc
addb
add
mov
fsubrp
hlt
cmp
ss
inc
gs
out
outsb
loope
adc
sahf
jle
aam
xchg
xchg
in
inc
rcrl
pop
fs
adc
cmp
pop
js,pt
adc
mov
mov
sbb
jg
cwtl
stos
imul
fiaddl
mov
pushf
das
in
cwtl
aad
pop
sbb
mov
pop
jle
scas
mov
xor
adc
jg
xchg
lock
pop
call
test
pusha
lods
movsl
loopne
mov
jae
push
sbb
lahf
leave
or
xor
into
fucomp
add
std
jo
lods
lds
das
ljmp
cmp
cwtl
mov
mov
andb
jb
int3
stc
cmp
movsb
or
pop
or
out
icebp
mov
or
push
push
jl
and
mulb
daa
lods
stos
mov
andl
inc
addl
xor
idivl
cwtl
mov
dec
jge
cmp
outsl
xor
mov
ds
in
popa
or
sbb
outsb
dec
notb
mov
mov
mov
int3
pop
lcall
je
mov
sub
and
shl
in
mov
xchg
loop
sbb
xlat
sbb
xchg
cmp
push
imul
imul
push
icebp
mov
push
add
outsb
inc
mov
mov
decl
leave
sub
or
lret
fs
and
push
jbe
jmp
mov
sti
mov
jnp
dec
or
sbbb
ss
outsb
xchg
mov
jl
xor
in
inc
push
inc
lock
jmp
or
or
sbb
pop
sbb
ja
sbb
inc
icebp
xchg
repnz
popf
imul
int3
or
inc
and
in
js
adc
inc
xchg
addb
mov
mov
mov
enter
test
sbb
cli
stos
cmp
jle
add
movsl
inc
mov
test
mov
jns
jo
les
andl
in
cmp
jae
jae
jnp
mov
jmp
push
outsb
iret
xor
bound
jb
clc
mov
cmp
xchg
decb
and
ss
jge
mov
jno
aad
mov
sbb
pop
or
xor
inc
adc
mov
iret
push
rorb
outsb
adc
cmp
mov
fcmove
pop
cmp
mov
mov
inc
adc
inc
ss
call
inc
and
aaa
psraw
xchg
add
mov
xchg
inc
ficoml
or
mov
daa
std
sub
jnp
dec
add
ja
xor
cmpb
aam
lcall
ljmp
leave
pop
and
aaa
jl
jae
xchg
hlt
mov
fisubrl
in
in
dec
jecxz
sarb
lret
je
cmpb
push
pop
repnz
mov
xchg
jbe
xchg
shll
xchg
dec
xor
loop
dec
fidivrs
arpl
cmpsb
les
mov
dec
aad
pop
mov
inc
pusha
xor
popf
out
and
andb
sub
insl
mov
pop
imul
xor
shr
pop
ss
mov
mov
adc
addl
dec
int3
enter
inc
imul
jne
adc
ret
adc
sbb
ja
jl
sti
insl
loope
aam
fildl
mov
js
cli
xor
cmp
cli
fwait
cmp
lea
lods
inc
cltd
or
inc
das
fidivs
xor
and
mov
inc
mov
push
cmp
dec
clc
push
cltd
fmull
push
in
push
or
out
sbb
pop
mov
subl
stos
inc
xchg
pop
push
lods
push
xchg
xor
stos
loope
or
int3
dec
inc
divb
and
jl
popa
cli
mov
adc
push
pop
testb
imul
mov
jo
arpl
pop
xor
jecxz
mov
mov
push
mov
xchg
test
sub
call
and
negb
leave
icebp
in
dec
ds
ds
pusha
jo
mov
fcoms
mov
scas
rol
xchg
xor
or
mov
sub
lea
mov
push
aam
dec
int
sub
stos
inc
mov
ljmp
sub
dec
adc
popa
clc
icebp
adc
jns
in
pop
adc
cld
sti
push
mov
add
xor
cltd
ret
jns
ljmp
dec
add
mov
bound
push
inc
pop
scas
sti
lds
xor
fidivs
pop
lahf
inc
jnp
cld
adc
orl
je
stos
shll
lahf
lret
mov
popa
ret
or
dec
dec
jno
mov
inc
push
loopne
in
mov
inc
out
aam
mov
mov
add
sbb
add
lret
lret
and
iret
mov
in
mov
mov
int
inc
mov
enter
das
idivl
push
push
dec
aaa
add
mov
jbe
out
mov
cmc
and
dec
in
inc
and
pop
mov
add
mov
jecxz
std
fs
pcmpgtb
cmp
stos
popa
xchg
nop
addr16
inc
loope
pop
out
je
pop
pop
stos
add
insb
mov
insb
sub
cld
mov
fistps
xchg
mov
mov
jnp
jge
or
out
push
add
dec
xchg
ja
jno
or
lahf
mov
sub
sarl
filds
repnz
mov
inc
rcll
mov
call
jnp
pop
fwait
push
inc
push
pop
jle
adc
inc
push
ljmp
into
push
add
sub
pop
sub
imul
idiv
mov
cmpsb
dec
xchg
shrl
shrb
jns
xchg
jg
negb
fcmovu
cmpsb
push
sbbl
fs
jmp
push
aas
add
rolb
hlt
nop
sbb
nop
ljmp
pusha
xchg
insb
sbb
mov
mov
iret
sbb
mov
jns
mov
mov
insl
iret
inc
in
adcl
and
fcmovbe
sub
out
mov
cmp
mov
pop
mov
dec
push
add
in
mov
sub
inc
push
in
inc
fsubrl
test
ds
xchg
movl
int
mov
sbb
imul
and
ret
sbb
push
mov
xchg
mov
xor
imul
insl
popa
xchg
pop
addr16
dec
addb
cmpsb
lock
loopne
flds
dec
push
mov
mov
push
imul
adc
mov
ds
pop
sub
aam
pop
int3
roll
in
pop
adc
jbe
jle
mov
add
adc
test
pop
outsb
add
cmpsl
push
and
test
flds
fbstp
dec
and
outsb
mov
mov
cmc
add
mov
add
cld
cwtl
cmpb
mov
xor
jo
inc
jecxz
sbb
in
or
xchg
or
mov
jo
movsb
mov
pop
cmp
psllq
insl
mov
paddsw
dec
dec
adc
aam
jb
int3
xor
xlat
jns
and
push
repz
cld
xor
bswap
pop
xchg
xor
subl
push
or
jle
je
and
inc
mov
add
xchg
test
pop
cli
cmp
push
ljmp
or
sbb
push
in
fidivrl
aad
in
mov
insb
aam
ja
mov
mov
rcrb
lods
dec
stos
loop
cmp
lcall
mov
stos
inc
das
jp
pop
or
xor
iret
loop
shrl
fstps
mov
xor
jmp
jnp
xchg
mov
sahf
mov
jecxz
mov
xor
ljmp
mov
sarb
or
push
call
sub
jo
movsl
fnstcw
pop
inc
hlt
lahf
aaa
pop
leave
and
push
sti
xchg
inc
mov
repz
mov
jl
leave
sub
cld
adc
in
shrl
sti
jg
fists
push
aad
psrld
inc
decl
cmc
test
les
lods
dec
loope
sbb
ret
int3
push
sub
jns
xor
int3
popa
xorl
pop
icebp
mov
fnstsw
sub
scas
add
ret
lea
outsb
in
push
xlat
sahf
incb
dec
mov
jecxz
inc
sbb
push
lds
and
sub
in
aaa
xor
push
sti
inc
repnz
das
int
fdivr
push
jl
xorb
sub
adc
je
out
test
xchg
leave
pusha
les
jo
mov
movsl
cld
add
push
loop
inc
and
dec
popa
andb
stos
lods
inc
xor
aas
adc
pop
andl
lock
icebp
mov
xchg
in
daa
push
sub
stc
mov
sbb
test
loope
or
lahf
push
stos
dec
jne
fxch
lret
je
mov
std
jo
push
sahf
xchg
call
xor
add
push
out
test
push
jae
movsl
jbe
imul
xchg
mov
cmc
sbb
loop
jbe
test
fisubs
sbb
jb
jl
shll
inc
sub
pushf
xor
xchg
mov
test
lea
movsb
aad
pop
sub
sub
imul
add
add
pop
dec
out
cmc
sbb
iret
loop
mov
jne
mov
hlt
sarl
and
ss
pop
out
jne
add
add
pusha
jb
inc
xor
out
inc
pusha
pop
mov
iret
push
int
je
pop
push
push
push
mov
xor
imul
adcb
pop
out
adc
mov
xchg
repz
mov
mov
out
std
in
aam
push
cmc
jmp
xor
or
mov
shlb
mov
cld
and
stos
mov
shll
adc
lret
pop
js
sbb
sahf
xor
loopne
xchg
sbb
jb
in
loopne
push
jp
inc
out
add
daa
sahf
pop
fimuls
jbe
sbb
fistpl
call
movb
jg
pop
xor
pop
inc
test
icebp
sub
push
lret
adc
int
pop
lret
divl
out
lcall
sbb
adc
scas
pop
pop
pusha
push
cmp
out
outsb
jbe
ret
jbe
inc
pop
enter
mov
inc
mov
fwait
xor
or
das
arpl
mov
inc
push
xchg
xor
popf
jmp
in
adcl
loope
cs
or
ljmp
mov
adc
int
faddl
inc
lods
mov
jecxz
push
jecxz
dec
push
cmp
dec
add
xchg
mov
xchg
cld
scas
add
jle
ret
or
fsubs
leave
and
std
jp
outsb
sarb
mov
cmp
ret
daa
push
mov
xchg
sbb
lds
js
loop
ja
out
xchg
test
loop
inc
cmp
mov
daa
pop
mov
dec
push
push
jmp
pushf
iret
fimuls
dec
and
and
or
and
cwtl
sti
or
and
cmp
pop
int3
fdivrs
cmp
stos
dec
mov
scas
call
outsl
ret
sahf
push
mov
push
testl
adc
inc
faddl
pop
arpl
mov
fcmovnb
sbbb
pushf
iret
jge
xor
rcl
ljmp
mov
vphaddudq
xchg
mov
cmp
sbb
lahf
dec
jmp
sbb
mov
loop
gs
mov
push
sahf
movsb
popf
xor
shr
and
xor
inc
loope
dec
pop
adc
jbe
adc
stc
shl
mov
in
or
xor
bound
ja
adcb
daa
mov
jmp
or
mov
test
push
cwtl
pop
mov
xchg
loope
mov
mov
mov
pop
sub
scas
and
ret
int
jmp
subl
push
xor
fcompl
push
fcompl
inc
push
sbb
pop
or
popa
jmp
adc
and
jp
aas
inc
mov
jae
int3
mov
mov
sbb
test
ds
cmpsb
out
inc
orl
sbb
mov
mov
mov
push
outsb
or
aaa
xor
jno
loop
hlt
xchg
jmp
lds
add
inc
pusha
jno
mov
add
xchg
pop
out
cltd
stos
sbb
int
shlb
adc
pop
mov
pushf
pop
out
sub
mov
lret
jbe
shl
insb
adc
test
pop
fbld
inc
sub
jo
xchg
ret
fmuls
push
mov
fnstenv
jne
sub
imul
loop
lret
jle
mov
inc
add
sbb
stos
sti
xchg
sbb
sub
je
lret
and
mov
scas
xchg
jecxz
adc
xchg
mov
sbb
and
mov
stos
enter
dec
ljmp
add
jae
jmp
or
jae
xchg
jmp
push
xor
test
nop
pusha
mov
xchg
dec
mov
xor
mov
sub
xchg
mov
push
add
push
mov
sub
jbe
jo
inc
negl
push
or
xor
xchg
je
mov
hlt
popf
mov
pop
scas
inc
pop
icebp
adc
xor
jge
outsb
orl
lahf
enter
mov
movsl
push
and
js
fs
xchg
jge
aas
mov
dec
adc
cmp
bound
and
sub
cmpxchg
es
fiadds
aas
stos
lock
sub
in
mov
pop
sub
sbb
sbb
lret
cli
dec
adc
loope
into
jle
pop
mov
mov
pop
loope
nop
sti
and
popa
dec
or
jp
hlt
pop
out
and
xchg
test
lods
arpl
test
mov
ret
xor
test
pop
addr16
cmp
dec
bound
ds
push
jmp
int
cmpsb
addb
sbb
or
addr16
mov
pop
push
insb
push
cli
sahf
pusha
add
push
ss
out
daa
es
movsb
test
loop
sbb
mov
xlat
nop
adc
mov
std
repz
or
bound
adc
inc
mov
pop
adc
dec
mov
out
add
xchg
sub
aaa
nop
das
cwtl
dec
pop
ds
shrb
jne
cmc
or
mov
mov
mov
cmp
sub
mov
push
in
xchg
into
push
test
jno
gs
mov
jne
mov
addl
cmc
cmp
and
push
fists
dec
and
add
adc
dec
idivb
pop
xchg
adc
iret
sbbb
js
push
mov
mov
cld
dec
dec
sub
mov
xchg
shll
inc
fldt
rorl
shrb
out
int3
push
icebp
or
push
pop
fimuls
mov
xchg
les
js
cmp
dec
in
sarb
add
lock
push
push
lods
mov
dec
jge
dec
mov
cmpsl
cmp
lock
pop
sub
mov
ja
add
sbb
push
inc
cltd
xchg
cwtl
inc
test
shll
ret
pop
jecxz
stc
or
fs
add
int3
mov
mov
mov
pop
push
mov
imul
mov
idivl
lods
test
pop
adc
adc
mov
enter
aas
cmp
insl
aad
mov
inc
or
cwtl
fwait
lea
lret
cltd
sbb
mov
nop
mov
adc
lahf
inc
pop
lret
mov
dec
lahf
sub
in
jg
ret
es
sub
or
lds
inc
gs
in
gs
fsubr
orb
pop
jbe
mov
data16
pop
mov
das
in
test
lods
gs
xorb
cpuid
cld
or
push
jnp
sbb
insb
adc
xchg
inc
mov
push
cltd
test
dec
or
inc
insb
mov
cli
bound
cmpsl
xor
push
fcomp
arpl
pop
jno
sti
xor
push
push
sbb
scas
fs
mov
mov
ficoml
repnz
mov
ficoml
lods
or
lea
cltd
mov
ret
mov
xchg
leave
int
sti
mov
pop
es
jp
jp
lods
stos
jl
call
push
scas
outsb
mov
int
bnd
incl
push
repnz
inc
popa
and
pop
or
push
lds
push
into
mov
rorb
mov
mov
outsb
or
jae
and
dec
adc
inc
cmp
add
push
lcall
test
xchg
arpl
popf
test
xchg
sub
stos
xlat
jmp
ljmp
mov
xor
cltd
ret
pusha
divl
dec
rcll
lea
push
cmc
lcall
sbb
out
imul
in
mov
dec
movsl
rcrl
cmp
jecxz
shlb
cwtl
out
jecxz
por
mov
mov
lahf
aam
adc
aaa
std
inc
jmp
int3
xor
in
in
mov
loopne
adc
lahf
sbbl
pop
and
sbb
xor
in
out
lock
lock
out
cmc
cmp
ljmpw
add
ret
jecxz
jmp
adc
mov
push
cmpsl
push
xor
or
mov
cmpsb
mov
push
lods
mov
dec
and
mov
push
mov
fdivl
stos
and
sub
mov
add
mov
fistl
mov
xor
xor
mov
xor
popa
add
addr16
fldl
je
fidivrs
int3
jp
push
lods
in
orl
mov
movsl
icebp
cmp
dec
mov
sbb
insl
cmp
daa
xchg
mov
add
in
aad
add
test
push
ret
loopne
inc
or
cmp
mov
cmpsl
dec
add
stc
nop
popf
add
insb
jp
stos
dec
push
popf
jne
dec
xor
sub
iret
sarl
jp
or
mov
lock
mov
or
jmp
sbb
in
hlt
xchg
mov
dec
shr
jl
fdivl
lahf
xchg
cmc
frstor
movsl
sub
jg
je
cltd
mov
mov
int3
lret
xchg
inc
arpl
push
inc
inc
adc
int3
outsl
and
imull
lock
and
xor
lcall
push
adc
arpl
mov
addb
or
arpl
pop
xor
xor
push
sub
add
lret
pxor
mull
xchg
pusha
sub
pop
jp
dec
arpl
jge
cmp
pusha
and
mov
or
int3
mov
and
sub
bound
adcl
dec
shr
mov
cmp
inc
mov
jbe
pushf
daa
rcl
dec
fnstcw
loopne
adcl
xor
imul
jmp
adc
xchg
push
int3
xlat
and
xchg
cs
jg
js
sahf
add
aam
adc
bound
in
out
in
cwtl
adc
push
jbe
rcl
stc
push
fs
sarl
fisubrs
ror
in
jg
inc
lcall
inc
sbb
pop
clc
or
outsb
jo
popf
aad
data16
cwtl
div
inc
mov
in
in
push
fdivrl
adc
jg
mov
icebp
xor
sarl
xchg
dec
pop
imul
mov
mov
jno
mov
icebp
mov
cmp
cmp
testl
std
jo
inc
xor
jno
lret
xlat
pop
dec
int
scas
xchg
mov
clc
cwtl
push
sbbb
rcrb
mov
pop
idivl
mov
jo
inc
adc
jge
xor
cmp
sub
mov
inc
mov
pop
jle
test
add
mov
hlt
cmp
push
inc
mov
pop
imul
cmp
jp
shlb
push
dec
push
fldt
in
jo
fisttpll
xchg
mov
lods
or
gs
mov
xchg
repnz
or
add
in
cmpsl
cmp
and
int
arpl
adc
xor
ljmp
cmpsl
jo
rcr
jbe
shrl
stos
ret
movsl
push
out
clc
and
and
push
aas
sbbl
arpl
lds
cwtl
aam
stos
add
es
int3
gs
push
loopne
mov
daa
xor
add
jne
lret
xchg
cmp
push
mov
repnz
and
out
loopne
and
xlat
notb
movsl
clc
adc
into
or
int3
arpl
jne
insl
cmpsl
jne
jbe
rorl
add
and
movsl
fnsave
andb
xor
push
mov
popf
mov
pop
outsl
jle
mov
jns
add
test
mov
in
inc
bound
stos
push
mov
sbb
dec
cmp
sbb
les
jne
jb
xchg
outsb
hlt
outsl
push
jmp
mov
sti
test
dec
js
jp
add
pop
push
jp
add
lods
cwtl
cwtl
xor
data16
add
cmc
mov
es
jno
mov
aad
pusha
cmp
dec
outsb
dec
iret
push
mov
icebp
aaa
inc
mov
lcall
adc
in
push
subb
xor
sub
xchg
fsubs
cmp
add
daa
xchg
cwtl
sub
test
push
test
sub
jo
pop
shrl
jl
lock
lahf
mul
pop
out
xor
test
or
dec
jl
adc
imul
shrl
outsb
jp
fimuls
idiv
rol
repz
mov
negl
cmp
cmp
movsl
inc
aad
lret
mov
mov
aaa
into
out
or
xor
xchg
outsl
mov
shll
call
inc
fnsave
xchg
pop
and
bound
jecxz
gs
jl
pop
icebp
mov
mov
mulb
mov
inc
or
pop
mov
sbb
dec
mov
insb
push
jns
xorl
mov
call
or
fadds
and
or
loop
push
sub
xor
mov
loop
fidivs
loop
gs
imul
cwtl
in
cwtl
sub
and
adcl
cld
rolb
into
push
inc
pop
adc
subl
lret
in
lods
lahf
push
outsl
add
sub
gs
insl
lea
test
dec
iret
imul
dec
dec
sub
add
xor
jp
lret
mov
xchg
cmpsb
shrb
addr16
sub
icebp
xchg
mov
out
sub
stos
or
aaa
mul
sub
pop
dec
cmp
or
pop
out
movl
imul
xchg
repnz
ret
dec
mov
repz
sbb
outsl
push
sbb
jecxz
sub
mov
imul
out
stos
mov
leave
mov
insb
leave
test
mov
and
rclb
add
sub
mov
data16
fsubl
and
in
and
pop
repz
ds
out
xor
lds
pop
add
andb
fidivs
test
inc
cmp
push
mov
lds
into
sub
sbb
or
cwtl
aad
lods
inc
aaa
cmc
rcll
dec
sbb
dec
jo
int3
cmp
rcrl
mov
push
lcall
stos
fs
aad
icebp
mov
out
jbe
ret
push
loope
test
push
cmp
test
int
xchg
cmpsb
xchg
in
mov
dec
mov
lods
mov
fbld
outsb
add
jp
mov
lahf
inc
adc
jne
mov
clc
jae
into
icebp
adc
fidivl
mov
sarb
dec
data16
jne
imul
mov
shr
mov
mov
mov
icebp
shll
shlb
xchg
pop
out
enter
js
or
rcl
arpl
pop
repz
fisubrs
shlb
mov
or
ljmp
in
sbb
xchg
gs
jp
sbb
aas
and
es
xchg
inc
pop
dec
cmp
xchg
sub
sarl
mov
clc
aas
scas
and
outsb
rclb
pop
imul
lret
sbb
mov
in
mov
shl
ret
ss
movsl
out
xchg
adc
cmc
sbb
lcall
adc
fs
mov
ret
xchg
mov
and
out
loopne
xchg
sahf
push
in
hlt
in
insb
add
push
hlt
xchg
aas
xchg
add
es
mov
aad
cmp
popa
mov
adc
pop
loope
into
lcall
mov
int3
icebp
mov
mov
xsha256
cmpsb
pop
notb
loop
cs
arpl
rcrb
aas
arpl
loop
jecxz
sub
sub
mov
dec
rcrl
ds
imul
test
movb
pop
es
ss
aaa
or
daa
sub
xchg
fists
xchg
imul
popa
stc
shl
jmp
adc
sub
jno
arpl
dec
ljmp
fimuls
rcrl
cmc
adc
pop
adc
mov
mov
jb
xchg
int3
jp
or
mov
xor
cli
sub
aas
scas
jmp
jns
and
test
arpl
addr16
lods
outsb
xchg
push
jo
sub
sbb
aad
mov
enter
mov
call
cmp
pop
xchg
in
movb
stos
dec
scas
pusha
aaa
pop
stos
lds
sbbl
sbbb
shlb
inc
mov
inc
lds
int3
jae
icebp
fidivs
push
xor
rcr
lea
jle
test
outsl
movsl
mov
mov
mov
sub
push
jo
add
push
dec
and
lfs
jne
sbb
mov
jo
fimull
xchg
leave
pusha
pop
pop
imul
cmp
je
xchg
mov
push
and
fistl
mov
dec
push
gs
pop
xchg
aas
xchg
addr16
cmp
in
xor
inc
mov
mov
stos
sbb
ljmp
fstenv
outsl
lret
or
inc
push
lcall
lods
out
jp
stos
jno
adc
push
mov
shrb
mov
repz
outsb
dec
repz
dec
rcrl
into
mov
jl
out
cmpl
fwait
sub
pop
pop
mov
mov
call
xchg
cmpsl
mov
ljmp
inc
xchg
mov
xor
xchg
loopne
enter
push
mov
xor
mov
mov
mov
xchg
test
fs
stos
repnz
dec
das
mov
gs
and
loopne
ds
add
pusha
jmp
std
dec
mov
mov
mov
rorl
cmp
sbbb
sahf
xchg
adcl
sarb
mov
cmp
out
sbb
mov
and
loop
xchg
movsb
mov
mov
pop
cmpsb
or
push
and
and
stos
fld
sub
pop
call
icebp
cmp
xor
dec
cli
lock
daa
mov
ret
pushf
mov
inc
or
jb
pop
dec
fsubp
jle
cwtl
mov
in
clc
xchg
and
les
shl
js
aam
fidivs
push
test
setb
std
inc
cmp
subl
cmc
shl
jnp
aas
or
outsb
or
test
ficompl
neg
jp
or
insb
jecxz
cmpsb
into
jae
or
inc
jae
in
popa
sub
or
dec
xchg
repz
and
test
or
pop
mov
mov
dec
js
sahf
or
ja
arpl
icebp
movsl
inc
shrl
and
xor
push
inc
mov
cmpsb
lcall
and
arpl
mov
jne
mov
cld
cmpsb
sar
fucomi
sub
idivb
fs
push
andl
xchg
mov
cltd
xor
dec
ljmp
mov
movsb
cmp
or
inc
ret
js
push
pusha
pushf
sarb
add
add
pop
adc
mov
mov
xchg
fcomp
sbb
shrb
std
adc
push
dec
flds
es
cmpsb
imul
das
cmp
sbb
mov
movb
aad
mov
dec
lret
pop
out
jbe
xchg
jg
mov
lods
and
fstl
xor
ja
imul
push
inc
cmpsb
push
repz
cmc
int
sbb
mov
mov
xor
xchg
decl
out
mov
nop
pop
out
lods
lods
loop
mov
fwait
jb
icebp
xchg
jmp
dec
pop
mov
shlb
xor
enter
adc
lret
fiadds
arpl
imul
es
pop
cmp
inc
fs
dec
cmpsl
ret
mov
jl
push
sbb
jp
pop
cwtl
sub
mov
aam
jns
pop
cmpsb
cmp
cltd
idivb
mov
dec
pop
scas
inc
pop
mov
dec
cli
rcl
movsl
pop
lds
add
xchg
cli
inc
push
jae
insb
sub
lds
and
into
pop
loopne
in
sahf
fstps
cmpsl
xor
sbb
cwtl
push
dec
mov
or
dec
push
out
fldcw
mov
xor
or
popf
push
mov
loopne
jno
mov
int
xor
push
inc
add
stos
fs
lods
pop
dec
mov
mov
ss
jmp
fs
lea
mov
dec
sbb
pop
inc
add
fucomi
testb
pop
je
pop
movsl
cmp
aam
sti
mov
mov
test
adc
pushw
sbb
adcl
jne
inc
loop
sbb
insl
movsl
je
pop
mov
nop
hlt
fstpt
scas
and
xor
lds
movsl
push
xor
mov
xchg
das
mov
mov
and
push
push
dec
inc
add
or
xlat
and
fsubrl
mov
xchg
jmp
pop
push
stos
les
fwait
mov
mov
mov
sahf
mov
scas
stc
stos
ljmp
ja
xlat
mov
shl
sahf
sub
shll
dec
cwtl
push
hlt
arpl
arpl
sbb
arpl
jnp
pop
dec
jb
or
push
add
jno
rclb
fsubp
fcmovb
sbb
je
mov
lret
divl
into
push
nop
xchg
pop
in
idivb
sti
popa
xchg
mov
push
lods
bound
out
or
jnp
adc
dec
xlat
adc
add
fs
jmp
negb
ficompl
test
sbb
rorl
je
std
adc
or
sbb
sub
push
mov
jp
test
xchg
mov
lock
cltd
out
push
inc
jle
adc
bswap
dec
in
das
lods
inc
mov
lcall
je
aaa
pop
iret
imul
lods
jbe
lcall
call
sarl
sbb
ja
movsb
cmp
cmp
and
pop
pop
sbb
dec
lods
js
cmp
adc
shrl
xchg
ja
test
add
shl
scas
sub
cmpsb
sbb
pop
dec
dec
vmovdqa
test
xchg
sub
jne
sub
test
adc
xchg
call
ds
inc
push
ljmp
es
lahf
loopne
notb
ljmp
lcall
sub
cmp
daa
jg
push
xchg
mov
jmp
mov
sub
scas
arpl
fsubr
jae
testl
push
pop
and
adc
out
adc
or
leave
call
loopne
push
mov
mov
and
xor
scas
inc
push
dec
adc
jo
or
shll
and
xchg
jle
push
idivb
sbb
or
cmp
jae
movsl
push
imul
jbe
gs
rcrb
je
subb
enter
sub
aad
test
mov
adc
scas
and
sbb
and
repz
xchg
xchg
int3
add
push
xchg
and
add
push
sahf
shlb
push
xlat
call
inc
rcr
into
mov
mov
repz
mov
clc
daa
inc
push
test
scas
scas
js
xchg
pop
jno
add
out
push
push
or
aad
lds
sti
cmp
push
shl
je
pushl
das
inc
stos
dec
push
gs
insb
mov
xorb
je
xchg
enter
add
fistps
mov
fdivs
push
pop
fiadds
jecxz
ds
mov
inc
jge
mov
add
and
cld
xor
mov
lds
mov
loope
cltd
and
into
shrl
xor
icebp
inc
test
sbbb
or
inc
mov
popf
sub
and
mov
nop
mov
xchg
ds
in
idivl
adc
sub
mov
aaa
pop
cmp
test
imul
push
daa
adc
add
adc
enter
xchg
jae
pop
repnz
out
pop
addr16
imul
push
mov
cwtl
push
call
pop
ss
and
push
jo
jl
xchg
pop
and
mov
jle
fdivrl
fstpl
lea
adc
xor
inc
lds
addr16
mov
xchg
mov
mov
pop
call
movsb
xor
popa
and
mov
ret
in
mov
lret
pop
or
mov
rorl
jmp
scas
and
stc
sub
xor
orb
sub
loop
push
pop
cltd
nop
push
aam
xchg
mov
stc
pop
pop
sub
mov
or
js
add
mov
addr16
pusha
inc
das
pop
lock
and
subb
daa
adc
adc
inc
and
adc
insl
cltd
push
pop
sarb
push
pop
xchg
xor
or
xor
mov
jne
loope
mov
or
stos
push
leave
mov
jns
lock
pop
adc
daa
jbe
dec
mov
inc
sbb
add
jbe
sbb
cld
int3
fpatan
int
and
mov
fnstenv
mov
sub
in
mov
or
mov
push
jne
mov
test
push
mov
push
dec
repz
or
ret
xor
cli
and
and
icebp
std
jnp
lret
cmpsl
sbb
cmc
out
pop
cmp
jl
adc
and
adc
fstps
and
and
testb
pusha
xchg
pop
ret
adc
xchg
in
push
fdivrl
pop
out
addr16
cld
stc
inc
jmp
clc
pop
fimuls
sub
mov
dec
out
in
nop
cmp
test
inc
fsubs
aaa
or
cwtl
pop
mov
xor
mov
cs
dec
rclb
ss
push
fnsave
fcmovnb
nop
sub
lret
xor
push
aas
dec
pop
jge
pop
xor
xchg
xchg
out
xchg
aas
and
adc
test
incb
sbb
cmp
cli
es
mov
pop
adc
mov
push
in
push
push
and
out
jo
pop
rolb
inc
cmp
pop
mov
pop
jo
push
call
xor
xchg
xor
or
outsb
loope
aam
std
inc
movl
cmpsb
xor
mov
mov
iret
sbbl
xor
lahf
lods
jl
aad
adc
push
lods
xchg
dec
sbb
add
shr
xor
xchg
sub
loop
mov
dec
and
jne
addr16
push
loope
into
jae
js
dec
xchg
inc
inc
jns
stc
daa
cmp
in
mov
subl
mov
xlat
das
pop
outsb
mov
or
jp
rcr
jg
test
pop
sbb
scas
jge
mov
inc
mov
and
pop
lds
add
rcl
insb
lret
dec
or
cmp
nop
dec
pushf
push
cmp
mov
cmpsl
inc
test
xor
imul
je
mov
push
sub
push
in
clc
and
mov
push
in
aad
xor
xor
pop
repz
mov
xchg
das
test
aas
push
popf
test
mov
mov
push
lea
dec
inc
xlat
ds
sbb
cs
or
push
cmc
popf
shr
jbe
adc
inc
push
or
jns
daa
jle
push
lret
sbb
jbe
es
mov
or
or
sub
jbe
test
jl
sub
lret
sub
lahf
pop
es
jns
mov
cltd
insb
pop
cmp
sbb
push
cs
decb
in
add
jp
and
add
pop
push
in
mov
mov
je
inc
ja
and
leave
push
push
pop
aas
mov
sub
xchg
popf
jo
in
out
cltd
and
lret
pushf
outsl
xchg
lods
test
pop
loopne
dec
in
dec
lahf
push
adc
pop
test
jg
aaa
and
das
jne
jne
mov
and
dec
lock
pop
push
xor
mov
lods
insl
fiadds
xchg
dec
jne
xlat
sub
xor
jp
adc
mov
mov
pop
aad
pop
mov
fistpll
andl
outsb
data16
imulb
clc
jl
sub
insb
out
repz
repnz
stos
pop
inc
fildl
add
cmp
ret
xchg
lret
push
movsb
cs
xor
push
inc
pop
push
xchg
dec
pop
mov
mov
outsb
add
mov
hlt
cmpsl
push
push
sbb
sbb
jns
addr16
dec
cmpsl
and
mov
or
jp
pop
out
scas
in
leave
sbb
or
dec
inc
icebp
mov
mov
cmpsl
add
fists
push
cmpsb
inc
cmpsl
mov
popf
xor
ret
sbb
or
sbb
pop
sar
stos
lea
lods
xor
and
adc
mov
sarl
pop
movsb
jmp
sbb
ffreep
fists
scas
or
push
sbb
inc
in
ret
cmp
push
mov
lret
adc
mov
pop
mov
sbb
sbb
call
and
and
imul
add
mov
xorl
in
mov
aad
mov
dec
add
or
mov
rolb
inc
stc
adc
bound
adc
mov
lret
ds
fistpl
fidivl
mov
push
andl
xchg
mov
push
aad
mov
fwait
and
xchg
sub
addb
add
xor
add
sbb
add
and
std
cwtl
mov
lret
cwtl
outsl
bound
fildl
push
pop
shlb
xlat
mov
lods
xorb
imul
pushf
cwtl
rorb
movsl
inc
testl
pop
aam
jmp
lret
xchg
out
lock
mov
daa
fdiv
mov
stc
inc
mov
cmp
frstor
jmp
xlat
pop
movsl
cmpsb
les
cmpsl
in
pop
inc
push
sub
jb
mov
dec
test
shrb
call
xor
stc
mov
test
out
fcmove
loop
rcrb
lea
lods
inc
popa
cs
lcall
hlt
jb
add
xlat
repz
cmpsl
out
ret
mov
adcb
fsubr
arpl
adc
xor
xor
add
mov
test
sbb
inc
jbe
les
fdivrs
mulb
sbb
adc
mov
sbb
mov
lods
sbb
mov
shr
outsl
inc
xchg
out
cli
inc
lods
mov
xchg
cmp
lret
push
push
int3
imul
imul
mov
dec
xchg
sub
test
or
in
iret
push
push
or
cvttps2pi
jmp
sti
pop
push
cwtl
lret
paddw
lods
inc
inc
jbe
hlt
push
and
add
xchg
pop
sahf
mov
add
mov
lock
fcomps
daa
push
in
in
mull
pop
repnz
cmp
xor
test
int
bound
rorl
lods
and
cs
popa
fcmovnbe
mov
or
sbb
push
lret
dec
xchg
data16
iret
lods
add
cmc
ss
and
scas
test
in
lea
or
inc
jle
pop
xchg
sbb
sub
add
sub
popa
or
adc
jle
std
mov
roll
pop
and
inc
or
leave
test
testl
out
xor
lock
pushf
or
aad
cmpsl
add
bound
int
mov
mov
aaa
xor
xchg
xchg
xor
adc
jge
inc
fcompl
faddl
xchg
cmpsl
mov
ljmp
lahf
mov
mov
or
popf
lods
test
adcl
test
xor
lcall
cmp
sub
sbb
ljmp
sub
xchg
pop
inc
mov
fildll
inc
mov
daa
mov
jb
inc
gs
push
jb
jns
cmp
adc
mov
push
flds
fidivs
jmp
cmpl
ss
pusha
dec
and
call
or
roll
inc
arpl
push
dec
loope
pusha
das
add
addr16
loop
lods
lds
aas
lea
dec
mov
cs
cld
aaa
mov
leave
lcall
mov
loop
aas
mov
inc
outsl
out
vunpcklps
inc
push
cmp
movsl
insb
push
cmpsl
out
sarl
jb
jbe
cs
inc
mov
xchg
mov
lds
xor
xor
inc
push
cmp
aaa
les
inc
fbld
push
fs
andl
add
pop
and
add
lret
lret
xchg
daa
mov
rorb
mov
iret
inc
movb
mov
lret
scas
insb
inc
push
fisttps
jecxz
sbb
int
or
mov
hlt
pop
mov
out
data16
xchg
movzbl
mov
pop
and
faddl
aam
js
movsl
lea
adc
xor
repnz
cmpsb
scas
fstpl
mov
dec
ret
enter
imul
popf
clc
mov
movsl
push
iret
in
sbb
movsb
pop
vpminub
out
lods
decb
mov
sub
stos
outsl
cmpsl
shll
cmc
dec
bnd
adc
addl
jl
mov
mov
icebp
pop
mov
repz
stos
inc
nop
repz
ds
inc
fs
pop
jae
jecxz
mov
bound
cmp
imul
rclb
pop
sahf
mov
dec
and
pop
out
xchg
testb
cmpsb
cmpsb
sub
movsb
mov
adc
aaa
or
rorl
dec
aad
stc
inc
loope
dec
pop
push
xor
notl
clc
xlat
sub
sub
out
sbb
add
pop
pop
leave
mov
or
inc
and
lcall
lret
inc
push
es
test
jl
pop
mov
test
jle
sbb
and
lds
mov
push
cltd
fs
leave
lods
fcmove
mov
testl
call
dec
das
cmp
adc
fmulp
lcall
stc
test
push
add
xor
bound
loop
fisubrs
outsb
mov
sbb
push
adc
jno
int3
arpl
sahf
xor
fdivrs
jno
sub
pop
pop
ret
sbb
or
mov
in
sbb
inc
lods
les
mov
push
cmc
nop
xchg
in
int3
stc
dec
sbb
dec
mov
adc
or
cmp
hlt
adc
mov
adc
test
aaa
incb
iret
sbb
sbb
insb
loopne
fsts
mov
stc
arpl
adc
pop
test
pushf
mov
adc
xor
xor
add
pop
adc
fcoml
or
mov
cs
mov
out
popa
xchg
lcall
push
leave
push
adc
ljmp
fld
cmpb
mov
lock
sbb
xor
sbb
jp
in
dec
nop
daa
jge
das
lret
movsl
xor
lds
pop
mov
mov
mov
fldt
mov
sub
mov
push
loope
cmpsb
daa
repnz
dec
sub
in
cmp
xchg
xchg
mov
ss
pop
dec
inc
fnstcw
hlt
adc
dec
pusha
pop
sbb
aas
jo
shll
sbb
out
popa
aam
and
sub
mov
mov
faddp
mov
or
mov
adc
iret
xchg
sub
scas
lret
mov
js
mov
sbbl
sub
jp
push
js
daa
mov
scas
loope
pop
and
push
movsb
inc
pop
out
add
cmpl
outsl
push
mov
mov
push
lods
mov
rolb
cmp
or
jbe
push
in
and
fidivrl
mov
and
popf
cmp
pop
cmc
mov
scas
sub
pop
dec
js
lret
repz
and
icebp
xchg
pop
pop
jns
dec
xor
loop
sti
stos
ret
jne
cs
pop
dec
dec
push
insb
lahf
adc
inc
shl
jno
js
test
loopne
mov
repnz
xlat
arpl
mov
adc
mov
jmp
jne
rol
mov
loope
dec
loop
fcomip
test
push
mov
jl
inc
lcall
bound
mov
xchg
lds
pop
add
add
iret
add
daa
dec
and
ss
popf
pop
jb
ss
push
mov
jo
push
cmp
mov
lods
mov
andl
or
jecxz
es
or
andl
in
mov
scas
fildll
stos
and
or
inc
sub
inc
sbb
ljmp
lods
or
inc
lret
and
push
fcoms
clc
mov
push
pop
inc
mov
in
nop
sahf
bound
mov
fstl
orl
or
cmpsb
sub
and
xlat
jbe
xchg
inc
adc
aad
aad
test
pop
and
imul
fs
jg
sbbl
lret
rcll
push
ret
outsl
lret
ja
or
or
or
retw
popa
clc
mov
repz
insl
xor
aad
fdivl
shl
stos
pusha
jl
in
mov
adc
sub
gs
filds
sub
and
test
mov
mov
imul
lea
loopne
mov
push
push
adc
stos
dec
fucomp
je
mov
repz
sub
icebp
mov
fisubrl
cmp
mov
jp
sub
dec
adc
and
js
jle
stos
push
cmp
aas
test
cmpb
lret
push
arpl
mov
adc
out
daa
inc
jg
lods
mov
rclb
pop
in
insb
orb
jns
test
push
inc
dec
pop
jnp
jbe
sub
push
cmpsb
shll
mov
mov
mov
pop
mov
les
mov
outsl
cld
mov
xor
xchg
repz
out
mov
xchg
lods
cmp
popf
mov
pop
fsts
mov
mov
mov
pop
cmp
das
mov
jb
mov
jecxz
pop
xor
pop
cli
cmp
dec
adc
xor
lods
aam
test
inc
fadd
cmpsb
repnz
cmpsb
cmpsb
out
adc
mov
adc
fisubs
rorl
xchg
ds
enter
push
into
rcll
lods
add
push
fldt
mov
cmp
aam
add
cs
push
cs
dec
or
cld
adc
test
out
loopne
push
xor
mov
xor
fcmove
in
sbb
mov
scas
je
sbb
fisttpl
or
and
aam
or
jns
popf
push
addr16
push
add
test
movsb
lahf
jo
cmp
in
loop
fcomip
int3
jno
cmp
fs
jg
std
xchg
push
inc
mov
dec
inc
xlat
jge
push
out
jns
imul
cmp
mov
push
or
in
les
push
popa
cld
jl
mov
jno
xsha1
cmpsb
int
xchg
sbb
xchg
sub
popa
aas
out
int3
arpl
dec
mov
adc
and
xchg
adc
pop
icebp
xchg
inc
cmp
lret
sub
ljmp
test
mov
stos
inc
stos
scas
out
lret
adc
ret
dec
mov
mov
dec
negb
or
pop
sub
jnp
dec
pop
leave
jae
or
pop
mov
or
mov
cmp
stos
and
rclb
fistpll
ja
sub
mov
jnp
std
fwait
or
jp
adc
pop
push
mov
cmc
pop
out
or
and
sub
mov
out
je
cmpsb
jnp
lds
xchg
sub
sub
fs
cmpsb
xor
mov
mov
aam
jecxz
shlb
add
pusha
inc
push
sub
nop
or
ret
xchg
shr
push
cwtl
sbb
cmp
insb
xor
repz
pop
in
sbb
decl
push
int
jo
mov
fsubs
inc
pusha
test
out
stc
jns
fld
push
cmp
in
adc
mov
cltd
xor
mov
mov
jmp
test
cmpsb
push
sbb
mov
xchg
cli
lock
fcomps
xchg
jnp
cmp
pop
cmpsb
sub
mov
push
jns
jae
mov
xchg
mov
jmp
or
cs
push
xlat
mov
std
jnp
mov
ja
jae
push
mov
lds
jmp
pop
pop
push
lret
xchg
sub
fisttpll
mov
jg
mov
push
insl
inc
push
nop
loop
or
pslld
add
lds
xchg
je
push
xchg
jnp
dec
movsl
mov
insl
mov
insb
mov
sbb
push
lock
shrl
mov
enter
loopne
dec
incl
mov
or
dec
jp
mov
add
jmp
lea
mov
and
mov
or
or
fisubs
xor
divb
adc
outsb
mov
jge
inc
cwtl
jno
cmpsb
and
arpl
cmp
std
sub
loope
fs
std
dec
sarl
decb
dec
pop
test
or
ds
or
aas
sub
jae
xlat
dec
or
mov
fwait
ss
inc
call
int3
and
outsl
mov
lods
mov
add
push
adc
sub
xor
cmpsb
xor
mov
push
sbb
mov
scas
inc
arpl
mov
mov
mov
jmp
pop
mov
pop
lcall
dec
sbb
es
inc
lods
mov
dec
sub
ljmp
xor
test
fidivs
pushf
popa
jl
push
imulb
scas
call
jo
dec
push
sbb
pop
andb
and
jae
mov
hlt
cmp
pop
xchg
push
stos
dec
sbb
sub
addl
adc
or
dec
and
imul
mov
inc
aam
imul
mov
insb
popf
or
int
out
aas
or
xor
lcall
inc
dec
out
fmull
loopne
cs
repz
cltd
out
lea
and
or
push
xchg
notb
jnp
outsl
cmp
insl
push
pop
ljmp
mov
dec
mov
adc
jne
sahf
shrb
mul
sub
sbb
dec
stos
out
xor
inc
fs
push
mov
sar
jge
es
jo
popf
xor
pop
add
sub
lea
ret
mov
aaa
dec
xor
jns
pushf
out
mov
xlat
inc
sub
mov
pushf
dec
xor
fnstcw
rcrb
xlat
push
xor
mov
cltd
or
xchg
lret
adc
jle
in
cmp
fdivrs
push
push
sbb
jmp
insl
movsl
cmp
jbe
xchg
call
mov
std
inc
adc
pusha
call
dec
sbb
jbe
add
out
popa
addr16
sub
and
push
hlt
dec
or
les
xchg
pop
cmpsb
mov
pop
in
jo
lods
xor
pop
scas
add
cmp
std
pop
pushf
xor
fdivl
jo
sub
add
sahf
adc
cwtl
pop
aam
pop
or
mov
sub
mov
stc
ss
mov
repnz
cmp
mov
dec
xor
push
scas
idiv
xchg
xchg
iret
imul
fmull
sub
sahf
mov
fisubrl
hlt
je
pushf
pop
rorb
lea
out
mov
mov
scas
push
clc
sub
sbb
lahf
xchg
daa
sbb
stos
xlat
stos
aas
aam
inc
mov
mov
push
mov
push
jne
loopne
incb
sbb
xchg
hlt
notl
pop
scas
pop
and
cltd
xor
and
in
lods
ljmp
inc
loope
nop
in
cmp
out
xor
lea
das
sub
das
scas
popf
dec
div
jl
push
sub
sub
insl
add
hlt
sti
ret
push
pusha
hlt
sbb
jmp
push
push
mov
lret
lret
sub
shrl
bnd
jge
int
cmp
xor
push
gs
push
hlt
mov
jecxz
cmp
in
and
fcmove
jge
aam
test
fwait
cmpsl
sbb
aaa
jno
push
mov
sub
add
xor
mov
inc
dec
lock
roll
stos
in
inc
sub
sbb
frstor
push
xchg
cmp
mov
movsl
lds
push
adc
dec
jae
jge
cmp
xchg
jp
xchg
inc
lea
sub
or
sbb
rcr
adc
mov
dec
xchg
mov
sbb
mov
add
cmp
inc
mov
inc
outsb
popa
ss
fisttpll
inc
cwtl
xor
insb
cmp
fcmovnu
and
jb
fsubrl
or
or
outsl
push
mov
adc
jno
js
jo
ret
inc
xchg
jge
add
sbb
scas
out
adc
nop
jl
sbb
push
dec
mov
xchg
ljmp
mov
daa
lods
jns
filds
inc
jecxz
dec
pop
mov
sahf
fstps
jno
push
jns
jno
daa
sbb
push
push
popf
clc
dec
mov
mov
adc
ret
or
movsl
mov
iret
hlt
cmp
jo
nop
fidivrl
dec
pop
or
sub
andb
pop
movsb
imul
sub
push
test
sbb
sub
and
xor
stos
insl
mov
fsubr
lahf
lret
jbe
push
push
sub
adc
fisubl
push
in
shlb
cmpsl
mov
sahf
loopne
bound
lods
adc
xchg
sub
es
push
movsl
pop
insl
ret
loopne
xchg
test
rcrb
es
mov
inc
into
sub
or
sbb
out
adcl
dec
test
stc
and
lea
test
cmp
cmp
repnz
mov
add
dec
daa
fimull
sti
inc
mov
les
adc
cli
popf
fcoml
jbe
inc
movsl
lea
icebp
movsb
adc
paddq
add
push
inc
out
lods
ret
popa
xor
push
mov
push
inc
in
stos
out
adc
mov
jg
in
mov
lahf
stc
mov
xor
jmp
sahf
mov
adc
inc
test
scas
aaa
xchg
mov
cmp
mov
pop
lcall
inc
jno
push
lods
sbb
into
pusha
negl
sarb
iret
inc
ffree
mov
adc
xor
stos
xchg
enter
in
cmc
nop
je
insl
sahf
mov
push
fsubl
push
lds
lahf
daa
xor
sarb
push
sbb
inc
fstpt
and
popa
mov
fcmovnb
loopnew
shr
gs
pusha
fwait
xor
xor
ds
movups
test
dec
jb
xlat
repz
scas
inc
pop
faddl
and
nop/reserved
push
out
adc
das
pop
dec
pusha
js
inc
ja
out
cmpsl
xor
pop
pop
decb
jge
cmp
or
in
push
xor
lods
xor
dec
std
mov
mov
gs
xchg
sbb
dec
pop
cmc
sbb
fwait
cmp
pop
lods
stos
pop
lret
xchg
clc
movsb
shll
inc
loopne
mov
sahf
jns
pushf
jnp
sbb
mov
inc
pop
cmp
outsl
daa
sub
adc
push
mov
inc
aam
push
cli
jg
loopne
test
xor
popa
lods
push
cwtl
and
xchg
pusha
xchg
pop
in
mov
sti
mov
addr16
fistl
mov
ja
mov
pop
adc
sub
pop
icebp
adc
dec
mov
lock
jg
sbb
cmp
jl
xchg
add
dec
pop
mov
scas
cwtl
andl
adc
mov
push
andl
pop
les
leave
cmc
adc
lret
lret
push
std
fcomps
jo
mov
pop
mov
popa
loope
xchg
aas
stos
or
out
push
mov
mov
or
mov
cmp
mov
pushl
inc
std
mov
dec
fdivl
outsb
mov
sub
sbb
jbe
inc
and
popa
fs
or
jne
or
add
shll
mov
test
mov
pop
mov
lret
sub
je
inc
dec
push
aas
aaa
jmp
cmpsl
push
stos
test
fsubr
cwtl
or
or
sbb
sub
fistl
movsb
cmp
push
in
aad
ja
stos
inc
shrb
push
mov
test
pop
test
cvtps2pd
ss
out
aad
dec
xlat
jns
mov
addr16
cltd
idiv
adc
in
stc
adc
stc
subb
sub
sbb
lods
loop
or
mov
jecxz
mov
das
test
inc
fisubrl
xchg
fdivrs
pop
pop
out
push
xchg
repz
mov
mov
xchg
repnz
subl
mov
int3
cmp
lods
inc
xchg
movsb
cmpsl
ret
in
aaa
push
lock
push
mov
into
test
cltd
or
mov
lock
imul
xor
lea
pop
jmp
inc
les
adc
xchg
adc
adcb
bound
sub
pop
out
je
leave
frstpm(287
movsl
cld
push
xorb
gs
jg
mov
jno
pop
mov
fsub
cmp
mov
push
or
cmp
xor
push
insl
or
lret
mov
dec
adc
out
mov
mov
xchg
xor
dec
mov
dec
lcall
cmpsb
push
sar
pop
mov
out
jnp
mov
es
in
aam
outsb
xchg
jmp
shrl
aas
and
das
pusha
xor
and
das
insb
jecxz
js
or
lahf
arpl
aad
in
push
in
movsl
leave
loope
out
lahf
cmpsl
sbb
mov
add
cmp
repnz
andl
scas
dec
xor
std
call
cld
mov
cs
jb
rorb
shrb
or
pop
rol
in
insl
andl
clc
pop
loope
shrb
cli
adc
sub
fsubrp
inc
sub
xlat
xor
mov
test
test
fimull
xchg
pop
lret
add
popa
cmp
in
mov
jg
mov
aad
xor
mov
push
mov
lcall
mov
iret
lds
popf
xor
cmpsl
icebp
or
int3
adc
push
mov
fists
jns
push
imul
fisttps
fimull
repz
add
test
ffree
cs
xor
mov
ljmp
daa
inc
mov
and
pop
or
sub
adc
mov
jb
or
js
sub
jo
push
adc
stos
cmp
leave
movsl
in
jae
dec
fists
fdivrs
mov
mov
cmp
xor
call
inc
fs
call
sti
nop
mov
push
push
fsubrl
loope
pusha
jge
sbb
roll
pusha
loop
cld
pop
in
jnp
fwait
xor
add
addb
aaa
mov
push
xor
adc
fistpl
insb
or
stos
mov
push
adc
cmp
mov
imulb
lahf
sbb
mov
loop
ss
call
fbld
int3
bound
rolb
scas
aad
mov
clc
testl
adc
in
test
jne
repz
xchg
jno
adc
popa
lcall
inc
test
aam
jne
fcmovne
fistpl
jnp
fsubrl
jae
dec
movsb
cmp
push
out
aaa
into
adc
lods
addr16
push
pop
mov
inc
out
cmc
jo
rcl
or
dec
lods
aaa
jo
push
repz
and
call
into
sbb
jne
push
pop
repz
xchg
inc
or
sub
pop
lret
lret
dec
mov
jecxz
add
xorl
adc
inc
cmpsl
enter
test
mov
sub
mov
or
mov
push
and
xchg
and
jp
pop
mov
xchg
dec
and
mov
push
sub
mov
stos
adc
aam
mov
ja
cmp
filds
sbb
loopne
mov
and
mov
bound
jg
push
mov
int
lea
cmpsl
out
test
mov
inc
sahf
in
test
shrb
sbb
push
pop
pusha
xchg
jns
pop
mov
add
in
add
jmp
std
push
mov
roll
aad
imul
sub
shrd
shlb
cmpl
in
add
xchg
fists
pop
or
xor
ja
add
jle
xor
insl
dec
mov
mov
sbb
push
lods
adc
mov
fsts
aas
cld
sbb
or
scas
mov
shrl
sahf
inc
mov
or
pusha
in
pop
loop
jno
js
into
dec
shlb
jecxz
call
loope
jne
lahf
bound
rol
xchg
and
imul
rorb
shlb
cwtl
rorb
xchg
repz
mov
inc
icebp
ficoms
xchg
pop
rcl
insb
out
and
sub
push
in
sbbl
repnz
pop
push
inc
fsts
add
xor
pop
fwait
lock
aad
loope
jae
sub
mov
ljmp
jno
pushf
xchg
mov
jbe
sub
lret
mov
insl
aad
lcall
inc
icebp
les
cmp
in
mov
out
jecxz
rcll
data16
shrl
rol
loopne
popa
ret
inc
pop
mov
dec
add
in
in
movsl
push
nop
add
movsl
pusha
insb
mov
lret
lret
gs
out
sti
out
inc
stc
inc
cmp
mov
cmp
insl
push
mov
pop
fmul
rcr
xchg
fsts
push
inc
inc
sti
fs
outsb
mov
push
pop
rcr
sbb
ret
adc
push
jno
out
adc
fistpl
mov
cmp
pop
jmp
add
in
adc
or
insl
fdiv
cltd
test
arpl
idivb
cwtl
pop
inc
cmpsl
adc
repz
or
xchg
cli
hlt
pop
mov
jecxz
andl
sbb
out
aam
or
ja
mov
mov
mov
mov
aas
iret
and
push
lock
push
push
dec
in
mov
sbbb
test
push
jl
lret
cmpsl
pop
lods
pusha
xlat
jbe
pop
jbe
stos
pop
outsl
out
stos
adc
add
and
push
cmp
push
js
jp
mov
pop
pop
sub
ss
std
push
mov
mov
push
push
test
and
movsb
xchg
cmp
sub
or
jl
mov
pop
outsl
cmp
call
pop
aaa
and
mov
iret
add
cs
ret
movsb
push
jns
sbb
sbb
mov
das
in
daa
mov
mov
int3
into
movsl
das
inc
loopne
push
xchg
subl
lods
adc
scas
inc
push
movd
mulb
pop
xchg
jle
cmc
stc
pop
repz
pop
adc
daa
jmp
imul
jno
lods
ret
add
test
imul
fstl
mov
mov
xor
xlat
mov
lret
addr16
or
lcall
jmp
mov
or
cmpsl
mov
fdivrs
sbb
out
push
adc
ret
mov
cmp
push
fidivrl
and
scas
inc
and
xor
mov
stos
mov
push
sbb
inc
aam
insl
jnp
addl
push
or
xchg
dec
xchg
adc
xchg
arpl
rol
inc
mov
in
nop
push
xchg
insl
or
rcl
xor
or
pop
xchg
cld
mov
pop
ja
mov
jns
push
pop
adc
into
cs
cs
out
adc
scas
movsb
jge
and
xchg
jl
adc
sbb
mov
push
jo
jmp
inc
pop
inc
xor
and
scas
adc
mov
sbb
sub
jmp
std
repz
jmp
sub
cmp
xchg
pushf
fcmovb
dec
lock
or
pusha
add
push
sub
pop
xchg
das
test
inc
xchg
jo
xchg
inc
fmuls
jne
add
dec
shlb
enter
cmp
movsl
sub
add
loop
std
mov
dec
mov
fs
lcall
inc
xor
ja
mov
xchg
xchg
or
sbb
jmp
pushf
xor
mov
scas
cmpsl
sti
into
je
rcl
mov
or
pushf
and
pop
pop
negb
mov
dec
mov
push
in
lcall
lods
xchg
mov
hlt
jns
addl
inc
pop
adc
lretw
fisubrl
ret
xorb
sbb
jb
call
mov
nop
cs
cmp
jg
adc
pop
enter
das
addr16
lods
push
ret
xchg
mov
adcl
imul
cmpsb
out
or
jp
shlb
fs
cmpsb
sbb
js
inc
mov
mov
mov
xchg
jnp
pop
sub
pop
into
pop
iret
cmp
pop
outsb
lock
and
dec
cmp
inc
jmp
lock
test
add
cli
iret
dec
mov
lahf
push
inc
fiaddl
lock
xchg
push
mov
in
add
sub
scas
add
sbb
adc
stos
in
out
push
jmp
stc
jg
lea
pop
sti
int3
lds
test
cmp
and
pop
hlt
xor
xchg
ds
ds
sbb
sbb
outsl
adc
icebp
sub
mov
out
dec
pop
movsb
mov
ret
adc
pop
lret
sbb
pop
fs
mov
shrl
xchg
test
add
add
jecxz
jecxz
adc
testl
dec
std
or
add
sub
add
cltd
pop
adcl
cld
jns
jnp
cltd
xor
lret
push
add
adc
lods
push
shll
mov
mov
lods
inc
xchg
inc
xchg
sbb
popa
in
in
inc
mov
xchg
test
cld
jge
outsl
scas
insb
jge
jbe
imulb
xor
popa
mov
pavgw
sub
push
mov
mov
lea
cmp
sub
push
imul
pop
repz
mov
js
insl
cmp
dec
call
es
sbb
lea
and
xchg
hlt
das
xchg
xchg
scas
lcall
aam
mul
ret
idivb
repnz
push
inc
fisubs
aad
hlt
lock
je
adc
addr16
xchg
push
popf
stos
test
sbbl
incl
nop
push
mov
cld
mov
pushf
cmc
iret
inc
mov
rep
lahf
gs
xchg
int3
and
into
roll
or
aas
pop
jg
std
mov
negb
sub
jmp
mov
int3
xchg
and
leave
test
sahf
adcb
pop
adc
or
fwait
arpl
fsubrs
movsl
mov
mov
int
arpl
dec
rol
out
adc
lahf
sub
jae
outsl
push
jge
ret
enter
sbb
test
sub
fiaddl
testl
pop
add
outsb
sub
jnp
shr
sub
lods
cmpps
insl
sub
scas
in
or
lods
add
mov
rcrb
rol
pop
jecxz
shl
ret
pop
sarl
int3
mov
or
mov
adc
mov
mov
push
add
mov
fidivrs
bound
test
repz
insl
shlb
pusha
fiadds
int
das
clc
add
cmp
lods
repz
adc
sti
sbb
lods
add
jb
outsl
adc
leave
test
outsb
cld
push
mov
int
mov
repnz
dec
stos
mov
addr16
push
ja
xchg
call
mov
push
inc
sbbb
pop
arpl
out
mov
fisttps
pop
rolb
cwtl
inc
mov
sbb
pop
movsl
inc
mov
scas
pop
gs
push
push
mov
das
push
xor
sub
js
mov
jmp
lret
jmp
int3
push
inc
popf
jno
inc
arpl
sbb
jg
fisttps
sub
jp
and
inc
sti
nop
lret
sti
mov
mov
lret
xchg
push
jo
das
ror
gs
jbe
add
je
dec
faddl
xlat
icebp
in
push
and
mov
mov
mov
mov
lret
jp
sbb
mov
out
dec
sahf
lcall
mov
and
fsubr
repnz
sbb
imul
pop
out
mov
leave
in
std
addr16
lds
and
vaddsubps
jae
add
pop
dec
mov
cltd
in
outsl
mov
imulb
or
ss
in
sub
cmp
scas
push
sti
lea
mov
push
add
adc
cmc
mov
jb
das
movsb
pop
imul
test
stos
ficompl
jne
movsb
in
imul
cmpsb
pop
mov
jbe
xor
stos
sbb
xchg
pop
mov
push
test
jge
std
movsl
aas
dec
jnp
lock
dec
add
mov
xor
push
mov
push
sub
sbb
addr16
jp
fildll
les
idivb
push
sbb
ret
cmp
pop
les
out
jg
out
mov
call
mov
test
ficoml
fmull
pop
push
pop
loope
lret
in
stos
jo
aaa
pop
xor
popf
cmc
inc
adc
mov
pop
adc
xchg
mov
add
loope
mov
xchg
pop
adc
icebp
test
lret
jne
test
dec
mov
fisubl
fistl
nop
ret
popl
cmpsl
push
neg
ja
data16
mov
xorl
adc
xchg
sub
test
repz
mov
int
and
add
das
cwtl
clc
jmp
dec
sub
int
fmul
popa
or
iret
pop
mov
call
stc
pushf
add
cmpsb
es
add
insl
mov
jmp
ret
adc
test
xchg
sub
dec
test
imul
shl
lods
test
aas
cmp
mov
lods
mov
xor
insl
nop
stos
inc
popa
decb
add
int3
fsubr
pop
jp
mov
cmp
rorb
adc
cmpsb
std
adc
cmpsl
scas
dec
clc
sbb
shl
cli
push
lods
mov
rcrb
loopne
cmp
dec
push
outsl
inc
push
jo
pushf
jne
xor
push
loop
cs
dec
ret
icebp
lahf
dec
jecxz
mov
outsb
jl
adc
cmp
cmp
pushf
fwait
lcall
dec
dec
gs
mov
ret
sbb
mov
outsl
push
jge
sub
mov
pusha
mov
pop
iret
mov
pushf
sub
lods
loopne
roll
inc
fdivs
fcompl
jnp
hlt
add
test
mov
sbb
xchg
mov
inc
notl
rep
data16
test
out
cs
pop
ret
cmp
dec
mov
cmc
icebp
dec
jecxz
in
add
push
push
in
mov
notb
jmp
imul
pop
scas
or
xor
push
sbb
mov
lcall
movb
xor
mov
sbb
xchg
rcrl
loope
mov
push
dec
mov
lahf
bound
das
sti
jnp
xchg
jmp
push
push
jle
sbb
adc
aaa
pop
rorl
mov
std
ja
and
inc
test
testl
movsl
push
pop
jle
inc
cld
xor
xor
or
pop
mov
ja
pop
out
jne
int3
or
js
mov
add
insl
test
arpl
inc
xchg
inc
push
jb
test
flds
sbb
addr16
xor
cmp
outsl
mov
ret
scas
insb
leave
mov
sbb
mov
in
bound
dec
fs
fwait
cmpsl
movb
movl
cmp
outsb
push
mov
mov
sub
pop
ret
xor
dec
mov
inc
inc
ret
in
sub
cmp
jle
mov
or
sub
shlb
sbb
test
pop
in
jae
adc
cwtl
and
sbb
adc
pop
pop
fwait
or
sub
cld
aam
push
cmp
jle
xor
sub
fcmovnb
mov
xchg
mov
data16
stos
std
and
and
jl
jne
les
das
jb
push
testl
fxch
pop
andl
xor
add
sbb
pusha
push
daa
test
mov
jo
push
in
js
xor
sar
inc
lods
outsb
push
out
iret
std
jo
xor
pop
xor
in
pop
mov
fisubl
iret
add
fidivl
lds
adc
and
mov
push
enter
sbb
test
cmp
stos
iret
fldlg2
mov
es
xchg
cmp
push
rcll
fstpt
sub
sahf
and
testl
aam
mov
call
or
daa
repnz
std
cmp
fisubrl
ljmp
push
xchg
mov
jns
mov
cli
lea
mov
pop
outsb
in
xchg
ret
stc
add
add
aam
adcb
aaa
das
mov
ror
push
xchg
sub
sub
out
scas
fisubs
fcmovbe
fsubs
and
push
sti
jle
fists
insb
xchg
push
outsl
nop
rorb
subl
mov
dec
mov
xor
pop
es
std
ljmp
mov
push
out
or
test
aas
shr
imull
ret
sarb
dec
scas
jle
and
mov
outsb
sbb
aas
adc
pop
cmp
scas
inc
cltd
sub
add
xchg
clc
mov
sub
cmc
mov
cmpsl
mov
inc
cmp
pop
xor
fwait
sbb
push
mov
cmp
push
ficoms
mov
jp
inc
fwait
int3
stos
daa
mov
data16
mov
sti
fisubrs
gs
inc
sbbb
mov
mov
call
in
hlt
adc
cmc
or
fwait
insl
loope
hlt
cltd
mov
sti
scas
pop
fbld
lock
gs
inc
and
adc
push
in
mov
mov
jo
adc
fwait
cmc
mov
cli
pushf
or
jne
inc
stc
xor
push
fisttps
adc
std
popa
push
fucom
sbb
push
mov
sbb
push
fldcw
nop
stos
dec
inc
mov
frstor
aas
incl
std
test
ljmp
sub
cmp
rorl
testl
xchg
sub
mov
fmul
rcl
std
mov
xor
pusha
jno
dec
mov
jle
inc
inc
inc
push
dec
dec
fcmovu
dec
dec
nop
inc
dec
jecxz
xor
push
xor
xor
movsb
mov
mov
jg
xchg
xchg
mov
jecxz
sub
mov
cwtl
add
dec
arpl
jmp
cwtl
in
mov
sub
fldenv
mov
dec
dec
dec
movsl
cmp
inc
sub
adc
jge
addb
sub
cli
test
clc
fnstenv
sbb
insb
sbb
lret
sbb
sbb
and
lods
adc
inc
push
sbb
push
lret
aaa
paddb
sbb
not
or
pusha
sub
cmpsl
mov
sub
mov
ljmp
adc
push
and
sub
mov
leave
cli
xchg
sti
dec
out
test
jno
scas
shlb
int3
shl
pop
and
inc
sbb
movsl
mov
mov
sub
inc
ds
inc
sbb
ja
mov
pop
fmul
popf
xor
in
pop
scas
jbe
adc
jnp
das
movsb
nop
lods
subl
xchg
xchg
mov
sbb
xchg
clc
xchg
sub
sbb
and
mov
je
mov
in
xor
push
push
adc
push
push
mov
xor
lods
adc
jns
push
mov
or
push
push
test
mov
push
jmp
and
arpl
ljmp
fstl
or
cwtl
jno
mov
dec
lret
fcmovbe
push
cltd
testb
out
inc
xchg
dec
cmpsb
les
push
cmc
add
fdivrl
cmpsb
lea
xor
xor
fidivrl
in
mov
insb
mov
aam
xor
je
in
movsl
in
and
adc
outsb
test
outsl
insl
add
adc
xor
cmpsl
adcl
lock
lcall
push
stos
clc
mov
aaa
add
push
dec
jmp
push
xchg
popa
pop
rclb
cmc
imulb
mov
pop
dec
mov
sbb
dec
sub
jno
sub
pop
cmp
cmp
jl
jg
cmp
sbbb
nop
loop
addr16
add
and
popa
xor
adc
testl
rcl
lods
test
pop
mov
lea
divl
aad
cmp
mov
sbb
flds
inc
push
inc
jmp
jecxz
inc
cmp
inc
outsb
sub
xor
lock
sub
dec
add
enter
pop
mov
es
repnz
pop
outsb
dec
int
popa
fs
or
dec
xchg
int3
sti
scas
mov
mov
and
add
int
adc
adc
inc
stos
fs
push
cmpsb
lock
inc
fidivs
sti
fwait
negb
mov
inc
xchg
je
mov
loopne
lods
mov
jns
adc
bound
enter
xlat
dec
hlt
pop
pop
inc
fimuls
cmp
dec
lods
loop
test
int
mov
out
jno
adc
dec
cs
mov
stos
in
fdivs
shll
cli
push
sahf
push
adc
lret
pop
call
and
mov
mov
test
fstl
pop
mov
loop
imul
arpl
icebp
aaa
xchg
fcompl
add
add
push
xor
jno
divl
gs
push
mov
mov
sbb
jle
sahf
lods
mov
sarl
cmp
adc
out
cs
or
inc
ds
pop
iret
inc
push
in
out
jns
insb
fs
jns
lea
mov
pop
mov
pop
mov
fsubl
inc
pop
cmp
rclb
or
sub
xor
lahf
call
push
in
lretw
daa
and
je
dec
sub
addr16
cmp
shll
xlat
arpl
out
cmp
jns
push
fs
sub
in
rcl
loop
inc
dec
jecxz
cmp
xchg
adcb
aad
jge
sahf
pop
lds
add
cmp
push
push
fdivl
fldcw
inc
gs
ljmp
pop
jp
dec
mov
push
cmp
push
pop
mov
pop
mov
xchg
add
ss
xchg
adc
aam
test
rolb
mov
pop
movsb
js
xchg
cmp
pushf
ja
xor
test
xor
ljmp
pop
imul
xchg
in
add
xor
stc
popf
fsubrp
cwtl
mov
iret
in
jno
jg
out
cmp
mov
pop
jg
outsb
pushf
pusha
adc
insl
pop
xor
xchg
sti
ret
lahf
sub
fcoms
mov
push
jge
and
rcr
loopne
test
lock
or
jbe
dec
cmpsl
bound
fcmovne
addb
pop
shll
inc
push
cli
repz
or
add
mov
fadd
sbb
cmp
repz
pop
arpl
fsubrs
mov
push
ja
cwtl
test
aaa
xbegin
pop
add
dec
mov
cmpsl
sub
mov
jl
ret
fmull
pop
int
xor
jl
add
daa
lahf
std
jge
das
rorl
repz
outsl
repnz
add
inc
push
pop
clc
arpl
dec
mov
out
dec
mov
ds
ret
sub
insl
mov
sbb
add
sbb
xor
test
sbb
shrb
lret
inc
cmc
mov
leave
jecxz
cltd
xchg
test
cmpsl
ljmp
or
lea
push
popa
in
fs
cmp
inc
loope
popf
dec
xor
add
into
xor
inc
cmp
ss
xor
push
sub
mov
stc
cmp
les
pop
fidivl
out
push
daa
mov
adcb
xor
jo
mov
adc
fs
jge
cmp
fildll
adc
jecxz
lret
sbb
adc
fisubs
push
loop
mov
adc
and
xor
push
test
ret
ret
testb
or
xor
les
div
mov
stos
sbb
mov
ror
das
mov
imul
jnp
pop
out
pop
jmp
cmc
mov
enter
cmp
out
insl
orl
sub
ja
outsb
test
dec
scas
lock
inc
iret
xchg
pop
bound
ja
and
cltd
shr
add
sub
sub
pusha
rep
out
mov
rcl
mov
mov
lcall
sahf
cli
push
pop
xchg
jle
mov
sub
pop
shll
jnp
lock
stc
nop
xor
roll
fdivs
jecxz
pushf
pop
fs
xchg
xchg
sbb
out
add
xlat
xchg
pop
or
jg
jne
pop
jecxz
roll
adc
movb
mull
cmp
ret
cmp
je
xchg
xor
rcrl
insl
loopne
sbb
or
int
ja
push
mov
adc
addl
aam
into
or
enter
sbb
adc
shr
decl
scas
push
adc
xor
mov
fsubr
mov
mov
sbb
push
subb
add
and
cmp
fwait
inc
rep
ljmp
test
pusha
xor
mov
pop
in
sub
xchg
sub
ja
std
leave
lods
push
stos
mov
jmp
add
xlat
in
rolb
push
inc
add
dec
xor
mov
out
in
mov
test
ja
subl
imul
ss
ja
pop
fs
mov
mov
cmp
dec
push
ds
or
pop
sbb
cli
inc
mov
xchg
stos
and
mov
das
mov
push
popf
pop
int3
dec
cmc
test
lret
xor
inc
push
movsb
lock
xchg
push
jnp
cmp
pmaddwd
lahf
lret
dec
bound
xchg
mov
mov
neg
je
out
push
aaa
popf
fcmove
cmpsb
cmp
stos
insl
in
call
fnsave
add
mov
inc
fs
negb
mov
mov
stc
test
lds
insb
xor
dec
ja
pop
sub
mov
out
popf
sbb
fldenv
aaa
ja
dec
lods
cld
sub
out
add
fnstcw
xchg
mov
push
xchg
movsb
sbb
jge
test
fwait
xchg
mov
leave
cwtl
mov
popa
in
test
sti
fstpt
loopne
sbb
push
je
pushl
mov
or
adcl
xchg
or
mov
pushf
outsb
push
sub
adc
mov
popf
push
mov
pop
jle
cmpsl
xor
es
test
pop
call
pop
shr
inc
ljmp
ja
mov
sarb
lret
idivl
mov
sbb
outsl
xor
adc
in
pushf
or
inc
xchg
and
movsl
dec
fldcw
inc
repz
jo
push
and
test
xchg
iret
sbbb
and
adcl
pop
adc
loop
aad
push
aam
dec
pop
dec
mov
xchg
pop
adc
mov
inc
fxch
jmp
popa
shll
mov
fcomp
xchg
into
lods
pop
outsb
rclb
sub
in
push
pop
pushf
push
call
mov
and
inc
xlat
not
cmc
mov
adc
mov
mov
push
mov
cmp
xor
test
adc
mov
lds
iret
gs
add
xor
cltd
jne
adc
gs
jmp
inc
fsubr
mov
test
loopne
inc
divb
adcb
pop
into
frstor
in
cmp
orb
orb
mov
fldcw
addr16
or
and
dec
imulb
scas
xor
in
ss
fisttps
or
cmp
push
xlat
and
insl
xchg
inc
pop
xor
divb
pop
insl
adcb
enter
loopne
pop
in
addr16
popa
mov
lahf
pop
jbe
lods
or
cmpsb
bound
scas
xor
mov
icebp
pushl
sub
mov
mov
je
push
pusha
sbb
lods
out
add
pop
nopl
int
outsb
pop
inc
je
xor
cmpb
sbb
push
ret
jnp
imul
popa
sub
lea
hlt
addr16
insl
add
jae
mov
ret
fisubl
out
ss
shrl
xor
pop
add
jecxz
loope
in
xchg
push
lcall
inc
mov
mulb
pop
gs
add
andl
sub
lods
cmp
ds
rolb
jg
dec
lods
pop
push
sub
es
add
mov
jecxz
or
xor
mov
int
lret
ja
outsl
push
and
push
push
movsl
aas
add
jbe
xor
dec
or
mov
sbb
cmpsl
sub
js
daa
lods
jecxz
pop
xchg
add
mov
out
fstl
cmpl
loope
aas
fadd
loop
aad
xchg
inc
jg
or
xchg
rclb
push
loopne
sbb
add
ja
mov
dec
xor
out
andb
add
into
mov
das
aaa
cmp
inc
fisubl
xchg
inc
decb
sbbb
pop
adc
loop
shll
mov
ljmp
int3
sbb
pusha
popf
xchg
push
in
call
mov
pop
and
pop
xchg
sub
shrb
fildl
mov
push
cmp
out
sub
xchg
mov
addr16
lods
push
xchg
popf
ja
mov
and
test
jns
sbb
push
fnstenv
andl
nop
inc
dec
fisubs
mov
jnp
xor
or
mov
push
mov
xchg
xor
push
repnz
sub
inc
lock
pop
iret
push
imul
iret
repnz
and
movsb
test
jns
sbb
fsubrl
insl
mov
mov
jae
xor
roll
fwait
ljmp
adc
test
xchg
mov
jns
inc
fwait
test
ljmp
cmpsl
fistps
lods
push
andl
je
or
out
add
scas
inc
in
mov
and
sub
insb
pop
pop
and
mov
push
rcl
mov
jmp
dec
dec
add
adcb
mov
jae
push
stos
xchg
add
inc
jl
mov
std
cltd
inc
into
cmc
mov
mov
adc
mov
pop
and
sahf
lcall
lcall
shl
repz
fstpl
sub
rclb
mov
icebp
adc
dec
xor
inc
test
mov
adc
mov
hlt
fstps
ror
bnd
loop
stos
push
adc
std
movsl
dec
mov
push
pop
and
jecxz
fildll
dec
push
sub
cmp
in
loop
mov
dec
jns
imul
mov
dec
mov
mov
ret
mov
add
flds
repnz
add
sub
mov
xor
xorl
xchg
fbld
int
sar
incl
mov
test
test
jmp
fadd
mov
adc
inc
xor
cmp
into
pop
les
adc
mov
fildll
mov
cmpsl
adc
cmc
out
mov
sbb
frstor
sub
cmc
leave
inc
dec
jge
divl
push
cld
gs
xchg
scas
ds
lea
imul
outsl
loope
xor
or
cwtl
out
inc
in
jns
xchg
jl
testb
loope
xchg
fidivrs
lcall
in
mov
xor
push
adc
popa
or
pop
flds
fucomp
into
data16
xchg
jo
jle
mov
mov
insl
lret
in
ror
dec
scas
mov
cld
xor
dec
inc
add
sbb
push
jnp
lret
and
fdivl
roll
jmp
or
cmp
sbb
popw
adc
or
fnstcw
pop
pop
scas
add
add
mov
repnz
xchg
mov
mov
inc
std
bound
in
push
sbb
dec
jo
lret
lret
sti
cmp
xor
loopne
sbb
clc
and
dec
insl
sahf
inc
arpl
sbb
sbb
sahf
cmp
dec
xor
fildll
arpl
cmp
mov
push
in
arpl
test
xlat
pop
ds
sub
dec
pop
cmp
or
mov
mov
sub
fistps
inc
xchg
jne
jmp
cmp
push
out
jne
and
xchg
pop
jbe
leave
enter
adc
mov
lods
xor
adc
aad
mov
and
enter
sub
cmc
push
and
aas
aam
push
pop
rep
les
lcall
gs
mov
xor
xchg
cmp
push
arpl
push
stc
mov
add
push
mov
push
push
mov
push
cli
lret
push
stc
pusha
mov
mov
cmpsl
inc
push
movb
mov
mov
jb
aad
mov
ss
int3
stos
in
mov
arpl
xchg
ljmp
cmp
dec
fistps
sbb
js
scas
test
and
dec
sbb
xchg
clc
xchg
sbb
out
dec
mov
sbb
mov
push
jno
sarb
jmp
adc
hlt
idivl
fwait
pop
xor
jno
push
out
into
xchg
sbb
pop
sahf
mov
addb
test
and
mov
clc
or
scas
adc
push
lahf
loopne
adc
xchg
sub
ja
adc
nop
sub
dec
pop
aam
add
sahf
cmpb
mov
cwtl
lds
add
sub
fidivrl
add
xor
bound
das
pop
loope
sub
add
or
and
aaa
out
jne
movsb
mov
pop
mov
test
sbbl
lock
xchg
sub
lea
cli
into
fsubp
jne
push
push
in
cs
popf
adc
jecxz
mov
adc
cs
pusha
inc
inc
cmpsl
loop
bound
lret
nop
inc
psubusw
cltd
push
sub
lods
inc
movsl
in
lods
aaa
cltd
lret
bound
push
and
pop
mov
popa
xchg
pop
xchg
adc
das
movsb
mov
in
fstpl
lcall
add
inc
test
cmp
sarb
mov
mov
add
cmp
loope
push
pop
test
inc
out
inc
ja
cmp
adc
jle
xor
pusha
aam
shrb
cmp
nop
xor
enter
pop
inc
lods
mov
je
mov
dec
cmpsb
adc
mov
jmp
jne
movsb
lcall
fisttps
iret
adc
in
test
stc
into
data16
sarl
pop
cltd
sub
test
fs
cltd
outsb
add
sti
rcrb
pusha
stos
add
orl
adc
cmp
out
popf
adc
sub
in
cmpsb
jno
cmp
out
jecxz
inc
in
ljmp
push
adc
or
aam
nop
xchg
orl
sub
fwait
imul
cmpsb
int3
xor
mov
imul
push
mov
inc
mov
lds
sbb
mov
lret
push
ret
or
xchg
xor
inc
adc
sub
sbb
in
rcr
icebp
out
jne
xchg
mov
jb
mov
rcr
jns
mov
hlt
jge
push
xchg
clc
dec
mov
xchg
ss
loopne
adc
lret
adcb
fiadds
inc
fnsave
imul
adc
adc
lods
into
sub
cltd
stos
sbbl
jge
test
in
data16
movlps
mov
add
hlt
dec
pusha
cmp
idiv
jnp
sub
or
repz
fs
test
adc
mov
mov
iret
dec
sub
cmp
or
dec
xchg
mov
lahf
cmp
inc
inc
js
enter
push
mov
lea
sub
inc
aas
into
rorb
pop
inc
xchg
rorb
test
mov
mov
out
lcall
in
sahf
xor
xchg
adc
stc
adc
push
jae
ljmp
cmpsl
push
aas
out
add
push
int
cmpsb
nop
sbbl
fs
lret
in
xor
loope
jl
arpl
roll
aad
dec
inc
mov
rcl
into
movsl
test
daa
adc
insb
inc
pop
xchg
cmp
das
pop
sbb
shlb
inc
jle
test
push
mov
dec
jbe
shrl
nop
pusha
div
dec
push
ret
shlb
add
rorl
mov
fcoms
rcl
cmp
scas
sbb
jae
mov
rcll
push
mov
xor
jne
dec
dec
inc
movsb
adc
sarl
and
mov
push
mov
imulb
xor
pop
lock
cli
push
rorl
cmc
add
adc
or
inc
jb
push
lods
push
push
lret
mov
enter
jmp
lods
loop
xor
mov
push
icebp
movsl
lock
sub
loope
enter
pop
fs
mov
arpl
iret
push
cltd
js
push
lock
dec
sub
movsb
jle
cli
xchg
fisubl
rol
fstl
jle
inc
ret
insb
repnz
fs
mov
sbb
jmp
in
out
pushf
shrb
scas
add
push
clc
lret
adc
jns
fidivl
cmpb
jl
xchg
mov
dec
adc
lods
js
xchg
sub
movsb
scas
pop
pop
sub
mov
int
xchg
mov
cmpsl
lds
dec
sub
jmp
ljmp
scas
push
mov
adc
adc
dec
aad
jecxz
pushl
jmp
aaa
lcall
in
shlb
sub
sub
xchg
out
cld
rolb
dec
mov
outsl
sbb
and
push
mov
sbb
add
pusha
mov
adc
test
jae
xchg
jp
stc
push
or
add
hlt
frstor
jecxz
mov
popf
in
icebp
or
or
lods
cmp
push
imul
mov
or
leave
or
mov
out
insl
pop
repz
addr16
hlt
cmp
test
mov
sub
mov
mov
ret
repnz
mov
pop
push
cmp
cmc
or
cltd
or
movsb
sbb
mov
lods
xchg
xchg
push
sbb
loope
ss
xlat
loope
out
dec
pop
mov
mov
inc
push
in
cli
xchg
jbe
cwtl
stos
sbb
jge
stos
sti
and
mov
repnz
push
icebp
aaa
shlb
push
cmp
gs
xor
jbe
hlt
mov
jbe
cmc
rcll
aaa
pop
nop
in
hlt
and
or
ja
sbb
jp
xlat
sahf
jecxz
iret
and
and
push
xchg
sbb
icebp
and
push
inc
int
lcall
cli
sbb
stos
test
insb
sub
mov
popa
mov
add
cmp
xchg
mov
mov
push
mov
push
sbb
shll
sbb
fisubl
sub
std
xchg
push
daa
icebp
inc
mov
ss
test
xchg
xlat
xor
mov
clc
aas
push
or
imul
mov
mov
mov
lahf
push
cltd
test
fldl2t
pop
leave
xor
jl
sub
push
dec
in
xchg
add
sub
inc
movsb
nop
xchg
xor
cmp
fwait
add
stos
loope
stos
add
sbbl
cmp
aaa
xchg
imul
and
and
mov
jmp
jle
ss
aad
mov
dec
or
lret
rorl
pop
icebp
popa
fcmovne
mov
pop
repz
xchg
ficompl
cli
out
dec
out
pop
push
mov
sbb
adc
jno
mov
push
out
dec
or
movsl
sub
pop
inc
loope
and
fwait
pop
xor
mov
dec
fs
xor
jnp
popa
add
mov
clc
fwait
sti
cmp
stc
add
nop
hlt
fimull
jge
mov
sbb
mov
je
inc
js
or
mov
sbb
mov
imulb
mov
xchg
mov
aad
jmp
mov
loopne
xchg
mov
lds
or
push
mov
mov
push
sub
jecxz
cmpsl
add
cwtl
and
lea
sbb
adc
or
mov
xor
popf
aas
lods
pop
imul
adc
and
mov
mov
mov
rol
pop
inc
popa
sbbb
lret
pushl
mov
pop
andl
loope
pop
in
jae
push
ret
dec
aas
stos
add
push
jno
mov
push
ret
mov
jbe
push
fidivrl
pop
adc
lea
xor
fucomi
divl
scas
push
cmp
vaddsd
aaa
jbe
add
push
fldenv
pop
mov
mov
loop
movsl
sti
xchg
pop
cmp
pop
adc
xchg
mov
jmp
jbe
in
pop
fdivs
fildll
fsubrp
xor
das
mov
push
repz
arpl
push
insl
inc
xlat
xrelease
jno
push
fsts
rep
clc
sbb
jne
lcall
and
push
xrelease
ret
pop
push
int3
add
ds
xlat
push
sahf
sti
pop
mov
out
add
call
shlb
out
sti
push
enter
xchg
push
lods
scas
in
pop
push
lea
jmp
mov
cmpsb
lret
aad
xor
in
neg
jmp
push
sub
in
ja
out
ljmp
inc
lods
test
ss
and
xor
frstor
ja
fdiv
nop
rcl
and
push
scas
xor
mov
insl
fcmovne
xchg
mov
lret
fisttps
and
add
lods
inc
push
cltd
inc
test
dec
fnstsw
call
insl
repnz
orb
mov
push
sbb
xchg
pop
xchg
fistps
aas
push
fidivrl
push
outsb
cmp
mov
fldt
loopne
mov
fisubrs
and
fiadds
data16
xor
sub
sbb
dec
pop
fldenv
mov
std
fisttpll
es
jno
repnz
daa
push
add
adc
cwtl
dec
mov
and
sbbb
inc
inc
sbb
shrl
cmp
add
xchg
ret
ffreep
lea
xorb
pop
sbb
cmp
mov
cwtl
sub
and
ja
stos
inc
push
jne
push
cmpl
js
inc
test
clc
or
jnp
xor
push
cltd
test
arpl
das
es
pop
pusha
jb
inc
xor
cmpl
add
pop
xchg
nop
mov
pop
xor
cmp
repnz
inc
or
mov
fbld
movsl
push
hlt
xchg
cwtl
jge
movsl
mov
sub
xchg
shr
xchg
and
popa
ja
es
pop
imul
jo
push
call
dec
sub
pop
xchg
fcmove
orl
sub
icebp
jnp
and
cld
xchg
mov
sub
xchg
fidivrl
cmp
cmpsl
insb
je
sbb
or
cmp
jbe
hlt
mov
cwtl
aas
lock
enter
lcall
gs
mov
int3
jg
sub
mov
push
mov
jp
mov
movsb
ret
std
or
adc
mov
push
test
sti
xchg
add
jp
pop
jnp
jmp
mov
jb
push
push
out
test
push
test
lret
push
daa
mov
cmp
ss
mov
outsb
add
int
xchg
pushl
inc
gs
sbb
in
xor
jne
jmp
cld
or
loopne
bound
decb
or
mov
add
pop
dec
adc
xor
dec
icebp
pushf
push
inc
scas
inc
stc
push
inc
or
dec
jle
clc
lret
lret
add
mov
loopne
push
push
sbb
mov
inc
mov
test
push
adc
sahf
xor
jg
inc
pop
int3
adc
cmp
cmpsl
mov
jl
lret
popa
es
and
and
cmp
inc
pop
jbe
test
shl
in
lods
sbb
push
cmp
movsl
call
rcrl
in
stc
and
mov
push
sub
setp
cmp
imul
xor
lea
sbb
cmp
cmc
cld
xchg
ficompl
mov
xor
fiaddl
nop
push
inc
stc
cmp
pop
ret
into
and
pop
mov
test
inc
test
xlat
cmp
test
xchg
or
add
mov
xchg
xchg
in
daa
pop
mov
ret
adcb
test
or
xchg
mov
das
stc
mov
stos
imul
arpl
aas
or
cmp
lock
or
lock
adc
adc
nop
dec
enter
mov
hlt
movl
pushf
jmp
pop
xchg
xchg
nop
dec
test
nop
pushf
inc
xor
adc
push
jae
ljmp
dec
out
pop
xchg
push
sbbb
pop
int
in
push
adc
sahf
mov
sti
cld
push
adc
mov
inc
stc
add
ljmp
mov
pop
sbb
xchg
mov
mov
frstor
test
cmp
push
mov
pop
push
sub
jmp
push
pushf
bound
nop
rcl
ret
loop
lcall
insl
jge
js
add
push
adc
fs
adc
xor
jmp
mov
ss
js
cs
mov
test
xchg
sub
adcb
aad
mov
mov
lahf
call
test
daa
movsl
mov
fdivrs
xor
mov
lret
xor
aam
fwait
cwtl
pop
mov
jne
ja
mov
jecxz
mov
lret
cmp
popa
mov
test
mov
or
inc
mov
ja
xchg
fs
pop
adc
int
mov
xchg
repnz
mov
stc
outsb
add
mov
dec
jecxz
into
push
aaa
daa
adc
loop
push
lret
test
pop
xor
xchg
cmpsl
xor
mov
pop
ljmp
cli
adc
into
xchg
ret
outsb
mov
enter
arpl
ror
das
push
push
insb
int3
cmp
sub
in
mov
adc
fsubrl
stc
test
stos
mulb
pushf
pop
movsb
dec
xchg
into
movsl
roll
enter
jg
lret
mov
xchg
pop
notb
add
jb
dec
aaa
mov
in
xchg
cmp
repz
pop
cmp
imul
xor
cld
gs
daa
or
out
sub
dec
jns
mov
push
cmc
cld
dec
es
xchg
jl
sahf
cmc
setbe
mov
push
xor
dec
cmpsl
push
pop
cmp
mov
outsb
aad
lret
les
lock
cmp
jg
xor
pop
inc
fwait
cld
mov
shrl
jge
pop
add
xchg
pop
mov
outsb
aas
push
push
mov
pop
cs
ficoms
mov
adcl
cli
push
in
iret
cltd
mov
jb
jnp
push
and
inc
sub
cmp
cmp
dec
popf
fs
aam
adcl
bound
mov
lret
mov
push
jle
cmpsl
mov
push
add
icebp
out
loope
gs
xor
lds
cmpsl
dec
iret
loopne
int3
lret
dec
loope
mov
nop
dec
idivb
lods
inc
imul
xor
nop
mov
xchg
jbe
mov
jne
out
or
stos
xchg
push
mov
ret
punpcklwd
sbb
popa
pop
xor
and
xor
iret
xchg
fistpll
mov
cmpb
push
enter
int3
mov
ficoms
or
push
pop
mov
movsl
cmp
cmp
inc
push
pop
popf
push
testl
xchg
pop
es
push
not
sub
adc
add
inc
dec
adc
or
pop
arpl
mov
fnsave
out
movsb
mov
mov
and
aas
xchg
insl
inc
aas
sbb
jns
fwait
push
lret
and
xchg
test
dec
mov
mov
pop
lods
rcrl
sub
dec
mov
pop
in
imul
jmp
mov
rcrw
fstpl
mov
cltd
lods
enter
sbb
pushf
inc
add
std
sub
sahf
and
jl
adc
rcll
push
movsl
push
inc
outsl
inc
test
pop
repnz
sahf
gs
pop
add
xchg
xchg
sbb
stos
icebp
dec
push
mov
sub
inc
jecxz
fimuls
dec
je
andl
mov
lods
inc
cmp
lock
pop
and
push
daa
data16
pop
icebp
mov
fisttpl
outsl
andb
shlb
add
jae
test
sub
loopne
sbb
push
pop
stos
aas
fwait
xchg
jecxz
scas
mov
and
inc
mov
ljmp
mov
arpl
es
push
shrl
jb
in
sub
sbb
inc
pop
push
int3
scas
adc
or
mov
mov
cltd
xchg
outsb
add
sti
push
mov
push
es
insl
sbb
xor
cmp
ljmp
inc
pushf
jecxz
bound
mov
fcoms
bound
sbb
addr16
scas
adcb
sub
hlt
sbb
xor
popa
inc
out
jns
mov
xchg
fiadds
pop
mov
sbb
mov
fucomip
sub
dec
mov
loop
repnz
jne
or
test
sarb
daa
inc
imul
dec
jo
bound
outsb
rolb
fdivs
mov
xchg
or
cmp
aam
and
cmp
gs
icebp
and
jg
mov
jns
and
aam
xchg
sub
ret
mov
mov
mov
fldenv
mov
mov
ss
mov
xchg
stos
and
xchg
movsb
mov
pop
jno
iret
in
stos
cmp
cltd
xchg
or
pop
mov
arpl
add
es
call
stos
mov
fidivs
xchg
shll
and
jb
addb
stc
mov
inc
popa
cmp
clc
push
stc
push
les
sub
negl
shll
test
repz
push
cmpsl
lret
adc
and
test
lods
xchg
add
icebp
mov
jp
ss
outsl
out
lret
adc
scas
mov
push
out
cmp
pop
push
aaa
outsb
inc
in
outsl
addb
jns
push
leave
in
into
inc
xlat
std
xchg
inc
cli
inc
xchg
pop
cmc
ret
jo
pop
sub
nop
or
subb
pop
ret
cld
mov
lcall
xchg
xchg
jno
shrb
imul
jns
xchg
sub
arpl
add
or
pop
cltd
es
sti
pop
rcrl
pop
imul
outsb
call
sbb
ret
pop
test
lret
decb
out
mov
xchg
std
pop
gs
fxch
sbb
mov
js
fldcw
mov
pop
inc
lods
lds
add
mov
inc
cmpsb
lea
les
or
aam
xchg
cmp
add
stc
mov
xchg
dec
mov
mov
ret
pop
lock
cmp
cs
pop
shrb
into
shll
insl
cmp
sti
cmp
sub
sbb
test
push
adc
xor
sbb
add
or
inc
js
jmp
jle
and
in
push
lods
ret
and
pop
push
push
call
adc
outsb
mov
sub
inc
mov
or
xchg
adc
and
enter
shrl
pop
ljmp
jnp
daa
ljmpw
jbe
and
cmp
mov
sub
mov
and
push
clc
push
fists
xchg
xchg
sbb
cmpsl
sbb
fcomip
stos
in
sub
xor
inc
aaa
into
jno
cwtl
lock
xchg
jno
xlat
xchg
mov
arpl
push
xor
rcrl
inc
xor
or
adc
fnstsw
cltd
cli
call
mov
in
test
lods
fnsave
pop
repnz
push
or
lds
div
or
and
pop
cwtl
adc
mov
dec
sbb
pop
xor
or
rcll
pushf
sti
out
daa
outsb
iret
pop
lret
bound
in
mov
incl
iret
aaa
fmull
and
arpl
and
loopne
movsb
test
std
lds
das
push
std
sbb
push
add
enter
outsl
push
fdivs
sbb
bound
and
lock
xlat
dec
test
inc
stos
orl
test
rorb
out
adc
scas
mov
flds
bound
xchg
inc
mov
insl
bound
scas
imul
sub
push
lea
cmc
lea
lcall
testb
ljmp
xor
dec
dec
and
out
sub
push
mov
addr16
xor
je
add
sub
test
addr16
cltd
sub
sbb
mov
push
xchg
js
xchg
cmpl
pop
sub
push
jl
loop
jae
stc
add
lods
and
dec
pusha
push
std
fildll
outsl
stos
xor
pushf
sarb
repz
and
xchg
insl
ds
mov
sbb
inc
fadds
pop
dec
pusha
arpl
push
sbb
daa
ja
cmp
push
movl
lds
cmp
imul
sbbl
fbld
js
pop
and
dec
mov
cld
mov
jle
adc
xchg
movsb
and
pop
in
push
loop
add
xchg
cmp
cmp
das
outsl
lock
stc
or
mov
add
push
pop
pusha
and
cmp
jecxz
testl
lock
jle
dec
adc
mov
les
in
adc
cltd
das
ds
out
xchg
pop
dec
lds
or
nop
push
pop
enter
hlt
jle
sub
fisubrs
push
jnp
or
test
mov
cmc
inc
adc
pop
mov
imul
fisubl
hlt
scas
rcll
mov
pop
adc
add
xchg
and
mov
inc
sbb
mov
lock
xor
mov
sub
sahf
sbb
push
in
adc
test
call
or
push
inc
addr16
rcr
loope
xchg
in
mov
fisttpl
xlat
sub
adc
add
out
sub
jno
jo
cmc
repz
xchg
mov
push
aas
js
cmp
enter
cmp
mov
pop
xchg
pop
sete
je
sub
push
push
xchg
jbe
mov
in
std
lock
pop
dec
add
xchg
cli
outsb
jne
insl
sbb
in
ja
lods
inc
sbb
push
cwtl
mov
mov
in
pop
add
js
cmc
jo
dec
imul
add
data16
out
mov
scas
xor
push
outsl
scas
add
movsb
and
movsb
inc
push
mov
cmpsl
in
orb
mov
mov
sbb
sbb
inc
pop
int
mov
fldenv
subb
xor
fwait
xor
pop
loopne
stos
popf
inc
or
int3
int3
pop
lcall
push
hlt
or
or
jnp
popa
fcoms
icebp
mov
gs
push
in
jne
iret
jb
sbb
aaa
jle
movsl
mov
and
or
ret
rcrl
ss
cli
jecxz
es
mov
jmp
cld
adc
pop
push
fwait
cmpsl
dec
shrl
push
sbb
mov
ss
loop
pop
pop
jb
mov
xor
and
lock
push
and
mov
adc
push
xor
pop
sbb
lea
add
rorb
lods
jbe
and
les
mov
dec
fmull
fimuls
daa
inc
in
gs
loope
sub
and
rolb
in
jno
or
popf
or
mov
xchg
inc
test
add
arpl
call
fnsave
mov
aas
addb
negl
clc
lds
lret
shll
push
push
in
mov
xchg
mov
int3
cli
es
mov
inc
sahf
mov
les
sbb
sahf
shll
pop
loopne
nop
cwtl
cs
pop
mov
mov
sbb
mov
mov
out
movsl
or
add
lahf
jnp
and
adc
inc
insl
bound
mov
cmp
test
aam
jns
jo
mov
and
and
out
cmp
into
popf
adc
jno
or
das
ja
shrl
lods
push
leave
mov
in
hlt
mov
pop
add
pop
jb
out
inc
clc
mov
jg
lcall
mov
xor
add
add
pop
sahf
int3
mov
shlb
and
mov
mov
push
lcall
sub
dec
movsl
mov
xlat
or
loopne
cmp
mov
pusha
pop
test
jle
movsb
ret
jns
iret
movups
fadd
rcll
hlt
jp
mov
fiadds
lret
sahf
or
fbld
adc
mov
mov
daa
and
pop
aaa
and
jl
shl
mov
add
int3
dec
lcall
aas
inc
fldcw
fyl2x
add
cmp
inc
in
std
mov
mov
iret
pop
push
xchg
jnp
aaa
mov
xor
in
cmp
aaa
or
cmp
mov
fisubl
xlat
push
mov
imul
ret
jno
sarb
mov
iret
pop
shll
addr16
lret
xchg
pop
out
or
test
sbb
cmp
aad
pushf
ja
notb
adc
outsl
cmp
mov
sbb
imul
jnp
push
xor
mov
mov
scas
fidivs
dec
or
cmpsb
cmp
rcll
out
aaa
jmp
scas
inc
fisubs
xchg
test
dec
enter
insl
out
jecxz
sub
pushf
add
inc
push
inc
andb
and
cmc
fs
jl
stos
das
ret
push
xor
fbld
stos
ljmp
daa
push
jne
adc
les
adc
rclb
stc
ret
xchg
mov
xchg
stc
mov
das
jb
pusha
and
or
arpl
push
loope
mov
push
es
or
mov
subb
repz
dec
adcl
dec
xlat
or
add
inc
aam
cmp
in
sbb
movsl
test
pop
add
enter
cmp
inc
jo
lret
pop
loopne
mov
and
or
pop
cld
xlat
sub
pop
rcll
aam
cs
sti
es
and
lret
cmp
mov
aaa
sarl
cmp
je
mov
push
pusha
nop
sub
rcrl
jle
push
loope
push
push
sub
add
add
fcmovnb
in
sbb
in
add
mov
cmp
mov
or
jae
or
decl
adc
repz
sub
add
bound
rcrb
jp
mov
mov
xlat
fwait
mov
clc
aad
or
notb
inc
add
sbb
dec
jmp
pop
push
cwtl
inc
int3
lret
pop
bound
inc
jns
pop
loope
mov
aaa
divb
or
outsb
mov
jns
repnz
adc
mov
leave
lcall
fsubs
in
mov
and
lret
mov
loopne
xor
pop
mov
loope
xchg
sbb
adc
mov
pop
and
inc
loop
gs
jg
addr16
inc
inc
and
mov
sar
nopl
dec
pop
push
or
ficoml
adc
cmpsb
mov
push
push
push
mov
pop
sub
mov
and
xchg
sbb
mov
xchg
adc
ret
fcmovb
lret
inc
imul
dec
dec
adc
lahf
mov
add
imul
jbe
fwait
int3
fstps
mov
jge
mov
jae
shll
sbb
lcall
xchg
bound
addl
jmp
imul
pop
jg
jl
push
jo
pusha
insl
in
jne
mov
leave
xchg
mov
adc
xlat
adc
dec
lods
pop
jmp
xchg
lods
pop
sbb
lahf
jns
push
push
ja
lahf
test
cmpsb
inc
mov
and
das
icebp
jle
mov
dec
aad
outsb
adc
aam
jne
push
xor
es
push
repnz
or
mov
sbb
jmp
push
insb
and
dec
adc
stos
faddl
push
or
and
xchg
lret
add
mov
adc
outsb
xchg
xchg
lds
mov
mov
sbb
ljmp
add
xchg
jmp
xchg
insb
push
xor
add
fs
test
lret
loopne
call
leave
xor
push
adc
sbb
repnz
mov
ljmp
imul
popf
add
addr16
repz
and
call
pop
sub
jl
xlat
cs
popf
xor
mov
icebp
cmp
test
fucomip
pop
shll
repnz
mov
xlat
popf
push
shlb
mov
add
jne
enter
mov
jne
jo
cli
xchg
in
and
mov
lahf
stc
in
rcrl
xor
test
outsl
hlt
xor
jae
mov
mov
xlat
cmpsb
sub
mov
aaa
into
jno
add
dec
mov
orl
mov
imul
clc
nop
dec
add
mov
fldl
cmp
outsl
mov
stos
inc
cmp
mov
mov
add
cmpsl
push
dec
data16
jne
std
stos
push
sahf
sub
xchg
dec
ffree
dec
out
std
fsts
xchg
aaa
jne
sub
sbb
xchg
and
mov
mov
cmp
pop
mov
inc
lods
pop
enter
outsb
adc
cmpsl
movsl
fwait
popa
daa
mov
dec
mov
int3
iret
xor
adc
lret
fnstcw
xor
cmp
xchg
xlat
insl
ss
dec
out
inc
mov
imul
shrl
shrl
mov
or
sarl
cmc
pop
mov
or
ja
and
jnp
pushf
and
rcll
inc
pop
arpl
xchg
push
inc
fsubrl
lock
mov
das
jmp
mov
pop
jae
xlat
dec
ds
inc
adc
dec
in
or
xor
sahf
fbstp
and
mov
jb
loopne
leave
pop
add
test
xchg
pop
lods
orl
jne
mov
sub
push
dec
rclb
and
nop
sarl
fists
shll
in
aad
mov
out
outsb
int
pusha
decl
pop
add
shr
xchg
adc
shrl
add
add
push
ljmp
xchg
scas
xor
icebp
or
stos
mov
inc
jnp
cld
hlt
call
lock
xchg
jle
pop
ret
in
sahf
pushf
nop
push
push
les
mov
sbb
data16
or
cmp
sub
mov
mov
test
scas
negb
cmp
or
push
fcmovu
fwait
jl
inc
stc
and
aaa
ficomps
mov
mov
shl
cmp
outsb
repz
cmp
push
fdivrs
mov
pop
add
jne
loope
or
adc
inc
iret
lret
mov
xor
gs
and
pop
cld
inc
into
sub
pushf
std
xchg
into
outsl
fadds
sbb
xorl
pop
mov
movsl
movsb
cmp
push
pop
add
sti
ret
inc
lods
dec
in
test
sub
dec
add
fistpll
int
mov
jo
imul
xchg
sub
dec
cli
mov
sub
inc
cltd
sub
inc
fistpl
xchg
xlat
test
inc
xchg
repnz
rcl
sub
dec
mov
shr
jns
dec
je
sbb
jnp
ret
dec
jb
shll
icebp
adc
ficoms
mov
inc
sti
pop
pop
inc
stc
cmp
pop
dec
sbb
push
push
jp
stc
cmp
sbb
xchg
mov
ret
fbld
jmp
es
push
movsl
mov
mov
xor
pop
out
xor
adc
xor
push
mov
cmpsl
notb
jnp
fwait
adc
and
xchg
sub
pushl
loopne
dec
or
push
daa
or
out
lock
cmpsb
in
mov
push
pop
cwtl
cltd
mov
mov
xchg
xor
push
cmpsl
ss
and
push
inc
daa
sbb
int
loopne
inc
outsb
mov
push
movsb
or
movsb
bound
jmp
jo
dec
rcrl
or
cmp
je
mov
jmp
adcb
xor
inc
push
or
aam
and
mov
idivb
rclb
ret
and
inc
popa
cmp
test
in
or
sub
jmp
fucomi
and
inc
jmp
push
test
pop
jecxz
pop
mov
mov
cmp
cmp
mov
xor
cmp
xchg
dec
inc
loop
adc
mov
cmp
pop
pop
loope
sub
icebp
ds
dec
or
popa
cmp
xchg
int
mov
rcrb
inc
mov
jecxz
mov
enter
dec
lods
or
lret
pop
bound
xchg
mov
mov
test
shl
or
xor
dec
ds
pop
aas
inc
inc
test
js
pop
and
cmc
sbb
push
mov
adc
mov
pop
icebp
mov
hlt
js
sbb
xlat
mov
dec
or
dec
xchg
sbb
loopne
loope
xchg
ror
jecxz
mov
xchg
bound
scas
add
cld
int3
pop
mov
test
and
cltd
sahf
je
lods
subb
scas
xor
loop
add
jecxz
push
push
dec
mov
jl
or
orb
clc
lods
push
jne
fisubs
data16
rclb
fcomip
rol
pop
icebp
icebp
repnz
outsl
or
add
in
and
cmp
xor
mov
mov
add
jmp
mov
lods
add
fsubr
out
imul
fucomp
sub
movsb
aam
popf
pop
imul
xor
xor
fcmovne
sub
rcll
mov
xor
add
cmp
les
xchg
jg
mov
icebp
add
push
push
sub
int
test
add
pop
xchg
or
clc
and
in
fidivs
iret
cltd
arpl
lods
and
mov
cmp
lret
mov
and
pop
and
xchg
pop
add
dec
xlat
andb
adc
jb
out
xor
faddl
cmp
popf
mov
mov
fistpll
out
push
xor
sub
sti
add
fsubl
mov
mov
xchg
lahf
cltd
call
push
mov
mov
jg
jns
pop
enter
pushf
push
jbe
outsb
loope
sbb
outsb
dec
mov
mov
lock
cmpsb
rclb
cld
aas
repz
nop
into
adc
push
shrb
pop
negb
jne
add
add
cs
mov
and
xor
and
xor
sub
clc
sahf
jecxz
mov
mull
ficompl
leave
pop
push
mov
leave
ror
cmp
sbb
lods
out
push
xor
in
test
mov
mov
cli
call
hlt
adc
lods
xchg
pop
fcmovu
or
or
mov
filds
mov
push
add
jp
fcmovne
cmpb
pop
imul
xorl
fnstcw
scas
out
adc
aam
stos
push
mov
loopne
aas
xor
push
xchg
loopne
aam
movsl
add
xor
jno
stos
and
xor
ljmp
lock
inc
ret
add
pop
mov
lods
shll
cmp
js
js
jmp
adc
push
dec
std
mov
or
xorb
push
orb
rcrl
fwait
xor
insb
fiadds
cmp
push
and
sub
shlb
pop
mov
mov
gs
jnp
fmuls
mov
jl
popa
mov
jo
dec
loopne
sub
and
sub
fcmove
cmp
loopne
cmp
daa
pop
decb
jne,pn
add
or
push
out
add
stos
mov
insl
add
push
sub
or
inc
mov
mov
push
enter
in
pusha
add
and
mov
xchg
push
rcrl
push
or
out
aam
adc
xchg
dec
cli
hlt
adc
cmp
jb
jp
rcrb
test
repnz
mov
ret
hlt
cld
mov
je
repnz
add
movsl
mull
aam
in
cmpsb
and
xor
ja
xchg
or
roll
rcrl
mov
imull
pop
lods
sub
push
lcall
cmpsb
leave
fcom
lret
sti
inc
push
sbb
in
mov
mov
sbb
out
dec
movsb
xchg
outsb
and
mov
ret
mov
fsub
jb
sbb
dec
enter
xor
inc
out
aaa
jmp
inc
push
xor
in
daa
int
add
jnp
xor
jp
movsl
xorl
lahf
jmp
xorl
mov
outsb
bswap
adc
ss
add
fisubrs
push
lahf
repnz
std
pop
cmc
fs
daa
sbb
push
mov
cmpl
and
mov
cmp
mov
mov
out
fists
adc
inc
push
xchg
xchg
mov
cltd
shl
push
fwait
in
imul
sarb
pop
add
dec
jl
mov
mov
and
adc
gs
sbb
aam
cld
out
inc
inc
std
mov
pusha
sub
test
scas
dec
mov
inc
or
aaa
pop
sbb
pop
sahf
repnz
inc
push
sub
aad
cmc
mov
cmp
fwait
push
jnp
sub
andl
dec
adc
jle
daa
into
daa
cmpsb
sbb
stos
xor
and
loopne
andl
jecxz
cmp
repz
mov
std
jp
shl
mov
test
hlt
dec
inc
test
dec
aas
decl
loope
mov
sti
xchg
and
andl
lret
popa
xor
call
dec
pop
sub
xchg
pop
loop
cltd
ret
aaa
into
ficoml
loopne
sti
sub
ret
xor
sbb
dec
sub
stos
sub
mov
movsl
jnp
pop
and
cmp
pop
push
jns
aaa
mov
push
and
fnsave
je
mov
leave
int
arpl
mov
dec
das
les
dec
jge
pop
or
push
pop
pop
aad
scas
cmp
cmp
roll
xchg
call
and
jno
addr16
ficoml
push
test
icebp
xor
add
fisttpll
pop
sbb
push
ss
jg
mov
mov
jnp
scas
ds
pushf
ds
lods
movb
push
popf
pop
bound
lahf
mulb
daa
and
int3
cmp
shl
nop
ja
arpl
stos
das
cmpsb
shlb
jne
aad
fs
mov
mulb
enter
xchg
cs
fidivs
imul
out
iret
mov
std
arpl
loope
cltd
dec
pop
mov
cmpsl
mov
cmpl
sti
dec
sbb
pop
fnsave
inc
sahf
sbb
stos
jmp
mov
hlt
push
xchg
cmpsl
sub
inc
mov
adc
stos
xchg
cs
ret
cld
jle
mov
xor
xchg
jb
sbb
imul
outsl
daa
push
push
aad
jo
fimull
fucomp
cs
mov
out
lods
push
int
adcb
jo
pop
orl
mov
or
cmp
shl
fcmovnb
inc
fldcw
push
cmp
dec
xor
incl
push
imul
mov
lcall
insl
outsb
xchg
mov
mov
ficoms
stc
gs
sti
ds
dec
mov
pop
sti
xchg
push
add
je
mov
xchg
sub
sarl
xchg
pop
sti
test
fldcw
lods
lret
out
js
mov
je
add
ljmp
jl
cmp
cmp
outsl
rcl
aad
iret
sub
jnp
insb
or
sbb
mov
in
lret
sti
cmpsl
cmc
and
fwait
and
out
sub
push
inc
int3
sub
mov
push
or
sbb
mov
iret
xchg
ljmp
inc
popa
push
sub
shll
inc
movsb
repz
add
adc
movsb
std
aaa
inc
jbe
mov
call
in
std
sbbl
decl
fbld
bound
in
or
xchg
iret
shll
and
pushf
outsb
jo
mov
sbb
jg
int
adc
ret
iret
push
fwait
iret
enter
mov
data16
sub
cmpsb
imul
hlt
pop
sub
mov
mov
fwait
push
mov
test
lcall
pop
fiaddl
lods
arpl
fidivl
mov
es
adc
fidivs
jne
xor
add
inc
mov
add
mov
push
in
mov
loop
stos
stos
cwtl
and
shl
insl
out
lahf
xchg
mov
push
add
das
imul
adc
xchg
int3
mov
arpl
imul
pop
scas
in
xchg
fisubrl
shlb
in
idivl
jbe
xor
push
mov
in
jg
outsb
push
mov
ljmp
dec
jle
mov
cld
fidivrs
push
and
out
jne
test
xchg
xor
adc
jno
inc
movsl
add
pop
mov
or
adc
out
xor
xchg
xorl
xchg
jmp
cltd
inc
shrb
les
sbb
cli
xlat
gs
sbb
push
ret
fstl
cmpsl
jb
sbb
repnz
addr16
xchg
movsb
test
es
incb
lods
ja
jge
add
andl
cmp
adcb
xchg
pop
sbb
out
sub
in
cs
adc
sbb
les
mov
into
inc
rorl
and
pop
adc
dec
xor
fwait
sbbb
cs
ds
push
jno
ficoml
push
or
add
sub
out
leave
xchg
mov
inc
fwait
jmp
lea
into
mov
shll
insl
mov
mov
or
cmp
sbb
leave
cmpsb
loope
sub
in
inc
push
jge
push
xor
cmc
xchg
aam
xor
loop
sbb
ds
fnstsw
sbb
inc
subb
pop
or
test
and
cmpsl
addb
mov
aad
jl
push
xlat
or
pop
imul
sub
out
lds
add
fwait
hlt
scas
lcall
inc
popa
add
cmpsl
out
fwait
inc
adc
lock
std
pop
pushf
mov
inc
les
jae
int3
pcmpgtd
adc
adc
xchg
xchg
sbb
ret
mov
aas
dec
nop
les
jno
out
sbb
test
mov
or
push
xor
sbb
add
cmp
push
push
sbb
dec
inc
push
repnz
lock
fsubs
aaa
sbb
jp
dec
jnp
scas
jb
sub
lcall
ret
ljmp
je
xchg
inc
call
push
mov
sahf
sub
mov
xlat
and
jo
jecxz
cmc
xchg
push
fnsave
leave
sbbb
scas
loop
adc
gs
pop
adc
mov
into
rol
pop
xchg
jmp
popf
or
dec
in
imul
jg
sbb
dec
cmp
push
jle
and
cmp
fidivrs
sub
xor
sub
cmc
sub
jne
pop
enter
test
ljmp
je
enter
das
lock
aas
subb
jnp
fdivp
push
test
gs
cmpsl
sbb
cmp
xchg
outsl
inc
nop
iret
in
std
lret
mov
push
fs
loopne
mov
mov
mov
cmp
mov
outsb
add
mov
and
inc
jle
in
stos
mov
cmpsl
xor
jnp
sbb
inc
xchg
push
lods
test
push
mov
jno
nop
mov
pop
sbbb
imul
push
mov
inc
pop
out
test
mov
inc
or
mov
push
or
das
inc
pop
push
popf
sub
cmp
jo
mov
ds
ror
lea
in
divl
shrl
inc
push
aaa
or
js
sbb
push
push
or
xor
mov
ret
sub
das
xchg
pusha
jl
scas
and
mov
fdivr
adc
mov
fwait
das
in
add
mov
push
in
call
push
and
lret
shrb
popa
sub
mov
gs
sub
mov
adcb
push
add
adc
dec
clc
popf
lods
insl
movsb
mov
mov
fnstenv
sbbb
outsb
fstp
in
int
scas
xor
or
iret
inc
popf
fdivl
fnstcw
pop
pop
sub
xchg
add
cmp
in
inc
stc
adc
xlat
imul
mov
cmp
and
rcll
arpl
dec
push
sbb
jp
jle
stos
cmp
lods
cld
mov
call
ficompl
dec
xor
cmp
clc
add
scas
shl
aaa
fidivl
push
pusha
popf
cmp
gs
push
fistl
out
fucomi
dec
push
jg
xor
jnp
pop
in
mov
mov
mov
push
jg
data16
inc
push
sub
push
popf
insb
adc
pop
outsl
shr
pop
push
xor
adc
faddl
divb
push
push
mov
sbbl
mov
popf
das
xchg
inc
bound
scas
sub
fidivrs
jns
xchg
xor
xchg
mov
dec
mov
jl
cmpsl
xchg
sahf
orl
sahf
pusha
dec
push
inc
ja
jb
repnz
push
push
aam
rorl
inc
dec
int3
sub
jo
push
pop
push
adc
or
ret
cltd
mov
mov
add
add
cld
or
popf
fs
popf
or
add
jb
lock
lcall
add
lret
stos
inc
fcomps
mov
ficoms
ja
mul
scas
outsl
testb
movsl
test
jnp
dec
mov
jae
xchg
in
divl
pop
fists
mov
add
mov
lcall
mov
pop
icebp
movsb
insl
sub
mov
pushf
ret
push
sbb
mov
inc
mov
pusha
sbb
push
xor
ret
cmpsb
sbb
and
in
stc
push
xor
fildll
or
push
push
mov
xchg
shr
leave
adc
loope
inc
mov
ret
sbb
mov
jns
je
js
ljmp
push
inc
sar
andb
fcomi
mov
add
mov
mov
sahf
push
outsb
or
ficompl
rorb
mov
subl
push
ficomps
sub
and
push
ficompl
adcb
adc
imul
sub
test
cmp
sbb
push
jb
ja
cmp
pop
lods
adc
cmc
add
pop
js
fmuls
xchg
mov
push
add
cmp
and
lock
and
nop
push
add
add
shlb
sub
pop
in
in
and
add
mov
dec
inc
push
ficomps
sub
ss
mov
cmp
mov
jbe
mov
test
add
pop
sbb
out
add
sbb
adc
mov
cmpsl
and
jnp
cwtl
xchg
insl
leave
xor
pop
xchg
xor
dec
movsl
in
add
xchg
ja
dec
popf
inc
fsubrl
and
push
pop
dec
cmp
dec
stos
add
in
out
sbb
notb
dec
lea
xchg
fucom
stc
push
mov
rcl
imul
mov
push
lds
ss
xor
sbb
and
jnp
addr16
pop
popf
in
inc
mov
pop
lret
sbb
or
jne
mov
add
sub
inc
jno
xor
inc
jle
cld
mov
pop
outsb
jle
aaa
idiv
pop
imul
loope
cmp
leave
rcl
cli
sbbb
mov
lods
repnz
fs
loopne
or
rcrb
rcrb
insl
shlb
or
xor
fs
shll
xor
jmp
sub
inc
repnz
lock
sub
int
xor
xchg
pop
enter
jae
xor
xor
inc
pop
pop
sbb
ret
mov
movsl
sbb
out
lcall
push
in
xor
fldenv
lcall
xor
or
xor
mov
pop
loopne
lods
adc
and
xor
test
mov
fsubp
pop
add
sbb
push
bound
scas
out
sub
ljmp
and
mov
xchg
or
fwait
xor
js
xchg
scas
adc
pop
xchg
cli
mov
jge
shlb
pop
into
gs
stc
cmp
imul
and
or
dec
movsb
test
mov
clc
xchg
mov
adcl
ret
inc
jbe
jns
imulb
lcall
lcall
push
or
jecxz
push
push
clc
fwait
jae
adc
mov
pop
js
xchg
jnp
add
lds
scas
arpl
xor
or
pushf
ret
push
inc
and
inc
cwtl
decb
and
and
xlat
mov
shll
cld
mov
pop
loop
sbb
cmpsl
push
shl
sbb
mov
mov
sub
sbbb
cmp
lds
nop
popf
call
or
inc
into
pop
xor
mov
push
scas
popf
and
popf
loopne
adc
push
adc
test
fwait
sbb
inc
test
cwtl
push
insb
addr16
daa
mov
daa
dec
cmp
cli
dec
mov
orl
testb
mov
mov
dec
arpl
add
add
pop
jg
sub
lcall
std
mov
cmpsl
das
stos
push
mov
les
pop
cmpl
cmpsb
lds
dec
mov
add
ja
test
dec
es
push
mov
push
push
arpl
push
jbe
jge
cmp
jbe
xchg
sbb
imul
sub
outsb
mov
sbb
lcall
loope
sahf
imul
push
cmp
icebp
sub
and
std
pop
jb,pt
and
in
loope
cwtl
daa
clc
dec
mov
insl
xchg
mov
in
jmp
sbbb
cmp
imul
dec
dec
xlat
cmp
sub
pop
ss
in
clc
pop
leave
sub
enter
adc
cmp
add
xor
std
imul
ds
daa
cmpsb
and
push
das
test
icebp
outsb
or
lea
and
outsb
push
fnstcw
mov
or
mov
or
mov
or
in
jge
shl
add
in
clc
push
cltd
mov
cmp
xor
and
fcompl
add
sbb
jecxz
aaa
ficoml
mov
sarb
sarb
mov
xor
mov
and
inc
stos
sub
xor
xchg
sbb
mov
push
ljmp
inc
cmpsl
rcll
mov
subl
ja
std
pop
and
lcall
lret
or
lock
mov
push
stos
jne
jno
aaa
rcrb
jnp
out
lea
mov
mov
aad
jae
xchg
les
loope
xchg
pop
fldt
in
mov
dec
dec
mov
push
fsubrl
dec
loope
mov
icebp
sbb
hlt
hlt
mov
push
mov
jmp
movsb
rclb
jb
cmovg
imul
add
pop
inc
and
or
pop
in
sub
jnp
insb
mov
add
and
adc
mull
icebp
mov
xor
push
cli
ja
mov
xchg
mov
mov
inc
sub
dec
mov
cs
sub
call
in
sahf
xor
cmc
xor
into
dec
add
mov
adc
jo
je
mov
pop
shrl
outsb
xchg
mov
push
int3
inc
xchg
push
iret
cli
js
fcomi
in
xlat
cld
pop
jne
idivb
fs
xchg
xor
dec
mov
push
jo
imul
scas
ja
inc
mov
sbb
jbe
inc
ljmp
pop
jb
and
fcmovu
xlat
cs
push
cli
push
fsts
mov
movsl
xchg
adc
in
xchg
pop
mov
cmp
mov
xor
fisubl
negl
inc
sbb
arpl
packuswb
or
cld
lds
xchg
movsb
pop
xor
pop
lahf
hlt
pushf
push
cmp
inc
out
out
lahf
dec
fldl
leave
sbb
jp
and
and
or
dec
lea
lahf
and
mov
hlt
and
mov
pop
push
jmp
pop
fwait
mov
sub
mov
bndstx
sub
pop
mov
adc
mov
fnstsw
scas
adc
test
cli
lods
cmp
jae
stos
cmp
xchg
stos
loope
pop
call
shrl
jae
pop
jno
xchg
xchg
sti
xchg
adc
jl
jle
jge
jp
sbb
xor
push
out
mov
ds
mov
hlt
loopne
add
jp
lock
arpl
and
lock
daa
mov
into
cwtl
mov
push
add
repz
adc
mov
sarb
daa
inc
test
jl
push
cmc
inc
fsub
das
jae
fdivl
ficompl
mov
xor
dec
fcomps
adcb
sbb
jg
lret
inc
sbb
mov
push
sti
cmp
stos
jne
icebp
mov
mov
mov
and
pop
punpcklwd
cmc
fwait
popl
cmpsb
in
adc
add
or
inc
fisubrl
adc
push
mulb
imul
std
nop
sbb
mov
stc
popf
mov
sbb
cmp
push
xor
push
xor
shr
cld
mov
ss
cmp
xor
ds
imul
pop
mov
and
inc
xchg
xor
shl
mov
pop
mov
fwait
popa
aas
push
stc
lret
jns
addr16
lret
cmp
sbb
jb
jmp
icebp
dec
les
mov
or
movsb
in
jb
mov
test
pushl
jg
inc
lock
cmp
push
lods
xchg
repnz
jmp
jmp
lret
pop
pop
aaa
es
mov
icebp
adc
mov
int3
dec
xor
add
cmpsl
sub
and
fisubl
mov
loop
or
xorl
fisubl
xchg
dec
je
xchg
in
jecxz
pusha
mov
mov
insl
dec
rcr
out
push
mulps
es
mov
or
pop
cmp
adc
out
pop
imul
or
cmp
std
sbb
int3
lahf
push
ficompl
cmc
cmpsb
mov
aas
loop
add
jg
aam
popf
xchg
mov
fdivrl
loop
xorl
inc
mov
mov
sti
stos
adc
xchg
lods
cmp
and
or
outsb
ss
loop
push
inc
test
daa
mov
mov
daa
add
testb
jae
pop
imul
stos
cmpsb
dec
dec
js
jb
xchg
mov
int3
dec
jmp
subl
popf
imul
cld
and
push
xlat
rcl
jae
inc
push
jns
cmc
cmp
es
pop
cmp
xchg
jne
push
lods
lds
out
xor
jne
sub
ds
shrd
inc
in
xchg
lods
dec
clc
in
std
into
sub
mov
xchg
inc
dec
adc
inc
out
sub
inc
mov
out
add
inc
mov
sbb
test
lea
popa
call
push
sub
cwtl
sbb
push
sbb
push
out
push
call
out
xchg
mov
jge
hlt
in
rcrl
mov
outsl
pushf
ds
das
jo
cmp
mov
cs
nop
cs
es
jae
inc
into
daa
push
push
leave
cmp
pop
imul
mov
cltd
roll
fbld
push
mov
mov
cmp
inc
dec
lret
lahf
pop
or
dec
aad
fwait
out
add
adc
je
lret
push
mov
stos
es
cwtl
call
sub
mov
popa
cld
enter
dec
jmp
fxch
xchg
enter
pushf
inc
mov
dec
mov
push
ljmp
mov
dec
insl
jge
cmp
daa
pop
in
mov
mov
jb
imull
ret
mov
or
loopne
out
inc
mov
andl
pop
sahf
mov
out
or
sub
sub
push
and
fwait
dec
pop
adc
fs
push
scas
cld
mov
adc
jne
or
adc
mov
into
gs
dec
js
cmp
jecxz
in
call
hlt
test
daa
out
cmp
fxam
mov
lret
xor
sbb
pop
push
pop
lock
gs
add
or
push
shll
jns
add
xchg
stc
inc
out
pop
cmp
adc
inc
adc
cld
mov
stos
outsb
out
dec
lods
mov
rolb
mov
clc
or
ja
repz
and
inc
mull
cmp
ret
push
mov
jb
lods
in
gs
sbb
pop
jo
push
movsb
shll
scas
mov
dec
inc
xor
sbb
jmp
xchg
pop
sbb
test
arpl
das
shll
and
dec
les
adc
push
movsb
push
fbstp
sahf
jno
xor
jle
sarb
loope
fistpll
shll
xor
and
xor
cld
mov
sbb
cwtl
invd
inc
ja
pop
es
add
adc
mov
clc
sub
mov
fsubrl
mov
sar
sub
aam
imul
lds
rcl
pop
mov
dec
pop
sub
fsubrl
daa
pop
pop
hlt
jne
add
sub
push
push
xchg
inc
mov
jl
cmp
not
jle
pop
jmp
sbb
mov
sahf
pop
mov
icebp
xor
mov
mov
lret
xchg
dec
cmp
das
ret
cmc
inc
cwtl
jae
lret
insl
push
imul
inc
add
xchg
arpl
cwtl
cmp
js
adc
bnd
mov
gs
mov
mov
xchg
adc
jae
clc
and
dec
aad
pop
arpl
stos
mov
cmp
mov
jno
mov
mov
cmp
adc
mov
ljmp
or
lods
fldt
inc
in
ficomps
jp
popa
mov
test
xor
loop
filds
test
lret
fwait
pusha
jp
push
inc
out
push
in
mov
mov
or
rcrb
inc
inc
mov
loopne
mov
jbe
scas
es
cli
mov
xlat
movsb
fs
xor
inc
scas
mov
shl
and
les
push
popf
mov
not
call
add
cld
jmp
inc
out
sbb
fldcw
insb
jecxz
dec
push
shrb
mov
jg
pop
rorb
cwtl
and
mov
fmuls
lret
mov
jnp
pop
adcl
pop
popf
push
xor
xchg
pop
xor
pushf
and
test
and
in
push
jle
mov
xchg
dec
movsl
cmp
cmpsl
xchg
insl
sbb
sbbl
xchg
mov
loop
lods
cmc
cmp
sbb
pop
sub
dec
fistpll
dec
movsb
cmp
in
push
sub
ss
jo
fisubs
and
mov
lea
push
mov
fs
imul
mov
mov
iret
lret
and
pop
cmpsl
lret
out
scas
jno
loope
out
fsubr
lock
rcrl
imul
jne
insb
mov
imul
enter
pop
into
rolb
mov
mov
into
inc
arpl
fidivl
nop
inc
dec
loop
xchg
add
insb
jecxz
xchg
xor
out
in
mov
stos
mov
fnsave
mov
push
xor
or
clc
and
xor
mov
mov
fstl
stos
push
mov
xchg
mov
iret
addl
iret
mov
sbb
and
sti
push
into
js
pusha
data16
fidivrs
repnz
mov
fs
and
jl
pop
or
and
add
sbb
jp
pusha
and
inc
mov
sahf
pop
mov
jb
stos
stc
loopne
inc
lds
or
fs
lahf
xchg
mov
out
push
loope
cmp
dec
stos
cmp
cmp
xorl
mov
sti
je
cltd
in
inc
sbbb
inc
jecxz
xlat
cmp
cltd
mov
andl
push
dec
cmpsb
push
clc
mov
sub
xor
sbb
out
iret
movsb
and
mov
les
jl
test
in
stos
and
and
jl
inc
stc
jbe
jg
inc
mov
sbb
test
lret
sbb
and
out
mov
or
fadds
jg
sub
fsubrp
insl
jp
call
lea
ja
imul
nop
pop
adc
ss
int
test
jb
clc
xchg
imul
les
push
mov
aaa
out
icebp
sbb
mov
sub
out
jnp
adcb
jne
sbb
mov
or
inc
movsb
outsb
int
vhaddps
es
insb
adc
xchg
add
adc
dec
imull
adc
ja
mov
ja
js
out
mov
inc
fmuls
pop
mov
push
gs
fidivrl
mov
out
mov
dec
inc
lcall
push
mov
std
sbb
outsl
out
push
push
dec
repz
and
gs
mov
fs
and
mov
sub
lret
pushw
mov
sbb
sarl
dec
movsb
adc
cmp
xor
into
mov
loopne
and
sbb
arpl
mov
shlb
mov
loop
mov
jno
outsl
mov
inc
jne
xchg
cmp
filds
add
shr
or
mov
out
mov
jp
mov
jl
mov
cmpsl
xor
push
paddusw
cmp
mov
mov
inc
iret
cld
insl
loopne
out
bound
dec
push
mov
rcl
imul
mov
add
adc
cmp
pushf
test
scas
pop
aaa
sbb
movsl
das
icebp
inc
movsb
test
dec
inc
push
loop
les
xor
fcmove
into
push
in
jmp
mov
aad
sbb
aaa
jmp
cmp
mov
scas
mov
add
in
sbbb
clc
inc
fdivp
sahf
rcll
dec
push
jne
pop
les
pop
push
ljmp
jno
push
nop
iret
mull
lods
cmp
xchg
mov
lcall
in
test
jo
sub
dec
out
pop
mov
insb
mov
cmp
push
pop
xchg
sar
jo
cmp
sub
pop
xchg
sbb
fcomps
dec
jecxz
clc
jmp
ret
ljmp
mov
cli
ret
mov
shl
sti
xchg
pop
adc
movsl
pushf
jbe
in
jmp
adc
lret
enter
sbb
ds
dec
ds
pusha
lods
inc
xchg
jge
test
insb
push
repnz
sub
clc
adc
sbb
mov
sbb
jge,pt
jp
lahf
add
repnz
and
xchg
repz
or
pop
cwtl
pop
adc
jecxz
fwait
mov
popa
mov
jb
sub
pushf
popa
dec
dec
xchg
mov
filds
test
pop
test
repnz
mov
es
pop
andb
lret
adc
sub
in
test
shll
cmpsb
pop
pop
or
stos
aam
imul
mov
xor
pop
cmp
dec
xchg
test
fldcw
sbb
xchg
cmp
ret
inc
repz
adc
iret
jnp
cltd
jo
pop
add
leave
add
jle
and
xchg
mov
push
mov
jne
inc
daa
jle
and
nop
inc
adc
mov
inc
mov
leave
and
inc
stos
xor
mov
scas
nop
shr
pop
and
loopne
imul
push
add
fs
movsl
xchg
sbb
pop
mov
push
inc
mov
ljmp
ja
add
pusha
dec
sbb
loop
addr16
icebp
sar
pop
xor
mov
push
repnz
pop
xchg
sbb
inc
add
cmp
flds
mov
mov
jmp
dec
das
ret
xchg
dec
jne
dec
pop
xor
aam
fnstsw
or
and
scas
xor
jmp
xor
ret
sahf
orl
push
or
pop
rcrb
ror
and
jmp
std
cltd
adcl
mov
xor
imul
push
or
cmp
and
add
cs
jl
jbe
add
adc
dec
jbe
jle
and
lret
sbb
ljmp
jno
or
lcall
cmp
and
xchg
shrb
addb
xchg
cmpsl
sub
mov
out
sbb
cmp
push
pop
cwtl
or
cmp
data16
mov
mov
adc
xor
repnz
sub
leave
fs
aaa
cmpsb
pop
fcmovnu
xchg
loope
jns
scas
mov
fimull
je
jns
jo
jno
into
movsl
cmp
bound
in
mov
mov
cmpsb
lods
ficoms
lds
mov
dec
fimuls
push
sahf
mov
cmpsb
scas
add
cmpsl
jno
cmp
cmp
mov
in
dec
loope
addr16
in
fimull
call
mov
aas
mov
mov
push
pop
mov
neg
adc
add
mov
lea
ret
mov
add
adc
lcall
popf
es
lcall
es
and
xchg
mov
mov
adc
cmp
shlb
cmpsl
push
add
sub
sbb
xor
mov
push
inc
push
mov
ret
testl
xchg
jns
push
clc
outsl
les
mov
ret
sub
rcrl
xchg
ja
lahf
cmpsb
pop
clc
cmp
mov
dec
adc
repnz
mull
mov
cmp
imul
rorb
sbb
jbe
push
cmp
push
insb
into
adc
cmp
sarl
jne
loop
popf
xchg
fldcw
xchg
or
lock
shrb
or
add
jbe
gs
add
jbe
leave
push
ja
jae
pushf
sarb
idivl
les
adc
jne
inc
out
out
xor
lahf
add
scas
jmp
mov
lods
xor
insb
add
mov
fimuls
test
or
scas
xlat
and
xchg
cltd
out
inc
loope
xchg
sbb
push
arpl
dec
mov
out
aas
jecxz
pop
sbb
cli
adc
lds
mov
aam
inc
aam
push
in
cmpsl
ds
push
lret
bound
or
orb
push
addr16
rcll
pop
mov
sahf
mov
mov
fisttpll
stos
push
sbb
jne
adc
fsubl
rcl
mov
dec
mov
movsb
xorl
cmp
lret
or
fdivrl
mov
push
loop
stos
add
add
dec
adc
les
fistpl
sbb
xchg
in
push
sub
xchg
bound
gs
fbld
je
and
jnp
aad
aam
cmp
mov
mov
push
mov
je
cltd
pop
push
push
xchg
popa
add
push
comiss
andb
lahf
gs
xchg
push
mov
add
popf
daa
mov
add
jmp
mov
outsl
push
clc
scas
xor
xchg
fdivl
popa
aam
pop
cld
jae
jno
xchg
sar
adc
in
and
adc
inc
pop
xor
arpl
push
or
movhps
adc
or
cs
cmc
mov
xor
es
push
mov
fildll
mov
in
jecxz
push
push
inc
push
sub
in
cmpsl
sbb
fisubs
fabs
test
cwtl
cmc
and
ret
add
mov
mov
adcb
xchg
jge
fisubrs
sbb
xor
shrb
ja
mov
sbb
leave
mov
jecxz
mov
pop
loop
jmp
adc
cli
orl
xchg
mov
jge
subl
or
je
sub
xor
and
push
gs
pop
sub
in
jb
push
push
dec
in
je
lret
cmp
push
inc
push
rcr
out
xchg
add
cmp
mov
call
or
push
mov
icebp
mov
in
mov
cmpb
push
pop
xbegin
test
iret
call
lcall
xor
inc
aaa
enter
dec
dec
push
mov
test
inc
data16
dec
loope
nop
mov
stc
insb
shll
loope
sub
lds
imul
into
in
enter
decb
ficomps
repz
es
mov
bound
mov
jecxz
arpl
push
in
dec
inc
xchg
sbb
iret
pop
lds
sub
push
lret
jnp
sub
pop
pop
add
dec
jns
jb
mov
add
sbb
and
pop
xor
mov
sub
adc
sbb
mov
fucompp
rclb
sbb
cmp
jo
push
adcb
lret
add
js
pop
lds
add
sbb
pop
push
add
mov
fbld
mov
outsl
nop
stos
movsb
dec
shll
aam
sti
in
imull
pop
repz
cmc
out
pop
cmc
es
aad
loope
mov
mov
dec
roll
adc
rcrl
sub
sbb
pop
shll
into
xchg
jo
fcmovnbe
addr16
sub
and
hlt
testl
mov
fldt
push
pop
incl
jo
sub
adc
jmp
shrb
dec
in
sbb
mov
mov
jl
loop
popf
adc
sbb
lret
jl
mov
sub
inc
jl
or
popa
and
push
add
jge
adcb
push
cmp
mov
pop
mov
mov
pop
mov
cmp
insb
and
fcoms
mov
or
or
data16
push
or
sub
movsb
inc
imul
rcl
push
mov
jo
adc
je
cmpsb
and
xor
addb
sbb
imul
fldl
and
sbb
scas
and
mov
pop
or
movsb
xor
loop
pop
push
rcrl
xor
lcall
fwait
loope
add
mov
fldpi
mov
or
mov
aam
mov
push
adc
ja
pop
push
add
inc
loop
adc
mov
inc
pushw
sub
mov
add
jno
js
clc
repnz
stc
jecxz
sub
xor
jo
pusha
xchg
mov
dec
outsb
stc
mov
loopne
and
aad
add
sbbb
arpl
mov
lock
loop
mov
cmp
push
cmc
cwtl
aad
sbb
and
xor
adc
ds
dec
ret
fldcw
cli
jp
in
cmp
call
jg
or
imul
leave
pop
xchg
movsb
andl
imul
and
dec
aam
dec
outsb
popa
and
xlat
or
xchg
jmp
cwtl
ret
bound
cmp
inc
pop
clc
addb
ljmp
pop
xor
xor
movsl
mov
xchg
inc
jbe
in
xor
fwait
or
clc
mov
or
adc
fisttpll
dec
ljmp
out
mov
inc
push
sub
popf
leave
push
icebp
push
repz
fldpi
hlt
lret
lahf
inc
sahf
jns
out
inc
in
leave
cli
rcr
dec
xchg
cmpsb
jle
xor
popa
inc
popf
sbb
inc
bound
test
gs
jg
cmp
mov
lret
cld
leave
mov
rcrl
test
fdiv
pop
ret
pop
jle
dec
jg
ret
ss
gs
mov
jl
jecxz
mov
adc
pop
cld
les
push
mov
cmc
mov
pusha
aaa
cmp
mov
aas
les
mov
fbld
add
leave
xchg
ja
xlat
push
jnp
sub
push
sub
rclb
popa
shrl
sub
mov
push
stos
mov
pushf
mov
popa
clc
stos
mov
sti
xchg
insl
cmp
fimuls
nop
jnp
addb
or
xchg
mov
pcmpgtd
lock
inc
add
jbe
stos
fsubl
and
cmc
in
test
add
cmp
outsb
scas
pop
adc
mov
dec
ficoms
mov
and
jnp
out
in
sub
add
push
or
imul
add
push
call
mov
addr16
subl
mov
lock
fwait
stos
sbb
cmp
fwait
ljmp
mov
inc
cmpsl
mov
cld
pop
push
imul
add
or
ja,pn
aas
imul
aaa
out
push
jmp
out
in
fdiv
mov
and
push
sub
lahf
in
mov
pop
mov
jle
orl
cli
repz
jnp
or
mov
and
dec
loopne
pop
cld
ja
insl
dec
pop
jl
xchg
in
xchg
cli
xchg
inc
or
leave
cmp
sarb
pop
xor
sbb
xor
jl
fistps
rolb
and
jb
stc
mov
push
xor
dec
pop
inc
xor
push
arpl
dec
mov
push
loopne
test
sbb
ret
andb
out
notb
in
pushf
mov
loopne
rcll
out
arpl
inc
push
mov
int3
pop
cmc
insb
pop
movsb
lods
xlat
sbb
and
mov
or
xor
mov
or
punpcklbw
add
jp
dec
xor
dec
in
js
pop
mov
push
fildll
sahf
jl
gs
outsl
jg
addr16
mov
mov
inc
or
in
fsubl
outsb
sub
cmp
mov
lcall
int
fisubs
and
sbb
dec
dec
sub
pop
fistpll
ds
xchg
mov
add
out
in
pushf
pop
lea
jo
ret
pop
test
mov
lods
mov
subb
mov
sarl
mov
ret
clc
pop
scas
subl
push
add
movsl
pop
in
in
dec
xor
in
ja
dec
aad
movsl
inc
mov
int3
into
dec
xor
mov
jle
or
jecxz
mov
fistl
add
jmp
mov
jne
loopne
jnp
sbb
imul
ret
pop
push
sbb
fadd
sarb
jbe
or
ljmp
out
lret
push
pop
int
xlat
and
mov
cmp
repnz
and
push
insb
aas
pop
mov
mov
adc
adc
es
into
repnz
jmp
sbb
int3
mov
je
sub
inc
in
pop
neg
jne
imul
fildl
fistpll
inc
popa
stos
mov
cwtl
bound
xchg
xor
popa
data16
push
jge
arpl
push
mov
imulb
test
mov
data16
arpl
ss
inc
or
in
lret
or
sub
stc
sub
clc
jae
ret
cmp
and
pop
aam
in
mov
inc
jmp
pop
fistpll
mov
and
cmp
popf
seto
es
and
jg
push
daa
jle
ffreep
and
cli
sbb
movsb
dec
sbb
aas
repz
jl
es
fcoms
jge
popa
inc
call
in
adc
loopne
mov
add
inc
in
out
mov
xchg
dec
stos
push
push
lods
int3
sbb
dec
jge
adc
xor
mov
movlps
sub
sub
test
or
popa
xorl
fistps
pop
mov
insl
push
cmc
adc
push
jno
xor
sbb
or
outsb
mov
fnstenv
add
scas
xchg
xor
je
adc
call
es
test
mov
sar
mov
popa
inc
fidivs
mov
aad
shl
sub
in
xchg
xchg
pop
lahf
xchg
sbb
std
xchg
sbb
inc
in
out
mov
xor
repz
lret
mov
repz
roll
cmp
gs
in
ljmp
sub
in
mov
jno
xorb
mov
out
xchg
stos
mov
mov
or
sar
cmpsl
sbb
push
push
pushf
aam
push
lods
sti
jmp
or
popa
inc
out
jecxz
xchg
jge
daa
xchg
fsubrs
sbb
pop
ss
sbb
and
testl
lods
roll
jmp
enter
jecxz
mov
cld
jbe
lahf
cmp
jle
aad
in
sarl
xchg
loope
mov
test
xchg
insb
mov
mov
sti
in
dec
sub
cmp
push
inc
stc
mov
es
push
aas
repnz
push
js
pushf
or
std
fildl
gs
in
int
outsb
and
push
bound
sahf
mov
xchg
jae
mov
adc
push
cmp
jnp
dec
insb
push
insl
push
xchg
movsl
pop
and
mov
adc
and
leave
xchg
je
pusha
or
xchg
jo
pop
scas
scas
mov
mov
daa
outsl
add
add
dec
mov
outsl
push
out
cmp
push
inc
fst
sbb
pop
loopne
cmp
jecxz
daa
inc
push
fisubs
pop
loope
xchg
testb
test
rcl
repz
sbb
je
stos
sbb
mov
js
mov
cwtl
call
inc
and
or
ds
stos
ret
stos
push
sbb
ds
scas
push
enter
test
mov
jmp
mov
jge
dec
mov
push
jne
add
sbb
mov
pop
or
mov
lods
xorb
fstl
mov
ds
rclb
add
cmp
sahf
scas
repz
adc
stc
jmp
dec
add
pop
mov
sub
xchg
cmp
stos
mov
dec
repz
fnsave
sti
xchg
xlat
xlat
js
imulb
and
fst
pop
cmp
mov
mov
lods
in
xor
adc
hlt
lret
xor
add
xor
xorl
sahf
mov
mov
xlat
mov
sti
mov
adc
out
aam
push
enter
jne
pop
mov
sbb
pop
clc
scas
inc
ljmp
loope
jnp
bound
ds
inc
pushf
fadds
sbbl
sub
push
adc
xor
pop
mov
xchg
shll
enter
es
lret
cmp
dec
ss
inc
or
scas
cmp
call
mov
inc
ficoml
ja
mov
adc
mov
or
fldl
mov
cli
xor
xlat
pop
pop
pop
jle
shll
js
loop
adc
ljmp
loope
lcall
in
js
test
pop
and
or
jo
aas
push
ljmp
inc
and
xorl
mov
frstor
inc
pop
out
jne
mov
insl
sub
shlb
add
out
push
test
lret
sbb
jp
cmp
sub
das
aas
rorb
and
dec
push
outsl
jg
fcomi
inc
jl
shrb
push
fistps
lods
sbb
ret
rcrb
push
loop
movsb
mov
loope
sahf
adc
cmp
push
iret
out
inc
movsb
adc
addr16
jge
outsl
add
push
stc
bound
xor
mov
ljmp
jno
mov
dec
fistps
mov
mov
aam
int3
rorb
or
dec
arpl
dec
pop
mov
sub
mov
xor
int3
xor
jns
mov
lock
loopne
fdiv
push
xchg
jno
inc
scas
sub
inc
fsubrl
xor
mov
xlat
outsl
push
pop
int
pop
push
push
jp
test
xor
lods
pop
inc
jp
ds
dec
sub
rol
xor
jo
cmpsl
mov
imul
xor
cmpsb
icebp
and
arpl
adc
add
jmp
lods
nop
stos
rcr
xchg
jecxz
mov
push
out
pop
movsb
add
cmpsb
loopne
xor
sahf
xor
dec
and
cld
ds
push
add
push
inc
pop
cwtl
mov
mov
xor
mov
pop
ds
bswap
mov
add
mov
pushf
pop
gs
xchg
push
dec
negb
sub
cmp
xchg
mov
adc
jns
outsl
es
add
fnstcw
lock
or
dec
dec
xchg
test
or
dec
les
insl
pop
fcmovu
stos
sbb
pop
sti
and
mov
out
sbb
and
mov
leave
fidivrl
sub
push
lcall
jmp
xchg
ljmp
mov
pop
dec
or
cmc
sub
mov
mov
adc
leave
adc
loopne
popf
orb
adc
dec
and
cwtl
and
mov
std
loope
arpl
out
mov
jno
dec
es
lret
push
xor
or
jmp
leave
popa
cmc
mov
mov
rclb
lret
iret
filds
push
cli
outsl
xor
ljmp
sbb
sub
mov
popa
stc
sub
clc
call
and
adc
lea
leave
insl
rcr
out
loope
adc
ljmp
xchg
cmpsb
in
fdivs
mov
lahf
mov
push
mov
lods
sahf
inc
add
cli
daa
push
js
adc
lods
test
fistpll
pop
dec
inc
pop
in
inc
pop
loopne
dec
loop
jmp
push
call
or
jmp
aaa
push
imul
jge
dec
es
sub
mov
inc
push
stos
adc
insb
decb
repz
mov
sarl
inc
movsl
mov
cwtl
das
jnp
cmp
movsl
push
fwait
xchg
push
jb
cmpsl
and
jb
aas
mov
and
push
mov
push
test
js
shrd
cmp
mov
dec
outsb
movsb
and
pop
shrl
js
mov
std
icebp
mov
or
xor
mov
sub
fists
repnz
xor
jecxz
push
xor
push
sbb
adc
arpl
dec
mov
pushf
mov
out
sub
jo
mov
mov
push
and
jne
gs
dec
lods
inc
orl
push
hlt
push
aaa
push
sti
xchg
sub
push
cmp
leave
fldcw
in
push
aas
push
or
mov
mov
fdivs
fs
mov
add
sbb
inc
stc
fidivrl
inc
fimull
test
lods
test
loope
push
dec
aas
mov
mov
xor
mov
jg
inc
popf
and
push
inc
sti
inc
data16
inc
addr16
jne
or
xchg
and
pop
push
mov
jp
mov
test
jecxz
push
push
mov
pop
mov
cs
or
jb
rorb
push
jno
mov
rorl
out
movsb
cmp
add
ret
aad
cmp
fs
pusha
push
es
xor
xchg
add
dec
xchg
xor
shlb
dec
or
push
movsl
mov
mov
out
push
call
fsubrs
mov
nop
add
push
test
lret
daa
jbe
mov
test
xchg
sub
icebp
mov
in
pop
jmp
push
or
sti
clc
xor
or
xor
cmc
pop
rorl
into
mov
stc
xor
xor
xor
ja
es
cli
or
push
push
popa
push
js
xchg
add
stos
cwtl
xchg
scas
leave
lret
sub
cmc
push
jae
pusha
repnz
scas
cmp
sahf
stos
fmull
leave
je
jbe
outsl
pop
lret
bound
je
xor
ljmp
xchg
insb
xor
mov
ret
inc
iret
push
in
hlt
sbb
pop
and
dec
fildll
inc
movsw
pusha
das
pushf
repz
subl
and
sti
rcrb
arpl
orb
lea
rol
and
int3
lret
mov
mov
sub
sarb
imul
in
sub
insb
sub
inc
and
out
cmp
sbb
ljmp
jg
mov
jno
fiadds
lcall
xor
push
mov
cmp
and
inc
dec
xor
rcll
adc
iret
sbb
out
sub
je
add
lods
stos
inc
sahf
push
cmp
fwait
movsl
sub
mov
or
test
out
je
in
xchg
das
pop
cli
mov
mov
cmp
xlat
adc
fidivrl
shlb
jo
inc
out
mov
jecxz
js
mov
pop
sub
adc
insb
push
mov
mov
mov
lahf
adc
dec
adc
sub
lahf
xor
in
xchg
mov
movsb
mov
ds
push
iret
push
xchg
addr16
addr16
mov
xor
pop
push
sub
inc
sub
dec
mov
fisubrl
xor
mov
add
imul
sahf
pop
mov
ljmp
hlt
and
jno
jle
mov
mov
lahf
adc
and
pushf
popa
leave
dec
adc
mov
jno
adcl
int3
sub
adc
xchg
aas
push
lods
jae
test
jno
adc
mov
movsl
lods
xchg
jne
inc
or
divb
pop
adc
sti
sarl
aas
push
lahf
clc
jecxz
mov
xor
scas
rcl
pop
in
cmp
pop
sub
dec
inc
loope
fucomi
ret
or
add
add
mov
pop
xchg
lret
xor
sub
xor
inc
xchg
add
aam
inc
int3
push
movsl
jo
rcr
dec
fbld
pusha
and
jecxz
fnclex
dec
push
and
cmp
test
xor
adc
dec
icebp
xchg
aam
cmp
add
dec
lock
repnz
cli
pushf
jecxz
inc
pop
cwtl
daa
xchg
in
lods
add
mov
fwait
xchg
pop
dec
xchg
lods
aam
dec
mov
stc
enter
shl
dec
dec
mov
cmc
fildl
mov
jno
int
sbb
lods
mov
lods
inc
sarl
lret
test
jmp
dec
or
rclb
push
dec
and
cmp
sbb
orb
shlb
push
jnp
add
shrb
lahf
stos
imul
arpl
popa
rolb
dec
adc
shl
xor
pop
sub
dec
jo
mov
int
ss
leave
dec
outsl
sub
mov
icebp
dec
hlt
mov
or
pop
sub
aaa
leave
and
inc
dec
leave
pop
mov
push
or
rcrl
fucom
adc
shrb
loopne
nop
dec
bound
jecxz
jb
nop
jl
faddl
pop
mov
jl
xor
jge
inc
pop
mov
cli
test
adc
pop
lods
repnz
mov
mov
stos
xchg
aad
repnz
xor
ret
xchg
sbb
add
pop
pop
outsb
sbb
adc
push
daa
pushf
push
bound
dec
jae
and
dec
lds
jg
test
sti
cmp
repz
int
mov
movsl
cmp
fistpl
mov
pop
xchg
add
pop
jp
cmpl
xor
mov
push
mov
mov
cmc
push
xchg
ss
fs
sub
or
and
test
into
pop
popf
lods
dec
fldt
fildll
imul
pop
fmull
hlt
rolb
ret
addr16
push
xchg
and
roll
shll
mov
enter
movq
lcall
and
hlt
mov
inc
xorl
fisttpll
je
mov
sti
push
stos
fimuls
jmp
cmp
inc
mov
loop
sti
pop
cs
sti
xchg
push
dec
int3
dec
jge
sbb
sbb
or
jle
mov
cmp
outsb
sub
pop
lret
or
pop
fnstenv
sbb
cmp
out
mov
dec
int
shr
jne
aad
xchg
sbbb
repz
movsl
push
enter
adc
pusha
stos
rorb
jp
jl
xchg
lcall
popa
sarl
mov
adc
mov
popa
data16
xchg
repnz
push
lods
xorl
fsts
cmp
setp
sub
popf
fdivp
jl
xor
lods
push
dec
mov
xorb
lds
mov
pop
cwtl
movsb
push
pop
in
xor
hlt
jecxz
in
sub
mov
cmp
call
push
xor
cli
test
cli
sti
jmp
sbb
xchg
ja
rorl
lds
and
jne
test
cmpb
dec
gs
jge
lcall
and
les
jge
aad
mov
pop
jg
rcrl
add
pop
jp
ja
hlt
adc
shr
jge
popf
cmovns
mov
sbb
jnp
pop
cmp
push
rorl
adc
adc
es
mov
mov
jnp
inc
mov
adc
imul
dec
mov
aam
mov
dec
inc
xchg
ds
mov
jecxz
aam
jg
je
adc
jo
dec
xchg
xchg
pop
insl
lds
ljmp
lahf
mov
sbb
pop
xchg
in
fwait
or
insb
cltd
xor
arpl
or
or
mov
loope
sti
or
mov
and
and
mov
shrb
cmpsl
dec
add
stc
and
mov
out
push
push
push
data16
stos
mov
fs
inc
idivl
ret
push
mov
data16
call
aad
cmovge
sub
sbb
xchg
adc
outsb
add
or
pop
fiadds
and
push
sub
orb
push
mov
add
cmp
ja
arpl
mov
aad
aam
iret
jno
loop
inc
xchg
cmpl
gs
push
popf
push
lock
shlb
and
or
imul
cmp
push
ret
jmp
dec
push
mov
std
inc
add
add
lahf
and
pop
xchg
fcmovu
loope
jne
sub
xchg
call
cltd
jmp
mov
stos
in
mov
mov
mov
arpl
jl
push
mov
aam
sbb
jmp
push
sbb
int3
jg
mov
js
clc
idivb
fidivl
mov
lock
inc
dec
push
lret
mov
xchg
jp
in
adc
pop
sarb
or
cmp
cmp
nop
push
outsl
repnz
xor
mov
lods
pop
sti
xor
addr16
cmp
aas
in
lock
pop
inc
call
add
and
push
add
fs
and
pushf
loop
mov
popf
jecxz
cmpsb
daa
test
push
mov
xchg
or
clc
mov
sbb
cmp
iret
andb
lds
sbb
dec
in
or
inc
cwtl
or
xlat
cmp
sub
push
insl
mov
mov
scas
imul
jl
rolb
rcrl
jne
jecxz
mov
addr16
inc
and
dec
dec
bound
fsubrs
push
mov
pop
fisubrl
dec
stos
cs
fwait
arpl
sbb
or
iret
mov
xchg
in
push
paddb
or
loopne
aaa
fisubs
xchg
dec
popf
jbe
aam
xchg
xlat
scas
inc
sub
add
scas
inc
div
xor
sbb
adc
lock
int3
faddl
lahf
repnz
fisubrl
ret
push
popa
lock
xchg
or
dec
imul
out
or
cmp
pop
orl
cmp
inc
js
fisubs
mov
cwtl
jb
add
in
jae
push
adcb
jae
xchg
test
cmpsl
adcl
xchg
mov
pop
flds
icebp
mov
or
imul
jbe
pusha
inc
loop
add
cmc
das
push
mov
ret
mov
inc
push
scas
loop
push
sarl
out
adc
fadd
ret
mov
addl
loope
les
and
mov
mov
or
jbe
mov
mov
pop
aad
iret
int3
dec
gs
add
arpl
imul
jle
jb
push
lahf
xor
jae
aam
pop
fcmove
cmp
inc
fmull
jp
iret
and
ffreep
lret
or
push
fnsave
js
lods
mov
mov
or
mov
test
fdivs
dec
nop
and
loope
cmc
push
fdivl
xchg
clc
jae
cmpsl
xchg
xor
lods
out
fidivs
push
and
mov
out
out
jle
jb
mov
inc
add
imul
jg
je
stc
ljmp
sbb
aas
popf
arpl
dec
mov
mov
mov
out
or
mov
outsl
dec
fldt
dec
lahf
stos
cli
dec
and
adc
insl
jmp
add
sub
leave
test
in
pop
call
sahf
and
mov
decl
or
mov
mov
add
pop
push
pusha
xor
push
adc
testb
sub
fldenv
scas
pop
popa
and
subb
jno
pop
gs
jmp
xchg
sbb
mov
jmp
xchg
shlb
daa
jmp
or
neg
dec
add
and
addb
xchg
in
cmpsb
out
js
in
pop
xlat
sub
sahf
inc
push
xchg
xchg
in
nop
adc
into
std
mov
in
xchg
outsb
xor
test
pop
shll
lret
outsb
stc
js
rorl
push
lock
ja
sbb
stos
fisubrl
shrl
jp
jo
popf
hlt
mov
or
push
icebp
push
loopne
in
sub
pop
dec
pop
andl
lods
push
sahf
and
mov
shrl
and
mov
jg
xchg
sub
ss
pop
fwait
push
stos
shlb
enter
in
int
push
add
movsb
rep
push
jns
clc
stos
jae
mov
psubw
pop
in
rorb
sub
add
es
pop
jno
sti
mov
jnp
cli
ficompl
enter
sub
mov
and
pushf
fwait
dec
mov
mov
mov
cld
sub
sub
push
sbbb
inc
daa
in
insl
lahf
in
insl
sub
sub
mov
sbbl
xchg
pop
adc
pop
lahf
pop
in
in
sti
mov
sub
lret
sti
jge
inc
arpl
mov
sub
scas
mov
ffreep
lds
xchg
mov
mov
dec
pop
gs
pop
mov
arpl
mov
arpl
jg
pop
arpl
push
sub
sub
and
add
nop
adc
andb
gs
mov
test
mov
mov
xor
shrd
cmp
xchg
sbbb
add
mov
jb
jbe
lds
add
lds
stos
or
lods
js
and
leave
das
mov
loopne
push
call
cmp
pushf
jle
cmp
jl
fnstenv
jns
mov
push
inc
push
adc
divb
scas
sbb
in
pop
lods
adc
imul
push
xor
shlb
push
adc
jl
imul
mov
jecxz
fdivs
es
sahf
xor
mov
xchg
aad
pop
stos
add
sbb
add
sub
dec
mov
aas
dec
sbb
pop
repz
das
jp
xlat
inc
push
insl
cmpsb
sbb
dec
inc
mov
cmp
fldl2t
int
int
pop
popa
add
push
push
pop
push
sbb
push
dec
daa
fbstp
mov
xor
icebp
data16
mov
lds
ss
cli
sahf
scas
outsb
in
fcomip
push
dec
lds
loope
lods
cmp
clc
cli
xchg
in
push
xor
xor
mov
cmpsl
and
adc
cmp
cmpl
push
jbe
mov
adcl
sub
push
cmp
scas
stc
push
and
fsts
xor
cli
jae
test
pop
xor
lret
jne
mov
xchg
xchg
xor
or
xchg
push
mov
aad
xchg
xchg
xor
fwait
testl
push
sub
sahf
mov
loopne
out
clc
adc
insb
lds
fcomp
movsl
xlat
xchg
mov
fisubrl
pushf
xor
dec
mov
movsl
out
popa
jl
cmp
pop
sbb
mov
lods
les
adc
je
cld
inc
jp
out
and
jno
out
pop
adc
daa
lret
xor
xor
mov
pop
mov
xchg
pop
push
insl
imul
lods
sub
popa
inc
adc
test
dec
pop
notl
dec
xor
lret
sub
outsb
pop
push
popf
pop
inc
push
cmc
push
or
cs
sbb
adc
stos
xchg
popa
clc
jmp
dec
add
pop
jbe
adc
inc
arpl
outsb
rcll
insl
unpcklps
repnz
jle
ss
mov
addr16
addr16
mov
rcrl
jns
mov
sub
cs
xchg
mov
add
repz
pop
fyl2x
mov
mov
pop
inc
cmpb
std
sub
stc
popf
and
jne
pop
lea
push
nop
and
es
in
call
insb
add
xor
out
cs
inc
pop
andl
jb
fsubrs
lods
push
xchg
popa
fldt
jb
or
add
jnp
pop
add
lahf
icebp
mov
in
mov
adc
pop
in
jp
stc
fs
jb
loope
jmp
xor
insl
ss
je
sti
hlt
xchg
inc
shlb
imul
test
repnz
xchg
sbb
lds
pop
push
fisttps
loopne
sub
aad
mov
mov
popf
pop
sbb
push
in
je
mov
mov
pop
adc
mov
sbb
lock
inc
data16
icebp
sbbl
adc
insb
shr
jb
lret
fbld
sbb
push
inc
in
std
push
stos
fiaddl
fldt
sbb
scas
push
push
xchg
xor
sarb
daa
lcall
es
test
xchg
sub
xor
sub
adc
xor
lock
mov
rcrb
pop
push
pop
xor
mov
movsb
repnz
cwtl
lds
test
cmp
das
mov
cmc
out
aas
scas
cli
cmp
push
mov
nop
sarl
sbb
int3
add
inc
insl
and
hlt
xchg
mov
or
pushf
pop
jl
in
xor
out
cld
push
stos
loopne
nop
inc
mov
sti
adc
ss
inc
xlat
daa
inc
mov
mov
rcl
nop
mov
divl
cltd
insb
into
cmp
into
add
repnz
add
jo
inc
mov
mov
clc
or
pushf
dec
mov
stos
test
jbe
iret
ss
je
jmp
movsb
faddp
rolb
lcall
les
aas
mov
mov
sbb
xor
subl
dec
lock
stc
xor
mov
dec
cld
mov
mov
or
push
or
rolb
jmp
jb
or
mov
push
dec
cmp
je
xor
sub
and
pop
mov
es
lds
and
xor
int3
cltd
cwtl
test
into
xchg
push
jae
gs
call
daa
mov
cld
dec
inc
xor
sub
and
push
sbb
js
xlat
dec
loop
decb
add
cmp
fcoml
sub
js
mov
ss
clc
xchg
ljmp
cmp
sbb
testb
adc
rolb
lret
js
xor
mov
cmpsb
pop
cmp
out
cmp
xchg
sbb
sti
xor
movsb
lock
add
dec
jmp
std
aaa
scas
add
loopne
pop
sbb
daa
imul
or
mov
sub
rcrb
mov
mov
pusha
shrb
and
stos
out
mov
lret
xor
push
cltd
jmp
and
negb
mov
sbb
icebp
sahf
jbe
pop
or
stos
sub
mov
je
negl
arpl
cmp
mov
mov
filds
call
sub
sub
xchg
or
push
mov
jp
out
lahf
ljmp
into
mov
mov
xchg
add
xchg
jg
loop
mov
mov
enter
pop
mov
pop
cltd
mul
test
rcr
test
mov
jno
lock
daa
mov
inc
mov
loop
and
dec
lret
sarb
aas
movsb
pop
lods
push
cmp
mov
mov
je
push
bound
jle
sbb
pusha
sub
jl
mov
sbb
xchg
sarb
push
push
fsubr
jl
fnstenv
mov
cmp
push
pop
pushl
int
call
push
inc
fimuls
dec
lahf
dec
inc
fiaddl
jmp
xchg
inc
mov
fldz
and
scas
fbld
rcr
inc
cld
leave
xchg
jne
dec
add
sbb
mov
daa
jne
lahf
pop
sti
jb
mov
jne
ret
pop
lret
bound
into
out
iret
pop
insb
imul
mov
pop
adc
sbb
push
mov
addr16
pop
inc
int
mull
inc
cltd
mov
mov
dec
sbb
dec
mov
in
dec
test
pop
icebp
loopne
in
shll
push
and
add
or
rorb
add
adc
pop
outsb
xor
inc
das
mov
pop
add
sti
and
dec
dec
mov
insb
sti
jle
sbb
and
jl
jmp
add
sub
ret
push
xor
sub
sbb
pop
sbb
xor
dec
sahf
popa
pop
ja
and
xchg
test
fwait
jbe
lcall
cltd
mov
adc
jmp
gs
mov
les
add
daa
lcall
addr16
les
jge
fbstp
out
mov
sub
repz
cmp
sbb
lds
cmpsl
iret
cwtl
pop
adc
pop
in
dec
testl
xor
pop
call
loope
hlt
mov
adc
mov
sahf
jl
mov
dec
xchg
push
jge
jge
in
into
pop
fs
icebp
mov
bound
rol
shld
pop
jmp
push
fs
in
pop
xchg
andb
sbb
push
outsl
inc
or
cmpsb
sub
or
xchg
adc
sbb
gs
mov
jns
test
push
lcall
inc
fsubs
or
shl
mov
pop
pop
scas
mov
or
imul
adc
pushf
das
mov
test
cmp
jecxz
rorb
add
xchg
and
popf
stc
mov
dec
lea
or
or
out
shlb
mov
in
ds
mov
sbb
or
mov
inc
sub
int
fdiv
fcmovb
dec
dec
dec
testl
lods
aad
fsubs
frstor
out
ret
pushf
shrb
sub
mov
sbb
lods
ret
push
jno
sub
inc
mov
incb
js
mov
lds
lcall
and
jae
dec
jmp
js
ret
hlt
nop
add
inc
jg
clc
mov
loope
xchg
add
sub
es
fwait
sbb
rcr
push
hlt
sbb
jge
jg
movsl
xor
mov
mov
mov
fisubs
daa
andb
popa
mov
outsb
lret
movsl
xchg
and
scas
jae
jp
in
int
mov
cmp
insb
adc
nop
orl
pop
mov
out
insl
lret
ret
imul
xor
iret
or
in
sub
and
push
fld
imull
jmp
inc
mov
dec
stc
stos
test
push
call
xchg
jno
cmp
jle
jp
rol
sub
in
andb
test
sbb
mov
jge
pop
cwtl
xlat
shlb
jne
lods
daa
cs
xor
mov
push
push
sbb
jae
or
push
adc
out
int3
push
in
std
adc
sub
cwtl
lcall
ja
mov
icebp
test
rorl
xorl
mov
fimull
aam
cwtl
sbb
dec
adc
rcrb
xchg
sub
inc
adc
xor
cmpsb
lock
lds
or
dec
dec
movsl
lds
negb
push
sti
int
pop
fs
cwtl
das
into
ret
loopne
aaa
idivw
lea
pop
hlt
andb
mov
mov
mov
aam
pop
stc
dec
dec
movsb
jg
idivb
jae
pushf
das
mov
stc
aaa
xor
sub
dec
xchg
mov
nop
and
dec
in
xchg
int3
xchg
mov
daa
int3
hlt
out
jl
cmp
pushf
mov
notl
xchg
addr16
outsb
pop
lret
mov
sti
push
add
cwtl
adc
adc
imul
jg
mov
int3
cmp
xchg
aas
or
lock
cmp
test
push
imul
out
in
xchg
xchg
lock
enter
jo
jae
shrl
fstpl
pop
imul
xchg
out
js
stos
jge
mov
shlb
mov
xor
adc
adc
cmp
jge
sbb
xor
lea
or
cmpsl
aad
fldenv
loop
scas
cmpsl
mov
push
aaa
fisttps
rclb
pop
mov
inc
movsb
dec
dec
loopne
int3
adc
les
mov
testl
fnstsw
subb
out
mulb
inc
rcrb
into
mov
addr16
out
mov
aam
cli
cwtl
and
mov
repz
or
and
mov
lds
mov
or
or
xchg
push
jb
icebp
in
cs
mov
push
pop
cli
xchg
je
in
xor
push
mov
scas
nop
int
popa
jnp
in
pop
sub
test
cmp
mov
clc
repnz
xor
xchg
aaa
cmp
mov
cltd
fisubrl
cmp
sub
jmp
mov
popa
les
pop
push
popf
or
sub
mov
sahf
ret
jmp
xchg
bound
xchg
push
add
adc
push
mov
movsb
stos
mov
jns
fsubr
repz
stos
repz
test
adc
adc
fmulp
dec
ss
jecxz
cmpsb
leave
sub
stc
xor
movsl
nop
test
loope
inc
imul
mov
negb
jns
sbb
push
lahf
imul
movsb
cltd
cmp
icebp
push
les
loopne
bound
ret
fwait
xor
int
mov
sub
add
dec
cmp
dec
aaa
dec
pop
xor
push
ret
shlb
or
mov
push
cmc
dec
jbe
iret
xor
sarb
sbb
test
pusha
mov
cmp
cli
in
ss
out
movsl
gs
imul
popf
xchg
pop
xor
dec
or
mov
aam
cmpsb
inc
mov
sti
fiadds
mov
cld
xchg
jge
loopne
icebp
xchg
or
push
fwait
add
xchg
aas
and
add
stos
in
push
cmp
dec
lods
test
pop
inc
push
sbb
adc
shll
mov
inc
call
jp
ret
jmp
lret
lret
aam
or
push
sub
loopne
test
lret
repnz
xchg
and
test
xchg
xchg
fimull
jno
test
inc
ljmp
push
orb
bound
scas
popf
mov
pop
add
repz
push
stos
testl
pop
data16
adc
cmp
andb
loop
push
pop
repnz
out
les
dec
scas
mov
jle
stc
lock
shll
lea
jge
out
repz
lcall
cwtl
pusha
cmpxchg
out
inc
pusha
push
pop
mov
ljmp
sbb
ljmp
inc
into
in
and
mov
sbb
sbb
inc
pop
jb
mov
outsb
xchg
icebp
mov
test
int3
or
in
ret
mov
jae
scas
mov
cmp
pop
push
pushf
jne
sub
mov
xor
lds
aam
add
dec
lods
fwait
cld
add
mov
sbb
lock
pop
loopne
sub
or
fisubl
pop
cs
push
test
rcrb
lcall
scas
xor
clc
rcll
leave
int
aad
xor
push
out
leave
push
mov
cmp
call
push
in
fbld
cmp
aaa
cmc
cmp
call
loopne
sahf
bound
aas
cmc
js
xchg
stos
dec
mov
xor
aas
cs
cs
ja
lret
inc
das
insb
cli
inc
ret
push
cmpsl
insb
std
add
int3
arpl
inc
pminub
xor
cltd
xchg
add
leave
cmp
and
ljmp
mov
pop
xchg
mov
inc
jl
jp
jns
scas
iret
xchg
andb
xlat
pop
mov
inc
or
dec
ds
sub
mov
incb
scas
jl
inc
mov
dec
aam
jge
mov
xor
sub
imul
pop
les
jne
mov
mov
shl
sub
sbb
jo
sub
inc
xor
aam
jl
aas
or
sahf
add
repnz
test
sub
cmp
mov
or
adc
mov
inc
hlt
iret
sub
add
push
in
iret
dec
dec
repnz
push
rolb
dec
mov
lret
and
out
xchg
sbb
sarl
sub
cmp
movsb
push
push
dec
test
loope
in
stos
fwait
push
jns
mov
pop
add
jge
jmp
xchg
je
lods
push
call
in
lods
xchg
in
test
cltd
mov
push
orl
fadds
cmp
or
dec
out
cld
mov
pop
icebp
xor
adc
xchg
data16
mov
movsl
inc
rclb
jno
fimuls
lahf
mov
leave
enter
mov
jae
loope
adc
mul
xor
cmc
add
push
push
sahf
and
lods
rclb
mov
loope
jle
out
outsb
inc
mov
mov
scas
xchg
adc
je
sbb
les
inc
fstpl
mov
push
adc
cmp
andb
int3
mov
in
rorl
imul
mov
mov
xchg
fdivs
rclb
mov
dec
insb
cli
jb
inc
aad
xchg
xchg
jp
enter
lret
ret
nop
sub
add
mov
call
aad
aad
add
mov
out
add
outsl
adc
inc
jns
nop
dec
inc
mov
cmpsb
cmc
loopw
aas
dec
fsubrs
push
and
push
subb
jge
xor
sbb
lcall
ret
or
loope
sbb
mov
fidivrl
mov
jo
stos
fdivr
arpl
daa
arpl
movb
adc
adc
xchg
mov
jo
sbb
loopne
fldt
push
xor
xchg
dec
mov
popf
pop
cmc
hlt
sti
mov
sub
jge
push
call
lret
xor
inc
xchg
push
xor
jo
or
inc
test
int3
fs
pop
push
or
add
sub
roll
iret
push
shrl
push
pop
push
ficomps
stos
xchg
fidivs
notl
das
sbb
push
clc
ss
std
xchg
sbb
inc
popa
dec
sets
imul
dec
adc
bound
fdivrl
ljmp
ja
and
add
movsl
aaa
pushf
in
sti
out
in
sub
mov
sbb
or
xchg
xlat
pop
sub
pop
scas
add
fs
ss
pop
dec
pop
inc
xor
adc
jge
add
inc
in
inc
jo
bound
jle
sbb
mov
cwtl
mov
dec
pop
ja
cmpl
ds
lods
repz
out
dec
mov
dec
xchg
adc
push
mov
dec
loope
or
aas
popf
push
fistpll
aas
mov
scas
loope
frstor
mov
cmpsb
pop
cli
mov
mov
cmpsl
jle
out
mov
in
sub
push
aam
xor
outsb
inc
call
sub
addb
mov
inc
jnp
jecxz
icebp
adc
or
sbb
push
idivb
and
cmp
repz
lds
repnz
daa
insb
mov
sbb
fld
fidivl
ror
mov
jb,pn
lock
dec
std
test
dec
data16
std
dec
push
leave
pusha
inc
push
cmp
sbb
dec
in
xchg
adc
jne
cmp
cmp
shrb
pop
push
not
xchg
push
dec
out
sbb
xorb
adc
loope
dec
mov
lret
push
stos
aad
xchg
in
jge
repnz
loope
mov
dec
xorl
jb
rol
sub
sbb
pop
mov
sbb
mov
mov
sti
pop
and
mov
dec
push
shrb
and
shrb
lret
std
scas
xor
and
psubd
fidivrl
and
jns
mov
add
pop
cmp
movsb
addl
inc
pop
loope
stos
cmp
add
loopne
int3
sub
pop
lahf
orl
mov
mov
ljmp
push
ret
shl
into
xchg
hlt
roll
js
mov
dec
mov
movsl
mov
sbb
sbb
xchg
cs
push
or
xchg
push
push
int3
push
mov
nop
pop
sbb
push
or
pusha
sub
jbe
mull
leave
mov
jp
outsb
out
pop
dec
mov
rol
gs
pop
mov
dec
sub
inc
add
inc
insb
shlb
sub
pop
mov
into
and
inc
rorb
gs
popa
push
mov
cltd
rolb
in
and
gs
mov
das
or
mov
leave
iret
leave
fsts
filds
sub
dec
and
js
test
pop
in
clc
sbb
sub
cmp
stos
pop
mov
pusha
mov
int
jbe
mov
sub
xchg
cmc
mov
cmpsb
cmp
mov
push
subb
jg
dec
pop
sbb
outsl
xchg
repz
xlat
and
jae
adcl
dec
dec
mov
loope
push
jnp
negb
or
inc
stc
adc
in
jmp
aad
fistl
sbb
pusha
dec
push
sti
test
push
mov
nop
pop
xor
pop
jno
outsb
xchg
cmp
dec
jg
ss
lock
rcll
inc
sete
push
lock
adc
dec
xchg
dec
cmp
push
lds
mov
xor
adc
push
lret
jo
mov
sbb
push
push
xchg
jb
jnp
cmc
mov
ret
cmpsb
inc
fcmovnbe
lods
mov
movsl
mov
jo
jno
dec
sub
and
scas
shl
mov
push
cli
leave
add
iret
xor
mov
cmp
add
sub
sarl
push
lea
sbb
jo
mov
ljmp
popf
xor
je
pusha
lret
dec
pusha
mov
nop
out
ss
hlt
xchg
add
cmpsl
mov
cmpsl
add
dec
paddsw
pop
jno
imull
adc
mov
mov
or
add
xor
aad
push
sti
frstor
fstp
sub
or
aad
in
iret
mov
mov
adc
fistps
lds
je
les
repz
cmp
dec
sbb
pusha
pop
sahf
xlat
mov
mov
sbb
fistpl
or
pop
inc
jecxz
sarb
cmp
dec
jecxz
jmp
xor
icebp
sbb
xlat
mov
or
push
out
cmp
mov
lahf
cmp
pop
lods
mov
subl
jns
fidivs
out
pop
mov
mov
pop
push
ljmp
xor
mov
mov
and
jno
clc
jmp
pop
and
jno
dec
cmp
mov
inc
sbb
xchg
ds
lcall
or
rcrl
xchg
jbe
xor
shll
xlat
andb
mov
mov
inc
insb
neg
fsubrs
or
jge
add
js
and
jecxz
inc
es
das
xchg
mov
mov
cmc
and
cmp
xor
pop
insl
inc
fsubl
dec
mov
addr16
insb
jo
jo
mov
sti
adc
add
rorb
cmp
scas
andb
jecxz
push
sub
mov
mov
popf
loope
cmp
and
rcll
test
jl
mov
addb
push
xor
mov
inc
push
inc
inc
pop
lock
incl
pushf
add
sar
push
mov
stc
aas
sbb
mov
mov
jge
cld
subl
inc
or
jl
pushf
dec
cmp
in
pop
in
xchg
aas
mov
loop
pusha
push
jmp
test
int3
aaa
add
cwtl
cmp
stc
in
xchg
sub
or
sbb
mov
add
push
lds
fsubrp
lcall
sub
cmp
in
sbb
sti
cmp
or
fiaddl
mov
or
pop
adc
inc
sub
repnz
jg
xchg
fsub
cmpsb
testl
inc
call
lea
jge
ror
lcall
and
xor
outsb
sub
je
xor
rclb
push
aam
mov
pop
shlb
jmp
mov
mov
popf
mov
enter
xor
mov
sub
dec
and
outsl
fisubrs
std
mov
jno
or
sbb
cld
inc
and
movsb
push
push
fwait
bound
and
aad
inc
and
test
jb
mov
iret
icebp
leave
ret
aam
imul
sbb
cmp
int
dec
sahf
pop
out
cld
xchg
and
jg
jnp
and
jp
or
fcmovb
data16
in
lods
adc
jbe
stc
jne
cmpsl
sbb
jb
cmp
test
fimull
mov
pushf
movsl
jle
add
pushf
xor
inc
add
lock
nop
pushf
hlt
cmp
cmp
jle
fisubrl
push
jge
xor
or
mov
loope
jecxz
popf
enter
mov
orb
sub
mov
sub
dec
addr16
out
test
sti
push
hlt
sbb
lods
in
cld
call
outsb
cmp
push
scas
out
xchg
fnsave
sub
sbb
pop
stos
jmp
cmpl
pop
push
pop
sbb
test
sahf
inc
jb
stc
cmpb
xchg
dec
loopne
mov
ss
lods
out
inc
push
add
xorl
movsb
push
push
xchg
mov
aas
daa
jb
jecxz
sub
inc
aas
sub
bound
xrelease
xchg
insb
outsl
shlb
or
pop
test
pop
fstpt
daa
pusha
incb
push
call
jne
push
idivb
pushf
dec
mov
push
mov
jne
sbb
cmpsb
mov
cmp
pop
and
dec
mov
mov
cmp
test
lret
lods
adc
fdivrp
xor
cmpsb
lods
scas
adc
cmp
or
outsl
jge
lods
mov
pop
inc
mov
pop
lods
jecxz
jp
cli
in
cmp
lods
xchg
jbe
mov
jo
sbb
inc
lret
pop
cmp
mov
les
scas
jb
fbstp
lods
sti
dec
out
lods
jne
xchg
cmpsb
imul
xor
or
daa
cli
pop
data16
fstpt
mov
ds
xor
outsb
inc
push
pop
cld
sub
stos
icebp
mov
jne
out
mov
aas
nop
in
jl
lret
stos
mov
fsubr
jle
ds
sbb
jl
int
xor
pop
and
scas
jge
roll
pop
stc
lcall
movsl
fldenv
into
insb
inc
cs
sahf
hlt
into
mov
lret
sbb
push
mov
js
cmc
int
insb
out
gs
cs
xchg
pop
lods
enter
rcr
imul
in
les
push
shrb
xor
and
mov
dec
and
lcall
sbb
pop
adc
mov
data16
add
imull
xor
cmpsl
sbb
jle
push
mov
push
xlat
sbb
xchg
or
dec
daa
pop
jmp
fmuls
jmp
jb
cmp
dec
fwait
testb
add
or
dec
dec
dec
fwait
mov
in
cltd
pop
inc
and
cli
fnstsw
mov
push
mov
in
inc
dec
push
lds
ss
xor
aaa
shll
push
pop
jo
mov
push
mov
pop
ljmp
cmp
mov
sahf
je
mov
mov
pop
cmc
leave
mov
cmp
and
inc
jle
std
stos
daa
sahf
bound
subl
hlt
mov
addb
aad
icebp
movsl
push
cmp
movsl
clc
and
mov
loop
test
bound
and
mov
jmp
xchg
dec
sbb
imul
add
mov
inc
xchg
jle
stos
mov
ret
iret
adc
jle
es
or
or
cmp
sub
pop
xchg
add
jae
and
inc
or
dec
sbb
pushf
xor
lock
pushf
loope
mov
inc
push
cwtl
icebp
lds
jns
push
repnz
fcomi
fcom
testl
add
stc
je
pop
stc
xchg
lcall
leave
data16
pop
repz
ss
ss
test
orl
push
xchg
adc
xchg
cs
inc
fcmovne
negl
shl
xchg
enter
cmp
xorb
int3
push
dec
pop
sub
test
dec
clc
imul
jno
cmovns
insb
bound
and
mov
int3
xchg
mov
lahf
sbb
in
es
ss
mov
inc
adc
in
stos
dec
mov
rcl
cmc
mov
cmp
xchg
in
add
xchg
mov
je
lea
je
stos
popa
push
leave
lock
stos
inc
dec
push
fists
jbe
movsb
int
adc
jmp
daa
idivl
jae
testb
pop
in
test
cmp
add
push
mov
dec
mov
std
fninit
jp
aad
stos
pop
push
mov
pop
mov
add
and
xchg
aas
mov
lods
xchg
sub
jns
sahf
dec
dec
xchg
in
inc
packsswb
xchg
pop
cmpsl
jo
ds
negl
mov
in
nop
rorb
cmp
pushf
xchg
nop
lret
and
std
test
xchg
mov
or
jbe
and
ljmp
mov
frstor
or
pop
repnz
adc
and
sub
dec
out
dec
sub
in
lret
pop
ret
sub
mov
jae
cmp
sti
push
sti
lret
mov
leavew
fnstenv
xchg
ret
pushf
lret
push
out
cmpsl
xchg
in
test
add
aam
cwtl
fsubs
aaa
or
xor
bound
xchg
add
popa
adc
add
ret
in
dec
inc
sbb
jp
je
shl
xor
mov
pop
push
xlat
pop
dec
ret
hlt
shrb
hlt
jmp
aaa
pop
xchg
xchg
sbb
pop
inc
mov
sub
cmp
das
stc
out
jmp
or
xor
call
int
aam
movsl
jmp
ljmp
test
in
xchg
cmpsb
stc
inc
xlat
jle
stc
test
or
addr16
outsb
mov
sarl
pop
pop
pop
push
xchg
cmp
adc
loop
es
push
loope
cmp
cli
cmp
pop
push
pop
adc
pop
repnz
sub
fsubs
pusha
jo
fisttpl
inc
push
cld
int3
push
or
loopne
lahf
das
addr16
cmpsl
jle
out
nop
and
lcall
stc
sub
jmp
movsl
push
sar
inc
mov
xchg
jae
mov
sbb
into
ljmp
xor
daa
leave
and
push
pusha
mull
hlt
jle
ljmp
leave
stos
adc
lods
sbb
adc
mov
mov
scas
mov
or
push
cwtl
and
je
and
or
push
int
sub
pop
push
sti
xchg
inc
repz
dec
cmpsl
daa
outsl
mov
jbe
call
scas
loop
pop
clc
rcr
push
sub
das
push
lahf
pop
add
int
scas
repz
insl
add
push
testb
fsubr
mov
push
jns
xor
jge
lods
add
or
sbbb
jl
mov
xor
sub
cmp
ljmp
mov
adcb
xchg
testl
out
aaa
xchg
adcb
inc
mov
in
cmp
subl
leave
inc
lods
shl
sbb
fidivrl
adcb
cmp
ljmp
sbb
aam
jecxz
dec
jg
jg
push
rcrb
lds
dec
outsl
idivl
fwait
enter
cmp
mov
mov
rolb
xchg
mov
jae
add
leave
pop
and
pop
insb
hlt
mov
jbe
sbb
jl
mov
jb
inc
call
sub
loopne
jl
xorl
push
sbb
in
out
sbb
or
adcl
cmp
mov
sub
adc
cmpl
stos
jp
push
jmp
lret
addr16
js
push
cmp
fsubrs
icebp
dec
insb
das
adc
std
enter
sti
in
xor
push
xchg
outsb
jne
mov
into
fwait
dec
sbb
push
mov
dec
lahf
fcomip
pop
lahf
in
ljmp
adc
into
andl
data16
xor
or
xor
push
dec
aam
pop
jb
mov
into
adc
cmc
aad
das
or
sti
push
outsb
insb
xchg
int
mov
lahf
sbb
std
clc
push
pop
cltd
jbe
ret
xchg
hlt
mov
push
pop
cwtl
rcrl
xchg
mov
and
lds
sub
stos
dec
xor
pop
push
sbb
or
jbe
adc
notb
stos
xchg
ja
xor
clc
addb
jns
xchg
mov
mov
push
mov
mov
jge
add
nop
push
fsubrp
or
shll
xor
sub
add
add
cmc
xchg
sub
jle
pop
lock
mov
popf
aaa
sbb
pop
adcb
repnz
jnp
fdivp
mov
shlb
pop
add
lret
or
jp
jmp
cmpsl
xchg
pop
add
mov
inc
loopne
in
out
int
or
sub
sub
jnp
adc
daa
jo
add
jbe
add
lcall
lods
bound
hlt
jge
das
jb
into
push
jmp
push
lock
adc
push
lcall
mov
jae
mov
std
ret
pop
das
ret
jp
sub
das
pop
and
add
cwtl
inc
stos
jl
and
popf
fdivrs
ljmp
xor
fmul
cli
sbb
sub
adc
mov
xchg
xor
push
gs
lret
push
inc
testl
sub
rolb
insb
pcmpeqb
or
cmc
push
add
out
and
enter
mov
call
hlt
dec
imul
jb
jl
mov
sbb
pop
lret
imul
in
push
and
out
test
inc
push
in
lds
and
faddl
hlt
outsb
jl
dec
add
cmpsb
sbb
push
cmpsl
xlat
mov
int
inc
icebp
mov
call
imul
aas
movl
xor
mov
mov
jg
and
scas
push
cmpsl
mov
dec
icebp
xchg
neg
data16
mov
jo
cmp
sbbb
sti
pop
sub
mov
enter
std
test
xchg
addr16
mov
jns
testb
das
cmp
imul
cwtl
test
inc
movsb
mov
sbb
add
mov
lods
xchg
loope
xor
mov
outsb
inc
or
jb
test
adcl
pop
stc
out
rclb
mov
adc
shrl
lods
mov
sbb
xor
mov
dec
ljmp
jmp
pop
mov
push
ljmp
jno
call
or
mov
divl
outsl
push
push
xchg
aad
insl
inc
sti
mov
adc
adc
or
movsb
mov
popa
and
sti
push
push
jno
or
xchg
lods
sub
jmp
jecxz
push
fnstenv
mov
stos
sub
ss
stc
popf
xor
ljmp
cmp
inc
int
js
addr16
sbb
jge
hlt
inc
mov
rorl
fsubl
pop
or
std
xchg
test
stc
and
std
add
pop
pusha
jbe
jg
addr16
lods
mov
stc
shrb
cmc
testb
add
sbb
lret
sbb
in
dec
repnz
xchg
and
jp
or
scas
dec
push
or
jb
inc
cltd
mov
xor
cli
fidivs
push
mov
xchg
loop
shrl
dec
sahf
fmulp
mov
cltd
pop
mov
jp
cld
mov
divb
out
xor
rclb
sub
push
lcall
gs
insl
dec
cmp
push
adc
test
or
andb
fs
int
repz
jmp
fadd
add
lock
push
sub
mov
pop
outsb
enter
or
or
mov
push
lds
outsb
sbb
adc
dec
pop
jecxz
jp
arpl
imul
pop
int3
sub
out
or
lahf
divb
or
xchg
or
loope
pop
push
fidivl
mov
mov
pop
xor
or
mov
rcl
sbb
xchg
sbb
xchg
scas
incb
mov
add
push
jmp
mov
mov
jmp
fmulp
nop
inc
mov
push
adc
scas
sbbb
push
std
fbstp
addr16
dec
in
jne
in
jbe
adc
roll
lret
xchg
push
pushf
xor
cwtl
pop
lret
and
daa
incb
and
lods
adc
shlb
cmc
jae
lock
in
jo
in
mov
xchg
jmp
dec
jb
adc
punpcklbw
xchg
out
xchg
test
aas
insb
cli
jl
sbb
jge
imul
call
aas
stos
sbb
ljmp
xor
xor
add
xor
push
mov
and
stos
mov
push
push
bound
push
test
cmp
jmp
xor
shlb
mov
jmp
cmp
pop
stc
lcall
stos
in
shll
int3
add
les
imul
pop
sbb
int3
sbb
insb
mov
arpl
pushf
mov
icebp
sahf
ss
leave
ret
arpl
rorb
dec
push
testl
or
jnp
sbb
dec
add
inc
fcmovnb
daa
jp
inc
inc
push
out
adc
ds
into
scas
in
jl
mov
add
lcall
lods
add
jl
out
out
mov
fimuls
mov
lods
adc
fidivrl
mov
push
test
pop
push
or
mov
in
mov
movsl
inc
or
jbe
mov
sub
xchg
mov
mov
in
jecxz
jnp
xor
repz
cli
imul
test
je
enter
xchg
mov
gs
xchg
or
clc
sahf
push
ret
out
and
jge
sub
sub
cmp
sub
pop
dec
rorb
mov
out
leave
inc
dec
clc
addr16
popf
mul
add
pop
test
pop
in
xchg
sbb
stos
push
and
fwait
mov
jge
mov
out
xor
icebp
les
imul
and
add
sub
mov
sub
lds
mov
enter
push
or
dec
jmp
subl
and
pop
rclb
jg
psraw
movlps
jae
daa
ja
stos
fs
cmp
or
inc
or
jl
stos
into
repnz
lcall
mov
dec
mov
push
lods
loop
sub
aas
ds
jo
pop
repz
jo
mov
mov
add
lods
add
adc
ja
lcall
in
in
test
orb
dec
loopne
jmp
nop
rcr
je
popa
lods
cmp
or
xchg
and
lea
pop
das
inc
xchg
adc
mov
jg
jg
in
jl
inc
cwtl
mov
int3
shr
lret
lock
fisubs
daa
test
xor
pop
xor
fs
sbb
cwtl
enter
xchg
cmp
daa
cmp
xchg
sbb
shrl
push
pushf
stos
incl
outsl
jnp
mov
push
push
or
inc
dec
inc
test
aad
add
ja
and
sti
mov
das
sbb
push
out
popa
xor
xor
enter
les
test
xor
frstor
test
push
out
decl
inc
xchg
in
add
push
xor
mov
fldt
cmpsl
stos
mov
xor
roll
push
jno
mov
xor
adc
addl
repz
pusha
rcl
orl
dec
popa
nop
xchg
mov
or
jp
xchg
shlb
jb
and
insl
push
test
pop
lcall
pop
stos
lds
mov
push
cmpsb
xchg
sbb
adc
addr16
fnsave
pushf
inc
stos
sbb
add
test
es
repnz
je
mov
js
leave
inc
mov
decl
jmp
loopne
mov
xchg
fcmovnu
sbb
loopne
lahf
stos
fxam
repnz
mov
cmp
adc
loop
push
adc
sbb
rcl
xor
cmpsl
rcrb
es
nop
lods
ud0
in
cltd
and
lret
pop
push
xor
ret
push
lcall
inc
sbb
fldcw
pop
insb
mov
cmp
cwtl
call
or
dec
das
into
inc
cs
sbbb
sub
dec
sub
inc
mov
fnstenv
sbb
outsb
mov
xor
sbb
push
ret
and
xor
sti
sub
cmp
xchg
pop
lds
or
xor
fisttpll
cmp
outsb
in
mov
mov
shlb
popf
sbb
outsb
add
int
cmp
sbb
sub
adc
ss
lret
xor
push
mov
in
push
sbb
stos
or
xchg
jmp
jno
adc
les
and
dec
popf
leave
push
add
lds
mov
es
add
ret
pop
into
cs
dec
aaa
dec
pushf
and
jmp
fistpll
test
fsubrl
ds
cli
shlb
xchg
insl
and
xor
stos
fisttps
addr16
xor
out
scas
and
mov
jne
adc
xor
or
fsubr
push
sbb
lds
mov
ds
sub
lar
int3
ja
cmpb
sbb
lds
adc
movsl
and
sub
add
cltd
adc
lods
or
inc
xchg
rcll
dec
ljmp
js
xchg
sbb
cmp
daa
cmpsl
add
stos
aam
mov
mov
scas
test
mov
adc
int
cwtl
idivl
sbb
sti
sub
in
cltd
xor
mov
push
push
imul
push
jbe
add
stc
xchg
testl
mov
cmp
mov
dec
add
inc
pop
mov
ss
jmp
xchg
jl
imul
mov
pop
cmpsb
xor
fwait
andb
or
or
mov
or
push
xchg
dec
inc
jg
push
inc
xor
mov
sahf
mov
ss
push
xchg
mov
lods
pop
out
ss
and
sub
outsl
mov
jns
sub
ret
lods
jmp
add
stos
ds
mov
mov
sub
mov
pop
pop
jmp
inc
lods
pop
imul
inc
xor
adc
cmp
xor
mov
int
and
sub
mov
pop
std
sbb
and
loopne
xor
les
xor
or
popf
adc
inc
outsl
shll
mov
xchg
inc
or
int3
cmp
xchg
mov
push
mov
hlt
adc
and
bound
lea
push
popf
push
icebp
jmp
push
inc
das
out
pop
xchg
iret
and
sarl
cmc
jb
fimull
push
pop
cli
xchg
mov
and
test
stos
and
xor
insl
mov
mov
push
mov
lods
mov
pop
fmul
mov
aas
mov
mov
adc
aad
mov
aad
sbb
add
mov
pop
xor
push
popa
xor
cmp
push
jmp
or
jmp
xchg
add
adcb
add
mov
push
push
push
push
or
pop
mov
fadds
sahf
inc
inc
sbb
pop
inc
sbb
or
push
sbbb
pop
jno
lret
lahf
mov
mov
inc
adc
stc
pop
xlat
data16
and
scas
push
popa
pop
dec
data16
sar
xchg
cs
shrb
popa
add
arpl
mov
ret
andb
jle
test
jge
imull
sti
cltd
fchs
aad
adc
popf
inc
ficompl
hlt
jp,pt
inc
fcos
push
cmp
das
and
adc
jno
and
mov
es
xchg
xor
push
sub
ds
ss
and
xchg
push
clc
icebp
scas
js
xor
mov
mov
xchg
jae
fsubs
out
addl
add
dec
push
jmp
or
jmp
mov
cwtl
pop
arpl
inc
pop
sbb
call
test
sub
mov
dec
add
lock
inc
rcrl
push
push
mov
mov
lcall
hlt
inc
or
xchg
and
mov
push
shl
adc
outsb
jns
cmpsb
pop
icebp
xchg
jg
mov
cmp
insl
sbb
out
cmpsb
jecxz
push
subb
jp
notl
push
das
das
cmp
mov
int3
adc
repz
jp
pop
dec
jmp
and
mov
xchg
cld
sbb
fstl
pop
nop
jp
xchg
adc
jns
lret
jnp
push
push
jne
jno
inc
adc
xchg
dec
call
out
add
ret
inc
push
movsl
and
mov
sbb
leave
push
scas
pop
stc
nop
iret
or
lahf
push
xor
repnz
xchg
bound
cld
or
sbb
outsb
sbb
lret
shl
ljmp
inc
and
flds
jl
push
add
adc
dec
mov
push
lock
out
xchg
cld
add
inc
into
pop
imul
push
lods
sub
iret
rorb
push
clc
sub
in
aas
push
push
xchg
jmp
fcmove
mov
xor
add
fdivs
addl
ret
mov
pop
sbb
jl
scas
rorl
je
jo
in
mov
mov
mov
mov
mov
ror
imul
sbbl
mov
lcall
jnp
push
scas
push
das
pop
lcall
fstl
xor
js
cmp
or
and
jbe
cmp
and
popf
aam
loope
gs
mov
xor
ljmp
xchg
lods
pop
or
inc
int
in
mov
cmpb
push
push
cmp
punpckldq
xchg
cmp
or
shll
outsl
mov
adc
sti
iret
jp
sbb
sub
xchg
jnp
inc
into
xorl
mov
or
outsb
sub
sbb
push
push
sahf
xchg
imul
xor
imul
adc
mov
fisubrs
xor
jno
fdivs
jne
dec
les
addr16
cld
mov
ss
in
jp
ret
xor
mov
mov
arpl
cmp
mov
push
int3
lcall
push
clc
and
fldl
xchg
imul
xor
or
jnp
adc
push
xchg
aad
and
clc
loop
dec
pop
add
insb
insb
xchg
xchg
dec
adc
iret
cmp
imul
mov
rolb
lods
xchg
scas
movsb
cmp
lret
pop
push
cmp
sbb
xchg
loope
xchg
and
imul
push
icebp
mov
add
xor
lret
sbb
adc
jle
jo
in
jb
dec
inc
enter
testb
jl
popa
mov
in
stos
in
loope
outsb
repz
or
int3
lret
or
mov
adc
mov
mov
mov
shlb
outsb
cmp
mov
mov
and
fisttpl
cmp
insb
xlat
out
test
lahf
sub
rcrb
xchg
nop
mov
ret
mov
test
add
ss
jle
rol
inc
mov
imul
or
inc
jne
sbbl
lds
test
les
inc
xchg
sti
dec
fbstp
add
cmpsl
jmp
rep
inc
aaa
jmp
cli
iret
addb
mov
jg
bound
lret
repz
cli
mov
jne
lods
out
xor
sbb
mov
lods
mov
or
cmp
mov
adc
test
lock
xor
movsl
lret
xlat
rcll
pop
push
loopne
xchg
int
add
xor
xor
sub
add
cmp
cmp
pop
repnz
data16
je
clc
jnp
lods
loope
mov
lock
popa
push
ret
mov
mov
xor
push
lods
repnz
add
inc
inc
js
test
inc
push
aas
clc
cmp
sub
add
pop
les
and
push
mov
inc
push
push
xchg
out
popf
jp
lock
xchg
mov
mov
sbb
fbstp
stos
ljmp
mov
out
mov
inc
mov
fdivrs
inc
sub
imul
pop
ret
lret
bound
in
and
inc
fistps
sbb
into
pop
cmp
sub
dec
ret
pop
loope
out
jno
xor
scas
lret
pop
or
aaa
pop
sbbl
inc
lods
lods
jl
mov
rcl
xchg
xchg
mov
pop
dec
test
pop
cmp
add
inc
push
jle
in
das
cmp
lods
cmp
in
rolb
test
out
xlat
sbb
dec
pop
adc
push
mov
xchg
cwtl
insl
sbb
lods
cmp
push
aas
popf
jae
mov
cwtl
aas
pop
outsb
outsb
test
int
loope
or
sub
and
addr16
fidivl
xor
testb
add
add
rorb
fiaddl
jnp
mov
fisubl
adc
cwtl
popa
sahf
in
dec
test
pop
cmp
daa
stc
nop
pop
movsl
jnp
mov
xor
xlat
xchg
adc
faddl
aas
hlt
mov
push
movsl
sbb
adc
stc
mov
mov
test
ja
or
cmp
pop
hlt
mov
fidivrs
imul
mov
add
or
pop
imul
cs
sbb
roll
cs
loope
popa
adc
ss
cltd
pop
mov
push
fcoml
cwtl
cmp
add
into
test
adc
adc
pop
cmp
xchg
push
stos
xor
sbb
imull
cmp
xor
jns
add
mov
cmpsb
mov
or
pop
iret
pop
cmp
fadd
dec
mov
stos
out
push
imul
mov
or
add
jns
mov
and
lcall
push
arpl
mov
mov
pusha
scas
movsl
lds
enter
xchg
in
mov
ret
sbb
imul
push
pop
jecxz
ja
xlat
sti
mov
lcall
add
or
cwtl
das
pop
pop
adc
pop
ljmp
xorb
aaa
pop
pop
jns
or
dec
inc
cmp
outsl
inc
sbb
dec
push
pop
mov
in
les
outsl
in
rcl
ret
sbb
sahf
and
mov
setge
xor
fdivrs
mov
jmp
test
cmpb
sub
bound
adc
or
xchg
sub
int3
pop
xchg
les
push
xor
arpl
adc
int3
pop
xchg
arpl
cli
jl
imul
xchg
test
ss
dec
test
in
mov
js
inc
out
inc
jmp
jp
mov
cmp
and
popa
mov
dec
dec
fstpt
ret
popa
sub
xchg
sbb
mov
ret
sub
testl
sbb
mov
pop
lock
cs
pusha
sbb
add
fadds
inc
imul
popf
sub
icebp
outsl
daa
inc
xchg
out
mov
mov
add
int3
cmp
pop
push
xor
sbb
decl
cmp
xor
testb
jnp
xor
fisttps
inc
pusha
mov
out
dec
jae
jecxz
data16
adc
dec
popa
inc
inc
call
outsb
mov
mov
repnz
sbb
jmp
adc
in
aas
fcompl
insl
inc
cmp
adc
mov
jae
xchg
sahf
push
sbb
call
pop
pop
mov
movsl
sbb
pop
movsb
add
lods
inc
and
pushf
imul
inc
out
cmc
inc
aam
mov
sbb
fdivl
mov
jno
xor
clc
jl
pop
mov
pop
and
psraw
xchg
imul
imul
sbb
add
es
pmullw
pop
and
int
push
sub
sti
sbb
cwtl
pop
sub
inc
test
mov
or
jno
jnp
adc
and
test
adc
cltd
mov
push
cmp
jge
jecxz
sahf
mov
cld
cmpsl
and
fisttps
or
push
inc
lods
scas
aam
mov
jg
dec
cmp
jecxz
inc
leave
sub
mov
push
nop
dec
push
xchg
cmpb
or
mov
xchg
add
mov
and
test
inc
aam
out
lds
cmp
push
sub
fnstcw
xor
clc
into
ja
jecxz
mul
mov
and
jecxz
das
and
jno
mov
cmp
push
testl
icebp
negb
test
xchg
adc
adc
mov
mov
adc
fldl
hlt
jmp
mov
adc
lods
mov
xchg
test
jno
mov
bound
pop
mov
cmp
cmp
addb
sub
test
add
in
repnz
iret
fildl
in
xor
mov
in
inc
mov
mov
mov
adc
or
dec
push
pop
mov
or
cmp
ljmp
jbe
dec
test
test
xchg
and
repnz
into
jmp
adcl
cs
mov
push
sub
mull
mov
out
add
test
cmp
or
jmp
mov
sbbb
cmp
push
out
mov
jne
test
pop
cmp
push
cmp
dec
inc
sub
or
sub
cmp
lcall
sbb
incb
dec
popa
outsl
mov
cmp
push
int3
testb
test
jae
cmp
push
adc
and
andl
lcall
in
mov
pop
xchg
inc
cmp
js
loope
repnz
in
xchg
lahf
leave
jo
mov
jmp
outsb
stos
jge
sbbb
sbb
jle
arpl
cmp
in
mov
movsl
pop
jns
fimuls
inc
xor
in
cli
addr16
push
adc
gs
nop
lods
andl
cmpsb
pop
hlt
mov
ss
push
bound
push
xor
aad
mull
mov
mov
out
or
mov
pop
sub
sbbb
pop
scas
cltd
inc
jge
dec
mov
pop
mov
ljmp
push
nop
push
lock
pop
xor
pusha
lret
and
adc
mov
jno
sbb
in
jo
lret
and
in
mov
inc
arpl
repz
in
js
out
dec
ret
adc
dec
adc
dec
add
aas
mov
mov
out
push
shrl
xor
dec
dec
data16
mov
jl
pop
in
sub
das
popf
cmc
sbb
ret
rcr
cwtl
shlb
sbb
outsb
pop
sahf
sub
sub
xchg
imul
xchg
and
mov
mov
pop
inc
sub
aad
sub
sbb
push
xlat
mov
dec
mov
lret
loopne
cmpxchg8b
shlb
xchg
pop
cmc
mov
frstpm(287
pop
ds
dec
aas
add
andl
adc
insl
sub
mov
mov
aad
movsl
mov
push
test
add
sahf
or
loope
loope
xchg
cmp
div
fmuls
or
arpl
das
call
lea
or
das
out
popf
adc
sub
and
adc
lds
mov
xchg
sub
andl
xchg
bound
xchg
scas
mov
int
roll
int3
lret
sbb
cmp
inc
dec
dec
cltd
jae
xchg
jl
cmp
and
or
sbb
mov
sub
or
int
jle
xlat
adc
aas
push
popa
jne
mov
adc
orl
adc
push
popf
cmp
xor
fmuls
xchg
push
mul
test
mov
cmp
addr16
sbb
mov
xor
push
lods
xchg
cmp
sti
push
fisttpll
negb
std
jns
cltd
ljmp
xor
add
sbb
sub
mov
out
sbb
xchg
es
stc
popf
bound
xchg
mov
ja
ret
jnp
lods
add
fstpt
mov
or
cld
addr16
inc
or
ret
xchg
mov
es
dec
jmp
popf
je
lcall
dec
aas
xchg
scas
or
scas
mov
jns
sbbl
arpl
data16
jp
out
out
mov
test
pop
fisubs
cmc
adc
rclb
ja
fdivrl
mov
int3
sub
push
push
inc
mov
dec
cmp
and
pminub
or
push
lods
pop
jmp
fcmove
test
adc
jmp
js
mov
adc
xlat
dec
push
jno
jge
nop
mov
loop
inc
xchg
mov
lret
dec
adc
adc
mov
es
xchg
jmp
xchg
mov
movsb
xchg
mov
cmp
jecxz
cwtl
inc
aam
int3
sarb
add
mov
push
cmpsb
adc
sub
fildl
int
xchg
lret
adc
incl
int3
inc
leave
scas
jge
shrb
dec
dec
pop
dec
les
cmc
bound
popa
fs
test
sbb
imull
push
pusha
jae,pn
add
sahf
loop
xor
daa
in
scas
pushf
stc
or
adc
outsb
cs
or
dec
sub
mov
ja
dec
mov
cltd
xchg
xchg
cwtl
in
shl
ss
stos
sub
out
xlat
jne
fists
lea
add
loop
test
enter
mov
sbbl
add
jnp
int
mov
shll
pop
out
push
adc
adc
dec
fists
mov
leave
pusha
loop
push
cld
nop
aad
push
ret
stos
aas
stos
xorps
mov
cltd
sbb
cmpl
lret
rcr
and
push
inc
mov
pushf
and
rclb
lahf
imull
fiadds
je
mov
loopne
push
pop
and
mov
jge
push
jo
cmp
fstl
repnz
inc
lcall
jnp
xchg
sub
mov
add
inc
sub
inc
and
pusha
aaa
jl
inc
xlat
pop
sbb
ret
lret
std
arpl
stos
dec
push
into
out
ret
xor
adc
push
jns
xor
push
inc
sti
sub
rcr
mov
pushf
cmp
imul
mov
jne
sub
mov
or
mov
cli
scas
add
adc
out
pop
test
add
enter
xchg
imul
repnz
xor
jb
cmpsb
insl
inc
aam
jo
mov
or
mov
movsl
inc
add
aam
push
fstp
fwait
stos
pop
xor
stos
fidivs
jle
xor
pop
mov
je
and
xchg
fs
inc
inc
insb
lret
cmp
lcall
inc
test
loop
add
aas
xchg
outsb
js
nop
movsl
loopne
cmc
int3
gs
loop
and
or
adc
adc
push
sbb
sub
aaa
sbb
push
in
div
pop
dec
or
pop
lcall
in
mov
sbb
and
addr16
or
fmuls
adc
xor
mov
dec
mov
mov
outsb
lods
xor
andb
movsb
xchg
mov
cmc
mov
add
adc
adc
push
jmp
pop
mov
out
and
add
dec
xorl
addr16
sar
sbbl
in
adc
out
xor
cltd
call
or
dec
lock
enter
shlb
xor
jle
fisubrl
cs
and
jmp
inc
push
outsb
sbb
sub
cmp
cmp
adc
les
add
or
fimull
fbstp
push
and
je
lea
and
mov
jae
repnz
jp
and
cmp
std
popa
jns
data16
ds
jno
jb
mov
mov
or
or
mov
bound
andb
lcall
and
jbe
jmp
sbb
mov
test
enter
and
popl
mov
pop
stc
imul
jl
arpl
fstpl
adc
pop
psraw
or
outsb
mov
and
daa
xor
mov
ljmp
in
add
pop
dec
cli
push
jae
pusha
fwait
inc
pusha
cli
cmpl
mov
loopne
lods
pushf
xorb
movsl
daa
xchg
jne
idivb
outsb
jl
mov
loopne
lds
jne
xor
into
pop
pop
mov
adc
outsl
fs
pop
push
fdiv
mov
add
test
mov
mov
lock
and
add
mov
cs
jno,pn
cltd
loop
subl
les
add
jecxz
mov
or
adc
sbb
mov
push
js
test
lea
retw
jbe
fidivrl
jo
fdecstp
cwtl
cmp
repz
xchg
int
dec
pop
jp
mov
testl
mov
sbb
and
fcomps
mov
fsubs
movsb
cltd
loopne
mov
pop
inc
rcr
mov
mov
dec
add
xor
sub
mov
xchg
xchg
add
sahf
add
add
aad
mov
mov
int
lret
popa
test
out
cmpsb
nop
mov
mov
bound
pop
mov
push
sbb
pop
cmp
filds
mov
out
adc
xor
dec
cmp
popl
ja
mov
pop
test
inc
out
adc
rcr
jne
sbb
or
cld
rorb
inc
pop
push
jmp
jbe
or
push
xor
fnsave
pop
cwtl
sbb
inc
jnp
loope
add
popf
je
aad
mov
sub
out
inc
loop
bound
in
inc
or
and
cld
push
jne
mov
scas
xor
push
hlt
mov
cmc
pop
aaa
mov
pop
sahf
out
dec
hlt
stos
lods
outsl
daa
cs
adc
dec
mov
pop
in
lock
pop
push
and
popa
mov
push
stc
fcoms
sub
mov
mov
jns
fsubl
ret
or
ficoms
shlb
in
sbb
cli
in
or
or
or
movsl
mov
insb
loope
nop
pop
ja
in
scas
in
lahf
jge
push
lea
andl
cmpsl
mov
mov
mulb
es
xor
add
fdivrl
cmc
cmpsb
cmp
mov
rorl
jg
test
out
pushf
movsl
cmp
mov
jmp
xchg
dec
ficoml
add
dec
cmp
pop
enter
leave
insl
sbb
sahf
ljmp
jne
pop
jne
xchg
in
lea
dec
adc
inc
pusha
pop
mov
jp
add
or
push
mov
jo
xor
cmp
out
pop
mov
mov
ja
xor
mov
add
mov
lock
mov
lret
test
std
pop
jne
int3
or
jb
icebp
mov
or
mov
cmpsl
inc
enter
subb
outsl
jns
jle
mov
xor
aas
shlb
push
scas
testb
mov
pop
jne
cmp
pusha
cmp
sub
fistpl
repz
fstpt
lret
push
cmp
loope
xchg
adc
loope
test
inc
pop
fld
cwtl
sub
dec
out
mov
sub
leave
data16
push
cwtl
ljmp
xor
mov
mov
leave
cmp
mov
stc
push
adc
xor
mov
lcall
pop
ja
push
sbb
or
xor
jae
inc
mov
popa
jg
insb
pop
jne
iret
push
cmc
cmp
mov
cmp
cld
cmp
stos
popf
xchg
adc
das
add
sahf
dec
inc
xchg
sub
inc
inc
push
loopne
xchg
push
std
lahf
pop
aad
cwtl
out
pop
mov
jle
js
pop
fsubl
rolb
ljmp
ljmp
xchg
mov
lock
fisubs
jmp
xchg
jecxz
sbbb
sub
in
aaa
xchg
pop
and
cli
dec
xor
ja
jge
nop
xor
jge,pn
push
cltd
mov
push
hlt
adc
add
div
jl
call
xchg
into
mov
rclb
repnz
lcall
and
or
jns
test
les
out
gs
sti
cmp
arpl
popa
clc
xchg
and
jo
jg
jns
pop
loop
xor
outsb
or
and
xchg
and
add
imul
mov
outsb
popf
loop
dec
mov
ds
test
negl
xchg
jge
lea
jmp
insl
test
push
jle
cmp
hlt
xchg
fcom
imul
js
and
out
rclb
sbb
adc
ret
xor
inc
int
fxch
cmpsb
in
xchg
gs
dec
test
ret
mov
data16
cld
out
mov
leave
pop
sbb
dec
adc
stos
xor
hlt
jae
mov
stos
incl
push
inc
and
call
loopne
es
push
pop
inc
lret
cmp
in
mulb
les
notb
jmp
jp
das
jne
dec
or
std
test
daa
fsubl
loop
cmc
adc
jmp
jno
jno
mov
lods
cwtl
push
loope
adcl
fwait
arpl
test
dec
mov
pop
lahf
add
cmp
cmpsl
ret
clc
jo
imul
or
imul
xor
in
or
lcall
fistpll
pop
xchg
xchg
hlt
imul
xchg
dec
call
jl
movsb
jp
sahf
lea
std
mov
sbb
das
lahf
testb
in
inc
cmc
xchg
lret
ds
mov
or
sub
aaa
jae
iret
sub
sub
add
pop
mov
movsl
cmp
flds
xchg
movsl
adcb
mov
xchg
stos
jbe
or
popf
jbe
into
fdivl
xor
nop
fldcw
push
int3
push
movd
push
lret
into
push
arpl
jge
xchg
sub
iret
cmpsb
cld
xchg
add
mov
shll
jl
or
push
loopne
dec
dec
hlt
pushf
movsl
lock
xchg
jo
mov
in
xlat
jmp
pop
scas
aaa
cmp
cmp
dec
pop
lea
ds
xor
push
jmp
movsb
call
push
xchg
sbb
dec
out
cmp
add
cmp
sbb
mov
and
pusha
push
or
test
aas
push
in
loop
xchg
dec
cmp
or
jno
or
cmp
inc
test
std
lock
sahf
inc
lret
xchg
mov
or
add
outsl
lods
or
mov
je
mov
dec
jnp
or
inc
popl
mov
test
mov
xchg
movsb
push
xor
in
andl
js
xchg
into
cltd
fbld
push
loop
fidivl
rorb
xchg
mov
iret
cmp
fmul
ffree
lret
dec
inc
sub
adcl
mov
int
push
add
into
sub
inc
jmp
mov
mov
ret
jl
fwait
js
dec
out
lods
outsb
shrb
je
or
testl
sub
xchg
lods
inc
adc
xor
dec
ja
ds
out
dec
cmc
ds
lock
mov
add
lahf
or
xchg
xchg
cli
cmp
push
mov
push
mov
mov
gs
imul
mov
inc
sub
int3
movsb
xor
mov
lret
dec
test
cltd
push
xchg
dec
push
mov
popa
pop
mov
cmp
movsl
vminps
cmp
push
adc
add
dec
or
push
jns
stos
jmp
icebp
jns
mov
pushf
lods
jne
lods
xchg
call
aaa
das
call
fdivr
xor
in
scas
jp
push
stos
push
and
fnstenv
add
sub
xchg
stos
pop
mov
add
xor
mov
dec
js
mov
flds
sub
or
inc
clc
or
jno
push
sti
jo
mov
mov
jno
add
mov
xchg
dec
in
rorl
ds
pop
and
push
and
mov
mov
jle
cmp
fistl
popf
sahf
cmc
fbstp
xor
cmp
movsl
aam
cmp
mov
and
ja
mov
pop
pop
lahf
xlat
loop
mov
push
outsl
into
mov
popa
enter
inc
or
lret
out
add
test
lock
dec
push
pushf
nop
push
loop
daa
mov
mov
test
mov
lret
lock
fcomip
and
xchg
sub
xchg
popf
sub
or
dec
mov
push
jl
imul
lods
leave
dec
cmp
popa
push
cwtl
xchg
adc
mov
pushf
cli
add
jnp
cmpsl
mov
fstps
cmp
stos
jne
jecxz
and
fldenv
pop
mov
outsl
pop
jns
cmp
test
cmp
fcoms
pop
or
mov
xchg
xchg
out
pop
cmp
xor
and
fwait
xor
lock
mov
mov
scas
cmp
add
xchg
insl
jle
mov
lds
mov
iret
mov
pop
mov
and
add
aam
xor
adc
rcl
mov
out
ljmp
cmpsb
das
or
push
xor
nop
push
mov
stos
outsl
frstor
popa
insb
and
or
inc
jae
sti
sbb
shlb
repnz
mov
in
out
push
bound
or
jl
data16
sahf
adc
lcall
enter
std
cmpsb
lret
lret
mov
sbb
lret
test
push
and
mov
lcall
sub
fdivrs
lock
jmp
mov
fiadds
jmp
push
fwait
out
mov
jbe
push
jmp
pop
xchg
popa
loopne
int
shrl
and
mov
iret
xchg
test
pop
add
ss
mov
pop
pushf
ret
mov
jnp
xor
jo
flds
or
mov
js
or
movsl
sbbb
dec
imul
xor
divb
or
mov
sbb
outsl
jnp
frstor
mov
sbb
xor
xchg
aad
xchg
mov
jb
je
out
and
fdivr
fistpll
push
daa
lods
pop
popf
cli
scas
subl
xor
mov
roll
mov
sub
sbb
jbe
pusha
pushf
scas
push
cmpl
std
notb
movsb
push
not
into
ret
sbb
mov
jge
pop
fadds
xchg
cmp
push
aam
pop
sarb
cmp
into
repnz
xchg
bound
aad
xchg
dec
mov
int3
xor
test
leave
hlt
test
cltd
js
out
ficompl
in
shlb
test
fnstcw
xor
push
std
shrb
sub
jg
loope
imul
push
pop
and
mov
xchg
push
push
mov
push
pushf
sbb
and
insl
cmpsl
nop
sub
dec
mov
dec
adc
jl
mov
xor
lcall
sbb
subb
jo,pt
test
xor
loopne
int3
das
decb
cmpsl
jns
xchg
into
or
inc
xlat
dec
dec
and
in
add
imul
sbb
inc
push
mov
pop
mov
push
mov
nop
outsl
loope
lods
adc
sbb
jbe
mov
int
mov
or
and
fst
dec
scas
mov
fmull
mov
cmp
mov
mov
test
sbb
pop
pop
adc
lods
repz
cmp
sti
in
nop
fisttpll
push
std
push
mov
push
imul
push
and
hlt
in
xor
lret
push
subl
push
stc
mov
fs
and
out
cld
jge
jmp
inc
xchg
xor
clc
out
add
fisubrs
or
dec
xor
les
cmc
cmc
rorl
mov
add
and
fiadds
popf
adc
add
push
jo
mov
les
xor
sub
aam
cmp
or
shrb
faddl
pop
rorl
sub
xchg
je
jne
xchg
push
pop
pop
inc
fdivrl
fists
icebp
inc
push
call
mov
fidivl
or
hlt
mov
out
sbb
or
in
rol
in
or
pop
jmp
jb
pop
mov
lods
inc
inc
dec
es
jl
popf
inc
out
inc
mov
lcall
scas
pop
mov
xchg
sub
fstpt
repz
xchg
xor
sahf
rorl
mov
sub
rcrl
push
outsb
les
inc
xor
ss
clc
sarb
cmc
mov
aad
mov
jb
xchg
outsl
xor
mov
pop
pushf
adc
jbe
int3
test
stos
dec
mov
repz
mov
mov
jne
push
inc
push
sbb
je
jp
or
push
xlat
scas
cli
ljmp
mov
push
imul
push
pusha
xor
es
leave
test
ja
push
dec
notb
cmp
dec
dec
xor
xor
jl
cmc
sbb
aad
push
stos
cltd
add
jge
out
or
inc
pusha
sub
leave
add
sti
nop
mov
xchg
add
jo
jmp
fs
xchg
mov
add
popa
ret
jl
or
push
loopne
xor
fidivs
cli
dec
scas
sub
std
jl
js
das
ret
jne
insb
pusha
stos
fucomip
push
or
sub
movsb
dec
xlat
sub
xchg
shlb
or
clc
popl
and
and
pushf
cmc
xlat
outsb
daa
inc
jns
gs
cmc
cmp
pop
push
dec
dec
dec
testb
cmp
inc
add
sbb
and
in
add
cmpsb
andl
adc
sbb
and
jns
arpl
jge
dec
sarl
std
call
adc
add
iret
dec
pop
out
je
mov
and
push
sbb
inc
out
jl
repz
push
call
inc
jecxz
push
fs
dec
jno
jle
setge
and
jb
test
dec
out
add
js
popf
mov
je
xor
test
cmp
jge
andl
pop
cmc
or
outsb
add
add
das
xor
or
call
mov
cmp
pop
xchg
pop
mov
insl
fwait
or
mov
sahf
shrb
jge
xlat
cmp
scas
popf
aam
fnstsw
push
push
add
fiadds
ja
sub
movsb
xchg
sub
es
pop
xor
push
fldl
call
in
jae
sahf
sti
xchg
adc
enter
ljmp
or
rolb
int
popf
and
fidivl
ficompl
nop
daa
push
dec
adc
shrl
ret
jg
insb
iret
jnp
sbb
rcrl
test
or
les
xchg
adc
lea
inc
sub
pop
mov
test
add
jnp
daa
jge
fs
sti
inc
in
test
mov
mov
jp
je
shrl
mov
and
lods
mov
pop
and
pop
arpl
xchg
add
and
test
mov
in
pusha
mov
cmc
hlt
ds
add
jecxz
inc
xlat
pop
js
mov
rcl
adc
mov
iret
xchg
lock
xchg
bound
dec
pop
adc
mov
mov
push
pop
sbb
jne
inc
mov
cmp
xchg
rorl
sbb
arpl
cltd
mov
push
and
aaa
test
call
iret
loop
outsl
ret
cmc
pop
pushf
mov
push
xchg
adc
movsb
pop
mov
mov
mov
pop
mov
dec
lcall
or
mov
cmpsl
xchg
xor
enter
fists
mov
andb
pop
mov
pusha
pushf
xor
std
out
and
inc
mov
cmp
or
scas
add
popa
push
decl
ret
inc
pop
cwtl
into
shl
pop
sub
pop
loope
adc
lahf
add
mov
setno
cltd
mov
imul
pusha
jmp
in
dec
sbbl
adc
outsb
lods
in
das
test
and
xchg
imul
xor
fld
push
or
iret
ja
xchg
cli
lcall
cmpsl
add
cmp
mov
xchg
jge
adc
adc
sbb
or
popa
mov
sbb
fdivrl
jmp
daa
push
pushf
ss
sti
js
cmp
pop
movsl
sub
inc
fwait
pop
lock
data16
sbb
mov
mov
punpcklbw
add
out
cs
lods
adc
rcll
add
xchg
sub
xchg
bound
pop
iret
or
fisttpl
rorb
idivl
loope
mov
imul
clc
inc
arpl
mov
xor
lods
ljmp
and
je
into
fisubs
dec
dec
leave
add
imul
jmp
inc
mov
add
sub
lea
das
andb
loope
arpl
push
push
shl
inc
sbb
sahf
cmp
xchg
aas
xchg
arpl
inc
pop
xor
addb
movsb
inc
lds
sti
fldenv
push
cld
sbb
mov
shll
mov
aaa
push
inc
std
jmp
into
mov
mov
stos
xchg
mov
xlat
iret
add
xlat
push
push
sub
mov
shll
inc
sbb
jmp
rclb
lods
mov
mov
mov
mov
ret
outsl
mov
mov
addr16
xchg
pop
decb
stos
lahf
xor
movsl
sbb
mov
cld
loop
xor
js
and
sti
inc
popa
and
mov
cltd
repz
outsb
jecxz
popf
sbb
xchg
scas
jo
push
mov
inc
jo
pop
and
cmpsb
xor
xor
clc
in
aaa
cmc
jne
mov
mov
pop
testb
dec
mov
das
jle
aam
add
xchg
cld
pushf
sbb
or
je
xchg
mov
aad
pop
mov
mov
pop
add
cld
mov
sahf
das
pop
rclb
je
and
sub
push
mov
jns
jbe,pn
push
insl
add
pusha
and
and
pop
lock
sti
das
cmp
xchg
test
push
popf
icebp
xor
in
dec
jle
scas
aaa
insb
add
rcrl
ret
clc
cmp
mov
xor
pop
jbe
fcmovnu
inc
or
mov
mov
sbbb
icebp
cltd
and
js
pop
lea
push
in
add
inc
ds
jns
xchg
push
sub
nop
push
jns
and
add
inc
or
sahf
clc
pop
push
in
add
xchg
ja
test
dec
fisubrs
movsl
lds
inc
lods
jb,pn
sarl
sbb
mov
shrl
fsts
imul
pusha
stos
mov
pop
test
jmp
cmp
sub
add
dec
lds
xor
pushf
pop
ljmp
lcall
and
jns
lds
push
push
mov
xchg
icebp
fstpt
dec
xchg
dec
cs
insb
pop
lahf
jo
xlat
mov
gs
xor
lahf
pop
daa
inc
sti
out
mov
dec
mov
mov
sahf
clc
dec
xchg
lea
mov
pop
cs
push
mov
xchg
lock
inc
push
jp
scas
shlb
pop
std
cltd
addl
mov
ret
aas
lock
sbbl
mov
xchg
scas
out
dec
lahf
xchg
movsb
jo
in
pop
icebp
mov
fldcw
insb
test
dec
jo
xlat
out
dec
repnz
and
in
aaa
sbb
add
sbb
stos
mov
jecxz
outsb
pusha
push
or
iret
cmpsb
fs
pop
nop
push
cmp
nop
outsb
arpl
shll
xchg
dec
negl
jmp
cmp
jg
lea
mov
arpl
sbb
add
ja
mov
decl
pop
or
sbb
xchg
xchg
lock
bound
shrl
jne
and
ret
pop
inc
in
jmp
pusha
push
lea
or
addr16
sahf
rol
jmp
ja
ret
pop
jnp
sbb
addr16
xor
fisttpl
adc
cli
xchg
scas
jbe
jge
inc
ss
movsl
sbb
pop
sbb
push
dec
jle
in
mov
push
push
es
jmp
pop
jmp
icebp
leave
pushf
or
mov
in
and
xor
fmull
push
and
and
pushf
and
sti
rol
jg
fsubl
sbb
pusha
stc
fimull
mov
ljmp
aad
pop
enter
dec
dec
out
decb
add
call
xlat
cwtl
leave
les
cmp
adc
loope
and
jo
stc
mov
data16
movsl
cmp
btc
push
bound
fs
fwait
stos
int
pop
mov
fsubrs
into
mov
sbbl
stc
pop
adc
cmp
fdivs
mov
lret
outsb
ljmp
fwait
mov
push
call
dec
and
inc
jecxz
mov
mov
cmp
mov
roll
in
jp
lods
stos
or
xor
and
aaa
xchg
pop
lods
jg
mov
arpl
test
push
call
movw
js
and
xchg
lds
comiss
test
push
or
incb
sbb
jle
int
loopne
adc
mov
or
or
sub
inc
push
loope
pop
leave
mov
xor
outsl
push
inc
mov
xchg
fisubl
movsb
bound
sbb
shrb
mov
jae
xchg
das
jp
mov
sbb
sbb
sti
andb
lock
and
pop
cmp
loopne
pop
jmp
aaa
xchg
add
or
mov
jb
push
dec
in
and
shll
sbb
push
inc
mov
loopne
out
inc
mov
test
mov
jno
in
mov
lret
jecxz
iret
js
sbb
sti
and
inc
jo
pusha
scas
out
add
cmpsb
sub
lods
push
xor
mov
sbb
negb
loop
inc
or
xchg
pop
lock
lahf
adc
pop
cmc
aaa
fwait
and
hlt
add
loop
push
and
ds
out
sub
and
push
dec
or
inc
mov
cmp
mov
pop
mov
push
subb
push
test
arpl
lds
ret
in
xchg
sub
outsl
loop
push
mov
xchg
fstpt
xor
addb
adc
push
fdivl
mov
dec
inc
fstpt
scas
les
cmp
pop
jl
add
negl
adc
sub
xchg
in
mov
xchg
sub
pop
jae
jae
lcall
and
sbb
fadd
mov
test
mov
xlat
pop
test
cmp
sub
push
mov
xchg
stos
std
rol
xor
mov
add
bound
das
scas
scas
in
push
push
add
push
lret
dec
or
or
cmp
cs
pop
sub
and
jo
fists
icebp
sti
push
mov
adc
pop
inc
xchg
popa
mov
rolb
xchg
arpl
in
sbb
in
pop
cmp
pusha
outsb
cmp
cmc
imul
pop
pop
ja
mov
mov
repz
mov
pop
cmp
bswap
sub
mov
push
ret
iret
or
cmp
outsb
fwait
into
sub
outsl
iret
insb
sbb
nop
pop
jg
pavgb
push
insl
jmp
movsl
push
int3
or
add
daa
mov
ss
leave
int
push
imul
hlt
xchg
mov
movl
cmpsb
cmp
push
pusha
dec
fs
jae
into
sub
push
in
mov
xor
fsubp
mov
jmp
sbbl
cltd
int
lret
pop
mov
fisubrs
test
jae
bound
xchg
mov
push
test
push
sbb
xchg
cmp
mov
pop
cwtl
das
mov
std
cmc
cld
mov
sub
sub
cmp
pop
inc
inc
lea
shlb
jae
fmull
stos
jg
push
or
adc
xor
xlat
jmp
dec
icebp
pop
push
lcall
dec
pop
fcompl
adcl
push
add
sub
inc
outsl
or
jmp
in
movsl
hlt
mov
push
or
push
insb
jno
pop
imul
dec
lahf
ss
fnsave
mov
mov
push
xor
jno
xchg
push
or
mov
les
lds
lock
cmp
std
jno
fistl
lret
adc
fwait
mov
movsb
fwait
shl
fmul
xor
inc
cli
mov
les
adc
sbbb
push
insb
int
out
adc
mov
popa
ret
imul
mov
orl
pop
icebp
push
pop
das
jmp
es
dec
mov
in
push
out
fisttpll
or
imul
imul
sbb
xor
mov
int3
sbb
cmp
sub
cmp
lds
out
es
jmp
jb
cmpsl
sbb
out
pushf
dec
cld
pop
jl
xchg
sbb
push
test
rcrl
mov
aad
push
loope
movsl
lods
in
ffreep
in
pop
adc
dec
mov
xor
or
in
ds
jae
pop
cmp
js
push
push
cmp
xor
mov
mov
xor
loop
add
mov
mov
push
arpl
repz
push
cmp
cmpsl
decl
hlt
fsts
xchg
add
test
sahf
into
stos
fldl
js
mov
mov
inc
cmpsl
xor
mov
sub
sarb
sti
out
pop
popf
xor
jg
xchg
mov
mov
push
pushf
mov
sub
jp
and
xchg
addr16
data16
jp
incb
mov
sbb
push
push
jno
nop
cltd
test
mov
repz
stos
cmp
inc
push
fiadds
aas
adc
lret
mov
inc
ljmp
sbb
jmp
pop
pop
mov
aas
icebp
mov
icebp
ds
orb
cli
pop
scas
xchg
cs
andb
cwtl
sub
roll
mov
es
sbb
or
or
jnp
or
out
sub
cmp
andb
mov
popa
mov
sbb
dec
xchg
testl
sbb
scas
hlt
or
fisttpll
ljmp
inc
stos
lock
fsubrs
xchg
cmp
and
out
dec
sub
xor
adc
inc
and
sub
jns
and
insl
loopne
icebp
jl
das
mov
xchg
or
mov
xor
jnp
push
or
mov
sbb
inc
fisubl
inc
cwtl
fbstp
pop
stos
pop
test
mov
mov
sbbb
mov
in
int3
cli
adc
xor
cltd
jl
pop
add
cmp
add
aam
stos
xor
jp
add
imul
sbb
loop
inc
sub
in
lea
clc
xchg
mov
mov
mov
push
xchg
mov
fsubrs
rol
adc
mulb
or
pop
cmc
or
jl
xor
jmp
adc
cwtl
sahf
nop
dec
cmp
inc
jmp
dec
rcrl
or
pop
jmp
pop
repnz
cs
fcomps
sub
outsb
push
lock
lahf
push
mov
daa
or
stc
lods
pop
stos
mov
sub
and
sbb
ds
jbe
in
pop
sbb
out
cltd
dec
mov
clc
mov
arpl
mov
movl
stos
dec
add
outsl
test
sbb
mov
imul
out
jne
ficoms
fcompl
ds
std
scas
lcall
bnd
cwtl
or
je
insl
push
pop
xor
mov
push
movsl
jno
jns
xchg
test
fwait
arpl
adc
nop
in
out
jns
cmp
inc
dec
scas
inc
fcompl
jmp
faddl
pop
mov
addr16
xor
xchg
dec
mov
outsl
mov
adc
fwait
scas
std
push
mov
adcl
push
or
jle
adc
pop
pusha
jno
pop
clc
sbb
lcall
test
cmpsb
cmpsb
mov
dec
sub
cld
adc
dec
aad
jg
push
insl
lret
mov
aam
and
adc
ja
outsl
loopne
ret
imul
push
pop
ret
pop
xchg
jne
ret
mov
pop
adc
jg
add
aam
and
push
mov
sub
dec
je
fsts
mov
mov
sbb
mov
pop
cmp
ficoml
cmp
pop
or
push
jno
cmp
dec
push
xlat
repnz
nop
push
popf
cs
in
jo
lcall
cmp
or
mov
fldl2t
pop
inc
xchg
cld
mov
mov
mov
clc
jbe
sub
add
jns
iret
and
jle
mov
add
gs
pop
sbb
cltd
pop
inc
inc
add
stos
push
mov
adc
lcall
decb
bound
sti
pop
mov
jo
pop
dec
cmp
inc
adc
out
sub
hlt
push
cmp
jp
jle
test
add
dec
insl
mov
aad
push
xlat
sahf
pushf
mov
cmp
pop
pop
mov
lds
ja
iret
test
fwait
xor
jp
bound
jg
sub
pop
jl
sbb
stc
sbb
gs
movsb
jnp
xorb
pop
add
iret
mov
mov
pop
rcl
imul
mov
and
push
adcb
sub
sbb
hlt
mov
fldt
in
outsb
sarl
pushf
cmp
cbtw
leave
jne
push
jb
cmp
xlat
cli
push
imul
out
add
scas
mov
imul
sbb
shll
dec
arpl
dec
aam
and
pop
dec
and
repz
and
shl
cli
rol
movsl
mov
and
aam
jb
adc
out
movsl
cmp
fsubrl
push
jb
push
push
dec
xchg
outsb
jb
fnstcw
xchg
mov
xchg
mov
arpl
orl
xchg
sub
sbb
mov
pop
jecxz
or
mov
leave
sti
push
push
mov
push
dec
push
shlb
cwtl
and
aam
cmp
and
or
dec
sub
xor
pop
loop
xlat
mov
leave
jp
les
xchg
sbb
mov
push
mov
outsl
and
jl
sub
iret
mov
enter
jbe
lret
mov
xlat
les
dec
xor
imul
lahf
adc
out
fmull
or
shlb
mov
mov
cltd
adc
shrb
bound
mov
imul
cmp
mov
jl
mov
cmpb
sbb
mov
xchg
cmpsb
lock
icebp
psllw
add
repz
movsl
xor
xchg
add
mov
inc
mov
loop
lods
lret
mov
sahf
pop
dec
stc
popf
xchg
push
jno
stos
xlat
jo
sub
sub
sbb
stc
xchg
xor
xchg
aas
xchg
mov
lret
decb
and
pop
repnz
push
xchg
xchg
push
jmp
xor
insl
outsb
fistps
les
xchg
sub
sahf
loope
mov
xor
or
arpl
data16
imul
pop
push
pop
clc
xor
mov
fcoms
adc
lds
leave
test
push
repz
push
fsub
or
and
mov
mov
jbe
adc
in
or
xchg
and
jmp
cs
fwait
lret
pop
xor
dec
mov
xor
xchg
xchg
pop
jns
mov
popf
ret
cmp
pop
jg
cmp
dec
sarb
dec
cli
outsl
or
ret
scas
mov
scas
push
jae
pop
push
movsb
mov
jo
jno
mov
fsubl
dec
pusha
ljmp
pushf
outsl
mov
jmp
mov
rorl
cmp
adc
or
loope
mov
orl
pop
mov
cmp
mov
cmp
sub
stos
data16
mov
pop
lock
push
fdivp
lret
out
cli
sub
es
xor
jmp
sahf
addb
pop
loop
pop
push
dec
leave
inc
addb
insl
push
and
jno
push
dec
sbb
sahf
dec
jbe
sarb
jecxz
mov
sub
adcl
jecxz
and
cmpsl
mov
push
pop
lahf
cmp
xor
enter
repz
mov
add
ljmp
fmul
fscale
mov
and
sub
sub
lods
out
pop
sbb
fsubrs
and
loopne
dec
out
cmpsl
pop
jo
fisubl
imul
push
sbb
xchg
jns
sub
cmc
or
xchg
push
dec
xor
mov
push
rorb
and
int
ljmp
mov
mov
push
ret
push
sbb
mov
mov
mov
orb
adc
push
fstl
inc
mov
jl
repnz
dec
aam
shrb
popf
xchg
mov
mov
dec
or
nop
jb
cwtl
sbbl
jae
out
lret
cld
packssdw
or
dec
and
testl
add
aam
xchg
mov
adc
idivl
add
cmp
adc
pop
xor
loope
sbb
pop
inc
sbb
xchg
mov
mov
pop
repz
pop
jp
push
cmp
adc
mov
push
popf
nop
add
pop
cmc
popf
and
ds
xor
aas
push
stos
jecxz
fwait
mov
aam
inc
push
outsl
je
xchg
lahf
or
inc
in
add
mov
in
pusha
scas
clc
jae
or
mov
push
or
subb
mov
leave
push
nop
push
pop
mov
mov
movsb
mov
mov
mov
out
cmp
gs
jp
pop
mov
sarl
mov
cmpl
jne
or
push
jecxz
sbbb
push
sbb
mov
js
in
jge
jnp
xchg
outsl
jns
daa
sahf
mov
ret
mov
lock
xchg
jge
clc
adc
pop
test
nop
dec
jno
push
pop
push
push
in
loopne
adc
call
or
or
or
dec
inc
push
inc
out
mov
gs
inc
scas
pop
jb
xchg
dec
jge
test
and
sbb
popf
imull
repnz
cmp
imul
lock
xor
xchg
bound
and
xor
scas
sbb
das
inc
inc
dec
dec
xchg
dec
or
les
cmpl
out
xchg
popf
or
xchg
sahf
xchg
jo
cmpb
das
test
std
movsb
out
lcall
das
mov
jno
mov
out
shll
int3
mov
xor
int
xchg
or
cltd
or
out
stos
mov
aaa
mov
and
sbb
movsl
in
pushf
jnp
lret
sub
mov
push
mov
cmpl
jg
movsb
mov
mov
mov
or
push
push
aad
adc
aam
fwait
adc
std
xlat
outsb
das
jmp
mov
jg
push
test
js
adc
pop
das
inc
test
scas
andb
lret
fistl
jl
cld
adc
sbb
lock
sub
sahf
xor
sub
fmull
jmp
ljmp
stos
add
cmp
mov
sub
push
xchg
and
shl
data16
out
or
pop
mov
ffreep
xchg
lea
sbb
aad
push
pop
sbb
cmpsb
js
cmp
add
testb
add
in
inc
push
mov
mov
add
ds
fwait
adc
or
xor
cltd
sub
aam
data16
sbb
mov
imul
insl
add
push
jg
mov
xor
sbbl
inc
lcall
add
xchg
out
sbb
jbe
add
loope
pop
adc
lahf
mov
mov
sbb
lret
gs
xlat
outsb
sub
mov
add
xor
xor
rcll
add
mov
inc
aas
icebp
xor
daa
push
out
cld
xchg
or
insl
jge
add
push
sbb
bound
or
mov
push
cmp
dec
fbld
insb
adc
mov
pop
decl
inc
adc
cmp
subb
sbb
fidivrs
in
cmp
fildll
ja
nop
cs
lahf
lods
orb
cmp
outsl
sbb
lret
std
sub
lahf
xchg
out
mov
or
pop
add
loope
xchg
push
pop
cmp
push
lret
movsl
fwait
xor
push
adc
ds
cmpsb
rorl
lea
imul
push
rol
xchg
sub
sub
sub
and
jp
push
or
mov
add
mov
dec
pop
rorb
jne
pop
sbb
and
arpl
nop
subb
xchg
adc
bound
xchg
xor
mov
inc
xlat
inc
adc
jmp
and
repz
dec
mov
aas
cmp
shlb
adc
fidivl
cli
scas
jb
ljmp
fimuls
outsb
jl
mov
xor
push
push
loopne
fsubl
das
aaa
mov
xor
xor
and
adc
pusha
subb
pop
into
jp
or
add
jp
mov
stos
fldl
mov
ss
push
push
shr
es
sbb
mov
xchg
and
lods
int3
call
out
fcoms
ljmp
fstps
inc
cmpsb
jmp
ds
adc
mul
xor
and
lcall
stc
adc
jmp
jae
sbbb
pop
fldl
sbb
inc
inc
add
cli
popl
cmp
sub
mov
lods
cmp
cmp
in
fisubrl
hlt
adc
stos
pop
or
and
repnz
lods
mov
out
loope
fsts
dec
mov
pusha
and
movsl
mov
out
rcrb
popa
sub
xor
dec
arpl
outsb
fnstenv
rorb
xchg
daa
inc
rcll
jno
fs
and
outsb
adcb
mov
add
rcl
rcrb
es
rcl
lock
mov
into
pop
fsubr
popf
pusha
icebp
push
adc
add
mov
push
aad
push
ror
out
sub
hlt
or
std
sbb
dec
pop
mov
jae
adc
xchg
jno
lahf
aam
inc
fdivl
je
or
pop
in
mov
inc
xchg
lock
lahf
push
ret
xor
xor
js
inc
sbbb
push
add
mov
sub
inc
fbstp
sub
dec
in
cmpsl
sub
insl
push
addr16
jmp
mov
jno
inc
xlat
scas
xchg
mov
mov
jecxz
sub
icebp
mov
mov
movsl
addb
daa
sti
adc
fimuls
jp
and
cmpsl
xchg
out
out
std
bound
into
pop
push
icebp
and
das
fidivrs
js
jbe
jne
add
sub
push
pop
rcr
inc
inc
mov
dec
lods
jmp
rcl
pop
dec
pop
pushf
mov
add
mov
test
mov
or
xor
jle
jmp
and
xlat
pop
leave
xchg
pusha
cmp
dec
mov
ja
mov
aam
iret
cwtl
popa
dec
fidivrs
pop
add
and
add
test
addr16
lock
pop
jae
rorl
mov
lahf
stos
loopne
shrb
push
outsb
add
rorl
movsl
mov
and
push
mov
sarb
cmp
xchg
or
rcl
sub
das
xchg
lret
lcall
popa
scas
ss
add
jne
jbe
mov
lcall
xchg
aas
imul
jbe
inc
mov
dec
loopne
hlt
or
out
jnp
insb
ja
jb
addb
daa
jae
fidivrl
aas
loope
mov
and
cmp
ja
inc
xor
xor
call
movsb
jb
jg
push
test
and
mov
add
shll
pop
in
xor
xorb
pop
mov
pop
cmp
test
loop
leave
sar
in
xchg
sub
cld
mov
cmp
clc
jge
gs
mov
cmpsl
test
orb
and
and
scas
xchg
fldcw
sub
out
cmpsl
es
int
pushl
aas
xchg
jae
idivb
lahf
cli
jg
or
cli
and
sbb
push
pushf
shl
je
lea
lea
cltd
dec
fidivrl
push
push
call
addr16
outsl
sbb
push
cmp
enter
mov
dec
pop
int
and
ficoml
mov
clc
loope
xchg
fimull
aam
mov
cs
pusha
stos
mov
lods
into
lock
iret
leave
pusha
test
jns
jae
out
cmpsl
addr16
mov
mov
incl
sub
dec
loopne
adc
mov
push
je
push
xor
sbb
mov
push
mov
ret
jbe
xchg
mov
xchg
mov
sub
mov
pop
xchg
cli
vpaddusb
repz
push
jmp
or
cmp
mov
and
fdivl
or
cmpsb
xchg
sub
negl
mov
add
sbb
popf
adc
popa
or
imul
roll
push
adc
xchg
cmpsl
test
cmp
lock
jno
rcl
mov
xchg
scas
xchg
leave
jo
es
test
ficoml
pop
lock
gs
mov
lea
mov
arpl
int3
int
cmpsb
push
or
mov
jae
mov
xlat
mov
test
jecxz
bswap
pop
addr16
repz
stos
mov
push
mov
rorb
mov
jns
lock
push
orl
mov
mov
fprem
imul
lock
mov
fs
inc
xor
test
mov
pop
fiaddl
call
popf
push
add
xor
call
pop
mov
bound
mov
mov
fistps
ja
fildl
dec
clc
ja
and
adc
rcrb
sahf
scas
jo
insb
mov
nop
outsb
insb
ret
cld
mov
bound
iret
data16
out
jnp
repnz
xchg
cs
or
in
add
ret
jb
test
les
nop
mov
stos
sarl
pop
push
nop
cvtps2pd
mov
cmp
pushf
mov
push
loopne
jnp
loopne
push
cmpsb
cmp
pop
push
les
mov
or
jmp
xlat
dec
pop
mov
cmp
add
shll
fistps
mov
xor
out
or
inc
jno
stos
movsb
xchg
xor
scas
jg
idivl
nop
idivl
fsubrl
sbb
scas
dec
dec
inc
inc
mov
adcb
mulb
fidivrs
cwtl
leave
cwtl
loopne
xor
mov
inc
test
movsl
push
jmp
mov
jb
sub
fdivrl
lret
dec
jle
mov
and
mov
cmpsl
mov
xchg
xor
jae
push
xor
xchg
mov
lea
lods
sbb
xchg
stos
inc
mov
lcall
icebp
js
and
sti
xchg
cmp
jecxz
sahf
sub
adc
mov
xchg
cmp
mov
mov
aad
mov
mov
arpl
ljmp
lret
rcrb
add
bound
add
test
imul
dec
not
cmp
jg
mov
xchg
dec
push
xor
enter
notl
test
lcall
jae
rcl
push
add
adc
or
in
movsb
jb
push
aaa
fisubrl
dec
icebp
adcl
repnz
dec
loope
stos
jb
mov
push
xchg
pop
sbb
xchg
sub
dec
jae
movsl
sub
mov
inc
dec
dec
stc
ja
pop
pusha
scas
lcall
sbb
adc
daa
jae
jg
jl
ret
loopne
jmp
xor
scas
stc
pop
mov
enter
repz
jmp
outsl
ljmp
mov
arpl
leave
push
cmp
fmulp
int3
sahf
daa
ds
sbb
xor
dec
jecxz
data16
rcrb
mov
popa
cwtl
jmp
adc
repnz
out
sahf
dec
cmpsl
ds
push
lret
lret
dec
in
ficoml
add
fwait
cmp
mov
mov
add
and
adcl
sbb
ds
das
add
shrb
inc
push
bound
bound
in
mov
lcall
xor
push
xor
ds
or
xorb
mov
ljmp
fsubp
mov
jae
fidivrl
mov
push
xchg
sbb
and
or
and
das
shll
pop
jae
jge
scas
mov
jns
les
loope
fstl
xchg
dec
movsl
jl
mov
stos
inc
sbb
das
mov
push
mov
push
out
add
mov
pushf
rorl
les
xchg
xchg
stos
inc
pop
scas
add
xlat
into
inc
fdivrl
jb
jge
in
jecxz
push
mov
mov
push
pop
fimull
cmp
subb
cli
das
int3
cmp
push
adcb
sti
mov
mov
dec
sbb
loop
mov
popa
negb
inc
pusha
or
in
bound
jg
mov
ljmp
or
push
bound
pushf
jle
leave
lods
mov
ficomps
stc
movsl
sub
pop
jae
subb
mov
movsb
das
mov
xor
xchg
push
push
bound
xor
in
pop
repnz
adc
into
mov
dec
mov
ficompl
shrl
pop
mov
mov
sub
aam
test
into
pmaddwd
shr
dec
inc
xchg
sub
sub
jo
mov
test
push
pop
mov
inc
sub
iret
adc
lret
xor
sub
leave
nop
mov
mov
addr16
dec
sbb
mov
jl
pop
mov
das
lds
movd
mov
adc
mov
push
lods
fsubrl
push
imul
bound
lods
jo
cs
addr16
push
mov
lock
push
outsb
adc
add
add
test
adc
cmp
jge
hlt
mov
mov
push
push
mov
xor
adc
pop
add
pop
push
stc
mov
jno
fists
mov
shll
test
xchg
jbe
clc
mov
push
mov
jns
sub
cmp
dec
mov
pop
push
sbb
jl
adc
add
inc
in
das
leave
and
sbb
outsl
push
jne
fldlg2
cmpsb
call
or
push
xchg
popa
js
mov
add
and
mov
lods
jmp
stos
scas
xchg
adc
lock
xchg
shrl
out
arpl
int
dec
cmp
sub
aas
adc
stc
push
nop
insb
fildll
xchg
ds
add
out
out
sbb
add
xchg
pop
das
call
add
dec
adc
mov
xchg
int3
mov
jl
push
sub
jno
fdivrs
outsb
imul
insl
in
sbb
xchg
mov
adc
jne
daa
add
sub
xor
jle
pop
sbb
pop
lcall
in
cmp
mov
idivl
pop
push
popf
cmp
mov
dec
iret
pop
inc
incb
jecxz
sub
hlt
repz
jp
pop
mov
xchg
jmp
lcall
sub
inc
movsl
movsb
mov
push
movsl
or
pop
insl
movsl
push
insl
test
sbb
imul
push
or
leave
dec
aaa
cmpsl
fs
aam
xchg
pop
sbb
fcmovb
pop
or
imul
jbe
or
and
gs
mov
mov
jmp
enter
adc
inc
xchg
outsl
enter
pushf
cmp
sub
xor
and
cli
rcrb
mov
int3
jg
sbb
pop
cmp
movsl
shrb
int3
mov
fidivs
fucomp
inc
jnp
adc
lret
jnp,pn
popf
hlt
outsl
leave
pop
mov
xchg
mov
push
dec
stos
cmp
insb
mov
push
push
cmc
mov
pop
or
pop
xor
and
push
sbb
xchg
inc
out
xchg
sbb
aam
and
add
sub
sbb
sub
push
fcomip
jle
stos
push
in
mov
sti
cmp
pusha
inc
push
shll
or
mov
cld
fisttps
mov
mov
loope
inc
in
in
cmpsb
out
push
xchg
and
xchg
addr16
jb
mov
push
mov
add
mov
jecxz
or
mov
lahf
aaa
pop
xchg
xchg
ljmp
push
mov
and
stos
ficoml
push
dec
into
movl
mov
sub
add
in
push
shlb
loope,pt
dec
push
mov
leave
push
fs
out
daa
fwait
xlat
imul
xchg
cmp
cmc
rcrl
add
fwait
dec
mov
pushl
fcoml
out
add
or
gs
outsl
jb
xor
pushf
mov
loopne
jnp
andb
sub
push
cld
dec
cmp
add
insb
mov
aaa
jge
sub
pop
push
inc
push
mov
gs
mov
inc
sbb
sahf
dec
loop
out
loope
out
int
xchg
or
jle
lahf
fsubrp
xchg
push
or
aas
pop
xchg
jnp
ret
bound
fldenv
outsl
xchg
icebp
ret
testb
xchg
jg
inc
push
inc
pop
ljmp
mov
fstpt
push
andl
xor
jecxz
push
cmc
mov
or
cmc
outsl
mov
sub
and
push
push
inc
clc
mov
ljmp
adc
lcall
movsl
mov
jb
sub
sub
outsl
and
jno
mov
xchg
or
inc
push
mov
sbb
inc
or
dec
or
xor
add
xor
in
jns
ljmp
pushf
mov
mov
cwtl
xchg
sbb
xchg
cmp
leave
mov
test
push
sbb
fcomps
pop
loopne
pop
push
inc
andb
mov
dec
fidivl
cmp
xlat
push
call
or
and
and
mov
inc
ja
mov
out
lahf
ret
outsl
xorl
inc
in
popa
xor
mov
fnstcw
cs
mov
test
sub
mov
cltd
adc
cmp
push
cltd
testb
pop
mov
cmp
mov
iret
gs
sub
jmp
lahf
aas
cmp
mov
xchg
fnstenv
mov
jmp
push
std
cltd
pop
cs
dec
rep
cs
movsl
inc
lds
scas
pop
lods
je
call
aam
ret
fdivs
imul
jno
dec
and
and
in
stos
dec
mov
inc
adc
insb
andb
test
js
roll
mov
rcrl
pop
sysexit
inc
cmpsb
in
mov
sahf
jbe
popf
inc
mov
fsubr
mov
movsl
sub
push
fistpll
lock
test
lret
ret
inc
cmp
ret
jg
xor
cmp
sbb
pop
cmp
xchg
movsb
in
cmpsl
push
scas
cmpsl
fcmovne
movsl
mov
adc
fsub
jne
adc
mov
and
test
jae
and
pop
call
cli
add
gs
lcall
gs
loop
outsl
in
mov
mov
imul
out
aas
cmp
sbb
add
push
cvttps2pi
inc
imul
stc
int3
cs
shll
je
divb
pusha
aas
fs
out
jbe
sar
repz
leave
and
pop
mov
movsb
sub
cmp
jne
add
mov
mov
enter
mov
sbb
adc
gs
cmp
rorl
inc
push
sbb
mov
or
jo
xor
in
cmpsb
mov
sub
fbstp
push
leave
and
lea
jns
aas
jmp
lea
test
inc
data16
jns
rcl
aaa
cltd
sub
dec
mov
data16
stos
out
mov
je
int
and
gs
xor
sahf
mov
movsb
pop
lock
add
andb
jle
cwtl
mov
test
js
sub
sub
jno
aas
fs
loop
xchg
dec
xchg
sbbb
jecxz
adc
jne
stos
data16
aam
or
fnstenv
xor
sub
lahf
xor
int
gs
sub
hlt
cwtd
mov
insb
fcompl
lea
sub
ljmp
and
or
dec
inc
sbb
pop
mov
mov
mov
imul
jecxz
mov
add
data16
divl
cmpsl
in
xchg
cmp
xchg
cmc
or
addr16
clc
cwtl
out
push
and
stc
test
out
aas
dec
jecxz
xchg
fwait
jnp
stos
mov
scas
jecxz
mov
arpl
sbb
xor
mov
cmp
xchg
ja
mov
mov
outsb
lret
mov
in
sbb
jecxz
inc
xlat
xor
mov
inc
inc
inc
pop
jb
mov
lahf
inc
sub
rclb
xchg
test
dec
aad
push
jp
movsb
fcmovnb
ret
add
jmp
jmp
hlt
pop
xor
aad
or
dec
push
push
push
jb
pop
rep
xchg
sbb
js
outsb
mov
xchg
outsb
aad
mov
push
adc
sub
or
or
in
xchg
mov
pop
jecxz
mov
mov
gs
mov
mov
aas
inc
sbb
rcl
fidivrs
push
mov
jg
push
add
push
lock
and
fs
scas
add
mov
add
sbb
shrb
es
push
inc
scas
repnz
sti
lcall
mov
in
addr16
stos
add
ror
pop
pop
mul
jl
cld
xlat
lds
ret
push
addr16
pop
out
add
mov
in
add
inc
daa
je
xchg
icebp
mov
iret
fcoms
adc
or
jae
arpl
mov
mov
sub
stos
pop
pop
scas
inc
dec
repnz
jo,pn
xchg
shl
in
adc
ljmp
stos
mov
into
aas
pop
orb
mov
lock
insl
movsl
aaa
and
outsl
adc
mov
test
enter
out
jo
xor
sbb
fimuls
int
sub
nop
sub
push
test
fisubrs
andb
stos
in
inc
int
les
loope
push
or
pushf
insl
in
movsb
push
lods
inc
clc
adc
jb
jo
iret
jecxz
jne
loop
mov
mov
xchg
dec
adc
lcall
mov
repnz
mov
mov
fisubrs
pop
and
out
xchg
cmpsb
pop
cmc
adc
xchg
xor
pop
ds
in
cmc
adc
mov
ja
dec
and
adc
lods
repnz
push
jl
lds
xchg
xchg
in
clc
dec
cmpb
loopne
pop
or
add
cmp
shl
aaa
mov
push
pop
insl
scas
lock
fadd
rorb
cmpsl
test
mov
pop
dec
add
das
stos
clc
in
inc
xchg
sbb
in
mov
cmp
adc
outsb
iret
ljmp
sbb
movsl
or
sti
aam
mov
sbb
insl
imul
out
sar
fwait
push
sub
int
cltd
jp
mov
cmp
sbb
inc
hlt
stc
popa
andb
mov
scas
dec
subl
fmull
cmp
loop
stos
jg
scas
mov
sbb
push
mov
das
inc
mov
cld
jg
jno
mov
inc
sbb
xchg
sub
pop
add
jmp
sahf
adcl
jnp
jbe
jbe
jno
or
pop
sub
pop
mov
imull
aas
es
ficomps
dec
dec
dec
jecxz
or
and
fxch
sbb
xchg
movsb
mov
sub
or
mov
mov
jge
mov
ret
imul
outsl
push
xchg
lods
mov
das
subb
jo
in
popa
sbb
push
cli
adcb
pop
rolb
push
jecxz
and
xchg
sbbb
sub
pop
ja
fdivrl
sub
ss
imul
mov
out
push
lods
cmp
cmp
add
and
jbe
mov
adc
js
inc
mov
cltd
cld
mov
jnp
pop
insl
xchg
out
bound
mov
fidivrs
lds
loope
inc
outsb
jp
xchg
push
add
mov
jo
mov
xchg
aad
push
lods
repz
adc
sub
dec
fnsave
jle
adc
and
je
loop
dec
pop
dec
je
sub
mov
push
sub
jg
lcall
and
lret
inc
push
ret
call
mulb
add
dec
push
or
aaa
jmp
test
enter
cmp
mov
pop
xor
fcomip
sti
mov
xor
je
lcall
xchg
cli
mov
push
mov
insb
mov
mov
push
sbb
pop
xor
cmp
adc
rolb
and
push
out
sbb
rcrl
mov
lds
sti
addr16
not
sub
cwtl
das
cld
xor
icebp
out
js
push
adc
mov
lods
sub
addr16
pop
js
push
sub
mov
mov
leave
pop
add
mov
push
pusha
pop
aas
ja
jle
add
jl
fidivl
jb
bound
aad
inc
push
cwtl
jne
bound
pop
arpl
clc
dec
fldl
mov
cmpsl
loope
and
dec
sub
popf
jnp
pop
mov
pushf
xor
fisubrs
sahf
adc
cld
into
xchg
mov
xor
sub
decl
dec
jecxz
mov
ffree
rcrl
fwait
jb
add
fadds
cmpsb
out
aaa
mov
dec
in
xor
mov
test
mov
push
mov
push
sub
les
pop
inc
sub
cmp
sbb
sbb
bnd
pop
inc
xorb
sbb
mov
fcmovbe
imul
jae
sub
fmull
ret
sbb
hlt
das
movsl
dec
aam
outsl
mov
out
mov
push
pop
add
inc
je
cmp
adc
inc
push
pop
add
sbb
mov
addr16
fistl
aaa
bound
cli
jno
mov
adc
call
adc
xchg
mov
jo
or
mov
jbe
ja
lret
std
cltd
fistpll
test
and
add
in
es
jecxz
push
cli
lcall
xor
rclb
loope
pusha
jnp
xchg
icebp
scas
call
sbb
out
mov
inc
call
mov
pop
cli
and
lcall
in
addl
or
lods
cli
pushf
test
repz
sahf
jno
aad
jo
int3
cmp
out
pop
xor
sbb
mov
cld
jmp
out
mov
inc
fsubl
cvtps2pi
pop
mov
out
das
mov
dec
stos
in
jmp
mov
xor
outsb
stc
ret
xor
ret
movsb
outsb
adc
mov
das
out
sbb
adc
inc
cwtl
mov
mov
inc
jge
add
dec
xchg
xchg
out
arpl
or
lret
test
mov
mov
cmpsb
cmp
add
pop
cmc
cmp
out
xor
push
mov
sbb
stos
cmp
jmp
cmp
les
and
outsb
test
push
push
cmpsl
push
shr
mov
lahf
sub
push
mov
pop
hlt
mov
and
fimull
sub
lret
xchg
jecxz
or
jmp
out
nop
aas
std
pop
outsl
jnp
xchg
sub
inc
loopne
imul
lcall
call
in
pop
sbb
push
xor
pop
int
dec
mov
divb
and
ret
push
outsb
test
mov
pop
sub
dec
frstor
addr16
lahf
or
mov
shll
daa
adc
adc
mov
je
xchg
leave
mov
int3
sub
cmp
sub
and
adcl
bound
repnz
out
movsl
cld
or
inc
jecxz
dec
into
enter
pusha
stos
mov
xchg
cmp
incb
sbb
dec
sti
jge
shrl
enter
adc
lcall
or
push
fidivl
cli
fsubs
gs
cwtl
cmp
inc
fisubl
dec
popa
ja
cwtl
dec
cmp
cmc
ds
loop
xchg
and
mov
out
pop
and
shrl
sub
nop
cli
xlat
outsb
sub
leave
cmc
lea
push
xor
cmp
outsb
rcrl
lock
xchg
adc
xchg
into
rcr
mov
sbb
fwait
xchg
xor
jbe
pop
stos
xchg
xchg
add
pop
adc
inc
mov
inc
mov
adc
into
fidivs
adc
mov
pop
pop
lods
orb
insl
stc
inc
rcrl
dec
add
inc
or
mov
cld
xchg
lret
mov
cmovs
jge
mov
pop
pop
sahf
mov
mov
es
repz
xchg
pop
repz
push
jp
inc
fstpl
shlb
insl
xchg
mov
call
rolb
jmp
sbb
lret
bound
in
mov
loopne
cmpb
pop
shrb
pop
lahf
jbe
clts
stc
nop
jbe
inc
fcmovb
jmp
repnz
daa
mov
pop
and
xchg
add
lea
add
fsubl
data16
clc
lret
mov
mov
sahf
mov
test
aad
std
lea
negl
out
ret
inc
jge
xor
pop
testb
lods
arpl
je
mov
sub
cltd
inc
xchg
aaa
inc
ljmp
push
push
jmp
popa
sbb
mov
fbstp
xchg
push
lods
add
mov
jge
rclb
fs
shlb
negb
sbb
pushf
sub
jmp
mulb
xor
pop
pop
fsubrl
fnstenv
out
mov
mov
pop
sub
pop
xchg
or
jecxz
push
jle
push
mov
test
test
push
cmp
ja,pn
sbb
enter
stos
sbb
test
rol
jbe
add
stos
rcrl
xor
dec
inc
stc
mov
orb
das
mov
xchg
imul
movsl
push
cwtl
nop
and
jns
addl
mov
mov
popl
and
and
xchg
pop
adc
fwait
xchg
jge
leave
push
push
gs
jne
rol
out
in
cwtl
sbb
inc
pop
or
inc
into
in
jno
mov
inc
mov
cwtl
sbb
or
add
and
mov
dec
pop
iret
out
fld
or
mov
mov
ret
xor
or
cmp
js
in
inc
aad
cld
push
rorl
std
sub
repnz
and
xor
xchg
subl
sub
jmp
dec
xor
test
int3
dec
gs
jge
mov
ftst
and
leave
mov
stos
jne
xchg
rclb
push
leave
loopne
sti
xor
rorb
jne
pop
movsl
xor
adc
ror
out
dec
or
gs
jae
mov
mov
lret
and
sbb
jo
shrb
lcall
push
mov
dec
aas
push
jmp
mov
aad
cld
cld
scas
inc
lock
inc
fmull
inc
fisttpl
dec
adc
out
push
frstor
ja
ja
pusha
repnz
jns
lock
outsl
cmp
out
lock
or
cmp
push
loope
mov
pop
stos
and
std
mov
arpl
cwtl
add
fwait
nop
ljmp
pop
xlat
jmp
sbb
add
cltd
xor
push
enter
popa
test
sub
mov
mov
insb
xchg
mov
loopne
pop
push
mov
es
sti
in
test
insl
push
shlb
jne
or
das
push
cmpsb
pop
rcr
jb
pop
stos
mov
into
jl
aas
shrb
lock
mov
out
pop
cmp
lret
add
std
jmp
clc
and
std
pop
ret
fcomps
test
mov
push
xlat
aaa
dec
jne
mov
ja
insb
add
popa
mov
bound
mov
xor
xchg
xor
pmulhuw
inc
in
xchg
int
cmpsb
das
test
mov
aaa
jne
pop
addb
and
pop
dec
xor
pop
cmpsb
jge
pop
jl
sbb
jo
shlb
ror
dec
imull
dec
mul
push
mov
pop
fmul
cmp
cmp
shlb
pop
iret
add
dec
dec
lock
and
jbe
jae,pn
inc
int
push
cmp
push
adcb
pushf
adcb
jle
push
push
stos
out
xchg
fisttps
rolb
imul
sub
pusha
push
xchg
mov
les
lahf
add
movsb
pop
pushl
pop
sub
icebp
nop
inc
rol
out
cmp
sub
mov
add
jo
pop
sbb
dec
and
mov
loopne,pt
add
jecxz
mov
in
add
pusha
shrl
rcrl
adc
dec
andl
pusha
lcall
subl
adc
lods
dec
jo
cmc
scas
adcb
dec
sarl
cmp
sub
je
pop
jae
pop
andl
add
jno
sub
mov
fbstp
jl
outsl
cmp
cmpsb
test
insb
mov
inc
xchg
cs
mov
daa
repz
pop
roll
cmp
lea
xor
cmpl
je
or
sub
repnz
enter
or
cmc
pop
xor
fs
xchg
loope
rcll
addr16
outsb
and
push
icebp
adc
aaa
repnz
fidivrl
loope
xor
leave
fcmovnb
add
test
and
and
iret
sbbb
mov
pop
insb
xchg
dec
mov
int
rcrb
loop
add
add
cmp
xor
sub
jo
pop
icebp
int3
sbb
enter
outsl
int
mov
pop
or
mov
imul
pop
push
push
shlb
aaa
loop
pop
ret
dec
pop
hlt
rcrb
and
xchg
ss
push
movsl
xor
xor
inc
ret
sub
data16
aad
push
movsl
or
add
inc
mov
push
fyl2x
mov
and
fadds
dec
sbb
cmp
jmp
or
into
pop
xchg
mov
data16
cmpsl
ret
push
jae
and
push
adcb
movsb
out
jg
push
xor
gs
roll
std
mov
das
movl
rcrl
adc
cld
sbb
xor
shlb
pop
lds
and
and
adc
mov
or
xlat
xrelease
xchg
cmp
push
in
pop
inc
mov
ljmp
or
sbb
rclb
pop
ljmp
push
fiadds
popf
hlt
push
and
and
sbb
movsb
cmpsb
bound
dec
xchg
pop
aas
loope
xor
push
mov
xchg
adc
cmp
push
mov
xchg
cs
mov
sub
and
inc
scas
mov
out
js
cmc
scas
mov
cmp
loop
lcall
jbe
sbb
lahf
nop
sarl
xor
outsb
mov
popa
and
ja
add
mov
and
mov
mov
mov
enter
cwtl
in
push
sahf
mov
cmp
jnp
lods
inc
vpcmpeqb
sub
hlt
mov
lods
ja
sbb
pop
or
push
xor
push
xchg
push
mov
xchg
in
xchg
adc
aam
dec
imul
cli
push
pushf
mov
les
mov
stos
jecxz
lds
out
jg
sbb
cmpsl
js
jmp
adcb
cmpsb
and
lahf
mov
loop,pt
push
out
lds
mov
xchg
sub
pop
imul
daa
jmp
daa
inc
clc
in
push
pop
ljmp
pushf
daa
mov
outsl
xor
sbb
or
mov
jmp
add
arpl
cmp
mov
jg
into
push
mov
and
pop
fidivrl
pop
push
rorl
pop
repz
sub
push
cmp
pop
negb
inc
lods
mov
rcr
cmpsl
sbb
out
mov
mul
cmp
xchg
test
or
push
or
stc
rol
or
push
movsl
fwait
dec
pop
cmpsb
pushf
add
out
or
jge
icebp
mov
lods
lods
or
scas
jae
adc
enter
mov
shrb
xchg
enter
loopne
add
es
rcll
mov
adc
push
mov
mov
les
jb
mov
sbb
jae
inc
inc
fistl
fcompl
push
div
xchg
es
jge
mov
fisubl
dec
mulb
cmpb
sub
or
sbb
jne
arpl
jno
inc
inc
dec
lcall
in
std
into
movsl
push
adc
adc
shlb
mov
and
mov
ja
stc
and
inc
mov
mov
mov
sti
jg
dec
icebp
lahf
imul
int3
cmp
imul
andb
cmp
pop
bswap
add
cwtl
test
push
add
and
inc
pop
movsb
mov
dec
call
or
rclb
test
inc
fdivs
lcall
push
out
fists
outsb
sub
or
mov
call
jecxz
dec
dec
jle
movsl
jl
pop
in
lret
std
add
stos
jo
push
sub
xchg
inc
cld
cli
mov
arpl
pop
pop
movlps
movsb
push
or
mov
mov
jl
leave
cld
inc
cmp
cli
imul
imul
fcmovbe
hlt
sti
mov
jns
jecxz
negl
sbb
mov
jno
mov
test
jle
dec
push
gs
ja
jle
jp
shrl
test
movsb
outsl
scas
cltd
inc
fnstsw
push
and
push
or
jbe
clc
ja
stos
and
in
pushf
jns
dec
fcoml
sub
cmp
loopne
or
cmp
enter
pop
loop
arpl
and
mov
aad
inc
pop
loopne
stos
or
jo
pop
int3
pop
cmp
repz
add
push
sbb
jns
in
jbe
lds
sarb
push
cmpl
mov
and
enter
sbb
jle
movsb
xlat
pop
sbb
insl
pslld
addr16
in
dec
mov
aaa
lds
sahf
xor
dec
mov
scas
xchg
sbb
cmp
pop
sti
push
mov
push
imulb
out
es
scas
sub
fbld
pop
pushf
psubsb
jge
add
ljmp
inc
push
xchg
ss
jne
lcall
jnp
inc
jle
enter
inc
xchg
push
sbb
sbb
rcll
jo
cwtl
push
loop
sbb
stc
sbb
jns
loopne
lods
xlat
sbb
je
popf
xchg
push
jbe
xorb
xchg
mov
mov
lretw
mov
push
mov
loop
int3
mov
push
xlat
jb
es
push
push
repnz
std
jae
das
ss
shlb
cmc
loopne
in
in
and
mov
icebp
mov
pusha
pop
or
shl
enter
repz
stc
insl
loopne
dec
and
inc
sbb
icebp
push
ficomps
popf
adcb
sub
push
mov
bound
popa
sbb
js
fildll
pop
inc
cmpsb
push
mov
negb
aad
mulb
mov
stos
xchg
mov
lret
fisttps
pminub
ret
test
mov
fucomip
stos
push
sbb
mov
stos
cmpsl
imul
nop
repz
xchg
cwtl
hlt
xor
mov
cwtl
lods
aas
xchg
das
cmc
push
sub
imul
rcl
cmpsl
cmp
mov
pop
dec
leave
jecxz
aaa
adc
pop
cmp
add
xor
bound
xor
mov
dec
add
test
push
add
fdivl
xor
fisttpll
or
jae
pop
pop
lret
ss
push
test
mov
lods
mov
mov
xchg
popa
fmull
dec
sahf
or
push
cli
mov
call
pop
sub
xorb
dec
clc
bound
insb
cmp
std
pop
mov
or
push
pop
stos
and
mov
inc
loop
xchg
enter
inc
jmp
pop
nop
lods
aad
mov
inc
adc
inc
and
sub
nop
xor
xor
and
rorl
adc
pop
mov
cmc
jb
mov
ljmp
inc
xchg
pop
adc
cmp
and
nop
cmp
fs
xchg
jmp
gs
push
xchg
add
cwtl
lahf
in
imul
ss
in
stos
mov
or
gs
enter
jbe
repz
fidivs
mov
aam
dec
mov
pop
bswap
pusha
out
popa
push
sub
hlt
addr16
divl
xchg
clc
add
sbb
xchg
xchg
jmp
jbe
shlb
jg
mov
cltd
mov
fbstp
xor
iret
fldlg2
pusha
pop
cmp
xor
jno
les
lahf
mov
dec
push
in
repz
xchg
mov
in
dec
lods
mov
lods
mov
mov
jmp
loopne
push
push
jb
or
add
fildl
mov
and
jecxz
subl
jnp
cmp
push
mov
xchg
add
je
jns
subb
pop
mov
into
ja
test
cmpb
jp
sub
roll
and
cmp
lea
adc
xor
test
sahf
jecxz
xchg
mov
mov
cmp
mov
in
cs
sbb
sbb
lds
jle
add
fsubrl
push
pop
jb
adc
sbb
jle
xchg
mov
jbe,pn
push
pop
dec
pop
popf
xchg
jg
mov
push
adc
arpl
pop
push
cli
jg
dec
pop
sbb
ds
js
pop
frstpm(287
sub
adc
xchg
test
mov
divb
shl
imul
pop
dec
arpl
adc
loope
sbb
cmp
js,pn
arpl
inc
pop
add
cmp
daa
ret
mov
arpl
stc
popf
inc
aaa
xchg
decb
dec
fnstcw
fsubrs
enter
or
pop
stos
mov
in
or
call
shlb
sar
mov
movsl
sbb
and
aaa
mov
cwtl
or
sub
pop
sbb
inc
mov
and
and
leave
mov
sti
mov
mov
pop
add
roll
add
push
movsb
ffreep
cmp
test
cmp
ds
mov
and
lods
jo
popf
dec
mov
xchg
dec
push
xchg
mov
xchg
out
popl
lods
cltd
dec
dec
dec
jne
in
sub
cwtl
xchg
fcmovne
adc
cmp
fs
lret
iret
jbe
mov
loop
fwait
rcll
popa
and
push
push
lcall
popf
stos
xor
sub
scas
xchg
scas
mov
inc
cmpsl
movsl
mov
dec
aad
cld
lcall
mov
dec
cltd
push
xchg
lods
or
stos
cmc
movsl
and
mov
loope
mov
add
fcom
stos
xchg
mov
dec
out
mov
out
cmp
push
insb
aaa
dec
xchg
cli
pop
fidivs
xchg
add
or
adc
in
xchg
cmp
pop
lahf
mov
clc
cld
sbb
inc
dec
aad
cmc
into
inc
jnp
test
lret
fwait
icebp
insb
popa
push
testb
lcall
inc
loope
pop
push
dec
pop
testb
push
and
or
fidivrl
sahf
mov
nop
mov
les
aas
cmc
mov
aas
call
ffreep
dec
push
push
and
sysexit
and
arpl
push
lea
lods
lea
das
xchg
pop
icebp
inc
sub
push
lods
popa
js
sbb
mov
push
sub
icebp
packuswb
lret
sbb
xchg
push
push
cltd
push
pop
in
jne
or
jle
sbb
cli
ret
push
ret
stc
mov
nop
xchg
adc
mov
inc
test
mov
sbb
sti
cmpsb
adc
inc
sahf
stc
and
mov
lret
mull
mov
movsb
divb
in
lds
cmp
test
test
je
pop
lods
dec
mov
fwait
pop
in
dec
insl
aas
test
jno
fisubs
mov
xchg
adc
fs
loope
bound
fstp
or
jnp
ds
jae
subl
mov
or
dec
mov
push
mov
cmpsl
stc
dec
push
sbb
add
test
and
lea
test
xor
mov
xor
arpl
push
push
jmp
dec
sbb
dec
pop
into
cmp
movsb
dec
xchg
daa
outsl
stc
aas
push
sub
push
pop
adc
in
dec
into
out
lea
mov
xor
pop
ds
push
out
test
xchg
sub
xchg
imul
fwait
scas
inc
int
jge
dec
out
int3
xlat
sti
cli
or
sub
and
xor
shlb
mov
mov
push
in
loope
xor
adc
in
xchg
xor
push
xchg
sbb
mov
bound
ret
mov
xchg
and
xor
es
inc
adc
mov
cmpsl
loope
sbb
sub
leave
stos
sub
dec
rcll
mov
or
adc
inc
mov
push
mov
int
push
outsl
outsl
or
adc
push
bound
daa
loop
xor
add
push
pop
lcall
cmc
cmc
fwait
mov
inc
pop
add
decl
mov
mov
and
push
fbstp
xor
ret
xchg
inc
push
outsb
loope
xor
mov
push
sub
and
push
mov
mov
repnz
dec
int3
cmc
cmpsb
sbb
pop
sbb
jb
cmp
mov
lret
dec
lcall
or
mov
nop
mov
cwtl
add
mov
mov
inc
xlat
outsl
cmpsb
xor
sahf
cltd
mov
fucomp
ret
shufps
push
inc
insl
je
icebp
xor
lahf
cmc
xchg
push
sbb
inc
inc
sbb
mov
mov
add
and
and
jl
xchg
xchg
push
jbe
dec
mov
test
loop
inc
mov
push
jmp
sbb
icebp
adcb
mov
stos
add
mov
or
mov
mov
insl
test
in
data16
je
mulb
fcoml
jp
jb
daa
mov
leave
inc
inc
push
in
jmp
ret
fdivl
cmc
xchg
push
jg
inc
daa
mov
xor
inc
gs
popa
lret
sahf
or
jecxz
xchg
xchg
push
movsb
shrb
popa
idivb
and
or
pop
adc
cmc
movsl
jb
fdivs
push
test
sbb
xor
inc
insl
pop
lahf
popa
xor
and
rolb
pop
adc
insb
in
clc
and
lock
inc
jecxz
mov
jae
ficomps
xor
push
xchg
bound
adc
int
loope
mov
lcall
insb
fs
iret
fcmovnb
cltd
mov
fdivrs
shrb
fdivrs
idivl
pop
stos
sbb
popf
les
cld
sub
lret
jne
lock
addr16
leave
mov
push
mov
pop
and
popl
es
pop
mov
lods
jno
bound
popa
int3
mov
out
mov
daa
enter
jne
pop
adc
fsubr
pop
lret
movsb
int3
aas
std
outsl
xchg
lds
add
mov
adc
cmp
pop
icebp
dec
add
mov
mov
or
adc
xor
mov
or
pop
scas
inc
not
xor
ficomps
or
inc
sbb
jg
test
push
mov
fldt
push
xor
cltd
push
jne
xor
dec
adc
repnz
lret
and
sti
mov
push
sarl
and
mov
xchg
lret
jp
ljmp
xchg
and
pop
or
les
cmp
pop
jg
les
mov
dec
pop
sbb
adc
jp
mov
imul
faddl
mov
xor
orb
sbbl
sti
jmp
das
dec
test
repnz
and
cwtl
fidivs
mov
jmp
lcall
dec
lock
ljmp
push
and
enter
dec
mov
jge
int
cmpsl
out
mov
out
loop
ud1
je
push
jmp
aad
cltd
fmuls
fidivrs
dec
mov
jnp
hlt
xor
test
adc
ss
mov
jbe
ljmp
push
adc
or
pushf
mov
jno
call
or
mov
sbb
pushf
rclb
mov
int
loopne
mov
push
xchg
aaa
in
dec
fwait
test
test
dec
aaa
fnsave
xchg
cmp
push
inc
fisttps
mov
pop
jnp
adc
lock
xchg
sub
mov
mov
sub
test
out
aaa
gs
stc
xchg
insb
sub
mov
in
pop
aaa
sbb
ret
outsb
xchg
loop
mov
add
out
call
dec
push
loop
test
lcall
das
imul
out
push
test
or
mov
in
push
repnz
sub
jg
xlat
inc
les
in
lods
stos
leave
je
adc
aas
nop
out
sti
jae
mov
in
call
daa
inc
subl
push
fdiv
rcrb
shlb
insl
inc
adc
mov
push
jae
shl
adc
push
lds
mov
cmc
movsb
push
decb
mov
aam
lret
and
fildll
aam
inc
jae
jbe
pop
jne
push
out
mov
mov
orb
jnp
pushl
pusha
push
jl
lods
add
movsl
xor
fwait
sti
add
xchg
outsb
adc
int3
data16
mov
aas
and
inc
loopne
in
push
xchg
loopne
int3
lods
cmp
inc
out
push
fs
lret
jmp
data16
pop
sub
lds
movsl
inc
aam
fadds
mov
out
xchg
mov
jp
pop
cmpsl
fbld
mov
daa
test
sub
or
sub
arpl
outsl
fwait
cmp
dec
clc
imul
je
pop
xor
in
aas
insb
cltd
rol
ljmp
rcll
aam
adc
mov
orb
sub
xor
mov
jp
arpl
insb
jl
sbb
add
sbb
clc
or
sub
and
pop
loope
jle
sbb
jg
push
mov
push
mov
push
loop
jno
inc
std
test
fildll
jo
mov
cli
fs
les
pop
movsb
repnz
fcom
sub
mov
push
mov
jae
mov
decb
in
roll
mov
cmp
out
xlat
fidivrl
sub
fwait
lcall
mov
fsubrl
adc
inc
xchg
cmc
mov
mov
inc
lods
stos
dec
fisttpll
dec
loopne
cmp
mov
insl
xlat
sbb
xchg
jnp
repz
jecxz
mov
stc
dec
test
jmp
and
fldcw
or
dec
push
pushf
and
cmp
mov
mov
sbb
xchg
pop
stos
dec
xchg
mov
adc
into
sbb
xor
cmp
aam
dec
pop
fdivrs
retw
ret
mov
imul
in
jle
sub
pop
cmc
xor
push
jl
fcmovbe
notb
pop
push
out
aam
test
repnz
cltd
xor
fwait
nop
in
xchg
mov
lock
pop
dec
rorl
ficompl
mov
les
push
clc
mov
hlt
jo
sub
sbb
leave
mov
call
les
and
je
and
mov
addr16
inc
adc
ss
push
push
mov
orl
xchg
dec
in
cmc
data16
test
mov
iret
leave
test
dec
imul
mov
mov
call
push
shl
mov
mov
push
mov
idiv
lods
pop
lock
mov
sahf
ret
cwtl
cmp
out
mov
in
push
outsl
cmpsl
aas
loope
scas
inc
sub
cld
pop
ror
icebp
pop
movsb
sub
push
jl
mov
shll
sbb
or
and
jmp
std
sub
adc
mov
pop
or
in
dec
in
hlt
push
sub
movsl
mov
push
push
insb
lahf
mov
xor
mov
out
lret
call
inc
test
mov
fstpl
ficomps
sub
pop
loopne
xor
xor
mov
adc
outsb
int
cli
nop
test
lret
sbb
adc
push
sti
stos
add
xor
mov
inc
and
xchg
cld
cwtl
inc
ret
cmp
loop
icebp
and
cmp
movsb
pop
std
aam
dec
shlb
mov
cmp
std
pop
jno
mov
roll
jge
pop
dec
das
or
cmp
pop
cmp
loopne
jb
sti
dec
fnstcw
lret
lods
add
out
imul
xchg
xor
call
cs
jle
insl
fs
jo
add
lcall
cmp
movsl
xchg
push
test
cmp
or
loopne
decl
rorb
adc
jecxz
insb
popf
sub
cs
cmp
push
sarb
push
outsl
andb
lds
xchg
std
stc
xchg
inc
cli
pop
push
stos
adc
fistpl
ja
xchg
popf
pop
push
sbb
fiaddl
mov
push
imul
xchg
repz
aam
cld
arpl
mov
sub
mov
sub
repnz
or
hlt
or
aas
test
sbbb
mov
mov
and
xchg
sub
push
insl
or
popa
jns
mov
ss
inc
aas
clc
sti
cmp
sub
or
ds
leave
push
sysenter
jl
inc
dec
sti
movsb
push
insb
push
jmp
push
sub
sbbb
fdivs
pop
scas
inc
mov
nop
cli
inc
test
popa
inc
fimuls
mov
inc
stc
adc
aaa
dec
rcrl
add
jns
sub
sti
test
mov
cwtl
mov
sub
adc
jp
sub
insb
notb
mov
fcoms
dec
test
mov
cli
popf
mov
cmp
loope
cwtl
incb
mov
xor
aad
push
aaa
lret
test
inc
fcmovbe
insb
sbbl
ret
repz
mov
leave
ja
sarl
sarl
test
xchg
fbld
repz
negl
and
rclb
sbb
nop
dec
cld
sbb
xor
xchg
inc
retw
nop
cmp
repnz
int3
push
jno
push
imul
inc
mov
or
sbb
dec
or
cltd
mov
out
test
sbb
popf
sti
jb
insb
cmp
or
or
out
sub
mov
cmp
xor
scas
or
inc
out
movsb
fnstsw
stc
jnp
xorb
dec
frstor
jb
mov
sarb
in
adc
int
pop
or
in
sub
push
xor
mov
xchg
cmp
fildll
jmp
lret
cmpsb
xchg
rcrb
mov
test
push
test
mov
repz
mov
push
cmp
shll
mulb
jg
iret
insb
mov
mov
jg
imul
mov
pop
psrlw
call
push
sahf
mov
insl
cmp
into
sub
sbb
sbb
xchg
mov
aas
jbe
jnp
movsb
cmp
ret
cmc
daa
push
call
leave
cmp
push
jns
push
and
popa
add
cltd
lea
out
xlat
repz
add
int3
cli
cmp
mov
and
mov
daa
xchg
inc
cwtl
std
jg
jns
adc
stos
mov
rcl
andl
xchg
aaa
rcl
inc
xchg
ja
int3
mov
mov
pop
mov
aaa
addr16
test
test
popa
lods
andl
xchg
mov
inc
or
mov
jns
pop
movsl
add
add
lea
sahf
and
fistl
mov
sub
jo
call
ljmp
cmpsl
mov
and
test
or
imul
xor
xchg
mov
cmpsl
cltd
shlb
orb
in
mov
xor
mov
jl
sbb
std
popl
lock
push
test
add
or
filds
jcxz
arpl
cmp
std
dec
xlat
add
or
insb
jmp
cmc
cmp
push
nop
inc
cmp
push
jmp
fdivs
add
xchg
loop
daa
lcall
sbb
leave
jg
stos
mov
jnp
jnp
xchg
pushf
aam
into
mov
inc
ja
fcmovne
xchg
inc
or
stc
out
jne
xchg
jae
lcall
out
aam
pop
movsb
cmc
jbe
cmp
jmp
adc
loope
sahf
sbb
lret
movsl
ret
jae
enter
push
lock
jge
and
dec
movsb
mov
mov
fptan
jg
popa
or
insb
and
fstps
ja
cmp
fs
movsb
insl
sub
ds
xor
addr16
mov
inc
js
flds
call
jns
or
add
mov
or
lret
sub
cmpsl
mov
dec
push
fdiv
pushf
pop
adc
mov
fildl
stos
and
add
inc
jno
mov
fsts
jo
xor
cmpsl
cld
scas
mov
in
sub
xor
sbbb
lret
sub
jg
cld
insb
ficompl
decl
addr16
test
inc
clc
adc
lahf
out
test
add
push
or
pushf
xor
and
dec
xor
icebp
imul
mov
sbb
test
push
push
daa
adc
xor
push
sbb
outsb
rcr
cmp
data16
mov
cwtl
pop
lods
add
aad
jnp
xchg
pop
in
pusha
orb
mov
inc
push
sbbl
adc
or
inc
cmp
push
push
testb
push
inc
movsl
mov
ja
shrl
mov
xor
ja
rolb
stos
jmp
incb
iret
lods
ljmp
pushf
dec
adc
add
je
mov
add
scas
cmp
ret
mov
pop
insb
out
inc
jo
enter
call
mov
cmc
push
mov
shrl
aam
and
xchg
push
sub
in
popf
add
popa
aad
push
es
sub
jg
add
xor
lds
push
add
sti
xchg
repnz
adc
add
or
mov
mov
sub
xchg
and
in
in
cli
adc
push
js
lds
pop
mov
bnd
sbb
mov
or
cld
jae
push
ja
insb
sahf
xor
add
mov
sbb
rorb
stos
fucom
pop
xor
pushl
xor
sub
push
sub
adc
int
jecxz
mov
sbb
leave
enter
iret
inc
test
cmp
pop
dec
hlt
ret
xlat
sub
mov
cltd
adc
mov
or
pop
insb
mov
nop
dec
mov
mov
ss
dec
popf
or
jbe
bound
int3
subb
inc
mov
decb
sub
pop
xor
mov
mull
pop
sub
xlat
cltd
es
sub
sbb
es
lret
add
jmp
mov
pop
jg
ret
shll
cmp
dec
in
cwtl
add
inc
mov
in
or
pop
fnsave
insb
xchg
jmp
pop
sti
mov
dec
inc
pusha
adc
sub
test
adc
stos
cmc
xchg
loop
adc
jl
dec
insb
mov
shrb
adc
stc
popf
cmpsl
aaa
arpl
ja
jb
cld
fs
mov
pusha
xor
xchg
mull
inc
fcoms
mov
mov
mov
popf
mov
test
pusha
shll
test
sub
sub
popf
pop
mov
xorl
or
and
add
dec
cmp
cmp
inc
sbb
jnp
cli
push
adc
mov
outsl
mulb
add
pop
mov
sub
mov
int
js
jns
data16
insl
lods
add
xchg
in
cmp
mov
sarl
cmc
pusha
filds
mov
inc
xlat
rorb
cltd
mov
jmp
movsb
sub
inc
mov
outsl
insl
inc
push
mov
jge
test
out
notb
imul
addl
ds
mov
outsw
sbb
clc
adc
mov
iret
add
dec
das
loopne
jp
push
cmpsb
sbb
lcall
mov
imulb
scas
bound
jp
ffree
xlat
lahf
jmp
xlat
xor
xor
xchg
cmp
sub
lds
lea
push
sbb
jge
sbb
mov
in
iret
pop
cwtl
sbb
or
movsl
repnz
shl
test
sub
orb
je
fs
jo
mov
in
xchg
sub
ret
lock
sbb
int
inc
out
andl
loope
test
outsb
sub
mov
pop
incl
mov
pushf
jo
push
sub
cld
xchg
mov
push
pop
pop
aam
decl
mov
mov
inc
push
add
inc
insb
dec
mov
xchg
cmp
pushf
out
leave
and
decb
out
xchg
fists
mov
test
std
or
orb
nop
cmp
jmp
lock
pop
xchg
cmc
cmp
es
fidivrs
fisubl
call
add
inc
in
pop
hlt
mov
jmp
mov
dec
iret
jmp
xor
xor
mov
pop
call
or
lods
push
push
scas
aaa
out
lea
pop
test
or
clc
add
xlat
push
mulb
push
jmp
lret
add
mov
pop
rdmsr
int
jb
loop
sbb
sub
mov
ds
xchg
mov
adc
jbe
pushf
xchg
dec
mov
jl
push
clc
fisttps
cmpsl
cmpsb
jae
sbb
or
sub
mov
insl
pop
and
dec
cmp
fsubrl
xchg
xchg
mov
repz
call
scas
andb
mov
jbe
cmp
ds
iret
and
nop
test
push
lea
fbstp
sub
cmp
add
pop
test
icebp
xchg
jno
pop
test
adc
leave
int
and
out
lock
pusha
mov
loope
aas
fs
loop
rorl
nop
cmp
xor
loopne
test
rorb
dec
hlt
out
add
mov
das
push
inc
jns
push
pop
lea
out
out
inc
pop
pop
bound
sarb
sahf
test
into
lods
adc
or
jne
adc
pop
sbb
jmp
mov
fcmovnu
je
mov
stos
inc
cmp
icebp
movsl
jmp
adc
stos
pop
add
fwait
xchg
sub
adc
cwtl
push
pop
mov
pop
jmp
mov
test
mov
ret
shll
in
pusha
inc
fidivl
xor
xchg
in
rclb
jmp
pop
fidivl
test
stos
notb
mov
mov
scas
adc
push
cwtl
inc
clc
push
aad
mov
inc
jne
mov
lods
jp
int3
arpl
jg
add
or
imull
pop
dec
pop
jbe
cmp
pop
cmp
fldcw
loope
xor
pop
push
stc
pop
or
cmp
dec
cld
push
out
mov
pop
or
adc
add
jnp
inc
stc
jns
arpl
jns
cmp
nop
push
cmp
xor
pop
inc
lds
lds
inc
test
sbb
cmpsb
lea
push
pop
add
push
nop
mov
lock
and
lea
mov
fists
nop
sub
xchg
dec
imul
idivb
scas
pop
movsb
nop
mulb
lret
lret
xchg
sub
mov
in
ret
xor
and
sub
xchg
mov
sbb
dec
sti
pop
pop
inc
outsl
in
rcr
orb
mov
fdivrl
stc
xor
aaa
mov
idivb
sbb
xchg
dec
scas
orb
xchg
stos
lods
push
cmp
sbbl
subb
cmp
push
push
mov
xor
jns
adc
sbb
sbb
xor
ja
pop
aas
xchg
movsb
lea
in
inc
mov
push
in
fcmovu
outsb
test
aas
dec
push
addr16
push
dec
testb
pusha
pusha
mov
sahf
insl
aad
cs
jb
mov
or
mov
xorl
pop
push
stos
call
pusha
mov
jecxz
inc
jbe
fidivs
add
outsb
xor
mov
pop
faddl
jo
ja
mov
pop
cmp
incb
dec
mov
lret
jnp
inc
in
out
cmpsl
iret
push
jae
pushf
stos
mov
fcoml
or
aam
test
es
mov
and
js
adc
cld
push
iret
xchg
out
jge
pop
adc
adc
fistpll
stos
inc
and
xor
jae
xor
xlat
sahf
call
pop
jns
cmp
aas
fcom
cld
stos
mov
cmp
cmp
and
js
xlat
mov
data16
je,pn
lahf
stos
and
mov
add
in
rcrl
es
call
pop
lahf
xor
out
dec
push
push
inc
cmp
mov
pop
mov
sbb
insl
jae
mov
lahf
push
jae
mov
jns
leave
addr16
out
ja
mov
vmaxps
pop
push
mov
dec
jp
int
fdivr
sub
ds
repnz
shrl
push
add
push
dec
push
and
in
arpl
add
es
fidivs
mov
jmp
subb
leave
sub
sub
sub
movsl
sbb
lods
inc
daa
cmp
ficoms
cmp
jmp
loope
mov
sti
daa
insb
sbb
shll
in
cmp
cltd
cmp
pop
or
dec
jbe
arpl
arpl
lods
int
inc
fdivs
clc
pop
cmp
shrb
pop
jge
rolb
lods
and
int
testb
fistpl
cmc
nop
mov
test
ret
popa
test
scas
or
inc
repnz
int3
push
aas
push
mov
mov
fmulp
lahf
data16
and
das
enter
icebp
sub
xchg
cmp
shll
sbbl
ljmp
fs
das
out
ret
xor
btr
inc
shr
xchg
out
add
leave
out
stc
roll
hlt
ljmp
dec
iret
xchg
mov
cmp
inc
dec
outsl
icebp
adc
xchg
jae
test
int
inc
loop
jcxz
inc
mov
push
xchg
imul
fimull
jecxz
inc
adc
iret
out
idivl
in
cmovge
fmuls
jp
out
pusha
std
mov
push
and
das
mov
je
mov
pushf
enter
adc
xchg
push
or
ljmp
sbb
pop
mov
cmp
jg
int
xchg
mov
inc
stos
inc
sahf
mov
xchg
ss
dec
cmp
fiadds
push
add
or
mov
frstor
shr
subb
jne
into
cmp
cmp
mov
or
cmp
add
fadds
mov
fsubrs
jbe
stos
xchg
test
xchg
cmc
inc
bound
into
in
push
sub
test
lret
loope
push
mov
jl
mov
test
mov
xor
hlt
or
sub
xchg
decb
stos
or
sub
in
dec
pop
mov
push
mov
out
ds
push
lret
leave
sub
or
pop
and
leave
adc
pushf
out
inc
stos
in
inc
aas
sahf
jne
jg
sub
sub
xchg
pushf
rcll
ret
jmp
lret
xchg
sbb
sbbb
xchg
xchg
xor
gs
out
push
jge
and
pop
inc
leave
inc
std
mov
mov
cmp
push
stos
in
xor
loopne
inc
adc
rorb
mov
sbb
inc
dec
sarl
mov
in
enter
xor
iret
aaa
or
jne
aad
jp
shl
repnz
pop
adc
or
dec
mov
pushf
mov
lahf
push
popa
movsb
xchg
mov
in
mov
arpl
mov
jmp
dec
dec
sti
inc
push
jno
lods
shr
loop
mov
inc
mov
sbb
or
and
sub
es
hlt
insb
mov
push
outsl
adc
pop
jo
out
imul
addr16
dec
movsb
jne
insl
loopne
sbb
jnp
cli
in
or
clc
pop
fwait
xlat
or
mov
inc
out
ljmp
sti
inc
pop
es
rclb
shr
or
mov
pusha
stos
xchg
and
inc
adc
dec
ret
xor
sbbb
pop
jmp
pop
dec
loop
sbb
imul
pop
jg
daa
popa
test
mov
faddl
sub
mov
outsl
add
daa
test
inc
cmc
pop
jne
lret
sarb
jmp
mov
repnz
push
adc
cli
jne
dec
dec
mov
cli
fmull
jne
fdivrl
lock
add
fcoms
stc
sbbl
popf
mov
xchg
fst
inc
pop
adc
arpl
adc
push
fdivs
push
call
sbb
subps
or
or
shrb
pop
dec
pop
aas
popa
dec
pusha
pop
mov
addr16
lret
mov
cltd
push
test
jae
inc
adc
adc
jmp
and
or
xchg
dec
imul
or
sub
cmp
push
es
arpl
popf
dec
push
scas
fsub
outsl
nop
mov
mov
icebp
fdivrl
iret
cltd
dec
movsb
shll
stos
add
jmp
outsl
xor
pop
fimull
out
sub
push
and
xchg
fildl
andb
ljmp
sbb
pop
pop
scas
je
popa
push
hlt
fistpl
mov
add
test
sarl
jno
inc
cmpsb
fwait
scas
sbb
test
stos
jg
jo
xorl
xchg
mov
out
cwtl
sub
notb
mov
adc
imul
jmp
movsl
add
xchg
out
pop
jmp
pusha
xor
hlt
cwtl
test
xchg
call
and
mov
push
fs
popf
and
das
fsubs
and
mov
sbbl
jmp
je
icebp
movsl
lea
pop
addb
sbb
mov
or
xchg
enter
ret
xor
pop
mov
push
sarl
mov
mov
mov
xor
jno
testl
mov
or
shrb
xor
mov
jl
scas
xchg
insl
ror
push
les
fneni(8087
bound
push
testl
inc
pop
push
call
mov
inc
lods
push
fnstsw
sahf
xor
popf
dec
arpl
mov
cs
sbb
into
xchg
mov
mov
mov
add
bound
and
xlat
pop
xchg
out
in
pop
test
out
mov
repnz
pop
aas
sti
movsb
cmp
lcall
cmovns
add
sbb
lods
push
sub
mov
icebp
adc
stc
push
pop
add
mov
push
fs
outsl
fsubl
xchg
aas
xchg
inc
sahf
cmpsl
inc
repnz
mov
push
sarl
fbstp
mov
lcall
fs
mov
mov
sbb
bndstx
lea
pop
mov
les
es
dec
out
mov
ja
dec
push
je
setp
sub
pushf
cltd
or
lahf
push
sbb
and
cmp
xchg
dec
push
adc
jnp
in
mov
cmp
shrb
lea
mov
sbb
repz
into
imul
mov
mov
sahf
dec
test
push
fistpll
int3
sub
es
jecxz
push
jbe
sbb
and
mov
jge
push
cmpsl
out
jno
sbb
das
mov
jg
enter
jno
arpl
fcompl
pop
jne
xor
outsb
notl
call
imul
mov
das
or
fwait
xchg
out
push
scas
inc
insl
add
gs
xchg
sbb
fbld
jl
cmp
test
sbb
fwait
into
xchg
sub
loope
adc
jge
jno
sub
mov
push
repnz
subl
ds
test
popa
testl
mov
add
pop
pop
idivl
stc
stc
mov
andb
jb
jg
push
aas
das
push
rolb
add
mov
dec
push
std
lods
andl
push
sub
sahf
imul
test
daa
addr16
dec
into
popf
jg
outsb
mov
xchg
fsubl
xchg
pop
or
mov
jnp
insb
xchg
ds
out
scas
fiadds
insl
insl
add
cmp
mov
sub
push
insl
repnz
sbb
daa
aam
or
pop
adc
not
out
imul
or
fldcw
mov
push
loopne
pushf
mov
call
jno
xor
cmpsb
mov
mov
lods
or
pop
inc
push
dec
je
andb
jp
and
movsb
sti
repnz
mov
dec
int
rorl
test
inc
stos
jmp
mov
lods
inc
mov
xor
fwait
mov
adc
bound
sbb
xorl
xlat
outsb
push
das
jl
jb
lret
nop
stos
insl
in
push
pushf
sub
repnz
add
lahf
stos
aaa
and
jbe
or
add
insb
sbb
jecxz
xchg
cmp
vsubps
add
sub
xor
pop
adc
sub
icebp
insl
test
pop
stos
inc
cmc
insl
popf
or
mov
and
mov
mov
test
xchg
fwait
adc
push
cmpsl
mov
or
dec
mov
mov
sbb
cmp
orl
inc
pop
in
pop
fsubrs
and
call
pop
cmp
cmp
in
test
ret
arpl
movsl
sbb
addr16
fnstenv
sti
jecxz
lds
pop
dec
cmp
shll
mov
mov
lret
scas
adc
push
inc
aas
aad
mulb
inc
pop
inc
mov
loope
sub
pop
pop
jecxz
cltd
adc
call
inc
fwait
jmp
adc
jp
adc
daa
mov
pop
jmp
or
jge
mov
sub
repz
fisubs
int
mov
dec
in
cmpl
push
fistl
xchg
mov
sub
inc
rep
mov
pop
fxch
mov
cmp
or
pusha
jg
lea
ror
pop
pop
sti
adc
mov
or
jl
mov
arpl
push
outsl
lods
lock
movsl
fldl
cmc
push
add
jo
neg
or
outsl
adc
mov
nop
and
cmpb
rclb
mov
jle
pop
fnstcw
enter
or
sbb
ljmp
mov
jle
mov
scas
mulb
fisttps
push
jg
movsl
cld
push
and
or
xor
movsb
mov
cmp
mov
test
roll
loope
add
in
cld
sbb
imul
insb
or
fwait
sti
and
sti
mov
dec
and
out
sbb
sub
xchg
xchg
jmp
cmp
lods
jl
xorl
inc
sbb
cld
cltd
dec
add
pusha
mov
mov
fistpll
aad
sub
stc
sbb
pop
adc
sarl
addr16
mov
inc
aaa
out
lret
ljmp
push
push
mov
xchg
mov
jl
jmp
stos
les
test
or
pop
pop
lcall
ret
mov
test
adc
xchg
outsb
in
js
int3
test
shrb
leave
in
into
cmpsl
loope
jmp
repz
and
cmc
jge
clc
mov
dec
pop
and
cmp
pop
ret
repnz
sub
mov
test
and
xor
outsl
cmp
hlt
das
loopne
mov
adc
movsl
out
mov
push
sahf
insb
mov
leave
popa
adc
outsl
repz
mov
mov
popf
lods
pop
jo
jo
pushf
jo
mov
lcall
jbe
pop
xor
adc
ljmp
push
cmp
movsl
push
xor
das
fsubl
fdiv
jb
dec
jle
cmp
dec
rol
pop
lock
pop
repz
mov
repnz
jl
popf
jno
movsb
es
push
std
cltd
and
in
popf
cmp
lea
ret
cwtl
xor
jmp
mov
int
sub
std
int3
xor
hlt
mov
das
push
pop
xor
fsubr
sub
xchg
jno
arpl
push
or
leave
subb
mov
push
sahf
mov
mov
std
mov
mov
fisubrs
mov
mov
mov
xor
lods
inc
aas
and
pop
pop
pop
fs
xor
int3
pop
test
or
imul
dec
fbstp
repz
adc
aas
mov
pop
aaa
xchg
into
repz
pop
or
test
xor
les
test
or
faddp
popa
add
jle
and
sti
adc
in
push
outsb
push
inc
loopne
pop
xchg
push
cmpsb
mov
lret
les
jns
imull
or
outsb
sarb
subb
sub
cmp
add
in
aas
loope
xchg
xchg
mov
loopne
jb
xchg
dec
test
jne
xor
fwait
data16
or
test
mov
test
daa
mov
mov
lods
cwtl
dec
imul
loopne
call
je
dec
pop
jnp
cmpsl
pop
iret
jb
or
lds
arpl
iret
xchg
lods
push
ret
mov
pop
cmc
test
es
popf
sub
pop
or
test
test
in
sbb
pop
push
hlt
sub
push
cwtl
lods
aas
or
mov
dec
dec
sahf
add
in
xlat
loopne
inc
in
ffree
cmpsb
lea
imul
mov
fcomi
imul
rolb
in
movsl
push
xor
mov
mov
push
push
jge
pop
cld
fldcw
sub
inc
inc
mov
out
adcl
pop
imul
add
jle
incb
iret
cmp
dec
loop
sub
pusha
out
sbb
negl
mov
dec
sbb
nop
add
cmp
sbb
shrl
or
inc
push
repz
aaa
or
test
add
dec
cmc
add
jl
cmpsb
dec
mov
notl
adc
pop
mov
hlt
xchg
jno
sbb
sub
and
out
inc
int3
or
enter
fisubrl
lods
mov
mov
inc
cwtl
sbb
pop
outsb
or
call
inc
inc
mov
fbstp
rcl
sub
cmpsl
shrb
dec
or
mov
test
mov
lds
or
cmp
ficomps
sarb
jb
bound
lahf
adc
mov
or
test
push
fsts
roll
mov
js
popa
xchg
movsb
jns
xchg
xor
lret
repz
xchg
arpl
sbb
sti
sub
test
rcrb
xchg
aad
xchg
ja
push
sahf
repz
lldt
shl
ja
jmp
dec
inc
leave
pop
jae
test
xor
sub
inc
fdivrs
test
push
sbb
push
mov
jl
scas
mov
insb
and
daa
imul
mov
xor
in
nop
decb
inc
jmp
ds
dec
scas
xlat
sbb
jb
ja
fwait
jnp
iret
and
xchg
cmpsl
cmp
shrl
pop
rorb
sbb
jb
and
sbb
popf
notb
jg
dec
cmp
movsb
mov
cld
xlat
clc
or
pop
dec
mov
mov
iret
jno
and
push
cmpsb
push
imul
mov
daa
push
inc
fdivrs
mov
cmp
push
pushf
pop
pop
dec
sbb
dec
add
mov
cmc
pop
sbb
jle
jmp
fs
xor
sbb
push
push
fstpt
rorb
rcll
cld
inc
insb
adc
jne
xchg
ljmp
jb
mov
out
pop
call
sahf
into
lds
pmaxsw
sahf
sub
pop
loop
pusha
mov
jl
jne
xchg
sub
nop
and
cmp
adc
cs
jbe
push
fldt
pushf
xlat
push
js
roll
out
pop
inc
imulb
sub
pop
imul
ret
lods
jge
inc
fwait
mov
aas
mov
pop
and
pushf
aad
jle
sti
loop
test
in
nopl
addl
push
push
add
mov
mov
ljmp
push
loop
mov
ja
mov
mov
push
xchg
inc
inc
inc
test
stc
aad
jecxz
test
jns
push
rcl
sub
loop
std
dec
mov
wrmsr
out
mov
js
gs
sbb
into
out
cli
inc
pop
mov
call
xlat
out
ljmp
cld
push
jmp
aaa
xor
adc
arpl
sbb
xlat
outsb
popa
lods
adc
test
ret
xchg
mov
push
xchg
mov
add
mov
fst
cmp
push
jno
sbb
dec
dec
scas
mov
cmp
fdivrl
cli
dec
sarl
jno
bound
push
mov
adc
repz
insb
xchg
loope
repz
mov
adc
aaa
push
repz
test
dec
loope
ret
pop
and
js
sub
call
or
cmp
jg
mov
pop
imulb
leave
adc
cltd
or
fstpt
cmp
ljmp
add
xor
gs
adc
jle
in
nop
sbb
in
or
popf
int
cmp
daa
dec
cmpsb
xchg
pop
popa
outsb
in
cwtl
mov
add
dec
sti
pushf
dec
leave
out
aam
popa
scas
adc
pop
sub
sbb
lret
dec
jg
das
gs
push
pop
mov
loope
outsb
push
xor
cmp
mov
cmp
jno
xchg
scas
out
push
mov
lea
and
mov
negl
in
scas
xor
sbb
mov
nopl
jmp
sub
ds
dec
xchg
sahf
push
subl
mov
ja
mov
pop
jmp
cmc
insb
lods
add
sub
in
shlb
std
adc
lods
push
push
test
mov
inc
cmpsb
xor
mov
dec
mov
adc
cli
leave
pop
pusha
stos
push
cmpsl
gs
daa
sub
inc
mov
cmpsl
mov
das
mov
cmc
push
fcomi
add
cli
sbb
push
adc
add
mov
lock
mov
xchg
push
in
ret
and
jg
push
xchg
fcompl
cmp
dec
mov
imul
inc
incl
lcall
fs
push
pushf
and
test
nop
imul
hlt
xchg
mov
pop
out
mov
xchg
outsb
ret
jp
lods
rol
test
xor
jae
inc
movsb
xchg
pop
je
mov
sub
and
ljmp
cmpsl
lods
inc
sarb
cltd
adc
push
sub
repnz
stos
idiv
popf
cmp
jge
sbb
sub
sti
shlb
pop
fldt
mov
jmp
and
jecxz
stc
or
sub
aad
and
mov
das
sbb
add
push
xchg
sahf
imul
test
out
mov
in
xor
scas
mov
cld
dec
andl
cwtl
cld
imul
xor
fbstp
sahf
cld
push
xor
aaa
stos
in
fidivrl
xchg
es
movsl
adc
cmpsl
mov
fisubrl
and
mov
int
int3
lock
ja
add
lods
jge
pop
jge
xlat
jmp
adc
mov
loop
js
into
test
cmpsb
int3
scas
aaa
fistl
adc
ds
js
cli
jno
cltd
test
push
mov
and
pushf
xchg
cmp
sub
shll
sub
fcomps
jno
jno
loop
addl
sub
sub
aaa
sub
mov
sub
push
xchg
shr
xchg
mov
test
inc
lds
jnp
mov
jno
out
jne
pop
xor
pushf
mov
adc
jb
fs
iret
jb
adc
clc
jae
mov
jmp
pop
mov
mov
sub
xchg
adc
in
shrb
xchg
out
bnd
out
cmp
push
adcb
sub
mov
in
inc
test
or
lds
xchg
scas
push
mov
arpl
pusha
dec
pop
lahf
in
loopne
add
mov
cld
lcall
in
adc
sbb
and
push
jb
out
mov
add
test
loop
inc
xchg
dec
xchg
stc
cmp
popf
stc
cmp
mov
cmp
sub
push
ss
inc
mov
push
jne
pop
les
push
mov
fldenv
lods
mov
pop
cwtl
adc
repz
sub
adc
incl
xorl
xchg
fildll
scas
enter
stos
stos
scas
jp
jnp
xor
stc
or
cmc
mov
adc
dec
mov
xor
sub
adc
stc
push
jmp
out
aad
mov
and
mov
sti
pushf
int
pop
lcall
outsb
es
add
gs
packssdw
scas
scas
add
repnz
mov
or
push
pusha
add
test
je
and
hlt
mov
scas
out
ret
cwtl
sbb
jle
dec
mov
push
lock
ret
popa
test
jnp
push
add
std
inc
adc
adc
dec
je
cmp
xchg
lcall
fisubs
lea
push
andb
push
fstpt
or
or
inc
xchg
mov
imul
add
jns
mov
or
adc
cld
push
jmp
pop
scas
mov
daa
cmp
test
mov
je
in
scas
dec
xor
lods
inc
xchg
repz
mov
movsb
cli
subl
xor
or
ds
testl
sbb
shll
jbe
nop
cwtl
mov
std
xor
sbb
dec
inc
pusha
xor
ret
jl
push
mov
jle
sub
in
add
fmull
sub
stos
out
adc
xor
sub
jns
inc
push
mov
xchg
into
jecxz
loop
push
cmc
inc
inc
addb
push
pop
sbb
test
or
pop
dec
mov
mov
sub
push
pop
ret
cmpb
jb
sti
loop
cld
xchg
push
add
and
cmp
jmp
xorb
nop
pop
pop
push
stc
push
hlt
cmp
push
sti
fwait
mov
dec
cmpsb
adc
sub
add
mov
scas
dec
loop
fwait
pop
lods
and
xchg
xor
pop
jo
outsb
mov
mov
fadds
mov
fidivrl
clc
cmp
jae
sbb
sahf
ret
dec
das
push
outsl
jne
lods
jbe
push
out
jl
xor
enter
jo
push
inc
mov
xor
pop
inc
pop
xchg
outsb
add
sbb
jno
xor
pop
xor
xor
sbb
test
lods
pop
mov
packsswb
shlb
ja
in
scas
out
subb
mov
xchg
outsb
aad
imul
jae
scas
popa
xor
and
test
lea
sbb
cmpsb
outsl
icebp
daa
mov
xor
outsl
adc
fdivrs
mov
sbb
pop
xchg
xor
push
movsb
repnz
mov
pop
test
xor
fcomip
mov
inc
iretw
jnp
sahf
daa
fs
jmp
sub
nop
decl
push
mov
adc
ficoms
push
sub
inc
scas
xor
fcoms
pop
inc
jnp
mov
ss
xchg
cld
sub
cmp
dec
ljmp
mov
lahf
lcall
and
add
inc
test
inc
insl
stc
test
mov
scas
inc
adc
jne
sub
mov
leave
out
or
outsl
test
sub
jbe
lcall
lds
shrb
xor
mov
incl
sub
pop
push
rolb
lret
ret
pusha
insb
pop
jge
adc
loopne
inc
cmp
push
lds
or
push
sub
test
sbb
mov
push
xchg
sub
popf
scas
add
sub
dec
xchg
idivb
imulb
repnz
pop
xlat
add
in
lock
jbe
out
dec
adc
cmp
dec
fs
cmpsl
inc
inc
mov
rcl
lock
int3
lret
fidivrl
add
arpl
adc
push
dec
subl
cltd
cmp
lret
mov
sbb
jge
push
lcall
ret
mov
sub
dec
dec
xorb
add
test
pop
divb
rclb
jne
and
jns
and
mov
xor
inc
ficomps
sub
dec
xchg
inc
jg
cwtl
ja
add
and
lds
hlt
fstpt
xchg
jbe
ljmp
cmp
sub
cltd
sahf
cmp
addl
ds
sahf
fdiv
fiadds
cli
xchg
fs
je
or
fistpll
cmp
sub
xlat
mov
mov
pop
cmp
cmp
in
ret
and
out
cmp
adc
xchg
adc
mov
xlat
sub
mov
loope
cmc
ret
jno
popa
and
pop
dec
sarl
cli
cmp
shll
or
loope
imul
movsl
aad
out
out
int
adc
sub
loop
icebp
gs
xchg
dec
push
sub
push
inc
jno
sbb
pop
mov
add
add
in
inc
cmpsl
mov
out
aas
and
mov
mov
in
cltd
add
repnz
sbb
push
inc
into
or
loop
popf
sub
out
pop
fdivl
or
sbb
mov
push
lock
cmp
lds
fwait
cmpsl
cwtl
loopne
outsb
into
xor
mov
shr
cmpl
imul
mov
dec
or
pop
leave
pop
mov
scas
cltd
cmp
cmp
xchg
cmpsb
cmp
test
xchg
xchg
adc
mov
xor
lock
movsl
mov
fists
mov
jl
fsubrp
pushf
outsl
cmp
imul
push
outsl
pop
mov
nop
nop
js
sub
push
sbb
mov
pop
std
lods
cmp
addr16
sbb
loop
outsb
std
xor
push
pop
aaa
jbe
enter
add
jne
push
lock
mov
xchg
flds
dec
pop
cmc
inc
es
lret
add
or
enter
subl
lea
inc
or
stc
mov
push
and
sub
das
and
mov
sbb
jo
adc
mov
inc
inc
int
adc
mov
out
mov
push
or
repnz
into
repz
xchg
clc
movsb
cmp
lret
xchg
das
inc
lock
int
neg
popa
sub
push
repz
jns
sbb
aas
push
mull
cmpsb
lea
repnz
add
jne
xchg
dec
mov
mov
adcb
or
cmc
iret
xchg
jle
repnz
ret
mov
pop
mov
imul
outsb
jle
imul
jp
pop
loop
cli
xchg
in
les
ds
ja
mov
dec
push
jecxz
jp
and
mov
sub
cmp
inc
inc
mov
sub
mov
fidivl
pusha
stos
ficoms
test
fidivl
jge
mov
sub
jge
shll
fs
sub
iret
mov
into
mov
movsl
adc
popa
mov
mov
xchg
imul
popa
inc
sub
aaa
shll
repz
sub
orb
sub
ret
push
jge
xchg
push
adc
mov
popf
dec
push
jmp
stc
sbb
pop
or
push
sarb
sub
scas
or
popf
xor
scas
stos
in
xor
inc
or
rclb
push
ljmp
jae
repnz
addr16
xchg
sub
cmp
push
dec
popf
lahf
push
je
out
iret
data16
adcl
daa
pop
mov
jnp
int
push
cmp
mov
out
mov
push
jbe
shl
stos
test
pop
jb
pop
movsb
aaa
shrb
pop
push
inc
out
icebp
or
cmp
sub
push
push
mov
cmp
sub
shrl
and
sbb
outsb
mov
cmp
std
xchg
sarb
sbb
leave
pop
push
sbb
lods
lods
inc
fisttps
cmp
inc
mov
ja
inc
fcomps
cmpsb
lea
cmp
mov
mov
lods
xchg
xchg
cmp
push
hlt
xor
dec
scas
mov
adc
xor
out
stos
cld
fmull
popl
and
icebp
addr16
or
push
sub
xorb
mov
movsl
stc
scas
dec
cld
pop
and
outsl
ss
lods
sub
xor
push
lds
xchg
mov
sub
add
ret
fnsave
outsb
push
sbb
jne
iret
cmp
out
lret
iret
or
popf
cli
stos
lea
sub
sub
mov
test
and
les
dec
icebp
lret
call
call
inc
push
jmp
and
jne
dec
mov
lret
xchg
adc
xchg
jge
dec
mov
jmp
movb
mov
pop
jmp
add
nop
loope
lret
lock
pop
xchg
and
bound
stc
rol
idivb
rcrb
pop
addr16
pop
adcl
and
push
out
xchg
dec
add
and
mov
ja
into
fs
jecxz
adc
pop
icebp
xor
mov
fistpll
cmp
fsubr
inc
sub
add
sub
call
dec
scas
inc
mov
push
into
sbb
mov
stos
out
out
out
in
dec
out
or
inc
test
inc
lret
mov
test
inc
into
xor
sbb
sub
rcrb
ja
mov
mov
movsl
xchg
cwtl
stos
xor
cs
rcrb
inc
sti
mov
sub
push
hlt
push
inc
loope
xor
xlat
pusha
lods
cmp
negb
or
int3
xchg
daa
loop
stc
cmp
mov
test
stos
rorl
mov
push
jmp
out
mov
inc
jbe
xchg
fidivrl
mov
lea
sti
cmp
shlb
je
push
bound
testl
push
push
add
idivl
push
iret
xlat
sbb
outsl
movsl
pop
dec
pop
lds
aas
sbb
out
insl
aam
push
cmpl
adc
stos
sbb
push
mov
push
xlat
jmp
mov
mov
shlb
test
add
sub
mov
enter
push
inc
cwtl
xchg
jecxz
xchg
xor
lahf
jne
mov
in
xchg
mov
jle
into
lcall
mov
xchg
pop
ds
or
je
jb
std
shl
cwtl
in
inc
lret
sub
add
lods
push
repz
repz
int3
arpl
rorl
mov
add
stos
pop
sarl
dec
push
insl
cmp
or
dec
xor
js
ret
xlat
ljmp
pop
or
sub
push
lcall
cli
cld
xchg
popa
fsub
shl
imul
xchg
push
leave
and
test
sti
inc
stos
and
jge
lods
pop
fs
push
mov
orb
lcall
adc
xor
xor
fwait
sbb
inc
lock
sub
push
cmp
lret
dec
dec
sub
mov
std
fsubrl
fidivl
aad
inc
inc
hlt
ds
pop
add
cmp
jae
cmp
inc
ret
jle
dec
outsb
loope
out
icebp
rcll
cmp
xchg
mov
ss
pushf
jge
lods
jbe
andl
cmp
push
bound
test
mov
scas
cmp
and
repz
sub
sbb
ds
jge
push
mov
xor
xor
sub
mov
insb
pop
repnz
addr16
mov
fwait
mov
notb
sbb
mov
xchg
jns
sub
into
leave
rcrl
lods
pushf
pop
mov
cmp
fildl
jb
sub
pusha
pop
outsl
shl
shlb
inc
or
jmp
mov
dec
bound
lret
jb
fmul
sub
jne
imul
scas
and
cltd
mov
pop
mov
rcll
mov
inc
or
jg
es
push
sbb
cmp
pop
sub
dec
notl
jg
mov
xchg
xchg
frstor
mov
imul
mov
scas
xor
fisubrs
xchg
push
mov
pop
idivb
push
jns
fcompl
cmp
imul
cli
jge
insl
cld
dec
mov
decb
add
jb
cmp
int
js
inc
pushf
xor
jmp
fwait
sub
adcb
sub
add
into
repnz
int3
test
pop
imul
xchg
mov
imull
xlat
fistpl
test
cli
sbb
fchs
xchg
arpl
jne
cmpsl
imul
dec
xchg
aad
cmp
push
cmc
les
test
ja
subps
push
insb
sarb
sub
nop
insl
clc
in
mov
push
bndstx
xchg
add
test
xchg
mov
aaa
jae
mov
push
test
cmp
mov
fmuls
pop
cltd
call
lahf
les
sub
rol
repz
jns
sub
ljmp
cmp
mov
cmp
push
add
cmp
test
std
bound
lret
pop
and
jg
mov
mov
inc
or
pop
mov
lahf
mov
mov
pop
mov
out
jg
aaa
pop
hlt
mov
jmp
adc
push
pop
push
mov
mov
jle
pop
cmp
imul
pop
xor
pop
push
rcl
jae
cli
xchg
lcall
add
and
dec
or
cmp
xchg
dec
dec
inc
sarl
and
sar
or
push
add
ds
movl
negb
lea
sub
movsl
sub
int3
sbb
mov
cmp
cmpsl
pusha
mov
mov
xor
js
leave
andb
popa
sbb
clc
mov
les
and
fwait
addr16
test
test
bound
pop
lea
mov
sti
gs
mov
push
or
lds
loope
in
repz
mov
adc
lcall
hlt
xchg
jno
and
mull
stos
mov
cmp
jmp
add
pop
xchg
inc
cmp
mov
icebp
push
repnz
movsl
pop
jg
bts
mov
mov
xor
rorl
mov
push
loop
sub
xor
jmp
xor
pop
repz
xchg
les
insb
insb
mov
mov
aaa
xor
xor
sbb
aam
dec
int3
sbb
mov
loop
add
adc
lock
iret
lret
jge
adc
jle
sub
rcrb
std
add
sarb
or
xchg
jno
xchg
pop
adc
in
mov
aad
movsl
push
int
mov
mov
sub
push
cmpl
repz
loope
jo
in
lds
stc
cmp
cmp
jmp
lret
fs
add
int3
faddl
jle
fwait
mov
jae
or
mov
add
mov
mov
and
cmpsl
ret
jae
adc
cli
loope
iret
adc
frstor
cwtl
data16
mov
cmpsl
push
lock
jns
cmp
and
dec
sub
push
in
shll
nop
xchg
cs
mov
inc
or
out
xchg
cli
mov
dec
gs
jb
jge
sub
outsb
adc
dec
inc
shlb
test
mov
pop
outsl
push
mov
fisubs
add
rol
fs
mov
mov
dec
inc
decl
adc
pop
cmp
mov
mov
dec
popf
arpl
sti
repnz
outsb
add
loopne
inc
push
dec
xchg
push
popf
ret
dec
je
dec
cmp
scas
xor
sbb
adc
test
dec
pop
cmpsb
lahf
mov
es
loopne
cs
adc
ffreep
ret
jp
cmpsb
addr16
test
jge
dec
xor
pop
cmp
or
scas
push
ljmp
sbb
mov
test
aad
adc
icebp
js
xlat
cld
adc
add
dec
int
aad
out
sahf
das
fldt
stc
stos
in
std
test
mov
test
lds
jno
sbb
push
or
mov
mov
jnp
jecxz
xor
mov
fcompp
xor
push
dec
cs
sbb
nop
test
inc
stc
jnp
ficompl
mov
movsl
xchg
mov
sahf
cli
popf
loopne
xchg
sar
loopne
mov
add
mov
xor
mov
dec
hlt
inc
popa
cmp
divl
mov
adc
ret
mov
or
lret
scas
jmp
mov
jo
sbb
cmp
sti
shlb
arpl
fcompl
push
ljmp
popf
jns
lods
cmpsl
das
pop
dec
and
icebp
loopne
inc
clc
scas
cld
gs
outsb
jmp
arpl
aaa
xorb
out
pop
icebp
lret
mov
mov
push
in
cmp
out
test
cmp
dec
test
xchg
and
negl
sbb
adc
mov
ja
call
ljmp
out
test
ret
addr16
pop
icebp
ss
fdivrl
or
push
stc
pop
mov
inc
inc
repnz
jl
stc
lods
insl
loopne
int
nop
dec
dec
popa
loopne
sbb
ljmp
lret
mov
jno
pop
push
mov
aad
jne
jg
jns
mov
or
add
fmulp
cmp
mov
ret
jp
jmp
fiaddl
fmuls
fisttpl
mov
outsl
xchg
dec
int
ljmp
sbb
fisttpll
icebp
pop
pusha
pop
je
iret
cmp
pop
fiadds
aad
sbb
add
mov
stos
or
push
adc
js
pop
or
mov
dec
ds
cmp
in
pop
ret
sbb
cwtl
pop
sbb
dec
sub
jo
cmp
push
jb
pop
pop
addr16
lds
mov
sbb
push
inc
mov
filds
movsb
cld
pop
mov
sbb
dec
cmp
fildll
inc
mov
arpl
or
pop
jbe
movsl
iret
mov
sbb
pusha
jmp
sbb
mov
rcrb
xchg
xchg
aam
lcall
daa
add
stc
cwtl
shlb
in
or
in
jg
fistl
xor
out
hlt
mov
movsb
adc
jge
adc
pop
daa
or
jle
xchg
or
pop
pop
push
adc
mov
andb
push
loope
mov
mov
ror
jae
jecxz
stos
aam
data16
test
push
lret
lods
data16
xchg
into
mov
bnd
aaa
jns
das
pop
adc
xor
int3
loopne
outsb
mov
add
fs
out
jmp
pop
insl
fdivp
mov
mov
sbb
jg
push
pop
xchg
or
xchg
testb
imul
xlat
rolb
mov
js
sbb
push
jae
xchg
ret
sbb
pop
jl
out
mov
aad
mov
push
gs
sbb
sbb
movq
xor
movsb
sti
mov
dec
jnp
jbe
das
inc
lods
xor
scas
mov
dec
ss
in
mov
in
and
pop
and
nop
jae
mov
stos
shlb
pushf
orl
sub
sub
jbe
push
movsb
mov
pop
movsb
jle
cld
dec
dec
jmp
ja
das
and
pop
adc
movsb
mov
ja
lret
movsw
int
adc
add
adc
inc
cmp
popf
gs
sti
int3
jmp
mov
sub
fldl
shr
ret
shll
les
add
ret
lock
mov
push
jl
xchg
mov
shr
inc
push
je
sahf
cmpsb
pusha
xor
and
mov
pop
scas
cmp
sbb
pusha
pop
call
lret
aad
roll
and
int3
loope
push
pop
cs
jae
jnp
fsincos
inc
shll
insl
pop
dec
out
nop
push
les
scas
mov
mov
xchg
cs
pop
and
fsubs
cltd
repnz
and
cmpsb
inc
adc
inc
pop
add
ds
fidivs
lds
cwtl
adc
sub
lret
mov
cld
push
cmp
pop
popf
shl
std
add
mov
nop
mov
jle
movsb
dec
adc
xlat
jno
cmp
ss
mov
pop
xor
pusha
cmp
jg
orl
lods
mov
int
pop
jnp
mov
cmp
push
cli
mov
jnp
pop
sub
pushf
loopne
pop
lods
in
sbb
add
pop
mov
call
enter
dec
imul
dec
push
lcall
xor
xor
ret
jp
mov
pop
mov
stc
xchg
jle
adc
fldenv
in
sub
scas
je
scas
subb
xchg
outsb
jle
jg
or
dec
fs
lcall
out
out
arpl
mov
mov
or
sub
das
shr
pusha
xor
ffree
or
mov
xchg
into
mov
push
icebp
mov
ret
jns
leave
pop
sbb
shll
jbe
pop
mov
xchg
xchg
inc
sbb
inc
fsubr
ret
lods
add
shlb
or
pop
or
fnsave
arpl
mov
sti
xchg
push
push
jns
or
mov
mov
mov
mov
sbbl
or
lahf
and
dec
sti
xchg
push
xchg
mov
gs
jecxz
out
jmp
stc
pop
add
mov
loop
movnti
xor
fidivs
or
iret
fildll
mov
sbb
insb
jge
hlt
push
jmp
lock
push
addr16
cli
out
daa
in
xor
test
rolb
cmp
xchg
pushf
fbstp
push
push
js
movsl
mov
out
xchg
nop
adc
insl
sub
repz
cmpsl
xchg
ja
ret
enter
hlt
js
adc
xor
popa
jne
pushf
sub
loop
pop
and
push
shufps
test
sbb
movsl
in
stos
ret
out
ret
jo
das
das
mov
scas
push
xchg
xchg
dec
dec
mov
adc
jns
xchg
sub
lcall
jne
jb
xlat
stos
testl
fcmove
push
out
ja
icebp
test
repnz
pushf
sub
int
data16
inc
mov
data16
outsl
clc
dec
pop
es
shll
shrb
adc
mov
movsb
cmp
aaa
pop
push
lret
push
repnz
in
popf
or
stos
je
xchg
jno
shrl
or
das
imul
int
jp
bnd
fimuls
outsb
aam
mov
xchg
sahf
mov
lea
mov
lods
lea
mov
scas
lret
push
fdivp
scas
add
inc
mov
cmp
add
xchg
call
push
and
insl
sub
add
nop
adc
adc
mov
adc
jno
and
daa
push
xchg
sbbb
mov
xchg
dec
lods
cltd
or
or
cmp
scas
jno
stc
jb
stos
add
push
xor
push
inc
mov
inc
mov
push
call
push
cmp
shll
divl
fbstp
outsb
push
in
dec
call
outsb
inc
outsb
in
arpl
sbb
or
mov
push
mov
xchg
pop
mov
out
mov
push
loope
fdivrl
orb
pop
jmp
or
mov
jo
pop
mov
enter
inc
int
jbe
mov
ss
mov
push
dec
mov
or
fidivrs
popa
jns
lret
pop
jb
push
pop
sahf
xchg
dec
fisubrs
movsl
cmp
loop
jp
mov
mov
jnp
adc
jo
add
test
movsb
repz
mov
dec
sti
mov
lds
rcll
jnp
sub
stc
aad
push
pop
daa
dec
faddl
cmc
sub
or
xchg
scas
mov
clc
mov
cmp
mov
fldenv
repnz
popa
and
jno
jg
xor
mov
and
xchg
jno
push
jnp
mov
outsl
adc
jg
lahf
mov
shl
jns
nop
pop
and
test
dec
leave
fs
pushf
mov
dec
roll
in
jnp
je
mov
adc
scas
mov
test
ja
inc
pop
les
mov
in
lcall
xor
in
lea
stc
pop
adc
mov
cli
lds
pop
dec
mov
adc
popl
movsb
cmc
sbbb
cltd
adcl
xchg
in
repz
ss
enter
push
push
push
mov
push
ljmp
es
dec
xchg
mov
mov
and
ret
inc
push
divb
sbb
adc
jle
add
test
notl
pop
mov
dec
xor
jne
ss
inc
push
lahf
inc
les
movsl
cltd
mov
das
mov
into
icebp
jno
and
aam
xchg
xor
outsb
js
pushf
scas
out
mov
aaa
jmp
int3
xchg
repz
dec
jno
mov
sbbl
jbe
fsubrl
loopne
shl
stos
lods
mov
insl
mov
mov
nop
dec
movsl
dec
pop
pop
add
ret
outsl
stos
fisubrs
or
pop
jl
jns
cmp
inc
push
rol
inc
mov
push
hlt
fldenv
es
das
jge
clc
xor
test
popa
push
adc
sub
inc
mov
aaa
push
shlb
imul
std
dec
lahf
push
pushf
les
idivl
repnz
jle
les
dec
add
add
or
insb
adc
les
push
fstl
popa
orl
cwtl
and
roll
mov
jg
data16
mov
movups
jns
and
inc
stc
pop
test
jl
cmp
loopne
ljmp
mov
and
push
lahf
xor
jmp
bound
aaa
push
popf
sub
or
inc
ljmp
and
and
clc
inc
pop
and
jge
push
add
mov
inc
lcall
pusha
insl
test
fdivrs
jp
and
jg
lret
lret
sub
lods
fs
pop
xchg
into
cld
inc
jno
aad
lds
loopne
add
dec
dec
loope
mov
fsubs
sub
mov
cmp
push
dec
arpl
fldenv
mov
sbbl
aaa
lods
sbb
pop
jp
int
enter
inc
push
out
in
movsb
push
addb
jb
popf
cmc
lock
jecxz,pt
in
push
mov
test
leave
inc
lea
cmp
mov
cmp
mov
cli
call
movsb
add
lahf
jl
fs
je
add
stos
stos
pop
push
push
rcl
lret
jb
stc
stos
stos
dec
xlat
enter
add
mov
pop
add
mov
dec
rol
mov
inc
out
call
jae
cmpsl
inc
clc
hlt
cld
mov
xchg
and
cmc
xor
loop
adc
outsb
shll
mov
xor
add
push
xchg
push
test
add
mov
sub
xchg
movsb
out
imul
sub
ljmp
jno
lcall
pop
mov
repnz
and
les
cmpsl
aas
xchg
sub
addr16
inc
in
cli
out
test
jno
inc
orl
out
insl
popf
xchg
sub
sahf
shr
xor
and
dec
inc
add
jmp
dec
add
or
ficomps
and
outsl
lret
and
cld
es
insb
dec
int3
js
push
mov
sub
dec
pop
das
ret
imul
mov
push
push
subl
pop
push
or
mov
add
pusha
push
fs
aaa
in
call
lahf
or
dec
lock
pusha
mov
xlat
orb
mov
aad
dec
repnz
shl
add
push
fidivrs
jbe
in
lcall
push
cmp
and
mov
movl
jmp
dec
and
xchg
add
daa
cmp
loop
aad
inc
notl
lcall
xor
call
ret
mov
scas
pop
shrl
nop
and
mov
mov
test
lcall
data16
jne
xchg
ret
sub
fidivrs
jnp
inc
sti
cltd
adc
adc
arpl
out
lcall
and
mov
int
push
xor
inc
repnz
fimull
in
inc
mov
mov
adc
sahf
lret
das
sbb
cwtl
pusha
mov
jge
wrmsr
outsl
mov
mov
lret
js
dec
stos
jmp
pop
add
dec
push
dec
bound
push
movb
insl
add
xor
cld
into
cs
push
insb
negb
jp
repz
dec
ds
inc
add
xchg
dec
sahf
adc
fbld
out
jg
dec
loope
cmp
mov
push
outsl
and
arpl
xchg
jl
jmp
jb
xchg
movsb
into
push
ljmp
adc
testb
jae
jmp
xor
xor
icebp
and
incb
mov
pmaxub
xchg
lds
add
inc
xor
add
in
pop
ds
repnz
xchg
loope
cwtl
das
add
es
push
xchg
test
jecxz
cmpsb
sbb
in
xchg
testb
shlb
lahf
pop
repz
xchg
mov
repnz
lods
cmpsb
lock
dec
inc
rorl
adc
xchg
repnz
arpl
fwait
out
daa
sbb
sub
sbb
int3
xchg
lret
xchg
inc
xor
add
xchg
sub
sbb
pop
int3
mov
out
sbb
insl
sub
iret
lret
mov
jge
adc
adc
push
dec
flds
out
dec
iret
mov
jmp
pop
jmp
clc
in
pushf
mov
outsb
aad
lahf
out
mov
pop
shll
mov
or
push
js
enter
inc
and
cmp
mov
test
pop
enter
dec
mov
in
movsl
jmp
orb
adc
dec
xchg
stos
inc
jns
clc
in
jge
cmp
jg
sahf
lds
imul
mov
lcall
inc
xor
ret
jle
push
mov
leave
int3
or
jne
sbb
and
mov
mov
and
dec
lods
ljmp
loope
scas
fisubrs
mov
push
sub
fidivs
and
add
xchg
sahf
sti
enter
mov
andl
mov
cltd
cmp
xchg
mov
jnp
dec
repz
test
xchg
sarl
or
iret
add
mov
add
xor
ret
stos
xor
andl
pusha
insb
std
mov
shrb
test
ja
je
rorb
mov
arpl
push
test
jno
mov
scas
andl
mov
enter
shrb
jp
mov
mov
sub
jmp
imul
negb
and
in
loope
nop
pushf
or
sbb
push
mov
ret
jl
ljmp
mov
hlt
sub
sub
scas
push
pushf
out
hlt
popf
mov
add
cmp
fwait
jns
inc
loope
fpatan
sbb
push
adc
add
mov
inc
xlat
outsb
mov
mov
push
dec
pop
subl
cli
clc
daa
cmp
scas
mov
bound
push
fisubs
or
jns
mov
movsb
les
std
inc
in
add
lods
inc
or
push
or
jmp
xchg
cmp
dec
js
jg
ficomps
mov
dec
xchg
add
int
cmp
cmpsb
arpl
aad
jb
in
xorl
stos
sub
mov
push
xor
sti
sahf
sub
adc
test
mov
and
rorb
xchg
cmp
lahf
gs
pop
into
push
scas
sbb
push
leave
mov
and
sbb
push
sbb
mov
lock
pop
icebp
sub
inc
js
jb
jmp
mov
data16
lods
addl
jb
adc
cmp
pop
les
xchg
repz
xchg
loopw
pop
xchg
push
scas
repnz
aas
mov
lods
dec
data16
loopne
inc
cmpsl
sub
dec
xchg
cmp
add
and
push
jecxz
ss
ds
xchg
addr16
ror
out
orl
lret
nop
stos
pop
ffreep
popf
push
je
push
jg,pn
pop
ja
sti
ficoms
cmc
push
int
xchg
test
add
pop
xor
sub
sti
push
dec
dec
xchg
fdiv
scas
mov
fldcw
stos
push
test
and
mov
mov
shrl
pop
enter
sub
mov
je,pn
pop
push
scas
mov
and
xor
outsl
adc
ds
shlb
and
cmpsb
stc
pop
jge
push
shll
mov
call
xchg
inc
jae
test
mov
aaa
scas
jmp
sub
push
lds
popl
dec
dec
movsb
jmp
cmp
fucomi
mov
cmpl
pop
adc
sbb
push
scas
and
push
fwait
test
aaa
xchg
and
out
test
xchg
sti
fldt
or
das
shlb
pop
cmp
aas
inc
and
mov
sarl
fidivl
out
mov
std
or
sbb
pop
jecxz
xchg
mov
jg
repnz
into
jecxz
sti
pop
jge
dec
or
mov
mov
cmp
add
inc
add
mov
jmp
aas
sbb
inc
scas
aas
mov
lods
hlt
inc
mov
dec
jmp
jne
lret
adcb
pusha
xchg
pop
push
add
and
andl
fpatan
loope
leave
adc
btc
inc
sbb
movsb
data16
movsb
or
push
push
push
daa
cld
xchg
loope
mov
mov
dec
add
pop
dec
cmp
mov
test
jmp
notl
sub
xor
lea
fucompp
pop
lret
xchg
repz
in
dec
jmp
shrb
xchg
jge
xchg
loopne
movsl
stc
cmpsb
or
add
repz
and
pop
push
xchg
fs
pop
xchg
mov
imul
and
mov
xlat
into
mov
push
mov
or
xor
sub
jb
dec
and
loope
sbb
sbb
pop
cmp
xchg
cmpsl
loop
jno
xor
into
push
mov
pop
cmpsb
out
fildll
mov
push
dec
loop
bound
mov
pop
into
xor
sti
and
aam
call
fmuls
sub
imul
cwtl
in
xchg
jns
add
push
push
adc
mov
addl
lds
fisubl
sbbl
fsubs
or
cmp
lea
stos
aas
and
jno
ds
decb
out
pop
std
sahf
cli
daa
sti
and
pop
into
ret
lahf
dec
cli
in
and
aaa
cmp
in
cmp
mov
dec
add
in
mov
jnp
lods
inc
negl
loope
jns
popf
push
ljmp
sti
inc
arpl
hlt
adc
iret
arpl
cmp
andl
or
mov
xor
mov
dec
fs
mov
hlt
call
in
mov
inc
sbb
jecxz
mov
push
push
jne
fs
and
movsl
cmp
clc
adc
sub
std
jbe
or
pop
mov
mov
inc
add
mov
loope
fisubl
jae
mov
dec
sub
lahf
cmp
push
sub
ficomps
testb
mov
js
scas
and
lods
orl
scas
push
jmp
inc
stos
and
divb
mov
sti
cwtl
inc
sti
or
cs
int3
mov
repz
mov
movsb
mov
call
fimull
xchg
scas
dec
push
rol
fucom
jno
fisttpll
les
pop
dec
repnz
insb
imul
jae
addr16
jbe
xchg
pop
dec
xlat
dec
mov
lods
pop
loope
xor
insl
jmp
sub
repz
rcrb
imul
inc
cmp
cmp
test
push
mov
lods
ret
jl
sbb
lds
inc
fisubrl
insb
leave
imul
sbb
fs
sbb
mov
xchg
xchg
nop
fnstenv
ds
sbb
xor
int3
push
setno
jl
push
out
pop
mov
pop
pop
mov
push
inc
ljmp
mov
jg
mov
stos
push
ret
cmp
cmp
lcall
rcrl
mov
iret
xchg
cltd
pop
dec
cmp
or
pop
scas
sub
mov
mov
xchg
push
mov
xchg
jp
imul
pop
adc
jns
and
ss
or
out
loopne
gs
fucomip
fnstenv
daa
inc
mov
dec
sbb
out
and
lcall
lahf
sub
shr
insb
into
inc
rorb
ror
fmul
loop
rcrb
insb
ret
add
fstps
push
add
jge
or
or
stc
repnz
sub
sub
imul
cld
jae
out
fwait
add
std
adc
ja
dec
push
adc
in
mov
and
xchg
xchg
sbb
push
loop
fs
add
dec
test
sub
mov
xor
jbe
sahf
xor
jnp
xor
inc
push
inc
dec
rclb
aas
pop
popf
out
fwait
int
ret
daa
dec
enter
clc
adc
jo
imul
xor
xor
jne
out
xor
in
push
cld
xchg
sub
popa
mov
outsl
repz
rcrl
jp
lods
inc
loopne
or
mov
insl
int3
das
inc
in
jno
cmpsb
sub
imulb
jl
int3
daa
int3
jg
data16
lds
mov
aad
push
mov
lock
lock
movb
daa
mov
test
sub
or
cld
and
mov
cmp
push
mov
push
jo
mov
pop
mov
add
adc
out
in
test
inc
or
xchg
sub
xchg
montmul
cmpsb
ret
add
xor
xchg
shlb
call
sahf
pop
jo
lods
cmp
xchg
decl
cwtl
sbb
jge
ljmp
clc
mov
jns
enter
mov
ret
sbb
lret
xchg
outsb
sbb
adc
jnp
push
xor
mov
mov
push
daa
shr
aam
cli
pop
xor
inc
dec
cltd
inc
clc
out
sub
das
push
add
and
xchg
insb
push
xor
ss
faddl
loope
test
retw
sub
jne
mov
sti
xchg
stos
hlt
xor
mov
popa
xchg
sub
lcall
jb
push
jne
scas
adc
sub
mov
xchg
mov
or
sbb
dec
cltd
lods
ljmp
cmc
dec
daa
adc
subb
push
xor
dec
dec
dec
pop
jnp
adc
cmp
and
lea
shlb
push
pop
ret
cltd
jecxz
push
call
in
shll
pop
lret
sti
xchg
das
lods
pop
dec
sub
jp
js
sbb
test
xchg
add
cmp
movsl
imul
adc
stos
mov
fdiv
cli
lock
cmp
adc
ret
in
rcrb
in
mov
mov
lock
adcb
std
cmp
push
outsb
pop
cmp
dec
pushf
arpl
inc
pop
pop
pop
and
push
push
aas
lret
and
lcall
faddp
push
pushl
movsl
inc
enter
icebp
pop
pushf
inc
mov
dec
stos
inc
and
into
push
test
jge
inc
mov
stos
cwtl
enter
mov
dec
and
mov
ljmp
arpl
jb
jne
jnp
subl
dec
sbb
jge
stos
inc
lret
inc
lret
sbb
xchg
fcomip
cmpsb
xchg
dec
in
cmp
mov
mov
push
fs
outsb
cmp
fistpl
and
shrb
lock
mov
push
push
das
and
and
movsb
xchg
stos
mov
sub
orb
or
dec
jnp
xorl
jne
sbb
ja
dec
mov
dec
sbb
and
push
adc
xchg
inc
pop
and
or
mov
loop
adc
xor
mov
lret
fadd
ss
rcl
lock
inc
pop
fisubrl
pop
repnz
add
xchg
je
sub
jle
jno
push
daa
jae
inc
movsl
dec
xlat
cmp
cmp
les
arpl
xchg
scas
rorb
out
sbb
and
sahf
adc
lret
mov
cmc
push
fimull
jae
push
cmpsb
dec
add
out
popf
jb
aad
or
shrb
xchg
add
movsl
orb
test
pop
adc
xor
push
imul
ja,pt
add
or
and
mov
cmp
mov
mov
movsl
imul
daa
lcall
cmp
lret
rorb
jae
xor
arpl
xor
dec
inc
push
dec
lcall
pop
lret
xchg
inc
jmp
push
fnsave
mov
outsl
lret
and
push
imul
adc
or
jge
xchg
insb
mov
and
inc
lea
shrb
pop
loop
dec
lods
xchg
sub
mov
mov
inc
imull
mov
movsl
jnp
mov
mov
enter
sbb
xchg
shll
cmp
cmc
lods
mov
mov
jp
mov
scas
shr
and
pop
orl
cmp
or
ljmp
pop
jne
ret
cmp
xor
ljmp
jno
mov
push
sub
loop
insl
mov
das
out
inc
pop
mov
xor
dec
sbb
pop
pushf
xor
sti
out
xchg
ss
jl
jno
pop
and
test
inc
test
inc
gs
jo
pop
dec
mov
lea
mov
iret
and
int
arpl
cli
push
mov
imul
or
mov
adc
pop
imul
repz
pop
add
jns
adc
jle
sub
adc
stc
cmp
imul
adc
insl
add
enter
stos
cmp
or
pop
sbb
stos
fstps
test
in
xchg
jmp
jp
and
adc
xchg
lret
test
into
enter
jmp
dec
mov
out
xchg
pusha
mov
jbe
cmc
mov
fistpl
and
ljmp
and
shll
ljmp
cltd
sbb
ljmp
mov
pop
fadds
bound
pop
xor
les
inc
in
and
mov
sub
aas
cmpsb
sub
mov
mov
jg
daa
xchg
in
mov
loopne
jle
push
inc
mov
movsl
clc
loop
inc
jnp
sbb
bound
xchg
shl
movsl
pushf
add
lock
fstps
repz
clc
lods
mov
pop
outsb
adcb
add
insb
mov
inc
push
sbb
stc
pop
imul
add
pusha
xchg
es
push
mov
fcompl
pop
mov
ja
mov
pop
mov
shll
and
insb
enter
inc
mov
jno
pop
or
mov
fldenv
pop
call
outsl
ficomps
flds
stc
cmc
xor
sub
push
jl
dec
aas
rolb
sbb
mov
xor
arpl
push
aam
js
xor
jg
inc
sub
mov
popa
fucomip
ljmp
in
or
jne
pop
notb
addr16
pop
loopne
insb
mov
lock
xchg
insb
xlat
ret
dec
fdivs
jmp
cmpl
mov
jecxz
test
shrl
movsl
ljmp
xor
mov
push
sti
inc
test
pop
call
fdivl
xor
out
push
mov
shrl
inc
mov
or
cld
inc
xor
pop
out
sub
pop
mov
mov
xchg
stos
mov
aas
or
jmp
and
adc
lret
xlat
cmp
loop
mov
sbb
mov
leave
sbbb
jg
adc
popa
shll
adc
popa
sub
mov
adc
out
sahf
hlt
fdivp
subb
mov
dec
dec
insl
or
mov
sub
xor
xchg
dec
loopne
cmp
adc
dec
test
mov
adc
fsubl
add
inc
push
popf
pop
aad
out
repnz
push
mov
ret
and
cli
dec
pusha
aaa
and
daa
outsb
push
out
inc
push
xor
iret
icebp
rolb
arpl
jb
je
sub
aaa
pop
in
cmp
imul
scas
sub
lret
adc
mov
leave
mov
jbe
xchg
imul
sub
hlt
push
adc
push
xchg
aaa
xor
out
aas
sub
enter
aaa
pop
insb
sub
rolb
shrb
push
add
jecxz
xchg
push
gs
pusha
mov
movsb
jb
pop
fisttps
lret
lret
cmpsb
sub
fdivrs
mov
sbb
xchg
int
dec
fs
xor
ret
mov
fisttpll
in
pop
fstps
stos
cmp
vprotq
test
cmpsl
cwtl
sbbl
rol
sub
fcmovne
fmuls
xchg
pusha
mul
or
pop
in
test
jp
fs
push
les
adc
sbb
xor
jne
and
enter
rcl
pop
push
je
repz
cmp
cmp
rolb
repz
jg
sub
dec
xor
sbb
jmp
and
outsb
bound
jno
push
jbe
mov
test
mov
dec
notb
sub
lahf
pop
shlb
enter
mov
lretw
push
loope
fidivl
std
fstps
mov
mov
mov
pop
pop
in
aas
pop
popf
je
cwtl
sub
mov
cld
mov
and
pop
out
mov
inc
jle
xchg
pop
std
sub
mov
xchg
inc
loopne
sub
ss
and
mov
jge
in
mov
rolb
add
push
insl
xchg
inc
inc
dec
pop
adc
mov
pushl
jecxz
push
xor
jbe
clc
and
fnstcw
jp
leave
dec
cmp
sbb
pop
aam
dec
ret
icebp
scas
xchg
shll
pushf
cmp
xchg
cmpsl
test
aad
ds
inc
rorl
cmp
adcl
scas
dec
push
popa
add
adc
cltd
sbb
xlat
mov
pop
in
cwtl
pop
sub
scas
jle
ret
dec
add
and
mov
stos
cmp
adc
nop
iret
fstps
inc
fs
adcl
mov
push
jmp
xlat
sti
enter
sbb
daa
in
mov
and
mov
cs
push
lds
xor
shlb
inc
pop
mov
push
lods
push
jl
sub
stc
xor
fwait
lcall
arpl
jne
add
repnz
inc
lret
cli
pushf
addr16
and
adc
negl
lock
cld
fs
bound
xorl
push
in
cmp
pop
stos
fsubl
mov
je
and
sub
pop
cmp
test
pop
xor
xchg
inc
pop
fwait
push
pop
push
xor
pop
push
and
or
shrl
dec
je
mov
mov
out
imul
cli
test
jb
scas
lcall
push
mov
cmpb
mov
sub
inc
fwait
addl
cmp
xchg
push
inc
popa
lea
pop
out
mov
lods
mov
push
add
cmp
push
sub
jecxz
lock
mov
adc
sahf
cmpsl
rcrb
jne
mov
adc
sarl
cld
pop
mov
sbb
sar
int
sbb
sub
cmp
dec
icebp
inc
data16
bound
push
test
and
hlt
or
lods
test
fistpl
pop
dec
cmp
ss
outsl
imul
js
lea
cltd
fimull
clc
jae
jnp
aam
out
fidivs
lods
lock
stc
xchg
cli
scas
scas
pop
sub
jb
daa
clc
or
cmp
das
loop
add
push
imul
mov
adc
jp
dec
andb
xor
pop
fistpll
mov
cmc
pop
or
clc
in
std
shrl
cli
cmp
adc
cli
sub
hlt
xchg
adc
xchg
add
sbb
lea
xchg
rorb
stos
mov
xchg
add
xor
xor
and
loope
test
jmp
adc
mov
repnz
push
ljmp
pop
nop
scas
mov
push
jl
imulb
adc
mov
cld
add
mov
in
adc
jmp
sbb
jbe
repnz
sbb
aas
fdiv
xchg
add
repz
cmp
idivb
add
push
repnz
or
jecxz
sbb
addr16
lcall
jle
cmp
xchg
sub
je
int
ficoml
repnz
stos
jbe
cmp
pop
push
jmp
in
and
mov
outsb
inc
aaa
cltd
add
mov
push
mov
jns
sbb
push
cmp
icebp
mov
and
ds
add
xchg
mov
fldcw
imul
adc
popl
lret
cmp
jg
mov
dec
popf
push
xor
jecxz
mov
cmpsl
ds
or
sbb
mov
movsb
push
jo
push
cltd
scas
test
jmp
test
push
pop
pop
lahf
mov
adcl
sbb
xorl
imul
or
test
mov
inc
add
insl
shrl
cltd
fcompl
inc
jg
push
es
iret
out
adc
add
jmp
adc
roll
cmp
mov
pop
int
jo
and
jle
scas
mov
push
adc
cltd
lock
or
dec
mov
inc
insb
aad
jb
out
leave
jp
inc
orb
sarl
lds
dec
push
add
xchg
jo
cmpb
out
data16
push
inc
fld
scas
mov
push
outsl
stc
shll
xor
sti
cwtl
or
jae
mov
adc
inc
jnp
shll
push
subl
inc
jmp
pop
imul
mov
cmc
pop
dec
push
out
dec
loop
ja
into
and
xor
movsb
aas
sub
orl
inc
push
xchg
sub
sub
aaa
rorb
fisubrs
xlat
or
pop
lods
dec
sahf
std
test
mov
mov
dec
or
adc
xchg
hlt
push
mov
xlat
lret
icebp
or
mov
js
push
adc
dec
dec
jge
aaa
loop
aas
sbb
mov
and
stos
out
ret
repz
push
sub
in
or
insl
sbb
ja
cli
loope
fwait
cmp
inc
out
out
inc
and
jmp
icebp
pop
ljmp
clc
pop
dec
out
dec
dec
ret
or
jg
out
les
sub
mov
dec
adc
add
push
sub
fisubrl
aam
rcrl
in
cmp
fidivrl
mov
enter
adcl
cmp
mov
lods
shrl
inc
pop
dec
sti
push
testb
insl
adc
leave
cmp
fbld
mov
inc
inc
xlat
xor
fld
or
daa
pop
jg
cltd
je
iret
mov
jae
push
sub
pop
xor
out
adc
orl
cwtl
pop
nop
add
mov
cmpsb
out
das
addr16
inc
mov
leave
mov
ja
leave
mov
xchg
mov
jne
cmp
adc
jmp
sbb
pushf
add
cmp
mov
in
sub
mov
fbld
enter
stos
and
mov
cltd
call
sarl
aad
mov
fbld
xchg
jno
pop
jns
cmp
dec
jmp
in
fidivrl
adcl
xchg
pushf
sti
mul
out
cs
leave
sub
xchg
inc
pop
jmp
cmp
xchg
testl
sub
sub
es
add
pushf
push
ljmp
jae
cmp
incl
outsl
daa
or
push
or
movl
and
pop
sub
jo
push
mov
test
in
adc
stc
xor
cli
les
mov
ret
dec
cmp
mov
sbb
xchg
sub
sub
or
jno
pop
in
lock
test
pop
cs
mov
sahf
sub
mov
mov
cmpsb
ficoms
les
push
and
in
sub
shl
and
mov
adc
fiadds
mov
jbe
inc
ficoml
mov
push
xchg
adcl
fwait
and
inc
pusha
dec
das
inc
mov
ss
mov
daa
mov
pop
ljmp
pushf
cli
notb
sbb
sbb
insb
pop
xor
popa
pusha
push
hlt
dec
jbe
sti
mov
push
rcrl
inc
rorl
hlt
lea
adc
mov
outsl
pusha
cmc
js
arpl
mov
scas
add
aas
dec
test
pop
lret
or
jl
jmp
and
icebp
mov
cwtl
or
fnstcw
daa
inc
adcb
sbb
out
daa
dec
adcl
cld
lods
sbb
movd
dec
fisubrl
push
ror
xchg
or
mov
adc
mov
mov
pusha
push
aas
xchg
sub
cmp
es
push
mov
andb
fldcw
pop
rolb
fidivl
leave
pop
mov
xchg
pop
pushf
lods
inc
jno
in
je
movsb
in
and
fbstp
mov
pop
hlt
mov
loope
pop
cmc
addl
rclb
xor
loope
pop
faddl
fdivp
xchg
fisttpll
jg
add
lea
lahf
stos
xchg
movsd
call
mov
int3
jnp
mov
jo
enter
test
lock
mov
mov
out
jae
sbb
inc
arpl
gs
test
or
jge
shrl
and
push
call
and
es
sub
adc
xchg
sbb
dec
rorl
inc
xchg
and
push
jo
mov
cltd
es
cwtl
mov
or
lds
mov
xchg
lods
rcrl
hlt
inc
test
test
lods
ljmp
ja
aam
xor
aaa
shlb
loope
or
imul
repnz
mov
mov
scas
and
sbb
add
addr16
cld
fwait
xor
and
addb
add
in
loopne
add
xchg
sbb
mov
cli
jl
sbb
enter
push
inc
iret
mov
jno
pop
cmp
fwait
xlat
jmp
jno
divl
out
hlt
repnz
and
loop
lea
shll
int3
sub
outsl
or
pusha
es
and
push
incl
cmp
lods
andl
mov
int3
lods
add
mov
jno
jecxz
push
push
inc
add
xor
lea
or
xor
push
aad
jae
je
inc
ds
adc
or
test
or
push
ret
insb
cld
dec
test
ret
shl
jle
xchg
xchg
mov
movsb
xchg
dec
adc
flds
in
cmp
fcmovne
test
jb
mov
or
inc
push
out
test
inc
push
sahf
jecxz
sbb
lock
pop
dec
xlat
rolb
jecxz
jbe
rcrb
mov
adc
out
jnp
xchg
test
mov
cmp
or
mov
js
push
pop
leave
cmp
mov
lea
push
inc
xchg
notb
add
jnp
aam
inc
push
push
jp
jmp
lock
adcl
add
mov
loop
inc
pop
adc
rorb
lea
test
retw
into
and
lods
cmp
inc
push
in
ja
inc
push
push
jmp
push
jmp
cmp
mov
inc
loop
jb
mov
add
nop
daa
push
dec
xor
jle
cwtl
aaa
pop
pop
push
xchg
mov
inc
adc
and
inc
mov
mov
sbb
jmp
mov
adc
stc
inc
jno
cmc
rolb
inc
sub
push
inc
cmp
jle
in
inc
mov
mov
vmovupd
add
lea
mov
and
insb
jp
jle
xorl
mov
sub
xor
add
adc
je
xor
inc
mov
cmpsb
xchg
mov
inc
stc
insb
fistpll
data16
jo
sub
cli
lods
inc
sub
aam
xchg
gs
xor
mov
lcall
sbb
mov
dec
dec
das
loopw
pop
mov
int
jecxz
fs
inc
mov
setno
sub
scas
lret
mov
inc
xchg
cmp
xchg
adc
sbb
mov
in
and
outsl
adc
into
xchg
ljmp
and
test
xor
inc
mov
sbb
adc
subl
aaa
fisubl
test
testb
jecxz
insb
test
sarb
sbb
fistpl
cld
imul
add
sub
push
shlb
pop
cmp
stos
push
sbb
stc
mov
das
pusha
int
pusha
outsl
and
subl
addb
jno
bound
push
sub
fs
in
sbb
inc
xchg
aas
add
xorl
fs
add
into
cltd
xor
pop
sub
call
pop
cmc
test
jg
pop
adc
cmp
push
fldenv
addl
add
dec
xchg
scas
popf
es
jp
sbb
js
orl
or
loopne
fidivs
pop
inc
mov
push
jo
pop
into
test
lcall
gs
xor
in
push
add
int3
pop
mov
push
sbb
jmp
in
jg
cltd
mov
sub
aaa
mov
mov
sahf
lret
xor
fs
xchg
cli
cld
push
pop
jno
push
ret
pop
push
scas
xorl
ror
nop
add
shlb
cmc
mov
out
jle
in
inc
dec
lods
cmp
divb
mov
or
pop
and
ja
sub
lret
icebp
dec
pop
ja
xchg
mov
ja
inc
push
cmp
cmc
jno
mov
inc
cmc
sbb
cmp
leave
adc
push
sub
fcoms
mov
orb
inc
scas
stos
mov
stc
or
lcall
mov
filds
add
arpl
ret
and
into
cld
scas
add
mov
lds
lret
mov
js
idivl
pop
test
sub
hlt
adc
scas
insl
add
shlb
dec
mov
je
popf
mov
pop
bound
nop
sbb
xor
shl
fistpll
repz
leave
push
cmp
dec
sbb
hlt
mov
ljmp
pop
ja
ret
in
cwtl
mov
in
mov
inc
mov
test
jmp
sbb
test
inc
imul
push
jl
out
push
andb
mov
add
xor
push
insb
dec
push
out
test
icebp
push
fnsave
cs
fiadds
sti
mov
jae
xor
adc
lock
sahf
clc
dec
stos
cmp
pop
fcoms
pop
and
push
pop
lock
cmp
add
push
subb
jecxz
mov
rorb
ljmp
ds
out
adc
xchg
pushf
stos
lahf
or
fcoml
xlat
adc
sbb
lods
xchg
dec
cmp
dec
lods
inc
mov
mov
xchg
push
fxch
xor
cmp
out
rcl
bound
jb
rcrb
out
jle
icebp
cmp
insb
shlb
fisubrl
lcall
mov
movsb
jnp
jbe
sbb
mov
lock
in
rorl
and
and
xlat
shlb
push
ljmp
or
fimull
jge
mov
push
dec
dec
push
or
xchg
cs
fnsave
sbb
popl
mov
mov
mov
jae
xlat
and
ljmp
mov
push
cmpl
push
movsb
or
xor
insl
outsb
sub
fwait
xor
test
fstpt
pop
pop
mov
incb
int3
mov
pop
sarb
out
and
xor
cmp
loopne
inc
aad
daa
pop
fcmovb
sbb
mov
xor
jmp
jecxz
aad
pop
mov
aas
in
das
sti
xor
jmp
adc
mov
and
int3
adc
pop
addr16
xchg
add
jne
jb,pt
fucomip
add
adc
out
testl
inc
clc
xor
adc
out
inc
test
cli
mov
push
sbb
ret
mov
sarb
lcall
mov
dec
cmpsl
rorl
mov
pop
lcall
shl
aad
call
ret
out
pushl
jnp
push
xchg
aam
sbb
or
das
dec
sub
es
fdivrs
add
lahf
in
xor
lcall
and
stos
jb
cmp
mov
fstps
mov
mov
dec
pop
add
or
push
inc
cmpsb
and
pop
xor
dec
imul
mov
stos
shl
cmp
iret
and
sub
lret
out
adc
inc
lods
xor
add
cs
jp
in
outsl
nop
leave
and
in
inc
scas
aaa
outsl
push
sub
iret
jmp
dec
sarb
fwait
hlt
mov
jmp
xchg
sub
popw
adc
mov
lods
cld
mov
stos
nop
cmp
jbe
pop
jae
pop
out
test
inc
sub
lcall
aas
enter
arpl
dec
adc
jns
insb
push
xchg
lea
ja
mov
pushf
jno
repz
dec
out
jnp
mov
dec
test
stos
stos
pushf
cmpsb
int
inc
cltd
pop
inc
push
pop
cmpl
popf
fiadds
addl
lods
sbbl
imul
mov
dec
pusha
das
and
mov
ss
and
sub
aaa
adc
int3
add
mov
repz
sub
mulb
push
xchg
sbbb
cmpsb
pop
or
cmp
popf
stc
loope
mov
add
inc
cmp
int3
cmp
mov
fwait
test
mov
pop
ja
scas
sub
cmc
stos
inc
daa
int3
push
ret
adc
rep
test
mov
and
sub
inc
arpl
jecxz
dec
cwtl
dec
and
cmc
cmpsb
rcl
cltd
xchg
les
sub
movsb
sti
call
push
pop
mov
mov
xlat
nop
daa
or
scas
inc
fwait
ret
sbb
enter
ret
mov
xchg
scas
pop
adc
std
fimull
pop
jne
jp
imul
sub
gs
lcall
fsubl
adc
cmp
mov
es
lahf
repz
fists
inc
adc
push
cmc
add
sbb
mov
aad
dec
pop
push
dec
dec
es
enter
ret
out
iret
aas
loop
mov
cs
ljmp
sub
ja
sub
pop
inc
jnp
fisubrs
jg
inc
in
pop
aas
imul
repnz
mov
imulb
xchg
imul
pop
divl
sub
mov
mov
add
out
adc
cli
sbb
fisubl
out
das
out
mov
xchg
cmp
pop
xchg
add
sahf
push
and
test
mov
adc
sbb
mov
out
inc
fcmovnu
or
xchg
xor
stc
xlat
stc
sbb
negl
adc
or
cmc
cmp
adc
pop
push
cmp
and
cmc
mov
hlt
decl
and
gs
ret
pop
popa
add
imul
cmp
ljmp
std
mov
imul
add
gs
movsl
or
pushf
fdivl
and
pusha
mov
in
subl
ja
mov
repnz
mov
ror
daa
loopne
mov
cmp
test
jg
xchg
neg
cmc
adc
fdivp
and
mov
jle
inc
mov
and
jno
adc
mov
bound
popf
push
lock
cmp
in
pop
les
nop
xor
pop
addr16
push
push
push
inc
sbb
popf
cld
ud1
jmp
push
outsl
xchg
shlb
sahf
sub
std
imul
dec
int
push
jle
scas
inc
negl
push
jo
in
scas
jo
or
call
mov
mov
aas
fdivrl
jp
mov
inc
stos
jne
sub
mov
mov
pusha
std
sub
int3
std
xchg
incb
mov
lods
dec
ret
xchg
sub
xchg
aaa
cmp
shr
dec
adcb
push
inc
mov
call
cmp
pop
ret
jns
push
cwtl
cmpsl
incb
add
sub
and
add
test
sub
push
loope
fistpll
loopne
leave
xchg
inc
cmc
push
nop
cmp
push
sbb
lret
mov
mov
stc
enter
outsl
mov
stc
testb
insb
sti
faddl
nop
js
xor
les
nop
inc
inc
mov
sbb
sub
mov
cmpsl
out
jg,pt
push
xor
jecxz
and
test
outsb
popf
inc
dec
inc
xor
shl
outsb
pop
faddp
pop
int3
imul
cmpsl
popa
sub
sarb
pop
ret
imul
xchg
push
push
sbb
hlt
mov
in
mov
xchg
jg
sub
or
adc
mov
mov
out
cmp
add
jnp
inc
rcr
or
mov
fidivl
cli
mov
push
xor
xor
xchg
sbb
in
int3
mov
dec
loop
cmp
mov
es
lods
aaa
ret
xor
rorb
pop
pop
movsl
daa
cmp
xor
inc
add
push
fbstp
int
std
inc
lret
xchg
cmp
sbb
sbb
lock
adc
push
sbb
sbb
imul
out
mov
insl
sub
pop
dec
adc
cmp
and
jle
or
jg
dec
cmp
lret
out
aas
and
jo
sbb
jmp
or
cmp
fwait
and
add
xchg
or
imul
push
pop
cmp
ds
rorl
dec
gs
in
pop
in
movsb
push
pop
mov
lock
in
loopne
pop
dec
dec
popf
outsl
sarb
aaa
ss
xor
test
movsl
mov
rol
ret
fstps
lret
popfw
xchg
pop
jecxz
imul
pop
sub
inc
push
fmuls
xor
and
add
sbbl
lods
fmull
shll
mov
push
mov
bound
and
and
cmpsl
mov
mov
fs
pop
ds
mov
lahf
xchg
add
clc
push
xor
std
out
mov
jg
faddl
pop
hlt
sbb
cld
ljmp
cwtl
faddl
and
xor
dec
pop
stos
push
jl
mov
sub
negl
pop
dec
into
lahf
and
xor
pop
mov
adc
into
push
jl
test
mov
addl
enter
xchg
cltd
std
out
std
stos
clc
jmp
xabort
clc
cmpsb
cld
nop
sbb
test
jno
ljmp
test
push
cmp
sbb
push
pop
add
enter
xor
cwtl
xchg
daa
jae
test
dec
sbb
jp
xor
cmpsl
xchg
push
sub
repz
inc
cmp
in
lea
and
loopne
cltd
pop
sti
add
daa
and
adc
inc
pop
pop
adc
aad
pop
pop
xor
lret
cld
sub
mov
jbe
cmpsb
in
movsb
push
jl
loopne
pop
sub
int3
imul
sbb
repz
pcmpeqd
pop
sti
add
pop
mull
sbbb
xlat
push
mov
scas
push
fwait
mov
mov
les
mov
inc
std
xchg
adc
hlt
and
mov
cmp
mov
and
cs
push
fs
in
fldl
push
push
cmpsl
pop
xchg
les
or
add
xchg
leave
push
pop
cmp
push
push
stos
mov
xchg
cwtl
jne
mov
xchg
jecxz
fildl
outsl
fs
imul
jl
in
mov
dec
lahf
jge
mov
cmpb
or
cmp
in
ret
sub
es
xor
mov
cli
roll
add
adc
and
movsb
fistpl
sti
lods
sub
sbb
out
shlb
imul
add
pop
cmpsl
jae
lods
jl
or
cmp
xlat
jbe
shll
sete
aad
mov
fnstenv
cmp
pop
ljmp
and
sbbb
dec
pusha
pushf
out
mov
xchg
mov
outsb
mov
adc
movsb
sbb
fidivs
fs
mov
xchg
fildl
pop
test
enter
mov
adc
adcl
lcall
pop
es
dec
jb
iret
mov
add
pop
movsl
leave
imul
pushf
sub
out
push
jns
je
mov
lods
and
fsub
mov
pop
xchg
add
ret
xchg
mov
ds
in
popf
stc
mov
sub
jecxz
and
add
mov
jmp
nop
mov
push
cmc
notb
xchg
push
pop
out
cmpsl
add
rorl
sbb
insb
iret
pop
repnz
adc
adc
outsl
dec
call
jns
aas
testb
cmp
stos
inc
push
frstor
loopne
sbb
movsb
lods
mov
sub
out
jb
shrl
pop
jns
inc
into
arpl
gs
add
js
rcr
dec
inc
or
icebp
xchg
xchg
and
add
pop
push
fs
popf
mov
mov
pusha
xor
jno
repnz
mov
adc
movsb
push
pop
fcmovb
cwtl
inc
insl
sti
movsb
cmp
cwtl
or
dec
dec
loop
jmp
jg
punpckhdq
push
je
cmp
jecxz
inc
cwtl
lret
add
std
mov
mov
cmpb
mov
mov
nop
daa
test
out
inc
lahf
loop
lods
or
ds
cmp
add
lds
xchg
push
into
movsl
add
popa
cli
movsl
xor
sbb
lods
dec
fucomip
inc
imull
enter
js
hlt
stc
out
mov
repnz
pop
call
mov
into
mov
fnstsw
add
cld
mov
xor
ret
mov
repz
inc
and
pop
adc
add
push
jle
pop
lock
xor
add
xlat
shll
or
xor
stos
inc
pop
rorl
fistpll
xchg
js
sbb
in
push
mov
add
sbb
mov
das
ja
popa
mov
mov
inc
ss
add
mov
leave
mov
shll
lret
orl
mov
leave
push
gs
mov
out
imul
js
mov
je
jecxz
push
inc
jg
arpl
xchg
addl
adc
dec
lds
inc
sbbl
enter
aaa
mov
andb
popa
in
or
ret
dec
jae
pop
enter
pusha
lock
xchg
add
push
repz
adc
nop
jle
mov
pop
mov
xchg
addr16
repz
sldt
xchg
cmp
movsl
lods
xchg
sub
jo
ljmp
xorl
push
push
pop
loope
push
sub
inc
pop
jl
lea
jmp
xor
mov
aas
mov
and
sarb
sbb
and
sarb
mov
sbb
mov
enter
add
jle
pusha
lods
xlat
push
call
pop
aaa
sbb
lcall
out
scas
push
ror
je
pop
cmc
jge
jmp
and
xchg
shll
insb
lea
xor
daa
lods
or
push
mov
push
subl
xchg
movsb
fdivrl
lods
jg
mov
push
jo
jns
andl
inc
and
jno
mov
push
enter
adc
xchg
xor
dec
cmpsl
jne
repz
sbb
sbb
out
cmp
fdivs
cmp
nop
mov
pop
xor
xchg
int
mov
popa
es
push
cmp
dec
or
adcb
add
fmul
popa
jecxz
leave
rolb
lods
dec
mov
fcmovnu
mov
or
mov
stos
jo
scas
inc
cmpsb
dec
push
hlt
orl
xchg
push
push
jmp
cmp
daa
data16
pop
clc
adcb
cmp
shll
imul
repnz
out
push
xchg
mov
jp
jge
inc
sbb
jae
mov
fadds
push
cmp
in
nop
lock
xlat
bound
push
cwtl
and
or
xchg
je
or
cltd
push
test
push
jb
push
jae
mov
imul
jne
andb
nop
jnp
aam
movl
mov
mov
push
lods
sub
inc
push
into
fidivs
jns
pop
sahf
and
xchg
adc
adc
mov
sbb
in
add
out
repnz
aaa
scas
call
data16
or
push
xchg
adc
xchg
add
pop
pop
into
push
cmp
jge
lret
jecxz
sbb
and
pop
dec
pop
les
out
pop
out
shlb
cmpsl
jnp
fsts
leave
or
cs
xchg
pop
lret
push
xor
mov
insl
adc
pop
cmp
cli
mov
test
shlb
int3
mov
pop
push
in
mov
jp
cmp
add
cmp
iret
xor
pop
sahf
es
icebp
sbb
inc
lds
add
jae
call
adc
pop
icebp
push
mov
aas
aaa
cmp
inc
lcall
fucom
daa
shlb
ret
repnz
cld
dec
pop
mov
sbb
fimuls
sub
js
pop
sub
mov
pop
cld
pop
mov
into
sahf
cmp
out
incl
addr16
jp
jmp
lds
adc
dec
ds
and
and
pop
dec
pop
jae
xor
inc
js
out
in
das
cmp
or
lret
sub
dec
loope
lret
outsb
addr16
push
mov
insb
outsl
fmul
jb
pop
pop
dec
push
pop
shrb
std
mov
into
adc
cld
adc
cmp
dec
mov
loop
rol
pop
add
sbb
aam
addb
pop
daa
sub
pop
push
cmp
xor
out
jb
fidivrl
push
adc
mov
aas
dec
aam
jg
xchg
dec
stc
andb
shll
test
aas
dec
and
mov
add
mov
or
jnp
test
es
cmpsl
mov
and
pop
fbstp
add
int
popa
popa
or
out
jnp
mov
bound
in
movsb
cmp
jle
adc
in
push
jg
rolb
cmp
sbb
aam
push
imul
mov
pushf
jae
xchg
xchg
subl
jmp
loope
sbb
dec
push
mov
sub
cmpsb
test
loopne
or
gs
sbb
adc
cli
sub
lock
cmc
mov
or
push
inc
mov
pop
adc
xchg
inc
mov
push
add
cmpb
fidivrs
jb
dec
int3
push
daa
cmp
push
popf
or
rolb
shlb
mov
mov
pusha
fnstcw
inc
jecxz
mov
adc
sub
test
push
ror
sub
out
insl
jbe
and
pop
inc
or
cli
or
push
test
es
cmp
xchg
add
adc
pop
lods
dec
cltd
aaa
ret
mov
fld
sub
stos
jge
shrl
loop
adc
ret
in
inc
jle
and
pop
sub
xchg
push
das
mov
dec
cmp
or
cltd
mov
fs
loop
test
movl
pop
fidivrl
ret
mov
clc
and
push
fmulp
mov
push
pop
push
xor
shrl
das
mov
xchg
push
pop
cmpb
lcall
or
pop
out
aad
call
in
xchg
xchg
cld
and
inc
cmpsb
jmp
ljmp
les
mov
pop
call
or
fsubrl
sub
sub
popf
cltd
je
js
lock
daa
xlat
inc
sahf
inc
push
xchg
ficompl
fbstp
dec
gs
arpl
cs
mov
jge
cld
push
roll
mov
jnp
jle
mov
xor
clc
pusha
das
cmpsb
jne
repz
sbb
push
jg
fs
xlat
pushl
xchg
dec
cmp
xchg
mov
dec
dec
daa
out
insl
and
jp
fldenv
cmpsl
pusha
cmc
mov
cmp
jb
dec
in
adc
and
pushf
scas
mov
les
enter
aam
dec
and
mov
dec
shl
dec
add
nop
out
in
outsl
push
cmp
cs
lea
shl
inc
leave
push
jne
loop
cld
je
mov
andb
sbb
sbb
mov
cli
addb
pusha
ljmp
adc
pop
loope
out
imul
push
stos
std
repz
das
cmp
repz
call
cmp
insb
in
call
jo
jmp
fcom
cmp
push
mov
xchg
fst
push
xchg
fmull
cmc
mov
addr16
lret
pop
jp
xchg
out
cmpsl
mov
mov
hlt
imul
loope
notb
popa
aam
pop
rorb
jne
xchg
rol
cmpsl
dec
ja
je
aad
inc
mov
stos
outsl
cmp
scas
or
js
test
fbstp
mov
mov
cmp
mov
mov
aam
mov
or
jmp
sbb
xchg
add
incb
xchg
mov
cmpsb
ret
mov
xorb
std
or
mov
and
xor
push
or
orl
popa
cmp
fidivrs
pop
mov
jno
dec
xchg
leave
jecxz
gs
lock
adcl
aaa
movsb
xchg
xchg
add
das
adc
jns
dec
sbb
into
jg
loope
cmp
aas
int
xchg
icebp
pop
pop
lea
in
xchg
scas
pop
cmp
sub
and
decl
into
daa
cmpsb
shlb
fldz
out
pop
ds
lods
push
out
sbb
cld
sbb
sub
push
mov
or
fsubs
rorl
leave
xchg
dec
out
loope
dec
lahf
js
fldcw
insb
push
popf
mov
or
xchg
add
cmp
sbb
lock
imul
lock
xor
lahf
ljmp
lods
clc
mov
pop
bound
mov
int3
shll
sbb
sub
xchg
push
pop
cmp
outsl
cmp
mov
pop
dec
and
lds
jno
mov
data16
jecxz
js
call
xor
lods
ja
clc
imul
sub
ja
pop
fldl
add
insl
test
out
mov
stos
faddl
mov
mov
in
dec
or
inc
loopne
jno
popf
outsl
dec
sahf
lds
out
sbb
pop
les
aam
pop
stos
inc
mov
cmpsl
insb
outsb
out
push
cmc
jo
clc
add
fs
xor
mov
enter
mov
mov
or
daa
mov
cli
lods
jb
stos
add
lods
ds
test
inc
mov
out
test
loopne
sbbl
jno
or
cmc
shrl
inc
add
push
mov
lods
fdivp
mov
arpl
cmpsl
mov
push
push
icebp
shll
inc
sti
push
mov
jecxz
int3
and
xchg
popa
mov
cmc
outsb
sahf
arpl
pusha
js
mov
cmc
mov
mov
adc
addr16
sti
test
push
ljmp
sub
dec
xchg
data16
jo
loopne
inc
xlat
inc
insl
mov
xchg
fdivrl
setnp
fmul
aas
or
cmp
lods
dec
dec
mov
cmp
pop
jbe
dec
pop
cmp
sub
cmp
fistpll
push
and
outsb
cltd
insb
andl
pop
adc
xlat
adc
ja
ret
mov
cs
stos
add
push
dec
adc
mov
adcb
in
loopne
sub
sbb
cmp
ret
xchg
xor
test
int3
fsubl
int
pop
divb
xlat
push
hlt
inc
sarl
mov
bnd
jmp
mov
loop
imul
or
mov
ljmp
rcl
out
push
fmul
and
pop
sub
int3
pushf
stos
xchg
stos
lds
xor
int3
cltd
popa
push
lods
inc
fiadds
push
repnz
icebp
clc
mov
les
mov
add
pop
rorl
and
jb
rcll
xor
dec
fiaddl
cmpsl
xor
pusha
roll
or
icebp
daa
outsb
out
pop
ret
fucomip
mov
ss
and
movsb
jmp
adc
arpl
inc
shrb
imul
pushf
cwtl
mov
push
mov
hlt
fisubrs
lahf
idivb
push
sub
stos
fnstenv
xlat
outsb
lret
pop
adc
jp
je
jae
outsl
shr
dec
mov
loope
jbe
js
sub
xchg
mov
mov
out
arpl
popf
inc
sbb
cld
lret
jl
cltd
and
dec
or
inc
repz
add
lds
cmp
mov
pop
mov
cmp
mov
cmp
pop
mov
add
cmpsb
in
rcrb
arpl
inc
jns
push
sub
adc
scas
call
cmc
loop
pop
loop
push
lods
outsl
push
js
shrd
scas
movsl
stos
adc
enter
test
sub
dec
divb
frstor
mov
imul
add
mov
out
call
xor
add
sub
call
cmp
or
xor
stos
xor
push
mov
aad
adc
sqrtps
mov
mov
dec
mov
leave
sub
ds
popf
out
pop
enter
inc
lods
add
fwait
cs
cli
xchg
in
call
xchg
jmp
pop
inc
xlat
sub
add
repnz
sbb
daa
mov
sbb
mov
jle
jle
fiadds
loopne
ret
test
cmpsb
inc
and
push
inc
sbb
mov
lahf
stc
mov
mov
rep
xor
pop
js
sub
inc
dec
mov
push
loope
or
ret
shll
xor
std
or
inc
add
sbb
jae
jb
loope
xor
push
cmc
out
fisubrl
jge
sub
inc
movsb
scas
mov
fnsave
nop
sub
add
test
push
bound
sti
mov
xchg
mov
xchg
outsb
push
push
ffreep
psubsb
std
pusha
subb
call
je
pop
xchg
lock
cs
xlat
repz
push
test
mov
or
dec
mov
and
es
mov
sbb
inc
scas
pop
dec
stc
dec
cltd
aad
push
mov
int
push
push
rcrb
test
push
xorb
test
fnstsw
add
aaa
dec
shlb
rol
fdivrp
pop
mov
inc
shl
dec
or
in
cmp
inc
insl
push
push
mov
xor
int
cmp
dec
popa
ret
loop
mov
outsl
stos
test
fnstcw
movsl
loop
nop
insl
sarl
mov
xlat
testb
cmpb
dec
insb
mov
fs
cli
and
mov
adc
nop
dec
mov
loop
mov
call
enter
lret
shr
addr16
pop
mov
jle
clc
divl
cmp
decl
sub
shlb
dec
xor
js
loopne
stc
aam
in
mov
lret
pushf
xchg
stc
xchg
pushl
or
popl
roll
mov
xor
jmp
ret
xchg
popa
dec
jbe
inc
stos
mov
lods
dec
lcall
push
inc
push
stc
or
adc
idivb
sub
sub
enter
and
dec
fstps
aaa
std
std
gs
mov
sahf
sbb
pop
sub
inc
pop
movsl
das
and
or
add
fcmovbe
dec
icebp
xor
xor
in
inc
pop
inc
xchg
test
pop
scas
ss
mov
inc
rolb
xor
scas
sbb
sbb
sub
adc
pop
xor
fcomip
xor
push
mov
mov
sbb
icebp
or
push
sub
or
sti
xor
stc
dec
push
icebp
xchg
add
xchg
mov
fs
mov
nop
xor
mov
movsl
and
pop
push
dec
dec
pop
clc
pop
lods
mov
dec
xlat
cmp
pop
scas
xchg
fwait
xchg
push
cltd
mov
sbb
mov
add
xchg
jno
cld
push
aas
es
and
loope
das
into
xlat
arpl
pop
iret
mov
jbe
inc
negb
pop
lahf
mov
pop
push
cs
fildll
mov
lods
xorb
or
inc
insl
or
pop
lock
in
movsb
jp
loop
dec
cltd
mov
outsl
imul
scas
jno
cmp
out
push
add
cmp
pop
mov
pop
and
outsb
cmp
adc
sar
mov
sti
cmpsl
std
stos
fidivs
cwtl
ss
xchg
xchg
xor
mov
addr16
fadds
shll
push
cmpsb
icebp
mov
vpslld
lcall
mov
push
and
out
bound
js
test
das
lcall
add
and
gs
ret
jne
in
out
dec
pushf
dec
idivl
mov
out
xor
jecxz
and
xchg
pop
jnp
jl
out
sahf
ficomps
rol
sbb
or
int3
fidivs
xor
jle
mov
sub
cmp
pop
inc
sahf
lret
lods
andb
mov
pop
gs
cmc
test
gs
std
mov
xor
ret
and
or
sti
insb
pop
pop
xor
cmpsl
scas
mov
popf
imul
jp
idivl
aam
rcl
addl
mov
enter
fcoms
xchg
outsb
rcll
mov
into
mov
inc
push
lret
mov
addr16
push
stc
sub
mov
sub
out
insl
dec
adc
lcall
sbb
push
jmp
mov
mov
out
lret
aas
xor
int
add
xchg
dec
testb
adc
xchg
inc
adc
xchg
mov
ret
add
movsl
sbb
outsb
enter
pop
nop
pop
aas
sbb
ja
cmp
cs
xchg
mov
ret
imul
cmp
inc
in
xchg
mov
xlat
repz
sub
pop
cltd
fwait
and
ret
mov
jno
jb
stos
push
stos
mov
inc
lcall
push
cmp
mov
fsub
das
or
mov
mov
in
psubusw
aas
mov
mov
add
or
push
mov
pop
ljmp
and
sbb
test
shrb
insl
fldt
jecxz
dec
sahf
or
mov
mov
std
push
or
out
or
sbb
int3
sub
mov
jno
lods
into
movl
lret
fnstcw
pop
daa
mov
int3
xor
bound
and
push
arpl
cmp
leave
test
add
jge
push
out
sahf
adc
jle
outsb
cmp
push
dec
xchg
xor
sub
dec
loope
inc
push
out
xchg
adc
mov
shll
mov
push
sbb
cmp
ret
outsl
dec
cmpsl
fsubl
inc
push
mov
inc
mov
mov
mov
lods
ljmp
cmp
ds
inc
repz
cld
rcll
xchg
pop
add
inc
cmc
outsb
inc
test
repz
dec
lret
pop
push
cmp
mov
and
scas
xchg
xlat
repz
lret
mov
aas
dec
pop
shl
insb
pop
sahf
sbb
sub
and
adc
sub
cli
hlt
jo
fcmove
pop
iret
mov
mov
aas
fnstcw
imul
xchg
movsl
lahf
in
xchg
xlat
mov
aam
sub
rcr
sub
xchg
mov
xchg
movsl
mov
ja
inc
in
or
mov
dec
sbb
lea
dec
xchg
xchg
aad
dec
mov
out
shr
jle
jmp
jg
pop
cmp
cmp
sti
lea
repz
testl
mov
insb
punpckldq
test
std
cltd
cmp
add
xlat
dec
adc
mov
and
pop
nop
fidivl
das
gs
fs
in
gs
mov
test
rorl
enter
mov
fs
mov
bound
insb
cmp
scas
or
adc
push
test
mov
fstpt
sub
jl
inc
mov
mov
dec
rorb
sbb
leave
sub
pop
inc
push
push
test
divb
pusha
xor
sbbl
jl
sub
adc
mov
pushf
insb
ret
jnp
repz
loop
add
cmp
into
lea
cmp
out
fidivl
pop
mov
sbb
cmc
into
es
daa
sub
cltd
pop
dec
pop
xor
ja
bound
subb
loope
repnz
push
sub
fwait
push
mov
nop
xor
in
fsts
mov
xchg
stc
rcl
jnp
loop
xorl
fadd
mov
out
xchg
adc
sbb
je
and
and
shll
repnz
mov
mov
adc
and
mov
add
add
gs
testl
fs
mov
mov
addr16
insl
aaa
in
cld
cmp
cmp
cmpb
sub
adc
scas
jno
fisttpll
jbe
cld
push
lret
dec
in
fucomip
in
cmp
xor
inc
jmp
and
enter
jno
les
aad
scas
inc
mov
rclb
popa
push
cs
fdivp
jge
int
sub
ljmp
das
cld
pushf
pop
insl
leave
test
hlt
push
cld
cmp
push
or
adc
and
popf
bound
aas
jo
ss
test
lods
shrb
popf
inc
sub
sub
repz
xchg
loopne
or
and
and
cmp
xlat
outsb
mov
sbb
les
add
and
push
inc
xchg
inc
aaa
into
ja
push
add
and
push
pop
sbb
or
sub
lock
pop
dec
orb
inc
jno
xchg
cmp
in
xor
xor
sti
enter
sbb
jmp
mov
jecxz
sub
cmpsb
scas
rcr
mov
add
in
mov
cmp
imul
inc
xlat
mov
repz
cmc
popa
push
mov
ret
jne
dec
lods
pop
es
into
push
out
sub
pop
pusha
outsb
inc
and
rcrb
inc
enter
fwait
xor
aam
out
adcl
push
inc
movsb
jne
pop
insl
inc
jmp
mov
lods
jmp
cmc
mov
js
mov
mov
test
lret
js
idivl
mov
mov
jl
pop
cmc
shll
movsl
imul
das
cmp
push
sbb
dec
xchg
pushf
add
adc
fidivl
int3
cs
not
ret
mov
mov
pop
push
popl
fsubrl
insl
iret
cmp
shl
sbb
xchg
subb
push
sbb
hlt
mov
or
addr16
xchg
nop
push
lcall
mov
cmp
push
decb
or
mov
leave
cmp
repnz
mov
repz
test
push
cmp
xor
stos
idivb
pop
add
push
popa
fistpl
shll
insb
sti
cmp
xchg
imull
adc
dec
xchg
mov
cmp
scas
inc
inc
ljmp
in
jo
xor
shlb
test
jo
out
frstor
es
mov
lahf
in
ret
jle
outsl
out
mov
stos
ret
add
sbb
je
cmp
jne
add
pop
sbb
cwtl
xorb
mov
cmpsb
sbb
loope
imul
adc
add
lods
cmp
das
inc
push
dec
mov
mov
cmp
cmp
xchg
adc
jp
sbb
cmpsb
icebp
nop
or
clc
sub
fnstcw
cmp
xchg
fs
xchg
mov
jmp
xor
dec
cmpsl
jb
xor
push
roll
jecxz
movsl
lahf
xlat
dec
out
pop
movsl
in
popa
pop
push
scas
jge
fwait
xchg
enter
mov
jae
xor
movsl
xchg
in
mov
sbb
mov
fsubrl
cmp
inc
and
cltd
push
lahf
outsb
inc
shll
in
xchg
mov
je
sub
adc
xchg
aas
cs
mov
sbb
jmp
loope
inc
movsl
add
mov
bts
loope
jb
or
mov
dec
adc
xor
sahf
mov
adc
sub
or
out
das
addr16
addr16
sub
sub
outsb
xlat
out
daa
dec
dec
shr
ja
mov
mov
mov
cmp
mov
shll
inc
popf
into
repnz
jnp
add
sbb
ds
xchg
push
fbld
sub
push
sbb
xor
js
mov
jecxz
cld
pop
sbb
dec
int
inc
or
out
jne
and
roll
imull
pop
sub
push
out
lret
xor
push
lret
xor
xlat
push
int3
pop
inc
push
lods
push
sub
je
bound
test
lods
jno
push
out
repz
mov
pop
jl
cmpsl
and
mov
mov
jmp
pop
mov
into
cwtl
mov
pop
inc
mov
pop
sbb
sbb
cmp
cmc
cwtl
test
dec
pop
add
movsl
icebp
pop
push
pop
inc
es
xchg
call
imul
and
imul
jno
pushf
lcall
mov
lds
test
adc
cld
pop
int3
loopne
and
dec
mov
jnp
shll
pop
pop
xor
nop
dec
es
idivl
cmpsb
fnstcw
xchg
cmc
or
mov
mov
sub
xchg
inc
jecxz
add
fbld
or
mov
int
mov
mov
jb
fbld
lahf
mov
fs
test
mov
dec
aaa
loop
cltd
aad
negb
or
test
nop
clc
sahf
xchg
testl
mov
cmp
mov
cmpsb
cmp
cli
rol
sub
adc
jbe
add
push
int
pop
mov
je
cmp
ss
push
subb
pop
push
rcrl
pusha
mov
adc
pop
ret
mov
ja
stos
push
inc
dec
test
ja
push
sub
cwtl
insb
repz
dec
int3
popf
xor
ljmp
push
es
push
xor
mov
push
lret
data16
push
adc
add
stc
xchg
idivb
pop
jo
lea
mov
sarl
lret
dec
mov
cli
adc
dec
sbb
mov
int3
push
lret
fnsave
push
pop
loope,pt
xlat
rcrl
sub
fiaddl
mov
hlt
subb
xchg
dec
ljmp
nop
add
dec
dec
pop
sub
pusha
jmp
cmpsb
xchg
icebp
mov
lcall
sbb
test
push
test
js
ss
fstpt
adc
int3
lret
pushf
cmp
jge
push
cmp
lock
and
out
loopne
xor
push
lcall
sahf
jge
mov
xchg
mov
mov
popa
jne
mov
scas
xchg
sub
mov
dec
int
shlb
sbb
mov
cmp
adc
decl
pushw
iret
sub
insb
andb
sub
add
sbb
arpl
and
mov
icebp
add
xor
cmp
enter
mov
shlb
inc
jge
add
mov
inc
pop
mov
iret
sahf
subb
mov
jo
pop
cmp
sub
mov
aam
popf
jge
xchg
xlat
fcomps
inc
insl
aam
xchg
daa
xor
or
add
shlb
inc
lea
idivl
sbb
and
xor
test
mov
fwait
xchg
sub
stc
add
enter
inc
sahf
ret
jmp
enter
scas
sarl
aam
sarl
mov
cmp
sbb
dec
movsb
cmp
xchg
ljmp
popf
adc
mov
xor
str
repz
je
sbb
or
mov
cwtl
pushf
add
xorb
ljmp
gs
mov
xchg
push
xchg
imul
divb
fidivl
loope
or
mov
fsubrl
aam
iret
mov
inc
cmc
sub
cwtl
test
inc
xor
xor
bound
js
adc
jle
cmpsb
int3
xchg
scas
mov
jmp
pop
pushf
ljmp
sub
push
sbb
inc
inc
cmp
mov
sub
push
test
lret
jne
dec
cmpsb
stc
stos
mov
pop
xchg
sbb
or
outsl
cmp
roll
cmpl
mov
mov
push
pop
insl
cmp
sbb
sub
xor
aas
mov
roll
cmp
push
inc
mov
test
movsl
inc
jbe
out
jnp
push
push
repnz
xor
rcr
push
xor
addl
cmp
mov
clc
jl
mov
or
dec
push
ret
leave
mov
and
add
inc
push
fnstsw
mov
test
scas
test
mov
movsl
in
mov
ss
and
stos
rcrb
fdivl
xorb
ljmp
cmp
iret
fistpl
movsb
sbb
int3
push
or
jbe
das
mov
or
jge
out
xchg
sbb
mov
cmpb
mov
cmp
inc
call
loopne
jo
mov
inc
push
mov
fwait
repnz
cmpsl
xor
jbe
sbb
mov
je
inc
fisttpl
sbb
jns
xor
dec
imul
stos
fisttpll
repz
dec
fisttpll
adc
jae
xor
imul
test
mov
gs
call
movsl
push
loop
push
mov
cmp
xor
inc
gs
xchg
lret
lds
jmp
ljmp
jno
not
cmp
push
pop
mov
scas
push
jae
fdivp
mov
jnp
dec
xchg
mov
fdivp
pop
cmpsl
pop
xchg
mov
cli
xchg
push
iret
pop
sahf
add
scas
sbb
xor
stos
xor
enter
jg
lahf
xchg
xor
sbb
loope
jno
pop
into
mov
aaa
mov
lcall
call
pop
push
jbe
sbb
fcmovnb
xor
mov
mov
cmp
xchg
push
sbb
jmp
mov
repz
xchg
jp
aaa
push
add
xor
call
outsl
outsl
ret
push
xchg
and
xchg
pop
adc
stc
into
pop
jo
xchg
testl
ret
dec
or
aas
and
pop
cmp
and
jae
mov
in
jl
mov
jle
scas
mov
push
fisubrs
pop
lods
in
mov
mov
test
jle
and
inc
test
jmp
out
xchg
jo
jle
pop
xor
mov
ret
lea
ficoml
cmp
imul
sbb
cmp
in
fists
dec
shll
dec
pushf
pop
inc
fistl
rcrb
sub
stc
pop
sbb
mov
xor
inc
fsubs
push
sub
sbbl
dec
xchg
push
sub
mov
pushf
out
inc
lds
or
jp
sub
fimull
mov
sahf
aas
push
dec
mov
rcrl
test
psllq
adc
sbbl
dec
pusha
mov
clc
sbb
cmc
xor
insl
jnp
nop
xor
xor
test
das
sbb
cmpsb
pop
add
jp
pop
sub
scas
sub
loopne
ja
cmpsl
sub
ja
fiaddl
jb
add
outsb
lahf
and
xchg
mov
mov
ret
add
movsl
xchg
add
scas
scas
bound
movsl
fcmovnb
iret
add
scas
mov
movl
adc
lret
sub
stos
outsl
adc
movsb
bound
jnp
cmc
movd
rcrl
and
xorl
in
stos
imul
mov
movsl
inc
adc
enter
add
jecxz
adc
and
arpl
rcll
arpl
sub
mov
stc
test
inc
dec
pop
lcall
mov
movsl
jbe
inc
ja
mov
scas
ret
xor
mov
dec
clc
jne
ds
ds
mov
clc
lock
gs
mov
cmp
adc
cmp
addr16
aad
loope
dec
push
les
sbb
hlt
ret
stos
jg
and
xor
cmp
insb
fstl
mov
push
popl
frstor
lcall
mov
cwtl
in
sub
adc
aaa
pop
inc
pop
cli
jmp
mov
lret
test
dec
push
jns
or
fs
lods
clc
das
cwtl
shlb
push
rcl
push
push
fwait
in
jge
iret
mov
inc
movsb
cmp
mov
orb
adc
cmpsb
inc
dec
pushf
mov
cli
xchg
inc
and
sbb
iret
xchg
xor
leave
jae
and
inc
jecxz
fidivs
cmp
in
mov
or
cs
sub
jne
std
std
mov
mov
je
lcall
and
pop
sti
test
jb
dec
fs
pop
call
cmp
imul
dec
mov
fmuls
lock
inc
and
mov
outsl
cmp
mov
lea
cli
adc
xor
and
xchg
mull
push
arpl
sbb
ja
cmp
sbb
pop
mov
and
sbb
rcrl
add
mov
sub
stc
cli
fisubs
pop
int
push
popf
jbe
fnstcw
push
inc
push
add
dec
mov
or
cltd
inc
mov
pushf
add
and
and
in
addl
adc
repnz
lock
je
pop
pop
inc
outsl
add
out
aas
jnp
jge
ret
adc
mov
repnz
repz
adc
mov
es
xlat
adc
mov
ret
lds
sbb
inc
lret
gs
outsl
daa
push
call
movsb
add
cli
mov
scas
mov
dec
repnz
lahf
and
mov
movsl
pop
es
pusha
mov
jmp
mov
outsl
jge
shll
push
jno
fs
push
inc
out
cmp
iret
int3
mov
mov
leave
cwtl
xor
xor
adc
mov
jle
divl
subb
fsub
into
push
pop
ljmp
test
pop
nop
mov
scas
jmp
pop
cwtl
jmp
test
add
lds
pop
pop
sub
test
lret
mov
nop
mov
lss
arpl
inc
jle
mov
stos
lea
gs
dec
xor
mov
mulb
xchg
xchg
sbb
ret
mov
xchg
aas
in
lock
cltd
push
insb
rorl
clc
rolb
xchg
movsb
mov
dec
dec
jmp
pop
jecxz
scas
mov
add
adc
push
fwait
add
xchg
ljmp
imul
call
loope
les
jne
xor
ds
cmp
scas
xchg
xor
jle
loopne
sbb
pop
nop
cld
inc
xchg
movsl
jne
call
or
push
fsubrs
std
outsl
out
push
popf
faddl
sbb
lods
aas
jnp
ds
out
fcoml
test
sub
jg
es
sub
pop
dec
xlat
shrb
pop
fwait
dec
fildl
xchg
and
sti
mov
sub
jns
sti
out
ret
lret
push
xchg
push
mov
xchg
push
popf
xor
cmc
mov
inc
add
xchg
inc
lret
mov
cmp
gs
or
fwait
mov
fwait
adc
pop
insb
pop
xor
xor
loop
les
push
sahf
mov
enter
push
push
xchg
or
fwait
jl
stos
xchg
xor
add
mov
adc
movsb
pop
push
call
orb
cmc
xor
add
addb
inc
pop
dec
or
orb
and
mov
outsb
mov
pop
in
les
std
pop
scas
movsl
stos
lock
pop
dec
pop
imul
lock
xor
xor
loop
mov
jecxz
mov
mov
push
pop
test
inc
mov
clc
sub
pop
mov
jo
shl
cmpsl
sub
push
loop
push
imul
or
add
lock
js
xchg
pop
stc
addr16
jmp
fcompl
rcll
mov
jle
mov
je
mov
imul
xor
pop
arpl
xchg
aaa
jne
test
push
or
lcall
loopne
and
pop
repz
mov
dec
ret
popa
clc
hlt
sbb
in
jne
jg
decb
in
push
int
sub
testb
dec
push
jnp
push
dec
push
orl
stc
cmpsb
lret
lods
sub
in
hlt
mov
test
mov
push
outsb
outsl
outsb
mov
sub
repz
xlat
mov
jg
pop
push
das
sub
shlb
mov
and
mov
loopne
xor
sbb
ffreep
dec
jmp
out
lock
test
pop
xchg
sub
iret
mov
push
mov
addr16
lahf
imull
inc
fwait
jb
inc
sbb
pop
ret
adc
aaa
cmpsl
jne
xchg
out
fstl
test
scas
xor
popa
int
nop
mov
fwait
sbb
push
cmpsl
cmp
stos
push
movsl
in
or
push
mov
fwait
xchg
sub
scas
ficoml
loope
inc
fcoml
jg
insb
mov
fidivl
dec
xor
dec
loopne
adc
cli
xchg
pop
neg
jae
mov
cli
int
imul
scas
xor
mov
add
lcall
inc
mov
add
push
xchg
jg
ljmp
dec
repz
pop
repz
dec
mov
jns
push
jbe
pop
mov
ds
insb
add
mov
idivl
or
mov
mov
add
lods
push
pop
adc
mov
mov
or
mov
lea
mov
mov
movsb
adc
lea
shl
lods
std
inc
pop
ljmp
adc
and
pop
xor
inc
in
in
mov
call
cmpsl
jl
jg
inc
popf
sbb
jo
pop
lock
jo
loope
and
iret
adc
les
lahf
ret
mov
add
imul
sti
movsb
push
int3
and
mov
sahf
pop
fimuls
and
xlat
bound
pop
ja
nop
out
xchg
pop
lret
sub
add
lea
mov
clc
sub
sub
test
dec
cmp
push
push
and
clc
dec
or
mov
dec
fwait
shr
imulb
mov
sarb
push
xchg
lods
pop
stc
xchg
jno
mov
pusha
in
jae
aad
fisubrs
ror
les
pop
fs
sbb
mov
adc
popf
mov
adc
inc
std
inc
daa
mov
cmc
dec
inc
push
inc
xor
movsb
cs
pop
sub
add
roll
jbe
lret
lret
lods
or
mov
mov
push
in
pop
adc
std
rcrb
jno
sbbb
pop
lret
sti
xor
sub
and
lahf
test
push
push
jae
fisttpl
popa
mov
enter
push
jge
or
icebp
insb
add
scas
hlt
mov
sahf
pushl
cmp
mov
dec
mulb
jg
fidivs
push
das
adc
sub
stos
iret
and
addr16
push
in
inc
mov
cmp
std
inc
sbb
cmc
mov
fstl
xchg
mov
adc
repnz
lahf
lock
jne
int3
arpl
dec
mov
sbb
lahf
jo
cmp
out
mov
xchg
das
pop
andb
xlat
xor
or
enter
inc
fnsave
jno
mov
lret
mov
xor
in
add
jo
in
xchg
cltd
out
inc
or
xchg
cs
sbb
mov
mov
int
leave
adc
cmp
dec
dec
test
mov
xchg
mov
scas
aad
test
or
shlb
push
gs
ret
filds
push
mov
mov
cmp
mov
mov
test
sub
mov
movsl
jge
aad
js
jno
pop
insl
imul
test
and
mov
movsb
xchg
scas
int
js
repz
outsl
dec
mov
jmp
xlat
mov
ss
shl
dec
lods
test
xchg
mov
into
std
xchg
add
mov
mov
xchg
repnz
mov
int
cltd
jp
lea
adc
insl
adc
adc
out
mov
lret
xchg
pop
mov
sbb
jge
jl
adc
fldl
xor
cmpsl
xor
adc
loop
call
or
movsl
cmp
fwait
gs
mov
cmp
call
xlat
fisubrs
psubw
mov
mov
cmp
call
cld
pop
nop
movsb
loope
stos
adc
or
pop
cmp
jb
or
pop
testb
jle
sub
mov
scas
mov
leave
ss
test
mov
adc
test
mov
hlt
push
mov
mov
push
mov
and
les
hlt
push
in
and
imul
gs
pop
das
mov
mov
int3
and
insb
push
xchg
ss
loopne
mov
imulb
mov
push
loopne
pushf
dec
data16
adc
sub
sub
jecxz
cwtl
cltd
sahf
adc
fdivs
ds
andl
dec
inc
call
adc
outsl
lret
add
xchg
popf
inc
cld
lea
fcoml
adc
jle
stc
mov
pop
loopne
insl
enter
scas
or
inc
js
inc
push
sarb
pop
cltd
shlb
iret
jecxz
test
int3
xchg
sbb
shlb
dec
loopne
cld
call
xor
ret
fnstcw
jbe
pop
mov
xchg
add
jle
and
fildl
inc
stc
jne
inc
cmp
lret
in
jb
sub
in
test
sbbb
int3
jle
mov
outsb
jl
push
mov
sbb
test
mov
test
inc
jae
stos
jp
sbb
jo
stc
mov
dec
subb
xchg
sub
pop
mov
mov
and
mov
cmp
icebp
cld
xchg
and
inc
sbb
mov
and
adc
test
flds
jae
cmp
and
daa
rolb
xor
pushf
inc
cmp
pop
xor
fimuls
and
ret
incb
mov
repz
mov
sub
aas
divl
es
sbb
pop
inc
adc
into
jb
fwait
inc
ret
pop
call
cmp
aaa
pop
out
push
ja
cmpsb
cmp
ja
ja
loop
dec
loope
sub
push
test
and
xchg
inc
sbb
pop
sarb
and
cwtl
lret
insb
mov
mov
mov
int3
jle
mov
dec
push
xor
ret
or
xchg
mov
arpl
xchg
cmovg
icebp
pop
xchg
bound
enter
push
mov
and
fadds
cmpsb
les
stc
fnsave
leave
xchg
inc
sub
repnz
imul
lret
into
pop
in
sti
das
dec
fwait
xlat
iret
inc
or
arpl
jle
xor
sbb
pop
inc
adc
or
pop
lock
lods
je
inc
fs
shll
jae
rcrl
lret
jne
jecxz
sbbl
lock
mov
push
es
lock
mov
jb
push
movb
dec
in
iret
mov
ja
movsb
xchg
fcoms
test
aas
jbe
arpl
pop
int3
cmp
outsb
push
lds
sbb
lds
or
xor
push
push
and
inc
gs
lcall
xchg
rcr
sbb
jae
fcmovu
xchg
rclb
shl
les
inc
imul
call
mov
int3
ret
loop
jne
xlat
das
imul
xorb
es
sub
scas
jns
dec
jo
push
stos
mov
jbe
mov
ficoml
inc
imull
xchg
imul
xor
mov
mov
movl
in
inc
mov
loopne
out
aad
mov
hlt
dec
xchg
cmp
test
cmp
rcrl
pop
pop
push
scas
xlat
lds
imul
mov
add
xor
and
push
lods
orl
mov
xor
sub
dec
pusha
popf
call
cmc
fwait
xor
sarb
popa
add
cwtl
call
xchg
push
aaa
stos
mov
adc
rcll
cmp
mov
in
in
mov
fidivl
or
jg
cmpsl
or
add
into
fsubl
mov
jle
jo
mov
daa
jns
xchg
inc
pop
lock
inc
test
lcall
jno
mov
mov
negl
xchg
aam
pusha
int
or
sbb
mov
rorb
outsb
sbbb
sbb
pop
fcomip
repnz
imull
addr16
sbb
test
rcrb
xor
addr16
fldl
pop
bound
fnstenv
push
ud0
inc
movsb
xor
jae
loop
jg
outsb
add
jmp
jnp
sbb
sub
fdivr
inc
scas
hlt
lret
rorl
xchg
jl
mov
fidivrl
rorl
stos
and
out
push
int3
out
pop
das
cli
pop
jno
lds
dec
fdivr
out
pop
dec
xlat
cmc
int
xlat
fdivrl
aad
fstp
xchg
cmp
lds
fdiv
add
stc
jns
mov
stos
negl
lock
clc
aaa
jg
cmp
mov
ret
and
sahf
sbb
sbb
dec
jecxz
int3
dec
iret
cmp
or
pop
push
xor
int
adc
or
mov
test
xor
add
das
imul
jp
and
dec
pusha
testb
mov
and
xlat
push
cltd
in
test
xchg
das
mov
das
inc
ret
and
xor
cmp
test
loopne
std
test
lret
test
aaa
iret
push
cmpsb
xor
and
mov
pop
je
jns
adc
aas
mov
sti
and
inc
jns
cmp
or
sub
push
adc
insb
rcll
je
jae
sbbl
subl
cmpsl
daa
mov
mov
negl
mov
jp
sub
jp
out
ljmp
or
roll
imull
rcl
push
pop
jbe
mov
lahf
xchg
fbstp
sub
call
mov
sti
leave
pop
insl
inc
out
mov
outsl
mov
inc
inc
pop
pop
std
cmp
stos
jno
sub
jne
push
and
mov
mov
lods
ja
clc
cmp
inc
mov
push
outsl
adc
leave
xor
xchg
cld
aaa
stos
pop
push
jmp
arpl
mov
fs
outsb
xor
mov
inc
adc
xlat
aad
mov
out
or
dec
mov
scas
ss
mov
repz
addr16
pop
mov
dec
push
jbe
ja
test
mov
jbe
add
adcl
pop
jbe
sub
mov
xor
push
sbb
cmp
data16
xchg
enter
mov
insl
or
adc
jge
hlt
xchg
rorb
jle
xor
push
mov
bound
mov
arpl
dec
ljmp
inc
dec
sbb
pop
mov
clc
repnz
stos
or
sub
mov
andb
lea
lock
cmp
sub
pop
notb
icebp
mov
mov
test
rcll
mov
push
js
inc
mov
dec
lret
or
shlb
movl
mov
jecxz
mov
testb
aad
stc
cmp
dec
sar
pop
repz
lret
jp
mov
int3
stos
xchg
jns
adc
fstpl
mov
into
jo
and
pop
stos
scas
xchg
imul
iret
jecxz
lret
mov
shrl
push
xor
ja
lods
shrl
call
add
div
lret
cld
add
bound
push
xchg
lret
ds
cmp
xor
shll
cmp
add
mov
or
xor
xchg
mov
cmpl
adc
xchg
and
data16
push
fs
int3
cmpsl
dec
sahf
pop
inc
enter
sub
std
jp
mov
aaa
lret
adc
stos
inc
mov
xchg
sbb
repnz
mov
mov
adc
dec
mov
cltd
std
add
dec
into
xchg
sub
adc
xor
stc
nop
cld
mov
pop
fcomps
sub
push
fcmove
arpl
add
dec
cli
cmp
dec
test
cmp
fs
in
and
mov
in
cmp
xlat
push
arpl
push
inc
fisttpl
daa
bound
jo
out
jae
jecxz
or
mov
test
mov
orb
movsl
inc
cmc
das
test
pop
sbb
mov
andl
call
adc
pushf
jb
les
nop
icebp
mov
inc
jo
mov
cmpb
daa
cmc
iret
fnstsw
xchg
lcall
jnp
shll
enter
in
lods
dec
bound
cmp
aaa
pop
pop
out
mov
stos
xor
pop
jbe
subl
sahf
fsub
pop
out
js
outsb
mov
shl
dec
mov
call
pop
jp
aad
and
fstp
movsb
sbb
scas
sti
mov
sub
popf
dec
lods
int
push
test
mov
lret
jae
mov
mov
jne
pop
xchg
xchg
cmc
ds
ficomps
test
jns
out
sti
inc
pusha
sub
xlat
outsb
xor
mov
dec
pushf
scas
jl
mulb
mov
loope
loopne
mov
push
call
mov
mov
pop
push
fsubr
inc
jnp
mov
pusha
inc
xor
test
jg
lods
lahf
pop
fcompp
xchg
sarl
shrl
repnz
and
or
lret
rolb
in
test
pop
sbb
fsts
mov
lea
sub
andw
jno
int3
jecxz
mov
xchg
test
push
arpl
add
lods
add
push
jg
pop
sti
jns
and
lcall
enter
pop
outsb
adc
and
push
scas
jle
adc
mov
in
jge
push
les
jge
bound
mov
push
sbb
add
pop
mov
push
xchg
mov
mov
mov
ljmp
je
jmp
imul
bound
adc
mov
movsb
sti
xor
xchg
mov
js
xchg
and
or
mov
in
enter
hlt
in
insb
mov
inc
idivl
inc
inc
xchg
stc
ds
xor
xchg
or
gs
adc
ss
cs
xor
xor
lahf
push
lds
mov
pop
outsb
jo
xchg
aas
inc
test
stc
mov
pop
jb
mov
mov
fdivl
shlb
ret
and
sub
fildll
or
enter
adc
jno
out
adc
lret
fcmovbe
out
mov
stc
hlt
scas
xor
xor
pop
push
or
mov
fidivl
sub
outsl
xchg
pop
push
test
nop
sub
insl
add
mov
xlat
fidivrl
push
ds
mov
xchg
lods
shrl
sahf
ficomps
lcall
sub
jecxz
adc
in
jg
lcall
movl
outsb
inc
adc
pushf
scas
repz
dec
loop
jo
push
add
jns
jb
push
mov
fs
pushf
icebp
and
mov
or
jl
mov
cmp
jno
les
xchg
mov
pop
sbb
xchg
rcrb
xor
cmc
adc
outsl
pushf
fidivrl
inc
dec
cli
push
pusha
clc
inc
sbb
mov
mov
push
dec
cmp
fsubrs
popf
push
pop
nop
push
repz
and
jmp
imul
test
cmpsl
mov
aas
in
decl
aad
fwait
icebp
ja
aam
add
mov
mov
inc
hlt
leave
pop
mov
lahf
neg
hlt
mov
rcr
scas
add
test
fcoml
dec
mov
je
loop
mov
push
push
xchg
push
fprem1
sti
popf
cmp
rorb
sbb
call
or
mov
rorl
imul
jl
add
xchg
insl
xor
mov
jnp
xchg
inc
std
or
loop
or
std
loop
xor
add
mov
repnz
xor
adc
mov
cmp
repz
jp
hlt
xorl
int3
cld
pop
scas
test
ret
movsb
sub
lock
aas
addl
and
in
dec
and
xchg
and
push
clc
mov
aad
iret
aaa
out
mov
dec
loopne
add
dec
mov
lret
test
insl
mov
fwait
test
cmpsb
push
std
sbb
sbb
sar
ss
repz
and
xor
push
into
mov
mov
shl
adc
push
xor
pop
mov
add
mov
int
and
aaa
mov
movsl
jp
adc
adc
mov
mov
ficoml
xor
into
xor
leave
xchg
rclb
aad
lods
push
fsub
mov
test
xchg
adc
js
out
sbb
jno
and
lock
fiadds
std
leave
je
and
adc
mov
enter
andl
hlt
daa
test
mov
xlat
fsubrl
push
in
mov
pop
in
stos
add
lock
push
mov
push
outsl
adc
stos
decl
xchg
push
shrb
add
fwait
scas
in
scas
sub
and
outsb
add
fcompl
outsb
hlt
dec
in
out
xchg
xor
loop
xor
jmp
cld
iret
call
fs
testl
sbb
addr16
mov
subb
inc
sti
and
cmpsl
dec
inc
repz
xchg
cmpsb
sub
push
sub
popl
pop
repz
stos
and
pop
mov
or
aam
fs
adc
ret
ds
sbb
lret
enter
vpackuswb
mov
lods
enter
dec
fucomi
xchg
sbb
mov
popa
loop
xchg
cmp
imul
xor
xchg
in
aad
inc
mov
int
sub
dec
mov
rorb
mov
push
outsl
push
mov
dec
pushf
popa
adc
lcall
fistpl
jbe
jns
mov
push
jl
loopne
ds
or
cmpb
xor
fimull
mov
jle
daa
mov
fsubrs
inc
push
pusha
stc
push
outsb
ret
popa
es
xlat
dec
fwait
xor
gs
into
fstpt
mov
int
jo
mov
pusha
loop
xchg
xor
mov
aad
pop
fidivrl
pop
ret
pop
test
push
cmpsb
lea
imul
loope
push
call
and
test
aas
or
dec
dec
fists
cmp
fwait
packsswb
jp
cs
sub
stos
inc
pop
or
call
xchg
add
adc
pop
lcall
xor
clc
rol
lods
adc
fmul
les
imul
pop
scas
xchg
add
mov
lds
dec
fimull
flds
call
cld
fsubs
lds
adc
push
or
push
mov
xchg
xor
test
inc
mov
mov
push
insb
push
add
leave
pop
xor
cmp
mov
xchg
das
xchg
clc
nop
rcrl
test
push
stos
sahf
scas
sbbb
aaa
inc
push
aas
pop
test
aas
jae
jle
aad
adc
popf
jge
test
sarl
inc
xchg
repnz
or
jno
inc
leave
loop
repz
inc
xlat
dec
ss
push
icebp
mov
xor
ljmp
or
aaa
filds
cmpsl
push
inc
mov
mov
inc
mulb
or
xchg
out
pop
xlat
inc
leave
jbe
loop
push
aas
mov
jg
sbb
fdivs
popa
lret
out
enter
jno
daa
jmp
lods
mov
sub
inc
fbstp
in
sub
adc
sahf
sub
sti
sub
and
insb
adc
push
jns
and
mov
add
xchg
movsb
repnz
adcb
sbb
stos
push
mov
mov
jge
xchg
pusha
push
cmp
xchg
dec
cltd
dec
mov
push
and
pop
orl
mov
insb
nop
jnp
roll
mov
cmp
insb
out
pop
dec
adc
xchg
ljmp
out
repz
or
es
testb
mov
dec
pop
cmp
insb
jmp
enter
jmp
pop
sbb
mov
dec
in
sub
pop
cmp
dec
scas
daa
popf
jno
rcr
clc
adc
xchg
xor
loop
mov
and
xchg
adc
push
jge
addr16
mov
jnp
push
aam
mov
xchg
mov
test
pop
xlat
aam
lret
out
or
fwait
test
aam
jle
add
in
test
adc
je
cmp
int3
jl
fists
adc
or
int
mov
inc
and
test
insl
mov
outsb
inc
mov
popf
dec
in
add
imul
jbe
mov
mov
pop
sbbb
mov
call
cltd
cmpsb
stos
movsl
inc
push
push
and
mov
stos
dec
cs
fisttpll
sub
mov
fwait
cli
inc
rol
cmpb
enter
push
ljmp
jge
mov
dec
and
stc
add
dec
fsubrs
xchg
xchg
add
ja
out
jl
addb
mov
cmp
adcb
sub
xor
jo
jmp
sbb
add
sub
mov
out
andl
lcall
push
fmul
cvtps2pd
xor
push
sub
rcrl
jmp
sti
xchg
inc
gs
sbb
inc
lds
inc
adc
sbbl
cmp
push
jmp
pop
push
scas
mov
pop
push
mov
push
lds
decl
inc
or
cli
out
sbb
lret
andb
jns
jne
push
test
lods
add
lea
push
nop
xchg
jge
sti
push
xor
add
sub
sbbl
jbe
fidivl
add
push
xchg
fsubs
mov
mov
sahf
add
clc
mov
je
and
popa
stc
sahf
or
xchg
mov
jmp
call
in
xchg
and
pop
into
das
cmp
inc
push
outsl
sub
adc
fucomi
sub
cwtl
mov
add
inc
xor
arpl
sbb
jbe
icebp
jge
inc
cmc
setle
int
stos
add
shll
imull
lods
stos
out
bound
je
lret
or
adc
aam
movsb
cmp
je
fdiv
icebp
mov
int
jne
sbb
jbe
mov
xchg
lahf
lea
xchg
out
jg
dec
ret
pop
loop
push
jecxz
cmp
in
adc
ret
sarb
leave
ss
sub
push
pop
inc
xchg
pop
cli
enter
loop
sub
mul
lods
push
jge
sub
dec
jmp
test
bound
mov
and
inc
negb
mov
add
dec
pop
repz
cld
inc
rcll
jne
into
push
push
sub
adcl
hlt
fstps
or
cmpsl
pop
and
loop
sub
scas
jno
dec
lods
lret
shrl
xor
pusha
adc
out
jecxz
test
mov
test
inc
pushf
jo
cli
cmp
fldenv
mov
mov
push
jp
push
fadds
sbb
mov
int
xchg
mov
loop
int
int3
add
idivl
hlt
data16
mov
aas
loope
stc
xchg
or
aad
push
mov
mov
mov
sub
mov
stos
mov
pop
push
jle
push
or
pop
mov
adc
js
es
pop
loope
inc
pushf
push
ret
mov
add
inc
loopne
dec
mov
sbb
arpl
push
sbb
xchg
fs
imul
jg
and
insb
mov
test
xchg
lea
mov
inc
call
test
repz
cmp
mov
jg
and
or
sbb
out
xchg
push
lods
cmc
js
pop
mov
and
pop
repz
leave
push
sub
negl
xor
or
mov
cmpsb
test
xorb
sbb
add
cmpsb
cmp
dec
add
add
fcoms
loope
enter
mov
cmp
dec
and
push
or
pop
jecxz
cmp
add
add
jmp
sbb
add
pop
ret
pop
push
fiaddl
xchg
insl
cld
stos
test
dec
or
xlat
stc
xor
iret
or
rcll
mov
and
fisubl
lods
fs
arpl
push
mov
push
in
in
mov
lods
pusha
icebp
cmp
call
push
cmp
jge
je
fwait
pop
fs
add
hlt
out
imul
xor
outsl
push
inc
xor
sbb
popa
adc
enter
mov
leave
icebp
push
mov
call
or
cmp
jns
popf
pop
iret
ret
js
in
imul
pop
gs
dec
mov
mov
loopne
xor
loop
inc
dec
int3
add
and
imul
test
inc
arpl
inc
stos
cmc
outsl
lods
dec
popa
push
fnstenv
cmp
pop
aam
fwait
icebp
pop
insl
daa
push
loope
loop
sub
in
sbb
fcmovb
add
mov
popf
test
pop
aaa
into
arpl
push
cwtl
xchg
test
mov
lahf
adc
inc
sbb
pop
jg
test
sbb
pusha
and
mov
adc
mov
pop
jns
dec
out
mov
cs
dec
loop
xchg
sarl
cltd
mov
insb
call
cs
je
loop
mov
jno
pushf
in
xchg
or
xor
flds
dec
pop
dec
jecxz
rclb
rorl
bound
fwait
imul
mov
ret
mov
sbb
dec
inc
jle
je
std
jg
sbb
mulb
jae
xor
ret
add
in
mov
popf
mov
rol
in
pop
in
outsb
push
mov
cmp
push
inc
test
movsl
out
mov
les
pusha
aaa
adc
dec
mov
pop
mov
dec
mov
in
aad
sbb
mov
mov
in
pop
imul
jno
addr16
and
xor
clc
or
jle
sub
adc
sbb
sbb
sbb
outsl
pop
psubsw
or
popf
pop
pop
add
mov
push
fld
cwtl
shr
test
rorl
retw
cs
and
xchg
push
aad
jb
jno
adc
clc
adc
es
jmp
mov
push
les
xchg
sub
cmp
xlat
mov
jno
out
jbe
xor
adc
push
xchg
adc
xchg
xchg
or
push
push
lret
movsl
sbb
jp
popa
enter
mov
jle
negb
mov
cld
mov
and
xor
lahf
gs
subb
mov
cmp
lods
insl
out
adc
push
mov
adc
jns
push
lret
dec
in
sti
jb
sbb
pop
stos
xor
push
mov
xchg
cmp
loopne
mov
cmp
mov
jecxz
ret
xor
xor
xchg
dec
test
cs
lret
lods
inc
popf
test
pop
pop
ja
mov
or
or
jbe
cmp
push
push
popf
addb
xor
push
shrl
test
cmc
mov
clc
xlat
repz
ss
lret
sbb
sub
mov
stos
jl
test
jecxz
pop
cmp
cwtl
mov
lods
mov
adc
std
dec
fsts
test
jns
or
mov
movsb
in
out
adc
fiadds
pop
inc
jbe
imulb
fdivrl
mov
xor
addr16
sub
jo
lods
jmp
sbb
inc
ss
mov
gs
inc
stos
xchg
inc
testl
test
test
cmp
jbe
add
mov
xchg
sub
in
pop
scas
sbb
mov
leave
nop
adc
insl
cmc
dec
xor
inc
sbb
mov
lcall
pop
lods
stc
mov
cmp
pop
or
aam
cmp
repz
sbb
imul
cwtl
mov
les
loop
ret
mov
sbb
lods
inc
mov
mov
incl
mov
fisttps
stos
push
stos
push
addl
fisubrs
push
mov
imul
push
mov
xchg
outsb
int3
push
sub
cmp
jne
add
dec
testl
sbb
imul
lds
or
pop
out
sbb
mov
jl
pop
xchg
cld
dec
sub
aad
sti
xor
mov
dec
mov
cmp
cmc
popfw
stc
or
add
sub
sbb
sbb
mov
inc
testb
loop
mov
or
push
xchg
and
cld
dec
ret
fistpll
repnz
cmpsb
adc
fldt
jno
iret
cmp
aad
repnz
loop
sbb
jns
xor
fidivl
scas
es
out
aaa
into
fcmovnb
jmp
repz
push
fidivl
xchg
cmpsb
aam
cmp
insl
outsb
pop
bnd
xor
pop
adc
leave
xchg
xor
mov
mov
mov
xchg
sub
inc
outsl
push
in
lcall
cltd
add
sub
mov
movsl
push
dec
clc
add
decl
and
test
cwtl
pop
or
dec
xchg
xor
dec
push
pop
jno
mov
cmc
shlb
or
das
xchg
iret
xchg
movsb
jl
frstor
pop
cmp
xchg
js
std
adc
mov
fisttpl
cli
xor
call
cmp
cmc
je
pop
call
js
mov
and
and
imul
mov
jo
out
jbe
sbb
arpl
mov
add
sbbl
fisubl
ret
aaa
push
cmc
lahf
mov
push
mov
loop
pop
dec
cld
gs
sub
iret
xor
push
sbb
in
test
inc
sub
pop
mov
inc
xlat
cmc
push
pusha
sub
leave
jbe
push
js
shrl
hlt
ja
sahf
xor
xchg
sbb
int3
jmp
movsb
test
jae
xor
fidivrs
lret
mov
cld
cmp
pop
jae
dec
cltd
icebp
clc
xlat
sub
cmp
dec
in
sub
add
jae
push
hlt
rcll
xor
mov
inc
scas
mov
adc
movl
test
pop
fwait
jnp
cmpsb
test
ret
and
dec
ret
add
cltd
sbb
loope
inc
in
notl
daa
mov
popa
clc
mov
lcall
xor
pop
xchg
xchg
and
fistpl
rclb
inc
rclb
sub
je
dec
cmpsb
out
push
pop
xor
cltd
ljmp
sbb
cwtl
call
jb
push
mov
cltd
inc
dec
out
sbb
pop
dec
data16
push
xchg
add
xchg
imul
das
mov
shrd
fcomp
shll
inc
pop
insl
jae
cli
push
jmp
mov
lcall
in
inc
fsts
xchg
mov
shrb
mov
jae
fs
pop
xor
test
push
pop
or
dec
add
xor
xor
push
cmpsl
mov
outsb
xchg
xchg
lock
cmp
pop
jb
insl
mov
stos
lahf
push
aas
fiaddl
mov
je
pusha
insl
mov
jg
lods
fucomp
mov
or
push
dec
pop
pop
daa
add
xor
test
xlat
or
and
adc
jo
cmp
scas
inc
cmp
or
or
pop
and
push
fdecstp
sub
xchg
xor
shlb
imul
mov
imul
adc
mov
movsl
out
incl
je
or
into
cmp
or
fidivrl
scas
jmp
lret
jne
push
cmpsl
in
popa
ret
inc
daa
mov
lock
xchg
movsb
cltd
repnz
incl
cmp
scas
repz
ret
add
inc
gs
cmpb
dec
aad
mov
mov
in
dec
in
xchg
or
gs
daa
cwtl
jbe
dec
cmp
jae
sbb
cmp
push
lahf
daa
je
and
cmp
sahf
jmp
dec
fs
mov
shll
xor
inc
js
pusha
roll
lds
adc
push
dec
xor
dec
and
scas
push
outsb
mov
ss
std
ss
cmp
sub
int
add
sub
or
movsl
stc
dec
jl
lahf
lods
jnp
js
inc
es
dec
add
ja
js
adcl
mov
into
pop
stc
shrl
imul
mov
push
addr16
xchg
sub
cwtl
mov
dec
hlt
mov
add
cmp
or
data16
sbb
or
sahf
sub
and
sti
jl
adc
stc
sbb
xchg
movsl
inc
lret
insb
lahf
imul
dec
and
sarl
jp
es
insl
outsb
icebp
icebp
fisubrs
mov
mov
sbb
int
ss
sahf
lcall
or
mov
popf
xchg
xor
inc
sbb
inc
jp
repnz
int
adc
mov
fucomi
xor
push
xor
adc
and
or
notb
or
cmpsl
out
add
lret
and
cmc
and
sti
mov
pop
mov
leave
and
lret
stos
xor
and
aas
push
mov
loopne
dec
and
sti
dec
jecxz
andb
fwait
outsb
sub
xchg
sub
xor
mov
lods
mov
rcll
rcl
aaa
outsb
xor
push
lods
adc
insb
push
fcomi
mov
in
gs
rcl
das
cmp
xlat
dec
and
xor
push
mov
pushf
xchg
jns
loop
xchg
sub
pop
imul
int
rcrb
pop
cmp
mov
add
aas
mov
pop
mov
sbb
shll
cli
pop
cmc
xchg
sub
xchg
add
sbb
arpl
enter
push
je
out
mov
sbb
mov
or
shll
scas
fcoml
insb
add
out
nopl
adc
pop
inc
mov
dec
in
ljmp
mov
dec
pusha
add
cmp
jge
mov
xor
mov
dec
add
mov
push
mov
jb
stos
scas
std
xchg
xchg
pop
fucomip
cmp
jle
sbb
sub
jb
mov
loop
xchg
and
mov
and
stos
xchg
mov
mov
outsl
mov
loop
fwait
dec
data16
push
in
cmpsb
mov
int3
arpl
sub
cmp
repz
cmp
or
xchg
dec
in
inc
popf
push
addr16
fistps
cmp
inc
shlb
xor
sub
inc
mov
jb
sub
mov
in
pusha
jg
sub
mov
jbe
iret
inc
arpl
jp
and
add
or
jmp
fidivrl
xlat
jecxz
das
adc
data16
add
sti
stc
je
mov
dec
andl
movsb
jo
imulb
shl
mov
push
mov
inc
out
jle
mov
in
pushf
jge
rclb
mov
push
arpl
sbbb
pusha
or
ret
into
faddl
adc
push
out
fwait
cmpsl
cwtl
je
movsl
into
jp
push
in
xor
ljmp
pop
stos
and
popa
int3
loope
mov
jmp
popf
popf
sbb
repz
sub
mov
nop
xchg
mov
dec
cs
mov
mov
orb
and
ja
lret
pop
mov
aad
mov
rorl
sbb
sbb
loope
cli
leave
js
xchg
mov
push
push
out
loop
inc
adc
outsb
and
sub
fucomip
test
cmp
add
lods
int3
pop
pop
int
imul
add
cmp
pop
pop
loopne
cmc
inc
popf
inc
in
or
in
sbb
lret
lds
in
pop
test
jnp
repz
push
or
sbb
xlat
inc
add
clc
and
push
addr16
cmp
or
xchg
ljmp
call
jmp
dec
sub
adc
mov
mov
pop
aaa
jno
inc
mov
adcl
lahf
loopne
pop
cmp
aad
sbb
mov
xor
sarb
insb
fs
cmp
add
cmpsb
dec
das
inc
push
add
sub
jbe
and
fisubrs
xor
push
fists
jno
xor
xor
cli
test
les
pop
mov
adc
add
inc
and
xchg
shl
xchg
and
adc
lods
call
lret
sub
jbe
dec
out
inc
ja
fs
and
fldt
ret
out
cmpsb
jg
dec
add
mov
rclb
and
test
arpl
popa
insl
aaa
mov
clc
mov
jne
repz
pop
cmpsl
fsubl
nop
inc
arpl
and
das
pop
xor
mov
push
cmp
nop
stos
imul
adc
xchg
mov
xor
scas
into
cmp
dec
subl
adc
sahf
and
push
dec
pop
inc
and
add
popf
mov
cli
dec
cmp
mov
and
pushl
jl
jno
int
adcl
pop
out
xlat
mov
or
pop
repz
jl
lods
adc
add
inc
movsl
call
xchg
mov
insb
sub
sbb
sbb
sub
arpl
daa
cmp
pop
mov
leave
jle
test
popl
enter
adc
aad
fnstenv
lds
mov
push
jge
sbbl
out
inc
lea
dec
push
lcall
jmp
outsb
cmp
insb
rclb
mov
pop
fldt
xchg
mov
dec
mov
call
scas
mov
out
xchg
aas
xchg
daa
sub
decb
jg
clc
arpl
xlat
cmpsl
jge
pop
mov
mov
rcll
loopne
or
sbb
je
cmp
fwait
jae
hlt
cmp
movsb
ret
jg
jno
es
clc
rcrl
mov
andl
xlat
es
clc
push
fbstp
push
or
jno
pop
sti
nop
and
inc
pop
or
dec
cmp
out
xchg
xchg
sub
lods
nop
pop
fcompl
mov
dec
std
cmpsb
inc
das
fidivrs
rorl
test
push
outsb
lock
or
lock
adc
sarl
fstps
mov
ja
popf
dec
sub
mov
sub
jnp
xchg
mov
mov
xor
jno
lahf
jb
mov
mov
pop
jne
lret
inc
popa
ja
xchg
icebp
loope
mov
mov
add
jg
and
pop
dec
sbb
insb
jle
xchg
adc
inc
mov
rcll
fidivl
int
cmp
movsl
gs
or
add
push
jp
out
fs
fucomip
pop
dec
jmp
repz
pushf
xor
lcall
das
add
mov
in
mov
stos
inc
ljmp
xlat
inc
and
and
test
or
inc
mov
repz
dec
out
adc
inc
popf
shrl
mov
loop
cwtl
sti
je
out
cmp
lcall
sub
lahf
shlb
cmp
mov
cmp
or
mov
clc
jp
jg
pushf
sbbb
sti
std
addl
shl
inc
add
pop
xchg
shrl
cld
push
xchg
lods
or
dec
mov
mov
incb
data16
or
adc
cltd
outsl
outsl
sub
out
jns
outsb
jl
pop
scas
and
jo
dec
fucomp
mov
mov
pushl
addr16
hlt
push
enter
icebp
jle
das
jae
test
dec
push
cmpsl
popa
xor
cmpsl
cwtl
stos
orb
push
popf
sti
lahf
and
adc
int
mov
inc
fs
dec
out
sti
out
das
inc
adc
push
inc
arpl
imul
xchg
test
inc
jbe
std
fdiv
or
sahf
aaa
jp
pop
loop
mov
clc
js
adc
clc
hlt
jae
jns
or
aas
dec
add
out
mov
lds
fwait
dec
mov
inc
lahf
inc
fwait
inc
mov
pop
out
sbb
adc
push
in
sti
sub
xchg
pop
sbbl
test
dec
loope
xor
divl
cmpsl
jle
rcl
and
adcb
repz
sahf
cli
into
xor
inc
add
pop
or
mov
xchg
movsb
aaa
push
xchg
sbb
int3
fsubrl
jl
mov
jecxz
xchg
pushf
and
fwait
pop
jo
inc
shrl
mov
dec
ljmp
sbb
add
mov
add
or
je
popf
gs
into
sar
fnstcw
lods
mov
sub
ret
addb
mov
dec
push
push
and
push
shl
xchg
loop
mov
cmp
cmp
arpl
cmp
or
inc
xchg
std
sub
xlat
out
sub
clc
and
insl
ret
xor
cwtl
jns
push
adc
rorb
push
push
dec
rcll
cli
sub
test
jp
pop
jnp
and
mov
add
addb
jmp
and
in
js
sbb
out
xor
xchg
jge
or
dec
mov
not
stos
mov
inc
sub
dec
enter
roll
mov
subb
jmp
xlat
mov
cwtl
mov
or
xor
stc
movsb
iret
inc
xlat
mov
inc
stc
xor
lods
inc
out
xchg
sub
inc
xchg
sub
sbb
outsb
sub
scas
mov
push
add
jge
ficomps
into
clc
lods
inc
in
mov
pop
cli
push
push
pop
adc
cmc
pop
or
and
inc
fnstenv
loop
not
mov
and
or
das
mov
sub
mov
mov
cld
aas
mov
scas
je
bound
and
xchg
jmp
mov
inc
sahf
sbb
add
ljmp
rep
subl
scas
out
push
daa
sub
pop
hlt
mov
add
inc
das
sahf
xor
push
mov
xchg
mov
idivb
xor
pop
xor
xor
lea
pop
xlat
fistpll
aad
aaa
xchg
cli
adc
into
jg
ja
cmp
addl
jmp
idivb
andb
push
adc
xor
dec
mov
jg
mov
cli
inc
test
enter
rcrb
ret
dec
xchg
xlat
out
shlb
fldt
les
or
clc
mov
fildl
or
mov
or
sub
cltd
add
mov
fiadds
cmp
sub
ret
subb
out
loopne
pop
sti
into
push
adc
jmp
jecxz
test
cmp
sub
xchg
jl
fldl2t
loopne
cmc
and
or
mov
mov
inc
inc
ret
mulb
sbb
pushl
inc
popa
shl
je
or
sbb
movsb
popf
sti
je
imul
pop
cmp
mov
in
fcoms
inc
pusha
push
loopne
inc
or
mov
int
mov
mov
fnstenv
out
mov
lods
jns
shll
das
outsb
nop
daa
sahf
inc
cmp
out
or
outsb
mov
arpl
jg
aad
adc
sbb
fcmovnbe
cli
cmp
mov
mov
and
ret
scas
sub
enter
imulb
aam
mov
cmpsb
mov
fadds
and
inc
sbb
push
in
fs
and
test
mov
popf
int
inc
xchg
ror
lcall
cld
mov
adc
faddp
ror
cmp
pop
cmc
popf
xchg
call
xchg
lds
mov
or
gs
sbb
mov
or
mov
fisubrs
jno
inc
or
cmp
lods
test
pop
add
incl
pop
scas
orl
lret
dec
lcall
add
jb
dec
mov
push
jae
imul
xchg
popf
dec
push
xor
in
ja
cmp
pop
ret
mov
sbb
cmp
cltd
imul
push
js
pop
imul
cmp
nop
mov
mov
mov
scas
lds
ss
xchg
fwait
jnp
pop
sub
outsb
fnstcw
lcall
adc
frstor
or
cmp
or
jb
adc
lcall
push
and
and
cs
dec
imul
hlt
roll
push
jno
sbb
jbe
shrb
js
mov
fimull
sub
push
aad
int3
sub
data16
insl
push
inc
addr16
dec
fdivrs
loopne
testl
stos
in
test
fiadds
std
pop
data16
cmp
add
es
cmc
push
mov
push
add
fwait
mov
out
in
xchg
pop
adc
shlb
sub
sub
repz
sub
inc
fdivrl
addl
testl
mov
idivl
out
data16
loopne
or
sub
xor
out
and
imul
inc
jl,pt
ss
popf
dec
push
and
fstl
xor
or
fnstcw
stos
and
mov
lret
out
outsb
xor
cmpl
inc
sub
sti
push
sub
flds
das
xor
inc
jnp
mov
inc
push
adc
adc
lock
cmp
adc
movsl
push
add
push
add
fs
cmp
adc
out
cmp
mov
pop
addr16
rorl
push
xor
sbb
sbb
ds
push
jg
es
sbb
xchg
xchg
cli
popf
and
add
and
mov
adcl
mov
int3
jo
enter
sbb
in
pop
inc
xlat
xlat
outsb
or
sbb
xchg
iret
in
jle
sub
cmp
ss
out
lea
push
aas
dec
fsts
mov
xchg
or
shl
jnp
and
lahf
or
add
std
pop
and
push
pop
dec
std
lea
push
repz
adc
imul
ret
hlt
cmpsb
or
loop
cmp
sub
inc
push
push
test
cltd
push
out
mov
inc
gs
sub
arpl
add
arpl
jb
fs
ljmp
icebp
jge
fildll
xchg
sbb
jge
mov
outsb
mov
mov
in
and
ret
loopne
jecxz
in
sub
jge
jg
pop
sub
scas
inc
sti
xchg
push
pushf
ss
int
ret
sbb
or
out
cmp
dec
dec
jecxz
jge
jns
dec
inc
test
or
cmp
fucomi
ds
test
cmp
insl
lods
mov
hlt
jge
xchg
mulb
mov
movsb
jae
out
xchg
loopne
add
cmp
jbe
out
aad
jl
leave
adc
jae
mov
add
and
in
fcmovbe
adcb
filds
inc
add
sbb
adc
fcomps
data16
sub
test
sub
mov
push
mov
or
adcb
and
pushf
test
and
leave
and
jo
inc
fisubl
dec
fadd
mov
in
xor
sbb
jo
scas
and
mov
scas
dec
sbb
int
mov
bound
dec
pop
repz
jns
xor
ret
pop
repnz
push
cmp
clc
inc
pop
dec
movsb
lds
inc
loopne
sbb
cmp
mov
dec
call
mov
or
adc
movsb
inc
push
mov
push
or
mov
xor
pop
imul
mov
add
in
dec
lret
out
pop
pop
push
jmp
sti
insl
rcr
jne
loop
movsl
rcrb
mov
repz
sub
dec
addb
xchg
mov
xchg
mov
sub
xchg
adcl
lret
bound
aaa
jbe
push
push
adc
repz
mov
notb
mov
push
mov
iret
mov
ret
hlt
pop
mov
outsl
pop
sbb
loop
leave
adc
cli
adc
inc
mov
mov
int
jns
in
in
iret
cmc
xchg
cli
out
push
popf
sbb
or
mov
add
aam
insl
adcb
das
lahf
cld
inc
mov
jnp
ss
xchg
dec
pop
hlt
jecxz
xlat
aaa
into
or
das
jmp
insb
repnz
scas
mov
out
mov
or
push
cmp
push
call
inc
and
push
cltd
mov
test
mov
xor
xchg
mov
sbb
mov
mov
loope
mov
out
jl
and
loop
mov
cld
mov
cltd
xor
es
sti
ss
xlat
and
pop
pop
xchg
out
jle
inc
aaa
js
mov
sbb
adcb
dec
xchg
arpl
adc
int3
fidivl
arpl
xor
mov
push
sbbl
adc
bound
cmp
out
lock
xchg
push
nop
lret
ljmp
lock
pop
sub
xchg
fbstp
imul
nop
xor
cmc
stos
testb
jecxz
xor
dec
sbb
push
iret
xor
imul
daa
xchg
mov
sbb
cmp
loopne
cmp
daa
mov
das
addb
jnp
mov
fisttps
cmp
lods
das
and
jne
xchg
iret
xor
inc
fcoms
or
pusha
mov
pop
out
jmp
xlat
cmc
insb
mov
and
pop
xchg
cs
xor
pop
repz
inc
in
push
push
out
sub
imul
outsb
add
nop
fistl
iret
xor
push
adc
outsb
pop
mov
mov
addr16
and
lods
adc
test
mov
je
stc
push
mov
sub
decb
cmc
xchg
cwtl
xchg
push
sbb
dec
gs
mov
lret
or
lea
xchg
cmp
imull
cli
push
andb
pop
cltd
adc
ljmp
sbb
ss
cmp
es
out
mov
nop
push
aas
mov
add
gs
jo
mov
loopne
xor
sub
or
mov
fld
push
fwait
push
test
inc
mov
dec
fwait
adc
frndint
loop
ljmp
mov
jmp
pop
push
push
gs
xchg
lret
sbb
mov
push
or
das
fwait
jne
pop
lods
push
xor
sbb
push
insb
bound
push
mov
push
lahf
es
push
lods
mov
sbb
sub
es
nop
int3
enter
add
gs
fnsave
ret
or
pop
in
in
aaa
call
mov
ret
pop
dec
sar
stos
gs
push
xchg
lret
dec
pop
je
mov
sarl
xor
dec
xchg
sahf
xor
jb
mov
call
cmpsb
xor
jge
xor
mov
imul
addr16
cmp
mov
in
cmp
mov
repz
sbbb
pop
loop
and
popa
bound
icebp
clc
int
mov
mov
lret
push
in
push
mov
je
in
pop
sarl
shll
sarb
jg
jl
xchg
scas
push
adc
jae
loop
xchg
das
loopne
sahf
imul
jg
adc
insb
std
push
inc
add
fdivrs
fsts
mov
aad
mov
dec
push
neg
add
sahf
jmp
or
xor
out
fisubrs
sbb
in
sbb
nop
push
popf
lahf
ss
pop
mov
gs
sub
stc
testb
pop
in
idivl
mov
fld
popa
icebp
sti
lret
imul
mov
adcb
outsl
push
xchg
push
imul
inc
sub
dec
lret
cmp
cmp
jl
inc
in
ret
ljmp
mov
test
insb
inc
aaa
pop
fildl
jae
ljmp
inc
fadds
jb
inc
xchg
daa
xlat
es
xchg
mov
sbb
mov
ret
loope
fidivrs
dec
divb
fnstcw
mov
sbb
les
dec
pop
mov
mov
jmp
frstor
inc
aas
mov
stos
fs
push
daa
inc
or
aas
xor
aaa
lret
mov
dec
pop
nop
xchg
or
or
mov
push
outsl
sbb
mov
out
mov
pop
add
int
inc
inc
ljmp
out
popf
jb
sbb
repnz
mov
xchg
xchg
fwait
cmpsb
xchg
lcall
inc
call
sub
dec
push
call
cltd
pop
insl
xor
popf
xor
stos
pop
hlt
mov
mov
orb
insb
add
mov
xlat
mov
lret
pop
xchg
dec
pop
mov
add
xor
adc
mov
lcall
and
and
cwtl
aas
fistpl
or
cmpsl
les
dec
lret
jno
fnsave
pop
adcl
dec
pop
bound
das
scas
mov
adcl
push
add
std
and
push
inc
fisubrs
mov
push
adc
sub
cmp
sahf
mov
rcl
inc
mov
jnp
push
out
pop
cld
or
imul
or
inc
xchg
test
adc
mov
movsb
icebp
comiss
inc
sub
in
sbb
dec
rclb
push
xchg
fstl
mov
jns
sbb
adc
push
ljmp
jno
dec
std
xchg
or
cmpsl
sbb
xor
mov
out
pop
test
int
jge
nop
sbb
les
out
xlat
lods
fwait
or
mov
xor
roll
push
nop
mov
mov
fldcw
push
sahf
fcmovnb
iret
je
xchg
mov
popa
clc
inc
das
and
sbb
push
cwtl
cmp
xor
mov
movsb
jp
ret
outsb
fdivrp
inc
pop
jo
xor
mov
mov
pop
sub
fisubrl
addr16
dec
pop
popa
inc
loop
xchg
pop
cmp
repz
jecxz
pop
fsubrl
enter
mov
das
cmp
sahf
cmp
xchg
pop
inc
xchg
xor
sbb
fstpl
rclb
xor
sub
push
shrl
das
pop
call
dec
mov
pop
hlt
fbstp
rcll
pushf
push
sub
out
mov
cmp
insl
dec
mov
jae
sti
movsb
or
inc
mov
rolb
daa
cs
loope
sub
test
jmp
int3
inc
jo
sub
cmc
mov
dec
test
inc
cmp
int
cmc
xor
scas
rcll
inc
jl
jmp
incl
pop
add
inc
mov
frstor
jns
mov
adc
jge
add
or
test
in
jecxz
into
adc
scas
push
push
pop
hlt
push
dec
jae
and
jnp
jno
pop
es
mov
and
dec
ret
daa
add
cltd
cld
jne
pushf
mov
iret
fnstenv
test
sahf
xor
aas
inc
imul
adc
cmp
cmp
lds
aas
shl
add
aas
dec
mov
inc
bound
sbb
dec
push
dec
das
lcall
out
dec
fsubs
mov
rcl
test
adc
jo
pop
mov
dec
and
cmp
add
mov
fiadds
fcomps
lods
xlat
adc
push
movsb
clc
xor
jecxz
lret
push
mov
loope
xor
fcoml
add
inc
mov
cmp
mov
addr16
pop
pop
cmc
cmp
and
pop
xlat
outsb
xchg
loope
insb
std
mov
xchg
sub
add
repnz
rolb
clc
pop
jns
mov
popf
mov
movsb
xchg
sub
les
cmpb
inc
jge
xchg
sbb
or
mov
into
mov
sub
lahf
aam
xor
shl
lods
shl
fimull
or
int
and
hlt
push
inc
pushl
call
orl
aas
pop
push
xor
adc
xchg
mov
push
jne
cmc
pop
mov
pop
pop
repz
inc
fisubs
jp
inc
and
and
mov
dec
dec
xlat
jnp
mov
pop
jo
cli
mov
mov
push
sub
pushf
mov
cmpsl
mov
mov
inc
mov
mov
pop
push
xchg
and
mov
mov
lcall
inc
lds
adc
pop
mov
imul
mov
mov
mov
dec
adc
scas
xor
adc
shrb
jo,pt
bound
add
es
inc
mov
mov
mov
mov
jae
pop
lds
cli
icebp
sbb
jae
push
cmp
sub
cmp
cmp
fstpt
stos
nop
mov
xor
lods
clc
xchg
loope
push
inc
stc
nop
jbe
jo
rcrl
jle
push
add
jecxz
mov
jae
xchg
ja
inc
xor
fdivrp
cltd
ret
repz
pop
jecxz
or
jmp
or
into
test
push
lret
push
rorb
jl
lahf
and
lods
cmpsl
sti
and
cmp
mov
or
scas
cwtl
xor
addr16
or
dec
jns
arpl
enter
daa
mov
xchg
mov
or
shlb
es
xor
fwait
mov
inc
cmpsl
cmpsb
dec
sbb
jne
int
add
sbb
pop
out
mov
mov
cltd
lods
dec
lock
cs
xor
push
and
sub
das
test
lret
jb
inc
fimull
push
bound
popf
ds
icebp
out
std
test
loopne
jg
lock
stos
cmp
cld
adc
bound
std
and
jb
mov
mov
les
pop
jbe
adc
mov
mov
sahf
push
test
or
outsb
ret
or
push
add
xchg
jno
or
push
fs
repnz
fcmovnb
dec
popf
test
enter
hlt
mov
call
inc
xchg
fadds
push
dec
mov
out
imul
mov
mov
jno
mov
xor
std
rcll
inc
pop
lret
adc
outsl
sbb
mov
rcrl
sub
sbb
fists
mov
sub
xor
popf
sub
xchg
inc
dec
and
cmc
lret
icebp
mul
xchg
jecxz
lods
adc
jp
lods
mov
xor
and
pop
push
push
jns
and
xchg
fs
push
sub
lea
and
lock
fucomp
out
inc
push
cli
aas
daa
dec
call
pop
jp
adc
std
add
shrl
or
sbb
imul
xchg
and
rcrl
sbb
call
test
shl
dec
pop
jbe
leave
loope
jle
adc
xchg
mov
dec
pop
add
stos
inc
pop
aaa
addr16
push
test
add
fldt
add
xlat
jbe
aas
inc
nop
roll
cs
or
push
js
cmp
aaa
ret
lods
shlb
call
mov
sbbl
or
mov
add
adc
add
pop
loope
adc
mov
jo
pop
aad
xchg
pop
test
mov
test
jmp
cmpsb
inc
dec
pop
push
stc
in
jg
push
sbb
cmpsb
ja
mov
aam
out
dec
sbb
lahf
mull
mov
and
dec
aaa
into
xor
test
nop
cli
stc
push
out
aam
pop
add
mov
sub
subb
dec
mov
inc
fcomps
jno
xor
xor
andb
jmp
stc
jns
ja
sbb
popf
push
dec
cwtl
mov
jnp
push
js
cli
sbb
mov
jns
cmc
lods
jecxz
xchg
push
xchg
repnz
jle
mov
sub
lods
loop
jb
int
int3
mov
aam
dec
sahf
jecxz
andl
push
xor
sbb
pop
cmpsb
sub
scas
mov
mov
fbstp
std
cmpsl
lea
push
xchg
clc
jno,pt
dec
push
jae
stc
jo
and
mov
lret
sbbl
adc
icebp
or
sbb
pop
test
icebp
mov
fldl
lods
xchg
pop
xchg
imul
xor
push
mov
mov
add
ss
sub
xchg
sbb
aas
lahf
mov
pop
mov
add
lahf
stos
outsl
sbbl
div
adc
leave
pop
inc
jbe
out
lret
push
xor
aam
rcrb
addb
imul
sar
add
imul
clc
sbb
push
sbb
scas
push
movsb
xor
pop
ja
dec
int
outsl
jnp
addr16
fsts
add
cli
xchg
push
lods
xchg
scas
ljmp
sub
mov
cmp
js
mov
fsub
test
xchg
xchg
add
ret
enter
dec
xor
pop
sahf
jnp
xchg
outsl
adc
insl
xchg
pop
cwtl
das
mov
push
shr
sub
aad
int
test
jmp
and
imul
cmp
jnp
daa
jns
jno
int
mov
lock
inc
and
push
imul
pop
mov
dec
pop
sub
dec
sub
sarb
sbb
push
repz
jns
jb
jg
push
repz
inc
in
xchg
sbb
fimull
pop
cmp
mov
pop
rol
loope
or
dec
ret
or
or
nop
inc
faddp
jns
dec
loope
data16
lret
ja
ffreep
test
mov
dec
or
movsl
or
mov
frstor
call
or
aas
mov
add
adc
addl
in
test
jno
push
mov
adc
mov
stc
push
push
out
mov
or
and
popf
push
and
xor
cmp
sbb
ds
lock
fcoml
or
add
pop
outsl
ret
adc
jge
repnz
mov
inc
mov
loope
jns
mov
inc
adc
ret
divl
lods
test
inc
stos
sbbb
dec
ljmp
mov
mov
or
and
call
cli
push
outsl
inc
or
rcrb
das
dec
dec
popa
fwait
loop
mov
pop
add
sbb
inc
fbstp
out
dec
repnz
jl
and
jp
xchg
lret
repz
xor
aad
stc
dec
adcb
stos
mov
arpl
aas
xchg
mov
aas
into
dec
jo
push
xchg
xor
mov
js
xchg
lea
sub
push
test
cmp
outsl
aad
shl
nop
cmp
loope
mov
jecxz
pop
pop
push
or
mov
sub
mov
cwtl
add
leave
imul
xchg
mov
lret
jle
in
mov
push
dec
icebp
mov
and
cmpsb
push
dec
cmp
incl
sbb
jno
js
mov
add
aas
mov
pop
jne
stos
loop
cmpsl
test
push
pop
scas
xchg
jecxz
js
mov
rolb
mov
cmp
aam
lods
jge
out
dec
iret
pop
xor
xor
inc
fcmovu
xchg
pusha
les
lret
cmp
ret
sahf
ja
mov
mov
stos
sbb
dec
inc
add
mov
mov
stos
mov
outsl
sti
test
dec
daa
cmpsl
adcb
jae
pop
add
sbb
pusha
mov
adc
adc
movsl
enter
arpl
mov
mov
adc
xor
xor
outsl
xlat
pop
shrb
subb
aaa
lock
xchg
test
adc
and
sbb
sbb
das
mov
lret
call
jne
cmpsw
xchg
jno
mov
clc
popl
cmp
lret
fsubr
pushf
xchg
sbb
cltd
xor
adcl
fidivrl
stos
inc
or
lea
enter
xchg
mov
outsl
sarb
movsb
int
and
sarl
test
jae
xor
das
mov
pop
adc
xor
and
pop
mov
inc
and
jnp
jo
dec
adc
cmc
xchg
incb
adc
cwtl
add
xor
pushl
jae
addr16
push
sub
xchg
pop
xor
inc
mov
lea
dec
and
jae
test
mov
lahf
lds
push
inc
mov
aas
pop
test
add
mov
xchg
shrb
xor
je
inc
cmpsb
inc
mov
hlt
push
dec
inc
fnstsw
mov
insb
push
sub
push
bnd
and
lods
cmp
jp
or
inc
add
xorl
xor
test
sbb
test
fcomps
mov
jb
mov
inc
gs
cmpsl
ds
add
jle
out
or
stc
pop
pop
rorl
cmp
ljmp
push
aas
xchg
int3
xor
scas
inc
and
je
push
mov
cmp
fsubr
inc
mov
add
je
adc
xor
call
out
fmulp
das
mov
shrl
pop
in
pop
dec
icebp
mov
mov
aaa
nop
lods
inc
ret
in
insb
push
sbb
arpl
or
das
insl
dec
sub
jmp
and
out
rolb
stos
cmp
ja
dec
test
and
faddl
cmp
sub
mov
xorl
lods
cltd
xor
lock
pushf
insb
out
push
sbb
insb
dec
and
lret
lods
ss
mov
pop
in
adc
xor
adc
es
add
adc
cmp
inc
scas
in
leave
mov
mov
sbb
adc
repnz
inc
pop
lcall
cmp
jns
call
fsubl
imul
int3
pop
shrb
in
mov
dec
xor
sub
jl
pmaddwd
das
lods
or
divb
or
push
mov
or
cmp
ds
lock
xchg
cli
xchg
pop
in
dec
inc
sbb
dec
pop
call
push
scas
mov
jnp
aas
mov
iret
sbb
sbbb
xchg
lods
ror
rclb
cld
rdtsc
push
repz
mov
jnp
clc
cmpsl
sar
iret
mov
xor
jp
rorb
cmpsb
cmp
shll
notb
outsl
xor
movsl
mov
inc
fidivl
push
fstps
js
fdivrl
lods
std
aam
jle
test
in
xlat
clc
mov
gs
mov
mov
and
inc
bound
addr16
mov
jns
clc
mov
popa
xchg
pop
icebp
dec
orb
out
mov
pop
sbbl
and
mov
loop
cmp
leave
loop
notb
iret
add
xor
and
outsl
daa
cmpsb
sbb
ja
add
movsb
sahf
jo
jl
or
stc
stc
or
push
cli
scas
push
fldenv
imul
jb
xor
cwtl
adc
pushf
xor
popa
clc
addb
mov
jecxz
sbb
loopne
inc
push
test
cltd
mov
mov
arpl
push
dec
xchg
in
sti
test
test
dec
pop
mov
fnstcw
loope
xchg
mov
xlat
cmc
test
fcmovnbe
in
sub
cmp
or
sub
push
cmp
jmp
fs
mov
jne
jp
and
add
inc
dec
push
dec
and
mov
aad
jp
mov
xchg
aad
cli
add
nop
daa
sub
fwait
mov
dec
scas
inc
out
out
cmp
mov
pop
sbb
ja
insl
xchg
popa
inc
cmp
cmp
insb
mov
es
sbb
inc
mov
xchg
shrl
xchg
or
stos
cmp
addr16
xchg
jl
sbb
push
add
push
or
sub
mov
pop
cmp
imul
cltd
lret
out
mov
mov
mov
pop
in
in
sbb
insb
inc
rcr
xor
xor
rorb
push
nop
daa
test
mov
xor
inc
pop
add
sbb
mov
movl
or
pop
cmpsb
and
dec
loope
dec
sub
xor
mov
inc
push
pushf
popa
adc
or
shr
mov
test
test
xchg
push
jmp
and
hlt
outsl
mov
enter
loopne
jb
inc
add
call
lds
imul
jmp
dec
inc
or
int
insb
or
lock
shrl
popa
icebp
sub
call
or
out
out
std
mov
mov
mov
fcom
add
repnz
test
ss
push
pop
cs
rorb
nop
xor
sbb
mov
push
pop
call
iret
negl
mov
cltd
jns
mov
jo
movl
shlb
pop
mov
dec
ret
cmpsb
push
xchg
pop
mov
ret
cmpsb
sbb
scas
mov
ret
movsl
fidivl
insl
shlb
ret
pop
mov
icebp
xor
mov
les
mov
sarl
test
int3
jo
aaa
and
insb
popf
add
push
mov
inc
jmp
rol
divl
lret
out
into
push
pop
das
fiaddl
mov
fsubs
jb
imul
rorl
push
xor
pop
dec
push
shll
pop
insl
xlat
sbb
mov
and
cmp
clc
pop
push
ss
jne
xchg
addr16
inc
repnz
in
push
xor
cld
lahf
stos
inc
or
mov
outsb
insl
mov
into
mov
scas
mov
jecxz
mov
mov
jge
pop
bound
divl
pusha
das
mov
scas
loop
jae
or
sbb
dec
test
lcall
repnz
mov
sub
loopne
push
mov
sub
add
inc
iret
iret
fldl
xchg
jecxz
jecxz
sub
xor
sub
cwtl
sbb
dec
mov
jo,pn
inc
jne
adc
addr16
push
out
fs
jo
sbb
incl
cs
adc
loop
shrb
in
dec
cmp
adc
rorl
imul
das
cmp
testl
xor
rorb
stc
call
or
sbb
in
adc
sbbl
push
test
data16
outsl
shlb
repnz
loope
fnsave
mov
xor
pop
xchg
out
push
push
push
inc
sbb
jno
out
cmp
mov
xchg
mov
mov
sbb
jg
pop
pop
int3
arpl
adc
negl
in
movsb
lcall
shrl
ds
xor
stc
jmp
std
mov
out
cmp
int3
pusha
mov
mov
in
and
add
mov
mov
lcall
dec
add
outsb
jl
roll
inc
mov
das
mov
xchg
pop
mov
enter
fcomps
pop
jecxz
sti
iret
jnp
mov
inc
fmuls
cmc
aam
test
pop
jp
adc
pop
sub
jecxz
jnp
mov
fwait
into
sub
or
mov
fs
jb
es
daa
leave
pusha
pop
loope
sti
adc
mov
pusha
mov
pusha
jmp
aaa
es
fidivrs
fs
jle
es
iret
ror
icebp
push
fs
fildll
es
out
pop
leave
adc
addr16
decb
and
and
xchg
pushl
pop
pop
out
and
in
push
addr16
push
and
pop
mov
in
sub
mov
popa
repz
in
mov
int
mov
push
hlt
mov
jecxz
andb
push
incb
mov
jno
jg
push
xor
mov
cmp
inc
mov
inc
mov
xchg
loope
ja
xor
cmpsb
cmp
dec
lods
in
lret
mov
movsl
push
addl
inc
std
push
push
jmp
or
loop
mov
mov
adc
and
jnp
lods
daa
inc
adc
push
xor
outsb
mov
mov
jne
push
sub
int
das
xchg
es
mov
sbb
sub
inc
dec
fbstp
jle
data16
push
add
and
mov
mov
fisubrl
mov
mov
ret
ret
sbb
les
jb
js
mov
jb
jns
lock
lea
fsincos
adc
jp
mov
outsl
test
push
insl
lahf
imul
fcmovne
inc
in
andb
dec
rcll
jmp
dec
iret
aaa
std
dec
and
push
cmpsl
pop
test
andb
pop
lahf
inc
or
js
cmpsb
xchg
push
inc
sub
push
push
mov
and
pushl
popa
ret
mov
mov
mov
loop
sub
les
stos
push
aas
fldcw
in
sub
and
push
add
mov
mov
sbbl
icebp
sbb
xor
inc
sbb
rorb
xor
pop
sub
stos
fsts
jmp
stos
test
fisubl
mov
pushf
jecxz
inc
js
dec
sub
int
add
and
push
pushf
or
stos
fwait
ss
mov
push
sbb
pop
cli
dec
cwtl
cmpsb
or
shlb
or
movsb
xchg
aas
repz
fisubl
mov
mov
or
add
and
divb
mov
test
mov
fcoms
pop
jbe
mov
imul
push
inc
or
js
andl
in
jmp
lahf
ret
shlb
xor
dec
mov
test
sub
lret
scas
popa
jbe
add
lcall
and
mov
jbe
stos
ljmp
cmp
int3
loopne
fwait
mov
or
in
jb
jbe,pt
call
push
jmp
ret
lea
add
inc
aam
andl
leave
mov
cltd
sub
aas
jae
jo
add
cmp
push
jbe
mov
andl
dec
cltd
xchg
mov
ss
sbb
loopne
int3
jle
mov
or
adc
cmp
xchg
adc
jo
in
data16
imul
test
push
jae
movsb
push
add
adc
pop
dec
mov
mov
out
mov
orl
fsubr
test
cmpsl
or
jg
sbb
add
mov
push
jae
sub
sbb
cmpsb
sahf
test
enter
inc
pop
inc
les
and
push
xor
bound
sub
push
mov
mov
and
inc
push
and
call
adc
sub
lahf
add
or
leave
xor
xorb
mov
fisubs
jecxz
ret
decl
xchg
adc
jecxz
leave
mov
in
push
sub
arpl
arpl
cli
sub
sub
xchg
sbb
sarl
iret
add
xor
add
lods
add
sub
jg
mov
xor
hlt
int3
mov
scas
xchg
mov
cs
fwait
dec
mov
sarb
sub
dec
mov
jae
pop
insb
mov
xchg
cmp
jbe
lret
push
push
int3
aaa
inc
or
pop
lods
mov
les
adc
negl
jo
in
pushf
sbb
xor
arpl
lret
or
mov
stos
xchg
call
subl
dec
mov
loopne
pop
adc
movsb
stc
shll
xchg
cmpsl
jl
cltd
scas
adc
and
in
sbb
xor
xlat
popa
jb
rcrb
rcrl
bound
or
lcall
ror
sbb
jne
pop
out
jl
dec
inc
data16
adc
jne
add
cmp
mov
pop
dec
flds
xchg
stos
fwait
mov
shrb
add
outsb
sub
and
pop
sahf
fstpt
adc
inc
pop
mov
popl
fcoml
int
lret
cmp
push
inc
outsl
daa
cli
int
stos
ja
xor
jno
xchg
stos
std
roll
or
movsl
and
das
ret
adc
dec
das
dec
mov
dec
add
lret
xchg
inc
add
pop
dec
test
sbb
xor
cs
dec
fmull
pop
call
andl
scas
dec
gs
xchg
xchg
mov
push
sti
out
leave
jns
divb
pop
mov
xchg
xchg
sbb
xchg
and
ret
int3
jp
or
stc
mov
stc
xchg
mov
mov
cmpl
pop
or
adc
sti
fcomp
js
jbe
add
mov
mov
pop
jecxz
in
sub
pop
jne
mov
mov
xchg
bswap
pop
push
test
rcrb
dec
arpl
sbb
ljmp
lret
pop
cmp
and
pusha
push
sbb
lret
push
mov
aad
popa
push
sbb
push
xlat
iret
je
or
and
int3
push
and
dec
mov
mov
push
out
aas
sbb
push
or
inc
push
pushl
mov
add
adc
movsb
stc
imul
jno
add
jns
cwtl
sub
jne
and
dec
mov
out
testb
pop
push
imul
mov
mov
nop
inc
mov
filds
std
shll
ja
jae
stc
inc
test
ficompl
test
xchg
push
lods
pop
fs
or
fstpt
pop
scas
iret
in
je
cmp
cli
xchg
pushf
jb
outsb
retw
fwait
insl
dec
imul
std
sub
mov
insb
je
mov
loop
inc
popf
xchg
sbbb
mov
pop
jg
inc
popf
jbe
mov
cwtl
outsb
clc
fwait
pop
xor
mov
jo
push
cs
add
push
adc
int
arpl
rclb
test
jg
mov
leave
xor
sub
hlt
pop
into
lcall
loope
sub
xor
jmp
xchg
sub
jae
adc
cmp
and
xchg
add
cmp
addl
inc
sbb
jle
fdiv
pop
or
movsb
pop
sbb
test
mov
rolb
xor
xor
mov
or
add
mov
incl
mov
xchg
jmp
movl
aas
fyl2x
shlb
testb
in
lds
or
rorl
call
dec
cmp
out
xchg
mov
push
cli
and
xor
mov
js
sbbb
sub
or
inc
cmp
mov
pop
or
pop
push
xchg
lds
adc
or
lret
shlb
std
lcall
adc
in
xchg
push
and
arpl
pop
pop
add
mov
popf
fisttps
pop
fistpl
xor
mov
adc
int3
xchg
pop
or
iret
insl
adc
and
es
movsb
jmp
jp
test
or
fdivrp
xchg
adc
movsl
ds
mov
notl
adc
imull
add
repz
or
movb
sti
and
sbb
cmpsl
dec
shlb
mov
loope
add
push
jns
das
mov
adc
aad
push
cmp
cwtl
rcrl
xor
dec
mov
inc
dec
pop
gs
cmp
aam
lods
fsubrs
cmp
loop
cmp
xchg
add
push
inc
movntps
sub
jge
and
mov
or
mov
sbb
mov
jle
fimull
xchg
jno
sub
aaa
fisttpl
aaa
cld
inc
leave
xor
adc
pop
cmc
inc
push
inc
dec
popf
push
ljmp
cltd
add
inc
push
inc
in
les
push
fsubrl
lret
hlt
int
adc
ljmp
mov
xor
shr
and
cld
xchg
je
test
mov
enter
pop
loope
mov
pushf
neg
cmp
paddd
gs
mov
fsubp
adc
inc
jge
add
jno
jno
add
sbb
in
mov
add
pushf
jns
mov
cld
rcll
cmp
sub
imul
test
push
call
repz
jge
adc
leave
add
cmpsl
push
inc
fdivl
jp,pt
out
popf
pop
xor
jmp
push
je
mov
sub
add
jg
popf
dec
push
lret
dec
stos
mov
insb
and
xchg
xor
cmpsl
mov
dec
push
scas
jge
and
jmp
cmp
into
mov
adc
sbbl
or
jle
and
dec
sbb
loopne
aaa
push
enter
mov
popf
hlt
repz
xor
clc
repnz
xchg
and
test
sahf
pop
fcmovne
mov
push
stos
icebp
dec
in
arpl
daa
fdivr
shr
cmpsl
inc
jmp
add
xchg
adc
jecxz
add
and
mov
adc
adcl
pop
pop
pop
addr16
pusha
popa
xor
mov
push
andw
icebp
les
mov
push
sbb
in
rcrb
outsb
hlt
cwtl
loop
int
push
popa
push
rcll
pop
inc
ss
fsubrp
ss
sbb
sbb
add
cmpsl
xor
ljmp
out
testb
les
mov
dec
decb
pop
mov
pop
jb
mov
pop
shrb
sbb
inc
dec
subl
push
arpl
aaa
loope
sub
out
aas
mov
adc
in
sti
cmp
jno
fwait
mov
xor
jns
and
dec
aam
mov
or
xchg
push
pop
js
pop
arpl
inc
push
mov
inc
sub
cmpxchg
inc
outsb
outsb
shrl
add
fisubrs
dec
push
ljmp
mov
ljmp
sbb
les
fidivrl
or
ret
xor
push
test
adc
ljmp
stos
rcll
adc
jp
fnstenvs
test
mov
dec
movsl
push
lock
ljmp
sbb
mov
pop
sub
subl
sahf
xor
fcmovnu
les
cmpsl
xlat
jmp
mov
lock
pop
popa
dec
mov
rcrb
inc
sbb
clc
or
push
pop
push
dec
nop
mov
or
out
cmp
repnz
scas
repz
fisttpl
xchg
jge
add
aad
xor
test
jnp
adc
jl
push
clc
das
pop
sub
mov
stc
cmc
jl
adc
mov
imul
out
stos
inc
mov
jo
cmp
rcrb
fs
xchg
fwait
xchg
stc
popf
push
xchg
xor
aas
inc
pushf
in
int
fimull
cmpsl
std
jbe
jmp
inc
stos
mov
movsb
xchg
xor
fnstsw
dec
cli
push
out
call
cmp
jg
sti
mov
loopne
lock
shll
or
adc
xchg
xchg
out
sbb
push
adc
rcr
outsl
inc
fistps
nop
inc
mov
jae
mov
lods
and
scas
fldl
js
push
insl
jge
scas
andb
fidivrl
roll
jnp
or
add
mov
insb
cwtl
shll
popf
add
mov
ret
ljmp
sub
sub
fwait
xchg
inc
mov
in
inc
lods
jmp
dec
hlt
dec
xor
pop
jb
fucomip
inc
or
inc
and
test
mov
xchg
test
pop
sub
sbb
loopne
push
or
jbe
pop
sub
cmpsb
or
fwait
stos
ficompl
xchg
mov
je
insb
out
scas
add
stc
adc
loopne
leave
je
inc
adc
jle
jle
mov
outsl
sbb
mov
loope
mov
test
rorb
fimull
std
dec
popa
sbb
sub
in
in
lods
xor
scas
mulb
cmpsl
and
jmp
lods
push
loopne
mov
test
lret
leave
mov
jb
mov
xchg
dec
aas
loopne
popa
pop
mov
jbe
cmp
cmp
xor
mov
cwtl
jp
push
jbe
adc
cmpsl
sbb
std
mov
cmc
loop
inc
push
leave
clc
sbb
popa
mov
mov
nop
lods
lock
add
sti
or
jecxz
xchg
dec
in
xchg
sbbl
add
mov
mov
loope
mov
mov
xor
and
mov
gs
inc
arpl
stos
sub
mov
fsubl
mov
sbb
aas
pusha
mov
mov
or
push
insl
jge
std
sbb
mov
adc
push
sub
mov
cmpsl
mov
das
pop
jns
adc
xchg
mov
add
cltd
xor
in
inc
dec
jno
push
scas
scas
add
stos
dec
sub
mov
or
std
push
ja
rcll
test
jg
fwait
xchg
or
fnstenv
push
xchg
int3
outsl
sub
fwait
xchg
dec
and
pop
outsb
popa
lret
pushf
stos
add
insl
cmp
mov
jge
ljmp
push
mov
pushf
cli
int3
jbe
mov
mov
ret
ret
ljmp
lock
mov
loope
adcl
or
pushf
sub
xchg
nop
test
mov
arpl
cltd
sbb
sahf
outsl
lret
fistpl
fcoml
cmc
jmp
imull
dec
jmp
test
call
stc
aaa
cwtl
fstpt
fistpl
or
cmp
outsl
pop
xchg
stos
xchg
dec
jge
xchg
push
and
push
pop
lahf
push
aaa
mov
jns
inc
icebp
lea
pop
daa
mov
mov
push
cmpsb
lock
add
push
sub
lahf
mov
add
lods
cmp
sahf
popa
lcall
mov
pop
out
add
sub
lds
loope
pop
and
jns
popa
xor
adc
sub
pop
test
lods
mov
aam
and
andl
into
je
repnz
repnz
add
or
int3
stos
pop
dec
or
movsl
clc
in
call
jp
out
push
dec
imul
push
xchg
hlt
mov
mov
push
adc
stos
iret
fcmovnu
dec
cmp
scas
stos
push
add
rorl
mov
mov
and
push
cmpsb
dec
decb
fs
andb
sub
jo
cmp
jne
lcall
jp
push
cmpl
push
jne
mov
jl
mov
ret
cmp
es
outsl
xchg
dec
mov
bound
push
adc
adc
xchg
out
and
dec
inc
insb
subps
gs
ret
imul
or
ret
hlt
xchg
ror
lret
lock
or
fldt
or
scas
mov
and
mov
mov
lcall
adc
test
scas
cli
shlb
cmp
sub
mov
adc
out
inc
and
insb
dec
lret
rcrb
inc
push
loope
movsb
pop
icebp
pop
adc
inc
jle
repnz
mov
inc
lock
lea
inc
pop
imul
pop
push
and
mov
jle
adc
int
pop
fs
and
popf
out
imul
cmp
ja
fstl
lret
enter
mov
push
pop
push
outsl
ret
in
ret
or
dec
lods
pop
xor
hlt
inc
dec
aas
push
dec
xor
in
movsb
lret
testl
movsb
lcall
cmp
mov
add
stos
das
inc
push
aam
or
cmpsb
cmp
int3
filds
inc
lahf
and
pop
or
and
jns
ljmp
inc
in
mov
outsb
stc
lea
push
mov
enter
hlt
ljmp
push
jge
sbb
and
sbbb
test
lret
ret
lods
shlb
cs
gs
and
adc
dec
and
ret
mov
fld
pop
fdivs
and
rolb
xlat
mov
aad
inc
dec
mov
clc
cmp
mov
into
fisubrl
xchg
xor
shlb
icebp
xchg
movsl
dec
jl
jmp
cmpsl
fnstcw
cltd
or
inc
sub
mov
mov
push
and
addl
and
arpl
sub
and
call
aad
imul
ss
push
cmpsb
adc
sub
repz
sti
imul
leave
adc
aam
and
int
push
loop
inc
cld
mov
and
pop
push
stc
aad
sub
xor
or
push
dec
fstpt
fists
scas
cmp
and
push
sbb
jne
jne
jno
fcoms
test
push
mov
sub
lock
xchg
push
fldenv
xchg
movsl
rclb
mov
jmp
int
scas
pop
add
mov
xchg
out
or
sbb
popa
movsb
pop
arpl
adc
jle
vpshld
dec
frstor
pop
ja
xor
test
pushw
sarl
or
inc
lcall
sub
fisubl
and
mov
add
jbe
xor
push
mov
inc
loop
lock
ss
ror
ficomps
hlt
bound
lods
push
mov
cmp
gs
dec
or
pop
pop
jno
cwtl
jae
lea
jl,pt
cmpsb
xlat
fisubs
mov
test
push
aam
lds
into
gs
mov
xchg
mov
js
mov
xchg
and
or
or
cmp
mov
push
sbb
mov
fistps
sub
cmp
pop
addr16
incl
jl
int
add
add
fists
jl
mov
ja
xchg
adc
xchg
dec
xchg
sub
popa
imul
adc
dec
pushl
sbb
fldcw
ds
fisubs
notb
mov
fdivr
xchg
or
jb
fnsave
pop
je
mov
xchg
aaa
mov
lahf
outsb
movsb
mov
das
xorl
cmpsl
mov
into
aam
inc
sti
adc
bound
ja
adc
fnsave
inc
popa
inc
jne
pop
mov
adc
test
mov
aas
pop
cmp
xor
or
test
mov
mov
outsb
cmp
aaa
mov
mov
mov
mov
mov
ljmp
and
ret
push
pop
adc
les
or
ret
mov
mov
loope
sub
push
arpl
dec
cs
cwtl
cld
mov
loopne
pop
neg
pop
pop
dec
cmpl
jle
adc
cs
jno
or
xchg
pop
mov
adc
xor
push
scas
iret
pop
mov
pop
pop
iret
test
pop
pop
mov
out
mov
and
xchg
pop
jge
mov
dec
rclb
jb
mov
sbbb
icebp
mov
movsb
cs
into
xlat
pcmpgtd
in
cmp
cltd
test
push
pop
imul
lahf
subb
jmp
jmp
or
dec
sbb
lds
test
xchg
mov
xor
repnz
pop
popa
imul
loopne
push
nop
xor
mov
add
cmpsl
add
jle
stos
js
pushf
push
sbb
push
mov
cmpsb
in
adc
jb
and
jae
mov
mov
cmp
sub
ror
stc
inc
je
jmp
out
rcl
add
mov
push
in
push
sti
sbb
std
cmp
adc
inc
xor
movsl
gs
adc
push
ja
subl
adc
cmp
insb
sub
aas
mov
cli
loop
xchg
xor
clc
jg
pop
inc
mov
mov
sbb
shll
jg
xchg
es
jge,pt
pop
gs
loop
inc
adc
mov
repnz
jge
insl
pop
add
dec
add
and
das
repz
push
repz
ret
push
xchg
test
icebp
cmp
sbb
adc
fcmovnu
mov
push
push
lret
insb
xor
cmp
jge
mov
inc
pop
add
and
adc
jne
mov
jmp
imul
jmp
sar
inc
add
divb
inc
cmp
or
add
and
loope
testl
inc
mov
fdivs
and
int
jbe
push
xchg
xchg
das
lea
cmp
popa
sbb
push
leave
push
lods
add
js
inc
insl
call
std
rcrb
pusha
imull
lret
cmp
pop
sub
adc
cmp
in
jo
shl
sti
fcmovu
addl
sarl
imull
outsb
mov
aas
mov
or
xor
pop
ret
lahf
aas
jnp
jp
jp
mov
pop
xor
clc
lahf
out
in
shl
out
inc
push
pop
ror
fisubs
jp
xor
xor
data16
xor
jnp
in
inc
fwait
daa
adc
outsl
shlb
add
add
test
jg
mov
ljmp
mov
xchg
ljmp
inc
xor
int
sbb
adc
jg
shll
rcrl
pop
negb
add
mov
xchg
sub
jnp
pop
push
pushf
xor
sahf
clc
movsl
push
ljmp
adc
dec
sub
je
jl
jnp
mov
jg
nop
add
aad
inc
insl
add
out
adc
sbbb
cmpl
add
or
mov
loopne
cmc
push
cmpsl
fs
pop
or
hlt
pushf
fidivrl
inc
mov
jo
push
fdivrs
adc
ret
hlt
and
jmp
popf
fisubl
int3
dec
pop
scas
jp
inc
push
inc
cmpsb
fsubrs
adc
inc
jmp
inc
fcoms
inc
inc
fidivs
cltd
std
mov
sub
push
cld
mov
test
fstpl
int
lds
ja
inc
jae
shll
xchg
mov
xor
fcomp
push
js
dec
mov
add
aad
call
sub
and
pop
xchg
jp
sub
jnp
pop
lock
push
jmp
xlat
adc
push
sbb
je
jg
pop
outsb
cmpsl
sub
fmuls
ret
pop
cmp
pop
lods
inc
mov
sbb
xchg
inc
fiaddl
xchg
xchg
sub
inc
xor
cmp
push
ljmp
scas
inc
mov
xchg
sub
adc
dec
push
fnstenv
lret
sub
cld
cmp
inc
jno
nop
daa
popa
xchg
lret
les
fbstp
int
lcall
xor
dec
and
push
insb
push
out
jae
mov
push
test
lret
popf
xor
dec
repnz
xlat
outsb
bound
cmc
mov
rorl
sarb
inc
popf
inc
fmulp
fs
xchg
in
mov
daa
movsb
cmp
pop
ret
dec
push
push
in
mov
and
pop
or
mov
jle
cltd
xchg
lret
cltd
add
cmp
in
cli
adc
sbb
mov
mov
sub
adc
dec
xor
leave
pusha
xor
aam
sbbl
xchg
mov
cmc
mov
xlat
adc
sahf
cmp
insl
aad
mov
loopne
mov
in
sub
sbb
adc
mulb
into
in
add
in
addl
pop
sub
mov
jbe
and
fisubl
inc
fldcw
lcall
inc
mov
js
add
int
shrb
out
and
pop
inc
inc
xlat
jbe
pop
cmc
push
cmp
ret
mov
mov
ficoms
ss
sub
cmp
mov
jbe
mov
lds
sub
pop
sub
imul
popf
stos
jle
dec
lods
lret
dec
cld
xchg
std
push
pop
hlt
dec
and
test
imul
mov
ret
insl
add
sbb
dec
sbb
jge
insl
sub
lcall
jmp
or
jp
popa
jne
xchg
pop
pop
hlt
nop
mov
sti
xchg
out
pop
cmc
cmp
dec
jecxz
pop
cmp
lea
add
mov
sub
jo
sub
fs
jno
and
iret
fwait
stc
int3
lock
and
inc
sub
insb
cwtl
enter
sbbb
jmp
ds
cmp
jne
aas
pop
rep
xchg
lea
shlb
xchg
pop
pop
repz
mov
cmc
xchg
push
mov
add
ret
push
fs
test
adc
pushf
push
mov
sub
outsl
js
sahf
dec
shlb
mov
mov
push
pop
icebp
jg
xchg
sub
push
ret
mov
fwait
sbbb
push
fs
addl
xor
insl
pop
out
lahf
push
mov
jmp
mov
xor
lahf
push
dec
jecxz
test
mov
in
adc
fdivl
dec
mov
jle
push
out
cmpsb
push
lods
insb
xchg
sub
jle
push
scas
movsb
loopne
fnstenv
test
jbe
cmc
cmpsb
lods
mov
popf
test
jbe
push
cmpsl
mov
dec
loop
cmp
mov
cmp
insl
outsb
push
out
mov
test
mov
pushaw
notl
mov
mov
pop
fidivl
mov
mov
xchg
push
in
sarl
jno
mov
nop
lods
add
fisttps
inc
add
fisttps
fs
jb
sbb
xchg
lods
ljmp
aas
mov
adc
mov
mov
cmp
sub
mov
cmp
enter
js
jbe
test
jp
leave
inc
mov
jle
lcall
popa
pop
shrb
mov
in
xchg
sub
xor
scas
popa
pop
jp
lea
scas
inc
lret
aas
arpl
jne
mov
pop
call
aas
or
insl
pop
xchg
sub
xchg
shll
fs
cwtl
lret
xor
stc
sbb
fs
jbe
mov
js
cmp
jns
rep
mov
scas
inc
scas
cmp
xchg
jo
jp
mov
les
gs
lods
xchg
inc
fs
jno
data16
mov
sub
xchg
inc
adc
jno
push
jmp
xlat
data16
inc
jns
jl
mov
or
enter
pmulhw
jae
add
push
push
mov
orl
fstpl
push
sbb
dec
das
jo
popa
outsb
adc
mov
movsb
cmp
aad
inc
add
daa
pushf
xor
xchg
sub
mov
out
repz
mov
dec
pop
test
xchg
imul
mov
lds
test
add
outsl
inc
push
mov
mov
xchg
xchg
lods
out
aam
ss
aam
mov
push
xchg
scas
testb
add
pop
aaa
push
inc
faddl
mov
pushf
xor
hlt
inc
fisubs
std
or
cs
gs
js
out
test
xlat
outsb
int3
mov
aas
sbb
les
cmp
cmp
and
mov
sbb
icebp
and
movl
inc
mov
out
aas
jo
outsb
pop
sbb
jecxz
sbb
jo
adc
in
push
ljmp
jecxz
es
out
xchg
dec
sub
jle
add
cld
ret
mov
sbb
xorb
bound
sarb
aas
pop
dec
and
pop
xchg
adc
cmpsl
in
lds
ret
clc
ss
addr16
jp
andl
or
les
pop
pop
push
daa
mov
mov
int3
test
out
push
ds
or
ficomps
mov
xor
in
or
lock
push
insl
inc
pop
push
or
mov
stos
in
add
xor
inc
fdivs
push
out
test
movsl
push
insl
xlat
mov
fdivp
and
jl
sub
insl
test
push
jg
jb
leave
mov
adc
sub
sub
arpl
into
jge
pusha
idivl
pusha
testl
sub
pop
dec
mov
mov
into
lret
jmp
mov
sbb
jae
push
or
and
cmc
add
mov
dec
pop
sti
xchg
dec
insb
aam
lcall
pop
jmp
sub
icebp
push
fnsave
mov
cmp
mov
nop
daa
in
pop
mov
lods
xor
lea
idivb
mov
mov
std
mov
sbb
sub
pusha
stos
jg
aad
adc
fdivl
pop
lds
inc
rcrl
jb
in
dec
cmp
sub
or
xor
into
push
xchg
or
scas
pop
std
inc
repz
cli
xor
xchg
and
ret
mov
aas
and
push
dec
push
xchg
lret
pop
lds
imul
mov
aam
sbb
jp
xchg
inc
shl
jb
push
ljmp
or
push
push
xor
arpl
mov
pop
and
scas
jns
jne
or
lcall
popf
scas
pop
icebp
idivb
cmp
xor
mov
mov
les
pop
mov
hlt
std
push
lds
jns
mov
imull
in
orb
fwait
jne
xchg
std
pop
movsl
mov
clc
inc
mov
mov
dec
loopne
shlb
push
cmp
outsl
rcr
jb
add
inc
rolb
jmp
pop
and
jo
push
scas
inc
xchg
dec
aad
push
dec
mov
jo
cmpl
inc
mov
sbb
in
or
add
and
fcoms
int3
inc
xchg
sti
cltd
sbb
loope
adc
jbe
icebp
xor
rcrb
idivl
stc
inc
mov
xor
dec
pop
mov
mov
pop
hlt
mov
adc
sub
add
inc
mov
sbb
jg
xchg
daa
movsb
mov
sti
push
mov
out
lods
pusha
int3
jg
and
add
mov
adc
fsubl
xchg
mov
movsl
cmp
pop
jae
lods
push
mov
xchg
ljmp
lock
mov
xchg
adc
scas
adc
cwtl
jno
pop
aad
xor
pop
leave
jmp
lret
mov
lods
pop
xchg
and
push
loop
push
int3
push
xchg
jl
jmp
fwait
je
scas
add
dec
movsb
aaa
cwtl
xor
sbb
add
pusha
aaa
lock
in
icebp
sub
rclb
pop
push
or
sbb
inc
inc
mov
jne
fists
jmp
mov
cmc
adc
xchg
cmp
sub
xchg
mov
adc
addr16
insb
movsl
fs
add
mov
lock
sahf
lods
mov
sbbl
and
xor
sbb
jp,pt
sti
ss
inc
shrl
jge
outsl
inc
cmp
mov
inc
xchg
jge
jae
ljmp
inc
push
vpshlq
enter
push
adc
mov
add
cmp
xchg
push
mov
in
ret
push
mov
and
pushf
add
mov
xchg
mov
push
rcr
das
adcl
movsl
lock
pop
sub
xchg
mov
jmp
lds
mov
sbb
jecxz
adc
dec
mov
sub
lds
sub
fcoms
pminsw
jb
shlb
mov
mov
jmp
ss
mov
dec
fildll
int
sub
rolb
rcr
push
popf
or
and
shrb
jb
aad
adc
clc
movsl
aaa
test
std
and
cld
fcoml
and
jne
out
inc
lret
stos
xchg
fxch
mov
add
mov
mov
das
cmp
jle
xor
test
pop
sub
lods
xchg
inc
mov
pop
test
add
lds
jae
push
lret
adc
lea
sti
xchg
fldl
fimull
in
mov
mov
sbb
pushf
and
jp
inc
ret
sbbb
pop
add
ljmp
adc
aas
test
cmpb
outsl
cwtl
hlt
sahf
xchg
xchg
das
mov
not
push
js
push
aaa
jmp
dec
ret
aad
ss
ror
push
lock
pop
aam
movsb
scas
inc
test
add
push
mov
push
fbld
out
cmp
test
rclb
dec
mov
call
or
add
sar
xlat
jns
adc
lret
xor
and
nop
sar
jbe
lds
in
mov
push
mov
call
aas
andl
sbb
imul
push
cli
push
and
aas
pop
adc
adc
xor
incb
lds
xor
fmull
add
out
je
cmp
pop
and
addr16
add
das
sbb
repnz
loop
sarl
adc
dec
sahf
out
xchg
aam
sub
flds
jp
mov
das
mov
lds
sub
adc
decb
mov
mov
add
or
and
out
cmp
adc
pop
cmp
push
jge
sbb
lcall
add
push
test
test
dec
adc
ja
mov
and
mov
xchg
hlt
cwtl
pop
or
sbb
stos
andl
pop
add
xchg
mov
mov
cli
xchg
insl
mov
std
pop
fcmovb
push
xchg
in
fstps
push
nop
lods
pushf
das
add
add
hlt
xchg
insl
stc
xor
or
jae
std
das
push
xchg
or
das
sub
inc
jg
or
cmp
popf
or
cmpsb
popa
jbe
movsl
push
jo
lds
xchg
insl
aad
test
aaa
into
sbb
cmp
lret
lds
sub
inc
jo
xor
mov
jb
sbb
dec
dec
mov
jmp
jb
adc
sub
addl
mov
and
adc
cmc
xchg
popf
ficoms
add
mov
insl
test
jno
jne
inc
mov
push
mov
mov
mov
dec
jecxz
lods
sti
xor
in
jl
dec
inc
fists
fsubs
mov
xchg
sti
test
icebp
mov
aaa
jmp
test
std
ja
fdiv
int
in
in
enter
fsubl
stos
pop
icebp
mov
push
idivl
fists
jmp
rcrl
iret
inc
mov
cli
mov
push
adc
xchg
sub
xor
push
jne
repz
xor
ds
inc
nop
jns
mov
xchg
sub
xor
dec
je
add
out
cmp
insl
lods
stc
mov
out
jl
frstor
dec
mov
mov
add
pop
stc
and
adc
cmp
shl
inc
aam
test
add
and
mov
or
out
sahf
scas
xchg
cs
mov
out
xor
jno
pusha
mov
dec
adc
in
xchg
xchg
dec
es
and
and
mov
sbb
ds
mov
xor
in
subb
movsb
mov
movhlps
sbb
out
push
in
repnz
mov
or
xor
out
dec
lds
xor
add
ds
or
daa
mov
out
aad
in
push
sbb
scas
lods
and
push
adc
fdivr
xor
mov
int3
inc
adc
outsb
push
test
xchg
pushf
ds
rcrl
cmpsl
nop
lds
mov
push
inc
jnp
push
jno
repz
jnp
data16
adc
scas
sbb
aaa
cli
lret
gs
mov
xchg
les
in
push
pop
jecxz
jecxz
mov
imul
nop
jnp
scas
mov
rep
mov
adc
inc
into
jge
jl
cmp
inc
xchg
lea
enter
popf
mov
xor
mov
or
fstpt
jmp
ss
push
cmp
cmpsb
mov
xor
ljmp
push
stc
push
scas
push
cmp
test
inc
into
mull
sbb
push
lods
push
jmp
xor
imul
repz
das
mov
aad
add
ljmp
push
lods
movsb
stos
xor
sti
loop
sahf
aam
or
or
xor
aam
xor
loope
addb
xchg
call
push
mov
aaa
aas
inc
ret
mov
cld
inc
push
cmp
test
xor
callw
shrb
or
cmp
cmc
aas
repz
or
push
cwtl
in
sbb
fstpl
mov
fldpi
orb
sahf
xchg
lods
sub
jb
outsb
xchg
cmpsl
dec
hlt
sub
jp
xchg
dec
int
push
sbb
mov
in
fidivs
std
adc
dec
hlt
addr16
int3
inc
mov
test
lods
dec
fcomip
xchg
cmc
and
sbb
loope
cmpsb
add
push
inc
andl
xchg
pop
xorb
sub
push
in
cld
stos
sub
or
pop
sti
adc
inc
into
or
push
out
loop,pn
stos
sub
sbb
clc
cmp
jg
jo
jno
loope
dec
mov
movsl
jbe
shll
int
loop
cs
inc
mov
flds
hlt
mov
mov
stos
inc
fucomi
les
rorl
loope
pop
adc
cmp
mov
es
xchg
pop
mov
fdivr
daa
in
cld
dec
shrb
scas
push
mov
lock
mov
mov
pop
std
mov
fnstenv
rcr
les
pop
ja
mov
pop
push
rcll
out
push
cmpsb
pop
push
lret
sbb
int
mov
mov
xor
aad
out
bound
fsubr
and
cld
test
not
je
iret
sbb
and
ficoms
mul
xor
loopne
adc
out
sub
nop
push
sub
push
add
popf
sub
leave
xchg
mov
push
mulb
jecxz
add
sub
insl
xchg
iret
in
addl
mov
sub
cwtl
push
movsl
outsb
xchg
or
movsb
mov
sub
aam
cmpsb
shll
push
mov
sbb
aas
or
cwtl
push
test
fdivl
cmp
or
in
dec
cli
mov
inc
xor
js
jbe
rcrl
xchg
and
int
adc
adc
cmp
icebp
lcall
ficomps
roll
and
es
test
cld
xor
clc
scas
scas
xlat
pop
paddsb
lods
mov
sahf
test
jno
xchg
and
adcb
jmp
ret
lock
sbb
fiadds
call
orb
out
adc
popl
negl
sbb
out
mov
xor
cmp
and
jmp
mov
jmp
pushf
and
mov
lods
loop
popa
in
into
xchg
jo
stos
lods
pop
cli
mov
data16
mov
popa
add
clc
popa
xor
pop
dec
js
outsb
outsb
in
dec
and
pop
pop
inc
mov
pop
dec
sbb
sbb
xchg
rcrl
gs
in
and
mov
add
frstor
cld
xor
in
xor
fldt
or
out
daa
mov
scas
nop
orl
fsub
mov
aad
dec
loop
fmull
adc
and
clc
sub
insb
push
aam
add
insb
mov
jmp
dec
shlb
mov
adc
mov
pop
jns
xchg
out
cmp
lods
popa
jo
ss
daa
push
int3
orl
movsb
and
incl
mov
or
push
mov
mov
mov
std
sbbl
notb
fcmovb
cs
sub
je
or
mov
rep
dec
mov
pop
cli
sbb
xor
jp
pop
sahf
fsubrl
sbb
push
in
jnp
shlb
negl
jnp,pt
fsubrs
adc
pushf
adc
cld
mov
rol
loop
sbb
std
cli
ss
leave
aaa
cltd
mov
push
and
lret
cmp
not
imul
rorl
loopne
cmp
and
add
jno
shrb
in
std
mov
leave
jl
shrb
shl
shrl
out
jmp
cmpsl
and
repz
icebp
sbb
mov
in
xor
stos
inc
stos
or
xor
mov
and
cmpsb
jno
test
or
or
pushf
and
push
mov
inc
pop
pop
ret
pop
int3
push
cmp
inc
fidivs
or
cli
xor
incb
jmp
mov
into
adc
lods
scas
or
pop
ljmp
jge
aad
push
dec
sbb
cmp
fwait
test
lods
setge
iret
jp
in
xor
cli
int
push
test
fistpll
xor
xchg
xor
jle
dec
insl
cmc
mov
dec
rolb
sub
pop
xor
push
in
arpl
fmul
test
push
das
loopne
in
mov
scas
jno
sbb
sti
jle
mov
cld
dec
scas
mov
rcrb
ss
loop
xchg
adcl
xchg
jnp
mov
clc
add
and
sbb
sub
xor
call
cmp
adc
sub
aaa
jmp
insl
ljmp
xchg
or
push
jmp
popa
cli
popf
or
mov
cmpsb
or
addb
xchg
fsubs
dec
ret
mov
in
ss
dec
mov
pop
in
pop
mov
insb
movsl
push
mov
es
icebp
or
repz
add
testl
dec
mov
scas
addl
pop
cwtl
push
in
leave
das
ss
stos
scas
xor
mov
ret
call
scas
mov
pushf
cltd
xchg
adc
out
push
jo
imul
sbb
movsl
or
test
aad
addb
xchg
jne
repnz
mov
aam
mov
stos
mov
mov
add
loop
and
dec
movsl
insb
pop
rcr
repz
lods
mull
out
lcall
lds
das
mulb
or
lret
nop
inc
cmc
sbb
hlt
inc
xlat
and
inc
push
mov
pop
jg
pop
aas
dec
mov
mov
arpl
mov
and
xchg
xchg
xor
fwait
arpl
iret
ljmp
test
flds
pushf
mov
inc
inc
inc
or
bound
jo
sub
mov
jle
outsb
cmpsb
test
jecxz
rol
sub
pop
fdivs
into
or
dec
insb
sub
dec
stos
and
stos
inc
mov
loopne
insl
lcall
jb
jmp
mov
scas
push
call
scas
xchg
fildll
fdivl
imul
dec
cld
xchg
ja
pop
cmp
pop
icebp
movsl
cmp
jge
idivb
out
push
mov
or
jmp
jne
mov
lock
mov
mov
ja
jbe
arpl
fiadds
rolb
mul
dec
cmp
push
mov
push
lods
pop
adc
stos
xchg
pop
test
add
xor
push
stc
xor
movsb
imul
pop
pop
jae
mov
icebp
sub
pop
xchg
iret
inc
push
sahf
xor
mov
adc
sbb
sub
fbstp
sbb
and
add
jl
xchg
in
outsb
push
in
test
aaa
out
sbb
in
fnstcw
std
xor
add
push
xchg
mov
fsubl
repnz
mov
pop
fdivs
lds
addr16
insl
add
cmpsl
push
xchg
add
lret
subb
and
cwtl
push
jo
mov
xor
pop
lds
fnstenv
xor
jnp
xchg
inc
pop
or
lea
jmp
and
das
ja
fidivl
jecxz
push
xchg
popa
stos
and
jbe
shlb
xor
gs
loopne
and
sub
sbb
aaa
inc
xor
pop
cwtd
mov
and
jo
test
push
mov
sbb
ljmp
das
incl
sahf
loopne
mov
pushf
or
xchg
ja
sbb
mov
setno
or
xor
push
xchg
mov
enter
std
jmp
sub
pop
loopne
imull
std
add
adc
jmp
fidivl
add
fidivl
sub
xchg
loopne
mov
inc
movb
mov
aam
das
adc
fidivrl
inc
enter
or
fs
jp
in
enter
lahf
inc
mov
movsb
mov
xchg
push
shr
cmpb
mov
push
rcrb
mov
loope
fildll
adc
shll
push
mov
fcmovnbe
dec
jmp
mov
mov
sbb
aas
or
sbb
jnp
push
jp
mov
ss
fnsave
out
xchg
mov
lods
je
pop
je
nop
and
sub
mov
add
jne
cwtl
insl
cmc
add
insb
imul
pop
xor
mull
shrb
and
cmp
lea
mov
in
cmp
fisubrs
incb
ret
shl
sbb
aam
mov
int
movsb
lret
divl
add
out
arpl
xchg
fmull
cmpsb
lods
xchg
mov
pop
pop
repz
insb
mov
xor
push
lret
push
lcall
jne
in
or
int
xor
xlat
xchg
dec
cwtd
pop
cmc
sbb
popf
cmp
fcoms
jae
or
loope
int3
loopne
jg
stos
shlb
fstpl
dec
mov
ljmp
inc
fdivr
push
iret
notl
fcmovnb
inc
ficomps
mov
gs
es
in
inc
out
clc
xor
mov
into
data16
sub
xlat
sbb
psrad
dec
xchg
in
sbb
mov
lcall
xor
cwtd
cmpsl
mov
shr
loopne
dec
mov
out
test
or
les
pop
xchg
jge
xchg
cmp
adc
cmp
push
sarl
dec
cmpsl
pop
outsb
sbb
and
nop
sbb
push
xchg
mov
js
pop
stos
imul
pop
mov
xchg
and
jae
push
xor
cmp
dec
push
fiaddl
dec
sbb
insl
push
xchg
jb
push
push
daa
adcb
cmc
mov
arpl
mov
lcall
jbe
xchg
inc
xchg
cmpsl
pop
or
push
popf
mov
mov
scas
dec
bound
stos
sub
lahf
out
jb
cmp
jo
cmp
cmp
lds
inc
push
rcrb
add
xorl
and
sbb
test
adc
jmp
pop
ficompl
cmpsb
insl
mov
icebp
ret
cmp
js
dec
stos
mov
dec
sub
pusha
movsl
out
jo
inc
gs
mov
pop
insb
push
iret
push
andb
push
inc
movl
sub
mov
push
jne
rcrb
lahf
lea
pop
cmp
mov
popf
imul
lods
xchg
pushf
mov
les
cmp
ret
inc
mov
out
cwtl
mov
fidivl
fbld
pop
sarb
sub
ficomps
rcrl
sbb
adc
or
aaa
ljmp
adc
jb
push
or
aad
xchg
mov
push
or
inc
addl
cmp
push
jnp
aaa
fisttpl
fwait
mov
or
jb
cmpsb
pop
sbb
mov
and
xchg
jb
jae
cmc
or
in
push
lods
sbb
add
dec
roll
pusha
ljmp
and
andl
in
inc
push
xchg
mov
in
dec
test
pop
xor
cmp
inc
mov
inc
adcl
lcall
lds
xchg
pop
mov
nop
xor
or
adc
mov
pop
add
call
and
stc
adc
sbbl
ss
test
add
mov
dec
adc
insl
fwait
lds
jnp
int3
nop
lcall
lret
int
js
loop
push
jmp
add
lahf
mov
out
jge
int
and
clc
les
enter
and
dec
mov
xchg
stc
mov
or
sbb
enter
sti
xchg
xchg
mov
sbbl
cmpsl
aam
cld
push
lods
inc
outsb
push
sub
push
aas
mov
mov
mov
xchg
push
mov
stc
call
push
cltd
sbbb
or
add
xchg
sbb
sbb
sti
xor
push
mov
xchg
sbb
jbe
cmpsl
outsb
clc
cmp
loope
mov
aaa
lods
test
out
sbb
lcall
jecxz
adc
pop
pop
shll
in
rolb
dec
in
cmp
mov
push
push
jecxz
push
fisubs
inc
shrl
push
and
dec
test
push
and
add
sarl
dec
pop
in
inc
insb
inc
fidivl
lret
daa
test
dec
and
cwtl
subb
dec
and
or
push
insb
mov
adc
cs
xchg
xlat
cmp
mov
arpl
dec
ret
sub
sub
lret
gs
xchg
cmp
mov
insl
insb
xchg
xor
jno
cmpsb
pop
fscale
and
pop
gs
data16
dec
lock
in
pop
push
ja
xor
lret
cld
mov
xchg
mov
fstpl
push
jno
mov
les
stos
cmc
sbbl
inc
shll
add
es
sub
outsb
add
stos
push
lea
int3
shlb
popa
stos
inc
xchg
pop
out
xchg
leave
pusha
out
or
jg
les
ret
push
popf
mov
dec
loope
lods
and
lcall
mov
pusha
testl
popa
ret
pop
xchg
cmc
pushf
xor
mov
js
dec
mov
xchg
cmp
push
mov
out
testb
inc
adc
jb
pop
icebp
xor
jae
movsl
xchg
sub
push
mov
sub
imul
lock
xor
pop
fs
movsl
and
sub
jne
add
or
and
sbb
xlat
scas
cmp
cmc
add
jl
push
loop
pop
adc
lcall
leave
mov
xchg
mov
fistpl
or
cmc
mov
ret
adc
mov
xor
inc
shll
add
out
and
sub
outsb
add
test
lret
cld
pusha
stos
inc
xchg
sbb
leave
pusha
in
or
jg
ret
repz
push
popf
mov
loope
stos
and
fsubl
call
mov
pusha
testl
pop
ret
pop
xchg
hlt
pushf
xor
mov
js
inc
mov
xchg
aaa
lcall
mov
testb
inc
adc
jno
pop
icebp
cs
xor
les
jno
mov
outsb
add
call
lret
cld
pop
test
es
mov
insl
and
sub
jae
lret
dec
loop
aam
mov
push
jne
push
daa
adc
fs
push
out
or
cmp
outsb
add
push
adc
loope,pn
dec
loop
add
loopne
in
fs
adc
inc
aaa
jmp
imul
mov
sbb
xor
cmp
mov
outsb
mov
ret
hlt
out
sbb
push
cmp
inc
cmp
test
pop
icebp
cltd
mov
loop
pop
js
mov
imul
xchg
sub
dec
movsl
jl
in
adc
int3
xor
fs
clc
mov
ret
jg
std
xchg
cld
xchg
push
pop
cmc
dec
call
pop
out
push
dec
js
jg
jbe
push
mov
or
and
aad
xchg
sbb
mov
repz
and
cmp
jns
add
stos
push
inc
xor
leave
push
ret
push
mov
mov
cmp
jnp
adc
xlat
push
fisubrs
push
mov
mov
or
leave
sbb
std
jns
jbe
movsl
adc
lods
sub
cld
push
lahf
loopne
bound
movsl
int3
and
aad
and
imul
sub
pop
xor
push
push
lods
add
popf
int
scas
and
rcrb
ds
pop
xchg
mov
mov
add
sbb
jle
repnz
dec
and
cli
mov
pop
fnstenv
cmp
pushf
xchg
push
insb
int
sub
add
sti
mov
cmpsl
xchg
inc
addr16
je
cmpsb
pop
xchg
scas
adc
pop
mov
mov
sbb
or
das
jae
xor
in
int
dec
sbb
and
and
jle
int
push
fistpl
xchg
xor
sti
repnz
pushf
nop
dec
inc
mov
push
mov
popf
enter
push
out
xchg
xchg
mov
cmpsb
cmp
xlat
sbb
xchg
add
popl
cltd
adc
scas
divb
xchg
xchg
pop
jo
in
insb
pop
clc
add
adc
mov
push
pop
push
push
and
pop
fdivr
pushf
jmp
test
xor
mov
xor
stos
add
mov
add
jbe
sub
push
out
jle
cmc
popa
lahf
notl
mov
or
xor
xchg
aad
cwtl
test
jo
dec
mov
add
adc
jl
pop
pop
jp
mov
push
mov
in
fwait
and
pop
outsb
and
or
push
adc
inc
lods
mov
nop
out
shll
xchg
in
aaa
pushf
mov
stc
sbb
fxch
imul
lods
pushf
pop
shrl
jle
push
aam
sbb
jne
adc
jb
stos
push
inc
leave
pop
jo
imul
repz
or
scas
movl
enter
add
push
sbb
inc
jno
je
lcall
or
inc
pop
out
aaa
cmp
stos
fucomi
test
dec
clc
cmp
cmp
mov
lret
mov
push
nop
daa
adc
stc
ljmp
aas
sti
fidivs
rclb
jle
jno
nop
daa
sbb
movsl
cmp
mov
push
sub
cmpsl
ds
clc
mov
push
cmp
inc
std
out
xchg
divl
call
lcall
adc
cmpsl
loope
sbb
repnz
stos
addr16
sbb
xor
in
push
jmp
pop
repnz
cmp
sub
jp
xor
pop
icebp
mov
inc
sti
xlat
call
loope
into
lods
pop
add
mov
in
mov
pop
scas
inc
xlat
dec
push
sub
adc
mov
jns
mov
gs
in
xchg
inc
adc
fidivrl
dec
adc
fdivrl
stos
mov
cmpsl
fidivs
daa
mov
xor
sub
dec
lcall
dec
sar
mov
sub
imul
mov
loop
fbld
or
fnstcw
dec
rorb
sub
cmp
test
cmp
les
mov
lahf
jg
cld
ret
fsub
adc
rorl
sub
pop
inc
push
mov
mov
mov
add
jle
pop
iret
bound
inc
cmp
inc
fmuls
leave
pusha
mov
mov
jb
leave
inc
or
adc
test
ret
mov
sub
jne
repnz
pop
popw
sbb
flds
pop
inc
mov
pop
adcb
in
aam
icebp
pop
inc
cwtl
inc
jle
jl
jo
orl
mov
addl
pop
insb
hlt
push
ret
sbb
addb
test
mov
adc
fsub
insb
push
fists
je
pop
mov
cmpsb
pop
fadds
sub
sarl
push
clc
popa
pop
fcoml
cmc
inc
shll
cwtl
scas
xchg
fadds
mov
mov
clc
insl
clc
popa
ret
ficoms
jne
pop
stos
xor
mov
dec
sub
dec
adc
inc
mov
pop
addr16
sub
mov
xlat
jnp
cmpsl
fstpt
add
adc
xor
jmp
pop
add
sarl
lods
xor
mov
mov
cmp
push
insl
sub
push
cli
pop
or
xlat
inc
in
sub
xor
dec
inc
add
out
fwait
push
ror
cld
dec
adc
pop
dec
adc
mov
das
outsl
mov
jne
jl
into
inc
push
cwtl
inc
pop
xchg
inc
or
inc
or
es
fs
xor
lea
sub
subl
hlt
pop
lods
cmp
or
push
xor
inc
imul
lahf
aas
cmp
sub
xchg
icebp
mov
dec
test
jp
cmp
faddl
idivb
stos
loop
jmp
ret
mov
dec
or
inc
cmp
mov
jb
pop
stos
push
shrl
aaa
mulb
dec
aam
fisttps
paddsb
mull
cmc
jp
adc
lock
aas
dec
dec
or
mov
push
adc
push
add
dec
leave
xchg
lock
mov
adcb
jae
cmp
push
add
daa
aam
adc
dec
iret
fmull
push
push
jmp
inc
xor
in
outsb
inc
sub
outsl
push
popf
leave
mov
fidivl
push
dec
push
imul
push
test
addr16
cmp
into
cltd
orb
lret
xchg
test
jg
fists
mov
iret
cmp
xchg
dec
adc
inc
adc
mov
outsl
bound
push
mov
jae
mov
sub
pushf
sub
or
sbb
repz
pop
inc
pushf
loop,pt
cmp
and
xchg
inc
cmp
add
xlat
pop
mov
xabort
inc
adc
mov
rorb
movsl
cmpsb
cmpsb
xor
test
mov
sub
movsl
lods
sub
mov
movsb
std
push
and
push
inc
xchg
inc
mov
cmpsb
inc
jl
xchg
sbb
xchg
inc
jb,pn
ret
test
cld
xchg
aas
dec
push
sbb
int
lret
adc
fsubs
push
mov
cmpb
or
les
rcrb
mov
pop
or
test
mov
mov
add
shll
sbb
xchg
sub
mov
mov
mov
enter
cmp
clc
lea
xor
pop
les
cld
pop
sbb
inc
pop
in
movsb
leave
xchg
mov
mov
cld
pop
popf
xchg
mov
enter
bound
into
adc
xchg
inc
insb
and
dec
js
push
xchg
or
cli
jle
dec
inc
loop
cmpsb
iret
mov
stos
sub
mov
or
jne
add
jnp
lcall
scas
push
push
aad
fwait
cmp
lcall
test
bound
jmp
lea
lods
aam
push
nop
push
push
ds
jb
push
and
lods
rorb
lock
insl
mov
int
fdivrl
adc
ds
pusha
push
and
testb
jge
xchg
cmp
mov
cmpsl
xlat
sbbl
pushf
cmp
in
inc
adcl
sbbb
cmp
push
mov
jp
or
mov
xor
and
push
adc
dec
mov
mov
add
repz
pop
rolb
mov
pop
push
xchg
or
mov
mov
je
jb
push
mov
negl
mov
xor
push
adc
mov
out
pop
arpl
push
icebp
leave
lea
mov
ss
pushf
adcl
or
mov
mov
jae
jo
loopne
inc
cli
xchg
jbe
xchg
add
ret
jge
mov
xchg
outsb
jbe
pop
enter
mov
mov
xchg
add
fsubrs
mov
cmc
aaa
sahf
inc
and
adc
mov
loop
loop
mov
iret
cmp
sub
mov
push
jo
pushl
and
add
call
jmp
insb
xchg
push
nop
cmp
cltd
repz
adc
jnp
fmuls
movsb
ja
or
cmpsl
popa
lret
xchg
mov
test
cld
pop
stos
loopne
pop
repnz
into
jmp
aam
sbb
test
push
addr16
mov
mov
sub
mov
push
testl
sbb
cmp
mov
cmpsl
xchg
int
adcl
mov
mulb
xchg
leave
mov
mov
mov
dec
cmpl
mov
int3
lea
popa
repnz
popa
sub
test
jo
lret
fwait
mov
cmpsl
jbe
js
insl
out
pop
arpl
dec
stos
and
push
mov
popf
fisttps
inc
adc
cli
subl
mov
cmpsb
or
jnp
xor
xchg
iret
cmc
in
jmp
sbb
xchg
outsb
repnz
jns
les
in
push
jecxz
push
push
dec
add
pushf
xchg
sbb
jp
insl
sti
pop
cmpsl
and
iret
xor
sub
dec
sbb
lods
push
cwtl
pop
sti
or
inc
adc
pop
adc
xor
int
js
and
inc
insb
pusha
cmc
add
pop
mov
int
or
popa
mov
rclb
stc
cli
lds
add
jp
cmp
xchg
inc
mov
push
lds
mov
test
gs
fs
imul
int
jnp
iret
pop
add
mov
lds
popf
lret
pop
leave
pop
add
jmp
ljmp
jno
outsb
and
test
in
mov
fsub
push
sub
cmp
inc
das
aam
les
jns
lret
das
lods
jae
adcb
les
in
mov
push
mov
add
test
call
lahf
mov
stos
mov
imul
popf
sbb
mov
jmp
testl
inc
in
out
add
dec
xchg
fistpll
rorb
mov
inc
aam
inc
or
xchg
aaa
popf
movsl
adc
loopne
orb
pop
pusha
pop
jl
sarb
sub
das
scas
sahf
sbb
mov
enter
pop
repz
add
inc
mov
aaa
movsl
fbstp
loope
ds
sub
imul
popa
jb
xchg
or
dec
mov
mov
fildl
dec
or
les
test
ljmp
mov
mov
into
xchg
outsb
negl
lahf
negb
aam
daa
lock
les
pop
mov
rcll
stc
cmc
inc
cmp
push
out
sub
dec
mov
mov
push
mov
and
cmpsl
orb
mov
jmp
pop
jmp
arpl
sub
std
inc
inc
adc
rol
xchg
out
xchg
jo
jo
repz
mov
mov
or
push
xchg
xlat
cmpb
push
add
pop
loope
shrb
jno
ljmp
pop
in
inc
push
mov
mov
push
test
dec
jecxz
sub
rcrl
cmp
xor
mov
dec
ds
mov
clc
jg
daa
in
adc
cli
repnz
mov
pop
stc
popf
mov
fs
leave
lret
adc
addl
jge
xchg
into
mov
mov
stos
cs
cmpsb
xor
fisubrl
jl
pop
push
test
xor
shlb
fnstsw
int3
xchg
sbb
mov
dec
push
int
jno
mov
repz
lahf
cmp
adc
loope
and
ljmp
vpor
push
fiadds
or
mov
mov
popf
repnz
mov
fcoms
xchg
test
daa
lods
jo
outsl
cmc
cmp
push
or
enter
jae
enter
rcrl
popf
inc
hlt
add
adcl
es
inc
inc
out
jbe
xchg
leave
pushf
cmc
or
mov
lods
xor
out
test
pop
stc
sahf
gs
addr16
addb
leave
xchg
add
jp
dec
push
mov
int
mov
ljmp
aam
fbld
stos
das
push
jns
xchg
stos
cli
pusha
fmull
jnp
aaa
adc
jbe
and
jmp
daa
xchg
faddl
push
cmp
hlt
inc
xchg
ljmp
dec
inc
loopne
sbb
or
or
mov
lret
adc
call
dec
pop
push
hlt
clc
pop
fists
mov
add
mov
jbe
sub
xchg
sub
jmp
inc
int3
out
dec
xchg
sbb
mov
hlt
pop
mov
push
pop
fisttps
rorl
dec
ss
xor
adc
sub
xor
pop
add
sub
cmpsb
cmp
jl
mov
jl
sbb
push
jno
cmc
fwait
add
inc
push
jno
mov
aam
xor
mov
cmpsb
repz
inc
cmp
xchg
das
lods
or
iret
jo
jge
fsubrs
sahf
mov
mov
clc
pop
nop
pop
mov
add
cmp
pop
and
dec
andl
xchg
rclb
jmp
cltd
add
out
test
test
fldt
push
adc
jmp
push
dec
adcl
loopne
push
mov
mov
push
lea
ja
jg
pop
push
add
dec
mov
and
push
popa
xchg
lds
mov
adc
inc
sbb
or
pop
pop
mov
ljmp
pop
and
test
into
mov
jae
call
sbb
dec
inc
fidivrl
cmp
pop
lret
arpl
mov
cmp
ficompl
ret
mov
stos
cs
pusha
dec
xchg
cmp
scas
xchg
cmp
pushf
popa
in
xchg
jg
fdivl
xor
cmc
insl
inc
adc
lock
popf
out
and
lret
and
xchg
add
insl
in
adc
sub
das
and
push
aas
xor
into
xor
ljmp
in
fistl
xor
add
jecxz
xchg
push
push
repz
sbb
cwtl
test
sbb
dec
adc
dec
enter
jecxz
neg
push
mov
push
or
jbe
pusha
dec
or
push
int3
clc
popa
aas
fwait
pop
in
jg
dec
into
mov
mov
cmovl
mov
push
data16
stos
sub
dec
movsl
cmp
jae
dec
movsl
lahf
adc
and
sbb
movsb
cmp
cwtl
jnp
mov
lods
push
aaa
clc
mov
pop
call
ret
loope
lods
xor
clc
fwait
cmp
xor
pop
jbe
out
in
outsl
scas
sub
xor
push
push
dec
lea
xchg
mov
pop
ds
fwait
sbb
sub
icebp
jecxz
test
in
sub
push
mov
mov
mov
test
out
push
loopne
add
or
dec
icebp
stos
jno
out
add
in
sbb
movsl
lods
icebp
adc
int
inc
adc
and
cmpsb
bnd
jbe
in
ret
pop
pop
fs
xchg
mov
xor
cmp
pusha
pop
add
or
xchg
jecxz
mov
sub
jnp
xchg
sarl
sbb
adc
or
dec
cmp
loop
adcl
lcall
cmp
sbb
dec
aas
pop
mov
daa
lds
cmp
scas
ljmp
sub
shr
imul
aas
into
xchg
push
mov
aaa
lahf
cmpsl
lods
or
sub
pop
add
cmp
sbb
cmp
enter
in
bound
test
or
pushf
or
out
jo
cli
and
sbb
in
repnz
dec
sbb
inc
int
js
stos
sub
arpl
pop
or
scas
push
jne
ljmp
sbb
sbb
loop
testb
aam
icebp
jge
and
or
push
jns
or
mov
mov
scas
xchg
cmp
loop
test
data16
loopne
in
jne
pop
jne
lret
mov
mov
cmp
out
mov
cld
das
test
push
iret
adc
sbb
jno
repnz
xor
pop
in
sub
pop
rolb
add
jl
jecxz
jp
and
mov
movsl
dec
or
fisubs
into
mov
and
in
push
out
and
xchg
push
cltd
sbb
and
mov
bound
xor
dec
xor
aam
mov
adc
jns
int3
xchg
imul
pop
push
insb
out
nop
dec
inc
or
inc
or
fsubrs
mov
stc
cli
data16
add
sbb
fsubrs
dec
shll
es
jge
push
xchg
pusha
mov
xor
mov
xchg
add
jno
lods
pop
dec
or
imul
call
clc
push
jmp
pop
mov
sub
rcl
popl
and
ret
xchg
gs
fwait
xor
inc
or
and
push
mov
xchg
cmp
jl
mov
in
jno
cmpsb
mov
inc
lea
sub
cmp
inc
adc
and
sahf
je
and
out
insl
jmp
add
jecxz
test
repz
pushf
cmp
dec
adc
jg
xchg
rclb
das
xchg
inc
mov
roll
popf
clc
xchg
push
enter
mov
pop
call
hlt
xchg
inc
cmpsb
stc
mov
add
lds
aas
sub
std
pop
pushl
in
add
xor
sub
out
ss
adc
in
flds
mov
hlt
pop
xchg
shl
jno
int3
dec
or
mov
fwait
stos
mov
xchg
mov
mov
out
push
sub
hlt
pusha
sub
inc
adc
cmp
mov
xchg
js
adcb
jno
sbb
inc
repz
bnd
adcl
cmp
push
ret
test
pop
sti
std
iret
mov
inc
loope
and
iret
and
imul
cmp
mov
cmpsl
jmp
in
pop
cld
cmp
rolb
loop
adc
into
roll
mov
movsb
jns
mov
dec
out
xchg
imul
jg
fs
arpl
pop
jbe
shll
dec
adc
fildl
cmp
mov
mov
ljmp
mov
nop
imull
cmp
mov
cs
dec
sub
int3
sahf
addr16
sbb
cmp
test
fdivrl
dec
or
movsb
pop
pop
sti
mov
test
xchg
cwtl
cmp
nop
lds
jbe
ljmp
jmp
dec
push
and
cmp
fiadds
xchg
test
iret
sbb
arpl
lods
dec
hlt
mov
mov
xor
leave
mov
dec
ds
mov
test
mov
mov
mov
inc
loope
mov
jg
lcall
ja
inc
loopne
test
hlt
hlt
push
and
mov
xchg
and
mov
sarl
mov
xor
mov
call
sbb
jl
fidivrs
addr16
hlt
sbb
in
in
push
ret
test
loopne
push
loopne
das
inc
mov
mov
mov
inc
push
stc
jbe
aad
into
mov
adc
mov
clc
rorl
cmc
in
sub
jmp
aam
sbb
negb
push
mov
jno
add
fnsave
xlat
in
ss
xchg
sub
movsl
test
push
lret
movsl
inc
sbb
xchg
xchg
jle
add
push
test
pop
add
sahf
jge
dec
cmp
rcl
lcall
jecxz
jl
je
loopne
shll
test
pop
lea
xor
mov
popl
xchg
movsl
imul
pusha
add
pop
mov
daa
mov
aam
in
xor
in
jmp
rolb
rcrb
sbb
inc
sbb
pop
push
jae
arpl
imul
inc
mulb
sahf
cmpsb
jnp
mov
mov
or
jns
jle
int
xrstor
mov
movsb
sub
inc
and
xchg
xchg
lahf
push
mov
jbe
mov
bound
ret
loope
icebp
pop
into
mov
in
adcl
leave
mov
inc
push
pop
cmp
mov
aam
inc
adc
das
and
rcll
inc
fidivs
ja
mov
and
ds
push
test
pop
cwtl
inc
orl
pop
add
mov
mov
fdiv
push
or
cli
rcrb
sbb
data16
aas
fwait
loop
mov
mov
xchg
cmp
xor
inc
loop
pop
pop
xlat
sbbl
dec
sbbb
and
dec
sarb
pop
sbb
push
xor
dec
getsec
mov
adc
ret
call
mov
or
repnz
lods
mov
push
pop
stc
rorb
xor
inc
nop
mov
sub
adc
jnp
dec
aas
cmpsb
fdivp
ss
jne
fadds
inc
xchg
sbb
int
or
jbe
pop
add
add
cmp
or
and
ja
leave
cmp
adc
push
out
push
add
dec
jg
cmc
mov
mov
iret
lea
and
sbb
hlt
and
fs
sbb
sti
pop
imul
ljmp
xchg
and
aas
pushf
movsl
movsl
jle
push
rclb
mov
in
xor
push
repz
or
pop
lock
sbbb
adc
xor
lcall
sbb
lods
push
aam
lods
mov
jnp
ss
or
mov
jns
cmp
xchg
or
fcmovnbe
aam
es
fnstenv
loop
dec
or
lahf
inc
mov
or
dec
fucomip
outsl
mov
sbb
dec
mov
filds
ss
sbb
jns
sub
pop
lods
inc
loopne
movsb
mov
aam
mov
mov
lods
out
popf
out
mov
inc
scas
cmc
mov
mov
mov
dec
fmulp
mov
xchg
push
mov
aas
xor
outsb
imul
lret
and
loope
or
mov
push
xor
and
xchg
ficompl
adc
fildll
stos
loop
sbb
mov
leave
mov
mov
push
loop
or
dec
lock
xchg
sub
cmpsb
loopne
xor
movsb
jl
in
jbe
jo
add
jne
lods
mov
and
les
inc
or
iret
cmp
adc
fs
lret
sbb
loope
std
ds
cli
push
loope
pop
lcall
sahf
popa
mov
mov
xchg
pop
icebp
lds
ds
out
mov
and
sbb
cwtl
inc
dec
dec
add
mov
push
pop
imulb
repz
loope
clc
fyl2x
leave
xchg
fisttpll
xor
loope
iret
jae
movsl
cwtl
inc
pop
adc
xor
out
insl
push
iret
sarb
pop
mov
lcall
adc
mov
movsl
aaa
jbe
lods
mov
mov
mov
leave
and
lret
ficoms
mov
pusha
cmp
enter
sub
xor
push
push
adc
mov
xorb
cmc
pusha
call
cmc
rclb
adc
sub
xor
push
loop
mov
mov
andl
daa
mov
xchg
xor
mov
mov
pop
les
jge
addr16
xchg
xchg
xor
hlt
in
push
jge
lock
faddl
sbb
add
testb
imul
cmp
adc
mov
sbb
mov
mov
andl
sarb
jno
adc
inc
orb
out
add
or
fidivrs
lcall
gs
jmp
jno
add
icebp
pop
cwtl
sub
push
dec
leave
jo
out
xchg
cmp
lret
xor
mov
sub
pop
arpl
iret
lea
mov
jo
movsl
xchg
adc
pop
imull
jb
pop
in
test
xchg
aas
mov
movsb
xor
sub
enter
ds
mov
and
mov
pop
stc
mov
push
push
filds
mov
mov
or
mov
xlat
fistpl
test
jno
in
ret
and
cmp
dec
addb
sbb
jns
sahf
mulb
aas
mov
lds
adc
les
jg
and
pop
ljmp
out
cmp
mov
pop
clc
pop
aad
jb
pop
jle
lods
lock
faddl
lock
pop
in
in
xor
jnp
push
aad
jmp
es
vmovsd
sbb
and
push
outsb
adc
add
pop
js
mov
into
scas
lods
movsl
mov
dec
adc
test
dec
inc
sti
and
and
ljmp
arpl
or
pop
cmpsb
pop
fadds
outsb
out
xchg
icebp
jbe
in
xchg
cmp
hlt
sbb
iret
pop
jmp
mov
sahf
adc
mov
cmp
cmpsl
mov
mov
mov
std
cmpsb
xlat
test
dec
pop
pop
sti
dec
pop
inc
xchg
std
fwait
xchg
aas
icebp
call
xchg
inc
out
roll
pop
in
xor
sub
jmp
or
adc
call
stc
addr16
sub
xchg
decb
lods
icebp
out
push
cli
mov
movsl
sub
fisubrl
mov
scas
or
outsb
pop
mov
or
outsb
repz
in
mov
sbb
cmp
inc
or
cmpsb
daa
mov
lods
divb
in
test
mulb
xor
int
pop
cli
rcll
inc
and
sarl
mov
sbb
jno
jle
xchg
cmp
outsb
aas
mov
lock
mov
rcr
outsb
push
mov
cli
ds
cmp
push
mov
push
lods
sub
cmp
and
mov
jne
in
inc
gs
pop
adc
pop
add
inc
push
and
sub
mov
jno
aas
ljmp
inc
pop
rcrb
mov
not
out
jno
enter
push
mov
enter
push
and
test
sahf
inc
int
and
imul
int
out
inc
jae
aaa
cli
pop
push
call
add
orb
addr16
push
dec
adc
add
mov
aaa
mov
pop
add
jg
ds
and
enter
fstl
add
jae
adc
arpl
into
ret
dec
outsl
pop
arpl
stos
je
xchg
adc
xchg
aas
cmpsl
and
dec
dec
in
sbb
add
imul
scas
in
mov
mov
mov
inc
jno
sarl
filds
sbb
mov
push
inc
shrb
and
or
scas
and
mov
leave
ds
sbb
inc
xchg
inc
jle
jbe
shlb
pop
adc
mov
pop
or
jno
lea
ret
lods
xor
scas
xor
push
outsb
in
lahf
inc
fwait
jle
lea
aad
inc
out
mov
mov
push
mov
mov
lea
xlat
xchg
push
xchg
aas
pop
ljmp
sti
add
leave
mov
pop
leave
lea
xor
push
jae
pop
mov
les
or
or
movsl
mov
mov
fucomi
jne
adc
xchg
mov
mov
dec
mov
cmp
std
fiadds
out
jmp
push
pop
mull
scas
in
repz
cmp
dec
aas
cltd
ljmp
dec
bound
loop
dec
adc
dec
pmaxsw
out
jne
add
push
adc
cs
inc
sub
jnp
shlb
push
scas
mov
fidivrl
fldl
mov
cmc
popf
inc
outsb
std
aaa
cmpsb
movsl
ja
inc
xchg
mov
out
lock
pop
shr
outsb
jmp
or
loopne
decb
cld
sub
scas
call
es
fistpl
mov
lahf
testb
mov
jecxz
rolb
inc
addr16
dec
mov
es
loop
xchg
sti
lods
inc
sub
ds
inc
aaa
in
mov
popf
inc
jecxz
mov
jnp
xchg
inc
adc
jmp
enter
jo
adc
adc
out
push
das
stos
or
push
mov
ss
test
rorl
mov
push
insb
repz
jnp
ret
cmp
inc
or
or
jbe
mov
and
test
lcall
shll
rcl
adc
sub
lods
aaa
cltd
shlb
jns
sbb
adcb
adc
and
lds
pop
clc
jecxz
and
or
sub
or
cmp
push
or
xchg
cmp
pop
sub
sub
mov
aas
push
cld
mov
mov
mov
leave
enter
cs
cmp
fwait
xor
mov
mov
stos
sub
lock
jns
ljmp
mov
movsl
cwtl
cmp
sbb
xlat
shrb
jle
jge,pt
push
scas
pop
push
std
adc
in
jne
inc
jns
pop
stos
pushf
aas
inc
push
xor
and
xchg
fdivrl
je
int3
cltd
cmp
xchg
fwait
cmp
sbb
add
push
mov
add
lea
pop
dec
or
push
jle
sub
mull
push
enter
and
mov
iret
rcll
adc
jge
cmpsl
inc
push
add
adc
cli
nop
cmc
pusha
push
out
mov
xor
lods
popf
in
addr16
mov
insl
ret
pop
imul
mulb
les
in
nop
inc
jp
lret
push
push
pushf
outsb
lds
je
xchg
imul
clc
push
dec
or
stos
xor
in
out
lods
inc
incl
xor
lret
int3
pop
sbb
jl
xchg
mov
jmp
repnz
cmp
mov
fsubrs
cmp
or
pop
in
xor
inc
mulb
cmpsl
adc
push
lret
hlt
inc
pop
int3
hlt
out
push
mov
loop
sub
mov
cmp
xor
notb
sbb
mov
cld
pop
push
mov
faddl
mov
mov
mov
push
push
adc
insb
insl
mov
xchg
roll
stc
fldl
cwtl
push
jb
xchg
rolb
jg
ficompl
inc
mov
or
repnz
inc
movsl
or
insl
sub
arpl
stos
sub
xchg
outsb
fdivs
sub
pop
sti
sub
into
xor
repz
sbb
jb
adc
in
imul
leave
xchg
movsb
push
add
dec
xchg
in
repz
push
sti
xor
xor
jmp
push
xor
sbb
push
mov
mov
jg
cmp
mov
sub
test
add
dec
fnstcw
xchg
aaa
mov
mov
ret
mov
test
test
ret
ds
lret
sti
lods
and
inc
ljmp
xor
and
and
inc
imul
push
cmp
add
addl
popa
mov
mov
pop
mov
ret
loopne
mov
pop
xchg
mov
pop
mov
add
movsb
xor
pop
insb
and
lret
bound
push
jmp
sbb
inc
or
xchg
add
xchg
jns
in
stos
xor
or
aad
clc
jns
mov
movsb
xchg
aas
fldcw
push
popf
mov
pop
mov
lods
dec
getsec
mov
sub
test
xchg
cmp
xlat
dec
adc
pop
ja
mov
dec
adc
sub
inc
or
sbb
lea
mov
cmpsb
cs
test
fsubp
xchg
roll
cmc
sub
push
mov
int
sahf
inc
loope
push
int3
xor
ds
pop
mov
ljmp
orb
repnz
in
sbb
scas
xor
aad
aad
pop
xlat
jp
arpl
jnp
in
fwait
dec
lods
adc
iret
aas
das
jo
jnp
sub
outsl
pop
cmp
orl
cld
bound
and
aas
es
imul
or
mov
hlt
sub
mov
loope
data16
hlt
mov
cli
cld
pop
cld
xor
lret
mov
sub
out
dec
or
std
or
mov
rol
xchg
ret
nop
int
notrack
pop
add
es
popa
bound
mov
dec
flds
xchg
xor
nop
adc
rorl
jmp
mov
mov
pop
std
inc
or
pop
arpl
mov
jno
lahf
out
dec
jns
inc
jg
in
cwtl
sub
jge
push
jne
hlt
mov
or
cmp
dec
push
int
adc
stos
adc
jno
mov
test
lods
mov
loope
sub
mov
les
jb
xchg
mov
out
fidivrs
xor
les
daa
mov
lea
shlb
push
decl
shll
mov
out
hlt
pop
lock
inc
sbb
ja
stc
pusha
int
pop
add
mov
loopne
dec
movsb
mov
push
or
outsb
or
sbb
jno
std
pop
sbb
jle
jecxz
push
shll
xchg
outsl
dec
adc
cmp
lcall
fiadds
loop
cmpl
test
bound
in
inc
adcl
add
push
mov
push
out
or
cmp
outsb
add
mov
mov
scas
jl
loope
stos
inc
push
add
pusha
movsb
push
mov
jle
test
outsb
ficompl
push
popf
dec
sti
cmc
mov
dec
adc
out
mov
popa
clc
inc
repnz
out
bound
xchg
inc
insl
add
mov
xor
xchg
mov
leave
or
sbb
fidivl
cmp
clc
loope
in
ret
scas
xor
add
xchg
push
ljmp
jno
sub
pop
hlt
or
es
jnp
pop
mov
cltd
xor
shll
cmpb
insb
pop
lcall
stos
in
and
test
ds
fisubrl
xor
push
nop
popa
clc
shll
mov
les
xor
mov
dec
mov
inc
pushf
fcmovnu
jo
mov
testl
mov
add
xchg
shll
lret
and
push
or
cmp
push
test
lret
cld
lods
jge
fistps
pushf
xor
jo
popa
mov
ret
call
outsl
fcoms
pop
sahf
inc
stc
testb
dec
adc
jge
inc
sahf
xor
iret
or
push
out
pusha
adcb
inc
outsb
add
in
mov
movl
stos
inc
sbb
jb
cmp
pop
insl
lods
stc
nop
fisttps
sbb
adc
int
xor
mov
test
mov
jb
sub
pop
cmc
or
daa
jge
jl
pop
sahf
scas
inc
sarb
xor
sarl
xorl
or
test
lret
adc
insl
sbb
stc
mov
loopne
pop
adc
insl
add
xor
and
mov
inc
lcall
pop
out
sub
pop
movntq
jg
lods
mov
add
lret
add
push
jmp
cmp
pop
cmpsl
pop
pusha
testl
sbb
xor
outsl
lret
bound
ret
hlt
movsb
fsubrs
adc
testb
dec
adc
jnp
inc
fucomi
pushf
xor
int
arpl
cmp
pop
sbbl
jb
lahf
ss
mov
lds
stos
inc
sbb
jae
cmp
pop
imul
mov
loopne
fwait
adc
int
xor
mov
aad
inc
xlat
mov
jb
sub
pop
cmc
or
daa
jl
jl
pop
popf
scas
inc
iret
jl
xor
sarb
xorl
or
test
es
sti
cmp
sbb
enter
stc
mov
filds
add
xor
and
mov
inc
cltd
fcomp
jno
mov
clc
pop
push
out
inc
jle
lods
scas
popa
add
lret
add
jmp
aaa
je
pop
cmpsb
pop
pusha
testl
sbb
xor
outsb
lret
bound
shr
repz
or
sub
mov
jp
inc
fucomi
fwait
xor
int3
or
cmp
push
out
pop
sbbl
jno
lahf
ss
mov
les
push
ss
inc
pop
pop
fdivl
cmp
pop
push
cli
xchg
fisttpll
sbb
adc
int
xor
mov
aam
inc
xlat
mov
jb
daa
pop
cmc
pop
dec
nop
daa
jnp
jl
pop
pushf
scas
inc
into
jnp
xor
iret
mov
xorl
or
cmpsl
call
adc
imul
enter
stc
mov
fiadds
add
xor
and
mov
inc
cwtl
xlat
fidivl
mov
clc
pop
or
push
lods
scas
pusha
add
lret
add
push
jmp
ss
pop
movsl
push
pusha
testl
sbb
xor
insl
lret
bound
shr
repnz
or
daa
es
adc
jns
inc
fucomi
lcall
cmp
push
out
pop
sbbl
jo
lahf
ss
mov
ret
add
inc
push
push
fdivl
aaa
enter
cli
xchg
fmull
sbb
ss
xor
mov
roll
jb
es
cmc
push
dec
nop
daa
jp
jl
pop
fwait
scas
inc
int
lcall
into
mov
xorl
lahf
je
mov
enter
cmp
sbb
enter
stc
mov
fldl
add
xor
and
push
mov
stos
inc
xchg
fidivl
mov
clc
pop
or
jle
jl
lods
lods
pop
add
lret
pushl
push
ljmp
jno
movsb
push
pusha
testl
sbb
xor
int3
arpl
mov
fsubrs
adc
mov
and
inc
adc
ja
inc
fsubr
cwtl
xor
leave
or
ljmp
mov
add
loope
mov
roll
push
xor
stos
inc
adc
fnsave
enter
sti
xchg
fisttpl
sbb
or
and
rolb
jae
and
inc
xchg
sub
jl
push
lcall
stos
in
int
pop
int3
mov
xorb
outsb
push
xchg
or
movsb
in
mov
divl
inc
fsubrl
xor
dec
mov
mov
fildl
add
pusha
adc
push
mov
stos
inc
xchg
aam
jb
mov
pusha
jmp
or
jg
jp
scas
stos
pop
push
popf
mov
xor
mov
dec
add
xor
or
ret
nop
daa
cmc
movsl
jg
xlat
push
scas
inc
dec
clc
popf
xor
push
fs
dec
mov
sub
fnstenv
adc
mov
and
mov
jne
inc
fucom
xchg
xor
movl
push
call
mov
outsl
push
insb
lods
mov
and
add
push
xor
stos
inc
adc
xchg
leave
pusha
cmpsl
cld
xchg
flds
sbb
or
iret
jle
and
sarb
fsubrs
rcrl
add
sub
jge
push
cwtl
mov
lret
xor
lret
cld
ds
xorl
outsl
dec
xchg
or
mov
les
cmc
xor
xor
inc
xchg
push
sbbb
mov
mov
and
mov
lods
inc
xchg
rcr
jae
mov
popa
out
cli
xchg
push
or
cmpb
sbb
mov
ss
lods
and
in
dec
incl
xor
or
ret
hlt
mov
mov
inc
negb
gs
dec
mov
sub
fnstenv
ud2
mov
and
rclb
inc
fsubp
xchg
xor
lds
data16
aaa
out
call
mov
outsl
push
push
mov
and
inc
push
xor
stos
inc
adc
jne
xor
pusha
cmpsb
cld
xchg
fadds
sbb
or
jge
and
iret
jge
fsubrs
rcrb
add
jbe
jge
push
xchg
mov
leave
jne
xor
leave
mov
subl
outsl
dec
nop
or
mov
ret
adc
hlt
xor
frstor
xor
inc
xchg
addr16
call
or
mov
and
mov
lods
inc
xchg
rcr
jae
mov
popa
out
cli
xchg
push
pop
jmp
scas
test
pop
sahf
mov
ss
lods
and
in
dec
incb
das
outsb
jae
mov
rcll
aam
mov
inc
cmc
popf
xor
push
mov
sub
fnstenv
push
or
and
rclb
inc
fsubp
xchg
xor
les
push
call
mov
outsl
push
imul
rclb
stos
inc
adc
jne
xor
pusha
arpl
out
mov
sbb
or
iret
jl
and
into
jl
fsubrs
iret
pop
testb
xchg
sub
jge
push
xchg
mov
enter
cmpsb
jmp
mov
subl
outsl
dec
outsb
testb
ret
repz
fs
lret
fs
mov
push
call
or
mov
and
scas
pop
lods
inc
xchg
rcr
jae
mov
popa
in
cli
xchg
push
push
jmp
scas
cmpsl
pop
pop
sahf
mov
ss
stos
and
in
dec
std
inc
fisubrl
insl
jae
lahf
dec
popa
clc
add
sub
mov
mov
inc
hlt
popf
xor
addr16
gs
inc
mov
sub
fnstenv
or
testl
jno
inc
fsubp
xchg
xor
ret
add
std
xor
push
test
mov
outsl
push
push
mov
push
das
jne
xor
pusha
bound
jle
negl
mov
xlat
add
iret
jnp
and
int
inc
fsubrs
pop
idiv
inc
xchg
sub
jle
push
xchg
mov
jae
xor
mov
subl
dec
lea
mov
lahf
fildll
mov
repnz
bound
xor
inc
andl
push
jmp
pop
mov
mov
es
pop
lods
inc
nop
into
fdivl
mov
in
cli
xchg
push
add
sbb
mov
ss
stos
es
dec
cld
inc
fldt
dec
stc
jg
xchg
sub
mov
mov
inc
repz
xor
xchg
inc
mov
sub
fidivl
or
mov
push
pop
sub
aas
push
lods
jo
inc
fsubp
xchg
xor
ret
std
xor
push
jmp
xchg
mov
and
sub
dec
fidivs
das
lret
mov
call
mov
push
popf
pop
dec
cmp
jns
and
pop
lcall
stos
in
je
push
int
idiv
aas
xchg
sub
jg
push
xchg
mov
les
xor
in
gs
mov
subl
jno
mov
mov
sahf
mov
icebp
das
inc
frstor
xor
sti
mov
push
ljmp
jno
jmp
or
push
stos
pop
scas
inc
int3
fdivl
mov
arpl
pop
sti
xchg
push
add
xorb
or
cmc
test
mov
inc
cli
inc
fsubrl
imul
mov
sbbl
inc
icebp
lahf
and
xchg
inc
mov
test
xchg
or
cmp
stc
nop
sbb
sub
lea
dec
xor
xor
push
ljmp
jno
cmpsb
mov
es
fisubrl
jbe
sub
std
xchg
rolb
sbb
add
es
out
leave
js
fisubrl
lret
popa
clc
cld
cmp
adcb
nop
mov
ret
xor
adc
ss
test
mov
mov
pushf
fldt
rorb
scas
out
sub
ss
jg
cld
mov
push
jmp
roll
or
and
cmp
xchg
sub
ja
push
test
lret
cld
scas
int
loopne
cld
xchg
dec
add
xorl
sbb
test
cmp
repz
sub
inc
clc
inc
addr16
cltd
dec
fs
jnp
xchg
sub
pushf
sbbb
or
mov
addr16
inc
mov
test
xchg
fdivl
pop
or
xchg
sbb
ret
sbb
fisttpll
addr16
das
loopne
jmp
push
test
xor
movsb
mov
daa
mov
rcrl
scas
inc
or
jbe
sub
arpl
std
xchg
sarb
xorl
inc
cmp
jne
es
ja
fldt
lret
sti
cmp
sbb
mov
shrb
mov
ret
mov
test
fdivl
xchg
mov
fldcw
rorb
sbb
pop
getsec
into
inc
jge
cld
scas
popa
push
in
xchg
iret
sbbl
mov
or
and
sub
jne
push
cmpsl
pop
mov
mov
fnsave
into
fistps
cld
xchg
dec
add
test
outsb
sbb
test
cmp
icebp
movsl
sub
adc
inc
testl
xchg
dec
gs
jp
xchg
sub
fwait
sbbl
or
cmp
pop
shlb
inc
mov
test
xchg
fnsave
or
xchg
sbb
ret
sbb
fisttpl
sub
dec
test
xor
arpl
xchg
sub
fsubrs
jbe
sub
fs
pushf
std
xchg
into
jle
xorb
or
jae
daa
mov
lds
fsubl
leave
arpl
cli
cmp
sbb
mov
mov
adc
mov
test
je
test
mov
lcall
mov
sub
pop
push
cmp
aas
jnp
cld
lods
pusha
push
in
xchg
int
sbb
mov
or
and
sub
jae
push
movsl
pop
mov
mov
fidivs
stos
iret
data16
std
xchg
dec
in
test
insl
sbb
cmpb
rcl
pop
out
inc
cmc
inc
fisubs
fs
xchg
inc
gs
js
xchg
sub
cltd
sbbl
or
cmp
pop
shrl
aas
mov
xchg
xchg
fnsave
push
movsl
xor
push
sub
mov
sbb
fimull
push
in
push
dec
xchg
popa
mov
xchg
sub
scas
inc
or
ja
sub
fs
fwait
xchg
int
jmp
scas
out
sbb
pop
rorb
mov
jb
daa
mov
les
movsl
in
or
clc
cmp
dec
mov
aaa
sahf
addr16
mov
test
fnsave
or
mov
sti
xchg
cwtl
sub
pop
mov
dec
fistps
cmp
cmp
pop
push
in
int3
test
mov
or
pop
mov
sub
push
mov
mov
fbstp
test
xchg
dec
cld
in
test
insb
sbb
popf
dec
or
out
mov
pop
lock
repz
fisubs
ja
xchg
inc
gs
jbe
xchg
sub
xchg
sbbl
or
sbb
shrb
cmp
lock
nop
fnsave
xor
sti
xchg
adc
sbb
imul
or
xchg
subb
cmp
adcb
es
inc
push
dec
loope
jp
int
pop
fwait
call
lods
out
sbb
mov
jno
sub
ret
jb
frstor
lds
aaa
xchg
sub
pop
sbbl
mov
cmp
mov
xchg
fidivs
orl
xchg
aad
ret
sbb
pop
or
sarb
jns
stos
pop
push
out
lret
test
push
movsb
cmp
xchg
sub
jno
pop
mov
loopne
mulb
call
sub
sbb
mov
out
lahf
sub
rorb
pop
icebp
inc
icebp
dec
fbld
bound
xchg
inc
data16
je
xchg
sub
or
cmp
pop
shrl
cmp
push
insl
scas
icebp
mov
mov
jne
add
cmpsl
xor
cld
xchg
adc
lds
cmpsl
dec
jecxz
xchg
iret
mov
push
sub
push
in
or
pop
jg
je
pop
mov
xchg
sub
shlb
jns
and
add
stos
in
push
mov
int3
or
outsl
push
sub
dec
nop
pop
icebp
shll
mov
ret
gs
hlt
xor
test
inc
mov
lcall
push
out
lock
fbstp
orl
xchg
xchg
shrl
add
sbb
push
or
sarl
ja
ljmp
leave
xchg
ficomps
sub
jo
pop
mov
ret
loope
cmc
movsl
shlb
push
add
sub
mov
dec
or
jl
cmp
in
popf
sub
into
or
dec
fbld
pusha
jns
xchg
inc
data16
jb
xchg
cs
test
lds
mov
cmp
mov
imul
mov
mov
jne
add
test
xchg
adc
movb
in
test
iret
mov
imul
xlat
push
in
or
and
je
pop
sahf
cmpsl
sarb
scas
icebp
lds
mov
add
jp
and
gs
cwtl
add
test
pop
mov
lret
sti
cmp
aam
sbb
rorb
repnz
loopne
adc
shll
xor
sbb
mov
mov
push
mov
icebp
mov
fbstp
jg
cmpsb
mov
std
xchg
xchg
shrl
mov
and
push
push
cmp
aaa
jne
add
enter
stos
jbe
fcompl
cmpsb
cmp
das
outsl
les
push
mov
add
jns
mov
add
sub
mov
dec
or
jp
cmp
ror
pop
repz
pop
jp
xchg
aas
data16
jo
cwtl
das
in
test
ret
add
mov
insb
mov
rclb
repz
mov
jne
call
test
fdivrp
xchg
adc
movb
dec
in
cmpl
mov
imul
push
in
pop
dec
mov
jl
je
pop
popf
cmpsl
ds
jnp
sub
iret
mov
add
jbe
into
gs
xchg
add
cmpsl
jmp
or
insb
sbb
rorb
mov
fistpll
adc
gs
icebp
xor
sbb
dec
mov
mov
push
mov
icebp
mov
fbstp
jle
cmpsb
scas
pop
std
xchg
xchg
shrb
mov
and
push
add
imul
mov
xchg
stc
test
cmpsb
cmp
outsb
les
dec
mov
add
shlb
adc
cwtl
inc
cmc
out
test
addr16
mov
dec
or
jns
cmp
ror
pop
repz
dec
fistps
ds
outsl
mov
das
jecxz
test
ret
dec
ss
cmp
rclb
repz
jbe
call
mov
push
cmp
hlt
into
int3
push
adc
pop
xlat
cld
aaa
add
addl
cmp
xchg
ret
dec
xor
mov
sarl
inc
stc
lea
aas
test
mov
xor
mov
subl
push
imul
jbe
notl
mov
xor
lahf
mov
out
mov
mov
pop
cmp
add
out
in
adc
cmpsb
xor
inc
pop
scas
pop
mov
mov
or
hlt
test
sbb
or
xchg
cmp
adc
xchg
dec
push
cmpsb
lods
push
jae
lret
aaa
mov
das
shll
adc
inc
imul
daa
loope
movsb
stos
jb
dec
and
xchg
xor
xor
push
sub
outsl
xor
dec
jmp
or
shrb
imul
and
lret
imul
je
sbb
shlb
xor
pop
jp
xchg
clc
and
cs
sbb
movsl
out
scas
cs
jb
adc
test
loope
pushf
pop
xchg
pop
jmp
mov
inc
mov
int
cld
cld
int
pop
cld
cmp
scas
jge
pop
jno
dec
cmpsl
in
sbb
rolb
je
add
jg
cli
mov
out
out
jae
or
sahf
rcrb
ss
mov
mov
jle
sbb
and
out
in
in
cmp
mov
jne
push
adc
sbb
xor
repz
in
js
inc
sbbb
insl
or
fsts
mov
and
mov
adc
jmp
add
lock
push
ret
fnstenv
lock
sbb
dec
or
aas
push
mov
daa
shr
xlat
xchg
or
dec
fs
adc
xor
cmpsb
xchg
outsl
in
pop
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
sub
arpl
sti
aas
dec
xor
cmp
outsl
mov
stos
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
jnp
push
mov
rolb
pop
loope
push
add
cmp
popa
int
pop
test
xor
pop
cltd
jae
inc
and
adc
adc
mov
push
pushf
jb
inc
scas
orb
cmpsb
mov
pop
mov
adc
adcb
enter
je
jae
sbb
shl
dec
cli
negb
pop
ret
sub
mov
icebp
or
adc
lcall
ret
icebp
sarl
das
add
gs
out
mov
shlb
sub
adc
mulb
icebp
fnstenv
pushf
popa
add
pop
jp
push
xchg
pcmpgtd
xchg
add
sub
ja
nop
push
es
cmp
mov
xor
fstpl
xorb
xor
icebp
lahf
scas
mov
inc
arpl
adc
sub
xchg
popa
xor
mov
or
and
fbld
sbbb
cld
icebp
rcl
test
insb
jp
cmp
mov
dec
repnz
aad
push
add
ss
test
adc
fbld
cmp
popa
mov
aas
insl
loopne
sbb
push
mov
mov
into
js
scas
pop
xor
or
sbbb
roll
out
push
dec
xchg
mov
enter
fiadds
and
enter
rcrl
in
sbb
loopne
mov
movsb
popa
int3
int3
xchg
mov
test
and
push
add
imul
dec
add
ljmp
xlat
inc
pop
mov
xchg
aas
pop
repnz
scas
dec
mov
mov
aaa
pop
xchg
and
decl
jg
dec
sub
sbb
out
jmp
and
mov
push
repz
jmp
mov
dec
dec
std
xchg
pop
sub
fists
idivb
cmp
outsb
jo
push
sbb
mov
xlat
lods
mov
fsubrl
adc
