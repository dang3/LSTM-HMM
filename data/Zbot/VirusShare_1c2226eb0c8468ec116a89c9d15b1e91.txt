push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
lea
push
mov
push
push
call
test
jne
mov
jmp
jmp
push
push
push
call
add
push
push
call
xor
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
movb
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
sub
mov
mov
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
outsb
je
outsl
insb
push
gs
inc
outsb
jne
pop
push
outsl
outsl
je
inc
inc
push
dec
pop
dec
inc
dec
add
xor
dec
jo
xor
gs
add
add
add
xor
xor
push
push
push
dec
inc
push
push
push
dec
dec
add
add
add
dec
xor
inc
add
jns
jae
je
xor
xor
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
xor
add
add
call
xor
add
xor
add
add
and
add
xor
add
xor
add
add
add
add
add
add
add
add
or
add
and
add
xor
add
xor
add
add
add
add
add
add
add
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
insb
outsl
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
pop
add
int3
pop
add
cmp
xor
imul
xor
pop
add
mov
popa
sbb
data16
data16
data16
data16
cmp
cmp
gs
lods
insl
cmp
adc
push
fs
aas
pop
add
les
add
push
xor
push
xor
push
xor
push
imul
lea
xor
call
xor
push
pop
xor
imul
xor
addr16
xor
addr16
xor
addr16
dec
push
fdivs
repnz
shll
xor
outsb
dec
xor
outsl
gs
outsl
jnp
add
mov
outsb
lods
xor
outsb
les
outsb
iret
xor
outsb
fnstenv
outsb
in
jbe
clc
xor
outsb
add
repnz
pop
xor
xor
xor
and
xor
mov
insb
sub
ss
pop
mov
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
add
add
dec
inc
add
xor
jb
xchg
sub
add
xor
sub
jl
add
xorb
jb
sub
pop
or
je
pop
jne,pt
sub
popa
outsb
and
gs
les
add
sub
sbb
inc
imul
sub
cmp
pop
add
add
je
add
xor
outsl
repz
inc
imul
sub
les
add
je,pt
mov
jne
mov
ss
les
add
push
inc
add
push
inc
add
push
inc
add
inc
add
add
add
xor
push
daa
add
adc
or
bound
sub
add
add
das
jb,pt
and
xor
loop
insb
insb
les
add
daa
jbe
imulb
cs
add
fnstcw
add
jmp
cs
add
mov
insl
arpl
jb
mov
insb
inc
mov
outsl
arpl
pop
add
jp
jb
xchg
cmp
outsl
arpl
pop
add
cltd
xor
popa
je
imul
pop
adc
insl
ss
jb
push
cmp
xor
daa
add
cld
aaa
popa
jo
das
insb
outsl
daa
pop
add
das
cmp
sub
xor
fidivl
insb
insb
les
add
cmp
xor
imull
add
les
add
negb
les
add
les
add
les
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
stos
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
enter
mov
dec
jmp
pop
add
enter
push
add
inc
pop
add
xchg
pop
add
pop
add
pop
add
mov
add
out
add
sbb
jmp
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
push
add
xchg
lahf
jmp
pop
addl
pop
dec
add
pop
pop
adc
insl
dec
add
insl
pop
add
dec
pop
add
pop
pop
add
sub
hlt
add
pop
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
add
dec
add
cmp
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
les
add
les
add
les
add
les
add
les
add
les
add
les
mov
lcall
mov
add
mov
add
mov
add
push
add
fs
pusha
popa
js
add
les
and
les
or
les
add
les
add
les
add
bound
les
sub
pop
jmp
daa
les
rol
pop
jmp
add
les
add
pop
test
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
popf
push
add
popf
push
add
lods
push
add
lods
push
add
popf
push
add
popf
push
add
insl
push
add
insl
push
add
pop
push
add
pop
push
add
insl
push
add
insl
push
add
pop
push
add
pop
push
add
sub
push
add
sbb
push
add
sub
push
add
add
push
add
in
push
add
in
push
add
fstl
add
push
add
in
push
add
in
push
add
fstl
add
push
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
add
addl
les
add
sbb
std
mov
add
dec
mov
add
mov
add
mov
add
jno
add
dec
mov
add
push
mov
mov
pop
push
mov
pop
movsl
mov
pop
sarl
pop
aad
pop
jno
add
pop
jne
pop
xchg
mov
pop
sbb
mov
pop
idivl
pop
lods
mov
les
ret
pop
gs
pop
xchg
pop
ret
sub
ret
pop
in
pop
movsl
ret
jmp
ret
add
add
pop
add
pop
add
add
pop
add
pop
add
test
test
test
test
xchg
test
pop
add
jp
add
pop
add
and
sbb
jae
add
arpl
pop
pop
add
pop
add
imul
pop
add
xor
add
sub
add
pop
add
add
movl
add
add
inc
movl
add
add
aas
movl
add
leave
add
mov
int3
add
ror
add
cmp
add
jg
add
xchg
leave
add
pop
leave
add
icebp
int3
add
jno
add
test
add
stc
int3
add
add
int3
add
and
add
and
add
or
add
out
add
mov
add
les
add
sbb
mov
ljmp
add
fbstp
add
shll
les
mov
les
ret
add
xlat
ret
add
jne
add
leave
ret
add
lret
ret
add
fwait
ret
add
lahf
ret
add
out
add
xor
add
aam
repz
les
aam
les
scas
add
imul
aas
lods
add
pop
xchg
stos
pop
jg
pop
popa
stos
pop
dec
stos
pop
push
stos
pop
pop
stos
pop
daa
stos
pop
imull
pop
out
stos
pop
xchg
stos
pop
jg
pop
cmpsl
stos
pop
lods
stos
add
pop
xor
pop
mov
pop
shrl
pop
popf
test
pop
add
pop
out
test
pop
or
pop
pop
lods
pop
aas
lods
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
sbb
das
xor
imull
pop
add
add
pop
add
sbb
jmp
pop
add
pop
pop
add
outsl
pop
add
pop
add
pop
add
pop
pop
add
das
pop
add
and
std
pop
pop
add
das
pop
add
adc
adc
pop
add
adc
push
jp
add
pop
add
jb
add
push
int
add
add
push
int
add
pop
int
add
iret
add
jecxz
add
adc
add
imul
add
stc
test
add
adc
add
mov
push
add
xchg
push
add
fistps
add
lds
add
adc
add
add
add
rcl
add
roll
add
roll
add
mov
roll
add
out
mov
add
leave
mov
add
stos
mov
add
mov
add
mov
add
popf
mov
add
ret
mov
add
ud1
les
mov
add
add
addr16
add
addl
les
mov
add
les
rolb
cltd
rolb
mov
add
mov
rolb
pop
add
pop
add
pop
arpl
pop
and
pop
aaa
rol
or
pop
idivl
pop
iret
mov
pop
das
rol
dec
rol
imul
pop
test
pop
jge
pop
addr16
pop
popf
rolb
add
add
pop
stc
rol
ret
rol
pop
das
rol
or
pop
stc
rol
imul
pop
insl
rol
ja
pop
cltd
rol
sub
pop
cltd
ret
add
xchg
or
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
pop
add
add
add
add
add
pop
add
pop
pop
add
xchg
xchg
xchg
sbbb
pop
add
sbbb
pop
add
sbbb
pop
add
pop
add
sbbl
fistl
add
icebp
xchg
add
mov
xchg
add
push
xchg
add
imul
add
gs
add
add
xchg
add
icebp
xchg
add
and
add
mov
add
fwait
add
sbbl
add
cltd
add
xchg
cltd
add
mov
add
movsl
cltd
add
xor
iret
add
cmp
add
pop
pushf
add
pop
pushf
add
dec
fwait
add
dec
fwait
add
les
add
push
ret
add
les
ret
add
push
ret
add
add
add
xchg
aam
les
add
addl
add
pop
roll
les
roll
les
rolb
les
roll
les
add
xchg
rolb
les
roll
icebp
roll
les
roll
les
roll
les
roll
fstpt
add
test
add
les
roll
les
add
pop
int
pop
pop
jmp
add
fcmovu
add
fcmovbe
add
add
fisubl
pop
cmpl
ficompl
mov
fimull
mov
pop
pop
mov
add
add
add
fidivrl
mov
pop
cmp
add
fcmovu
add
add
add
fimull
mov
pop
and
fimull
add
fiaddl
aaa
cmp
in
pop
sbbb
pop
sub
pop
add
jne
add
adc
pop
add
pop
add
negb
cmp
negb
aas
negb
and
push
pop
add
push
pop
add
adc
pop
add
pop
add
sbb
pop
add
or
add
jl
add
jnp
add
pop
pop
add
pop
add
popf
pop
add
popf
pop
add
push
dec
cmp
or
movsl
in
pop
testb
push
jae
fwait
scas
push
addb
add
dec
cs
es
mov
jl
rep
arpl
inc
outsb
pop
ficoms
and
insb
pop
jbe
ljmp
mov
sub
test
mov
and
rclb
jne
ds
les
mov
add
flds
push
sub
dec
add
add
cld
mov
inc
sbb
call
adc
sub
mov
mov
aam
sbb
and
dec
and
cmp
ja
jno
xchg
sti
lea
repz
xor
xchg
adc
mov
sub
jle
xchg
lahf
push
mov
jge
fisttpl
push
fadds
jge
add
movsl
idivl
scas
xchg
lea
insb
push
xchg
les
push
jo
insb
jno
les
daa
xchg
adc
push
jne
xchg
popf
les
imul
les
jb
pop
addl
mov
xor
outsb
jo
insb
jno
les
add
mov
call
push
add
les
enter
clc
outsb
cwtl
adc
pop
add
pop
add
mov
lea
pop
shrb
shlb
std
sub
stos
adc
cmp
test
dec
stos
adc
xchg
in
inc
or
dec
andl
push
add
loope
fidivrl
pop
shrb
call
adc
adc
fldl
add
dec
dec
add
mov
jbe
push
rcll
adc
mov
and
rclb
into
adc
adc
push
rcll
push
mov
shlb
mov
pop
movsb
nop
inc
add
pop
add
xchg
icebp
dec
addr16
nop
cs
jb
std
incl
adc
jo
add
xor
std
ljmp
gs
add
xchg
cs
les
scas
popa
jo
shlb
cmp
xchg
das
lret
add
push
sahf
mov
lahf
rolb
mov
mov
aam
add
mov
mov
test
aaa
sbb
and
push
imul
jnp
mov
aad
add
mov
add
stos
mov
mov
std
call
mov
js
popa
shlb
rcl
pop
xchg
lret
cs
jmp
std
add
pop
in
rcrb
enter
pop
pop
in
add
pop
stc
add
pop
or
pop
pop
in
ret
add
in
add
pop
flds
aam
jns
pop
pop
icebp
add
jns
pop
pop
icebp
add
pop
imul
xchg
add
pop
imul
xchg
add
add
pop
pop
add
pop
add
pop
adc
sbb
jmp
pop
add
pop
add
mov
push
aad
or
fcmovne
gs
mov
dec
add
enter
lret
jmp
iret
cmp
jmp
mov
fiaddl
jmp
enter
lret
jmp
iret
bound
jmp
add
inc
add
mov
inc
add
enter
lret
jmp
in
push
sub
in
push
mov
fstl
add
push
mov
in
push
dec
add
push
lock
pop
add
fstl
add
push
jecxz
mov
add
push
xor
lods
push
enter
or
add
and
insl
push
test
pop
push
add
add
test
insl
push
inc
add
call
add
pop
add
push
cwtl
add
pop
push
add
push
cmp
sub
jg
pop
les
insb
les
sub
jno
mov
les
mov
jno
dec
les
clc
les
or
jno
adc
scas
or
les
jb
les
xor
jno
les
or
jno
and
jno
movsb
les
add
jno
add
or
jno
in
addl
les
sbb
jno
xchg
les
or
pop
jmp
or
pop
sti
add
pop
jmp
or
pop
jmp
or
jmp
add
mov
or
pop
stc
add
pop
jmp
or
pop
sub
pop
fiaddl
pop
jmp
or
pop
jmp
add
pop
jmp
or
pop
jmp
or
jmp
or
stc
add
pop
jmp
or
pop
jmp
ffree
std
call
iret
inc
add
add
gs
iret
lock
call
mov
push
add
iret
rolb
jmp
sarb
pop
add
iret
sub
jmp
mov
popa
add
iret
or
jmp
rcrb
iret
sti
call
sarb
iret
fildl
jmp
sarb
pop
add
iret
and
add
dec
xchg
add
pop
cmp
sub
push
cmp
sbb
pop
adc
in
push
imul
fisttpll
add
push
or
in
push
mov
in
push
dec
add
dec
repnz
pop
add
lods
push
push
add
push
add
mov
add
push
xor
add
add
add
add
and
add
add
add
inc
add
ljmp
jno
pop
les
sbb
les
or
jno
cmp
les
or
jno
sub
les
or
les
dec
les
cli
les
or
les
adc
cmpsb
or
les
jae
jno
xor
jno
mov
add
les
arpl
jno
and
jno
cmpsb
les
add
jno
add
jmp
or
stc
add
pop
jmp
or
pop
jmp
add
pop
jmp
or
pop
sti
add
pop
jmp
or
lahf
pop
jmp
or
pop
jmp
or
jmp
add
pop
jmp
or
pop
sub
pop
fiaddl
xlat
pop
jmp
or
pop
jmp
add
pop
jmp
or
pop
add
iret
push
add
iret
aad
jmp
mov
push
add
iret
sbb
add
add
stc
call
mov
pushf
add
les
jmp
mov
mov
add
iret
int
jmp
mov
jge
jmp
mov
or
or
jmp
mov
push
add
iret
cli
lcall
and
pop
dec
mov
add
insl
push
add
insl
push
addb
push
inc
add
loope
cmp
push
pop
add
dec
xchg
add
jnp
add
push
cmp
sbb
jnp
add
push
push
add
dec
mov
in
push
or
in
push
mov
fstl
add
dec
icebp
add
push
push
add
push
jecxz
jle
sub
add
push
xor
popf
dec
leave
add
cmp
les
les
and
jno
test
les
test
jno
inc
les
jmp
les
pop
les
sbb
jno
cltd
les
or
or
jno
fld
jg
push
les
insb
les
sub
jno
mov
les
mov
les
dec
les
stc
les
or
jno
adc
cmpsb
or
les
jb
pop
jmp
or
pop
jmp
or
pop
jmp
or
jmp
or
pop
stc
cld
ret
or
pop
jmp
cld
xchg
or
into
pop
jmp
cld
pop
jmp
or
pop
jmp
or
pop
jmp
or
pop
jmp
or
pop
sub
pop
add
cwtl
sub
call
into
cmpsl
add
js
add
mov
inc
add
into
movl
jmp
mov
into
xchg
stc
cmp
jmp
mov
xlat
add
sbb
call
mov
xchg
add
clc
push
add
mov
dec
add
into
mov
jmp
mov
daa
add
shlb
iret
pop
add
scas
or
add
jne
add
pop
add
jne
add
ret
jge
or
pop
jne
add
and
insl
jbe
add
add
pop
jne
add
inc
add
fs
add
jne
add
arpl
add
jne
add
jne
add
arpl
add
je
add
je
add
jne
add
je
add
je
add
je
add
jno
add
les
sti
adc
xchg
sti
add
xchg
or
les
sti
xor
cmp
or
les
cld
stos
les
sti
test
cmp
ljmp
sti
pop
les
cld
lcall
sti
jl
cmp
fcmovb
jae
pop
les
add
add
cmp
mov
les
jmp
cli
mov
pop
jmp
sti
mov
aam
xchg
or
pop
jmp
sti
mov
jmp
or
pop
jmp
cli
and
sti
pop
jmp
sti
xchg
cli
and
or
pop
jmp
sti
add
pop
fisttpll
xchg
sti
mov
sti
mov
pop
sti
or
pop
jmp
sti
scas
pop
jmp
jmp
iret
jecxz
jmp
mov
pop
add
scas
or
add
cwtl
jbe
fidivrl
call
jle
add
mov
std
call
add
add
dec
pop
add
dec
fldl
jmp
test
stc
mov
adc
add
push
aad
fnstsw
call
xchg
add
mov
add
add
jno
add
jo
add
jno
add
jno
add
jbe
add
bound
add
adc
cmpsb
bound
adc
insb
bound
add
bound
js
add
bound
add
add
andl
and
or
ja
add
inc
bound
add
bound
add
bound
sbb
popa
pop
add
popa
add
add
add
popa
add
jae
add
imul
xchg
or
les
or
add
mov
add
jae
rol
or
les
adc
outsl
add
les
pop
les
push
les
add
les
add
xchg
add
jnp
add
xchg
add
les
add
les
add
les
add
les
add
les
add
les
add
add
pop
jmp
les
add
pop
jmp
les
add
pop
ljmp
pop
ljmp
pop
in
add
pop
in
les
add
pop
in
les
add
pop
in
les
add
pop
in
les
add
pop
stc
repnz
loope
mov
pop
cmc
add
pop
out
add
pop
jmp
add
pop
jmp
add
les
add
pop
call
add
pop
jmp
les
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
sub
pop
add
sbb
pop
add
in
pop
add
fstpl
add
pop
add
in
pop
add
out
pop
add
ficomps
add
pop
add
lods
pop
add
mov
or
and
add
loope
or
inc
push
or
mov
or
inc
push
or
add
add
or
rcll
icebp
push
or
mov
or
xor
add
push
or
push
pop
or
mov
or
das
pop
or
lahf
push
or
lds
or
inc
add
les
or
in
or
movsl
add
les
add
cmc
add
les
add
add
xor
add
les
add
les
or
imul
jmp
or
cmp
les
add
lret
add
les
add
les
add
fildl
or
sub
les
add
les
add
les
or
jmp
or
pop
out
add
scas
add
pop
daa
add
int3
pop
mov
pop
iret
add
pop
inc
add
pop
incl
mov
pop
mov
add
pop
mov
add
testl
mov
pop
daa
add
pop
lahf
add
pop
pop
add
pop
popl
pop
inc
add
pop
mov
add
pop
jg
mov
pop
scas
add
pop
movl
add
add
bound
outsl
shlb
bound
push
bound
sub
bound
or
bound
mov
bound
enter
dec
shlb
bound
js
bound
mov
shlb
bound
cmp
bound
js
bound
clc
bound
lock
bound
jo
bound
and
bound
mov
enter
add
bound
inc
enter
bound
add
bound
add
add
enter
bound
add
or
xor
or
mov
or
and
add
pop
or
loopne
or
rclb
inc
pop
or
adc
add
pop
or
jo
or
and
add
pop
or
nop
pop
or
add
or
mov
or
mov
push
or
call
push
or
mov
push
or
or
add
push
or
enter
call
es
les
add
les
add
les
or
incb
or
jo
or
jo
or
lock
lock
rolb
or
rolb
les
or
les
or
nop
add
les
add
les
add
or
lock
les
or
jo
or
push
add
clc
add
clc
add
les
add
les
add
or
mov
rolb
mov
pop
inc
add
pop
inc
add
pop
adc
pop
addb
pop
addb
add
add
pop
add
int
jb
mov
pop
mov
add
pop
adc
pop
loop
int
push
add
pop
push
add
pop
addb
pop
addb
repnz
pop
out
int
outsb
add
pop
add
pop
es
pop
add
popa
add
add
popa
add
popa
add
popa
add
popa
add
shlb
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
shlb
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
push
add
push
add
push
add
push
add
add
push
add
push
add
push
add
rcrb
add
pop
or
push
pop
or
xchg
pop
or
xchg
pop
or
add
add
pop
or
rcrb
add
or
mov
or
ret
add
pop
or
xchg
pop
or
mov
pop
or
bound
add
pop
or
ret
add
pop
or
add
add
jb
or
sbbb
pop
or
inc
pop
or
mov
or
mov
pop
pop
add
pop
pop
add
push
add
les
add
les
add
les
pop
les
add
les
pop
les
add
les
add
les
pop
les
add
les
add
les
pop
les
add
add
lahf
add
les
add
les
pop
les
add
hlt
add
les
or
xchg
add
les
or
aam
or
push
add
les
add
pop
stc
add
pop
loope
leave
pop
icebp
add
pop
in
add
pop
aad
rcrl
leave
pop
int
rcrl
leave
pop
sti
add
pop
jecxz
leave
pop
repz
rcrl
leave
pop
xlat
add
pop
out
leave
pop
iret
add
pop
call
add
pop
loopne
leave
pop
lock
pop
in
add
pop
aam
rcrl
leave
pop
int3
add
pop
ljmp
pop
loop
leave
pop
repnz
pop
out
add
pop
add
pop
add
enter
ret
pop
add
out
pop
pop
loope
push
or
mov
into
push
or
into
push
or
rcll
push
or
rcll
leave
push
or
rclb
mov
push
or
enter
ret
push
or
mov
push
or
lret
push
or
ret
push
or
mov
push
or
lret
push
or
ret
fdivrl
push
or
in
push
or
add
test
or
push
mov
fwait
dec
push
push
stos
dec
push
push
stos
dec
push
push
imul
dec
push
push
imul
dec
push
push
mov
pop
dec
push
push
imul
dec
push
push
imul
dec
push
push
sub
sub
dec
bndldx
cvtpi2ps
cvtpi2ps
pminsw
psubd
pminsw
sldt
add
add
dec
dec
pminub
pminsw
pinsrw
test
psrlq
lret
je
movnti
adc
adcl
adc
mov
adc
pop
rorl
sbb
mov
sbb
sbb
lods
push
sbb
jp
sbb
jp
sbb
mov
sbb
into
mov
sbb
pop
sbb
scas
imul
sbb
jns
sbb
jns
sbb
mov
sbb
mov
sbb
inc
add
scas
inc
repnz
aas
loop
fistpll
loop
iret
aas
aad
enter
rolb
mov
inc
cmc
pop
test
in
pop
loopne
in
fadds
pop
rolb
pop
enter
add
inc
add
pop
mov
cmc
pop
test
in
pop
loopne
in
fadds
pop
rolb
and
inc
int3
and
inc
add
mov
inc
hlt
and
inc
in
flds
and
inc
add
movsb
inc
sbb
add
inc
sbb
hlt
movsb
inc
sbb
in
inc
sbb
jmp
int3
pop
pop
icebp
add
push
or
mov
push
or
rclb
test
push
psubusw
dec
adc
mov
adc
mov
adc
mov
adc
mov
adc
aad
adc
aam
adc
aam
adc
rorl
aad
dec
adc
mov
adc
mov
dec
adc
add
dec
adc
adc
sti
dec
push
push
fisttpl
add
dec
push
push
lret
pop
mov
inc
pop
pop
lcall
sbb
sbb
lds
sbb
lds
sbb
xchg
inc
sbb
jne
sbb
gs
sbb
gs
sbb
xchg
inc
sbb
je
sbb
les
sbb
inc
sbb
push
inc
sbb
xor
sbb
and
sbb
and
sbb
pop
inc
sbb
testl
sbb
inc
sbb
add
insl
sbb
fisubrs
sbb
jge
sbb
jge
sbb
mov
sbb
pop
sbb
scas
pop
sbb
scas
insb
sbb
fildll
fistpll
iret
jl
sbb
jae
add
jb
add
jne
add
je
add
outsl
add
les
add
jno
add
js
add
jnp
add
jge
add
add
les
add
arpl
add
les
add
jnp
add
jg
add
xchg
add
les
sbb
pop
and
pop
test
add
pop
leave
add
pop
mov
add
pop
mov
pop
sub
pop
or
pop
jmp
add
pop
jmp
add
pop
jmp
les
add
pop
in
add
pop
out
les
add
pop
fldl
add
pop
flds
les
add
pop
or
pop
stc
add
pop
sub
pop
or
pop
imul
les
add
pop
imul
pop
add
ret
jmp
lds
jmp
ret
pop
add
xlat
pop
add
iret
pop
add
out
jmp
xchg
jmp
pop
add
pop
ja
add
push
out
inc
adc
shlb
push
pop
imul
sbb
sti
call
sbb
push
test
jle
out
test
jno
mov
insb
pushf
test
out
mov
nop
or
and
mov
test
ficompl
inc
mov
shl
loop
rolb
lods
out
push
pop
movsb
std
add
mov
pop
add
xor
arpl
push
or
imul
rcrl
aad
sub
mov
mov
test
or
imul
or
mov
xchg
mov
lods
mov
fdivs
nop
add
inc
sbb
faddl
shrb
loop
add
xchg
repz
xlat
cld
test
rolb
arpl
scas
mov
nop
mov
mov
cmp
jp
lods
jnp
add
add
or
addb
or
popa
add
jecxz
fdivl
jbe
fcmovnb
pop
jecxz
dec
mov
aad
cli
jge
adc
into
mov
mov
cld
inc
mov
or
fwait
push
gs
add
add
pop
clc
insb
mov
lret
call
push
scas
icebp
or
mov
push
icebp
pusha
lds
mov
fdivs
fnsave
mov
jl
sarl
sbb
negl
cmp
int
inc
cwtl
pusha
mov
jbe
pop
push
jns
jge
push
xchg
xchg
add
shlb
scas
lcall
fsub
es
mov
lods
cltd
jnp
addb
insl
pop
inc
les
stos
mov
dec
fst
lock
push
inc
mov
dec
mov
int3
xchg
repnz
cmp
lock
hlt
mov
out
jge
jno
subb
dec
mov
test
push
add
mov
jmp
ror
mov
lcall
test
ljmp
addb
jle
sti
int3
mul
gs
notl
or
xchg
push
in
cmpsb
or
pushf
les
jge
leave
outsl
stc
pop
xchg
test
push
mov
or
gs
imul
mov
sbb
jge
rorb
mov
frstor
xchg
mov
in
pop
clc
loopne
pusha
lds
shlb
aas
or
dec
pushf
ja
rorl
mov
aas
mov
mov
les
sbb
sbb
dec
add
add
aad
sbb
test
jp
imul
cmpb
pushw
outsl
jmp
mov
or
inc
cmp
dec
sti
or
cmpsb
push
idivl
ss
mov
aas
sub
push
push
rclb
int
f2xm1
push
ficomps
mov
fs
and
push
dec
nop
insl
lcall
lahf
pop
insb
sub
int3
cli
pop
les
add
add
add
out
hlt
sub
adc
add
adc
xorb
jno
aas
pop
mov
pop
gs
cmpsb
adc
ja
ret
js
sbb
adc
dec
push
dec
cmp
dec
xor
dec
mov
pop
xor
leave
rcrb
imul
cmp
sub
movsl
mov
mov
test
ja
xchg
add
lods
mov
dec
ret
ds
sub
dec
arpl
inc
mov
out
test
es
or
xor
jns
mov
mov
mov
sub
adc
xor
pop
mov
mov
add
add
ret
cli
enter
arpl
xchg
pop
pop
insb
pop
sub
test
je
add
jle
xor
mov
sub
emms
jge
rcrl
hlt
inc
dec
gs
enter
rcl
imul
cli
push
and
jecxz
lcall
mov
push
xchg
jo
dec
sub
mov
js
jg
out
popa
mov
scas
cs
add
sbb
loop
add
cmc
mov
fwait
cmpsb
or
test
stc
jbe
decl
dec
inc
aam
pop
pop
int
mov
pop
lahf
push
and
mov
jecxz
test
xchg
pop
aam
insb
push
jbe
mov
pusha
pop
or
nop
inc
or
jmp
scas
jo
fcmovu
sbb
lea
push
iret
data16
sbb
lock
inc
or
push
jo
adc
imul
mov
dec
mov
xor
aaa
xchg
sbb
jo
pop
push
test
jge
rcrb
shrl
nop
mov
repz
lds
call
sbbl
movsl
xor
inc
outsb
fimuls
sbb
psubb
call
add
mov
test
shl
imul
xchg
sbb
xor
xchg
inc
imul
cmc
sbb
mov
and
adc
pop
fs
sahf
out
dec
loop
cmp
sbb
sbb
jp
out
dec
mov
enterw
shll
jo
pop
mov
fs
rolb
cmpsb
outsl
cmovae
xchg
and
or
dec
iret
push
gs
push
cmp
push
test
jmp
pop
or
sub
ja
mov
inc
imul
ret
fsubl
sti
adc
mov
das
push
fistpll
std
into
popa
sbb
jnp
cmpsl
dec
cmp
flds
or
pusha
push
ss
incb
add
iret
aad
mov
int3
xchg
dec
mov
gs
mov
test
filds
and
add
adc
out
pop
mov
inc
fsubrs
push
shll
rep
cmp
sub
insb
rcr
ja
lcall
mov
add
add
roll
rcrl
divb
fs
insb
pop
repz
sub
or
xor
daa
mov
add
les
cwtl
sbb
mov
scas
aas
jb
mov
xor
hlt
mov
shlb
mov
pop
jo
jb
jg
push
in
int3
xor
cs
sub
sub
nop
cmp
xchg
test
fiaddl
gs
fucomp
jecxz
pop
call
stc
push
mov
xlat
shrb
sbb
mov
sbb
mov
call
inc
mov
daa
sti
push
or
cltd
out
jle
push
ret
xchg
inc
sahf
jo
xor
pop
jge
xor
xor
das
lods
filds
or
add
add
sub
jbe
push
insb
xchg
mov
loopne
or
inc
das
cs
cmpsl
pop
out
pushf
je
jmp
mov
subb
xchg
mov
test
mov
cs
repnz
or
add
cmpsb
in
icebp
lahf
cld
subb
into
sahf
cmp
add
daa
jnp
mov
fisubrs
sub
xor
adc
cmp
add
cmp
mov
xchg
cmp
jne
jbe
cmp
popa
and
ja
adc
notl
dec
ret
jmp
mov
mov
ror
cmp
push
push
testl
add
aas
mov
iret
jo
push
imul
jno
fdivl
jle
rorb
out
adc
cmp
or
mov
aas
mov
and
lods
pop
add
jb
ret
pop
test
roll
mov
pop
adc
lea
insb
dec
add
cli
cmp
xchg
or
add
or
add
or
in
or
sub
or
jno
es
aaa
xor
loop
std
fildll
stos
int3
cmpsb
outsl
imul
mov
mov
jae
das
dec
cmp
pusha
hlt
std
fdivr
js
sar
sahf
jp
arpl
faddl
leave
iret
lcall
add
cmp
mov
out
mov
mov
mov
pushf
fwait
dec
ficoml
mov
into
xchg
hlt
pop
xchg
sbb
mov
scas
jbe
js
js
repnz
dec
mov
and
loopne
jns
mov
jp
mov
jnp
jo
sub
push
subb
add
add
add
jle
mov
fstpt
jbe
lret
in
lret
push
dec
stos
leave
pusha
hlt
lahf
enter
adc
and
jns
push
enter
outsb
dec
mov
into
add
lret
mov
push
jp
pop
adc
pop
repnz
int3
insl
cmpsl
pop
xchg
outsl
nop
pop
push
outsb
add
add
jmp
mov
lock
imul
mov
arpl
outsb
andl
mov
fs
sbb
js
insb
sarl
leave
pop
and
imulb
dec
mov
cmpsl
dec
xorb
and
dec
jnp
mov
test
inc
jle
push
inc
add
xchg
insb
sub
inc
jmp
sahf
cmovo
pop
out
dec
inc
and
mov
outsb
icebp
push
lret
push
add
push
popa
pop
clc
push
mov
cmp
pop
jl
cwtl
jne
push
test
loope
mov
repnz
cmp
movsb
pop
mov
add
pop
xchg
lods
pop
sub
xchg
loopne
add
loop
mov
cmp
inc
push
out
insl
mov
add
push
imul
jecxz
imul
sub
jnp
sbb
scas
dec
imul
hlt
rcl
or
push
sti
adc
sbb
daa
sub
out
mov
pop
fdivr
cltd
add
sbb
xorl
or
jle
lea
xchg
aam
js
adc
mov
sahf
sbb
jno
mov
mov
cmp
xor
lret
xor
push
pop
cmpsb
sub
mov
sub
xor
cs
loopne
stc
movsl
jb
ficompl
and
out
push
mov
mov
adcl
add
add
adc
cmp
iret
adc
push
inc
pop
add
test
int3
push
sbb
cmpsl
sbb
inc
scas
in
insb
in
call
xchg
inc
sti
mov
xchg
movsb
inc
cmp
aad
sahf
pop
cmp
popf
or
mov
mov
fldlg2
rorl
add
push
mov
dec
sbb
xchg
dec
pushf
mov
pop
mov
in
mov
imul
lret
test
lahf
jno
in
mov
xchg
cmp
test
mov
mov
es
sub
rclb
dec
stc
xor
add
xorb
cmp
mov
ja
jnp
cwtl
les
mov
inc
add
mov
sub
mov
scas
btr
insl
dec
mov
jae
mov
ds
mov
mov
push
mov
xor
fnstsw
lcall
les
add
fisubrs
mov
add
push
jb
call
xchg
ficomps
cli
fcmovnbe
xor
in
mov
mov
movsb
mov
sbb
popa
jle
mov
fbld
hlt
bound
sbb
movsb
in
and
adc
inc
fwait
lods
xchg
ret
jnp
xchg
imul
jb
pop
xor
add
and
icebp
cwtl
pop
movsb
sti
movsl
mov
add
lods
iret
into
icebp
jae
pop
push
in
or
dec
push
push
xlat
jo
cli
mov
push
arpl
mov
or
inc
jo
lret
fbld
imul
and
push
jmp
int
repz
xor
sbb
mov
jne
dec
fisttps
sbbb
shll
cmp
add
pop
or
sbb
add
shlb
add
xlat
sub
push
in
and
jge
sar
inc
mov
jnp
dec
adc
pop
xchg
test
iret
outsb
fwait
mov
std
and
mull
sbb
adcl
enter
gs
push
mov
cmp
and
outsl
dec
insb
arpl
ror
add
imul
or
dec
mov
or
add
sub
push
sub
out
mov
push
movsb
loop
push
add
pop
mov
jmp
scas
movsb
xlat
or
test
xorl
shrb
mov
in
and
xor
cs
rolb
mov
pop
clc
or
xorb
cmpsb
addl
lcall
lock
xor
clc
fcmovnu
sti
inc
arpl
sbb
ss
mov
sub
loope
sub
call
mov
scas
aaa
rcrb
out
push
repnz
lods
mov
add
xchg
xlat
sub
jno
mov
adc
cld
jmp
fucom
cmp
cmp
jle
stos
xor
mov
add
lcall
push
rcll
mov
imul
xor
push
data16
mov
cld
shrl
fildl
push
and
pop
loope
lahf
loop
mov
add
jp
lret
ljmp
sbb
add
mov
cmp
in
xchg
jle
xor
in
cli
out
vprotq
mov
cmp
push
mov
mov
adc
rolb
popf
loop
sub
shlb
rcrl
cmpsl
mov
sbb
jge
in
gs
pop
xchg
ret
fildll
mov
jbe
mov
or
xlat
test
cmc
mov
push
imul
bound
or
sbb
stc
mov
inc
and
jb
jle
lret
notb
adc
push
outsb
out
cld
sub
xor
into
je
popf
fcoml
push
inc
fs
mov
in
inc
ret
stc
js
sahf
push
in
rolb
mov
add
dec
sbb
fmuls
cmp
nop
in
xchg
cmp
jo
jo
cmpsb
lea
xor
mov
dec
loopne
sub
adc
sti
add
loopne
mov
jle
dec
and
pop
subb
aam
adc
fisubrl
jg
sub
ret
scas
int
jl
hlt
leave
les
sbb
loope
inc
adc
fcompl
dec
subb
pop
push
ja
jmp
sbb
add
mov
lahf
ss
nop
icebp
gs
hlt
adc
mov
mov
sarl
ret
int
mov
or
fcom
pop
aas
cmp
scas
je
fildl
popf
xlat
jae
cmc
sub
or
or
mov
add
call
or
mov
sub
mov
sub
xchg
addr16
mov
mov
lret
dec
out
outsl
push
jl
pop
mov
jns
loope
repz
aam
add
jp
jne
gs
add
mov
pop
mov
test
cli
daa
pop
movsl
lds
sbb
shll
das
fldl
clc
lret
and
or
mov
shrb
movsb
adc
and
aaa
dec
and
enter
sub
pushl
mov
or
insb
inc
sub
scas
mov
push
sbb
pop
scas
jecxz
dec
lahf
jne
push
push
iret
push
sbbb
mov
xor
cmpb
mov
mov
jns
and
imul
push
add
add
das
ret
and
push
in
mov
adc
out
stos
push
movsl
outsl
cmp
call
xor
push
xor
js
xlat
mov
add
pop
pop
xchg
movsl
shll
adc
add
push
cwtl
sbb
jo
mov
mov
xchg
dec
jns
add
jno
hlt
loope
popa
bound
xor
pop
js
dec
sarl
notb
jnp
dec
hlt
rcrl
les
test
scas
jmp
ljmp
sbb
dec
add
or
or
stos
popa
pop
xchg
stos
push
into
mov
xor
daa
add
xchg
xlat
cmp
les
out
repz
les
jmp
sub
sbb
mov
xchg
inc
add
mov
addb
mov
add
xchg
or
mov
pop
and
sub
test
sti
sbb
add
imul
add
leave
dec
shll
push
ljmp
inc
pushf
pop
pop
mov
push
pop
andl
loop
lds
push
mov
lea
in
mov
rcl
leave
and
repz
jl
sub
int3
push
add
or
add
jae
std
add
cltd
add
daa
sub
add
mov
incb
popf
imul
cli
stos
iret
sub
inc
push
mov
mov
mov
cmp
mov
push
daa
xor
lret
fwait
xor
dec
inc
sahf
mov
adc
scas
daa
inc
dec
mov
mov
scas
mov
lea
sbb
shl
in
xchg
addr16
pusha
fnsave
xchg
jo
mov
lret
jle
push
dec
inc
movsb
imulb
les
subl
clc
js
cmpsb
in
mov
fstpl
int3
test
mov
movsl
lret
mov
xor
mov
sub
jbe
fwait
adc
adc
xchg
xchg
popf
hlt
les
pusha
cmp
aad
fmuls
jb
sbb
std
add
sub
add
andl
stc
fs
test
lahf
test
pop
push
adc
movsl
jp
xchg
sbb
outsl
lock
test
pop
fbld
arpl
rcl
dec
repnz
mov
mov
cli
push
subl
push
int
cmpsl
es
lcall
ja
aaa
pop
out
pop
push
add
pop
or
sahf
call
subb
jae
iret
inc
les
add
jb
push
xor
push
mov
test
and
cmp
inc
mov
ja
loopne
push
ljmp
mov
fisttpl
ja
dec
sahf
or
pop
fisttpll
dec
ret
push
xchg
add
mov
rcl
push
push
cmc
mov
in
lods
addr16
sub
jge
dec
pop
sbb
dec
and
cmp
decl
fwait
push
int3
add
les
out
xchg
cltd
mov
loopne
sbb
sbb
popf
aas
cs
sub
stos
bound
mov
add
and
bound
call
and
mov
stos
cmpsl
dec
add
test
popa
repz
insb
jno
in
dec
int
in
push
xchg
jb
insl
push
jns
popf
adc
dec
lods
xchg
pop
movsb
sbb
pop
jbe
sub
fs
jl
jg
pop
aad
jecxz
repnz
and
out
lods
popa
clc
add
cmp
add
out
jne
and
or
fs
add
and
mov
aaa
imul
and
sti
jecxz
insl
mov
insb
repz
mov
mov
mov
jno
mov
xor
jmp
sbb
jns
cli
xor
xor
cli
fisttps
mov
jns
out
cmp
js
add
sbb
jge
jmp
cmp
pusha
dec
add
scas
lcall
jmp
pop
mov
adcl
ret
lds
pop
scas
cmpsl
out
fsts
or
loopne
mov
call
xchg
mov
insb
adc
insb
lods
push
xchg
xor
xchg
push
push
test
add
adc
stc
rcrb
loope
xchg
les
and
add
or
mov
sti
cmp
adc
lret
outsl
mov
loop
dec
out
imul
movsb
pop
aad
or
inc
je
or
es
addr16
in
push
std
movsb
fsubp
loopne
into
int
sub
cld
mov
cli
cmp
shlb
adc
add
sbb
js
or
inc
adc
cld
sbb
icebp
sub
dec
cmp
ja
loopne
xchg
stos
leave
or
xchg
xor
nop
xchg
sbb
fs
jns
xor
ret
out
push
dec
sbb
rolb
sub
and
pop
jg
xchg
sahf
mov
fs
stos
repz
add
add
xchg
ret
inc
out
test
xchg
sbb
sbb
dec
add
sbb
pop
inc
dec
push
add
pop
shll
and
adc
fsubl
mov
push
popf
jg
pop
rorb
xor
mov
push
jb
mov
rcll
sbb
and
xchg
xchg
pop
pop
leave
aam
add
out
call
gs
imul
and
mov
sbb
mov
outsl
enter
dec
jb
loope
add
sbb
xor
sub
movsb
data16
and
mov
sar
add
lret
lret
cmp
cld
jnp
xchg
imul
or
push
fnstenv
jg
sub
mov
mov
adc
xor
dec
loope
pop
push
shl
daa
xchg
xorl
xorb
lahf
cld
in
icebp
mov
mov
cmpsl
adc
mov
or
jo
mov
cmp
and
les
jne
inc
stos
push
add
js
add
stos
out
add
cli
cmpsb
sub
das
add
mov
bound
or
dec
mov
mov
sbb
sub
cwtl
push
jns
xlat
and
dec
call
je
or
push
cmp
repz
xor
pop
sub
push
sahf
xor
fs
scas
bound
xchg
inc
dec
imul
add
add
repz
lea
mov
std
inc
in
cs
jge
jo
je
mov
mov
icebp
mov
add
sbb
and
out
es
ss
test
cld
sub
xchg
push
sub
jg
jp
pusha
lods
jmp
ljmp
adcb
mov
test
jecxz
mov
repnz
inc
or
repz
loopne
xor
lret
push
repz
jge
repnz
xchg
cmp
in
xor
inc
out
cmpsl
push
dec
sub
pushf
popa
lods
rcrl
fwait
add
push
ret
out
sti
mov
cli
xor
fdiv
je
sahf
xchg
faddl
adcl
fdivrl
shll
dec
rcll
jle
ret
ret
inc
es
scas
inc
xlat
or
lret
pop
out
inc
pop
push
pushf
scas
outsl
add
add
ss
inc
test
cld
push
test
mov
push
sub
fisttpll
dec
in
or
xor
mov
leave
mov
dec
add
daa
jnp
clc
cwtl
and
cmp
adc
pushf
ficomps
mov
pop
inc
aad
or
dec
sbb
jno
jbe
xchg
fadd
lcall
shrb
test
cmc
xor
mov
cmp
lcall
pushf
cmp
fisubrl
bound
imul
push
jns
mov
fsts
cs
add
stc
mov
pop
push
xchg
pop
paddsb
or
push
or
jg
and
adc
ljmp
xlat
cwtl
push
pop
mov
push
aad
imul
out
mov
xchg
out
jne
hlt
movsb
arpl
int3
out
lcall
sub
pop
leave
sub
shrb
and
inc
xchg
and
andb
sub
xchg
cmpsl
sub
dec
dec
cmp
rol
mov
adc
popa
sbb
out
mov
inc
sbb
mov
int
mov
testb
sbb
inc
jmp
fsubrl
push
or
add
add
fimull
mov
jecxz
push
adc
adc
add
or
pop
push
inc
adc
nop
mov
vminss
mov
data16
push
int3
mov
cmp
rclb
xchg
jge
mov
aad
out
lea
or
xchg
mov
jle
pusha
test
jb
movsl
sbb
pop
inc
popa
in
clc
je
add
xor
xchg
jle
inc
push
adc
sub
iret
stc
pop
xchg
sub
xor
xchg
jno
add
rorb
cmp
dec
cmc
mov
or
and
pop
pop
dec
in
inc
or
push
test
popa
iret
xlat
mov
adc
add
mov
outsl
push
or
pop
and
add
add
ret
jae
sub
xor
push
int3
pop
mov
andl
out
lds
mov
adc
test
cmpsl
insl
inc
lcall
sub
add
push
cld
mov
test
ds
nop
pop
push
outsl
cmpsb
es
rol
mov
add
add
mov
jle
and
mov
add
fdivl
mov
jbe
push
mov
iret
pop
lret
scas
adc
sbb
test
jg
or
stos
dec
and
sahf
fs
fmull
bound
xchg
int3
adc
outsb
sbb
inc
data16
inc
and
rclb
add
sbb
mov
cmpsb
ds
outsl
dec
lea
inc
inc
xchg
out
ja
clc
nop
mov
mov
popf
push
mov
fdiv
dec
sarl
pop
inc
push
or
fnstsw
aas
ret
call
cmp
push
cmp
push
arpl
mov
mov
sbb
adc
add
add
aam
insb
ret
cmp
pop
das
outsb
in
jmp
cmpl
fldt
and
push
mov
sub
or
mov
jl
bound
dec
rclb
fs
filds
and
push
fisttpll
jmp
lahf
subl
adc
je
jno
add
lods
fcoml
mov
jl
cmpsb
jo
inc
adc
sti
ljmp
daa
dec
xor
lods
push
sub
std
insb
scas
ds
addr16
sar
iret
add
aaa
imul
out
loop
mov
xchg
xor
mov
lret
dec
pop
mov
mov
add
add
mov
or
sub
ret
sahf
out
xor
aas
sti
push
dec
mov
outsb
imulb
or
andb
rclb
xchg
scas
mov
jg,pn
test
ret
and
ss
out
test
pop
add
stos
aas
pushf
loop
nop
jp
mov
into
scas
addr16
test
lret
std
incb
and
insl
movsb
jo
sbb
lods
mov
test
inc
out
lcall
ret
inc
pop
clc
adc
inc
mov
adcl
mov
xchg
cltd
mov
pushl
push
out
movsl
mov
sarl
out
stos
xchg
xchg
or
lea
clc
addr16
adc
lock
movsb
rclb
int3
leave
jns
stos
shlb
push
mov
iret
xchg
mov
fnstsw
imul
je
loopne
xchg
and
daa
cs
sbb
fstpt
cmp
lahf
iret
stos
add
jl
imul
loop
add
fs
mov
xor
mov
insb
lret
or
jnp
inc
push
add
ret
and
dec
shlb
mov
push
in
inc
lcall
icebp
inc
and
jl
inc
jb
or
add
in
cmp
movsl
mov
lcall
adc
or
cmp
addl
pop
and
add
push
mov
or
mov
hlt
dec
sbb
push
mov
insb
push
add
fld
add
test
jbe
daa
rcll
inc
je
js
fcomps
lods
push
lods
cs
mov
movsl
mov
je
jns
mov
icebp
repnz
xchg
ret
mov
mov
out
push
mov
call
inc
and
fnstsw
push
mov
xor
mov
js
insl
rclb
push
les
icebp
dec
pop
xchg
dec
sub
xor
xchg
jnp
adc
mov
jbe
imul
adc
add
in
scas
push
lock
icebp
cmpsb
pusha
sbb
sbb
ror
ret
mov
cmpsl
ja
and
sub
sub
repnz
push
fsubs
out
or
in
cmp
mov
data16
push
sbb
jg
sub
mov
iret
jl
outsb
insb
xchg
pop
jne
xor
mov
mov
adc
std
repz
xchg
dec
fs
test
mov
add
ret
ret
cmp
xchg
das
jp
sahf
xor
aas
sti
test
inc
ljmp
dec
xor
nop
sbb
scas
or
stos
xor
pop
xor
in
jg
and
bound
push
sub
addb
imul
outsl
movsl
inc
cmpsl
iret
adc
sub
cli
loope
loopne
cmp
xchg
mov
push
stos
adc
push
pop
subb
lretw
pop
icebp
push
mov
adc
or
icebp
ljmp
add
push
add
push
add
dec
add
dec
add
movl
or
jae
sbb
arpl
add
push
jae
add
mov
add
pop
add
lods
pop
add
mov
pop
adc
lea
add
adc
jl
adc
insb
pop
adc
pop
adc
jg
adc
jle
adc
outsb
pop
adc
mov
add
adc
js
adc
add
lret
add
add
sub
add
push
pop
add
sbb
add
or
add
cld
pop
xor
fcoml
add
add
xor
add
xor
add
xor
add
xor
add
ret
add
add
les
add
les
add
les
add
les
add
les
add
les
add
push
add
les
pop
les
add
les
add
les
add
les
add
les
add
les
sbb
cli
call
arpl
mov
fnsave
mov
hlt
mov
jp
and
cmpsl
inc
lock
scas
inc
and
cmpsl
push
jecxz
mov
out
push
jmp
pop
xchg
insb
pop
pop
jmp
addl
inc
pop
jmp
jle
fcmovnu
add
xchg
and
inc
imul
les
xor
mov
les
sub
pop
out
xchg
push
roll
shr
add
jp
orl
les
jecxz
mov
jmp
push
out
sti
mov
jbe
stos
push
add
pop
or
mov
pop
add
push
fwait
add
xor
add
rcrl
add
add
lcall
push
lcall
cmpsl
mov
push
cwtl
mov
aad
lods
jo
jne
je
bound
outsl
mov
scas
add
mov
add
pop
add
mov
add
sub
loope
add
mov
aas
add
rolb
add
inc
add
mov
aas
add
mov
aas
add
les
add
lds
add
pop
jb
push
pop
cs
pop
insb
add
fs
add
popa
or
rclb
ljmp
add
push
add
pop
pop
add
mov
add
movsb
add
lds
add
stos
add
popf
add
pushf
add
add
jmp
add
repnz
xchg
add
xchg
add
lds
add
jp
popa
lds
add
lahf
add
push
add
push
add
dec
add
add
add
lds
cmp
inc
add
add
dec
add
aas
add
lds
push
lds
add
pop
cmp
xchg
add
pop
and
jl
and
mov
pop
lar
leave
add
pop
int3
add
lret
pop
roll
lods
pop
lds
rcrl
add
or
add
cmc
pop
addl
add
pop
addb
pop
outsl
add
popf
pop
mov
stos
pop
popl
mov
pop
xchg
push
mov
pop
add
aas
add
cmp
add
ja
push
ret
and
add
ret
adc
cmp
adc
jbe
or
xchg
mov
arpl
iret
shll
leave
cmp
rol
add
leave
test
mov
mov
mov
push
add
mov
inc
lret
dec
ret
inc
lret
push
ret
dec
lret
cmp
scas
add
inc
add
lret
xchg
ret
lret
add
dec
add
pusha
dec
add
pusha
cs
pusha
push
add
pusha
sub
in
pusha
inc
add
pusha
dec
add
pusha
jb
add
pusha
push
or
pop
das
add
pop
pop
add
pop
sub
sbb
inc
add
pop
dec
add
pop
aaa
add
add
imul
shll
and
add
packsswb
bound
xor
arpl
xor
repnz
mov
mov
xchg
jmp
pop
test
add
xchg
or
hlt
lods
or
hlt
movsb
or
hlt
mov
cld
aam
or
aam
or
mov
or
mov
push
lods
mov
push
scas
xchg
ljmp
xchg
fadds
mov
popl
mov
xchg
mov
hlt
mov
mov
aam
push
rcl
push
aam
push
aam
push
enter
lret
add
add
es
js
and
xchg
dec
and
mov
pop
orl
jbe
and
pop
sbb
aaa
pop
cmovp
pop
or
pop
add
pop
and
sbb
and
dec
sbb
pop
loop
mov
or
dec
mov
out
dec
mov
out
dec
mov
or
dec
xchg
or
dec
or
dec
dec
mov
or
pop
push
or
pop
test
in
add
int
push
sub
mov
cmp
es
push
xor
inc
push
and
inc
push
and
aas
push
xor
mov
inc
push
push
int
push
sbb
dec
push
sbb
dec
push
sbb
inc
push
mov
add
push
mov
dec
push
mov
mov
push
push
leave
int3
lcall
mov
xchg
push
test
sahf
push
add
inc
push
inc
bound
push
bound
inc
bound
adc
dec
push
pop
arpl
push
arpl
cltd
bound
bound
sti
bound
mov
push
std
bound
int3
bound
iret
bound
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
xchg
add
pop
pop
add
pop
pop
add
pop
push
and
mov
add
mov
add
push
push
add
inc
push
add
dec
push
add
enter
sarb
or
shr
or
faddl
or
xchg
nop
rolb
xadd
dec
enter
rolb
enter
shlb
xor
ds
xor
enter
ror
inc
enter
sarb
cmp
mov
add
shl
cmp
ljmp
add
add
lcall
push
pushf
add
mov
push
inc
add
xorps
add
cld
push
sbb
add
mov
add
repnz
or
mov
or
fcoms
add
test
into
add
push
roll
test
push
ret
add
scas
push
int
fists
outsb
add
insl
add
jo
cltd
outsl
add
aas
add
cmp
cmp
cmp
push
add
ds
movb
addr16
movb
cmp
add
aaa
add
movb
fadds
dec
loop
dec
loope
dec
in
inc
add
les
dec
fiadds
inc
loopne
nop
mov
xchg
filds
xchg
aad
jle
and
dec
pop
lods
add
pop
lods
add
pop
scas
add
pop
scas
add
pop
lret
pop
nop
add
pop
int3
add
pop
int
add
lret
add
pop
mov
mov
into
add
xchg
add
pop
xchg
add
pop
xchg
add
pop
xchg
add
in
cwtl
add
pop
cltd
add
pop
lcall
pop
pushf
add
pop
sahf
add
pop
mov
add
pop
mov
add
into
add
lock
ljmp
loope
mov
loopne
mov
filds
mov
add
aam
mov
fildl
mov
add
fiaddl
mov
test
mov
dec
add
pushf
add
push
add
jno
ret
jo
ret
add
add
or
add
or
enter
leave
pop
mov
sbb
mov
iret
aaa
mov
shll
test
stos
cmp
lds
mov
cmp
add
cmp
cmp
popa
cmp
cmp
sti
popa
cmp
pop
cmp
sub
cmp
pop
cmp
sti
sti
cmp
sti
sahf
cmp
sti
idivl
sub
fdivrs
sub
sarl
and
ret
sti
fistpll
xor
xchg
and
idivl
pop
sti
cmc
cmp
sti
cmp
sti
fnstsw
add
out
fisubl
adc
xlat
and
add
inc
and
xor
scas
enter
rcrb
mov
fsubl
lods
test
and
jmp
and
mov
and
mov
and
jno
and
imul
push
pop
cmp
push
popa
and
dec
fs
dec
cmp
inc
xor
aas
sub
push
and
and
add
shll
sbb
or
sbb
shlb
add
push
mov
and
repz
xor
in
add
aas
adc
and
add
inc
adc
inc
adc
and
pop
and
adc
and
adc
and
adc
pop
adc
and
adc
and
adc
and
adc
aas
adc
adc
xor
push
and
adc
mov
pop
and
adc
cmpsb
adc
and
sub
les
stc
sub
xor
stc
pop
movsl
xor
pop
movsl
lret
movsl
stc
adc
out
stc
mov
sar
lret
stc
scas
jmp
loop
sbb
in
stc
sbb
stc
sbb
add
sar
xor
stc
sbb
in
stc
stos
mov
sahf
cli
mov
dec
cli
into
test
xchg
cli
in
xchg
cli
stos
loope
cli
lods
jmp
lahf
cli
mov
roll
in
push
cli
pop
inc
add
xor
inc
adc
iret
inc
add
leave
inc
std
stc
inc
aam
popa
inc
iret
stc
push
inc
fdivr
add
cmp
stc
inc
mov
stc
xor
stc
sub
stc
add
inc
nop
stc
roll
stc
sarb
jne
mov
insb
stc
mov
cmp
clc
mov
clc
jmp
nop
clc
loop
sub
bound
sub
and
sbb
and
or
add
or
and
add
mov
and
pop
fdivl
and
lret
frstor
ret
ret
fsubl
mov
mov
and
aam
add
lret
mov
add
test
add
mov
das
add
adc
add
push
mov
add
inc
mov
add
add
in
push
add
fildll
add
mov
push
add
cli
push
out
lds
add
xlat
push
ljmp
imul
imul
dec
push
push
dec
push
push
dec
push
push
cmp
push
inc
push
push
hlt
push
push
imull
push
push
imul
shrl
adc
push
add
push
add
imul
popf
push
push
cmp
adc
das
push
push
in
adc
in
unpcklps
xchg
adc
mov
mov
sbb
jp
sbb
jnp
sbb
xchg
adc
sahf
adc
mov
xor
and
mov
and
mov
and
mov
push
and
mov
sarb
push
sub
leave
push
sub
out
sub
into
push
sub
mov
jecxz
xor
pop
cmp
xchg
push
cmp
xchg
push
cmp
notl
lock
sbb
stc
push
pop
pslld
fistl
fcoml
int
inc
bswap
push
aaa
cmpps
push
or
test
test
xchg
add
push
les
adcl
add
push
cld
push
rorb
std
push
ret
push
push
push
ret
push
xchg
push
add
push
stc
push
cltd
push
adc
cwtl
push
adc
push
jp
pop
push
add
scas
push
je
scas
push
pop
ret
push
mov
mov
push
mov
dec
xor
mov
xor
add
dec
xor
dec
xor
inc
xor
inc
xor
inc
xor
inc
xor
ret
mov
inc
xor
ret
jnp
cwtl
xor
xchg
xor
sahf
xor
xor
pushf
xor
fwait
xor
xchg
xor
add
dec
xor
push
dec
xor
push
dec
xor
push
dec
xor
sub
xor
dec
xor
push
push
xor
push
push
xor
push
push
xor
push
push
xor
push
push
xor
push
push
xor
push
push
xor
push
pop
xor
pop
xor
push
pop
xor
push
pop
xor
push
pop
xor
pop
xor
pusha
xor
xor
bound
ds
arpl
xor
adc
test
adc
les
aad
or
aad
or
aad
or
mov
or
mov
or
mov
or
mov
dec
or
mov
xchg
or
mov
nop
or
mov
mov
or
mov
aad
or
mov
mov
or
mov
push
shll
push
insl
add
and
jno
ret
cmc
lds
adc
pop
pushf
push
inc
dec
xchg
push
push
dec
sahf
push
dec
dec
xchg
push
pop
insb
orb
insb
orl
insb
jbe
sub
cmp
icebp
xchg
pop
xchg
icebp
mov
mov
cmp
and
cmp
and
cmp
cmp
sub
dec
and
cmp
add
push
and
cmp
cmp
das
cmp
pop
les
add
pop
loopne
les
add
pop
repnz
les
add
pop
add
clc
pop
add
pop
add
call
pop
add
sbb
repnz
pop
add
pop
add
stc
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
pop
add
enter
mov
add
pop
movsb
add
xchg
pop
add
mov
add
outsb
push
add
in
mov
add
hlt
mov
add
add
add
mov
add
int3
mov
add
mov
pop
add
mov
add
jns
add
dec
pop
add
mov
add
jnp
add
or
mov
add
jne
add
or
inc
movsl
add
aad
add
les
add
les
add
push
add
add
lods
pop
add
push
add
pop
add
in
add
les
add
les
add
lsl
les
add
in
pop
add
sub
add
aad
add
mov
pop
add
push
add
xlat
pop
add
mov
pop
add
rolb
add
mov
add
les
add
rolb
add
inc
pop
add
roll
add
pop
lcall
pop
popf
pop
les
add
pop
jl
les
add
pop
jg
les
add
pop
pop
pop
les
add
pop
push
pop
les
add
pop
inc
pop
les
add
pop
aaa
pop
les
add
pop
cmpsb
pop
les
add
pop
sub
pop
fildl
les
pop
les
add
pop
sub
pop
mov
add
pop
sub
pop
xchg
add
pop
sub
add
pop
sub
les
add
pop
add
insl
pop
add
pop
add
rcrb
or
add
pop
add
rcrb
in
pop
add
sbb
add
pop
add
rcrb
cld
pop
add
pop
add
pop
add
add
add
mov
imul
add
jl
add
pop
add
insb
pop
add
pop
add
pushf
pop
add
add
pop
add
shlb
add
add
movsb
add
dec
push
add
jle
add
aas
push
add
xchg
movsb
add
dec
push
add
test
add
push
add
inc
movsb
add
mov
add
cmp
add
mov
add
sub
pop
add
sbb
push
add
jge
inc
add
add
sbb
add
popf
test
repz
add
push
pop
add
leave
jae
incl
add
stc
add
lds
les
add
les
add
les
inc
les
add
add
or
add
cmc
jae
les
add
cmc
add
les
add
in
inc
rolb
leave
test
mov
test
test
add
cltd
xchg
mov
xchg
pop
add
int
inc
les
inc
les
cmp
les
test
pop
add
stos
pop
std
xchg
add
add
pop
cmc
xchg
in
xchg
in
test
mov
xchg
fadds
pop
mov
xchg
es
pop
mov
add
pop
movsl
xchg
jb
xlat
pop
pop
xchg
rolb
pop
inc
xchg
testb
pop
dec
xchg
jne
test
add
pop
popa
xchg
test
add
pop
imul
dec
fwait
add
dec
fwait
add
dec
fwait
add
rcrb
dec
fwait
add
lcall
dec
lcall
dec
lcall
dec
lcall
dec
lcall
dec
lcall
dec
lcall
add
pop
add
lcall
dec
lcall
dec
lcall
dec
lcall
shl
add
loopne
add
pop
ltr
fistpll
add
pop
or
mov
pop
add
add
add
add
adc
insl
fstpt
add
adc
push
fstpt
add
adc
add
pop
pop
add
aas
add
push
add
fidivrl
add
fidivrl
add
add
add
pop
add
pop
or
add
pop
add
les
add
les
add
les
add
les
jg
in
or
add
add
les
jg
add
mov
jle
les
jle
les
add
lds
les
jge
les
pinsrw
inc
les
pop
les
inc
filds
or
cltd
jle
les
add
les
add
les
xchg
add
pop
jno
test
add
pop
pop
add
pop
push
jl
pop
cmp
add
pop
fldl
mov
pop
add
pop
adc
lret
pop
jne
test
add
pop
cmpl
and
pop
lock
pop
add
pop
mov
pop
leave
jl
pop
mov
jl
pop
or
pop
mov
add
pop
movsl
jl
pop
mov
jl
pop
add
enter
add
pop
add
lcall
cwtl
lcall
mov
add
jg
add
outsl
lcall
pop
lcall
dec
lcall
aas
fwait
add
enter
das
fwait
add
dec
add
dec
lcall
cmp
add
enter
dec
lcall
add
inc
add
dec
add
lcall
aas
add
loop
add
pop
adc
add
aas
add
pop
pop
add
aas
add
pop
and
jmp
pop
or
sbb
pop
add
cmc
loope
add
add
loope
add
loope
add
pop
adc
leave
loope
add
pop
fnstsw
add
fnstsw
add
pop
adc
xor
pop
push
add
fdivrl
add
pop
xor
mov
aas
add
jg
or
cmp
or
sbb
or
sbb
pop
les
inc
stc
test
roll
les
test
test
les
mov
inc
add
les
inc
add
mov
mov
mov
les
mov
loopne
add
push
mov
cld
add
roll
pop
flds
pinsrw
roll
push
les
or
pop
jno
add
loope
ret
mov
faddl
mov
pop
test
mov
rorl
enter
test
add
pop
dec
add
pop
stc
mov
leave
mov
cmc
mov
in
add
inc
add
pop
std
xchg
mov
mov
aad
mov
lea
mov
pop
add
pop
add
fwait
add
rcrb
dec
fwait
add
add
cmp
add
dec
fwait
add
rorb
cmp
add
rorb
dec
fwait
add
shlb
cmp
add
dec
add
shlb
dec
fwait
add
dec
add
dec
fwait
add
rorb
inc
fwait
add
rolb
inc
lcall
inc
lcall
inc
lcall
inc
lcall
add
fstpt
add
sbb
aad
aas
add
fidivrl
add
add
aas
add
fstpt
add
push
add
mov
aas
add
fstpt
add
pop
add
fstpt
add
fstpt
add
pop
add
aas
add
pop
or
jne
aas
add
fstpt
add
and
add
aas
add
add
push
add
movsl
aas
add
mov
adc
adc
add
mov
add
les
inc
les
sbb
les
add
les
inc
les
test
inc
add
les
add
lds
or
flds
cmp
sbb
add
add
test
les
add
les
add
les
add
stc
addb
add
les
ret
add
pop
jmp
add
pop
aad
lret
pop
stos
add
pop
pop
xor
lret
adc
pop
push
lret
mov
mov
jne
mov
add
pop
jno
sti
pop
ret
mov
pop
cmpsb
add
pop
aad
fistpl
add
pop
leave
lret
sbb
stos
pop
add
mov
pop
add
stos
pop
sbb
mov
pop
sbb
rcrl
mov
add
pop
or
clc
popa
add
jge
add
mov
add
arpl
xchg
jle
add
pop
add
cs
pop
add
add
pop
add
pop
add
enter
pop
pushf
add
add
cs
add
pop
add
pushf
add
pop
add
enter
sbb
lods
jmp
pop
add
pop
add
enter
aam
add
cmp
add
jmp
add
push
add
push
incl
add
pop
add
outsb
incl
or
incl
sbb
add
pop
testb
pop
add
push
testb
pop
add
or
inc
add
pop
add
gs
add
jmp
add
jmp
add
call
add
cli
ljmp
popf
jmp
add
jmp
add
add
add
ljmp
les
add
inc
lock
les
inc
les
add
les
add
les
xchg
adc
add
inc
xchg
pushf
xchg
add
lds
add
lds
add
lds
add
movl
add
lds
add
add
incl
add
incb
enter
sar
add
incl
add
cmc
add
std
add
incl
add
std
incb
incb
lds
add
pop
in
movsl
cmp
add
push
ljmp
push
ljmp
push
ljmp
push
call
add
pop
call
add
pop
jmp
add
pop
jmp
les
add
pop
in
les
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
and
inc
sub
mov
sub
aad
and
sarl
pop
add
mov
andb
je
jge
js
pop
ja
jae
xorl
jg
add
add
mov
addr16
inc
xchg
andb
je
cmp
ja
jae
xorl
jg
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
in
pop
add
fstpl
add
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
lods
pop
add
add
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
sahf
pushl
sahf
pushl
sahf
pushl
inc
nop
inc
incl
cwtl
inc
sti
lahf
inc
incl
repz
inc
jmp
inc
jmp
aaa
inc
fcomi
add
std
add
ret
pop
inc
mov
div
push
stos
icebp
inc
jmp
add
xchg
or
mov
inc
incl
and
or
notb
packssdw
inc
lcall
inc
call
inc
decl
inc
incl
inc
cmp
add
icebp
add
add
icebp
add
icebp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
enter
rcrb
enter
rcrb
enter
rcrb
enter
rcrb
enter
rcrb
enter
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
in
pop
add
in
pop
add
add
pop
add
fstpl
add
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
repz
repz
fdivrl
mov
lods
cwtl
insl
jge
xor
add
repnz
add
jl
pop
cmp
iret
in
add
in
pop
or
addr16
imull
xchg
outsl
dec
jbe
shlb
mov
cmp
hlt
sbb
iret
mov
lds
shr
or
push
xchg
fucomi
mov
xlat
data16
pop
call
roll
rcl
sbb
jns
cmpsb
pop
xchg
pushf
mov
push
sub
in
fdivrs
inc
bound
or
adc
out
shrl
and
xor
dec
subl
aaa
pop
xlat
pop
aas
sahf
mov
test
push
ficoml
dec
jne
pusha
sbb
movsl
xchg
gs
shrl
negl
push
push
push
ficoml
fs
mov
add
and
push
loope
jae
pusha
aas
andb
into
lcall
data16
gs
add
cmpsb
xchg
xor
jmp
pop
add
pop
add
pop
add
lret
add
pop
add
pop
add
rcrb
int3
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
inc
push
add
lea
add
push
add
pop
pop
add
pop
pop
add
sub
pop
and
push
push
prefetchw
adc
dec
push
pop
cmc
inc
sbb
add
pop
mov
stc
and
vmovapd
icebp
lock
add
in
xor
fld1
xor
aad
cmp
loope
cmp
sbb
mov
push
outsl
sub
test
js
inc
add
std
mov
les
fistps
scas
insl
mov
xlat
daa
mov
shrl
mov
jge
jae
addb
xchg
mov
cmp
add
add
xchg
lcall
popa
mov
and
imul
pop
addr16
adc
mov
or
inc
ret
inc
movb
dec
into
jnp
push
shlb
push
jae
pop
fisubrl
pop
fisubrs
leave
and
clc
shrb
lock
xor
push
call
lods
cmp
call
add
push
loope
mov
dec
fsts
dec
aad
mov
rcrl
inc
int
stos
aas
or
movsl
cmp
in
popf
xor
call
xchg
sub
lock
daa
icebp
cld
lea
in
clc
mov
test
mov
sbb
jo
mov
insb
jne
adc
jno
push
popa
pop
lea
dec
mov
inc
and
lea
jns
push
adc
jno
jnp
or
faddl
popa
inc
aam
pop
cmp
mov
int3
xchg
push
xor
xchg
push
xor
lcall
mov
cmpsb
andl
scas
jns
lods
mov
push
test
jno
movsb
mov
add
dec
mov
ret
and
add
lret
sbb
mov
mov
xlat
mov
fcmovu
mov
cmp
jecxz
ds
test
ljmp
sub
repz
div
adc
es
ljmp
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
add
pop
add
in
pop
incl
sbb
add
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
lods
pop
add
lods
pop
incl
repz
repz
repz
repz
repz
repz
repz
repz
les
add
repz
repz
repz
repz
repz
add
repz
repz
int
dec
repz
repz
repz
repz
repz
repz
movl
add
repz
repz
repz
les
add
pop
pop
cmp
fmull
add
pop
jmp
add
pop
jmp
add
pop
fidivs
add
aad
imul
aaa
arpl
les
add
pop
jmp
add
pop
jmp
aaa
fsubp
add
loop
add
jmp
add
pop
jmp
add
pop
data16
sti
fucomi
add
pop
jmp
add
add
pop
jmp
jmp
pop
add
pop
add
pop
add
add
pop
add
enter
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
fidivrl
in
ds
mov
pop
add
pop
sub
inc
sbb
into
inc
adc
aad
adc
mov
adc
mov
adc
mov
adc
mov
subb
psubsw
inc
sbb
into
inc
adc
aad
adc
add
dec
adc
out
dec
adc
out
dec
adc
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
sub
pop
add
sbb
pop
add
in
pop
add
fstpl
add
ret
add
out
cmp
fmuls
jno
mov
dec
sbb
int
clc
sub
test
rcrb
in
add
push
pop
das
inc
mov
add
mov
push
lods
sub
pop
xchg
inc
rorl
cmpsl
or
sbb
mov
inc
out
daa
aam
ljmp
daa
cmp
into
lods
aad
jecxz
xor
jno
sub
mov
decl
lea
mov
xor
or
xchg
xchg
outsl
xchg
bound
shrb
dec
loope
and
add
loope
outsl
ret
cmpsb
iret
stos
mov
lods
lcall
mov
nop
sub
jecxz
in
xor
decl
insl
andl
outsl
stos
push
jo
dec
stc
jp
mov
les
sahf
fisubs
mov
iret
mov
pop
test
icebp
sub
or
add
pop
add
add
add
clc
stos
sub
jno
add
test
outsl
and
loopne
pop
sbb
pop
fwait
sub
mulb
xchg
jns
ror
mov
inc
out
jecxz
dec
jecxz
inc
inc
movsb
mov
mov
sub
pop
xchg
dec
sahf
mov
clc
outsb
fmuls
add
iret
sub
mov
add
sbb
xor
pop
push
dec
or
push
sub
fdivl
inc
shll
mov
xor
iret
fidivl
ror
ljmp
xchg
sub
clc
mov
jle
cs
shrl
pop
xor
iret
jp
loope
mov
icebp
iret
lcall
iret
jnp
add
mov
das
sub
sub
fistl
cld
or
jmp
mov
idivl
mov
maskmovq
negl
cmpsl
imulb
add
mov
jnp
inc
fs
jb
adcl
jge
push
sub
clc
jmp
outsl
clc
sti
fadd
cmc
or
scas
cmc
sbb
inc
stos
lods
shll
push
add
xchg
icebp
addl
sbb
mulb
icebp
inc
test
pop
mov
pop
mov
jb
fildll
xor
out
xchg
out
add
mov
inc
add
pop
cmp
clc
jmp
push
clc
fisttpl
stos
sub
mov
push
shll
add
add
aaa
aad
fistl
jno
dec
xchg
pop
jmp
xchg
push
jmp
aad
cli
imul
popa
in
pop
pusha
add
jge
pusha
rorl
or
add
sbb
fs
bnd
xchg
arpl
push
xchg
lret
arpl
sub
cmp
add
aam
cmp
mov
mov
cmp
lods
lcall
sub
ds
cmp
xchg
mov
ds
imul
ds
jb
lret
in
fdivrl
mov
cld
fbld
dec
lods
cmp
fmull
into
mov
sbb
push
xor
leave
push
xor
or
xor
stos
push
cltd
xorl
je
pop
jbe
enter
pop
ja
pop
int3
lds
cmp
daa
cmp
cmp
sarl
in
idivl
fsubp
jno
or
popf
add
pop
fcomp
xor
shlb
fs
mov
sarb
pop
cmp
xchg
iret
fcmovnbe
add
push
jb
maxps
imul
adc
mov
inc
ficoml
out
addr16
fwait
ret
and
lds
repz
xchg
lods
gs
mov
inc
adc
mov
dec
and
scas
testb
divb
sub
psllw
sub
mov
add
push
movsb
addl
add
add
inc
jle
fstl
hlt
sub
jmp
xchg
push
jmp
xchg
xor
into
xchg
addr16
outsb
push
cmp
das
add
and
add
dec
mov
mov
jae
pop
push
add
pop
or
and
pop
repz
cli
icebp
call
mov
add
and
insl
lock
mov
ja
test
or
scas
div
xchg
adc
popa
mull
add
jnp
xor
jae
xor
push
shlb
push
into
xor
push
pop
xor
bound
clc
aaa
sti
sub
cmp
sbb
cmp
idivl
push
sub
cmp
sbb
cmp
add
outsl
cmp
sub
adc
in
out
cmc
jmp
shrb
sub
lret
jl
sahf
lock
ja
and
mov
push
cmc
sti
cli
xchg
mov
shll
mov
stos
mov
adc
sbb
xor
mov
insb
mov
pop
mov
push
aas
cmpsl
das
push
add
pop
inc
push
and
push
and
push
jecxz
inc
test
ss
jecxz
inc
mov
dec
mov
jecxz
inc
push
jecxz
pop
push
mov
cmpsl
mov
pop
mov
push
les
add
in
mov
mov
fdivl
add
add
cmp
mov
fdivl
push
lods
mov
inc
pushf
lret
shl
pushf
mov
inc
lods
fs
inc
pushf
pop
loope
pushf
mov
inc
insb
roll
les
add
les
scas
call
mov
scas
inc
data16
les
add
xchg
add
fiaddl
add
pop
iret
add
pop
test
sbb
add
pop
mov
adc
jbe
mov
jnp
out
jp
arpl
or
pop
pop
add
pop
jmp
add
pop
cmp
pop
or
pop
cmp
pop
xor
test
or
xchg
jl
cwtl
lahf
pop
sub
mov
lcall
std
lds
or
push
inc
fistpl
add
mov
dec
mov
scas
add
pop
add
add
jl
add
pop
add
pop
pop
or
mov
fsubl
or
insb
and
jp
inc
pop
dec
outsl
or
dec
enter
rcrb
cmp
and
and
add
or
insb
das
das
loopne
and
jmp
aaa
add
sarb
enter
rcrb
cmp
add
push
add
add
mov
addr16
or
dec
jecxz
add
addr16
or
stc
divb
clc
pop
lcall
jmp
jo
or
cmc
or
add
insb
add
out
or
stc
inc
imul
or
in
inc
push
rclb
addr16
in
jno
add
fs
shl
gs
add
stc
jb
lock
gs
popa
outsl
les
pushf
jns
mov
add
add
jae
pop
movsb
and
xchg
bound
loopne
jno
mov
add
add
add
hlt
in
jne
or
outsb
testl
add
out
pop
pop
test
aaa
inc
pop
ja
jmp
pop
outsb
aad
les
push
js
add
les
push
les
icebp
sub
les
bound
scas
sub
push
xchg
pop
push
popf
fs
pop
or
pop
stos
xchg
pop
cmp
mov
std
jp
xchg
add
dec
idivb
cmp
xchg
xchg
leave
lods
mov
sbb
mov
inc
mov
fdivrl
mov
les
mov
les
mov
or
pop
and
add
pop
sub
add
pop
sbb
pop
roll
sbbl
add
pop
push
add
pop
and
scas
pop
add
shlb
adc
pop
add
pop
sbb
sarl
add
pop
add
mov
sbb
push
mov
sbb
or
rcrl
add
rcrl
add
mov
add
add
sbb
repz
mov
jecxz
add
sbb
mov
repz
cmp
sbb
jge
sbb
cmp
dec
add
enter
sarb
aam
je
mov
pop
add
in
pop
add
mov
pop
add
int
sub
add
pop
insl
add
pop
jo
rcrb
add
pop
insl
add
push
inc
add
push
inc
add
push
inc
add
mov
push
inc
add
inc
add
pop
add
sbb
pop
add
sbb
push
inc
add
aas
add
int
add
outsb
cmc
inc
les
sti
inc
rolb
dec
push
add
iret
mov
pop
add
cmp
xor
iret
aad
pop
add
in
inc
sarl
mov
incl
push
or
xchg
mov
pushl
or
filds
xor
pop
adc
jne
sub
ja
add
pop
push
aaa
ljmp
mov
ja
add
ss
jne
repnz
pop
push
sbb
pop
jl
test
ljmp
les
les
mov
lds
add
xchg
lret
ret
and
pop
xlat
add
pop
mov
repnz
int
sub
add
pop
scas
cld
sbb
add
pop
cmpsl
cld
sbb
cmpsb
arpl
scas
les
sub
mov
das
lds
push
fwait
sub
dec
sbb
pop
add
call
sbb
jge
sbb
add
add
add
dec
inc
add
dec
lcall
dec
imul
daa
aaa
fs
sub
js
pop
add
imul
mov
dec
imul
ss
jecxz
es
pop
add
or
pop
pop
add
dec
add
adc
dec
shlb
jmp
add
pop
add
sbb
add
aas
add
icebp
jb
iret
repz
inc
mov
out
jmp
cmc
pusha
jb
call
add
mov
std
jb
or
jo
mov
jmp
inc
jb
jb
dec
call
insl
arpl
jmp
jne
jmp
insl
jb
jb
add
cmc
dec
jb
clc
arpl
push
add
aas
jmp
push
into
bnd
cmc
call
jae
les
cwtl
pushl
gs
js
movsl
arpl
jge
jno
push
cwtl
inc
cwtl
insl
int3
pusha
jb
mov
les
add
les
add
les
dec
les
push
les
inc
les
add
lcall
add
add
add
xchg
add
add
ljmp
loopne
jae
xchg
add
filds
pop
hlt
add
inc
add
add
pop
pop
add
pop
inc
add
pop
pop
add
pop
ds
pop
and
add
pop
dec
add
pop
cmp
add
pop
sbb
pop
xor
add
pop
sbb
push
pop
push
add
pop
add
pop
add
jge
aam
and
pop
mov
add
jmp
xchg
shll
xchg
fldenv
inc
je
std
inc
xchg
inc
sti
loopne
cld
mov
enter
lods
or
lea
es
push
push
pop
dec
jo
sub
pop
pop
outsl
bound
cmp
dec
jno
das
jmp
add
pop
add
dec
jo
sbb
push
pop
outsl
addr16
sub
insb
or
cmp
fadd
cmp
add
addl
and
pop
add
pop
add
sbb
add
push
adc
pop
add
ds
bound
dec
add
add
sub
add
add
pop
add
push
xchg
inc
inc
notb
add
call
lea
std
mov
or
pushl
mov
mov
ljmp
xchg
push
inc
xchg
push
add
lods
or
mov
pop
add
push
pop
add
dec
nop
inc
dec
pop
pop
add
imul
add
pop
xchg
dec
pop
insl
pop
add
xor
add
loopne
push
or
hlt
leave
dec
add
lds
loope
push
les
add
les
dec
addl
cmpsl
jae
sbb
outsb
jl
jmp
fs
lods
outsb
pop
mov
add
push
stos
insl
push
push
stos
jae
push
mov
incl
ret
mov
mov
insl
daa
std
sahf
push
les
xchg
pushw
xchg
sahf
les
xchg
mov
call
xor
cmpsl
ljmp
jbe
pop
cmp
pop
mov
test
add
pop
lahf
add
pop
scas
add
pop
push
add
test
mov
pop
cmp
pop
pop
push
test
pop
test
roll
add
pop
lret
add
pop
jmp
dec
add
pop
shlb
pop
add
pop
add
rcrl
add
sbb
xor
sbb
aaa
sbb
push
mov
add
lds
add
add
sbb
dec
jmp
sbb
sub
sbb
inc
int
add
cmpsl
sbb
inc
shlb
enter
shlb
std
aaa
add
shrb
enter
shlb
sti
cmp
xlat
movl
ffree
xor
mov
lods
pop
add
xor
add
jb
test
add
inc
add
add
cmp
add
push
data16
pop
pop
add
pop
js
or
add
push
js
icebp
push
and
add
push
pop
add
push
je
aad
je
in
push
add
fistpl
add
aas
add
pop
inc
add
rolb
mov
inc
add
jne
add
je
add
inc
daa
inc
add
outsb
daa
inc
les
inc
les
cmovno
mov
add
add
les
add
out
je
int
outsl
les
fiaddl
jbe
sub
les
add
les
add
les
add
les
xchg
insb
les
sarb
add
out
int3
loope
cmp
add
cmp
in
out
inc
rorl
cs
cwtl
test
insl
cmpb
js
inc
xchg
arpl
pop
and
adc
push
sub
lds
adc
mov
add
pop
dec
pop
and
gs
mulb
jecxz
add
pop
dec
pop
fs
test
jno
inc
fimull
test
lcall
fadds
dec
jmp
jge
add
pop
imul
in
insl
jns
add
sub
xlat
push
imul
pushl
scas
push
inc
pop
add
test
pop
scas
mov
dec
rcrb
lcall
and
xchg
ljmp
and
orb
ret
xchg
mov
add
out
xchg
movsb
ss
decl
stc
scas
xchg
cltd
ljmp
movsb
xlat
mov
pop
add
les
lds
jmp
pop
add
adc
cmpl
jmp
pop
sbb
fisubrs
add
mov
add
movb
pop
push
jnp
cmp
fstps
sub
xchg
aaa
cmp
adc
mov
aas
mov
add
add
int3
test
xor
and
mov
mov
mov
pop
mov
sbb
or
sbb
dec
inc
mov
inc
cmp
stos
add
xor
xchg
in
pop
add
shll
add
shrl
mul
lock
loopne
fisubs
out
sub
mov
or
add
or
out
lods
xchg
xlat
mov
int3
jle
sti
jno
add
enter
add
and
les
add
inc
inc
adc
mov
mov
mov
xchg
add
movsb
mov
stos
in
fwait
cmp
nop
movb
les
mov
push
or
dec
mov
add
pop
jmp
repz
cwtl
mov
sub
or
mov
sbb
sub
ljmp
fxch
scas
push
fimull
les
div
push
jecxz
pusha
cltd
test
mov
fs
call
mov
orb
andb
pop
incb
mov
jno
in
mov
fcmovbe
pop
cwtl
ss
jnp
stc
mov
enter
cmpsl
push
mov
mov
gs
mov
in
jp
cmc
pushf
repz
rcll
rcl
sub
popl
and
std
lahf
mov
pop
add
sub
imul
daa
sub
mov
sub
dec
stos
add
or
pop
mov
or
pop
add
xchg
cmpsl
cmp
xchg
shrb
mov
mov
pop
add
fistps
and
inc
popf
mov
inc
jnp
stc
bound
sarl
ret
decl
or
icebp
adc
mov
lock
add
add
and
scas
mov
adc
mov
inc
mov
add
fldt
add
cmp
in
jp
int
pusha
mov
mull
lods
leave
push
pop
jmp
sahf
inc
push
les
mov
jae
jl
and
sti
sarb
fildl
or
or
jbe
stc
cld
bound
add
daa
jp
std
rcrb
dec
sti
sub
test
dec
add
roll
out
jle
mov
lods
push
fiadds
sahf
addr16
dec
mov
les
call
mov
cmp
cwtl
fistpll
lret
lret
movsb
fdivl
mov
out
out
pop
stc
repnz
adc
add
les
mov
add
adc
test
inc
add
ja
sub
je
sub
cmp
add
inc
faddl
and
jmp
fsub
adcb
pop
fcmovnb
cld
pop
pushf
pop
out
loope
repnz
pop
in
shll
sti
int3
ljmp
dec
cli
clc
test
lcall
sahf
pop
scas
pushf
movsl
cmp
orl
jp
imul
pop
aaa
xor
lock
dec
xor
clc
pop
pop
ljmp
inc
xor
fs
xor
and
sub
pop
dec
cmp
adc
insl
push
push
sbb
sub
pop
or
add
mov
xor
fwait
subl
cltd
into
xor
loopne
sbb
pushf
shlb
test
pop
add
xor
mov
jno
scas
sbb
inc
cmpsb
sbb
dec
add
pop
push
sub
adc
mov
cmp
cmpsb
xor
mov
add
aad
push
into
ret
faddp
and
iret
flds
push
rcr
or
xlat
add
icebp
inc
dec
nop
out
push
dec
out
add
push
int3
push
dec
add
and
scas
xor
mov
mov
mov
add
and
mov
or
pop
add
les
out
insb
adc
cs
push
in
arpl
in
sub
add
shll
push
mov
mov
decl
sub
popa
xor
pop
adc
pop
aas
js
add
add
les
inc
jne
ret
gs
je
jp
inc
and
sub
outsb
jb
mov
push
push
movsl
les
and
test
out
mov
roll
ficompl
sbb
dec
mov
es
call
scas
add
mov
lea
out
rcll
mov
iret
push
jmp
inc
push
xchg
mov
sub
pop
jne
inc
out
dec
xor
insl
and
push
pop
sbb
shll
sub
jae
push
add
dec
xlat
imul
pop
cmp
fbld
push
in
xchg
pop
inc
icebp
jle
and
xchg
les
inc
lods
jmp
mov
lahf
ret
stos
scas
lds
pushf
pop
add
dec
xor
in
bound
pop
add
out
rcl
mov
pop
add
or
repz
push
add
cmc
lods
or
pop
add
icebp
xchg
inc
fimuls
je
cmc
mov
loop
insb
inc
int3
std
push
das
arpl
pop
jno,pt
dec
jge,pt
pop
add
mov
cmp
shrb
test
add
mov
pop
pop
add
sbb
jbe
adc
push
add
sar
pushl
stos
adc
sbb
and
add
dec
jecxz
cld
pusha
loop
ljmp
add
iret
add
mov
fmull
sbb
ret
test
insl
outsb
fstp
xor
lret
xchg
sub
add
mov
adc
or
fstpl
ret
cmp
xchg
add
les
js
jp
jge
les
add
insl
cmp
add
mov
adc
fst
sbb
mov
out
pop
jmp
pop
int
rol
add
fadds
roll
and
cmp
into
inc
inc
aad
ret
les
inc
in
ljmp
xlat
mov
sbb
fists
sub
les
pusha
out
jnp
inc
test
nop
dec
pop
mov
push
das
mov
push
gs
cmp
xchg
dec
decb
sbbb
jb
fsubrs
cmp
sub
and
cld
add
les
push
inc
stc
inc
pop
jbe
xor
imul
fsubl
ret
push
jmp
and
stos
jle
les
inc
jl
les
cld
xchg
ret
pop
aad
xchg
push
les
lcall
pop
movsb
sub
add
pop
pop
and
cmp
dec
xor
sub
mov
mov
mov
into
sahf
int3
push
pop
add
xchg
adc
jmp
xlat
clc
clc
jmp
and
jmp
test
xlat
mov
cmpsl
cmc
mov
popf
in
jb
mulb
orb
mov
jnp
xchg
arpl
dec
push
fidivrs
pop
add
mov
adc
lea
add
add
decb
js
push
add
sub
lret
mov
sbb
mov
add
add
sbb
stos
inc
add
or
je
sbb
pop
pop
add
xchg
dec
in
hlt
fisttpll
mov
das
dec
out
push
pop
add
cli
mov
or
enter
mov
add
or
bound
movsl
testl
adcb
mov
ja
mov
les
movsl
push
push
pop
mov
imul
cmp
inc
mov
fldl
das
xor
insl
mov
dec
cmp
cli
stos
dec
les
adc
imul
mov
xchg
repz
insb
mov
mov
add
mov
push
add
in
shll
in
aam
cld
cmc
fmulp
and
fdivrp
repz
add
repz
rorb
in
lret
aam
std
int
loope
in
call
pop
push
fwait
ss
je
dec
sbbb
loopne
test
push
test
call
add
sbb
add
pop
add
adc
inc
loop
movb
sbb
pop
cmp
mov
push
fldt
xlat
add
xchg
cmp
push
pop
xchg
pop
mov
lcall
jmp
les
or
pop
in
adc
pop
stc
adc
dec
das
ds
mov
push
add
mov
xor
test
add
or
stc
pop
add
add
insb
jecxz
cmp
rcrb
decb
pop
jmp
add
pop
add
mov
mov
sbb
mov
fnstenv
mov
xlat
add
cmp
out
xor
sar
xchg
ffree
mov
movsl
clc
stos
idivl
lahf
xchg
jmp
cmpsl
and
sahf
cmp
xchg
and
fstpl
add
scas
mov
add
out
sahf
mov
iret
mov
pop
loope
mov
jmp
movsl
mov
idivl
cmpsl
inc
rcll
lcall
add
pop
imul
mov
and
sbb
add
rcl
xchg
sar
mov
mov
stos
cmpsl
in
cmc
mov
test
jg
fsubr
mov
hlt
mov
lahf
mov
add
les
ds
cmpsl
xchg
pushf
mov
adc
push
mov
bound
pop
add
sbb
pop
adc
xchg
xor
test
mov
dec
clc
test
and
sahf
mov
roll
call
dec
dec
clc
rcrl
sti
icebp
pop
inc
push
jmp
dec
pop
cltd
loopne
or
add
jp
jecxz
cmp
fcom
xor
cmpsb
pop
push
adcl
xor
daa
sbb
int3
inc
icebp
push
leave
push
adc
mov
or
sbb
or
pop
fnstenv
out
out
xor
jnp
xor
aas
fdivrs
ds
pop
and
imul
add
add
add
jmp
add
dec
add
push
repnz
aas
popl
cmpsb
sub
jg
cmp
jne
mov
jnp
jae
xor
jp
jbe
mov
popf
or
xor
adc
push
and
adc
adc
dec
inc
push
scas
dec
add
test
cmp
sahf
adc
xor
stos
addr16
repz
gs
enter
enter
ret
addl
mov
test
xchg
lcall
and
jp
lods
call
f2xm1
cwtl
pushf
sarl
sbb
mov
sbb
sbb
daa
xchg
fcmovnb
add
test
enter
jmp
mov
cltd
faddl
and
test
cmp
cmp
dec
and
push
push
and
outsb
es
sub
inc
adc
push
pop
cmp
push
inc
sbb
ss
pop
sbb
sbb
lret
inc
pop
push
add
sbb
vucomisd
jg
add
pop
into
xlat
add
add
add
xor
mov
sti
push
insl
mov
cmp
mov
sti
mov
les
sbb
les
arpl
aas
jns
adc
aad
pop
shl
cld
cs
add
cmpsl
pop
or
jle
sub
jmp
pop
jo
mov
inc
add
pop
xchg
les
icebp
das
mov
shll
xchg
and
adc
push
fstl
mov
movsl
push
push
inc
inc
cltd
pop
sbb
imul
movsb
dec
lock
rcll
mov
arpl
pop
stos
je
inc
add
pop
lods
fisttpll
pop
jle
lods
scas
nop
movsb
pop
out
add
pop
or
add
jmp
add
pop
cmp
out
mov
in
push
test
add
mov
push
out
push
add
mov
pop
add
incb
jnp
push
inc
jmp
inc
ficompl
nop
inc
rolb
push
mov
xor
pushf
pusha
add
inc
rcrb
pusha
dec
iret
mov
pop
add
lea
cwtl
mov
shlb
push
popf
popf
xor
fnsave
outsb
and
mov
jmp
popf
mov
imul
add
popf
lds
sbb
das
push
push
and
dec
xor
outsb
fs
xor
in
xor
jnp
fistpl
add
cmp
outsb
es
imul
add
mov
cld
clc
pushf
in
test
add
cmp
or
filds
push
dec
mov
adc
mov
adc
push
or
sbb
add
les
repz
pop
xor
jae
int3
mov
imul
push
add
rclb
aad
push
pop
adcb
dec
cmp
test
adc
out
pop
lods
scas
or
cltd
incl
in
sub
mov
pop
jns
stos
dec
sub
cmpsb
sub
sahf
push
daa
and
fisubs
add
mov
cmp
test
das
jmp
test
and
push
das
mov
or
or
les
btr
adc
inc
movsb
push
xchg
push
arpl
pop
cwtl
jge
cmp
adc
inc
hlt
jne
pop
push
lret
or
ds
pop
movl
pop
add
or
insb
mov
cmp
adc
adc
adc
or
ljmp
or
inc
in
push
pop
bound
insl
lock
rclb
jmp
xor
push
leave
mov
das
mov
iret
int
pop
add
lret
dec
add
sbb
mov
jge
decb
mov
scas
jmp
mov
pop
add
dec
imul
cmpl
add
lods
insl
pop
aaa
lret
pop
add
mov
dec
out
add
pop
add
mov
mov
inc
popa
cmpsl
mov
push
stos
dec
out
add
mov
cs
test
add
mov
jmp
mov
leave
mov
scas
pop
add
shr
xchg
sub
out
add
xlat
cmpsb
mov
mov
add
in
sbb
shrl
in
ret
mov
incl
and
add
inc
add
add
nop
push
imul
xor
lret
je
pop
jbe
jnp
cmp
dec
xor
push
dec
push
or
cmc
inc
push
sbb
lea
xor
mov
add
cmp
pop
fsts
or
dec
inc
inc
dec
push
lock
cmp
dec
add
lcall
fdiv
insb
call
fdivrl
mov
push
jle
flds
add
dec
mov
aas
mov
cltd
adc
lret
sbb
addb
les
push
adc
pushf
pushl
sahf
call
iret
test
pop
mov
rolb
js
xor
add
fisttpl
jge
repnz
sub
outsl
lea
iret
les
and
pop
leave
add
pop
lea
pop
subl
les
xor
pop
xorl
les
pop
jb
push
push
les
jbe
pop
dec
jbe
pop
jmp
pop
add
rcrl
leave
pop
add
test
popa
or
cltd
popa
or
sub
add
ljmp
sub
or
cmpsl
pop
add
pop
add
std
pop
dec
mov
and
daa
push
cwtl
xchg
sub
das
pop
sarb
mov
add
jae
outsb
xchg
xchg
or
jnp
jbe
outsl
adc
mov
lods
push
aaa
and
pop
add
pop
add
addl
je
adc
hlt
add
and
ds
mov
ds
in
pop
inc
inc
jmp
push
dec
dec
mov
dec
dec
push
push
fnstenv
push
push
mov
inc
pop
pop
pop
and
pusha
popa
jg
arpl
add
pop
xor
outsl
jno
pop
add
add
pop
add
dec
or
add
jns
mov
add
add
push
add
add
pop
add
les
add
les
add
les
add
les
add
les
add
inc
add
les
les
outsl
les
dec
les
les
inc
les
add
les
add
movsl
add
les
push
les
add
aam
inc
xlat
add
lock
addl
les
add
aad
cmp
addl
lock
adc
push
les
add
pop
inc
add
pop
pop
add
pop
daa
cmp
add
pop
push
loope
pop
cmp
add
cmp
xor
inc
fnstenv
add
pusha
jmp
dec
push
cmp
add
pop
int
adc
push
dec
or
sub
push
sti
and
add
pop
shlb
std
leave
ja
pop
or
mov
add
hlt
pop
loope
pushf
pop
iret
add
pop
lcall
pop
int3
add
add
pop
add
ret
pop
add
int3
pop
add
int3
pop
add
sub
add
pop
add
pop
add
push
xor
cmp
sub
std
jae
pop
add
divb
inc
std
ljmp
sbb
xor
push
in
add
push
xor
int3
call
xor
lock
gs
aas
sbb
lcall
dec
sub
fwait
movl
add
std
incl
in
push
add
or
add
gs
push
add
in
push
add
in
push
add
sbb
sbb
jae
adc
push
mov
test
add
loope
add
sub
test
jb
adc
xchg
jae
sub
ja
push
pushl
sbb
inc
adcl
add
sbb
adc
and
dec
shr
into
lcall
pushf
add
into
jns
jne
jns
rolb
cld
rolb
and
cmpl
push
jg
fcoml
or
or
incl
lret
cld
inc
clc
pop
js
add
ret
mov
test
add
xchg
jmp
or
pushf
incb
jae
sub
lock
shrb
push
pop
cmpsb
cli
out
sbb
add
xor
shrb
jge
rorb
int
push
jno
dec
pop
clc
jnp
gs
cmp
arpl
sbb
mov
jb
add
pop
les
out
je
xchg
sti
pop
mov
jmp
enter
out
xchg
jb
adc
ret
add
add
pop
inc
add
pop
adc
pop
adc
pop
int
mov
adc
jb
mov
dec
mov
ret
test
mov
pushf
in
add
or
repnz
cmp
lcall
bound
cs
jecxz
mov
push
and
ficompl
dec
movl
and
jb
push
divb
or
add
call
ds
shlb
pop
pop
jmp
stc
lcall
mov
mov
leave
fwait
push
jb
nop
jne
jo
call
lds
out
inc
pop
inc
jmp
es
loop
pop
sub
pop
push
jb
fsub
push
inc
orl
pop
push
add
rclb
jnp
sub
add
add
add
lcall
pop
pop
mov
or
add
fisubl
mov
pop
add
imul
add
pop
mov
or
push
fnstcw
sbb
es
inc
and
push
call
push
mov
add
inc
and
sub
xlat
push
pushl
call
mov
outsb
adc
add
outsb
sbb
loopne
cmp
out
sbb
sub
fiaddl
lahf
adc
ret
testl
les
addr16
sbb
add
ja
mov
mov
fisubl
addb
jo
push
add
sbb
mov
inc
ja
loopne
out
call
adcl
test
push
lea
mov
in
les
rclb
ret
clc
xchg
xchg
fcmovb
pop
jmp
add
icebp
jg
pop
movsl
call
call
jb
outsl
shl
pop
test
es
push
jmp
or
push
fnstcw
fucomp
pop
pop
bound
ss
jmp
popa
add
test
add
xchg
and
lret
pop
outsl
call
pop
jmp
fildl
call
clc
mov
lds
fisubl
pop
jmp
imul
and
cwtl
jmp
lret
jmp
push
mov
jmp
arpl
lods
jmp
lcall
lock
pop
jmp
in
pop
and
add
and
enter
jb
and
ja
inc
lds
pop
cmp
int
add
cmp
or
outsl
popf
pop
add
jecxz
orb
stc
pop
test
testb
insl
push
push
mov
jae
add
sbb
loopne
ja
lcall
xor
ret
push
movsl
ljmp
fisubl
cwtl
sbb
sbb
push
scas
adc
test
cli
or
ljmp
punpcklbw
fisttpll
mov
add
or
test
and
mov
push
add
push
lcall
pop
add
les
into
insb
or
test
jb
push
mov
cld
cmp
cmp
jne
or
adc
jae
call
push
adc
sub
fimull
sub
cwtl
pop
idiv
xchg
lret
shl
or
out
lea
popa
add
inc
xor
mov
in
out
pop
add
and
add
les
jns
loopne
lods
mov
lret
hlt
mov
test
lret
sbb
cmp
mov
call
add
int3
subl
hlt
cmp
jmp
dec
aas
jg
ror
mov
subb
add
add
flds
fisubrs
jo
dec
sub
mov
ret
repnz
pushf
js
sub
enter
adc
dec
pop
fstp
movsb
test
add
lcall
aam
sbb
xor
in
push
add
enter
movsb
inc
pop
stc
jmp
inc
pop
mov
pop
cmp
add
pop
stos
push
mov
jnp
inc
stc
stc
das
push
sub
or
sub
incb
aad
sub
add
pop
jne
cmpsb
add
pop
mov
orb
mov
jb
jno
call
mov
or
aas
fsubs
rol
roll
jae
lahf
push
mov
pop
pop
mov
push
add
and
call
test
ja
lcall
push
push
shlb
or
pop
jl
or
loop
or
insl
pop
test
adc
jge
pop
jle
mov
inc
data16
and
cmp
stc
iret
xor
hlt
mov
inc
popf
or
cmp
ljmp
pop
pushl
outsl
idiv
pop
push
call
mov
sar
jg
insl
shr
pop
dec
enter
hlt
xchg
add
dec
les
inc
mov
jecxz
mov
insb
jo
jnp
pop
xbegin
add
outsl
in
inc
ret
cmp
sti
lea
cmp
int3
mov
pop
call
dec
dec
jmp
xchg
jno
testb
cmp
add
add
inc
pop
push
addb
aas
jo
push
jp
loope
mov
stos
test
psubw
add
push
push
mov
pop
jmp
aad
push
dec
sbb
cmp
dec
or
cmp
shl
incb
fldenv
dec
sbb
adc
sbb
leave
imul
sbb
dec
rcl
cmpsb
dec
mov
sbb
decl
popf
xor
test
outsl
mov
jmp
clc
xchg
cld
pop
dec
add
cld
jno
cwtl
cld
daa
jecxz
cld
jmp
push
repz
mov
lea
add
push
pusha
add
insl
inc
jmp
add
es
adc
cwtl
pop
jmp
mov
mov
fsubrs
or
orl
outsl
insl
jne
ds
clc
jo
xchg
xchg
outsb
fdivl
sub
aam
mov
paddb
jb
out
pop
add
add
push
jo
or
mov
pop
push
add
pop
and
imul
out
xor
jbe
jno
push
xor
and
jo
mov
dec
inc
lods
std
mov
cld
mov
iret
cld
test
and
fdivs
add
movl
add
add
outsb
outsl
dec
jno
push
xor
repnz
enter
mov
jmp
into
lods
xchg
shl
je
iret
cmc
call
mov
sub
jno
add
cmc
ret
je
clc
push
push
or
mov
ret
call
mov
mov
les
enter
lret
xor
nop
mov
add
or
cmp
iretw
ret
push
or
dec
mov
add
sbb
add
cld
dec
and
sub
enter
les
inc
call
hlt
ret
or
lret
or
dec
sbb
loope
or
inc
adc
sub
ficomps
imul
jmp
ficoms
insb
inc
add
xchg
faddl
lret
fdivrl
dec
fs
adc
into
mov
xchg
hlt
fcoml
addr16
mov
cmp
fisttps
test
sub
scas
hlt
pop
jmp
push
enter
push
aaa
inc
lods
shrb
jbe
pop
jmp
das
inc
sbb
xor
cmp
out
xorl
add
mov
pop
and
imul
lds
fidivrs
sub
inc
mov
lock
add
xlat
shll
shll
dec
xlat
neg
nop
and
bound
orl
in
add
pushw
addr16
test
inc
sub
sti
pop
xor
push
jne
jmp
add
icebp
sub
pop
xor
mov
out
add
outsb
add
fwait
add
nop
repnz
in
pop
loope
lock
inc
fnstsw
inc
add
sub
add
dec
mov
sub
mov
ss
mov
mov
inc
popf
push
inc
add
pushf
xor
xchg
inc
popf
shl
roll
sahf
jg
push
ds
add
pop
rolb
scas
push
inc
mov
push
jmp
push
cmp
xor
add
adc
or
repz
and
test
mov
loop
dec
insl
xchg
dec
out
add
sub
inc
in
xor
stc
sbb
add
test
dec
pop
or
mov
gs
inc
add
pusha
lds
andb
mov
ljmp
fs
les
add
inc
add
adc
repz
je
sarb
jg
outsl
xor
daa
in
into
inc
les
rcrb
dec
mov
lods
pushf
pop
and
add
in
cld
shll
and
dec
fiaddl
cmc
push
cld
shll
les
imul
out
sub
fiaddl
sarb
inc
iret
mov
or
or
fcmovu
push
fiaddl
jno
mov
adc
test
xchg
test
add
addr16
test
adc
rolb
lea
pop
xlat
cltd
xor
lcall
sbbl
pop
or
je
in
xchg
mov
aas
jmp
mov
xchg
sbb
mov
mov
movsb
out
std
jnp
mov
test
sbb
pop
lahf
mov
jbe
call
sbb
test
jl
cli
pop
test
jb
pop
inc
or
and
lahf
into
push
and
adc
add
add
add
mov
and
movsl
jnp
inc
out
and
pop
pop
out
push
add
jae
in
icebp
dec
pushl
outsl
fwait
mov
or
call
xchg
push
add
in
or
and
sbb
pushf
dec
inc
lods
outsb
or
pusha
jae
dec
fstl
inc
dec
inc
lods
dec
xor
and
cld
mov
call
std
sbb
insl
push
mov
fcomp
adc
sbb
push
fisubs
adc
les
call
sbb
test
mov
mov
test
inc
xor
inc
inc
les
push
mov
mov
inc
lock
adc
lock
hlt
lds
pop
test
cld
inc
cmp
std
fisttpl
or
add
add
nop
lret
div
mov
cwtl
push
add
lock
les
adc
or
lods
fwait
pop
jae
cmpsb
imul
insb
imul
adc
mov
add
jecxz
jo
mov
bound
xchg
shl
cmp
lcall
add
sub
imul
add
out
fidivl
or
add
xchg
sub
int
arpl
dec
ret
ffreep
push
mov
ficoms
cmp
lcall
add
jns
mov
pop
je
dec
cltd
jmp
dec
out
imull
jno
adc
sbb
jns
js
push
adc
or
add
out
sbb
adc
jmp
lea
mov
addb
jp
ljmp
outsl
inc
loope
decb
out
push
popa
adcl
in
or
bnd
inc
lcall
repnz
out
call
jp
add
jno
push
add
push
call
out
rcll
add
add
jg
in
xchg
sub
push
pop
add
lcall
push
popf
pop
add
loope
add
jecxz
call
mov
or
lods
pop
add
dec
test
pop
inc
lea
sub
mov
adc
cmc
mov
in
pop
push
call
orb
mov
xorl
mov
add
test
add
les
add
dec
lahf
add
les
add
std
imul
mov
dec
add
subps
decb
cltd
mov
inc
fildl
cld
leave
pop
std
inc
or
jns
fists
shl
add
cmpl
adc
popl
inc
inc
add
test
push
pop
add
push
mov
pop
mov
test
addl
push
add
jnp
xor
repnz
mov
les
addl
into
mov
out
stos
jnp
call
add
pop
cmp
jp
movsb
jmp
lods
test
les
mov
jmp
scas
les
xor
jb
xor
pop
jmp
add
out
add
pop
jmp
push
les
fistpl
jmp
or
pop
mov
add
rcrb
pop
fildl
ror
lods
ljmp
mov
imul
je
out
mov
and
adc
push
pop
add
clc
fistps
loope
pop
mov
pop
add
loopne
enter
lea
add
dec
xor
jl
add
testb
sahf
ffreep
jmp
xchg
fdivrs
pop
push
je
popf
call
nop
pop
add
out
jns
pop
add
pop
push
push
or
cmc
mov
data16
fsubs
add
sub
add
int3
lea
fstl
push
mov
or
sbb
test
and
add
xorw
jge
dec
shlb
mov
xchg
loope
add
fisubs
jae
add
in
daa
call
pop
fwait
or
in
in
push
test
leave
adc
add
les
xchg
add
xorl
mov
inc
jge
jg
mov
dec
inc
sub
or
test
jge
dec
add
test
jg
or
xchg
leave
addl
ret
shr
jp
lds
add
les
push
rol
addl
add
jl
cmp
incb
push
outsb
pop
jmp
pushl
hlt
stc
cmp
popl
mov
sub
jb
lods
pop
jmp
out
ret
pop
jmp
filds
add
pop
push
jae
lods
into
arpl
add
pop
cmp
dec
orl
les
push
enter
add
or
jp
bound
jno
into
and
sub
mov
filds
inc
test
es
les
add
adc
pop
call
push
ss
inc
fisubs
lods
enter
inc
sbb
int3
call
dec
jg
jmp
nop
jns
movsb
pop
pop
bound
ret
in
add
add
add
movl
jnp
xchg
or
std
jecxz
push
sbb
inc
adc
xchg
stos
xchg
sub
pop
insb
pop
adcl
sub
add
add
xlat
movsb
add
pop
push
clc
adc
inc
in
icebp
inc
and
repz
jmp
inc
ret
dec
shr
repz
and
test
lret
popf
xchg
pop
rcrb
jp
fisubrs
push
pushl
push
push
xor
adc
dec
lea
push
cmp
and
mov
or
sub
adc
stos
xchg
ljmp
gs
cld
inc
and
cli
or
addl
add
jae
ljmp
add
add
in
ds
mov
lea
add
les
rol
orl
sub
aad
adc
ror
jae
popa
aaa
push
xchg
data16
or
or
test
shlb
std
xchg
ret
call
jg
mov
rcll
and
sub
add
xchg
test
addb
add
add
in
add
in
jl
stos
out
pop
pushf
jle
fimull
or
les
add
jb
ss
push
mov
sti
inc
adc
pop
lds
subl
xchg
jle
push
stc
inc
sbb
add
pop
ret
adc
mov
jns
sbb
out
pop
cmp
imull
clc
add
nop
lret
test
iret
insl
sti
iret
xor
add
and
loope
out
pop
int
cltd
ljmp
out
dec
ss
pop
xor
push
add
or
pop
push
mov
sub
fs
cld
push
mov
push
cltd
adc
push
mov
lcall
jb
xchg
adc
rcr
lea
mov
lea
inc
jmp
and
scas
nop
insl
adc
pop
sub
cld
xchg
or
dec
inc
add
in
movsb
cwtl
mov
push
push
cwtl
in
mov
pushl
clc
cmpb
jne
lcall
inc
inc
rorb
add
add
sbb
pushf
mov
flds
lods
inc
pop
mov
add
scas
rolb
sbb
pop
pop
push
push
rorb
jmp
and
push
xor
dec
inc
lock
inc
xor
fimull
stos
mov
div
in
adc
xlat
sarl
adc
inc
orl
inc
or
cmp
fstpt
add
dec
and
dec
sbb
test
shlb
out
sub
add
jb
lea
push
jbe
pushf
push
enter
mov
inc
mov
mov
or
push
out
jo
inc
add
je
push
sub
xor
pop
hlt
clc
mov
jge
pop
jmp
sbb
aam
imul
fstps
jmp
add
mov
mov
rcrl
inc
loopne
call
mov
test
fistl
call
rol
xchg
jp
or
js
bound
daa
mov
jmp
add
enter
int
jnp
lock
sbb
push
enter
sub
stc
jnp
stos
out
test
xor
ja
filds
pop
fdivrp
les
push
bound
lea
hlt
pushl
shll
das
add
enter
jnp
cli
and
jp
add
insl
pop
out
adc
push
call
daa
mov
adc
imul
fcmovb
aad
fldl
daa
jmp
xchg
call
imul
pop
mov
dec
subl
scas
psubsb
imul
test
mov
jle
add
pop
add
fistpl
push
add
dec
and
in
mov
cmp
sub
pop
setne
or
xchg
sbb
inc
sub
add
pop
movzbl
sub
sbb
rcrb
ret
mov
add
jp
adc
sub
int3
insl
mov
cltd
add
in
and
sbb
dec
sbb
push
push
cmpsb
inc
and
imul
inc
test
ljmp
daa
movl
jno
movl
jb
jmp
cld
es
cld
ds
dec
test
call
push
add
cmc
pop
and
jno
inc
mov
jno
lea
or
ret
rcr
bnd
addl
pushl
jl
xchg
out
jno
jmp
inc
out
dec
negb
jnp
pop
sub
pop
aas
cli
add
add
hlt
call
push
lds
xlat
dec
bound
push
push
pushf
pop
negb
add
ds
add
into
test
jb
sbb
pop
fs
call
pop
jmp
add
fsubl
call
add
or
pop
jmp
stos
mov
add
pop
pop
mov
push
jmp
shll
stos
cmp
int3
ds
or
xor
add
ja
into
cltd
pop
mov
insb
ss
daa
or
fdivl
gs
rcrb
add
push
test
xor
es
int
mov
mov
push
add
sub
ds
pop
cmpl
cltd
xor
and
push
sbb
std
sbb
popf
inc
lds
jb
incl
jge
popa
jge
sbb
add
mulb
and
negb
and
lods
fwait
xor
insl
sbb
adc
add
pop
pop
je
cli
clc
pop
mov
ret
push
repnz
out
push
aam
or
mov
movl
adc
call
add
les
push
add
stos
dec
push
xor
push
push
fwait
xor
lods
sbb
xor
sub
push
xchg
cltd
mov
dec
aaa
add
clc
mov
adc
add
lea
jmp
mov
test
add
and
add
inc
or
adc
ret
dec
cmc
add
in
sbb
xchg
je
call
add
clc
lret
mov
idiv
test
adc
inc
pop
adc
xor
jecxz
push
pusha
popa
in
loopne
add
mov
adc
out
pop
sbb
adc
cltd
jg
gs
ljmp
mov
rolb
jo
add
pop
cmp
cmp
arpl
sbb
in
clc
push
lcall
adc
pop
jo
sbb
stos
cmp
pop
jb
mov
andl
inc
aad
repz
hlt
mov
iret
stos
mov
add
iret
lock
dec
out
mov
jecxz
jmp
add
jmp
add
out
lahf
pop
not
jmp
xchg
xor
jbe
xor
in
mov
and
xchg
in
or
or
mov
movsb
aad
in
xchg
jg
ja
inc
xchg
ret
pusha
movsb
jb
or
rcrl
xchg
add
xlat
popa
jne
and
pop
add
loop
add
fst
inc
and
pushf
jb
loop
or
popf
or
out
je
add
or
inc
jb
lea
scas
inc
sub
incl
roll
out
sbb
sub
pop
or
xlat
add
leave
outsl
push
add
stos
dec
push
push
xorb
sub
dec
mov
xchg
incb
mov
dec
mov
inc
xor
push
add
push
adc
or
jne
arpl
jmp
sti
jmp
cmp
test
mov
jae
call
cmp
mov
push
call
cmpb
mov
lcall
js
cld
pop
sbb
ljmp
or
mov
mov
aas
aaa
adc
mov
outsl
add
add
pop
xchg
sbb
sarl
stos
lock
pop
or
add
or
add
or
pop
fucom
mov
pop
sub
les
cmc
sbb
call
add
pop
jmp
cmp
pusha
xchg
or
jae
shll
pop
jge
xchg
in
andb
mov
ja
in
add
stos
add
mov
arpl
add
out
inc
and
stc
mov
int
or
hlt
ljmp
out
call
incb
cmpsb
cmc
call
out
out
jbe
mov
sbb
cltd
jp
sbb
pop
mov
jb
xor
pop
std
enter
push
jb
pop
fucomi
loope
pop
add
pop
mov
cmp
add
negb
lea
rorb
call
push
enter
ret
cwtl
dec
ror
scas
out
bound
jmp
xchg
lock
push
inc
lea
les
movl
loopne
daa
outsl
in
pop
cmpl
je
push
or
inc
mov
add
add
lea
jne
rolb
add
mov
ret
jmp
rorb
or
add
sahf
incb
insl
pop
jb
clc
rolb
add
rorl
mov
jne
fisubs
mov
sub
push
dec
andl
aam
call
add
ret
dec
add
cs
sti
ficoml
ret
lds
jl
mov
push
mov
call
test
push
lea
pop
mov
lock
add
ret
je
stos
sti
je
les
mov
leave
xchg
mov
pop
sub
call
xor
push
sbb
clc
xor
add
lahf
cwtl
add
hlt
inc
push
mov
sti
cmp
add
pop
je
sub
adc
in
nop
push
mov
and
sub
fwait
hlt
stc
mov
pusha
inc
sti
and
jp
divb
pop
jno
int3
sarb
rclb
in
enter
mov
call
mov
cs
xchg
inc
or
add
sub
jnp
into
out
ds
rorb
pop
jmp
or
pop
sbb
mov
icebp
mov
in
hlt
jb
jle
pop
fs
es
pop
cmp
in
ficoml
stos
inc
jecxz
call
iret
iret
pop
adcl
xlat
ret
faddl
pop
push
bound
mov
add
mov
hlt
jle
es
jle
push
mov
adc
mov
jge
push
mov
sbb
stos
jle
xchg
cmp
and
xor
cli
pop
pop
mov
inc
pop
je
popf
pop
call
pushl
outsb
add
xor
inc
sub
mov
mov
inc
cmc
inc
sbb
popf
jg
add
add
ss
jo
pop
and
sub
cs
push
push
sbb
int3
dec
sbb
add
sub
jb
es
es
pop
pop
mov
cs
jae
popf
add
jbe
jo
mov
mov
push
adc
out
jne
pushf
test
mov
add
les
adc
mov
call
xor
out
xchg
cld
lods
clc
mov
sbb
cmp
nop
sub
in
mov
inc
and
adc
inc
pop
inc
xchg
lret
jnp
stos
sub
add
sbb
out
mov
mov
adc
mov
adc
adc
xlat
cmpl
mov
inc
das
or
xor
add
lock
pop
loop
les
stos
dec
es
sbb
pushf
xlat
mov
les
inc
adc
popa
bound
loope
add
pusha
jmp
rcrl
mov
mov
dec
shl
cli
dec
pop
mov
das
leave
lcall
lcall
add
add
ret
jmp
sub
imul
out
mov
arpl
insb
xchg
xor
movl
das
mov
pop
std
aas
inc
aas
int
rcrb
int3
inc
lds
aas
mov
pop
lock
rcrb
popf
inc
mov
out
leave
sbb
mov
mov
add
pop
add
dec
inc
jmp
pmulhuw
jmp
inc
daa
add
push
or
call
fidivrl
insl
add
push
add
lds
lcall
add
sti
ja
repnz
int
pop
lahf
sub
popf
add
int3
aad
sub
add
sub
test
or
adcl
repnz
jo
jne
pop
repnz
fstpl
cmp
push
jo
iret
xchg
push
xchg
popf
pop
mov
call
adc
sub
les
add
push
dec
ret
sbb
popf
subb
pushl
sbb
mov
call
inc
sub
add
push
push
sub
mov
les
lds
arpl
hlt
scas
dec
je
mov
les
mov
les
inc
inc
push
xchg
push
fcoml
add
enter
mov
push
lea
stos
inc
repnz
mov
test
add
lcall
inc
xlat
cmpxchg
rcr
add
inc
inc
into
pop
dec
pop
xchg
shrb
rorb
inc
pushf
movsl
out
call
ss
iret
sbb
out
or
jne
and
adc
outsb
in
shlb
xor
and
cmp
add
fimuls
stos
loop
mov
jae
fildll
push
lret
insl
pop
adc
add
aas
add
add
pop
mov
es
mov
decb
pop
mov
lahf
cli
sahf
lock
repnz
fcompl
pop
pop
subl
push
mov
push
cmp
adc
push
inc
xchg
mov
pusha
and
shr
xchg
xor
fdivr
call
movsb
push
incb
add
push
sbb
push
jbe
push
push
push
or
add
cmp
jne
inc
out
push
jae
ljmp
add
mov
out
lods
pop
add
add
mov
jb
and
add
cli
sub
pop
add
fwait
test
in
in
hlt
mov
pop
xchg
sub
mov
int
mov
add
out
jns
sub
fidivl
idivb
pop
push
fstpl
inc
and
cld
bound
dec
fsubs
inc
les
inc
rol
dec
mov
push
push
mov
fwait
mov
pushf
cltd
ss
add
cmpsb
adc
addl
add
mov
add
add
push
call
aaa
lods
aad
add
xor
cmpsb
lods
je
les
mov
xor
jns
dec
jle
dec
jnp
xor
sbb
das
clc
jns
jno
filds
jecxz
scas
mov
xor
test
aaa
enter
xlat
lcall
inc
push
mov
push
cwtl
fwait
loope
out
add
or
dec
jge
mov
lahf
faddl
sbb
mov
push
sbb
push
add
pop
jg
or
cli
inc
aad
cld
inc
loop
add
aad
aaa
mov
push
sub
das
push
and
adc
out
les
out
repz
aaa
imul
add
pop
add
pop
lock
sqrtps
repnz
pop
add
jge
insl
jl
inc
roll
fidivrs
cmovae
pushf
push
in
mov
pop
out
js
fcmovnb
cmc
dec
femms
pop
test
leave
jno
pop
test
xchg
jno
pop
sbb
jmp
pop
insb
aaa
aad
rcrb
rcrl
xchg
pop
push
push
mov
in
push
addr16
aaa
add
flds
cld
inc
inc
jmp
call
int
sub
xchg
add
lock
inc
or
cmp
inc
lods
int
or
push
inc
popf
int
adc
add
inc
lods
int
adc
dec
cmc
inc
popf
int
sbb
aas
mov
lea
push
mov
pop
repz
pop
repnz
nop
insb
pop
mov
cmp
push
push
add
dec
or
inc
sub
out
fstl
mov
xchg
add
push
jo
mov
les
rorb
int3
lock
fadds
call
add
das
lcall
mov
add
pop
inc
stos
aad
push
mov
les
lock
add
je
cmp
or
add
add
add
sub
in
js
add
add
add
add
push
add
pop
inc
dec
pop
lahf
cli
adc
xchg
inc
daa
sbb
test
mov
mov
popf
ja
rcr
js
xor
xlat
jl
pop
fs
in
add
jp
dec
cmpsb
and
out
sbbl
pop
out
add
lods
outsl
stos
or
dec
adc
movsb
xchg
adc
call
arpl
pop
jo
nop
daa
stc
inc
std
jmp
xchg
push
pop
imul
out
mov
push
les
add
pop
add
pop
add
dec
iret
call
jmp
pop
mov
pushf
mov
pushf
push
push
add
lahf
call
pop
or
gs
pop
add
inc
iret
lock
pop
mov
movsb
call
pusha
fisubl
test
mov
inc
jmp
pop
addl
xlat
call
neg
lds
das
jbe
call
xchg
jnp
rcrb
lds
add
xor
push
add
decb
in
push
mov
iret
shr
lahf
push
or
add
in
test
jb
aam
hlt
jmp
fnstsw
push
test
pushf
pop
add
scas
pop
add
es
adc
lcall
add
fstpt
adc
and
inc
faddl
call
xor
out
mov
add
mov
or
add
xor
scas
cmp
add
mov
cmp
lret
test
add
cmpsl
cmp
jae
jmp
jge
mov
int3
inc
hlt
lods
pop
add
mov
xchg
cltd
mov
or
je
insb
xor
push
cmp
addb
mov
nop
cmpl
fmuls
push
int3
jns
bt
inc
or
pop
sub
xchg
stos
jb
enter
xchg
xor
mov
rcl
sub
dec
xchg
fistps
fsubs
in
or
and
fwait
xor
jbe
pop
fs
in
test
std
adc
into
jmp
call
sbb
push
add
iret
pop
jg
iret
in
push
dec
and
pop
pop
out
push
imul
shll
sbb
daa
pushf
pop
pushf
std
mov
cmp
fnsave
daa
insb
pop
out
jle
dec
add
sub
inc
rol
mov
je
pop
rcll
call
lods
and
repnz
xor
inc
lea
pop
subl
xor
notb
dec
xchg
roll
pop
int3
and
mov
sub
imull
pop
add
mov
xchg
and
add
push
xor
movsb
mov
aad
xor
rol
cltd
pusha
into
adc
mov
call
bound
fdivp
xchg
fdivrl
lds
and
lcall
pop
jne
mov
jo
add
test
nop
push
inc
adc
pop
add
lods
pop
add
cmc
aad
add
ret
sti
lcall
pushf
mov
dec
fucomip
and
xlat
aad
mov
outsb
or
xchg
adc
jmp
out
test
nop
push
xor
hlt
lret
lods
subl
add
jmp
cld
cmp
les
mov
popf
lds
lea
les
lea
dec
xor
mov
dec
inc
add
or
mov
enter
data16
or
sti
orl
mov
lods
insb
or
lea
sbb
pop
add
add
add
lea
add
lahf
push
repnz
dec
sahf
lds
mov
les
add
mov
scas
int3
inc
popf
repz
insb
jbe
add
shll
sahf
lahf
jmp
mov
inc
lahf
adc
mov
ss
test
ficoms
mov
fisttpl
add
mov
daa
fisttpl
sbb
add
pop
push
mov
mov
shrl
dec
inc
fsubr
cmp
out
loopne
jbe
mov
pusha
xchg
popa
mov
lods
std
aam
push
jmp
and
dec
adc
add
enter
inc
adc
pop
cltd
add
mov
sbb
lea
in
dec
inc
jmp
add
inc
insl
pop
enter
dec
repz
stos
std
hlt
pop
push
jmp
and
clc
xchg
inc
push
and
pop
pop
dec
sbb
in
iret
js
cwtl
lret
js
jg
jl
leave
push
dec
dec
push
jl
push
dec
xor
cmp
call
pop
pop
js
and
insb
push
addb
add
add
add
or
outsb
push
std
adc
push
es
xchg
pop
push
je
shrb
lcall
out
sbb
xor
ljmp
out
mov
adc
push
push
call
orb
ss
add
pop
sti
inc
dec
or
add
bnd
das
push
add
add
jne
jo
mov
ret
decb
subb
add
in
mov
cmp
mov
out
aas
les
inc
and
call
imul
sahf
sbb
iret
xor
lea
stc
nop
pop
mov
cli
cmc
xchg
mov
add
add
mov
dec
and
out
das
ja
add
add
dec
xchg
out
mov
dec
jb
mov
mov
out
push
imul
out
xor
add
daa
push
dec
sub
nop
mov
int
add
aad
xor
sub
mov
shr
stos
fldl
popf
insl
push
pop
dec
add
jbe
pushf
rol
std
inc
frstor
and
aam
call
sti
stos
mov
clc
aas
xor
cmp
jb
pop
subl
test
ds
and
test
int3
xor
sub
pop
mov
mov
call
out
adc
leave
jo
les
mov
and
jg
dec
sub
pop
shll
call
mov
mov
cmp
and
fcmovb
or
sbb
es
and
es
mov
ss
and
insb
repz
ret
add
jae
je
inc
mov
push
pop
mov
lea
call
test
popf
addr16
mov
push
push
jae
dec
sbb
sbb
jmp
pop
or
push
sub
out
adc
sub
popa
or
shrb
out
pop
push
add
sub
xchg
repnz
push
xchg
xor
aaa
ret
xor
add
std
mov
sbb
fmull
test
decb
and
add
or
push
add
add
dec
jns
pop
xchg
jae
xchg
lds
add
sahf
pop
aam
sub
das
push
cmpsl
les
push
mov
movb
cld
adc
xchg
sbb
into
xchg
pop
aaa
aaa
faddl
addl
fs
add
shll
jmp
test
cmp
lods
loopne
call
fidivrl
mov
pop
add
mov
mov
dec
mov
add
cwtl
mov
sbb
sub
inc
xor
lds
mov
adc
sbb
iret
movsb
fwait
sub
test
xlat
cmpsl
adc
mov
dec
test
add
outsl
iret
sub
and
add
rcl
mov
and
sbb
dec
xchg
jo
cwtl
movb
fmul
inc
in
jl
call
iret
pop
popa
outsl
scas
std
push
cmp
pop
call
jb
xlat
sti
data16
cs
iret
dec
cmc
mov
add
pop
mov
mov
pop
jl
push
pop
or
out
dec
mov
push
fildll
add
pusha
iret
rolb
pop
xchg
out
push
repnz
mov
loop
add
insl
std
jne
into
repnz
cmp
stc
jno
jmp
jg
clc
xor
stc
and
data16
push
or
loopne,pn
je
loop
or
popl
push
add
push
sbb
xchg
rolb
pop
inc
or
jl
imul
mov
sbb
sbb
inc
or
jl
mov
andl
int
je
sti
cmp
mov
insb
ss
std
out
or
dec
jno
push
sti
jl
pop
inc
mov
addb
idiv
inc
ret
imul
les
jmp
call
add
add
mov
mov
clc
mov
aas
cld
inc
jnp
test
add
out
clc
add
ds
out
popf
push
pop
adc
les
dec
inc
mov
push
mov
xor
mov
scas
bswap
sub
sub
rorb
test
adc
pop
mov
sti
in
cwtl
je
outsl
xchg
adc
fs
nop
jge
lret
add
sub
xchg
out
cmp
shrb
pop
cld
imul
inc
frstor
add
fbld
cwtl
dec
lcall
mov
in
xchg
mov
fisubs
jne
xchg
xor
pop
lcall
mov
daa
setle
test
push
sahf
mov
lcall
add
stc
add
fcomp
rclb
pop
push
mov
dec
xchg
and
stos
in
roll
scas
inc
stc
je
cmc
clc
pop
cmp
sbb
jmp
test
add
cmpsl
in
in
jecxz
int
mov
mov
xor
adc
jae
inc
and
push
imul
les
jle
dec
mov
add
pop
add
push
test
aas
add
jecxz
adc
pop
mov
call
xor
push
mov
fucomi
adc
adc
cmc
scas
pop
add
test
add
mov
punpcklwd
add
fidivrl
pop
test
add
sub
add
add
add
into
add
popf
pop
mov
inc
pop
repz
pop
push
xlat
add
in
cld
out
sar
pinsrw
add
inc
sub
dec
inc
add
ds
inc
clts
inc
mov
xchg
je
adc
or
into
mov
add
icebp
add
inc
jg
aas
cld
jnp
fcomps
insb
out
jecxz
jnp
aam
ret
cmp
mov
inc
adc
inc
lock
cwtl
inc
das
clc
dec
mov
mov
add
pop
sahf
ljmp
mov
imul
pop
mov
inc
icebp
dec
mov
add
xor
cmp
lahf
arpl
pop
jb
sub
outsl
xchg
ss
add
stc
scas
cmc
xchg
xor
out
les
push
repz
ja
jecxz
call
adc
call
xor
inc
adc
xor
push
mov
xor
out
sbb
sbb
dec
sti
cwtl
push
pop
jb
inc
push
add
cmp
push
popa
xchg
pop
add
popf
xor
call
bound
dec
loop
add
dec
xor
jmp
loope
adc
cwtl
add
loopne
inc
dec
fldl
jmp
arpl
mov
add
pop
add
ret
enter
std
loope
jge
cs
xchg
subw
call
jb
jecxz
popa
fidivs
pop
scas
les
add
lods
es
fcomps
sub
push
pop
mov
aam
mov
pop
add
pop
testl
sub
fiadds
add
mov
add
xor
add
out
lahf
jno
add
add
iret
pushf
leave
lods
sbb
add
scas
mov
jmp
popf
in
add
popf
push
hlt
mov
inc
lock
and
out
jnp
repnz
or
les
fiadds
cmp
test
add
pop
adc
push
inc
mov
enter
add
les
sub
xchg
sub
and
adc
inc
adc
inc
sub
mov
inc
hlt
cmpsl
inc
sub
aas
jle
mov
test
mov
mov
mov
pop
xchg
mov
cwtl
addb
incb
out
in
xchg
jp
pop
pushf
inc
mul
add
cwtl
aaa
repz
aas
sbbb
out
or
xchg
testl
dec
add
inc
and
sbb
test
add
inc
test
lret
add
or
dec
ss
int3
mov
sti
clc
popf
out
frstor
lds
loopne
mov
andb
out
xchg
dec
lcall
xor
add
loop
icebp
push
xchg
in
das
pop
scas
pushl
aas
cmp
or
popa
add
jo
out
cmpsb
lock
popa
ds
add
add
add
mov
inc
sbb
push
mov
std
fdivrl
dec
inc
jmp
mov
xor
push
jno
push
or
hlt
jmp
xorl
xchg
sbb
das
je
cmp
repz
fcmovnb
add
sbb
push
es
pop
push
add
pop
pop
mov
inc
pop
out
sub
adc
pushf
add
mov
and
data16
adc
incb
jmp
push
pushl
enter
aam
jmp
filds
push
push
nop
call
ljmp
pop
push
or
shlb
add
pop
sub
scas
push
cmp
nop
and
insl
pop
add
push
out
les
xor
jmp
sub
pop
and
cmp
inc
push
xchg
mov
add
sub
pop
xchg
xchg
jg
sbb
loop
add
leave
xlat
fildl
ret
sbb
lret
andb
add
push
mov
test
imul
xor
mov
idivl
add
mov
stc
inc
testl
jae
or
pushl
pop
jb
inc
push
in
xchg
cs
aad
out
and
mov
ja
mov
fistps
xor
mov
icebp
lret
daa
stos
add
sbb
les
add
mov
testb
mov
add
pop
mov
pop
fimull
mov
add
pop
lcall
push
faddl
pop
arpl
cs
add
idivl
pop
out
popf
popl
in
fstps
rcrb
pop
add
bound
cmc
incb
dec
sub
repz
test
cld
cmp
jmp
dec
loopne
pusha
add
jbe
push
sub
sahf
shlb
pop
add
outsl
es
jmp
cmp
loope
pop
jmp
adc
jae
xchg
mov
mov
pop
pop
or
ljmp
jbe
add
pop
or
cwtl
cs
add
decb
and
fwait
and
inc
xor
incl
ret
fisttpll
add
mov
cwtl
add
cwtl
sub
jne
jecxz
or
cmp
hlt
cs
add
test
ret
mov
pop
pop
and
xor
lea
inc
push
lds
add
popl
je
movsl
inc
and
shl
ss
pop
push
decl
loopne
inc
in
pushw
sbb
hlt
xchg
pop
add
mov
adc
and
cmovs
add
mov
mov
aas
stc
jle
shll
test
les
test
add
dec
mov
jg
inc
add
dec
mov
cmp
and
dec
jae
movb
loopne
add
les
jge
dec
inc
add
add
iret
add
roll
inc
pop
call
xchg
adc
les
xor
mov
sub
icebp
xlat
dec
daa
add
cmpsl
lret
xlat
dec
sub
jg
pop
out
push
lahf
ret
cmp
sbb
ds
or
mov
fistpll
cmp
iret
mov
cmp
aaa
xchg
push
mov
xchg
push
sets
out
xchg
xorb
xchg
addr16
pop
jb
out
add
pop
call
sarb
jmp
ret
jle
bound
xchg
call
push
jge
jmp
mov
sub
jmp
mov
jl
xchg
call
add
jl
add
call
jb
cltd
mov
aam
std
mov
pop
add
jnp
fcomps
sbb
pop
fnstcw
aad
mov
daa
inc
outsl
add
push
movsb
aad
cltd
or
pop
lds
add
mov
jno
mov
pop
xchg
hlt
inc
sarl
je
mov
jne
mov
jl
adcb
mov
mov
and
insb
std
je
pop
mov
sbb
je
in
lock
inc
shll
xchg
push
pop
add
adc
cmp
pop
dec
mov
or
mov
or
jmp
adc
vorps
or
mov
inc
and
pop
xor
xor
add
xor
pop
mov
cmp
hlt
lds
dec
jns
sub
inc
std
mov
jns
add
or
add
cmp
es
mov
lods
xchg
jg
xor
xor
shl
sar
push
or
jge
pop
lar
out
add
mov
mov
dec
sti
lock
push
shrb
add
jb
pushl
jnp
repnz
in
and
out
les
sub
lcall
ficompl
add
scas
aad
mov
imul
jge
lds
jecxz
dec
mov
js
pop
sbb
add
testl
add
push
mov
pop
fldenv
adc
test
xchg
sbb
mov
and
test
sbb
rol
adc
or
test
notl
xor
push
nop
xor
nop
movsl
adc
push
or
notl
pushf
mov
inc
and
adc
fcmovb
adc
add
fxch
call
push
or
mov
or
add
push
push
pop
jne
lcall
push
imul
sub
xor
and
test
gs
jle
dec
mov
pop
sbb
mov
fstp
btr
lock
pop
mov
shrb
aad
pop
add
test
sbb
popf
mov
xor
pop
pop
outsl
push
add
add
ror
xor
outsb
push
lea
push
cmp
sub
sub
add
outsl
rcrb
push
push
loopne
add
les
mov
cwtl
pop
testl
sub
popf
mov
pop
mov
adc
sti
or
in
imul
add
inc
inc
aas
je
add
shll
jbe
cmp
int
stc
test
pop
and
hlt
insb
or
xor
xor
cmp
cmp
aaa
enter
jno
sbbb
sbbb
lahf
das
xor
push
dec
movsl
test
mov
mov
mov
pusha
pop
das
hlt
mov
and
imul
add
dec
iret
jbe
andb
test
dec
xchg
push
jle
sub
les
adcb
xor
and
test
xlat
repnz
sub
inc
mov
loop
andl
mov
cmc
loop
sbb
dec
cwtl
mov
xor
and
stc
into
and
cmp
pop
add
add
and
cmp
aam
aam
bound
cmp
hlt
inc
xchg
cld
insb
dec
push
pop
inc
adc
mov
jb
fs
out
adc
mov
mov
jb
xchg
push
fwait
out
adc
jmp
pop
andl
fsubl
jb
push
sub
pop
shr
mov
call
xor
xor
or
scas
pop
std
add
inc
sbb
lods
push
add
lcall
pop
pop
mov
lock
jno
out
pop
or
adc
inc
mov
or
mov
sub
pop
pop
add
push
push
call
dec
cmpsl
jne
mov
decb
add
pop
push
mov
fucompp
sbb
pop
xor
xchg
xor
push
enter
shr
andl
lock
mov
pop
push
loopne
sbb
les
add
mov
adc
int3
sbb
int3
push
add
ja
dec
sbb
add
pop
daa
push
adc
mov
jmp
dec
ror
xlat
mov
mov
pop
xchg
cmpsb
xchg
add
push
scas
adc
push
and
incl
icebp
add
subl
jnp
rcrl
inc
je
inc
inc
ljmp
testb
outsb
insb
add
xor
push
mov
js
pop
out
mov
pop
fs
pop
jp
shl
int
insb
adc
cmp
lcall
add
daa
test
call
push
fmuls
add
xchg
dec
add
cs
jnp
mov
jmp
mov
xlat
ret
add
daa
or
out
les
daa
add
xchg
rcl
jbe
inc
sbb
repnz
icebp
xor
dec
inc
jmp
cmpsl
roll
jecxz
jne
add
sbbb
mov
sub
dec
xchg
cld
sbb
cmpsb
cld
pop
bound
fsubr
sbb
or
adc
mov
stos
jae,pn
pusha
sarl
mov
fildll
push
cmp
adc
mov
int3
pop
and
test
or
add
inc
sbb
aaa
pop
cmpsb
clc
into
add
pop
mov
enter
jmp
add
xor
lods
mov
incb
sub
add
mov
incb
movsl
push
push
mov
add
popf
mov
addl
enter
jmp
xor
mulb
adc
cmp
sub
push
rolb
sub
call
outsb
pop
or
sub
inc
add
pop
mov
aad
cld
les
pop
pop
xor
jmp
inc
ja
enter
mov
push
adc
mov
xor
sbb
cmp
sbb
mov
subps
mov
imul
xor
and
call
ja
pop
xchg
push
mov
mov
add
jno
enter
push
aas
inc
shlb
sbb
add
pop
pushf
mov
imul
jmp
pop
or
movsl
out
jmp
cmpsb
daa
add
xor
pop
push
rcrl
stc
ficomps
cmp
js
dec
cmpsb
out
iret
xor
js
sbb
imul
out
dec
adc
xlat
add
imul
sbb
out
ret
pop
rcl
jae
inc
imul
pop
or
call
mov
push
cli
ret
and
mov
stc
mov
out
lret
pop
push
out
test
add
enter
pop
vcvttps2dq
add
movl
jnp
xor
add
add
test
sbb
dec
lahf
cld
fs
push
cmp
outsl
insb
filds
ffree
in
cwtl
pusha
insl
cli
cmp
push
pop
mov
out
jno
in
inc
adc
and
xor
fadd
pop
add
divl
std
pushf
mov
lcall
cli
or
mov
push
inc
add
nop
sar
xorb
mov
or
add
je
jp
mov
pop
push
sbb
pop
push
fwait
add
push
es
adc
lods
pop
add
pop
push
call
add
ljmp
mov
pop
pop
ret
adc
jmp
push
nop
je
cli
or
pushl
push
add
push
adc
add
testl
inc
aam
pushl
add
aas
or
out
mov
inc
das
cmc
add
add
push
inc
xchg
lret
daa
aad
cmp
jne
insb
cs
xchg
stos
leave
aam
sub
in
aas
les
xchg
cmpsb
fadds
les
mov
xor
jae
add
test
jle
sar
mov
das
add
rorb
push
jmp
pop
mov
ja
sbb
add
in
mov
add
in
mov
pop
out
dec
ficoms
jne
ret
ret
out
mov
pop
mov
xchg
arpl
xor
fwait
out
mov
fldt
add
ret
out
les
insb
scas
push
je
add
pop
aad
xor
sbb
jg
imul
xchg
add
sbb
adc
call
lea
incb
pop
mov
call
js
sub
jmp
push
sbb
fmull
add
push
outsb
sar
push
inc
add
pop
add
scas
popf
push
repz
push
cmpsb
mov
fld
in
sbb
lea
push
je
rclb
inc
fists
dec
lret
xlat
movsl
lds
sbb
add
sub
mov
fcoms
lcall
jns
decl
das
sbbl
xor
push
mov
das
push
push
dec
xchg
xor
lcall
addr16
adc
add
push
std
test
jae
lods
mov
mov
roll
insl
loop
je
jecxz
je
fiaddl
xor
test
call
call
adc
mov
mov
outsb
add
insl
mov
and
lcall
int
enter
push
add
xchg
xor
mov
inc
adc
in
jle
lods
push
idivl
les
sbbl
aad
outsl
idivl
les
mov
pop
addr16
fidivl
inc
aam
pop
xor
jns
out
ret
incl
in
dec
je
inc
pop
add
les
dec
push
inc
and
add
xchg
repz
jle
sti
adc
cmc
testl
add
add
lea
inc
ret
movb
add
lods
ja
sbb
xchg
out
std
lea
inc
add
mov
dec
fidivs
xchg
pop
out
ja
xchg
ja
mov
jno
or
jo
shl
mov
cmp
repnz
ret
rcr
cmpsl
idivl
push
push
jo
add
push
pop
or
add
add
popf
shll
xlat
add
mov
aam
dec
cmp
les
outsl
ret
add
pop
add
push
mov
aam
mov
sub
lea
aam
xchg
cmp
aaa
mov
lea
ret
mov
sbb
pop
adc
sub
bound
lret
imul
xchg
push
add
filds
add
rcrl
jmp
int3
jb
lret
mov
dec
lds
add
jge
push
insb
jge
push
mov
or
xor
adc
rorb
bound
jecxz
add
or
and
xor
mov
xchg
inc
clc
negb
jp
pop
leave
out
push
push
mov
push
mov
add
xchg
mov
mov
pop
test
xor
rol
push
call
mov
ficoms
push
pushl
push
incl
ss
in
fadd
or
and
jbe
mov
es
pop
pop
call
xchg
in
push
sub
jbe
xchg
dec
or
push
incl
dec
cmp
add
ret
outsl
add
mov
les
xchg
int3
push
add
add
inc
fmuls
or
jnp
mov
pop
inc
je
fwait
sub
add
ja
sar
xchg
pop
sar
fldenv
jl
fsubl
jmp
or
enter
mov
je
add
mov
fwait
or
sti
sbb
call
icebp
adc
pop
fwait
outsl
cld
je
pop
cmp
add
xchg
insb
lock
mov
jae
scas
pop
add
jo
push
stos
test
pop
out
pop
xchg
add
pop
mov
or
les
js
push
bound
pop
cmpsw
add
pushf
add
getsec
subl
daa
clc
leave
stos
push
push
inc
cmp
int3
sbbl
daa
clc
mov
data16
add
inc
js
add
filds
les
dec
xchg
add
js
out
data16
prefetch
push
mov
inc
lret
xchg
push
shll
incb
push
mov
push
pusha
adc
push
sbb
sti
inc
jmp
sbb
adc
sbb
cld
jae
inc
jmp
add
pop
add
testb
call
mov
adc
enter
rcrl
add
add
mov
out
fsts
test
addb
push
dec
call
daa
movl
adcl
popf
or
mov
sbb
sldt
add
add
push
cltd
pop
idiv
loop
std
mov
call
je
push
test
xchg
test
ret
cmp
add
sbb
mov
xor
les
lea
insb
std
stos
adc
mov
js
pop
testl
push
jnp
cld
fwait
sub
add
push
adc
out
xor
pop
roll
push
inc
jnp
jne
lods
lock
imulb
sbb
pushl
es
dec
add
enter
ret
imul
fwait
push
das
add
addr16
ja
jle
jae
outsl
jae
fyl2xp1
imul
jle
ret
mov
jbe
add
pop
xlat
add
les
out
jnp
xchg
stc
inc
loopne
add
xlat
sbb
les
adc
push
add
mov
out
in
and
sti
fildll
ret
loope
xor
je
mov
daa
lock
imul
pop
sub
inc
add
jecxz
cld
add
jecxz
fs
add
add
loop
mov
rclb
lcall
mov
inc
in
add
push
rcrl
add
push
pop
jmp
push
pop
adcl
inc
test
dec
shlb
mov
stos
push
or
sti
fsubr
aad
movsb
xor
jae
jmp
sbb
add
add
faddl
lret
addr16
jmp
insb
pop
test
add
movsb
call
call
cmp
jg
pop
mov
or
pushl
xor
add
sbb
push
es
push
pop
or
fldl
call
loopne
jno
out
out
cmp
or
add
pop
add
add
sub
ret
jmp
hlt
jb
adc
das
push
incb
mov
inc
mov
mov
adc
mov
jo
repz
sahf
jmp
call
ret
lret
enter
data16
sub
jnp
repz
mov
leave
enter
push
dec
das
sub
fs
sbb
je
sbb
vhsubps
outsb
cmc
lock
outsl
testl
pop
dec
push
push
mov
stos
imul
mov
addr16
mov
pop
sbb
or
out
sbb
incb
pop
imul
pop
add
pop
mov
pop
aam
out
fisttpl
out
ds
add
add
aam
rcll
push
in
jmp
into
cmovo
add
sahf
mov
cmp
daa
add
dec
sahf
fcomps
cli
ret
imul
jg
sub
push
add
push
jbe
push
outsb
iret
adc
fcompl
xchg
aad
addr16
scas
test
pop
out
adc
add
mov
jb
add
daa
add
pushf
das
les
add
mov
xchg
cmp
lahf
push
adc
lea
ret
hlt
dec
push
add
aaa
sbb
pop
push
insb
push
add
shlb
pop
std
mov
lahf
popf
cld
sbb
mov
add
xorl
push
dec
call
jb
fdivrp
aad
aad
push
add
mov
or
xchg
cmp
clc
or
sarb
mov
test
push
lds
add
dec
rcrb
mov
in
sub
fs
lods
sbb
add
jmp
cld
in
hlt
std
clc
push
jne
jns
test
aas
cmp
jp
cmp
add
adc
and
mov
outsl
cs
call
cmpsb
test
dec
push
lea
into
push
lcall
push
std
jne
jns
add
add
js
ljmp
add
add
mov
push
dec
jo
push
inc
fistps
xchg
lds
adc
and
call
mov
mov
js
mov
add
stos
repz
scas
or
add
inc
je
clc
lahf
mov
add
jl
xlat
push
dec
ss
cmp
lret
sahf
add
dec
ss
test
fmuls
xchg
je
mov
pop
cmpsl
add
pause
addb
bound
push
inc
cmp
jmp
repz
sbb
lret
shll
fcomi
sbb
add
mov
mov
iret
cmpsl
cmp
ret
stos
lods
inc
or
aad
pusha
or
sub
add
pusha
adc
mov
mov
icebp
add
xlat
cmp
stos
je
push
stos
adc
sti
roll
sub
rcrl
movsl
sub
inc
popa
movsl
sub
aam
add
add
push
add
cmp
dec
cwtl
pushf
sahf
or
pop
pusha
popf
lret
inc
rclb
fsubs
enter
mov
adc
jo
insb
add
mov
out
xchg
dec
std
pop
rolb
fs
popl
lcall
inc
jnp
mov
inc
je
out
imul
rcl
xchg
pop
test
adc
add
jp
addl
adc
cmpsb
sbb
test
add
or
outsl
adc
sub
enter
push
mov
rcll
in
cmp
je
and
lds
in
push
std
jne
rcrl
lcall
jbe
push
test
add
ss
xorl
sbbb
add
testl
lock
sbbl
insb
pop
add
repnz
jne
jmp
clc
les
sti
insb
pushf
roll
in
and
pop
ret
add
dec
aaa
pop
cmp
or
lea
hlt
add
sbb
cs
mov
stc
test
repz
inc
mov
divl
jge
xrelease
repz
xor
sbb
add
sbb
adc
fwait
cmpsb
pop
out
aam
add
sub
mov
insl
adc
fdivs
and
imul
les
adc
adc
pop
jb
aas
jne
cmovno
hlt
nop
mov
shll
scas
add
pop
ja
aad
aad
out
add
out
add
pop
jb
add
shlb
mov
shrl
pop
ret
push
xor
enter
fmulp
shll
pop
mov
cli
ret
xchg
dec
sbb
inc
xor
sbb
adc
jbe
add
dec
cmp
xor
mov
rcrb
xor
jmp
iret
call
jno
inc
add
add
add
mov
mov
add
idivb
add
adc
pop
add
pop
je
orb
insb
inc
jmp
repnz
call
lahf
pop
fisubrs
shlb
iret
pop
call
gs
xchg
add
push
call
push
jb
xor
in
lcall
push
xor
insl
push
inc
inc
or
jne
jae
mov
or
pop
add
enter
push
mov
sarb
sub
jl
ret
adc
mov
inc
sub
cltd
jno
fs
sti
popf
inc
xor
cs
cmpsb
jae
and
sub
push
ror
idivl
loop
je
les
add
mov
add
add
loopne
clc
add
les
cmp
sub
leave
arpl
ljmp
mov
mov
das
scas
mov
add
insb
iret
pop
sub
jmp
ret
enter
adc
pop
adc
mov
rorl
aas
les
inc
pop
mov
inc
pop
hlt
push
jnp
mov
add
les
xlat
mov
mov
mov
dec
mov
out
jg
xor
int3
pushf
call
or
sub
inc
sbb
mov
pop
popa
mov
fisubrs
mov
rolb
xchg
lock
fs
add
push
hlt
addb
ljmp
xchg
push
or
push
pusha
lret
lret
icebp
add
add
rcll
cs
pop
out
enter
insl
push
rorb
pusha
fcmovnb
shrl
jecxz
pop
add
test
in
imul
add
inc
icebp
ret
xlat
sar
xchg
sub
std
jae
sbb
cld
xchg
push
add
lock
enter
jne
inc
lds
ret
iret
inc
mov
roll
fxch
push
jb
insb
add
sbb
out
imul
movl
std
jmp
movl
inc
inc
cltd
add
pop
mov
decb
xor
mov
jnp
je
dec
call
mov
inc
and
jl
jne
imul
dec
push
jmp
or
xchg
decb
push
lahf
cmovo
in
push
push
add
in
sub
or
push
pop
or
pop
sti
add
gs
xor
push
mov
ret
imulb
sahf
les
enter
imul
or
push
incb
push
enter
addr16
cli
insb
pop
pop
xchg
imul
les
je
xchg
xor
adc
test
inc
push
and
xchg
fistl
jne
lret
stos
sahf
les
call
decl
inc
clc
ficompl
call
incl
xor
not
ret
add
sbbb
jo
or
les
out
mov
in
jl
pop
out
jecxz
pop
mov
and
add
fisubrs
test
jg
pop
out
ds
lret
imul
out
dec
ljmp
ret
add
adc
scas
push
pop
imul
cmpsl
mov
lahf
dec
jmp
scas
push
cmpsl
add
inc
push
in
fnstsw
mov
jns
icebp
xor
mov
shr
add
push
cs
push
test
pop
pop
mov
in
cld
jne
jae
xchg
sbb
loope
outsl
int3
xchg
cmpsb
shl
inc
add
clc
outsb
clc
fs
mov
add
add
test
and
push
jb
add
add
clc
mov
and
jo
jmp
xbegin
std
ljmp
xor
pop
xchg
pop
and
lahf
loopne
pop
jecxz
call
xchg
cmpb
jae
mov
mov
add
sub
std
lcall
pop
add
inc
add
in
or
add
or
addb
out
std
jmp
sub
mov
in
push
test
dec
call
test
out
mov
es
sahf
adcl
mov
inc
nop
mov
mov
out
testb
dec
inc
int
cmp
mov
addl
dec
mov
mov
add
add
lea
push
mov
push
je
jg
lret
sub
into
lcall
dec
add
cmp
lods
std
andl
pushl
xlat
pop
fiadds
addl
push
mov
dec
inc
js
int3
aas
fildl
les
jl
sbb
push
jge
inc
js
add
pop
out
jp
hlt
pop
mov
out
nop
bound
add
loope
push
and
call
pop
imul
add
sub
jmp
fadds
fisubs
fxch
sub
pop
mov
pop
fadd
loope
test
pop
out
or
out
lock
inc
outsb
lods
push
lock
imul
cs
lahf
mov
cmpsl
push
cmc
out
or
mov
rolb
add
add
sub
inc
bound
jb
hlt
push
bound
sub
pop
mov
icebp
je
jp
mov
mov
jbe
pop
mov
call
rolb
push
jae
jb
fs
decl
call
lcall
bound
cld
vunpckhpd
xchg
add
jb
sti
sti
mov
hlt
push
inc
out
repz
jmp
pushf
pop
add
and
add
daa
rolb
and
sbb
pop
add
stos
push
call
push
jne
cltd
add
mov
insb
cltd
add
jbe
pushl
mov
jge
in
push
add
jb
std
out
xchg
cmpb
or
leave
fbld
push
fld
add
pop
push
call
faddp
or
xchg
jno
fistps
add
repnz
push
rorb
add
je
jne
and
jbe
les
sbbl
add
jne
inc
add
mov
add
dec
jno
cmc
nop
test
jge
rolb
mov
jle
jae
addb
std
mov
mov
mov
add
addb
inc
aad
or
int
sbb
les
add
and
shlb
insb
sti
gs
add
inc
fiadds
add
pushf
ljmp
frstor
or
addr16
jp
xlat
cmpsl
fcomp
frstor
orl
adc
sub
inc
sbb
cmc
mov
sub
mov
add
jmp
stc
inc
orl
out
adc
adc
add
xor
jnp
bnd
lds
fcmove
loop
dec
in
jmp
out
cmp
pop
dec
xchg
sarl
jo
pop
filds
sub
mov
aaa
jmp
add
shr
sbb
jmp
inc
outsb
fsubrs
pop
mov
popf
sbb
ljmp
enter
not
sbb
jg
xchg
sbb
mov
pop
or
fdivrs
inc
push
test
jae
mov
sub
jb
pop
push
mov
pop
icebp
in
rcr
and
je
add
pop
jb
rcrb
movb
add
pop
push
push
dec
rcrb
xchg
mov
mov
aam
jne
xchg
add
clc
outsb
subb
sub
pop
xor
ret
test
pop
push
in
push
jo
in
xchg
adc
sub
add
xchg
add
or
ljmp
jg
pop
or
xor
lods
jno
pop
bound
add
test
in
jnp,pn
push
cmp
call
popf
pop
test
sbb
mov
les
add
ljmp
inc
insb
push
dec
adc
adc
ljmp
mov
dec
test
test
movsl
push
add
test
pop
les
pop
and
adc
stc
mov
out
aas
les
add
add
cmp
add
mov
xor
ficompl
les
push
lock
mov
scas
out
aaa
dec
inc
mov
addl
int
mov
pop
call
or
inc
sbb
dec
inc
mov
leave
jnp
jmp
les
push
test
out
les
mov
dec
lcall
mov
fistps
hlt
sub
inc
in
adc
dec
cwtl
xchg
mov
dec
daa
hlt
add
pop
insb
inc
cwtl
push
paddb
pop
out
inc
cwtl
fbstp
js
dec
sub
in
out
sbb
jmp
in
push
loop
mov
push
pop
mov
add
push
push
lret
pop
xchg
stos
inc
adc
jl
add
dec
and
add
dec
add
sub
push
call
mov
xchg
xchg
fsubrs
subps
inc
outsb
or
je
push
rorl
ret
xchg
or
in
enter
jbe
adc
xchg
push
in
push
and
sbb
ljmp
ret
loope
xchg
les
mov
jmp
jecxz
and
adc
pop
addr16
add
add
add
dec
lea
dec
call
in
jne
sbb
insl
pop
pop
jmp
xlat
sahf
add
popa
inc
or
push
mov
xor
in
repnz
mov
jmp
in
add
mov
jecxz
mov
push
decl
pop
sub
jmp
add
cs
fsts
mov
add
cmpsb
jne
stc
mov
les
orb
inc
mov
repnz
les
je
cld
into
pop
orl
stc
cmc
dec
je
sbb
inc
mov
add
test
push
mov
movsb
into
sti
dec
push
ljmp
stos
inc
adc
jnp,pn
inc
insl
cmc
adcb
push
cmp
inc
add
add
mov
je
push
sti
xchg
test
pop
jmp
inc
aad
inc
into
dec
dec
mov
cmp
scas
decb
inc
pop
daa
sbb
jg
shll
dec
cwtl
sti
mov
ljmp
xorb
cs
sbb
mov
pusha
cld
dec
mov
sar
push
jo
pop
adc
add
inc
xor
add
mov
stos
clc
and
pop
mov
outsl
lret
jmp
xor
mov
xor
cli
add
dec
icebp
mov
push
mov
pushf
dec
cmc
cmpl
fcomip
out
push
add
fstpt
lods
push
pushf
push
jne
dec
inc
push
jae
pop
cmp
hlt
mov
call
in
test
pop
add
pop
or
jmp
mov
popa
and
in
addb
inc
in
bound
out
inc
sub
xor
mov
div
push
push
mov
out
repnz
inc
cmc
jle
mov
lods
sahf
in
pop
and
or
push
mov
inc
mov
jno
add
pop
or
ficompl
sbb
dec
icebp
mov
jno
sub
mov
fs
enter
push
pop
ljmp
int
insl
out
mov
popa
popf
in
push
out
mov
loop
call
movsb
call
addr16
ss
push
in
ret
mov
add
mov
add
les
pop
aas
les
aas
les
pop
aas
les
pop
aas
pop
aas
les
aas
out
aas
les
pop
aas
les
pop
aas
js
inc
in
push
adc
pand
into
aas
les
out
out
adc
jp
js
aas
push
inc
sub
add
cltd
test
icebp
mov
fnstcw
mov
add
add
cmp
jno
jp
hlt
stos
inc
push
dec
cmp
add
pop
mov
jbe
add
hlt
inc
das
call
mov
mov
aam
lret
lcall
out
loope
jg
pop
out
repz
xchg
ret
lcall
rcr
push
add
pop
dec
repz
out
push
jno
stos
arpl
add
mul
fcompl
lcall
mov
pop
shrl
aaa
inc
fsubrs
cmpsl
mov
mov
fsubrl
lcall
push
xchg
std
adc
or
rolb
xchg
push
inc
or
mov
fsubr
push
inc
jmp
or
jb
or
std
xchg
jo
jge
cmp
dec
xchg
push
inc
lcall
jae
xchg
mov
pop
mov
lcall
gs
int3
add
in
xchg
xchg
leave
ret
or
add
cmc
push
insb
adc
xchg
je
cwtl
sbb
call
xor
decb
test
cmc
incl
mov
je
cli
inc
fcoml
insl
pop
std
jne
cwtl
adc
lods
sbb
push
mov
pop
aaa
pop
mov
sbb
add
sar
nop
pushf
cmovo
ret
fwait
je
jp
jne
lcall
mov
mov
in
sahf
sub
inc
out
je
pop
repz
scas
add
fwait
insb
adc
test
stos
push
cmp
test
mov
jle
jae
jle
repz
vunpcklps
out
adc
mov
dec
scas
cmp
mov
adc
jbe
jae
in
repz
icebp
loope
fstps
inc
je
or
sti
pop
out
test
dec
dec
movsb
cld
repnz
enter
cmp
test
mov
sbb
dec
push
lea
je
jb
scas
dec
daa
add
aad
inc
xorl
jmp
call
pop
inc
sbb
std
rorb
test
cmp
fbld
xor
dec
push
pop
out
fcoms
mov
iret
movsb
aas
add
jl
bnd
inc
clc
push
negb
sbb
aas
sbb
or
repz
loop
inc
cli
andb
xlat
ss
mov
mov
bound
mov
xchg
shlb
call
aad
insb
lret
insl
adc
inc
mov
mov
stos
xchg
or
loopne
jecxz
loope
out
stc
inc
mov
insl
pop
mov
sti
push
pop
cli
pop
add
add
xchg
adc
jae
xchg
mov
je
sub
repz
jmp
inc
pop
add
loopne
cli
jno
sub
xchg
add
xor
andb
shlb
inc
lcall
dec
mov
mov
mov
xor
inc
inc
add
ret
cwtl
daa
je
ds
ret
push
push
fldt
push
add
pop
std
adc
and
or
push
xchg
push
mov
repnz
mov
inc
popf
push
mov
xor
add
push
pushl
push
out
out
pop
add
insl
aad
or
push
add
push
mov
les
cmp
je
pop
les
mov
inc
pop
adc
testb
push
xchg
jne
out
cmc
add
imul
fcom
inc
jae
scas
sbb
lds
add
sbb
sbb
add
lahf
out
add
idiv
cmp
out
mov
sbb
cmp
add
sar
sub
or
loope
pop
mov
xlat
pop
adc
inc
pop
les
into
pop
mov
add
xchg
sarl
push
push
cmp
fcomps
fcmovb
sub
sbb
cltd
or
mov
movsw
aad
je
test
int
hlt
aas
cli
inc
das
adc
ds
arpl
fimull
pushf
or
icebp
xor
sbb
add
pop
popl
pop
mov
cmovne
filds
les
aam
ds
mov
add
data16
data16
sti
ficomps
fdivrp
add
jb
pop
aaa
aas
shlb
push
push
std
cmc
scas
into
mov
mov
add
inc
sahf
je
push
and
cmp
push
sbb
inc
jmp
pop
fdivp
inc
mov
fadd
jmp
jg
sub
rcrb
sub
cmp
bound
std
popf
adcl
fimuls
cmc
xor
and
add
lock
movb
test
add
mov
out
push
jp
mov
xor
inc
rorl
and
add
fists
pop
pop
mov
shrl
call
shl
pushl
call
mov
add
inc
add
sbb
lea
pop
mov
or
jg
pop
add
mov
mov
push
cmpl
or
push
xchg
jmp
inc
pop
ljmp
adc
mov
jno
testl
add
add
rorb
mov
push
and
js
add
dec
jl
icebp
jns
shl
add
mov
sub
mov
mov
adc
pushf
shll
dec
push
sub
add
sar
stc
xor
dec
mov
out
fisttpll
xchg
sbb
fcoml
bnd
lret
pop
add
xchg
ret
adc
or
dec
xchg
add
pop
mov
or
pop
jg
rcrb
sub
stos
mov
jnp
hlt
inc
and
stos
scas
push
jnp
fnstsw
cmc
sub
cltd
iret
js
rcrl
repz
add
pop
outsb
mov
adc
adc
sub
mov
mov
lds
les
shl
flds
lock
bound
add
add
stos
adc
and
std
scas
mov
fwait
lods
cmp
jg
ret
pop
orl
mov
out
imul
push
and
jae
mov
fnstenv
loopne
jmp
inc
jle
jmp
push
jmp
sub
push
jb
xchg
pop
loope
jge
out
lret
pop
je
add
in
jb
pop
std
sbb
enter
adc
jb
mov
mov
xchg
add
add
dec
in
lea
mov
lock
mov
mov
aad
jb
loop
add
xchg
add
popa
std
dec
xor
jge
dec
add
mov
ret
push
mov
sub
add
xor
pushl
cmpsb
in
bound
mov
scas
mov
mov
jne
je
insl
jecxz
scas
jo
fidivl
fmuls
jae
sbb
inc
js
and
mov
mov
mov
int
out
adc
or
pop
sbb
outsl
bound
sbb
fdivl
incl
xor
mov
lret
add
cmp
aaa
out
aam
push
mov
jg
faddl
les
je
dec
mov
add
pop
mov
mov
mov
push
scas
iret
inc
pusha
mov
add
xchg
sbb
out
sub
call
push
add
fstl
ds
je
imul
ss
call
call
mov
shlb
mov
les
out
pop
sub
cmp
lock
mov
sar
dec
xlat
xor
data16
ficompl
jmp
push
nop
push
push
mov
mov
pop
add
pop
push
inc
sar
sub
je
dec
dec
cld
cmpsl
insb
rolb
jb
lcall
pop
mov
cli
mov
inc
sbb
jge
jecxz
bound
bound
xor
roll
adc
adc
ficompl
add
push
ror
add
fcomps
dec
insb
std
int
xchg
cmp
insb
inc
add
fstl
jbe
stc
push
bound
subb
orb
call
hlt
sbb
add
jmp
gs
aad
lea
movzwl
xchg
add
addr16
fsubs
bnd
xchg
in
pop
add
addl
add
add
mov
mov
mov
xchg
inc
lea
sbbl
adc
mov
decl
cld
push
dec
jl
in
lret
decb
fldcw
adc
mov
add
inc
sub
je
rolb
mov
ret
inc
aam
add
pop
std
mov
mov
sbbl
add
mov
mov
xlat
inc
mov
sbb
sahf
adc
inc
add
push
sahf
ret
sub
pop
sbb
xor
sbb
or
lcall
mov
lods
sbb
mov
add
mov
notb
out
adc
inc
push
sbbl
or
lret
lret
das
or
inc
lcall
add
arpl
xchg
or
les
jbe
pop
out
xchg
lods
int3
jl
out
add
loopne
subl
add
daa
xchg
jl
sub
arpl
add
les
sub
arpl
xor
out
cmpsb
pop
out
push
fldl
pop
jmp
sub
insb
aaa
sar
sahf
mov
mov
fcom
cmc
inc
adc
dec
adc
das
add
pop
add
dec
dec
cld
mov
or
jmp
inc
faddl
jmp
ficoms
call
in
jb
loop
call
mov
ficoms
fs
call
insl
add
jb
cmp
fmul
fadds
es
mov
mov
movzwl
mov
sbb
push
fidivrs
nop
push
cmp
pop
push
add
xchg
addr16
push
push
aad
adc
mov
mov
adc
push
repnz
in
xor
mov
ljmp
mov
in
in
jp
add
push
mov
rorl
push
sbb
addr16
jb
cmp
mov
mov
sar
inc
jnp
jae
mov
enter
cwtl
mov
inc
dec
enter
cs
cmp
add
aas
hlt
sbb
sbb
add
out
roll
rol
stc
mov
sub
ret
xor
mov
mov
sbbb
call
shl
rorl
sub
add
lock
mov
movsb
inc
idivb
or
testb
pop
or
lods
pop
iret
mov
jns
aad
cmp
sub
dec
xchg
jb
and
sahf
add
in
sbb
jecxz
add
dec
call
mov
loope
sbb
pop
push
scas
loope
sbb
iret
incl
pop
out
inc
imul
daa
mov
adc
pusha
scas
add
sbb
js
push
push
iret
and
push
mov
outsl
jecxz
add
hlt
jae
xchg
and
pop
je
lret
sub
addr16
lock
std
add
push
popa
jno
pop
pop
mov
or
jmp
mov
inc
lock
jmp
das
pop
mov
in
addl
inc
add
jmp
sub
mov
rorb
dec
inc
clc
push
test
lods
rorl
dec
mov
adc
pop
push
push
popf
in
jmp
or
lock
rorb
push
out
push
or
sbb
mov
loopne
mov
dec
ret
jmp
mov
add
jl
xchg
aad
add
or
push
lock
push
test
add
mov
add
push
mov
stos
in
xchg
cmp
inc
dec
inc
push
pop
fwait
stc
cmp
sub
test
mov
or
inc
mov
mov
fcompl
push
inc
rsqrtps
neg
cmpsb
mov
enter
insl
cmp
das
aam
add
mov
push
jno
movsl
les
je
xor
scas
out
add
call
in
dec
mov
jmp
aad
ret
jnp
sbb
jge
les
call
cmp
mov
jmp
cli
sti
jmp
pop
cli
inc
pop
les
push
add
ret
mov
iret
push
aas
dec
jle
ret
repnz
vandps
insl
sbb
mov
mov
add
add
roll
sar
cmovo
pop
xchg
decl
adc
adc
xor
inc
xlat
jb
add
sti
lcall
mov
inc
ret
add
pop
pop
jg
lret
sub
jb
add
fidivrs
pop
out
xlat
pop
call
jno
addr16
sub
push
inc
fidivrs
test
or
fmull
imul
push
sub
inc
xchg
cmpsl
add
add
aam
sbb
scas
or
jmp
or
call
loopne
mov
pop
mov
push
lds
loope
fnstenv
pop
add
in
or
sub
sub
xchg
add
add
outsb
call
ja
call
inc
je
jb
mov
jecxz
pop
test
pop
push
xor
hlt
mov
fsubrl
testl
jb
add
push
add
call
and
pop
push
pop
push
dec
mov
push
and
xlat
pop
add
add
fidivrs
roll
xor
std
inc
mov
addr16
jmp
orb
push
in
pop
add
jnp
mov
xchg
cmc
pop
add
popw
sub
or
out
or
fisttps
cmp
cmp
jae
insb
inc
jae
insl
inc
je
cmp
into
xor
add
add
imul
imul
inc
push
inc
mov
aaa
add
lock
out
dec
rolb
mov
jg
mov
add
mov
decl
pushf
loopne
in
push
jns
int3
dec
add
les
sub
outsb
adc
cmp
cld
push
mov
add
sbb
lret
jecxz
add
aam
andb
out
cli
xor
cltd
mov
stos
mov
push
jnp
jb
lret
shl
jp
pop
pusha
mov
push
bound
push
shrb
testl
or
ds
jnp
jle
js
shll
adc
pop
or
xchg
xor
ds
inc
add
imul
mov
cmp
add
sbb
out
dec
dec
lret
sti
jmp
xchg
mov
test
push
pop
add
xor
imul
jp
roll
call
enter
xchg
enter
sbb
bound
sarb
jbe
inc
test
jge
movl
arpl
push
fidivrs
fnstcw
add
push
mov
faddp
cmp
push
xor
xchg
leave
loopne
jmp
xchg
fdivp
adc
mov
sbb
xor
ficoms
lcall
add
inc
mov
or
pop
add
outsb
inc
lret
jg
pop
sub
push
mov
jmp
add
cs
ficoml
inc
lock
cmp
mov
xchg
ja
movsl
or
add
inc
lock
jne
push
or
push
push
fidivs
mov
out
jno
in
xchg
pand
add
inc
je
pop
enter
sbb
add
xchg
xchg
mov
out
mov
movsb
faddp
add
rcl
outsl
mov
mov
ret
and
testb
adc
mov
mov
imulb
xchg
les
testl
pop
xchg
or
sub
adc
jg
sbb
sub
add
sub
lret
jle
add
dec
daa
lret
testl
pop
dec
mov
pop
push
arpl
les
in
pop
jg
mov
push
fldt
mov
arpl
bound
inc
int
xchg
rcr
add
ret
mov
add
ret
push
les
sub
ret
inc
aaa
cli
mov
hlt
lds
dec
add
add
dec
cmpsb
add
aad
in
lds
mov
repnz
call
stos
pop
inc
push
les
in
and
inc
aas
and
enter
in
std
inc
in
ret
std
jmp
push
mov
xchg
ja
jb
push
adcl
pop
subl
lahf
icebp
adc
cmp
adc
push
mov
dec
aas
and
add
je
push
gs
dec
test
pop
repnz
dec
sbb
jne
mov
inc
and
push
fucomip
sbb
std
jbe
lock
mov
mov
lea
pushl
loop
sbb
push
je
imul
mov
sbb
adc
add
mov
and
jns
jae
jae
mov
test
add
mov
mov
out
adc
xor
decl
add
popa
jno
inc
mov
xor
mov
dec
in
mov
push
jmp
iret
bnd
dec
sti
inc
hlt
xchg
add
imul
les
add
lds
xchg
sti
add
sbb
fs
xor
test
adc
sti
dec
testb
cli
cmp
out
movsb
add
dec
jae
and
add
dec
mov
pop
out
mov
ds
divl
adc
imul
bound
pop
pop
jb
loop
fiaddl
out
pop
bound
and
dec
add
scas
sbb
sbb
bound
pop
out
sti
xor
mov
jo
out
inc
fwait
mov
add
outsl
push
arpl
int
fdivrs
out
arpl
adc
pop
dec
push
out
mov
test
add
inc
add
mov
xor
add
stos
mov
rolb
dec
lea
jmp
pop
mov
cmp
std
add
std
add
test
decl
push
jnp
jmp
stos
pop
dec
dec
xchg
repz
mov
mov
call
sub
sub
push
gs
ret
aad
add
movl
and
or
adc
test
shlb
push
or
inc
mov
ror
and
sbb
add
scas
push
push
xorw
xchg
mov
std
ljmp
push
push
out
mov
cmp
jo
xor
add
add
add
add
cld
pop
pop
add
sbb
pop
add
repnz
add
mov
lcall
add
mov
dec
xchg
push
pushf
arpl
aas
les
pop
dec
ja
dec
cmp
ja
aas
les
pop
bound
rcll
jae
lea
fsubl
add
add
sub
imul
decb
inc
pmuludq
cmp
mov
jnp
les
les
or
arpl
or
pop
sbb
mov
sbb
push
fcmovb
xor
fistpll
dec
pop
lret
sbb
shrb
into
xchg
fidivrs
mov
out
add
aas
popa
cmp
ds
pop
enter
daa
lret
rcrl
pusha
and
inc
sbb
out
les
sbb
adc
push
call
mov
mov
sbb
xlat
cmp
cwtl
outsl
mov
shrb
push
pop
xor
push
add
int
add
pop
xlat
sarb
add
add
fldenv
iret
push
aas
mov
rol
pop
shr
cmp
push
je
rclb
std
sbb
shlb
mov
sub
sbb
sub
cmp
jae
fucomip
std
jbe
shl
bound
mov
push
mov
pop
and
pop
add
push
addl
ljmp
sbb
imul
or
xchg
std
orb
shrl
add
push
out
lea
outsl
jecxz
das
push
xor
xchg
add
mov
andb
add
pushl
popa
xor
std
imul
xchg
std
sbb
jmp
pusha
push
push
xor
fsts
jmp
std
inc
lods
or
incl
fstpt
mov
or
ret
add
sub
fcmovnb
pop
add
sbb
rolb
add
les
sahf
inc
imul
movl
jae
mov
mov
cmp
fisttpl
les
fwait
mov
testb
incb
fsts
add
and
mov
or
lods
or
add
pop
out
dec
push
add
in
mov
dec
pop
jp
icebp
xchg
les
sarl
bound
ficomps
mov
mov
out
pop
lcallw
push
rolb
ret
and
and
inc
daa
jecxz
push
dec
sbb
add
add
popf
bound
fnsave
repnz
cmp
ret
jecxz
popa
ror
mov
or
punpckldq
inc
mov
scas
inc
negb
addl
das
aam
lahf
pop
add
mov
adc
mov
andl
pop
xchg
jbe
xorl
imul
add
nop
stos
mov
xor
cmp
loopne
add
push
out
sub
adc
enter
pop
dec
inc
jmp
test
fld
pop
add
xor
hlt
iret
sbbl
adc
enter
xor
add
loopne
add
rcl
call
and
je
push
clc
aad
lods
out
inc
add
out
sarl
add
mov
fwait
std
subb
std
push
loope
std
ljmp
pop
test
sbb
addl
mov
xchg
rcl
test
pop
test
xchg
add
call
adc
jecxz
fsubl
jno
pop
fdivr
add
jne
push
mov
add
add
sub
mov
cmp
jo
decb
ret
orb
or
aas
lahf
sub
je
jge
pop
mov
add
std
cld
std
jae
aam
pop
mov
ret
xchg
das
xchg
mov
adc
cld
mov
cli
aas
les
or
ret
mov
add
inc
stc
cwtl
or
jbe
mov
idivb
les
add
stos
cs
les
fildll
hlt
sbb
je
out
repnz
cmpsb
inc
inc
inc
aaa
idivb
cmpsl
sti
jge
loop
xchg
pop
faddl
jbe
stos
iret
ja
lock
sbb
rcl
jo
cmpsl
ret
push
adc
pop
jae
and
mov
xchg
scas
add
cmc
fldt
mov
cltd
enter
fstpt
push
fwait
adc
cmp
xchg
xor
jbe
mov
loope
insb
negl
pop
mov
imul
scas
stc
xchg
mov
jne
or
aaa
pop
rorl
cwtl
inc
inc
sbb
dec
fldl
popa
inc
ss
sbbb
add
push
js
push
or
and
xor
xor
xor
jo
sbb
pop
xchg
pop
scas
cmp
outsl
insb
add
push
pop
shrl
scas
cltd
push
sbb
cmc
pop
cmp
or
out
sbb
mov
mov
dec
dec
mov
jl
js
lods
push
outsl
xor
rorl
add
add
cmp
cli
aad
add
out
jmp
andb
cmp
xor
inc
add
ret
mov
aas
mov
add
lds
jl
stc
cld
mov
fwait
pop
mov
mov
mov
pushf
push
test
push
les
inc
jle
addr16
xchg
call
roll
cmp
push
std
adc
stos
sar
add
push
sbb
add
ret
stc
mov
cld
mov
fwait
add
ffreep
ret
add
mov
jl
dec
xchg
push
pop
aad
add
mov
add
rcrl
je
dec
movsb
cli
cmp
je
pop
lods
cli
sub
mov
push
mov
sar
pop
inc
add
jns
lahf
mov
lcall
orl
inc
out
insb
ret
les
dec
xlat
xlat
cmpsl
cltd
test
or
cmp
insl
cmpsl
jge
mov
xchg
stos
add
xchg
orl
lret
mov
push
inc
jecxz
les
cvtps2pd
ss
lret
cltd
movsb
jae
pop
out
inc
inc
pop
repnz
add
add
pop
insb
inc
mov
ret
and
add
ret
je
fiadds
aaa
mov
test
enter
jo
push
mov
jmp
pop
std
xor
in
std
mov
add
ret
dec
insb
in
jb
pop
jg
fwait
pop
add
push
push
push
mov
jl
call
add
outsl
add
pop
adc
enter
cmp
je
jle
jbe
mov
mov
subl
xchg
addl
enter
push
je
cwtl
scas
std
je
fnstsw
daa
mov
xor
add
xor
test
rcr
lea
cld
lcall
out
js
xchg
std
std
out
pop
add
and
jno
add
jmp
mov
pop
test
xchg
mov
xchg
shrb
push
call
pop
dec
call
aad
push
loopne
cld
lcall
pop
add
in
add
shll
add
jo
and
js
int3
inc
mov
aad
add
fwait
or
xchg
add
vcomiss
roll
pop
shll
les
mov
dec
jbe
orb
ret
or
dec
cmc
pop
dec
imul
jno
ret
js
mov
test
pop
add
inc
add
xchg
cmp
daa
mov
pop
ret
inc
cmp
jb
mov
fisubrl
add
pop
xor
add
pop
xchg
jle
mov
out
xor
repz
lds
add
mov
jns
xchg
out
les
mov
dec
pop
out
inc
xchg
mov
jns
mov
add
loope
sbb
sub
add
out
addb
jbe
sbb
lods
or
orb
loope
mov
test
mov
dec
add
add
pop
add
cwtl
add
pop
and
fnstcw
push
mov
call
call
mov
rcrb
xor
sbb
cld
repz
inc
jmp
pop
imul
cmp
cmpsb
dec
inc
xor
test
add
inc
push
mov
sbb
jmp
add
adc
jbe
add
pop
mov
enter
inc
pop
decb
xchg
add
insl
cwtl
dec
jne
sub
in
sub
mov
call
test
push
test
call
pop
xchg
pop
pop
pop
pop
xor
add
push
push
add
in
and
adc
inc
fstl
dec
mov
imul
add
add
xor
int
xlat
mov
or
call
sub
dec
lahf
clc
js
lods
cmp
faddl
imul
clc
mov
push
test
or
test
adc
das
popa
jne
jnp
test
leave
stc
add
ss
lock
xor
orb
nop
or
stos
jbe
cmc
sbb
add
mov
push
cmp
inc
cmp
dec
inc
stos
ret
jp
insb
add
lods
cmp
call
movsb
cmp
inc
jae
ret
loopne
dec
jnp
mov
inc
pop
dec
enter
test
outsb
rclb
rol
out
idivl
jl
inc
bound
imulb
imul
sub
stos
sub
inc
test
mov
add
pop
mov
cmp
fisubrs
fsubrs
jl
inc
bound
add
xlat
aam
fbld
nop
cmpsl
pop
bound
rorb
rcl
cld
fisubs
lds
adc
jp
test
arpl
test
add
stos
scas
sti
xlat
add
ja
add
jo
popa
call
add
lock
lds
mov
aas
jmp
lds
add
jae
icebp
in
test
push
test
mov
aas
jmp
add
add
pop
rcr
jge
call
loope
js
shrb
pop
mov
jne
aad
pop
push
pop
add
outsl
js
adc
add
test
add
std
scas
pushf
sbb
std
gs
xchg
call
lret
daa
mov
push
clc
mov
fsubs
std
mov
mov
ds
and
push
pop
cmp
push
mov
data16
pop
adc
int
mov
add
movsb
lea
inc
pop
xchg
pop
xor
mov
xchg
add
add
push
inc
adc
loop
sbb
push
cmp
je
lcall
xchg
cmc
jae
and
les
jo
inc
add
test
decl
nop
add
das
jns
push
sub
ljmp
popf
out
out
add
inc
dec
mov
ret
scas
sbbl
add
icebp
mov
cmp
pop
add
add
addb
sti
mov
cmovs
add
les
add
hlt
test
scas
jge
les
add
dec
push
cld
mov
pop
call
loopne
sarb
cli
xlat
jno
fmuls
or
add
out
pop
sarb
xchg
or
rorl
je
pusha
xchg
fxch
pop
add
xchg
pop
decb
xchg
mov
cmp
xor
push
out
dec
ljmp
fbld
pop
popa
pop
mov
shrl
pusha
jb
lds
add
add
out
and
sub
ret
call
or
popf
imul
jmp
lods
xor
pop
add
pop
call
bound
fnstenv
cmpsb
mov
lock
loop
push
xchg
lcall
fildl
arpl
xchg
orb
add
add
inc
xchg
xchg
or
dec
or
add
movsb
std
out
lcall
in
jae
or
add
adc
pop
repz
xchg
cwtl
repz
mov
add
shrb
addb
or
je
repnz
inc
adc
fmull
add
inc
loopne
dec
das
rcrb
dec
cld
add
call
fistps
push
ss
jns
pop
add
sbb
nop
jg
insl
aam
test
sti
sub
andl
jbe
pop
repz
push
faddl
aas
je
add
cmp
dec
icebp
js
aas
pop
add
dec
jnp
add
jbe
mov
les
pop
and
add
pop
mov
push
push
arpl
xchg
fmuls
dec
pusha
sub
addl
mov
rolb
sbb
add
dec
cld
and
add
leave
add
pop
cmp
inc
out
std
std
mov
in
and
add
mov
pop
mov
faddl
out
in
shrl
inc
add
jb
int3
add
gs
pop
out
mov
sub
jbe
in
cmp
daa
rorl
pop
test
pop
jg
jle
fs
ja
aad
or
or
mov
cwtl
movsb
call
inc
fwait
jecxz
or
sub
ret
test
movsb
call
add
movsb
call
leave
pop
ret
or
clc
push
aad
add
pop
std
aam
dec
inc
jmp
add
jecxz
xchg
add
add
out
sub
fidivrl
adc
add
cld
bound
sub
adc
sbb
imul
out
std
inc
inc
shlb
sbb
repz
xor
stos
mov
adc
xor
subl
sti
addl
mov
push
mov
mov
rol
ret
add
add
pop
push
mov
mov
add
dec
std
jae
push
call
mov
roll
js
popf
pop
ret
push
shll
add
sbb
sahf
push
add
mov
sbb
hlt
adc
mov
sbb
ret
lahf
sti
jmp
push
insb
cmc
outsb
pop
cmp
insb
pop
movb
les
cmovo
cs
cld
xchg
mov
insb
lods
and
les
sti
std
les
js
ret
mov
jnp
loopne
cmp
jno
addl
fwait
shrb
enter
jno
orl
dec
js
inc
outsb
call
or
test
mov
sbb
movb
add
add
inc
std
xor
cmpsl
ljmp
mov
data16
pop
out
orb
mov
cwtl
and
enter
jmp
call
jmp
pop
out
sbbb
add
stos
or
sbb
dec
cmp
js
push
adc
mov
xor
adc
call
push
orl
add
add
mov
mov
push
ficoms
int3
pop
roll
sbb
or
fwait
sub
xlat
jb
inc
shll
mov
cltd
push
std
cld
adc
jmp
ds
std
jg
lahf
adc
popa
push
add
ficoms
jmp
lahf
adc
ss
std
aam
testl
push
adc
insb
andb
cmp
pop
addl
dec
scas
orl
arpl
add
push
xor
pop
lea
sti
push
sub
sarb
inc
clc
adc
inc
sub
pop
jno
inc
dec
and
in
roll
pop
int3
inc
or
call
add
fistpl
test
ljmp
push
push
je
and
jne
mov
add
insl
add
ret
mov
inc
test
ljmp
push
add
loopne
cld
push
add
mov
loop
push
push
les
cli
jae
insb
inc
cld
mov
jg
push
add
mov
sbb
add
les
xor
ret
add
lods
scas
sarb
pop
mov
rolb
addps
or
pop
pop
jp
je
xor
adc
mov
rolb
les
adc
rol
cmpsb
pop
shr
pop
ror
add
cld
movsl
add
add
mov
dec
mov
push
dec
xchg
aas
lret
cmp
outsl
mov
inc
mov
rol
movsb
divl
or
and
clc
xlat
stos
faddl
mov
and
enter
call
fdivrp
leave
or
rcll
mov
xchg
push
and
add
lahf
jecxz
pop
xchg
pop
stc
pop
arpl
add
enter
mov
out
pushf
jbe
inc
sbbl
ljmp
add
pop
or
lret
test
sbbb
in
sub
xor
cmp
std
gs
xchg
fdivs
call
insl
pop
cvtpi2ps
xor
addl
xlat
xor
out
mov
xchg
test
pop
std
push
loopne
push
cmp
ss
sub
ffree
xor
rcrb
add
pop
xchg
push
rcrl
xchg
std
add
sti
adc
fisubrl
out
sub
sbb
adc
push
inc
rorb
inc
or
insl
call
test
or
jmp
fdivrl
sbb
pusha
mov
inc
add
popf
pop
pop
cmpsb
ret
es
push
popf
cmpb
push
popf
mov
fucom
add
cltd
nop
sti
jmp
pushf
je
test
shlb
add
xchg
add
xchg
sbb
add
jge
stc
adc
add
jno
std
fiaddl
inc
add
jo
add
mov
test
jbe
push
adc
roll
add
std
scas
lds
fnstcw
clc
call
xchg
cwtl
or
xor
push
ret
dec
mov
add
test
addl
data16
roll
std
adcb
dec
add
ds
or
jmp
mov
fistps
dec
fldl
cmc
imul
outsb
cmc
cmp
sbb
inc
addb
pushf
jmp
xchg
jecxz
xorl
out
les
shll
popf
hlt
or
xor
aas
mov
sahf
jmp
pop
xchg
div
xchg
out
mov
out
jl
pop
add
add
mov
push
add
std
jmp
xchg
data16
arpl
or
inc
loope
outsb
mov
std
xchg
jle
ffreep
cld
stos
xchg
adc
add
jmp
aas
push
jnp
testl
lds
xchg
inc
xor
cld
movsb
repz
sub
xchg
lods
call
add
and
sbb
xlat
xchg
xchg
jecxz
icebp
mov
sub
or
xchg
cld
jno
mov
dec
jnp
add
test
pop
push
js
adc
xor
push
fsubrs
insl
loop
je
xor
jmp
adc
shr
dec
notb
nop
je
pop
cmp
call
add
mov
pop
push
das
sti
adc
cmp
add
std
xchg
dec
sti
sbb
mov
adc
mov
pop
sbb
jo
pop
or
pop
add
dec
sub
jae
std
fsts
stc
lcall
stc
faddl
sti
or
mov
lret
hlt
clc
push
push
testl
mov
mov
sub
cmp
stos
inc
add
nop
sub
into
inc
push
push
mov
stc
imul
movsb
testl
mov
fldl
pop
push
or
scas
add
cmp
ja
add
out
pop
cmp
add
mov
sbb
fld
insl
adcb
divl
mov
cltd
jg
dec
xchg
outsb
jnp
xchg
jb
int3
mov
or
in
mov
mov
roll
and
ss
xchg
aam
mov
out
push
out
les
xchg
daa
mov
insb
mov
test
sub
xchg
push
in
in
adc
add
sub
scas
in
bound
rolb
icebp
pop
cmp
les
lds
stc
jecxz
scas
icebp
pop
subl
xchg
jmp
hlt
stos
push
and
jbe
bound
lods
inc
add
push
jl
add
dec
fwait
jae
sub
pop
aaa
movsb
or
adc
mov
das
pop
ret
or
add
or
push
add
pushf
call
push
fimull
and
pop
push
sti
je
pop
sti
je
pop
sti
jno
adcb
sbbb
ljmp
pop
push
mov
in
sub
adc
adc
add
push
sbb
shlb
add
jo
push
xchg
dec
add
add
xchg
das
or
cmp
jno
ficoml
adc
jbe
sti
jne
jg
adc
inc
je
xor
jmp
das
shrb
adc
dec
jns
inc
sahf
std
subb
add
mov
clc
adc
out
jbe
cld
enter
out
aad
ret
inc
int
out
addb
add
jo
scas
lds
inc
hlt
inc
mov
in
incb
stc
cld
mov
addb
add
cmpsl
stc
cld
mov
or
sub
or
in
pop
xor
ret
js
bound
push
out
ja
or
or
xchg
call
out
movsl
pop
out
lods
pop
push
add
pop
cmpsb
inc
add
xor
in
adc
aad
lcall
out
mov
ja
adc
popa
rcll
test
mov
jns
fistl
cmc
lcall
xchg
sub
decl
cmp
out
sub
add
pop
add
add
clc
stc
test
add
orl
faddl
fdivs
ret
sub
sbb
sbb
lret
icebp
push
sbb
mov
rolb
stos
ret
pop
push
xor
mov
sub
push
push
rorl
dec
pop
sbb
pop
pop
push
fildl
mov
or
inc
testb
std
xchg
add
add
add
sbb
cmp
sbb
mov
xor
inc
in
daa
sti
adc
addr16
cmc
inc
adc
and
sbb
push
adc
push
pop
jle
push
das
add
scas
sti
es
std
xchg
or
addl
xchg
fadds
pop
pop
mov
mov
push
out
jg
jns
das
fstpt
enter
js
mov
cmp
inc
les
inc
add
dec
jmp
lock
les
les
add
jns
psubb
mov
pop
jno
ret
jge
std
rcrl
inc
les
inc
clc
inc
stos
ljmp
or
pop
mov
jo
dec
add
out
push
pop
sub
push
push
dec
aas
cld
xchg
aad
inc
jae
add
add
ficompl
add
add
adc
cwtl
ds
lret
out
xchg
nop
aaa
lcall
add
mov
jmp
movsb
fs
push
pop
push
jo
adcb
les
dec
int3
mov
mov
pop
jb
mov
cwtl
jecxz
neg
roll
icebp
dec
cmpsl
fcompl
cmc
sahf
add
mov
aas
jo
filds
les
out
aas
add
add
loope
jno
lcall
xchg
add
ret
mov
imul
insl
pop
push
aaa
ret
lea
aaa
add
push
push
jge
negb
jg
add
xchg
push
pop
vprotw
xor
imul
pop
jae
test
mov
mov
fidivrl
inc
imul
loop
call
insl
xchg
pop
div
add
pop
movb
sub
adc
add
inc
cld
pop
jae
or
dec
or
fwait
inc
cld
or
das
repz
jb
inc
repz
adc
cmc
aas
add
clc
or
lock
jmp
int
enter
push
mov
push
push
mov
push
xor
insl
pop
sti
adc
gs
push
sbb
fcmovnbe
icebp
pop
fadds
add
push
inc
add
jge
add
jle
xrelease
push
sub
jp
adcb
push
or
stc
mov
xchg
popf
cld
jns
jl
call
out
mov
mov
jecxz
adc
xchg
inc
je
inc
push
std
xor
inc
add
inc
mov
ljmp
lea
andl
out
insb
arpl
add
shll
inc
fwait
cld
neg
push
jle
lock
add
lcall
cmp
xor
inc
or
xchg
jp
push
jb
rcl
lods
lret
dec
and
jl
cmpsb
jb
rcrb
out
inc
fwait
xchg
stc
add
pop
mov
les
outsl
aam
test
hlt
out
pop
mov
lods
aas
cltd
pop
into
insl
daa
add
pop
call
insl
mov
std
jmp
push
lcall
shlb
call
mov
hlt
jno,pn
pusha
stos
jb
pop
mov
clc
insb
jecxz
push
push
stos
push
std
xlat
adc
add
add
push
orl
pop
add
mov
push
imul
jmp
pop
lcall
dec
pusha
push
imulb
mov
jo
jbe
test
enter
adc
std
mov
mov
sti
jne
sbb
push
pop
push
rorb
stos
add
insl
push
xlat
psubsb
add
pop
add
add
xchg
jne
add
xor
mov
call
test
mov
mov
and
or
pop
sti
jne
add
lcall
add
jns
add
jns
jle
dec
fwait
sbb
cmp
cmp
testb
je
push
adc
test
mov
push
aas
ss
push
les
jnp
in
adc
mov
icebp
sbb
add
lds
adc
add
push
adc
mov
jae
hlt
divb
mov
cmp
jb
add
divb
inc
adc
sub
les
sub
es
in
jo
xchg
add
outsl
add
inc
xor
xchg
out
pop
dec
mov
inc
std
add
je
lock
pop
inc
imul
pop
ss
in
push
loopne
pop
pop
clc
scas
insb
daa
add
push
mov
xchg
cmp
add
add
xor
and
mov
jb
push
xchg
cwtl
jecxz
xchg
iret
push
test
push
call
cmp
push
imul
ljmp
add
pop
out
jg
fs
add
add
cmp
out
movsl
pop
add
xlat
std
push
mov
aad
jbe
adc
test
rorl
cs
call
mov
iret
dec
mov
call
jb
add
dec
mov
sub
call
mov
cld
xchg
out
not
or
std
mov
repz
int
pop
xchg
roll
xchg
ror
push
fmuls
scas
test
movl
js
adc
je
idivb
lods
pop
mov
lock
mov
fstl
inc
jne
les
dec
sti
jne
inc
sti
xlat
out
cltd
or
add
adc
push
cmp
jg
cmp
jmp
inc
push
push
ror
lock
mov
add
xor
pop
pop
test
hlt
xchg
hlt
test
xlat
arpl
frstor
push
inc
aad
adc
idivb
dec
cmp
mov
test
sub
jbe
hlt
push
cli
js
push
sub
add
add
aas
idivb
hlt
and
bound
pop
xchg
pop
sub
push
pop
jne
pop
and
out
jmp
mov
sbb
inc
les
xor
jb
add
hlt
sbb
inc
les
push
lods
add
jmp
inc
add
push
add
popf
push
add
add
or
cmp
andb
out
repz
fiadds
fadds
daa
sahf
mov
mov
icebp
ret
pop
and
xchg
add
add
scas
fimuls
sbb
inc
ss
add
sbb
xlat
sbb
les
lds
sbb
dec
mov
cld
mov
push
mov
add
data16
inc
shl
mov
push
add
pop
pop
push
cs
pop
and
mov
outsl
dec
mov
or
mov
push
pop
adc
jge
testb
in
lcall
dec
inc
sbb
loope
cltd
je
adc
rcrb
mov
cld
ljmp
std
sbb
jge
mov
testl
add
rcr
hlt
lret
xlat
sbb
hlt
sarl
icebp
clc
inc
std
hlt
mov
test
repnz
sbb
add
roll
xor
dec
jbe
inc
or
jnp
push
xor
pop
add
lds
add
fcomip
inc
popf
sbb
dec
mov
ljmp
xchg
pop
push
mov
int
pushl
add
add
jae
je
adc
adc
adc
add
push
inc
cld
dec
pop
add
cmpsb
sbb
cmp
add
push
mov
test
pop
pop
jg
les
add
add
rolb
cmc
hlt
cli
add
jns
in
sbb
out
call
mov
or
add
addb
fwait
out
ret
je
or
call
dec
mov
add
jb
add
fwait
jp
arpl
ret
xor
jae
push
inc
mov
sbb
mov
mov
sub
iret
sub
jge
popa
adc
popa
add
mov
int
fildl
mov
add
loopne
sub
pop
pop
mov
clc
pop
out
lods
add
les
iret
pushf
out
xchg
les
jmp
pop
out
sbbl
fisttpl
outsl
adc
les
xor
into
sub
fadds
xor
or
imul
or
out
les
out
les
mov
dec
pop
ret
repz
call
add
pop
pop
add
pop
ret
fucompp
dec
mov
adc
jae
es
pop
mov
nop
pop
add
jnp
rclb
jb
jmp
jl
sub
adcl
call
jno
imulb
adc
sbb
and
call
ror
push
sbbl
std
sar
adc
add
add
inc
and
inc
dec
call
and
outsl
pop
out
push
pop
pop
ficoms
ret
cmp
adc
push
push
out
mov
xchg
sbb
pop
push
push
lret
adc
xchg
xchg
verw
jo
add
and
sti
adc
rcll
add
lahf
push
mov
fucomip
xor
scas
pop
call
cmp
dec
or
addl
dec
les
dec
aas
mov
adc
jmp
addl
xor
in
add
subl
call
push
sub
push
push
decl
stos
jmp
mov
test
mov
mov
sbb
and
xor
mov
aad
test
sbb
push
inc
and
aas
and
inc
pop
sub
mov
in
xor
push
ret
repz
lret
sti
pop
out
or
lret
and
jns
add
push
or
pop
out
in
and
add
les
mov
fimull
pop
out
inc
jb
xlat
rorl
movups
js
addb
xlat
mov
mov
stos
js
ret
mul
add
cmp
pshufw
and
or
or
pop
push
add
jo
push
sbb
or
jmp
sbb
mov
mov
pop
std
clc
iret
adc
sbb
fcmovnb
fiadds
jmp
dec
arpl
or
push
inc
jo
add
fcmovnb
mov
mov
call
jb
xchg
push
add
push
fidivl
popa
xchg
aaa
add
xor
jmp
cltd
loope
insb
xchg
out
pop
bound
dec
push
add
fisubs
jmp
pop
adc
sbb
pop
inc
call
cli
xchg
inc
mov
cltd
inc
cmp
xchg
xchg
das
lock
cmpsl
xchg
pusha
inc
call
sub
clc
mov
sub
push
in
jno
data16
decl
jecxz
push
jno
jnp
push
push
sbb
add
add
and
sti
push
add
ja
push
subl
adc
jle
icebp
cmp
cmp
cmc
dec
shll
xor
push
test
shlb
decl
fmull
hlt
xor
inc
les
adc
mov
sub
jns
mov
sti
xchg
icebp
out
es
aas
icebp
mov
rcl
dec
add
clc
call
or
mov
addl
add
xor
mov
add
pop
sub
addl
negl
cmp
inc
pusha
inc
les
repz
add
mov
jle
sub
add
out
cmc
jecxz
rorb
xor
les
daa
jg
jne
jmp
mov
add
push
pop
or
cmpsb
add
inc
les
int3
lods
jno
adc
dec
fisttps
shll
xchg
jb
dec
movsb
cs
je
out
les
jmp
je
jmp
jbe
add
jb
jae
loope
jne
loope
pop
push
xchg
call
bound
add
add
cmc
rorl
out
pop
fwait
call
notb
stos
fsub
in
push
or
cmp
call
inc
jo
push
mov
push
out
popf
jne
aad
fwait
je
dec
clc
or
ljmp
sbb
jne
add
ja
xchg
jne
add
mov
fimull
push
lcall
add
push
adc
lcall
sbb
fildl
test
inc
sbb
loop
lcall
sti
jne
xor
push
add
shlb
sti
lea
cs
call
jbe
xchg
push
or
push
mov
adc
add
dec
clc
jl
jno
add
push
adc
inc
je
add
clc
int
mov
clc
sub
aad
add
push
out
jge
insb
sbb
mov
insb
mov
add
arpl
rorb
ret
aas
mov
leave
stos
add
mov
test
xorl
xorl
xor
addr16
adc
mov
clc
cmc
and
ret
add
add
add
inc
inc
in
cld
push
jg
pop
jo
add
push
mov
lcall
pop
out
adc
mov
or
push
jb
sbb
add
icebp
add
dec
add
dec
sar
out
pushf
pop
call
stos
dec
out
or
arpl
push
jno
jp
add
xor
or
mov
insb
lods
add
jno
jp
fbstp
mov
mov
fs
fcompl
out
cmp
fbstp
pushf
xlat
daa
incl
add
pop
aaa
mov
pop
add
outsb
mov
cmp
call
inc
jno
aad
lock
subl
adcb
jnp
subl
add
add
or
subl
jo
inc
lods
mov
sahf
add
adc
adc
adc
pop
out
mov
sti
jecxz
imul
lahf
aam
outsb
mov
ljmp
movsl
cmp
incl
js
iret
cmp
pop
add
ss
cmp
jo
enter
or
dec
pop
push
je
jecxz
jns
pop
push
push
pop
fiaddl
mov
insb
cmp
inc
jne
xor
les
jno
out
call
push
push
loopne
add
bound
cmp
inc
cltd
pop
je
mov
mov
ds
lea
mov
lcall
jae
repz
div
add
add
add
subl
xor
xchg
clc
lds
mov
lret
std
mov
aad
sbb
mov
pushf
test
decl
add
mov
addr16
mov
in
lcall
mov
inc
cld
sub
into
std
cmp
inc
hlt
mov
notb
jl
enter
jle
or
pop
testb
add
add
cltd
cmc
addr16
sbbb
insb
pop
pop
add
aas
sti
pop
aam
push
dec
xchg
xchg
js
outsb
dec
stos
enter
aaa
cmp
dec
pop
and
or
xor
pop
ss
or
ret
mov
insl
bound
loope
xor
out
jle
add
xor
loope
int3
out
negb
fadd
jb
lret
jmp
add
jle
add
pop
cmp
xchg
fistps
sub
movl
xchg
pop
pop
fcoml
add
cld
outsb
jb
push
rolb
arpl
or
fists
cltd
jecxz
fwait
xchg
outsl
pop
enter
sub
jb
pop
call
add
sub
scas
in
adc
sub
in
jmp
enter
add
pop
mov
mov
jb
and
into
mov
push
push
cmc
roll
lahf
addb
lcall
sbb
insl
std
ds
add
test
cli
decl
out
inc
mov
push
das
or
mov
xor
push
add
add
call
add
mov
repnz
in
std
pop
add
inc
lock
or
pop
call
push
lock
es
xchg
jecxz
mov
pop
inc
push
lea
or
add
sahf
xchg
les
jne
flds
jle
call
add
inc
push
inc
inc
sub
aas
add
push
push
xor
xchg
inc
fildl
fdivrl
cmp
pushl
inc
aas
sub
inc
lods
dec
sub
lds
rclb
jbe
jl
xor
imull
or
mov
push
adc
out
lahf
aam
add
insb
jae
adc
add
std
shll
out
addr16
xor
out
add
add
scas
jmp
mov
imul
dec
dec
lock
ja
add
aad
iret
cmp
mov
fidivrs
hlt
and
add
test
call
repz
jnp
jle
imul
pop
push
xchg
enter
jl
aad
fisttpl
popa
call
imull
stos
stc
pop
out
add
jbe
adc
nop
mov
lahf
add
out
bound
lds
nop
std
adc
addr16
arpl
mov
mov
pop
mov
fldenv
rcr
or
pop
fisttpll
or
jo
push
daa
cmc
pop
add
test
pop
add
sti
push
mov
push
sbb
cld
add
mov
fwait
or
jmp
out
pusha
mov
sbb
xlat
scas
add
fcmovnb
fiadds
lcall
xchg
in
fsubs
push
bound
sbb
pop
jno
xchg
sub
add
add
lea
jle
pushl
or
in
push
jo
call
orb
mov
in
testl
cmpsb
jno
ficompl
std
lcall
add
cmp
pop
call
sbb
xchg
loop
fcomps
aad
pop
mov
add
clc
mov
ffree
cmpsb
ret
std
cmp
hlt
pop
hlt
les
push
mov
xchg
add
aas
ss
mov
imulb
jbe
lods
push
je
jno
les
addl
add
add
testb
clc
ret
stc
add
sahf
leave
add
jbe
je
ret
std
insb
or
push
lds
jae
stc
sub
aas
mov
das
js
je
inc
xchg
divl
rol
cmp
dec
je
shl
pop
subl
xor
xor
into
xor
and
xor
loop
add
fldcw
js
mov
bound
add
andl
les
dec
dec
lock
mov
jg
iret
pop
out
pop
push
ds
or
mov
shrl
mov
sub
fcomps
lcall
js
or
shlb
jns
add
xchg
add
sub
je
popf
jle
shl
inc
call
out
rol
sbb
or
lcall
jmp
fwait
test
fcoml
enter
dec
xchg
std
orl
pop
xchg
push
add
add
mov
popf
mov
insl
addr16
loope
jae
jb
subl
pop
mov
pop
dec
loope
mov
sub
pop
push
jb
in
jno
pop
add
xchg
inc
add
or
mov
sti
lcall
inc
call
out
xchg
callw
std
incl
aaa
mov
add
adc
arpl
mov
fucom
cld
ljmp
cltd
sti
jmp
cwtl
sti
xor
les
popa
sahf
add
fstp
clc
incl
fcmovu
mov
imul
in
call
sub
clc
push
xchg
lea
sub
ljmp
jge
inc
ret
bound
dec
xor
adc
mov
push
cmp
mov
std
xchg
test
xchg
addb
int3
testb
mov
add
adc
mov
fnstcw
sbb
jno
dec
ss
inc
adc
test
mov
inc
fsubr
inc
faddl
das
sti
lret
adc
inc
movl
xor
lds
add
pop
out
pushf
mov
lods
scas
mov
mov
les
subb
add
xchg
push
add
pop
out
xchg
or
cs
iret
xor
mov
pop
sub
fdivl
lods
push
dec
mov
dec
add
movsb
xchg
inc
arpl
dec
push
jmp
adc
jmp
push
roll
adc
xchg
and
call
xchg
cmp
ret
xchg
outsl
sbb
rol
mov
add
and
testb
call
cli
pop
dec
pop
adc
out
ffree
out
cmp
call
dec
push
mov
or
adc
or
pusha
movsl
std
sbb
ffree
testb
roll
aas
push
mov
or
sbb
or
fsts
in
lret
sbb
adc
insb
add
lods
enter
test
add
add
ljmp
rorl
lea
push
push
pop
mov
or
out
call
enter
decl
rolb
xchg
aad
lea
and
push
add
dec
test
and
call
pop
adc
add
or
lea
stc
push
add
shlb
xchg
add
jns
les
mov
pop
sbb
popa
xor
mov
jp
inc
hlt
xor
test
mov
addl
enter
clc
insb
sahf
mov
jmp
out
mov
std
mov
cmovo
test
mov
mov
add
add
add
in
mov
push
inc
mov
lods
add
pop
lods
mov
jno
test
pop
adc
add
add
jno
mov
pop
out
rcll
mov
dec
adc
dec
imul
mov
lods
mov
int3
or
push
lods
pop
movsb
mov
sbb
mov
imul
dec
ret
fdivs
add
imul
push
or
sbb
sbb
mov
and
dec
push
pop
mov
sub
fmull
pop
mov
and
out
push
or
mov
pop
sbb
add
subl
sahf
adc
mov
jmp
pop
add
add
inc
inc
jmp
sar
pusha
ret
push
enter
pop
push
cmp
iret
xchg
das
lods
pop
call
xchg
jbe
shl
inc
call
je
mov
xchg
pop
std
sbb
fld
fiadds
call
jge
dec
ds
or
add
add
push
add
xlat
aaa
mov
add
pop
xchg
int
push
sbb
or
repnz
add
cmp
in
push
dec
mov
or
push
sbb
mov
xor
sub
fcmovnb
pavgb
ljmp
inc
ljmp
inc
push
mov
std
sub
pop
cwtl
loop
decl
mov
add
fld
jle
lret
inc
lock
add
add
scas
push
push
testb
pop
jno
aad
ljmp
jne
add
cmp
inc
cmp
inc
inc
add
std
rcr
push
inc
out
shlb
inc
mov
cmp
inc
xchg
jno
test
cmc
jbe
jb
mov
gs
sub
into
lock
clc
add
push
or
mov
imul
mov
push
or
movsb
mov
or
mov
orl
cmp
dec
imul
or
mov
add
int3
in
scas
cs
inc
mov
test
test
inc
and
add
pop
push
lods
mov
pop
invd
pusha
pop
imulb
ficomps
ficomps
mov
mov
rclb
and
xor
inc
push
add
ljmp
mov
aas
mov
out
das
lret
sub
rcll
sbb
adc
push
sbb
xchg
aad
push
add
add
xchg
into
aad
mov
push
test
icebp
pop
pop
inc
mov
testb
insl
jmp
loopne
insl
imul
dec
into
push
sbb
add
aam
xor
shlb
je
inc
and
nop
into
add
inc
shlb
mov
sub
inc
sub
fcmovnb
je
jecxz
mov
cmp
xor
add
cmp
jne
fsubrs
subl
push
mov
pop
sbbl
add
inc
push
push
xchg
cmp
or
in
aas
add
or
ds
inc
fcompl
or
insl
pop
aaa
rcr
out
inc
sbb
or
inc
mov
jno
les
add
add
mov
dec
les
rcrb
inc
add
or
les
add
jmp
add
push
jns
xchg
push
dec
xchg
or
pop
mov
testl
mov
adc
mov
int3
or
mov
aaa
jnp
or
cmp
add
adc
repnz
add
add
subb
cmp
add
pop
movsl
jl
fwait
out
shrl
mov
test
push
add
adc
test
mov
dec
stc
inc
fistpl
or
imul
pop
out
outsl
out
dec
and
repz
addr16
les
mov
arpl
mov
shl
mov
arpl
mov
test
pop
les
lods
pop
outsl
call
xchg
push
inc
pop
out
lret
out
decl
add
push
push
std
push
push
jb
xchg
enter
pop
add
cs
mov
mov
mov
enter
add
add
pop
cmp
sarl
ficomps
dec
ljmp
add
add
clts
sbb
lret
subb
iret
insb
jmp
divb
gs
ljmp
add
rorb
xchg
scas
call
insb
xchg
fucomip
adc
add
imul
pop
stos
sti
adc
mov
adc
das
cltd
add
sbb
add
fstpt
mulb
sub
sbb
pop
add
mov
imul
dec
fstpl
mov
bound
in
jbe
push
inc
mov
jne
test
push
pop
lret
cmc
inc
popf
mov
adc
mov
ficoml
add
push
push
je
xor
lock
imul
mov
hlt
ret
pop
sbb
inc
test
add
imulb
adc
push
inc
add
xchg
call
std
adc
psubsb
mov
inc
inc
mov
add
jnp
sarb
push
int3
inc
add
mov
les
clc
add
pop
sbb
add
xchg
push
std
sbb
mov
mov
cmp
push
stc
cld
mov
pop
inc
les
mov
inc
dec
popf
sbb
add
fisubs
aaa
rol
call
mov
lcall
dec
push
out
jge
mov
aam
xor
and
aaa
in
inc
add
int
mov
jb
mov
push
mov
bound
add
popf
xrelease
ret
fwait
adc
out
dec
sbb
hlt
cmp
sbb
pushf
fcomps
xchg
mov
add
xor
in
jecxz
sbb
push
xchg
push
add
dec
jae
pop
push
sti
push
xor
int
mov
popf
sbb
cmc
mov
ffree
lods
mov
je
adc
repnz
std
push
xor
cmc
int
add
fdivp
inc
and
dec
add
pop
test
mov
cmp
add
pop
push
mov
cmp
push
mov
lods
mov
test
std
fsubl
int
add
mov
push
rorb
or
cwtl
insl
push
inc
insl
aam
sbb
sbb
je
lds
cmp
insl
fnstcw
xor
ds
adc
iret
inc
and
sbb
add
jno
push
xchg
fildl
xchg
or
ds
ljmp
sub
and
cli
jne
call
dec
sti
pushf
add
enter
ja
add
push
in
les
or
cli
cld
dec
ret
push
push
mov
adc
daa
cltd
adc
jp
aam
insb
or
inc
add
add
add
int3
inc
adc
mov
mov
lds
mov
push
add
les
xor
das
or
std
mov
sbb
mov
je
xchg
icebp
mov
les
cmp
fcoms
adc
addl
fadds
mov
pop
mov
cwtl
fildl
cmc
test
jp
les
add
addr16
cmp
insb
cmpsl
add
idivl
call
xorl
jl
dec
jo
dec
dec
fmull
lcall
mov
ficoms
mov
sbb
xchg
pop
out
stos
fstpt
lods
mov
js
push
outsb
les
add
pop
call
mov
outsl
inc
xchg
add
add
add
fdiv
fsubr
outsb
je
out
mov
je
inc
inc
push
aad
xchg
je
iret
leave
xor
aad
inc
pop
jne
inc
jp
push
mov
fs
xchg
insb
xchg
jae
fidivs
jmp
jo
inc
jmp
add
aad
fldcw
inc
push
mov
fnstcw
mov
add
pop
add
xchg
sbb
loope
xorl
jo
lock
add
push
sti
adc
es
hlt
sub
addr16
pop
add
xchg
lock
dec
call
cli
jne
jae
incl
cli
adc
mov
xchg
sbb
inc
or
mov
push
je
jae
pop
push
sbb
push
sbb
pushf
std
lcall
mov
sub
test
pop
add
loopne
add
fildl
xor
inc
sub
add
jmp
mov
inc
add
fdivrp
ds
sbb
xor
inc
mov
test
lds
scas
gs
inc
jbe
lcall
clc
aas
idiv
ss
push
add
les
cmp
add
add
les
cmp
es
scas
stos
and
push
inc
test
pop
inc
add
mov
cs
xchg
xor
push
int3
lods
or
add
jg
lds
xchg
add
les
add
int
and
dec
sahf
jecxz
dec
ret
call
pop
lret
dec
out
dec
mov
and
adc
add
add
mov
dec
push
add
push
stos
rcrl
clc
bound
rcrb
xlat
cmpsb
addl
fistps
out
popa
lret
scas
cli
js
divl
dec
aaa
push
test
sahf
shrl
test
jne
or
lret
outsb
adc
enter
aam
jp
add
pop
test
pop
add
dec
add
dec
pop
call
pop
add
xor
adc
xor
mov
insl
inc
jmp
mov
pop
cmp
jg
aad
dec
adc
lcall
daa
cmp
dec
call
dec
xadd
ljmp
cmp
add
movl
add
insb
into
or
orl
add
inc
sbb
pop
punpckldq
fldl
in
fstpl
andl
or
idiv
jae
fdivp
add
aaa
fcomip
add
pop
add
lahf
add
mov
sub
cmp
add
in
add
xchg
addr16
imul
pop
add
pop
mov
call
cmpsb
mov
mov
lods
in
les
movsl
std
rcl
add
les
movsl
std
jb
lcall
data16
les
jmp
les
xor
or
mov
enter
mov
push
sbb
add
shrb
mov
jp
sbb
push
pop
add
les
testb
rolb
add
pushf
cmpl
xor
add
out
les
add
les
fs
xor
into
dec
out
clc
imul
pop
out
and
je
inc
into
cmpsb
sbb
pop
out
inc
mov
clc
lock
cmp
mov
pop
cmpb
lock
add
pop
insl
cmp
inc
jbe
lods
imul
das
ret
adc
fstpl
xchg
inc
or
les
testb
cmpsb
jns
addr16
pop
inc
push
imul
add
fldl
dec
inc
push
insb
inc
inc
out
cld
call
scas
fwait
or
mov
jmp
xchg
std
into
popa
jnp
jmp
add
sbb
mov
divl
add
fmuls
mov
fs
std
xchg
pop
test
push
add
std
pop
popa
lret
jecxz
push
cs
mov
aaa
pop
lcall
push
fisubrl
fidivrs
mov
pop
add
xor
test
mov
push
fwait
idiv
sub
pusha
or
testl
sbb
push
xor
loop
cli
cmp
out
data16
add
pop
test
xor
jne
sarb
push
xor
test
ljmp
cli
xchg
ret
push
popf
or
popf
ret
lea
mov
inc
ljmp
fmull
loope
add
add
pop
lock
lock
inc
addr16
pop
sti
cmc
xchg
sub
mov
imul
lds
jp
sbb
or
sub
testb
sbb
jae
pop
mov
sub
dec
lds
mov
scas
daa
call
testb
adc
mov
dec
lds
mov
les
xor
mov
lret
add
xor
add
push
cmp
pop
test
aas
stos
lea
mov
testb
subl
std
mov
pop
push
add
pop
cmpsl
pop
mov
pop
jb
in
ret
imul
pop
sbb
clc
stos
insl
daa
add
sbb
inc
sahf
lret
mov
ffree
pop
scas
stos
iret
xchg
xchg
imul
stc
add
mov
les
jb
lods
in
mov
stos
inc
out
lods
sahf
jb
nop
fldl
iret
cmpsl
push
clc
mov
cmpsl
add
mov
or
mov
into
push
jo
inc
lds
sar
add
call
fstps
jmp
aas
inc
std
add
add
add
test
pop
add
dec
push
or
pop
add
enter
inc
xchg
call
rclb
and
add
fxch
and
into
in
xor
pop
test
mov
pop
mov
pop
clc
add
cltd
or
sub
mov
data16
add
popa
or
add
push
push
push
pop
add
sbb
push
add
adc
add
jne
add
sbb
cwtl
test
add
mov
imulb
sti
xor
jle
and
push
sahf
subl
pop
add
push
add
inc
inc
repz
mov
je
into
subl
pop
add
push
add
and
lea
push
inc
push
popf
mov
mov
test
xor
movsb
les
add
xor
xchg
inc
mov
or
mov
leave
xor
cltd
mov
aaa
mov
sbb
cltd
std
or
inc
or
cmpsl
call
stos
fs
xor
add
xor
std
pop
or
jae
lret
call
mov
int3
xor
je
imul
mov
add
lret
pop
sahf
push
mov
sbb
int3
adc
add
cmp
les
testl
add
xor
les
pop
stos
add
pop
push
push
pop
shl
add
pop
test
aam
test
stc
jne
testl
mov
mov
hlt
inc
sub
out
stos
orb
cmp
lret
pop
inc
sbb
jecxz
dec
push
add
pop
jb
les
jmp
mov
add
rcrb
xorps
sub
sbb
call
fldl
pop
mul
aaa
inc
inc
jmp
and
add
dec
sbb
ljmp
add
xlat
xchg
enter
xorl
ret
ljmp
pop
add
add
and
jle
mov
rclb
cltd
movb
outsl
add
dec
sbb
lahf
and
lea
repz
adc
test
fucomi
incb
repnz
ljmp
add
inc
sbb
push
neg
cli
adc
add
inc
cmp
add
xchg
sub
pop
lret
adc
sub
cmp
sub
jmp
inc
sbb
or
add
pop
jno
mov
xchg
push
mov
call
std
div
cmp
icebp
add
xor
mov
add
repz
shll
je
pushf
imulb
les
test
lock
fwait
adc
jno
or
jle
xor
add
xor
add
push
and
repz
je
xor
out
faddl
inc
repnz
sarl
cmp
addb
mov
add
add
lret
dec
enter
ja
lcall
jge
mov
sub
int3
stos
insb
mov
add
fcomi
sub
jmp
add
cmp
mov
mov
xchg
out
inc
push
call
sti
test
xor
cmp
cmp
shll
add
xchg
stos
xor
lcall
add
add
imul
dec
movl
loopne
cmp
loopne
cmp
cmp
aam
adc
rcl
ss
std
xchg
pop
rol
cs
sbb
jmp
push
or
aas
sbb
data16
fcoml
cmp
add
movsl
call
jb
popf
pop
xchg
andl
jb
push
push
push
add
std
pushf
sub
jae
dec
or
dec
addr16
aam
pop
mov
aad
sbb
scas
int
pop
stos
hlt
cmp
fs
or
pop
fdivrp
je
xchg
enter
ret
xchg
dec
dec
xchg
add
mov
idivb
scas
arpl
or
incl
cwtl
data16
imul
add
pusha
pop
call
ja
inc
push
out
push
js
push
inc
pop
ffreep
or
push
jno
mov
jo
add
flds
lcall
xchg
inc
in
faddp
or
or
sbb
jmp
lods
daa
les
mov
pop
lods
inc
test
mov
int
xor
xchg
jae
test
sarb
les
dec
mov
in
add
add
movsl
subl
cs
inc
paddusw
pop
jne
add
lods
mov
add
or
pop
cwtl
jae
adc
push
cmp
mov
std
sbb
mov
lcall
jae
cmp
add
add
add
adc
mov
scas
fimuls
add
jge
cmp
mov
mov
add
dec
scas
ret
dec
cld
loope
ffreep
inc
sti
decb
out
inc
xor
jno
bound
mov
ficomps
cmpsl
add
cli
aaa
nop
push
je
pop
out
inc
sbb
sub
out
add
jbe
xchg
pop
mov
cmp
and
das
aam
pop
fistpll
or
loopne
outsb
ja
xchg
push
mov
cmc
in
pop
mov
dec
pusha
call
lret
jle
sbb
sbb
scas
and
dec
sahf
and
and
dec
push
filds
push
mov
and
clc
xchg
call
jb
mov
in
std
add
ja
sbb
arpl
jmp
stos
xchg
add
pop
add
sarl
in
pop
int
mov
loope
push
push
or
insl
or
cmp
dec
xchg
aaa
jno
test
adc
cmp
inc
add
xor
je
jbe
call
out
and
into
call
push
jns
pop
or
push
and
imul
push
mov
dec
push
icebp
sub
les
call
inc
cmp
lds
cmp
addl
or
push
jmp
xchg
je
adc
aas
cmp
std
add
xchg
test
mov
and
cld
mov
sbb
mov
mov
push
add
mov
xor
ud1
push
dec
cmpsl
sub
xchg
add
lcall
mov
cs
inc
fcmovb
mov
cltd
out
xchg
push
push
repz
add
les
out
scas
fwait
out
loop
inc
les
xchg
mov
flds
imul
nop
les
add
sub
pop
xchg
dec
cmpsb
jae
hlt
loope
lahf
inc
mov
jg
xor
lcall
inc
and
add
mov
lahf
pop
out
dec
fdivrp
xor
pop
push
mov
add
pop
push
push
sub
imul
repnz
mov
rcrb
lea
push
je
cs
push
subb
mov
fsubrl
sarl
inc
mov
pop
jae
cmp
xchg
inc
add
xlat
cld
std
in
fbstp
jp
out
ret
xor
pop
fmull
mov
pop
cmp
call
add
imul
mov
cmp
mov
mov
je
fimull
insb
mov
call
test
je
imul
lock
cs
sarb
jae
into
push
xchg
inc
scas
or
hlt
pushf
add
ljmp
add
dec
in
call
push
mov
fsubs
lea
fcompl
fcoms
insl
scas
in
push
scas
jae
jne
pop
fcoms
pusha
add
pop
mov
inc
mov
scas
mov
add
in
xor
shll
cltd
pushf
out
inc
add
jl
push
add
add
add
push
ja
aaa
std
mov
repz
les
adc
jmp
adc
in
xor
cld
cld
mov
add
lds
addr16
pop
push
std
roll
adc
lods
inc
std
jmp
mov
mov
push
add
lcall
pop
xor
jp
es
push
cmp
roll
pop
jo
xor
xchg
lahf
inc
xor
add
inc
callw
fbld
rdtsc
divb
add
jecxz
icebp
jge
add
xor
divl
pop
out
cmp
xor
mov
les
add
xor
add
mov
ret
shrl
adc
sbb
jmp
std
xor
mov
xchg
add
pop
xchg
dec
add
jmp
push
cs
xchg
fistps
jmp
ss
bound
jb
fiadds
call
rorb
std
xchg
jle
std
mov
outsl
fwait
in
int
cli
sub
stos
fs
cli
adc
shrb
repnz
xor
sub
stos
push
jb
lahf
lahf
xchg
cmp
not
pop
addl
push
cmp
add
fcomp
mov
push
add
insl
fidivl
adc
xlat
mov
clc
out
mov
or
xchg
loopne
call
pusha
iret
test
loopne
mov
gs
jmp
mov
in
in
pop
das
ljmp
mov
push
cli
inc
lock
sub
inc
fst
mov
incl
jp
jo
push
xor
pop
xor
inc
dec
cwtl
call
jg,pt
pop
ljmp
add
pushl
mov
cltd
xchg
sahf
inc
add
icebp
mov
cld
push
repnz
add
inc
adc
inc
mov
js
mov
les
les
les
out
inc
add
add
testl
les
inc
out
xor
inc
rolb
add
or
inc
add
les
mov
pop
jmp
les
or
cmpsb
fiadds
xchg
pop
out
adc
add
pop
out
mov
pop
fsubl
pop
push
add
push
mov
mov
out
les
clc
mov
add
cmpsb
or
add
or
xchg
sti
mov
out
adc
adc
shl
repz
sbb
dec
jb
adc
pop
push
iret
dec
mov
out
add
in
xchg
sub
jb
mov
cmp
call
xlat
mov
stc
inc
sbb
jae
int3
scas
call
dec
test
jbe
call
insl
add
inc
sub
dec
orl
std
fsub
dec
inc
jmp
inc
je,pn
mov
call
mov
movsb
aaa
jmp
add
lahf
mov
ret
xlat
mov
out
jo
pop
in
add
fidivrl
shrb
mov
frstor
push
fists
xor
loopne
and
loopne
and
xchg
addr16
test
pop
test
pop
adc
cwtl
mov
inc
insl
scas
push
jmp
je
sbb
push
insl
push
add
pop
push
in
imul
loop
inc
cmp
das
jno
and
lods
push
push
fs
call
jbe
push
lea
das
dec
push
loop
or
lret
loope
in
xchg
add
add
add
add
test
or
in
sbb
xor
push
lahf
and
and
inc
enter
lret
push
les
add
sbb
sti
lcall
mov
jnp
dec
xchg
adc
xchg
xchg
pushf
add
add
je
jmp
cmp
lret
and
inc
pop
ss
je
cmp
mov
lret
push
les
jge
js
mov
dec
cmpsl
mov
push
cmp
add
cmpsl
aad
mov
inc
insb
mov
into
out
sub
add
popa
sar
inc
sub
add
pop
push
mov
pop
insb
xchg
sbb
mov
push
rcrb
les
out
insb
inc
les
sub
test
es
and
xor
pop
out
cld
sub
cs
pop
out
dec
fisttps
xchg
sub
ds
xor
add
pop
scas
adc
mov
and
or
xor
into
inc
and
jb
dec
subl
pop
add
inc
adc
mov
rolb
fwait
mov
sbb
movsb
push
std
std
add
es
pop
xchg
inc
lds
std
fldl
dec
std
fnsave
call
cmpsb
push
rolb
cmp
call
movl
rorl
adc
mov
dec
or
lcall
push
mov
fsubrp
or
pop
add
cli
imul
int
inc
or
lods
cmpsl
shlb
clc
pop
loopne
push
xor
cmpsl
shlb
leave
pop
fadd
pushl
push
mov
jmp
pop
pop
add
ja
add
dec
clc
pop
ja
push
adc
loopne
mov
fadd
add
jmp
inc
js
pop
jno
les
cmc
push
mov
sti
sti
daa
xor
add
movl
shlb
push
shll
jle
cmp
cmp
in
in
xlat
jae
mov
addb
popa
ja
shrb
test
lcall
push
imul
sub
pop
icebp
push
notl
cmp
out
cmp
out
repnz
mov
pop
fwait
std
fcompl
addl
les
in
mov
mov
inc
in
pop
sbb
jns
inc
mov
add
rcl
subb
shrl
scas
iret
sbb
mov
test
push
iret
xchg
and
mov
adc
and
pmaxub
in
jbe
push
sbb
add
out
test
aas
lods
aas
and
push
cmp
lahf
add
not
inc
adc
daa
adc
pop
scas
adc
mov
daa
jae
mov
adc
cmc
add
push
mov
imul
sarl
pop
xor
inc
cmpsb
adc
lods
pop
or
pop
add
and
scas
add
shr
push
mov
jmp
mov
insb
add
mov
pop
push
add
je
inc
sbb
pop
add
xor
add
cwtl
sahf
jno
adc
rcrb
fsubrs
das
push
jns
pop
push
fdivr
push
inc
add
sarb
add
mov
xor
pop
add
cltd
pop
add
mov
fdivr
push
int
data16
pop
sti
adc
call
roll
lock
data16
es
add
aaa
jo
das
rol
mov
push
mov
rorl
mov
xor
cld
xchg
sub
add
add
mov
push
xorb
cld
faddp
push
sub
push
mov
cmp
enter
les
add
mov
test
push
push
push
test
add
or
les
add
rclb
jae
xchg
cmp
shl
xlat
mov
pop
cld
jbe
xor
ss
pop
lea
push
iret
xchg
lcall
add
push
dec
cmp
or
lret
mov
sti
jmp
pusha
ret
lret
and
xor
mov
pushf
cli
lahf
ret
or
cmpsl
imul
mov
xorl
push
fwait
sub
mov
push
sbb
sub
or
addr16
dec
sbb
shlb
cld
mov
stos
insb
cmpsl
faddl
add
add
pop
int
les
rol
add
movl
jae
xchg
sbb
push
pop
add
pop
mov
xchg
jmp
pop
subl
cmp
push
inc
lahf
xchg
pop
add
inc
nop
or
pushw
jmp
lock
jmp
push
ret
cmp
pop
mov
add
xlat
xchg
sub
pop
add
pop
lds
push
add
enter
ds
or
xchg
push
jmp
jne
lds
into
dec
push
insl
pop
xchg
aam
push
arpl
and
adc
std
add
pop
add
dec
mov
std
mov
push
add
push
push
or
rclb
inc
in
aam
or
xchg
add
pop
add
xchg
inc
inc
in
xor
jp
adc
add
xor
inc
fcoml
cmc
lock
add
lret
les
inc
add
mov
stos
add
or
add
in
aaa
lods
sbb
xchg
test
ds
mov
add
std
mov
mov
add
cwtl
xor
adc
les
inc
push
dec
push
sub
in
cld
jns
jle
mov
sub
jge
jno
mov
cmp
or
push
xor
add
data16
adc
add
xor
addl
sbb
sbb
sbb
dec
cwtl
xchg
aam
das
es
xlat
cmpsb
clc
in
fcomi
jg
les
add
inc
mov
shrb
stos
mov
mov
xor
mov
adc
and
jecxz
movsb
or
jg
sbbl
movsl
ret
sahf
jmp
mov
out
ret
fldenv
xchg
test
js
push
push
insb
ljmp
add
lcall
add
rol
xchg
mov
gs
push
ret
mov
push
movl
adcb
std
mov
negl
xchg
push
bound
pop
mov
and
mov
std
push
pop
xor
pop
xchg
xor
lock
icebp
add
mov
cmp
iret
inc
add
dec
mov
xchg
fsubs
insb
push
fstl
les
jo
in
in
sub
or
sub
fsts
add
cmpsb
daa
add
pop
mov
jns
pop
test
int
hlt
loop
and
pop
pop
test
movsl
pop
mov
jl
mov
xchg
lahf
jae
pusha
sbb
mov
insl
std
jmp
add
jbe
and
inc
add
jae
push
fwait
and
shlb
decl
out
add
mov
loope
inc
pop
xor
or
pop
movsb
mov
jns
add
decb
std
mov
cmc
xor
aaa
xchg
popa
in
push
sub
push
std
mov
mov
or
pop
xchg
dec
data16
add
inc
adc
in
add
std
jno
imul
jns
in
push
shll
mov
inc
sbb
xor
cwtl
out
or
pop
jmp
icebp
mov
or
nop
stos
frstor
dec
sahf
cmp
add
push
or
in
enter
std
add
lcall
jb
lret
test
xchg
repz
jns
and
add
add
xor
jge
push
imulb
ret
out
add
jmp
pop
mov
jge
cwtl
add
ljmp
adc
pop
add
add
add
pop
or
daa
loope
fld1
xchg
push
pop
andl
in
insl
adc
xchg
ret
push
orl
lahf
jecxz
add
pop
std
lods
stos
std
aam
test
inc
xor
mov
pop
jae
mov
fiaddl
sbb
fildl
jno
jmp
add
or
lcall
and
fiadds
mov
dec
push
pop
pop
call
mov
xor
adc
mov
jmp
lods
loope
clc
lods
jecxz
or
dec
sti
adc
loopne
jno
pushf
out
sbb
mov
inc
cld
in
add
sub
adcb
add
push
cwtl
adc
stos
add
or
mov
sti
jne
xor
lock
or
shlb
shr
mov
mov
mov
push
add
ret
cld
mov
add
loopne
jbe
call
add
add
outsb
fsubrs
or
out
inc
inc
adc
imul
or
jbe
enter
add
jle
jae
test
das
add
inc
aam
ds
aam
fdiv
xchg
lock
xchg
lret
cld
fstps
adc
stos
add
pusha
sbb
adc
jl
pop
pusha
sbb
stos
add
pop
call
adc
sub
add
sbb
sbb
cmp
add
lcall
das
xchg
daa
add
push
hlt
aas
mov
out
js
sub
sbb
or
inc
pop
lock
mov
insl
cld
jno
insl
cld
mov
or
test
sbb
test
fwait
add
pop
push
xor
jmp
addr16
add
add
fsub
test
inc
jmp
test
clc
fildl
push
inc
jmp
outsl
xorl
aad
add
add
adc
cld
lea
ja
adc
cmpsl
or
jae
cmc
sbb
cld
cmp
and
sub
jne
push
rorb
ror
mov
sarb
add
add
pop
push
mov
sub
mov
loope
test
add
add
adc
rclb
mov
xchg
mov
xchg
jge
pop
xchg
pop
pop
pop
je
xor
jne
mov
sbbl
jg
sbbl
fsubrl
mov
les
jecxz
je
xor
add
mov
push
inc
push
test
ror
jg
sub
jno
mov
pop
jmp
or
testl
mov
pop
adc
xchg
mov
out
xchg
add
lock
shrl
inc
or
add
pop
lea
pop
dec
not
testl
add
xchg
jnp
rolb
adc
push
fiadds
out
add
call
cmp
inc
fnstenv
cmp
xchg
or
sub
sbb
popf
inc
pop
rclb
jb
sbb
pop
cmp
es
pop
adc
ds
adc
push
push
jb
sbb
fdivrs
push
mov
nop
sti
add
xchg
dec
or
add
loopne
pop
hlt
dec
xchg
or
add
mov
test
out
mov
cmc
ret
imul
cld
dec
xchg
lret
adc
adc
push
data16
les
movsl
jecxz
push
push
jle
ret
fldl
adc
sbb
icebp
xchg
lea
fs
and
les
lods
stos
inc
push
push
add
ret
cmc
push
xchg
and
imull
std
add
stc
xor
or
mov
std
sbb
adc
mov
jne
loop
or
inc
inc
pop
add
hlt
xchg
hlt
insl
clc
stc
xchg
adc
jo
or
sbb
fadd
and
mov
sar
lcall
subb
add
add
das
add
pop
add
and
sti
test
adcl
leave
mov
test
inc
pop
hlt
xor
xchg
or
add
call
mov
mov
movsl
sub
test
jbe
je
scas
lods
sub
les
std
mov
adc
jle
je
mov
mov
or
sarb
call
push
mov
insl
std
inc
into
pop
std
inc
or
dec
sub
scas
sti
fdiv
imul
in
into
jns
inc
push
and
mov
bound
ret
pop
add
add
std
adc
out
fistpl
div
les
test
dec
daa
add
les
add
iret
mov
div
mov
cmpsl
pop
add
out
add
sbb
insb
mov
add
test
pop
and
out
xchg
test
ja
pop
imul
insb
enter
mov
inc
lea
add
stos
shl
inc
aas
mov
pop
out
add
popa
mov
lods
and
jecxz
and
out
les
cmpsl
add
dec
or
stos
scas
mov
out
les
out
test
and
dec
cwtl
add
mov
push
scas
subl
outsl
pop
sub
inc
jmp
call
aad
cmpb
push
sarw
test
test
std
ret
xchg
cs
bound
push
push
add
call
mov
repnz
push
push
xchg
cmpsb
addb
xor
filds
andb
and
inc
mov
lcall
testl
inc
pop
mov
popf
scas
pop
mov
inc
pop
add
lock
iret
and
int3
push
lret
xchg
dec
or
xchg
pop
sub
sub
mov
mov
dec
imul
sub
fs
pop
call
jo
stc
push
lds
add
sarl
cld
pop
cmovae
testl
inc
andl
add
pushf
shlb
clc
xor
add
cmpb
add
dec
jge
inc
mov
add
add
push
fwait
cwtl
add
cmp
mov
addr16
sub
and
xor
test
jle
mov
mov
adc
std
repz
adc
xlat
les
jge
push
neg
or
dec
push
icebp
imul
shl
adc
js
push
stos
pop
cld
pop
mov
out
add
pop
out
int
xor
mov
les
inc
negl
clc
cmp
adc
or
rcrb
sbbb
xchg
sub
lahf
adc
adc
daa
add
sbb
adc
mov
or
lock
inc
push
les
inc
ja
shl
xchg
inc
fucomp
lcall
xchg
mov
add
into
xchg
js
iret
xchg
fnstsw
pop
inc
jmp
fcoms
jmp
bound
imul
loop
adcb
jg
cmpsl
cwtl
bound
scas
pop
add
rorl
leave
xchg
hlt
bound
mov
test
fdivr
les
addb
jmp
mov
aad
sbb
add
stos
loope
call
aad
sti
pop
lahf
add
lret
inc
pop
movl
xchg
xchg
push
and
or
leave
lock
or
leave
in
and
or
push
cmp
rclb
stos
or
pop
lret
out
dec
or
cmp
call
mov
repnz
jg
sub
cld
jne
pop
mov
pop
movsl
faddp
or
clc
shr
outsb
stos
add
js
call
add
fsubr
jle
add
push
enter
xchg
pop
ror
movb
add
jmp
xchg
repnz
icebp
jnp
mov
sar
sbb
inc
repz
repnz
xor
sar
imul
add
xchg
pop
pop
nop
jns
add
rcrb
pop
out
icebp
jl
shl
jnp
cmp
sar
call
push
cmp
imul
out
repz
add
jno
les
add
notb
daa
xchg
dec
dec
cmp
mov
or
lcall
add
fisubs
lock
fwait
out
ljmp
add
add
ret
stos
jge
es
sahf
out
inc
mov
out
inc
mov
fadd
jnp
sbb
dec
mov
bound
sahf
test
call
iret
dec
insl
mov
dec
inc
sahf
ret
das
in
sbb
hlt
sbb
pop
out
sahf
push
push
xor
pop
mov
and
pop
out
icebp
insb
add
add
lcall
roll
jmp
jecxz
add
xchg
and
lds
push
fiaddl
insb
mov
ljmp
sti
imul
sahf
and
push
ja
rcl
add
mov
inc
jmp
sbb
xchg
rcrb
repnz
and
pop
inc
lds
mov
fldl
lods
fstpl
rcl
pop
add
leave
outsb
xchg
das
rcrb
xor
imul
inc
and
jg
add
sbb
adc
mov
aaa
sbb
add
add
and
inc
leave
push
mov
push
test
push
and
popf
pop
dec
dec
bound
dec
sldt
add
add
enter
rorl
pop
add
in
adcl
sbb
or
mov
inc
inc
and
pop
test
cld
jl
repz
repnz
inc
jg
xchg
repz
loopne
push
ja
mov
adc
xor
orl
add
xor
xchg
mov
icebp
jne
loopne
add
add
inc
popa
adc
sub
mov
mov
insb
push
ret
icebp
add
dec
jbe
xchg
icebp
add
pop
adc
shlb
cmp
add
and
xchg
pop
push
dec
mov
in
repz
sub
outsb
rcrb
daa
mov
lahf
or
icebp
lea
add
adc
add
mov
enter
outsb
sbb
daa
mov
in
mov
les
and
enter
or
pushl
mov
fs
lock
cmpsl
inc
pusha
leave
vcvtsi2sdl
nop
shll
cmp
pushf
loope
cmpb
lea
push
add
or
or
aaa
adc
add
lods
jecxz
jae
add
fiaddl
or
lock
or
es
xchg
push
and
dec
push
jae
xchg
rol
mov
sbb
jmp
in
add
push
bound
mov
mov
sbb
test
sbb
test
and
ds
or
sub
add
pop
add
push
shlb
iret
dec
and
fnstcw
and
push
mov
cmp
mov
frstor
jmp
ficomps
test
jbe
lds
out
loopne
jmp
cmpsl
test
cmp
lcall
sbb
push
adc
andl
add
enter
add
test
pop
pop
add
loopne
add
pop
jne
out
pop
pop
cmp
les
cmc
subb
pushl
repz
add
jle
repz
xlat
xor
add
mov
lea
push
test
out
fisttps
je
mov
cmova
icebp
jb
iret
cmpl
out
mov
push
adc
add
push
adc
imul
add
xchg
and
sub
cmpl
sbb
stc
cmc
xchg
pop
inc
test
test
shll
add
pop
adc
sti
int
sub
stos
xchg
xor
fisttpl
mov
add
mov
lea
lcall
or
and
cmp
outsl
shlb
loope
out
inc
popl
das
lea
sahf
or
mov
nop
add
xlat
mov
xchg
sub
jle
sub
es
add
sub
or
mov
into
pop
jno
or
arpl
add
xor
cld
jb
inc
icebp
adc
aaa
dec
push
bswap
rcrl
inc
addl
add
rcrb
stos
std
aad
xor
into
sbb
cld
insb
xchg
sbb
add
adc
cmp
push
push
cmp
mov
div
lret
pop
push
pop
dec
mov
add
out
mov
xchg
push
cmp
and
pop
adcl
pop
addl
and
push
fstpt
and
and
jb
ja
mov
incb
cld
inc
stc
or
ret
and
insb
xlat
push
jne
and
in
repz
sub
sbb
int
and
rcrl
int3
outsb
icebp
jbe
lahf
xchg
xchg
lret
aad
pop
add
mov
pop
ret
push
mov
fucomi
jo
data16
notl
js
adc
repz
rcrb
decl
repz
mov
outsb
inc
je
mov
mov
ss
or
sbb
xchg
cltd
idivb
sbb
add
std
adc
repz
lock
mov
decb
dec
push
repz
cwtl
std
jecxz
add
andl
cmc
hlt
shufps
sub
add
les
out
icebp
lea
lcall
popf
repnz
pop
jmp
pushf
pop
out
pop
mov
sti
add
shrb
lret
repnz
sbb
sbb
mov
pop
sub
push
adc
xor
push
add
mov
add
mov
pop
imul
add
pop
lcall
rorl
pop
adc
mov
sbb
mov
or
push
lea
aaa
xchg
test
pushl
test
jo
aaa
xor
iret
mov
inc
pop
add
aas
lods
call
mov
jne
rcl
int
aam
lds
jg
pop
mov
scas
call
pop
call
bound
ds
push
ss
push
jae
jae
cmp
and
pop
add
pop
repz
outsb
std
subl
fidivrs
call
xchg
jmp
push
out
and
jecxz
and
out
and
jecxz
and
out
and
loope
and
in
and
jno
inc
and
pop
jp
insl
fwait
inc
and
pop
add
pop
out
and
cld
xchg
test
and
sbb
xchg
add
and
fs
xor
inc
and
push
mov
add
loopne
and
pop
add
cmp
xchg
rorl
cli
out
and
out
lea
adc
mov
das
adc
and
clc
rcll
hlt
jle
je
jp
and
sar
aas
and
cmp
les
test
add
test
mov
lock
sbb
scas
add
pavgw
add
xor
addb
andb
mov
mov
ja
test
mov
insb
jmp
aas
les
inc
jae
sub
add
jl
and
je
pop
lea
fsubrl
mov
lahf
lret
sti
cmp
push
mov
pop
insb
mov
mov
fcmovb
and
and
mov
mov
aas
out
mov
mov
mov
and
dec
jecxz
nop
roll
inc
icebp
pushf
push
xor
sbb
in
add
shl
cmp
add
add
ds
pop
movsb
inc
loope
repz
inc
pop
inc
jb
cmpsl
inc
jb
aas
popl
or
jns
subl
bound
mov
adc
ret
into
mov
insl
add
test
xor
pop
add
and
fs
add
cmpsb
and
cmpsb
and
dec
sahf
and
dec
xchg
push
inc
xchg
and
add
in
cmc
call
icebp
cmp
cld
bound
loop
int
loope
adc
aaa
add
clc
ret
in
or
cmp
popf
push
arpl
cmp
push
mov
add
daa
and
add
loop
or
mov
lea
test
inc
pop
sub
imul
push
xchg
inc
xchg
jg
leave
fnsave
xchg
xchg
je
stos
in
pusha
pop
add
inc
sahf
add
cmpsb
mov
mov
mov
in
cwtl
add
cmpsb
or
xor
subb
les
sub
mov
mov
mov
gs
adc
add
push
or
jg
jae
in
nopl
cmpb
inc
aas
andl
inc
mov
push
and
sbb
push
les
inc
std
shlb
call
xchg
std
jecxz
inc
add
fwait
inc
add
leave
lret
pop
inc
les
add
scas
pop
out
adc
push
adc
incl
daa
iret
add
fld
sub
sbb
test
add
out
cmp
ds
fwait
or
outsb
in
mov
data16
jmp
mov
scas
cmp
imul
out
loop
out
pop
loopne
xchg
push
push
pop
push
push
pop
sbb
jp
hlt
mov
xor
mov
lea
daa
add
sahf
jmp
call
adc
sahf
out
jl
sub
fildl
jp
adc
pop
mov
or
pusha
std
out
movsb
pop
add
fildl
outsl
inc
call
cmp
and
pop
push
adc
add
sub
out
div
cld
jb
xchg
pop
and
add
jo
jmp
add
in
inc
add
or
pop
mov
jl
jmp
stos
repnz
add
mov
mov
test
xor
fstl
mov
cmp
mov
out
lcall
out
xor
add
push
push
push
bound
in
movsl
sti
mov
sbb
repnz
movb
add
add
add
add
mov
mov
out
movsl
jp
inc
and
fcmovb
je
pop
mov
iret
add
rclb
sti
call
rol
setb
and
test
mul
xchg
cmp
xor
add
dec
or
jo
sbb
add
dec
std
insb
mov
add
add
inc
mov
mov
loopne
test
cmp
add
int3
jl
pmuludq
mov
orl
sub
shl
adc
add
add
test
and
aam
xorb
or
lds
jle
call
arpl
pop
xchg
les
out
aam
out
jb
add
inc
push
cmpsl
dec
mov
test
icebp
gs
ds
add
adcl
jb
fmull
call
mov
sbb
es
stos
lock
add
fisttps
ds
int
fidivs
ljmp
pop
pop
cmp
push
out
stos
out
add
pop
push
inc
mov
rclb
add
cltd
cmp
pop
addl
lahf
push
outsb
cmp
or
fstpt
pop
or
lahf
sbb
or
push
out
popa
jge
mov
ja
dec
icebp
push
pop
push
push
push
push
mov
pop
xchg
add
sbb
xchg
out
decb
xchg
inc
hlt
pop
mov
inc
mov
cmp
out
dec
add
fsubl
sub
pushf
push
push
mov
adc
xchg
test
cwtl
test
lahf
je
loope
adc
sbb
mov
cli
je
jae
push
sbb
jno
rol
dec
and
jno
push
pop
popf
push
cmp
sub
and
pop
push
lcall
add
aaa
pop
push
lcall
add
icebp
xchg
pop
popf
push
or
test
pop
pop
cmovo
add
repz
ja
xchg
push
pop
pop
xor
push
je
and
les
mov
paddb
push
sbb
add
add
add
add
lret
push
int3
js
sti
aas
xchg
test
push
cli
ja
cs
ja
aas
cmc
mov
adc
xadd
sti
xchg
test
cld
sbb
dec
jae
push
aad
insb
adc
dec
xorl
xor
out
mov
jmp
dec
push
loope
xchg
jmp
sbb
test
sub
je
fs
test
mov
loopne
test
mov
les
xor
add
sub
jp
frstor
aas
push
outsb
add
arpl
dec
mov
sbb
test
pop
fs
adc
or
push
cltd
das
aad
movsl
test
push
out
add
add
push
mov
pop
pop
mov
iret
filds
push
add
push
cmp
push
add
xor
sub
inc
repnz
jmp
jnp
inc
jmp
mov
inc
stc
push
out
jb
jle
adc
in
aad
andb
sbb
push
add
filds
pop
mov
aam
out
adc
fisubrl
add
add
leave
add
rol
test
jbe
jb
or
sarb
mov
push
mov
ja
add
insb
push
or
movsb
adc
insl
push
add
jp
shrb
mov
loop
cli
pop
mov
out
adc
cmp
xchg
sahf
adcl
mov
testb
mov
jmp
sbbl
add
insb
sbb
iret
push
std
push
add
icebp
data16
xor
test
mov
push
push
xchg
call
mov
push
stc
stc
pop
hlt
mov
add
sar
xor
std
jae
clc
add
add
sbb
inc
jae
inc
inc
out
hlt
add
lcall
add
sbb
repz
je
xor
sbb
or
mov
repz
add
sar
inc
into
aas
les
insb
adc
aas
les
add
ret
jae
mov
std
stc
decl
aam
stc
pop
pop
out
jb
ja
rcrl
in
add
call
cmpsl
add
fisttpl
pop
mov
pop
popf
out
jp
xchg
int
pop
into
push
shl
sub
gs
les
call
sub
daa
testl
daa
sti
dec
test
in
mov
pop
repz
pop
repz
pushf
and
ljmp
pop
push
add
insb
adc
inc
lea
inc
cld
out
ret
repnz
cld
gs
outsl
add
stos
out
mov
test
add
dec
out
xchg
and
subl
sbb
inc
mov
std
mov
add
movsl
repnz
or
imul
adc
call
pop
pop
mov
fs
imul
add
jmp
pop
pop
cld
ds
inc
add
mov
xor
jmp
push
mov
or
cmc
inc
insl
mov
aas
add
pop
call
cmp
sahf
mov
in
and
sbb
push
ja
std
imul
pop
xor
inc
push
push
imul
pop
test
jmp
in
pop
add
jb
data16
nop
lock
aad
add
mov
pop
aam
hlt
add
pop
hlt
cmc
xchg
test
aas
add
cmpsb
jns
inc
call
dec
inc
mov
std
jl
repz
repnz
hlt
add
imull
jnp
sahf
xor
jno
inc
std
and
fiadds
repz
or
inc
std
je
inc
push
xchg
aam
call
repz
test
rcrb
je
je
int3
out
inc
je
aas
xor
pop
out
test
inc
notl
imul
mov
dec
jg
rcrl
inc
adc
cmp
adc
pop
test
and
cmp
or
mov
jecxz
add
pop
dec
aad
pop
jecxz
add
imul
shlb
out
add
test
inc
rcrb
and
mov
rcrl
cltd
lea
clc
inc
daa
add
jb
mov
mov
push
mov
push
cmpsl
xlat
push
inc
jmp
les
add
les
add
mov
lret
push
push
push
mov
mov
or
sub
jl
mov
inc
jmp
rol
jno
lcall
sti
in
shll
std
mov
pop
mov
and
sbb
adc
mov
dec
inc
or
popf
pop
aaa
ret
fucomi
mov
cmp
je
pop
es
add
jmp
data16
mov
push
gs
jmp
xchg
stc
ljmp
test
inc
xchg
rclb
mov
xchg
stc
ljmp
out
add
mov
aad
inc
dec
lock
rclb
stc
decl
pop
cld
adc
scas
or
mov
mov
addr16
jle
enter
add
stc
roll
or
inc
inc
icebp
add
mov
js
adc
jbe
sti
adc
mov
sti
mov
rcll
pop
or
add
xchg
adc
lea
imul
repnz
sbb
mov
mov
dec
xchg
jae
add
xor
mov
outsl
test
inc
or
call
add
dec
sti
sub
ds
cmp
add
adc
nop
mov
add
call
pop
mov
out
add
lock
repnz
loope
push
negb
adc
pop
push
aam
mov
mov
arpl
dec
test
push
subl
add
lea
add
cmp
out
hlt
jl
or
add
pop
pop
or
xlat
cmp
repnz
loope
inc
mov
stc
inc
sub
add
pop
push
inc
enter
lock
adc
fwait
pop
inc
jmp
test
fadds
loope
xchg
xchg
add
pop
rep
repz
lret
stos
fbld
das
and
stos
movl
add
add
or
rorl
pop
shl
fst
cmpl
push
push
xchg
leave
pop
add
dec
inc
adc
mov
std
cld
dec
inc
jmp
xchg
cld
into
cmp
je
sahf
jecxz
jne
or
sub
and
ficoms
adc
outsb
dec
rolb
test
push
inc
add
popf
or
inc
push
cld
jmp
mov
jmp
and
add
sarl
jmp
pop
adc
sbb
mov
cmpsb
and
push
testb
cs
call
cmp
and
sub
cli
inc
pop
jl
add
out
mov
icebp
sub
icebp
add
jne
out
push
add
out
testl
mov
xchg
inc
leave
push
cmp
pop
jae,pt
fldl2t
sti
shrl
sarb
xor
icebp
mov
pushf
and
std
stos
mov
scas
lds
or
out
js
pop
xchg
add
push
and
jae
or
add
addr16
in
add
insb
jo
add
jle
and
pop
iret
mov
inc
cmc
out
les
mov
aaa
ja
les
cmp
out
aas
lods
or
sahf
cmp
shll
push
jecxz
enter
stos
shlb
cmp
dec
cmpsl
add
imul
inc
dec
pop
fs
cmpsl
add
movsl
out
les
aad
inc
rcll
add
fidivl
add
shlb
dec
divl
mov
or
out
lret
pop
add
lahf
faddl
jmp
dec
xchg
or
or
pop
cmp
sub
rolb
mov
fucom
rorb
cld
inc
dec
stc
pop
stos
lret
pop
push
bound
fidivs
push
cltd
cwtl
sbb
outsb
cmp
adc
cltd
add
stos
push
test
fldenv
rcr
test
dec
inc
jmp
sbbb
pushw
mov
xchg
xor
lods
std
vandnps
mov
push
mov
dec
mov
fdiv
inc
sub
ret
into
jnp
inc
add
in
jmp
xchg
js
add
or
gs
push
and
dec
call
std
test
pop
std
mov
cs
adc
pusha
push
push
mov
fimuls
inc
popf
add
lock
std
sub
lods
add
pusha
pop
mov
push
dec
push
fimull
add
mov
push
idiv
stc
pop
repnz
add
mov
mov
cld
dec
pop
dec
mov
add
sub
cmp
fldenv
inc
add
inc
sub
sti
mov
test
add
xor
mov
inc
les
jnp
leave
hlt
lret
imul
lds
inc
mov
xlat
test
sub
add
pop
cmp
scas
rclb
les
xor
or
fiadds
pop
push
lock
mov
add
popa
jo
adc
lods
lcall
out
addr16
pop
out
lcall
sub
mov
out
adc
adc
je
jecxz
movsb
add
pop
jg
adc
mov
sub
jge
pop
out
jne
outsb
xchg
cmp
or
cmp
aas
dec
cmp
fstpt
inc
jmp
nop
in
cltd
lods
xlat
cld
add
pop
mov
cld
je
std
pop
inc
sahf
or
mov
pop
add
sub
inc
xchg
xchg
jmp
jecxz
sbb
mov
jge
add
inc
jecxz
xchg
adc
xchg
ds
mov
xchg
add
sbb
xor
in
insl
xchg
das
xchg
arpl
jp
dec
dec
push
adc
add
test
lea
in
dec
xchg
sti
jmp
ffreep
out
xchg
sti
je
xlat
ret
lods
sti
jne
loope
insb
xchg
pop
pop
call
adc
gs
xchg
cltd
push
jne
fstl
add
pop
call
push
pusha
fldcw
push
nop
push
push
loop
jo
xchg
or
pop
push
pop
mov
mov
pushf
inc
sti
inc
mov
mov
sbb
aas
push
mov
push
into
aam
mov
or
clc
mov
pop
or
add
add
xchg
jbe
leave
roll
pushf
sub
adc
dec
add
or
incl
add
mov
ret
test
hlt
jp
rorb
mov
inc
pop
iret
mov
inc
iret
push
mov
pop
jb
hlt
loope
or
in
add
pop
out
test
mov
iret
adc
popa
sub
rorl
cli
ss
push
push
mov
cmc
jle
dec
repnz
aam
and
add
shr
arpl
mov
mov
fmul
cld
or
out
cltd
sub
out
cmp
push
dec
arpl
out
inc
cmpsl
mov
fcmovnbe
jg
pop
ret
lret
mov
add
sbb
int3
push
aas
push
pop
jae
xchg
adc
call
mov
ret
mov
pop
mov
cld
push
jo
lds
pusha
jp
dec
lcall
and
cld
jb
fnsave
stos
int3
jge
sbb
xlat
push
bound
and
ret
mov
ja
and
jecxz
add
add
add
call
mov
jae
fabs
bnd
es
jo
adc
lret
repnz
sub
decb
adc
cld
xorb
push
leave
lahf
sar
push
idivb
in
jge
cld
lcall
cmpsb
push
push
or
pop
pop
das
je
cmpsb
xchg
ds
add
pop
int
mov
add
xchg
add
pop
add
cmp
cmc
inc
in
ss
in
push
or
pop
or
insb
sub
orl
cmp
xor
or
sbb
xor
ret
push
xchg
xor
leave
xchg
sub
popa
mov
cli
imul
insb
xor
add
jno
inc
les
mov
pop
sub
lock
cmp
ret
call
shll
adc
xchg
shrb
fimull
mov
sbb
inc
xchg
outsl
lret
loope
cld
dec
lret
xchg
int3
inc
pop
rcll
out
insb
push
jbe
cs
jg
mov
inc
in
jl
cwtl
cmpsb
pop
fwait
jecxz
sti
add
push
add
jnp
out
inc
push
xor
pop
sub
pop
addr16
ret
pop
ror
ror
inc
enter
inc
inc
mov
inc
pop
cmp
out
xor
stos
mov
sbb
xor
add
add
and
push
push
add
adc
jmp
movsb
pop
add
in
icebp
test
std
jmp
add
rolb
push
cmc
dec
or
mov
mov
mov
inc
xchg
adc
jmp
ss
xchg
add
sub
adc
dec
std
push
inc
lcall
pusha
loop
cltd
hlt
insl
pusha
fiaddl
rcll
jp
mov
mov
and
adc
je
add
sbb
add
add
jno
xor
adc
cwtl
sti
leave
das
aad
push
data16
in
out
jmp
jb
sti
ljmp
sbb
adc
push
call
call
cmp
push
xchg
pusha
pop
call
test
mov
fmuls
sahf
cld
decl
add
pop
dec
dec
cmp
mov
add
dec
dec
add
add
mov
incl
int3
mov
push
aas
push
sub
pop
shll
ret
jg
dec
jb
xor
test
lock
out
ljmp
sbb
les
add
repnz
mulb
adc
pop
popf
roll
test
cli
std
xchg
add
dec
into
pop
add
je
pop
jns
mov
sub
inc
push
call
push
repz
testl
popf
or
mov
movsl
andb
bound
andb
outsb
into
mov
jb
mov
data16
cmpsl
mov
into
lods
jp
loopne
call
jns
call
mov
sarb
into
xchg
pop
dec
dec
lret
pop
xor
adc
lcall
add
lahf
in
out
inc
fwait
cmc
xchg
out
out
pop
fs
cmpsl
ss
fwait
fwait
imul
fcomps
cs
loopne
out
sub
ret
shll
sbb
jmp
sub
pop
jmp
pop
std
hlt
cmpsl
push
adc
pop
into
cmp
pop
add
and
lcall
ds
pop
call
inc
call
mov
mov
mov
call
insl
or
insb
adc
add
pop
call
iret
inc
push
and
les
jmp
ljmp
insb
test
add
pop
call
subl
and
sbb
xor
cld
xor
insl
repz
out
jmp
incl
xchg
lock
cld
cmpxchg
fs
pop
subb
adc
rcrl
inc
and
cmpsb
fs
ficomps
sti
ljmp
xchg
and
lock
imul
aam
je
cmpsl
sti
adc
push
jg
push
jo
cld
lcall
add
les
add
inc
in
aam
test
roll
fldenv
lahf
adc
adc
add
jl
mov
add
setp
hlt
jg
push
mov
sub
push
adc
hlt
aam
je
addl
pushf
into
xchg
mov
sub
call
lds
jge
rclb
pushl
cwtl
inc
les
add
mov
lret
xchg
sti
ds
daa
les
js
jbe
push
les
jno
lret
cmc
push
fld
pusha
sub
lret
push
leave
aad
add
pop
mov
fucomip
std
push
out
jno
dec
xchg
aam
out
or
lret
pop
out
clc
out
out
cmp
ret
cli
add
pop
testb
pop
lret
lea
fwait
sub
call
js
lret
test
mov
cmpl
cmp
jae
jle
mov
imul
mov
push
leave
fs
add
roll
sub
shll
and
inc
or
int3
xor
add
orl
fildl
lret
clc
aam
int
sbb
pushf
insl
js
pop
lret
shrl
jmp
arpl
std
mov
xchg
in
dec
and
in
scas
push
pop
cmc
sarl
mov
jae
fdivs
add
data16
dec
xchg
lahf
cld
out
xchg
sti
lcall
gs
pop
pop
mov
pop
pop
inc
loope
add
cld
push
cmpsb
bound
cmp
repnz
mov
jno
test
sbb
pop
add
pop
addb
jno
dec
or
cld
mov
jb
push
iret
pushf
cld
dec
xor
adc
pop
xchg
xchg
pop
test
add
sub
inc
mov
aaa
sub
stc
add
inc
sub
jae
xor
add
add
mov
cmp
outsl
xchg
add
filds
push
inc
iret
jl
test
mov
leave
mov
add
bswap
mov
mov
mov
push
repnz
add
dec
or
mov
push
push
mov
test
sub
mov
xchg
jnp
add
in
or
mov
push
aas
hlt
inc
call
add
dec
push
and
pop
imulb
cltd
push
add
fimull
rcll
sub
arpl
daa
jno
push
orb
das
ret
pop
pop
fwait
neg
sbb
add
lcall
sub
adc
pop
sbb
dec
mov
pop
lods
sub
dec
jb
cmp
dec
lahf
pop
fcmovnbe
and
sbb
scas
mov
dec
lcall
add
out
jns
adc
xor
testb
add
rcrl
xor
sub
jge
pop
xor
fildll
push
push
clc
scas
cld
push
outsb
fwait
or
inc
pop
add
inc
ret
add
pop
sbb
outsb
xor
pop
pop
sbb
sbb
cli
je
subb
fcmovnbe
jmp
sub
or
je
add
cld
mov
dec
cs
enter
mov
movl
or
fnsave
inc
xor
cltd
sbb
call
call
addb
inc
das
fstpt
mov
jne
cmp
ljmp
aaa
or
adc
lds
dec
xchg
les
add
or
lret
adc
xchg
aad
sar
sbb
add
shl
sub
loop
cld
jmp
je
jbe
and
sar
movsl
sti
andl
add
les
mov
sub
add
mov
cmp
xchg
sub
mov
add
add
mov
xchg
jnp
and
push
sti
ds
out
in
inc
xchg
push
cli
dec
mov
or
mov
cld
mov
sbb
sbb
out
shll
xchg
add
lds
cmp
add
inc
or
les
fsubrl
mov
push
jbe
inc
lods
pop
fcmove
ret
iret
shll
sbb
mov
pop
iret
pusha
lret
outsl
leave
mov
and
hlt
xor
nop
pop
iret
push
and
ret
cmp
test
xchg
jmp
mov
pop
leave
outsl
sub
ret
ret
mov
popa
mov
cmp
mov
cmp
out
faddl
xchg
add
movl
ret
lods
jmp
insl
sub
jecxz
negb
les
add
jp
and
popa
dec
stc
dec
mov
add
jecxz
lds
jmp
imul
fstpl
mov
aas
sbbl
jge
scas
bndldx
and
push
inc
adc
jl
dec
mov
cmpsb
fcomi
in
pop
mov
loope
push
cld
sti
jne
mov
lret
les
push
clc
popa
adc
cmc
sub
dec
add
add
sub
lea
subl
and
stos
dec
push
lock
pop
mov
cwtl
bound
adc
mov
outsb
out
push
xchg
add
repnz
rorb
popa
sti
je
xlat
mov
shrl
outsb
cmp
rcrb
jae
fimuls
add
insl
into
xlat
test
in
push
jp
xor
popf
cld
and
out
jnp
push
call
push
adc
inc
pop
sti
je
lds
ret
add
cmp
scas
push
out
lret
mov
mov
add
dec
sub
in
aam
mov
xchg
inc
push
inc
ficompl
or
add
add
les
jae
sub
roll
movsl
fistpl
test
movb
notb
jno
xor
out
les
repz
jmp
std
mov
fists
call
inc
jb
push
scas
mov
inc
sbb
mov
addr16
inc
pop
fisttps
ja
jb
repz
cmp
mov
cmpsl
mov
pop
and
add
scas
repz
imul
and
xor
in
and
sub
adc
testb
sti
and
lret
dec
adc
and
adc
push
aad
cwtl
imul
rorl
shrl
inc
xchg
sar
mov
rcll
jecxz
add
out
add
inc
push
cmp
mov
rcl
mov
je
lret
dec
pop
test
aam
mov
mul
sub
mov
shrb
nop
adc
arpl
sarb
jmp
sarb
and
rol
push
and
add
mov
push
xor
hlt
cltd
mov
push
jae
add
cld
in
dec
std
or
push
sub
adc
insl
pop
mov
aam
xor
in
push
mov
or
fcmovnb
pop
xor
add
pushf
cld
push
or
lock
gs
add
push
inc
add
pusha
cmc
ficoms
add
lods
pop
cld
adc
es
add
pop
loop
dec
xor
xchg
mov
or
dec
push
adc
repz
mov
pop
push
sarl
les
idivb
jmp
xor
test
add
les
lods
out
jns
add
rorl
out
aas
les
je
sub
mov
out
aas
les
cmp
add
add
add
mov
enter
add
mov
add
add
sbb
adc
sar
lea
add
add
or
mov
dec
rcrb
pop
ds
out
cmp
mov
sti
push
rcrb
out
adc
lret
sbb
dec
cmc
push
push
add
add
test
pop
pop
add
daa
cmp
add
out
add
mov
mov
pop
rclb
add
dec
mov
inc
jmp
pop
imul
stc
iret
sti
or
aad
or
out
iret
stos
pop
pop
and
iret
cs
enter
popf
fwait
in
xchg
pop
add
rorl
out
jnp
jmp
adc
add
add
icebp
inc
lcall
inc
lcall
repnz
inc
add
sub
pop
mov
gs
jmp
scas
addr16
mov
imul
in
daa
jecxz
xorl
in
loop
fstpt
lods
push
or
test
hlt
lcall
pop
sub
adc
push
in
dec
lcall
data16
adc
scas
jns
add
cmpb
je
cmpsb
mov
add
mulb
sbb
jo
cmpsb
lcall
loop
or
adc
fs
popf
pop
jg
add
sti
adc
push
sbb
add
sbb
ret
cmp
jne
push
ss
cs
add
add
pop
pop
dec
test
or
gs
xor
insl
stc
cld
js
push
inc
hlt
popf
or
xchg
jg
inc
les
arpl
out
add
add
mov
je
inc
subl
rolb
add
inc
loop
push
cmc
mov
add
fldl
inc
add
fcmovnb
xchg
les
xor
call
pushf
push
add
jge
cmp
mov
push
ret
inc
add
inc
inc
add
dec
or
ror
add
out
addr16
cmpsl
add
pop
fdivr
xchg
lcall
ficomps
into
outsl
pop
stos
add
mov
pushl
fstpl
cmc
and
ret
ljmp
pop
mov
repnz
add
add
pop
sub
sti
or
push
out
inc
mov
repz
mov
dec
in
mov
pop
rcr
mov
aam
mov
mov
adc
mov
cs
out
cmp
lret
repz
es
sti
xchg
pop
mov
pushf
ljmp
or
mov
mov
loope
out
dec
dec
jae
adc
jae
mov
mov
cmp
inc
mov
sti
fisubrl
and
shrb
and
jno
adc
test
daa
push
cltd
pop
jmp
rcrb
sarl
cld
fisubrs
jae
dec
jo
push
pop
mov
or
pop
dec
inc
jmp
mov
lds
push
pop
add
jae
std
shlb
jp
add
dec
mov
in
cmp
lret
or
sbb
int3
jmp
lods
in
pop
ret
or
mov
out
cli
in
or
pop
sti
je
pop
sti
adc
scas
jne
ret
push
push
add
and
mov
das
jmp
dec
call
js
lods
pop
jg
stc
xor
je
testb
mov
mov
add
jne
testl
movsb
cmc
and
push
idivl
mov
mov
inc
push
cmc
xor
and
sub
rolb
mov
into
mov
dec
ja
in
mov
iret
fdiv
pop
cmc
outsl
cmp
add
inc
fs
stos
cld
rorl
aas
les
add
test
add
or
and
add
jns
ret
mov
jo
mov
add
or
nop
repnz
add
xchg
sbb
test
mov
cmp
mov
pop
cmpsb
add
push
sahf
mov
mov
cmp
aas
push
ja
adc
cwtl
lods
js
bound
pop
gs
sub
sub
out
xchg
stos
dec
mov
mov
mov
cwtl
xchg
dec
add
cli
mov
mov
mov
sbb
rclb
scas
test
sbb
fcmovnu
sub
mov
pop
aam
jecxz
lods
or
pop
and
das
daa
add
push
xor
add
sub
sub
mov
cmpsb
lods
stos
adc
enter
push
mov
pop
jge
adc
pop
in
inc
jbe
pop
loopne
mov
std
adc
adc
call
add
push
mov
insl
add
push
lcall
or
stos
addr16
pop
inc
push
cmp
inc
inc
jmp
sbb
std
jmp
icebp
push
lcall
push
sub
fld
in
pop
mov
inc
pop
in
add
rsqrtps
sub
ret
outsl
ret
fnstcw
cltd
pop
push
mov
jg
cmpsl
lret
add
pop
mov
ret
fidivs
roll
push
push
call
mov
push
pop
push
add
pop
mov
daa
loop
xor
jp
sahf
pop
or
hlt
test
xlat
hlt
daa
std
pop
add
xlat
hlt
sub
and
add
xor
call
inc
fbstp
sarl
add
push
cld
incl
inc
nop
and
mov
lods
xchg
push
xlat
add
mov
add
int3
scas
cmpb
cmp
ljmp
pop
ss
les
in
dec
cltd
in
cmp
call
add
les
add
les
enter
test
mov
add
dec
out
xor
add
jmp
jne
pop
addr16
pop
push
pop
outsb
pop
das
sbb
inc
pop
cli
inc
add
ljmp
pusha
fimuls
mov
sbb
sbbl
rclb
sti
mov
add
call
rcl
roll
pop
shl
pop
shl
fwait
jo
inc
movsl
push
test
cmp
add
mov
mov
inc
sbb
add
ficompl
int
aad
add
pop
xor
mov
fs
scas
call
inc
test
testb
movl
sub
lcall
push
pop
cmp
push
inc
andb
addr16
inc
cmpsl
sub
aam
fsubr
jmp
pop
lcall
add
jp
enter
jecxz
mov
add
addr16
dec
cmpsl
sub
add
xchg
jg
or
xchg
shrb
je
inc
cmpsl
cmp
cmp
in
pop
push
and
sbb
stc
cmp
add
mov
add
shlb
mov
jb
sahf
bound
cmp
lods
pop
push
add
lods
sbbb
popf
jo
in
dec
xor
stos
push
ret
pop
or
andb
push
pop
fstpl
jne
rcrl
rcrl
add
sbb
out
fxtract
and
iret
and
xor
mov
mov
inc
inc
enter
add
xchg
and
testl
cmpsl
pop
in
int
xchg
pop
fists
dec
enter
add
mov
mul
addr16
jg
mov
add
add
rolb
mov
inc
addb
addb
addb
addb
add
xchg
inc
add
jno
add
push
inc
add
int3
inc
add
mov
inc
add
jmp
add
jmp
pop
test
ret
fldenv
add
out
cmpsl
add
cli
sub
imul
xchg
loope
sti
xchg
loope
shlb
jecxz
call
ret
jecxz
call
xlat
loopne
cmc
inc
pop
add
xor
or
sub
mov
es
rcrb
sbb
xchg
lods
imul
push
popa
mov
test
jg
cli
shll
addl
mov
xchg
lods
fildll
add
inc
fwait
shlb
dec
popf
inc
xor
mov
ds
or
lahf
adc
adc
aam
hlt
jmp
add
mov
cmp
lods
imull
add
dec
js
or
sarl
test
add
cmp
and
xor
and
jnp
or
aas
pop
add
inc
sub
loopne
dec
jne
mov
dec
push
add
rcrl
jecxz
add
ljmp
mov
mov
out
inc
dec
adc
lods
and
add
sub
nopl
sti
daa
mov
push
adc
orb
jg
and
pusha
mov
insl
pop
dec
punpckhwd
fisttpll
inc
add
dec
mov
out
or
pop
or
add
add
popf
sbb
add
mov
cld
lcall
outsl
or
insl
loope
and
pop
movb
jo
out
or
sbb
or
les
mov
sbb
addl
mov
mov
inc
mov
add
call
mov
add
fcoml
les
cld
add
test
stc
movsb
sarb
add
shrb
sub
xor
or
ds
add
mov
push
test
jge
mov
mov
cmpsl
aam
jg
mov
jae
in
jmp
test
decb
add
stc
dec
and
jl
dec
insb
inc
mov
mov
les
icebp
mov
add
test
lods
lock
outsl
shl
out
adc
lret
repz
pop
jmp
push
pop
out
dec
pop
fcmovnu
xchg
jl
push
ljmp
pop
add
dec
and
int3
xorb
xchg
shll
jmp
fistpll
xor
xlat
mov
jl
jle
jp
jg
test
jle
add
push
jb
cmpsl
dec
add
dec
jl
ret
dec
or
enter
mov
push
and
mov
or
xchg
dec
in
fstpl
scas
push
or
push
js
or
dec
subl
jne
popf
add
popf
sti
push
sub
ret
mov
daa
stos
jnp
cmc
mov
inc
sub
filds
add
movsl
cld
push
jnp
jmp
ret
add
addb
add
adc
cld
call
call
push
jmp
jecxz
std
add
daa
sbb
ljmp
inc
adc
inc
pop
addr16
inc
and
scas
cmp
pop
add
add
lods
cld
ljmp
and
and
scas
std
xchg
fwait
or
sbb
mov
add
cmpb
pop
div
ljmp
fildl
inc
jle
cld
inc
inc
clc
cld
inc
cmp
jae
xor
or
test
shll
out
insb
push
std
inc
imul
add
les
dec
pop
jne
les
jg
lds
std
out
xchg
add
or
or
add
cmc
mov
or
mov
stc
movb
stc
out
pop
repz
xlat
sub
push
push
mov
push
dec
inc
ljmp
hlt
mov
stc
bound
add
fisubl
push
and
add
inc
push
inc
fmul
pop
out
sub
mov
bound
mov
cmp
inc
push
shll
movsb
repz
ret
fdiv
clc
idivl
arpl
mov
mov
cmp
add
dec
daa
push
out
mov
loopne
mov
popf
or
mov
mov
rolb
sbb
iret
sub
or
cmp
enter
gs
push
jo
dec
jmp
cmc
push
das
adc
sbb
rorb
sbb
das
cmp
add
inc
mov
or
rolb
repz
or
fdivs
or
iret
inc
mov
add
rolb
mov
rclb
data16
rorb
in
and
ljmp
test
xor
rcr
in
jbe
add
in
mov
mull
push
dec
in
es
add
fistl
std
pcmpeqb
add
rcll
or
imul
adc
je
add
adc
dec
sbb
fsts
add
or
pop
stos
push
add
mov
add
int3
loopne
dec
enter
rclb
mov
mov
jp
xor
les
inc
push
stc
inc
add
xor
dec
sarl
inc
inc
or
je
jmp
sub
sbb
je
sti
je
inc
or
je
shr
adc
or
push
or
cltd
movb
in
push
add
push
add
in
inc
shlb
push
add
lock
in
add
sbb
mov
test
add
out
sbb
js
adc
xchg
sbb
adc
movsl
dec
rcrb
sbb
dec
lods
dec
mov
sbbb
add
push
movsl
dec
mov
sub
or
mov
arpl
xchg
dec
out
mov
cmpl
jbe
aam
add
call
out
ret
cwtl
lods
add
pop
add
pop
or
out
aam
sbb
pop
adc
sub
imul
cwtl
inc
filds
mov
pop
andb
pop
add
adc
jmp
outsb
mov
mul
rolb
andb
xor
cmp
jae
std
adc
call
xchg
aas
xorb
sub
daa
jge
adc
add
mov
clc
mov
xor
jmp
pop
popf
decb
add
or
lods
fcomi
inc
stos
shlb
popf
pop
movb
in
lods
pop
add
sbb
or
testl
pop
movb
out
in
movsb
std
je
fcomi
add
cmp
and
jae
or
jnp
notl
push
movb
out
lods
mov
or
sbb
mov
addb
add
add
popf
add
mov
aaa
mov
jmp
pop
fwait
cmp
es
or
testl
les
xchg
mov
orb
add
mov
or
mov
fcmove
pop
les
test
int3
mov
adc
mov
mov
loopne
test
scas
ja
add
add
dec
imul
xchg
pop
insb
xchg
ret
pop
out
mov
lea
pop
out
fcoml
out
push
mov
icebp
and
mov
lock
fcmovbe
wrmsr
push
addr16
ret
daa
test
add
mov
adc
imul
xor
inc
add
dec
jl
outsb
pop
inc
arpl
sbb
movsb
xlat
cwtl
or
shr
pop
inc
popf
fisubrl
dec
push
add
pushf
xor
mov
pop
add
inc
mov
mov
out
dec
dec
stc
push
jmp
pop
out
iret
pop
add
cmp
insl
les
jmp
inc
add
jmp
add
mov
out
pop
add
dec
andl
pushf
and
lahf
push
add
inc
mov
sti
xchg
push
mov
out
pop
addb
lahf
cld
cmpsl
mov
add
inc
mov
sti
dec
and
in
sub
lea
cmp
and
xchg
sti
mov
lcall
add
dec
movb
in
ljmp
test
sti
ljmp
std
sub
aas
rcl
dec
or
or
ret
sti
shl
xor
into
inc
adc
sbb
sub
add
testl
push
add
bt
call
testl
and
mov
cmpb
test
adc
mov
add
ret
add
mov
inc
les
add
les
js
test
outsl
or
sbb
dec
push
and
stc
rolb
cmpl
inc
lods
pop
je
add
add
mov
or
mov
cmpl
add
addl
add
add
add
add
les
mov
in
lret
mov
push
xor
cmp
jmp
or
in
les
cmpsl
add
and
aaa
popa
imul
cmp
add
cwtl
sub
lock
mov
sahf
and
sbbl
les
inc
lds
jo
mov
lcall
pop
out
add
ljmp
ljmp
imul
jmp
dec
sarl
sbbl
imul
pusha
add
add
jno
jmp
inc
daa
add
push
cld
jmp
dec
int
test
add
pop
add
addr16
jae
pop
adc
or
cmp
adc
jmp
lret
nop
jp
cld
scas
add
pop
add
pop
push
add
pop
addb
insl
jae
pop
lret
scas
mov
inc
sub
imul
dec
cltd
cld
push
sbb
or
inc
add
pop
jae
add
lret
pop
jg
inc
fisttpll
pop
xorb
jmp
fildl
add
pop
je
popf
pop
movb
in
mov
add
arpl
cs
sub
lock
or
invd
test
sub
scas
ret
push
mov
lea
mov
test
add
fisttpl
ds
call
sub
cld
inc
movsl
sbb
les
and
les
cli
lds
add
or
push
mov
les
jmp
or
mov
pop
in
add
xorl
fldl
adc
jl
dec
call
scas
mov
inc
movl
xor
add
push
sub
mov
arpl
pop
out
enter
mov
bound
outsb
bound
call
loope
idiv
fbld
outsl
into
loopne
push
call
sbb
or
pop
add
rcr
out
call
outsb
out
dec
pop
out
inc
xchg
lock
pushf
movsb
add
addl
popw
andl
or
or
push
mov
inc
clc
loop
out
jle
in
pop
cmp
shr
lahf
nop
cmp
adcb
or
jmp
sub
pusha
repnz
in
pop
cmp
stos
pop
cmpsl
lds
les
std
fs
sub
pushf
and
aas
pop
add
aam
add
inc
adc
add
pushf
inc
call
lret
xchg
cld
jb
addr16
dec
std
out
mov
loopne
in
out
mul
shl
jmp
sbb
std
ljmp
in
bound
add
jg
je
test
outsb
pop
add
bound
jmp
subl
mov
cmpsb
inc
or
xchg
xor
add
jb
add
sbb
pop
or
cmp
or
loop
call
fimuls
or
das
xchg
add
lods
push
add
andb
pop
ret
les
in
cld
ret
std
fiadds
les
push
or
outsb
add
add
dec
add
test
lock
ret
sub
cmp
inc
adc
xchg
cmp
jg
jnp
xor
add
or
add
or
ror
sbb
mov
xchg
jmp
mov
add
les
inc
add
or
mov
mov
out
pop
imul
inc
or
repnz
fcmovne
pop
mov
les
dec
insb
ror
pop
out
add
inc
std
enter
push
xchg
fnstsw
mov
sbb
fldt
mov
pop
and
lahf
lds
orl
repnz
inc
adc
sbbl
add
out
mov
pop
out
add
bound
add
pop
add
inc
pop
add
sbb
add
lea
incl
jecxz
roll
add
inc
shll
icebp
push
and
enter
jb
push
mov
fiaddl
jecxz
loope
mov
test
cld
ds
rorl
xchg
pop
adc
push
fmull
or
add
cmc
cs
fldenv
mov
inc
pop
addl
add
in
add
scas
cmpsl
lea
adc
pushf
pop
xor
repz
or
mov
push
add
mov
jl
pop
pop
mov
xchg
pop
shr
sti
je
mov
movl
or
call
mov
arpl
std
cmp
std
ljmp
push
add
mov
mov
fwait
sbb
call
or
mov
in
sbb
out
mov
sahf
adc
or
and
lods
add
les
mov
std
sar
cmp
les
jnp
mov
mov
add
add
or
jp
inc
inc
lds
jns
cld
push
inc
add
jb
add
cmp
mov
or
addb
add
mov
out
jp
pop
inc
push
or
hlt
jmp
mov
les
cld
fsubrl
incb
inc
push
call
and
into
out
rcl
push
add
mov
mov
add
fisubl
add
pop
addb
sarb
cmp
and
inc
cmc
ljmp
and
repnz
out
adc
jg
les
dec
enter
aam
jmp
mov
in
xor
pop
pusha
jb
sahf
mov
in
fwait
mov
inc
adc
or
sbb
sbb
loopne
out
test
inc
add
test
pusha
adc
aaa
les
arpl
stc
fsubl
dec
pushf
imul
cmp
inc
mov
lods
sub
lods
sbb
mov
mov
or
or
andb
les
sub
inc
sbb
or
push
lds
adc
push
movaps
inc
fldenv
popf
xchg
inc
add
inc
and
adc
popf
adc
cmp
inc
and
sbb
in
call
sti
and
pop
add
push
aam
add
xchg
xchg
add
dec
and
fcoml
lret
decl
mov
pop
or
or
xchg
adc
jnp
std
mov
add
icebp
cld
repz
inc
adc
in
xor
add
pop
inc
adc
add
testl
lahf
fdivs
rcrl
outsl
mov
lea
rolb
and
lods
incl
add
lods
fistl
int3
call
add
cmpl
test
stc
mov
in
lret
sbb
in
inc
rcll
rol
aas
cmp
add
lret
pop
imul
mov
stc
mov
push
testb
cmpl
shl
fmuls
jbe
mov
in
jge
jb
mov
arpl
add
aam
adc
xorb
repnz
popf
aad
loopnew
out
mov
sub
inc
fwait
cmp
cmp
lcall
mov
icebp
jge
jb
jg
pop
pop
inc
rcll
movaps
and
push
jb,pn
pop
subl
aas
mov
ficoml
and
cltd
ror
add
add
add
fnstsw
mov
pop
adc
out
cmpsb
std
push
scas
fidivrl
mov
sbb
xchg
sbb
xor
cmp
cwtl
cld
mov
stc
pop
adc
jno
jo
das
mov
or
cmpsb
rcrl
ds
and
jmp
fcompl
test
pop
mov
add
in
pop
int3
xchg
pop
out
xchg
xchg
xchg
aaa
xchg
mov
xchg
push
mov
jg
insb
pop
xchg
mov
mov
mov
mov
mov
pop
add
mov
add
mov
add
add
lods
pop
sbb
pushf
pop
sbb
dec
xor
aas
xor
aas
xor
dec
xor
aas
mov
leave
aas
mov
fisttpl
add
dec
mov
or
cmp
add
mov
cltd
dec
mov
loopne
mov
mov
add
dec
mov
jecxz
mov
sbb
mov
inc
ss
mov
xor
xor
dec
xor
push
xor
push
xor
push
xor
aaa
xor
inc
xor
mov
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
fsubs
add
fsubs
add
aam
add
mov
ror
sldt
add
add
daa
pop
sub
mov
mov
or
stos
jg
out
sub
jo
fldenv
pusha
sub
outsl
scas
shrb
and
outsb
jg
imull
cmp
inc
cmp
aam
xor
xchg
shll
jne
push
push
pop
fdivr
addb
pop
jbe
xor
std
sbb
sysret
nop
add
outsl
add
xchg
pop
packsswb
test
popa
bound
jle
push
ss
adc
fisttpl
push
and
negl
rcll
jo
arpl
lock
xchg
jle
xor
inc
add
sti
sbb
jmp
call
lock
lcall
pop
add
in
js
je
fdecstp
sbb
test
push
add
js
xor
fidivrs
test
add
mov
push
push
push
jbe
data16
inc
in
cmp
sti
xor
sbb
test
jne
paddusw
pop
fiaddl
add
jno
ss
lock
hlt
add
jmp
cmc
mov
sbb
xchg
out
stos
sub
pusha
out
mov
xchg
insl
clc
pop
ljmp
lret
out
ljmp
inc
pop
inc
scas
orl
in
or
addl
push
cmp
std
mov
or
lock
mov
sbb
adc
xor
andl
add
jae
data16
or
inc
push
add
add
add
les
hlt
jg
pop
insl
add
jb
pop
push
or
sub
jae
call
or
imul
and
inc
andb
add
sub
aas
add
xchg
pop
jo
xlat
lods
adc
jecxz
push
movsl
dec
xlat
scas
dec
mov
stc
inc
lock
jecxz
frstor
pop
fwait
iret
stos
or
lods
xchg
imul
rcrl
mov
enter
push
imul
js
lcall
ret
cmp
cld
cmp
cld
inc
sub
insw
sbb
pop
mov
and
stos
ret
pop
push
bound
jecxz
dec
jbe
lock
pop
push
aas
out
aad
lds
lret
call
add
pop
jp
cmp
not
pop
icebp
out
or
cs
cmp
jg
cld
gs
push
cmp
pop
inc
mov
xor
cld
add
dec
icebp
and
add
add
lods
jo
mulb
sbb
adc
addl
je
iret
xchg
add
fmuls
shlb
add
mov
dec
mov
dec
mov
out
aaa
jnp
cmp
xlat
mov
xor
sbb
add
sub
cmp
and
fdivp
incl
fstpl
rcrl
xchg
lcall
jns
jp
dec
mov
add
out
sbbb
and
hlt
cld
inc
adc
push
xchg
mov
insb
jbe
std
jnp
rorb
imul
mov
sub
fidivrs
cmp
ss
les
jg
mov
add
sahf
outsb
cmp
dec
mov
cld
dec
xor
test
orb
daa
in
add
outsb
je
jne
dec
push
add
push
and
add
les
add
sub
add
pop
pop
out
mov
sub
adc
push
fs
out
adc
jne
les
in
xchg
jnp
fisttps
add
add
fidivs
push
jg
test
lea
les
mov
les
inc
les
add
in
aas
xchg
and
mov
test
adc
add
movsl
jg
adc
mov
xchg
and
jo
addl
pop
data16
sbb
cmp
shufps
xor
push
hlt
roll
call
add
fisubs
jg
pusha
test
pop
jge
fld
je
jle
pop
mov
std
pop
dec
mov
cld
dec
jl
out
lret
mov
hlt
mov
outsb
in
push
popf
sti
mov
into
pop
cld
shlb
hlt
call
aaa
orl
mov
aaa
lret
and
dec
inc
enter
add
aam
lock
adcb
mov
lahf
sti
mov
inc
mov
dec
push
call
sahf
xchg
adc
enter
inc
call
jno
xor
cmpsl
ficompl
jnp
shlb
sbb
out
fcompl
mov
sub
dec
jp
dec
pop
sbb
pop
outsl
cmp
jmp
lock
les
or
push
or
lock
loopne
cmp
sub
lock
add
lock
jo
clc
pop
in
add
jb
or
aas
lods
call
std
xchg
xor
cmp
call
dec
aaa
loopne
add
mov
aaa
fmull
rcrb
mov
gs
mov
iret
aad
push
ror
fistpll
out
push
jg
fdivs
jg
fcomp
adc
pop
cmpb
cmp
loop
push
mov
jo,pt
mov
mov
fimull
inc
fstp
push
and
aam
xchg
into
fcmovb
pop
out
or
aad
mov
in
jo
out
inc
lcall
fcompl
add
sti
add
aad
cmp
cltd
push
in
or
mov
inc
pop
mov
rcr
pop
mov
test
inc
je
mov
das
push
scas
sbb
es
xor
xchg
loope
pusha
clc
pop
mov
inc
jo
out
cmp
negl
jns
repz
call
aas
jae
mov
std
cltd
cld
mov
add
mov
mov
cli
adc
clc
in
xor
sub
add
mov
inc
sub
sti
jmp
xor
xchg
cmp
push
pushfw
in
add
mov
or
xchg
sti
mov
mov
push
add
das
rcl
add
call
add
lret
lock
add
add
lret
xor
out
sbbl
dec
data16
sbb
xrelease
mov
pop
inc
subl
jne
aaa
pop
pop
pop
dec
xchg
in
das
push
xor
rclb
fdivs
xchg
xchg
aas
addl
xor
jno
imul
sbb
jecxz
push
push
test
les
cmp
aaa
add
out
jnp
in
cmp
or
mov
jge
mov
xlat
cld
addl
jl
add
and
in
dec
and
mov
arpl
adc
pop
test
rolb
add
cld
cmp
int3
cld
inc
and
pop
jb
shl
add
cltd
sbb
push
faddl
add
stos
push
inc
les
fadds
arpl
adc
cmp
fldt
out
add
mov
pop
mov
bound
adc
fidivs
inc
cltd
out
jmp
pop
out
inc
clc
ljmp
fwait
fwait
mov
in
mov
pop
xchg
mov
ljmp
push
mov
pop
fisubs
add
jecxz
add
sbb
pusha
in
outsb
ss
add
clc
jb
fnsave
jmp
xchg
mov
repz
jbe
sbb
cmc
daa
cli
jecxz
ljmp
or
xchg
and
mov
cmp
xchg
cmp
lahf
out
jp
cld
insl
sub
bound
pop
mov
pop
fwait
aaa
ljmp
xchg
pop
add
and
sub
jecxz
loope
sbb
add
sbb
cmp
xor
dec
add
cmpsl
xor
loopne
sti
jge
push
pop
shll
inc
cld
cwtl
cltd
je
xlat
pop
push
call
inc
cmpsl
jl
mov
loope
mov
call
push
xor
mov
subl
rcl
xchg
push
addr16
add
das
faddp
mov
dec
imul
incl
lods
loope
add
test
inc
add
mov
ret
dec
xchg
inc
lahf
inc
push
inc
inc
shl
addb
dec
inc
or
out
in
cld
imul
mov
not
out
push
sar
cmp
or
sti
fisttpl
cmpb
pop
outsl
testb
cld
int3
sub
rcrl
rorb
xorl
xchg
inc
or
inc
sbb
jl
subl
inc
jae
dec
pop
ficomps
xchg
push
insb
inc
mov
div
inc
xlat
stos
pop
inc
fwait
xor
dec
push
fisttps
sub
rcl
cmpsb
jg
out
xlat
sbb
popf
pop
je
loopne
pop
aad
add
inc
xlat
mov
add
stos
movsl
and
stos
and
addr16
mov
loop
and
fsubrs
imul
repz
mov
out
xchg
ret
testl
cmpsl
outsl
cld
out
mov
jle
xlat
mov
fucomp
dec
push
add
sbb
and
pop
dec
push
lods
les
lods
cld
sub
add
ret
cld
xchg
int3
pushf
inc
outsb
shl
xchg
adc
sub
jb
sub
or
pop
dec
gs
enter
sbb
iret
mov
flds
call
sub
pusha
std
add
pop
xchg
popa
adc
cmp
ret
pop
sub
push
xchg
xchg
fld1
sub
xchg
scas
add
sub
jle
dec
sti
mov
icebp
dec
or
xor
call
jb
inc
pop
mov
cs
adc
pop
cltd
or
outsb
movsb
xor
sbb
iret
pop
mov
pop
data16
mov
jmp
repz
fistl
pop
add
inc
das
call
fs
testb
shll
rcll
clc
mov
inc
aas
std
addb
cmp
ja
fildl
into
pop
out
lds
add
not
or
das
daa
in
push
and
lret
push
rolb
xor
xor
cmp
sarl
js
xor
rclb
push
rolb
aaa
mov
pushf
hlt
sub
pop
aam
dec
mov
xor
jmp
push
hlt
or
ret
push
dec
pop
adc
pop
push
jmp
mov
roll
push
out
jle
jg
enter
pop
mov
fisubs
lods
add
dec
mov
out
pop
pop
mov
ret
pop
adc
pop
fcmovb
iret
sub
cmp
jns
pop
pop
sbb
fcomi
insl
xchg
rcl
lcall
jae
jge
inc
arpl
call
dec
cmpsl
add
lcall
enter
stos
dec
rcl
scas
inc
add
pop
add
jmp
ret
xchg
in
insl
jne
cld
mov
ljmp
gs
daa
jb
ja
adcb
daa
jg
ja
add
pop
mov
cld
into
or
sub
jmp
jns
cmpl
push
adc
xchg
stc
inc
faddl
adc
xchg
movsl
loopne
inc
jge
hlt
ja
adc
mov
cld
push
add
test
mov
cltd
jl
sbb
adc
push
and
add
add
push
xor
pop
add
xchg
push
pushl
add
outsl
jg
jmp
cwtl
add
sti
popf
adc
pop
sbb
pop
inc
jbe
inc
sbb
sar
jmp
sti
je
outsb
sti
adc
outsb
xchg
or
and
push
add
pop
push
mov
sbb
mov
adc
inc
add
adcl
mov
push
dec
mov
add
sub
ret
andb
pop
add
mov
add
or
mov
js
std
xchg
aad
inc
int
lds
ljmp
jae
adc
push
adc
fists
inc
call
clc
inc
sub
jmp
cmp
pop
pop
xor
sahf
xorl
add
outsl
repnz
call
add
shl
inc
or
decl
xchg
incb
add
fadd
and
out
pop
rcr
out
adc
movsb
testb
cmp
adc
addb
test
into
add
jle
aaa
xchg
jle
push
xchg
int3
je
jno
cwtl
xlat
mov
gs
adc
add
add
add
xor
imul
dec
adc
cmc
inc
les
call
movsb
cltd
imul
aas
adc
loope
insl
rcrb
or
add
lea
pop
in
or
shll
mov
adc
or
orb
pop
rcrl
addr16
subl
add
or
loope
inc
mov
ficoml
sbb
jg
bound
pop
data16
push
andl
out
adc
cmp
jg
fsubrs
jmp
enter
icebp
insb
sti
jne
lods
jg
push
out
mov
leave
scas
add
jmp
cmp
or
jb
lea
cli
incl
ljmp
or
adc
pop
mov
popf
add
xchg
sti
cmp
sbb
aad
test
insl
loope
adc
hlt
push
jne
jne
jmp
insb
or
imul
or
mov
and
ljmp
call
pop
std
lds
mov
lcall
aaa
rolb
int3
xorl
les
hlt
xor
fwait
into
add
mov
or
lahf
les
jne
cld
sar
insb
xor
ja
pop
or
add
dec
xor
fisubrs
jp
lret
fdivs
jae
mov
insb
xor
rcrb
xchg
add
mov
add
or
cld
imul
into
push
fdivr
adc
leave
cmp
repz
out
pop
pop
les
hlt
pop
push
xchg
push
inc
call
jge
fucomi
mov
leave
xlat
jecxz
jae
or
ret
push
and
enter
sti
sti
shll
add
lcall
addr16
sti
in
push
mov
and
leave
or
mov
pushf
jl
faddl
int3
add
xor
inc
push
cmpsb
dec
mov
sub
mov
pop
add
aam
adc
cli
sbb
fs
lock
push
ds
addl
add
fisubl
int
jb
cld
data16
adc
aad
cmp
jp
cld
bound
fdivrs
jg
ss
mov
in
add
add
gs
ds
or
jge
rorb
mov
pop
mov
pop
add
or
xchg
push
in
jb
mov
or
push
push
or
fsubs
jne
mov
add
jecxz
pop
pop
add
cmpb
pop
add
mov
xor
call
aad
jno
adc
lcall
popf
jno
loop
adc
pop
outsb
dec
js
testb
inc
sub
sahf
or
fistpl
and
jb
fiaddl
insl
pop
sbb
pop
pop
jg
push
pop
or
fwait
sub
xor
test
and
sbb
jg
mov
je
call
add
aas
adc
add
jl
les
push
jae
or
inc
fdivl
add
lds
inc
add
add
pop
je
jp
idivb
cltd
sub
dec
xchg
insb
add
ret
mov
or
jnp
add
lds
adc
inc
add
dec
inc
dec
not
cli
push
je
add
out
sbb
push
inc
add
dec
push
hlt
scas
lret
imul
mov
andl
push
jle
lds
popf
arpl
jmp
les
rcl
inc
fbld
adc
add
out
or
hlt
arpl
inc
sbb
les
sub
xlat
inc
cmpsl
add
add
pop
ret
xchg
js
jae
mov
negb
les
les
popf
js
dec
xchg
sub
in
pop
std
je
adc
push
sbb
aaa
add
punpckldq
data16
add
pop
xor
rcl
insb
or
push
fs
in
dec
insb
adc
dec
push
pop
je
inc
loope
jmp
push
add
add
fildl
fs
jmp
sti
adc
fdivr
pop
pop
subl
adc
jg
popa
call
xchg
mov
stc
push
add
mov
and
add
cmp
ret
loop
and
loop
and
add
ss
sahf
or
popf
or
xlat
movsl
sti
ljmp
and
divl
or
mov
push
push
push
add
or
mov
dec
call
and
pop
push
mov
roll
cs
adc
cs
int3
push
xor
add
push
add
notb
or
shlb
mov
std
mov
hlt
or
adc
or
std
sub
inc
clc
push
das
mov
adc
add
shll
jae
inc
add
jb
test
call
inc
rcll
dec
sbb
loope
cs
dec
adc
lock
hlt
pop
stc
pop
jl
mov
orl
cmp
add
pop
mov
addr16
dec
add
les
cmp
xchg
notb
aad
mov
rcll
nop
jecxz
jge
add
dec
and
call
add
stos
gs
jl
cmp
push
mov
fcoms
test
add
pop
insb
lea
out
aas
out
lods
lock
sbb
out
lods
xchg
dec
out
lods
fadds
out
negb
sub
shrl
dec
sbb
jmp
pop
push
add
sbb
out
in
sbb
push
push
cmc
xor
lcall
xlat
inc
in
cmp
pop
dec
dec
push
pop
push
push
push
shl
adc
cmc
inc
pop
adc
mov
pop
mov
pop
push
xchg
mov
pop
adc
cld
mov
pop
add
mov
fdivl
test
add
pop
andl
and
clc
add
xchg
add
int
lcall
in
scas
lcall
pop
pop
add
push
lahf
push
mov
or
lea
dec
call
test
jno
dec
push
scas
int
add
or
data16
jg
std
or
add
cld
push
inc
pop
pop
add
shl
mov
mov
xor
inc
xor
jne
rolb
jnp
call
add
or
cltd
add
subb
inc
cmp
mov
gs
mov
inc
aaa
clc
out
jae
push
insb
xchg
adcb
mov
xchg
test
in
add
add
or
mov
call
aas
pop
mov
ret
fwait
fwait
ds
mov
inc
xlat
sbb
pop
std
mov
add
lods
dec
jne
mov
inc
mov
rol
sbb
push
xor
and
mov
jge
jnp
pushf
jb
and
pop
int3
sbbb
inc
inc
inc
xorl
out
inc
call
mov
lea
and
pop
add
mov
or
xchg
mov
ss
shrl
or
pop
bound
pop
xor
and
cmpsb
cmp
pop
sbb
cmp
mov
lret
pop
arpl
push
aas
add
sub
mov
sbb
inc
in
dec
mov
les
mov
iret
pop
das
push
stos
cmp
pop
xchg
sbb
shl
pop
mov
pop
push
mov
lock
mov
pop
mov
push
pop
xchg
cmc
je
sub
rcrb
pop
add
cmp
fcoms
add
or
fwait
push
pop
xchg
and
cmp
add
sub
pop
cld
xchg
adc
jp
inc
arpl
push
loopne
inc
popa
ja
filds
add
and
cmp
and
cmp
adc
add
push
dec
inc
and
divl
mov
mov
subl
xor
int3
add
push
loopne
cli
dec
scas
frstor
push
mov
rolb
cs
ret
lahf
sti
jmp
cltd
inc
sti
sub
sub
cmp
xchg
add
push
add
out
lret
pop
fsubs
aam
mov
mov
add
ss
lock
push
insl
mov
inc
add
cmp
outsl
dec
jmp
xor
and
add
les
std
dec
mov
inc
add
aam
xorl
add
enter
add
call
add
insb
sbb
in
mov
jne
scas
mov
adc
mov
push
test
ret
rcrb
ja
and
les
repnz
add
pop
out
cld
push
clc
sbb
lahf
push
sub
xor
mov
jmp
dec
jbe
cmp
add
into
fnstsw
pop
lods
adc
add
push
insb
dec
cmp
arpl
xchg
add
inc
or
inc
sbb
mov
mov
pop
aad
mov
add
aam
pop
ljmp
push
add
jne
sub
cmpsl
and
pop
cmp
pop
rcrl
arpl
or
sbb
mov
scas
mov
or
sub
jmp
dec
popf
lods
out
sahf
movl
or
rclb
arpl
or
mov
sbb
push
push
xchg
push
subb
mov
test
rcrl
push
jmp
fisubl
sbb
or
ja
pop
lea
in
in
push
sub
add
adc
jo
lods
push
data16
pop
mov
xchg
mov
pop
add
aas
push
lea
mov
push
loopne
sub
adc
call
jmp
mov
mov
mov
sub
mov
adc
push
mov
add
popf
bound
pop
pop
add
int
cmp
add
pop
paddw
inc
add
cmp
mov
hlt
fdivl
int3
fdivrl
add
aaa
pop
icebp
sub
hlt
es
push
pushf
mov
inc
push
std
rorl
inc
rol
inc
test
push
or
mov
cmp
mov
ficomps
ret
xor
adc
add
cmp
sbb
add
je
shrb
add
orb
xchg
pop
pop
iret
xor
add
pop
test
mov
dec
pop
inc
adc
shl
pop
jmp
mov
out
mov
sbb
add
jecxz
and
mov
pop
les
ret
push
je
adc
iret
test
roll
fldcw
or
ror
add
jmp
stos
push
scas
jmp
mov
cwtl
pop
jmp
inc
insb
xchg
lods
mov
push
adc
push
ljmp
movsl
mov
pop
mov
xchg
mov
stc
fsts
lock
aam
inc
out
stos
sti
aam
insb
inc
jmp
add
or
inc
pop
fsubr
add
pop
aaa
and
enter
fidivrl
into
or
bound
icebp
movl
aam
inc
xchg
aaa
cmp
mov
inc
pop
pushf
pop
add
mov
mov
cltd
shrb
pusha
jg
in
pop
data16
fnstsw
cwtl
dec
punpckhbw
cwtl
add
xchg
cmpsl
call
lea
cmp
incl
or
aas
sti
in
ljmp
das
fstl
jne
add
into
sub
std
jne
add
into
cmp
mov
scas
pop
pop
je
or
shl
ljmp
xchg
and
lods
addl
cmc
jno
cli
loop
pop
fists
push
pusha
cmpsb
mov
jle
xor
mov
push
xor
test
push
xchg
add
jbe
cmp
mov
or
mov
inc
mov
lcall
inc
inc
push
fnstsw
imul
or
jl
inc
jno
add
add
scas
cld
sbbl
dec
ret
mov
or
faddl
jae
pop
jnp
shlb
aam
pop
xor
repz
sub
jne
sbb
dec
aam
or
add
add
add
sti
aaa
mov
cmpb
inc
pop
adc
xlat
pop
sub
pop
popf
xlat
icebp
test
lretw
movl
mov
dec
jne
sbb
cmp
orb
push
std
pop
mov
jmp
jp
frstor
std
inc
inc
aad
mov
stc
orb
add
add
data16
iret
mov
int
sub
cmp
cwtl
or
dec
xchg
stc
sub
pop
je
mov
mov
dec
ds
stos
test
jge
xchg
jmp
mov
test
pop
add
sahf
stos
sti
aam
push
or
mov
push
inc
rol
add
das
xor
jmp
jle
fsubrl
dec
jmp
pusha
add
psrad
or
adc
and
in
sti
inc
cmp
jnp
and
scas
aad
aad
xchg
int3
gs
jg
inc
add
hlt
popl
pop
pop
jg
sbb
add
out
jb
mov
std
jne
out
push
ret
jne
out
int3
xor
xor
push
adc
add
add
out
adc
push
pop
andl
lods
call
test
xchg
lods
call
test
and
mov
mov
or
inc
imul
and
outsl
hlt
pop
and
sbb
jne
cld
andl
out
test
jmp
insb
inc
mov
call
add
cld
dec
xor
movb
add
add
pop
mov
jl
cld
inc
add
add
add
pop
les
pop
rcrb
and
jno
adc
add
add
das
add
add
cmpb
insl
mov
and
gs
shr
pop
mov
sti
add
add
les
out
lods
sub
push
insb
sbb
scas
pop
inc
call
cmp
into
loope
cmp
sti
scas
mov
out
xchg
sub
xchg
imul
shrl
rolb
lock
sbb
pop
sbb
out
fld
stos
inc
aas
push
push
cmp
fimull
cld
add
loopne
add
cmpsb
outsb
mov
pusha
stos
daa
lds
loope
pop
pop
cmpb
cld
jmp
mov
in
add
adc
ret
cltd
int
pop
insb
mov
xor
lds
jmp
mov
ss
pop
das
push
xchg
mov
scas
cltd
cmpsl
push
insb
xorl
jp
inc
lds
popf
mov
test
push
in
mov
dec
add
dec
cld
insl
or
inc
add
enter
aad
cmc
pop
push
insb
jl
and
dec
or
add
sarl
and
lock
rcrl
imul
sub
lods
inc
aad
and
ja
imul
and
sarl
and
pushl
lds
mov
add
and
aas
and
fcmovnb
sub
nop
idiv
je
jb
pop
push
cld
lea
pop
std
out
pop
xor
or
call
adc
lcall
and
adc
mov
aad
jmp
xor
add
or
cmc
aas
cltd
push
xchg
mov
xor
cmp
icebp
xorl
lahf
pop
xor
ret
xchg
dec
inc
cmp
aas
inc
std
cmpb
add
sub
sti
mov
cmp
call
aas
addl
add
scas
cmp
cmp
notl
dec
outsb
fs
je
jo
and
adc
stos
mov
cmp
dec
subl
add
inc
imul
pop
jmp
stos
js
ret
cltd
jo
rolb
xor
popf
pop
dec
addr16
mov
cmp
js
dec
adc
sub
adc
repz
jnp
and
dec
fwait
in
fwait
out
fs
xor
mov
cmp
add
int
rorl
cmp
test
loope
movsl
sub
call
jbe
popf
mov
bound
div
mov
insb
add
push
inc
nop
inc
sti
dec
push
pop
data16
inc
insl
testl
push
push
jg
sub
movsb
insl
dec
jge
mov
mov
mov
aam
cmp
mov
add
pop
add
xor
aam
jge
jg
int3
ret
repnz
jns
psrlq
add
lds
or
add
call
add
pop
or
add
mov
andl
pop
sbbl
pop
mov
push
lock
or
repz
jl
pushf
add
sbb
inc
xchg
lds
clc
ficomps
cmp
sbb
jno
mov
call
test
add
add
sti
ljmp
pop
add
add
cwtl
and
jg
les
inc
or
push
std
mov
push
inc
les
orb
sub
sbb
insb
out
in
test
inc
icebp
clc
xchg
add
repz
add
add
mov
jae
jge
adc
out
mov
clc
orb
add
inc
push
insb
cld
inc
out
xor
mov
test
dec
imul
xor
mov
pop
outsb
insb
jnp
jmp
cmpsb
call
push
jmp
adc
int3
jno
inc
lret
shrb
add
inc
push
add
pop
data16
call
addb
or
mov
add
data16
sub
mov
sbb
mov
jp
xor
inc
pop
int3
inc
and
jg
pop
jmp
fwait
jp
jmp
cmpsl
sub
lock
xor
mov
mov
inc
jns
test
insb
pop
leave
add
sub
add
add
add
inc
cld
divb
xchg
xlat
sub
adc
into
sbb
push
mov
mov
arpl
outsl
lret
add
mov
cld
jle
inc
call
bound
dec
sub
in
and
ret
nop
clc
aam
shr
push
push
push
add
push
inc
inc
push
inc
or
inc
cld
jmp
cmp
cld
push
scas
mov
add
add
rolb
cwtl
add
fucomp
cli
lcall
jg
push
je
clc
push
hlt
adc
fnstcw
fnsave
orl
cli
jbe
push
aas
fstl
inc
add
test
rdtsc
test
loopne
outsl
sbb
addb
ljmp
mov
jne
outsb
fadds
or
inc
mov
sbb
movsb
outsl
or
pop
int
loopne
in
add
add
cld
dec
jb
es
iret
repz
into
repz
jns
xchg
push
in
and
addb
mov
cwtl
or
sbb
andb
std
mov
js
cld
hlt
cmp
dec
jbe
addb
out
or
hlt
mov
xlat
movsb
cld
xlat
ret
movsb
jb
xchg
jmp
js
push
mov
rolb
call
loope
repnz
loope
xchg
xorb
mov
mov
add
sub
xlat
sub
add
fimuls
cmpsl
sbb
sub
or
fwait
and
fldcw
int3
leave
lods
adc
xchg
adc
xor
adc
adc
mov
aaa
mov
cmp
stos
pop
lods
dec
mov
neg
pop
jp
dec
xchg
int
cmp
in
pop
pop
jmp
mov
les
aas
cmpsl
pusha
inc
outsl
pushf
inc
inc
mov
ficomps
pushf
jb
jmp
insl
add
sub
xchg
inc
adc
test
mov
roll
add
rcrl
pop
ja
jmp
stc
addl
into
sbb
xor
mov
aas
jne
dec
ds
and
jmp
pop
ds
fisubl
pop
int
fstps
cmp
js
test
arpl
jmp
ret
dec
mov
int3
lcall
xchg
add
pop
add
mov
add
xchg
call
test
bound
pop
cmp
subb
add
and
push
adc
sarb
sbb
mov
mov
jnp
inc
and
out
jo
push
inc
mov
mov
lcall
fdivl
lcall
add
adc
sarl
inc
fwait
mov
xor
xchg
shl
pop
nop
mov
and
cmp
inc
call
or
add
test
inc
cmp
adc
testl
repz
add
push
idiv
pop
xchg
call
mov
sbb
jecxz
lock
lods
stc
movsl
cld
add
jmp
xchg
push
sbb
aad
jne
sbb
mov
xor
adc
add
xor
aas
outsb
ret
popa
mov
stos
jae
cmp
scas
pop
xchg
sub
cmp
sbb
mov
sbb
mov
or
pop
inc
enter
les
lahf
inc
clc
inc
add
shrl
dec
add
les
or
aas
mov
sbb
pop
mov
cmp
sub
int
aaa
aaa
test
pop
fs
enter
nop
popl
pushf
adc
mov
int3
adc
push
enter
dec
aas
mov
imul
lahf
add
xchg
rep
and
mov
imul
jmp
add
sbb
push
aas
sbb
mov
mov
add
mov
dec
stos
jp
sar
rcl
sti
mulb
mov
mov
push
add
shll
xchg
insb
cmp
xchg
dec
cwtl
lret
ds
add
mov
shlb
add
xchg
pop
add
lods
ljmp
add
cld
xchg
decl
scas
sti
ljmp
ljmp
mov
ret
sti
lcall
dec
jnp
std
push
add
sub
mov
xchg
cli
fidivrs
jno
std
jne
fisttps
cld
in
cwtl
add
loopne
jecxz
das
fdivrp
mov
les
popf
xchg
lods
jno
jae
jmp
popf
jb
mov
cld
jae
test
sub
fists
out
inc
movb
or
inc
lret
stos
cmp
mov
cmp
inc
inc
cltd
addr16
mov
cmp
add
dec
mov
repz
pop
test
test
out
lahf
pushf
cld
add
mov
mov
pop
sub
inc
fadd
add
jmp
scas
xchg
pop
jmp
xor
sbb
insb
push
sarl
pushf
arpl
inc
popf
push
andl
cwtl
dec
pop
inc
sbb
in
jbe
cmp
mov
int
repz
sti
mov
fistpl
jb
lods
inc
pop
add
mov
xor
pushf
popf
loope
lret
int
hlt
jnp
data16
cmp
bound
arpl
stos
aam
push
xchg
rcl
add
push
xchg
or
mov
xchg
inc
inc
sbb
pop
dec
pop
xchg
adc
cmp
call
pop
clc
jmp
jmp
out
icebp
add
add
sbb
loope
lea
mov
cld
ret
dec
inc
jmp
cmp
inc
and
fs
jecxz
cmp
add
mov
dec
popf
fdivrs
test
cld
sub
in
add
imul
inc
aad
test
pop
mov
outsl
add
stos
xchg
in
add
sar
call
xlat
pop
mov
js
ret
add
sbb
jmp
orl
jp
pop
pop
add
lcall
popa
sbb
cmp
imul
ret
mov
idiv
mov
mov
lcall
sbb
sbb
sar
mov
sar
test
add
arpl
mov
mov
insb
inc
inc
xor
pushf
or
add
lods
adc
mov
adc
leave
aad
cmpl
cmc
clc
push
cltd
xor
arpl
cmpsl
xchg
test
or
pop
lea
mov
dec
or
sti
out
mov
ljmp
cmp
xchg
aam
cltd
jae
adc
cld
jmp
mov
add
loop
ljmp
aaa
sub
xor
call
cmp
adc
lahf
fisttpl
xor
popl
xor
mov
jecxz
aaa
ljmp
jle
stos
cmp
push
cwtl
inc
sbb
jg
pop
jmp
loopne
call
or
jne
lret
xchg
sbb
outsb
ret
rcr
add
pop
outsb
rclb
add
data16
pop
add
adc
and
arpl
sbb
mov
faddp
out
in
add
loope
int
cmpsb
call
bound
fptan
adc
ja
pushw
mov
frstor
pop
push
popa
add
sqrtps
idiv
pop
inc
mov
out
test
pop
add
bound
mov
loope
or
scas
ss
jb
fptan
xchg
adc
jne
pop
nop
data16
inc
movsl
add
add
lcall
fcmovu
ja
ficompl
dec
push
pop
cwtl
cli
adcl
jb
data16
push
ja
popf
pop
test
icebp
or
call
es
add
sub
jl
call
push
in
and
cmc
das
mov
and
pop
je
out
jmp
or
int3
cld
push
test
mov
pop
or
in
sbb
add
testb
lock
sti
rcrl
les
call
mov
cmc
fst
or
add
dec
cli
sar
call
add
add
jle
adc
stos
cmp
leave
mov
mov
addl
mov
xchg
xchg
cld
aas
mov
hlt
fcomps
jae
xor
push
lock
ds
add
push
fcoml
sub
push
cld
xor
sbb
inc
add
add
in
fistpll
xor
push
dec
sbb
add
add
adc
pop
jmp
mov
rol
pop
test
pcmpeqw
mov
xor
enter
les
add
popf
loope
lods
lods
sub
jmp
jg
pop
jmp
or
jo
icebp
xchg
jg
arpl
push
xor
fcmove
data16
inc
lods
cmc
sub
cmp
repz
scas
adc
ffree
dec
add
repz
inc
scas
and
xor
sub
aaa
ss
inc
ss
insl
add
inc
jmp
pop
call
aam
xor
dec
jle
jmp
pop
push
cmp
add
jmp
xchg
add
in
or
aaa
das
cld
sbb
int
dec
push
mov
add
mov
std
xor
imul
xor
insl
pop
pop
add
sbb
mov
mov
add
push
push
inc
push
xchg
addr16
xor
int
xor
outsl
inc
mov
mov
pop
xor
and
clc
call
push
out
sti
test
fwait
clc
push
inc
push
clc
push
fcmovne
dec
or
sbb
clc
push
loop
or
push
call
cld
dec
imul
aam
mov
xchg
lods
ret
test
add
fwait
subb
andl
xor
jns
addl
rclb
addl
xor
add
mov
ret
and
les
hlt
rorb
add
xor
cld
fwait
dec
nop
mov
mov
clc
daa
xchg
jb
fsts
in
jae
lock
icebp
xor
imul
jnp
aad
arpl
xchg
xchg
inc
in
sub
pop
fmull
xchg
xchg
pop
int3
add
sbb
jbe
shrl
enter
cmp
icebp
nop
jbe
loop
xchg
sbb
shrb
fistl
shl
mov
push
out
lret
in
sub
sbb
add
in
subb
cmp
frstor
das
xchg
xor
sub
add
imul
les
cld
jmp
cmp
pop
add
lcall
push
lahf
sti
aam
dec
inc
jmp
lcall
adc
sti
push
dec
out
je
jp
hlt
add
cs
adc
loopne
testb
enter
jb
push
push
insb
cmp
sahf
call
jae
loope
mov
das
cld
sbb
mov
fists
xchg
add
and
add
into
loopne
jmp
imul
jmp
je
adc
add
xchg
lds
bound
add
loop
add
mov
add
and
fstpt
fcomp
cld
push
mov
add
pushf
push
cld
add
push
push
push
shrl
pop
mov
xor
outsb
add
sbb
das
sbb
fimuls
test
imul
repnz
rol
push
push
mov
dec
push
clc
out
mov
mov
or
jae
dec
mov
inc
add
aas
cmp
js
ja
insl
inc
mov
add
add
add
and
fildl
ret
xor
les
push
adc
inc
pop
push
ret
inc
cwtl
mov
adc
pushf
mov
inc
mov
add
or
cmove
inc
sahf
outsb
push
frstor
pop
sub
jp
cmp
ret
pop
jmp
add
xchg
push
pop
test
xchg
jno
sub
lods
fwait
dec
imul
loopne
add
scas
fcompl
scas
sbb
xchg
lcall
dec
jmp
add
sub
xchg
lds
les
mov
jb
inc
aad
push
xlat
frstor
adc
aas
cwtl
cs
cmc
xchg
imul
xchg
pusha
pop
add
inc
cs
jb
daa
or
add
cs
andl
jmp
add
xlat
xchg
call
jmp
xor
push
lahf
sub
jmp
jle
cld
insb
pop
cmpsl
adc
es
negb
mov
push
xor
cmpsl
push
cs
xor
testl
cld
jmp
add
scas
daa
add
pop
xchg
jo
incl
mov
xor
loopne
cld
psubw
add
das
mov
aad
dec
or
fsubs
inc
in
testb
xchg
or
sub
push
push
mov
sti
sbb
mov
mov
shrb
mov
imul
daa
aad
test
inc
sti
mov
pop
add
add
pop
jmp
aam
xor
adc
or
mov
cld
mov
aaa
and
outsb
decl
mov
and
jae
sub
loop
lret
fldl
mov
pushf
mov
xchg
jl
dec
push
movsb
gs
xor
xchg
mov
inc
lods
add
adc
xlat
addb
add
add
jmp
inc
mov
lret
cmpsl
mov
mov
int
push
jecxz
rorl
sti
or
jl
pop
cmp
dec
mov
add
xor
sbb
leave
pop
jmp
push
stos
imul
aam
xor
push
ja,pn
lret
loop
jmp
or
sahf
jns
adc
jl
or
inc
lds
dec
jge
push
push
push
pop
mov
dec
popa
mov
iret
cmp
icebp
mov
pop
data16
in
data16
lock
imul
and
inc
or
inc
pusha
push
fdivp
push
jg
pop
daa
xchg
sub
jmp
pop
xchg
pop
add
add
out
rep
in
jg
pop
add
addl
fisttps
cmp
pop
xchg
sub
jg
outsl
add
roll
mov
scas
or
pop
add
dec
outsl
add
fld
in
mov
and
add
push
push
push
fs
in
pop
add
add
inc
pop
push
jb
test
pop
add
neg
cld
pop
mov
pop
push
push
test
call
outsl
sbb
jne
push
fisubrl
js
popf
pop
addl
in
add
push
jmp
pop
fisubrs
in
scas
ret
xchg
testb
movsb
fmull
in
ja
inc
les
addb
add
add
loopne
dec
dec
scas
cmpsl
les
xor
lods
cmp
repz
jae
xchg
or
mov
xor
add
mov
lcall
xor
add
inc
mov
jp
xor
imul
inc
int3
mov
jae
dec
add
push
push
cwtl
adc
cmpl
xor
mov
mov
mov
add
mov
repnz
jmp
idivl
add
and
jl
sub
enter
les
dec
jns
pop
cmp
adc
push
xchg
cmp
shrl
into
xlat
dec
nop
fwait
push
and
test
loope
fnstsw
ffreep
lock
adc
mov
rclb
insl
inc
dec
and
subb
ffree
dec
sahf
dec
cmc
jns
in
stos
jnp
mov
and
fwait
insb
and
test
call
add
repz
test
test
jmp
add
xchg
pusha
inc
mov
je
add
mov
push
lods
sbb
inc
aad
pop
cli
sub
and
add
add
sti
jmp
fldcw
scas
dec
andl
popf
or
cmp
into
pop
out
inc
mov
jg
xlat
pop
jne
pop
clc
mov
sarl
pop
add
and
ljmp
jo
data16
hlt
mov
sub
sahf
adc
fnstsw
clc
data16
cmp
sti
add
add
cld
mov
pop
std
jne
fimuls
clc
scas
push
cld
pop
repz
ret
mov
aas
push
push
es
mov
sarl
lcall
inc
sbb
out
pop
add
inc
push
cli
enter
lea
push
addl
push
hlt
les
fdivr
sbb
or
les
add
lds
add
cmp
stc
repz
inc
clc
dec
dec
cli
pop
addl
imul
add
stc
aaa
dec
jno
xchg
add
mov
mov
enter
sbb
jb
jp
xchg
popf
sbb
pop
pop
aam
fnstcw
push
inc
les
pop
dec
outsb
jg
or
jl
mov
add
add
jbe
hlt
aad
jae
sbb
and
adcb
mov
push
inc
mov
std
mov
lcall
pop
pop
jmp
add
aad
jnp
jbe
add
icebp
cmp
les
jmp
xorl
into
push
sbb
sbb
inc
dec
xchg
out
add
adc
cmp
pop
inc
mov
xchg
cmpsl
add
sbb
mov
pop
add
ja
pop
cmp
je
cld
sarb
jmp
rcll
xor
mov
pop
jb
or
pop
add
aaa
and
inc
inc
nop
jo
rolb
add
pop
call
nop
add
add
xlat
mov
pop
add
lods
call
pop
add
adc
shrb
fcom
xor
pop
add
rorb
add
sbbl
subb
rcll
add
subb
rcrl
add
addb
mov
fnsave
dec
lea
xor
mov
or
test
pop
add
xchg
add
iret
popf
push
lods
pop
add
popf
iret
popf
pop
pushf
pop
add
iret
test
jecxz
cli
inc
xor
xchg
mov
add
stos
lcall
mov
lcall
movsb
add
xchg
add
xor
std
sti
hlt
xchg
outsl
jno
add
xor
add
out
and
push
in
mov
inc
pop
push
xor
push
jb
add
lret
iret
add
jle
pop
lds
add
sub
xchg
sub
in
add
push
cmp
add
or
call
fwait
inc
jmp
imul
add
add
jmp
pop
fildl
ljmp
lcall
les
mov
les
or
dec
jle
add
xlat
sub
enter
rorb
add
addl
into
push
lret
rol
add
jmp
jge
jge
add
std
pop
xor
mov
mov
scas
insb
cli
or
mov
fadd
xor
call
inc
mov
dec
adc
or
sbb
or
jbe
fdivl
sbb
sub
xlat
cmp
pop
push
das
add
add
and
fcoml
fistps
pop
sti
cs
cmp
jmp
insl
andb
jmp
add
cld
jmp
sub
rclb
aas
in
ja
push
mov
push
xlat
push
add
mov
in
jnp
cli
sti
cli
lcall
test
push
add
pop
iret
adc
xchg
lcall
jne
sahf
push
clc
pop
pop
cld
mov
popf
ret
shl
adcl
push
mov
inc
add
ret
lea
outsb
pop
sti
fldl
movb
add
mov
hlt
adc
and
cmp
xor
outsb
mov
xor
lcall
addr16
les
jmp
aas
inc
adc
test
outsl
xlat
ffreep
and
rclb
mov
test
dec
icebp
push
aas
test
incb
mov
je
es
les
mov
lea
and
test
mov
pop
mov
lds
add
test
cld
idiv
mov
imul
jo
jb
push
decl
lea
add
jge
sbbb
shll
jnp
sub
inc
xor
rorl
out
push
mov
in
pop
stos
shlb
or
mov
inc
pop
call
mov
sbb
adc
pop
push
add
pop
jmp
xchg
push
outsl
push
lds
mov
jp
outsb
and
rcrl
xchg
pop
in
pop
and
adc
fisttps
mov
pop
test
fwait
pop
ret
sbb
sbb
bound
andb
sti
xor
mov
in
push
push
roll
sti
cmpsb
push
popf
sti
jle,pt
leave
stos
mov
push
in
cmc
dec
jge
jmp
mov
lock
filds
dec
fwait
or
adc
lea
mov
arpl
jmp
jae
data16
pop
adcb
mov
push
arpl
add
mov
xchg
outsb
or
pop
add
pusha
xchg
imul
mull
xlat
mov
or
cmpl
ret
inc
jbe
outsb
add
and
push
xor
lds
pop
xchg
mov
mov
scas
jg
push
shl
jmp
jecxz
cmc
fadd
sahf
xchg
ds
add
sahf
fwait
adc
movsb
iret
decl
dec
shr
pop
add
mov
mov
aad
xchg
gs
pop
call
adc
add
lcall
sub
mov
adc
shll
cmp
data16
jo
mov
mov
icebp
sti
mov
vpsubb
mov
adc
add
or
dec
xor
add
mov
insb
mov
movsb
jae
add
mov
aaa
adc
jp
pop
popf
and
mov
int
adc
out
enter
stos
decl
cmp
add
inc
mov
add
jmp
jnp
lret
mov
push
adc
clc
ret
add
test
adc
out
cmpsb
fldcw
add
out
inc
cmp
adcb
mov
mov
mov
xchg
adc
mov
xor
mov
test
dec
cmpl
out
into
out
xchg
repnz
jmp
mov
add
adc
xchg
rol
add
dec
adc
stc
jmp
add
cmp
mov
adc
inc
icebp
adc
sti
xchg
dec
pop
add
dec
or
test
pop
cld
insb
add
loope
dec
jmpw
jge
fmuls
mov
and
inc
in
cmp
jmp
push
mov
aam
and
fildl
xchg
mov
add
pand
xor
rclb
loopne
cld
ljmp
pusha
std
adc
aaa
aam
pop
push
xor
ret
dec
mov
and
lock
push
test
sti
mov
imul
insl
push
dec
pmullw
sti
lcall
lds
push
add
fcmovu
outsb
clc
mov
out
jmp
push
loop
hlt
cmpsb
sbb
mov
loope
or
popl
out
push
je
inc
inc
mulb
jo
mov
inc
leave
sti
xor
jmp
int
sti
inc
add
call
dec
inc
jmp
lahf
pop
mov
jl
push
push
add
out
mov
clc
add
push
or
ljmp
add
dec
inc
or
add
jnp
pop
or
loope
cld
dec
in
test
das
push
inc
sbb
into
or
push
mov
pop
jmp
push
test
dec
int3
sbb
dec
add
xlat
es
mov
pushw
add
adc
jmp
divl
push
addl
sub
jle
in
jo
lcall
fildll
in
pop
jmp
jge
ss
les
out
call
daa
dec
pop
jmp
sub
psrlq
jp
add
inc
frstor
rcrb
pop
push
push
mov
dec
cmp
mov
adc
jmp
add
sub
pop
push
push
sbb
jp
call
jecxz
mov
jp
leave
ret
push
enter
add
pop
or
pop
lea
push
adc
jmp
sub
pop
lea
rclb
jmp
std
sub
jl
cmpl
xchg
inc
insb
push
add
data16
popf
xchg
push
push
mov
lea
cmp
mov
andl
and
imul
std
lcall
and
sbb
xchg
test
mov
push
push
in
dec
mov
cmp
pop
pop
pop
iret
jbe
pop
xchg
jae
out
call
test
mov
sbb
call
std
mov
jmp
cmpl
add
push
inc
sbbb
or
rorb
andb
sti
add
cld
fstps
push
inc
les
add
add
je
or
add
inc
cmc
adc
pop
pxor
jnp
inc
pop
jl
les
pop
mov
lds
add
push
mov
add
les
outsl
lds
add
les
cmp
or
jae
pop
outsb
inc
arpl
jp
xchg
stc
add
les
xchg
pop
jmp
or
mov
cmpsb
daa
aam
aad
aam
xlat
arpl
cmp
add
pop
jae
cmpsl
push
mov
les
incl
call
sub
jmp
add
adc
jl
test
in
mov
ffree
fwait
sub
inc
cmc
jmp
daa
inc
pop
jmp
sub
les
cwtl
and
add
pop
out
inc
fldenv
pop
add
dec
int
cmc
scas
sub
pop
dec
addl
and
pop
add
mov
cld
bound
xlat
mov
add
or
insb
push
cmp
jmp
pop
int3
test
mov
faddl
lds
loope
lds
or
jmp
cwtl
push
xchg
inc
push
jnp
repz
and
xchg
push
add
jne
xor
adc
mov
and
push
add
std
mov
inc
push
add
in
xchg
adc
incl
xchg
xchg
sbb
mov
cmpsb
xchg
jecxz
imul
fisubs
sti
fstpl
test
cld
call
fistpl
fstl
cmovs
mov
sarb
je
addr16
aad
in
jmp
jge
xor
jle
mov
fdivrp
inc
add
push
add
aaa
or
mov
and
add
add
dec
add
fcoms
cld
ja
jmp
xchg
add
add
xor
jp
loopne
push
popa
into
mov
xchg
adc
scas
ret
and
shrl
and
inc
scas
repz
jecxz
jnp
mov
icebp
insb
aam
mov
pop
out
add
cld
xchg
cmpsl
andl
repz
push
or
push
sbb
add
pop
insl
add
mov
or
jns
aas
popa
add
pop
shrl
aas
pop
jmp
popa
out
sbb
lea
pop
jmp
lods
outsb
insb
and
adc
in
sti
or
jmp
lock
or
idivl
push
scas
cmp
push
insl
inc
push
insb
xchg
push
push
push
adc
or
jg
rcll
hlt
sbb
lods
mov
lahf
add
dec
lea
mov
jl
push
ret
inc
fstl
pop
call
xlat
fdiv
xor
adc
push
mov
fadd
push
sub
cld
xchg
outsl
aam
cltd
mov
lock
data16
add
add
or
push
pop
rolb
lret
jb
add
pop
xchg
push
test
fs
lret
pusha
add
roll
xor
clc
push
dec
call
pushl
movsb
loop
lcall
sub
add
lcall
push
lods
pop
mov
fistpll
add
sbb
pop
mov
fiadds
in
jecxz
cld
mov
jb
pop
push
mov
or
and
inc
outsb
data16
push
insb
repz
andb
and
push
les
lea
sbb
mov
xor
call
andl
rol
inc
add
into
jl
cmc
loop
add
xchg
icebp
aam
mov
push
sub
test
jge
arpl
cld
shl
push
int
icebp
cld
ror
jl
sub
cwtl
cld
cmp
jg
repnz
jnp
loope
sbb
clc
pushf
add
int
push
or
push
dec
xchg
test
mov
jl
mov
call
mov
sti
pop
pushf
sti
lds
pop
and
out
scas
fsubrs
add
pop
jmp
adcl
cltd
push
ret
repnz
pop
jno
pop
insb
inc
push
push
adc
lods
ror
pop
push
mov
lcall
shl
jp
add
xlat
sbb
xchg
xlat
xor
mov
cmpsb
pop
jg
push
inc
sbb
or
in
jp
push
xchg
repnz
add
les
icebp
ret
fildll
divl
sbb
inc
dec
mov
sub
pop
add
fucomi
in
scas
push
xchg
push
xchg
push
cltd
adc
mov
push
mov
push
pop
jg
loop
xlat
jmp
test
xlat
push
shlb
sti
pop
add
dec
adc
add
sbb
inc
inc
int
mov
push
xchg
pop
call
xchg
or
and
lahf
daa
sub
mov
cmpsb
les
sbb
std
je
or
push
jg
add
or
inc
insl
and
add
call
test
jl
incl
outsl
xchg
push
push
add
push
push
fldt
jge
clc
das
sbb
imul
push
add
popf
sti
add
clc
dec
std
je
outsb
std
je
outsb
call
cld
out
cli
jb
mov
inc
mov
clc
cld
cli
cltd
jle
mov
pushf
gs
cmp
sbb
outsb
sbb
les
js
add
das
clc
call
dec
cld
inc
lock
pop
pop
lock
int3
jle
jb
aas
call
bnd
and
jp
or
jnp
decl
or
jae
mov
sbb
mov
outsl
push
pop
cmp
lock
push
insb
insb
test
pop
xlat
add
pop
xchg
inc
add
pop
xchg
js
lods
mov
andb
mov
pop
push
mov
pop
iret
jns
dec
push
jmpw
ss
les
mov
push
insl
sub
xchg
bound
mov
xchg
leave
pop
scas
cmp
insl
sub
rorl
add
aad
gs
add
add
ret
ret
mov
sti
sti
xchg
aas
ja
lea
jmp
fldenv
jmp
insl
or
mov
cmpsl
call
add
push
push
mov
repnz
out
xchg
jns
sti
mov
sbb
sbb
add
fucomi
in
jb
push
bound
rcr
add
lock
pop
inc
or
pop
ret
insl
sti
mov
pop
mov
sub
adc
popf
outsl
dec
negl
mov
cmp
add
inc
cld
je
or
adc
pop
cltd
pop
pop
data16
mov
inc
sbb
push
ret
shrl
cmp
cld
adc
dec
pushf
call
adc
scas
xor
push
push
sbbl
mov
imul
pop
call
inc
test
in
jg
icebp
decl
jo
aaa
cmp
or
shlb
clc
je
pop
dec
dec
fcomps
jne
pop
add
fbstp
aas
in
test
iretw
xor
mov
and
std
imul
out
fs
cld
hlt
bound
aas
clc
cltd
inc
loopne
test
rcrb
rcll
jmp
mov
gs
inc
iret
repz
jmp
enter
ljmp
add
dec
sahf
add
fwait
aaa
pop
jmp
in
pushf
jmp
add
insl
inc
pop
push
push
add
movsl
adc
repnz
xchg
push
cli
add
or
push
mov
loope
pop
xor
scas
addr16
sti
bound
dec
shrb
cmp
push
add
leave
sbb
jno
jp
mov
out
pop
out
cmp
mov
cli
lret
repnz
jp
pop
mov
mov
flds
cwtl
push
in
pop
add
pop
sar
cmp
pop
sub
icebp
bound
ss
mov
inc
data16
jg
andl
add
or
sti
dec
mov
call
add
xchg
inc
push
das
pop
add
push
add
add
repnz
pop
add
sbb
pushf
cld
je
or
and
pushf
je
xchg
shl
incb
movsb
rcrl
fwait
add
sub
ljmp
and
push
jmp
push
push
sub
lods
popf
je
vpmuludq
ret
jne
push
jmp
lea
add
bound
push
stc
xor
inc
pushf
or
add
pop
cld
push
mov
mov
push
aas
lret
insb
adc
mov
xor
add
mov
inc
insb
mov
pop
or
incl
xchg
out
inc
mov
pop
mov
add
les
enter
roll
add
lcall
or
or
mov
insl
fstpt
les
mov
inc
fnstcw
pop
in
div
pop
pop
mov
push
xor
bound
sti
iret
sbb
or
jmp
fadd
addl
andl
sub
or
mov
in
loope
pop
clc
aam
xlat
add
lret
add
sub
iret
lods
or
xor
add
scas
pop
add
pop
data16
pop
pushf
add
pop
adc
fwait
cli
jmp
mov
lods
negl
out
mov
jo
loope
and
dec
popf
idiv
divb
jbe
loopne
icebp
pop
fiadds
jmp
ljmp
fiadds
stos
mov
inc
cmp
mov
or
sti
jmp
jnp
add
sti
hlt
mov
dec
push
lods
jecxz
cmp
push
lods
iret
fcmovnb
in
dec
sbb
aad
idiv
add
jns
pop
add
lahf
mov
divl
jno
shl
jnp
jle
icebp
pop
std
jae
call
add
add
add
push
call
das
jp
mov
add
call
dec
add
leave
jmp
or
pop
sub
ljmp
xchg
jo
push
lahf
das
jp
mov
mov
in
jecxz
daa
xchg
cld
test
jg
jp
cld
mov
cmp
adc
xor
ja
sbb
and
lods
pop
cmp
test
mov
pop
sub
les
mov
adc
outsl
pop
addl
jp
add
dec
sub
add
xchg
sbb
push
cld
sub
or
sbb
inc
mov
xchg
jp
dec
lock
push
or
int
sti
cld
jno
addb
addb
pop
cmpsb
add
nop
test
rorl
inc
aam
lret
add
stos
add
mov
stc
jecxz
insb
mov
jmp
or
jecxz
imul
mov
pop
outsl
cmc
inc
enter
dec
pushl
movsb
inc
divl
pop
jmp
pop
sub
xor
sbb
iret
mov
add
add
outsb
iret
mov
mov
gs
add
jecxz
hlt
dec
ljmp
shl
pop
ret
loope
pop
inc
in
mov
ds
add
ja
out
inc
and
sti
sbb
cld
bound
sub
xchg
push
mov
jge
adc
xchg
ss
push
push
lcall
add
dec
cltd
or
pop
or
push
pop
ret
inc
aaa
jo
dec
mov
sahf
dec
sti
push
adc
mov
fwait
imulb
test
mov
inc
fnstsw
lahf
sbb
jae
pop
push
sbb
xchg
mov
add
js
push
call
and
pop
add
pop
data16
pop
rolb
add
add
cwtl
stos
add
push
jmp
mov
push
andl
jge
pop
addl
test
pop
add
sub
pop
add
sbb
call
aas
and
pop
je
lret
xchg
lahf
jb
mov
add
pop
add
add
fdivrs
les
add
add
xchg
and
mov
aad
imul
push
addr16
push
add
testb
sbb
dec
inc
lret
or
inc
cmp
add
das
lock
pop
sbb
push
pop
cmp
out
xchg
add
dec
les
mov
rolb
push
add
adc
push
jae
adc
add
jle
jge
pop
pop
jle
pop
jmp
jle
outsb
fisttpl
or
sub
fbld
mov
sbb
add
mov
shl
dec
pop
push
subb
js
int
imul
jg
je
dec
inc
inc
out
les
sub
in
daa
pop
jmp
mov
add
sub
insb
cmp
xchg
gs
out
outsb
xor
xchg
movsl
cmp
lods
dec
sbb
mov
pop
jmp
mov
xor
in
sbb
lea
pusha
jns
sub
pop
add
testb
dec
repnz
jmp
and
sti
jmp
stc
out
sti
gs
insl
add
mov
sub
pop
lea
icebp
sti
jmp
add
or
pushf
filds
jmp
pop
mov
add
pushf
or
mov
filds
jmp
ja
and
pop
xchg
dec
mov
je
lea
and
call
pop
or
fwait
out
mov
ss
mov
jecxz
sub
mov
pop
jmp
xchg
mov
jne
xchg
clc
xor
lea
cwtl
add
push
jo
cmpl
push
mov
sub
add
aam
lock
jecxz
jle
jno
call
mov
pop
or
sub
push
lcall
xor
test
add
add
ss
out
jns
decl
add
add
insb
pop
xchg
mov
aam
cmp
test
enter
cmp
aas
cmpsl
push
push
mov
dec
jb
pop
push
das
jnp
stos
call
mov
ljmp
xchg
call
push
xchg
cmp
mov
xchg
fwait
jmp
sub
jp
and
subb
add
pop
dec
in
push
add
push
adc
mov
aaa
dec
sub
out
aam
rcrb
fadd
shll
push
negb
ljmp
pop
jmp
call
cwtl
and
and
int3
pop
xchg
popa
push
add
int
out
inc
adc
pushf
inc
pop
pushf
jle
ss
sbbl
add
mov
sub
add
lcall
jmp
dec
add
call
jo
xorl
sbb
test
pop
push
sbb
test
add
or
je
lods
pusha
je
lea
stos
mov
jnp
pop
add
div
pop
pop
aaa
sub
mov
dec
mov
xchg
sub
xchg
sub
mov
lcall
inc
out
insb
test
rorb
mov
sahf
push
pop
cmp
sahf
dec
call
test
or
pop
popa
shll
shlb
ja
push
sahf
mov
fcompl
lea
clc
jmp
adc
adc
lea
idiv
bound
cmp
and
ja
add
add
add
outsb
jo,pt
jo
jmp
loop
je
movsb
xchg
fidivs
cmp
sub
ret
add
push
lcall
sub
aad
cmpsb
pusha
cmp
les
addl
lods
fsubrs
jle
cli
adc
adcl
add
fldt
inc
add
insb
xor
pop
shl
idiv
push
inc
lods
pop
inc
aas
rol
xchg
call
xchg
test
mov
push
sbb
gs
jp
jae
scas
addr16
arpl
push
imul
call
mov
rcrl
or
add
adc
sub
dec
ljmp
add
pop
jmp
fimull
fildll
in
lcall
add
jnp
jmp
xlat
cmp
sbb
in
stos
call
xchg
jmp
dec
add
movsb
imul
inc
negl
test
shrb
call
xlat
aad
jmp
fnstenv
jmp
mov
insl
std
dec
mov
add
add
pop
lea
sti
fidivs
jne
int3
dec
js
cli
xchg
shlb
pop
outsb
xchg
adc
pop
movb
cmp
incl
or
jg
push
out
cwtl
or
call
je
insb
add
ret
aad
call
push
push
test
jb
lea
mov
xchg
jb
test
insb
adc
mov
ljmp
imul
mov
lods
imul
sub
add
lock
mov
cld
jo
outsl
sub
daa
gs
sbb
je
in
or
sub
loopne
repnz
rcrb
jl
test
orb
lahf
add
push
add
mov
push
mov
push
mov
pop
in
dec
mov
loope
clc
in
subb
pop
push
push
les
lret
les
mov
add
cmp
sbb
pushl
aas
inc
js
test
mov
xlat
and
fbstp
and
mov
repz
add
add
aaa
and
jecxz
fnstsw
out
sbb
insb
jp
and
pop
pop
icebp
fldl
pop
jge
mov
fucomp
aas
loopne
mov
sbb
std
jb
aas
or
pop
ds
pop
outsb
mov
negb
inc
insb
pop
adc
pop
aas
rorl
test
mov
jmp
rolb
add
add
cmp
or
adc
rcr
add
pop
inc
and
call
orl
jmp
sub
lahf
int
je
aam
aad
jmp
pop
lock
pop
jmp
add
pop
push
lahf
xchg
out
lea
or
cmp
mov
add
mov
jmp
movsb
rolb
jmp
js
cmp
mov
add
mov
sbb
and
test
je
in
xchg
push
adc
repnz
test
movsb
push
add
and
or
dec
mov
adc
mov
rolb
popf
xchg
data16
mov
in
push
xchg
add
scas
push
mov
push
decl
cld
jne
lods
cld
adc
aam
pop
adc
cltd
or
sbb
add
sbb
add
pop
sti
ljmp
xchg
sti
lcall
push
cmpl
pop
add
inc
fadds
sldt
add
add
sti
frstor
and
test
cmp
xchg
adc
inc
repz
out
mov
ljmp
push
jns
call
int3
call
and
out
inc
inc
cld
mov
mov
push
push
ret
sub
and
xchg
call
pushl
pop
dec
lahf
and
sbb
mov
pop
dec
mov
jno
ss
cld
mov
iret
add
mov
xor
sub
add
cmpsb
daa
cld
sarl
jae
js
or
insb
lret
push
and
push
cmp
mov
ret
fwait
jb
fcmovnu
fs
mov
js
cmp
shll
pop
mov
sti
lods
add
fisubrs
iret
add
aad
pop
and
and
mov
fcmovb
repnz
and
rcll
fldenv
sbb
add
pop
test
rcrb
jns
pop
orb
pop
and
jbe
push
sti
xchg
fstpl
cmp
jp
sti
sbb
jecxz
jmp
xchg
cmp
pop
add
add
xchg
in
xchg
add
push
jp
xlat
leave
xchg
pop
rolb
xchg
in
testl
pop
fdivl
jecxz
out
popa
sti
pop
ja
out
scas
imul
and
mov
aaa
or
outsl
out
sti
inc
jg
out
cmpsl
and
add
in
jae
add
inc
xchg
cmp
add
add
xchg
ljmp
xchg
xor
ljmp
and
dec
jo
pop
pop
fisubrs
cmp
jle
push
mov
sbbb
inc
add
push
cmp
inc
xchg
jb
insl
imul
sbbl
pop
sub
inc
adc
sahf
push
sub
push
cld
mov
pop
add
movsl
sti
sti
call
and
mov
mov
pop
mov
les
push
dec
lret
sub
repz
adcb
pushl
repnz
out
xchg
cld
aas
xor
rol
fmuls
and
call
clc
iret
jge
hlt
mov
pop
aas
cmpsb
cmp
xchg
sub
push
int3
leave
sbb
aas
shl
imull
aas
cld
cmp
mov
lahf
inc
add
fwait
or
sub
xchg
std
lcall
jmp
cltd
cld
sti
dec
sub
pop
pop
mov
mov
insb
cmp
ds
add
push
fnstcw
push
loopne
dec
enter
fwait
jle
inc
not
push
aam
dec
push
sub
cmp
xchg
push
jmp
dec
add
xchg
ret
pop
shll
dec
pop
data16
fwait
mov
shll
or
pop
jmp
sub
lret
sbb
lock
dec
or
add
inc
pop
cmpl
pop
loopne
cs
or
push
cmc
inc
and
std
ret
stos
add
cmp
test
pop
dec
sti
filds
ret
adc
add
lret
sti
ds
testl
mov
adc
dec
in
test
pop
roll
jmp
mov
pop
pop
add
push
jg
aam
or
loopne
jmp
sbb
test
xchg
push
test
add
mov
icebp
nop
ds
in
pop
cld
add
fstpl
jne
int
clc
push
and
mov
and
outsl
lea
add
cmp
pop
add
adc
shlb
je
adc
and
sub
mov
cld
mov
mov
jle
dec
ljmp
cmovo
mov
add
inc
std
and
in
push
jmp
cld
mov
les
cld
les
in
mov
mov
adc
mov
addl
std
lcall
and
mov
insl
or
mov
scas
or
repz
and
das
dec
les
push
xchg
cwtl
iret
dec
fdivp
daa
push
xor
mov
aas
adc
add
add
mov
and
repz
aad
gs
cltd
xor
iret
lea
rcrb
sbb
sbb
xchg
stos
loop
jmp
cmp
inc
sbb
inc
fldt
aaa
lds
lret
iret
and
cmp
rcrl
add
stos
push
jnp
mov
mov
push
fdivrl
xchg
cmp
stos
adc
movsb
fwait
sti
iret
stos
or
sbb
sbb
inc
test
mov
jo
mov
dec
lea
pop
pop
mov
in
push
lea
hlt
xchg
int
fisubrs
test
xchg
inc
movsb
jb
pop
add
fdivr
push
loopne
push
cld
add
push
xchg
and
enter
add
pop
xchg
mov
cwtl
aam
rcl
jne
cmp
rorl
dec
adc
gs
jmp
inc
pop
add
roll
xchg
xchg
jnp
cwtl
lret
adc
push
rcr
add
push
jno
sub
out
cli
mov
adc
jecxz
pushl
mov
das
pop
xchg
cli
sbb
mov
jle
mov
pop
idiv
jne
sarl
or
adc
cmp
mov
mov
sahf
xchg
outsl
mov
mov
cld
jmp
push
outsb
add
cmp
jbe
jno
or
mov
cmp
ljmp
aad
fadd
testb
stc
addr16
lds
andl
xor
inc
mov
test
mov
decb
push
or
cltd
dec
sub
lock
rclb
or
dec
in
arpl
call
inc
inc
or
faddl
les
sti
adc
or
ret
cmpb
ret
xchg
inc
shll
sbb
mov
jae
mov
cmp
roll
sub
pop
fstps
xchg
loope
add
pop
ja
mov
pop
jp
ds
in
shrl
addb
fildll
push
and
mov
outsb
stos
pop
xor
add
xchg
mov
or
pop
shrl
cmp
push
jno
push
shl
incl
aam
add
lret
push
inc
inc
dec
push
addb
rcll
mov
pop
xchg
add
scas
mov
xlat
sti
insb
test
push
add
push
or
je
lea
fdivr
xchg
sub
sti
push
aam
pop
mov
sar
rcrb
mov
aam
xor
lock
cs
add
xor
add
ret
jg
mov
push
push
jb
push
rol
inc
add
fadd
loope
pusha
cmp
mov
orb
add
pop
lock
ds
or
xchg
jg
pop
popf
cld
jne
xchg
push
adc
fwait
sti
cmp
or
lcall
mov
jbe
imul
add
adc
fwait
sti
cmp
adc
lcall
xchg
push
adc
lcall
and
add
lahf
sbb
popf
loope
or
or
outsb
cld
repnz
jne
mov
cmp
sbb
add
fcomp
cmp
adc
jb
imul
dec
insl
cmp
cmp
add
dec
ljmp
lret
stos
add
dec
aaa
cld
bnd
repz
enter
lods
mov
add
xor
adc
call
cmc
or
sub
call
dec
filds
mov
sub
push
inc
add
dec
and
or
mov
pop
data16
dec
or
inc
shl
mov
xchg
stos
adc
out
push
mov
mov
mov
xlat
icebp
cwtl
in
cmp
and
mov
mov
ds
in
add
pop
scas
inc
xchg
pop
jo
mov
add
lret
mov
popf
mov
cmp
mov
dec
in
sbb
es
sub
mov
add
pop
pop
add
or
cmp
sub
add
lds
sbb
push
sbb
jp
dec
or
cmp
cli
add
pop
outsb
rorl
lcall
push
je
xchg
dec
sbb
pop
mov
test
jae
xchg
out
hlt
sub
fprem
in
jbe
sahf
inc
pop
jg
cmp
push
sub
inc
sbb
add
je
mov
in
movsl
cltd
out
inc
sbb
xchg
je
xlat
loope
add
idiv
sub
mov
inc
andl
ljmp
in
sbb
add
ljmp
cld
addl
add
loope
and
sarb
or
push
mov
loopne
cmpsl
xchg
jg
lea
sub
mov
push
imul
push
mov
inc
or
pop
mov
out
daa
add
daa
jno
pop
mov
inc
call
jl
cmp
xor
mov
dec
lahf
push
lods
sbb
rol
mov
mov
push
xchg
jmp
daa
xchg
xor
add
call
incl
mov
cmp
adc
les
bnd
add
jno
inc
cmp
pop
xchg
cld
cwtl
repz
mov
decl
sbbb
sbb
hlt
shll
xchg
jecxz
test
xchg
vmovq
fwait
inc
push
fadd
int3
pop
sub
test
aam
sbb
xor
inc
lcall
add
or
leave
jle
jmp
mov
mov
sub
mov
sbb
and
xor
loope
xchg
pop
jo
mov
xor
rcrl
and
jl
scas
cmc
sub
add
add
pop
add
cmp
addr16
pop
xor
push
xlat
inc
or
sar
aam
imul
shl
sti
push
mov
adc
insb
call
ds
iret
sti
bound
push
push
adc
ret
mov
loope
insb
xchg
jb
sub
lods
loope
adc
lea
enter
add
ja
push
mov
sarl
pop
dec
call
mov
push
jmp
leave
test
add
push
call
mov
cli
inc
lods
stos
pop
ret
mov
mov
js
xchg
sti
mov
call
outsb
or
push
or
ljmp
andl
inc
je
repz
add
add
cmp
or
andl
pop
xchg
stos
xchg
stos
cld
jne
leave
shrb
dec
jp
mov
inc
ja
jno
lds
push
ret
xor
add
pop
xor
inc
daa
cld
sbb
ret
lcall
add
aaa
call
sub
pop
int3
and
mov
add
incb
xchg
xor
pop
mov
cli
aas
dec
pop
fdivs
mov
inc
out
std
mov
xor
pop
mov
xchg
push
shl
orb
push
aas
imul
iret
pop
les
iret
pop
jmp
jmp
fdivl
mov
jmp
add
pop
sbb
pop
sub
add
inc
clc
ret
stos
clc
aad
add
pop
mov
add
pop
pop
add
pop
lods
add
pop
sbb
incl
jmp
inc
aad
xchg
cmpb
pop
hlt
cmp
jmp
das
inc
lcall
cmp
xchg
pop
int3
aas
jmp
pop
int
inc
out
sbb
lcall
mov
add
addb
enter
lahf
xchg
std
sbb
jmp
sub
mov
cli
mov
mov
insb
fadds
int3
push
pop
add
jo
int
cmpsl
int3
inc
ret
scas
leave
es
test
xchg
inc
repz
mov
test
pop
ret
imul
es
inc
lds
int
negl
inc
add
sub
add
jno
std
aad
repnz
incb
push
lods
cli
inc
sbb
ret
cli
inc
in
sahf
pop
push
cli
arpl
adc
rcll
mov
dec
mov
or
movsb
mov
xacquire
dec
cmpsb
xchg
cmpsl
imul
sbb
mov
aam
je
outsl
test
shlb
xchg
cmpsb
xchg
cmpsb
imul
add
push
jbe
ljmp
jge
imul
das
push
out
mov
jb
enter
jp
test
jle
jo
call
into
mov
addr16
ret
ds
ret
decl
incb
mov
aad
cwtl
aam
shlb
adc
add
mov
aam
jb
ljmp
xor
dec
inc
pop
jae
sbb
jo
sbbb
jnp
hlt
jmp
int
mov
imul
jmp
adc
cltd
rcrb
sub
xchg
mov
xor
ds
lods
int3
jecxz
cmp
xor
jns
and
push
pop
mov
and
add
or
js
das
pusha
shll
mov
mov
mov
jmp
jns
lahf
mov
cmpl
test
dec
andl
dec
jmp
lods
pop
sbb
sbb
inc
sub
faddp
jg
dec
xchg
push
xchg
data16
dec
aam
scas
mov
xor
pop
xor
pop
add
add
cmp
cs
roll
imull
adc
fs
dec
or
adc
rolb
or
and
sbb
cmpsb
fists
scas
fadd
aad
xor
test
push
ret
arpl
inc
add
lods
xchg
stos
sbbb
jne
repz
dec
mov
mov
add
sbb
mov
call
aaa
scas
xchg
xchg
jecxz
pop
pop
add
test
push
sbbl
jo,pt
pop
add
adc
outsl
lea
xchg
xchg
push
cli
xor
test
ss
push
jbe
mov
sbb
and
bnd
mov
adc
xor
add
lret
call
xchg
dec
fidivs
sub
cmp
sbb
and
addb
mov
jae
push
mov
fs
lods
movb
jl
inc
lods
lahf
pop
les
sar
pop
mov
push
or
mov
mov
ret
mov
dec
lods
sbbl
rep
popa
hlt
incl
fwait
dec
das
mov
loopne
jb
or
mov
std
jnp
bnd
pop
jmp
hlt
jne
and
push
int3
insb
push
rcr
add
pop
mov
lret
and
mov
les
mov
scas
mov
jmp
into
lret
xor
add
rcrl
mov
jo
fcmovnu
fcomi
inc
add
add
fiaddl
add
rcr
add
pop
pop
test
pop
pusha
test
inc
cli
jmp
add
fidivs
les
enter
dec
mov
pop
add
lds
insl
inc
inc
popf
sti
mov
in
mov
jmp
int3
sbb
lcall
lea
sti
push
enter
sub
je
mov
add
add
call
orb
xor
xchg
push
fs
push
mov
pop
add
dec
or
cmc
mov
sti
push
dec
jg
ljmp
and
mov
test
pop
hlt
pop
and
add
ss
repz
mov
decl
popa
pop
incl
jl
addl
mov
add
xchg
jl
pop
mov
negl
sbb
jmp
out
pusha
int3
jp
adc
fnstcw
or
jge
mov
jne
jle
jno
cmc
inc
loope
je
pop
inc
repz
jp
dec
call
xor
or
les
push
inc
les
or
stc
jae
int3
mov
out
ds
jno
adc
lret
jb
add
incl
clc
mov
sbb
xor
xor
sti
xchg
mov
and
pop
or
lock
les
inc
aas
push
int
push
aas
xchg
and
xor
dec
mov
push
pop
arpl
mov
jns
add
jb
add
pop
xor
inc
pop
lcall
pop
ja
fwait
or
jmp
jp
ja
jp
ja
and
arpl
sub
xlat
jbe
lret
arpl
lods
ffreep
shll
filds
iret
lods
ffreep
shll
filds
pop
sub
les
enter
add
cmpsl
outsb
call
enter
add
pop
sar
dec
pop
jmp
mov
sbb
imull
mov
lea
je
sbb
jl
and
fstpl
inc
or
push
rolb
ret
flds
cmpsl
cmp
lods
and
xchg
inc
mov
out
sub
jmp
add
push
push
add
fdivr
push
inc
xchg
pop
sub
in
lea
daa
push
pop
std
les
cld
int3
push
push
lret
fbld
mov
add
dec
psubsb
push
call
xlat
add
lret
loope
add
lahf
rol
push
lock
fwait
push
push
data16
push
call
subl
add
add
cld
jmp
lcall
scas
outsl
xor
add
add
scas
mov
data16
mov
std
adc
addw
fisubl
add
les
ja
test
mov
sbb
mov
stos
mov
xchg
xor
or
cmp
mov
repz
movsb
mov
popa
mov
icebp
sbb
repz
mov
out
dec
imul
cmp
adc
and
fs
mov
add
fimuls
cmp
filds
insb
cmp
imul
xlat
shrb
jmp
and
enter
arpl
cmp
stos
pop
and
inc
out
mov
imul
mov
sub
and
jmp
daa
jae
push
xlat
inc
syscall
or
sub
push
imul
mov
mov
out
sub
gs
pop
jmp
or
sub
add
icebp
aam
test
cmpsl
sti
dec
addb
pop
add
push
push
rolb
lock
inc
or
rcrl
jge
aaa
test
pop
mov
inc
aas
sbb
lret
fldenv
pop
xchg
mov
cld
cmp
cmpl
outsb
insl
lds
test
xor
dec
adc
stos
dec
and
push
sbb
add
xchg
mov
aas
sbb
ret
out
inc
cmc
push
mov
lock
mov
cli
in
fdivs
push
pop
or
add
and
mov
sti
inc
fucomp
aas
and
push
movb
std
aaa
xchg
jno
jp
inc
and
pop
addl
pop
mov
push
call
and
pop
sub
xchg
or
add
xchg
pop
cmp
lcall
pop
pop
xchg
dec
call
mov
push
add
pop
mov
aaa
mov
mov
push
cli
jae
push
xchg
and
fsubl
fadd
mov
push
in
xchg
jle
fistpl
and
xchg
sbb
cmp
les
call
cld
xchg
cmp
gs
mov
mov
dec
adc
add
cld
mov
ss
jae
cmp
pop
jo
adc
jl
and
test
js
pop
call
adcl
bound
xchg
inc
mov
leave
sub
repnz
inc
jmp
addr16
into
and
cld
cmp
add
mov
push
sbb
jnp
sbb
jae
sahf
ret
pop
adc
sub
add
bnd
inc
pop
mov
mov
mov
fucom
or
testb
adc
leave
inc
mov
add
push
sub
pop
mov
add
pop
add
pop
jb
movsl
mov
add
jns
jb
jle
xchg
sub
xchg
pushf
adc
inc
ss
cs
xor
xor
cli
cmp
movb
xor
imul
out
fwait
mov
add
in
add
fimuls
xchg
in
push
imul
test
jle
add
pusha
add
pop
mov
imul
ret
sbb
sbb
lods
xchg
arpl
cmp
adc
mov
es
push
in
or
mov
adc
stos
call
jmp
loope
or
out
jecxz
addr16
cld
mov
data16
call
dec
sti
ljmp
frndint
sldt
add
add
cmp
ljmp
and
insl
fdivr
jne
test
mov
jmp
inc
in
jmp
sub
or
adc
fnstcw
aas
les
cwtl
faddl
fadds
adcb
cwtl
sti
enter
cmpb
jmp
jg
pop
mov
sbb
mov
int3
cld
add
sbb
lret
rcll
jge
incb
in
dec
clc
cld
sbb
sbb
adc
cmp
lods
scas
imul
outsb
cmp
pop
pop
insb
inc
xlat
jbe
test
sbb
mov
sub
xor
dec
and
inc
adcl
adc
mov
test
jle
out
inc
jnp
sbb
lahf
stos
sti
jecxz
js
fdivs
ficompl
je
cmp
pop
jmp
add
divps
inc
mov
outsb
mov
subb
lret
mov
mov
addr16
ret
flds
mov
dec
jp
jo
jp
push
and
or
pop
add
add
or
test
and
dec
mov
add
sbb
outsl
mov
hlt
das
cs
mov
mov
inc
jp
jmp
movl
add
mov
mov
ret
cmp
dec
and
inc
sub
jmp
fs
or
sahf
pop
sti
incl
loope
outsl
ss
xchg
pop
pop
pop
std
je
jecxz
sbb
adc
adc
loopne
and
out
and
fnstcw
and
sbbb
xchg
or
push
mov
inc
add
jmp
add
lds
add
fildll
fcom
cwtl
sti
lods
pop
add
mov
add
push
add
lea
fnstcw
inc
add
fcoms
int3
xchg
adc
nop
pop
jae
test
daa
cld
fstps
shrl
dec
popl
std
sbb
cld
jnp
add
adc
nop
mov
or
xchg
test
adc
pop
iret
or
xchg
adc
jmp
jae,pt
cmp
sahf
add
lcall
in
cld
push
push
hlt
mov
push
lock
cmpsb
add
gs
incl
hlt
nop
add
fwait
add
dec
lds
add
jecxz,pt
cmp
add
pop
data16
sti
pop
and
idivl
or
mov
shl
lods
std
sar
mov
enter
enter
mov
pop
jmp
mov
jg
int
stos
mov
fistpll
insl
loopne
pop
jmp
add
xlat
jge
rcrl
or
sub
rclb
dec
sub
push
jmp
call
or
bound
bound
push
and
dec
and
cli
hlt
ret
dec
inc
jmp
outsb
ret
jl
jne
and
add
add
push
xchg
and
movsl
movl
in
out
pop
jp
mov
inc
add
push
add
pusha
or
rorb
pop
mov
lods
or
jge
mov
bound
jle
mov
adc
jmp
jmp
icebp
je
xor
rorl
je
sahf
outsb
or
shlb
pop
mov
add
fsubs
outsb
or
xchg
jge
outsb
or
mov
or
fisubrs
push
nop
dec
cld
pop
sahf
pop
cld
jne
ljmp
xor
cmp
out
lahf
cli
cld
ljmp
outsl
inc
cmp
outsl
pop
add
pop
je
aam
in
cmp
jne
dec
outsb
or
roll
mov
aam
cwtl
or
jg
dec
push
ja
dec
bnd
pop
testb
push
jb
data16
cmpsl
mov
clc
sub
andb
jmp
inc
sbb
fdivrs
push
addl
xor
pushf
xlat
mov
movsl
cwtl
adc
push
adc
jbe
les
sar
mov
cwtl
or
xchg
pop
loope
jmp
int3
jae
test
addps
jmp
in
mov
and
fadd
mov
loope
call
stos
or
jp
mov
mov
decb
push
and
loope
dec
and
pop
xchg
lret
or
lret
scas
hlt
pop
add
sbb
mov
mov
inc
mov
pushf
jl
fildl
inc
mov
mov
clc
aad
cwtl
jbe
adc
iret
jno
call
add
int
add
vreduceps
pop
out
aad
or
rcl
mov
mov
and
xor
sbb
cli
sti
sbb
pop
inc
sti
cld
add
adc
pusha
cmp
pusha
xor
je
jp
mov
js
sti
aam
imul
lea
sti
mov
or
pushl
sti
xchg
out
scas
jne
aam
adc
lret
adc
sar
adc
out
mov
ret
pop
push
lcall
fadds
loop
je
shl
cmp
out
adc
pop
cld
adcl
add
dec
in
adc
mov
sbb
incl
sar
jmp
push
xor
lds
cmp
jne
adc
pcmpeqb
call
xchg
pop
outsb
adc
inc
cltd
or
stc
adc
jecxz
or
push
mov
cld
add
fiadds
les
jmp
mov
jb
xor
adc
adc
xchg
sbb
int3
ds
ror
cwtl
adc
ret
push
bswap
pop
insb
mov
pop
cld
fsts
cwtl
setp
pop
cmp
lods
pop
push
mov
push
dec
push
pop
xrstor
add
in
cld
add
pop
popl
stc
and
jmp
push
inc
mov
cwtl
rorb
add
flds
pop
loopne
sbb
inc
fimull
adc
int3
mov
inc
mov
rcrl
xchg
ret
ret
subb
cwtl
xor
and
add
pop
outsb
mov
les
jecxz
add
ja
mov
dec
test
or
xchg
fadd
sbb
add
daa
or
ja
adc
sti
push
sarl
pop
stos
jecxz
ds
sti
insl
andb
jb
ja
add
jl
cld
xchg
jge
sub
add
xchg
ret
shll
sbb
ret
add
cmpsb
pop
sahf
push
adc
jge
mov
jmp
pop
dec
pop
sbb
jmp
je
pop
call
cmp
adc
cmp
pop
inc
add
xchg
sbb
out
inc
lea
push
xchg
aad
cwtl
shrb
stos
shr
pop
add
fstpl
ret
push
loop
adc
jmp
push
push
add
pop
cmp
adc
gs
push
outsl
or
push
lds
xchg
pop
lds
pop
pop
call
lea
out
push
call
test
or
in
cwtl
shlb
mov
incb
mov
mov
or
or
in
aas
out
or
pop
std
jae
add
add
nop
push
je
loope
les
test
dec
cmpsb
ret
rclb
inc
les
adc
push
mov
pop
mov
jb
mov
cld
mov
jnp
clc
xchg
pushl
add
jne
stc
fdiv
divl
mov
fnsave
add
rcrl
hlt
repz
outsb
adc
fucomp
add
mov
ret
adc
sub
les
jmp
cmpsl
cld
out
aam
jmp
inc
push
pop
pop
mov
pop
jo
adc
push
add
lcall
inc
mov
sub
fadd
mov
insb
andl
mov
dec
mov
rep
es
sub
xchg
or
adc
add
inc
jge
pop
jmp
jl
cmpsl
add
int
clc
sti
pop
cmpsl
imul
rclb
int
inc
icebp
adc
add
xor
out
pop
push
bound
cmpsb
in
sbb
mov
ljmp
daa
test
adc
int3
xor
dec
push
sti
pop
mov
data16
push
xchg
add
add
mov
mov
inc
popa
pusha
lahf
andb
mov
pop
add
pop
xchg
inc
sbb
les
outsb
or
push
cld
jmp
in
push
add
sar
fstp
cld
adc
ret
ror
mov
mov
fwait
sbb
ljmp
stc
les
lcall
pop
cld
add
fcompl
mov
lea
addr16
dec
inc
cmc
push
cltd
and
loopne
idiv
dec
inc
das
imul
mov
call
add
inc
pop
pop
idiv
jg
rolb
add
xchg
sbb
mov
fwait
test
les
add
add
js
int3
ret
js
add
add
xchg
sub
mov
dec
add
fdivl
popf
dec
daa
adc
mov
mov
incl
das
cli
stos
test
jb
fwait
in
xchg
popf
jbe
mov
addr16
mov
lods
push
adc
adc
test
nop
mov
ja
push
inc
loop
add
les
addb
bound
add
ret
mov
stos
stos
or
dec
and
push
add
jg
add
pop
add
or
jle
mov
sub
add
mov
jle
mov
pop
push
sub
loop
add
fiaddl
xchg
pop
jmp
loopne
push
add
add
add
push
insb
test
cmp
pop
and
pop
rolb
adc
add
scas
pop
and
inc
stos
sti
out
rolb
jmp
mov
add
fnstcw
mov
je
test
mov
das
pop
add
nop
xlat
and
les
jmp
pop
add
inc
cmp
jmp
add
call
pusha
dec
jle
sbb
aam
add
out
xchg
sbbb
insl
mov
mov
or
mov
pop
mov
sub
and
ds
push
adc
sub
mov
pop
add
xchg
aas
and
inc
ud1
and
pusha
add
pop
add
mov
mov
in
sbb
add
out
pop
sub
cld
in
xor
call
les
les
cmp
mov
in
leave
icebp
call
or
pop
cmp
arpl
xchg
push
push
cmp
push
scas
mov
cwtl
cmp
incl
lret
sub
cld
insb
mov
sbb
dec
testb
sahf
cmpsb
aam
imul
insl
les
sti
xor
ljmp
aas
xor
jnp
int3
mov
fdivs
call
add
cmp
loop
dec
fwait
push
xor
pop
or
add
pop
add
bound
rcll
push
jmp
sldt
add
add
pop
cmp
mov
fildl
pusha
jb
jmp
push
jbe
in
add
lahf
dec
nop
sbbl
pop
repz
test
push
and
push
sbb
push
push
mov
jbe
jl
mov
pop
add
dec
push
add
pop
pop
mov
push
add
scas
push
cmp
out
or
mov
pop
add
cmp
test
les
add
enter
test
add
push
mov
push
sbbl
pop
push
fists
adc
jge
pcmpeqw
cltd
pop
push
cli
pop
mov
xor
cmp
callw
or
sub
jmp
add
pop
jb
inc
xchg
add
popf
mov
cld
stos
pop
cld
jne
rcr
call
daa
xchg
push
pop
das
push
add
lods
push
push
pop
jae
add
and
push
inc
insl
xlat
les
adc
push
xor
pop
dec
pop
cld
mov
push
inc
cld
scas
mov
and
dec
add
jne
pop
adc
sbb
addl
add
add
and
push
leave
scas
push
add
lods
jnp
les
jae
cs
add
cs
fcoml
jle
cmpsl
nop
inc
js
bound
push
pop
out
sbb
ljmp
sti
jge
or
inc
fwait
add
into
imul
repz
xchg
imul
fsubrs
dec
or
xchg
loopne
push
xchg
cmp
fcompl
test
incl
sti
push
sbb
idiv
add
les
inc
leave
add
les
dec
or
daa
sti
sti
jecxz
je
int3
or
imul
push
outsb
hlt
pop
shrb
in
cmp
jmp
or
mov
jae
pushf
push
mul
fwait
push
les
rorb
sbb
mov
lods
cmp
push
add
inc
add
arpl
jle
pushf
adc
push
push
xchg
jmp
push
jmp
inc
das
es
mov
cmp
setl
cmp
inc
jmp
push
jmp
jmp
mov
mov
cmc
ja
adc
insb
pop
daa
ficompl
call
ret
loop
jo
jne
add
int
frstor
insb
shrb
add
stos
enter
je
push
sbb
or
jle
pop
add
cmp
pop
test
pop
xchg
xor
mov
sbb
std
sar
adc
lahf
jne
cmc
lret
aas
add
sahf
adc
subl
add
add
push
jnp
lds
jb
mov
push
or
mov
inc
call
push
leave
out
bound
push
push
mov
xchg
pop
dec
push
jmp
pop
outsb
das
adcb
mov
xchg
testl
jne
inc
or
push
cwtl
add
xchg
notl
mov
sub
xchg
testl
add
sbb
stc
add
pop
push
cltd
inc
pop
add
stc
mov
repz
les
cld
sti
aas
cmp
leave
cmp
adc
xchg
stc
hlt
repnz
jne
or
push
sti
outsb
int
push
or
jnp
call
mov
push
leave
xchg
push
inc
dec
and
les
sarb
push
add
outsl
and
sub
jne
xor
test
xchg
sti
sub
lods
pop
addb
outsb
ret
sbb
push
sti
ljmp
pop
fsubr
jmp
es
mov
pop
jmp
aaa
int
sbb
xor
mov
test
fwait
push
inc
push
std
push
sbb
jmp
std
lahf
cwtl
outsb
repz
xchg
push
and
push
aad
add
lods
outsb
cld
ja
fs
push
loopne
or
add
mov
fidivl
ret
lahf
cmp
xchg
daa
push
push
xchg
push
test
mov
pop
add
push
xchg
push
dec
imul
push
jnp
sti
cmp
cs
cmp
xor
jmp
mov
dec
mov
push
aaa
xchg
sti
jae
jg
add
xchg
jmp
mov
xor
pop
flds
or
in
sbb
sub
push
rcll
sti
cmpsb
inc
mov
xchg
add
ficoml
xor
add
push
jne
pop
adcl
cli
mov
test
push
jne
jo
lcall
add
push
out
push
dec
sub
test
stc
ljmp
or
jo
bound
sahf
mov
divl
push
jne
pop
popa
adcl
cli
mov
push
jne
jo
lcall
add
out
addl
add
sub
cltd
je
mov
xor
mov
out
mov
clc
xchg
xor
lock
sarl
fs
inc
out
adc
out
je
clc
xchg
sub
les
mov
pop
outsl
or
pop
push
cmp
testl
jb
imul
stos
xchg
xchg
dec
in
sti
mov
jnp
pop
rcrb
mov
mov
test
push
inc
cmp
xchg
pop
je
add
add
dec
xor
cmp
pop
icebp
js
push
std
or
pop
cld
push
stos
lcall
add
sbb
jno
push
les
pushf
imul
inc
sub
jge
call
xor
push
xchg
pop
enter
test
sarl
int3
cld
push
pop
in
sub
outsl
ret
inc
call
fstpt
xor
outsb
inc
int3
cwtl
in
add
fldl
cld
bound
sarb
add
or
jge
and
aas
or
xor
insl
xchg
mov
dec
cmc
stos
movsb
jne
fildll
loop
loope
fst
lcall
xchg
imul
pop
add
shrb
fildl
xchg
inc
inc
lods
jnp
cmc
lcall
inc
push
add
aas
jmp
or
xchg
lcall
fsubrs
sti
cld
out
push
or
hlt
sub
aas
add
and
add
fcmovb
jne
dec
shr
loop
call
pop
sti
dec
sbb
divl
push
clc
decb
or
sbb
add
sub
or
adcb
sbb
or
xchg
push
add
fsubrl
ret
push
mov
aaa
add
sub
ljmp
or
jbe
call
test
call
es
push
les
add
sti
jg
pop
cs
mov
add
or
inc
xchg
test
inc
add
rolb
inc
je
or
sti
inc
bound
xchg
ja
add
repz
pop
mov
jns
sub
mov
call
xor
mov
sbb
cmp
aas
fiadds
or
call
jge
sbb
pop
xchg
add
out
xchg
pusha
xchg
data16
sub
cmc
jle
xchg
xor
dec
push
or
or
lds
test
int3
inc
mov
xchg
jmp
cld
push
push
lds
je
std
daa
mov
add
in
out
les
jmp
ud1
jmp
ss
test
xchg
mov
add
jg
sti
loope
daa
rorb
fldl
pop
or
cmp
mov
sahf
xchg
jne
repnz
ja
or
ss
clc
xchg
sti
mov
mov
xor
lods
and
cmp
outsb
sti
sahf
add
ja
nop
mov
jbe
xchg
or
mov
jle
dec
fisttps
in
adc
add
aad
loope
or
rcrb
or
sbb
mov
rcr
xor
add
push
inc
and
ds
adc
loope
add
sbbl
dec
adc
mov
xor
xor
movsb
jecxz
testl
mov
add
sub
pop
push
push
cmp
or
add
idiv
xor
add
sbb
mov
inc
and
cmove
sub
and
pop
test
and
sub
adc
aad
cmc
inc
fs
loopne
jbe
call
ss
and
xorl
mov
fdivrl
lock
call
inc
sub
add
int3
aam
inc
cmp
xor
cmp
xor
sub
xor
sti
xor
out
aaa
xor
push
and
jl
loopne
dec
push
adc
xlat
adc
test
addl
sti
js
adc
push
pop
lock
inc
inc
jae
shll
and
lds
lock
push
int
cmp
lds
lods
hlt
add
lahf
loope
sub
xchg
pop
cmp
or
fiaddl
clc
imul
mov
push
sarb
cmp
xchg
ret
ss
fildl
push
add
out
aas
lea
pop
das
lea
call
lds
mov
addl
push
or
out
out
leave
call
daa
mov
mov
ret
outsl
sub
xchg
add
pop
sub
pop
push
jb
or
and
test
pop
dec
mov
cmp
lcall
add
outsl
dec
test
jb
data16
or
jo
aaa
sub
mov
test
jb
data16
push
or
or
xor
push
aam
jo
ss
xorl
out
cli
add
push
pop
int
pop
test
leave
pop
add
add
pop
add
xchg
bound
push
and
fildl
and
add
add
push
sbb
inc
add
fstp
inc
and
mov
call
mov
push
jl
mov
repz
add
popf
jl
and
ficompl
jl
and
scas
shll
push
xorl
fs
pop
add
test
test
test
push
add
xchg
add
push
dec
cmp
xchg
sbb
xor
jmp
adc
lret
rol
je
hlt
cmp
lea
push
xchg
cmp
je
fwait
es
cld
into
pop
lea
cwtl
inc
push
sub
and
mov
mov
mov
push
inc
les
dec
and
cld
inc
and
jecxz
inc
mov
nop
xchg
add
inc
sub
cmp
push
lret
jae
lcall
add
mov
and
add
dec
ret
scas
loopne
sti
sbbb
daa
idiv
cmp
pop
push
jmp
push
pop
or
daa
mov
pop
popf
daa
mov
xchg
daa
fcomps
sub
aas
add
xor
sbb
add
pop
xchg
sahf
push
int
pushf
jecxz
in
aam
fadds
ds
jmp
push
or
jmp
mov
pop
dec
mov
lods
mov
fldt
xchg
jmp
sub
jae
mov
pop
jmp
push
cmpl
jp
callw
cli
push
add
cmp
add
in
or
xchg
dec
jbe
dec
mov
jge
mov
call
mov
sti
push
orl
sub
pop
sti
jne
pop
dec
or
add
add
add
fstpt
add
add
call
pop
leave
add
hlt
fucomip
push
pop
das
ret
or
xchg
fcomip
popa
mov
add
add
pop
add
sbb
xor
add
in
sub
lock
inc
fucom
clc
add
ficoml
ja
add
pop
ret
imul
add
add
pushf
pop
test
fcmovnu
std
mov
scas
add
and
call
out
xor
adc
loopne
std
jp
push
call
add
sahf
je
scas
sub
jecxz
loopne
dec
push
mov
lock
mov
pusha
add
test
sti
shll
jp
stc
imul
push
inc
mov
push
fcoml
cmp
dec
mov
out
jb
jp
ret
dec
jae
mov
jae
and
inc
jp
cltd
push
jmp
cli
add
mov
pushl
mov
sti
lds
inc
sti
fmuls
inc
int3
pusha
out
jg
jb
sbb
jmp
push
sub
adc
les
repz
dec
sub
push
jbe
insb
or
jb
xchg
imul
stc
dec
and
addl
and
fildl
dec
int
call
or
sbb
shrb
enter
push
cli
mov
cwtl
in
add
icebp
call
inc
pop
add
out
shlb
xchg
ret
pop
jmp
or
sbb
inc
enter
aad
adc
enter
and
xor
aaa
mov
xchg
adc
jge
pop
add
outsb
mov
xchg
sub
pop
mov
adc
cmc
fdiv
insb
fimull
in
adc
test
sub
pop
sti
popf
mov
cld
call
rorl
imul
ds
or
inc
neg
push
add
hlt
fucomi
push
pop
pop
dec
push
fiaddl
mov
jbe
testl
add
fmull
jg
add
cmpsb
int
sbb
pop
add
xor
lea
daa
dec
call
xor
inc
xchg
and
add
mov
add
insl
pop
pop
cld
outsb
push
lea
dec
lahf
sub
ret
shlb
cmp
and
add
add
lods
add
les
test
in
cmp
aas
dec
mov
xor
sub
adc
inc
outsb
cld
add
push
daa
sbb
dec
sti
rcll
mov
mov
jecxz
fcmovnb
xlat
mov
jo
out
push
jnp
roll
lods
mov
sti
mov
inc
push
jge
add
add
or
jg
insb
dec
push
test
xlat
push
into
jae
xchg
jae
shl
sub
test
rcrl
jmp
jns
and
fcomps
sbbb
push
jmp
in
pop
cmpsl
incl
daa
outsb
xlat
jnp
fldl
xchg
sub
loopne
inc
hlt
add
jmp
sub
bnd
pop
jmp
stos
inc
pop
jmp
add
aad
push
inc
pop
adc
cmp
add
pop
lret
pop
aam
add
adc
adc
popa
mov
inc
in
pop
add
jle
and
mov
jmp
lcall
mov
and
jmp
add
pop
call
jb
sub
in
filds
rcr
clc
adc
idiv
push
inc
mov
push
insb
pop
mov
iret
sarl
mov
add
mov
jb
pop
cmpsb
test
fldcw
rolb
movsl
mov
insl
xchg
rol
sub
cmp
push
leave
das
pop
add
outsl
jnp
jne
in
mov
pop
pop
add
roll
repnz
sahf
outsb
pusha
cs
cmp
sub
mov
xor
mov
xor
stc
sarb
or
and
inc
outsb
fstp
jge
out
and
and
dec
roll
incl
pop
push
call
and
adc
inc
and
les
and
push
push
or
insb
test
sti
jnp
mov
out
ret
mov
in
mov
add
cld
out
jg
popf
test
je
push
dec
ret
stc
mov
adc
je
hlt
pop
or
or
cmp
rclb
push
fcoms
xorl
aam
push
hlt
in
xlat
push
pop
jb
ret
loopne
mov
mov
dec
loope
mov
pop
and
adc
loopne
shll
cmp
push
pop
xchg
cmp
rorb
lea
addr16
pop
jmp
or
ja
les
hlt
and
inc
loope
inc
stos
push
enter
pop
pop
loope
test
dec
enter
mov
jmp
sub
jmp
add
hlt
xlat
jnp
flds
or
ftst
or
mov
inc
sub
mov
jg
xchg
lret
jge
mov
jg
bnd
inc
rolb
inc
in
dec
incl
jmp
xchg
outsl
jmp
xchg
aad
cmc
iret
cltd
outsl
out
lcall
shlb
push
test
cmp
lret
add
aad
cmpsb
adc
sarb
and
das
test
add
push
cmp
mov
in
push
adcl
xchg
sub
add
fnstenv
popf
and
push
mov
pop
pushl
sar
call
pop
sub
hlt
adc
test
repz
call
test
adc
adc
cmp
divl
jo
into
jb
aas
cmp
dec
push
jge
push
pop
xchg
in
pop
push
add
imul
into
iret
sub
push
add
out
mov
dec
stc
inc
or
or
cmp
add
fadds
add
imul
inc
shrb
sti
mov
jle
jne
jle
mov
pushl
jb
inc
mov
xchg
clc
shl
movb
lea
and
add
adc
ret
je
cmp
test
int
sti
xchg
or
call
mov
pusha
add
fldcw
ficompl
xchg
add
out
xor
fs
lock
add
pop
outsb
into
scas
dec
test
rcrb
mov
xchg
add
int3
pop
fwait
mov
aas
in
sub
jmp
pop
jmp
add
out
sub
jns
outsl
lret
xchg
mov
push
test
inc
call
mov
testb
push
repz
out
sub
jns
gs
lea
std
mov
lock
inc
lock
inc
jno
aad
sti
jle
add
push
movl
sub
mov
inc
fwait
cmc
cmp
jb
cld
test
sbb
add
or
pop
add
outsl
les
jmp
mov
loope
cmp
dec
fisubs
les
push
enter
rcrb
inc
adc
jmp
or
cs
je
enter
push
ds
fucom
inc
and
in
and
out
or
sbb
loopne
add
pop
xchg
cli
jne
jmp
sar
loope
or
sbb
add
jecxz
and
js
decl
inc
and
test
movsl
add
xchg
test
jp
mov
ret
pop
andl
pop
js
fisubs
mov
sahf
add
cmpsb
and
sbb
add
std
loopne
add
jmp
je
xchg
pop
bound
shr
jle
jns
mov
fmuls
add
xchg
cld
aas
or
push
push
aas
dec
out
sbb
decl
mov
mov
addl
sbb
in
mov
ja
test
test
aas
clc
lods
mov
add
les
lock
in
bound
faddl
lret
incb
inc
sbb
inc
hlt
dec
jne
xchg
cltd
sbbb
jmp
cmp
pop
jmp
call
add
pop
jmp
fxch
ficoms
add
pop
insb
mov
les
fxch
lods
and
pop
sub
and
jmp
fstps
pop
outsb
ret
or
into
or
leave
cltd
jne
jg
insw
rol
jmp
cld
jmp
pop
jmp
cs
cmpsl
sbb
ljmp
ret
test
sbb
cmc
mov
xchg
cmp
mov
mov
and
sub
jle
lret
cmovno
hlt
leave
ffree
push
jne
lods
fwait
out
fs
out
repz
jb
mov
jno
insl
xchg
dec
fs
out
adc
cli
xchg
jmp
inc
paddb
lret
adc
xchg
mov
dec
in
dec
pop
mov
pop
je
dec
xor
xchg
cmp
into
test
add
xchg
pop
xorb
scas
adc
push
fxch
bound
add
gs
add
sbb
rorb
jmp
pop
scas
pop
lds
sbb
test
or
mov
dec
mov
mov
test
or
mov
orl
inc
clc
add
pop
add
adc
pop
and
je
out
lock
mov
add
add
lds
jmp
inc
call
clc
aas
lock
inc
cld
mov
mov
add
inc
fcompl
cmpl
pop
xchg
and
inc
push
xor
rolb
jns
loop
add
test
punpckhbw
sar
test
inc
aam
out
push
aad
enter
fldcw
xchg
scas
pop
cmpsb
cmp
stos
push
subl
gs
push
inc
in
adc
jg
arpl
rorl
pop
in
pop
loop
gs
jmp
add
in
mov
add
pop
jae
les
andb
jae
jne
les
ljmp
cwtl
add
sbb
test
test
rcr
aaa
dec
aad
test
add
pop
mov
xor
sbb
xor
mov
enter
mov
aas
dec
loopne
iret
adc
jb
les
pop
addr16
mov
jmp
imul
jmp
fstl
mov
add
fmul
out
roll
jno
jno
pop
xchg
inc
pop
add
inc
sbb
sbbb
lea
or
aam
dec
inc
jmp
pop
call
mov
jns
pop
call
int3
pop
mov
jge
mov
or
stc
inc
cmp
lahf
add
test
inc
adc
fstl
jo
jae
add
xchg
dec
pushl
push
inc
pop
fcmovb
or
jle
sub
xchg
and
sahf
sub
flds
and
mov
add
shlb
bound
xchg
jge
push
sub
pushl
jne
pop
adc
call
inc
mov
call
push
inc
push
mov
pusha
mov
cli
cmp
out
jne
fsin
stos
mov
hlt
les
jmp
test
jmp
call
cmp
into
call
inc
popf
pop
or
loopne
adc
inc
mov
mov
ror
add
cs
or
cld
lret
test
sbb
add
push
test
mov
adc
inc
cli
inc
je
add
pop
cmp
lcall
in
scas
call
repz
adc
push
jp
mov
pop
shll
or
dec
push
fldt
mov
mov
shll
pop
mov
fsub
dec
mov
lretw
mov
jmp
rclb
rcll
dec
adc
pop
mov
mov
xchg
data16
mov
push
cwtl
mov
das
clc
gs
out
add
loopne
mov
pop
xchg
mov
xchg
out
adcb
xchg
pop
ret
jp
or
sub
jecxz
shll
or
cld
test
cld
and
sub
sub
add
lret
nop
push
out
imul
jbe
dec
inc
je
push
sbb
icebp
repz
push
insl
or
in
clc
fsts
out
imul
ret
cld
int
leave
jle
pop
add
dec
popa
pop
stos
fcomps
add
mov
inc
cltd
add
add
push
pop
pop
mov
cltd
out
mov
call
fistl
push
lds
mov
push
out
addl
mov
pop
adc
or
jae
push
in
push
jnp
sub
test
push
je
adc
add
sti
xor
cltd
push
mov
jnp
push
push
lea
xor
divl
adc
inc
popf
pop
bound
les
or
orb
mov
ret
jne
jo
leave
xchg
push
aas
pop
xor
jne
clc
lret
xchg
stc
and
testl
std
dec
aas
rolb
les
incl
jmp
cmp
aaa
shr
inc
dec
lret
sti
add
push
sub
inc
add
push
jbe
dec
je
clc
jnp
inc
add
add
mov
paddw
add
pop
lcall
loopne
ficompl
or
mov
pop
insb
mov
enter
adc
flds
add
mov
mov
into
aas
test
add
call
imul
add
push
pop
inc
inc
icebp
rcrl
les
test
add
repz
jmp
int
or
cld
fildl
mov
and
adc
add
fisubs
xor
add
popf
xor
les
xchg
addb
mov
push
ljmp
les
mov
add
add
push
data16
mov
and
adcb
pop
pop
ljmp
clc
gs
aas
or
sbb
sti
sbb
mov
mov
add
inc
arpl
cmp
gs
mov
sub
sbb
out
and
mov
gs
pop
mov
add
bound
jne
dec
shr
pushl
push
notl
add
xor
clc
pop
cli
test
adc
in
idiv
lock
je
push
xchg
je
jns
call
pop
scas
popa
add
xor
out
jne
dec
shr
pushl
data16
cmpsb
mov
je
xchg
rol
push
pushl
cwtl
pop
decl
mov
push
add
das
xchg
cmc
int
test
call
jg
stc
push
or
and
iret
dec
sub
iret
out
aaa
or
or
lock
js
mov
jp
imul
adc
jbe
push
insb
sub
out
mov
lds
hlt
inc
and
jno
push
xchg
in
cmpsb
xchg
mov
aas
add
hlt
leave
sti
xchg
imul
rorl
xor
pop
mov
jmp
jb
sub
addr16
pop
dec
outsb
add
cmc
pop
fcomps
xor
call
sub
add
lcall
dec
test
push
adc
idivb
cmp
xchg
shr
gs
out
cld
xchg
xchg
add
fs
push
add
mov
mov
or
loop
xchg
xor
cmp
frstor
adc
dec
add
push
outsb
in
fs
jmp
lock
add
loope
daa
cltd
das
shl
mov
xlat
or
notb
push
pop
add
pop
mov
sbb
fildl
pop
test
add
clc
dec
lahf
rclb
add
ffreep
lahf
insb
loopne
xlat
inc
insl
and
add
add
in
out
xchg
aaa
sbb
push
enter
sbb
xchg
xchg
js
and
adc
insl
xchg
and
repnz
adc
push
subl
dec
mov
xor
lret
insl
test
ret
popa
dec
push
add
xchg
and
add
cs
xor
out
lea
sti
jp
je
add
push
adc
mov
ficoms
enter
jecxz
lock
ja
fs
sub
pop
or
fmull
jmp
cltd
loopne
sti
add
push
fstps
add
cld
sbbl
add
add
cwtl
sub
jns
xlat
jg
bound
mov
lock
add
testl
clc
out
mov
decl
repz
jo
dec
cwtl
sbb
xchg
push
jne
icebp
dec
hlt
cli
inc
lock
xchg
jbe
scas
xor
dec
arpl
push
mov
add
inc
dec
hlt
aas
pop
pop
clc
test
cmp
das
jns
lea
ret
add
outsb
cmp
in
enter
inc
push
mov
sub
push
mov
fidivrs
pushaw
pushl
test
clc
out
fdivrl
rcrb
cmp
sbb
aad
inc
and
mov
jp
push
inc
inc
sbbb
lret
iret
fdivs
inc
push
and
jp
addr16
lret
mov
dec
xlat
xor
sub
jp
xlat
add
adc
mul
and
xchg
dec
or
sbb
aaa
stos
stc
jecxz
jmp
inc
popa
and
mov
mov
dec
xchg
adcl
sti
pop
aaa
stos
push
jg
stos
mov
cmpsb
jmp
add
jecxz
imul
push
mov
popf
es
inc
and
or
and
dec
xchg
adcl
sub
xchg
push
cmpsb
mov
fadd
cmp
subb
test
imul
pop
sbb
je
inc
popf
add
xor
scas
jp
cli
mov
testl
xchg
orl
add
add
pop
add
push
or
cmp
mov
jne
dec
shrb
inc
add
add
ret
add
jecxz
mov
mov
loope
je
xchg
inc
clc
xor
inc
aam
cld
mov
xor
and
les
dec
mov
xchg
pop
add
jo
enter
push
or
hlt
scas
or
inc
push
mov
out
inc
pop
add
sarb
push
mov
jnp
or
add
les
or
in
fdiv
mov
stc
rcrl
stos
jb
ljmp
cmp
ret
cmp
mov
aaa
xchg
mov
jno
or
jp
js
hlt
mov
xchg
xchg
jmp
dec
je
adc
ja
mov
fldl
stos
popa
fdivrl
mov
loop
les
decl
out
xchg
pop
push
mov
mov
and
cmp
sub
pop
test
xchg
add
push
push
jmp
mov
xor
xor
std
pop
mov
arpl
push
jmp
stos
add
pop
cmp
dec
lcall
shrl
rclb
js
push
mov
sub
testb
xlat
or
bound
jne
arpl
dec
std
repz
pop
mov
ret
rcl
sti
dec
adc
inc
mov
and
mov
push
arpl
jno
mov
jge
or
das
jle
aas
add
pusha
or
or
push
sbbb
xchg
dec
ret
fwait
add
push
cmp
adcl
clc
or
push
pop
xorl
add
sub
dec
jnp
pop
dec
scas
add
shlb
add
call
inc
and
lods
push
lea
int3
jne
add
call
imul
repz
das
and
roll
ljmp
push
add
test
lods
divl
clc
inc
lock
inc
cmp
sti
sahf
scas
sub
pushl
cltd
in
loop
add
cmpl
inc
cmp
inc
or
icebp
dec
sti
sub
add
imul
cltd
xchg
add
mov
dec
xchg
aas
lcall
or
sbb
mov
incl
xor
cs
lea
les
xchg
pop
mov
sbb
fcmovbe
ljmp
xor
cmp
das
sbb
add
ljmp
xor
cmp
jo
push
das
mov
mov
dec
ljmp
push
icebp
mov
pop
xlat
cmp
aad
aaa
int
test
push
push
sub
jge
das
xchg
cmp
sbb
inc
sti
cwtl
or
mov
xchg
fs
mov
repz
mov
add
or
push
add
popa
xchg
in
fs
adc
pop
jmp
insb
and
fiaddl
sbb
pop
pop
add
pop
dec
in
push
sub
das
jg
aam
jne
leave
cmpsl
add
js
daa
mov
stos
aad
xor
shlb
add
push
es
ja
in
addb
sti
add
dec
or
jge
pop
jne
mov
lret
mov
mov
jecxz
or
or
and
loopne
je
outsb
push
test
sbb
mov
scas
pop
jbe
jne
ficomps
inc
cmp
lcall
hlt
loope
sbb
adc
xchg
dec
or
cmp
pop
add
mov
in
int3
jecxz
or
test
xchg
add
ret
xchg
jmp
call
sti
dec
jle
push
mov
mov
jl
addl
popa
xchg
pop
jg
mov
adc
add
enter
bound
hlt
xchg
cmp
inc
or
sbb
push
lcall
add
cmp
inc
call
icebp
mov
add
cld
cli
les
adc
mov
ret
call
outsb
mov
jne
and
les
inc
mov
cmp
push
cmpsb
xchg
lods
lock
mov
sub
inc
dec
push
lahf
pop
jle
dec
sahf
gs
stc
bound
dec
and
test
adc
in
mov
addr16
mov
dec
sub
mov
mov
mov
sbb
hlt
subb
lock
pop
pop
enter
incb
jmp
sub
cltd
jecxz
push
imul
sub
in
movsl
pop
mov
sahf
jle
out
insb
jne
push
mov
push
call
add
adc
iret
filds
movsl
or
ffreep
js
sti
pop
xor
push
rorb
pop
dec
inc
cs
push
jb
xlat
sti
ss
data16
mov
pop
sti
cld
imul
push
push
test
std
andb
push
je
xlat
ret
pop
call
pusha
pop
mov
mov
push
adc
pusha
xchg
add
add
add
add
add
sbb
jnp
mov
pop
je
jl
shrb
mov
cs
pop
mov
sbb
push
pop
pop
pop
test
js
add
pop
add
push
dec
or
sub
add
xchg
and
push
and
adc
test
add
add
pop
jne
popf
push
add
inc
les
dec
xchg
shlb
rolb
push
data16
xchg
addl
lods
jne
in
mov
sub
test
adc
push
dec
test
decl
add
inc
rorb
lahf
call
inc
subl
or
adc
insl
xchg
mov
add
mov
mov
out
adc
adc
push
scas
cmp
pop
jmp
inc
dec
cmpsl
fisttpll
shl
or
aam
push
dec
daa
jmp
sbb
sbb
push
adc
cmpsb
cli
or
pop
jmp
das
lods
loopne
or
fimull
add
jbe
push
jg
sub
lock
pop
lds
imul
pand
sbb
in
les
mov
outsb
sbb
test
fmul
adc
lods
pop
stos
sti
aam
outsb
inc
jmp
test
cmp
push
xchg
dec
inc
in
into
xchg
pop
jne
dec
dec
or
mov
add
int
xchg
jp
dec
frstor
push
dec
inc
jbe
push
out
inc
dec
push
testb
xor
mul
lret
dec
xor
mov
mov
ret
sbb
lahf
dec
mov
pop
test
jb
sti
test
jb
clc
add
inc
hlt
xchg
lcall
jmp
push
out
inc
add
push
mov
xorb
pop
xchg
sub
or
inc
add
add
cmpsb
sbb
movsl
pop
cli
jae
push
mov
adc
idiv
sbb
rclb
sub
ljmp
mov
nop
or
mov
inc
nop
adc
mov
xchg
loopne
adc
idiv
mov
call
add
les
dec
int3
mov
or
mov
sbb
idivl
aad
jmp
test
xchg
cli
sti
xor
loopne
mov
dec
dec
cmp
dec
sbb
mov
dec
mov
pop
rorl
jae
add
xchg
mov
call
sub
shrl
add
ret
xor
les
mov
lret
pop
inc
xchg
mov
cli
add
stc
xchg
repz
add
orb
aam
test
test
sbb
add
dec
bound
xchg
out
clc
pop
and
mov
movsl
or
dec
int3
inc
fdivrl
push
out
jecxz
inc
jg
mov
out
test
les
dec
out
add
sbb
shrb
ja
dec
int3
inc
jle
push
out
imul
cmp
fldt
or
movl
repnz
loope
xchg
cmpsl
leave
sub
jmp
enter
jge
sti
je
fincstp
add
movsb
add
or
jo
inc
test
mov
ja
call
add
adc
xchg
hlt
jmp
pop
add
inc
cmp
or
movb
je
add
dec
and
jo
inc
lea
sti
jbe
push
jne
add
mov
aad
dec
push
push
cmp
insl
pop
add
js
adc
jne
inc
mov
add
pop
dec
lea
stos
lea
jmp
sbb
xchg
scas
rcll
cmpsl
and
add
pop
outsb
idiv
adc
rorb
xlat
arpl
jb
xor
loopne
and
xor
in
mov
adc
scas
roll
cltd
mov
inc
sub
add
add
inc
cmp
test
notl
mov
aam
pushf
test
dec
sldt
add
add
pop
jge
enter
cmp
aaa
add
mov
jl
nop
push
mov
iret
subb
filds
add
pop
out
cmpsb
divl
mov
test
sbb
adc
mov
dec
lods
or
mov
mov
push
aas
add
xchg
jge
mov
inc
in
out
ret
mov
cli
mov
jl
add
mov
bound
mov
add
fstpl
addr16
pop
dec
dec
xor
mov
sub
scas
add
call
decl
jl
cs
inc
clc
loop
addr16
cmp
insb
lds
add
out
cmp
cmp
cli
xlat
inc
add
fisubl
stos
mov
and
and
hlt
fdiv
dec
aam
mov
sbb
adc
sub
lcall
inc
movb
testb
sbb
in
lahf
jb
loopne
xchg
lods
das
popf
lea
push
dec
add
test
pop
sti
je
aam
push
xor
cmp
test
test
add
pushf
pop
sti
hlt
das
pop
inc
jmp
rcr
lods
pop
aaa
cld
scas
push
jne
sbb
movsl
xlat
lcall
dec
out
lcall
xchg
or
inc
addl
push
rclb
push
mov
aas
pop
adc
dec
dec
call
repz
movsl
notl
mov
or
cwtl
lcall
pop
movsl
bound
xchg
or
mov
je
add
adc
sub
std
adc
in
xchg
add
cwtl
imul
sub
or
adc
pop
dec
push
pop
dec
divb
pop
pushf
dec
xor
pop
iret
xor
cs
push
push
mov
cli
fxch
adc
mov
jp
nop
lods
lock
add
push
sti
xchg
mov
adc
mov
dec
cmp
push
scas
je
add
jne
pop
xor
jp
adc
mov
decb
inc
xchg
pop
or
repz
sbb
xchg
stos
adc
jne
sbb
clc
mov
add
lds
xchg
jecxz
clc
stos
sti
cmp
push
scas
outsl
rcll
pop
cmp
add
aam
test
inc
push
jmp
aaa
popl
and
into
jecxz
pop
iret
pop
lods
fnstenv
fwait
lods
mov
flds
lods
fs
and
jnp
sbb
rorb
mov
lcall
imul
test
dec
cmpsb
or
sub
xor
stos
add
xor
dec
aas
jmp
pop
pop
xchg
stos
mov
inc
push
sub
inc
jle
loopne
loope
pop
xchg
mov
push
cmpsl
pop
cwtl
jg
pop
lods
call
jb
push
ret
aas
or
ret
lcall
dec
add
in
fbstp
add
int3
pop
adc
cmp
jnp
je
push
mov
dec
push
jmp
loop
add
mov
shr
add
stc
cmp
push
bound
adc
pop
push
ret
push
mov
add
add
stos
cmpl
das
call
jmp
dec
jg
sub
adc
out
test
or
jle
sub
shlb
or
push
adc
addl
incb
movb
in
repz
pop
hlt
adc
push
fwait
add
xchg
mov
lock
add
xchg
test
sub
fsub
lock
ret
rol
add
add
rcr
push
inc
les
das
add
cmp
add
enter
cmp
add
add
rorl
inc
les
add
movsl
sti
out
pop
icebp
incb
repnz
loope
aaa
inc
test
dec
je
sbb
xchg
test
dec
inc
aas
add
xor
mov
hlt
mul
lret
in
cmpsl
adc
xchg
jno
add
pop
in
mov
cltd
jmp
loopne
into
push
pushf
jo
ret
sbb
add
or
push
dec
imul
dec
sbb
cs
mov
test
sarl
fldl
movsb
cmpsl
sti
imul
stos
fwait
pop
in
push
dec
cmpsl
loope
shlb
cmp
into
lret
test
fsubp
aas
les
xchg
fistps
das
js
stos
call
pop
jne
popa
push
test
pop
add
xchg
sti
fiadds
adc
mov
push
sti
faddl
pop
sti
aas
mov
testl
outsl
inc
jmp
add
loope
rolb
sub
flds
pop
pop
mov
dec
push
sti
fdivl
aas
adc
scas
movsl
mov
dec
push
lock
movsl
or
add
lret
sub
insl
or
arpl
adc
pop
notl
pushw
test
jno
xor
mov
jae
divl
cld
insl
adc
jne
incl
inc
notb
push
jae
add
and
ret
inc
notb
pop
divl
sar
mov
push
inc
add
rcl
insl
or
cli
push
adc
add
or
jo
divl
test
adc
or
push
mov
pop
jbe
inc
xor
incl
lahf
add
xor
pavgw
mov
jecxz
xchg
push
test
loop
les
decl
inc
dec
inc
insl
jl
xor
out
mov
fdivp
mov
loop
lea
push
inc
mov
mov
pop
jb
jl
push
push
testl
add
loopne
enter
cli
mov
cmp
push
loopne
add
jbe
push
pop
lods
mov
rcrl
jg
aas
or
incl
les
enter
mov
fisubl
iret
arpl
mov
lcall
int3
inc
stos
movsb
hlt
mov
cmp
jae
shl
xchg
sbb
mov
adc
push
add
mov
repnz
add
inc
shrl
adc
insb
ds
stos
add
iret
test
bound
mov
pusha
xlat
mov
add
add
adc
mov
insb
mov
push
fs
mov
call
push
and
jmp
mov
aad
xor
data16
fadds
pop
call
xchg
orb
aaa
lret
adc
lea
in
leave
lods
stos
callw
mov
pop
pop
push
pop
in
adc
ret
xchg
add
fmuls
add
insl
pop
not
mov
pop
adc
test
je
xchg
xchg
and
es
mov
pop
pop
jne
outsb
jp
adc
popa
mov
inc
push
divl
add
in
pop
add
pop
inc
add
rorb
scas
xchg
add
popf
cld
xor
scas
xchg
add
pop
insl
add
insl
testl
inc
bound
add
xor
mov
pop
out
pop
ret
sbb
jmp
add
inc
xor
push
inc
es
xchg
push
inc
les
push
mov
mov
push
test
notb
sti
mov
lea
dec
mov
orl
call
dec
scas
sbb
mov
xor
add
push
add
dec
ja
out
in
inc
sti
les
rcll
or
inc
inc
sti
repz
mov
or
pop
lcall
sbb
pop
lret
stos
ficompl
push
sub
loope
cltd
push
sub
mov
test
hlt
mov
cmp
jmp
push
les
stos
add
mov
dec
xchg
stc
sub
les
xor
xor
scas
and
push
int3
mov
mov
cmp
jmp
hlt
ret
pop
fs
lock
jae
jmp
jbe
xor
mov
stc
inc
add
pop
add
cmp
inc
inc
pusha
mov
jl
pop
sti
testl
movsb
clc
xchg
sub
dec
repz
xchg
xor
cltd
push
xchg
in
and
in
xchg
out
xchg
in
arpl
push
call
inc
addr16
jmp
xor
in
cmp
push
call
aas
addr16
jmp
mov
pop
add
sub
repnz
add
mov
add
xor
push
mov
adc
sub
xchg
add
roll
mov
add
in
xchg
je
cwtl
pop
add
loopne
xor
shr
add
push
cltd
sbbl
xlat
mov
and
xchg
shll
sbb
xchg
pop
sarl
adc
sbb
push
mov
add
push
test
les
xchg
inc
xor
sub
sti
dec
arpl
xchg
lret
cmpsb
mov
test
xchg
cmp
cmpsl
out
jl
xchg
test
and
mov
inc
adc
cmc
loop
add
mov
test
mov
js
das
lea
pop
mov
fcmovne
cmp
lds
xor
add
inc
jle
sbb
dec
adc
mov
in
cltd
or
or
popa
inc
lods
and
loopne
lahf
outsl
cmp
popf
icebp
data16
mov
cmp
dec
xor
inc
lret
mov
add
cmp
sti
cs
mov
les
out
fwait
stos
pop
popl
pushf
pop
jmp
sti
add
lahf
negl
cmp
arpl
lcall
xchg
icebp
call
popf
sbb
daa
sub
adc
stos
ret
dec
mov
pop
frstor
mov
xchg
mov
pop
mov
loopne
inc
enter
mov
jb
sub
jmpw
mov
xor
clc
ret
add
imul
mov
or
add
les
mov
mov
sahf
and
or
and
rorb
repz
sahf
and
cld
pushf
and
mov
inc
sbb
fucomip
push
imul
imul
mov
inc
push
outsl
addl
pop
fcoml
or
push
fstpt
incl
pop
jmp
cmpb
mov
inc
stc
inc
mov
cmp
imul
xchg
push
or
pop
int3
cli
icebp
rorb
adc
outsb
dec
call
pusha
sub
imul
add
jbe
xor
fwait
call
cmp
imul
lahf
aam
in
xor
push
sbb
aaa
sti
stos
and
add
aad
jnp
adc
fildl
cli
jb
cmp
fdiv
xor
jne
inc
xchg
sti
icebp
std
icebp
shl
lods
sub
xchg
out
repz
xchg
lods
xchg
cmp
fdivl
icebp
cli
cltd
jns
out
sbb
stos
syscall
shll
call
out
inc
aad
inc
orl
test
test
shlb
add
icebp
mov
pop
je
mov
ss
aam
push
repz
ret
xor
sahf
push
inc
repnz
sarb
xchg
xor
mov
lods
xchg
cltd
setne
lret
and
cs
inc
push
add
mov
jg
cmp
das
mov
xor
add
push
insw
roll
add
add
pop
jmp
or
call
pop
out
imul
xchg
cld
cwtl
fisttps
pop
fistpll
call
leave
mov
add
dec
fucomip
mov
shlb
aad
xor
insl
xchg
push
insb
dec
scas
sub
int3
mov
sbb
xor
insl
xchg
add
add
mov
popa
pop
scas
and
push
divl
jne
cmp
adc
xchg
sub
lea
xchg
or
ret
gs
push
jae
je
dec
scas
or
lret
adc
rorl
fiaddl
adc
pop
test
adc
sbb
pop
test
lret
idiv
sbb
idiv
or
cltd
or
add
sbb
mov
mov
xor
test
shlb
cmp
add
jnp
and
shlb
or
mov
add
push
xchg
add
add
or
mov
sub
push
mov
adc
movl
call
subl
inc
adc
add
mov
test
das
push
cli
scas
xor
hlt
xchg
push
cli
add
hlt
mov
add
inc
decl
jae
out
pop
rolb
adc
repnz
or
ss
push
dec
push
repz
in
inc
rolb
in
push
add
xor
xchg
add
lret
mov
out
pop
sbb
inc
inc
mov
add
jmp
adc
aam
mov
fbld
xchg
je
lcall
pusha
popw
enter
je
xor
push
jmp
sub
xor
loopne
xor
iret
aad
jmp
add
sbb
std
cmc
mov
cmpsl
dec
sub
sub
aas
cmpsl
add
jae
data16
sub
les
fnsave
ja
add
sbb
mov
hlt
pop
dec
inc
jmp
and
push
cwtl
xchg
lea
add
addb
ss
jne
ds
cld
pusha
mov
dec
inc
jmp
inc
and
rolb
jmp
sbb
xchg
les
add
add
dec
sti
call
jb
pop
int
jbe
jecxz
insl
insb
popa
jg
sub
sti
fildll
cmp
cmp
xorb
out
jne
je
mov
pop
push
sub
fcmovb
call
out
jae
data16
mov
int3
testb
jae
cs
jne
orb
xchg
int3
xor
adcb
push
or
call
clc
call
mulb
pop
push
out
mov
mov
bound
lods
lret
adc
imul
sbb
ss
cmp
mov
movsb
hlt
inc
xor
jnp
lea
dec
sbbb
outsb
inc
cmp
les
stc
dec
mov
call
aas
pop
adc
sbb
sub
addl
andb
push
insl
call
add
inc
cmp
notl
add
shl
outsl
pop
jge
hlt
cmp
imul
jb
mov
mov
mov
aaa
xchg
testl
cmp
pop
in
add
fstpl
adc
inc
xor
das
aam
add
ret
lds
arpl
repz
fbld
inc
les
sbb
repnz
xor
mov
xchg
scas
cs
push
cwtl
push
cmp
jecxz
and
fadds
sbb
xchg
inc
xchg
jg
out
les
outsl
fsubrl
mov
pop
je
dec
jp,pn
out
fcos
stos
add
and
push
inc
aas
or
pop
dec
bound
xor
inc
cmc
xchg
mov
outsl
mov
sbb
and
push
push
pop
loope
sbb
ljmp
push
std
test
xor
out
push
mov
fimuls
cmp
xor
icebp
push
xchg
aam
test
sub
mov
push
xor
scas
add
xor
test
mov
sbb
mov
bound
fcom
repz
mov
lret
xor
adc
imul
push
pop
pop
jnp
lret
leave
scas
sub
jae
push
shl
xor
lods
test
mov
jmp
jne
and
cmc
add
shl
es
stos
jmp
jno
sub
push
or
insl
push
add
lock
mov
idiv
push
fcomip
je
fisttpl
push
add
mov
add
les
aaa
adc
xor
dec
es
gs
dec
mov
lcall
mov
scas
xor
incb
add
xchg
rorb
push
lret
mov
bound
push
jnp
stc
pop
mov
incl
push
iret
adc
jle
stos
test
pop
xchg
add
sbb
mov
sbb
out
add
pop
fmuls
and
cld
xchg
lret
lret
mov
jl
les
jb
inc
sbb
add
pop
and
add
add
orl
dec
test
orb
call
xor
movsb
in
fwait
sahf
pop
call
cld
mov
mov
rcrb
dec
inc
mov
push
in
dec
ljmp
pop
cmpsl
cld
xchg
mov
sbb
add
xchg
add
pop
jg
push
pop
xchg
and
add
add
das
test
sub
inc
loope
jnp
and
pop
add
and
test
test
cmc
int3
pop
add
add
push
sti
stc
pop
inc
jmp
roll
push
das
sub
push
inc
add
inc
cwtl
cld
cmp
in
cmpsb
mov
add
mov
outsb
add
call
push
ljmp
jge
adc
inc
mov
add
mov
mov
incl
dec
cld
inc
mov
inc
add
inc
push
call
cmpsb
push
or
andb
pop
outsb
lea
insl
addl
das
call
push
mov
imul
fisttpl
mov
add
sahf
mov
pop
mov
jnp
mov
dec
or
push
test
iret
adc
cmpl
out
pop
das
push
jnp
adc
add
add
push
jnp
dec
pusha
jge
loop
inc
mov
mov
inc
nop
stos
stos
ds
mov
add
mull
mov
jp
fs
pop
mov
sub
sbb
push
mov
sbbl
xchg
adc
xchg
push
and
or
and
dec
mov
pusha
inc
loopne
and
cmp
xor
shl
sub
sti
mov
xor
sti
push
mov
sbb
xlat
and
add
add
fisttpl
mov
mov
jle
push
sub
stos
lahf
sub
les
movsb
lahf
pop
daa
xor
inc
popf
or
add
pop
jmp
jp
pop
adc
or
daa
add
xor
xor
and
or
mov
ret
sub
ret
cli
mov
add
test
call
mov
add
dec
sar
dec
mov
jbe
push
xchg
and
push
jmp
sbb
nop
xchg
adc
movsl
gs
enter
mov
out
sub
call
push
dec
and
dec
and
add
ret
pop
mov
lods
add
add
jo
add
sbb
out
xor
int
pop
mov
cmpsl
adc
jg
sub
add
inc
add
cltd
cli
lds
sti
ret
rorb
pop
sub
outsb
out
pop
cmp
pop
imul
push
js
and
ljmpw
push
repnz
mov
fstpl
mov
data16
add
add
data16
cli
jno
push
push
mov
push
mov
sti
ret
xchg
add
jmp
test
addb
repnz
adc
ret
int3
repnz
or
out
xchg
out
lds
aas
hlt
dec
sti
cs
incl
les
sub
gs
xlat
jbe
add
mov
adc
cmp
jmp
cmp
hlt
testb
stc
repnz
pop
sub
sbb
add
ja
sti
xchg
mov
xor
aam
pop
lds
cmp
cli
je
jo
mov
lcall
push
push
mov
cmp
cli
xchg
mov
jb
mov
push
mov
test
loope
je
pusha
sub
iret
xchg
les
push
mov
cmp
cli
hlt
mov
xchg
cmp
push
mov
cmp
cli
adc
jo
int3
push
add
dec
xchg
or
lret
loope
into
or
cltd
dec
or
xchg
push
pop
sbb
mov
push
jns
jl
add
xor
mov
jo
add
push
call
jo
push
xchg
push
mov
sbb
je
call
jg
ffree
xchg
mov
lcall
xchg
aas
add
cmp
add
adc
or
add
in
pop
add
je
or
add
pop
mov
xor
adc
jne
mov
jnp
test
sbb
sbb
or
and
add
fcomi
add
dec
mov
inc
inc
jnp
sub
mov
push
sbb
pop
and
add
push
add
pop
add
gs
inc
les
cwtl
inc
add
xor
cmp
mov
add
jl
cmp
push
pop
mov
add
dec
loopne
lods
cmp
sbb
add
shlb
or
jne
add
lds
add
movsb
dec
insl
add
arpl
add
lahf
jmp
and
or
add
les
or
add
insl
add
mov
pop
out
adc
lods
add
out
sti
xor
mov
pop
out
jmp
stos
pop
je
aam
mov
jmp
ljmp
out
jmp
pop
aaa
test
mov
or
loope
les
mov
xlat
repz
jp
jmp
movl
imul
out
mov
jmp
inc
out
adc
movb
cmp
pop
adc
pop
pop
jnp
aaa
and
adc
and
push
dec
sbb
jne
cmp
pop
sti
daa
mov
pop
push
cs
test
sub
nop
adc
push
sti
jl
mov
lahf
add
hlt
fildl
sub
jmp
mov
sti
into
dec
sbb
js
mov
push
sti
scas
lret
lret
rcrb
mov
andb
adc
jmp
int3
pop
sub
add
push
jne
mov
mov
call
cmpsb
or
popa
sbb
je
mov
std
stos
fildl
sbb
add
cmp
mov
pop
add
inc
clc
adc
push
push
xor
idiv
addb
je
fisttps
adcb
je
int
cld
int3
dec
scas
or
mov
push
inc
add
ret
cmp
ret
std
xchg
adc
repz
decb
xchg
pop
fimuls
add
xor
xchg
sti
mov
shrb
rorl
xchg
mov
sbb
in
or
dec
out
or
mov
cmp
mov
cli
mov
sub
sti
lds
incl
add
xchg
pop
jge
or
stc
mov
aam
rcrl
add
sti
test
clc
test
xor
inc
and
flds
icebp
mov
iret
sub
dec
rcll
dec
and
pusha
ficompl
pop
mov
cmpsb
mov
iret
fcoms
repz
ret
aad
clc
mov
mov
loope
xorl
sarl
pop
loope
iret
mov
dec
xchg
cmc
mov
push
jo
xchg
mov
dec
outsb
push
or
stc
add
or
cltd
add
pop
pop
inc
push
mov
cmpsl
adc
test
jmp
in
fnsave
jne
xor
hlt
ficompl
rcrl
daa
pusha
xchg
pop
jne
scas
jne
outsb
xchg
aam
ret
or
andb
aam
pop
jne
pop
cltd
sti
ds
aam
inc
jnp
mov
push
inc
inc
fwait
ljmp
add
cs
xchg
xlat
loope
jb
inc
bound
jg
mov
pop
mov
sbb
adc
mov
jmp
sbb
pop
xor
jne
out
incl
fstl
and
adc
roll
call
test
jne
outsl
imul
cmpsb
mov
pop
push
push
push
sahf
cli
dec
add
jecxz
mov
lcall
jmp
adc
lcall
call
mov
loope
je
xchg
mov
divl
test
mov
loop
or
lsl
inc
ds
jl
sti
mov
or
jl
inc
int3
std
je
in
and
enter
mov
mul
jnp
add
fxch
push
pop
cli
fimull
jp
add
ret
incb
int3
add
out
clc
sar
pop
pop
sbb
lret
aas
repz
js
and
pop
and
mov
mov
inc
sbb
pop
mov
sarl
xchg
jge
test
xor
add
in
jae
mov
add
stc
jecxz
test
call
or
stos
cmp
dec
xchg
icebp
or
call
incl
dec
jp
sbb
inc
adc
stc
pop
pop
jmp
add
jl
ret
call
loope
mov
jecxz
outsl
test
lock
repz
dec
sti
movsl
mov
pop
jmp
add
imul
call
mov
out
fnstsw
push
pop
xchg
les
shr
bound
xor
loop
or
push
mov
and
inc
sbb
sahf
lahf
inc
cli
xchg
lea
outsb
aam
add
rcrb
pop
fldl
insl
mov
add
dec
mov
add
dec
add
fisttps
jb
outsb
mov
xorb
roll
add
mov
add
or
fs
jge
enter
mov
xchg
xor
sbbl
rorb
mov
push
lea
lahf
mov
mov
decl
and
and
mov
bound
je
out
sub
std
sub
adc
pop
lcall
push
sbb
jl
lcall
nop
and
cmp
in
out
jle
jae
mov
aam
mov
and
rcrb
je
test
insb
adc
js
loope
incl
mov
cli
incl
inc
add
mov
mov
aas
lock
les
cli
or
sti
sti
stos
shlb
add
jo
mov
dec
push
addb
sbbb
les
adc
add
stos
adc
js
dec
sub
std
scas
xor
pop
xchg
in
movl
fs
clc
pop
data16
imul
xorl
icebp
jbe
ss
jmp
lcall
xlat
fildll
mov
pop
jmp
int3
mov
stos
sbbl
incl
xor
rolb
push
add
aaa
iret
dec
adc
insb
pop
pop
test
enter
jnp
cmp
add
cmp
jmp
sub
add
fildl
cli
add
pop
jne
jp
call
jb
out
repz
jge
mov
push
pop
jg
fists
sti
mov
in
sarl
add
inc
pcmpeqb
ds
xchg
xchg
psubsb
pop
add
jp
add
aad
fcmovnbe
bound
and
sti
add
and
fstp
cmp
inc
cs
rclb
shrb
push
and
jmp
fldl
test
sbb
adc
rcrb
push
es
push
lcall
fcmovnb
or
xchg
jne
pop
pop
call
test
push
jecxz
dec
sahf
test
stc
pop
mov
push
pop
jnp
and
push
jmp
mov
add
sub
loop
enter
push
push
stos
xchg
xchg
mov
out
les
pushl
loope
xor
jns
or
mov
cli
stc
inc
les
sub
add
aas
push
and
je
mov
add
les
aaa
add
shrl
adc
xor
add
add
inc
lock
aas
add
and
mov
sbb
and
sub
je
xor
ds
ret
fistpll
sar
xchg
roll
mov
jnp
mov
fists
out
js
lods
add
cli
ror
test
and
loope
out
stos
add
add
jmp
test
out
sbb
xor
pusha
lcall
xchg
aam
pop
adc
jns
adc
pop
sub
cmp
cld
imul
jmp
inc
enter
lods
pop
sub
ja
lcall
mov
jl
leave
ret
inc
ds
dec
xchg
sbb
lods
stos
bound
jmp
pop
push
inc
iret
mov
xor
orl
cld
das
popa
inc
jmp
insb
fsubr
push
adc
jmp
je
test
cmp
pop
call
insl
pop
fs
rcrb
push
pop
cmp
idivb
call
or
cli
hlt
xchg
pusha
inc
add
push
inc
add
in
pop
jle
in
pop
add
add
pusha
out
push
sti
mov
ss
xor
add
jne
hlt
cli
mov
ljmp
je
mov
sahf
add
mov
lea
adc
xchg
repz
push
test
icebp
push
xor
data16
popf
push
push
incl
clc
inc
add
xor
and
add
jbe
and
add
lcall
dec
sti
or
dec
adc
shl
mov
neg
cli
je
jnp
int3
sbb
incb
xor
add
add
je
xor
mov
and
dec
fwait
push
sti
adc
add
out
in
cli
jns
mov
dec
pop
mov
les
iret
or
cmp
and
add
push
adc
pop
dec
add
add
clc
lds
ljmp
arpl
js
lcall
mov
fdivs
push
cmpsl
push
pop
jo
push
jo
or
jmp
and
in
add
loopne
icebp
fadds
adc
lcall
stos
or
jo
xlat
sub
fildll
pop
dec
pop
jmp
xchg
pop
jmp
test
push
data16
movl
inc
jmp
sub
xchg
js
je
inc
add
cld
mov
je
sbb
pop
call
jb
repz
add
jb
jmpw
xchg
iret
cli
mov
mov
push
fldl
push
test
orb
das
adc
sti
mov
and
inc
jmp
xchg
repz
loop
sti
pop
push
lcall
subb
mov
es
push
cmpsb
adc
push
bound
adc
push
mov
xlat
add
cmpsb
dec
je
cmpsl
pop
test
or
divl
test
stc
arpl
and
mov
shrb
scas
adc
inc
mov
push
jne
xlat
xor
jns
inc
mov
sub
sbb
cmp
adc
lea
cmpb
add
push
in
div
es
in
je
pop
bound
stos
ja
cwtl
pop
push
sti
test
mov
or
cli
sbb
fdivl
insb
inc
xchg
ret
divb
sti
pushl
pusha
jg
sbb
push
sahf
pop
int3
push
mov
jp
add
cli
flds
adc
inc
inc
inc
add
fdivrs
sti
cmp
imul
jmp
mov
ja
add
add
lods
movsl
add
fisttpll
push
add
repnz
inc
call
cmp
mov
pop
into
aad
je
inc
cli
test
xor
aas
lahf
mov
pop
dec
lahf
lods
js
push
je
lret
pop
insb
les
test
test
sbb
or
movl
pop
movsl
xor
insb
jmp
pop
not
cltd
push
mul
test
inc
insb
add
pop
outsb
mov
jle
push
call
insb
lahf
aam
pop
xchg
js
pop
jno
shll
scas
outsl
jp
movsb
sti
jl
das
pop
loope
mov
dec
mov
or
inc
sbb
sar
scas
push
push
add
mov
add
idivb
mov
lea
je
imull
mov
add
add
orb
lods
outsl
subb
dec
add
or
fdivl
inc
jmp
fbld
jg
das
repz
add
sbb
divl
outsl
pop
sti
add
je
insb
mov
sti
test
sub
js
add
sbb
stc
jmp
jae
call
jp
jmp
add
gs
pop
or
call
xchg
pushf
push
pop
inc
mov
lock
xor
or
add
jae
and
sub
adc
pusha
fwait
jne
addr16
cmp
or
cmp
adc
cmp
cmc
add
idiv
cmp
sbb
add
mov
leave
mov
pusha
jno
adc
mov
into
arpl
mov
and
dec
imul
repz
movb
cmp
out
or
cmp
fcomi
add
repz
jecxz
cmp
repz
fdivs
or
add
les
pop
lahf
lods
test
repz
fcomi
ljmp
imul
add
pop
imul
pop
jmp
add
pop
test
push
inc
shr
les
push
repz
add
pop
aas
add
inc
shl
jb
xchg
test
comiss
loopne
mov
pop
xor
add
lahf
xchg
add
int3
inc
pop
push
lcall
mov
test
mov
jmp
movsb
or
repnz
imul
push
inc
mov
rorb
ja
add
jmp
sbb
add
or
jge
inc
or
inc
and
inc
icebp
scas
pop
jg
lds
dec
pop
add
and
aad
push
sub
fnstsw
mov
add
lock
leave
pop
sbb
sahf
push
xchg
jle
clc
jno
popa
sti
sub
fstpt
sarl
test
out
inc
adc
push
arpl
ret
add
cwtl
add
dec
xor
sahf
xchg
sub
movsb
ret
push
adc
push
dec
mov
adc
jge
add
pop
inc
and
dec
xlat
clc
xor
add
rorb
addb
add
add
sbb
jbe
jae
xlat
clc
cmp
push
icebp
add
orb
andb
cmpsl
scas
shr
loopne
insl
jno
setae
jg
inc
cli
fldcw
or
push
cltd
test
jno
add
ret
and
xchg
mov
das
lds
das
je
scas
cmc
jbe
aam
mov
or
inc
in
popa
sti
jnp
rol
stc
pop
xchg
incb
test
mov
mov
xor
push
aad
lock
shr
mov
mov
ret
das
shlb
pushl
pop
jg
pop
cmpb
in
or
push
psubq
out
inc
les
sti
out
pop
in
subb
js
push
pop
mov
lods
mov
add
push
outsb
mov
fldl
add
and
cmp
adc
adc
add
jns
dec
aaa
sub
mov
adc
adc
lds
out
add
push
aas
lods
ret
add
mov
xchg
js
push
jg
pop
jmp
sub
mov
add
sbb
cld
sbb
fld
cmpl
adc
xchg
mul
pop
mov
and
sub
xchg
in
inc
add
and
sti
jmp
inc
or
jns
shll
repz
inc
mov
jo
push
add
inc
jle
jmp
xor
cmc
dec
jle
jmp
or
xchg
aas
out
dec
sahf
hlt
jb
pop
aas
xchg
ret
xlat
inc
popf
push
mov
adc
add
sti
cli
pop
sbb
add
cmp
roll
cmp
jmp
pop
mov
lods
pop
jne
pop
jo
mov
and
and
add
leave
cmc
ljmp
push
fisubl
or
jo
or
shlb
adc
mov
xor
cmp
pusha
out
jae
movl
adc
sahf
xchg
or
loopne
test
loopne
mov
jo
loopne
sbbl
add
add
pop
js
jle
mov
mov
jb
jno
add
movsl
fmuls
mov
hlt
xchg
xor
sub
fstpl
add
mov
xchg
cld
add
pop
icebp
mov
sbb
dec
jmp
ror
or
push
aas
adc
cli
mov
mov
sub
pusha
jne
jp
sti
sbb
mov
pop
jo
sbb
and
inc
loope
sbb
sub
adc
test
jmp
repnz
add
std
outsl
rcl
sub
dec
iret
call
push
sti
adc
cmp
sar
lcall
enter
in
mov
sub
xchg
mov
ljmp
dec
sub
dec
xchg
rolb
fwait
xchg
loope
mov
shll
pusha
sub
push
xchg
stos
out
je
ljmp
add
push
add
pop
add
push
sbb
xchg
inc
push
sbb
pop
jae
jle
std
jnp
dec
xchg
or
ja
icebp
adc
add
pop
dec
xchg
pop
pop
jge
inc
sahf
hlt
add
push
jle
and
sti
xchg
dec
xchg
or
push
adc
or
rcrb
push
test
mov
push
xchg
sti
sub
test
add
in
sub
aad
add
ret
xchg
adc
cmp
inc
cld
jo
xor
cwtl
xchg
je
push
aam
call
xlat
test
and
push
inc
and
push
xor
lock
adc
and
add
add
xor
into
add
pushf
outsl
and
loop
add
push
divl
popa
sarb
jmp
mov
add
mov
add
shr
pop
les
leave
pop
mov
icebp
scas
addr16
mov
insb
sti
mov
test
xchg
icebp
decb
ficompl
je
jno
or
jle
shr
or
dec
test
ret
add
pushl
add
add
add
in
pop
int3
shrl
sti
xchg
inc
mov
mov
incl
stc
aas
sub
xlat
lock
jmp
xchg
mov
incb
mov
lea
mov
xchg
or
das
out
adc
jecxz
imul
stc
mov
and
lds
mov
add
and
jo
push
leave
mov
in
mov
mov
push
or
pop
mov
or
pop
cmp
mov
test
orl
daa
or
fisttpll
mov
sti
cwtl
pop
mov
add
xchg
mov
dec
inc
jmp
jp
inc
leave
ja
shrb
add
add
cmc
jae
mov
cmp
cmpsb
stos
dec
movaps
cmc
jae
lret
addb
rcrb
orb
pop
stc
subl
dec
pop
stos
add
dec
shrb
pop
push
bound
mov
stos
lock
mov
cs
xchg
mov
hlt
dec
add
je
push
xchg
into
test
lods
adc
rcl
jnp
das
sub
call
cmpsb
xchg
test
xchg
testl
add
add
xor
mov
mov
pop
mov
lcall
call
push
or
xchg
clc
xor
and
cmpl
xchg
xor
lea
lods
cmc
adc
add
lock
and
dec
call
les
push
pop
add
xchg
cli
fsubs
ljmp
sbb
add
push
sti
mov
add
mov
jle
je
hlt
ds
push
std
push
dec
int
in
test
scas
cs
jne
mov
pop
fcmovne
push
call
add
add
push
pop
imul
add
mov
dec
inc
jne
shrb
cli
mov
jp
idivl
mov
sti
adc
lcall
push
add
dec
imulb
fisubs
les
mov
sti
sbb
mov
outsb
push
pop
mov
pop
insb
psadbw
mov
xchg
cmc
sbb
dec
int
mov
pop
push
mov
adc
xchg
lea
mov
cmc
repz
dec
sub
push
sti
jmp
or
repz
mov
ret
mov
hlt
cmp
sbb
mov
jecxz
inc
jmp
or
das
sub
add
xchg
xor
jmp
hlt
roll
xchg
lock
fimuls
adc
enter
pop
xchg
push
mov
pop
add
push
cmpl
xor
adc
icebp
xor
push
icebp
jae
sub
lock
and
in
sub
add
call
gs
outsb
shrl
lea
adc
sarb
sbb
mov
cmp
outsb
sbb
mov
mov
call
loopne
in
push
mov
sub
fldpi
std
adc
inc
sub
add
lea
scas
dec
lcall
rclb
inc
in
loop
in
mov
push
inc
cld
jmp
or
or
push
xor
jae
jne
dec
inc
adc
and
push
add
icebp
sbb
les
stc
xchg
xchg
add
adc
sbb
dec
mov
pop
subb
add
dec
repnz
xor
cmp
call
inc
roll
pop
add
incl
or
or
push
add
push
push
sti
jns
data16
mov
xchg
fcoms
sahf
add
add
dec
pop
push
push
shr
dec
call
dec
je
inc
mov
push
cld
push
pop
jmp
jmp
push
jmp
ret
xchg
fbld
mov
xor
jmp
mov
repnz
pop
mov
push
cmc
icebp
jae
adc
call
enter
inc
mov
mov
iret
mov
jge
push
repnz
mov
dec
cwtl
stos
mov
xchg
mov
rcrb
fcomp
test
pop
addb
call
mov
mov
pop
jo
je
loopne
cld
imul
hlt
adc
cltd
xor
insb
or
push
imul
cmp
pop
add
pop
add
xchg
push
add
cmc
std
jae
js
fs
mov
out
nop
mov
and
pop
call
inc
filds
inc
xchg
in
jo
sbb
inc
scas
push
sahf
nop
cmc
adc
js
pop
pop
jp
add
push
lea
push
add
lret
call
xchg
lcall
inc
lock
test
or
add
add
mov
lods
loop
mov
add
inc
das
inc
cld
pop
pop
add
mov
mov
inc
cmp
cli
ljmp
and
and
inc
or
flds
movsb
inc
or
mov
add
inc
sub
mov
fsubrl
fldenv
fneni(8087
adc
dec
ret
add
xchg
call
test
mov
call
test
jne
mov
out
outsb
dec
sti
xlat
sub
mov
aam
add
dec
push
aas
aaa
jge
fs
pop
frstor
mov
lret
jne
std
push
add
pop
dec
add
or
dec
dec
xchg
data16
shrb
sbb
or
add
les
cltd
inc
lcall
std
inc
add
mov
inc
pop
in
aad
xlat
adc
inc
test
scas
jecxz
les
dec
iret
movsl
test
or
into
add
cmc
add
mov
pop
ret
or
idivl
aaa
lds
addb
dec
pop
out
std
inc
or
cltd
jle
jecxz
pop
sub
adc
aas
xlat
sub
add
out
ficompl
leave
pop
insb
stos
lds
pop
mov
out
mov
pop
add
sbb
lret
jmp
push
in
cli
jmp
int
cli
jmp
adc
add
add
add
pop
xchg
je
pop
pusha
test
pop
add
push
dec
shll
test
adc
cli
cltd
paddsb
add
add
add
mov
and
rclb
adc
lods
or
pop
add
or
inc
lahf
bound
lcall
add
out
in
pop
add
fsubrl
imulb
mov
fstpl
pop
dec
pop
test
lods
pop
add
sti
adc
push
int
test
mov
push
add
insl
fdivr
repnz
add
outsl
pushf
add
adc
mov
sbb
in
adc
mov
push
jmp
xor
inc
enter
adc
hlt
xchg
aas
dec
cmpl
mov
mov
sub
mov
pop
sti
add
dec
adc
ficomps
aam
aam
lods
push
jmp
mov
leave
xlat
out
inc
flds
mov
loop
int3
in
sarb
notb
dec
cmpsb
testb
jg
xor
dec
test
idiv
xchg
xor
xor
orl
inc
xor
pop
mov
loope
flds
fstpl
cwtl
mov
in
mov
add
ljmp
cmp
mov
fdivs
fimuls
sub
mov
enter
mov
pop
fs
pop
jmp
jp
add
jl
pop
ljmp
sbb
add
xchg
repnz
pop
jmp
inc
or
loope
add
jmp
add
sar
stos
push
aam
cmp
mov
in
orl
test
pop
lea
mov
cmpsb
sbb
inc
jmp
cmp
jmp
or
cli
fisubrs
in
fsubl
out
pusha
and
sti
dec
stc
xlat
mov
add
out
push
sbb
call
insl
ficomps
jmp
movl
notl
cmpsb
xchg
xor
mov
rolb
jmp
pushl
xorl
cmc
jne
scas
loop
push
xchg
testl
push
and
subl
idiv
cmp
pop
faddl
xor
faddp
and
clc
lcall
pop
add
lods
gs
sti
xchg
testl
insl
pop
divl
imul
push
fwait
je
push
add
inc
icebp
push
dec
iret
idiv
fscale
hlt
aas
les
or
add
clc
aam
push
ja
stc
sbb
aas
inc
adc
add
les
call
ror
movsl
incb
repz
ja
hlt
inc
jns
mov
inc
sti
je
fdivr
shl
push
lret
dec
pop
sti
lock
les
cmp
or
mov
icebp
cmp
icebp
popa
aas
jle
sti
andl
sti
jae
sbbb
popa
inc
pop
and
rcrl
subl
or
repz
cmp
mov
pop
out
js
out
dec
sbb
out
dec
paddusw
add
fidivrl
push
les
call
pushf
inc
repnz
rcrb
loopne
dec
mov
iret
jae
scas
mov
loope
test
dec
out
sarb
out
jl
ret
cmp
sar
stos
pop
aam
inc
add
add
xlat
test
loope
mov
xor
lcall
stos
out
call
lret
fs
pop
add
inc
loope
fidivrs
add
jl
and
rolb
fcom
inc
in
pop
xlat
test
jl
cli
cmp
pop
add
xchg
dec
jmp
arpl
popf
fldcw
pop
or
shr
or
repz
mov
test
stc
xchg
idiv
sbb
mov
test
cld
call
pop
lea
dec
rorb
pusha
inc
int3
andb
and
adc
rorb
inc
add
in
dec
lret
inc
int3
negb
rorl
xchg
pop
je
sbb
cmp
out
outsl
fdiv
add
pop
add
push
mov
jo
imul
adc
mov
jle
push
dec
sti
imul
cli
pop
cmp
dec
sti
dec
xor
flds
sbb
call
ljmp
ja
sti
adc
add
add
xor
adc
sti
sbb
ret
repz
jmp
push
add
fiaddl
jo
jmp
pop
jge
ljmp
jg
icebp
decb
pop
iret
add
jecxz
xlat
mov
jmp
inc
jg
lret
dec
cmp
outsl
push
jp
jecxz
fnstsw
dec
and
dec
shll
inc
add
shll
testl
sub
xor
xor
ret
xor
test
andb
xchg
sarb
fst
inc
iret
loop
jnp
push
incl
jmp
cmp
inc
sbb
out
jns
cmpsl
dec
add
enter
add
cmpsl
pop
add
testb
pop
mov
inc
or
mov
call
fcoml
sub
add
dec
xchg
mov
shl
mov
jl
in
in
sub
add
test
out
cmp
sub
mov
cmp
addr16
scas
jl
out
outsl
xchg
decb
mov
adc
bound
cli
mov
cld
xchg
pop
bound
test
sahf
adc
xor
cwtl
imul
jnp
jl
lahf
adc
mov
cwtl
notl
test
push
adc
add
mov
dec
idiv
stos
lods
mov
push
call
ficoml
fisttps
lret
add
cmpsb
dec
jmp
icebp
cmp
negb
fistl
lcall
jo
mov
idiv
add
fcmovb
add
sub
lea
sub
pop
mov
inc
sti
mov
mov
cmp
stc
mov
pop
notl
add
jns
mov
mov
push
cltd
pop
or
inc
jne
das
mov
mov
cmp
out
out
sti
dec
mov
decl
scas
dec
add
les
popa
cmp
mov
or
hlt
mov
insb
inc
call
dec
mov
inc
iret
dec
gs
pop
jmp
ficoml
repz
scas
fildll
and
out
add
and
int
push
hlt
repnz
pop
jg
pop
mov
icebp
push
push
pusha
fistpll
xchg
mov
add
div
lret
fildll
imul
push
xchg
mov
ja
filds
sub
stc
add
push
repnz
sbb
roll
push
pop
in
mov
inc
fcmove
inc
mov
fisubs
lds
sbb
cwtl
xchg
push
out
push
loop
out
xchg
repz
fisubrl
push
xchg
or
stc
jbe
push
add
add
je
filds
clc
call
mov
loop
push
mov
clc
ss
ret
pop
out
aas
xor
lsl
push
xchg
add
inc
sti
push
cmp
test
fsub
cli
imul
clc
fiadds
addr16
test
je
cmc
xor
mulb
pushf
test
loop
mov
incl
mov
jmp
push
idivb
mov
adc
notl
push
fists
cmpsb
push
call
pop
je
and
push
sub
dec
jnp
add
aaa
js
adc
mov
xor
inc
lret
das
incb
fnsave
inc
adc
int3
inc
hlt
sub
adc
add
adc
add
enter
xchg
add
add
push
dec
pop
jle
mov
pushl
fiaddl
sbb
inc
sti
idivl
ds
lcall
push
aas
imul
shl
hlt
mov
les
test
adc
inc
mov
push
pop
lds
inc
jbe
jne
sub
pusha
xchg
icebp
cli
les
shrl
or
aas
inc
jle
les
add
sbb
adc
or
or
sbb
inc
mov
push
add
pop
jmp
add
pop
sub
leave
mov
pop
cmp
test
xor
mov
mov
pop
add
pop
rcll
pop
pusha
dec
aas
outsl
int
xor
daa
cmp
test
push
dec
fldt
aam
pop
sbb
fsts
ret
cmp
sub
xchg
out
mov
cltd
ljmp
lds
bound
aaa
fidivrs
out
dec
cwtl
sbb
pop
shl
into
inc
into
div
xchg
lcall
fnsave
dec
ret
imul
add
add
add
movl
jmp
mov
add
addr16
cmp
lods
pop
data16
mov
pop
add
dec
or
jl
push
inc
mov
jmp
pop
scas
cli
push
ds
mov
adc
call
lods
loop
sbb
testb
mov
inc
in
mov
scas
loop
add
testl
in
cs
cs
divl
loop
or
in
pop
inc
dec
add
lods
scas
loop
cmc
cwtl
testl
cmp
test
std
sbb
add
xchg
jne
cmc
int
lcall
das
into
ljmp
inc
jo
jg
ret
or
cmp
add
aaa
pop
jb
inc
mov
mov
mov
cmp
pop
call
dec
adc
ss
pop
cmp
lods
pushf
arpl
mov
mov
dec
pushf
jb
sti
mov
lret
xor
sti
lahf
mov
add
add
fsub
enter
les
lahf
shll
jg
pop
ret
mov
add
push
shrb
cmp
xor
mov
inc
sbb
sub
sub
fwait
or
shlb
cmp
call
leave
in
add
jns
arpl
and
ret
subl
jno
adc
or
icebp
jno
fsubrs
pop
cmp
mov
jbe
mov
cmp
add
xor
mov
inc
cmp
pop
jmp
or
and
add
push
pop
add
loopne
pop
inc
loop
call
mov
sahf
dec
shrl
xor
jae
repnz
std
add
add
movlps
adc
ret
sub
dec
jecxz
jmp
mov
add
das
xchg
jmp
jg
mov
pop
add
jb
push
xorl
gs
clc
mov
xor
rorl
xchg
inc
call
outsb
jecxz
fwait
pop
add
or
setnp
loop
cmpsl
negl
insl
pop
pop
mov
xchg
jnp
push
in
sarl
mov
jae
mov
fidivrs
add
repz
bound
nopl
rolb
nop
fstpl
add
into
jp
push
pop
outsb
setb
cli
push
jp
mov
mov
xchg
mov
fidivrs
add
xor
dec
jae
mov
xchg
or
loop
mov
test
dec
int3
add
inc
orl
cmp
subl
std
dec
or
add
cmpl
pop
cmpl
cmpl
and
insb
cmpl
test
mov
inc
xchg
cmc
icebp
xlat
paddb
pop
mov
enter
ss
iret
add
dec
mov
es
add
pop
fidivl
loope
mov
sbb
sub
mov
jg
dec
faddl
jb
jne
mov
xchg
ds
mov
das
mov
icebp
les
mov
loopne
cmp
push
rorb
ficoml
roll
lret
leave
shl
sub
dec
cltd
test
pusha
xor
test
filds
dec
and
mov
cmp
jl
jp
add
dec
dec
hlt
arpl
xchg
inc
mov
int
mov
testb
ds
xor
loope
sub
sub
pop
push
jb
faddl
popa
leave
push
imul
imul
insb
dec
test
add
inc
xor
inc
and
xor
into
add
ja
pop
fwait
insl
push
lods
lret
filds
inc
fwait
jae
cmp
data16
push
int3
mov
add
cmpsl
dec
xor
mov
out
xchg
testb
mov
inc
data16
and
not
lea
jmp
outsl
adcb
and
dec
mov
jecxz
add
lret
lcall
ljmp
jne
popl
fisttpll
inc
jne
test
pop
and
or
jne
add
fldl
mov
push
popa
bound
std
test
add
fstps
inc
les
xchg
daa
add
mov
mov
cmp
testb
sbb
cli
cmp
daa
add
inc
daa
call
dec
inc
xchg
imul
add
daa
sbb
push
pop
xchg
mov
add
stc
xchg
in
sahf
xor
fistpl
int3
xchg
stos
aad
ret
or
xchg
sub
inc
imul
subb
ret
lret
xor
add
pop
inc
inc
pushf
andb
popa
sub
call
sub
sarb
mov
jecxz
mov
ret
je
das
rorb
rolb
pop
inc
sbb
std
xor
in
inc
dec
pop
int
inc
bound
xor
insb
xor
or
and
insl
mov
in
into
add
pop
add
add
fiadds
or
test
iret
dec
xchg
push
pop
sti
xchg
sbb
test
pushf
arpl
add
add
bound
outsl
leave
xlat
ret
sub
jp
sar
cli
pop
xor
sub
push
rcrl
shrb
adc
in
adc
pop
sub
sub
mov
out
mov
or
mov
outsl
in
push
xchg
xchg
mov
push
push
push
add
call
mov
lods
mov
and
dec
icebp
test
pushl
insl
insl
dec
mov
roll
mov
outsl
adc
dec
call
test
add
pop
bound
sbb
mov
mov
and
or
mov
mov
add
mov
jmp
test
shrb
iret
mov
jno
cli
add
add
dec
decb
xchg
add
fcoms
lock
cli
lret
dec
sub
ret
xchg
sti
xor
xchg
pop
add
sbb
xor
inc
add
std
cmp
jnp
outsl
lret
xlat
out
mov
sti
mov
sarl
add
adc
adc
xchg
xorl
std
add
pop
in
xlat
xchg
das
cmp
in
or
xor
adc
add
inc
iret
xchg
mov
add
call
inc
jne
push
jmp
cld
xor
sbb
sarb
aaa
aad
loope
jle
pop
sbb
ja
xor
ret
mov
mov
or
xchg
add
adc
les
inc
into
popf
jnp
mov
adc
dec
adc
sbb
dec
data16
adc
pop
outsb
leave
xlat
add
les
pusha
call
lods
in
in
dec
and
dec
insl
pop
cmp
mov
adc
lret
int
inc
add
out
rclb
rcrb
add
xor
cmp
neg
inc
sbb
mov
sbb
cli
xchg
pop
loope
mov
pop
cmp
pop
test
add
fidivs
inc
pop
in
pop
add
iret
out
outsb
sar
insl
or
mov
mov
je
lcall
fildl
lret
test
pop
mov
adc
sub
iret
je
sub
fcmove
adc
cmp
add
jne
cli
jno
adc
jno
adc
bound
inc
fisttpll
mov
mov
loope
data16
jp
jecxz
es
orl
or
sarl
dec
sahf
cli
mov
jns
clc
cli
clc
adc
xchg
mov
push
adc
testl
add
mov
inc
xor
imul
jnp
inc
adc
cmp
adc
mov
mov
mov
push
dec
cli
add
fldl
lea
cmpsb
or
pop
mov
fisubrl
lods
add
add
lcall
adc
cli
mov
or
and
nop
lret
push
in
hlt
aam
jl
aad
add
rep
jo
in
add
push
cmpsb
aas
les
dec
jp
adc
mov
jl
incb
inc
sbb
mov
mov
subb
test
pop
inc
dec
adc
jne
dec
ljmp
push
test
dec
aam
outsl
add
fisubl
pop
pop
push
inc
push
push
push
pop
cmp
adc
mov
shl
in
inc
mov
add
add
adc
jl
out
js
jg
xchg
out
int
sub
pop
push
aad
ret
pop
aad
jbe
add
mov
call
clc
inc
test
cmp
dec
stos
call
lahf
sub
out
rorb
enter
test
push
jl
pop
lds
adc
adc
fstps
add
subl
pop
subb
and
fucomip
ret
fdivr
pop
cmp
cmp
sub
pop
adc
loop
dec
push
jb
jnp
insb
leave
dec
pop
jno
push
stos
js
xorl
ret
jp
jecxz
cs
addl
fcoml
add
sub
or
add
inc
ljmp
push
jmp
xor
ljmp
idivb
jnp
fstpl
test
pop
mov
jmp
jae
push
push
sub
jnp
aaa
je
ffree
add
or
test
add
lret
jg
mov
jno
push
jbe
mov
inc
pop
jnp
insl
inc
mov
push
pop
pop
addb
cmc
stc
addb
add
add
pop
mov
je
mov
es
mov
push
les
or
mov
ja
mov
cwtl
mov
add
mov
cli
je
lcall
push
mov
jno
sti
sar
lret
or
or
bound
div
hlt
adc
lea
sub
and
push
je
dec
adc
add
mov
cmp
mov
test
decl
sbb
add
cmp
cmp
pop
jo
out
and
inc
enter
sub
data16
das
pop
xchg
roll
cmc
dec
dec
int3
mov
jbe
mov
inc
nop
outsb
loop
fcoms
jle
dec
out
mov
ljmp
jle
dec
out
test
push
cs
add
ficoml
jl
push
fs
xor
or
lods
leave
repnz
cmpsb
sti
xchg
das
outsb
pop
cmc
fstpl
cmp
sub
cmpsb
sub
call
jecxz
jae
inc
xchg
cli
xor
faddl
add
fldt
test
push
das
sub
add
pop
shl
in
mov
jae
dec
xchg
cli
xor
mov
mov
lock
mov
cmp
addb
adc
dec
and
loope
lea
ret
add
push
dec
jb
pop
lea
adc
or
xchg
mov
in
mov
aas
inc
or
inc
icebp
push
aam
add
mov
mov
add
lea
loop
fstpt
test
divb
test
or
cmp
jnp
xor
adc
outsb
sub
pop
sbb
insl
pop
push
pushl
mov
cmpsb
addl
data16
mov
or
jns
add
jnp
mov
or
push
push
jnp
loopne
add
jo
or
sti
arpl
jne
mov
ret
into
cli
rclb
xchg
mov
pop
fbstp
xchg
loop
jge
mov
add
add
xchg
int
cmp
and
dec
mov
push
les
mov
cli
les
jl
and
cmp
jl
dec
dec
ret
add
add
add
mov
lods
into
mov
or
inc
lret
and
jle
std
js
imul
inc
xchg
nop
lods
pop
shll
fldt
push
pop
imul
mov
inc
xchg
mov
jns
and
gs
pop
loop
sub
insl
mov
dec
push
inc
jmp
fwait
js
sub
add
popa
push
jmp
add
fcmove
lods
inc
psubw
stos
jg
and
aam
jle
inc
ljmp
and
push
enter
inc
add
call
and
xchg
test
cli
push
sbb
mov
test
jp
sbb
add
fildl
push
out
sti
pop
ret
lcall
add
mov
pushf
xchg
out
add
ret
cli
xlat
fyl2xp1
mov
lret
push
movl
push
ljmp
and
rolb
fwait
mov
xlat
pop
mov
sub
xlat
dec
loope
pop
das
add
fisttpl
push
loop
adc
push
adc
push
adc
cmc
call
push
mov
aad
pusha
pop
pop
add
cltd
add
out
notb
add
xor
jmp
test
incb
in
stc
push
je
add
sub
jnp
push
nop
shll
clc
push
adc
int
or
divl
in
ljmp
std
jmp
jb
mov
mov
aad
mov
xchg
rcrb
sti
fwait
bound
rolb
add
add
int3
cmp
les
sbb
test
mov
icebp
add
fmuls
push
push
sub
add
les
aas
je
cmp
xchg
inc
js
and
dec
ja
scas
pop
dec
je
mov
js
popl
xchg
add
sti
je
call
rcrb
push
into
add
push
xlat
test
jle
out
and
mov
out
and
test
adc
xor
outsl
sub
and
data16
dec
cmp
out
jno
push
adc
pop
sarb
xchg
pop
and
gs
mov
outsb
adc
insb
ja
mov
sub
iret
arpl
stc
mov
loope
rcll
sub
inc
pop
add
movsb
shl
lock
jle
leave
dec
xchg
test
inc
add
mov
shr
insb
in
or
dec
je
popa
pop
pop
scas
xor
pop
push
jmp
jns
add
pop
pop
and
std
add
inc
xchg
je
data16
adcb
cmc
push
mov
dec
adc
add
add
add
push
mov
ds
aas
and
cmp
sub
and
ret
xchg
or
int
inc
jmp
and
into
cmp
call
push
push
out
or
sarb
jle
jmp
cmp
jmp
pop
divb
notl
lock
jne
notb
incl
xchg
adc
in
sub
add
mov
jmp
leave
loop
add
and
das
rcrb
dec
cmpl
jne
pushf
arpl
cltd
in
pop
mov
outsb
jecxz
ficompl
fcmovnb
cmp
imull
mov
fildl
push
aas
imul
stos
sbb
mov
xchg
aad
sub
adc
push
outsl
pop
push
hlt
inc
mov
icebp
sbb
push
sbb
mov
or
loop
mov
clc
mov
test
add
jg
push
lods
fwait
sbb
les
cwtl
das
adc
push
sbb
add
and
or
test
mov
mov
pop
and
dec
loopne
sbb
mov
cmc
ret
jecxz
pause
add
mov
sbb
or
into
stc
insb
enter
out
mov
sbb
xchg
cltd
insb
test
add
popf
mov
das
popf
stos
xlat
adc
pop
push
pop
mov
jo
mov
pop
outsb
inc
xchg
out
jl
mov
js
pop
mov
cmp
add
jmp
inc
call
das
cmp
jmp
xor
add
lcall
pop
mov
aad
js
fdivs
cli
out
push
sti
hlt
daa
imul
pop
mov
lds
cld
rol
pop
add
cmp
cmp
je
mov
shrl
in
xchg
ret
pop
cmp
add
popa
push
data16
cld
xor
jmp
pop
push
idiv
sub
push
divl
cmp
rclb
out
fcompl
lea
std
inc
sbb
jae
addr16
push
repnz
sbb
add
jmp
mov
push
idiv
jne
sbb
push
loope
inc
add
push
imul
push
push
idiv
mov
ret
shll
cmpsb
push
mov
push
notl
out
cmc
adc
out
jbe
mov
cmpsl
fistpl
lea
sbb
xchg
push
xlat
sbbl
sti
xchg
xchg
xchg
pop
push
sti
loop
add
pop
cs
add
mov
add
xor
xchg
scas
cli
sar
icebp
aas
les
pop
jp
popf
adc
shr
fwait
add
repz
repz
sbb
inc
push
fidivs
daa
xlat
sub
adc
sti
mov
ret
mov
xchg
pop
je
inc
mov
sbb
dec
mov
and
pavgb
or
call
iret
divb
add
add
fs
mov
sbb
fmuls
adc
icebp
or
call
sbb
out
movsb
mov
shll
mov
xchg
mov
add
test
push
les
stos
jmp
jmp
add
pop
jmp
orb
jne
out
jno
inc
shlb
fidivrs
add
stos
sar
call
push
out
dec
cli
mov
jge
mov
insl
mov
popa
bound
xchg
rcrl
xchg
xor
jge
enter
iret
jmp
add
inc
jmp
fwait
jae
out
addb
int3
fcomi
fs
xor
or
stc
cltd
je
push
scas
out
xor
or
cmpsl
mov
cli
loop
cs
aas
add
scas
cli
add
out
or
add
adc
adc
scas
pushf
bnd
xor
stc
lret
call
outsb
int3
out
add
mov
jg
iret
mov
dec
idiv
sub
lds
rcrb
jecxz
repnz
jnp
jecxz
add
cltd
bnd
dec
leave
ljmp
push
out
pop
push
lea
les
add
add
xchg
clc
aas
xchg
out
sbb
add
roll
or
aas
jge
sbb
add
mov
or
add
test
or
nop
test
mov
lcall
ret
add
jae
mov
add
je
icebp
lret
mov
incl
enter
mov
sub
sti
mov
cmp
addr16
inc
mov
std
mov
lods
push
sbb
test
movsb
push
outsl
or
iret
mov
jmp
xchg
mov
mov
cmpsl
popf
sbb
mov
inc
ret
ret
sub
arpl
and
inc
sbb
inc
addb
add
add
xlat
addb
stos
cmp
mov
mov
mov
adc
in
xchg
insl
sbb
sub
pop
outsb
daa
inc
mov
xchg
scas
sub
out
les
rcll
xchg
loop
add
mov
pop
insb
add
movl
cltd
popa
inc
ret
mov
or
aam
push
dec
inc
jmp
icebp
es
filds
cmp
jo
out
jmp
cli
je
fisttpll
sub
jno
xchg
fadds
sti
pop
mov
stos
lret
imul
pop
adc
dec
xchg
in
js
out
shl
rcr
inc
gs
push
out
add
sub
loope
std
jl
jae
pop
pop
lea
fcomp
dec
push
add
flds
and
imul
or
in
cmp
test
notl
add
insl
inc
adc
cmp
push
test
inc
testl
fs
call
in
hlt
imulb
test
pop
add
push
mov
adc
bound
pop
in
and
and
and
push
add
clc
push
mov
push
psrlq
jl
dec
cmc
cwtl
cwtl
repz
test
cli
rcrl
dec
je
jno
push
push
test
dec
dec
jle
push
push
inc
sbb
movsb
mov
sti
das
ret
sarl
xchg
clc
aas
les
sbb
cmp
jns
adc
jns
rclb
ret
aaa
ret
daa
inc
or
sbb
mov
mov
inc
add
sub
xor
xchg
pop
lds
test
repnz
lock
or
scas
mov
push
jno
mov
adc
or
adcb
xchg
adc
lcall
pop
jmp
dec
push
pop
jmp
add
les
mov
sbb
out
les
mov
adc
movsl
adc
lods
mov
mov
js
imul
enter
adc
inc
rorl
mov
jecxz
dec
pop
add
or
mov
ss
loopne
xchg
jae
cs
jns
insl
add
push
add
add
gs
sbb
or
fsubr
dec
inc
jmp
pop
aaa
cmpsb
dec
inc
push
data16
add
mov
xor
insl
add
adc
jmp
ret
cwtl
inc
xor
or
repz
inc
and
pop
dec
fistl
dec
mov
aad
je
call
push
mov
popf
aad
je
call
incb
int
adc
mov
push
push
call
das
ds
pop
je
fisttpll
and
cwtl
cli
mov
aad
je
call
push
adc
lcall
out
mov
pop
add
mov
pop
addl
pop
je
icebp
bswap
add
xor
add
roll
fnstenv
aas
les
mov
sar
test
jbe
inc
ret
dec
add
cli
fstps
add
out
rcrl
cmp
incl
sbb
test
add
ret
sbb
sar
xchg
lods
push
push
mov
xchg
dec
add
incb
add
or
xchg
mov
mov
sbb
loop
loope
std
insl
pmullw
bswap
fs
push
pusha
pop
jmp
je
pop
jmp
inc
mov
sbb
sbb
pop
jmp
les
cwtl
insl
test
jnp
dec
jle
inc
int3
dec
add
les
incl
inc
add
pop
hlt
pop
repz
ret
insl
sub
test
xchg
add
cmp
xchg
ret
ljmp
dec
test
pop
test
call
in
ja
push
sbb
cld
cmpsl
push
inc
jmp
mov
or
gs
jge
sbb
dec
cmp
push
inc
or
cld
addr16
inc
jmp
inc
es
subl
inc
lds
sbb
outsl
insb
sub
ds
lea
int3
movsb
cli
add
jne
dec
adc
xchg
xchg
push
testl
pusha
jecxz
inc
pop
add
push
std
pushl
push
sbb
and
pop
cli
mov
int3
mov
adc
aad
push
add
fcoml
insl
pop
mov
in
fiadds
mov
dec
lods
scas
xchg
sub
iret
daa
dec
in
int3
and
inc
div
mov
or
mov
cli
flds
cli
aas
les
aas
je
into
sarl
loope
in
aas
dec
or
pop
call
lds
mov
mov
mov
mov
push
pop
pushf
mov
inc
je
cwtl
and
inc
jnp
pop
cmp
les
mov
mov
dec
loopne
dec
inc
loopne
xchg
ftst
scas
cmp
inc
or
dec
jnp
inc
aad
xchg
mov
mov
pop
fiaddl
jae
cmp
inc
imul
les
dec
lock
pop
outsb
or
cmpsl
loope
and
cmp
int
scas
push
cli
lock
add
sbbl
enter
test
lret
dec
sub
fwait
aas
hlt
adc
push
stos
lock
sub
cmp
popa
xor
fs
pop
sub
add
pop
add
pop
add
or
fmull
mov
add
and
imul
pop
push
lcall
add
jp
loopne
jp
xchg
lds
add
jp
sti
je
mov
add
push
cli
notb
mov
add
add
test
or
or
jmp
ja
inc
sbb
add
fcomip
out
lret
sti
call
das
adc
jne
stos
mov
adc
cli
and
add
aad
jmp
test
call
test
push
push
push
adc
ljmp
or
fst
xor
in
inc
or
js
cwtl
cli
add
je
inc
pop
pop
mov
out
bound
pushf
pop
add
lock
cmc
adc
xchg
call
sbb
or
push
push
jne
aam
push
sub
adc
xor
les
mov
and
sub
cmpsb
sbb
je
xchg
mov
add
cli
dec
js
xchg
mov
mov
push
stos
push
aas
push
test
sub
mov
mov
lock
and
mov
dec
rorl
pop
imul
nop
or
cld
dec
arpl
adc
hlt
dec
sub
xchg
icebp
pop
dec
sub
std
xchg
hlt
add
pop
jns
jecxz
in
into
mov
push
push
mov
push
inc
test
movsl
lock
pushf
jp
stos
jecxz
fstl
jmp
notl
adc
test
icebp
lret
in
mov
flds
xor
mov
mov
mov
push
adc
nop
rorl
rclb
ret
sbb
movsl
add
popf
fadds
stc
aad
leave
push
lock
mov
or
sub
subl
mov
sti
cld
pop
daa
or
lahf
cli
pop
fimuls
fsubr
movsb
je
and
cmp
pop
mov
add
mov
xchg
mov
push
sub
add
add
mov
adc
dec
sti
push
cmpb
stc
enter
adc
push
and
add
js
adc
pop
negl
dec
pop
push
mov
add
add
and
sub
test
adc
pop
and
or
sbb
jne
test
incl
mov
jne
std
out
cmc
jne
push
adc
pop
sbbb
add
in
imulb
mov
outsb
and
ret
jecxz
mov
xchg
xor
les
mov
imul
inc
fiadds
sti
outsl
test
jne
lock
repnz
mov
inc
inc
cld
cli
shll
aas
les
mov
xor
cli
out
sbb
jp
mov
nop
push
sbb
jmp
jle
ss
fsubrp
cli
pop
test
mov
lds
sti
lret
dec
lock
cmp
jne
filds
jne
push
mov
stos
jle
adc
mov
pop
xchg
push
aas
popf
or
les
lock
pop
and
outsl
test
mov
sbb
js
lahf
xor
inc
or
xchg
xchg
out
ret
lahf
adc
das
and
icebp
add
add
mov
cmpsl
jecxz
cld
sbb
pop
xchg
rcl
pshufw
out
cmp
cltd
shl
inc
les
outsb
push
rcrb
or
add
inc
cli
js
add
testb
aam
inc
inc
jmp
add
mov
lds
lock
pop
add
push
daa
adc
lds
aaa
fmull
ds
int3
aad
icebp
daa
or
inc
cmpsb
cli
jle
dec
sti
cld
scas
mov
je
daa
or
push
adc
movl
push
jb
stos
add
fcomps
insl
aad
fsts
call
add
add
add
sar
movsb
daa
adc
lret
mov
divl
mov
sti
lcall
call
inc
dec
call
dec
divl
pop
adc
pop
mov
push
clc
adc
jle,pn
sub
inc
inc
add
push
mov
ret
push
push
inc
adc
aad
mov
xchg
and
add
xchg
pop
push
adc
ret
xor
out
mov
add
mov
xorl
es
stos
les
divb
sub
pushf
push
add
mov
les
pop
sub
dec
outsl
fcoml
and
stc
imul
fcoml
fmull
mov
sti
mov
dec
mov
sub
jmp
cmp
add
add
lahf
push
je
leave
sub
adc
xor
rorb
sti
repz
mov
jp
dec
fdivs
dec
hlt
shlb
call
pop
push
add
pushf
repz
fcomps
jmp
add
iret
adc
scas
push
add
rolb
int3
es
in
fwait
mov
pop
sub
push
add
add
add
pop
stc
js
iret
and
popf
mov
dec
aad
js
xor
push
dec
or
xchg
shll
fcoml
cltd
push
and
mov
cld
lahf
ret
mov
xor
push
pop
std
stos
pop
in
dec
and
push
int
ljmp
es
dec
jne
ds
add
cli
push
dec
fidivl
add
stos
push
add
stc
out
push
pop
fdivs
dec
ror
sub
cld
imull
jmp
das
xchg
clc
sub
mov
jl
lahf
or
cmp
ret
fisubrl
and
mov
jle
pop
out
popf
imul
cmp
bound
fabs
xchg
test
lods
adc
mov
xchg
cwtl
cli
incl
cmpsb
mov
in
push
push
bound
outsb
cwtl
adc
add
mov
popa
push
call
call
lods
jae
push
jb,pt
insl
call
in
jmp
mov
ds
adc
and
add
dec
shlb
cs
out
ss
outsb
cs
push
add
add
inc
cmp
adc
mov
pop
cmp
adc
jne
cld
leave
out
mov
fbstp
out
jp
lcall
insl
add
jge
test
aas
movl
sbb
jno
inc
call
xchg
shrb
call
ljmp
add
cld
ljmp
jle
push
cld
pop
or
dec
test
mov
dec
push
jg
stc
mov
push
dec
outsb
sub
pushf
enter
bound
push
mov
data16
pop
shlb
add
dec
data16
dec
cwtd
dec
or
xor
dec
es
pop
das
pop
jmp
cld
sahf
loope
daa
mov
sub
sbb
add
sub
addb
xchg
jp
xor
jecxz
dec
adc
xchg
pop
inc
mov
fiadds
push
les
in
mov
push
int
sbb
cli
jecxz,pn
icebp
and
add
dec
test
sbb
lret
repz
aas
bound
inc
rcrl
lret
arpl
ss
femms
add
add
add
adc
or
adc
mov
lahf
add
fnsave
mov
incl
sub
fisubrs
mov
add
cmc
sbbb
inc
adc
cmp
add
and
sbbl
sti
add
lcall
or
in
sub
adc
add
pop
lea
sub
adc
sub
jno
clc
ljmp
push
pop
nop
lods
pop
add
adc
add
lods
pop
add
popf
pop
call
test
pop
add
jo
adc
insl
adc
sbb
dec
mov
pop
shll
xchg
pop
add
xchg
lea
pop
call
add
jg
dec
cmp
call
dec
ret
outsl
jbe
mov
mov
jmp
dec
push
in
push
out
ret
jae
test
inc
and
icebp
dec
sti
rcl
adc
add
or
pop
nop
les
dec
lea
cmpsb
push
push
cmp
push
lea
xchg
std
jae
dec
mov
pop
pop
call
add
push
fmull
adc
aam
and
int3
or
inc
add
mov
dec
cmc
adc
pop
xchg
rcrl
pextrw
sbb
lods
stos
aas
loopne
call
add
fmuls
inc
fcmovu
pop
iret
pop
fcompl
into
add
rclb
cmp
scas
out
call
pop
hlt
in
pop
aam
adc
jbe
aas
add
push
push
test
pop
and
test
push
add
push
jl
test
and
inc
test
jmp
inc
call
push
add
inc
push
add
lods
pop
lea
xchg
call
sti
popl
jmp
aad
outsb
call
mov
add
das
pop
cli
xchg
xchg
add
adc
jmp
pushf
dec
call
adc
xchg
cli
jb
bound
lcall
add
add
jecxz
jmp
push
pop
call
inc
aas
push
inc
add
stos
incl
mov
bound
and
push
push
pop
test
push
add
add
push
add
add
xchg
in
push
cli
add
pop
jmp
push
jne
jle
jb
call
lea
sti
incl
xchg
test
xchg
cmc
ljmp
jae
cmpsb
cmc
call
and
add
mov
jae
out
in
pop
pop
scas
rorb
add
adc
out
in
hlt
mov
cmp
mov
lds
repnz
sbb
add
test
imul
inc
repnz
add
les
les
cmp
xchg
je
out
icebp
hlt
cli
lahf
mov
add
les
clc
sub
imul
or
call
dec
inc
jo
and
adc
push
mov
loop
push
jmp
add
add
filds
out
pop
pop
les
push
jb
enter
and
cld
and
push
push
mov
xorl
jp
hlt
push
add
rcl
or
hlt
fadds
fadds
jecxz
jle
push
rorb
loope
mov
testl
xchg
outsl
cmp
scas
fs
add
pop
mov
hlt
sahf
add
or
or
add
iret
test
jle
jmp
xchg
out
xor
xchg
call
mov
out
aad
iret
push
xchg
pop
je
shl
xchg
and
aaa
imul
pop
fadd
xorl
int
jmp
in
dec
pop
clc
or
add
pop
sahf
push
push
arpl
cli
push
push
push
or
mov
ds
pop
data16
pop
adc
xlat
filds
pop
loopne
and
sbb
push
lods
scas
or
push
call
scas
arpl
mov
push
clc
jle
ret
test
jp
jae
mov
xchg
mov
mov
int
and
mov
incl
cmp
mov
push
sar
in
or
push
xlat
push
push
call
lret
in
push
inc
or
add
add
mov
mov
pop
add
mov
fidivl
adc
jnp
xchg
pop
jnp
les
jae
fiaddl
int3
push
cmp
les
adc
clc
out
arpl
dec
xchg
les
adc
add
lea
or
data16
cli
or
cmpsl
jns
mov
pop
inc
or
or
pop
inc
add
push
je
add
les
cmp
pop
pop
pop
push
pop
cmp
les
insl
cmp
xor
add
dec
out
cli
mov
cmp
icebp
mov
push
add
das
and
pop
pushf
jl
fadds
bnd
push
push
and
add
rolb
pop
inc
mov
push
sub
scas
pop
jmp
push
jo
sub
mov
xchg
mov
jmp
lock
flds
in
xor
add
fbld
aam
adc
mov
mov
test
data16
pop
cmpsl
add
mov
test
aaa
or
sub
add
sub
sub
scas
mov
jb
aaa
and
pop
jg
stos
pop
add
jmp
scas
or
leave
xchg
inc
pop
and
xchg
mov
shrb
bound
mov
sbb
in
mov
fwait
imul
roll
add
lcall
mov
insl
add
sub
add
and
pop
add
add
or
cltd
fistl
mov
jne
loop
mov
push
call
out
and
aad
loop
jb
ds
cs
test
jns
lea
mov
roll
add
aas
mov
xor
test
cmp
std
pop
bound
and
pop
push
call
pop
mov
ds
xor
fsubs
mov
and
ret
pop
mov
pop
cmp
in
add
cmp
addr16
call
je
adc
test
add
js
jbe
imul
call
xchg
mov
pop
out
cld
loop
push
jg
push
dec
scas
sub
fs
push
sub
lea
or
out
lock
cli
inc
push
in
call
lock
in
jle
sti
repz
mov
cwtl
jns
sbb
xor
push
inc
push
mov
fwait
shr
mov
sub
ret
add
add
pop
pop
ja
fmull
js
aad
xor
dec
sbb
fdivrl
sti
in
inc
fwait
jnp
out
loope
xchg
sbb
outsb
inc
dec
decb
in
adcb
stc
inc
xor
lcall
mov
hlt
fimuls
push
popf
jle
push
stos
inc
iret
pop
pusha
jbe
jb
fldln2
xchg
ja
add
xchg
fwait
add
js
fmul
jg
loopne
test
loope
push
inc
mov
or
ss
call
fstpt
push
cwtl
test
jbe
icebp
fiadds
add
loopne
gs
or
xchg
cs
inc
lea
pop
mov
lea
xor
cltd
std
sbb
xchg
stos
jg
sbb
sldt
add
add
ror
and
ljmp
sub
js
mov
inc
pop
outsl
adc
cmpl
faddp
pusha
xorl
sub
outsl
adc
cmpl
addl
mov
sbb
mov
push
int
outsb
ffree
add
add
cs
or
add
popf
adc
sub
add
loope
outsb
dec
ficomps
add
add
sub
dec
xor
or
sbb
jl
enter
popa
inc
out
or
push
inc
xchg
repz
pop
sarl
pop
jo
mov
jno
add
jae
mov
cltd
mulb
jl
mov
cwtl
adcl
insb
mov
jnp
jo
inc
into
out
imul
mov
nop
pop
xchg
lea
push
sbb
push
stos
leave
addl
adc
or
enter
ds
pop
cltd
jo
fists
call
enter
mov
das
jno
shll
lock
popa
inc
dec
lcall
add
jae
add
or
jl
imul
sub
nop
inc
mov
sbb
aas
iret
pop
mov
rolb
stos
clc
push
and
pusha
cmp
fldenv
mov
add
ds
pop
mov
pop
add
sbb
shlw
fwait
ret
jae
nop
inc
and
std
icebp
in
enter
xchg
sub
test
mov
stos
mov
pusha
test
inc
roll
out
sbb
push
push
lret
test
pushf
dec
pop
add
add
ljmp
and
popf
fldt
cmp
aad
mov
jmp
inc
jmp
xchg
pop
negb
sbb
out
subb
sub
push
xor
add
add
cwtl
adcb
sbb
bound
adc
pop
push
mov
add
add
adc
mov
repnz
cltd
pop
jnp
push
or
leave
adc
push
divl
lea
push
mov
fnstsw
ret
sub
cmp
clc
mov
xchg
popa
add
out
stc
rcrb
xor
add
test
movsl
lds
jmp
dec
rolb
cld
xchg
pusha
fmul
sub
loope
jp
cli
cmp
add
xor
outsb
aad
inc
or
repnz
xchg
push
je
faddl
stc
jecxz
mov
inc
inc
or
mov
jmp
cmp
leave
and
clc
out
repz
xor
sbb
add
inc
ss
add
adc
imul
xor
loop
shlb
jo
push
or
mov
dec
shrb
push
mov
push
xchg
mov
mov
mov
lods
adc
sbb
into
enter
push
jp
mov
mov
mov
push
xchg
pop
aaa
in
push
cmp
lcall
add
mov
push
inc
fcomp
ret
idivl
imul
out
stos
testl
pop
mov
mov
cmp
into
enter
adc
mov
jns
arpl
arpl
inc
add
inc
stc
les
mov
xchg
aaa
mov
in
xorb
push
adc
add
add
rclb
sub
js
int
push
adc
push
test
dec
push
sub
psubb
lock
mov
repnz
inc
test
push
xor
je
cmp
mov
cs
mov
jae
mov
rclb
add
in
adc
jmp
add
pop
add
mov
fmull
sub
nop
add
add
sahf
test
rorb
out
sbb
popa
cmp
add
jmp
loopne
in
pop
add
fdivrs
jge
int
hlt
ss
mov
and
mov
pop
pop
adc
pop
or
push
push
aas
cmp
jbe
cmp
jne
arpl
jnp
cli
pusha
lock
into
into
jl
or
inc
fdivrp
sarl
jge
lock
das
jo
fs
mov
pop
hlt
subb
mov
or
fbstp
fsubl
hlt
xor
cltd
iret
mov
aaa
clc
aas
inc
call
fadds
or
repnz
xchg
mov
or
add
dec
sbb
dec
or
adc
aam
adc
cmp
mov
pop
jmp
mov
inc
pop
fstpl
shlb
dec
dec
psllw
fs
dec
dec
sbb
jae
in
mov
fmulp
and
leavew
adc
xor
cmp
mov
mov
sbb
in
and
add
test
sbb
dec
daa
mov
mov
data16
mov
es
lea
push
pop
aas
int3
push
cmp
cmpsl
mov
fldenv
xchg
stos
cli
lods
aad
stc
mov
loop
fs
add
push
mov
cmp
sbb
pusha
aam
jb
and
mov
out
mov
adc
cmc
lods
daa
mov
aam
fisttpll
xchg
jl
ljmp
ljmp
add
mov
xchg
inc
inc
rcrb
lcall
or
push
adc
adc
mov
imul
int3
xchg
insl
push
and
add
adc
jmp
into
inc
rolb
push
mov
xchg
pop
sarl
inc
hlt
cmpsb
adc
cmp
mov
lcall
add
iret
jnp
mov
and
call
add
mov
push
jnp
dec
pop
lea
and
mov
dec
mov
add
add
xchg
inc
add
ret
add
jg
pop
add
sar
xchg
push
fnstenv
inc
in
xchg
jge
and
push
add
inc
loopne
dec
aas
repz
and
in
subl
mov
enter
inc
aam
in
inc
in
inc
in
int3
std
inc
sti
dec
push
repz
in
inc
adc
ds
fstpt
pop
incl
leave
xor
aaa
imul
xchg
inc
add
pop
and
add
fbld
les
push
mov
jecxz
push
mov
jecxz
not
pop
mov
bswap
loop
mov
push
jno
xor
mov
inc
push
pop
jno
pxor
add
jns
sar
pushf
xor
out
cwtl
in
sbb
mov
push
xor
dec
fdivrl
sti
fwait
gs
mov
je
cmp
pop
xchg
iret
loop
dec
dec
pop
cli
push
inc
jno
ds
out
out
ljmp
cli
ljmp
inc
std
inc
pop
rcr
lods
sbb
stc
mulb
stc
inc
add
xor
inc
roll
stc
int3
sbb
cli
into
clc
adc
or
leave
stos
pop
js
clc
jmp
mov
push
fidivl
lcall
dec
paddusb
push
sbb
cmp
pop
add
sub
mov
xchg
jecxz
adc
cld
cmp
data16
pop
add
mov
mov
mov
jns
pop
cmp
jae
test
pop
add
out
xchg
call
in
sub
dec
inc
adc
std
orb
dec
clc
cmpsb
and
mov
fs
xchg
adc
mov
push
dec
adc
cld
cmp
or
inc
les
aaa
aam
add
mov
orl
add
les
pop
incl
sub
stc
xchg
add
lds
ljmp
loop
adc
rolb
jmp
rolb
lret
xor
cmp
pop
xchg
sbb
mov
sti
inc
in
xchg
in
das
clc
decl
add
pop
je
shl
hlt
add
lds
lock
test
les
inc
mov
loopne
pop
cmp
dec
nop
loop
adc
add
add
in
pusha
xor
pusha
je
ret
fs
je
outsl
pusha
das
push
jl
movsb
adc
fldenv
add
add
cmp
xor
pop
and
in
adc
bswap
mov
jo
mov
in
mov
cmp
in
fimuls
in
inc
out
pop
jb
pushl
xchg
xchg
outsl
inc
add
jae
sbb
lock
data16
xchg
out
dec
insl
jno
sbb
and
dec
cmp
sub
aad
out
daa
lea
movsb
lret
fmull
pop
xchg
add
dec
add
dec
cmpb
fisttpl
and
aad
dec
fisttpll
adc
icebp
fcoml
pop
enter
out
test
cli
lds
into
xchg
loopne
in
negb
add
negb
loope
es
adc
or
sar
ljmp
fwait
loope
add
xor
mov
loopne
fdivs
jnp
hlt
xor
mov
lahf
xor
xor
inc
xchg
out
fcoms
dec
in
xor
push
lock
or
push
and
loop
and
fdivrl
clc
aas
push
or
and
jge
faddl
xchg
sarb
mov
mov
inc
mov
add
add
add
jg
xor
jl
test
ror
repz
daa
add
push
or
pop
inc
cmpsl
clc
jp
iret
cmpb
popa
lahf
mov
inc
in
mov
jg
movb
cli
inc
les
cwtl
and
pop
lds
popa
jp
and
xor
in
loopne
aaa
sbb
push
aaa
or
andl
mov
sbb
gs
imul
iret
test
popa
aas
mov
pop
jo
test
sub
inc
out
icebp
add
pop
imul
jae
loope
mov
mov
pop
inc
pop
xor
dec
popf
popa
cmp
and
mov
in
stos
add
add
add
jno
add
jecxz
jle
jns
cmc
negl
add
shll
stc
in
sahf
mov
xchg
andl
in
jae
ljmp
je
leave
stos
dec
jge
out
notb
lock
or
faddl
add
cmp
pop
jno
je
movsb
nop
js
ds
jne
movsb
add
outsl
aad
js
repz
cli
ljmp
addl
push
inc
mov
sub
addl
push
inc
mov
xlat
sbb
cmp
pop
leave
pop
insb
cli
push
push
ja
in
or
dec
push
out
test
rorb
in
fsubl
in
cmp
push
mov
aaa
pop
add
push
sbb
mov
xchg
loop
adc
inc
cld
cmp
pop
add
int
filds
aam
fmuls
stc
imul
decl
mov
inc
in
shll
andl
xchg
cmp
scas
ss
jl
cld
inc
clc
popf
mov
add
add
cmp
jge
inc
rorb
rcrl
dec
push
aam
cmp
or
add
cmpb
or
mov
jnp
rcr
inc
xchg
decl
out
shlb
call
fnstcw
jo
outsb
inc
push
inc
lods
iret
stos
mov
jle
data16
cmp
fucomip
push
mov
cld
pop
xchg
aad
mov
add
lds
mov
jl
subb
pop
fs
ljmp
cmp
xchg
nop
pop
jmp
xorl
jmp
out
dec
pop
popa
jnp
and
les
sbb
push
repnz
repz
in
jmp
pop
push
xor
popa
xor
cmp
add
jno
xor
xchg
xchg
shl
std
lahf
push
clc
jo
xchg
stos
subl
int
mov
lds
call
lods
add
and
jo
cmc
push
push
call
sub
insl
iret
jo
fildl
repnz
jnp
sub
adc
jae
mov
aad
popa
rcrl
dec
add
pop
adc
les
cld
psraw
clc
pushl
je
loope
pop
dec
loopne
pop
inc
adc
in
push
rorb
dec
fdivl
sub
out
jle
xor
repz
xchg
mov
int
dec
or
sbb
dec
lock
adc
out
scas
stc
stc
xchg
rolb
mov
dec
sbb
xor
call
out
push
add
gs
enter
push
mov
cli
xor
mov
cmp
lahf
aas
jbe
js
add
or
adc
ljmp
test
add
or
mov
clc
sub
or
cli
xchg
cli
mov
popf
lret
clc
push
or
mov
dec
clc
add
fmull
inc
push
lods
incl
mov
inc
pop
in
inc
push
call
mov
jp
ret
jnp
insb
jmp
mov
aaa
mov
ret
testb
fidivrl
stc
pop
pop
add
and
and
xor
jbe
sbb
call
repnz
shrl
pop
aad
stos
out
sbb
add
imul
mov
hlt
pop
outsb
dec
and
in
push
pop
dec
sbb
xor
or
and
pop
fimuls
out
iret
cmpl
mov
aaa
into
pop
outsb
mov
je
fsubs
pop
les
mov
push
jg
ret
fidivrl
push
test
add
subb
sbbb
mov
jno
rorb
fildll
loope
iret
shl
test
pop
mov
lcall
jg
sbb
or
sti
call
loopne
adc
leave
gs
dec
pop
sbb
mov
add
das
divl
xchg
sbb
add
add
lahf
jae
sub
clc
rdmsr
sub
jmp
mov
jne
loope
mov
sbb
stos
out
pushl
loope
mov
jle
dec
lret
lea
jbe
call
mov
sbb
stc
fisubrl
or
out
decb
xchg
jns
adc
fldt
std
push
inc
mov
out
incb
sub
leave
ret
push
dec
in
inc
rcrb
mov
jo
sbb
xlat
int
bnd
cld
xor
dec
jge
push
aas
cmp
fnsave
int3
or
mov
sti
mov
cmp
cmpsb
repnz
and
inc
sbb
repnz
je
xchg
icebp
movl
xchg
inc
jp
add
inc
inc
mov
pop
test
es
mulb
out
mov
insb
mov
testl
xchg
push
ret
jnp
sbb
jb
push
out
enter
ficompl
stc
cli
inc
out
pop
lret
jle
scas
movsb
iret
pop
movsl
add
cltd
fadds
adc
dec
jg
push
loop
hlt
pop
data16
or
int3
add
cmp
cmp
cld
mov
push
les
xchg
test
mov
lods
mov
cwtl
xchg
dec
jg
pop
inc
pop
push
push
jp
cmp
movsl
jl
xchg
pop
lods
jbe
or
jb
xchg
es
mov
add
jns
pusha
mov
ja
add
movsl
mov
sti
ss
leave
pop
add
add
out
jmp
pop
or
push
jg
sub
jle
rolb
test
ljmp
xchg
cwtl
or
pop
lcall
movsl
sub
push
fucomp
pop
or
sub
in
jecxz
add
pop
add
sbb
sbb
fstpl
mov
mov
mov
bound
add
cmp
bound
mov
dec
sti
inc
and
ret
rorb
in
or
dec
add
shll
aad
pop
add
sub
aaa
mov
push
mov
lcall
sub
add
pop
enter
xor
outsb
jbe
dec
stc
inc
enter
jl
lds
or
inc
sar
inc
xor
pop
test
out
push
mov
jg
outsl
dec
inc
aas
mov
push
add
jno
inc
mov
mov
ror
das
push
sbb
je
int
stc
xor
xchg
jnp
lret
xor
enter
push
aaa
or
sub
sub
icebp
lds
mov
les
fbstp
clc
and
aas
pop
sub
dec
or
mov
jp
dec
push
aam
imul
dec
jecxz,pn
xchg
in
cmc
addb
in
shlb
add
pop
ljmp
ds
add
push
call
add
pop
ds
inc
adc
pop
pop
clc
jl
add
inc
pusha
fwait
cmp
call
fdivl
adc
inc
fstcw
pop
jmp
add
push
loopne
add
bound
jbe
test
pop
bound
pusha
fs
push
test
pop
bound
push
bound
popaw
test
pop
bound
pop
xchg
clc
rorl
inc
in
in
sbb
or
xchg
fs
add
gs
shlb
mov
jb
inc
test
out
mov
adc
les
out
bound
inc
cmp
add
cmp
add
cwtl
jae
cmpsb
sbb
push
xor
loope
sbb
fmuls
adc
das
call
mov
xchg
imul
or
and
mov
mov
inc
push
loop
or
cmp
jmp
es
add
out
sbb
add
cmp
pusha
mov
push
or
lcall
data16
push
call
sub
ret
jae
pop
dec
in
sbb
mov
mov
jno
addl
add
add
cli
cs
fscale
mov
ret
je
lcall
out
jae
shlb
leave
push
jp
sub
lods
mov
int3
xchg
xchg
cli
popa
dec
jae
inc
loopne
jbe
xchg
push
aas
fnstsw
shlb
or
test
pop
jb
testl
add
and
mov
pop
jmp
add
mov
clc
pop
cld
movsl
shll
incl
shrl
add
pop
bnd
push
cmp
pop
sti
cmpsl
mov
out
push
insb
xor
add
pop
cmp
sbb
push
push
sbb
push
or
add
pop
jge
fistpl
test
inc
dec
call
or
shlb
adc
movsl
mov
out
push
pop
add
fnstenv
aam
cvttps2pi
or
jp
xor
sahf
add
dec
xchg
aas
pop
mov
or
fnstsw
mov
sbb
lods
enter
jle
or
dec
jne
push
or
mov
fucomip
pop
ret
sub
inc
add
jne
push
cmp
or
add
popa
jmp
pop
ret
and
pusha
call
pop
rolb
adc
inc
icebp
pop
mov
push
xchg
inc
add
iret
inc
add
push
addl
mov
inc
inc
or
inc
fnstenv
adc
inc
xor
fwait
test
roll
and
inc
or
jmp
xor
pop
xchg
outsb
add
add
roll
push
and
mov
sbb
mov
push
test
leave
push
mov
call
sbb
dec
divl
fwait
adc
jge
add
mov
cmc
icebp
dec
xor
pop
ljmp
ret
sbb
add
pop
mov
add
mov
adc
les
sub
sar
add
push
sbb
sar
or
inc
in
rcl
stc
sti
sbb
xchg
clc
stos
push
jp
xor
jle
or
mov
clc
rol
lods
popa
or
aas
stos
jge
decl
mov
rcrb
mov
out
sub
dec
pop
lods
mov
pop
adc
rcrb
aaa
mov
mov
cmp
mov
sub
sub
enter
sub
sub
cwtl
loopne
jno
adc
pop
fsubp
add
pop
pop
pop
rolb
mov
dec
adc
inc
les
rorl
pop
leave
mov
dec
insl
mov
test
int
sub
dec
mov
fwait
mov
imul
mov
xchg
add
sbb
sub
sub
inc
lret
push
test
ret
out
pop
mov
xlat
stc
je
es
test
mov
pop
or
aas
or
push
arpl
pusha
bound
or
sub
adc
ljmp
subl
fldenv
mov
je
inc
inc
sbb
add
cli
sbb
loope
xchg
and
push
popa
movb
cs
and
ficoml
sub
clc
mov
mov
jne
fs
std
loope
icebp
sbb
test
xchg
add
pop
or
mov
jnp
sbb
pop
add
loope
pop
sbb
je
push
lcallw
add
add
sbb
mov
push
pop
test
pop
add
insl
cltd
cmc
add
add
or
pop
pop
test
add
bound
cmp
mov
mov
test
adc
inc
cli
icebp
xor
cld
imul
test
pop
sahf
cli
mov
push
inc
les
inc
int
mov
add
aas
add
or
iret
andb
add
or
shl
and
add
int
and
inc
mov
call
add
lahf
icebp
loopne
iret
sti
mov
pop
mov
or
adc
fwait
push
dec
popf
inc
push
pushf
xchg
mov
sub
ret
add
loopne
test
add
add
jb
inc
inc
stos
push
ss
inc
test
ret
mov
pop
insb
mov
mov
inc
rcll
into
fdivp
add
lahf
jo
add
repz
sbb
add
pop
outsb
int3
xchg
shlb
in
mov
push
lret
les
inc
lea
xor
mov
lods
sub
movsb
outsl
push
push
cmp
pop
sub
mov
iret
in
push
push
add
inc
xor
jmp
pop
pop
add
cmp
or
xor
cli
push
push
or
cli
jmp
xchg
popf
es
cli
testb
aad
std
into
add
fisttpll
call
lods
ret
fisttpll
out
xchg
push
fs
arpl
pop
add
mov
inc
in
mov
pop
and
add
js
jle
pop
outsb
inc
fistl
jne
es
testl
call
pop
add
out
adc
jne
in
adc
outsl
cmc
dec
test
out
cmpsb
and
shl
adc
or
dec
call
add
lcall
aad
xor
lea
mulps
incl
adc
les
sbb
addl
sbb
cli
dec
xchg
or
add
sbb
push
inc
addl
sub
cmc
mov
test
decb
push
xchg
test
inc
cld
jns
test
inc
jp
movb
ret
mov
add
add
inc
inc
or
add
stc
or
pushf
add
pop
out
lea
shlb
test
ljmp
pop
xlat
stc
mov
es
cmpsl
or
jecxz
fbstp
dec
sbb
mov
outsl
rolb
xchg
add
pop
mov
movsl
add
pop
movsl
mov
pop
sub
dec
and
enter
mov
dec
jecxz
mov
lcall
xchg
inc
mov
ret
mov
push
outsl
ds
dec
bound
stos
lock
mov
mov
idivl
push
xchg
inc
pop
mov
sahf
lock
sahf
nop
into
adc
shl
xor
call
add
mov
bound
roll
add
pop
addr16
pop
pop
subl
out
fcmovbe
xchg
inc
js
pop
bound
sub
add
pop
sub
fadds
dec
lahf
lock
rcr
call
std
int
insl
adc
pminub
mov
lret
mov
outsb
pop
cld
ljmp
add
add
insl
add
loope
fadd
add
push
test
jecxz
cmp
jp
mov
les
enter
leave
cmp
insl
add
loope
fadd
or
sub
jne
or
and
dec
orl
lea
enter
outsl
xor
cmp
ror
psrlw
jp
insl
lock
add
add
add
js
fistpl
add
jae
je
fldl
add
lock
add
cmp
aad
in
pop
ret
stc
fstpt
insl
inc
xlat
push
or
jbe
dec
dec
jg
xchg
int3
lret
sub
xchg
dec
es
adc
lretw
mov
xchg
hlt
mov
mov
std
jae
jle
push
inc
add
add
test
mov
aas
xchg
xchg
test
cli
les
cld
sbbb
and
lret
inc
xchg
jmp
and
sub
lret
dec
cwtl
paddsw
cld
mov
jecxz
or
sbb
lock
loopne
mov
sbb
jg
pop
out
sbb
jg,pt
inc
ret
or
lock
add
int
add
mov
inc
insb
enter
aas
addr16
mov
in
lea
or
fsubl
or
int
xor
xchg
mov
ss
lock
in
adc
push
sti
push
mov
or
pop
add
lods
push
or
mov
xchg
int3
cltd
nop
inc
sbb
adc
adc
cli
inc
or
jmp
mov
push
test
pop
test
mov
push
ret
pop
data16
xchg
in
pusha
jnp
xchg
fcmovb
out
dec
pop
add
popa
mov
sub
pop
mov
aad
add
dec
cli
jmp
popa
push
add
inc
jne
add
xchg
sub
pop
filds
mov
loop
stos
int3
rorl
jle
repnz
add
pop
push
push
repnz
cmpl
int3
repnz
loop
pusha
add
pop
sub
inc
pop
cmc
add
test
stos
pop
lods
dec
lea
loope
and
call
mov
push
loopne
testb
cli
data16
mov
push
mov
or
sbb
les
scas
mov
cmc
mov
xchg
gs
cli
in
or
push
add
mov
jp
mov
ljmp
test
jnp
or
shl
jnp
cmpsl
push
cld
leave
dec
xor
or
nop
aas
shll
jbe
adc
lods
add
push
xorl
add
sbb
add
les
cli
mov
aam
push
pop
cmpl
pop
bound
dec
enter
pop
dec
mov
mov
add
ret
cmpsl
cmp
out
fwait
lcall
xchg
add
out
sbb
fs
sbb
jecxz
adc
dec
test
or
rcr
dec
js
jmp
add
xor
lock
xor
mov
xchg
pop
sti
and
mov
inc
inc
bound
ss
or
jnp
add
push
pop
add
add
push
sti
push
rcll
stos
xchg
inc
je
jle
mov
adc
mov
xor
add
cmc
and
mov
incb
sbb
add
sub
sbb
loop
iret
call
cmp
cli
push
cli
mov
stos
mov
fcomip
sbb
or
ficoml
sar
cmpsl
in
cmp
dec
sub
in
imull
jl
lods
cmp
jns
mov
adc
add
cmp
inc
mov
jp
sub
mov
outsb
add
push
lock
push
in
lahf
cwtl
mov
pop
in
xchg
mov
or
pop
adcl
or
cmp
in
mul
xor
add
subb
sub
mov
jae
es
je
ret
mov
or
daa
decl
or
incb
rcrb
mov
shrl
pop
push
cmp
test
mov
out
mov
mov
mov
jae
in
int3
cltd
sbbb
add
xchg
push
xchg
lret
int3
call
dec
mul
cmpb
jle
pusha
add
sarb
std
dec
ja
mov
sbb
or
ja
mov
or
mov
adc
add
pop
data16
xchg
pop
data16
jo
loop
test
and
repnz
cli
cld
inc
not
add
push
cmp
jg
add
jne
call
ret
out
ret
out
dec
sahf
inc
out
out
fnsetpm(287
jnp
sahf
out
iret
fisubrs
pop
fidivl
pop
outsb
ds
shll
cmp
inc
pop
jae
jp
js
outsb
ds
jae
jp
jmp
pusha
shrl
inc
leave
sbb
leave
lahf
rorb
nop
or
mov
or
push
xchg
push
mov
leave
sbb
icebp
insb
sbb
mov
popf
int3
flds
scas
loopne
jno
pop
add
shll
inc
insl
pusha
outsb
mov
sbbl
add
aam
jecxz
pop
or
jg
jmp
js
or
fst
dec
stc
push
inc
arpl
dec
xor
jmp
mov
pop
jge
test
pop
cs
fs
push
ficompl
mov
pop
mov
add
jnp
pop
pop
addl
push
or
mov
sbb
nop
xor
addl
add
test
outsb
or
push
cld
jmp
inc
test
push
push
out
fcompl
bts
add
int
add
ficomps
xor
jb
mov
inc
jnp
les
add
les
lods
fs
mov
add
xor
fdivl
cmpsb
jle
adc
mov
or
jl
pop
pop
loop
sbb
divl
mov
movsb
sub
cmc
fsqrt
addl
in
out
cmc
fnstsw
enter
cmc
fisttpll
inc
mov
inc
enter
lods
sbbb
dec
aas
lods
adcb
inc
aam
mov
in
inc
jae
push
lret
pop
cld
adc
out
sbb
iret
sbb
add
stos
call
lds
adc
pop
loop
les
add
mov
iret
xor
shrb
dec
sahf
sarl
dec
outsl
aas
fdivrs
jecxz
stos
pop
aas
and
daa
push
cmp
dec
out
loopne
lods
mov
sbb
push
bswap
adc
les
aad
js
repz
les
cmp
sbb
or
pop
mov
stc
ljmp
push
pop
add
dec
add
mov
inc
or
hlt
or
pop
or
inc
rorl
les
int
imul
jmp
ljmp
jmp
subb
jb
hlt
aas
je
jne
je
mov
pushf
sti
aas
je
pop
dec
std
push
sbb
stc
mov
sar
in
ret
lret
punpcklwd
clc
fimull
inc
mov
mov
mov
pop
mov
xor
ljmp
push
add
xchg
pushf
add
and
add
fs
insl
fnstsw
dec
test
cli
testb
pop
jns
add
xchg
js
packsswb
pop
mov
push
mov
cmp
insl
adc
andb
push
orl
mov
jl
lds
jg
pinsrw
inc
lock
lahf
stc
aad
mov
mov
and
mov
mov
adc
cmpb
mov
lock
add
add
jb
shll
mov
imul
cmp
test
inc
pop
and
cli
sbb
mov
addl
adc
stc
fisttpll
push
mov
in
inc
jae
mov
pop
out
mov
sbb
push
out
sti
movsl
mov
mov
insb
popa
int
jmp
add
dec
rep
add
ljmp
sbb
aaa
pop
out
jecxz
jecxz
jnp
cmpsl
inc
cmp
aas
sub
call
pop
lret
mov
les
add
pop
setnp
inc
imul
or
clc
add
repz
aaa
jnp
xlat
out
les
or
ret
call
add
pop
out
pop
add
dec
mov
fstpl
shl
fcoms
dec
xchg
adc
aam
test
mov
mov
and
pop
addb
aam
call
fstps
call
pop
add
cs
fsubp
cmp
jmp
pop
fcmovbe
pop
test
mov
pop
test
add
sbb
jmp
inc
jb
push
push
cwtl
push
pop
pop
addl
adcb
sub
jp
loope
inc
sbb
dec
repz
inc
mov
in
ret
inc
sbb
sti
call
es
inc
std
insb
add
stc
je
and
adc
push
fs
pop
out
fiadds
je
cmp
cld
push
cli
insl
and
add
push
outsb
or
push
mov
pop
add
mov
cli
rorb
jns
call
mov
mov
lret
inc
cmp
add
les
mov
decb
xor
add
sbb
add
in
or
pop
test
jo
test
add
mov
cmp
hlt
call
add
call
data16
cld
sbb
cmp
addl
or
data16
mov
sahf
cli
inc
jmp
or
stc
call
cld
sti
dec
les
test
stc
pop
add
call
sti
loopne
ds
mov
xchg
push
hlt
add
cmp
lret
add
dec
push
dec
lds
push
loop
or
add
sbb
fwait
push
jge
pop
xor
fcoml
jbe
call
ret
out
ret
push
lcall
faddl
xlat
stos
add
jle
pop
dec
lds
push
push
mov
sbb
adc
pusha
fildl
les
pop
loopne
aad
xchg
in
dec
jg
in
pop
add
dec
out
jmp
add
rorl
xlat
insb
ss
roll
jb
mov
and
js
and
jae
jo
enter
rorb
jb
je
out
or
push
xchg
push
mov
leave
push
mov
pusha
or
or
push
mov
jo
out
sub
loop
stos
push
inc
mov
mov
loope
add
movsb
xchg
mov
sbb
cli
test
outsl
cmc
decl
rolb
inc
addb
ljmp
lret
ljmp
add
sbb
idiv
push
pop
adc
sub
addb
push
push
sti
je
cmp
adc
or
fnstenv
push
or
shlb
enter
addl
add
add
push
outsb
or
idiv
dec
push
mov
lret
xchg
inc
add
jns
incb
xchg
jg
dec
sbb
mov
inc
or
ficompl
ficoml
movb
les
mov
inc
or
mov
ret
fsts
pop
test
jno
cmpb
incb
aam
sbbb
mov
adc
test
cli
push
mov
jg
sub
xchg
cmp
mov
dec
jg
jl
lds
add
test
push
pushl
jp
add
scas
rcrl
mov
cmp
or
dec
sahf
push
fbld
push
dec
dec
add
imul
popf
fiaddl
les
inc
add
imul
lret
sbb
fwait
pop
jns
pop
loopne
into
fwait
into
cmp
call
pop
ljmp
push
outsb
leave
cmc
aaa
pop
hlt
sahf
scas
fistpl
cmp
insb
mov
jmp
mov
sbb
loop
cmp
imul
cld
jle
popf
test
shr
jmp
push
cmp
repnz
mov
cmpsl
and
rolb
fistl
cltd
les
je
cmp
push
rorl
xchg
shll
je
das
stos
icebp
push
xor
shl
stos
pop
jmp
pop
xor
ficomps
popf
push
adc
add
push
int3
scas
in
add
incl
scas
dec
insb
data16
inc
pop
sbb
or
add
jbe
jp
int3
jecxz
adc
orl
push
add
xchg
in
sbb
pop
jns
lea
or
and
add
fbstp
stc
push
data16
movsb
jb
test
aam
punpckhwd
clc
pop
cmp
stc
dec
sbbl
cmovnp
add
add
and
or
rolb
sub
adc
cmp
inc
enter
inc
mov
aas
outsb
hlt
es
mov
adc
xchg
or
cmp
pop
mov
and
jg
inc
lea
outsb
xchg
les
test
lock
jle
adc
jp
or
jo
add
inc
mov
andb
mov
sti
out
aas
les
inc
mov
lahf
testl
insb
fnsave
lock
clc
inc
jno
mov
xor
fstpt
sbbl
flds
sub
jo
in
fs
mov
out
mov
xor
mov
out
push
xchg
mov
adc
loope
lcall
adc
mov
xor
inc
in
fs
mov
add
mov
jmp
loopne
test
mov
mov
stos
fisttpl
xchg
adc
mov
sbb
fildl
shl
je
push
cmp
add
jmp
mov
add
sub
fiadds
icebp
pop
in
cmp
xlat
out
inc
sub
jmp
clc
fisttpll
jecxz
xchg
sub
jmp
ret
fdivrl
add
into
pop
popf
push
cmp
jmp
jo
jmp
out
mov
xchg
fcoms
jne
fcomi
mov
in
insb
lock
cltd
sbb
pop
mov
out
call
inc
loopne
inc
stc
inc
ret
bound
adc
mov
adc
jbe
in
push
jns
in
bound
xchg
pop
push
inc
add
push
add
dec
mov
push
xchg
loopne
fadds
cmp
mov
mov
jae
jl
or
jmp
push
cmp
xchg
icebp
jg
ret
mov
cmpsl
sub
clc
mov
jmp
dec
mov
add
inc
lods
add
cmp
or
jmp
adc
icebp
call
mov
outsl
ljmp
jmp
sti
cli
jecxz
and
mov
xor
daa
adc
jne
adc
out
cmp
add
popf
xor
sbb
fisttpl
inc
sub
jae
pop
cmp
jl
mov
fdivrs
addr16
les
mov
mov
jne
adc
or
xor
ss
cmpsl
jmp
cld
inc
in
ficompl
popf
cmp
jo
bound
bound
call
mov
lock
mov
into
stos
push
mov
mov
cmpb
ficoms
xor
in
sbb
in
inc
adc
arpl
andb
pop
cmpsl
pop
ficoml
in
in
adc
ss
lds
out
pmaxsw
inc
inc
xor
dec
lds
adc
roll
sahf
shll
sbb
mov
loop
data16
sub
adc
ja
loope
cmp
jne
push
iret
add
sub
idiv
mov
out
sub
sbb
idiv
xchg
loop
inc
jo
pandn
cld
pushl
loop
jl
sbb
test
idiv
pushw
fcomi
idiv
push
or
inc
mov
pop
cmp
int
imulb
jae
mov
ja
rol
cmp
iret
leave
ds
add
xchg
xchg
cli
jmp
xor
push
mov
inc
xor
inc
stc
pop
add
cmp
ret
call
out
int
outsl
gs
leave
ds
inc
testb
mov
mov
insb
testl
or
lds
mov
jle
hlt
cli
ret
test
xchg
cmovae
enter
dec
cli
out
dec
and
inc
inc
cli
and
mov
shlb
sti
mov
lea
lods
xchg
out
sub
mov
pop
arpl
fsubrs
sbb
ss
mov
cmpsb
aam
dec
pop
out
xor
ljmp
loope
mov
in
sub
lret
xchg
stos
sbb
dec
in
fs
push
cs
xchg
xchg
adc
xchg
fwait
xchg
lret
jno
add
mov
add
cltd
nop
enter
into
lea
sti
outsb
ss
mov
andb
insl
xor
gs
cs
inc
dec
and
cld
ss
clc
or
mov
dec
pop
add
dec
sti
push
push
outsl
sbb
pop
out
push
xor
mov
jp
jmp
xor
sub
out
cmpsb
sti
into
push
outsl
sub
add
pop
or
sub
and
pop
test
push
jmp
push
gs
add
pop
jns
stos
leave
testb
push
mov
cmc
push
add
pop
outsl
sub
lcall
daa
mov
testb
fcomi
call
pop
test
test
xor
inc
lcall
add
fdiv
ljmp
sbb
popf
pop
jle
cmpsb
lret
lret
lcall
lret
mov
cld
repnz
sbb
das
pop
push
out
sub
idivb
les
or
mov
xor
incb
mov
test
shll
or
dec
mov
sti
repz
lret
inc
decb
add
mov
fstpt
add
lods
ret
mov
mov
cld
stos
sub
mov
hlt
test
into
or
mov
sti
xor
mov
andb
mov
push
add
lret
shll
push
pop
mov
add
loope
nop
sub
pushl
call
les
sti
push
faddp
adc
data16
or
movsb
xchg
mov
aad
incl
push
or
aad
pop
mov
or
xor
adc
aam
jl
das
les
fcompl
cmp
lahf
stos
inc
mov
pop
ljmp
xchg
ficoml
pop
bnd
shrl
into
lock
rcrl
loope
dec
and
pop
add
rorl
mov
scas
or
and
mov
jle,pn
mov
jmp
fucomip
js
in
fiadds
pop
or
dec
pop
test
inc
rolb
cmp
jae
cli
push
lret
adc
or
cmp
jne
aas
pusha
fmull
and
je
pop
add
scas
lock
xor
add
dec
adc
insl
pop
pop
hlt
and
xor
pop
fmuls
push
adc
setns
out
mov
daa
jle
stc
pop
add
stc
mov
inc
and
lds
fstpl
jne
mov
lock
idiv
add
pop
pop
test
js
jmp
xor
mov
mov
imul
cmp
jle
gs
iret
xor
mov
leave
dec
shrl
mov
mov
xor
or
inc
and
stc
mov
mov
adc
pop
mov
cli
xchg
mov
add
mov
dec
stc
inc
jle
xor
fsubrs
dec
xchg
scas
jge
jb
std
inc
cmp
jl
mov
mov
or
mov
jae
dec
cwtl
mov
aas
mov
pop
sti
into
mov
loop
dec
and
mov
push
xchg
mov
rcrb
test
out
push
orb
imul
cmp
mov
and
popf
pop
pop
inc
or
lahf
sti
inc
add
xchg
sti
shlb
jmp
outsl
inc
test
jo
mov
pop
out
test
test
int3
fcomps
jge
cwtl
mov
sti
xchg
and
in
out
faddl
fwait
adc
stos
add
out
dec
adc
add
push
mov
loop
xor
cmc
nop
jmp
daa
aas
icebp
pop
pop
in
ds
call
or
inc
test
xchg
mov
inc
jns
pop
add
push
jmp
call
inc
mov
or
add
push
jnp
push
add
push
inc
xor
jle
inc
and
add
xchg
in
lcall
add
jo
loop
jnp,pn
add
cmp
shrb
add
in
pop
inc
insl
and
add
arpl
test
or
movsb
arpl
setae
aas
div
add
inc
pop
add
cmpsb
pusha
xor
arpl
adc
mov
imul
fs
cmp
out
push
int3
inc
jno
divps
add
popa
xor
les
xor
shll
mov
xor
int
jmp
or
xchg
cli
jae
add
les
inc
mov
in
shrl
sub
divl
ret
xor
in
inc
nop
je
jo
inc
mov
cmp
nop
rcrb
add
cmc
ss
sub
or
cmc
int3
rcl
lahf
clc
jl
xor
test
pop
les
scas
and
loopne
pusha
ds
or
jl
and
adc
test
xchg
push
mov
cmp
repz
fwait
jg
adc
jo
inc
mov
and
cmp
and
add
and
iret
fisttpll
lea
and
dec
ret
cmp
push
insb
inc
cld
and
mov
cmp
arpl
into
and
mov
inc
or
add
xor
shrb
cs
scas
insl
ficoml
es
push
es
aad
nop
xchg
adc
pop
cmp
jb
sahf
subl
stos
or
sbb
mov
scas
dec
mov
adcl
and
rcr
push
or
sub
xchg
xchg
and
mov
test
jecxz
lds
inc
push
push
aam
stc
aam
and
les
in
xchg
fadds
popf
sub
cmp
sbb
aam
mov
pop
insb
sbb
clc
ret
mov
popf
out
inc
jne
je
out
xor
pop
outsb
decl
pop
adc
add
call
bswap
pop
incl
push
lds
mov
pop
add
loopne
and
mov
sarb
push
lds
stos
pop
add
add
add
add
cmp
mov
xchg
sub
cmp
mov
cld
les
lock
decl
dec
xor
test
jbe
xchg
mov
andl
cmp
or
or
jo
or
jo
jle
add
mov
inc
sub
out
mov
aam
adc
mov
or
add
add
cmp
outsl
inc
add
jbe
test
divb
dec
pop
lods
mov
xchg
out
add
push
hlt
inc
ss
sarl
or
mov
mov
icebp
shll
stos
pop
mov
popa
mov
repnz
jecxz
rcl
cltd
ror
in
or
mov
pop
push
lret
leave
mov
xor
mov
lahf
adc
mov
jo
shrl
mov
pop
pusha
loope
bound
lock
pop
mov
mov
shll
in
jbe
push
or
sahf
fstl
aad
mov
add
test
xchg
pop
loop
push
mov
add
sub
idivb
pop
cmc
pushf
pop
testl
xchg
and
or
inc
cmpsb
sbb
add
je
insl
and
cmpsb
or
cmp
call
xchg
sarb
jg
add
test
rcll
fidivrl
add
sar
add
jbe
pop
or
lret
testb
push
dec
cmp
sbb
idiv
ljmp
dec
mov
aad
in
test
fdiv
orl
mov
add
add
cmp
cmp
sub
push
add
mov
flds
adc
jl
scas
adc
roll
pop
xor
cli
mov
rol
xchg
add
popf
cmpl
test
fstpt
scas
push
jp
inc
bnd
jecxz
shll
mov
and
cmp
mov
mov
xorl
cmpl
and
cmc
shrl
jae
jae
mov
inc
repnz
pop
iret
stc
mov
mov
add
xor
mov
mov
test
sbb
adc
call
inc
and
fimuls
lea
std
cmpsw
cmpl
push
inc
jb
out
js
outsl
into
fldt
rorl
jmp
inc
cmp
cmp
stos
lods
testb
movsb
jae
or
daa
mov
or
lahf
mov
mov
mov
cld
fbstp
test
movsl
jae
pop
out
ret
and
xchg
push
mov
movl
add
out
jecxz
invd
sbb
std
adc
sbb
sar
mov
fs
or
push
jge
fimull
pop
jmp
cli
jmp
pop
or
imul
mov
add
adc
out
ljmp
add
add
pop
xchg
push
test
inc
movsl
or
cltd
jp
mov
adc
sbb
push
add
xchg
loope
test
rclb
add
das
push
sub
xlat
ja
jecxz
cmp
dec
jae
scas
xchg
add
test
jecxz
add
daa
sub
pushl
dec
clc
sahf
cltd
inc
adc
movsb
and
jle
xchg
add
pop
adcl
push
testb
xchg
add
pop
add
lods
add
pop
xor
imul
mov
arpl
out
repz
adc
or
jbe
les
decb
inc
sahf
outsl
cli
xor
sbbl
add
add
stc
jnp
adcl
mov
xorl
out
dec
rcll
add
incl
std
or
inc
pop
fisubrl
test
repz
les
sbb
sahf
and
cli
inc
pop
movsb
incl
adc
cli
jae
adc
add
std
nop
add
add
les
mov
out
fstpt
add
pop
out
fstpl
pop
mov
adcl
adc
idivl
pop
call
jl
push
and
std
clc
add
les
mov
out
fstpt
add
out
add
pop
out
fstpl
data16
and
push
adcb
add
add
adc
or
lock
jnp
fdivr
test
add
rcr
sti
out
adc
sub
push
inc
cmc
pop
sub
jne
pop
add
pop
jge
shll
leave
pop
add
or
add
or
fiadds
out
xchg
imul
std
popa
jg
inc
push
cli
jmp
pop
adc
movsb
lret
push
inc
std
int
call
add
rcrb
sbb
xchg
lret
dec
mov
call
stc
push
xor
mov
push
pop
test
arpl
or
sbb
loope
pusha
orl
nop
idiv
mov
aaa
inc
push
adc
jmp
scas
lods
cmp
sub
pop
add
scas
cmp
mov
pop
adcl
add
sub
add
add
jp
loope
test
insb
nop
idiv
mov
adc
jmp
scas
lods
cmp
mov
pop
loope
scas
scas
cmp
cmp
push
addl
add
stos
lret
shrl
xchg
add
test
js
jae
or
add
clc
fsubrs
add
les
cmp
xchg
out
adc
imul
inc
movsb
or
les
push
dec
dec
xor
and
xchg
ja
sti
adc
mov
xor
xchg
clc
pusha
filds
xor
imul
in
les
or
ds
or
ffree
jb
adc
mov
xor
xor
add
outsl
scas
inc
out
inc
incb
sub
cmp
xchg
out
mov
dec
insl
pop
aad
addr16
arpl
sbb
stos
js
outsb
loopne
mov
rorb
stc
pop
adc
out
pop
ljmp
lods
jae
and
jno
pop
or
pop
dec
pop
pop
cli
and
mov
sbb
mov
scas
flds
loopne
outsb
mov
mov
mov
bound
fists
dec
shr
inc
cmp
insb
pop
xchg
mov
out
dec
lods
sbb
push
dec
fcomps
fdivr
adc
or
xor
in
pushf
sub
mov
dec
cmc
sbb
in
fisubs
xchg
in
fcom
rclb
bound
xchg
subl
aam
xor
sbb
dec
mov
add
mov
in
push
add
call
lock
fiadds
or
mov
add
clc
imul
clc
cmc
jne
test
mov
insl
pop
adcl
cmp
xchg
push
add
out
jb
xlat
jmp
jl
inc
adc
xchg
jl
cmpsb
iret
cmp
insb
jns
loopne
push
inc
ss
xchg
insl
push
add
test
andl
sbb
test
pop
les
jp
mov
pushf
add
ja
les
decb
inc
call
jb
mov
leave
adc
mov
jb
adc
add
or
inc
push
jg
or
add
pushl
je
inc
sub
or
jae
cmp
decb
inc
adc
and
ss
lock
iret
inc
call
cli
sti
or
aad
jbe
pop
sub
out
les
or
rcpps
add
xchg
add
scas
ud0
pop
pusha
pop
popf
movntps
leave
pop
arpl
lea
adc
fwait
adc
jne
adc
add
daa
bnd
fucomi
push
iret
mov
dec
punpckhwd
pop
out
iret
movsl
jne
cli
sbb
sbb
mov
push
push
or
into
fstpt
push
por
js
data16
xchg
cmp
repz
add
repz
pop
psubd
enter
push
adc
test
add
sbb
cs
inc
cmp
inc
aad
sbb
fs
cli
fdivl
cli
push
adc
ljmp
add
repnz
testl
push
xor
aaa
adc
jo
push
test
fistpll
daa
and
jge
mov
cli
out
or
add
rcll
xchg
adc
add
jl
sub
mov
cmp
idiv
push
push
insb
fcmovbe
out
sbb
dec
xor
bound
add
mov
jmp
aaa
dec
xchg
std
xlat
jmp
in
push
cmp
idivb
dec
sub
idiv
jp
cli
mov
push
add
out
mov
les
push
jl
scas
mov
pop
mov
sets
push
insb
hlt
addb
add
mov
add
mov
mov
sarl
ljmp
jnp
adc
inc
decb
jecxz
or
jo
xchg
add
xor
enter
inc
loopne
cli
jae
outsb
inc
add
sbb
adc
arpl
std
outsl
or
cmp
add
and
cld
rorb
lcall
add
add
int3
clc
ds
sbb
xor
mov
notl
add
add
loop
js
and
das
lret
or
test
xchg
pop
push
les
pop
xlat
les
add
jmp
rorl
push
sbb
fistps
xchg
stos
je
add
filds
movsb
cli
not
fistps
jno
pop
ljmp
or
mov
adc
cmp
lret
add
out
add
pop
jno
les
jg
or
mov
es
pop
mov
ret
loope
sbb
inc
dec
mov
jmp
add
aad
ljmp
mov
idivl
rolb
mov
scas
adc
roll
lahf
adc
adc
lcall
or
add
sub
jecxz
pop
test
test
mov
popl
rcrl
add
or
sub
jg
ljmp
add
add
add
add
push
popa
add
call
jbe
scas
xlat
pop
add
test
or
pop
orl
push
push
lcall
js
sbb
adc
lcall
or
sub
iret
jns
dec
sbb
sti
pop
lods
loope
mov
fcomip
sbb
cmpb
add
push
cmp
cmovo
repz
pop
dec
mov
push
cmp
enter
repz
jle
xchg
std
inc
repz
or
add
les
mov
decl
sub
nop
clc
pop
ret
push
add
push
pop
stc
mov
clc
pop
push
sar
xor
ja
mov
cli
push
add
mov
add
icebp
std
mov
insl
push
pop
mov
imul
je
add
adc
xor
lcall
xchg
pop
push
adc
adc
test
pop
xchg
insl
push
fisubs
add
ret
incb
or
cmpb
mov
pop
daa
aam
cld
adc
push
cltd
test
andb
add
mov
idivl
push
outsb
cmp
daa
sub
sbb
xchg
add
adc
add
pop
adc
int3
pop
add
int3
sahf
and
ja
je
inc
leave
add
xor
lahf
push
aaa
bound
rolb
loope
sub
adc
mov
adc
loop
add
xchg
add
push
cli
pusha
stc
jbe
in
add
nop
jbe
stc
jbe
sahf
and
adc
or
bound
xchg
inc
bound
les
push
ss
jb
add
pand
loopne
rcr
wbinvd
add
jns
outsl
xorl
pop
movsb
in
sub
push
dec
call
and
sbb
int3
mov
sbbl
rclb
mov
je
jbe
divb
jo
or
xlat
cmp
mov
add
mov
cld
pop
jno
dec
inc
jb
mov
add
push
sbb
rcpps
jne
add
add
or
add
sub
jne
pop
sar
push
or
out
pop
pop
test
add
inc
or
cmc
call
push
cld
dec
hlt
pop
call
xor
loopne
js
add
repnz
mov
pop
mov
cmp
mov
dec
ss
xchg
std
inc
jp
out
enter
jo
sti
data16
je
mov
std
ljmp
icebp
jp
loopne
jl
call
lret
mov
cli
sbb
mov
add
aas
les
lock
push
bound
adc
mov
push
push
punpcklwd
repz
fisubrs
fiadds
jecxz
into
fnstsw
mov
rcrb
and
clc
push
xchg
call
inc
and
fidivrs
nop
mov
xchg
push
pop
mov
iret
or
dec
inc
fdivrs
outsb
out
repz
iret
sbb
xchg
pop
jge
push
outsb
out
rcll
jle
fs
imul
pop
add
xor
inc
inc
pop
add
clc
sahf
and
xchg
add
leave
add
jae
or
xor
bound
shlb
out
xor
mov
mov
and
cmp
push
sbbl
pop
add
xchg
sti
stc
mov
fsubs
dec
cmp
add
add
movl
or
inc
faddl
dec
flds
lods
mov
xchg
or
inc
out
jmp
add
sbb
shlb
pop
cmp
jmp
xor
pop
add
sti
sbb
setnp
cld
mov
and
loopne
mov
add
in
test
xchg
je
sahf
sti
int
push
addr16
mov
pop
mov
mov
stos
addb
sbb
lea
push
add
data16
sub
jge
addb
pop
jg
orb
cltd
loop
les
movsl
cmc
bound
nop
mov
test
jg
add
repz
xor
push
inc
cli
mov
or
mov
mov
std
jle
out
and
sub
and
test
and
push
mov
mov
add
aas
hlt
rcrb
fwait
loopne
sbb
mov
popa
je
fdiv
or
add
cli
dec
aaa
adc
pop
call
add
inc
out
add
cmp
fstpt
pop
out
dec
sbb
jle
js
sub
push
pop
out
inc
xchg
pop
inc
sbbl
rcrb
add
mov
lcall
sbbl
sbbl
push
popf
add
pop
inc
mov
xorl
inc
mov
jnp
out
add
int
je
decl
shl
jp
mov
add
sbb
mov
cli
push
in
adc
and
dec
test
xchg
pop
test
fsts
fadds
cli
push
lods
adc
call
ljmp
sub
repnz
sub
xlat
push
cmc
pop
stc
pop
add
add
xchg
rclb
cli
mov
cmpl
icebp
outsb
mov
in
pop
xchg
clc
rcrb
imul
pop
stos
dec
jbe
sbb
or
add
inc
loope
pop
ja
test
push
jle
lods
pop
add
push
ja
and
pop
cmc
jne
or
push
push
or
mov
xor
loop
cmpsl
jbe
test
std
stc
jmp
xor
mov
divl
int
hlt
or
mov
ret
cmp
pushl
insl
adc
sbb
jmp
pop
inc
clc
les
out
js
jnp
lret
fcoms
pop
lock
xlat
enter
push
adc
add
pop
out
dec
or
cli
fildll
add
add
addr16
mov
and
and
icebp
decl
push
pop
out
cli
flds
pop
je
imul
inc
add
mov
repz
cmp
cmc
and
xchg
ja
in
les
pop
push
pop
mov
adc
lea
dec
cmpsl
ret
cmp
and
add
bnd
mov
inc
and
mov
cld
push
ret
dec
movsl
cld
dec
adc
outsb
dec
fisubrl
addr16
cwtl
push
gs
mov
inc
imul
mov
jae
pop
cld
or
mov
jl
loop
cli
xlat
sbb
bound
xchg
sti
pop
hlt
cs
pusha
cwtl
push
mov
xchg
mov
push
out
add
add
shll
mov
push
adc
mov
cltd
sbb
jmp
insl
lock
sub
addr16
inc
lcall
fisubrl
sub
test
xchg
pop
repnz
push
mov
and
or
idiv
push
inc
xchg
and
ds
and
sbb
test
add
sti
cli
je
aam
out
arpl
cli
dec
stc
pop
mov
jae
lahf
mov
add
jp
shl
dec
add
push
inc
cmp
jp
aam
jbe
incl
aas
jl
xchg
push
test
mov
xor
addb
mov
push
push
pop
or
scas
in
jnp
push
popa
push
mov
incl
out
push
inc
hlt
sub
mov
inc
push
jmp
out
clc
je
push
outsb
inc
push
push
insb
and
xchg
in
lcall
xor
std
pop
les
sbb
mov
and
mov
pop
je
popf
add
jns
xchg
jmp
cld
xchg
xor
mov
xlat
or
dec
or
sbb
lods
lods
pushf
inc
jl
and
add
and
mov
add
xor
sub
jg
cmpsb
pop
cli
ret
jno
lods
push
or
cli
pop
push
adc
and
pusha
xlat
sbb
pop
je
jl
push
xor
cli
mov
repz
cwtl
iret
mov
clc
rorb
jo
out
dec
lahf
add
dec
lahf
or
xor
add
out
fdivrp
into
mov
out
orb
pop
outsb
int
cmp
mov
push
pop
pop
add
fsub
test
pop
adc
ss
fisttps
ret
divl
pop
adc
pop
inc
sbb
test
movsb
daa
xchg
add
sarl
clc
mov
dec
or
cli
fiadds
mov
loope
into
imul
leave
fisubrs
xchg
hlt
stc
and
hlt
jae
in
idiv
adc
xchg
sti
dec
test
and
jle
pop
call
add
pop
add
lods
add
add
xrelease
loop
or
pop
test
in
or
icebp
hlt
test
cmp
sbb
cmp
jae
cmpsb
and
test
punpckhdq
loop
call
jo
push
test
inc
addl
push
push
mov
push
inc
sub
out
jp
fsubl
aad
xchg
testb
addr16
aas
xchg
testb
fcmovnb
cli
pop
sldt
add
add
push
or
aad
pop
fcomi
or
pop
add
inc
adcb
repz
ja
cmp
add
inc
xchg
rcr
in
inc
andb
sbb
pop
jo
sbbb
stc
push
test
incl
add
push
out
push
jle
mov
loop
cli
icebp
mov
iret
jle
ljmp
adc
add
test
pop
xor
mov
jle
push
pop
subb
fs
pop
dec
lret
or
dec
add
or
cmc
out
or
pop
out
ljmp
pop
pop
leave
xlat
in
jecxz
enter
add
pop
mov
push
call
adc
pop
fcomip
loop
pop
leave
imul
jmp
aam
arpl
hlt
jb
add
shl
and
adc
xor
lea
shl
mov
imul
add
push
ffreep
fsubp
jbe
es
cld
std
xchg
repnz
or
mov
ds
xchg
cmp
or
pushf
xor
hlt
cmpsl
sub
hlt
aad
add
sahf
or
jmp
test
add
das
test
add
push
outsb
or
movsb
data16
pusha
test
add
inc
test
repz
stos
mov
js
xor
das
mov
add
xor
pushf
mov
stos
xchg
xor
and
test
sbb
sbb
cwtl
sbb
aam
sbb
mov
test
sbb
or
sbb
int
sbb
scas
ljmp
cmp
sbb
outsl
push
cli
jge
sbb
cli
xchg
sub
cli
mov
and
cli
loopne
sbb
cli
notl
cli
mov
cli
dec
outsl
sbb
add
cli
pop
hlt
pop
cli
repnz
add
add
pop
cli
lods
data16
adc
cli
mov
mov
ffree
call
push
ret
incl
jne
dec
jl
incl
jge
push
xor
ret
incl
push
ret
call
ret
pushl
mov
ljmp
lret
cltd
enter
fnstsw
jmp
add
testl
add
ret
jmp
push
mov
testb
aam
int3
or
cld
adc
mov
pop
add
mov
or
loop
add
cmpsb
cmp
sub
inc
cvttps2pi
aas
stc
int3
or
mov
cld
mov
xlat
adc
sub
mov
sbb
xor
mov
sbb
into
xor
sub
test
int3
dec
xorb
jmp
movsb
shl
pushf
rcr
mov
shl
lods
ror
popf
rol
popf
sarl
sahf
shrl
repz
test
cltd
xor
lock
ss
adc
sbb
lock
cmp
test
out
add
lock
aaa
add
lock
adc
lock
push
lock
cmpsb
push
lock
push
lock
movsl
push
lock
popf
push
lock
push
lock
lea
lock
push
lock
mov
out
shrb
imul
pop
ss
lock
cmp
sbb
cli
insb
add
sbb
push
testb
add
pop
out
out
pop
ljmp
loop
or
mov
mov
rorl
in
call
repnz
repnz
dec
std
in
push
rorb
popa
out
fstl
adc
push
test
loop
add
nop
ljmp
add
hlt
std
inc
sub
pop
mov
test
fs
cli
lret
and
sbb
lea
or
xchg
les
sub
push
mov
push
cli
push
imul
mov
cmp
sub
jmp
inc
jbe
lods
jae
mov
adc
dec
dec
sahf
add
cli
xchg
js
out
lret
popf
dec
cli
aas
mov
icebp
pop
cld
in
nop
push
add
pop
xor
mov
xor
add
xchg
jecxz
cmp
movsl
sub
dec
lahf
popl
push
pushf
repz
pushf
pop
data16
jg
dec
add
pushf
jecxz
pop
and
lcall
mov
push
sbb
inc
cmp
imul
pusha
mov
loope
sti
add
in
push
add
lcall
push
in
pop
lret
sar
stos
sbb
out
insb
in
lret
bound
jl
data16
rcrb
jmp
fs
icebp
stc
xchg
cmp
stc
xchg
push
inc
ljmp
stc
outsb
adc
push
je
icebp
stc
push
clc
xchg
pushf
inc
jecxz
and
add
xchg
not
inc
icebp
enter
pop
sub
push
mov
jo
shl
ljmp
and
push
push
ret
inc
rcrl
stc
dec
or
pop
and
fldl
aas
cmp
cltd
jecxz
add
pop
cli
jae
pop
add
std
push
je
push
add
adc
cmp
add
mov
popf
push
add
insl
rol
out
mov
in
dec
incl
mov
incl
xor
or
mov
mov
lea
inc
lea
call
outsl
test
testb
aad
pop
les
pop
repz
add
jl
inc
or
cmp
add
add
add
xchg
cmpl
pop
sub
leave
sub
pop
std
mov
roll
sti
mov
insb
and
cli
jnp
sub
lret
sbb
std
decl
repz
out
jl
ja
sti
inc
dec
jl
dec
clc
adc
sub
jmp
cltd
cli
cmp
or
jge
daa
fimull
pop
lcall
shrb
lcall
pusha
dec
push
xor
inc
mov
xlat
xor
mov
subl
std
mov
orb
adc
push
dec
adc
jmp
aam
jbe
repz
inc
ljmp
sti
sub
pop
sub
add
add
fldl
add
mov
xchg
add
lahf
dec
push
jmp
add
in
repnz
or
lsl
shr
pop
add
pop
xchg
loopne
mov
stos
test
pop
add
inc
xchg
lock
adc
sub
fists
sub
sbb
hlt
mov
inc
xor
cli
mov
mov
repz
cmpsl
add
cli
clc
movsl
push
or
mov
sbb
cmpsl
inc
cs
in
popf
in
jae
mov
sub
push
jp
xchg
add
idiv
xchg
mov
testb
dec
loope
jbe
mov
pusha
adc
cli
push
clc
ja
popa
cmp
idiv
sbb
push
sbbl
ljmp
je
aaa
push
add
add
mov
cmp
add
sbb
or
fwait
cmp
or
xor
insl
ss
cmc
push
mov
bound
jecxz
or
and
add
pop
fs
cld
es
jb
xorl
jb
or
lock
jno
shl
in
aam
inc
cmp
or
inc
imul
lret
jg
call
lock
pop
inc
jbe
cli
ret
mov
mov
cmp
je
jns
sti
mov
inc
dec
cli
xchg
insl
xchg
aas
mov
out
fisttps
dec
scas
dec
test
mov
popf
dec
xchg
test
ret
popl
sbb
xchg
js
xor
or
xchg
testl
dec
fcomps
les
sarl
pop
cltd
push
push
insl
jnp
js
mov
outsb
lock
fwait
mov
cli
xchg
fcmovnbe
int3
fcmovu
std
xor
jge
out
leave
mov
mov
mov
add
repz
shl
add
addr16
test
movsb
dec
mov
and
add
sahf
add
mov
pop
add
ds
or
loope
dec
sbb
repnz
ret
push
pop
add
stos
or
lret
xchg
lock
sub
jmp
rcrl
or
pop
add
push
sahf
shlb
loopne
adc
xor
stc
push
out
stc
xchg
sub
sub
ret
jb
into
sarb
or
pusha
inc
cmp
pushw
cld
sbb
loopne
and
or
pushf
jecxz
add
jne
gs
mov
div
cmc
jmp
loopne
out
sbb
hlt
cmc
call
adc
mov
push
xor
and
add
push
jg
ret
xchg
idiv
xchg
out
fs
add
push
cmpl
mov
add
add
cmp
bound
lea
xchg
je
lods
fcomps
idiv
adc
adc
idiv
call
pop
add
les
sarb
adc
xchg
lahf
jle
cli
inc
xor
shll
inc
cli
in
stc
lret
xchg
sar
pop
std
jae
addr16
or
dec
xchg
xchg
cmc
add
mov
pop
pop
or
mov
push
inc
pushf
inc
or
push
or
pop
sbb
mov
clc
pop
cmp
test
inc
bnd
xor
cli
xchg
test
inc
daa
mov
jne
pop
stos
jp
fimuls
cmpsl
xchg
je
pop
loop
pop
jo
inc
dec
mov
add
or
add
loop
iret
jnp
xchg
arpl
outsb
fstpt
add
loop
xchg
sahf
out
testl
outsb
inc
fdivl
sbb
inc
adc
and
pop
roll
rorb
les
mov
cmp
outsb
mov
dec
xchg
jecxz
sbb
add
adc
or
add
jae
dec
mov
add
add
pop
push
insb
les
push
bound
stc
inc
or
icebp
pop
fadds
inc
mov
push
and
or
dec
and
stc
push
into
xor
and
fmull
cmp
out
in
push
les
rol
xlat
inc
subl
cli
jmp
pop
sub
adc
cmp
cs
adc
mov
push
jne
test
add
mov
stc
xor
pop
test
or
add
and
xor
mov
in
stc
aas
xchg
fs
or
mov
fs
adc
mov
std
mov
mov
xchg
test
das
jecxz
push
data16
fisubl
fidivrl
lods
dec
mov
fidivrs
pop
ss
add
incl
rclb
aas
sub
xchg
fiaddl
jnp
dec
cmp
jp
ljmp
jg
enter
vpaddw
shll
cmp
or
call
std
xchg
enter
icebp
std
repnz
clc
jns
icebp
std
jg
clc
std
jae
or
jmp
lock
inc
insb
cs
std
incl
cli
add
rolb
xchg
adc
or
sbb
sbb
jecxz
out
sti
pop
inc
pop
rorl
jg
fsubp
mov
mov
out
into
xor
repz
add
add
fistpl
shll
pop
hlt
shll
pop
cmpsb
repz
xchg
sti
pop
in
cmpsb
jmp
sbb
push
sbb
repz
jl
mov
sbb
jecxz
fstl
dec
lcall
push
loopne
mov
fnstcw
push
ljmp
nop
into
inc
in
ja
stc
adcl
or
or
pop
add
fidivl
xchg
stc
call
fsubr
push
jmp
cli
inc
pop
pop
jnp
enter
xchg
inc
cmp
sub
sbbb
push
add
xchg
repnz
icebp
jg
call
mov
add
rcrb
rolb
add
das
jmp
test
add
xor
in
mov
idiv
and
mov
pop
movsb
add
add
mov
push
addl
dec
add
add
or
mov
xor
bound
pop
pop
adc
aad
inc
call
ret
pop
nop
cli
lcall
andl
add
cltd
testb
add
js
adc
xchg
add
sbb
cld
lret
adc
mov
mov
js
rolb
test
aas
cli
inc
mov
test
std
aas
xor
xchg
ljmp
mov
fistpll
fiaddl
inc
je
stos
cs
adc
sti
inc
push
dec
incl
cmp
inc
push
aas
sub
add
xchg
xchg
and
dec
mov
add
test
je
js
out
pop
sub
jecxz
and
cmp
fldt
mov
add
fidivl
adc
sbb
shll
arpl
lea
fisubrl
sbb
dec
ret
cltd
out
fisubrl
inc
sar
pop
push
pop
mov
sub
add
sub
mov
dec
movswl
in
add
aaa
push
add
mov
jecxz
fidivs
add
pop
cmp
pop
out
add
add
dec
cmpsb
call
dec
sbb
lcall
lret
pop
or
add
repnz
sbb
jmp
add
cmc
jmp
pop
ljmpw
mov
push
cld
jbe
leave
call
and
lds
jg
negb
jmp
dec
aam
cli
cli
nop
shl
jecxz
jmp
xor
sub
cli
sub
hlt
mov
sarl
inc
inc
cwtl
idiv
inc
js
andl
add
cltd
xor
xchg
sti
je
jmp
inc
jp
idivb
test
ljmp
test
cltd
notb
push
dec
jmp
add
xchg
idiv
mov
stc
lcall
jecxz
ljmp
decl
ljmp
cli
adc
lea
stos
loope
pushf
xchg
testb
les
je
mov
popa
dec
inc
cltd
sti
sti
fdivs
vpaddw
pop
add
clc
aas
xor
subl
or
mov
rcl
cmp
vpaddw
mov
mov
and
jb,pn
enter
xor
ret
lds
test
add
add
negb
mov
inc
cli
xor
inc
inc
int
or
pop
pop
out
cmp
or
test
add
je
inc
sbb
das
aam
das
je
xlat
xlat
fidivrl
xlat
pop
and
insb
or
pop
ret
loopne
or
push
xchg
cmp
jb
ret
mov
ja
mov
lds
sub
adc
cmp
and
add
adc
add
pop
outsb
mov
test
dec
add
add
aaa
pop
pop
cmpb
add
inc
mov
inc
or
pop
stc
jmp
pop
out
sbb
scas
fmul
pusha
cli
lds
jmp
je
shlb
in
push
push
ret
add
inc
sbb
sbb
mov
sarl
ljmp
in
cmp
add
leave
mov
mov
mov
xchg
test
mov
pop
jbe
jae
cmp
movsb
inc
enter
and
lock
test
mov
xlat
pop
movsb
sub
pop
cmp
js
loope
or
pop
hlt
js
orb
leave
aad
outsb
cmp
push
mov
cmp
pop
shlb
inc
adc
xor
mov
cld
xchg
imul
outsb
in
or
lcall
insb
fldl
fiadds
sub
lods
cmc
xchg
sar
add
rcrb
out
xchg
stc
adc
aaa
iret
subb
cmpsl
dec
mov
fdivrl
add
pop
sbb
pop
and
cli
pop
jns
inc
mov
xchg
dec
xlat
cmp
xor
cli
xlat
add
inc
fcomps
repnz
xchg
push
jge
add
sbb
sub
jns
push
aas
into
add
test
test
add
push
mov
pop
mov
stos
aaa
sub
xchg
pop
sub
cmp
xlat
mov
loopne
lea
pushf
movsb
dec
sti
loope
inc
cmp
pop
sub
jp
cmp
fidivrl
pop
out
mov
arpl
ret
inc
loop
cmp
add
pop
and
fidivl
incl
add
scas
cmp
popa
fs
les
inc
or
out
stos
fildll
imul
sub
rcr
add
jmp
cmp
cli
xlat
iret
and
push
pop
add
xor
aam
sub
mov
aam
xor
push
call
sbb
pushf
dec
and
repnz
add
aam
jo
mov
sar
test
pop
add
aaa
mov
fildl
pop
jge
test
shl
inc
lea
stc
fdivrp
lcall
addl
or
or
add
inc
hlt
fidivs
jl
cmp
add
iret
jl
cli
dec
movl
add
shlb
add
pop
addl
pop
add
repz
adc
or
pop
xor
scas
sbb
inc
dec
iret
inc
in
stos
orb
std
sbbb
stc
jae
in
jg
test
enter
jl
loop
shlb
inc
adc
mov
decb
je
fdivs
mov
inc
shll
jns
jns
cltd
mov
lea
shl
mov
inc
lock
test
shr
ror
push
or
mov
xor
jge
shl
or
out
inc
xor
jmp
test
sub
mov
or
add
add
iret
mov
xor
jg
dec
shrb
scas
xchg
inc
scas
ret
das
sub
popa
ss
das
dec
adc
jo
jmp
lods
cmp
jecxz
pop
dec
dec
aas
sub
loopne
xor
js
incl
jo
mov
sar
or
scas
sub
fidivl
lcall
add
mov
add
movb
subb
stc
mov
add
lret
sub
sti
sub
sub
xchg
pop
lock
popa
in
cmp
cmp
adc
jno
loope
add
pop
test
sbb
cs
push
sub
push
mov
xor
ljmp
add
add
jecxz
add
test
into
cli
hlt
out
pop
inc
jmp
or
add
push
add
jge
ljmp
sbb
mov
mov
mov
push
xchg
cmpsl
or
mov
mov
fsts
push
test
push
add
test
add
sbb
mov
movl
push
pop
call
mov
mov
inc
int
add
fst
mov
mov
xchg
jmp
pop
add
les
sbb
stos
jae
push
sti
fs
dec
hlt
scas
js
inc
enter
cs
mov
inc
and
mov
add
push
add
js,pn
dec
xor
std
ljmp
sar
xor
mov
adc
int
out
inc
mov
movl
xor
add
inc
sti
rcll
inc
push
cs
jecxz
jp
out
addb
loop
lret
frstor
lret
rcl
stos
pop
pop
xor
lcall
add
lret
mov
add
mov
outsb
lret
mov
mov
fbld
inc
bound
mov
sub
xchg
sbb
adcb
lcall
push
lret
idivb
inc
push
cld
mov
stos
clc
xor
adc
inc
xlat
sbb
mov
call
xor
popf
fldl
lods
xchg
sbb
add
dec
out
les
inc
cmpsb
not
hlt
sbb
movsl
lock
stc
shrl
cmp
add
cmpsb
dec
sbb
mov
dec
or
xchg
dec
add
clc
rorb
lret
roll
rol
cmp
sar
sbb
jb
hlt
dec
or
pop
lret
xchg
leave
push
aam
stc
ss
or
lds
push
insl
add
push
test
pop
add
in
pop
add
pop
dec
jne
fimuls
adc
add
leave
mov
data16
jp
cmp
jp
xchg
add
call
lods
add
mov
add
loopne
lcall
push
out
add
lds
jo
or
inc
jmp
call
add
sub
jns
mov
dec
mov
inc
dec
fsubrs
rol
xor
mov
sbb
xchg
int3
sub
inc
jae
test
std
decl
push
out
lods
sub
fldl
lock
adc
mov
mov
sub
subl
incl
stc
mov
sub
mov
mov
add
mov
sub
add
xchg
ljmp
add
pop
dec
mov
mov
mov
dec
cmp
add
mov
adc
iret
mov
or
sub
and
sub
ret
cli
or
test
pop
and
sub
ret
adc
or
add
push
cli
sub
ret
das
ljmp
mov
xor
scas
arpl
je
ja
xor
sub
xor
insb
sub
pop
imul
sub
fistpl
jecxz
dec
lret
aad
jo
push
sub
rsm
jns
inc
inc
cwtl
aas
aad
enter
dec
ljmp
dec
add
mov
push
iret
adc
jae
push
outsl
inc
in
rolb
mov
out
mov
mov
mov
dec
xchg
jg
xchg
jmp
stc
jg
sbb
icebp
sar
nop
ffree
mov
xorb
cmpsb
inc
lcall
pop
cltd
je
dec
mov
std
jo
and
cli
jbe
sub
stc
data16
test
pop
xlat
inc
inc
pop
mov
jge
add
lds
push
lret
cli
mov
mov
xchg
loope
or
mov
jle
add
pop
divb
popa
call
rcrl
cs
and
lret
popf
fnstcw
or
addb
pushl
jb
popf
or
imulb
fs
jg
mov
jne
fmull
mov
sarb
pop
pop
add
es
add
outsl
bound
mov
sbb
push
and
ret
out
lea
cli
ja
sbb
stos
jl
xchg
iret
out
inc
xor
call
dec
ret
test
dec
inc
rol
out
xor
xor
les
pop
push
ficomps
in
testb
ja
sbb
sbb
adc
xchg
jmp
jl
push
xor
inc
lds
add
xor
mov
adc
add
pop
leave
addb
jle
es
repz
scas
mov
pop
inc
je
dec
ret
insb
inc
push
jo
jb
ds
add
mov
jl
mov
push
aaa
popa
inc
test
adc
mov
xor
into
and
or
lahf
mov
out
mov
cld
sub
sbb
sub
push
xchg
mov
xor
sbb
ret
mov
pop
add
sub
push
je
mov
add
pop
ret
jle
or
orl
stc
cltd
popa
ret
cli
mov
add
shll
push
xor
cld
pop
outsb
inc
jmp
pop
cmp
sti
imul
sub
mov
test
mov
fadd
stc
xor
arpl
in
inc
jnp
fsts
or
adc
dec
inc
jmp
and
shrb
add
inc
inc
add
inc
clc
pop
repnz
jb
lock
add
add
push
push
jb
test
notb
push
jp
jns
idiv
and
stc
push
mov
mov
idiv
pop
andl
call
lret
call
mov
lcall
pop
jns
jne
divb
pop
rolb
test
xor
pop
inc
repnz
rcl
jns
add
jmp
je
xor
cmp
mov
jle
enter
xchg
fistl
icebp
xor
cmpb
scas
and
sub
cli
aas
mulb
mov
loopne
mov
dec
jp
hlt
xchg
inc
test
lret
imul
cmp
mov
std
test
mov
cmc
add
mov
std
jg
pop
icebp
add
std
decl
or
int
inc
mov
pop
mov
loopne
pop
es
push
pushf
call
add
fisubrl
mov
mov
sub
shrb
pop
mov
sarb
sbb
cltd
and
iret
into
and
rol
data16
jmp
out
nop
dec
incl
add
fistpll
push
into
sub
push
ror
adc
pushf
jle
mov
loop
ret
aad
cmc
inc
cmc
out
les
pop
dec
stos
mov
adc
dec
insb
add
flds
in
mov
test
xlat
add
js
pop
or
cli
rclb
inc
lock
mov
mov
insb
loop
test
push
test
popf
outsl
std
roll
xlat
inc
cmc
jmp
dec
stc
mov
into
inc
jmp
into
add
pop
mov
outsl
mov
push
test
int
mov
call
sub
aam
insb
inc
jmp
jb
call
bound
xchg
lds
sbb
pop
mov
mov
aas
cmp
jnp
inc
ja
mov
xchg
push
pop
and
adc
add
sbb
cmc
ret
call
inc
mov
pop
xchg
cld
add
clc
lds
push
fs
sub
addb
std
xchg
adc
test
add
ss
add
je
jecxz
lea
jg
call
les
out
fwait
jo
mov
add
clc
popf
push
mov
cwtl
mov
mov
das
or
cmpsl
insb
and
cli
pop
cmp
pop
inc
aam
std
idivb
dec
cmp
dec
jle
cmpsb
mov
jg
nop
add
add
adc
lds
push
push
mulb
xchg
test
addr16
std
xchg
mov
push
hlt
sub
ret
xchg
jmp
nop
add
mov
add
add
mov
add
xor
and
dec
fs
or
or
and
divl
loope
pop
cmp
inc
lcall
repnz
inc
jae
xlat
xor
mov
movl
dec
int3
and
daa
sub
pop
out
add
loope
in
outsl
sbb
mov
inc
fidivrl
stos
and
roll
lods
iret
mov
push
ret
add
inc
push
ret
add
into
inc
aad
into
inc
sarl
mov
xor
stc
xor
enter
pop
add
push
mov
or
cli
aaa
shlb
shlb
fsubs
in
shr
arpl
call
fnstcw
mov
pop
mov
jae
test
dec
pop
movsl
cmp
adc
mov
mov
lcall
add
jmp
std
add
loop
add
add
sbb
inc
adc
lock
add
cmp
adc
mov
stc
inc
or
shr
incl
push
dec
call
push
adc
out
add
cmpsb
or
or
out
adc
and
or
mov
inc
hlt
sbb
notb
les
ret
xor
out
inc
pop
cli
cmp
nop
inc
inc
mov
inc
push
sbb
sbb
add
sub
xchg
xchg
out
adc
inc
push
pop
mov
stc
imul
testl
cmp
jle
sbb
cmp
sub
pop
dec
les
aaa
jge
inc
mov
mov
mov
xchg
inc
dec
or
mov
jo
fisubrs
pop
sub
dec
fstl
pop
inc
pop
or
xlat
pop
xchg
mov
adc
or
push
ret
mov
ret
adc
scas
addr16
xor
pop
out
add
outsb
xchg
fistpl
xor
jecxz
adc
bound
sub
xchg
push
inc
fiaddl
aas
xor
mov
ret
push
mov
jo
les
lds
mov
lods
adc
jo
out
fildl
xor
arpl
pop
add
aaa
clc
out
cmp
movsb
jecxz
subl
and
pop
dec
je
inc
mov
icebp
rorb
mov
jo
xchg
jge
ret
push
scas
aaa
sub
sub
mov
lret
stc
cmp
clc
cmp
lock
hlt
test
cmp
call
mov
out
pop
push
mov
dec
cmp
scas
test
push
testb
divb
push
stc
jg
pop
call
mov
arpl
add
fstpt
addr16
mov
testb
push
outsb
add
popa
jmp
xor
divb
fstpt
push
je
pop
pop
dec
push
xor
jmp
xor
push
idiv
cmp
sub
push
div
sbb
test
add
test
adc
les
daa
cli
sti
sub
or
add
not
icebp
movsl
xchg
inc
adc
inc
enter
xadd
add
add
icebp
test
xchg
xor
or
add
dec
pop
incl
fwait
hlt
cmpb
mov
aas
mov
add
divb
adc
mov
decl
add
ret
leave
jg
xchg
jle
repz
cwtd
pcmpgtd
jnp
dec
in
mov
leave
sbb
sbb
jecxz
lods
daa
mov
fcom
sbb
mov
inc
xchg
pop
or
xchg
adc
inc
pop
xchg
mov
aas
push
hlt
stos
pop
push
clc
imul
sbb
cmp
imul
sbb
cmp
imul
sbb
sbb
imul
dec
loopne
les
adc
aas
insl
jp
and
add
add
sub
or
sub
inc
cmc
dec
fisubrs
adc
fsqrt
orb
xor
xlat
adc
dec
std
xchg
jmp
jge
mov
mov
jl
adc
fnstenv
cli
divb
in
push
stos
test
xor
cmp
pop
push
mov
imul
xor
popa
test
pop
add
add
inc
add
aas
mov
out
xchg
mov
fdiv
add
adc
inc
xor
dec
push
mov
or
sbb
mov
xchg
insl
push
idivb
sub
add
in
in
dec
push
in
dec
pushl
xchg
dec
pushl
xchg
inc
jmp
sub
inc
popf
in
and
mov
add
push
pop
cmpb
mov
and
xor
push
sub
sbb
xchg
sub
and
pop
addb
and
test
jns
xchg
loopne
pop
pushf
xchg
nop
aas
les
mov
nop
push
pop
jae
adcl
clc
scas
mov
out
sarl
dec
sti
ret
stos
sbb
mov
jb
jecxz
movsl
fcmovnb
pop
shrl
dec
add
ljmp
push
xchg
and
sti
and
xchg
mov
fnsave
mov
loopne
adc
shlb
jae
jnp
cwtl
adc
mov
movsl
lcall
pop
gs
pop
mov
pop
fcoms
adc
iret
ret
sub
sub
mov
mov
aaa
mov
out
add
pop
mov
mov
shlb
out
jne
mov
add
jecxz
fcomip
scas
cld
aas
rcrb
out
mov
das
ret
jecxz
pop
out
adc
xchg
push
mov
mov
loopne
scas
cld
pop
rcrb
out
divl
push
shl
aam
arpl
subb
xor
sahf
fidivl
add
or
stc
std
or
sarb
mov
push
push
add
sub
mov
aad
insb
call
dec
inc
jl
push
shll
ds
fnstsw
pop
call
insb
cmpl
dec
sbb
ja
rcrl
mov
adc
je
cmp
andl
ficomps
fs
add
outsb
loope
xchg
dec
testb
inc
test
fsts
mov
shl
mov
push
push
mov
mov
loope
out
testb
imul
rcrb
test
inc
testb
lcall
cltd
ljmp
es
test
add
xlat
call
push
adcl
add
pop
jne
jo
les
cli
imul
add
sub
cli
mov
out
aas
les
mov
dec
lcall
add
dec
sbb
cwtl
mov
in
cld
xchg
mov
or
xchg
dec
aas
jae
sar
out
adc
out
shr
adc
xchg
xorl
fdiv
stos
cs
lock
jg
ret
std
gs
lock
add
std
incl
icebp
push
add
mov
inc
pop
loope
mull
iret
es
int3
adc
cli
cli
fildll
adc
jecxz
dec
inc
ret
testb
push
add
ret
xorl
sti
sti
push
daa
out
sbb
jns
jno
insl
loopne
scas
push
loope
mov
add
mov
fwait
jecxz
out
fisubs
fists
mov
loope
sti
inc
mov
cwtl
sub
movsb
or
or
mov
fwait
jae
fsubrl
test
cltd
jae
clc
jno
sbb
push
sbb
mov
leave
push
insb
add
mov
or
pop
int3
or
pop
xor
add
or
or
xor
cmp
mov
rol
fiaddl
jmp
in
pop
scas
jb
mov
adc
pop
lods
das
sub
mov
test
inc
pop
subl
popa
push
add
stc
add
sub
or
push
insl
pop
add
dec
adc
jle
stc
pop
jecxz,pn
in
fdivrl
add
push
dec
push
ret
lock
push
add
dec
adc
cmp
stc
inc
sbb
sbb
dec
je
xor
out
js
xchg
stc
lea
cmp
es
in
sub
mov
and
addl
dec
lea
repnz
ljmp
jp
push
je
lret
jge
fwait
mov
add
mov
add
std
incl
jmp
imull
repnz
inc
mov
xchg
xchg
xchg
repz
out
cli
inc
pop
les
adc
movsb
mov
jmp
xor
push
inc
aaa
or
addr16
mov
incl
sti
scas
test
test
std
lcall
aam
in
repnz
cld
rol
xchg
ja
repz
addr16
mov
pop
fs
mov
or
stos
rclb
sahf
frstor
call
mov
and
jle
aaa
psubb
cmc
icebp
test
mov
cs
pop
test
cld
dec
dec
cmc
mov
inc
mov
ds
add
loope
xor
ljmp
scas
inc
data16
sar
ss
movsl
inc
xchg
sar
jb
add
pop
mov
inc
mov
push
test
jl
aad
lods
cmp
test
mov
push
mov
inc
mov
jge
sub
mov
pop
das
sub
mov
and
add
pop
cwtl
push
sub
daa
clc
mov
or
adc
xchg
push
aaa
sub
movsl
je
imul
out
jbe
pop
pop
push
fidivrs
mov
mov
pop
add
jge
stc
mov
dec
call
sub
adc
add
adc
insb
fwait
stc
mov
sti
mov
inc
sub
xchg
push
jge
clc
nop
mov
jmp
lea
push
jno
fistpll
and
pop
add
sbb
mov
call
inc
movsb
mov
dec
call
pusha
rcrb
pushl
adc
add
xchg
mov
aad
std
addr16
mov
lcall
inc
icebp
not
repz
push
mov
mov
mov
ljmp
jmp
nop
pop
std
jae
mov
lea
mov
inc
hlt
xchg
add
std
inc
cwtl
sarl
mov
dec
pop
xor
or
pushl
cli
and
xchg
inc
jns
add
cli
sahf
mov
mov
in
pop
pop
xchg
out
movsl
inc
mov
loop
add
pop
je
sub
test
mov
movsl
mov
mov
das
jecxz
cld
inc
shll
ret
mov
push
jl
cmp
fistpl
lcall
rcrb
out
add
add
insb
mov
xorb
sahf
mov
xchg
out
les
jp
inc
lcall
add
movsl
stc
jmp
add
sub
je
std
cli
ds
push
inc
jmp
mov
popf
add
lahf
xor
es
stc
push
inc
in
repz
adc
add
pop
mov
fimull
pop
inc
stos
je
mov
mov
ja
mov
or
test
aas
mov
push
jb
pop
shr
inc
jmp
sbb
call
loop
and
imul
shll
inc
in
sar
push
test
add
push
std
pushl
cs
push
dec
xor
inc
cmpl
sub
bound
inc
and
es
and
sbb
inc
insl
sbb
inc
pop
stc
mov
mov
mov
call
or
or
les
jnp
sbb
incb
and
xlat
dec
enter
add
repz
popa
dec
cmc
fldenv
dec
cmc
fldcw
push
inc
je
sub
dec
dec
cmc
in
dec
sbb
add
stos
dec
pop
lea
dec
mov
dec
cmp
fnstenv
test
sbb
dec
clc
fldcw
adc
mov
shrl
pop
push
mov
push
fsub
clc
sbb
cli
push
pusha
loopne
sub
out
cli
xor
add
cmp
ret
out
xchg
iret
sbb
fbstp
push
sbb
and
mov
pop
mov
aad
jl
mov
mov
xchg
movsl
fidivrl
mov
add
shll
nop
jbe
ja
mov
dec
out
mov
daa
fbstp
cmp
iret
stos
or
ljmp
pop
add
or
arpl
xor
dec
adc
rep
pop
add
fisubl
mov
and
ret
inc
hlt
cmc
pop
mov
call
xchg
dec
stos
inc
vaddsd
lcall
fcomps
jp
mov
and
movsb
test
pop
sbbb
and
call
jbe
stc
hlt
dec
push
inc
jmp
add
dec
add
mov
add
fisubl
ret
aad
mov
call
and
test
sbb
dec
add
sbb
into
jne,pt
incl
xchg
mov
inc
inc
cmpl
mov
jmp
and
in
scas
dec
call
push
dec
xor
stc
andb
test
incb
push
adc
scas
mov
mov
in
loope
cmp
xor
xchg
bnd
mov
call
ss
or
push
adc
lods
push
xchg
lods
sbb
xchg
icebp
mov
sub
mov
cmp
les
sub
out
aam
cli
fcomip
nop
or
cli
add
sub
pop
lcall
jmp
outsl
mov
jae
in
push
inc
mov
mov
testl
mov
mov
rorl
jae
xchg
xor
push
in
jb
jl
xchg
aas
out
test
jg
pop
daa
add
fwait
push
shl
pop
inc
pop
or
mov
dec
add
add
dec
push
sti
pop
insb
inc
mov
mov
mov
adc
icebp
lods
test
dec
daa
add
and
jno
test
cmp
popf
mov
pop
iret
mov
add
inc
mov
jecxz
cli
pop
lcall
imul
rcrb
or
incl
movsb
fists
add
call
xor
dec
sub
fcmove
inc
test
pop
shl
add
xor
inc
inc
aas
push
dec
xor
cmpsl
stos
lcall
xlat
pop
add
fwait
xor
jle
pop
push
sub
xlat
clc
mov
and
xor
fdivrl
add
shrl
mov
add
add
rcrb
mov
add
std
sahf
jge
mov
xor
es
mov
dec
xor
and
mov
lods
push
xor
dec
call
xor
push
pop
je
or
cmp
repnz
sbb
xchg
std
arpl
add
push
add
ljmp
add
repnz
add
fildl
mulb
cli
cs
fwait
jo
adc
mov
dec
xlat
fildl
neg
adc
adc
mov
push
clc
fildl
mov
lods
mov
std
pushf
xor
inc
add
adc
sarb
inc
add
shl
fldl
jno
popf
xor
inc
add
adc
les
add
xchg
add
mov
inc
add
adc
xchg
add
xchg
or
push
inc
rolb
mov
xor
ret
std
pushf
adc
inc
add
pop
inc
in
in
pop
out
mov
or
inc
les
inc
test
out
push
outsl
cmpsl
add
add
mov
add
add
xchg
dec
outsb
daa
add
lret
lret
inc
les
xchg
and
out
dec
outsl
daa
add
stos
addl
pop
test
jecxz
sbb
daa
add
mov
pop
test
add
sbb
cmpsl
add
imul
iret
pop
add
xchg
cmpsl
sbb
adc
divl
or
pop
lahf
mov
add
jle
jmp
notl
or
movsl
rcrl
add
jge
jmp
enter
pop
pop
lahf
pop
fcompl
add
push
notl
jmp
push
orb
xchg
mov
sbb
dec
add
jmp
not
inc
xchg
dec
add
cmp
adc
fwait
lock
sbb
mov
push
pop
fiadds
mov
fwait
adc
sbb
mov
fiadds
mov
fwait
xor
jae
add
sbb
inc
sub
pop
fwait
push
or
inc
add
fldl
mov
fwait
jo
sbb
add
add
jb
add
mov
fwait
nop
dec
sbb
inc
add
mov
movsb
adc
sar
je
add
adc
in
loop
andb
pop
add
push
inc
les
fcom
sar
scas
fstps
pop
sbbb
push
mov
stc
xchg
stc
mov
add
add
sub
mov
inc
mov
aas
add
iret
insb
dec
ss
add
daa
xchg
in
loopne
push
xchg
and
loope
cmp
xchg
test
mov
mov
pop
dec
inc
les
aas
lahf
mov
fistpll
js
xchg
aam
movsl
sbb
mov
sbb
cld
add
xchg
mov
cld
xchg
lret
xorb
xor
add
adc
out
mov
out
push
jmp
pop
call
add
data16
sbb
outsl
or
test
push
test
test
addr16
mov
xchg
insl
out
adcl
mov
test
add
aad
jmp
roll
test
shrb
cld
jmp
popa
add
add
pop
mov
pop
mov
call
cld
incb
xchg
adc
sbb
jo
bound
cli
pop
sbb
push
inc
jno
rcrb
sbb
scas
and
mov
fucomp
and
ret
sub
lock
and
xchg
imul
call
sbb
lea
push
call
fcmovnb
jne
aas
cmp
adc
addl
jmp
cmp
pop
adc
je
push
or
mov
xchg
testl
loope
in
sbb
incb
push
shlb
in
mov
inc
in
jns
jno
imul
dec
stc
shll
inc
les
mov
mov
mov
cmovo
add
call
or
int3
mov
lods
mov
shrb
mov
jae
idivl
push
xchg
testl
pop
idivl
and
rorb
push
mov
inc
loopne
test
push
ds
mov
std
xchg
imul
nop
notrack
stos
data16
in
les
pop
aaa
xchg
jb
pop
pushf
iret
push
int
data16
data16
in
in
lods
adc
clc
popf
xchg
data16
std
or
popa
dec
lcall
add
xchg
aam
les
outsl
pop
sub
add
fucomip
xor
inc
and
cmova
sub
mov
add
pop
cmp
push
adc
xchg
rcrb
add
mov
inc
jmp
jecxz
dec
ss
xchg
sub
out
push
fwait
dec
int3
pop
add
add
add
dec
lret
jno
sbb
aad
xchg
rolb
cld
adcb
nop
jmp
ret
fdivrs
popf
jl
or
clc
lcall
pop
pop
subl
pop
or
xchg
loopne
mov
imul
fidivl
sbb
add
test
setnp
xchg
pop
fstl
mov
cltd
pushf
pop
add
pop
pop
or
mov
rcrb
cmp
add
test
pop
test
lods
pop
add
xchg
adc
invd
xchg
test
push
stc
ljmp
sub
jne
mov
divl
xorl
inc
pop
add
push
mov
mov
xor
jmp
jle
adc
add
add
clc
add
sbbl
lcall
ret
das
shrb
mov
call
cmp
stc
jecxz
insb
add
stc
les
jo
pop
jge
cmp
xor
addl
clc
test
cmpsb
aad
add
add
jbe
rcrb
jg
jns
repnz
add
add
add
and
push
idivb
andb
inc
jle
aas
shrb
outsl
mov
lcall
sbb
testl
push
sub
test
les
adc
push
pop
outsl
rcr
or
repnz
sub
fmuls
les
insb
inc
outsl
add
and
fs
nop
xor
pop
arpl
sbbb
and
sbbl
rorb
push
lcall
add
inc
or
das
insl
xor
cmp
ret
push
fildl
fcmovb
out
cmpsl
add
pop
push
je
lret
pop
add
cmp
fildl
ja
jae
fsubrs
fsubl
scas
mov
sarl
aad
cmp
enter
add
lahf
out
es
sarl
aas
repnz
fiaddl
loope
xor
cld
outsb
cmp
push
leave
jmp
add
mov
mov
jp
clc
or
add
jne
and
mov
js
clc
push
push
push
dec
push
cmp
sub
add
clc
jbe
or
hlt
push
nop
jle
xchg
arpl
mov
cmp
divl
mov
sub
xchg
inc
out
mov
push
les
imul
stc
fsts
adc
mov
add
call
add
add
pop
mov
add
notb
lods
or
loopne
pop
mov
popf
repz
idivb
orb
adc
add
add
sub
or
lock
and
or
lds
cli
cmp
cmp
stos
jp
cmc
insb
gs
andb
das
sub
vandpd
jnp
add
rcr
or
movsb
cmp
sbb
leave
outsl
xor
jb
dec
rclb
push
xchg
dec
rorl
dec
and
push
xor
cmp
push
enter
in
cmpl
cwtl
add
push
cltd
out
cwtl
test
ds
cltd
out
xchg
sbb
sbb
lret
pushf
out
jae
ror
xor
pop
push
adc
adc
out
fstp
or
inc
add
adc
jbe
xor
fucom
pop
scas
pop
xchg
cmp
cmp
pop
les
loop
sbb
test
pop
push
lret
jns
mov
cltd
sbbl
mov
sbb
sub
add
dec
sbb
jne
pop
cmp
jnp
ret
cmp
fdivrs
bound
pop
add
pop
push
dec
sbb
add
jo
push
pop
pop
jnp
mov
mov
call
inc
insl
test
add
testb
cmpsb
insb
push
jns
sarb
add
add
xor
pop
cmpsl
xchg
add
jns
push
out
call
sarb
adc
mov
dec
push
pusha
shrl
push
jns
push
and
clc
mov
fst
sarb
dec
inc
pop
add
and
or
ja
jge
push
sub
mov
push
push
cmp
iret
cmc
cmpl
call
dec
xor
xchg
test
ret
jae
int
mov
cmc
push
mov
xor
mov
add
iret
cmc
cmp
cmovo
idivb
sbb
ret
cmp
add
les
dec
jns
lods
decl
jno
test
repnz
std
dec
jb
push
push
mov
add
sarb
popf
shll
push
add
pop
jo
nop
inc
incb
out
aad
lahf
sub
out
les
xor
pop
hlt
xchg
insl
and
add
scas
ret
pop
inc
cmp
je
fs
in
jnp
sub
enter
sbb
push
sbb
loop
in
std
sub
add
mov
or
test
add
sub
mov
sub
sbbl
test
mov
or
mov
filds
add
inc
push
insl
test
mov
xor
cmc
push
jno
neg
push
xchg
je
test
xor
mov
out
pop
add
addl
xchg
and
call
sub
cmpsb
jb
clc
cmp
and
mov
pop
addl
xor
add
pop
add
in
clc
rdtsc
enter
dec
out
cmp
pop
xchg
add
call
sbb
push
jbe
mov
jbe
xor
sbb
test
pop
add
add
fldl
lea
jno
adc
fcmovb
je
add
push
jno
push
push
jno
push
push
ja
decb
shlb
andl
stc
je
and
lret
add
adcl
adc
jge
les
mov
out
fwait
ret
push
push
in
inc
xor
pop
jle
add
in
pop
push
inc
imul
fadds
in
hlt
or
hlt
dec
add
call
xor
lock
shll
inc
les
sub
movsl
addl
out
xchg
cltd
out
mov
cmp
out
pop
out
mov
andl
mov
je
out
int
loope
les
jmp
and
inc
add
frstor
jo
aad
xchg
fwait
adcl
add
sub
jg
ljmp
sub
aas
fnsave
pop
xorl
dec
fisubs
outsl
rcrb
popf
and
mov
stos
jbe
stc
and
xchg
and
add
pushf
sarb
out
cmp
es
clc
cmpsb
add
or
xchg
mov
lds
outsb
mov
adc
inc
mov
jbe
sub
popf
lods
xor
lods
loop
bound
jne
adc
loopne
rol
orl
jmp
icebp
push
insl
sub
pop
out
stc
mov
lcall
pusha
mov
fdivrs
mov
sbb
insb
add
sub
mov
aad
add
jae
call
notb
test
sub
idiv
xor
dec
push
inc
lods
xor
ret
dec
test
pop
cmp
je
or
jbe
jge
inc
shlb
test
sub
add
ret
inc
mov
test
xchg
insl
or
pop
mov
call
or
jb
push
inc
xchg
divl
sahf
mov
stc
ficoms
sbb
movsb
rol
aaa
add
or
jo
outsb
rclb
push
inc
les
ja
call
xlat
stc
rcrl
loope
dec
into
loope
dec
imul
cli
mov
fildl
xchg
ss
cmc
sarl
sbb
stc
adc
dec
stc
xchg
lea
inc
xor
sub
out
jl
jle
das
xchg
xor
lds
scas
pusha
inc
and
lcall
adc
sub
inc
push
sub
je
insb
jmp
or
sbb
dec
out
aad
notb
in
ret
test
shrl
jg
js
sbbl
add
pop
addr16
inc
sarl
inc
push
pusha
out
sub
xchg
hlt
jg
js
bound
jge
insb
adc
xor
adc
adc
push
out
ret
les
jnp
jg
js
bound
out
sub
addl
fs
roll
cmp
push
add
add
cmpb
cmp
test
jo
sub
jmp
jge
negl
jmp
mov
pop
mov
pop
add
sti
pop
mov
or
scas
add
jmp
cmp
int3
lcall
ret
mov
lret
xlat
inc
stc
inc
xchg
add
push
or
pushl
mov
addl
inc
or
sub
xor
add
sub
or
outsb
data16
jbe
popa
outsl
adc
or
mov
sub
mov
push
pop
cs
int3
int3
sub
int3
int3
nop
add
push
data16
pop
test
jge
lods
pop
add
mov
scas
add
jge
inc
or
cli
cmp
daa
out
jbe
je
fcomi
pop
add
push
jnp
sub
subl
xchg
add
jae
jae
lods
movsl
cli
inc
push
in
cltd
xor
ds
addb
test
imul
out
or
inc
add
jo
mov
arpl
iret
inc
scas
or
jb
mov
test
ret
je
clc
dec
and
or
adc
mov
mov
push
add
clc
inc
cmp
pop
or
and
lods
and
int3
or
sbb
mov
test
dec
xor
arpl
ret
fnstcw
adc
fwait
mov
push
pop
out
les
dec
mov
push
out
jl,pn
loop
sbb
stos
iret
add
pop
fstpt
andb
test
xchg
dec
add
jmp
and
aaa
fcompl
sbb
dec
sbb
xchg
push
fimull
adc
cmp
pop
call
mov
dec
pop
lret
data16
jmp
sahf
mov
call
jo
dec
fmulp
add
bound
mov
xor
add
dec
lcall
add
add
cld
ror
aad
lret
jle
push
movsb
xor
insb
jb
mov
test
scas
in
lock
in
pop
jb
inc
dec
fs
dec
cmp
fists
inc
sbb
rolb
push
adc
ret
cmc
out
adc
or
push
jns
add
xchg
xor
adc
mov
push
adc
loopne
push
nop
cmp
scas
test
cmp
adc
fiadds
pop
mov
loope
out
andb
add
in
out
je
sbb
pop
push
cmp
call
add
out
mov
pop
add
scas
mov
ljmp
xchg
addb
loopne
add
lds
add
xchg
je
std
push
dec
dec
fdivs
mov
je
test
ret
mov
dec
fadds
add
xchg
ret
mov
dec
dec
test
cmp
mov
cltd
std
aas
add
dec
pop
test
ds
mov
ret
jae
add
add
cmp
aaa
outsb
xchg
inc
pop
or
mov
or
add
jecxz
pop
rcrl
rolb
cmc
push
inc
loope
push
into
inc
xchg
push
add
pop
pop
add
out
add
or
push
xchg
pop
out
or
mov
mov
out
inc
jle
ret
aas
shl
add
pop
push
ret
roll
jnp
in
les
int3
mov
cmp
dec
push
dec
pushf
pop
scas
xor
les
int3
pop
push
ret
pop
out
sbb
test
cmpsb
add
xchg
dec
jmp
jb
addr16
outsb
or
lods
mov
xor
inc
pop
insl
ljmp
jl
shr
jb
orb
push
test
inc
ret
add
ja
lea
and
bound
inc
pop
enter
cmp
pop
int3
sub
shlb
out
xchg
je
xor
fstl
les
jmpw
push
cmp
addb
rcrb
sti
ljmp
jmp
call
mov
push
inc
mov
adcl
ds
test
add
add
cmp
xchg
testl
pop
sub
inc
pop
dec
push
push
cmpb
dec
jecxz
and
orb
lret
xchg
adcl
adc
add
fnstsw
decl
xchg
push
xor
fwait
addl
shlb
mov
pop
add
les
add
jmp
push
add
dec
inc
sbb
test
ljmp
call
sub
push
mov
call
aas
lds
stos
add
adc
cmp
fdivr
aas
insl
adc
ret
shl
mov
test
mov
mov
test
jp
scas
js
call
jmp
add
mov
dec
les
adc
add
add
pop
shll
xlat
pmuludq
je
cmp
add
adc
loope
xchg
fwait
enter
enter
enter
mov
mov
mull
sahf
imul
je
inc
shlb
xchg
es
jne
mov
adc
xor
ret
pop
les
dec
sbb
add
imul
out
cld
push
push
push
jle
outsb
xor
cmp
adc
bound
arpl
flds
push
inc
xor
cltd
fstl
inc
sbb
cmp
pop
push
pop
jbe
or
fstl
mov
and
mov
bound
pop
bound
sbb
sub
push
test
mov
lds
jmp
testl
add
bound
mov
popa
jle
enter
cmp
insb
inc
mov
jo
jbe
adc
faddl
jge
mov
sti
push
add
pop
lahf
pop
mov
sub
pushl
aad
push
lods
pop
sub
and
mov
add
int3
nop
adc
ljmp
add
add
pop
pop
jns
add
ljmp
xor
push
pop
pop
mov
arpl
add
pop
pop
mov
popf
loop
xor
jp
negl
jge
and
add
in
inc
shrl
les
andb
aas
inc
or
ret
es
push
cld
aad
andb
addb
cmp
xor
push
xor
cmp
dec
mov
in
ss
dec
cmp
add
inc
inc
mov
and
sbb
ss
roll
ja
sbb
ljmp
insb
dec
roll
mov
fmuls
sbb
inc
orl
add
inc
cmpb
aas
pop
cmp
pop
dec
mov
fs
out
les
add
das
mov
pusha
jns
shrl
test
xchg
jo
or
cmp
push
lcall
in
in
add
inc
out
mov
dec
out
loope
add
and
out
inc
loope
out
jae
pop
add
pop
out
push
fwait
leave
add
fsts
les
xchg
out
dec
xlat
imul
cli
inc
cs
les
pop
push
jb
jne
imul
out
jnp
sti
sbb
dec
sub
dec
sbb
stc
pop
push
cmp
cmc
or
inc
and
jmp
shr
ret
fsts
pop
xchg
adc
jbe
fs
xchg
outsl
or
stc
pop
mov
sub
bound
inc
jb
mov
pop
jge
ret
push
xchg
dec
add
xchg
xor
xchg
sub
dec
add
dec
rcll
push
push
xor
adcl
andl
adcb
ds
or
xor
and
push
in
pop
push
ret
lds
je
jecxz
pop
xor
add
add
adc
cli
xor
sub
js
add
dec
insb
out
jnp
jge
dec
pop
cmc
xchg
lcall
push
push
mov
idiv
fisubl
push
mov
inc
aaa
pop
pop
push
enter
enter
enter
mov
ja
mov
sub
sti
cmp
repz
inc
je
mov
jecxz
push
and
scas
in
add
movsb
aam
jp
jge
lret
pushl
push
jnp
addl
cmp
test
std
call
ret
xor
jno
test
lods
mov
jmp
or
fs
inc
cmp
in
inc
shufps
or
mov
popa
test
and
mov
lock
inc
mov
mov
inc
add
add
push
popf
mov
jle
pop
sub
push
loope
fs
add
xchg
loop
out
inc
sbb
jge
negb
xlat
cmpsl
pop
or
jno
les
push
repnz
pusha
inc
sbb
nop
or
in
xor
sbbb
pop
enterw
arpl
jb
pop
into
xor
les
push
leave
xlat
aas
pop
xlat
dec
add
and
add
insb
stc
xchg
lret
mov
outsb
or
imul
rcrb
out
idiv
call
fs
and
pop
aad
inc
imul
inc
ret
popf
test
dec
add
inc
out
pop
mov
sbb
pop
xchg
test
dec
add
sbb
shll
pop
das
dec
add
mov
sub
push
imul
add
imul
dec
lret
or
add
cwtl
imul
add
push
jns
loop
add
movsl
push
stc
lcall
imul
aam
scas
sub
pop
pop
mov
xchg
loop
repnz
xlat
push
add
cli
jge
in
add
fisttpll
xor
jle
fwait
pop
add
add
sub
dec
je
lahf
testb
jmp
insb
mov
cli
xor
lcall
pop
cld
sub
dec
pushf
jo
dec
mov
adc
cmpsl
mov
jbe
mov
add
xchg
stos
test
lods
add
jl
xor
inc
aas
jae
inc
cmpb
jns
pop
add
dec
or
cld
inc
insb
add
pop
add
jae
rolb
add
xor
adcl
add
scas
jne
push
je
mov
std
inc
add
dec
pop
mov
dec
sub
aam
mov
rcrb
flds
mov
sarb
add
mov
mov
les
dec
test
mov
dec
push
out
rolb
inc
stc
add
andl
imul
cmp
out
inc
fadds
or
pop
push
movsb
pop
out
jne
or
les
mov
iret
out
shrl
mov
out
dec
and
outsl
sub
jmp
mov
fldl
cmpsl
in
add
add
adc
sbb
pop
xchg
inc
jmp
scas
and
and
incl
or
loope
clc
scas
jae
jbe
jg
out
or
inc
fs
dec
push
imul
into
inc
in
jmp
fldl
cmp
aad
inc
pop
test
dec
add
mov
bound
and
add
repz
test
popa
outsb
cli
popf
cmp
int
data16
idivl
insl
pop
add
pop
pop
cmpl
mov
std
mov
scas
or
movsb
in
push
sbb
sub
decl
push
pop
sub
scas
inc
mov
sub
cli
cmpb
pop
xchg
adc
jno
testl
out
pop
push
ret
lock
mov
les
test
pop
or
lods
jo
in
inc
mov
les
push
cmc
vpmaxub
jae
test
inc
hlt
xchg
inc
lret
test
lock
adc
test
pop
push
mov
add
mov
dec
ror
mov
int3
clc
mov
int3
adc
ja
dec
inc
cld
push
xchg
movsl
or
push
adc
loopne
ret
je
sti
dec
sbb
pop
sbb
inc
jmp
jp
inc
pop
xor
and
add
mov
dec
sub
add
shll
push
mov
ljmp
mov
shrl
jp
mov
and
sub
add
gs
or
pop
and
lret
std
mov
xor
mov
xchg
stos
mov
call
mov
mov
loopne
add
clc
xor
fnstcw
stc
xchg
popl
mov
xchg
pop
stos
les
sbb
jbe
sbb
jo
xorl
out
test
imul
adc
cmpl
pop
sub
out
cmpb
rcr
cld
imul
dec
jge
adc
add
push
jp
lods
or
stc
mov
xor
pop
out
sbb
ja
je
xchg
fnstsw
add
data16
movsl
cwtl
aas
xor
popf
push
add
fsub
push
or
and
aad
idiv
jecxz
push
pop
das
pop
stc
mov
nop
idiv
ret
or
int3
int3
mov
int3
int3
sbb
jmp
sub
xor
fldl
add
fdivl
and
or
cmp
aaa
sbbl
push
push
and
fs
mov
xchg
mov
add
in
in
sub
and
int3
scas
jno
lds
rorb
add
insb
int3
jae
push
es
lcall
ret
cld
sub
cli
inc
sbb
ljmp
jnp
stos
orl
jnp
test
sub
or
je
pop
mov
xor
stc
sub
mov
add
xor
insl
cmp
pop
les
rolb
inc
mov
add
pop
cmpsb
mov
cmp
loopne
xor
ds
clc
pop
adc
out
jl
ss
xor
mov
mov
inc
adc
cmp
jp
stos
testl
sub
out
les
outsb
fdivrp
popf
push
les
rcl
pop
adc
add
lea
xchg
pusha
inc
loopne
xchg
sbb
in
jl
xor
lret
stos
xor
rcl
pcmpeqb
push
cmp
pop
add
xor
repz
inc
adc
rcrb
mov
pop
in
mov
and
sarl
xlat
jnp
das
lcall
or
cmp
push
aad
jge
xchg
or
and
bound
dec
test
nop
psubsb
lcall
stc
loop
push
add
and
xor
scas
mov
inc
fnstenv
cmpsl
mov
add
in
pop
adcl
shlb
pop
leave
mov
push
xor
fwait
int3
int3
nop
jecxz
mov
mov
fbstp
js
rdtsc
int
add
push
add
out
adc
push
xchg
adc
jnp
push
or
bound
lcall
inc
or
imul
mov
add
cmpsb
cmp
mov
addl
adc
les
jl
in
inc
fadds
les
incl
in
inc
push
hlt
jmp
ja
sbbl
add
xor
addb
ror
std
inc
mov
cli
aam
push
jge
mov
out
call
aas
enter
in
inc
mov
xchg
in
xlat
inc
out
rep
cmp
or
xchg
jg
gs
les
std
les
repz
add
jae
inc
int3
cltd
decl
inc
add
jns
inc
mov
add
rcrl
int3
sub
mov
les
repz
cmp
xchg
sub
lret
pop
out
inc
lcall
lods
pop
mov
add
lret
out
les
rclb
js
fwait
cmp
lcall
les
jle
jp
icebp
js
fiaddl
dec
ret
sti
inc
pop
dec
mov
test
int
pop
add
lods
sbb
cld
push
test
inc
jge
push
push
jge
psubusb
xchg
int
dec
int
pop
stc
jmp
in
incl
das
sub
jmp
cmp
clc
test
push
icebp
lcall
xchg
enter
add
sub
dec
mov
jmp
out
rcrb
jb
push
shrl
cmp
enter
sub
adc
stc
xchg
cmp
int3
sbbl
test
dec
scas
add
or
mov
and
scas
nop
or
sahf
cwtl
adc
int
adc
or
push
mov
add
add
add
int3
cmp
and
add
rolb
add
adc
test
add
cs
mov
push
add
test
xchg
jecxz
xlat
push
test
iret
push
in
out
sbb
scas
sahf
dec
insl
push
adcl
aas
sbb
inc
fldcw
cmp
in
lock
jnp
jno
test
incl
ret
add
stc
jns
mov
pop
push
inc
jge
imul
dec
mov
addb
inc
mov
add
les
mov
aas
cmc
mov
adc
into
inc
in
cmp
test
pop
jae
dec
sbb
lods
add
adc
test
adc
sub
push
pop
out
add
retw
add
adc
ljmp
test
lea
cs
inc
xchg
and
mov
out
sbbl
jecxz
sbb
inc
es
add
out
mov
outsb
les
inc
fisttps
aam
in
into
int3
in
testl
sbb
stos
jg
add
pop
out
pop
push
jo
int3
lea
out
lret
pop
add
sbb
adc
lret
pop
add
cmpsb
xlat
cli
stc
clc
js
int3
jnp
or
arpl
jmp
xchg
push
test
lock
push
popa
xchg
push
das
dec
fwait
and
lcall
mov
pop
stc
jmp
adc
in
in
pop
mov
je
pop
aam
stos
sbb
push
inc
dec
and
pop
test
loopne
add
test
push
sbb
lea
pop
and
add
pop
add
mov
pop
pop
test
pop
add
cmpsb
lahf
inc
mov
addl
in
mov
jge
cli
fildll
sbb
loop
je
in
adc
test
mov
xor
push
cmp
dec
add
inc
data16
sbb
cmpsb
and
add
outsl
in
clc
int
cmp
sahf
mov
loop
lods
pop
addl
dec
clc
push
and
les
std
jae
int3
pop
hlt
aas
jle
test
sub
cmc
fldenv
les
push
dec
lret
dec
push
mov
andl
add
add
inc
or
or
cmp
ror
std
inc
jo
adc
dec
std
mov
inc
jle
fadds
test
mov
cmp
or
addl
cmp
cwtl
fldl
pop
insb
lret
adc
dec
add
pop
in
gs
push
cwtl
loope
test
pop
in
mov
add
cmpsl
into
out
mov
dec
push
inc
inc
leave
xchg
mov
push
add
pop
mov
mov
pop
inc
mov
pusha
lods
add
loope
mov
xchg
inc
lock
pop
subl
loop
pop
push
outsb
inc
movsb
fbld
and
pop
out
test
out
lds
jmp
add
pop
icebp
es
arpl
mov
aad
jmp
stos
jle
out
data16
aas
cltd
hlt
jb
jnp
lods
imul
frstor
fiadds
aas
mov
adc
lcall
jp
xchg
fwait
inc
bound
pop
je
cmp
hlt
ret
outsb
adc
add
add
pop
add
fisttps
push
test
bound
jae
cmp
inc
push
add
pop
add
jne
cmp
les
je
insl
out
clc
or
pop
jecxz
notb
inc
lods
cmp
lcall
mov
add
pop
add
cmc
adc
xchg
scas
xchg
cld
add
ror
or
sbb
adc
data16
loopne
fnstsw
add
xor
mov
jo
sti
mov
jo
test
bound
xor
dec
mov
mov
xchg
push
mov
add
xor
inc
std
out
inc
sub
fiadds
mov
inc
std
test
dec
mov
mov
hlt
rol
std
incl
les
cmp
xor
jl
popf
std
or
add
les
adc
mov
cli
popf
ds
jnp
xchg
arpl
insl
or
lret
sbbb
les
enter
ret
lods
arpl
mov
inc
mov
out
inc
lcall
add
pop
out
add
shl
add
pop
or
add
push
and
or
lcall
cmp
ljmp
pop
in
or
out
add
fnsave
rcrl
jge
out
shl
and
mov
pop
out
jecxz
add
pop
jge
sarb
jmp
add
dec
add
sub
add
arpl
bound
loopne
inc
sbb
jo
push
std
rolb
sbb
xlat
mov
mov
dec
push
std
cmc
hlt
push
and
jg
cmp
sub
iret
ljmp
xlat
rolb
stc
cs
aad
out
add
or
lds
aaa
imul
sbb
pop
add
lods
stc
loop
add
fst
in
xchg
daa
add
lods
in
or
sbb
pop
xchg
add
mov
add
lods
pop
jecxz
push
stc
cli
call
negb
jnp
bound
roll
cmc
and
cmp
jge
push
pop
test
add
push
cli
test
or
idivb
and
adcl
ss
xchg
and
ficoml
roll
cli
fiaddl
sub
les
jge
sub
mov
inc
mov
mov
decl
inc
xchg
cs
mov
add
inc
xchg
pop
ret
jb
mov
xchg
cmp
jb
int3
les
mov
inc
xchg
push
int3
push
clc
aas
jle
dec
divb
ret
std
test
pop
aas
cld
lods
decl
les
out
cmp
incl
and
test
data16
pop
fidivrl
fs
int
in
jg
pop
movsl
addb
mov
inc
and
mov
sbb
add
les
roll
ret
imul
adcb
test
enter
fcmovne
pop
push
push
dec
out
add
pop
push
xor
subl
iret
add
pop
out
lds
jmp
scas
xchg
mov
in
dec
xchg
add
push
outsb
lret
inc
sar
jmp
pop
or
add
push
dec
in
dec
and
leave
add
test
cli
ljmp
mov
sar
sbb
push
pop
bound
pushf
jo
mov
test
cwtl
or
std
roll
outsb
cmp
pop
add
movl
and
pop
add
ret
lret
test
add
scas
outsl
adcl
add
add
out
test
pusha
xchg
insb
mov
fistpll
dec
push
fsubrp
add
pop
dec
lea
popf
push
push
ljmp
adc
mov
call
mov
iret
cmp
test
stc
push
lahf
push
add
aas
outsb
mov
pop
cmpl
add
out
push
mov
add
testb
les
ret
call
cmp
or
jl
jge
or
cld
push
cmp
ljmp
test
dec
add
or
std
inc
jo
test
xchg
lods
mov
mov
test
xchg
or
lret
mov
rcll
jp
test
or
jge
insb
push
xor
test
hlt
or
cli
shl
scas
sarb
fcoml
inc
sti
push
scas
inc
lods
fidivrl
cmp
cmp
jns
xlat
es
ds
out
les
xor
pop
fiaddl
mov
dec
pop
rcll
pop
inc
rclb
pop
add
adc
xchg
stos
icebp
dec
push
fimull
dec
add
jbe
mov
jmp
fidivs
les
js
mov
movb
pop
jo
pusha
aam
mov
daa
pop
out
out
sti
mov
and
repz
mov
push
push
inc
add
inc
sub
jmp
push
xchg
cld
bound
sbb
bound
push
std
inc
imul
add
jnp
xor
adc
jge
mov
sahf
hlt
sub
mov
je
stc
rolb
ds
mov
insl
push
inc
ficomps
jg
inc
dec
lods
clc
adc
mov
xchg
fsubrl
inc
sbb
ljmp
clc
add
out
ret
scas
std
jbe
insl
inc
addb
jecxz
gs
idiv
jp
mov
add
jge
cmp
add
gs
xchg
add
jge
enter
add
pop
jnp
mov
je
push
mov
inc
add
fwait
push
mov
xchg
loop
jnp
sbbl
add
jle
inc
cmc
inc
jnp
cmp
testb
popa
add
ret
inc
sub
add
lret
mov
or
les
jl
or
lock
xor
dec
dec
or
dec
or
cld
decl
xor
mov
dec
lds
jle
int3
lret
dec
jb
sbbb
test
mov
jnp
adc
xchg
lock
xor
dec
inc
js
push
adc
xor
add
xor
sub
push
add
orl
les
jle
int3
pop
jo
mov
cmpsb
incb
pushf
scas
pop
fisttpl
add
rcrl
lods
test
add
pop
loop
mov
out
add
pop
data16
pusha
aad
fwait
lds
adc
xor
xchg
aas
jp
dec
pusha
cmp
shll
inc
in
mov
inc
lods
or
jmp
inc
cmpsl
mov
add
xor
pop
out
pop
push
outsb
push
mov
cmpsb
vmwrite
rcl
js
pop
enterw
cmc
jl
dec
mov
add
fs
add
sbb
repnz
pop
stc
xchg
inc
out
lret
pop
add
scas
mov
cmp
andl
and
test
lea
test
add
ds
jns
xchg
push
inc
add
dec
push
add
push
mov
jo
cld
bound
loopne
icebp
scas
ds
push
std
shrb
stc
jmp
rclb
inc
and
ret
out
mov
leave
hlt
pushf
hlt
cmp
mov
rcrb
test
inc
jle
sub
sbb
or
movsb
test
cmovnp
orl
test
mov
mov
rorl
cmp
pushf
loopne
add
addl
cmp
psubq
sti
shlb
pop
xchg
pop
test
les
jns
shll
or
xor
xchg
adc
nop
cmc
ss
add
xor
or
jp
pusha
cmp
imul
xor
int3
and
aaa
in
hlt
sti
xchg
sbbl
aas
test
int3
xor
rol
cwtl
xor
xor
enter
shl
scas
bound
or
aas
mov
out
xor
mov
xor
in
pop
fdivrs
add
add
aas
outsb
mov
std
lcall
fistpl
add
jmp
repnz
xor
sbb
mov
inc
xchg
ret
out
les
enter
dec
inc
mov
pop
inc
mov
shlb
les
mov
jge
sub
xlat
pop
out
inc
fwait
lahf
addb
out
fcmovnb
sarb
jle
add
les
sub
pop
fidivrl
pop
out
int
in
add
adc
stos
inc
sbb
std
shrb
dec
and
inc
stc
jmp
aaa
xchg
sbb
lcall
add
lcall
test
pop
test
mov
call
call
fadds
cwtl
push
mov
push
add
loope
or
jo
inc
xor
push
ds
imul
call
sub
cld
bound
adc
bound
sbb
stc
lcall
test
loopne
inc
and
add
es
mov
leave
hlt
xor
sub
jle
pop
pop
add
aam
aam
repz
dec
add
scas
enter
mov
adc
sarl
ss
hlt
fsub
lsl
mov
addl
cmp
jae
sbb
les
aas
xor
or
jl
xchg
push
jl
mov
xor
push
xor
jp
test
imul
stc
imul
xorl
int3
fs
in
lock
xchg
or
adc
std
test
test
int3
xor
outsb
mov
or
enter
int
fbld
std
decl
ret
out
xor
lds
into
in
pop
sbb
ss
inc
pop
dec
pop
inc
mov
les
add
mov
rcrl
divl
sub
inc
and
xchg
stos
mov
out
dec
xchg
das
addl
out
inc
ljmp
dec
lea
inc
rcrl
jl
inc
out
stc
pop
xor
rcrl
cmp
pop
out
les
inc
fisubl
xchg
push
ret
or
jb
rcrl
mov
add
bound
jmp
pop
pop
or
inc
stc
jmp
mov
cmpsb
add
mov
scas
xchg
int3
or
sbb
fs
stc
jmp
xchg
or
xchg
dec
cmc
les
and
ss
ja
ljmp
dec
mov
xchg
inc
jo
push
xor
test
dec
push
test
js
jb
lcall
cltd
hlt
bound
insb
std
mov
orb
inc
fdiv
add
inc
test
sub
orb
pop
jmp
les
es
mov
rorl
jb
hlt
mov
fisubrs
jbe
add
aaa
add
mov
add
test
je
pop
inc
jge
pop
pop
add
in
mov
lock
fidivrs
add
lcall
xor
xorl
incl
sbb
mov
cld
les
dec
lds
std
or
xor
movsb
lock
int3
lret
jns
cli
in
ret
test
push
fadds
xchg
leave
dec
or
jb
incb
inc
mov
mov
je
enter
gs
dec
lahf
stc
cmpb
xor
shrb
in
cmp
xor
clc
cmp
add
inc
adc
jo
and
and
mov
cmp
xlat
push
xor
sub
movsl
les
out
sbb
out
push
add
shrb
stc
xchg
out
pop
enter
test
out
clc
xchg
xlat
xchg
adc
xchg
cmp
xchg
int3
out
xlat
inc
hlt
jae
arpl
pop
jp
out
mov
insl
add
pop
loop
inc
cmp
mov
repnz
mov
jno
and
daa
lods
fisubl
xchg
mov
cmp
and
xchg
out
les
jmp
lds
or
inc
stc
popa
and
movsl
pop
bound
loope
filds
inc
cmpsb
call
movsb
aaa
loop
fdivl
xchg
cwtl
loope
in
lods
cmp
dec
xchg
cmp
sbb
stc
jmp
stos
clc
pop
jmp
lea
pop
shll
stc
jmp
add
aas
add
dec
cld
testb
out
or
test
dec
cld
xchg
cmpsb
adc
lds
pop
vmovd
cmp
adc
test
pop
adc
sti
fdivp
sbb
jnp
cltd
popa
je
mov
call
test
push
adc
mov
fwait
push
mov
add
add
cmp
js
sub
das
cli
inc
push
pop
push
adc
inc
inc
sbb
push
mov
cmc
mov
and
les
aas
stc
or
xchg
rep
xchg
mov
lods
dec
or
shl
and
shlb
call
cmp
adc
enter
add
inc
std
incl
lret
mov
les
aas
jno
icebp
insl
pop
lret
sub
inc
or
dec
mov
inc
std
inc
sar
push
nop
pop
and
lock
jmp
adc
jmp
shl
and
cmp
outsb
xchg
lahf
fwait
or
ds
int3
pop
pop
dec
or
sahf
add
add
add
pushf
ror
outsl
sahf
fnsave
sub
dec
ds
cli
out
pop
mov
clc
pop
sti
jmp
pop
xchg
call
pop
xchg
jmp
rcrb
ljmp
enter
or
mov
dec
icebp
test
inc
icebp
mov
jbe
push
popa
jbe
sbbb
xchg
xor
sbb
jbe
sub
jbe
lahf
adc
cmc
jne
xchg
jne
and
jne
icebp
jne
pop
sbb
nop
adc
sub
jbe
pcmpeqd
add
jbe
lods
clc
jne
dec
lock
inc
aam
add
mov
add
test
ja
xor
xchg
daa
int3
pushf
dec
inc
push
bound
test
fnstcw
add
shl
aas
xor
push
je
add
xlat
enter
orl
dec
sub
xlat
iret
sbbl
inc
add
add
sbb
gs
jmp
pop
int3
int3
rorl
int3
int3
mov
int3
int3
mov
int3
int3
cmp
jmp
data16
sbb
or
add
sahf
notl
push
adc
mov
cmp
mov
pushf
or
mov
sub
jae
jg
mov
test
pop
xchg
in
cmc
push
xor
sti
mov
test
push
add
std
out
fcompl
jge
inc
add
pop
mov
repnz
mov
xchg
pushf
jge
inc
add
das
mov
cmpsl
dec
or
push
cmp
add
mov
hlt
cmp
movb
call
leave
int3
nop
xchg
int3
mov
xchg
cmc
shlb
push
aas
pop
fisttps
adc
sub
les
add
fwait
pop
loopne
cwtl
fstps
jmp
jnp
cmpsb
adc
inc
xlat
lcall
mov
cmpsb
int3
pop
popf
addl
pop
lods
mov
bound
add
pop
xchg
pop
sub
add
or
fidivs
fwait
push
push
jecxz
add
sti
mov
aaa
outsb
dec
int3
xchg
sub
inc
dec
sahf
mov
bound
xchg
int
call
push
aaa
pop
stos
andl
cmp
inc
jge
ret
movsl
push
push
push
xor
sbb
pop
add
add
test
lret
jl
sub
xlat
jo
xor
and
mov
stc
push
pop
test
dec
xchg
cld
jo
mov
sub
bound
out
xchg
fwait
pop
test
es
mov
in
and
inc
orl
loopne
popa
fadds
pusha
lret
rcl
out
sbb
add
arpl
sub
pop
or
flds
sub
pop
aam
les
ffreep
mov
rclb
leave
adc
cltd
push
testb
jno
cltd
pushf
testb
and
jl
and
cltd
callw
shl
andl
cld
cltd
in
testb
xchg
addl
add
add
rorl
movsl
cs
stc
aas
jnp
shlb
cld
pop
lods
lods
test
cmp
icebp
mov
sub
clc
sti
stos
int
cmp
dec
mov
mov
jo
rol
std
inc
clc
cmp
les
decl
cmp
sub
int3
clc
into
ror
addr16
jg
int3
add
mov
inc
outsl
add
add
add
lods
adc
xchg
jno
jno
xor
pop
lods
mov
cmpsb
jp
lods
inc
sbb
les
mov
rorl
cmp
cmp
add
out
pop
fsubrl
cmp
xor
bound
cmp
bound
xor
or
rcrb
adc
out
mov
jo
fldt
or
pop
addl
loop
les
xor
pop
add
outsb
int3
sahf
pop
or
pop
add
pop
pop
nop
in
push
test
mov
test
das
stc
push
pop
xor
in
mov
jb
push
fwait
in
jo
sub
out
inc
mov
pusha
cld
sub
rcl
test
add
fs
rorb
iret
scas
mul
adc
stc
decl
out
in
pop
in
out
adc
loope
pop
push
mov
lahf
call
add
adc
pop
movb
ss
or
test
out
fimuls
lea
pop
sarl
sbb
cmpb
or
cmpsb
pop
push
addb
cli
add
das
jns
gs
jae
lods
sarb
pop
cltd
push
lock
movsb
insl
in
outsl
loop
call
inc
adc
lock
and
jb
outsb
or
xchg
hlt
cmp
testb
les
xchg
stc
jecxz
sub
jbe
std
clc
mov
mov
add
add
movsb
jge
sub
pop
cltd
pop
xchg
xchg
inc
das
add
sti
test
or
sub
sub
jle
stc
jae
std
xchg
or
call
sarb
mov
icebp
aaa
test
outsb
mov
cmp
int3
test
xchg
test
mov
add
add
lcall
xchg
les
or
pop
mov
pop
xchg
insb
push
jmp
shr
les
out
sbbb
mov
pshufw
enter
rcrl
jl
pop
out
inc
xchg
sti
adc
outsl
pop
add
ds
les
cmc
addb
pop
xor
xchg
jg
sub
push
fisubl
or
roll
add
add
or
cld
dec
xchg
jnp
xchg
sub
jge
sub
aad
test
in
adc
test
shll
mov
ret
pop
add
pop
in
xchg
adc
loope
pop
push
mov
fwait
call
push
inc
subl
mov
inc
cmc
mov
cld
bound
in
xor
push
dec
xor
sub
mov
movsl
out
fidivrl
icebp
mull
jmp
mov
cs
add
in
pushl
loope
jg
int3
push
cltd
fisubs
or
mov
dec
call
test
ds
loopne
ljmp
cmp
push
addb
add
add
dec
or
xor
dec
push
int
call
and
orl
rolb
push
test
mov
xorb
add
arpl
dec
sahf
add
scas
adc
dec
int3
testb
add
sbb
mov
or
incb
inc
out
mov
cmpl
add
mov
add
je
addb
mov
inc
sub
stc
mov
xor
push
lods
movl
enter
inc
adc
stc
cmpl
test
or
inc
cmp
stc
push
mov
cld
lds
cmp
lock
adc
xor
mov
push
xrelease
add
insb
test
xchg
es
fwait
mov
bound
add
insb
rcr
dec
orb
cmp
pusha
ljmp
sahf
or
push
aam
sub
ds
jl
aam
sti
add
outsb
leave
dec
and
pop
test
mov
xor
jl
push
mov
inc
add
pop
insl
pop
cmpsw
add
sar
xor
push
lods
cmpsb
xor
mov
sbbl
out
xchg
hlt
div
inc
cmp
pusha
xchg
test
repz
in
add
add
sub
pop
jge
add
pop
jo
pop
xchg
out
cmpl
test
int3
sub
push
aaa
jge
mov
sub
add
xchg
push
xor
cmpsb
fldl
pop
stos
ficomps
pop
xchg
push
dec
add
insl
push
push
fcmovnb
and
pop
jnp
sub
mov
incl
xchg
imul
lods
aad
ljmp
add
sbb
fsub
push
insb
dec
hlt
push
es
cli
jae
xchg
xchg
incl
fildl
pop
mov
idiv
push
push
add
in
dec
sti
and
addb
dec
nop
das
mov
idiv
out
sbb
sti
xorb
test
outsb
addl
ja
pop
mov
enter
pop
std
inc
stc
mov
dec
arpl
sub
mov
sbb
pop
std
inc
jmp
jns
pop
inc
ja
add
imul
je
std
inc
jns
test
mov
stc
dec
cmc
int3
mov
aam
test
outsl
clc
mov
mov
je
mov
stc
aas
cmc
int3
mov
sub
test
xor
rcrb
fcomps
mov
aas
xchg
lret
jp
ljmp
hlt
mov
inc
cmpsl
jg
lcall
add
test
scas
out
add
and
shrl
aam
adc
ss
repz
faddl
jb
in
fsubrs
pop
inc
sbb
add
push
js
push
ds
outsb
mov
mov
sbb
js
imul
pop
mov
fsubrs
pop
inc
sbb
stc
div
xchg
rcrb
push
xor
lods
xlat
mov
mov
xor
dec
bound
ja
aas
and
xlat
mov
xchg
xchg
cwtl
xor
dec
jb
xor
lods
xlat
mov
pop
xchg
cld
mov
push
xor
sub
ret
xor
test
sbb
orl
add
cltd
adc
sub
xor
out
pop
sbbl
pop
orl
fld
je
movsb
dec
cld
mov
xor
imul
iret
andl
inc
cmp
andb
jge
cmpsb
jne
pusha
hlt
insb
jne
push
sbb
icebp
aas
addl
jne
cmpsb
pop
imul
iretw
jp
jns
je
ss
cld
mov
arpl
adc
push
push
push
fnstsw
xchg
fstpt
inc
mov
jge
pop
cmpb
inc
cmpsl
loope
icebp
pop
jp
mov
jb
push
idivb
into
inc
lock
pop
mov
xor
psubw
pop
lods
mov
cld
add
cmp
push
cmp
sub
dec
idivb
ret
scas
mov
jmp
jp
shrl
inc
sarb
jnp
sarb
inc
hlt
ret
cs
inc
pop
sub
sbb
sbb
cmpsl
in
jp
pop
incb
dec
add
add
out
loop
clc
inc
cmp
sub
dec
xlat
xor
mov
test
or
ret
mov
outsb
test
cwtl
divl
and
mov
xlat
cmpsb
aam
test
call
push
ja
pushw
xor
hlt
lock
xchg
xchg
xor
pop
jge
xor
mov
mov
idiv
mov
stos
adc
imul
das
leave
icebp
push
dec
sahf
in
add
sbb
add
je
lods
sbb
xor
pop
imul
sbb
mov
cmp
adc
push
push
and
push
push
subl
movsb
shlb
inc
xchg
rcl
inc
and
push
push
in
jle
clc
jb
push
call
mov
andl
fdivrl
bound
roll
add
adc
mov
loop
jl
mov
pop
jnp
lea
jno
push
mov
clc
out
daa
test
fldl
pop
insl
sahf
jne
jbe
addl
dec
sbb
call
imul
add
fadd
adc
sbb
in
test
es
stc
jne
movsb
jne
add
and
shrl
and
dec
push
les
mov
sub
jge
pop
and
add
aad
movd
xor
or
hlt
mov
xor
decl
jno
sub
or
or
pop
ljmp
mov
add
mov
clc
ja,pt
add
loopne
mov
js
mov
ja
lods
bound
fsubs
push
aam
ja
rolb
les
inc
int3
fcmovnu
hlt
fistpl
orl
pop
mov
bswap
xlat
cmp
mov
andb
inc
mov
sbb
mov
sbb
shll
outsb
mov
add
iret
push
xor
inc
adc
xor
les
add
pop
out
add
mov
ret
mov
dec
jnp
cmp
and
test
jns
jl
ret
mov
add
stos
mov
or
push
lret
pop
ret
cmpsl
pop
sbbb
sbb
cmpsl
out
inc
int
push
mov
xchg
ljmp
mov
add
cmp
cmp
cmpsl
add
inc
cmpsl
sbb
mov
call
test
add
inc
sbbl
js
add
ret
jmp
push
sbb
jmp
enter
shlb
pop
adc
push
bound
outsb
add
pop
enter
fstl
lea
ljmp
inc
repnz
ljmp
and
mov
xchg
fnsave
xchg
mov
adcb
mov
add
mov
int3
inc
int3
jmp
and
dec
dec
aam
or
lret
cmp
movsb
pop
cmpl
push
cld
xchg
xor
adc
mov
int3
inc
xor
les
xchg
arpl
xor
jl
add
or
dec
mov
jno
mov
scas
fdivr
push
jge
call
inc
dec
add
xchg
push
push
inc
js
incl
je
mov
nop
inc
js
mov
mov
and
dec
add
addl
inc
xchg
xchg
notl
dec
ss
inc
enter
push
add
rorl
sti
jbe
outsb
push
sbb
xchg
cmp
sbb
pop
jno
subb
jns
mov
pop
out
xchg
fcoml
inc
sbb
adc
jecxz
rcr
or
pusha
sbbb
pop
xchg
mov
dec
pop
push
pushf
out
adc
frstor
or
fwait
add
sub
lea
push
dec
je
outsl
lods
cwtl
mov
sbb
pop
pop
shrl
insb
rcr
leave
not
in
xor
push
add
pop
add
sbb
inc
adc
insb
or
test
inc
xchg
in
sbb
and
sbbb
stc
aad
inc
rclb
repz
call
add
mov
add
call
or
in
test
clc
push
inc
fiadds
dec
movsb
cld
mov
icebp
adc
push
pop
subl
pop
jge
inc
daa
jb
adc
loopne
mov
insb
mov
dec
mov
cmp
xor
fldenv
adc
cwtl
idiv
data16
lea
xchg
add
sbbl
ret
add
sahf
je
pop
cmpsl
imul
mov
push
xchg
test
pop
add
nop
jmp
xchg
addl
sbb
pop
dec
or
inc
jmp
add
sahf
je
fisubs
adcl
roll
mov
add
xchg
sub
les
jge
add
mov
xchg
int3
jp
inc
insb
test
imul
or
in
inc
xchg
adc
dec
outsb
xorb
stos
xchg
imul
loopne
add
xor
das
or
add
std
ss
cmp
push
dec
aas
or
mov
fildl
les
or
mov
cmp
out
les
popa
test
pop
out
lret
dec
les
test
jo
les
mov
inc
inc
es
pop
imul
adc
push
push
xchg
mov
add
arpl
cmp
mov
outsl
data16
mov
ljmp
xchg
filds
add
pop
outsb
jmp
mov
or
xacquire
out
sbb
pop
subl
outsb
in
cld
and
dec
nop
js
mov
test
pop
add
sbb
jmp
cmp
pop
or
push
pop
add
enter
cmp
xchg
pop
push
xchg
enter
inc
push
adc
xchg
les
pop
add
fstl
bound
call
dec
out
call
notb
or
stc
jmp
nop
inc
add
sub
or
inc
jbe
je
jne
mov
ljmp
out
lcall
pop
add
rorb
jl
sub
loope
pop
add
add
add
dec
mov
jg
ficompl
addl
fdivl
lods
add
pusha
pop
cmc
lcall
nop
sbbl
rorb
cmpsl
adc
pushf
adc
sub
addb
ds
negb
or
rcl
out
sbb
ljmp
add
outsl
lods
stos
addb
add
pop
xor
add
add
dec
js
sub
jmp
jne
test
inc
mov
js
ja
dec
clc
jae
mov
adc
jmp
call
inc
les
add
sub
test
ret
cmp
ss
mov
jl
outsl
sti
adc
lcall
sub
dec
mov
loopne
cmp
pop
popa
add
out
push
mov
cltd
add
out
stos
nop
out
sub
callw
pop
jno
dec
nop
iret
add
push
data16
xlat
pop
ljmp
cwtl
lret
fnstcw
outsb
pop
jg
jmp
insl
mov
inc
outsb
in
xlat
inc
pop
out
nop
xlat
sub
inc
adc
mov
or
stos
dec
add
sbb
fsubrs
push
pop
inc
adc
or
mov
add
les
out
inc
or
mov
sahf
mov
les
push
add
call
enter
mov
lcall
xlat
dec
jns
movsl
je
shl
jbe
insb
dec
inc
rclb
rcrl
jge
add
out
pop
add
repnz
mov
les
stc
aas
ficoml
ret
adc
jmp
add
adc
xchg
dec
dec
add
bound
inc
sti
call
mov
sub
push
int3
add
xchg
int3
int3
loope
int3
int3
sub
jmp
rcll
insl
daa
dec
push
testb
lea
xor
ret
mov
bound
xor
addl
sub
arpl
add
leave
xchg
call
push
pop
test
loope
hlt
push
mov
push
inc
push
jmp
mov
xchg
addl
pop
add
adc
dec
push
roll
stc
hlt
inc
mov
lcall
inc
adc
inc
lock
inc
dec
jno
inc
sbb
sti
cmc
xchg
call
add
push
jno
inc
xor
std
jl
das
xchg
push
inc
push
cli
adc
fs
jg
jo
jle
repz
out
xchg
jl
and
fbstp
dec
lea
shr
push
in
lret
xchg
enter
pop
dec
lods
loop
pop
lods
push
push
mov
or
jbe
add
lea
add
xlat
es
js
sub
jbe
push
shlb
pop
mov
add
pop
or
dec
fisubrl
incl
jae
mov
push
aaa
mov
shlb
loopne
jo
push
ret
mov
jle
xchg
addb
outsb
jg
or
ret
or
xorl
or
subl
mov
jle
cmp
addb
add
cli
inc
sbb
das
dec
adc
mov
pop
es
ds
push
xor
pop
push
aaa
je
mov
mov
std
jae
insb
in
fidivs
adc
pop
dec
jbe
cwtl
pushf
mov
stc
mov
hlt
jmp
jo
in
add
je
inc
pop
stc
bound
mov
test
pusha
insl
idiv
dec
aam
hlt
cmp
idiv
push
dec
add
sti
and
cmpl
popf
jecxz
and
xchg
push
sbb
repz
stos
xchg
mov
mov
or
pop
jnp
cmp
mov
mov
push
repz
lea
mov
cmpb
scas
xor
loop
je
aam
jmp
and
sub
xchg
fcmovnu
inc
in
aam
shlb
movl
jg
mov
jg
cwtl
mov
pop
stc
xchg
orb
inc
clc
cld
inc
cmp
add
test
outsb
stc
imul
add
insl
call
inc
cmp
add
add
and
insl
stc
inc
inc
jo
cmp
cli
and
jge
std
xchg
nop
add
sti
dec
ss
aas
pop
insb
daa
in
or
jb
loopne
pop
int
cmpb
jb
repz
pop
mov
fbld
imull
mov
add
add
or
mov
or
clc
roll
negl
lock
in
cmp
adc
loopne
jb
or
lods
insb
cmpb
bnd
add
jno
fisubrs
add
ja
pop
bts
loopne
mov
mov
pop
jg
cmpsb
jne
mov
sbbl
dec
pop
add
orb
and
loopne
lds
stc
je
dec
stc
pop
adc
add
mov
adc
add
sbb
cs
xchg
in
inc
sbb
pop
stc
bound
jbe
push
aad
mov
jb
mov
divb
adcl
stc
and
std
jo
loopne
insl
add
sbb
cmp
sbb
and
notl
mov
subl
pop
pop
push
popf
push
mov
mov
mov
lea
mov
sub
push
lea
mov
push
ja
dec
mov
cmp
pushl
mov
mov
pop
clc
inc
test
mov
mov
dec
movsl
mov
add
les
stc
mov
faddp
or
xchg
je
fs
add
sub
das
imul
popa
sub
pop
dec
mov
test
push
cmp
int3
adc
jne
inc
xchg
push
aas
pop
stc
sub
sbb
je
push
cld
mov
inc
insl
mov
add
movsb
decl
outsb
pop
jp
jg
imul
push
iret
mov
int3
ret
push
icebp
cld
sub
imul
shr
jecxz
xor
lcall
aas
adc
stos
aas
or
cmp
and
mov
mov
fldt
les
add
xor
xchg
outsb
dec
mov
outsb
aad
stos
sbb
lods
std
add
lods
jo
insb
jmp
dec
daa
int
sbb
add
pop
xor
nop
pop
sub
mov
pushf
jp
fidivrl
call
and
bound
into
dec
add
mov
mov
bound
cmpsb
add
inc
jo
clc
fisubrs
enter
rcr
pop
je
adc
sbb
add
xchg
mov
stos
call
push
push
subl
add
jbe
fsubp
or
outsl
add
jl
mov
test
or
or
add
lea
es
fisttps
int
clc
pusha
or
push
adcl
xchg
or
push
addb
xchg
repnz
mov
pop
add
mov
insl
sbb
das
clc
adc
pop
popf
or
mov
ljmp
jbe
mov
mov
or
repnz
cmp
add
popf
orl
iret
orl
fiadds
loopne
add
push
jnp
pop
or
addl
stc
incl
insl
pop
jecxz
les
std
dec
repnz
in
xor
push
icebp
cld
test
std
inc
jp
outsl
dec
jns
xchg
js
mov
icebp
cld
xchg
add
les
mov
icebp
jns
push
jns
add
icebp
stos
add
and
inc
dec
mov
icebp
jns
add
xchg
mov
jmp
add
icebp
xor
fwait
fcmovb
inc
dec
add
repnz
inc
js
cwtl
les
add
lahf
jle
out
add
shll
add
pop
jo
inc
pop
out
inc
ljmp
pop
shll
les
ss
push
pop
dec
les
push
push
es
xlat
cmpsl
or
shrl
jge
cli
out
add
lahf
pusha
stos
test
out
push
dec
cmpsl
lret
adc
pop
data16
int3
xchg
jne
jb
mov
dec
mov
adc
mov
sahf
out
roll
add
aas
add
shrb
aaa
pusha
pop
pop
call
jb
inc
icebp
je
xlat
inc
loope
aas
dec
loope
pop
add
cmc
add
fdivrp
stos
stc
cld
outsl
or
add
dec
pop
or
jns
pop
push
jno
pop
stos
aam
int3
popf
pushf
push
int3
mov
push
int3
lods
mov
int3
cmp
out
test
dec
icebp
xchg
ja
adc
js
sbb
jmp
mov
sub
or
dec
mov
xchg
add
pop
sbb
pop
add
insl
pop
and
adc
push
pop
pop
add
sub
add
add
pop
add
sbb
pop
add
push
stc
lcall
xchg
add
and
rol
push
add
fstl
mov
or
pop
add
fstpl
add
xchg
int3
int3
jno
int3
int3
popa
dec
int3
int3
outsb
pushf
jge
cltd
dec
jnp
and
and
push
add
les
push
xchg
or
jge
cld
test
je
cmp
inc
ljmp
mov
test
enter
mov
mov
add
xor
clc
fidivrs
dec
out
jge
add
push
inc
aaa
insb
push
cmp
ja
clc
add
call
aas
aaa
clc
jl
idivb
push
pop
jne
shlb
je
jl
negl
inc
jne
mov
jne
mov
into
dec
add
xor
mov
pop
in
rorl
inc
push
sbb
mov
xor
orb
cmp
pushf
jp
test
inc
dec
xchg
sbb
into
aad
lock
fwait
sete
mov
adc
push
clc
ret
adc
cmpsb
lock
lcall
mov
shrl
push
add
ret
enter
aaa
add
stos
aaa
clc
or
xor
dec
mov
dec
cwtl
jnp
mov
add
stos
aaa
test
stos
test
imul
sub
fsubl
dec
inc
jmp
lds
shlb
test
mov
int3
sub
sahf
out
jl
add
lods
test
sub
push
add
negl
mov
stos
push
sbb
clc
jo
add
hlt
dec
inc
jmp
sub
add
xor
incb
shlb
mov
push
adc
jnp
sbb
addl
dec
cld
dec
pop
test
cmp
int3
int3
add
inc
int3
int3
addb
xor
fcmovnb
jmp
dec
orl
loopne
jno
inc
je
shrb
pop
add
in
mov
add
push
pop
sub
jo
je
mov
mov
clc
adc
les
stc
cmp
mov
jge
insl
ret
pop
xchg
pop
add
xor
int3
nop
mov
ja
shlb
inc
cmp
jns
sar
int3
clc
mov
and
scas
icebp
arpl
sub
sar
cs
pop
aas
xor
pop
pop
fbstp
dec
fcomip
jl
hlt
xchg
nop
lock
enter
or
dec
int3
add
dec
int3
clc
lods
dec
int3
adc
in
dec
aaa
or
les
mov
add
mov
mov
movsb
es
lcall
add
addr16
mov
mov
adcl
lret
mov
jecxz
les
shlb
out
mov
sbb
push
xor
push
sub
push
xchg
out
jnp
call
call
cmpsb
shll
fsts
int
mov
pop
out
add
pop
out
mov
xlat
cmpsb
pop
mov
jl
pop
mov
pop
add
add
sbb
sbb
in
mov
pop
add
dec
jns
in
pop
sub
test
dec
add
inc
jns
ffreep
pop
xchg
dec
add
test
int3
xor
xchg
es
mov
add
cmpsl
push
jb
popa
test
xchg
add
pop
aas
xchg
cld
and
pop
add
mov
jne
add
in
out
mov
rclb
mov
rcrb
lahf
lret
push
lret
jb
adc
mov
gs
adc
pop
xorl
xchg
push
mov
clc
ljmp
cmp
insl
pop
adcl
scas
adc
or
fiaddl
rcrl
sbb
hlt
mov
pop
adc
pop
xor
adc
mov
xorl
pop
add
cwtl
xor
les
xchg
pop
mov
test
mov
mov
or
les
jecxz
lds
add
les
test
dec
int3
js
dec
int3
nop
inc
dec
int3
mov
and
test
xlat
test
mov
push
dec
scas
pop
test
icebp
adc
cmp
push
mov
add
jp
cmp
pop
out
dec
jecxz
or
pop
pusha
mov
jecxz
or
pop
jo
add
jecxz
or
pop
jo
sbb
inc
loop
or
pop
pop
mov
dec
out
dec
into
outsb
rol
out
mov
outsb
mov
dec
out
test
adc
outsl
loope
pop
jecxz
sti
add
pop
loop
cli
pop
out
aas
into
outsb
ror
out
xchg
out
dec
and
mul
sub
pop
sub
shrl
lret
add
ljmp
lds
sub
xorl
and
sub
pusha
jno
in
popa
cmpsb
dec
mov
sub
jecxz
add
loopne
mov
or
mov
cld
sahf
mov
ret
adc
fisttps
cmp
je
mov
not
out
sub
pop
and
jmp
add
jb
jb
out
jl
xchg
pop
stc
movsb
mov
arpl
test
ja
es
add
outsb
mov
add
push
pop
add
in
and
pop
add
pop
cmp
sbb
add
mov
and
aaa
or
xchg
add
rcrl
dec
pop
bound
add
mov
in
add
mov
imulb
mov
pop
mov
loope
hlt
loopne
je
out
jmp
or
pop
add
les
sti
sub
dec
jge
pop
xchg
sbb
out
sbb
mov
js
mov
pushl
mov
test
pop
cmp
shll
lret
in
lcall
fcomi
dec
pushf
test
ret
das
pop
test
cmp
xchg
xchg
jns
jmp
int
inc
dec
imull
cmp
push
aas
fistpll
int3
mov
int3
xorb
dec
cli
aam
testl
adc
cmpl
pop
inc
sahf
pop
mov
frstor
lret
mov
add
pop
insb
rcll
lods
icebp
pop
les
mov
outsl
je
les
xchg
imulb
ret
loope
push
dec
xchg
mov
or
or
stos
std
sbb
stc
pop
sbb
lock
push
es
pop
sbbl
out
test
dec
scas
sarb
loope
fisubs
leave
pop
out
insb
fisttpl
icebp
fdiv
in
fcmove
jl
ss
sbb
jmp
sahf
fld
repz
pop
sub
add
cmp
push
inc
dec
pop
add
cmp
std
add
cs
jmp
std
pop
nop
pop
add
dec
cmp
add
add
push
xchg
push
bound
mov
lods
or
int3
cmp
jl
fwait
lahf
push
jb
arpl
push
cmp
shlb
clc
pushw
ficompl
cmp
add
test
add
add
pop
addl
or
add
pop
add
sub
sbb
aas
mov
mov
lcall
adc
push
xorl
lret
mov
out
cld
mov
jne
mov
test
pop
add
shl
and
ljmp
pop
add
mov
pusha
add
add
fistpll
adc
dec
ret
bound
add
add
test
xor
dec
stos
add
mov
add
mov
imul
cmp
cmp
in
clc
test
pop
mov
mov
lcall
insb
int3
adc
roll
test
mov
xor
add
xchg
out
sub
push
mov
cmp
add
dec
outsb
lea
std
popa
xchg
in
push
xor
out
lcall
insl
xchg
shll
clc
jnp
bound
push
out
inc
jmp
out
xchg
gs
or
out
les
xchg
add
scas
testb
pop
into
pop
inc
sahf
jl
les
xor
stos
pop
xor
push
outsl
fldl
or
mov
shl
loopne
sbb
out
inc
mov
mov
add
loop
hlt
dec
xchg
ret
add
xlat
jecxz
or
lret
mov
jecxz
cwtl
mov
out
ud0
out
dec
scas
fldcw
aad
popa
cmp
lret
pop
test
dec
add
add
stos
jnp
pop
bound
mov
xchg
out
clc
xchg
mov
ffreep
pop
std
stos
outsl
xlat
xchg
mov
push
in
test
add
scas
out
xor
aad
jge
out
clc
repnz
fimuls
mov
xor
jns
mov
or
cli
popa
add
adcl
jg
add
out
inc
add
adc
adc
nop
inc
add
call
std
pop
mov
loope
in
sbb
or
sub
je
dec
mov
push
or
pop
add
mov
or
data16
mov
roll
or
clc
ficoms
mov
loop
mov
add
test
cmc
rcrb
es
dec
mov
cli
insb
mov
adc
xchg
dec
in
test
cwtl
std
push
mov
xchg
xchg
adc
add
or
jae
adc
add
adc
es
stos
push
arpl
icebp
test
bound
mov
add
pop
int
xchg
adc
add
inc
add
scas
pop
in
add
push
call
mov
out
jmp
loopne
xchg
pop
out
lea
add
les
scas
outsl
jne
popa
inc
mov
enter
rolb
fists
in
xor
outsb
mov
and
lret
lret
loopne
lcall
pop
jae
inc
out
dec
outsb
roll
test
fistps
dec
aas
xchg
push
inc
lret
jp
ret
jmp
popa
jge
popa
pusha
inc
mov
jmp
and
bound
mov
clc
pop
andl
xchg
loopne
adc
add
insl
mov
sbb
push
dec
cs
fisubs
push
xchg
dec
add
mov
mov
jmp
mov
test
aam
xor
ljmp
aad
xchg
fucomp
clc
hlt
jmp
sub
and
repz
mov
mov
xchg
add
popf
pop
pop
sarl
hlt
add
out
sahf
sti
call
jb
xchg
push
pop
add
hlt
inc
clc
out
mov
iret
xor
mov
mov
dec
in
cmp
fimull
leave
repz
xchg
lods
or
insl
aad
add
gs
data16
add
dec
or
jge
mov
repz
xchg
mov
jnp
adcb
decl
pusha
lcall
adc
int3
mov
mov
out
cmp
repz
andb
cmp
std
lcall
out
sub
cli
jmp
xor
dec
jnp
adc
repz
or
cmc
incl
mov
adc
repz
push
xor
into
push
cmp
push
jnp
add
push
jecxz
cli
insb
mov
xchg
pop
sti
jge
mov
ljmp
dec
outsb
lret
xlat
aam
mov
pop
out
cld
push
pop
idivl
out
pop
mul
stos
mov
negb
add
fadds
les
out
imul
or
out
leave
sbb
jp
cmpsl
rolb
add
shll
pop
fisubrs
int
insb
add
pop
sub
sbb
repz
rep
jmp
jmp
pop
add
jle
mov
pop
add
pop
jge
sbb
sbb
push
adcl
mov
lods
add
int3
cmp
testl
push
dec
add
ss
stc
ja
add
push
xor
pop
add
inc
out
add
adc
cmp
fisubs
dec
xchg
dec
add
scas
mov
arpl
adc
rolb
clc
rolb
fnstsw
and
jbe
cmc
mov
call
clc
in
mov
mov
inc
ret
cmpl
mov
loopne
push
popf
pop
jecxz
add
sub
xchg
loopne
push
lods
pop
jnp
mov
pop
add
mov
f2xm1
or
pop
mov
cmpsl
or
and
or
or
pop
mov
pop
push
adc
outsl
mov
sub
out
dec
mov
or
test
repz
repnz
adc
push
pop
jge
pcmpeqw
bound
mov
xlat
popf
das
loopne
sti
cmpb
divb
pop
in
cld
aas
ss
test
xchg
repnz
jns
push
ja
loop
pop
test
call
notb
aas
lods
hlt
test
icebp
cmp
pextrw
test
bnd
pop
outsb
into
add
lahf
adc
pop
jbe
dec
out
sti
xchg
xchg
aam
sbb
inc
fcom
js
mov
out
dec
fmull
lock
fdivrl
mov
gs
rcl
mov
out
popf
and
mov
pop
pop
jge
dec
out
stc
loope
int
push
cmp
daa
add
stos
push
ficoms
add
out
ss
stc
pop
mov
jl
out
mov
dec
add
pushf
mov
jno
push
stc
cmpsl
sbb
ja
dec
add
jl
adc
xor
neg
xchg
xor
xlat
cmp
mov
pop
add
sbb
jns
outsl
dec
dec
add
xor
mov
or
lcall
add
add
lock
mov
mov
xlat
pop
std
popa
lret
pop
adc
fildl
loope
rclb
add
testl
sbb
mov
pushl
mov
in
pushf
int3
int3
mov
fs
and
dec
mov
cmpsl
xor
add
pop
jecxz
and
sbb
mov
rorl
xlat
popa
mov
mov
bndstx
inc
hlt
mov
or
cld
call
push
add
int
mov
cmc
mov
repz
and
pop
cmp
lock
adc
stos
inc
arpl
xor
out
decl
stc
mov
add
call
inc
sar
mov
dec
sub
test
sbb
jl
mov
add
jl
mov
xchg
xor
push
aas
or
and
mov
mov
jnp
aaa
pop
xor
loop
insb
mov
jp
jl
mov
pop
pop
or
les
mov
je
in
add
loope
jl
dec
out
pop
dec
out
les
imul
lods
out
sti
loopne
jl
js
inc
xchg
lret
repnz
icebp
xchg
sub
lock
aad
lock
aas
clc
dec
add
repnz
dec
mov
push
lock
mov
jnp
dec
outsb
jae
dec
out
lea
popf
loope
icebp
jae
mov
cmp
faddp
pop
bound
mov
push
jb
cmpl
add
or
movsl
add
pop
mov
pop
add
ljmp
loop
fs
out
mov
sti
jo
lock
sbb
inc
loope
pop
nop
xor
testb
test
xlat
sbb
add
mov
pop
test
add
sbb
pop
cltd
or
movb
sub
mov
mov
incl
pop
add
ss
adcl
lret
loop
fimuls
add
xchg
orl
nop
mov
xchg
sbbl
inc
xor
std
inc
inc
add
pop
mov
adc
pop
add
xchg
push
jle
cld
cmp
sub
mov
ficomps
adc
in
cwtl
and
adc
stc
add
icebp
mov
fwait
jmp
imul
dec
in
call
cwtl
adc
cld
decl
call
bound
push
jbe
xor
mov
xor
jl
pop
cld
ljmp
add
int3
add
into
sti
scas
dec
out
inc
cmp
out
jle
mov
inc
pop
std
jecxz
int
lret
and
add
mov
in
repz
jecxz
inc
les
or
js
mov
mov
out
les
mov
cmp
jp
scas
mov
je
sub
or
add
inc
mov
add
add
dec
xchg
insb
jl
out
inc
mov
jnp
dec
inc
xlat
shrl
mov
push
outsl
call
pop
out
test
hlt
test
shrb
push
inc
lret
rcr
insl
scas
iret
jae
mov
add
je
out
jne
pusha
es
add
dec
add
les
xchg
dec
add
add
push
mov
movsl
lcall
jo
cmpb
fisttpll
sub
enter
pop
fdivr
lahf
aaa
fdivr
jmp
cmp
push
inc
and
jb
js
dec
pushf
xchg
or
push
lods
mov
pop
or
mov
outsl
cmc
outsl
ds
push
pop
dec
or
outsl
mov
outsl
aad
xchg
or
push
test
add
fwait
adc
fdivs
data16
mov
lods
push
test
sbbl
mov
jg
idiv
lret
lret
mov
pop
push
add
xor
or
pop
push
add
pop
or
mov
cmpsb
xor
rorl
int3
int3
icebp
mov
int3
xchg
pop
mov
lea
leave
inc
add
xchg
stc
jae
jmp
jnp
frstor
add
shl
pop
arpl
add
lods
pop
insl
xor
sub
inc
xchg
ljmp
ret
cld
jb
dec
mov
cld
call
aaa
les
inc
inc
add
cmp
ret
fsub
icebp
mov
adc
inc
push
aas
xor
add
inc
cmc
sub
rolb
out
cmc
sbb
mov
adc
test
pop
or
cwtl
sbb
cld
aas
hlt
adc
loopne
fcmovb
xlat
imul
mov
bound
lret
fldenv
sbb
mov
stc
add
jecxz
adc
out
xor
or
subl
add
in
sbb
cs
pop
pop
and
imul
test
add
ror
mov
roll
les
sbb
movsl
xor
cmpsb
sub
cmpsb
pop
mov
jo
add
decl
pop
jl
jns
adc
ffreep
pop
test
dec
ja
fiadds
fisttpll
aam
cwtl
cmpb
add
add
fldl
cmp
adc
pop
adc
jmp
add
adc
cmp
jno
insb
add
dec
jecxz
ffreep
pop
push
stos
sti
cmpsb
lret
xor
mov
dec
mov
mov
cmp
call
jnp
dec
ds
ljmp
mov
test
adc
pop
pusha
push
bound
insb
test
xchg
sbb
or
ud0
sbb
out
or
and
shll
jb
js
in
or
and
shrl
mov
mov
test
out
or
lods
inc
mov
jp
mov
popf
jge
and
pop
js
int3
int3
jo
jmp
jmp
jns
leave
inc
pop
add
sbb
adc
fsubs
lea
les
mov
fimuls
jl
mov
aad
popf
or
xchg
xor
or
xlat
fistpll
cld
mov
fildll
mov
jle
in
add
cmp
in
inc
pop
add
push
dec
pushf
test
cmp
or
lods
jge
add
inc
xchg
test
inc
ret
cld
rolb
add
into
inc
ds
jp
pop
mov
rcl
push
mov
sub
add
jecxz
xchg
jo
out
inc
and
inc
dec
mov
sbb
pop
out
jl
jmp
fadds
stc
push
sarl
dec
adc
in
adc
lahf
add
lcall
mov
shl
sub
pusha
aam
pop
out
ss
add
jecxz
xchg
call
pop
out
les
sbb
push
mov
add
aad
insb
mov
out
stc
dec
add
mov
jge
push
rcrb
push
sub
aam
pop
dec
and
jb
pop
xchg
mov
add
push
test
push
into
jl
add
push
cltd
out
repz
xor
add
sarl
cmp
clc
pusha
mov
in
dec
jmp
jmp
inc
sub
fisttpll
jmp
pop
dec
pusha
dec
sub
cmp
jno
fisttpl
inc
mov
loop
pusha
push
pop
add
pop
insb
add
jbe
push
adc
push
sbbl
arpl
mov
add
fucom
orl
in
xchg
pop
adc
mov
xchg
popf
push
orb
ret
add
cs
mov
or
push
or
orl
mov
adc
push
pop
mov
clc
adcl
stc
mov
rol
add
cmp
xchg
xchg
xor
mov
int3
xchg
repz
stc
cmp
jle
mov
cld
test
loope
add
cmp
pop
dec
sub
iret
ret
cld
test
test
cmp
ret
cld
out
stc
jmp
mov
and
inc
int3
addb
int3
js
mov
dec
cmp
add
add
ret
xchg
repnz
jmp
in
pop
out
add
fildll
ret
pop
out
sub
cmp
sbb
pop
out
and
and
cmp
out
sbbl
dec
pop
ret
data16
push
in
add
pop
jl
int3
or
fcomps
out
xor
jno
rcrl
pop
xchg
fidivl
xchg
push
les
xchg
aaa
data16
push
fldl
les
cmc
int3
or
rcrb
out
call
pop
out
xlat
mov
enter
iret
or
fs
psubsb
adc
xor
mov
push
inc
clc
in
test
ret
cld
nop
psubsb
adc
xor
push
iret
mov
jo
add
std
or
lret
sub
add
pushf
push
mov
xchg
out
arpl
jns
test
test
jg
loopne
adc
jmp
out
insb
add
cmp
adc
mov
or
add
testl
stos
add
imul
mov
mov
orl
mov
push
add
pop
adcl
xorl
lds
repz
ret
add
pop
pop
mov
pusha
pop
ror
mov
push
popf
pop
orl
add
es
add
pushf
subl
jno
mov
int3
cmp
int3
int3
sbb
int3
int3
les
or
pop
lea
stc
dec
std
inc
int3
adc
in
add
jbe
test
sar
jae
mov
decl
or
std
jo
and
in
ja
xchg
mov
jmp
mov
pop
in
mov
dec
cmp
in
xor
dec
dec
gs
ret
test
inc
add
jge
mov
sub
add
sub
mov
adc
push
loope
mov
jno
ror
cmpsb
scas
xlat
loope
setne
mov
and
ss
pop
call
mov
pop
out
int3
jnp
les
dec
mov
pop
outsb
test
gs
inc
push
xrelease
data16
dec
xchg
popf
dec
cwtl
mov
loope
imul
add
add
pop
out
push
in
mov
les
mov
lea
add
in
ljmp
pop
add
imul
inc
pop
stc
daa
mov
psrlq
cmp
xchg
inc
lcall
cmp
jmp
out
pop
ja
push
std
outsl
dec
push
adc
xlat
inc
sub
pop
test
mov
sbb
call
insb
inc
jecxz
jmp
push
pop
add
xchg
xlat
rcl
xabort
inc
xchg
adc
cmp
jecxz
mov
mov
test
fcomi
or
sbb
xchg
or
fidivs
mov
dec
push
add
arpl
lcall
pop
mov
push
push
add
sub
popf
add
sbbl
mov
ret
scas
jg
ret
lea
dec
mov
adc
loopne
movsb
dec
mov
rcrl
add
dec
fdivrl
les
or
add
jns
insb
and
stc
jnp
dec
or
jecxz
inc
pop
hlt
sub
arpl
test
push
fmul
pop
out
dec
daa
pop
pop
std
aas
int3
or
in
aas
outsb
cld
dec
aas
xchg
or
dec
cmp
mov
and
adc
cld
jl
ret
dec
idiv
or
mov
movb
stc
inc
push
stc
vmaskmovdqu
roll
inc
pop
xor
inc
pop
xor
les
adc
mov
pushf
ljmp
rcll
add
and
rcrl
sbb
enter
aam
mov
jg
add
pop
loop
pop
lahf
leave
dec
ret
sub
xor
pop
out
xor
pop
out
mov
loope
adc
aad
inc
and
push
inc
add
xchg
xor
mov
pop
push
add
fdivl
les
bound
cmp
add
mov
das
add
dec
mov
mov
insb
insb
jge
out
insl
std
mov
enter
lds
jmp
sar
mov
enter
lds
in
enter
lds
in
enter
lds
out
enter
lds
out
enter
lds
loope
sar
and
or
lock
add
or
jecxz
sar
and
or
repnz
lds
in
sar
and
or
add
pop
scas
push
stos
pop
icebp
add
pop
scas
push
lcall
andl
mov
clc
decl
fsubr
loope
popw
imul
ret
fdivrp
jg
jae
ljmp
testl
add
loope
lcall
loopne
add
pop
jp
sbb
sbb
add
lcall
ljmp
push
in
pop
icebp
add
mov
test
mov
test
mov
test
mov
test
stc
mov
mov
test
clc
mov
mov
stc
mov
mov
add
add
sti
clc
mov
lret
or
mov
mov
clc
mov
int3
std
test
stc
mov
mov
clc
mov
into
std
test
stc
mov
mov
stc
mov
sar
test
jge
aam
sub
mov
cs
arpl
push
loop
pop
pop
mov
lods
mov
and
mov
pushf
add
pop
lods
imul
jmp
sbb
xor
add
test
into
enter
sbb
aas
adcb
mov
dec
int3
andb
add
pop
jns
sub
push
insb
push
push
fwait
mov
sub
mov
ja
add
sub
or
xbegin
add
pop
sarb
rcr
sub
push
and
rolb
out
call
pop
add
jmp
sub
sub
test
bound
sub
jns
jmp
inc
pop
aaa
sub
ja
in
int3
add
sbb
pop
test
dec
pop
das
sub
test
push
jg
jmp
adc
fwait
jmp
mov
cld
pushf
frstor
testl
pop
pop
xor
leave
cmp
cs
inc
fadd
jns
mov
add
sbb
testl
sbb
inc
popf
lret
or
popf
int
add
ud1
gs
or
pop
movsl
cmp
mov
lret
or
insl
mov
add
add
add
sbb
adc
ja
add
leave
cmp
cmpsb
adc
ljmp
aad
xor
icebp
cld
test
jae
sbb
icebp
cld
jle
mov
inc
rolb
les
or
hlt
jb
adc
ds
xor
stc
les
std
cs
jge
fwait
mov
call
int
add
jno
test
pushf
repnz
mov
xchg
mov
mov
call
jno
sub
test
adc
inc
mov
decl
jg
cmc
jno
test
repnz
inc
shlb
les
test
out
lret
pop
pop
dec
inc
scas
out
test
out
mov
push
add
sbb
xchg
jp
rcl
add
dec
stos
pop
dec
add
inc
test
pop
out
dec
addr16
add
sbb
test
out
les
daa
add
mov
rorl
cmpsl
shl
les
daa
add
sub
adc
shl
aad
add
add
enter
mov
pop
add
adc
jmp
mov
in
add
pop
fwait
jmp
test
outsl
add
mov
push
push
adcl
push
outsb
cltd
xor
clc
mov
sbb
mov
faddp
pop
add
add
sbb
mov
call
rorb
xchg
mov
jne
jmp
sbb
mov
in
out
mov
test
adc
mov
pop
add
xchg
mov
and
jne
mov
pop
sahf
or
cmpb
mov
jge
xor
rorb
add
nop
or
test
negl
enter
cmp
or
cwtl
mov
add
add
rorb
add
testl
pop
clc
cmp
icebp
test
out
cld
incl
xor
clc
insl
xor
adc
iret
push
xchg
xor
and
aaa
aas
out
fdivrs
dec
hlt
movsb
test
push
std
inc
mov
jnp
inc
out
mov
cmpsl
mov
fadds
les
jae
cltd
cmpsl
std
ds
jp
test
jne
mov
dec
xchg
imul
out
decl
pop
dec
clc
sub
inc
pop
xchg
inc
push
ret
cmovns
fadd
pop
out
jmp
lods
insl
ret
sub
mov
jbe
notb
enter
outsb
cwtl
orb
jbe
jp
sbb
test
sarl
pop
push
cmp
mov
jmp
add
mov
add
pop
out
int
stos
hlt
pushf
andb
outsb
shrb
loopne
dec
xchg
incl
inc
lcall
push
outsb
cmpsl
cmpsl
jp
ljmp
clc
cmpsl
mov
push
call
das
mov
cs
sahf
push
cs
sbb
in
add
sub
dec
out
xor
mov
jmp
test
imul
jnp
cmpsl
jbe
aam
mov
test
andl
bound
jne
push
test
pop
add
fists
stc
into
test
dec
addl
mov
and
pop
lock
fnstcw
xor
cmpsb
lock
stc
pushf
loope
xchg
ja
mov
popf
adc
in
pop
add
leave
scas
sbbl
inc
sbb
mov
pop
add
int3
lods
inc
inc
add
inc
inc
add
pop
add
pushf
pop
add
sahf
pop
add
push
add
add
mov
inc
lods
cld
inc
push
add
les
les
inc
hlt
inc
fdivr
cmp
repz
int
add
aam
jmp
cmp
and
les
decl
xor
and
les
or
or
sbb
adc
cmp
jl
jns
test
les
lds
pop
and
ret
fs
add
dec
and
lret
push
and
jecxz
sbb
sbb
sbb
xchg
in
push
negl
xchg
fisttpl
out
pop
pop
mov
je
int3
cmovae
or
dec
es
inc
cs
mov
sahf
dec
mov
cs
mov
add
pop
out
inc
push
lret
fisttps
ret
jmp
push
or
dec
adc
enter
rolb
cmpsl
dec
jg
les
mov
shl
out
pop
out
in
mov
or
mov
in
xlat
inc
pop
add
jnp
dec
lds
push
or
dec
adc
bound
sub
jnp
adc
imulb
push
push
pusha
and
jmp
arpl
lcall
movsl
pop
push
jle
jo
cmp
xchg
pop
stos
shr
pop
add
pop
xchg
jae
sbb
xor
pop
cmp
fistpll
in
cmp
mov
xchg
pop
jno
ja
dec
mov
dec
outsb
and
jp
add
cmp
mov
dec
lcall
shlb
andl
adcl
insb
pop
add
push
mov
ldmxcsr
je
push
mov
je
xchg
xor
add
sbb
popf
fadds
pop
add
in
notb
xor
push
pop
ja
lea
sbbb
adcl
dec
and
mov
insl
xchg
cmp
mov
inc
jae
subb
pop
jmp
and
cld
ss
clc
jo
fwait
mov
test
or
cld
inc
inc
push
or
mov
out
add
mov
sub
dec
mov
mul
les
jmp
gs
jg
cwtl
xchg
or
insl
jge
mov
sbb
add
fdivrl
and
pop
outsb
iret
out
ss
pop
js
xchg
cltd
cld
repnz
cmpsb
int3
aas
mov
insb
dec
pop
dec
loop
pop
pop
out
inc
mov
rclb
inc
jl
mov
movsl
hlt
mov
outsb
add
and
int
fstps
jge
inc
cs
out
dec
lahf
int
out
mov
add
pop
pop
rolb
cmpsl
push
outsb
pop
mov
loopne
mov
in
add
adc
addb
outsl
rcr
lcall
incb
shlb
jae
xorl
dec
jb
jp
arpl
aaa
out
dec
sbb
jo
mov
shr
cld
out
shll
out
pop
add
pop
add
idivb
add
add
or
xor
push
shll
mov
pop
add
rcrb
mov
inc
or
jp
ret
add
addl
fldenv
sbb
mov
pop
addb
add
sahf
and
jns
clc
je
sarb
movsl
nop
mov
repz
out
sub
sbb
dec
sub
movsb
mov
ljmp
xchg
shlb
je
cmp
sub
mov
ret
pop
int3
sub
mov
mov
sub
pop
int3
push
sub
movsb
mov
pop
lock
adc
mov
xlat
fiadds
enter
je
lea
test
stos
mov
xchg
lret
lret
loopne
ret
xor
or
fsubp
add
inc
daa
or
xchg
daa
cmp
fdivl
lods
stos
bnd
and
jl
or
inc
inc
inc
and
enter
loop
jp
mov
jg
push
out
or
mov
mov
js
or
mov
pop
adc
add
dec
in
fists
inc
loop
jg
int3
fiadds
les
and
cltd
loope
mov
inc
loope
lds
inc
lret
mov
or
cltd
gs
movsb
sub
or
lods
jmp
add
cmpsl
enter
repnz
sbb
mov
xor
or
arpl
inc
xchg
cmpsl
das
mov
orb
scas
mov
dec
add
pop
add
popa
je
iret
movsl
mov
filds
xlat
add
and
cmp
xor
jmp
cmp
loop
jae
mov
xchg
shrl
ljmp
jge
lret
jb
jle
bound
jle
shrb
add
add
mov
jno
ss
push
add
sbb
subb
loop
jmp
sbb
lcall
loopne
and
jle
ljmp
cmp
sahf
pop
test
jge
setle
pop
jle
mov
cmp
scas
pop
addl
int3
ljmp
test
pop
add
jle,pn
ldmxcsr
pop
jle
fdivrl
cmp
out
sbb
pop
push
addl
cmp
push
addl
lret
ss
pop
orb
add
push
jnp
add
jmp
rcr
into
lcall
icebp
scas
xor
dec
mov
jb
movsb
aas
or
in
out
add
pop
dec
add
add
add
jb
call
and
aas
fdivs
dec
neg
das
fbstp
adc
aas
test
add
scas
mov
into
cli
test
mov
scas
xchg
mov
push
mov
mov
and
mov
imul
add
pop
mov
imul
push
pop
out
hlt
in
add
pop
mov
cmp
stc
les
sti
icebp
int3
add
pop
dec
repz
daa
add
sbb
fld
fcomi
in
add
pop
dec
add
add
and
mov
jo
mov
mov
in
outsl
jecxz
fcomip
jecxz
mov
sub
jns
clc
inc
xchg
pop
push
cmp
cli
outsb
pop
dec
dec
push
add
lcall
adc
add
jnp
ljmp
add
add
aad
in
inc
mov
call
lock
call
ljmp
add
push
push
or
ret
sub
bound
adc
lcall
repnz
adc
into
ja
ss
das
ret
sub
pop
jp
rcl
sub
ret
mov
jo
pop
in
outsb
cmpsl
lock
dec
pushf
out
pop
xchg
das
les
fldl
pop
das
sbb
lret
add
push
int3
int3
jno
int3
int3
fsub
jmp
jno
adcl
mov
shrl
pop
add
test
lcall
mov
lcall
sbb
je
push
scas
test
mov
inc
inc
dec
stc
loop
dec
add
lcall
xchg
loopne
mov
mov
nop
dec
fdivrs
or
push
mov
testl
les
test
sub
in
orl
cld
test
ret
clc
test
mov
lret
inc
lock
aas
mov
xchg
clc
cld
inc
ret
xlat
mov
add
lcall
mov
sysexit
icebp
incl
stos
ret
mov
mov
je
push
dec
fisttps
adc
push
xchg
ss
pop
insb
or
pop
sub
mov
out
mov
push
imul
arpl
pop
out
lret
add
and
pop
sbbl
enter
mov
xor
leave
adcb
jp
add
xlat
pop
mov
xor
std
pop
pop
pop
add
xlat
pop
mov
fstpl
inc
xacquire
stc
ret
push
mov
out
xlat
xor
cmp
shll
dec
sub
cltd
inc
leave
add
and
rcrb
rclb
jecxz
and
stos
sub
rcrl
or
imul
leave
lods
clc
jmp
enter
kandnb
jo
fsubl
pop
xchg
pop
sub
jo
scas
xchg
stos
clc
jmp
pop
ret
inc
adc
pusha
xor
loope
add
mov
push
xor
jmp
loope
add
stos
xor
pmaxub
lcall
dec
sbb
loop
jmp
fildl
cmpsb
lret
rolb
dec
cmp
and
ret
or
jb
or
sbb
or
xchg
or
ret
daa
cmp
push
push
xchg
call
dec
jge
rorb
sub
add
es
leave
repz
or
es
adc
cmp
and
add
jnp
cld
int3
data16
repz
test
dec
insb
sub
dec
dec
jno
les
add
pop
mov
inc
pop
ds
sbb
mov
inc
in
test
cmpb
mov
incl
add
xchg
mov
into
arpl
int3
sbb
rorl
add
les
inc
stc
stos
mov
popa
lds
scas
addr16
int3
out
mov
xchg
push
testl
mov
arpl
pop
test
xchg
jg
pop
or
mov
xchg
test
mov
add
cli
sub
outsl
mov
xchg
loop
dec
xchg
int
inc
push
dec
repz
out
jmp
or
shlb
mov
xchg
and
jb
insl
inc
and
jb
popl
pop
int
enter
mov
push
and
jnp
sub
xchg
add
pop
add
pop
es
jmp
pop
jg
adc
test
lret
pop
scas
push
xchg
rolb
rcr
jb
mov
std
pop
cmp
xlat
std
mov
clc
mov
pop
adc
loopne
sti
dec
or
daa
lea
add
stos
orl
in
lea
xchg
sar
lcall
pop
or
hlt
scas
sub
push
and
pop
sahf
icebp
push
mov
add
fstpl
data16
int3
mov
in
mov
cmpsb
orl
data16
mov
or
mov
outsl
jnp
and
mov
push
and
orl
adcl
not
pop
sbb
int3
int3
xchg
gs
int3
add
out
in
dec
hlt
test
mov
mov
adc
sub
or
loop
rolb
icebp
pop
xchg
enter
mov
mov
mov
in
dec
aas
lock
dec
jle
push
dec
jb
dec
xor
jle
aam
aas
int3
adc
aas
int3
or
aas
int3
add
aas
int3
add
gs
dec
jle
jl
cmp
xorl
les
fistpl
orl
sbb
or
cmp
daa
addl
movsb
mov
xor
movsb
out
or
outsl
outsl
shlb
outsl
movsb
icebp
jp
xchg
or
sarb
dec
movsb
fnstcw
rorl
cmp
movsb
sarl
mov
jbe
cmpsb
test
pop
shld
std
mov
orl
pushl
cmp
arpl
sbbb
clc
bound
lahf
clc
inc
xor
add
inc
push
shlb
sbbb
lahf
addr16
add
cli
push
shlb
bound
lahf
sub
mov
fwait
mov
lds
dec
into
iret
mov
lret
lods
in
xchg
lret
repnz
loopne
shlb
stos
enter
pop
add
or
add
je
in
cmp
mov
adc
inc
mov
xchg
cmp
jnp
int3
int3
fldenv
int3
add
int3
int3
fldenv
int3
es
dec
mov
out
push
xchg
in
cmp
push
outsb
outsb
out
add
popa
mov
dec
jmp
and
out
hlt
mov
and
cmpsb
loop
push
repz
push
or
sbb
sti
je
nop
out
jbe
and
xchg
ljmp
mov
jmp
adc
aas
in
fxch
xor
in
mov
je
vpcmpeqb
test
mov
mov
and
pop
or
shrl
mov
xor
andb
js
xor
nop
cmp
push
dec
lahf
jl
les
test
sti
cmp
or
nop
daa
dec
mov
cwtl
adc
lcall
mov
incl
and
push
jge
pop
sti
test
aad
cmpsl
inc
or
lret
xlat
nop
xchg
lock
les
mov
fld
out
shll
out
lret
xor
inc
les
add
mov
or
add
inc
sbb
repnz
mov
pop
cmpsl
out
les
cmpsl
outsl
rolb
add
pop
pop
inc
add
test
push
jmp
push
out
jl
inc
aaa
mov
or
sbb
mov
lods
pop
mov
test
xchg
out
pushf
pushf
cld
test
cmp
or
or
sub
lahf
push
fucom
int
mov
push
mov
dec
xchg
or
or
jb
test
sbb
out
add
inc
push
mov
mov
or
or
sbb
loopne,pn
out
int
clc
mov
sub
ljmp
test
or
lret
or
sahf
sbb
pop
iret
adc
pop
gs
or
push
mov
sbb
out
and
push
rorb
cmp
or
add
mov
push
jl
dec
adc
sbb
loop
xor
pop
mov
inc
mov
pop
mov
push
mov
movsl
scas
adc
stos
stc
push
stos
jmp
mov
dec
lock
xchg
out
psubusb
idiv
and
jmp
les
add
xor
lea
das
mov
inc
les
bswap
in
mov
aas
outsl
in
push
add
xor
or
hlt
mov
scas
sbb
sbb
mov
inc
les
or
adc
adc
ja
addb
push
pushf
cmp
test
mov
cmp
cmp
js
push
add
pop
movsb
mov
aad
pop
and
mov
add
add
shll
or
xor
add
mov
sub
inc
mov
test
add
pushf
daa
jnp
cmpsb
int
popa
dec
pop
cmpsl
out
sar
repz
pop
jg
sahf
pushf
jno
dec
daa
xlat
js
cmpsb
gs
shll
add
inc
and
popf
shlb
les
sub
mov
pmaddwd
adc
add
rcrb
fbstp
inc
push
fwait
pop
or
cmp
pop
mov
add
hlt
xchg
xchg
repnz
clc
jmp
pop
xlat
push
icebp
jl
and
adc
test
in
push
cli
xchg
test
leave
es
mov
sub
mov
adc
add
add
pop
test
pop
mov
pop
add
push
call
add
aaa
mov
jo
add
insl
fcmovb
sbb
cmc
push
ret
out
sbb
and
add
xchg
arpl
dec
adc
fwait
idiv
mov
pusha
sbb
es
fldl
jo
scas
ss
cmp
les
fnstcw
addl
push
add
add
mov
or
cli
lcall
adc
loope
push
ret
dec
push
inc
xor
fcmovnb
mov
sub
mov
clc
jne
pop
pop
stc
inc
mov
aas
xchg
mov
enter
add
fldcw
test
push
push
add
add
les
mov
call
fwait
pop
pop
pop
pop
push
mov
jnp
dec
jecxz
and
dec
clc
roll
or
add
nop
dec
leave
lret
mov
lret
cmp
push
aas
push
sub
or
or
or
adc
cld
jno
xlat
xchg
push
test
pop
sub
pop
and
pop
out
out
adc
xchg
add
in
pop
add
mov
mov
repz
or
pop
inc
mov
or
cltd
out
jle
pop
dec
add
cmp
lea
fmull
or
out
les
sbb
sbb
lret
loope
repz
pop
pusha
inc
lods
ficomps
js
jecxz
in
ret
xchg
cmp
xchg
add
add
fstpt
jb
xchg
test
nop
stc
pushf
xchg
sbb
enter
into
adc
test
rcll
cmp
fisttpll
inc
sub
ljmp
or
orb
adc
fwait
inc
mov
pop
add
call
pop
cmp
jno
loopne
scas
adc
add
pop
cmp
ret
addl
inc
xchg
clc
jmp
xchg
or
push
call
adc
add
mov
call
mov
outsl
xor
wbinvd
mov
arpl
out
or
into
idiv
push
jecxz
adc
sub
mov
addl
xchg
divb
inc
add
test
or
xchg
dec
or
sub
mov
addr16
fsubrs
inc
add
inc
or
loopne
push
xchg
idivl
add
or
imul
inc
or
sub
cmc
call
mov
inc
sub
clc
jmp
sbb
jo
ret
cld
lret
js
push
dec
mov
test
xchg
add
test
test
icebp
jl
jl
test
push
mov
cmpsl
add
test
cwtl
pop
sbb
or
jl
orl
call
stos
test
stos
test
xchg
sub
xlat
aas
dec
sub
fcomi
test
out
inc
test
aas
dec
sub
aas
js
adc
aas
sub
xchg
pop
dec
aam
stos
dec
aam
popa
js,pn
lea
stos
lret
loope
mov
aas
iret
mulb
sbb
push
mov
jno
lds
daa
mov
call
loop
jno
push
sbbb
mov
cwtl
testb
xchg
xor
and
and
in
enter
in
andl
aaa
in
and
in
cwtl
pop
or
cld
jmp
out
sar
add
jl
jmp
add
cmp
push
add
cmpsb
out
testb
cmp
add
jl
jmp
pop
jl
jmp
mov
in
cmp
cmp
pop
call
shl
into
test
in
jnp
jmp
add
mov
lahf
sub
add
sti
add
cltd
dec
cmp
mov
ljmp
add
pushl
pushl
dec
insl
push
notl
jne
add
fstl
add
insb
movsb
adc
mov
cmp
push
shlb
inc
and
loop
and
dec
lret
fcmovnbe
mov
cmp
testl
pop
and
in
mov
arpl
leave
jmp
jecxz
mov
cmp
mov
cmp
rol
fcmovbe
aam
rcl
mov
jns
adc
mov
in
loope
push
jb
sbb
jl
or
mov
inc
and
adc
sub
mov
jo
lock
ds
mov
add
cmp
mov
add
mov
mov
push
dec
pop
push
in
les
and
or
dec
inc
add
xchg
pop
aas
pop
xor
mov
xchg
rcrl
lahf
lcall
sahf
stos
sahf
pop
cli
push
out
mov
bound
popa
fistpl
call
sbb
pop
dec
push
add
pop
out
insl
dec
adc
add
push
scas
sbb
out
mov
das
es
jg
xor
jg
sub
setle
xchg
in
lea
pop
scas
or
sti
push
jbe
xchg
jae
dec
xchg
push
aas
push
out
sbb
ds
jp
inc
sbb
out
incb
jb
std
scas
cltd
xchg
mov
rcl
lods
insl
xchg
stc
lcall
add
xor
add
add
jbe
pop
call
push
mov
mov
pop
inc
jmp
jge
push
insb
orb
mov
and
jns
xchg
clc
mov
fstpt
int
js
notb
pavgb
add
cld
out
sub
clc
shl
aad
int
nop
test
rclb
rolb
loopne
mov
andl
cmp
add
and
loopne
in
pop
add
dec
and
popw
and
mov
insl
or
push
and
cmp
adc
mov
inc
leave
pop
out
fs
push
xlat
push
push
and
mov
xchg
or
test
xchg
das
divl
out
and
in
and
shl
and
push
jnp
push
pop
mov
sub
and
push
xchg
stc
out
les
cld
test
xchg
lock
add
aas
clc
dec
ds
arpl
cmp
dec
aam
mov
les
push
pop
outsl
or
pop
adc
stc
out
cmp
outsb
or
cmpsl
add
aam
cmp
sbb
fdivrl
sub
orl
fsub
mov
inc
les
mov
add
xor
les
les
inc
and
or
aam
addr16
cwtl
fmull
cmp
sub
pop
inc
adc
shl
sbb
mov
sub
xor
jcxz
add
pop
out
insl
sub
int
cltd
andl
mov
ret
sbb
lcall
add
or
test
hlt
inc
mov
aas
test
xor
inc
test
pop
push
mov
push
aas
mov
mov
jmp
mov
icebp
icebp
inc
mov
std
xchg
sbb
aad
or
idiv
or
je
adc
cld
add
test
or
and
adc
pop
add
pop
add
add
xchg
clc
jmp
mov
dec
add
dec
add
pop
add
xchg
clc
fcomp
dec
add
rorb
pop
add
xchg
clc
or
dec
add
pop
add
pop
xchg
clc
add
add
add
pop
add
lret
jmp
dec
cmp
and
cmp
sbb
xchg
pushl
sbb
add
sbb
add
sbb
xchg
incl
sbb
add
push
add
sub
cmp
mov
push
add
dec
xchg
fsts
mov
push
add
sub
cmp
popf
popa
cmp
popf
push
add
or
cmp
loope
cmp
pop
push
add
stos
xchg
jle
cmp
les
incl
les
cmp
sti
ds
les
in
clc
sbb
fdivrs
les
in
clc
sti
sahf
sti
les
cld
inc
mov
clc
les
les
in
clc
mov
push
das
aas
les
inc
add
clc
fwait
and
aas
les
inc
and
clc
add
out
aas
shr
aas
les
inc
pop
out
les
add
pop
mov
jmp
mov
imul
mov
add
add
out
test
out
sub
dec
insb
out
inc
insb
out
test
add
imul
nop
imul
mov
add
out
sub
out
repz
add
imul
enter
mov
imul
call
imul
or
out
add
les
jmp
movl
psubsw
inc
psubsw
xor
jmp
jp
jmp
mov
psubsw
jle
jmp
mov
psubsw
lcall
add
psubsw
ret
into
psubsw
sahf
psubsw
xchg
jmp
jle
jmp
out
jmp
out
psubsw
mov
psubsw
cld
push
add
les
pop
pop
adcb
pop
jl
insl
pop
js
insl
pop
je
pop
pop
test
pop
pop
mov
adc
pop
adc
sbb
sub
pop
add
sbb
pop
cld
adc
pop
clc
adc
pop
hlt
adc
pop
les
fstpl
adc
pop
mov
adc
pop
mov
fstpl
adc
pop
test
popf
pop
xor
popf
pop
sub
lods
pop
sub
lods
pop
and
popf
pop
and
les
sbb
jno
pop
aam
cld
adc
jno
paddq
or
add
add
cld
pushl
cld
test
jno
out
mov
jno
or
jno
test
aam
cld
mov
aad
cld
mov
lret
jno
sub
cld
mov
lret
jae
mov
jae
mov
jae
scas
shll
stos
lret
pop
out
add
add
out
and
out
pop
push
out
dec
push
out
push
push
out
xor
out
dec
push
out
cmp
out
inc
push
out
inc
push
out
mov
push
out
adc
add
insb
out
or
std
push
out
je
out
nop
push
out
mov
add
push
out
mov
push
out
cwtl
push
out
add
out
in
push
out
imul
hlt
push
add
ss
xor
jmp
cmp
jmp
bound
jmp
push
jmp
mov
or
pop
or
movl
or
push
adc
sub
jmp
adc
jmp
add
cmpsb
or
mov
or
scas
or
push
or
xchg
or
sahf
or
lcall
mov
mov
popf
pop
mov
lods
pop
mov
lods
pop
lods
push
popf
pop
test
popf
pop
movsb
push
insl
pop
mov
push
pop
pop
cwtl
push
pop
pop
loopne
insl
pop
fmull
insl
pop
fmuls
pop
pop
aam
pop
pop
rorb
sub
sub
pop
les
sbb
pop
iret
push
sub
pop
fs
sbb
push
jp
in
push
mov
paddusw
paddsw
push
in
push
paddusw
push
fstl
push
les
aas
lret
addr16
xor
jno
sbb
jno
pop
ret
adc
jno
and
jno
pop
add
jno
adc
jno
mov
lods
jno
test
jno
and
fnsave
fxch
jno
cs
jno
repz
out
leave
jno
jmp
jno
out
jno
jecxz
jno
jno
fcmovnb
jno
xlat
mov
jno
or
jno
rol
out
cld
push
out
test
add
out
insb
push
out
add
out
push
push
out
push
push
out
and
out
pop
push
out
mov
imul
xor
out
dec
push
out
cmp
out
inc
push
out
inc
push
out
mov
imul
pop
imul
add
add
dec
out
jo
out
ds
out
cwtl
dec
out
mov
add
je
add
push
or
mov
or
in
jmp
movl
jmp
pop
or
bound
jmp
push
jmp
push
or
push
or
fstl
jmp
movl
or
outsb
or
jb
jmp
xor
jmp
add
ss
cmp
jmp
movl
dec
or
fstpl
in
pop
rorb
mov
or
pop
mov
lods
pop
lods
or
pop
test
popf
pop
movsb
or
pop
mov
lods
pop
lods
or
pop
test
popf
pop
movsb
or
pop
mov
or
pop
out
push
pop
pop
ljmp
pop
loop
add
rcll
sub
pop
rorb
sbb
pop
lret
pop
pusha
or
pop
pop
or
pop
pop
or
pop
push
or
pop
push
or
jno
dec
shlb
mov
jno
aas
enter
shlb
mov
jno
das
enter
shlb
mov
jno
pop
enter
shlb
add
jno
bswap
jno
or
jno
pop
mov
jno
dec
jno
sti
mov
jno
repz
jno
out
iret
jno
jmp
jno
out
jno
jecxz
jno
jno
fstpt
pop
out
sbb
add
out
add
add
push
out
or
add
out
adc
add
out
add
out
adcl
xchg
add
add
out
fs
out
ds
mov
out
pusha
insb
out
push
push
out
inc
push
out
cmp
out
cmp
add
add
push
out
push
out
and
add
out
pushf
push
out
test
out
push
push
add
scas
add
aad
jmp
add
std
or
movl
add
out
jmp
into
add
rolb
add
fiaddl
incb
movl
add
jmp
bound
jmp
dec
add
jmp
pop
add
jmp
movl
add
add
outsb
add
add
pop
lock
pop
call
or
pop
inc
or
pop
int3
or
pop
cs
in
pop
rorb
fstpl
or
pop
enter
mov
lods
pop
and
popf
pop
lods
or
pop
movsb
or
pop
pushf
or
pop
xchg
or
nop
or
mov
add
mov
insl
pop
test
insl
pop
orb
pop
mov
pop
pop
in
push
sub
pop
jo
les
imul
cld
arpl
jno
pop
mov
jno
push
into
jno
push
into
jno
dec
mov
jno
inc
into
jno
lret
dec
mov
jno
inc
into
jno
inc
into
jno
aas
mov
jno
aaa
add
jno
xor
jno
pop
mov
jno
pop
into
jno
adc
jno
movsbl
or
jno
add
jno
mov
jno
test
push
out
xor
out
sbb
add
out
and
add
out
call
push
out
adc
add
out
clc
push
out
imul
add
push
out
add
out
or
add
add
out
je
out
pop
fs
insb
fs
pusha
fs
nop
out
sub
pop
fs
push
fs
push
fs
cmp
dec
fs
inc
fs
inc
fs
testb
repnz
jmp
ljmp
movl
add
add
cli
push
jmp
adc
jmp
or
jmp
and
jmp
sbb
jmp
xor
jmp
aam
jmp
int3
add
call
pop
jmp
faddl
xbegin
pop
jmp
in
add
insl
pop
adc
or
pop
pop
bound
sub
pop
pop
or
pop
in
or
pop
dec
or
pop
in
or
pop
jmp
or
pop
loope
fstpl
in
pop
cs
pop
sub
fstpl
fstpl
lods
pop
leave
or
pop
push
or
pop
push
or
pop
mov
popf
pop
lods
or
insl
pop
test
or
mov
mov
into
cmp
xchg
mov
cmp
mov
cld
or
cld
jle
cmp
jbe
cmp
ror
cld
mov
mov
cmp
lods
mov
cmp
mov
add
cmp
cltd
mov
cmp
lea
cmp
or
fs
out
fs
fisubl
fs
loop
out
fisubs
stos
fs
cmpsb
fs
xchg
fs
mov
jp
out
jbe
out
andb
fs
mov
xchg
add
fs
lcall
add
fs
ljmp
add
pusha
out
into
pusha
out
mov
pusha
out
ret
add
pop
push
jmp
je
jmp
insb
push
jmp
movl
jmp
xchg
push
jmp
add
nop
push
jmp
mov
jmp
mov
push
jmp
mov
jmp
lods
push
jmp
mov
push
jmp
mov
push
jmp
int3
push
jmp
popf
pop
mov
popf
pop
xchg
insl
pop
orb
pop
jle
pop
pop
jp
pop
pop
jbe
add
jb
insl
pop
outsb
or
push
pop
pop
or
pop
pop
or
pop
push
or
pop
dec
or
pop
inc
or
pop
inc
or
pop
ds
pop
cmp
fstpl
or
pop
xor
in
pop
cs
pop
sub
fstpl
or
pop
push
or
pop
push
or
cmp
add
int
cld
adc
cmp
add
mov
cmp
cmc
int3
cmp
in
mov
cmp
loope
cmp
fxch
cmp
sarl
cld
leave
int3
cmp
sarl
mov
int3
cmp
add
mov
cmp
movsl
int3
cmp
add
out
ds
out
xor
add
out
cmp
add
out
inc
out
inc
out
ljmp
add
out
out
fisubl
add
out
cmpsb
out
mov
add
out
jb
out
jbe
out
add
out
mov
add
out
stos
out
sahf
out
xchg
out
xchg
out
lcall
jmp
cmp
jmp
push
or
dec
or
dec
or
pusha
or
movl
jmp
jo
jmp
push
add
movl
add
add
test
jmp
jl
jmp
xchg
add
mov
jmp
mov
add
cwtl
add
pushf
add
mov
jmp
test
jmp
fstpl
pop
lods
pop
arpl
popf
pop
pop
add
lods
pop
push
add
popf
pop
dec
add
insl
pop
xchg
add
addb
pop
jle
pop
pop
jp
insl
pop
xor
pop
pop
sub
sub
pop
bound
sbb
pop
pop
pop
sub
pop
push
pop
sbb
pop
dec
pop
in
pop
add
fstpl
fstpl
in
pop
ss
les
cld
xor
cmp
lret
cmp
and
add
cmp
sbb
ret
cmp
adc
cmp
or
cmp
add
cmp
stc
ret
cmc
lret
icebp
ret
in
lret
jmp
lret
loope
cmp
fld
cmp
rol
cmp
test
cmp
jl
rcrb
and
add
pop
out
sbb
add
pop
out
jb
out
outsb
pop
out
push
out
pop
out
inc
pop
out
ds
out
cmp
add
pop
out
push
pop
out
dec
pop
out
dec
pop
out
inc
pop
out
loop
out
ficomps
add
pop
out
pop
out
mov
out
scas
pop
out
stos
pop
out
cmpsb
pop
out
add
pop
out
jp
out
jbe
out
xchg
pop
out
rcll
pop
add
insl
cld
call
xor
jmp
sub
jmp
movl
jmp
dec
add
push
add
movl
pop
add
pusha
add
push
add
pop
add
insb
add
add
jo
jmp
push
add
movl
add
mov
jmp
movl
add
fstpl
add
in
pop
mov
add
fstpl
add
lods
pop
cmpsb
add
popf
pop
sahf
add
lods
pop
xchg
add
add
pop
mov
insl
pop
xchg
pop
pop
jle
insl
pop
jp
insl
pop
jbe
pop
pop
jb
pop
pop
outsb
add
sub
pop
bound
sub
pop
push
add
roll
dec
roll
inc
roll
cmp
leave
cmp
add
cmp
leave
cmp
sub
cmp
and
cmp
sbb
cmp
adc
cmp
or
cmp
add
cmp
stc
enter
rolb
in
rolb
in
cmp
add
push
out
out
push
out
repnz
out
add
push
out
or
add
push
out
add
add
push
out
sbb
add
push
out
adc
add
out
push
out
pop
push
out
bound
add
out
cmp
add
push
out
xor
add
out
dec
push
out
ds
out
inc
push
out
inc
push
out
ficoml
add
push
out
rclb
add
stos
push
out
sahf
push
add
hlt
add
xbegin
add
adc
movl
jmp
and
adc
jmp
sub
jmp
and
jmp
cmp
xor
jmp
cmp
jmp
movl
dec
add
pop
add
add
push
add
pusha
add
pop
add
push
cld
call
insb
cld
ljmp
pop
out
sbb
pop
fiadds
sub
pop
add
pop
into
add
pop
lret
pop
sbb
fstpl
add
pop
adc
in
pop
or
add
pop
add
pop
std
add
popf
pop
cmc
add
pop
in
add
pop
in
insl
pop
loope
insl
pop
fldl
pop
pop
flds
pop
pop
aad
insl
pop
roll
insl
pop
int
pop
pop
lret
jae
lret
cld
mov
cld
ret
cld
mov
les
mov
jae
mov
jae
scas
les
stos
les
cmpsb
les
mov
jmp
sbb
add
mov
inc
push
add
les
cld
incl
adc
add
add
cld
inc
sbb
enter
inc
mov
stc
xchg
cmc
lret
clc
lock
inc
cmpsl
mov
or
mov
out
push
inc
out
les
inc
loope
xchg
inc
cmp
sub
pop
addb
adc
jo
jnp
xchg
adc
loop
xchg
sti
pop
xchg
pop
jns
fldl
dec
push
jmp
rol
pop
xlat
add
aad
jae
addr16
addr16
dec
sbb
call
fldt
fwait
gs
cmp
and
push
std
add
movb
sbb
test
cmc
in
jmp
dec
in
jmp
add
mov
aad
in
repz
movsl
jl
mov
sbb
jmp
jg
cs
popa
test
sbb
jmp
bound
add
inc
lret
jl
rorl
incl
out
pop
add
sbb
call
std
inc
mov
jmp
pop
ljmp
add
out
jmp
out
add
adc
add
outsb
cltd
jnp
outsl
sbb
ficoms
sbb
sahf
fnstenv
int
std
andb
ret
sbb
fiadds
testl
sbb
loop
cli
aas
in
pop
add
and
addl
scas
or
xchg
in
fdivrs
inc
fistpll
add
fstpl
add
add
cltd
jnp
ficomps
insl
and
cmp
push
test
inc
jle
scas
or
incb
mov
jae
mov
inc
ds
sbb
rcll
jb
or
inc
jae
test
out
add
enter
inc
mov
pop
nop
imul
jl
nop
add
add
pop
lret
clc
repz
inc
sbb
xchg
mov
add
mov
jle
cmpsl
jno
jl
push
or
xchg
dec
sub
icebp
jb
incl
pop
mov
int
fcoms
cli
js
loopne
sub
int
jae
add
pop
cmpsb
addl
in
inc
xlat
pop
inc
loope
addl
mov
call
inc
rcll
sahf
pop
pop
push
xlat
stos
and
xchg
gs
loope
test
call
int
arpl
add
fldt
shr
call
int3
sbb
add
gs
xlat
cmp
mov
out
jg
cli
scas
andb
stos
inc
loopne
sub
pop
call
stos
add
enter
sub
pop
mov
sub
cmovno
sbb
call
in
mov
mov
push
call
movsb
pop
mov
xchg
leave
jb
jmp
xchg
sbb
inc
lret
jl
mov
gs
inc
in
jmp
pop
xchg
idiv
add
add
dec
inc
jne
fnstcw
jge
ds
add
push
fidivrl
jge
push
insl
push
inc
lock
jmp
cltd
loopne
sub
xchg
idiv
sbbb
push
jne
idiv
rcrb
testl
push
pusha
loopne
rclb
ret
mov
hlt
incl
rcr
cmp
mov
scas
xchg
idiv
hlt
inc
adc
push
stc
test
jle
inc
out
aas
sbb
mov
shufps
mov
inc
fidivs
sbb
xchg
inc
inc
pop
adc
inc
out
clc
pop
mov
inc
adc
xchg
test
hlt
aas
sbb
mov
xchg
adc
inc
scas
jb
sbb
push
pop
sub
repz
aad
call
mov
jb
cld
aas
push
lds
push
add
out
pop
leave
leave
push
pop
push
test
cmp
les
jae
enter
inc
pop
adc
pop
inc
mov
insb
pushf
insl
aas
mov
adc
sbb
add
inc
pop
flds
sub
push
leave
sub
ds
pusha
inc
jge
inc
call
and
popf
ds
pusha
and
cmpsl
pop
sbb
js
clc
insl
pop
pushl
dec
push
fldl
xchg
add
cmp
hlt
out
ja
fmull
jae
inc
in
ljmp
jge
mov
pop
popa
pop
clc
jmp
add
sahf
jl
jbe
jae
inc
in
ljmp
jge
dec
pusha
or
pop
clc
jmp
or
jl
xor
in
ljmp
call
sub
adc
xchg
dec
jge
stc
pop
jae
syscall
cli
push
cld
popf
jl
dec
imul
or
cmovs
and
fidivl
add
xchg
idiv
pop
fidivl
mov
or
fsubs
je
jle
pop
xchg
mov
je
fnstenv
pop
or
cmpl
jne
insl
push
or
imul
mov
inc
mov
cltd
loopne
xchg
idiv
sahf
adc
add
pusha
loopne
test
test
add
scas
sbb
mov
fisttpl
hlt
shll
mov
dec
add
jge
fidivl
add
jge
mov
dec
add
jge
fisubrl
add
clc
jae
jge
shlb
add
clc
pop
mov
jp
insb
inc
add
clc
inc
xor
fidivs
sbb
add
sbb
mov
dec
add
xbegin
ficompl
push
jb
enter
subb
push
shll
leave
fcompl
lret
xor
adc
lds
push
stos
push
aam
lods
cwtl
gs
mov
cmp
mov
fdivs
cli
mov
stc
fcomps
out
in
fcmovnbe
pop
mov
add
fadds
out
vpmovmskb
les
faddl
mov
pop
pop
shrl
push
lds
pop
aas
mov
adc
incl
clc
push
dec
add
arpl
loope
rolb
mov
jnp
jae
lock
fs
mov
jl
mov
jae
add
sti
mov
lcall
cmpsb
sbb
repz
out
sbb
fidivrs
pop
call
clc
jbe
fidivrs
inc
call
clc
pop
inc
loopne
ljmp
clc
add
jg
cld
rclb
stc
inc
into
fnstcw
mov
push
insl
clc
je
jle
cld
ret
addl
add
add
stc
je
jle
cld
mov
mov
and
je
push
xor
xchg
push
jne
cmpsl
popa
or
dec
cld
call
jne
fwait
popa
jae
out
fwait
testb
outsl
call
adc
cmc
jae
push
push
cld
rcrb
stc
ljmp
jp
sub
stc
inc
test
mov
cwtl
mov
adc
add
add
mov
inc
push
out
in
or
clc
pop
lds
ret
sbb
inc
adc
mov
enter
jg
into
inc
xor
add
mov
sub
mov
or
inc
out
mov
clc
inc
jle
add
dec
lods
nop
insb
lock
cmp
add
jmp
hlt
dec
sarb
add
shll
jb
pop
push
aas
sub
push
xchg
fucomip
add
inc
mov
or
sub
xlat
inc
leave
mov
lret
mov
jmp
ret
imul
insb
adc
lahf
icebp
sarl
lods
icebp
push
xlat
shrl
sbb
int
stos
aad
mov
sbb
int
stos
loopne
cmpsl
roll
add
add
aad
add
mov
out
or
imul
ljmp
clc
sub
push
out
pop
call
inc
into
inc
out
inc
add
jo
lods
call
adc
clc
push
insb
add
push
test
and
testb
clc
add
lock
cmp
sbb
clc
mov
jne
ror
shr
clc
scas
inc
aam
ljmp
clc
stos
dec
aam
ljmp
stc
ficomps
call
ret
xchg
fsubrp
decl
pop
inc
and
sbb
loop
testb
pop
add
and
jae
add
mov
jge
push
push
or
mov
fstp
mov
mov
cmp
lcall
adc
and
pop
call
ret
push
lods
add
test
pop
push
out
adc
add
pop
add
je
popa
add
test
add
push
inc
inc
loop
mov
mov
mov
add
jecxz
push
inc
clc
mov
nop
inc
clc
test
jo
clc
or
stos
add
incl
decl
jecxz
adc
add
add
add
mov
mov
add
xchg
mov
loop
sub
jae
sbb
fwait
and
test
popa
pop
mov
push
xchg
jae
dec
pusha
jae
inc
imul
mov
data16
test
imul
xlat
add
xlat
jl
outsl
xlat
js
jo
je
insl
mov
movsl
outsb
mov
sbb
xor
pusha
add
push
nop
pop
push
pop
push
lahf
call
bound
pop
jmp
roll
push
movsl
loop
sahf
lret
cmpl
fidivrs
movb
lods
push
stos
mov
js
jne
in
mov
xchg
push
imul
push
lcall
cltd
and
je
sbb
inc
and
add
push
rcr
ja
bound
jmp
int3
push
shrl
xorl
arpl
outsl
dec
stc
dec
push
pop
mov
fadds
ljmp
les
mov
pop
mov
mov
pop
ja
outsl
pop
out
out
jo
jne
rcl
shlb
dec
clc
test
mov
push
push
mov
fdivs
inc
into
flds
outsl
sbb
inc
xchg
push
add
pop
loop
and
aaa
add
idiv
pop
xchg
adc
sub
ljmp
xorb
pop
jp
xchg
incl
push
add
mov
ja
jg
add
or
pop
adc
jae
call
ret
xorl
divb
inc
clc
ret
xorl
jmp
mov
call
xchg
add
add
mov
mov
or
cmp
insb
pop
mov
pop
mov
fistpll
mov
add
inc
add
mov
mov
inc
stc
mov
mov
stc
repnz
cmp
in
xchg
mov
sti
test
mov
mov
aaa
test
into
xor
add
aad
lret
lock
xor
add
stos
stos
push
inc
iret
mov
pop
jle
inc
loope
stos
ret
jmp
add
les
inc
leave
popa
push
inc
arpl
push
sbb
mov
enter
mov
fucom
adc
shr
scas
loop
push
sbb
sub
push
pop
jmp
lds
fimuls
push
fdivs
xlat
frstor
or
push
fmul
repnz
pop
lea
fsubl
imul
dec
or
lds
ficomps
rcrl
popf
sbb
lret
sub
dec
ret
cmpsb
mov
pop
mov
arpl
jmp
pop
mov
mov
aam
xchg
int
clc
jbe
xchg
shr
pop
je
dec
push
ret
xlat
shrl
adcl
push
cmp
add
fistpll
sub
dec
cmp
add
dec
popf
and
add
ds
pop
add
cmp
aaa
add
idiv
popf
xchg
psubsb
mov
add
xchg
pop
jns
xchg
mov
adc
ret
js
clc
lcall
and
aam
jne
push
in
or
pop
jne
xchg
call
outsb
in
wrmsr
pop
call
ret
jne
in
add
inc
sbb
adc
ret
push
add
pop
add
sbb
pop
add
add
jl
inc
add
imul
les
test
sub
mov
test
popf
or
or
shlb
jb
mov
pop
pop
mov
imul
jl
and
mov
add
inc
add
mov
pushl
les
jns
fildl
and
cs
sbb
mov
or
add
or
test
ficomps
xor
inc
or
rcrl
std
stos
daa
cmc
mov
sbb
mov
pop
insl
sbb
push
repnz
dec
stos
addb
add
add
push
repnz
movb
insb
dec
stos
stos
dec
dec
cmpsl
mov
xchg
add
mov
stos
jg
je
dec
ljmp
pop
dec
ret
sub
adc
pop
popa
jb
dec
ljmp
pop
lret
mov
les
jae
dec
add
pop
add
pop
add
mov
add
add
pop
add
pop
add
mov
mov
pop
add
pop
add
pop
add
jl
clc
cmp
pop
add
cmc
dec
clc
jmp
pop
add
dec
clc
mov
loop
clc
jmp
pop
add
add
inc
ret
lods
mov
clc
jmp
pop
add
mov
add
dec
clc
add
in
push
add
fstl
add
push
cmc
decl
hlt
fstl
add
push
add
icebp
adc
add
std
mov
add
lods
push
add
subl
add
leave
leave
hlt
ljmp
add
insl
push
add
xchg
sub
pushl
add
test
push
add
pop
push
add
xchg
cmc
incl
enter
sbb
push
add
mov
add
icebp
mov
add
les
add
mov
push
add
mov
cld
jecxz
add
les
add
sub
push
add
xor
les
add
les
add
les
add
les
add
les
lret
cld
mov
lret
cld
jnp
lret
cld
jae
lret
cld
add
int3
cld
arpl
int3
cld
pop
cmp
dec
and
cmp
mov
cld
and
mov
mov
add
mov
lock
lcall
dec
bound
rorb
mov
rorb
mov
dec
idivb
mov
dec
es
les
ret
pop
ret
push
ret
jo
push
ret
push
dec
or
pop
dec
out
ret
sahf
ret
ljmp
dec
inc
shlb
fadd
sub
pop
add
clc
gs
clc
icebp
add
inc
clc
pop
add
clc
inc
add
clc
pop
add
clc
xor
clc
jae
inc
clc
mov
add
clc
aad
inc
clc
ret
add
clc
jmp
xchg
inc
clc
jmp
sbb
lahf
xor
jge
inc
clc
gs
clc
jns
inc
clc
ja
inc
clc
xor
clc
xor
clc
mov
inc
clc
lahf
aam
clc
mov
inc
clc
repz
clc
add
inc
clc
shll
inc
clc
add
mov
pushl
mov
hlt
pushl
hlt
incl
xor
hlt
decl
mov
hlt
call
lret
ror
hlt
hlt
jmp
hlt
call
lret
dec
leave
hlt
cmp
hlt
incl
hlt
lcall
int
decl
mov
lcall
hlt
call
hlt
incl
leave
hlt
jns
hlt
inc
leave
hlt
call
hlt
jmp
leave
hlt
incl
ror
inc
imul
xor
jo
and
jo
adc
jo
add
cld
repz
mov
cld
jecxz
cld
ret
cld
rcrl
cld
lret
call
ret
cld
mov
movsb
int3
cld
stos
enter
int3
cld
fwait
ljmp
mov
cld
add
sbb
cld
jae
imul
add
fisubrs
pop
xchg
imul
pop
jno
dec
inc
push
imul
imul
sub
inc
xor
inc
mov
and
push
inc
fsubrs
inc
pusha
push
inc
dec
push
inc
xor
inc
push
push
inc
test
inc
mov
inc
mov
inc
pop
push
inc
mov
imul
mov
inc
shrb
inc
lret
inc
call
insb
nop
inc
int3
insb
mov
insl
addb
js
mov
nop
insb
push
inc
add
inc
clc
aaa
loope
clc
psubusw
aaa
mov
clc
das
test
inc
clc
rcrl
inc
clc
jmp
inc
clc
jne
inc
clc
inc
lahf
inc
clc
xor
clc
cltd
outsl
inc
clc
insl
add
clc
outsl
pop
inc
clc
shrl
clc
lahf
outsl
inc
clc
mov
pop
inc
clc
int
inc
clc
ljmp
inc
clc
sbb
inc
clc
and
inc
clc
sub
inc
clc
inc
adc
pop
sbb
int
inc
clc
pop
stc
inc
clc
dec
icebp
inc
clc
pop
stc
inc
clc
add
int
pushl
iret
hlt
ljmp
hlt
ljmp
int
call
pop
add
and
cmc
incl
xor
daa
cmc
ljmp
pop
add
cmc
push
add
fstl
add
add
call
sbb
push
add
fstl
add
add
stc
add
jmp
add
incl
add
jmp
add
lcall
add
inc
add
inc
jns
cld
jae
mov
cld
add
mov
cld
push
cmc
mov
cld
inc
fnstsw
cld
xor
mov
cld
and
cld
sbb
add
inc
leave
mov
cld
sti
or
add
scas
mov
jecxz
mov
cld
shll
add
ret
fcmovb
cld
mov
cli
sar
push
sar
adc
cld
add
mov
cld
mov
movl
inc
rol
push
inc
fdivrs
push
inc
sbb
dec
inc
push
rolb
sarb
jbe
xor
shrb
shlb
pusha
sbb
rclb
data16
cli
rolb
adc
clc
inc
push
shl
cwtl
shr
lret
inc
mov
roll
add
add
inc
push
ror
add
inc
pop
sarl
mov
ret
int3
ret
add
xchg
clc
out
test
clc
flds
ds
jge
ds
mov
ds
scas
sbb
clc
fwait
test
clc
outsl
test
clc
push
add
ds
inc
pop
ds
push
pop
ds
mov
ds
xchg
pop
ds
mov
ds
jns
pop
ds
cmc
or
clc
std
add
clc
pop
or
clc
invlpg
clc
cmc
or
clc
cmp
or
clc
or
mov
clc
xor
aas
clc
inc
cmpl
cmc
ljmp
push
cmc
lcall
push
cmc
incl
cmc
inc
sbb
pushl
sbb
inc
sbb
ljmp
cmc
ljmp
cmc
ljmp
sbb
incl
fistps
cmc
ljmp
sbb
inc
sbb
fistpl
decl
sbb
stc
sbb
push
sbb
jmp
hlt
incl
push
ljmp
cmc
jg
cmc
aas
sbb
decl
cmc
out
sbb
lcall
cmc
inc
push
ret
cld
stos
popa
ret
cld
mov
xor
les
int
mov
int
cmpl
cld
add
add
stc
sar
imul
cld
pop
cltd
sar
push
sar
dec
pop
sar
inc
and
cld
cmp
cld
xor
sar
sub
sar
and
sar
sbb
sar
or
mov
cld
repz
jmp
int3
cld
jecxz
int3
cld
fneni(8087
sar
rorl
cld
lret
out
sar
ret
pop
jmp
add
add
add
add
fidivl
nop
ds
mov
ficompl
fcmovu
mov
ds
add
fcmove
mov
mov
mov
ds
fcmovu
add
add
add
ficoml
mov
sbb
add
fcmovu
add
add
fcmovbe
add
fcmove
mov
cmp
jmp
add
fidivl
mov
cmp
add
aas
clc
in
pop
sub
pop
add
xchg
ds
fwait
jne
clc
test
clc
jno
ds
addr16
clc
push
xchg
ds
mov
ds
popf
xchg
ds
jne
clc
mov
ds
xchg
jne
clc
int
ds
mov
pop
add
insb
ds
iret
insb
ds
cmc
add
jmp
pop
ds
xchg
push
ds
movsl
cmp
clc
fwait
xor
clc
mov
ds
jmp
xchg
popa
add
test
add
arpl
fstpt
push
outsb
push
ja
push
push
jnp
dec
cmp
insb
dec
pop
mov
outsb
mov
sbb
imul
xor
gs
pop
fs
gs
push
add
inc
add
jle
outsb
mov
add
xor
outsl
shrb
mov
outsl
je
push
popa
add
imul
outsl
je
mov
adc
arpl
sbb
outsb
aam
dec
push
push
xor
push
xor
decl
pop
xor
pop
cmp
sub
add
clc
fisubl
gs
in
push
sbb
add
cli
or
insb
in
mov
cmp
out
sbb
nop
xor
mov
pop
pop
rorb
sbb
gs
arpl
xor
les
je
aas
inc
outsb
popf
inc
sbb
push
push
arpl
sbb
pop
jmp
push
pop
mov
push
mov
mov
pop
xorl
add
add
mov
push
xor
jl
or
test
sub
insb
adc
out
scas
mov
jae
ss
fimull
cmp
cli
les
pop
cld
or
lods
inc
sbb
pop
mov
xchg
ret
sbb
mov
std
xor
scas
jmp
pop
nop
lods
add
add
push
add
mov
cltd
lds
js
cmpsb
pushf
scas
push
mov
in
mov
ffree
fs
scas
jb
aad
dec
jmp
fsubrl
inc
jge
enter
scas
pop
pop
scas
pop
add
rcrl
xchg
mov
pop
cmp
fwait
pop
xor
add
enter
scas
pop
cmp
ret
pop
add
mov
add
loopne
inc
adc
outsl
into
lahf
pop
incl
aam
and
pop
jb
imul
push
push
popa
jbe
push
add
addl
push
jb
pop
test
outsb
dec
arpl
adcl
andl
mov
adc
push
mov
addl
fstpl
jo
insl
push
jb
jge
jae
pop
mov
icebp
xchg
mov
xchg
outsb
xchg
dec
cld
cmp
insl
xor
test
pop
jbe
push
ja
inc
add
enter
popa
and
sub
push
inc
add
lds
pop
je
and
imul
in
xor
and
sub
jecxz
ja
inc
add
leave
int
je
in
jo
fadds
mov
in
pop
push
fldt
or
xchg
je
pop
aam
and
rolb
mov
test
arpl
pop
sbb
mov
std
adc
lods
or
enter
pop
add
adc
cltd
jmp
es
iret
add
add
add
jmp
es
popf
shrl
fwait
daa
daa
pop
adc
inc
pop
stos
adc
pop
lods
test
adc
xchg
and
scas
lahf
xor
cmpsl
je
lock
jns
out
dec
sub
mov
fwait
or
cmp
aam
add
test
dec
inc
cmc
mov
js
jmp
ljmp
or
scas
push
cmc
aad
pushw
xlat
mov
and
cmpsb
addr16
fldt
jns
mov
rcrl
cwtl
imul
fcompl
add
mov
data16
rcrl
shll
ret
jmpw
add
cmpsl
xchg
fs
jne
cmp
mov
jb
imul
pop
cmp
orl
imul
subl
imul
inc
imul
test
mov
xchg
pop
add
jne
orb
push
lods
pop
icebp
add
popa
mov
popa
cmp
jb
pop
jmp
pop
xchg
cmp
inc
add
andl
pop
fiadds
xchg
clc
jle
inc
adc
arpl
pop
call
lcall
test
sahf
and
stc
lds
fs
dec
push
xor
imul
add
rclb
andb
orl
add
rcrl
ja
inc
add
add
int
outsb
sub
es
cmp
xor
out
les
ljmp
adc
sub
les
inc
jae
scas
push
push
int
outsb
loope
dec
sub
mov
cmp
loopne
dec
adc
movsl
xor
cmpsl
mov
add
sub
cmpsl
mov
or
cwtl
mov
or
les
add
and
cli
rolb
test
scas
push
add
push
mov
adc
sbb
mov
xor
pop
or
push
lds
adc
mov
sub
xchg
mov
daa
xchg
add
sarb
mov
add
xchg
addr16
add
insb
inc
xchg
mov
ds
pushf
mov
add
pop
cmp
add
mov
insb
adc
pop
add
rcrb
in
addr16
xchg
gs
xchg
cld
mov
mov
shrb
cmpsb
pop
mov
mov
lds
pushf
imul
add
ret
imul
and
add
inc
add
add
add
fwait
pop
insb
adc
insl
add
add
jg
gs
jnp
inc
test
arpl
push
out
loop
insb
inc
les
arpl
arpl
gs
jnp
mov
push
in
xor
inc
hlt
js
dec
or
jb
jbe
imul
jnp
add
pop
inc
add
add
add
push
je
dec
arpl
lret
and
add
je
mov
jb
lds
jmp
js
je
mov
arpl
inc
dec
dec
movsl
xchg
and
cwtl
pop
add
sub
inc
mov
pop
sbb
addr16
or
inc
imul
sub
popa
adc
adc
add
je
lock
jae
pop
inc
sub
dec
pop
and
xor
les
imull
pop
xchg
adc
les
push
add
mov
jnp
add
pushf
sbb
pop
jg
add
mov
inc
out
dec
cmpxchg
inc
and
pop
xchg
add
stos
adc
mov
mov
push
add
pop
push
pop
js
daa
ja
cld
dec
outsb
mov
int
pop
shlb
sub
mov
xchg
stos
lahf
pop
mov
mov
test
data16
fwait
pop
xchg
or
gs
cmpsb
pop
jnp
lea
mov
add
fwait
pop
pop
stos
mov
data16
test
add
lds
popa
xor
mov
outsb
or
cmpsb
dec
jmp
in
inc
adc
mov
jb
cmpsl
mov
add
mov
pop
test
mov
add
insb
jne
outsl
jle
leave
add
push
jo
dec
arpl
pop
add
insb
push
das
je
add
add
add
dec
gs
dec
add
mov
dec
xor
gs
pop
out
fwait
jg
je
ja
push
cwtl
jnp
jns
dec
add
pop
pop
inc
gs
push
jb
jns
jae
mov
outsl
add
dec
jae
shll
outsl
stc
jns
je
dec
add
imul
stc
jl
jb
jbe
inc
les
je
or
add
les
daa
push
pop
in
sbb
add
std
add
into
xor
loopne
insl
imul
pop
add
jnp
push
imulb
adc
out
sub
mov
cld
xchg
rclb
cwtl
mov
arpl
insb
adc
jp
or
outsl
pop
insl
mov
sub
add
cld
add
add
add
xor
insb
pop
push
cld
mov
xchg
daa
pop
sub
adc
enter
mov
adc
pop
pop
add
mov
jmp
daa
fnstsw
jge
add
jmp
adc
mov
push
pop
mov
push
cs
mov
add
add
pop
dec
add
roll
mov
mov
sub
in
cmp
mov
add
mov
fs
mov
add
xchg
pop
rol
imul
lds
fs
in
pop
test
mov
fwait
loop
pop
jg
pop
add
lds
xchg
movsb
mov
arpl
mov
dec
lods
pop
add
mov
push
jmp
add
mov
add
mov
sahf
imul
shll
in
roll
je
jle
inc
fbstp
add
imul
sahf
fs
jp
add
sahf
popa
inc
gs
jb
jno
data16
add
add
add
mov
push
push
ds
arpl
insb
imul
push
imul
imul
xchg
inc
dec
lock
sbb
inc
push
jb
jge
fsubs
add
pop
inc
gs
jae
les
xchg
sub
add
in
inc
popa
das
xor
push
sub
add
testl
aam
cli
push
dec
sub
emms
aad
inc
and
cmp
and
leave
or
outsb
jmp
sub
ljmp
jmp
movsb
sbb
jmp
sub
dec
movsl
cmpl
jno
nop
sbb
fs
jnp
inc
pop
push
inc
pop
insl
xchg
pop
or
add
pop
cmp
push
fwait
or
lods
sti
les
add
mov
loop
adc
ficoml
rol
and
xchg
add
nop
nop
and
mov
jmp
es
lods
fldcw
jmp
es
sub
fldcw
add
add
pop
push
daa
mov
stos
sub
pop
cltd
pop
xor
in
inc
push
cmpsb
mov
add
stos
scas
inc
cld
shll
jae
push
add
stos
scas
inc
enter
fucomi
pop
add
fwait
pop
aad
mov
mov
in
mov
pop
fwait
pop
mov
mov
dec
lods
mov
lea
fwait
pop
xchg
mov
jb
movsl
scas
add
mov
pop
jp
test
xchg
pop
add
xchg
pop
pop
xchg
pop
add
jae
dec
mov
popa
mov
add
inc
fldcw
outsb
leave
inc
jno
enter
movsb
pop
inc
fstps
popa
gs
pop
jp
sbb
push
movsb
dec
insb
sbbb
add
popl
jae
pop
inc
add
insb
dec
mov
dec
push
dec
jae
push
inc
bound
pop
xor
cs
push
jb
dec
jo
out
insb
add
pop
pop
inc
js
dec
push
imul
xchg
js
rcrl
push
mov
xor
lds
jae
push
mov
pusha
sub
push
imul
pop
das
add
les
dec
imul
cmp
popa
pop
inc
cmp
sub
cld
adc
ret
xor
add
pop
sub
and
xlat
cs
mov
das
imul
int3
push
add
or
jecxz
sub
pop
jmp
daa
cmpsb
mov
test
dec
xor
mov
xor
add
pop
add
je
inc
push
cwtl
mov
mov
pop
sbb
ja
std
xor
or
sbb
push
or
jg
cli
adc
les
pop
or
add
popf
roll
outsl
pop
mov
sbb
mov
daa
mov
cmpsb
es
lea
xor
mov
add
mov
xor
sti
mov
xchg
sahf
jb
fsts
add
cwtl
imul
cltd
pop
cmp
test
rolb
mov
subl
jmpw
add
mov
insb
jmp
loopne
data16
mov
int3
dec
add
mov
mov
lods
add
cmpsb
popa
jmp
stos
cmpsb
dec
test
andb
mov
xchg
cmpsb
cmpsb
pop
add
hlt
add
dec
push
outsb
into
inc
push
je
popa
arpl
ja
gs
aas
gs
dec
push
push
mov
push
sbb
dec
popa
push
int3
aas
insb
inc
lret
jne
dec
pop
jo
jp
bound
pop
sub
stos
inc
arpl
mov
push
lcall
outsl
mov
es
inc
gs
push
gs
fs
push
js
dec
dec
jnp
jb
jbe
imul
decb
daa
push
add
push
gs
adc
std
add
adcb
add
pop
decb
mov
inc
mov
arpl
add
fwait
std
inc
add
sub
imul
pusha
adc
dec
pop
push
adc
push
cld
outsl
les
gs
and
or
imul
sbb
push
xor
hlt
punpckhwd
pop
xor
push
sbb
in
je
pop
mov
les
add
mov
das
fsubrl
push
loope
xchg
les
add
mov
dec
pop
add
mov
adc
dec
adc
pop
sub
cmpsl
mov
cmp
les
add
mov
pop
jne
mov
cmpsl
jmp
pop
gs
lods
stos
pop
sbb
add
mov
inc
xor
and
pop
add
pop
popa
mov
add
add
mov
mov
mov
stos
add
pop
popa
test
mov
cmp
mov
sub
xchg
add
lret
mov
jb
mov
pop
add
fbld
insl
xor
mov
add
lahf
pop
push
sti
lods
jge
jmp
fidivrl
jb
add
pop
add
pop
arpl
popa
insb
adcb
add
push
inc
ja
dec
push
push
cmp
add
pop
cmp
dec
gs
push
inc
pop
insb
dec
push
outsl
mov
add
cmp
jnp
pop
outsb
mov
push
filds
inc
sbb
jnp
dec
mov
fnstenv
fstpl
add
loope
gs
ja
gs
dec
gs
inc
push
popa
lahf
jbe
gs
jp
jae
cli
or
icebp
mov
xor
adc
adc
fstl
inc
cld
xor
je
into
or
imul
and
add
int3
adc
mov
xchg
adc
mov
std
inc
test
stos
pop
cld
add
xchg
jp
arpl
adc
arpl
bound
and
jb
push
jo
pop
cmp
dec
adc
xor
les
bound
pop
mov
adc
pop
popf
and
xchg
int
hlt
test
and
pop
mov
add
mov
jmp
and
jl
cli
stos
mov
add
xchg
shlb
sahf
and
xchg
dec
pop
lahf
xchg
and
pop
movsl
mov
adc
mov
or
fwait
mov
sub
jp
push
sbb
cld
adc
xchg
add
pop
add
lds
jb
ret
mov
mov
push
movsb
aad
xor
in
fs
add
or
stos
aad
jo
test
mov
popa
popf
shrb
stos
mov
jo
mov
push
mov
jnp
jmp
mov
jo
mov
dec
dec
mov
pop
jb
fsubs
jb
mov
call
jo
test
imul
lods
pop
das
add
jns
inc
jns
je
push
arpl
push
add
fwait
outsl
dec
jns
gs
icebp
add
arpl
insb
imul
jae
outsb
insl
pop
push
add
jns
push
xor
inc
jne
popf
jae
inc
outsl
imul
jo
or
push
mov
pop
gs
pop
add
test
inc
jne
pop
jae
aad
imul
cmp
outsb
bnd
cmp
shrb
addr16
sub
insl
and
lock
add
in
bound
xor
bound
aad
insb
sbb
call
xchg
push
callw
cli
loop
jb
lock
mov
out
push
add
mov
jno
lahf
jmp
imul
dec
jmp
imul
ja
pop
jmp
jmp
insl
movsl
cld
cld
xchg
sbb
and
add
adc
sahf
loope
stos
sbb
add
mov
mull
jp
in
sbb
call
notl
mov
cmc
add
push
add
out
mov
ljmp
cmc
stos
mov
test
pop
pop
add
xchg
cmpsb
mov
xchg
mov
movsb
stos
inc
in
mov
jp
add
jb
clc
mov
or
push
add
mov
fcoml
jb
rorb
clc
and
cltd
pop
cmc
cwtl
jl
fdivl
mov
xchg
xorb
test
mov
movsl
pop
mov
jns
insb
mov
pop
xorb
test
push
push
jb
aaa
mov
mov
lahf
popa
jp
cmpsl
popa
pop
daa
test
cwtl
push
jb
adc
imul
xchg
adc
mov
pop
xor
push
enter
add
push
arpl
pop
movsl
add
or
jo
pop
gs
dec
jl
pusha
add
pop
xor
dec
jl
pusha
inc
jl
push
add
inc
cmp
arpl
push
pusha
push
push
idiv
ljmp
insb
es
ja
das
pop
fs
or
dec
adc
add
adc
les
add
add
lahf
std
inc
jb
clc
gs
jmp
bound
in
pop
pop
out
push
hlt
push
cld
cld
inc
push
push
imul
mov
je
sub
insl
call
test
rcr
jae
shr
push
call
dec
hlt
es
les
add
in
jmp
call
fdiv
imul
jmp
add
xchg
dec
movsl
jmp
mov
rcr
lahf
pop
pop
lock
add
jg
jmp
lods
jmp
int3
xchg
jmp
push
lods
jmp
clc
pop
test
in
xor
sbb
and
jmp
imull
cwtl
shl
pop
repnz
mov
add
out
mov
add
fimuls
lret
add
fwait
ret
xchg
dec
adc
add
mov
mov
jo
lcall
dec
sub
fwait
add
daa
mov
pop
sbbb
pop
das
out
pop
push
enter
out
push
sbb
mov
fildl
add
enter
add
js
stc
cmpsb
mov
fidivrl
clc
cmpsb
stos
popa
fstpl
cwtl
js
push
jae
push
test
cltd
xchg
push
test
lods
jo
clc
cltd
mov
push
xorl
add
imul
lods
or
cmp
push
popa
jno
aas
jae
jmp
mov
imul
out
push
push
popa
mov
aaa
rcrl
jo
rolb
push
push
jb
sub
mov
sbb
push
popa
addl
pop
push
insl
stc
push
push
popf
pop
test
pop
std
jae
pop
add
dec
ljmp
push
pop
cltd
add
add
fsubr
div
loop
test
cmc
lret
dec
fwait
ret
add
xlat
out
cld
dec
mov
loope
mov
int3
pop
js
sar
sti
stc
add
pop
xchg
enter
shrb
jne
jno
add
lds
xor
ja
gs
jae
jno
dec
cld
ss
sub
add
les
hlt
jae
pop
out
insb
in
loope
jae
add
fisubl
jbe
aam
xchg
enter
in
ja
add
cmpsl
jp
test
xchg
jno
sub
fwait
loopne
xchg
ljmp
add
sahf
cmp
xchg
sub
add
pop
sbb
jno
pavgw
cmpsl
and
cltd
pop
pop
add
lea
and
jmp
das
or
add
pop
lret
jg
loopne
stos
fucomi
sti
xchg
stos
out
adc
rol
addr16
push
test
fwait
fs
stc
dec
stos
cmp
jge
cltd
data16
mov
mov
clc
jge
dec
addr16
jns
push
adc
popa
inc
pop
xchg
lcall
hlt
js
inc
filds
insl
sbb
mov
add
push
add
fstpl
popa
adc
mov
clc
push
pushf
jl
mov
movl
addr16
xchg
cmc
imul
je
jl
clc
decl
push
cmp
xor
je
and
pop
gs
jmp
pop
inc
gs
jmp
pop
xor
gs
cmc
jae
add
push
xor
gs
add
jl
pop
bound
pop
jno
mov
insb
gs
sub
es
add
popa
test
push
mov
inc
mov
arpl
push
mov
ffree
mov
inc
pop
add
or
push
call
std
dec
loope
out
add
xchg
std
dec
movsl
test
inc
xchg
add
lock
jae
sahf
jecxz
jbe
fdivrp
or
mov
jno
in
repz
imul
imul
dec
cmp
inc
divl
push
sub
push
les
pop
adc
data16
push
and
repnz
pop
filds
adc
out
mov
out
xchg
add
fwait
loopne
xchg
cmp
test
mov
jg
nop
ja
loopne
xchg
add
pop
cs
xchg
aas
icebp
outsb
pushf
cmp
je
cmp
xchg
add
mov
jmp
roll
cwtl
cmc
out
jbe
out
add
jge
add
pop
add
ja
push
add
js
lods
test
arpl
loop
jne
pop
enter
shlb
addr16
mov
jae
imul
cmc
inc
pop
xchg
sub
and
dec
jb
pop
mov
pop
jle
pop
repz
insb
and
imul
sbb
sub
add
dec
pop
cmp
je
inc
in
insb
or
jle
or
xchg
mov
dec
pop
add
hlt
inc
jns
sti
bound
or
sbbb
decl
sti
xor
cmp
arpl
mulb
pop
push
adc
cmp
pop
imul
sub
sub
jns
xor
outsb
mov
xor
add
cli
push
je
or
outsb
into
or
nop
push
and
scas
sub
mov
stc
push
je
sbb
xchg
jmp
mov
cmc
imul
add
cmp
ja
pop
bnd
push
bnd
paddusw
mov
decl
enter
pop
loopne
les
insl
repnz
call
add
loope
fadds
out
decl
add
mov
fdivp
jbe
icebp
aad
test
add
mov
frstor
xor
imul
cmp
jae
inc
loop
jo
stc
bound
ret
outsl
push
lcall
sbb
loop
sbbb
es
cmp
aaa
lcall
mov
in
repz
add
add
mov
loope
jg
clc
out
aad
jnp
mov
rep
jle
aad
mov
bnd
cmc
fcomps
mov
call
lcall
add
jg
loop
mov
hlt
data16
add
pop
and
ja
cmp
data16
loopne
lea
dec
sbb
add
mov
data16
cltd
insl
add
xchg
inc
stc
mov
addr16
lahf
data16
pushf
jbe
int3
xchg
xchg
pop
aad
jae
ret
inc
jmp
jae
jo
insb
jb
fwait
insb
jns
les
cmp
mov
aaa
xchg
pop
jg
xchg
pop
js
jge
jne
nop
dec
jmp
and
jge
cmp
jmp
push
pop
out
insl
pop
or
push
arpl
clc
pushl
aas
outsb
cltd
jmp
mov
adc
int3
add
pop
insb
mov
pop
mov
gs
stc
bound
push
sub
gs
add
pop
dec
je
or
xchg
incl
sbb
arpl
and
lcall
pop
inc
gs
xor
add
push
push
scas
hlt
outsb
dec
cli
push
add
pop
aas
outsb
cltd
add
js
inc
gs
sub
out
insb
xchg
frstor
add
cmp
jae
xor
arpl
repz
popa
clc
inc
and
bound
popa
fcos
stos
add
xor
fildll
push
clc
cmp
push
frstor
fdivrs
int3
mov
push
add
int3
mov
add
pop
call
stc
int
jae
loopne
insl
adc
inc
mov
xlat
add
pop
outsl
lods
mov
popa
stos
fsubrp
inc
xchg
pop
inc
jmp
mov
fldenv
pop
leave
pop
dec
add
lahf
or
xor
add
or
clc
mov
lds
daa
jg
call
fwait
add
sbb
sti
xchg
bswap
seta
add
pop
scas
call
imul
loop
sub
pop
pop
mov
fimuls
push
add
jns
fistps
js
add
pop
add
and
pop
dec
out
jo
outsb
std
pop
in
jbe
push
add
add
push
int3
mov
add
mov
outsl
jmp
popf
jno
add
mov
jo
jo
insb
pop
rclb
jns
fnstenvs
data16
clc
cmp
fs
outsl
jae
data16
jmp
fs
sub
adcb
dec
test
es
outsb
add
push
add
pop
push
gs
jae,pn
lahf
out
push
popa
mov
arpl
push
add
mov
cli
bound
or
mov
outsb
andl
add
sbb
in
dec
cs
add
push
inc
gs
sbb
imul
push
jg
sub
jo
or
or
push
and
pop
outsb
sbbb
incl
jne
inc
je
sub
ja
and
inc
gs
in
jb
imul
pusha
or
imul
loope
je
fldt
cmp
imul
fcmovnu
decl
iret
imul
inc
cmp
fildll
pop
aad
add
jae
push
add
lds
ja
dec
in
jae
jmp
jecxz
call
repz
repz
repz
repz
repz
repz
repz
les
add
pop
jmp
daa
test
and
xlat
add
pop
fiadds
les
sbb
jmp
add
pop
add
pop
jmp
daa
test
add
pop
fiaddl
add
pop
out
les
add
pop
call
pop
xchg
jmp
add
arpl
add
pop
jmp
add
pop
jmp
addr16
add
add
pop
repnz
pop
add
lret
pop
add
pop
add
add
icebp
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pushl
jmp
pop
add
lahf
pop
inc
jmp
pop
add
pop
pop
inc
jmp
pop
add
cmp
inc
jmp
pop
add
add
jmp
pop
add
repz
inc
jmp
pop
cmpb
inc
jmp
insl
pop
add
shll
add
sub
test
inc
add
inc
leave
sbb
test
inc
or
pusha
test
fcom
pop
inc
fstl
sti
and
les
rclb
mov
cltd
inc
add
xchg
inc
add
add
inc
and
shll
aad
les
cltd
xlat
mov
mov
inc
sarl
push
mov
negl
xchg
mov
add
stos
jg
outsl
setbe
shll
addr16
andl
pop
or
outsb
cmp
cmc
sbbb
push
xchg
mov
das
shlb
pop
pushf
addb
adc
cmpsb
addl
dec
mov
xor
ja
mov
pop
decl
mov
rolb
add
add
xchg
outsl
xor
mov
jmp
cltd
xchg
ja
push
test
jmp
popf
cmp
out
jle
lods
leave
aas
cmpsb
xchg
add
pop
sbb
push
movhps
ucomiss
cmp
cwtl
es
repz
movsb
adc
mov
jbe
insl
fildl
ja
bound
cmp
push
or
test
sub
mov
fisubrl
jo
and
out
dec
movsb
cmp
or
cmpsl
cmp
loope
add
mov
cmp
cmp
and
or
daa
jae
mov
test
aaa
add
pop
inc
xor
hlt
mov
je
add
aaa
push
jb
test
sub
jge
outsb
cltd
aaa
or
and
aaa
aaa
dec
cmp
faddl
jl
ss
scas
pop
les
xchg
mov
js
inc
sbb
cmpsl
cmp
pop
mov
add
cmp
mov
sarb
dec
orb
jecxz
hlt
cmp
scas
mov
xchg
sub
add
sbb
into
and
cmp
xchg
mov
xor
pop
cmpsb
adc
lods
pop
sub
mov
dec
push
pop
inc
pop
and
sub
sahf
rcrl
popf
jg
mov
cmp
fcmovnb
bound
adc
int
fidivrl
fistl
enter
mov
icebp
add
int3
lods
pop
dec
gs
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
lds
icebp
add
icebp
add
out
add
icebp
add
icebp
add
icebp
add
les
add
icebp
add
icebp
add
les
add
icebp
add
les
add
add
xor
les
add
pop
jmp
add
pop
in
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jno
xchg
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
mov
jmp
add
pop
jmp
pop
xchg
pop
jmp
add
pop
add
pop
add
cmp
jmp
pop
add
pop
add
cmp
jmp
pop
add
pop
add
pop
add
pop
add
pop
add
mov
pop
add
pop
add
pop
add
cmp
jmp
add
pop
add
pop
add
pop
add
mov
pop
add
pop
add
pop
add
cmp
add
pop
add
pop
add
pop
add
ds
add
fstpl
lods
pop
add
lods
pop
add
add
pop
add
lods
pop
add
lods
pop
add
shl
xor
add
add
insl
pop
add
stc
loope
add
add
add
add
insl
pop
add
mov
xor
add
pop
add
popf
in
add
pop
add
sub
in
add
pop
add
in
pop
add
pmulhuw
add
pop
add
les
add
les
test
les
add
les
add
les
add
les
add
add
add
loopne
cmp
les
add
les
add
cmc
mov
les
add
les
add
lret
les
add
les
add
les
add
incl
add
add
les
add
les
add
les
add
les
add
les
adc
les
add
pop
jmp
add
les
sbb
pop
jmp
add
pop
addr16
ljmp
add
pop
jmp
push
lret
add
pop
jmp
add
pop
adc
stos
pop
jmp
add
pop
jmp
push
mov
add
pop
jmp
add
pop
push
push
ljmp
add
pop
jmp
sbb
lret
add
pop
jmp
jmp
leave
xor
add
pop
add
pop
add
xor
add
pop
add
pop
add
pop
add
pop
add
pop
add
scas
xor
add
pop
add
pop
add
xor
add
pop
add
pop
add
scas
xor
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
xor
add
in
pop
add
fstpl
add
add
in
pop
add
fstpl
add
push
aaa
add
pop
add
popf
pop
add
and
xor
add
pop
add
das
scas
xor
add
insl
pop
add
pop
pop
add
call
pop
add
insl
pop
add
pop
pop
add
jle
aaa
add
pop
add
sbb
lds
add
pop
add
les
add
les
add
les
add
les
add
les
aas
les
add
les
add
les
add
les
add
les
add
add
add
les
add
les
add
les
add
les
aas
les
add
les
add
les
int3
aas
fchs
aas
les
aas
les
aas
les
loopne
les
xlat
aas
les
test
fistpl
pop
mov
ffreep
pop
mov
fbstp
stos
pop
leave
fbld
pop
in
xchg
pop
jmp
fadds
pop
int
sti
pop
leave
fdiv
pop
xchg
fsubr
pop
cltd
fsub
pop
inc
insb
fistpl
insb
rcrl
jae
pop
mov
jae
pop
aad
mov
shll
pop
int
mov
pop
in
xchg
pop
loope
mov
jae
pop
jmp
mov
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
repnz
pop
add
cmpsb
cmp
into
push
cmp
into
idivb
stc
mov
inc
cmp
pop
repnz
fidivs
ss
ss
stos
ss
mov
gs
and
movsl
scas
pop
aaa
stc
fiadds
loope
dec
aaa
leave
into
ss
ror
aaa
mov
add
pop
add
pop
icebp
test
adc
push
test
xchg
push
pushf
ds
push
mov
jmp
push
aam
mov
push
hlt
ds
push
adc
stc
push
and
sbb
test
push
push
aas
jns
fs
sbb
sub
aas
sbb
aas
cmp
aas
sbb
aas
imul
add
pop
push
aam
cmp
aas
pop
push
hlt
aas
insl
cld
idiv
sbb
add
add
jns
adc
leave
inc
and
mov
mov
adc
adc
hlt
movsl
adc
adc
popf
adc
cmp
adc
mov
adc
mov
adc
mov
or
xchg
add
adc
xchg
cmp
adc
adc
adc
adc
popf
adc
mov
adc
mov
adc
mov
adc
mov
or
sbb
pop
add
push
mov
adc
mov
sub
push
push
sub
push
cmp
push
dec
sub
push
add
sub
push
sbb
adc
shrb
int
mov
sub
adc
sbb
inc
adc
sub
gs
sub
cmp
inc
adc
sub
dec
sub
adc
sub
adc
sub
in
rcrl
aad
dec
sub
mov
sub
mov
sub
rcrl
add
add
mov
mov
fisubrs
ret
mov
sub
rcrl
sub
or
mov
pop
sub
or
mov
sub
sub
aad
sub
gs
sub
push
mov
sub
movsl
aad
lods
aad
sub
add
pop
dec
in
xor
imul
ss
and
pop
or
push
push
add
jmp
pop
lock
icebp
pop
clc
aaa
fstps
cmp
push
or
sbb
cmp
push
sbb
stc
push
and
add
cmp
push
xor
xor
cmp
jl
gs
test
dec
push
mov
inc
push
xchg
cmp
mov
cmp
enter
add
add
dec
cmp
in
inc
cmp
dec
mov
icebp
dec
mov
cmp
adc
sbb
mov
sbb
test
sbb
sbb
xchg
dec
sbb
mov
inc
add
sbb
int
fs
lods
sbb
mov
sbb
shrl
mov
popf
sbb
add
mov
push
dec
mov
push
pop
cli
cmp
push
push
loop
push
movsb
fiaddl
je
xchg
pop
inc
add
pop
jmp
adc
sub
adc
sub
adc
add
and
xchg
adc
or
xor
sbb
movsbl
lret
or
push
xor
sbb
jecxz
xchg
sbb
xor
stc
sbb
sti
cs
pop
lahf
cs
cs
subl
pop
inc
cs
sbb
lea
sbb
mov
pop
mov
pop
lret
daa
ficoml
out
add
repnz
xor
or
xorl
neg
inc
ss
xorb
mov
aaa
dec
add
ljmp
xlat
aad
mov
mov
loope
xor
mov
xor
ret
xchg
sub
mov
dec
sub
rol
popf
sub
rcl
popf
cs
leave
insl
cmp
cmp
sar
cmp
enter
shll
cmp
pop
xchg
cmp
into
cmp
pop
push
cmp
in
push
cmp
dec
or
rorl
adc
ret
and
lea
sbb
pop
int
incl
add
or
mov
xor
dec
fdivl
decb
xor
sub
xor
push
xchg
xor
lods
xor
aas
xor
push
push
xor
push
arpl
push
jae
push
push
jg
jne
xchg
xor
push
mov
add
shll
sbb
lock
movups
lock
or
cli
sbb
int3
jecxz
dec
int
add
jle
gs
lods
popl
lods
les
sahf
stc
add
pushf
mov
pop
and
push
mov
repnz
adc
jecxz
inc
lcall
add
les
adc
aam
adc
mov
or
add
mov
or
push
mov
push
and
int
popa
xchg
insl
push
adcl
rclb
cs
lock
cs
sbb
push
sbb
cs
push
adcb
sub
mov
push
icebp
or
and
or
and
or
and
push
cmp
or
and
add
lcall
or
mull
push
or
mov
fmuls
push
es
adc
and
xchg
push
dec
and
ss
rcrb
es
fidivs
js
mov
cmpsl
aad
ss
mov
aaa
add
test
add
mov
mull
pop
add
xlat
inc
xor
add
xlat
xor
lds
jns
loop
loope
push
xor
rdmsr
pop
aad
jmp
fsts
xor
mov
divb
xor
xchg
sub
fcmovnbe
sub
rol
sub
fistl
sub
add
dec
out
cld
inc
xor
ds
js
ss
and
ret
dec
xor
fimull
aaa
cmc
dec
xchg
add
mov
cmp
push
nop
cmp
push
sarb
push
xor
jecxz
xchg
cmp
adc
cmp
push
ljmp
dec
jo
mov
cmp
dec
sbb
cmp
pop
push
sarb
rcll
sbb
pop
add
sub
dec
in
xor
mov
adc
xchg
mov
enter
add
nop
repz
rcrb
mov
stos
sbb
repnz
cli
lds
push
fstpt
subps
xchg
pcmpgtb
cltd
shll
pcmpeqb
jno
test
jne
mov
xchg
aam
repz
cli
or
mov
or
add
in
ds
in
mov
fsubr
add
fstpl
add
mov
add
or
and
or
and
dec
and
or
and
or
pop
xchg
dec
pop
cmp
xchg
pop
cmp
adc
rcll
es
unpcklps
je
andl
inc
add
pop
rcll
pop
sub
adc
xchg
shrb
dec
pop
jno
imul
add
sub
or
or
pop
or
lock
setge
jb
xor
dec
adc
iret
xor
cmp
clc
xor
mov
jmp
dec
aaa
in
and
movsb
shlb
mov
pop
add
loope
popf
pop
add
xlat
xor
lds
jle
or
xor
add
hlt
xor
aad
xor
aad
xor
mov
xor
mov
jne
cmc
fldenv
imul
jns,pn
shrb
rcll
mov
push
push
cmp
push
cmp
push
cwtl
cmp
push
xor
das
push
dec
cmp
pop
cmp
push
jo
cmp
outsl
push
enter
sarl
mov
fdivrl
mov
lods
push
or
ret
push
cmp
push
enter
out
cmp
push
cmp
push
out
fsts
cmp
sub
jge,pt
inc
ds
push
add
arpl
sub
push
add
ret
xor
jae
adc
xlat
or
aam
or
ret
mov
or
mov
mov
push
call
xchg
and
mov
xchg
cmp
in
pop
psllq
in
push
add
clc
daa
adc
xchg
adc
adc
outsl
pop
cwtl
fmul
pop
into
rorb
adc
jle
lcall
adc
mov
adc
cltd
test
adc
lcall
ss
cmp
dec
repnz
mov
add
pop
adc
daa
rcll
and
or
xchg
or
xchg
or
and
or
push
and
inc
or
or
cmpsl
push
pop
and
push
xchg
and
cs
pop
pop
dec
sbb
sahf
or
pop
add
les
and
pop
rclb
movsb
sub
adc
sub
xchg
sub
adc
add
sub
adc
and
add
addr16
adc
sub
cmp
inc
cmp
jmp
imul
xor
ret
loop
outsb
ss
mov
popf
ss
add
adc
sub
mov
xlat
popf
pop
add
xlat
inc
xor
mov
xor
mov
xor
mov
xor
jmp
xor
stos
xor
mov
xor
imul
mov
xor
in
xor
dec
mov
dec
es
cltd
dec
js
xchg
push
mov
cmp
dec
je
imul
jnp
enter
jmp
cmp
dec
and
decl
cmp
inc
dec
jo
arpl
cmp
dec
pushf
cmp
dec
lret
cmp
aam
jp
repz
push
ds
push
pop
cmp
push
mov
lea
cmp
push
xor
xlat
push
xchg
aas
les
inc
repz
decb
std
inc
lock
hlt
add
hlt
push
or
hlt
dec
or
aam
or
aam
adc
jbe
cmpsb
add
push
or
pop
mov
or
mov
or
rclb
or
jl
xchg
adc
push
adc
les
lret
lock
adc
fxch
adc
sarl
pop
mov
mov
or
inc
add
lods
pop
and
and
or
and
or
and
or
add
and
mov
push
or
and
or
insl
or
and
or
pop
push
or
and
pop
push
xchg
pop
daa
pop
inc
pop
cld
push
or
or
sbb
add
mov
sbb
push
sbb
add
sbb
add
sbb
add
sbb
cld
add
and
and
xchg
aaa
sbb
leave
shll
js
leave
aaa
insb
leave
mov
aaa
inc
leave
sbb
mov
leave
pop
add
ja
idivl
pop
add
mov
mov
xor
aad
xor
aam
xor
ret
sub
mov
sub
jg
jecxz
fcmove
jne
lret
add
add
test
es
daa
cs
lret
push
adc
ss
push
lock
aaa
xchg
addr16
aaa
mull
aaa
push
data16
cmp
bound
jmp
cmp
popa
dec
cmp
push
pusha
dec
loope,pt
cmpsb
aas
cmp
aas
fstpl
aas
ficomps
aas
test
add
mov
add
add
insl
xor
add
clc
imul
test
xor
imul
test
xor
imul
xor
enter
data16
inc
shll
push
mov
sbb
stc
jnp
inc
stc
sbbb
stc
lahf
cltd
and
movsb
xchg
xchg
stc
mov
add
icebp
repz
cmc
stc
repnz
and
fidivl
dec
shlb
stc
jg
inc
cli
mov
and
cli
and
fwait
in
cli
ja
push
sti
xchg
fwait
dec
sti
mov
sti
jp
fcomip
addr16
jmp
sar
div
pop
clc
sti
or
jge
adcl
cld
mov
xchg
sbb
jmp
xchg
pop
cld
and
add
add
xchg
jg
push
xchg
cmp
xchg
rclb
std
xchg
std
dec
xchg
ja
push
xchg
xchg
std
dec
xchg
hlt
xchg
xchg
mov
and
jbe
sete
repnz
ljmp
xchg
mov
fs
mov
inc
xchg
jmp
add
xor
jmp
pop
xor
pop
add
stc
ss
movb
ret
add
aaa
fdiv
in
pop
add
push
test
cmp
xor
push
pop
cmp
xor
add
xor
pop
xor
push
sbb
ret
push
inc
xor
repz
cli
fdivl
out
arpl
aam
jne
cmpsl
lock
push
xor
add
inc
sub
adc
stos
xor
rolb
xor
pop
int
xor
data16
xor
mov
shlb
rolb
aaa
pop
rorb
cmp
add
pop
xlat
adc
xchg
daa
cmp
xlat
dec
cmp
xlat
cmp
xlat
cmpl
xchg
cmp
xlat
mov
xor
ret
mov
aad
cmp
test
lods
aad
cmp
sbb
pop
cmp
mov
imulb
stc
insl
imul
icebp
xlat
cmc
add
loop
idiv
fcmovbe
testb
divl
daa
idivl
dec
testl
stos
inc
idiv
mov
arpl
inc
xchg
shl
adc
mov
add
add
cmpsl
repz
hlt
inc
in
xchg
aam
in
fcmovbe
xor
or
pop
repz
mov
repz
mov
repnz
mov
repnz
mov
repnz
pop
repnz
fwait
cld
inc
xchg
add
mov
xchg
inc
add
lock
pop
jmp
add
pop
and
xor
sbb
add
std
lea
stc
adc
lea
stc
in
adc
fisttpll
adc
mov
mov
cmp
mov
cmp
mov
clc
push
mov
clc
add
lea
sbb
test
sub
adc
shrl
mov
pop
cs
mov
rcrl
jns
adc
mov
adc
sub
xor
sbb
adc
or
adc
add
xor
cmp
cmp
cs
cmp
sub
cmp
and
call
inc
aaa
mov
mov
testl
call
into
cld
xor
dec
shll
mov
xor
sub
xor
leave
ja
sub
xor
int
xor
int
xor
int3
fidivl
imul
lods
xor
shll
leave
hlt
xor
mov
enter
adc
ret
aaa
nop
popa
aaa
faddp
aaa
xchg
mov
aaa
push
aam
mov
add
out
into
xchg
add
aad
cmp
mov
scas
shlb
xor
xchg
hlt
jmp
ret
jae
repz
xchg
jg
or
test
mov
shr
pop
stc
xchg
out
inc
repnz
in
aaa
inc
fcompl
hlt
fwait
int3
ss
adc
xor
mov
inc
clc
popf
mov
sti
ljmp
inc
arpl
inc
or
filds
xchg
fsubrp
popf
xchg
adc
cmp
push
out
pushf
testl
repnz
leave
repnz
rcrl
sti
insb
xchg
data16
dec
xchg
push
cld
movsb
xchg
fwait
std
cmp
or
icebp
xchg
iret
push
jge
sbb
aad
inc
mov
cli
rorb
jmp
add
pop
cwtl
repz
cmpsl
repz
add
add
mov
hlt
dec
lea
out
incl
jb
lods
xchg
bnd
sar
add
out
mov
std
pop
xchg
add
sbb
cmp
cmp
or
bound
daa
xor
repz
data16
adc
out
dec
ss
mov
testl
add
lock
shlb
leave
mov
xor
xchg
xchg
xor
lcall
push
jns
xor
je
sub
je
sub
push
mov
popa
arpl
mov
mov
shlb
pusha
aaa
sub
test
mov
jmp
test
into
push
ss
sarl
mov
shll
xchg
cmp
int3
and
loop
cmc
cmp
int
cmp
add
cmp
cmpsl
aam
ds
aam
ds
mov
jmp
push
add
lods
lret
in
inc
xor
outsl
xor
jle
test
cmc
xor
xor
scas
leave
dec
xor
enter
leave
fdivl
les
in
cmp
testb
jp
xor
xchg
sub
mov
mov
fnsave
lret
mov
in
cmp
push
in
mov
sub
xchg
in
add
fdiv
repz
jbe
mov
cli
ss
cli
jb
cmp
stos
cmc
cld
int
cli
push
mov
shr
mov
clc
inc
add
sbb
xchg
lcall
mulb
mov
testl
lea
sbb
jmp
add
pop
ljmp
mov
hlt
fmull
dec
cmc
jnp
div
xchg
mov
repnz
repnz
xchg
repnz
dec
repz
add
add
push
repz
add
lods
xchg
cmp
sub
xor
xchg
test
mov
mov
jae
add
sub
cs
pop
cs
xor
sub
les
mov
scas
pop
pusha
cmp
adc
cmp
jo
pop
icebp
insb
aaa
mov
repnz
mov
negl
add
pop
add
xlat
xor
imul
shll
jb
movsb
sub
mov
sub
ret
mov
cs
jecxz,pn
subl
or
cmp
dec
cmp
inc
iret
sbb
cmp
sarl
ds
aas
sub
push
add
or
jecxz
aaa
adc
or
bound
add
enter
leave
cmpsl
xor
mov
pusha
xor
dec
iret
dec
cmp
ror
cmp
shr
cmp
sarl
cmp
icebp
aas
popf
into
cmc
lcall
into
stc
xor
into
lods
xor
int
xchg
int
xor
repnz
test
mov
xchg
pop
repnz
leave
lock
add
dec
lock
neg
lock
mull
call
nop
fcoms
out
shlb
mov
shl
mov
jecxz
push
cltd
add
jo
inc
out
cltd
inc
out
xchg
nop
out
stc
fs
icebp
lcall
repnz
fidivl
in
rorb
in
rcrb
sti
add
xchg
push
sti
xchg
xchg
jmp
sbbb
stc
orb
cmpb
int
push
in
das
addb
sbb
stc
adcl
inc
subl
mov
shr
fiadds
out
or
icebp
dec
xchg
leave
mov
icebp
sub
fwait
repnz
jmp
add
les
repz
test
inc
mov
xor
mov
out
cwtl
stos
xor
xchg
mov
cmp
xor
fidivs
jl
out
lcall
xor
pop
jle
push
push
out
xor
xor
sub
daa
pop
cmp
das
bound
ljmp
lahf
das
cmp
cmpsl
das
pop
add
into
das
ljmp
cmp
call
sub
fbld
cmp
scas
aad
jbe
cld
cmp
clc
cmp
or
cmp
mov
cmp
mov
cmp
push
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
cmpsl
cmp
pusha
mov
cmp
lret
test
ds
push
aas
ret
aas
and
js
je
mov
ja
xchg
aas
inc
leave
test
aas
or
aas
add
mov
lret
les
repz
aam
repz
xor
mov
aam
in
sbb
push
repz
repnz
mov
repnz
xchg
sahf
repnz
sub
insl
xchg
test
xchg
pop
in
and
in
jb
pop
clc
mov
imul
jge
sub
shr
out
neg
xchg
stc
sub
mov
push
jmp
lods
push
jmp
lods
mov
sbb
sahf
mov
push
popf
in
lcall
in
addb
out
push
xchg
jle
stc
out
add
mov
out
inc
xchg
icebp
rolb
out
test
fldl
and
pop
sbb
dec
mov
icebp
clc
mov
rorb
push
repz
mov
clc
push
stc
mov
std
mov
notb
xor
popf
add
js
xchg
ljmp
add
mov
add
add
test
ficoml
jmp
rcrb
mov
repz
xchg
jo
xchg
xchg
fdivl
pop
xchg
out
xor
pop
xor
jne
xor
ja
xor
mov
sub
pop
push
cmp
fstpt
mov
or
cmp
sbb
cmp
loope
stos
cs
cmp
add
in
ljmp
ss
xor
arpl
add
cmp
stos
ss
mov
aas
and
lea
call
mov
lcall
push
add
cmpsl
daa
xor
cmpsl
xor
into
xor
and
push
xor
enter
movsb
xor
in
pop
leave
daa
xor
xor
lret
add
leave
outsl
xor
ret
mov
shll
out
sub
int3
dec
xor
lret
mov
test
fdivs
les
in
dec
xchg
xchg
in
push
xor
mov
cli
sbb
div
enter
mov
in
sbb
in
mov
fcmovne
jmp
int3
xchg
jmp
mov
mov
cli
jmp
lods
xchg
jmp
pushf
pop
jmp
popf
pop
jmp
lea
dec
lea
pop
std
sbb
jae
and
mov
out
js
pop
ficoms
jmp
into
sar
out
leave
mov
out
mov
addb
lret
addb
mov
adc
add
sub
push
xorb
jmp
jmp
add
pop
repz
add
add
rep
mov
repz
mov
repnz
mov
mov
mov
lock
xchg
xchg
xchg
icebp
mov
inc
repnz
jmp
add
pop
dec
lock
enter
or
hlt
xorl
mov
xor
lea
call
enter
ja
test
clc
push
xor
icebp
push
xor
shll
ret
cs
mov
xchg
mov
cmp
shl
pop
mov
add
lcall
int3
xchg
je
cmp
jno
cmp
pop
mov
add
movsl
xor
in
movsl
pop
imul
iret
cmp
cmp
xor
jno,pn
or
in
push
adc
push
pop
xlat
das
add
mov
cmp
push
mov
cmp
mov
mov
cmp
mov
cmp
push
mov
cmp
push
mov
cmp
push
mov
cmp
ss
cmp
push
mov
cmp
push
mov
cmp
push
mov
cmp
add
mov
cmp
push
mov
cmp
push
mov
cmp
push
mov
cmp
fldlg2
shll
or
movsb
jmp
sbb
insb
ljmp
in
mov
fsubr
mov
add
enter
shl
sbb
fsubr
push
ljmp
pusha
ljmp
rcrb
clc
lret
add
mov
call
sbb
pop
jmp
xor
jo
inc
add
dec
sti
pusha
jmp
jmp
and
roll
les
repz
mov
in
push
icebp
adc
test
cmpb
sbbb
add
jl
call
test
call
test
pop
div
mov
mov
cmc
aad
in
fiadds
int
je
out
scas
xchg
icebp
clc
xchg
and
addb
sub
cmp
and
cmp
movsb
cmp
sub
and
add
add
and
in
and
fstl
push
loop
ss
loop
ss
stos
in
aaa
sbb
mov
add
xchg
mov
test
das
xor
lock
js
xor
jo
xor
jo
xor
insb
xor
cli
xor
leave
leave
loopne
ss
pusha
xor
inc
jns
test
push
xor
lret
pusha
lods
sbb
imulb
test
out
aas
aaa
fwait
lods
stos
aaa
sub
hlt
aaa
xor
lods
cmp
sarl
scas
cmp
scas
int
shrb
jmp
cmp
scas
cmc
cmp
scas
adc
cmpsb
scas
pop
cmp
scas
xor
add
cmp
sahf
scas
aas
cmp
jl
pop
lea
jmp
lea
jmp
std
xchg
jne
test
sub
jmp
in
inc
jmp
fnstsw
jmp
fisttpll
stos
int
jmp
int
jmp
mov
hlt
jmp
lods
ljmp
popf
push
jmp
popf
sbb
sti
lea
jmp
adc
out
pop
ljmp
out
xchg
jmp
cmp
into
bnd
pop
mov
loopne
jae
sub
jns
pop
push
dec
jne
jmp
das
jne
jmp
jae
insb
jmp
pop
jne
jmp
sti
je
jmp
pop
jne
jmp
add
call
aad
mov
jmp
add
mov
call
das
jbe
call
inc
jne
call
xchg
jne
out
jbe
out
ja
out
jbe
out
ja
out
ja
or
ss
jae
bound
ss
sbb
fdivl
xchg
aaa
jmp
rcrb
pop
push
xor
nop
xor
clc
iret
xor
icebp
in
xor
icebp
pop
xor
sbb
xor
shll
sbb
adc
xor
stc
xor
repz
jne
add
mov
popf
push
or
test
das
mov
movsl
mov
hlt
incl
mov
xor
xchg
or
jne
inc
cmp
ficoml
test
ljmp
pop
add
push
nop
xorl
mov
xchg
jg
imul
xchg
cmp
xchg
cmpsl
cmp
scas
cmp
xchg
mov
mov
xchg
cmp
xchg
iret
cmp
xchg
xlat
cmp
xchg
fistpll
jmp
xchg
out
cmp
add
xor
ret
cld
jnp
add
ror
test
shll
les
jne
int
fdiv
mov
jmp
icebp
out
iret
dec
fidivrl
ficompl
fimull
fcmovb
mov
cltd
fstpt
lods
xchg
dec
lods
dec
aam
pushf
mov
mov
inc
jae
aaa
add
and
js
adc
adc
fnstcw
frndint
loopne
hlt
fsubp
ja
ficoms
mov
add
pop
leave
shll
imul
aam
push
aad
imul
pop
push
aam
push
aam
push
aam
outsb
iret
xlat
loope
out
xlat
mov
fsubs
outsl
dec
xlat
pop
outsl
push
xlat
or
out
outsb
adc
outsl
mov
stos
outsl
adc
jb
dec
fildl
jbe
jbe
fidivs
ficomps
add
inc
mov
add
js
into
ja
xor
mov
fstpl
and
cmp
mov
cmp
outsl
cmpl
nopl
cmp
pop
daa
cmp
add
adc
cmp
das
cmp
cmp
out
cmp
cmc
cmp
ud1
xchg
stos
cmp
clc
xor
in
xor
mov
cmp
aad
xor
add
xchg
dec
aas
dec
xchg
pop
aas
jge
imul
xchg
jnp
sub
xchg
fwait
aas
std
xchg
stos
aas
sbb
xchg
lret
aas
int
fstpt
add
xchg
sti
aas
insl
sub
pushl
mov
xor
mov
xor
mov
mov
mov
lods
mov
lcall
pop
add
in
xchg
xor
mov
xor
mov
mov
xor
jne
jecxz
or
iret
and
lods
iret
inc
lock
arpl
fsubr
iret
adc
iret
mov
shlb
jecxz
dec
iret
add
in
fadds
aad
arpl
xor
iret
ret
xchg
cmc
iret
jecxz
iret
add
xchg
int
cli
lods
int
repnz
into
arpl
insl
into
adc
into
mov
shl
into
jecxz
int
add
in
int3
inc
mov
int
fwait
dec
int
add
imul
pop
imul
aaa
push
aam
push
aad
push
aad
push
aad
push
aad
push
aad
push
aad
push
aad
push
aad
push
aad
push
aad
push
aad
push
aad
push
aam
push
aam
push
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
fstpl
fstpl
in
pop
add
in
pop
add
fstpl
fstpl
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
add
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
add
roll
les
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
pop
add
fstpl
add
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
add
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
roll
add
roll
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
pop
add
in
pop
add
fstpl
fstpl
in
pop
add
in
pop
add
fstpl
fstpl
lods
pop
add
lods
pop
add
add
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
lods
pop
add
add
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
in
pop
add
in
pop
add
fstpl
add
fstpl
add
pop
add
popf
pop
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
fstpl
add
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
add
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
pop
add
in
pop
add
fstpl
fstpl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
les
add
les
add
les
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
sbb
pop
add
in
pop
add
fstpl
add
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
add
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
mov
add
mov
add
mov
add
mov
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
add
mov
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
les
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
pop
add
in
pop
add
fstpl
add
pop
add
in
pop
add
add
pop
add
fstpl
add
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
cld
int
outsl
xor
repz
mov
cmpb
rclb
js
inc
xchg
add
jae
ds
pop
mov
ret
stc
daa
aas
dec
pop
or
push
push
outsb
jp
scas
clc
jb
xor
xchg
xchg
cmp
xor
mov
jae
fld
hlt
sub
lods
pop
lods
and
mov
nop
add
cmpsb
pop
xor
add
lahf
addr16
push
sub
stc
xlat
sub
xor
scas
cli
sarl
push
dec
cmp
stos
or
fwait
mov
or
push
pop
and
or
lock
xchg
xor
stos
and
push
cltd
pop
outsb
add
loope
es
lcall
test
pusha
cmpsl
sub
sub
and
fwait
push
push
daa
ljmp
jns
inc
lds
jmp
rcrb
movsl
icebp
es
cmp
push
daa
std
mov
mov
dec
data16
rorl
jns
popf
popa
leave
pushf
mov
std
xor
lret
push
in
mov
test
stc
outsb
cs
daa
nop
sti
cwtl
pop
add
and
lock
test
jmp
inc
or
test
cmp
int
test
ret
cmp
nop
rcrb
into
push
mov
mov
jno
in
imul
pop
jge
mov
mov
sti
scas
fstp
ljmp
movhps
xchg
enter
mov
outsb
les
dec
test
or
aad
arpl
add
add
add
or
mov
sahf
inc
mov
pushf
mov
jmp
pop
jnp
mov
inc
mov
movsb
dec
ja
xor
push
cmp
stc
sub
adc
push
sahf
pop
test
add
push
sahf
cmp
xchg
cwtl
xorb
mov
cmpsb
int3
xchg
loope
push
aas
pop
or
add
push
ret
jno
in
jp
xor
mov
or
mov
mov
jecxz
cld
aas
adc
mov
pop
cmpb
push
add
fnsave
mov
loopne
andl
cmp
mov
jp
push
shl
dec
in
push
fmull
int3
loope
clc
aas
cs
mov
aas
add
int3
loope
call
cmc
cmp
push
mov
push
clc
mov
inc
cld
add
in
add
pop
add
int
dec
hlt
inc
cltd
add
cld
filds
mov
fisttps
aas
pop
add
loope
fsubrl
push
mov
push
call
inc
sahf
add
test
mov
arpl
add
hlt
loope
in
aas
sub
mov
push
cmp
dec
je
roll
rorb
cmpsb
int3
js
int3
adc
in
and
add
mov
call
addl
mov
push
aas
and
jl
mov
mov
les
add
push
inc
add
push
mov
lcall
scas
mov
faddp
add
in
cld
dec
pop
jge
sbb
push
aas
sub
push
arpl
push
add
dec
push
in
mov
cmp
das
stos
mov
cltd
popf
int3
add
int3
adc
in
and
cmp
add
in
xor
or
dec
and
pop
pop
lahf
int3
clc
sahf
int3
adc
in
mov
mov
push
push
inc
les
ret
int3
sbbb
int3
nop
sahf
int3
icebp
in
andl
push
call
loop
inc
faddl
cmp
call
add
jecxz
cld
add
adc
daa
add
aas
pop
or
daa
hlt
mov
das
ret
int3
jno
in
or
hlt
add
pop
add
int
cmp
mov
push
inc
adc
mov
pop
dec
cld
ret
enter
pop
add
pusha
scas
adc
pushf
insb
pop
insb
pop
add
les
rorb
lahf
int3
js
int3
nop
lahf
int3
add
in
mov
loopne
or
les
int3
js
int3
adc
in
and
inc
mov
pop
jl
les
mov
fucomi
or
jecxz
or
or
loopne
add
les
add
loope
cld
dec
and
jae
add
adc
pop
mov
sbb
cli
enter
sbb
inc
mov
inc
lock
or
inc
jl
pinsrw
insb
jecxz
or
add
int3
jecxz
clc
aas
push
adc
add
dec
int3
jecxz
or
imul
push
int3
jecxz
or
sbb
mov
testl
loopne
mov
mov
sbb
add
loope
call
dec
fildl
add
jecxz
lock
adc
add
pop
mov
pop
dec
lock
jnp
js
pop
pop
test
add
ficomps
add
and
mov
bound
push
enter
cmp
cmp
cmp
jp
cmp
push
sbb
mov
jns
mov
loop
or
and
mov
jmp
dec
sub
mov
jecxz
hlt
aas
and
mov
add
dec
sub
mov
mov
fnstcw
les
pop
mov
jnp
cmp
push
inc
or
mov
fnstcw
add
cld
mov
loope
andl
adc
adc
idiv
add
sub
mov
testl
cltd
xchg
lea
add
pop
hlt
push
sbb
cmc
decl
fnstcw
mov
push
adc
adc
enter
dec
pop
in
add
orb
shl
dec
loopne
pop
idiv
stos
loopne
pop
xchg
in
add
sbb
fldl2e
push
inc
vpsubb
mov
inc
fistpll
std
pop
mov
cld
aas
push
adc
es
dec
push
or
es
mov
cs
int3
adc
in
and
add
pop
push
inc
ss
mov
sub
int3
jno
in
loopne
mov
add
mov
add
dec
sbb
mov
and
jbe
inc
hlt
dec
adc
mov
fisttps
dec
and
add
dec
lcall
fsts
shrb
dec
dec
fists
and
cmp
mov
push
sub
cmp
mov
pop
jb
dec
or
adc
add
dec
cmp
rcr
jmp
xchg
lcall
add
int3
nop
xchg
int3
adc
in
mov
pop
xor
repnz
add
mov
push
pushf
cs
incl
and
push
inc
clc
adc
push
add
les
push
inc
fnsave
add
rcrb
add
mov
pop
add
scas
aad
add
sbb
mov
pop
add
pop
inc
add
pushf
push
mov
ret
add
jbe
xchg
fisttpl
add
test
add
pop
add
les
push
inc
aad
aam
push
add
mov
mov
sub
popf
js
testl
add
jo
add
das
or
pop
mov
mov
ret
int3
adc
in
mov
inc
mov
push
jmp
das
pop
mov
daa
ret
int3
clc
xchg
int3
adc
in
loopne
mov
add
aad
or
fmuls
mov
loopne,pn
add
mov
outsb
mov
movsb
cmp
mov
outsl
cld
aas
roll
push
insb
sbb
jnp
mov
push
repz
les
add
add
xchg
cmp
jp
inc
nop
sub
push
and
testl
les
mov
sarl
rdpmc
sub
cmp
jns
jae
dec
push
call
je
roll
inc
add
add
inc
mov
roll
aas
adc
test
mov
dec
shl
adc
push
cmpsl
inc
mov
roll
adc
dec
sub
add
sub
push
dec
xchg
orl
mov
fcmovnb
sub
rorl
jbe
push
cld
add
xchg
add
pop
mov
push
in
sar
push
fidivrl
mov
pop
insl
or
push
rclb
pop
push
lcall
cmpsl
cmpl
unpcklps
repz
les
push
cwtl
sub
xor
test
daa
mov
or
das
les
push
pusha
sub
pop
xor
mov
add
insl
cmp
inc
dec
pushf
push
mov
jne
lock
push
aas
and
push
scas
pop
notl
mov
mov
aam
fmuls
fmuls
mov
cmp
mov
push
mov
mov
call
addl
mov
add
inc
mov
roll
shlb
add
les
dec
jo
dec
loopne
mov
inc
xor
scas
push
inc
roll
push
aas
outsl
pushf
push
add
mov
xor
inc
sahf
add
jns
mov
sub
mov
fnstenv
add
mov
push
aas
push
fcoml
mov
mov
sub
jne
test
addl
add
add
push
add
sbb
ljmp
sti
addr16
sbb
mov
xchg
push
inc
les
call
addl
or
push
dec
push
loopne
leave
mov
dec
sub
iret
or
push
sub
hlt
pushl
fdivrs
les
adc
pop
mov
lea
push
push
lock
mov
shll
inc
les
notl
jae
sti
jecxz
mov
mov
and
int3
nop
xchg
int3
adc
in
or
inc
test
ret
int3
nop
xchg
int3
icebp
iret
in
cli
sub
add
mov
add
xor
or
int3
icebp
iret
in
fcompl
cld
aas
les
push
call
add
or
int3
sub
dec
insl
call
pushl
mov
mov
iret
in
loopne
mov
add
fwait
cmp
add
sbb
add
or
add
pop
mov
add
aad
or
rclb
pop
call
mov
test
push
add
leave
xchg
push
inc
add
pop
add
les
mov
pop
add
fnsave
add
push
add
inc
inc
enter
add
hlt
mov
push
inc
les
mov
cmp
lcall
sbb
mov
roll
push
stos
addr16
push
add
pop
mov
leave
sahf
push
inc
les
cld
aas
repnz
add
pop
mov
push
jae
mull
add
mov
notl
addr16
inc
les
push
call
inc
xchg
cld
mov
sub
aad
xor
rclb
add
les
push
call
add
mov
incl
add
jns
mov
aam
cld
jmp
cmp
fdiv
jb
sti
fwait
addb
add
adc
push
mov
add
sub
add
or
stc
decl
mov
add
rorb
aas
push
hlt
add
aam
loopne
fisttps
push
sbbb
in
xchg
movl
es
addl
mov
sarl
jae
roll
add
orl
subb
adc
inc
clc
inc
cltd
jmp
adc
and
mov
inc
pop
rorl
jmp
shll
mov
mov
push
inc
les
mov
mov
inc
les
mov
mov
inc
negl
jg
or
cmp
pop
inc
add
add
les
push
in
xor
mov
mov
push
call
inc
xchg
cld
mov
xchg
push
inc
les
call
test
sub
fnstcw
add
enter
add
pushf
push
add
inc
test
call
mov
sub
xor
fstpl
pop
int3
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
mov
rorb
dec
sub
adc
sbb
lret
mov
jbe
cmp
ss
and
push
ss
clc
stos
flds
pop
icebp
lret
mov
add
xchg
dec
leave
rorb
hlt
inc
ja
mov
les
pop
mov
js
pop
jge
clc
pop
push
hlt
pop
and
mov
sub
addl
inc
inc
sbb
push
jle
mov
in
lea
clc
ja
and
mov
int3
lahf
out
mov
jl
jbe
jmp
jmp
pop
insl
xchg
sbb
movsb
jle
hlt
and
leave
push
out
and
lret
out
subl
fwait
or
sarl
fstps
cmp
lock
inc
mov
cwtl
std
pop
jg
jecxz
fld
mov
pop
push
es
mov
out
and
mov
and
mov
faddp
jmp
cmp
mov
imul
in
xchg
les
int
mul
pop
das
out
test
adc
sub
jo
push
sbb
sbb
xlat
hlt
stc
cmp
pop
or
fdivrp
jle
xchg
sbb
mov
pop
mov
insb
sub
call
mov
jge
lret
xchg
cld
cltd
sub
mov
cwtl
lods
cmp
popf
xor
xchg
mov
cmp
jo
mov
iret
in
daa
cwtl
push
pop
jecxz
cmc
xor
pop
out
push
out
lds
cmp
into
mov
pop
pop
repz
out
xchg
mov
cmc
call
mov
pop
std
or
xchg
jns
push
lret
add
aas
jb
pop
sub
fwait
rorb
add
es
or
lock
cltd
jae
xchg
stos
jge
add
add
lods
add
add
xor
xor
xor
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
js
xchg
xor
int
fdivs
fdivs
ss
push
aaa
nop
aaa
cwtl
aaa
movsb
aaa
stos
aaa
shll
cmp
cmp
cmp
cmp
popa
cmp
cmp
cmp
cmp
cmp
and
add
add
add
cmp
cmp
cmp
cmp
cmp
add
xor
add
add
pop
xor
