sbb
add
out
mov
xor
jne
mov
xchg
cmc
movsl
roll
andps
adc
or
leave
inc
testb
push
cmc
loop
pop
inc
in
je
fcoml
fsubrl
arpl
into
push
data16
pop
jae
dec
pop
fisubl
aam
stc
fdivs
xor
daa
and
jp
aam
test
cmp
cld
add
pop
popf
gs
adc
scas
push
push
out
mov
and
xor
lods
sub
int
adc
ss
lods
loopne
dec
sbb
out
and
mov
or
jp
dec
std
jmp
jle
jecxz
sahf
lret
xor
cli
lea
adc
insb
movsb
push
fnsave
add
popf
cli
adc
xchg
addl
jmp
pop
andb
mov
out
cwtl
or
cmpsl
sarb
jbe
mov
dec
test
mov
popa
cld
lcall
into
mov
out
cmp
sti
xchg
movsb
out
loop
xchg
daa
inc
pop
jo
mov
jns
sub
mov
jmp
xchg
cmp
out
mov
adc
mov
enter
cmp
jl
push
mov
sahf
mov
jecxz
xchg
xchg
repnz
rorl
sub
jne
popa
shrl
insb
add
cmp
sbb
sub
in
mov
mov
xchg
movsb
ret
push
xor
push
jns
ja
xchg
je
cmp
or
jle
mov
adc
lds
sarl
mov
mov
sbb
fbld
mov
pop
mov
mov
aad
lods
fmuls
pop
gs
xchg
and
pop
push
xchg
jle
cmpsl
and
inc
ret
lds
shl
jno
sbb
dec
lret
jae
mov
jl
std
ja
xor
inc
push
in
addr16
cltd
push
sbb
mov
pavgb
xor
xchg
repnz
push
rorl
add
dec
cmp
enter
xchg
dec
mov
stc
pop
jne
pop
push
stc
inc
jo
pusha
push
stos
cwtl
adc
test
sbb
in
ret
xor
cmp
push
leave
lock
push
js
int3
mov
data16
pop
xchg
push
dec
dec
out
and
inc
jno
int
pushl
jns
xor
and
cmp
mov
pop
aam
sub
xorb
mov
mov
addl
shr
add
ljmp
xchg
inc
sbb
pop
fstps
decb
mov
test
dec
mov
clc
push
mov
mov
cs
cli
xchg
cmp
cmp
lds
xor
push
mov
sbb
add
fdivl
or
lret
sbb
out
std
jle
shl
push
mov
sub
arpl
gs
iret
jg
fwait
adcb
add
xor
cmpsb
cmc
adc
clc
scas
pop
mov
fcompl
scas
lahf
fldenv
and
sbb
adc
mov
xchg
out
mov
sub
push
ficoms
out
icebp
nop
repz
push
dec
sahf
popf
push
icebp
or
inc
dec
mov
jb
jl
lods
dec
vshufps
int3
idivb
mov
and
fwait
xchg
or
mov
repz
and
es
sub
imul
cmp
jns
sub
add
aad
sub
iret
arpl
lahf
push
add
jns
jbe
cli
push
mov
add
negb
mov
stos
test
outsl
fisubrl
loope
xchg
jne
jne
add
fldenv
pusha
cmp
gs
xor
xor
fsub
pop
dec
jg
ret
ss
pushf
push
pop
inc
sub
loop
js
lods
or
aad
les
mov
jns
push
dec
push
push
cltd
stos
inc
jo
fidivrs
push
pop
and
movsl
sbb
push
mov
data16
mov
jmp
ljmp
sub
andb
push
fdivr
sub
cmpsl
xor
in
fidivrs
fcmovnb
inc
and
aam
mov
loopne
pop
inc
inc
lret
out
jne
inc
adc
or
call
cmp
push
dec
or
mov
sbb
iret
dec
mov
mov
adc
cmpsl
shlb
addr16
leave
stos
fildll
jg
or
add
mov
jp
mov
rol
mov
inc
not
lret
mov
or
mov
jo
xchg
inc
lret
aad
mov
or
xchg
setge
outsl
inc
sti
jae
rcr
lock
xor
mov
mov
insl
repnz
push
jp
xchg
add
xchg
xchg
js
pop
xchg
xchg
int
popf
xchg
dec
mov
cmp
sbb
lcall
sbb
ljmp
xchg
test
ret
out
xchg
and
jno
push
lds
xor
pop
js
cwtl
rclb
dec
xchg
push
mov
push
jle
xlat
adc
roll
int3
shll
or
pop
and
xlat
into
sbbl
and
mov
ss
push
pop
clc
sub
jne
leave
pop
scas
xor
mov
xchg
and
dec
fsubs
add
sbb
lods
jbe
rcll
mov
mov
testb
mov
sbb
sbb
addr16
add
inc
mov
outsl
xor
push
xor
aam
daa
xchg
inc
mov
loop
das
jae
xlat
sti
sub
cmp
xor
cmp
js
dec
mov
jae
pop
mov
ficompl
jb
into
imul
pop
adc
mov
rcr
lods
mov
mov
lods
sub
xchg
lret
xchg
cmp
fmul
insb
out
add
cmp
cmp
cmp
fwait
adc
aaa
mov
out
adcb
lcall
jns
call
mov
enter
mov
xchg
mov
inc
mov
sbb
pop
jnp
push
je
jnp
hlt
jns
and
out
sub
mov
cwtl
fsubrp
mulb
ss
adc
sbb
jns
loopne
xchg
cmp
fidivrl
pop
inc
inc
xchg
xor
pop
jb
rcrb
movsl
out
or
mov
stos
sbb
and
pop
nop
loop
dec
sahf
add
sub
cld
fdivr
or
sub
fsubs
jmp
jno
in
dec
clc
in
lds
sub
repnz
repz
inc
data16
rcrb
cmp
add
pop
inc
sbb
stc
and
jbe
mov
sub
push
hlt
jae
cld
mov
ret
mov
push
mov
scas
ss
aaa
jns
mov
sbb
sub
subl
sbb
popa
mov
orl
lods
ficompl
out
mov
sbb
lods
jmp
loopne
xor
sbb
xchg
xor
into
shlb
dec
test
push
fbstp
pop
cmp
add
mov
lock
aaa
xchg
xchg
outsl
mov
imul
cli
pusha
popa
pop
fmul
test
ja
xchg
iret
nop
inc
mov
push
xchg
cmp
jmp
xchg
push
mov
rolb
dec
mov
pop
cmp
movl
push
imul
fdivrs
movl
inc
xor
lock
add
jno
pop
pusha
mov
cmp
xor
mov
rorl
enter
pusha
push
push
hlt
je
ja
or
fidivrl
cld
inc
enter
jp
add
ret
sub
mov
cmp
sbb
aaa
push
mov
out
out
mulb
xor
dec
adc
addr16
xlat
pop
scas
xchg
adc
jns
mov
and
test
dec
push
inc
insb
mov
mov
sbb
lock
jge
xor
sbb
outsb
push
insb
test
jns
sahf
mov
mov
push
out
pop
cmpsl
cmpb
movsb
add
inc
adc
sarl
inc
inc
adc
adc
in
xchg
out
mov
popa
jl
jbe
stos
jg
adc
jb
pop
mov
jg
push
mov
imul
testl
add
mov
xor
mov
xor
jle
mov
inc
gs
enter
mov
stos
pop
pop
hlt
xchg
cli
movsb
push
jecxz
in
xchg
bound
call
fdivrs
mov
fisubrs
les
inc
insl
add
in
js
std
jb
nop
pop
sahf
mov
mov
std
mov
sahf
shll
pop
ljmp
iret
inc
mov
js
lret
int
jg
cmp
mov
incl
ret
mov
push
mov
xor
lret
xor
pop
inc
mov
out
stos
clc
dec
stos
push
negb
daa
jns
scas
ret
hlt
dec
sbb
out
jne
outsl
push
shlb
push
jbe
cmp
ljmp
ljmp
out
mov
pop
cltd
sub
add
imul
scas
out
movsl
fs
adc
int3
cld
mov
sbb
push
xor
or
loop
jg
inc
mov
jnp
cmp
cmp
add
add
int
fwait
test
adc
addr16
mov
mov
and
mov
mov
inc
jmp
mov
dec
mov
hlt
adc
push
cmpl
push
ja
add
hlt
inc
cmp
xchg
or
pop
push
aad
push
mov
decl
movsb
mov
lcall
call
push
jne
and
pop
cltd
dec
jno
pop
inc
lret
ret
jge
cltd
sub
pop
or
mov
loop
mov
adc
sahf
loopne
and
aad
or
mov
lcall
ds
or
adc
jge
shl
xor
mov
call
and
lds
popa
sahf
popa
call
pop
jne
sbb
sub
mov
mov
pop
out
cmp
pop
repnz
inc
pusha
out
aas
xor
loop
push
add
xchg
jnp
xor
aad
repz
aas
jnp
ljmp
icebp
xor
mov
aaa
subl
cmp
divl
cli
stos
in
sahf
stos
sbb
insb
sbb
mov
aas
xchg
mov
fimuls
les
xchg
and
cmp
sbb
lds
shlb
jne
ret
sbb
mov
pop
stc
pop
aas
xchg
xor
push
mov
es
leave
jne
aas
inc
fistpll
and
pop
adcl
mov
enter
mov
jge
mov
xor
xchg
inc
push
into
push
and
or
repz
aam
ret
cld
mov
or
inc
mov
jbe
inc
fidivs
ljmp
jne
xor
mov
shl
popa
ficomps
xchg
xchg
lcall
dec
cli
movsl
loope
jle
xchg
push
cld
xor
cmc
jp
mov
int
push
xchg
sarl
xor
addr16
xchg
adc
mov
jg
or
xchg
lds
adc
pop
xor
loopne
lds
jne
fsubs
fwait
xchg
mov
cli
sbbb
xchg
adc
sarb
mov
movsb
hlt
jp
pop
gs
xor
fs
cmp
add
xchg
cmp
mov
addr16
pushf
subb
add
adc
lcall
repnz
rcll
hlt
inc
jg
imul
je
mov
or
movsl
int3
lret
xchg
stos
pop
fwait
mov
outsl
jle
enter
lret
mov
fcoms
sbb
mov
jl
in
sbb
imul
outsl
cmp
jecxz
cld
out
lods
and
leave
mov
fnstsw
sbb
fdivrp
daa
or
mov
fs
mov
rcl
addr16
outsb
push
push
mov
mov
outsb
pop
lods
iret
push
adc
sbb
jne
scas
ret
cmp
ficoms
sbb
cmp
cltd
mov
sub
imul
push
push
xchg
sbb
loop
adc
jge
jno
xchg
mov
lock
loope
and
movsb
adc
cltd
xor
ljmp
add
mov
aad
xor
adc
push
add
pop
inc
mov
ss
sahf
mov
ds
sub
inc
add
aaa
cmp
xchg
jnp
mov
addr16
add
mov
stc
push
cmp
push
xchg
and
mov
jmp
ss
cmpsb
adc
dec
and
outsb
dec
repz
or
pop
push
pop
out
mov
mov
pop
pop
sbb
pop
or
data16
lods
out
loopne
mov
adc
ds
pop
popa
les
es
js
jp
loop
sbb
mov
mov
mov
push
fidivs
or
outsl
xor
int3
cmp
out
xor
mov
lods
jge
hlt
aam
or
pop
xor
loope
adc
mov
lea
int
fptan
mov
jns
aaa
lods
mov
sbb
jle
add
sub
pushf
das
xchg
sti
and
outsb
fistpll
je
test
xchg
mov
inc
stc
jg
test
mov
shl
rorl
sub
iret
mov
dec
adc
subl
dec
cmp
aas
or
xchg
shll
cli
out
xchg
or
pushf
das
ja
stos
out
xchg
xchg
lcall
mov
jno
pop
shll
adcb
mov
and
lret
nop
ljmp
imul
sub
jmp
fs
aam
or
mov
shll
mov
or
mov
sub
and
out
add
sub
sub
jae
sub
lea
std
add
pop
ja
jmp
ret
jno
push
mov
xlat
pushf
inc
xchg
test
leave
lods
adc
inc
pop
add
add
aas
aas
out
or
je
mov
repnz
mov
je
or
pop
int3
cld
mov
arpl
or
lock
push
mov
cld
cmpsb
or
jnp
or
repz
in
mov
push
jae
xchg
xor
lods
pop
mov
pop
aam
jae
jl
xor
pop
push
in
test
aad
xchg
int
pop
xor
pop
pop
mov
xchg
pushf
jg
dec
push
and
xchg
in
or
cld
mov
pop
bswap
inc
test
repz
lret
mov
dec
cli
or
mov
int3
xchg
inc
ret
aam
inc
cmp
popf
les
sahf
jge
test
inc
iret
ja
into
pop
ljmp
dec
push
loope
std
shlb
iret
shrl
divb
repz
sbb
push
cmp
lods
xchg
push
cmpsl
pop
xchg
pop
mov
in
adc
dec
test
int3
ja
dec
push
sti
xchg
and
js
in
or
mov
xchg
jmp
xor
dec
mov
pop
insb
outsb
sti
xchg
call
or
fbld
dec
jb
sub
dec
mov
sub
mov
shll
xor
sub
dec
sub
into
aas
nop
stos
les
movsl
mov
mov
orb
pop
sbb
outsb
bound
dec
mov
shrl
push
mov
ljmpw
js
out
lret
inc
mov
or
rcll
cmp
sbb
mov
push
pop
subb
repz
mov
scas
mov
lods
cmp
rcrb
les
pop
xor
mov
iret
mov
push
cmpsl
push
sub
mov
mov
add
cmp
pop
cmpsl
and
call
lea
cmpsb
pusha
dec
add
inc
cmp
mov
les
mov
cmpsb
int3
lods
aam
testb
arpl
fistpl
jb
movsl
stos
and
rorl
popf
fbstp
mov
adc
jg
stos
mov
and
in
movsb
add
xlat
sbb
sub
enter
lods
xor
mov
fdivr
pusha
sbb
push
enter
mov
popa
cmp
std
int3
mov
adc
in
lea
mov
call
fnsave
insl
and
imul
jno
push
andl
xor
bound
aad
imul
lahf
or
stos
xor
mov
add
dec
and
or
or
cltd
xchg
xor
out
loop
xor
push
adc
mov
fsubrl
mov
mov
arpl
divl
out
or
je
outsb
pop
push
pop
dec
movl
loop
xchg
add
imul
sahf
sub
jne
test
sbb
add
xchg
mov
divb
pop
ret
hlt
push
in
push
out
repnz
add
xchg
inc
dec
mov
int3
enter
mulb
sub
ror
fidivs
xor
iret
call
lock
dec
fxch
leave
mov
cltd
aaa
add
mov
loopne
mov
push
repnz
subb
mov
mov
jp
loopne
jge
loope
gs
fcoml
cmp
push
cmp
dec
push
or
jnp
xchg
sbb
sub
std
add
push
hlt
lods
mov
into
jmp
mov
cmp
fistpll
sbb
mov
outsb
add
push
fdivrp
insl
pusha
jecxz
xor
cld
js
xlat
pop
pop
or
inc
outsb
jne
adc
sarl
cmpsl
and
and
sbb
mov
es
lods
stos
xchg
mov
push
je
mov
dec
call
jl
xchg
sti
outsl
dec
lcall
fldcw
into
xchg
pushf
pop
lret
cmpsb
call
leave
inc
sbb
aad
or
dec
fdivr
sub
popf
and
adc
add
loopne
movb
mov
xchg
leave
mov
cmp
mov
xchg
push
and
adc
fbstp
inc
aad
jmp
cmp
jne
mov
dec
sub
aam
jp
or
shll
stos
inc
outsb
or
repz
scas
fwait
in
bnd
shll
flds
outsb
aaa
testb
and
js
call
inc
dec
inc
shll
rorb
js
mov
pop
lcall
mov
aad
adc
push
mov
into
orl
push
dec
rclb
xlat
mov
pop
out
test
mov
add
sub
mov
popf
shr
jg
hlt
mov
mov
decb
xor
pop
aam
fs
adc
pop
push
jmp
stos
mov
adc
xor
in
stos
ja
sbb
mov
mov
jle
jae
and
or
mov
xlat
adcl
cmp
dec
das
sub
mov
jl
popa
mov
sbb
jne
dec
or
scas
dec
std
adc
mov
lods
leave
dec
addr16
cmc
js
je
and
pop
inc
lret
mov
in
aas
dec
loope
lret
sets
adc
int3
and
rorl
push
push
stos
cmpsl
fistl
out
fwait
mov
incb
jecxz
mov
sub
pop
adc
sub
movsb
stc
movsb
sahf
out
add
add
sbb
decl
out
js
adc
rolb
ljmp
push
cld
pop
aas
sbb
andb
je
stos
adc
sbb
pop
movsl
push
sub
fbld
mov
jl
push
sub
push
ret
and
sub
loopne
in
mov
adc
inc
data16
cmpsl
push
test
setne
mov
out
dec
mov
filds
out
nop
shll
aas
cmp
cmp
cmpsl
push
mov
add
mov
jmp
pop
lock
add
xchg
insb
stos
add
incb
jb
xchg
pop
mov
nop
loope
dec
adc
ja
ffree
jns
inc
xchg
or
add
mov
cmp
aad
or
std
leave
cmp
mov
out
sbb
outsl
imul
adc
and
push
popf
int3
inc
add
xor
xlat
outsl
or
out
and
lret
adc
pusha
sbb
cli
dec
inc
cltd
data16
insb
orb
sub
fstl
or
and
mov
ret
int
jne
adc
xchg
sahf
cmpsb
cmp
mov
push
adc
rcr
cmpsb
inc
andb
cmpsb
fdivl
jge
push
stos
mov
sub
jno
loope
mov
push
or
jecxz
push
adc
ret
loopne
fsubrs
sbb
dec
pop
dec
arpl
push
cs
add
lret
mov
inc
fmul
in
stos
mov
sub
jmp
pusha
cli
in
mov
test
mov
jo
or
dec
xchg
sub
call
call
add
fadd
pop
popa
push
icebp
lret
adc
rolb
adc
jne
pusha
dec
dec
ret
jmp
xor
test
iret
sub
mov
out
inc
push
sub
push
rol
imul
mov
loopne
out
insl
push
ljmp
cltd
cli
out
fistps
pop
cmpsl
pop
adc
and
sub
data16
out
nop
aad
jmp
xor
dec
testl
inc
lods
sbb
es
sbb
and
xchg
and
mov
cmp
mov
test
loop
jp
sub
dec
jno
dec
in
add
jo
mov
pop
rolb
test
add
ret
jle
rcrb
gs
cmpsl
xchg
bound
cs
cmp
cmc
xor
dec
cmp
cld
xor
cmp
push
mov
or
cmp
fwait
test
jno
xor
movsb
push
and
inc
jae
mov
inc
cmpb
cltd
inc
imul
mov
xorb
inc
out
or
pop
xor
mov
fwait
sub
in
stos
testl
dec
pop
shlb
add
push
push
addr16
mov
pop
test
push
and
and
mov
mov
add
insb
fldl
dec
xchg
mov
adc
pop
jbe
push
notb
movsb
mov
out
dec
adc
aaa
and
inc
dec
aaa
jns
xlat
aam
or
pop
mov
fldt
push
pop
out
out
xchg
sub
addr16
inc
pop
rclb
mov
mov
mov
fsts
sub
mov
cmp
jl
sub
into
jb
mov
clc
push
repz
in
and
mov
shlb
mov
std
icebp
fstps
sub
push
nop
xchg
jns
jbe
mov
push
movb
dec
cli
int3
movsb
ja
push
mov
push
in
hlt
pop
test
push
leave
sub
ja
jl
faddl
lcall
pop
pop
cmp
mov
inc
dec
popa
sbb
inc
cmp
and
mov
mov
xchg
push
loopne
adc
stos
lods
idivl
mov
dec
cld
pop
xchg
jp
cli
ds
or
mov
sahf
xor
mov
inc
sahf
add
xchg
cmp
ss
jns
aam
inc
adc
sub
pop
sbb
imul
incl
dec
xlat
loope
lahf
mov
mov
fimuls
add
xlat
adc
sbb
add
mov
sti
mov
jnp
inc
iret
mov
xorb
mov
out
xor
mov
sbb
dec
jecxz
mov
insb
mov
je
jg
repz
xor
pop
outsl
aad
push
aad
js
shlb
pop
test
mov
adc
sbb
sysret
orl
mov
xchg
out
or
push
or
pop
in
into
fwait
pop
ds
mov
pusha
xchg
push
sub
pop
ss
arpl
stos
cwtl
push
adc
test
stos
sub
and
add
gs
xchg
insl
add
or
orb
or
mov
cmp
gs
mov
or
push
leave
in
jg
mov
xchg
sub
add
scas
ds
sbb
test
cltd
pop
int
mov
jg
adc
xchg
jbe
leave
adc
and
mov
push
cld
sub
inc
lock
enter
sbb
lret
mov
inc
pop
rcrl
iret
std
sub
mov
cmpsb
jg
in
mov
lods
jg
aas
inc
inc
sbb
icebp
call
test
adc
es
ret
scas
or
and
sub
xor
mov
jno
push
or
cld
xchg
fcmovne
pop
jbe
pop
mov
loope
xor
or
mov
xor
jnp
push
dec
ret
or
or
add
and
int3
inc
hlt
fdiv
xor
loopne
pop
movsl
fadds
sub
test
mov
incl
adc
movnti
int3
push
jle
dec
sub
fwait
sahf
jg
leave
inc
pop
sub
out
imul
and
sahf
aas
test
and
sbb
pop
and
push
fwait
mov
out
shlb
and
gs
pop
scas
lret
aaa
mov
lret
daa
pushf
stos
mov
cmpsl
nop
push
std
les
fstpt
enter
mov
lods
popf
int
jae
cmp
adc
in
rorb
add
mov
dec
lret
cmp
filds
movsl
or
ds
mov
mov
ds
aam
sbb
fsts
or
mov
loope
sbb
pop
and
popa
movsl
xlat
fidivrl
fimuls
in
int3
test
popf
lret
dec
push
test
jb
in
in
dec
dec
lods
push
cwtl
lds
xchg
cltd
xor
push
sub
xor
pop
push
or
cmp
pop
mov
fiaddl
push
mov
mov
dec
inc
jmp
popf
fisubl
mov
mov
adc
roll
or
xor
out
add
push
sti
out
mov
sub
mov
out
das
pushf
jmp
xor
cld
cs
in
lcall
sbb
aad
xor
mov
les
stc
xchg
cwtl
fs
adc
ss
and
xor
push
mov
ja
fdivrl
lcall
inc
cli
dec
sbb
pushf
cmp
dec
sti
mov
add
xor
sbb
jns
ljmp
lahf
pop
bnd
and
ret
cmp
jne
or
add
add
jp
inc
ds
push
push
push
ja
and
movsb
fsubrs
xor
jmp
rclb
inc
adc
sub
call
mov
mov
dec
inc
mov
enter
pushf
inc
pusha
nop
add
testl
movsl
or
push
jo
dec
mov
adc
hlt
cmp
inc
leave
mov
sahf
fucomip
add
leave
cmp
cmp
addr16
ljmp
mov
lods
sub
add
sbb
sbb
addb
cmp
shl
pop
inc
push
and
dec
xor
xchg
mov
test
lcall
scas
in
in
xchg
shlb
pop
sbb
rcll
cmpsl
ficoml
pop
push
cltd
push
je
movsb
jmp
movsb
cmc
dec
mov
dec
mov
inc
add
fidivrl
sbb
inc
xchg
test
jno
out
cmp
xor
imul
sub
out
cmp
xchg
int3
loope
mov
pop
fsubrl
adc
sbb
fisubrl
call
scas
jl
roll
push
inc
repnz
xor
push
and
fstpl
cmp
mov
test
popf
and
call
mov
pushf
push
mov
cmpsb
xchg
aam
lcall
in
push
into
mov
out
jbe
mov
jae
mov
pop
adc
rolb
in
pop
popf
push
mov
and
adc
fildl
jmp
aad
pop
xchg
mov
xor
dec
push
adc
negb
xor
dec
sbb
or
push
pushf
and
sub
mov
into
loop
xor
stc
lahf
pop
mov
out
es
adc
iret
inc
je
pusha
and
lds
sub
sub
outsl
ds
nop
faddl
scas
or
test
jle
mov
push
cmp
hlt
adc
cmc
std
repz
rolb
inc
xor
inc
push
pop
dec
xchg
mov
mov
cwtl
mov
out
enter
push
adc
dec
inc
sbb
les
adc
and
add
mov
js
imul
movsl
dec
frstor
jae
lret
push
les
lods
out
decb
test
aam
fwait
push
int3
and
mov
sbb
push
jl
andl
shlb
lret
adc
cltd
push
sbb
mov
subl
or
ror
mov
pusha
cmp
mov
mov
cld
add
cmpsb
push
sahf
sbb
scas
imul
xchg
jo
inc
aam
pushf
add
call
inc
aas
pop
add
outsl
rcrl
push
push
mov
mov
pop
mov
or
lcall
mov
les
add
dec
mov
jno
push
dec
jns
sbb
sbb
inc
dec
es
dec
jge
jle
xor
dec
in
into
cwtl
cmpsl
lcall
hlt
jl
adc
repnz
rcrl
ret
jb
and
test
dec
jle
daa
sub
cmp
enter
int
pop
push
mov
inc
xlat
or
sub
testl
xchg
pop
fs
es
and
xchg
and
or
mov
sbb
add
cltd
mov
push
mov
sahf
mov
cmp
mov
xor
lds
cmpsl
dec
xchg
shl
stc
je
mov
rolb
popf
data16
out
jle
cmp
int
mov
loop
pop
adc
xchg
cwtl
fnstsw
mov
cltd
mov
jae
movsb
cmp
cltd
add
xorb
adc
mov
jno
mov
popa
mov
jb
pop
cmp
xor
in
scas
push
es
cmc
mov
icebp
sub
out
push
or
ret
icebp
lods
mov
lahf
pop
dec
xchg
lods
adc
movsb
cmp
sti
loopne
outsb
push
aam
in
icebp
xchg
push
out
sub
nop
pusha
adc
sbb
xchg
mov
repz
nop
xchg
mov
push
scas
fistpl
xor
daa
mov
add
cmp
mov
and
cmp
mov
sub
outsb
jmp
fnstenv
sub
sbb
pop
add
stos
aam
aad
add
mov
mov
xchg
pop
and
jbe
xchg
sbb
adc
xchg
cwtl
outsb
xlat
mov
loopne
daa
ret
xchg
pop
push
sbb
cmpsb
lret
fmuls
dec
pop
rcrl
push
cs
in
jle
fistl
or
sub
movsl
loope
ss
ds
jge
pop
je
jmp
flds
in
inc
cli
lods
jecxz
loope
push
cmp
jnp
jae
shrl
daa
xchg
sub
push
ljmp
fs
subl
daa
add
or
out
cmp
dec
push
stos
xchg
dec
jl
test
mov
dec
xchg
jg
mov
loope
clc
in
push
addr16
push
mov
jmp
and
test
and
mov
push
pushf
sub
dec
les
ret
xchg
sub
out
loop
stc
aam
jno
loope
arpl
rorl
jmp
mov
hlt
shll
push
cmpb
and
loopne
out
daa
dec
xchg
push
and
jg
cmp
movsl
orl
inc
fidivrl
or
mov
call
out
into
jbe
loopne
lret
lods
dec
pop
cs
xor
adc
inc
imul
mov
dec
jb
push
add
push
push
dec
jae
mov
push
out
jp
div
icebp
je
call
jnp
andb
lock
pop
jge
xor
xor
sbb
jbe
es
jle
paddq
addr16
push
ja
lcall
jb
mov
push
lret
insl
xor
out
jbe
mov
inc
xor
outsl
jl
mov
fldl
cmp
outsl
iret
mov
cli
or
ret
lret
sub
push
jl
testb
xchg
jb
mov
xor
popa
stos
inc
xor
pop
and
and
push
mov
push
lds
jns
cmp
xor
and
sahf
mov
jo
aam
ss
or
cmp
leave
aas
roll
dec
test
push
xchg
sub
dec
inc
pop
je
add
inc
mov
dec
je
sbb
xor
rolb
popa
xchg
fidivrl
and
rclb
jns
lret
add
lock
add
pop
pop
lods
sub
add
arpl
xorb
int
stos
cmp
pop
add
pop
ss
fistl
cltd
adc
inc
in
out
push
fldenv
rcll
imul
mov
sbb
stos
enter
cld
dec
aaa
xchg
lret
mov
add
sub
fnstsw
in
mov
jg
add
jae
mov
pop
add
ret
pop
adc
adc
lahf
add
sarl
je
and
imul
aam
addr16
lcall
xchg
xchg
cmpsl
xchg
inc
push
xchg
jne
sub
xchg
mov
cmp
mov
fdivs
das
push
adc
repnz
insb
jae
movsb
sub
pop
je
testb
inc
xor
dec
lret
cmpsb
mov
jae
xor
mov
popf
repz
rorb
imul
mov
not
loop
pop
js
push
shll
rcrb
xchg
loopne
xchg
jo
cmpsl
add
xor
outsb
les
xchg
push
jne
add
mov
jmp
jp
out
aam
cmp
cmpsl
pop
dec
xor
cmp
in
sub
cmc
pop
xchg
sub
loop
xor
pop
ljmp
rcll
inc
out
push
xchg
cmp
fcomi
mov
popa
mov
enter
mov
shll
data16
cld
nop
or
mov
gs
js
popf
xchg
mov
repz
push
jecxz
aad
aas
cwtl
arpl
jl
ret
jecxz
xchg
inc
out
adc
inc
lret
pop
ds
add
push
xchg
ja
fstpt
push
cmp
aaa
sub
dec
mov
popa
ret
add
push
insl
xchg
sbb
imul
scas
das
int
add
roll
cltd
jo
jo
subl
jae
push
sbb
gs
std
fs
les
lret
addr16
xchg
xchg
xlat
fsubl
adc
inc
xchg
mov
xchg
jae
sbb
dec
iret
or
icebp
mov
push
scas
std
xchg
pop
jle
mov
ret
and
push
gs
inc
filds
test
mov
es
addr16
std
lock
dec
loopne
fstpl
mov
insl
xchg
dec
cld
mov
mov
nop
repnz
outsl
cmp
mov
scas
sbb
leave
inc
xchg
rcr
fildll
sbb
out
iret
mov
out
jle
lret
scas
jle
push
aas
jae
movsb
cwtl
push
lea
insl
pushf
arpl
jmp
bound
jl
ss
movsb
mov
rcrl
fnsetpm(287
adc
nop
cld
xchg
xchg
pushf
hlt
mov
pop
das
mov
xor
int
add
prefetcht1
adc
dec
mov
cmp
test
dec
aam
xor
xchg
and
xchg
aas
mov
jle
mov
push
jmp
pusha
or
xor
mov
loop
pop
sbb
mov
les
add
and
jecxz
inc
fmull
jbe
incb
rolb
movsl
or
jp
sub
inc
addl
rolb
cli
daa
shlb
dec
jno
push
or
repz
and
or
mov
in
rorb
pop
and
jae
out
pop
mov
mov
shrb
mov
dec
std
sahf
ljmp
xorl
jbe
sub
stos
or
pop
mov
adc
mov
xor
push
rcr
fsubrs
outsl
jmp
sbb
pop
add
call
nop
or
ljmp
pop
adc
ret
sub
xor
mov
xchg
jno
cmp
dec
filds
sarl
add
pop
xchg
jnp
popf
ss
stos
adc
in
scas
lds
sub
movsb
xchg
stos
jne
ret
push
ret
scas
movsb
into
fistpll
and
push
xor
mov
stos
mov
icebp
pop
push
and
cmpsb
mov
lds
mov
xchg
dec
jo
sbb
add
cli
pop
mov
pop
sbb
pop
cs
sub
jae
sbb
sub
cmp
push
and
jno
test
insb
jo
inc
xchg
lcall
rcrl
mov
cmc
dec
mov
mov
dec
add
loopne
fs
scas
dec
pop
into
cmpsl
pop
shll
outsl
fidivs
or
cmpsb
mov
inc
aaa
adc
pop
aas
dec
in
cltd
sbb
cld
in
ds
mov
imul
repnz
inc
orb
cmp
mov
jmp
sub
sub
arpl
or
push
push
fisubrl
pop
test
jno
clc
push
lods
outsl
and
pop
outsl
pop
xchg
loop
cmpsb
and
movsl
xchg
cmpsl
dec
imul
xlat
mov
mov
sti
inc
inc
out
dec
das
inc
inc
aas
xlat
imul
or
out
jge
dec
dec
cmp
inc
pop
pop
mov
hlt
decb
rcrl
mov
scas
rcr
and
sbb
ret
decb
fistps
sub
xchg
jecxz
sub
dec
xchg
xchg
daa
adc
ljmp
push
subb
add
loope
in
or
xor
enter
mov
inc
mov
cltd
aam
push
inc
jge
rol
xor
jb
pop
mov
ret
lds
mov
jecxz
sbb
cmp
repz
push
outsb
sbb
inc
bound
shll
pop
dec
icebp
pop
lret
jne
imulb
xor
sbb
xchg
mov
add
ja
inc
mov
fadd
xchg
les
cmp
addr16
lock
iret
jbe
dec
sbb
add
loopne
mov
out
in
adc
add
loopne
pushf
lea
add
ja
out
jns
sahf
push
add
cmp
push
inc
xchg
inc
dec
dec
rcr
mov
nop
lods
out
dec
push
popf
test
jb
scas
push
mov
sarb
push
notl
adc
mov
mov
inc
xor
jp
xor
jg
adc
int3
popa
xor
dec
aad
xor
fwait
sub
mov
or
sub
sbb
pushf
div
mov
mov
mov
inc
xor
rolb
push
adc
cmp
sahf
adc
imul
les
lock
popa
pop
lcall
sbb
push
and
aas
mov
out
inc
push
outsb
pop
dec
aaa
pop
push
add
inc
push
jo
add
push
xchg
in
add
adc
cmpsb
fscale
cmp
adc
xor
movsb
sbb
push
mov
out
pop
lahf
cmpsb
fwait
out
popa
cmp
jnp
in
fildl
mov
scas
lock
cmc
adc
or
inc
addr16
ds
adc
sub
jae
xchg
mov
arpl
sub
psubusw
dec
xchg
cmpl
push
fldenv
inc
push
loop
mov
insl
mov
jns
sbb
adc
pop
lahf
cmpsl
movl
or
cmovs
add
jb
aad
lcall
push
pop
and
fs
sbb
dec
xchg
repnz
xchg
mov
lods
fsubrl
push
test
repnz
ds
mov
sub
fmul
jecxz
jno
repz
push
shrl
add
mov
inc
stc
fstpl
rorb
or
in
into
add
fsubrs
mov
bound
rcl
lret
insl
call
insb
and
push
dec
xchg
orb
sbb
fwait
mov
and
mov
push
jns
xchg
cmp
stc
lds
push
mov
dec
repnz
shll
sub
inc
mov
stc
pop
mov
aas
sti
fldt
jmp
mov
cmp
scas
xchg
mov
and
and
jp
fabs
cltd
nop
cld
sub
mov
push
cmp
and
iret
push
xchg
jae
mov
incl
arpl
and
xchg
mov
ja
loopne
sbb
push
movsl
gs
mov
test
push
mov
mov
fistpll
lea
push
insl
cmp
pop
inc
cmp
add
and
mov
dec
jl
loope
sbb
mov
dec
rclb
and
or
test
out
adc
cwtl
inc
xor
and
movq
fcmovne
cmp
add
movsb
pop
dec
mov
jns
jo
jecxz
add
and
adc
mov
pop
imul
mov
movsl
mov
hlt
in
es
loop
mov
fstpl
inc
adc
das
mov
sbb
xchg
aaa
xchg
ljmp
fsub
test
ficoms
xor
inc
bound
loopne
or
cmp
xchg
lea
imul
ficomps
xchg
cmp
lcall
into
pusha
and
dec
adc
mov
into
jo
aaa
shll
inc
in
in
push
xor
insb
lret
cmc
ficomps
jp
sbb
push
jns
je
cmc
imull
jno
xchg
xchg
pop
and
push
inc
sbb
lea
or
into
divl
ss
lock
iret
incb
mov
insl
mov
adc
inc
and
mov
test
push
mov
movsl
stos
xchg
repz
push
rcll
pop
pop
jmp
frstor
lods
cmpsl
sti
gs
push
mov
xor
pushf
cwtl
mov
lea
xchg
cmpsb
orl
mov
cmp
scas
sbb
jnp
loope
pop
mov
inc
jle
adc
or
and
mov
popa
icebp
mov
repnz
es
loope
dec
cmp
ret
jno
jecxz
shlb
insb
adc
mov
lret
addr16
call
xchg
mov
movsl
in
in
pop
aas
xchg
pop
in
and
or
mov
mov
mov
std
sub
dec
clc
add
xor
add
add
fisttpll
mov
mov
movsl
pop
js
lods
xchg
movsl
ds
int
popf
iret
pusha
movsl
movsb
or
sbb
dec
aaa
shlb
fdivs
mov
push
pop
mov
sti
subl
ror
xor
cmp
outsb
ret
movsl
inc
loop
mov
push
xchg
or
add
add
cmp
mov
pusha
idivb
jge
das
mov
sub
adc
out
sub
and
xchg
rcll
mov
out
inc
sbb
stos
sbb
std
test
aam
mov
sub
ljmp
mov
adc
cs
mov
push
in
hlt
lret
mov
inc
fstl
jg
pusha
mov
sbbb
mov
xchg
push
jecxz
or
xor
ds
sub
adc
shll
sahf
push
addr16
mov
xchg
enter
xchg
pop
ljmp
adc
in
into
std
or
cmp
lods
xchg
mov
xchg
movsb
xor
test
jo
or
or
pop
cmc
movsb
xor
mov
out
dec
or
and
inc
or
jg
adc
fistpll
int3
jo
outsb
jg
inc
lret
pop
sahf
mov
xchg
push
jne
sbb
test
in
aam
es
xchg
loopne
subb
sbb
shl
repnz
imul
jg
and
inc
mov
ret
xor
sbb
and
stos
dec
out
mov
enter
mov
add
mov
jg
pop
shr
fwait
stos
sbb
stos
push
insb
addl
fsubs
pusha
aam
mov
out
adc
pop
cmpsb
sbb
jns
fmul
out
xchg
jle
ja
pop
push
sti
repz
outsl
ret
in
and
add
mov
fidivrl
fcomip
data16
add
sbb
or
mov
push
repz
insb
and
xchg
inc
pop
mov
jns
cmp
ret
pop
inc
or
loop
inc
enter
and
or
bound
xor
adc
sbb
stc
negb
pop
pop
fldt
call
sbb
mov
push
mov
cmp
push
loop
jae
daa
mov
mov
imull
sub
adc
mov
js
dec
cltd
jl
out
inc
fsubrs
lods
lret
addl
push
mov
pop
repz
data16
sarl
xchg
xchg
mov
loopne
sbb
mov
add
mov
movsb
pop
jo
faddl
pop
jb
je
mov
aaa
jle
in
xor
mov
jge
into
loope
cmc
cmp
dec
pop
sub
popa
loope
mov
ja
nop
dec
mov
mov
xor
cmpxchg
sbb
mov
loop
outsl
adc
jbe
push
std
fldt
xchg
mov
cmpsb
idiv
jno
int3
adc
imul
dec
inc
iret
mov
pop
pop
ss
mov
mov
push
and
wrmsr
xor
pushf
mov
fs
or
mov
and
aas
pop
out
mov
xor
pop
cwtl
xor
int
xor
int3
aas
add
mov
pop
fs
lahf
jmp
push
rcrl
sub
lcallw
pop
out
push
test
aas
dec
cld
ss
sub
cmp
mov
mov
mov
aaa
loopne
mov
pushf
dec
les
fcompl
gs
add
ljmp
push
and
pop
mov
rcll
cmp
xor
xchg
popa
pop
ja
loope
aam
mov
push
pop
add
dec
fcomps
mov
pusha
cmc
pop
push
sub
stc
adc
jge
aad
rcll
jnp
mov
sub
das
addb
add
jbe
rcll
lcall
dec
jecxz
xor
jno
cmp
and
ret
dec
push
in
adc
test
or
xchg
mov
jecxz
lock
imul
lret
scas
pop
pop
cltd
inc
dec
dec
fs
mov
cmp
jg
sbb
aad
mov
cld
sbb
mov
add
cmp
not
movsb
mov
dec
pop
stc
iret
decb
testb
call
iret
push
in
loope
and
jb
test
jbe
push
xor
adc
ljmp
pop
xchg
mov
mov
xor
mov
xor
adc
mov
adc
lock
popf
pop
lcall
xor
adc
xor
pusha
add
pop
out
sub
cmpsb
sbb
call
mov
fwait
push
inc
jns
lcall
jns
out
lcall
imul
xlat
cld
cmp
jmp
lcall
sub
jg
scas
xchg
leave
xchg
int
pusha
xchg
xchg
gs
fwait
es
jmp
xor
lahf
andl
sub
ficompl
mov
mov
movsl
fisttpl
js
mov
out
add
sub
xchg
or
fdivr
dec
stos
sbb
popa
adc
mov
sti
push
mov
int
les
inc
inc
sub
xchg
xchg
cmp
cs
add
negl
fwait
iret
ds
pusha
jmp
addr16
push
cmp
mov
add
pop
or
push
jl
loopne
and
jns
sub
adc
add
push
mov
fimuls
je
in
mov
mov
jnp
dec
push
cwtl
rcll
adc
cmp
mov
idivb
xchg
mov
mov
sti
push
jns
enter
mov
inc
fdivr
sbb
xchg
xchg
sbb
gs
lret
add
outsb
cmp
in
cmp
cmc
sub
loope
insb
popf
sub
nop
mov
xchg
mov
iret
inc
inc
xchg
in
xor
jecxz
test
int3
negl
movl
add
and
jmp
xchg
mov
sub
push
fcompl
xchg
cmp
cltd
out
notl
sub
pop
sbb
push
insb
rorb
add
testb
mov
inc
dec
sub
xor
addr16
sub
out
cwtl
cmp
lods
jne
jae
out
sub
mov
and
repz
jne
leave
cmpsl
sbbb
sbb
aad
push
jno
jb
mov
inc
jp
shll
push
lcall
bound
cmp
clc
int3
sub
adc
adc
call
sub
test
pusha
or
add
aad
or
mov
xchg
push
outsl
data16
int
lret
sbb
push
jnp
jnp
jmp
dec
out
dec
dec
ds
aaa
push
das
clc
ds
pop
subb
sbb
lret
cmp
push
ret
mov
les
jmp
jae
adc
je
mov
faddl
popf
jnp
call
clc
mov
pop
jecxz
jne
in
pop
cmp
loope
loopne
push
push
xchg
ja
xor
and
cmpsl
add
test
sbb
imul
jle
ja
pop
push
push
lea
out
arpl
pop
outsb
lock
xor
scas
cmpsl
pop
jmp
ljmp
sahf
cld
roll
mov
aaa
cld
lahf
push
pushf
movsl
call
mov
ret
ljmp
fdivl
xor
mov
notb
repz
or
xchg
insl
or
sbb
sbb
sbb
in
mov
test
lret
inc
shlb
or
jmp
mov
cmpsl
ret
aad
jge
and
inc
add
add
cmpsl
add
inc
shrb
xchg
sub
sub
sbb
aaa
mov
inc
mov
mov
arpl
xor
pushf
sub
scas
gs
out
mov
jnp
cltd
insb
icebp
push
cwtl
mov
xchg
pushf
mov
dec
push
xchg
ss
cmp
int
xchg
mov
out
stos
loopne
or
scas
jge
ret
mov
sbbb
stos
mov
inc
outsb
mov
push
lds
mov
inc
lds
btr
mov
mov
jecxz
pop
inc
or
sub
add
pop
mov
popf
jne
setae
pcmpeqw
and
and
insb
iret
or
mov
and
shrb
inc
fcmovbe
sub
imul
mov
sti
jg
jg
test
lret
idivl
adc
sub
sbb
andb
sub
mov
lret
mov
add
fs
cwtl
pop
sub
ja
sub
lret
pop
xchg
loope
lret
push
adc
pop
fdivs
jp
add
into
jmp
test
movb
pop
mov
cmpsb
cltd
xchg
aaa
lret
stc
ficomps
notb
gs
adc
jecxz
push
xchg
rolb
mov
aam
aam
insb
lret
cs
mov
and
jo
fisubl
push
pushf
jno
fs
push
xchg
jp
adc
xchg
push
mov
out
push
in
cltd
int
xchg
cwtl
cmp
je
push
pop
je
mov
dec
lds
jp
inc
rorl
inc
aas
movsb
push
mov
push
repnz
xor
jae
push
sbb
sub
mov
js
mov
ret
pop
stc
mov
pop
jmp
test
and
or
xor
add
test
sar
mov
subb
stos
or
nop
lret
sbb
adc
xchg
cmpsb
xchg
adc
pop
dec
movsl
xchg
mov
out
lock
mov
push
push
mov
xchg
push
lock
xor
bound
aaa
imul
jle
test
push
add
mov
and
mov
mov
rorl
test
adc
push
jb
test
mov
add
andl
test
outsb
call
xchg
add
cmp
insb
in
inc
xchg
pop
stos
test
lods
int
jl
lods
or
adc
dec
mov
adc
ljmp
popa
hlt
or
pop
in
outsl
mov
fwait
mov
leave
cs
mov
leave
and
out
adc
mull
jb
and
outsb
jl
cmp
push
aas
pusha
cld
loope
ret
mov
fcoms
hlt
mov
insl
adc
stos
cs
std
popf
clc
nop
scas
rep
add
lods
xchg
stc
lcall
sbb
jno
adc
jl
repz
xchg
push
outsl
es
incl
rorl
out
andb
stc
roll
in
jp
aam
aaa
adc
sub
addb
fists
sub
add
in
cltd
sbb
or
pop
push
mulb
or
inc
hlt
mov
jo
inc
cmpsl
mov
push
xchg
in
xchg
insl
repz
mov
add
jge
mov
movsl
cs
adc
jns
sub
ds
xor
cs
loopne
sub
cmpsl
pop
sub
pop
sbb
stos
aaa
push
jle
mov
jno
adc
bound
popf
xchg
nop
cmp
xor
xchg
push
mov
and
and
mov
mov
ret
repz
fcmovnbe
out
inc
test
imulb
inc
mov
lods
push
in
mov
aaa
icebp
xor
xchg
push
jge
fiadds
pop
jecxz
scas
add
stos
leave
and
cmp
or
adc
mov
ss
jbe
cpuid
push
mov
imul
and
out
mov
jno
out
sub
adc
scas
aam
sbb
mov
sbb
pop
xchg
mov
addb
add
repnz
inc
das
xor
xlat
mov
or
test
mov
iret
insl
xlat
jl
mov
outsl
push
aam
jge
insl
sub
subl
cwtl
inc
call
pop
sbb
cli
dec
inc
lahf
in
scas
bound
in
sub
cmc
add
jbe
ja
addr16
arpl
fcoms
dec
in
mov
in
out
mov
and
loopne
aaa
sbb
pop
or
add
pop
xor
cmp
iret
xor
into
js
mov
inc
push
mov
mov
jl
pop
imul
fwait
iret
lock
add
and
icebp
paddsw
jb
sub
xchg
shl
outsb
or
pop
fstpt
sar
add
ficomps
cmp
shlb
dec
pop
push
lods
adc
cmp
mov
and
push
test
dec
dec
pop
int3
xor
pop
jle
out
pop
lds
jecxz
popa
or
cwtl
mov
sub
add
mov
pop
dec
fsubl
inc
jno
fidivs
and
inc
mov
popa
jne
lret
push
inc
push
or
sbb
lret
test
push
inc
push
push
push
add
mov
lret
or
scas
push
xlat
mov
lods
outsl
imull
fsub
mov
xchg
outsb
iret
icebp
cmpsb
in
cmp
sbb
test
mov
fists
push
in
or
mov
xor
inc
orb
jl
out
popa
lcall
mov
enter
jl
sub
fisubs
int3
leave
gs
push
pop
aaa
inc
sbb
mov
outsl
repz
bound
aas
and
xchg
mov
and
lcall
call
imul
in
jb
mov
stc
ret
js
addr16
test
sub
mov
jmp
lcall
sbb
fiaddl
adcl
in
andl
int
test
pop
cmp
inc
jmp
push
dec
in
test
movsl
push
daa
jmp
pushf
cmpsl
loope
clc
in
pop
jb
rcrl
outsb
pop
mov
sbb
cs
nop
lret
scas
adcb
jno
js
jb
push
push
cmpsb
push
addr16
mov
movsb
xchg
fxch
jae
push
gs
inc
push
popa
xchg
repz
pop
pop
mov
jne
aam
aaa
nop
push
dec
xchg
data16
lret
push
pop
daa
dec
stc
mov
adc
push
adc
test
std
in
sbb
dec
loope
fcomip
dec
xchg
lret
int3
sub
xor
je
sbb
pop
dec
fidivl
inc
das
or
cmp
mov
popf
xchg
fwait
push
xor
jo
arpl
in
cmp
stos
fdivrs
cmp
scas
dec
inc
icebp
insb
dec
notl
push
daa
pop
out
lret
sbbb
aam
adc
mov
mov
sbb
repz
or
mov
in
jo
in
push
fisubl
pop
dec
popf
adc
pop
sbb
jns
mul
scas
pop
cmp
lods
daa
lea
fmull
jecxz
jno
mov
cltd
orl
ljmp
out
cmp
fcomp
jle
lahf
fstpl
sti
sbb
jp
mov
ret
movsb
inc
inc
lahf
mov
call
bndstx
ficomps
mov
add
mov
fwait
movsl
popa
mov
mov
push
sub
pop
ds
cmp
outsl
adc
mov
repz
sahf
bound
cld
data16
mov
add
xlat
ret
sbb
sbb
idivl
aad
bnd
in
push
mov
test
insl
popa
or
mov
mov
fnstcw
int
test
out
xchg
push
push
shll
inc
incl
stos
push
and
mov
jne
cmp
pop
sub
in
ret
fnstcw
and
or
jle
add
jmp
push
aas
and
mov
and
rorl
xchg
leave
jp
push
pusha
and
loopne
call
and
inc
xorl
xchg
jle
in
inc
in
lock
enter
xor
sbb
test
jae
cmc
cmp
dec
mov
mov
mov
outsb
sbb
push
pop
sarb
xchg
pop
stos
inc
orl
xchg
jg
lret
xor
mov
cltd
and
jb
fsts
mov
aaa
jne
out
in
fs
or
push
cwtl
icebp
jne
outsl
dec
test
mov
std
push
or
push
gs
pop
out
pop
xchg
je
test
cli
jae
pop
test
mov
mov
leave
cmp
lds
mov
mov
insb
in
ja
ret
aas
mov
push
add
leave
mov
dec
and
jle
mov
and
and
stos
jne
mov
test
cmc
xchg
pop
push
dec
movl
jo
mov
dec
es
mov
adc
cmp
and
je
and
fs
inc
movsb
fs
movsb
loop
out
cmpsl
leave
loop
sub
xchg
js
jmp
mov
dec
xor
fstps
imul
push
and
mov
xlat
lret
mov
xor
mov
pop
adc
xor
sbb
mov
int
dec
shll
in
push
stos
inc
cs
mov
adc
cmp
pushf
rcl
lcall
ljmp
push
clc
fwait
push
movsl
and
xchg
test
ret
sbb
mov
add
lea
xor
inc
inc
jo
mov
dec
or
das
push
and
test
dec
ret
pop
mov
pop
hlt
mov
dec
cwtl
cwtl
nop
cwtl
sbb
ficoms
inc
mov
lret
jmp
push
jne
and
xchg
movsl
and
adc
ret
mov
outsl
out
dec
je
addr16
and
enter
dec
jns
pusha
jbe
inc
cmpsb
and
or
sarb
jns
pop
mov
out
insl
jle
fdivrs
daa
dec
jbe
ja
pop
loop
nop
adc
les
lahf
in
outsb
and
shrl
mov
cmp
test
jle
and
mov
ret
jnp
pop
xor
lds
leave
cmp
cmc
pop
nop
shll
fucomi
je
mov
lret
mov
aaa
mov
stc
push
xor
xchg
fwait
outsl
inc
and
xor
test
mov
jns
xlat
mov
jg
push
jmp
and
movsl
incb
inc
jmp
cmp
sarl
test
fisubl
inc
dec
sub
xor
out
stos
fnstenv
push
lock
aad
repnz
cltd
lods
inc
ret
xchg
pop
cmp
cmp
mov
lds
imul
and
inc
lcall
mov
add
adc
test
push
and
fwait
subb
push
cmp
lods
or
jp
push
jge
stos
lods
xlat
push
loop
add
sar
iret
mov
sbb
cmpl
mov
out
mov
hlt
out
add
test
mov
loop
cmp
xor
movsl
inc
mov
pop
pop
lds
and
or
stc
lahf
subb
push
rorl
aam
cmpsb
xor
roll
jecxz
decl
ja
mov
jo
iret
insb
stc
and
mul
pop
mov
pusha
ret
gs
mov
xchg
aam
and
mov
dec
dec
xor
ja
sti
imul
xchg
pop
mov
mov
xor
popf
mul
dec
shl
out
and
outsb
movsb
adc
dec
and
std
add
jp
cmc
testb
scas
cmp
jo
and
xchg
jmp
sbb
cmp
sbb
pop
add
cltd
inc
or
rorb
xlat
rcr
mov
or
repz
int3
cs
jae
adc
icebp
iret
jge
test
ljmp
mov
pop
dec
jno
xchg
and
dec
mov
jg
je
repnz
push
addl
mov
cld
insl
cmp
push
pop
into
jno
cmp
lahf
sub
mov
jecxz
movsl
jmp
sbb
clc
ficomps
sub
jbe
and
push
mov
xchg
clc
dec
and
jmp
movsl
jecxz
loop
lea
jmp
inc
or
pop
xchg
mov
jae
in
jae
pop
popa
imul
jae
scas
push
lods
jns
dec
push
jbe
and
adc
xor
pop
and
jg
and
jle
sbb
in
jae
mov
and
sahf
and
sbb
jl
loope
xor
inc
ljmp
sub
std
add
mov
jno
mov
sub
rcl
xor
dec
mov
hlt
sbb
int
test
xchg
fsubrs
pop
lahf
xor
int
aaa
outsl
dec
inc
daa
jns
sbb
xchg
ds
push
dec
mov
fbld
inc
stos
fadds
fbstp
fiaddl
frstor
or
in
sub
inc
push
inc
ficoms
inc
faddl
push
mov
jno
in
mov
js
push
shlb
dec
ret
mov
enter
pop
inc
cmp
test
dec
cmpsb
popf
sbb
int
out
push
ret
insl
sti
mov
mov
mov
jge
push
cmc
mov
inc
jmp
sub
lcall
mov
andb
arpl
stos
leave
pusha
push
jbe
in
orb
jmp
data16
dec
push
sbb
out
nop
ss
pxor
in
arpl
xchg
mov
addb
scas
mov
scas
sub
mov
lahf
adc
cmp
push
daa
mov
in
sbb
test
cld
xchg
add
sahf
stc
xchg
popa
fdivr
test
adc
loope
pushw
jmp
xchg
cmp
mov
push
pop
jecxz
jle
and
mov
dec
arpl
dec
bswap
or
imul
aad
loop
imul
in
aam
jno
aas
xor
mov
das
aam
or
inc
test
push
sbb
lahf
pop
add
cmpsb
mov
scas
pop
jmp
mov
add
mov
repnz
lcall
xchg
andl
push
das
in
movl
sub
or
shlb
cltd
cmp
add
das
inc
pop
leave
imul
cmpsb
and
xchg
xor
dec
outsb
clc
ljmp
sub
cmp
cmp
in
xchg
out
sub
outsl
jb
addr16
ret
xor
jnp
cmc
adc
out
insl
sbb
orl
jo
aaa
push
or
xchg
lret
scas
ret
push
orl
mov
add
leave
test
ljmp
daa
imul
mov
ds
inc
clc
pushf
mov
test
cmp
aad
dec
cmp
gs
xchg
je
and
cltd
or
pop
adc
popf
loope
iret
cmp
mov
mov
pop
jle
jno
insl
loop
mov
out
in
mov
faddp
dec
out
repnz
dec
in
jne
cwtl
out
out
pushl
test
jge
fsub
sub
xor
lods
adc
mov
faddl
sarb
cmp
js
sbbb
sub
jae
push
fldenv
js
leave
push
mov
repz
sarl
dec
mov
out
mov
fmull
mov
movsl
jp
push
push
lea
fwait
sbb
dec
add
xchg
sbbb
outsb
add
pop
pop
test
rorb
dec
jl
repz
inc
xor
pusha
mov
pop
or
inc
sub
inc
cld
lret
fs
clc
pop
adc
mov
push
or
mov
pop
and
jle
pop
lcall
cmpsb
jmp
cmp
cwtl
inc
push
lret
cs
inc
pop
add
movsb
flds
incb
out
dec
scas
or
stos
data16
scas
stos
xor
fcoml
imul
fdivrs
xor
push
clc
or
sbb
or
ljmp
mov
addr16
push
jns
sbb
mov
test
xor
jmp
js
push
daa
loopne
aas
fcmovb
pop
inc
mov
data16
dec
sub
xor
pop
pop
cs
in
push
adc
dec
call
mov
or
sub
sarb
inc
mov
sbb
push
dec
out
fdiv
jg
push
in
xchg
sub
enter
xchg
mov
out
jb
add
test
jge,pn
stc
imul
jl
dec
scas
mov
adcb
sub
fisubs
mov
out
sbb
scas
out
shlb
pop
cld
xor
aad
hlt
push
faddl
aad
test
jo
jl
mov
stos
adc
mov
lcall
xor
imul
push
push
cmpsl
mov
xor
mov
fst
pop
push
aaa
addb
data16
dec
shrb
push
lods
enter
or
pop
add
roll
fmuls
test
fcomps
cwtl
inc
inc
sub
shrd
addl
leave
jo
xchg
outsl
mov
fwait
add
insb
push
dec
and
stos
mov
mov
dec
lret
add
jle
aaa
leave
mov
jno
divl
or
mov
pusha
test
arpl
pop
sub
push
and
lds
fcoml
dec
dec
loop
into
adc
or
inc
call
adc
sarb
fcomps
inc
rcl
mov
jne
nop
fld
imul
push
mov
lods
xor
xchg
jl
dec
jp
movsb
mov
pop
jnp
and
dec
adc
data16
mov
shl
imul
cmp
xchg
cmc
movsb
insl
les
jnp
loopne
sti
mov
popf
sub
push
pop
cs
mov
pop
inc
sub
push
lock
pop
data16
rcrl
shlb
insb
sub
negb
rcl
push
aam
movsl
fildl
lcall
int3
ret
ljmp
push
push
lret
imul
push
lods
jns
mov
sbbl
fmulp
iret
push
inc
inc
jno
mov
inc
dec
stos
jnp
push
mov
ss
movb
jl
add
mov
je
icebp
fistpl
adc
mov
or
test
mov
fs
call
mov
out
loope
aas
cmc
xchg
lods
mov
sahf
arpl
popa
ja
dec
and
test
fdivs
bound
adc
or
gs
sub
push
daa
xlat
nop
mov
rcr
inc
xor
jecxz
mov
jb
daa
out
sub
add
je
in
aad
aad
sti
mov
mov
sbb
adc
jb
jne
enter
movsb
adc
fwait
mov
in
jae
push
mov
sbb
inc
std
xor
mov
ror
jo
cltd
jp
xor
das
add
add
mov
and
popf
lret
sub
add
sbb
loope
mov
ljmp
cmp
or
add
adc
in
adc
repz
adc
dec
mov
inc
xor
xchg
inc
adcl
imul
push
lds
leave
inc
call
in
shr
xchg
mov
pop
cld
sbb
add
lock
mov
sub
repnz
sbb
xchg
adc
xor
cltd
xor
clc
andl
mov
and
mov
xchg
aam
and
mov
and
das
cmpsb
les
adcl
imul
out
xor
loope
mov
je
test
clc
jecxz
mov
into
clc
fsts
int3
clc
xor
roll
sbb
sbb
mov
push
xchg
pop
idiv
ljmp
dec
mov
cmc
outsb
sti
xor
inc
or
jmp
lock
jle
sub
xor
push
hlt
in
scas
ret
test
pop
pop
adc
xor
out
mov
cmp
in
out
sub
gs
mov
ja
adc
outsl
push
jge
sahf
jb
mov
pop
stos
and
nop
xchg
pop
push
mov
sub
xor
add
mov
jg
mov
mov
add
push
push
imul
aas
mov
pop
in
xor
jl
mov
int3
lahf
sub
and
pop
adc
stos
push
sub
lret
jb
stc
out
in
addr16
push
repz
lods
js
imull
loopne
movsl
lea
stos
push
sahf
icebp
gs
jb
mov
adc
rcrl
xchg
inc
adc
shlb
repnz
mov
movsb
test
jmp
clc
add
fistpl
adc
movsl
dec
mov
inc
ficompl
jge
xchg
aad
icebp
inc
push
push
and
push
sbb
xchg
data16
mov
fcompl
das
cmc
dec
sub
xor
cld
and
mov
int
fldcw
push
xor
fdivr
inc
and
rorb
ja
pop
pushf
vsubpd
or
sub
les
aaa
push
cltd
dec
pop
push
adc
xor
dec
lahf
add
int3
scas
adc
fcompl
inc
dec
dec
shll
repnz
adc
jne
clc
call
in
jns
xchg
cwtl
adc
rcl
fs
adc
cwtl
jbe
push
pop
fistpll
jnp
int3
fidivl
nop
sub
and
push
pushf
mov
mov
shrb
push
adc
scas
ret
lcall
aad
sahf
cli
ljmp
mov
inc
cmp
mov
scas
lea
test
xlat
mov
bnd
lret
dec
adc
adcl
rcl
test
push
cmp
test
mov
popa
and
jp
push
push
dec
or
inc
lods
in
and
rolb
push
xor
xlat
mov
rcll
sti
lahf
and
cltd
std
leave
pop
sbb
mov
mov
mov
stc
dec
dec
leave
xchg
das
jl
dec
xor
add
in
test
mov
mov
iret
xchg
sti
or
fs
sbbb
mov
adc
jl
cmpsl
sub
add
fwait
or
loope
mov
push
pinsrw
xor
push
push
les
das
jp
notb
adc
xchg
cmc
inc
xlat
adc
xchg
or
mov
mov
nop
jle
loope
cs
pushf
pushf
pop
testl
lcall
push
ja
dec
ljmp
fistpl
mov
cwtl
sub
push
cltd
mov
rorl
test
adc
push
insb
pop
mov
or
jnp
pop
xor
cmp
clc
adc
scas
pop
and
mov
push
jmp
aad
gs
mov
mov
pop
mov
xchg
inc
fdivs
jg
xor
cmpsb
push
cltd
adc
stos
jmp
sub
or
jecxz
or
stos
dec
xchg
scas
pushf
iret
pop
adc
push
repnz
out
rcrl
scas
pop
push
adc
fs
pushf
sahf
sahf
adc
test
xor
dec
int
fimuls
mov
and
pop
mov
lahf
or
or
lods
and
les
loop
stos
or
mov
and
push
shll
mov
sub
jle
je
fucompp
cmp
mov
push
pop
fcmove
xchg
lret
xchg
popf
divb
pop
cmp
test
adc
cwtl
lea
dec
in
jb
scas
sbb
sbb
xchg
sahf
idivl
mov
mov
outsb
push
in
imul
jp
pusha
test
lods
dec
jp
mov
or
sub
cmp
pop
sbb
pop
or
fiadds
add
imul
mov
jl
cmc
xchg
fmull
inc
xchg
mov
or
xchg
sbb
or
mov
rcr
mov
mov
add
xchg
and
or
adc
push
fdivrl
jns
cmp
mov
es
jo
ljmp
and
aam
or
das
inc
xor
mov
aas
and
repnz
hlt
push
fwait
inc
mov
daa
xor
lea
xor
test
cli
hlt
pop
or
and
lds
lcall
andb
test
pushf
add
call
sbb
cmpsb
fisubs
sbbb
xorl
sub
popf
in
pushf
mov
lods
push
mov
fsubrl
data16
jbe
in
or
rclb
es
jle
jb
pushf
or
mov
sti
faddl
cld
popa
mov
cltd
mov
add
xchg
repnz
lds
jecxz
cmp
stos
mov
jb
push
and
xor
adc
int
movsl
dec
xlat
mov
push
mov
subl
mov
movsb
orb
adc
jne
rcll
addl
repnz
pop
cwtl
sbb
dec
lcall
xchg
jg
test
inc
inc
sbb
cmp
push
call
xchg
lret
and
xchg
lds
cmp
sahf
xlat
or
sub
cli
push
mov
call
xchg
push
jno
mov
push
push
push
pop
mov
cwtl
pop
pop
mov
orl
in
repz
pop
add
add
jecxz
test
bswap
dec
mov
sub
xchg
mov
daa
sub
mov
mov
push
mov
sbb
cmpsl
push
adc
into
cmpsl
inc
outsl
xchg
cmp
or
fistps
ljmp
shl
fdivrp
jp
flds
ficoms
xchg
inc
pusha
sbb
ss
loopne
add
test
call
jne
pop
fmull
clc
adc
insb
in
pop
dec
add
or
push
das
int3
orl
mov
mov
push
mov
dec
inc
sti
xlat
lret
roll
mov
sub
inc
mov
xchg
xchg
jno
stos
arpl
dec
cmp
pusha
pop
push
int3
inc
clc
sbb
sub
ds
std
and
xchg
enter
sub
lea
iret
aad
lds
pop
add
jp
jmp
push
pushf
jo
add
je
mov
scas
xor
test
push
add
mov
scas
and
mov
shlb
mov
lods
xchg
dec
movsb
hlt
push
adc
mov
rorl
test
sti
ret
mov
cmpsb
xor
adc
cmpsl
xchg
rolb
fs
push
inc
and
pop
push
lea
clc
or
cmp
xchg
mov
push
mov
pop
imul
inc
push
sbb
or
aad
lahf
ret
inc
dec
sti
push
jle
adc
jns
test
cmp
movsl
push
pop
jae
mov
icebp
mov
xchg
int3
in
popf
mov
xor
cmpsl
mov
sbb
sbb
dec
xor
sub
rcrl
pop
cmp
sbb
mov
inc
mov
lea
insb
inc
jmp
lods
add
sub
scas
jl,pt
cmp
push
scas
insl
sbb
pusha
mov
je
push
sub
jecxz
into
mov
sti
es
test
mov
and
in
cld
xlat
out
repz
pop
aas
cmp
push
ss
mov
and
sub
add
lds
mov
in
mov
push
shrl
int
ret
mov
sbb
and
inc
not
add
add
out
pop
cmc
pusha
ja
jnp
add
jg
xchg
sbb
outsb
nop
push
lods
push
push
lock
add
mov
xchg
add
xchg
iret
enter
stc
dec
adc
lcall
pop
scas
push
jb
push
mov
sbb
cmp
jle
popf
dec
push
and
or
push
jb
mov
leave
adc
push
mov
xchg
or
mov
or
fnstenv
sarl
push
shrb
movsl
pop
popa
mov
mov
add
aam
xchg
cwtl
or
mov
ss
cmp
inc
hlt
push
adc
inc
pop
icebp
lcall
add
sahf
xor
or
inc
out
jle
xchg
sbb
cmp
ds
hlt
loop
xchg
sub
fmuls
add
arpl
lds
stos
movsl
ficoms
iret
jmp
push
lret
jmp
add
rcrb
pop
iret
imul
iret
cmpsl
pop
mov
or
or
into
push
cmp
add
xor
jnp
aad
popa
dec
sbb
xlat
call
rcrb
mov
push
out
popf
daa
test
mov
or
cmp
lcall
arpl
fs
cmpsl
stos
add
mov
mov
or
sub
push
push
jle
xchg
mov
fldl
test
mov
lcall
xchg
mov
inc
and
mov
mov
fsubrs
push
push
scas
adc
enter
jl
sbb
inc
stos
add
iret
xchg
add
adc
sub
mov
cmp
push
pop
out
pop
leave
xor
imul
fwait
mov
dec
pop
or
in
cmp
fs
sbb
cltd
xchg
mov
ret
push
jnp
scas
bound
stos
adcl
sub
test
mov
sub
pop
cld
loopne
jne
out
roll
mov
mov
add
out
jae
adc
cwtl
pop
sbb
cli
ss
mov
mov
jge
push
mov
shl
xchg
push
push
jbe
addr16
mov
scas
fwait
cmpsb
int
lcall
shrl
ror
jae
fs
push
or
sub
loope
enter
inc
xlat
ret
pop
popf
bound
mov
clc
sbbl
pop
cwtl
adc
test
xchg
out
inc
jb
cmp
inc
rorl
test
fwait
mov
mov
and
mov
andnps
aam
mov
jb
dec
sbb
das
adc
xchg
push
sbb
inc
aaa
sub
aam
imul
xchg
cmc
jecxz
into
shll
imul
sub
sbb
push
repz
jae
loopne
sbb
mov
in
mov
stc
leave
dec
jge
push
adc
mov
ja
aaa
inc
sti
cs
sub
mov
call
sbb
xor
ret
mov
fmulp
pop
dec
arpl
pop
mov
lcall
ss
add
pop
xchg
jbe
sub
ja
xchg
loop
in
push
xchg
jg
mov
arpl
mov
xchg
rorb
xchg
stos
push
cmpxchg
push
lods
add
cmp
cmpl
mov
jnp
fnstenv
call
mov
and
adcb
fstl
sti
imul
popf
outsb
mov
push
bound
scas
push
jg
inc
xor
xchg
sub
fwait
and
adc
sub
jge
in
sub
push
scas
sub
test
shrd
dec
fcmove
push
xor
movsb
insl
mov
and
pop
mov
inc
add
test
lcall
push
and
dec
idivl
loope
mov
mov
and
push
mov
mov
cli
nop
xor
push
pushl
add
ja
and
jmp
xchg
lahf
or
repz
pop
push
adc
adc
jecxz
ret
aaa
jp
or
mov
dec
and
jb
nop
inc
mov
leave
mov
pop
push
pop
fdivrp
cwtl
stc
xor
dec
stos
fcom
add
dec
popa
idivb
add
xchg
mov
cmp
xchg
hlt
enter
in
mov
int3
popa
ret
add
mov
add
gs
mov
cmpsb
push
jns
leave
mov
sub
dec
mov
and
nop
xlat
sub
xor
add
cmc
xlat
xchg
test
adc
aas
jle
loopne
push
and
mov
aam
sub
or
pop
rorb
mov
lret
test
dec
or
sub
sbbl
xor
mov
pop
lods
cmp
push
adc
hlt
or
cwtl
nop
push
scas
in
cmpsb
jl
stos
mov
mov
cmp
or
cmpsl
inc
pop
je
mov
mov
cmp
rcrb
lret
lret
xlat
dec
or
in
jmp
pop
lret
pop
iret
and
popf
mov
push
aas
popf
pop
or
inc
add
dec
loopne
test
dec
hlt
addl
inc
mov
int
or
rcl
mov
add
cli
mov
test
cmpsb
in
push
stos
addb
xchg
xor
dec
push
je
aas
ss
hlt
push
ljmp
leave
out
jmp
imul
jne
inc
xchg
rclb
or
into
xchg
jmp
cmp
mov
xor
out
bound
int3
shll
imul
jbe
std
mov
jg
add
test
jle
fadds
add
adc
push
dec
in
xor
test
cmpsl
jns
ret
shll
testl
pop
sub
cmp
xchg
inc
mov
loope
jne
xchg
loopne
jge
cmp
out
nop
int3
mov
mov
iret
jl
aam
or
out
aam
cli
call
adc
pop
and
daa
inc
popa
pusha
cmp
push
mov
pusha
fimuls
lcall
ret
add
outsl
data16
repnz
sbb
loop
pop
fcomps
or
or
cmp
xor
ss
int
xchg
int
inc
int
add
jnp
mov
push
and
sub
mov
jge
sbbl
xor
mov
js
rcrb
sub
mov
loopne
mov
cmp
repnz
je
inc
into
sahf
mov
mov
mov
cmp
hlt
inc
rorb
xor
pop
adc
faddl
and
mov
lretw
inc
push
scas
mov
testb
lds
pop
adc
mov
es
mov
xor
pop
out
jae
aas
inc
mov
std
shl
mov
sbb
xchg
outsl
repnz
lods
divb
ret
roll
push
dec
in
adc
sbbb
repnz
pop
cmp
xchg
movsl
pop
popa
shlb
pop
xor
cmp
decl
scas
add
sub
adc
or
adcl
sub
xchg
dec
push
jle
pop
js
mov
adc
mov
dec
cli
add
pop
lahf
push
jne
push
adc
mov
sbb
popf
mov
sub
sbb
cmp
test
mov
repnz
jae
xor
clc
or
add
sar
decl
imul
dec
pop
push
add
jl
xchg
stos
xchg
mov
es
add
cwtl
ret
pushf
xorl
cmpsl
leave
popf
push
fimuls
jne
test
mov
sbb
mov
and
ljmp
push
dec
jmp
xor
cwtl
mov
push
sub
stos
jmp
shl
cmp
mov
push
push
adc
popl
shll
adc
out
scas
push
and
pop
lock
cmp
sbb
push
and
stc
cmp
mov
xchg
sbb
ljmp
addb
inc
lods
out
imul
or
jae
mov
mov
inc
insb
stc
pop
jl
and
in
pop
lahf
adc
inc
aaa
incb
sub
mov
enter
push
xchg
xchg
jo
outsb
test
je
push
mov
mul
loop
fcomps
add
mov
jno
aad
in
xor
ret
rcll
cmp
orl
ja
int
mov
sbbb
jp
jmp
mov
scas
lret
dec
scas
cli
fs
pop
movsl
sbb
sti
or
pop
sbb
mov
cwtl
icebp
jle
sahf
xchg
inc
mov
jno
mov
pop
mov
cld
mov
mov
jp
insl
inc
pop
insl
inc
jl
jb
sub
mov
sbb
sti
sub
addr16
and
push
ja
and
push
loopne
in
ret
mov
insl
loope
imul
cmp
mov
repnz
fcoms
in
insb
mov
lds
jl
sti
push
inc
pop
dec
fldcw
sbb
inc
xchg
lock
popf
test
popf
or
loopne
stos
cmp
in
mov
and
mov
jecxz
xor
lea
jmp
dec
movsl
cwtl
jl
mov
inc
movl
out
or
xor
aam
mov
jnp
shr
es
jmp
dec
adc
movsl
das
pop
test
mov
and
inc
lea
inc
out
lret
dec
inc
adc
insb
push
add
and
repnz
stos
out
add
mov
xchg
mov
jae
jb
fsub
mov
push
xor
dec
jecxz
scas
dec
mov
nop
insb
sbb
loopew
inc
push
jbe
sahf
orb
test
mov
into
std
insl
and
jp
jne
andb
xor
ja
add
imul
js
dec
mov
push
and
push
push
hlt
andb
leave
aad
xor
cmpsb
fisubrl
mul
or
add
lahf
mov
ds
mov
push
inc
fucom
mov
jmp
xchg
fcoms
imul
jle
outsb
add
imul
jg
fwait
and
loop
jno
pusha
push
out
jl
cwtl
or
adc
adc
int
pop
stos
push
incl
les
jmp
ljmp
popa
jo
testb
jg
xor
pop
sbb
jecxz
icebp
notb
or
rorl
notl
inc
sub
jae
xchg
fwait
test
insb
adc
shl
repnz
xchg
cmp
out
push
mov
ja
cli
daa
mov
call
xlat
lret
cli
jl
loope
arpl
cmpsb
dec
mov
dec
push
ljmp
cld
xor
test
mov
push
jnp
int
mov
jbe,pt
int3
dec
sarl
add
and
jmp
fsubrs
pop
iret
in
icebp
xchg
cltd
andl
nop
mov
imul
lods
mov
or
cmp
arpl
xor
mov
iret
ja
adc
movsb
lcall
pop
adc
aam
dec
add
es
cmc
push
cmp
cmpsb
incb
mov
mov
pop
push
aaa
lcall
cmp
loop
fwait
sub
jae
jbe
jecxz
sub
dec
or
jnp
jo
int3
leave
add
mov
dec
jg
stos
enter
out
fstl
je
jo
decl
mov
insb
sub
mov
out
repnz
cmpsb
mov
xor
cmp
pop
int
mov
jg
jecxz
adc
or
in
dec
ret
daa
xchg
mov
fcmovnbe
cltd
push
add
fsubrl
mov
mov
lret
repz
insb
sub
adc
addr16
cmp
imul
dec
jl
xchg
jp
stc
mov
jb
rcr
xchg
lcall
mov
shll
ds
pop
xor
scas
xchg
rcrl
or
inc
call
out
punpckhwd
push
add
dec
jl
and
movsb
mov
mov
hlt
in
jb
lahf
sbb
in
dec
push
pop
inc
ret
ljmp
mov
mov
push
dec
xchg
sti
mov
testl
popa
int
popa
fildl
sub
xchg
hlt
mov
inc
int
xchg
sbb
out
sti
cmp
mov
fwait
imul
xchg
iret
jns
shrb
xor
push
or
xor
adc
inc
enter
lret
mov
xor
or
leave
divl
push
mov
sbb
jno
data16
mov
aas
outsl
dec
xchg
shl
ds
stc
pop
cmp
mov
in
stos
adc
andl
cmp
lds
mov
pop
mov
sahf
lcall
lea
dec
adc
cmpsl
out
jg
out
lock
les
pop
push
jo
aaa
es
jns
popf
cmp
adc
pop
xor
pop
dec
or
push
iret
add
outsl
gs
sbb
jg,pt
mov
push
cmpsb
loop
mov
push
ss
push
pop
cltd
mov
mov
adc
imul
mov
rcrb
pop
fwait
stos
iret
in
or
or
stos
outsl
inc
cs
jnp
xor
mov
cmp
mov
int
in
xor
mov
add
add
push
adc
loopne
in
ss
movsl
int
push
jbe
inc
jmp
or
clc
lret
sbb
sbbb
ljmp
mov
clc
repnz
or
in
or
lock
add
pop
push
sub
psubsw
mov
pop
mov
daa
xor
insl
sbb
adc
jmp
push
xchg
pusha
loopne
inc
mov
movsb
mov
jg
outsb
pusha
mov
cli
nop
daa
push
rcrl
outsl
or
das
xor
cmp
push
test
popf
xchg
and
mov
fldenv
xchg
xlat
mov
sbb
or
fimull
xchg
jmp
dec
rol
and
in
inc
xchg
mov
xchg
ljmp
in
psraw
push
push
leave
fildll
popf
cwtl
addr16
mov
fcmovnb
rcr
test
imulb
flds
sub
pusha
sbb
pop
ror
jb
add
scas
mov
add
in
fiaddl
and
add
adc
in
sub
sub
icebp
dec
xor
inc
ja
adc
mov
jle
mov
push
decb
inc
inc
jmp
fucom
sbb
loopne
mov
mov
cmc
imul
dec
push
hlt
jnp
xlat
adc
or
mov
lret
push
xlat
or
push
cmpsb
clc
fstl
xor
mov
xchg
lret
fstpl
push
out
jmp
stos
lock
pop
addl
fwait
push
or
ds
daa
mov
lret
rep
or
int
orb
jb
clc
add
xor
sub
shll
sets
scas
xor
pop
test
sar
int
aam
mov
and
sbb
xor
mov
push
out
push
sti
mov
add
outsl
out
data16
inc
jl
pop
repz
xor
mov
push
ret
cld
add
pop
push
and
dec
stos
add
ret
push
bound
inc
aad
and
dec
test
lds
jbe
and
and
cmp
push
xor
mov
mov
cmpsb
imul
pop
add
and
insl
jl
cltd
loope
mov
pop
les
sub
jns
and
sbb
dec
cli
add
hlt
mov
outsb
sub
xorb
xor
inc
inc
lcall
jnp
sahf
gs
in
leave
cld
sbb
push
movsl
popf
pop
inc
sub
dec
sti
xchg
pop
xor
and
movsl
push
push
arpl
sbbl
popl
fbld
xchg
jecxz
adc
out
xchg
arpl
fsubrl
jo
push
push
fildl
ja
fs
out
je
jno
xchg
add
xor
push
jl
pop
cmp
mov
scas
adc
jp
mov
and
dec
and
or
and
xchg
rorb
xor
push
inc
push
lcall
imul
pop
scas
push
xlat
cmc
push
shll
sbb
lcall
xchg
and
jg
ficompl
inc
jg
or
fwait
jg
mov
sbb
daa
ffreep
call
repnz
push
icebp
mov
or
out
outsl
bound
push
iret
or
xchg
negb
mov
mov
and
pop
xchg
jle
push
pop
fcomps
mov
xlat
aad
std
outsb
or
fmul
and
xlat
out
inc
lret
jg
and
push
lock
hlt
xchg
add
sahf
stc
sbb
mov
flds
xor
stos
mov
or
push
in
outsl
xor
and
je
leave
jae
mov
mov
cld
and
mov
jnp
ja
in
lcall
push
movsl
fmuls
sub
out
push
shll
sarl
xor
xchg
sub
ja
mov
xor
xor
pop
sbb
xor
sub
arpl
out
fcomps
xchg
pop
mov
cld
adc
int
test
stos
leave
cmp
push
xchg
mov
mov
nop
pushf
mov
mov
test
adc
and
icebp
xor
out
cs
jecxz
in
lret
mov
mov
sahf
icebp
out
fsubl
dec
shlb
ret
cmpsb
and
and
push
lds
pop
iret
sbb
loopne
or
mov
cmp
enter
lahf
jmp
daa
in
pusha
shl
cwtl
jo
stos
inc
pop
sbb
mov
inc
and
fcoms
hlt
xchg
cmc
sbb
xor
adcl
jge
xchg
cmp
std
stos
fbld
xor
not
mov
ds
sbb
pop
fucomip
rclb
sti
mov
in
pop
bound
filds
adc
lods
ja
inc
jae
stos
dec
sub
lret
enter
test
cltd
mov
mov
sub
shrl
subl
inc
fldln2
mov
adc
mov
shl
shr
int
aas
dec
test
inc
xchg
sub
loope
adcl
pop
ja
pop
test
jns
sbbb
lock
lds
out
and
outsb
in
imul
je
fnstcw
dec
sbb
pop
out
adc
cs
call
nop
add
cmpsl
or
add
mov
xor
mov
xchg
fldt
xor
inc
in
or
sbbl
pop
aaa
mov
push
mov
mov
jecxz
pop
push
push
push
outsb
ds
add
outsl
ret
cli
lea
xchg
ret
cmp
fistpl
fildl
push
lods
cltd
test
jmp
jnp
icebp
adc
vpshufd
sbb
xor
sbb
dec
sahf
pop
jl
sbb
xchg
insl
int
pop
push
pop
mov
int
dec
mov
mov
rcrl
mov
xor
or
test
lahf
int3
in
call
test
jnp
rcr
cld
dec
mov
test
repz
sbb
xor
mov
inc
or
cmpsb
add
mov
addb
pop
lods
icebp
aas
out
int
into
in
jae
jmp
and
fsts
add
push
inc
mov
out
lock
insb
cmp
rcll
les
out
xor
ret
jns
iret
jae
mov
inc
cmp
mov
push
mov
iret
popf
fcoml
pop
int3
test
loop
mov
lret
fcompl
mov
pop
mov
int3
mov
push
mov
mov
jno
out
pop
imul
jle
jo
cmp
and
inc
jo
or
orl
inc
popf
rolb
dec
dec
pusha
js
mov
push
pop
je
fwait
jl
cmpsl
orb
mov
imul
pop
mov
inc
sbb
or
js
mov
pop
pushw
insl
test
mov
out
stos
mov
jecxz
adc
nop
je
mov
repnz
inc
inc
scas
ficomps
sbb
out
sbbb
dec
sub
rorb
sub
xor
jb
jl
loopne
push
je
jge
jnp
test
in
mov
xchg
add
test
push
push
or
scas
mov
mov
sub
xchg
aaa
cmpsb
outsl
insl
xor
xchg
out
fmuls
fcom
xchg
in
push
sbb
clc
mov
out
and
scas
sub
ljmp
imul
cmpsl
jmp
xor
cmp
lock
and
jbe
and
loope
aam
ja
subb
add
xchg
popa
xchg
fiadds
movsl
jo
pop
sub
pop
add
mov
cmpsb
cwtl
mov
adc
ret
mov
outsl
call
bound
nop
pop
pusha
outsl
jne
cs
pop
push
gs
jnp
dec
sub
mov
frstor
cwtl
sbb
mov
push
mov
mov
or
decb
jp
mov
cwtl
or
fiaddl
pusha
jge
pop
push
mov
mov
dec
hlt
adc
enter
or
and
mov
sbb
insl
ret
dec
pop
lcall
in
mov
push
xor
les
cmp
cs
mov
sub
les
jge
push
roll
mov
pop
push
pusha
mov
adc
ljmp
loope
ds
pop
js
sahf
mov
aaa
cmc
or
mov
imul
lds
xor
fwait
test
lods
cmp
jecxz
cmpb
movsb
mov
arpl
pusha
mov
add
fsts
xchg
arpl
add
popf
out
dec
dec
pop
clc
sbbl
push
mov
int
lahf
inc
adc
and
fisubrs
pusha
out
fldl
jmp
dec
sahf
dec
mov
fnstcw
mov
pop
rorl
mov
inc
scas
aam
sarl
stc
mov
xchg
jae
cs
enter
aad
push
and
jne
fwait
in
mov
jns
pop
dec
lcall
mov
push
ss
or
test
adc
push
sub
data16
clc
mov
xchg
mov
shll
rcrl
sahf
xchg
test
xchg
push
and
es
in
data16
in
sbb
xchg
add
mov
imul
cmp
scas
xchg
mov
inc
sbb
pop
lds
out
mov
mov
sub
mov
int
jmp
lods
jns
shrb
pop
bound
add
dec
cmpsl
pop
out
pop
jl
out
loop
lods
inc
into
xchg
jbe
std
nop
add
les
cmp
adc
xor
or
cmp
mov
pop
pop
inc
addr16
scas
rorl
das
cmpsb
mov
mov
clc
sub
pop
loop
scas
pushf
iret
or
xchg
frstor
push
jmp
mov
test
rcr
xlat
and
mov
repnz
test
fadd
cmp
jo
pop
push
inc
aas
jb
dec
mov
push
aad
sub
adc
pop
or
mov
cmpsb
stc
aad
xor
mov
jle
mov
ss
icebp
push
jno
dec
xchg
inc
rcrb
pop
stos
adc
adc
pusha
sbb
mov
test
xchg
push
clc
popa
in
xor
mov
lret
sub
xor
or
push
sub
sbb
cwtl
dec
enter
andb
sub
rol
je
mov
mov
loope
nop
adc
dec
movsb
lahf
push
adc
lret
int
jb
sbb
pop
das
loopne
fwait
push
sti
adcl
popa
push
pop
mov
add
and
cwtl
or
jge
dec
xor
or
mov
movsl
mov
repnz
push
call
cmp
push
mov
les
clc
fcomps
cli
push
mov
mov
jnp
ret
add
lahf
lret
jmp
pop
xlat
push
cli
sbb
jmp
push
shlb
xchg
pushf
daa
insl
test
xchg
or
dec
jmp
inc
dec
xor
inc
aas
add
arpl
push
stc
imul
add
mov
shl
in
rcll
mov
sub
mov
daa
outsb
pop
sbb
xchg
movsl
jmp
xor
pop
push
sbb
inc
xor
add
loop
out
pop
fisttps
fnsave
cmc
xor
mull
jg
cli
out
les
lock
ficomps
mov
into
sbb
fisubs
lret
jp
sbb
dec
xor
outsb
cltd
or
enter
xor
jmp
xchg
aaa
unpcklps
decb
lods
fwait
add
xchg
lods
adc
js
xchg
pop
mov
ret
iret
mov
xchg
lahf
sarb
adc
mov
mov
or
inc
leave
rclb
int
loop
in
add
add
adc
add
imul
gs
add
pop
leave
jo
popf
cmp
in
sti
or
imul
js
cmp
data16
aaa
fwait
lahf
inc
jb
push
cmp
lfs
jecxz,pt
clc
pop
movsb
adc
sbb
lcall
dec
inc
scas
insl
fisubrs
xor
mov
or
fwait
inc
int3
in
mov
insl
xor
out
ret
stos
pop
and
ja
mov
rorl
mov
jne
rorl
cmp
jp
push
test
push
xchg
cmpsb
imul
and
mov
not
sbb
fwait
inc
pop
inc
stos
icebp
jmp
inc
testl
inc
inc
js
repz
adc
mov
mov
xchg
mov
pop
inc
pop
js
and
test
mov
push
add
mov
adc
inc
xchg
mov
cmp
cmp
lds
shll
mov
arpl
out
cmpl
pop
fldcw
mov
or
call
outsl
ret
movsl
lret
jb
decl
inc
inc
mov
mov
or
loope
bound
mov
test
dec
andl
jno
test
or
mov
aad
mov
mov
mov
push
aad
aaa
sbb
jp
js
push
xchg
and
stos
scas
mov
out
das
addb
mov
hlt
pushf
sub
push
xchg
mov
fdivl
xor
daa
mov
cmp
call
jnp
and
rcr
negl
movups
mov
xchg
into
jge
lret
xchg
lcall
stos
mov
gs
subb
pop
ret
fucom
imul
cwtl
sbb
adc
sbb
jbe
out
adcb
inc
cmp
sbb
sub
sahf
xchg
aas
xchg
sti
jbe
or
sub
jecxz
pop
loope
lock
add
and
movsb
fsub
mov
lock
daa
adc
sbb
inc
mov
loope
outsb
adc
push
rclb
cmc
repz
xor
les
fildl
or
mov
xchg
or
dec
shl
and
lret
rcrb
xor
scas
add
in
popf
scas
inc
popf
cmpsl
xchg
lds
dec
sbb
gs
xchg
lret
xor
test
dec
jo
iret
adc
mov
cli
icebp
gs
mov
js
cli
push
ljmp
mov
test
adc
push
mov
int3
aad
out
xchg
sahf
sahf
pop
repnz
xor
cltd
loop
cmp
push
sarl
in
clc
shrl
add
jb
mov
sbb
in
divl
or
dec
shlb
out
jns
fists
fcomip
mov
lret
mov
jmp
iret
aaa
test
insl
mov
iret
je
xor
movsb
jg
enter
enter
inc
cmp
subb
clc
pop
mov
jnp
fistpll
dec
and
fmuls
xlat
stc
mov
cs
stos
xchg
and
and
and
loope
cltd
scas
shll
aas
gs
ficomps
out
inc
push
jnp
or
fwait
mov
js
adcb
andl
jno
cwtl
sbbb
pop
xor
repnz
addb
ret
and
or
movsl
and
sbb
into
mov
push
push
shrl
repz
jae
xor
stos
mov
push
movsl
ret
aas
scas
jo
jo
inc
add
xor
fists
cltd
lods
scas
arpl
adc
inc
xor
jo
hlt
jae
fsubp
in
xor
or
mov
mov
xlat
cmpl
and
scas
test
inc
sub
test
xorl
jmp
ret
sahf
je
arpl
or
enter
push
jnp
push
cmp
hlt
pop
jnp
clc
les
add
add
inc
cmpsb
and
sbb
test
shll
sub
dec
iret
nop
xor
testl
or
addr16
jns
shlb
or
push
adc
or
cmp
add
aad
or
jb
mov
mov
xor
arpl
pop
loop
lock
movsl
pop
pop
pop
das
rorl
js
test
enter
bound
xchg
sub
outsb
xor
dec
ret
notb
scas
cmp
sbb
mov
lret
sbb
mov
in
arpl
dec
imul
dec
inc
mov
cmp
lock
cmp
jle
push
dec
mov
cwtl
scas
jns
xor
mov
movsl
sub
pop
xlat
sbb
mov
pop
xchg
jb
pop
cli
mov
incl
xor
nop
or
dec
adc
emms
movsl
jp
dec
pop
jp
xstore-rng
cmpsl
rorl
add
ret
add
jl
push
int
das
cltd
test
ficomps
push
pop
pop
add
es
mov
inc
and
jle
mov
in
cmp
idiv
dec
lcall
jne
sbb
xor
jae,pt
jbe
jno
xchg
xchg
and
sbb
jmp
inc
js
mov
andl
adc
push
mov
cmp
rcrl
hlt
and
mov
adc
scas
mov
shr
imul
cmp
leave
push
jnp
ds
enter
mov
xchg
inc
loope
adc
data16
xchg
scas
dec
insb
dec
into
fs
push
pushf
pop
dec
es
mov
fucomi
add
xchg
ja
xabort
lcall
jg
pop
ds
inc
dec
inc
or
lret
f2xm1
cmpsl
sbb
in
add
ds
shl
outsl
lahf
dec
scas
sub
repz
fmull
stos
jno
xchg
leave
adc
cltd
movb
jo
dec
hlt
int
std
add
dec
or
cwtl
fmull
adc
or
not
mov
xor
idivb
adc
add
dec
mov
lods
cmp
sbb
sbb
test
xchg
push
cmp
sti
or
inc
mov
adc
cld
dec
or
dec
hlt
xor
leave
jecxz
lahf
sar
mov
sbb
cmp
js
outsl
xor
push
sahf
in
jg
pop
repnz
cld
gs
pop
lods
cs
stc
pop
and
in
dec
sub
lock
and
rclb
mov
sbb
xchg
hlt
stos
jg
mov
popf
push
pop
pop
iret
les
mov
xchg
jp
jl
out
cmpsb
in
movsl
pop
xor
popf
jl
add
sbb
cltd
inc
fstpl
dec
inc
dec
push
insb
in
inc
jl
pop
clc
movsb
cmp
pop
ret
and
sbb
pop
sbb
cmp
xor
mov
mov
push
add
sti
je
mov
scas
cmc
cmp
shl
push
cmpb
push
or
sbb
lret
add
adc
pop
ss
jb
push
and
test
mov
mov
add
push
jns
push
lcall
jg
fwait
mov
scas
sarl
fists
mov
ret
push
mov
pop
mov
fdivrs
movsb
cltd
jns
mov
iret
and
movsb
mov
mov
sbb
mov
or
or
mov
sbb
leave
mov
and
ljmp
inc
inc
xlat
std
fldenv
or
and
into
in
fldcw
enter
ss
push
cmpsl
adc
out
fwait
clc
cmc
jge
lret
in
or
stos
lret
xor
pop
fidivs
bnd
adc
js
push
cli
imulb
inc
test
xchg
adc
jo
dec
insb
mov
mov
pushf
int3
pop
push
sbb
jge
and
lods
stc
shlb
pushf
mov
jae
loopne
fwait
insb
sub
popw
imul
popa
pop
jbe
test
in
imul
and
jo
or
fistpl
scas
mov
fidivl
dec
icebp
js
fdivrs
addr16
scas
aas
mov
pop
jne
push
sbb
xor
sub
add
or
repnz
mov
push
icebp
lea
dec
inc
sbb
or
test
mov
add
insl
fsub
mov
mov
mov
and
adc
or
lods
xor
push
jnp
and
stos
ljmp
cli
xlat
inc
push
mov
outsl
adc
mov
push
iret
xchg
push
clc
sub
inc
js
cmp
fistpl
or
xchg
ds
cmova
mov
fdivrs
push
sarb
mov
jae
stos
clc
mov
sub
pop
test
jecxz
sbb
sub
shl
lcall
dec
clc
and
es
fs
repz
push
add
jle
cld
pop
cmp
add
or
pop
aam
bound
nop
pop
insb
iret
ds
scas
lcall
xor
xchg
mov
xchg
daa
adc
jno
push
scas
adc
sbb
rorl
mov
or
pushf
add
in
in
addr16
enter
lods
pop
lods
rorb
loopne
sarl
stc
loop
pop
je
push
outsl
jle
hlt
out
mov
out
das
shll
pop
cmp
lods
mov
push
es
movsb
inc
add
sub
pop
push
call
push
out
leave
sti
xor
jmp
xor
cwtl
add
aam
iret
and
fmuls
loop
push
jge
add
out
shll
jno
add
std
push
mov
sub
je
out
sbb
or
lret
aas
shrl
and
pop
dec
jmp
clc
pop
or
push
repnz
pushf
scas
cmpl
or
xchg
mov
test
lods
js
xchg
stos
in
jnp
mov
dec
xchg
or
adc
std
fwait
inc
pop
cmp
inc
sub
pop
leave
sahf
pop
cmp
lods
cltd
pop
push
fdivs
imul
adc
jne
mov
pop
movsl
cmp
mov
sub
iret
push
ljmp
cmpsl
out
idivb
mov
ljmp
push
out
dec
lcall
bnd
movsl
shrb
mov
inc
idivl
mov
iret
jl
mov
jns
jp
mov
scas
sarb
xchg
pop
xor
imul
xor
add
add
hlt
push
sahf
int
popf
imul
jne
fsts
sbb
or
jl
fneni(8087
and
aaa
sarb
arpl
and
fidivrs
fstl
push
cmp
jecxz
xor
push
into
sub
enter
loopne
dec
mov
popa
jb
mov
push
xor
mov
cli
sahf
push
pop
clc
out
testl
shld
xchg
or
sahf
ret
lret
inc
pusha
lcall
jle
or
psubsw
mov
aam
push
dec
xchg
mov
push
es
jmp
pop
fdivs
xchg
cmp
sub
lcall
jb
jmp
lds
repz
jmp
call
std
pop
push
outsb
cmp
test
mov
jnp
sbb
int3
push
or
cs
pop
sbbl
jbe
nop
stos
shlb
out
xlat
shufps
ret
scas
push
fildll
dec
mov
ret
int
movl
adc
inc
pop
push
jne
xor
repz
adc
aad
je
and
sub
arpl
and
xchg
push
xor
aas
push
and
push
leave
cmp
sbb
cmpsl
jge
imul
mov
test
jae
pop
mov
xor
jp
mov
add
mov
cmpsl
adc
repz
movsl
mov
xor
sub
fldl
arpl
jmp
dec
jl
mov
cmp
cmpsl
jp
mov
incl
push
adc
ret
out
cmpsb
mov
dec
push
outsb
js
clc
or
cmc
movsb
int3
cmpl
pop
nop
jmp
js
mov
push
dec
mov
cltd
pop
cmp
sbb
xchg
xchg
ret
fistps
add
mov
fbstp
ret
aaa
sbb
cmc
xor
repz
xor
dec
sbb
dec
dec
fwait
push
mov
ja
cs
mov
js
int
sub
nop
pop
mov
pop
pop
aad
sub
shrl
add
cwtl
and
adc
fisubrs
jmp
adc
sbb
outsl
mov
mov
cmc
cmpsl
icebp
test
push
pop
negl
cmp
add
aam
std
xor
dec
sbb
fiadds
imul
into
bound
shlb
mov
inc
cmp
xor
sub
popf
pop
push
rcll
ret
mov
xchg
xlat
push
add
pop
fmull
in
and
xchg
std
or
cli
cwtl
jae
mov
jo
mov
in
push
subb
call
jl
lea
aad
cmp
jno
arpl
push
or
in
mov
fs
lcall
sahf
jne
sahf
push
insl
loope
repnz
mov
sti
or
xor
out
sub
pop
mov
jbe
popa
int
nop
out
movsb
das
mov
pop
pop
cli
stos
adc
movsb
push
jg
out
daa
ret
ljmp
jge
ret
jecxz
roll
stc
outsl
icebp
sbb
push
inc
cmp
rorl
leave
push
cwtl
mov
add
push
mov
pop
rcl
push
lods
ss
pusha
out
sti
fsubr
inc
xchg
and
mulb
push
movsbl
dec
ja
jmp
jge,pn
xchg
inc
pop
adc
aam
lods
dec
cltd
les
stos
and
add
div
and
push
mov
mov
and
mov
add
fwait
cmp
ja
and
popfw
sahf
jne
cmp
or
sbb
in
out
pop
mov
arpl
cs
hlt
cmp
adc
xchg
mov
jl
fsubrl
cmp
cmpsl
jbe,pt
cmp
jae
cmp
and
mov
add
ss
call
push
fidivs
push
int
test
repz
mov
lcall
dec
pop
pusha
mov
mov
add
aam
leave
sub
xor
mov
mov
ret
mov
pop
sub
xor
xchg
push
mov
sub
or
loop
lahf
clc
push
incb
pop
data16
cmp
push
rorl
cmp
mov
mov
test
cmpsb
in
xchg
add
push
inc
lahf
jo
popa
mov
mov
je
cmpsl
add
stos
mov
cmp
push
shlb
fwait
pushf
mov
repnz
out
clc
xor
pop
fcoms
fidivrl
gs
jb
addr16
rcl
shl
pusha
sbb
enter
mov
adc
push
push
mov
or
pop
aad
mov
pop
xor
call
mov
arpl
test
bound
imul
loope
jge
in
lret
inc
in
xor
xor
mov
mov
insl
stc
xlat
pop
add
jno
ficompl
call
and
sub
pop
or
int3
sub
xlat
mov
fmull
add
cwtl
fwait
cmpsl
xorb
cmp
ss
es
imul
and
cld
cmc
ljmp
roll
xchg
test
jl
call
call
sub
push
test
jae
sbb
mov
mov
mov
add
mov
dec
pushf
repz
and
adc
pop
lahf
ret
lret
or
pextrw
mov
push
sbb
sbb
mov
jle
filds
ljmp
pop
xor
jge
mov
inc
or
sub
pop
or
mov
xorl
jp
in
jb
xor
clc
ret
fs
pop
jbe
dec
sbb
inc
sbb
pop
cmp
cmp
gs
daa
add
mov
fwait
jns
or
jo
sub
push
ss
jl
mov
dec
xchg
fwait
or
faddl
xchg
add
adc
out
in
mov
int
imul
fs
int
jae
popf
sub
and
mov
aas
mov
fisttpl
sbb
lods
sbb
sub
xchg
outsl
in
xchg
lcall
mov
aam
mov
and
push
lret
ret
cmpsb
std
inc
mov
and
call
add
adc
xchg
add
push
xchg
imul
xor
jg
and
sub
out
dec
test
cs
push
cmpsb
xchg
icebp
mov
das
fsubl
inc
inc
mov
add
jecxz
test
jmp
push
cmpsl
jle
add
cmp
icebp
shr
mov
sub
call
mov
jnp
adc
xlat
addr16
xchg
or
dec
call
cmp
and
sub
loop
jbe
push
movsb
jg
ret
les
mov
bound
fs
mov
rorl
jo,pn
lahf
rcl
jecxz
ret
clc
and
cwtl
jb
pushl
jns
cmp
hlt
sbb
xchg
fnstenv
mov
stc
and
icebp
fisttps
mov
outsl
pop
test
jns
sbb
dec
jle
sbb
mov
hlt
popa
fdivrs
xor
pop
scas
pop
xchg
in
les
xor
out
push
sahf
cmp
jns
mov
scas
ret
in
and
movsb
push
fsubs
or
js
int
add
jnp
sbb
jno
mov
inc
hlt
add
pushf
adc
xchg
xchg
mov
adc
ds
pop
push
out
mov
jmp
mov
jnp
jmp
scas
jnp
sti
jb
sbb
fnstcw
pop
scas
test
repz
fsts
lds
bound
shlb
or
lods
ljmp
aas
sahf
sti
sub
fsubrs
jmp
jl
ja
dec
cwtl
sub
mov
jmp
bound
sarl
jmp
mov
rorl
out
ljmp
mov
out
xchg
rcrb
rclb
fistpll
dec
test
xchg
jmp
rorb
ret
add
jno
adc
or
icebp
add
cld
or
jnp
sub
adc
mov
arpl
inc
jne
sbb
fisubs
movsl
cmp
mov
cmpsl
negb
inc
xor
jnp
scas
xor
shll
jne
fsub
add
or
scas
stc
cltd
pop
cmpsl
inc
jl
lcall
cli
adc
adc
sub
push
sbb
cmp
lea
nop
push
stos
fucom
pop
test
roll
aaa
sbb
or
add
and
push
push
mov
xchg
les
shr
testb
mov
ljmp
inc
sbb
lods
movd
push
mov
shrb
sarl
xchg
mov
jns
mov
aad
rcll
aam
scas
adc
add
jmp
in
aas
loopne
dec
aas
imul
call
mov
lret
sbb
dec
add
rclb
jge
stos
mov
jp
subb
push
test
gs
lret
sub
fisubrl
in
mov
mov
in
call
imul
divb
cmp
or
mov
call
push
sti
sbb
ja
mov
sbb
popa
jnp
sbb
cld
stos
xchg
fdivrl
push
jle
push
push
jae
mov
inc
mov
mov
mov
js
out
cwtl
rclb
lods
aas
inc
push
das
cmp
lods
out
adc
xchg
cmp
push
dec
outsl
mov
add
ficomps
dec
fs
rcl
dec
add
push
pop
pop
dec
pushf
sbb
xchg
ficoms
mov
sub
jnp
bound
pop
xchg
aam
out
cwtl
dec
or
fbstp
sahf
pop
sbb
xor
cld
in
sbb
lahf
or
pop
fs
xorl
gs
addr16
lcall
sub
lock
inc
xlat
push
inc
icebp
in
mov
insb
fcomps
mov
jno
adc
dec
jle
and
fildll
sbb
add
popa
subb
mov
mov
out
mov
xchg
pop
jae
into
push
int3
adc
inc
dec
addr16
mov
ds
inc
mov
das
adc
int
add
cli
or
mov
and
sbb
mov
jg
pop
movsl
mull
jne
pop
sub
int
or
je
jl
xchg
mov
enter
inc
jl
ja
in
cmp
sub
xchg
sti
in
xchg
clc
xchg
adc
pop
mov
add
je
lret
xchg
jge
jecxz
loop
xchg
int
shll
mov
int
dec
gs
mov
jno
mov
paddb
mov
je
movsb
lods
adc
pop
std
test
or
daa
cmpsl
mov
xor
jbe
jbe
or
add
pop
add
loop
stos
lahf
dec
ja
sbb
ljmp
pop
xor
inc
cmp
sbb
shlb
mov
fmull
hlt
fmul
outsb
imul
cmp
fs
pusha
jnp
fs
test
mov
out
pop
xchg
or
xor
dec
into
outsb
sub
inc
or
xchg
lcall
js
stc
cmp
jle
aaa
iret
gs
cmp
inc
jecxz
fwait
ret
mov
fidivl
pusha
mov
sbb
ds
xorl
inc
xchg
ret
fiadds
mov
ret
pushf
xor
in
repnz
enter
ficomps
mov
lock
or
sub
lea
fsubrl
push
repnz
cmpsl
clc
icebp
popa
sarl
rorb
jge
es
and
jae
data16
xchg
notl
cmpsb
repz
xchg
pop
popa
push
jl
xlat
dec
add
and
ss
in
out
jge
aaa
adc
call
mov
cmc
gs
into
jnp
outsb
lea
mov
in
jne
fisubrl
gs
inc
outsl
ljmp
jle
xchg
mov
dec
addr16
xchg
mov
xchg
inc
subl
jae
push
les
aam
jae
cmp
xlat
mov
mov
ret
aas
lds
fisubs
and
addr16
in
les
fs
dec
xor
add
pop
add
push
lods
mov
jg
or
out
jge
aaa
adc
movsb
incl
xor
neg
xor
ljmp
sub
mov
outsl
fldl
in
sub
cmp
into
cmp
lahf
scas
shr
add
subb
inc
fisubl
xlat
ja
cmpsb
xlat
pop
jl
push
push
mov
push
dec
adc
scas
cmp
mov
outsb
lods
sub
cld
and
or
mov
push
xor
fwait
adc
in
leave
movsb
fcoms
push
fidivrs
lods
lret
jecxz
jmp
ss
rcll
loopne
mov
movsb
jbe
jne
cld
test
jg
xchg
xchg
sub
push
or
sbb
cltd
cli
imul
gs
adc
jno
ret
scas
lret
pop
dec
dec
fidivrl
je
cmc
sti
mov
fistpl
inc
mov
out
or
adc
push
sbb
pop
test
cltd
dec
andl
fidivrl
dec
xchg
xchg
sahf
or
addr16
nop
gs
inc
pop
cmovne
jns
insb
fwait
stos
sub
jbe
js
xlat
fdivr
into
hlt
cmp
out
fstl
mov
sub
add
ds
pop
or
and
mov
ret
je
xchg
sub
xchg
lea
push
pop
pop
mov
jns
rcr
add
outsl
pop
xchg
in
popa
mov
and
aam
or
mov
add
xor
inc
xor
mov
jmp
out
sbb
mov
xchg
notb
jl
icebp
adc
and
adc
test
dec
insl
xlat
test
xor
enter
fcoms
xor
repz
cld
sbb
cld
gs
mov
and
mov
int3
push
mov
divb
sbb
std
and
xchg
ror
pop
dec
and
dec
mov
popa
lcall
pop
lods
mov
clc
xor
aam
les
pop
and
jp
sub
imul
mov
push
or
clc
inc
adc
or
mov
xor
outsl
adc
aas
shrb
and
cmp
jbe
xlat
repnz
out
push
inc
push
jg
repnz
sub
pop
mov
mov
jne
filds
lea
lahf
idivl
cmp
push
sub
jg
xchg
lods
enter
cmpsl
stos
and
outsb
fcoml
and
je
and
push
jo
loopne
dec
add
test
add
add
mov
pop
test
add
in
pop
pop
lahf
fnstenv
push
aas
push
arpl
shrl
mov
cwtl
lods
cmp
mov
sarl
mov
push
jnp
adc
lret
sahf
outsl
mov
repz
cli
or
aam
fistl
or
cwtl
push
pop
xor
sub
mov
xchg
push
filds
jge
int
lods
pop
test
mov
sub
ret
fs
pop
outsb
mov
xor
jp
mulb
push
sub
out
jnp
xor
and
std
orl
sbb
pop
std
adc
jmp
xchg
dec
imul
fisttps
lods
inc
xchg
xor
lret
test
fcomi
xor
add
es
add
fwait
aad
pop
sub
sbb
cwtl
out
mov
lahf
je
jns
dec
fnsave
das
ffreep
addr16
sub
push
pop
jnp
pop
jne
test
add
stos
notb
add
cld
aaa
dec
and
repnz
rorl
xchg
xchg
out
jbe
int3
push
xchg
add
cmp
xor
fldt
mov
popf
outsb
popa
or
lds
or
xchg
push
fisubrl
jne
inc
aas
push
loopne
sbb
insl
lods
xchg
movsl
fisttps
pusha
jge
xchg
adc
xor
sub
clc
mov
xchg
insb
xorl
pop
mov
push
ss
idivb
mov
scas
movsl
sbb
call
or
mov
jle
inc
pop
jbe
pop
addr16
test
dec
clc
lods
scas
and
mov
movsb
js
xchg
std
dec
push
outsl
int
mov
pushf
adc
mov
subl
and
push
cmc
mov
mov
jbe
ljmp
in
movsl
fidivrl
mov
sarb
cltd
dec
bound
jo
xorb
jns
ficoms
cmp
sub
sti
push
cmp
mov
mov
lods
repz
mov
stc
lds
or
mov
mov
into
cli
orl
outsb
fnstenv
into
iret
xchg
xchg
or
pop
jl
xor
xor
add
fwait
fs
mov
call
shrb
xor
pop
cmp
dec
push
mov
in
frstor
add
std
fbld
in
aad
jno
jns
xor
mov
pop
movsl
out
mov
fisttpll
stos
pop
daa
lret
or
sub
insl
lret
and
sub
pop
mov
cmp
inc
out
mov
jnp
add
mov
cli
xor
adc
mov
sbb
jge
mov
pop
mov
pop
or
testl
jmp
aad
jg
add
cld
jecxz
int
adc
test
and
jecxz
mov
fiadds
lcall
mov
popf
inc
aam
sbbb
mov
out
insb
jns
jae
gs
jb
cmp
mov
ja
out
mov
or
or
adc
enter
jbe
ja
ss
mov
mov
insl
xchg
cli
data16
outsb
mov
out
lock
loop
pop
pushw
inc
out
push
lods
and
pop
loop
push
xor
test
push
cmp
lahf
addr16
scas
ss
push
orl
mov
mov
adc
mov
xor
psubusw
add
push
mov
mov
int3
repz
loope
test
in
dec
sub
insb
mov
jne
das
ss
jne
jl
lahf
cmp
movsb
mov
or
xchg
iret
xchg
add
or
rorb
aam
jae
fcoms
aam
jp
sub
pushf
xor
xor
sub
loop
dec
mov
xchg
pop
roll
dec
sub
ljmp
cli
inc
loopne
insb
sub
xchg
jo
movsl
enter
in
mov
dec
cli
out
lds
lret
mov
int3
mov
or
push
sbb
aad
punpckhwd
dec
std
orl
push
jns
push
popa
ror
repnz
sub
loopne
pop
mov
in
pushf
or
aaa
enter
leave
into
cli
jb
mov
push
sbb
inc
xchg
lea
push
mov
shl
mov
into
pushf
mov
fwait
inc
lds
sub
iret
push
call
fisttpll
cmpsb
rorb
pop
push
stos
imul
sbb
push
and
push
push
in
cmpsb
jge
in
je
xlat
mov
inc
mov
pop
scas
add
push
push
sahf
xchg
das
adc
mov
cmp
test
push
rcrl
jge
mov
xchg
fists
rol
or
and
dec
mov
pop
roll
js
ficomps
das
mov
mov
pop
inc
cli
push
cwtl
dec
mov
iret
mov
test
dec
adc
push
sbbl
out
add
mov
sub
push
push
mov
cwtl
pusha
out
jecxz
cli
sbbl
rolb
orb
xchg
jb
in
rcrl
pop
xor
loop
push
and
je
xchg
jnp
lds
cmpsb
mov
jb
dec
cmp
sub
std
or
bsr
pop
xor
ja
adc
repz
imul
icebp
dec
call
notb
push
das
in
lock
mov
ss
xchg
popf
inc
xlat
jns
lret
orb
out
xlat
hlt
je
mov
mov
dec
test
rolb
cmp
ret
icebp
and
bound
push
jge
arpl
test
pcmpeqb
arpl
enter
mov
inc
orl
lahf
fs
cmpsb
cmp
test
mov
pushf
adc
cmpsb
rclb
and
pop
mov
mov
repnz
insl
loopne
sub
loop
aam
xchg
push
adc
cmp
int3
mov
fs
clc
adc
sub
arpl
ljmp
dec
cmp
test
fbstp
cmp
add
or
lods
sbb
mov
sub
sub
mov
mov
fwait
shrl
out
fidivl
dec
xlat
fistl
repz
dec
mov
inc
insb
clc
cmpsl
dec
mov
ljmp
mov
sarb
mov
mov
mov
xchg
push
adc
inc
loopne
fwait
cmp
inc
enter
xor
adc
outsb
jb
pop
movsb
jmp
and
jge
dec
stc
imul
cmpsb
sti
jns
scas
mov
outsb
xchg
shrb
xor
push
sbb
adc
mov
int3
lock
mov
frstor
hlt
lea
insb
and
add
mov
int
mov
lods
mov
insl
push
push
jmp
pop
cld
jae
inc
test
lret
push
pop
idivl
lods
outsb
mov
mov
rol
shlb
cmp
sarl
push
inc
push
jbe
pop
add
adc
outsl
dec
add
cwtl
adc
into
out
pop
adc
mov
jns
or
rorl
lds
cmp
cmpsb
xor
arpl
mov
push
fs
fmul
dec
sbb
outsl
pop
jo
mov
or
jg
sub
mov
xchg
push
add
adc
stc
mov
test
push
or
cltd
lret
jmp
adc
ret
in
orl
jns
xor
adc
stos
imul
mov
xchg
movsl
int3
cld
fmull
jmp
sahf
out
push
ja
adc
xchg
cmp
ss
xchg
adcl
jmp
lret
lods
push
or
inc
hlt
pop
xor
and
cld
stos
and
push
cmp
lods
lahf
scas
adc
out
xchg
cwtl
iret
push
xor
pusha
rcrb
sub
xchg
inc
or
ds
cli
out
cmpsb
sub
adc
sbb
sbb
xchg
incb
scas
sti
stos
dec
cmp
loope
or
enter
stc
stos
outsl
stos
leave
mov
cmp
mov
adc
fdivp
adc
sub
fmul
xchg
fcmovnbe
lahf
imul
push
cld
mov
xchg
loopne
xor
ljmp
lods
popa
lods
jno
out
inc
mov
push
fdivrl
push
fdivrs
or
jle
aaa
xchg
out
orl
and
testl
dec
cli
mov
jmp
scas
xlat
outsb
pop
test
jge
lods
add
shlb
add
mov
jg
xchg
jo
xor
push
add
mov
in
out
roll
neg
sahf
mov
push
mov
in
dec
loop
fnstsw
out
and
xchg
stos
ret
add
int
adc
arpl
fs
insb
pop
cmc
movsl
notb
add
xor
divb
or
push
aas
movsl
xor
mov
push
push
ror
inc
mov
and
pop
fcomps
in
pop
mov
cmp
or
mov
mov
fnstenv
mov
dec
test
mov
pop
fwait
test
or
push
sbb
add
pop
push
ret
outsb
test
ja
mov
xor
mov
js
sub
outsl
add
adc
pop
sbb
stos
aaa
stc
push
sub
in
mov
popf
loopne
jge
push
xor
xchg
and
das
insb
mov
out
call
sub
mov
shlb
loopne
fldt
or
jbe
inc
movsb
mov
or
mov
data16
sub
fnstcw
push
pop
addr16
stc
lret
add
inc
test
lock
sub
or
scas
movsl
js
call
add
jmp
inc
nop
leave
or
pop
cmovbe
es
xor
mov
push
imul
loopne
jae
popa
cmp
mov
ret
dec
pop
or
mov
jge
sbb
popf
stc
jp
dec
roll
jno
cmp
mov
int3
roll
push
daa
lea
jg
addr16
aam
adc
add
inc
xchg
cmc
lret
add
xchg
lcall
xor
lock
das
into
sbb
mov
pop
ret
les
push
pop
les
jp
pusha
popf
sbb
lahf
aas
in
lds
xchg
push
mov
jno
cmp
pop
movsl
gs
cld
fcomp
xor
push
add
lock
xorl
popa
inc
fs
lret
lret
jne
inc
outsl
jg
lock
aas
push
mov
fwait
push
push
in
sahf
jmp
mov
leave
shlb
std
xor
bound
clc
adc
mov
scas
stc
shlb
push
pop
mov
lahf
popf
leave
push
cmp
dec
xchg
jno
iret
bound
cmp
out
cmp
popa
xchg
mov
jmp
push
and
pusha
out
test
movsl
cmp
xchg
ds
fstpl
scas
mov
call
pop
fdivs
sbb
push
and
cmp
ljmp
ds
and
call
cmp
lret
in
pop
aaa
push
xor
push
mov
repz
push
aad
lods
addl
inc
push
clc
adc
xor
int
jmp
mov
xchg
cwtl
jge
xor
pop
sbb
arpl
test
inc
fs
jp
popa
cltd
and
clc
adc
lahf
adc
fdivrl
shll
je
int3
aas
dec
jno
sub
in
xchg
sahf
loop
aas
pop
mov
jg
inc
sbb
mov
stos
call
mov
and
pop
fsubr
testb
test
sub
cs
mov
or
add
sbbl
std
gs
aad
test
add
mov
mov
inc
flds
adc
lods
out
mov
lret
add
dec
push
dec
mov
jg
adc
cmc
movsl
jnp
and
sub
dec
movsl
jo
pop
dec
cmp
sbb
aad
insb
sbb
or
inc
out
das
cmc
mov
xchg
inc
cltd
mov
or
or
dec
bound
xor
out
daa
jb
hlt
mov
sbb
push
mov
adc
imul
cmp
push
and
jae
xchg
fs
stos
gs
imul
mov
pmullw
ss
lret
or
adc
ret
cmp
jl
inc
sbbl
leave
pop
icebp
cmp
push
mov
jbe
push
mov
outsl
pop
aas
pop
dec
sub
outsb
mov
push
cli
push
aam
lods
ja
or
pop
dec
jp
push
sbb
push
movsl
or
adc
jl
cmpb
loopne
cli
mov
sbb
imul
and
sbb
cmp
mov
sbb
adc
inc
adc
shll
mov
xor
cmp
push
jae
sub
pop
dec
loope
rcll
sub
dec
or
fimuls
sbb
push
push
insl
jnp
into
pop
mulb
push
ja
adc
fs
xchg
cmp
mov
push
rorl
xchg
loopne
add
sub
loopne
fnstsw
ret
inc
push
lods
or
mov
stos
movsl
xlat
adc
js
and
xor
sbb
sbb
push
aad
adc
mov
imul
int3
add
push
fs
pop
pop
dec
dec
pop
mov
xchg
push
hlt
pop
mov
rcll
sahf
pop
pop
mov
cmpsb
in
inc
cs
or
fwait
jl
mov
aam
jb
out
push
out
cmp
xor
mov
aas
xor
add
testb
inc
mov
test
ss
sti
cmp
mov
sub
jbe
add
inc
sbb
pop
xchg
push
outsl
adc
vmwrite
jb
jns
test
ret
jae
push
aam
pushf
dec
mov
xor
jbe
pop
addr16
jae
popf
pop
insl
fwait
mov
scas
mov
or
sub
push
mov
imul
cmp
call
pop
jmp
aad
push
ret
sub
ja
fistl
scas
sbb
push
ret
adc
fadds
rcr
insl
lock
jno
js
sub
mov
fdivrs
insl
lret
dec
mov
xor
lods
enter
cmp
xchg
fimuls
mov
aas
sbb
pop
mov
rcll
mov
or
xchg
xor
jno
push
add
andl
inc
jge
cmp
sbb
pop
in
mov
es
fstps
std
hlt
les
mov
adc
loope
sbb
or
jmp
push
xor
leave
jg
cmc
shl
inc
xor
into
cmp
xor
push
lret
popf
sarl
je
cmp
pop
out
gs
add
push
jecxz
push
iret
into
xor
mov
xchg
jmp
inc
add
test
adc
dec
push
lods
inc
inc
out
sub
negl
adc
pop
call
ja
push
adc
jl
and
mov
mov
pop
idiv
ja
dec
or
push
jecxz
push
out
popa
jnp
sbb
mov
inc
out
xchg
cld
adc
xor
jbe
shrl
sbb
push
repnz
stc
push
dec
dec
cmpb
movsb
xchg
das
ficoms
scas
push
push
cmpsb
lods
mov
mul
xchg
popf
les
xchg
lret
jg
inc
lret
and
xchg
xor
or
sbbl
push
movsb
jae
pop
rorl
pop
push
movsb
aaa
popf
aam
fwait
lret
add
xchg
mov
iret
mov
lcall
jg
mov
es
out
sub
and
outsb
jb
mov
sbb
jg
jo
pushf
jno
mov
pop
and
fmul
scas
mov
fwait
xlat
xor
nop
out
stc
xorb
adc
and
sbb
shrb
out
sbb
jno
sbb
push
loope
mov
jbe
or
lds
dec
adc
mov
sbb
cmpsb
fbld
movsb
and
icebp
jg
ret
jnp
aam
add
scas
stos
inc
sub
jbe
push
inc
push
xor
and
mov
xchg
js
pop
mov
adc
out
inc
and
or
xlat
and
lds
cmc
ljmp
ja
dec
outsl
pop
int
sub
or
adc
lock
push
or
inc
mov
mov
xor
xor
lods
push
ret
enter
cmc
and
or
adc
aaa
pop
cmp
pop
xchg
sub
adc
jle
mov
adc
pop
jo
call
cmp
hlt
int
mov
cmp
loop
fs
xor
or
insb
push
sbb
idivl
jecxz
mov
push
cmp
pop
idivl
or
xor
sbb
push
jge
xchg
adc
push
test
push
aam
aas
sub
cmc
es
scas
in
clc
xchg
adc
and
imul
rolb
push
arpl
pop
adc
in
jbe
xchg
cs
push
inc
dec
icebp
or
sahf
mov
call
pop
push
sbb
sub
scas
cmp
fcmovne
mov
and
and
mov
dec
adc
adc
lods
adc
or
and
push
pop
popa
mov
daa
out
mov
mov
xor
pop
jle
scas
fwait
mov
inc
and
lds
imul
ret
je
xchg
add
pop
push
pop
ret
mov
fisubrs
loope
pop
stc
fdivr
and
iret
mov
lcall
cmp
jecxz
dec
je
les
push
dec
pop
call
in
stos
inc
mov
jle
stos
inc
sub
lds
inc
push
scas
mov
and
pop
loopne
jge
xor
leave
les
pop
popa
inc
sub
inc
cmp
xlat
push
jl
fisttps
addr16
cmpsb
ffree
mov
cmp
xor
xchg
jnp
sub
in
iret
pop
or
sbb
aaa
flds
pop
idivl
imul
sbb
mov
addr16
adc
or
add
jno
xor
dec
cmp
xchg
xchg
pop
mov
decl
test
and
xor
in
loopne
test
cmpb
fnstsw
push
js
popa
aas
inc
add
pop
xor
sub
jae
outsl
bound
or
mov
cs
pop
loop
insl
fimull
dec
jmp
movsb
mov
or
lea
test
mov
rolb
and
pop
mov
pop
sbb
inc
in
adc
and
pusha
pusha
inc
adc
mov
cmp
leave
dec
pusha
test
lock
sti
cltd
test
jo
xor
scas
rcrl
add
xchg
ja
subl
cmc
or
sub
shl
dec
pop
push
cmpsl
dec
mov
jae
or
mov
popf
scas
sbb
fnstenv
enter
add
mov
pop
inc
dec
sbb
testb
dec
and
sbb
mov
inc
fbstp
push
mov
gs
xchg
sbb
mov
subb
ffreep
aad
dec
test
mov
sub
test
jecxz
movsb
imul
mov
imul
outsb
cld
dec
into
sub
mov
repnz
lret
idiv
sub
cwtl
imul
inc
int3
loope
pusha
sub
in
cmp
sbb
ds
adc
adc
cli
fnstenv
rcr
call
cs
push
push
aam
pusha
jg
addl
cmp
mov
lahf
xchg
inc
popa
xchg
loopne
popa
inc
mov
jecxz
mov
sub
dec
add
push
call
cmc
push
pop
ret
lret
les
pop
hlt
pop
pop
je
and
scas
stos
enter
outsb
loopne
pop
mov
mov
andl
dec
ror
loop
mov
out
and
lcall
sub
push
cmp
adc
fsubrp
inc
sub
push
jmp
inc
icebp
push
scas
cmp
insl
pop
and
sbb
cmp
sub
adc
jmp
cltd
add
sbb
sbb
pop
enter
ds
adc
out
sub
lcall
fucomip
mov
dec
inc
jo
sbb
jmp
enter
mov
push
inc
mov
call
leave
xchg
pop
mov
cmc
daa
push
insl
adc
dec
loopne
cmp
jne
shl
pop
xchg
imul
pop
std
pop
andl
mov
iret
mov
pop
cwtl
lahf
jl
add
xchg
jmp
mov
xchg
stos
fadds
mov
dec
mov
enter
mov
mov
call
jns
pop
xor
sahf
sbbb
push
repnz
dec
jge
adc
mov
sbb
aas
mov
gs
mov
adc
js
clts
adc
mov
pop
mov
int
das
and
cs
lock
push
mov
mov
pop
mov
ret
pop
test
xchg
int3
sub
inc
lock
ficoml
minps
jbe
mov
xchg
mov
push
repz
mull
jle
xor
pop
divb
clc
lds
in
cmpl
fstp
adc
adc
adc
stc
cs
or
pop
mov
push
xor
add
push
mov
push
in
clc
punpcklbw
push
mov
adc
add
or
popa
inc
into
insl
pop
fcoms
out
test
pushf
pop
mov
mov
and
jge
mov
ret
cltd
aas
pop
xchg
mov
push
ret
adc
mov
ret
into
adc
sbb
push
lret
inc
lods
in
dec
and
adc
or
xchg
xor
ja
xchg
mov
leave
shrl
iret
incl
add
popa
ficompl
shrb
loopne
sub
push
cmpb
bnd
and
fucomip
add
pop
jae
xorb
xchg
pop
inc
xchg
push
jns
loop
push
nop
mov
pusha
sbb
xabort
sub
dec
fst
out
filds
mov
mov
je
imul
inc
push
int
sbb
cmp
sbb
dec
mov
mov
lcall
repz
dec
jb
sti
and
rcrl
mov
fnsave
gs
cmp
stc
popa
inc
mov
jecxz
sbb
xchg
and
mov
push
sub
lods
jmp
movb
sub
adc
cli
jo
cvtdq2ps
inc
and
xchg
test
xor
movsl
push
pop
fwait
insl
cmpsl
xchg
stos
xchg
push
push
ljmp
pop
jb
jle
xchg
jl
mov
sbb
fcompl
clc
in
shrb
pop
xor
add
es
cmp
xchg
inc
xchg
int
fcompl
adc
out
or
pushl
aas
cmp
loopne
ds
int3
int
cmp
mov
sti
mov
es
xor
sar
test
xor
push
test
adc
jg
ja
add
add
test
bound
push
mov
pop
test
mov
lahf
pop
out
dec
mov
clc
shl
sub
imul
xor
inc
xor
adc
ret
lahf
fidivrs
push
addr16
sahf
and
cmp
cmp
enter
push
xchg
cwtl
dec
pop
out
aaa
cmpsb
or
jo
je
mov
cld
push
mov
jo
adc
mov
push
dec
push
out
cmp
push
sub
xadd
dec
dec
and
dec
ljmp
push
sbb
imul
mov
xchg
mov
pop
and
or
push
push
je
inc
mov
mov
mov
or
xchg
inc
inc
adc
pop
jnp
pop
ret
dec
sti
frstor
and
ret
mov
mulb
push
pusha
or
into
lret
imulb
rcl
repnz
xchg
sub
push
push
add
or
dec
add
cmp
add
push
pushf
adc
dec
shlb
fsts
xchg
sub
sbb
push
movsl
sbb
sbb
mov
cmp
imul
data16
cltd
adc
cmp
stc
repz
mov
push
clc
or
jmp
sub
call
sub
nop
dec
push
outsl
inc
push
pop
dec
jo
cld
aaa
xor
das
insb
dec
ret
test
aas
out
push
mov
dec
popa
lar
jae
mov
fs
add
das
jmp
push
das
push
add
aam
push
sbbl
or
loope
push
xchg
mov
loope
mov
mov
add
mov
fldt
and
aam
daa
cli
adcb
sbb
loop
and
cwtl
sbb
es
add
loop
cmp
scas
or
outsb
dec
mov
in
les
xchg
scas
enter
cmc
fs
into
inc
jae
aaa
mov
mov
push
sbb
or
and
negb
xchg
xchg
sub
push
pop
lock
xor
xor
lds
fwait
jnp
fbld
mov
or
mov
xchg
imul
jno
movsl
mov
dec
jae
adc
div
ja
sub
out
test
jnp
sbb
mov
stc
imul
test
add
roll
or
push
aaa
fdivrs
cmp
cmp
lds
add
pop
mov
add
cmp
lds
cmpsb
shr
je
mov
stos
adc
sti
into
and
int3
shll
stc
je
ja
jmp
or
pop
popa
inc
pop
loop
jmp
jl
sarb
adc
ljmp
add
pushf
mov
in
inc
subb
sub
adcl
outsl
sub
mov
mov
xor
loopne
dec
ss
ds
aaa
out
clc
and
fs
dec
jg
icebp
loopne
sbb
test
out
mov
adc
dec
jmp
mov
int
mov
addr16
testb
sub
pop
repz
mov
hlt
sbb
mov
jecxz
cmp
lds
push
fwait
push
mov
dec
xor
dec
add
inc
cs
sub
mov
popa
and
imul
pop
dec
pop
insl
sub
mov
push
mov
icebp
sarl
imul
or
and
in
or
test
stc
pop
outsl
aad
mov
jae
and
push
repnz
mov
cmp
mov
sub
lods
sub
repnz
fmul
jno
hlt
and
sbb
xchg
mov
sub
pop
push
filds
ljmp
int
shll
xchg
push
jae
and
lds
out
sbb
das
cmp
adc
pop
xchg
cmp
hlt
push
das
bound
test
lods
cmp
xchg
xchg
sub
push
mov
jo
imul
push
sahf
mov
push
nop
jl
sbb
into
mov
cmp
movsb
push
add
and
stc
push
ss
test
add
daa
mov
imul
adc
mov
cmp
shll
sahf
pushf
adc
ret
sahf
mov
lock
dec
cmp
mov
clc
pushf
rorb
cmp
push
sub
sub
pop
out
loop
lock
sbb
inc
push
mov
mov
lcall
sbb
sbb
out
inc
and
dec
gs
and
mov
scas
adc
and
push
mov
cmc
sbb
ds
mov
jge
andl
sbb
jg
lea
fsubr
cmp
cs
int
aad
sub
pop
inc
pop
fs
divb
and
fnsave
pop
adc
mov
and
je
mov
repnz
sbb
cld
fs
xor
adc
cmp
imul
sbb
js
cmpsb
in
xor
aad
xchg
or
mov
data16
or
imul
jb
cmpsb
mov
jbe
ss
insl
dec
stos
sbb
push
icebp
ja
fbstp
cmp
inc
jle
gs
cmpsb
cmp
loope
shlb
dec
fs
enter
xchg
fwait
xor
je
push
in
push
sarb
sbb
sub
xor
sti
je
inc
cwtl
push
jmp
push
icebp
sbb
inc
mov
into
les
into
ficomps
jno
insl
stc
cmc
inc
insb
pop
dec
sahf
jns
push
hlt
jb
pmaxsw
jle
xchg
fucomi
dec
and
pushf
dec
jg
jae
out
inc
test
and
inc
pop
mov
mov
cmp
pop
mov
outsl
lret
aaa
fcom
stos
repnz
inc
insl
jns
push
sbbl
ljmp
fdiv
jne
sbb
cmp
je
sti
jo
icebp
inc
and
sbbb
dec
mov
sbb
cmpsl
shlb
push
cmp
mov
cmovae
es
out
sti
or
cs
xchg
out
rol
push
dec
jnp
pop
in
push
jne
mov
push
lds
ficomps
push
hlt
add
mov
aaa
mov
jp
movsb
imul
fyl2x
mov
sbb
mov
and
roll
xchg
and
push
mov
push
push
inc
cld
sbb
rcll
iret
subb
xchg
dec
ret
stos
pop
into
mov
inc
mov
jg
lods
mov
dec
stos
jnp
jl
sub
mov
test
std
test
xor
lods
push
lods
jl
jo
fstpt
fs
fmuls
inc
and
imul
push
sub
mov
sbb
or
xchg
test
ljmp
subl
sarl
fstps
test
bound
dec
push
or
jo
fcmovb
mov
add
xchg
jge
frstpm(287
and
jg
ljmp
sti
push
daa
and
adc
inc
out
pop
data16
cmc
fs
mov
repz
xor
loope
pop
scas
mov
fisubrs
enter
push
or
out
shl
rol
sarb
fiaddl
ljmp
push
mov
jne
in
xchg
mov
cmp
out
sahf
inc
push
sub
jg
mov
in
cwtl
mov
stos
shl
jmp
ficoms
insb
mov
es
xor
sbb
inc
add
jl
inc
or
adc
ja
or
jne
dec
sbb
adcb
push
or
add
data16
sbb
pop
testl
mov
mov
loopne
lret
xor
jno
cltd
mov
and
outsb
in
popl
jo
es
lock
lret
xor
pop
mov
out
and
sub
xchg
scas
push
or
jmp
hlt
lret
dec
lret
aas
push
sti
pop
mov
arpl
cmpsb
xchg
pop
adc
pop
push
fwait
dec
cld
fsubs
cs
pop
cld
add
dec
pop
pop
or
stos
push
cli
outsl
cld
out
push
or
pop
test
ljmp
or
mov
mov
xchg
sub
mov
xchg
jge
fs
cs
repz
repnz
mov
jmp
and
or
push
shlb
pop
mov
add
jg
pop
dec
rol
mov
push
in
ficomps
sbb
pusha
mov
mov
cmp
xchg
arpl
jne
dec
and
add
aaa
movsl
push
out
xlat
mov
cmpsl
jbe
jne
add
push
stc
xchg
dec
dec
scas
or
inc
and
jl
shlb
aaa
out
add
int
dec
inc
or
mov
jecxz
in
mov
add
shll
fimuls
mov
in
push
xor
aam
add
jo
test
mov
mov
movsl
cmpb
mov
inc
cmp
mov
decb
addr16
pop
cmp
out
fstl
sub
fldl
mov
sarb
in
mov
mov
rcll
ret
or
xchg
ljmp
adc
testb
mov
mov
shl
cmp
pop
sub
jae
jp
add
out
mov
or
cltd
xor
push
in
imul
int3
popa
add
cmp
push
in
add
aam
decl
mov
add
cwtl
add
mov
dec
sub
ret
push
xlat
jb
push
addb
test
insb
sbb
arpl
mov
pop
je
push
add
aam
mov
dec
aad
sub
sti
mov
inc
or
aam
xor
movl
out
es
jnp
dec
jmp
mov
aaa
cs
insl
test
enter
dec
into
movd
mov
inc
and
testl
ss
sahf
icebp
iret
add
ret
sub
xchg
and
add
ja
jle
mov
ror
addr16
push
and
hlt
pop
fstl
int3
lret
push
xchg
pop
aaa
int
pop
and
shll
scas
ret
iret
sbb
shll
ja
push
fimull
cli
jl
rcl
pop
xchg
cmp
insb
pop
ja
add
push
fldenv
dec
push
mov
jbe
xor
jo
lcall
scas
xor
xchg
adc
mov
ret
xchg
push
mov
ss
or
rclb
mov
mov
divl
and
fmull
insb
jo
mov
dec
and
pop
ret
cli
xchg
lea
je
cltd
stc
xchg
adc
std
push
aam
push
call
push
add
and
das
scas
jnp
cltd
ja
ficompl
add
pop
subb
call
mov
and
bound
mov
dec
and
into
jl
in
cmp
in
movsb
xchg
push
sub
sbbl
xchg
jne
inc
loop
lods
popa
mov
xor
mov
adc
push
lcall
testb
mov
jp
cmpsl
jnp
sub
xchg
orl
mov
das
rcrb
sub
cwtl
into
pop
xchg
cs
lods
scas
pop
xchg
push
cmc
mov
in
dec
loopne
lds
mov
aas
lds
jbe
add
js
pop
pop
scas
enter
outsl
push
sbb
push
mov
xchg
in
out
insl
mov
push
fwait
add
pop
pop
lock
pusha
nop
fwait
mov
sub
mov
aam
sti
je
jmp
pop
aad
mov
sub
push
pop
sbb
leave
xor
jno
cmc
daa
cmp
mov
xor
jp
inc
jo
mov
das
sbb
lret
mov
sbb
add
ljmp
mov
pusha
dec
fbstp
loopne
arpl
xor
stos
outsl
inc
pushf
mov
xor
andnps
xchg
jmp
mov
sbb
aad
in
mov
xchg
jl
test
push
es
sub
adc
lea
pop
add
xor
shlb
lret
xchg
test
add
mov
stc
cwtl
cmp
mov
pop
and
test
popf
in
std
pop
mov
add
push
imul
cs
cmc
or
repz
mov
shll
xchg
enter
lea
sbb
imul
filds
or
mov
mov
cmp
jae
es
xlat
fwait
sbb
mov
mov
aad
fcoms
dec
xchg
rcll
mov
popf
scas
push
dec
inc
jo
add
mov
inc
push
inc
inc
lret
mov
js
scas
sbb
mov
push
sub
lret
inc
fsubr
pop
inc
nop
mov
xchg
xchg
call
dec
mov
mov
xchg
shlb
je
cli
and
dec
ljmp
js
outsb
xchg
xlat
sub
sti
std
popa
jne
xchg
imul
adcl
pop
test
inc
sbb
and
xchg
cmpsb
rorl
mov
xchg
xchg
test
negl
pop
lock
or
lock
pop
add
fwait
loopne
arpl
jnp
movsl
jp
out
adc
push
xor
inc
in
in
mov
jbe
push
xchg
jno
in
sub
mov
stc
insb
in
lock
mov
jecxz
ds
stos
in
cmc
clc
cmp
outsb
loope
sarl
xchg
inc
push
inc
xchg
in
pusha
stos
adc
mov
sub
xchg
dec
jp
sub
mov
and
push
inc
sub
fbstp
xchg
fnstcw
pop
push
int
push
aas
adc
pop
sbb
lds
push
sbb
jb
mov
push
adc
iret
sub
mov
adc
and
push
jecxz
push
repnz
push
ret
mov
sti
dec
sbb
rcll
and
dec
arpl
dec
mov
adc
repnz
inc
fisubs
or
pusha
and
rcll
dec
scas
ret
cmc
or
jp
sbb
xor
fists
cltd
xchg
lds
stc
push
fs
lods
insb
dec
cmp
lea
or
arpl
or
sbb
dec
test
rol
test
test
pop
mul
das
push
lcall
das
pusha
out
and
movsl
pushf
xor
out
test
jo
stos
enter
mov
fwait
psubq
ret
and
jg
jle
int
out
dec
dec
ljmp
sub
jmp
int
imul
jge
ljmp
sar
mov
sbb
gs
jnp
sbb
lret
dec
fstp
mov
fwait
push
aam
dec
mov
mov
imul
into
inc
stc
int
push
jo
iret
repnz
mov
or
inc
jno
jnp
jo
jbe
bound
data16
xchg
jle
xor
and
minps
add
mov
dec
xchg
mov
cltd
push
mov
xlat
xchg
in
xchg
add
dec
popa
aad
jno
rcrb
shll
sub
ficoml
mov
push
outsb
pop
sti
adc
test
xor
push
inc
xchg
sbb
add
outsb
xor
scas
xor
dec
insl
out
scas
mov
aad
arpl
xchg
loop
repz
mov
imul
notl
popf
test
lea
or
xchg
xchg
mov
mov
outsb
in
fdivrp
xor
push
jp
inc
aas
xchg
adc
push
mov
mov
mov
xchg
xchg
or
lock
test
mov
stos
or
inc
hlt
out
scas
mov
push
jle
imul
xor
daa
repz
repnz
addr16
std
outsl
orl
into
push
insb
xor
cli
mov
dec
es
mov
outsb
repz
sbb
xor
jle,pt
mov
sub
repz
outsl
pop
mov
daa
xor
shlb
push
sub
mov
mov
ret
fstpt
push
in
mov
dec
rolb
xor
in
ja
lods
cmpsb
cld
ds
outsl
inc
pop
loope
mov
lods
lea
ds
or
sub
shl
cmpsb
jns
stos
in
stos
loop
in
ljmp
cmp
pop
xchg
xor
lock
mov
push
sub
mov
mov
scas
into
aam
xchg
scas
add
xchg
add
ret
nop
add
cmc
xor
fsubs
sbb
add
pop
mov
xchg
mov
cmpsl
aad
mov
subb
shrl
repz
xor
push
mov
or
loop
xchg
push
jno
mov
sub
lods
arpl
out
sbb
sub
lods
jae
sub
cmpl
dec
xor
jbe
xor
aad
fidivrs
and
cltd
les
repz
or
sbb
or
ret
add
push
es
std
ja
jnp
decb
adc
aas
es
jae
mov
dec
add
outsl
mov
lret
inc
fldenv
call
das
push
mov
ljmp
testb
fstpl
cmp
jnp
out
leave
adc
aad
ja
cmp
lret
loop
test
sub
shrb
sub
insl
rorl
jmp
xchg
xor
addr16
adc
push
sbb
inc
cmc
sbb
repz
gs
ss
or
shrb
pop
mov
dec
pop
mov
repz
or
pop
ja
pop
xchg
fwait
adc
dec
gs
mov
and
lcall
orl
lret
aam
jmp
stc
mov
popa
mov
and
dec
or
lods
inc
movsb
mov
aad
sbb
cmpb
dec
jecxz
xchg
push
adc
sub
stos
and
addl
pop
jb
sub
cmp
dec
call
rorl
enter
add
leave
iret
fwait
shl
scas
aaa
aad
rcll
dec
cmp
stos
mov
pop
and
in
jmp
cmp
inc
lret
cltd
push
sub
xchg
fcom
mov
mov
jbe
fisttpl
inc
dec
xor
or
sbb
add
test
lret
add
cltd
test
sti
jmp
mov
cmp
fisubrs
pop
sub
jecxz
out
xor
inc
pop
mov
xchg
repz
sbb
dec
add
popf
jno
jae
mov
inc
pop
aaa
imul
xor
mov
leave
dec
pushf
out
hlt
or
subl
loope
push
popf
push
xor
sbb
ds
aam
sti
xchg
in
jmp
xchg
cmc
rolb
jae
add
scas
mov
fs
push
rclb
out
jg
pop
movsb
xor
dec
adc
dec
mov
cmp
jb
mov
insb
cli
adc
mov
aad
mov
jno
das
and
inc
cwtl
pop
push
sahf
push
lahf
scas
fdivrs
data16
mov
js
mov
jae
lahf
aad
imul
cwtl
cmpsl
pop
mov
mov
or
xchg
jg
push
push
out
and
push
imul
add
shl
cmp
popf
sbb
lret
sub
in
out
pop
xchg
data16
pushf
hlt
or
xchg
sahf
pop
and
je
adc
neg
xor
call
jl
push
into
jno
adc
mov
sbb
or
movsb
push
jp
mov
xor
cltd
stc
int3
jle
testb
pop
push
test
jne
mov
push
pop
push
push
pop
je
cmp
cli
mov
xor
pop
pop
fistl
mov
aas
outsl
imul
xchg
out
pop
ljmp
cs
xlat
rolb
mov
nop
pop
stc
push
xchg
xor
inc
decb
add
inc
out
dec
xorb
lods
dec
cmp
sbb
or
lcall
jae
hlt
insb
std
sub
dec
int
adc
dec
ljmp
and
ljmp
or
adc
aaa
cmc
movl
and
push
stc
inc
jle
loop
sub
outsb
sub
sub
mov
xor
rol
popa
jo
rcrl
push
jne
test
push
pop
outsl
into
lock
pop
imul
les
sub
mov
mov
cmp
shll
stos
and
bt
push
cwtl
popf
in
mov
jb
xor
aaa
and
pop
xchg
mov
in
mov
inc
pop
add
dec
pop
sti
fistpll
aad
sub
shr
inc
xchg
adc
lret
pop
cld
stos
and
out
add
mov
sbb
push
shrb
mov
mov
xor
aaa
mov
or
cmp
and
or
cmpsl
add
cli
lods
popf
and
dec
push
push
repnz
cmpsl
lods
jle
mov
stc
dec
pushf
fdivs
movsb
xchg
xchg
push
jbe
js
cmpsl
inc
or
xor
imul
inc
mov
std
out
mov
mov
mov
daa
shlb
pop
pop
ljmp
outsl
mov
fimuls
jns
outsl
push
cmc
dec
adc
mov
jo
adc
adc
inc
mov
dec
push
dec
insb
jp
sbb
test
mov
inc
call
fists
sbb
rclb
addl
cs
fstpl
pop
loop
dec
jl
rorl
sbb
in
outsb
cli
shll
mov
lahf
imull
cs
int
aas
mov
ds
push
ljmp
outsl
mov
int
sub
sarl
out
mov
jge
enter
je
lds
outsl
add
aas
mov
fstpl
or
fnstcw
cmpsl
stos
jae
fstps
nop
xchg
movsl
addr16
aas
xor
and
test
xor
imul
pop
jle
cltd
into
mov
insb
jmp
out
xlat
mov
in
or
rcr
call
push
mov
lds
clc
imul
xchg
cltd
push
dec
aad
adc
jns
inc
adc
lock
pop
jo
add
cmp
xlat
sahf
fldt
inc
sbb
mov
push
adc
rcr
or
mov
jne
xor
push
cmc
push
add
push
shr
mov
lret
lock
or
test
out
daa
pop
fwait
xchg
push
pushf
dec
mov
sti
stos
add
push
ds
push
mov
or
das
mov
or
cmp
stc
dec
pop
out
add
and
sti
sub
sbb
sbb
jno
rcrl
leave
ffreep
jno
push
stos
xchg
stos
pusha
icebp
repnz
inc
aaa
sar
or
lods
mov
roll
das
mov
test
scas
fs
push
shlb
mov
sbb
andl
sub
inc
mov
mov
daa
xchg
xchg
xor
mov
fimuls
insb
pusha
cmpsl
add
stos
push
arpl
cltd
pop
hlt
jmp
mov
fsubl
mul
cmp
and
mov
push
shll
rorl
push
fstpl
xchg
push
mov
dec
pop
mov
push
and
inc
hlt
leave
xor
repz
popa
cmp
cmp
arpl
jnp
push
adc
aaa
dec
insl
lods
vmread
jb
mov
mov
mov
push
shl
xchg
es
jmp
sbb
mov
je
mov
jg
cmp
push
mov
aaa
int3
jle
jmp
jae
insl
ficoms
test
xlat
iret
hlt
xor
ds
cmp
insb
popl
data16
ja
inc
outsl
jbe
ljmp
and
dec
mov
pushf
mov
leave
ja
mov
arpl
sbb
or
out
mov
jno
xchg
mov
mov
cltd
subl
or
mov
data16
pop
cli
out
xor
pusha
test
xchg
push
sbb
fisubrs
lret
mov
fstps
xchg
stos
cld
ret
sub
add
cmp
fcmovu
fstps
jno
cmpsb
dec
js
xchg
repz
mov
imul
mov
mov
pop
mov
mov
mov
mov
pop
xor
aad
jecxz
pop
xchg
mov
jmp
fstps
pop
in
jnp
mov
or
adc
mov
mov
mov
push
sub
cmp
stos
add
inc
xor
fst
mov
and
sbbl
add
push
pop
dec
int3
in
cltd
paddsb
lea
repnz
pop
mov
shlb
js
dec
mov
pop
shlb
in
mov
out
xor
cwtl
mov
xor
cld
fisttps
add
adc
cltd
mov
cmp
out
mov
adc
sub
out
add
mov
or
stos
cmpsl
mov
aam
mov
enter
loope
push
fcom
cmp
add
xlat
xchg
adc
andb
loopne
lds
shll
push
hlt
test
mov
fiadds
dec
and
push
sbbl
xchg
cld
rcl
pushf
hlt
hlt
jg
es
leave
loop
mov
mov
lret
lret
adc
cmc
xchg
scas
adc
pop
loop
mov
xor
mov
mov
mov
pop
incl
xor
jmp
fsubrl
stos
ss
gs
mov
dec
xchg
out
mov
sahf
bound
xchg
inc
jo
add
imul
cmc
enter
aad
into
cmpsl
dec
jno
pop
xchg
add
sub
and
cld
jg
arpl
mov
pop
test
dec
das
insl
sub
imul
aam
mov
cltd
fdivrl
cli
mov
push
adc
or
add
dec
xor
cmp
sub
movsb
pop
icebp
xor
in
rolb
mov
test
pop
dec
aas
jbe
aam
xchg
sahf
ds
cmp
lock
xchg
pop
jecxz
jl
sub
mov
jp
mov
outsl
movsb
ret
repz
cmp
daa
cmp
jno
into
jae
adc
mov
pop
ficoms
sbb
sub
pop
pushf
pop
mul
out
in
popf
sbb
push
lahf
dec
andl
cmpsl
lahf
push
aad
nop
mov
inc
sub
dec
or
negb
int3
dec
jae
push
xchg
mov
and
mov
cmp
pusha
cli
hlt
mov
pop
mov
sti
inc
shr
or
pop
mov
imul
mov
cmp
popa
cmp
inc
inc
pusha
addr16
outsl
or
push
or
pop
scas
xchg
jge
iret
scas
sarl
cmp
les
pop
fadds
pusha
addr16
pop
push
inc
and
dec
test
cltd
pop
cmpsb
mov
xor
stos
dec
inc
shlb
xor
xchg
jne
das
dec
push
pop
pop
xor
sbb
jnp
jno
lods
cltd
xor
mov
add
mov
push
je
cmp
xor
out
xor
hlt
into
and
inc
insl
sbb
cmp
push
mov
mov
mov
jbe
stc
mov
int3
adc
mov
les
pop
shlb
outsl
adc
xor
pop
mov
das
push
fwait
enter
jno
inc
lods
fdivl
mov
jg
loop
mov
jae
stos
xchg
call
fsts
xchg
ret
and
in
jl
push
cmp
rcll
and
mov
or
ret
call
cmp
and
xchg
push
and
sarb
in
aaa
clc
adc
dec
fdivp
movsb
shl
push
outsb
mov
jno
pusha
or
or
outsb
stos
pop
and
pop
mov
mov
pop
push
pop
push
repz
lahf
scas
sti
frstor
dec
inc
ja
add
inc
jg
add
inc
dec
xchg
outsl
sbb
push
insb
push
aaa
loopne
jae
into
cmp
fistps
cmp
cltd
loopne
push
add
cmc
test
pop
int
push
jnp
outsb
pop
mov
adc
jg
repnz
or
fidivs
icebp
adc
fsubrl
xor
mov
aaa
dec
mov
push
fsubr
xchg
jg
mov
sahf
arpl
or
jbe
stc
rcll
jne
dec
imul
xor
hlt
inc
mov
iret
inc
lret
shl
adc
dec
out
movsl
int
or
repnz
pop
mov
dec
sti
loop
popa
rcrl
pushf
pop
fidivl
sbb
xchg
enter
clc
sbb
dec
jge
test
sub
adc
movsl
push
mov
add
or
pusha
iret
fsts
into
or
add
lods
outsl
pop
aad
xchg
popa
jp
cmp
add
and
adc
ja
mov
pop
in
xchg
xor
sub
jge
mov
push
outsb
push
in
jo
sbb
cmp
test
mov
pop
xchg
dec
jg
lock
and
imul
fidivrl
jecxz
data16
adc
xchg
fwait
das
adc
movsb
mov
inc
daa
sub
push
jge
gs
sbb
add
movsl
jne
mov
inc
shll
mov
insl
mov
or
scas
add
mov
lods
jae
mov
jl
mov
pop
lods
mov
push
insb
sub
shrb
stc
pop
in
mov
roll
xor
ret
mov
dec
and
int3
push
test
or
xor
scas
cmpsl
les
orb
sbbb
aam
mov
pop
fcomp
lcall
std
cmp
pop
mov
movsl
mov
rcr
jo
ret
fsub
mov
cwtl
stos
xchg
jns
push
mov
fwait
sub
aaa
or
insb
mov
out
fsubrl
addr16
andl
jnp
sub
shlb
ds
pusha
lock
or
js
into
mov
gs
jp
gs
rolb
hlt
pop
inc
xchg
loop
adc
xchg
or
cmc
mov
pusha
jmp
imul
push
nop
insb
in
lret
scas
or
addr16
outsl
sbb
setnp
lea
mov
lret
aad
mov
sub
add
mov
lcall
cmp
sbb
test
pop
inc
sub
adc
sbb
dec
jo
push
popf
mov
xchg
enter
data16
push
xchg
aaa
out
icebp
and
test
andb
mov
arpl
push
addr16
adc
les
jle
mov
add
inc
ret
jle
xchg
imul
lods
stos
xchg
fs
cmpl
push
or
and
mov
inc
sahf
mov
lds
xor
and
or
xor
xor
movsb
jmp
nop
out
sub
push
jp
inc
or
in
sub
mov
jno
adc
mov
jns
adc
jno
ds
andl
cmp
and
cmp
ja
fcmovne
push
or
js
test
xor
inc
sbb
push
mov
and
pushf
push
fidivl
dec
fwait
push
cmp
mov
dec
pop
divb
fwait
pop
daa
xchg
xchg
xor
mov
jnp
mov
lea
pusha
adc
enter
fbstp
mov
loop
pusha
shr
cmp
mov
push
pop
mov
rorl
cmp
inc
mov
cmc
or
jae
pusha
gs
add
sub
jno
mov
lret
aad
xchg
iret
push
dec
dec
mov
jns
subb
lea
push
push
shlb
aam
add
mov
cwtl
or
shlb
scas
shlb
dec
add
test
cmpsb
aad
jo
inc
and
nop
aam
loop
fs
fwait
loope
push
in
push
mov
ret
cmp
mov
aad
movsb
adc
and
sbb
pop
out
add
outsb
lret
es
or
scas
jo
in
cmp
insl
pop
xchg
cmc
ja
adc
mov
int
lret
and
xlat
mov
pop
mov
lods
arpl
jb
inc
or
les
inc
inc
lock
test
fdivr
scas
lahf
sti
mov
push
push
mov
or
or
inc
add
inc
inc
mov
push
add
and
outsl
fsts
pop
cld
stos
leave
pop
ds
push
in
mov
pop
int3
fdivrl
pop
sub
dec
adc
aam
dec
push
fnstcw
jmp
into
xchg
pop
mov
movsl
pop
fadd
mov
xor
inc
xchg
push
ljmp
cmp
scas
bound
adc
inc
dec
stc
ret
xlat
mov
add
add
mov
test
sarb
inc
jmp
lcall
pop
test
or
cwtl
daa
dec
cli
push
fs
push
fdivrl
cmpsl
fstl
sets
lret
movsb
into
ret
daa
je
shl
test
aas
repnz
jnp
popf
push
jo
neg
lret
cmp
into
call
fsubs
repz
lods
cmpsb
cmp
add
cltd
cmp
dec
lret
sub
mov
xor
aad
jns
sbb
xchg
jae
add
jmp
jb
inc
int
mov
cmpsb
shl
adc
loopne
and
xchg
fcom
dec
and
or
jae
pop
push
cmp
fsubl
loop
orl
jnp
add
rol
pop
sub
out
repz
cmpsl
lds
pop
and
xchg
dec
sahf
insl
pop
es
cmpb
clc
addr16
inc
adc
in
xchg
dec
andb
in
sbb
mov
vaddsd
xor
mov
cmp
pop
icebp
inc
jae
jecxz
ret
lcall
lock
in
cmp
repnz
cmp
fldenv
and
sbb
mov
ja
out
aaa
lret
in
pop
out
inc
js
sahf
mov
xor
pusha
cmp
mov
dec
call
mov
add
push
call
xchg
nop
ret
aas
jo
lods
inc
pop
out
iret
fisttpl
mov
movsl
insb
sbb
cwtl
jne,pn
lahf
cmc
stos
pop
mov
mov
imul
lock
cmp
mov
lock
adc
xor
mov
cmp
inc
mov
xor
dec
mov
stos
scas
nop
inc
pop
adc
push
push
jg
push
mov
jle
xor
mov
and
cli
stos
pusha
outsb
cmp
mov
mov
xchg
sbb
xor
andb
sub
bswap
in
and
cmp
jne
insb
test
mov
das
dec
lods
fmull
mov
ret
inc
pushf
xchg
test
add
pop
nop
fsubr
aas
jae
ss
orb
cmp
push
cmp
dec
sub
push
cmp
jl
pop
xlat
loop
mov
popa
clc
inc
shlb
cmc
dec
fwait
adc
push
push
jnp,pt
xor
enter
jo
or
shrl
adc
adc
xor
sub
xchg
and
adc
push
cmp
out
mov
dec
and
aad
ret
sub
pop
pop
jb
jmp
add
sbb
pop
sti
adc
and
cmp
mov
ret
lods
test
imul
adc
dec
push
inc
iret
cmp
dec
cmpsl
shrb
and
insl
je
lea
jae
popa
ficoms
cmp
lcall
leave
and
and
int
push
inc
rol
int
add
xchg
pop
sub
xor
adc
sub
jecxz
sbb
test
jl
mov
popl
sub
data16
push
push
dec
les
jmp
mov
mov
fisubs
pop
xchg
fst
testb
shlb
js
sbb
sub
or
repnz
lahf
jns
rcrl
adc
in
cmpsb
ficomps
rcrl
repnz
xchg
scas
adc
inc
lea
int3
mov
sub
push
sbb
lods
js
inc
adc
jg
in
xchg
imul
cmp
xchg
inc
dec
mov
das
icebp
cmp
in
cmpsl
fstps
loope
ljmp
sbb
mov
cltd
and
fisubl
cwtl
xlat
xchg
mov
into
or
cmpsl
in
adc
mov
lods
pop
inc
push
mov
iret
sahf
adc
lret
fld1
stos
dec
mov
xchg
lcall
jmp
inc
push
mov
mov
add
out
fs
das
sbb
movsb
xchg
jo
ror
adc
ret
stos
or
sub
mov
add
mov
or
jge
cmpsb
push
mov
sbb
repz
xchg
lods
pop
xchg
inc
and
cs
or
out
mov
gs
inc
adc
mov
jns
lret
mov
lock
sbb
into
mov
imul
xchg
imul
mov
xchg
jg
sahf
ficoml
and
xor
call
inc
or
xchg
gs
scas
push
insb
jmp
cmpsb
sub
or
std
test
call
lcall
shl
js
out
ret
addr16
jae
fiaddl
into
cmpsl
test
clc
arpl
pop
push
mov
shll
sbb
inc
push
add
xchg
jno
clc
test
dec
scas
push
insl
inc
pop
cmp
adc
movsl
inc
cmp
nop
cmpsl
pop
add
scas
test
sti
sub
aaa
pusha
pop
add
and
scas
jmp
daa
mov
sbb
jae
jne
out
pop
dec
orb
enter
or
dec
cs
mov
fstps
sbb
mov
and
jecxz
jno
or
mov
sub
or
dec
movsl
xchg
es
movsb
cmp
xor
xor
out
and
mov
and
repz
and
out
or
mov
out
popf
pushf
adc
xor
hlt
cmc
in
jo
pop
and
ds
rcl
std
imul
jl
push
out
fistpll
adc
int3
xchg
cmp
iret
adc
daa
sub
aaa
outsl
ret
les
scas
jne
jge
or
inc
jp
test
mov
sbb
pop
and
lods
or
cld
and
inc
mov
inc
cmp
lahf
lods
and
in
ret
cmp
push
jl
mov
xchg
or
push
test
add
cld
shlb
out
push
fs
out
or
sbb
cltd
sbb
dec
adc
mov
mov
test
lds
stos
pop
adc
adc
mov
outsl
das
adc
into
ret
inc
shll
fidivl
inc
mov
cmp
sbb
mov
pop
inc
add
adc
out
lret
or
sti
test
aas
and
out
mov
mov
icebp
sbb
sbb
cmp
jns
scas
sub
ret
or
mov
outsl
lahf
mov
int3
cld
rol
sub
add
enter
sbb
jle
aaa
sub
mov
out
notl
insl
and
sar
or
dec
scas
mov
shlb
rcl
mov
imul
test
popa
mov
mov
cmc
stos
repz
mov
dec
inc
mov
push
pop
mov
aam
lcall
popf
sbb
mov
mov
cmc
iret
fs
test
pop
add
adc
js
push
dec
test
insb
test
subl
scas
into
mov
jp
pop
mov
adc
push
adc
test
xchg
mov
out
pop
xor
cmp
loopne
push
bound
dec
sub
push
or
xchg
cmp
jo
inc
int
sub
pop
pop
mov
sbbb
dec
adc
cmp
cs
pop
add
adc
popf
int
mov
ret
pop
mov
sbb
fs
adcb
xor
mov
sbb
into
mov
adc
ljmp
sub
iret
in
fs
jns
rclb
sbb
xchg
mov
push
lods
add
imul
nop
nop
pop
std
pop
jmp
orb
sbb
pop
movsl
into
or
mov
aam
fists
repz
negb
sbb
addr16
lds
mov
xor
adc
adc
add
or
xchg
xor
or
mov
adc
mov
sub
jge
adc
adc
xchg
sbb
leave
mov
adc
pop
mov
and
cmpb
in
push
xchg
jb
or
orl
clc
or
or
sub
jp
or
dec
or
aad
sbb
sub
pop
faddl
negb
fnstsw
test
or
xchg
jg
into
insl
scas
pop
push
mov
xchg
addr16
popf
dec
adc
mov
dec
pop
pop
and
pop
decl
pop
ds
movsl
jo
adc
movb
mov
das
clc
pusha
add
mov
inc
lods
or
stos
jp
hlt
mov
and
imul
popaw
mov
sbb
es
lock
fidivrl
popf
sbbl
push
inc
outsl
fiadds
dec
popa
pop
sub
sub
or
sbb
mov
and
imulb
xor
pusha
sub
jo
sbb
jle
xchg
dec
xchg
pop
ret
add
inc
pop
or
fst
mov
push
js
cli
mov
pop
cmp
push
nop
pop
xchg
push
int
mov
fisubs
in
or
out
add
push
sbb
addr16
es
out
add
and
pop
dec
int3
movsb
and
mov
jg
aaa
jno
cld
in
mov
lock
repnz
fxch
mov
sub
into
cmp
jno
stc
cmpsl
jno
fs
pop
and
loopne
rcr
stc
pop
out
and
pmaxsw
ljmp
jne
or
imul
frstor
and
rorb
in
lods
bound
shlb
je
in
in
mov
pop
test
jp
jns
fcmovbe
push
push
or
mov
sbb
jno
lcall
or
jb
sub
shr
jae
shlb
push
in
jl
test
icebp
xchg
in
outsb
scas
into
xchg
decb
dec
stos
leave
xlat
repnz
orl
dec
in
jne
lahf
xchg
xchg
push
xlat
mov
fistps
sbb
outsb
pushl
cmp
pop
out
jmp
push
jnp
int3
adc
mov
aad
sbb
dec
push
sub
jbe
les
int
sub
mov
jno
jg
std
shlb
icebp
or
jae
in
sbb
and
adc
ja
push
mov
mov
ss
cmp
jp
or
mov
std
cmpsb
push
lret
dec
xchg
or
loopne
ljmp
jno
pop
jecxz
iret
int
sbb
adcb
je
xor
cmpsl
sub
lds
xchg
pop
jg
xor
rcrb
adcb
sbb
inc
sub
sub
daa
lret
cmp
in
fdiv
inc
and
adc
and
fsubrl
repz
pop
mov
inc
faddl
or
mov
rclb
and
clc
lret
sub
push
cmp
lock
das
mov
idiv
inc
sub
mov
xor
out
mov
mov
loope
nop
sbb
push
out
test
iret
jnp
sub
cltd
xchg
popa
xchg
cmpsl
push
mov
pop
mov
cmp
xchg
dec
jp
fs
inc
push
pop
or
mov
jo
pop
js
fidivrl
ljmp
cwtl
adc
in
cmc
test
add
mov
sbb
xchg
pop
pop
rorl
aad
mov
mov
pop
rorb
add
cwtl
jg
loopne
push
adc
mov
mov
cli
cmp
insb
xchg
aaa
cld
push
aad
lods
sbb
cli
jae
mov
ret
imul
inc
popf
push
inc
jo
xchg
add
lcall
push
cmp
out
jo
dec
pop
sbbb
xchg
out
mov
jnp
pop
pop
pop
les
leave
jl
mov
scas
fnsave
mov
ds
orb
cmp
mov
out
mov
insb
cmp
and
lods
and
dec
mov
add
pop
jecxz
mov
cld
sub
pop
cltd
jns
jbe
lods
and
jg
test
cmp
xchg
adc
pop
xchg
test
inc
dec
ret
push
lea
dec
cld
ficoms
ficoms
pop
in
cltd
pop
pop
mov
cli
push
pop
gs
mov
push
lret
cmp
kmovb
and
jl
sahf
addl
rcrb
adc
mov
lods
dec
adc
dec
das
in
in
rclb
mov
cmpsb
cmp
mov
aam
in
sbb
aaa
xchg
pop
call
or
sbb
cld
iret
xchg
add
cmp
out
shl
sbbl
cmp
subb
hlt
cltd
imul
inc
stos
push
and
pop
xchg
mov
jb
push
sahf
aam
pop
roll
sub
cwtl
pop
mov
push
pop
add
lock
dec
shlb
sbb
dec
mov
mov
notb
jo
mov
sahf
inc
mov
mov
fwait
cmpsl
jne
xchg
push
add
push
pop
adc
insb
cmp
outsl
enter
jge
jno
hlt
inc
mov
fistpll
addr16
test
jge
cmp
cmp
imul
fcoms
mov
mov
test
push
outsl
dec
in
or
mov
mov
pop
int3
popa
cmp
aad
in
movsb
cld
fcoms
xor
pop
jnp
sti
mov
ds
icebp
mov
inc
dec
das
jnp
shr
sbb
dec
mov
testl
nop
push
roll
int3
inc
fstps
xor
and
shl
add
lds
aas
popa
xchg
xchg
or
push
ret
lret
push
inc
jmp
push
lea
lods
and
add
add
test
pop
pop
xchg
cmp
xchg
push
ret
cmp
mov
xor
xchg
sbb
repz
stos
leave
add
push
dec
xchg
add
iret
cmp
xor
lea
out
push
dec
cmp
pop
jp
and
mov
push
jae
xchg
and
stos
cmp
mov
sarb
or
int
movb
lret
lcall
and
adc
cltd
es
adc
sti
mov
mov
aam
fldcw
es
mov
inc
cs
push
xor
push
dec
mov
mov
sbb
jmp
and
inc
in
ja
icebp
xorl
cmp
cmp
pushaw
rcll
cmp
mov
mov
and
in
js
jp
ds
imul
adc
push
push
inc
int3
outsl
xchg
cli
xor
mov
push
test
popf
pusha
into
push
inc
cli
push
fsts
mov
or
sarb
push
mov
imul
call
rcr
cmp
iret
pushf
xchg
pop
push
mov
mov
sub
loop
jns
out
push
popf
lret
ss
or
mov
push
sub
jae
fmuls
popf
daa
adc
repz
mov
stos
push
adc
cmc
jae
pusha
cmc
cmp
mov
xchg
leave
sub
xchg
sub
push
xor
and
xchg
scas
pop
jle
enter
xchg
cmp
jo
add
cli
bound
mov
inc
mov
pop
fistpl
xchg
pop
push
mov
cmpsl
aad
jl
fistps
push
lods
pop
push
xchg
shlb
cwtl
fisubrs
es
mov
imul
fildl
fisttpl
lds
inc
das
sbb
cld
inc
jg
es
xchg
dec
push
pop
pusha
notl
pop
sub
pushl
ret
mov
cmp
mov
jns
sbb
outsl
int
test
les
mov
xor
imul
xchg
int
mov
lahf
sar
sbb
sbb
loop
xor
mov
jmp
jge
jnp
movsb
rcll
movsb
cli
xchg
shlb
mov
xchg
pop
jp
outsl
lahf
mov
stos
pop
enter
add
test
sub
loop
out
xor
adc
fmull
push
test
insl
inc
pusha
inc
daa
popf
mov
lret
jo
ds
xchg
push
push
fs
jmp
sub
pop
mov
pop
lods
dec
push
sahf
fwait
sub
xor
ret
addr16
repz
adc
cmpsl
data16
sub
adc
inc
fwait
jl
and
inc
push
shr
pop
imul
xor
mov
mov
jg
push
leave
cmp
push
push
sahf
out
xchg
mov
inc
mov
inc
cmp
mov
jmp
mov
mov
xor
pop
out
cs
and
add
mov
xor
js
mov
stc
mov
adc
out
iret
int3
xor
and
and
mov
loop
jl
xchg
cmpsl
xchg
sahf
and
clc
out
fistl
or
mov
mov
mov
jae
jo
jmp
insb
mov
aaa
aaa
add
cmp
add
xchg
imul
call
bound
lock
push
enter
adc
nop
and
xchg
ds
and
fsub
mov
stos
movsl
add
jns
not
dec
xor
sbb
int3
pop
xor
and
xor
cmpsl
lods
cmp
push
mov
sub
je
pop
xor
test
xchg
dec
pop
sbb
cld
aad
movsl
hlt
pop
push
push
dec
mov
push
in
notb
cld
int
repz
out
inc
push
and
loop
push
gs
cmc
gs
clc
daa
mov
jnp
aas
sbb
sub
shr
dec
sti
xchg
cmp
int
cmp
leave
jnp
xorb
fwait
int
imul
insl
dec
out
popf
arpl
out
adc
jmp
test
fs
add
aad
out
push
or
les
call
in
stos
adc
pop
push
movsl
jmp
das
sti
jb
cmc
push
push
test
mov
xor
mov
cmp
outsl
test
imul
sti
cmp
lds
mov
scas
aas
adc
mov
add
dec
xor
mov
out
xchg
std
jns
scas
or
push
cmp
iret
mov
xchg
xchg
lods
pop
stos
sub
cltd
xor
cmp
mov
shr
in
loope
xor
ss
cmp
orl
xchg
movsl
call
xchg
std
arpl
sub
shl
mov
mov
scas
lods
mov
lret
jmp
push
int3
push
rcl
lret
jl
shll
or
dec
sub
xor
jb
adc
in
mov
es
rcrb
jb
mov
cmp
sarl
in
and
dec
inc
and
push
mov
outsl
mov
or
into
fldenv
test
xchg
mov
xor
mov
pop
int3
mov
xchg
push
in
push
insb
rcr
mov
rep
adc
push
loopne
data16
mov
loope
loopne
inc
lret
push
insb
adcb
jle
xchg
push
inc
jp
ror
sub
fsub
andl
xchg
jmp
pop
cmp
add
xchg
ss
jl
jmp
in
xor
lock
scas
or
repnz
dec
mov
dec
ljmp
fsubr
loop
xor
mov
ret
mov
mov
in
stos
xchg
mov
mov
inc
ljmp
mov
outsl
in
and
mov
jmp
mov
jle
mov
add
ficompl
aaa
pop
rcl
mov
jnp
aam
cld
pop
dec
xor
xchg
inc
xchg
mov
sub
shll
dec
fwait
cmp
lahf
sti
lret
jle
fwait
mov
mov
lock
bound
cli
lret
pushf
jae
lret
test
mov
ret
loopne
repnz
pop
sbb
adc
or
mov
inc
cmpl
sub
test
adc
icebp
push
xor
lret
push
scas
mov
rcll
popf
loopne
mov
fistpl
pop
push
lock
lret
dec
lods
dec
add
add
movl
inc
inc
insl
cld
pushf
pop
inc
push
and
stc
mov
sub
in
push
movl
xchg
jecxz
jmp
dec
std
repnz
pop
add
enter
jae
xlat
cmp
lods
adc
leave
sub
imul
sbb
sub
adc
addr16
cmp
mull
sahf
or
movsl
iret
mov
jecxz
stos
inc
pop
jmp
or
mov
in
fs
mull
cmp
xchg
push
sbb
ds
in
call
xor
roll
dec
inc
clc
dec
test
fs
movsl
aaa
aad
add
mov
mov
lds
rcr
jae
cmpsl
push
xchg
fadds
or
push
pop
insb
in
lods
repz
dec
and
pop
push
jecxz
jnp
jno
rorl
clc
loopne
pop
int
fsubrs
imul
cmc
shll
adc
mov
js
in
pop
dec
mov
mov
ja
andb
test
aas
aas
dec
inc
dec
or
out
and
test
mov
push
lcall
pop
loop
xor
mov
sarb
jl
xchg
push
push
push
sub
leave
mov
jno
std
dec
jne
lret
sub
stos
sbb
mov
popa
or
fst
aad
mov
mov
cmp
push
stos
sbbl
inc
in
sahf
repz
cwtl
push
cwtl
cltd
xchg
mov
out
pop
lock
push
out
lods
xor
inc
lret
mov
test
mov
xor
ljmp
pop
fdivrp
ret
push
dec
lock
popf
mov
xor
test
fldcw
jp
bound
fsts
xchg
loopne
jbe
adc
or
leave
jle
cmp
cli
lret
adc
mov
ja
jle
test
lret
dec
fildl
jl
mov
addr16
shl
mov
movsb
pop
pop
lret
push
jge
aad
mov
lret
fidivrl
movsl
lret
pop
xchg
cmpsl
sbb
les
andb
adc
push
mov
jne
out
jecxz
sbb
push
xchg
xor
pop
in
lret
mov
dec
mov
push
subb
stos
jle
or
xchg
mov
pop
or
push
enter
xchg
dec
fstp
sbb
je
mov
xchg
out
pop
sbb
mov
jge
xchg
shll
mov
imul
mov
lret
push
sarb
jne
inc
int
fldcw
enter
sbb
add
inc
cwtl
in
sub
in
cs
sub
lds
lahf
lahf
fwait
test
ss
adc
pop
in
inc
sarl
xor
call
dec
scas
add
ficoms
pop
push
fdivrs
add
xor
xchg
inc
dec
scas
loope
movsl
inc
and
aam
pusha
scas
rclb
das
loopne
aas
jns
cmp
rcll
cmp
out
ljmp
adc
cmc
jl
in
push
xlat
aas
add
and
shll
sub
mov
mov
enter
add
sub
xchg
and
adc
outsb
sahf
popa
xchg
inc
in
in
int3
sub
add
xlat
cwtl
push
cld
ds
jb
inc
call
loope
sti
dec
xor
incb
pusha
fildll
popa
adc
inc
adc
jnp
mov
sbb
jb
add
adc
lret
shr
inc
xchg
adc
xor
mov
lds
sbb
lret
inc
xchg
pop
pushf
sbb
pop
sub
jecxz
sbb
bswap
sbb
test
lods
sbbb
enter
xor
add
and
push
into
cld
xchg
inc
das
or
loope
jle
sbb
adc
cmp
js,pn
pop
pop
mov
jp
insb
rorl
scas
insb
mov
or
adc
cmp
cmp
pop
mov
xchg
lcall
add
sbb
mov
xchg
and
push
pop
adc
xor
xchg
cmp
jo
push
aad
mov
lcall
stc
in
xchg
data16
pusha
push
sbb
dec
sbb
adc
mov
inc
lahf
je
xchg
jge
lret
loop
sub
adc
stc
xor
aaa
cmpsl
es
lods
and
dec
ljmp
sbb
cmp
cli
test
cmp
xlat
adc
loop
cmp
jae
or
and
adcl
dec
dec
cmpsl
pop
test
out
mov
out
mov
std
mov
pop
in
xchg
lret
mov
out
mov
and
and
adc
and
push
xchg
mov
sub
loop
fucomi
jne
les
jns
stos
movl
mov
mov
icebp
leave
sub
sub
push
out
loop
aad
orb
push
rclb
jg
push
xchg
sbb
std
arpl
jl
shl
jp
push
shrl
orb
cs
cld
lds
shlb
mov
cmpb
or
dec
mov
mov
sub
into
pop
lcall
cltd
adc
idivl
cli
inc
adc
iret
push
repz
pushf
test
lret
shr
mov
adc
inc
adc
mov
mov
loop
pop
and
xor
rol
mov
push
xor
xor
cli
ja
lds
push
ja
xor
pcmpeqd
out
xchg
and
mov
lods
dec
push
or
mov
sbb
and
loop
adc
gs
and
sbb
out
mov
aas
push
sbb
mov
popf
inc
push
shr
out
movsb
out
insb
mov
in
movsb
mov
mov
into
in
imul
inc
bound
cmp
test
mov
add
cs
pop
imul
mov
lahf
insb
stos
aad
jp
inc
xor
xchg
lahf
pop
push
mov
rorl
cltd
scas
test
jp
fisttpl
and
int3
ds
in
mov
fwait
xlat
stc
loopne
jo
rcll
pavgb
mov
sub
jle
stos
mov
out
cmp
adc
push
pop
stos
sub
imul
aas
jp
mov
ret
cmpsl
xor
mov
mov
dec
ret
ss
in
cmp
sbb
es
push
lods
fs
pusha
push
mov
and
mov
addr16
cmp
divl
inc
hlt
jp
lahf
jo
inc
xor
add
push
scas
sub
das
or
pop
cmc
sub
fcoml
insl
mov
movsl
in
adc
xchg
jno
or
cmp
cmp
jle
pop
btc
lret
xchg
aad
ret
pop
cmc
ficoml
pop
xlat
jne
lret
lahf
lods
push
sbb
push
jge
gs
cmp
pushf
mov
leave
lahf
sbb
adc
mov
pop
ss
mov
fnstenv
mov
mov
out
mov
pop
mov
cltd
cmp
fs
clc
mov
mov
cmp
or
xchg
sbb
inc
jnp
test
jg
lods
mov
adc
popf
out
sti
cmpsl
orb
inc
insl
jo
stos
ret
call
or
add
cmpb
mov
xor
or
scas
rcrl
push
cld
lods
add
push
and
xor
push
mov
sub
sti
std
inc
fucomi
test
and
out
add
test
lret
leave
mov
std
repnz
inc
rcrl
lahf
push
gs
and
rorb
insl
jne
stos
cmp
movsb
jecxz
repnz
mov
sub
jno
repnz
pop
std
les
mov
fstl
push
mov
push
fistl
jb
hlt
imul
mov
nop
mov
xchg
ja
adc
pushl
mulb
cmpsb
push
imul
add
mov
cmpxchg
or
or
and
inc
in
sub
jecxz
and
sbb
push
inc
and
movsl
jp
sbbb
ja
je
mov
mov
push
test
sub
mov
sbb
insb
and
stc
pushf
jb
jmp
lret
cmpb
pop
cltd
xor
add
push
jmp
mov
aaa
insl
in
jb
sti
out
mov
hlt
mov
inc
jp
add
jmp
movl
mov
xor
ja
jns
pop
leave
mov
xor
sahf
and
mov
test
lret
mov
lds
imul
xchg
and
imul
cltd
xchg
adc
lods
pop
or
ret
dec
mov
stc
xor
inc
xor
cmp
cmp
test
add
mov
clc
mov
cs
lds
xor
or
push
fiadds
mov
dec
sub
add
push
test
pop
out
add
inc
mov
fimuls
sbb
push
pop
push
fdivl
jl
or
inc
fwait
es
pop
fucom
outsl
pop
mov
out
ljmp
mov
shrl
mov
fcoml
popf
imul
pop
and
adc
popa
jg
xor
ret
xchg
loopne
pop
ss
lret
or
ljmp
mov
ss
and
xchg
movsl
ds
stos
out
dec
js
scas
mov
out
or
aaa
xor
aas
lea
push
stc
fidivl
xor
movsl
mov
lcall
fwait
int3
movsl
aam
jmp
and
test
sub
adc
xchg
mov
pop
dec
cmp
pop
in
push
enter
add
or
pushf
xchg
test
xor
jg
adc
xor
and
std
add
repnz
aad
lcall
push
jno
jne
les
inc
pop
sub
aas
fimull
cltd
push
pop
std
mov
and
mov
loope
dec
push
mov
das
clc
jb
scas
test
lods
push
mov
mull
or
jns
and
sub
dec
stos
pop
hlt
pop
stos
jns
outsl
inc
or
add
mov
aaa
mov
jmp
xchg
mov
insb
push
xchg
xchg
xchg
outsb
add
mov
mov
nop
lea
pop
sarb
add
daa
lods
mov
adc
mov
pop
into
adc
insl
inc
mov
pushf
inc
popa
xor
dec
mov
insb
push
loop
mov
andl
std
cltd
push
adc
leave
mov
ret
mov
pop
sub
je
dec
idivb
movsl
stos
fsts
xchg
ret
jg
inc
push
add
add
aad
xor
nop
push
lea
and
stos
mov
lods
in
adc
push
jmp
sar
lods
outsb
and
sbb
sub
in
lahf
add
or
dec
pop
leave
add
sti
inc
push
into
in
mov
sub
mov
mov
sti
mov
pop
lods
addb
fwait
mov
sarb
pushf
int
push
iret
mov
inc
ss
lcall
add
pop
add
mov
push
in
lahf
lcall
outsl
or
adc
out
stos
dec
aas
and
dec
in
add
mov
mov
add
mov
and
stc
jge
jge
daa
push
lcall
in
sub
jge
ja
out
sbbl
push
orl
mov
loope
jmp
call
pop
xchg
ljmp
xor
sahf
lods
cmpl
pop
js
iret
fnstsw
jnp
cmp
bound
enter
adc
inc
jp
xor
sbb
sbb
shl
and
jl
notl
ret
les
divb
pop
push
jbe
push
jecxz
push
dec
test
or
fildl
jmp
jmp
addr16
sbb
or
adc
fwait
je
movsl
xchg
pop
cli
nop
mov
cmpps
push
dec
dec
add
into
repz
push
xchg
dec
mov
pop
dec
dec
adc
jns
insl
pop
stos
imul
jae
dec
sahf
ror
imul
arpl
push
inc
enter
mov
rcr
jle
push
movsb
fdivp
pop
outsb
jns
adc
in
cmc
subl
jg
ja
js
mov
sub
mov
arpl
mov
xor
push
jecxz
push
pop
push
pop
imul
xor
sbb
mov
daa
arpl
aas
stos
rcrl
adc
push
pusha
fs
fisttpll
in
or
xchg
in
scas
sbb
mov
sahf
lods
sub
stc
cmc
add
push
jno
rcr
lods
out
xchg
vmread
cmp
adcl
fnstsw
adc
push
push
ljmp
sbbb
lods
out
inc
cmp
sbb
cmp
or
xlat
je
adc
das
mov
xchg
repnz
pushw
xor
stos
pop
out
lods
out
xchg
imul
fildl
and
add
mov
xor
bound
mov
sbb
and
sbb
rcr
ret
xlat
inc
push
stos
das
stc
mov
cli
add
out
lret
push
xchg
ljmp
mov
scas
out
les
fldenv
outsb
mov
cmp
in
xor
xchg
jg
pop
pop
pop
pusha
mov
hlt
mov
in
repnz
sub
adc
pop
mov
push
data16
mov
ror
out
in
fs
sbb
mov
rorb
sbb
inc
sbb
nop
pusha
stos
add
loop
mov
add
pop
jp
pop
push
test
push
xor
mov
cmp
adc
mov
jae
pop
dec
pushf
cs
cmc
flds
stos
inc
jae
jl
lods
jns
xchg
inc
pusha
out
fwait
imul
fdivr
xlat
mov
push
sbb
jne
mov
das
js
dec
cmpb
push
xchg
or
pop
jo
or
xchg
test
mov
cwtl
add
cmpxchg8b
and
pop
add
mov
sbb
add
rolb
int
and
pop
ret
mov
aaa
or
push
scas
popf
cmpsl
add
xlat
jnp
jno
filds
mov
shrl
jo
loope
les
push
cmp
mov
pop
push
test
push
jg
mov
xchg
xchg
mov
outsl
push
pop
ljmp
jge
mov
sahf
pop
aam
mov
dec
adc
fwait
call
sub
sahf
sub
sbb
xchg
or
lods
std
stos
cmp
inc
push
push
cli
movsb
test
xor
sub
fstps
jp
mov
cmp
mov
jno
jecxz
stos
xlat
and
aam
rcl
jecxz
jae
dec
movsb
cmp
dec
xor
mov
lret
out
push
int
dec
mov
jp
xor
sub
mov
mov
xchg
pop
out
cmp
negb
fwait
jge
leave
ja
ficoms
xchg
insb
ret
movsb
or
mov
pop
loop
out
push
cwtl
seta
test
test
mov
xchg
inc
xor
aaa
add
push
cmp
pop
cli
adc
mov
cmp
xor
push
call
ret
test
pop
mov
pop
cmp
nop
and
sub
inc
cwtl
sub
xor
lcall
dec
iret
push
iret
stos
ss
xchg
std
jb
addr16
jg
popf
jecxz
push
loopne
or
fsub
movsl
add
adc
mov
popa
fmul
jle
stos
xor
add
fimuls
shrl
sbb
fs
scas
mov
pop
push
call
mov
jg
pop
je
stos
inc
arpl
pop
idiv
ficoml
mov
repnz
cmp
add
cli
push
lea
mov
push
rorl
push
sub
aam
cmp
xor
cmp
jo
mov
cmpsl
push
jns
push
inc
outsb
jbe
fstps
or
sub
popa
js
in
push
test
or
inc
mov
cmp
pop
inc
jecxz
inc
les
outsl
cmp
arpl
sbb
cmc
hlt
mov
xchg
pop
movsb
push
sub
in
sarb
js
fisttpl
lods
jg
push
sub
jae
adc
fwait
cmpsl
popa
fisttpl
dec
pushl
xlat
pop
pop
push
pop
xchg
push
sti
push
loopne
sbb
sub
cs
and
loop
sti
push
and
xchg
inc
sbb
or
mov
shrb
orb
pop
jnp
pop
sub
scas
bnd
add
scas
sbb
jmp
dec
fistpll
and
sub
xlat
xor
xor
movsb
test
mov
dec
xchg
popf
mov
repz
fdivl
jp
js
data16
outsl
imul
movsl
xchg
mov
mov
sbb
xor
push
out
out
adc
xchg
sub
add
mov
and
jae
sub
in
add
cld
lahf
loope
fimuls
jnp
shrl
ds
fildll
in
aaa
int3
add
mov
mov
add
jo
insl
jnp
jbe
xchg
push
xchg
sbb
jo
fists
movl
out
dec
xchg
xor
jle
adc
psubsw
add
cmp
es
adc
enter
out
xchg
js
pop
sbb
jbe
inc
xor
jmp
popa
outsb
imul
mov
jl
mov
mov
jne
dec
divl
push
sub
ss
jg
mov
xor
jae
mov
lret
jl
ret
pop
arpl
jge
jb
sti
jo
fidivl
push
repz
push
pop
mov
adc
cli
cmp
fnstsw
add
xchg
xor
add
jge
stos
negl
ss
fmul
push
xchg
cli
repnz
imulb
dec
jmp
int3
js
inc
ds
rclb
in
rclb
fucomp
out
or
scas
sub
cmpl
pop
repnz
pop
in
dec
mov
push
ret
out
cmpsb
inc
mov
jo
popf
ret
jp
xlat
sub
fsubrl
jb
push
mov
sub
xchg
add
xchg
scas
dec
outsb
in
xchg
cmpsl
movsl
add
into
rcrl
add
aam
lcall
or
pusha
sbb
daa
or
mov
push
test
repz
popa
data16
mov
int3
not
scas
mov
adcb
jnp,pt
xor
adc
lock
mov
test
inc
jge
pop
inc
cmpsl
cld
icebp
stc
cli
fsubl
fs
inc
and
sbb
movsl
dec
imul
int
mov
mov
cmp
imul
fisttps
cmpl
test
xchg
out
iret
in
xor
mov
mov
inc
outsl
loopne
mov
cmp
daa
addb
stos
xchg
ds
or
ficomps
aad
ljmp
arpl
imul
push
adcb
inc
or
cld
jmp
mov
cmp
push
lea
adc
shr
mov
xchg
pusha
fbld
or
inc
or
or
mov
das
xor
xor
pop
push
js
int3
mov
sti
mov
cmc
in
mov
in
jmp
mov
sar
lods
add
out
push
mov
in
push
cli
loop
jnp
arpl
filds
lock
pop
shll
pop
adcl
jo
decb
imul
cltd
dec
inc
gs
xor
dec
mov
in
add
enter
mov
pop
xor
xchg
pop
repnz
into
movb
xlat
fldt
add
clc
jbe
mov
scas
mov
dec
dec
adc
pop
movsb
pop
jbe
add
sub
sub
cmp
dec
xchg
sub
leave
or
cli
sbb
jne
dec
stos
ja
pop
nop
and
mov
fstps
mov
cmpsb
lret
arpl
push
imull
mov
or
jae
mov
cmpsb
psubusb
lret
dec
ret
enter
sbb
mov
insl
sub
sbb
aaa
scas
push
mov
lods
movsb
mov
push
iret
mov
xchg
dec
sahf
dec
inc
mov
jl
add
push
into
jge
cs
rclb
mov
xlat
or
in
inc
inc
test
add
ljmp
jl
mov
popa
jmp
mov
gs
sbb
and
adc
xor
jmp
push
lea
cmpsl
dec
pop
mov
fldenv
inc
jo
cltd
adc
jae
or
dec
jp
orl
data16
movsb
push
orl
mov
pop
inc
pop
sahf
call
or
ja
mov
fdivl
nop
mov
jo
push
and
negl
sbb
mov
inc
mov
push
mov
or
push
mov
dec
data16
aas
out
adc
les
lock
fstps
cwtl
push
xor
mov
aam
jnp
test
lock
sbb
sub
mov
xchg
jnp
adc
inc
daa
inc
adc
outsb
js
xchg
test
fstpl
nop
sbb
flds
cs
es
inc
and
cltd
movsl
dec
sbb
mov
jbe
je
call
add
jle
push
cmc
mov
mov
test
popa
les
outsb
xchg
out
cmp
cmp
lods
add
call
and
sub
pop
outsb
push
cmp
dec
fadds
inc
or
mov
repz
add
xchg
and
jmp
negb
add
jg
loop
and
out
pop
sbb
jge
fildl
or
inc
adc
std
scas
inc
adcb
add
adc
cmp
cmpsb
xlat
divl
mov
sbb
adc
cwtl
jne
nop
gs
add
inc
push
movsl
jl
insl
cltd
sub
ret
pop
or
test
cmp
xchg
mov
lods
bound
lret
jnp
mov
inc
sbb
jg
lods
clc
xchg
or
and
pop
adc
sbb
or
in
xor
loope
mov
add
cmp
aaa
das
enter
pop
out
xchg
aas
in
icebp
xchg
adc
in
into
dec
mov
lret
push
push
es
sub
addr16
fstp
and
imul
adc
js
fs
sti
xchg
das
pop
mov
mov
xchg
mov
and
mov
xor
mov
loopne
fwait
sbb
imulb
mov
pop
fdivrl
clc
cmp
add
ds
mov
loopne
ljmp
mov
sti
xor
in
cltd
inc
adc
sub
sub
fcoml
sbb
mov
pop
stc
ss
inc
pop
push
les
and
sub
das
int3
mov
pop
inc
je
fwait
dec
loop
inc
xchg
jge
cmp
push
rclb
ss
mov
xorl
imul
loope
jmp
mov
in
pop
sbb
lret
jg
out
jg
int3
adc
push
mov
insb
mov
out
dec
mov
bound
cmc
cmp
enter
mov
sti
shl
enter
jno
sbb
les
gs
sub
addr16
out
jmp
cli
ret
loopne
into
cmp
cli
adc
in
fwait
xor
and
fwait
sub
mov
or
jecxz
inc
jl
out
shll
pop
push
or
jnp
mov
ljmp
sahf
cmp
inc
mov
into
outsb
push
mov
hlt
inc
sub
aad
or
mov
subl
inc
ljmp
addr16
and
xchg
sbb
ja
push
enter
lcall
dec
test
jmp
and
jg
pop
loope
cmp
pop
inc
cs
or
mov
aam
es
jb
xchg
cmp
dec
ret
cs
mov
mov
in
dec
js
cmpsb
dec
int3
adc
in
and
adc
cwtl
jp
jnp
sbb
mov
filds
jne
xchg
jp
ss
aas
and
mov
push
jb
push
repnz
js
and
leave
dec
mov
mulb
xchg
sbb
test
add
xor
adc
sbb
bound
mov
inc
adc
int
outsl
mov
test
movsb
inc
ss
xor
xor
stc
push
test
xchg
pushf
jle,pt
and
icebp
pop
sub
call
dec
mov
sub
stos
ja
mov
dec
mov
ja
nop
mov
mov
mov
mov
imul
xchg
cmp
jo
rorb
popa
cmpsl
inc
div
data16
inc
cmc
fistps
mov
mov
cmp
xlat
mov
push
stos
add
js
rol
mov
push
test
fcmovu
add
cmp
mov
jle
xchg
jp
push
stc
add
add
mov
pop
jmp
lret
or
loop
pop
xor
imul
pop
sbb
addr16
push
dec
stc
or
insb
les
ficoms
cmp
call
jmp
int
int
push
repz
pop
or
jl
enter
jo
sahf
lock
add
xlat
add
push
pop
sti
addb
push
add
dec
out
push
mov
fdiv
xchg
lock
pop
test
test
js
pop
rcr
ffreep
xor
mov
out
adc
data16
lea
mov
pop
or
imul
jle
aaa
push
pop
push
xor
pop
add
es
mov
dec
dec
fadd
pushf
stc
lcall
xchg
cmp
repz
and
loop
sahf
out
fs
stos
mov
inc
dec
aas
sbb
adc
inc
popa
ja
lods
sub
pusha
fbstp
out
dec
cmp
dec
sbb
push
push
movl
mov
inc
mov
outsl
ficoms
pushl
mov
and
out
add
movsl
inc
jle
jmp
mov
mov
mov
lret
int3
std
jbe
jp
mov
movsb
add
sub
push
fisubrs
icebp
jae
rorb
add
scas
add
outsl
dec
in
cmp
dec
pop
popa
clc
push
push
icebp
mov
sub
outsb
leave
jbe
jbe
cmp
xchg
aam
mov
cmp
addb
loope
push
das
out
lock
jl
into
xchg
sub
mov
sub
mov
pop
jbe
outsb
jp
fwait
pop
jne
jle
es
and
jnp
data16
jecxz
pop
mov
mov
icebp
mov
sub
lret
sub
cli
mov
pop
mov
sbb
mov
xor
push
cwtl
inc
insb
add
mov
aaa
sbb
inc
inc
aam
repnz
dec
aam
add
in
in
adc
rcr
inc
divl
pushf
inc
sub
xor
sub
clc
clc
lret
pop
cmpl
lahf
ss
data16
xchg
xchg
or
in
loop
push
mov
loop
mulb
cmp
test
sbb
dec
je
jp
test
sahf
inc
inc
jnp
push
mov
push
sti
ss
push
push
push
sbb
shl
jbe
or
out
xchg
push
test
sbb
and
fwait
adc
sbb
aad
daa
jbe
mov
add
sub
pop
notb
add
push
mov
xchg
sti
out
stc
push
xchg
mov
xor
cmp
and
push
pop
xor
js
sbb
inc
push
mov
xor
jl
mov
jbe
add
push
xlat
mov
fiaddl
pop
push
add
imul
or
jecxz
adc
add
push
faddp
inc
xchg
lcall
ret
dec
or
int
mov
cmp
loope
test
cmp
int3
sbb
pop
mov
cld
into
mov
cmpsb
ret
and
or
ret
pop
jge
clc
sbb
cmpb
lret
mov
imul
lret
xchg
or
pop
and
shlb
and
iret
xor
loopne
dec
pushl
mov
xor
aas
sbb
mov
lcall
stos
sbb
mov
inc
je
add
sbb
cli
inc
bound
xlat
cmp
test
cmp
lods
xor
iret
adc
popa
lcall
sub
arpl
and
mov
iret
cmp
add
mov
push
xchg
pop
repnz
xor
jno
jns
mov
frstor
hlt
inc
insl
ja
mov
cmpsb
xor
mov
dec
xchg
mov
int
push
adc
stos
je
and
loopne
into
in
add
inc
mov
mov
add
fwait
jge
adc
xchg
sbb
mov
dec
push
sti
pop
dec
in
pop
outsb
push
cs
jbe
xchg
rclb
clc
stos
mov
imul
repz
mov
or
ret
out
push
adc
cmp
cwtl
sub
call
in
addr16
fnstcw
adc
mov
jne
fisttpll
pop
sub
aaa
mov
scas
fsubrs
loop
repnz
xchg
test
ret
clc
andl
fildll
adc
das
xchg
add
add
shl
mov
in
jmp
inc
sbb
xor
lcall
push
and
loopne
sbb
out
fidivs
int
mov
push
aad
stos
aas
pop
push
loopne
push
cmp
jb
rorb
addb
inc
mov
les
sbb
mov
jo
stos
aam
mov
decl
loopne,pt
mov
shlb
mov
idivl
fs
cmp
aas
xchg
push
out
xor
test
inc
stos
andb
mov
fsub
mov
fimuls
sub
in
and
pop
xchg
ret
mov
les
fisttpl
bound
hlt
fnstsw
push
jecxz
mov
or
push
imul
sti
lds
orl
dec
pop
cmp
and
mov
iret
fbstp
repnz
push
dec
mov
cmp
insb
or
dec
bound
or
mov
sub
push
add
adc
mov
call
add
mov
ss
jp
push
pop
xor
mov
rcrb
lods
and
mov
ss
in
insl
and
mov
jbe
cmp
jbe
jecxz
jg
push
in
and
test
add
sbb
fldcw
push
push
mov
ja
xor
mov
lret
cmc
lds
rolb
cmpsb
xor
call
insl
push
in
adc
cltd
sub
mov
cmp
pop
mov
jle
sti
pop
daa
jo
lahf
out
fdivl
or
push
xchg
or
dec
pop
fwait
xchg
jp
and
mov
or
jp
arpl
fs
jg
add
enter
addr16
sahf
xchg
stc
iret
sbb
imul
sti
push
loope
and
nop
dec
fcmovbe
push
xchg
push
loopne
ja
notb
cwtl
adc
jle
cs
call
icebp
add
or
orl
add
push
adcb
out
sbb
fcomip
cmc
mov
adc
mov
adc
fstpl
jae
lock
dec
lods
test
adc
mov
test
add
fnsave
sub
mov
sbb
scas
cmpsb
xorb
mov
gs
push
push
inc
push
pop
jb
loope
js
xchg
mov
popa
pop
daa
mov
test
pop
sub
push
lcall
lods
cmp
and
stos
popf
and
lahf
jg
cmp
fdiv
stos
jle
pmulhuw
in
and
fstps
popa
add
xchg
loopne
das
xchg
jo
cmc
cld
ljmp
jb
push
inc
pusha
gs
fwait
xchg
out
pop
add
rcrb
je
adc
fldl
rolb
shl
and
jge
jge
dec
mov
and
pop
xchg
jp
or
cli
xor
inc
imul
arpl
push
fisttpl
inc
mov
cmp
lcall
jmp
push
cmovne
xor
loop
add
inc
clc
mov
adc
jl
add
adc
cmp
and
jp
dec
stc
jmp
or
xor
jmp
mov
mov
xor
fdivr
xchg
bound
pusha
dec
xlat
inc
stos
inc
dec
lds
in
xchg
adcb
push
stc
leave
push
sub
out
dec
mov
jne
test
fs
stc
aas
mov
pop
iret
ret
mov
pop
stos
repz
outsl
adc
loope
mov
mov
outsl
or
rcr
mov
enter
xor
push
inc
ficoml
and
jmp
lds
jb
pop
push
mov
ret
outsb
jb
sub
ficompl
mov
out
arpl
ret
jmp
cmp
imul
jle
adc
push
jg
inc
jo
ret
insb
ss
idiv
cmpsb
add
scas
sub
clc
addl
das
mov
sbb
int
stos
enter
leave
jmp
lods
mov
lock
fs
inc
pusha
push
sbbl
mov
xchg
mov
mov
mov
cmp
out
ficoml
add
out
mov
lret
nop
mov
ds
popa
das
enter
gs
mov
test
sbb
out
mov
cld
ficomps
mov
int
or
push
mov
sti
popa
nop
sbb
push
mulb
inc
mov
leave
dec
fucomp
mov
mov
imul
lret
lock
adc
and
and
sti
decb
cmp
push
jmp
or
imul
jb
pop
mov
pushl
push
std
repnz
sbbl
mov
in
shlb
jge
jae
and
daa
int3
pop
out
adc
imul
sahf
mov
sarb
push
pop
ficompl
mov
mov
xchg
popf
jae
mov
mov
test
cmp
mov
and
shll
call
xchg
bound
add
lock
xchg
cli
adc
outsb
cmp
xor
mov
adc
mov
xor
push
mov
cltd
cmp
loope
push
xchg
mov
fisubs
xor
dec
push
add
outsl
push
mov
and
in
rcrb
mov
dec
imul
push
add
adc
push
inc
cmp
push
pop
test
xor
imul
fisttps
mov
sti
xchg
nop
mov
inc
inc
stos
in
test
lcall
into
shr
clc
pushl
mov
jge
not
push
pop
fst
rcll
lahf
mull
insl
jmp
dec
cmp
sbb
rolb
add
push
or
data16
stos
clc
xor
aad
jb
scas
int
lcall
lea
sbb
adc
lret
std
sbb
stos
dec
fldcw
ja
outsb
daa
shrl
cmpsb
dec
outsl
mov
lcall
sbb
or
xor
mov
outsl
lock
or
clc
int
rclb
pop
cltd
dec
and
cs
sbb
popf
popf
dec
rorl
aam
add
ss
int
jnp
inc
das
leave
mov
lods
mov
sbb
push
outsb
xchg
adc
sbb
in
loopne
out
cmc
int3
into
fs
mov
in
inc
pop
in
cmp
sar
pop
movsl
pusha
sbb
pop
sbb
cmp
inc
mov
mov
mov
popf
out
repz
pop
mov
xchg
xchg
dec
stos
and
fwait
and
shlb
mov
or
pop
mov
push
mov
add
mov
xlat
out
cmpsb
iret
add
ljmp
pop
jns
aaa
mov
and
mov
inc
and
notb
xchg
rcrb
push
dec
xchg
pop
mov
out
cmp
leave
jle
add
aaa
jl
mov
mov
insl
movsb
or
adc
das
sbb
outsl
xor
nop
dec
push
je
and
movsb
ljmp
arpl
divl
mov
loopne
imul
lret
xor
mov
push
arpl
enter
lods
push
mov
repnz
into
cmc
cmp
lcall
adc
loope
imul
cmpl
jno
add
test
xor
cmpsl
in
jns
repnz
int3
jl
adc
mov
xor
hlt
loopne
inc
push
adc
aas
dec
sub
das
cmp
cld
jnp
scas
jae
int3
insb
push
mov
int
pop
xchg
fldcw
mov
pop
mov
add
les
push
sti
pop
jb
aad
mov
pusha
adc
xchg
pop
iret
stc
fldl
cld
sahf
das
lods
inc
js
lret
sbb
aas
mov
jbe
mov
push
lods
mov
cli
add
push
jmp
pop
xlat
sub
add
test
rcr
pushf
push
daa
in
rorb
pop
xchg
mov
xor
loopne
add
in
mov
sub
sbb
sbb
mov
pop
sub
movsb
roll
in
fisubl
inc
jb
ficompl
shrb
imul
and
xchg
daa
push
daa
push
xchg
pop
jp,pt
or
mov
jecxz
inc
dec
fcompl
inc
and
into
jb
jg
shll
and
addr16
nop
je
dec
hlt
xchg
and
sarl
jg
in
out
and
test
xor
in
mov
adc
adc
mov
scas
jmp
adc
jg
daa
sbb
cltd
jge
mov
lahf
ja
imul
pushf
pop
add
shll
mov
into
or
mov
xchg
andb
jmp
fistpll
dec
dec
pop
clc
insl
inc
rcrl
insb
into
pushf
add
lock
sbb
subl
cmp
loop
cmp
sub
push
jge
sti
dec
shrb
or
ss
or
and
sbb
and
adc
sahf
dec
outsb
scas
mov
xor
fildll
out
out
cmpsl
mov
sbb
cmp
add
and
sub
ljmp
jle
insl
sbb
into
cmp
sbb
daa
jbe
sub
cld
cmp
sbb
mov
mov
lods
daa
jl
and
inc
lea
jecxz
clc
mov
push
in
jge
ja
jle
jno
into
out
push
push
andb
in
xlat
mov
repz
push
movsl
pop
mov
ljmp
int
mov
rclb
cmc
fwait
sub
cs
mov
cli
pop
iret
addr16
pop
mov
loopne
cmp
pop
hlt
xor
push
ret
adcb
dec
xchg
cmp
cmp
xorl
insl
pusha
fidivrl
out
repnz
mov
into
faddp
and
jecxz
scas
sub
dec
jb
xchg
stos
std
movsb
out
in
mov
psubsw
sbb
mov
jl
sub
jmp
pop
fnstsw
pop
aaa
iret
arpl
call
test
or
and
xchg
xor
sub
movsb
nop
mov
xor
xlat
vcomiss
add
clc
outsb
dec
pop
pop
push
rclb
test
aaa
out
xlat
fnstsw
jge
aam
mov
mov
pop
mov
sub
xchg
dec
mov
dec
loope
sbb
sarl
arpl
sub
cmp
scas
es
mov
movsl
lods
and
pop
repnz
push
gs
int
jno
out
add
popl
sub
pminub
rcll
cmp
xchg
dec
bound
jne
mov
lds
test
fwait
rcrl
outsb
and
sub
mov
fisubs
lods
mov
and
scas
add
push
sbb
sub
mov
mov
je
inc
mov
loope
cwtl
jmp
adc
dec
pop
aam
or
xchg
xchg
inc
inc
adc
aam
push
sbb
mov
inc
das
push
lret
repnz
ljmp
call
pop
rcll
xor
dec
mov
xchg
add
lret
movsb
mov
ds
nop
mov
cmp
pop
lods
lds
lret
mov
mov
mov
cmp
shll
jb
lock
stos
shlb
mov
stc
and
dec
mov
cmp
subl
addr16
dec
adc
in
pop
xlat
and
push
add
mov
lods
inc
inc
lahf
pusha
out
int3
dec
adc
pop
xchg
loop
cmp
movsl
out
lock
popa
dec
pushf
xchg
inc
jl
outsb
push
cli
jns
push
add
rcrl
shl
sti
jg
or
mov
imul
xorb
pop
outsl
movsl
movb
mov
mov
jb
mov
sahf
dec
mov
fsubrl
lock
add
mov
inc
dec
and
push
sub
addr16
add
int
test
sbb
lret
sahf
cwtl
dec
sub
and
daa
outsl
jne
mov
cmp
icebp
cli
mov
add
inc
cmp
pop
das
push
stos
int
xchg
stos
lret
dec
mov
ss
icebp
stos
lods
push
jmp
stos
ss
mov
push
lds
push
cmp
dec
mov
xchg
sbb
mov
sub
loope
dec
xchg
sub
negl
pop
sti
xor
adc
xor
push
and
aas
fs
cltd
fs
mov
pop
scas
sub
add
fstl
cmp
mov
xchg
sbb
pusha
mov
add
nop
mov
aaa
cwtl
daa
fbstp
sub
mov
pop
xor
fdivr
aad
fcmovb
js
popa
aaa
cmp
xchg
movsl
subb
rep
in
stc
movsb
imul
lods
iret
cmp
inc
push
ret
sbb
nop
cld
pop
cmp
inc
sbbb
mov
inc
push
in
inc
pop
lods
mov
push
enter
jne
lods
add
fildll
sbb
sub
loopne
jae
jbe
lahf
sbb
inc
push
mov
xchg
mov
jecxz
dec
xchg
movsb
add
push
shll
jae
aad
aas
subb
jb
testb
test
inc
cmpsb
cmc
push
cltd
lock
mov
inc
pusha
cld
sub
aad
mov
inc
fldcw
sarb
push
shlb
fwait
in
leave
test
jp
push
testl
mov
les
loope
jecxz
pushf
sbb
mov
push
imul
cmp
setae
repnz
lahf
inc
and
lds
insl
popl
jb
pop
jl
vphaddubd
nop
ljmp
jo
cmpsb
in
subl
subb
stc
jo
nop
jg
loop
cmp
iret
push
jle
loope
push
add
shl
call
xchg
jae
cmp
or
pop
shrb
mov
out
cwtl
and
push
push
or
cli
and
and
push
das
ret
jge
mov
aaa
in
mov
xor
in
add
shlb
ret
dec
lods
dec
insl
mov
sbb
inc
stos
or
fdivs
out
insb
insl
idivb
add
stos
jmp
sahf
aad
lea
aaa
jae
mov
cmpsl
push
jl
call
inc
push
loope
mov
sbb
fadds
inc
mov
ret
test
divb
ds
loope
or
lock
ds
push
in
mov
or
cmp
pusha
xchg
xchg
inc
jb
jns
push
fsts
mov
sete
nop
pop
gs
mov
jl
sahf
insb
jl
xor
stos
pop
gs
paddsw
and
push
push
and
jns
jp
or
sbb
int3
xchg
hlt
pop
add
inc
cmp
push
add
roll
adc
leave
cwtl
xor
inc
inc
push
cwtl
dec
cmp
sub
xchg
lods
in
out
test
cmpsl
and
loop
dec
pop
out
clc
or
fwait
dec
lret
flds
dec
dec
pop
mov
cmpsl
rorb
push
sub
pop
mov
sub
inc
xchg
adc
insl
lahf
pusha
push
push
mov
insb
clc
out
divb
hlt
jae
push
fwait
lret
push
les
push
jo
add
push
sahf
hlt
xacquire
dec
mov
mov
scas
mov
mov
stos
jnp
std
and
mov
popf
push
movsl
lcall
and
shlb
cmp
ret
daa
pop
or
aam
ficoml
mov
or
imul
ljmp
pop
aam
push
xor
xor
icebp
mov
call
pop
jnp
sub
gs
int
xchg
ret
stos
jns
push
dec
hlt
mov
dec
fwait
adc
mov
fisttpl
sbb
mov
mov
cmp
mov
cltd
add
push
jl
pop
push
out
fxtract
cltd
imul
xchg
lods
inc
inc
sbb
lcall
bound
inc
sub
ret
adc
adc
mov
rclb
in
mov
aas
cmp
pop
add
sti
dec
sub
mov
stos
fimuls
dec
repnz
daa
stc
icebp
imul
icebp
or
das
push
in
dec
sbbb
loope
push
or
arpl
dec
insl
aad
push
cmp
cmp
add
mov
lock
popf
cmc
mov
mov
ficomps
dec
mov
pop
mov
fstl
arpl
jmp
addr16
stos
mov
mov
jp
test
sti
popa
cmp
pop
cmc
xchg
cmp
clc
cmpsb
daa
clc
cwtl
outsl
dec
in
sbb
jmp
jl
mov
ss
sub
int
fcomi
dec
jb
or
lods
and
xor
out
lock
inc
mov
xor
adc
imul
xchg
cltd
pop
pushf
pushf
test
xor
outsb
jmp
cmc
cli
push
adc
scas
shrb
mov
and
or
cwtl
pop
int
stc
push
rcrl
push
xchg
out
lods
mov
sahf
shr
inc
or
and
mov
into
pop
xor
pop
jge
dec
sbb
int
lds
adc
or
cmp
imul
mov
mov
push
sti
mov
cmp
lahf
inc
cmp
dec
cld
aam
popa
mov
imul
ljmp
dec
lods
mov
cmp
dec
fdivl
mov
mov
xchg
push
ja
fldt
mov
aam
push
cmc
dec
rcrl
jbe
pop
inc
mov
movsb
imull
adc
push
ljmp
scas
sbb
xchg
negl
es
pop
push
inc
cmp
std
mov
xchg
orb
and
inc
cmp
mov
pop
movsl
or
popf
out
mov
js
push
mov
push
push
sbb
test
xor
in
add
cmp
xchg
bound
insb
sbb
aad
int3
pop
bound
stc
cmp
loop
push
xchg
mov
jp
dec
pop
fs
pop
gs
adc
shl
pop
lcall
mov
pop
inc
repz
xchg
int
ljmp
int3
shrb
xchg
dec
xor
icebp
add
out
repnz
iret
inc
mov
or
mov
sbb
test
sbb
es
xor
pop
mov
mov
scas
or
and
repz
push
in
flds
pop
sub
das
fs
sub
mov
jnp
imul
inc
cmp
inc
mov
add
jl
pop
mov
idiv
inc
cmp
hlt
pop
enter
dec
rcrb
jmp
fidivrl
incl
inc
push
lahf
filds
jmp
lods
inc
xor
mov
pause
lods
push
push
jnp
jnp
pushf
clc
fdiv
hlt
push
es
xor
iret
insb
inc
adc
add
loope
push
pushf
push
lock
mov
repz
add
jb
mov
push
fnstsw
sbb
xchg
movsl
leave
loopne
movsl
pushf
shlb
mov
mov
mov
lock
and
xor
imul
push
pop
cmp
xchg
int3
clc
ret
and
and
sti
subl
int
out
jg
adc
pop
repnz
mov
sub
inc
ficomps
aaa
cltd
stos
roll
mov
daa
dec
out
xor
mov
mov
lret
pop
pop
sbb
push
loope
repz
sbb
popf
imul
or
out
enter
fimuls
rclb
stc
sub
jbe
cmpsb
insl
iret
daa
test
test
xlat
and
mulb
nop
dec
clc
mov
jecxz
or
sub
icebp
data16
sti
add
outsl
xchg
test
xchg
enter
ss
imul
gs
cld
inc
arpl
inc
cmp
mov
outsl
xchg
dec
out
out
pushf
and
ret
pop
das
mov
and
or
cmp
cli
jbe
lret
jle
jecxz
pushf
push
push
push
mulb
aas
in
inc
sbb
outsl
mov
icebp
mov
in
xor
imul
lds
inc
pop
ret
aas
iret
mov
mov
test
out
daa
cwtl
jmp
inc
xlat
or
add
inc
inc
dec
pop
jp
xor
pop
inc
bound
fadds
mulb
out
mul
jno
jl
enter
mov
push
mov
xchg
leave
out
aad
cmc
loop
cmc
aaa
push
leave
adc
and
imull
hlt
dec
sub
dec
repz
cmpsl
or
lret
xchg
outsl
cmp
popf
and
mov
mov
pop
lcall
js
mov
sbb
push
rcrl
aas
shl
push
mov
sbb
inc
in
pop
pop
mov
adc
adc
or
push
adc
mov
xchg
dec
jae
popa
jp
aas
arpl
mov
cmp
repz
cmp
push
push
insl
jo
inc
mov
mov
pop
jo
cltd
jp
push
ja
in
addr16
outsb
pop
iret
cmpsl
stc
mov
push
dec
push
dec
jge
fs
mov
inc
mov
sub
cmp
in
dec
cmc
repz
jns
out
repz
or
sub
xchg
jmp
mov
fistpl
mov
jb
repnz
or
lods
jae
movsl
push
mov
pushf
cs
lds
stc
stc
xor
out
cs
push
pop
adc
fadds
jbe
addl
add
sbb
test
push
pop
cli
mov
jg
inc
jp
lods
bound
sub
push
jbe
xchg
js
jecxz
pop
sbb
mov
mov
mov
adc
std
stos
mov
into
das
fiadds
push
cmpsb
ljmp
icebp
jo
les
cltd
dec
fstpt
adc
sbb
cmp
adc
aaa
cmp
outsb
cs
fwait
push
mov
push
xor
sub
pop
or
sub
xor
pmullw
inc
cmc
enter
cmp
outsl
js
aad
cmp
pop
fdivrs
xchg
fidivs
or
scas
or
xchg
jp
arpl
cmpsb
xor
jecxz
iret
dec
mov
lods
and
mov
adc
xor
mov
ss
mov
ret
out
nop
or
fdivrl
jae
xchg
lcall
inc
in
sti
pop
or
xor
mov
rorb
xlat
inc
mov
aas
bound
adc
sub
notb
ds
outsl
mov
sbb
mov
scas
push
mov
add
sub
popf
sbb
cmp
pop
pop
cmp
add
je
call
dec
lahf
sub
pop
mov
lds
jl
cmp
lea
and
and
mov
inc
adc
inc
jmp
cmp
in
or
fstpl
mov
adc
cmpsl
mov
repnz
imul
neg
outsb
lods
cmp
mov
test
sub
movsb
lret
stc
pop
movsl
xor
icebp
fdivrl
pushf
sub
add
dec
test
xchg
dec
pop
inc
aas
fiaddl
jecxz
mov
sahf
rcrb
lock
mul
jmp
add
xor
pop
pushf
sub
cmp
aad
inc
loopne
xchg
lahf
push
sub
sub
data16
pop
mov
fcmovnu
rcll
pop
in
fildll
sbbb
xchg
cld
sub
rorl
cltd
mov
in
insl
add
push
bound
pop
mov
insl
lret
mov
scas
mov
movsl
out
dec
jge
mov
movsb
and
sti
mov
and
mov
out
imul
sub
mov
inc
push
scas
fistps
cvtps2pi
enter
jns
pop
dec
inc
pop
mov
out
scas
aad
push
ds
jnp
mov
fdivrl
adc
pop
or
mov
clc
and
shrb
pop
and
inc
mov
stc
mov
and
pop
test
cs
ss
mov
cli
dec
outsl
les
cmp
lret
xchg
rclb
add
fisttps
jge
mov
push
xchg
test
sti
jg
repnz
jnp
pushf
xchg
std
adc
sbbl
and
outsl
lds
sbb
shlb
sub
mov
fdivp
rcrl
rcrl
es
bnd
dec
into
test
dec
in
ror
insb
std
mov
push
pop
inc
fs
dec
cwtl
xchg
in
lea
push
cwtl
in
or
lea
jp
rcrb
dec
push
insl
mov
adc
lods
mov
shll
mov
inc
pop
and
or
into
lcall
dec
fidivrs
mov
adc
push
lret
fnstsw
out
xchg
jnp
mov
jecxz
mov
lret
rcl
in
xchg
pop
daa
pop
dec
xor
insb
mov
iret
imul
sub
lods
and
and
pop
fwait
pop
mov
pop
jb
addr16
adc
xor
xor
imul
clc
into
mov
mov
push
sbbl
inc
outsl
mov
popa
out
hlt
je
insl
lock
ja
mov
lea
sub
movsb
push
jno
imul
xor
xchg
sub
into
aam
jl
pusha
cmpsl
pop
add
ret
cmc
sub
xchg
inc
loop
stc
cmp
dec
jle
push
gs
dec
pop
insb
xchg
repnz
in
jmp
push
add
roll
pop
les
pop
clc
or
and
sub
dec
aad
rclb
lods
jle,pt
stos
push
es
mov
cmp
mov
cmpb
cmp
dec
adc
enter
xlat
and
push
pop
and
jo
cwtl
loopne
cmp
repz
xchg
lods
daa
rcll
sbbb
mov
sub
sbb
lods
inc
pop
push
sub
mov
lea
aam
test
movsl
mov
sub
je
jle
in
pop
out
sub
imul
aaa
insl
inc
jp
cmp
mov
dec
cmp
aad
sbb
iret
push
es
inc
cmpsl
mov
in
inc
fstpt
rol
test
add
pop
mov
clc
call
push
cmpsl
xor
iret
stos
xor
je
mov
sub
inc
jg
ja
xor
xchg
adc
insl
inc
jo
cmp
fbstp
lahf
add
pop
sahf
std
out
aad
pop
push
dec
xor
xorl
mov
in
sub
mov
jbe
mov
inc
sbb
lods
jae
adc
cld
cmpsl
aas
mov
mov
hlt
and
adc
xor
sbb
pop
jle
xchg
jne
aam
mov
pop
cmp
cltd
aad
xor
push
push
mov
pop
pop
mov
mov
xlat
sbb
push
pop
cmp
cld
sub
jb
ss
mov
cmp
inc
jge
popa
mov
rclb
mov
sbb
add
cwtl
xchg
add
les
jl
and
loopne
xchg
cld
add
cltd
loope
fcoml
xchg
push
dec
mov
cmp
cmp
imul
sti
or
xchg
cltd
jbe
stos
ret
nop
mov
push
imul
mov
aaa
stos
mov
and
pop
shll
xchg
cmp
aad
mov
fnstcw
call
pop
mov
adc
add
push
lcall
ja
jnp
xlat
out
lods
cmpsb
mov
ljmp
lea
leave
movsl
daa
adc
cmpsl
imul
lret
scas
cwtl
push
test
mov
loop
mov
pusha
fnstcw
gs
jmp
push
call
paddq
push
fs
hlt
ret
mov
mov
loop
test
mov
leave
cld
jnp
loop
sbb
add
filds
sub
in
mov
es
cmp
sub
je
dec
cmp
xlat
insb
add
pop
mov
mov
sarl
insl
xor
lcall
xchg
rolb
stos
xor
push
insb
jns
out
mov
ljmp
sub
mov
cli
pop
and
jae
sub
cmp
das
sbb
xchg
xchg
fwait
adc
mov
cld
sub
and
push
mov
sbb
adc
ret
pop
dec
push
mov
loop
scas
loope
lds
inc
or
fs
ret
cs
test
push
fimuls
dec
add
lea
or
sbb
adc
cmc
rol
or
lods
push
inc
jo
push
cwtl
or
and
dec
pushf
insl
cmc
in
nop
enter
insb
andl
aaa
sub
notb
aas
xor
mov
xchg
xchg
or
lcall
mov
adc
and
fnstenv
insb
push
aaa
jnp
push
xchg
adc
push
jmp
ret
push
arpl
add
aad
cmp
inc
shlb
mov
jns
adc
lcall
pusha
in
outsl
adc
pop
aas
add
fildll
mov
push
aam
pop
repnz
jns
mov
fstl
sub
xor
movsl
push
cmp
pop
pop
not
xchg
push
xchg
sub
add
mov
cmpsb
mov
lock
and
sahf
mov
daa
loope
push
mov
jb
push
outsb
scas
loope
push
jp
out
mov
adc
pusha
adc
and
faddl
dec
xchg
and
sahf
sbb
mov
stc
inc
sbb
jno
stos
add
call
inc
add
sub
push
mov
mov
lret
jb
push
mov
mov
jecxz
out
in
pop
jno
sarb
ljmp
std
dec
imul
icebp
repnz
sbb
test
dec
push
push
push
jnp
push
int
jl
aas
add
adc
push
into
fcoml
sbb
je
stos
sbbb
jns
fildll
pop
pop
jb
jae
or
in
xchg
ljmp
xchg
shlb
repnz
push
and
enter
push
stos
in
push
mov
cmpsb
ja
in
jecxz
sbb
jge
lods
fnstenv
cld
or
nop
mov
push
adc
outsb
xlat
jbe
insl
ror
fidivl
loopw
call
ss
sbbl
test
push
jae
rcll
xlat
repnz
fstps
sti
inc
sbb
cmp
outsl
repnz
out
mov
outsl
inc
into
test
and
icebp
sbb
fs
push
mov
or
push
jbe
pop
push
fdivrs
scas
xlat
sahf
xchg
and
lret
cmp
dec
xlat
lock
test
das
mov
pop
fdivs
shlb
shlb
repz
cli
rclb
fcmove
imul
sbb
mov
mov
xor
stos
adc
stos
into
or
pop
jae
mov
inc
cwtl
addr16
je
test
mov
mov
jecxz
ret
adc
sub
inc
ja
xchg
jge
loopne
cmpsl
sub
in
les
mov
mov
mov
imul
mov
xchg
sub
push
hlt
jae
push
xchg
push
sub
out
repnz
iret
notb
sub
ss
sub
adc
inc
test
pop
cmc
mov
ljmp
adc
popf
test
test
cmp
pushf
leave
aaa
test
xchg
pop
sbb
mov
cmp
ja
test
lea
inc
scas
jecxz
roll
sti
hlt
scas
push
inc
mov
data16
sub
pop
nop
mov
pop
test
insl
ja
mov
jg
sub
rclb
push
ja
fs
popf
xor
and
imul
jecxz
dec
idivl
cmp
fwait
out
cmpsl
or
inc
cmp
fstpt
out
inc
rol
enter
ds
loope
mov
or
add
es
push
add
jmp
jle
lods
add
cld
pop
add
sarb
imul
mov
scas
mov
pop
fstpt
mov
mov
imul
push
mov
or
dec
pop
je
loope
hlt
jnp
test
sub
push
int
jmp
push
jae
fnsave
dec
outsl
ss
out
fidivs
aam
cmp
dec
sahf
push
mov
add
leave
sub
cmp
cmp
xor
xor
mov
aam
fildl
xlat
mov
sub
enter
stos
mov
mov
sbb
cmc
insb
add
xor
mov
cld
and
inc
fwait
hlt
ljmp
dec
or
cs
or
add
push
cltd
loop
ss
fwait
xor
scas
jp
mov
inc
addr16
cwtl
repz
cld
insb
push
mov
dec
rorb
xor
mov
aam
int
fildll
or
loopne
cmp
sbb
rcrl
pop
inc
subl
cmp
fisttpll
fsubs
out
sub
jo
push
and
cmp
lock
push
mulb
jl
scas
pop
xchg
ja
scas
xor
mov
jmp
jb
sbb
pop
les
lcall
xchg
or
inc
xchg
loop
adc
lock
mov
loope
lahf
out
aas
add
pop
in
testl
cld
pop
mov
fcom
imul
sub
pop
sbb
loopne
sti
lds
cmpsl
icebp
std
int3
add
dec
sbb
lret
mov
pop
les
aad
inc
in
sub
jnp
rolb
jo
adc
fistpl
xor
mov
lea
push
adc
cmc
fdivl
fstps
mov
aaa
jg
sarl
sbb
lods
subb
push
gs
xchg
call
mov
xor
mov
enter
inc
xor
sbb
dec
add
and
adc
test
loopw
add
popf
lahf
mov
cwtl
or
sub
pop
sbb
adc
fdivrs
cmp
sub
jae
cmp
repz
das
inc
es
sub
loope
inc
mov
arpl
loop
gs
mov
arpl
xchg
popa
pminsw
push
mov
cmp
mov
leave
or
rorb
fwait
addr16
scas
aaa
and
push
sbb
aad
cmp
cmp
jns
inc
cvtpi2ps
or
mov
aas
pusha
xor
sbb
gs
cmp
cld
mov
adc
cmc
add
add
jns
fildl
dec
cwtl
inc
dec
popf
aad
std
jg
ja
pop
enter
es
pop
dec
rorb
push
cmc
push
mov
pop
mov
fs
jle
adc
jp
lea
ds
jle
repnz
jmp
and
mov
int3
ss
pop
clc
dec
mov
mov
bound
push
je
inc
mov
popf
daa
scas
xchg
xor
sub
mov
repnz
lea
mov
mov
andl
xor
fists
lods
mov
sbb
push
out
pop
and
pop
cmp
cltd
sbb
je
and
cmp
jp
in
cmp
mov
mov
out
data16
xlat
push
shrb
and
xor
lods
jno
in
xchg
sarl
xlat
lret
jnp
addl
movsl
jo
loope
movsl
inc
or
xchg
sub
mov
data16
inc
pop
popf
fistpll
rcll
imul
or
push
fwait
movsb
push
rcl
aaa
js
cmpsb
ficomps
jl
sbb
pusha
call
fldcw
and
insl
inc
iret
lret
sarb
mov
out
outsb
sbb
lcall
push
loope
ja
xor
js
loopne
xchg
push
pop
adc
mov
and
xor
sbb
sub
les
lods
mov
jne
mov
out
hlt
repz
cs
lret
dec
sbb
pop
jne
mov
mulb
xchg
loope
xor
int3
fisubl
jne
iret
icebp
mov
xchg
lcall
nop
and
mov
cli
adc
mov
fnstsw
mov
xlat
mov
xlat
dec
cli
andb
neg
fxch
mov
les
dec
inc
out
ret
dec
pop
xchg
into
jb
lods
jg
int3
mov
jecxz
test
repz
outsb
dec
lds
adc
das
cltd
sarl
mov
insl
add
shrb
mov
aad
jle
mov
cs
jl
es
rcl
out
call
popa
les
dec
mov
test
dec
mov
push
jecxz
cwtl
mov
fisttpll
pop
daa
cmp
pop
imul
sub
pop
cmp
adc
aas
mov
mov
scas
popa
jecxz
fists
adc
push
in
dec
and
icebp
inc
push
add
in
stos
fistl
push
mov
ficoml
mov
shlb
cmpsl
jo
scas
negb
lcall
mov
repnz
mov
add
mov
inc
xchg
and
iret
int3
js
pop
hlt
pop
cmp
sbb
jns
mov
sti
lret
scas
xchg
rorb
add
scas
inc
push
mov
jmp
out
push
cmpsb
addr16
shll
clc
mov
push
sbb
fwait
int
push
push
pop
mov
xor
jno
cmc
das
stc
jmp
add
jl
sahf
push
loop
loope
mov
sub
scas
aaa
sub
adc
shr
mov
lcall
xor
jae
ret
stc
xor
rcrb
jb
je
dec
dec
sti
aam
xor
adc
xor
js
or
add
adc
add
repz
shll
test
push
adc
cmp
or
negl
mov
leave
les
cmp
cs
sbb
mov
cmpsl
mov
fwait
xchg
addl
inc
fdivs
add
lcall
or
scas
pusha
idivl
sti
add
inc
fbstp
iret
mov
and
fistps
daa
add
mov
sub
pop
mov
movsl
shr
scas
pop
mov
sub
cltd
or
std
stos
popf
add
cmp
sub
xchg
clc
aaa
ret
cli
pop
adc
bound
mov
mov
repz
and
add
push
mov
fdivr
mov
mov
cltd
xor
test
std
arpl
aas
pusha
sbb
xchg
mov
shrl
rolb
es
push
sbb
je
mov
shll
outsl
in
cli
mov
ljmp
inc
adc
inc
xorb
in
inc
jae
es
inc
dec
xor
xchg
dec
and
pop
lods
ds
stos
int
jae
movsb
add
shr
jb
xor
insb
mov
ret
ret
aas
mov
shlb
and
mov
and
inc
cmp
gs
ljmp
fsubl
or
pop
rclb
idivb
pop
sbbl
and
or
lock
and
shlb
sbb
test
dec
mov
mov
leave
sbb
xlat
lcall
cwtl
sbb
push
test
aad
inc
inc
xor
nop
enter
mov
lahf
inc
sbb
stos
stc
and
push
xchg
out
and
jmp
and
cmp
jne
jns
jmp
shlb
ja
mov
inc
pop
js
pop
cmp
adc
fldl
xchg
fistpll
dec
and
lret
or
pop
scas
lcall
lock
jecxz
inc
popf
int
pop
ljmp
andl
stos
sti
loop
xchg
into
inc
mov
mov
call
dec
jbe
push
mov
sub
and
xor
test
mov
push
inc
das
cmp
pop
inc
xchg
out
loop
mov
add
in
roll
jne
stc
popf
inc
cwtl
scas
dec
sub
push
inc
inc
movsb
sbbl
xchg
leave
or
adcl
mov
sub
scas
push
pop
lock
ja
notl
sbb
ds
cld
and
enter
lahf
adc
sarl
dec
cmp
mov
subb
inc
dec
test
push
std
jg
jno
lahf
outsl
fwait
dec
jae
sbb
mov
mov
pop
inc
adc
jbe
pushf
mov
rcrl
or
and
dec
sbb
adc
pop
push
xchg
jb
xchg
lds
pop
stc
pop
pusha
jo
cmpsl
in
or
mov
pop
insb
in
incl
pop
sub
gs
sub
testb
sub
mov
push
cmpsb
xor
cmc
ficompl
lea
mov
pop
popa
psubw
pop
xchg
pop
jl
in
aaa
adc
ror
lock
jb
add
add
mov
daa
negb
imul
jbe
loop,pn
gs
push
jns
fwait
mov
fs
lahf
mov
and
mov
fbstp
pop
call
stc
mov
int
add
pop
cli
cli
push
mov
enter
dec
adc
mov
jae
cli
enter
pop
in
popa
into
push
test
jne
dec
mov
cmp
rorl
ljmp
gs
jo
push
sahf
daa
lea
sbb
fs
cld
inc
dec
dec
shlb
mov
dec
cmp
pop
push
ss
arpl
arpl
jmp
arpl
data16
outsb
out
pop
hlt
add
mov
loopne
aad
shrb
inc
sbb
imul
sahf
lds
fs
adc
rorl
into
mov
aaa
dec
dec
into
aad
sbb
insb
mov
test
xlat
cwtl
xor
adc
mov
inc
push
into
fs
rcrl
mov
sbb
pop
es
mov
mov
fisttpl
sub
lea
out
xor
or
inc
les
rcrb
and
jecxz
sbb
xchg
jl
mov
jmp
rclb
add
xor
xchg
xor
sbb
sub
fsts
lea
and
and
adc
lea
ret
loope
loopne
mov
xchg
in
add
pusha
or
fsub
test
xchg
jb
mov
pop
cmp
add
adc
lock
scas
sbbl
add
and
ja
mov
fcmovb
cmc
sub
or
push
sub
cmpsb
xchg
fistps
lods
add
jno
scas
lret
imul
lret
int
mov
jge
sahf
and
jl
adc
mov
sub
sti
fsubl
jnp
adc
mov
out
dec
stos
inc
sub
jns
xor
pusha
adc
aam
jns,pn
push
cwtl
or
lock
pop
popf
sbb
dec
dec
je
fcoml
shlb
mov
ss
imul
mov
aaa
mov
addr16
les
cmpxchg
push
jmpw
nop
sbb
daa
sarl
lcall
add
xlat
daa
arpl
xchg
int3
jb
dec
cmp
in
shl
rcrl
add
gs
mov
dec
mov
cmpsl
inc
adc
in
rorb
sar
stc
arpl
aas
push
xchg
pushl
adc
rorb
xor
icebp
pop
mov
ret
stos
pop
mov
cwtl
sbb
fists
in
xor
out
js
fs
xchg
test
mov
cmp
mov
push
or
mov
stc
icebp
outsl
popf
into
add
dec
imul
shll
jp
mov
enter
int3
fwait
mov
cwtl
addr16
fsubl
and
add
fstpl
andl
movsl
std
pusha
mov
mov
sti
pop
add
xchg
pop
imul
push
nop
jle
cmc
jecxz
sbb
jp
jg
cmp
add
sbb
std
jl
inc
cmp
fidivrs
out
xchg
je
sti
cmpsb
je
imul
mov
sub
add
cwtl
sar
mov
add
out
ret
push
mov
not
dec
inc
adc
mov
clc
ja
scas
mov
aas
in
nop
jge
ret
mov
lods
push
ret
pop
fildll
push
divb
das
and
insb
inc
pop
cs
sub
pop
repnz
xchg
cld
xlat
ret
lods
jg
xchg
jl
fsubp
cmpsl
jmp
scas
das
pop
sbb
add
gs
xor
mov
les
mov
nop
hlt
std
xlat
xor
cli
and
dec
push
dec
shrl
xor
dec
popa
jmp
pop
ljmp
push
sti
mov
jbe
sub
dec
std
faddl
push
int3
in
lret
shll
dec
nop
push
loopne
inc
and
cmp
subl
dec
mov
rorb
pop
btc
sub
fadd
rcrl
inc
fs
xor
shl
shll
out
mov
xor
adc
cmp
mov
les
jae
or
gs
xchg
jno
std
adcb
and
andl
gs
jo
push
mov
cmp
inc
mov
pusha
ja
lret
xchg
sbb
add
leave
and
push
pop
pop
xor
xchg
mov
pop
jno
fbstp
test
aaa
push
repz
jo
add
rclb
xor
add
std
dec
push
pop
adc
and
aas
pop
lret
fdivs
inc
bsf
pop
fiaddl
dec
sub
pop
pop
mulb
push
les
mov
adc
mov
lret
xor
notb
xchg
ret
hlt
ror
pop
adc
out
repnz
clc
aam
mov
dec
lea
pop
xchg
cs
inc
aaa
jge
mov
cmpsl
jg
xchg
push
fistpl
mov
xchg
aam
push
jae
jnp
mov
hlt
pop
outsl
cmp
inc
imul
sbb
pop
outsb
in
sbb
jo
mov
lahf
in
iret
sti
enter
addr16
cmpsb
fwait
sbb
ja
or
or
std
mov
std
mov
into
repnz
inc
pop
mov
stos
push
xor
scas
clc
das
push
fldenv
inc
or
roll
xor
push
pop
dec
mov
dec
imul
pusha
or
scas
xor
test
dec
fwait
lods
mov
sub
and
nop
popa
adc
push
jle
pop
or
fildl
pop
xchg
movsl
lds
sub
pmaddwd
es
ret
callw
pop
fistpll
and
or
dec
jecxz
cld
je
jg
leave
mov
xorl
hlt
sbb
jecxz
fisubs
inc
lods
aas
xor
jns
lea
pusha
jb
dec
sbbb
lods
jb
jbe
insl
and
mov
in
jb
xchg
test
cmc
push
jmp
aad
lret
sub
xor
sbb
push
mov
mov
out
lds
sbb
push
and
lcall
jo
and
fs
andb
popf
imul
lahf
lea
mov
add
sbb
xchg
jle
jecxz
lock
test
shld
jp
fistl
push
movsb
into
out
push
test
push
dec
xrelease
xor
and
sub
mov
hlt
cmp
jge
xchg
mov
cld
mov
adc
inc
xchg
mov
rolb
push
sbb
adc
sbb
fdivrl
jle
mov
mov
js
shlb
or
sti
inc
lcall
test
adc
adc
push
sbb
pusha
pop
or
out
jb
imul
mov
lahf
fdivs
dec
mov
dec
fs
out
das
dec
mov
inc
ficomps
push
jbe
test
sahf
rorl
inc
mov
movsl
out
call
dec
aad
in
sbb
mov
jb
loope
ret
add
pop
pop
mov
bound
pop
psllq
mov
mov
dec
cmc
es
jb
mov
insl
sub
stos
jo
sbb
dec
push
mov
ret
dec
sub
adc
cmpsb
hlt
push
jnp
mov
or
sub
mov
cmp
and
daa
out
inc
ljmp
jg
inc
mov
jg
imul
push
rclb
or
mov
dec
test
lret
cmp
mov
mov
movsb
dec
push
scas
inc
xchg
pop
sub
dec
push
mov
sbb
notb
sbb
fsubl
negl
xchg
fcmovnb
movb
mov
cmp
leave
xchg
cmpsl
aad
pop
shrl
sub
lcall
lahf
lods
repnz
lods
pop
test
and
and
lret
mov
movsb
leave
mov
adc
add
shr
adc
jmp
ljmp
mov
lcall
xchg
cmp
or
icebp
fistl
jg
addr16
dec
stos
jo
insl
outsb
push
fld
sbb
sub
or
test
outsl
pusha
pop
mov
out
sub
aad
xchg
out
mov
imul
pop
inc
mov
es
mov
insl
popa
inc
jmp
dec
popf
mov
dec
mov
mov
push
leave
imul
inc
out
test
call
fstpl
push
mov
loop
xchg
and
fldcw
sbb
and
fsubr
pop
icebp
pop
and
jo
cmp
lods
fistpl
ret
loopne
push
mov
test
cmp
or
aad
call
mov
sub
xchg
push
lock
mull
pop
push
pusha
mov
sbb
add
dec
outsl
xor
add
nop
pop
nop
in
in
jecxz
mov
mov
sarl
xchg
pop
dec
jle
xchg
lcall
push
lahf
pop
jl
out
xor
push
push
xchg
push
fimuls
popf
mov
out
sub
lock
dec
sub
es
test
out
div
aas
lret
pop
push
push
mov
aaa
adc
int
push
or
aam
xchg
clc
test
imul
sub
mov
pop
dec
pop
mov
aaa
mov
daa
aas
movsb
or
cmc
outsl
xchg
mov
cmp
mov
cld
xchg
adc
pop
sub
fs
cs
arpl
mov
mov
xchg
test
test
push
shll
mov
pop
pop
outsb
das
push
jb
inc
mov
sub
loopne
jecxz
or
movsb
shll
push
aad
lods
mov
add
adc
adc
inc
jp
push
jns
ret
fldt
jle
scas
mov
popf
les
shrb
setl
cmc
xor
into
jb
or
inc
lret
mov
cmp
aas
mov
dec
and
and
mov
movsb
fstp
lcall
cmpsl
jb
lea
cmp
cli
aam
pop
out
mov
jnp
inc
pop
dec
cmp
mov
je
lret
pop
jle
cwtl
mov
sub
int
fstps
movsb
add
mov
ljmp
aam
sbb
mov
rorl
negb
or
aaa
mov
cmpsl
shl
lods
icebp
fstps
mov
cmp
add
jno
cmp
lcall
lods
pop
inc
repz
cltd
daa
xchg
fdivrp
jb
sbb
frstpm(287
or
sub
and
test
in
xor
lret
sbb
pushf
push
lret
cli
dec
loopne
or
pop
xor
inc
cli
enter
jb
js
inc
movsl
cmp
leave
rorl
lds
add
out
sbb
adc
inc
inc
adc
xchg
dec
mov
nop
push
repz
mov
adc
jbe
mov
cmc
test
sub
cs
mov
cld
shlb
mov
test
sub
iret
and
push
cmc
inc
sbb
pop
lea
pop
in
xor
pop
xchg
leave
and
stos
adc
std
lds
test
dec
cwtl
adc
inc
fwait
in
sub
cmp
sti
out
mov
pop
pushf
outsb
lret
pop
lods
lock
sbb
mov
mov
shl
test
and
and
xchg
fsts
pop
iret
add
ret
cmc
inc
and
jno
and
hlt
insl
fs
ror
pusha
add
jg
insl
aas
rorb
rcrl
or
lods
ljmp
out
rorl
push
paddusw
xor
push
jns
adc
mov
cli
ljmp
sar
ret
xchg
lds
imul
xchg
push
xor
mov
dec
sub
add
and
dec
mov
xor
fwait
or
loop
sarl
sub
and
arpl
lds
insb
sbb
adc
adc
cmp
pop
push
mov
mov
pusha
hlt
or
sarl
jo
and
mov
adc
cli
ss
je
inc
mov
movsb
fisubl
fisttpll
adc
enter
pop
mov
sub
call
mov
test
fsubrl
mov
dec
mov
pusha
repz
xor
fcoms
and
push
jp
aaa
cmp
jae
xchg
insl
cmc
xlat
in
mov
jl
fldt
pop
pop
insb
orl
fistpll
pop
jb
subl
dec
jne
imul
xchg
cmpsb
ds
mov
shl
subl
imul
jne
imul
xchg
pop
mov
ja
mov
jecxz
rcr
add
or
shlb
imul
and
aaa
shll
or
incb
xor
adc
ret
adcb
cmp
insb
leave
lcall
sub
dec
xor
or
data16
nop
test
orl
jle
outsb
and
xor
fwait
add
sbb
adc
subb
sub
imul
sbb
out
adc
jl
push
movsl
sbb
fwait
push
sub
xchg
and
outsb
mov
jns
cmpsl
sbb
movsl
ret
ja
out
cmp
lcall
mov
ja
fistl
test
jo
jno
add
xorl
xor
xchg
pusha
xchg
test
bound
cmp
jno
gs
add
jbe
adc
clc
xchg
jno
rcrb
cmp
ss
or
sbb
cmp
loopne
rcl
aad
fimuls
push
xor
test
fdivr
jne
cli
lods
addr16
mov
push
and
add
mov
scas
ljmp
test
ja
push
adc
mov
and
leave
push
mov
or
cli
inc
lahf
fadds
int3
sbb
insl
mov
push
and
jbe
in
les
fadds
jb
mov
mov
fsubrs
fwait
inc
js
pop
inc
jge
push
mov
dec
pusha
fnstcw
jl
bswap
sub
mov
push
sarb
sub
jbe
popf
dec
pop
fdiv
push
lret
insb
and
lret
xchg
shlb
scas
imul
cmp
mov
aad
shrb
sbb
sahf
push
mov
dec
sbb
push
aam
xchg
frstor
aad
jge
mov
cmpsb
movsb
xor
std
add
mov
outsl
jl
mov
push
mov
popa
add
lahf
jle
pop
xchg
flds
cltd
sub
aad
sub
lods
ret
push
lods
ljmp
hlt
push
and
mov
sbbb
aas
mov
xor
es
push
sub
cmp
jecxz
mov
mov
test
ds
sbb
and
pop
cs
adc
pop
aam
test
and
repz
mov
jmp
lahf
and
sbb
cli
cmp
cld
xor
int3
mov
nop
mov
mov
test
sbb
pusha
out
xchg
and
sarl
or
xlat
adc
cmpsl
leave
std
jg
add
jo
adc
mov
adc
sti
nop
pop
fiaddl
jle
sbb
stc
jae
or
xor
push
stc
scas
push
popf
lret
xchg
fildll
xchg
and
mov
test
sarl
decl
jge
pop
push
xchg
xlat
arpl
out
arpl
jp
mov
xchg
xor
xlat
mov
mulb
adc
out
dec
daa
out
int3
cmpb
mov
inc
xor
out
popa
xchg
outsl
push
pop
push
sbb
mov
dec
xor
push
mov
hlt
lret
fidivs
sub
dec
popf
mov
arpl
es
imul
popa
sbb
lret
dec
xor
mov
lods
pop
xor
scas
pop
pop
or
mov
inc
movsb
and
dec
mov
lcall
mov
jg
ds
mov
jae
loop
lock
pop
push
jns
jg
inc
dec
loop
cltd
fs
xchg
pop
iret
es
or
aas
ret
mov
aam
outsb
cmp
push
cltd
push
leave
cmp
xor
in
ja
xchg
push
sbb
sub
enter
adc
xor
movsl
xchg
stc
daa
faddl
aaa
dec
mov
fwait
bound
stos
and
add
imul
and
push
push
ud0
push
xor
mov
popf
sub
inc
mov
mov
xchg
add
aaa
sti
in
inc
jg
dec
inc
notl
out
adc
cmpsb
mov
or
rcr
xor
inc
fxtract
jp
push
jp
lahf
xchg
xchg
push
cs
push
cwtl
adc
fcompl
test
repz
fwait
dec
divb
or
and
mov
fs
out
inc
xchg
jl
ds
imul
lea
push
mov
das
push
dec
mov
cmp
cmp
cwtl
cmp
fstps
rdmsr
filds
test
push
or
mov
pop
lods
mov
scas
push
mov
jl
push
orl
outsl
adc
push
mov
ret
aas
nop
sti
clc
pop
out
lret
push
mov
fwait
add
ret
rcrb
or
or
or
jge
jmp
mov
and
jb
lds
rcll
jg
rorl
shl
dec
mov
loop
jle
push
mov
popl
and
loop
jns
aas
aad
shr
jp
outsl
and
aaa
pop
push
arpl
and
leave
sub
es
mov
mov
mov
cmp
test
jnp
push
imul
xchg
mov
shlb
or
rolb
loop
mov
gs
fnsave
push
dec
cld
test
loope
pusha
add
push
nop
stos
insl
xchg
aam
jecxz
pop
icebp
xchg
cmp
sub
cmp
test
jmp
clc
fiadds
outsl
fwait
fwait
or
adc
mov
mov
jg
shrb
jne
push
test
leave
pop
cmc
dec
and
popa
add
add
popf
lds
push
imul
data16
xchg
aam
jp
sub
out
divb
stc
adc
hlt
add
ret
sbb
lret
mov
iret
sbb
push
cmpb
es
dec
push
popa
in
xchg
push
lret
add
push
stos
add
mov
pop
icebp
or
mov
adc
or
hlt
int3
shrl
idivb
jb
push
sahf
test
and
loope
pop
jnp
subl
testl
pop
xchg
in
pop
pop
sub
mov
addr16
jle
mov
push
sbb
cmpb
mov
jl
mov
test
inc
subl
out
into
scas
bound
sbb
jae
aas
adc
sbb
mov
pop
mov
jmp
pusha
mov
or
sub
cmp
je
lret
add
bound
xor
mov
cmc
fisubs
gs
push
xchg
out
in
out
pop
daa
xchg
insl
add
test
arpl
mov
mov
cmp
dec
shlb
jae
in
das
insl
xor
mov
dec
mov
das
les
mull
arpl
push
sub
mov
hlt
inc
shrl
pop
xor
data16
or
inc
mov
int
pusha
out
cld
push
enter
iret
popf
sbb
jae
cli
push
jno
jg
aad
jg
jl
int3
rorb
lea
inc
jmp
cmpsl
mov
mov
mov
jmp
int3
adc
jmp
out
aas
frstor
dec
adcb
faddl
push
lahf
pop
ljmp
jo
sub
adc
jb
mov
push
jmp
pop
int
mov
xchg
icebp
jmp
pop
pop
xchg
xchg
sub
orl
pop
jnp
ja
sbbl
xor
add
sub
test
lret
inc
cwtl
push
mov
sub
pop
fsts
imul
mov
aaa
sbb
pop
xchg
and
insl
out
lcall
rorb
jb
in
pop
scas
adc
adc
addb
hlt
les
adc
or
push
jb
nop
insl
ret
xor
xchg
daa
loop
mov
enter
daa
sbb
cs
xlat
fdivrl
dec
push
sub
ljmp
pusha
ret
add
std
std
lea
sarl
jo
xchg
loope
stos
iret
ret
loope
and
lods
lods
pusha
lods
and
and
iret
outsl
jno
repnz
je
ret
loopne
imul
movsb
push
fstpl
pop
icebp
inc
cs
scas
and
ja
xchg
or
hlt
call
pop
push
call
js
add
cmp
dec
or
into
shl
int
sahf
scas
arpl
mov
jmp
xchg
pushaw
mov
roll
jmp
sbb
std
sbb
pop
inc
fs
xor
push
pop
mov
fcoml
roll
je
stos
notb
and
mov
jae
xchg
adc
and
popf
iret
sub
mov
dec
dec
adc
and
in
lea
jle
call
imul
adc
int
mov
jle
and
adc
stos
dec
cmpsl
fisubs
push
popf
pop
insb
mov
cmpsb
xchg
int
mov
xchg
out
add
jg
jp
ds
pushf
pop
xor
fldt
xchg
test
xchg
sbb
lret
fmuls
into
clc
test
imul
pop
dec
push
and
xor
or
test
subps
mov
jno
jecxz
push
lcall
popl
gs
jno
mov
aam
in
out
push
xlat
pushf
mov
add
or
repz
jle
cmp
pop
cld
clc
lods
sub
adc
sbb
or
lods
inc
je
cltd
jecxz
jnp
movsb
xor
xlat
cld
imul
imul
daa
clc
popf
loop
sub
pusha
clc
mov
mov
dec
xchg
mov
jb
cmp
jl
mov
rclb
push
or
addr16
cmp
lret
lds
ret
pop
adc
add
rorb
fnstcw
adc
ljmp
cmp
adc
nop
fwait
inc
and
inc
loop
and
adc
mov
adc
addr16
je
dec
jp
sub
iret
lret
and
fistpll
out
aad
sub
outsl
int3
iret
xor
and
lahf
ret
insb
sarl
adc
leave
test
insl
inc
pop
cmp
mov
ljmp
mov
mov
fdivr
or
pusha
xchg
pop
cs
les
push
jecxz
xor
orl
sti
ljmp
push
jmp
mov
outsb
gs
stos
out
jl
push
stos
es
aaa
fistpll
mov
cltd
imul
adc
js
xor
fldcw
dec
jle
xor
popf
aam
jle
stos
test
outsb
xchg
lcall
std
les
sub
push
insl
push
or
xor
sti
stos
into
stos
adc
in
xor
push
lea
nop
or
xchg
lock
popa
fldt
cmp
mov
xchg
xor
or
js
hlt
out
xchg
sahf
mov
inc
sti
jg
dec
imul
xchg
push
stc
sbb
mov
popf
push
jne
pop
out
int3
push
mov
mov
test
jmp
add
clc
jge
adc
imul
popf
repz
push
call
xchg
jmp
xlat
andb
shll
and
add
dec
adcb
in
push
cltd
test
pop
and
push
inc
sti
mov
jl
pop
out
sti
out
xchg
in
fadd
add
dec
pusha
imulb
inc
fs
int
mov
inc
aad
fwait
lods
xor
outsl
shll
jno
cmp
into
lods
in
nop
jae
push
adc
add
xor
sbb
in
pop
lods
into
cmpb
jae
jecxz
sbb
pop
mov
popa
bound
shrl
mov
pop
xor
cwtl
pop
adc
dec
outsl
jb
sub
jae
sbb
xlat
fimull
inc
cli
lcall
xchg
xor
popa
sub
fnstcw
int
push
cmp
int3
not
push
xchg
bound
popa
sbb
dec
and
xchg
fs
hlt
shll
sbb
push
imul
test
mov
jle
lods
mov
mov
add
lock
sbb
and
in
sbbb
inc
xchg
iret
insl
jae
push
push
test
mov
in
gs
cmpsb
fsubrs
xchg
mov
nop
push
mov
shll
rorb
lods
adc
dec
pop
pop
cmp
out
jmp
adc
xlat
dec
into
cmpsb
inc
lcall
fwait
aad
fldcw
add
dec
lcall
iret
out
dec
and
popa
subb
sub
pop
push
cmp
dec
add
adc
cmpsb
and
stos
dec
es
push
dec
aas
out
cmp
into
popa
pop
loope
repnz
mov
fsub
xchg
hlt
jmp
or
mov
dec
push
ds
mov
push
sub
shrl
mov
and
in
ljmp
inc
pop
std
lea
dec
in
jmp
mov
das
movsb
pop
sbbb
pop
mulb
mov
xchg
or
jno
mov
dec
cmp
cmp
lock
inc
rcrb
jb
add
sub
cmc
stos
add
rorb
push
movsl
or
jns
mov
xor
and
dec
repnz
xchg
icebp
xor
xor
lea
mov
mov
xor
cmp
jns
imul
xchg
scas
das
mov
mov
sti
outsl
mov
and
xor
push
les
fwait
jecxz
jae
dec
cld
sub
dec
or
rcrl
inc
hlt
les
jns
xor
sbb
repnz
int
inc
add
aad
mov
mov
mov
dec
pushl
pusha
sub
lcall
push
add
lret
fcomps
pop
sbb
iret
fstpl
and
js
xlat
in
adc
xor
adc
test
test
arpl
pop
iret
push
push
aas
lods
cmp
cltd
int3
mov
mov
ljmp
jl
mov
lea
jnp
pop
cmpsl
test
out
shrb
ret
xlat
test
jnp
xchg
add
dec
out
xchg
and
dec
out
in
mov
lods
cmpb
movsl
in
dec
arpl
xchg
xchg
mov
xchg
push
lcall
loope
dec
pop
fcompl
imul
pushf
orb
mov
sti
and
std
or
xchg
outsl
or
movsl
enter
mov
add
lret
les
dec
cs
inc
mov
xchg
test
negb
pop
loop
mov
jge
add
push
aaa
xchg
test
rcrl
fsubrl
xchg
mov
popf
lock
outsb
or
aas
leave
addr16
sahf
call
jmp
pop
dec
fcmovu
outsl
ss
sbbb
mov
inc
addb
aad
xor
pusha
adc
mov
fwait
mov
mov
and
or
data16
jle
insl
lret
mov
fisubl
js
sbb
test
push
xlat
push
pop
xor
push
hlt
aas
inc
imul
xor
inc
int3
sbb
sbbb
mov
out
push
lds
push
and
call
es
xor
or
lock
or
push
sbb
icebp
add
incl
data16
push
cmc
test
fimuls
clc
push
xlat
xchg
inc
ret
mov
jecxz
dec
dec
and
fdivrl
stos
inc
push
dec
mov
into
inc
dec
adc
fildll
in
lea
or
lock
jmp
mov
mov
cmp
push
pop
pop
xchg
xor
test
pop
lds
cmp
or
adc
mov
lahf
jmp
and
fsubrs
fimull
inc
cmpsb
cmp
adc
mov
dec
mov
inc
imul
test
popf
cmc
dec
add
add
imul
sub
cmpsl
dec
or
es
test
cmp
cmp
push
pop
fistl
nop
xor
aam
in
and
adc
scas
add
add
js
ljmp
pop
popf
mov
aas
addr16
sbb
inc
mov
dec
push
mov
mov
inc
outsl
lods
mov
xor
cmpsl
scas
movswl
jnp
fldl
lock
imul
jo
aam
lahf
mov
xor
aad
rcrl
jo
popa
sub
mov
push
scas
fldenv
stos
add
cltd
fnstcw
dec
fsubr
mov
out
mov
xchg
mov
or
mov
sub
dec
ret
aad
outsb
cwtl
hlt
popf
xor
mov
outsb
insl
ret
xor
inc
ror
mov
xor
and
pop
in
inc
xor
push
xchg
lea
cmp
rorl
insb
cld
fstps
cmp
call
xor
pop
cli
push
mov
inc
daa
mov
es
dec
push
lahf
mov
and
push
mov
sub
fiadds
pop
cmp
bound
loope
fstl
jbe
lea
push
pop
popf
rcll
xor
inc
int3
rep
mov
fsubr
imul
sarl
sub
cmp
pop
test
push
push
add
adc
stos
loop
test
sub
mov
adc
xchg
sar
addl
cwtl
stos
mov
jnp
sbb
lret
inc
adc
aam
lahf
scas
into
or
clc
sahf
push
xchg
ret
fsubl
test
testb
lods
push
in
testl
adc
fstl
xchg
cmp
stos
pop
jmp
or
mov
xlat
xor
mov
lods
jl
ficoml
add
dec
mov
jne
and
mov
sarb
jno
push
mov
mov
mov
imul
mov
mov
xchg
sbb
cmp
cld
out
xchg
jb
sub
pop
data16
inc
mov
push
push
and
out
cmp
cmp
js
add
jl
cmp
orb
popf
mov
fsubrp
xlat
add
pop
ds
or
jno
push
cwtl
mov
inc
stos
subl
call
push
pusha
fs
cmpsl
dec
inc
inc
or
rolb
or
and
mov
push
add
push
adc
xchg
js
pop
pop
fsubs
cli
sub
aam
mov
stos
insl
lods
unpckhps
out
sub
mov
mov
and
lods
js
call
out
xor
hlt
mov
xchg
ret
imul
add
dec
and
int3
jg
mov
stc
jo
jecxz
dec
fiaddl
push
movsl
lock
outsl
gs
popf
dec
push
push
adc
fwait
cmp
mov
mov
mov
push
adc
xor
inc
add
push
int
and
or
adc
mov
jb
adc
add
cwtl
dec
out
adc
jge
out
pop
sbb
push
pop
gs
lods
test
roll
lods
mov
insl
xchg
sub
fists
sub
loopne
dec
inc
sahf
or
dec
sub
xchg
fidivrs
inc
push
sarb
scas
mov
fisubrl
sub
dec
mov
das
sti
pushf
sub
ja
push
mov
addr16
push
push
cwtl
cmp
ljmp
loop
test
or
sub
fdiv
mov
loop
aad
aad
decb
cmc
aas
jl
add
out
mov
leave
cli
sbb
aas
push
scas
cmp
xchg
sbb
jno
adc
and
sub
mov
imul
sub
bound
xchg
je
loop
pop
sbb
stos
in
leave
mov
adc
xor
or
inc
push
adc
mov
psubd
cli
jbe
in
jb
push
jno
out
xchg
inc
cmpsl
cmp
sahf
xorb
inc
pop
sbb
inc
clc
arpl
cli
mov
jl
scas
jno
int
sbb
xchg
das
addr16
jg,pn
and
mov
add
ret
push
imulb
sahf
xor
dec
sbb
out
jecxz
pop
das
js
in
jp
and
sbb
xchg
lock
outsl
lock
jl
dec
stc
fnstcw
shrl
shrb
ds
and
sahf
jge
daa
fsub
cwtl
add
or
xor
ss
push
stos
ret
inc
out
pop
js
icebp
ret
loop
mov
mov
inc
lret
jne
fcomps
dec
mov
fwait
jl
pop
dec
cld
mov
jecxz
mov
cs
xchg
jge
sbb
mov
sarb
ret
cmp
xor
pop
setg
stos
cmc
sub
xchg
or
mov
dec
repz
pusha
cmpsb
dec
add
or
in
jbe
sbb
pop
test
xchg
aad
fcoms
jnp
or
mov
inc
sbb
aas
mov
data16
mov
push
jp
xor
je
lcall
adc
inc
jnp
enter
pusha
or
leave
cld
push
out
hlt
pop
adc
fldt
in
fnstcw
jmp
lret
scas
icebp
xor
sbb
pop
andb
xchg
sbb
imul
lods
mov
fistl
xchg
push
ficomps
push
fiaddl
loopne
sarb
lea
lret
shll
fsts
cwtl
sub
rolb
je
inc
mov
sbb
stos
mov
mov
enter
and
iret
lea
xchg
add
push
fmulp
xchg
aaa
sub
fs
mov
jl
sub
adc
leave
test
pusha
ja
or
mov
in
add
mov
fcmovnbe
cld
lock
mov
or
jns
cli
jecxz
sbb
xor
sub
daa
fs
mov
pop
scas
and
adc
or
jge
sti
mov
jle
loope
data16
or
and
data16
cmp
mov
mov
insb
loop
popa
add
mov
push
lock
loop
or
push
xchg
cmpsl
rcll
push
fiadds
rdtsc
sbb
cmp
mov
push
or
test
xlat
js
sbb
pop
fneni(8087
jecxz
inc
adc
inc
lret
cwtl
xchg
or
add
mov
dec
not
loope
movsb
dec
out
or
xchg
or
aas
push
pop
jp
insb
mov
cmpb
mov
mov
jmp
arpl
cli
jno
outsl
cmpsb
pop
push
and
xor
sub
jne
push
and
stos
cltd
cltd
jb
out
mov
add
jl
xor
mov
add
lcall
smsw
jmp
cmpsl
xchg
mov
cmp
xlat
sub
adc
or
inc
mov
and
push
scas
ds
sbb
mov
or
sar
or
jmp
addr16
enter
scas
cmc
push
scas
mov
jge
out
stc
fs
sbb
imul
gs
test
call
lock
inc
xchg
mull
lahf
out
neg
inc
lret
jae
int3
add
or
loopne
dec
xchg
les
sbb
mov
mov
jmp
adc
in
mov
repz
mov
or
mov
mov
xor
mov
mov
inc
mov
mov
and
lcall
loop
cmp
push
or
insl
mov
cmp
xchg
ss
xchg
cmp
shll
xor
adc
jb
xor
xor
xor
fcomps
in
scas
fisttpll
add
pop
and
loope
call
mov
sub
mov
lea
ja
mov
xchg
mov
addr16
xor
push
mov
cmp
incl
shr
idivl
aam
pop
pop
dec
out
pop
incb
xor
cmpsb
in
mov
out
sbb
xchg
mov
fwait
pop
mov
adc
mov
xchg
outsb
dec
jg
into
scas
fwait
mov
das
xor
jl
add
fcomip
lcall
or
lea
divl
sbb
mov
stos
and
rcr
lcall
cmp
int3
shlb
sbb
adc
mov
rolb
stc
inc
xorl
imul
inc
push
stos
adc
or
pop
stc
or
add
ljmp
push
mov
sbb
and
mov
das
and
xchg
cmpsb
add
or
cmp
jge
in
pop
mov
out
add
ja
mov
ds
push
mov
aam
adc
mov
fcoms
lods
pop
jo
cltd
xchg
jne
iret
jg
arpl
ljmp
push
pop
inc
imul
adc
int
jg
push
xor
inc
dec
nop
or
fwait
jecxz
int
push
js
movsl
fcompl
movb
lret
xchg
dec
sub
cmp
lcall
les
in
jne
push
sub
pop
fs
loope
cli
cmp
arpl
repnz
leave
rorl
push
mov
cld
loopne
out
pop
cs
and
mov
jmp
xchg
cmp
jle
repz
pop
adc
jnp
test
push
das
pop
xor
in
daa
out
adc
inc
outsl
or
aaa
pop
nop
lahf
pop
sbbb
xor
inc
cmp
repz
clc
and
mov
iret
loopne
xchg
and
outsb
repz
fmuls
jecxz
rcll
test
fdivs
cmp
shrl
aas
addr16
push
popa
xor
and
gs
cpuid
pushf
les
or
int
es
adc
stos
mov
adc
fildl
add
bound
cli
and
pop
adc
mov
andl
mov
mov
push
or
mov
add
stos
movsl
sbb
clc
dec
xchg
mov
push
mov
leave
xchg
jmp
rcr
mov
or
cmp
aas
adc
pop
sti
movups
mov
loop
sub
ret
data16
adc
frstor
leave
xchg
addl
fisttpl
inc
cli
sbb
mov
sarl
xchg
mov
inc
pop
jo
adcb
inc
cmpsl
je
insl
sbb
mov
or
aam
lods
push
shll
push
xchg
or
push
test
push
mov
cmpsb
hlt
test
jmp
lret
dec
mov
shlb
mov
xchg
add
jmp
add
je
push
stos
or
add
sub
jnp
cmp
pushw
aaa
dec
push
adc
jl
push
push
push
sub
inc
jle
call
adc
sub
ja
loopne
push
sbb
stos
cmp
cwtl
push
cmpsb
jecxz
mov
sbb
pop
and
mov
mov
ljmp
push
jne
dec
dec
or
shll
push
push
loope
mov
sbb
add
jae
ds
jbe
push
add
sub
sbb
into
push
push
lods
fcomi
in
mov
test
fisttps
xor
cmc
cmp
fldpi
push
cmp
scas
xchg
dec
xor
notb
lret
add
es
add
andl
push
mov
push
add
xchg
mov
lods
loop
or
repz
sbb
lea
mov
cmp
xchg
test
mov
cwtl
test
dec
lret
or
xchg
mov
pop
mov
mov
adc
fdiv
in
sbb
std
inc
adc
dec
into
movl
xchg
add
lcall
fs
enter
jbe
mov
pop
leave
push
movlhps
shl
out
leave
fwait
add
jg
xchg
mov
mov
xor
mov
jle
and
shlb
xchg
adc
scas
outsl
jl
xchg
mov
jns
push
add
push
enter
jo
mov
pop
lcall
insl
push
jnp
out
lcall
push
push
insl
mov
sub
pusha
xor
testb
cmpsb
cld
pop
add
fwait
add
mov
rcrl
sub
pushf
xchg
sti
mov
ud2
pop
mov
mov
cmp
sub
sar
mov
xor
out
cs
mov
ljmp
scas
jecxz
xor
dec
push
push
aam
pop
clc
adc
jbe
and
dec
das
cmp
popf
xorl
xchg
or
sub
andb
xchg
popf
jo
retw
lock
mov
nop
aaa
mov
xchg
add
cli
stos
jb
xchg
and
fdiv
pop
nop
add
subb
inc
xchg
mov
data16
loopne
cld
pop
inc
jnp
stos
pop
ljmp
mov
adc
aas
xor
fs
shlb
mov
lahf
ds
loopne
test
push
leave
push
cld
sub
push
fdivrs
rcr
dec
cmp
mov
loopne
test
push
mov
scas
and
inc
lods
test
aad
pop
add
aam
in
test
out
and
push
aad
mov
sub
lods
pop
or
lahf
loopne
sub
enter
stos
mov
add
add
pop
loop
imull
fldl
sub
cmc
dec
nop
sbb
clc
loope
add
call
push
out
cmp
gs
out
and
outsl
clc
push
and
add
cmp
mov
xchg
inc
xchg
dec
fcompl
jl
pop
pop
fsubrs
movsl
sahf
sahf
xor
dec
jmp
xor
call
fucomp
mov
cmp
sub
and
mov
push
cli
mov
fs
fdivr
or
push
inc
mov
cmp
adc
pop
mov
add
andl
and
pop
outsl
mov
loopne
into
jnp
cmpsl
cmp
push
in
mov
movsl
mov
popf
add
jmp
out
stos
fldt
mov
dec
or
xchg
aad
aas
add
or
fwait
xlat
or
add
arpl
xchg
pusha
aam
mov
movsl
xor
mov
out
hlt
sbb
jae
mov
pop
cmpsl
rorl
arpl
lods
inc
cmc
shrb
xchg
das
movsb
dec
gs
push
stc
clc
iret
insl
adc
inc
mov
xchg
inc
pop
shrb
out
jg
lds
cmp
rcrl
int3
mov
dec
cltd
push
aam
mov
or
cwtl
jo
add
lods
cmp
and
mov
imul
pop
pop
repnz
cmpsl
setne
jl
sub
cmp
lds
xchg
xlat
in
mov
push
pushf
push
loope
frstor
sahf
cmc
clc
push
jo
leave
pop
add
popa
test
or
daa
mov
sbb
dec
sub
dec
lock
jo
out
sbb
mov
in
ret
bound
stos
leave
lods
sub
adc
outsb
insb
xchg
lahf
jno
sbb
xlat
rcl
jmp
aam
inc
pop
sahf
int3
mov
ljmp
sbb
scas
mov
push
pop
pop
shrb
movsb
out
cli
and
adc
and
jae
jp
jno
gs
inc
add
mov
ljmp
push
inc
lcall
sub
cmp
mov
push
adc
es
mov
pop
mov
sub
loope
lods
dec
lret
or
out
bound
fs
jecxz
cltd
lea
ds
mov
stos
loope
xchg
pop
pop
or
pop
data16
add
and
dec
jbe
das
xlat
mov
inc
test
sub
or
popa
ds
in
push
int3
insl
lods
aad
out
adc
or
push
into
ja
jle
inc
mov
clc
jmp
pop
dec
push
arpl
leave
push
test
dec
outsb
rorl
dec
cwtl
std
xor
jo
bound
push
ljmp
loopne
dec
cmp
add
insl
mov
or
adc
fcoml
pop
std
mov
sar
jg
bound
jnp
add
sub
mov
lcall
mov
ret
and
int3
lock
cmp
jnp
std
mov
xorl
push
and
clc
dec
sbb
add
pop
mov
mov
push
out
out
out
add
dec
imul
stos
fisttpll
out
ret
lcall
add
testl
and
int
cmp
dec
push
sbb
out
dec
add
aam
jb
cltd
rcrl
nop
mov
sbb
xor
sub
pop
or
adc
add
cmp
jge
push
out
nop
lcall
fmull
rorb
mov
loop
idivb
sub
inc
push
mov
add
cs
mov
xchg
and
repnz
stc
cmpsl
test
dec
push
jo
repz
arpl
testl
cmp
js
cmpsl
mov
dec
xor
push
inc
pop
sbb
and
insl
cmp
sub
hlt
cmc
sub
es
scas
repz
repz
push
das
mov
addl
mov
and
cli
inc
cli
test
pop
and
sbb
pop
inc
rol
sbb
shrb
cmp
mov
out
jne
adc
jbe
xchg
mov
pop
cmp
cmp
push
gs
int3
pop
and
sbb
cld
inc
aad
xchg
pop
and
inc
cmpsb
call
in
mov
push
sub
imul
xchg
std
mov
mov
fildll
aas
test
xchg
jecxz
inc
lods
push
sahf
aad
mov
mov
insl
fsubs
dec
test
jmp
jbe
loopne
mov
gs
push
and
jl
int3
xor
ret
push
cmp
loopne
add
and
test
hlt
cmp
insl
insl
dec
aas
lcall
testb
mov
dec
data16
add
cmpsb
es
jmp
lods
inc
add
jns
enter
dec
shll
jno
mov
or
scas
aad
pop
in
sbb
test
mov
js
test
rorb
and
cmp
jns
adc
int
cmp
fdivrl
inc
loope
pusha
adcb
sti
dec
call
inc
mov
dec
fcmovb
xchg
mov
inc
lret
xor
jns
dec
out
int
add
pop
cltd
pop
xor
sahf
pop
ss
ret
xchg
stos
pop
push
jecxz
das
mov
fnstenv
dec
testl
incb
sbb
icebp
push
fs
sub
jae
inc
mov
cmp
mov
lds
fcompl
pop
repnz
cmp
fsubr
cli
lea
xchg
xor
mov
mov
mov
test
loopne
cmp
pop
cltd
subb
popa
mov
arpl
addr16
scas
aas
push
scas
dec
popa
notl
xchg
stc
jg
xor
fld
xchg
push
stos
jmp
cmp
pop
das
jbe
inc
mov
cmp
inc
test
sbb
or
cmpl
adc
or
dec
clc
shlb
sub
test
sbb
in
pop
fdivs
and
fiadds
hlt
sub
mov
fimull
popf
or
repz
aad
das
mov
mov
dec
jne
aaa
dec
inc
aad
push
xchg
push
pop
sbb
sbb
jbe
cmpsl
ljmp
sti
xorb
and
fsubrp
shl
sbb
push
out
fisubrl
rcrl
xchg
scas
notl
push
sub
jns
icebp
icebp
xchg
pop
insb
mov
in
mov
inc
fcmove
push
lds
in
mov
dec
insb
mov
dec
pop
std
push
mov
sahf
out
adc
sbb
paddq
push
stc
mov
mov
sub
xchg
test
in
pop
cli
mov
addr16
js
lea
popf
mov
dec
lods
mov
adc
rcrl
inc
push
fmull
xchg
testb
inc
or
filds
pop
inc
inc
mov
inc
xchg
push
aad
loop
jns
int3
repz
mov
cs
inc
adc
subl
inc
mov
leave
push
dec
imul
mov
daa
les
outsl
loop
push
cmc
cmp
fwait
icebp
mov
push
jo,pt
xchg
test
iret
dec
lea
add
pmovmskb
cmc
sarb
mov
insb
pop
dec
jns
mov
enter
in
jle
mov
xor
movsb
test
jg
inc
sbb
or
stos
imul
sahf
or
stc
jns
jg
mov
mov
mov
dec
fdivrl
mov
push
lock
jb
push
jge
mov
in
insl
repnz
mov
lret
fidivrl
jne
add
stc
test
out
push
sti
in
test
xor
repnz
fs
pop
jmp
add
add
sti
insl
or
mov
mov
dec
or
movlps
rclb
sbb
push
pushf
loop
movsb
inc
mov
push
ret
insl
frstor
ja
out
test
adc
inc
mov
sbb
push
fcmovnb
out
movsb
mov
or
cmpsb
scas
fwait
adc
das
loopne
fs
sahf
add
push
aas
popf
shlb
dec
je
sarb
shrb
call
jp
jle
ja
pop
gs
test
insl
push
cmp
jmp
aaa
xor
icebp
pop
mov
mov
pushf
inc
mov
mov
aaa
les
and
jle
cmc
cmpsb
jb
mov
ret
cmp
and
ret
test
inc
inc
pop
popf
xchg
mov
jae
idivb
add
push
cwtl
cld
mov
adc
push
lret
daa
cli
and
xor
sbb
mov
adc
lds
mov
or
mov
dec
mov
enter
neg
test
loop
dec
jl
push
test
mov
mov
xchg
push
mov
jp
leave
xor
std
jo
rcll
sarb
xchg
sub
loopne
fldenv
dec
mov
dec
cmp
fwait
aaa
mov
jns
mov
js
sahf
fdivl
lcall
and
and
rol
out
fwait
in
lods
jb
lret
lahf
popa
sub
push
insl
rorb
xor
enter
sub
inc
mov
pop
push
js
clc
push
cmpsb
rcl
fistpl
daa
cwtl
xor
stos
jb
lea
cmp
jmp
stos
test
adc
inc
popa
jecxz
ret
shr
cwtl
imul
stc
sbb
aaa
xchg
dec
jnp
adc
push
sub
cs
xchg
adc
stos
adc
mov
enter
mov
push
add
mov
jl
and
mov
cs
test
sar
and
cmp
pop
mov
rol
mov
jae
test
jecxz
mov
mov
sub
imul
mov
stc
xchg
jecxz
xchg
in
xor
jl
call
outsb
or
xor
jle
push
call
cmc
mov
xor
out
call
mov
pop
call
cmpb
pop
push
jbe
jge
popf
hlt
inc
xchg
testl
mov
push
adc
adc
xlat
gs
push
pop
xor
xor
add
inc
mov
mov
mov
aam
pop
pop
adc
dec
dec
xchg
adc
add
fs
mov
add
jb
push
inc
icebp
mov
sbb
mov
push
push
xor
add
add
inc
cli
stc
addr16
mov
sbb
mov
in
mov
xor
xor
adc
inc
addr16
cmp
sbb
xor
xorl
lret
arpl
je
mov
push
xor
sbb
sbb
push
cmp
adc
test
pop
and
aam
add
dec
pop
test
add
loop
mov
inc
and
aas
xchg
inc
dec
sti
cmp
pop
outsl
sbb
sbb
fstpt
push
inc
std
adc
inc
imul
mov
dec
push
cmp
rorl
mov
add
push
and
mov
xchg
sbb
or
addl
xchg
cmp
mov
movl
cmp
pop
aas
xor
sub
cmp
push
dec
push
push
aam
adc
and
ljmp
sub
ds
scas
into
aas
mov
out
push
aaa
cmp
aas
rcll
cmp
inc
sub
xchg
xor
fisubs
imul
std
push
mov
and
lret
push
lods
loopne
mov
push
into
mov
mov
mov
shlb
inc
test
or
xchg
sbb
push
cmp
jmp
scas
mov
sub
fistps
cmp
out
push
imul
sub
imul
xchg
mov
sub
out
in
adc
sbb
lahf
lods
xchg
dec
loope
lcall
sbb
movsl
jae
sbb
cmpsb
jmp
jp
push
aaa
pop
jae
jns
push
push
or
or
xchg
sub
ret
and
sub
pop
mov
imul
add
sub
mov
and
outsl
add
rorb
scas
or
movsl
lods
aas
pop
xchg
xor
test
mov
adc
cmc
repz
div
xchg
inc
ja
sahf
pushf
leave
add
fidivrs
mov
push
dec
jnp
mov
inc
pop
out
dec
ficompl
sub
hlt
aad
loopne
sub
mov
gs
rcrl
jle
or
ret
ljmp
das
dec
movsb
insl
stos
sahf
push
xchg
dec
inc
mov
daa
inc
sbb
xor
fs
push
lahf
xor
cwtl
ret
xor
mov
cmp
mov
cmp
cltd
cmp
addl
es
popf
mov
jmp
or
sub
adc
loopne
lds
hlt
sbb
or
sti
mov
and
push
dec
dec
out
por
mov
loope
mov
outsb
dec
cmp
dec
sub
jle
sub
in
sbb
test
data16
pop
sbb
inc
xchg
sub
shlb
popf
xor
dec
out
mov
add
xorb
stc
in
sub
push
and
loop
imul
loopne
js
xchg
push
mov
sub
scas
repnz
pop
pop
fwait
push
into
das
fs
add
inc
inc
out
popa
xchg
stos
xchg
cmp
sbbl
setge
sub
icebp
addr16
adc
jle
xchg
and
sub
or
fdivs
or
dec
test
sar
cmc
pop
sub
dec
dec
or
pop
add
push
clc
aaa
stos
jb
jl
sub
jo
inc
mov
adc
adc
stos
test
popa
imul
outsl
mov
test
ret
pusha
std
cmp
xchg
cmp
fcmovnu
mov
fldenv
neg
iret
addr16
pop
mov
leave
push
xor
loope
lcall
mov
push
adc
daa
adc
dec
cmpsb
repnz
andb
xor
sarl
mov
mov
fldt
jp
jb
pop
hlt
jl
into
xor
jle
adc
addr16
xor
jle
xchg
ja
push
gs
loop
cmp
adc
pop
push
lret
adc
pop
sub
mov
pop
pop
pusha
dec
jne
bound
mov
test
movsb
xor
dec
inc
idivb
stc
and
mov
jno
mov
fnstenv
xor
or
cmp
icebp
or
es
daa
jo
sub
loopne
and
cs
addr16
pop
fmulp
and
lcall
inc
cltd
ja
sti
out
jp
cs
inc
sbb
push
add
adc
insl
xchg
lret
subb
lcall
pop
movsl
mov
xchg
insb
mov
mov
nop
adc
push
mov
into
mov
sti
movsb
cmpsb
pop
sbb
dec
pop
jno
sub
adcl
mov
mov
pop
cmc
jge
mov
mov
lods
sahf
fsubr
add
pop
lahf
sbb
into
in
jnp
sub
data16
rolb
xchg
sbb
push
cwtl
xchg
xor
push
adc
addr16
adc
mov
insl
out
lcall
jge
arpl
mov
mov
aad
mov
scas
xor
pop
pop
dec
sti
lock
and
movsb
jmp
xchg
adc
xchg
pop
mov
push
xchg
adc
in
push
xor
or
fldcw
fidivrl
xchg
in
hlt
iretw
mov
push
add
push
out
in
lea
adc
jp
lret
fucompp
clc
adc
sub
mov
xchg
and
xchg
inc
mov
dec
sub
popa
jp
mov
clc
mov
add
jecxz
xchg
jbe
push
mov
into
lahf
pushf
dec
xchg
or
mov
cmp
cmpsl
sarl
es
out
mov
dec
dec
or
mov
sbb
inc
dec
stc
sbbb
aam
shl
inc
out
adc
cmpsl
insl
pop
pop
pop
ret
popa
frstor
lcall
or
mov
mov
xor
js
aas
and
mov
inc
sti
inc
aam
sbb
mov
cmp
int3
mov
sbb
lods
add
je
push
sub
shl
xor
cld
dec
int3
mov
push
add
pop
movsl
jmp
jbe
cli
mov
arpl
mov
and
shll
loope
or
aaa
mov
xchg
adc
xchg
bound
popa
jge
sub
in
adc
lret
sub
je
jecxz
jmp
test
cltd
dec
xor
dec
mov
push
mov
das
pop
mov
mov
sbb
cmp
xchg
sub
pop
sub
loopne
pop
cmp
hlt
xor
add
in
popf
mov
es
dec
cld
sti
dec
sbb
xlat
insb
inc
and
out
fisubs
cmpsl
sarb
lret
sbb
sub
sbb
pop
stc
loopne
daa
roll
xchg
mov
testb
stc
jbe
rorb
lret
sub
insl
cs
sbb
je
inc
lea
xor
sbb
cmp
and
mov
lcall
out
sbb
adc
in
ljmp
lret
xchg
inc
arpl
pop
add
cmp
outsl
and
push
test
rclb
xchg
and
ljmp
pop
mov
sti
or
andb
xchg
mov
scas
push
rcll
leave
es
pop
xchg
mov
and
xchg
mov
dec
push
scas
cs
dec
xchg
movsb
clc
js
jnp
jp
and
inc
rclb
jl
int
cmpsl
inc
cmp
and
testl
dec
pop
xorb
and
push
shlb
inc
std
and
and
xchg
push
lea
jno
jl
cmp
das
cld
inc
or
fiaddl
mov
push
sub
or
and
test
mov
xchg
xchg
lock
aas
sbb
jno
jbe
mov
add
xor
aam
cwtl
cltd
shll
pop
mov
popa
inc
xchg
test
and
cld
out
cmp
cmp
jnp
push
lret
add
fnstcw
cld
out
lahf
inc
pop
lahf
and
mov
lea
jo
add
mov
cmc
arpl
inc
pop
push
and
aad
xor
mov
mov
imul
xor
lds
scas
push
cmp
pop
jmp
jl
jnp
popa
in
arpl
loopne
ret
fsts
xor
fxch
jb
sbb
xor
inc
stos
adc
mov
outsl
mov
push
enter
lret
push
push
mov
fisubrs
lahf
jl
push
xchg
fistps
arpl
mov
mov
xchg
rcrl
outsl
push
pusha
lret
inc
out
stos
ss
push
fnstcw
and
fsubrl
ja
clc
push
bound
xchg
fwait
jl
sahf
scas
int3
sarl
mov
jmp
lock
dec
lods
aaa
xchg
cmpl
dec
leave
sbb
orb
lcall
fisubrl
pop
pop
inc
outsl
mov
lcall
sarl
repnz
stos
int3
xchg
repnz
xor
push
cmp
inc
dec
stos
jns
xchg
loope
rcrb
int3
rcll
push
icebp
ret
mov
movl
sahf
lods
mov
aaa
mov
inc
js
xchg
enter
cmc
jns
mov
in
dec
fsubl
dec
push
ret
fstps
xlat
lret
ja
pop
insl
mov
bnd
ret
jg
cmp
and
adc
pushl
aad
ret
pop
mov
add
clc
fildll
or
repnz
lods
hlt
cmp
fstl
xchg
std
xorl
or
mov
pusha
push
push
clc
insb
adc
movsb
mov
clc
icebp
fldenv
pop
mov
sbb
popa
adc
jle
mov
pusha
dec
stc
ljmp
add
popa
pop
ds
iret
adc
lock
out
outsb
fnstsw
stos
xlat
cli
hlt
pop
jl
push
mov
jp
aaa
and
push
cmp
fdivp
icebp
sti
decl
adc
test
je
fcompl
sub
and
fildll
int3
in
cmp
xchg
push
mov
arpl
mov
inc
lea
add
mov
cmc
andb
sbb
rcrl
aas
add
adcb
outsb
lret
rcl
in
xchg
dec
lods
lods
and
imul
mov
fcomps
xlat
push
mov
add
pop
push
dec
fsubrl
inc
aam
mov
es
ja
mov
je
xor
aas
imul
xor
xor
in
cmp
jge
xor
xchg
out
andb
cmp
jmp
mov
pop
jb
push
adc
xorl
setne
out
ja
movsb
insb
xchg
add
aam
mov
pop
inc
mov
ljmp
out
out
in
cmpsl
mov
inc
dec
rcl
add
sub
aaa
sti
dec
cmp
orb
mov
inc
xchg
rolb
pop
enter
push
mov
cmp
sub
pop
popa
enter
fnsave
nop
andl
fidivl
ja
out
cmc
pop
inc
mov
inc
adc
adc
shrl
inc
imul
test
lea
les
fildll
dec
cmpsl
push
incl
mov
jmp
and
and
lods
xchg
inc
iret
or
ret
bound
aad
outsl
sarb
inc
adc
push
aad
cmp
xorl
or
es
movsb
int
jae
add
ljmp
mov
shll
aad
mov
push
fs
dec
gs
loope
dec
lahf
mov
pop
xchg
xchg
inc
pop
ret
fmulp
scas
push
into
pop
xchg
repnz
sbb
aad
or
incl
jb
sbbl
mov
sbb
popf
shl
pop
dec
call
fstpt
sbb
pop
cmc
cmpsb
fdivrp
mov
xor
adc
and
push
pusha
sub
and
int3
int
je
stc
mov
loop
or
sub
cmpsb
imul
sbbl
pop
push
push
mov
pop
in
pop
sub
jecxz
cli
adc
ljmp
jecxz
btc
mov
out
loope
jmp
push
aaa
mov
lds
mov
inc
aaa
inc
jo
cmp
cli
out
push
and
ds
xchg
xor
in
pop
mov
mov
dec
add
popf
adc
shrb
mov
and
hlt
outsb
and
iret
push
test
cwtl
aaa
adc
xchg
add
movsb
add
jns
mov
adc
outsb
pop
es
in
jp
jno
fidivl
fistl
loope
sbb
pop
xchg
push
inc
ficompl
insb
pop
fimuls
push
jg
arpl
imul
fsubrs
repnz
xchg
mov
and
adc
xchg
add
cmc
std
mov
ret
xchg
mov
inc
movsl
clc
daa
divl
pop
imul
mov
jge
mov
outsl
push
pop
push
adc
popf
adc
fwait
std
bound
loop
xor
mov
sti
in
repnz
addb
hlt
loope
add
dec
test
jecxz
mov
add
js
inc
out
int
or
ret
mov
inc
in
jnp
cmp
dec
pop
rorl
add
int
repnz
cli
add
xchg
xchg
xor
inc
dec
lret
cmpsl
sub
icebp
sbb
ljmp
pop
imul
sbb
inc
ss
vmwrite
ja
outsb
dec
lds
fldenv
inc
bound
push
bound
aas
inc
jns
cmp
int
movsl
imul
vmread
pop
jle
add
gs
fmull
xorb
push
mov
mov
jge
sub
sti
add
or
icebp
rcrl
js
gs
iret
jnp
stos
in
insb
aad
mov
sub
mov
aas
sub
sub
pop
je
cs
sub
lods
sbb
mov
and
mov
push
scas
aad
mov
popf
imul
dec
inc
mov
repz
js
and
inc
jp
into
mov
pop
fdivrl
mov
and
shll
dec
xor
pop
mov
fwait
pop
add
cmp
repnz
adc
imul
and
xchg
lea
xlat
cwtl
sahf
mov
adcl
outsl
add
mov
cmp
pop
xchg
adc
mov
hlt
jae
test
scas
rcl
inc
in
push
jg
cmpsl
aas
leave
fidivrl
pop
int3
xor
lods
xor
adc
dec
pop
mov
sub
loopne
shl
mov
xchg
das
je
test
rorb
pusha
adc
in
cmpsl
addr16
inc
addl
lods
mov
mov
test
jecxz
xor
xor
inc
mov
jo
lret
pshufw
push
push
lods
dec
jne
jg
jle
in
arpl
aaa
rcl
jbe
mov
cmp
inc
dec
mov
mov
ss
mov
sub
imul
adc
cmpsl
ret
fstl
fstp
and
out
imul
sbb
cmp
add
sub
mov
jb
fnstsw
xlat
sub
push
clc
dec
sahf
int
push
loopne
mov
or
mov
xchg
ja
mov
and
mov
daa
std
jecxz
cmp
inc
out
sub
add
xchg
mov
adc
stos
dec
mov
pop
js
popa
loopne
in
pop
mov
mov
mov
je
popf
fstp
and
xchg
sbb
push
sub
or
dec
mov
scas
in
inc
xchg
test
dec
adc
inc
mov
jae
xchg
lcall
pushf
mov
jle
jmp
jge
xor
repz
and
gs
sbb
mov
jb
cmpsb
xor
rcrl
xor
aad
subl
and
dec
mov
insb
ret
mov
add
sti
and
xchg
loop
insb
xor
inc
mov
lock
push
gs
outsb
je
lds
mov
rcrl
out
adc
data16
sahf
inc
ljmp
ja
and
adc
dec
xor
sbb
sub
pop
sub
imul
jg
jg
pop
add
rcpps
data16
adc
pop
cmpsl
cmp
mov
scas
cmp
push
xchg
arpl
inc
movsl
test
or
in
inc
or
jle
sbb
jp
lods
push
and
push
pop
es
lods
dec
jbe
in
movsl
and
imull
sbbl
call
hlt
xchg
jle
push
push
gs
inc
mov
mov
ds
bound
push
aaa
test
repnz
jmp
inc
gs
outsb
pop
xchg
xor
jge
rcrb
mov
push
jo
into
mov
gs
push
mov
stc
rcl
cltd
scas
fidivrl
mov
mov
push
jp
hlt
pop
sub
ds
shl
nop
mov
dec
aaa
add
mov
and
fcmovnu
cmpl
clc
or
fstps
outsb
loopne
aas
cmp
insb
xchg
aaa
mov
push
sub
bound
loope
or
inc
test
jno
and
int
push
rorl
mov
orl
adc
imul
add
or
stc
sub
imul
sbb
xchg
xor
out
int
addb
sbb
frstor
jp
mov
je
or
andb
mov
add
add
push
imul
ss
les
jb
add
fisubrl
outsl
push
inc
fstpt
in
pop
pop
cltd
mov
scas
inc
and
cmp
movsb
popl
sub
fdivrp
mov
aam
dec
jg
jmp
mov
cwtl
imul
or
adc
icebp
push
push
mov
or
mov
mov
in
les
fmul
inc
mov
mov
fisttpll
mov
push
pusha
inc
sahf
push
xor
xor
lcall
fidivs
stos
div
sub
lret
xchg
nop
sahf
aad
int
cmpsb
hlt
mov
popf
cmpsb
cmp
lods
mov
jae
xchg
pop
popa
daa
sbb
fsub
mov
outsl
mov
xlat
jmp
cmp
lahf
faddl
out
xchg
imul
jno
xor
pop
or
sub
jmp
xchg
or
mov
cmp
stos
aas
pop
nop
inc
stos
lea
and
mov
add
cwtl
mov
cmpb
push
cmpw
imul
jo
fs
data16
jns
add
add
push
dec
jo,pn
xchg
es
ret
sti
cld
mov
push
or
movsb
outsl
dec
dec
repnz
dec
scas
mov
test
mov
das
int
fwait
ljmp
inc
int
cmc
popf
xchg
pop
adc
fildl
popf
push
popl
fmul
insb
les
mov
and
scas
fisubrl
mov
jl
mov
cmpb
test
xchg
sbb
jns
aas
test
jne
sbb
arpl
dec
dec
sub
lock
subb
pop
cs
in
push
aas
jl
pop
pop
fwait
inc
stos
aas
jno
jne
sub
push
mov
movsl
punpcklwd
and
pop
xor
mov
push
popa
mov
ja
mov
stos
orl
lds
mov
and
inc
rcll
cltd
xor
ficoml
cmp
pushf
ret
sbb
aam
std
testb
arpl
inc
mov
push
outsl
in
add
add
mov
mov
push
jae
inc
lret
mov
xchg
push
in
mov
in
test
ljmp
gs
lret
push
jge
loope
roll
sbb
leave
rclb
adc
jecxz
push
jp
outsb
xorl
lea
idivl
arpl
out
popa
jns
or
outsb
es
ficomps
xchg
pop
dec
fucomip
insb
jg
lret
fstl
sub
cmpsl
sbb
lods
mov
cmp
xchg
cs
lds
push
inc
sbb
sbbl
add
jmp
jns
adc
sub
jge
test
or
in
test
in
scas
jae
cmc
inc
xor
xchg
pop
jp
vmread
push
mov
insl
push
out
insl
orl
rcrb
es
repz
mov
and
dec
inc
rcll
mov
or
jae
lods
pop
icebp
mov
mov
mov
jae
pop
push
pop
dec
ret
jb
inc
in
outsb
push
sbb
xchg
jo
cmc
or
push
sub
or
sbb
pop
sub
push
sbb
addr16
inc
pop
and
repz
cwtl
repnz
inc
out
sbbl
leave
fistps
out
mov
add
int
test
sub
into
and
or
and
leave
cmp
jno
mov
dec
leave
xor
mov
inc
jbe
out
mov
mov
dec
pop
adc
fistl
mov
rcrb
aas
imul
in
and
outsl
filds
adc
sbb
test
mov
stc
lret
jl
push
in
test
je
psllq
and
push
lods
xchg
and
push
cs
aad
sub
pop
inc
cmp
mov
add
dec
and
shrl
jae
loopne
xor
push
mov
icebp
fsts
xchg
and
lds
faddl
xor
push
push
fidivrl
mov
gs
pop
rcll
scas
out
mov
xor
arpl
mov
dec
mov
psubusb
cltd
int
mov
lahf
jnp
dec
mov
cmpsl
or
imul
fstpl
test
ret
fldcw
enter
fwait
stc
js
lods
dec
in
sbb
cs
call
adc
mov
pop
pushf
mov
daa
sti
imul
jl
jno
cmp
ljmp
aaa
in
inc
push
push
lahf
iret
out
dec
stc
call
dec
sub
in
xor
cltd
aam
ftst
loope
ret
pop
jbe
mov
push
fidivl
fs
inc
gs
sub
in
xchg
in
jl
cld
test
and
mov
jb,pt
aad
mov
mov
fstp
sbb
daa
addr16
fnstenv
add
push
lret
push
mov
cli
mov
cmpsl
xchg
imul
test
jmp
add
xchg
call
or
fwait
sub
je
add
adc
inc
mov
out
fwait
scas
mov
ss
mov
mov
stos
std
jg
xor
lods
lods
sbb
inc
adc
adc
jp
repnz
mov
and
addl
push
push
into
pop
inc
fstps
into
add
xor
fcomi
mov
dec
cmp
pop
cmc
add
inc
adc
and
cmp
inc
out
je
les
jg
inc
out
mov
xor
inc
cmp
push
jle
push
push
add
cmpsl
cmpsb
fwait
xchg
inc
notl
jmp
loope
mov
lret
subl
fidivl
roll
jmp
xor
rolb
xchg
lock
ljmp
shl
inc
in
enter
xor
cli
lret
push
out
xchg
xchg
mov
dec
push
fidivrs
jbe
dec
daa
or
push
or
loope
mov
jae
xor
pushf
lods
cmp
dec
jg
mov
adc
andl
push
dec
in
pop
xor
xadd
cmp
adc
mov
mov
pusha
xchg
pop
sarb
mov
mov
sbb
jge
sub
add
fld
sti
or
jmp
inc
pop
test
test
pop
add
incb
test
adc
in
push
ja
and
inc
add
inc
pusha
ja
and
leave
rol
je
fstpt
fimuls
cmp
sub
pushf
pop
test
fdivrs
loop
lods
das
mov
testb
fcomps
and
daa
sbb
sbb
and
xchg
push
push
stos
enter
cli
inc
rcll
push
xor
adc
and
mov
xor
add
adc
sub
xchg
in
insl
push
sti
inc
lahf
scas
cmpsb
lea
rorb
loope
dec
or
sahf
jns
in
jge
mov
mov
push
cmc
subb
xor
add
aas
xor
fbstp
lret
and
sbb
mov
jmp
movsl
mov
daa
adc
outsl
push
sub
pusha
subb
add
xchg
jl
addr16
jo
jg
add
fdivrs
lea
out
dec
je
jp
inc
sti
dec
rol
mov
sub
cmp
aad
mov
cmp
sub
jbe
mov
rol
jmp
pushf
push
sbb
pushf
or
dec
mov
sbb
mov
and
subb
xchg
outsb
mov
mov
cli
lcall
sub
xor
out
mov
jl
mov
pop
push
dec
std
sub
push
and
scas
les
ds
cmc
mov
add
dec
jno
outsl
in
rolw
xchg
daa
push
or
adc
scas
aaa
test
ret
int
pop
mov
lods
jo
mov
inc
push
jl
mov
or
aam
add
jns
int3
mov
ja
mov
aaa
imul
xor
mov
aam
cli
mov
cltd
dec
adc
sbbl
shrb
xchg
cltd
pop
nop
cmp
jle
adc
hlt
nop
xchg
loope
aas
xchg
aam
pushf
std
xor
lahf
jb
push
jmp
jecxz
add
or
call
test
add
push
adc
out
push
test
arpl
push
test
jno
xchg
dec
stc
jbe
cmp
sbb
or
push
adcb
pop
add
mov
rorb
das
lret
cld
push
popf
arpl
stos
dec
inc
ficomps
loopne
sbb
push
mov
jns
xchg
cmpsl
cmp
cmp
sub
inc
stos
call
int3
loop
outsl
jle
push
add
js
pop
in
jnp
mov
push
add
inc
sub
adc
push
sub
cmp
push
addr16
shlb
adcb
xchg
pop
pop
or
shlb
or
stos
jmp
cmp
xchg
mov
mov
hlt
or
sahf
mov
add
outsl
jmp
std
mov
in
mov
scas
mov
aad
adc
shlb
sub
in
js
pop
aaa
js
loopne
les
cmpsl
jge
fiadds
jg
jo
mov
dec
loope
sbb
ss
sbb
pop
push
mov
pop
cmc
lods
scas
xor
xor
or
fdiv
mov
inc
stos
es
stos
dec
xor
test
lahf
cmp
cwtl
int
lods
dec
push
and
gs
out
cmp
lea
lds
repz
dec
lea
int
in
mov
dec
dec
in
sub
je
lock
out
inc
xor
mov
mov
sub
dec
sub
push
or
loopne
jecxz
and
into
je
sahf
pusha
and
and
daa
push
inc
stos
sbb
cmp
movsl
arpl
mov
sti
jge
adc
scas
xor
mov
xchg
dec
addb
dec
gs
cmp
and
loopne
mov
mov
lret
rorb
or
mov
mov
cmp
add
xor
in
sahf
sub
sub
icebp
dec
cmp
and
or
scas
fwait
stos
jns
mov
test
adc
dec
jge
cmp
ss
sub
xor
pop
addr16
xlat
pop
mov
stc
fmul
sub
and
mov
sbb
mov
scas
dec
push
xor
push
xor
mov
cmp
pop
mov
xor
add
xor
repnz
mov
sbb
sahf
rclb
pop
mov
cmp
mov
push
ja
jns
xchg
ds
gs
pusha
test
jl
xor
push
xor
jl
leave
inc
push
xor
push
push
inc
addr16
mov
jge
jb
mov
xor
daa
push
xchg
xchg
xlat
aam
cmp
dec
fsts
sbb
scas
iret
push
outsb
inc
dec
idivl
inc
and
fists
mov
cmpsl
inc
xlat
adc
xchg
or
call
test
and
cli
fwait
daa
inc
cmpsl
loop
repz
fwait
and
pushf
in
repnz
cs
icebp
adc
push
in
xchg
lcall
xlat
adc
mov
jnp
pop
in
jb
push
add
jae
movsb
dec
ja
lret
lahf
test
mov
or
mov
jae
dec
mov
leave
outsl
dec
cmp
clc
dec
push
call
pop
jno
out
mov
scas
mov
sub
adc
cld
ljmp
aam
adc
mov
pop
mov
imul
test
popa
pop
dec
mov
jmp
fsub
push
in
lea
cmp
and
dec
cmp
in
adc
add
outsl
lods
mov
in
iret
push
lret
pop
sbb
lock
adc
or
imul
stos
testl
pushf
fistps
lret
sbb
xchg
into
imul
pop
movd
andps
sbb
xor
dec
std
inc
inc
dec
push
lret
mov
das
icebp
pop
fsubs
repz
adc
imul
notb
mov
lods
mov
imul
out
fs
xor
data16
push
sbbb
aaa
rorl
jge
daa
shrb
mov
fcmovnu
lods
dec
mov
je
or
inc
add
dec
inc
xor
inc
loopne
orl
repz
mov
lret
pop
xor
mov
mov
pop
push
cmp
int
enter
mov
fiaddl
cmp
mov
add
sub
cmc
sbb
rorb
lret
mov
push
mov
bound
in
bound
in
adc
mov
es
mov
sbb
jecxz
mov
bound
loope
cmp
cmp
gs
and
mov
enter
jg
cwtl
pop
test
icebp
cs
lods
adc
lcall
mov
cmp
xor
outsl
or
mov
pop
pop
pop
pcmpeqb
xor
outsl
nop
popf
xchg
int3
gs
aaa
mov
idivl
test
fsubrl
xor
inc
sbb
rcr
movsl
push
jbe
in
or
mov
fsubrl
dec
lock
push
dec
adc
dec
in
jecxz
addb
mov
lahf
xchg
xchg
add
enter
das
int3
jp
pusha
jp
inc
xor
adc
stos
leave
rcll
lret
jne
inc
js
adc
ss
inc
xchg
call
test
jl
sti
inc
out
int3
push
jg
sub
and
lds
cmp
loope
sub
imul
push
pusha
andb
mov
cmp
ss
pop
movsb
sarb
jno
mov
xchg
stos
aam
bswap
enter
mov
or
mov
gs
test
cmp
and
pop
dec
and
mov
and
push
jnp
ja
das
lock
lock
ss
pop
loop
les
dec
pop
dec
test
fsubrs
adc
pop
fldz
sti
les
pushf
sub
cmp
insl
fists
and
mov
mov
addr16
push
cmp
notl
int3
mov
data16
mov
xchg
or
mov
sti
jb
stos
pop
lahf
push
fdivl
lret
out
dec
and
mov
sub
push
and
lods
mov
repz
pop
xchg
pop
or
pop
mov
inc
jae
outsl
test
mov
inc
js
insb
sub
add
xchg
stos
jb
pushf
jno
subb
push
orb
jecxz
sahf
push
test
aam
mov
jp
mov
xchg
outsl
int3
call
push
xor
cld
ret
jmp
mov
cmpsl
mov
lcall
mov
pop
fadd
jbe
scas
mov
movsl
stos
test
dec
aad
mov
fsts
sbb
inc
xchg
adc
fidivrl
adcb
fwait
sti
cld
push
and
repnz
sub
lods
cli
pop
mov
mov
int3
push
ret
imul
mov
jp
mov
adcl
orb
xlat
push
lea
pop
jmp
mov
inc
adc
loop
dec
pop
es
fwait
inc
and
iret
cmp
fiadds
jno
push
cmp
and
mov
stc
and
movsl
fstps
add
cld
sbb
jmp
lret
stos
insb
stc
mov
loope
loope
mov
mov
sbb
mov
popa
gs
push
ret
mov
aam
mov
xchg
add
decb
push
xlat
stos
das
cli
mov
test
incl
clc
cltd
mov
das
dec
mov
mov
dec
inc
adc
push
mov
repz
mov
stos
or
in
jge
sbbb
mov
rorb
jne
push
xchg
sbb
or
lea
pop
mov
jge
cmc
insb
jmp
es
push
mov
add
cmp
pop
mov
dec
loope
loop
sahf
jo
cld
pop
sbb
icebp
or
pop
in
push
imul
and
int3
push
in
push
mov
jb
fadd
shlb
push
icebp
loop
hlt
lods
ds
inc
cli
mov
jmp
imul
mov
out
xchg
jl
xchg
dec
pusha
inc
jecxz
movsl
dec
sahf
xor
add
add
out
xorl
inc
clc
and
dec
inc
dec
test
xor
or
aas
popa
cli
mov
add
cmp
push
lret
mov
adc
mov
rcrl
cmp
push
sub
mov
les
arpl
imul
mov
cmp
cmc
out
arpl
inc
or
jno
or
pop
pop
cmp
daa
pop
sub
lock
jg
clc
sub
leave
cltd
and
ljmp
cs
fwait
or
jne
adc
mov
or
and
jecxz
ljmp
mov
cmp
and
lock
enter
mov
sub
clc
mov
addr16
daa
xchg
pop
ffreep
call
xchg
mov
cmpsl
test
sbb
fcmovbe
or
stos
jp
cmp
cmc
pop
aaa
jnp
pop
push
mov
nop
popf
test
loopne
push
gs
aaa
ret
pop
add
mov
int
add
jmp
stc
insl
imul
inc
pop
cmpsb
jne
mov
pop
jle
scas
add
sub
dec
and
scas
dec
push
popa
ss
jp
call
mov
stos
or
shll
push
cmp
xor
andb
sbb
scas
andl
mov
sahf
in
dec
jp
mov
enter
sub
shrb
cmp
and
and
adc
push
add
out
lahf
push
jp
inc
imull
jmp
nop
lods
or
clc
add
mov
cmp
test
pop
cmp
aad
adc
xor
ret
lcall
subb
xchg
notl
imul
pop
push
add
lea
push
stc
cmp
cli
popa
jl
push
data16
lret
inc
out
and
dec
cmpsb
adc
loopne
or
sub
lea
sub
or
mov
popa
pop
cmp
push
mov
mov
jb
lea
jbe
std
add
pop
ficompl
insb
idivl
inc
popa
sbb
dec
inc
popa
push
loope
sbb
aas
negb
scas
jge
cmp
sbb
rorl
loope
clc
cmpsb
pop
jno
js
into
xlat
sar
fcomps
ret
push
pushf
jne
jge
scas
mov
frstor
in
cmp
mov
jecxz
pop
and
or
dec
loop
add
aaa
jmp
in
outsb
push
or
faddl
mov
in
call
pop
push
cmpsb
es
loopne
cmpl
inc
orl
std
pop
dec
mov
lahf
je
pop
add
xchg
push
mov
es
or
fwait
jg
push
jmp
or
sbb
shll
add
lcall
jp
loope,pt
inc
push
cmpsb
daa
xchg
sbb
jge
add
andb
mov
add
fildll
xor
push
push
popa
pushf
mov
adc
sbb
mov
imul
lods
in
xchg
std
push
xchg
insl
loope
jbe,pt
popa
stos
sarb
and
and
test
jmp
mov
and
lcall
and
fisttps
mov
fs
cmpsb
dec
mov
pop
int3
mov
loop
cmp
out
bound
and
xchg
jbe
movsb
or
enter
fildl
leave
jmp
popa
inc
lods
es
outsb
in
fisttpll
xchg
jmp
cmpsb
adc
adc
xor
inc
mov
stc
leave
cmp
addr16
arpl
pop
shrl
gs
pusha
lcall
in
ret
mov
and
jg
sub
cmp
fdivrl
pop
pop
cmp
hlt
pusha
fcoms
fwait
add
push
mov
inc
push
mov
ret
sub
sub
push
cmp
jg
dec
hlt
repnz
dec
call
rclb
sub
test
adc
mov
sub
fsub
mov
insl
subl
cmp
mov
clc
jl
cmpsl
mov
mov
mov
lret
xorl
jle
rclb
repnz
xor
pusha
push
movsb
xchg
ljmp
es
mov
or
mov
mov
fadds
out
pop
ja
pop
and
mov
lods
pop
or
xchg
xor
adc
mov
test
inc
shrl
xchg
in
subl
mov
stos
mov
sbb
mov
loope
add
sbb
xor
adcl
mov
inc
mov
dec
aam
out
hlt
js
pop
rcll
and
mov
aad
ja
std
lahf
xchg
sbb
mov
or
mov
sbb
jp
jge
out
stos
imul
movsl
stos
jg
ror
loopne
xor
out
mov
bound
movsb
lahf
sarb
pop
fstps
inc
je
add
add
mov
sub
push
cmpsb
ss
dec
push
clc
add
imul
pop
bound
in
and
notl
lods
xor
add
push
inc
in
dec
push
jecxz
xchg
mov
or
out
popa
pop
and
scas
adc
xor
mov
iret
icebp
sbb
sbb
mov
jns
cld
mov
int3
and
scas
adc
cwtl
mov
or
adc
data16
cld
pusha
sbb
test
repnz
sbb
pop
jl
adc
dec
das
xor
fadds
inc
sbb
addl
cmc
xchg
in
mov
sti
aas
cmp
adc
sub
pop
and
idivb
out
xchg
test
fisubrl
jmp
dec
in
shr
movsb
cmp
dec
rolb
mov
loop
stos
cmp
or
pop
push
aad
and
sbb
cltd
cmp
pop
outsb
je
lods
lcall
and
push
negb
iret
jp
test
shlb
jo
jge
popf
icebp
sbb
jmp
pop
loop
dec
mov
lcall
movsl
jecxz
mov
xchg
jo
xor
dec
andl
loop
les
and
mov
cmpb
fdivs
in
inc
repnz
sub
out
repnz
add
bound
insl
sub
notl
xchg
pusha
xrelease
adc
sbb
pusha
daa
arpl
daa
pop
repz
push
aaa
repnz
mov
and
outsb
sbb
hlt
fwait
and
jmp
jg
xchg
mov
or
mov
lock
enter
xor
add
xor
outsl
dec
scas
or
push
mov
inc
dec
ds
lret
cmp
jne
aas
jmp
movsb
cmp
xchg
sbb
movsb
jg
jo
lods
pop
test
and
into
fdivrl
mov
or
cmp
mov
fdivrl
pop
sahf
mulb
mov
fistpl
mov
rorb
into
and
std
popa
popw
lret
out
xchg
xlat
cmpsb
xor
jecxz
cmp
fisubrs
clc
xchg
ja
push
fwait
sub
push
test
dec
icebp
inc
push
push
xchg
jne
std
jp
xchg
aas
imul
loopne
push
dec
mov
cwtl
mov
cmp
xchg
cmp
push
xchg
scas
xrelease
push
enter
xor
sbb
imul
cmpsl
aaa
pop
mov
fcmovnbe
or
cmp
cmp
push
imul
sub
pop
adc
lahf
imul
inc
mov
dec
out
sub
out
mov
mov
lods
or
sbb
mov
jne
fisubl
push
repz
sbb
mov
cltd
mov
leave
dec
add
ja
add
stc
jp
jle
adc
pop
cwtl
lea
test
outsl
je
lods
push
movsl
ljmp
pushf
xchg
add
pop
insb
sub
fcompl
mov
popf
cli
xchg
cmpsb
test
mov
sti
cmpsb
addb
add
outsb
leave
and
cmp
jb
clc
ret
jo
enter
mov
adc
mov
in
test
xchg
mov
push
pop
pop
movsl
lds
mov
pop
test
enter
popf
sub
imul
sbbb
ljmp
pop
lds
and
ja
inc
pushf
addr16
cmpsl
sbb
dec
mov
xchg
int3
jp
inc
cld
call
out
pop
lock
pusha
pushf
push
cli
gs
movsb
sbb
stos
jae
nop
clc
adc
sub
sub
mov
dec
mov
sbb
in
in
sub
leave
test
cli
sub
push
imul
add
inc
dec
or
push
iret
xor
ret
adc
dec
js
fldt
in
sbb
lock
gs
push
loopne
test
in
shrb
les
popf
sbb
dec
flds
xor
shl
daa
jle
cmpsl
andb
sti
test
cmpsl
outsb
lods
inc
test
jecxz
in
movsb
sar
xlat
pop
sbb
dec
jae
and
or
sbb
cmc
das
adc
fldenv
insl
cld
mov
mov
mov
mov
cld
jmp
cmpsb
in
int
mul
rcr
mov
add
jo
xchg
push
fmull
loop
sbb
popf
and
lods
dec
imul
ficoml
fildll
cwtl
fidivrs
outsb
mov
push
ds
leave
xchg
fbstp
mov
xorb
mov
push
mov
sbb
scas
int
mov
inc
outsl
add
repz
cmp
sbb
ret
lret
sub
inc
xor
sti
es
xor
icebp
pop
pminsw
mov
in
mov
in
jbe
or
popf
adc
xor
pop
mov
sbbb
stos
pop
out
loopne
je
insb
fdivrp
dec
mov
xchg
mov
sbb
push
sbb
repnz
adc
fisubl
cmp
xchg
sbb
or
mov
outsb
mov
in
sbb
cmp
pop
xchg
mov
jp
ja
dec
aad
inc
add
shlb
popf
push
adc
pop
movsb
pop
sub
cli
arpl
jecxz
lret
nop
inc
test
xchg
aam
ret
xor
js
xlat
push
add
test
into
nop
cld
xchg
ds
jb
frstor
icebp
aas
sub
xor
add
push
mov
test
ret
sti
push
sbb
add
push
jo
ret
push
inc
push
sbb
sti
aad
cmp
cmp
dec
iret
sub
jg
inc
push
jnp
js
cmp
sbb
lea
jnp
xlat
push
ja,pn
movl
rclb
adc
stos
inc
loopne
cmpb
daa
push
and
xor
call
mov
jg
adc
rclb
mov
leave
mov
and
loopne
je
fnstsw
test
push
and
mov
push
xchg
arpl
push
xchg
pop
and
push
not
or
add
or
and
aam
adc
or
jbe
xchg
push
rclb
xor
out
push
xchg
shlb
rcll
xchg
push
pop
pop
mov
add
out
out
ss
xor
adc
test
lods
das
out
loopne
sarb
stc
adc
jno
xchg
xchg
inc
jp
push
repnz
xorb
or
in
push
and
lahf
sub
mov
rorl
cld
dec
outsb
mov
test
ficoms
outsl
fdivl
sbb
jne
test
cmp
dec
or
pushf
in
dec
movhps
jnp
outsl
call
push
icebp
fmul
sbb
mov
and
movsb
sbb
add
adc
repnz
jmp
push
imul
insl
cmp
mov
in
lods
stos
je
jae
scas
sbb
rcrl
stos
jns
cmp
fidivl
adc
jecxz
out
lods
add
es
outsl
daa
ret
cmp
cmpsl
sub
push
stos
lods
out
neg
or
pop
sbb
outsb
or
popf
adc
push
int3
das
pop
cmp
arpl
and
stc
cmp
mov
xchg
js
scas
shl
das
xor
sub
and
add
movsl
sbb
adc
mov
xor
pop
es
and
jl
repz
out
pop
cltd
rorl
push
arpl
outsb
push
out
jmp
std
test
es
cmpl
xlat
pop
sarl
cmpsl
push
inc
fs
mov
pushf
xchg
bound
imul
ficoms
or
dec
inc
mov
xor
cmp
imul
push
es
mov
rolb
shll
mov
xchg
xchg
lret
mov
jl
mov
sbb
mov
push
sub
xchg
fisubs
pop
jmp
inc
xchg
xchg
or
and
adc
shrb
rolb
aad
inc
push
xlat
iret
lahf
or
mov
lock
sub
loope
pop
pusha
xchg
add
lahf
jnp
pop
cmpb
and
dec
add
fdivrs
out
and
js
push
pop
pop
fdivs
test
outsb
pushf
das
jmp
or
je
inc
loope
ret
mov
shrl
and
fstpt
dec
add
cmp
mov
add
push
cwtl
orb
xchg
jl
mov
jg
push
inc
mov
and
das
aas
xchg
data16
daa
jae
rclb
enter
fnstsw
enter
in
sub
mov
add
push
in
movsl
into
sbb
push
or
and
sbb
jbe
lret
addb
and
orb
mov
fsubp
jb
insb
shrb
lret
sub
mov
xor
pushf
mov
shl
dec
cmpsl
adc
dec
mov
adc
fcomp
lock
inc
mov
outsb
insl
lcall
stc
jbe
mov
adc
sub
lods
mov
adc
adc
mov
push
mov
ljmp
rcrl
jmp
fsubr
mov
imul
mov
in
adc
pop
movsb
cmpb
neg
xchg
and
enter
int
xchg
xchg
inc
nop
cmp
mov
mov
or
insl
xor
movsb
ds
stos
dec
stc
fsubs
and
pop
xor
inc
pop
mov
inc
and
xor
mov
adc
std
cmp
in
out
pop
mov
mov
imull
mov
push
mov
cmpsl
sbb
add
inc
xchg
mov
inc
or
les
and
rol
add
mull
xchg
inc
jmp
stos
ss
test
jge
xchg
adc
stos
mov
mov
call
mov
sarl
das
fwait
iret
std
jmp
pop
adc
imul
add
rol
xor
and
pop
pop
bound
push
mov
in
popf
je
inc
inc
addr16
mov
adc
push
xor
sbb
aam
mov
imul
frndint
dec
xor
dec
mov
mov
xor
sbb
mov
dec
xchg
outsl
cmp
fwait
popf
mov
dec
xchg
lock
mov
sti
lcall
inc
fsubp
push
imul
and
lea
jae
jno
loopne
mov
jge
stos
xchg
rcl
ja
push
nop
fs
int
jle
out
fdivl
stos
aam
lret
scas
fidivs
xlat
or
push
adc
add
fcomps
aam
sbb
mov
jg
je
pop
loop
jno
js
mov
lds
pop
push
adc
mov
dec
jb
les
int
in
inc
sbb
es
inc
sti
push
or
pop
dec
xchg
adc
or
push
out
lret
or
push
imul
mov
incb
inc
jle
inc
adc
mov
fldenv
cmp
pop
sub
test
in
decl
ror
pop
es
loopne
jns
jno
jg
xchg
jne
sbb
sbb
jecxz
adc
icebp
dec
popf
cmp
loope
jmp
jle
inc
loopne
popf
fsts
fwait
dec
cli
out
push
mov
adc
sbbl
cli
int3
push
movsb
mov
add
inc
pop
shlb
mov
push
cmp
jo
xor
sarb
ret
mov
out
hlt
mov
mov
stc
mov
pop
mov
loopne
ret
aad
xor
and
cli
cmp
cmp
cmp
fistl
or
cwtl
lock
cmp
or
inc
xchg
mov
repz
push
inc
aas
dec
mov
sbb
mov
mov
dec
test
out
aam
aas
xchg
dec
xchg
fsts
pusha
push
hlt
xchg
push
fwait
inc
cmpsl
xor
xor
and
jbe
cmp
lds
cltd
mov
insb
into
mov
insb
cwtl
adc
sub
nop
push
sbb
pop
xchg
inc
out
or
flds
fnstcw
xchg
imul
aad
test
mov
sbb
fidivl
or
fmuls
shrl
cli
push
imul
ljmp
cmp
lret
ds
jno
test
xchg
std
test
mov
scas
xchg
int
aas
iret
orb
movsb
inc
pop
jp
ljmp
inc
sbb
add
xor
sub
call
movsl
dec
daa
jae
add
lcall
test
dec
js
shll
addr16
clc
dec
mov
pushf
nop
popf
je
loop
subb
movsb
or
sub
in
scas
movsb
out
or
cmp
add
je
cmp
or
mov
call
mov
push
push
stos
in
mov
filds
cli
mov
testl
jp
pushf
cld
or
cli
push
popa
stos
orb
movsb
or
xor
jbe
cwtl
fwait
data16
push
push
les
mov
add
jmp
xchg
fisttpll
or
or
daa
or
mov
inc
mov
mov
add
jmp
outsl
pop
mov
and
imul
lret
add
mov
aam
jg
jl
jo
cmp
decl
or
das
adc
jo
sbb
dec
xorb
lea
sbb
push
lret
fsts
push
jb
bound
loopne
inc
cwtl
sbbb
jle
mov
dec
andb
loop
enter
ljmp
lret
xchg
or
xchg
push
jg
dec
and
out
int3
jge
clc
and
xchg
sub
xchg
popa
sub
mov
test
imul
pusha
push
mov
xor
decb
inc
leave
push
mov
pop
lock
movsb
pop
xchg
fwait
xchg
inc
lods
fisttpl
dec
lds
mov
mov
cld
pusha
lcall
loopne
cwtl
hlt
cmp
xsha1
cmpsb
xchg
mov
imul
sbb
or
leave
jmp
mov
aad
pop
out
fimuls
push
lret
lea
xchg
mov
cltd
mov
sub
xchg
enter
js
mov
sti
push
inc
xchg
cwtl
pop
cmp
loopne
bound
das
outsb
adc
lret
lea
popa
pop
js
sub
clc
jns
mov
and
mull
incl
int3
and
xchg
negl
and
mov
test
adc
into
ret
dec
or
mov
dec
cwtl
push
pop
adc
lahf
fdivrp
inc
pop
scas
adc
fnstenv
push
jbe
lcall
dec
ja
ret
add
jno
and
inc
sbb
rcrb
mov
pop
ret
add
pop
pop
adc
mov
jb
fs
pop
cmpsl
add
lds
loopne
push
inc
dec
icebp
lea
jb
push
mov
popa
push
push
sbb
test
lds
ds
gs
dec
movsl
xchg
or
xchg
testl
jae
ljmp
ficoms
adc
xor
ja
scas
ret
and
sub
repz
call
jg
mov
pop
bound
push
or
cmpsb
xor
push
mov
std
hlt
sarb
jb
ret
xor
add
cmpsl
cli
nop
sub
jl
sti
cs
sub
ret
pusha
inc
xor
imul
int
mov
cmp
jp
pop
jno
xor
clc
jae
xor
push
loop
in
inc
adc
cltd
sub
nop
xor
inc
outsl
mov
mov
pop
xchg
dec
sbb
dec
imul
pop
movsb
test
addr16
insl
cmc
lods
icebp
mov
lcall
and
mov
popf
add
or
gs
cltd
addr16
mov
inc
sub
inc
scas
test
faddl
and
xor
mov
jg
out
lahf
lret
mov
enter
or
mov
sub
lret
leave
push
mov
data16
dec
dec
ret
jns
fists
mov
outsb
nop
test
scas
das
ret
ljmp
adc
or
jnp
mov
push
mov
mov
out
mov
mov
xorb
adc
jg
in
xor
popf
sub
js
loop
jl
jb
addb
loop
jno
push
push
sahf
sub
mov
jl
daa
stc
mov
hlt
ljmp
repz
jecxz
hlt
inc
lds
pushf
pop
lcall
les
ss
shll
or
ljmp
cmpb
iret
mov
and
xor
inc
xor
adc
xchg
lods
jecxz
xorl
jg
mov
ja
arpl
push
fwait
cmp
jl
cmc
gs
mov
rcrb
or
pop
cmp
inc
jmp
call
insl
in
mov
movsl
mov
add
mov
cmpsb
stos
mov
mov
adc
cltd
bswap
mov
mov
sub
daa
pop
xchg
xchg
pop
xor
mov
xor
push
arpl
testl
cmp
add
mov
rorb
test
adc
sbb
icebp
repz
ds
pop
xchg
je
xchg
imul
xchg
fiadds
outsl
xor
test
divb
jecxz
stc
jb
mov
adc
mov
or
stos
sub
xchg
fld
mov
push
add
lcall
cmpsl
push
cmp
push
lds
scas
in
ljmp
jp
outsb
mov
inc
icebp
lds
push
xor
aaa
loope
mov
pop
insl
push
jae
mov
adc
mov
inc
push
mov
imul
aaa
in
cmp
in
push
mov
cmp
push
xor
mov
aad
ret
out
ljmp
jns
xor
push
xorb
cmpsb
inc
ficomps
std
mov
and
popf
out
fidivs
jns
arpl
pop
mov
out
fcmovnbe
or
ds
fstps
inc
lods
xor
loope
mov
xchg
mov
shll
mulb
jg
out
lcall
or
pushf
mov
andb
adc
mov
dec
shll
adc
pop
out
jp
mov
and
daa
xor
movsb
cmp
movsl
and
cmp
push
adc
dec
cmc
and
fs
lret
pop
nop
mov
in
cmc
clc
out
icebp
cwtl
frstor
int3
xchg
mov
or
cmp
sbb
cli
je
mov
dec
pop
sbb
jle
cwtl
loop
in
and
xchg
dec
test
enter
test
xchg
mov
out
xchg
cld
repz
dec
mov
mov
cmp
xchg
sbbb
sarl
jg
push
fucomi
push
sarb
lods
dec
xor
cmp
push
inc
and
sbb
sub
rcr
daa
into
xor
mov
fildl
jecxz
xchg
loopne
and
pop
cmp
icebp
js
arpl
and
mov
dec
loopne
das
int
loopne
mov
repz
dec
mov
mov
jecxz
mov
adc
ja
pop
loop
dec
dec
andl
subl
lock
out
sub
imul
and
mov
icebp
in
jge
dec
mov
sbb
jmp
push
es
or
cmp
scas
ss
adc
sbbl
lds
push
cmc
push
ret
ljmp
cli
cmp
sub
mov
cmp
xor
pop
cwtl
loop
outsb
and
fmull
pop
jmp
mov
mov
and
or
ss
es
test
sbb
imul
add
iret
adc
xchg
imul
xor
push
test
test
pop
jge
and
inc
mov
dec
fsubs
jecxz
dec
das
pop
in
std
sti
cwtl
jl
push
aam
pop
data16
mov
out
lods
xor
fisubrs
cmpsl
add
mov
bound
dec
xor
pop
adc
xor
notb
pop
sub
jne
cmp
dec
outsb
and
inc
add
xchg
out
leave
and
xor
adc
fs
mov
movsb
jne
leave
cmpsl
in
lock
pop
fdiv
sar
ljmp
cmp
in
negb
and
call
inc
ja
add
xor
jle
imul
xchg
add
adc
imul
xor
pop
testb
jp
cmp
pop
add
aam
xchg
fildll
inc
push
sub
mov
mov
rcl
mov
dec
xor
inc
mov
add
push
jne
sbbl
jns
fisubrs
xlat
je
lcall
jnp
jb
clc
rclb
mov
xchg
sbb
lods
int
dec
add
dec
push
data16
shlb
pop
in
out
out
in
fistps
inc
iret
aad
loope
out
pusha
sub
lcall
add
xor
rclb
in
cmp
push
es
popf
jae
daa
js
loope
mov
mov
adcl
add
mov
mov
aas
scas
ds
sub
cmc
icebp
lds
sbb
in
mov
pop
inc
inc
data16
imul
lock
fbstp
dec
dec
shl
xchg
xchg
cmp
ja
mov
test
adcb
pop
adc
inc
pop
adc
call
cs
js
cltd
lret
orb
mulb
ds
dec
push
imul
lahf
jmp
cmp
loopne
sti
push
pop
inc
movsb
jne
mov
mov
ljmp
xchg
ret
mov
mov
or
mov
adc
rorl
mov
fsubl
and
dec
icebp
insb
mov
cmpsb
cmpsb
and
sub
sti
sbb
inc
pop
add
xor
int
adc
loop
xchg
cmp
ret
push
rolb
mov
dec
int
iret
inc
incl
cmpsb
pop
pop
lea
in
push
dec
into
adc
insl
mov
hlt
xor
xor
pusha
xorb
stos
push
icebp
fdivrs
jmp
imul
lods
mov
pop
sub
sbb
ljmp
push
rcll
in
mov
inc
dec
sbbl
or
xor
lcall
mov
inc
fbstp
pusha
mov
int
fdivl
ljmp
xor
sub
hlt
mov
fadds
mov
cmpl
mov
out
pop
fisubrs
pavgb
lock
ja
movsb
xor
inc
imul
fwait
push
out
ficomps
fcomp
xorb
xor
std
sub
sub
fsts
adc
sub
int3
sbb
jl,pt
sub
les
cmp
cwtl
stc
add
enter
mov
add
mov
sbb
jle
cld
cwtl
insb
lcall
push
out
cmc
mov
sub
inc
js
lods
test
cs
jl
movsl
xorb
sbb
ss
mov
mov
pushf
movsb
add
jno
push
sbb
and
push
xchg
loop
and
sub
iret
daa
and
jo
cmpsb
mov
pop
xor
enter
nop
jb
mov
repnz
lock
pop
jnp
cs
add
mul
jmp
add
pop
fiadds
into
es
scas
xchg
in
movsl
test
fldenv
hlt
pop
dec
test
pushf
lret
imull
sarb
jecxz
xchg
add
jle
and
ja
cmp
push
dec
fwait
decl
inc
int3
ss
or
jl
mov
das
pop
xchg
sub
stos
cmpsl
rcr
lret
cmc
add
pushf
mov
and
dec
cmp
lcall
jbe
lahf
xchg
jns
mov
popa
rclb
adc
ret
and
es
ds
sbb
cmp
test
jp
adc
mov
mov
adc
out
inc
scas
adc
enter
dec
push
inc
cmc
call
hlt
mov
jge
in
dec
mov
sub
stos
es
aad
ss
jge
sbb
and
xchg
cmp
xchg
pushf
sub
inc
sub
imul
add
in
jl
jnp
sbb
ficoms
cmp
lock
insb
fs
xor
sub
icebp
mov
adc
mov
fwait
mov
ficomps
xchg
inc
hlt
jle
mov
jae
or
jmp
mov
and
fidivs
pop
lods
lahf
fdivrl
xchg
movsb
mov
or
jmp
adc
mov
jmp
dec
push
or
decl
push
in
loope
and
in
imul
pop
adc
test
or
push
and
xor
adc
xchg
mov
xor
movsb
or
add
shrl
ret
jno
fwait
sbb
rcrl
cwtl
stos
mov
clc
jl
outsb
repnz
mov
pop
fsubr
fnstcw
inc
test
daa
mov
gs
aaa
out
pop
pushf
stos
fimull
mov
mov
lods
sahf
dec
adc
out
decl
mov
out
pop
inc
dec
shlb
push
jnp
leave
sbb
fsubrs
dec
subb
push
jno
aas
and
adc
cmp
push
aam
cmp
into
cwtl
sahf
pushf
xchg
je
lahf
add
push
ret
xor
dec
daa
cmc
adc
mov
in
jo
xor
repnz
jmp
es
sub
xor
push
mov
popa
ret
adc
daa
fstpl
fcmovne
xor
pop
dec
bound
add
jnp
pop
adc
inc
ljmp
push
fisubrl
mov
push
movsl
loope
dec
mov
lock
les
repnz
out
in
negl
pop
cltd
fcoml
fstps
dec
pusha
loopne
popa
sub
cwtl
out
push
push
daa
fwait
imul
cmc
aas
mov
sbb
lds
cmp
and
fsubr
cmpsl
add
mov
cmc
aad
jg
subl
push
push
fwait
mov
notl
jb
cld
int
xor
dec
dec
cmp
das
ja
ret
jo
mov
test
aam
test
rclb
leave
es
add
mov
int3
or
nop
arpl
std
fdivr
adc
rclb
jp
add
xor
std
ret
adc
out
ret
cs
pop
adc
dec
sbb
pop
fimull
xor
ljmp
pop
ficomps
mov
inc
out
inc
ds
popf
scas
mov
push
lods
mov
and
push
and
add
mov
lds
testb
scas
mov
stos
cmp
jmp
jp
sbbl
rcrl
gs
jmp
loope
stos
or
sub
pop
xchg
arpl
xchg
add
push
pop
arpl
repnz
cmpsb
ret
adc
inc
xchg
push
pop
out
shlb
cwtl
aad
shld
testb
lds
mov
movsl
lahf
add
in
repnz
mov
pusha
jle
sbb
inc
aas
leave
sub
mov
or
dec
cmpsb
sub
inc
pop
push
js
mov
nop
sub
dec
rorb
jo
mov
sub
addb
ret
xor
lods
xor
lahf
push
repz
imul
jno
outsb
dec
loop
sahf
mov
ret
test
sub
mov
gs
mov
push
sub
mov
mov
ja
stos
dec
out
dec
inc
lock
fstpl
jle
mov
inc
add
loope
add
or
mov
jp
out
xchg
arpl
test
xchg
dec
hlt
movl
xchg
dec
mov
ja
repnz
adc
or
std
shll
cs
ficoms
in
cmp
je
icebp
dec
push
add
dec
out
push
sbb
cld
iret
adc
adc
add
pop
jmp
mov
mov
dec
push
xor
dec
xor
and
sahf
divb
push
pop
shrl
rorl
outsl
js
push
sbb
mov
inc
jnp
movsb
dec
xchg
or
enter
out
iret
mov
mov
repz
add
cli
sub
pop
push
pop
nop
sbb
out
dec
mov
in
xchg
cmpsb
dec
mov
sti
in
xchg
loope
cmp
in
dec
push
cmp
gs
fldcw
bound
push
pop
outsl
mov
imul
fwait
adc
orps
jp,pn
call
inc
iret
cmc
inc
pop
xor
fbld
or
out
mov
imul
adc
mov
pop
lcall
xor
aam
jae
pop
popa
mov
rcl
xchg
outsl
notb
sti
cmp
into
cltd
sub
stc
add
adc
push
push
sub
repnz
inc
inc
jb
addr16
inc
fldl
xorb
dec
shrb
sti
leave
mov
xchg
jne
pop
xchg
xor
and
pop
int
fsubs
push
xor
cmp
nop
dec
xor
sbb
out
in
iret
daa
test
ret
cmp
jo
sbb
push
mul
xor
or
xchg
andb
mov
mov
push
mov
rorb
sbb
push
and
aad
mov
mov
test
xchg
ljmp
cwtl
pop
fldenv
shlb
or
imul
xor
push
push
adc
jge
je
outsb
pop
xor
dec
jb
stos
xor
shll
negb
inc
js
mov
sub
dec
dec
popa
fwait
dec
mov
mov
jo
mov
dec
mov
test
movsb
js
pop
sbb
dec
repz
mov
gs
push
stos
and
shrl
push
in
jae
lods
sahf
jg
cld
outsb
sbb
pop
jb
rclb
adc
and
stos
xchg
jno
cli
fdivrs
ret
push
cmp
adc
popa
pop
push
adcl
jmp
ljmp
xchg
nop
jmp
jge
inc
or
test
jno
lahf
mov
cmp
push
pop
mov
loop
fists
mov
dec
imul
in
lea
stc
and
test
jl
xor
add
cs
out
or
lock
or
xchg
jns
jmp
xchg
mov
xor
adc
aaa
push
inc
inc
add
ds
test
andb
stos
mov
mov
jbe
aam
or
push
into
add
idivb
scas
ret
cmp
lods
sbb
jg
insl
or
mov
mov
xchg
jbe
into
imull
xlat
lcall
adc
filds
xor
add
cmp
mov
cmp
mov
fnstenv
loope
cltd
jl
fidivrl
sahf
push
or
or
jnp
scas
iret
and
repnz
int3
clc
or
fwait
add
mov
add
lahf
lds
fcomps
or
add
nop
outsl
negl
in
sbb
xchg
jns
loopne
mov
aaa
lahf
mov
inc
push
adc
cmp
insl
lea
jg
js
out
jp
lret
js
movsl
and
inc
xor
mov
sbb
sub
repnz
hlt
push
aad
enter
xor
cmc
adc
cmp
push
jno
cltd
cmp
push
loop
repz
pusha
lcall
or
adc
lds
out
pop
sub
js
adc
shrb
inc
lahf
dec
pusha
pop
dec
push
pushf
sbb
xchg
and
je
xchg
mov
pop
or
adc
push
mov
add
jae
push
aaa
xchg
lcallw
push
inc
mov
testl
hlt
ja
adc
cmp
jne
add
sbb
pop
sub
aaa
test
jo
cs
mov
fstpl
mov
jecxz
outsl
je
jg
icebp
mov
pop
pop
sbb
sub
loop
ret
lods
adc
addr16
push
or
hlt
shll
add
aad
jno
mov
jl
rolb
push
jno
in
and
jno
fldenv
shll
jbe
test
in
jmp
mov
rolb
pop
int3
push
xor
mov
mov
sub
dec
adc
stc
adc
xchg
xor
stc
sub
outsl
rep
cmpsb
mov
and
gs
push
and
sbb
lods
fisubrs
imul
test
cmpl
dec
je
push
cmpsb
push
push
test
adc
rcrb
fisubrl
fldl
jne
push
and
sub
xchg
loopne
jne
adc
fs
adc
and
pop
int
loope
outsl
adc
xor
jo
bound
or
aam
das
sub
xchg
cli
frstor
sub
xchg
std
jo
cltd
push
jns
insl
dec
pop
lret
flds
xchg
dec
jmp
iret
pushf
mov
push
dec
fs
add
dec
popa
cmp
std
psubsb
das
adc
sarl
test
xor
push
lds
lahf
xor
fwait
stc
pop
loopne
insb
push
jp
pop
int3
fildl
and
xor
mov
dec
jae
add
mov
in
xchg
inc
es
adc
jge
lods
popa
adc
std
or
je
mov
dec
addr16
fsubrs
mov
dec
pop
sarb
mov
jecxz
inc
jb
movsb
lock
mov
sahf
popa
adc
ret
loopne
pop
jp
cmp
cmp
aaa
push
shlb
sub
sub
push
std
push
cmp
dec
pop
out
stos
xor
arpl
inc
add
mov
fyl2xp1
fwait
icebp
mov
aaa
test
call
pop
dec
mov
xchg
sub
lret
pop
mov
mov
test
mov
jmp
lea
mov
jnp
hlt
pop
adc
inc
jae
mov
pushf
push
clc
popf
mov
stos
test
sahf
xchg
push
aam
sub
sub
cmp
fldl
xor
mov
sarb
test
xor
icebp
dec
and
mov
sbbl
sub
xchg
jne
mov
cmp
ja
sbb
sub
xchg
je
aam
aam
mov
lahf
mov
insl
fmull
mov
mov
mov
je
or
das
xor
call
mov
jp
loopne
cmp
lea
gs
dec
mov
ds
cmp
orl
mov
push
push
push
out
push
dec
js
sahf
sbb
rorb
pop
inc
add
lods
inc
jns
adcl
in
xchg
jl
push
xor
sar
inc
push
dec
and
jmp
pop
fisttpl
rcrl
test
inc
inc
mov
mov
adc
or
and
mov
notl
aad
or
mov
pop
push
adc
adc
aaa
cmpsb
lahf
ljmp
subl
ja
int
roll
aam
daa
bound
imul
lret
popf
repnz
jg
repz
mov
jae
pop
fcmovnb
jg
pop
jns
xchg
and
xchg
dec
mov
int3
push
icebp
lock
or
mov
sahf
frstor
cmp
cwtl
push
adc
and
sti
sub
push
xor
enter
pop
movsl
pop
aad
dec
or
push
jmp
stc
push
dec
mov
movsl
fcmovnbe
ja
mov
or
jmp
inc
sub
call
in
mov
fs
mov
imul
scas
lods
fmul
and
hlt
pop
into
test
into
add
adc
and
adc
push
and
cmp
movsl
icebp
das
inc
addr16
sbb
pop
icebp
push
pusha
jmp
mov
inc
lahf
inc
icebp
int3
cmc
outsl
dec
cmp
movsl
push
or
adc
push
sub
inc
fnstsw
and
imul
fisttps
mov
sub
popf
enter
inc
in
out
mov
and
cmp
push
faddl
je
xchg
sbb
push
or
push
cli
sarb
cmc
std
fmul
jge
jb
mov
cli
or
test
jae
and
sbb
xor
mov
inc
call
cmpsb
outsl
call
pop
cmp
cmp
and
stos
aam
je
and
mov
cmp
jne
xor
or
insb
xor
add
jp
lods
pop
rcll
dec
pop
cmp
jmp
fsubs
mov
testl
add
outsl
pop
mov
adc
adc
mov
cli
jo
sub
inc
xchg
cmp
pop
xor
and
data16
pop
aam
lods
fists
cmc
cmpsl
imul
inc
movsb
mov
push
inc
insl
and
mov
jg
cs
or
mov
dec
int
fisubrs
push
or
cmp
fldcw
nop
push
lock
cld
sub
inc
add
ljmp
addr16
cmp
xchg
inc
sbb
add
mov
mov
nop
cmp
fwait
mov
jmp
fisttps
int
pop
cld
dec
mov
xchg
xor
adc
or
mov
loope
mov
cmp
inc
inc
out
das
add
addr16
mov
nop
jo
and
adc
xchg
inc
cmp
cwtl
cmp
cwtl
leave
mov
scas
addr16
pusha
ret
imul
xlat
test
xchg
and
lock
pop
push
cmp
inc
add
push
xchg
lods
out
cmp
outsl
ja
mulb
inc
inc
adc
mov
mov
ret
xchg
pop
cli
fwait
stos
imul
inc
fs
xchg
dec
sub
div
es
jb
mov
sub
push
inc
adc
or
sub
cli
js
mov
mov
outsl
outsb
je
xor
ss
imul
repnz
sub
pop
sbb
mov
lods
mov
xorb
fcmovnb
sbb
inc
xor
rcl
inc
sbb
or
inc
jns
movsb
push
sbb
jb
pop
gs
lret
pop
cmc
cmp
roll
push
sbb
aas
arpl
pusha
cltd
push
sbb
mov
dec
add
and
clc
ds
xchg
shlb
stc
pop
pop
dec
daa
test
mov
push
repnz
stc
sbb
adc
and
iret
cmp
repnz
lock
ficoms
rcrl
shrl
orl
lahf
mov
mov
arpl
popa
loope
mov
shll
cmpsb
mov
push
fs
dec
mov
lret
pop
push
push
out
fnsave
pop
push
cs
movsl
and
mov
jl
xchg
adc
or
xorl
or
out
ds
inc
cmp
xor
popa
mov
call
sbb
test
jl
pop
stos
insb
out
cmp
data16
or
xor
js
shlb
loop
dec
filds
dec
or
into
rolb
faddl
xor
in
dec
pop
sbb
and
data16
xchg
and
movntq
incl
push
or
push
cmpsb
and
xor
adc
or
mov
imul
inc
or
xchg
mov
faddl
xchg
gs
test
outsb
nop
iret
push
and
pop
push
arpl
sub
scas
js
xor
testb
pop
xchg
int3
sub
xchg
aad
cmp
in
cmpsb
sbb
mov
bound
xchg
jne
inc
cmp
mov
jge
pop
sti
pop
daa
dec
enter
cmp
jmp
xchg
repz
jmp
inc
lret
pop
lret
mov
jmp
fidivs
cmpsl
in
mov
dec
or
push
cmpsb
shlb
jb
mov
int3
out
ret
xor
iret
mov
rdmsr
shl
and
mov
mov
and
aad
int
iret
or
pop
dec
imul
mov
dec
je
scas
sbb
mov
arpl
mov
or
mov
or
dec
jle
mov
mov
dec
stc
xor
xchg
mov
or
pop
popa
into
push
cmpsl
and
fistps
push
mov
push
dec
or
cmpsb
xchg
add
mov
ret
push
or
insl
mov
jmp
cmpsl
leave
xlat
rorl
jae
dec
nop
sbb
ja
cmp
ficomps
xor
mov
popf
insl
xchg
pop
inc
add
insl
push
lcall
or
push
shll
xor
outsb
js
mov
mov
lret
sub
pop
out
and
icebp
sub
mov
cmp
jae
imul
jne
mov
das
in
test
pop
inc
jmp
jmp
lds
add
add
cmp
fndisi(8087
or
stc
cmpsl
mov
mov
aas
mov
add
ffreep
inc
jl
pop
out
outsl
or
out
mov
repz
sahf
dec
ret
jne
ja
and
mov
bound
imul
and
cmp
pop
sub
popf
lock
mov
stos
cmp
nop
ror
sbb
mov
test
int3
in
fimuls
inc
jmp
aaa
xchg
lcall
pop
inc
arpl
das
je
push
inc
rolb
stos
mov
sbb
call
mov
push
in
divb
cld
fs
pop
movsl
adcb
insl
xchg
hlt
and
xchg
ret
jne
dec
lcall
mov
bound
push
adc
in
cwtl
cmp
sahf
mov
sub
lret
scas
ret
mov
ret
jmp
lahf
sbb
sub
repnz
xor
aam
pop
ret
xor
fidivl
sub
repnz
cmp
int
hlt
mov
fdivp
int
and
aaa
push
jns
inc
and
xchg
cmc
cmpsl
pop
aad
push
mov
pop
push
dec
cmp
ja
incl
and
pusha
jne
mov
mov
mov
cmp
in
pop
and
ret
pushf
test
cmp
outsl
icebp
add
mov
sub
stos
into
mov
mov
fwait
fwait
into
lods
sbb
jg
pusha
pop
mov
cwtl
cld
ja
jbe
stc
pop
in
jbe
dec
xchg
mov
out
sbb
cmp
inc
jno
stos
mov
or
cmpl
and
add
cs
arpl
jecxz
sub
arpl
xor
and
add
xchg
lahf
dec
sarl
or
test
into
mov
cmp
ret
ja
aad
cmp
scas
inc
pusha
add
insb
fisubl
cs
cmp
stos
loopne
shll
cwtl
cmp
rcl
fidivs
int
rolb
pop
adc
jae
dec
sub
shl
shr
pop
xor
dec
rcrl
push
add
cmp
sub
leave
sbb
xlat
pop
data16
xor
sbb
or
out
das
sarl
les
lea
mov
and
insl
push
lahf
dec
mov
dec
dec
xchg
inc
bound
mov
lea
mov
filds
mov
out
rorl
adc
push
mov
sahf
dec
cwtl
xor
inc
out
xchg
and
out
cmp
stc
in
rcrl
lcall
mov
in
mov
popf
test
inc
or
sub
pushf
test
jmp
and
ja
jecxz
mov
fwait
stc
shr
mov
popf
dec
pop
loope
xchg
xlat
enter
pusha
cwtl
psubw
out
sbb
scas
mov
and
mov
mov
mov
mov
dec
in
dec
sbbb
fiaddl
aam
xchg
push
int3
xchg
aad
aam
and
test
inc
and
xor
arpl
cli
jo
pop
shlb
mov
aam
stos
lds
jle
shl
dec
setno
jo
xor
mov
mov
sbb
mov
mov
std
orl
inc
xor
repz
push
fs
lea
sbb
fsub
test
out
adc
ds
push
pusha
cmp
and
jnp
push
adc
mov
sbb
ljmp
cmp
pusha
jo
scas
xor
adc
mov
daa
and
fmuls
adcb
fcmove
xor
mov
cmc
xchg
pop
push
sbb
out
lods
sub
inc
xor
inc
dec
mov
mov
jo
mov
clc
lea
dec
fistps
sub
ja
in
pop
leave
roll
adc
cmp
gs
push
mov
orl
xor
cmp
xchg
mull
and
add
jne
mov
adc
dec
inc
push
prefetch
jmpw
ja
jnp
jb
call
dec
or
mov
dec
sbb
imul
insb
sbb
fisttpll
mov
lahf
pop
cmpsb
movsl
and
jp
jno
jo
loopne
out
mov
push
divl
mov
repnz
fcompl
ficoms
lods
xor
and
hlt
outsl
cmp
mov
nop
xchg
shl
andb
mov
enter
loope
mov
sub
mov
adc
test
sbb
mov
cmp
cld
hlt
push
jp
mov
mov
out
pop
mov
and
in
xchg
xor
test
stos
lahf
in
and
mov
jnp
mov
push
outsb
test
pop
stos
sub
and
pop
xchg
mov
addr16
andb
aaa
mov
xor
adc
fsubs
sub
mov
movsl
out
mov
mov
cmpl
loop
test
mov
in
imul
lea
loopne
imul
cs
cmp
mov
push
xor
pop
popf
rol
mov
je
sahf
jo
and
roll
repnz
dec
mov
push
sub
in
out
imul
jne
adc
sbb
mov
aad
xchg
push
inc
popf
cmp
aam
jmp
push
fnstcw
jge
movsb
lock
ja
xchg
add
popf
or
or
mov
xchg
inc
inc
xor
push
jmp
jne
mull
cwtl
imul
cmp
pop
cmp
pop
call
mov
fnstcw
pop
adc
inc
insb
and
mov
pop
outsl
aam
mov
pop
sbb
iret
sub
fistpl
shll
dec
aam
bound
adc
in
jl
push
add
xchg
out
lock
sub
mov
xor
cmp
mov
xchg
lods
mov
cmp
leave
jns
aam
rcrb
and
aas
jne
xorb
cltd
lea
pushf
jl
enter
leave
pushf
add
scas
shlb
xchg
repnz
mov
sub
mov
aam
mov
pop
repz
xchg
xor
jp
add
adc
sub
or
sub
and
ja
ffree
lock
push
cmp
sub
fisttpll
mov
inc
pop
scas
rol
mov
cwtl
mov
push
adc
das
cmp
inc
jo
push
std
ret
sbb
xchg
or
cld
test
dec
nop
cld
add
notb
or
sub
inc
xor
push
movsl
mov
ljmp
or
fs
int3
dec
cmpsl
mov
ljmp
icebp
xchg
dec
andl
push
sub
xchg
xchg
aaa
icebp
inc
mov
sub
push
mulb
stos
dec
jbe
cmp
adc
sbb
xor
cs
lcall
add
cmp
add
hlt
cmp
inc
sub
jg
les
pop
bound
mov
gs
movsb
sub
sbb
jne
xchg
cmp
or
rolb
bswap
jns
adc
dec
xor
in
iret
std
pop
jp
clc
js
pop
xor
sarb
outsl
pushf
pop
ds
in
add
nop
mov
push
leave
push
mov
inc
mov
cmp
fdivrl
loopne
addr16
insb
mov
faddl
iret
mov
inc
mov
incb
add
pop
push
push
aas
or
ret
mov
lahf
xchg
inc
out
dec
stos
mov
movsb
lea
ljmp
les
fildll
mov
or
call
mov
mov
lret
imull
pop
fistpl
add
mov
outsb
add
int
outsb
lea
js
cmp
sbb
mov
popa
ja
jo
mov
jb
adc
push
pushf
jns
data16
jg
lock
or
xchg
mov
jmp
jo
dec
test
sub
movsb
adc
cmp
je
cmp
movsl
incl
mov
int
cmp
aam
cmp
movsl
inc
loop
or
in
out
loopne
pop
pop
imul
add
fwait
les
mov
aam
dec
int3
mov
imul
adc
lods
lea
enter
jmp
adc
scas
arpl
mov
jg
inc
inc
push
loopne
jecxz
lea
lock
scas
xor
fimuls
and
sub
cmp
insb
push
fisubs
js
mov
aas
sub
lahf
push
mov
rcr
cmp
mov
cmp
jle
inc
cs
or
pushf
push
sub
iret
mov
or
repz
add
inc
and
loopne
xor
cltd
and
jns
call
pop
pop
jl
dec
in
mov
jecxz
jl
and
ljmp
jecxz
inc
push
pop
icebp
jp
lcall
cwtl
lds
xor
dec
jp
fcomps
inc
clc
xor
adc
test
in
inc
push
pop
and
dec
stos
inc
repz
cmp
or
xchg
adc
adc
rol
sahf
cmp
add
scas
js
xor
jbe
outsl
sbb
inc
ret
jecxz
sub
xchg
push
call
mov
iret
lock
clc
out
popa
xchg
mov
sub
sbb
das
mov
xchg
repz
aam
jne
pop
mov
mov
or
sbb
imul
or
ret
cmpsb
dec
jmp
ds
imul
fwait
dec
pop
stos
and
pop
adcb
lock
outsw
aaa
or
subb
mov
leave
adc
subl
xchg
push
xchg
pop
mov
ljmp
int
int
loope
gs
int3
dec
pusha
adc
outsl
dec
add
loope
dec
mov
cli
pop
jo
outsl
cmpsb
cwtl
or
or
cmp
iret
fisttps
loop
cmpb
jg
pop
aas
cmp
mov
ds
ret
add
stos
nop
int
jno
sbb
sti
push
mov
fimull
add
inc
inc
test
inc
lahf
jmp
cld
push
sbb
sahf
clc
out
push
dec
mov
popa
cs
xchg
test
mov
and
dec
pop
push
mov
hlt
stos
scas
push
ss
fsubrs
xchg
insb
mov
mov
aaa
fimuls
hlt
cltd
mov
fadds
adcl
pushf
mov
decb
pushf
outsb
adc
push
add
fcmovnu
inc
lcall
lds
subb
aaa
roll
mov
ficoml
sbb
aam
mov
xchg
enter
inc
push
jecxz
fsubl
hlt
pop
stos
jne
jl
cs
cmpsb
shlb
pop
frstor
jge
nop
mov
and
daa
xor
dec
dec
popa
scas
jmp
mov
xchg
rcll
or
jbe
xchg
xchg
or
inc
repnz
repz
sahf
jae
or
cmp
imul
pop
and
mov
scas
fcoms
pop
cli
jmp
sbb
mov
mov
mov
mov
ljmp
mov
lcall
xor
mov
sbb
pop
xchg
es
test
xchg
das
negb
ret
ljmp
pusha
push
mov
push
insl
lcall
add
mov
decl
outsb
movsb
xor
push
iret
popa
dec
mov
mov
push
mov
dec
in
flds
sbb
fstsw
xchg
jo
shl
mov
push
adcb
loopne
in
ds
shrb
imul
push
sub
fs
aad
in
or
mov
mov
pop
inc
outsb
pop
push
fiaddl
sub
xor
xor
aas
inc
adc
test
mov
repz
ljmp
ljmp
sbb
iret
int3
cld
ja
pop
insl
nop
cmp
das
popf
clc
dec
movsb
cld
inc
mov
sbb
lahf
inc
lods
gs
dec
cld
mov
mov
arpl
dec
dec
and
pop
out
and
pop
push
push
cmpsl
aad
mov
mov
and
imul
movsl
mov
push
jp
clc
je
fbld
jp
push
and
in
jg
popf
or
lret
jg
repnz
js
jg
push
and
jnp
or
sbb
xchg
lret
ret
inc
jne
popf
test
mov
adc
addr16
pop
mov
stc
xor
mov
add
jno
mov
imul
and
hlt
stc
js
and
fwait
sti
test
out
arpl
movsl
pop
in
gs
imul
sub
and
jecxz
jb
cs
jbe
xchg
or
pop
subl
repnz
mov
sbb
cmp
mov
insl
xlat
insl
sbb
dec
daa
push
jo
insb
cmovg
xchg
sbb
sub
pusha
mov
imul
scas
lea
mov
stos
sti
inc
dec
adc
lods
adc
mov
push
sbb
jns
stos
pusha
jmp
sbb
imul
ss
xchg
or
test
mov
cmpsl
fisttpl
ret
jo
in
mov
dec
aam
fidivrl
pop
idiv
add
cmc
sub
movsb
loope
pop
daa
mov
cmp
lahf
mov
sub
mov
subb
and
push
adc
jle
lods
ucomiss
sti
adc
lea
jb
push
jo
or
push
insb
insl
cmpsl
mov
iret
add
nop
loopne
dec
xor
mov
mov
jl
jne
vmwrite
out
mov
out
and
je
dec
stos
inc
jp
mov
jg
fistl
das
lods
and
mov
nop
xor
push
dec
lahf
lea
lcall
jge
mov
daa
mul
adc
test
rorb
pop
fdivs
xchg
cmpsb
mov
out
pop
add
mov
jne
push
mov
ja
dec
sbb
out
cmp
jecxz
daa
loopne
push
adc
dec
jo
adc
shlb
mov
add
dec
add
jmp
shlb
shrb
sbb
pop
insl
ret
adc
subl
nop
loopne
cmp
mov
add
repnz
inc
push
dec
sbb
fs
ficompl
dec
ds
scas
adc
inc
push
dec
mov
aad
data16
jecxz
divb
ficoms
xor
test
sbb
int
mov
adc
jno
pop
cmp
ja
cmpsb
sub
sub
nop
dec
dec
inc
cmp
mov
sbb
std
inc
aaa
sbb
jecxz
incb
jno
js
frstor
sbb
mov
mov
or
pop
mov
xor
adc
popf
cmp
cltd
mov
imull
adc
mov
leave
aad
mov
cmp
inc
push
je
dec
sarl
xchg
xor
xchg
pop
mov
jecxz
bound
int
adc
sub
aas
jmp
stos
sub
mov
sub
movsw
adc
cmp
add
or
push
sub
mov
ja
add
daa
push
outsl
fldenv
iret
push
mov
mov
mov
ret
shl
notrack
lods
xor
xor
mov
adc
dec
xor
cltd
js
add
xor
inc
stos
cmc
push
xor
push
sbb
je
mov
ja
cmp
into
gs
shl
sbb
mov
push
inc
xor
aam
lods
dec
mov
pop
xlat
out
lds
les
mull
jbe
xor
cmp
sti
mov
loopne
jns
and
jecxz
fsubrs
push
dec
xchg
push
cli
popf
fdivp
enter
lret
adc
dec
jb
popa
inc
andl
repz
lods
push
adc
pop
mov
sbb
nop
jmp
movsl
lods
lods
clc
sbb
out
rcr
in
or
pop
leave
loopne
fisttps
mov
mov
ja
jo
pop
test
call
cmp
mov
into
push
cmpsb
mov
clc
mov
cmp
mov
imul
fsts
pop
loope
xor
sub
adc
es
jns
xchg
out
inc
call
xor
ja
pop
scas
ret
and
sbb
std
add
add
dec
push
popa
push
aam
sub
fisubrs
repz
xchg
jl
mov
jb
mov
testb
cwtl
mov
push
pop
inc
leave
adc
xor
add
mov
icebp
fstps
pop
test
scas
inc
push
rcll
add
pop
cld
fdivrp
loope
push
xor
push
int
and
jmp
xor
jae
stos
adcb
xchg
xchg
lret
bound
mov
sub
and
push
js
ja
mov
dec
js
mov
pop
push
push
imulb
cmpsl
jl
pop
mov
loop
gs
nop
sub
popa
mov
mov
les
xchg
inc
sti
enter
dec
dec
inc
push
jnp
dec
push
mov
out
stc
enter
inc
daa
cmp
test
xchg
pusha
sarb
add
cmc
sbb
mov
jno
clc
push
jo
mov
sbb
icebp
pop
pop
pushf
mov
movsb
in
ficoms
add
pop
mov
adcl
jnp
cmp
sub
adcl
push
and
mov
sub
in
ret
adc
dec
cwtl
ja
fsub
xchg
inc
add
xchg
push
fdivr
dec
les
sub
push
mov
ljmp
test
add
cwtl
inc
in
pushl
fs
mov
int3
mov
xchg
mov
cmp
cmp
inc
cmp
lock
iret
jno
pop
mov
mov
xchg
push
outsl
gs
loope
fbld
mov
mov
or
push
inc
add
int3
fisttps
inc
loopne
movsl
lahf
test
or
mov
jg
test
xchg
shlb
mov
sub
fmull
insb
dec
xor
push
push
jns
push
adc
and
push
outsb
jae
shl
mov
cmp
js
pop
add
push
cmp
pusha
mov
or
push
stc
mov
cmpsl
stos
cmpsb
cli
jecxz
dec
test
mov
mov
add
sarb
dec
addb
xor
lahf
mov
jp
pop
clc
mov
in
scas
das
fbld
mov
adc
in
mov
aas
dec
enter
xlat
scas
mov
pop
cmp
dec
add
mov
adc
push
pop
cmc
pop
loop
das
dec
xchg
jmp
adc
pushf
outsl
inc
aaa
or
or
pop
and
adc
movsl
lret
out
hlt
mov
push
in
cwtl
adc
sub
mov
popa
lcall
pop
cmpsl
inc
sub
lahf
faddp
dec
in
or
jbe
cld
xchg
mov
jbe
shlb
hlt
mov
into
mov
imul
sbb
mov
cli
shll
sub
jge
test
push
cmp
mov
repz
mov
xchg
imul
xor
add
cmp
jb
mov
clc
std
out
shlb
fs
sbb
mov
sbbb
jecxz
xlat
std
mov
sub
daa
xor
call
hlt
mov
push
sub
xchg
jp
or
notl
dec
sub
push
xor
dec
adc
cmpsb
jnp
pusha
repz
jge
add
es
mov
jle
mov
or
xor
mov
rcll
js
ja
in
out
sub
jnp
in
mov
mov
js
mov
push
and
jb
out
in
or
daa
shrl
cld
daa
leave
xor
jns
lahf
popa
jno
ficoml
adc
inc
add
cltd
push
sbb
sti
clc
mov
mov
aas
mov
xchg
jne
popa
pop
fdivrp
test
jg
repz
test
pop
dec
push
cmpsl
inc
les
sahf
aas
in
loopne
or
dec
fidivrs
imul
cmc
dec
aam
ss
adc
push
cmp
into
lods
ljmp
mov
sub
outsb
js
push
subl
sub
mov
cmpsb
icebp
ret
cmpsb
cmpsl
push
and
js
test
repnz
pop
pop
dec
inc
inc
dec
jno
test
adc
fs
cmpsb
shr
movsb
inc
cmovne
mov
cmp
or
mov
sarl
int3
or
jge
pop
mov
sbb
insl
xchg
cmp
inc
addr16
call
mov
clc
call
dec
test
sahf
pop
imul
sbb
inc
xchg
sahf
mov
int3
jmp
icebp
mov
and
mov
scas
xchg
xor
subb
test
push
jne
mov
addl
cmpsl
daa
adc
aam
mov
sub
mov
movsl
jecxz
hlt
xchg
dec
cmp
into
test
repz
lods
pop
inc
in
cmpsb
nop
or
cmp
dec
mov
jae
xchg
imul
lcall
std
imulb
iret
repnz
cs
fldl
jno
sahf
push
test
mov
mov
mov
jo
in
mov
leave
push
fisttpl
sbb
mov
js
jno
push
xor
sub
pop
lret
inc
push
push
outsb
push
ret
pop
xchg
jno
or
inc
or
cld
shlb
pop
jmp
pavgw
dec
aas
xor
push
rcrl
repz
in
faddl
lret
pop
mov
lret
fcmovnb
pop
mov
ljmp
xchg
xor
xchg
addr16
sbb
xchg
mov
or
sub
lcall
xor
dec
inc
lea
mov
mov
bndstx
jg
mov
inc
push
cltd
add
aad
dec
pusha
mov
in
mov
push
adc
test
mov
mov
je
rcrb
sbb
ds
or
mov
lret
sbb
dec
cmc
mov
or
dec
stos
mov
inc
dec
sub
inc
fs
movsl
adc
mov
cmp
outsl
out
rcrl
dec
in
dec
lock
push
push
stos
mov
or
or
dec
push
sti
inc
push
xor
pop
mov
clc
or
jge
push
lahf
movsb
mov
inc
dec
loopne
and
outsb
mov
fildll
add
gs
notb
push
or
add
mov
or
imul
pop
mov
sti
jmp
mov
mov
pop
sbb
and
lods
call
cmp
std
ret
mov
std
cmp
xlat
push
push
sub
cmp
fs
lods
adc
insl
cmp
sub
sbb
push
or
sti
sbb
sub
cmp
pop
cmpsl
loop
lea
sbb
pop
dec
stos
out
into
adc
loop
insb
sub
jb
data16
fcoml
nop
les
cmp
mov
mov
xchg
fcmovbe
mov
xchg
hlt
cmc
push
lods
imul
add
nop
outsl
fsubl
jmp
jb
pop
jle
xor
stos
lods
mov
add
adc
popa
dec
sbb
je
or
rcll
sbbb
inc
divl
imul
nop
in
push
push
sbb
sbb
loope
inc
repz
call
sbb
mov
dec
push
or
scas
inc
pop
in
popf
xchg
push
add
das
push
fs
pop
mov
popf
leave
imulb
adc
xlat
or
aas
cld
add
aad
js
lods
test
dec
dec
inc
mov
std
cmp
xchg
cmp
mov
je
xchg
sbb
jbe
in
sub
jecxz
dec
pop
jl
faddp
mov
imul
pop
in
out
adc
adc
add
push
aas
test
adc
scas
dec
mov
andb
adc
sbb
out
dec
push
arpl
push
sahf
test
mov
vpmovsxbd
imul
jne
add
xchg
shrl
shlb
rclb
movsl
push
mov
leave
addl
dec
out
jg
pop
xor
xor
and
sar
dec
lds
cmpb
pushf
enter
jmp
insb
imulb
stos
dec
dec
loop
add
stc
loop
int3
cld
clc
xchg
mov
pop
out
xchg
push
or
xor
loop
outsl
add
test
xchg
testl
push
and
xor
aas
add
into
hlt
ret
sahf
pop
add
popf
cli
mov
or
add
ret
js
loop
push
fistpll
inc
add
add
jmp
jno
add
bound
out
push
in
or
pop
cli
xchg
xor
mov
rcrl
and
ficoml
and
jmp
pop
adc
lods
push
jno
lds
iret
sbb
std
int
mov
jp
push
dec
into
out
andb
loopne
daa
and
inc
int3
add
lret
outsb
mov
jb
aaa
sub
loop
mov
sti
mov
test
and
popf
popf
xchg
dec
push
xor
shl
push
and
cmp
adc
daa
idiv
cmp
dec
inc
pushl
cmp
scas
jae
inc
nop
popl
mov
fcomps
inc
inc
add
mov
sbb
mov
faddl
mov
incb
outsl
sbb
addb
xchg
pop
fnsave
adc
insb
push
int3
jns
cmp
mov
mov
mov
lds
jo
mov
sbb
dec
lcall
sbb
notb
pushf
movsl
and
sub
cmp
mov
js
enter
loop
bound
push
lret
test
scas
adc
lods
adc
dec
lea
sbb
or
mov
xor
or
mov
xchg
pop
lret
add
fisubrl
fadd
push
mov
adc
ds
in
adc
xor
pop
dec
adc
mov
aaa
fstp
leave
gs
ret
push
aas
imul
pop
addb
push
add
mov
mov
mov
sbb
sbb
jp
xchg
mov
xor
shlb
pop
movsl
and
rorl
orb
jnp
pop
movsl
out
outsl
add
mov
mov
mov
cmp
cmp
xchg
in
call
divl
mov
insb
call
cltd
pop
jo
imul
or
pop
clc
repz
pusha
pop
mov
add
mov
dec
pusha
mov
pop
xchg
test
mov
out
imul
mov
or
mov
or
mov
cld
fucomp
jmp
and
sbb
inc
negl
ljmp
cmp
cmp
xchg
push
mov
cmc
push
out
xchg
cwtl
push
xor
je
pop
in
inc
bound
xchg
jmp
xor
int
inc
sar
mov
imul
pop
jp
or
aas
push
imul
push
jns
popa
sub
xlat
jb
xorl
jne
cld
or
mov
call
adc
mov
testb
lds
sub
pusha
pop
rep
adc
jbe
mov
pop
pushf
xor
adc
adc
cmp
cmp
in
aaa
inc
mov
push
jge
pop
and
mov
xor
repnz
sbb
mov
xchg
std
push
repz
aas
cmpsb
in
sbb
adc
std
dec
insb
cli
stos
pop
shlb
dec
xlat
pop
push
addb
std
in
dec
inc
in
movsl
loopne
sub
cmp
scas
loopne
outsl
sub
pop
mov
out
xchg
or
and
mov
call
pop
cmp
in
lock
call
mov
and
cmp
outsb
xor
adc
out
sbb
pop
inc
jle
outsl
repz
add
mov
add
xchg
pop
pop
xor
in
in
and
push
and
or
mov
loope
jno
cmpsl
mov
add
mov
dec
dec
loope
push
xorb
push
pusha
cmp
sub
xchg
add
jne
adc
dec
adc
pop
aas
shlb
sub
dec
repz
jb
mov
rcrl
xchg
outsb
mov
dec
cs
dec
xorl
sbb
inc
xchg
in
xlat
pop
lret
pop
fwait
es
push
cmc
inc
iret
pop
sub
cmpsl
mov
popf
data16
jmpw
xchg
mov
jae
js
and
push
loop
mov
mov
scas
pushf
sub
fucomi
addr16
ror
aad
fidivl
aam
ljmp
ds
ljmp
adc
sub
in
orl
inc
sbb
and
sub
ds
in
stos
test
mov
das
outsl
mov
sbb
dec
mov
rclb
js
and
lds
testb
imul
mov
or
iret
jno
xor
adc
cmc
fisubl
add
ljmp
push
and
test
ja
cmpsl
add
cmp
inc
arpl
das
fnsave
loope
fmuls
mov
jle
jle
push
mov
cli
xchg
mov
int
aaa
sbb
notb
leave
mov
xchg
jbe
clc
xchg
cs
jecxz
xchg
fimuls
shlb
shlb
mov
js
xchg
idiv
and
push
dec
sbb
sbb
xchg
cmc
push
cmp
pop
lods
fnstsw
sub
push
add
xor
mov
sub
jno
mov
cmpb
scas
decb
mov
shlb
es
or
aaa
jo
je
out
test
fdivs
or
jo
mov
add
mov
pop
xchg
fists
jecxz
test
stos
cmpl
push
xor
test
jmp
pop
or
ljmp
push
xor
scas
call
jl
inc
iret
mov
lea
cmp
cltd
mov
in
dec
mov
std
mov
adc
out
xchg
clc
sub
push
dec
out
push
aad
xor
clc
gs
push
pop
and
loop
mov
fwait
dec
fildl
or
imul
xor
jecxz
mov
ret
jecxz
xor
jp
xor
subb
pop
shrb
and
xchg
dec
cld
jge
fmuls
adc
xchg
jecxz
nop
loopne
pop
xchg
cmp
xor
clc
mov
dec
mov
es
pop
lock
cs
sbbl
and
add
loope
push
inc
mov
xchg
roll
sub
popf
inc
mov
lcall
mov
mov
jnp
hlt
jns
xchg
mov
repnz
mov
in
push
leave
sub
push
cltd
fldcw
stos
lods
psrad
stos
or
in
cmp
dec
ficoml
adcb
push
lahf
test
adc
jns
mov
sub
xchg
ret
lret
lahf
pop
dec
jle
xchg
lock
fcoms
ljmp
jp
add
sbb
insb
outsl
int
and
push
aaa
push
in
sbbb
fstpt
movb
leave
cmpsb
sahf
fldl
add
sub
out
add
ds
test
sub
dec
ret
cmpsl
sbb
cwtl
hlt
dec
lahf
jecxz
sub
adc
and
pusha
cmp
sbb
fidivs
fbstp
xchg
mov
mov
outsl
mov
std
push
inc
mov
push
or
pushf
add
out
pop
leave
sti
or
and
xor
leave
dec
addl
sar
mov
fidivrs
add
adc
sbb
xchg
test
push
cli
sub
and
in
addr16
repz
stc
insl
or
push
sub
cld
adc
cmc
lds
ret
mov
in
andb
sub
push
inc
repz
into
cmpsb
hlt
adc
mov
mov
and
sub
sti
mov
push
lods
cmpxchg
sub
repz
rolb
xchg
mov
push
jge
bound
fwait
mov
lret
push
add
push
lcall
mov
cmpsb
adc
in
sahf
insb
jmp
jo
or
movsb
addl
mov
call
jb
dec
mov
and
jne
pop
adc
sub
pushf
out
sub
pop
dec
outsl
mov
cmp
jae
or
sbb
ja
pop
outsb
cwtl
sbb
aaa
sub
and
sbb
adc
lcall
pop
outsl
push
addr16
jg
call
sahf
popa
pop
addr16
mov
ret
dec
xchg
mov
test
out
pop
in
js
inc
nopl
cmpsb
insb
ss
mov
out
adcl
add
mov
lods
cmp
insb
cmc
out
ds
sbb
out
sbb
movsl
fucomi
loop
gs
dec
cmp
or
pop
mov
pop
aad
inc
popf
fsubs
pushf
dec
xchg
xor
shrl
fidivs
push
mov
add
adc
mov
push
or
arpl
lods
sti
sbb
shlb
xor
psadbw
sbb
roll
lcall
ljmp
scas
notl
outsl
test
lret
mov
in
imul
inc
and
pop
jbe
mov
add
pop
mov
std
shr
xor
jae
add
mov
sub
out
pop
into
mov
add
jno
hlt
jae
lahf
sbb
pop
push
hlt
mov
push
fistpll
push
adc
sub
jbe
cmc
and
rcll
sbb
mov
dec
or
jl
mov
in
cld
add
pop
fwait
dec
fwait
jl
sti
jmp
xor
mov
mov
nop
inc
sub
iret
pop
sbb
jns
sbb
cmpb
or
lahf
dec
mov
add
adc
xor
dec
push
cmc
fnstenv
rclb
rorb
xor
dec
inc
imul
test
adc
jecxz
je
or
sub
pop
dec
mov
xor
cmp
lahf
jmp
fildll
mov
push
jno
je
gs
and
lcall
dec
mov
add
loopne
std
sbb
xor
pop
loop
mov
imul
mov
mov
xorl
int3
add
mov
mov
mov
pop
jae
push
leave
dec
dec
insb
xchg
iret
add
jle
mov
pop
shll
das
nop
loopne
cmp
in
lock
call
mov
xor
push
fidivrl
cmpsb
xchg
mov
in
pop
cmp
mov
cmp
movswl
mov
push
cmp
xchg
push
out
mov
filds
lret
lock
cwtl
cld
or
adcl
dec
imulb
and
out
xor
jl
sub
les
inc
lret
test
ss
loop
decl
adc
call
idivb
push
lods
in
pusha
test
in
xor
and
xchg
lea
sub
cmp
bound
sub
icebp
int
loopne
push
mov
push
sar
adc
add
int
jecxz
jmp
mov
fcmovbe
mov
stos
and
rol
sbb
mov
gs
jge
mov
jle
aaa
mov
xor
jle
out
jle
lea
cld
xchg
or
int
icebp
fisubrs
adc
mov
adc
iret
iret
lahf
aaa
xchg
mov
lahf
pop
push
mov
stos
daa
mov
inc
std
insb
jmp
subl
into
and
je
xlat
adc
dec
rolb
push
pop
ret
in
cmc
ror
cmp
mov
inc
jecxz
adc
pop
shll
cmp
popf
ss
sub
jmp
sub
int3
mov
out
cmp
push
in
pop
dec
pop
cwtl
outsb
mov
out
xchg
and
out
loope
ljmp
cwtl
hlt
aas
in
push
in
mov
cmp
lods
insl
push
pop
push
pop
pop
bound
mov
cmpsl
cmp
sti
or
inc
inc
cltd
inc
movsb
nop
mov
add
rcrl
mov
repz
insl
push
pop
mov
out
or
cmpsb
ss
sub
and
fwait
mov
in
je
push
xchg
lcall
sti
xchg
dec
push
pop
mov
movsl
lods
or
mov
es
xchg
fwait
jle
adc
call
movsl
and
xor
and
aad
inc
mov
pop
jae
push
jns
into
inc
pop
loope
lcall
addl
stc
or
sub
adc
arpl
das
sbb
dec
mov
addr16
push
loopne
sbb
xchg
xor
fnstcw
sbb
lds
out
fistps
enter
mov
sbb
sbb
out
xlat
cld
insb
inc
dec
cmpl
mov
pushf
adc
adc
outsl
and
add
cmp
jne
lds
cmp
or
mov
mov
cmp
mov
mov
cld
xor
inc
jecxz
bound
jmp
repnz
cmpsb
and
adc
sbb
pop
and
jmp
dec
sub
jb
pop
xchg
stc
imul
imul
mov
scas
sub
cmpsl
pop
cs
push
sbb
mov
cmc
mov
sbb
xchg
push
in
in
adc
adc
jo
mov
lds
outsl
fwait
sbb
adc
out
gs
cli
insl
cmp
inc
pop
adc
push
stos
xchg
fildll
scas
inc
leave
mov
ret
ret
ljmp
pop
out
xlat
out
pop
mov
sbb
scas
cmp
cmp
push
pop
lea
outsb
cmp
fwait
rcll
jne
out
movsl
mov
test
xor
or
cmpsb
inc
addr16
enter
pop
mov
fwait
adc
and
sbb
rcrl
out
add
sub
divb
pusha
cmpsb
jns
and
xlat
mov
and
sub
pop
call
or
push
mov
push
pop
and
cld
imul
pop
xor
mov
aas
mov
xor
cli
rcrl
imul
sbb
mov
jmp
cmc
xchg
lock
out
imul
test
mov
fists
imul
jb
cmpsb
and
mov
or
or
sub
jb
loope
aam
data16
inc
iret
sar
js
mov
and
cwtl
pop
xchg
adc
xor
push
aas
sbb
pop
mov
test
mov
scas
out
inc
inc
xlat
out
les
fnstcw
sub
push
sbb
jmp
push
pop
push
cmpsl
inc
jmp
insl
jp
cmpsb
jbe
sbb
iret
int3
mov
fistps
lret
xor
pop
mov
sub
icebp
adc
xor
ja
mov
jmp
imulb
pop
mov
js
insl
dec
add
inc
push
icebp
notb
ljmp
or
test
stc
andl
imul
out
pop
push
xchg
mov
xchg
addr16
ss
or
jmp
sub
outsl
jle
ds
cltd
mov
roll
ljmp
fcoms
insl
dec
je
fbld
mov
dec
notb
scas
call
test
sub
lcall
cmpsl
stos
sbb
mov
ret
jbe
inc
push
das
add
xchg
arpl
je
inc
cmp
jg
imul
in
xchg
sbb
mov
jle
cmp
outsl
jbe
sbb
dec
push
stos
mov
or
fdivr
xlat
jecxz
idivl
out
and
push
andl
inc
fnstsw
mov
pop
or
std
insl
xchg
cmp
adc
or
mov
adc
addr16
dec
dec
popa
adc
mov
loop
pop
inc
mov
xchg
add
imul
ss
mov
inc
inc
and
sub
lds
xchg
inc
push
stos
fs
cmp
dec
sahf
adc
cwtl
imul
ficoms
xor
in
pop
sub
cld
lret
enter
int3
hlt
dec
cli
rorb
push
mov
or
pop
push
rcll
popa
jmp
jnp
imul
mov
cwtl
roll
inc
push
jmp
xchg
lock
push
sarl
scas
sbb
aam
push
jle
sub
repz
mov
pushf
xor
popf
movsl
xor
add
roll
lret
mov
stos
jg
cwtl
fstps
adc
shll
mov
or
call
lret
lahf
stos
pop
sub
mul
mov
xor
clc
mov
dec
mov
or
lods
xor
into
fnstcw
lock
jne
loopne
or
mov
jbe
imul
xor
xchg
xor
adc
ret
das
jne
push
and
pusha
mov
cld
pop
fiadds
mov
aam
outsb
adc
xchg
test
pop
mov
xor
mov
cwtl
xor
les
adc
sbb
imul
jp
std
mov
test
mov
call
and
nop
fdivp
inc
jmp
dec
fsts
test
out
fistpll
mov
std
pop
js
push
adc
fwait
pop
pusha
pop
pop
cli
jg
dec
xchg
in
sub
clc
sbb
repz
les
push
jl
and
mov
shrl
rorb
sbb
cmpsb
cs
sbb
push
push
ja
mov
push
cmpsl
cltd
and
mov
mov
lret
aaa
sbb
fsubr
xchg
cli
lods
add
scas
sti
jl
scas
cli
enter
sbb
sub
mov
shrl
ljmp
cmp
pop
sub
cmp
std
xorb
add
jl
gs
xchg
and
shl
push
mull
add
lret
xlat
adc
jmp
call
lret
fidivl
rolb
or
push
cmp
lock
sub
ror
in
jno
or
mov
cvtps2pi
gs
pop
xchg
mov
mov
and
adc
fstpl
adc
lods
shrb
adc
ret
jnp
cmc
jbe
mov
mov
jecxz,pt
mov
xor
in
and
ret
or
loope
loopne
push
xor
adc
add
push
push
push
fs
and
gs
xor
es
es
pop
stc
jmp
lret
dec
leave
notb
cmp
fstl
mov
popf
pop
stos
sub
data16
test
mov
adc
out
mov
xchg
cmp
loop
push
cs
fstpl
jge
lods
adc
out
lahf
data16
and
and
push
dec
outsl
movsb
inc
push
out
cmpsl
pop
jle
push
cld
fisttpll
push
inc
pop
mov
inc
loopne
add
mov
cmp
or
dec
dec
fdivp
cmp
inc
pop
jmp
push
popa
outsb
fbld
jle
cmp
dec
cld
popf
mov
ljmp
xor
enter
out
rorb
data16
mov
dec
adc
jmp
loopne
insl
test
es
xchg
jle
out
mov
sub
or
lock
fwait
cmp
cmpsb
test
xor
inc
adc
jns
jae
int3
fwait
sbb
call
xabort
inc
adcb
pop
adc
js
rcr
adc
or
add
das
ljmp
push
pop
jo
sbb
imul
jge
add
mov
push
mov
pop
mov
mov
test
mov
xchg
je
pop
iret
bound
andl
sub
sub
jge
or
mov
dec
enter
jl
cmpsb
cmp
mov
mov
call
xchg
or
mov
dec
lret
out
lahf
add
shlb
mov
imul
arpl
jns
xor
pavgw
in
mov
ja
adc
fisubs
repnz
mov
lret
sub
xorl
jmp
scas
int
lea
xchg
ljmp
push
aas
xor
mov
mov
dec
mov
movsb
clc
lds
or
cmp
rclb
into
inc
cli
cltd
mov
pop
push
mov
arpl
loop
ds
sub
adc
push
push
cmp
jg
stos
jae
shrl
data16
lahf
xor
cmpsb
push
jns
imul
jle
fisubs
add
dec
jecxz
lret
addr16
test
daa
push
xchg
fs
sbb
add
outsb
movsb
xlat
jmp
mov
pop
mov
mov
call
ret
mov
fbld
pop
inc
repnz
fimuls
in
into
push
leave
enter
pop
adc
adc
dec
xor
mov
cmp
adc
outsl
lret
pushf
rep
mov
cmpsl
aas
push
ret
jmp
out
add
ljmp
fistpl
popa
inc
and
adc
imul
lods
sbb
outsb
inc
inc
cli
push
sbb
pop
leave
sub
aad
inc
ljmp
addr16
out
lret
mov
mov
repz
js
repnz
shlb
xor
dec
adc
ds
inc
mov
sub
cmc
shlb
call
cmpsl
sub
stos
or
push
xor
xor
adc
adc
lods
jae
fistl
jb
ficomps
sarl
add
dec
insb
pop
jmp
cwtl
add
pop
mov
leave
mov
cmp
lret
pop
jo
je
jb
sub
jb
push
inc
ffreep
push
xchg
vpshufhw
stc
pop
and
into
jl
xor
insl
jmp
in
jbe
push
leave
pop
pop
jne
dec
cli
rcl
test
dec
imul
push
lret
stos
out
mov
cmp
xlat
cwtl
mov
jne
loop
sbb
push
int
or
in
and
push
scas
mov
mov
jae
stos
ja
xor
in
stos
lds
dec
dec
nop
fwait
xor
ja
sub
push
and
push
cld
mov
fcoml
lock
cld
hlt
pop
cmp
lret
imul
insl
inc
and
cwtl
xchg
push
push
push
cmpsb
es
inc
es
dec
inc
std
or
in
mov
adc
cmp
aam
mov
jge
aam
out
jp
sti
mov
sub
and
dec
xor
mov
vmovapd
jne
stos
loop,pn
dec
stos
jnp
push
jp
or
out
cmp
cmp
loop
sbb
test
test
daa
dec
imul
fiadds
in
loopne
push
add
gs
xor
fidivl
aad
in
xor
push
jl
les
mov
or
pop
add
xlat
sbb
dec
add
pop
cli
pop
mov
adc
add
inc
xchg
aad
nop
mov
add
pop
lock
fimuls
popf
mov
sahf
fmull
and
into
cmp
in
adc
cmc
sub
add
sbb
test
mov
xor
sbb
rcrl
and
add
cmpsb
out
push
jmp
in
adc
inc
jg
xchg
mov
push
clc
jae
xchg
add
dec
es
and
repnz
loop
adc
xchg
jl
mov
cmp
lret
xor
or
sbb
jle,pt
arpl
pop
pushf
xor
pop
bound
out
cmp
add
mov
test
sub
mov
test
iret
test
lea
sub
lea
mov
push
mov
ret
push
pop
xchg
add
sub
in
mov
out
xchg
push
pop
lret
pushf
addb
stos
fld
and
jecxz
push
pop
add
cltd
fbstp
lods
mov
xlat
arpl
fisubrs
mov
jnp
pmaxub
bound
sbb
shl
in
dec
outsb
jl,pt
aaa
cwtl
cmpsb
gs
jae
lock
inc
shrl
int3
les
clc
add
data16
lcall
shrl
adc
out
xchg
insl
inc
sbb
add
rcr
iret
test
pop
roll
daa
jl
cmp
ret
dec
aas
pop
lods
out
aaa
sub
xchg
adc
out
ja
imul
ret
aaa
push
aas
bnd
daa
sub
xor
or
pop
mov
or
adcl
add
cld
cmpsl
cld
jg
inc
roll
xchg
insb
mov
outsl
ds
aad
cmp
jle
push
data16
adc
mov
cmp
lahf
push
cmp
xlat
lret
movb
jg
adc
push
or
gs
mov
lea
loope
outsl
les
add
popf
push
xchg
icebp
pushf
jecxz
lea
xchg
add
scas
push
pop
mov
sbb
push
mov
rcll
and
in
shlb
xchg
mov
leave
sub
and
xor
out
jns
fs
jp
stc
sbb
loopne
xor
outsb
icebp
shll
jmp
inc
lcall
ja
shl
dec
jle
push
pop
in
stc
iret
push
inc
mov
aad
jns
imul
bound
cwtl
les
xor
add
loop
sbb
pop
push
mov
sbb
cmp
push
or
mov
sub
mov
cltd
xchg
mov
and
inc
mov
repnz
cmpl
inc
cmp
and
jbe
pop
add
push
xchg
sub
and
jp
inc
inc
dec
or
fnsave
iret
clc
xor
mov
andl
mov
mov
pop
pop
sub
dec
push
push
neg
inc
out
cmp
cmp
std
jae
ficoml
xchg
lea
mov
mov
push
jle
lods
lret
push
pop
xor
div
dec
orl
xchg
icebp
int3
dec
int
add
or
sbb
mov
dec
xchg
jg
test
lods
mov
out
xchg
daa
add
lods
lds
mov
popa
pop
ds
mov
dec
inc
popf
addr16
sub
lock
sbb
cmp
in
push
cmc
mov
mov
por
jmp
fidivrl
add
fisttps
in
outsl
sbbb
fwait
in
and
push
mov
lods
xor
adc
loope
fstl
adc
add
mov
call
outsb
jae
mov
or
xorb
adc
add
add
and
mov
push
lahf
mov
stos
imul
mov
push
iret
xchg
jmp
xchg
out
mov
mov
and
and
stos
inc
pop
dec
jle
ret
xchg
xchg
sahf
and
int
add
in
repnz
pushf
aas
xchg
lods
adc
daa
mov
loopne
in
mov
pop
xchg
int
aas
test
aad
cmpsb
inc
adc
adc
mov
and
pop
loopne
lock
js
test
xchg
jle
cmp
push
inc
pop
fsubrl
jo
sub
cmc
jnp
push
shlb
pushf
dec
sahf
test
jne
inc
and
mov
jo
xchg
ljmp
mull
jae
int3
cmc
xchg
sbb
in
inc
xor
lea
xor
mov
mov
imul
subl
mov
loope
push
xchg
or
mov
mov
imul
fisttps
cmpsb
adc
je
and
out
push
pop
shl
lea
aas
inc
mov
push
adc
mov
pop
push
nop
cld
call
sbb
fsubs
ds
out
mov
clc
jge
dec
push
jl
vmovddup
pusha
push
lock
mov
sub
jp
int
stos
push
fistpll
daa
inc
jno
sbbl
add
test
mov
xor
scas
clc
stos
andb
jg
out
mov
cmp
and
or
xor
fisttpll
mov
jp
xor
imul
sbb
dec
lcall
adc
push
pop
sti
rol
push
cli
pop
bndstx
and
pop
js
fwait
cwtl
xor
leave
pop
aaa
or
aaa
sar
in
dec
addr16
cmc
pop
into
mov
daa
popa
idivl
adc
aaa
hlt
movl
je
cmp
mov
pop
in
popa
add
xchg
adc
xor
inc
xchg
xor
stos
addr16
adc
dec
stos
cld
sbbl
xlat
xchg
pop
xchg
mov
loope
inc
xor
sub
sbb
test
popf
test
ja
inc
icebp
in
aam
enter
jns
cmp
cs
jne
dec
xchg
sbb
sbb
push
ss
fucomp
mov
in
mov
mov
das
jno
mov
xor
inc
xchg
movlps
push
mov
cmpsb
dec
cmp
ljmp
addr16
add
daa
cmpsb
sbbb
adc
dec
sub
xchg
xchg
add
rol
mov
imul
aas
movsl
xchg
pop
or
pop
add
cmpsl
push
idivl
out
pop
mov
cmp
es
mov
je
out
jno
bnd
mov
in
cmp
dec
loopne
std
scas
push
test
repz
pop
bound
je
int3
sub
jo
call
sar
test
cmp
push
outsl
enter
cmp
aaa
xor
sub
mov
out
jg
cltd
sub
push
das
mov
xor
lods
sbb
inc
sti
push
mov
ret
dec
push
lock
aaa
push
push
movsl
add
ds
jle
mov
rorb
data16
dec
enter
jge
cmp
bound
jg
into
je
sub
mov
test
sbb
stos
in
ds
insl
lcall
lahf
out
mov
mov
das
sub
pop
cmp
fwait
jle
fwait
aaa
out
mov
and
stos
push
xchg
out
dec
cli
lods
cmp
pop
xor
aam
inc
lea
or
cwtl
nop
pop
push
cwtl
lock
imul
movsl
sbb
das
outsl
iret
pop
out
push
movsl
fs
fisubrl
cltd
popf
dec
sub
jns
mov
fidivrl
call
pop
pop
pop
or
and
sub
imul
cmc
mov
mov
xor
popf
mov
xor
dec
loop
movsb
cmp
sbb
lret
in
cmpsb
subb
hlt
sub
dec
push
mov
mov
andl
cmp
jecxz
fdivrs
cmp
or
pop
cmpsl
sbb
scas
mov
imul
pop
ret
adc
jo
in
stc
xchg
jecxz
ljmp
repz
jae
pop
pusha
popa
lea
xchg
sbb
jge
stos
jecxz
and
hlt
sbb
inc
movl
mov
push
test
sbb
pop
filds
cld
add
sbb
xor
jnp
enter
mov
adc
test
call
cltd
std
shll
in
dec
cmc
jo
faddp
lods
dec
or
shrl
sub
mov
loop
dec
mov
add
jo
xchg
cmpl
push
adc
outsl
fstpl
in
stos
mov
outsl
sub
insl
pop
dec
pop
and
adc
adc
mov
lcall
and
int
inc
fs
fcomps
lods
mov
incl
lcall
jo
gs
in
scas
ss
fnstenv
popa
das
jo
mov
sbb
movsb
sub
push
push
fimuls
and
push
xor
out
sbb
out
mov
adc
push
xor
repz
or
or
inc
jno
mov
fistpl
addr16
bound
bound
pushf
jne
xlat
sbb
or
es
mov
iret
mov
cltd
xlat
and
push
xchg
roll
fcomp
or
enter
dec
pop
pop
xchg
fildll
or
sarb
mov
out
ror
repz
dec
imul
xor
push
sbb
mov
in
cmp
adc
in
shll
push
and
movb
ss
aaa
push
sbb
movsl
pop
jne
cwtl
push
lods
outsb
lock
add
clc
dec
ficomps
sti
inc
push
daa
mov
decb
sub
push
sub
clc
jo
sub
pop
addr16
flds
outsl
imul
jne
out
cmp
enter
cld
mov
sahf
pop
adc
sbb
ja
push
pop
lock
pop
xchg
into
in
push
adc
and
outsl
repz
push
pop
inc
dec
ljmp
test
xor
int3
mull
shlb
pop
cmp
mov
mov
sahf
xor
xchg
rcl
and
divl
mov
insb
inc
sbb
xchg
int3
cmp
mov
enter
add
pop
sub
aas
adc
pop
mov
test
nop
sub
inc
lret
repz
xchg
icebp
push
sub
mov
jmp
mov
xchg
xchg
mov
int3
xchg
clc
movsl
cs
into
enter
dec
int3
je
inc
sub
cmp
add
out
sbb
test
adc
ret
push
sbb
sub
jne
pop
test
dec
in
inc
pop
mov
jmp
enter
xchg
out
in
mov
shl
mov
in
mov
movb
ret
fwait
push
xor
int3
out
les
test
jbe
or
scas
leave
add
nop
sub
outsl
adc
in
inc
and
movsb
sub
ret
xchg
out
cmpsb
and
push
movsl
or
insb
xchg
mull
mov
loope
pop
inc
jmp
cmpsl
loopne
stos
outsl
xor
adc
ss
pop
inc
xchg
cmp
clc
pop
mov
add
xchg
adc
into
dec
xor
add
sbb
sahf
stos
cli
or
icebp
mov
shrl
mov
rcrl
push
fwait
xchg
xchg
scas
movsb
and
dec
popa
data16
jo
stos
loopne
cs
inc
das
lods
fildll
negl
or
push
xchg
outsl
test
lods
jns
fcomps
lret
pop
cmp
imul
pop
imul
and
push
xchg
lods
cmpsb
dec
lock
add
fwait
test
test
push
xchg
cs
jae
add
sub
push
adc
out
stos
fstpt
mov
xlat
cmp
pop
ret
rol
sti
mov
test
rcr
pop
or
movsl
pop
call
pop
and
jns
cld
xlat
gs
ret
mov
jb
pop
cmp
je
outsl
test
inc
test
test
add
lcall
pop
loope
mov
dec
mov
sub
dec
pop
push
jo
fsubr
inc
lea
mov
out
sbb
jne
jl
iret
bound
cld
dec
mov
mull
orl
rcl
dec
es
aam
inc
xor
jae
das
inc
int3
push
movsl
lret
mov
cmp
and
dec
xchg
sti
xchg
into
mov
mov
loop
jb
imul
push
jmp
adc
mov
ficoml
out
or
psrad
jb
sub
test
call
leave
mov
pop
push
dec
pop
add
sbb
andb
push
push
les
mov
sbb
push
xlat
loopne
mov
mov
repz
pop
rclb
mov
cltd
mov
sub
scas
negb
mov
dec
notb
pushf
test
inc
sbb
pop
jae
adc
xchg
mov
inc
clc
int3
arpl
mov
jecxz
orl
mov
or
add
lods
or
int
adc
ss
arpl
dec
mov
mov
cld
dec
pop
lods
dec
sub
and
mov
xchg
out
mov
imul
cs
mov
mov
dec
mov
jbe
es
or
daa
mov
push
xchg
sub
xor
loop
cmpsl
out
insb
mov
dec
cmp
aas
cmpsl
shlb
sbb
ja
into
das
xchg
sbb
test
les
andb
push
stc
mov
sti
mov
add
or
decl
add
fbstp
js
sarb
cmp
and
repz
aad
xchg
xchg
xor
out
jb
loope
icebp
ficompl
fs
pop
jp
mov
mov
fwait
arpl
ds
jecxz
push
mov
enter
in
mov
xchg
mov
rcrl
shlb
mov
pop
xchg
pop
push
test
sub
fs
lret
rcrl
data16
jl
dec
cmp
sbb
mov
fdivl
movsl
add
xor
xchg
lret
inc
fdivrp
cwtl
xchg
ja
pop
jle
or
xor
leave
pop
dec
mov
pop
xchg
popf
xchg
push
adc
cmp
cmp
dec
flds
adc
lods
js
adc
movsl
cltd
test
and
insl
mov
jae
loopne
testb
pop
insb
clc
cmpsl
sbb
movl
test
xchg
mov
sub
lahf
push
clc
lret
insl
leave
xlat
inc
repnz
sbb
fwait
aad
add
fcmovu
mov
stos
int3
loopne
fs
je
sub
cmpsb
xchg
cmp
pusha
outsb
imul
repnz
cwtl
mov
lret
mov
xchg
scas
es
cmpb
push
pop
out
fsubr
outsb
shll
stos
negb
loopne
adc
mov
jb
adc
adc
adc
mov
inc
fbld
xchg
pop
in
clc
sub
aam
mov
das
sbb
gs
sub
push
lds
jmp
mov
or
and
fimull
xlat
dec
test
lret
cmp
xchg
addr16
fdiv
insl
movsb
or
stos
mov
jmp
out
inc
aas
imul
sbb
pop
cmc
adc
adcb
in
hlt
cmpl
mov
mov
adc
lret
es
ficomps
mov
jl
or
sbb
add
sbb
jecxz
cmpsb
sub
push
push
xchg
or
inc
scas
and
cld
mov
lahf
jmp
cwtl
adc
cltd
cmpsl
and
mov
adc
lods
mov
sub
mov
push
mov
push
outsb
scas
push
lds
adc
mov
cmp
jl
add
in
lock
cs
cmpsl
cs
push
or
aaa
add
pop
call
mov
xor
test
ss
xor
ror
ret
sbb
into
ja
dec
idivl
xor
adc
in
aaa
add
cmpsb
push
mov
sub
iret
lea
outsl
mov
loop
iret
jb
cs
out
fmul
jns
lahf
nop
int
daa
push
push
lds
pop
ret
push
cltd
xchg
push
sbb
sbb
cld
setp
and
data16
cmc
mov
inc
jg
addr16
icebp
and
ljmp
pop
jg
pmaxub
fmul
les
ss
jl
imul
repnz
or
mov
mov
mov
cmpsb
scas
mov
xchg
lea
out
jne
xor
jle
adc
mov
or
and
data16
shlb
scas
mov
repz
sarl
jmp
test
sbb
jbe
ljmp
pop
in
inc
mov
orl
jecxz
aaa
stos
hlt
push
or
mov
mov
xor
mov
sbb
sbb
add
push
lock
subb
in
cmp
or
cmp
cmp
jg
sub
mov
subl
lret
inc
loopne
iret
rcr
jae
adc
incl
dec
mov
xor
push
arpl
int3
pop
xor
mov
ficoms
ret
cmpsl
xchg
fdivr
adc
fwait
shlb
push
adc
pop
mov
je
mov
cmp
jb
out
pop
fxch
sub
xchg
cmpsl
mov
mov
mov
into
fmuls
clc
dec
loopne
popa
sbb
lock
daa
sub
jae
in
cmp
cmp
frstor
mov
push
scas
scas
cld
aas
jb
sahf
rol
add
sub
in
xor
leave
cwtl
roll
test
imulb
mov
mov
out
insl
js
sub
adc
or
rol
enter
sub
jg
dec
inc
loopne
and
jecxz
loop
cmp
mov
scas
mov
pusha
mov
call
cmpsl
lock
int3
in
push
mov
add
mov
and
sbb
mov
adc
sti
outsb
outsl
popf
lret
or
mov
and
sbb
repnz
sub
xchg
dec
aam
mov
push
fistps
dec
lods
scas
outsb
sub
jl
xor
aas
std
or
mov
lods
cwtl
inc
inc
mov
push
sbb
pop
push
imull
test
sbb
stos
leave
mov
xlat
sbb
ss
mov
and
xchg
jl
in
cwtl
push
sub
sbb
jno
ficompl
mov
dec
mov
std
xor
cmp
pop
hlt
jb
imul
xchg
lods
je
lea
mov
sbb
adc
ljmp
adc
mov
sub
pop
iret
fidivs
les
sti
gs
mov
lods
cld
pusha
mov
in
push
xor
leave
test
sbb
int
push
add
je
sub
lock
and
push
push
sbb
dec
sbb
sbb
add
pop
cmpsb
push
jno
adc
cmc
adc
add
jb
xor
push
pop
pop
daa
shr
xlat
or
push
jns
fnsave
sub
xchg
rorb
vorps
lods
xorl
adcb
orl
mov
mov
inc
aaa
push
mov
push
sub
lods
pop
pop
or
scas
dec
test
bsf
mov
xchg
out
mov
pop
loopne
or
aad
movsb
dec
sbb
xor
pushl
mov
push
fnsave
mov
test
cmp
mov
jns
insb
or
stc
data16
out
ret
jnp
cli
rorb
mov
inc
mov
nop
lods
dec
jl
sbb
insb
addr16
xor
std
stc
pusha
push
fisttps
sbb
cmp
sbb
in
mov
mov
mov
fcmove
pop
mov
sbb
sub
out
ret
pop
ja
stos
mov
push
xchg
mov
test
jmp
ss
clc
repz
test
arpl
pop
in
scas
jnp
dec
movsl
cmp
mov
ret
je
sub
enter
xchg
xchg
shll
mov
adc
xlat
loop
dec
push
jne
xor
incb
outsb
test
repz
in
clc
mov
movsl
repz
mov
or
adc
or
adc
mov
xlat
adcb
outsl
sub
in
testl
push
and
xor
inc
fists
nop
shl
sarl
jmp
jo
fldl
fdivl
stos
cmp
popf
std
lds
out
pop
mov
add
addr16
sbb
in
sub
rcll
jns
xchg
cs
stos
sub
lahf
cwtl
cwtl
stc
add
hlt
dec
cmp
push
cs
inc
lahf
sbb
sub
sub
out
dec
fistpl
or
mov
push
push
mov
dec
cmpsb
xor
pop
lods
aad
or
and
es
les
cmp
or
add
shll
cld
cmc
sti
jne
out
mov
shl
fldenv
test
rcrl
lods
sbb
movsb
int
vcvtdq2pd
jge
out
dec
pop
mov
shlb
push
sbbl
mov
in
and
daa
xor
mov
add
hlt
sub
mov
push
negb
outsl
xor
data16
ss
in
xchg
repnz
pop
jmp
shl
dec
negl
jp
arpl
arpl
dec
pop
fsts
jbe
in
mov
dec
mov
shlb
sub
scas
faddl
xchg
fldt
dec
out
scas
mov
roll
xchg
stc
push
ja
test
or
enter
pop
pop
xchg
pop
addl
pop
xor
jmp
jo
mov
incb
lcall
jge
jmp
mov
xchg
in
mov
mov
adc
sbbb
push
mov
pop
dec
cmp
lods
adc
aam
add
or
retw
stos
push
jmp
adc
mov
lods
ret
lret
jo
pop
cwtl
xor
icebp
push
jle
mov
pop
testl
in
mov
aam
pop
pop
cmp
loopne
call
mov
and
jns
add
fwait
mov
enter
cld
lods
mov
push
push
cmp
repz
or
pusha
int3
inc
insb
pop
fcompl
sub
out
ss
sub
xor
sbb
sahf
jg
mov
sahf
push
subb
push
sbb
out
fwait
sbb
mov
xchg
jns
mov
loope
inc
leave
ret
loop
je
loope
xor
stos
push
sbb
fs
sub
lret
repnz
movsl
add
inc
cld
inc
stos
xchg
sbb
sbb
loop
rcr
pop
out
sub
push
mov
sbb
lock
xor
and
roll
test
fistpll
mov
icebp
mov
lock
lods
push
adc
or
and
flds
xchg
sbb
adc
xchg
inc
hlt
sub
adc
mov
mov
adc
jle
enter
stc
in
pop
inc
stos
movsb
inc
jge
into
sub
adc
in
clc
xchg
mov
push
mov
mov
clc
dec
jl
ret
xchg
sbb
xor
cmpb
jl
jns
and
jnp
mov
ret
aas
xor
fcoms
mov
dec
int3
pop
out
orl
pop
fisubrs
ror
jl
mov
pop
mov
jmp
arpl
inc
inc
jmp
test
xor
insl
aam
arpl
and
ss
mov
pop
int3
push
pop
mov
lret
xchg
xor
ljmp
sbb
mov
subl
mov
shll
and
inc
into
cli
lcall
scas
add
mov
mov
cmp
and
repz
pop
ljmp
sbb
cwtl
ret
push
shr
push
gs
xor
in
lret
sbb
and
push
cltd
ss
clc
lods
stos
stc
roll
jg
sbb
push
lods
loope
mov
pop
lcall
adc
sbb
lods
xchg
pop
jb
and
aam
xor
jbe
ror
loop
cltd
ret
add
sub
popa
je
sub
push
popf
outsb
movsb
cmp
cmc
iret
ljmp
bound
mov
ret
mov
sbb
aas
dec
xchg
into
sbb
cmp
xlat
push
insb
jmp
mov
dec
cltd
add
inc
cmp
mov
les
add
out
or
cltd
insb
jecxz
ja
sub
cmpsl
push
xor
pusha
aam
movsl
pop
dec
mov
daa
in
cli
ja
repz
mov
das
in
push
jbe
imul
into
inc
rorb
fs
outsb
daa
fstpl
arpl
loope
push
stos
inc
insb
popa
aaa
or
adc
mov
ss
jmp
jge
mov
mov
add
xchg
dec
xchg
js
adc
je
pmullw
sub
pop
dec
jns
hlt
mov
xchg
mov
test
stos
adc
mov
push
mov
jne
ja
movl
sbb
fwait
mov
popa
cltd
pop
and
loop
rcll
add
les
nop
adc
testl
mov
sbb
jge
fsts
push
mov
je
out
clc
inc
rcrl
stc
aam
lods
pop
and
sub
inc
jge
shr
cmc
lock
and
bound
pop
dec
pop
fcmovu
shl
cmp
scas
sub
or
stos
ss
push
sbb
lds
stc
stc
fs
xlat
inc
movsb
xchg
in
in
pop
rcll
je
out
dec
dec
mov
cmp
mov
mov
inc
mov
xor
cli
jno
in
push
mov
dec
sbb
inc
push
push
fstpl
jp
daa
icebp
jo
jno
inc
cmp
bound
or
mov
push
rol
xlat
pop
nop
int3
xchg
cmpsb
xchg
xor
fnstenv
adc
sbb
cltd
dec
jb
mov
jbe
in
cmp
cwtl
inc
and
or
and
xor
leave
shlb
inc
or
cwtl
lods
mov
pop
dec
xor
push
pop
inc
daa
push
mov
insl
push
mov
sbb
jmp
repnz
push
push
pop
stos
mov
out
ljmp
int3
and
sbb
ds
loopne
add
push
add
hlt
ret
mov
or
mov
mov
data16
or
push
in
or
lret
or
and
xor
jecxz
lret
pop
or
ffreep
xchg
cmp
sti
sub
ja
out
pop
adc
adc
insb
out
outsb
popa
das
loop
int3
or
jecxz
jne
adc
inc
test
in
push
cmp
sar
mov
jge
mov
pusha
ja
jb
pushf
daa
jns
pop
or
cld
fistpl
jl
xchg
cmpsb
adc
popf
lret
popf
inc
imul
push
in
sbbl
xlat
orb
jp
sub
mov
mov
or
rcrl
addb
shl
inc
mov
jg
or
adcb
stos
xchg
mov
ljmp
xlat
inc
xchg
push
imul
les
xor
lahf
fldenv
sbbl
xor
push
or
fadds
lahf
mov
loope
or
cwtl
or
je
das
or
stos
xchg
pop
mov
jecxz
test
shll
outsl
pop
or
inc
jge
mov
adc
add
and
lcall
dec
movsb
lret
imul
jle
in
iret
mov
pop
dec
int3
aad
out
and
or
dec
loop
sub
and
jo
add
jecxz
jne
out
jno
sub
inc
enter
add
jno
out
sub
pop
pop
jp
or
xor
push
mov
enter
addl
xor
mov
sub
add
jmp
mov
fwait
jbe
mov
mov
mov
insb
scas
in
add
push
ret
clc
jle
push
popa
adc
test
sahf
idivl
mov
adc
mov
je
mov
aam
xlat
out
sbb
push
je
aam
jp
mov
sbb
cmp
pop
out
dec
add
out
jle
jne
and
loop
addr16
in
jl
cwtl
enter
movsl
inc
jl
jb
push
popf
bound
lcall
fbstp
push
mov
dec
sub
addr16
jbe
je
sub
mov
jg
enter
adc
das
out
jg
movsb
mov
fldl
lock
flds
outsb
popf
fstpl
stos
lret
sub
mov
fld1
repz
into
mov
pushf
std
loope
pop
xor
nop
mov
cmpb
mov
xchg
xchg
loop
add
jle
jp
xlat
hlt
hlt
pop
cmp
out
les
push
sbb
jge
jnp
fadd
or
ror
dec
fidivrl
xor
subl
mov
fwait
fs
pushf
outsl
mov
fcmovnu
lahf
mov
fcoms
push
push
mov
gs
test
sub
cmpsb
int
outsl
mov
mov
jae
fisttpll
or
mov
sbb
pop
cmpsw
push
rorl
push
testb
xor
and
mov
xor
sahf
out
and
dec
cmp
lods
push
cmp
icebp
sub
dec
js
xlat
out
mov
ss
lds
call
xchg
dec
xor
iret
jge
nopl
sbb
jecxz
mov
inc
xchg
xor
cs
and
xchg
push
dec
pusha
xchg
inc
sub
fisttpl
xor
sub
stc
adc
cld
neg
adc
sub
in
push
cmc
test
das
mov
aaa
imul
push
leave
pusha
mov
add
outsl
pusha
mov
sub
rol
lods
in
cmp
stos
ss
stc
fxam
cmp
sbb
inc
sbb
add
dec
and
scas
insl
lcall
dec
daa
aam
stc
test
mov
lahf
push
outsb
mov
pop
fisubrs
dec
testb
hlt
notb
into
lcall
jge
bound
push
arpl
aas
fcoml
shlb
aas
loope
mov
in
cmp
stc
add
and
adc
xor
or
movsl
ljmp
fldt
pop
std
xorl
add
xlat
test
sbbb
testl
aam
mov
mov
mov
cmp
add
les
pop
pop
imul
test
sbb
and
push
jae
sbb
scas
mov
push
sti
sub
loope
mov
cld
push
push
arpl
adc
mov
mov
jg
ds
rol
iret
pop
cmpb
adc
int
mov
mov
jno
stos
int
add
dec
enter
repz
sbb
xlat
mov
jae
out
sbb
and
arpl
cltd
push
mov
jecxz
pusha
sub
sub
scas
clc
sub
int
ja
fcmovu
xlat
pop
and
fmull
into
cld
xor
into
arpl
mov
pop
pop
and
mov
dec
stos
or
xor
andb
lea
movsl
mov
shrl
not
dec
cli
sti
fbld
sbb
sbb
xchg
ja
popa
or
push
and
xchg
inc
rcll
cmp
sub
jp
popa
or
jbe
mov
mov
cli
pop
adc
adc
xor
out
movsb
enter
push
cli
stos
xlat
and
je
mov
mov
test
aam
mov
mov
fcoml
imul
add
cmp
mov
pushf
lret
loopne
imull
scas
fstl
jmp
jmp
into
xchg
xor
mov
fidivl
addr16
jo
push
inc
adcl
add
mov
jae
repz
aas
adc
or
cli
sub
nop
xchg
jnp
cmp
popf
lods
xchg
into
icebp
add
lahf
popa
negl
insb
cltd
sbb
xor
push
add
cmpsl
pop
ljmp
inc
mov
hlt
bound
icebp
dec
mov
cmpsb
add
fiadds
jmp
mov
dec
ljmp
mov
jb
movsl
addr16
push
ja
cmp
and
imulb
dec
push
inc
mov
mov
mov
movsb
or
insl
stc
inc
cmp
jl
and
cwtl
je
fidivrl
inc
ja
pushf
iret
mov
push
mov
inc
sub
push
inc
cwtl
xor
push
and
xchg
lods
dec
push
es
pop
pop
aad
cmpsl
cmpsb
lods
out
cli
mov
adc
xchg
sbb
cmpsb
sbb
scas
jmp
or
add
mov
in
xchg
movsl
jp
jmp
shrl
outsb
bound
rorl
pop
adc
imul
repnz
jge
popa
dec
xor
outsb
les
sahf
xor
jg
dec
lds
xor
jmp
es
fldt
bound
js
push
repnz
mov
xchg
ret
xor
dec
jp
pop
out
dec
or
or
sarb
call
cmpsl
adc
lcall
push
sahf
jbe
jo
or
out
add
or
stc
add
jle
daa
leave
imul
andl
mov
fimull
imul
cwtl
jno
gs
jno
ja
test
movsl
insl
test
ficoms
jmp
das
pushf
pusha
pop
push
push
out
fdivs
sbb
mov
stc
xor
les
leave
idiv
out
loop
push
dec
cmp
push
in
lea
leave
pop
dec
sub
pop
je
sbbl
bound
cmp
cmp
mov
stc
sub
jns
cli
jb
xor
sub
ret
inc
add
jo
sub
jecxz
jg
cmpsl
gs
mov
pop
orl
in
add
addr16
jmp
incl
or
stos
repz
xchg
push
sti
push
mov
mov
ret
aad
insb
push
cs
mov
xchg
scas
mov
lret
insl
mov
xchg
outsl
mov
sahf
mov
mov
stc
jecxz
ret
ljmp
jmp
mov
rorl
pop
movsl
inc
insl
addl
adc
shrb
das
fnstsw
pop
cmp
and
sbb
or
pusha
scas
aas
xchg
jmp
arpl
lret
push
fnstsw
inc
pop
pop
jge
mov
loopne
or
das
sub
jecxz
inc
xorl
adc
inc
lcall
pushl
adc
rclb
push
fs
std
mov
pop
push
frstor
dec
jp
push
data16
ret
mov
rclb
popf
push
xchg
and
stos
pusha
lods
out
scas
sub
add
das
ss
or
fmull
dec
add
mov
lock
pop
es
jns
rcrl
out
inc
lods
int
ror
pop
test
dec
dec
int
sahf
mov
jnp
push
mov
mov
mov
dec
xlat
fsubrl
ficoms
repnz
aaa
adc
sbb
sub
dec
int3
mov
push
in
cs
leave
jbe
or
cmpsb
imulb
jp
sbb
iret
cmp
jecxz
shrd
ds
fcom
fadds
pop
lahf
cmp
push
or
xchg
inc
inc
xor
fsubr
pop
inc
das
imul
cli
sbb
xor
dec
jmp
clc
push
das
lahf
test
mov
lcall
push
mov
mov
orl
pop
insl
outsl
push
and
adc
das
inc
pop
sub
std
cmp
add
sbb
les
add
movsl
enter
inc
push
mov
jbe
out
aam
cmp
enter
inc
into
dec
and
mov
cmp
jmp
and
or
movsb
jnp
jge
pop
std
hlt
mov
jl
inc
inc
inc
jge
test
sbb
jns
xchg
mov
push
fnstsw
leave
int
or
enter
imul
sbb
push
push
dec
loope
and
add
adc
ret
sbb
loope
rolb
lcall
loopne
pop
push
sahf
cmp
xchg
das
ret
repnz
or
xchg
fidivrs
push
add
pushf
addr16
add
pop
repz
sub
dec
or
sbbb
xchg
aas
mov
clc
adc
ja
mov
and
ret
mov
add
lret
inc
outsb
mov
xchg
xchg
jb
sbb
and
hlt
sub
cwtl
push
in
adc
popf
cmpsb
stc
cmc
add
les
jge
sub
xchg
jl
inc
gs
shl
sti
sarl
and
stos
jmp
adc
imul
lret
add
shlb
cmp
in
and
movb
mov
mov
xchg
out
jecxz
fstpl
lret
fwait
lahf
in
mov
xchg
jge
dec
cmp
sarb
xchg
pop
cmp
or
mov
xchg
rclb
xchg
outsl
mov
into
cltd
pop
inc
push
xor
in
xlat
xor
mov
lret
jmp
mov
rorb
jae
stos
lret
dec
in
shrb
int
lea
xchg
xor
arpl
pop
jmp
mov
fistpll
cli
lods
cmc
div
mov
in
outsl
shl
ljmp
push
jo
pop
mov
sub
push
sub
pushf
iret
add
jnp
rcrl
shrb
inc
mov
cwtl
and
jg
xchg
and
add
cmpsl
jno
lcall
ret
jb
xor
mov
out
cwtl
aad
aas
mov
ljmp
or
cmpsb
not
cmc
xchg
insl
lret
push
adc
scas
inc
out
popf
aad
out
js
or
push
pop
sub
jl
mov
xor
and
fs
push
xchg
jl
lods
scas
mov
mov
arpl
xchg
outsl
aad
mov
push
out
sbb
pop
ret
xor
xlat
cmp
arpl
pop
dec
mov
cmp
loop
push
sub
sbb
into
push
iret
rcrb
push
sarl
jo
in
dec
ss
mov
jl
filds
repz
enter
ja
add
dec
call
adc
rcrl
dec
das
lret
fisttpll
repz
lret
ret
aas
lods
xchg
cmpl
sti
pop
jp
lret
inc
dec
in
loop
outsl
rorb
sub
lods
cld
sbb
es
xchg
cmp
jge,pn
push
loopne
jle
mov
cmp
sbb
xor
and
test
sbb
insl
ja
daa
lods
dec
in
cmp
xor
jge
jbe
xchg
call
inc
xchg
test
dec
dec
jmp
jo
add
fdivl
mov
aam
fimuls
into
in
insl
push
or
lret
dec
jb
adc
adc
jp
imull
cmpsb
sbb
mov
outsb
mov
sub
push
adc
jne
mov
lea
dec
data16
inc
lods
lods
inc
hlt
push
daa
inc
in
mov
stos
stos
xor
add
sbb
sub
jge
lods
rcrl
out
jg
add
je
out
int
lcall
repnz
cmp
mov
or
les
or
dec
pop
rcl
dec
fwait
mov
mov
icebp
ficoms
xchg
bound
adc
repz
mov
xchg
mov
or
bound
push
hlt
fsubrs
aam
mov
push
mov
mov
push
gs
jae
loopne
pop
adc
loopne
or
xorb
mov
popa
sahf
adc
fimuls
push
ljmp
inc
jge
cmpsb
push
push
xchg
mov
jbe
clc
pop
mov
push
adc
xchg
xchg
iret
adc
popa
orl
ret
mov
mov
mov
and
sbb
fstl
sti
sub
xor
out
push
mov
scas
and
imul
mov
mov
popa
roll
dec
repnz
rep
test
aam
scas
mov
jae
sub
stos
mov
xchg
cld
inc
stos
ljmp
scas
xlat
xor
cmpsb
std
push
int
or
arpl
negb
jle
mov
xchg
ret
cli
rcrb
inc
mov
push
lahf
hlt
shrb
or
insl
in
fisttpl
fdivrp
jmp
out
add
lcall
addr16
mov
fwait
sbb
inc
fwait
lahf
rcrb
push
jo
mov
cmp
xor
and
fmulp
rolb
push
std
mov
ret
push
adc
addr16
mov
pop
cmp
mov
out
cli
les
andl
clc
or
xor
repnz
push
outsb
fistpl
hlt
pop
arpl
cmp
test
cltd
cmp
dec
arpl
dec
fwait
mov
scas
iret
test
popa
mov
std
cmp
add
pop
mov
add
xchg
cmp
mov
loop
jno
imul
lods
test
fildl
sub
mov
or
jge
or
adc
aas
jnp
mov
out
repz
lcall
xor
daa
ret
pop
shlb
or
pushf
mov
in
cmp
lahf
test
or
in
xlat
xor
popf
aas
lock
in
cwtl
and
jae
pop
flds
decl
jmp
cltd
fcmovu
dec
ljmp
test
mov
es
inc
repz
mov
ret
mov
call
out
xchg
push
inc
cmp
daa
adc
imul
cvttps2pi
sub
and
icebp
sti
xchg
clc
stos
or
cli
jae
pop
add
dec
incl
adc
ljmp
addr16
or
stos
mov
scas
pop
or
mov
arpl
daa
xchg
repz
sub
jmp
out
mov
cmpsl
sub
aaa
ljmp
mov
dec
mov
add
mov
movsl
pop
dec
pop
fstpt
and
std
cmpsl
adc
bound
mov
data16
add
sbb
stc
into
mov
nop
cmp
xchg
add
cltd
xor
int3
mov
and
jbe
cwtl
aas
mov
fidivl
xor
ljmp
nop
and
std
mov
aas
jmp
nop
pop
xchg
fwait
mov
les
cltd
and
mov
aas
rcr
jmp
cmpsb
push
xchg
sbb
lcall
xchg
jmp
nop
movsl
cmp
clc
in
loope
in
shll
lods
xchg
push
pop
sbb
jg
mov
pop
push
cmp
sub
rclb
and
stc
cmpsl
jl
xchg
mov
imul
push
sbb
inc
inc
clc
sbb
rclb
das
pop
push
or
add
inc
add
jne
sbb
mov
pushf
fsubl
cmp
xchg
sub
icebp
mov
xchg
mov
mov
push
xchg
outsb
pop
and
xchg
test
imul
test
xor
xorb
mov
test
mov
inc
mov
roll
push
daa
inc
lock
cld
dec
sarb
aas
js
loop
add
pop
aas
sbb
lock
std
rorb
jp
mov
lods
mov
aam
test
icebp
ret
ds
jnp
fisubrs
loopne
mov
push
pop
fwait
jo
adc
jmp
cmpb
adc
mov
cmp
into
mov
lahf
rorl
cmc
int
dec
aad
dec
stos
in
in
sahf
sbb
fwait
mov
std
and
add
jno
pushf
out
adc
clc
adc
shrl
in
push
repnz
cmp
sahf
xor
or
pop
push
sti
int
or
ds
in
shrb
icebp
pop
jle
ss
push
xchg
or
fwait
loope
pop
stc
and
sbb
and
and
cld
pushf
pop
cmp
loope
imul
and
dec
adc
scas
add
xorl
iret
das
mov
xor
and
repz
fstl
sub
xchg
lret
mov
aad
pusha
movsb
sbb
into
sub
sbb
scas
xor
ret
xchg
out
pop
fcmovne
push
divl
testb
cmc
push
dec
cmp
fadd
add
pop
add
lea
cltd
lock
aad
inc
push
push
jecxz
mov
sub
or
aad
les
lods
mov
test
inc
xor
inc
mov
add
or
xchg
lock
xor
std
push
xor
dec
ja
push
xor
scas
sub
mov
or
dec
jnp
fcmovnb
out
cltd
movsb
mov
aas
xlat
cmpsb
pop
sbb
or
sub
fisubl
cwtl
int3
push
lea
iret
imull
sub
hlt
jge
fidivrs
test
jl
push
rcr
pop
lock
xchg
fdivp
pop
mov
inc
sub
stc
mov
cmpsl
add
push
mov
mov
inc
cwtl
and
ds
and
jnp
inc
push
cvttps2pi
jae
stos
roll
outsb
push
lods
xor
jl
adc
sub
add
jge
xchg
and
aam
inc
sti
xchg
imul
or
pop
mov
or
mov
mov
jno
jns
and
loope
loopew,pn
or
insl
push
push
cmp
lcall
cltd
insl
ds
adc
pop
rclb
mov
cmp
loopne
scas
es
adc
data16
xchg
push
ds
call
sbb
cli
stos
and
dec
les
add
dec
add
in
repz
sahf
loope
aas
push
inc
hlt
sbb
bound
aas
ja
fidivs
gs
sub
dec
insb
pop
orl
mov
lds
lret
outsl
ret
mov
shrl
test
xchg
pop
stos
jb
sub
jl
out
jbe
xor
add
pop
xchg
data16
add
mov
fwait
jb
jo
aas
mov
fsubrl
movsb
xlat
pushf
lea
cmp
stos
pop
rcll
dec
push
int3
ss
mov
cmpsl
je
sub
sbb
mov
cmpsl
mov
mov
mov
lret
lret
or
in
aam
dec
out
dec
push
xor
push
jae
lret
mov
ljmp
rep
les
cmpsb
imul
jle
cmp
subl
mov
xlat
xor
jmp
mov
jp
fiadds
lods
scas
adcl
frstor
iret
jge
sarl
mov
rcrb
fiaddl
pop
mov
imul
bound
fstpl
mov
xor
xchg
jl
push
cmp
xor
jg
push
inc
jecxz
push
loope
mov
and
int
mov
in
shll
or
les
pushf
ret
mov
sbb
push
decb
or
mov
das
fmull
sub
aaa
jl
jno
mov
loop
ds
cmp
sub
addl
mov
pop
xor
sbb
ficomps
jp
fadd
mov
je
adc
cmp
xor
dec
bound
test
daa
inc
out
mov
mov
and
repz
lock
scas
pop
pop
std
fildl
pop
lcallw
inc
push
inc
sbb
push
stos
pop
popf
push
dec
loop
jl
mov
push
sbb
cmc
sahf
stos
add
push
xlat
pop
in
out
js
fwait
cmp
mov
cmp
cmpsl
inc
mov
cmc
fmuls
inc
sahf
push
xlat
mov
jae
pop
test
mov
mov
or
test
fcmovu
add
add
mov
scas
xor
inc
lods
dec
xor
pop
out
mov
fildl
loope
aad
in
sub
adc
repz
jge
mov
jns
imul
xchg
test
insl
and
jmp
pusha
push
push
xchg
das
iret
in
lret
or
lret
shlb
sub
jecxz
clc
dec
clc
and
addr16
cmp
xlat
hlt
xchg
imul
xor
or
push
mov
mov
sbb
push
jecxz
fwait
outsl
pop
pushf
pop
sbb
insl
or
hlt
movsl
lock
mov
movsb
fnstcw
or
mov
in
hlt
stos
out
add
outsl
dec
adc
es
jg
push
insb
imul
movsb
inc
dec
jle
sub
jmp
out
or
les
jno
push
je
xorl
mull
std
or
orl
xor
mov
in
ss
mov
scas
in
or
mov
lock
loope
nop
mov
sub
cmp
inc
mov
loopne
adc
addr16
jge
in
adc
imul
insl
ret
adcb
bnd
jl
aad
mov
aaa
sub
fistpll
das
cmpsl
stc
lock
push
ja
xor
mov
out
pop
call
inc
adc
cltd
dec
shrl
js
jp
dec
jo
nop
fimuls
xlat
int
dec
mov
sbb
pop
stc
xorl
outsb
lcall
xchg
mov
mov
je
cmp
mov
popa
mov
push
mov
mov
mov
repz
arpl
and
stos
adc
mov
pop
enter
nop
mov
pop
mov
inc
mov
stos
ret
jge
imul
call
mov
jbe
insb
dec
cmpsl
cmp
mov
in
inc
cli
popa
divw
bound
bsf
shrb
inc
fnsave
jle
pop
pop
dec
xchg
pop
imul
add
xchg
lea
mov
and
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
xor
inc
nop
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
or
add
add
call
add
add
add
add
add
add
add
add
add
add
ret
adc
add
add
add
rolb
addb
add
or
add
add
add
loopne
add
add
add
add
add
ret
addb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
pop
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
popa
add
outsl
add
and
push
add
data16
add
jb
add
add
jb
outsl
add
jo
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
bound
imul
push
add
je
arpl
push
add
data16
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
and
inc
add
outsl
add
je
and
inc
add
add
jb
add
dec
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
imul
add
add
add
xor
imul
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
jb
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
jecxz
add
add
cmc
jecxz
add
jecxz
add
in
add
jecxz
add
add
sbb
add
sub
add
cmp
add
dec
in
add
add
add
add
fs
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
je
jb
push
jb
arpl
add
add
imul
outsl
ja
jo
popa
je
