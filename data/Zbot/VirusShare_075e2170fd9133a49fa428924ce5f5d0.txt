mov
sarb
xor
and
and
mov
pop
pop
cli
push
mov
sub
push
push
lea
push
lea
push
subl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
xor
cmp
je
sub
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
jmp
mov
pop
ret
add
add
shlb
pop
add
call
add
pop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
sbb
call
dec
mov
jge
insb
adc
push
mov
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
call
faddl
hlt
nop
adc
push
es
mov
mov
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
shlb
negb
into
imull
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
jae
or
in
adc
insl
loopne
jmp
loopne
sarl
out
jp
int
or
mov
sub
add
mov
mov
push
push
stos
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
addr16
addr16
jnp
icebp
or
in
nop
jns
outsb
adc
stos
inc
mov
out
mov
jb
jmp
scas
jnp
ret
cmp
mov
mov
xchg
dec
xchg
fs
cmp
sub
jp
jno
adc
std
data16
pop
add
dec
call
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
push
sub
and
and
sub
inc
insb
jae
or
in
and
addr16
negl
jbe
imul
mov
cmpsl
pop
daa
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
mov
mov
lret
dec
mov
imul
lret
std
inc
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
add
add
test
add
repnz
add
and
add
and
add
add
adc
add
sbb
add
mov
add
pop
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
and
add
add
add
add
sbb
add
push
and
add
add
mov
add
lret
add
add
lock
add
and
add
add
jb
add
xchg
and
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
and
add
add
les
add
test
add
fisubl
add
dec
and
add
and
add
and
add
add
cmp
add
mov
and
add
and
add
and
add
and
add
and
add
add
add
add
sbb
add
push
and
add
add
mov
add
lret
add
add
lock
add
and
add
add
jb
add
xchg
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
insb
gs
jae
dec
jne
gs
add
add
je
outsl
imul
jbe
jae
add
fs
outsl
outsb
jae
insb
gs
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
insb
jae
jb
outsb
inc
add
roll
dec
gs
jo
imul
inc
gs
gs
inc
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
gs
fwait
add
insb
jae
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
inc
gs
je
imul
push
add
sbb
jb
push
inc
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
je
insl
push
add
add
imul
jb
je
arpl
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
fs
imul
add
enter
jae
gs
popa
insb
jne
add
fs
outsl
outsb
jae
insb
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
ja
push
popa
arpl
jb
jne
add
inc
gs
push
jns
push
imul
gs
imul
gs
add
jl
inc
gs
push
gs
dec
gs
imul
gs
push
outsl
insb
outsl
jb
jle
inc
gs
imul
gs
add
addb
jae
push
arpl
add
gs
push
outsl
outsl
insb
add
aaa
add
ja
push
fs
add
outsl
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
outsl
ja
gs
outsl
jb
push
dec
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jnp
jp
lods
lods
lods
add
cmpsb
push
mov
mov
mov
lret
leave
lret
int
rcl
shr
rcl
shl
rcl
shl
int3
into
int
enter
enter
mov
in
mov
mov
lods
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
not
rcl
cld
fcom
xlat
std
fcomp
fdivr
aam
dec
iret
sar
int3
int3
int
aam
dec
iret
iret
inc
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
scas
sbb
mov
jnp
mov
sar
lret
lret
rcl
sar
aam
fdivr
fcom
call
aad
dec
into
int
int3
int
call
aad
dec
into
into
mov
mov
mov
std
cmpsb
cmpsb
cmpsb
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
push
add
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
int
call
rcl
fcom
fdivr
fcom
fdivr
aad
dec
int
dec
leave
lret
int
inc
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
imul
imul
pop
pop
pop
fs
sbb
movntps
aaa
cmp
cmp
and
pop
pop
pop
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
enter
iret
rcl
call
aam
call
aam
dec
ror
inc
enter
mov
mov
scas
lods
scas
jmp
sahf
xchg
cwtl
xchg
lcall
test
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jle
jge
jge
jge
jno
jno
bound
mov
cmp
inc
mov
jo
jo
popa
popa
arpl
inc
inc
xor
add
add
add
add
movsb
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
lret
enter
mov
mov
ljmp
mov
cltd
call
xchg
xchg
cwtl
xchg
xchg
lcall
lahf
aas
ds
push
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsl
add
pop
or
jnp
nop
mov
incb
jp
idivb
jmp
outsb
outsl
out
push
data16
jae
jge
jge
jns
js
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
incl
test
xchg
xchg
xchg
lahf
lahf
sahf
sti
mov
cwtl
xchg
mov
jns
jns
cs
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
sahf
in
mov
incl
xchg
std
xchg
jge
jno
jb
je
jne
jge
jle
test
xchg
data16
cmp
es
push
jge
jge
fwait
lcall
test
stos
icebp
stos
stos
stos
sti
lods
lods
stos
lods
stos
lods
stos
test
std
movsl
movsl
mov
xchg
xchg
xchg
incl
jge
js
js
jnp
jns
mov
xchg
movsl
movsl
movsl
scas
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
or
inc
inc
dec
insl
imul
xchg
lcall
out
cltd
cltd
fwait
stc
nop
xchg
xchg
std
mov
mov
xchg
mov
mov
jmp
lods
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
xchg
sahf
popf
popf
std
movsb
movsl
movsb
stc
mov
xchg
xchg
in
xchg
in
xchg
push
jne
prefetchw
add
inc
or
or
sub
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
mov
xchg
call
mov
cmpsl
ljmp
test
pushl
mov
test
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
pushf
cltd
fwait
decl
mov
nop
call
xchg
xchg
pushf
pushf
pushf
movsb
movsl
mov
movsb
mov
cwtl
fstpt
jp
push
push
push
outsl
dec
dec
dec
pop
bound
jb
jne
jl
jg
test
int
nop
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
xor
ja
mov
movsb
mov
mov
lods
lods
mov
movsb
movsb
add
mov
add
pop
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
xchg
xchg
lcall
lahf
mov
movsb
std
movsb
mov
fwait
out
nop
xchg
nop
xchg
xchg
les
xchg
lcall
mov
stc
xchg
test
std
xchg
je
cltd
addr16
sahf
pop
test
mov
inc
jnp
mov
jp
mov
jae
mov
insl
ljmp
packuswb
lods
or
ljmp
inc
jge
mov
mov
stos
pushf
movsb
movsb
movsl
and
add
add
pop
pop
adc
mov
jmp
nop
xchg
call
lcall
sahf
lahf
mov
lcall
xchg
cwtl
call
xchg
xchg
call
xchg
cltd
cld
cwtl
cltd
pushf
stc
sahf
fwait
mov
cld
pushf
xchg
xchg
push
xchg
pop
jle
xchg
dec
jns
lcall
pushf
pop
addr16
sahf
pop
jmp
arpl
test
ljmp
adc
scas
adc
mov
imul
mov
insb
mov
lcall
lods
lods
lods
scas
mov
movsl
movsl
add
add
add
add
mov
pop
pop
adc
mov
ljmp
sahf
call
sahf
lcall
mov
movsb
jmp
cwtl
cwtl
decl
mov
decl
ja
cltd
jo
cltd
bound
call
sub
popa
call
or
pop
call
add
mov
adc
stos
sbb
mov
outsb
pushl
push
outsb
mov
and
mov
and
inc
test
ret
mov
scas
lods
mov
lahf
lahf
lahf
add
add
add
add
add
pop
pop
adc
lods
mov
mov
cltd
pushf
lcall
mov
jmp
test
jmp
fwait
popf
decl
pop
jbe
mov
decl
arpl
mov
pop
incl
add
push
decl
add
nop
add
xchg
add
lcall
jmp
and
mov
jne
mov
sub
inc
sub
ret
sub
inc
sub
leave
das
cmp
cs
mov
cld
mov
scas
lret
mov
add
add
add
add
lods
mov
push
adc
test
mov
jmp
stos
stos
ljmp
lods
lods
pushl
scas
scas
jmp
mov
mov
incl
or
incl
add
incl
add
add
mov
push
decl
add
xchg
add
lcall
jmp
push
mov
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
lcall
lods
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
call
add
sahf
add
add
cmpsl
add
stos
add
pushl
cmp
int3
inc
mov
rolb
call
inc
call
dec
xchg
call
dec
xchg
fimull
fisttpl
ficoml
call
test
std
mov
mov
mov
sahf
sahf
or
add
add
add
add
dec
dec
adc
jl
popf
mov
jmp
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
outsb
decl
sbb
decl
adc
pop
decl
add
xchg
add
xchg
add
pushf
add
mov
add
test
pop
pushl
and
call
push
cwtl
call
push
cltd
fsts
fstl
ficoms
ficomps
jmp
pop
lahf
jmp
pop
mov
fadds
mov
mov
cmpsl
cmpsb
cmpsb
jne
sahf
sahf
or
cwtl
xchg
xchg
add
inc
adc
jns
mov
mov
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
and
and
push
call
or
xchg
add
xchg
add
cltd
add
mov
add
stos
add
mov
data16
mov
xor
jmp
bound
in
cmpsl
jmp
cmpsb
call
imul
faddl
ret
mov
cmpsl
mov
sahf
lahf
add
inc
inc
adc
jb
lcall
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
lcall
lcall
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
movd
roll
fsubrl
jmp
jo
jmp
jno
jmp
jno
call
jae
jmp
mov
out
jne
in
je
out
jb
jmp
mov
mov
test
lcall
lahf
add
jle
ds
cmp
js
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
xor
mov
aaa
jae
sahf
xor
lcall
lcall
add
add
test
pop
pushl
add
mov
sbb
ficoml
jmp
jbe
call
jg
in
xorl
push
test
hlt
test
call
mov
mov
test
cmpsl
pushf
sahf
pushf
daa
sahf
sahf
sahf
add
add
add
popa
add
aaa
cmp
pop
pusha
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
insl
mov
lcall
jmp
aaa
jbe
lcall
lcall
add
stos
add
lods
add
mov
fs
mov
add
dec
and
mov
in
mov
push
mov
push
nop
sar
xchg
ret
push
xchg
stc
xchg
stc
ret
out
nop
mov
inc
ret
lods
lods
stos
mov
popf
sahf
xor
pushf
popf
add
add
add
cmp
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
inc
ret
ret
mov
jl
lcall
cmp
dec
test
movsl
xor
pop
lcall
add
add
lods
add
mov
mov
add
enter
xor
out
xchg
push
cltd
push
lcall
negb
clc
sahf
lret
cli
lahf
into
cld
popf
into
cld
lcall
fistpll
cli
mov
mov
mov
popl
lcall
add
add
cmp
outsb
dec
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
ret
ret
inc
enter
mov
mov
ljmp
push
xchg
movsl
sub
fwait
or
popf
add
movsb
add
add
mov
popa
mov
add
movl
je
fiadds
out
lea
push
movsb
into
push
movsl
int
mull
sar
cld
cmpsl
iret
cli
test
std
test
sar
cld
cmpsl
sar
cmc
lahf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
lcall
xor
sub
inc
inc
inc
bound
push
xlat
je
jno
mov
mov
ret
mov
inc
ret
dec
leave
leave
inc
rol
mov
cmpsl
jmp
mov
scas
dec
xchg
mov
add
mov
add
mov
mov
add
into
add
fadds
jb
loopne
jge
out
pop
cmpsb
push
popf
lret
lods
sar
sti
mov
cld
mov
sti
mov
cld
mov
cld
mov
std
mov
mov
pushl
sar
cmc
cmpsb
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsb
jo
mov
xlat
jmp
fcom
test
into
int3
dec
lret
lret
lret
lret
leave
lret
inc
leave
mov
lods
ljmp
push
mov
stos
cmp
popa
jmp
add
mov
mov
add
iret
add
xlat
add
fiadds
jne
call
jae
cli
lods
sar
mov
mov
fcos
cld
mov
fdivr
std
mov
fcos
inc
mov
lret
jmp
mov
call
lret
int3
mov
sahf
mov
or
add
add
xor
add
add
add
pop
or
enter
in
pop
out
jmp
test
in
leave
fsubp
fcmovnu
fdiv
fcomp
fdivr
xlat
std
int3
ror
mov
imul
jmp
add
mov
arpl
mov
add
lret
call
add
fldl
ja
in
jbe
out
das
xchg
stc
mov
cli
mov
loope
inc
inc
loope
std
loopne
inc
dec
fdivrp
std
dec
fdivrp
inc
dec
loopne
cli
mov
leave
call
leave
into
mov
mov
xchg
adc
add
add
incb
std
incb
std
incb
repz
or
out
jmp
in
out
in
sub
out
out
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
test
jns
movsl
adc
pop
ljmp
add
mov
add
int
outsb
call
add
add
jmp
inc
pushf
cld
mov
in
std
int3
loop
std
int3
in
dec
in
dec
jecxz
dec
jecxz
dec
loopne
std
iret
in
dec
in
std
shl
std
shl
cld
ret
out
mov
fdivr
ret
out
cmpsb
cmpsl
cmpsl
mov
xchg
xchg
add
add
add
std
incb
incb
div
testb
hlt
icebp
add
hlt
repz
out
icebp
lock
out
lock
cmp
out
out
pop
fnstsw
loope
les
xchg
sti
lahf
and
lcall
add
add
mov
fs
add
enter
rolb
jo
fildl
jne
in
jp
in
push
pop
test
cli
mov
std
iret
in
cld
shl
call
jmp
call
in
aad
jmp
std
std
fldl2e
fucomi
std
shl
push
aam
jecxz
lret
lret
test
xchg
xchg
and
xchg
cwtl
add
std
cli
add
cld
stc
add
sti
clc
add
div
or
aam
sarb
fwait
sbb
add
cmpsl
add
scas
add
mov
add
lret
call
add
faddl
jbe
out
jns
out
sbb
push
je
cli
ret
std
fsubr
std
fldpi
std
fucomi
std
fsubr
std
fucomp
std
fucomp
std
loopne
fsubrp
std
fsubrp
std
shl
push
ret
call
rcl
clc
stos
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
mov
cwtl
repnz
jmp
add
mov
add
int
outsl
call
add
fiadds
jae
jmp
sub
std
aam
std
loopne
std
fucomi
std
fucomi
fldl2e
out
jecxz
std
shl
sti
iret
loope
cld
shl
push
into
test
aad
out
mov
fcos
fcom
sti
mov
mov
lcall
add
add
add
xlat
add
leave
lds
scas
xchg
lcall
add
mov
mov
add
iret
add
add
loop
jp
jmp
xor
enter
loope
sti
int3
loop
cli
test
aad
repz
sar
repnz
into
jmp
mov
sar
ljmp
imul
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int3
lret
add
shrl
loopne
xor
jmp
add
mov
gs
mov
add
into
push
jno
rorl
ficoml
js
loop
cmp
inc
cwtl
ljmp
call
scas
leave
std
loope
cld
fbstp
neg
mov
leave
ljmp
iret
fsubp
into
shl
fcmovnb
out
loope
in
in
test
out
lock
call
leave
lret
push
stos
lods
stos
adc
cmpsb
cmpsl
test
mov
rolb
ret
rcrl
stos
aam
dec
cmp
cmpsb
sbb
lods
es
mov
js
mov
inc
test
ret
stc
lret
gs
mov
out
mov
mov
lret
ret
int
ror
int
aad
shll
xlat
rcl
jg
fcmovnu
jb
gs
jecxz
call
in
in
xor
div
mull
icebp
lock
or
mov
into
add
add
add
mov
mov
les
imul
sbbb
xchg
cmpsb
sarb
test
mov
mov
cmpsl
mov
mov
enter
int
addr16
ror
push
iret
rcl
dec
fcom
inc
rcl
xor
fcmovnbe
daa
fcomp
fistpl
ficoms
fsub
loop
loope
jecxz
out
jmp
in
icebp
out
add
cld
cmc
add
std
add
std
add
incb
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
les
leave
xor
into
lret
daa
int3
ror
and
rcrb
rcl
rcll
rcl
rorb
rcl
aam
rcr
fadds
fstp
add
add
in
add
in
jmp
leave
aad
std
add
mov
add
ret
les
mov
mov
mov
push
ret
or
leave
movl
enter
lret
roll
rcl
aad
rcr
aam
aad
aam
aad
xlat
add
fsub
add
aad
add
loop
add
fnstsw
add
out
add
lock
incb
std
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
stos
test
test
xchg
xchg
pop
add
add
add
add
add
add
scas
scas
mov
mov
sarb
into
ror
jmp
rcl
cmc
aam
sar
into
rcl
cli
lret
lret
lret
stc
int3
lret
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
aas
cmp
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
into
into
xlat
xlat
xlat
call
xlat
dec
rcl
dec
iret
into
dec
int3
int3
mov
mov
stos
icebp
cltd
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jne
jne
gs
dec
dec
dec
cmp
sub
sub
ss
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
int3
call
rcl
call
rcl
dec
lret
int3
inc
rol
pushl
test
popf
cwtl
xchg
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
cmpl
test
jns
push
push
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jno
jo
scas
mov
pop
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
fwait
fwait
call
xchg
xchg
fwait
fwait
fwait
out
addl
adc
adc
add
add
add
add
add
pop
lcall
pop
pushf
xchg
lcall
addl
jmp
jp
sarb
jnp
jns
jnp
jb
jb
push
push
push
cmp
aaa
sahf
popf
pushf
mov
scas
scas
repz
lods
lods
sti
lods
scas
lods
std
test
sahf
sahf
call
test
call
mov
lods
jmp
scas
scas
leave
movsl
cmpsb
movsl
cltd
jb
jae
adc
adc
add
add
add
add
outsl
insl
outsl
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
cltd
lcall
lea
call
pushf
sahf
ljmp
test
std
mov
scas
mov
xlat
cmpsb
mov
addl
add
add
popa
pusha
popa
or
lods
mov
cmpsb
lahf
mov
decl
mov
std
popf
popf
sahf
sti
sahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
insb
outsl
insl
xchg
subl
nop
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
lods
lods
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
mov
xchg
call
cwtl
lcall
cwtl
lcall
popf
pushf
cli
xchg
xchg
cltd
jmp
xchg
mov
xchg
orb
xchg
imul
popf
dec
jnp
movsb
inc
js
lods
aaa
ja
mov
jae
mov
outsl
ljmp
sbb
mov
lods
mov
mov
mov
movsl
mov
add
add
add
popa
pop
pop
or
mov
in
movsl
cmpsl
call
lahf
sahf
jmp
mov
xchg
decl
addb
xchg
jae
cld
xchg
pop
cmp
dec
jp
cmp
xchg
daa
push
call
push
ljmp
sbb
mov
insl
pushl
pop
jno
mov
pop
xchg
mov
scas
scas
xchg
lahf
popf
sahf
adc
add
add
pusha
popa
popa
or
mov
test
mov
test
stos
stos
test
lcall
pop
jnp
mov
push
mov
decl
adc
xchg
pop
decl
add
call
add
cmpsb
or
je
mov
jge,pn
ret
das
jle
leave
xor
dec
pop
cwtl
inc
test
divl
test
sbb
add
add
pop
pop
pop
or
movsb
test
cmpsl
mov
cmpsb
pushl
mov
pushl
xchg
lahf
decl
adc
mov
push
incl
push
push
decl
add
xchg
add
mov
add
mov
outsb
inc
cmp
call
inc
mov
rolb
call
inc
xchg
flds
call
arpl
stc
mov
mov
mov
std
incb
add
add
pusha
popa
popa
or
mov
ljmp
mov
mov
mov
ljmp
push
jnp
nop
push
call
push
pop
decl
add
add
lahf
add
cmpsl
add
lods
add
mov
dec
nop
fcomps
ficompl
jmp
pop
sahf
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
stos
cmpsb
xor
addb
add
add
dec
pop
jl
jp
pushf
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
lcall
and
xchg
push
pop
call
add
add
mov
fs
mov
xor
fisubl
jmp
outsb
test
out
stos
call
jno
in
jno
call
cmpsl
mov
shll
cmpl
dec
dec
dec
pop
insl
outsb
insb
bound
cltd
xchg
ljmp
mov
mov
mov
jne
lcall
cmp
sahf
sub
lcall
add
movsb
add
lods
add
mov
fs
or
xchg
jmp
jns
jmp
mov
out
cmpl
xrelease
push
mov
mov
cmpsb
test
cltd
fwait
lcall
sub
push
push
push
dec
pop
gs
xchg
mov
mov
mov
mov
ret
mov
xchg
ljmp
sub
fwait
push
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
push
xchg
cltd
stc
lcall
notb
inc
mov
lods
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
inc
ret
mov
test
ljmp
pop
imul
add
test
pusha
pushl
push
fldenv
cmp
jp
push
mov
iret
stc
stos
sar
cld
test
sar
std
lods
sar
stc
cmpsb
int3
jmp
mov
inc
rol
test
popf
sahf
or
add
add
dec
dec
dec
aaa
jae
jae
test
into
int
lret
iret
lret
cmc
lret
lret
enter
enter
mov
mov
lods
inc
jle
mov
add
mov
gs
add
int
insl
fiaddl
call
xchg
cld
mov
mov
fcos
mov
xlat
mov
sar
jmp
leave
dec
ret
scas
scas
lods
mov
add
add
add
add
pop
or
aam
dec
loopne
loope
loopne
loopne
fstp
fadd
fcmovu
xlat
fsubr
mov
addr16
cmpsl
sub
popa
ljmp
add
enter
add
or
lock
mov
sti
ret
loop
inc
loop
std
loopne
inc
fdivrp
dec
fdivrp
dec
std
fdivr
out
mov
leave
divb
popf
popf
sbb
add
add
std
add
incl
jmp
in
sbb
jmp
xor
loope
in
mov
mov
mov
add
mov
arpl
ret
dec
add
fldl
jne
call
outsb
mov
std
ret
cld
shl
shl
shl
call
out
xlat
call
cld
aam
push
xlat
fmul
sar
mov
mov
add
std
std
add
incb
cld
incb
aam
aam
mov
pop
mov
popf
or
ljmp
add
add
rolb
outsl
fiadds
jbe
out
pop
mov
stc
mov
std
shl
fldl2e
std
xlat
jmp
std
std
fsubr
cld
shl
push
xlat
jmp
iret
sti
mov
lahf
popf
das
add
add
into
into
int
mov
fs
mov
add
mov
add
aad
jno
loop
jns
out
xor
cli
lret
loopne
clc
lret
test
repnz
aad
repnz
out
ret
out
in
aam
in
aam
in
fsubrp
mov
stos
das
std
std
add
add
add
aad
push
mov
jae
or
mov
insl
inc
sbb
int3
and
xlat
sub
sti
fists
clc
in
mov
out
loop
lret
mov
leave
fdivrl
sarl
in
fcompl
in
jmp
rorl
mov
add
stos
lods
stos
add
xchg
mov
ljmp
fidivrl
andb
int
mov
shlb
jge
lret
insl
ror
iret
pop
rcl
iret
dec
fcomp
fdivrs
loopne
in
frstor
jecxz
repnz
in
jmp
fcmovnu
fiaddl
incb
std
std
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrb
mov
pop
sarl
or
loope
or
int
add
std
std
add
incl
cltd
cltd
fwait
add
mov
or
int
into
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
lcall
rol
mov
xchg
enter
mov
sarl
scas
scas
insb
lods
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
mov
jmp
aad
aam
rcl
sar
into
int
std
vshufps
mov
in
cmpsl
test
andb
push
add
add
add
add
add
add
add
add
jno
jno
addr16
inc
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
rcl
dec
int
inc
enter
mov
jmp
mov
push
add
add
add
add
jae
jae
xchg
adc
arpl
mov
push
insl
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
cwtl
lds
jae
es
add
add
add
jae
je
pushf
xchg
lcall
test
clc
xchg
test
addl
push
push
push
inc
mov
pushf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
mov
scas
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
stos
mov
test
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
cltd
lcall
push
push
push
imul
jge
mov
xchg
testl
xchg
mov
jo
mov
scas
lods
push
lods
stos
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
call
fwait
lcall
lcall
xchg
mov
loope
jne
out
xchg
bound
std
pushf
inc
jne
cmpsl
ss
scas
sub
and
mov
insl
pushl
pushf
lods
lock
mov
imul
int
add
add
xchg
pop
lods
cmpsb
stos
test
lahf
popf
popf
jmp
mov
xchg
decl
js
popl
decb
push
arpl
nop
adc
cwtl
or
mov
sbb
jae
mov
sub
lds
xchg
rcrb
subl
jne
push
movsb
fwait
lahf
test
cmpsl
cmpsb
cmpsl
ljmp
mov
jmp
sub
decl
or
xchg
push
decl
add
mov
adc
ret
dec
inc
mov
iret
inc
mov
aam
call
push
xchg
dec
lcall
mov
add
add
push
xchg
xchg
xchg
test
lahf
movsl
cld
scas
lods
scas
pushl
mov
ljmp
aaa
jo
xchg
sbb
pop
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsw
call
pushf
mov
mov
cmpsl
cmpsl
pop
add
add
bound
adc
pushf
pushf
pushf
cld
mov
scas
mov
mov
scas
lcall
xor
cltd
and
xchg
or
sahf
add
stos
add
mov
xor
out
mov
in
jl
out
jle
push
jle
fstps
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
arpl
jmp
add
pop
pushl
or
fimull
in
lea
push
xchg
xchg
enter
enter
mov
movsl
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
inc
mov
xchg
ljmp
pop
push
pushl
add
vmwrite
jmp
scas
push
test
clc
stos
sar
sti
scas
sar
cld
scas
sar
std
scas
iret
in
scas
enter
rcr
cmpsb
movsl
ds
incb
xor
jno
inc
mov
mov
aam
mov
aam
out
lret
leave
lret
cli
mov
mov
jmp
inc
add
aam
jb
out
xchg
stc
nop
cld
mov
std
rcr
std
rcr
std
ret
out
mov
shl
test
dec
addb
add
in
in
or
jmp
in
outsb
fcomp
movsb
daa
insl
ljmp
add
int3
add
add
lock
xchg
cld
mov
std
iret
in
call
in
std
shl
aam
call
in
cmc
leave
aad
int3
in
scas
lods
scas
popa
jg
addl
add
add
incb
std
incb
lret
int
sub
sahf
sbb
stos
add
mov
add
loope
jns
cmc
push
movsl
inc
loop
xlat
call
std
shl
std
aam
stc
shl
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
add
mov
or
fistps
jg
ljmp
cli
out
mov
shl
ljmp
loope
lret
jmp
scas
ret
fwait
lcall
add
add
popf
lods
xchg
inc
and
ret
int3
lret
js
mov
xlat
mov
lret
adc
into
outsl
xlat
int3
iret
pop
aad
in
loopne
call
out
out
sbb
mov
mov
cmp
movsb
lods
arpl
lods
mov
ret
mov
les
sbb
bswap
int3
int
aad
aad
std
incb
jg
jg
incl
lods
std
incb
mov
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
adc
rol
jbe
dec
aad
push
bound
cltd
add
mov
pop
int
lahf
sub
mov
mov
dec
jns
or
bound
outsb
xor
inc
inc
or
adc
push
add
iret
pop
push
repnz
dec
stos
sub
or
icebp
cmc
nop
jecxz
icebp
mov
xchg
stc
xchg
sbb
xlat
ds
aaa
into
rcll
dec
or
adcl
mov
out
loopne
pusha
frstor
xor
or
sub
mov
insb
or
xchg
nop
mov
cmp
cs
dec
cs
outsb
cmc
dec
aas
mov
adc
mov
fimull
js
ror
jae
push
add
mov
outsl
idivb
stos
mov
push
or
or
jecxz
lret
test
dec
add
test
mov
or
and
dec
aad
ficomps
int3
mov
scas
jns
or
and
fdivrl
adc
add
and
and
pop
fisubs
push
sar
mov
and
sbb
test
lret
in
jne
cmp
imul
jmp
pop
sub
dec
adc
add
test
jb
lods
les
repz
jb
push
out
sub
or
pop
cs
jge
dec
negl
cwtl
xor
out
inc
and
gs
sarl
shr
sub
inc
xchg
pop
les
pusha
test
mov
cmp
mov
mov
jbe
scas
ror
lds
incb
aaa
enter
mov
and
cmp
jb
inc
xor
loope
mov
mov
xchg
arpl
push
notl
addr16
movsl
nop
add
fstl
enter
dec
mov
mov
mov
negl
or
popf
mov
cmp
bound
lahf
aas
mov
mov
xchg
push
mov
dec
bound
jp
lods
dec
mov
jns
fcomi
fiadds
push
fscale
movsl
in
test
sbb
pop
in
into
mull
push
cmp
ret
inc
ficompl
aam
jecxz
lea
mov
stos
mov
cmp
dec
mov
dec
enter
pmuludq
iret
std
pop
insl
inc
push
jae
daa
mov
imul
lret
xor
repnz
pop
sbb
pusha
xchg
test
test
sub
mov
jle
sahf
les
xlat
in
push
jp
outsb
cmp
mov
cmpsb
add
test
adcl
cld
inc
push
in
outsb
cmp
mov
or
fldln2
pusha
mov
flds
jl
cwtl
movsb
lods
mov
inc
mov
stos
fidivl
pop
lcall
fnstenv
inc
rcrl
or
leave
cmp
inc
lret
fisttpll
and
cld
shll
cltd
and
aas
fdivrl
jecxz
jge
push
sbb
fnstenv
mov
ret
xor
or
mov
xor
push
scas
sub
mov
shlb
pop
adc
xchg
popa
jl
xchg
hlt
das
push
or
sub
mov
es
dec
xor
and
mov
adc
xor
pop
outsb
sahf
sbb
imul
ror
popa
pop
and
popf
lcall
push
aaa
mov
push
nop
mov
fsubs
cmp
lret
std
push
sub
cmp
cmp
jns
sub
fwait
and
cmpsl
cltd
arpl
xchg
pop
aas
mov
dec
mov
xor
mov
xchg
in
inc
out
andb
inc
out
imul
xchg
outsb
scas
outsl
clc
pusha
adc
scas
fdivl
lea
hlt
subb
mov
test
shll
push
push
les
pop
sub
addr16
mov
imul
les
cltd
ss
inc
or
pop
fwait
mov
loopne
clc
lret
ret
jmp
stos
mov
push
jnp
xor
test
rolb
into
inc
fisttpl
mov
dec
and
insl
fs
clc
mov
push
or
dec
mov
lock
cmp
rolb
or
frstor
mov
inc
mov
cli
repnz
loope
icebp
imul
sbb
int3
fcomps
fwait
sbb
lret
cli
or
mov
add
repnz
cmp
frstor
and
cmp
dec
cmp
dec
push
shll
push
sub
mov
push
jmp
sub
sar
pop
dec
out
push
pop
xlat
in
test
and
cwtl
icebp
inc
push
xchg
int
push
or
test
out
lds
and
fistl
into
fwait
les
fidivs
test
mov
sahf
popf
into
std
fmul
xchg
movsb
jae
dec
stos
jnp
add
mov
loope
loope
dec
out
inc
dec
pop
mov
fstl
sbb
rep
inc
sub
mov
lahf
ljmp
arpl
xchg
inc
add
out
pop
mov
add
cmp
or
stos
xchg
sub
mov
mov
fisttps
pop
xchg
scas
cmp
scas
fisubrs
jg
cmp
lods
mov
call
push
loopne
data16
lahf
xchg
jg
ds
je
fidivl
pop
mov
mov
enter
lcall
test
push
cmp
pop
jle
jne
sti
sub
dec
test
and
ljmp
out
clc
mov
fiaddl
fistpl
in
enter
and
aas
mov
gs
test
das
jo
out
ds
test
popa
scas
enter
lcall
lds
aam
xor
mov
fiadds
bound
xor
pop
je
and
pop
xor
inc
and
xchg
xor
adc
pusha
jecxz
jne
outsl
pop
aas
ja
shll
pop
arpl
nop
ret
cmpsl
inc
inc
jg
jmp
jae
faddp
out
cmpsl
xor
xlat
cli
xchg
and
dec
call
outsb
clc
fwait
aas
jo
pop
stos
outsl
pxor
test
lahf
pop
cmp
mov
xor
test
lahf
inc
fimull
lcall
stc
xor
push
mov
std
inc
mov
or
jg
mov
add
fcmovb
loopne
mov
pop
sub
push
in
xchg
adc
int3
mov
dec
mov
in
lret
cwtl
pushf
outsl
jg
ds
hlt
in
jle
lcall
lahf
jmp
push
sbb
xchg
mov
mov
cmp
and
pop
sahf
enter
push
push
fbstp
add
in
stos
out
call
loop
scas
lcall
ja
or
lcall
mov
xchg
mov
iret
ret
push
mov
pushf
adc
fldt
xchg
pop
dec
stos
jecxz
in
jnp
pop
mov
addr16
cld
push
lock
movsb
cmp
push
movsl
lcall
ret
in
ret
loopne
cmc
or
call
shrb
mov
repz
popf
and
push
call
jbe
jo
inc
xchg
inc
fxch
popa
mov
inc
mov
inc
out
sbbl
cmp
jmp
push
inc
lods
pop
sahf
fisubs
jae
jmp
stos
mov
fbstp
leave
adc
push
out
idivl
test
mov
lcall
movsb
push
in
aad
test
or
iret
pop
add
sub
jge
sahf
mov
xchg
adc
mov
roll
jno
aad
adc
dec
ffreep
xor
data16
fwait
ja
push
rcrb
fstpt
fisubrs
shlb
add
mov
pop
enter
je
pop
xchg
mov
shlb
insl
pop
xchg
inc
faddp
cmp
mov
xor
mov
fwait
call
or
mov
mov
fdivrp
xchg
adc
hlt
mov
mov
sub
mov
inc
jmp
or
data16
sbb
out
aaa
into
pop
mov
and
aas
push
in
jo
stos
inc
xor
push
enter
xchg
sub
stos
in
fdivl
xor
jge
sbb
or
push
push
lea
jp
std
xchg
test
mov
cwtl
add
pop
loop
inc
or
pop
mov
int3
shll
xchg
in
jl
mov
xorl
outsl
subl
add
mov
push
push
push
fisubs
data16
movsl
jne
cmpsl
jmp
clc
enter
sbb
mov
dec
imul
pushf
insb
push
ljmp
jno
lock
inc
adc
sbb
mov
cmp
mov
arpl
pop
rclb
jmp
cmp
fidivs
pop
or
fildll
sbb
xor
rolb
movsb
push
out
aad
sbbb
divb
sub
mov
sub
push
jle
mov
iret
lahf
fdivl
lock
adc
andb
or
mov
push
sbb
sbb
into
lcall
sbb
mov
loopne
shlb
lret
bound
cmp
xchg
outsb
add
inc
fisubrl
jl
or
jno
jno
sahf
xor
pop
mov
popf
xor
push
fidivs
sbb
xchg
outsl
arpl
ss
jo
mov
push
mov
dec
jg
pop
repz
je
pop
scas
gs
pop
inc
sub
jg
shlb
add
inc
ds
arpl
aam
cmp
mov
push
mov
pop
sbb
jno
inc
push
movsl
ja
sub
and
xor
jo
mov
xor
icebp
push
push
fnstenv
dec
pusha
idivl
mov
push
jp
aas
insb
dec
sub
pushf
lea
or
mov
pop
lahf
ss
imul
mov
jbe
or
cmpl
test
sub
or
xor
fcompl
pop
mov
cld
sbbl
add
out
xchg
mov
hlt
sub
add
cli
imul
dec
xchg
mov
out
xchg
lea
test
stos
pop
sbb
mov
aad
sbb
lret
scas
fsubp
jl
shrl
shl
or
clc
notb
out
call
jns
jns
out
pop
or
repz
sub
mov
shl
mov
cmp
repz
stos
les
mov
xlat
lods
mov
sar
scas
inc
ljmp
pop
jle
call
adc
std
xchg
add
lret
bound
mov
mov
in
into
pop
in
stc
fiadds
jecxz
icebp
in
push
sub
and
test
nop
cwtl
movsl
mov
pop
pop
jo
dec
cmp
js
test
mov
fidivrs
sarb
mov
icebp
mov
xchg
test
xchg
jne
shrl
xchg
or
mov
lcall
mov
mov
ds
adc
repnz
aaa
into
js
sbb
test
idivb
pop
repnz
pop
js
mov
xchg
test
xchg
sub
and
sar
jmp
mov
aam
testb
leave
and
jp
xor
fwait
mov
or
das
pop
hlt
mov
rcll
decl
lahf
and
into
gs
jl
or
f2xm1
adc
and
jnp
dec
xchg
push
xor
jg
dec
loopne
mov
shrl
xor
std
les
push
pop
mov
cmp
mov
ljmp
movsb
std
dec
loop
cld
push
movsl
sub
cmp
xorl
mov
add
cmpsb
adc
mov
movl
mov
loop
or
mov
pop
mov
pop
subl
mov
sub
adc
ss
cmpsl
jmp
xor
mov
fcmovnb
push
int
add
mov
mov
xor
jae
sub
add
daa
or
lret
outsb
sub
fwait
dec
mov
inc
jo
lods
inc
push
adc
xchg
xor
arpl
xor
adc
int3
jnp
cld
sbb
je
stos
fnstenv
outsb
mov
fwait
scas
aas
mov
pop
shlb
roll
xchg
outsb
loop
sub
adc
pop
out
cmp
inc
jnp
repz
pushf
pop
out
or
cs
mov
mov
icebp
mov
push
jmp
out
sbb
das
and
ljmp
dec
jle
out
call
mov
mov
in
mov
cwtl
das
outsl
xlat
mov
cmp
cs
cmc
mov
cld
lahf
ss
lcall
subl
sbb
out
xchg
mov
jl
leave
push
xchg
or
je
into
lods
cmp
aam
and
sahf
add
fs
xchg
xchg
sub
xacquire
or
pop
sahf
cltd
lods
and
sub
xor
adc
push
pop
lock
lret
out
insl
sub
cmp
repz
mov
es
ds
mov
cmp
test
hlt
mov
and
inc
in
mov
sbb
mov
dec
fistpll
ds
pushf
inc
fimull
cs
fstpl
rclb
cs
test
out
xor
movsl
xchg
sub
cli
pop
hlt
jmp
sbbb
or
jecxz
push
dec
fisttps
xor
pop
push
or
int
mov
mov
and
scas
fnstenv
ljmp
lret
adc
orb
lahf
mov
sbbl
movsl
out
out
es
call
clc
fidivl
lret
sahf
pop
add
outsl
push
fbld
mov
lret
data16
add
test
and
add
sub
sbb
adc
sub
fnstenv
lret
cmpsl
or
mov
rolb
lcall
and
sbb
jle
lods
jnp
mov
mov
fildll
rcl
out
test
mov
imul
cmp
xchg
dec
fbld
mov
loop
mov
dec
in
push
xchg
inc
mov
out
out
fs
push
xchg
inc
push
mov
lcall
or
sahf
sub
jno
or
cld
xor
ljmp
data16
pop
xor
imul
push
pop
cmc
dec
mov
lcall
lea
mov
mov
jb
jg
aas
mov
dec
mov
jno
and
imul
xchg
pop
or
jp
jnp
ss
fcmovnb
pop
add
sbb
xlat
and
xchg
jg
mov
dec
jae
js
mov
cmp
ljmp
sbb
fcomps
cmp
xor
fstpl
mov
cmpsb
pop
repz
and
stos
push
clc
jp
and
cmp
lahf
add
pop
push
pop
aam
dec
lret
or
dec
xchg
jns
jne
je
cmpsl
lods
outsl
mov
lret
mov
pop
incb
pusha
pop
or
mov
jae
jge
inc
mov
jge
mov
push
adc
add
inc
mov
jle
shlb
ljmp
lods
cltd
xchg
push
rclb
test
inc
mov
loop
mov
movsl
cmp
bound
pushf
mov
test
loop
sub
pop
push
sbb
pusha
mov
fisttps
jno
cs
adc
sub
loopne
jecxz
pop
sbb
cmc
mov
and
int3
hlt
popf
sbb
in
das
mov
divl
scas
cmp
and
test
pop
xchg
inc
adc
insb
cmc
test
sbb
inc
pop
and
mov
ds
data16
xchg
inc
jle
movsb
ss
mov
rcrb
rolb
jns
push
pushf
sahf
cmp
enter
das
or
fsubp
fldcw
stos
mov
lret
dec
or
pushf
stc
pop
push
push
rolb
jbe
dec
push
dec
pop
out
insb
adc
data16
or
dec
or
lret
andl
dec
or
test
xchg
sbb
jae
dec
pusha
dec
or
mov
rolb
call
dec
or
data16
cs
jmp
cmp
loope
dec
test
mov
clc
mov
les
lods
cmc
sub
int3
inc
jge
aas
scas
push
jl
fidivl
sub
dec
je
xchg
fsts
mov
and
cmp
xor
xor
pop
aad
jbe
push
dec
add
popf
inc
add
push
ds
jne
and
ficoml
stc
xor
cmp
in
std
jb
shlb
flds
cmp
dec
xchg
les
outsl
xor
jns
rcll
xchg
add
inc
jecxz
mov
addr16
daa
cltd
xor
scas
inc
in
xchg
mov
fnstcw
or
adcb
or
mov
sub
add
inc
fisttpll
stos
fs
fdivrl
movsl
test
lret
sub
cld
push
mov
loop
mov
imul
sub
xchg
cmc
dec
cli
xchg
jnp
cmpsb
cmp
xchg
fmuls
pop
mov
mov
jp
sahf
mov
sub
push
scas
movsl
sbb
pop
fdivrs
popf
dec
enter
stc
popf
lods
cmp
mov
mov
or
insb
outsl
rcr
mov
add
lret
or
cli
pushf
mov
int3
ljmp
sub
mov
dec
sbb
lret
adc
mov
fisubl
xchg
sub
inc
popa
clc
jbe
mov
dec
xchg
jg
leave
outsb
into
mov
ret
hlt
cmp
or
ret
rcrb
inc
fsubrp
ss
std
cmp
pop
test
nop
ficoml
or
outsl
push
pop
add
lea
pop
fbstp
shrb
xchg
fisubs
sbb
stos
push
cmp
or
pushf
std
mov
and
dec
cmc
jne
daa
jno
aam
stc
adcl
sbb
jmp
and
outsb
inc
or
rcll
loop
jmp
cmp
imul
fbstp
test
arpl
fxch
or
xchg
sub
imul
jp
sub
xor
add
dec
jecxz
and
adcl
lret
leave
inc
fdivrp
lret
cld
sbb
mov
shll
and
or
xchg
pop
ljmp
jmp
or
fldl
imul
test
jno
outsb
negb
dec
push
popa
fldl
mov
shrl
pop
ljmp
add
scas
fisttps
in
cld
movsb
sbb
adc
xor
or
leave
push
insb
out
and
call
cmp
inc
lret
lods
or
sub
pop
imul
lods
dec
rclb
jp
xor
adc
add
lret
dec
hlt
std
fwait
dec
mov
insb
xchg
movsb
ret
push
filds
lret
and
loop
mov
add
or
ja
cli
adc
shrb
sbb
push
idivb
pushf
jae
fcompl
dec
mov
jmp
aaa
xor
ficoms
or
pusha
inc
pop
in
push
pop
xor
push
cmpsb
mov
test
pop
fnstsw
pop
lods
std
out
cs
in
add
sahf
andl
and
cmpsb
hlt
inc
fsubl
aaa
int3
cmc
inc
gs
jae
push
jmp
xchg
sbbl
push
or
rclb
adc
push
mov
loopne
outsb
adc
aaa
hlt
mov
xor
mov
fcoml
push
or
jo
popa
sub
negl
fwait
xor
scas
inc
pop
rcrb
jo
and
cld
xchg
scas
js
addr16
add
pop
in
and
push
outsl
inc
fbstp
nop
fnsave
add
imul
nop
fnsave
sub
xchg
inc
popf
xor
mov
int
je
pop
dec
in
xor
push
insb
mov
adc
push
test
push
insl
out
shrl
mov
rolb
mov
loope
and
clc
push
iret
loop
faddp
fnstsw
iret
rcr
fwait
xor
test
and
push
push
std
xchg
js
inc
xlat
jae
cltd
xor
lock
loope
sub
cli
in
push
add
jne
mov
test
xor
dec
fistps
fcmovu
jne
mov
mov
add
testb
inc
sbbl
in
movsl
cmp
je
xchg
loopne
push
insb
cmp
cmp
loopne
lea
fisttpll
sbb
pop
ds
push
sbb
push
adc
mov
sbbb
shll
leave
daa
ffreep
pop
das
dec
inc
fcomps
mov
push
xchg
cmpl
and
inc
mov
push
and
jns
aas
out
pop
cld
xchg
mov
pop
mov
add
lcall
jnp
jecxz
sti
xchg
mov
sarl
mov
scas
inc
pop
in
mov
jge
push
mov
jmp
sbb
insl
shll
xor
movsl
sbb
push
sahf
mov
add
fs
sbbb
xchg
call
and
push
ret
add
jno
cmp
dec
add
ds
sub
rcrl
outsb
loop
or
cs
inc
inc
dec
xchg
sub
data16
pop
dec
xchg
jo
imul
dec
lahf
js
daa
imul
in
aam
cmp
push
jae
sbbl
sub
sbb
mov
dec
inc
fdivrs
shll
and
dec
loope
outsl
enter
add
inc
aad
cld
push
fldenv
push
lret
mov
mov
pop
repz
jmp
and
hlt
mov
xchg
or
enter
dec
jmp
mov
lret
cmp
cmc
mov
pop
push
mov
daa
je
cmpb
dec
mov
fbstp
and
test
mov
fs
cli
xchg
in
test
sbb
aaa
mov
mov
aad
xor
push
in
lods
push
lahf
outsb
into
or
mov
fistl
ret
ss
sub
mov
or
or
or
out
sub
jns
ja
sub
out
xchg
cltd
xor
pop
or
jb
mov
sbb
movsl
cmp
cmp
stos
xchg
in
sub
dec
push
call
pop
sub
mov
lahf
ss
sbb
push
push
pop
cli
xchg
push
out
mov
push
loope
sbb
adc
fnsave
jp
push
mov
and
fildl
xchg
call
adc
xor
pop
test
ss
dec
mov
imul
sarl
cs
lahf
inc
inc
fnsave
je
in
adc
in
testb
jecxz
mov
adc
mov
stc
jmp
cmp
mov
hlt
add
scas
inc
jmp
pop
repnz
or
xchg
sub
jecxz
jp
hlt
add
adc
lea
rcrl
loop
loopne
fwait
xor
add
outsl
jne
cmp
or
cwtl
push
jmp
xor
es
stos
xchg
mov
flds
or
add
call
bound
mov
sbb
sbb
lods
movsb
pop
push
aas
sub
scas
in
in
fwait
mov
cmp
cmpsl
and
pop
nop
inc
fmuls
push
jnp
aam
jmp
frstor
arpl
mov
dec
frstor
mov
sub
shlb
dec
loopne
push
mov
adc
ljmp
add
xor
sti
dec
pop
out
mov
arpl
inc
adc
enter
or
out
divl
jbe
lds
jae
loopne
cwtl
add
sub
mov
jecxz
pushl
or
pop
ds
mov
push
adc
cmp
cmp
xor
out
xor
loope
scas
mov
sub
int
dec
cmpsb
dec
lods
xor
fisubs
jp
sub
vmovupd
and
sub
or
xchg
push
rol
jp
stc
hlt
in
pop
enter
ret
fucomi
sbb
lret
fidivs
mov
mov
adc
ds
xor
mov
call
das
lcall
mov
mov
gs
outsl
push
xchg
mov
cmovo
push
iret
lds
mov
in
fsubrl
pop
mov
mov
in
test
mov
adc
aaa
mov
cmp
pop
lcall
and
mov
mov
and
push
fmuls
mov
stc
shl
hlt
popf
jnp
shrb
pushf
dec
jecxz
popf
ljmp
push
cmp
aas
sbb
inc
sahf
dec
in
jg
mov
jecxz
lods
inc
xor
sti
addr16
cmp
xchg
jge
mov
daa
ljmp
xor
fbld
push
cmp
scas
repnz
pop
push
dec
shrb
cld
ret
ds
xor
push
ljmp
sbbl
popf
adc
inc
sarl
xchg
in
cmp
cmp
pusha
repnz
movsl
dec
or
xor
jnp
xchg
stos
inc
enter
mov
mov
pop
subb
cmp
ret
push
push
push
mov
dec
and
cmpsl
xchg
inc
xchg
sti
rcrl
idiv
mov
test
js
xchg
pop
popf
xor
adc
mov
pop
iret
repz
inc
xlat
sub
sarl
mull
push
sbb
inc
pushf
setge
jecxz
outsl
mov
test
icebp
cli
lds
fcompl
add
hlt
in
faddp
call
insl
dec
clc
movsl
aad
std
rorl
jnp
sbb
ds
cmp
cmp
xchg
std
mov
or
cbtw
out
icebp
mov
or
and
scas
call
sub
jle
dec
and
js
push
pop
out
inc
jae
pop
movsl
fs
inc
icebp
xchg
dec
push
dec
in
out
jl
out
sbb
roll
mov
cmp
arpl
out
movsw
cmp
jb
dec
ljmp
arpl
test
pop
sbb
movsl
xchg
xchg
lcall
xchg
add
movsl
cmpsb
rolb
sbb
fnstenv
lret
cmpl
and
pop
xor
or
push
repnz
sbb
lea
jno
jp
inc
jmp
aas
push
jecxz
outsl
xchg
cmp
ret
fildl
shlb
dec
sbb
mov
ss
testb
sahf
pop
les
ds
test
xchg
cs
cmp
outsl
addr16
and
rclb
jno
push
lods
scas
adc
test
pushf
pop
lods
mov
js
sahf
jo
pop
inc
scas
dec
jg
xchg
push
lods
movsl
es
in
push
jg
into
ss
test
or
hlt
jbe
adc
and
js
jl
int3
aaa
faddl
mov
mov
mov
mov
imul
mov
add
sbb
mov
sahf
jns
outsl
inc
out
pop
lret
cmp
popf
ja
mov
lods
fsubs
outsl
push
ret
int
jnp
add
add
dec
xchg
lds
outsb
stos
fcoms
ret
inc
pop
aam
ds
mov
fwait
xor
stc
subb
and
sbb
fwait
out
mov
mov
repnz
in
aam
fildl
fsubrp
inc
aam
lahf
xchg
in
rol
pop
add
outsl
xchg
inc
mov
add
fcomip
in
in
pop
sahf
hlt
mov
pop
adc
sar
aad
aas
inc
int3
mov
inc
data16
pop
cwtl
scas
mov
xor
lea
mov
lds
mov
or
xchg
mov
and
xorb
pop
xor
and
sub
cmc
xlat
adc
jo
xor
fmulp
std
pop
xchg
sbb
test
sbb
iret
js
adcb
and
fstpt
movsl
sbb
jns
iret
xchg
lea
cmp
lock
out
mov
sbb
lock
lods
mov
cmp
stos
std
leave
or
and
mov
inc
test
push
movsl
add
call
adc
push
adc
stc
mov
inc
fidivl
movsb
xchg
inc
fldl
bound
call
ss
sbb
movsl
inc
pop
push
outsb
movsb
mov
jg
mov
lock
jg
adc
xlat
xlat
outsb
pcmpgtw
mov
jb
into
dec
adc
int
jl
cmp
and
movsb
and
xchg
mov
movsb
cmp
pop
dec
inc
and
mov
jns
test
rorl
loope
adc
mov
cmpsb
xchg
insl
add
inc
sahf
jne
iret
daa
std
xchg
lods
inc
leave
push
stc
mov
inc
push
jne
in
jl
adc
add
xchg
dec
in
jg
xor
jl
pop
push
repnz
cmp
jp
pop
mov
mov
dec
mov
push
mov
inc
cmpsb
inc
out
jb
mov
sbb
cmp
cs
sarl
sbb
sub
rcll
stc
sbb
pop
inc
adc
mov
xchg
stos
clc
fnstsw
leave
push
push
dec
adc
ss
xor
push
shl
sbb
pop
in
aad
sub
jp
sub
subl
adc
adc
cmpsl
cmpsb
negl
xchg
rclb
ds
scas
mov
std
mov
and
int3
addr16
add
inc
xor
sub
sbb
inc
rolb
ja
sbb
inc
loopne
jnp
lods
mov
xor
sbbl
fisubl
or
dec
ja
fwait
and
fnsave
mov
cmp
pop
push
pop
push
xchg
aas
cli
sbb
das
jmp
in
adc
outsb
add
pop
mov
xor
aas
inc
jae
in
out
xchg
xor
sub
push
int
mov
pop
aad
cmp
gs
std
sub
pop
mov
pop
or
sbb
fldcw
arpl
out
adcl
fs
gs
insl
shll
dec
stc
cltd
push
jl
cmp
push
adc
inc
inc
lret
mov
rol
and
js
sbb
fwait
add
inc
stos
cmp
ja
insb
jns
adc
push
addr16
ljmp
mov
in
sahf
dec
mov
jle
dec
push
sub
lcall
cmp
xchg
xor
xlat
sub
lret
cmpsl
lret
cmp
stos
mov
xchg
adc
outsl
dec
out
push
mov
ljmp
cmp
mov
push
mov
movsl
pop
mov
rcll
cmp
fwait
jg
into
cmc
jno
daa
lock
incb
das
pusha
add
cmp
cli
imul
pop
rcr
adc
lret
mov
nop
push
pop
in
mov
pop
lock
int
mov
data16
push
mov
stos
fistpl
adc
fidivl
or
ffreep
ds
sbb
push
fimuls
cmp
ja
lods
lock
idivl
or
adcb
xchg
sub
movsl
testb
mov
adc
loopne
push
xchg
addl
mov
dec
xor
sbb
loop
pop
iret
pop
pop
adc
xor
cmp
push
cmp
aam
jecxz
scas
pop
dec
mov
cmpsb
aas
js
cmpsl
push
push
xlat
outsb
inc
cs
xchg
lret
adc
out
subl
decl
jecxz
fisubl
movsb
or
orb
addr16
lcall
jl
xor
popf
pop
rol
lock
jae
xchg
sub
mov
movsl
cmp
movsb
daa
mov
fwait
mov
pusha
shll
and
inc
addb
dec
divb
std
pushf
mov
and
aas
xlat
ret
fwait
adc
add
inc
fisubrl
shll
mov
push
je
fisttpl
or
movsl
cmc
lods
fidivs
orl
mov
mov
add
aaa
lods
lock
and
add
andb
mov
mov
cmpl
outsl
loope
push
add
call
jp
enter
mov
dec
filds
fsubs
hlt
pop
mov
mov
aam
dec
jb
push
jno
mov
stos
pop
scas
push
out
jnp
mov
sbb
xchg
sub
inc
jg
arpl
push
rclb
mov
fwait
xor
fistpll
or
dec
cmp
push
aam
push
das
push
xor
push
mov
lds
lods
je
inc
push
add
push
pop
or
icebp
mov
pop
fcmovnbe
mov
jnp
pop
sub
dec
lods
and
push
into
push
mov
jae
in
adc
adc
cmpsl
frstor
inc
push
repz
jmp
jecxz
jp
ficomps
inc
mov
mov
xlat
ret
stc
mov
cmp
outsb
push
xor
adc
push
call
mov
jecxz
loope
jg
movsb
imul
cmpsb
imul
and
mov
cmp
imul
xchg
jbe
jbe
test
orb
mov
jae
divl
inc
fmulp
inc
pop
xor
mov
sbb
cmc
sub
repz
cmp
mov
dec
or
out
jne
add
stos
cwtl
and
rolb
gs
xchg
xor
dec
outsb
inc
xor
mov
mov
mov
scas
inc
sub
pop
js
or
testl
or
mov
out
sbb
lods
cmp
ljmp
jb
scas
lcall
or
outsl
rcrb
sub
push
cmpsb
arpl
sub
add
adc
imul
mov
jge
add
das
fildll
fisttps
ret
jmp
fwait
cmpb
fldt
and
jns
lds
out
xchg
sub
xor
and
cwtl
sub
dec
push
out
or
clc
aas
in
adc
in
pushf
repz
cli
out
clc
adc
out
lds
div
repz
das
sbb
test
daa
jne
cmp
fmull
cmp
cmp
push
adc
sarb
pop
or
jbe
push
cmpsb
subb
movsl
or
mov
mov
lcall
sub
mov
mov
ficoml
xor
aam
push
sbb
and
or
inc
outsl
xor
jl
lods
aam
pop
jnp
xchg
fwait
add
push
in
dec
mov
lahf
inc
add
mov
and
or
sub
sbb
call
sub
hlt
jg
push
das
out
pop
jg
mov
stc
sbb
adc
shrl
mov
je
popa
adc
sub
jns
inc
leave
scas
push
and
xor
cmp
daa
and
subl
mov
gs
dec
mov
push
imul
or
push
jp
xor
jns
add
outsl
xor
mov
imul
mov
or
inc
int3
arpl
cmp
stc
xchg
movsb
mov
mov
mov
add
bound
fsubl
lcall
cmpsl
cltd
and
or
int3
pop
outsb
test
or
xlat
stos
xor
ljmp
int
sbb
movsb
jbe
ret
mov
js
dec
sbb
cltd
dec
outsl
bound
sbb
or
jns
pop
clc
sub
rcrl
cmp
hlt
test
mov
pop
lock
movsb
das
sbb
sarb
sahf
dec
xor
jmp
dec
lea
mov
sbb
shlb
add
sbb
pop
jne
xorl
roll
jns
test
inc
stc
dec
xchg
jg
div
aam
sti
xchg
and
or
out
hlt
mov
mov
xlat
ja
fnstenv
aam
ja
push
cld
push
mov
test
cmp
popf
cli
mov
out
xor
out
rolb
or
test
add
notb
xchg
xor
mov
push
mov
xlat
aas
repz
mov
or
add
push
mov
or
dec
hlt
lock
pop
jecxz
insb
adc
dec
frstor
add
jb
pop
add
adc
sbb
pop
sub
dec
jp
repnz
shlb
and
loopne
out
test
add
jo
cltd
pop
inc
xchg
add
cmpsb
xor
inc
fidivl
les
or
adc
data16
inc
rcrb
push
xchg
int3
jno
jl
push
and
sbbl
enter
in
ror
mov
mov
daa
mov
pop
addr16
fs
loope
jb
ficomps
fs
cvtps2pi
inc
push
push
mov
cmpsb
imul
push
pop
and
push
xchg
ss
cwtl
cmc
mov
sbb
pop
jb
mov
push
int3
daa
xor
lods
jae
fwait
repz
adc
cmpsb
data16
test
loope
xchg
les
pop
hlt
mov
inc
stos
fidivrl
daa
insl
cmpsb
outsl
lods
push
push
repz
dec
popa
je
dec
cmpsb
js
cmp
jle
out
imul
cld
addr16
add
pop
cmp
cmp
pop
ror
xchg
outsb
cwtl
cmpsb
sub
fwait
cmp
push
jmp
data16
loope
xchg
jl
out
xor
loopne
jmp
push
lea
mov
jne
rolb
out
push
arpl
lret
repnz
pop
lock
or
stc
adc
incl
sub
mov
mov
add
or
mov
sbb
shr
jmp
push
mov
cmp
fsubrp
repnz
sarl
int
or
or
sarb
lret
pushf
out
push
xchg
jp
add
cld
xchg
int3
adc
orb
addb
push
decb
and
push
add
pop
mov
test
mov
and
pop
fnsave
test
movsl
xchg
das
fnsave
mov
mov
repz
mov
in
insb
add
adc
or
mov
leave
lds
push
popf
int3
cmpsb
scas
inc
push
in
and
add
cmpsb
and
das
js
adc
pop
xchg
lret
sahf
jbe
adc
fisubrl
montmul
cmpsb
inc
sbb
mov
adc
mov
mov
and
fwait
scas
cmp
sbb
and
jae
pop
div
xchg
sbb
lahf
lods
push
movsl
cmp
into
jg
add
mov
inc
jno
fnsave
mov
xor
xchg
add
lret
cmp
xchg
in
pop
mov
orb
mov
push
jle
mov
fnstenv
ss
je
xchg
sub
repz
jae
pop
jbe
add
mov
inc
jns
xchg
inc
lds
jl
jne
mov
xchg
xchg
in
sbb
jmp
mov
mov
shrl
es
insl
cwtl
incl
fwait
jmp
jns
jp
cli
call
push
les
sub
fidivl
push
sti
rcrl
mov
mov
aam
add
sbb
push
pop
daa
mov
cmpl
or
or
es
cltd
imul
shlb
fbstp
scas
fsubrs
jmp
pop
push
cmpsl
mov
cld
js
out
test
lret
sub
add
out
lcall
mov
mov
shll
and
mov
iret
es
jb
mov
leave
pusha
loopne
sahf
xor
testb
sbbb
inc
movsl
jp
sbb
or
fnstenv
jmp
cli
iret
dec
jecxz
xchg
call
fwait
adc
mov
stc
xor
mov
mov
stos
xchg
fstl
pop
lret
fdiv
jg
sti
xlat
sub
jmp
add
mov
enter
sbb
test
cmp
imul
add
je
mov
mov
dec
loop
cmp
iret
sti
xchg
mov
dec
jge
cmp
fidivl
leave
sbbl
or
mov
inc
pushf
xor
stos
xor
sbb
test
jmp
in
push
gs
pop
sbb
and
xor
xchg
pop
ret
fwait
sbbb
pushf
xor
sub
ljmp
xchg
add
xor
loopne
pop
shrl
leave
daa
mov
pop
in
scas
jl
lret
sahf
xor
jne
call
repz
stc
cwtl
adc
jbe
jmp
or
in
dec
pop
stc
xchg
pop
call
lret
cld
test
or
dec
cltd
frstor
in
mov
lds
repz
outsb
push
hlt
pusha
nop
pop
in
testl
lcall
pop
lock
push
out
inc
cmp
fistl
mov
cltd
sbb
aas
ret
shrl
adc
jecxz
arpl
sub
test
xchg
cmc
mov
test
js
ss
loopne
jb
and
test
mov
fwait
pop
pop
xchg
sub
push
jnp
push
jecxz
pop
push
aam
imul
inc
push
call
lods
popa
sub
daa
mov
xor
jne
jns
xchg
pop
and
xor
inc
out
push
cs
aam
push
ss
pop
test
dec
add
sbbl
cmpb
outsb
add
pop
inc
mov
add
clc
or
es
pop
test
call
sahf
sub
call
lods
pop
cs
mov
paddusb
xchg
testb
inc
aas
aaa
mov
xlat
rcrl
lods
push
jge
int3
sbbl
or
mov
je
mov
imul
add
cmp
jne
dec
mov
clc
mov
pop
jg
add
inc
add
jne
pop
dec
ror
xor
loop
pop
ret
cmpb
dec
mov
jo
sbb
lods
inc
mov
lret
aam
push
enter
bound
push
outsl
popa
push
movsl
push
mov
test
rcrl
xchg
mov
pop
xor
sbb
dec
shrl
jl
inc
bound
push
xor
rorl
scas
inc
or
dec
sub
jg
mov
mov
loopne
jg
and
jle
fnstenv
lahf
popa
clc
rclb
inc
lahf
and
xchg
jno
pop
movsb
icebp
xor
jl
out
add
mov
std
sbb
movb
out
mov
das
mov
cmp
adc
leave
mov
popf
jnp
push
out
pushf
and
jmp
mov
and
mov
inc
adc
and
xor
lahf
imul
add
aaa
fisubrl
add
adc
addr16
lods
mov
scas
mov
pop
rorb
or
ljmp
or
pushf
ss
sahf
addr16
loopne
in
pop
gs
dec
adc
ret
pop
pop
sbb
es
fwait
xor
inc
das
fs
fidivl
xchg
mov
lcall
in
arpl
xchg
gs
adc
mov
ja
aad
xor
popa
clc
xchg
and
scas
cmc
xchg
push
add
mov
aad
outsl
fidivs
aaa
jne
outsb
int3
push
mov
rcrb
lret
sbbl
jno
jmp
lds
testb
adc
fsub
jp
imul
arpl
push
cmp
loope
addr16
dec
dec
daa
les
pop
ret
dec
fs
mov
pusha
js
jbe
push
xor
inc
arpl
movb
mov
outsb
cltd
sub
inc
fdivp
arpl
fcmovu
jne
lock
fbstp
jmp
fwait
test
add
and
and
divb
and
popa
fistl
xor
faddl
and
lcall
jg
xchg
inc
inc
lret
bound
dec
loop
adcl
dec
sub
imul
dec
vmovaps
les
mov
cmp
cs
repz
shlb
jae
idivl
jp
xor
sbb
dec
mov
xor
sub
sbb
insl
xchg
jno
out
sbb
nop
push
lods
dec
jb
pusha
jecxz
pusha
ret
and
lcall
lods
pusha
mov
insb
daa
aas
pop
lea
test
pop
adc
push
xchg
adc
jp
mov
insb
pop
cmp
cmp
test
loope
push
xor
pop
xchg
daa
cwtl
das
jp
lds
fbstp
adc
test
negb
mov
push
adc
mov
xor
repnz
xchg
mov
mov
push
lret
aam
fidivs
cmc
adc
dec
out
popa
clc
cld
push
sub
add
fildll
push
movsl
xchg
mov
popl
dec
loopne
es
jg
sbb
enter
lods
fnstsw
nop
push
xlat
or
aam
push
jecxz
call
cmpsl
outsb
jp
xor
jo
in
push
jmp
xchg
mov
ret
fstpl
es
cmp
rcll
pop
data16
xor
into
xchg
push
xlat
outsb
insl
inc
cmp
sub
subl
es
dec
jecxz
mov
stos
dec
ss
pushw
jecxz
mov
stos
pop
push
into
cmpb
cmp
daa
mov
push
addb
ja
or
mov
dec
xor
rclb
pop
hlt
test
or
mov
les
xchg
dec
pop
pop
pushf
jo
add
mov
icebp
mov
adc
sbb
sarl
mov
mov
decl
stos
inc
push
push
out
inc
das
rclb
jbe
cmp
push
popf
pop
xor
pop
cmp
int3
push
pop
cld
xchg
outsb
jno
shlb
les
aam
data16
pop
cmc
je
ret
mov
ret
int3
pop
icebp
shl
int
mov
and
das
in
sbb
cmp
aaa
into
call
or
shrl
lret
fdivl
xchg
sub
iret
mov
jnp
icebp
and
pop
xor
jge
popa
jnp
adc
sbb
and
gs
push
call
adc
adc
xor
std
test
pop
icebp
hlt
inc
xchg
sub
jns
cmpsb
xchg
insl
adc
ljmp
cli
imul
cltd
dec
cmpsl
jg,pt
pop
cmc
jmp
stos
inc
rorb
jns
xorl
movlhps
outsb
dec
xor
mov
fwait
addb
mov
pop
testb
jge
pop
popa
push
out
jns
xor
int3
mov
and
pop
fsubrs
pop
stos
inc
dec
bound
pusha
mov
ret
out
cmc
or
add
mov
jbe
adc
pushf
jnp
mov
cwtl
jo
lea
jne
xchg
cmp
mov
orl
push
xor
mov
gs
mov
jp
fsubrs
or
cwtl
mov
push
mov
nop
ljmp
mov
iret
jecxz
jp
pop
ret
jge
rep
xchg
xlat
test
sti
cmp
mov
jge
cmp
dec
lcall
aad
sti
movsb
fwait
pop
repz
lea
lahf
mov
int3
pop
add
inc
setb
dec
test
inc
daa
pushl
mov
cmp
and
lds
pop
push
push
nop
pusha
add
or
ljmp
dec
dec
icebp
mov
inc
scas
mov
stos
cmp
cltd
inc
push
out
ds
test
push
test
inc
dec
mov
dec
out
in
test
dec
push
in
ds
push
es
lods
mov
dec
cmp
cmp
leave
das
mov
push
insl
inc
xor
por
daa
jne
pop
movsl
lahf
and
in
dec
fwait
xor
insl
je
outsl
and
bound
jbe
enter
jl
push
mov
inc
rorl
pop
out
or
outsb
dec
pop
cltd
jnp
movsl
add
pushf
mov
iret
xlat
inc
pop
inc
lock
and
xchg
inc
movsb
cmp
scas
mov
loopne
ret
pop
adc
ss
je
mov
in
fsubrl
mov
dec
mov
dec
cmp
hlt
repnz
fisubs
sbbb
xchg
jo
push
pop
jae
vmovaps
lods
jg
sub
or
ficoml
mov
add
call
jg
jecxz
cwtl
subl
xchg
dec
jle
and
inc
out
xchg
push
vtestps
dec
jae
cmp
mov
rol
out
inc
loop
sbb
jg
mov
fwait
mov
lahf
dec
hlt
mov
in
mov
xor
mov
mov
insl
sahf
ljmp
cmc
mov
mov
clc
jecxz
ljmp
jnp
out
mov
loop
mov
pop
inc
inc
daa
inc
xchg
fsts
sbb
mov
mov
cmp
cwtl
pop
pop
lods
mov
fbstp
pop
and
es
sub
fdivrp
pop
mov
scas
roll
pushf
pop
mov
shl
pusha
add
jl
cmp
sub
fisubrl
mov
lcall
push
sbb
icebp
mov
call
mov
mov
dec
test
aad
xchg
push
or
mov
imul
es
outsb
repz
mull
icebp
mov
jg
mov
push
jle
push
cmpsb
cmp
dec
data16
loop
aam
ljmp
jno
fisubrl
mov
pop
sbb
gs
adc
cmpsb
imul
and
lcall
push
mov
dec
adc
mov
cmp
adc
push
enter
ret
movsl
sbb
inc
in
xchg
mov
adc
ja
sbb
sub
sbb
mov
mov
cmp
push
mov
sbb
lock
and
xchg
sub
mov
movsb
aas
les
xchg
or
sbb
adc
js
sbb
xchg
dec
out
dec
in
int3
imul
and
icebp
cs
push
rcrl
cmp
mov
dec
std
cmp
repz
and
rol
pop
add
pop
inc
and
repnz
aas
dec
lea
sub
hlt
sbb
scas
add
cmp
jmp
push
and
mov
movsl
push
jmp
or
loop
popf
fsubrs
nop
xor
arpl
shl
jnp
xor
xchg
cmp
int3
lret
xorb
push
jmp
cli
push
inc
stos
inc
jb
ja
push
je
and
movsb
in
mov
or
jg
fwait
mov
dec
push
add
and
shrl
insb
push
pop
std
jo
dec
xor
dec
out
imul
pushf
pop
cs
icebp
inc
in
in
cmpsb
aam
jno
dec
outsb
push
cli
rcrb
aas
popl
stc
push
repnz
sub
rcrl
push
js
bound
sbb
ss
in
push
push
call
cmp
and
call
pop
ret
cmpsb
lea
pop
outsb
aad
ret
jb
sub
movsl
inc
mov
fs
fbld
cmp
out
ret
mov
xor
and
mov
mov
outsb
mov
bound
or
icebp
jno
mov
dec
cmpsb
push
or
dec
aaa
add
ljmp
insl
aad
mov
push
push
push
ljmp
cwtl
loopne
lret
push
scas
fdiv
push
dec
pop
in
xchg
xchg
pop
repnz
add
pop
lock
js
pop
pop
xor
cltd
adc
xchg
mov
das
ret
out
in
xlat
cmp
mov
jae
sahf
aaa
movsl
pop
mov
xchg
mov
mov
sti
xchg
push
jae
xchg
lods
sbb
push
jg
lret
mov
mov
jp
inc
bound
mov
mov
or
dec
mov
andl
and
lahf
sub
in
or
and
mov
pop
int3
test
fldenv
mov
pop
filds
aam
mov
addr16
push
and
lret
xor
shrb
inc
out
jae
push
jo
jg
mov
xor
pop
in
mov
and
dec
clc
imul
pop
addr16
int
inc
in
adc
sbb
mov
faddl
cmp
mov
fsubl
ficomps
or
std
mov
cwtl
les
pop
icebp
pop
out
jle
jae
mov
push
dec
inc
faddl
insb
fsubrp
popf
in
cmp
xchg
scas
inc
scas
std
jecxz
out
add
push
les
mov
addr16
out
push
dec
or
mov
movb
xorb
iret
shrb
add
outsb
in
scas
inc
shlb
psrad
add
cmpsb
les
mov
xchg
dec
mov
pop
or
xlat
cmc
cli
cmp
addb
clc
or
add
data16
sub
and
shrl
mov
movsl
inc
test
mov
stc
repnz
inc
in
cmpsl
mov
aaa
rorl
mov
lea
out
fsts
sub
and
mov
sbb
lcall
push
scas
pop
ret
ja
test
movb
shrb
or
pusha
mov
and
mov
jge
jge
daa
push
test
xchg
cmc
mov
stos
mov
adc
andb
sahf
adc
enter
mov
lock
mulb
rcrb
daa
mov
popa
push
and
lds
bound
test
jo
jge
hlt
pop
sbb
insl
mov
or
in
mov
mov
xchg
push
push
ljmp
cli
fmulp
fistpl
pop
xchg
xchg
aaa
mov
out
xchg
int3
test
in
push
jns
pushf
sbb
lea
pop
mov
in
in
sahf
sbb
mov
inc
jmp
mov
push
sub
mov
xor
cmp
push
mov
sbb
icebp
movups
and
dec
cltd
call
rcrl
or
sbb
mov
test
lods
pop
or
dec
int3
adc
adc
fs
sti
adc
mov
je
inc
clc
cmp
pop
arpl
shll
add
dec
inc
test
push
or
inc
lods
xchg
repz
xchg
mov
jo
int
add
cmc
jle
adc
push
sub
imul
out
and
sub
lock
outsb
mov
fdiv
scas
mov
mov
jge
fstpl
aaa
dec
sub
imul
rcl
sbb
cwtl
sub
cltd
inc
xlat
xchg
imulb
add
jb
imul
dec
aaa
cli
adc
push
sbb
out
lds
mov
jns
leave
fprem
jle
jo
xor
add
movsb
or
cmc
lods
push
je
jge
push
add
nop
push
adc
cmp
xor
repnz
arpl
mull
sub
jg
mov
ret
mov
int
mov
in
cmpsl
sahf
mov
movb
in
mov
dec
and
or
mov
adc
or
cmpsb
lock
sub
jp
dec
pop
cwtl
push
shrl
lahf
int3
cmp
std
mov
loop
call
and
call
stos
inc
cmpsl
shll
push
clc
or
dec
inc
shr
pop
iret
out
jae
jne
scas
fsubl
mov
sarl
xchg
rorb
adcl
push
sub
stos
inc
xchg
out
lea
notl
xlat
adc
inc
clc
cltd
jo
xchg
repnz
jmp
inc
mov
adc
push
mov
icebp
push
mov
test
shl
je
push
std
xchg
lock
mov
cmp
push
add
xchg
sub
iret
jmp
inc
inc
mov
js
mov
lret
aaa
or
rcrl
add
daa
push
ljmp
jb
sub
xchg
push
cmp
out
xchg
pop
ret
rorl
ss
cwtl
jge
nop
sub
sub
ret
and
mov
iret
fwait
aas
test
add
sbb
adc
jg
xor
in
clc
data16
sti
xor
and
adc
in
adc
xchg
decb
dec
xchg
fucomi
or
pop
std
repz
fnstcw
mov
xchg
xorl
iret
arpl
sbb
movsl
pushf
inc
mov
out
and
js
sbb
shrl
dec
repz
outsb
test
pop
push
in
stc
shll
ja
mov
xchg
xchg
add
mov
xchg
inc
jb
inc
jecxz
ja
jne
xorb
xlat
dec
adc
cli
mov
sbb
jo
stc
adc
or
sbb
and
push
cmp
mov
cmp
mov
mov
sub
sbb
pop
xor
ss
into
repnz
ss
push
and
es
sbb
leave
sub
cmp
sub
rcrl
add
inc
stos
jmp
sbb
cli
cmpsl
cmpsb
fwait
pop
sub
sub
xchg
lea
hlt
xchg
notb
icebp
add
sub
dec
mov
es
adc
xor
shrb
jno
gs
mov
mov
fidivs
nop
out
mov
mov
xchg
lods
dec
shrb
stc
push
pop
mov
cli
lock
stos
jnp
stc
lret
fidivl
cwtl
and
xchg
xchg
clc
aad
jmp
jecxz
cmp
xor
cld
pop
pop
scas
pop
pop
push
add
mov
loopne
xchg
adc
popf
sarb
loopne
notb
jne
mov
jge
pop
mov
fwait
xor
push
test
cmp
dec
imul
call
jl
lret
sub
shll
aad
jbe
xchg
addr16
sbb
adc
ss
je
jle
std
cmp
loope
out
dec
inc
sub
mov
inc
fwait
sbb
xlat
aad
and
jg
lahf
mov
je
dec
shlb
fs
std
in
test
mov
mov
dec
or
faddp
in
cmp
ss
pushf
jo
cmpsl
in
sahf
lds
pop
das
setl
inc
mov
in
inc
jbe
mov
jecxz
stos
data16
mov
scas
xchg
sub
testb
scas
cmp
aam
push
cmc
inc
int3
sub
repnz
or
movsl
jp
mov
movsl
icebp
cmp
cmp
xor
xor
mov
pop
push
mov
lds
leave
xchg
jae
push
movsb
inc
push
popf
mov
xchg
outsl
ret
push
ret
bound
push
int3
xor
fldenv
dec
pop
repz
add
xchg
arpl
sub
or
popa
jg
fildl
shrl
movsl
out
sti
cmp
jno
inc
popf
leave
dec
fstps
inc
adc
stos
imul
push
insl
andb
pop
sarl
inc
je
loop
fmull
xchg
aam
push
add
jo
or
jl
xor
dec
cmp
and
fidivs
icebp
xlat
sub
pop
cld
icebp
nopl
repz
mov
add
jnp
rcll
and
jno
leave
adcb
int
adc
into
xchg
pushf
pop
leave
out
xor
push
loop
sub
add
ffreep
lea
in
mov
iret
pop
cwtl
sub
pushf
mov
inc
subl
add
mov
inc
cmp
xchg
mov
jp
movsl
icebp
cmp
cltd
xchg
push
repnz
lahf
ss
out
inc
cmc
test
fwait
jb
and
stc
adc
hlt
gs
and
pop
push
push
insl
mov
inc
leave
push
push
mov
xor
pop
fsubl
data16
test
lret
int
addb
outsl
addl
into
iretw
push
inc
pop
adc
in
mov
jnp
xor
dec
call
cs
shl
dec
xchg
imul
or
mov
lea
les
sub
jg
ret
jle
and
test
push
mov
cwtl
xorl
bound
adc
and
cltd
xor
cli
xor
add
and
push
or
sbb
pop
hlt
adc
xchg
scas
fst
leave
xlat
outsb
cli
dec
jmp
add
fwait
sbb
inc
jmp
call
xor
xor
or
cmpsb
sbb
scas
or
or
subl
push
sbb
xor
cmp
jl
les
or
jo
in
mov
or
push
imul
outsl
cwtl
data16
inc
lds
or
test
cmp
ja
mov
movzbl
mov
arpl
in
insl
xor
mov
dec
lcall
inc
fcoml
out
clc
and
arpl
cmp
sub
ret
iret
jnp
mov
gs
cmpsb
xchg
cmp
adc
and
cld
or
cmpsl
xor
adc
push
add
add
test
sbb
insl
xor
jb
mov
sbb
mov
cmp
sarb
imul
es
mov
inc
stos
jae
or
imul
fsts
adc
jnp
stos
inc
incl
or
sub
movsl
adc
cmp
fidivl
lcall
inc
and
jmp
loopne
movsb
inc
stos
addr16
in
sub
and
xchg
sub
dec
rcrl
sub
mov
cmp
insb
inc
fs
enter
sbb
adcl
test
jo
dec
lock
mov
xchg
xor
sub
pusha
jl
inc
icebp
push
lods
mov
inc
aas
dec
mov
push
ss
lds
aam
ljmp
inc
stos
loopne
xor
into
lea
sub
pop
imul
rol
pop
fwait
lret
mov
into
and
dec
dec
pop
lcall
sub
pushf
or
push
out
fstpt
insb
and
sub
lret
jmp
xchg
pop
sub
inc
pop
outsl
shlb
sub
dec
hlt
jo
xchg
sbb
xchg
cmp
ret
cmc
in
adc
sbb
sub
in
or
pop
mov
jmp
sub
imul
or
jmp
sub
ds
pop
mov
push
shlb
mov
int
arpl
mov
popw
clc
leave
inc
add
xor
cmp
jno
out
push
mov
or
outsb
pop
movsl
jl
sti
mov
adc
pushf
jbe
jmp
xchg
lcall
mov
sbb
fmul
and
jge
mov
xchg
xchg
adc
xlat
mov
mov
xor
xor
clc
arpl
and
push
cmp
mov
mov
ja
decl
out
sbb
xlat
jecxz
xor
cmp
pop
lahf
pushf
xor
mov
js
jl
push
leave
dec
js
fwait
adc
call
jne
sbb
cmpsl
xchg
jmp
test
mov
pop
shll
push
adc
cmp
repnz
push
cmpsl
sbb
cmc
and
pop
cmpsl
xchg
mov
out
sub
cmp
rcrb
scas
mov
icebp
shll
movsl
jecxz
xlat
and
or
adc
cli
or
jl
pop
lcall
sub
jg
jno
ss
and
int3
add
jbe
scas
daa
sbb
push
jmp
mov
xchg
roll
add
rcl
fsubs
push
repnz
jno
call
fcmove
jo
jb
lcall
shrb
shll
pop
in
adcb
xchg
rcrl
ja
outsl
enter
sar
outsl
fmulp
ds
xor
icebp
rolb
push
push
dec
pop
adc
pop
movsb
push
mov
sti
fisubs
sbb
cmpsb
popa
xor
stos
shrb
xlat
add
fwait
test
pop
shr
lahf
cmp
sbb
adc
sub
xchg
xor
push
jns
push
mov
push
mov
sbb
pop
and
sbb
fidivrs
jmp
dec
testb
mov
insl
sbb
mov
repz
fwait
test
popf
inc
mov
jmp
vprotw
sbb
sub
pushl
call
push
addl
je
sbb
into
jle
arpl
lret
push
andl
je
push
jecxz
cmp
les
arpl
or
push
jle
pop
loop
shrl
lcall
jecxz
cmp
ds
inc
add
mov
adc
pop
mov
xchg
push
pop
aad
addl
mov
int3
cmpb
movsb
stos
cs
test
push
mov
xchg
stos
inc
jp
pusha
mov
cmpsl
call
dec
stos
fdivl
or
adc
sti
mov
ds
mov
sub
cli
mov
arpl
push
leave
mov
in
in
insb
jp
scas
mov
loopne
fs
push
pop
bound
mov
mov
add
pextrw
test
cld
push
xchg
cwtl
js
ret
cmp
aad
pop
notb
mov
loop
jbe
adc
sbb
mov
pushf
mov
shl
mov
xor
rol
pop
enter
fsubp
aaa
xor
dec
rolb
mov
mov
mov
mov
dec
loopne
test
add
sub
cmpsl
jge,pt
out
sub
rol
adcl
push
push
mov
fwait
jmp
inc
dec
push
lods
push
subb
pop
not
aaa
add
andl
sahf
sbb
push
mov
sub
xchg
sub
nop
sub
sub
jge
std
and
mov
cwtl
hlt
leave
stos
lret
mov
cli
sbb
and
test
je
movsb
dec
mov
int3
cmp
lods
rclb
cmc
jecxz
daa
xor
lea
js
movsb
test
iret
or
push
call
xchg
inc
sti
loope
or
testb
pop
test
lret
in
cmc
or
cmp
pop
mov
dec
adc
ds
or
shrl
mov
negb
push
jp
xchg
cmp
out
jbe
data16
in
sbb
imul
outsl
push
mov
insl
adc
mov
fbstp
sbb
inc
or
push
fcmove
adc
out
dec
xchg
pop
push
out
inc
fxch
sahf
fdivrl
scas
sub
pop
icebp
lea
jns
jle
cmp
and
addr16
leave
mov
lds
mov
rcrl
jmp
shll
fdivs
movl
jnp
xchg
dec
jmp
adc
sbb
lods
lahf
mov
and
xor
outsb
andl
mov
pop
test
push
push
or
testb
int
xor
fmull
dec
push
lds
lret
lret
ja
pushf
mov
push
das
pop
xchg
out
rolb
divl
fisttpll
lahf
loopne
cmp
mov
mov
mov
hlt
inc
es
mov
faddp
lds
fisttpl
jmp
cmpb
mov
adc
lret
sbb
les
rol
std
gs
fwait
insl
aam
test
push
push
jno
dec
in
mov
cmc
mov
mov
jne
jo
dec
jge
jl
nop
jns
shll
syscall
sbb
lods
jo
xor
aas
fmuls
lcall
and
push
pop
loop
call
or
or
jns
jmp
lea
mov
mov
addr16
fwait
inc
sub
inc
jecxz
or
inc
pop
sub
in
or
add
shlb
xor
mov
sub
stc
mov
fwait
sub
cli
push
aad
cmp
btc
sbb
pop
lds
sbb
pop
xor
mov
push
insl
dec
xchg
pop
mov
nop
cwtl
sub
cmp
daa
daa
pop
pop
xchg
jb
test
test
or
or
xchg
stos
mov
stc
movsb
decl
sbb
adc
xchg
sarl
add
or
sub
clc
push
or
cli
js
dec
stos
pop
add
mov
andb
inc
loopne
out
add
xchg
xor
popf
aad
or
out
xor
js
lret
jle
add
nop
in
clc
lods
stc
test
std
dec
dec
xor
add
dec
adc
or
imul
sub
mov
repnz
xchg
add
popf
mov
jg
fmuls
mov
shlb
cmpsb
aam
sub
xchg
mov
xor
imul
pusha
sbb
mov
es
hlt
mov
push
adc
push
mov
int3
fildll
push
lret
stc
and
lods
ljmp
and
jne
movsl
pop
rorb
xor
adc
sbbl
shrl
xchg
adc
adc
push
mov
lahf
inc
dec
addl
aam
stc
fstpt
mov
push
inc
scas
jns
jle
jb
shlb
xchg
mov
fnstenv
lods
les
pusha
xchg
ror
or
divb
fbstp
add
es
inc
test
out
popa
and
test
ficoms
add
add
pop
testl
insl
add
mov
test
and
jns
sbb
push
sbb
ficomps
push
push
cmp
mov
push
repz
inc
mov
adc
pop
inc
add
mov
out
pop
sub
out
push
shll
cmp
insb
xor
scas
nop
rcrl
loop
adcl
sub
adcb
mov
adc
mov
call
pop
int
cli
ljmp
and
test
mov
lea
sub
lea
andl
or
add
jnp
fisttpl
sahf
sub
sub
jb
jle
scas
cmp
pop
mov
sbb
enter
or
jecxz
inc
adc
jmp
adc
cli
mov
mov
push
mov
add
dec
xor
add
inc
fbld
jecxz
fiadds
jo
mov
adc
incl
mov
dec
popl
push
mov
sti
int
outsb
mov
sub
lods
rcrl
int
imulb
mov
int3
clc
inc
jecxz
inc
imul
mov
rcll
mov
mov
cmp
out
xor
cmp
sub
stos
pop
in
sbbb
inc
loop
jns
and
or
leave
cltd
mov
push
notb
cmpsl
xor
iret
cmp
pop
push
pop
pop
or
and
popf
inc
lret
pushf
fstpt
push
sahf
pop
mov
pushf
cli
arpl
xchg
dec
add
mov
pop
fdivrs
in
adc
rcrl
pop
dec
dec
pop
fbstp
mov
add
cmp
scas
push
mov
js
mov
popa
pop
sub
pop
xchg
or
sub
fnsave
imul
jbe
in
loopne
fbstp
or
jns
clc
jmp
xchg
add
int3
push
inc
cmp
sub
pop
mov
fildll
jge
mov
jbe
xor
cmp
out
in
pop
test
jl
mov
mov
dec
aam
push
adcl
cltd
lret
cmp
lcall
cmp
jo
bound
cmp
icebp
mov
dec
cmp
jecxz
lds
loopne
adc
scas
cmc
sub
xchg
sub
push
mov
jg
pop
ss
add
nop
push
jl
mov
insb
in
xchg
sbb
jo
xchg
pop
mov
popf
xchg
lods
fsub
sbb
scas
lcall
or
mov
push
or
mov
in
movsb
cmp
cmp
aam
cltd
sub
jae
in
mov
inc
push
popa
fdivrl
sbb
sbb
jl
adc
jno
add
mov
cmpsl
js
pop
and
dec
push
and
leave
ja
das
mov
and
test
xchg
popa
fs
es
push
jle
negl
int
sub
jo
push
inc
sahf
mov
adcb
and
pushl
or
adc
mov
inc
lahf
mov
addr16
inc
jg
sbb
cmpsl
pop
int
mov
mov
adc
sub
push
jb
pusha
daa
clc
sbb
add
adc
cld
lods
aas
fistps
pop
add
jmp
fiaddl
clc
fsubrs
xorl
popa
movsb
movsl
into
mov
fs
in
push
cwtl
es
mov
loopne
notb
stos
inc
out
jb
sbb
dec
lahf
xor
mov
clc
mov
stos
inc
adc
enter
sub
lock
call
cmp
pop
out
jo
movsb
std
stc
inc
inc
cmpsl
jb
add
push
xchg
and
adcl
adc
mov
popf
icebp
cld
fstpt
push
aaa
scas
fnsave
jle
outsb
jle
mov
iret
pushf
xor
jmp
sti
adc
ds
cltd
dec
inc
fldl
sbb
outsl
subb
cmpsl
xor
fsts
or
lock
rcrl
add
push
dec
filds
mov
push
jmp
cmp
ds
pop
mov
xchg
xchg
repz
aad
test
inc
test
icebp
xchg
stc
adc
adc
pop
pusha
mov
rolb
lret
xlat
adc
add
jmp
lahf
add
jbe
test
rcl
pop
or
iret
loop
xor
int3
out
cltd
test
add
cmpsl
in
lds
adcl
leave
fdivs
shll
test
lret
arpl
cmp
pop
jns
or
pop
add
adc
call
cmp
jno
mov
fs
jb
cmp
cwtl
inc
out
leave
test
push
push
ljmp
aaa
rcrb
dec
add
pop
adcl
in
dec
pop
aad
clc
mov
rcr
inc
add
bound
test
movsl
rcr
jae
sti
fisubl
into
cli
pushf
lret
scas
stos
out
xchg
arpl
adc
pop
xchg
jp
fsub
stos
mov
in
add
push
jl
inc
cld
outsl
ss
out
push
pop
add
jbe
out
cli
xchg
push
mov
dec
mov
aas
or
stc
clc
push
mov
jecxz
jmp
jp
or
xchg
jae
add
int
pop
es
aas
mov
mov
fisubs
xor
mov
in
jge
pop
shll
mov
int3
imul
sub
cmp
xchg
pop
adc
cmp
xor
push
sahf
cmpl
ret
push
into
or
fildl
sub
mov
iret
push
or
adc
xlat
inc
inc
jne
ds
hlt
push
mov
inc
sti
mov
or
int
aad
mov
shlb
outsl
rcll
loopne
xchg
push
jb
in
mov
jo
sbbl
xor
fwait
adc
imul
mov
add
aam
and
stos
mov
sahf
arpl
sarb
sbb
cmp
aam
fbld
fists
mov
incb
das
test
dec
insb
leave
dec
shll
push
movsb
out
aas
in
in
adc
out
leave
fwait
xor
pop
dec
dec
mov
mov
addr16
testb
daa
mov
pop
hlt
or
ds
cmp
pop
or
sub
test
xor
mov
mov
repz
iret
pop
shll
in
xchg
insb
jecxz
inc
dec
and
je
dec
cmpb
add
xchg
sub
outsb
push
pushf
push
sub
daa
aad
aas
invd
repz
sbb
cmp
call
popa
insl
push
xchg
push
inc
lret
mov
jae
mov
jg
lret
or
shll
lret
cmp
stos
sub
psllq
sarb
out
jge
mov
adc
adcb
and
pop
fldz
adc
mov
das
pushl
jno
jbe
sub
hlt
xchg
ret
mov
lods
jns
mov
pusha
adc
xchg
jle
mov
stc
pop
inc
dec
mov
push
dec
adc
mov
pushf
arpl
xor
and
cmpl
cmp
lahf
and
mov
arpl
sub
out
shrb
push
xchg
xchg
xor
cmp
xor
sbb
adc
test
test
mov
or
lret
mov
xor
push
push
nop
test
jbe
mov
or
out
adc
inc
cmp
mov
and
aaa
cltd
shlb
test
add
sbb
arpl
clc
pusha
add
mov
push
pusha
xlat
bound
repz
lcall
test
push
ds
add
mov
jb
dec
insb
add
adc
xchg
popa
mov
inc
call
stos
incb
sub
lret
loope
gs
mov
and
push
adc
dec
clc
adc
pop
jmp
jnp
pop
mov
mov
sub
into
jle
xlat
repz
arpl
sbb
ds
rcrl
mov
xchg
xor
add
dec
inc
in
xor
push
arpl
cmpsl
sbb
mov
adc
sbb
dec
jnp
and
mov
adc
sbb
sahf
pop
movsl
sbb
lds
jl
dec
scas
shlb
jb
dec
call
or
dec
into
je
call
popa
test
popa
dec
inc
imul
jmp
add
pop
outsb
aaa
ss
cmc
pop
dec
data16
mov
addl
sbb
imul
dec
addr16
sti
xchg
xchg
xor
adc
mov
and
je
rorl
add
outsl
cli
andl
mov
dec
adc
int
sub
leave
lods
loop
ret
dec
inc
out
ds
sub
xor
lea
jl
pop
out
cmpb
lds
fists
call
leave
pusha
mov
mov
ds
push
add
adc
jne
insb
cmpsl
pusha
int
icebp
movsl
or
and
cmpsb
or
shll
mov
dec
jmp
adc
lahf
cmp
jmp
je
mov
mov
jno
lret
push
out
jae
mov
clc
adc
ss
sub
cmc
in
add
cmp
push
test
aaa
add
sub
pushf
xor
mov
mov
imul
mov
insl
mov
insl
pop
iret
inc
dec
jbe
xor
cmp
repz
cmp
jns
rcrl
leave
mov
stos
das
shrb
inc
ljmp
jp
jmp
imul
xchg
insb
rclb
or
xchg
sub
jge
ret
outsl
jnp
and
lds
xor
sub
jecxz
pushf
sbb
dec
mov
adc
out
push
jae
pop
dec
loop
fdivrs
xor
fistpll
ror
pushl
das
out
pop
mov
push
push
mov
inc
inc
pusha
jb
aas
dec
scas
fwait
lods
inc
iret
pop
dec
fmull
xor
xor
mov
orl
shlb
or
push
dec
ffree
add
pushf
out
rclb
stc
nop
xor
xchg
call
mov
jg
xor
sbbb
and
js
out
test
xor
inc
lds
xchg
call
inc
ss
ret
inc
jg
cs
data16
cwtl
sub
mov
out
fwait
adc
pop
outsb
fnsave
xchg
in
xor
cmpsl
aas
fisttps
pushf
inc
inc
xor
jno
in
adc
sahf
gs
dec
mov
insb
lock
jnp
cmp
pushf
adc
int
pop
in
mov
push
inc
cli
pop
inc
cmc
ja
sar
pop
add
subl
xchg
rolb
dec
gs
push
or
add
sarl
lods
cmp
adc
adc
dec
xchg
lds
scas
testb
jge
push
out
xchg
sub
sahf
fldcw
jno
lock
mov
and
out
push
xor
xchg
cmp
out
mov
jne
clc
das
mov
pop
cmp
arpl
and
out
dec
push
out
inc
add
or
xchg
dec
gs
inc
ja
and
xchg
xchg
adcl
lcall
and
push
add
lods
jmp
andb
fistpl
imul
int3
push
ret
dec
dec
mov
in
sbb
cwtl
mov
pusha
push
xor
imul
mov
fmul
dec
mov
imul
mov
push
std
or
ss
int3
dec
jmp
iret
xchg
xlat
stos
push
sub
mov
inc
in
sub
testl
mov
pushl
fs
push
pop
cmp
fidivl
sar
bound
cmp
fistps
cmp
xchg
outsb
inc
enter
xchg
sbb
xor
xlat
jp
gs
in
lcall
into
xor
xor
jbe
sbb
insl
and
pop
insb
mov
insl
in
xchg
mov
add
call
aaa
sbb
in
jb
outsb
stos
cmpsb
mov
add
mov
jmp
imul
or
xor
mov
mov
push
cli
adc
jne
fiadds
pop
mov
ja
lret
loope
pop
inc
mov
fidivs
test
gs
into
fcompl
xor
ss
aaa
mov
mov
outsb
filds
cmp
clc
rcl
addr16
ret
pop
push
dec
insl
mov
shll
ds
push
dec
icebp
mov
cmc
dec
mov
inc
psubd
and
sbb
cmp
push
ds
jge
and
rcll
outsb
ja
xor
mov
out
in
into
repnz
jo
clc
or
mov
sbb
test
push
jne
dec
add
lcall
inc
xor
int3
mov
fbstp
lret
cmc
xchg
sub
arpl
aam
mov
icebp
jp
ds
cmp
dec
scas
hlt
out
stos
test
mov
fsubr
push
or
adc
add
cmp
aad
jmp
sub
or
xchg
dec
and
xchg
cmc
xor
fdiv
loopne
jnp
lahf
jmp
ds
addb
lods
iret
mov
out
les
inc
pop
dec
dec
mov
add
pop
cmc
scas
ret
movsl
inc
inc
jg
mov
jbe
and
mov
pop
cmp
ds
lahf
loopne
rclb
jle
pop
je
jnp
sbb
pop
ffreep
fcoml
jg
and
cmpsl
mov
dec
out
lock
mov
inc
xor
sub
jno
pop
xchg
pop
xchg
add
mov
faddl
orl
xchg
mov
push
cmpsb
divb
add
inc
sbb
call
insl
push
outsl
andb
or
and
lock
arpl
out
inc
sbb
jg
jo
fisubrl
out
inc
sub
clc
inc
negl
dec
mov
pop
sar
dec
mov
data16
loope
leave
mov
pusha
cli
popa
iret
fldt
aad
or
stc
sbb
sub
sbb
fistpl
out
out
or
dec
loope
sub
cs
ds
jb
aaa
mov
push
insl
int
push
push
adc
pop
jns
in
mov
sub
mov
or
popf
andb
push
imul
xchg
and
imul
in
addr16
pop
mov
test
add
xchg
in
mov
out
mov
jb
insl
mov
dec
xor
and
push
test
adc
pop
call
pushf
inc
loop
hlt
mov
push
repz
mov
fidivl
mov
stc
shl
push
push
ja
jge
scas
bound
mov
fnsave
jge
or
dec
filds
jp
jns
cmpsl
sub
jmp
out
sti
and
pushf
lret
mov
cmpb
fcmove
jg
cmpxchg
popa
int3
add
mov
fdivl
rorb
ljmp
inc
div
pop
hlt
sub
jnp
hlt
js
mov
jmp
loopne
dec
push
xor
sub
loope
out
dec
push
mov
mov
imul
pop
pusha
es
imul
cmpsl
lock
aam
push
push
xchg
jne
xor
hlt
xor
nop
jno
mov
std
fdivrs
mov
out
xor
in
push
aad
sub
lcall
and
adc
mov
hlt
shlb
push
mov
pop
mov
and
sarb
cmc
imul
push
les
roll
aas
fcmove
pop
loopne
pop
cmp
shl
cmp
mov
ret
lcall
adc
dec
addr16
mov
ret
mov
pop
xor
repnz
cmc
insl
loop
xchg
and
outsl
add
cld
mov
xchg
mov
fsubs
adc
xorb
movsb
mov
sbb
sub
pop
sub
adc
cmp
inc
cltd
repnz
testl
and
mov
mov
jle
das
adc
inc
mov
test
int3
mov
pop
mov
jecxz
fdivl
repz
sbb
fcmovb
push
adc
in
icebp
jmp
shll
and
arpl
jae
and
mov
pop
ret
push
aaa
sti
mov
out
jl
ds
pop
sbb
or
clc
subb
test
dec
xchg
inc
inc
outsb
push
adc
inc
ja
js
xor
mov
push
cmp
xchg
rcrb
pushf
mov
repnz
cmp
gs
pop
cmp
int3
outsb
mov
insb
mov
fnstenv
push
sub
int3
arpl
out
inc
sub
pusha
sub
xlat
leave
fnstenv
push
mov
fsts
insl
faddl
out
jg
outsb
lea
outsb
adc
scas
daa
mov
mov
lret
mov
pusha
adc
cmp
es
gs
fsubrs
fs
inc
and
stos
lods
ds
fisttps
movsb
sub
icebp
sbb
and
mov
add
in
js
sub
dec
pop
add
fmull
into
push
popa
arpl
xchg
jbe
xor
cmp
pop
daa
add
lcall
loopne
xchg
sub
and
rorl
xchg
pop
leave
ret
adc
scas
and
shl
dec
loop
hlt
adc
aad
out
lret
les
insb
cwtl
xchg
or
and
pop
nop
mov
inc
xor
daa
inc
fcompl
mov
cli
ja
jle
sti
mov
mov
and
cmc
pop
or
sub
aad
dec
pop
rclb
fisubl
sahf
xor
dec
push
mov
pop
jnp
inc
popa
sub
and
lods
ljmp
xor
adc
sti
mov
adc
xor
fadds
imul
outsl
pop
adc
xchg
clc
fisubl
cmovg
out
xchg
sbb
adc
pusha
pop
push
pop
xor
es
mov
pop
adc
jno
lods
push
inc
inc
jae
aaa
ja
xchg
stos
sbb
jg
jbe
push
lds
add
dec
lret
sub
stc
push
jg
jbe
mov
push
push
mov
jnp
and
mov
fwait
jle
add
mov
sbb
push
and
fidivs
das
add
and
mov
inc
sbb
pop
add
leave
mov
xor
insl
sahf
xor
fldenv
stos
push
test
or
mov
sub
inc
fnsave
int3
dec
xor
mov
testl
dec
cmpsb
dec
loop
mov
mov
pusha
in
imul
add
adc
pop
bound
out
bound
add
fnstenv
mov
fwait
insl
xchg
test
int3
cli
and
mov
dec
cs
mov
ret
cltd
iret
cltd
das
and
push
mov
lds
mov
fnstsw
movsl
jne
leave
mov
sub
xor
adc
in
fildll
inc
sub
ljmp
nop
lcall
test
test
mov
addr16
addl
imul
pushf
xchg
cwtl
fstpt
mov
push
pushf
cli
jns
xorl
or
xchg
xor
in
mov
int
lcall
jecxz
aam
cmp
xor
scas
jb
adc
adc
cli
imul
xor
mov
into
xchg
mov
mov
out
push
out
add
and
sti
shrb
inc
test
pop
mov
in
and
fs
push
sbb
cmp
xchg
sub
bound
inc
enter
repnz
inc
out
sarb
mov
dec
xchg
sub
mov
hlt
in
xchg
test
cmpsl
div
into
cmc
loopne
sub
into
fdivl
or
jg
rcrl
mov
mov
cmpl
ljmp
sbbl
sarb
and
or
sub
movsb
jle
inc
int3
out
sti
push
nop
sub
es
hlt
xchg
imul
notb
les
mov
mov
adc
testb
fistps
sub
fldenv
lret
xlat
xchg
pop
lds
mov
int
push
cltd
push
or
inc
mov
subb
das
xchg
sbb
sub
mov
das
cld
inc
cli
or
dec
aaa
adc
push
mov
and
pop
lea
mov
int3
test
add
mov
icebp
mov
int
inc
rorl
xor
inc
bound
ret
jge
es
adc
lret
xor
cli
xchg
jge
mov
cmp
lret
xlat
cli
nop
and
mov
call
or
cwtl
das
aad
repz
cmp
xor
push
orl
icebp
outsl
loope,pt
xchg
sti
stos
mov
int
jle
pop
sub
mov
mov
add
push
jmp
mov
cmc
rorl
pop
xor
sub
xor
adc
dec
push
call
out
nop
fbstp
ja
call
or
pop
popl
and
loope
xlat
stc
in
lds
xor
jecxz
loope
or
push
cmp
xchg
scas
cmp
sub
cmpsl
in
loope
pushf
leave
popa
stos
cli
mov
xor
sub
mov
pextrw
mov
cwtl
nop
out
add
aad
dec
sbb
aaa
adc
bound
imul
or
arpl
push
stc
cltd
stos
ljmp
rclb
imul
xchg
rorb
dec
pop
sbb
jae
stc
mov
jb
inc
leave
jl
nop
mov
sbb
push
imul
inc
cmp
add
in
ja
lods
mov
lahf
cmp
mov
jbe
cmc
cmpsl
out
dec
rorb
stos
js
dec
pushf
pop
xchg
dec
aaa
push
adc
aad
xchg
mov
jg
into
xlat
jl
popa
das
dec
loopne
push
popf
frstor
addr16
mov
test
or
pop
pop
jmp
jno
icebp
fucomi
and
repz
or
hlt
pop
jno
jp
mov
cmpsl
lret
dec
jmp
dec
inc
callw
into
pusha
cmp
pop
add
mov
scas
or
sub
sub
nop
lock
cmpsb
stos
jg
mov
adc
inc
fs
pop
dec
mov
std
roll
and
add
into
push
add
lret
stos
out
dec
fidivl
sub
lock
int
imul
add
and
scas
sub
add
or
sahf
mov
mov
mov
jge
mov
cld
xchg
nop
aas
in
xchg
mov
lahf
mov
push
jno
xlat
data16
lods
add
sahf
divb
js
xor
lret
cwtl
daa
cmc
mov
stc
xor
into
es
and
sbb
shrl
xorb
adc
push
stos
stos
sbb
fstpl
fsubrl
mov
js
inc
pusha
stos
lret
pop
shll
outsb
jb
out
js
xchg
fnstenv
sub
jmp
test
jno
gs
popf
rcll
pusha
xchg
push
mov
repz
pop
out
clc
add
sub
sbb
adc
mov
add
jmp
test
pop
fnclex
jnp
inc
pop
loop
jns
cwtl
mov
rclb
scas
jno
push
cs
fstpl
jne
cmpsb
add
fwait
sub
pop
jno
cmc
out
add
insl
call
sbb
fidivrs
mov
inc
mov
mov
push
mov
addl
call
test
icebp
push
sbb
push
in
mov
xchg
sub
push
sub
aas
adc
lock
pop
push
sbb
js
jp
or
icebp
or
lods
std
aam
xlat
adc
ror
decb
jmp
ss
movsb
ss
cli
dec
jge
sbbl
cmp
push
lock
mov
mov
xchg
lret
push
jb
mov
aaa
xor
insl
push
jns
cmp
jnp
sub
pop
push
add
aaa
inc
lret
push
mov
popa
leave
mov
std
inc
sbb
add
push
pop
lret
addr16
subb
sub
mov
and
fdivrp
mov
outsb
jne
fsubrp
push
test
in
xchg
out
cmp
dec
xlat
mov
gs
jmp
pop
stos
add
xchg
adc
push
lcall
ja
cld
push
popf
scas
sbb
jno
pop
testl
aad
jl
daa
out
pop
push
cmc
ror
flds
push
arpl
push
mov
cmp
mov
mov
enter
das
sub
push
cmp
mov
test
mov
lret
push
xchg
mov
scas
sarl
mov
add
hlt
fisubrs
cmpsb
mov
pop
pop
add
outsb
in
xchg
jnp
fcomi
in
decl
jle
test
pop
inc
pop
mov
aas
fildll
hlt
ljmp
popf
sbb
pusha
notl
mov
inc
mov
jmp
add
aaa
mov
lds
cmp
sbb
in
jmp
cmp
icebp
insb
fcom
add
inc
or
or
mov
dec
cmpsl
sarl
or
pop
test
mov
xor
stos
xor
dec
add
sbb
cmp
adc
popa
test
xchg
adc
cs
pop
adc
inc
ret
xchg
cmpsl
sbb
xchg
popf
movsb
test
cmp
push
sbb
mov
inc
pop
mov
and
movsl
es
es
and
adc
lcall
mov
insb
jle
shlb
mov
sbb
mov
lea
lahf
push
lods
addr16
jmp
or
aaa
je
push
push
xchg
aam
xor
mov
and
cld
and
xchg
scas
jns
fs
inc
loop
mov
cmpsl
repz
ret
and
imul
cltd
mov
and
std
dec
leave
adc
push
add
xor
push
push
and
es
push
and
mov
sub
fiadds
inc
nop
mov
xchg
popf
push
or
loope
dec
lods
lret
filds
jmp
fiadds
and
adc
out
hlt
imul
ficompl
cmp
or
dec
pop
addr16
test
xchg
in
jg
inc
cmp
insl
and
aad
andb
add
js
stc
inc
mov
fidivrs
cltd
mov
and
xchg
pop
or
push
sub
cs
lock
test
adc
pop
and
push
adc
inc
loope
jmp
mov
add
adc
mov
pop
push
jecxz
or
add
fs
cltd
test
mov
icebp
test
test
pop
fists
pop
push
xchg
pop
xor
mov
adcb
cmc
mov
add
in
push
cli
pushf
xchg
adc
test
push
mov
mov
mov
push
out
and
popa
addl
add
pop
adc
rorl
or
mov
gs
in
xlat
mov
jmp
mov
aas
sub
outsl
sbb
inc
xor
add
jb
xor
and
sub
out
stc
push
pop
cmp
pop
fbstp
movsl
mov
dec
es
js
ret
mov
xchg
add
out
jo
xlat
push
push
mov
and
sbb
add
lea
lret
divl
jl
dec
popa
rcr
out
add
dec
and
pop
test
mov
cmpsl
xor
cmpl
lret
in
fwait
or
xor
cmpsb
xor
mov
test
popa
mov
dec
int3
lds
push
test
jo
mov
lds
dec
dec
sub
stc
push
and
fsubs
xor
data16
stc
push
mov
mov
mov
fwait
scas
leave
mov
repnz
mov
dec
sub
and
iret
and
adc
lods
leave
xchg
sub
call
scas
push
cmc
sub
mov
push
pushf
test
and
mov
sbb
push
std
out
mov
or
call
jecxz
js
call
jnp
pop
xor
inc
pop
mov
loopne
or
ret
mov
jg
addr16
in
out
sbb
int3
decb
push
loopne
test
fisttpll
subb
sub
sbb
xchg
or
xchg
mov
push
fbstp
pop
repnz
ret
adc
sbb
out
xchg
mov
mov
inc
jmp
jmp
or
mov
xchg
cmpsl
out
xchg
arpl
sbb
cwtl
das
cmp
jecxz
int3
sbb
dec
or
lcall
mov
mov
inc
lret
cli
ror
jg
xchg
pop
out
ret
mov
add
mov
dec
mov
jbe
jl
mov
sar
lods
ja
pop
sbb
fistpll
jle
sbb
aam
jle
bound
push
movsl
lahf
clc
xchg
insl
lock
orb
fcompl
ljmp
sarl
scas
hlt
ja
pop
or
aaa
push
dec
insl
enter
cwtl
sarb
ret
repz
pop
xor
xor
sbb
xor
aam
dec
loopne
div
sub
jbe
add
enter
fs
in
clc
fidivs
mov
stc
pushf
mulb
andl
nop
mov
xlat
add
es
std
and
daa
fstl
scas
xchg
and
xor
adc
jecxz,pn
lret
or
jmp
out
fidivl
mov
clc
sti
lea
sahf
inc
addr16
ficompl
ss
fsub
jg
mov
push
add
mov
in
jmp
loopne
mov
aas
add
arpl
xor
sbb
and
add
movsb
inc
dec
mov
dec
shlb
jae
and
dec
adcl
js
mov
xchg
pusha
add
mov
xchg
cmp
insb
mov
mov
or
inc
cmp
aaa
push
pop
sub
jl
jl
call
jge
xlat
scas
xorb
lods
ljmp
stc
pop
cmp
lret
add
repz
jo
mov
clc
fwait
dec
lods
shr
rcl
jmp
or
outsl
fisubrl
or
fsubs
cli
lahf
mov
cwtl
mov
jmp
jns
jmp
mov
push
repnz
dec
loope
cltd
push
mov
and
xor
jg
push
imul
pop
popf
push
dec
test
decl
or
or
mov
adc
addr16
xor
aas
mov
movsb
xlat
mov
add
out
fldcw
dec
sub
pop
sub
push
rcr
jb
mov
mov
int3
cmp
imul
popf
mov
cmp
pop
and
cltd
cmp
jle
bound
cmp
pop
mov
addr16
shl
popa
pusha
fidivl
orl
pop
or
das
lock
ljmp
fs
hlt
jne
inc
fildl
sub
xchg
mov
lahf
insl
test
push
js
xor
ss
xorl
loop
fimull
repnz
mov
sbb
pop
cmp
loop
mov
inc
xor
push
int3
and
xor
bound
mov
ss
mov
dec
push
push
clc
or
cmpsb
int
outsb
gs
sub
outsb
cbtw
daa
mov
js
mov
outsb
add
adc
lds
shlb
out
test
xor
sti
jae
adc
lret
cwtl
data16
sub
fistpl
mulb
jmp
ss
movsb
inc
push
test
ja
mov
sahf
rcrb
push
int3
addr16
xchg
or
pop
mov
xor
jg
sub
aaa
call
lods
mov
and
roll
sub
xchg
dec
sbb
or
cli
int3
xchg
icebp
loope
and
popf
push
mov
roll
cltd
mov
in
mov
push
fisttpll
in
test
pop
fsubrs
pop
push
out
mov
jne
lcall
cmc
cmc
pop
jnp
push
pop
cli
or
inc
xorl
xchg
adc
cmp
and
adc
call
scas
aaa
cmp
jbe
inc
pop
or
movsb
loopne
xchg
pop
xchg
enter
sbb
ja
sbb
xlat
pop
mov
push
outsb
sbb
jae
cwtl
push
lods
pop
in
sub
and
mov
addb
jno
cltd
mov
call
dec
subb
es
shrb
jg
pusha
jle
lock
mov
xor
enterw
add
cmp
add
mov
test
repz
loop
xchg
and
pop
loop
or
adc
popf
dec
mov
lret
add
stos
pop
inc
sbb
xor
push
arpl
in
sub
adc
pop
ficomps
xor
xor
mov
sub
jecxz
add
mov
push
and
xchg
std
mov
mov
sbb
mov
and
xor
in
ja
mov
lods
popl
cmpsb
adc
lcall
inc
movsb
mov
fsubl
arpl
adc
loope
das
fisubl
sub
cld
repz
test
mov
les
gs
jne
in
push
enter
insb
fildll
call
or
cmpsb
iret
xor
add
jae
push
in
stc
popa
inc
iret
mov
and
ds
arpl
mov
add
stos
inc
cwtl
cld
lea
jecxz
aam
cmp
mov
mov
xor
aam
adc
pop
xchg
sub
ljmp
pushf
cmp
xchg
insl
mov
call
push
dec
dec
gs
leave
pop
mov
ret
hlt
fcompl
ret
xchg
pop
xchg
xchg
fcmovu
icebp
fs
jae
ljmp
or
push
mov
dec
mov
cmp
stos
mov
in
sbb
and
call
pop
xor
xchg
sub
pop
adc
stos
mov
mov
push
dec
scas
xor
lret
mov
and
push
sub
or
cmc
push
out
add
nop
pushf
pop
jne
pop
test
mov
mov
out
xor
dec
in
dec
shlb
xchg
cs
add
out
mov
xlat
or
cmp
jge
cmc
outsl
shlb
xor
push
lret
inc
std
sar
fidivl
push
hlt
int3
dec
pop
daa
xchg
lea
sub
push
jl
andl
pop
nop
cld
ja
push
mov
jmp
test
aad
push
add
pop
mov
cmpsb
jge
xchg
outsb
int
pop
sbb
ret
je
push
mov
mov
aad
mov
aas
xor
adcb
test
sub
leave
int
add
test
divb
inc
aaa
and
mov
pop
out
test
or
dec
test
data16
sbb
jns
stc
xor
dec
add
pop
fdivl
out
inc
pop
add
add
fidivs
fsubs
dec
mov
leave
pusha
sbb
ds
jo
cmp
push
sbb
es
jne
push
sti
mov
push
cmp
jbe
leave
imull
call
gs
outsl
repnz
cwtl
adc
insl
bound
adcl
sbb
and
jle
cmp
adc
ss
jecxz
inc
cltd
data16
mov
inc
cmpsl
add
das
stc
xchg
jmp
pushf
iret
mov
add
pop
adc
and
insb
push
stos
iret
mov
xchg
addl
icebp
pop
lret
dec
jbe
or
dec
xchg
mov
les
aaa
jb
mov
pop
lcall
dec
in
test
add
out
pop
or
or
cs
push
ljmp
jmp
pop
push
pop
inc
test
cmp
sub
fadds
cmpsb
and
lahf
lods
std
xchg
add
cmc
fistpl
sub
enter
int
pusha
test
repnz
imul
ljmp
and
dec
push
hlt
xor
outsb
push
mov
pop
cmc
cwtl
adc
sub
mov
xor
ds
xor
icebp
and
push
mov
inc
jmp
dec
xchg
rcr
enter
cmp
jle
imul
loopne
inc
adc
cmp
dec
aas
add
imul
inc
mov
popf
push
cmp
stos
insl
and
or
jne
push
in
addr16
mov
mov
hlt
adc
inc
rclb
add
push
mov
jns
xchg
push
inc
adc
xor
inc
mov
push
call
hlt
insl
inc
mov
adc
cwtl
das
push
adc
loopne
mov
cld
mov
or
lds
in
add
stc
push
dec
pushf
or
jns
xor
lock
cld
aaa
or
jp
dec
cmpsl
push
sbb
xor
mov
aaa
push
mov
int3
pop
jle
cwtl
insl
js
sbb
notrack
pop
popf
mov
loopne
cs
dec
loopne
jnp
xchg
pop
pop
adc
cmp
sub
mov
pop
pop
hlt
pusha
imul
mov
andb
out
repnz
dec
fs
call
sub
inc
cmc
sahf
or
cld
push
iret
or
test
imul
or
rcll
fsubrp
cmp
xor
jo
fsubr
xchg
cs
inc
sub
loopne,pt
mov
mov
cmp
lahf
ror
xor
xor
mov
outsb
adc
jns
xchg
sub
insl
lock
enterw
insl
cltd
sub
jne
xor
addr16
xchg
mov
jno
orb
mov
adc
sub
inc
cmp
sbb
mov
lds
mov
shl
test
or
jae
aas
cmp
test
bndstx
jo
cmpsb
sub
sahf
push
aas
xchg
xchg
and
sub
out
and
dec
pop
inc
insl
das
lds
pop
addr16
dec
jecxz
pop
jp
stos
add
pop
or
push
shrl
icebp
push
movsl
loope
out
push
pop
and
stos
pop
dec
xor
adc
clc
or
fwait
lea
mov
sbb
pop
push
das
mov
cmp
fimull
or
xor
fldcw
inc
lods
xorb
inc
out
xchg
cmc
out
stc
sbb
sbb
push
stos
add
daa
inc
or
cmc
dec
sbb
call
stos
xchg
or
push
mov
out
inc
test
mov
test
pop
repnz
mov
sub
sub
dec
add
xchg
xchg
enter
negl
mov
popf
mov
add
cmp
push
out
mov
pop
inc
inc
xlat
jne
push
mov
cmp
jge
insl
or
dec
mov
repnz
xor
test
rorl
icebp
push
pop
mov
les
or
jecxz
gs
mov
push
xchg
add
pop
fisubs
jno
mov
je
inc
xchg
clc
xor
pop
jmp
adc
mov
cmp
mov
add
fnsave
mov
xchg
inc
jmp
lret
fwait
repz
and
in
out
dec
or
jns
mov
xor
and
or
mov
in
pop
mov
outsl
mov
fcmovnb
in
out
scas
or
js
add
ret
mov
fnstenv
xchg
xchg
mov
xor
in
cmpsl
lret
imul
push
out
aaa
in
repnz
repnz
pop
repnz
lods
jns
loop
fnsave
mov
clc
mov
cmpsb
lock
cwtl
outsl
imul
ret
sbb
mov
jmp
cmp
scas
xor
movsl
inc
movl
popf
or
test
and
rolb
dec
out
mov
outsb
jp
xlat
arpl
sub
push
dec
loope
dec
movsb
jp
gs
fldl
cmp
int3
es
push
or
inc
scas
inc
fwait
jecxz
adc
rolb
xchg
pusha
daa
fistpl
dec
shl
je
scas
xchg
xchg
mov
cmpsb
adc
ljmp
repz
lahf
and
jb
test
jno
and
btc
inc
movsl
les
mov
fisubrs
repz
fs
stc
jmp
sbbb
or
jl
aaa
push
lcall
inc
imul
mov
jg
adc
dec
and
bound
mov
fld
into
movsl
daa
add
sahf
jno
mov
jg
pop
fistl
fwait
cltd
js
shrb
pop
sbb
lds
mov
cltd
xchg
cld
lahf
pop
rcrb
in
loopne
push
or
outsb
rcr
int
or
icebp
pop
and
shrl
scas
fs
adc
jle
inc
cld
jnp
and
das
mov
orb
or
xor
add
clc
lds
jg
mull
cs
sarb
enter
cmc
xchg
cmc
scas
add
inc
mov
testl
inc
int
int
dec
dec
dec
in
mov
test
mov
dec
xor
fisttpll
add
in
stc
shl
pop
enter
jl
and
rol
lea
dec
insl
shrl
je
and
in
and
mov
push
cmc
or
shlb
stos
push
or
dec
sbb
mov
sarl
add
and
push
sbb
loopne
dec
xor
jo
inc
fs
out
jp
ret
stos
clc
add
pop
jge
xor
bound
loope
jns
loop
js
sti
jns
lcall
mov
jo
inc
and
filds
push
xchg
shll
lcall
cs
out
inc
mov
xor
outsl
mov
repz
adc
adc
or
and
mov
lret
sub
aam
pop
mov
inc
xchg
sbb
inc
lret
jg
push
inc
fnstcw
andb
sbb
lret
ja
ffreep
pop
adc
cmc
jne
mov
pop
xchg
pop
repz
test
xchg
adc
test
mov
xchg
movsl
jb
mov
sbb
mov
loope
mov
rolb
test
adc
mov
xchg
xor
hlt
arpl
fisttps
std
pushf
inc
imul
outsl
sbb
mov
mov
lods
inc
mov
pop
jge
lea
fs
xor
sub
adc
mov
mov
fs
cs
bound
inc
movsl
sub
rol
sbb
add
test
enter
jg
test
iret
mov
popf
mov
in
xchg
dec
inc
incb
mov
addl
mov
shl
push
pop
aam
or
pop
aas
dec
push
stos
mov
imul
dec
repnz
cwtl
jae,pt
ret
movsb
and
add
dec
loope
fs
jbe
fs
lcall
test
xor
and
dec
popf
and
adc
add
xor
and
push
insb
daa
mov
test
and
sub
cmp
xchg
cmp
jecxz
fyl2x
subl
call
or
push
rcrb
fnstsw
cmpsb
xor
sbb
sub
cs
lcall
ret
mov
inc
iret
out
fs
loope
test
es
cmpsb
pop
cmp
xlat
lcall
addr16
lcall
out
test
push
das
sbb
ja
hlt
mov
ljmp
xor
ljmp
or
jl
data16
mov
and
icebp
rol
jnp
xlat
dec
pop
xor
test
cmp
aaa
cmp
ljmp
sti
call
pop
insb
imul
mov
dec
shlb
je
jno
aam
repz
fwait
aas
out
mov
push
or
or
fmuls
std
cmp
jne
fld1
inc
mov
or
mov
addb
xlat
into
or
sbb
inc
fnsave
mov
je
jo
js
mov
repnz
xor
push
mov
repnz
push
adc
dec
cli
js
clc
xor
std
push
jno
pop
mov
icebp
push
xchg
push
mov
aam
pop
cmpsb
lea
push
stos
mov
and
ret
je
mov
les
push
lret
ret
repz
sub
mov
inc
pusha
sub
adc
mov
arpl
loope
pop
or
push
mov
dec
cmc
scas
xchg
call
imulb
hlt
in
test
xchg
shrb
test
loope
xchg
pusha
fildl
mov
sbb
or
loope
pop
fistps
push
cld
fwait
pop
pop
setge
les
ret
hlt
inc
addr16
jmp
jne
ret
cli
movsb
mov
push
inc
leave
hlt
jns
repz
leave
add
insb
lahf
inc
adc
jbe
popa
mov
jl
inc
rcrb
jmp
or
out
movsl
push
mov
ja
xchg
arpl
aas
jnp
scas
subl
daa
xor
in
push
lea
movsb
or
cwtl
punpckhwd
je
lcall
dec
add
loop
aas
adc
int3
mov
cmp
cmp
mov
mov
ret
mov
out
sti
adc
or
lret
push
and
stos
inc
adc
inc
jbe
push
xlat
test
push
push
cs
mull
mov
pusha
ss
cmovo
out
in
mov
xor
xor
cs
pusha
addr16
loop
dec
fidivl
fmulp
jns
adc
xchg
das
in
iret
add
xchg
pop
out
int3
cltd
das
fwait
jl
or
pop
fbld
loop
xlat
push
into
ljmp
lahf
add
movsb
mov
insb
add
arpl
lret
or
loop
or
ljmp
icebp
cli
cmp
in
out
mov
adc
cmp
xor
rclb
add
sub
ss
pop
stc
push
int3
jns
sub
and
mov
pop
scas
xor
dec
and
and
jmp
xor
sbb
stos
ret
jg
adc
mov
sub
inc
data16
shll
insb
pop
shll
movb
lock
fbstp
ret
jge
out
imul
repnz
into
test
xchg
sysexit
dec
xor
notl
out
ror
or
inc
dec
icebp
adc
arpl
arpl
mov
sub
fisubl
pop
mov
adc
outsl
aad
mov
sub
movsb
int
sub
dec
fs
daa
xchg
sub
pop
ds
movsb
fs
mov
xor
pushf
lret
mov
cld
orb
xor
mov
imul
and
jo
add
loope
test
mov
push
out
and
ja
arpl
mov
cli
jne
cmp
dec
outsl
xchg
aaa
jle
xchg
dec
sub
jb
dec
dec
xchg
dec
mov
push
subb
icebp
cs
lret
inc
mov
add
ror
jg
xchg
stc
nop
enter
ja
mov
inc
in
rclb
out
popa
mov
ret
cmp
jmp
icebp
dec
fsubl
daa
mov
aaa
sub
pop
push
mov
xchg
dec
sbb
addb
ja
xchg
dec
je
adc
insb
movsl
mov
jge
adc
movb
ljmp
psraw
sbb
movsb
and
sbb
popf
cmp
dec
or
cmp
dec
pushf
dec
lds
jne
inc
sahf
sbb
dec
add
jle
int
xchg
xchg
addr16
adc
test
mov
mov
sbbb
stos
in
shll
rcrb
pop
mov
add
enter
xor
fcmovnb
sub
lcall
inc
insl
sub
mov
xchg
and
mov
imul
mov
dec
cmp
cmpb
fcompl
fcoml
mov
loop
or
mov
insl
add
outsb
movsl
enter
cltd
test
xchg
hlt
add
xor
push
jmp
push
mov
popa
jmp
add
ret
call
jb
adc
pop
bound
andb
gs
mov
out
scas
dec
sbb
xchg
sbbb
enter
and
mov
cs
push
movsl
shll
pop
jnp
push
mov
imul
xchg
in
push
int3
push
xchg
add
pop
push
notl
rep
mov
ficomps
inc
pop
call
jae
insl
or
jno
lret
in
add
hlt
jp
cmpsb
or
sub
cltd
mov
repnz
test
jbe
adc
mov
out
push
movsb
sub
adc
int3
xlat
jbe
xor
xchg
hlt
cmp
sub
rcrb
in
dec
clc
fstpt
push
ret
arpl
cmpsb
shrl
popa
sub
xchg
mov
pop
xchg
add
mov
mov
pop
mov
mov
fadds
adc
popf
je
sbbb
sbb
and
in
in
rorb
les
pop
call
repnz
pop
adc
ds
sahf
xchg
push
mov
xchg
icebp
movsl
cmpsb
mov
popa
clc
mov
push
fistpl
xor
fcoml
cmp
mov
mov
test
push
aas
aaa
jp
or
dec
ret
pop
mov
mov
dec
roll
repz
test
int
mov
dec
cwtl
lds
pop
js
jo
fbld
mov
add
aas
rcl
call
xchg
add
inc
push
fdivrp
cmp
jae
cmp
lret
add
adc
stc
mov
ret
inc
adcb
jnp
std
movsl
fwait
sahf
push
sbb
sbb
cmp
jg
mov
ds
mov
mov
lods
xchg
in
loop
scas
mov
inc
cmp
arpl
call
and
inc
cmpsl
pop
jno
addr16
out
and
das
fdivr
outsb
iret
xchg
pop
mov
popa
popaw
lea
mov
ja
cli
xchg
mov
sub
cmp
or
and
gs
xchg
adc
enter
mov
fbld
mov
movsb
inc
into
in
je
out
sub
andb
push
bswap
iret
addr16
int3
adc
cltd
jne
jne
xchg
out
or
loopne
inc
mov
xor
aad
dec
mov
xor
sti
mov
ret
fidivs
adc
jo
xor
mov
inc
dec
mov
movsl
xchg
and
pop
lret
mov
jns
jo
cmp
and
cmc
rcll
cmp
jo
fdivr
sub
jae
or
mov
call
or
das
jp
fnsave
jmp
push
and
pop
ljmp
sarb
and
mov
xor
int
arpl
out
dec
test
xor
add
adcb
mov
or
sub
subb
fidivrl
lods
cmp
fadd
loop
sbb
dec
add
out
push
movzbl
popl
es
leave
movsl
cmp
cld
adc
mov
cmpsb
mov
popf
pop
or
push
insl
call
mov
icebp
out
jl
rcll
in
adc
dec
xor
outsb
outsl
mov
adc
daa
pop
mov
mov
or
pop
mov
mov
cmp
iret
in
icebp
add
js
ja
jno
data16
arpl
add
stos
xor
xor
ja
lret
int3
rol
fs
aad
lock
inc
popa
xor
mov
out
add
adc
iret
gs
jbe
mov
mov
push
aad
push
inc
adc
push
mov
push
and
mov
xor
sub
repnz
or
out
scas
push
add
adc
dec
xor
jmp
in
push
adc
or
jmp
pop
cmp
dec
xchg
aas
xchg
mov
xchg
cmpsl
sti
popf
data16
adc
push
xchg
pop
fistps
cmp
jne
stos
imul
mov
sub
pusha
fistpl
xchg
nop
push
cmc
push
insb
sub
xor
fldl
jmp
jp
and
push
dec
mov
xor
fdivl
push
adc
ja
sbb
sbb
cwtl
dec
or
push
sub
xor
jo
out
js
inc
push
fdivr
add
les
push
fists
push
mov
add
movsl
push
pop
outsb
mov
and
sbb
aam
mov
mov
aas
mov
cmp
jge
inc
mov
add
cwtl
adc
adc
and
not
fwait
lods
or
cmp
es
cmp
cmp
mov
addr16
mov
jb
dec
in
mov
insl
push
cltd
pop
mov
pop
sahf
scas
nop
js
mov
aad
das
lcall
testb
ss
cmpsl
cmpsb
in
daa
sub
das
sahf
jle
das
mov
ret
loopne
xchg
add
add
sbbl
push
xchg
push
dec
mov
lods
daa
xchg
testb
xor
in
cmpb
hlt
and
data16
xchg
adc
dec
out
mov
adc
test
mov
ffreep
xlat
add
xchg
icebp
adc
in
dec
push
cmc
insb
pop
xor
daa
mov
or
movsl
jge
pop
mov
pop
cmp
or
fcompl
sti
mov
jecxz
lahf
mov
pop
push
or
adc
adcb
pop
test
rcrl
mov
lods
push
fcomip
mov
shrb
mov
imul
fcoms
js
in
push
jg
xchg
push
cwtl
push
jl
popf
sub
movsl
sub
sub
in
mov
leave
pop
cmp
rol
nop
fmull
arpl
mov
sbb
pusha
jle
push
mov
mov
sbb
movsb
mov
aas
push
mov
jg
imul
das
fnstenv
cmpsb
adc
mov
lock
lds
js
inc
aam
cwtl
andb
push
insb
subps
mov
fs
fs
aad
jg
out
jne
insl
stc
and
int
jbe
add
loope
mov
cltd
push
cmp
mov
icebp
in
xchg
sti
out
fstps
xor
mov
imulb
mov
jns
jnp
in
shll
xchg
pop
cpuid
add
sub
pusha
sarb
or
jmp
test
and
sti
or
ffreep
fwait
in
rcl
repz
jle
inc
jg
mov
push
ds
fsubr
loop
jecxz
test
mov
lock
push
xor
out
sbb
and
mov
sub
mov
lds
inc
shll
lea
add
adc
xchg
loopne
xor
mov
lret
sti
lods
jnp
mov
push
int
enter
outsl
inc
sbb
push
js
popf
or
popa
lret
jns
shrl
fstl
xlat
arpl
clc
sub
pushf
lahf
xchg
sbbl
call
xlat
sahf
test
test
adc
jmp
sbb
mov
popf
xor
sub
cltd
xor
fucomp
jl
cltd
mov
jne
and
daa
push
sbb
xchg
scas
ret
inc
jg
scas
mov
add
lods
shrl
lea
clc
jle
pop
loope
mov
adc
lret
jmp
rorb
cmp
xlat
ret
xchg
push
mov
std
in
fnsave
xchg
nop
pop
stos
cs
sub
nop
jo
repz
push
cmp
add
and
or
push
shlb
mov
sbb
or
ret
out
pop
dec
stos
or
lods
in
xor
test
bound
in
test
test
ljmp
call
dec
or
sub
push
inc
push
fsubrp
inc
popa
fdivrs
test
repz
cmp
shl
sbb
dec
or
pop
jecxz
lsl
mov
mov
outsb
mov
test
aam
pop
int
mov
mov
js
xor
xchg
push
mov
mov
sbb
add
push
loop
mov
jp
out
and
cmpsb
pop
mov
icebp
adc
adcl
sbbb
imul
xchg
mov
incl
pop
inc
push
fldcw
add
sahf
mov
mov
cs
adc
stc
orl
repz
mov
jg
xchg
sub
inc
and
mov
out
dec
dec
inc
enter
add
mov
imul
pop
mov
push
jg
mov
mov
sbb
je
mov
rclb
cmc
xchg
cwtl
ja
cmp
xchg
sbb
repnz
es
cmpsb
cmp
aam
aad
call
add
iret
divl
arpl
sub
addb
inc
loop
pop
mov
adc
sbb
sbb
sbb
add
xor
mov
sbb
test
nop
xchg
ljmp
mov
or
inc
and
jae
xorl
gs
jmp
in
jp
mov
and
cmc
xchg
bound
pop
mov
mov
scas
aaa
fiaddl
pop
in
int3
cmp
stos
add
jbe
or
stc
popf
movsl
jmp
pop
ljmp
sarb
sbb
add
test
pop
out
cli
js
jns
adc
js
hlt
aam
mov
jg
lea
sbb
out
and
dec
jp
loopne
pusha
adcb
nop
sarb
jno
inc
push
cmp
stos
sub
lcall
test
ret
xor
icebp
movsl
sub
out
lret
das
mov
mov
je
cmp
xor
add
int3
xchg
cli
stos
insb
sbb
mov
out
imul
mov
nop
std
push
jmp
and
xchg
sub
mov
xor
add
repnz
jb
and
sub
test
lea
aad
push
sahf
out
xchg
int3
adcb
push
mov
pop
xchg
cmp
inc
cmp
or
pop
dec
add
xchg
xor
sub
popa
jne
xchg
cmc
mov
pop
adc
jge
cmp
ss
cmp
push
loopne
jno
test
xchg
inc
dec
or
xchg
mov
ret
and
jp
and
mov
mov
pop
hlt
inc
pop
jno
popa
jnp
xchg
stos
incl
loope
dec
cmp
sbb
in
mov
inc
sar
ja
adc
pop
hlt
push
aaa
sub
stc
testb
rcr
pop
lock
lods
scas
sbb
ja
push
data16
add
xchg
sub
xor
dec
ficoml
or
inc
cmpsb
es
das
sbb
lret
ljmp
jne
popa
adc
push
pop
or
lods
pop
shrb
adc
lock
sub
dec
filds
sahf
sub
cmp
mov
ret
jmp
cmp
xor
int3
cmp
pop
jmp
push
vpavgb
cmp
outsb
aad
mov
add
ret
push
cmpsb
xlat
xchg
fldt
movsb
cmp
push
dec
filds
notl
addr16
scas
inc
lret
test
jmp
arpl
sub
shll
mov
cmp
loope
addr16
add
jne
fsubl
cltd
sahf
pop
push
bnd
lret
mov
adc
enter
sub
mov
aas
sub
add
repz
sub
xchg
aam
dec
outsb
mov
pop
loopne
cmpsl
cmp
fistps
xor
in
dec
jne
mov
xor
neg
mov
add
push
std
cmp
into
fsts
into
dec
xchg
arpl
pop
outsl
pusha
cmp
cmp
xchg
and
pop
mov
inc
mov
jecxz
add
xor
mov
add
add
ljmp
arpl
xor
adcl
or
scas
mov
pop
inc
jge
mov
andl
pop
sbbl
in
add
icebp
packuswb
iret
cmc
inc
data16
into
mov
mov
add
stos
sbb
sub
ja
push
pop
scas
mov
daa
and
shrb
incb
mov
jae
pop
sub
fimull
popa
sbbl
mov
push
popa
pop
lock
cmp
testb
jecxz
ret
jle
sti
pop
push
test
fnstsw
int3
dec
xchg
outsl
repz
test
jmp
shr
insl
lock
push
jp
mov
int3
adc
jns
jp
pop
inc
xchg
dec
xor
cwtl
gs
xchg
jmp
jecxz
and
add
mov
pop
sbb
test
pop
outsl
ret
outsl
nop
fbstp
push
mov
xchg
nop
xor
iret
pop
xor
push
and
adc
mov
xchg
mov
dec
sbb
sbb
movb
fiaddl
cmp
lods
and
jmp
sti
rol
out
fs
sti
stos
mov
sub
cmc
xchg
bound
lods
xlat
test
jno
xchg
mov
dec
dec
mov
inc
jmp
sahf
cs
adc
adc
push
push
shlb
cld
mov
test
cwtl
push
repz
js
aam
sti
lcall
ds
inc
mov
mov
cmp
jnp
mov
out
imul
out
insl
in
dec
pop
push
inc
xchg
mov
lahf
es
xor
lds
sarb
sbb
ljmp
divl
into
call
or
sub
mov
xchg
xchg
mov
gs
psrld
cmpsb
daa
or
test
imul
jp
jns
movsl
lret
xchg
fisttpl
jno
jle
add
sub
sub
loop
mov
sub
push
fisubs
sti
and
je
daa
mov
jle
jbe
inc
push
jne
mov
insb
loop
adc
or
in
and
inc
or
lcall
mov
mov
push
sbb
add
sbb
xor
push
sbb
es
sbb
dec
ds
pushf
and
jp
gs
push
es
pushf
dec
push
cmpsb
pushf
das
aas
mov
mov
ljmp
dec
test
add
xchg
pop
adc
ss
inc
mov
mov
dec
adc
jbe
adc
scas
int3
lahf
std
jo
push
jg
xchg
xchg
lods
push
cmpsb
and
sbb
inc
sub
dec
js
xchg
iret
sub
adc
mov
popf
mov
and
loopne
add
pop
and
hlt
cmp
cwtl
les
inc
mov
fbstp
cmp
int3
das
mov
fs
dec
mov
mov
jp
add
ret
cmp
mov
aaa
sbb
jo
mov
shrb
push
push
insb
or
xor
scas
adc
and
push
xor
adc
xor
mov
cmp
xor
push
jns
orb
inc
xor
push
aam
cwtl
push
test
xchg
repnz
inc
inc
fidivs
repnz
data16
inc
adc
push
cmp
sbb
inc
mov
cmp
cmp
xchg
xchg
push
or
inc
and
mov
mov
lds
push
mov
push
adc
cs
jne
nop
dec
in
out
mov
inc
xor
inc
test
unpckhps
pop
mov
mov
push
call
xchg
cmpsl
xor
movsl
cld
es
add
fisttps
sbb
sbbl
xchg
es
in
sub
xchg
fwait
pushf
inc
test
and
in
bound
cmp
cmp
ret
je
aam
jl
in
lea
icebp
insb
les
int3
scas
out
sub
inc
adc
xor
push
lods
mov
mov
out
xchg
aad
pushf
mov
xchg
sub
mov
mov
cmp
shlb
out
imul
xor
adc
arpl
and
adc
popf
pop
mov
aaa
sub
xchg
cmpl
and
mov
fwait
xor
shlb
in
add
adc
decl
scas
test
dec
sub
mov
insl
jmp
imul
test
jb
adc
xchg
loopne
sbb
or
or
sbbl
mov
jmp
dec
xor
dec
mov
push
sbb
fadd
pop
push
push
ds
outsb
bound
adc
adc
stos
and
adc
or
fiaddl
xchg
pop
cli
dec
ficoms
adc
mov
nop
popa
cmp
mov
pushf
lods
divl
xor
aaa
lret
push
push
in
dec
jo
xchg
sub
je
pop
aaa
sbb
cmpsl
pop
cmp
xchg
add
push
and
pop
cmp
test
dec
mov
cltd
push
sub
hlt
ds
arpl
clc
and
dec
pop
mov
sub
add
jne
and
or
cli
adc
fildll
jecxz
dec
addr16
imul
push
xchg
loope
pop
repnz
add
popl
mov
cmpsb
push
test
ja
xor
in
jns
dec
shlb
pusha
out
lds
outsl
jne
mov
jge
xchg
jg
adc
or
or
cmpb
adc
push
sub
out
fimull
jne
add
mov
and
movsl
icebp
push
decl
std
push
andl
mov
flds
sub
inc
pop
lret
dec
mov
lcall
mov
pop
push
cmpsb
xor
or
dec
mov
push
jo
jb,pt
pop
add
and
jg
ds
fidivrs
sub
pop
adc
test
and
and
lock
push
das
flds
shrl
xchg
mov
leave
xchg
sbb
flds
test
aas
mov
mov
sbb
sbb
lods
jle
cmp
dec
stos
repz
mov
xchg
jmp
lahf
lods
icebp
mov
xor
into
daa
mov
cmp
cmp
dec
jecxz
mov
out
sbb
sbb
sbb
popa
clc
insl
sub
jg
cmc
fisubrl
movsl
lahf
sub
pop
pop
mov
jecxz
fimull
and
mov
mov
mov
hlt
pop
jae
xorl
cmpsl
imul
mov
fisubl
mov
add
mov
cmp
mov
adc
adc
lcall
mov
imul
push
mov
jecxz
mov
adc
loope
inc
out
lods
mov
adc
jae
mov
pop
cmp
shrb
insl
incb
sbb
cmp
add
stc
pop
jl
mov
lcall
hlt
decb
out
not
and
push
xchg
cmc
jle
loop
nop
dec
and
into
gs
sahf
insl
push
jmp
lahf
xor
lea
cmp
les
loope
lahf
inc
scas
jno
sar
jno
sub
lahf
pop
addr16
cs
das
push
aaa
mov
pop
outsl
mov
aam
insl
add
dec
mov
loop
daa
mov
fwait
mov
fsubl
adc
gs
mov
add
or
mov
inc
fdivl
xchg
pop
outsb
movb
add
cltd
cmp
je
jno
and
lock
mov
jl
push
sub
inc
add
add
out
xor
or
testb
jp
mov
sarb
xlat
push
jne
daa
push
jmp
out
cs
jb
mov
pop
out
push
stc
xor
jg
push
push
and
popa
jbe
mov
mov
and
jecxz
imul
mov
insl
lds
repz
push
jmp
mov
jo
addr16
cmpsb
dec
or
mov
shrl
fstpt
sub
out
dec
adc
dec
lret
leave
xor
or
fists
test
inc
lods
xor
sbb
lret
cld
lret
data16
or
and
sub
push
inc
adc
xor
xchg
pop
bound
lret
scas
pop
sbbl
das
jo
mov
xchg
jmp
movsb
cmpsl
enter
aas
mov
and
popa
lock
ja
inc
fisttpl
leave
adc
aas
movsl
cmp
out
fbld
ret
pop
cli
repnz
loope
sub
mov
in
sbb
fsubr
pop
add
icebp
cmp
lods
mov
fdivr
faddl
xchg
push
fcomip
mov
adc
aam
mov
pop
jg
cmc
mov
leave
fistps
sbb
insl
shr
out
ja
mov
mov
ljmp
test
mov
shl
mov
std
pusha
clc
shlb
jg
or
scas
cmp
int
push
ss
xor
push
inc
adc
ror
xor
mov
mov
sbb
xor
pop
dec
jle
jl
aad
sub
leave
cli
push
jbe
pop
les
fdivrl
jbe
int
mov
add
dec
xchg
test
cld
xor
pop
std
sbb
mov
int3
push
icebp
adc
push
add
je
test
mov
cmc
imul
pushf
adc
push
mov
loope
xor
pop
xchg
add
cmc
pop
cmp
ljmp
add
inc
fmuls
scas
pop
aaa
mov
dec
out
xchg
xchg
add
jno
and
hlt
test
call
enter
ret
fsubrs
int
adc
out
xchg
pusha
in
test
mov
push
push
xor
dec
jne
sub
rclb
add
es
jmp
pusha
ss
inc
inc
cli
xor
push
out
cmp
inc
xlat
out
fsubr
inc
mov
pop
shrb
fucomip
jp
imulb
sub
push
pop
mov
adc
je
subl
jnp
aam
fimull
mov
sub
inc
pop
call
dec
out
push
mov
cmp
pop
pop
repnz
pop
adc
pop
ficoml
loop
subb
mov
clc
pop
dec
pop
stos
xor
push
add
insl
icebp
and
aaa
fisubrs
fstpl
int3
daa
dec
lock
stc
mov
mov
fldl
push
lods
inc
sbb
lret
push
rep
jnp
xchg
loop,pt
jns
mov
int
dec
aas
mov
hlt
push
test
out
push
dec
es
scas
inc
enter
cltd
push
push
xchg
call
pop
loop
testl
push
jb
and
push
add
or
push
dec
inc
and
ja
mov
cmpsb
adc
arpl
pushf
subb
mov
jo
cmp
xchg
cs
cmpsl
inc
popw
add
fsub
pop
lret
icebp
adc
xchg
xor
xchg
rorl
lea
mov
sub
ss
inc
test
and
lods
data16
mov
les
add
push
icebp
pusha
and
imulb
lret
pop
pop
imul
adc
inc
push
jg
loop
daa
lret
sar
adc
push
and
mov
std
dec
dec
inc
add
pop
js
cmp
into
les
movsl
mov
test
test
popa
jg
rolb
clc
aaa
in
mov
or
mov
push
pushf
lahf
ret
pop
mov
mov
inc
call
leave
leave
aaa
fidivs
add
mov
mulb
je
out
cmpsl
in
sbb
pop
aam
aas
xor
rcrl
and
push
ret
mov
shrl
mov
test
pop
adc
xor
or
jnp
dec
loope
lds
mov
mov
pop
cld
cmpsb
gs
pop
jae,pt
mov
cmpsl
fimuls
arpl
pushf
inc
aaa
into
aaa
push
sbb
int3
and
xchg
cmp
lds
int
je
sub
andl
mov
shrb
xor
jmp
and
jno
jg
sub
fwait
stos
cld
xchg
sbb
mov
xlat
mov
sbb
daa
cmp
sub
jbe
punpckhbw
sub
ret
pop
pop
aaa
ret
mov
push
and
hlt
mov
pushf
pop
lock
idivb
sti
test
jbe
arpl
inc
mov
sub
ret
pop
ljmp
dec
test
sahf
add
add
and
cli
xchg
rclb
lcall
adc
or
int
pusha
rolb
and
fdivs
mov
pushf
ret
inc
inc
or
lods
push
mov
pop
fstps
decl
sbb
punpckldq
pop
call
std
or
aad
and
nop
push
add
or
int3
and
and
imul
dec
scas
inc
and
xchg
hlt
or
adc
mov
aas
mov
sub
push
lds
mov
cmpb
jo
test
mov
and
jb
loope
push
mov
cmc
mov
gs
out
mov
pop
sub
ds
call
add
xor
xchg
out
insb
jbe
pop
aas
call
fwait
shrb
pop
pop
ljmp
xlat
adc
pop
push
montmul
cmpsb
inc
shll
fists
cmpsl
shrb
negb
nop
daa
cmp
fbstp
jecxz
mov
insl
imul
aas
movl
or
out
cs
pusha
xlat
dec
or
lock
xchg
cli
jne
sbb
sbb
and
rorl
out
lret
add
xchg
ret
jl
popa
mov
mov
enter
das
fistl
into
mov
push
jne
outsl
clc
outsb
mov
sti
test
cmp
mov
sbb
xlat
outsl
cld
pop
lock
ret
repz
xchg
clc
aad
mov
xchg
js
leave
push
add
stc
bound
xchg
sbb
xor
inc
idivl
jle
adc
in
pusha
fnstcw
inc
popf
cmp
pop
mov
cld
cmp
xor
shll
sbb
push
or
test
pop
fiadds
cli
fdivp
test
pushf
xor
adc
and
lcall
popa
shll
fidivrs
pop
imul
in
inc
pop
pop
jns
lea
adc
sub
mov
mov
cs
jb
jg
dec
add
pop
mov
dec
jecxz
add
ds
dec
sahf
or
xchg
mov
mov
outsb
popf
push
ss
aas
sub
dec
add
fdivl
xor
ljmp
push
or
push
fs
sub
sarl
test
pop
or
pop
xchg
inc
faddp
sub
mov
jecxz
test
out
mov
push
and
pop
jbe
test
sbb
xchg
sub
jge
push
cmpsl
shrl
adc
inc
imul
pop
icebp
lea
inc
sti
push
pop
ss
fwait
mov
sub
movsb
outsb
jge
sahf
sub
rcl
add
insb
xor
movsb
std
xchg
aas
xchg
test
add
rolb
ret
xchg
add
cmpsb
into
fdivs
cmp
dec
add
cmp
aad
mov
push
cmp
or
aaa
and
xchg
mov
inc
xchg
outsb
xlat
outsb
mov
cmp
adc
inc
sahf
sahf
jle
out
rolb
lock
cld
add
shll
leave
stc
mov
cwtl
loope
push
popa
cmc
mov
fstp
aas
call
pop
negl
cmp
ds
and
push
mov
inc
mov
xchg
mov
dec
popa
clc
sbbb
loope
lock
and
jo
inc
sub
outsl
pop
lcall
lods
inc
xor
sti
lret
sub
daa
repnz
mov
mov
fistl
ss
xchg
inc
xor
andl
push
pop
jnp
fstpl
or
sbb
outsl
mov
jmp
cmpsl
daa
mov
dec
xbegin
xchg
push
stos
test
push
jmp
mov
jmp
inc
fcmovnb
and
ss
rcrb
push
clc
test
jmp
out
jo
pushf
fisubl
imul
icebp
enter
fsubs
xchg
mov
jnp
or
mov
jmp
lret
adc
ss
daa
in
jg
ret
jnp
pop
fiaddl
cmp
test
fstpl
test
inc
mov
add
out
mov
insl
cmp
test
fwait
pop
imul
stc
icebp
push
pop
loope
addr16
push
addr16
cltd
jne
xor
les
gs
and
xor
out
jno
sub
mov
in
test
mov
sbb
subl
imul
lods
add
jecxz
int3
scas
mov
mov
pop
jae
mov
inc
mov
xchg
outsb
stc
mov
ljmp
pop
and
push
jno
mov
in
push
mov
pop
mov
jge
jnp
xchg
jge
cwtl
ljmp
fucomi
mov
ficoml
cwtd
mov
stc
in
cli
leave
pop
sub
add
fscale
sbb
test
hlt
outsl
mov
cmp
fwait
sarb
jle
jmp
jl
jle
aas
push
sbb
pop
push
jno
adc
ljmp
in
in
xor
mov
scas
cmp
push
mov
mov
push
es
mov
inc
mov
aas
addr16
sbb
sub
cmp
mov
sbb
pushl
rolb
cltd
add
dec
cwtl
fiaddl
sar
filds
push
pop
sbbb
and
push
pop
mov
ret
or
add
insl
mov
pusha
outsb
loope
and
rorl
or
je
pop
aam
scas
addb
fstpl
dec
fistps
jb
das
sub
test
movb
sbb
pop
mov
in
sti
stos
iret
loopne
lods
adc
lret
aas
xor
sub
jbe
addl
pop
jo
push
and
ljmp
add
adc
and
jo
pop
pop
sbb
jne
jnp
ja
cmc
add
hlt
mov
out
jp
and
insl
ja
arpl
and
and
inc
and
ja
jo
bound
ja
orl
mov
test
sub
adc
in
dec
mov
bndstx
scas
push
pop
sbb
mov
mov
dec
or
mov
mov
cmp
jmp
sbb
jo
bound
mov
jle
sarl
xor
mov
dec
xchg
retw
loope
rcrl
adc
xchg
out
test
add
fdivl
and
fidivrl
pop
lret
cmp
mov
ljmp
ret
pop
or
cmp
mov
xchg
cltd
pushf
ja
fisubrl
lods
sub
cmp
mov
fs
je
push
mov
rorb
cwtl
das
loope
fidivl
adc
pop
mov
jecxz
xchg
xorb
sarl
stos
loope
inc
testl
push
mov
push
popf
push
add
aaa
ja
insb
popa
xor
scas
xchg
test
inc
scas
pop
jl
in
lret
add
outsl
daa
and
iret
pop
negb
jge
lret
jp
sub
sbb
ds
xor
add
add
jae
and
push
cmovge
mov
inc
stos
sub
stc
std
mov
mov
jne
movsb
or
inc
ds
and
adc
pop
repz
lret
js
rorl
jne
or
jp
xor
fimuls
add
xchg
push
xlat
pop
ret
test
out
xchg
ret
add
cmp
dec
loopne
ds
push
fbld
sub
enter
cltd
push
stos
test
sbb
xor
mov
pop
push
pop
mov
cli
leave
mov
add
test
or
pop
mov
imul
into
jge
ret
adc
loope
int
sub
aam
addr16
mov
xlat
mov
or
rcll
jmp
jbe
xor
repnz
fidivl
or
pusha
inc
jb
mov
mov
push
xor
dec
pop
iret
push
mov
mov
pop
out
cmp
pop
or
pop
and
rcl
adc
lret
andb
cwtl
lods
add
dec
scas
push
out
xchg
sub
xchg
xor
inc
cvtpi2ps
addr16
in
inc
xchg
dec
aas
xor
inc
lods
push
mov
inc
jl
inc
pushf
add
pop
and
out
push
mov
pop
fimull
push
mov
lret
push
popa
les
cmp
ja
test
rcrb
lret
shr
pop
sbb
outsl
sub
fsubrp
and
stos
aad
push
outsb
add
xchg
rorl
ret
mov
addr16
out
adcl
xor
cwtl
stos
mov
mov
xor
test
cmp
repnz
lods
push
sub
sub
and
not
insl
sub
xchg
mov
mov
scas
rclb
test
cmp
pop
imul
int
cmp
sbb
xor
xchg
shlb
or
andb
sub
out
div
xchg
aam
pop
cmpsb
mov
push
mov
lock
sbb
mov
lods
ljmp
call
pop
aad
fsubrs
movsb
bound
or
lret
stc
jo
sub
ja
pusha
fistpll
sbb
add
sbb
xchg
fildll
dec
lock
and
lret
xchg
pop
sub
je
xchg
mov
fsubl
int
enter
add
jle
out
mov
xchg
insb
ja
mov
rclb
ljmp
sub
lcall
and
cmp
jns
pop
pop
call
cmpsb
scas
in
jo
sbb
outsl
push
sbbl
stc
push
push
mov
jge
sub
in
shrb
mov
inc
push
movsl
cmp
inc
push
push
sarl
xorb
popf
push
outsb
jl
mov
add
loope
jne
out
jb
movsl
lds
mov
mov
movsl
cmp
mov
push
mov
pop
jle
dec
out
xchg
aad
insb
jge
cmpsl
insb
jp
sbb
cmp
sub
xchg
mov
in
adc
mov
adc
ljmp
xor
adc
lahf
ss
push
enter
adc
jne
ss
gs
cmpsb
sbb
sarb
inc
es
shll
je,pn
cmpsb
pop
in
xor
dec
bnd
aam
popf
je
icebp
xchg
scas
bound
xor
mov
les
ret
or
sub
push
push
xchg
mov
adc
fimull
pushf
and
lods
iret
pushw
push
arpl
ret
in
push
je
out
adc
sub
iret
outsl
ror
adc
arpl
sbb
aaa
in
mov
xchg
adc
pop
lods
fcmovb
rclb
test
rcrb
xor
jnp
mov
stos
xor
mov
sarb
inc
cwtl
and
jg
les
mov
cmpsb
inc
lds
pop
cmp
dec
and
mov
arpl
jg
loopne
fldt
mov
adc
mov
mov
scas
mov
and
fistpl
imul
inc
mov
sbb
inc
and
ds
repnz
xor
push
xchg
cltd
ss
sub
adc
lds
sbb
or
xchg
pop
repnz
aad
lret
sbb
movsb
sub
add
jae
xchg
xchg
lods
data16
dec
or
cwtl
or
and
jp
negb
out
jge
loope
mov
ficompl
daa
mov
and
fnstcw
mov
add
xchg
cmc
repz
das
mov
testb
adc
cwtl
sar
out
fsubrl
cli
push
scas
dec
dec
dec
dec
testl
sbb
inc
aas
fldt
xor
popl
jmp
ljmp
iret
xor
push
jns
fdivrl
std
add
fxtract
cltd
mov
push
repnz
orl
adc
icebp
xor
js
sub
sub
push
mov
loop
call
jl
mov
cs
in
fists
cmp
rcrl
xchg
repz
inc
es
sbbb
push
jle
adc
xor
lahf
rcrl
sub
mov
lea
fwait
sbb
sub
cli
lahf
mov
rcrl
xor
jns
mov
fsts
or
mov
mov
in
addl
stos
push
imul
mov
movsl
jecxz
cld
sbb
cmp
cltd
std
fsubrl
stos
scas
sbb
cmovle
stc
daa
insb
and
cmpsb
ljmp
sbb
jae
stc
aaa
bnd
in
mov
add
mov
pop
jle
lea
push
push
push
test
fildll
mov
pusha
sti
and
dec
sbb
xchg
jmp
rorb
lret
jne
outsb
stc
test
andl
orl
adc
aaa
shll
jle
fdiv
inc
clc
adc
xor
je
sub
mov
clc
loope
aad
xchg
inc
stos
int
loop
mov
mov
std
mov
lods
inc
pop
xlat
outsb
lea
pop
data16
aas
fs
and
jg
mov
jnp
mov
pop
in
pop
negb
rcr
jecxz
pop
mov
ds
pushf
add
dec
in
stos
xchg
inc
arpl
movsb
mov
or
sti
mov
fcomi
dec
mov
ret
lret
nop
jmp
xchg
test
lods
jmp
xchg
push
jno
mov
movsb
out
lea
pop
in
mov
mov
adc
sub
imul
je
into
push
inc
insl
jge
inc
mov
daa
push
and
pop
ds
add
hlt
fstpt
lods
fwait
popl
cmpsl
pusha
adc
fwait
jno
mov
cld
xchg
stc
push
xor
push
sbb
nop
cmp
sub
add
outsl
stc
cmp
stos
add
sub
or
dec
adc
mov
leave
adc
lret
cmp
inc
loop
xlat
repz
aad
cwtl
fisubrs
xor
push
jmp
test
xchg
aad
loop
xchg
push
jecxz
je
push
aas
pop
outsl
bound
inc
movsl
addl
jns
pusha
xlat
adc
pop
adc
imul
or
sub
mov
mov
loop
mov
call
jg
lret
mov
stos
int
dec
adc
aas
je
lods
or
aad
clc
and
daa
push
pop
popf
inc
push
outsb
call
mov
sub
outsl
cmpl
insl
fiaddl
hlt
inc
stc
loope
add
ret
sbb
dec
fnstcw
fcomi
test
cmpsl
xor
notb
aam
dec
jmp
nop
adc
into
pop
mov
inc
push
pop
testb
nop
loope
dec
xchg
xor
and
xchg
ljmp
imul
loopne
push
aam
stos
hlt
mov
pop
jae
shl
lods
enter
jecxz
xor
xor
aaa
rol
or
sbb
loope
imul
cmp
in
out
int
ljmp
add
mov
mov
je
daa
lcall
or
cwtl
add
bound
sub
popf
cmp
mov
and
loope
and
mov
sub
call
pop
bnd
pop
hlt
gs
sub
imul
jmp
sub
pop
dec
xchg
stos
cmp
lods
in
scas
push
mov
out
pusha
mov
cmp
pop
push
mov
es
xchg
adc
call
adc
mov
in
aaa
testl
out
mov
xor
loopne
push
mov
lahf
add
bndldx
pop
lock
adc
add
cmc
xchg
lcall
scas
inc
clc
mov
lcall
sbb
xchg
cmpsl
popa
pop
movsl
and
out
sub
nop
lret
loopne
cmpsb
mov
add
push
addr16
scas
mov
mov
dec
adc
icebp
mov
jno
lret
stos
sbb
ficompl
inc
inc
and
dec
sti
mov
clc
es
aam
dec
lahf
push
lods
sbb
mov
sub
lods
repz
jmp
adc
out
xchg
scas
xorb
pop
xor
pop
cmp
mov
or
lahf
loopne
mov
shl
dec
aad
add
loopne
adc
rol
push
jmp
lds
xlat
cmp
test
mov
repnz
mov
add
stos
loope
in
mov
nop
push
push
sbb
mov
int
cmp
ja
jmp
and
mov
and
dec
arpl
ds
xchg
push
ficompl
mov
jge
aad
push
pop
decb
popa
clc
jge
xchg
stos
mov
xchg
and
cmp
mov
pop
sub
xor
je
mov
into
in
insb
push
inc
nop
xor
mov
or
rcl
aaa
arpl
sarb
jl
div
icebp
sarb
jmp
rcll
cmp
mov
push
add
mov
pop
out
mov
xor
and
mov
adc
gs
push
sbb
pop
push
jnp
mov
lahf
adc
and
ret
xchg
pushf
hlt
aam
pop
lock
cltd
imul
sub
adc
fnstenv
in
incb
fisubl
imul
lock
gs
adc
fisttpll
mov
fs
xor
loopne
push
js
and
sbb
mov
loopne
lahf
testl
data16
push
pop
inc
out
cmpsl
sbb
addr16
lcall
lret
clc
aam
mov
pop
and
or
out
icebp
cmpsl
push
mov
mov
add
cmpsb
loope
xor
xchg
es
faddl
mov
mov
cld
xchg
test
insb
push
sbb
sarb
push
or
and
or
xor
fnsave
loope
xchg
push
pop
fs
loope
popa
cmp
add
mov
mov
add
mov
js
lcall
lret
inc
adc
cmp
outsl
aaa
dec
in
xchg
insl
xor
jns
and
dec
leave
int3
dec
test
std
xchg
pop
cmp
imul
popf
mov
jnp
mov
dec
ret
mov
out
and
cmp
mov
aam
xchg
hlt
adc
mov
clc
in
mov
incb
loope
ret
das
lds
in
mov
add
xor
pop
popa
adc
cmp
stos
clc
push
lret
bound
outsl
xorb
outsb
add
movsl
fadd
test
aad
mov
mov
dec
inc
add
lret
xor
dec
push
jb
or
popa
mov
push
out
add
call
fldenv
dec
icebp
push
jo
sub
jl,pt
dec
decb
mov
popa
add
pop
cmc
jg
cmp
ljmp
mov
cmp
inc
fnstcw
iret
push
mov
push
mov
mov
mov
or
cmpl
xchg
inc
gs
popa
xchg
xor
dec
add
loopne
js
jnp
xchg
test
outsb
leave
mov
mov
xchg
cli
xchg
adcl
into
adc
lods
inc
stos
in
je
orl
lcall
cld
jne
in
mov
cli
out
hlt
push
pop
inc
sub
loop
outsb
sub
pop
add
jb
jmp
cmp
scas
divl
push
popl
fisubs
jg
jp
sarl
add
dec
pusha
stos
mov
mov
je
cmp
out
dec
pusha
xchg
aaa
pop
xor
es
inc
repnz
mov
popf
mov
stos
cmp
jno
push
xorl
jmp
imul
xor
xchg
clc
dec
mov
mov
pop
mov
ljmp
js
and
push
in
loopne
push
fldcw
shlb
pop
adc
cmpsb
cmp
mov
xlat
outsb
stc
cld
adc
dec
cmp
aad
rorl
mov
data16
pop
cwtl
loope
jmp
ret
divb
cmpsb
pop
mov
xchg
cmpsl
sub
lock
js
jae
scas
jg
inc
xchg
outsb
notb
hlt
lods
cmp
rorl
in
cli
or
daa
into
mov
ljmp
dec
and
inc
mov
rorl
sub
dec
add
imul
mov
nop
xor
cmp
ret
cmc
sub
push
pushf
ja
add
cmp
loope
in
sbb
mov
xor
jb
pop
and
adc
dec
inc
lods
test
daa
loopne
push
lock
and
incl
xchg
and
icebp
imul
loope
sbb
and
push
cwtl
insl
mov
cld
js
push
mov
rorl
rol
pop
dec
pop
sbb
pop
call
in
bnd
nop
pop
push
jo
shrb
adc
add
daa
pop
stos
fisttps
mov
xorb
mov
mov
jns
mov
ret
xchg
cs
push
sub
pop
xor
add
lods
mov
sbb
pop
or
cli
push
mov
int3
mov
mov
ret
outsl
ret
add
out
pop
mov
pop
jecxz
xchg
cld
mov
jne
pop
mov
arpl
inc
fnstenv
cmpsb
xchg
mov
test
adcb
cmp
adc
fs
inc
arpl
lods
adcl
adc
hlt
cmp
lods
inc
lret
imul
std
xchg
add
and
inc
cli
xchg
cs
sbb
fcoms
aad
push
dec
sub
pop
movsb
push
xlat
mov
sbb
mov
cmpsb
mov
hlt
mov
test
adc
andb
test
es
pop
jg
mov
mov
fdiv
js
jge
lahf
outsb
pushf
decb
fadds
sub
push
and
jae
cs
or
js
or
or
cmp
mov
add
inc
dec
aad
dec
stc
lds
push
inc
cmp
inc
mov
movsl
cltd
sbb
pop
mov
lds
push
dec
enter
jp
stos
push
dec
adc
xchg
jo
cs
jge
insl
cs
push
mov
xchg
jbe
shl
jnp
or
mov
loopne
jle
mov
cmpsb
cmp
in
push
lea
lea
sbbb
jle
test
xchg
inc
xor
jae
leave
push
dec
pop
dec
scas
inc
inc
loop
jne
into
xor
pop
jmp
mov
dec
daa
arpl
decb
test
adc
xchg
and
fsubrs
mov
stc
in
pop
dec
daa
addr16
mov
nop
subl
xchg
filds
movsb
jecxz
lret
cld
int
push
jbe
aam
icebp
arpl
icebp
movsl
repz
ljmp
mov
imul
mov
jge
inc
pop
pusha
lret
add
das
sub
xchg
pop
fistl
add
in
or
imull
bound
inc
enter
push
sub
jbe
bound
jb
xchg
inc
stos
js
test
mov
mov
push
mov
insl
lret
inc
fsubs
xchg
gs
xor
mov
loope
clc
adc
dec
add
idiv
dec
scas
scas
cs
insb
xlat
enter
pusha
jecxz
sbb
fistl
and
inc
lock
cmp
ret
jp
jnp
mov
mov
repnz
or
popf
push
sub
or
cmp
outsl
mov
leave
outsb
jge
call
fnstcw
push
test
dec
shlb
roll
mov
and
xlat
aad
jo
iret
rclb
sub
inc
addr16
es
mov
pop
cmp
jge
xchg
xchg
mov
mov
xlat
aas
adc
sbb
xchg
call
add
jno
push
test
mov
ljmp
and
shll
cltd
aaa
mov
push
fisttpll
fsts
arpl
dec
in
mov
xchg
push
jno
add
ja
fidivrs
lea
fstpt
xchg
lret
mov
pop
xchg
push
frstor
mov
loope
das
pushf
push
dec
mov
nop
inc
or
hlt
adc
outsl
jge
jl
loopne
sbb
insb
cmp
cmp
rcrb
out
inc
sub
test
adc
out
xor
popl
cmp
cli
xchg
sub
add
and
popf
and
add
push
mov
xchg
xchg
sub
popf
xor
cmp
inc
dec
cmp
bound
mov
movb
jl
arpl
clc
gs
mov
mov
add
jnp
mov
cmc
mov
add
push
mov
mov
movsl
jmp
pusha
pop
dec
add
mov
cmpsb
jge
lds
xor
enter
pop
in
shlb
add
mov
or
dec
aaa
int
sub
and
or
mov
inc
out
test
lds
ss
jns
mov
pop
sub
adcl
sub
je
scas
push
lahf
popf
mov
mov
add
sub
loop
jecxz
xchg
sbb
popf
jg
add
xchg
dec
popa
int3
loop
dec
sbb
das
or
aaa
sbb
int3
shll
scas
nop
or
lahf
pop
adc
inc
mov
push
inc
mov
pop
jmp
and
pop
pushf
mov
pusha
xchg
adc
addb
pop
cwtl
lret
loope
daa
cmc
mov
scas
call
mov
test
rclb
add
maskmovq
testl
cmc
push
adc
std
push
sub
dec
xlat
repz
in
jmp
and
lahf
das
lods
in
aas
mov
loopne
rorb
lods
outsl
dec
in
mov
sti
jmp
iret
test
aam
icebp
fstps
cmp
mov
pop
mov
pop
pop
icebp
pop
ljmp
out
cli
pop
roll
pop
jae
dec
xor
dec
add
stc
xor
cwtl
sub
jnp
and
pop
int
inc
stos
cmp
popa
xor
pop
mov
pop
dec
push
push
in
xchg
cmp
in
dec
sbb
inc
push
cltd
je
clc
or
inc
push
push
mov
inc
fisubl
fldcw
cs
int
push
dec
out
sbb
ds
repnz
bound
testb
mov
xor
lds
xchg
jb
shrb
jns
subl
lea
xlat
dec
es
stc
pusha
das
lods
sub
fwait
cmc
add
xchg
and
adc
cmpl
nop
dec
push
xchg
sub
and
ljmp
out
test
repnz
mov
int3
or
pop
lret
mov
dec
push
xchg
sub
dec
mov
stc
add
pushf
cwtl
cmp
or
mov
popa
jbe,pn
pop
js
add
fdivl
push
sub
scas
mov
sbb
dec
jmp
add
mov
out
adc
insb
or
fs
mov
inc
cld
or
mov
imul
push
syscall
mov
jae
das
outsb
push
and
testb
scas
icebp
in
addr16
enter
add
loope
pushf
popf
mov
fs
push
jmp
mov
adc
xor
xchg
mov
loopne
mov
mov
inc
pop
push
imul
addr16
lock
and
addl
xchg
or
jns
int3
fadds
inc
pop
xor
popa
xor
stos
or
js
paddw
clc
scas
andb
sub
mov
add
cmp
adc
lret
insb
and
push
ret
lcall
in
pop
dec
mov
mov
flds
mov
xchg
or
repz
xchg
jge
icebp
inc
aad
fsub
sub
rclb
xchg
xchg
cmp
push
mov
in
mov
shll
mov
cmp
or
scas
cmp
pop
outsl
jle
mov
outsl
sub
xor
loop
bsf
aaa
into
pop
fstl
mov
pop
add
bound
icebp
rcl
fwait
cld
jbe
pop
pop
or
aas
mov
jl
stc
enter
cmc
dec
or
sub
pop
icebp
dec
jno
dec
sub
aad
adc
fwait
movsb
hlt
adc
xchg
int3
lret
sbb
xor
jl
daa
lock
cmp
xchg
mov
addr16
jl
rcrb
pop
sbb
lods
sub
sub
popa
pop
cmpsb
rorl
scas
jmp
fistpll
fisubs
push
mov
jge
loopne
sti
xchg
jmp
or
adc
cwtl
xor
push
and
outsb
cli
mov
aam
push
nop
imul
pop
cmp
and
push
push
and
push
sub
jno
and
jns
push
fbld
sub
inc
pop
xchg
lcall
and
popa
mov
sub
or
enter
sub
insl
aam
aam
mov
fadds
pop
push
pop
stos
jbe
mulps
in
pop
decl
aam
mov
push
gs
xor
andl
and
push
lea
mov
mov
mov
fsubrl
addr16
enter
mov
insl
xchg
hlt
loope
mov
lods
outsb
cmovbe
ja
iret
decb
cmc
and
cmpsb
xchg
adc
inc
mov
imul
or
dec
insl
push
imul
xor
xchg
pop
jl
loopne
cmp
sbb
pop
cmp
sub
xchg
adc
mov
push
lea
movb
in
loope
out
dec
dec
lods
xchg
into
jl
mov
lock
movsb
fisttpll
inc
pusha
insb
lock
sbb
outsl
shl
dec
faddl
sub
test
popf
out
aas
add
pop
jbe
pusha
clc
push
lods
aaa
fmulp
jg
cmp
fildl
mov
andl
jle
ja
inc
cmp
cwtl
mov
in
rol
dec
in
pop
je
mov
and
mov
mov
sub
enter
mov
mov
lods
jg
mov
pop
xor
sbb
pop
enter
lret
lret
addr16
cs
adc
push
sbb
ficompl
inc
popa
xor
pop
mov
in
test
push
dec
and
pusha
push
jge
xor
add
pop
and
cmp
cmpsb
sbb
fcoms
or
jnp
push
pop
mov
mov
pop
mulb
sarl
push
push
in
aaa
jae
dec
sbb
mov
repnz
cld
jecxz
dec
pop
xor
rol
inc
cmpsl
sbb
mov
ffreep
jno
push
sub
andl
stc
cmc
cli
add
xlat
cs
xchg
dec
popf
les
push
dec
mov
or
or
add
dec
pop
and
fiaddl
xchg
xor
add
stc
xor
xchg
push
ficompl
mov
in
in
test
add
mov
stos
fisttpll
xor
add
repnz
mov
imul
push
popf
push
inc
xor
dec
jmp
jo
aaa
call
jbe
repnz
adc
pop
leave
pop
add
push
add
jmp
adc
mov
mov
push
movsb
aas
ror
jecxz
rorl
mov
stc
sub
lret
pop
mov
or
jmp
jne
cmpsb
xchg
je
sub
mov
ret
push
inc
mov
cs
in
clc
mov
cmpsl
cmp
fdiv
into
enter
cmp
addl
inc
and
lock
stos
std
push
xor
mov
arpl
insl
add
dec
in
fistps
mov
aas
fdiv
xchg
cmp
cmpl
pop
dec
mov
rol
stc
push
inc
sahf
xor
out
loopne
scas
adc
pop
mulb
and
in
shrb
mov
add
scas
js
cmpsb
mov
mov
pop
lret
mov
xor
data16
sbb
jnp
in
das
adc
loopne
or
add
test
imul
push
push
inc
arpl
mov
inc
scas
insb
sbb
gs
pop
dec
enter
dec
mov
dec
cmp
add
push
push
push
iret
xor
jmp
test
push
and
mov
add
out
xor
cltd
cmp
mov
mov
ret
insl
dec
shlb
mov
ror
movsb
xchg
shrl
inc
cmpsl
push
cltd
mov
jbe
pushf
lcall
push
mov
lods
outsl
adc
ror
fnstenv
das
cmp
push
adc
shl
mov
lods
inc
mov
push
lret
adc
and
sbb
xor
sbb
aad
hlt
repnz
pop
fldlg2
fsubrs
sub
and
or
mov
icebp
jmp
jge
xchg
pop
mov
mov
mov
in
std
insb
jecxz
sahf
clc
imul
dec
dec
aas
test
fwait
aaa
dec
loopne
div
cmp
rorl
mov
push
inc
push
repz
pop
sar
stc
xor
into
push
sbb
cld
xchg
lcall
out
cmpsb
outsl
pop
imul
mov
dec
mov
inc
mov
and
cld
jns
subb
mov
movsl
ja
insb
loope
adcb
or
rcrb
jae
and
orl
adc
or
jno
pop
sub
xchg
push
xchg
andl
imul
xchg
ja
and
jl
mov
pop
jo
mov
push
sbb
lods
ljmp
call
fcompl
mov
lock
mov
mov
test
aas
jns
repnz
push
ja
or
sbb
pop
shlb
mov
jmp
adc
sarl
sahf
xlat
jmp
dec
rep
cmpsl
icebp
mov
dec
pop
daa
pop
outsl
sbbb
jl
mov
mov
test
cwtl
pop
outsl
pushf
gs
fdivrs
cs
push
cs
popa
pop
out
or
dec
and
mov
push
in
pop
sub
mov
jle
mov
into
mov
mov
int3
mov
pop
and
sub
outsb
aad
dec
test
push
bound
and
or
adc
clc
xor
out
push
lahf
mov
iret
rcll
xor
stos
movsb
inc
adc
stos
push
jge
xchg
push
lods
jp
push
outsl
test
and
push
jb
mov
pop
sbb
negb
add
jle
xchg
popa
data16
jge
push
rorb
scas
push
mov
aaa
and
sub
fisubrs
jnp
negl
push
cmpb
jb
add
xchg
ds
fadds
mov
in
jl
mov
js
mov
pop
inc
jbe
add
xor
lods
int3
and
mov
scas
lret
in
movsb
shl
out
sbb
loopne
xor
aad
fsub
cld
pop
mov
cld
in
dec
mov
jo
cmp
or
lret
repnz
subb
fsubrl
test
lods
mov
cld
xchg
mov
insl
frstor
test
shr
stc
inc
cwtl
inc
jb
fwait
fs
and
xorl
fisubl
pop
pop
aaa
mov
out
cmp
das
jne
popa
lods
out
mov
insb
lret
xlat
and
stos
sbb
bound
lretw
shrl
xchg
adc
push
movsl
test
enter
adcl
mov
inc
mov
pop
fs
pushf
push
stc
int
nop
in
cmp
cmp
ja
pop
shll
inc
fisubs
lock
test
inc
int3
push
or
bound
fs
movsl
xor
enter
add
mov
jecxz
pop
das
sub
add
ret
pop
aam
imul
ja
test
mov
cmp
shlb
leave
lock
insb
pushf
push
stc
leave
cmp
fisttpll
test
popa
mov
shll
mov
rol
xlat
repz
push
movsb
or
js
loopne
and
push
in
loop
add
add
test
rcll
fcomps
pop
stos
inc
add
gs
test
mov
sub
add
pusha
fwait
mov
cmp
sbb
push
add
test
mov
xchg
pop
dec
in
push
lea
icebp
daa
pop
pushf
sbb
imul
and
je
push
aam
lods
mov
ret
test
jne
and
xchg
xchg
es
cmc
cmp
adc
lock
jo
hlt
nop
adcb
scas
setge
mov
push
popf
inc
iretw
jne
clc
and
mov
scas
cmp
and
xlat
inc
repnz
gs
dec
insl
mov
or
out
or
jne
lods
das
push
mov
xchg
clc
xchg
movsb
in
sub
mov
mov
ja
mov
jbe
mov
cmp
sbb
jno
inc
lahf
xor
mov
lods
add
push
inc
mov
je
test
xchg
jno
loop
fmull
sbb
jb
or
xchg
sub
push
and
adc
sub
mov
jg
lea
pop
cld
daa
outsl
fidivs
jne
sbb
movsl
adc
mov
sti
add
rclb
mov
cmc
add
mov
sbb
cmp
leave
fs
pop
outsl
daa
ds
xchg
sarl
mov
sub
into
jmp
add
cmp
cmpsl
cld
xchg
fdivs
filds
addr16
mov
rcrb
mov
add
fldt
push
lret
jmp
and
adc
mov
and
xchg
sbb
dec
jno
xchg
lahf
mov
sbb
and
call
lods
dec
pop
mov
and
push
xchg
push
and
mulb
push
mov
call
das
sub
cmp
jecxz
jb
out
leave
jmp
cli
inc
pop
adc
out
add
hlt
xchg
mov
jl
ljmp
and
xchg
les
sbb
into
cmp
fwait
rorl
inc
shrl
cmp
in
fs
nop
sbb
pop
mov
mov
push
lcall
jo
lret
xchg
into
inc
inc
sub
pop
addr16
xlat
and
add
test
aam
jl
inc
popa
adc
mov
push
mov
jb
js
mov
dec
popf
mov
movsl
cld
or
mov
or
mulps
nop
or
xchg
pop
mov
negb
ret
je
add
jo
push
mov
lret
insl
loopne
sub
or
les
or
cmp
pop
js
cld
movsl
js
xchg
xchg
mov
test
dec
and
js
and
in
xchg
ja
add
cli
xchg
bound
sbb
adc
jnp
and
adcl
xor
and
adc
cs
jns
das
mov
mov
jbe
sub
cmpsb
arpl
jmp
lock
push
add
fwait
xchg
or
cmpb
sbb
push
jge
sbb
test
repz
jne
clc
or
subl
pop
sub
jl
lahf
notb
push
cmp
mov
andl
sbb
mov
sbb
pop
and
add
and
inc
push
leave
mov
dec
lods
arpl
mov
insl
sbb
cmc
loop
mov
inc
mov
lahf
or
jmp
add
scas
aas
jg
pushf
pop
and
int
sahf
jg
xchg
jb
cmp
adc
fnstsw
fadds
bnd
mov
mov
imul
fsubl
pushf
mov
cmp
ss
pop
cli
sti
fwait
add
push
xchg
jb
ret
out
inc
sub
xor
jg
adc
stos
sbb
jb
sbb
sbbb
loope
dec
push
xor
mov
daa
inc
xor
fnstcw
rorl
jg
jle
add
pusha
mov
mov
push
mov
lea
fsubr
imul
mov
insl
rorb
dec
mov
lret
repnz
mov
or
in
je
aas
cli
pop
mov
sbb
inc
inc
aad
lcall
push
mov
loop
aas
mov
jmp
cmp
pop
icebp
cld
ljmp
xchg
push
mov
mov
mov
adc
jbe
flds
adc
aad
in
test
add
or
jb
adc
popf
lds
mov
cli
pusha
rorl
cld
sarb
or
loopne
xchg
sub
push
mov
pop
inc
dec
in
aaa
or
orl
jno
adc
js
xor
push
dec
jecxz
cmp
movsb
mov
loop
or
sahf
xor
add
in
ret
pop
dec
sub
mov
nop
jmp
add
test
inc
loopne
iret
cmp
in
jmp
ret
js
rcrb
sbb
or
pop
repnz
imul
xchg
out
xor
sub
mov
imul
in
std
rclb
cmpl
inc
pop
mov
ret
cmp
jo
sbb
dec
cmpsb
shrb
loop
dec
dec
jg
jns
jns
inc
pop
xchg
lods
sbb
sub
imul
or
jb
pushw
pop
js
lods
jmp
pop
aas
andl
add
lcall
sub
repz
rorl
andb
aad
gs
arpl
shlb
orl
pushf
push
xchg
mov
lret
push
dec
cmpsb
inc
insl
pusha
rcrl
sub
add
int
push
dec
popa
ret
into
cmp
jno
sub
lock
jno
int3
in
push
push
push
out
cwtl
stos
lcall
js
adc
sub
xor
xchg
fisttps
mov
fldcw
or
push
in
lods
push
jmp
sub
adc
rorb
jp
andb
pop
dec
loop
in
cmp
imul
mov
stos
jbe
mov
inc
fsubrs
pop
imul
jb
mov
daa
jle
rcrb
stos
clc
out
xchg
cmp
inc
jl
mov
gs
fs
js
cmpsb
rclb
or
sub
gs
scas
pop
dec
loopne
fistpl
xchg
aaa
mov
sahf
jbe
mov
pop
cmpsl
aas
mov
outsl
push
add
inc
jmp
mov
imul
les
scas
cmc
jp
je
call
cmpsb
stc
cli
mov
cld
lcall
mov
cmp
push
xor
pop
mov
shlb
inc
inc
push
shll
out
fbld
sub
dec
add
cmpsb
aaa
jecxz
sbb
ja
dec
mov
insb
loop
ficoms
add
fs
mov
jb
ljmp
pop
int3
inc
je
cwtl
stos
jmp
sub
sbb
and
nop
icebp
mov
lods
push
cmp
insl
loopne
jae
movsl
jo
js
jecxz
aas
dec
adc
outsb
sbb
push
mov
clc
mov
cli
xlat
pop
jg
pusha
pusha
mov
popf
mov
or
pop
jecxz
adc
xor
dec
test
or
and
jp
adc
and
push
push
lods
xorl
inc
pop
dec
or
es
adc
xchg
pop
imul
int3
lcall
fimull
cmp
pop
insb
js
jmp
pop
mov
jo
pushl
cmpsb
cltd
addb
in
or
pop
ficoms
mov
sub
xor
xchg
aam
pop
jbe
notb
jmp
inc
dec
and
mov
stos
pop
mov
xchg
mov
rorl
jo
xor
inc
mov
nop
lods
mov
push
jne
out
adc
and
mov
inc
aam
jo
gs
mov
pop
imul
sub
adc
mov
cmp
into
movsb
dec
dec
jecxz
mov
inc
mov
dec
sub
dec
movsl
fists
mov
sub
es
sub
sub
outsb
rcrb
push
mov
pop
push
outsb
jnp
mov
iret
repz
rorb
fucomi
inc
push
in
aaa
addr16
imul
push
adc
outsl
adc
and
testb
nop
mov
mov
add
fcomi
pop
cmp
in
rcll
mov
jno
aaa
mov
repz
inc
decl
add
mov
into
add
stos
xlat
jnp
and
data16
sbb
or
sbb
mov
push
lret
xlat
xor
testl
xchg
aad
xor
xchg
pop
testb
dec
sbb
cltd
add
cmp
and
orl
lahf
scas
dec
daa
jo
pop
insb
jg,pt
sub
repz
pushf
xor
sti
pop
and
and
aaa
jne
int
daa
outsl
das
jp
lock
int3
jg
sub
pop
dec
repz
shr
push
scas
cmp
fildll
or
pushf
inc
es
sbb
mov
pushf
push
insl
rolb
imul
test
mov
adcl
add
cmpsb
xor
and
push
mov
push
xchg
push
out
std
mov
adc
nop
sub
ret
xor
jl
cmp
fisubl
in
dec
dec
insb
xor
jae
xchg
jg
leave
and
mov
pop
loope
mov
inc
insl
pop
repnz
push
sbb
popl
pop
and
mov
pop
inc
addr16
ret
clc
and
mov
push
call
and
outsl
push
call
lea
adc
test
mov
mov
inc
xchg
aas
iret
data16
inc
fcmovne
pop
jb
cmp
int
sarb
add
push
ljmp
call
sub
das
movb
xor
cmp
in
js
es
lret
xlat
inc
jbe
xchg
test
arpl
jae
dec
mov
in
mov
sbb
pop
lea
movsl
outsb
add
insb
mov
mov
cmp
stc
adc
mov
pop
dec
pop
jg
bound
xchg
outsb
push
cmp
clc
nop
movsb
pop
flds
inc
push
sbb
mov
gs
pop
xsha1
cmpsb
mov
xor
add
push
inc
fstpt
call
dec
negb
mov
cmp
mov
push
push
in
xor
movsl
js
jae
dec
dec
pop
out
jg
cmpsl
add
shr
push
add
xchg
dec
dec
cmc
dec
inc
cwtl
mov
jecxz
and
sub
fidivrl
jbe
inc
bnd
sbb
sbb
inc
fsub
mov
push
pop
push
jmp
fs
mov
or
inc
scas
lds
rorb
inc
lret
in
sbb
xchg
int
dec
pushl
int
insb
pop
mov
xchg
pop
std
sahf
mov
lret
mov
out
xor
clc
subl
push
aad
jle
mov
lock
fadd
push
push
mov
int
add
leave
es
pop
fisubl
lds
push
jb
data16
pop
cltd
cmc
jnp
es
in
jle
xor
sbb
mov
jle
lds
pop
sbb
jno
cmp
scas
inc
clc
xor
jg
mov
push
ljmp
jno
movsl
outsb
fs
sbb
jmp
push
dec
mov
in
repnz
xchg
fs
js
test
push
popf
scas
dec
fucomip
ficompl
xchg
inc
into
cs
add
add
xchg
scas
dec
pop
push
aas
xor
jo
jecxz
fldt
fwait
jl
addb
lahf
xor
jecxz
adc
inc
xchg
jp
sbb
and
cmp
mov
cmpsl
cmpsl
ret
mov
dec
mov
cmpb
or
adc
lahf
hlt
lea
adc
test
pop
mov
ljmp
aad
je
js
cmpsb
bound
push
add
jmp
xlat
inc
testl
test
mov
fsubr
jno
and
fbstp
movsl
dec
jae
inc
dec
push
jo
xchg
int3
cld
lods
cmp
push
lods
xchg
push
jns
lcall
sbb
movb
fimull
adc
andl
push
sarb
pop
loope
xchg
mov
add
mov
cmp
cli
pop
mov
aad
pop
push
and
stos
or
add
inc
test
or
xchg
mov
inc
out
inc
test
jbe
rorl
mov
arpl
rcrl
mov
mov
mov
sbb
addr16
mov
dec
aad
pop
cmc
sbb
mov
xlat
shrl
cld
xlat
cltd
out
pop
mov
test
testb
add
push
daa
jmp
dec
xchg
icebp
enter
icebp
cmp
ljmp
cmp
data16
pop
adc
push
push
pop
mov
cmp
add
inc
push
inc
pop
fwait
cmp
jno
das
push
popa
outsl
fdivrl
test
in
fstps
mov
rolb
enter
dec
add
jle
jns
cwtl
jnp
push
lods
adc
pop
jp
push
movsb
add
mov
pusha
flds
pop
and
xlat
cs
dec
lds
cmpl
pop
shlb
dec
push
jge
popa
jl
lahf
pushf
cli
xchg
out
in
test
fimull
loop
or
imul
lcall
mov
ret
data16
mov
lcall
pop
mov
mov
jno
mov
ret
pop
das
mov
xlat
stc
inc
or
mov
adc
int
cmpsl
sbb
popa
cwtl
out
sbb
lea
into
adc
push
jmp
js
xchg
cmp
sbbb
jnp
push
testb
dec
roll
imul
cld
mov
fiadds
lahf
pop
push
lods
mov
jo
mov
xchg
pusha
push
scas
xor
xor
pop
and
mov
int3
sti
test
in
or
jg
pop
sub
pop
and
xchg
icebp
sbb
in
push
scas
test
jmp
jns
jo
cmp
ret
fdivl
out
repz
ja
mov
xchg
sub
scas
lcall
and
add
ret
aas
hlt
stos
or
mov
mov
mov
ljmp
scas
add
lcall
imul
std
inc
hlt
push
inc
push
sahf
icebp
fwait
lret
pop
jb,pt
ja
imull
and
mov
push
mov
cmp
push
fcmovu
mov
push
add
les
test
cmpl
mulb
dec
daa
mov
int
inc
lds
mov
dec
jecxz
outsl
mov
aaa
mov
mov
hlt
xor
aam
das
pop
enter
inc
fisubs
sbb
imul
test
push
fmulp
notl
adc
addr16
mov
pop
pop
push
shrl
xchg
lcall
mov
in
mov
loopne
and
add
shrb
repnz
fidivrs
ja,pn
ficomps
mov
adc
and
test
daa
iret
mov
add
lea
in
and
insl
and
hlt
and
mov
add
es
jb
xchg
popf
xor
push
cli
jmp
lcall
in
lcall
stos
sub
xchg
pop
lret
mov
mov
mov
std
mov
sbb
in
jp
sub
jp
and
insl
push
fwait
test
in
cmpsl
sbb
mov
mov
data16
xor
add
imul
lahf
xor
lods
insb
jnp
pop
inc
inc
cmp
add
ja
fwait
xor
push
dec
mov
testl
mov
dec
pop
movsb
ja
outsb
iret
mov
or
jbe
cmp
and
or
xchg
jo
jno
jle
or
cmp
into
pop
push
adc
inc
int
cwtl
and
pop
push
push
cmp
shl
adc
mov
mov
ja
out
lret
mov
mov
aad
fldl
test
std
sub
ret
sub
adc
pop
mov
je
fs
fdivrl
pushl
lds
jne
cld
stos
push
jns
mov
addl
add
or
push
in
xchg
cmp
lods
hlt
mov
mov
fistl
loope
mov
cmpsl
fists
mov
dec
lds
aam
stos
and
cmpsl
ds
xor
in
push
dec
in
adc
insb
scas
adc
mov
sub
pop
or
xor
xlat
cmpsl
incb
cmpsl
adc
addb
imul
sbb
fcmovnb
test
mov
dec
push
aas
xchg
pop
hlt
adc
jp
test
push
xchg
pushf
int
les
mov
out
dec
hlt
dec
int
jg
rolb
xorb
pop
xchg
adc
fcmovne
mov
lea
aam
movzbl
in
sbb
nop
cmpsl
shll
sub
mov
push
clc
cmpsl
push
xor
iret
arpl
rcrb
mov
sub
sub
dec
cmovg
xorb
cmp
jmp
fcmovnu
cmp
and
clc
mov
inc
mov
dec
pop
and
int
add
jne
andb
or
inc
inc
test
dec
pop
insl
js
sti
mov
pop
sub
inc
mov
xor
push
push
aaa
mov
sti
mov
rcrl
cmpsb
jae
inc
push
aad
mov
ljmp
xor
mov
sbb
int3
testb
loop
and
popf
xor
lea
rcrb
ficoml
pop
sti
jbe
mov
inc
call
or
out
jbe
or
lock
dec
pop
jge
rcl
push
push
add
out
aaa
std
adc
adc
shl
icebp
jno
mov
lods
in
testl
arpl
cmpsb
dec
mov
cmpsl
mov
jp
or
xchg
pop
mov
mov
push
pushf
test
xor
cmc
xor
jae
jge
xchg
inc
and
jns
popa
inc
lret
mulb
cmp
pop
ljmp
lea
xchg
loope
in
lods
leave
or
mov
cmp
sbb
jmp
xchg
fs
mov
jmp
jnp
push
outsl
outsb
fwait
jle
imul
xchg
mov
cmpsb
jp
fmul
sub
cld
mov
mov
lret
sbb
das
andb
sub
leave
mov
add
stos
or
mov
int3
cltd
xor
inc
push
std
cmp
jae
fsubrl
inc
or
pop
jg
inc
out
mov
loop
mov
fs
push
les
out
xchg
inc
jmp
xor
or
xchg
jb
sub
sub
jg
push
scas
sahf
mov
cs
sub
sub
ja
repnz
jmp
or
push
or
vmwrite
jge
cmp
jbe
sbb
pop
push
jle
clc
bnd
scas
rcl
out
adc
setle
ficoml
jp
and
jge
popa
sti
es
mov
ja
dec
and
fiaddl
cmp
lods
ret
pop
sbb
stos
inc
lods
cmp
leave
int
lea
fidivl
xchg
outsb
mov
push
dec
adc
outsl
fistl
bound
int
mov
aaa
xor
jnp
push
mov
add
addl
dec
fidivs
push
push
jmp
fwait
shlb
fs
pop
inc
mov
sub
sub
sbb
jno
rorl
sti
add
out
test
sbb
pop
cwtl
insl
xor
xor
mov
mov
adc
aaa
cmp
mov
adc
stos
jno
cmp
mov
dec
lahf
stc
push
into
and
xor
scas
mov
push
mov
cli
adc
iret
dec
andl
lea
xchg
fcmove
movsl
or
xor
outsb
pop
mov
inc
xor
movsl
mov
push
insl
sbb
adc
mov
into
lea
jmp
ds
push
sub
adcl
loopne
shl
inc
rcrl
sbb
test
push
mov
adc
xlat
sbb
std
dec
bnd
mov
add
mov
mov
mov
add
and
je
mov
push
movsl
push
cmp
movsb
aas
aam
push
cmpsl
adc
mov
das
int3
jle
sti
jl
sub
adc
sbb
ret
mov
movsl
stc
ror
xor
and
and
es
shrb
dec
mov
ljmp
pusha
cmp
push
repz
lock
mov
xlat
adc
or
jle
lret
cmp
mov
frstor
mov
sbb
push
imul
sbb
jne
dec
mov
xchg
es
popf
bound
sbb
in
cmc
cmp
fidivrs
push
outsb
loope
icebp
mov
es
cmp
es
fwait
xor
or
mov
movsb
test
pop
sub
mov
cmp
mov
enter
jge
icebp
and
cmp
add
movsl
arpl
cmp
sbb
jmp
lods
jbe
dec
cmc
xor
xor
test
ljmp
aaa
mov
cmp
sub
jg
mov
cmp
cmp
mov
insb
push
jo
xor
mov
int3
roll
je
push
in
adc
xchg
clc
jae
sub
sbb
enter
in
sub
xor
mov
push
mov
dec
mov
fldenv
xchg
pop
mov
and
sub
fwait
out
test
ret
scas
inc
or
cli
jno
push
mov
cmp
pop
sbb
mov
insb
sbbl
mov
insl
repz
mov
in
test
pop
and
das
push
stc
mov
adc
mov
ljmp
shll
repz
inc
js
lahf
mov
cli
pop
or
sub
ja
loopne
insl
adc
insl
test
jmp
add
inc
lahf
inc
xor
cmp
arpl
push
test
pop
sbb
dec
cmp
daa
repz
jae
add
jne
mov
nop
xchg
push
insl
roll
mov
ret
jmp
cmp
jecxz
inc
cwtl
lock
mov
sarl
or
nop
sub
daa
xchg
lahf
call
add
pop
cmp
mov
hlt
mov
cwtl
jl
fwait
mov
mov
inc
cmp
and
fstpt
dec
adcl
xchg
mov
testl
sbb
cmpsb
mov
inc
adc
ja
icebp
insb
loope
jbe
or
out
cmp
sub
repz
jne
dec
orl
dec
je
xchg
mov
jb
dec
push
sub
out
das
pop
addb
jo
orb
adc
add
dec
xchg
cmp
mov
subl
hlt
xor
inc
jecxz
sbbl
dec
jge
jbe
add
scas
xchg
add
push
jae
jae
popl
iret
mov
xorl
or
dec
nop
daa
jnp
xchg
xor
scas
fnsave
xchg
push
cli
push
frstor
fistps
xor
jo
add
pop
adc
sbb
jne
mov
call
inc
or
fs
inc
popa
adc
nop
sbb
fcomip
and
fwait
xor
inc
nop
sbb
pop
xor
mov
mov
add
jecxz
mov
pop
push
jmp
sbb
xchg
inc
xchg
dec
and
jo
outsl
jecxz
push
mov
pop
aam
xchg
outsb
arpl
sub
shrl
decl
in
inc
mov
mov
pop
sub
mov
popa
cltd
xor
jbe
ficomps
repnz
lret
or
mov
and
out
sbb
and
cmpsl
push
jp
adc
addl
lods
loope
jbe
cli
data16
icebp
mov
jecxz
test
mov
dec
lret
cmp
adc
loop
push
mov
bound
push
call
mov
adc
nop
mov
ret
xor
xchg
push
iret
gs
insb
fwait
xor
in
test
jae
add
mov
cmpsl
adc
dec
insl
lea
add
pop
out
jp
loope
and
jmp
or
dec
jbe
ds
and
and
test
xchg
loope
dec
mov
mov
scas
movsb
repz
iret
xchg
sti
pop
cs
lds
or
adc
xchg
lods
jb
jbe
or
add
cmpsb
fwait
pop
in
push
mov
and
sbb
jl
outsl
dec
xchg
or
les
pushf
mov
sbb
push
cmp
inc
sub
repnz
push
xlat
sbb
push
sub
pop
sbb
add
pushl
mov
lods
pop
stos
sub
sbb
imul
xor
push
out
jle
jo
popf
aaa
fidivrl
sbb
jg
scas
mov
lea
mov
sub
es
xchg
xor
cmp
pop
pop
push
in
jle
fistl
test
cmp
gs
cmpb
mulb
mov
ret
mov
loop
enter
sub
mov
push
lods
pop
fidivrs
inc
sbb
hlt
mov
adc
imul
mov
das
cmp
mov
in
cmp
pop
mov
mov
lahf
stos
lfs
add
dec
xchg
or
cs
pop
mov
jp
add
adc
mov
aad
jge
and
xchg
and
mov
in
inc
in
insl
add
sarl
dec
pop
dec
or
fsts
lcall
add
sub
xchg
push
mov
inc
mov
dec
fs
inc
fisttpll
fdivrs
or
dec
push
je
mov
aas
dec
mov
imul
and
push
mov
std
add
loope
dec
repnz
jp
subl
jl
dec
and
clc
push
mov
lods
push
xchg
fmuls
add
xchg
cmp
lret
push
adcl
or
push
xchg
test
aaa
jae
repz
xchg
add
add
xchg
or
dec
xchg
add
xor
cmp
pop
lahf
jae
xchg
imul
fadd
arpl
ret
inc
ss
je
push
mov
arpl
add
sub
filds
add
insl
ss
sub
add
stc
inc
mov
addr16
js
scas
mov
mov
add
lods
jge
sahf
and
push
xor
mov
ret
cwtl
ret
sub
inc
xchg
add
bound
lods
das
mov
xor
xor
pop
jbe
inc
repnz
movsl
mov
ljmp
mov
mov
sti
inc
aas
mov
int3
sahf
clc
bound
scas
bound
bound
jns
pop
cmc
ds
pusha
fidivs
xlat
gs
andb
mov
mov
scas
adc
shr
loop
adc
fdivrs
out
xchg
xor
jmp
push
cmpsl
xchg
cmp
cmp
or
das
pop
adc
mov
pop
fcmovnb
dec
dec
pushf
repnz
mov
aas
dec
and
ret
rep
or
orb
in
hlt
and
add
aad
xchg
clc
cmp
sbb
out
out
push
or
insl
insl
loopne
jbe
insb
test
scas
xchg
push
or
dec
in
sbb
arpl
add
mov
mov
jmp
cmpl
jmp
cmp
jmp
roll
sub
es
pushf
cwtl
inc
data16
mov
lds
pop
iret
xlat
call
jl
test
or
adc
jns
repz
pop
adc
scas
dec
mov
adc
inc
rclb
add
sbb
pop
icebp
mov
cmp
in
ds
int3
arpl
or
mov
jne
inc
repnz
flds
repnz
cli
xchg
std
popl
mov
add
roll
loopne
ds
cmp
gs
add
push
push
frstor
xor
and
cmpsl
testb
cmp
fidivs
lods
and
push
pop
std
imul
cmp
in
dec
gs
mov
sbb
mov
mov
ret
dec
add
mov
mov
movsl
insl
add
mov
sub
cwtl
insb
lcall
or
or
repnz
jg
lcall
in
incb
roll
lds
and
add
fs
cmp
xor
jmp
push
jl
xchg
mov
jge
out
adc
jns
inc
add
mov
and
data16
jecxz
xor
icebp
gs
xchg
in
jns
inc
and
xchg
dec
mov
jno
mov
cli
mov
pushf
daa
into
fsts
nop
inc
negw
xor
jno
adc
leave
mov
xor
jns
pusha
and
inc
test
inc
iret
popa
stos
adc
faddl
test
push
dec
pop
repz
jp
lahf
sbb
xchg
dec
mov
lahf
cmp
mov
jp
pop
push
call
pushl
pop
out
dec
inc
pop
addr16
aas
inc
arpl
inc
inc
ja
pop
int
pusha
or
ret
mov
push
sti
sarb
xchg
mov
sub
lea
dec
pmulhuw
push
popa
mov
sbb
cmp
pop
insb
mov
es
inc
fstps
dec
inc
pcmpgtw
call
adc
add
pop
push
mov
hlt
push
pop
push
movsl
dec
std
sub
add
push
insl
xor
fnstenv
jo
mov
xchg
mov
popf
loop
aad
insl
push
push
and
pop
test
sub
movsl
xchg
lods
adc
ja
pop
cmpsl
outsl
pop
scas
lahf
fmuls
nop
nop
lods
sub
xlat
imul
push
fbstp
sub
or
sbb
add
jg
lahf
xchg
scas
add
popf
stc
mov
jno
pop
ret
cmp
dec
in
mov
pop
xor
push
sbb
out
mov
das
or
sti
fxch
jmpw
sbb
sub
cmp
push
xor
pop
shr
out
mov
or
lret
push
js
sub
mov
fidivl
add
je
pop
stos
insl
out
mov
push
push
mov
xchg
inc
or
sub
push
clc
in
movsb
repnz
sub
pop
rorb
mov
mov
push
push
xchg
xor
mov
sarl
mov
fadd
inc
pop
pop
jne
push
cmpsl
sbbb
pop
and
int3
pop
add
mov
leave
xlat
pop
fwait
sub
pop
add
idivl
aaa
rcrb
ljmp
mov
mov
mov
arpl
gs
inc
cltd
stos
testb
mov
daa
call
mov
push
inc
hlt
out
es
sbb
aam
inc
mov
imull
xchg
negl
rorb
aam
mov
loop
fildll
add
pop
js
mov
int
mov
sub
mov
xor
xchg
push
mov
call
in
imul
sti
icebp
daa
push
push
sbb
test
sbb
popa
into
rol
cmp
push
int3
popa
loop
arpl
loopne
pop
dec
insl
dec
ljmp
pop
adc
in
mov
lods
subl
or
jb
sbb
sbb
xor
ret
rcl
sbb
mov
or
push
jno
in
jle
pop
mov
pop
pop
fwait
add
inc
aad
js
mov
and
or
mov
enter
fucomip
fmul
or
sbb
cmp
dec
stos
lea
pop
ljmp
pop
mov
andb
test
into
jl
add
pop
mov
xor
out
and
out
mov
push
jo
in
int3
out
mov
adc
test
and
push
cmp
fdivs
xor
stc
mov
femms
inc
cwtl
mov
gs
mov
pop
testb
mov
in
in
adc
int
sub
mov
xchg
aas
mov
sub
das
sarl
xchg
scas
and
out
icebp
xchg
and
daa
fs
test
int
or
in
inc
cmpsb
jge
lock
add
inc
push
lea
pop
sti
push
movsl
popf
stc
movsl
or
and
imul
lea
push
xor
movsb
inc
mov
adc
clc
push
pop
gs
aas
outsb
fiaddl
popa
rorb
adc
gs
loope
lods
dec
jg
add
sub
adc
and
adc
adc
xchg
ds
xlat
add
pop
subb
out
adc
sbb
stc
fstpl
mov
lcall
fsubrp
repnz
sub
push
jne
or
sar
and
rcl
lods
push
outsl
out
or
mov
xlat
leave
mov
cltd
mov
sbb
dec
push
scas
or
mov
shl
jge
sbb
push
mov
test
dec
gs
adc
sub
aas
scas
inc
stos
daa
rcr
inc
int
dec
test
loope
shlb
addr16
cltd
or
bound
loop
mov
jl
sbb
jo
aas
sub
cld
inc
inc
xlat
lret
pop
mov
mov
mov
pop
mov
and
lret
mov
outsl
mov
pop
add
mov
xchg
cmp
cmpsb
fucomip
in
popf
andl
stos
add
or
sub
xchg
mov
lds
outsl
mov
xchg
pop
inc
psadbw
addr16
mov
push
fs
fucomp
mov
mov
scas
inc
mov
xor
das
jmp
negl
mov
push
mov
or
imul
es
dec
adcl
aaa
fmull
pop
xor
mov
test
fwait
sub
movsb
pop
mov
push
fsts
mov
rclb
roll
mov
bound
sub
in
push
pop
fld
or
lods
pop
stc
insb
popf
clc
pop
xchg
in
add
das
and
movsb
push
popf
xor
aad
mov
mov
cmpsl
jns
lods
sub
pusha
mov
fmull
jge
enter
push
sbb
aas
add
or
data16
pusha
sub
sub
lds
xor
nop
loopne
mov
cmp
cmpsb
mov
xchg
xor
les
add
cmp
jg
add
pop
mov
and
out
shll
cmpsl
mov
add
int
and
out
test
add
sahf
testb
ljmp
es
sub
dec
int3
arpl
sub
jecxz
xor
andl
les
subb
cmp
push
pushf
jg
in
cld
pop
mov
pop
insl
add
gs
xor
aaa
lds
jb
jge
fs
fldl
fs
push
movsb
mov
mov
xchg
loopne
sub
adc
mov
push
lahf
shrl
or
xor
repz
stc
leave
fs
push
pop
sub
jecxz
xor
inc
out
jns
rcrb
popf
pop
pop
cmc
xor
cmpsl
inc
cmp
dec
push
push
out
or
fwait
add
mov
mov
loope
cwtl
imul
dec
xor
stos
stos
in
cmpsb
jecxz
adc
cmp
dec
ret
mov
add
or
lock
xchg
dec
mov
arpl
notb
dec
jne
popf
fsubl
mov
mov
or
jo
jle
xrelease
loop
pop
mov
jl
clc
insl
lods
add
fidivs
mov
lret
inc
inc
insb
mov
fs
gs
les
je
insb
adcb
in
or
rorl
sub
outsb
sub
lahf
cmc
in
mov
xorb
add
insl
push
mov
push
aaa
xor
mov
mov
sti
xchg
fnstenv
repz
sub
dec
mov
jecxz
inc
sbb
xchg
xor
xor
and
inc
sub
or
inc
sbb
ds
out
hlt
dec
fstp
ds
shll
push
mov
int
mov
cs
leave
scas
and
inc
stos
hlt
xchg
mov
cs
ljmp
jnp
mov
mov
push
inc
mov
pop
mull
gs
inc
xor
das
test
lods
ret
repz
out
pop
jg
xor
rclb
mov
sti
test
push
fisubrl
dec
imul
outsl
push
imul
mov
ret
loop
jg
dec
mov
les
out
adc
pop
jg
lahf
push
pop
pop
loopne
dec
push
movsl
mov
sub
repz
pushf
or
add
cmp
mov
arpl
loopne
pop
jg
sti
push
xchg
mov
stc
je
rcl
insw
fbstp
faddp
outsl
sub
xchg
pop
and
pop
pop
inc
mov
decl
daa
popf
aam
xchg
push
push
mov
inc
lret
sbb
pop
in
scas
cmpsl
ds
pop
dec
sbb
data16
pop
lret
push
fsubrl
adc
mov
push
xor
pop
add
pop
sbb
pop
jp
xor
cwtl
jg
in
scas
dec
popa
add
push
divb
xchg
sub
dec
adc
idivl
fisubrl
andl
pop
inc
in
aad
mov
cmpsb
jecxz
sbb
sbb
adc
in
rorb
sub
js
bound
lret
mov
jno
aad
dec
xchg
scas
je
fsubrs
xchg
fsubs
sub
inc
imul
inc
stos
or
je
push
jb
xchg
fsubrs
jp
test
jno,pn
mov
adc
and
push
push
add
shll
adc
imul
not
addr16
pop
repz
cmp
addb
mov
xchg
xor
cli
inc
fwait
cld
xchg
int
sbb
adc
sbb
cli
lcall
jno
sahf
and
push
icebp
cmp
ss
int
push
nop
pop
cld
push
inc
fldt
jg
aas
and
and
lea
popa
or
popf
fidivrl
pop
repz
test
stos
push
cmp
enter
or
lcall
cmp
jo
xchg
mov
push
arpl
iret
test
aaa
inc
pop
es
jo
movl
cs
add
in
jo
mov
imull
inc
push
imul
mov
mov
das
jecxz
pop
daa
sub
mov
lret
imul
movsl
mov
lea
sbb
nop
inc
sbb
scas
cmp
cmp
fdivrl
push
inc
loope
das
jecxz
fwait
jae
sub
jl
xorl
pop
call
and
push
add
cli
adc
sub
jbe
stos
push
push
cwtl
mov
push
jo
ret
mov
mov
jle
cmp
add
filds
or
das
mov
sbb
push
jg
jl
mov
adc
xlat
mov
mov
cld
loope
add
loop
das
lods
ja
add
test
mov
sti
cmc
adc
xchg
adcl
test
popf
fnsave
push
pop
cmp
mov
mov
adc
jle
or
mov
pop
xor
lea
mov
cmp
clc
andb
dec
jno
lea
fsubl
mulb
adc
cmpsl
fidivrl
iret
xchg
mov
xchg
test
in
cmpsb
cs
xor
into
and
mov
jbe
sub
mov
ja
add
lret
pop
adc
mov
sbb
lret
in
into
test
mov
enter
mov
leave
xor
inc
and
add
lret
dec
or
daa
loopne
push
cmc
movsl
stos
out
cld
xchg
push
addb
aas
in
jne
sbb
jae
sbb
ficoml
aaa
push
lret
push
mov
loope
and
divb
cmp
sub
and
es
push
jae
xor
adc
bound
or
fwait
or
dec
inc
fnstsw
leave
popa
mov
leave
jbe
mov
or
cmp
stos
dec
adc
lods
push
xor
jns
and
adc
in
add
xor
jg
mov
out
aam
cld
sahf
lods
out
shl
outsb
loope
mov
icebp
cmp
js
filds
mov
pop
arpl
je
lea
inc
pusha
mov
lds
and
push
xchg
lea
in
rcl
mov
js
popf
pop
pop
jne
iret
jbe
ljmp
scas
or
adc
int
fnstsw
dec
cmpsb
int
fstpt
lods
push
aam
jmp
pop
mov
push
das
shll
inc
cld
mov
push
je
cmpsl
push
jmp
sbbl
inc
fcomps
adc
les
mov
push
sbb
int3
mov
arpl
ret
insl
lock
or
movsl
insl
mov
out
and
lods
lds
lock
addr16
bound
push
jl
jo
into
mov
xchg
adc
imul
pushf
mov
mov
dec
pop
push
sbb
out
enter
cmc
outsb
sub
mov
sti
inc
or
xor
pop
addl
pop
jbe
push
iret
enter
clc
fiaddl
mov
imul
ret
inc
dec
push
jae,pn
cmp
imul
add
add
dec
sbb
dec
pop
shrl
movb
ret
icebp
add
cmpsb
xchg
cmp
cmpsl
adc
sub
cli
or
or
mov
lea
hlt
jmp
jmp
das
imul
data16
pop
xor
imul
fs
pop
dec
mov
std
sbb
idivl
inc
shr
push
inc
fcomps
jb
std
pushl
xor
lahf
push
xchg
xchg
inc
filds
adc
and
sub
push
xchg
sub
int
call
cmp
out
mov
inc
jns
sti
push
mov
data16
xchg
sbb
dec
in
cmp
pop
aam
rolb
mov
pop
scas
outsb
sarl
dec
mov
cli
insl
sbb
rorb
clc
mov
mov
mov
and
ficoml
fisttpl
out
push
stos
inc
in
mov
jo
mov
nop
sbb
iret
test
pop
outsl
cmpsl
push
mov
adc
into
gs
mov
or
jle
scas
flds
cwtl
cmp
adc
sub
out
xchg
sub
shll
jnp
mov
adc
aam
cmp
push
pushf
into
out
inc
fnstsw
add
mov
push
lods
sbb
inc
inc
imul
xchg
ljmp
sub
outsb
or
cmpsb
xlat
outsb
fcoms
jp
out
sbb
adc
lds
das
or
aas
lea
repz
inc
pop
inc
push
push
fisubrl
fwait
cmpsl
pop
sti
lret
jae
mov
lea
cld
xor
rcl
and
repnz
cmp
add
dec
push
rcl
jmp
add
outsl
movsl
fscale
or
push
cmc
in
not
insl
sub
sbbl
pop
or
push
insb
xor
push
daa
inc
fnsave
js
lds
adc
xchg
add
adc
loop
lahf
dec
sbb
icebp
call
mov
or
or
xchg
aad
stos
cmp
dec
add
jle
aas
outsb
aaa
push
and
add
mov
mov
pop
xchg
movsl
pop
cmp
xor
daa
repz
sbb
cmp
pop
fldl
inc
cs
mov
adc
push
add
jne
jns
xor
stos
mov
loope
aad
jp
add
pop
adc
inc
push
aaa
out
adc
fsub
mov
fldt
inc
jge
scas
cmc
cmp
mov
sub
test
pop
mov
mov
fists
inc
pop
sbb
dec
aaa
testl
cmpsb
sbb
popf
stos
fwait
push
cs
clc
cmp
jl
lret
sub
push
jae
mov
mov
cmp
test
cmp
or
pop
sub
inc
inc
cli
xor
hlt
mov
push
xor
out
lcall
loopne
aas
inc
sub
add
imul
das
xchg
movsl
mov
xchg
sub
imul
popf
xchg
daa
lcall
push
icebp
mov
push
mov
cmp
mov
dec
idivl
sub
call
in
push
add
es
push
or
pop
adc
divb
es
cli
shll
sub
dec
and
popa
xchg
sub
sahf
pop
lret
push
movsl
mov
or
xorb
shrb
mov
gs
add
call
in
adc
pop
add
nop
lcall
js
adc
int3
pop
mov
flds
pushf
repnz
pop
cmc
sar
ret
xor
out
add
js
push
fwait
sub
dec
repz
lahf
add
jle
xlat
stos
sbb
rorb
push
mov
js
pop
lods
out
aad
testl
enter
mov
add
arpl
adc
and
mov
fstpl
push
imul
mov
sub
mov
repz
mov
out
mov
adc
shl
stc
pop
inc
cs
jno
arpl
or
fidivrs
mov
xchg
bound
push
inc
sar
in
sub
cmp
out
in
test
dec
mov
inc
dec
and
push
jmp
push
incl
shl
repnz
jg
not
ret
adc
pop
mov
lahf
clc
mov
sub
scas
je
imul
push
and
push
popf
adc
test
push
xchg
adc
sbbl
sbb
mov
mov
xor
pusha
and
mov
inc
add
push
aaa
push
jg
mov
and
fstpt
aam
push
popf
js
add
pop
xchg
push
aas
addr16
mov
mov
pop
fstpt
shlb
lds
fists
je
dec
cmpsl
cltd
push
lods
push
fistps
add
cmp
movsb
cmp
mov
xchg
push
ja
mov
adc
mov
in
and
xchg
xor
inc
push
popf
pop
ret
clc
cmp
popa
popf
sub
xchg
jb
imul
push
xchg
jmp
pop
mov
inc
jb
insl
inc
xor
mov
gs
xchg
and
xor
fisubl
xchg
test
cwtl
popf
mov
inc
jnp
jp
mov
jae
addr16
sbbl
orl
and
fwait
imul
cmp
out
pop
jmp
leave
out
jae
ficompl
test
repnz
popa
lods
lahf
or
xchg
or
cmpsl
sbb
es
fisubs
inc
adc
or
movsb
mov
je
xchg
mov
or
clc
or
je
shrb
push
xchg
jbe
mov
cmpsl
pop
cmp
push
leave
lds
dec
pop
adc
xchg
popf
fs
js
pop
das
lock
cli
mov
es
inc
mov
arpl
sub
fdivrs
loop
pop
cmp
jo
mov
shll
jmp
outsl
add
insb
or
aad
bound
jbe
je
push
insl
testb
pop
mov
mov
jae
inc
inc
sbb
adc
cmp
ss
mov
int3
popf
sub
push
lcall
pop
es
cmp
push
jg
adc
je
loope
out
in
push
fldl
add
add
pop
test
cmp
jecxz
jl
push
or
movsl
jle
sarl
sub
fisttpll
sub
jp
or
fnstenv
sub
ja
cmp
fs
jl
push
ficoml
ficoms
in
and
xchg
shll
not
ja
das
push
xchg
fisttps
test
jg
lcall
and
daa
mov
add
inc
insl
je
movsl
cld
imul
jg
inc
cmp
pop
add
cmp
mov
mov
inc
into
pop
push
mov
mov
andb
pinsrw
sub
sbb
ret
push
and
insb
in
lret
pop
add
or
adc
mov
ficomps
inc
popa
popa
lret
mov
lods
out
fadd
into
in
pop
dec
mov
div
scas
sbb
ficompl
mov
or
or
cli
stos
adc
adc
pop
push
jl
je
or
pop
pop
cmpb
xrelease
icebp
xlat
stos
and
mov
fdiv
inc
mov
jbe
xor
push
sbb
adc
cld
addr16
stc
dec
loop
addr16
je
mulb
roll
hlt
xchg
jmp
and
popf
leave
add
ljmp
inc
ljmpw
test
jl
sub
push
flds
adc
sub
test
imull
sbb
push
and
jno
jmp
jg
jno
pop
outsl
testl
inc
cli
sub
mov
pop
imul
lods
xchg
enter
pop
cmpsl
sbb
ss
adc
push
imul
imul
mov
adc
xchg
inc
mov
aad
shrl
xor
ja
loope
push
testl
jae
aam
pop
mov
fiadds
lret
ds
jmp
and
xchg
add
mov
aas
pusha
fldt
outsb
jp
rcll
adc
sub
xchg
paddusw
inc
mov
das
call
dec
xor
insb
jae
mov
and
push
adc
mov
cmp
dec
push
ret
jbe
and
cs
xchg
add
in
inc
adc
xchg
jno
sahf
pop
insb
les
adc
mov
push
jp
in
xchg
and
mov
fs
nop
mov
fs
mov
scas
lds
mov
jb
pop
inc
lret
xor
filds
jo
in
lret
mov
loope
test
xor
push
sub
movsl
mov
leave
test
loope
mov
icebp
xchg
or
cwtl
and
icebp
xchg
fs
inc
insb
inc
fisttpl
js
jmp
cmp
fldenv
movsl
lock
and
lock
in
repz
addb
leave
aaa
adc
in
mov
or
dec
ret
movsb
pop
fs
jp
aad
mov
adc
pop
shrb
fneni(8087
jg
push
outsb
xor
mov
rcr
test
sbb
lret
jae
push
in
dec
jg
lds
or
test
mov
gs
cmp
mov
xor
jl
daa
ljmp
jo
out
in
sbb
dec
push
xor
xor
cmpsl
insb
dec
popf
pop
mov
push
ret
inc
movl
lret
pusha
inc
cmp
clc
fidivrs
mov
sbb
push
data16
xchg
or
leave
orb
jp
xor
mov
pushf
and
sbb
push
fnsave
add
xchg
sub
scas
sbb
andb
and
test
push
pop
addr16
je
push
sbb
sub
lock
sub
scas
add
adc
sub
test
sbb
mov
repz
dec
fdivs
mov
test
nop
std
or
pop
dec
push
jnp
mov
aaa
xchg
repz
jmp
ret
or
dec
add
and
and
sahf
popf
jle
pop
lods
inc
int
add
into
imulb
fists
or
pop
pop
lods
outsb
push
sarb
leave
mov
jmp
jb
pop
inc
jecxz
lods
cltd
out
nop
xchg
sub
push
cwtl
xor
add
loopne
fisubrl
mov
shll
push
xorl
inc
hlt
dec
mov
jg
icebp
adc
dec
mov
mov
add
mov
call
jne
pop
mov
dec
jnp
cmpsl
mov
lds
xor
js
cmp
stc
jg
or
sbb
inc
dec
jp
mov
mov
loop
xor
repz
ss
frstor
pop
loopne
pop
divb
sub
add
mov
andb
push
jnp
mov
dec
fnstcw
xchg
jl
push
dec
cmp
addr16
pop
cltd
inc
rorl
shll
aad
sub
pop
jge
cmp
repnz
je
rorb
leave
int
jnp
xchg
push
inc
inc
fwait
clc
lea
popf
dec
or
or
lahf
adc
insb
pop
test
insb
scas
push
test
mov
and
test
pop
cmc
mov
or
mov
xchg
inc
add
push
xor
mov
idivl
data16
in
or
scas
pop
cmpsl
ret
ja
mov
jmp
loopne
mov
shl
mov
or
hlt
imul
push
popf
and
mov
outsl
data16
mov
push
adc
lods
pop
add
cmp
jo
push
inc
push
jl
das
fidivl
sub
cmp
das
aad
imul
gs
movsb
test
aad
cmpsl
mov
fdivrs
imul
add
loope
data16
in
out
add
pop
fists
dec
mov
mov
ror
pop
repnz
imul
mov
mov
sub
inc
inc
es
std
aas
hlt
je
fwait
sub
cmp
sahf
pushf
adc
loopne
cmpsb
out
xchg
outsb
mov
cmp
insl
push
cmc
pop
imul
pop
mov
orl
adc
jo
jmp
test
das
popf
push
pushf
jne
cmpsb
mov
push
mov
adc
or
add
es
stos
lods
lods
and
imul
mov
das
jmp
sub
jmp
xchg
das
imul
hlt
arpl
insl
into
sub
ja
lret
push
mov
inc
inc
push
cmp
ret
shl
mov
mov
stc
dec
fs
jo
pop
out
loopne
mov
fisttpll
jp
dec
adc
or
add
cwtl
sub
and
mov
sahf
rcr
push
pusha
arpl
ret
sub
mov
sbb
mov
xchg
adc
in
stos
test
fisubrs
sti
test
mov
arpl
or
inc
inc
sbb
std
xchg
xor
arpl
xchg
add
stos
mov
loope
lret
mov
les
jae
xchg
pop
and
js,pn
pusha
pop
dec
fsubl
adc
jge
cmp
sub
call
scas
sbbl
fsqrt
mov
jle
sbb
in
andl
cmc
cmp
sub
cmp
mov
jb
xor
mov
push
mov
lods
cmp
idivl
aad
outsl
dec
mov
mov
call
subb
ret
js
lock
clc
push
sub
lods
inc
repz
inc
cmpb
mov
adc
inc
aaa
sahf
push
inc
ss
gs
xor
lahf
push
jnp
std
xor
push
scas
push
test
push
push
lds
out
xor
pop
push
icebp
ja
lret
pop
jns
cld
stos
outsl
stos
pop
sbb
inc
call
push
sbb
fcmovb
and
add
mov
cmp
and
cmp
adc
mov
loopne
cmp
xor
xchg
pusha
xchg
mov
int
mov
inc
mov
pushf
mov
ljmp
mov
mov
test
scas
jo
addl
subb
mov
jg
testl
mov
mov
jb
fldt
mov
icebp
sbb
xchg
out
out
test
sub
rorl
dec
aaa
aam
pushf
xor
sbb
and
pop
data16
sbb
xor
adc
sub
jns
pushl
xchg
push
cwtl
push
lret
rcll
rorl
loopne
les
add
jns
arpl
mov
inc
xlat
mov
jg
and
out
std
call
push
shlb
out
mov
cmpsb
dec
dec
sub
dec
mov
push
mov
xor
push
cmp
pop
mov
sub
les
ret
loope
add
cs
xchg
stc
jg
xor
add
lret
repnz
gs
clc
mov
add
jno
ret
and
iret
fs
xchg
insl
ret
cmp
push
xor
or
dec
add
push
das
movb
test
les
shlb
mov
dec
sahf
ret
insl
pop
pusha
inc
fcoms
mov
adc
jmp
mov
ljmp
aad
out
mov
sbb
mov
pusha
jge
lahf
rcrl
test
out
data16
sub
pop
sub
mov
mov
clc
insb
hlt
out
in
repz
mov
ret
mov
test
pop
pop
or
dec
jns
stos
bound
or
fldenv
dec
rorl
inc
imul
ds
jno
out
cmp
loope
jmp
fildl
sub
ret
jecxz
stos
inc
adc
aas
aad
dec
rcrl
lea
add
mov
xor
addr16
test
mov
cmpsb
roll
jnp
subb
not
add
sbb
into
out
out
xchg
movsb
or
mov
adc
or
ds
inc
jl
inc
jb
xor
add
adc
sbb
mov
pshufw
sti
jne
sub
dec
rcll
jl
imul
mov
mov
xchg
cmp
adc
pop
std
repnz
sub
mov
pusha
jl
push
pop
xor
inc
pop
xchg
sub
mov
in
jge
jmp
push
out
mov
mov
jmp
mov
hlt
out
ljmp
ljmp
xchg
sub
sbb
rol
and
je
push
data16
sub
mov
pushf
jb
adc
add
bound
leave
pop
or
mov
sub
pop
jbe
dec
popf
mov
jno
xchg
lods
fwait
dec
mov
sbb
and
mov
push
dec
jp
fldenv
inc
pop
jbe
out
dec
out
and
shlb
fcmovnb
jge
inc
lock
or
push
cmpsl
or
shlb
add
pop
jnp
or
cmpsl
cmp
mov
aaa
insl
sbb
lcall
xor
mov
outsb
xlat
adc
jecxz
push
stc
aam
inc
pop
xor
lret
jmp
push
jg
or
out
xchg
lods
inc
stc
mov
repnz
cwtl
test
push
sub
add
jmp
and
mov
fstpt
iret
or
jmp
push
aas
roll
lcall
outsl
push
pop
cmp
lea
rolb
inc
fists
or
enter
or
adc
shl
jge
inc
fs
and
scas
gs
and
imul
arpl
inc
loop
dec
aaa
mov
movsl
leave
jo
dec
bound
xchg
lahf
push
mov
les
insb
out
xor
dec
aam
cmp
push
dec
mov
sub
add
cmc
xchg
cmpsl
lods
gs
or
imul
jp
mov
jp
jl
mov
aas
pop
inc
popa
jne
lcall
jl
daa
repnz
cmp
clc
shrb
aas
mov
cmpsl
add
mov
orb
int3
lret
sub
mov
jle
adc
adc
dec
mov
lods
test
fistl
push
ss
bound
mov
pop
jle
jp
cmc
in
and
inc
les
xchg
nop
fwait
loope
pushf
jle
dec
lahf
movsl
js
jo
ret
jecxz
sbb
lahf
xor
fnstenv
test
ja
fidivrs
push
push
jo
and
dec
inc
dec
mov
push
add
pop
bound
jp
pop
shrb
fistpl
add
aaa
mov
mov
sub
jnp
inc
sahf
mov
or
insb
xor
mov
xchg
or
or
fadds
cwtl
loop
lret
lahf
mov
sub
mov
jb
push
testl
das
push
push
stc
je
gs
and
cmp
scas
test
fwait
enter
jge
cmp
fmull
mov
sub
leave
xlat
adc
xor
mov
jl
push
jge
les
inc
int
scas
ja
push
movsb
sti
inc
std
addb
push
or
sbb
stc
pushf
cmp
cmc
mov
in
push
adc
mov
shr
add
leave
xor
lret
bound
lcall
cwtl
or
jle
sub
loope
mov
jmp
shlb
jmp
shl
mov
sub
out
mov
and
xor
fmuls
pop
or
adc
mov
pusha
xchg
pop
jg
add
imul
lds
mov
pop
xor
stos
jns
xlat
dec
or
pushf
test
inc
push
push
hlt
inc
aaa
into
jb
jmp
jmp
xchg
pop
xchg
mov
sub
aam
add
dec
test
aad
dec
add
imul
xor
imul
dec
movsb
xsha256
cmpsb
xlat
leave
push
rorl
scas
fdivl
and
mov
inc
cli
push
mov
fcoms
mov
jp
in
inc
imul
inc
xchg
sub
pop
mov
inc
dec
lcall
fs
ret
xor
out
incl
bound
popa
xchg
mov
or
pop
cmc
and
push
stc
nop
cmp
add
sub
mov
jle
loope
mov
mov
ret
scas
add
fistpl
mov
and
mov
and
inc
jno
decb
mov
mov
popa
mov
cli
push
arpl
das
sbb
mov
push
mov
aaa
test
je
rol
pop
add
test
mov
jge
jecxz
iret
adc
cmc
sbb
mov
xor
faddp
jge
hlt
cmp
fwait
mov
cmp
dec
repnz
into
add
bound
push
fdiv
push
jb
je
push
xor
push
popa
jnp
mov
or
xchg
mov
xor
ljmp
sbb
shrb
push
roll
mov
fs
fcoml
mov
and
jge
adc
or
jns
cmpps
push
push
xchg
cmp
loope
data16
dec
in
addb
out
xchg
sti
push
mov
mov
mov
js
stos
insl
out
sub
fcoms
jbe
fldl
xchg
lods
inc
cmpsb
js
mov
mov
clc
mov
lods
shl
mov
js
lea
cwtl
loope
mov
ret
out
mov
add
mov
ja
test
dec
jg
push
pop
shrb
sbb
dec
jp
movsb
mov
ja
incl
das
fists
dec
aam
stc
inc
outsb
jp
fnsave
push
pop
lret
and
cmc
mov
adc
and
sbb
aaa
mov
mov
push
out
outsb
iret
adc
pusha
bound
shlb
aam
pop
int3
pop
icebp
shrb
andb
in
cltd
stos
cmp
adc
sbb
fldt
cmp
fs
and
je
xor
icebp
jecxz
fwait
clc
cmpsb
mov
rcl
lds
jge
sub
clc
xchg
incl
and
mov
fnsave
inc
popa
pop
lcall
fwait
cmpsl
jnp
fucomip
fadds
jecxz
cmc
inc
popa
das
pop
mov
ret
lods
or
arpl
cmp
andb
xchg
cs
es
fs
xchg
and
rclb
mov
jnp
movsl
mov
pop
or
ss
mov
mov
mov
cmp
int
loopne
and
inc
inc
add
les
test
inc
mov
pop
insl
cld
xor
jno
mov
loope
lret
pop
ja
pop
jge,pn
mov
inc
cmp
in
mov
insb
mov
or
loopne
mov
pop
call
push
lahf
xor
add
sbb
mov
mov
mov
or
or
cmpsb
les
add
mov
or
cmpsl
mov
pusha
insb
ret
cmpsb
jne
outsl
out
dec
dec
xor
push
sub
or
das
cmpsl
add
adc
adc
sbb
and
repnz
mov
mov
cmp
xor
add
stc
in
loopne
fidivs
in
icebp
jecxz
std
adc
mov
jb
xlat
fcomps
ja
mov
int
pop
loope
inc
push
jmp
cli
loope
jge
lcall
lock
push
popa
pushf
repnz
movsl
cmp
cmp
push
leave
cmp
pop
lods
xorb
jl
or
mov
in
subl
out
icebp
inc
test
in
xchg
xchg
addr16
ret
mov
cmpsb
cwtl
mov
jecxz
das
xor
rorl
cmp
mov
stc
mov
adc
lcall
pop
out
pushf
lret
int
jo
shll
jno
imul
jae
pop
loopne
xchg
lods
xor
fbld
mov
cmp
jne
movsb
cmp
sahf
cs
push
stos
cmc
and
movsl
movl
mov
rorb
lods
inc
in
fdivs
push
lret
cs
fcoms
out
orl
mull
inc
pop
mov
int
shrb
cmp
pop
jae
jge
inc
cwtl
sub
pushf
push
scas
mov
stos
xor
dec
jns
shlb
nop
addr16
pop
push
leave
inc
mov
xchg
jbe
out
pop
jmp
cmp
sti
dec
mov
loopne
or
mov
testb
lcall
jmp
jle
mov
cmp
jmp
leave
pushf
pop
ljmp
jae
or
cmpsb
sbb
lret
push
je
cmp
loop
addl
fadds
pushf
imul
ljmp
sub
pop
lods
push
rcrl
push
test
fcomp
repnz
mov
xor
clc
pop
adcl
std
cltd
and
adc
or
jg
xor
cltd
and
or
add
hlt
inc
dec
in
xor
in
inc
loopne
repnz
push
mov
and
lret
dec
add
sub
stos
xchg
mov
xchg
pop
ds
stos
mov
shlb
push
inc
pushf
or
mov
jle
dec
dec
arpl
addr16
cmp
lret
lea
cmp
add
add
shr
sbb
inc
xchg
cmc
movsb
mov
imul
imul
ljmp
aad
ljmp
xchg
adc
mov
popa
jl
xchg
and
in
cwtl
movsb
dec
out
test
adc
dec
movsb
sbb
sub
push
jmp
loop
and
dec
or
cmp
xchg
lcall
sbb
les
xchg
enter
sub
lods
int3
mov
movsl
pop
inc
int3
roll
imull
jae
mov
ds
inc
xlat
and
out
scas
jge
fidivrl
jmp
or
inc
xchg
sbb
std
dec
loope
or
xor
push
lret
call
hlt
mov
xor
popf
push
jne
and
mull
mov
scas
cmp
lds
cld
push
inc
jg
es
or
xchg
lods
sub
loope
outsb
jp
mov
mov
repz
or
leave
call
or
mov
cmpl
xchg
cli
arpl
jb
add
inc
xor
mov
xorl
test
notb
insb
daa
jge
cwtl
mov
scas
stc
push
clc
out
push
jno
cmp
mov
dec
inc
push
loopne
mov
fstps
adc
pop
mov
fiaddl
fsts
push
rcrl
mov
ss
loop
push
xor
pop
out
fisttpll
push
push
inc
cwtl
mov
mov
dec
xchg
push
rcrl
add
jnp
push
sbb
dec
jb
pop
xchg
sarl
fistpl
jo
ljmp
nop
fldenv
mov
nopl
dec
xor
sub
pop
test
shlb
xorl
cmpsl
inc
add
inc
pushf
and
loop
movsl
jl
ja
ret
add
add
movsb
shlb
dec
jg
push
repz
sbb
add
dec
icebp
test
sub
lret
popa
in
push
push
aad
call
in
aaa
sub
mov
or
xor
pop
jb
jl
daa
pushf
xor
inc
pop
gs
in
test
mov
in
adc
pusha
mov
icebp
repz
ftst
add
loope
ja
cmp
inc
mov
arpl
xchg
xchg
push
bound
test
push
jns
rol
jp
bound
cmpsb
rcl
mov
cli
adc
aas
xor
mov
pop
inc
xor
dec
xor
int
sbb
mov
or
insb
mov
insl
loopne
inc
adc
xchg
xorb
mov
jo
mov
sub
mov
xlat
mov
scas
jae
roll
inc
fildl
push
or
stos
pop
ljmp
or
pop
mov
rol
and
add
je
insl
test
push
sti
or
test
popf
lods
jns
push
and
arpl
mov
lret
pop
pmulhw
cmp
cltd
lods
test
cwtl
jo
jle
adc
jecxz
xchg
push
and
or
lret
mov
sbb
je
push
mov
jge
mov
sub
sub
test
sbb
push
mov
imul
ret
or
dec
dec
dec
jecxz
insb
xorb
in
jb
loope
xchg
je
mov
xor
movsl
push
jae
inc
sub
ret
std
add
cwtl
sbb
lret
out
sbb
lods
into
ss
adc
sbb
sbb
xchg
sub
mov
mov
mov
mov
or
imul
scas
and
clc
xchg
mov
mov
mov
jecxz
adc
add
jl
mov
pop
mov
cmc
mov
sub
bound
outsb
adc
jle
sbb
sarb
sub
cmc
push
xor
in
stos
arpl
or
ljmp
mov
cmc
cs
and
cmp
push
pushf
push
jno
dec
mov
push
xorb
lret
rcrb
loopne
add
sub
cmp
inc
push
faddp
pop
lret
xchg
hlt
sub
pop
in
cwtl
ja
inc
xor
gs
arpl
ja
mov
lods
xchg
xlat
aaa
inc
xchg
jp
int3
into
stos
fwait
leave
inc
int
call
cmpl
or
fdivl
clc
push
mov
arpl
nop
jnp
or
sahf
movsl
cld
xchg
dec
ds
cmp
mov
test
leave
mov
das
xor
test
sbb
pop
jl
push
push
jmp
pop
repz
ss
cmp
cmp
push
xchg
fdivrl
fsubp
js
jae
outsl
mov
mov
fidivl
pushl
and
shlb
mov
mov
cmp
fs
mov
or
gs
punpckhbw
inc
stc
xchg
xor
push
xchg
loope
in
cltd
pop
rcll
adc
mov
inc
push
or
out
xchg
stc
or
mov
cmpsb
mov
fsubrl
aam
mov
out
sti
repz
scas
cmp
cmp
mov
test
ds
adc
std
out
cmp
data16
jae
add
mov
mov
fcom
into
pop
or
sub
pop
icebp
inc
into
cmpsb
sub
cmp
adc
lods
es
cmp
sahf
cmp
loopne
adcl
jo
jmp
das
push
or
and
ss
jnp
scas
and
sbb
lea
lret
jp
cld
push
adc
std
adc
xchg
je
mov
push
pusha
pop
push
cli
adc
je
stos
mov
adc
push
pop
sub
mov
shl
std
add
or
aam
xchg
sub
lods
mov
mov
fstl
pop
mov
adc
xchg
inc
cmp
call
or
inc
sti
ss
insl
scas
or
pop
sub
daa
pop
popa
mov
roll
ret
lods
inc
adc
lret
cmp
adc
repz
lret
xchg
inc
in
cmpl
out
cwtl
fisttps
lods
data16
push
mov
jns
jae
jg
mov
loop
xchg
aad
addr16
dec
mov
xorl
pop
mov
push
ss
rcll
testl
lods
std
loope,pn
fcoml
pop
adc
outsl
rcrb
fidivrl
and
std
push
leave
push
movsb
bnd
pop
cwtl
imull
add
sbb
imul
sbb
mov
test
scas
popf
lret
mov
cmp
pop
cmp
cmp
dec
out
arpl
xlat
cmp
mov
sbb
fdivl
inc
inc
jo
jns
cmpsl
cmp
xor
sub
lea
add
or
cwtl
and
cmp
jg
adc
jnp
inc
out
sbb
adc
insl
into
xchg
mov
aaa
lret
adc
push
lea
mov
imul
pushf
filds
adc
repnz
cwtl
das
scas
jno
xchg
xor
sub
gs
call
or
les
icebp
cmpsb
and
xor
mov
push
int3
mov
cmp
stos
add
popf
jns
ret
push
insb
mov
mov
mov
sbb
mov
mov
inc
fcoms
mov
aas
stos
mov
xlat
mov
xchg
lods
pop
sbb
ljmp
xor
push
repz
push
add
mov
or
xor
aas
sahf
cld
push
popf
mov
fidivrs
adc
xlat
fistpl
test
jge
stos
out
loopne
pop
cmp
mov
cmp
test
cmc
enter
sahf
loopne
push
sub
neg
test
cmp
icebp
test
cmp
adc
cltd
mov
frstor
mov
xor
xchg
sbb
inc
or
dec
add
pop
add
sub
cmp
sbb
pop
push
imul
add
or
test
lock
or
cmp
mov
cmp
imul
mov
stos
cmovle
adc
mov
cmpsl
in
cmp
sti
insl
lret
cld
pushf
lds
cli
aam
sub
xchg
rorb
adc
mov
scas
push
in
pop
lahf
test
pop
imul
or
or
lods
inc
dec
scas
pop
mov
lret
push
mov
mov
adc
cmp
mov
mov
jecxz
jae
xor
movsl
cld
sahf
les
push
push
mov
mov
cmc
sbb
cmp
push
int3
ret
popf
test
jns
ret
stos
jmp
jp
xor
in
aam
ja
pop
lds
dec
push
and
sub
jb
xor
adc
loop
nop
add
push
or
or
cmpsb
pop
push
scas
inc
test
cmp
lods
daa
mov
cmp
jo
jae
mov
push
dec
test
test
inc
aaa
adc
in
sub
sbb
ds
filds
pusha
mov
repnz
push
out
sbb
scas
bnd
xor
cli
out
mov
add
and
nopl
ret
in
mov
pop
repz
pushf
and
xor
and
rcrl
sarl
dec
repz
js
jnp
outsl
push
lods
addb
aaa
adc
xchg
loop
jns
adcl
sub
faddl
outsl
adc
js
jnp
jle
gs
loop
mov
jmp
lret
pand
lahf
rorb
mov
xor
std
into
test
sbb
lahf
and
repnz
xchg
jb,pt
mov
cltd
mov
ja
or
pop
addr16
push
jle
adc
push
js
unpckhps
addb
pusha
push
xchg
inc
sahf
dec
ja
sahf
and
xchg
xor
adc
add
jle
and
adc
mov
sub
xchg
adc
gs
in
jecxz
test
mov
sub
add
jmp
mov
leave
mov
push
or
sub
lods
inc
push
dec
loopne
inc
call
dec
pop
sahf
out
imul
fucomi
cltd
or
xor
and
pop
adc
in
push
imul
mov
es
jg
movsl
push
and
push
sbbb
decb
sub
jno
jmp
inc
pop
rorl
jge
cs
clc
mov
aas
ja
fnsave
lret
dec
push
in
mov
push
sub
outsb
add
jl
mov
cmpb
mov
loop
sub
rcrb
or
jns
orb
lret
push
inc
xlat
pop
pushf
in
cwtl
movsl
cmpsb
inc
sbbb
or
out
call
dec
and
loopne
sbb
sub
mov
xchg
ljmp
es
dec
sbb
movsb
shlb
loope
not
icebp
out
popa
xlat
jle
add
enter
outsl
loop
xor
add
sbbl
xor
sub
je
mov
lahf
mov
out
ret
imul
out
add
mov
clc
ja
mov
sbbl
xor
cmpsl
and
add
loope
sub
aam
mov
jb
loopne
cld
push
lret
or
in
sbb
adc
fldcw
mov
or
pop
fcmove
enter
or
pop
or
or
imul
sbb
test
outsb
jo
mov
ss
mov
decb
lret
mov
out
sub
aas
les
outsb
pop
mov
dec
inc
leave
pslld
xchg
pop
inc
cmp
enter
cmpl
jge
mov
mov
cmpsb
adc
das
jo
mov
inc
shrl
cmc
mov
pop
push
aam
shlb
lods
and
leave
lcall
insl
int
xorb
mov
test
adc
cmp
shll
ret
adc
sub
lret
daa
xchg
jmp
and
cmpsl
ds
aas
lret
inc
fnstenv
xlat
jb
pusha
test
cmp
sbb
pushf
outsl
int3
cmc
dec
ss
sarb
jno
call
and
xor
cltd
call
or
inc
cmp
test
pushf
ja
add
divl
mov
jle
push
mov
ds
pop
mov
dec
sub
mov
ss
movsb
fs
fwait
pop
mov
jl
shlb
popa
mov
mov
ds
sub
mov
or
and
aam
test
jne
cmp
xor
jae
sub
sub
fildll
xor
xchg
sbb
sbb
pusha
out
int3
dec
pusha
push
lods
inc
jb
leave
loopne
xchg
sub
xchg
jne
jns
xor
mov
or
cmpb
sbb
cmp
das
jp
mov
sbb
dec
jp
repnz
push
adc
mov
lea
fcmovnb
sub
les
push
adcl
subl
leave
dec
mov
and
mov
stc
lea
pop
insl
add
add
mov
test
mov
int
mov
insb
sub
dec
dec
sbb
or
addr16
push
xchg
fldcw
xchg
in
test
jo
pop
sub
jnp
shrl
push
jns
out
cmp
pop
or
dec
shll
testl
push
dec
fwait
jnp
repz
stc
adc
jb
sbb
pop
xorb
cltd
sahf
pop
pop
inc
into
mov
mov
cltd
or
inc
loop
loopne
loopne
cmp
iret
aam
push
mov
inc
xor
jle
fsts
testb
imul
cmp
cmp
inc
in
dec
fnstcw
nop
jg
xchg
cmp
sbb
sbb
pop
cmp
xor
push
sarl
lret
rcrl
xsha1
cmpsb
dec
movsb
shlb
sub
jnp
imul
pop
cmp
bound
jae
nop
das
pop
sbb
xlat
ljmp
fsts
cmp
negl
daa
lcall
aaa
lret
add
mov
pop
sub
cmp
fwait
xor
hlt
cmp
les
mov
aad
and
lcall
stc
inc
inc
push
mov
inc
cmpb
stos
pop
push
nop
push
cmp
sub
jecxz
or
xlat
addr16
icebp
pop
push
mov
shl
jne
ljmp
inc
xchg
pop
dec
and
jl
mov
cmp
mov
push
outsb
aaa
or
mov
mov
adc
sub
inc
fwait
mov
or
push
sbb
inc
push
jl
inc
mov
sahf
test
outsb
daa
and
xchg
cld
cmp
sub
pop
cli
iret
fldpi
repnz
cmp
inc
lods
cmp
sub
or
test
adc
mov
rcrb
jle
xor
and
inc
xchg
sub
insl
rcr
inc
mov
call
test
and
dec
out
jmp
cli
push
or
xchg
mov
dec
or
pusha
mov
sarb
popf
mov
jbe
adc
out
frstor
or
bound
push
add
adc
jbe
das
cmp
cltd
adc
mov
mov
mov
cld
icebp
ucomiss
in
inc
sub
xchg
fistps
push
gs
cmp
pop
arpl
fstpt
mov
sbb
xor
adc
mov
or
gs
shrb
dec
mov
jle
adcl
rolb
mov
mov
shrl
add
jge
push
outsl
icebp
mov
sbb
mov
or
jbe
dec
fbld
push
jae
addb
inc
xor
push
int3
cmpl
call
dec
mov
mov
push
xor
mov
pop
xchg
and
cmp
into
gs
inc
inc
pop
shr
addl
push
testl
mov
fisubrs
rcr
pushf
test
mulb
jp
or
pop
lea
stos
jp
xchg
rcl
pop
cmpsl
inc
jne
mov
int
aam
es
adc
sub
pop
loop
fdivr
dec
test
imul
mov
sbb
mov
xchg
int3
fdivrp
or
lea
jo
fisttpl
fildll
xor
pop
mov
xchg
ss
mov
sub
shl
sti
xchg
mov
xor
sub
pushf
xorl
mov
jno
jp
and
mov
icebp
shll
ret
movsb
or
shrl
rorl
pop
popf
and
jle
or
cmpsl
ret
cmpsb
ljmp
bound
cli
rorl
push
dec
add
pop
jno
in
push
cmp
movsl
call
and
rclb
mov
xchg
push
cmp
push
mov
push
sub
fcom
outsl
or
sar
outsb
stc
jl
push
fidivl
mov
pop
repz
jecxz
push
lcall
mov
aaa
js
out
sbb
outsl
aaa
adc
call
data16
sbb
ret
or
mov
movsl
sbb
aam
jl
cli
imul
cmp
xor
add
lods
push
adc
das
xchg
pop
mov
in
and
cli
imul
lds
and
or
call
cmpsb
push
xchg
sub
pop
sub
aad
dec
mov
mov
in
xchg
in
nop
call
or
xor
add
out
into
pop
or
loope
lods
jmp
movsb
dec
popf
stc
add
lods
lea
dec
lds
push
movsl
pop
jl
mov
jne
lods
pop
ss
es
xchg
adc
stos
mov
fcoms
cmpb
outsb
sub
push
decl
lea
rcll
push
icebp
insb
cmpsb
add
add
fldcw
add
pop
mov
add
add
xchg
xor
inc
xor
mov
mov
dec
sbb
mov
aaa
xchg
shr
sbbb
cli
test
inc
pop
mov
cmp
mov
add
mov
mov
jle
and
cmc
xor
mov
mov
adc
cmp
pop
hlt
or
cmpsl
jnp
or
add
jno
ficomps
mov
ss
push
sub
mov
xchg
mov
or
cltd
mov
push
sbb
fbld
jno
cltd
jmp
addr16
inc
mov
or
outsl
out
insb
jl
add
cmpsl
ret
cmp
mov
mov
cltd
cmpl
or
div
std
clc
or
and
adc
fldcw
cmpsl
hlt
cmpsb
pop
insb
fcoms
mov
mov
sub
mov
push
inc
adc
test
jl
and
aas
cs
popa
test
out
jo
adc
inc
xchg
fldt
dec
xor
xchg
mov
pusha
jne
movl
pop
nop
imul
cmpsb
mov
aad
pop
or
mov
mov
mov
add
es
clc
and
inc
ficomps
fwait
add
shr
jmp
sbb
divb
movsb
pop
mov
mov
shll
into
out
add
adc
ret
xchg
jo
xor
cmpsb
pop
add
add
push
mulb
test
pop
sahf
mov
cmpsb
sub
pop
push
dec
xchg
pop
jecxz
out
jle
dec
daa
push
hlt
inc
mov
out
jae
mov
fistpll
add
mov
or
adc
adc
subl
pop
jle
mov
mov
imul
mov
pushf
gs
or
cmpsb
sti
mov
and
jecxz
and
and
ss
mov
push
mov
cwtl
push
loope
out
addr16
push
mov
mov
insb
add
pop
jne
or
movsl
call
cltd
cli
mov
inc
inc
push
icebp
inc
frstor
jl
movsb
mov
test
xchg
sub
std
add
dec
stos
xor
popf
push
ljmp
imul
add
aam
test
pusha
cmc
sub
jno
add
outsl
add
jle
shlb
imull
fstpl
das
mov
mov
xor
filds
mov
fildl
sbb
js
adc
out
xchg
sub
pop
sub
sub
adc
cli
les
adc
in
jmp
adc
lcall
cmc
mov
cmp
sbb
imul
scas
xor
xchg
jg
jecxz
lods
push
cmp
pop
xchg
outsl
xchg
mov
nop
or
mov
sub
push
jge
leave
and
jb
ss
push
jne
daa
add
cld
jp
push
out
stc
jg
into
mov
rep
insb
pop
push
mov
imul
fldcw
or
mov
imul
mov
iret
cmp
outsl
call
sysexit
mov
mov
mov
jp
loopne
int3
andl
mov
inc
pusha
push
into
mov
pop
fldt
xchg
push
jp
mov
sbb
mov
test
stos
xor
pop
cmp
jne
fwait
lret
imul
les
pushf
into
xor
in
add
or
dec
loopne
lods
mov
mov
mov
pop
sub
lea
push
push
push
in
test
push
repz
insb
inc
and
dec
cmp
lods
xchg
sub
push
xor
mov
push
ss
xchg
pusha
sub
aad
roll
jae
push
cmp
mov
xor
pop
lret
push
aam
fwait
jge
xchg
mov
push
xchg
bound
sbb
rcrl
mov
stos
inc
call
xorl
shl
xchg
daa
dec
inc
cltd
cltd
insb
mov
xor
mov
mov
repnz
or
dec
xlat
sbbl
inc
mov
pop
arpl
movsl
sahf
imul
aam
lock
cmp
ja
jg
mov
sub
loope
cld
push
in
out
fisubrs
jmp
xor
xor
add
inc
jbe
xlat
cwtl
ljmp
push
mov
jge
mov
aas
dec
out
bound
aam
add
test
int3
popf
jle
dec
sub
dec
aam
dec
mov
xchg
xor
mov
out
fldcw
loop
push
inc
ficoml
dec
and
fsubrs
stos
sub
push
mov
push
call
shrl
push
jle
lahf
scas
xor
mov
int3
fwait
das
cli
and
xor
repnz
in
ficomps
mov
mov
loopne
and
inc
mov
aaa
hlt
loopne
out
roll
adc
orl
inc
xchg
inc
fs
notb
imul
mov
fisubs
lods
imul
stc
or
stos
ret
pop
aad
mov
and
sub
lds
clc
outsl
push
jb
inc
jae
notb
mov
mov
out
dec
cmc
inc
ret
loope
fimuls
dec
pushf
xor
jb
adc
sahf
jno
in
mov
out
andl
pop
jecxz
push
aas
mov
pop
lock
ss
dec
adc
ss
out
adcl
pop
popf
xchg
xchg
aad
test
and
popa
das
movsl
mov
fdivr
orl
loopne
xchg
notb
lret
mov
andb
add
dec
mov
ret
out
add
lret
fs
lock
out
mov
jp
mov
mov
ss
mov
notl
inc
push
call
lods
int3
jnp
js
imul
or
clc
jnp
lea
sbb
add
cwtl
cmp
mov
lahf
xchg
xor
dec
rorb
scas
cmpsb
sub
xlat
jle
mov
ds
and
push
or
push
cmpsl
ds
lea
fld
cltd
nop
cmp
and
mov
xlat
ja
or
sbb
cmpsl
sti
insl
test
cmc
push
imul
dec
and
push
add
fldenv
push
mov
andl
push
sub
rorl
jns,pt
cltd
mov
cmp
push
aam
pop
repz
dec
or
sbb
lea
xchg
adc
xor
dec
in
or
sub
jge
inc
fsubr
sahf
inc
mov
cmp
xchg
sub
in
jo
andb
hlt
push
loop
xchg
xor
enter
and
addl
imul
adc
outsl
cmp
mov
fiaddl
add
push
jmp
push
push
outsb
fcompl
sub
data16
push
out
out
sti
inc
or
inc
icebp
pushf
push
or
mov
pusha
stos
iret
data16
adc
or
and
dec
inc
clc
jo
int
call
jae
in
daa
jle
pop
out
insb
mov
enter
hlt
sub
mov
nop
mov
push
or
cmp
xchg
mov
test
fistps
iret
popa
sbb
aad
rcl
sbb
sbb
cmpb
adc
popf
fwait
es
and
mov
xor
scas
movsl
push
bound
nop
or
inc
aas
mov
out
aad
push
in
testl
adc
xchg
sub
jge
sub
ss
insl
add
dec
cld
cmp
insl
jge
in
sti
xchg
xor
scas
jecxz
mov
int3
mov
jmp
lods
rorb
xchg
mov
ret
gs
push
sub
je
pop
inc
push
in
sbb
je
mov
xor
mov
push
mov
jle
jo
loop
fistl
ret
sbb
mov
iret
loope
lock
cwtl
leave
sub
ja
mov
sbb
int
ror
fiaddl
fists
adc
dec
adc
ret
lret
cmpsl
bswap
ss
enter
mov
sbb
and
in
mov
push
data16
sub
xchg
jno
stos
pop
xor
push
clc
mov
test
jno
jmp
dec
popa
les
test
inc
push
movsl
jbe
std
pop
jmp
out
shrb
cmp
dec
dec
xchg
mov
fimull
stc
ret
push
sub
add
daa
fnstenv
adc
jecxz
std
insb
mov
add
pop
lahf
sbb
pop
push
lds
pandn
cli
in
sbb
xor
sbb
add
mov
lods
push
push
leave
aaa
mov
cld
xchg
out
or
pop
sbb
inc
push
push
std
lea
lret
cs
pop
xchg
xor
fisttpll
out
call
dec
pop
add
in
ds
mov
andb
pop
mov
stc
mov
jne
addl
sbb
lret
or
lods
sbb
xor
ds
fstl
push
jg
icebp
enter
jno
xor
mov
push
dec
sbb
sbb
dec
jp
or
push
push
cmp
into
xor
sub
and
rorb
add
cmp
imul
scas
add
sbbl
jae
mov
or
sub
mov
pusha
loopne
jle
lahf
sar
shrl
push
insl
xchg
sub
lods
fiadds
je
ljmp
es
pop
imul
aam
lods
adc
pop
inc
mov
mov
sub
fldt
lret
jnp
and
loope
clc
xchg
pop
lock
cmp
repz
into
outsl
iret
pushl
push
ror
mov
sub
addr16
or
pop
jnp
xchg
icebp
push
cmpsb
aas
cltd
xor
call
cld
inc
push
out
popf
push
mov
into
mov
pop
iret
push
popf
sbb
arpl
lret
movsb
stos
jae
add
push
pop
inc
jns
jae
cmp
push
insl
in
imul
repnz
dec
add
ss
mov
dec
gs
jle
fimuls
push
mov
push
enter
push
outsb
imul
adc
mov
and
int
or
cmpsl
popa
icebp
jmp
shlb
jns
pop
cmp
inc
dec
hlt
xchg
fldt
mov
dec
les
push
iret
ja
pminub
pop
jb
fnstenv
test
push
mov
icebp
xor
adc
int
das
mov
sti
xchg
mov
fstpl
mov
mov
fmull
mov
stos
montmul
cmpsb
xchg
scas
fsubl
sub
jge
sahf
fisubrs
pop
inc
psubsb
hlt
insb
mov
subl
cmp
loope
sub
pushf
imul
jbe
fdivrl
push
in
jl
mov
stos
int3
out
push
add
or
cld
xchg
mov
mov
pop
fwait
cmp
out
sahf
loopne
out
xchg
mov
stos
jecxz
jne
and
jge
cltd
push
jecxz
cmpl
les
or
dec
mov
repz
pop
xor
xor
mov
mov
aam
adc
xchg
or
inc
push
in
cmpsl
mov
mov
js
scas
das
jbe
sahf
push
fbstp
aaa
stos
dec
xchg
sub
shll
pop
sub
repz
je
jl
out
loopne
add
sub
xor
mov
es
gs
bound
mul
jl
pop
ret
push
or
shll
pop
inc
xor
inc
or
push
scas
push
inc
push
dec
or
pop
data16
lahf
leave
pusha
shll
insb
jg
out
jne
and
push
lcall
popa
int3
push
fildll
push
pushf
stos
pop
ffree
stc
adc
aaa
jmp
jp
mov
mov
push
lods
jb
or
jle
xchg
ret
pop
out
inc
mov
clc
or
mov
jo
enter
pop
fildll
je
dec
xor
jbe
cmp
push
jbe
imul
das
adc
sub
xchg
sub
push
ret
pop
jno
pop
in
xor
cmp
insb
dec
mov
add
testb
pop
adc
push
mov
xlat
sub
loope,pt
mov
inc
aaa
sub
repnz
jmp
outsl
shll
mov
mov
jl
push
inc
jns
xchg
sbb
cmpsb
jp
pop
jecxz
jg
sahf
jo
and
inc
std
test
arpl
test
inc
movsb
mov
iret
inc
mov
lret
lret
xor
iret
shl
les
mov
in
test
adc
stos
in
in
cmpsl
xchg
jp
mov
ret
pop
cmpsl
adc
lcall
inc
lods
cmp
popa
stos
ffreep
insb
data16
mov
leave
dec
dec
and
and
cmp
inc
call
inc
push
test
add
adc
mov
scas
inc
shrl
push
nop
montmul
cmpsb
shll
aad
sub
adc
jecxz
arpl
dec
icebp
dec
sahf
xchg
adc
nop
xor
add
fstps
ljmp
dec
stc
test
test
cmp
out
insl
sub
test
or
daa
xor
push
sti
lea
dec
pop
into
call
or
call
cmp
jge
insl
inc
popf
push
jbe
lea
into
fs
mov
inc
inc
loop
mov
jp
lret
fwait
pop
fwait
negl
sub
mov
mov
jae
fcoml
insl
sub
mov
mov
and
cwtl
stos
jnp
jge
enter
sbb
hlt
adc
mov
jg
pop
mov
lret
adc
and
inc
xchg
inc
dec
pusha
je
int
push
adc
lret
and
into
and
xor
addl
cmc
aas
neg
pop
push
pop
aas
push
mov
pop
inc
and
andb
pusha
test
mov
pop
add
push
clc
add
rclb
fsubrs
mov
jne
scas
cs
mov
pop
scas
idivb
loopne
mov
movsl
cmp
cmp
jle
adc
jae
push
and
lret
pop
lret
imul
sarb
pusha
mov
cmp
mov
movsb
in
iret
movsb
push
and
cmp
jbe
out
adc
lcall
cmpsb
push
cmpsb
xor
ljmp
or
pushl
in
push
or
mov
dec
cltd
or
or
sub
daa
lcall
cmp
sub
jmp
dec
lea
mov
std
adc
std
push
dec
sti
js
add
es
ficoms
mov
jmp
dec
xchg
lock
pop
popf
loope
push
fildl
xor
cmp
nop
dec
mov
sahf
cmp
adc
imul
xlat
jmp
mov
pcmpgtd
adc
stos
leave
flds
rclb
fstl
mov
adc
xchg
js
lcall
fstpt
jg
lret
push
out
arpl
dec
inc
fcoml
mov
add
out
lahf
ja
dec
lock
cmp
mov
xchg
rorb
push
aad
cld
fwait
sbb
sbb
daa
mov
orb
cmp
lret
dec
cmp
jae
xor
lcall
mov
jnp
mov
lea
lods
jecxz
sahf
movsl
call
in
sub
sbb
xor
iret
mov
mov
adc
cmp
cmp
dec
xchg
dec
lods
dec
call
jp
iret
fcmovnb
xor
xor
push
sub
inc
or
lock
aas
cmpsb
push
mov
pop
int
inc
add
arpl
lds
out
stc
popf
mov
loope
aas
inc
insw
adc
adc
cmpsl
aad
jecxz
mov
sbb
add
or
in
cli
imul
loop
test
and
lods
pop
xor
int
xor
sub
xor
mov
xchg
jp
cwtl
stos
fstp
fmull
test
mov
popa
and
adc
xor
push
jmp
test
mov
push
cld
or
shrl
jecxz
sbb
test
jns
mov
arpl
or
push
scas
and
ljmp
mov
pop
adc
call
cmp
decl
mov
mov
fsubl
push
cltd
xor
or
insl
mov
je
cmp
jb
mov
add
mov
in
add
sbb
cmc
jl
ret
cld
dec
or
adc
xchg
xor
push
or
movsb
andl
cltd
dec
ficompl
adc
clc
pop
shrb
add
shl
push
and
int
cs
xchg
popa
mov
jg
push
mov
add
dec
enter
jb
cltd
sub
push
pop
add
popf
movsl
fucomp
repz
adc
lea
pop
mov
je
mov
cmp
mov
inc
ret
enter
inc
outsl
inc
ss
mov
rorb
sahf
rcrl
mov
test
les
adc
movhps
testl
mov
jmp
in
fistpl
movsl
and
xchg
mov
xchg
push
push
cmp
add
xorb
jnp
in
pop
cmp
xlat
fwait
cmpsl
xor
mov
cmc
ss
mov
clc
insb
add
dec
cmpsb
clc
cmpsb
xlat
mov
push
mov
sbb
test
cmp
ficompl
xchg
test
sbb
ljmp
cmp
sub
jl
lea
cmp
xor
lcall
insl
cli
sahf
dec
mov
fcmovu
rcrb
insb
loopne
repz
mov
cmpsb
mov
ja
jbe
outsl
sub
or
dec
aam
clc
sarb
pop
push
add
push
ficoml
in
pop
cmp
aam
popf
add
xor
push
mov
inc
cltd
push
dec
push
or
ja
mov
or
cmp
ds
and
mov
loopne
jb
lret
cmp
mov
cmp
mov
test
jo
insb
lahf
adc
adc
add
pop
hlt
iret
shlb
sub
adc
push
dec
enter
fadd
xchg
xor
mov
aad
inc
fdivp
js
dec
adc
cs
mov
mov
aas
mov
int3
sbb
mov
lds
into
and
pop
cmp
cli
mov
push
push
mov
rol
push
ret
loope
pop
mov
sbb
test
lea
jno
add
stc
dec
add
jnp
adc
inc
enter
xchg
jne
lret
inc
dec
pop
inc
add
and
loop
sbb
popl
pop
cmpsl
xchg
xor
pop
sahf
cwtl
iret
xchg
ds
lods
push
pushf
dec
pusha
mov
add
ss
repz
sbb
mov
or
outsb
mov
add
bnd
aad
cmp
icebp
lods
mov
clc
or
fs
lods
push
testl
or
aam
sarl
push
adc
adc
int
and
mov
jne
dec
and
mov
push
bound
das
push
adc
loop
sbb
cmpsb
leave
sbb
outsl
shll
out
test
insb
test
ja
mov
sub
aam
cltd
mov
dec
test
mov
and
sub
cmp
sub
fisubl
or
mov
in
lock
pop
dec
movsl
in
cmp
inc
daa
cmp
push
ljmp
popf
lods
insl
fs
and
push
cli
xor
jge
inc
jmp
mov
jno
pop
aaa
ds
sbb
add
movsb
and
jnp
push
jl
add
ret
xor
lret
aaa
hlt
push
xchg
outsb
push
fdivl
addl
in
fsubrs
push
fstl
jg
divb
sbb
xchg
fisubs
mov
insl
or
cs
ljmp
cmp
sub
test
movd
js
js
and
jp
sub
adc
imul
inc
sub
repnz
mov
adc
jmp
push
fists
adc
idiv
jmp
xor
test
cmpsb
add
das
jb
test
filds
or
in
xchg
pop
push
loop
fnstenv
insl
lods
inc
ljmp
outsb
stos
fisubs
int3
nop
sub
lock
cmp
pop
loop
andl
out
push
adc
lahf
clc
imul
or
adc
enter
test
pop
lds
sarl
and
jecxz
xchg
mov
scas
push
fsubrl
cli
in
inc
aad
fldl
movb
mov
bound
outsb
jmp
mov
cmpsb
iret
cmp
test
jl
mov
jns
inc
push
jmp
pushf
cmp
lds
negb
or
adcl
popa
imul
ja
pushf
cmp
js
lret
insl
inc
ja
in
mov
xchg
xchg
xchg
lock
cmc
mov
popl
and
pop
test
sarb
push
es
dec
fcmovb
ret
insl
push
shlb
lcall
xor
fidivrs
xlat
mov
test
sahf
xor
and
jo
cmp
dec
lock
mov
in
jp
ret
aas
mov
aad
add
negb
and
rol
arpl
xchg
lock
into
jno
lods
lea
pop
into
mov
mov
adc
imul
xchg
pop
push
scas
in
fadd
jno
movsb
lret
and
push
std
and
das
xchg
ja
cs
or
inc
xchg
jmp
repz
lret
aas
loop
bnd
out
je
push
std
push
lds
cmp
xor
insb
out
in
xchg
cld
dec
push
repz
xor
popf
and
dec
mov
sbb
ret
pop
push
sbbb
xor
xchg
push
leave
imul
cmc
lahf
nop
add
mov
push
ret
mov
inc
stos
inc
js
xchg
jnp
mov
mov
cltd
stos
sahf
and
jmp
xor
jo
repz
or
inc
xchg
xor
call
jnp
dec
loopne
test
stos
cmp
lods
fstps
or
lea
cltd
mov
test
fwait
adc
cmp
loop,pn
ficoml
sub
gs
cmp
mov
adc
mov
imul
or
sub
movsb
pop
jb
and
mov
into
adc
data16
cmpsb
add
xor
in
les
sahf
mov
lcall
mov
add
fmull
mov
ss
fsubrp
sub
dec
cmp
jmp
push
shrl
cmpsl
mov
mov
ret
fwait
cli
xor
pop
adc
lret
ret
mov
inc
cmpsl
cmp
dec
sbb
or
out
sbb
rorb
xchg
mov
sbb
int
lcall
lahf
xchg
sti
and
jge
lods
mov
lds
adc
adc
pop
dec
dec
mov
stos
test
repnz
aad
mov
les
pop
insb
jno
mov
arpl
mov
cwtl
xchg
adc
mov
xor
clc
or
pop
dec
shll
dec
cwtl
in
mov
mov
jp
mov
inc
pop
push
push
push
repnz
mov
filds
test
cmp
jno
sub
sbb
adc
sbb
cmp
inc
stos
xor
xorl
ror
mov
lock
mov
pop
bound
bound
push
ss
movsb
add
dec
ds
icebp
data16
and
cmp
dec
mov
outsl
fs
mov
loope
shlb
mov
scas
loopne
pop
testb
test
mov
orb
nop
mov
hlt
push
mov
pop
sbb
std
insb
dec
dec
jmp
lods
es
outsb
and
pop
sahf
icebp
outsl
loope
jge
sahf
sub
fisubs
mov
enter
add
dec
adc
dec
xchg
dec
mov
mov
int3
rcrb
xor
xor
std
or
insb
push
add
stos
imul
jo
pop
jl
nop
mov
jbe
clc
out
dec
pop
cmc
std
pop
mov
ds
inc
scas
dec
enter
xor
push
ljmp
in
faddl
lea
js
push
aas
dec
sub
fwait
test
jmp
or
rcll
add
xchg
cmp
sbb
mov
ret
gs
sub
and
sub
das
add
xor
insl
movsb
sbb
push
std
xchg
and
movsb
roll
in
insl
sarl
sbb
dec
notb
cmp
add
jecxz
std
cltd
ss
jae
add
in
push
movsl
mov
cvtps2pi
dec
and
jo
ret
jns
testl
xor
stos
in
call
and
repz
mov
int
aad
aam
popf
popf
xor
sub
pop
popa
cltd
mov
daa
dec
jge
xchg
lcall
mov
cmp
cmpsb
cmp
pushf
pushf
int3
loop
jp
pop
ret
cmp
adc
cmc
mov
cmc
std
pop
push
stos
int3
mov
xor
rcrb
inc
push
sub
shlb
pop
std
mov
lret
sub
dec
nop
ja
test
mov
test
lret
push
jb
out
and
push
addb
testb
or
add
out
push
inc
add
test
mov
jno
inc
sbb
lds
mov
addr16
ds
pop
ss
mov
out
ret
out
int3
xlat
mov
inc
mov
pop
call
rcrb
rcrb
pop
pop
or
xchg
lds
aas
mov
dec
jle
jns
cmpsb
cmp
pop
add
xchg
mov
push
cs
mov
js
testb
adc
or
sarb
fstps
push
rolb
adc
fcomps
std
or
dec
push
test
fimull
jbe
rcrb
ja
movsb
sbb
add
jns
call
inc
push
sti
jp
je
dec
mov
xchg
aad
mov
scas
push
ljmp
scas
dec
sub
rcrl
scas
dec
xchg
insb
repnz
mov
cmp
push
cmpb
sub
scas
sbb
loopne
mov
aas
in
mov
aaa
or
in
fidivs
xchg
orb
loopne
pop
xchg
data16
add
insb
mov
push
add
inc
push
mov
xor
test
mov
cmp
rcrl
fcomip
mov
mov
in
jne
jbe
test
rcrb
mov
aad
sub
std
into
and
mov
scas
jg
cmpsb
mov
xchg
sar
or
mov
inc
or
nop
addr16
in
jge
sub
cmpsb
jno
outsl
hlt
pop
push
stc
faddl
pop
mov
push
mov
jp
in
or
dec
inc
xlat
mov
icebp
push
aaa
and
pop
repnz
faddl
inc
imul
outsl
fidivl
push
lods
mov
call
jns
xor
imul
insl
mov
loopne
mov
xchg
mov
pop
mov
xor
adc
add
mov
rsm
and
cltd
mov
inc
rcr
xlat
mov
xchg
add
cmp
lea
jbe
or
je
jp
adc
mov
fbld
dec
cmpsl
stos
cmp
leave
pop
mov
cld
pop
mov
andl
add
xor
mov
jp
sub
addr16
push
inc
bound
jne
lods
xor
and
xchg
or
test
ret
dec
dec
stc
lcall
jne
ficoms
inc
movsb
inc
mov
and
shrl
testl
jg
add
mov
fisubrl
xchg
in
test
mov
xor
shr
push
sub
js
xorb
pop
data16
adc
mov
aas
fs
icebp
pop
ret
cmp
adc
or
mov
jmp
insb
or
cmp
daa
pushf
or
and
roll
pop
cmp
jge
add
lods
sbb
daa
mov
pop
mov
mov
fcmovu
sub
jmp
or
lock
loop
mov
je
lock
mov
jmp
aam
pop
ffreep
testb
insb
cmp
mov
cmp
outsb
push
in
les
sbb
inc
push
daa
adc
mov
inc
imul
dec
pop
sahf
std
mov
dec
adc
jecxz
lahf
sbb
push
push
repnz
sbb
xchg
test
nop
sbb
mov
int3
jnp
insl
xor
push
inc
jle
lock
mov
inc
dec
imul
lds
lahf
testb
xor
lahf
cmp
xchg
dec
pop
add
repz
sub
lock
movsb
cmp
cmpsb
adc
shlb
mov
test
out
adc
inc
lcall
and
loop
cltd
push
imul
push
xor
movsl
icebp
jno
popa
lods
leave
push
xchg
out
into
mov
mov
push
aaa
insb
xor
out
mov
xchg
out
xchg
jo
les
and
outsb
jo
imul
into
inc
int3
jle
data16
iret
push
inc
dec
mov
cs
xor
js
ret
cmc
dec
push
fs
cmp
jecxz
out
push
mov
add
pop
cmp
or
jbe
ret
jae
inc
cmpsl
xchg
xchg
lea
push
aas
push
inc
inc
pop
leave
and
fiadds
in
add
fdivrp
cmp
stos
dec
xor
sbbb
loopne
and
push
xor
fs
hlt
in
mov
fcompl
mov
test
inc
cld
pop
lock
dec
pop
rcrl
adc
or
push
inc
in
rcl
bnd
scas
ja
mov
push
jbe
cmpsb
or
add
sahf
leave
shlb
pop
adc
pop
aad
lds
push
leave
fstpt
jae
icebp
movl
mov
scas
addl
push
sub
xor
cwtl
xor
imul
sbb
sbb
dec
cmp
pop
cwtl
push
outsb
shlb
sbb
inc
jns
incl
mov
and
push
inc
mov
fists
loop
sbb
fwait
push
xchg
call
mov
xchg
xchg
cmp
lods
dec
add
das
cmp
xor
mov
add
jp
sub
scas
fldt
pushf
leave
aam
jg
cmp
xchg
lds
clc
negb
xchg
add
push
mov
or
rcll
and
push
cmp
pusha
or
xor
pop
imul
call
shlb
pop
outsl
cli
and
ljmp
outsl
call
rorb
jno
rclb
inc
dec
jg
pop
cmp
sub
scas
shrl
jo
xlat
cmp
push
mov
test
xchg
js
mov
popf
jnp
and
fmuls
dec
das
loop
scas
cmp
pop
dec
sbb
jno
or
jg
lods
pop
sti
ss
add
stc
nop
imul
cmp
cld
pusha
call
cmp
xchg
push
xor
test
dec
dec
sbb
add
xor
inc
aad
or
aam
sbb
pop
insl
xor
in
je
montmul
cmpsb
inc
cltd
xchg
mov
xor
mov
lret
int3
loop
fdivrs
paddusw
sbb
or
sbb
pop
sbb
mov
shlb
mov
std
push
pushf
pop
cmpsb
bound
rclb
scas
sub
popf
iret
jg
cli
mov
push
fistpll
jmp
inc
sbb
push
pop
iret
jbe
aas
out
jge
mov
imul
xchg
test
shlb
mov
or
push
jno
jl
xchg
ds
xchg
mov
icebp
cltd
push
mov
fwait
aas
pushf
sbb
or
sarb
pop
jnp
push
mov
add
arpl
xor
mov
scas
hlt
daa
xchg
clc
push
xchg
fstpt
mov
pop
pushf
and
data16
inc
and
sti
dec
cltd
std
dec
jg
xchg
xchg
push
in
stc
mov
hlt
or
ret
mov
rorb
out
mov
push
mov
popa
jp
xchg
mov
push
cmpsb
mov
fildll
mov
or
packsswb
xor
xor
sub
mov
sti
rorb
push
scas
stos
sub
adc
sub
insb
mov
sbb
pop
mov
popa
cmp
lahf
mov
sub
sub
ljmp
pop
xor
rcrl
test
sbb
popa
shlb
pusha
imul
and
dec
dec
test
aas
into
push
andb
push
jae
and
inc
xlat
jmp
jno
xor
mov
dec
fisubs
dec
add
pop
das
icebp
push
jbe
out
mov
repz
sarb
pop
hlt
movntq
out
dec
dec
add
add
aaa
inc
sarb
jno
pop
add
add
iret
popa
xchg
imul
inc
jecxz
js
fadds
sbb
mov
sub
add
fs
fidivs
loope
xchg
clc
mov
das
xchg
lret
xlat
mov
fldcw
pop
sarb
mov
insl
loopne
sbb
test
ds
insl
cmp
js
cmpsb
pop
ss
and
incl
dec
out
rcrl
data16
je
mov
dec
pop
adc
xchg
pop
psadbw
jp
sbb
dec
pop
call
popl
cmp
xchg
cmc
push
jmp
push
push
sahf
xchg
and
clc
push
inc
cmp
xchg
pop
addb
mov
int3
jo
sbb
imul
aad
xor
arpl
stos
push
out
fiadds
in
repnz
sbb
arpl
movsb
hlt
xor
jg
mov
mov
xchg
sti
mov
push
push
stos
xchg
xor
icebp
xor
pop
sbbb
les
in
xor
test
push
roll
sbbl
fistpl
sti
orl
adc
adc
mov
popa
mov
inc
add
out
push
mov
pop
mov
int3
xor
sti
in
add
out
scas
sub
shll
popf
test
and
inc
mov
jg
roll
sub
sub
mov
jne
pop
cmc
pop
dec
scas
in
and
pop
dec
bound
popf
mov
mov
mov
jb
jb
pop
int
or
cs
je
push
mov
sub
and
mov
jo
fcmovb
rorb
out
inc
ljmp
jecxz
arpl
shlb
dec
dec
dec
jecxz
sbbl
cmp
add
je
je
or
mov
das
leave
dec
aam
or
nop
push
cld
pop
inc
arpl
and
scas
lods
inc
loope
mov
lds
fsts
test
pop
lcall
inc
movsb
loopne
adc
pushf
and
push
add
lret
xchg
fimuls
xchg
cli
test
xor
imul
imul
jl
sub
add
bound
and
pop
outsb
or
or
pop
ds
xchg
das
jnp
loopne
push
sub
aaa
shl
mov
adc
sbb
test
and
inc
out
push
lods
cwtl
cmp
leave
cmpsl
cmp
jl
jo
outsb
in
push
adc
repz
popa
and
cli
mov
in
mov
fildl
pop
xor
mov
push
aas
inc
sahf
out
jle
test
lret
jge
insl
sahf
lahf
sahf
push
push
push
mov
imul
sbb
mov
cmpsl
jg
mov
loop
inc
push
lcall
mov
mov
add
inc
jecxz
rcrb
jl
stos
mov
pop
test
fistps
rcr
add
push
call
outsl
shl
mov
fistl
outsb
mov
pop
sub
mov
out
shl
lea
sbb
fimull
adcb
mov
jecxz
pusha
lcall
pop
into
sbb
fldcw
sub
aas
addb
sbb
push
add
imul
jmp
leave
jecxz
fdivl
mov
inc
push
mov
mov
cmp
xor
gs
aam
jge
dec
mov
loopne
sub
push
inc
test
mov
mov
push
mov
dec
jecxz
xchg
dec
adc
jecxz
test
sub
and
xorl
out
or
add
mov
sbb
xchg
dec
lock
push
fwait
mov
xor
bound
xchg
imul
xchg
xor
repnz
jno
inc
xchg
test
jge
outsb
scas
stc
aaa
out
les
sub
loop
mov
inc
mov
les
jbe
push
and
inc
mov
jae
cmp
sbb
sub
and
sbb
in
mov
add
jge
mov
lcall
das
mov
sbb
cld
add
out
xor
aad
and
clc
bnd
mov
mov
jp
jbe
addr16
cli
xchg
jnp
mov
insb
lea
inc
fsts
jp
xor
mov
mov
cmp
or
out
gs
dec
loop
sti
jns
rolb
and
orl
in
icebp
inc
test
push
pop
mov
inc
stos
cmp
push
cmp
lret
pop
sub
add
lods
je
loop
test
add
data16
imul
lcall
aaa
xor
mov
pop
pop
mov
add
ret
in
shl
nop
mov
sbb
loopne
cmpb
dec
imul
xchg
stos
pop
mov
loope
scas
hlt
dec
push
stc
mov
pop
jle
fcomp
pop
cltd
arpl
aad
stc
mov
adc
fbstp
cmpsl
push
cmc
xchg
imul
lret
out
jmp
jg
test
bound
jbe
pop
loopne
dec
sti
and
cmp
or
clc
mov
xor
pusha
stos
inc
xchg
jns
cld
scas
sbb
and
iret
adcl
add
out
jmp
dec
addb
shl
xchg
ja
add
enter
fiaddl
int
or
aad
dec
pop
inc
jbe
imul
in
or
jl
cmp
xchg
push
pop
popa
aad
es
mov
inc
pop
insl
test
jecxz
add
push
sub
push
inc
test
out
xor
jbe
inc
outsb
add
je
fnstsw
repnz
jne
sub
adc
fdivrs
xor
stc
scas
add
or
insb
repnz
and
lea
lahf
cmp
inc
daa
stos
in
aad
jg
mov
push
jb
out
push
push
sub
lds
adcl
pop
imul
push
mov
pusha
fstps
daa
jl
ss
xchg
dec
jle
les
loop
jg
outsl
es
pusha
sti
lea
sub
mov
sbb
jne
mov
sti
mov
adc
lret
loop
xchg
enter
imul
in
cmp
ss
stos
inc
cmp
mov
mov
test
jno
fldl
mov
pop
fbld
add
mov
in
mov
aam
pop
jg
sub
adc
je
fistps
bound
ret
cmp
cmp
mov
imulb
rcll
stos
fmuls
std
xchg
fisttpll
test
fcmovnb
mov
sti
and
out
imul
test
pop
pop
add
int3
lahf
xor
test
pop
aad
movsb
jae
dec
adc
call
sbb
je
jl
fs
lock
add
pop
adc
push
lock
mov
mov
xor
popa
cltd
loop
popf
adc
jge
arpl
fisubrl
lcall
iret
mov
cltd
xor
mov
sbb
dec
addr16
outsl
jmp
xlat
scas
pop
out
sbb
aad
aam
in
outsl
clc
cmc
movsb
cmp
adc
pop
pop
idivl
mov
insl
mov
jp
cltd
and
jnp
xor
cmp
sub
xchg
jmp
hlt
add
pop
repnz
and
xor
orb
mov
mov
dec
adc
pop
pop
jae
push
sub
adc
loope
adc
dec
scas
test
pushf
scas
lcall
andb
or
fisttpl
stos
push
mov
mov
int
out
and
pop
pop
insl
add
xchg
xor
out
adc
bound
xor
xor
push
inc
push
sub
mov
sbb
rcrb
fidivrl
push
cmp
dec
addr16
hlt
mov
sbb
call
push
data16
cwtl
shlb
test
shrb
aas
xchg
dec
test
or
inc
and
dec
inc
xchg
jge
ljmp
mov
push
rcr
adc
ds
pushf
adc
shll
jns
mov
cmp
push
in
orl
or
ret
mov
add
push
mov
inc
xor
nop
movsb
and
rclb
add
sti
push
subb
int3
arpl
and
pop
xor
and
jmp
inc
xor
in
fs
out
adc
mov
fdivrp
sub
mov
call
insb
mov
inc
aaa
xlat
decb
pop
push
sbb
popf
scas
imul
add
xchg
push
add
data16
push
in
adc
insl
jmp
push
insl
ret
out
cmp
sub
dec
pop
icebp
aas
sbb
ljmp
jno
aad
hlt
mov
mov
push
jmp
add
outsl
or
jb
fwait
pop
mov
push
push
jmp
stos
cmp
or
repnz
add
imul
clc
ljmp
xor
and
push
lods
or
out
dec
out
jns
insb
add
hlt
daa
mov
mov
push
and
enter
aas
dec
lret
xchg
cmpsl
jle
pusha
std
call
icebp
xor
test
incl
pop
mov
and
aam
mov
pop
push
popf
push
push
or
dec
mov
or
daa
cli
jnp
cmpsl
loop
nop
test
jne
jnp
aad
sub
push
nop
hlt
int
adc
into
and
push
sbb
insb
xchg
call
sub
push
es
and
pop
fwait
std
push
test
fbstp
mov
loopne
mov
icebp
push
jg
jne
push
cmpsl
orl
pop
cmp
jp
cltd
push
cmc
lret
cmpsb
pop
lods
rorb
cmp
xchg
repnz
pop
data16
addr16
jecxz
cwtl
adc
popa
cwtl
lcall
movsl
sub
lea
sub
and
xchg
loope
in
inc
cwtl
sub
sarl
add
sbb
mov
xor
lds
dec
and
mov
jo
es
add
or
popf
lods
add
push
jnp
xor
dec
mov
mov
and
jb
or
push
sbb
xchg
adc
repz
movsl
add
aaa
dec
stc
mov
lahf
mov
loopne
movsb
and
in
push
mov
bnd
mov
mov
movsl
xchg
pop
sbb
pop
and
ljmp
sbb
jnp
loopne
push
lods
xor
cmp
addr16
test
ja
shll
fwait
jb
xchg
aam
or
shl
aaa
jae
sbb
mov
imul
pop
in
xor
pusha
testl
fcmovne
pusha
int
dec
lock
insb
lock
and
movsb
mov
cwtl
or
and
cld
sub
xor
mov
add
jmp
aaa
popf
lods
push
mov
cmc
fsubrl
in
pop
in
loop
inc
cmc
ja
xor
mov
adc
push
ljmp
out
push
dec
js
cmp
cmpsl
cmp
or
add
lods
aaa
push
and
sub
stos
mov
testb
push
in
testl
js
pop
repnz
inc
mov
pop
in
mov
pop
sbb
xchg
je
les
aas
sbb
push
in
cmp
sub
xor
jne
dec
push
hlt
xchg
insb
pop
cmp
scas
cmp
mov
scas
xchg
rorl
fs
insl
lds
sbb
das
xor
lret
das
jmp
push
jmp
int
inc
lods
shl
jne
shlb
pop
scas
sahf
adc
pop
ss
shlb
lods
sub
out
fildl
push
enter
sub
mov
xchg
sub
add
jbe
mov
loopne
in
inc
push
pop
push
mov
or
ljmp
sti
ss
inc
cmp
inc
push
mov
lock
sub
rol
pop
and
int
jnp
stos
pop
ret
outsl
xchg
fs
dec
insl
sahf
adc
aas
bound
jg
push
and
dec
aam
xchg
jno
jae
adc
jo
adc
or
cmp
mov
movsl
icebp
inc
mov
xchg
xchg
add
scas
outsb
push
and
and
xchg
cs
xchg
pop
pop
shrl
insb
xor
add
flds
or
push
mov
sbb
gs
sbb
fwait
mov
jmp
mov
insb
jecxz
sbb
iret
cmp
push
sbb
es
mov
mov
fcomip
andl
jle
test
sbb
xchg
sbb
ficomps
fiaddl
cmp
lods
pushf
in
add
mov
enter
push
sahf
jecxz
sub
jo
cmc
sbb
and
jmp
das
jg
adc
rclb
aam
scas
add
sbb
sbb
pop
cmp
mov
ss
lahf
leave
pop
inc
add
js
push
cmpsb
enter
int
into
enter
push
jnp
lock
push
cmpsb
fsubl
in
or
pusha
shll
fildl
lcall
aad
aam
adc
shrl
xchg
cmp
lea
mov
das
ret
pop
or
push
sub
nop
aas
and
pop
adc
sbbl
lock
sbb
jo
shufps
rorl
loop
dec
mov
mov
or
data16
imul
mov
lds
sbb
repz
or
pop
idivl
jnp
data16
lahf
push
or
mov
or
in
push
cmc
lcall
jne
jg
pop
movsl
inc
sub
enter
push
xchg
dec
adc
lods
inc
aam
and
out
daa
aas
jno
jno
cld
lcall
jbe
aaa
sub
test
dec
je
lcall
push
lcall
stc
or
gs
movl
repnz
bound
xchg
scas
xchg
imul
icebp
movsl
mov
loope
or
int
dec
fs
leave
pop
leave
sub
pop
and
pop
inc
pushf
cmp
add
mov
popf
cmpsl
jae
cld
xchg
jo
sub
mov
jnp
dec
push
call
dec
pop
inc
fmull
cwtl
fiadds
outsl
sti
xchg
xor
mov
cmpsl
mov
mov
data16
bound
dec
and
popf
lods
push
dec
in
das
dec
xorl
xchg
mov
ficomps
mov
or
mov
push
inc
or
dec
test
mov
lret
dec
pop
ret
mov
daa
xlat
push
lock
vcvtsd2si
cmp
nop
loop
xlat
test
or
cmp
push
in
adc
popa
add
jmp
and
popf
add
ja
and
movsb
addr16
push
mov
ds
movl
jge
test
mov
jno
adc
lcall
cmpsb
lds
stos
inc
jno
aam
jle
xor
add
int3
push
arpl
mov
fwait
push
in
popf
mov
xor
loopne
xor
sti
pusha
aaa
scas
jne
xchg
ret
stos
loopne
pop
mov
ds
aas
fwait
jbe
clc
sbb
pusha
xchg
lods
jmp
mov
and
cmc
lret
imul
jle
out
xor
pushf
push
push
mov
mov
xor
push
popa
int
push
int
xchg
cmp
sub
jge
add
lods
mov
add
dec
mov
popf
mov
push
test
cld
inc
dec
adc
pop
jge
cmpsl
and
cmpsb
in
lret
rol
mov
in
enter
add
add
adc
pusha
inc
lret
and
mull
int3
fmull
add
xor
roll
mov
dec
adc
aas
jp
aad
leave
mov
xor
jo
inc
sub
ret
insb
dec
leave
nop
xor
lock
negb
imul
mov
xor
lret
mov
mov
and
add
xchg
mov
sbb
sbb
enter
xor
cli
pop
popa
fidivrs
add
gs
inc
pop
cld
mov
fidivrl
ljmp
sti
push
dec
dec
push
in
push
lret
inc
sub
xchg
inc
xor
adc
push
adc
inc
jle
pushf
cli
sbb
clc
jg
pop
mov
iret
add
cmp
add
dec
or
dec
in
in
aaa
jbe
imul
dec
jecxz
adc
mov
sarb
sbb
andb
mov
subl
push
push
sub
mov
inc
popa
fdivr
cs
fdivl
inc
mov
mov
cli
xchg
or
sbb
movb
js
push
insl
fisubrl
push
call
test
xchg
sbb
cmp
test
pop
mov
pop
pop
mov
xchg
push
je
fwait
out
adc
mov
jp
push
les
adc
sbb
mov
cmp
sbb
popf
jp
lret
cwtl
shlb
mov
out
addr16
lret
pop
cld
cmp
pop
mov
pavgb
cmp
xor
rclb
lds
repz
clc
and
dec
outsl
mov
cld
inc
repz
adc
fildl
dec
pop
pop
jae
sub
aas
jae
cmp
lock
fisubl
pop
iret
fisubrs
into
arpl
xchg
cmpsb
xchg
cld
ror
stc
xchg
ja
and
jl
xor
lret
ficoml
mov
jb
mov
stc
xchg
test
popl
leave
sbb
mov
mov
pop
pop
je
pop
sarl
popf
nop
jle
insb
mov
cmpsb
mov
inc
pop
dec
stos
sub
adc
mov
jle
outsb
mov
pop
fsubp
cmp
imul
lahf
jns
or
lcall
shll
mov
adc
xchg
dec
test
das
push
rclb
out
inc
jl
xchg
sub
scas
aas
mov
cmp
in
pop
insb
filds
cmp
lods
out
cmpb
shrb
inc
mov
rdpmc
mov
xchg
cmp
ret
mov
lock
mov
inc
fwait
imul
inc
stc
and
ret
pop
pop
inc
pushf
xor
mov
sarb
shrb
xor
arpl
or
ljmp
inc
flds
sbb
decb
pushfw
shl
lahf
loope
adc
cltd
cmp
inc
fidivrl
sbb
jecxz
aas
loope
xor
push
outsb
in
ja
inc
pop
dec
jecxz
jb
jecxz
jmp
push
sbb
push
popf
rcl
repnz
fdivl
adc
mov
adc
xchg
mov
outsl
push
in
repnz
insl
xchg
mov
js
adc
jmp
lea
add
cmp
xor
mov
fstpt
dec
faddl
call
push
mov
mov
les
and
sbb
inc
mov
xchg
in
loop
sbb
cmp
sbb
repz
xor
hlt
shrb
adc
das
mov
mov
lds
idivb
add
dec
sarb
icebp
and
mov
ret
rcrl
xor
aas
cwtl
inc
and
orl
jnp
mov
sub
pop
jp
cmpb
cmpsb
xchg
jecxz
fidivrs
xchg
scas
ftst
test
inc
jae
jle
addr16
pop
loope
lea
idivl
movl
and
sahf
push
xchg
insl
adc
das
xchg
push
repz
sbb
adc
dec
xlat
rol
mov
mov
mov
xchg
movsl
xor
addl
aas
mov
jno
pusha
sbb
add
mov
cld
mov
mov
sbb
lea
mov
fnsave
jb
jp
pop
mov
ds
adc
les
push
add
adc
cs
fisttps
adc
leave
mov
xchg
stos
mov
dec
sbb
or
int
add
mov
sbb
scas
jb
sub
out
adc
add
sbb
jne
pop
negl
ss
jno
rclb
adc
lock
aas
push
std
mov
stos
in
sbb
push
push
sub
ja
cmc
jo
pop
xchg
cmp
sahf
jnp
std
inc
sbbb
loope
out
clc
xchg
mov
jbe
xchg
jbe
add
xor
xchg
jns
mov
cwtl
push
insl
adc
roll
mov
out
bound
pop
pop
adc
stc
sahf
aaa
fadds
jg
jne
scas
outsb
rolb
xchg
insb
popa
xor
sti
test
stos
sbb
cltd
jne
daa
arpl
pop
dec
jo
rcrl
or
mov
push
inc
je
xor
fs
aam
stos
fptan
cmc
dec
in
and
clc
out
lock
scas
loopne
jns
shl
push
add
movsb
xorb
out
lcall
adc
or
shlb
pop
nop
adc
je
fbld
cmpsl
push
pushf
lcall
pushf
test
decb
ds
movsl
insb
jle
fcomps
add
or
ret
rcl
or
pop
mov
rcl
in
add
cmp
cmp
mov
add
inc
clc
adc
insl
push
fimull
pop
leave
sbb
cmpsb
add
dec
dec
jmp
push
std
cmp
in
inc
inc
addr16
lret
jno
cmpsl
sti
mov
push
mov
sbb
in
movsb
inc
lret
inc
and
sbb
outsb
and
xor
jp
pusha
and
lods
pop
mov
push
add
xorl
mov
leave
gs
inc
push
cmpsb
pusha
xsha256
cmpsb
xchg
lds
testb
pushf
lret
xchg
cmp
addl
mov
test
sbb
push
movsl
aam
iret
mov
mov
fidivl
stos
roll
push
shrb
in
xchg
sub
xchg
inc
add
aam
mov
sub
or
xor
fdivs
or
repnz
imull
jle
jnp
lea
call
popa
push
push
push
push
fbstp
loop
popf
pop
out
mov
push
jbe
and
data16
dec
and
ret
push
mov
push
inc
stos
jbe
lods
xor
dec
imul
pop
xor
divb
sub
and
dec
push
add
ja
xchg
jno
push
mov
mov
or
ret
inc
mov
fst
addb
enter
inc
fmul
inc
mov
out
std
lahf
push
jge
cwtl
pop
aaa
scas
adc
pop
je
outsb
jae
shll
adc
pop
mov
dec
inc
fsubrl
imul
test
inc
dec
fdivrl
cmp
mov
push
pop
imul
dec
cmc
mov
pushf
cmp
or
adc
cmp
xlat
mov
or
cmpsl
sbb
jle
dec
aam
pop
sbb
scas
sub
int
inc
xor
mov
jge
out
and
and
mov
sbb
push
ljmp
int3
mov
sbb
mov
repnz
jp
jae
adc
sahf
out
test
pop
jae
test
outsb
call
shrb
mov
cwtl
je
add
jle
fnstcw
insb
or
mov
mov
fwait
scas
jmp
adc
popf
xor
sub
ljmp
call
dec
pusha
jbe
repnz
fs
jmp
or
movsl
cmp
or
fisubrs
psllw
sbb
push
cmp
cmp
iret
sub
es
dec
mov
insl
out
xchg
or
pop
dec
push
cld
jle
xor
sbbl
pop
jae
fldl
idivb
jecxz
imul
or
xlat
std
cmpsb
sbbb
flds
add
scas
jg
push
addr16
insl
and
xchg
sub
enter
leave
fs
loopne
lcall
lock
cmp
cld
stos
xor
push
in
fsubr
inc
inc
pop
icebp
jbe
test
pushf
add
dec
adc
pop
and
es
jge
insl
outsb
ds
lods
pop
dec
insl
mov
ss
scas
mov
push
in
xchg
stc
adc
outsb
mov
fidivs
das
jno
xchg
push
push
dec
aad
inc
pop
fcmovu
icebp
push
mov
int3
imul
mov
cmp
cwtl
shlb
cli
pop
pop
pop
jbe
ret
xchg
inc
adc
sbb
shlb
sub
je
ljmp
pop
mov
push
xchg
push
sbb
icebp
enter
adc
movsl
push
jb
lock
cmp
scas
aad
mov
inc
sbb
mov
xchg
ret
repnz
cmp
xor
fisubl
outsb
loopne
add
add
subb
rorb
ljmp
jns
jb
loope
adc
mov
in
cmp
mov
dec
mov
in
mov
pop
addr16
lret
ja
rep
hlt
test
adc
mov
sbb
xchg
sub
cmpxchg
mov
xchg
push
jmp
adc
icebp
adc
icebp
sbb
cmp
xchg
mov
mov
sub
incl
movsb
xchg
jl
movsb
cmp
loopne
pushf
jge
pushf
daa
mov
mov
jp
mov
pop
cmp
or
movsb
icebp
sahf
push
fwait
push
mov
lock
cmpsb
cmc
pushf
pop
cmp
in
cwtl
cwtl
lahf
jp
mov
mov
icebp
or
jb
mov
adc
push
mov
jmp
cmp
xor
push
mulb
sti
xchg
mov
add
jbe
jae
mov
xchg
xor
pop
es
push
inc
jle
jae
xchg
arpl
icebp
mov
jbe
jb
popa
mov
andb
xchg
mov
adc
inc
int
push
jmp
aam
xor
outsl
pop
nop
dec
incl
repnz
and
pop
xchg
pop
sbb
je
in
lahf
and
xchg
and
test
inc
and
js
movsl
cmp
lahf
push
sub
jp
cli
sub
cs
sbb
enter
ret
insl
jg
cmpsb
cmp
cltd
jmp
shrl
adc
popa
sbb
call
mov
negl
mov
mov
sbb
xchg
jp
jle
ret
lds
pop
arpl
sarl
hlt
mov
repnz
xor
ror
mov
lods
cmc
or
icebp
cmp
cli
push
push
cmp
sbb
pop
insl
fs
mov
pop
push
aam
jl
aad
dec
pop
sub
out
sbb
xor
rorb
hlt
cli
popa
cmp
aam
pop
inc
in
ret
movsl
enter
adc
cmp
push
aad
xchg
mov
push
adc
cmc
mov
je
repnz
xchg
jbe
mov
push
push
inc
xchg
into
adc
jecxz
popf
push
stos
mov
iret
jbe
out
cmpsl
mov
cmpsl
mov
std
mov
lcall
adc
or
cld
les
jecxz
ja
mov
inc
fstl
outsl
lret
movsl
xlat
cmc
ljmp
popl
cmp
sbb
fiadds
lret
bound
mov
or
add
dec
sbb
and
cwtl
rol
cwtl
push
add
xchg
and
ds
adc
sbb
das
test
push
pop
repz
jno
push
jb
or
sub
loopne
and
jns
cmp
sbb
cltd
cmc
imul
xchg
data16
mov
iret
aas
mov
mov
or
pop
daa
push
jne
jae
ficomps
gs
cmp
inc
adc
push
cmpsb
push
pop
ret
shll
push
jno
popl
mov
mov
fucomp
pop
setno
jge
jnp
or
jnp
and
repnz
adc
imul
icebp
into
jns
lods
inc
bound
test
jb
dec
rorl
adc
pusha
or
sbb
push
pop
jbe
outsl
int3
mov
xor
in
pop
mov
shrl
xchg
push
lea
ret
xchg
dec
cmp
dec
pop
jbe
decl
adc
and
jecxz
out
adc
test
aad
mov
jae
xchg
lahf
div
inc
adc
subl
in
imul
fdivr
test
leave
fistpll
faddl
decl
xor
mov
sub
lods
jb
jne
adc
xchg
test
repz
ljmp
ss
jmp
call
fwait
cmp
adcb
add
fisttpl
and
push
lock
cs
stos
xchg
cmpsl
sbb
push
jmp
in
cmp
out
push
dec
add
shlb
push
fs
aaa
push
cli
and
stos
fwait
xchg
cmp
mov
insl
mov
outsb
add
xlat
daa
and
out
jae
pop
iret
test
mov
or
pop
or
pop
hlt
or
jnp
popa
jo
outsb
iret
add
lock
xchg
jns
enter
push
flds
daa
pop
xlat
dec
xor
out
pop
pop
outsb
inc
test
cmp
loope
lahf
xchg
sti
cmp
or
sbb
xchg
jl
xorl
pusha
sti
inc
xchg
mov
mov
pop
aad
push
xchg
je
popa
stos
jno
es
pushl
out
cmp
fdivs
dec
dec
mov
sarb
mov
pusha
pop
sub
scas
pop
cmp
scas
loope
pop
adc
imul
ficoml
adc
push
popf
dec
in
stc
mov
inc
jge
div
jo
xor
and
push
test
mov
xor
jl
andl
and
xchg
ljmp
in
cwtl
jmp
subb
shlb
aad
mov
dec
fucomp
mov
cltd
ljmp
mov
mov
and
or
mov
xchg
pop
add
jmp
or
leave
mov
push
push
out
ja
and
and
or
scas
push
jmp
outsb
mov
xlat
shrb
xor
imul
push
adc
sbb
cmc
mov
lcall
push
outsl
cmp
fcomps
ss
sub
pop
xor
test
in
ficoms
adc
pop
mov
adc
pop
push
insb
loope
and
xor
sub
mov
jle
test
mov
mov
sub
dec
and
push
inc
lahf
shlb
mov
pop
aaa
jl
aaa
jle
stos
inc
clc
orb
adc
adc
and
cmpsl
inc
shr
mov
xor
sbb
mov
cltd
jbe
or
jno
add
jle
xchg
ss
xchg
ds
mov
jmp
test
mov
fwait
xor
jmp
movups
into
add
pop
push
xchg
push
mov
fwait
pop
xor
dec
out
fisubrs
jne
pushf
adc
stc
xor
in
push
lahf
lods
inc
imul
sbbl
rcrb
mov
es
and
in
lea
scas
push
lods
add
lcall
push
mov
aaa
test
pop
jne
scas
lcall
icebp
add
test
lret
ficompl
cmp
subb
cmp
cmp
repnz
je
lcall
inc
inc
jne
lods
mov
aad
dec
nop
sub
push
cltd
push
adcb
add
lds
cli
int3
clc
or
fyl2x
nop
arpl
push
dec
arpl
cmp
xor
leave
pop
lret
cwtl
add
mov
sahf
addr16
xlat
mov
andl
es
cwtl
out
sbb
mov
cwtl
stos
add
movsb
inc
xor
repnz
push
adc
and
fwait
bound
dec
lods
notl
mov
stos
or
lret
push
mov
add
iret
pop
pop
or
daa
inc
movsl
mov
jg
jno
xchg
loop
adc
xchg
fisttpl
insl
sbb
pop
push
inc
sub
push
inc
mov
and
mov
add
and
adc
jae
xor
add
jg
sub
inc
das
mov
mov
or
xlat
xchg
pop
jge
xchg
push
and
push
insl
jge
cmp
mov
dec
ljmp
add
pop
repz
cwtl
js
aad
ds
ss
imul
jae
fisubs
jp
sub
dec
movsb
rolb
pop
and
jb
cmpsl
loop
fnstenv
inc
dec
das
mov
js
xchg
cmpl
and
imul
adc
dec
xor
adc
sti
movsl
arpl
sahf
clc
lret
sbb
int3
dec
loop
xchg
sbb
mov
inc
inc
fstpt
dec
jecxz
sti
fistl
xor
adc
sbb
mov
pop
fs
scas
jecxz
mov
cmp
push
and
mov
popa
fsts
add
cli
inc
inc
fldl
out
xlat
insl
add
jne
dec
sub
repnz
aad
xor
push
data16
cwtl
pop
sbb
addl
ret
mov
lds
mull
out
aam
testl
xor
bound
lret
mov
cmpsl
sahf
pop
mov
enter
xor
loopne
add
popf
ss
and
xor
ret
aad
xchg
stos
fcoms
adc
inc
cmc
into
or
cmp
leave
imul
es
lods
push
mov
mov
nop
jno
jmp
addl
cmp
push
std
imul
jecxz
fwait
jge
dec
mov
mov
xchg
int3
mov
mov
push
mov
xchg
imul
push
or
xor
inc
loopne
dec
mov
repz
cmc
or
sahf
stos
inc
cmc
cmp
add
dec
ret
xlat
inc
stos
mov
loopne
xor
adcb
add
loop
dec
in
inc
and
movsl
pop
inc
lods
mov
pushf
xor
xor
mov
jno
xchg
lcall
xchg
jne
in
pop
xor
push
xchg
dec
je
mov
jae
jno
sub
cli
push
mov
adc
leave
pusha
add
push
in
cltd
mov
cmp
adc
push
fsubs
loope
dec
insb
sub
and
mov
arpl
cmc
mov
jge
fdivs
or
push
cwtl
test
addr16
mov
jne
cmp
in
cwtl
hlt
mov
sub
sarl
add
adc
jmp
loopne
es
lahf
outsl
xor
in
push
sub
pop
dec
lcall
sub
or
jg
shlb
jle
es
lret
imul
stos
mov
les
icebp
nop
lods
push
pop
mov
insb
mov
xchg
or
test
imul
mov
iret
push
push
cmp
cli
xor
lcall
nop
aaa
adc
jmp
xor
mov
adc
xchg
add
or
pop
mov
js
lcall
fwait
repnz
nop
inc
adc
xchg
push
or
icebp
mov
push
fidivl
push
and
fstpl
repnz
fidivl
es
sbb
jl
mov
mov
imul
mov
mov
mov
mov
adc
mov
repz
out
dec
test
idivb
pop
ret
fsts
cmp
pop
dec
sahf
pusha
or
adc
shll
cli
dec
sub
rolb
loopne
icebp
es
lock
dec
insl
js
cmpsb
fbstp
mov
sbb
sbb
jns
mov
mov
push
lret
jnp
out
pop
imul
mov
fidivrl
push
push
mov
lahf
pusha
lods
inc
push
or
leave
and
lods
inc
pop
push
int3
jg
adc
push
dec
pop
fimuls
pusha
add
pop
add
push
mov
lcall
xor
into
daa
in
jp
add
out
je
mov
daa
cmp
insb
xchg
push
jne
or
pop
mov
fdivs
cmp
das
xchg
add
movsl
cmp
and
cld
push
les
sbb
fs
loopw
cltd
in
jmp
or
mov
fsts
push
cmpsl
cmp
add
stc
adc
rorl
add
cmp
int3
sbb
sbb
jl
pop
mov
enter
fwait
push
sbb
stc
push
dec
addr16
lods
and
fistpl
dec
cld
outsb
rolb
mov
mov
in
jnp
out
mov
cmpsb
xchg
insb
cltd
cmp
mov
int3
icebp
ret
jge
ret
sti
inc
pop
sbb
nop
and
jmp
es
push
movsb
dec
ret
stc
pop
leave
and
cld
or
lcall
pop
stos
mov
cmp
leave
cmpsb
xchg
stc
repz
add
pop
mov
fnstcw
insl
clc
or
hlt
sub
dec
lock
mov
cwtl
rcrl
lock
jb
mov
sahf
ret
hlt
stos
inc
cs
lret
data16
sub
bound
fdiv
out
sbb
test
mov
mov
lret
int
push
jl
aaa
lahf
mov
add
fcoml
addb
hlt
jo
jne
xlat
cmp
scas
adc
aad
mov
sub
mov
mov
jl
loopne
mov
sarl
daa
in
outsl
cmp
cmc
add
mov
mov
xchg
insl
lret
lock
rorb
push
push
push
lret
mov
mov
fwait
out
mov
js
sbb
out
xchg
movsl
xchg
xchg
jbe
outsl
outsl
push
dec
push
movsl
mov
add
std
and
lods
xchg
cwtl
mov
inc
fs
push
mov
bound
inc
rcrb
mov
sbbl
dec
dec
mov
or
jmp
push
in
rcrl
mov
add
mov
push
scas
jns
stc
into
scas
inc
sub
clc
or
fld
negb
leave
fistl
fildl
push
push
js
adc
ja
stos
cmpsb
call
addr16
in
xchg
adc
adc
jmp
xor
pop
pop
cmp
jl
cld
inc
negl
enter
xor
jns
mov
mov
lahf
ds
in
dec
les
ss
gs
dec
cmp
mov
push
stos
daa
sub
push
add
testl
or
jge
arpl
lock
notb
dec
inc
lahf
nop
clc
addr16
lret
idivl
sahf
imul
cli
mov
js
ret
scas
pop
push
dec
sbb
dec
jno
jmp
aad
clc
icebp
enter
shlb
scas
ljmp
add
ret
pop
or
push
imul
popf
repz
adc
les
inc
mov
push
test
outsb
icebp
sarl
pusha
je
jo
aas
rolb
pop
cmpsb
lods
xchg
mov
test
jp
pusha
mov
xchg
sub
lds
mov
mov
push
in
outsl
pop
enter
or
jo
test
xchg
cld
pop
in
mov
shr
loope
pop
dec
add
repz
mov
jle
jno
das
mov
or
xor
ss
dec
test
xchg
lock
cmpsl
xor
mov
mov
aam
cmp
sahf
addr16
repnz
xchg
inc
jns
jae
repnz
js
into
rorl
sarl
loop
ljmp
sub
lods
lcall
inc
enter
mov
insl
mov
hlt
aas
cmp
add
mov
adc
shl
or
stos
jo
mov
add
in
or
mov
dec
mov
jns
pop
je
inc
gs
je
xlat
mov
sbb
jb
shl
add
cmpb
sub
cmp
cmp
inc
inc
mov
sbbb
sbb
and
scas
xchg
inc
cs
cmp
lahf
push
stos
dec
testl
and
and
inc
xchg
fs
pop
xor
insl
and
xor
push
cmp
adc
outsb
push
and
jae
inc
fdivrs
and
sahf
pop
repnz
mov
jns
movsb
out
repz
push
push
or
or
sbb
es
lods
enter
ss
je
inc
sub
inc
pushf
movsl
cwtl
cwtl
data16
fidivrs
rcll
push
mov
mov
out
bound
aas
cmp
pusha
or
inc
dec
dec
xchg
iret
es
loop
jge
lods
outsl
int3
sbb
mov
ljmp
lock
jno
imul
cmc
fwait
adc
adc
pop
fidivrl
jb
insb
sti
loope
lods
imul
gs
dec
jecxz
mov
push
inc
push
lea
addr16
ds
lretw
ss
lds
mov
enter
push
push
or
cmp
push
jmp
movsb
cmpsb
mov
pushl
lods
push
xor
jmp
or
std
sbb
push
mov
lods
xor
jno
jne
enter
jge
ret
sbb
ja
inc
ret
pop
imul
xchg
jmp
dec
mov
stc
mov
pop
cwtl
cli
and
push
mov
leave
bound
in
xor
add
dec
and
cmp
and
stos
and
jb
nop
sbb
cmp
xchg
mov
fstpl
fdivrl
hlt
std
push
stos
pop
arpl
ret
stos
cmp
pop
scas
sbb
push
xchg
test
cwtl
and
or
inc
pop
mov
mov
lcall
inc
ljmp
add
hlt
add
repnz
or
push
dec
push
or
xchg
pop
sub
xchg
cmpb
lcall
and
add
sub
jg
and
xchg
rcll
pushf
outsb
hlt
sbb
iret
jge
shl
fsubs
ret
or
daa
lcall
adc
jmp
test
push
daa
pop
xor
lods
pop
aad
add
fidivl
mov
inc
clc
mov
insl
stc
jecxz
push
in
bound
xor
je
aas
push
sbb
adc
outsl
push
fsubp
jne
pushf
decl
xchg
popa
and
int
shrb
fsubr
iret
jno
lods
pop
lock
idiv
push
aad
adc
int3
push
sbb
fstpl
lock
iret
ljmp
lods
mov
subb
sub
in
jge
jg
jae
mov
int
adc
pop
sub
cs
jmp
movsb
or
outsb
fwait
outsb
adc
and
repz
test
mov
dec
incb
pop
aaa
mov
xor
fwait
sbb
jb
dec
ret
sbb
pop
push
scas
pushf
lock
mov
xchg
xchg
fsubl
in
pop
xlat
scas
jnp
loope
sub
pop
mov
jbe
loop
mov
or
outsb
cmp
scas
push
daa
loope
mov
ret
cmp
lcall
inc
ljmp
xor
jne
mov
xchg
insb
repz
xor
pop
cmp
insl
pop
loopne
cmp
cmpsb
cld
and
sbb
cld
rorb
push
ror
sti
je
fidivl
out
mov
inc
push
call
push
rclb
mov
mov
outsb
or
lods
cmp
inc
add
jae
test
sbb
inc
stc
inc
inc
and
lods
cld
scas
push
jo
and
or
nop
push
xor
xchg
jo
arpl
mov
inc
inc
pop
push
pop
orb
cli
mov
cli
or
repnz
inc
mov
icebp
into
fcomi
lea
mov
adc
cli
lret
test
mov
fcompp
icebp
push
orl
push
mov
xor
push
loop
in
dec
cmpb
sub
bound
mov
je
mov
and
ja
and
ret
pop
push
adc
js
jmp
mov
and
push
lds
loopne
push
outsl
inc
adc
push
sbb
fiadds
sub
test
mov
jmp
into
data16
mov
cltd
jg
lret
or
daa
dec
orb
mov
adc
lods
mov
jne
mov
pop
or
insl
push
inc
stos
in
add
or
inc
and
sti
adc
stos
xor
jbe
sub
and
pushf
bound
xchg
mov
xor
lods
sub
cmc
pop
into
mov
mov
in
adc
aam
stos
nop
push
and
jb
push
pusha
loop
and
xchg
fisubrl
sbb
mov
bound
or
popa
ret
loop
ljmp
filds
xchg
pop
jae
sub
xchg
push
push
mov
repz
jne
jns
add
cltd
mov
jns
sbb
add
add
mov
mov
std
push
pusha
mov
push
fs
fnstsw
mov
xor
rcrl
push
mov
and
jmp
popa
dec
and
scas
cmpsl
jecxz
lahf
adc
sahf
push
adc
daa
stc
les
subl
sub
cmp
or
and
cmp
std
mov
jbe
dec
dec
pusha
decb
arpl
dec
lret
and
jecxz
cmp
cmp
popl
bound
test
repnz
xor
sub
movsb
cwtl
push
mov
or
sub
int3
lret
orl
dec
icebp
and
add
mov
add
add
pop
mov
pop
fnstsw
jg
push
inc
inc
test
mov
test
repnz
ds
test
add
in
stos
xchg
movups
xor
bound
movsb
xchg
mov
loope
sarb
out
lahf
dec
out
into
aas
arpl
int
sub
adc
adc
ret
adc
ja
clc
fcoms
cmpsl
adcb
or
mov
sbb
pop
jmp
or
incb
jecxz
jecxz
aad
push
or
ds
fnstenv
inc
or
sub
mov
dec
xor
iret
and
inc
pop
add
pop
sbb
das
ret
xorl
xchg
xor
stc
inc
push
pop
fcoms
cwtl
mov
push
mov
push
cwtl
stos
jge
cmp
sbb
test
cmpsb
dec
lods
jecxz
imul
in
out
push
inc
mov
je
inc
addb
aas
mov
sbb
pusha
xchg
ret
fsubr
addr16
int3
adc
mov
jl
repz
test
xlat
daa
mov
in
test
mov
leave
adc
xor
mov
out
mov
in
aas
in
jno
aad
int3
jbe
push
shl
out
jne
ffreep
pop
cld
sbb
push
sbb
rep
outsl
sbb
cmp
sub
mov
out
insb
jl
jb
xor
adc
and
xchg
push
mov
sbb
movnti
int
cs
lock
lahf
adc
cld
xchg
lahf
push
fsubs
push
push
mov
pop
mov
cmp
and
xchg
push
sub
and
add
sub
jns
fldt
cmp
mulb
xor
inc
xchg
insl
lea
inc
js
adc
fistpl
loopne
pop
stos
movsl
dec
jmp
repz
arpl
fcomps
js
sbb
test
cmp
or
imul
sbb
jno
and
push
adc
xor
fs
out
adc
rolb
bound
dec
add
mov
lret
and
std
pop
xchg
test
stos
sub
and
nop
mov
sbb
push
jge
cmp
or
xor
push
cmp
push
loope
ja
lahf
cmpsl
pop
dec
mov
sbb
sbb
adc
lret
cmp
mov
mov
adc
or
les
jnp
sub
mov
sub
test
cmp
mov
ror
mov
jmp
and
mov
aad
sbbl
push
mov
cmpsb
sub
push
lcall
ds
lret
add
or
cmpb
or
mov
mov
enter
push
fs
ret
inc
les
mov
or
adc
into
push
lods
mov
fsubs
mov
push
out
pop
jle
mov
dec
mov
lods
jo
bound
cmpb
int3
dec
movsb
and
push
jmp
sub
repz
inc
sub
xchg
mov
xor
negl
adc
xchg
jmp
xchg
cmpsl
or
outsb
imul
cwtl
fdivrs
add
mov
or
call
push
cmc
ret
pop
jecxz
dec
cld
mov
fdivrl
stos
xor
jns
push
jne
in
inc
jecxz
cs
mov
mov
popa
mov
add
hlt
repz
mov
add
outsb
inc
imul
out
adc
in
push
jge
lret
push
xor
sub
xchg
dec
jne
xor
sbb
jnp
lods
jg
movsl
pop
icebp
loope
push
and
ret
imul
jns
int3
dec
fsubs
in
in
push
pop
xchg
in
xor
hlt
xor
push
jg
inc
pop
push
xlat
fdivrs
mov
in
jno
int3
cmp
out
insb
test
xchg
shll
mov
mov
out
test
int
lret
mov
mov
into
fcoml
lcall
in
add
cld
xlat
xchg
insb
jnp
pop
ljmp
adc
and
ret
test
pop
jg
push
movsb
fwait
fs
nop
adc
notl
mov
pop
fisubs
cmp
or
xchg
mov
loop
or
jle
push
jo
jg
dec
movsl
mov
or
sahf
les
call
pop
fwait
mov
ret
das
jbe
test
lret
pop
dec
daa
mov
ret
mov
sbb
ljmp
movsl
add
xchg
cmpsl
gs
push
jmp
push
pop
in
popa
lods
dec
ja
repz
rcrl
inc
and
inc
jp
fldenv
test
arpl
pop
pop
dec
jle
and
aas
jnp
insb
lods
mov
scas
mov
or
dec
in
pusha
jo
pushf
scas
add
popa
sbbl
sarb
daa
mov
ss
btr
sbb
mov
icebp
sub
xor
sbb
dec
cmp
xchg
scas
dec
outsl
hlt
pop
popf
pusha
cld
stos
jns
dec
inc
sub
stos
inc
cmc
pop
cld
adc
and
pusha
outsb
jbe
pop
ja
lock
fdivr
xchg
jg
loopne
sbb
mov
mov
lret
in
idivl
pop
rclb
popa
sbb
andb
fmuls
add
add
mov
jg
cwtl
mov
ret
jae
scas
mov
or
pushl
mov
jns
shrb
dec
xchg
inc
fsubrs
inc
je
fnstenv
lods
testb
popf
push
fs
test
adc
mov
mov
movsb
sti
mov
add
add
sbb
test
pop
loop
pop
adc
xchg
rcrl
sub
xor
and
push
cmp
lea
sbb
add
outsl
mov
jmp
inc
jg
cmp
and
outsb
call
and
jbe
mov
jp
cmp
xchg
mov
jg
jecxz
ljmp
mov
clc
dec
mov
ja
dec
lods
jo
movsl
call
mov
fs
les
or
push
cmp
hlt
cmp
clc
dec
cmc
cmp
out
dec
inc
push
dec
hlt
sbb
scas
adcb
stos
out
xor
add
cmp
sar
jecxz
loope
mov
iret
push
sbb
mov
sbb
jg
xor
adc
adcb
insl
stc
pop
loopne
nop
sbb
cwtl
popl
jae
call
leave
call
sti
ret
leave
jo
sbb
pop
adc
or
xor
nop
daa
push
cmc
mov
out
rorb
pop
dec
repnz
add
mov
mov
pop
rcrb
test
mov
loop
mov
or
mov
pusha
not
jl
mov
out
ljmp
sti
and
inc
xchg
icebp
adc
arpl
dec
cwtl
addr16
pop
mov
aad
loopne
loop
and
mov
into
gs
out
xor
xchg
leave
push
lds
xor
pop
pop
mov
mov
push
notb
jecxz
pop
inc
mov
lcall
and
fsubs
inc
mov
and
stc
nop
gs
ret
adc
inc
dec
loopne
clc
mov
lods
outsl
or
pop
insl
daa
pop
std
xchg
out
xor
pop
sbb
sbb
cmp
stc
xchg
mov
pop
ret
mov
outsb
les
fadd
rcrb
outsb
push
cld
xchg
int
mov
mov
cmpsb
sub
in
testb
pop
adcb
shlb
movsl
lret
mov
jecxz
and
xacquire
cmp
cmpsl
xchg
push
sub
mov
int
std
xchg
fsubrs
mov
sub
movsb
int3
sub
out
test
xor
ret
xor
daa
inc
mov
repnz
xlat
leave
fxch
outsl
push
push
sbb
filds
xchg
push
sub
jg
push
inc
outsl
fstps
fldenv
iret
data16
imul
and
lock
and
loope
iret
lds
adc
out
cmpsl
ja
cmp
je
cld
hlt
dec
xor
in
xchg
adc
or
sbbl
adc
test
addr16
xor
xchg
in
jns
shrb
mov
shrl
repz
inc
loope
js
cmp
or
jp
gs
xchg
adc
incl
pop
push
add
mov
push
ljmp
ja
test
cltd
movsl
mov
mov
mov
pop
cmp
lahf
cmp
push
add
lock
adc
bound
sub
jne
jle,pn
push
flds
cmpsb
and
mov
cmp
and
shrb
or
leave
leave
repz
fldcw
lret
mov
jne
add
add
jns
xlat
ret
mov
xchg
add
aas
movsb
or
pop
pusha
sub
movsb
cmp
jno
ret
pop
test
stos
enter
jb
sbbb
ret
pop
jl
add
push
mov
mov
pusha
das
ljmp
sbb
add
sbbb
nop
lret
in
push
or
mov
lea
pop
in
jo
popa
jbe
mov
sbb
popf
pop
test
sbb
mov
outsl
scas
sbb
imul
pop
mov
mov
mov
imul
cs
ljmp
clc
mov
lahf
and
aaa
dec
xor
add
clc
cmp
lret
gs
add
adc
in
xchg
call
or
mov
fstps
sbb
inc
dec
mov
popf
loop
dec
jecxz
dec
dec
xlat
rol
pop
outsl
push
inc
jno
ret
jbe
imul
mov
sub
jb
aad
xchg
mov
inc
push
pusha
ds
mov
imul
lret
js
daa
outsl
push
cmpsl
rcrb
es
pop
cwtl
mov
pop
testb
jge
ret
fisttps
mov
in
adcl
ret
dec
std
js
xchg
ret
dec
push
pop
hlt
dec
mov
jno
inc
lcall
push
je
jbe
mov
mov
out
push
out
cmpsb
fdiv
jns
addb
lock
stos
dec
iret
repnz
in
jb
inc
imul
xchg
jmp
pop
sbb
sub
test
and
adc
mov
xor
xchg
sbb
rorb
cwtl
mov
mov
add
shll
out
sbb
mov
or
out
in
cmp
aaa
out
dec
fwait
pop
mov
insb
push
repz
outsb
inc
sbb
jecxz
into
insb
roll
xchg
and
mov
mov
pushf
dec
jnp
gs
lret
inc
mov
mov
xorb
pop
mov
sub
dec
or
andb
lea
add
sub
movsb
addr16
dec
push
adc
dec
flds
adc
lods
mov
in
sub
sbb
cltd
dec
stos
mov
es
pop
leave
test
push
xor
ds
aaa
inc
std
test
mov
lret
or
sub
je
dec
in
jge
imul
js
cmp
mov
popa
xchg
jl
mov
lds
dec
adc
lahf
inc
popa
dec
pop
arpl
xchg
cs
enter
cwtl
movsl
add
fs
and
and
jno
std
ja
loope
dec
je
xlat
movsl
popa
jno
pop
dec
push
sub
xlat
arpl
test
xor
dec
loope
shl
pushf
scas
and
fisttps
xchg
mov
ja
and
cmp
xor
pop
ljmp
adc
sbb
push
mov
stos
and
adc
insl
js
test
lods
or
test
mov
test
jp
fadd
test
xor
repnz
xchg
in
shll
dec
mov
xorl
pop
sahf
mov
ret
push
pop
mov
or
jo
insb
jl
jne
sti
mov
cs
and
dec
jmp
shll
xor
ss
test
xchg
cmp
push
out
sahf
test
or
loope
shrb
rorb
inc
cli
lds
gs
imul
andb
jne
stos
pusha
enter
adc
clc
pop
rorb
adc
mov
xchg
xlat
mov
ja
xlat
test
rcll
pushf
or
add
ja
lds
fistps
mov
popf
lcall
fwait
rcr
push
jmp
dec
mov
stos
inc
lea
push
xchg
pop
fdivs
inc
dec
pop
neg
dec
popa
and
cmpsl
jg
dec
sub
cmp
add
xor
lcall
inc
scas
jb
insl
cwtl
js
adc
mov
fisubs
les
or
mov
jbe
cmpb
mov
mov
mov
les
rorl
je
scas
and
or
xchg
xor
js
repnz
stc
je
mov
clc
sub
fs
push
fwait
dec
enter
outsb
and
fbstp
leave
sub
pop
push
adc
and
mov
stos
sbbl
adc
popf
pop
add
cs
xchg
inc
adc
pop
push
mov
scas
jns
push
mov
insl
movsl
aaa
xchg
mov
repz
enter
push
xchg
xor
aas
ljmp
cli
jne
mov
into
les
daa
add
daa
cmp
sbb
push
mov
pusha
pusha
int
hlt
sbb
cmp
mov
pusha
push
or
sbb
push
jecxz
cwtl
pop
jg
fisubl
add
repnz
mulb
out
and
dec
ss
dec
divl
inc
enter
fwait
pusha
mov
and
pop
aam
fadds
jb
les
rcll
into
into
mov
dec
in
inc
imul
xchg
mov
mov
bound
loop
arpl
cmp
xor
and
les
js
ret
jnp
push
sub
cmpb
insl
dec
out
lock
insl
add
mov
lret
mov
leave
adc
hlt
lods
fcmovu
icebp
iret
test
mov
push
inc
add
xor
xchg
push
mov
pop
xor
sbb
or
jbe
fisubrl
pop
adc
sbb
ds
call
icebp
pop
stos
test
movhps
stos
in
jno
adc
adc
movsb
mov
in
dec
repnz
adc
dec
les
xchg
out
mov
inc
mov
repz
add
sbb
add
roll
test
int
divl
cwtl
push
arpl
inc
jecxz
ds
sub
fsubs
rcr
cld
or
cmp
addr16
jp
lods
das
loope
lret
popa
addb
arpl
sbb
dec
in
div
xor
notl
gs
mov
add
test
mov
addr16
stos
lret
xchg
loop
lret
and
jns
adc
xor
rolb
pop
dec
jne
popf
cmpb
lahf
dec
pop
pushf
push
gs
call
std
popa
xorl
test
aaa
mov
mov
sbb
scas
outsl
mov
lods
jg
lahf
adc
test
loop
sub
xchg
mov
das
lret
frstor
and
cltd
xor
sbbl
mov
mov
mov
stos
notl
fs
into
outsl
lahf
cmp
popa
out
mov
adc
xor
loopne
divl
inc
and
dec
adc
clc
out
jno
popa
les
addr16
pop
mov
and
lods
in
and
loopne
mov
sbb
idiv
outsl
and
dec
popa
int
jge
loop
mov
sbb
or
fldcw
add
sub
push
push
cwtl
cmpsl
and
and
push
mov
adc
fdiv
dec
dec
aas
into
das
icebp
aas
fdivrl
ljmp
jno
subb
sbb
sub
push
inc
xchg
cmp
imul
dec
sbb
xchg
in
push
cmp
pop
cs
jmp
icebp
dec
mov
push
iret
lods
cmpsl
outsl
cs
into
in
fucomp
ret
pushl
stos
push
insb
inc
sbbl
popf
xchg
dec
jmp
push
popf
cld
inc
js
mov
and
loop
lahf
jp
push
xchg
jns
pop
in
lahf
lock
jo
aaa
push
bound
fucomip
repnz
mov
fcomps
inc
inc
push
jle
fwait
cmp
dec
sbb
sbb
add
int
sub
push
stos
or
xchg
lock
out
pop
sbb
fwait
sub
sub
inc
or
lahf
mov
jmp
pop
sahf
std
sbb
jge
ficompl
or
lahf
push
xchg
add
mov
ret
add
testb
xchg
adc
jns
stos
add
aas
mov
xchg
or
call
test
sbb
sub
xchg
or
mov
adc
jne
xchg
mov
aam
in
add
sub
dec
xchg
enter
jge
hlt
inc
test
jno
test
xchg
in
jg
xchg
mov
jge
fisubl
sahf
lods
dec
cli
xchg
stc
in
mov
popa
xor
pushf
xor
mov
add
mov
pop
add
mov
clc
jge
or
and
mov
xor
cmp
mov
and
and
jbe
mov
shld
lea
mov
flds
jne
insb
cltd
out
out
cmp
cli
shll
imul
sbb
add
pop
ud1
movsb
stc
or
dec
mov
into
enter
iret
dec
cmp
inc
ss
cmp
cmpsl
movsl
inc
xor
cli
lret
mov
ret
fiadds
mov
jge
mov
daa
lds
mov
push
or
xor
mov
cmp
ds
mov
jne
and
cmpsb
fidivl
movl
ljmp
push
mov
mov
nop
mov
mov
jae,pn
dec
movsl
dec
ljmp
inc
xchg
sub
lret
sti
aaa
mov
push
and
in
je
outsl
cmpsb
lgdtl
adc
mov
add
popf
out
insl
movsl
inc
ficoml
lret
clc
sub
jbe
lods
xor
sbb
rorb
fstl
leave
cmp
xchg
mov
test
lods
adc
xor
call
pop
loopne
xor
inc
lret
sub
cmp
adc
add
add
push
insl
negb
xor
int3
leave
test
jnp
cli
daa
aam
pop
mov
gs
add
ficomps
movsb
addr16
xchg
dec
mov
in
shl
add
mov
scas
jg
in
repnz
jle
mov
aaa
or
cmpb
xlat
xor
insb
clc
fisubrs
xor
mov
mov
push
jmp
add
in
mov
or
xchg
fildll
dec
mov
das
adc
movsl
sbb
sub
pop
jnp
jecxz
hlt
jbe
dec
pop
sbbb
leave
in
push
cs
cltd
add
ja
ljmp
lcall
and
sub
into
das
push
cmc
outsb
gs
mov
jmp
sbb
rcrl
mov
sub
pop
pop
cli
into
fsub
jnp
pop
leave
test
out
sbb
gs
addb
popa
je
mov
jo
cmp
in
inc
dec
in
out
push
popf
lods
insb
mov
out
jne
sub
jecxz
into
lea
cmp
les
adc
in
add
mov
pop
xor
sar
sahf
xchg
int
test
pop
cmc
popa
sti
mov
mov
xchg
xlat
mov
icebp
pop
push
inc
pop
das
aaa
jmp
mov
outsl
jg
pushf
scas
mov
lret
mov
in
adc
movsl
mov
int
pop
xchg
mov
fs
mov
inc
dec
loope,pt
call
jo
jle
inc
mov
pop
divb
icebp
xlat
mov
pop
inc
jne
aaa
mov
inc
and
inc
pop
movsl
jb
imul
lcall
je
push
out
mov
cmp
aad
adc
das
aad
popa
int
or
hlt
mov
mov
scas
or
adc
in
sbb
push
inc
pop
and
jno
or
jne
cmp
inc
js
dec
rep
aas
xor
adc
fwait
shll
popa
xchg
jbe
dec
das
mov
add
adc
mov
add
loope
je
sub
int
cld
pcmpgtd
mov
mov
cltd
lods
xor
jne
fxch
rcrb
stc
sbb
lods
fsubl
cmc
mov
mov
les
push
add
push
cmp
adc
loope
ljmp
cmp
jo
arpl
fwait
test
push
sbb
loope
add
orl
xchg
mov
mov
push
shlb
sub
or
xchg
ret
jo
mov
aam
sub
cli
in
inc
cmp
mov
push
shlb
das
mov
jnp
xor
mov
std
sbb
dec
ret
jle
dec
into
movsl
stc
std
or
pop
popf
shl
mull
testb
popa
adc
lahf
mov
out
out
faddp
rolb
sarl
and
xchg
out
mov
sbb
sahf
jg
jne
je
cmpsb
jmp
pop
lret
mov
sbb
pop
jl
push
leave
int
push
arpl
fidivrl
ss
push
dec
adc
fmulp
aad
pop
push
arpl
ljmp
fs
loop
mov
fnstsw
fimuls
scas
pop
insl
cmpsl
fisttps
sti
mov
pushf
loope
fsubrs
cltd
lahf
pop
mov
aaa
cmp
stc
lods
adc
jecxz
sub
nop
jle
test
addr16
mov
testl
jo
pop
mov
pop
mov
jns
or
mov
nop
and
aas
jp
pop
stos
cmpsl
add
add
aaa
dec
pop
xchg
inc
into
shll
push
pop
dec
leave
pusha
dec
fists
cmc
fisttpl
pop
jne
nop
or
xchg
sbb
ret
sbb
inc
dec
movsl
dec
sbb
jo
cmp
sub
adc
test
or
lahf
insb
sti
add
push
inc
pop
test
daa
mov
cmpsl
and
pushl
es
sub
mov
clc
and
push
sbb
into
dec
je
stos
dec
stos
test
out
mov
stc
jno
in
loop
xor
mov
ficomps
jnp
jne
imul
repnz
jo
lret
sub
dec
int3
mov
xor
jne
dec
pop
jg
imul
inc
xchg
or
inc
addr16
push
xchg
push
jp
push
in
jne
in
add
pop
rorb
mov
xchg
mov
sbb
and
push
sbb
lret
sbb
ja
jle
inc
xor
lret
lods
cld
pop
lret
js
sahf
repnz
cmc
das
mov
cmp
les
std
add
cmp
loope
xchg
inc
fmuls
outsb
fidivl
faddp
or
cmc
js
enter
in
push
mov
adc
mov
shlb
xchg
xchg
lds
or
adc
mov
fidivrs
ljmp
or
dec
gs
push
push
ljmp
dec
xchg
cs
iret
test
in
pop
loope
xchg
inc
and
iret
xchg
negb
lock
inc
cmc
int
outsb
add
fcmovnu
andb
pop
call
sarl
fcmovb
xchg
jo
aad
mov
test
clc
and
pop
jmp
xchg
pop
lods
aad
and
push
jecxz
dec
dec
loop
push
data16
int3
movsl
add
dec
scas
cld
pop
cli
adc
mov
pop
imul
adc
pop
mov
sub
jle
pop
ljmp
cs
pop
aam
cmp
cmc
mov
sbb
lods
dec
lds
ret
cmp
sub
mov
test
or
or
scas
inc
aad
and
push
mov
add
scas
pop
lds
mov
bound
add
mov
sti
jecxz
fcom
fwait
inc
inc
push
hlt
push
adc
sbb
adc
data16
adc
and
pusha
adc
mov
test
push
lods
daa
pusha
shlb
pop
cwtl
fisubl
dec
adc
jae
pop
cmc
pop
sbb
jmp
shlb
or
sbb
lahf
imul
xor
data16
push
jecxz
jns
lods
shlb
xchg
loop
ret
into
loop
push
xor
scas
aam
dec
push
pop
stc
or
dec
mov
dec
adc
out
outsb
mov
out
pop
leave
in
out
mov
xor
stos
inc
fsts
adc
lahf
pop
cmp
fisttpll
lea
insb
pop
xlat
adc
mov
jbe
ret
notb
jge
mov
call
jne
xchg
add
mov
xor
dec
jns
sahf
or
dec
bnd
adc
fdivrs
cmpsl
sub
jmp
xchg
mov
outsb
andl
sti
in
sbb
sub
lea
lods
mov
sbb
outsb
test
icebp
or
movsl
insb
sub
push
push
call
out
and
int3
push
ljmp
out
mov
ret
fcomip
jns
faddp
xchg
mov
xchg
jae
testb
mov
dec
sahf
repz
cmc
int3
jmp
sarl
add
push
push
loopne
adc
xor
push
add
int
das
int
xor
xchg
push
mov
ficomps
das
test
icebp
fadd
int
mov
js
imul
cwtl
pushf
scas
outsb
mov
sbb
xchg
imul
xlat
cmp
fcomps
shrl
mov
pop
mov
and
pop
ss
in
movsl
std
xchg
imul
pop
scas
sarb
ret
inc
jae
xlat
divl
idivl
or
adc
sub
scas
inc
fdivl
sbb
sbb
aas
sbbb
fidivrs
lea
fcomps
pop
sub
jge
fst
addr16
jne
test
and
rcrb
xchg
popa
sub
jb
cmp
lahf
sub
sub
in
loop
gs
bound
fisubrl
popl
das
pop
mov
inc
mov
cs
push
fiadds
xchg
cmpsl
outsl
leave
xchg
sahf
hlt
fwait
insl
mov
lret
pop
call
iret
out
inc
sbb
push
imul
sbb
dec
fdivr
jns
mov
divb
fisubs
xchg
cmp
inc
repnz
or
pop
xchg
repz
mov
cmp
and
lds
sti
mov
cmp
xor
cmc
and
fsubrs
fs
call
pop
scas
dec
out
push
out
xor
xorb
or
xchg
mov
cltd
and
and
mov
cli
xchg
push
sar
inc
imul
lods
mov
pusha
nop
hlt
les
mov
leave
arpl
jg
int3
scas
scas
popa
add
inc
lahf
ss
dec
sti
push
cltd
mov
jle
pop
je
clc
jge
sub
mov
pop
jne
test
fld
imul
sarl
and
adc
adc
rcrl
pusha
sbb
jmp
push
call
pop
insb
test
scas
scas
xchg
adc
or
testl
iret
popf
sub
push
mov
mov
mov
mov
shr
cmp
inc
aam
jnp
xchg
mov
xor
xchg
in
jle
out
mov
xchg
out
das
push
ja
fs
scas
pop
ss
andb
cmp
dec
cmpsl
jp
and
dec
lret
test
hlt
cmp
addr16
cld
lods
mov
cltd
cltd
pop
out
btc
mov
add
loop
sarb
bnd
call
or
mov
push
aad
push
les
cmp
cmp
pop
dec
or
mov
inc
outsl
cmp
push
mov
lcall
mov
rcrl
jnp
leave
mov
inc
cwtl
xorb
pop
xchg
sbb
adc
pop
inc
push
je
pop
mov
roll
add
mov
daa
inc
pop
xor
dec
add
mov
fucom
dec
mov
and
or
stc
je
cmp
jb
jmp
das
dec
js
insl
negl
jl
jmp
inc
mov
or
das
push
cmpsb
jmp
mov
jl
lods
movsl
mov
dec
xor
or
movsb
mov
pop
nop
mov
sub
stos
lea
push
arpl
cmpsl
mov
xchg
hlt
mov
pop
shrl
subl
push
and
mov
pop
inc
and
xor
pop
xor
scas
xor
mov
sti
sarl
test
lock
cmp
pop
fwait
xlat
int3
sub
negl
and
sti
pop
shrb
aaa
or
mov
and
jnp
sbb
mov
in
mov
clc
jnp
xchg
sub
pushf
stc
inc
leave
push
push
movsl
test
pusha
mov
adc
mov
jg
push
or
fidivl
xlat
test
je
jns
adc
sbbl
jecxz
lahf
mov
mov
pop
or
out
inc
pop
and
fs
ds
enter
dec
aam
add
prefetch
or
cld
ja
mov
jno
jle
jp
mov
mov
or
sbb
xor
mov
into
push
dec
jmp
out
out
push
xchg
and
push
out
sub
and
push
mov
cmpsb
cmp
mov
pop
xor
cmc
idivb
fcoms
repz
pop
cmpsb
mov
sbb
scas
loop,pn
roll
lds
imulb
pop
icebp
pop
push
mov
shrd
popf
xor
ja
mov
cmp
mov
jo
xchg
ss
pop
out
ficoms
sub
fs
enter
decb
iret
inc
stos
add
xor
popa
out
jbe
sub
add
or
add
stc
es
cmp
aam
cltd
loope
dec
pop
out
lea
pop
mov
fisubl
aam
lret
sarl
sbb
xor
adc
sbb
pop
cmp
and
lods
dec
or
les
lock
ljmp
pop
or
and
gs
loopne
mov
adc
jmp
adcl
popf
fiaddl
sub
xor
jno
mov
adc
mov
push
cmc
pop
mov
inc
js
jl
rcrb
loopne
adc
lret
lret
xchg
enter
aas
mov
sub
adcb
and
enterw
mov
push
adc
push
inc
ss
sbb
subb
pop
inc
dec
adc
popa
sbb
push
jb
xor
push
in
push
push
pop
inc
out
repnz
add
push
jo
jno
or
inc
loopne
in
jbe
pushf
sbb
pop
inc
les
push
or
sub
mov
push
scas
test
inc
xor
push
jmp
xlat
and
mov
push
add
cld
es
cmp
mov
je
scas
lcall
fsubl
enter
dec
ljmp
insl
or
pop
xchg
addr16
mov
lods
mov
lods
or
push
pop
inc
sarl
js
and
pop
shll
repz
and
in
jb
das
flds
mov
pop
sub
xchg
inc
pop
mov
lret
jmp
adc
xchg
xor
loope
notl
testb
sub
add
xchg
repz
in
cltd
push
pop
ss
xor
push
pop
mov
push
push
stos
dec
pop
enter
jp
push
cmpsl
ja
shlb
cs
push
cs
jle
jecxz
rol
stos
add
scas
mov
data16
out
mov
jmp
psllq
shll
mov
incl
jle
pop
jbe
mov
inc
imul
int3
sti
cmp
fnstcw
push
outsb
in
sub
ret
sbb
or
cmc
cmp
add
ds
inc
fisubs
call
xor
or
in
mov
cmp
rol
rcl
push
add
adc
xlat
shrl
dec
shll
ret
aas
aad
add
xchg
bound
push
jb
cwtl
push
cltd
mov
sarl
mov
ret
imull
xor
dec
mov
movsb
fld
jo
xor
jecxz
call
mov
jb
push
divl
fsubrs
loop
cld
or
jno
pop
out
lret
hlt
mov
fsubr
and
mov
imul
inc
jne
popl
in
sbb
jae
adc
pop
xor
add
jno
adc
dec
out
dec
rclb
cli
pop
out
sbbb
movsb
pop
and
sub
test
xchg
pop
mov
jle
lea
mov
pop
xchg
xchg
push
ljmp
loop
loopne
pop
xor
push
jp
cmp
in
sbb
cmpsb
fcomps
xchg
sti
inc
mov
lock
jecxz
cli
test
std
mov
cmp
push
in
mov
cmp
jb
sub
xor
xor
mov
dec
pop
lock
pop
in
and
mov
rorl
push
std
and
stc
das
pushf
shl
jle
cmpsl
shrl
mov
dec
mov
ljmp
or
dec
mov
aam
lahf
sub
push
push
mov
dec
cmpsl
mov
mov
sub
sbb
pushf
sub
daa
inc
lret
inc
sti
xchg
cli
in
xchg
js
mov
shr
daa
mov
pop
jmp
sbb
mov
sbb
mov
add
mov
sti
cmp
pop
jp
xor
in
sbb
imul
jae
fsubrp
cmpsl
sub
sub
mov
pop
lods
and
adc
shrl
mov
dec
ret
xor
into
jno
and
and
lahf
fcmovb
adc
mov
fnstcw
pop
repz
lcall
test
ds
fsts
out
stos
dec
je
dec
mov
mov
mov
xor
fildll
icebp
mov
xor
jns
mov
sub
fisubl
mov
pop
insb
mov
fs
in
and
push
sub
sbb
mov
cs
pop
fsubr
jne
jmp
push
mov
int3
xchg
xchg
pop
out
sbb
lcall
not
popf
lods
stc
xchg
pop
inc
sbbl
ljmp
jne
enter
popa
popa
push
sbb
sbb
xchg
je
idivl
inc
pusha
rorl
sub
jns
iret
stos
push
cmp
adc
je
out
dec
pop
dec
add
jl
push
ficoml
jns
and
adc
add
rorl
pop
ljmp
pusha
fstpt
pusha
rorb
into
mov
mov
shlb
mov
jmp
cltd
lods
inc
lret
jg
out
push
push
sbb
lea
adc
xchg
arpl
mov
push
mov
push
mov
cmp
jmp
xchg
add
cli
lock
fnsave
pushf
mov
cmp
fnstcw
mov
or
fstpl
in
scas
push
sahf
pop
mov
mov
shl
jle
sub
pop
ret
xchg
push
push
stos
les
dec
xor
pop
lret
inc
jmp
bound
jmp
fsubr
lahf
mov
pop
push
pop
orl
cmpsl
loop,pt
repnz
mov
add
push
fsubr
out
js
push
fdivrl
adc
inc
out
inc
xlat
jp
loop
and
cmpsl
out
decb
ss
icebp
gs
stos
fsubs
mov
scas
adc
xor
jno
dec
sub
lahf
out
lds
xchg
push
in
das
pop
movsb
mov
idivb
es
and
cld
je
pop
or
bound
and
cli
xor
arpl
lds
mov
pop
xor
xchg
scas
xchg
mov
cltd
repnz
add
cs
sub
cwtl
ds
stos
xor
addr16
inc
fnsave
push
mov
dec
mov
outsl
inc
or
lea
push
push
test
or
imul
mov
cmpsl
js
push
icebp
mov
loop
les
pop
andb
sbb
arpl
push
cmp
cmpsl
loop
loopne
test
or
xor
fdivl
push
je
mov
out
adc
adc
xchg
cmpsl
loopne
mov
push
mov
pop
ljmp
or
push
out
test
push
in
or
rclb
loopne
mov
addr16
add
ja,pn
pop
imul
imul
lds
dec
fists
push
sub
pop
rcrb
and
mov
pop
pop
adc
fcoml
cmp
rcr
imul
inc
xorb
lock
in
jbe
adc
inc
inc
test
mov
insl
inc
push
js
inc
or
loop
sub
mov
jno
out
inc
mov
sarb
icebp
sbb
enter
inc
sbb
ja
push
int3
sub
pushf
andl
jb
mov
dec
dec
ret
adc
data16
loop
jge
imul
cwtl
lea
in
pop
mov
ds
or
mov
xchg
pop
rcl
scas
cmp
cld
daa
pop
adc
ja
adc
inc
scas
dec
mov
std
adc
sub
movsb
lods
iret
popa
add
rcl
mov
imul
cmc
cmp
out
xor
fisubl
xchg
loope
call
mov
out
add
mov
inc
mov
jbe
mov
xchg
xchg
push
mov
mov
call
imul
je
loop
adc
addr16
mov
fcmovnb
cli
scas
jle
push
es
ret
jo
pop
repnz
repz
gs
add
inc
pop
sbb
icebp
adc
stos
and
jg
mov
fldl
add
std
xchg
scas
lahf
adcl
sbb
out
stc
inc
pushf
outsl
push
rcrb
push
add
lea
iret
inc
mov
sbb
cmp
cmpsl
popf
xchg
jne
jecxz
mov
sub
dec
iret
xor
scas
call
mov
dec
test
pop
jecxz
sub
pop
pop
repz
fs
loopne
arpl
movsl
dec
xor
jge
stc
adcb
mov
mov
add
sbb
and
mov
dec
dec
out
dec
loope
inc
mov
outsl
ss
pop
outsb
js
pop
sub
mov
mov
mov
mov
shrb
xchg
adc
xor
lcall
test
sbb
mov
lret
imul
and
and
fbstp
sbb
add
movsbl
xchg
aas
and
mov
clc
sbbl
insl
mov
dec
mov
inc
fdivs
lds
out
movntq
xchg
sub
inc
stos
and
das
jne
xchg
xchg
add
test
add
mov
inc
movsb
repnz
andb
sub
xlat
shlb
nop
mov
repz
movsb
cmp
dec
or
pop
sub
stos
add
cltd
cmp
fcompl
int3
fists
xor
mov
shlb
orb
mov
adc
mov
pop
add
cmpsb
sub
mov
add
cwtl
xchg
dec
inc
inc
stc
mov
ljmp
push
in
rcrl
rcll
jno
jb
add
push
xchg
popl
dec
jns
out
push
mov
clc
sub
notb
iret
xor
mov
lahf
cmc
dec
jmp
pop
or
pusha
cmp
sub
jg
dec
cld
jae
loopew
cltd
mov
mov
mov
cmp
dec
lahf
ss
xchg
inc
and
xchg
inc
mov
shl
outsl
inc
inc
int
mov
dec
jg
jbe
lds
and
mov
jg
sub
sub
cld
xchg
cmpsl
mov
in
cmpsb
sub
mov
jl
sub
jp
jl
sub
or
bound
in
mov
mov
cmp
jp
movsb
sbb
adc
push
leave
imul
or
jl
fbstp
or
jmp
int
fwait
test
jp
adc
lock
not
push
pop
aaa
or
lock
es
mov
hlt
mov
xchg
je
adc
shrl
filds
outsb
add
or
into
arpl
cmp
stos
and
xorb
adc
mov
mov
test
xchg
adc
dec
mov
cmp
and
mov
nop
mov
dec
into
loop
divl
jg
push
test
pop
sub
or
cmp
incl
daa
add
push
jns
and
jp
out
stos
sti
test
push
cmp
push
jge
adc
fs
loope
dec
scas
xlat
cli
in
shrb
fwait
imul
mov
pop
fdivrs
mov
lahf
jg
xor
test
or
sbb
imul
add
pop
repnz
pop
mov
aam
fwait
ss
xor
in
pusha
lods
dec
jns
cmp
sbb
mov
or
lds
out
mov
jecxz
cmp
pop
test
add
stos
xchg
cwtl
mov
mov
pop
mov
repnz
xchg
pop
pop
idivb
sbb
das
sbb
aas
push
pop
dec
pusha
pop
test
mov
in
mov
testb
jl
pop
aas
dec
xchg
pop
idivb
mov
imul
cmp
push
mov
ss
xchg
push
pop
in
test
cmp
imul
pop
pushf
das
jae
out
test
xchg
mov
mov
pop
adc
push
mov
mov
iret
cmp
add
xor
push
pop
add
pop
jge
lea
stc
nop
pop
test
std
mov
pusha
jl
adc
add
movsb
das
mov
dec
add
push
add
fcoml
test
mov
sub
cld
std
cmp
leave
out
cmpsl
cmp
icebp
das
das
xor
in
push
cmp
repnz
mov
adc
or
fadds
mov
adc
inc
inc
add
repnz
call
mov
in
push
dec
xchg
xchg
cmp
mov
inc
pusha
stc
pop
mov
daa
xchg
nop
aad
cli
shrb
adc
iret
jecxz
sbb
push
enter
daa
sbb
and
and
ss
leave
and
or
insl
sub
cmp
hlt
or
out
xchg
int3
stos
sub
repnz
js
jne
lret
cld
mov
fildl
scas
pop
pusha
cmp
add
xor
loope
das
fwait
pop
and
sahf
fcomip
test
andb
pop
lock
or
test
gs
jb
shlb
cwtl
data16
or
xor
mov
ljmp
sbb
ds
out
fbstp
fstl
in
mov
mov
loopne
lock
mov
or
mov
cmp
pop
in
mov
xchg
mov
call
xchg
test
xor
in
pop
in
mov
insl
dec
dec
sbb
outsb
jp
push
ficompl
insb
scas
fldcw
adc
sbb
xchg
pop
scas
push
aas
orl
sbb
mov
add
mov
int
add
ss
sahf
and
dec
outsb
cmp
fcmovbe
dec
adc
les
pusha
pop
fistpl
xchg
sub
mov
xchg
and
push
lret
jno
mov
xor
mov
fstp
sbb
and
lea
mov
adc
repnz
sbb
cmpsb
push
lret
jbe
movsb
call
subb
test
sarl
pop
xor
out
ret
adc
cwtl
je
sbb
faddl
test
dec
call
testw
jae
mov
cmpsl
add
test
xlat
mov
cltd
push
adc
mov
and
fwait
or
lods
and
add
add
test
outsb
shl
popf
inc
dec
add
add
adc
clc
jae
lret
and
lcall
shr
sub
add
push
push
insl
push
xor
movsl
hlt
mov
fdivrp
cmp
push
sbbb
lods
pop
loope
dec
inc
dec
loopne
outsb
jno
lea
aas
push
push
ljmp
add
xchg
std
bound
xchg
mov
sub
loop
notb
idiv
push
pop
inc
fnstsw
je
fistpl
neg
mov
mov
inc
fndisi(8087
iret
inc
out
inc
in
test
test
aas
movsl
pop
cmc
pusha
cli
and
mov
inc
xchg
sbb
jmp
and
pop
sub
cmp
dec
pop
jno
cltd
icebp
mov
pushw
sbb
add
imul
hlt
mov
cmp
nop
in
ret
add
shr
cs
clc
jnp
pushf
jge
into
int
test
sbb
adc
pop
dec
call
ljmp
mov
and
xchg
dec
xor
xchg
lahf
mov
push
mov
aam
pop
mov
out
in
sub
cmp
push
jle
and
mov
push
js
mov
jge
pop
mov
call
xchg
aaa
cmp
andl
push
mov
xor
and
popa
addr16
xor
or
jg
xchg
addr16
je
std
xchg
pop
out
sub
inc
lock
or
cmp
add
incb
aad
xchg
inc
test
pop
adc
and
pop
fidivl
and
xor
sbb
jg
in
jo
mov
daa
xchg
mov
in
cmpl
xor
rorb
std
mov
push
out
aas
aad
or
and
lcall
cmp
or
dec
cmp
mov
test
aad
mov
aam
lea
cmp
adc
nop
icebp
mov
in
mov
xchg
jnp,pt
pop
inc
pop
push
hlt
icebp
cwtl
das
and
xchg
sub
int
add
and
add
inc
pop
je
fsubr
data16
dec
sbb
mov
out
and
subl
fsubrp
cmc
mov
jmp
or
pop
sub
popa
scas
clc
popl
inc
mov
mov
gs
popf
test
mov
mov
sbb
mov
inc
sbb
lds
inc
dec
xor
in
rcl
sbb
hlt
sti
pop
ss
ficomps
push
mov
stos
inc
fadds
enter
inc
fdivs
rcrl
mov
push
jmp
jns
or
jb
sbb
inc
test
xor
xor
and
adc
dec
cmp
or
xor
mov
enter
push
xchg
test
movsb
add
enter
cmc
jmp
dec
out
or
aam
loopne
mov
sub
mov
ret
aaa
dec
out
xlat
mov
add
cmp
push
xchg
negb
mov
pop
mov
aad
test
bound
pop
mov
lods
stos
mov
sub
push
fwait
cmpsb
in
mov
clc
shlb
xchg
jo
pop
in
stos
push
xor
mov
lods
inc
int3
lret
cmp
mov
adcb
in
aam
mov
aad
lret
divb
xor
out
lea
popf
pop
mov
lds
inc
out
inc
pop
sub
ror
inc
cmp
dec
cmpsl
sub
aad
push
xchg
xchg
mov
or
xlat
lret
mov
adc
adc
mov
adc
ss
xor
jg
popa
and
push
out
inc
js
hlt
std
ds
sbb
xchg
mov
in
les
push
dec
clc
adc
sahf
scas
insl
out
xorl
pop
pop
sub
jge
repz
xor
pusha
add
aaa
insl
mov
xchg
pop
mov
sbb
xchg
jecxz
push
and
aad
leave
and
jb
pop
repz
pop
jb
fwait
and
sub
aad
dec
fsubl
mov
cmpsl
lods
jg
xchg
shr
lds
pop
push
sub
xor
cltd
mov
and
pop
inc
pop
adc
int3
xor
stc
rcrb
push
xor
insb
xor
jp
inc
jp
jns
add
or
xchg
mov
push
dec
fidivrl
mov
add
mov
repz
ja
lds
out
mov
mov
insl
popa
and
aam
repnz
mov
cli
cli
and
lret
std
das
dec
and
repnz
jae
ret
fstpt
sti
loop
jb
and
push
cmp
repnz
arpl
je
test
scas
out
dec
and
jg
dec
inc
adc
push
push
jb
xchg
movsb
add
test
or
fidivl
and
testl
adcb
lock
test
ja
rcll
fcmovb
mov
jns
dec
fs
cli
xchg
jmp
setne
sbb
push
dec
and
jmp
lock
fs
cld
outsl
mov
ffreep
pushf
test
jmp
out
and
adc
add
iret
shll
and
lahf
lcall
cmovnp
jo
movsb
and
nop
sbb
and
sbb
sahf
shrl
xchg
lds
aas
fldcw
inc
test
pop
adc
lret
inc
jns
popf
inc
or
dec
mov
jl
pushl
and
pop
inc
pop
xchg
sub
pushl
iret
mov
test
lret
sti
mov
movsb
cld
pop
mov
in
jbe
jmp
pop
mov
loop
xchg
inc
fidivrl
lahf
dec
pop
ljmp
imul
imul
jmp
jns
into
xchg
jb
in
push
xchg
sbb
cwtl
jl
fbstp
jle
aad
adc
inc
dec
loope
cld
adc
pop
jb
ret
inc
or
mov
fistpl
popl
shr
ret
cld
in
fnsave
and
out
mov
xor
xlat
and
or
scas
jge
adc
shrb
int
js
sub
fisttps
mov
push
push
icebp
mov
lret
sub
aam
notl
add
loopne
sahf
sub
loop
push
sub
and
in
mov
ret
bnd
inc
jns
cmp
fsubs
aad
fmuls
xor
or
xchg
mov
lock
mov
div
mov
dec
data16
or
inc
and
rol
push
faddl
fiadds
sbb
inc
scas
mov
pop
js
testb
sub
sarb
mov
xlat
xor
mov
lods
sbb
jp
pushf
repz
jnp
inc
fiadds
loop
out
mov
lock
or
push
sub
or
aaa
cmp
fisubs
jno
mov
cmp
or
inc
mov
loop
fisttpll
or
jle
jo
pop
ret
sbb
push
insb
add
loop
mov
hlt
add
dec
or
pop
fsubr
int3
fs
int
cs
scas
ljmp
daa
inc
mov
xchg
inc
imul
in
jno
sbb
pop
in
xchg
fcoml
dec
fwait
cmp
fs
leave
jae
add
dec
mov
push
in
mov
jecxz
scas
push
in
sub
iret
push
cltd
push
negl
mov
call
and
and
sbbl
xchg
dec
add
sub
loope
arpl
stos
xchg
sub
mov
xchg
jp
dec
lahf
insl
mov
shrl
cmpsb
sub
cmp
add
inc
clc
stos
dec
mov
mov
mov
dec
les
adc
xchg
sub
sub
fisttpl
ljmp
mov
mov
movsl
jmp
or
imul
addr16
fisubrs
addr16
adc
cs
xchg
sub
jle
add
mov
lahf
repnz
sub
imul
out
or
sti
add
dec
aaa
insl
loopne
pop
xlat
xchg
xor
dec
sahf
push
jo
mov
das
adc
dec
ffree
add
push
addr16
cwtl
aas
dec
xchg
out
and
jne
inc
xlat
mov
js
in
cmp
idiv
sbb
jge
pop
cmp
sub
mov
jbe
notb
test
imulb
dec
inc
push
loope
or
jl
push
mov
shr
xchg
xchg
cmp
test
push
sahf
push
cmp
clc
sbb
xor
mov
addr16
xlat
lcall
mov
pop
mov
mov
test
jg
sub
ret
hlt
ret
test
test
ret
outsb
jns
sti
mov
push
cmpb
xor
into
xor
xchg
sub
cmc
inc
mov
decb
or
xchg
xor
xor
out
out
popf
xor
pop
jle
mov
cmc
mov
cs
not
out
lret
jo
in
out
mov
adc
inc
bound
jb
dec
or
je
push
xchg
pop
push
xchg
rolb
push
faddl
cwtl
and
jnp
scas
inc
xlat
les
pop
xor
das
popf
ljmp
sub
lea
jns
movsb
lods
jecxz
aad
inc
push
cmpsl
mov
fimull
mov
and
add
mov
icebp
cmp
add
adc
movsl
xchg
pop
dec
hlt
jp
mov
lcall
lret
dec
ds
lret
and
loope
xchg
push
stos
jbe
call
add
jecxz
add
cmpsl
push
push
sub
ljmp
adc
and
ljmp
lock
jbe
in
pop
outsl
daa
xchg
push
or
add
sub
jmp
mov
cmpw
popa
inc
xor
gs
adc
into
dec
in
xor
stos
in
out
jg
divl
pop
mov
mov
outsb
add
mov
sub
jmp
icebp
loope,pn
outsb
inc
adc
aaa
add
mov
xchg
adc
xor
xchg
xor
stos
mov
push
into
andl
push
xchg
das
fimull
out
cmp
mov
push
fldl
bound
fistl
xchg
in
adc
rcrb
jno
repnz
sbb
je
shl
cli
adc
js
adc
testl
and
pop
lock
es
mov
in
out
mov
lcall
sti
mov
lcall
les
test
jle
out
call
test
xor
fsts
aaa
aaa
push
dec
push
imul
mov
xlat
pop
cmp
scas
loop
mov
push
sbb
sub
inc
push
loope
push
cmp
je
cmp
jbe
mov
sub
sbb
leave
mov
rcrl
fcmovnb
sub
and
addr16
imul
xchg
fs
mov
adc
mov
test
xchg
or
mov
fisttpll
push
cmp
fidivl
sub
pusha
jg
js
sub
mov
xchg
mov
test
add
jno
cld
jle
mov
fwait
cmp
jp
xor
xlat
cmpsl
push
sub
int3
adc
dec
inc
call
pop
jo
jle
or
movsb
or
in
or
jle
in
push
jno
test
imul
ljmp
ficomps
imul
in
mov
fwait
loop
test
in
aaa
rcrb
jne
lret
sbb
subl
call
ja
popa
cld
scas
outsl
inc
popa
cmp
sbb
repnz
pop
roll
sarl
xchg
test
sub
or
repz
fstp
jns
repz
imul
outsb
test
cmp
ja
popa
dec
and
jl
lock
fsts
imul
out
push
sbb
lods
cmc
bound
sub
inc
cmp
jle
into
out
out
cs
mov
or
adc
rclb
dec
stc
shrb
shll
in
sub
inc
in
iret
les
lods
mov
push
je
xchg
mov
and
inc
aad
mov
dec
insb
pop
insl
lahf
xchg
lods
daa
fnsave
popa
std
push
push
subl
adc
and
test
ss
xor
jnp
stc
scas
push
dec
and
cmpl
loop
es
push
xor
jge
jne
andl
jnp
sub
mov
lret
mov
jne
jmp
adc
fdiv
add
out
mov
out
mov
out
icebp
mov
adc
outsl
push
jno
fstps
je
jmp
js
sbb
mov
adc
add
or
cltd
in
cli
hlt
shrl
add
jg
push
scas
shll
push
sub
divb
ret
in
inc
pop
das
test
mov
fldenv
sub
jbe
cltd
lods
inc
or
jge
mov
stos
arpl
ss
out
mov
push
fs
repnz
rcl
add
popa
push
or
mov
jb
jg
inc
jle
and
push
shll
add
cmp
sbb
xchg
jmp
xchg
test
sub
cmpsb
sbb
mov
jle
inc
add
leave
jb
pop
je
rcl
push
iret
subb
imul
mov
cwtl
jecxz
adc
mov
push
out
aad
call
ret
addl
adc
rclb
adc
je
enter
pop
cwtl
aam
push
sbb
jge
movsb
cmp
push
ret
outsb
fs
outsb
int
fnstcw
jmp
scas
inc
sarl
cmp
dec
cmc
inc
lahf
mov
inc
inc
cli
adcb
inc
cltd
push
jnp
inc
call
ds
das
loopne
cs
stos
lock
and
cltd
and
jp
lret
xchg
ret
xor
addr16
js
mov
fnstsw
lds
cs
ret
sub
in
movl
int
loop
pop
and
ret
or
xchg
adc
cmp
mov
les
push
jne
mov
insl
jmp
fistl
mov
inc
aas
inc
ljmp
pushf
cmp
data16
cwtl
fldcw
cmc
jmp
out
inc
push
or
dec
cmp
lea
sub
dec
mov
add
xchg
outsb
sbb
std
add
lcall
pop
mov
cwtl
orl
fists
mov
popf
sbbb
jno
setne
adc
dec
xor
dec
mov
lods
xor
insl
push
in
shlb
lret
iret
push
cmp
js
mov
pop
cmp
add
mov
add
jg
sbb
sbb
jg
push
cmp
pop
pop
adc
sarb
scas
out
and
mov
out
ss
adc
fnop
rcll
jmp
mov
add
ficompl
fimull
sbb
insl
push
addr16
test
es
aaa
mov
es
xor
sub
mov
xor
jmp
in
jo
gs
into
ljmp
xchg
push
dec
and
mov
lcall
and
ss
aas
xchg
iret
xor
or
cmp
rorb
pop
dec
inc
dec
lock
dec
aaa
dec
inc
sbb
pop
adc
stos
jmp
loop
push
sub
mov
xchg
mov
or
mov
dec
and
jmp
dec
les
rcr
pop
inc
lods
sbb
push
addr16
jg
mov
fwait
mov
loop
out
sub
ljmp
or
shlb
test
es
pop
and
jo
pop
mov
cmpsl
adc
into
ljmp
mov
mov
adc
mov
lret
aaa
adc
jecxz
push
mov
fwait
xchg
adc
adc
sub
xchg
push
dec
addl
popf
adc
pusha
imull
or
mov
xor
mov
stc
push
and
jnp
aas
xor
dec
in
push
dec
xor
out
lods
xorb
outsb
test
stos
and
mov
mov
daa
jecxz
sbb
mov
aad
mov
scas
adc
push
xor
pop
nop
daa
mov
jmp
jl
scas
mov
fmuls
and
xchg
add
jge
mov
jmp
jbe
push
or
and
xor
and
cmp
flds
int
cmp
inc
jo
outsl
push
pop
xchg
push
xchg
rcl
out
lea
adc
movsb
cmp
ret
dec
aam
pop
loopne
or
aas
mov
into
mov
adc
mov
mov
sahf
xor
jmp
mov
dec
dec
testb
sbb
les
mov
add
jb
mov
pop
sbb
push
add
int3
jg
lods
or
out
xor
jne
test
loopne
sub
dec
sub
icebp
or
rcrb
cs
ret
cmp
repz
insl
andb
sub
jbe
pushl
jmp
adc
cltd
or
xor
insb
push
mov
cmpsl
pushf
rolb
lahf
cli
push
icebp
sar
out
fdivl
imul
mov
and
aad
dec
add
push
jge
jae
mov
sbb
jp
sbb
daa
in
inc
stos
sbb
insb
xchg
arpl
jnp
mov
test
xchg
mov
fidivl
sbb
call
xor
lret
and
rclb
das
ret
add
push
sbb
int3
cltd
xor
fwait
insb
fisttps
xchg
in
xor
mov
pop
ja
adc
iret
or
in
movsb
push
mov
push
gs
inc
cmp
pop
cwtl
pop
movsb
nop
aaa
call
push
daa
or
stos
inc
xor
xor
enter
in
pushf
mov
fistps
dec
jp
das
inc
push
mov
je
imul
mov
fsubl
outsw
dec
icebp
rol
ret
mov
lods
test
imul
ret
push
ud0
mov
cmc
cmp
jmp
stos
jmp
push
push
or
sahf
sub
mov
cmp
add
and
jp
lods
pop
hlt
test
jnp
jnp
imul
pop
xor
repnz
in
mov
lcall
pop
jmp
lcall
push
adc
faddl
dec
mov
jno
mov
or
sub
les
and
cmp
jb
dec
int3
push
shl
test
stos
mov
adc
test
xor
push
sub
sbb
inc
push
test
out
repz
pop
inc
fistl
in
xlat
sub
scas
xor
out
xchg
ja
inc
xchg
cmp
lret
add
in
pop
push
pushf
lock
loope
or
pop
jno
cmpsl
fsubr
dec
mov
jge
pop
pop
fsubrs
cld
cmp
xchg
lcall
inc
rcr
xor
push
push
stos
test
and
jns
xor
and
loope
xor
push
leave
sbb
js
dec
cs
outsb
rolb
shlb
push
mov
shr
xchg
pop
jbe
arpl
mov
movb
inc
bound
ror
outsb
mov
xchg
adc
aaa
mov
es
pop
test
sub
in
aam
cmp
movl
push
clc
lds
je
outsl
sbbb
push
mov
mov
rcrl
mov
or
rcll
call
gs
inc
inc
insl
and
out
and
fst
divl
xor
nop
mov
push
and
sbb
popf
mov
push
insb
sbb
rcrb
cmp
jecxz
pop
sti
mov
jecxz
add
push
daa
inc
mov
pop
rorb
stc
out
movsl
imul
cmp
pop
fisubs
hlt
push
popa
mov
outsb
mov
pop
jg
sub
jmp
pop
cmp
xor
and
scas
lods
mov
test
mov
xor
in
in
shrl
xor
mov
xchg
mov
js
int
and
inc
jp
cld
adc
push
inc
cwtl
pop
and
jae
das
lods
shrl
push
adc
stc
jp
sbb
std
mov
clc
adc
mov
fildl
lods
out
jns
cwtl
sub
outsl
loop
jge
addr16
pop
jmp
nop
jae
ljmp
inc
movsl
mov
lahf
push
popf
jne
cmpsl
cmpsb
es
shlb
dec
loop
pop
inc
scas
iret
xchg
imul
xlat
lods
add
mov
pop
mov
push
pop
insl
scas
shrl
xchg
pop
pop
cs
xchg
outsb
and
fcompl
pop
aas
lods
pushf
pop
cwtl
sbb
sbbl
movsb
bnd
insb
nop
jl
in
jns
arpl
push
idivl
cli
or
jecxz
push
fldcw
pop
jbe
adc
adc
or
ret
xor
xor
jae
jne
inc
daa
adc
dec
mov
sub
mov
cmp
ja
shrl
leave
pop
cmp
and
les
bound
jle
push
mov
popl
add
xchg
andb
sbb
and
call
jne
addr16
mov
jge
adc
sub
jns
sub
and
cwtl
insb
out
adcl
test
test
push
std
pusha
mov
mov
sub
outsl
xchg
fstpl
xor
pusha
xor
mov
mov
jns
in
imul
mov
xchg
mov
pop
mov
sahf
or
jmp
adc
outsl
gs
adc
in
int3
jne
shll
mov
ja
adc
jnp
mov
lock
repz
ss
sub
mov
insb
aad
cmovne
dec
pushf
int
into
dec
jmp
pop
or
cwtl
imul
sub
in
xchg
dec
mov
push
xchg
mov
movsl
or
jl
fcompl
sub
dec
loope
or
and
movsb
std
sub
and
dec
xlat
pushf
jl
mov
int
cmp
cwtl
push
mov
das
fcomp
xor
test
fdivrs
mov
fldenv
xor
add
fcmovu
jns
push
scas
inc
xor
pop
stos
jbe
push
push
fisubs
das
repnz
ss
and
fidivl
push
adc
imul
pusha
andb
pop
insl
pop
test
mov
xor
imul
hlt
andb
and
xor
andb
mov
xchg
jg
mov
rcll
mov
out
jbe
movsl
add
into
inc
iret
mov
cld
test
fstp
mov
shll
adc
pop
add
xor
mov
mov
repz
dec
pop
daa
mov
dec
push
stc
popf
cltd
xchg
daa
cmp
jmp
nop
xor
pop
les
and
adc
je
inc
gs
sarb
ljmp
ret
add
xchg
sub
shrb
jecxz
lds
std
xchg
lahf
les
mov
inc
arpl
loop
xchg
out
sbb
mov
and
mov
jl
ret
xchg
sbb
dec
js
pop
es
cmp
xor
imul
mov
loope
sub
mov
outsl
xchg
xchg
xor
and
push
fiadds
xlat
push
incl
scas
out
cld
push
rcrl
test
stos
nop
loopne
scas
mov
dec
pop
lods
sahf
out
xchg
dec
sub
jnp
pop
je
pusha
cmp
aad
mov
out
adc
inc
xlat
xlat
xor
push
xchg
xchg
icebp
dec
sub
xor
sub
in
mov
dec
je
dec
sbb
jae
shll
cs
notb
pop
mov
into
gs
enter
imul
pop
int
imul
dec
inc
cmpsl
sbb
test
mov
xchg
or
out
and
xor
xor
pop
repz
nop
xor
jp
movsb
jnp
jp
push
sub
fs
sbb
add
dec
popa
inc
xchg
dec
in
addr16
iret
adc
add
pusha
inc
mov
je
inc
out
aad
dec
repz
cmpsl
ret
sub
push
fistpl
adc
add
or
les
fidivs
dec
loop,pt
pop
cmc
test
repnz
aas
cmp
sbb
je
cmp
insl
cmp
dec
stos
enter
ds
cmc
xchg
xchg
aaa
fld
cwtl
std
xor
mov
or
dec
fbld
fdivl
inc
jecxz
icebp
mov
inc
sahf
rorl
push
jnp
imull
dec
scas
test
inc
test
testb
jle
inc
outsb
add
xor
cli
xchg
insl
stos
and
or
hlt
sbb
adc
in
incb
ret
fstpt
lret
dec
negb
mov
addr16
loope
adc
ret
jbe
stc
scas
add
xchg
arpl
dec
adc
mov
pusha
jg
test
pop
out
mov
xchg
inc
mov
ret
cmpsl
xchg
iret
jbe
xchg
mov
loope
sarb
pop
pop
icebp
incl
clc
sub
add
sbb
mov
int
insl
dec
mov
push
in
or
leave
ja
stc
test
das
stos
outsb
stos
subl
pop
fs
popa
insb
or
cmp
cmpsb
mov
cmp
int
mov
icebp
fdivs
sarb
aad
inc
mov
rcr
xchg
xor
cmp
or
fists
xor
mov
jp
push
shll
jg
decl
jo
or
mov
aaa
mov
push
jne
inc
jnp
cmp
mov
in
cmpsl
leave
inc
std
push
loopne
sbbb
sub
xchg
mov
inc
mov
leave
pusha
push
xchg
out
js
js
xchg
push
mov
fists
mov
push
es
mov
adc
push
popf
push
dec
out
out
pushf
cmp
mov
loopne,pn
loopne
mov
imul
inc
test
icebp
inc
adc
sub
add
ficoms
pop
test
xlat
or
mov
lahf
and
in
out
xchg
fcoms
out
push
or
out
sbb
xor
mov
aas
push
shll
push
sub
shrl
mov
out
jns
sub
sub
push
mov
dec
dec
xchg
jne
pop
xor
inc
fnsave
adc
adc
cmc
adc
mov
ret
pop
jecxz
cmp
outsl
mov
enter
push
lods
cmc
movsb
dec
xlat
imul
mov
cmp
clc
pop
jno
xor
mov
cmpsl
adc
mov
daa
leave
xchg
ret
sub
mov
fistl
int
push
add
call
sbb
insl
cmc
inc
or
xor
into
pushf
pop
jne
lea
inc
add
push
inc
pushf
jecxz
jns
int3
stos
adc
xchg
scas
aaa
int
xor
push
aad
cli
jae
aam
mov
into
xorl
ss
lock
repnz
leave
dec
pop
mov
mov
test
cli
mov
mov
dec
mov
stc
or
subb
ds
insb
sbb
in
stos
push
or
cmp
mov
sbb
mov
pop
jne
in
lret
cmpl
mov
jp
dec
movsl
cmp
hlt
in
bnd
out
mov
popf
adc
not
in
shrb
jmp
outsl
daa
ljmp
idivb
push
jge
enter
mov
adc
addr16
out
enter
shll
push
mov
pop
cmp
jge
iret
mov
les
push
aam
imul
cmc
lret
imulb
mov
enter
inc
pop
subb
popf
jecxz
loopne
or
mov
pusha
roll
mov
cmp
dec
pop
mov
adc
sub
adc
mov
mov
mov
sbb
inc
mul
dec
scas
dec
pop
fdivl
inc
loope
dec
lock
adc
aaa
inc
mov
outsb
lahf
jne
push
push
or
sub
xchg
shlb
xor
adc
mov
mov
jcxz
aas
mov
pop
lock
sbb
add
in
xorb
scas
fdivs
push
pusha
std
mov
sbb
xchg
add
pushf
shll
pop
out
sub
jae
popf
rorb
ja
fimull
push
sub
pop
xchg
mov
pop
push
mov
sbb
sub
int
lcall
fstpl
and
sbb
dec
inc
jnp
inc
hlt
xchg
shll
and
cmpsb
stos
insb
push
pop
out
mov
mov
xor
stos
or
repnz
pusha
inc
in
jmp
fs
pop
jecxz
test
std
in
fstpt
out
stos
push
gs
sub
xchg
xorl
jbe
and
dec
dec
mov
mov
xor
pop
inc
lea
pusha
push
add
mov
push
rep
in
cmpsl
in
jl
lret
aaa
ret
rol
cmc
lret
push
jecxz
addl
sti
pop
dec
sub
xchg
inc
push
inc
iret
clc
nop
scas
outsb
stos
dec
jl
mov
mov
mov
push
xchg
pop
enter
repz
shll
xchg
push
jmp
ja
jo
popf
subb
fimull
fcoms
mov
ljmp
xor
in
jnp
push
fwait
push
xorb
aad
cltd
pop
sub
push
call
add
jo
fwait
test
cmp
pop
js
and
push
imul
out
cld
xor
mov
icebp
pusha
xchg
lds
push
xor
adc
adc
and
fcmovb
ss
ljmp
xchg
and
inc
sbb
xchg
xor
fnstsw
cld
fs
insl
lods
pop
pop
movsb
jmp
pop
sub
mov
pop
rcrb
push
sbb
enter
add
and
xor
mov
hlt
or
mov
or
push
pop
jns
xchg
push
pop
cmc
mov
das
icebp
out
jl
js
lahf
mov
lcall
jecxz
sub
jg
shlb
fs
shld
adc
adc
mov
out
and
push
mov
xchg
cmp
pop
sbb
ret
xor
adc
xchg
sarb
pop
mov
int3
orb
dec
mov
popa
add
test
lods
pop
gs
mov
sti
mov
fiadds
ja
sub
fidivl
dec
mov
aaa
cmp
std
scas
int
jecxz
ret
cmp
xchg
pop
fimuls
daa
or
jbe
and
cmc
xor
mov
shll
call
cmpsl
mov
dec
enter
sub
dec
mov
pop
insb
dec
ds
add
dec
mov
call
into
sbb
xor
loop
cmp
mov
push
fmuls
fwait
inc
pop
dec
jp
sti
test
sbb
mov
pop
inc
sti
or
cs
fadds
dec
fbld
enter
sar
dec
mov
mov
call
mov
pop
loop
sub
jmp
and
xchg
cmpsl
in
test
adc
lods
cwtl
test
mov
mov
ret
popa
mov
enter
enter
mov
dec
out
mov
jmp
or
dec
pop
pop
pusha
dec
pop
push
lahf
xchg
pop
in
xchg
movsl
pusha
jmp
sti
mov
ss
xchg
aad
cmp
inc
mov
adc
gs
mov
jbe
mov
mov
xchg
addr16
sbb
sarb
mov
imul
scas
pop
sub
pushf
movsb
cmp
mov
cmc
daa
mov
and
xor
pop
out
lcall
xlat
arpl
jp
pop
mov
or
pushf
mov
cmpsl
xor
out
xchg
loopne
mov
out
xchg
rorb
repz
push
jo
xchg
cmp
pusha
mov
mov
mov
push
js
leave
out
or
push
loope
sub
inc
movsb
jle
lahf
sub
lret
xor
gs
test
pop
clc
stos
es
add
cmp
mov
pop
add
jb
mov
mov
pop
stos
gs
shlb
lret
xor
sub
sarl
hlt
cmp
xchg
clc
lds
push
sub
jnp
sbb
or
jb
outsl
cmpsb
xchg
jmp
mov
mov
adc
ret
popf
cmp
sbb
rcll
add
ret
arpl
sub
fdivs
je
jnp
lea
push
add
test
cmp
mov
add
sti
fwait
push
inc
push
shll
mov
inc
insb
or
fwait
bound
pop
and
outsb
rorb
cld
out
pop
insl
popf
filds
data16
mov
jb
mov
fiaddl
or
movsb
pop
in
movsl
imul
fiadds
push
xor
shlb
xor
fldl
and
stos
lds
arpl
cmpsl
adc
pop
bound
xor
mov
ds
insl
sahf
icebp
mov
and
adc
mov
lret
add
pop
loope
mov
push
cltd
fsubrl
in
adc
mov
test
inc
sahf
xor
popf
pop
in
adcl
pop
and
push
xchg
stos
fnsave
sbb
enter
add
inc
lahf
inc
sbb
push
xor
xchg
loop
outsl
jae
mov
stc
popa
outsl
push
cld
push
sbb
sub
adc
lret
out
inc
inc
adc
mov
leave
pusha
call
or
cmpl
outsb
int
shl
cmp
and
in
ds
jl
les
rcll
cmp
xchg
mov
scas
insl
into
pop
jno
mov
je
adc
cmc
popa
mov
xor
push
add
mov
mov
popa
sti
packsswb
pop
fistl
mov
add
subl
jno
pop
daa
push
sbb
cli
mov
shrl
adc
xlat
mov
mov
jno
or
xchg
jge
hlt
cmpps
lods
or
ficoms
mov
dec
sub
in
mov
aam
jge
icebp
aas
push
movsb
add
cmp
xchg
push
push
rcrl
jnp
shrb
pop
add
lahf
push
ja
in
sbb
push
mov
sub
outsl
or
rorb
ficoml
jmp
or
xor
pop
adc
jle
mov
dec
stos
mov
test
gs
push
insl
mov
adc
repnz
ficoms
popa
lods
and
cmp
sub
scas
cld
pop
inc
mov
loope
inc
cmpsb
ret
mov
jae
xchg
push
mulb
dec
cmc
add
ss
imul
cmpb
scas
mov
pop
push
cmp
iret
jno
mov
rcrl
neg
mov
imul
rorb
test
mov
ret
and
lods
xchg
pop
ds
into
movsl
mov
xchg
cltd
pusha
dec
mov
std
sti
movsl
jmp
add
xchg
insl
sub
xchg
hlt
dec
mov
pop
shrb
sbb
xor
cmp
fwait
insl
push
outsl
jp
dec
ljmp
mov
mov
daa
dec
aad
pop
dec
adc
cmp
mov
or
dec
aam
add
and
mov
lret
cmp
daa
hlt
xor
add
mov
rorl
aaa
add
lock
mov
jmp
lds
adc
ret
lock
inc
mov
inc
jno
leave
cltd
xchg
add
or
mov
pop
pop
dec
cmp
js
pop
in
and
sbb
push
inc
int3
imul
add
push
mov
dec
outsl
outsl
daa
ret
or
cmp
addr16
jecxz
sbb
jmp
push
in
mov
xor
or
xchg
fcmovu
es
sbb
scas
xchg
aaa
lret
sbb
dec
inc
loopne
icebp
aad
fwait
cmpsl
ficomps
xchg
mov
imul
push
es
test
movsb
lods
andb
adc
inc
outsl
push
cld
jl
fists
inc
push
and
adc
mov
mov
clc
addr16
dec
lods
jl
sbbl
jg
inc
jno
inc
cli
push
call
push
or
clc
nop
stos
sub
ljmp
cmpsb
push
shll
rorb
mov
aam
std
inc
mov
bound
cmpsl
mov
adc
enter
in
inc
test
xor
shr
stc
loop
stos
out
jnp
sbb
and
pop
xchg
jb
scas
push
shrl
sbb
add
mov
pop
and
scas
pop
jnp
test
jle
rorl
inc
cld
jae
pop
dec
out
jg
mov
jge
iret
rol
loop
call
xor
cmp
cld
and
sbb
xchg
mov
das
scas
dec
cmp
or
mov
mov
mov
ljmp
jp
pop
mov
scas
or
jl
lea
xchg
insb
fisttpll
mov
iret
mov
fildll
lahf
add
jnp
mov
or
mov
push
mov
ret
and
push
movsl
lret
lret
jg
xchg
pusha
repnz
lret
or
clc
or
or
shll
mov
and
sub
cmp
jl
jmp
pop
out
aam
insb
sub
pop
jmp
aad
rep
arpl
lahf
fdivrl
psllq
pushl
or
mov
mov
xchg
pop
js
cltd
sbb
pop
sti
shlb
mov
outsl
rol
testl
lcall
cmp
leave
push
sub
adc
inc
inc
std
std
pop
inc
mov
aad
in
test
xor
adc
lea
pop
fnsave
pop
dec
clc
inc
sti
or
adc
add
ror
fcmovbe
outsb
fwait
or
mov
and
inc
lret
hlt
dec
cmpsb
mov
out
aad
movsb
les
sahf
adc
push
cmp
loop
or
adc
and
lret
cmp
pop
out
xchg
in
dec
push
int
sbb
mov
stc
aas
cmpsl
xchg
pop
xchg
aad
insl
pop
mov
outsb
incl
mov
stos
cmpsb
outsl
pop
jmp
mov
in
or
ffreep
iret
imul
sub
cmpsb
push
in
fldpi
jno
jge
ficoms
das
pop
mov
fnstcw
xor
xchg
daa
cld
inc
mov
mov
daa
ljmp
push
fstpl
pop
cmp
test
mov
jge
data16
cmp
test
mov
adc
pop
dec
scas
es
fwait
gs
ror
xchg
inc
and
fisubrs
lret
icebp
mov
cli
pushf
bnd
les
cmp
orl
push
ret
xlat
inc
pop
repnz
sarl
push
lret
adc
ret
xor
mov
jge
jecxz
je
dec
push
iret
sub
in
jne
stc
xchg
mov
adc
mov
int3
mov
aam
shlb
cmpsl
int3
xorl
stos
lret
push
ret
in
dec
aam
push
push
ss
arpl
dec
adc
rclb
pusha
stc
xchg
dec
jg
idivl
sub
inc
in
fdivr
test
jno
xchg
mov
xchg
in
test
pop
inc
stos
jne
jbe
mov
lock
enter
mov
and
aas
push
push
std
or
mov
fdivl
xor
mov
aaa
pusha
push
sub
paddw
pusha
and
push
pop
insl
scas
mov
fiadds
push
xor
sarl
aad
and
out
ret
sub
dec
add
mov
inc
in
xchg
jne
or
ja
sarl
sub
jb
test
adc
imul
mov
mov
bndstx
cld
into
int
push
ljmp
jno
pop
int3
stc
add
xorps
es
in
push
adc
add
in
mov
adcb
adcl
sbb
jp
out
and
xlat
pop
repnz
pop
insl
ljmp
call
mov
popf
inc
cmp
adc
repnz
and
test
xchg
fnsave
ficoms
add
cmp
rcrl
outsb
incb
pop
cmc
xchg
flds
and
je
and
shrb
in
or
pop
inc
pusha
fildl
out
addb
fwait
int
out
and
gs
gs
xor
xchg
mov
movsl
pusha
ja
jns
push
and
and
mov
adc
outsb
imul
push
inc
decb
inc
pop
push
inc
or
lret
loop
aaa
adc
shlb
rorl
xor
dec
sbb
sub
mov
jno
xchg
dec
xchg
sub
cld
cmp
arpl
fnstenv
enter
lock
es
jle
jne
push
mov
jmp
daa
dec
loope
jmp
xchg
js
and
dec
jmp
xor
popa
or
imul
aam
jmp
arpl
ds
xor
mov
jmp
jb
cmpsl
cmp
loope
sbb
les
test
in
xchg
adc
jecxz
or
scas
sub
in
mov
jno
push
sbb
minps
and
cmp
pop
sahf
adc
xor
sbbl
mov
fnstcw
xchg
jb
dec
jo
fdivrl
arpl
fdivl
sbb
sti
and
xchg
mov
test
sbb
mov
jno
inc
aaa
push
adc
mov
push
inc
out
or
fidivrs
push
loopne
int3
pop
inc
leave
fnstcw
jno
jno
mov
je
add
cmp
mov
lahf
push
jns
xor
xchg
jl
aam
mov
mov
shrb
loopne
sarb
inc
pushf
push
ds
mov
jg
sub
xchg
and
lret
shll
push
loope
adc
mov
pop
inc
and
pop
push
outsb
jl
nop
mov
ficoml
lret
mov
or
xchg
jmp
inc
push
icebp
xchg
test
andb
sti
xchg
cmp
push
mov
fiadds
dec
jmp
in
pop
lahf
pop
jne
dec
vmovntdq
add
jecxz
fldcw
adc
lds
mov
jecxz
cmp
sub
jp
insb
mov
aas
push
lcall
and
ja
sbb
cmp
push
stos
sub
inc
fucomip
dec
test
cmp
jge
xchg
jns
sbb
and
iret
loope
xor
out
adc
imul
fidivs
inc
xchg
jmp
xlat
repnz
add
or
mov
xor
in
pop
ret
dec
cmp
inc
outsl
sarl
jb
les
sbb
push
jg
ljmp
pushf
sub
mov
leave
sub
cmp
adc
cs
add
push
test
inc
fimull
rorb
dec
cwtl
mov
push
jbe
fildl
test
es
xchg
sub
pop
notb
icebp
hlt
add
mov
mov
inc
jmp
out
testb
in
dec
and
ficoml
shll
cmp
roll
mov
xchg
imul
push
xchg
mov
add
cltd
dec
mov
movsl
inc
arpl
sub
xchg
mov
dec
sub
add
popa
or
fdivr
repz
leave
mov
loop
push
aam
xchg
xor
mov
icebp
push
lcall
mov
mov
cmp
jb
lock
push
mov
loope
out
lret
fstpl
sub
mov
fs
jne
sub
lret
sub
syscall
pop
fcmovnbe
out
sub
sbb
in
inc
mov
and
pop
pop
mov
cmpsl
das
adcl
lret
pop
int
jb
fucomi
and
add
adcb
pop
sahf
test
cltd
cmp
js
sahf
push
cwtl
mov
push
bnd
lcall
sub
cmp
in
decl
nop
sbb
add
out
mov
sub
xchg
xor
sub
lock
xor
sub
mov
jecxz
ss
std
mov
add
inc
push
out
sub
lret
fucomi
or
and
push
dec
xor
jnp
or
ret
xchg
jle
lcall
in
test
repnz
sub
into
jne
xchg
sarb
lret
pop
mov
push
test
incl
lods
mov
std
test
jb
adc
pusha
fwait
jle
int3
call
pop
lea
lret
fnstcw
or
xchg
imul
pop
pop
adc
and
push
mov
pop
out
mov
push
fs
mov
add
and
inc
xor
jmp
push
mov
xor
push
dec
adc
in
out
jge
jmp
push
pop
mov
stc
popa
dec
fdiv
dec
mov
insl
mov
adc
insl
fnstcw
push
jb
fistpl
mov
cmp
cmp
mov
push
mov
outsb
mov
sbb
sbb
or
push
addr16
dec
fstpl
icebp
adc
mov
jg
lret
and
js
shl
scas
cs
dec
push
push
jno
test
jnp
mull
pop
cwtl
scas
cmp
xor
cli
gs
adc
xlat
ret
clc
shll
inc
aam
add
mov
sbb
push
inc
outsl
xchg
mov
mov
and
lock
adc
mov
push
xchg
stos
outsl
pusha
ret
adc
outsb
andb
loop
shrb
jne
outsb
push
push
jb
pusha
movsb
cmp
cs
inc
push
pop
test
inc
fsts
push
call
xor
loopne
sub
sub
xor
les
int
mov
adc
sbb
mov
mov
inc
push
inc
lods
sbb
xchg
lret
jmp
push
mov
cmp
xchg
jo
sbbb
in
fsubl
inc
fistl
lds
pop
dec
mov
pop
loope
adc
loop
daa
mov
and
sub
daa
call
aas
insl
push
jge
bswap
or
js
lock
fisttpl
push
cmc
add
adc
xchg
xchg
outsl
xchg
mov
cmc
pop
arpl
test
lret
cmc
mov
shlb
inc
addl
imul
pusha
out
outsl
dec
push
ret
jp
push
into
pop
push
xorb
pusha
xchg
shll
aam
and
out
xchg
cmp
push
pop
lods
and
dec
pop
push
inc
xor
std
jg
mov
iret
adc
clc
or
xchg
xor
jmp
cmp
jno
inc
testb
paddw
leave
jns
mov
cmc
out
lret
mov
jb
pop
insb
mov
cwtl
and
xor
insb
pop
shl
dec
into
pop
repz
cs
sbb
and
inc
into
push
lahf
dec
cmc
dec
stc
push
ds
ljmp
sahf
push
lea
inc
or
shll
add
shlb
insb
loopne
les
dec
popa
and
lods
out
hlt
inc
dec
pop
jg
jmp
mov
cs
cmp
sbb
test
rol
jmp
ljmp
orl
mov
sub
jb
adc
pop
pop
test
mov
and
pop
imul
clc
adcl
mov
dec
dec
roll
cmp
jo
xchg
sub
pop
movsb
aaa
lods
gs
mov
sub
fsubrs
or
mov
ret
sub
in
xor
sbb
pusha
mov
mov
inc
pop
out
dec
popf
push
imul
jb
mov
leave
xchg
lods
cmp
and
nop
mov
push
mov
jnp
das
mov
pop
hlt
add
sbb
pop
sub
add
push
mov
jge
inc
ret
clc
pop
pop
dec
xor
mov
insb
mov
sbb
fwait
test
sbb
loope
pop
aas
mov
fs
push
mov
test
mov
loope
mov
cmp
sarb
jl
adc
out
cwtl
ljmp
bnd
or
cmpsl
mov
pop
pop
cmpsb
jge
xor
or
call
out
mov
sub
xor
fs
aad
mov
nop
jne
es
add
xchg
xor
lcall
loope
ja
insl
test
stc
pop
and
mov
mov
imul
pop
mov
inc
arpl
cwtd
sub
mov
mov
pop
lea
mov
imul
push
std
xchg
inc
or
mov
pop
xchg
out
xor
inc
mov
divb
xchg
sub
inc
stc
mov
ds
shlb
ds
pop
int
out
insl
loope
les
push
pop
stos
push
andb
push
movsb
cwtl
pop
xorb
sahf
stos
cli
icebp
pushf
pusha
ss
push
rcl
or
int3
dec
test
fcmovb
mov
mov
pop
popa
xor
adc
cmpsl
ds
testl
ss
popaw
mov
and
inc
lahf
adc
dec
fistpl
repz
cmpsb
ret
int3
push
cld
stos
push
cli
xchg
iret
xchg
jns
mov
bound
je
mov
clc
push
adc
out
inc
mov
jg
sub
mov
jbe
jp
sbb
or
or
test
hlt
mov
addr16
ror
cmpsb
inc
pop
nop
arpl
add
mov
pop
stos
mov
mov
xchg
stc
test
int
stc
nop
xchg
mov
scas
mov
push
clc
mov
push
xchg
mov
ret
rorl
es
aas
jno
cltd
sbb
cmpsl
mov
in
iret
stos
and
sub
subl
fyl2xp1
xlat
repz
cltd
test
sub
arpl
jnp
mov
xchg
pop
cmp
push
mov
and
push
out
inc
daa
insb
aam
inc
loop
sub
icebp
xchg
sarb
fldl
mov
jle
bound
sub
push
outsb
xor
gs
add
mov
stos
fidivrs
xchg
enter
loope
call
or
pop
add
movsl
cmp
call
lock
arpl
les
loopne
xchg
adc
in
sbb
mov
loopne
sbb
movsb
repz
push
mov
jo
popa
sbb
pop
dec
xor
mov
into
adc
lret
nop
cmpsl
out
lret
mov
movsb
iret
leave
das
push
push
add
fnsave
sub
outsl
leave
popf
mov
test
test
mov
lods
mov
push
adc
addl
adc
movsb
add
dec
inc
imul
mov
cmp
sti
inc
loope
xchg
icebp
add
cli
xchg
xchg
mov
or
lods
jo
xchg
push
mov
std
bndstx
pop
sub
ret
jb
jno
pop
lock
arpl
inc
xor
js
arpl
enter
push
ret
aaa
lret
pop
outsl
adc
cmp
sti
sahf
push
shlb
xorl
call
inc
fidivs
int
ljmp
jno
popa
mov
xor
lret
or
in
rcl
icebp
repnz
adc
rolb
pop
sbb
push
mov
je
pusha
mov
xor
gs
mov
in
jle
jae
jb
hlt
je
pop
int3
push
push
lods
pop
or
test
dec
pop
test
scas
popf
mov
popf
decl
aam
adc
les
sub
xor
aad
add
incb
orb
out
add
lds
ret
pop
hlt
popa
out
push
fs
xchg
pop
dec
mov
push
lcall
dec
movsb
cmp
insl
mov
into
mov
push
outsl
and
lcall
xchg
pusha
cmp
cmp
rol
jae
cli
std
stos
aad
mov
xor
es
subl
bound
dec
int
dec
mov
mov
sub
inc
movsb
mov
cmp
pop
pop
push
adc
or
add
sbb
adc
mov
lods
ss
mov
xchg
inc
aam
jae
add
dec
xor
movsb
mov
cmp
popa
or
jmp
fwait
add
jp
sub
and
sub
push
test
sbb
fcompl
lods
mov
cwtl
and
int3
arpl
jecxz
mov
adc
fidivrs
mov
sbb
lock
cmp
mov
push
jae
fsubs
jecxz
call
pop
mov
movsl
js
out
xor
incl
movb
movsl
mov
xchg
add
sub
push
in
lock
mov
and
or
jo
in
xchg
dec
dec
clc
cmp
jno
xor
pusha
stos
pop
push
jle
orl
sti
es
mov
fdivl
sbb
cltd
ljmp
xor
xchg
sub
jmp
pop
jmp
mov
fistps
sub
add
scas
clc
push
in
cmp
cmc
leave
push
pop
out
nop
inc
push
inc
stos
cltd
jne
inc
jne
lahf
daa
outsb
jae
push
cli
and
mov
dec
jle
ds
xor
subl
push
cltd
cli
xlat
outsb
sub
rcrb
pop
sub
mov
insb
inc
hlt
rol
pop
pop
pop
cmpsb
mov
fidivrs
scas
aas
lcall
pushf
cli
cmpsl
gs
xchg
ljmp
inc
arpl
cmp
jecxz
adc
xor
pop
xchg
ljmp
cld
je
loop
pop
cs
push
push
dec
cmc
sbb
pop
xchg
xor
jae
mov
pushf
jo
adc
out
test
cwtl
mov
nop
cmc
sarb
sbb
addr16
cmp
movsl
leave
notb
mov
xchg
sbb
divb
add
pop
imul
in
mov
xor
push
sub
scas
test
push
ja
mov
test
lods
cmp
out
cli
push
repz
sub
sbb
inc
push
inc
sbb
push
fldcw
mov
ja
imul
in
sbb
test
mov
icebp
mov
add
cmp
xchg
arpl
sbb
dec
out
in
xchg
ficomps
popf
movsl
std
call
scas
jl
sub
mov
adc
mov
mov
jle
xchg
dec
leave
pop
repnz
cmp
mov
lcall
pushf
cs
ljmp
cmp
mov
jae
pop
push
mov
pop
mov
or
add
into
inc
mov
adc
cli
rorb
clc
or
movsl
cwtd
mov
into
movsl
out
and
jmp
orl
aas
xchg
into
in
insb
add
mov
inc
enter
add
mov
xor
xor
add
sub
flds
sub
out
int3
lret
add
xor
push
ljmp
jno
mov
mov
xchg
and
jp
arpl
daa
jge
fwait
shll
jo
adc
fistpl
sub
cmpsb
je
pusha
stos
pop
pop
in
nop
jmp
or
outsb
inc
loop
pop
jge
mov
fildl
mov
int3
cmpsb
and
push
mov
mov
jbe
adc
jecxz
jp
outsl
jmp
xchg
aam
out
sub
repz
sub
pop
jmp
ret
pusha
or
jmp
xchg
cltd
repnz
call
cmp
sbb
shl
jg
mov
inc
stos
shlb
dec
mov
pop
test
out
mov
pop
test
fsubs
pusha
cmp
lods
out
pop
mov
pop
fiadds
cmp
dec
sub
and
cmc
out
xchg
xlat
cmp
sub
scas
fstpl
xchg
int3
out
adc
ljmp
out
inc
das
inc
icebp
xor
sbb
cmpsb
or
aad
in
mov
cs
adc
sbbl
sub
sbb
into
lret
mov
iret
arpl
mov
flds
jb
or
idivl
xchg
inc
mov
rcl
les
jle
jg
lret
fidivs
js
or
lret
mov
sahf
insl
sbbb
int
insb
sbb
jo
xor
add
add
fsts
push
pop
jecxz
cmc
xchg
pop
cmp
out
xor
leave
loope
mov
and
jecxz
push
push
mov
loope
adcb
dec
das
sbb
cli
cwtl
insl
push
push
iret
std
jl
xor
jae
push
adc
jne
ss
inc
cwtl
pop
sub
push
mov
sbb
xor
or
cld
cltd
es
or
adc
cmp
add
scas
aad
cmp
js
imul
mov
ja
jle
call
add
sub
loopne
and
out
lods
cltd
jno
and
iret
fbstp
orb
mov
shrl
pop
push
jecxz
inc
loopne
fdivs
loopne
jno
fisubl
push
inc
xlat
jne
push
inc
push
mov
pop
mov
jns
xor
iret
ljmp
cmp
rcl
enter
jge
das
push
outsb
outsl
insl
in
add
xor
add
loopne
or
shrb
jne,pn
push
push
lret
lcall
pop
sbb
add
push
inc
pop
mov
inc
out
das
push
jnp
pop
test
cmp
mov
inc
sti
xchg
hlt
jecxz
sub
dec
iret
mov
lods
idivl
fucomip
pop
sbb
aad
pusha
test
push
pop
outsl
je
push
mov
nop
call
std
fldenv
gs
enter
inc
int
push
outsl
pop
scas
fnstcw
incl
push
inc
mov
mov
adc
and
fdiv
push
mov
jle
jnp
popa
inc
push
int
sbb
ja
xor
jne
inc
inc
sbb
pop
cmp
or
add
mov
lret
jg
sub
in
cmp
jmp
sbb
or
js
jno
cmpb
sub
sbb
pop
push
lods
push
das
sahf
push
mov
mov
push
adc
push
stos
push
filds
jno
js
dec
popa
push
xchg
push
fwait
repnz
adc
pop
lcall
in
and
loope
cmp
or
jecxz
jmp
xchg
xor
aam
cli
aas
sub
jmp
push
movsb
arpl
jecxz
dec
pop
mov
cmpsb
cmp
arpl
iret
arpl
leave
pusha
push
push
dec
pop
sti
out
ret
sub
and
sub
sbb
sbb
or
nop
or
movsb
dec
stos
push
lahf
adc
inc
dec
pop
mov
push
pop
repz
in
adc
push
lds
lcall
fsubrl
mov
jmp
lret
lret
xor
icebp
iret
inc
push
bound
or
lods
clc
dec
mov
inc
push
xor
in
lods
inc
bound
adc
cltd
inc
sbb
mov
adc
cmp
sub
outsl
les
pop
insl
mov
imul
xor
fidivs
sub
mov
sub
inc
aas
sub
push
leave
add
das
imul
cltd
lods
xor
into
gs
stos
inc
icebp
outsl
fbstp
sbb
fnstsw
imul
in
mov
test
lods
repnz
out
inc
hlt
retw
adc
js
or
fisubl
xchg
cmp
arpl
rorl
adc
fsubl
je
push
daa
ljmp
push
in
daa
fstpl
mov
add
mov
mov
push
add
aam
push
jbe
sbb
pop
outsb
push
in
insl
lds
mov
mov
fldt
stos
jge
shr
jg
sti
xor
xor
shll
adc
fsubrs
mov
aaa
adcb
and
nop
call
insl
pusha
push
sahf
out
andb
mov
out
into
gs
adc
out
xor
es
inc
lods
mov
lock
imul
jnp
sbb
aaa
or
andb
xor
test
lret
jne
inc
jecxz
lods
sbbb
arpl
jno
idivl
into
and
fsubs
vmovups
jb
xchg
xor
in
imul
inc
pusha
xor
lods
jb
inc
mov
fidivrl
mov
xor
cwtl
push
add
mov
xchg
push
ds
mov
cmpl
ljmp
dec
add
mov
aaa
dec
pop
xor
xchg
sbb
sbb
ljmp
jl
sub
fwait
jne
das
sbb
push
leave
cmp
cli
dec
es
in
pushf
cli
adc
fidivs
dec
aam
adc
stos
jo
aaa
dec
sbb
popf
ret
jo
mov
clc
push
dec
mov
int3
jl
adc
cmp
loope
pop
pop
add
and
jmp
mov
jl
cmpsb
movsl
jae
in
mov
imul
mov
dec
inc
sbb
adcl
inc
add
inc
add
inc
lods
push
push
cltd
lock
xorb
enter
adc
mov
mov
out
xchg
sub
xchg
cs
aad
call
out
inc
test
fsubs
mov
mov
hlt
xor
std
push
stos
sbb
imul
popa
push
adc
push
mov
and
inc
add
cmp
add
xlat
cmp
add
movsl
cmp
pop
fidivrs
std
loopne
mov
xchg
aad
leave
xchg
jnp
pop
outsb
lds
idivb
or
dec
gs
out
out
sub
dec
pop
leave
int
fadds
sub
mov
sti
xchg
adc
jno
mov
add
ret
hlt
jbe
sbb
ret
mov
jg
andl
xchg
and
cld
repz
addr16
xlat
or
mov
mov
cmp
mov
faddl
sub
popa
and
scas
pop
test
aaa
sbb
dec
dec
mov
xchg
daa
pop
dec
aad
jae
or
xchg
roll
les
aaa
pop
sbb
jl
mov
sub
ja
ljmp
xor
mov
push
adc
bound
lret
pop
dec
add
icebp
cmp
mov
push
pop
loope
add
mov
sub
mov
lock
add
jae
sarl
fadds
dec
or
aas
stc
cmp
pop
sbb
push
xlat
cmp
call
pop
adc
xchg
pop
inc
fcoms
or
ljmp
or
xlat
mov
loopne
fwait
adcb
and
pop
push
sbb
xor
adc
or
aaa
mov
or
out
fcompl
popf
cmpl
mov
adc
test
cmp
ss
cwtl
xchg
mov
fnstsw
in
sub
mov
jle
xchg
push
negb
icebp
dec
pushf
xor
cltd
push
jo
inc
clc
inc
and
cwtl
mov
icebp
cmpb
shlb
lock
arpl
cmpsl
out
cmpsl
in
sub
cltd
enter
jmp
outsb
xchg
jg
mov
lods
push
std
or
jbe
mov
cmp
jle
add
sti
push
sub
cli
daa
inc
stc
and
sub
mov
and
test
cmp
int3
mov
jno
out
and
cmp
ds
mov
xor
movsl
jecxz
sbb
dec
insb
inc
xchg
mov
test
add
ja
mov
dec
sbb
fs
dec
outsb
out
cld
add
pusha
xor
stos
inc
leave
hlt
mov
ljmp
pop
cmp
xorl
shll
xchg
into
loope
mov
pop
lret
xchg
jecxz
pop
outsl
jge
jge
mov
loop
cwtl
sub
sti
mov
push
outsb
into
lret
pop
push
sub
lods
cmp
testl
jae
subl
shl
ret
rcl
ret
ret
xor
loope
cmp
insb
outsb
add
pop
mov
ss
mov
fsts
xlat
adc
dec
insb
ss
xlat
xchg
inc
or
stc
nop
neg
aam
pop
pop
sbb
imul
pushf
cmp
lock
aas
mov
pop
jecxz
ret
inc
push
js
sub
add
cmpsb
dec
loop
nop
add
mov
push
or
dec
fwait
push
jo
and
cltd
mov
shl
cli
jge
sub
pop
int3
mov
mov
inc
mov
xchg
mov
xchg
inc
inc
mov
cmc
stc
daa
jl
popf
mov
addb
adc
aad
out
shll
and
cwtl
inc
push
inc
mov
jae
push
addr16
cwtl
inc
or
mov
rcrl
dec
notb
fnsave
bound
stos
das
adc
cwtl
jmp
gs
aad
mov
mov
ljmp
or
std
or
lds
test
mov
call
fwait
aad
imulb
jns
shlb
mov
popf
hlt
jae
lret
xchg
pop
ds
sbb
lea
mov
adc
xor
lcall
mov
and
sbb
add
mov
and
or
ret
pop
pop
aas
mov
sarl
xor
rorl
mov
out
aas
enter
call
sub
push
fcoml
xchg
sub
dec
mov
lret
fnsave
inc
data16
sarl
cmpsl
add
xchg
fbstp
sub
mov
mov
jg
test
ljmp
jp
inc
test
mov
fisubl
sub
mov
xchg
dec
stos
cld
jp
mov
loopne
jle
arpl
pop
mov
out
mov
in
and
sahf
adcb
rep
stc
cmp
sub
bound
dec
adc
mov
jge
je
mov
adc
mov
xchg
push
sbb
sarl
jl
into
lahf
daa
push
add
popa
fsubl
leave
push
push
fnstenv
les
movsl
jl
andb
imul
gs
xchg
sbb
add
lahf
divl
nop
daa
xor
inc
pop
stc
cmp
shrl
pop
xchg
cld
mov
cmc
sbb
ret
call
adc
mov
repnz
lcall
adc
stos
jle
push
fstpt
adc
lret
sbb
add
sarb
sub
and
dec
pop
repnz
out
and
cmp
mov
push
jbe
dec
daa
jne
fistl
mov
or
push
ret
cmpsl
insb
adc
negl
out
inc
sub
fwait
adc
stos
in
adc
cmpsb
lea
insb
sub
jo
lret
push
clc
imul
mov
enter
fldt
mov
jb
xlat
xchg
cmpsl
out
popf
inc
pop
jb
jp
outsl
inc
popf
adc
call
cmp
sub
mov
cmp
pop
fnstenv
adcl
loopne
cmpsb
or
cmp
or
test
dec
shlb
setae
add
jb
push
mov
int
push
ljmp
repnz
jnp
cmp
leave
mov
pop
fstps
adc
mov
pop
ret
lds
fnsave
xor
cltd
insb
cmp
je
nop
daa
dec
xchg
out
gs
inc
sbb
fmull
jp
or
cmp
jmp
les
mov
mov
dec
test
clc
jg
stc
pop
pop
loop
dec
clc
mov
ficoms
inc
imul
sbb
cmp
jno
adc
push
sbb
ds
loope
lcall
xor
jno
notb
cwtl
inc
ljmp
pusha
inc
pop
mov
out
mov
add
das
add
dec
xchg
add
mov
adc
fcomps
lret
sbb
loopne
in
adc
adc
lock
jbe
sub
leave
ja
je
pop
lock
push
popf
or
add
faddl
xchg
fdivp
mov
lods
das
int3
test
out
inc
xchg
jle
jg
inc
cwtl
stos
push
mov
loope
hlt
ror
rcr
jne
out
in
add
test
sub
adc
arpl
lds
mov
fiaddl
scas
and
or
shrl
shlb
pop
dec
push
subl
mov
xor
pop
xchg
xchg
mov
jl
push
scas
cmp
jne
mov
ja
sbb
inc
sbb
xchg
sbb
lahf
pop
jge
push
xor
dec
in
cmp
aam
aam
je
mov
sub
les
call
std
jmp
push
push
mov
fs
jecxz
mov
cmp
faddl
bnd
jecxz
mov
mov
pop
mov
pop
out
ss
frstor
xor
push
push
cmp
jmp
inc
cld
sbbl
je
dec
out
shlb
shll
mov
dec
test
mov
fnstsw
dec
fcomi
push
cli
adc
subl
fwait
lock
mov
push
scas
and
xor
subl
cld
sub
rcrl
xchg
mov
arpl
add
sub
pushf
add
inc
js
xor
pop
sahf
popa
dec
pushf
pop
jmp
aas
pushf
dec
in
pop
sub
cmc
in
daa
bound
scas
aaa
mov
jne
dec
add
mov
push
into
lods
inc
lods
pop
out
cwtl
jb
xchg
cmpps
shll
imul
fldcw
rcl
push
jne
jno
inc
fistpl
shlb
push
jmp
and
rcrl
xchg
in
dec
adc
sahf
je
jns
sahf
and
iret
sbb
inc
fisubrs
sub
lock
push
inc
mov
push
into
int
mov
and
inc
es
or
rcll
cmpsl
xor
or
push
mov
adcb
ret
push
push
jo,pt
repnz
rol
cs
push
shlb
inc
andb
sbb
loopne
aad
and
mov
orb
ficomps
xor
add
ror
fsubrs
out
roll
testl
push
push
ja
imul
add
out
add
mov
scas
ret
outsb
jb
xchg
sub
or
mov
mov
push
leave
cltd
sub
or
nop
jmp
dec
in
call
or
fstpl
add
jecxz
aam
push
cmpsl
push
movsl
ja
pop
push
aad
lock
adc
lret
insl
sub
stos
xchg
jbe
xlat
mov
adc
sbb
icebp
gs
xlat
mov
aaa
clc
jno
xor
xor
sarl
adc
gs
mov
dec
fidivl
mov
jbe
sbb
sbb
rcrb
mov
sub
subl
bound
pop
lcall
ljmp
cld
adc
shrl
lods
es
mov
clc
call
in
cmp
pop
xchg
inc
inc
mov
icebp
insl
jp
test
pop
pcmpgtb
pop
xlat
lret
push
stos
mov
cld
xchg
movb
scas
jne
dec
jmp
pop
movsb
push
pop
push
and
sub
test
rorb
mov
fdivrs
add
push
inc
adc
push
mov
and
or
mov
push
push
mov
lea
popa
cld
mov
fistpl
push
dec
pushf
or
dec
jle
push
push
les
and
adc
xor
repz
or
aad
inc
das
adc
lahf
adc
mov
jno
xchg
cmpsb
fildl
out
and
in
fiaddl
repnz
les
rclb
pop
xor
or
repnz
adcb
xor
mov
xchg
lret
cltd
add
popf
lcall
rcrl
cld
imul
lock
xor
nop
rdmsr
mov
shll
jnp
mov
inc
stos
cmp
or
xchg
ja
popa
fwait
or
lods
out
test
in
mov
fcomps
ss
and
sbb
add
cmpsl
add
mov
imul
inc
or
aam
xchg
push
clts
sub
sbb
aam
cmc
add
subb
nop
jno
add
or
inc
cmpsb
loopne
in
inc
gs
inc
adc
lods
and
fcompl
test
sub
fwait
mov
xchg
orb
add
add
mov
fisttps
ret
out
lcall
push
stos
jbe
jl
jg
shr
stos
jmp
push
add
xlat
jecxz
mov
inc
push
add
jl
xor
mov
push
shll
add
push
in
dec
cmc
push
decl
je
ret
rcll
add
test
cmp
mov
cmpsb
jno
data16
push
subb
iret
call
sbb
nop
mulb
mov
clc
hlt
mov
ds
inc
in
repz
repnz
mov
mov
xchg
xchg
aas
rcl
and
lcall
adc
jg
xor
and
mov
insl
jecxz
lods
ljmp
and
sahf
mov
jge
mov
jb
fidivrs
pop
mov
jbe
or
ret
in
pop
out
cmp
or
adc
mov
sti
and
mov
sbb
hlt
mov
fdivl
dec
stos
cs
inc
subl
stc
ret
rcr
sbb
das
pop
push
cs
gs
mov
xchg
mov
jp
mov
sub
stos
pop
cld
adc
in
fwait
clc
popf
aad
xchg
push
fimull
sahf
rcl
dec
inc
lock
cld
sub
inc
lds
aam
xchg
mov
shrl
or
adc
clc
or
fisubl
cmp
pushf
mov
adcl
and
out
sahf
lret
adc
xor
xchg
inc
add
loop
adc
pop
add
jecxz
fcompl
loopne
ret
jp
loope
pop
pushf
mov
add
dec
test
dec
imul
and
sti
dec
out
mov
mov
fsubr
xor
in
lret
add
jb
stc
nop
repnz
pop
jg
adc
inc
test
jge
addr16
dec
lret
xchg
addr16
dec
push
xor
push
adc
test
mov
fistpll
push
lods
jl
sub
sbb
xor
push
mov
xchg
cs
push
out
out
xchg
adc
jns
jp
adc
xchg
cmp
xlat
adc
push
or
or
outsb
gs
leave
in
cmp
es
cld
add
and
imul
jmp
enter
jae
in
mov
fs
sub
pop
ljmp
push
add
xor
iret
cs
icebp
imul
sbb
mov
mov
outsl
gs
xor
sub
mov
fsubrl
sbb
movsl
dec
scas
jb
sbb
rcrb
jmp
pop
in
mov
fdivl
fisubs
xchg
lds
inc
mov
pop
push
scas
pop
push
sbb
mov
out
enter
arpl
dec
dec
and
outsl
inc
dec
test
hlt
adc
fsubl
jle
fistl
and
out
dec
fdivl
imul
dec
jl
fmul
mov
sahf
push
setno
adc
addr16
xchg
mov
or
cmpb
pop
adc
xor
jns
mov
es
movl
cs
push
inc
sub
fwait
mov
jae
and
clc
jo
push
imul
adc
cmp
pushf
stc
mov
xchg
outsl
add
iret
xor
scas
test
push
mov
dec
cmp
lcall
mov
out
rcll
xchg
dec
mov
int3
jg
jo
jbe
in
lret
adc
movsbl
xor
mov
add
ljmp
xchg
es
std
pop
je
mov
out
ret
adc
jns
push
mov
mov
test
jecxz
sbbb
push
scas
scas
inc
xchg
xchg
cld
stos
and
insl
sub
mov
ficoml
je
roll
dec
sti
push
out
mov
pushf
add
adc
mov
xlat
adc
xchg
dec
mov
insl
push
pop
scas
and
adc
arpl
nop
push
and
iret
xorb
je
push
sti
cmp
mov
std
repnz
add
or
fs
and
mov
hlt
mov
or
adc
xchg
in
outsb
push
in
xor
inc
jnp
jns
inc
stc
pop
adc
je
fldcw
lds
mov
lret
cmp
xor
aad
mov
jp
negl
jae
add
xchg
xor
xlat
or
push
cmp
jns
or
lcall
push
insl
push
lret
xchg
scas
sub
popaw
push
or
push
mov
mov
in
push
sti
stc
cmpsl
insb
repz
mov
not
and
shrl
stc
int
mov
lods
fsubrl
subb
movsl
pop
mov
ljmp
rol
jb
cmp
subb
ret
stos
sar
dec
or
sub
popa
inc
jb
sbb
xchg
jg
in
or
into
or
xchg
es
out
lcall
in
orl
push
jg
add
pop
dec
mov
cmpsb
mov
test
mov
sbb
stos
adc
jmp
or
jp
lods
xorb
cmc
jmp
cmp
enter
mov
mov
jg
inc
mov
je
outsl
sub
test
fbld
mov
stos
inc
lahf
sbb
add
add
std
add
sbb
lret
repz
adc
jns
push
sbb
in
add
dec
arpl
gs
sbb
das
cmp
xchg
jg
mov
push
jnp
ds
in
or
rol
nop
jecxz
push
int
test
push
idivl
mov
arpl
jl
shrb
std
lcall
filds
xchg
sub
dec
movsb
push
jo
out
cmp
or
sbb
imul
outsb
cmp
fbld
mov
lret
movsl
int
fisubrl
ret
mov
and
or
shr
int3
pop
shl
pusha
push
or
stc
or
dec
dec
clc
mov
mov
es
mov
mov
js
add
cmpsl
ficoms
outsb
mov
fsubrs
les
movsl
ds
leave
pop
pop
insl
out
test
dec
sub
in
fs
pop
shrl
notl
cmp
xchg
arpl
xchg
mov
enter
mov
mov
int
dec
or
cmpsl
inc
clc
inc
inc
pop
lcall
stos
jo
sub
rcrl
adc
pop
mov
repz
aad
mov
mov
inc
sbb
sub
movsb
hlt
dec
mov
aam
inc
adc
xchg
adc
sub
test
xchg
cmp
mov
and
data16
xchg
addb
lcall
sub
jge
repz
imul
shr
ret
xchg
pop
pop
aaa
ds
inc
cli
mov
fstpt
xchg
push
sarl
push
mov
imul
cmp
imull
mov
mov
insb
sub
pop
repz
inc
cmp
cmpsb
mov
fnstcw
cld
or
sub
push
cltd
mov
jno
and
cltd
jo
inc
outsl
loop
in
ret
jb
fidivs
jb
aaa
lds
rorb
out
popf
pop
in
add
xor
xchg
mov
jmp
addr16
sbb
inc
add
mov
sbb
repz
insb
sbb
cmp
adc
pop
popl
fwait
mov
or
fucomip
cmpsl
aad
std
adc
xor
inc
mov
jno
mov
and
cmp
push
movsl
lret
loopne
dec
adc
popa
xor
leave
cmp
imul
cwtl
jmp
or
ja
mov
testb
lcall
and
fwait
inc
fwait
inc
adc
fs
inc
mov
sbb
add
mov
orl
sbb
jle
xchg
mov
call
cmp
dec
nop
fidivs
push
outsl
push
lret
lcall
movsl
inc
scas
int
push
mov
mov
jmp
mov
outsb
iret
add
pop
repnz
inc
pop
movsb
mov
push
stos
mov
sti
or
mov
push
adc
test
or
jmp
out
inc
shlb
add
cmc
xor
cld
push
subb
call
cmp
push
or
out
mov
adc
int
mov
push
mov
add
xchg
mov
adc
into
dec
cwtl
pop
adc
in
std
inc
scas
mov
mov
les
loop
out
fadds
into
push
pop
sbb
and
jnp
push
shl
mov
call
adc
push
popa
loope
idivl
or
mov
mov
stc
lret
scas
dec
lock
enter
sub
or
lcall
clc
jg
fwait
repz
orb
je
ret
jle
shrb
pop
in
mov
add
stc
je
stc
jne
mov
arpl
lcall
pop
adc
jns
mov
cli
nop
jp
mov
imul
stos
jns
jbe,pt
push
in
or
fisubrs
pop
std
mov
or
out
in
stc
jle
inc
or
xlat
jmp
pop
stos
mov
pop
mov
xchg
and
cmp
mov
ret
mov
call
cmp
xchg
aas
push
inc
fcoml
addr16
je
pop
dec
je
adc
adc
mov
data16
dec
add
inc
ret
fidivl
rolb
addl
inc
enter
addl
test
xchg
loope
or
add
clc
dec
and
lods
xchg
sub
sub
jne
xchg
fnsave
cmp
out
in
sub
pop
adc
xor
xchg
mov
jns
cmc
or
sbb
sub
test
jb
ds
pop
out
inc
fnstsw
loope
push
fwait
add
int
in
xchg
ss
cmp
cmpsl
jmp
and
fimuls
xchg
dec
ret
mov
adc
mov
in
std
ja
xchg
mov
je
repnz
add
cmp
fwait
inc
test
je
incl
out
adc
pop
jl
iret
sub
pop
inc
or
xor
stc
nop
test
jmp
and
test
mov
mov
dec
adc
sbb
cmpl
mov
jb
fcmovu
cmpsl
in
lea
insl
mov
inc
out
sti
cvttps2pi
push
call
in
jo
adc
jmp
push
lret
lret
addr16
gs
std
pop
jmp
sbb
or
insl
fnstcw
and
shlb
rorl
in
aaa
jg
jb
push
mov
lret
pop
js
ja
sub
lret
jmp
sbb
pop
inc
sub
shrl
mov
call
jg
cmp
dec
mov
add
ret
push
div
pop
scas
add
mov
clc
xchg
int
or
iret
fldenv
xor
inc
xor
xchg
aad
xchg
and
jne
ja
push
test
fcoml
stos
cmpsl
mov
cli
pushf
sbb
ljmp
xor
jnp
jg
in
pusha
iret
inc
push
or
ja
dec
cmpsl
mov
sbb
adc
or
fstpt
icebp
daa
leave
test
fcomps
loop
sarb
or
cmp
cmp
add
outsl
or
jl
sahf
mov
pop
ffreep
jecxz
pop
sbb
das
push
jnp
mov
cli
xor
pop
fildll
fadd
push
cltd
out
xchg
ret
negb
pop
jne
pop
add
hlt
nop
jg
mov
repz
mov
icebp
dec
testl
push
subb
leave
xor
pop
stc
dec
aaa
out
test
lods
hlt
jnp
or
pop
jns
jb
in
fwait
outsl
sbb
lret
push
inc
pop
aad
push
pop
pop
mov
sub
andb
pop
addl
xchg
icebp
dec
shrl
inc
pusha
divl
cld
lcall
jbe
push
sbb
mov
add
cmpl
jle
push
cmpsl
std
cmp
fmull
jl
sbb
data16
mulb
ret
out
pop
movsb
xacquire
aas
add
mov
loop
subl
pop
cmp
xchg
push
iret
movl
loop
inc
sbb
mov
fcmovne
icebp
xor
and
or
nop
push
imul
lret
jle
add
lock
sbb
mov
pop
scas
mov
cmc
cltd
sbbl
xchg
mov
stos
pop
scas
fdivrl
ds
mov
out
push
nop
popf
mov
inc
fs
in
pop
adc
sarb
xlat
lock
insl
ja
xor
mov
mov
xchg
rcll
jecxz
cmp
add
stos
jb
dec
das
xchg
inc
sbbl
xchg
int
popl
cmp
lcall
ja
test
cltd
mov
ja
mov
ret
pop
data16
push
test
pop
clc
aas
sub
repz
cmpsl
mov
mov
pusha
push
in
and
in
xchg
inc
inc
or
mov
mov
cmp
shr
mov
daa
movsl
xor
dec
scas
xchg
xor
pop
aas
insb
shrl
mov
mov
scas
pop
pop
jecxz
sbb
sbb
inc
cmpsl
sbbb
addr16
mov
int3
add
je
mov
out
mov
mov
icebp
movd
rol
loope
mov
das
add
dec
push
in
mov
mov
pop
and
sbb
jle
call
sbb
pop
and
mov
leave
adc
clc
stos
mov
out
fndisi(8087
cmp
cmp
lock
data16
push
dec
faddp
out
cmp
ja
add
dec
cmp
fnstsw
mov
fld
das
push
jg
bound
cmp
test
pop
in
jecxz
stos
cwtl
loop
cmpsb
cmp
in
cmp
dec
cmp
leave
sub
push
ljmp
push
fnstsw
jno
mov
fbstp
adc
fs
outsl
outsl
jns
sbb
jp
ret
lcall
lcall
lahf
xchg
inc
mov
out
rcr
jb
ret
test
lcall
jno
push
xchg
adc
pushf
mov
fbld
mov
xchg
xor
sti
pop
mov
pop
jnp
mov
cltd
inc
fwait
and
int3
scas
xor
xchg
and
jae
mov
adc
in
xor
scas
mov
xor
lret
enter
inc
fdivl
mov
aad
adc
pop
dec
outsb
mov
mov
std
insb
pop
scas
jmp
or
movsl
jne
jl
dec
cmpsb
iret
mov
addr16
pop
cs
adcl
jno
mov
dec
xchg
sub
ds
xchg
pop
ret
hlt
sti
xchg
fnsave
out
inc
inc
lahf
cld
scas
and
shrb
jb
shl
mov
xchg
adc
cltd
jmp
jns
inc
jns
push
dec
add
int3
pop
addb
adc
push
nop
jne
inc
cmp
mov
cmp
daa
test
or
sub
and
sub
imul
lret
mov
add
arpl
cmp
push
mov
xchg
aad
or
loop
push
sub
insb
inc
out
xor
adc
fisubl
dec
imul
popa
cmp
mov
adc
cmp
pop
js
mov
xor
push
push
push
and
lock
popa
mov
mov
imul
push
push
in
xor
nop
fisubrs
bound
inc
add
std
test
je
in
pop
xor
dec
adc
mov
cwtl
stos
cmp
ret
dec
loop
mov
lock
test
ss
push
lret
subps
mov
pop
mov
xchg
jbe
fnsave
xchg
pop
dec
push
cld
xchg
dec
inc
xchg
sbb
push
mov
sbb
in
std
ret
lcall
sbb
push
lods
mov
std
insb
cmp
scas
dec
mov
pop
repnz
add
jmp
sbb
cmp
push
xor
push
xchg
mov
inc
fidivrl
mov
lret
adc
xor
stos
sarl
call
jmp
adc
inc
pop
add
cmp
xchg
sub
and
subb
hlt
xchg
xchg
pop
dec
leave
negb
roll
and
pop
pop
popf
xor
pop
lahf
stos
jae
mov
inc
into
pop
push
and
fstpt
jle
lods
repnz
lcall
and
ljmp
int3
popf
jg
pop
popa
and
adc
mov
push
cmpl
cli
aaa
xor
pop
push
inc
sbb
jmp
lea
mov
in
in
out
lret
fs
in
pusha
ds
je
cmp
mov
lret
jnp
sbb
testb
sti
adc
push
ds
pop
call
xor
out
mov
sbb
pop
and
in
mov
mov
jne
daa
or
adc
pop
stc
sbb
jb
daa
rcrl
cmp
lea
pop
mov
mov
sbb
idiv
or
inc
fistpl
loopne
mov
rcrb
adc
addl
mov
ss
and
or
fldenv
jns
imul
mov
mov
inc
dec
or
cmpsl
pop
sbb
orl
xor
and
push
nop
pop
mov
lret
enter
xor
in
rol
sub
cmp
sbb
cs
jne
pop
dec
sub
fwait
mov
scas
push
fcmovnbe
rcll
insl
xchg
and
jg
call
stos
pop
jae
sub
jp
cmpsb
call
jb
mov
xchg
stos
dec
dec
int
cmc
mov
push
lcall
and
pop
stc
cmpsl
or
enter
addr16
push
lock
xchg
mov
and
jge
lock
bound
mov
shll
mov
js
inc
push
mov
push
test
movsl
xor
push
or
xchg
inc
sti
aas
jmp
je
scas
incl
xor
ss
inc
test
loopne
fbstp
stos
sub
popf
cmp
inc
jp
lcall
call
cli
lret
dec
dec
cmpsl
js
xchg
popf
inc
in
sub
outsb
sub
test
mov
out
push
shrb
popa
mov
mov
movsb
dec
andl
push
jge
repnz
pop
cmc
lret
ud1
nop
mov
cli
push
ljmp
mov
mov
stos
out
popl
out
push
lret
test
mov
jne
int
int3
mov
push
fucom
inc
mov
inc
fcoms
inc
push
add
jnp
mov
xor
push
jbe,pn
add
xchg
cs
pushf
test
cmp
loopne
xchg
push
pop
xor
xchg
jg
adc
adc
mov
adc
jmp
xchg
push
shlb
jb
ret
and
push
xor
scas
sahf
lock
or
es
pop
addr16
out
xchg
xchg
pop
sbb
inc
es
outsl
lods
inc
adc
notb
lea
outsb
push
shlb
pop
pop
pop
in
mov
push
ljmp
dec
jp
push
inc
out
in
mov
xor
aaa
push
add
pop
mov
and
es
pop
movsl
es
pop
jns
fcompl
fs
pop
mov
sbbb
es
adc
lods
lret
loop
add
test
mov
xor
jae
fsubp
nop
and
adc
push
mov
les
cmp
int
dec
dec
mov
mov
pop
sub
cmp
pusha
pop
cmpsb
jne
lret
inc
jge
std
jno
cmp
and
mov
cmpsb
xchg
push
andb
mov
mov
sbb
std
add
inc
ret
xlat
xchg
sahf
cmc
and
jle
xchg
int3
mov
repnz
xchg
jo
adc
pop
sub
repz
arpl
inc
xchg
sub
push
mov
cmpsb
popa
xor
jbe
push
xor
cs
fs
ds
mov
lods
adc
icebp
adc
popf
sbb
sbb
cmp
test
addr16
mov
lahf
and
adc
sub
popf
mov
ret
push
xor
mov
mov
pusha
xchg
out
mov
inc
cmpsl
jge
cmp
mov
dec
in
insb
sub
mov
or
pop
cmp
cmpsb
dec
dec
pop
add
push
jae
sbb
or
dec
pop
test
xchg
xabort
imul
and
fwait
ret
mov
cmp
add
dec
jae
jne
pop
adc
push
lea
loop
jg
adc
lods
out
add
mov
add
clc
mov
and
add
pop
sub
popf
test
and
mov
and
adc
inc
dec
dec
fldenv
xchg
arpl
mulb
es
out
ss
addl
or
mov
cwtl
mov
insl
out
lds
icebp
sub
pop
cmp
in
scas
xchg
xchg
rclb
les
enter
dec
xor
and
out
mov
call
gs
insb
jb
add
pop
cmp
subb
jecxz
hlt
lea
out
sarb
jp
push
and
fucomi
in
insl
cli
cwtl
push
arpl
dec
cltd
cltd
xor
in
jne
jne
jmp
sbb
pop
pop
incb
sub
push
jno
lea
dec
cmp
icebp
mov
or
mov
adc
adc
cmp
push
xlat
imul
gs
mov
mov
fucomi
push
in
sbb
lea
adc
adc
mov
inc
fldt
push
movsb
aas
xchg
sub
orb
mov
jg
inc
addr16
pop
inc
cmpl
loopne
mov
aad
daa
adc
mov
into
stc
adcb
inc
leave
lock
mov
testb
scas
mov
imul
bound
rolb
or
outsb
shll
rcrb
jp
add
sub
cmp
cmp
xchg
insl
in
push
ds
movsb
jp
pop
lret
test
fsubl
imul
fcomp
adc
dec
icebp
out
inc
lods
jno
xor
mov
push
in
or
das
aad
push
hlt
loop
and
xor
adc
cmc
pop
mov
inc
inc
test
push
jne
mov
xlat
mov
dec
shlb
dec
or
adc
shld
fcmovbe
cmp
push
out
divb
into
nop
push
xor
out
add
stos
shlb
dec
inc
test
ds
movsb
inc
scas
or
jb
call
jl
sahf
mov
xchg
insb
xchg
push
adc
sbb
mov
stc
and
mov
inc
inc
mov
aam
jmp
jg
or
pushf
addr16
outsl
cmp
add
cmp
lock
scas
xor
lret
and
jg
mov
xchg
dec
cli
sub
push
cmp
xchg
fisubrl
pop
add
xor
fcoms
cltd
repnz
mov
pop
shrl
test
fdivr
xor
cmpsl
push
xor
sbb
xor
or
sub
and
imul
int
lcall
cmp
das
sub
aas
outsb
xchg
enter
mov
dec
and
lock
outsl
inc
popf
sarl
lret
jmp
das
add
push
dec
lds
sbb
pop
pop
and
sbb
mov
cli
out
jne
inc
mov
and
stc
imul
mov
insb
sub
mov
into
lea
or
movsb
cmp
mov
enter
imulb
inc
sub
js
fidivs
cwtl
xchg
aaa
dec
pop
scas
xor
adc
ret
outsl
adc
sub
test
scas
cmpsb
insb
mull
sti
cmpsl
xor
cmpsb
sbb
addr16
xchg
and
jecxz
pop
pop
ret
dec
sbb
push
in
xor
insb
inc
mov
mov
inc
pop
jp
and
add
fsubrs
xchg
sbb
adc
outsb
cmp
ja
lret
xlat
bound
shlb
jl
stc
lret
pop
push
inc
add
pop
adc
xchg
sub
mov
jo
shrb
repz
fsubr
cmp
push
inc
jmp
js
jo
lods
pop
ret
fildl
mov
shl
popf
dec
mov
inc
imul
imul
lock
rcrl
movsl
xadd
mov
das
notb
stos
add
mov
adc
shl
lock
movsl
sarl
in
andl
outsb
prefetchw
dec
cmpsb
pop
mov
push
or
mov
jb
push
mov
xchg
add
les
jbe
int3
jne
pop
cmpsb
iret
sbb
add
and
test
into
lahf
mov
and
sub
xchg
adc
cmp
pop
mulb
adc
mov
cwtl
cli
mov
out
test
insb
push
outsb
jmp
adc
push
je
dec
cmp
jno
mov
cmp
mov
fsubrs
pand
fsubp
lret
pop
push
jl
popa
scas
adc
std
call
xor
sahf
in
cmp
pop
in
outsl
lahf
dec
in
adc
insb
mov
out
fldt
fs
pushf
repz
inc
xor
add
mov
sti
jge
inc
scas
or
cmpb
pop
lret
inc
add
mov
aaa
or
pop
aam
cmovne
pop
icebp
or
pop
sub
jo
sub
jb
lcall
rcrb
ret
ss
sbb
daa
pop
cltd
mov
mov
test
mov
pop
jg
push
pop
mov
inc
in
xor
lock
aas
or
in
xor
xor
sub
in
cltd
cmp
imull
mov
addl
es
cmp
jge
daa
pop
mov
push
xor
sbb
fidivs
push
sti
mov
xchg
in
leave
popa
mov
fisubrl
mov
aam
or
pop
js
mov
lods
fsubl
inc
push
dec
and
fidivl
xor
xor
mov
mov
sbb
mov
sub
out
pop
mov
cltd
xor
lods
ds
in
pop
je
add
jg
rep
inc
fisttpl
test
adc
jae
lods
dec
push
adc
mov
je
or
pusha
nop
cmp
or
jo
loop
out
les
xchg
add
aaa
sub
sub
lcall
loop
or
mov
adc
inc
fistl
orl
lds
lret
xchg
repnz
sbb
jle
xchg
mov
jnp
test
imul
pop
repz
jbe
push
cli
jp
lods
mov
xor
int
das
xor
cli
es
fbld
lahf
mov
mov
divb
test
dec
adc
pop
mov
arpl
mov
nopl
mov
xchg
aaa
repz
inc
fwait
dec
stos
scas
lock
mov
leave
out
sti
iret
icebp
movb
adc
mov
das
jle
je
and
or
cmp
lods
xor
mov
xchg
sbb
inc
fdivl
ret
xlat
out
mov
and
push
test
in
jl
cmp
push
imul
jl
pop
mov
or
mov
pop
movsl
bt
mov
int
mov
inc
loope
push
aas
data16
fcoml
mov
mov
pop
adcb
xor
pop
dec
sub
mov
ret
loope
xor
aaa
push
out
cltd
pop
xor
xchg
inc
jae
cmp
push
std
call
jbe
pop
adc
loope
stos
cmp
cmp
test
lods
adc
ss
bound
je
mov
fldenv
sbb
jo
icebp
int
div
adc
jge
xchg
in
xchg
add
iret
adc
jbe
push
and
inc
adc
lret
push
sub
rorl
jecxz
mov
jge
mulb
cmpsb
lods
les
inc
pop
cwtl
fisttpll
mov
add
or
ficompl
xchg
ja
test
lods
rcrb
aad
int
jae
fucomip
mov
jb
pop
adc
cmp
enter
push
mov
arpl
lret
bound
fisttpl
push
testl
cmpsb
push
jne
push
push
sbb
jns
and
lock
bound
fsubl
je
xor
jle
pushf
scas
or
sbb
xchg
pop
lret
aam
rcll
cmp
jge
in
adc
mov
out
in
cmp
push
sti
test
nop
inc
int
sub
gs
xchg
mov
cmc
xor
daa
lret
xor
int3
pop
and
or
dec
loope
pop
jle
sub
jae
xchg
mov
mov
loopne
aas
pop
arpl
lods
popf
nop
mov
and
xchg
cmp
inc
jno
mov
add
hlt
mov
xchg
fsubrs
dec
sub
push
jb
rorl
mov
push
sbb
inc
bound
jns
in
mov
dec
pop
sti
adc
pop
adc
das
fcomps
lds
test
push
sti
pushf
adc
rolb
adc
fidivs
not
mov
xor
fwait
popf
cld
sbb
dec
enter
sbb
das
fdivrl
notl
fnstcw
mov
fcompl
sbb
mov
cld
pop
sti
mov
or
sub
fistps
inc
fwait
shl
scas
out
add
nop
test
inc
jge
jecxz
outsl
sub
iret
and
mov
jb
adcb
mov
fwait
idiv
mov
inc
xchg
mov
xor
mov
fisubl
mov
stos
gs
sbb
imul
and
rolb
mov
into
mov
movsl
icebp
mov
inc
pop
iret
push
gs
and
push
bound
cmpsl
xchg
stos
inc
pop
imul
popf
pop
leave
push
sbb
popa
cmp
clc
inc
pop
lds
and
cltd
loope
pop
sub
add
adc
dec
bnd
rclb
data16
ficomps
mov
cmpb
out
or
inc
sarb
jns
push
push
rcrb
xchg
aad
incb
notl
stc
push
std
xchg
pop
jae
int
in
sub
leave
rorb
in
aad
mov
loopne
cli
inc
ss
adc
addr16
and
in
jl
push
test
je
imulb
pop
sbb
add
fadd
push
pop
test
inc
and
packsswb
imul
xchg
pop
fidivrs
les
adc
fisubl
sti
sub
xor
push
aam
loopne
jno
shll
ret
pop
into
jne
sbb
push
shrl
scas
cmc
aad
popf
jg
dec
std
stos
mov
fdivrp
popl
test
xchg
mov
test
or
push
jmp
test
mov
dec
stos
sub
sar
pop
popa
cltd
adc
insb
movsl
push
lods
aad
jmp
push
ret
cmovl
cltd
insb
testl
cmpsl
test
mov
enter
sahf
inc
push
dec
mov
add
icebp
mov
inc
lods
ja
das
sub
pand
adcl
leave
and
adc
pop
lock
ja
mov
sbb
pop
mov
mov
push
lock
mov
mov
call
cmp
dec
cmp
mov
push
jae
pop
pop
sub
xor
push
data16
jns
std
xchg
xor
jae
mov
sbb
xchg
mov
cmpsb
mov
dec
dec
jg
data16
dec
shl
jnp
inc
pusha
xor
lods
push
inc
xchg
jg
add
scas
xorb
push
xchg
repz
cmpl
pop
call
xor
fisttpll
mov
dec
pop
or
ret
outsl
cmp
jae
jne
in
gs
inc
shl
imul
ret
push
mov
xchg
stc
and
mov
cltd
leave
loope
fwait
sbb
stc
mov
push
fcompl
repz
repnz
pop
add
call
mov
dec
aas
sbbb
add
push
mov
xor
xor
movsl
inc
mov
push
mov
jmp
jno
sub
lea
inc
xlat
lods
adc
sbb
test
sbb
inc
lods
ret
negb
add
mov
nop
ja
mov
call
loope
cmpsb
mov
mov
sbb
xlat
movsl
mov
xchg
mov
adc
adc
xchg
ss
pop
jmp
loop
out
sub
mov
hlt
mov
cmp
xchg
ljmp
mov
mov
sbb
mov
pop
jbe
test
decb
push
xor
jns
fwait
push
xor
mov
mov
stc
pop
jae
or
std
or
xchg
subb
add
popa
sub
jnp
adc
push
lods
dec
cltd
pop
cmp
outsb
lahf
jl
ret
je
lods
testb
fwait
dec
adc
in
xchg
js
into
out
and
aaa
dec
fs
add
push
xor
dec
addl
add
xor
lea
cmp
pop
push
imul
andb
jmp
mov
xorl
and
xchg
add
mov
adc
cmpsb
aad
std
or
lods
sub
pusha
neg
outsb
mov
fs
in
jle
add
push
testb
dec
or
inc
mov
fnsave
push
test
das
imul
popa
jo
add
or
jo
sub
mov
cmp
sbb
nop
xchg
invd
inc
sub
sub
sub
dec
insl
ja
push
or
xchg
mov
jmp
dec
fnsave
lea
movsbl
mov
add
cmp
jp
int3
insl
jno
inc
xchg
into
cmp
xchg
out
xor
in
jle
lods
inc
out
sbb
test
repnz
negl
cld
or
shll
ret
imul
mov
shrl
jmp
out
cmpsl
test
scas
pop
dec
sub
sbb
push
lret
mov
adcl
stos
inc
cmp
inc
inc
lea
push
ret
clc
bound
pop
ret
push
jmp
adc
jo
sbb
or
fisubrl
movsb
mov
mov
std
fiadds
dec
mov
lods
outsl
nop
push
mov
inc
fnsave
das
ret
xchg
std
jl
xor
lods
cmpsb
js
mov
xor
mov
and
mov
scas
rcrl
jmp
rorb
stos
scas
or
ja
adc
mov
pop
jno
mov
adc
int
fnsave
inc
sbbb
and
mov
lret
sbb
orl
pushw
and
cmp
rcrl
pop
push
push
xor
cmp
xlat
pop
adc
jns
icebp
stos
xor
sti
jb
cld
xchg
shrl
outsb
rcl
stos
mov
loope
arpl
imul
adcb
push
sub
dec
scas
or
sbb
rolb
lret
xorb
mov
fists
pop
lcall
ja
jbe
daa
xor
push
push
sub
mov
sub
clc
or
sbb
sub
jecxz
pop
ljmp
ljmp
mov
add
es
push
lea
sbb
pop
cmp
and
lcall
or
cmp
inc
faddp
pop
inc
mov
and
adc
inc
xor
xor
and
sbb
dec
sub
sbb
jp
inc
and
shl
adc
xlat
or
pop
ficoml
test
dec
cmp
insb
imul
xor
xchg
pop
cmpsl
dec
mov
jp
jb
mov
xchg
xor
data16
dec
shlb
pop
push
sub
gs
rclb
cmc
sahf
outsl
cmp
test
add
int
das
add
lock
insb
lods
and
mov
lcall
cmpsb
sub
add
lret
xlat
adc
ret
mov
js
enter
mov
sbb
mov
push
and
jl
sarl
mov
push
addr16
mov
mov
and
ja
fcomps
jg
enter
fdivl
outsl
push
bound
dec
push
jg
loope
enter
and
ds
adc
ds
xor
pushf
out
hlt
fisubrl
xchg
cmp
sbb
ljmp
push
sub
dec
test
imul
call
dec
leave
pop
push
cmpsb
xor
dec
in
adc
shlb
ss
sub
xchg
stos
mov
push
mov
test
pop
repnz
aam
rcll
cwtl
sarl
pop
lock
hlt
xlat
sahf
in
adc
mov
jns
and
inc
or
fs
inc
int
ds
or
pop
pop
in
xchg
mov
xlat
xchg
dec
int
out
xor
je
or
and
jl
aas
xlat
data16
fucom
push
sub
repz
pop
insb
mov
push
in
dec
into
loopne
ja
je
repz
lods
jmp
pop
push
mov
stos
repz
std
and
incb
mov
push
pop
jne
je
mov
xor
scas
mov
cmp
jge
mov
sbb
ds
js
repz
rcr
out
aas
pop
aas
adc
sbb
imul
fsubs
xchg
mov
sti
jne
sbb
sub
jns
shrb
mov
xchg
test
rolb
pop
scas
mov
inc
ss
pushf
sbb
in
adcb
enter
cld
cmp
pop
dec
push
xor
xor
jo
in
fst
lret
call
and
lods
pushf
mov
fiaddl
add
push
xlat
cmp
push
fdivrl
jle
stc
inc
adcb
mov
sub
push
stos
adc
scas
mov
xchg
in
loopne
or
xchg
inc
push
nop
mov
lods
jbe
movsb
cmpsl
mov
jnp
jno
ljmp
jno
sti
fisttpl
sti
dec
mov
xor
rorb
push
call
adc
lods
mov
repnz
pop
shr
fimuls
fwait
xor
inc
mov
push
add
add
jb
pop
movsb
flds
mov
loop
mov
add
mov
jg
popa
cmp
pop
outsl
enter
pop
jbe
xchg
sub
dec
xlat
fs
xor
ds
inc
mov
hlt
loop
xchg
sub
ds
js
dec
cmpsb
cmp
jmp
dec
shr
out
incl
fldenv
das
sbb
sbb
push
aam
or
popf
movsl
js
or
cli
out
mov
xchg
adc
divb
stos
xlat
sbb
xor
lret
imul
fisubl
aaa
or
jp
adc
jp
scas
clc
xchg
and
movsl
push
es
test
add
cli
movsl
inc
and
mov
sbbl
inc
aas
scas
mov
stc
xor
push
push
in
outsl
xchg
nop
sub
lahf
pop
stos
in
adc
into
popa
mov
pop
xor
mov
jg
mov
jb
lret
jge
sub
stos
ror
xchg
scas
push
stos
push
fsubrl
lods
xchg
scas
std
sahf
push
jmp
dec
lcall
xchg
fidivrl
mov
popa
enter
sti
lret
mov
fimull
or
bound
jge
jl
xchg
sahf
aad
dec
pop
mov
cmp
mov
aad
out
lock
inc
push
cmp
mov
jb
mov
loopne
rcl
cmpb
cltd
mov
stc
pushf
inc
das
sbb
fdiv
inc
cmp
aaa
push
pop
mov
jecxz
jge
cltd
test
or
inc
or
mov
push
aas
push
adc
push
jmp
xor
push
flds
or
sarl
loope
movsb
inc
xlat
aas
cwtl
pusha
ret
aas
loope
lea
mov
mov
pop
dec
fldenv
xlat
mov
or
sarb
xor
sbb
jg
and
push
lock
hlt
ja
gs
xchg
push
sti
fwait
jb
dec
loopne
ja
cltd
mov
into
inc
imull
lret
and
imul
xor
mov
dec
daa
inc
fidivl
inc
in
xchg
jecxz
sub
cmp
insl
subl
push
imul
and
imul
fsubr
mov
adc
sbb
dec
mov
cmp
inc
rcrl
sti
mov
insl
xchg
add
pushf
sub
fdivl
xor
or
nop
into
loop
in
aad
lcall
pcmpeqb
inc
or
leave
pop
fimuls
aas
fcos
mov
sub
subb
popf
pop
add
clc
lods
inc
out
adc
fwait
push
mov
xor
lds
ds
pop
repnz
pusha
and
push
outsl
xor
mov
xor
inc
gs
cmc
xor
loop
jmp
mov
cmc
lods
mov
xor
dec
sbb
das
push
mov
sahf
das
enter
pop
call
sub
xlat
xor
mov
adc
mov
mov
jo
pop
xchg
add
es
add
sbbb
inc
and
xor
scas
inc
xchg
inc
mov
or
stos
lods
dec
pushf
xor
lret
xchg
inc
mov
test
pop
das
ljmp
ja
pop
mov
mov
or
loopne
sbb
call
int3
out
cmc
push
push
xor
and
notb
das
hlt
xor
push
daa
outsl
loope
lahf
push
gs
jp
xchg
ljmp
mov
pop
jl
and
xchg
fmul
in
inc
pop
out
fimull
fstpl
sahf
fs
push
sahf
or
clc
or
ja
jbe
sbb
push
adc
dec
in
xor
or
dec
inc
jle
jl
xor
mov
imul
test
inc
cs
out
inc
add
jb
imul
sbb
daa
sbb
jp
movsb
out
sub
movsl
adc
mov
xchg
popf
adcb
mulb
mov
fwait
rorb
jne
jbe
inc
cmpsb
pop
fsubr
sarb
cmp
cmp
adc
jmp
add
dec
in
sbb
sbb
lods
jg
ret
sbb
or
into
pop
xor
pop
ss
divl
loopne
push
push
jg
sub
xrelease
test
adc
data16
gs
and
sbb
mov
call
dec
arpl
fadds
insb
sarl
mov
or
aas
dec
xor
cmp
cmp
jge
insb
add
cmp
int
jb
fstpt
dec
jecxz
push
add
cmp
pop
and
es
mov
pushf
test
mov
nop
mov
negb
sbbl
test
loope
jb
jge
sbb
pop
pushf
jge
xor
sahf
insb
xchg
cmp
subl
repnz
sub
jmp
scas
mov
sbbb
sub
popa
and
fcmove
mov
pop
sbb
cmp
sbb
push
ss
into
and
aad
clc
arpl
jns
inc
loope
mov
arpl
stos
mov
repz
and
inc
adc
push
sub
popf
sub
aam
mov
xchg
leave
cld
in
es
mov
sbb
or
in
loope
movl
push
fdivrs
inc
xor
scas
adc
mov
and
jmp
stos
add
xchg
addr16
mov
push
aaa
mov
sub
inc
or
mov
pcmpgtw
in
xlat
inc
xor
mov
jae
ret
xorb
jbe
rclb
jbe
std
cltd
lcall
mov
fstl
cwtl
flds
mov
jg
lret
mov
scas
inc
pushf
out
jp
xor
js
repnz
es
shl
inc
add
ss
dec
hlt
test
scas
out
xchg
push
jl
ljmp
inc
xchg
xchg
call
roll
fdivs
or
push
stos
lds
jmp
mov
insl
lret
int3
cli
sahf
pop
jmp
xchg
mov
dec
dec
add
fldenv
dec
pop
push
aam
jp
cltd
sahf
and
scas
pop
push
or
cmp
cmpsl
jns
jg
mov
and
fcomps
dec
sarb
xlat
jmp
fstl
ss
popa
mov
aam
xor
xchg
jp
push
repnz
sub
mov
pop
or
fs
or
adc
inc
sbb
fstl
xor
incb
pop
sub
mov
jae
mov
icebp
js
xor
lcall
incb
jns
insl
sbb
ret
sub
shrl
inc
push
push
fisubrs
or
leave
xor
jmp
out
test
mov
movsb
outsb
add
in
testl
cmc
movb
enter
pop
push
out
sahf
repnz
pop
jecxz
inc
push
in
pop
xchg
or
push
orb
stc
sbb
in
jo
dec
shr
addb
sub
in
test
jo
fs
or
loopne
cmpsl
xlat
push
or
sbb
cld
xchg
push
das
xchg
adc
dec
mov
xchg
push
lds
sub
mov
sahf
xchg
iret
xlat
adcb
pusha
pop
adc
gs
inc
outsl
mov
mov
push
das
cmp
rclb
dec
pop
ja
rorl
ss
add
push
cmp
dec
iret
jecxz
aaa
push
mov
mov
cmp
cmc
shll
stos
adc
pop
daa
insl
mov
testb
pop
in
mov
insl
xchg
bound
repz
hlt
loopne
stos
mov
mov
mov
mov
push
shr
push
fimuls
iret
mov
push
or
jno
jnp
mov
push
adc
outsl
mov
mov
loope
and
pop
repz
push
fmuls
std
les
lods
add
ds
add
mov
les
lea
sbb
loopne
mov
xchg
icebp
adc
orb
fisubl
inc
cmp
js
cmp
pop
movsb
ret
hlt
test
cmp
aad
sub
test
mov
cmc
adc
push
xor
add
mov
js
push
lcall
sahf
and
shr
sub
push
push
add
xchg
add
jg
jo
fnsave
sub
mov
test
aam
fistpl
xor
and
out
pop
xchg
xchg
subb
ret
xchg
out
and
test
imul
ds
inc
pop
in
insb
stos
inc
mov
mov
imul
in
jnp
mulb
sahf
fs
lea
stc
js
fst
call
loop
nop
std
pop
pop
in
inc
mov
or
push
or
mov
inc
push
jge
fs
or
into
fwait
stos
mov
xor
sub
mov
ret
mov
sub
popa
call
mov
xchg
push
cmp
pushf
testb
sub
lret
pop
xor
sub
jmp
outsb
hlt
mov
push
nop
mov
jl
mov
dec
enter
aad
js
out
xor
push
push
mov
cmp
sbb
fisttps
enter
jl
or
xchg
inc
enter
ret
aam
pushf
or
xor
jbe
int3
and
pop
cmpsl
inc
push
popf
xchg
movsb
mov
and
jb
mov
push
cld
imul
icebp
into
jecxz
repz
pop
and
aad
movsb
and
mov
mov
mov
icebp
pop
or
mov
cmpsl
lret
pop
cmc
add
in
mov
cs
add
cmp
testl
lods
adc
stos
pop
int
outsl
hlt
xchg
adc
cmpsb
sbb
or
stos
pop
lea
das
stos
movsl
cmpsb
pusha
sub
cmp
in
xchg
nopl
cltd
sbb
pop
cmpsl
jg
lock
mov
daa
lcall
and
jns
cmp
inc
cs
enter
outsl
jmp
imul
sbbb
inc
jb
xchg
mov
or
add
pop
stos
mov
xlat
icebp
pop
fwait
cmpsl
divb
mov
jno
cmp
dec
cmp
jg
mov
push
cmp
enter
adc
shll
divl
popa
int
xchg
mov
addr16
mov
sbb
mov
jo
iret
pop
pop
sbb
les
js
mov
pushf
out
out
cltd
pop
sub
pop
mov
jnp
push
dec
sbb
jmp
and
jbe
inc
loope
lahf
or
rol
adc
aad
push
jecxz
xor
push
jge
add
sub
or
sub
data16
outsl
sahf
arpl
or
in
shlb
test
jns
cs
scas
inc
and
imul
lea
mov
and
xor
xchg
sub
mov
adc
rcr
and
and
popa
aas
xchg
push
jb
lock
imul
mov
pop
mov
jecxz
scas
js
fistl
adc
jbe
dec
mov
rorb
shll
inc
sbbb
xchg
mov
inc
mov
pop
fldcw
dec
adc
pushf
mov
xchg
leave
cli
sub
push
and
je
inc
jb
out
add
cmp
jge
inc
ret
mov
in
xchg
pop
hlt
gs
icebp
insb
add
sub
jbe
xchg
adc
sbb
ret
out
movsl
dec
mov
movb
clc
clc
mov
hlt
fiaddl
outsl
push
add
popa
inc
xor
lods
popa
cmpsb
sti
jp
and
xchg
cmpsb
cmp
push
lock
mov
repz
jg
xor
fs
dec
mov
fidivs
adc
imul
xchg
out
or
inc
cmp
adc
cmpsl
cwtl
test
sbb
jae
aaa
cmp
pushf
cwtl
outsb
cmc
mov
pop
push
inc
frstor
dec
pop
mov
fsincos
and
and
push
leave
ret
or
lock
pop
sbb
loopne
and
dec
mov
adc
stos
push
cs
daa
ljmp
push
push
jnp
lods
push
mov
enter
xlat
inc
lods
jae
fbld
push
pop
or
addr16
divl
lret
sbb
fxch
mov
jge
lds
dec
xor
pop
inc
xchg
sbb
scas
mov
shlb
inc
sub
pusha
adc
sub
pop
and
lcall
add
mov
mov
das
pop
filds
sub
push
push
mov
das
sub
inc
stc
push
cmc
push
mull
js
xchg
addb
push
icebp
lret
xchg
scas
pop
shrb
addr16
mov
mov
test
shrl
addb
jb
fisubs
pop
movsb
repz
jge
and
orb
leave
jp
shld
imul
das
or
jo
sub
imul
pop
cwtl
or
mov
ljmp
icebp
adc
ret
adcl
fisttps
or
adc
pop
mov
es
popf
stos
mull
mov
into
stc
adc
insl
dec
sub
dec
add
cmpb
sahf
cmpsl
and
dec
cmp
or
add
adc
loop,pn
aad
es
addr16
test
popf
cmp
icebp
push
sbb
or
add
pop
fildll
jb
mov
mov
lods
jp
in
cmp
jl
mov
inc
adcl
or
daa
mov
std
insb
inc
scas
xchg
aaa
cmp
into
xor
insb
negb
sub
sbb
mov
inc
xchg
pop
cmp
pop
repnz
push
jns
outsl
fnstsw
inc
add
sti
push
dec
or
outsb
imul
mov
lods
push
test
dec
sahf
sub
mov
xchg
addr16
daa
imulb
push
sbb
dec
cmp
nop
aaa
xor
mov
sbb
push
mov
ret
dec
mov
sti
xlat
repz
les
add
sbb
add
mov
cwtl
je
add
shl
movsb
mov
cmp
and
shrb
xor
xlat
idivl
adc
inc
dec
mov
sub
push
movsb
dec
es
lret
bound
dec
hlt
mov
dec
cmpsb
ja,pt
cmp
nop
stc
nop
enter
jno
pop
fmulp
scas
cld
in
movsl
fidivl
test
push
pop
addl
addr16
mov
sbb
mov
jno
adc
hlt
jnp
jp
or
out
mov
test
lcall
and
pop
push
jns
pusha
mov
cmp
sti
lahf
sahf
into
das
rol
andb
movsl
mov
cmp
cmp
call
ret
jo
add
or
movb
in
xlat
pop
add
or
jb
or
out
or
shlb
xchg
cmp
add
fdivrs
and
std
sub
add
fwait
clc
mov
push
movsb
xchg
xchg
movsl
push
jo
ds
fs
mov
inc
shlb
lret
mov
out
insl
or
cmp
cmp
test
addb
pop
sahf
jae
mov
fisttps
mov
popf
mov
jae
ds
fsubrs
dec
xchg
sbb
sbb
outsb
mov
push
adc
inc
inc
je
mov
roll
and
push
xor
rol
repnz
dec
sub
dec
dec
xchg
cmp
test
xchg
xlat
enter
sub
popa
inc
adc
orb
mov
adc
enter
insl
mov
lds
and
add
inc
fldl
and
xlat
pop
and
jno
sub
add
dec
in
push
xchg
sub
add
adc
fistpl
es
std
pop
repz
jmp
or
clc
and
mov
out
mov
out
xor
inc
mov
dec
lret
push
jmp
mov
cmpsb
push
pop
xchg
inc
fcmovb
jg
jae
int3
adc
aad
mov
xor
inc
adc
pop
cs
and
xor
push
sub
push
rorl
leave
fcompl
or
pop
xor
es
rol
inc
mov
ss
je
mov
loopne
cmp
push
adc
xchg
cltd
sub
es
in
jnp
out
mov
std
bound
xchg
aaa
incl
in
test
sbb
push
add
sbb
cmp
lcall
xor
cs
push
inc
pop
mov
shrb
mul
jnp
aas
inc
in
clc
lret
movsb
jge
cmc
es
jbe
js
cmp
xchg
push
or
pop
dec
nop
jle
dec
stos
mov
call
mov
les
adc
mov
subl
or
imul
xorl
cs
ss
add
inc
mov
enter
pop
jno
pop
ret
out
pop
dec
ja
in
call
add
push
aas
pushl
inc
mov
call
ror
jg
and
sarl
shl
jl
sub
pushf
popf
inc
push
xchg
xor
int3
loop
pop
imul
push
mov
js
xor
sub
cld
xchg
jne
pop
jbe
fwait
sbb
and
aas
mov
sub
sahf
in
jns
test
mov
cmp
in
jns
cltd
leave
sub
adc
data16
out
aad
push
negb
xchg
repz
into
xor
add
xchg
fldcw
push
fcoms
loope
imul
pop
or
lea
test
mov
sar
xor
stos
inc
push
int
cli
cs
aas
push
push
sbbl
repz
push
dec
cltd
int3
arpl
insl
mov
xor
jo
lds
and
inc
mov
stc
fbld
sub
lcall
lods
cmp
in
rclb
xchg
sahf
mov
ljmp
inc
shrb
cmpsb
xor
ja
repnz
inc
push
xchg
xor
outsb
pop
xchg
fcmove
xchg
push
sub
ret
lods
inc
jp
inc
xchg
ljmp
jb
bnd
daa
cmc
add
xor
pop
pop
jne
je
push
mov
outsb
sbb
pop
dec
and
mov
add
stos
mov
sbb
add
lods
xor
jne
jl
pop
sahf
push
in
lock
mov
mov
mov
dec
subl
fldl
pusha
jnp
xor
pop
push
inc
pusha
xchg
outsb
cmpsb
icebp
sub
mov
inc
scas
outsb
mov
bound
push
in
test
and
into
fbld
push
in
icebp
arpl
cmp
mov
xor
es
sbb
insb
cs
mov
or
sbb
js
lock
aaa
test
testl
pop
decl
imul
int3
jp
imul
inc
jp
mov
xchg
mov
xchg
lahf
pop
repnz
inc
std
je
clc
push
sub
xchg
das
jge
adc
and
push
push
mov
sahf
popf
stc
iret
stos
lods
nop
pushf
add
data16
insl
decl
les
addb
ror
psubq
mov
pop
sbb
mov
shl
ret
cmp
mov
mov
mov
inc
or
jae
sub
cmp
add
mov
add
sbb
cmp
lret
xor
pop
dec
xchg
dec
ja
cmc
in
cmc
out
mov
cmpsl
mov
inc
fdiv
xor
jp
cld
nop
mov
std
divb
push
add
pop
mov
repz
jecxz
inc
cltd
xchg
lret
inc
pop
notb
mov
or
xor
mov
aas
jp
aas
nop
jns
push
sbb
fsubr
out
jns
int
xor
pop
mulb
mov
stc
data16
sbb
dec
fstpl
in
mov
scas
xchg
xor
insb
negl
sbb
or
je
mov
xchg
push
ljmp
rcrb
outsl
push
sahf
jnp
or
xlat
jne
add
jecxz
mov
gs
jb
daa
push
mov
aad
adc
xchg
lods
nop
daa
sti
aad
sbb
scas
adc
call
inc
movsl
or
push
add
rcrb
mov
sub
clc
pop
mov
cld
xchg
data16
nop
jbe
mov
xchg
and
or
enter
push
je
iret
filds
mov
lock
pop
lcall
stc
in
and
mov
movhlps
add
mov
out
or
cmp
or
add
pop
xchg
popf
fbstp
fisubl
hlt
std
push
movsl
xchg
icebp
adc
rcrb
adc
cmp
fwait
pop
fwait
push
push
adc
loope
dec
in
insb
aad
icebp
inc
jne
imul
mov
xor
ret
repnz
bound
dec
nopl
xchg
loopne
push
adc
inc
into
test
ljmp
mov
imul
sub
nop
mov
mov
aad
mov
scas
adc
sar
stos
sub
adc
imull
and
fbstp
jb
aam
fcomi
adc
mov
arpl
push
gs
sub
outsb
jl
pushf
mov
arpl
pop
adc
cmpsl
out
lods
sbb
loopne
xchg
cld
pop
adc
add
rclb
in
push
xchg
sbb
scas
cmp
int
or
fucomip
mov
xor
and
xor
imul
add
stos
in
rorb
xor
scas
mov
lds
loop
jge
adc
clc
jmp
xor
sub
clc
jae
or
clc
and
fisttps
popa
cmp
iret
xor
mov
pop
aam
dec
and
and
lret
sub
push
loopne
jl
adc
inc
mov
enter
ljmp
inc
push
add
dec
loopne
es
pop
aas
out
jo
fsubrs
adc
sahf
sub
out
lods
mov
and
inc
nop
cli
inc
and
push
data16
sbbl
cmc
lret
cmpsl
out
loope
push
js
test
aaa
sbb
fnstcw
testb
stos
lea
js
xchg
xor
ds
push
fnstsw
clc
pop
cmc
mov
sub
clc
jp
aad
dec
addr16
shl
lds
sub
ss
jmp
jge
inc
mov
pop
rcrb
aaa
xlat
ret
call
or
mov
sub
jmp
es
cwtl
xorl
mov
fildl
xchg
and
sbb
push
adcl
pop
cs
mov
enter
pop
push
push
adc
shlb
fucomip
add
mov
mov
lahf
aas
fcoms
add
jbe
hlt
dec
push
jae
fimull
push
add
das
jg
inc
sub
add
or
lcall
mov
pop
jns
test
ja
add
pop
jo
jp
xchg
lods
mov
andb
movsb
xlat
mov
mov
xor
mov
jnp
adc
scas
out
scas
pushf
pusha
pop
lahf
mov
xor
aam
jle
or
ljmp
adc
pop
and
add
xor
rcrb
jp
fisttpll
mov
inc
push
pop
outsb
inc
pop
ljmp
xor
and
sbb
push
mov
mov
adc
std
push
iret
mov
jns
movsl
inc
out
mov
dec
or
xor
or
xchg
outsb
cmpsb
jo
cmpsl
lret
cli
outsb
insl
les
ret
arpl
into
or
jne
jmp
pop
push
cli
jl
ss
gs
dec
fisubrl
mov
xchg
xor
jno
inc
push
out
xor
out
test
xor
xor
dec
loope
mov
mov
clc
mov
pushf
xor
gs
into
lcall
stc
stos
out
aam
push
inc
jne
cld
dec
xchg
jl
or
mov
fildll
ret
pop
sahf
jecxz
iret
jle
test
adc
mov
ja
enter
fildll
pop
sbb
add
nop
fistps
pop
or
push
gs
push
push
iret
popf
jne
sbb
and
test
pushf
mov
loopne
xlat
sbb
jl
sbb
push
mov
xchg
push
push
xchg
ret
fucomp
bound
mov
cmpsl
push
jmp
push
add
mov
cmpl
push
mov
aam
cmp
cltd
pop
fildl
clc
aaa
jne
into
cmp
sbbl
sahf
push
fucomi
mov
shl
arpl
adc
pop
dec
popa
push
lods
xchg
jg
imul
ss
shll
leave
pop
xor
xor
std
push
pusha
cli
cmpsb
sahf
dec
dec
enter
aaa
cmpsl
push
inc
pop
push
cmpsb
mov
js
inc
stos
sub
push
imul
lcall
and
insb
out
mov
shr
into
inc
fnstsw
je
mov
lret
repnz
mov
leave
xchg
xchg
xlat
sub
int
int3
push
mov
test
mov
jl
roll
jle
jne
fwait
je
mov
ljmp
xor
fisttpll
stos
subb
es
outsb
xor
das
lds
push
movsl
mov
dec
hlt
loopne
std
adc
xor
push
push
jl
test
popf
popf
push
cmpsb
push
xor
jecxz
and
xor
aad
add
insb
xor
hlt
sbb
leave
loopne
jmp
mov
or
inc
push
pmulhuw
js
cltd
jmp
adcl
stc
mov
neg
ljmp
nop
arpl
cmpsb
call
hlt
test
pop
jno
fstl
push
cli
cmp
sbb
push
mov
ss
mov
insl
lds
jnp
xchg
mov
xchg
scas
out
adc
cld
mov
xchg
push
xor
int
mov
orb
aam
jg
mov
mov
sbbl
push
imulb
pop
pusha
push
fstps
pop
xchg
in
lahf
sbb
into
test
out
sbb
leave
enter
jle
imul
mov
mov
cwtl
mov
pop
xchg
int3
push
push
movsb
movsb
jg
test
lcall
cmp
or
dec
mov
jbe
repz
bound
mov
cli
or
test
pop
cli
sbb
pop
loop
mov
or
nop
lret
jl
xchg
dec
push
push
sbbl
loopne
insb
out
xor
cmpb
es
fisubs
xchg
fcomps
xorl
fs
xchg
jne
mov
mov
movsl
inc
ficoml
push
jb
aad
rclb
inc
dec
pop
cmc
jge
mov
jl
add
push
pop
mov
shrb
and
inc
lds
pop
xor
sub
mov
rcrb
or
pop
ljmp
jno
in
fs
jmp
jmp
xchg
pop
es
and
cwtl
mov
xchg
lcall
xorl
pop
lds
lret
push
jb
test
in
iret
jle
sbb
adc
jbe
fs
jle
dec
daa
iret
fidivs
rcll
lea
sub
mov
out
xlat
lock
sahf
ja
pop
cwtl
jg
inc
sbb
inc
dec
jecxz
or
in
ljmp
xlat
imul
mov
mull
sub
rorl
push
leave
pop
push
inc
mov
scas
out
arpl
cld
fwait
and
icebp
into
pop
push
ljmp
fcmovnu
jbe
outsl
enter
es
int
inc
lcall
pop
jo
xor
mov
nop
ficoms
inc
or
xchg
sub
test
out
fadds
add
mov
testb
push
sub
divb
ljmp
pushf
xor
out
popa
fadds
mov
and
pop
add
push
sbb
jnp
inc
dec
or
mov
mov
push
aad
fiadds
mov
jmp
dec
add
out
push
sbb
aas
sbbb
pop
scas
sub
addl
or
fs
lock
and
inc
pop
push
aam
subl
mov
xor
pop
push
adcl
add
pop
out
push
out
stc
adc
sub
xchg
xchg
nop/reserved
dec
mov
rorb
xchg
mov
lods
insb
xor
call
jnp
imulb
and
pushf
sti
push
mov
andb
mov
adc
sti
pop
and
shlb
orb
int3
push
mov
inc
mov
xchg
insl
mov
aam
pop
pop
xchg
fld
mov
mov
dec
lcall
sbb
xchg
push
scas
ss
mov
aas
int
cwtl
sub
cmp
stos
sbb
clc
sahf
data16
notb
mov
mov
xor
sub
imul
add
popa
adc
and
mov
xor
push
push
int
mov
shrl
pop
and
push
mov
or
pop
dec
dec
les
and
rclb
adc
mov
loope
cmpsb
es
ds
repz
xor
js
je
and
loop
cmpsb
call
fcomps
jbe
mov
enter
mov
adc
adc
dec
movsl
jp
and
add
cmp
ljmp
sub
insb
cmp
add
repz
in
add
sub
xchg
inc
sarb
lret
scas
or
xor
jo
cmp
stos
add
or
or
or
adc
insb
dec
lcall
sbb
xchg
add
or
xor
push
loope
ret
sbb
jns
or
jl
pop
adc
mov
lea
inc
mov
hlt
mov
jae
mov
loope
in
and
add
xor
jne
jge
pop
aam
mov
shlb
aam
pop
fs
popa
sbb
pop
sti
mov
shrl
leave
pop
pop
rcrl
andb
and
enter
xchg
xchg
cmp
mov
movsb
mov
int
cmpsb
decb
jno
ss
cmpsl
xor
xlat
ret
gs
xlat
fdivrs
cmpsl
push
mov
add
mov
pop
push
xchg
push
popf
mov
test
or
dec
and
sub
out
idiv
movaps
xchg
mov
xor
arpl
sbb
cld
repnz
add
mov
aas
ret
jno
loopne
hlt
mov
jns
adc
negl
std
std
aad
xor
das
movsb
scas
cmp
filds
jno
sub
stos
and
int3
popa
xor
les
icebp
mov
and
dec
jge
push
and
rclb
adc
mov
in
outsl
ds
iret
inc
mov
fcmovnbe
mov
fistl
add
jp
dec
out
sbb
fwait
lea
rclb
lods
mov
adc
mov
icebp
sti
fwait
cmp
in
jne
jmp
dec
popf
jl
cmpsb
jle
jecxz
jp
push
cmpsl
fstps
repnz
mov
aas
push
fwait
test
test
lret
jae
adc
pop
sti
mov
mov
add
add
cli
mov
push
or
jle
scas
inc
fdivrl
std
mov
push
bound
mov
outsb
aas
or
in
mov
stc
imul
jl
pmulhuw
or
xchg
xor
scas
daa
xor
icebp
mov
adc
inc
cwtl
jno
mov
xor
jns
or
mov
mov
insb
mov
pop
mov
inc
in
fcompl
lret
das
inc
cltd
sbb
scas
pusha
clc
pop
lock
dec
int3
and
nop
insl
pushl
pop
pushf
ds
into
out
add
cmpsl
jge
add
shll
jmp
cmp
or
into
xor
pop
inc
push
in
ret
fcmovnb
decl
mov
pop
pop
xor
adc
hlt
fidivl
jno
jl
jl
movsl
icebp
lahf
cmpsb
cs
xchg
xchg
repz
push
pop
sti
mov
ret
adc
mov
mov
add
pop
arpl
incl
push
es
mov
sbb
daa
popf
sti
fsubs
xchg
in
out
pop
aaa
sub
mov
insb
dec
dec
push
adc
imul
out
stc
sbb
xor
xor
pop
loop
adc
imul
mov
add
adc
dec
xor
repz
fsubl
or
xchg
leave
cmpsb
lret
mov
sar
addr16
das
hlt
popf
jg
hlt
add
push
inc
push
xchg
mov
lret
sbb
or
mov
xchg
xchg
and
fcomps
cltd
pop
xchg
dec
and
out
adc
testb
into
or
sbb
hlt
mov
push
jmp
dec
mov
lock
pusha
mov
fldt
adc
insb
les
ret
scas
xchg
sbb
add
das
add
jg,pt
insl
cld
or
pop
pop
xor
add
xchg
add
int
fstpl
inc
fmulp
test
and
push
popf
cmp
aas
jnp
in
popa
loop
xchg
or
mov
adc
je
lcall
and
gs
adc
lcall
jne
xchg
cmp
bound
rorb
mov
mov
aad
xlat
lock
pop
xlat
push
or
inc
mov
sbbb
movsl
push
test
dec
aam
lods
cmp
sub
movsl
ror
jno
iret
pop
rcll
or
repnz
sub
mov
fsubrs
les
mov
and
push
push
adc
aas
jle
push
dec
push
pop
arpl
stos
sub
pop
movsb
jne
sahf
push
inc
fwait
xor
pushf
xor
ja
mov
jle
adc
mov
dec
les
in
in
rcrl
outsb
xchg
pop
cwtl
loope
and
cmp
into
fdivl
push
addr16
js
cmpsb
lea
lea
ss
jge
or
pop
nop
dec
and
mov
ljmp
fdivs
jp
not
mov
push
inc
leave
jns
inc
stos
push
arpl
lretw
mov
adc
adc
ljmp
pop
stos
cmp
shr
jbe
fsubs
xchg
cmp
and
test
stos
insb
xchg
loope
lea
lock
cwtl
dec
xor
cwtl
add
test
out
sbb
clc
xchg
mov
popa
divb
popa
scas
loopne
mov
dec
adc
adc
fwait
mov
ja
adc
mov
mov
pop
and
mov
inc
lds
add
or
pop
pop
aad
pushf
push
pop
mull
shlb
xor
push
jmp
pop
repz
add
out
adc
roll
xor
scas
arpl
popa
cli
xchg
imulb
mov
and
cmp
push
cld
sub
insl
pop
mov
dec
mov
sbb
out
push
xchg
cmp
add
ror
mov
xor
in
ud2
imul
scas
cmpsl
or
nop
dec
mov
push
push
dec
in
je
aas
test
test
cmc
out
cltd
mov
roll
sbb
fcom
lds
lret
mov
rsqrtps
mov
xor
xchg
and
mov
movsb
or
push
jae
pop
mov
js
test
mov
int
in
mov
jnp
adc
mov
adc
sbb
push
shrb
ds
push
jno
or
call
pusha
xor
xchg
cs
ljmp
or
aas
mov
roll
jo
jecxz
jge
mov
sbb
sbb
gs
and
adc
or
jp
aas
adc
cmpsl
testb
insl
jo
cmp
negl
nopl
aad
dec
jmp
cmp
inc
cmpsb
mov
pushf
cmpsb
dec
xchg
out
jp
mov
pop
sub
jns
ja
lea
ja
shrb
loopne
and
inc
rclb
pop
inc
push
rcr
sub
mov
fistl
std
inc
ljmp
mov
mov
jle
rorl
int3
gs
cmp
repz
in
lods
shll
push
xor
inc
xor
xchg
pop
iret
int
aaa
dec
stos
in
mov
mov
pop
cmpsl
or
jo
stos
es
sub
push
dec
gs
xchg
cwtl
es
mov
adc
daa
mov
stos
call
out
or
aas
push
fmull
cmp
dec
out
and
ret
add
scas
aaa
clc
fs
adc
test
movsl
subb
mov
sub
cmp
jg
ds
icebp
jo
mov
ljmp
add
clc
cli
mov
rol
pop
popl
mov
loope
in
test
jge
iret
push
mov
adc
lds
loope
push
inc
in
insb
adc
in
xor
pushf
mov
xchg
out
jecxz
dec
sbb
ret
xchg
imul
jle
and
jns
xchg
mov
xchg
fists
mov
gs
inc
add
adc
cmp
add
xchg
rolb
aad
xchg
ret
jns
cwtl
jne
mov
cmc
je
cwtl
mov
pop
out
test
push
xchg
jl
mov
xchg
sti
cmpsl
leave
ljmp
loopne
add
in
jb
testl
mov
mov
ret
add
cmp
ficoms
xchg
or
jge
xor
mov
push
xchg
or
add
js
movsb
fnstenv
in
jae
ss
cmpsl
sbb
inc
rcl
dec
add
sub
mov
cli
jle
fbstp
icebp
mov
xchg
in
fsubl
cmp
xor
prefetch
bound
outsb
aaa
fidivl
xor
mov
mov
lahf
ljmp
and
xor
mov
jnp
movsl
sbbb
cmp
mov
add
jmp
aaa
push
mov
fwait
xchg
sub
jp
loopne
push
out
in
popa
lods
xchg
sbb
test
cmpsb
push
aaa
nop
iret
jp
sub
dec
mov
jmp
mov
fstl
cli
jge
add
jg
sub
lds
pop
test
sbb
imul
sub
cmp
jle
idivb
cwtl
in
imul
xchg
pop
inc
push
inc
in
add
jno
pop
cwtl
inc
fs
icebp
or
adc
xchg
jle
bnd
int
cmpsb
pop
sbbl
inc
adc
mov
mov
xchg
mov
shl
movsb
inc
xor
gs
pop
pop
icebp
xor
lea
loopne
mov
cmp
inc
push
dec
pop
jo
daa
nop
daa
pop
xchg
enter
xor
ja
test
bound
insb
or
lds
push
imul
jecxz
dec
and
fs
and
ds
mov
mov
cmpsb
lds
out
sbb
adc
or
cmpsl
es
call
loop
dec
fdivs
idivb
pop
or
xor
mov
loop
or
dec
cmc
lods
inc
lock
ljmp
push
add
pushf
int3
enter
sbb
xchg
jbe
xorl
mov
sbb
push
cld
mov
repnz
sub
popa
push
in
neg
scas
imul
imul
dec
dec
js
jp
cmp
js
adc
pop
loopne
movsl
cmp
pop
fmuls
out
inc
fisubl
fnstsw
rcl
inc
fists
sbb
or
aad
loopne
sbb
dec
ret
outsb
bound
rcll
push
mov
add
xor
popf
and
lods
xor
faddp
push
fdivl
sti
fisubs
ss
sahf
ret
add
arpl
inc
fsubs
dec
pop
lock
inc
add
push
jmp
test
in
pop
sbb
pop
in
push
and
fcmove
bound
or
xor
ss
lods
nop
mov
mov
sahf
pop
add
mov
pushf
inc
repz
cli
or
adc
daa
push
pop
inc
sbb
icebp
ret
outsb
pusha
js
mov
jnp
xor
jno
inc
insb
mov
push
sbb
sbb
cli
mov
stos
or
inc
push
outsb
mov
xor
cmp
in
stos
xchg
and
fcomps
orl
out
test
dec
in
mov
mov
push
dec
mov
cmp
push
in
jl
shrl
jmp
mov
pushf
sti
and
in
adcl
lahf
cmp
add
push
jmp
push
popf
mov
and
pop
xchg
lds
jno
ds
xchg
jge
inc
xlat
adc
test
test
and
shrb
dec
and
cmp
mov
jl
dec
fistps
in
lret
clc
mov
and
mov
dec
lret
bound
outsb
add
sbb
ret
or
pop
jp
int
or
mov
cli
jecxz
sbbb
ja
mov
xchg
jg
ret
in
mov
lds
outsb
add
mov
xchg
sub
push
mov
xor
hlt
mov
stc
enter
les
dec
cmp
cmp
push
pop
scas
lea
rcrl
cmp
cmp
fs
cmp
repnz
push
push
add
call
fsubr
adcl
jl
iret
or
scas
sub
push
jle
sbb
and
mov
gs
decl
push
mov
fcomps
fisttpll
xchg
push
stos
or
popf
daa
aaa
dec
fdivs
arpl
xchg
lock
test
adc
xchg
out
xchg
enter
jb
push
and
test
mov
in
mov
mov
fnsave
mov
lret
sub
data16
add
lcall
mov
in
and
mov
out
sahf
cmp
shlb
pop
ds
pop
and
sub
sub
xor
das
mov
test
mov
cld
push
mov
movsl
imulb
test
adc
or
mov
mov
and
out
dec
jb
inc
mov
adc
cmpsl
scas
aas
dec
and
lea
arpl
or
addr16
sarb
adcl
lds
ret
das
mov
add
aaa
aas
mov
fidivs
test
roll
jno
add
insb
jg
sbb
mov
jnp
and
test
sbb
push
or
dec
bound
movsb
pop
jae
out
lods
ret
jp
ret
daa
rcrb
xchg
xor
add
cld
xchg
cmpsb
in
jne
loope
mov
sub
push
pop
lock
repnz
repnz
sbb
das
sub
cmc
sub
xor
push
mov
daa
jae
aad
mov
pusha
out
or
push
sub
mov
aaa
mov
stos
mov
cmpsb
cmp
xlat
mov
lea
push
xor
cwtl
pop
aaa
cwtl
andb
xor
bound
or
add
xchg
mov
jmp
mov
vpunpcklqdq
pushf
mov
rorl
lods
popa
add
imul
outsl
mov
jb
mov
and
sbbl
test
int3
in
testb
mov
nop
or
dec
cmp
lret
jle
push
lock
mov
or
sbbb
cmpsl
xchg
clc
pop
jae
lods
or
cmpsl
insl
test
les
mov
cmp
cmpsl
inc
cld
fisttpl
jns
push
cmpsl
jecxz
jle
mov
outsb
push
jae
xor
cvttps2pi
inc
xchg
das
cmpsb
xor
mov
into
sbb
jns
add
adc
xchg
pop
lds
loop
jo,pn
mov
jmp
rorl
or
mov
pop
in
adc
push
inc
or
pop
push
gs
mov
or
dec
jmp
nop
scas
xchg
dec
andl
mov
mov
lret
mov
inc
mov
popf
jg
pop
sbb
lcall
scas
or
das
int3
xchg
into
fdivs
popa
rcrb
or
lahf
hlt
mov
inc
sub
sahf
fs
mov
in
push
pop
or
sub
lods
dec
pop
pop
dec
in
xchg
dec
pop
sbb
pop
shll
in
pop
test
sbb
push
test
dec
loopne
mov
sub
xchg
aaa
dec
enter
ret
clc
push
in
mov
int
jecxz
jmp
sub
inc
test
in
subl
in
push
lcall
popf
inc
lea
lds
sti
cmp
mov
pop
leave
leave
outsl
dec
shlb
inc
sarb
pusha
jnp
dec
testb
xchg
fwait
dec
sub
mov
jg
insl
jle
dec
addr16
fwait
addr16
stos
rol
push
loopne
icebp
int
push
or
sarb
mov
orb
push
add
mov
cs
les
test
adc
andl
cmpsl
iret
movsl
xlat
and
je
add
sub
push
insb
xor
or
push
push
jne
push
push
call
sub
xchg
enter
cmpb
pop
sub
xchg
imul
jns
add
or
outsl
andb
xor
xchg
ds
sbb
push
stc
aad
das
mov
mov
orl
std
sub
lcall
lods
out
inc
push
push
sub
cmp
xor
inc
push
mov
push
int
ljmp
fimull
mov
jo
push
jl
gs
mov
xchg
sub
or
mov
push
out
enter
jno
repnz
stos
pop
lock
xor
shlb
lds
ss
adc
sbb
mov
or
mov
cltd
mov
lahf
jae
sbb
xchg
inc
jns
rcr
xchg
fwait
xor
sbb
mov
jmp
xchg
xchg
rclb
in
xor
sub
xchg
dec
and
cli
or
add
out
rcll
pop
test
and
dec
in
xor
rcrl
rcll
popa
adc
dec
das
cmc
fcmovb
cmp
cmp
es
or
inc
int3
dec
sbb
xor
mov
push
add
cmp
ds
sbb
jno
stos
and
push
gs
xor
inc
mov
push
loopne
mov
fs
mov
rorb
out
test
sbb
add
sbb
sahf
frstor
or
sahf
shrl
shl
adc
mov
movsl
xchg
inc
or
mov
fiaddl
lret
call
push
dec
mov
cmp
roll
jnp
and
adc
xorl
jo
aas
push
dec
aaa
lock
rcrl
lcall
push
loope
loop
je
pop
and
dec
mov
mov
aas
adc
cmpsl
sbbl
mov
addr16
std
leave
loope
adc
les
and
add
sbb
inc
negb
xor
push
mov
dec
adc
xor
pop
je
pop
out
and
rcr
adc
ret
out
or
adc
stos
call
icebp
push
and
jg
xchg
or
mov
repnz
add
std
dec
stos
xchg
add
sbb
push
dec
pop
and
lea
mov
dec
jo
sbb
out
insb
add
rcl
cwtl
popa
sti
fwait
rorb
jmp
in
loopne
mov
out
clc
and
das
sub
pop
or
fwait
data16
test
xor
stos
mov
add
or
gs
rclb
aas
push
aad
lcall
dec
cmp
push
inc
loopne
sbb
repnz
inc
push
mov
jnp
out
mov
fbld
repnz
les
dec
outsl
daa
jnp
xchg
sub
xchg
fnstcw
fwait
mov
movsb
imul
stc
sar
fwait
sub
mov
mov
add
add
push
jne
dec
aaa
xchg
popa
and
xchg
adc
xchg
jl
xchg
xlat
dec
push
mov
clc
std
in
sti
pop
ljmp
movsb
nop
jle
sbb
mov
repnz
lret
stc
xchg
and
mov
mov
cmp
mov
cmp
mov
cmp
lock
dec
add
add
adc
mov
movsl
pop
es
sbb
sahf
mov
cwtl
xor
xor
jae
pop
lods
adcb
sbb
cli
popf
jp
lahf
xorb
dec
ficompl
xor
loopne
ljmp
pusha
mov
shll
scas
popf
inc
test
push
jbe
insl
sbb
insl
cmp
stos
pushf
cwtl
outsl
mov
jbe
popf
cs
lahf
push
mov
popa
in
xchg
mov
test
es
push
test
mov
push
fstpl
xchg
lahf
and
test
js
scas
pop
ret
stos
add
xchg
dec
xchg
sti
fwait
hlt
outsb
add
sbb
ss
cwtl
xchg
inc
push
testl
lret
bound
sbb
cmpsb
lret
inc
into
loopne
les
gs
outsb
xor
leave
repnz
jae
popa
sbb
test
push
cmpsb
out
pop
mov
xor
xchg
or
adc
pop
push
insb
jle
inc
add
in
aaa
pushl
mov
test
ljmp
sub
pop
mov
imull
mov
lcall
cmp
add
mov
mov
push
jbe
lods
mov
pop
arpl
lahf
dec
adc
lds
cmpsl
xorl
xchg
jmp
pusha
shll
lods
add
test
imul
jb
dec
add
mov
cmpsl
mov
pop
out
pop
adc
sar
ret
lods
movl
jnp
cmp
adc
das
jp
or
dec
aad
jg
jp
stos
mov
push
dec
sub
push
repz
jg
pop
leave
xchg
pop
stos
push
popf
sbb
and
and
inc
fxch
out
iret
gs
mov
and
or
push
xchg
arpl
or
sbb
sub
pop
into
mov
rclb
mov
std
inc
inc
add
xchg
ja
dec
cs
dec
out
dec
pop
push
mov
imul
add
or
loope
dec
movl
ret
jo
fdivs
outsb
mov
push
mov
xor
sub
out
repz
dec
pop
mov
loop
push
fndisi(8087
mov
je
bswap
inc
ret
push
push
iret
jne
lea
push
push
aas
jb
pop
and
pop
jno
add
mov
mov
shrl
data16
pusha
pop
aam
jae
and
and
test
data16
fisubrs
lds
mov
dec
pusha
and
hlt
pop
outsb
jno
mov
addr16
inc
lret
imul
push
jae
dec
cmc
adc
push
enter
pop
inc
xor
imul
das
movb
ljmp
pop
push
xor
adc
sub
mov
jecxz
sub
mov
into
mov
iret
jp
dec
and
inc
pop
xor
stos
ljmp
repz
xor
or
pop
push
or
mov
lcall
loopne
jg
jmp
push
xor
and
or
icebp
dec
fstpl
lahf
inc
jmp
sti
sub
inc
add
testb
jnp
in
stos
cmp
xchg
scas
inc
sbb
int3
cmpsb
sbb
mov
inc
sub
pushf
add
adc
adc
pop
mov
nop
dec
cwtl
push
mov
loop
xchg
out
jecxz
fs
mov
out
add
adc
mov
stos
daa
int3
push
enter
movsb
push
in
pusha
daa
dec
ja
cltd
pushf
jo
add
push
insb
mov
roll
sub
xchg
insl
lds
pop
fstpl
jne
dec
dec
nop
fildl
push
dec
lods
testb
push
nop
xchg
pop
shrl
inc
mov
mov
and
pop
cmc
inc
cmp
popa
inc
cmovae
adc
mov
mov
out
loope
aaa
lock
sub
jne
sbb
sbb
popl
daa
ret
lds
jno
cld
out
jbe
xchg
or
test
mov
pop
push
sbb
mov
pop
jnp
sbb
fwait
push
mov
jnp
stos
stos
jle
inc
xor
xor
repz
in
and
mov
stos
dec
rcrl
cs
add
shlb
dec
sarb
jns
and
fiadds
add
ds
scas
and
push
jecxz
popa
xor
test
les
shll
aam
pop
lcall
pop
mov
or
mov
sbb
mov
and
sbb
push
iret
fidivrl
mov
sub
pop
movsl
mov
cmpsl
and
inc
sti
xchg
decl
mov
daa
cmpsb
mov
js
andl
cmp
mov
test
insl
push
jmp
mov
sbb
out
sbb
subl
rcrl
jbe
or
aas
xchg
shl
mov
in
dec
mov
lahf
or
xchg
add
lea
lods
jle
fwait
xor
sbb
sub
cmp
rcl
cli
fwait
aas
sbb
das
mov
cli
and
adc
mov
arpl
daa
and
pusha
stos
inc
cmp
xchg
fmul
in
adc
es
or
fadds
scas
out
bound
mov
mov
js
sbb
nop
mov
xchg
adc
dec
mov
push
mov
imul
xchg
sbb
pop
push
aam
mov
int
jbe
dec
je
sub
addr16
outsl
or
rorl
or
leave
xor
push
push
cltd
data16
push
mov
mov
imul
test
enter
imul
ret
pop
lret
cmp
inc
dec
pop
fldcw
and
rorl
out
enter
mov
int3
jg
jnp
pop
inc
xchg
sbb
push
jg
jg
push
fldcw
fsubr
dec
push
loopne
jl
shl
jns
dec
es
push
sti
cmp
dec
xor
dec
inc
leave
int
insl
loop
stos
addb
sbb
push
push
scas
and
lock
stos
xchg
out
ret
xor
push
jo
aaa
mov
jo
fisubl
mov
cmc
or
or
imul
ret
add
mov
imul
fsts
add
xchg
sub
xorb
sub
popl
xchg
pop
scas
cmp
sub
notb
mov
insb
in
sub
fwait
mov
xor
xchg
lret
pop
xchg
dec
and
push
pop
sub
fildl
dec
test
in
jno
push
ljmp
jno
xor
dec
inc
fdivl
push
jo
mov
add
push
sbb
ret
js
mov
filds
push
pop
sub
les
push
or
xchg
loop
test
mov
sbb
outsb
lea
mov
push
popf
xor
ror
jo
mov
xorb
fisubl
daa
pop
nop
lods
xlat
xor
repz
stos
test
push
pop
fnstenv
lock
imul
cld
clc
sahf
fwait
push
dec
xchg
ss
outsb
dec
add
pop
and
mov
xor
adc
shr
adc
jbe
sub
xchg
in
or
aad
xor
xlat
in
div
mov
fwait
jp
xchg
cwtl
adc
mov
stos
jmp
sbb
mov
in
jne
mov
call
xchg
add
jb
mov
fnsave
pop
or
popa
push
arpl
xchg
ljmp
das
adc
xor
aaa
test
mov
inc
out
in
mov
mov
repnz
inc
pop
bound
outsb
sbb
in
or
add
fwait
sti
rorl
or
xor
adc
stos
test
out
stos
xor
and
lret
adc
jb
and
inc
and
xchg
push
mov
mov
push
xchg
jmp
data16
jl
stos
sub
jbe
push
daa
mov
mov
jle
xor
pop
sub
and
repz
cli
lea
inc
adc
push
push
fnsave
mov
pop
lret
jl
dec
xor
addr16
les
mov
out
mov
inc
pop
cs
mov
add
lret
xor
sub
sub
arpl
call
leave
jmp
and
add
test
cmp
mov
cmp
jge
jge
stos
mov
dec
mov
cmpsb
lock
push
and
mov
cwtl
popa
enter
mov
mov
jl
jns
sbb
mov
lock
adc
jp
mov
fwait
mov
xchg
mov
sbb
pop
in
dec
repz
inc
sbb
push
adc
cmp
pop
push
jb
jge
push
and
jge
enter
test
jecxz
lock
push
ds
xchg
sbb
add
das
test
outsb
push
xchg
cmc
push
mov
mov
mov
repz
mov
sbb
cmpsl
pop
mov
fistpll
add
nop
in
rcll
cmp
push
out
insl
sbb
test
dec
imul
shr
inc
nop
adc
push
jb
in
xchg
outsl
mov
or
fwait
sti
test
dec
mov
repnz
lahf
imul
cld
lea
mov
flds
xor
popa
mov
pop
jo
movsb
aam
outsb
and
icebp
mov
cmp
pslld
dec
cmpsb
push
mov
or
mov
sub
out
pusha
jmp
cmp
test
dec
out
sbb
leave
stos
je
mov
xchg
fistpl
mov
pop
icebp
insl
add
push
mov
xchg
jo
stc
or
jbe
mov
es
cmpsl
push
xchg
cmpsl
pop
cmp
aad
inc
clc
in
xchg
aas
sbb
xchg
test
out
std
sbb
daa
push
mov
xchg
push
out
addr16
mov
addr16
xrelease
test
sub
cmp
xchg
sbb
cltd
jecxz
mov
in
hlt
jne
jmp
sbb
dec
xchg
mov
std
aam
out
insl
lret
addr16
test
fs
sbb
inc
cld
lds
addr16
xchg
mov
rcrb
mov
ds
fdivrl
jl
mov
pusha
jnp
repz
xchg
mov
cli
xchg
adcl
sub
jecxz
or
inc
aam
imul
pusha
movsb
xchg
mov
jne
push
jl
scas
and
gs
xchg
repnz
fildl
mov
test
scas
jno
rorl
xchg
fisttpl
jno
cltd
jno
cwtl
sub
adc
mov
and
push
sub
mov
sub
push
fbstp
cmp
xchg
mov
movsl
iret
int
push
js
sub
cwtl
xor
lret
dec
lods
popa
inc
enter
adc
mov
cmp
or
push
sbb
xchg
pop
mov
cmpb
fwait
pop
jo
outsb
popf
sbb
daa
adcb
dec
jnp
iret
mov
mov
xor
mov
lahf
add
in
aas
cwtl
inc
or
jae
inc
pop
inc
jecxz
out
stc
push
cwtl
loope
aam
lods
testl
std
out
inc
leave
xchg
mulb
movsl
mov
mov
lret
fldcw
out
lret
mov
lds
out
and
push
jns
js
dec
fwait
xor
jle
test
fldl
lcall
cmp
fbstp
push
stos
sub
adc
je
pop
mov
into
mov
shl
in
in
cwtl
push
ss
push
and
in
and
sbb
mov
les
cli
aam
cmpb
cmp
jnp
imul
loope
mul
popf
dec
and
sub
cmp
movsl
out
jecxz
icebp
fidivs
cmp
scas
inc
sti
sbb
rcl
insb
inc
cltd
lods
js
fnsave
leave
das
cli
jae
mov
sbb
pop
push
scas
addb
jb
mov
test
or
test
adc
es
call
ja
pop
lret
or
jge
nop
mov
dec
add
add
push
pop
dec
add
js
inc
jmp
xchg
in
roll
data16
sbb
cmc
or
ss
cmp
sbb
dec
aam
bound
pop
fsubs
ja
les
les
mov
add
ret
ret
scas
out
outsl
and
fs
stc
outsb
test
jp
std
lods
outsl
xor
or
iret
xor
test
dec
cmp
pop
icebp
andb
adc
pop
mov
add
cwtl
das
pop
fstpl
sub
mov
xor
out
mov
push
out
popa
mov
scas
inc
push
aad
cmp
call
out
lock
fwait
addr16
dec
pop
insl
dec
mov
test
mov
jmp
push
push
mov
jo
xor
subl
and
xor
jno
or
fdivs
pop
andl
sets
jns
jmp
add
test
ljmp
push
push
add
xor
je
jbe
dec
fwait
sti
in
lret
xlat
mov
push
mov
mov
sbb
sub
or
addr16
mov
mov
cs
addr16
aam
fcmovne
mov
int3
lret
daa
into
jnp
enter
lret
cld
ja
stc
cmp
sbb
daa
jae
pop
cld
mov
rcll
mov
and
scas
xchg
stos
jmp
fnsave
xlat
outsb
pop
dec
xchg
dec
cmp
adc
fsubr
add
mov
jb
rclb
shrb
loop
or
jmp
incl
sbb
xor
sbb
cmp
mov
mov
sub
sbb
adc
out
repnz
and
push
fdivrl
adc
pop
in
std
xchg
dec
outsl
cmpl
push
in
cmp
pop
insb
filds
adc
push
jne
das
xchg
xchg
rcrl
ja
out
mov
mov
into
push
or
sti
mov
mov
lea
dec
jecxz
add
cmc
mov
rcrb
les
test
outsl
inc
and
in
jmp
cmpl
insb
stos
out
jge
cltd
out
mov
outsl
shll
lahf
ss
mov
adc
lret
rclb
xlat
pop
adc
ficoms
add
loope
sbb
push
xor
mov
mov
jae
call
xor
jne
aaa
xchg
pop
push
scas
rcl
mov
mov
adc
jl
xchg
inc
sbb
movsb
adcb
and
inc
mov
std
xchg
dec
jmp
jo
loopne
flds
xchg
mov
sahf
jb
jae
loope
xchg
xchg
jns
dec
test
xchg
and
fimull
popa
stos
into
cmpsb
jo
movsb
repnz
mov
repnz
imul
repnz
push
test
loopne
mov
jne
and
xchg
mov
mov
outsb
inc
pop
jne
pop
rcl
daa
movsb
or
loop
cmc
push
je
cmp
jnp
sbb
rcl
sarb
push
addr16
push
add
test
push
lock
sub
adc
sti
scas
les
xchg
leave
mov
inc
in
mov
push
mov
or
inc
out
imul
add
sub
cmpsb
or
and
add
test
fisttps
cmp
nop
imul
aas
pop
jecxz
nop
mov
dec
lcall
add
in
lods
mov
sbb
jns
imul
clc
iret
add
push
and
sub
inc
inc
popf
inc
in
fisubs
sub
pop
pop
xor
pop
jmp
outsl
dec
imul
shll
pop
lods
out
pusha
leave
xor
xor
into
push
in
add
rcrb
cmp
pop
in
rorb
daa
or
ret
mov
mov
push
inc
flds
es
clc
push
fwait
mov
xchg
mov
aam
js
push
xlat
outsl
js
stos
inc
jae
jb
or
lret
sub
jno
mov
imul
cmp
inc
lods
inc
sti
sub
shrl
mov
push
outsb
xchg
and
adc
stos
adc
cli
inc
or
mov
ficompl
enter
icebp
mov
inc
fists
sub
fucom
pop
lret
xchg
inc
xchg
scas
popf
je
out
mov
and
push
cwtl
dec
jns
clc
push
movsl
sbb
dec
repnz
sub
out
cmp
or
cmp
mov
jnp
movsl
loope
fucom
jnp
xor
enter
sub
xor
arpl
jg
scas
push
or
dec
xor
lock
xchg
insb
notl
test
cmc
ret
mov
shrd
in
cmp
mov
loope
outsb
jl
out
repnz
cld
inc
xchg
jecxz
pop
loope
inc
xlat
xchg
packuswb
rolb
mov
pop
aas
in
call
mov
aam
gs
pushl
mov
mov
popa
fld1
mov
mov
stos
jne
loope
leave
inc
push
cmpsb
sub
cli
mov
aad
mov
idiv
aaa
scas
or
lock
sub
loopne
pop
add
pop
mov
add
call
shl
cmpsl
cmp
pop
lret
jb
mov
addr16
push
addr16
ljmp
push
inc
or
xchg
dec
mov
pop
in
mov
pusha
notl
std
add
scas
cmpsl
icebp
insb
adc
es
pop
xchg
shl
in
pushf
cmp
in
jmp
iret
or
sub
rcrl
subb
movsl
hlt
jle
repnz
jg
sub
sub
shl
cmp
lea
push
cltd
sub
cmp
mov
mov
push
rcll
or
sahf
orl
jmp
iret
mov
iret
and
and
shll
addr16
fnsave
jl,pn
loope
fwait
inc
mov
movsl
movsl
ss
test
enter
gs
xchg
xor
mov
test
sahf
test
xchg
mov
inc
lcall
and
xchg
and
cwtl
popf
jg
dec
mov
rcll
fdivr
xor
push
push
add
jne
mov
jno
lods
sub
aaa
std
daa
mov
adc
xchg
sbb
xchg
or
daa
mov
mov
cmpsl
xchg
fists
push
into
fidivl
imul
sub
int
dec
dec
hlt
push
call
xor
sbb
enter
cmp
out
ja
fimull
or
jns
mov
sbb
repz
shlb
inc
mov
aam
out
rcll
adc
pop
adcb
int3
xor
xchg
mov
insl
push
sub
mov
stos
in
or
pop
js
fwait
dec
inc
mov
out
arpl
cmp
dec
pop
xchg
je
xor
cmp
or
mov
add
out
das
inc
mov
sarb
bound
mov
movsl
rol
push
xchg
scas
call
inc
imul
fsubrs
addr16
and
mov
add
fdivrl
pop
mov
stos
inc
add
mov
push
inc
ret
mov
sbb
ljmp
jle
aaa
arpl
fimuls
testl
or
mov
sbb
or
adc
movsb
xchg
in
pop
cmp
inc
jnp
mull
hlt
mov
push
mov
dec
inc
push
ret
jnp
pushf
sub
cmp
outsb
loop
out
jnp
or
aad
inc
stos
jmp
xchg
and
pop
daa
ficompl
lea
mov
movmskps
movsl
in
fnsave
push
sbb
adc
push
inc
xlat
loopne
popa
xor
mov
mov
add
add
mov
inc
call
into
les
incb
stc
sbbb
add
xor
mov
cld
add
or
mov
and
outsb
add
ja
lea
lds
hlt
adc
mov
loop
add
sbb
dec
out
outsb
popf
outsb
mov
pop
cmpsl
rcrl
mov
cmpsb
push
leave
movsl
sbb
adc
pop
push
xchg
mov
lcall
scas
stc
pop
cli
push
or
imull
imull
xor
enter
pushf
pop
cmp
test
ljmp
pop
imul
cmc
pop
push
ss
jns
pusha
sarb
stc
push
cmp
notb
or
lret
dec
frstor
into
push
hlt
aad
lods
pop
pop
dec
xor
hlt
pop
loop
fdiv
mov
out
dec
add
les
std
pop
or
and
fsts
lcall
sbb
xchg
es
ret
out
les
ffree
jbe
repz
psubw
out
pop
mov
lret
in
dec
xchg
sbb
insl
inc
mov
iret
sub
or
das
cmp
adc
nop
cld
fsubl
fbstp
gs
mov
cmpsl
cmp
adc
push
sti
dec
push
fs
imul
ret
and
subb
adc
jle
sub
push
inc
clc
lahf
fnstcw
push
cli
or
ficoml
es
repz
mov
mov
sti
inc
movsb
adc
dec
daa
mov
xor
xchg
xor
cld
sbb
cltd
adc
xlat
sbb
call
pushf
bound
hlt
jb
daa
and
xlat
dec
nop
mov
clc
adc
ret
lahf
jl
xor
dec
push
test
xchg
jg
sbb
incb
sbbl
shlb
ja
test
out
out
mov
aad
add
push
push
ds
in
dec
js
push
push
pop
adc
mov
xchg
and
sbb
pop
dec
movsb
ljmp
lahf
cld
xchg
stos
and
inc
mov
mov
fnop
sub
pop
mov
or
insb
ret
daa
jp
lea
jle
jno
push
push
fs
ljmp
mov
fcmovnb
shl
arpl
push
out
sti
outsb
jmp
jg
fnstenv
jo
ficoms
push
dec
test
add
sbb
fimull
and
notl
insl
mov
sub
mov
pop
adc
pop
push
and
adc
jmp
cwtl
repnz
ja
imulb
addr16
es
imul
test
ja
xchg
push
inc
cwtl
mov
fisubrl
cld
xchg
in
add
movl
sub
mov
mov
adc
sub
sub
loop
insb
xlat
sbb
mov
jecxz
pop
shr
dec
mov
mov
pop
cmp
fistpll
fucomi
xchg
push
dec
std
mov
js
cmpsb
inc
shlb
jecxz
scas
jp
mov
fwait
jae
mov
and
cmp
adc
push
stos
leave
out
cmp
inc
cmc
xor
sbb
repnz
mov
mov
jmp
mov
push
jne
outsl
xchg
adc
or
mov
shrl
mov
pop
pusha
ljmp
mov
call
mov
pop
cmp
sub
jbe
push
and
pop
mov
dec
pusha
or
adcb
int3
jnp
or
jle
xchg
pop
xchg
push
sub
int3
fwait
bound
and
mov
movsl
ljmp
mov
fdivp
mov
mov
push
ds
mov
inc
arpl
add
xor
cmp
inc
sbb
mov
mov
jne
inc
mov
xchg
pop
jnp
xchg
imul
adc
bound
jo
mov
sub
fcoms
repnz
jne
mov
test
inc
leave
fs
pushf
cli
mov
or
push
push
mov
divl
inc
fld
add
stos
dec
shr
inc
lea
lcall
cmp
fdivs
or
sarl
std
xchg
cmp
mov
add
test
push
mov
mov
adc
fcompl
mov
push
dec
das
jg
insb
das
vandps
sub
pop
repnz
jns
xor
add
lods
ret
in
mov
add
sahf
dec
aas
cmpsl
jle
ficompl
mov
cltd
stos
pop
xchg
cld
call
std
jmp
test
adc
sub
gs
idivb
popa
push
ja
adc
std
out
add
cli
mov
lahf
test
in
cmp
cmp
loop
cli
flds
gs
jb
fbstp
mov
adc
add
cmp
dec
rcl
push
mov
fisttps
fisubl
push
and
add
lea
jg
lea
repnz
push
fs
cmp
div
dec
mov
lods
add
into
lock
ja
clc
enter
jg
pop
or
cmp
icebp
test
adc
sbb
add
sbb
lods
faddl
dec
adc
inc
stc
inc
sbb
cmp
lcall
dec
cmp
pop
les
out
mov
daa
loop
sbb
sub
fdivrl
sbb
push
insb
mov
in
jmp
outsl
cmp
mov
jns
and
pop
stos
push
pop
jno
cmpsb
lret
stos
call
and
scas
sbb
xchg
repnz
ficoml
out
sbb
ss
xor
xlat
xchg
leave
mov
sbb
xchg
je
fs
jns
lods
mov
es
outsl
mov
jp
aas
pop
cmp
sub
xor
cmp
popf
sub
inc
popa
sti
inc
push
jmp
jp
mov
in
or
stos
cmpsb
sub
insl
bound
xor
nop
sub
push
das
jae
frstor
ret
sbb
aad
loop
jge
scas
lahf
jb
stos
or
popa
fnsave
push
test
mov
iret
leave
enterw
xor
stos
mov
dec
adc
fnstenv
pop
adc
aas
or
lods
or
clc
cmp
mov
pop
loopne
dec
sub
or
mov
mov
add
push
es
or
mov
pop
fldenv
jle
push
jmp
xor
aas
imul
mov
ds
ret
jle
test
js
in
jmp
inc
lret
inc
pop
lret
out
sbb
lea
pop
or
mov
add
add
push
gs
jb
jno
adc
cli
pop
mov
adc
int3
mov
add
es
dec
loopne
xchg
out
test
jb
xchg
movsb
in
lcall
xor
jne
in
pop
mov
sub
sub
pop
pop
xchg
mov
add
push
push
jle
nop
bound
jae
sbb
jge
aas
xor
xchg
mov
dec
ret
ret
mov
repz
or
mov
out
loopne
inc
and
outsb
fwait
mov
adc
or
pop
mov
lods
pusha
or
jne
pushw
ja
loope
stos
inc
pop
push
xlat
mov
adc
cmc
icebp
andl
mov
pop
sub
push
inc
push
pusha
push
cli
cld
outsl
test
mov
cs
and
aaa
xor
mov
out
mov
or
iret
cmp
add
es
pop
stc
sub
aam
cmp
jg
in
mov
movsl
leave
inc
iret
mov
mov
jno
and
fsubrs
test
test
adc
xlat
xlat
adc
pop
cmc
scas
ljmp
sbb
stos
cmp
inc
push
out
pop
sbbb
mov
imul
out
lods
and
movsl
cli
ss
aaa
shrb
clc
xlat
sbb
hlt
lds
push
outsl
mull
shll
inc
clc
adc
adc
mov
je
or
cs
push
sub
sub
xchg
popf
repz
mov
in
cmp
adc
xor
dec
insb
pop
xor
imul
jecxz
nop
cli
outsb
inc
inc
mov
and
test
or
ret
push
xor
dec
int
test
pop
inc
int
or
mov
inc
sub
popf
pushl
push
shrl
mov
aas
daa
enter
xchg
cli
push
mov
xchg
xor
push
fcoms
test
fiadds
sub
mov
dec
outsl
loop
mov
xor
out
rsqrtps
mov
fldl
push
gs
jb
mov
push
test
rcrb
iret
mov
mov
out
enter
aad
es
das
mov
push
add
inc
mov
sub
hlt
sub
sahf
aam
adc
or
pop
push
stos
lea
or
sahf
pop
mov
testb
nop
adc
mov
cmp
outsb
add
add
adc
mov
daa
arpl
gs
jns
cltd
push
ja
mov
xchg
movsl
xchg
jno
enter
jb
mov
jle
scas
mov
cltd
ja
cmpsl
jl
inc
pop
movsb
out
push
or
cmp
and
jecxz
lret
shrb
adcl
shll
jnp
in
shll
mov
mov
dec
push
cli
adc
sarb
and
or
orb
or
popf
xchg
addr16
sarb
mov
and
lock
pop
mov
popa
cmp
scas
in
push
and
inc
and
cmp
rcl
les
dec
pop
push
dec
aam
jp
sbb
cmpsb
addr16
inc
out
movsl
pop
cmp
roll
or
cltd
mov
xor
aam
int
and
or
cli
shrb
mov
gs
divb
and
test
sub
rol
lods
movsl
test
mov
pop
cmpl
cmp
mov
add
imul
repz
lods
pop
sub
add
je
push
insb
inc
psubb
test
xor
addl
in
fistps
in
inc
add
mov
push
aas
ret
std
pop
jmp
push
ja
adc
test
pop
cmc
jle
push
fstpl
push
call
sub
out
cmp
push
cmpsb
sarb
push
push
mov
mov
sti
mov
xor
mov
gs
mov
inc
in
pop
es
rcl
shlb
rclb
push
xchg
and
pop
aaa
repz
stc
and
outsl
inc
dec
arpl
in
addl
add
int
gs
or
insb
xor
mov
cmp
ss
subl
je
push
pop
andb
call
or
jecxz
std
xchg
out
call
sbb
sbb
cli
xchg
imul
add
mov
xor
ret
add
test
pop
sub
fisttpll
sbb
in
push
jne
push
mov
sbb
adc
xchg
xchg
in
insb
xchg
repnz
lea
xchg
lcall
repz
dec
ss
arpl
mov
ss
sub
je
mulb
ret
std
out
test
adcb
rol
dec
xor
fwait
inc
jg
lock
push
mov
jecxz
cltd
outsb
add
loopne
mov
cmc
mov
inc
sbb
scas
mov
xor
adc
sbb
inc
les
popa
cmp
aad
out
jno
rol
imul
push
sub
or
ret
add
test
fmul
andl
aaa
sub
rclb
ret
cld
push
mov
popf
push
in
rorb
xor
in
sti
xchg
movsl
imull
aam
cmp
mov
in
pop
mov
popa
cmp
stos
inc
pop
fcompl
ret
notb
inc
aas
ja
inc
push
push
dec
mov
add
sbb
in
xchg
out
dec
js
int3
outsl
call
int3
lret
test
mov
and
mov
mov
out
inc
iret
ret
inc
in
daa
mov
sub
xor
dec
and
push
addl
xor
scas
dec
pop
lahf
push
fsubrl
cmp
cs
sub
push
or
mov
pop
dec
push
jnp
shlb
notb
and
pushf
mull
jmp
xor
bound
out
lahf
js
mov
stos
cwtl
jae
mov
fidivs
sub
mov
add
cli
cmp
sbb
fwait
test
cltd
inc
mov
je
sti
pop
push
into
push
jmp
loop
ds
stos
mov
out
dec
jecxz
mov
inc
repz
in
in
sub
jge
push
mov
push
shrl
xor
sti
imul
xchg
mov
lret
in
pusha
mov
sti
test
mov
call
jns
xchg
and
jecxz
lods
mov
fnstcw
push
adc
jecxz
sub
xchg
into
sub
jne
insb
xchg
cltd
cltd
xchg
mov
rol
pop
lods
adc
jecxz
out
ds
hlt
cmp
stos
and
xchg
les
or
cmp
adc
aam
inc
jbe
cmp
shll
add
lea
pop
lods
bound
fdivrl
pminub
fisubrs
mov
movsl
mov
es
mov
pop
xchg
push
xchg
icebp
test
hlt
daa
sub
testl
mov
jbe
or
add
popf
mov
fcmovnu
jb
in
xchg
sti
push
imul
inc
lock
imull
andb
pop
mov
push
sub
test
dec
push
pop
lds
inc
scas
cmp
sub
ja
dec
fnstcw
or
mov
mov
inc
jle
fwait
idivb
idivl
lea
cmp
mov
in
fadd
jp
push
lret
rolb
xchg
cwtl
mov
jp
mov
into
fsubr
call
pop
repnz
fnsave
jo
xorb
mov
je
inc
push
lret
push
and
fdivrs
lret
fists
outsb
mov
leave
fstps
fists
add
xlat
repz
shrl
xor
dec
out
cltd
int3
fadd
xchg
test
adc
xor
push
pop
mov
inc
in
clc
ret
cmp
xlat
cmp
int
iret
mov
cmpsl
subl
orl
mov
je
daa
push
xchg
data16
jae
fldl
and
xor
pop
inc
loopne
loope
outsl
mov
xchg
lock
int3
pop
pop
lcall
nop
sti
mov
lods
scas
xchg
int
push
jmp
cmp
icebp
shlb
add
mov
stos
lods
sbbl
fstl
ficompl
push
out
mov
and
shrb
mov
lds
jg
ret
lock
sub
add
push
in
popf
adc
aaa
out
xchg
inc
pushf
and
call
in
mov
xchg
adc
mov
push
adc
cld
pop
roll
mov
repz
test
in
xchg
jno
lods
push
mov
mov
cli
lfs
arpl
mov
push
mov
inc
xor
push
mov
jecxz
arpl
xor
faddl
bound
xor
xor
cmpsl
dec
mov
add
xor
push
sub
dec
mov
sub
imul
adc
fcomip
adc
or
xchg
pop
inc
fbstp
xlat
ss
test
sbb
in
jle
mov
pop
mov
lret
xor
jp
aas
outsb
adc
je
push
jns
adc
adc
data16
mov
cmpsl
leave
jmp
decl
and
xchg
sub
adc
or
and
sti
fidivs
push
sbb
dec
int
cli
jns
in
pop
adc
nop
push
pushf
and
loope
jns
jmp
addr16
es
cmpl
jae
pushf
leave
inc
jae
dec
sub
loope
sub
repnz
mov
push
sarl
dec
jl
jno
pop
cmp
outsb
push
fucomip
dec
dec
icebp
jne
lea
int3
push
jbe
push
xor
sub
sahf
mov
in
mov
add
mov
inc
mov
das
xchg
pop
push
outsb
lock
fs
push
fucomi
jae
icebp
cmp
movsl
das
lds
inc
fldl2t
jl
rcl
mov
mulb
mov
iret
xchg
fidivrs
xlat
pop
mov
stc
aas
data16
scas
cmp
sahf
dec
mov
push
lods
jl
repz
aaa
push
mov
mov
xchg
or
mov
pop
or
dec
stc
dec
adcl
int3
jmp
jbe
sahf
push
in
iret
ret
es
cmp
repnz
fstpt
loopne
xchg
das
ffree
push
stos
jg
mov
and
adc
daa
in
vpsrld
and
lcall
sub
dec
fsubr
push
pop
mov
xchg
fisubs
mov
loop
nop
add
fnstenv
outsl
loop
add
jns
push
push
xor
pop
inc
fnstcw
jecxz
pop
jmp
mov
das
ss
pop
and
push
sub
add
call
push
jmp
jns
ret
rorb
or
push
les
cmp
xor
lds
xchg
addr16
jecxz
push
loop
lret
xor
es
test
jmp
jmp
xchg
adcb
mov
inc
pop
cli
jne
mov
ret
outsl
fcoml
lods
cmpl
fldcw
cmpsb
loopne
roll
inc
adc
adc
lea
loop
test
push
or
inc
stos
pushf
dec
sub
inc
popa
push
lahf
es
xchg
mov
out
ret
ret
insl
cmp
sarb
mov
push
imul
mov
cmp
or
adc
ja
inc
or
pop
jg
nop
adc
scas
je
addb
fistps
xor
push
mov
stos
arpl
fidivrs
and
inc
pop
sub
sub
mov
inc
imul
testb
in
pxor
popf
pop
xor
jmp
cmpsb
jnp
xlat
and
push
jge
jp
or
fistpl
sub
mov
jmp
push
fidivl
and
inc
cli
rcr
inc
mov
ja
pop
mov
cld
test
aaa
adc
pop
push
mov
pop
out
xchg
ds
push
fdivs
out
xor
rol
jg
idivb
out
dec
and
or
xor
mov
rclb
xchg
imul
sbb
les
inc
adc
stc
jo
test
push
sub
or
and
mov
lahf
add
dec
and
push
fidivl
mov
call
xor
xchg
test
xchg
push
mov
lock
dec
sbb
mov
jmp
adc
mov
ret
int
cmp
dec
mov
sub
xor
pop
pop
jecxz
adc
ds
push
cmpsl
les
sbb
sbb
sbbl
gs
xor
cmpsl
pusha
cmc
jb
cmp
out
add
test
mov
and
mov
loop
lods
adc
push
jl
cmp
add
and
frstor
cli
adc
and
push
push
cmc
mov
sti
push
ss
push
jmp
and
jmp
and
ljmp
incl
xchg
or
mov
pop
sbb
bound
fbstp
xchg
and
call
js
xor
dec
add
xor
test
subb
jo
addl
popf
repnz
test
and
push
outsl
jae
push
pop
and
xchg
in
popf
pop
cli
jo
iret
xor
pusha
adc
lods
push
inc
cmc
rcll
cmp
sbb
lcall
or
ja
rcrb
mov
mov
mov
adc
dec
push
pop
jge
xchg
cmp
lds
mov
loop
inc
daa
leave
jmp
dec
in
pop
imul
inc
lret
and
adc
pand
iret
xchg
jae
or
nop
sbb
aam
inc
adc
loopne
testb
out
push
push
jl
jne
and
inc
mov
pushf
outsl
out
add
or
rorl
sbb
or
bound
mov
sahf
lds
xchg
fadds
and
inc
or
scas
enter
mov
stc
jge
les
rolb
xchg
sti
push
addr16
dec
mov
ret
out
lea
add
mov
inc
adc
icebp
add
push
pop
lret
sbb
outsl
fnstenv
push
push
push
inc
mov
pop
addr16
popf
jo
mov
add
fstps
sub
mov
inc
sbb
and
jmp
adcl
or
bound
cmpxchg
push
mov
cmp
test
push
outsl
sbbb
lods
mov
jae
jle
adc
adc
pop
mov
jmp
mov
lahf
stos
add
xchg
inc
add
in
fwait
mov
xchg
aad
rol
lahf
stos
fldenv
leave
fldenv
into
cmp
mov
les
xchg
jbe
outsl
cli
or
push
mov
inc
aaa
sub
sub
int3
mov
add
repnz
xchg
jp
mov
mov
cs
pop
pusha
scas
pushf
or
mov
dec
lods
dec
mov
mov
insl
and
imul
mov
lock
push
xchg
sub
or
leave
ret
inc
ret
fs
lods
and
ret
outsb
jl
adc
ljmp
das
pop
cmp
idivl
xchg
xor
add
pop
mov
test
dec
jne
fwait
divb
subl
jg,pn
repnz
in
test
adc
mov
add
add
add
ret
mov
lods
inc
adc
add
xor
mov
int
ljmp
pop
mov
pop
cmp
mov
jbe
cwtl
add
popf
jne
xchg
data16
xor
repz
test
jmp
push
sbb
inc
or
addr16
pop
addr16
insb
stos
xchg
stos
repnz
cmp
andb
rcll
out
add
sub
jle
jne
mov
adc
sahf
jl
or
outsl
mov
int
in
mov
repnz
xchg
jns
jmp
aam
jg
call
repz
add
mov
in
sub
mov
movsb
pop
test
and
lcall
fsts
xor
cld
xchg
adc
mov
pop
or
bound
adc
or
std
xchg
loopne
lock
mov
adc
add
add
cmp
test
std
rorl
icebp
jg
bound
les
adc
not
int
mov
cmpsb
pop
mov
pop
sub
push
sarb
insb
cmpsb
pusha
cmp
or
shl
nop
sbb
sahf
jno
push
adcb
inc
inc
xchg
dec
ss
lods
push
mov
sbb
lahf
jle
sub
in
jge
pop
mov
mov
pop
cltd
jl
shll
sbb
or
xor
lock
sub
add
dec
jnp
mov
jge
insb
inc
loopne
or
lea
in
jne
imul
iret
and
xorl
fidivrl
lcall
or
dec
mov
dec
loopne
popf
or
cmp
xor
lea
call
jecxz
std
jnp
xor
mov
mov
mov
pusha
loopne
outsb
lahf
pop
mov
pop
mov
sbbl
jg
jne
mov
insb
cmp
inc
jb
out
inc
mov
nop
mov
rorb
fdivs
or
sahf
in
inc
mov
pop
lret
push
jo
push
push
adc
pop
cmp
in
dec
jmp
mov
leave
and
orl
push
mov
test
cmp
ret
push
pop
je
or
add
mov
mov
sahf
dec
movsb
mov
lahf
scas
or
adc
pop
xor
push
and
repz
or
scas
ljmp
in
mov
jge
into
loopne
push
dec
outsl
lods
loopne
mov
pop
inc
arpl
nop
dec
lock
scas
aas
das
rolb
imul
add
adc
inc
cs
push
jo
add
cmpb
call
sub
cmp
ret
xchg
mov
and
push
movsb
sub
adc
repnz
pop
icebp
into
adc
nop
jbe
loope
jle
add
jne
xor
repnz
push
nop
ret
jno
outsw
idivb
push
popa
clc
dec
icebp
sub
shrl
pop
scas
insl
sbb
or
cltd
push
pop
xor
mov
into
jmp
fnstenv
mov
push
cmpsb
imul
mov
sbb
push
sti
adc
mov
je
jmp
inc
lret
cld
add
aam
popa
jns
mov
pop
mov
inc
jecxz
sbb
mov
xchg
sub
push
dec
cltd
adc
inc
iret
sub
scas
into
movsb
push
jmp
jl
incb
fimuls
mov
sub
pop
xor
dec
push
pop
mov
pop
pop
das
add
int3
mov
rolb
jp
pop
jb
daa
movsb
cmp
paddw
js
xchg
cmp
shr
mov
sbb
ljmp
gs
sti
mov
cld
ja
adc
sbb
xor
mov
xchg
jne
jmp
scas
or
inc
leave
xchg
ja
pop
in
outsl
fbld
repz
mov
in
data16
mov
mov
cltd
pop
bound
jno
xchg
scas
push
int3
and
mov
sub
xor
and
lods
es
sub
popa
sahf
and
pop
addr16
orb
or
xor
push
mov
iret
xchg
xor
mov
mov
call
adc
push
aam
cli
inc
jno
into
mov
ret
jmp
insb
cltd
jne
dec
xchg
clc
cwtl
adc
or
jae
loopne
or
mov
adc
ljmp
sahf
lea
out
imulb
dec
pop
outsb
repz
out
and
and
mov
test
pop
add
cmc
adcb
xor
mov
or
or
mov
adc
mov
cmp
sarb
jg
push
sbb
xchg
and
xor
bound
pop
icebp
flds
mov
mov
xor
cmp
inc
mov
cmp
pop
fs
fmull
add
push
mov
sbb
sbb
xchg
outsb
add
rorl
mov
pop
add
xor
and
es
es
and
lods
mov
mov
roll
cs
jg
stc
pop
jg
push
je
jl
xor
mov
cwtl
aas
add
insl
lcall
mulb
jnp
jbe
fdivrl
testl
cmpsl
aam
or
pop
out
sub
sub
mov
insb
sahf
lods
test
fbstp
lret
bound
sub
sub
mov
icebp
lods
push
sbb
adc
sbb
mov
jmp
lret
loopne
rorb
pop
aad
mov
add
scas
fidivrs
adc
mov
and
push
push
xchg
out
je
mov
insl
lds
insl
mov
mov
in
daa
cmp
fcmovnbe
push
jne
or
jbe
mov
pop
je
dec
mov
push
mov
cli
das
jae
lahf
cmp
mov
out
or
mov
pop
sbb
sti
or
inc
pop
enter
cltd
or
mov
rol
or
xor
stos
bound
inc
cmpsb
insb
aaa
test
in
adcl
ds
out
out
aam
imul
aad
out
les
fistl
shlb
pusha
test
cwtl
lods
sbb
fwait
bound
pop
addr16
aas
popa
and
mov
xor
fld
and
and
lret
test
cwtl
fistpl
mov
mov
inc
add
rcll
sub
inc
lods
js
push
jb
xor
popf
js
sarl
lcall
imulb
lcall
lcall
clc
cmp
in
push
lods
xor
bound
fwait
outsb
mov
sbb
imul
std
jne
int3
push
andb
popa
enter
in
loopne
mov
imul
jne
and
mov
hlt
addr16
jo
aas
push
loop
fistpll
imul
or
mov
sbb
loopne
xchg
dec
sub
sarl
adc
mov
es
jl
inc
out
lcall
cmpsl
or
sbb
or
fdivrs
es
insb
mov
mov
jle
and
inc
add
jns
out
mov
dec
loopne
dec
test
insl
xchg
jb
pushf
add
jmp
into
xchg
sub
rcl
jbe
pop
test
cltd
mov
adc
and
push
call
and
outsb
adc
inc
dec
cld
xchg
fsubs
pop
inc
cmp
fwait
xchg
cmpsl
scas
cmpsb
mov
movsl
jg
clc
int
mov
int
fwait
cmpsb
fidivrs
xchg
daa
lret
imul
mov
roll
stos
aaa
sub
and
sbb
inc
or
nop
mov
fwait
ds
mov
jbe
or
fisubs
test
mov
cltd
lds
into
sub
or
enter
cmpl
jle
fsubr
sub
or
mov
cmpsl
leave
ljmp
dec
inc
adc
sub
outsb
inc
mov
fdivrl
pop
fidivrs
rcll
push
mov
dec
nop
push
fnstcw
fnstenv
or
icebp
sti
xor
js
cmp
mov
sbb
sarl
add
stos
sub
push
jno
sti
sbb
bswap
ss
adc
scas
imul
mov
jo
pop
pop
int
add
lds
cmpsb
lock
xchg
stos
test
das
clc
jb
or
jp
addr16
test
or
dec
mov
insb
inc
mov
push
movsl
in
sub
pop
aas
sbb
jecxz
rclb
or
or
cld
stos
mov
dec
test
xor
sahf
addb
cmc
fdivrl
movsb
imul
pop
int
lds
sub
popa
cmp
sarb
scas
inc
mov
cli
stos
xchg
stos
fdivl
insb
jl
and
js
add
fcompl
push
ret
jmp
dec
lods
adc
out
jecxz,pn
xchg
loopne
sub
inc
pop
lahf
xor
sbb
outsl
xchg
cltd
pusha
lahf
dec
negb
out
xchg
mov
cs
out
fdivrl
jnp
out
and
int3
fdivrs
insb
call
into
xor
outsb
clc
xchg
lock
xchg
sub
adc
ss
cmp
xchg
and
add
nop
xchg
jp
stc
and
xchg
adc
daa
outsl
addr16
imul
mov
cltd
or
lods
jbe
les
js
test
xchg
jne
add
cmp
ds
popf
sub
pusha
ds
in
int
in
jle
mov
outsl
sbb
adc
and
and
sti
loope,pt
daa
pop
mov
and
nop
movsl
out
aaa
xlat
or
ret
push
and
stc
or
pop
fistl
mov
cltd
lcall
sbb
push
inc
or
or
loop
adc
jp
and
mov
out
pop
out
sub
and
adc
push
or
xor
std
and
xchg
sub
inc
js
fisubl
mov
adc
imul
mov
call
or
aaa
add
dec
mov
les
lds
dec
jno
mov
loop
adc
mov
or
mov
addr16
sub
mov
pop
adc
ja
sub
addr16
sub
dec
mov
idivl
or
je
stc
mov
xchg
and
xchg
sbb
jl
lret
push
in
inc
rorb
push
lods
insl
sub
push
lods
pop
jae
shrb
lea
jg
xchg
mov
addr16
inc
mov
push
mov
fildl
lcall
and
arpl
sbb
in
push
in
fistpl
mov
or
inc
leave
sbb
inc
push
pop
xchg
dec
hlt
popf
jp
inc
insb
test
dec
loopne
call
lods
mov
int
mov
push
xchg
dec
sbb
jne
xor
push
and
std
ja
xor
sbb
or
lock
lds
cwtl
ja
cmpsb
stos
pop
scas
fistpll
cli
pop
stos
xor
stc
cmp
mov
cli
mov
dec
dec
dec
pop
dec
pop
mov
mov
leave
mov
sets
in
mov
lea
fisubrs
pop
pop
arpl
and
sub
inc
call
in
int3
arpl
adc
xor
ja
rclb
jb
xchg
stos
sahf
sbb
iret
mov
pop
in
push
pop
mov
xor
cmpsb
scas
lock
or
lea
movsb
mov
call
or
sbb
fs
cmp
test
mov
push
push
jl
mov
movsb
sub
or
mov
pop
sbb
rorb
pop
xchg
pop
lock
insl
pop
mov
or
cld
dec
mov
add
or
dec
nop
sbbb
scas
xchg
rcrl
lea
push
aaa
out
xchg
leave
mov
cld
shrb
ret
xchg
pop
out
push
push
cli
push
and
pop
push
jne
and
xor
mov
inc
lock
mov
xchg
addl
and
lcall
into
adc
lret
xor
xchg
lods
inc
inc
xchg
aas
lods
inc
jno
xchg
sbb
hlt
iret
adcb
jmp
in
je
mov
add
inc
sbb
xlat
fadds
xchg
sbb
in
xchg
inc
jbe
shll
repnz
jb
imul
cmp
cmp
xchg
clc
xchg
in
ss
cmp
sbb
and
jb
repz
loop
push
dec
leave
jmp
lods
dec
int
xor
stos
movsb
jp
push
mov
pop
inc
fwait
cs
sbb
iret
pop
pop
je
mov
sub
xchg
gs
scas
pop
jmp
inc
data16
ror
sub
inc
sub
mov
popa
dec
jae
lds
fsubrs
mul
xchg
add
push
mov
xor
lock
xor
and
repnz
insl
pushf
pop
scas
test
pop
mov
test
jp
mov
mov
aad
das
into
cli
push
fwait
dec
mov
push
sahf
repz
push
inc
mov
add
mov
jnp
int3
fsubs
hlt
je
mov
and
pop
pop
out
mov
mov
cmpsl
stos
mov
add
xor
mov
mov
les
fs
mov
sub
dec
jmp
push
in
test
mov
cld
hlt
cmp
lret
sub
cmp
mov
sbb
aam
and
cwtl
sub
aad
out
push
sub
and
out
mov
int3
rorl
lods
and
push
stos
out
repnz
movsw
iret
mov
sub
rclb
dec
or
xchg
loop
lock
lds
lret
addb
xor
icebp
add
aas
sub
pop
and
stos
and
iret
xchg
leave
int
mov
aas
popf
xchg
mov
pushf
push
outsl
adc
popa
mov
lock
mov
adc
cmpsb
arpl
je
jae
testl
and
fwait
jne
roll
call
into
and
out
mov
and
inc
pop
ficomps
sub
iret
inc
fdivs
incb
lahf
pushw
dec
jecxz
pop
mov
into
mov
fstl
sub
push
out
sub
lfs
daa
jnp
mov
mov
andb
int3
sahf
fidivrl
or
dec
jo
or
fiaddl
mov
fwait
cli
jg
cmp
test
fsubl
or
push
movsb
push
in
xlat
xor
xchg
movsl
je
scas
lds
xchg
adc
movsb
repnz
in
xchg
xor
xchg
sub
cld
ds
jmp
cmp
sub
repnz
sub
mov
mov
cmp
or
push
outsb
in
insb
inc
pop
rolb
dec
leave
fndisi(8087
not
fwait
scas
dec
dec
mov
push
cmp
fwait
jbe
xor
push
fcomps
add
or
es
lret
cmp
mov
xor
xchg
mov
jo
mov
xor
out
lods
cltd
ret
mov
mov
or
popf
cmp
pop
mov
and
jmp
std
sub
pop
mov
push
movsl
scas
jne
data16
sub
xchg
cwtl
in
test
and
inc
popa
push
jo
xor
cwtl
rcrl
cmp
hlt
xor
xlat
dec
pop
sbb
dec
cmpsb
jge
ficompl
into
out
mov
shlb
test
jbe
bound
xor
addr16
sbb
inc
mov
clc
in
add
inc
add
icebp
movsl
loop
lahf
sub
xor
xorb
sub
loopne
jne
mov
jae
repz
sbb
sbb
jns
cmp
pop
out
push
fisubrl
or
repnz
loopne
xchg
shl
loope
dec
cld
in
or
mov
jg
ljmp
mov
sti
xchg
in
jg
pusha
fwait
cmpsb
mulb
push
pop
es
hlt
inc
loope
jns
mov
int3
dec
mov
jge
jbe
ds
rcrb
movsb
cmp
adc
inc
ret
hlt
dec
fadd
inc
push
test
cmp
mov
push
sub
shl
add
add
cmc
jae
andb
add
jp
mov
mov
in
outsl
roll
pop
mov
mov
or
cs
data16
in
js
es
fcomps
dec
gs
sub
pop
mov
stos
jo
sub
arpl
subb
pop
or
rorb
sub
outsl
iret
mov
test
push
jmp
mov
add
add
xchg
xor
push
jae
or
lods
sub
or
nop
xchg
es
mulb
jmp
in
cmp
pop
scas
inc
xchg
mov
inc
fs
daa
lret
out
dec
xor
mov
xchg
shrl
cmp
xor
addr16
sub
cwtl
je
and
or
cmp
xor
ficoml
fistpll
shll
or
dec
hlt
sub
xchg
jecxz,pn
adc
repnz
mov
rcr
nop
fnstcw
sarl
mov
sbb
or
fcmovb
mov
outsb
sbb
mov
mov
aaa
in
pop
pop
pop
out
scas
je
sbb
mov
pop
adc
aam
sarb
and
hlt
inc
inc
ror
mov
cmp
out
insl
call
jmp
xor
push
icebp
sbb
fsts
and
arpl
out
sti
cli
mov
add
gs
outsb
addr16
jne
icebp
adc
jb
add
push
or
ss
pop
jp
arpl
and
pop
ret
push
loope
mov
dec
loope
iret
fwait
daa
ljmp
mov
xchg
imul
sbb
cmp
inc
bswap
cmpl
add
sbb
stos
push
jmp
and
rorb
mov
lret
jae
and
lret
cmp
dec
lahf
loop
cmp
int3
shrl
and
fildl
and
fwait
cwtl
mov
iret
sti
or
mov
or
sub
add
scas
unpckhps
mov
push
fs
insl
push
or
addb
hlt
scas
arpl
subb
and
nop
stos
mov
shl
mov
shll
lods
push
sub
aaa
adc
push
sti
imulb
sti
daa
jnp
cld
sbbl
xchg
in
adc
out
test
loopne
mov
in
push
adc
push
sar
push
jno
iret
ret
cmc
inc
roll
adc
push
outsl
repnz
fsub
and
inc
add
int
in
dec
and
pop
push
imul
mov
mov
mov
jbe
push
mov
mov
mov
cld
push
push
mov
cmp
mov
test
repnz
jmp
lret
push
sarb
popa
fstpt
or
mov
fstpt
xchg
lods
push
mov
mov
mov
les
jle
sbb
div
xchg
hlt
neg
xor
ja
into
or
jne
mov
xchg
jbe
daa
jg
jmp
sti
mov
mov
lcall
gs
popa
cmp
pop
call
aad
pushf
daa
mov
mov
push
xchg
je
hlt
cli
inc
mul
sahf
jp
inc
shrl
xor
mov
cmpsb
lret
popf
xor
enter
and
movsb
push
outsl
mov
call
iret
adc
adc
loopne
xchg
in
cld
mov
aaa
mov
fucomp
push
mov
xlat
hlt
fwait
out
adc
mov
js
enter
pop
stos
add
aaa
push
loop
loop
inc
pop
cmp
imul
scas
mov
sti
loop
xor
cmc
ja
inc
cmp
push
jo
and
add
inc
cld
test
inc
cmp
jno
jecxz
in
adc
mov
xor
inc
stos
pop
xor
cmp
ds
ja
jecxz
mov
lahf
push
lret
mov
fisubrl
clc
jae
inc
dec
jmp
add
cld
fnsave
push
push
in
xchg
addb
push
lds
loope
mov
push
shll
imul
cltd
stos
jg
xlat
repz
sbb
int
cmp
pop
push
cwtl
adc
in
nop
xor
cmp
or
cli
push
pop
inc
fidivs
jg
dec
mov
mov
add
push
xchg
iret
mov
out
test
jg
fsubl
xor
xchg
adc
xchg
add
dec
pop
fs
call
mov
cli
into
movsb
stos
inc
out
mov
aaa
sbb
xchg
or
adc
and
xor
je
inc
ret
cmp
add
add
jno
ja
pop
push
addr16
mov
or
mov
dec
stos
cltd
icebp
adc
xchg
gs
out
push
stos
ljmp
push
mov
jae
adc
aad
mov
or
or
cli
dec
cmp
xor
cmp
aaa
sub
add
popa
ret
xor
or
repnz
dec
flds
pop
shlb
sub
dec
or
dec
in
sbb
call
daa
or
adc
push
xlat
sub
shll
stos
outsl
gs
adc
sbb
gs
lock
or
cmp
mov
push
enter
popf
inc
pop
sahf
sbb
or
jge
daa
jno
add
cmp
loopne
push
adc
adc
orl
xchg
xlat
xor
mov
ret
outsl
cli
shll
dec
dec
mov
cld
cmp
shl
jae
ret
pushf
pop
test
dec
lret
movsb
clc
inc
add
ret
mov
mov
jecxz
xchg
out
jae
lcall
mov
insb
push
xchg
sbb
push
inc
xchg
adc
push
imull
data16
sub
rorl
in
je
jno
pop
sub
test
xchg
or
in
jmp
mov
jge
fsubrs
sbb
imul
addl
cmpsb
ret
and
add
sbb
sti
and
pop
cmp
cld
push
cwtl
test
xchg
fwait
stos
les
xor
cmpb
test
pop
push
inc
ja
gs
outsl
pop
sbb
in
cmp
jo
sbb
jmp
mov
mov
or
lcall
cwtl
arpl
xchg
mov
into
cmpsb
in
fadd
jp
cmc
xor
sarl
mov
mov
lods
xchg
and
dec
adc
sub
shll
push
sbb
push
pop
push
xchg
mov
fs
mov
xchg
in
mov
mov
inc
cltd
add
cmp
adc
in
fstpt
push
insl
cld
jno
mov
pop
out
pusha
mov
cmp
sbbb
push
icebp
jecxz
push
lcall
push
mov
push
adc
test
cmp
xchg
push
incl
xorb
leave
sarl
inc
pop
imul
sub
inc
aad
cmp
add
sbb
sub
out
cwtl
push
xchg
dec
jp
adcl
mov
pop
pop
or
testl
cs
mov
aad
into
inc
clc
sbb
sub
mov
mov
pushw
xchg
call
rcrl
mov
cwtl
mov
lds
mov
imul
out
jle
jae
cs
pushf
daa
sub
out
xchg
and
sti
dec
gs
inc
sub
cmp
ficomps
and
into
fsubl
mov
jne
ret
xor
add
push
lcall
movsb
mov
adc
push
jb
sub
jns
notl
xor
jns
in
dec
dec
push
jne
test
cmp
xlat
jle
lock
test
inc
jle
insl
add
inc
outsl
push
jb
rcr
sbb
into
lret
js
push
adc
divl
adc
cmc
lahf
inc
in
jae
add
sub
push
dec
enter
mov
je
pop
mov
push
sbb
nop
cmp
push
cmp
outsl
jmp
movsl
data16
add
frstor
xor
mov
push
dec
xlat
cmpsl
or
adcl
icebp
mov
dec
mov
xchg
out
jl
xchg
mov
push
mov
cmp
mov
pop
and
or
lret
or
add
jge
push
mov
mov
outsl
jmp
out
jno
mov
mov
xlat
xor
shl
dec
jmp
outsl
fstl
mov
or
stos
pop
imul
test
roll
mov
int3
fmul
xor
xchg
add
mov
adc
aam
les
cmp
push
or
pop
pusha
adcb
rol
test
es
in
mov
lret
call
push
sbb
push
inc
lret
pop
jnp
lea
cmpsl
cmp
jo
leave
add
xchg
sub
dec
sbb
inc
pop
mov
xor
lret
and
mov
dec
in
into
fcompl
aam
jmp
cmp
dec
add
lret
bound
sbbl
jnp
jo
fnstenv
pop
or
pop
ja
jns
cmpsb
xor
pop
lret
jl
cld
adc
addr16
popa
push
test
add
jmp
movsb
pusha
xor
lcall
shlb
sti
outsl
mov
movsl
lock
inc
pop
test
push
pop
adc
pushl
pop
adc
or
pop
cmp
jb
out
cmpsb
dec
add
or
rclb
or
mov
mov
cmpsb
pop
lds
push
andb
mov
pushf
fmulp
pusha
ss
sti
es
or
imul
pop
mov
movsb
xor
add
dec
jp
jl
pop
xchg
jne
xchg
jge
stos
xor
ljmp
lods
ja
pop
inc
int3
loop
fcmove
gs
pop
scas
aam
fidivrs
push
sub
pushf
sub
pop
ret
out
xchg
sub
cmp
insl
mov
jl
faddl
mov
dec
and
xchg
jmp
lock
mov
pushl
fadds
stos
cwtl
jae
in
adc
fists
pop
in
jae
mov
and
or
sbb
leave
adcb
rorl
test
xchg
jb
push
sbb
scas
je
fldl
fwait
dec
mov
xchg
mov
push
addb
loopne
js
adc
or
std
mov
cmp
jae
mov
out
scas
aas
add
iret
add
andb
imul
subl
outsl
fists
repz
push
scas
dec
add
icebp
out
xor
aam
jae
sbb
iret
cmp
jge
mov
or
sbb
cmc
mov
popa
lret
jmp
and
in
test
loop
scas
mov
lods
nop
movsl
xchg
inc
inc
inc
push
cmp
cmp
insb
fadd
iret
cmp
mov
adc
push
sbb
dec
dec
inc
insl
jg
cltd
cmp
push
inc
xor
and
sti
mov
jnp
jae
loope
add
leave
mov
out
mov
lahf
cltd
and
and
jg
add
xchg
jo
shll
xchg
scas
or
fidivrl
lret
xorl
xchg
fcomip
mul
addl
xor
dec
ljmp
jg
mov
pusha
sti
ds
or
sub
or
sub
cmp
cmp
jb
out
fnsave
lret
jne
inc
popa
xor
sbb
push
cmpsb
xchg
add
test
cmp
sbb
addr16
add
movsl
mov
adc
dec
dec
outsl
addr16
mov
inc
inc
push
dec
xchg
in
sub
mov
mov
mov
loope
mov
test
adcb
sbb
xor
mov
pop
cmp
test
push
in
stos
lea
mov
push
sub
sbb
cld
dec
orb
pusha
push
xchg
sbb
icebp
pop
in
xchg
pusha
lcall
and
or
xchg
xchg
adc
push
out
mov
pop
pop
shll
ror
adc
jae
mov
pop
mov
cltd
stc
pop
out
movsb
mov
out
add
cli
mov
sub
push
xor
cltd
cmp
lret
cld
out
push
enter
jle
mulb
cli
or
sysexit
mov
out
and
add
jg
sbb
ret
std
mov
push
push
inc
sahf
sub
pop
stos
cli
mov
jmp
dec
fimull
test
into
or
sbb
stc
jb
push
sub
jle
dec
dec
fisubl
jmp
aad
and
or
and
std
jnp
xor
push
sbb
lahf
cmp
ficoms
into
rorl
mov
loope
mov
out
mov
mov
mov
sbb
mov
rorl
xor
jecxz
bound
fidivl
jae
sbb
mov
xchg
xor
mov
jae
daa
repnz
jo
xlat
scas
jge
stos
ret
repz
int
cmpsl
sbbb
adc
stc
inc
mov
enter
test
imul
jmp
ss
mov
push
imul
add
sub
lcall
mov
sbb
sub
lret
lea
mov
into
loope
dec
mov
sbb
add
xor
mov
js
in
cmp
filds
jbe
cmc
decb
mov
in
mov
mov
leave
or
aam
in
test
jb
cwtl
xlat
pop
xchg
fs
das
mov
add
and
test
jle
dec
loop
sbb
ret
std
popf
addr16
in
test
and
imul
in
dec
insl
push
test
push
mov
xor
pop
or
push
lods
sbb
mov
cmpsb
into
out
shl
sub
adc
lcall
imulb
sarl
fwait
pusha
and
mov
addr16
adc
std
adc
xor
repz
push
aad
int
arpl
pop
cmp
sub
daa
cmp
cmp
dec
test
popa
into
lahf
jmp
or
jg
push
popa
data16
sbb
mov
dec
and
mov
lea
mov
mov
jge
rcrb
ja
dec
push
mov
inc
fcomps
or
es
mov
sbb
push
scas
inc
lods
daa
push
dec
push
mov
mov
rolb
jb
xorl
dec
movsb
sbb
cmp
imul
pop
inc
lds
out
test
pop
sub
dec
cmp
mov
add
cmpb
adc
pop
add
adc
idivb
cs
es
movsl
xor
and
mov
lcall
adc
sbb
lahf
mov
fwait
push
aad
addr16
pop
inc
sub
adc
xchg
bound
cld
nop
mov
in
or
inc
rcl
push
dec
and
dec
add
xchg
xchg
sub
lahf
mov
inc
xor
in
pop
sbb
out
sbb
sub
mov
adc
inc
sti
inc
xor
jg
popf
xchg
dec
mov
xchg
mov
rcl
push
mov
test
aaa
dec
mov
test
sub
cmpsl
jo
cmpsl
inc
outsb
mov
mov
xor
push
mov
cmp
sbb
aam
int
cmp
arpl
loop
add
inc
mov
lret
xchg
scas
out
xor
cmp
enter
jne
cmpsl
aam
fyl2x
std
mov
lods
std
adc
sahf
cmp
aad
jb
sahf
mov
pop
jecxz
add
add
mov
rcll
js
ds
lret
push
jg
in
loopne
push
aam
imul
fisttps
sahf
mov
jg
mov
out
leave
aaa
jl
adc
outsb
lcallw
push
sbb
mov
pop
mov
jbe
idivl
fwait
cli
inc
inc
sbb
das
sub
xchg
std
xchg
mov
stos
out
ja
imul
dec
dec
pop
clc
xor
mov
xor
sti
inc
arpl
jo
sub
rcll
daa
jle
or
xchg
outsb
rol
jecxz
hlt
rcrl
push
bnd
das
in
xchg
jge
lret
lods
fsubs
mov
insl
ds
outsl
add
mov
js
push
sub
enter
pop
sbb
test
jmp
sbb
sub
shrl
jae
mov
neg
sbb
int3
xchg
pop
addr16
jbe
mov
dec
das
mov
mov
xchg
es
mov
lods
dec
xchg
jne
inc
in
icebp
mov
mov
sbb
cltd
mov
xor
cmp
int3
arpl
sbb
aas
cmp
adc
xor
icebp
xchg
enter
out
xor
popa
lret
jb
std
inc
jle
aaa
std
sahf
jns
ljmp
pop
jo
jnp
mov
or
fwait
mov
sub
fdivrp
cs
inc
ss
jne
daa
jae
mov
jnp
jo
jmp
inc
popa
or
sub
cmpsl
add
adc
mov
xchg
dec
add
das
push
cs
mov
call
cli
add
pop
push
push
dec
inc
jmp
imul
test
std
fldcw
inc
popf
test
mov
inc
sbb
xor
loopne
push
xchg
mov
mov
rclb
jnp
jg
or
je
xor
pusha
xor
shrb
in
jae
lds
jp
push
adc
adc
sbb
sbb
inc
cltd
jmp
rclb
push
fwait
xchg
cmc
cmp
pop
jecxz
add
mov
sub
insb
pop
xlat
push
adc
push
inc
scas
xchg
das
or
mov
jb
and
push
cli
mov
js
and
enter
int3
push
mov
push
loopne
mov
push
add
lods
insl
sbb
or
mov
jae
cmp
in
xchg
xchg
inc
fdivs
call
es
cld
xlat
outsb
enter
arpl
jb
hlt
cmpl
push
mov
sbb
xchg
mov
fisubrl
int
mov
mov
daa
xorb
push
outsb
mov
mov
mov
rcl
xor
in
aaa
scas
ss
cmp
cli
push
inc
flds
or
xor
bound
imull
mov
pop
mov
lret
enter
mov
cmpl
lahf
int
cmp
pop
xor
pushf
add
xchg
xor
jns
insl
lret
insl
or
in
shll
mov
xor
leave
lcall
loop
inc
mov
stos
stos
loop
shlb
ss
stos
pop
and
pop
dec
das
cmp
sahf
lock
movsl
mov
push
arpl
mov
test
aad
fimuls
pop
ljmp
cli
mov
cli
jecxz
icebp
or
inc
sub
ficoml
cmpsl
js
pop
or
sahf
hlt
push
or
lcall
idiv
imul
add
push
inc
add
sbb
cmp
jp
or
xor
mov
lods
mov
rorb
sarl
bound
xlat
int
inc
inc
jns
xor
adc
fiadds
clc
cmp
cmp
sbb
push
repnz
xchg
push
add
rorb
cmp
test
in
or
ret
and
add
xchg
int3
lcall
dec
xor
sub
inc
pusha
push
mov
mov
cmc
pop
nop
jle
pop
iret
ficomps
push
sti
and
xchg
mov
and
out
mov
fnsave
aaa
push
addr16
inc
loop
jecxz
push
jg
test
xor
sbb
icebp
and
shrb
mov
mov
adc
dec
inc
ljmp
cmp
adc
push
xchg
xor
sti
jmp
push
insl
call
add
mov
icebp
dec
jmp
lock
int3
fdivrs
rcrl
insb
push
repnz
mov
mov
cmp
int
inc
cltd
jne
sub
add
jl
mov
rcl
pop
or
ja
outsl
call
out
scas
setle
shll
pop
jnp
inc
ret
mov
and
adc
imul
and
mov
inc
inc
hlt
fldenv
dec
lret
cmp
into
int
bound
hlt
xchg
inc
inc
push
push
popf
dec
or
rcrb
sar
nop
cld
cmp
jne
lret
je
fsubrs
dec
shlb
sbb
sbb
ja
movsl
sbb
pop
orl
push
push
addr16
icebp
in
pop
push
cld
inc
test
push
fstpl
mov
dec
cmpsb
pushf
pop
mov
or
mov
test
xor
lret
std
sbb
insl
or
mov
lret
lret
cmp
imul
sub
divb
xor
pop
dec
pop
dec
mov
or
in
sub
xchg
mov
jp
xor
sub
pop
in
push
or
js
movsb
dec
lret
push
cmpsb
cmp
cmpsb
mov
lea
push
lods
cli
or
sbbl
push
push
loope
cmp
jne
aas
cmpsl
xor
mov
lock
js
inc
jmp
ficomps
bound
xchg
arpl
add
stc
xor
inc
aas
inc
lret
loopnew
mov
sti
adc
stos
push
pop
xor
mov
inc
cmp
mov
push
push
add
cli
mov
mov
movsl
cmp
add
push
out
std
pop
push
jecxz
jp
xchg
lret
mov
xor
xchg
dec
enter
in
lea
aaa
push
lds
push
test
loopne
adc
jo
pop
mov
jmp
jl
adc
test
and
loopne
outsb
jb
lods
jg
add
xor
sahf
push
sub
testb
out
jle
sub
pop
stos
loope
pop
sbb
add
cmp
cmpsb
lock
ja
mov
xchg
add
xchg
xor
pushl
jp
mov
sub
arpl
out
dec
sbb
sbb
rcll
jl
fdivl
fstpl
xchg
cmp
adc
sbb
test
inc
in
jne
sbb
push
dec
gs
imul
lret
mov
mov
fsubr
mov
cli
cmpl
xchg
adc
in
cmp
jmp
jge
leave
icebp
shrl
sbb
aad
hlt
mov
test
mov
cmpsb
pop
test
loopne
data16
fs
pop
iret
rolb
popf
test
nop
lods
aam
jo
inc
repz
push
sub
dec
shr
in
and
mov
push
ss
jecxz
imul
out
mov
jae
rcrb
ljmp
mov
imul
in
pop
jecxz
inc
stc
sahf
pop
ret
xor
call
aad
adc
pop
adc
packsswb
xchg
addr16
shl
xor
mov
out
fmul
test
push
push
xor
add
je
sbb
xchg
call
xor
mov
mov
clc
pop
loope
sub
das
inc
aad
mov
pop
test
jno
xchg
in
fnstenv
in
addr16
stc
rorb
aas
and
aas
cmp
cmpsl
dec
and
stos
test
vcmpsd
adc
in
cmpl
je
adc
jb
mov
xor
shlb
or
mov
xchg
sbbb
xchg
fildl
test
fadds
nop
incb
test
fcmove
loop
test
add
dec
mov
xchg
jp
inc
cmp
or
lds
cmp
pop
mov
cmp
pop
push
aam
dec
lock
pop
or
xor
add
adc
mov
mov
outsl
cmc
lret
cwtl
fcmovb
lcall
lds
push
cmp
inc
adc
inc
into
fdivr
xchg
nop
xor
jb
lods
mov
loopne
mov
popa
mov
sti
cmpsl
sbb
push
aam
adc
leave
xchg
cmc
aad
aas
pop
outsb
pop
outsb
mov
pop
xor
call
cld
iret
cs
stc
cmpsb
jl
fnsave
and
aaa
sbb
add
fdivp
cmpsl
push
adc
ss
xchg
cmc
cmp
jnp
jo
push
mov
push
sbb
aam
popa
dec
sub
rcl
dec
sarb
cmp
xchg
rcll
pop
or
or
pop
out
arpl
adc
aad
insb
jg
inc
test
jns
in
or
jle
repz
jp
sub
adc
loopne
stos
ss
add
fs
daa
lret
sarb
repz
add
pop
jg
push
xchg
or
mov
in
cs
test
cltd
or
fwait
sti
xchg
jnp
jne
dec
ret
lret
or
iret
bound
jmp
mov
sub
cmp
xor
out
rcll
je
add
subb
xchg
push
repz
lea
lcall
xor
hlt
dec
loope
mov
push
lock
jne
add
adc
fsubp
inc
int
xor
cmp
xorl
mov
imul
pop
test
or
push
divb
jecxz
inc
xlat
dec
cwtl
mov
push
xor
adc
clc
jno
out
mov
mov
fcoms
sub
mov
shll
push
aaa
je
ljmp
sbb
jge
outsl
subl
lcall
insl
cmpsl
pop
fdivrp
jbe
repnz
add
sub
loope
xchg
pop
xchg
cmpb
sahf
popf
gs
fildl
mov
outsb
xchg
adc
scas
mov
pop
mov
mov
push
cli
jne
mov
test
pop
inc
inc
lods
cld
insl
mov
sub
xor
rclb
mov
enter
cmp
cmp
xchg
cs
inc
xchg
jno
in
dec
aas
lcall
out
sbb
mov
test
test
push
pop
xchg
fdivs
sbb
cmp
into
mov
or
jno
loopne
sub
jg
and
sub
movsb
es
leave
stc
cmpsb
cli
cmp
outsb
add
out
mov
sub
leave
fsubs
mov
adc
addr16
das
test
mov
and
dec
mov
sti
movsl
dec
popfw
xchg
xchg
inc
mov
test
inc
es
lea
sub
mov
movsl
aam
test
daa
cwtl
das
ret
icebp
sbb
jns
dec
aas
pushf
ja
movsb
mov
adc
aad
ljmp
sbb
pop
lods
scas
inc
rcr
and
sbb
jg
cmp
scas
add
push
push
fisubl
repz
stos
imul
outsl
pop
jp
cmc
adc
in
das
lds
adc
push
int
frstor
push
mov
test
jo
inc
pushf
or
or
cmp
sbb
into
adc
push
dec
cmpsb
loopne
int
mov
and
mov
mov
dec
mov
xor
pop
jb
test
fildll
jne
sub
ljmp
sub
and
dec
into
pop
idivb
add
nop
pop
out
xor
inc
sub
js
pusha
inc
fstpl
mov
hlt
test
mov
addb
call
push
je
and
push
imul
ret
mov
std
out
jns
mov
jl
scas
dec
aam
cli
cmp
stc
cli
push
pop
add
sub
ret
daa
or
fisttpll
jmp
jmp
into
movsb
aaa
xor
push
mov
push
push
push
mov
adc
bound
scas
pop
or
xchg
mov
dec
jae
sub
pop
xor
jg
push
or
push
pop
sbb
sub
stc
xchg
mov
push
ss
shll
sti
xchg
push
ljmp
push
lock
in
add
cmp
test
rcr
in
sub
jae
repnz
mov
cmp
xor
mov
cli
sbbb
addr16
je
sbb
dec
push
repz
fsubl
mov
rorb
jge
adc
adc
aam
push
add
mov
or
call
das
inc
pop
cwtl
dec
or
lret
mov
pushf
data16
push
imul
sbb
nop
pop
pushf
sbb
xlat
in
hlt
adcb
mov
mov
test
sub
movsb
xchg
jae
in
fwait
ss
cmp
xor
imul
bnd
jno
dec
je
in
aas
or
jo
mov
add
scas
pop
or
push
scas
xor
roll
pop
imul
inc
jl
stc
mov
jno
jp
sbb
outsl
mov
andl
and
jne
add
mov
repz
cld
fnsave
push
ljmp
idivb
xlat
out
mov
xor
dec
or
mov
cmp
xor
cld
mov
movsl
fisubrs
push
xchg
lods
fwait
inc
movsb
mov
fucomp
push
mov
push
lahf
aad
mov
add
pusha
mov
sub
inc
inc
push
movsl
aaa
jne
lds
aam
out
adc
sbb
xchg
ja
mov
iret
adc
and
lahf
push
rcl
adc
mov
cmp
add
mov
inc
gs
push
and
and
inc
mov
mov
daa
push
fsubrl
cmp
ljmp
inc
mov
adc
jbe
pop
aam
dec
mov
test
insb
int3
mov
dec
xor
mov
add
sub
xor
sub
ja
xor
sbb
test
mov
pusha
aam
mov
inc
das
mov
shll
hlt
addr16
lret
call
and
call
aaa
andps
pop
dec
mov
mov
stos
sub
sbb
rclb
and
inc
or
int
insb
cmpsb
mov
mov
les
add
inc
pop
xor
mov
dec
fldcw
sahf
into
loope
cmpsl
testb
rcll
subb
xor
repnz
lods
inc
adc
stos
fimuls
push
hlt
in
stc
sub
xchg
aas
data16
jae
mov
rol
sub
fcomps
pushf
dec
and
sub
dec
fisubrs
movsl
add
mov
sub
mov
out
lods
call
lods
add
sbb
in
pop
sarl
insb
out
mov
es
xchg
push
loopne
pop
out
in
push
repz
movsb
ficompl
loop
test
dec
pop
pop
gs
sub
inc
mov
xchg
je
xchg
and
and
add
andnps
cltd
dec
mov
xor
adc
jp
xchg
outsl
outsl
sub
arpl
test
mov
xor
push
divl
aaa
cmpsb
imul
lcall
movsb
stc
mulb
aam
lods
jg
in
lret
jecxz
add
xchg
mov
push
dec
xchg
xchg
push
pop
call
push
test
xchg
ljmp
ret
sub
iret
sbb
and
push
mov
fadds
push
push
cmpsb
in
movsl
pushf
stc
mov
lea
push
lock
lcall
dec
in
jmp
lods
inc
push
mov
int
mov
jne
mov
jae
mov
bound
lock
pushf
jmp
add
jne
pop
sahf
in
aam
xchg
lds
mov
sub
popf
cwtl
adc
sbb
xor
jne
shll
repz
or
mov
xchg
fstpl
test
andb
je
and
and
dec
mov
shr
les
fldl2t
addl
jno
stc
mov
xchg
cli
jae
xchg
mov
sbb
pop
jl
mov
xchg
xchg
enter
push
jmp
rol
outsb
dec
add
out
push
ret
shll
mov
es
test
lcall
aad
push
aas
jbe
loop
lods
aas
jo
icebp
into
rcrl
loop
xor
repnz
cmp
push
sub
fisttpll
push
loop
xchg
pop
jl
popf
or
jns
inc
stos
pop
cmpsl
dec
insl
add
xor
stc
aaa
mov
js
inc
fnstcw
sub
sbb
fdivs
movsl
int
rorb
pop
jle
fstp
les
into
mov
inc
inc
adc
mov
push
adc
mov
daa
cmp
icebp
jb
pop
jne
xchg
ja
dec
ret
hlt
imul
dec
inc
mov
call
in
js
jno
jl
and
mov
into
add
and
dec
cs
movsl
pusha
xorl
dec
push
dec
inc
loope
int
cmp
pushfw
dec
dec
std
xchg
fsqrt
rclb
pop
ficoml
out
inc
pop
lret
cmp
loopne
lods
stc
popa
test
es
ret
movsl
ret
jecxz
sub
lock
ret
cld
mov
outsl
xor
sbb
cmc
mov
cli
and
outsl
jbe
inc
test
xor
daa
outsl
push
jae
insl
mov
hlt
adc
imul
and
lods
iret
pushw
ret
sbb
xor
inc
out
xor
pop
repnz
gs
sbb
inc
mov
jnp
jecxz
scas
fcmovb
jns
cmc
mov
popf
pop
inc
mov
cmp
sbb
cmp
mov
pop
cmp
dec
pop
and
out
jecxz
mov
mov
insb
dec
and
imul
test
cmc
repz
mov
push
and
negb
loopne
iret
xorb
andl
iret
cmp
jl
dec
scas
jbe
sub
push
les
out
sbb
cmp
fidivl
or
test
inc
and
loop
jo
and
dec
shlb
jno
fldenv
sarb
dec
fstpt
out
and
mov
and
adcb
jl
mov
bound
cmp
ret
hlt
mov
ljmp
or
adc
adc
ljmp
dec
mov
popf
sub
ja
mov
sub
ret
lea
xchg
cmp
sbb
loop
int
push
adc
js
out
inc
movsl
fcom
xchg
mov
loope
ja
pop
jmp
aam
push
cli
mov
bound
xchg
xchg
pop
inc
lret
iret
aaa
push
rorl
dec
dec
imul
nop
roll
gs
inc
sub
mov
test
sub
sbb
das
cmp
pop
sti
or
rclb
pop
ljmp
pushf
or
mov
mov
cmp
pop
fadds
daa
fildl
mov
add
dec
in
fldl
rolb
jecxz
stc
jp
mov
dec
lea
js
pop
push
mov
lods
push
pop
outsb
adc
mov
nop
push
inc
xchg
add
andb
xchg
jecxz
dec
mov
inc
bound
ret
outsl
mov
sub
xchg
jnp
jne
mov
or
mov
adc
cwtl
stos
jle
shr
bnd
dec
repz
fisttps
xchg
mov
pop
lock
dec
mov
int3
adc
out
mov
mov
cmp
mov
push
xchg
shrl
movsb
xchg
pop
jb
mov
jg,pn
mov
test
cmp
imulb
adc
lods
cmc
pop
fwait
or
inc
push
test
push
add
int
faddl
add
pop
sbb
cmp
aas
adc
dec
ljmp
cmp
add
fcompl
fwait
ds
lods
xor
xor
jl
pop
xchg
cs
test
pop
xor
leave
out
inc
mov
int
pop
jge
hlt
mov
sbb
pop
dec
push
std
mov
sbb
mov
sub
cmpsl
mov
mov
sarl
test
sub
add
mov
cld
and
mov
fcmove
and
inc
and
stc
icebp
add
arpl
jle
push
inc
fisttps
mov
int
pushf
pop
clc
xchg
stos
aas
je
mov
rclb
add
jmp
lahf
data16
and
mov
mov
ret
movsl
lret
jb
mov
sarb
mov
addr16
imul
adc
fwait
out
xor
cmpsl
lods
cmp
pop
sub
sub
mov
lcall
lcall
sbb
push
sub
xor
sub
jo
ret
push
and
mov
inc
out
pusha
testl
add
loopne
ljmp
in
push
rcll
sbb
pusha
pop
and
jmp
mov
jno
xor
xor
pop
pop
xor
mov
mov
mov
sbb
adcl
mov
repz
add
test
and
add
ja
punpckhwd
movsl
mov
push
lods
jns
or
mov
in
bound
std
es
pop
and
data16
in
adc
or
mov
aad
lret
insl
and
outsl
lds
daa
adc
mov
sarl
cmp
lahf
lret
xchg
jo
rcl
fwait
pop
stos
sti
cmpsl
xlat
mov
ss
mov
popa
and
push
stos
pop
ffree
fdivrl
ret
xorb
lahf
subb
sbbl
or
dec
or
cmp
sbb
or
mov
add
lods
adc
jge
in
lock
or
idivl
fcomps
das
cmp
mov
fst
mov
push
cmpb
sub
mov
pop
jp
outsb
mov
or
imul
jmp
std
xor
cmp
movsl
sub
pop
hlt
into
inc
pop
arpl
stc
popa
pop
aaa
and
mov
cld
ss
pushf
adc
mov
or
sbb
int3
push
ss
in
push
ficoml
lcall
sbb
insl
mov
pop
test
gs
in
dec
lods
pushf
jne
xchg
jb
mov
add
jl
add
mov
add
ss
shll
lods
int
push
jp
test
int
mov
fdiv
push
push
stos
inc
mov
cs
repz
add
add
sub
jno
into
cld
sbb
xorl
test
fs
cltd
fstpt
bound
mov
sahf
add
sbb
das
jo
mov
and
into
add
jmp
test
aam
adc
popa
out
and
sub
pop
inc
jl
imul
std
paddusw
mov
dec
dec
dec
addr16
popf
xchg
and
sbb
ds
add
cmp
movsl
mov
add
inc
push
mov
outsl
jge
adc
scas
lret
mov
inc
inc
je
test
dec
out
xor
es
xchg
cltd
iret
scas
add
jbe
adc
cmc
dec
pop
adc
pop
imul
xor
sti
out
pop
fs
sahf
fstp
dec
sbb
sub
das
in
adc
and
aam
out
xorb
movsb
mov
clc
xor
adcb
dec
jo
orl
fucomp
jg
mov
xor
sti
jmp
sub
repnz
in
add
add
cmpsb
dec
or
jl
incl
dec
mov
sub
push
in
out
test
cmp
pop
push
or
xor
fsts
pop
imul
stos
inc
idiv
mov
enter
add
dec
cmpsb
js
fstps
mov
stos
jnp
out
mov
mov
mov
repnz
orl
aam
fcmovnbe
outsl
dec
sbbb
test
mov
fisubl
adc
clc
es
xor
mov
mov
sub
push
shr
pop
repnz
lds
mov
jbe
mov
rclb
jbe
mov
push
jecxz
test
pop
lret
sub
adcb
cmpsl
xor
jmp
mov
xor
sub
in
pop
xchg
push
bound
xchg
push
push
mov
std
cltd
push
rclb
add
fwait
aaa
lahf
cmp
push
sti
jbe
mov
adc
pop
fisubrl
std
xor
enter
xchg
daa
call
or
pop
imul
cmp
lods
push
addr16
repz
or
insb
cli
cmp
adc
ficomps
cmpsb
int
mov
mov
stc
cli
mov
arpl
inc
call
sbb
rolb
arpl
xchg
sbbb
hlt
icebp
insb
test
mov
mov
mov
into
dec
movsl
mov
aaa
aad
stc
dec
pop
push
scas
mov
jmp
pmullw
push
mov
and
std
call
lock
mov
aam
mov
inc
pop
rcl
fildll
fcompl
frstor
stos
xchg
rol
jbe
pop
ret
outsb
xchg
adc
sub
mov
shrl
rorb
notb
loope
mov
movsl
xchg
jecxz
xchg
or
push
je
movsl
fidivrs
scas
mov
cmp
add
mov
pusha
in
cmp
mov
fst
rcll
js
shl
jae
push
out
adcb
and
rep
jge
cmpsl
sbb
adc
popf
hlt
cli
sub
lcall
or
pushf
stos
mov
and
loop
popf
das
push
es
fiaddl
shrl
xchg
add
cmp
push
insb
cli
mov
rolb
cli
lea
popf
popl
ljmp
mov
filds
sbb
stos
adc
mov
ret
xor
pop
mov
aas
cli
jne
and
xchg
jle
cmc
ss
popf
sbb
xor
shrl
xlat
jp
stc
pop
jo
aam
out
cmpsl
stc
adcb
sbb
pop
dec
cmp
jne
shll
ja
adc
ret
jl
clc
pusha
icebp
movsb
add
jo
mov
test
addr16
push
xor
js
mov
inc
adc
jae
ror
cmp
std
jle
or
dec
pop
aas
lcall
out
and
mov
aaa
testb
add
out
xchg
push
xor
hlt
insl
shl
std
lcall
movb
js
adcl
xchg
out
inc
pop
fsubrs
nop
addr16
aas
mov
pop
loopne
pop
mov
dec
negl
pop
dec
fwait
test
mov
cmp
add
mov
adc
add
mov
insl
iret
fcmovu
ret
mov
or
xor
sbb
movsl
jp
mov
mov
sub
cltd
xor
ja
lods
xor
xchg
sbb
add
mov
ficomps
add
jbe
rorb
dec
flds
cmc
push
cli
popaw
shlb
mov
int
push
cmp
mov
mov
xchg
les
mov
dec
repz
mov
into
jge
out
pop
out
in
stos
lock
xor
mov
cmp
lods
sub
inc
das
outsb
aaa
push
ljmp
sbb
rorl
or
fistpll
mov
cmpsl
jae
incb
pusha
jns
inc
in
jmp
mov
sbb
and
xchg
sbbl
add
iret
sbb
mov
pop
xchg
or
adc
imul
arpl
popa
sub
jnp
cmc
es
cltd
je
jmp
or
aaa
outsb
andb
xor
mov
mov
or
cmp
or
push
cmp
fsubrp
rcrl
movsb
mov
out
pusha
flds
or
or
lcall
sahf
xchg
stos
add
xor
mov
cltd
cmpsl
push
dec
cmp
in
fs
mov
je
or
and
rol
xor
jl
fadd
rcll
sbb
cs
push
jp
repz
fidivs
dec
pop
insb
dec
xor
test
push
out
ds
jbe
fcmovu
loopne
repnz
sti
insl
or
mov
adc
das
arpl
or
call
jle
and
xchg
mov
jne
cmp
arpl
fst
lss
icebp
fs
out
movsb
jecxz
not
sarb
adc
add
enter
xchg
sbb
cmp
sti
add
ficompl
cld
fisubs
xchg
adc
and
jns
out
jno
out
loope
movsl
hlt
aam
cmp
push
rcrb
cmpsb
mov
mov
decl
repz
loope
dec
incb
je
enter
sub
mov
out
sub
loope
push
jno
test
jge
js
or
lret
pop
xchg
mov
stos
insb
add
pop
out
cmp
cmc
in
addr16
insl
adc
mov
out
test
pop
or
pop
xor
sbb
out
cmp
pop
push
mov
push
push
pop
out
aam
inc
pop
dec
xorb
push
or
arpl
sarb
jmp
or
pop
sahf
mov
movsb
or
fdivrs
cmp
not
lahf
scas
rcr
in
mov
mov
dec
pop
xchg
icebp
ss
lods
mov
add
mov
movl
cmp
sahf
lahf
sub
cs
sub
and
jg
mov
imul
jecxz
fcmovbe
lods
or
insb
jle
sub
mov
or
push
stos
scas
add
insl
je
and
add
jne
mov
cmpsb
jns
cmp
loop
push
lods
dec
or
xchg
sbb
fisubrs
roll
or
fldl
xor
sahf
jne
prefetch
add
and
sbb
movsb
or
mov
inc
sbb
scas
mov
sub
lret
hlt
in
fwait
aam
int
cmc
or
ds
mov
ficoml
clc
and
popf
mov
test
and
xchg
sahf
and
fldenv
iret
xor
add
test
fdivr
dec
push
push
fisubrs
into
ds
xchg
or
scas
add
mov
push
xchg
int
ja
cs
pop
jp
sub
scas
loopne
into
dec
imul
jbe
in
push
in
lods
cmpsb
arpl
sub
cmpsl
in
stos
mov
cwtl
add
dec
out
mov
pop
jnp
adc
test
fistpl
pop
xchg
sbb
jl
in
bound
es
es
daa
fsubrl
leave
cmp
push
repnz
jno
aas
or
test
cmp
stos
pop
mov
in
mov
adc
dec
pop
addr16
fidivs
xchg
orb
pop
es
rolw
pop
out
xorl
rcrl
push
fsubs
push
cli
fadd
inc
sub
xor
loopne
shrb
sbb
out
sbb
sbb
movsb
adc
and
pop
aam
cmp
pop
jns
movsb
cmp
mov
mov
rcll
dec
roll
push
push
aas
xchg
scas
popa
and
js
rclb
sarl
push
dec
push
pop
xor
cwtl
cmp
dec
pop
lahf
push
mov
fwait
pop
add
movsl
divl
mov
xchg
jmp
or
inc
add
cmpsb
or
mov
fisubl
jecxz
insl
mov
cld
inc
mov
sbb
ret
xchg
sub
repz
sbb
mov
test
adc
mov
loop
sahf
mov
nop
daa
and
xor
rcrl
pop
repz
imul
mov
fadds
mov
sub
dec
scas
testl
dec
sbb
call
mov
nop
pop
cmpsb
into
enter
mov
adc
jle
adcb
movsl
out
into
pop
outsl
shll
sbb
mov
xor
mov
xchg
dec
scas
mov
adc
mov
push
lcall
or
in
xor
xchg
push
adc
push
loop
dec
clc
jnp
xchg
sbb
inc
add
test
pop
mov
and
mov
fdivs
int3
push
jmp
aaa
sbb
or
pop
insl
mov
leave
out
aad
and
dec
dec
cmp
fdivrs
jns
sub
dec
pop
scas
add
insb
jl
mov
out
dec
mov
test
mov
cs
and
test
mov
pop
dec
push
adc
mov
js
push
jecxz
cwtl
int3
adc
enter
loope
mov
jg
mov
jne
fwait
cwtl
mov
sbbb
mov
arpl
cmpsb
mov
inc
xchg
pop
lock
mov
add
iret
dec
fwait
or
inc
pop
lcall
dec
sbb
loopne
xor
inc
out
das
and
cmp
mov
sti
pop
out
sub
lcall
xor
nop
test
push
sub
dec
jecxz
dec
inc
lcall
pusha
pop
push
pop
cmp
jmp
inc
inc
mov
mov
iret
pop
iret
aad
rcrl
shrl
push
xchg
sbb
gs
fwait
fs
cmp
cwtl
cmp
pop
fiadds
call
jg
cli
jns
cmp
mov
mov
rcl
addb
inc
mov
clc
cmp
push
cmpsl
cmpsb
sub
inc
jecxz
mov
sbb
ja
sahf
clc
loope
mov
sahf
inc
leave
xchg
loope
sti
call
mov
push
icebp
pop
lock
das
js
imul
movsb
mov
cmp
addl
data16
add
pop
test
push
lds
xchg
in
add
movsb
and
lahf
loop
xorps
mov
sub
or
incl
jge
or
or
lods
ds
or
inc
mov
fstpt
testb
in
call
inc
cmp
outsb
push
repz
mov
sbbb
mov
xchg
xchg
pop
nop
repnz
or
sarb
std
lods
int
push
aas
add
mov
dec
adc
push
push
sub
stos
sahf
imul
loope
ss
adc
adc
jae
jge
stos
adc
dec
jmp
dec
mov
xchg
add
outsb
call
sbb
mov
jbe
xor
mov
or
sub
sub
jle
data16
scas
jmp
aaa
fstps
push
sbb
in
sahf
mov
jp
adc
lods
in
mov
rclb
and
jmp
repz
dec
push
push
out
jp
adc
insb
movsb
xor
adc
cmp
cltd
cmpb
xchg
jo
cld
jno
pop
inc
repnz
mov
add
mov
lea
out
hlt
js
pop
mov
pop
fiaddl
sbb
sbb
mov
pop
sub
xchg
add
xor
cmp
pop
jo
rolb
push
insb
inc
dec
std
jo
adc
popa
xor
sbb
bound
popf
xchg
ret
or
pop
mov
arpl
lcall
jnp
ret
or
xchg
stos
shrb
test
icebp
mov
mov
cmp
stc
xor
bound
arpl
aam
ljmp
adc
lret
iret
xor
adcb
sbb
pop
stc
mov
inc
fucomip
sub
dec
jge
scas
jg
cmp
repz
push
sbb
lahf
dec
jmp
add
rcl
movsb
adc
adc
cmpsl
jne
stc
int3
in
sbb
mov
xor
mov
adc
fisubrs
jl
pusha
xchg
in
xchg
mov
cmp
sbbb
fwait
repz
rorl
push
imul
aam
mov
pop
push
enter
in
xchg
add
int3
cwtl
int
fdivp
ret
push
je
fistps
shrb
sbb
ret
pushf
cli
flds
lret
and
jbe
xchg
out
add
out
xchg
pop
mov
lea
cmp
ficoms
mov
push
push
or
lock
jp
repz
inc
adc
lcall
xchg
push
cwtl
enter
cmp
arpl
pop
sahf
out
cmpsl
xchg
rcrl
mov
add
pop
push
out
push
fidivrs
xchg
add
lock
add
adcl
mov
or
xor
mov
lock
insl
nop
mov
xchg
mov
jmp
ljmp
sub
loopne
cmp
cld
or
rcrb
shlb
sbb
dec
imul
dec
sub
mov
pop
mov
ja
aam
mov
cli
adc
mov
jns
lret
push
cmpsl
lods
stc
sub
cs
cmpsl
jg
ficoms
xchg
gs
insl
push
daa
sbb
sbb
cmp
adc
mov
sbb
add
pushf
test
sbb
pop
imul
jg
es
dec
jg
dec
jmp
pop
and
roll
in
inc
push
jecxz
fimull
xchg
dec
scas
push
std
mov
lds
jl
cli
xor
repnz
enter
addr16
test
xchg
mov
loopne
fsts
sbb
xchg
sbb
mov
jge
mov
mov
mov
dec
mov
xchg
popa
lds
ss
xchg
xor
push
ljmp
inc
leave
loop
cli
pusha
or
jl
or
js
loop
mov
fisttps
pop
mov
hlt
push
rcl
xchg
repz
xor
dec
jnp
xchg
fsubrl
fldl
dec
xchg
sub
mov
dec
inc
movsb
pusha
mov
dec
out
xchg
lea
movsb
mov
and
dec
insb
inc
push
and
mov
mov
ret
xor
mul
dec
or
sahf
dec
or
scas
jnp
aad
sub
push
rolb
adc
into
add
ror
add
push
in
addl
test
or
jle
scas
pop
cmc
or
orl
xchg
sub
sub
aad
add
rcrb
mov
mov
fs
cld
rol
push
mov
test
push
xor
jo
imul
sbb
add
testl
adc
bnd
pop
and
fwait
push
aam
xchg
sbb
dec
das
addr16
test
xor
pop
leave
inc
cs
shrb
ret
out
add
xor
xor
arpl
jg
icebp
insb
mov
add
cld
pusha
pushf
lahf
sahf
and
push
sti
or
add
pop
cltd
lds
test
out
sarb
pop
out
xchg
push
ret
rolb
cmp
negb
mov
push
lahf
addr16
scas
scas
cwtl
js
push
push
in
test
push
add
mov
fldl
pop
hlt
jbe
rcr
xchg
jge
icebp
inc
mov
mov
ficoms
xchg
in
fwait
test
xchg
test
es
push
inc
push
aas
in
ss
push
xor
mov
push
outsb
push
push
pop
scas
ret
lea
mov
or
hlt
mov
push
mov
push
jnp
xor
xchg
into
push
inc
arpl
popf
stos
mov
into
movsl
push
imul
aaa
adc
scas
xchg
jbe
push
jno
and
adc
cld
inc
pop
stos
jne
call
ljmp
jl
dec
scas
mov
push
in
sub
mov
fistl
clc
daa
ds
es
ret
out
es
fnstenv
pop
adc
lods
imul
mov
dec
movsl
fbstp
cmp
adc
pop
faddl
bound
ss
mov
loope
and
cwtl
inc
shlb
fucom
pop
lret
inc
mov
dec
lods
or
gs
cmc
xchg
sub
scas
or
inc
pop
fdivrs
sbb
fldcw
mov
adc
in
outsb
and
xchg
and
mov
sub
dec
les
js
sub
lock
clc
jmp
out
inc
fsubs
lods
and
jle
adc
xchg
sbb
fsubl
push
aad
pop
sub
ficompl
mov
adc
push
subb
sbb
fisttps
cmp
sbb
pop
dec
ud2
mov
inc
push
cmpsl
mov
mov
scas
inc
fsubr
mov
and
imul
scas
adc
and
pop
repnz
aaa
and
lods
and
mov
jg
leave
push
adc
xchg
push
xor
mov
loop
or
call
stos
outsl
add
sbb
cmpsl
popf
addr16
arpl
je
movsb
inc
sbb
fldcw
jno
inc
mov
inc
inc
ficompl
or
cmp
leave
sub
aas
pop
push
enter
cmp
dec
mov
rorb
xor
push
adc
push
jg
sbbb
test
mov
xchg
xor
cmp
insb
jle
jae
decl
mov
xchg
push
inc
lcall
in
in
xchg
xor
jg
int3
cmp
cmp
jge
lock
pushf
and
push
lods
inc
dec
pop
pop
mov
nop
cmp
mov
add
or
mov
mov
dec
jge
cmp
lds
add
or
inc
sub
mov
lds
mov
xchg
sbb
sar
jo
and
cmp
into
scas
push
push
outsl
add
xor
xor
sub
cmp
lea
add
or
xchg
mov
adc
andb
pop
mov
sbb
out
mov
xchg
mov
dec
icebp
enter
das
cmp
outsb
mov
sub
sahf
mov
adc
pushf
mov
xor
jmp
or
aaa
lods
mov
mov
jo
pop
iret
int
or
pop
jae
add
inc
xor
orl
sub
movsb
sar
sub
mov
outsb
std
lea
mov
xchg
pushf
pop
xor
fstl
mov
mov
inc
movsl
in
lahf
mov
xchg
popa
in
adc
adc
inc
aad
dec
pop
cwtl
xchg
xchg
pop
mov
xor
popa
std
cmp
sub
mov
cmp
movsb
xor
ja
or
xchg
mov
out
mov
cs
into
or
pop
or
jns
push
fucomp
add
mov
inc
dec
jecxz
cltd
std
xchg
movsb
gs
insb
lods
mov
gs
enter
notb
dec
outsb
rorb
cld
sarl
cmp
bound
or
pop
dec
decl
mov
movsl
rol
mov
enter
test
xchg
push
scas
repz
out
or
jg
jne
dec
xor
pop
lret
insb
ftst
add
xchg
xor
rcll
push
jns
ret
ds
sub
pop
push
cmp
test
lods
loopne
mov
out
rcr
dec
mov
jnp
add
movsb
roll
imul
xchg
inc
adc
ret
cmpsl
fnstenv
int
stos
xchg
xchg
push
imul
in
sbb
ret
mov
jae
or
xchg
xchg
and
pushf
out
fsubrs
mov
idivb
inc
call
bound
mov
pop
lret
lods
mov
fidivs
push
xor
add
fwait
jne
icebp
sbb
nop
dec
adc
aaa
xchg
mov
int3
fcomps
mov
jecxz
inc
and
fnstsw
mov
xor
sbb
idivl
rcrl
rcrb
pop
dec
pop
xor
sbb
or
adc
in
dec
shlb
inc
xlat
scas
js
and
xchg
in
repz
repz
ds
cmp
lods
mov
xor
and
mulb
mov
sbb
mov
push
and
inc
or
stos
fstpt
pop
ret
cld
jno
cs
mov
inc
xchg
jbe
dec
movl
dec
cmp
inc
push
push
popf
inc
xor
out
out
and
pop
or
out
cmc
ds
pop
fldt
int3
es
mov
sar
and
jb
xlat
loopne
or
outsb
movsb
sub
hlt
lret
mov
sbb
or
xchg
mov
inc
jmp
les
in
imul
jne
loopne
cmp
jae
int3
or
popa
jns
dec
stos
andb
mov
mov
xchg
outsl
sub
movsb
jno
push
and
hlt
push
stc
into
push
cmp
jnp
fs
mov
inc
and
cmp
test
in
inc
inc
loope
adc
push
repz
push
mov
and
jns
or
cwtl
das
inc
bound
and
faddl
rcrl
push
xor
add
push
jp
ret
or
mov
in
loope
rclb
cmp
nop
dec
mov
adc
xchg
add
or
dec
nop
cwtl
push
push
jmp
mov
jns
xchg
mov
out
fistpl
repnz
dec
dec
dec
cmpsb
ret
add
scas
movsl
add
movsl
jne
dec
cmc
sub
jl
clc
xor
jbe
lods
sub
xor
inc
data16
mov
jg
ds
test
in
push
cmp
in
push
xchg
mov
xor
xchg
sbb
in
jbe
jg
pop
dec
cmp
mov
sub
cli
mov
les
xor
push
sub
ja
mov
push
repnz
push
in
add
add
pop
mov
jbe
pop
add
rolb
mov
addr16
jecxz
sbb
cltd
clc
cltd
aas
xor
push
push
lods
lods
xor
jae
mov
fwait
je
nop
push
outsl
les
push
cmp
dec
mov
pop
in
cmp
outsl
mov
or
jne
not
and
ret
dec
sub
cmp
cmp
add
out
sbb
mov
mov
rclb
push
movsb
mov
xor
mov
sub
cmp
popf
imull
insl
rclb
mov
and
xor
xchg
pop
hlt
xchg
push
jmp
mov
aaa
pop
in
outsb
int3
arpl
and
mov
ret
inc
xlat
call
and
sbb
ljmp
js
xor
sub
xchg
xor
inc
xlat
dec
jo
bound
insb
xchg
sti
jns
add
cmp
dec
mov
cmpsb
das
cmp
fistps
cmp
in
fmuls
add
xchg
mov
inc
frstor
cmc
push
pusha
leave
fucomp
addr16
xor
mov
add
in
jg
dec
jl
imul
pop
sbb
sbb
mov
js
dec
mov
push
mov
mov
enter
mov
adc
scas
subl
or
loopnew
int3
adc
stos
dec
xchg
lock
xlat
inc
mov
lods
jmp
or
adc
push
lahf
notb
repz
and
and
shr
in
sbb
lods
mov
inc
sub
pusha
sub
jne
inc
out
lea
shlb
push
cli
ja
lea
rolb
jnp
adc
pop
mov
xchg
sarb
jne
addr16
pusha
cltd
cmpsl
ja
xor
call
pop
dec
and
sub
filds
dec
dec
in
shrl
push
add
shlb
int
xchg
imull
cwtl
in
rcrb
out
outsl
ja
xor
mov
shl
push
mov
ret
mov
mov
jnp
or
iret
cmpsb
push
sti
je
lds
aas
adc
rclb
lods
push
repz
testl
or
inc
aad
int
fldt
ret
ret
mov
xor
aad
mov
xchg
jle
in
test
ja
and
loopne
test
loope
xor
dec
loopne
push
xchg
ret
mov
rcpps
inc
mov
call
mov
pop
fistpl
mov
jg
aam
gs
inc
xchg
fisubrs
dec
gs
xchg
test
mov
cmp
pop
sti
fwait
aam
pop
cltd
je
cwtl
out
cmp
xlat
lret
adc
lods
jo
ficoml
lcall
push
jo
jae
and
out
jl
fnstsw
adc
fldenv
imul
jne
mov
ljmp
mov
movsl
jno
lret
adcb
test
push
ss
cli
push
lret
das
cmp
pusha
in
push
sub
dec
sarb
leave
push
adc
fisubl
sbb
mov
cli
xchg
cmp
sbb
mov
push
dec
stos
lcall
xor
insl
xchg
out
out
push
and
push
nop
add
or
enter
fwait
pusha
sti
mov
andb
insl
sbb
ror
into
pop
sub
mov
xlat
int3
arpl
inc
push
push
mov
inc
rorb
nop
enter
loop
cmpsb
out
in
lahf
ljmp
fwait
sti
add
outsw
sbb
negb
jo
fs
in
ljmp
and
cmp
cmp
dec
push
fwait
ja
popf
push
ljmp
dec
loopne
repnz
jnp
rol
add
divl
cli
lods
rcrl
mov
cs
cmp
es
add
jne
mov
jnp
xor
out
gs
in
cli
push
in
adc
xor
xchg
in
mov
push
iret
mulb
push
pop
push
out
pushl
cmc
je
dec
in
in
stos
mov
out
roll
cmp
mov
adc
add
fisubrs
or
and
pop
in
push
ja
loopne
xor
fistl
or
pushf
mov
dec
mov
int3
pusha
inc
les
nop
cmpsb
sub
pop
movsb
movsl
push
adc
push
mov
fiaddl
xchg
adc
sbb
jl
sub
hlt
mov
scas
push
in
xchg
nop
jp
lret
sub
shlb
nop
sbb
xlat
outsl
insb
cmp
push
dec
pop
dec
imul
in
shlb
pop
xchg
mov
jne
cmp
jno
test
mov
push
adc
inc
xchg
cmp
int3
cmp
repz
mov
dec
aas
std
xchg
jo
cmp
xchg
sbb
cld
aam
push
mov
stos
fsubr
shr
pop
ds
jo
aad
mov
cmpsb
inc
repz
outsl
sub
push
mov
cmp
inc
cli
jae
jge
incl
xor
cld
pop
cmp
hlt
dec
test
inc
and
jg
out
add
ds
or
je
xchg
cmpsb
mov
cmp
pop
adc
dec
inc
push
je
adc
xchg
pop
fs
cmp
or
scas
jge
pop
sub
jne
test
outsl
mov
mov
jle
pop
stc
mov
mov
jae
mov
pop
mov
cwtl
jle
test
push
imul
gs
imul
fildll
rcl
mov
fsubrl
mov
mov
arpl
nop
out
sub
lods
push
ret
insb
dec
int3
dec
add
int
icebp
cltd
xchg
add
enter
sbb
dec
pop
dec
jno
cmp
jns
cld
stos
adcb
outsb
push
mov
pushf
jb
nop
cmc
xchg
sub
pop
aaa
sub
sub
jl
test
jg
mov
lds
movsb
call
aam
testb
add
adc
std
mov
in
in
sbbb
loop
inc
pusha
lods
sub
jno
js
push
add
mov
clc
test
mov
or
stos
jl
lahf
jbe
dec
dec
cmp
data16
or
sub
loope
sti
mov
fsubrl
dec
sub
sbb
mov
imul
fbld
mov
stos
sub
mov
adc
lret
push
mov
out
push
adc
and
add
jecxz
mov
jecxz
fiaddl
subl
mov
mov
ds
xlat
call
cmpb
lret
outsb
adc
xor
ficoml
out
inc
in
inc
lahf
xor
cld
pop
out
cltd
pop
adc
and
cmpsb
out
mov
pop
xor
ret
dec
pusha
pop
dec
lahf
mov
mov
mov
popf
jl
das
or
lea
sahf
sbbb
or
mov
xchg
ficoms
in
xchg
jno
mov
push
movsb
mov
insl
add
cwtl
inc
out
pop
dec
loopne
inc
adc
sub
xor
inc
popa
cld
mov
add
and
mov
sahf
push
call
jecxz
and
push
lods
and
xchg
xchg
dec
roll
and
sub
lret
mov
cmp
lret
cltd
cmp
adc
dec
inc
adc
sti
mov
mov
cmpsb
pushw
add
stos
test
sbb
sub
fwait
add
or
scas
mov
cmpb
sti
stos
or
inc
sbb
gs
and
sub
std
in
jbe
rclb
xlat
outsl
or
inc
mov
dec
mov
jle
sbb
push
inc
cmpsl
fidivrs
jmp
gs
add
loope
and
dec
pop
add
jmp
test
orl
dec
xchg
sbb
mov
shlb
adc
mov
jmp
adc
dec
fwait
fwait
or
inc
ret
aam
sarl
mov
adc
push
xlat
pop
push
xor
js
dec
movsl
sbb
or
push
push
xchg
addl
aaa
aam
cli
cmp
icebp
mov
pushf
pop
cltd
std
or
into
fidivrs
rorb
popf
movsl
daa
mov
mull
imull
stos
adc
pop
sar
cmp
xor
out
jle
dec
test
mov
sbb
outsb
push
add
or
push
lret
inc
or
pop
jmp
sub
push
fwait
loope
jns
clc
arpl
dec
decl
mov
ret
shll
arpl
shrb
rcrb
mov
inc
data16
rol
je
and
insl
fsubr
ret
std
xor
hlt
push
cmp
mov
popf
in
ds
cmp
cmpsb
sti
mov
lds
mov
idivl
dec
je
jecxz
int
sub
mov
xchg
fstpt
inc
pop
divb
mov
xor
out
repz
push
sub
dec
scas
sub
xchg
inc
nop
push
popf
rcr
mov
loop
inc
dec
mov
xchg
scas
ds
push
inc
insb
cmc
mov
fisubl
pop
cmpb
call
sub
xor
mov
jne
movsb
jmp
popa
inc
adc
jbe
sbb
loop
adc
xchg
aam
sub
movsl
fidivl
pop
jmp
test
and
movsb
jge
adc
sbb
test
iret
shll
ror
cmp
ljmp
inc
adc
loope
inc
stos
movsb
push
dec
pop
sub
or
mulb
jp
push
jge
sub
sbb
cmp
insl
test
stos
enter
shl
adc
mov
jp
inc
push
and
pop
cmp
dec
and
sub
xorl
mov
pop
xor
dec
mov
inc
insl
in
sub
pushf
mov
jle
out
or
orb
pop
addr16
and
imul
add
aas
pop
test
push
ljmp
imul
push
sub
cmpsb
pop
push
sarl
adc
dec
pushf
pusha
clc
inc
call
aaa
inc
std
int3
sti
cmpl
pop
or
and
adc
mov
nop
inc
into
popf
cld
mov
mov
popf
sub
mov
cmc
dec
fidivrl
pop
les
or
daa
pop
mov
or
mov
sarb
push
lods
push
and
cmp
lret
repnz
pusha
stos
or
sti
bound
sbb
ret
dec
hlt
stos
mov
imul
mov
mov
fsubrp
fstl
inc
inc
cltd
mov
jmp
in
jp
sub
pop
jl
mov
or
insl
scas
je
mov
lea
daa
sbb
jg
mov
jae
faddl
enter
out
aaa
mov
fmuls
scas
in
push
xchg
push
sahf
pop
push
js
mov
xchg
add
and
test
mov
mov
cmpsb
clc
jg
dec
pushf
sub
sub
dec
pop
jge
sti
sub
or
or
xor
xchg
scas
aaa
je
push
movsl
xorl
xchg
sarb
dec
test
je
push
cltd
cmp
pop
jg
clc
cmp
pop
mov
das
pop
xchg
in
dec
loop
in
add
inc
dec
mov
lret
xlat
push
sbb
scas
xchg
mov
mov
iret
add
in
movsl
push
mov
movsl
sbb
loopne
adc
or
test
rcll
jle
das
cmp
xchg
cmc
cmp
inc
in
fnstsw
add
lods
cli
mov
mov
addr16
adc
leave
xchg
mov
pop
or
ret
xchg
gs
aaa
cwtl
xor
jecxz
xchg
xchg
or
cmc
test
andl
data16
or
dec
lahf
push
mov
push
sub
test
int3
mov
jle
rorl
nop
mov
jmp
sbb
or
idiv
mov
stos
inc
ficompl
push
adc
sbb
insb
adc
inc
jb
arpl
jo
mov
sub
data16
sub
or
sub
xchg
mov
mov
mov
shll
jo
add
sub
imul
mov
inc
adc
xchg
cmpsl
xchg
mov
adc
popf
std
inc
cmp
mov
mov
mov
dec
xchg
inc
push
leave
inc
xchg
adc
pop
or
loopne
add
pop
add
fcoms
adc
mov
sbb
lcall
cmp
in
les
nop
testb
sbb
into
clc
stos
repz
cwtl
das
test
dec
mov
imul
ja
mov
es
in
call
mov
aaa
pop
cmpsl
or
sbb
negl
jno
cmp
sbb
mov
test
cmp
bound
cs
mov
mov
aas
jno
sbb
cmp
in
sahf
mov
sarb
fsubr
sbb
and
add
test
lods
xchg
fwait
std
dec
xor
push
mov
jns
push
pop
xor
stos
sub
jle
lods
inc
shll
xlat
out
pop
xchg
daa
divl
cld
sub
fiaddl
dec
jnp
mov
js
mov
cld
jo
dec
cli
mov
test
nop
mov
in
ja
pop
enter
sbbl
pushf
or
ret
mov
jl
inc
bound
xchg
scas
les
xchg
mov
pop
les
jbe
rep
push
push
imul
or
inc
test
add
fwait
jg
ss
adc
cmp
mov
sub
push
out
dec
add
das
fsts
push
mov
outsl
sbbl
push
adc
out
sub
pop
and
mov
add
xor
inc
and
xor
test
dec
in
jne
repnz
add
cltd
scas
out
daa
popf
push
ficoms
fimull
add
adc
pop
rcr
mov
jns
push
jmp
sub
das
adc
sahf
dec
pop
cmp
jo
fndisi(8087
in
rorb
mov
in
push
sbb
xor
mov
push
jne
pop
je
pop
movsl
sub
push
cmp
mov
xchg
push
lret
add
mov
cmp
ret
mov
cmc
dec
and
mov
add
leave
sub
outsl
lcall
sub
mov
and
clc
xchg
mov
pop
and
xchg
test
xor
add
jbe
mov
xorb
mov
xlat
sub
mov
xor
push
imul
mov
je
lahf
cmp
push
mov
add
xorb
movsb
adc
imul
outsb
into
mov
pusha
or
jnp
stos
push
or
pusha
stos
mov
xor
jb
cmpsb
jp
lcall
or
jecxz
in
pop
jmp
scas
xchg
das
jo
pop
movsb
dec
xor
inc
mov
jno
xchg
aad
lea
repz
sbb
add
and
nop
push
or
xchg
sbb
loopne
and
das
pop
mov
adc
lds
sbb
pop
mov
in
pop
ret
insb
sub
and
dec
cli
push
jle
or
or
movsb
movsl
xchg
loope
inc
pop
mov
pushf
mov
loope
icebp
fwait
stos
add
sub
hlt
cld
aaa
add
or
cltd
and
mov
jmp
loop
jb
movl
loope
cmp
pop
hlt
std
das
cltd
xor
cmp
sbb
or
jle
mov
or
ficompl
sub
and
aam
outsl
loop
sahf
jecxz
cmp
test
sbb
xchg
stos
aam
cmpsb
std
mov
not
mov
dec
mov
and
jns
and
fsubrl
pop
cwtl
fsubs
push
sub
xor
sub
jbe
add
insb
jae
adc
and
xlat
out
mov
out
rclb
push
lahf
gs
pop
jne
jne
add
xor
sarl
dec
jno
aam
jecxz
dec
and
dec
sbb
xor
mov
push
cmp
and
test
int3
mov
pop
xor
pop
out
lret
fcomi
stos
mov
leave
sbb
sub
ficoms
icebp
fsubr
loope
mov
push
addl
mov
dec
jmp
loop
iret
push
mov
dec
sbb
sbb
push
or
sbb
cmp
sbb
data16
mov
shll
in
inc
inc
arpl
pop
sub
mov
inc
fisttpll
cltd
and
dec
sbb
xchg
sahf
insb
xchg
mov
cld
movsb
cmp
adc
add
mov
xchg
mov
dec
sbb
in
movsb
sbb
shlb
fidivrl
xor
jo
sbb
mov
pop
lea
popf
xor
jle
fisubrl
movsb
adc
cli
sbb
jno
rcll
jecxz
push
and
sub
les
add
xchg
test
jns
hlt
xchg
add
incl
or
xlat
mov
or
mov
jae
mov
sbb
lahf
mov
cmpsl
paddsw
fisubl
jl
scas
jle
in
xor
cmp
std
pop
jae
mov
decb
fists
xchg
negl
jl
push
sub
ret
in
pushf
cmp
sbb
jmp
add
or
movsl
aas
jbe
dec
cmp
imul
rcrb
arpl
push
jl
pop
in
mov
pop
imul
and
mov
mov
jp
das
mov
mov
adc
lret
cmpsb
jecxz
or
xchg
cmpsl
mov
pop
inc
mov
xchg
pop
sbb
push
mov
dec
cmp
test
jecxz
lret
inc
sti
out
add
jecxz
cwtl
lahf
add
push
shl
stos
outsl
imul
lds
mov
mov
pop
lock
test
jb
gs
xchg
pop
iret
fcmovnu
pushf
xor
inc
inc
sbb
leave
pop
call
dec
sub
cwtl
dec
test
pop
lcall
pop
cmp
pop
xor
int
rcrl
sub
in
data16
push
jbe
xchg
push
push
sarb
and
movsb
adc
ficomps
jns
mov
lret
fbld
cmpsl
sub
inc
shlw
push
sbb
mov
sbb
or
shrl
xchg
int
mov
xor
mov
cmp
jae
mov
fcmovb
pop
inc
bound
and
jae
xor
lods
mov
negl
jnp
jne
pop
enter
mov
xor
adc
cmpsl
fstpl
add
js
xor
adc
in
jb
out
push
sbb
mov
dec
adc
dec
addb
shrl
push
sub
mull
adc
sbb
pop
test
test
enter
push
xor
out
mov
pop
add
push
leave
movsb
in
push
push
es
pushl
roll
in
or
add
jns
cld
sub
arpl
sbb
mov
in
jl
lds
hlt
mov
adc
negl
inc
mov
cmp
jno
ds
cltd
xchg
ret
sbb
sbb
xchg
push
ja
sub
mov
pop
int
das
addr16
pop
repnz
imul
mov
mov
shll
cld
inc
jno
xorb
dec
dec
scas
data16
mov
xchg
jns,pn
dec
jl
pushf
mov
int
add
mov
push
mov
pop
shll
xor
daa
pop
cmp
jmp
mov
fdivrp
xchg
adc
sbb
stos
xor
push
ja
popl
repnz
scas
lods
mov
dec
push
call
inc
shrb
add
xor
mov
inc
lea
pop
mov
jmp
icebp
fdivl
fistl
shlb
fildl
xchg
pop
scas
add
fsts
repnz
pushf
test
js
out
add
in
inc
pop
inc
inc
sbb
bound
adcb
mov
jecxz
rorl
fcomps
loope
pop
inc
push
aaa
hlt
imul
std
adc
mov
cs
test
lods
jb
or
mov
lods
push
clc
iret
add
xchg
repz
inc
or
in
adc
divps
push
cltd
inc
aaa
idivb
notl
push
mov
clc
lcall
in
loop
stos
cwtl
add
jl
out
and
or
es
lret
mov
xchg
outsl
sbbl
into
cwtl
jo
sti
lds
push
adc
mov
scas
dec
push
gs
mov
andl
jne
shlb
rcr
dec
dec
inc
fidivrs
lods
lret
and
push
pop
inc
stos
shll
test
and
cmp
jno
sbb
adc
js
insb
stos
in
sbb
and
rclb
aas
mov
fistps
or
jle
mov
inc
sahf
test
sub
xor
xchg
xor
adc
mov
add
push
sbb
rcrb
int3
fldl2e
push
lds
add
bound
inc
sbb
hlt
cwtl
cmp
mov
sti
es
cmp
xor
mov
stos
dec
in
xchg
shrb
out
scas
jbe
xor
sub
sub
add
scas
out
add
push
fsubr
sti
mov
scas
inc
push
xchg
ret
inc
fidivrs
xor
js
jecxz
pop
sbb
or
iret
stos
fistpll
lods
lds
xor
xchg
lea
pop
fcompl
ret
inc
fsubp
out
pop
jbe
cli
pop
fimuls
inc
mov
aad
lock
lods
mov
lods
push
mov
cmp
cmp
cli
ds
fcoms
xlat
or
sbb
test
adc
shl
inc
mov
dec
xor
xchg
fstpl
aad
jne
jg
cmp
sub
dec
testb
insb
lea
ds
out
dec
cmc
call
test
jecxz
and
mov
scas
roll
jo
sub
mov
xor
mov
xchg
mov
xchg
mov
fcmovne
jns
out
out
pop
scas
leave
push
mov
roll
aam
mov
push
inc
xlat
jb
pop
repnz
adc
jns
xchg
call
fwait
sti
adc
movsb
pop
sub
pop
stc
pop
stc
stos
inc
js
sbbb
jecxz
mov
sbb
or
adc
popf
inc
movsl
iret
xchg
jecxz
jb
mov
mov
push
sti
push
arpl
xor
fstps
out
in
gs
frstor
xchg
sbb
sbbl
jecxz
push
jnp
arpl
push
push
dec
mov
jno
sbb
push
shlb
push
lahf
repnz
pop
out
pusha
imul
jo
xchg
xchg
cmp
push
pop
scas
jb
mov
nop
xor
popf
sub
ss
mov
fistpl
jns
or
cld
push
fcomp
mov
mov
iret
fsts
push
bnd
and
fsubrl
ss
push
in
add
mov
insb
sub
fisubs
xchg
outsb
rcl
aaa
fisttpll
sbb
pop
nop
pop
stc
push
push
add
adc
push
mov
in
sub
jns
push
adc
push
xor
mov
faddp
pop
call
rol
lock
movsl
movsl
dec
cmp
repnz
out
fsubs
dec
pop
ljmp
sub
orb
mov
lock
jmp
cmp
fisubrs
clc
xchg
in
inc
das
outsl
mov
lahf
dec
icebp
or
push
xchg
dec
push
scas
push
out
jecxz
pop
ja
mov
mov
fwait
cmp
fsubr
cmpsl
jo
or
mov
xchg
lret
stc
lea
mov
loope
push
das
inc
lcall
in
daa
xchg
fstps
std
dec
push
jno
pop
mov
into
sbb
lahf
mov
out
subb
popa
mov
and
xor
jl
fsubrl
mov
shrl
adc
pop
repz
clc
movsl
cmp
dec
ds
ljmp
sbb
pop
mov
jp
or
sti
mov
mov
imul
repz
push
stos
jl
dec
xchg
pop
push
test
bnd
aas
xchg
mov
and
sbbl
cmp
dec
cmp
mov
inc
sbb
in
jecxz
inc
push
shrl
cmpb
mov
pop
rcrl
nop
mov
mov
mov
ret
clc
lret
inc
inc
aaa
xchg
mov
xchg
in
test
sahf
pusha
ret
rorl
push
jb
test
pop
ds
xchg
mov
push
andl
rcr
and
pushf
mov
aad
or
fidivs
outsb
sbbl
movsl
cmp
mov
jo
pop
adc
pop
add
ds
popa
orl
dec
fwait
bound
inc
dec
jmp
mov
push
and
cs
inc
aas
imul
negb
or
xor
add
aad
lret
dec
xor
pop
xor
sub
xchg
test
add
shlb
je
data16
int3
push
mov
std
movsb
mov
inc
mov
test
push
inc
arpl
inc
push
je
adc
fidivrs
adc
pushf
xchg
sbb
call
jl
lock
add
or
pusha
pop
xor
popl
sbb
addr16
decb
pop
das
fs
pop
and
pop
cmp
incl
cmp
call
ret
jecxz
out
pop
xchg
les
xorl
ss
stc
dec
push
test
xor
cmp
and
jno
sar
sub
xor
dec
pavgb
rcll
push
and
sbb
lcall
dec
fnstsw
add
data16
cld
sti
adc
or
sub
xchg
fldt
repnz
pop
incb
lahf
leave
nop
push
push
aas
sbbb
mov
sbb
lods
ljmp
pushf
cli
sti
movsl
pop
aaa
repz
decb
ucomiss
add
inc
sbb
testl
fisttps
xchg
add
xchg
dec
dec
je
jmp
sbbb
dec
in
repnz
mov
pusha
rorb
and
shll
mov
ljmp
lret
hlt
add
dec
dec
xchg
mov
xor
jmp
popa
jmp
fidivrs
cli
movsl
xor
shl
adc
aaa
test
adc
pop
and
dec
sahf
outsl
jns
stos
jmp
or
int3
pop
fldcw
dec
cmp
mull
mov
shll
xchg
neg
jg
mov
nop
push
out
jnp
daa
mov
or
jp
outsb
ret
je
pop
in
mov
fs
fisttpl
js
jmp
fisttps
cmp
dec
mov
adc
dec
rolb
pop
adc
or
loope
sbb
imul
sbb
outsl
out
adc
imul
fdivrl
mov
bound
lock
dec
mov
inc
out
into
mov
int
rclb
inc
inc
pop
imul
ljmp
inc
fidivrl
sarl
sarb
es
xchg
mov
dec
xor
test
dec
cmc
mov
popf
lods
push
test
cmpsb
inc
test
in
push
fsubp
mov
into
or
push
mov
cld
xchg
mov
test
pop
test
lods
les
jnp
pop
xor
or
loopne
adcb
fcmovbe
inc
lds
js
dec
ljmp
rclb
xor
add
mov
cmpb
cltd
jo
je
xchg
mov
push
cmp
test
dec
ja
ret
insb
gs
fnstsw
xor
cli
mov
mov
cmp
into
dec
pop
jmp
inc
pop
xchg
xchg
icebp
sbb
test
outsb
popf
mov
xchg
xchg
je
jmp
cli
cmc
les
insl
ljmp
sub
inc
push
rcll
dec
enter
je
mov
lods
ret
aas
fldcw
mov
or
jg
shr
fwait
dec
pusha
arpl
cmp
scas
cli
pop
cmp
leave
jle
adc
outsb
inc
xchg
inc
mov
cli
or
lret
add
lock
aaa
into
lret
push
cli
sbb
push
jae
or
mov
pop
std
xchg
xchg
shll
mov
mov
scas
pop
inc
in
adc
and
xchg
push
sti
rcrb
mov
or
jnp
sub
pushf
out
inc
push
popa
mov
cltd
xor
cmpsb
int
fdecstp
hlt
stc
or
movsl
mov
sub
dec
pop
jge
fdivs
sahf
in
inc
stos
sbbl
shlb
mov
add
xlat
outsl
shlb
dec
xlat
pop
in
inc
fadds
jne
mov
cmp
les
lea
enter
add
dec
sub
jge
dec
mov
gs
jno
ja
arpl
mov
outsb
shlb
andb
add
stos
adc
fstps
imul
fcompl
sub
push
insb
ljmp
pusha
mov
shlb
cli
mov
int3
jl
and
inc
mov
and
test
add
cld
push
shlb
xlat
fs
mov
sub
sbbb
or
pop
jl
sub
add
shll
daa
or
in
fldenv
out
rclb
dec
push
pushf
cmp
out
add
scas
dec
mov
movsl
cmp
cmpsl
loop
loope
inc
push
jge
xchg
mov
mov
xlat
jb
cmp
movsb
add
repz
cwtl
stos
add
jp
sub
outsb
push
es
push
add
gs
and
loopne
or
call
xor
push
mov
in
jmp
movsl
cmp
or
pop
daa
xor
loope
jp
inc
pusha
xchg
and
fcompl
outsb
xchg
jbe
adc
inc
insb
jle
dec
fwait
xor
dec
pop
pop
pop
inc
xlat
mov
gs
and
push
xchg
dec
loop
or
outsl
xor
imul
cmp
cltd
adc
jae
xor
push
pop
cmc
sbbl
cmp
lahf
fildll
ja
data16
xor
xchg
add
int
mov
int
xchg
mov
in
cld
pusha
xor
ss
adc
scas
ret
repz
loopne
out
dec
jp
lods
ljmp
repnz
pop
xor
pop
pop
mov
jecxz
in
push
dec
inc
add
or
int
idiv
or
rcrb
in
mov
in
daa
test
adc
fwait
mov
stos
test
push
or
addb
fwait
scas
es
inc
loope
fidivrs
in
and
inc
call
push
aad
cmpb
mov
or
roll
xchg
outsb
dec
adc
movb
and
jl
movsb
jmp
mov
js
mov
inc
dec
pop
dec
pop
call
add
jmp
mov
popa
xchg
lret
add
jg
fsubs
mov
push
cld
xchg
xchg
sbb
cmp
cmp
outsb
mov
shlb
xchg
loope
inc
jmp
or
in
subb
mov
bound
adc
rorl
arpl
xchg
lock
jae
out
ror
fcoml
sub
cld
jp
insl
cs
pusha
mov
out
loopne
sti
pop
push
mov
les
pop
jecxz
cmp
mov
pop
xor
jl
insl
addb
pop
mov
repz
scas
push
call
or
cmp
jp
push
addl
jecxz
pop
popa
outsb
jne
mov
xchg
adc
or
stos
test
mov
clc
pusha
mov
fwait
cmpsl
das
xchg
es
inc
jno
mov
push
or
repz
test
std
std
dec
sub
mov
es
adcl
lahf
sub
outsb
push
jne
push
sti
sub
sub
push
test
int3
and
mov
xor
inc
xchg
and
jge
cs
jbe
pop
dec
stos
jnp
scas
ret
inc
push
jle
mov
lahf
enter
call
xchg
ljmp
sub
xor
aaa
repnz
jmp
test
sub
fucomp
dec
ret
xchg
mov
pop
lods
mov
cs
jle
loop
shl
ret
inc
sbb
addr16
shrl
leave
dec
add
pop
xor
decb
xor
dec
pushf
shlb
pusha
cmp
popa
and
jecxz
push
lret
int
mov
pop
pop
lcall
xor
xchg
jge
inc
adc
jae
leave
xor
pop
jmp
fsubs
push
mov
pop
hlt
fistps
shrb
sub
cmp
dec
ja
add
ss
xorb
cmp
xlat
jge
mov
stc
int3
rcr
scas
cli
inc
inc
xchg
mov
push
movsb
mov
nop
push
sbb
std
xchg
ja
or
mov
movsb
cmp
stos
jnp
sub
xor
xchg
push
add
sub
lea
gs
daa
inc
lods
fs
or
inc
pop
stc
ljmp
mov
sub
lea
hlt
or
fninit
movsb
jmp
mov
push
or
mov
adcb
or
sti
aad
repz
pop
icebp
mov
cmpsb
mov
lret
mov
roll
scas
or
cmp
cld
sub
out
aaa
mov
mov
cmc
sar
lcall
lock
dec
adc
rorb
in
cmp
and
xlat
and
mov
or
call
scas
add
mov
or
jl
mov
fists
dec
lock
mov
mov
xorl
mov
ja
cmp
and
aaa
push
aam
xor
pop
lret
mov
insb
lods
xchg
lahf
push
push
lds
insl
jmp
shrl
mov
pop
lcall
sub
jno
movsb
adc
fidivl
push
cmp
lods
mov
adc
jo
std
xchg
das
xchg
mov
lods
dec
add
movsb
int3
outsb
jmp
mov
fincstp
inc
mov
cltd
cli
cmp
pop
push
js
xchg
jmp
pop
andb
scas
xchg
sbb
jns
mov
lock
mov
push
aaa
push
addr16
mov
addr16
es
not
enter
clc
and
and
lods
and
ret
jbe
aam
pop
out
xchg
inc
mov
aas
cmp
sbb
xlat
sbbl
cmp
xchg
sbb
add
inc
lret
lock
dec
scas
les
add
pop
stos
push
popf
js
cld
adc
cs
neg
add
xor
jge
stos
push
rcrl
loop
cmp
fbstp
mov
pop
je
jg
mov
pop
iret
xor
pop
fadd
insl
fimull
lcall
and
call
and
adc
xor
push
scas
insb
notl
les
repnz
bound
leave
and
push
mov
pusha
std
imul
lret
ja
test
data16
adc
add
daa
pop
gs
pop
mov
ficompl
mov
fsubr
cmpsl
in
and
movsb
sub
jmp
inc
popa
or
sbb
call
xchg
out
xchg
jb
and
add
cltd
xor
inc
lcall
insb
push
push
xchg
out
xchg
lock
dec
fistps
andl
imul
fldl
xchg
in
xchg
subl
sbb
mov
ret
jnp
roll
sbb
cmpl
pop
hlt
jle
add
cli
popa
jl
pop
xchg
mov
xor
and
mov
jmp
inc
fdivl
jge
cmp
cmp
mov
sbb
xchg
fs
pop
stc
inc
mov
test
sbb
pop
pushf
jne
or
enter
scas
mov
arpl
je
pop
lods
adc
jp
fisubrl
rcr
jmp
iret
xor
and
movsl
int3
mov
fcmove
bound
stos
jmp
fnstcw
pop
rcrb
inc
and
push
fnstcw
shrl
cli
mov
add
lods
and
dec
mov
lret
push
fidivrs
call
ret
hlt
sub
cmp
mov
out
stos
cli
fnstcw
push
xor
lret
or
add
xor
push
in
pop
push
cltd
push
js
aaa
pusha
fsts
addl
pop
mov
aas
xchg
jge
loopne
mov
dec
push
cmpsb
xor
add
xchg
adc
test
xchg
into
icebp
pminub
xlat
repz
xchg
fisttpll
test
rcrb
in
insl
cmp
ja
insb
xor
dec
fdivp
in
push
int3
iret
jecxz
sti
adc
sub
and
adc
inc
popa
shrb
in
push
ds
jp
jg
lcall
data16
fcomps
or
in
pop
pop
jb
test
out
mov
mov
add
mov
or
fcoml
fsubrl
inc
data16
push
imul
nop
xor
push
adc
xor
sbb
jmp
sbb
movsb
jae
pop
and
dec
hlt
add
mov
xlat
mov
xchg
mov
pop
out
ret
inc
and
popf
lret
shlb
jmp
jne
js
add
fsubr
push
and
mov
ss
push
aad
push
or
lea
dec
jecxz
push
cmp
inc
xor
jle
in
pop
mov
icebp
call
and
mov
sbb
dec
arpl
lods
mov
mov
xor
inc
dec
adc
push
mov
xor
sti
sub
sbbb
fwait
rcrl
xor
stos
add
ret
repnz
cmp
sub
enter
jp
add
mov
lret
bound
inc
xor
daa
jecxz
sbb
mov
xchg
mov
data16
rorl
ss
cmp
xlat
repnz
imul
push
int
test
int
sub
rolb
inc
daa
mov
daa
inc
sbb
ss
mov
fbstp
inc
outsb
rorb
xchg
mov
aas
repnz
insb
and
es
sbb
mov
add
pop
or
dec
xor
lds
stos
lea
bound
mov
jae
mov
stc
lret
mov
repz
rcrl
dec
adc
push
call
or
imulb
out
int
mov
xchg
adc
inc
movsl
xchg
call
mov
add
mov
pop
push
inc
or
cs
pop
mov
xchg
lods
push
shl
add
dec
jmp
jns
leave
mov
and
mov
outsb
sub
dec
hlt
pop
scas
mov
rolb
andb
imul
xor
add
add
lahf
inc
mov
and
xor
movsl
sbb
pop
xchg
cwtl
xchg
sti
pop
add
pop
pop
or
fs
push
in
call
test
dec
xor
dec
rcr
mov
inc
repz
pop
and
gs
push
add
das
sbb
repnz
pushf
outsl
nop
popf
call
cmp
pop
shrl
xlat
insb
pusha
negl
mov
jne
rcrl
fs
adc
and
stos
pop
lret
testl
loope
iret
data16
lret
cmp
in
test
pushf
push
in
xchg
jae
in
sbb
push
xchg
xor
repnz
push
idivb
in
pop
insl
jg
jg
mov
or
into
stc
and
icebp
push
in
sarl
std
jne
shrb
rol
pop
xchg
xchg
fsubs
sahf
lods
jp
in
inc
hlt
mov
mov
in
push
imul
add
xchg
xchg
lock
and
dec
test
cmpb
clc
pop
stos
lods
xor
push
out
pop
mov
jg
mov
lods
dec
pusha
js
xchg
jo
bound
inc
insl
sub
mov
jl
repnz
mov
adc
lret
cmp
pusha
fcompl
inc
cli
mov
daa
mov
inc
lods
mov
lahf
xor
cmp
mov
ljmp
fldcw
inc
out
bound
outsl
cli
xchg
popa
out
or
mov
popf
xchg
repz
jbe
dec
pop
mov
lahf
stos
cmp
xlat
outsb
cmc
shll
and
mov
subl
fsub
testl
mov
sub
lods
mov
pop
push
jnp
loope
out
roll
push
jb
sahf
popa
mov
pop
jb
cmp
adc
and
jg
pusha
cmpb
inc
add
out
or
sub
inc
sbb
rcr
dec
loope
dec
fld
in
enter
out
mov
ret
test
push
daa
dec
cmpsb
fbstp
jne
pusha
insl
test
pop
mov
fs
testl
cmp
loopne
aaa
jbe
ds
add
mov
push
popa
xchg
xchg
cs
push
fptan
push
sub
movsl
mov
lret
cmp
insl
sbbb
rcrl
lea
insl
mov
or
mov
mov
std
lods
imul
inc
mov
jbe
pop
fistps
inc
fisubs
inc
dec
mov
pop
jne
cmp
stos
inc
cld
cwtl
test
adc
push
mov
dec
push
shr
mov
sub
js
lds
inc
mov
push
in
or
and
add
dec
adc
movsb
into
mov
call
insl
cltd
call
idivb
int
in
inc
out
push
push
rcr
xchg
ret
sub
or
mov
sahf
insl
cmp
test
adc
mov
call
jp
out
xlat
loop
leave
fistl
jno
mov
fucom
xchg
inc
add
mov
adc
adc
fcmove
cmp
and
in
or
lcall
imul
mov
daa
sbb
test
popf
cmp
mov
jae
pusha
ror
insb
sti
jmp
mov
arpl
fcomi
jmp
outsl
push
mov
nop
mov
call
shll
cmp
repz
dec
arpl
jl
mov
shl
add
cmp
out
orl
js
fnsave
popf
lods
mov
in
adc
mov
ds
call
fbld
inc
push
ja
inc
push
lahf
xchg
xorl
jge
or
jge
jle
adc
sub
and
lcall
and
push
sub
fidivrs
fdivrl
das
movsl
cmp
xlat
ja
xor
and
int3
dec
fs
loop
es
dec
lods
fmull
push
call
pop
jmp
mov
jb
sub
inc
sbb
fidivrl
push
dec
repnz
pop
test
xchg
fstpt
insl
insb
in
sbb
xchg
nop
mov
ret
jp
inc
and
ds
pushf
cwtl
xor
inc
mov
xor
and
or
das
inc
movsb
pop
xor
cs
andl
push
sub
inc
inc
ror
pop
lea
decl
xchg
mov
sub
stos
mov
popf
sub
inc
xchg
lahf
ja
stc
stos
add
inc
jge,pt
outsl
and
push
in
cmp
add
push
sub
jg
cmc
scas
inc
mov
bound
enter
cmp
leave
stos
sbb
dec
enter
test
rorb
cmpsl
jmp
or
dec
mov
fs
jne
xor
push
xchg
push
add
daa
je
mov
test
and
aam
jmp
cmpsb
das
add
ljmp
rorl
iret
lcall
mov
or
mov
mov
ficomps
and
leave
fsubs
aaa
add
lds
test
ss
cmp
mov
lods
jo
inc
push
dec
fimull
add
xor
cwtl
cmp
push
das
mov
mov
cmp
es
xlat
aam
icebp
push
dec
hlt
ss
jo
ss
std
inc
fsub
mov
scas
loopne
mov
test
out
and
int
jo
call
out
fidivrl
bound
jmp
imul
sbb
fwait
jbe
inc
push
pop
cld
outsl
add
loope,pn
sahf
clc
lods
add
lret
jge
mov
push
call
add
pusha
inc
test
leave
test
sti
lds
test
out
xchg
outsl
push
push
fsubrp
or
and
jns
jns
mov
mov
mov
mov
push
or
jecxz
xchg
inc
sbb
inc
xchg
movsb
mov
cltd
jmp
mov
xchg
mov
pushf
xorb
inc
out
pop
mov
sub
jecxz
aas
gs
insl
xlat
mov
pop
mov
add
mov
cmp
or
inc
jle
je
fbstp
repnz
or
arpl
push
fmull
jge
cmp
into
out
dec
jge
into
aas
into
in
xor
pushf
jae
fbld
loop
cld
jl
and
mov
lds
sub
nop
adc
arpl
add
cmpsl
or
push
sbb
sbb
sub
mov
dec
mov
adc
shrl
add
mov
loopne
pop
mov
jns
rolb
gs
inc
mov
push
movsb
cmc
adc
scas
fistl
inc
lods
test
jns
icebp
dec
js
xor
pop
repz
mov
cmc
or
sub
xchg
cmp
fistl
inc
or
push
movsb
inc
mov
out
dec
shlb
cld
insb
mov
mov
rol
fildl
rclb
cmpsl
xor
jl
or
out
call
sub
inc
mov
shlb
and
mov
rolb
test
mov
xchg
push
sbb
mov
pop
ljmp
cmpsb
shll
xchg
adc
add
mov
mov
popf
mov
je
loop
and
mov
or
das
in
iret
sbb
loopne
sbb
inc
mov
mov
ljmp
ja
inc
sbb
ds
xchg
jo
mov
out
pop
fdivrp
ds
pop
bound
push
dec
out
stos
inc
stos
cmpl
inc
xlat
mov
cmpsl
push
fldl
repz
sbb
insb
pop
cs
adc
mulb
sub
push
test
stos
aas
mov
add
mov
jmp
add
addr16
lcall
and
and
xchg
mov
pop
subl
mov
push
mov
gs
ss
mov
je
xchg
jbe
xorl
jle
outsb
or
scas
cmp
ljmp
push
sti
pushf
xor
xchg
addr16
sbb
xchg
lods
inc
mov
dec
bound
xchg
imul
lods
mov
mov
inc
and
cmp
mov
stos
add
loope
in
data16
pop
int3
xor
jns
adcl
jl
clc
fwait
or
mov
cmp
sbbl
or
daa
imul
lcall
push
push
pop
insl
adcl
pop
mov
fimull
out
lock
sbb
mov
iret
loope
hlt
dec
sbb
scas
mov
mov
fnstcw
dec
stc
jo
imul
mov
adc
insb
call
or
push
data16
add
push
aaa
pop
test
test
push
out
dec
mov
jge
outsl
repz
mov
fmuls
xchg
sbb
mov
aaa
dec
jmp
add
adc
pop
pop
call
or
add
sbb
sub
mov
insl
mov
fldcw
cmpsl
mov
mov
jbe
jb
psubw
adc
repz
pop
out
or
mov
fstl
mov
js
stos
jne
filds
pop
xor
add
jmp
inc
test
cmp
andl
lcall
lret
dec
call
dec
ret
nop
inc
add
or
loop
dec
pusha
jl
hlt
rorl
stos
loopne
xchg
pushf
fmul
int
push
push
or
mov
je
mov
lret
cmp
ljmp
dec
iret
jmp
add
jbe
and
inc
ficomps
fnstcw
mov
jne
sub
pop
cmp
dec
mov
cmpxchg
iret
aaa
into
mov
lahf
push
adc
mov
out
cmp
dec
or
pop
fs
call
mov
rcll
out
ret
mov
jb
pop
shll
jmp
out
lret
or
xchg
adc
fimull
fwait
adcb
push
cmp
testb
nop
mov
fs
pop
adc
dec
cmp
cmp
dec
popa
aam
cmp
jno
push
ss
xchg
aaa
repnz
fstps
mov
mov
mov
mov
inc
dec
cmp
jno
inc
rcr
mov
lock
mov
jae
xor
fs
xchg
out
sub
std
lea
es
adc
mov
lock
pop
fstps
jno
push
in
inc
insl
mov
sbb
xor
jg
repz
mov
loopne
adc
and
pushf
adc
clc
xor
stos
jmp
dec
xor
jne
in
xchg
mov
in
xor
xchg
add
dec
xor
cmpsl
pop
stos
out
cwtl
mov
aad
jne
out
ljmp
sarl
pop
data16
loope
stc
sbb
cmp
sbbb
or
dec
ss
gs
cmp
test
shrl
sbb
movsb
in
push
push
out
add
dec
icebp
xchg
jg
add
add
sahf
mov
out
push
sbb
aad
xor
sub
pop
insb
jbe
fsubrl
inc
dec
push
inc
and
pushf
pop
idiv
inc
sbb
xor
cmpsb
lock
inc
lods
les
out
arpl
xchg
rep
subb
insl
add
dec
stos
inc
xorb
hlt
xchg
fcmove
pusha
push
xor
jle
scas
cli
xchg
mov
push
sbb
jae
xlat
push
pushf
repz
iret
add
xchg
jbe
xlat
test
inc
movsl
cmp
scas
xor
or
jl
lahf
sub
mov
dec
ret
shr
sbb
aas
push
cmp
dec
fs
push
push
xchg
rcrb
add
mov
sahf
push
sub
leave
sub
xchg
mov
fdivrl
mov
fimull
push
sbb
dec
dec
leave
in
jecxz
dec
adc
and
push
pusha
jp
sti
and
pop
mov
out
sarl
xchg
adc
repz
xor
and
test
add
gs
sub
inc
mov
ljmp
fwait
add
mov
je
ffree
sub
xchg
xlat
popa
push
jle
inc
fwait
ret
jno
lcall
mov
repnz
aam
iret
push
icebp
mov
rcrl
ret
mov
xor
fwait
push
loop
test
into
mov
lret
adc
fisttpll
out
pushf
or
nop
lock
and
or
movsb
adc
cltd
int
repz
in
adc
in
xchg
adc
ss
sti
and
add
mov
arpl
lods
call
ja
pop
cmpsl
out
test
into
xchg
test
out
cmc
leave
mov
gs
mov
rcrb
or
pop
mov
movsb
data16
in
lds
cmpsl
adc
iret
fwait
inc
lea
cmp
cmp
inc
fmul
mov
or
dec
dec
ret
jl
movsl
dec
push
inc
dec
cmc
enter
push
jae
dec
int3
shlb
and
push
mov
mov
jg
or
inc
dec
pop
adc
jb
mov
outsl
fwait
es
inc
lods
cmp
fucomp
add
sti
rcrl
mov
js
inc
xor
in
popa
out
aam
add
ljmp
pop
lret
inc
leave
mov
adcl
bnd
xchg
push
mov
pop
cmc
nop
dec
sbb
jb
in
aaa
xor
pop
or
xchg
lret
or
and
into
sarb
jns
lcall
push
mov
mov
jge
sbb
pop
bnd
jmp
dec
lret
pusha
notl
cmc
mov
mov
bound
pop
pusha
adc
inc
adc
je
fnsave
cmp
fldl
lahf
adc
inc
sahf
lds
stc
push
cli
out
push
je
xlat
xor
rcr
repz
fwait
mov
out
outsb
jecxz
negb
aaa
push
pop
push
pop
cmpsb
push
jno
dec
scas
movsl
or
popf
lret
sbb
sub
call
das
lods
cmp
jb
pop
sahf
out
xor
xchg
jns
add
aaa
cmp
sbb
sub
jo
jae
mov
cli
jge
or
or
push
xchg
sub
shl
and
es
pop
out
cmpsl
and
adcb
sbbb
outsb
aad
push
mov
add
sti
movlps
sti
ja
std
and
insl
imul
add
adc
aam
incb
push
inc
lret
mov
out
stos
jbe
movups
jb
fucomp
aam
lret
jmp
xchg
outsl
pop
sbb
add
push
cmp
movsb
jns
aad
jmp
push
int3
jo
sub
or
pop
sub
xchg
cmp
hlt
lahf
in
jne
loopne
and
stos
cwtl
test
stos
xchg
jg
sahf
sub
stos
mov
ljmp
test
push
jns
or
sub
adcb
nop
cmp
sbb
out
fcomps
dec
xchg
xchg
loop
outsb
in
in
sbb
mov
sbb
sahf
cmp
nop
add
sbb
sarb
int3
scas
fsts
cmpsb
outsb
mov
inc
adc
ds
bound
xor
xchg
test
sub
nop
js
fidivl
push
pop
rclb
or
xor
jge
jmp
adc
push
neg
test
add
and
push
push
nop
daa
adc
and
in
push
or
add
or
pushf
movsl
lret
xor
cmpsl
pop
mov
xchg
mov
pop
movsb
inc
shll
insl
scas
inc
lcall
sub
fs
xchg
sub
cmp
pop
mov
jns
lahf
ss
cmpsl
mov
in
cs
test
jb
int3
pop
aas
push
sbb
lock
popa
sbb
ret
pop
xor
push
test
xchg
mov
rcr
fcoml
lods
mov
shl
pusha
jp
add
dec
popa
shlb
jno
leave
push
pop
mov
sahf
fildl
cs
jge
sub
xchg
sub
fwait
arpl
inc
scas
and
sub
cli
sahf
adc
adc
shrb
sbb
inc
pushf
jp
sub
push
mov
outsb
and
pop
sbb
int
or
or
mov
jmp
inc
enter
stos
xor
arpl
mul
mov
dec
xchg
andl
decb
int
pop
mov
mov
jl
int
out
push
icebp
incb
mov
mov
fs
out
xchg
lcall
gs
inc
push
xchg
je
sbb
in
xrelease
mov
loop
sti
jno
mov
inc
mov
pusha
cs
call
lret
rcrb
and
arpl
sahf
or
fisubrs
push
mov
popa
sbb
adc
les
fists
sbb
jecxz
xchg
jno
cmp
lds
dec
mov
or
outsb
adc
sbb
pop
mov
les
cli
aam
movsb
ss
addr16
mov
int
inc
in
aad
inc
mov
jl
cmpsl
add
imul
filds
mov
ss
pop
jne
mov
cmp
sub
sub
mov
fistl
nop
mov
inc
jecxz
mov
insl
sbb
flds
sub
fbstp
pop
in
jl
fcoml
add
xor
adc
add
sbb
mov
lret
cmpsl
dec
xlat
sbb
mov
out
addr16
pusha
push
jnp
data16
xchg
lock
in
int
push
test
in
jecxz
push
inc
mov
adc
cmp
dec
pslld
loopne
mov
jle
outsl
icebp
jmp
lock
xchg
out
inc
push
andb
nop
mov
sbb
push
inc
xor
inc
add
and
mov
dec
sbb
stos
pushf
sub
into
std
dec
sbb
adc
repnz
ret
mov
mov
jb
aaa
push
sbb
xchg
leave
fiadds
mov
jo
mov
cmpsb
mov
push
stos
dec
mov
inc
lea
mov
sahf
mov
sub
in
lds
pop
inc
adc
ja
arpl
xlat
ljmp
xor
scas
push
inc
fcompl
mov
out
insb
sub
jg
in
push
sub
cs
sbb
adc
dec
adc
mov
orb
xchg
dec
psraw
fisubl
popa
pop
dec
popa
dec
lcall
xchg
out
std
sub
mov
shll
push
rcll
add
out
or
inc
cmp
push
ss
test
js
pop
lock
aam
ja
mov
int3
pop
mov
jno
dec
mov
cmp
shr
dec
dec
pop
adc
data16
stos
xchg
sbb
arpl
movsb
insl
or
jl
lahf
lods
movsl
mov
imul
sbb
iret
imul
int
jns
push
out
adc
sub
jbe
cmp
jecxz
cmp
and
sti
sahf
xor
sarl
mov
pop
mov
pop
pop
aaa
js
sub
jo
test
subb
pop
mov
sbb
adcl
sub
lahf
cmp
scas
jmp
les
out
mov
add
rol
icebp
loop
lods
jecxz
xor
test
sbb
addr16
pop
mov
mov
push
imul
sbbb
ljmp
jo
pop
pop
jae
adc
adc
inc
and
mov
fldcw
orb
out
cmp
out
jae
movsb
push
popf
mov
es
pop
cld
cmp
imul
adc
mov
cltd
jne
add
dec
lods
pop
cmc
test
iretw
sub
fidivrs
outsb
xchg
gs
push
inc
gs
stc
scas
jae
btc
cmp
gs
ja
sub
fmull
inc
xchg
ds
mov
sarb
cmpsb
call
dec
and
test
mov
cmp
sub
popa
push
aaa
dec
repnz
ds
cld
adc
cwtl
int
mov
mov
imul
fstps
fidivl
sti
xchg
pop
mov
cltd
push
sbb
mov
icebp
in
popa
ret
push
jns
inc
in
movsb
repnz
loopne
ret
dec
xchg
or
push
and
cltd
xlat
mov
xchg
and
mov
shr
mov
lods
scas
sub
mov
jne
ret
insl
push
cmovnp
loopne
mov
push
cmovno
cld
inc
clc
or
cwtl
scas
roll
into
fdivl
shrb
mov
cli
push
mov
and
stc
adc
sar
xchg
fwait
scas
add
fdiv
mov
mov
cltd
ficomps
testl
jle
adc
sbb
in
movups
jle
movsl
jae
add
lea
repnz
xor
cs
dec
lods
inc
addl
add
icebp
in
dec
mov
sbb
add
xchg
insb
hlt
iret
rcrl
pop
lds
mov
push
xor
add
nop
jae
ret
clts
sbb
sbb
adc
lods
sub
mov
mov
push
or
stos
out
and
sti
imul
cmp
addr16
popa
aas
and
fbld
loop
push
pop
ret
jmp
fsubr
dec
pop
jae
jp
mov
js
cs
rol
sahf
shlb
adc
mov
enter
std
xchg
or
shlb
frstor
shll
sbb
and
xchg
pop
cmp
mov
or
aam
push
int3
and
subl
out
jge
mov
jl
inc
fcoms
cmc
or
pop
lret
gs
hlt
enter
cld
dec
mov
adc
pop
add
adc
mov
inc
leave
pop
push
pop
cmc
sbb
dec
scas
fwait
cmp
lods
sbb
into
xor
movsl
aaa
jnp
dec
push
mov
and
push
daa
rep
or
fisubl
psubusw
and
pop
adc
jmp
mov
pop
dec
mov
ret
fstpl
xchg
sbb
inc
sbb
ss
and
adc
or
inc
stos
adc
push
andl
gs
inc
andb
mov
stos
xchg
adc
sbb
lods
dec
cmp
adc
lods
push
jo
lahf
sub
loope
dec
cmp
nop
cltd
leave
fs
adc
mov
xchg
jbe
shrl
addr16
mov
jbe
push
ss
sti
add
outsb
cmp
repz
lret
outsb
inc
cmp
mov
and
cmp
pushf
xchg
jp
push
aad
pop
add
adc
or
lret
add
in
push
or
inc
inc
add
pop
and
add
imul
cmpsb
xor
in
cmp
les
std
pop
jo
pop
jle
std
aas
cmp
dec
in
jb
push
pop
insb
addb
jmp
hlt
jp
inc
sbb
xchg
cmp
test
testl
push
lea
aas
push
insb
jg
pusha
repnz
inc
or
jne
add
fstpt
fldt
into
movsl
mov
inc
fsubr
push
xchg
sub
mov
stos
dec
jo
out
sub
ret
push
jmp
sub
xchg
add
mov
pushf
mov
adc
psubsb
mov
cmp
cs
dec
sbb
or
inc
mov
fcmovne
ret
jecxz
sbb
push
daa
adc
xlat
pop
shl
add
out
arpl
in
mov
out
inc
cmpsl
xchg
or
arpl
jge
and
sbb
and
cmp
sub
or
mov
mov
cwtl
jnp
mov
add
flds
outsl
mov
xchg
adc
and
and
je
in
fs
pusha
jle
sbb
stos
xor
insl
sbb
or
mov
and
sar
rorl
mov
sbb
lock
es
cmp
outsb
jge
imul
in
add
and
inc
rclb
popf
dec
aaa
dec
sub
dec
aam
mov
xchg
xor
dec
movsl
aaa
into
xchg
frndint
pop
or
xchg
cli
jmp
sbb
std
repnz
add
mov
pop
xchg
pop
mov
out
ret
mov
jmp
and
ret
add
mov
pop
loope
jb
xchg
mov
fldt
movsb
jo
add
xchg
jl
pop
xor
mov
pop
mov
nop
inc
sub
in
mov
jge
xchg
je
fnsave
nop
jbe
or
add
and
aad
mov
xchg
sub
pushf
leave
mov
xor
imul
xor
dec
xchg
mov
icebp
pop
movsb
stos
pop
addl
inc
rcrl
lea
sbb
mov
mov
fsubrs
sbb
cmp
add
lock
sbb
pop
sbb
mov
lcall
mov
push
lret
mov
mov
fisubl
jge
loopne
push
popf
test
daa
mov
scas
and
arpl
xor
lea
scas
jno
outsb
push
xchg
gs
divb
enter
sub
lret
loope
test
daa
jbe
stos
xor
push
repnz
cmp
fisubrs
xor
xchg
test
sub
repz
inc
fld
clc
jp
lods
lods
xchg
into
fidivrs
fimull
sub
lock
int3
mov
jne
xor
xchg
imul
jmp
mov
outsl
add
dec
xchg
out
mov
in
dec
aas
enter
pusha
loop
sbb
add
dec
stos
mov
sti
jnp
mov
ja
loop
lods
inc
or
cli
xor
lret
rcrl
push
sbbl
test
sub
add
cmp
sbb
and
je
test
mov
dec
out
xchg
jae
cltd
insl
mov
inc
fisubl
sub
jnp
data16
push
sbb
xor
out
xchg
test
mov
mov
xchg
frstor
movsl
xchg
mov
pop
lock
jbe
mov
jl
data16
and
call
jb
pop
call
fnstcw
adc
xchg
jne
sbb
push
cwtl
out
push
inc
addr16
dec
loope
sti
xchg
addr16
cltd
mov
adc
cli
nop
outsl
or
inc
mov
dec
fcmove
rcl
insb
add
cmpsl
repz
push
imul
jb
cmp
mov
add
fists
push
outsl
bound
test
mov
jmp
mov
adc
mov
jmp
jp
fisttps
loope
and
mov
imul
pop
shll
sub
xchg
cwtl
fisubrs
adc
mov
jge
sbbl
pop
mov
jg
js
mov
test
bound
sub
fistpl
adc
test
imul
mov
or
cmp
push
repnz
adc
aad
cmp
aas
adc
bound
int3
mov
repnz
hlt
jno
cmp
cld
sbbb
adc
je
cmp
xlat
ss
int3
and
jmp
jle
js
repnz
inc
orl
pop
scas
les
push
outsl
scas
in
imul
mov
xlat
push
adc
mov
dec
jns
call
mov
or
sbb
into
mov
xor
mov
lcall
and
jns
cmp
cmp
mov
sub
ret
leave
push
jge
cwtl
in
cmpsl
push
sub
jge
ljmp
pop
sub
or
or
cld
add
pop
mov
jbe
dec
xchg
addr16
int3
dec
sub
loopne
adc
int
mov
inc
mov
fdivrl
outsl
push
lds
adc
sahf
scas
aad
cmp
inc
push
ja
cmp
negl
jle
hlt
pop
push
xor
out
test
icebp
movsl
sahf
adc
jae
subl
dec
daa
or
sbb
in
adc
mov
push
xchg
outsl
rclb
cmp
mov
fisubrs
xchg
adc
lret
xor
das
push
dec
cltd
push
adc
sub
sbb
test
inc
jne
movsb
jp
fbld
ret
lcall
dec
out
jmp
xor
adc
add
lret
adc
pop
xor
push
lret
bound
mov
int3
lcall
fsubr
jg
mov
push
inc
inc
pop
test
cltd
shll
sbb
jae
into
sub
xchg
out
add
push
test
cmpsl
out
mov
ret
hlt
mov
sbb
dec
pop
das
push
cmc
lods
lods
push
or
inc
add
sub
imul
mov
cltd
xchg
xchg
repz
test
dec
fbld
ficomps
mov
add
lea
mov
inc
jge
jne
dec
rcll
jb
add
bound
pushf
cld
cltd
mov
lret
or
stos
inc
xchg
in
test
cmp
rcll
lret
xor
leave
sbb
shlb
push
push
imul
lret
pop
insl
and
bnd
xor
fcomps
mov
xlat
ljmp
cwtl
lods
mov
xor
push
mov
push
jg
push
xchg
iret
add
pop
cmp
les
ja
or
cmp
sbb
mov
push
sbb
dec
cli
andb
lea
jle
push
jmp
cld
xorl
pop
xor
or
setbe
imul
out
mov
daa
sbbl
idivb
ds
and
jbe
dec
das
push
ds
inc
dec
inc
add
daa
sti
push
pop
ss
inc
add
jb
aam
mov
loopne
in
fs
shll
jb
jne
jecxz
or
sub
gs
sub
cmpsb
xor
add
lcall
clc
pop
gs
sbb
xchg
add
sarl
pop
sbb
lea
mull
outsb
jg
andl
fdivrl
jle,pt
dec
cmpsb
in
mov
push
fidivrs
xor
rcrl
and
inc
imul
in
mov
loopne
mov
loop
enter
lret
pop
xor
or
push
jno
fwait
jmp
xor
js
pop
addr16
xor
incl
leave
scas
iret
mov
pop
inc
aas
in
xor
xchg
push
adc
das
pop
je
xchg
es
sahf
push
or
movsl
lods
mov
fiadds
adc
rcr
lahf
push
rcrl
or
jle
xor
add
jo
pushf
addr16
mov
in
push
mov
rcrl
fsubr
jns
leave
mov
xor
cmpsl
push
jno
add
icebp
or
cmc
mov
xor
and
ds
sub
sbb
mov
rolb
pop
and
xchg
fdivrs
sub
inc
gs
cmpsl
lock
mov
xor
jmp
and
ljmp
insb
cmp
test
jb
mov
cwtl
mov
fxch
popa
or
or
or
pop
mov
cwtl
lock
pop
in
pop
mov
loop
scas
jge
aad
inc
je
std
push
mov
dec
xchg
add
cwtl
dec
sbb
in
out
mov
int3
cmp
hlt
pop
repnz
pop
imul
lcall
fldl
test
test
xor
lea
shll
testb
add
inc
fistps
or
mov
pop
mov
loop
les
orb
ja
mov
jns
pusha
stc
jl
out
cmpsb
mov
aas
nop
jecxz
lods
pop
mov
cs
sbbl
dec
scas
lahf
daa
lock
sbbl
mov
hlt
mov
leave
outsb
fwait
les
mov
xchg
lret
jecxz
in
sbb
and
jl
lds
push
pop
int
jmp
scas
cmpsl
cs
lret
dec
push
lods
clc
test
xor
mov
pop
add
adc
aaa
push
push
sub
jne
ret
roll
push
add
popf
sti
cwtl
pop
ss
xor
in
jg
cmp
adcl
jns
fstpl
aas
mov
inc
out
jg
and
xchg
push
imul
jb
aam
inc
pop
mov
push
arpl
out
enter
mov
push
in
jno
insl
dec
cmp
fs
xor
insl
jae
pop
stos
les
rcrl
xor
cmpsl
sbbb
add
mov
loope
mov
mov
pushf
add
imul
enter
ljmp
or
sbb
push
insb
and
jb,pn
xchg
call
into
mov
stos
movsb
pop
pop
int3
test
repz
xor
push
push
fidivs
and
pop
jbe
fdivl
xchg
mov
push
pop
ret
pop
pushf
mull
sti
leave
inc
dec
call
dec
sub
rol
sbb
mov
inc
lods
push
jmp
dec
or
js
inc
jo
mov
jo
shl
cmc
pop
cmp
add
inc
add
xor
xor
cmpsl
pop
fimuls
mov
test
pushfw
testb
lods
mov
or
adc
loope
xor
imul
sbb
and
adc
mov
repz
jne
push
test
xchg
das
int3
mov
sub
dec
sub
rcll
mov
or
aam
xor
test
mov
adcl
push
mov
outsb
rol
push
dec
mov
jg
mov
mov
arpl
pop
loop
scas
adc
pop
repnz
xchg
gs
call
sti
mov
sbb
pop
inc
mov
fnstcw
lcall
xchg
movsb
in
mov
cmp
mov
sub
ret
push
pop
or
outsl
mov
or
add
lock
xchg
jp
enter
sbb
call
test
push
sti
jae
outsb
xor
push
dec
dec
cltd
cs
iret
scas
enter
push
dec
lods
push
jnp
arpl
jb
movsb
dec
ljmp
test
in
adc
mov
push
push
xlat
repnz
ret
lcall
ror
outsb
and
aas
cmp
jle
int
mov
xchg
dec
jl
xor
mov
adc
jne
inc
pop
repz
pop
out
jp
cmp
push
pushf
dec
icebp
adc
rcrb
mov
leave
adc
into
gs
clc
int
inc
add
adc
iret
clc
or
pop
jne
jl
mov
xchg
cli
sbb
push
getsec
sarl
ljmp
mov
gs
loopne
push
inc
aam
call
or
loopne
adc
adc
arpl
test
pop
mov
leave
xchg
ja
cmc
addl
dec
push
xchg
imul
hlt
xchg
or
scas
loop,pt
shrb
fdivrs
or
pusha
push
popf
xchg
int3
ret
lea
outsl
or
add
mov
inc
fnsave
xchg
fs
push
push
sbb
cmp
sbbl
pop
xchg
adc
aaa
add
mov
mov
jl
mov
sbb
adc
fwait
les
testb
add
outsl
das
push
in
pop
lret
std
add
subl
adc
std
aaa
jne
cmp
add
add
cmpsl
movsl
xchg
rcll
mov
dec
fsubl
stc
int3
dec
fsubrl
stc
es
pop
push
je
scas
sub
dec
push
push
mov
sbb
ljmp
int3
inc
mov
cmc
inc
std
mov
adc
outsl
faddp
daa
fcmove
fidivs
enter
or
inc
sub
loopne
mov
inc
mov
in
in
mov
mov
andb
cmpb
pop
int
fs
sub
push
and
leave
dec
mov
aam
fnsave
adc
jmp
fs
mov
ficoms
stos
int3
add
xor
movsl
dec
out
out
lea
inc
loopne
repz
maxps
lcall
xchg
xchg
shrl
jne
notb
xchg
cmp
dec
cmp
insl
and
inc
hlt
pop
mov
movsl
fidivrs
pop
daa
inc
out
jns
mov
push
test
lds
sbb
adc
push
scas
xchg
jnp
aad
mov
adc
test
xchg
fcmovnbe
mov
hlt
arpl
pusha
jnp
clc
and
jns
pop
cmp
jb
notl
mov
popf
jnp
call
into
pop
jmp
pop
ja
xchg
test
ss
ds
inc
or
xor
aaa
mov
push
cmc
jne
sbb
jecxz
push
inc
and
pop
test
enter
xor
das
stos
jmp
shl
add
cltd
or
add
pushl
or
inc
pop
cld
jecxz
mov
fidivl
cltd
imul
je
jne
and
jle
fwait
jb
sbb
fs
aaa
mov
jo
aaa
into
into
push
andl
inc
or
xor
jns
xchg
stc
mov
int
jecxz
jp
push
jmp
fwait
testb
jno
xor
sub
hlt
aam
aam
sahf
push
je
popa
mov
fsubrs
dec
fwait
stc
fbstp
lods
sub
in
sub
imul
mov
lock
inc
jle
jmp
shlb
inc
sbb
test
inc
dec
jo
xor
jns
dec
mov
std
cmp
sbbb
out
btc
and
nop
cli
and
bound
stos
inc
and
aam
jle
lods
mov
out
ljmp
cld
add
cld
jo
or
addr16
pop
je
or
mov
mov
mov
das
pushf
das
into
cmpsb
in
mov
xor
xchg
lret
xchg
rolb
jbe
add
imul
lock
out
scas
pushf
sub
and
jnp
xchg
push
mov
les
div
jns
bound
jmp
sbb
add
punpckhbw
inc
mov
imul
xchg
xor
mov
das
add
pop
cmp
repz
in
dec
xor
aas
mov
dec
cmp
sub
ret
test
or
insb
push
rclb
leave
popf
xlat
sbbb
cmp
arpl
in
jmp
and
cmpsb
mov
dec
adc
shrb
test
xchg
mov
push
sub
sub
xchg
mov
rcl
aas
test
adc
ret
movsl
sahf
cmp
arpl
sbb
pop
cmp
add
mov
pop
sbb
adc
clc
sbb
ss
mov
push
in
icebp
jne
xchg
into
sbb
in
stos
lret
mov
bound
pop
shrb
mov
xchg
sbb
dec
ds
cltd
sub
insl
repz
test
lods
and
std
xchg
jle
aam
stos
dec
mov
dec
fwait
aas
shl
enter
add
inc
cmp
inc
les
jecxz
arpl
in
sahf
pushf
int
int3
ss
xor
cmp
push
jnp
test
pop
pusha
stos
xchg
aad
and
js
sbb
popf
idivl
pop
ljmp
scas
ja
jmp
jmp
or
int
sahf
adc
jecxz
lret
push
flds
xlat
repz
jp
xor
pop
or
js
mov
arpl
mov
stc
in
push
push
mov
push
popf
imul
lret
jae
pop
repnz
test
loop
outsl
movsl
outsb
add
subl
mov
fnsave
js
xchg
mov
xchg
sbb
xchg
sub
ficompl
shl
nop
out
xchg
ret
mov
sbb
fdivs
dec
out
lahf
pop
lock
xchg
sub
cmp
adcb
shrl
dec
push
in
aas
and
mov
mov
outsl
and
or
lods
xchg
sub
sbb
rclb
push
gs
inc
frstor
iret
add
add
push
cwtl
xor
into
loop
bound
repnz
adc
repz
in
arpl
inc
in
pop
xor
mov
jae
insb
fwait
dec
insb
cmp
dec
int
repz
inc
out
les
data16
and
inc
dec
loop
cmp
imulb
hlt
iret
aaa
inc
inc
and
sbb
fiadds
jae,pn
adc
cltd
test
jge
jae
pop
aad
aas
divl
add
xchg
or
out
mov
cwtl
stos
in
push
daa
or
pop
outsl
mov
cmp
ficompl
mov
cwtl
jmp
mov
scas
stc
lods
jae
mov
inc
xor
cli
dec
iret
imul
dec
rorl
clc
cmp
jle
into
ret
sub
xchg
cs
flds
mull
gs
mov
mov
push
jb
jle
xchg
and
mov
inc
test
mov
xchg
mov
mov
cld
addr16
cmpl
dec
push
loope
daa
sbb
popa
in
cmp
pop
out
mov
addr16
inc
push
mov
inc
push
orb
out
fsts
scas
int
stos
std
sub
jmp
frstor
in
pop
or
sub
mov
ret
pop
bound
inc
scas
stos
and
dec
insl
popa
int
iret
lock
and
fwait
icebp
out
repz
rcll
jne
push
repnz
jb
pop
pop
cli
scas
push
jle
daa
mov
xlat
jmp
xor
lods
mov
imul
hlt
das
movsl
jne
sub
rclb
icebp
jae
arpl
adcl
mov
add
dec
fs
enter
ret
clc
ljmp
gs
mov
push
stos
popf
xor
mov
sub
or
mov
or
arpl
cmp
lods
jno
scas
sub
pop
scas
sbb
shl
push
ss
adc
mov
mov
ss
loop
jne
fisubrl
add
xchg
cmp
lret
daa
into
xchg
rorl
mov
rol
xor
aas
xor
push
incb
push
movb
ss
adc
dec
push
cltd
adc
jo
nop
mov
sub
mov
imul
sub
mov
aam
xchg
scas
cmp
rcl
jb
lcall
inc
ds
xchg
pop
lret
sbb
dec
pop
inc
lds
push
ret
cli
or
das
cmp
loopne
icebp
jbe
sub
test
hlt
cmc
hlt
add
jmp
aaa
jae
and
pop
push
repnz
outsb
add
and
mov
mov
mov
imul
lds
jbe
stc
cmp
inc
xlat
pop
sub
pop
comiss
lret
cmpsb
sub
push
push
adc
popf
mov
orb
jle
negl
jnp
rol
lea
es
cmpsl
and
call
jnp
jge
adc
lahf
sahf
mov
clc
loope
in
mov
data16
cltd
xchg
fidivs
fdivl
scas
sub
cmpsb
cmp
push
sub
sbb
or
fstpt
cltd
mov
jae
mov
mov
stos
in
jl
ret
cltd
pop
sahf
ds
cmc
and
cmpsb
test
sub
lods
pop
in
cmp
scas
inc
push
sbb
int3
and
mov
stc
cld
stos
sub
push
shlb
into
pop
xchg
out
push
jg
lods
addl
pop
cmp
out
imul
inc
dec
xor
add
sbb
and
push
in
sbb
icebp
mov
insb
leave
sub
xchg
mov
aaa
inc
and
aaa
test
xor
sbb
sbb
xor
loopne
fstl
dec
push
inc
repnz
fwait
mov
and
sti
insl
adc
popf
int3
imul
ss
inc
pop
outsl
mov
mov
loop
sub
sbb
aas
jae
jno
in
test
in
mov
aas
sub
xor
push
fisubs
stos
xchg
fsubp
scas
aas
push
divl
insb
push
jg
mov
pop
call
and
mov
outsl
push
add
or
orb
repnz
adc
in
in
out
and
testl
pop
mov
rclb
insl
jp,pt
popf
cmpsb
adc
ret
push
jle
es
sbb
bound
pop
sbb
lret
xchg
dec
rorb
sbb
pusha
adc
imul
push
mov
mov
cmp
fisubrl
ss
cld
sub
test
xchg
and
in
movsl
shll
cmp
movsl
jle
roll
push
xchg
fiadds
lret
popl
mov
push
xor
jp
jb
add
push
jno
pop
mov
call
ret
nop
jecxz
jbe
in
and
cltd
jp
push
imul
xchg
cs
pop
xchg
inc
frndint
jecxz
out
lahf
inc
cmp
mov
mov
popa
inc
fdivrl
in
mov
nop
sbb
dec
dec
push
out
inc
bound
xchg
jl
xlat
mov
jg
pusha
mov
dec
stos
mov
mov
dec
in
and
pop
push
xor
push
repz
pop
lods
je
in
movsl
enter
dec
jmp
clc
adc
je
gs
dec
out
jbe
adc
pop
pop
aam
inc
clc
add
movsl
fidivs
sbb
call
mov
xchg
outsl
and
ljmp
xor
mov
scas
inc
sti
ja
xchg
pop
xchg
rcr
dec
sbbb
cmp
sahf
push
cmp
test
add
int3
lock
xor
pop
loop
test
psubusw
push
fwait
jae
arpl
jne
adc
aad
mov
imul
roll
push
and
daa
mov
scas
int
xor
inc
mov
and
aas
rcrl
movsb
dec
dec
popa
ret
and
jmp
subb
mov
aaa
pop
adcl
loope
push
mov
cwtl
mov
and
mov
fimull
loop
sub
movsl
xor
cmpsl
ret
sub
pop
xchg
mov
xlat
subb
loop
into
dec
adc
sbb
pop
xchg
cmp
gs
aad
pop
jbe
inc
setnp
int3
and
jl
decb
dec
fildll
cmpsb
cld
xchg
jp
push
ja
lods
xchg
test
lock
add
cmp
sti
inc
ret
push
nop
mov
negb
jge,pt
jo
adc
adc
mov
add
dec
test
or
xor
orl
adc
jns
inc
or
dec
and
push
push
jg
loop
add
sub
xor
pop
hlt
outsl
orl
push
cmp
cld
dec
clc
mov
aam
sub
stos
mov
mov
jbe
data16
cwtl
pusha
int
std
adc
ss
and
pusha
pop
jo
mov
arpl
or
and
dec
insl
mov
dec
mov
popa
cli
cld
push
jl
out
fdiv
sbbl
ffreep
lahf
cli
in
ja
loope
mov
cmp
gs
pop
fadds
push
jp
inc
mov
scas
and
ret
sbb
push
cmp
aas
push
iret
ja
mov
sub
jp
sub
xor
xchg
add
sbb
inc
dec
sub
ja
test
pop
add
bound
dec
outsb
andl
or
mov
jne
lea
push
mov
int3
fdivs
outsb
xor
lahf
xor
dec
loope
mov
movsl
xchg
bound
adc
movsl
add
jnp
addr16
aaa
icebp
ds
notb
cmp
xchg
in
pop
cmp
sarl
addr16
pop
mov
test
mov
and
push
adc
js
fs
sub
repnz
fsts
subl
push
cwtl
and
mov
and
sti
and
sub
lret
jmp
aas
xchg
sub
mov
sbb
sahf
xor
aad
mov
jle
sbb
jp
xchg
xchg
pop
out
decl
scas
xchg
dec
mov
push
sbb
test
add
mov
mov
pop
adc
and
into
std
xor
jge
jne
adc
or
test
cmpsb
into
aas
and
sti
fdivrl
or
push
cld
or
jmp
insl
dec
loopne
outsb
pop
adc
xchg
fwait
notl
cmp
and
sti
xchg
xchg
cmp
jbe
mov
sbb
and
jmp
mov
fcoml
mov
lret
pop
xor
fidivl
or
ja
mov
jp
cmpsl
and
popf
mov
cmp
pop
out
fnstcw
ljmp
pop
adc
mov
mov
test
push
in
movsl
mov
xchg
rorl
lret
mov
mov
fsubr
jecxz
or
shlb
notb
lds
test
pop
out
push
inc
outsb
imul
sub
es
pop
scas
pop
out
shlb
push
sahf
mov
nop
jno
or
mov
adc
cmp
or
jge
repz
push
bound
push
call
stos
cmp
in
push
out
adc
sahf
mov
dec
dec
push
jb
outsb
add
mov
cmp
imul
dec
mov
push
fstps
lods
fs
sub
sbb
lcall
popl
test
dec
push
das
pop
pop
in
push
and
movsl
jg
out
dec
fsubr
jg
dec
and
out
push
and
inc
jo
int3
std
pop
les
dec
in
shlb
add
adcb
or
outsl
adc
les
fucomip
out
mov
fadds
arpl
sub
ret
icebp
adc
ret
fwait
es
fsubr
push
xlat
xor
repnz
lahf
leave
lcall
sbb
mov
arpl
adc
ljmp
sahf
and
fucomip
enter
outsb
cwtl
and
mov
inc
cmc
mov
stos
out
test
test
cmp
or
dec
movsl
shll
rolb
orl
int
or
lods
lea
push
and
push
fsubs
dec
aas
push
test
cwtl
jp
add
fnstenv
xchg
mov
mov
cmp
xor
xchg
rcrl
data16
pop
fbld
sahf
adc
inc
xor
jno
jg
ret
int
xchg
xor
xor
push
ljmp
je
insl
fdivl
xchg
daa
inc
pop
ficoms
push
sub
es
movsl
push
and
cmp
int
aam
loope
daa
push
lock
mov
shr
clc
or
inc
fdivl
loopne
sahf
loope
arpl
sbbb
das
fldcw
popf
inc
or
jbe
mov
push
shll
mov
leave
es
sbb
stos
or
mov
mov
mov
xchg
xor
push
push
mov
mov
jle
mov
test
xchg
or
mov
fwait
inc
jae
into
int
sbb
fsubs
cltd
mov
outsb
jo
adc
dec
or
lea
and
pop
arpl
mov
pop
out
and
jbe
pusha
adc
insb
punpckldq
or
cs
out
adc
stos
inc
iret
inc
push
adc
push
jne
cmp
mov
popa
xor
mov
adc
pop
xchg
pop
mov
mov
jle
jg
add
mov
into
xor
and
mov
scas
or
cmp
in
lods
test
sbb
call
and
das
sar
popf
and
lods
xchg
and
pop
es
push
xchg
adc
stos
push
jnp
cli
pop
push
and
cld
arpl
scas
jne
test
lods
mov
adc
test
loope
cs
xchg
sub
into
outsl
fdivl
mulb
push
xorb
xchg
mov
adc
cmp
repnz
mov
add
adc
imul
xor
mov
shrl
cmpsl
adc
das
dec
or
jae
xor
push
mov
sub
mov
add
mov
cwtl
sbb
movsl
mov
adc
dec
ja
je
cmp
test
adc
das
cmp
lea
in
das
jb
insl
ret
adc
mov
cmc
aad
test
add
cmp
push
mov
icebp
repnz
aad
adc
popl
dec
pop
xor
or
cltd
pusha
shrl
mov
ds
in
repnz
mov
rcl
jg
jbe
test
xchg
rcrl
jp
rolb
in
xchg
int3
xor
xchg
mov
mov
fcoms
or
sub
jmp
jbe
imul
pop
hlt
pop
or
push
clc
jnp
jb
addr16
lock
mov
call
jae
fmull
andl
fiaddl
pop
shll
jl
stc
nop
stos
mov
push
rcll
enter
dec
mov
fbld
push
fnstsw
out
nop
leave
sub
pop
inc
xchg
mov
in
insl
int3
test
pushf
xlat
jmp
pop
pop
loopne
mov
or
push
dec
push
test
sub
mov
sbb
repz
sub
adc
xchg
mov
dec
pop
icebp
hlt
dec
andl
pop
je
and
adc
sbb
adc
lahf
subb
mov
adc
mov
jnp
mov
lcall
sbb
gs
pop
adc
fcomip
sahf
cmpsl
add
xchg
cli
sbb
mov
stc
pop
xor
sarl
add
shll
mov
or
inc
mov
pop
jns
inc
jle
sub
xchg
ljmp
push
inc
xlat
jns
xor
inc
adc
dec
aaa
ret
in
in
jge
nop
scas
sbb
test
cmp
push
in
push
pop
xor
jns
xchg
push
xchg
adc
int
das
pop
xchg
out
xor
mov
testb
lds
neg
add
push
lock
push
jl
iret
push
add
adc
je
xor
xchg
push
adc
adc
leave
dec
push
daa
cmc
mov
cmp
cli
lock
jmp
out
xchg
movsl
in
cld
or
push
pop
pop
sub
xchg
imulb
inc
sub
dec
cltd
sbb
in
sti
mov
jns
jnp
jb
push
add
fs
movsb
cmp
mov
icebp
xchg
xor
outsb
xor
insl
call
xor
mov
fists
xor
cmp
jp
test
cmp
adc
cmpsb
shll
mov
data16
push
stc
aas
test
jge
faddl
pop
fnclex
and
lods
mov
nop
js
pop
loop
adc
int
mov
inc
jg
push
hlt
mov
int3
fadds
fstps
movsb
xchg
test
dec
mov
das
fxam
sahf
cmp
rcrb
lret
sti
out
mov
adc
mov
pop
mov
push
pusha
jb
fmul
pop
or
idivl
mov
ljmp
imul
adc
xor
loopne
outsl
stc
mov
dec
es
sub
pop
call
mov
push
jns
iret
movsb
outsb
adc
push
je
cld
shll
enter
dec
popa
rcrb
xchg
outsb
xor
in
push
mov
ss
mov
dec
mov
xchg
in
xchg
fs
pop
xor
and
iret
mov
arpl
mov
mov
pop
xsha1
cmpsb
icebp
out
push
stos
jbe
mov
inc
xor
insl
rorb
xchg
outsl
push
sub
cltd
push
cmc
inc
test
and
leave
and
sub
cmpsl
and
jle
inc
shr
mov
xchg
mov
stos
js
push
js
sub
daa
sub
ficomps
sbb
cmp
jmp
imul
sbb
push
or
sarb
jo
pushf
shrl
int
mov
call
ljmp
andl
pushf
movsl
lods
push
mov
out
mov
addr16
int3
in
mov
in
out
aam
loopne
lods
jno
lea
iret
adc
add
adc
pop
pop
mov
pop
fsubr
lods
cmc
push
sahf
sub
add
inc
fisubs
sti
or
rcrb
inc
dec
mov
push
lock
mov
mov
push
insb
jmp
outsb
xor
mov
push
jge
mov
test
test
adc
int3
test
push
es
scas
inc
fstp
arpl
lahf
int
mov
xchg
stc
mov
push
mov
pop
push
xor
cmp
inc
add
push
sbb
cltd
xchg
mov
cltd
xchg
xchg
sub
imul
sub
clc
and
inc
jg
lea
or
inc
int3
jecxz
sub
imul
mov
mov
pop
pop
dec
pop
in
cmp
push
ss
movsb
lock
pop
sub
mov
hlt
fsts
or
mov
daa
ljmp
rcrl
imul
dec
fbld
adc
out
lahf
fcomi
dec
fs
dec
int
xchg
jne
cltd
out
inc
idivl
movsl
pop
je
fisubrs
scas
pusha
aas
into
ljmp
jae
pushf
hlt
repnz
lds
and
frstor
and
fsubr
jmp
addr16
ja
xor
xchg
test
xchg
cmc
neg
pop
adc
sbb
int3
push
sub
or
movsl
sti
and
jg
dec
jo
adc
sbb
push
adc
into
nop
xor
dec
push
mov
push
lds
cmp
rcl
sbb
or
lock
pop
push
call
mov
outsl
mov
xchg
aad
dec
push
cmp
inc
pop
or
test
sahf
xorl
addr16
mov
fiadds
out
sub
and
mov
aas
cmpsl
mov
pop
fs
inc
pop
mov
popa
mov
sub
adcb
cmc
dec
loop
xchg
sbb
push
push
cld
bound
cmp
xchg
sub
push
push
sbb
cmpsl
mov
mov
pop
xor
movsl
ljmp
dec
test
popa
jo
fsubl
push
insl
in
cmp
cmp
loope
mov
dec
xlat
xor
arpl
cwtl
pop
jg
xor
jle
cwtl
mov
leave
xchg
loope
xchg
push
sarb
mov
imul
jb
pop
add
test
and
mov
lret
mov
pop
mov
ret
adc
roll
pop
sub
js
cmp
ret
aas
dec
jl
sub
add
mov
aad
imul
push
in
push
sub
jl
je
adc
jns
sub
shrb
clc
pop
out
adc
insb
jmp
sbb
mov
clc
mov
jo
xchg
jo
and
lret
mov
call
xchg
jge
adc
shl
les
inc
lods
outsl
in
sub
adcb
pop
mov
push
jbe
dec
xchg
cmp
mov
inc
mov
push
icebp
add
sub
psrlq
mov
dec
dec
rorl
or
and
popa
in
cmpsl
and
cmp
inc
or
sarb
gs
add
int3
and
ja
out
pop
mov
cmp
add
jns,pn
outsl
pop
imul
lds
loopne
cmpl
sahf
aad
lock
out
sahf
out
in
sbb
jno
cs
data16
adc
dec
shrl
fs
cli
mov
sub
aam
sahf
iret
adc
sbb
std
or
cmp
pusha
orl
outsl
cmp
in
in
push
pop
push
dec
aam
xlat
mov
mov
sbb
filds
jmp
test
mov
ja
pop
lahf
dec
sbb
jne
pop
imul
nop
test
clc
es
push
jge
pop
cld
jl
and
and
push
popa
pop
fsubr
out
push
loope
shrb
push
fistpll
mov
clc
stos
or
pop
testl
xor
cmp
lock
and
xor
rcl
fisubrs
aad
test
jno
fdivrs
inc
mov
xchg
dec
popa
fisubrl
sarb
iret
call
and
cmpsl
push
fldcw
push
arpl
add
test
xorl
dec
pusha
and
mov
pop
cmp
lea
dec
dec
and
dec
push
in
jg
outsb
dec
cmp
clc
vpunpckhwd
rcrl
fisubs
in
mov
mov
rorb
jge
pusha
sub
dec
mulb
sarl
imull
pop
lods
fwait
jbe
jae
test
scas
push
sbb
fnstcw
adc
and
fiadds
push
filds
push
jecxz
add
and
call
shr
out
add
rorb
loope
adc
xor
and
adc
inc
mov
imul
push
in
xor
sahf
mov
push
call
xor
aam
xchg
mov
hlt
lcall
aam
mov
gs
inc
and
inc
fidivs
push
push
jne
das
cld
xchg
popa
and
into
popa
or
push
subl
lods
cmp
lock
sbb
cltd
icebp
mov
and
mov
xchg
cmpl
jae
and
repz
arpl
adc
xchg
into
movb
in
xchg
mov
outsl
xchg
sub
clc
mov
mov
insb
repz
and
cmp
mov
push
ljmp
insb
jns
pop
mov
xchg
lods
mov
sub
das
push
in
mov
enter
add
lods
pop
mov
jmp
cmpl
mov
pusha
pop
mov
push
mov
lea
imul
sarl
cmp
sbb
insb
and
sub
xlat
addl
jecxz
stos
movsb
shlb
inc
adc
push
ljmp
jno
out
pop
movsb
dec
or
aad
imul
adc
in
fnstcw
xchg
cmpsb
shlb
mov
movsb
jmp
cltd
jo
jmp
testl
mov
gs
jb
sub
xchg
mov
xor
clc
lods
das
mov
xchg
cld
test
xor
and
jns
xchg
pusha
notrack
xchg
xorl
in
arpl
push
push
mov
es
pusha
or
or
mov
add
movsl
inc
or
sbb
push
add
add
push
pop
push
jno
add
push
push
mov
push
enter
and
xor
mov
or
ret
lahf
push
push
mov
push
sbb
mov
adc
int3
fstpt
rorl
push
jl
outsb
mov
push
repz
or
inc
dec
lret
jno
jnp
mov
pusha
clc
fistps
imul
jns
or
mov
ljmp
iret
lret
fbstp
insl
dec
hlt
add
andl
or
xchg
cmp
roll
mov
movsl
inc
pop
xchg
lock
jmp
cmpsb
pop
or
mov
mov
adc
movsb
fstpt
push
decb
mov
shlb
xchg
or
sbb
sub
stos
outsb
aad
mov
push
lret
outsl
idivl
enter
jbe
arpl
sub
sbb
dec
cmp
cmp
fcom
out
add
adc
jp
fs
rcrl
push
xchg
xor
jae
aam
ret
arpl
jne
add
xchg
test
cmc
or
cmp
push
jmp
dec
push
fisubl
out
repz
popa
sahf
fadds
mov
sbb
xor
fisubs
or
mov
cltd
imul
xor
cmp
add
aas
out
xchg
cmpsb
mov
cmpsb
jns
fcomps
fisttps
rclb
fcmovnu
call
pop
add
inc
mov
lret
xchg
enter
jno
std
cmp
xor
pushf
mov
sahf
jmp
dec
mov
imull
mov
sub
add
in
jecxz
mov
jb
inc
movsb
inc
enter
sahf
addb
in
xor
or
into
addl
and
test
lret
inc
stos
add
mov
daa
and
xchg
add
aam
loop
xor
stos
test
jmp
and
in
inc
fmul
jns
ljmp
or
ds
lcall
xor
add
test
jne
mov
push
mov
rol
add
sbbl
fimuls
sbb
mov
dec
loopne
pop
jo
test
mov
push
dec
pusha
add
dec
jecxz
pop
push
daa
jecxz
push
mov
sbb
jmp
jae
push
idivl
xchg
dec
dec
sbb
scas
sbb
inc
out
out
stos
mov
push
test
push
je
out
xchg
test
and
int
cs
test
cmpsl
shrl
add
test
ret
mov
movsb
and
dec
in
mov
movsb
test
push
fdivl
mov
ss
cli
pushf
push
or
or
cmpb
jb
fmuls
sbb
gs
sbb
jge
mov
mov
cmp
test
push
dec
movsb
jae
mov
pushf
sub
mov
mov
mov
rcrb
pop
shr
or
pop
ja
jp
in
imul
jne
aas
add
ret
add
pop
mov
jno
andl
int3
clc
xor
das
cli
ret
cltd
stos
push
cld
xlat
cmovne
loopne
xor
mov
ret
ss
hlt
push
and
inc
dec
sahf
lods
mov
pop
mov
insb
into
cs
mov
push
in
int3
xchg
push
mov
dec
pop
fisubrl
xor
idivb
pop
cmpsl
inc
pop
insl
mov
shrb
sbb
fcmovnb
mov
cmp
mov
push
xchg
sbb
int
add
jbe
fsubrl
int3
jge
sti
push
mov
jle
sub
icebp
inc
dec
fadds
addr16
es
fs
sbbb
test
sti
lret
adc
sub
loopne
into
push
add
aaa
inc
push
in
in
out
cmp
jbe
sub
jp
or
ja
add
mov
push
jp
xchg
sub
xor
mov
and
out
jle
mov
inc
stos
jmp
mov
sub
mov
std
xchg
xor
mov
adc
and
push
cmp
mov
negl
lock
cmp
pop
hlt
repnz
jbe
sbb
push
cmp
cwtl
hlt
jno
sbb
jo
sbb
inc
fyl2x
add
out
fwait
das
sbb
sbb
loope
insb
push
repz
out
push
out
adc
cmp
pop
jmp
or
pop
in
cmp
icebp
adc
push
sbb
hlt
cmp
and
aad
adc
xchg
mov
fdivrs
sub
dec
test
cmp
pop
push
push
or
mov
scas
push
jecxz
jno
cmpb
lods
movsb
add
cmpsb
dec
mov
cli
and
push
jnp
dec
cwtl
aad
mov
out
push
and
push
out
test
dec
and
or
jo
push
movsb
out
jl
push
or
mov
dec
int
in
cmp
rorl
lret
repnz
dec
mov
in
out
push
push
or
and
fbld
testl
aad
cltd
xor
dec
sbbb
movsb
pop
inc
or
lock
repnz
sbb
xchg
dec
in
xchg
mov
xchg
mov
sbb
lret
sahf
inc
push
xchg
push
into
pop
push
imul
ss
lds
gs
xchg
xor
jge
mov
stos
call
or
scas
cwtl
mov
pop
inc
push
cmp
loope
ss
xor
and
add
mov
iret
mov
and
loop
sbb
fs
mov
rcll
addr16
mov
loop
loop
jg
mov
xchg
sub
adc
ret
scas
cli
int3
dec
mov
mov
mov
xor
lea
loopne
pop
pop
jns
enter
pop
mov
dec
jmp
inc
ljmp
xlat
aaa
decl
cmpsl
es
das
pop
enter
and
aaa
push
mov
inc
and
jbe
mov
in
repz
ret
cmpsl
lock
jo
scas
sub
stc
push
ficompl
stos
mov
push
test
xor
mov
adc
es
fldl
lods
pop
jecxz
pop
or
xor
jae
mov
dec
imul
fnsave
mov
insl
cmp
std
aam
imul
cmpsb
mov
ret
icebp
lds
sbb
cmp
outsl
imul
pushf
mov
cmp
fld
jns
push
jns
mov
imul
inc
sbb
inc
fwait
mov
and
xor
loope
shr
push
movsl
insb
xchg
shl
mov
std
lret
mov
imul
ds
mov
lret
add
cmpsl
sub
mov
mov
nop
inc
sub
lods
aad
inc
sti
test
or
fcomip
adc
lods
shr
jge
dec
dec
shll
adc
cltd
pop
lods
inc
xor
arpl
sbb
cld
or
cmp
gs
dec
sbb
xchg
sbbb
mov
lods
les
in
lea
rorl
inc
ret
dec
inc
rol
sbb
bound
icebp
les
sbb
sub
pop
xchg
je
cmp
loop
cmp
rcrl
add
shrb
sbb
xchg
and
lods
inc
and
call
sbb
sbb
imul
mov
test
jp
or
insb
cmp
arpl
mov
inc
jecxz
jns
aad
shll
mov
dec
jecxz
sbbb
mov
loope
in
and
insl
icebp
std
or
out
loop
inc
pop
fidivrl
repnz
push
or
int3
xchg
arpl
ss
int
jno
push
jne
dec
push
lret
xor
push
jmp
icebp
cmp
call
lahf
push
out
mov
loop
inc
fsubs
add
arpl
pop
mov
push
push
or
rcrb
fildll
xor
ja
jo
movsb
jo
decl
cmp
mov
pop
sbb
cmp
das
ret
fists
lock
ljmp
cmp
mov
das
and
add
pinsrw
je
xchg
daa
into
gs
push
mov
xchg
sti
call
fcmovb
in
push
rorb
andb
aas
jl
jge
push
pushf
cmp
nop
cmpsb
int
ficoms
fidivrs
xchg
in
or
rcr
sub
lret
mov
jmp
fwait
cmp
test
test
cmp
adc
mov
jne
sbb
xchg
stc
fdivs
in
out
jl
cli
mov
ret
loop
or
repnz
clc
sarb
push
mov
mov
inc
fwait
in
cmc
mov
jnp
rclb
out
icebp
mov
jbe
jnp
and
mov
jmp
push
into
cmp
insl
test
ljmp
cli
xor
in
jle
call
fistpl
iret
sub
pop
and
mov
mov
jp
es
iret
jl
and
add
mov
dec
mov
mov
shr
mov
cmp
repnz
stos
fimull
arpl
fwait
xchg
fidivs
xchg
scas
xchg
mov
enter
or
int
in
xchg
movsb
outsb
pop
dec
xchg
gs
popa
jae
dec
pusha
jno
sbb
mov
jg
clc
mov
arpl
dec
repz
jo
sub
xchg
push
sti
pop
jne
mov
cmp
sbb
imul
mov
test
push
jae
mov
imul
fnstenv
aas
aad
dec
inc
addb
or
sbb
shl
cmp
push
sub
push
mov
and
and
outsb
push
or
cmp
cwtl
outsb
cmovs
pop
stos
insb
sbb
jl
mov
cmpsb
lds
dec
mov
add
ja
adc
daa
cmp
jge
lods
scas
pop
mov
imul
mov
enter
add
mov
pop
cmp
jo
sbb
or
xchg
std
cmc
movsb
std
daa
pop
add
scas
xchg
std
stos
inc
int3
fwait
sti
fnstcw
adc
int
lds
mov
daa
inc
aad
jg
movsl
cmp
sahf
mov
dec
adc
dec
inc
mov
hlt
addr16
cmp
sub
push
mov
call
sub
or
jno
xchg
test
test
fucomp
pusha
lret
dec
addr16
adc
xchg
xchg
or
scas
popf
int
mov
ljmp
loop
out
ja
xor
je
mov
movsb
or
outsl
sbb
aas
xchg
dec
lods
sbb
loopne
mov
outsl
inc
in
mov
mov
std
jno
mov
lahf
scas
mov
or
in
push
add
rcl
mov
dec
inc
std
inc
mov
jl
cmp
ds
std
or
mov
dec
inc
loope
scas
sbb
roll
xchg
or
out
rclb
bnd
cld
in
inc
sbb
popa
cmp
cmpsl
les
mov
push
stos
mov
mov
add
jno
subl
mov
cs
add
aas
shll
sbb
xchg
loop
js
fwait
push
mov
push
mov
dec
xchg
ljmp
out
adc
xor
cmpsb
inc
xor
sub
in
mov
adc
push
push
lret
add
pop
and
les
mov
inc
cmp
movsl
jbe
xlat
mov
loop
jg
push
ljmp
setg
dec
pop
or
xchg
push
push
or
mov
leave
adc
adc
in
aaa
int
bound
call
add
jae
jnp
jmp
test
adc
inc
lcall
mov
jg
insb
sub
cmc
popf
not
fdivrs
jno
aas
sub
scas
ret
push
mov
scas
mov
pop
mov
mov
push
jmp
stc
inc
push
addr16
scas
insl
mov
mov
aaa
subl
dec
xor
mov
push
xchg
dec
in
xlat
mov
jae
enter
scas
or
mov
pushf
std
xchg
into
cwtl
or
dec
es
add
mov
xchg
xchg
test
dec
dec
jge
xor
xlat
js
std
arpl
mov
out
jae
mov
lret
sbb
fadds
adc
repz
mov
xchg
bnd
mov
orl
mov
inc
adc
test
fisttpll
or
pop
adc
and
test
pop
xchg
fwait
ficompl
popa
aaa
shrb
or
pop
or
mov
les
xchg
or
outsb
mov
push
pop
pop
sbb
stos
cld
scas
subl
popf
inc
repnz
imul
mov
or
shll
jb
lods
pop
cmp
pushf
icebp
in
pop
and
movsb
ds
xor
rclb
rcrl
inc
mov
and
sbb
call
cmp
fisubl
jne
mov
sbb
and
sti
xchg
in
and
add
jnp
test
fidivrl
inc
mov
cwtl
dec
jns
insl
addr16
out
adc
mov
das
addb
adc
gs
xorb
or
jbe
push
mov
pop
pop
push
cmp
ret
xor
dec
sbb
push
sbb
imul
daa
mov
jno
out
jg
scas
aaa
ss
bound
and
dec
ror
shrl
mov
mov
imul
popf
out
mov
cmp
cwtl
jns
leave
mov
add
pop
push
inc
aam
roll
cmpsl
cmp
add
push
enter
pop
pop
add
lds
xchg
ljmp
es
mov
les
aas
xor
mov
mov
ds
xchg
cmp
push
push
jne
int3
fs
inc
bound
scas
xchg
cld
and
leave
xor
pop
or
inc
xor
insb
fildll
jnp
pop
neg
loop
aas
fwait
jge
or
pop
in
jge
pushf
cmp
aam
js
cmpsb
cmp
scas
bound
sahf
movsl
cs
sbbl
jno
pusha
mov
insb
adc
popa
sub
jae
loop
les
mov
cmp
or
cli
push
mov
imul
push
aam
lds
inc
lret
sbb
and
aad
cmpsb
sub
adc
hlt
ljmp
add
jle
lods
mov
sub
sub
cmp
in
movsb
in
test
xor
fnsave
cmp
repz
inc
cld
mov
rolb
out
mov
jle
dec
jo
les
xchg
ljmp
daa
sub
ficoms
mov
inc
xchg
lock
xor
inc
lods
in
xor
sub
xchg
in
cmp
jmp
pop
pop
dec
inc
idivb
mov
inc
mov
in
mov
push
les
add
xor
mov
sub
add
lret
sub
clc
mov
ljmp
sbb
sbb
lds
mov
mov
cs
xor
adc
and
xor
pop
shlb
mov
out
add
dec
xlat
jge
mov
lahf
out
xchg
cmp
mov
aaa
rol
cwtl
mov
aaa
xchg
mov
cli
xor
out
ficompl
xchg
fisubrs
cld
dec
cmpsl
andb
in
lds
mov
leave
fistl
adc
jl
mov
add
push
add
inc
mov
loopne
mov
out
mov
fildll
add
popa
pusha
stos
sarl
sub
lcall
ja
mov
mov
sti
push
lods
cmp
dec
outsb
into
xor
mov
daa
loopne
jae
dec
aad
push
ret
ds
dec
loope
fistl
and
lret
pop
aad
and
pop
xor
and
push
das
jbe
mov
mov
xchg
shll
jo
and
pop
xchg
push
dec
jnp
cs
and
fmull
xor
addr16
rorb
mov
dec
outsl
inc
mov
push
pop
clc
and
in
fdivs
mov
mov
call
rcr
in
ss
popa
lods
add
scas
sub
inc
push
add
clc
ja
mov
aam
lcall
mov
fisttpl
mov
xchg
das
popa
das
popa
adcb
lcall
xchg
push
jo
rcrb
adc
sbbb
cltd
and
fidivl
shll
adc
testl
cwtl
pop
lods
push
cmpsl
out
jae
add
movsl
iret
scas
adc
pop
outsb
or
lods
inc
cwtl
stos
jmp
fsub
jae
sbb
and
fdivrl
add
xor
fucom
dec
push
call
dec
loopne
mov
enter
push
insl
lret
dec
and
jmp
test
nop
into
loope
xchg
data16
lods
cs
add
shlb
fadds
cmp
mov
sbb
or
insl
jge
out
xchg
daa
ljmp
aaa
orl
mov
data16
and
pushf
cli
push
incb
sub
cwtl
sarl
mov
or
push
sub
stos
sub
jno
in
mov
sub
xor
jmp
pop
cmpsl
ret
add
jno
shrl
pop
adc
mov
and
push
pop
push
insb
gs
shl
sbb
fadds
add
sub
fdivl
inc
jnp
inc
es
sbb
cmp
addr16
xchg
sbb
fstpl
xor
fs
dec
fmull
and
bound
mull
xor
mov
fdivl
gs
dec
pop
int3
jo
xchg
mov
pop
into
fidivrs
loop
mov
inc
lret
outsl
sahf
push
or
bound
cltd
jo
xchg
mov
xor
jl
cmp
ret
push
data16
mov
cmp
cmp
and
pop
std
inc
icebp
adc
popa
or
mov
lret
xchg
insb
cmp
xchg
xor
lcall
jge
push
jo
inc
inc
mov
sbb
pop
fwait
adc
mov
sub
gs
cmp
add
les
sub
sub
lcall
jo
das
jnp
loop
data16
sbb
mov
ret
push
or
jle
lods
jb
sahf
xchg
stc
mov
sbb
inc
cmp
sbb
sub
adc
enter
fs
and
mov
aas
int
pop
or
mov
sub
xchg
sub
mov
pop
hlt
rcl
sub
pusha
lods
add
push
mov
mov
sbb
mov
in
dec
lret
rcrb
out
mov
or
fwait
ljmp
add
and
js
jne
xlat
cmc
cmp
cmp
xchg
sbb
jb
jns
popf
lods
sbb
and
lods
js
xchg
pop
scas
xchg
rcrl
or
pop
mov
jns
cmpsb
enter
jns
jmp
mov
sbb
cwtl
adc
mov
sbb
pop
rorl
cmp
popf
xchg
pop
std
fstpl
lods
pusha
lahf
lods
cmpsl
aas
hlt
mov
push
cld
gs
push
sub
mov
mov
mov
adc
cmp
or
jo
pop
xlat
push
mov
popa
push
lret
clc
jmp
jmp
ret
gs
sub
mov
xor
dec
add
in
jle
cwtl
adc
pop
dec
out
inc
dec
in
loope
jp
mov
je
call
adc
lret
push
jl
test
in
iret
push
aam
xchg
push
jne
xchg
cmp
sbb
inc
adc
push
mov
jns
insb
add
subl
or
idivl
movsb
inc
psraw
arpl
ljmp
dec
cli
adc
sub
stos
clc
dec
pop
ds
loopne
mov
arpl
jo
mov
andb
rorb
sbb
inc
cli
or
fidivrs
mov
cs
mov
xor
lock
pop
xchg
and
mov
cmpsl
clc
arpl
aas
into
inc
dec
lret
rol
repnz
arpl
cs
fwait
cli
or
xchg
iret
fmulp
pop
rcl
pusha
scas
add
shl
lret
sbb
mov
sbb
enter
inc
dec
imul
ret
clc
test
daa
mull
iret
ret
mov
inc
je
add
mov
aaa
les
rcrl
shrb
ja
cwtl
or
lret
aad
sti
loop
xor
push
add
push
sti
out
test
dec
dec
dec
nop
lds
shrb
pop
pop
inc
rorl
hlt
repnz
insl
dec
pusha
rcr
ret
jnp
mov
sub
add
cmp
stos
mov
sbb
jns
lret
ficoml
rcrl
cmp
loop
pop
mov
mov
sub
movsb
mov
adc
push
bound
xor
or
mov
adc
xchg
fsts
rcrb
scas
cmp
mov
popa
cmc
jecxz
lahf
sbb
and
add
mov
mov
pop
push
push
mov
adc
mov
ret
sbb
aam
add
mov
adc
popa
dec
je
and
std
dec
add
aas
pop
je
xlat
in
mov
inc
pop
inc
sbb
mov
pop
inc
lods
add
sub
mov
cwtl
push
rcll
pop
push
mov
inc
movsb
or
lret
mov
addr16
xchg
sub
mov
pop
jg
fldl2t
es
add
mov
jns
cld
adc
xlat
jo
imul
jo,pt
adc
pop
sbb
dec
clc
and
out
iret
daa
int3
aam
std
add
cs
cmp
push
ljmp
or
jp
out
mov
cltd
scas
repz
push
jb
inc
lock
rol
rcrb
lahf
pop
in
mov
xor
pop
inc
xlat
mov
mov
shl
and
xchg
xchg
sbb
popf
pop
xchg
aas
clc
cmpl
mov
add
fmul
sub
adc
mov
cmpsl
ret
cmpsl
es
movsb
push
repnz
popa
aad
fisubs
sti
imul
dec
xor
inc
lods
inc
aas
dec
mov
cmp
mov
daa
in
cmp
ror
xor
movsl
cmpsb
out
push
int3
hlt
push
sub
mov
cs
mov
js
lahf
out
sbb
jl
insl
leave
in
mov
or
and
aam
xchg
insl
jp
lahf
stos
mov
mov
int3
and
pop
dec
adc
test
lret
aas
repz
xor
cmpb
mov
fucom
mov
gs
ss
pmaxub
shr
cltd
dec
push
pop
cmp
aad
jnp
leave
hlt
mov
jno
pop
cmp
mov
dec
movsl
outsl
pop
jae
add
or
push
mov
dec
add
ljmp
bound
and
aad
in
scas
loop
pop
dec
ja
xor
flds
mov
dec
xor
inc
scas
mov
repnz
test
add
push
mov
fldenv
stos
in
shll
mov
lcall
addr16
insl
mov
jnp
push
push
cmc
inc
cmp
lds
cmpsb
sbb
or
cwtl
pop
scas
lret
xchg
add
scas
ret
or
cmpsb
xor
sbb
adc
and
call
pop
xchg
ljmp
xor
mull
pop
xchg
sbb
stos
int3
movsl
cmpsl
ret
fsubrl
imull
and
jnp
nop
xor
je
mov
nop
std
jecxz
or
scas
or
cmp
cmpsb
in
fsubs
push
mov
dec
imul
jo
sub
rcll
shll
movsl
loop
pop
jmp
dec
pop
clc
sahf
shl
mov
jo
push
mov
out
and
es
jmp
adc
or
lods
addb
cs
sbb
add
imul
hlt
pop
sub
and
jg
or
cli
fmul
and
int3
dec
ds
in
stos
aad
push
xlat
sub
mov
loopne
aas
sahf
fsts
jge
scas
lret
test
test
pop
push
insb
xor
jge
out
add
sub
fwait
sbb
nop
ds
jl
mov
xchg
push
pop
loope
jecxz
xchg
movsl
lds
ds
int
dec
nop
sbb
add
inc
std
inc
inc
push
fsubs
jp
pop
mov
inc
bound
pop
repz
mov
add
mov
stos
fisubrs
push
adc
pop
mov
shlb
lea
testb
loopne
daa
outsl
popa
inc
dec
fidivrl
fnstsw
cmp
popf
sub
outsl
cld
lcall
in
sbbl
mov
add
lds
add
mov
dec
mov
xchg
repz
lahf
sbb
call
add
outsb
fnsave
ds
sub
cmovns
adc
xchg
xchg
dec
hlt
mov
xchg
sahf
sub
pop
lcall
lock
mov
cmp
mov
xchg
lods
mov
or
in
aam
xor
sbb
xchg
mov
lret
loope
pop
mov
lahf
push
sub
dec
rolb
jl
cltd
loop
push
pop
rorl
sahf
test
dec
in
sub
cmpsb
test
inc
push
cmp
cmp
and
mov
stos
je,pt
xor
hlt
stos
push
int
leave
lret
aaa
into
sar
movsl
aas
push
iret
mov
pusha
push
mov
andl
push
loope
in
fistpll
test
add
jb
leave
cld
in
and
scas
les
and
push
ljmp
jbe
scas
or
jmp
pop
out
andb
dec
shll
inc
fwait
movsb
dec
pop
dec
push
and
cmp
add
pop
stos
xchg
jmp
pop
testl
pop
ds
mov
mov
sub
pusha
jnp
out
test
out
fucomp
int3
int3
inc
dec
bound
cmc
mov
insb
arpl
or
or
aam
lds
sub
mov
stos
jo
fmull
iret
mov
pop
mov
inc
int
inc
add
cmp
insl
loopne
shrb
jo
outsb
jae
call
out
push
jo
mov
popa
push
leave
cmp
scas
clc
jae
in
xchg
data16
negl
cvtps2pd
pop
xor
xchg
ret
test
dec
aas
arpl
mov
xor
adc
jnp
aad
cwtl
fs
repz
xor
sarb
insl
aaa
xchg
inc
push
mov
data16
repnz
in
mov
pushf
pop
mov
repnz
jl
xor
int3
popa
xorl
mov
cltd
jbe
andb
push
push
jp
dec
loope
inc
in
adc
push
rol
inc
mov
push
cli
iret
sub
gs
enter
in
dec
sbb
cmpsl
add
adcb
incb
sahf
ss
shrl
loop
jl
mov
sysenter
sahf
adc
leave
pop
push
leave
roll
test
inc
push
xor
pop
xchg
and
mov
out
jle
mov
jp
imul
cmp
mov
inc
or
sbb
pop
mov
in
add
mov
sbb
cmp
and
arpl
cmp
push
adc
addr16
xlat
data16
adc
inc
shll
mov
fs
inc
lret
in
pop
cmc
and
pop
ja
jl
cmpsl
sub
adc
pop
fdivr
icebp
das
data16
dec
mov
cmp
jle
lods
lret
sbb
inc
push
inc
gs
jno
and
outsb
cltd
mov
jbe
xchg
add
mov
cmpsb
mov
and
jmp
and
jmp
push
xchg
movsl
fistl
jo
dec
mov
iret
cmc
xchg
sbb
sbb
bound
sub
dec
gs
js
mov
add
int
inc
mov
xlat
sub
hlt
mov
adc
push
inc
cmp
dec
pop
sbb
movsb
cmp
push
jge
fdivrs
pop
daa
mov
pop
test
push
sahf
stos
outsb
pop
lahf
ret
sub
dec
fwait
and
shrl
imul
rcr
enter
iret
ret
or
int3
sub
mov
xchg
pop
xor
mov
pmulhw
push
jmp
testl
gs
fadd
sub
adc
xchg
outsl
sub
jl
movsb
dec
cmp
in
xchg
sti
out
out
inc
movsl
mov
stos
cwtl
mov
mov
jno
fs
sbb
pop
adc
enter
in
add
mov
movsb
xchg
bound
add
loope
and
mov
int
jo
icebp
not
xor
fcompl
xor
sub
out
out
sbb
ret
add
adc
jb
iret
aam
sahf
fstpl
movsl
call
insb
leave
cmpsb
push
pop
sub
adc
inc
call
mov
xchg
std
lock
push
cltd
sub
imul
out
insl
loopne
sub
out
add
mov
lahf
and
cmpb
push
xlat
push
jne
and
lods
mov
adc
jg
ljmp
mov
outsb
fnstenv
or
test
subl
mov
outsb
mov
mov
or
add
add
mov
or
outsl
push
cmpsl
aas
jnp
mov
lcall
sbb
mov
pop
rcrb
jg
push
mov
lods
pop
sahf
fimuls
arpl
inc
call
test
std
xchg
aad
or
cmp
shrl
stos
shrl
push
out
cmpsl
faddl
mov
mov
fcomps
dec
fistpll
movl
jae
inc
add
jle
imul
xchg
dec
xchg
xor
push
push
inc
fstpt
adc
add
cmp
pop
and
mov
mov
das
sbb
inc
rcl
mov
in
test
mov
or
inc
sub
pusha
div
mov
es
pop
es
scas
inc
push
cmpb
test
push
popf
push
orl
iret
jmp
adc
sbbl
xor
insb
add
mov
lock
movsl
fdivrs
sti
mov
fidivl
xor
fistl
jp
punpcklbw
cmp
pop
jle
nop
xchg
out
xchg
test
mov
pop
lock
les
dec
ja
jg
loop
jmp
sbb
call
xchg
cltd
outsl
push
iret
mov
push
jmp
sub
pop
push
cmpl
mov
loope
rol
popf
xor
inc
mov
push
inc
xchg
fnsave
mov
cs
nop
daa
mov
fldcw
loopne
cmp
xchg
mov
ret
stos
stc
nop
loope
sub
sbb
addr16
or
out
test
test
in
mov
sub
push
or
cmp
dec
fbld
shll
lods
shll
les
repnz
daa
jg
cmp
jg
pop
mov
hlt
mov
shl
jge
negl
mov
cmp
push
and
sub
dec
inc
fnstcw
mov
pop
xchg
sbb
ret
push
jecxz
dec
in
rcll
inc
sbb
fbld
adc
and
mov
push
jbe
test
xchg
sub
fcomps
mov
decl
mov
outsb
in
xlat
adc
ss
cmc
arpl
lock
cltd
push
out
or
sahf
cmp
outsb
add
mov
or
out
mov
mov
inc
fiaddl
or
sti
xchg
sub
sti
pop
mov
leave
out
and
xor
sbb
add
sub
and
aad
scas
pop
neg
jnp
push
mov
stos
inc
xor
jb
add
andb
mov
mov
dec
loope
cmc
jge
and
cs
mov
js
jno
push
fsave
jge
cmpsl
icebp
sbb
fdivr
dec
rcrl
cmp
dec
mov
and
cs
lds
leave
pusha
inc
cmpsl
or
rclb
jo
inc
sub
cmp
xchg
sbb
test
aaa
into
sbb
xor
mov
and
iret
jns
pop
repnz
pop
scas
push
ljmp
movsb
dec
and
jge
xor
icebp
pushf
int3
arpl
sbb
sbb
or
rcll
mov
mov
dec
jo
and
push
jg
sbb
ja
or
andl
sub
add
lods
inc
dec
gs
xor
orl
mov
pop
inc
imul
or
push
jmp
jo
test
add
sub
xchg
sbbb
push
jo
mov
lret
sti
jg
mov
jne
fwait
cmpsl
lret
cli
jge
xlat
scas
and
push
jne
mov
lret
cli
jge
imull
jne
xchg
je
pop
test
jae
iret
mov
jg
cmc
lods
sbb
dec
jb
in
mov
cmpb
mov
mov
dec
imul
add
pushf
xor
xchg
sub
test
pop
repnz
xchg
mov
sahf
xor
mov
jle
pop
scas
sub
out
jae
add
xorb
xor
iret
popa
insb
movsb
cmp
adcb
insb
push
popf
mov
jg
pop
scas
sub
movsl
pusha
jno
int
mov
mov
scas
xor
fs
mov
mov
data16
cmpsl
cmp
scas
insb
cmpb
mov
mov
mov
js
or
fnstcw
or
jle
jp
insl
stos
dec
in
jg
xchg
sub
fsubrl
mov
ja
inc
cmpsb
xchg
xchg
sub
jb
jno
push
mov
xorl
cmpsb
xchg
sbb
movsb
push
mov
test
frstor
js
lds
and
test
addb
xchg
fs
daa
cltd
sbb
mov
push
out
sbb
mov
xchg
mov
outsb
add
xchg
push
and
mov
push
jmp
xchg
push
xor
addl
std
lds
sbb
adcb
cwtl
push
out
adc
inc
mov
sti
arpl
sbbb
out
jecxz
mov
cmp
insb
xor
sub
push
imul
lock
adc
cmp
and
pop
mov
mov
fists
lods
or
daa
or
sub
pop
sub
aam
mov
jg
mov
pusha
testl
cs
fistpl
outsl
push
push
subb
test
loopne
add
mov
std
sub
imul
lds
aad
repz
mov
daa
pop
sbb
xor
test
lret
mov
add
or
inc
jl
inc
scas
addr16
xchg
int3
or
out
ret
pop
dec
add
xchg
insb
loope
lcall
mov
fwait
sti
xchg
lret
pushf
lcall
push
mov
fnsave
std
xchg
or
nop
jb
hlt
mov
lahf
ss
sahf
xor
jae
stos
inc
dec
lods
lret
loopne
stc
nop
or
adc
inc
lods
mov
call
mov
sti
xchg
jnp
fnstenv
xchg
adc
xchg
test
loope
sbb
xor
push
out
and
jmp
push
or
fnsave
les
jg
jp
popa
loop
xchg
xlat
jae
add
es
sub
lcall
push
xor
stc
test
int3
arpl
jbe
and
dec
xor
jnp
and
negb
out
inc
in
loope
sbb
lret
push
popf
jo
std
xchg
out
ret
or
xor
ljmp
lea
push
outsb
loopne
ljmp
out
popf
adc
fisttps
test
in
mov
push
insb
xor
test
es
pop
movsl
xor
jns
scas
scas
sti
data16
xor
xor
hlt
pop
jp
mov
pop
lock
mov
gs
lods
hlt
lock
leave
inc
fdivr
dec
push
jmp
inc
xchg
adc
sahf
ljmp
cmc
adc
test
and
mov
rcll
inc
stos
adc
leave
inc
lret
int3
arpl
sbbb
sub
and
jns
jnp
add
aaa
lret
add
lods
mov
inc
fistl
push
loope
bound
test
orb
dec
jne
outsb
ret
insb
add
and
cs
sub
jo
scas
mov
ret
dec
rcl
cwtl
aam
fstpl
jmp
fldcw
or
test
and
fildl
gs
mov
mov
in
imul
jge
in
mov
pop
std
cmp
ficoml
loope
divl
add
sbb
ja
inc
hlt
daa
push
and
in
js
jns
and
test
sbb
fstl
pusha
mov
push
and
cmp
lret
inc
movsl
pop
lret
adc
mov
out
sbb
out
test
or
pop
mov
jne
jecxz
jg
loopne
insb
push
xor
sub
mov
rorl
and
jnp
aaa
out
pop
xor
js
or
xor
fstl
and
cld
jb
ret
inc
addl
mov
scas
test
xchg
adc
xor
out
lret
push
cmp
icebp
shll
bnd
and
scas
and
inc
lret
dec
mov
notl
repnz
movsl
sub
or
das
and
jnp
jge
adc
scas
jle
dec
mov
add
pusha
test
lret
mov
shrb
pusha
pushf
jbe
sub
clc
xchg
push
mov
lods
das
pmaddwd
xchg
pop
xchg
ret
jecxz
daa
movsb
mov
scas
xchg
jecxz
ss
push
lods
outsb
mov
mov
mov
mov
pop
aad
xchg
push
or
inc
les
lcall
iret
gs
rclb
aad
mov
in
xor
inc
fadd
cmp
cmp
adc
dec
shrl
std
sub
in
jnp
and
mov
cmp
scas
pop
lock
rorl
mov
dec
lock
lea
setne
hlt
sub
push
nop
mov
jmp
jecxz
xlat
das
repz
adc
inc
icebp
pop
or
in
in
std
push
cld
mov
adc
inc
mov
outsb
mov
sub
movsb
insl
outsl
roll
push
or
jb
jmp
mov
xor
sub
pop
test
xor
push
sub
cmc
scas
jle
pusha
push
out
movsl
loope
xchg
js
add
dec
test
movsb
pop
push
sti
movsl
mov
fistl
ljmp
es
or
mov
mov
insl
mul
test
ljmp
and
lods
xchg
sub
incl
addr16
pop
mov
mov
lret
or
loopne
fnstcw
mov
lret
or
test
inc
mov
xlat
cld
push
out
in
clc
cmpl
xor
pop
pop
xchg
lea
pop
imul
call
lods
call
cld
aad
mov
repnz
mov
jecxz
ja
in
xchg
xchg
jae
dec
mov
pusha
mov
dec
aam
xchg
ds
fidivs
into
cmp
sbb
jl
xlat
dec
mov
cmp
inc
sub
lret
jb
or
push
cmp
mov
inc
mov
sub
test
gs
cmp
sub
aam
dec
inc
shrl
insb
aad
push
imul
cmp
dec
pop
ja
jns
dec
mov
cmp
add
aad
mov
and
xchg
popf
xor
shl
mov
lcall
inc
mov
fidivrl
loopne
dec
ret
add
popa
clc
add
cmp
or
outsl
pop
or
or
aad
js
or
in
jb
lcall
inc
imul
imul
cmc
in
push
in
mov
divb
fmul
or
lods
fdivl
hlt
in
inc
mov
mov
sti
sbb
mov
add
ret
mov
aad
sub
pop
enter
cmp
std
cltd
sbb
or
lock
mov
cld
daa
rcrl
mov
mov
jno
idivb
rcr
in
fnsave
shlb
call
scas
pop
fisttps
dec
push
out
sbb
inc
mov
push
pop
stc
cmp
sub
jecxz
ret
fmuls
lahf
in
das
test
scas
xchg
sbb
mov
mov
pop
aam
roll
daa
or
fldl
jmp
or
inc
xchg
mov
push
pop
sbb
xor
leave
lds
out
inc
cli
and
lret
push
int
imul
xor
dec
dec
fstl
sarb
add
and
add
cmp
jmp
xor
jbe
dec
fisubrl
dec
sub
push
lcall
pop
sti
ja
out
xor
cmpsb
pop
push
jge
loope
sahf
mov
pop
popa
adc
xorl
fldl
cmp
sahf
jmp
outsl
sub
mov
and
sti
xor
fcoml
push
fdivrs
push
pop
les
inc
repnz
mov
xchg
push
or
mov
out
fwait
imul
lods
lods
pusha
cld
or
sbb
shrl
nop
or
sbb
add
pop
jns
mov
push
ljmp
and
dec
mov
scas
pop
mov
in
ljmp
pminub
sub
add
iret
data16
icebp
sub
add
adc
sbb
jnp
rorl
push
sub
mov
sarb
adc
scas
inc
enter
pxor
push
mov
or
clc
and
mov
push
int
dec
addr16
dec
test
pop
dec
cltd
xchg
jnp
outsb
inc
insb
add
dec
mov
add
cld
mov
aad
repz
xor
mulb
ja
jecxz
imulb
push
add
es
jns
ss
lock
sub
push
mov
or
sub
mov
or
xor
shrl
push
fists
sub
popa
jle
xchg
mov
xchg
xchg
je
xorl
adc
enter
xor
sub
jbe
fcoml
or
xchg
cmp
fcoml
mov
cltd
hlt
sbb
pop
mov
jmp
in
icebp
sbb
sub
sub
arpl
pop
lods
fs
xchg
mov
stc
pop
cwtl
mov
sbb
mov
aaa
int
push
jmp
repz
mov
in
dec
fs
cmp
add
pusha
fistl
out
es
sbb
mov
out
dec
jle
xchg
sub
lahf
dec
and
hlt
push
out
xchg
sub
or
add
adc
and
icebp
outsb
pushf
sbb
inc
cmpsl
push
mov
mov
ljmp
enter
and
ss
xchg
and
cs
and
addr16
lcall
cmpl
jmp
pop
push
pop
icebp
daa
inc
jno
add
fisubrs
test
cld
xchg
jne
into
aaa
mov
loop
cwtl
xchg
mov
add
pop
imul
mov
cmp
cld
pop
pop
int
mov
sub
rcll
addr16
sbb
fnstenv
sbb
pop
lock
sbb
sbb
in
mov
out
lret
inc
mov
sbb
aas
jno
les
push
xor
roll
aaa
leave
pop
mov
jg
adc
mov
dec
add
aaa
jns
inc
lret
lret
inc
inc
fwait
pop
push
jecxz
jno
outsl
cltd
xchg
data16
mov
aaa
orl
dec
xchg
cmpl
cwtl
xchg
sub
push
repnz
pusha
xlat
dec
jne
push
aam
cmp
pop
ret
cltd
lea
fnstenv
jmp
mov
sub
pushf
cmp
and
lret
sbb
or
mov
cld
xor
mov
dec
mov
add
pop
aam
daa
sbb
jmp
add
mov
push
cltd
xchg
xor
sarb
push
test
repnz
xchg
add
mov
out
push
iret
mov
pushl
insb
dec
mov
fdivs
arpl
inc
sarb
xor
out
jl
mov
fsubl
in
cmp
or
aad
sub
test
lret
out
scas
pop
leave
add
and
sub
push
lret
xchg
arpl
cmp
jns
lcall
jle
dec
stos
sub
adc
push
pop
popf
sbb
sub
xor
sbb
push
push
mov
lods
jae
cltd
xor
imul
inc
int3
xchg
xor
sub
scas
inc
hlt
jb
fstl
inc
stos
test
cmp
push
call
or
test
cmp
and
shrl
lock
outsb
dec
call
cmp
dec
test
mov
scas
jae
shll
and
lds
xchg
add
insb
imul
lds
loop
mov
push
out
and
clc
cmpsl
xchg
mov
sbb
pushf
dec
mov
xorl
push
test
sbb
sub
cmpsb
lahf
xchg
shl
inc
int
repz
fldenv
xchg
insb
shl
mov
mov
jecxz
testl
push
mov
clc
fnstenv
mov
mov
inc
and
inc
lret
push
xor
xchg
xchg
adc
test
sub
pop
pop
mov
inc
int3
sub
ljmp
or
dec
sub
notl
mov
jmp
mov
cmc
pushf
mov
movsl
or
xchg
jge
inc
stos
jne
bound
jae
jp
nop
cmp
add
adc
ljmp
lea
lcall
pusha
pushf
or
jnp
cmpsl
insl
in
pop
mov
pop
rclb
ds
push
daa
mov
daa
cmpsb
or
push
imul
inc
xchg
sbb
dec
xchg
scas
jb
mov
push
das
jg
pop
push
jge
inc
mov
dec
inc
add
and
mov
push
cwtl
mov
pop
push
or
cmp
add
sbb
sbb
lods
jbe
mov
sahf
xor
sub
add
or
add
andb
xor
aam
xor
outsb
mov
xor
xor
lea
pop
xchg
rorl
outsl
lret
mov
nop
cmc
sub
jl
cli
adc
cmp
sbb
ds
sub
in
lds
pop
mov
int3
aas
insl
int3
out
adcl
aas
sbb
push
push
nop
idivb
adc
mov
gs
mov
sub
jnp
mov
xor
xchg
js
test
icebp
add
push
push
or
adc
ss
push
je
in
xor
flds
cmp
push
into
out
addr16
lds
test
mov
loope
popa
lds
xchg
mov
cltd
push
sbb
jnp,pn
je
push
dec
je
imul
inc
rcll
mov
lret
out
pop
fidivrs
push
push
mov
loopne
xchg
out
lods
jne
dec
xor
jno
ds
aad
cmp
faddl
add
loope
es
jae
inc
sarl
jo
mov
int
aad
push
leave
cwtl
mov
inc
add
leave
sti
adc
mov
pop
loop
push
hlt
mov
cli
sbb
jmp
mov
mov
lea
movsb
shrb
add
pop
xchg
or
xchg
pop
mov
cmpsb
pop
ja
int3
cli
and
loope
rorl
cmpsb
lret
js
outsb
mov
fwait
xorb
aas
movsb
xchg
pop
jmp
jecxz
sbb
pushf
adc
and
xchg
and
iret
inc
rolb
mov
iret
jle
cs
mov
sbb
nop
jnp
outsl
repz
cmp
mov
dec
imul
mov
cltd
add
test
insl
adc
mov
lds
hlt
jns,pt
in
ss
loop
je
out
add
filds
xchg
leave
inc
and
mov
jle
dec
lea
mov
xchg
mov
adc
xor
out
xor
fdivl
out
cmpb
je
int
pop
mov
fldcw
and
lods
and
sbb
ror
fcoml
pop
hlt
inc
xadd
push
ds
or
cmp
out
in
ret
cs
daa
in
lcall
jne
in
loope
pop
lods
imul
inc
sarb
sub
nop
addr16
dec
cmp
pop
ret
mov
jnp
xor
loope
xchg
jge
lret
fcompl
xor
lret
mov
bound
sub
push
out
dec
cs
fldt
loope
in
sub
mov
insb
mov
mov
popa
scas
out
out
call
inc
into
xlat
int
jmp
fisubl
fnstsw
pop
inc
shlb
cld
push
adc
outsl
xchg
ja
cld
xor
sub
jg
dec
inc
ror
mov
mov
sub
cmpsb
mov
jo
push
pop
movsl
jo
icebp
dec
ret
cmp
mov
in
or
icebp
mov
push
or
inc
rcrl
hlt
mov
or
repz
mov
aas
or
lds
cmpsl
dec
sar
jge
ja
test
movsl
arpl
arpl
aas
repnz
pop
repz
aas
ljmp
jno
push
dec
mov
cmpsb
xor
nop
in
lret
mov
fcoml
fstps
sub
mov
in
sub
mov
jecxz
jno
ds
fdivs
mov
mov
inc
leave
or
xchg
xchg
int
enter
mov
mov
push
out
test
pop
mov
push
dec
push
jmp
js
fistps
mov
inc
xor
jb
test
sub
dec
sbb
outsb
jns
bound
es
and
and
or
sbb
divl
push
mov
les
mov
decl
mov
out
push
out
cld
addb
add
jae
sbb
leave
cmp
add
jnp
mov
cmp
aad
mov
lret
mov
pop
pop
sub
jle
add
mov
hlt
gs
aas
lods
sub
clc
fbld
ljmp
in
fisttpll
xor
stos
mov
mov
idiv
pop
iret
fstpl
pop
enter
les
loop
ljmp
and
loope
adc
in
movsl
jae
push
push
bound
and
std
and
sti
add
rorl
sbb
es
stos
pop
je
mov
lea
cli
outsb
scas
pop
push
or
xor
nop
xchg
inc
and
xor
xchg
js
dec
stos
in
lret
push
int3
mov
xor
inc
mov
stos
cld
call
andb
push
ljmp
and
lea
dec
jo
aaa
into
inc
push
mov
xor
cmpl
lahf
xchg
pop
mov
mov
pop
movsb
insl
popa
add
xor
xchg
dec
lcall
test
les
add
outsl
mov
sbb
imul
pop
jmp
loope
arpl
dec
mov
pusha
out
pop
repnz
xchg
in
jle
cmpl
frstor
pop
incl
pop
or
push
jmp
sub
sub
xor
outsb
ret
sbb
fimuls
or
sbb
fnstsw
ret
xchg
cmp
into
call
gs
add
fcomps
rcrb
inc
pop
test
out
push
ljmp
inc
add
rorb
loope,pt
mov
push
icebp
pop
lret
fnstenv
lds
divb
sti
sub
ret
data16
dec
lret
adc
in
pop
les
fimuls
add
in
sub
sub
push
xchg
cmpl
mov
xor
xor
into
rcll
pop
lods
andl
jp
xchg
and
sbb
sbb
das
lcall
pop
xchg
mov
lret
das
lds
je
fsub
jp
pop
lcall
pop
imul
xor
mov
loop
or
dec
and
xor
lock
xchg
xor
sub
das
fidivrl
pop
cmp
push
jmp
push
adc
sarl
inc
ljmp
mov
xchg
mov
fisubrs
pop
mov
and
in
out
sbb
xchg
mulb
mov
ret
or
mov
aad
xchg
inc
push
into
cmp
mov
ret
in
and
xor
loop
rcr
jbe
cmp
in
mov
sbb
bnd
cli
push
cmpl
js
movsb
xlat
sub
pop
rcrl
mov
icebp
cmpsb
popa
pop
inc
xlat
mov
xchg
insb
into
or
outsl
testl
iret
xchg
rcl
fstps
lds
in
sub
push
cwtl
mov
jmp
fwait
cltd
stos
jbe
and
xchg
push
mov
mov
pop
arpl
push
das
cmp
mov
stos
loopne
add
sub
ja
lock
icebp
dec
rol
insb
aam
cmp
pop
mov
pop
mov
mov
mov
ja
jnp
sub
pop
mov
jae
rcl
dec
call
scas
dec
das
sub
jne
mov
js
mov
sub
cmp
push
sahf
pop
xchg
pushf
nop
pop
inc
lcallw
sbb
adc
cmp
loope
out
sbb
add
xor
aam
nop
enter
les
sarl
push
mov
jp
sbb
mov
in
jbe
lahf
cmpsl
mov
pop
call
mov
stos
shll
test
movsl
repz
hlt
mov
fmul
shrb
loopne
insb
mov
ret
sbb
repz
push
enter
icebp
mov
inc
mov
mov
pop
lret
sti
sub
sbb
sbb
push
icebp
pop
xchg
psubw
adc
sbb
adc
cld
nop
xor
mov
icebp
push
into
mov
xor
fs
mov
mov
test
cwtl
shlb
call
cmpsl
pop
repnz
dec
rorl
cmp
mov
clc
adc
xor
clc
cld
sub
loope
push
mov
lret
popa
xlat
xlat
test
popa
psrlq
mov
jp
lret
push
fucomp
and
ret
rcr
inc
lock
push
cmc
sarb
aam
mov
cmpsl
push
adc
add
es
cmp
out
push
out
fstpt
fnstenv
shrb
push
pop
push
pushf
test
out
xchg
fmuls
daa
loop
cmp
mov
push
or
xchg
test
sub
pop
mov
shrl
adc
inc
shlb
cmpsl
call
ficomps
lock
push
inc
ret
aam
push
inc
xor
lds
bound
ljmp
or
or
outsl
mov
andl
shrl
push
in
cmp
push
faddl
jbe
mov
adc
sbb
and
fsubl
ss
pop
fsubl
cwtl
pop
std
mov
cltd
pop
fstpl
scas
insl
cmpsb
push
test
sub
fs
ljmp
sub
sbb
xchg
adc
and
sub
fildll
mov
push
jne
mov
vphaddbd
cld
cs
add
bound
test
or
mov
int3
arpl
aam
pop
sub
add
scas
mov
aam
jge
mov
mov
divl
adc
jmp
xchg
inc
mov
gs
fiaddl
mov
sarb
sbb
arpl
lret
xor
es
or
aas
sahf
push
aam
movsl
jl
jl
mul
inc
icebp
pop
mov
addr16
out
ret
pop
icebp
out
aas
mov
or
das
std
fisttpll
jle
or
lret
mov
adc
sbb
lret
loope
testl
in
or
test
fistps
or
cld
cli
inc
loopne
inc
push
mov
bnd
sub
push
shll
xchg
pop
ret
cli
test
pop
stos
sbb
lahf
cld
mov
sbb
mov
fistl
mov
insb
pushl
out
cmpb
mov
pop
aad
xchg
lods
sub
repnz
shrb
adc
mov
mov
mov
data16
push
mov
xor
mov
xchg
subb
or
cmp
jge
aas
mov
adc
movsl
inc
xchg
sub
das
inc
adc
insl
ljmp
fs
mov
jecxz
fstps
stos
arpl
enter
leave
inc
imul
or
mov
stos
outsb
mov
mov
cs
mov
aas
jl
aam
fwait
mov
call
inc
inc
or
dec
dec
jge
pusha
inc
adc
jg
iret
aaa
pop
sub
jmp
fs
fcomps
sub
jp
mov
cmp
adc
cmp
xchg
xor
ret
pop
mov
push
call
add
outsl
push
push
mov
mov
fsubrl
sar
das
leave
pusha
popa
sbb
out
mov
js
mov
ret
xchg
sub
pop
push
mov
dec
jns
fsubrs
lret
pop
idiv
mov
jle
dec
movups
mov
ret
mov
jecxz
push
fnstenv
add
testl
in
stos
cmpsl
fisttpll
xor
aas
inc
pop
xor
jmp
xorl
cwtl
aad
es
pop
mov
pop
lods
inc
mov
aam
lods
lret
fistps
ljmp
push
or
jno
es
clc
inc
fldt
out
push
dec
stc
jl
icebp
mov
adcb
mov
cmpsb
mov
fildll
push
jbe
dec
loop
xchg
fidivl
subl
ljmp
or
push
lods
outsl
sub
lret
sarl
scas
loop
jmp
add
call
mov
fldt
sti
cs
sbb
icebp
dec
sub
push
aam
popf
add
es
push
adc
inc
fldcw
lret
sti
mov
jg
dec
push
adc
mov
ret
hlt
mov
jecxz
adc
imul
push
mov
mov
cmpsl
fmull
lds
push
ljmp
jno
in
add
aaa
cmc
pop
mov
pop
scas
inc
mov
aam
lods
int3
arpl
cltd
pop
repnz
xorl
push
or
mov
es
inc
stc
inc
fisubrl
gs
xchg
dec
pop
repz
enter
push
jmp
aaa
icebp
jle
and
mov
ss
mov
fnsave
repz
cld
fsubrp
inc
dec
cmpsb
sub
testl
mov
ret
push
ljmp
jb
and
and
inc
cwtl
das
jae
mov
lock
testb
out
add
xlat
outsb
or
cs
test
lahf
ss
addl
ja
push
fnsave
xchg
pop
pop
sti
push
mov
jo
push
cmp
inc
cmp
mov
cltd
xor
xor
mov
jae
pop
test
js
fidivs
adc
call
add
scas
pop
aam
sbbb
mov
pop
fsubp
mov
mov
fdivrl
adc
test
fdivl
pushf
mov
insb
mov
mov
jp
xchg
jnp
lcall
outsb
push
sti
xchg
popf
pop
out
ret
gs
scas
int3
fiaddl
push
cmpsl
jle
cmpsl
loop
mov
jge
jb
push
push
sub
dec
movsb
jp
roll
stos
inc
inc
test
push
test
rclb
fcmove
pop
outsl
and
jne
stos
jecxz
mov
inc
fwait
cwtl
push
outsb
pop
je
cmp
sti
sub
mov
jne
test
hlt
loop
xor
sub
dec
xor
inc
or
divb
in
loop
mov
out
clc
inc
jbe
mov
dec
xchg
inc
inc
and
loope
stc
push
cmp
dec
shlb
fsts
in
test
cltd
xchg
mov
push
insl
add
inc
movsl
sub
nop
pop
roll
push
pop
stc
mov
test
mov
scas
mov
clc
mov
in
inc
dec
insl
in
xchg
gs
sub
mov
scas
xor
js
and
es
outsb
les
mov
arpl
and
ret
or
add
adc
pop
ret
pushf
cmp
in
pushf
lahf
subl
rolb
movsl
dec
daa
gs
adcb
inc
push
xchg
scas
cltd
sarb
addr16
add
mov
lods
sub
sbb
test
ljmp
outsl
add
movsl
je
xchg
or
sbb
xchg
jp
out
mov
adc
ret
test
pop
add
lods
jge
push
add
mul
insl
jmp
insl
cld
sbb
or
int
in
jmp
mov
ss
in
adc
hlt
mov
loop
and
dec
pop
insl
pushf
mov
cmpsb
mov
and
dec
push
lods
add
xchg
xlat
jnp
fs
sbb
jecxz
fimuls
or
cmp
les
xor
dec
stos
xchg
cmc
add
xorl
cltd
mov
dec
into
add
in
int3
ljmp
stos
cmp
ret
mov
xchg
lahf
data16
adc
outsb
add
sub
insb
add
stc
mov
push
add
inc
xchg
clc
popl
xchg
sub
stos
sahf
xor
data16
mov
jg
mov
rcll
adc
pop
sub
repz
in
mov
stos
mov
sti
cmp
jb
lret
cmpsl
test
sbb
dec
pop
mov
xchg
jmp
lock
dec
mov
xor
xor
mov
dec
loop
inc
inc
data16
xor
call
jge
dec
stc
cmp
adcb
or
cmp
xchg
inc
repnz
pop
fdiv
popa
outsb
add
scas
test
sbb
sbb
inc
wbinvd
pushf
cltd
cmp
push
and
mov
cltd
cmp
movsb
push
lret
adc
pop
mov
mov
mov
push
add
mov
xchg
inc
lea
xchg
aas
jecxz
out
addr16
fidivrl
arpl
xlat
inc
cmp
lahf
mov
movsb
stos
sub
mov
dec
or
gs
mov
mov
ljmp
dec
cmpsl
das
pop
cmp
push
jp
lret
data16
and
xchg
cmp
xchg
mov
cmpsl
mov
movsl
enter
mov
dec
loope
loopne
dec
adc
mov
push
popaw
xchg
cmp
std
fs
xchg
cmp
cmpsl
cs
pop
inc
jne
js
xchg
mov
dec
sub
dec
loop
or
jae
jae
rcrl
mov
xor
mov
xor
nop
outsb
in
cmp
fidivs
aam
adc
lea
pop
mov
loop
pusha
call
stos
in
pop
stos
mov
test
movsl
sub
loopne
dec
cmp
or
stos
xor
jle
test
fwait
inc
cmp
mov
push
test
mov
inc
or
loop
mov
cmp
fwait
inc
xor
cmpsl
sub
sub
shlb
cmp
cmp
inc
mov
sahf
aas
xchg
cmp
daa
add
lods
test
je
shrb
in
out
dec
pushf
mov
in
lods
movl
movsl
mov
fiadds
fcomip
pop
add
push
aad
mov
cmp
xor
lahf
dec
mov
push
int3
adc
jb
test
pushf
das
insl
lock
mov
cmpsl
mov
pop
add
iret
insl
lock
imul
lret
dec
adc
movsl
orl
xlat
jns
dec
mov
sub
sbb
popf
stos
sub
lods
lods
jnp
stos
mov
mov
into
or
jmp
pop
dec
adc
mov
mov
jmp
aas
dec
adc
push
andb
enter
xchg
pusha
pop
lret
inc
arpl
mov
mov
iret
out
mov
lret
clc
dec
or
adc
lods
sub
pusha
out
adc
cmp
in
insb
jmp
push
add
xor
inc
cmp
mulb
inc
ret
mov
shl
hlt
fs
push
add
inc
lcall
dec
mov
inc
mov
push
xor
sbb
mov
nop
in
insb
ss
dec
or
xor
mov
sub
stos
in
imul
sub
int
in
test
dec
or
mov
popa
mov
movsb
in
and
push
cmp
dec
out
in
and
dec
or
sub
jne
lahf
jmp
mov
in
and
testl
pop
pop
lods
sub
add
pusha
mov
dec
in
jmp
cmp
dec
or
sub
lods
sti
push
je
repz
push
jmp
or
pop
mov
dec
push
aad
lret
or
fwait
xor
call
or
fdivr
push
jle
dec
pop
dec
arpl
or
inc
adc
push
add
aam
push
repnz
icebp
roll
ds
adc
and
fwait
jno
iret
mov
insl
jle
sbb
jge
mov
mov
divb
lods
rcll
addr16
iret
xchg
push
push
iret
dec
lret
dec
or
xchg
pop
sti
aam
scas
daa
or
xchg
sub
arpl
fstpt
xchg
aas
sbb
mov
inc
cmp
aad
mov
popa
ds
pusha
pop
clc
cmp
and
inc
cmovo
mov
cli
in
imul
push
push
and
or
xchg
js
push
mov
push
pop
aam
jge
out
imul
xchg
inc
dec
sub
dec
or
or
jp
and
mov
hlt
push
out
insb
cld
out
pop
sti
xor
bswap
dec
das
xchg
inc
push
cwtl
dec
or
scas
mov
les
aas
fwait
je
call
add
mov
inc
cld
xchg
mull
call
jle
gs
out
imul
call
adc
ds
jmp
push
imul
push
scas
in
addr16
or
adc
mov
dec
inc
adc
gs
add
in
or
jb
cs
aad
hlt
pop
test
adc
pop
mov
adc
jb
cwtl
cmp
jo
sbb
aam
and
ja
stc
pop
cmpsb
imul
dec
mov
test
xchg
pop
and
ret
stos
jg,pn
mov
adcl
test
cmpsl
aad
and
popf
pop
rcl
das
test
push
or
adcl
fidivs
shll
xor
shrd
lds
sub
push
mov
aam
push
push
and
mov
sub
dec
test
aas
dec
mov
aam
mov
aaa
lahf
iret
pop
mov
xor
pop
sub
into
cmp
pop
add
imul
into
pop
mov
adc
sbb
leave
mov
pop
pusha
mov
pop
push
jb
push
cmp
push
add
push
sbb
and
xor
and
stos
xor
xor
fdiv
pop
scas
xor
out
sub
sub
cmpsb
xchg
cmp
xor
cld
jno
push
std
push
push
add
inc
dec
jecxz
or
jnp
sub
push
stc
mov
stos
sarb
movsl
inc
or
mov
arpl
pop
lret
enter
mov
in
jno
mov
clc
push
rorb
inc
adc
imul
fs
hlt
cmp
dec
cs
insb
pop
xchg
dec
or
movsb
xor
push
icebp
pop
aam
cwtl
cmp
push
outsl
in
sti
add
sub
pop
cmp
add
pop
mov
mov
jl
and
enter
mov
add
add
or
ds
sub
jecxz
mov
cli
rolb
dec
daa
cld
pop
pop
xchg
fdivrl
or
fldcw
sub
mov
je
mov
mov
add
shrb
outsl
or
xor
cmp
sub
xor
shr
insl
mov
mov
sbb
or
mov
es
rclb
push
jle
leave
dec
popf
cmp
push
popf
aaa
inc
adc
nop
data16
mov
call
notb
movsb
push
pop
push
rolb
addr16
adc
test
jmp
push
add
cmp
popf
std
and
lock
lea
cmc
lea
jns
cs
adc
fnsave
pushf
xor
in
xchg
push
sbb
into
jb
dec
adc
arpl
sarb
pop
je
xor
lahf
addr16
subl
mov
dec
mov
insl
out
pushf
movsb
or
lods
lret
pop
mov
icebp
bound
rorb
add
stos
inc
scas
or
fwait
xchg
jge
in
rorb
int3
jecxz
mov
je
fstpt
call
call
xorb
or
ja
push
xchg
inc
or
jle
dec
push
pop
cld
das
cwtl
enter
xlat
test
test
jo
add
mov
pop
mov
push
xor
out
mov
movsl
push
mov
jmp
dec
jecxz
cmc
sbb
add
fisttps
push
lds
dec
adc
and
jmp
push
push
stc
clc
clc
ja
inc
out
movsl
sub
stos
in
scas
xchg
rol
inc
adc
sbb
mov
jns
adc
push
std
push
push
mov
mov
push
add
imul
jb
rcr
jnp
pop
fdivrl
or
lret
add
cmp
out
imul
stc
pop
dec
lahf
xchg
adcl
mov
pop
xor
cwtd
mov
orl
fisttpl
shll
pushf
addl
out
stos
xor
adc
push
cmp
cmp
lods
pop
sub
adc
adc
mov
scas
lds
inc
mov
in
mov
cmpsb
scas
cmp
shlb
and
idivb
xchg
inc
pop
lock
pop
loop
add
enter
sbb
xor
adc
hlt
sub
mov
cmpsb
inc
adc
mov
je
mul
jne
dec
lcall
aas
mov
dec
aam
sti
pop
bound
addr16
fidivs
insl
or
loop
imul
mov
xor
out
in
push
stos
das
xchg
mov
mov
xchg
mov
fsubr
mov
add
addr16
stos
ss
je
in
ss
xlat
test
stos
lds
inc
fsubs
mov
xor
sbb
rol
call
or
xchg
jg
cld
jecxz
xor
popa
dec
add
sbb
aaa
sahf
fwait
dec
leave
nop
js
push
aam
xor
push
lds
ret
in
cmc
pop
rorb
or
pushl
shll
out
push
cld
clc
cltd
fiaddl
add
cmpsb
jge
dec
adc
imul
testl
cmc
pop
data16
iret
xchg
push
jns
push
sub
fcomps
cmp
cmpsl
fisttpll
push
push
mov
sub
repz
je
pop
int
out
fsubrs
xor
inc
pop
lret
xchg
int3
xchg
stos
std
std
arpl
mov
push
ret
mov
test
xchg
sbb
jg
adc
stc
movsb
sub
xchg
inc
or
hlt
pop
push
sahf
dec
adc
adc
mov
in
push
sahf
inc
xchg
jns
stos
stos
les
mov
xchg
or
mov
inc
mov
ljmp
mov
mov
scas
sub
push
ret
popa
repz
cmc
xor
dec
lock
dec
mov
lret
scas
vmptrld
lods
jns
es
in
mov
pop
and
mov
lock
gs
lds
jmp
aas
insb
mov
pop
mov
sbb
fbld
cmpsb
daa
inc
cmc
pop
pusha
xchg
mov
push
shlb
push
pushw
loope
mov
or
fnstsw
inc
pusha
push
add
ficompl
mov
mov
jecxz
dec
lret
xchg
inc
repnz
adc
out
fdivrl
pop
aad
mov
xchg
adc
adcl
pusha
icebp
push
jae
xchg
jno
inc
push
lret
jnp
xlat
lea
ja
and
cmpsl
pop
adc
aaa
dec
aam
test
lcall
cmpsl
pop
rorl
pop
std
and
addr16
pop
xor
add
sub
negb
fsubrs
das
jo
mov
xchg
data16
push
xor
or
stc
aam
xlat
jg
or
orb
iret
fimull
mov
imulb
or
out
test
pop
dec
sbb
xor
and
pop
shll
fildl
aam
aas
mov
mov
jbe
test
imul
push
xor
fidivl
aam
cmpl
sub
stos
int
pop
mov
inc
or
fbld
mov
mov
lock
mov
hlt
pop
jb
push
add
imul
rcl
rolb
sbb
and
aaa
mov
movsl
pop
cli
xchg
push
call
inc
sub
mov
imul
arpl
pop
push
bound
test
mov
scas
js
sub
jae
test
negb
rolb
push
insb
jno
lods
adcl
push
std
repz
test
loopne
stc
pop
jne
jge
push
outsl
inc
adc
mov
xchg
push
pop
mov
out
imul
sbb
sbb
push
sub
in
sahf
rclb
in
sbb
ret
enter
jno
mov
lods
dec
adc
pusha
or
std
and
sahf
inc
out
mov
cltd
xchg
push
cld
pop
into
orl
add
xor
fcomp
jl
ja
mov
xor
jb
fistl
xchg
adc
lods
sub
dec
rorl
test
jb
cmp
jne
rcl
test
mov
fwait
in
adcb
aam
and
cli
pop
push
jbe
sarl
nop
inc
dec
push
mov
dec
aaa
cmp
sub
mov
cmp
addr16
mov
pop
xchg
mov
mov
aam
je
pop
cmp
jbe
fadds
repz
xchg
mov
mov
push
scas
in
jno
mov
stc
sbb
pop
sub
mov
xor
xor
sbb
test
out
xchg
dec
and
idivl
aad
scas
mov
aad
mov
repnz
push
adc
xchg
mov
test
push
enter
outsb
sbb
jo
jle
pop
mov
scas
call
add
pop
fs
inc
jns
cltd
mov
xor
pop
sub
jbe
popa
out
lcall
xor
push
add
pop
mov
pop
rolb
fld
orl
cmp
lods
sbb
push
dec
dec
stos
inc
xorb
scas
ror
xchg
xchg
stos
xor
mov
mov
xchg
leave
push
cld
sbb
mov
dec
pop
add
xor
test
lahf
cmp
add
inc
adc
pop
imul
xor
cwtl
jne,pt
xchg
sub
push
pop
cmp
push
jmp
cli
aas
mov
std
jp
fldenv
mov
cli
pop
aad
mov
inc
pop
mov
in
movsb
idiv
sub
dec
ja
add
leave
xor
push
out
and
out
or
add
negl
push
or
rcrb
push
imull
mov
pop
push
popf
sub
orl
mov
or
fneni(8087
negb
adc
jmp
mov
xor
ffreep
mov
flds
pop
xor
lahf
pushf
mov
xchg
imul
jns
fst
jbe
sti
add
xor
jo
int3
lea
insb
ret
xchg
sbbl
loopne
shlb
mov
lods
inc
int
cmp
lret
and
sarl
pop
sub
nop
cmp
insb
scas
or
aam
mov
orl
push
sti
mov
mov
jle
out
push
fwait
pop
test
stos
iret
orl
xchg
fwait
rcrl
sbb
inc
push
add
loop
add
push
add
stos
mov
push
sbb
test
stc
pop
outsb
jo
call
sub
repnz
loop
cmp
mov
sbb
aam
xchg
inc
add
setnp
jo
push
cwtl
cmp
mov
adcb
push
jmp
outsl
clc
rclb
lahf
jmp
inc
push
mov
mov
mov
in
or
roll
rep
das
jns
dec
or
addr16
add
or
data16
loop
adc
jle
cwtl
cmp
gs
or
inc
scas
sub
mov
in
fidivrs
hlt
mov
push
pusha
lods
push
mov
lods
sub
push
xor
sbb
lret
sahf
cmp
lods
test
sbb
push
lret
in
push
addr16
inc
add
lahf
scas
cmp
sub
mov
aas
push
add
pop
adc
movsl
subl
and
fwait
cmp
cmp
mov
mov
mov
mov
pop
push
jo
xorl
in
mov
mov
adc
and
mov
pushf
test
mov
in
jo
sbb
pmulhw
jmp
repnz
ds
mov
jo
cmp
sub
mov
imul
mov
aad
add
mov
pop
idivl
adc
mov
mov
movsl
ss
inc
mov
scas
out
jo
xchg
sti
jg
inc
lret
stc
pop
daa
lcall
jle
push
stos
popa
cmp
je
jecxz
pop
ss
jne
lret
dec
gs
lods
sub
out
dec
sbb
mov
dec
sarl
pop
faddl
and
add
inc
jmp
or
xor
mov
xor
or
sub
jno
lea
arpl
adc
orb
mov
es
add
rorb
and
lds
stos
lea
mov
xchg
push
mov
mov
lods
fst
orb
add
fistl
xchg
add
mov
sbb
iret
into
xchg
adc
cltd
xor
jnp
xchg
xor
call
notb
xor
fcomps
xor
or
jecxz
cmp
imul
push
inc
lods
imul
arpl
insl
outsl
pand
loop
mov
mov
mov
in
sti
mov
les
icebp
sti
stos
xor
mov
loop
cmp
sarl
mov
ficomps
loopne
mov
xchg
cmp
fnstsw
je
xor
xorl
stos
xor
or
dec
or
js
out
xchg
sahf
mul
pop
cli
aaa
lock
test
xor
imul
in
insb
xchg
inc
imul
xchg
sbb
lcall
lods
push
into
mov
das
lods
adc
mov
mov
out
dec
lock
xchg
add
cwtl
xchg
pop
adc
rcr
jp
jl
lods
mov
sarl
out
imul
add
fwait
cmp
mov
push
mov
or
fdivs
lahf
pop
or
cmpsl
sub
lds
ds
clc
inc
jecxz
mov
xchg
push
cld
pop
adc
sub
push
aam
mov
and
push
cmpsb
sbb
or
or
pop
mov
mov
test
popf
lret
adc
adc
push
out
cmp
sar
cmc
es
call
pop
inc
lret
negb
xchg
jmp
xchg
sub
dec
sti
pop
bound
push
jns
bound
fwait
pop
test
push
rorl
mov
sub
lds
xorb
sub
loopne
out
cmp
cmp
cmpsl
outsl
adc
pop
arpl
es
es
sub
pop
into
fnsave
outsl
push
pushf
pop
dec
int
daa
lcall
loop
inc
loope
sahf
mov
mov
loopne
popa
in
lcall
xorb
orb
add
and
xor
shll
cmp
cmp
test
test
mov
iret
mov
rclb
rcrl
rolb
pop
inc
push
hlt
test
popf
dec
out
jmp
xchg
ret
xlat
push
add
pop
and
cld
pop
mov
cmpsb
into
mov
loopne
add
pop
cmp
lds
cli
mov
rcll
shlb
push
sbb
push
les
shl
jae
mov
sbb
sarb
dec
hlt
pop
xchg
pop
inc
xlat
add
rclb
dec
loope
orl
jle
dec
inc
pop
mov
xor
das
mov
sbb
movsl
es
je
xor
test
fiaddl
dec
push
dec
cli
lcall
dec
xor
pop
outsb
test
xchg
mov
xchg
jmp
mov
cmp
daa
xchg
jg
push
add
addr16
adc
inc
testb
insb
out
push
pop
sti
mov
dec
in
mov
xor
xchg
iret
jg
jmp
and
xchg
mov
adcl
pop
xchg
push
roll
ss
rcl
inc
sbb
ret
add
inc
frndint
bound
xchg
sbb
push
xchg
pop
movsl
sub
nop
cmp
aas
stos
xor
iret
xchg
xchg
insb
jl
lds
call
std
mov
icebp
pop
dec
pop
jnp
bound
adcl
fisttps
cmpb
sbb
jo
inc
outsl
add
mov
movsb
les
sbb
outsb
fwait
xor
mov
xor
outsl
mov
enter
push
les
rclb
fdivrl
inc
or
aas
sub
ret
cmpsl
sub
sub
fs
mov
jb
shll
mov
or
andb
jmp
aaa
push
lret
mov
loope
sub
xor
mov
lods
faddl
inc
or
mov
xchg
pop
repz
adc
test
mov
jne
sub
repnz
inc
orb
bound
mov
cmpsl
pop
cmp
lock
int
daa
mov
adc
outsl
bound
sub
inc
pushl
and
lock
and
pop
mov
inc
inc
or
mov
lods
xor
loope
pop
movsb
sub
pop
cs
pop
mov
frstor
add
movl
push
mov
stc
jle
std
pusha
cmp
data16
test
cmpsl
out
push
and
fwait
inc
adc
inc
jo
mov
scas
popf
aas
jp
mov
and
mov
sub
fstps
idivl
jmp
shlb
mov
ret
xchg
cmp
leave
push
adc
add
out
sbb
or
lock
adc
add
stos
sub
das
mov
arpl
rclb
ret
jl,pn
pusha
pop
xor
lret
jp
nop
inc
push
push
jp
mov
cmpsb
and
fwait
mov
sbb
divb
mov
leave
mov
out
sbb
icebp
mov
pushf
inc
sub
mov
add
mov
scas
dec
adc
dec
ja
fcomps
lahf
inc
pop
mov
repz
lods
push
jge
pop
cmp
and
pop
pop
ljmp
xor
movsl
mov
mov
jecxz
xchg
add
pop
lret
sub
inc
adc
xor
outsl
push
pop
ret
inc
push
popa
out
addr16
arpl
or
jg
cmp
ret
je
xchg
inc
and
jb
roll
mov
jmp
bound
mov
add
cmpsb
dec
or
push
fcompl
pop
add
mov
adc
sbb
jnp
loope
cmc
xchg
inc
jbe
xchg
cmp
dec
filds
mov
mov
fisttpll
int
sbb
pop
xor
xchg
push
xchg
cmp
enter
aaa
or
gs
pop
cli
mov
movsl
insl
in
hlt
mov
xchg
pop
nop
cltd
xchg
aas
leave
mov
dec
cld
stc
adc
stos
dec
or
or
pop
imul
xchg
aas
sbb
daa
mov
mov
dec
push
pop
iret
pop
jg
ret
ljmp
jp
adc
lret
stc
pusha
js
leave
nop
lods
imul
sbb
add
inc
or
addl
pop
sub
dec
addl
push
jg
xchg
ret
enter
dec
and
xchg
inc
loopne
lock
cmpsb
stc
mov
mov
xchg
inc
mov
lret
mov
psubsb
lret
into
jmp
imul
pop
call
repz
dec
mov
out
je
cmpsl
push
sti
inc
mov
fiadds
push
and
xor
jns
ret
pop
cld
fidivrl
aad
push
inc
or
push
sti
mov
lea
idivl
movsb
jnp
push
sub
or
xchg
push
pop
das
mov
xchg
int
xor
popa
jmp
add
sahf
add
push
int
loop
das
mov
cmc
add
xor
mov
mov
iret
mov
mov
call
arpl
push
push
jne
pop
jae
push
stc
ljmp
push
in
mov
imul
or
jg
xor
aam
jmp
cs
std
orl
mov
repz
or
add
rolb
mov
mov
imul
aad
sbb
adc
andl
dec
in
loop
fistl
scas
or
jmp
cli
cmp
arpl
mov
fistl
xor
bound
movsb
add
adc
stos
xor
dec
cmp
call
dec
repnz
in
lcall
fwait
outsl
jmp
mov
mov
loop
mov
fbstp
lock
lret
jecxz
jno
stos
push
lret
int3
orl
call
jno
jo
sub
xchg
loopne
sub
ret
insl
icebp
sahf
inc
call
lcall
std
pop
pushf
pop
lcall
ret
push
aad
add
cmp
and
gs
jb
xorl
repz
mov
pop
repnz
in
mov
icebp
pop
sub
clc
jg
or
mov
mov
rolb
mov
mov
mov
in
imul
add
popf
inc
data16
adc
jno
inc
test
push
mul
or
clc
xchg
cmp
sub
movsl
cs
lahf
stc
popa
push
xchg
negb
dec
lds
xor
imul
mov
or
pusha
mov
mov
loop
push
add
pmaddwd
dec
and
dec
or
cmpsb
push
cltd
popf
cmp
mov
in
adc
xchg
xor
data16
imul
push
jae
push
lcall
xchg
jmp
lds
jmp
push
sti
add
mov
rolb
lock
push
xchg
mov
dec
dec
mov
adc
push
jbe
and
test
cmp
mov
lods
jmp
jne
mov
inc
cld
pop
sahf
xor
das
pop
fdivrs
inc
test
or
add
movsb
ja
lahf
add
fstpt
push
xchg
aaa
xchg
sbb
ds
sub
insb
ret
sub
fninit
outsb
mov
mov
test
cmpsl
mov
xchg
inc
pop
push
es
sub
and
mov
sbb
xchg
push
mov
push
xchg
in
jbe
xchg
fwait
loop
fildl
test
call
movsb
cmp
aaa
cltd
or
xor
and
es
jno
push
sbb
jne
repnz
cmpsl
xor
jns
rolb
xchg
test
jne
rcrb
dec
movsb
ss
mov
mov
sbb
inc
fsubrl
int3
in
jge
fisubs
dec
pinsrw
add
push
cmp
cmp
jmp
jns
cmpl
sahf
cmp
mov
sti
pop
dec
mov
ja
xchg
push
add
filds
fstl
ljmp
inc
adc
in
inc
adc
call
shlb
jo
jae
push
add
jmp
xor
call
cmc
pop
divl
scas
std
pop
jns
lock
ds
push
ret
es
jp,pt
xchg
xchg
daa
sarb
push
cmp
xor
jmp
lret
or
mov
shrl
movsl
rcll
sar
xchg
dec
jnp
shll
add
xor
int
movsl
and
clc
sub
movsb
sub
push
pop
cwtl
lahf
inc
testl
enter
pop
add
dec
cli
pop
push
loope
das
xchg
test
mov
cmc
pop
pop
ret
inc
or
rcpps
push
push
popf
inc
adc
jne
sarb
adc
mov
enter
ss
sbb
mov
sbb
lock
sub
ret
cmp
pop
inc
or
ror
xchg
in
xchg
cmp
mov
lods
push
decb
xchg
cmp
mov
adc
or
orb
insl
in
dec
call
sub
mov
mov
sub
jbe
out
insl
adc
mov
mov
mov
xor
xorb
lods
xchg
fmull
in
cmc
mov
mov
pop
lods
sbb
pop
test
mov
or
add
test
pop
bswap
mov
rcl
jo
aas
cltd
les
outsl
aam
xchg
inc
sbb
inc
dec
inc
push
sub
push
std
rcrb
mov
mov
sub
xor
and
push
test
cmp
or
icebp
in
int
loop
enter
stc
adc
mov
xlat
lock
xchg
or
loope
and
xor
push
in
sbb
xor
ret
lods
in
adcl
mov
adc
add
push
xchg
inc
xchg
sar
pop
ljmp
arpl
dec
sub
sbb
orl
jecxz
and
nop
or
fsubrl
mov
xor
lea
out
ret
mov
cmc
orb
enter
inc
adc
scas
inc
xor
cltd
xor
push
pusha
out
and
lcall
mov
xor
int3
jle
dec
rclb
pop
mov
imul
mov
movsl
sub
aam
or
adcl
pop
push
jp
js
out
enter
orl
cmp
pop
add
int3
inc
mov
sti
repnz
cs
int
sbb
pusha
ljmp
xchg
cmp
fadds
leave
jecxz
in
outsl
pop
stc
mov
loop
stc
fs
negl
arpl
jle
jp,pn
xchg
push
push
in
pop
lret
xchg
cmp
loopne
jecxz
jns
jecxz
les
arpl
test
dec
aam
inc
push
insb
mov
push
add
inc
xor
fidivrl
cwtl
add
int3
and
aas
push
push
add
mulb
jl
enter
pop
pop
loop
mov
movsb
inc
ja
aas
test
mov
mov
dec
test
fcomp
icebp
pop
push
mov
ds
pop
jle
ficompl
pop
lcall
setg
xor
adcl
xlat
add
sbb
bswap
pop
push
out
insl
push
xchg
mov
lea
mov
hlt
push
add
pop
mov
loopne
push
movsl
xor
loopne
addb
cmp
dec
arpl
ret
xchg
xlat
add
jl
lea
popa
std
pop
nopl
mov
out
loope
cld
les
add
rcrl
les
mov
movsl
inc
adc
dec
out
adcl
outsb
cmc
arpl
push
adc
lret
in
dec
js
add
lods
xor
test
out
ja
rorl
pushl
pushw
fnstsw
add
lds
adc
sub
dec
adc
cmp
popf
add
pop
clc
das
xchg
stos
push
lods
fdivl
xor
cs
aad
cmp
jmp
mov
adc
ljmp
xor
inc
jp
dec
in
fwait
lret
mov
call
and
inc
push
popf
jae
cmpsl
jl,pt
and
lds
inc
fsts
icebp
jecxz
and
pusha
imull
add
mov
ficomps
sbb
mov
repnz
test
outsl
mov
jns
mov
loope
adc
stos
pop
xor
dec
data16
leave
scas
xchg
push
rclb
add
icebp
mov
cs
pop
jbe
and
leave
stos
inc
sti
rorb
add
imul
mov
ret
add
cmp
adc
les
addr16
fstps
mov
add
cmp
pop
popf
xor
addr16
push
jecxz
pop
repnz
adc
pop
cwtl
das
nop
stos
push
lods
xor
sub
dec
push
jmp
mov
adc
and
inc
lods
inc
jns
dec
in
lcall
aam
call
and
inc
push
popf
jb
cmpsl
jnp,pt
and
les
fsts
lock
and
pusha
imull
add
mov
fstpl
sbb
mov
repnz
mov
loopne
adc
adc
pop
xor
leave
scas
xchg
push
iret
push
out
mov
outsb
add
pop
jne
and
enter
rorl
add
pusha
dec
and
push
outsl
out
mov
ret
repz
movsl
cmp
adc
mov
dec
inc
fsts
mov
add
cmp
pop
mov
pop
popf
xor
cmp
mov
push
loop
pop
bnd
or
cmp
clc
das
fidivl
xor
sub
aad
ss
push
jmp
mov
adc
and
das
cs
lods
inc
js
dec
in
cltd
lret
mov
call
and
inc
push
popf
jno
cmpsl
jp,pt
and
ret
fwait
lds
inc
fsts
aaa
pusha
imull
add
mov
fcompl
sbb
mov
repnz
fsubrs
mov
mov
fists
stos
pop
xor
leave
lods
test
push
into
push
out
fdiv
mov
and
push
sub
cmpsb
pop
je
and
jge
les
iret
dec
loop
sbb
popa
dec
and
push
outsb
call
push
cmpsb
roll
repnz
movsl
cmp
adc
pop
dec
gs
ficoml
mov
clc
call
or
mov
pop
sahf
xor
xchg
scas
mov
repnz
or
cmp
nop
xchg
das
lea
mov
loopne
xor
insb
xor
push
ljmp
jno
shrb
es
das
sub
lods
inc
ja
dec
in
cwtl
lret
lret
add
jmp
sbbb
pop
sahf
jo
cmpsl
js,pt
and
pop
lret
jecxz
ficoml
popa
clc
addr16
add
mov
fistpl
aam
das
mov
repnz
mov
mov
fstl
lods
pop
xor
lret
shrl
int
call
or
jo
push
sub
cmpsb
pop
jae
and
lods
lods
inc
clc
int
loop
sbb
bound
push
push
insb
jmp
pop
movsb
mov
cmpsb
cmp
inc
sbb
pop
dec
arpl
imul
popf
mov
stc
out
add
cmp
and
mov
aad
lods
mov
repz
fdivl
push
jnp
cmp
xchg
test
xor
lods
mov
fdivrp
ss
add
insl
xor
jmp
push
hlt
mov
cmpsb
adc
and
xor
sub
inc
jne
dec
in
xchg
int3
arpl
popf
insb
add
jmp
mov
and
test
jbe
es
leave
loope
fistl
jmp
jnp
xor
stc
gs
mov
fstps
aad
sub
pop
repz
mov
jp
mov
fistpl
lods
pop
cs
pusha
jns
lret
stos
adc
jmp
push
push
jno
push
daa
adc
mov
les
jecxz
pop
int3
arpl
imul
push
sbbl
cmpsl
ds
mov
dec
popa
inc
fcoml
mov
cli
in
add
aaa
push
and
mov
xchg
stos
mov
hlt
jecxz
fdivl
add
cli
xchg
sbbl
mov
dec
ss
call
insl
xor
jmp
push
hlt
mov
adc
and
xor
sub
inc
je
dec
in
xchg
int3
arpl
pushf
insb
add
call
mov
and
lahf
insl
inc
test
jne
es
enter
adc
in
sbb
stc
fs
adcb
and
or
ds
sub
push
pop
xor
repz
jno
xchg
mov
ficompl
lods
push
sub
xor
test
lret
sti
shl
mov
adc
mov
ret
lods
inc
cmc
lret
sti
push
int3
arpl
imul
imul
and
ret
hlt
push
daa
mov
inc
pusha
inc
fcoml
mov
cli
jecxz
add
ss
mov
nop
stos
mov
hlt
loop
fdivl
add
adc
push
cli
xchg
adcb
mov
mov
int
insl
xor
jmp
push
hlt
mov
movsb
adc
pop
divl
sub
inc
jae
dec
in
xchg
int3
arpl
fwait
insb
add
out
sbbl
cmp
lahf
insb
inc
test
je
es
filds
jmp
stc
arpl
cltd
insl
test
mov
xlat
sahf
xor
adc
mov
repz
jno
test
mov
clc
popl
fstps
lods
push
sub
dec
pop
ja
lret
test
aam
mov
push
jmp
add
jno
dec
and
mov
ret
hlt
leave
dec
jecxz
adc
imul
push
mov
mov
shll
ds
pop
inc
pop
inc
fcoml
mov
cli
loop
add
xor
push
mov
fdivl
add
dec
cli
xchg
adcl
scas
shrl
ss
std
insl
das
inc
push
jmp
push
hlt
mov
mov
nop
daa
push
divb
daa
inc
scas
inc
jb
dec
in
xchg
int3
arpl
lcall
sbb
mov
and
or
jae
es
fiadds
call
stc
bound
add
mov
and
or
ds
sub
arpl
jno
test
mov
clc
popl
fcomps
lods
push
sub
lret
cmpsl
jle
imul
repnz
sbb
dec
and
cmpsl
push
outsb
mov
shrl
stc
adc
arpl
imul
addr16
mov
cmpsl
ds
mov
inc
pop
inc
fmull
mov
cli
loope
add
xor
and
xchg
mov
pop
hlt
loopne
fdivl
add
dec
cli
xchg
adcb
xchg
mov
int
cld
insl
cs
push
jmp
dec
hlt
mov
mov
nop
daa
sbb
aas
scas
inc
jno
dec
in
xchg
int3
arpl
cltd
insb
add
in
adcl
cmp
lahf
push
test
jb
es
fisttpl
out
jnp
xor
popa
cmp
cltd
imul
mov
aad
xor
adc
mov
repz
scas
cmpl
iret
clc
popl
xlat
cwtl
das
or
push
lods
push
sub
lret
cmpsb
jge
imul
repnz
sbb
dec
and
cmpsl
push
insl
es
jne
lds
dec
jecxz
adc
arpl
imul
ljmpw
and
mov
daa
mov
inc
pop
inc
fmull
scas
arpl
loopne
add
xor
and
xchg
lea
pop
hlt
fdivl
add
dec
cli
xchg
jg
lcall
cmpsl
mov
int
sti
insl
sub
dec
hlt
mov
mov
nop
daa
sbb
xor
and
inc
dec
in
xchg
int3
arpl
cwtl
insb
add
in
adcl
cmp
lahf
imul
es
faddl
out
jnp
das
stc
pusha
cmp
cltd
push
adcb
mov
mov
aam
xor
movaps
popa
jnp
jno
cmpb
into
clc
popl
cwtl
das
or
push
lods
push
sub
lret
movsl
jl
imul
repnz
sbb
dec
and
cmpsl
push
insb
es
je
lds
dec
jecxz
adc
arpl
add
ljmp
mov
cmpsl
lock
mov
inc
pop
inc
fmull
scas
arpl
fbstp
sbbb
or
mov
test
mov
pop
hlt
fdivrp
fdivl
add
dec
cli
xchg
jle
lcall
cmpsb
mov
int
cli
insl
sub
push
jmp
dec
hlt
mov
jb
enter
shr
nop
daa
sbb
xor
and
scas
inc
outsl
inc
dec
in
nop
int3
arpl
xchg
insb
add
jecxz
adcl
ds
jo
es
ret
fildl
in
jnp
cs
stc
pop
cmp
cltd
imul
sahf
xor
push
daa
mov
repz
jp
jno
cmpl
call
cwtl
das
push
and
scas
push
daa
mov
pop
jae
int3
movsb
jp
imul
mov
pop
jb
dec
and
test
push
daa
pushf
jb
mov
les
cmc
adc
fs
push
insb
add
jmp
xchg
imul
aas
out
or
mov
inc
pop
inc
fisttpll
lods
fs
fnsave
sbbb
or
mov
sbbl
mov
cmc
fdivl
jl
xor
xchg
jge
lcall
movsl
mov
int
stc
insl
sub
jmp
dec
hlt
mov
jb
lahf
adc
sbb
xor
and
inc
outsb
inc
dec
in
int3
arpl
xchg
insb
add
loop
adcl
or
outsl
mov
mov
ret
fisttpl
in
jnp
sub
add
mov
and
add
ds
es
repz
jns
jno
cmpb
int3
clc
rcrl
scas
push
es
pop
jb
int3
mov
les
cmc
int3
repnz
push
jb
dec
pop
adc
fwait
jno
mov
ret
dec
in
bswap
fs
adc
jmp
xchg
push
or
in
pop
sub
inc
pop
inc
fisttpll
stos
fs
fdivl
sbb
pop
and
sbbb
mov
pop
cmc
fdiv
fdivl
jl
xor
xchg
jl
lcall
movsb
mov
int
clc
insl
sub
jmp
dec
hlt
mov
jb
sahf
adc
sbb
xor
and
scas
inc
insl
inc
dec
in
mov
arpl
xchg
insb
add
loope
adcl
xor
test
outsb
xchg
mov
rcr
fisttpl
jecxz
jnp
sub
stc
pop
add
mov
and
add
ds
and
pop
repz
js
jno
jg
adc
rcrb
scas
push
and
xor
imul
repnz
adc
adc
lcall
inc
in
ret
repz
int
inc
adc
add
jmp
xchg
mov
cltd
mov
mov
in
push
sub
aas
pop
inc
fisttpll
stos
fs
sbbb
push
and
sbbl
push
aam
pop
cmc
fcomi
fdivl
std
jl
das
dec
cli
xchg
jnp
lcall
mov
ss
not
insl
sub
jmp
dec
hlt
mov
or
popf
adc
sbb
xor
and
scas
inc
insb
inc
dec
in
int3
arpl
loopne
adcl
xor
lahf
cmp
mov
rcr
fisttpl
loop
jnp
sub
pop
xor
adcb
xchg
mov
rcrb
aad
and
push
push
sub
repz
ja
jno
jle
adc
rcrl
scas
dec
and
dec
push
jo
int3
mov
ret
repz
cld
adc
or
adc
cltd
outsl
das
mov
rorl
or
insb
add
jmp
xchg
data16
cwtl
mov
mov
jmp
sub
ds
inc
fisttpll
test
add
sub
dec
mov
xlat
mov
pop
cmc
fdivl
cld
jl
cs
cli
xchg
jp
lcall
mov
ss
not
insl
sub
jmp
dec
hlt
mov
jb
les
daa
pop
out
xor
and
scas
inc
imul
jb
int3
arpl
fucomip
adcl
xor
lahf
cmp
mov
mov
loope
jnp
sub
pop
xor
cltd
gs
pop
scas
xchg
mov
iret
sahf
xor
or
mov
repz
jbe
jno
jge
adc
rcrb
scas
dec
and
int3
mov
rcll
leave
repnz
adc
inc
sbb
test
xchg
daa
cwtl
outsb
das
lahf
mov
dec
in
or
fs
pop
jmp
xchg
mov
xchg
mov
mov
ljmp
pop
cmp
pop
in
nop
test
sti
fnstenv
sbbb
add
mov
jg
inc
xlat
xchg
pop
cmc
fpatan
fdivl
sti
jl
sub
dec
lcall
mov
ss
cmc
insl
daa
aas
push
jmp
dec
hlt
mov
jb
ret
fwait
adc
push
out
xor
pop
cmp
in
mov
arpl
fsubrp
adcl
xor
lahf
arpl
test
imul
mov
loopne
jnp
sub
pop
xor
cltd
fs
pop
lods
test
mov
into
sahf
xor
or
mov
repz
jne
jno
jl
adc
iret
cwtl
das
add
scas
dec
and
int3
lahf
jne
imul
repnz
adc
inc
sbb
test
gs
daa
xchg
insl
das
sahf
mov
dec
in
or
fs
pop
jmp
nop
mov
xchg
mov
mov
jmp
or
pop
cmp
inc
fldl
cmpsl
fs
fdivs
sbbb
add
mov
jle
inc
xlat
xchg
pop
cmc
fdiv
fdivl
cli
jl
sub
cli
xchg
js
lcall
mov
ss
hlt
insl
es
jmp
inc
hlt
mov
jb
ret
test
adc
aaa
scas
inc
imul
int3
arpl
ljmp
xor
lahf
bound
test
push
es
mov
jnp
sub
pop
xor
cltd
arpl
pop
lods
test
mov
int
xor
pop
and
repz
je
jb
jp
adc
cwtl
das
lcall
sbb
push
insb
ss
jae
insb
movsl
mov
repz
adc
inc
sbb
test
xchg
imul
pushf
mov
inc
call
or
cmp
insl
add
pop
in
orl
or
out
sub
xor
enter
inc
fiadds
gs
scas
add
fcomip
sbbl
add
mov
jl
inc
fadds
pop
not
lock
jge
sub
jbe
fwait
xor
sbb
shr
aaa
into
sbb
xlat
outsb
and
push
in
insl
inc
cmc
mov
jae
rcrb
sub
jmp
enter
inc
addr16
int
mov
fucomi
orb
or
push
mov
pop
mov
fucom
jl
es
push
xor
lcall
and
std
aam
add
es
hlt
push
jb
jae
js
adc
lret
cltd
xor
sbb
mov
push
mov
into
fwait
jno
insl
mov
hlt
mov
push
je
inc
pop
adc
xchg
imul
inc
out
dec
out
pop
iret
cmp
in
test
or
in
sub
xor
leave
pusha
cmp
fiadds
mov
add
sbb
add
xor
cmp
inc
flds
movsb
pusha
not
out
fnsave
jle
sub
xchg
je
pushf
xor
mov
popf
mov
into
sbb
fsubrs
cmp
imul
mov
mov
fists
leave
sbb
scas
inc
gs
out
xchg
fs
fldpi
orb
mov
adc
or
addr16
mov
mov
fsub
jge
and
cli
push
das
add
pusha
jbe
sbb
leave
lahf
ss
roll
add
mov
cmc
push
jo
jae
ja
adc
lret
cld
push
sbb
dec
push
xlat
outsb
mov
ret
cmc
mov
or
or
push
adc
inc
pop
xchg
sub
mov
inc
in
push
out
add
outsl
push
ds
in
test
stos
or
in
sub
cs
lret
dec
inc
fiadds
mov
push
popf
sbbl
jmp
xor
cmp
inc
flds
mov
fnsave
jle
sub
xchg
jae
pushf
xor
sbb
into
out
into
pop
lock
cmp
push
testb
xchg
adc
ficoms
leave
sbb
scas
inc
cmp
insb
test
fs
outsb
add
and
jge
jl
lret
std
out
and
jmp
mov
popa
mov
or
add
jns
adc
sub
and
loope
jae
push
push
and
pop
scas
xchg
ljmp
mov
mov
cmc
dec
push
push
adc
pop
je
das
pop
sbb
adc
pop
insl
popa
cmpl
or
in
pusha
push
ret
lret
rcrl
orl
out
pop
mov
cmp
sbb
sub
push
popa
sub
addl
cmpl
push
outsb
repz
jo
pop
addr16
lret
cmc
cmp
jl
cltd
sti
aaa
cmp
xor
ss
inc
jle
cmc
test
dec
cmp
sbb
popl
xchg
in
aad
popa
adc
pop
aam
mov
xlat
repnz
aad
popl
rcr
inc
subb
mov
xor
push
add
std
movsl
imul
mov
lods
xchg
mov
adc
fldcw
lds
mov
imul
cli
cmp
xor
jmp
xchg
cmp
jle
mov
jmp
pop
push
and
push
mov
jbe
imul
fidivs
xchg
neg
sbb
loope
dec
jmp
call
pop
subb
adc
lock
cmpsl
adc
sbb
cmp
in
cmpsb
sbb
lahf
add
lods
cli
pop
pop
xchg
inc
sub
or
lods
sahf
push
incb
pushf
scas
aas
adc
aas
mov
cli
jns
mov
jb
sbbl
addr16
mov
add
and
dec
mov
inc
pop
mov
andb
movsb
ret
repnz
sahf
fidivrl
xchg
sbb
in
fistpl
fcoms
sahf
mov
arpl
dec
mull
std
icebp
pusha
jmp
rcr
addb
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
js
mov
les
adc
jnp
xor
out
jecxz
rorb
stos
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fldt
push
adc
jne
mov
shlb
test
mov
scas
daa
inc
jno
clc
test
sub
icebp
and
imul
push
sub
addr16
or
fsubrl
fwait
lea
stc
nop
push
repz
ja
stc
popa
and
cwtl
push
mov
pop
daa
cmp
dec
outsl
rcrb
or
pop
vpaddusw
in
ss
inc
fimuls
jmp
roll
push
addl
pop
out
xor
sbbl
imul
inc
lock
mov
sar
leave
mov
addr16
lret
jmp
push
xor
iret
push
sub
sub
inc
outsb
ret
repz
out
xor
outsl
cli
jbe
cmp
and
js
lods
xorb
cs
push
.byte
cwtl
