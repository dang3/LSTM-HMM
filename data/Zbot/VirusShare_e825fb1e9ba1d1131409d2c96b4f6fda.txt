stc
cld
ljmp
fincstp
flds
negl
into
or
je
inc
sub
inc
add
in
xchg
or
cli
neg
not
sbb
incb
lock
adc
adc
push
sub
neg
sbb
dec
stos
rorb
iret
and
dec
neg
dec
not
sbb
clc
sub
sbb
jle
outsb
repnz
enter
neg
sub
mov
fwait
not
sub
dec
add
stos
dec
pop
fcoms
cld
mul
divl
inc
add
psrlq
repnz
negb
fs
mov
adc
add
sbb
inc
roll
sub
inc
int3
or
in
into
rcrl
clc
mov
dec
mov
filds
rorb
sub
adc
sub
dec
xor
insb
rcll
dec
push
mov
sub
dec
mov
scas
imulb
adc
cmp
and
adc
jg
lahf
xchg
sub
adc
aaa
sti
jmp
and
adc
dec
and
pop
insb
pushl
hlt
scas
dec
cltd
fildl
pusha
aas
mov
cld
pop
xor
test
rolb
fildl
in
sub
push
insb
hlt
push
push
in
sti
or
std
inc
lock
lea
adc
pop
fst
leave
ret
fadds
cld
cmovb
pop
xor
push
in
push
aaa
cs
jo,pn
dec
call
push
jo
push
push
mov
subps
add
cmp
inc
cld
mov
rolb
sub
aam
je
push
inc
add
enter
add
ret
rolb
repz
jno
adc
push
ret
push
cld
xor
outsb
loopne
and
xor
inc
stos
add
call
push
mov
in
dec
repz
inc
mov
xchg
and
jg
and
imul
test
in
add
in
push
fucomip
push
xchg
jg
pop
loopne
dec
add
not
add
sbb
not
add
inc
pop
xchg
lahf
lock
sub
sahf
neg
dec
flds
into
imul
addl
adc
dec
not
or
neg
jl
adc
negl
in
popa
in
dec
lcall
ja
adc
or
loope
loope
xlat
add
sub
rcrb
stc
fwait
jl
sub
inc
sub
sbb
clc
push
sbb
out
xor
xor
lods
fstps
pop
outsb
fcomp
push
addr16
mov
fisubl
inc
sub
adc
dec
inc
in
mov
add
adc
jmp
jns
outsl
jle
add
cld
dec
dec
push
hlt
rcrl
sbb
popa
int3
lea
push
push
dec
jp
loopne
pushl
repz
sar
jmp
inc
lock
jns
add
gs
dec
xlat
push
lock
sub
clc
hlt
push
push
cmp
push
jle
pop
filds
clc
out
clc
or
adc
inc
lods
dec
neg
movl
out
jo
daa
dec
shlb
mov
clc
add
pop
clc
dec
sbb
adc
les
and
sbb
cld
push
inc
js
stos
push
mov
jle
jb
fadds
incl
mov
pop
mov
xor
add
inc
dec
jg
and
dec
xor
popf
pop
popa
cwtl
call
rorl
data16
push
inc
shrl
faddl
ja
inc
insb
aas
push
cld
lock
cld
dec
dec
jo
xchg
js
mov
or
xor
lret
or
cmp
outsb
push
mov
xchg
clc
push
dec
jns
push
mov
inc
or
mov
dec
sbb
push
lock
sub
inc
mov
ficoml
adc
inc
dec
inc
and
jo
into
jmp
repz
adc
aam
cmovae
neg
cmp
std
adc
add
sub
lods
dec
ljmp
dec
add
lret
inc
dec
mov
or
repz
add
and
loop
dec
xor
mov
inc
adc
lcall
sub
inc
pushf
rorl
enter
dec
xor
inc
adc
shl
pop
lret
sbb
adc
jo
fldenv
adc
fiaddl
iret
add
xchg
pushf
or
dec
inc
push
faddl
sbb
int3
adc
fidivrl
sbb
and
call
mov
lods
fimull
fiadds
int3
inc
adc
test
insl
xlat
clc
call
sub
dec
not
mov
dec
adc
add
adc
test
ss
push
and
mov
xor
sbb
push
push
mov
pop
in
xor
sbb
push
inc
andl
adc
call
inc
mov
jg
jbe
push
mov
mov
dec
or
rclb
add
inc
push
inc
sbb
ret
inc
sub
leave
add
sub
add
push
inc
call
arpl
push
loop
loopne
fs
loopne
loop
push
sbb
jo
sbb
pop
jle
add
outsb
fcoml
scas
fbld
jl
add
push
in
lock
or
push
mov
inc
push
test
movsb
arpl
mov
pop
je
cmp
push
incl
fs
jb
push
add
inc
imul
lret
or
int
cmp
cld
subl
movl
fs
daa
cmp
clc
js
jo
add
mov
add
bound
loopne
mov
or
repnz
shlb
ljmp
jo
dec
inc
fcomps
repnz
jo
stc
or
dec
push
ret
popfw
addr16
and
push
aam
ja
push
hlt
aaa
jns
inc
fs
push
jbe
adc
push
out
push
xor
cmpxchg
test
add
jae
push
shrb
cmp
push
push
mov
add
dec
add
add
loop
test
sub
arpl
loope
push
lret
mov
pop
rcl
add
aaa
hlt
popa
mov
rcrb
inc
adc
sahf
cld
pop
and
dec
inc
subl
jae
cmp
inc
ret
add
sbb
inc
inc
sbb
cwtl
push
lret
orb
cmp
fs
add
lds
push
repz
xchg
inc
push
and
add
es
push
inc
inc
push
pushf
adc
sbbb
inc
inc
xor
clc
push
clc
adc
push
push
inc
clc
jbe
loop
or
cmp
aad
iret
add
aas
and
incl
push
push
push
rep
loope
pop
mov
add
and
push
cld
lahf
sbbb
inc
dec
pop
inc
sub
not
cmp
pop
or
in
movsl
into
add
fidivrl
adc
test
pop
add
xchg
pop
jg
incl
or
addl
mov
mov
jle
mov
push
cmp
lret
xchg
push
int
sbb
inc
jge
or
test
add
into
pop
xchg
add
filds
and
inc
jns
push
shll
mov
or
aad
orb
repz
pop
out
cmp
add
sub
std
das
inc
adc
jge
nop
jge
dec
xor
jl
add
clc
stos
pop
cmp
add
fldcw
mov
ljmp
cli
sub
sbb
fists
jnp
daa
mov
lock
and
push
mov
ds
mov
incl
xchg
push
mov
ret
lds
add
lea
stos
movsl
test
add
popf
stc
lcall
and
in
cli
mov
jae
inc
cmp
and
sbb
mov
outsl
lock
and
jns
mov
mov
orb
inc
dec
adc
pop
mov
adc
out
mov
lcall
mov
iret
std
jg
daa
adc
inc
movsl
rcrb
xchg
imul
sti
push
out
sbb
mov
lahf
jge
cmp
and
sahf
pop
je
jne
pop
push
sahf
out
mov
fnstsw
decb
lret
and
fs
fmuls
loope
xor
pop
mov
ja
inc
int
jle
mov
out
pminsw
lret
jge
lret
push
pop
das
sub
scas
sti
in
out
mov
pop
push
jb
jnp
lahf
xchg
aaa
sahf
jne
or
aas
mov
or
cmp
dec
push
and
ss
sti
jbe
jg
xor
cwtl
outsl
xchg
cmpsl
insb
mov
sti
pop
sti
lahf
add
adc
dec
ja
pushf
and
out
mov
sbb
cwtl
mov
fstl
mov
outsl
ja
fadds
cmpb
fiaddl
xor
sti
out
pop
dec
into
add
jno
mov
pop
repnz
stos
rcrl
mov
es
dec
cltd
icebp
into
lahf
cld
cmp
jmp
or
sbb
sti
xchg
out
in
jnp
fimull
sbb
push
sub
loop
jo
fdivrl
mov
es
adc
imul
pop
dec
push
std
add
sbb
ds
push
add
fidivrs
ret
xchg
lret
mov
xchg
lock
push
inc
popf
sub
xchg
flds
xchg
and
cmp
mov
fistpll
popf
ret
dec
stos
pop
fadds
pop
fsubr
out
add
mov
sbb
jp
bt
add
xor
add
shl
and
push
mov
jmp
fs
pop
xchg
lock
std
mov
data16
jnp
push
dec
repnz
dec
cltd
scas
xlat
pusha
inc
sbb
loope
xor
sbb
movsl
enter
lods
iret
fisttps
jbe
sti
mov
bound
push
push
push
fistpll
push
xchg
xor
jb
out
das
decl
mov
inc
mov
xor
fnstsw
or
lock
in
ss
rcr
and
xorl
xor
cmp
leave
mov
mov
push
jae
icebp
pop
int
push
subl
mov
in
push
adc
lock
sub
out
pop
je
lret
mov
mov
jnp
dec
dec
xchg
inc
push
mov
fcmovnu
std
jp
movb
not
insl
mov
or
mov
cs
out
andl
loopne
mov
add
les
clc
jg
lock
jb
dec
push
add
xchg
pop
inc
xor
fcomp
xchg
pop
xchg
sub
call
sahf
cmp
idivl
mov
int3
xlat
data16
dec
sbb
incb
push
and
jns
loope
jge
and
outsl
jge
xor
jno
pop
scas
mov
test
xchg
incl
cmp
add
pop
mov
lahf
xlat
cmp
sahf
test
addr16
iret
and
jnp
addr16
xchg
cltd
test
jle
xchg
cs
aas
popa
in
mov
fildl
pop
ja
cli
rorl
dec
xor
or
std
add
push
fsts
inc
iret
std
incl
fists
in
cltd
addl
pop
inc
das
dec
das
lahf
dec
adc
stc
jg
jmp
inc
and
fstps
pop
mov
push
and
sbb
jne
shl
inc
pop
fisttps
dec
mov
jl
sbb
add
xchg
jbe
sub
out
add
pop
sub
push
push
out
imul
stos
jg
decb
pop
xlat
scas
je
fidivs
inc
orb
pop
push
push
mov
jle
ds
icebp
iret
jbe
add
add
jb
mov
jo
sbb
mov
push
stc
mov
sti
push
mov
pop
mov
mov
push
je
pop
push
fists
xchg
cmp
ja
jg
scas
nop
imul
xchg
das
mov
out
jg
and
lret
rcrb
fdivl
mov
mov
xchg
mov
push
lods
pop
jg
pop
dec
rorl
gs
lods
pop
fucomi
mov
adc
std
push
pushf
mov
jmp
mov
adc
roll
sbb
femms
jle
add
xchg
sbb
push
out
loopne
cmpsb
movsb
or
push
dec
xor
mov
xor
ja
outsl
in
pop
sub
outsl
mov
and
jl
popf
icebp
rcr
in
sub
sub
pop
mov
and
dec
inc
xchg
lret
mov
xlat
cs
mov
xchg
mov
dec
xor
loope
out
or
sbb
pop
jb
aas
cmp
clc
rorl
shll
lahf
sbb
dec
out
lock
push
jg
xor
or
mov
aas
cmpl
mov
pop
rcrb
inc
add
push
inc
loope
addr16
inc
push
pop
push
cmp
mov
lea
or
lret
jo
mov
mov
ss
push
ds
imul
loopne
movsb
mov
push
or
clc
cmp
adc
xchg
pop
adc
leave
pop
adc
add
xchg
lock
dec
and
sti
mov
sbb
push
xchg
or
std
cmp
and
mov
sub
mov
ds
idivb
xor
add
repz
loope
push
jmp
cmc
jo
push
mov
cli
sbb
xor
jg
jnp
jle
loopne
ret
jo
cs
adc
pushl
rcl
pop
aaa
sub
add
cmc
lcall
hlt
mov
push
cmp
mov
cmp
ss
in
movb
or
pop
fdivrl
mov
xchg
mov
decl
fsts
or
arpl
ds
iret
loope
popf
fstpl
pop
sub
xchg
inc
movsl
mov
popf
mov
outsl
jo
lods
mov
push
push
hlt
push
adc
xchg
loope
mov
dec
mov
lret
cmp
sbb
movsb
lret
test
add
je
cmp
in
lahf
dec
loopne
cmp
out
add
pop
push
push
imul
stos
cmp
sbb
pop
xor
adc
pushf
movsl
clc
aas
sub
mov
leave
or
mov
pop
mov
pop
xchg
push
ds
push
mov
sbb
jo
shll
rorl
clc
mov
xchg
cmp
insb
sbb
cmp
incb
insl
and
adc
outsb
inc
test
jg
xchg
pop
cld
mov
xchg
fidivrl
lods
sub
mov
sub
mov
dec
dec
xchg
fistpll
rcl
mov
aaa
out
push
inc
inc
jmp
mov
insl
int
movsb
mov
popf
jnp
or
sar
leave
dec
inc
and
and
jnp
push
cld
add
adc
loopne
adc
adc
jle
push
in
sub
loopne
and
in
xchg
mov
in
push
lcall
dec
mov
insb
pop
jl
inc
push
lcall
fnstcw
jl
pushf
dec
cli
test
idivl
arpl
cmp
rcll
adc
decl
push
jae
jg
cmp
int
decl
dec
outsl
jecxz
sub
movl
mov
mov
add
das
aas
rol
incl
mov
pop
lock
loop
test
shr
insl
lods
dec
xchg
dec
hlt
ret
inc
pop
and
cmpsl
lahf
jmp
inc
icebp
push
popa
popw
bound
in
notl
xor
xchg
lcall
sbb
fnstsw
ret
xlat
and
jae
mov
pop
pushf
icebp
das
test
adc
lahf
jo
call
jno
add
insl
sub
loope
adc
adc
push
fstpt
mov
call
inc
inc
stos
mov
lahf
pop
arpl
lock
out
cmp
inc
push
jge
pop
daa
rorl
incb
ja
dec
loope
iret
or
sub
in
mov
cli
aas
adc
ror
xlat
hlt
xchg
loope
enter
cwtl
and
cmp
in
xchg
jne
push
fwait
imul
pop
cli
sbb
push
cmpsl
leave
lret
fcos
pop
mov
xor
xchg
cmp
sar
aaa
aad
in
jb
iret
outsb
vmaskmovdqu
lock
cld
push
push
add
lahf
cmp
add
adc
je
mov
bound
dec
fcoml
mov
iret
in
mov
ja
incl
mov
into
lret
mov
mov
sbb
adc
movsl
jne
push
popf
test
out
ss
pop
in
dec
mov
pop
or
push
decb
jle
sub
adc
in
push
xchg
mov
addr16
iret
icebp
jp
add
sti
push
dec
jp
jmp
out
fwait
lcall
jne
mov
std
inc
add
dec
mov
incb
lea
lock
fcmovnbe
pushl
jno
lret
in
mov
cmpsb
outsl
jo
add
testb
sbb
xor
mov
sub
inc
std
pop
mov
sub
lods
mov
popa
push
sbb
adc
call
jmp
xlat
cmp
mov
ja
lret
hlt
loope
pop
mov
mov
mov
fmull
add
sub
adc
jmp
add
js
std
scas
mov
push
sti
popf
std
mov
dec
pop
push
pop
jae
push
int3
divl
int
sar
pop
mov
es
sub
jg
or
or
lahf
stos
push
push
push
pop
mov
js
jne
pop
cmpsl
jg
jg
xor
fcoms
add
push
xchg
mov
jge
mov
jge
jecxz
cmovno
jo
test
mov
test
pop
fucom
cmpb
cmc
test
inc
cmp
cli
cmp
sbb
neg
dec
adc
lock
xor
dec
loope
jp
xor
dec
mov
icebp
mov
jg
std
adc
fisubl
dec
pop
and
cli
negb
push
xchg
stos
push
mov
mov
mov
push
xchg
int
mov
cmp
pop
xor
iret
cmc
mov
es
lahf
sbb
pop
and
cmp
mov
lahf
sbb
xchg
pop
adc
icebp
jmp
loopne
ss
dec
push
inc
adc
ljmp
pushf
movsl
sbb
dec
mov
dec
sub
mov
mov
das
mov
hlt
pop
adc
out
fwait
xor
into
xor
sbb
ss
cmp
popf
add
adc
movsb
push
jg
sarl
dec
fwait
mov
mov
mov
rclb
add
sub
mov
sbb
insb
sbb
mov
je
nop
loope
jno
notl
pop
fnstcw
mov
adc
sbb
ja
aaa
ret
loopne
xor
or
sub
xchg
sar
shr
shrl
sbbl
sbb
addb
aas
in
inc
inc
sbb
cmp
dec
repz
out
jg
push
pop
out
sbb
add
dec
jl
pop
cmp
jns
add
dec
int3
popf
or
idiv
out
or
sbb
or
xor
mov
addr16
cltd
mov
pop
rcl
xlat
mulb
adc
cmp
addr16
add
jg
sub
dec
jns
dec
xor
inc
dec
push
popa
and
scas
or
fwait
jne
sbb
out
pop
jp
xorl
stos
orb
lds
xchg
lahf
icebp
and
test
jo
mov
adc
rclb
push
ds
mov
push
shrl
iret
inc
dec
sbb
cmp
pop
rcll
test
fiadds
rol
cmp
fidivs
sbb
mov
push
sub
cmp
cltd
arpl
movsb
mov
mov
mov
je
and
dec
sub
arpl
cmpsb
push
mov
dec
sarb
xor
or
hlt
ficoms
stc
test
bound
add
movswl
cld
jg
lods
pop
repnz
cmpl
xabort
pop
xchg
mov
mov
adc
cmp
push
lock
enter
jne
push
lock
push
lds
insb
pop
rcrb
ljmp
mov
dec
xchg
mov
xchg
push
mov
dec
push
mov
and
das
in
mov
lcall
xor
adc
test
scas
les
xor
test
cmp
mov
add
mov
jg
das
sbb
addl
rorb
xor
test
jg
cmc
cmpsl
jno
pusha
pop
pop
out
outsb
inc
inc
jno
popf
std
outsl
rolb
jmp
test
divl
mov
lret
repz
call
imul
lds
movsb
scas
data16
jg
vpunpckldq
cld
mov
arpl
and
imul
xchg
scas
jle
xchg
and
inc
sbb
shll
loop
or
test
pop
push
xor
mov
repz
enter
lock
mov
jg
fidivs
and
xor
adc
test
and
inc
daa
rorb
sbb
jmpw
repz
and
jb
incb
mov
fwait
inc
out
pop
and
cmp
push
into
out
out
pop
mov
sub
imulb
aas
xor
inc
loop
inc
sub
jg
lahf
lock
loop
dec
je
incb
xchg
ljmp
inc
cmp
and
xchg
pop
or
lods
lods
ljmp
push
xchg
push
out
out
loopne
xchg
sub
lahf
es
and
cli
into
loope
add
add
xor
xchg
sbb
sub
cmpsl
jg
outsl
imulb
or
out
fdivr
sub
fs
test
rcrb
push
or
pop
jmp
push
ds
and
into
lret
popa
mov
cmpb
shll
decl
testl
lods
adc
shrb
out
mov
or
push
pusha
push
sub
xchg
ja
mov
arpl
rolb
test
inc
int3
inc
sub
les
and
inc
int3
jl
xchg
mov
add
test
ljmp
inc
in
in
or
fdivr
cmp
pushf
js
jo
aaa
aad
mov
test
stos
jg
sti
fadds
xchg
add
mov
std
mov
jns
fcmovu
cmpsl
inc
pop
aam
cmc
xchg
test
jmp
aad
cltd
push
pusha
xor
inc
push
lock
shrl
mov
jge
xchg
and
leave
fisubs
mov
xor
jmp
mov
and
aas
mov
dec
pushl
mov
negl
lock
insl
xchg
xchg
hlt
aas
ljmp
and
inc
mov
out
int
sub
mov
mov
and
jbe
out
std
cmp
enter
fists
dec
xor
fldl
lret
or
loope
add
int
testl
jbe
lcall
and
push
imul
mov
inc
loopne
dec
sbb
cld
cmp
fildll
cmp
movb
jo
pminub
aam
or
sub
stc
adc
xor
scas
enter
movsl
fisubrs
frstor
adc
scas
sbb
out
out
cmp
mov
inc
and
jnp
or
xchg
es
and
pusha
add
adc
add
or
xor
test
mov
inc
pop
jecxz
mov
inc
mov
fisttps
rclb
sbb
sub
ss
outsl
aas
aam
arpl
outsl
adc
add
add
clc
out
cld
aas
mov
data16
out
xor
adc
adc
jg
adc
inc
sub
jl
test
lock
call
sbb
cld
jae
add
fisubs
inc
sarl
mov
inc
divl
fmull
andl
add
js
push
test
test
pop
clc
dec
mov
sub
dec
mov
push
cmpsl
icebp
fwait
mov
sub
mov
add
cmpsb
adc
cltd
sub
cmp
jg
sti
jnp
int
and
add
aas
push
out
push
mov
hlt
mov
movsl
xlat
xchg
adc
inc
mov
and
push
or
cmpsb
pushf
jmp
mov
nop
fbld
test
out
jl,pn
out
fs
ljmp
inc
lds
int3
pop
mov
pmuludq
ljmp
repnz
outsl
pop
jmp
jb
xor
pop
add
mov
ret
sar
out
mov
imul
add
mov
push
inc
mov
ds
lds
sub
aas
push
add
jmp
jne
mov
popf
xor
loop
mov
bound
popa
mov
sarb
hlt
jg
fnstenv
add
mov
inc
call
sbb
stos
add
sbb
repnz
jg
jmp
jecxz
mov
cli
inc
aad
mov
jle
movsb
xchg
add
ljmp
lds
lods
sub
pop
insl
jnp
out
push
xchg
ret
mov
scas
mov
mov
std
pop
cld
jp
push
adc
cld
dec
cmpsl
and
out
testl
hlt
and
ljmp
jg
and
mov
rcrl
insl
dec
add
cmp
adc
fadd
cli
inc
pop
loope
add
fiadds
sbb
loope
fs
in
popf
addr16
jns
xchg
lcall
sbb
pop
bound
je
or
sub
push
jnp
std
outsl
pop
mov
decb
cmp
fidivrl
arpl
push
into
mov
test
pushf
xchg
fiaddl
je
scas
fisttps
inc
push
ja
lea
out
jo
imulw
outsl
cmpsb
inc
dec
scas
adc
sbb
inc
lods
mov
js
sti
cmp
call
sub
leave
mov
xchg
fstpl
in
jle
add
loop
and
pop
pop
lret
xor
xchg
jae
push
jmp
sub
ljmp
out
cmp
hlt
ficomps
jecxz
shrl
cld
test
mov
pop
or
mov
imul
sub
popf
lods
in
je
mov
sbb
sub
cld
fnstsw
ljmp
cld
in
mov
mov
jg
cld
inc
in
fmull
xlat
es
jg
jle
stos
pop
adc
jnp
lahf
daa
fsubs
mov
xchg
mov
ret
cmovbe
cld
cmpsb
mov
lcall
push
out
push
dec
mov
dec
std
xchg
outsl
scas
add
sbb
jne
sbb
clc
into
loop
shl
idivl
jo
sbb
mov
mov
roll
and
aas
jmp
cltd
mov
int3
imul
and
push
mov
jb
mov
lock
add
popf
icebp
andb
pop
aam
shlb
cli
ja
sbb
xor
adc
fnstsw
pusha
xchg
stos
addr16
mov
decl
notb
sbb
cli
jge
mov
dec
jnp
loope
adc
add
cli
std
addr16
sarl
js
das
sub
es
lret
push
ljmp
xchg
and
dec
jo
xchg
dec
mov
loopne
inc
push
adc
cli
add
xchg
adc
xchg
inc
xor
out
fcmovb
iret
jmp
mov
inc
mov
mov
mov
mov
cmp
mov
add
das
cld
andb
push
cmpsl
and
dec
aas
sti
pop
mov
cmp
push
push
add
lock
stos
add
daa
in
add
cmp
rcll
lods
inc
jb
push
push
push
pop
jo
cmp
xchg
inc
jne
pusha
lock
ljmp
adc
ret
test
pop
jmp
sbb
sbb
and
and
jnp
sbb
jge
sahf
roll
lea
hlt
aas
movsl
js
in
fcompp
in
aas
xchg
xor
arpl
dec
ja
incl
sbb
xor
and
inc
repnz
add
lret
stos
popa
cmpsb
mov
push
movsb
std
mov
cmp
lcall
and
jge
addb
call
psubq
mov
das
ljmp
jg
aaa
popa
test
mov
ja
sar
mov
inc
iret
shll
and
xchg
out
out
cmp
inc
mov
arpl
call
jg
jg
mov
mov
and
std
xchg
shll
in
adcb
out
or
push
outsl
dec
stc
scas
ds
fwait
popa
inc
bound
inc
push
and
pop
in
adc
xlat
mov
loop
push
mov
sub
push
jg
stc
inc
push
push
push
lret
lods
sti
and
pop
xchg
xor
lock
mov
rcl
das
outsb
dec
adc
ss
jle
dec
mov
imul
and
test
std
and
ja
mov
std
xchg
mov
lods
xchg
pop
and
push
jge
sbb
jl
push
jo
xchg
mov
test
out
frstor
jae
dec
jmp
jge
shl
loopne
sbb
sbb
push
loope
cs
jg
clc
aas
rorb
call
pop
xchg
push
dec
std
mov
pop
jb
mov
ss
pop
cltd
and
add
sbb
repnz
jmp
leave
rcr
cmpsl
sarl
vorps
and
dec
adc
mov
push
dec
lock
mov
iret
mov
repnz
jnp
enter
fists
mov
movsb
pushf
ljmp
jnp
call
test
aad
push
testl
and
dec
lods
xchg
mov
pop
cmpsb
dec
stos
les
fsts
movsb
pop
adc
jmp
mov
sti
pop
loopne
fs
lret
push
jg
dec
les
jmp
sbb
or
mov
loope
add
idiv
lahf
pop
push
jl
mov
jo
push
mov
inc
fisttps
ljmp
pusha
and
shrl
add
rcrb
jg
mov
std
pop
cld
inc
lahf
pop
jnp
mov
popf
push
mov
loop
leave
adc
xchg
out
imul
cmc
push
cmp
inc
ja
pop
pop
je
push
push
fdivrl
xchg
fidivrs
fnstsw
add
add
jno
int
icebp
sbb
sub
mov
dec
jo
mov
mov
pop
inc
notl
mov
xor
sbb
stc
in
xlat
push
push
xchg
and
clc
mov
daa
ss
cmp
xchg
rcl
call
sbb
cmc
xor
jg
mov
mov
iret
out
dec
push
js
fadd
mov
call
push
in
jp
mov
std
or
inc
jne
repz
pop
or
in
lcall
lock
add
mov
sbb
mov
mov
jl
push
inc
ds
or
xor
jb
fucomip
jecxz
int3
xchg
movsl
xchg
sbb
pop
outsl
popf
cs
xchg
andl
les
outsl
mov
fnstsw
xchg
jnp
add
jecxz
push
sbb
jecxz
jecxz
inc
xchg
ss
inc
sbb
add
jmp
icebp
jge
add
mov
sbb
ljmp
loopne
stos
loopne
dec
fcos
cmp
ds
ja
bound
mov
mov
das
stos
or
cmp
iret
mov
cmpsb
mov
or
mov
ja
ret
lahf
stos
inc
pusha
adcb
sub
xchg
pop
jno
loopne
lods
cwtl
mov
jns
pop
lret
imul
aad
mov
pop
popa
mov
jg
mov
pop
jp
in
stos
icebp
mov
cli
cmp
out
add
cld
rcrl
clc
cmp
divb
sub
push
cld
fs
or
lahf
daa
inc
lods
sub
pop
scas
rcr
shll
rorl
mov
imul
sbb
ret
ret
xlat
fisttps
sbb
sub
fsin
cwtl
pop
mov
jg
mov
adc
xorl
add
xor
outsl
jmp
sbb
cld
pop
aam
inc
loopne
data16
cmpsb
nop
dec
and
loopne
std
sti
stos
enter
hlt
push
adc
nop
lods
insb
paddw
push
cli
aad
mov
call
add
fists
pop
mov
push
lods
mov
aas
or
jmp
push
push
push
jecxz
cmc
pop
sub
or
shll
xor
cmp
icebp
mov
popa
mov
cmp
cmp
imull
pop
mov
sbb
incl
jl
xor
int
int
mov
fdivr
dec
icebp
iret
call
outsb
enter
mov
std
jmp
divb
push
outsb
leave
fiadds
inc
cld
pop
fdivr
rcrb
js
sahf
mov
jo
or
xchg
imul
mov
sbb
sarl
lea
aam
mov
clc
mov
das
jnp
sbb
ret
sub
push
jp
jg
lods
sbb
loopne
mov
andb
jmp
fcompl
stos
pop
ffreep
mov
lcall
or
repz
movsl
add
add
and
push
cli
push
out
jg
imul
jp
insl
mov
out
push
xchg
pop
mov
add
movsb
imul
jmp
test
push
in
cld
pop
ret
inc
pusha
out
imul
iret
lcall
pop
push
jns
push
dec
inc
int3
subb
mov
dec
cmpsl
imul
lahf
scas
les
scas
js
push
pop
call
sbb
xor
pop
js
je
outsl
pusha
test
pop
stos
orb
test
mov
stos
jg
cmp
scas
mov
in
cli
das
jle
fmull
mov
and
jecxz
pop
mov
mov
movsl
mov
sbb
sbb
adc
mov
sub
call
mov
xchg
or
mov
push
adc
sbbb
pop
dec
jl
shl
pop
cltd
lds
data16
inc
cld
aas
sbb
movsb
test
in
jbe
add
clc
inc
aam
and
adc
xchg
popa
pushl
push
or
xchg
aam
sahf
movsl
jmp
push
stos
cmp
pop
ror
into
fwait
mov
test
roll
pop
addr16
jecxz
cmpsb
lock
dec
ss
das
cmp
outsb
ret
notl
inc
out
aaa
in
daa
stos
push
cld
mov
lcall
sbb
mov
cltd
and
mov
inc
jmp
and
adc
in
sub
push
push
dec
pop
clc
popf
or
aas
adc
inc
mov
xor
cmp
outsl
pop
fabs
icebp
repz
mov
in
xchg
cmpsb
or
dec
ljmp
sbb
cmp
sub
lock
lock
add
and
sti
xor
dec
mov
iret
adc
and
aad
xchg
xchg
pop
inc
ja
pop
cmp
out
test
lea
pop
push
imul
lds
sti
loop
jecxz
lods
dec
and
dec
inc
les
mov
in
dec
xchg
test
add
xchg
adc
out
jae
push
xor
fimull
pop
push
ss
add
sbb
inc
sar
stos
and
jb
arpl
rcrb
adc
sbb
fcoms
pop
adc
lea
idivl
sbb
dec
in
in
aad
or
mov
jo
cmp
pop
inc
mov
stos
inc
sub
sbb
mov
pop
mov
int
bound
aam
mov
sti
lcall
cmp
pushf
insl
dec
xchg
push
ficoml
mov
fisttpl
pop
xchg
aam
jne
push
int3
out
aas
adc
lahf
outsb
fisubrs
loopne
jmp
aas
or
mov
pop
lret
cmp
jge
outsl
pusha
out
cmp
adcl
aam
dec
aaa
jne
and
jg
jb
or
mov
cli
inc
jae
xor
faddl
stos
dec
jne
mov
adc
pop
mov
mov
arpl
cmpsl
mov
shr
inc
sbb
add
pop
jbe
pop
icebp
lahf
sbb
sub
out
ljmp
inc
imull
jecxz
add
jg
loop
xchg
ljmp
decl
outsl
aad
testb
push
jmp
imul
fnstcw
loopne
add
mov
insb
fistl
xor
filds
push
lds
sti
iret
loop
push
loope
or
js
mov
lcall
jo
push
sbb
or
push
dec
icebp
mov
dec
mov
into
pop
stos
movsl
cmp
mov
shrl
pop
jno
push
jo
iret
mov
sbb
lahf
data16
dec
mov
add
jns
mov
or
enter
cs
cmpsl
in
jg
sti
dec
cs
dec
jmp
out
mov
jne
pop
loopne
or
or
insl
add
pop
mov
test
call
mov
push
push
sbb
ret
and
jge
dec
push
jnp
stc
loopne
mov
mov
xlat
stc
add
aaa
adc
imul
lock
aas
push
dec
cmovb
or
jns
in
or
pop
psubd
mov
les
lcall
cmp
mov
sbb
cltd
jnp
push
sub
push
aaa
andb
daa
jne
out
scas
cs
fstpl
ja
cmp
mov
mov
std
pop
inc
mov
mov
lahf
ljmp
sub
mov
mov
jl
icebp
fisttps
and
rcrl
nop
add
ljmp
mov
addr16
gs
push
popa
mov
clc
xchg
push
scas
addr16
js
push
js
dec
std
add
hlt
pop
sbb
sar
mov
in
das
adc
xorl
sub
sarb
aam
cmp
xor
pop
movsb
mov
cmp
xor
xor
jg
push
out
cld
lock
jmp
clc
inc
and
icebp
xchg
sub
jns
mov
in
pop
and
adc
mov
cmp
std
lea
dec
sbb
push
sub
fnstsw
aas
pop
cld
cmpsb
or
pop
mov
shl
push
push
or
push
rorb
popf
and
or
or
test
sti
decb
cmp
out
and
xor
push
or
sarb
and
loopne
push
arpl
loop
icebp
daa
mov
jle
xlat
imul
jo
es
lahf
flds
lea
fwait
nop
cmpl
pushf
ja
sub
fisubrl
sahf
clc
jmp
push
sbb
dec
adc
jae
push
pushf
lret
inc
int3
arpl
mov
ljmp
mov
shlb
mov
lcall
mov
adc
lods
popa
in
or
dec
pop
scas
pop
cmp
dec
push
insl
and
out
xor
xchg
fdivs
jnp
dec
jmp
lcall
orb
lds
push
jns
decl
pop
jecxz
dec
cmpsb
pop
nop
js
je
dec
push
sahf
and
lock
jns
lods
and
push
mov
push
bound
xor
adc
hlt
sbb
cmp
pop
push
insl
dec
pop
jg
inc
popa
aad
loope
test
jle
rorb
and
push
lods
aas
and
iret
or
mov
xchg
sar
sbb
push
call
aam
jmp
cli
mov
mov
mov
cmp
faddp
and
je
clc
cmp
shll
xlat
cli
ja
and
test
mov
popa
cltd
adc
xor
scas
cmp
sub
or
andl
pop
cld
fnsave
cmpsb
xchg
sub
stc
call
ljmp
dec
stc
add
push
fwait
in
xlat
clc
mull
inc
pop
ja
mov
or
out
mov
js
test
xor
addr16
jg
lret
pop
mov
cwtl
loopne
mov
dec
or
imulb
test
or
idivl
dec
mov
mov
inc
loopne
in
jg
andl
mov
out
mov
cli
aas
rolb
cs
nop
dec
jge
and
je
in
mov
jge
mov
pop
aas
sbb
inc
push
add
mov
mov
int
push
andl
mov
fstpl
and
fdivl
push
mov
call
loope
xchg
cmp
dec
adc
xlat
aas
jecxz
arpl
xchg
mov
or
cmc
std
inc
out
ds
or
jmp
test
fisttps
xchg
xor
clc
int
iret
test
cmpsl
adc
adc
pop
dec
aaa
lahf
or
out
addr16
std
jae
jl
imul
gs
clc
xchg
ret
js
push
lods
mov
loopne
je
mov
sub
or
aam
pushf
adc
int3
leave
xchg
lret
add
out
inc
mov
cltd
dec
push
pop
gs
aas
enter
xchg
jno
sub
adc
dec
push
cmp
sub
loope
dec
repnz
xor
jo
jnp
xchg
mov
mov
lret
fldl
cmp
out
pop
mov
xchg
pop
loop
imul
mov
xchg
cmp
decl
dec
lret
fstl
dec
dec
lods
add
js
aaa
clc
mov
add
adc
mov
mov
mov
popa
push
mov
inc
jae
lods
and
pushw
jle
inc
sbb
insb
lahf
mov
inc
lahf
xchg
sub
rorl
xor
aad
sub
fildll
adc
dec
repz
inc
filds
jmp
out
push
mov
mov
mov
jg
mov
cmp
add
aas
push
push
inc
fstps
popa
call
xchg
lcall
test
imul
xorb
popa
sahf
dec
dec
mov
sub
mov
add
adc
and
dec
jge
fadds
fnstsw
or
xchg
mov
sahf
dec
adc
aam
xor
mov
jmp
ja
ja
enter
inc
jmp
insb
cwtl
and
jmp
xor
std
xchg
mov
mov
sbb
rorl
loopne
cmpsl
mov
dec
mov
and
add
addr16
or
sub
xor
stc
or
into
lods
mov
pop
cmpsl
dec
test
shrl
and
outsl
test
loop
xchg
mov
pop
inc
pushf
fsubs
or
jmp
push
sbb
je
daa
icebp
aas
push
push
iret
push
or
movsl
cmp
imul
inc
dec
cmpl
cmp
add
or
aam
jecxz
ffreep
and
xchg
xor
fs
xor
sbb
hlt
and
sub
xchg
push
adc
int3
cmp
dec
lahf
mov
imul
inc
pusha
xor
xchg
insb
push
shll
aam
idivl
std
sbb
jns
mov
xor
add
imul
push
fldcw
incl
jae
xlat
jle
sarb
mov
call
inc
cmpsb
icebp
enter
mov
ds
mov
mov
push
in
jne
test
mov
std
paddusw
rorb
aad
call
jp
jnp
push
or
incb
cli
in
mov
int3
sbb
jg
or
mov
jg
mov
jmp
mov
add
pop
int3
jg
dec
dec
dec
jnp
test
add
pop
loope
test
rorl
roll
push
mov
loope
les
dec
push
outsl
inc
loopne
fistpll
mov
je
adc
or
xor
xacquire
jns
fnsave
mov
mov
movsl
cmp
mov
imul
fs
test
aas
mov
pop
push
sbb
stos
xchg
mov
cli
mov
dec
neg
mov
sahf
mov
nop
ror
jl
jl
push
divb
int3
test
leave
stc
out
and
popf
jo
sub
inc
adc
jbe
xchg
jae
jl
xchg
and
inc
pop
adc
inc
loopne
aas
xor
mov
out
or
pop
or
rcr
cmp
cmp
and
std
mov
rcl
cmpsl
sbb
sbb
dec
ss
into
fmuls
and
cmp
int3
lret
inc
sbb
jae
jnp
xlat
ret
cmpsl
jle
pop
stos
sub
or
loopne
jmp
mov
pop
cmp
pop
loop
mov
insl
jo
pop
into
cmp
push
mov
lret
or
cmovne
sbb
shll
jge
out
or
icebp
lods
adc
push
lahf
lcall
pop
push
jl
push
cmp
ja
or
daa
xor
dec
loopne
pop
mov
inc
movsb
insb
adc
xor
push
inc
push
pop
pop
loope
lahf
inc
popa
sub
rcl
sarb
hlt
in
push
push
imul
or
mov
xchg
subb
add
xor
inc
cwtl
lock
pop
xchg
shll
sub
pusha
cmp
test
dec
jp
stos
mov
mov
push
inc
sub
jno
lcall
jg
popf
fdivl
clc
sbb
xor
das
mov
mov
jmp
fcmovu
xor
shrl
add
mov
sti
inc
xchg
mov
test
roll
push
jle
loope
sarb
loope,pt
mov
adc
mov
sub
loop
push
adc
jg
clc
sbb
int3
lods
add
jle
iret
pop
test
jno
outsb
or
inc
test
jg
decl
mov
clc
cmp
xor
incl
lret
shrl
and
in
jmp
cmp
mov
pop
jle
cmp
std
and
nop
mov
mov
add
jg
jbe
cmp
clc
into
mov
lock
xchg
inc
mov
fdivr
adc
mov
popf
cwtl
or
test
std
iret
jmp
and
xchg
jge
cmp
adc
in
mov
or
pop
cmp
arpl
sbb
fimuls
pop
in
leave
pop
jecxz
inc
adc
inc
imul
sbb
scas
push
addr16
mov
stos
push
xchg
insb
and
repz
inc
sbb
ja
lods
decl
inc
notl
pop
inc
rcrb
or
ss
ja
lock
in
push
in
xchg
je
bound
inc
dec
cmp
jg
xor
sbb
lock
call
std
aaa
add
sbbb
je
hlt
pop
mul
pop
arpl
scas
add
cli
loope
dec
pop
push
daa
subl
aam
je
mov
les
clc
mov
out
jg
xor
jno
enter
cmp
pop
nop
addr16
pop
add
gs
inc
mov
test
lahf
push
mov
insb
inc
or
scas
shl
clc
rolb
cmp
hlt
cli
pop
andl
push
ja
out
jnp
adc
movsb
cmp
dec
test
sar
and
std
fists
nop
lock
xchg
and
push
mov
movsl
mov
push
repnz
mov
mov
mov
jg
pop
add
jg
sub
scas
das
cmp
lret
fbld
mov
mov
xchg
xchg
mov
push
aad
ja
jl
data16
mov
add
push
insl
shll
xlat
idivl
pop
and
loope
cmp
aas
mov
aam
mov
clc
clc
mov
mov
mov
std
or
or
cltd
mov
int
and
js
cmp
std
jnp
adcb
mov
push
and
shlb
loopne
fistpl
cmp
push
sub
out
and
and
mov
fsubs
sti
aas
sbb
or
pop
ficompl
loope
sub
ffreep
test
inc
out
mov
js
mov
rcrl
push
xchg
lock
call
and
mov
decl
movsb
add
clc
daa
in
add
repz
out
loopne
mov
repnz
push
jg
imul
into
dec
loope
addl
dec
aam
rolb
push
pop
ljmp
push
lea
ud0
nop
mov
pop
hlt
imull
pop
rcrb
je
adc
ja
test
scas
cmp
outsl
movl
mov
jmp
shll
push
jns
mov
push
testl
or
add
pop
cld
inc
jp
xor
inc
popa
jo
mov
jno
or
jo
aam
mov
outsl
mov
sub
xlat
mov
adc
fildll
data16
inc
mov
lods
xchg
arpl
mov
mov
imul
lret
stos
xor
pop
std
repz
dec
or
cmp
loopne
adc
push
cmp
roll
inc
mov
aam
das
adc
std
int3
mov
mov
xchg
out
push
divb
mov
fistps
cmp
fidivrs
out
xchg
jg
sbb
enter
std
dec
aam
dec
lea
fs
pop
ret
mov
mov
mov
xlat
iret
nop
shlb
cld
dec
xchg
imul
das
cwtl
dec
adc
push
inc
mov
ds
dec
inc
lcall
pop
outsl
add
and
mov
mov
jnp
mov
push
push
shlb
or
rep
testb
insb
sub
jle
xor
imul
sbb
add
cltd
or
inc
xchg
mov
or
xchg
fdivr
pop
or
pop
lods
jecxz
xchg
jl
clc
aas
xor
add
inc
loopne
dec
xchg
sti
clc
mov
sub
and
sub
push
sbb
dec
sti
mov
push
inc
cmp
push
btc
jmp
daa
jg
ret
lea
insb
mov
pop
negb
mov
mov
loope
pushf
mov
xchg
dec
ret
jg
loopne
repz
adc
dec
out
push
add
fcmovnbe
inc
fnstenv
orl
xor
dec
lret
lea
shlb
dec
stc
xchg
mov
sub
adcb
mov
decl
sub
pop
jns,pt
push
ja
pop
sbb
mov
jmp
sub
jmp
cmp
fs
rclb
jae
and
std
sub
adc
je
decl
add
imul
mov
clc
dec
or
imul
outsl
fadds
cli
movsb
cs
mov
xor
sahf
into
in
cwtl
clc
ja
scas
cld
cmp
cwtl
out
sbb
movsb
dec
push
lret
adc
mov
aad
stos
ret
loop
lods
mov
and
and
scas
pop
add
repz
xchg
sbb
mov
or
cltd
add
cmp
jo
outsl
je
mov
insb
xor
push
out
cmc
push
mov
mov
dec
imul
shrb
rolb
cmp
pusha
and
inc
jbe
icebp
clc
lea
mov
cli
div
jg
bound
bound
out
pop
jl
and
and
xor
add
sub
addb
fwait
add
mov
xchg
pop
repz
loop
push
in
pop
jge
pop
add
jg
jmp
ja
push
xor
lret
stc
inc
jecxz
mov
call
std
jg
fldcw
cmp
pop
sub
push
in
pop
dec
sub
cmp
iret
cmc
mov
stos
and
or
xor
and
addl
xchg
jp
sbb
pop
lahf
mov
pop
adc
lret
into
jo
std
xor
lock
fists
adc
inc
fs
mov
jg
cli
aaa
xchg
push
pop
lret
push
sub
incl
je
adc
sub
stos
sub
call
outsl
rcrb
jno
aam
add
sarl
adc
test
jecxz
lcall
mov
xor
mov
int3
cmpsb
cmp
inc
or
out
mov
cltd
cli
popa
mov
sbb
sti
pushl
divl
adc
cmp
push
fcmovu
lcall
cld
fwait
adc
push
outsb
negl
lret
cld
push
adc
mov
sti
cmp
jmp
xchg
push
mov
fsubrs
subb
push
jne
mov
push
inc
lds
into
push
mov
lahf
adc
pop
mov
pop
lcall
ja
fistpl
fstps
jne
dec
add
cmc
notl
hlt
scas
into
in
jne
je
outsb
out
mov
jbe
loopne
sbb
fldl
mov
std
je
push
inc
mov
fisttpll
push
rclb
movsl
ret
inc
mov
aaa
mov
fwait
test
xor
mov
add
repz
adc
add
out
aas
xor
add
adc
or
sbb
incb
pop
das
adc
mov
aas
pop
mov
std
adc
push
sti
xchg
sbb
aaa
xchg
sti
or
push
shl
fstpl
pop
xor
das
faddl
sub
pushf
fdecstp
iret
jb
arpl
push
adc
ror
pop
dec
js
loopne
dec
mov
stc
int
das
outsb
stos
arpl
pop
loope
aam
outsl
jg
mov
mov
jnp
addr16
mov
insb
fcmovbe
stos
or
pop
jo
mov
jl
es
sbb
jecxz
shll
push
pop
mov
outsl
pop
gs
jge
loope
inc
fisubrl
stos
mov
es
lock
push
pop
cmp
push
fistpll
into
ret
sub
adc
mov
and
sahf
in
rcrl
push
and
jmp
fistps
imulb
gs
sub
and
jo
vmwrite
add
adc
iret
sarb
aas
pusha
es
sub
leave
xor
jg
pop
mov
xor
popf
mov
dec
mov
mov
sub
pop
icebp
cmpsb
out
inc
lret
xchg
stos
inc
adc
adc
jecxz
pextrw
push
aaa
je
adc
xchg
rorl
dec
add
sub
gs
mov
dec
aas
pusha
jb
lret
ja
mov
sbb
test
outsl
sbb
xor
jnp
push
inc
add
movsb
rorl
out
sub
mov
mov
xor
xchg
rol
or
imul
xchg
leave
movsl
in
jmp
xchg
call
lds
cli
pop
sbbb
mov
jb
inc
and
decl
out
ljmp
call
pusha
loopne
dec
jae
xlat
dec
or
sbb
test
lock
inc
sub
subb
mov
dec
inc
add
scas
pop
xchg
fdivrs
push
inc
jo
les
repnz
mov
cld
imul
add
ret
rorb
push
xor
or
jg
inc
repnz
outsb
push
fstl
cmp
jmp
xchg
mov
mov
sbb
pop
mov
sarb
clc
or
adc
sar
xor
xchg
test
jmp
scas
sahf
je
jbe
xlat
sbb
pop
mov
fs
pop
lea
xchg
sti
aam
mov
sub
fimull
push
shl
les
fisttps
pshufw
jp
out
clc
fwait
test
scas
fistl
mov
mov
lahf
es
push
ret
jle
push
push
inc
sti
stos
mov
cwtl
imul
incl
push
sbb
pop
clc
ffreep
jbe
push
mov
jbe,pt
sar
sbb
popa
das
shrb
mov
pop
dec
in
rorb
jbe
jno
mull
adc
ds
mov
in
dec
decl
pop
into
xchg
xor
xchg
lock
js
pop
push
cld
sub
jbe
or
call
jae
imul
cmpsb
jl
sbb
and
adc
push
out
in
add
mov
std
jae
adc
add
mov
sub
cmpsl
push
jg
in
adc
inc
jo
fwait
daa
and
lods
mov
fisttps
ja
fbstp
adc
pusha
shr
xchg
fimull
fwait
out
fildl
lcall
cmpsb
push
daa
cs
add
iret
xorl
xchg
fs
mov
dec
hlt
or
mov
insb
test
sub
in
mov
sub
idivb
ljmp
jle
dec
data16
cmpsl
les
test
aas
pop
test
or
lahf
icebp
or
aad
push
nop
pop
cmp
lock
in
add
jo
adc
xor
out
mov
movsb
in
sarl
cld
out
and
decb
mov
xor
movsl
pop
pop
cld
fistpll
xchg
out
dec
ss
cli
mov
fmuls
rcr
lea
or
stos
sub
jp
adc
dec
fs
pop
jg
or
fisubs
push
fdivrl
mov
cld
push
jno
mov
sbb
mov
adc
cmp
fildl
filds
xor
pop
add
mov
out
ss
pushf
pop
jae
dec
clc
inc
testl
lcall
sub
push
cli
repz
pusha
das
mov
rorb
aas
push
or
inc
cmp
jo
movsl
loopne
xchg
imul
and
mov
movl
and
ret
je
cld
aaa
ret
pop
sbb
add
fs
sbb
jg
icebp
pop
daa
insb
je
lahf
in
pop
add
test
dec
out
ffreep
fidivrs
push
push
stos
pusha
jl
xlat
rorl
cmc
pop
cmp
cmc
ja
mov
add
pop
pop
xchg
data16
loope
xor
xchg
test
mov
inc
mov
xchg
ss
pop
loopne
out
jecxz
pop
jbe
ja
imul
push
cld
and
inc
shrb
std
fcmovnbe
mov
rclb
ficompl
pop
std
xchg
std
sub
jns
pop
loope
adc
cmpl
shrb
cmp
je
das
pop
mov
mov
bound
imul
jg
lock
lcall
cwtl
fnstsw
mov
fimuls
mov
in
mov
loop
mov
dec
pop
add
adc
xorl
loop
jp
jg
enter
mov
mov
lcall
mov
mov
sti
pushl
jmp
add
adc
inc
pop
pop
xor
fisttps
and
pop
rorb
out
loopne
and
loop
clc
inc
dec
jg
sti
pop
jne
mov
fimuls
les
jae
mov
enter
or
aaa
incb
in
add
or
je
pop
push
loopne
adc
div
es
popa
add
jle
jmp
js
add
lods
push
add
cli
cmp
arpl
movsl
ficomps
test
mov
xor
shll
add
fstl
ret
mov
push
repz
std
ffreep
mov
sub
sub
aad
jle
pop
cmp
loopne
dec
shll
add
sub
jnp
push
cld
push
std
pushf
ja
and
gs
sarl
fsubl
hlt
sti
jne
mov
sbb
fistps
sub
mov
test
cli
lcall
rcrl
mov
push
stc
sub
hlt
in
aas
xchg
pop
mov
cmp
xor
nop
lea
pop
idivl
fstpl
ja
loop
sbb
add
aam
int
stos
xchg
mov
loopne
rcrl
xchg
and
lahf
push
in
rcrl
jg
mov
sar
arpl
add
pop
dec
adc
dec
add
in
cmp
pushf
fistps
out
test
ret
mov
clc
sbb
jmp
pusha
xor
add
cld
jg
mov
inc
jno
adc
test
fucomp
or
jg
insb
test
xchg
jns
add
pop
mov
jge
cmp
pop
sbb
gs
aad
decl
fwait
pop
lock
fistps
add
icebp
rorb
push
lds
mov
jge
out
ja
or
lcall
lds
aas
addr16
in
cmc
xchg
add
jmp
jo
rcrl
mov
hlt
sub
jne
lahf
movsb
popl
das
frstor
lahf
pusha
iret
daa
and
xor
xor
lahf
jmp
jl
jb
jmp
adc
jbe
flds
repz
call
mov
dec
mov
fwait
in
andb
test
sbb
arpl
js
std
aas
mov
aad
cmpsl
xor
sbb
pop
pushf
jg
stos
mov
movsl
aad
and
cmc
adc
cmp
mov
js
into
mov
and
mov
andl
movsb
mov
push
ljmp
mov
lea
jp
call
fldenv
je
mov
and
scas
xor
cmp
cs
loope
fildll
push
fistpll
push
in
daa
fdivp
mov
movl
jo
cmp
out
lds
add
mov
subl
adc
dec
std
push
mul
sub
cmp
popf
div
repnz
or
xrelease
loope
mov
mov
jmp
dec
sub
fnsave
and
jg
xchg
nop
out
mov
push
mov
cmp
iret
mov
jo
xor
pop
mov
jg
icebp
stos
lcall
popf
and
mov
mov
out
cmpsl
shl
jp
dec
cwtl
daa
call
jne
pop
idivb
fists
shll
push
push
push
xchg
fstp
rorb
cmpsb
and
pop
dec
cvttps2pi
out
cmp
pop
ljmp
jmp
sub
mov
pushf
aad
jb
sbb
mov
popf
dec
add
das
icebp
dec
hlt
sub
out
cmp
or
test
cli
repz
add
jnp
testb
popa
scas
push
pop
or
jle
loopne
lret
jne
cld
mov
int
clc
aaa
cmp
mov
lods
push
movsl
push
cmp
into
int3
std
daa
cld
cmp
stc
idivb
push
aad
cld
das
xlat
rolb
jbe
sbb
or
mov
push
mov
js
xor
adc
lret
mov
push
mov
lods
fnstsw
mov
pop
sarb
cmp
inc
std
jg
cmp
rolb
inc
nop
ja
movsl
movsb
aas
sbb
popa
inc
jno
inc
fs
sub
loopne
test
xchg
add
push
cmpsl
jle,pn
pop
std
out
mov
imul
adc
sub
pop
sbb
pop
add
dec
adc
icebp
scas
mov
cmp
mov
mov
mov
gs
cs
daa
add
pop
int3
aas
scas
mov
push
sub
rclb
push
xor
jg
add
sub
cmp
in
cmp
pop
jmp
popf
mov
bnd
rcl
das
cld
dec
mov
subl
cmc
jns
sbbl
inc
jle
lcall
mov
or
and
lock
in
push
adc
scas
cmp
push
xor
mov
inc
mull
xor
xor
mov
xor
xchg
mov
testb
sub
fdivs
daa
stos
pop
rcrl
mov
cld
mov
add
sub
pusha
mov
adc
sbbb
sbb
std
ja
orb
jle
adcl
and
adc
push
dec
add
bound
sub
scas
xor
hlt
xchg
test
jmp
test
dec
jp
mov
xchg
ficompl
lods
hlt
pop
dec
ljmp
popf
jne
popa
xor
lahf
movsb
lods
js
clc
negb
jl
dec
testb
xor
incb
jae
sbb
sbb
out
dec
cmpb
dec
lret
xor
cmpsl
ret
mov
inc
xor
scas
fwait
stc
in
in
in
dec
cmpb
ss
ljmp
mov
loopne
scas
lds
pop
and
outsb
cmp
call
ja
and
into
push
clc
inc
xchg
mov
in
popf
dec
or
pop
clc
mov
mov
aas
loopne
dec
push
jno
xchg
fcos
sti
add
clc
mov
test
mov
sahf
sub
pop
leave
sub
push
adc
add
and
icebp
pushl
int3
data16
and
test
call
mov
out
imul
leave
push
ret
test
mov
dec
jle
lock
imul
dec
cmp
pop
stos
ret
or
sahf
xchg
mov
mov
sbb
fildll
add
cmp
inc
scas
cli
cmp
mov
lock
sahf
dec
sahf
into
xor
icebp
outsl
sub
pushf
cmpsb
sub
pop
or
jns
int3
pop
jl
mov
push
popa
jbe
clc
add
mov
fnsave
out
jg
lock
adc
in
loop
repnz
popf
sbb
inc
inc
out
and
sub
cmp
out
pop
rorl
shl
repnz
jecxz
push
sbb
movsb
arpl
inc
jno
adc
sub
out
test
inc
adc
inc
fidivl
sub
lahf
fwait
jo
adc
das
add
lods
sbb
cmc
cmp
sbb
outsb
lahf
mov
loope
popf
mov
sbb
test
sahf
mov
dec
lea
jb
mov
sbb
push
sbb
pop
iret
dec
pusha
xor
add
insb
and
add
xchg
jmp
xor
jns
and
mov
dec
pop
loope
xor
push
mov
leave
es
push
cli
out
fcoms
mov
dec
mov
add
cmovns
mov
add
clc
stc
pusha
and
insb
iret
or
stos
xchg
push
mov
mov
sub
shl
xor
ds
xor
pop
std
lahf
jno
inc
mov
fbstp
outsl
stc
pop
cmp
cmpb
mov
or
mov
cmp
pop
dec
xchg
movsb
xlat
pushf
jmp
mov
pop
loop
int3
notl
pusha
test
cmpsl
xchg
call
cld
cmpsl
pop
mov
mov
xchg
faddl
push
mov
mov
les
xor
add
das
bound
lock
inc
aaa
ljmp
add
subl
mov
jg
ljmp
gs
pop
jecxz
movsl
ret
cmp
xchg
ja
and
xor
ret
mulb
popf
lock
jmp
jl
mov
cmp
xor
gs
les
push
push
or
lret
mov
mov
or
por
pop
inc
cmp
clc
stos
cmpsb
loopne
frstor
push
mov
mov
fildl
cs
or
cmpsl
pop
aad
inc
je
sbbb
iret
cmp
les
in
jmp
mov
mov
pop
int3
rcrb
pushf
mov
loopne
pushf
jmp
nop
shlb
popf
or
std
or
mov
add
and
jl
pop
pop
pop
dec
mov
scas
xchg
cli
out
fst
inc
testb
inc
adc
mov
mov
dec
push
leave
and
lds
cmp
jge
cmp
mov
push
pusha
movsl
lahf
dec
jmp
jbe
lock
subl
test
xchg
lret
nop
sti
test
xchg
xchg
mov
loopne
push
mov
cli
in
pop
hlt
ja
add
cmp
xor
ja
cld
xor
enter
mov
test
int3
ds
ret
cmpb
or
popf
jb
test
pop
std
data16
ffreep
repnz
mov
push
inc
fistpll
aas
xor
stc
lcall
out
rcr
prefetchw
and
iret
pop
push
jg
les
and
mov
mov
xchg
push
dec
add
in
mov
into
cmp
xchg
sub
pop
lea
sbb
lahf
sar
rcll
ja
push
push
lret
sti
ja
mov
jmp
mov
test
lock
decb
xor
or
jg
fwait
call
or
cmp
xor
in
mov
popf
cmp
dec
ljmp
jecxz
test
cmova
aaa
js
stos
push
ret
ret
inc
jns
ret
and
and
loopne
ret
mov
das
fldenv
cltd
mov
pop
icebp
dec
pop
or
mov
inc
jnp
cmp
mov
push
incb
cltd
decb
push
stos
mov
orl
fwait
cwtl
sti
jg
call
aaa
pop
cli
movsl
jb
xor
mov
xor
addr16
mov
cld
aaa
loop
add
es
add
or
pop
scas
fldenv
add
fildll
sbb
out
ret
cmc
shl
adc
adc
ja
enter
add
insl
dec
cmc
mov
dec
cmp
hlt
inc
out
les
xchg
jg,pn
rcrl
fcompl
pop
iret
inc
movsb
in
aas
mov
mov
jl
ds
filds
cmpsl
out
out
std
fs
push
popf
outsl
mov
add
lock
addr16
inc
lea
xor
add
jg
dec
push
or
sbb
pusha
stc
mov
jg
cli
xor
test
loop
xor
mov
clc
lahf
xchg
pop
sbb
pusha
shll
sbb
push
mov
cli
ret
dec
jmp
ffree
sub
dec
xor
add
lock
addl
xchg
jge
jb
pop
arpl
sub
cmc
xor
cmpsl
insl
and
and
in
sub
call
add
pop
mov
pop
in
roll
bound
js
cld
decl
ljmp
and
sarl
push
push
pop
and
mov
jge
xchg
adc
fwait
and
lds
xor
mov
mov
dec
cmp
push
pop
call
repnz
int3
or
sbbl
add
xchg
mov
aaa
js
dec
jnp
pop
mov
mov
sub
shlb
bound
cmpb
and
push
sub
pushl
sub
push
mov
or
pop
sarb
ret
push
adcl
out
sub
fistps
mov
cmp
mov
shrb
dec
mov
adc
jp
cmp
sub
loop
add
clc
addr16
daa
hlt
movlps
movsb
mov
rcrl
inc
idivl
adc
adcb
aas
icebp
out
dec
and
icebp
loope,pt
add
stos
notl
jmp
hlt
xlat
movsl
stos
sbb
adc
je
cmp
subl
lods
xchg
mov
inc
ja
in
jge
aad
call
decl
cmp
adc
push
xchg
idivl
inc
cld
cmpsl
adc
jnp
dec
je
or
jl
jo
lret
mov
sahf
and
push
inc
fiadds
repz
stc
jp
aas
stos
jae
lea
popf
and
out
adc
out
jp
dec
movsl
cmpsb
pop
push
ja
cmp
xchg
mov
repnz
bound
fcmovnu
ds
into
ja
addr16
orb
loop
sbb
popa
mov
leave
jmp
in
adc
lahf
jge
arpl
fistps
test
sbb
loop
pop
pop
mov
mov
cmpsl
adc
mov
sbb
and
push
enter
cmp
cmpsl
pop
jmp
add
stos
sahf
dec
test
pop
call
std
inc
neg
imull
int3
pop
add
mov
lea
loop
mov
dec
ja
rorl
popf
dec
jne
jo
out
decl
cmpsl
bound
cmpsl
push
fstl
adc
jg
decl
cli
call
mov
pusha
popl
clc
scas
sahf
cmp
js
mov
cmpsb
dec
mov
xor
or
or
pop
js
sbb
cmp
sti
dec
mov
mov
cmp
adc
ficomps
shrb
aaa
fcomi
out
dec
mov
imul
sbb
adcl
xchg
mov
cmpsb
mov
mov
cmpsl
shl
lcall
mov
imull
push
clc
mov
jne
push
enter
dec
and
adc
ja
mov
arpl
jp
xor
sbb
xchg
adc
mov
add
xor
popf
cmc
jg
std
sbb
imul
out
cmp
js
and
mov
stc
cmp
mov
std
add
jmp
sbb
in
adcl
clc
mov
push
xchg
popa
daa
lock
push
scas
jmp
inc
push
push
cmp
sbb
or
sbb
loopne
cmp
jp
outsl
mov
icebp
icebp
and
or
mov
push
adc
lahf
sbb
out
jle
jmp
fdiv
je
cmp
sbb
inc
decl
xor
ljmp
pop
clc
mov
sahf
sbb
jp
and
push
arpl
test
push
xchg
jle
mov
fcomps
addr16
push
mov
outsb
in
adc
out
in
fmull
stos
inc
fsubs
outsb
cmpsl
pop
ret
lahf
loop
popa
ret
push
sbb
sub
push
push
pushf
test
imul
add
push
mov
cmp
inc
dec
mov
jp
jg
sti
jmp
mov
mov
das
push
mov
sub
xchg
clc
push
sbb
xor
ds
enter
or
add
push
xor
sarb
pushl
lock
cwtl
sbb
jecxz
sub
sub
cs
adc
out
and
cs
call
scas
popa
lret
sub
jmp
mov
push
jns
cld
mov
xchg
mov
scas
fdivr
dec
sub
fdivr
dec
pshufw
outsl
call
push
incl
sub
mov
sbb
add
lret
xor
push
shr
cli
jbe
mov
xchg
mov
fisttpll
outsl
aaa
mov
xor
aaa
sub
leave
inc
mov
jecxz
cli
push
clc
pop
or
jne
arpl
add
sbb
sti
add
out
lcall
js
jo
cmp
outsl
icebp
mov
mov
js
cltd
mov
add
lea
pop
incb
adc
mov
inc
jp
into
xor
std
ljmp
inc
inc
push
ficoml
push
mov
pop
cmp
dec
andl
lcall
roll
adc
jmp
hlt
sti
dec
jnp
cmpsl
add
xor
xor
out
out
lock
jg
lds
dec
mov
sarb
xor
decl
aas
add
call
call
ss
fistl
inc
push
pop
aad
and
ljmp
cmc
pxor
fimull
pop
inc
inc
fs
dec
insb
pop
pop
nop
jge
test
sub
aaa
ret
pop
xchg
adc
and
or
inc
push
xchg
pop
addl
push
loopne
sti
invd
mov
inc
inc
push
call
int
mov
xchg
mov
not
add
adc
je
push
add
jg
adc
push
inc
add
push
push
push
dec
xchg
test
mov
xchg
jo
pop
ja
jge
clc
and
jo
cli
fmull
sub
add
pop
dec
lret
idiv
int3
add
inc
mov
or
xor
adc
sub
leave
mov
mov
or
cld
mov
sub
neg
push
iret
dec
jg
js
test
and
lock
outsb
pop
jns
addr16
push
js
jno
lock
ret
push
push
push
movsb
add
loopne
faddl
inc
lds
and
xor
out
jmp
inc
daa
push
in
push
push
cwtl
outsb
sbb
xor
test
jecxz
push
rorl
incb
movsb
lods
pop
lock
inc
outsb
push
incl
pop
inc
add
not
add
inc
inc
movl
mov
faddl
and
cld
and
out
lock
ja
add
push
add
test
sub
xchg
jno
and
rolb
inc
cld
push
jle
or
sahf
and
add
sub
pop
push
push
push
mov
shr
adc
fidivs
inc
imul
inc
bound
push
and
and
or
sub
pop
adc
gs
dec
ret
lods
cmc
adc
insl
shrb
add
xorl
sub
clc
repnz
xor
in
inc
mull
fisubs
dec
ja
nop
push
xchg
add
out
mov
scas
jg
lea
neg
inc
neg
mov
jb
add
scas
dec
data16
out
inc
bound
cld
jb
jo
or
xchg
xchg
in
push
xchg
cmp
cmp
call
inc
or
ja
imul
adcb
cwtl
push
je
sbb
mov
mov
cmp
pop
rcrl
push
xor
push
scas
xchg
outsb
push
mov
cmc
js
scas
pusha
adcb
xor
push
xchg
pusha
ret
clc
jg
in
or
fiadds
neg
adc
add
xor
les
adc
sarl
repnz
aaa
cs
sub
popa
add
mov
jmp
test
dec
xchg
lret
add
cmc
ret
filds
xor
push
fsubrl
pop
push
dec
loopne
push
mov
gs
inc
daa
xorb
push
or
sub
or
push
push
push
ret
lret
inc
mov
incb
push
jb
lock
rcrb
add
push
push
roll
sub
adc
mov
adc
adc
add
jnp
inc
hlt
arpl
lock
sbbl
xlat
add
loope
jo
repnz
sahf
dec
not
mov
inc
clc
vmovmskps
dec
sbb
adc
inc
test
push
adc
dec
sub
idiv
sbb
dec
push
add
rcll
adc
lods
repnz
aad
add
jo
jae
sub
sub
hlt
fucomip
int3
add
ret
orl
add
or
dec
inc
and
xor
push
addr16
int
outsl
int
clc
jae
sbb
data16
xchg
adc
cli
dec
push
push
insb
push
push
adc
call
ret
ret
or
push
dec
notl
ret
sbb
insl
jno
sub
xor
mov
fsubrl
xor
psrad
add
add
test
addb
mov
mov
add
inc
jne
insb
xor
or
andl
push
xchg
lock
sbb
outsl
cmp
add
mov
push
xor
or
clc
lds
faddl
sub
arpl
je
add
adc
adc
xor
push
inc
int3
imul
call
pop
sbb
roll
sub
or
shlb
sbb
rolb
xchg
cmp
inc
push
jbe
rcrb
push
inc
push
pop
jmp
add
pop
movsb
mov
gs
push
xlat
adc
pop
shrb
popa
xor
cld
push
push
dec
dec
add
inc
push
popa
inc
push
mov
inc
data16
add
mov
add
adc
dec
sbb
neg
dec
or
lock
push
sbb
dec
sub
dec
fs
lea
push
jl
neg
add
or
divl
pushf
aaa
inc
cli
iret
push
adc
shr
adc
adc
push
rcll
fisttpl
neg
repnz
imul
push
adc
roll
fcoms
mov
scas
add
add
in
lahf
cs
jb
inc
nop
test
ret
flds
jnp
and
jmp
negb
pop
js
outsb
inc
xor
push
js
fcoml
push
xor
insb
sti
imul
xchg
int
cli
test
cmp
sbb
lea
in
cmpsb
lock
data16
pop
dec
add
ffreep
add
addr16
xadd
add
hlt
inc
rcl
xchg
and
andb
test
loopne
ffreep
inc
fmull
je
push
pop
jle
jg
push
push
or
inc
inc
shlb
sbb
rcrl
push
in
push
jbe
andl
clc
pop
adc
pushfw
fwait
mov
ret
neg
inc
inc
dec
mov
mov
stc
repnz
sbb
add
jmp
sbb
sub
inc
push
repz
adc
dec
sub
neg
push
or
add
add
fcomps
add
outsb
pusha
inc
adc
push
sbbb
sbbl
and
push
fidivs
push
repz
fs
lock
jns
insb
and
sbb
add
pushf
scas
mov
inc
dec
jecxz
sbb
pop
dec
sub
lods
pusha
repnz
cld
and
jmp
or
scas
push
in
xor
ss
mov
push
arpl
stc
lock
push
push
mov
pop
lcall
aam
dec
jg
xchg
dec
imul
push
iret
scas
rcrb
cli
xchg
cmp
dec
fadds
add
dec
jo
push
mov
push
mov
dec
xor
push
std
dec
inc
fcmovnbe
dec
adc
cmpsb
icebp
in
imul
adc
and
dec
inc
loop
cmp
mov
adc
inc
adc
xchg
lock
and
adc
not
inc
dec
mov
ljmp
inc
loop
fcmovnb
inc
add
cmp
fists
inc
adc
fildl
sti
sub
adc
repz
sub
push
adc
sbb
mov
repz
add
sbb
bound
sub
pop
mov
jmp
or
data16
aam
dec
sbb
aad
gs
and
stos
cmp
cld
mov
xor
xchg
pushf
mov
lock
loopne
add
fisttps
sub
push
icebp
dec
jecxz
insb
sub
add
fadds
je
pop
mov
add
or
popa
inc
xor
pop
in
ss
outsb
dec
push
jmp
mov
sub
fs
jbe
add
xor
mov
cmp
in
mov
add
dec
mov
mov
xchg
sbb
jp
or
not
test
clc
mov
fistps
mov
jae
stc
mov
mov
add
stos
inc
mov
or
pusha
fs
push
cli
lea
cs
imul
inc
mov
jp
mov
sbb
mov
test
es
add
inc
ret
pop
mov
cmp
ja
xchg
jo
cld
push
push
push
dec
xor
sarb
dec
addb
lea
and
xor
imul
call
test
loope
sbb
test
insl
and
mov
or
iret
lret
lahf
jle
adc
cmp
add
push
test
pop
pop
cld
add
dec
lods
push
mov
push
ret
xor
and
mov
inc
adc
xchg
cwtl
mov
mov
test
and
mov
rolb
rorl
inc
rolb
mov
push
push
lods
in
repnz
sub
inc
into
lock
rsm
lds
arpl
iret
dec
inc
dec
dec
jne
mov
data16
loop
in
add
into
cmc
adcl
fisttps
shl
data16
dec
aaa
pop
or
push
xor
mov
daa
lea
xchg
jl
test
cmc
sbb
rolb
push
cmp
or
js
gs
imul
test
cmp
adc
xor
inc
add
decl
ljmp
and
sti
inc
sahf
neg
push
adc
add
lock
shrl
stc
das
sub
jae
adc
jl
clc
sti
pushl
dec
and
sbb
repz
push
pop
inc
incl
mov
cmp
dec
add
or
es
push
aam
inc
add
sbb
add
pushf
pushl
imul
push
push
mov
lret
push
inc
arpl
imul
push
aaa
jb
mov
cwtl
and
lahf
int3
ljmp
mov
push
cld
push
push
icebp
sub
fs
jns
push
in
fidivrs
push
push
je
lret
xchg
or
xchg
add
outsl
jecxz
inc
jp
hlt
xor
cwtl
or
add
test
add
aaa
sbb
int
push
push
add
cmpsw
mov
sub
add
movsl
rol
add
adc
mov
icebp
scas
mov
push
pop
loop
ret
xchg
test
cmpb
inc
loopne
or
fwait
pusha
xor
insb
cld
push
sbb
or
pop
test
push
lcall
jmp
les
xchg
subl
ffree
mov
pop
sar
jo
in
add
fiadds
or
dec
jbe
jo
sbb
js
push
mov
mov
dec
add
aas
push
pop
mov
push
insl
jae
sub
or
and
addl
test
sub
adc
inc
rclb
push
pop
arpl
xor
dec
jle
out
sbb
xchg
sbb
pop
cli
mov
dec
inc
pop
add
stos
ret
les
shll
xor
inc
mov
ud0
ss
push
jbe
je
push
push
xchg
push
ds
dec
pop
movsl
insl
mov
cmp
loope
dec
inc
into
or
xor
jb
dec
xchg
sub
xlat
sub
ret
pop
sbb
ret
push
addb
test
dec
xorl
push
mov
xchg
xor
push
add
rolb
mov
out
sub
lahf
in
lea
inc
add
adc
inc
adc
pop
gs
pusha
negl
push
jb
dec
adc
or
lock
call
xor
mov
lahf
push
aaa
dec
adc
and
or
rorl
cmp
ret
sbb
lret
adc
mov
mov
push
into
loope
arpl
xchg
pop
pusha
rorl
shll
popa
lods
stos
push
fistpll
push
loop
inc
dec
in
clc
push
rcr
pop
call
inc
adc
mov
cmp
adc
fimull
iret
sbb
inc
adc
ja
stos
push
repnz
loope
adc
dec
cld
ljmp
and
decl
jne
leave
ret
fstp
sub
std
xor
insl
fcoms
push
push
push
inc
jns
bound
gs
add
dec
push
or
pop
add
testb
lret
or
ficompl
filds
xchg
fdivrs
in
fstps
cmp
jns
fwait
dec
aaa
arpl
push
js
or
dec
fstl
xor
leave
inc
mov
clc
or
push
inc
gs
data16
pop
mov
out
sbb
dec
inc
adc
dec
add
or
sbb
test
add
ja
push
xchg
mov
ret
aad
dec
jno
std
xor
or
mov
loope
loop
mov
je
cmp
xchg
push
xor
call
imul
test
adc
dec
inc
adc
sub
add
dec
sub
sbb
sbb
mov
lahf
mov
es
outsb
insl
shrl
and
je
test
mov
push
push
inc
addb
push
push
aam
out
in
lea
push
mov
xor
lret
xor
nopl
xchg
es
rol
adc
cwtl
enter
ror
pop
ficoml
popa
cld
or
cli
inc
mov
pop
xor
mov
icebp
mov
in
repnz
insb
fisttps
jmp
push
loopne
call
jl
dec
pop
push
pop
and
aaa
lret
or
add
out
out
add
fimull
push
add
hlt
fisubrs
loop
add
clc
fbld
xchg
inc
push
arpl
cli
sub
pushl
inc
xor
ret
add
pop
pusha
ror
ret
dec
in
clc
das
lods
dec
push
xor
inc
data16
add
dec
negb
je
xor
mov
xchg
add
push
aas
stos
sub
or
ss
cmp
jne
mov
inc
push
xchg
inc
aas
test
gs
insb
outsb
repnz
out
dec
stc
pop
dec
arpl
shlb
or
or
sub
lods
clc
orl
push
pop
lods
mov
pop
push
or
dec
jbe
fcmovb
aas
orb
jge
into
jbe
bound
mov
dec
xor
push
test
stc
push
fisttps
mov
push
jo
push
sub
dec
dec
dec
lods
cmp
div
rcr
mov
test
inc
cld
sbb
dec
fdivs
cmp
popa
add
jb
push
cmp
inc
shrb
inc
pop
roll
push
xor
xor
xchg
dec
arpl
notl
in
fwait
add
sbb
cmp
jne
push
add
stc
mov
xchg
inc
popa
xor
lods
or
mov
dec
mov
jno
jp
je
test
pop
rolb
adc
add
mov
adc
pushf
loope
push
adc
insb
arpl
mov
leave
add
bound
push
mov
jns
xor
add
inc
mov
push
mov
sbb
mov
in
dec
push
daa
hlt
add
daa
dec
mov
arpl
dec
push
bound
add
hlt
xlat
imul
mov
inc
in
or
mov
inc
inc
insl
push
dec
jo
rcrb
movsl
aad
sub
bound
addb
xor
fsubr
ss
xlat
call
inc
lret
pop
xchg
in
sar
aaa
inc
push
mov
push
loop
push
inc
sub
add
sbb
aaa
lea
ss
mov
pop
movsb
aam
int
and
ds
xchg
outsb
int
xor
or
mov
jns
daa
mov
outsb
ss
aaa
mov
ret
push
jns
mov
mov
mov
orl
pop
aaa
dec
je
sbb
jp
dec
in
bound
or
or
dec
je
dec
inc
push
sub
incl
pusha
add
inc
push
neg
inc
jmp
inc
mov
adc
xor
sbb
test
pop
sbb
mov
add
sbb
mov
pushf
xchg
stos
sbb
je
shr
outsl
stos
push
insb
test
fwait
and
adc
add
pusha
xchg
or
insl
pop
mov
jo
push
push
push
jae
es
add
mov
call
sbb
sub
pop
es
mov
test
rcr
and
sub
mov
lods
push
or
imul
fwait
mov
add
aas
lock
xor
add
shll
mov
icebp
inc
dec
pop
sbb
test
imul
leave
ret
filds
icebp
arpl
adc
je
loop
leave
dec
pop
add
mov
sub
insl
jno
xor
add
aad
mov
adc
das
cmpsl
xor
call
mov
or
aas
sbb
mov
add
xor
mov
fwait
lods
pop
pusha
incl
xor
jg
dec
das
mov
aaa
je
push
hlt
scas
add
inc
std
sub
shrb
push
ljmp
xor
push
dec
push
stos
bound
or
sbb
push
jbe
dec
cmp
mov
xor
xchg
adc
and
add
ja
test
push
cltd
repnz
loopne
adc
push
inc
ss
and
adc
inc
pop
cmp
xor
push
sarb
push
sarb
sub
or
push
movsl
mov
ret
arpl
test
or
fstl
xlat
addl
in
xchg
adc
ljmp
push
outsb
jbe
insb
fs
ret
add
adc
and
push
enter
xor
pop
mov
outsb
pop
inc
fstp
mov
xchg
popa
fs
add
decb
jns
je
adc
imul
movl
push
pusha
arpl
inc
outsb
xor
push
xchg
sbb
add
pop
lcall
sbb
dec
push
lret
inc
add
inc
mov
xchg
pop
jo
adc
ljmp
stc
add
push
not
inc
push
cmp
or
ds
das
cs
mov
mov
push
fcmove
push
lods
shll
xchg
cli
sub
sub
mov
push
and
cmpsb
incb
push
dec
xor
push
adc
add
push
hlt
stos
subb
sahf
flds
ja
push
lock
inc
addl
lock
dec
mov
add
jae
dec
add
add
or
adc
fidivs
add
sbb
add
xchg
push
leave
inc
shlb
dec
push
xchg
js
pop
push
roll
xor
cmp
mov
jecxz
ret
push
dec
data16
inc
inc
jmp
adc
enter
sbb
sbb
inc
add
dec
cld
push
jne
mov
pusha
cmp
sbb
add
and
jo
inc
addl
inc
jle
decl
sub
dec
inc
sbb
inc
inc
sub
inc
xchg
pop
adc
sub
or
jne
dec
or
mov
sahf
test
xchg
dec
in
sub
or
or
xor
jne
adc
popf
and
loopne
xor
inc
sbb
adc
orl
popf
loop
add
xchg
popl
lahf
xchg
loop
cmp
je
mov
add
scas
pop
add
add
getsec
push
xchg
test
shrb
fimuls
pop
jnp
mov
xor
imul
add
gs
push
adc
in
insb
imul
mov
xchg
fucomip
add
inc
roll
je
into
ror
sahf
testb
enter
lods
xchg
int
inc
pop
mov
sub
lods
mov
or
addr16
add
mov
rorb
notb
add
and
ss
sbb
addl
push
mov
nop
in
cwtl
out
mov
jmp
inc
pop
in
mov
stc
mov
int
inc
dec
inc
mov
lahf
add
mov
dec
push
xor
pop
or
and
in
test
add
cmp
dec
cmpsl
sahf
sub
cld
or
sahf
or
mov
les
addl
xor
pop
mov
sbb
add
mov
mull
and
daa
sub
sub
sbb
cmp
addb
add
mov
jl
inc
pop
or
mov
js
repnz
in
lcall
push
lock
fisubrl
mov
add
shlb
addr16
std
pop
mov
fisttpll
inc
and
push
daa
movsb
subl
xor
sub
cltd
call
xchg
or
and
jg
lods
cmp
inc
mov
test
adc
sub
mov
or
lods
pop
pop
addb
fisubrs
lret
bound
pop
sbbb
mov
insl
or
inc
addr16
mov
pop
add
pop
jo
fwait
mov
sub
je
dec
cmp
xor
shrl
jae
test
jo
cmp
add
int3
inc
fcomip
insl
in
inc
push
sbb
mov
clc
add
jb
int
and
or
sub
int
mov
mov
push
mov
mov
mov
pop
cmp
idiv
push
mov
adc
or
xchg
outsl
push
lahf
sub
rorl
jge
fisubs
adc
das
inc
and
dec
sti
sbb
xlat
dec
cmpsb
dec
imul
test
popf
sbb
add
shlb
repnz
adc
scas
add
cltd
jae
js
fwait
sub
and
mov
or
mov
dec
ret
enter
jbe
push
repnz
cmpl
jg
nop
out
add
inc
or
insb
sub
in
or
clc
dec
in
out
inc
push
push
stos
adc
mov
les
xlat
cmp
mov
repz
in
mov
jp
inc
jle
mov
shll
or
xchg
subb
xor
or
sti
xor
or
jne
lea
shlb
int
mov
sub
mov
or
xchg
orb
or
rcrb
sub
cmpsb
sbb
pop
jne
mov
push
sbb
cmpsb
jge
push
xchg
sbb
cltd
test
xchg
int3
sti
mov
shrb
movsb
adc
roll
sbb
in
xor
in
mov
mov
sbb
inc
pop
mov
xor
mov
cmp
jp
mov
repnz
push
aaa
repz
pop
into
xchg
jecxz
adc
sahf
push
sub
cwtl
lea
xor
enter
push
cmp
mov
jp
xorb
add
int3
xor
fistl
cli
aad
sbb
imul
cli
test
mov
cmpsb
adc
inc
fistl
loopne
xor
inc
sub
xchg
call
pop
sbb
loop
mov
shrb
sbb
adc
sarl
xchg
cmpsb
ljmp
int
cmpsb
and
sarl
cli
ja
lds
or
icebp
lcall
jl
mov
test
clc
cmp
xor
cmovle
sbb
in
leave
stos
sub
mov
xchg
inc
mov
pop
cmp
inc
sub
jo
nop
pop
jle
fadds
test
leave
sbb
fnsave
pusha
cmp
and
dec
gs
mull
pop
add
mov
xchg
xchg
loope
xor
jnp
mov
mov
sub
push
popa
bound
add
inc
push
jl
adc
repnz
call
cmp
out
mov
mov
lea
dec
scas
pop
add
add
shr
dec
arpl
and
push
inc
arpl
mov
fbld
call
dec
repz
dec
stos
pop
rorb
lock
mov
xchg
fmul
sbb
das
adc
mov
adc
js
cmp
lahf
scas
sarl
enter
pop
and
loope
jo
orb
lods
std
adc
pop
sbb
jmp
inc
inc
sbb
repnz
and
jno
frstor
push
daa
popa
jns
xorb
scas
mov
in
popa
xchg
scas
jo
lock
jo
lcall
add
push
inc
nop
xchg
test
stc
mov
ljmp
and
lcall
add
push
xor
orl
jle
inc
pop
int
test
mov
jne
adcb
cmp
add
arpl
add
add
or
fsincos
or
je
dec
into
or
jg
push
sbb
xchg
adc
aad
xor
faddl
out
shlb
lock
mov
movzwl
lahf
and
inc
imul
jmp
xchg
mov
jne
sbb
in
sub
fldenv
imul
and
shl
sub
mov
cmp
in
cmp
je
or
mov
sub
clc
push
jne
add
xchg
rcrl
xchg
idivb
mov
arpl
fmuls
or
xchg
jno
lock
mov
mov
pop
push
or
out
stos
rorl
jno
add
sub
dec
popf
rolb
xchg
sub
cmp
push
inc
add
pop
pop
lods
jl
sbb
pop
out
xor
sbb
pop
mov
mov
ret
dec
stos
xlat
pusha
sbb
sub
xor
cmp
pop
or
inc
xchg
or
jmp
push
decb
xchg
push
cmp
fldl
das
xchg
sti
jmp
rcl
dec
xor
xor
imul
dec
sub
jp
inc
or
mov
push
mov
mov
hlt
mov
push
push
inc
push
cmovno
in
xor
pop
or
jp
dec
lret
pop
or
cmpsl
inc
or
pop
stos
cmpsl
xchg
ja
loopne
xchg
jg
hlt
mov
jnp
xchg
out
push
xchg
rcrl
sarl
aas
in
mov
push
cmp
in
es
in
lods
repnz
repz
test
jne
subl
pushf
mov
mov
scas
jl
jnp
and
das
lods
mov
mov
pop
inc
ja
pop
adc
push
and
iret
popa
movsl
adc
das
push
push
lock
test
add
out
leave
inc
push
fimuls
add
or
insl
push
cmp
rolb
int
and
stc
addb
dec
fbstp
and
hlt
je
and
cmp
push
cmp
daa
add
cmpsl
add
sub
data16
leave
orl
add
ret
loop
repz
ds
je
lock
push
imul
dec
fmulp
je
out
add
bound
lods
stos
incl
loope
aad
fnsave
mov
jecxz
sbb
shlb
add
daa
adc
inc
sub
xor
xor
imul
stc
mov
jp
daa
stc
and
inc
adc
bound
xlat
adc
add
je
and
popa
lahf
aaa
loopne
in
or
ret
ret
jle
pop
and
scas
push
push
negl
shll
mov
ljmp
sbb
shl
push
jns
dec
xchg
lods
adc
mov
nop
bswap
mov
mov
push
xchg
sti
les
and
in
rolb
loopne
mov
ficoms
mov
repz
imul
pop
scas
pop
or
cmpb
xchg
aaa
dec
enter
mov
fadds
mov
pop
mov
das
xor
scas
add
dec
add
ja
lods
ret
pop
fnstenv
adc
push
rcl
jns
scas
enter
bound
mov
and
into
push
jo
inc
lods
movsb
inc
xchg
jmp
mov
push
add
push
pop
mov
sbbb
ja
sub
pop
ljmp
mov
ret
mov
pop
and
stos
imul
jno
mov
movsb
iret
rcr
sbb
cltd
pop
cwtl
popa
mov
add
addr16
jge
cmp
jge
push
cmp
insl
outsb
imul
dec
sbb
adc
hlt
add
stos
dec
cmp
xorb
fimuls
adc
push
or
cmpsb
loopne
inc
in
sub
xchg
inc
sub
push
ss
fadds
shl
adc
lods
xchg
and
lock
repz
shlb
mov
repnz
into
push
or
cwtl
push
arpl
sahf
cmp
pop
les
shll
xchg
fcmovbe
nop
sbb
scas
add
ljmp
lret
insl
popa
adc
int
ss
add
mov
adc
adc
inc
pop
shlb
cmp
mov
xlat
pop
xchg
dec
sahf
mov
fiadds
dec
lods
sub
popf
insl
std
and
lret
fcmovb
ja
push
daa
test
sbb
imul
pop
and
test
jecxz
push
dec
sbb
and
cmp
add
push
out
pop
push
data16
mov
std
aad
mov
mov
xor
clc
mov
jle
jge
lods
sub
xchg
mov
mov
sbb
push
stos
sbb
ret
push
cmp
test
mov
sarl
arpl
pop
xchg
dec
es
dec
xchg
or
lds
insb
pusha
aas
add
popf
jno
jae
xor
ds
sahf
in
lahf
test
and
xchg
jecxz
outsb
adc
and
mov
cmpsb
ret
mov
adc
arpl
dec
mov
sahf
int
aaa
sbb
das
movsl
pop
cmp
into
push
das
lret
inc
sub
push
pop
orb
ret
mov
sar
imul
pusha
adc
add
inc
call
sbb
mov
int
xorl
add
adc
mov
xor
in
push
mov
nop
and
xchg
lcall
adc
ret
repnz
and
fdivs
jge
sub
adc
inc
ds
fisubrs
pop
outsl
les
and
lock
sub
xor
mov
loopne
inc
into
lret
lcall
mov
pop
xor
scas
dec
mov
jmp
mov
push
nop
mov
dec
arpl
push
aas
add
xlat
xchg
ja
push
mov
push
jge
inc
movsl
ljmp
jno
sub
stos
xchg
mov
daa
movsb
dec
dec
cltd
pop
inc
mov
and
mov
and
or
repnz
movsb
arpl
mov
mov
cmp
and
and
dec
insl
aad
idiv
dec
in
arpl
int3
das
add
ss
jb
movntps
xor
mov
lods
xchg
push
and
rcrl
icebp
mov
mov
xchg
xor
xchg
leave
cwtl
in
imul
xchg
ja
aaa
cmp
test
inc
dec
mov
sub
lds
mov
jl
aam
cmp
and
mov
scas
or
sbb
je
mov
or
cmp
or
sbbl
mov
or
repz
movsl
pop
or
adc
icebp
or
int3
ja
mov
ret
inc
mov
xchg
inc
sub
xchg
sbb
cmp
dec
pop
test
jae
cld
rcl
rcl
adc
ret
adc
scas
sub
and
lds
cwtl
cmp
mov
inc
push
push
and
dec
mov
inc
push
dec
pop
test
xchg
jg
sub
jecxz
push
aaa
in
insb
rcrb
dec
leave
mov
shll
xlat
js
pop
push
cmc
rclb
cmp
xchg
xor
imul
push
sbb
pop
fstl
inc
push
lds
sbb
scas
das
nopl
nop
data16
mov
xchg
cmp
push
adc
pop
jle
mov
sbb
scas
jmp
jns
push
pop
rcr
arpl
or
cmp
idiv
jmp
xor
jb
mov
xlat
int
sub
sti
jp
jo
adc
test
nop
loope
cmpsb
lock
mov
dec
xor
push
adc
test
js
sbb
outsb
rcrb
sbb
cmpsb
pop
xor
adc
sub
rcrb
add
lea
sub
adc
shll
jb
aaa
inc
cmp
sbb
sahf
fs
in
out
adc
mov
xor
add
subb
push
imul
loop
nop
sub
push
xchg
lcall
lahf
hlt
shlb
or
and
inc
xor
mov
popf
lcall
inc
pop
mov
lock
in
adc
fmuls
ficoml
mov
jo
add
cmp
dec
adc
ret
into
mov
fisttps
outsl
jbe
sub
adc
cltd
test
mov
or
xor
xchg
push
es
lods
rolb
dec
xlat
pop
fmull
add
xchg
mov
push
fsub
gs
fwait
pop
rcrl
mov
jmp
in
or
xor
jno
cmp
movsl
pop
or
or
inc
test
sbb
lret
jnp
lods
mov
sub
rorl
add
add
test
xchg
inc
outsb
imul
mov
push
rcrb
mov
sub
test
pop
stos
lcall
dec
xchg
and
or
cmp
adc
mov
jo
lret
jno
jl
push
or
movsb
mov
xchg
inc
inc
pop
pop
jecxz
fmull
ljmp
or
jg
xor
sbb
push
mov
ds
add
xor
clc
mov
mov
adc
data16
shlb
inc
sbb
fcmove
xchg
sub
mov
jae
add
jp
jecxz
mov
xchg
testl
mov
mov
and
inc
fcomps
scas
add
dec
add
jbe
in
cmpsb
inc
and
jb
arpl
push
inc
jp
lds
inc
gs
imul
add
cmp
andl
push
cmpsl
add
jle
lds
aam
pushf
mov
inc
xchg
jb
jp
mov
leave
das
mov
ret
std
lods
mov
sbb
repz
mov
sbbl
ss
inc
imul
pop
sbb
addl
jecxz
testl
test
or
ret
pop
and
jo
dec
test
dec
mov
jbe
pop
push
mov
sarl
pop
xchg
and
mov
int3
ret
stc
jecxz
xor
cmp
and
xlat
jmp
cmp
std
mov
adc
lret
and
test
imull
in
out
mov
inc
xchg
xchg
push
xchg
cwtl
pop
jae
loope
insb
inc
xor
cltd
xchg
pop
stos
ret
and
ret
insl
and
movl
push
and
pop
pusha
push
or
shrl
outsl
jl
inc
int
lods
mov
mov
pop
divl
loope
in
ds
xlat
loope
rcrb
pop
aaa
cmp
jle
jp
xchg
fwait
shll
sbb
push
fisubs
xor
push
jl
call
loop
les
mov
sahf
inc
mulb
push
sub
loope
push
sbbl
stc
mov
je
inc
pop
add
das
shlb
inc
aam
int
pop
mov
lret
cmc
inc
xchg
std
lods
adc
mov
and
xchg
pop
xchg
dec
xor
and
pop
inc
add
fistpll
pusha
movsb
loope
scas
xchg
out
xchg
jns
cmpsl
jmp
add
inc
lret
out
cwtl
scas
sub
rcrl
outsb
xchg
into
daa
jge
xor
pop
das
sbb
inc
repz
js
leave
je
xchg
andl
cmpsb
les
mov
push
push
pop
jae
mov
enter
pusha
enter
inc
mov
adc
jnp
mov
in
mov
out
cmpsl
jmp
lea
stc
sbb
push
popa
and
adcb
jle
xlat
adc
mov
and
sahf
nop
inc
sbb
and
or
xchg
lcall
pop
sub
add
aas
mov
mov
clc
cmp
and
aam
mov
data16
or
fstps
cmp
and
in
sbb
adc
dec
andb
stos
add
pop
insl
dec
add
dec
mov
jmp
aam
ret
and
hlt
test
leave
test
pop
addr16
cli
sbb
mov
adc
pop
and
repnz
sub
mov
shll
jae
addl
dec
popf
and
cmpsb
cmp
test
pop
imul
xor
mov
jl
add
sbb
aas
jecxz
js
mov
jb
loop
jmp
aad
ror
jne
jbe
shlb
std
shlb
adc
icebp
jg
xor
inc
push
aaa
pop
cmp
test
cmpsl
inc
mov
out
xchg
xchg
inc
jmp
orb
or
clc
pop
sti
push
iret
scas
cmpl
cmp
add
out
inc
mov
dec
cli
in
push
in
les
mov
jno
mov
jo
cmp
mov
pusha
enter
clc
loope
add
test
mov
and
ret
stos
test
jne
fstl
jno
mov
and
mov
mov
insl
lods
ret
rorl
xchg
dec
repz
or
cwtl
scas
push
adc
or
sahf
sbb
jns
leave
jae
pop
and
or
push
gs
test
pop
add
add
loope
dec
xor
jo
jne
sub
cltd
je
lea
jmp
fsubl
scas
je
sub
sub
nop
mov
js
pop
popf
pop
and
cmpsl
xlat
fidivs
popa
xchg
int3
sub
add
mov
mov
fadds
cmp
or
pop
inc
dec
or
sti
repnz
xchg
ret
aad
je
shl
mov
in
xor
jae
inc
popf
pop
jne
sbb
mov
add
adc
cwtl
pusha
movsb
dec
push
stos
sub
push
pop
jecxz
dec
or
shl
jo
stos
cmp
push
mov
sbb
in
loopne
cmc
jo
mov
add
mov
xchg
xchg
cmp
adc
lahf
jbe
clc
call
mov
sbb
rcrl
sub
lods
xchg
lock
test
adc
push
popl
out
enter
xchg
push
add
mov
int
sub
mov
push
sbbl
cmp
or
dec
popf
push
dec
mov
icebp
daa
sub
add
icebp
std
into
xor
push
cmpsl
lcall
repz
sbbl
cmpsl
xchg
fwait
dec
andl
out
jbe
cmp
outsl
lock
xchg
dec
xor
dec
je
lock
ds
add
ds
repnz
xchg
pop
cmp
dec
addl
and
arpl
mov
jl
xor
mov
fs
lods
in
add
pop
pop
popf
test
cwtl
sub
cld
cmp
or
icebp
not
push
or
mov
mov
xchg
dec
mov
or
les
roll
ret
xchg
cmp
or
push
call
in
dec
lret
test
pop
push
pop
aam
mov
mov
jle
inc
jmp
ja
jbe
ljmp
fildl
ljmp
pop
out
mov
inc
inc
mov
pop
xor
add
sbb
adc
sarl
andl
je
mov
adc
inc
push
lret
ret
test
xchg
mov
adc
rcrb
mov
pushf
add
xchg
mov
pop
adc
xor
lahf
sti
sarb
cmc
daa
out
or
dec
add
into
cmp
push
imul
in
xchg
lcall
inc
loopne
cs
adc
pop
dec
adc
mov
mov
pop
xlat
mov
rolb
mov
adcl
lock
push
outsl
iret
pop
sub
scas
dec
loope
dec
movsl
dec
call
push
xchg
icebp
ja
mov
sbb
test
aas
sub
sbb
roll
adc
push
ret
push
stos
xchg
sbb
leave
jecxz
mov
cli
mov
mov
fbstp
add
fcomps
test
xor
cmpsl
jb
sbb
lock
outsl
mov
nop
test
push
dec
xchg
sti
iret
ret
bnd
cmpb
clc
mov
ret
imul
cmp
loop
outsl
inc
sbb
lea
popa
inc
pop
inc
sbb
push
ret
mov
and
fs
inc
add
mov
loope,pn
dec
lahf
and
sbb
mov
push
sub
and
inc
and
add
jle
mov
dec
and
inc
stc
shlb
cmp
shrl
jo
jmp
cmc
jmp
test
test
mov
cmp
xchg
std
xchg
sub
sti
popa
push
add
loopne
push
push
outsb
int3
xor
push
mov
and
xchg
mov
das
jmp
jo
sbbl
dec
and
mov
mov
ror
cmpsb
adc
clc
jo
mov
inc
pop
ljmp
inc
ss
in
cmpsl
mov
mov
xchg
orl
popf
dec
xor
call
inc
in
daa
sub
or
orb
add
mov
cltd
xchg
jp
addr16
xor
add
rcr
rcrl
sub
xchg
jns
xlat
loope
jl
pop
pop
icebp
mov
loop
lahf
cld
lahf
inc
jmp
jecxz
sbb
inc
mov
das
test
jno
ljmp
or
adc
dec
fiadds
dec
adc
test
jae
daa
enter
inc
sarb
addl
stc
out
shlb
jne
pop
mov
push
call
sbb
imul
or
mov
push
test
orl
lret
xchg
push
stos
ja
push
orb
ljmp
sbb
sbb
insb
mov
jecxz
cwtl
cltd
loop
pushf
jecxz
push
call
sub
push
jecxz
cmp
test
imul
jne
popf
dec
mov
push
clc
xor
bound
mov
sub
int
push
mov
test
in
add
mov
in
std
xchg
mov
nop
push
adc
sbb
into
je
rclb
mov
pop
sbb
push
test
pop
inc
jb
ficompl
test
inc
jb
cmp
mov
xchg
add
jo
or
gs
sbb
rcrb
jp
popa
cltd
or
ror
inc
lods
mov
lock
loopne
inc
sub
and
adc
jne
mov
pop
les
daa
mov
jp
and
jo
ljmp
pop
pop
pop
sbb
clc
add
imul
shrb
cltd
test
mov
setns
aam
lret
out
lods
xor
xchg
and
jmp
aam
jecxz
cmpsl
inc
xor
add
mov
push
cmp
add
sub
xchg
pop
push
and
mov
inc
mulb
lcall
lods
lcall
add
test
in
fcomi
mov
inc
sub
ret
sbb
daa
sbb
mov
add
xor
shll
cmp
loope
and
pop
aad
add
cmp
sub
mov
add
jecxz
cvtdq2ps
je
in
movsl
mov
sahf
mov
add
das
in
popa
stc
mov
enter
pushf
xor
inc
lret
iret
adc
dec
mov
dec
das
test
pop
bound
into
das
push
xchg
aam
in
mov
in
jp
lret
xor
shrl
sbb
push
xor
push
push
js
sbb
cmp
jle
in
test
push
sbb
cli
dec
cmpl
fistpll
fidivrs
push
test
xchg
push
pop
cmp
sub
cmc
xor
ret
int
jmp
ja
stos
ljmp
pop
hlt
in
adcb
fimuls
repz
cmp
and
fistps
jmp
xchg
push
int3
pop
add
test
adc
test
pusha
xchg
lea
mov
cltd
mov
fsubrs
xchg
dec
jl
pusha
dec
cmpsl
mov
ret
inc
push
loopne
pusha
aas
idiv
pop
nop
and
js
xchg
test
sbb
or
push
jno
dec
cmp
jle
outsb
fdivrl
push
jg
inc
addr16
cwtl
xchg
cmc
jb
cmp
jno
jg
loop
div
cld
stos
sbb
aaa
or
push
aam
clc
imul
cmpsb
jecxz
sub
pop
xor
inc
ljmp
xor
outsl
adc
adc
jo
dec
divl
mov
sub
mov
mov
sub
lret
ret
ret
xchg
mov
jmp
icebp
xchg
jno
xchg
or
fisubs
aas
pusha
rcll
jecxz
and
in
outsl
xor
xchg
mov
jecxz
not
rolb
jp
xor
sub
mov
sub
aam
push
push
dec
xorl
icebp
je
mov
pop
lea
les
sbb
xor
aas
jnp
push
scas
adc
push
sbb
nop
mov
rcr
xor
xchg
pop
inc
sbbl
iret
xchg
sbb
or
mov
sbb
cs
sahf
sahf
inc
and
clc
push
enter
sub
je
and
xchg
jae
ret
pusha
and
jle
mov
adc
shrb
pop
fs
pop
and
and
mov
and
jl
cli
pop
bound
xlat
add
xor
and
dec
jbe
adc
aad
fs
xor
push
test
or
mov
jo
psubw
pop
mov
and
dec
popf
pusha
xchg
out
mov
push
es
jne
aas
inc
lahf
xor
mov
mov
xor
je
dec
mov
loope
push
mov
or
and
xorb
adc
pop
sub
push
rorb
cmp
dec
jb
mov
pop
dec
xchg
lcall
push
aaa
ja
xchg
adc
push
mov
jmp
inc
mov
and
or
or
lahf
inc
test
xchg
inc
les
fwait
loope
out
pop
data16
mov
or
xchg
jl
adc
mov
or
adc
mov
dec
cmp
in
push
scas
cmp
dec
mov
fcomi
gs
xor
divl
lds
hlt
pop
adc
jo
xchg
xor
mov
std
imul
jo
stos
test
xlat
jg
popa
in
mov
into
loop
ret
icebp
addr16
insl
mov
or
cmp
pop
xchg
adc
in
pop
int
sbb
push
pop
xor
popa
inc
mov
mov
das
adc
or
sbb
loope
add
xchg
dec
cmpsb
in
dec
stos
hlt
hlt
mov
add
aam
xor
jno
pmuludq
aad
adc
and
je
jnp
clc
adc
stos
cmp
mull
popf
sbb
scas
and
adc
cmpsl
cmp
add
jp,pt
xchg
mov
or
mov
pop
hlt
stos
cltd
rclb
jo
lcall
scas
aam
dec
aad
nop
ror
xchg
les
data16
add
fwait
mov
adc
lret
dec
cmp
cmp
scas
and
add
sbb
jnp
loop
scas
mov
push
jo
jno
cmp
xor
push
shrb
dec
cmp
push
fcmove
jno
imul
dec
mov
icebp
jmp
ds
leave
sbb
mov
lret
adc
push
add
shlb
xchg
and
fwait
outsl
mov
sub
fidivs
flds
sbb
lcall
icebp
dec
or
dec
and
mov
xor
and
outsl
cld
call
shlb
scas
inc
xor
mov
repz
cwtl
and
cltd
mov
xchg
push
cmp
cmc
inc
std
lret
roll
vsqrtpd
or
ret
sub
add
cld
jnp
or
add
cmc
pop
dec
pop
sbb
xor
or
hlt
lahf
and
xorb
loop
test
xorb
shlb
out
aaa
xchg
or
fucomip
mov
or
mov
sbb
inc
sub
and
pushf
mov
mov
mov
test
or
dec
push
pop
in
pusha
popf
xor
sbbl
sub
cmovle
mov
das
xor
sub
lea
outsl
cmp
adc
icebp
push
ja
xor
js
in
jge
rol
and
pusha
loopne
das
rolb
mov
enter
lret
sbb
and
pop
pop
xor
xlat
movsb
mov
lcall
loope
loope
lods
dec
mov
rcll
sbb
add
pop
cli
sarb
leave
leave
outsl
xor
loop
cmp
or
iret
lahf
mov
pop
cwtl
xor
and
ljmp
aad
xlat
fwait
adc
or
cli
out
pop
in
mov
push
sahf
dec
pop
dec
sub
add
test
call
arpl
cmp
or
mov
in
test
mov
repnz
inc
mov
std
roll
xchg
dec
orl
inc
call
outsl
inc
test
mov
icebp
jge
inc
pop
cltd
scas
pop
js
cmp
std
cwtl
or
xor
shrb
shll
xchg
cmp
lds
xor
sub
stc
xchg
decb
sub
icebp
ljmp
pop
orb
cmp
inc
xchg
dec
xor
jge
jle
nop
push
sub
data16
push
lds
imul
and
mov
inc
arpl
mov
push
iret
rcrb
cwtl
int
mov
xor
lds
imul
mov
inc
rcrb
mov
push
sbb
scas
rclb
cmp
les
xor
cmpsl
fwait
jns
add
jge
mov
or
fsubs
lret
shl
jae
test
xchg
mov
jns
in
pop
ja
mov
dec
push
clc
xor
cmp
sbb
imul
test
sbb
cmpl
ss
addr16
add
stos
jle
xor
in
jns
sub
add
frstor
jl
push
or
shl
adc
push
into
sbb
push
xchg
hlt
daa
mov
icebp
cmc
or
int3
mov
fdivr
and
aaa
roll
enter
pushf
icebp
inc
fildl
push
popa
fs
push
or
mov
add
and
add
inc
pop
jge
into
daa
cs
dec
roll
push
pop
pop
cmp
pushf
push
loopne
sbb
outsb
xor
stos
das
jp
inc
sub
cmpsl
cli
or
inc
mov
mov
enter
add
out
ds
pop
lea
daa
jno
pop
mov
jp
mov
inc
add
sti
and
pop
nop
cmpl
test
sub
fwait
repnz
push
sub
xor
push
sub
inc
orb
in
and
push
adc
push
jmp
cmp
cmpsb
jp
daa
adc
sub
and
sub
out
outsb
sti
xchg
imul
add
test
nop
les
mov
cltd
xlat
mov
mov
pop
add
cld
lock
loopne
xchg
leave
insb
mov
stos
xchg
push
add
int3
mov
xchg
sbb
add
sub
push
shll
and
aad
inc
mov
es
int
pop
or
and
add
mov
sti
inc
pop
dec
mov
jno
adc
cmp
xor
inc
sub
xor
cmp
stos
xorl
jmp
ja
mov
insl
mov
ljmp
inc
orl
lcall
in
pop
push
dec
or
scas
cmc
iret
jne
mov
arpl
adc
mov
addr16
pop
cmp
lods
adc
push
pop
add
pushf
jns
fwait
hlt
xor
nop
mov
dec
je
subb
jecxz
mov
xor
jmp
fbld
pop
call
outsb
pop
lock
cmp
cmp
push
push
addr16
nop
mov
mov
test
dec
cmp
jmp
mov
sbb
xlat
adc
mov
push
sub
pop
into
push
lods
xchg
xlat
mov
aas
mov
cltd
mov
xor
mov
xchg
repz
pop
push
outsl
or
pop
pop
sbb
mov
jle
lahf
cmp
xor
mov
out
xor
sahf
mov
das
adc
test
lahf
pop
cmp
and
xchg
xor
iret
pop
cmp
inc
popf
xchg
lock
dec
cli
loop
xchg
and
jmp
jne
or
cmp
inc
sarl
lods
mov
insl
imul
push
pop
int3
arpl
mov
mov
jb
mov
ljmp
inc
dec
mov
xorb
ljmp
xchg
rcr
push
nop
push
lea
cltd
cwtl
xor
in
sbb
mov
in
push
fadd
test
ja
stos
adc
mov
fdivl
jmp
dec
mov
push
xorps
jo
mov
mov
das
xor
sahf
inc
in
inc
pushf
nop
add
or
xor
push
jo
inc
cmc
in
jmp
and
and
sub
sub
mov
jo
std
out
mov
pop
loope
dec
jge
stc
aaa
adc
loope
lock
loopne
cmpsb
adc
movd
dec
rcll
push
jmp
push
fs
cwtl
fwait
or
nop
shrl
and
imul
xor
mov
loope
lret
pushf
mov
and
rcrb
leave
sbb
stos
mov
subl
rorb
movsb
pop
xor
jp
push
mov
push
jb
cld
pop
cmp
mov
test
fisubs
popa
push
xchg
pop
push
loope
pop
push
inc
mov
mov
lds
sub
pusha
addr16
hlt
xlat
ret
mov
sbb
jl
scas
or
fcomp
mov
dec
push
pop
jge
nop
into
and
xchg
mov
rol
jp
jne
lea
int3
cld
sub
movsb
loop
inc
cmpsl
cmp
add
inc
xchg
mov
rcll
cmpsb
jp
rorb
jbe
mov
movsb
mov
push
int
pop
repz
and
and
mov
inc
in
xchg
shlb
cmp
lret
jecxz
sub
pop
int3
movhps
dec
mov
xchg
lret
inc
std
or
clc
ret
pop
imul
movsb
push
movsb
pop
js
insl
add
test
repnz
xor
push
mov
das
imul
in
jp
sbb
jo
fwait
jns
add
or
lock
sbb
xchg
out
lods
lods
call
sub
dec
insl
sub
inc
xchg
xchg
push
punpckhwd
movb
push
cmp
rcrl
rol
adc
push
inc
popa
push
in
mov
es
faddl
clc
mov
xchg
ret
setae
mov
jae
pop
es
in
ja
xchg
dec
jg
shlb
cmp
loopne
stos
fcomi
xor
les
cltd
icebp
mov
xor
sti
adc
inc
lret
clc
pusha
rol
lahf
cmp
cmp
adc
pop
sbb
daa
xor
jge
insb
int
test
and
cmp
adcl
or
outsl
stos
mov
push
pop
ljmp
dec
xor
sub
inc
pop
daa
shr
stc
and
sbb
jle
fbld
aad
outsl
pop
nop
push
xchg
push
jno
push
iret
icebp
lods
cwtl
or
pop
add
out
jmp
jle
pop
movsb
loope
pop
mov
mov
mov
dec
jg
cmpsl
lods
lret
movsl
or
imul
push
aad
jnp
mov
pushaw
int3
push
pop
sbb
sbb
sbb
cs
or
and
and
ret
add
sarl
adc
dec
pop
sbb
mov
mov
lret
cmp
loopne
or
adc
lahf
jle
jne
pusha
pop
mov
outsl
jmp
push
fistl
loop
int
push
add
xlat
in
jmp
not
mov
mov
sti
loope
inc
imul
orl
xlat
cld
pop
jecxz
cltd
add
and
cmp
dec
push
add
cmpsb
mov
pop
stos
xchg
fsubs
adc
mov
inc
mov
mov
lods
fiadds
mov
in
imul
pop
test
fwait
mov
dec
in
scas
lret
pop
shlb
and
clc
add
cmp
pop
or
in
aam
lds
sub
inc
push
mov
xor
mov
jae
mov
xchg
push
lock
gs
popf
adc
mov
sbbl
pop
xorb
in
adc
or
mov
jo
sbb
xchg
mov
popa
sbb
call
sbb
push
dec
mov
pop
jp
loope
xor
adc
pop
js
pop
pop
lahf
das
bound
popa
xlat
and
and
push
add
js
xor
push
sbb
jmp
jl
popf
sbb
gs
fmull
mov
andb
into
sub
loopne
sub
lea
or
fildl
pop
fs
jns
out
or
stos
stc
xchg
add
sbb
push
icebp
ljmp
or
jo
xchg
inc
jmp
roll
cmp
fs
ret
xchg
sub
jle
filds
out
ret
aam
out
inc
cltd
add
hlt
pop
push
stc
add
popl
test
mov
pop
adc
pop
or
push
sbb
xchg
lahf
jp
mov
scas
rcll
jmp
test
pop
stc
outsl
std
pushf
cmp
das
nop
sub
loopne,pt
ja
cmp
bound
xor
and
movl
jecxz
hlt
sbb
xor
mov
imul
scas
xchg
shl
sbb
mov
and
mov
fdivl
dec
jnp
adc
icebp
int
jne
int
push
and
xchg
mov
dec
lods
dec
pop
cld
jmp
aad
add
and
stos
rorl
lahf
jp
sahf
lods
insb
xor
cmp
pop
sbb
out
mov
mov
xchg
add
js
jae
scas
gs
cli
loope
mov
int
les
adc
jae
lret
mov
shl
loop
mov
fwait
jmp
test
mov
shll
mov
mov
cwtl
or
int
incb
adc
dec
out
iret
in
cli
xchg
mov
ret
add
loopne
ficoml
sub
push
lock
bound
cli
or
cmc
mov
mov
iret
add
lds
cwtl
loopne,pt
mov
rolb
jle
lods
sub
add
fiaddl
jnp
cwtl
mov
fadds
or
push
cmpb
mov
rcr
cmc
cld
repz
daa
jbe
sub
shrl
scas
dec
mov
enter
outsl
test
rolb
push
je
out
lods
jle
add
adc
stc
arpl
sbb
jecxz
cs
mov
daa
dec
lock
leave
cmpsb
dec
and
xor
xchg
jle
in
popa
cmp
push
cmc
les
in
sarl
orb
pop
mov
xchg
sbb
adc
je
pop
mov
jmp
gs
std
add
or
xlat
add
sbb
imul
or
pop
add
data16
or
pop
enter
sar
mov
add
js
sar
dec
or
out
xlat
aas
mov
cli
dec
push
arpl
subb
adc
test
mov
and
lock
out
sub
cmpsb
imul
call
in
dec
add
xor
in
mov
jne
cmp
sbb
mov
jg
pop
frstor
sarb
jae
jns
or
inc
and
jmp
push
insl
notl
jecxz
movsl
adc
lret
gs
test
mov
shlb
shl
mov
shl
jecxz
popf
mov
add
mov
push
cmpsb
pusha
call
repnz
addr16
lea
bound
lods
or
daa
sbb
ja
xor
adc
leave
cmp
mov
call
inc
push
or
fldt
jp
in
or
pop
adc
add
jmp
lret
jbe
add
mov
or
ja
pop
sbb
stc
pop
jge
pop
les
mov
les
xor
xor
dec
arpl
xchg
mov
repz
data16
jg
xor
out
push
xorl
push
push
pop
or
and
mov
cmp
popa
js
fldenv
sub
sub
push
arpl
test
push
mov
scas
clc
out
ror
mov
pop
sbb
rcrl
test
xchg
mov
add
test
or
add
shl
mov
and
idivl
jp
pop
xor
aad
add
and
iret
fadds
lds
fbstp
cmc
in
filds
xor
ljmp
mov
sub
lahf
mov
in
test
or
push
movsl
lods
aaa
pop
jmp
mov
test
jecxz
mov
into
jmp
inc
cli
ljmp
lcall
pop
es
cld
or
inc
mov
xor
mov
flds
xor
ljmp
jbe
xor
pop
mov
push
add
fbstp
loopne
out
push
xchg
loopne
jmp
jle
loopne
test
adc
fsubl
aam
fs
cmp
mov
std
mov
jl
sub
out
nop
pop
adc
and
pop
stos
mov
jle
pop
and
mov
inc
jno
fsts
fiadds
cmp
outsl
int3
std
sub
pop
xor
adc
ljmp
jne
cld
mov
es
in
pop
mov
sub
das
sub
ss
pop
mov
mov
inc
xor
cmpb
lea
cmc
adc
mov
mov
pop
jp,pt
lock
xor
adc
or
aaa
out
sub
add
sub
adc
adcl
jl
mov
dec
and
xlat
xchg
jns
and
dec
and
call
jp
lret
add
adc
mov
shlb
icebp
out
and
and
jno
dec
jo
aas
and
push
dec
dec
jne
daa
jnp
dec
sarl
cmp
pop
test
test
stos
fucom
mov
xor
push
pop
fldl
sbb
idivb
cmpsb
aad
sbb
cld
les
or
jae
xor
pop
imul
testb
test
push
jns
frstor
movsb
dec
lds
dec
pop
add
mov
jp
add
push
add
adc
jecxz
inc
pop
jns
test
and
or
sbb
stc
pop
stc
jle
xlat
jp
cs
adc
jbe
pop
pusha
add
xor
jnp
pop
jg
inc
in
adc
adc
push
aad
shlb
pop
pop
rorb
push
fwait
insb
add
call
lret
pextrw
daa
jle
lods
pop
xchg
push
sub
call
push
call
out
push
jbe
cmp
jle
lock
and
sbb
test
adc
mov
jg
dec
or
ja
lret
cld
mov
add
fiadds
adc
cmp
pop
mov
mov
and
jae
rolb
pop
xchg
cmp
rcll
pop
in
arpl
xchg
subl
pusha
sahf
xchg
xchg
pop
jp
into
into
mov
dec
loope
cwtl
xlat
adc
and
call
mov
xor
repnz
stc
pusha
pusha
stos
stos
aam
cmp
rol
cmp
arpl
and
cmc
imul
xor
mov
fwait
jmp
cwtl
sbbl
xor
shrb
inc
cmp
pop
or
cvtps2pd
cs
inc
fwait
cmovp
and
sbb
adc
add
je
jle
call
imul
cltd
popa
cmp
jp
xor
lods
and
fiadds
lcall
inc
mov
iret
mov
sbb
mov
ret
or
into
mov
stc
mov
push
adc
inc
sbb
out
add
enter
orb
aas
jmp
cmp
fmuls
lret
and
pop
push
jp
aas
icebp
icebp
mov
je
adc
sub
ret
lods
fs
out
ljmp
dec
fisttpll
daa
in
and
mov
add
stos
jnp
cmpsb
or
push
lds
xor
inc
sub
cmp
leave
mov
ljmp
pop
in
subb
pop
scas
ds
push
fdivs
repz
call
or
pop
mov
fisttpl
fwait
cli
add
lcall
hlt
scas
cmp
xlat
mov
add
clc
inc
iret
lcall
xchg
jge
xchg
int
roll
loope
adc
push
add
stos
psubb
aas
lock
call
movsl
addb
fwait
pop
mov
xorl
xchg
jecxz
mov
enter
add
out
loopne
pop
cmp
sub
mov
loope
add
cmp
mov
ret
mov
mov
xchg
and
dec
inc
mov
hlt
popa
push
mov
push
scas
push
jmp
test
enter
scas
xor
mov
mov
xchg
shl
push
mov
cwtl
popa
sub
sbb
sti
add
in
fcmove
ds
adc
jle
aad
jp
dec
fldl
mov
and
les
call
push
adc
lret
mov
mov
nop
push
stos
xlat
test
mov
mov
fisubrl
add
int3
loopne
shlb
pop
ja
les
dec
rorl
jmp
push
pop
test
stos
por
int3
out
fnstcw
inc
jno
leave
mov
push
inc
mov
mov
and
mulb
shrb
inc
mov
imul
ror
and
jns
in
cmp
bound
sub
dec
pop
inc
popl
fwait
cmpsb
mov
jmp
mov
add
cmp
insb
es
test
xlat
pop
imul
and
xor
or
dec
xlat
push
call
ja
push
jecxz
lcall
jmp
sub
pop
lcall
mov
jg
add
std
arpl
xchg
pusha
jmpw
add
jno
out
les
pop
fcompl
sub
xchg
xor
stos
lret
jne
sub
inc
add
daa
adc
add
imul
hlt
sbb
cmp
addr16
fstl
mov
das
cmp
rol
sti
das
loope
ljmp
std
jo
dec
mov
mov
out
adc
add
popa
dec
pop
xlat
inc
in
aad
xor
mov
pop
rol
scas
outsb
sbb
lea
fwait
mov
dec
pop
mov
inc
jno
and
cmp
sub
and
push
jg
adc
les
fimull
jmp
jo
xchg
pop
sbbl
scas
add
cwtl
cld
pop
jg
jnp
popa
mov
loope
cmp
shrl
add
xchg
rclb
fsubrs
ds
adc
push
xor
sahf
fstpt
sbb
dec
enter
sbb
ja
aas
movsb
mov
cmpb
mull
jne
cmpb
data16
lcall
sbb
xchg
push
imul
orl
js
cmp
add
jno
repnz
imul
sbb
mov
jno
out
insb
mov
cmp
jecxz
lcall
jp
shrl
movsb
int3
xor
call
inc
xor
scas
vaddsd
cmp
mov
push
jb,pt
mov
dec
das
jns
xor
in
aam
push
or
clc
cmp
out
xchg
fbld
lcall
jg
jg
in
push
jle
roll
jns
lret
mov
and
imul
mov
rcrb
ret
test
mov
loop
xchg
cmp
mov
pop
mov
mov
stos
in
pop
and
shlb
loope
fnsave
dec
lock
inc
aaa
pushf
jne
repnz
xchg
sbb
xchg
or
das
lds
pop
movsl
pop
xchg
fs
adc
das
jno
push
mov
scas
adc
pop
jecxz
loope
lea
push
out
and
add
repz
and
push
sub
scas
push
test
sbb
mov
cltd
je
rolb
xchg
push
or
dec
xor
test
xor
out
jp
jns
xor
shl
sbb
imul
in
or
pop
cmp
pushl
sar
rolb
mov
or
inc
js
inc
movsl
mov
jp
add
imull
mov
js
sbb
mov
sbb
lods
outsb
inc
cmp
cmp
inc
lods
sub
sbb
popf
loope
movsl
movsb
jl
jns
ret
xchg
dec
scas
sbb
mov
adc
loopne
or
and
push
pop
cmp
adc
add
arpl
aam
test
cmp
inc
out
fwait
mov
xor
push
int
cli
add
popf
icebp
fs
call
movsl
imul
mov
jp
sarl
test
insb
and
aaa
mov
nop
xchg
sbb
enter
xchg
sbb
addr16
or
outsl
pop
repz
adc
and
cmpsl
pop
mov
jge
pusha
cmpsl
out
mov
sbb
xor
cmp
ret
and
push
test
pop
dec
pop
insl
xchg
into
in
fdecstp
pop
pop
jle
fimull
pop
arpl
lea
xor
popa
stos
xlat
cmp
mov
mov
cltd
mov
cltd
fwait
jae
cmp
ret
testb
xor
sbb
mov
in
sti
mov
jecxz
les
push
popf
mov
jne
jnp,pt
les
inc
jae
movsb
mov
arpl
hlt
or
shll
dec
cli
ret
xor
lock
mov
add
mov
or
cld
fst
pop
mov
or
pop
push
leave
cmpsl
aas
lea
xchg
push
mov
cld
loop
push
xor
fadds
pop
xor
mov
daa
insb
adc
sahf
cli
cmp
adc
jne
add
aam
lret
pop
fimull
sti
inc
xlat
js
mov
push
jbe
push
dec
je
rclb
mov
in
fstpt
fistps
jp
pop
push
push
ficompl
sbb
fdivp
and
jnp
xchg
pop
adc
or
or
cmp
inc
inc
rcll
mov
std
shlb
cltd
cmc
in
sub
and
adc
push
mov
mov
dec
pop
jo
data16
sahf
mov
pop
popa
mov
ret
les
ret
sbb
cwtl
add
push
sub
roll
sbb
adc
lock
pop
rcr
and
sar
inc
jo
mov
mov
dec
fistl
in
sbb
das
pop
imul
test
push
mov
rorb
btrl
add
lahf
je
es
sub
ds
push
arpl
js
or
cmp
mov
pop
test
insl
push
jecxz
or
jecxz
cmpb
rcl
mov
jg
fs
test
jo
or
add
push
mov
fwait
movsl
lcall
adc
loope
daa
sahf
iret
jns
neg
loopne
cmc
inc
pop
das
push
lret
pushf
sbbl
cmp
sbb
lahf
add
ja
push
add
daa
arpl
inc
or
mov
adc
fbstp
add
jno
cli
cmc
nop
dec
cmp
bound
scas
mov
pop
adc
mov
push
sub
shll
and
cmp
dec
out
outsb
pop
bound
mov
cmp
orl
jbe
push
in
cmc
jecxz
aam
mov
data16
add
xor
jo
adc
ret
loope
es
or
inc
add
mov
lock
test
fxch
or
sub
adc
pop
loope
inc
sub
pop
sbb
push
fstpl
mov
mov
sahf
scas
fbld
inc
in
jmp
inc
push
xor
cltd
xor
mov
ret
popf
cli
icebp
iret
xor
enter
mov
xlat
and
pop
outsl
and
jecxz
pusha
mov
enter
js
mov
jbe
adc
fwait
in
ret
dec
rcll
loopne
shlb
nop
xlat
mov
add
xchg
test
xor
ret
sbb
xor
xlat
pop
and
inc
enter
dec
fildll
lahf
or
push
lea
fwait
xor
loop
aaa
jne
add
sub
xor
mov
imul
inc
sbb
hlt
lods
xor
lahf
ss
sub
arpl
dec
fisttpll
aas
jne
jge
fdivr
adc
into
cmp
mov
cmp
out
ret
cmc
les
jmp
cmp
cmp
shlb
ret
cmp
iret
call
mov
lret
fnstenv
mov
jmp
dec
leave
jne
push
aam
xchg
fcompl
loope
mov
dec
aad
or
cs
and
in
orl
xor
shlb
mov
outsl
movsb
pop
stos
lods
xlat
jmp
adc
popl
dec
jnp
fdivl
xchg
mov
cwtl
std
or
pop
imul
inc
ja
mov
mov
loopne
pop
mov
call
stos
cmp
xchg
repnz
xchg
inc
in
mov
xor
lds
push
xorl
test
sbb
and
inc
push
pop
loopne
mov
ret
mov
rclb
mov
nop
cmp
pusha
inc
mov
jp
in
or
aam
leave
add
stc
or
sub
icebp
or
add
dec
and
in
jnp
xor
pushl
or
rcll
pop
out
jne
and
inc
push
addr16
outsb
pushf
cmp
fwait
adc
cmp
dec
jnp
mov
das
mov
lcall
cmp
push
ret
mov
jg
xchg
pop
pop
xchg
aad
inc
sbb
and
lds
or
rorb
std
ds
adc
frstpm(287
xchg
pop
aam
sbb
sar
imul
hlt
shufps
jo
aam
cld
sub
xchg
dec
aad
push
imul
insl
call
jae
and
cmpsl
jno
inc
pop
cmp
inc
fwait
pop
and
icebp
out
pop
sbb
dec
sub
jle
cmp
cmp
movsl
pop
cmp
dec
mov
inc
mov
fwait
pop
es
loopne
and
pop
stos
pop
in
insb
pop
mov
xchg
fwait
mov
call
dec
xchg
xorl
add
and
pop
lods
jno
hlt
cmp
adc
jnp
adc
jl
push
repz
sbb
imul
lock
ret
fdivl
and
xchg
std
push
sbb
stc
xlat
push
jbe
and
lods
jl
mov
xor
xchg
or
les
dec
xor
popf
jl
or
or
std
dec
aaa
sahf
mov
test
popa
add
or
movsl
mov
stc
mov
or
fisubl
jecxz
addr16
idiv
and
es
je
adc
cmp
mov
popa
jg
iret
lods
test
rol
imul
push
icebp
pusha
dec
je
test
es
jge
jmp
scas
sub
pop
pinsrw
and
mov
push
dec
or
pop
lods
sbb
mov
mov
xchg
lods
mov
sbb
push
loope
call
mov
add
rclb
lcall
jmp
mov
inc
stc
mov
ljmp
mov
and
or
inc
or
cmp
mov
pop
pop
hlt
jno
and
faddl
and
cmp
pop
mov
sbb
sbb
out
dec
clc
inc
xchg
push
imul
mov
hlt
mov
mov
adc
and
xor
mov
rol
or
jbe
mov
and
outsb
loope
rclb
aad
xchg
sbb
stos
and
push
fs
iret
jp
lock
sub
sub
add
je
fnstsw
xchg
adc
lods
sub
and
add
mov
mov
test
xchg
cmp
adc
mov
call
xchg
sbb
mov
adc
mov
jno
mov
pushf
pop
cmp
sbb
jp
movsb
mov
xlat
xchg
add
femms
mov
push
movsb
or
xchg
in
push
pop
or
push
mov
lock
loope
adc
push
add
clc
and
lock
loope
pusha
ljmp
cmp
dec
sbb
inc
aaa
jg
mov
out
or
adc
xlat
jg
stos
push
int
add
dec
inc
dec
sbbb
or
sarb
add
mov
add
and
pop
aaa
cld
test
sbb
jecxz
aaa
cmp
jp
and
mov
xlat
rol
push
xor
cmp
cmp
imul
pusha
add
or
hlt
pushf
int3
jo
mov
ja
mov
adc
jb
enter
int
lret
dec
movntps
imul
lods
adc
xchg
dec
sub
scas
cmp
mov
sbb
jge
xchg
mov
lds
push
cmpsb
xor
sub
pop
inc
mov
addb
lods
pop
popa
inc
push
in
scas
add
int
jno
scas
push
sbb
xor
jmp
and
sbb
xchg
clc
movsl
jbe
jge
test
std
or
lahf
xchg
sbb
jns
lock
dec
stos
rcrl
nop
push
jnp
cmp
mov
std
les
push
rol
inc
and
addl
ja
push
hlt
xchg
fnstcw
loope
nop
push
icebp
fwait
in
pop
pop
rclb
jbe
stos
dec
mov
xchg
sbb
pop
adc
dec
dec
stos
call
jnp
jge
push
push
jb
mov
popa
xchg
pop
xor
out
adc
cmp
roll
mov
xchg
cmp
bound
pop
call
adc
inc
mov
xor
push
inc
mov
popf
rorb
inc
pop
dec
jne
mov
xchg
add
push
movsl
pop
or
jbe
stos
test
in
fisubs
hlt
leave
leave
shl
inc
jmp
fdivs
jge
loopne
fiadds
cld
sbb
or
icebp
xchg
sbbb
pop
pop
in
or
andl
arpl
adc
mov
jle
std
push
mov
les
push
xor
sub
mov
lret
inc
cmp
stos
pop
sub
push
pop
cli
cmpb
inc
pop
add
sbb
arpl
xlat
cwtl
stc
xor
ret
lock
cmpsb
mov
push
and
xor
in
add
cmp
mov
sbb
mov
push
sub
je
outsb
jne
adc
addr16
loopne
mov
int3
and
cwtl
ljmp
test
sub
insl
sub
push
outsl
mov
cmp
sti
rcrb
scas
adc
dec
sbb
and
mov
pop
int
jp
pop
icebp
or
or
sub
lods
lret
or
arpl
adc
call
or
inc
orl
rcll
jo
addl
lcall
mov
bound
xchg
adc
xchg
mov
les
aaa
test
pop
push
dec
fsubs
pop
xor
aam
mov
sub
mov
int3
dec
inc
pop
jno
std
pop
cltd
jp
loope,pt
mov
xchg
push
sbb
adc
xchg
aad
sbb
adc
sbb
cwtl
punpckldq
insl
leave
pop
ljmp
test
pop
incb
cmpsb
pushl
sbb
fwait
lods
imul
enter
sub
sbb
fistps
add
mov
enter
pop
dec
add
dec
dec
mov
fsts
popa
mov
movsl
stos
push
sub
mov
fmull
mov
jno
jb
push
and
bound
lods
js
and
pop
jnp
adc
ret
xchg
jae
ds
int3
int
mov
pop
stc
popa
and
insb
xor
gs
or
das
push
rclb
push
mov
xchg
or
movsb
jnp
sbb
lcall
pop
pop
add
mov
or
lea
mov
pop
arpl
pop
cli
add
inc
or
mov
mov
stos
sbb
mov
sbb
out
aad
adc
pop
xor
jp
test
mov
push
jge
pop
pop
pop
cltd
push
and
dec
sbb
nop
in
jns
jns
inc
xorl
cltd
dec
imul
pop
inc
sub
xor
addl
call
cmpsl
es
imul
in
push
shll
push
test
or
or
les
repz
inc
pop
push
sbb
hlt
scas
hlt
mov
pop
or
jle
mov
scas
or
sbb
sbb
test
sub
xor
jae
popa
add
pop
push
shll
adc
mov
jnp
cmp
roll
shrb
call
mov
jle
pop
test
xchg
inc
pop
lods
cmp
in
cmp
sub
adc
mov
add
add
or
dec
fwait
xorl
dec
scas
out
jns
ret
push
imul
inc
mov
cmpsl
sarb
shll
add
shll
mov
xchg
mov
or
out
aad
int
mov
insb
les
movsl
popa
mov
jg
pop
xchg
adc
cld
pop
lret
loopne
mov
es
and
ficompl
outsl
and
fsubr
in
mov
xor
add
in
rcrl
cmp
pslld
ror
icebp
or
pushf
scas
leave
test
adc
mov
push
subps
push
or
roll
loop
inc
adcb
test
les
jns
daa
call
cmc
rcrl
movsb
test
data16
and
movsl
fildl
pusha
xchg
add
inc
mov
xor
cmpsb
mov
dec
int3
push
or
add
mov
or
pusha
in
adc
ja
or
sub
cmp
loop
add
mov
lods
jbe
loopne
jmp
pop
std
inc
push
jmp
or
mov
pop
sbb
and
xor
sbb
adcl
sub
std
adc
push
jo
dec
loopne
push
xor
mov
fsubrl
mov
fcoms
and
mov
push
push
and
mov
test
flds
out
push
cltd
or
popf
jno
psadbw
sahf
nop
dec
add
pop
sbb
orl
out
gs
add
js
mov
sub
mov
aaa
repz
adc
xchg
test
fcoms
adc
and
movsl
and
lea
xor
imul
lcall
lods
movsl
shr
testb
sub
sbb
jo
dec
inc
dec
cmp
mov
and
pop
je
inc
aaa
jg
mov
cmp
push
and
insb
or
stos
sbb
fisubl
cli
inc
cmp
sti
pusha
addb
and
add
inc
xchg
pop
leave
mov
call
jecxz
adc
daa
jl
mov
jbe
pop
fsubrs
dec
pop
xlat
je
aas
mov
je
and
cmp
flds
mov
ja
jp
lods
divps
cmpsb
inc
add
aas
mov
dec
xchg
cmp
dec
push
jo
xchg
sbb
dec
fmull
es
pop
loope
imul
sarb
push
jle
jg
adc
sbb
mov
or
pop
fdivl
cmc
out
dec
jecxz
inc
xchg
sub
enter
sbbb
xor
mov
js
lock
repnz
or
popa
sub
pop
add
jmp
xor
nop
and
sbb
add
fisttpll
cmp
sbbl
addl
loopne
sbb
stos
or
adc
mov
push
in
inc
test
add
mov
inc
add
adc
aas
jo
dec
jg,pn
pusha
pop
mov
pop
test
jmp
jle
call
mov
imul
repnz
loop
add
or
jno
xchg
push
xchg
sbb
inc
jnp
adc
cmp
cmpsl
inc
ds
push
leave
adc
mov
or
add
into
pop
add
mov
out
insl
inc
in
and
pop
lcall
sbb
add
repnz
ljmp
lret
cs
sbb
mov
mov
dec
daa
shll
dec
dec
and
adcb
sbb
dec
xor
jle
push
or
push
inc
cltd
mov
inc
pusha
aam
push
bound
scas
push
or
mov
dec
xor
xchg
mov
sub
push
push
dec
cmp
xchg
imull
fcoms
pushl
jmp
scas
dec
lds
int3
inc
cmovno
testl
outsb
mov
jl
sbb
fwait
adc
jg
clc
rcl
clc
das
nop
stos
cmp
mov
xor
shlb
cmp
lcall
imul
and
cmp
mov
dec
add
adc
lock
xchg
push
jo
jge
jbe
andl
cmp
xor
lods
sub
fildll
lcall
add
xchg
and
scas
xor
scas
xchg
imul
pop
arpl
inc
xor
jg
sbb
cmp
out
push
fwait
push
mov
bound
inc
xlat
mov
push
sub
je
dec
jecxz
orl
scas
arpl
mov
xor
sbb
mov
iret
push
cmp
shlb
into
and
jp
or
add
fstps
cs
popf
mov
pop
inc
aas
xchg
xor
xor
cmc
jmp
imul
les
iret
or
xchg
pop
push
jns
out
pop
mov
push
fs
popa
inc
jae
popa
mov
lret
loopne
ja
test
adc
sub
ffreep
push
sbb
push
arpl
xor
inc
mov
outsl
add
shll
lea
jle
stos
jmp
pop
pop
popa
arpl
mov
cmc
xchg
dec
pop
jno
mov
dec
jmp
add
daa
into
icebp
test
clc
xlat
movsl
fcomp
mov
in
gs
ror
sub
jmp
or
popf
ss
imulb
push
fldl2t
xchg
int3
jae
test
data16
xchg
pop
lock
xor
popa
or
out
andl
nop
cmp
xor
fwait
push
sbb
xchg
icebp
and
push
mov
dec
pop
int
pop
jp
aam
outsl
sti
cltd
cmp
testl
stos
aam
scas
inc
lahf
ret
jmp
int
sub
sti
aaa
lret
out
push
fstl
test
xlat
sbb
mov
push
dec
sbb
scas
aad
je
test
jae
das
and
mov
mov
or
aaa
xchg
insb
pop
dec
lods
inc
int3
btc
pop
je
pop
fistps
inc
and
inc
xchg
sbbl
mov
sahf
inc
mov
or
sarl
rorb
mov
fcmovne
clc
jecxz
jp
sub
idivl
cltd
scas
clc
add
arpl
rclb
repnz
clc
ja
pushf
jp
imul
push
jp
movsl
inc
add
out
subl
inc
inc
lcall
mov
out
dec
sahf
sbb
add
aad
lcall
jge
js,pn
and
test
sbb
sub
shlb
dec
sub
push
ret
cltd
sub
out
les
jecxz
or
pop
xchg
ficomps
test
push
jns
push
imul
clc
cmp
push
sub
orl
loop
mov
mov
nop
inc
and
movsl
icebp
lds
push
add
ret
push
jns
shll
test
sub
arpl
xor
mov
cmpsb
inc
fmuls
push
cltd
pop
jb
je
inc
jmp
xchg
ret
jmp
mov
je
cmp
jmp
mov
test
adc
movsl
imulb
nopl
pushf
inc
imul
sbb
push
cmp
jnp
stos
cmpsl
mov
mov
stos
mov
jecxz
jge
sub
loop
push
lcall
repz
pop
imul
fs
jge
aam
sub
jns
or
mov
ret
out
loopne
jnp
inc
mov
cmpsb
inc
loop
xor
jle
in
arpl
mov
add
aam
leave
orb
jle
mov
repnz
mov
rcr
cmp
aas
adc
xchg
push
in
in
in
and
data16
dec
mov
jne
push
push
jo
push
add
inc
push
bts
rcrl
xorl
imul
cmpsl
adcl
and
push
and
xor
or
push
xchg
lods
and
test
mov
aam
pop
sbb
xorb
test
adc
sbb
jge
out
pop
lret
stos
mov
mov
xor
sbb
repnz
mov
ret
rolb
and
xchg
inc
or
jbe
sub
adcl
pop
idivb
jg
and
repnz
js
es
fcomi
lods
shrl
out
cmpsb
push
dec
pop
lahf
add
call
ljmp
sub
push
pop
add
xlat
scas
adc
inc
adc
xor
aad
and
sbb
mov
out
fdivs
loope
sbbl
pop
or
push
loope
in
pop
js
or
or
xor
clc
movsl
aas
inc
sbb
mov
test
repnz
pop
mov
add
sbb
fiaddl
push
inc
arpl
out
movsw
xchg
rcrl
lock
push
mov
jmp
fs
mov
adc
jg
jo
cmpsl
jle
aad
sub
or
jbe
rorl
xlat
inc
cmp
pop
mov
out
jb
push
shrb
dec
xchg
xor
pop
add
sbb
xchg
js
je
loopne
push
dec
jns
sub
dec
mov
cmp
xchg
mov
stos
jnp
aad
lcall
jne
jecxz
cmpsb
or
lahf
xchg
mov
and
js
mov
sarl
dec
add
leave
push
mov
lods
in
adc
jle
daa
add
mov
pop
mov
je
lret
sub
dec
xchg
sub
mov
cwtl
sbb
and
mov
mov
inc
sahf
outsb
cmp
or
test
popa
lret
aad
push
shr
add
mov
dec
mov
rolb
addr16
mov
cmp
lret
aas
pop
mov
test
push
sub
mov
and
add
and
aad
sub
jp
loope
sub
or
push
nop
pop
cmpsb
lock
rol
cmp
shll
sub
push
fmuls
mov
sbbb
ret
xor
cmpsb
mov
ss
adcl
addb
pop
mov
or
push
sbb
jl
cmpsb
pusha
xor
cmp
scas
jbe
cltd
mov
icebp
push
sbb
and
imul
testl
lret
jle
sti
xchg
jno
addb
jle
pop
add
xor
jmp
dec
arpl
sub
jae
nop
sbb
imul
inc
test
add
push
fisttpll
fidivl
mov
dec
mov
xor
imul
xchg
inc
aad
mov
outsl
in
iret
lods
orl
imul
mov
mov
or
xchg
jecxz
push
dec
outsl
jmp
gs
or
scas
xlat
add
xor
mov
in
sbb
in
dec
add
dec
data16
xchg
popf
scas
lahf
sub
test
mov
les
and
xchg
xchg
test
mov
adc
mov
push
sbb
sarl
mov
int3
repz
sub
jb
pop
lock
adc
icebp
pushf
ret
nop
xchg
adc
xchg
inc
lock
je
imul
jecxz
test
nop
clc
mov
mov
or
add
ja
xchg
adc
ret
popa
dec
bound
out
mov
jnp
xor
and
cmpsl
stos
dec
inc
cmpsl
inc
les
mov
and
push
xor
adc
xor
jp
and
push
ds
sbb
loope
jmp
mov
jo
pop
inc
xchg
xchg
mov
mov
dec
push
nop
outsb
or
xchg
loope
pop
mov
adc
rorl
subl
nop
mov
popa
daa
sub
in
inc
das
mov
dec
punpckhbw
push
loop
sub
inc
inc
mov
notb
dec
adc
mov
inc
ret
add
and
adc
pop
mov
jecxz
mov
jo
mov
mov
outsb
popa
vpunpckhbw
and
or
add
repz
pop
sbb
mov
mov
xchg
push
test
sub
mov
outsl
imul
adc
clc
cmp
xchg
rcr
jecxz
ss
mov
lcall
fdivrl
imul
and
xchg
add
or
imul
popf
out
data16
or
or
rolb
loope
mov
clc
popa
sub
jl
hlt
bound
fcoms
sbb
mov
jl
xlat
test
aam
pop
int3
dec
aad
jmp
adc
clc
add
push
sub
or
das
insl
enter
clc
js
lcall
jbe
outsl
xchg
pop
mov
sub
and
sub
and
ss
sbb
or
xchg
jge,pt
mov
add
xchg
mov
xor
clc
jp
movsb
sbb
push
data16
bound
pop
enter
stos
mov
mov
ljmp
fbstp
inc
dec
cltd
mov
jns
fimuls
or
movl
cmp
call
or
jo
mov
mov
mull
pop
lods
jnp
fmull
bound
dec
das
loop,pt
pop
ss
sbb
fimuls
dec
pop
rcll
addr16
outsl
pop
in
mov
aam
cltd
push
dec
xor
mov
int
fwait
icebp
pop
add
imul
pop
es
xchg
xor
jno
and
loope
jne
outsl
adc
cmp
icebp
mov
imul
xor
push
mov
lds
mov
sti
xor
outsl
mov
mov
pop
shll
stos
es
arpl
push
jle
pushf
jb
jns
mov
jmp
jecxz
mov
cmp
cli
aas
pop
scas
push
out
daa
cmp
cmp
and
xchg
mov
cmc
dec
cmp
dec
ljmp
xor
push
add
jg
push
in
mov
cmp
test
add
mov
and
dec
cmpsl
mov
and
inc
js
ret
mov
lock
cmp
das
dec
lds
cmp
cmp
mov
out
fst
pop
add
rorb
ret
fwait
cmp
sbb
mov
xor
pop
std
aas
jno
shlb
or
daa
sbb
dec
dec
fadds
jmp
sbb
hlt
adc
out
test
sbb
popa
push
jne
or
mov
mulb
sub
add
xchg
ret
ret
loop
insb
xor
dec
mov
add
inc
aas
in
cmpsl
add
cmp
addr16
pop
test
stc
addr16
adc
adc
push
cmp
sub
xor
and
mov
fstpt
cmp
jle
sbb
mov
popl
mov
out
jp
push
sbb
add
hlt
ret
mov
cwtl
cli
xchg
push
cmpsl
adc
out
movsb
stos
lret
dec
out
js
xchg
les
shl
cwtl
scas
movsb
popa
inc
jns
pop
rol
leave
sbb
jb
mov
loop
popa
jecxz
mov
cmp
lds
cmp
loope
int3
mov
enter
mov
jge
jp
nop
xchg
jp
jb
cmp
jle
jg
scas
and
add
cmp
ret
test
jle
call
mov
xor
inc
sysret
xchg
pop
sub
cli
mov
jo
test
adc
inc
sbbl
fadd
push
neg
adc
imul
or
cmp
ret
adc
and
mov
cmp
xor
pop
jp
add
push
pop
mulb
paddw
subl
lds
sbb
lret
push
movsb
jecxz
shrb
frstor
mov
int3
in
mov
inc
ss
adc
fdivl
ljmp
addb
testl
movsb
ss
xchg
clc
cmp
repz
jl
inc
jne
mov
test
sbb
mov
fnstsw
xor
or
insl
add
mov
or
pop
pop
dec
dec
add
stos
pop
push
jae
mov
subb
xchg
mov
add
mov
xchg
cwtl
icebp
enter
cmp
add
push
clc
or
and
sbb
cmp
xchg
inc
add
cmp
lea
ret
scas
push
das
pop
sbb
push
pop
pop
movl
iret
insl
or
mov
mov
or
add
sbb
pop
lret
dec
cli
repnz
cs
xor
scas
add
and
jl
xor
ret
inc
inc
jmp
xchg
ja
test
mov
scas
adcb
shll
std
xchg
xchg
xchg
pusha
jbe
cmp
push
insb
sub
inc
push
hlt
call
pop
mov
rcl
or
jp
jl
mov
mov
adc
shlb
test
inc
pop
int3
xor
mov
aaa
movsb
fildll
and
cmp
insl
push
ret
push
mov
pop
lahf
rcll
mulb
stc
adcl
fwait
outsb
pusha
adc
or
test
popf
mov
dec
push
inc
rol
or
sbb
sbbl
outsl
cwtl
push
js
add
inc
lret
inc
mov
ret
and
loope
mov
inc
stos
or
sub
xchg
xor
test
xchg
pop
scas
pop
add
hlt
out
mov
push
add
pop
mov
imul
mov
xor
adc
dec
pop
cmc
inc
rcrl
ds
cltd
jo
inc
jle
mov
adc
insl
xchg
pop
popf
pop
ret
cmpsl
pop
daa
int3
add
nop
adc
sti
inc
into
mov
outsb
xchg
or
mov
fstps
jae
mov
jle,pt
rcl
lock
mov
stos
or
sbb
outsl
mov
fisttpll
jle
rolb
pop
test
push
fnstenv
aaa
adc
sbb
lss
shlb
test
cmp
ljmp
pop
cmp
loop
xor
nop
sahf
loope
aad
inc
test
in
jmp
out
pop
mov
cmp
cmp
call
popa
and
loop
bound
jmp
sar
push
and
cmp
cmpsb
inc
mov
push
adc
push
stc
pop
mov
cmpsb
mov
mov
pop
sub
test
push
pushf
push
int3
fidivrl
and
stc
fdiv
cld
adc
add
test
in
mov
cmp
pop
pop
mov
test
cmpsl
xor
ret
daa
jge
gs
ljmp
mov
dec
jecxz
jns
pop
jge
das
sysexit
xlat
push
jl
adc
mov
cli
dec
int3
cmp
lock
popf
inc
mov
mov
cmp
sbb
xchg
xor
sbbb
adc
lock
xchg
pop
mov
inc
xor
test
jb
loopne
inc
or
cmovle
test
cmp
mov
sbb
lods
movsb
mov
fldl
cmp
adc
jns
cwtl
movsb
push
xor
jb
inc
jns
dec
cwtl
imul
das
and
mov
inc
inc
cmp
sbb
dec
loope
insl
aad
or
je
jmp
dec
je
enter
movsl
mov
loope
and
rcrl
adc
push
jne
ja
jmp
cmp
sbb
push
ret
mov
addb
pusha
stc
ja
adc
and
je
fistl
inc
repnz
mov
scas
out
das
scas
bound
icebp
add
and
outsb
push
xor
fcoms
mov
loop
ja
mov
aam
jl
insl
lods
and
mov
push
inc
sub
xorl
push
int
pop
stos
loope
out
movsl
xchg
dec
jb
fidivl
gs
mov
xor
sarl
inc
jle
mov
loope
rolb
jmp
jmp
cmp
cmc
push
orl
sbb
and
push
lcall
adc
and
cwtl
and
push
rclb
jecxz
mov
push
fisttpl
ds
inc
fstpl
popa
xor
mov
cmpsl
or
pusha
dec
fstps
xor
clc
xor
adc
incb
sbb
shr
dec
add
inc
add
addr16
loopne
pop
jmp
data16
adc
fildll
push
test
negb
jno
mov
fdivrs
mov
testl
dec
shl
pop
add
xor
mov
lock
and
jp
lret
inc
pop
lods
mov
lret
pop
cwtl
sub
in
and
fiadds
mov
pop
loope
fisubs
sub
mov
push
ret
sbb
inc
loopne
es
or
movsb
push
mov
push
mov
jge
mov
mov
xchg
imul
push
das
icebp
lret
stc
jnp
popa
push
jmp
loop
icebp
sub
into
ja
stos
mov
inc
inc
mov
out
cmpsl
jecxz
int3
sub
push
jmp
mov
mov
mov
push
pop
cs
dec
ret
push
mov
lcall
aad
inc
ret
or
and
mov
lods
jo
add
push
mov
pop
push
and
dec
hlt
xchg
es
sub
imul
adc
mov
xor
pop
fimull
leave
int3
sbb
popa
mov
add
sub
jo
push
sub
stos
sub
dec
inc
stc
pop
inc
btrl
and
jnp
xchg
leave
mov
jle
rcrl
or
popf
movsb
push
sbb
rol
addr16
add
clc
movl
or
mov
daa
pop
and
sub
push
cltd
jne
clc
je
cmc
iret
pop
dec
insl
inc
push
fisubrl
pop
sbb
inc
lret
lahf
in
shr
vmovups
jp
stos
inc
hlt
xchg
mov
sarl
cmpsl
es
lods
fs
push
addl
push
rorl
add
clc
rolb
mov
outsb
mov
inc
addl
lret
mov
dec
lea
rolb
push
dec
hlt
movsl
xor
shlb
pop
psubw
cld
jge
jp
and
bound
jns
inc
dec
dec
sub
sti
sbb
out
imull
je
addb
xchg
cmp
pop
jae
or
fistpll
sub
scas
lock
hlt
shr
insb
lahf
pop
adc
mov
mov
mov
movsb
jo
push
lods
ljmp
sbb
xchg
and
getsec
loopne
cli
mov
and
and
add
sbb
sbb
addl
or
jne
orb
in
pop
lods
js
pop
fistpl
cwtl
jp
pop
cwtl
pop
add
dec
sub
xchg
pushf
push
mov
jo
sub
mov
pop
add
jo
dec
fadd
add
jl
insb
ret
pop
push
inc
jl
push
or
xchg
mov
sub
es
repz
dec
arpl
mov
sbb
push
mov
pop
pop
mov
std
mov
fisubrl
jp
pop
mov
adc
test
and
daa
mov
xor
pop
push
inc
jl
jnp
testb
pop
test
ret
sahf
inc
lods
sbb
xor
mov
popa
xchg
mov
sti
xchg
lds
repnz
push
jecxz
in
lock
das
push
dec
lods
dec
sub
push
ficoml
popa
lcall
add
pusha
xor
andb
cmp
sub
pusha
mov
je
adc
cmp
addr16
cmp
stos
pop
test
imul
adc
sar
popf
pop
nop
xchg
iret
xor
cmp
out
mov
popa
aas
mov
jns
cmp
stos
div
les
add
pop
pop
push
mov
add
shrb
sahf
aad
loop
mov
push
jmp
or
pcmpeqw
or
jecxz
xchg
push
cmc
inc
test
add
mov
jecxz
or
mov
mov
jne
or
mov
dec
mov
pop
lods
add
cmpsb
pop
cli
pop
pop
fwait
or
scas
jnp
xchg
fistl
cltd
es
add
mov
mov
add
jecxz
jno
cwtl
imul
leave
mov
add
mov
pusha
cmpsl
sbb
add
pop
and
insb
mov
inc
popa
aam
xlat
mov
lret
daa
xlat
pop
icebp
lret
push
jb
xor
ret
loopne
or
push
inc
jecxz
xor
ret
pop
insl
add
rclb
xchg
clc
pop
ret
pop
js
mov
cmc
inc
jl
sbb
int
mov
xchg
inc
cvtps2pd
testl
jo
xor
fmull
and
push
adc
js
jecxz
inc
in
inc
cs
or
xchg
jmp
mov
xor
lock
add
clc
rolb
in
out
les
xchg
daa
rolb
fwait
mov
int
mov
loope
jbe
stos
mov
test
lahf
dec
adc
push
xchg
adc
pop
pop
inc
sbb
jae
mov
jbe
insl
pushf
add
fistl
rclb
pop
aas
fidivrl
fdivl
xchg
adc
sbbl
pop
cld
aad
sbb
stc
pushf
inc
mov
and
or
test
lock
sub
fcoms
fwait
lret
jne
dec
add
add
es
adc
ja
notb
addr16
pop
xorl
sbb
dec
dec
orl
loopne
mov
out
and
stos
xchg
std
jecxz
mov
leave
sbb
cmpsl
mov
pusha
nop
push
xor
fmuls
loope
cmp
dec
mov
inc
cmp
push
mov
jge
inc
inc
stos
pop
clc
int
sub
pushl
flds
dec
pop
mov
xchg
mov
sub
lock
inc
dec
or
jg
cmp
xchg
sbb
bound
insb
pusha
pop
and
dec
xlat
orl
dec
dec
sub
jle
push
arpl
pop
mov
ja
push
loopne
mov
sub
imul
dec
jo
flds
jl
inc
jmp
js
sub
stc
out
push
push
out
push
imul
aas
adcl
pusha
sub
and
mov
sbb
cmc
cmp
add
mov
movsb
sbb
add
addl
pop
je
jns
xor
in
add
pop
xchg
popa
repz
imul
fld
std
lahf
cmp
xor
in
add
cmp
repnz
mov
fstl
cwtl
aaa
inc
test
pop
or
dec
jo
inc
and
popa
mov
cmc
xchg
mov
and
push
imul
dec
icebp
mov
mov
leave
xlat
insb
rorb
cmp
jb
sbb
icebp
add
jge
sub
pusha
movsb
das
shr
add
push
cmc
test
sub
mov
shrb
shrl
test
xchg
test
push
mov
mov
mov
inc
push
ret
push
push
outsl
jecxz
roll
mov
xlat
sub
andl
pop
dec
inc
fs
mov
push
xor
and
cmp
movsb
mov
pop
pop
pop
loopne
sbb
dec
jecxz
in
mov
clc
shll
xorb
nop
fwait
test
sbb
clc
fsub
pop
cmc
push
mov
sbb
lock
lahf
testb
mov
lods
jns
mov
inc
mov
cli
add
sahf
inc
adc
inc
xlat
add
mov
jb
hlt
shll
fld
sbb
push
mov
scas
xchg
outsl
jbe
iret
cli
psubq
mov
es
mov
aad
fs
into
xor
pop
hlt
out
lahf
xchg
sub
pop
adc
les
mov
aaa
outsl
bound
cwtl
dec
cmp
das
xor
imul
xchg
xchg
mull
enter
loop
loopne
and
adc
and
jae
cltd
push
enter
pop
pop
gs
loopne
mov
fisubrl
cmpsl
test
addb
push
out
cwtl
mov
dec
test
cli
push
addb
mov
mov
add
int
aad
sbbb
cmp
pop
add
rclb
jo
pop
rcrl
test
imul
jae
xor
test
cli
pop
xchg
mov
jmp
fs
xchg
int
mov
orb
cvtpi2ps
mov
aam
mov
cmpsb
sub
addr16
addl
dec
inc
push
cmpsl
push
out
imul
cs
sbb
out
lea
mov
test
pusha
dec
pushf
inc
add
add
and
movsb
ja
jge
lret
scas
add
rcl
mov
inc
adc
xchg
sub
jno
inc
pop
loope
addr16
xor
pmulhuw
lret
aas
pop
popl
cmpsl
aam
inc
sub
inc
in
xchg
xchg
jp
lret
mov
std
add
sbb
and
das
xor
std
lahf
sub
sbb
inc
out
out
and
mov
push
lret
int
mov
add
stc
add
call
xor
and
push
inc
cmp
sbb
jmp
xchg
insb
dec
jge
pop
mov
mov
ret
jmp
pop
mov
and
push
push
imul
lock
inc
cwtl
and
sbb
push
push
ljmp
adc
movsb
mov
jno
jl
int
or
in
add
or
roll
test
test
addl
cld
notb
cld
out
ss
push
cld
fidivrl
or
add
lcall
inc
jg
and
addb
scas
cmpsl
pusha
xchg
nop
aaa
dec
pop
jne
and
fnstenv
sbb
mov
loope
mov
ret
in
pop
fildll
xlat
or
addr16
sub
xchg
xor
jno
ljmp
out
jne
cmpsl
das
adc
mov
ds
dec
or
mov
push
stc
gs
dec
test
int3
test
mov
cld
push
iret
push
test
jae
pop
repnz
stos
js
xor
push
icebp
stos
test
repnz
pop
push
enter
rolb
lods
push
and
adc
or
and
cltd
lds
es
pop
loope
sbb
jle
push
dec
imul
mov
pusha
inc
imul
cmpsl
jecxz
push
sbbb
ds
in
movb
repz
xor
sbb
add
cmp
movsl
fstps
aaa
jge
popa
mov
cmc
mov
xlat
in
cmp
add
call
add
inc
popf
sbb
adc
das
cld
lds
ret
adc
pop
jl
xor
daa
scas
inc
pop
mov
push
mov
mov
aaa
sbb
push
pop
inc
loop
xchg
es
jae
lods
mov
imul
mov
push
outsb
jp
mov
or
pop
xchg
or
push
mov
mov
add
in
test
pop
adc
aaa
jo
shlb
jne
dec
jnp
push
mov
dec
loop
cmp
das
xor
outsl
jne
shrl
push
inc
popf
je
add
inc
add
mov
adcl
xor
ret
daa
sbbl
inc
xchg
mov
inc
xor
in
arpl
mov
imul
add
mov
test
or
in
iret
outsl
mov
add
out
pushf
dec
mov
adc
add
mov
cmpb
mov
icebp
mov
add
pop
xor
mov
jge
pusha
adc
je
dec
test
push
push
cltd
and
and
mov
scas
add
adc
dec
xor
lds
aaa
adc
pushf
inc
fstpl
pop
jmp
push
inc
mov
adc
loopne
cmp
shrl
shll
push
movsb
push
mov
add
mov
repz
jge
push
mov
jns
out
and
sbb
adc
fs
sbb
sti
and
push
stc
cli
fwait
outsb
xchg
and
push
ja
pushf
rorb
push
shlb
int3
push
faddl
mov
or
and
jnp
loop
sub
push
xchg
inc
sbb
pop
mov
mov
in
test
test
pop
movsb
push
push
inc
mov
and
sub
ja,pt
sub
pop
cmp
roll
sbb
dec
adc
dec
inc
sbb
pop
mov
pop
aam
in
adcl
popa
xchg
dec
jnp
xchg
in
sbb
std
cs
dec
mov
xor
jo
or
dec
jmp
xadd
mov
lods
inc
arpl
sbb
pop
xchg
psrld
leave
lods
cmp
adc
adc
rclb
fwait
sahf
subl
push
cli
pop
xor
cmpsl
shr
es
add
cmpl
sbb
xor
dec
imul
sbb
in
push
inc
mov
bnd
xchg
cmp
faddl
jbe
xor
hlt
pslld
aas
xchg
cs
aad
nop
sub
loope
cs
aas
inc
gs
sub
mov
retw
test
mov
jne
inc
sti
mov
cltd
jo
fnsave
or
jp
pop
or
xor
cmp
subl
or
pop
inc
or
pop
rcr
jge
sub
adc
loop
lods
fwait
pop
push
jo
sub
call
sbb
daa
push
mov
push
pop
adc
insb
mov
pop
cmp
xchg
mov
mov
cmpsb
mov
aam
shl
js
mov
or
ljmp
into
scas
mov
loope
xor
pop
adc
js
pop
cmpsl
pop
js
ret
das
rol
clc
add
loop
dec
pop
rolb
popf
nop
ja
hlt
sbb
xor
ret
mov
push
xchg
ljmp
sub
dec
xchg
rolb
mov
fbstp
adc
cmc
or
test
int
sti
inc
xor
and
aaa
pop
mov
pop
jnp
jp
inc
or
sub
inc
xor
shlb
aaa
in
add
movsl
push
and
or
das
mov
jle
clc
sarl
ret
fistps
and
scas
fstl
pusha
popa
push
lret
mov
fisttpll
jae
cmp
insb
mov
inc
inc
fisttpll
dec
call
mov
in
sub
rorb
or
fnstenv
add
push
loopne
xchg
pop
cld
je
dec
insb
cli
mov
in
cld
addl
xor
jb
roll
scas
cwtl
mov
and
stc
or
cld
cmp
adc
ss
xchg
mov
lea
rclb
adc
mov
mov
add
mov
pop
and
sahf
mov
push
push
sbbb
mov
sub
shlb
in
mov
add
xor
mov
adc
mov
sbb
cld
test
mov
push
jl
scas
mov
push
mov
ljmp
in
testb
dec
and
mov
or
shll
sbb
test
or
xchg
movsb
in
xchg
icebp
sub
fnstsw
dec
es
adc
mov
mov
sub
outsb
loopne
mov
aam
sub
add
jb
stc
bound
and
mov
mov
cmp
pop
mov
fstpt
out
inc
nop
lahf
adcb
jmp
fdivl
ljmp
mov
mov
add
pop
loopne
mov
cmpsl
or
xchg
dec
in
dec
insl
inc
lea
cmp
call
mov
lods
jnp
sbbb
loope
pop
jo
inc
xchg
inc
cld
jmp
movl
inc
add
jl
xor
rsqrtps
add
adc
jo
test
imul
cli
pusha
and
inc
jb
clc
popa
dec
jne
jns
hlt
jle
fistpll
inc
scas
add
cld
jne
sbb
fistpl
cmc
ret
or
fists
arpl
push
dec
jo
adc
add
add
push
sbb
cld
or
lret
inc
or
adc
jge
das
jp
stos
sarb
sub
insb
call
inc
or
les
call
xorl
push
shlb
sub
mov
pop
pop
and
std
xchg
mov
push
adc
push
icebp
jne
rolb
loop
test
movsb
mov
mov
mov
in
jne,pn
xchg
cmpb
mov
pop
movsl
scas
dec
xor
test
ljmp
ja
jb
xchg
adc
outsl
icebp
mov
popl
lret
and
and
out
xor
push
loope
mov
fsubs
mov
jb
ja
imul
addr16
add
adc
clc
lret
adc
hlt
xor
cli
hlt
inc
jecxz
popa
testl
sub
stos
in
push
popa
cmp
push
movsl
lcall
add
add
xlat
add
sbb
les
xchg
loope
xchg
movsl
mov
xor
and
pop
test
push
movsb
sub
sub
xchg
rcrl
enter
xchg
mov
lds
xchg
sbb
adc
xor
inc
mov
clc
inc
xchg
pop
adc
lock
loop
lcall
dec
xor
xchg
icebp
sub
notl
sub
clc
stos
test
inc
fs
call
clc
in
lret
inc
in
imul
jo
push
mov
movb
cli
push
adc
shl
add
sub
test
adc
shrl
aas
adcl
mov
mov
shll
mov
mov
push
add
rorl
fisubs
xor
or
pop
xorl
dec
sub
dec
out
cmpsb
jbe
shlb
clc
jnp
push
xor
repnz
or
nop
jns
mov
inc
loopne
iret
inc
sub
pop
stos
mov
pop
ja
ret
xlat
xchg
daa
hlt
pop
inc
test
aad
hlt
sub
adc
add
sbb
mov
xchg
ficoms
or
dec
popaw
add
mov
and
sub
xchg
mov
dec
mov
notb
mov
inc
xor
aaa
pushl
sbb
dec
sbb
push
test
ds
pop
xchg
inc
adc
mov
ss
adc
or
clc
shrb
mov
fbstp
mov
xchg
and
lahf
cs
or
scas
fldcw
jb
gs
aad
stos
push
in
jns
enter
jo
adc
lds
jl
loop
push
sahf
mov
and
pop
jl
in
add
adc
jecxz
and
cmp
push
adc
orb
dec
adc
jbe
test
call
inc
dec
hlt
lahf
aam
and
mov
jge
sarb
cmovb
jne
sbb
mov
push
push
and
dec
sub
stos
repnz
das
adc
cmp
sub
inc
xor
adc
sahf
sbb
lock
mov
movsl
cwtl
les
cs
push
in
push
fists
sbb
sub
pop
jbe
cmp
addb
frstor
int
sub
int
inc
mov
popa
xor
data16
das
in
arpl
jl
push
jl
and
add
mov
mov
ud0
xlat
inc
shlb
jl
push
mov
rsm
or
or
jl
pushf
orb
jno
add
adc
cmp
jno
pop
ret
push
es
addl
cwtl
push
into
push
pop
sub
sahf
pop
divb
fildl
sbb
inc
int
clc
test
fs
andl
mov
mov
sub
adc
pop
xor
adc
loop
pusha
mov
push
xchg
fsubs
loopne
pop
aas
jp
les
std
xor
mov
xchg
jb
lods
lahf
ficomps
testl
mov
loopne
test
cmc
pop
dec
mov
fistps
xchg
je
push
inc
xlat
pop
daa
pop
enter
in
orb
fxch
cltd
inc
sbb
sbb
inc
iret
add
mov
ss
in
into
rcr
mov
addb
fstpl
scas
adc
fiaddl
mov
add
aad
inc
int
mov
lock
jbe
adcl
inc
add
lea
rclb
push
mov
add
xor
inc
mov
lds
adc
cs
push
ljmp
mov
push
xor
mov
and
adc
mov
jns
jge
pop
dec
nop
mov
scas
or
je
add
hlt
out
rorb
jle
lcall
jns
mov
lcall
adc
and
imul
fs
loopne
or
inc
int3
dec
pop
add
mov
add
outsl
pop
ret
dec
sub
test
sbb
dec
push
je
cmp
mov
xchg
je
clc
flds
pushf
fs
and
add
dec
sub
test
xor
jno
out
scas
lea
adc
jp
js
pop
cmp
call
inc
das
and
repz
dec
jecxz
ljmp
cli
icebp
add
mov
adc
xchg
ret
rcll
mov
xor
lret
mov
mov
pop
rcl
mov
add
push
repnz
sub
cmp
pop
in
jno
fidivrs
xlat
mov
push
dec
xchg
push
cmpsb
cmp
push
xor
xchg
jg
cmp
xchg
shll
stc
psubsb
bound
mov
lret
mov
sbb
arpl
test
jle
shll
rol
xor
ret
add
leave
xchg
pusha
mov
outsl
loop
pusha
popa
sub
test
sub
leave
jb
mov
stc
inc
pop
cmpsl
popf
cltd
repnz
stos
jb
add
dec
jne
sbb
and
sbb
aam
ret
shlb
test
lret
dec
arpl
xor
aad
sub
cmc
adc
jb
fidivs
ror
pop
pop
xchg
cmp
or
mov
das
or
jno
sub
aad
imulb
int
sbbb
into
mov
lea
push
cmp
push
or
lret
push
xlat
dec
push
cmp
mov
jae
aad
sbb
shl
sub
arpl
xchg
xchg
mov
push
jp
data16
rclb
lcall
dec
call
sub
lds
and
push
sub
ret
push
push
sub
pop
pop
inc
pop
xchg
es
popa
push
clc
mov
test
sub
jg
jp
loope
sub
inc
ja
movsl
sub
xor
mov
dec
xor
add
lcall
cmp
loop
jecxz
repz
xchg
push
jae
push
mov
fsubs
add
jo
test
jae
sarb
orl
clc
or
add
mov
daa
adc
inc
sahf
add
xchg
rep
inc
and
push
fidivs
mov
shlb
sub
or
mov
popf
cmpb
sti
mov
cli
outsb
xor
mov
push
movsl
or
sbb
mov
rcrb
mov
movsb
push
stos
mov
dec
jo
das
je
cmp
nop
dec
cmpb
or
fsubrs
jnp
lahf
pop
ja
loope
sti
dec
lock
filds
ror
push
inc
adc
hlt
jmp
pop
adc
mov
xor
xchg
and
xor
fisttps
iret
clc
pop
scas
cmp
cmp
in
dec
dec
lock
insb
ss
jne
jnp
and
mov
leave
xchg
aas
push
cmpsl
cmp
pop
fwait
mov
sbb
add
xchg
mov
jecxz
ficompl
icebp
les
jge
inc
aaa
mov
icebp
stc
add
into
ds
pusha
push
adc
aaa
into
cmp
push
cmp
mov
mov
pop
clc
cmp
rclb
push
mov
pop
aam
stc
mov
xor
jl
adc
dec
in
rcll
inc
cmpsl
loope
and
negb
call
jno
and
rcrl
pop
dec
pop
push
rolb
fdivs
mov
sbb
jmp
aad
lahf
cmp
mov
fs
fimuls
fs
addr16
cmp
imul
xor
popa
jle
outsl
adc
nop
jmp
sbb
add
xor
iret
jo
xchg
mov
cmp
lret
xchg
mov
cmp
lea
popf
cmp
inc
mov
aas
inc
movsb
push
push
repnz
cmp
mov
jns
fwait
mov
sub
mov
paddsb
inc
test
sub
movsb
add
sub
nop
cmp
stos
dec
stos
xor
rcll
les
call
data16
das
sbb
pop
mov
fwait
push
push
sbb
cli
les
sub
and
inc
testl
xor
jp
rorb
pusha
das
sbb
cmp
xchg
jo
popf
xor
fimull
and
sub
outsl
pop
mov
daa
orb
dec
hlt
aam
dec
jne
cmp
rclb
pop
ljmp
or
movsb
in
push
call
addl
out
sub
loope
arpl
push
push
mov
mov
cld
and
dec
xor
pop
pop
xor
jmp
and
inc
pop
das
ret
sbb
push
jge
xchg
es
in
clc
inc
icebp
adc
in
mov
cli
ret
push
cmc
test
mov
cs
dec
pop
out
or
sahf
sub
loope
add
shl
in
scas
hlt
ror
out
mov
stos
mov
lods
int
cmp
mov
adc
arpl
jno
jecxz
lahf
gs
mov
outsb
popa
xor
xchg
into
mov
mov
pop
and
mov
xchg
and
push
sbb
mov
xor
out
push
pop
mov
ret
push
mov
mov
jg
sbb
mov
xchg
imul
cmp
jnp
xchg
adc
mov
inc
mov
mov
repnz
aam
data16
xchg
call
sbb
mov
divl
push
adc
jecxz
mov
pop
cmpsl
test
or
inc
lock
mov
inc
pop
adc
sub
push
aad
cli
push
mov
ds
push
imul
sbb
or
popa
sub
pop
cmp
mov
lahf
xchg
xchg
inc
push
add
jl
clc
inc
pop
pop
or
jecxz
mov
shl
gs
and
mov
out
loopne
add
adc
aaa
neg
push
mov
mov
pop
bound
cmpsb
push
cwtl
hlt
and
stos
in
imul
sbb
mov
mulb
mov
xchg
aas
ror
cwtl
adc
scas
shrl
scas
mov
jbe
sub
pop
push
movsb
push
cmp
inc
and
add
stos
sbb
decl
add
scas
addb
lea
dec
mov
icebp
adc
sbb
pop
jge
leave
in
push
mov
fnstcw
subl
lea
jnp
push
fwait
or
stc
inc
imul
ljmp
imul
inc
jecxz
push
test
fidivl
xor
cli
mov
xchg
xor
daa
mov
hlt
dec
test
xor
subb
lahf
sub
repnz
cld
sub
sbb
stos
mov
push
cmp
pop
int
cmp
rcll
test
in
je
mov
inc
jge
jo
jge
push
and
loop
rolb
jb
std
add
cmpsb
aaa
int
jecxz
add
filds
xor
je
loopne
leave
and
mov
adc
test
sahf
sub
rcrl
mov
icebp
jns
jnp
lcall
add
sbb
call
addr16
rcl
sbb
or
ss
test
add
push
xchg
aaa
mov
sub
js
and
pop
aaa
and
loope
pop
movl
andb
fstps
lea
xor
dec
xor
in
std
mov
push
xor
cld
aam
mov
test
cmc
test
pop
ret
mov
jp
and
div
testb
push
test
rclb
mov
mov
adcl
inc
jns
into
add
cmp
mov
xchg
xchg
sub
xor
jne
inc
ret
sbb
xor
mov
cmc
mov
out
test
scas
jo
ret
sub
sbb
push
pop
clc
hlt
in
insl
push
paddsw
lahf
es
je
lret
in
rol
loop
cltd
and
xchg
xor
lcall
das
add
cmc
aas
lret
push
fstl
mov
mov
xlat
cmp
scas
daa
pop
outsb
sub
clc
orl
adc
mov
cmc
cmp
test
sbbb
push
mov
or
sbb
mov
fwait
pusha
inc
cmp
lods
pop
or
sub
push
push
xor
or
cwtl
cmp
popa
mov
shlb
add
jns
xor
or
xlat
dec
jp
mov
mov
std
push
loopnew
test
hlt
xorb
sbb
xchg
push
xorb
and
addl
dec
jno
push
vpackuswb
inc
sahf
mov
roll
or
pop
mov
scas
shl
adc
pop
pop
cmp
fbld
xchg
jnp
pop
icebp
cmp
push
pop
stos
mov
xchg
jmp
pop
loopne
pop
mov
push
push
sbb
push
lahf
push
lahf
mov
sbb
aas
xor
icebp
push
push
loop
cwtl
ret
test
jb
iret
out
pop
push
sbb
sbb
les
dec
mov
jo
test
cmp
mov
mov
movsl
movl
in
add
cmp
jp
mov
adc
rclb
fldt
mov
std
hlt
outsl
imul
add
pop
pop
push
das
fisubrl
pop
jecxz
addb
shll
fcoms
stc
leave
and
cmp
shll
cmp
daa
pop
sub
sub
addr16
inc
loopne
bound
icebp
xor
aaa
call
test
jle
aam
inc
pop
cmp
mov
mov
mov
sbb
pop
inc
leave
jns
iret
or
mov
dec
and
xor
testb
jnp
adc
mov
shr
js
imul
cmp
das
shl
jmp
ljmp
mov
les
pop
cmpsl
pop
mov
jno
movsl
clc
lahf
mov
pop
fucompp
sbbl
and
lret
mov
inc
lret
enter
int
xchg
les
lahf
jb
sub
je
sar
adcb
fucomip
test
pop
add
lods
and
push
push
jbe
mov
inc
mov
cmpsb
or
mov
popa
xor
and
hlt
outsb
andb
mov
vmovsldup
insl
sbb
ss
fldt
mov
mov
fmull
push
shll
bound
cmp
cmp
adc
lds
xchg
arpl
dec
cmpsl
cmp
inc
jp,pt
insl
clc
push
sub
mov
mov
inc
cmp
dec
aas
icebp
into
xchg
sbb
inc
scas
imul
push
loope
in
arpl
int3
orb
cmpsb
mov
add
add
push
dec
fsubs
js
and
test
dec
jg
imul
jb
test
pop
mov
xor
and
mov
cmpsb
out
or
clc
or
imul
fsubrl
inc
mov
inc
ja
dec
insl
push
sub
inc
iret
jg
mov
push
loope
and
sub
add
inc
mov
stos
lahf
out
rorl
adc
push
mov
or
lods
mov
insl
test
xchg
fwait
cli
in
mov
lods
mov
push
clc
repz
loope
mov
in
sbb
call
sti
push
dec
cmp
fprem
inc
mov
jb
pop
sub
adc
icebp
inc
pop
imul
or
negl
push
dec
adc
add
psrad
pop
shll
outsb
or
hlt
push
lock
hlt
push
add
mov
add
adc
fnstcw
loope
andb
mov
inc
dec
push
jno
rcr
adc
pusha
gs
push
cmpsl
and
mov
push
call
inc
jp
iret
xchg
cmp
sbb
mov
enter
sub
out
fcomps
xor
or
sub
cmp
add
add
into
mov
addl
cwtl
mov
dec
mov
cwtl
fwait
cld
dec
test
lcall
stos
mov
mov
mov
cmp
lcall
mov
xchg
les
loope
inc
jl
mov
sub
mov
sahf
pop
add
fisttps
cmp
repnz
mov
out
inc
rcrb
xor
push
cli
shlb
ret
mov
jne
lea
jp
loopne
subl
popa
push
inc
loope
pop
call
popf
sub
cmova
test
xchg
das
cmpb
and
rclb
popa
jmp
cltd
mov
add
and
scas
out
mov
in
pop
mov
loop
sbb
lcall
xorb
cmp
push
aaa
sbb
mov
cmpsb
add
lea
stos
js
std
dec
mov
push
xor
add
xchg
inc
imul
push
stos
jmp
inc
outsl
insb
lds
das
or
aas
mov
xor
test
cmp
sub
push
xchg
fwait
test
movsl
shll
test
fcoms
jns
repz
ret
sub
arpl
push
jo
data16
xor
jo
push
mov
dec
fbld
data16
movsb
mov
das
and
clc
out
sbb
mov
cltd
push
es
enter
jae
imul
nop
add
push
imul
dec
mul
das
xchg
or
insb
cltd
and
mov
mov
dec
mov
inc
ds
adc
enter
movsb
xlat
jb
addr16
fbld
inc
xor
inc
aas
hlt
in
dec
cld
mov
mov
out
cmp
push
xor
push
jl
pop
fdiv
mov
xor
jmp
jbe
push
cmp
ds
cmp
pop
loop
inc
push
icebp
adc
pop
sbb
jecxz
popf
mov
push
xchg
push
jae
loop
mov
mov
rcr
notl
clc
dec
mov
stc
cmp
lret
testl
test
hlt
or
pop
cli
mov
lods
hlt
imul
mulb
lcall
push
pop
js
sahf
mov
lret
in
daa
pop
and
cmp
xchg
int3
rolb
jnp
inc
push
arpl
push
dec
push
adc
jne
mov
dec
mov
jne
sahf
je
lret
pop
lds
inc
addl
xchg
jo
inc
jmp
or
sub
add
test
loopne
sub
xor
faddp
stos
jae
push
mov
cmp
fdivr
shlb
push
pop
pop
scas
mov
sbb
cltd
or
pop
mov
mov
add
stc
mov
or
and
fidivrl
outsb
mov
or
push
adc
scas
mov
xorb
test
insb
das
sbb
and
mov
lock
pop
inc
aad
adc
mov
scas
xchg
pop
pop
aam
mov
push
std
inc
mov
xchg
cmp
movsl
mov
mov
xchg
or
shl
and
pop
xor
movsb
pop
mov
pop
dec
pop
jle
loop
and
xor
pop
sbbb
repnz
ja
cld
fcompl
repnz
mov
xchg
test
push
movsl
inc
inc
mov
loope
aaa
jle
fnstenv
dec
sbb
or
cmp
dec
in
ja
sub
mov
pop
inc
and
add
aam
mov
scas
int3
js
pop
repz
mov
mov
jle
cmp
je
imul
inc
lods
dec
icebp
xor
sbbl
or
insl
adc
mov
loop
mov
dec
cmp
sbb
aam
pop
in
dec
add
xchg
stos
mov
and
adc
ja
mov
mov
push
cwtl
ljmp
aas
les
push
mov
icebp
mov
sub
fcoms
pmovmskb
mov
lea
enter
nop
jle
mov
push
mov
pop
ljmp
jbe
repnz
inc
cmp
jae
fsubl
or
jl
aad
push
pop
adc
or
test
mov
outsl
fcomps
jmp
loop
cmp
add
shrl
or
or
mov
adc
push
push
mov
jnp
mov
lahf
loopne
leave
clc
sbb
cmpsb
inc
inc
sbb
push
xor
sub
xchg
push
inc
jmp
daa
cmp
xor
and
ljmp
cmp
scas
sbb
jg
jno
shll
cmp
sub
mov
mov
or
jle
jle
xor
std
mov
adc
xchg
dec
aas
jno
pcmpeqd
add
add
mov
jns
mov
mov
movl
mov
sbb
or
mov
push
scas
push
subb
cmp
or
sahf
je
movsb
cmc
sub
sbb
add
imul
push
es
in
ret
dec
pop
push
pusha
mov
lea
sbb
mov
insl
or
pop
xchg
decb
sub
inc
xchg
cmpsb
in
lds
ret
xor
add
cli
mov
add
out
mov
subl
mov
loope
dec
dec
sub
pop
push
hlt
add
sbb
add
movhps
push
lret
mov
bound
or
pop
jne
subl
add
adc
jns
sbb
pusha
pop
fwait
imul
fldl
xchg
popf
divl
push
mov
ret
dec
mov
and
mov
out
repz
lea
int
stos
xchg
xor
xor
mov
rolb
les
aad
icebp
loope
and
in
outsb
sbb
mov
into
sti
scas
andb
push
sub
scas
enter
or
pop
xlat
cmp
gs
in
in
push
push
das
daa
mov
fstpl
fcomp
jne
push
push
cmp
ret
cld
insl
inc
arpl
mov
fisubs
js
pmulhw
cmp
xchg
cmp
push
sbb
out
cmp
mov
fucom
xor
das
mov
jne
rclb
sbb
jecxz
popa
mov
addl
int3
pop
out
repnz
xchg
repz
or
fiaddl
lock
in
push
or
inc
mov
adc
push
stos
inc
xchg
ret
bound
pop
outsl
mul
xchg
dec
sbb
mov
sbb
fs
and
cmc
inc
test
push
pusha
ljmp
dec
dec
fs
xor
jp
jmp
js
mov
xchg
outsl
lock
fst
xor
mov
mov
je
aam
outsb
daa
sti
sahf
jbe
fisubs
adc
push
lret
sahf
add
pmaxsw
in
push
into
fwait
movsb
pop
or
ftst
hlt
aad
test
imul
fs
test
xchg
frstor
cmp
pop
cmp
or
pop
add
mov
icebp
nopl
sbb
test
push
aad
adcl
test
ds
xchg
adc
xchg
dec
stos
mov
mov
sahf
inc
dec
sbb
mov
pop
divl
cmp
insb
jne
add
sbbl
fcoml
mov
mov
push
packsswb
sbb
mov
stos
mov
jne
lods
or
test
lods
mov
shrl
mov
sar
icebp
mov
sbb
pop
inc
iret
cmp
cld
jbe
inc
jg
mov
sbb
cltd
scas
icebp
cld
xchg
addl
inc
insb
cmc
sbb
sub
test
add
fwait
mov
sub
xchg
or
pop
loop
fsubp
addr16
movsb
mov
stos
mov
aaa
pop
imul
cmc
andb
data16
xor
mov
mov
mov
shll
mov
test
mov
add
lods
out
insb
mov
push
adc
ficompl
or
push
mov
jle
jge
and
pop
sub
cmp
pop
pushf
sbb
iret
rcr
fnstsw
cmpb
cmpsb
ret
aaa
in
push
jo
pop
lods
repz
fwait
enter
mov
push
andl
mov
cmp
jbe
scas
push
nop
out
popa
mov
push
mov
sti
add
movsl
or
std
in
sarb
test
mov
lods
or
pmaddwd
jg
mov
dec
pop
out
jg
sbb
cmpsb
fldcw
outsb
or
add
cmpl
ljmp
pop
cli
mov
addl
pop
js
js
iret
test
pop
scas
movsl
ret
push
add
xchg
jbe
jge
pushf
adc
and
test
jb
inc
iret
or
pop
inc
xlat
add
and
sbb
mov
les
sarl
mov
inc
or
dec
push
mov
mov
rcrb
clc
and
call
pop
pop
stos
mov
rep
cmpsl
sbb
insb
lret
test
or
cmp
cltd
ret
icebp
and
lods
pop
or
cli
loopne
out
sub
add
fidivl
mov
paddw
add
cmp
aam
les
cmp
addr16
movsl
cld
lock
aas
movl
and
movsb
push
jg
roll
shr
test
outsl
scas
imul
orb
addr16
add
or
dec
nop
lock
insl
ficoml
add
dec
insb
ss
inc
pushl
mull
mov
mov
out
aam
ret
and
idivb
push
enter
dec
pop
hlt
sbb
call
dec
jle
mov
movsb
or
cmp
aas
scas
jne
adc
inc
and
in
lds
mov
cmc
xor
mov
jae
aaa
imul
popa
xor
js
xchg
js
movsb
adc
mov
inc
mov
jge
roll
ret
pop
xchg
add
aas
cwtl
xorb
xchg
lcall
mov
mov
xor
je
fs
pop
xchg
adc
scas
push
sub
sbb
add
cwtl
add
inc
jnp
adc
lock
add
nop
cmp
add
cld
addr16
loope
sbb
imul
sti
mov
cli
movsl
push
xchg
test
and
mov
adc
loop
adc
jecxz
xor
pop
xchg
arpl
jle
popf
or
clc
push
fistl
pop
mov
sbb
or
mov
rcrl
mov
and
xor
cwtl
fstps
jp
cmp
xchg
fstpl
int3
scas
sar
jcxz
bound
push
inc
inc
xor
jge
icebp
mov
mov
scas
inc
dec
adc
ds
add
iret
xchg
adc
insb
mov
aaa
repz
adc
xchg
xchg
jae
xchg
cltd
pop
in
daa
pop
ljmp
push
out
ljmp
cmp
push
leave
ret
mov
fimuls
cmpsl
mov
push
inc
movsb
jle
and
arpl
stos
bound
test
sbb
push
mov
stc
push
into
push
and
cmpb
push
and
dec
out
add
ja
test
xchg
cmp
mov
dec
sub
bound
es
mov
mov
xchg
ss
jnp
mov
xchg
mov
test
jmp
dec
adc
push
shrl
subl
lret
pop
jle
sarb
scas
and
or
pop
cmp
and
icebp
mov
inc
out
call
xchg
xor
test
xor
and
out
pop
add
fimuls
push
mov
sub
out
and
outsl
clc
test
and
icebp
push
jnp
popf
cld
pop
jle
mov
and
movsl
jmp
dec
lea
push
movsb
loope
testb
cmpl
and
jae
es
mov
xor
fwait
push
lahf
xor
xlat
js
push
mov
nop
inc
clc
mov
mov
xchg
cwtl
mov
rcll
add
dec
inc
lcall
adc
xor
sbb
sbb
lcall
pop
aas
sbb
xor
jbe
pop
in
nop
nop
xor
mov
scas
jecxz
cmp
scas
fwait
adc
lahf
mov
call
adc
jge
outsb
inc
loopne
pop
push
add
push
push
mov
aad
mov
cmp
stos
aad
loopne
pop
add
imul
adc
xchg
hlt
push
enter
inc
jge
sahf
hlt
add
jbe
add
push
sub
rcll
jno
sub
insl
and
mov
jmp
xor
mov
fdivrs
and
push
push
lods
out
iret
lea
sbb
lods
hlt
repz
mov
cmp
mov
inc
ds
incl
xor
subl
shll
hlt
ljmp
stos
insb
mov
dec
nop
mov
lds
add
cmc
pushf
aad
into
repz
in
or
call
mov
lea
popa
fstps
xor
adc
repz
lcall
mov
push
push
sub
test
or
xlat
dec
addr16
lock
add
xchg
and
in
out
inc
stos
dec
jmp
imul
sbb
movsl
sub
mov
hlt
pusha
gs
dec
popf
xchg
das
loopne
lea
icebp
xchg
daa
ljmp
rcl
inc
js
outsl
mov
in
inc
and
ljmp
cmp
scas
pop
filds
incl
movsl
gs
mov
roll
flds
add
add
inc
cld
mov
mov
imul
xchg
inc
pop
mov
mov
xchg
or
mov
iret
adc
fildl
mov
imul
out
xchg
pop
pusha
movsl
and
shl
loop
das
stos
pusha
add
jne
gs
pusha
adc
or
fwait
or
pcmpeqw
inc
or
in
add
xchg
mov
cmp
jb
push
ss
sbb
test
inc
gs
adcl
cmp
es
sub
popa
xor
sbb
out
adc
sub
scas
adcb
std
cmp
loope
ss
mov
mov
in
mov
arpl
adc
stos
nop
push
out
add
ret
jle
fwait
mov
hlt
adc
or
ss
movb
mov
es
sarb
into
sbb
jae
hlt
mov
push
enter
sub
out
aam
ljmp
das
rcr
lahf
dec
arpl
stos
cli
cmpl
push
mov
mov
adc
xchg
fnstsw
sbb
pushf
mov
hlt
push
pop
xor
in
stos
pop
repnz
rolb
push
xchg
cwtl
jl
sbb
inc
iret
inc
dec
cmp
sbb
cmpsl
in
adc
and
fdivrs
sub
rcll
fildll
aad
inc
mov
cmp
and
movsl
insb
xchg
inc
mov
push
cmp
inc
imul
push
loope
or
ret
rcrl
and
dec
or
and
lods
xor
bound
cmpsb
or
xchg
jl
fnclex
push
test
mov
cmp
sti
das
rcrl
or
jns
dec
push
xor
test
dec
fcmovbe
addb
and
or
mov
gs
xor
xchg
ret
jno
push
mov
sub
jb
pop
loop
jnp
andl
add
stos
push
cwtl
push
clc
adc
inc
jae
ret
mov
aaa
sbb
in
jle
mov
test
lea
outsb
repz
outsb
in
jmp
add
xorb
or
xchg
inc
mov
jno
in
clc
loopne
xchg
and
push
jmp
dec
push
inc
jno
out
subl
and
mov
or
jp
mov
sarb
and
rcrl
mov
fistpl
inc
jb
xchg
or
xor
and
jo
or
les
pop
jecxz
repz
cltd
call
jp
push
and
inc
inc
mov
ficoms
shr
ficomps
mov
lock
sbb
aam
push
ret
push
dec
lds
aas
pop
sbb
pop
icebp
push
mov
inc
xor
adc
add
jns
shll
pop
sub
pop
pop
inc
test
inc
add
loope
mov
orl
out
pop
mov
push
mov
lods
lahf
andl
pusha
cwtl
jnp
lret
test
mov
sub
mov
push
sub
xchg
movsb
inc
xchg
pop
pop
enter
dec
cltd
hlt
pop
mov
inc
dec
cli
das
mov
lcall
inc
ficoms
sub
xchg
out
pushf
ja
pop
testb
loop
add
or
push
push
ret
adc
call
inc
xchg
jo
mov
outsb
jmp
out
or
fbld
xchg
subl
jno
pop
aam
fimuls
test
cld
mov
cmp
test
testb
dec
stos
dec
out
out
nop
scas
dec
ficoms
mov
jge
rcrl
xchg
dec
jo
movsb
enter
inc
aam
mov
aad
shrl
gs
sub
push
push
je
daa
add
mov
push
add
inc
std
push
iret
movsl
push
enter
add
push
add
mov
je
ficompl
pop
sub
icebp
inc
inc
mov
movsb
add
movsb
push
imul
cmpsl
mov
push
mov
test
iret
repz
add
scas
test
loope
adc
push
sub
out
jno
inc
pop
push
adc
jae
sub
outsl
mov
fwait
or
and
cwtl
mov
push
sti
aam
push
out
ss
xchg
sub
fadds
or
push
pop
mov
arpl
aas
jl
sub
mov
sub
jbe
lahf
pop
add
and
in
shlb
xchg
pop
popa
push
fldt
lcall
shl
push
popa
ret
xorl
shr
shrb
or
in
nop
dec
mov
mov
stos
xchg
add
pop
cmp
cld
sub
mov
jge
shll
data16
jl
push
pop
dec
pop
js
je
pop
inc
pop
call
sbb
mov
fcmovnbe
sub
adc
push
xor
xchg
xchg
dec
pop
add
lock
out
push
fidivl
cmp
loop
push
xor
jle
das
lock
dec
inc
mov
cmp
push
cld
shll
pop
popf
jno
out
and
or
dec
pop
loopne
lcall
fisttps
int
cmp
dec
hlt
pop
xlat
outsb
pop
sub
test
sub
jb
ljmp
idivb
ret
loopne
xchg
leave
xor
aaa
and
repnz
pop
xor
xchg
cli
lds
mov
pop
addb
jnp
inc
mov
je
mov
and
aas
cld
aas
push
push
ss
mov
xchg
jp
and
fnstenv
push
stc
push
push
popf
dec
clc
inc
lcall
lret
xor
jns
xchg
jg
lret
adc
pop
shl
cmp
pusha
pop
inc
push
cmp
pop
gs
pop
xchg
or
add
adc
mov
xlat
inc
shlb
inc
jo
data16
ds
cld
pop
cmpsb
add
outsb
movsb
sbb
xchg
loop
mov
xorb
inc
or
xlat
les
jecxz
test
ret
test
mov
cwtl
jp
scas
cmpsb
out
js
pop
test
sbb
bound
out
fistpll
in
pushf
xchg
and
dec
adc
out
mov
jle
imul
sbb
fldenv
xchg
or
and
mov
sbb
icebp
adc
jmp
repnz
sarb
int3
enter
pop
lret
cmp
cmpb
test
inc
dec
ficoms
xchg
jnp
pop
imul
pop
xchg
jge
sub
in
daa
push
shlb
pop
inc
jno
sahf
mov
gs
test
jno
in
adc
push
idiv
or
aam
cmpl
sbb
adc
mov
stc
add
incl
xchg
or
int3
xchg
ss
clc
roll
int
into
pop
mov
adc
clc
rolb
pop
test
data16
stc
adcb
adc
xor
xchg
pop
mov
in
movsl
out
test
int
mov
xchg
jae
push
jg
push
mov
ret
jnp
xor
es
repnz
bound
mov
repz
ret
push
out
lods
lret
les
stos
adc
repz
jno
jl
push
std
xchg
lret
out
js
push
in
ss
push
xor
jp
popf
cmpl
sub
and
scas
int
lcall
mov
push
insl
imul
out
nop
pop
dec
push
jb
arpl
repz
mov
popf
shl
fs
and
mull
ds
adc
lea
xorl
push
cmp
mov
cltd
mov
jo
sbb
lock
sub
push
enter
mov
mov
dec
cltd
sub
sub
adc
mov
popa
pop
fnstsw
or
sbb
jge
in
xor
aas
cwtl
cld
jle
and
sub
sbb
cmpsb
fidivrs
test
loope
pop
sbb
sub
dec
out
add
pop
sti
mov
call
rolb
cmpsb
sahf
pop
sbbb
mov
inc
mov
lods
lret
lret
addr16
test
xlat
sbb
outsb
popa
jne
pop
hlt
es
push
test
dec
mov
sbb
pop
es
fimull
mov
mov
push
fnsave
jo
lods
sbb
push
and
mov
call
aaa
fmull
jns
les
and
sub
cli
jne
mov
xor
adc
jmp
dec
movsl
and
push
dec
sub
jae
fimuls
xchg
insb
xor
rcrl
cwtl
fsub
xchg
mov
and
jmp
push
repz
outsb
inc
inc
out
scas
clc
mov
push
cld
cmpl
xor
hlt
repnz
ret
nop
pop
xchg
stos
mov
mov
pop
dec
and
clc
inc
pop
push
xor
jo
pop
mov
push
ljmp
comiss
je
push
and
lret
lds
xor
dec
mov
dec
mov
cmp
cmp
aad
add
xchg
and
arpl
inc
data16
inc
int3
sbb
das
jmp
pop
xor
loope
jnp
mov
daa
or
pop
push
push
lods
mov
add
add
fwait
or
pop
lret
rol
aad
test
ret
test
icebp
adc
inc
sub
call
jo
sahf
pop
jo
sub
pop
pop
aad
stos
mov
xor
cli
add
popa
insl
into
enter
pop
pop
pop
arpl
dec
push
cmp
inc
add
cmp
add
mov
mov
push
push
inc
iret
rolb
loop
pop
orl
rcrl
jne
add
sub
sbb
sub
iret
int3
icebp
mov
repz
outsb
pop
pushf
test
ror
add
mov
js
data16
or
mov
stos
xchg
shrb
test
xor
mov
mov
lret
arpl
aas
call
xchg
dec
pop
add
add
flds
pop
or
addr16
jo
imul
jns
push
loopne
aas
sahf
sub
sbb
mov
gs
ret
es
loope
aas
sbb
js
sub
jo
test
jo
ja
mov
jns
repnz
outsb
xchg
adc
loope
pop
xor
inc
inc
scas
sub
mov
pop
mov
cmp
and
xchg
xor
fucom
pop
inc
insl
test
inc
sbb
push
cmc
and
mov
outsl
pop
pusha
dec
lahf
into
imull
push
mov
sub
pop
xor
inc
xchg
std
jne
test
or
call
sub
jp
jecxz
out
ror
movsl
int3
xchg
push
jle
ljmp
cs
fstpt
adc
push
pop
adc
js
push
gs
or
in
pushl
not
jp
pop
movl
or
orl
sub
pop
adcl
fisttpll
or
test
xchg
cmp
jno
shr
cmp
in
into
cmp
xchg
stos
pop
jecxz
aaa
cmp
xchg
aaa
ret
sbb
adc
mov
xchg
xchg
adcl
jno
inc
inc
js
jle
sbb
pop
jl,pn
mov
ds
outsl
das
js
popf
in
int3
enter
mov
sbb
xor
ja
sub
or
je
sbb
sbb
inc
jl
stos
sub
inc
inc
push
shlw
das
push
aas
test
add
es
adc
inc
call
sar
push
pop
mov
bound
xchg
push
push
cld
dec
adc
adc
mov
push
roll
cwtl
dec
mov
and
adc
pop
lahf
inc
mov
sub
pop
or
bound
jle
ret
cmp
cltd
xor
test
ljmp
adc
mov
push
test
and
mov
sbb
xor
in
aas
inc
mov
cltd
xor
cmc
call
movsl
mov
push
jo
xchg
testb
add
adc
mov
mov
movsb
int
pop
mov
loope
cwtl
pop
or
arpl
loopne
js
scas
pop
jl
sbb
xor
adc
jl
and
test
lock
je
out
cmc
cld
inc
ljmp
hlt
jnp
pop
fs
std
mov
cmpsl
and
add
xor
or
pop
imul
out
cmp
push
mov
lcall
fadds
pop
in
jae
cmpsb
scas
mov
adc
repnz
je
shrb
jo
lss
mov
sub
imul
pop
bound
call
or
fcmovne
push
add
icebp
jl
or
daa
add
add
or
add
popa
stos
cmp
popa
aad
or
notl
iret
out
je
xor
xchg
and
push
jb
xor
mov
push
pop
ja
cmc
das
mov
loop
xchg
movsl
sbb
lret
push
jl
loopne
push
insb
cmc
rcrb
cmp
call
and
or
loope
pop
push
lea
das
mov
jae
stos
sbb
jmp
cmpsb
dec
lods
sbb
inc
cmpsl
ret
in
pop
cmp
pop
lock
les
dec
pop
loopne
inc
mov
cwtl
std
icebp
push
and
pusha
push
insb
leave
xchg
in
xor
notb
movsl
push
out
xor
cmp
push
or
mov
adc
jne
mov
pop
mov
dec
xor
jae
nop
sbb
fcomp
jmp
mov
jbe
icebp
lds
dec
adc
stc
adc
xorb
lahf
adc
aaa
or
and
in
inc
inc
xlat
shrl
loopne
pop
pop
pusha
push
rclb
jno
lea
or
dec
pop
clc
rclb
mov
stc
or
dec
mov
xchg
nop
or
int
es
hlt
xor
in
xorl
icebp
aaa
mov
sti
popa
mov
jne
scas
pop
jp
mov
cmpsb
mov
mov
addr16
mov
lcall
jbe
xor
dec
push
push
xchg
push
xchg
cld
bswap
mov
outsb
xor
pop
push
pop
mov
fisubrs
lods
ret
shl
dec
clc
andl
aam
push
in
push
dec
mov
push
jg
inc
ss
inc
loopne
push
add
mov
or
sub
cmp
bound
xchg
ret
push
in
popf
adc
inc
pop
jbe
xor
and
cmp
stc
pop
xor
sbb
repz
js
push
dec
or
pop
popa
inc
and
pop
sub
mov
xorb
fnstcw
jae
icebp
adc
inc
dec
loope
popa
popa
xchg
xchg
xchg
out
xchg
lcall
mov
inc
xchg
xchg
icebp
lods
aad
in
insl
shrb
ds
push
add
adc
mov
inc
add
aam
jle
mov
adc
adc
push
ret
push
mov
pop
pop
enter
sub
jo
cmp
mov
push
inc
roll
stos
ljmp
pusha
cmp
ret
loope
cmp
movsl
and
xchg
dec
xor
mov
bound
xor
mov
mov
sbb
test
mov
sti
insb
and
imul
jecxz
in
imull
cli
xor
sbb
and
jb
xchg
insb
push
mov
mov
cli
lock
call
mov
in
fsubr
lea
loopne
pop
aas
outsb
xchg
das
jmp
movsb
adc
mov
xchg
sub
jmp
cmc
shl
xchg
lock
in
push
fwait
jmp
and
mov
mov
loopne
pop
xchg
jg
add
ficompl
or
and
dec
int3
mov
sahf
dec
push
or
pop
shl
aad
push
imul
push
ja
lret
pop
push
jae
aam
and
push
in
addr16
jne
fsts
adc
xor
mov
jecxz
dec
ret
pop
lahf
cltd
inc
insb
rcrl
sbb
push
dec
pop
js
out
and
adc
stos
inc
in
mov
jb
mov
int
push
bound
xchg
and
fidivl
or
out
jp
xchg
adc
xchg
jmp
cmp
xchg
mov
pop
mov
mov
sbb
movsl
add
imull
std
mov
mov
sub
cmpsb
adc
test
fldcw
dec
jmp
enter
pop
inc
add
andb
mov
pop
mov
push
jns
mov
pop
xchg
cmpps
mov
xchg
jne
jo
rorl
cwtl
lcall
test
add
dec
fimuls
testb
cmp
xchg
lret
aaa
dec
in
mov
imul
xor
pop
fisttpll
xlat
sub
ret
pop
ds
cmp
hlt
outsb
and
aas
rcrb
pop
pushl
cli
xchg
mov
or
les
fdiv
add
sbb
push
mov
cmp
pop
nop
push
push
push
aad
dec
fsubl
pop
mov
mov
mov
daa
fidivrl
ss
jl
mov
push
dec
mov
incb
in
movsb
cmc
xor
scas
fidivrs
sub
push
je
aad
loop
jle
push
sbb
icebp
cs
jns
je
rorl
pop
fstpl
mov
mov
pop
push
xchg
sub
xchg
pop
pop
repnz
push
mov
movsl
rcr
jp
rcll
sub
push
jb
call
inc
cmp
sbb
xor
mov
cmp
jns
in
outsl
pusha
xor
adc
inc
rcrl
cmp
sub
scas
cmp
cmp
imul
fistps
loope
aam
and
fst
fnstcw
je
in
cld
mov
add
and
adc
pushf
addr16
xor
mov
xchg
fisubl
pop
mov
xlat
sti
daa
adc
adc
push
sub
add
jle
mov
adc
scas
push
push
out
orb
mov
insl
jl
movsb
mov
ret
mov
jmp
dec
sub
mov
scas
mov
cmp
punpckhdq
push
in
xor
sbb
lock
cltd
clc
xor
ja
jae
stos
les
xchg
push
adc
ret
add
mov
daa
aad
jg
mov
mov
dec
js
push
movsl
sbb
or
aam
aaa
adc
cmp
sub
jg
cmpsl
sub
push
fwait
push
inc
jo
jne
sar
sar
mov
fstps
js
lea
xor
xor
mov
xchg
xor
inc
sbb
andb
cmp
xor
mov
and
scas
jge
sbb
jnp
insl
and
mov
call
ret
sbb
pop
pusha
pushf
jl
test
shl
out
push
add
mov
mov
loopne
jmp
pop
cmpsb
lahf
lds
jg
loope
out
sub
stc
cmc
and
scas
push
aam
xchg
push
rclb
test
pop
sbb
or
movsb
sub
push
xor
outsb
dec
gs
and
sub
aaa
bound
sbb
cmp
bound
push
push
add
push
xor
xor
add
and
adc
movsb
sbb
jmp
movsb
fiadds
and
sub
pop
cmp
cli
lret
jbe
mov
mov
jp
mov
mov
iret
hlt
pop
rdpmc
cmp
mov
int
push
inc
nop
movsb
iret
adc
mov
hlt
xor
fcoms
ret
adc
mov
scas
adc
shlb
or
inc
nop
lock
addr16
pop
stos
pusha
lret
jb
nop
incl
pushf
cmpb
rclb
inc
mov
dec
scas
xchg
sarb
out
jno
loopne
outsl
adc
mov
sbb
jp
out
les
je
push
inc
adc
pop
and
mov
call
mov
popa
push
mov
int
inc
push
arpl
fdiv
aad
jnp
imul
sbb
pop
and
mov
inc
jge
xchg
repz
hlt
pop
mov
out
or
jo
rorb
pop
or
add
mov
lock
jp
loope
cmp
or
sub
push
push
push
jecxz
push
jmp
jecxz
lret
mov
enter
mov
inc
push
mov
push
outsl
fsubrl
and
xlat
push
dec
pop
nop
adc
jp
jmp
mov
fdivrp
addl
xchg
repz
pushf
popf
mov
shll
push
push
pop
jmp
leave
mov
rorb
pop
mov
jp
in
jp
inc
dec
enter
movsl
push
mov
loopne
inc
adc
je
jecxz
hlt
mov
mov
add
cmp
xor
lods
cs
or
push
jo
in
notl
lods
rclb
stc
xlat
test
lret
dec
fwait
mov
or
xchg
jo
enter
cs
or
push
cmc
push
cmpsb
push
push
add
pop
push
sbbb
cs
loope
negl
mov
add
popa
pop
xor
orb
sar
movl
sahf
mov
mov
adc
mov
pop
rolb
or
xchg
fcmovnu
push
clc
cmpsl
cmc
add
out
and
push
cmp
xchg
hlt
add
push
adc
js
int
lods
cmp
icebp
push
add
xchg
outsb
adcl
or
aad
cmp
push
sub
xor
lock
dec
mov
inc
and
push
out
push
imul
testb
mov
out
outsb
add
movsb
mov
insb
and
xchg
mov
shrl
or
xchg
rcl
dec
inc
arpl
add
push
inc
lea
sub
cmp
sbb
push
xchg
mov
mov
test
cltd
shrl
fidivrs
arpl
cmp
pop
es
dec
adc
jl
or
jge
sbb
cli
jmp
out
das
cmpsl
mov
adc
xor
add
and
or
out
ret
add
fists
inc
and
aaa
lock
and
dec
jnp
mov
mov
adc
das
rcrb
push
lock
and
dec
xchg
mov
mov
xchg
mov
fsubrs
roll
stos
cmpl
push
mov
ret
movsl
mov
mov
mov
push
bound
les
lods
repz
icebp
test
or
lahf
shrl
rcrl
into
push
add
outsl
pop
adc
jbe
fadds
xchg
test
jge
icebp
add
adc
pop
pusha
test
fcoml
xchg
pop
cmp
sahf
mov
cmp
add
ja
in
jnp
lcall
jg
sub
pop
pusha
repnz
jns
fdivs
repnz
clc
mov
and
inc
sbbl
ror
js
mov
fs
cli
sbb
ljmp
sbb
scas
push
cli
sahf
jge
jnp
jg
subb
xchg
xchg
or
into
cld
dec
stos
sub
xor
rol
lds
and
lidtl
repnz
or
popf
vmovhps
add
or
or
lret
cmp
scas
xor
mov
movsb
jp
pop
lock
sysexit
mov
mov
imul
arpl
lahf
inc
or
add
aam
add
shl
jns
in
les
ds
jp
xchg
cmp
mov
lods
cmp
jno
call
jecxz
jno
mov
mov
mov
cmp
data16
aaa
jb
mov
sbb
aas
mov
or
and
cmp
and
adc
out
jb
iret
daa
fisttpl
icebp
adc
ljmp
and
push
and
loope
jne
bound
iret
jmp
sti
stos
loop
popa
mov
bound
das
xor
sbb
in
imul
je
dec
popa
sub
pop
add
push
push
std
mov
imul
push
movb
add
fidivrs
adc
add
ds
jp
pusha
push
faddl
adc
loope
sbb
std
and
xor
das
push
sbb
pop
xchg
lods
mov
mov
and
dec
push
mov
push
lods
jmp
ret
jg
jbe
test
es
jns
cmp
sub
jge
dec
mov
rclb
je
jbe
push
mul
pop
xor
jno
add
paddb
cli
loop
imul
sub
js
mov
pop
sbb
and
sti
fidivrl
jns
test
flds
and
loopne
out
aas
mov
and
lock
bound
icebp
shrl
out
arpl
stc
xchg
fs
push
xor
popl
xchg
loop
push
xor
jo
sub
xlat
cmpsb
ficoml
dec
rclb
mov
sub
out
flds
xor
js
xor
pop
int
inc
or
add
or
aam
lea
bound
ret
bound
fadd
nop
add
sbb
dec
mov
movsb
stos
sbb
mov
pop
mov
testb
imul
cmp
or
popa
test
inc
mov
or
adc
xor
mov
movsb
out
mov
test
inc
or
push
sbb
adc
mov
orl
icebp
mov
mov
sahf
dec
popa
xchg
repz
xchg
insl
or
mov
js
sub
shll
int3
mov
sbb
pop
push
sahf
lods
fwait
inc
jg
adc
mov
ljmp
in
data16
jns
hlt
nop
repz
loop
lods
imul
fs
dec
mov
and
out
pop
xorb
cmpsl
sarb
push
lcall
sub
ret
loope
adc
dec
mov
gs
or
loop
mov
call
andb
pop
jbe
rorb
inc
fisttpll
pop
roll
cmc
dec
or
mov
push
or
mov
notb
jg
xchg
xlat
int
cwtl
loop
subl
push
enter
sub
dec
shlb
and
loope
loopne
jnp
dec
push
rcll
jo
add
js
sarl
je
xchg
mov
push
lcall
negl
jg
inc
bound
pop
dec
aad
test
adc
mov
and
ljmp
icebp
add
pop
scas
cmp
adc
sbb
sub
cmc
icebp
repz
xchg
jg
xorb
or
dec
aas
dec
mov
push
dec
cmp
testl
and
xorb
add
mov
stos
dec
sub
jbe
pusha
push
mov
push
mov
xchg
dec
pop
movsb
dec
leave
sub
add
iret
jmp
aaa
jb
or
mov
outsl
inc
mov
or
inc
or
and
jle
pusha
js
js
arpl
and
or
inc
sbb
movsb
push
nop
dec
cli
mov
cmp
push
push
mov
or
cmp
sbb
nop
inc
xlat
push
dec
and
jmp
mov
sti
hlt
mov
and
cmp
into
int
test
loop
js
jg
mov
fnsave
nop
adcl
jp
lcall
cmp
or
lcall
sarb
outsb
lods
or
sub
ja
push
pop
mov
or
push
daa
test
pop
lret
push
scas
in
mov
and
pop
pop
push
cmpsb
adc
pop
or
xor
sub
sar
mov
dec
mov
push
loop
fdivp
jno
aas
movsb
mov
jl
xor
push
testl
mov
inc
sub
dec
scas
or
mov
xchg
ljmp
popl
add
dec
fmuls
js
inc
scas
jmp
sbb
pushf
pop
sub
xlat
rcrl
push
mov
mov
push
repz
add
inc
add
pop
fdiv
fs
dec
inc
pop
ds
push
sbb
nop
sub
xor
and
insl
cmp
xchg
aad
pop
test
repz
cmp
xor
xor
mov
clc
and
sub
fidivs
and
mov
or
adc
test
add
test
rolb
jmp
xchg
push
clc
pop
es
mov
fs
mov
sbb
inc
push
andb
and
jle
call
xor
sbb
jnp
mov
clc
cmc
rcll
and
imul
lods
imul
pop
add
lods
ljmp
or
sbb
cmp
gs
test
push
cmpsl
push
and
or
ja
pop
jnp
int3
ljmp
pop
add
stc
inc
shrb
inc
sbb
xor
jo
in
bound
xchg
mov
lock
pop
jl
sbb
lods
ja
sbb
rorb
pop
push
call
mov
and
sub
push
popa
push
test
push
pop
sub
cmc
jns
and
mov
aad
mov
cmp
sbb
push
or
in
sbb
push
add
jl
ds
push
push
push
ljmp
aam
test
stc
mov
and
sbbb
dec
cmp
push
or
jle
sub
jl
mov
xor
push
xchg
push
push
xor
lock
bnd
jb
je
sub
daa
mov
cmc
das
mov
test
imul
dec
xor
in
and
cmp
jge
roll
jecxz
xor
pop
sbbb
insl
push
pop
sar
hlt
outsl
mov
xor
and
cmp
mov
ret
add
add
dec
xor
in
jnp
lahf
pusha
jae
int
pop
pop
xlat
inc
sbb
mov
xor
les
push
je
push
add
mov
or
loopne
and
lock
mov
nop
pop
cli
mov
inc
jae
in
setg
call
add
inc
jp
sub
or
jns
add
add
push
scas
inc
scas
int3
xlat
jb
mov
xor
add
inc
out
adc
push
inc
ss
out
adc
push
nop
push
pop
push
xor
and
sub
lds
nop
and
push
xchg
shll
push
aaa
pop
shlb
cmp
jb
test
mov
push
nop
lock
pop
cld
aam
push
xor
sbb
clc
into
inc
inc
and
loop
sub
insb
sub
outsl
sahf
ljmp
mov
pop
addb
repz
fyl2x
sar
dec
fnsave
hlt
out
stos
pop
mov
inc
xor
and
and
and
test
shl
aad
mov
sub
push
out
pop
xchg
add
into
mov
nop
popf
lds
sub
dec
call
scas
movl
mov
jle
push
ja
test
mov
xchg
sbb
push
pop
call
lds
arpl
gs
or
and
mov
push
jge
js
ss
test
out
mov
mov
sar
repnz
pop
or
loopne
out
clc
add
adc
dec
insl
and
dec
nop
icebp
xchg
xchg
dec
inc
sbb
jp
push
push
push
xor
mov
mov
mov
popa
popa
enter
sub
cmc
lret
adc
push
add
jno
xor
add
adc
into
into
stos
pop
aam
xor
and
push
jo
mov
cmp
cmp
push
add
pop
mov
lods
dec
cld
jmp
jecxz
pop
mov
jbe
nop
loop
xlat
sbb
out
daa
mov
xor
test
cmp
call
idivl
ds
cmp
movl
movsl
mov
push
jp
test
pop
fsubrp
adc
push
orb
mov
test
gs
notb
outsb
addr16
xor
mov
rclb
aam
pop
shld
rol
cmp
js
pop
xor
inc
inc
dec
pop
aad
sahf
jp
cmpsl
hlt
xor
xchg
mov
shlb
jge
in
dec
cmp
or
push
fcomp
xor
add
dec
pop
mov
clc
mov
inc
pop
jno
sbb
mov
pop
or
ja
inc
add
mov
int
sub
adc
and
push
jbe
or
test
add
dec
xchg
pop
dec
lea
add
xor
pop
ret
enter
cmp
enter
push
cwtl
mov
ds
jnp
pop
sbb
das
pop
push
jge
dec
mov
das
in
xchg
xchg
lods
push
in
movsl
imul
mov
inc
xor
or
into
rcl
mov
xchg
mov
ds
cs
js
das
rorb
insb
stc
and
ljmp
orl
outsb
add
add
pop
iret
push
lea
lds
mov
and
sub
cld
dec
sub
fsubs
pushf
sbb
push
adc
je
xchg
out
jb
les
outsb
lcall
lahf
icebp
push
ret
mov
scas
repz
adc
pop
add
mov
mov
cmp
stos
inc
mov
or
cmp
outsl
je
cld
add
sub
push
sub
fcompl
out
pop
lea
pop
subl
arpl
xchg
adc
pop
mov
xor
in
dec
mov
loope
mov
pushf
and
or
adc
js
rorl
test
xor
jne
push
ja
jne
jmp
push
mov
mov
insb
mov
adc
iret
push
arpl
or
inc
into
pop
inc
inc
jo
jp
push
inc
jge
mov
icebp
test
mov
imul
pushf
mov
into
mov
aas
loope
ret
xchg
loop
jo
inc
aad
rcrb
loope
repz
lea
mov
lock
inc
addr16
xchg
nop
mov
addr16
fdivr
jmp
test
mov
inc
add
push
aaa
jge
das
mov
dec
repz
fcoml
pop
arpl
into
sbb
sub
push
push
xchg
cmp
cs
mov
and
mov
inc
dec
mov
sub
shll
pop
pop
dec
icebp
int3
ss
fsubrl
jae
mov
fs
cs
pop
and
lods
xor
xchg
cmp
aam
pop
pop
cmc
mov
sub
and
pop
lods
add
pop
adc
xchg
ljmp
mov
fsubrl
sub
loop
jge
pop
sbb
js
ficoml
jo
push
sub
dec
push
mov
fbstp
sub
xor
lcall
inc
dec
jl
fadds
aad
in
loop
fistps
sub
fcomip
dec
stos
cwtl
or
mov
out
sbb
pop
jle
xchg
jecxz
mov
out
inc
pop
into
fsubr
shrb
ror
je
pushf
popf
std
push
cmp
pop
add
add
iret
and
push
inc
daa
push
xor
or
cli
mov
dec
movsl
mov
out
push
xlat
ret
push
testb
adc
xchg
jo
push
inc
xchg
icebp
mov
enter
sub
jp
xor
movsb
xchg
adc
inc
mov
add
mov
ret
xlat
jo
in
loopne
push
xlat
and
hlt
add
add
cmp
dec
adc
hlt
loope
mov
movsb
jne
adc
lds
ljmp
andb
xchg
mov
shll
jns
adc
lock
xchg
push
pop
jno
pop
fstpt
jns
rorb
sbb
push
dec
add
cmp
lds
insl
call
sbb
jl
pop
lods
add
sbb
dec
iret
pop
stc
or
pop
mov
add
jle
imul
subl
std
inc
movsb
mov
push
jp
xor
or
inc
sbb
jp
insl
add
push
ja
xchg
mov
in
js
pop
cmp
arpl
out
push
jmp
jb
ds
clc
icebp
push
inc
dec
cmp
loopne
xchg
movsl
jle
cmpsl
cmp
xchg
push
sub
or
xchg
or
in
and
aam
cmpsl
cs
pop
js
pop
mov
push
inc
inc
mov
push
int3
push
clc
mov
out
xchg
xchg
aad
test
cld
ret
inc
divb
mov
lock
add
mov
and
sbb
inc
mov
and
pushf
and
lods
push
push
xor
int
cmp
push
jg
add
shlb
push
cld
ret
loope
cmpsl
enter
push
cltd
adc
sahf
shlb
cltd
or
xchg
adc
scas
or
dec
push
dec
movsl
pop
pop
and
rol
adc
add
sti
movb
jae
popf
repz
cmpb
mov
pop
pop
dec
pop
pop
add
orl
lea
ficoms
mov
ds
jg
push
pop
xor
sarl
daa
sub
and
shrl
and
xchg
imul
lret
repz
mov
popl
mov
hlt
jo
mov
addl
mov
fisubs
stos
mov
push
push
pop
shl
shll
sub
sub
cmpsl
test
push
or
inc
pop
mov
inc
pop
xchg
cmp
mov
inc
testb
mov
sbb
lock
and
imul
mov
and
xor
cmp
ret
pop
lods
add
fwait
scas
jle
cli
test
cltd
jp
mov
and
pop
test
mov
mov
pop
push
and
aas
loopne
xchg
cmp
in
sahf
pop
leave
jle
mov
sbb
arpl
or
mov
scas
pop
sbb
aaa
sbb
bound
mov
stc
mov
popf
aam
mov
ret
push
std
repz
mov
adc
xor
orl
into
and
ss
aad
xor
lret
cmc
lcall
insl
push
xor
addr16
sahf
cmpb
aas
add
psrlw
jecxz
xchg
dec
es
loope
test
mov
cmp
inc
xor
add
lret
sub
je
pop
fildll
jne
js
in
dec
and
popf
clc
int
inc
mov
xor
orb
ret
inc
inc
cmp
stos
clc
les
jb
testb
fsubrs
push
sbb
sub
mov
nop
fcoms
sbb
movsl
pop
dec
into
push
insl
cmpsl
dec
pusha
scas
xor
push
jb
inc
mov
loopne
push
icebp
dec
mov
int
jo
loop
jns
cmp
popa
in
dec
pushl
mov
movsb
dec
inc
insb
mov
adc
aad
das
jno
shll
or
cmp
jmp
int3
push
sbb
loopne
and
popf
or
cli
push
mov
mov
mov
mov
fiaddl
sbb
cmp
xchg
jo
adc
dec
cs
sub
sbb
add
cmc
daa
rcl
cmp
jmp
movsl
sub
add
xor
enter
notl
pushf
arpl
repnz
out
repnz
nop
or
xchg
cmp
mov
notl
popf
sbb
mov
xor
stos
shll
aas
sub
insl
mov
pop
xchg
mov
aaa
xchg
jo
or
dec
addr16
scas
rclb
arpl
push
call
in
xor
div
sub
cmpsl
xlat
out
or
mov
add
loope
popa
inc
subb
add
cmp
jno
cli
movsb
jp
mov
flds
roll
incb
test
mov
movsl
imul
xchg
push
lods
or
mov
or
push
jmp
in
xchg
fsts
aam
scas
aad
sti
sub
cmpsl
das
xor
pop
xchg
jmp
clc
mov
sub
cmp
shll
ljmp
jbe
movhps
mov
imul
or
fsub
negl
mov
or
and
leave
xchg
push
or
jecxz
or
sbb
xchg
dec
lahf
shr
cli
mov
add
mov
xor
and
push
jl
leave
out
inc
push
cmp
or
jne
inc
adc
pop
nop
push
stos
or
mov
call
sub
sbb
repz
mov
scas
inc
dec
or
sub
mov
insl
ret
aam
inc
inc
mov
outsl
in
mov
sub
dec
add
add
adc
sbb
ret
ret
std
scas
pop
mov
xchg
loop
fisubrl
push
sbb
push
cld
dec
cld
lods
aad
xlat
movsl
in
lods
xchg
push
pop
mov
test
cli
pushf
and
icebp
pop
popf
cmc
push
jnp
adc
out
std
movsl
sub
inc
rol
incb
inc
and
sbb
mov
ret
and
icebp
pop
rol
push
mov
rolb
std
call
add
movntq
push
xchg
or
je
shl
inc
aas
out
mov
mov
adc
ljmp
inc
repz
add
data16
xlat
popf
xlat
adc
aas
pop
push
ss
sub
nop
out
xchg
mov
ret
enter
repnz
add
push
fildl
ret
and
testb
and
incb
mov
fwait
add
das
cmp
add
ret
add
and
testb
and
xor
inc
orl
setne
adc
dec
inc
aad
pusha
sti
sbb
push
insb
sbb
scas
mov
adc
add
incb
inc
mov
mov
push
aaa
and
cmpsb
iretw
ljmp
into
cmp
dec
and
push
idivb
or
lods
dec
lods
cltd
dec
test
sub
push
sbb
push
out
js
jnp
mov
cli
mov
test
cld
mov
mov
pop
jne
mov
inc
mov
rorb
sbb
pop
stc
adc
and
ret
xchg
and
sub
sbb
adc
sbb
cwtl
mov
add
adc
mov
mov
adc
push
out
aaa
mov
pop
xchg
mov
je
icebp
xchg
sbbb
pop
enter
filds
sbb
clc
or
jl
data16
add
xchg
sub
dec
aas
fidivs
incl
loope
sbb
sbb
jge
int3
in
add
outsb
push
pop
dec
into
mov
fwait
test
cmpsl
sub
xchg
mov
je
mov
sub
pusha
xchg
scas
lea
dec
pop
jle
insl
pop
cmc
daa
sahf
fs
fstps
outsl
push
mov
cs
fwait
sbb
push
push
push
ljmp
xchg
loope
fdivrl
mov
xor
lret
jl
mov
pop
and
adc
out
icebp
dec
add
repz
pusha
add
inc
pop
in
stc
xchg
push
jbe
dec
jecxz
fsubl
add
pusha
ja
sbb
mov
jg
push
mov
push
ret
and
and
cli
arpl
loopne
test
jnp
and
mov
ret
mov
dec
jle
sub
mov
pop
je
arpl
mov
xchg
xor
pop
mov
push
add
leave
xchg
loope
cmp
or
and
jmp
dec
leave
ljmp
push
dec
xor
iret
leave
dec
addb
dec
xor
cltd
sub
jg
adc
cmc
jae
cmp
shll
xchg
aad
mov
sub
ss
incb
fiaddl
adc
and
sbb
jmp
add
fldl
or
sbbb
dec
lret
jno
loop
iret
cmp
xchg
scas
push
inc
xor
movsb
xchg
shlb
ljmp
pop
pushf
adcb
mov
shll
test
or
push
pop
mov
je
inc
mov
push
scas
ljmpw
or
rcll
lea
enter
xchg
sbb
inc
mov
movsl
jnp
pushf
jl
xchg
repz
clc
lds
add
loopne
shlb
lods
sub
int
xchg
cmp
mov
popa
mov
add
jmp
add
out
roll
or
pop
push
jo
nop
mov
imul
and
rol
repz
cmp
rclb
xor
aas
pushf
push
cmp
xlat
pop
cmp
dec
inc
mov
ljmp
sub
das
incb
mov
lahf
in
jb
pop
adc
call
addr16
adc
jl
mov
inc
or
sub
cs
mov
rcll
mov
pop
jo
pop
mov
xchg
das
movsl
lret
xchg
pop
sub
sbbb
mov
cmpsb
hlt
fcom
adc
dec
mov
dec
adc
and
dec
je
into
insl
push
scas
mov
addr16
cmpsb
cwtl
cmc
lds
rcrb
adc
shlb
sub
dec
sub
jmp
bound
and
xor
jecxz
push
int
mov
decl
aas
sbb
fcomip
fs
subb
repz
and
adc
mov
or
pop
jno
movsl
or
in
lock
sub
push
outsb
mov
je
fldl
push
roll
push
jl
push
int
add
pop
adc
pop
mov
scas
movsl
fidivl
sub
sub
loop
mov
pop
stc
pop
add
fwait
mov
inc
fistpll
mov
inc
repz
xchg
sub
insb
sbb
add
sbb
scas
int
stos
daa
lcall
pop
dec
and
or
and
mov
xchg
ljmp
mov
xor
mov
xorl
xchg
mov
jmp
fs
std
jno
sub
xchg
xor
insl
dec
or
in
or
popf
lods
mov
ds
movsb
mov
inc
cmp
mov
lock
lret
mov
and
subb
lea
mov
sbb
sbb
rolb
jne
mov
out
or
call
or
mov
out
dec
dec
sbb
rclb
inc
mov
push
mov
jno
jne
xor
jge
inc
clc
mov
adc
aad
adc
add
ja
icebp
inc
cwtl
and
push
xlat
inc
adc
repz
scas
mov
mov
cld
mov
mov
rcrl
lods
es
sub
add
sbb
push
push
leave
sbb
js
aas
aam
shlb
push
sbb
cld
jp
add
fisttpll
pop
mov
jnp
add
mov
jne
icebp
cs
dec
inc
jns
push
pushf
mov
xlat
or
adc
add
sbb
xor
outsl
sbb
imul
xchg
notl
int3
jo
mov
jo
mov
loopne
mov
xor
ljmp
inc
shr
pop
jnp
call
xchg
mov
insl
mov
cmpsb
xor
cmp
hlt
mul
push
add
adcb
mov
push
icebp
or
jg
inc
add
testb
shlb
ret
lea
roll
add
xor
adcb
sub
in
dec
pusha
xorl
icebp
sub
pop
in
cmp
or
les
hlt
orb
fsubs
nop
xchg
add
test
mov
sbb
xchg
cmpsb
or
lods
fistps
lods
inc
mov
mov
or
stos
cmp
shll
pop
push
aam
inc
daa
hlt
clc
imul
mov
sub
push
sbb
push
imul
scas
jbe
adc
loope
cmc
push
sbb
insl
and
loopne
push
sub
rcrb
xchg
push
cld
and
jno
js
mov
jbe
mov
loope
add
mov
mov
out
clc
aas
adc
cmp
push
push
aam
and
imul
ret
std
dec
jne
pusha
pop
jg
out
std
lods
or
scas
imul
pop
lcall
daa
rolb
and
mov
and
push
jg
sbb
dec
cmp
or
or
jb
rcr
mov
mov
mov
add
div
sub
mov
out
sti
inc
inc
aas
je
jmp
xor
push
inc
mulb
je
into
and
lahf
ret
and
mov
jae
jnp
negl
xor
and
sub
sub
mov
ret
mov
cmp
and
or
xchg
pop
ss
lods
ficomps
mov
and
jo
sbb
mov
popf
add
fcomps
and
mov
mov
jo
mov
sbb
adc
and
in
sbbl
mov
or
in
daa
xor
pop
ss
rolb
fisubl
cld
adc
jg
rcll
inc
or
fwait
mov
and
int
push
lret
jno
ljmp
jno
cmp
inc
shrl
loope
arpl
stos
sub
ja
scas
pop
xchg
clc
sub
fisttps
push
ret
push
shr
testl
cmp
popa
sbb
pop
adc
mov
push
mov
sahf
dec
or
mov
mov
xor
js
jnp
mov
cli
out
mov
push
inc
negl
mov
in
test
mov
mov
lret
enter
cmc
push
icebp
push
or
add
mov
pusha
adc
cmp
jmp
adc
out
icebp
xchg
push
std
jo
xor
das
call
xor
inc
sbb
mov
mov
fnstcw
add
sub
test
test
into
mov
add
nop
add
xor
int
mov
jg
dec
lret
shll
out
or
leave
test
js
in
xchg
push
lock
fdivrp
shlb
cmp
les
mov
ss
cmc
in
out
sbbb
rcrl
jmp
jae
pop
adc
sbb
pop
icebp
ret
shlb
jnp
aaa
xor
pop
imul
je
mov
inc
mov
aas
sbb
sbb
cld
shll
jns
push
clc
xorb
aam
pop
inc
fs
pop
out
xor
mov
pop
adc
ret
jo
in
xchg
pop
push
xchg
or
jmp
push
adc
cmpsl
push
je
xchg
cli
sbb
out
scas
push
popf
clc
std
adc
push
ds
mov
repnz
cmpsb
loop
pop
pop
movsl
and
ss
andl
clc
and
push
push
sub
cmp
xchg
xchg
punpckhbw
or
xchg
sub
xor
jo
jnp
addl
inc
pop
xor
fstp
mov
ss
pop
mov
loopne
in
sbb
pop
jp
mov
movsl
mov
rcr
aad
inc
mov
adc
mov
fsubs
fwait
push
dec
jp
daa
call
stos
mov
imull
ds
ficomps
mov
test
push
sbbl
xchg
jno
adc
pop
sahf
or
jns
jp
lret
inc
or
pop
jns
fcompl
mov
das
aas
imul
jns
sub
inc
jg
int
cmpl
pminub
cltd
lret
pop
add
xor
jnp
add
sub
in
mov
out
cmc
push
jecxz
cmc
ror
xchg
enter
xor
pop
pop
loop
dec
fistl
mov
push
mov
adc
call
push
faddp
outsl
int
cmp
or
mov
andl
loopne
mov
pop
fiaddl
pushf
push
jecxz
xchg
dec
enter
mov
xor
jle,pn
sbb
add
adc
or
pop
pop
out
or
mov
or
mov
pop
dec
fistl
xchg
pop
lret
decb
dec
mov
inc
pop
xor
inc
dec
sahf
mov
jmp
imul
push
rcrb
test
loope
xchg
insl
mov
mov
or
popf
xor
je
jle
mov
push
fisttps
jle
in
aad
imul
scas
stc
insl
lods
push
ss
inc
cmp
push
pop
xchg
ds
lock
sbb
sbb
fwait
stos
xor
xor
and
call
xchg
or
cld
mov
and
pop
movsl
scas
or
sub
jmp
int3
out
lret
bound
mov
imul
inc
dec
xchg
cs
je
loopne
lea
xchg
mov
ret
mov
fs
addr16
and
sbb
pop
adc
adc
dec
clc
icebp
in
push
mov
mov
mov
mov
push
push
lods
inc
aas
divb
icebp
push
out
cmp
in
push
movl
mov
or
xlat
xor
xchg
out
outsl
addb
popf
mov
inc
add
cld
mov
test
ds
outsb
push
dec
lea
add
xchg
pusha
test
js
movsl
movsb
ja
sahf
mov
cli
pop
mov
push
lock
nop
scas
xor
enter
inc
push
mov
je
imul
popa
sar
xor
mov
cmpsl
lea
cli
in
add
jbe
arpl
add
inc
mov
lods
jge
lret
xchg
cmp
fbstp
xlat
jns
lods
xchg
imul
adc
xor
loope
cmp
cmpsb
and
ss
mov
jecxz
mov
loope
arpl
mov
lds
clc
or
jbe
cmpsl
std
scas
data16
shll
repnz
mov
stos
mov
sbb
arpl
adc
push
add
lock
stos
lods
int3
pop
xor
lret
shr
sbb
xchg
sbb
flds
xor
loopne
adcl
mov
pop
mov
rorl
pusha
lock
jmp
sub
sub
jecxz
loope
dec
or
mov
pop
adc
add
insb
mov
filds
xchg
test
jne
decb
adc
jle
inc
out
mov
mov
inc
inc
aas
dec
inc
push
hlt
cltd
sub
pop
insl
lock
xchg
imul
icebp
aad
les
xchg
mov
shrb
mov
shlb
sub
clc
inc
inc
mov
sub
push
in
or
stos
inc
sahf
popf
outsb
push
stos
test
or
add
push
or
xor
ds
popf
cmc
jl
test
mov
fsubrs
mov
pop
stos
mov
jne
pusha
xor
mov
xor
cmp
test
xchg
dec
scas
lds
rclb
les
pop
add
cmpsb
imul
jg
int
adc
out
lcall
outsl
in
movsl
sbb
pmullw
pop
and
lods
push
sub
pop
pop
jmp
cwtl
mov
aaa
cmp
mov
xor
sub
call
and
adc
pop
jbe
xchg
cmc
scas
sbb
out
jl
jns
adc
test
fwait
mov
push
subb
repz
xor
add
add
data16
pop
loopne
rolb
push
loope
mov
sbb
adc
pop
inc
movsb
es
cld
fdivrl
mov
js
xchg
dec
stos
pop
push
jae
stos
mov
icebp
lods
push
add
mov
sbb
add
in
push
push
sub
das
mov
xchg
add
or
pop
call
mov
dec
jl
lret
hlt
push
fstpt
call
mov
movsl
scas
stos
daa
ss
jnp
les
add
push
aad
add
movsb
cwtd
sahf
das
lods
ffreep
movsb
in
mov
pop
adc
outsl
loopne
adc
mov
xor
mov
in
fists
and
jno
xchg
orb
cmpsb
cmpsb
jp
xchg
orl
mov
cli
insb
cmp
lods
ja
xor
lods
lcall
sbb
fists
push
arpl
mov
jne
loopne
ficompl
or
shrl
inc
jl
fucomip
mov
lock
ja
leave
fidivrs
inc
nop
imul
cmpsb
push
out
jb
ret
or
xchg
cmpsb
lret
lret
adc
divl
cwtl
pop
sub
pusha
add
je
dec
xor
mov
xor
loope
outsl
mov
insb
rolb
in
pop
pop
loopne
add
push
mov
sub
mov
mov
outsb
popa
aaa
jl
lret
adc
push
xor
aad
jle
hlt
or
mov
jg
sbb
add
sub
and
push
push
inc
pop
jno
jmp
push
imul
pop
sbb
mov
lcall
notl
xor
mov
dec
lret
push
xchg
mov
mov
cmp
jecxz
mov
sbb
cli
lock
ret
ret
fcmovnbe
or
mov
stos
mov
and
pop
movsb
fsubrs
xchg
icebp
jl
add
sbb
push
testl
lods
sbb
mov
dec
inc
std
in
mov
dec
call
mov
test
sbbb
inc
jne
test
dec
fiaddl
push
sbb
mov
inc
insl
out
xor
nop
mov
sub
xlat
cmp
mov
xchg
pop
cli
clc
mov
cmp
imul
pop
dec
pop
lods
out
xchg
add
ret
and
rorl
jl
push
cld
xchg
pop
xor
pop
jp
jns
or
or
cmp
jg
mov
xlat
mov
loopne
mov
mov
pop
and
jo
fcmovb
mov
dec
sbb
cli
insb
outsl
pop
jge
insl
sahf
pop
popa
push
imul
cmpsb
adc
sub
ss
jl
ret
arpl
mov
adc
fdivs
mov
rclb
or
test
push
stc
sub
aas
pop
in
mov
cs
dec
lds
xor
dec
adc
mov
daa
fidivrl
adc
mov
mov
mov
mov
inc
adc
or
pop
pushf
mov
add
in
xlat
push
pop
mov
lods
xor
test
inc
xorb
adc
or
add
push
add
mov
ret
xchg
add
leave
sbb
xor
sub
jmp
mov
fs
mov
mov
and
sub
inc
les
cwtl
sbb
out
mov
rclb
loope
push
mov
sbb
popf
xorl
inc
rorb
adc
xor
ja
add
jmp
cmp
mov
cmp
adc
xor
imul
jbe
xor
call
jle
push
loop
sub
imul
aas
push
xchg
in
popf
mov
and
lods
mov
xor
dec
mov
add
jg
mov
cmpsl
xchg
enter
sbb
insb
sbb
sub
mov
mov
pop
mov
dec
aas
stos
andb
xor
add
sub
rorl
inc
mov
jl
inc
jb
sub
int3
add
jb
into
data16
push
jmp
fbstp
pop
loopne
add
mov
jo
xor
out
adc
sub
sbb
sbb
push
stos
mov
call
cli
add
movsb
icebp
xor
sti
push
xchg
outsl
icebp
pushf
cli
mov
test
push
aam
cld
adc
call
ljmp
frstor
xor
sub
int3
add
inc
sbb
or
push
sar
sbb
push
jge
jmp
or
pusha
cmpsb
sbb
sarb
add
push
in
cmpsl
lds
pop
cmp
and
jno
icebp
push
test
lret
add
pop
push
test
push
jp
xchg
int3
scas
pop
or
cld
lea
pusha
jecxz
push
mov
sbb
push
push
add
enter
lods
jno
rcl
sbb
add
mov
xchg
sarl
push
mov
xchg
insb
mov
cwtl
sbb
push
int3
pop
dec
pop
xchg
add
or
jo
icebp
push
in
das
icebp
inc
lods
out
dec
scas
cmp
adc
pop
xchg
mov
add
cmova
shld
cmpsl
ret
rolb
subl
aaa
in
dec
pushf
mov
sahf
jo
popa
add
pop
mov
push
pop
push
dec
adc
xchg
push
fptan
loopne
loopne
sub
ljmp
push
inc
aam
push
daa
mov
sub
pop
add
jmp
aam
cmpb
inc
fcompl
movsb
test
adc
and
push
data16
cli
movsb
lret
adc
dec
cmovp
call
xor
xor
cmp
ja
pusha
lret
mov
dec
out
inc
or
test
pushf
mov
cmpsb
jnp
mov
psadbw
jecxz
jnp
cmpb
ja
ljmpw
mov
mov
jo
push
loopne
mov
inc
and
dec
cli
rolb
mov
inc
mov
sbb
push
ja
xor
ss
cmpsb
in
inc
fcompl
outsl
jl
pop
inc
inc
out
and
adc
clc
mov
mov
lds
and
call
out
cmpsl
scas
and
sub
ret
jb
pop
pushf
mov
les
sbb
push
pusha
mov
jp
push
and
lock
mov
xchg
das
andb
jmp
mov
jg
dec
jmp
or
mov
pop
pop
out
inc
call
mov
cmp
mov
lods
rcrb
out
inc
sahf
xchg
test
test
xor
add
in
mov
mov
faddp
lds
xchg
dec
jae
jo
lods
inc
inc
int
dec
push
subb
pop
in
incb
pop
mov
fs
add
cmp
lock
inc
sti
adc
dec
in
mov
sub
push
push
mov
mov
daa
xchg
lods
mov
dec
jge
sbb
ds
inc
sbb
sahf
jno
andl
push
sbb
lods
lahf
scas
int3
mov
mov
das
addl
sbb
or
cmp
mov
scas
push
mov
sub
push
sbbb
imul
adc
stc
pop
dec
mov
sqrtps
fbstp
and
or
pop
push
shrl
dec
mov
mov
sub
ret
jo
shlb
jne
lock
in
sub
iret
jns,pn
and
fildll
dec
push
inc
shll
hlt
leave
xchg
fs
dec
pop
cmpsb
push
mov
xchg
mov
push
jbe
adc
test
pop
enter
filds
jge
mov
movsb
mov
xchg
jmp
mov
std
test
mov
dec
pop
fadds
jl
inc
mov
add
stos
clc
sahf
push
fwait
lods
sti
push
push
loop
mov
push
shrb
popa
dec
arpl
push
imul
and
ds
jl
cmpsl
in
cmpl
mov
add
inc
cmpsb
adc
mov
ljmp
addb
add
mov
xor
leave
xchg
mov
test
lret
repz
and
je
je
addl
loope
cltd
or
fidivl
testl
ss
gs
dec
ljmp
ljmp
daa
fstpt
insb
insl
cmp
sub
mov
bound
fstps
aad
mov
inc
xorl
jg
clc
shll
shll
pusha
cmp
testl
or
pop
lock
mov
sbb
les
shll
push
fisubrs
mov
adc
add
and
pop
sub
pop
mov
addb
fdivrp
cli
scas
inc
lods
xor
sbb
push
adc
adc
jne
pop
sub
sub
bound
jnp
leave
mov
adc
adc
xor
lods
movsl
adc
lock
push
mov
jl
and
mov
cld
aad
hlt
xchg
aas
test
pop
test
ljmp
cs
xor
add
pop
aas
adc
adc
ds
push
mov
into
loope
sub
add
in
mov
jmp
push
pop
jmp
test
insl
or
pop
pop
jo
sbb
aaa
clc
push
mov
mov
mov
dec
dec
cmp
jo
loope
pop
jno
add
test
jbe
fldl
daa
in
subl
movl
adc
das
outsl
jmp
cmpsb
in
jl
mov
insl
mov
ret
imul
xchg
mov
add
leave
push
jg
add
and
scas
cmp
mov
rcrb
xor
ljmp
fsubrs
or
pop
add
adc
sub
jl
mov
adc
shlb
mov
cmp
incl
dec
or
pop
cld
cmpsl
lods
dec
adc
cmc
sub
stos
jg
sbb
mov
pop
or
cld
andl
mov
stos
or
cs
cltd
push
aaa
fisubs
lds
popf
mov
jno
aas
sbb
andl
mov
jle
add
sbb
and
sub
mov
xor
cmp
outsl
and
inc
mov
setp
in
ds
rclb
xor
aaa
cmp
cmp
jl
loope
jnp
out
push
xchg
xor
xor
sub
sarl
aas
xor
mov
jl
jge
dec
adc
loope
scas
mov
and
lock
lods
dec
faddl
xchg
movsl
imul
adc
xchg
sub
popl
push
je
out
mov
mov
mov
les
inc
es
push
cmp
and
cmp
push
or
std
mov
rorb
sbb
bound
adc
mov
mov
adc
or
daa
cld
mov
leave
xchg
push
jmp
mov
outsb
push
movsb
fcomps
push
mov
ds
mov
popf
int3
push
fcompl
adc
jo
add
ret
aad
sbb
popf
dec
shll
mov
fldcw
xor
cs
mov
pop
xor
sbb
es
inc
cmp
dec
jge
dec
fdivrp
add
mov
sub
xchg
and
add
ljmp
xchg
pop
cld
xchg
xor
int
dec
mov
jp
mov
and
imul
xchg
mov
or
and
xchg
pop
pfcmpeq
pusha
leave
sbb
jp
mov
and
jmp
mov
enter
mov
fsubrl
clc
mov
pop
int3
sti
sbb
pushf
sbb
mov
stos
xchg
mov
das
mov
adc
scas
mov
mov
lods
jecxz
inc
arpl
adc
fisubs
test
add
icebp
jmp
xor
xchg
mov
int
cmp
popa
lds
and
sarl
sbb
rolb
inc
aad
fiadds
sbb
rcll
loop,pn
jl
sub
ss
and
lock
jle
mov
or
or
mulb
ljmp
cltd
sub
hlt
xchg
add
pop
inc
jnp
stos
pop
sbb
cmp
ret
jno
in
jmp
pop
or
pusha
rorb
jle
sbb
or
mulb
inc
mov
bound
mov
and
push
in
inc
inc
adc
iret
pop
cld
add
mov
nop
jg
and
das
mov
xchg
mov
mov
test
jo
xor
clc
jl
xlat
je
push
insb
enter
jp
clc
add
mov
pop
xor
je
std
adc
sbb
inc
adc
push
add
rcrl
cli
add
shlb
js
inc
dec
inc
data16
sbb
rorb
loopne
add
mov
push
lcall
nop
mov
dec
mov
sbb
cld
fisttpl
mov
rcrb
mov
push
xchg
int
paddw
mov
ret
out
sbb
jnp
add
push
pop
int3
out
outsl
push
inc
cmp
icebp
hlt
cmp
ret
and
and
das
jg
std
aam
inc
and
push
loopne
test
jg
lret
popf
ds
jge
jo
stos
mov
add
es
cs
cmp
cmpsb
dec
daa
scas
ja
xadd
dec
jp
iret
adc
aam
push
sbb
mov
cmp
lret
push
inc
cmp
jns
xor
sub
jb
pushf
push
inc
xchg
and
loop
inc
dec
dec
and
jl
das
push
pop
dec
jmp
lahf
je
cmp
imul
lret
and
insb
adc
lock
inc
mov
pop
lods
sub
dec
xchg
add
mov
push
aaa
in
inc
pop
mov
dec
rclb
shlb
fmul
inc
and
xor
icebp
jge
mov
pop
push
xor
mov
xor
pop
popf
pop
das
loop
fsub
mov
jp
clc
and
fs
adc
fimuls
sub
add
xor
outsb
outsb
or
dec
aam
push
repz
clc
add
add
push
loopne
out
imul
lods
filds
loopne
ss
loopne
dec
bnd
xor
ljmp
jl
mov
pop
xchg
jge
jne
dec
adc
lock
xchg
and
ljmp
data16
cmpsb
lea
mov
in
enter
idiv
dec
testl
push
into
int
pop
jb
xchg
pop
cmp
sahf
data16
mov
cmc
das
sbb
mov
test
push
or
ficompl
decl
push
jne
mov
lret
xchg
mov
cmpb
fstps
into
xchg
sbbl
add
xlat
or
xor
jno
jb
xchg
mov
sbb
cmp
and
sar
push
inc
xchg
sti
mov
mov
mov
shrl
ja
jl
adc
mov
push
rolb
or
adc
lcall
pop
out
lcall
in
lock
test
stos
push
sbb
pusha
ja
pop
data16
repz
xor
test
out
push
push
sarl
mov
push
sbbl
daa
cmpsb
sub
pushf
cmp
sahf
test
aam
mov
or
push
pop
jmp
sub
adc
xchg
lods
clc
push
aas
pop
push
mov
ret
cli
clc
lret
dec
insb
lock
push
outsl
decb
mov
xor
pop
push
push
and
push
fwait
out
and
addl
sub
xor
jmp
mov
mov
sbb
cwtl
aam
jnp
mov
mov
stos
jge
in
inc
or
dec
into
xlat
adc
sbb
jo
xchg
cmp
divb
movsb
in
dec
push
std
ficoms
notb
pop
lret
pop
pop
xchg
lds
cmpsl
cltd
test
je
aas
mov
imul
leave
popa
add
add
arpl
cmp
popa
ret
or
cmp
lret
push
jbe
ds
je
movsb
mov
or
adc
movsl
xor
jmp
movsl
ljmp
out
rorb
lea
jp
pop
int
fisttpll
in
pusha
es
rol
js
jg
pop
add
lcall
push
loope
mov
xchg
jge
rolb
pop
and
mov
insb
inc
jmp
repnz
jl
ja
js
loopne
es
fiaddl
cmp
loopne
es
sarb
mov
rorb
sbbb
xor
dec
xor
or
push
jmp
mov
out
mov
sbb
cmc
mov
add
aad
test
jae
fbld
pop
xor
je
pop
mov
insb
sbbl
sti
adc
outsl
jbe
dec
cltd
pop
enter
das
sbb
nop
movsb
std
xchg
xchg
test
cmp
syscall
scas
fcmovb
pop
call
inc
jne
mov
and
xchg
dec
ficoml
mov
subb
mov
hlt
into
push
cmpsb
inc
in
or
or
xchg
cld
dec
inc
pop
mov
dec
loop
shl
hlt
or
pop
sbb
jno
pop
lret
push
cld
call
out
xchg
dec
xchg
sbb
cli
mov
out
ds
ficoms
mov
imul
out
subl
push
jecxz
ljmp
daa
jbe,pn
sub
das
mov
sub
sbb
out
pop
orb
call
mov
sbb
imul
dec
in
mov
inc
jp
add
dec
dec
daa
dec
mov
add
mov
dec
sahf
ror
je
imul
scas
add
mov
mov
cmp
push
xlat
push
addl
popf
ds
add
loopne
inc
inc
pop
hlt
pop
es
xchg
cwtl
push
jne
lcall
pop
stos
jg
dec
add
pop
outsb
int3
stc
inc
call
or
jno
je
test
mov
rcll
sbb
dec
jb
lods
mov
je
add
dec
ds
jp
out
adc
jecxz
mov
rorb
lods
in
fisttps
add
mov
adc
jg,pt
adc
sldt
lahf
rorb
scas
stos
mov
push
popa
push
cld
adc
lods
sbb
mov
cli
lods
adc
scas
ljmp
inc
ret
cwtl
or
stos
pop
ljmp
inc
ljmp
or
jge
xchg
sbb
or
sbb
call
gs
pop
push
add
and
mov
out
push
je
jge
push
mov
arpl
mov
imul
movsl
jl
aad
ret
psubd
pop
mov
and
out
adc
fidivl
mov
sub
fs
orb
imul
outsb
cmpsl
out
jmp
cmpsb
inc
je
push
pop
jle
pop
scas
popa
mov
mov
aad
fwait
into
and
fs
loopne
and
data16
pop
movsb
xchg
pop
clc
pusha
fisubl
clc
mov
dec
mov
ficompl
xadd
test
repnz
adcl
ss
or
punpckldq
jno
imul
xchg
jecxz
pop
loopne
add
or
testb
rclb
arpl
ficompl
mov
sahf
mov
mov
addr16
jmp
loop
cmp
dec
ds
std
xchg
push
mov
in
ds
fadds
sub
pop
adc
das
test
fs
push
fmull
mov
rcll
jmp
rolb
adcb
or
cmpb
inc
sahf
pop
enter
sahf
cmpsb
out
push
lcall
xor
fildll
pop
and
add
cmp
cld
lds
and
pop
movsl
and
lock
mov
mov
push
movsl
in
xchg
pusha
ret
dec
xor
enter
dec
cs
icebp
mov
out
adc
and
dec
add
cmc
jbe
bound
test
push
push
mull
sub
adc
cmpsl
and
popa
sbb
int
cmp
fldl
add
mov
xchg
loopne
jl
xchg
push
mov
loopne
sbb
adc
pop
jmp
pop
lret
out
sub
jl
xchg
add
xor
clc
sub
jnp
pusha
xor
ss
cmp
lret
clc
or
mov
push
aam
push
int3
push
adc
lcall
mull
lahf
mov
out
cltd
inc
movsb
ljmp
inc
out
pop
pop
cli
add
pop
xchg
jbe
sub
stc
cli
int3
pushf
adc
imul
or
outsl
cmp
inc
sbb
push
push
push
push
das
fsubrs
push
jo
jp
lret
mov
or
loopne
sbbb
shll
movsb
cmc
mov
mov
mov
jp
sbb
add
cs
xor
in
mov
mov
or
push
adc
jb
ljmp
mov
xor
out
mov
out
xchg
aas
jns
mov
data16
outsb
rcll
push
mov
add
push
mov
out
adc
icebp
pop
lods
push
lock
dec
arpl
pop
fisubs
mov
jno
mov
ljmp
push
or
jmp
jo
test
sbb
mov
fisubrl
pop
aam
push
xor
sbb
test
sbb
fcmovbe
xchg
pop
mov
mov
sub
stos
les
movsb
aas
adc
sub
repz
dec
jge
shll
loop
dec
or
lock
push
jnp
adc
lret
and
add
sub
ss
add
pushf
or
je
xor
push
incb
jp
lods
dec
jle
popa
aad
cmpl
je
adc
or
imul
arpl
cltd
fdivrl
push
pop
xchg
addl
mov
orl
aad
icebp
enter
test
pop
loope
pop
xchg
xchg
mov
adc
stos
dec
and
inc
clc
rolb
adc
inc
test
push
sub
rorb
push
pushw
stc
imul
adc
jmp
fistl
or
invd
pop
pop
or
lar
mov
push
in
fwait
arpl
cmp
mov
rcl
jl
rorl
mov
jmp
int
std
mov
loop
cmp
into
push
out
into
in
cmpsl
mov
das
and
xor
mov
or
movsb
inc
stos
cmc
sbb
mov
mov
cmp
mov
test
popl
and
jns
or
popa
jo
mov
push
test
lods
adc
xor
jo
aam
dec
out
xchg
inc
repz
loopne
out
orl
xchg
fwait
js
loopne
jg
popa
imul
or
cmp
sbb
es
cmpsb
sbb
dec
ja
fadd
cmp
pop
cmp
push
aam
push
aas
xchg
and
pop
adc
add
repnz
mov
stos
out
mov
ja
mov
call
pop
fs
jle
dec
pop
mov
adc
or
cmpl
jl
mov
sbb
jo
add
xchg
sbb
push
cmc
inc
push
mov
lock
nop
xor
mov
pop
mov
sub
je
rolb
orl
adc
mov
ss
ficomps
xchg
inc
xchg
xchg
sbb
aas
shlb
roll
xchg
adc
out
cmp
jns
and
xchg
lcall
repz
lea
roll
loopne
sbb
lret
xchg
add
or
sbb
jbe
cmpl
into
test
sub
call
sub
pop
aaa
lds
sbb
icebp
xchg
push
shlb
push
jp
add
bound
lock
dec
stos
mov
pop
add
sarb
scas
sbb
pop
lahf
into
popa
popa
xchg
sbb
pop
je
mov
pop
lods
push
addb
push
inc
aas
mov
ja
sub
shrb
ficompl
pusha
rorl
inc
or
je
out
fucomp
fiaddl
jecxz
pushf
xchg
sti
add
push
loopne
leave
inc
jo
lock
adc
mov
addl
cld
cmpsb
xchg
inc
add
aas
and
lock
jmp
cltd
sbb
mov
ret
adc
ljmp
out
jmp
insl
pop
enter
push
sbb
or
or
ja
imul
pushf
arpl
push
call
xchg
mov
mov
sub
inc
icebp
sarl
and
and
mov
mov
adc
lods
je,pt
outsb
movsb
mov
mov
cmpsb
cmp
sub
xor
call
xor
cltd
je
cmp
fidivrl
rol
sarb
jl
loopne
aam
or
xor
in
mov
movsl
clc
rorl
imul
jl
lcall
pop
cmp
inc
and
inc
lea
mov
lcall
and
push
dec
cmp
lds
jo
adc
in
mov
sbb
mov
lock
mov
pop
and
or
cmpl
sti
xchg
clc
mov
lret
or
mov
ds
rolb
js
orps
mov
adc
cltd
flds
inc
in
add
mov
cli
fs
movsb
cmpsb
pop
add
pop
test
jmp
sbb
cmc
inc
xchg
xchg
adc
inc
mov
loope
test
iret
adcl
roll
inc
es
je
dec
dec
std
stos
clc
loope
xor
cmpsl
and
aaa
test
jo
test
push
sbb
clc
add
mov
das
lods
stc
gs
jge
lds
out
call
gs
movsb
arpl
adc
out
jae
xchg
add
loope
pop
or
test
imul
pop
sub
test
popf
iret
fmull
testb
adcb
loop
hlt
daa
iret
inc
jl
sbb
push
sub
pop
push
adc
stos
xor
dec
lret
adc
sti
dec
mov
adc
dec
rcl
lods
out
xchg
lret
inc
popf
scas
inc
and
cltd
rcll
xor
adc
dec
and
arpl
cwtl
dec
cmp
pop
mov
repz
jo
adc
les
pop
icebp
aad
jae
push
push
cmc
arpl
iret
xchg
and
mov
jecxz
mov
cs
lods
or
loope
jbe
rcrb
inc
or
jno
push
lock
ds
shlb
fsubrs
nop
hlt
mov
jecxz
jecxz
fidivrs
and
lock
test
mov
push
popa
pop
push
ret
dec
mov
clc
adc
jp
rcrl
inc
shlb
out
rcrl
cmpsl
out
xchg
aam
cld
lret
ret
daa
mov
imul
dec
pop
xlat
out
je
pop
cmpsb
dec
push
sbb
push
pop
fistpl
loopne
cwtl
xlat
or
jns
sbb
xchg
fldt
mov
sub
jecxz
dec
enter
or
out
add
inc
roll
jae
loop
sahf
pop
shrl
bound
lock
std
fs
movsb
lret
rclb
cs
mov
or
pop
nop
adc
add
imul
sbb
cwtl
ret
push
insl
call
xchg
mov
pop
mov
mov
sub
xor
xor
add
mov
pop
dec
mov
mov
inc
std
and
xorl
ljmp
mov
int3
enter
cld
sub
lcall
mov
inc
mov
sub
mov
bound
jae
lock
lret
imul
xlat
or
shlb
dec
jle
jp
in
add
jb
ljmp
add
xchg
mov
adc
inc
andl
or
mov
or
push
es
jg
cmpsl
out
leave
ss
inc
movsl
stc
je
faddl
popf
fdiv
jns
int3
mov
push
xchg
es
pushl
mov
sbb
add
push
push
dec
mov
cld
push
fwait
pop
sbb
mov
js
jno
mov
lds
xchg
xchg
push
mov
dec
xor
out
xor
pushf
add
xor
adc
pushf
movsb
pop
cld
jge
and
addb
and
or
inc
mov
stos
fwait
out
add
sub
push
pop
cmp
sub
leave
adc
add
negl
push
in
mov
scas
xor
mov
mov
lods
add
push
push
pushf
dec
xchg
add
test
mov
adc
pop
test
pop
out
in
dec
pop
xchg
pop
xchg
inc
mov
sub
sbb
shll
xchg
mov
or
and
call
adc
lods
pop
insl
movsb
and
cmp
and
push
nop
mov
pop
popf
mov
outsb
push
add
in
push
mov
popf
cltd
mov
out
jge
adc
adc
data16
and
sbb
adc
sbb
aaa
push
call
cmpsl
cmpl
add
mov
push
cmp
fldt
or
pusha
push
lods
push
mov
mov
cmp
les
movsl
es
adc
mov
xor
jbe
mov
aam
xlat
pop
xor
imull
adc
xor
fmul
int3
inc
add
dec
cmp
add
iret
in
rcrl
cmpsb
loopne
push
push
fsubp
dec
or
stc
das
push
mov
pop
adc
mov
popf
jmp
jge
mov
cmp
icebp
mov
adc
sub
rolb
loope
cwtl
mov
daa
adc
icebp
cmp
clc
ja
hlt
cmc
mov
ljmp
movsb
addb
repnz
mov
mov
loopne
fcompl
push
loope
enter
lock
ror
inc
or
nop
loope
mov
pop
xchg
das
scas
and
mov
or
push
repnz
adc
inc
ret
pop
mov
push
test
std
pop
in
dec
mov
sbb
paddb
xor
dec
dec
sbb
repnz
and
pop
lock
aaa
and
mov
push
cmpsb
push
roll
push
ja
sbb
and
cmove
jo
and
lea
ret
dec
nop
mov
push
stc
inc
nop
mov
gs
lods
push
mov
inc
rcrl
in
mov
in
pop
and
cmpsb
push
lods
movsb
push
adc
jnp
push
cmp
leave
push
mov
mov
out
pop
fldt
ja
je
mov
inc
imul
pop
fwait
pop
cli
sbb
mov
pop
jne
adc
mov
mov
inc
mov
lret
loope
sbb
scas
por
cmp
fdivrp
xchg
cmp
pop
mov
mov
jno
icebp
xchg
dec
aas
mov
outsb
cmp
test
adc
mov
call
jo
sub
dec
push
mov
mov
lahf
jp
adc
scas
loopne
sar
jnp
pop
xchg
add
mov
sbb
pop
lods
test
xor
inc
aaa
mov
sub
cmc
inc
cmp
int3
dec
lret
ja
sar
cmp
and
mov
add
rsm
add
data16
insb
cmc
pop
sarl
add
bound
or
cmp
arpl
jl
pop
inc
idivl
ret
dec
pop
mov
dec
sub
fidivl
pop
sbbb
mov
dec
jmp
add
and
push
jnp
mov
mov
pop
cmp
push
add
xor
mov
and
jmp
rol
xchg
adc
testb
pop
jecxz
xlat
and
xor
ficoml
lret
lods
js
gs
jb
mov
fwait
mov
xchg
and
sub
aas
sub
sahf
icebp
cmp
cwtl
adc
mov
dec
into
loopne
popa
xor
je
rcll
loopne
add
inc
adc
test
jns
push
jg
jne
repz
jae
cmp
frstor
inc
push
jmp
aam
and
frstor
mov
js
dec
cli
mov
inc
xchg
adc
cld
push
inc
sbb
inc
loop
pop
mov
cmp
insb
loope
mov
sti
fisttpl
xor
or
js
add
push
xor
or
pop
inc
mov
roll
xchg
in
je
mov
jg
jne
and
sub
ljmp
inc
jp
insb
xor
push
rorb
pop
jmp
cmp
sbb
pop
xor
cmp
mov
pop
loopne
mov
popa
mov
sub
cmp
inc
and
fistpll
leave
out
push
xchg
lret
mov
outsb
add
mov
sub
inc
mov
adc
gs
and
loopne
fcmovbe
les
loopne
xor
cli
sarb
shll
mov
inc
push
in
out
mov
mov
push
jl
sbb
adc
les
inc
cmp
push
mov
mov
jno
jno
loopne
and
sbb
jge
lods
mov
rorl
leave
imul
xlat
push
lods
adc
mov
ficoms
sbb
stc
fcoms
lea
or
js
sub
adc
popf
imulb
and
cmp
cmp
inc
mov
mov
inc
fisttps
sbb
leave
mov
pop
dec
push
fisttpll
iret
clc
xlat
add
adc
jno
inc
fsubrs
test
lds
and
pop
repz
daa
and
pop
dec
xchg
jb
push
jo
or
and
xchg
mov
icebp
fldcw
jp
push
arpl
fwait
or
add
orl
jl
fsubl
adcb
dec
sahf
and
mov
in
test
mov
rcrl
hlt
fnstcw
sub
cmp
mov
mov
loop
pop
jle
inc
mov
stos
add
aas
imul
aaa
mov
call
aad
dec
xchg
fisubl
dec
xor
scas
mov
and
cmp
cmp
std
daa
xor
add
inc
xor
test
mov
test
out
lock
xor
aaa
das
mov
jge
cltd
cli
test
repnz
fistpll
insb
call
and
test
mov
sbbb
xchg
fiadds
scas
xcrypt-ofb
cmpsl
test
xchg
mov
mov
add
lock
psrad
xor
jbe
jb
sbb
pop
lea
sub
mov
push
lds
add
call
jo
jns
adc
push
sbb
jne
les
jl
sbb
scas
jl
pop
ja
shr
add
cmpsb
pop
and
jg
xor
cmpsb
push
jle
sbb
js
scas
lret
in
idiv
xor
add
cmp
clc
clc
lods
jl
mov
out
xor
ss
fld
sub
aam
lock
and
not
inc
push
stc
clc
lret
je
addr16
add
rorl
lcall
xorl
adc
sbb
mov
xor
fs
aad
clc
ret
cmp
icebp
das
xchg
lds
hlt
ss
jns
mov
ror
es
shrb
pop
sbb
sub
jg
dec
adc
fildl
cmp
imul
lea
cmpsb
or
add
mov
hlt
addr16
jle
sarl
sub
push
xlat
std
sub
xchg
jne
xchg
lods
push
dec
adc
mov
push
repz
cmp
nop
sahf
int
adcb
in
push
icebp
xchg
cmpsl
inc
icebp
mov
lds
stc
popa
out
fwait
and
clc
cltd
adc
pop
aam
xchg
lret
cmp
fwait
in
sub
cmp
fs
dec
lahf
cmc
insb
aad
jmp
add
das
sahf
and
xchg
mov
int3
ljmp
pop
ljmp
mov
bound
or
inc
insb
mov
xor
mov
cmp
inc
jg
loopne
jp
les
add
inc
xor
jns
xchg
loopne
mov
add
int
aad
or
xchg
inc
mov
push
jge
mov
ds
inc
or
je
adc
nop
and
in
jnp
cwtl
enter
mov
mov
hlt
dec
inc
stos
pop
xor
pusha
jne
mov
cltd
mov
iret
loope
fbld
fisttps
fs
inc
push
inc
adc
mov
fcoms
pop
adc
push
cmp
xchg
xor
test
jecxz
mov
insl
sbb
jle
mov
mov
dec
push
stc
push
nop
clc
sbb
mov
push
int3
adc
loopne
and
mov
and
add
incl
fwait
adc
sbb
out
test
push
popa
in
movsbl
call
ret
sub
enter
pop
push
xor
clc
inc
pop
in
test
mov
pop
and
fwait
pusha
lods
inc
aad
clc
mov
push
dec
mov
push
inc
xchg
mov
push
movsb
fxch
adc
mov
je
pop
pop
xchg
sub
and
shlb
xchg
or
push
daa
cld
rcr
jmp
ror
hlt
shrb
sub
add
shrl
pusha
pop
xor
in
mov
fmul
jl
jb
push
pop
mov
pop
add
cmp
imul
and
addb
std
dec
mov
jo
pop
add
loope
sahf
lea
pushf
jae
pop
js
je
xabort
fcmovnbe
add
cli
cltd
push
in
je
in
dec
ret
jge
and
je
idiv
shlb
jne
or
paddq
push
nop
lea
imul
sahf
pop
add
sub
and
mov
inc
lock
inc
popw
loope
pop
or
pop
jle
icebp
cmp
icebp
imul
insb
std
xor
xor
fs
loopne
mov
mov
pminub
push
dec
cmp
and
addb
mov
call
xor
stc
nop
sbb
je
push
mov
jmp
add
add
sub
push
jns
push
inc
jne
leave
mov
push
lods
dec
je
outsb
rclb
lods
testb
mov
adc
lds
pop
cmp
mov
enter
add
daa
jo
lea
add
hlt
aad
add
xor
in
dec
ret
das
adc
mov
xchg
lcall
add
add
dec
lods
dec
pusha
pop
loopne
dec
xchg
dec
cmp
add
imul
pop
call
cltd
pop
mov
mov
jo
insb
loope
dec
das
and
sub
sahf
push
dec
adc
xchg
xlat
dec
out
pop
lret
cmc
icebp
daa
jns
add
mov
push
add
dec
jne
mov
adc
dec
ret
sbb
aad
test
mov
std
mov
pop
adc
dec
dec
gs
in
movsb
bound
pop
mov
mov
or
rcll
inc
das
fidivl
or
mov
push
inc
xchg
jle
dec
das
stc
mov
jle
loope
mov
loopne
sahf
fnstcw
dec
mov
push
fimuls
ljmp
cmp
push
sbb
push
stc
aam
xchg
xrelease
daa
sarb
insb
aaa
insb
mov
mov
ret
enter
sbb
test
mov
arpl
jno
xchg
aad
adc
dec
cli
xchg
mov
or
fwait
mov
push
inc
adc
or
or
and
mov
push
and
sbb
add
mov
jp
fistl
cmp
stc
jmp
int
divb
imul
dec
lcall
sub
adc
stc
ret
cs
insl
pop
hlt
mov
jecxz
fsts
das
lods
add
xchg
mov
bound
popa
decb
mov
push
mov
xor
cmp
push
sub
shrb
lea
cmp
pop
mov
outsl
push
add
mov
test
cmp
push
pusha
mov
or
add
inc
inc
in
and
popf
iret
pop
sub
cwtl
addr16
mov
pop
dec
add
dec
es
xchg
push
inc
stos
mov
or
xor
cli
mov
xlat
mov
inc
pop
jmp
xchg
push
push
ret
and
inc
pop
mov
lods
fmul
cltd
push
xchg
push
jo
push
or
jbe
pop
or
dec
mov
test
jg
lock
icebp
pop
clc
jecxz
shrl
sbb
divb
clc
adc
and
xchg
int3
loopne
jp
pop
fadds
add
clc
and
jmp
out
inc
mov
orl
xchg
xlat
out
or
push
jae
imull
jo
adc
ss
xchg
mov
xchg
jmp
loop
push
adc
loopne
test
shlb
push
orl
into
outsb
mov
ror
jbe
loope
aas
mov
xchg
mov
mov
pop
mov
fdiv
jp
rcrb
daa
jecxz
ret
mov
push
scas
add
dec
stos
cmp
sub
mov
es
repnz
subl
neg
imul
cmp
idivl
pusha
push
mov
fildl
push
insl
and
xor
mov
pop
test
xorb
adc
ja
ljmp
adc
aaa
or
sub
xchg
cmp
push
xor
jge
pop
nop
add
icebp
jbe
add
in
cmp
push
or
cmp
rol
pavgb
enter
sbb
push
adc
test
pop
cltd
sbb
loop
mov
and
imul
shlb
sahf
dec
jne
inc
int3
inc
mov
pop
lcall
xorb
jno
inc
push
mov
add
cmp
movsl
ficoml
mov
fwait
dec
test
ljmp
mov
mov
mov
into
sub
test
hlt
mov
addr16
mov
ljmp
jne
hlt
xlat
fcoml
xor
leave
add
mov
repnz
xchg
stos
mov
push
test
outsl
jl
ret
mov
hlt
cs
addr16
cwtl
add
das
out
xchg
xchg
inc
sub
pop
scas
push
stos
clc
in
shrl
stc
mov
rolb
arpl
add
sub
push
jmpw
ljmp
push
add
popf
repnz
rorb
xlat
repnz
and
fwait
repz
sub
or
push
sbbl
clc
js
fcomip
dec
fisttpl
or
shrb
movsb
cld
mov
fs
in
add
cmp
adc
inc
fwait
push
lahf
rorb
lds
xor
and
insb
cmc
dec
fistpl
fstps
fldcw
and
mov
fmuls
jo
daa
cmp
mov
mov
inc
push
dec
ds
aam
lcall
mov
sbb
js
sub
divb
xchg
jle
jecxz
popf
dec
testl
jge
in
imul
jmp
mov
cld
dec
pop
lods
dec
lea
aam
mov
push
fstl
fcom
add
xchg
stc
iret
and
lea
inc
adc
in
lock
xchg
jo
add
mov
sbb
sahf
jne
jns
dec
pop
adcl
dec
loop
xor
shl
jae
jmp
xchg
ret
push
dec
call
or
sub
push
loope
pop
adc
in
or
adc
movsb
lret
pusha
clc
mov
sub
jge
cmp
jecxz
push
das
fstps
sub
cltd
das
mov
cwtl
push
mov
insl
xchg
std
xor
sbb
rclb
out
popf
cmp
in
pop
dec
xchg
std
in
jno
xchg
lcall
addl
cmp
sbb
sbb
mov
and
and
push
sbb
dec
cli
test
add
rcll
nop
cmpsb
fdivr
pop
xchg
xor
dec
dec
cmp
incl
adcb
std
fdivrs
mov
smsw
dec
xor
lock
call
fidivrs
cmpb
pop
lcall
lea
filds
daa
jnp
loop
lock
adc
addr16
scas
out
xchg
sahf
hlt
xor
imul
orb
dec
xlat
sub
mov
adc
stos
shll
sbb
sahf
aaa
sbb
adc
hlt
sbb
lret
mov
cmp
mov
fsubrs
in
pop
js
or
or
loopne
mov
lret
vmread
jle
movsb
jb
je
mov
xor
ds
filds
mov
pop
inc
mov
leave
hlt
pop
inc
mov
mov
js
jmp
jl
lret
imul
andb
test
push
adc
inc
std
les
icebp
loopne
movsl
in
cmpsb
test
rcrl
adc
ficoms
and
adc
mov
or
mov
insb
sarb
and
jmp
pop
mov
push
xor
mov
cmpsw
and
hlt
adc
xchg
cltd
jns
test
mov
arpl
pushf
add
inc
das
inc
repz
mov
test
js
adc
aam
cld
les
rclb
mov
ljmp
je
cmp
fdivl
push
sbb
cmp
sub
cli
adc
lods
lret
mov
jns
push
arpl
subb
ja
pop
jl
mov
dec
cmp
jno
pop
xchg
mov
inc
jae
test
scas
or
and
push
lods
js
or
loopne
addr16
mov
test
loop
punpckhbw
daa
data16
xlat
js
jp
add
mov
stos
cmpsl
push
lret
add
mov
mov
shll
stc
sub
xchg
test
scas
repz
hlt
xchg
cmp
push
inc
test
leave
sti
sbb
outsb
rolb
sub
aas
inc
dec
add
mov
xor
shrb
incl
lock
movsb
push
jne
pop
cli
dec
sub
cmp
sbb
jns
mov
push
dec
inc
mov
and
jns
fcoms
shlb
sub
lock
xor
jecxz
arpl
pop
or
dec
js
add
pop
push
add
aad
sbb
daa
push
in
bnd
push
inc
add
pop
or
imul
inc
push
es
pop
xor
sub
push
jl
add
ljmp
sbb
aam
mov
or
jl
fidivs
sub
bound
cs
push
fistpll
sarb
data16
mov
add
adc
mov
sub
pop
jecxz
xchg
lret
jmp
icebp
aad
xor
movsl
inc
dec
movsb
inc
sahf
cmp
xchg
mov
cmc
push
add
xchg
sahf
pusha
ljmp
add
jno
xchg
sbb
pop
pop
jne
or
stos
jle
ret
push
pop
push
xchg
cs
loopne
push
ljmp
js
sub
aaa
leave
fidivrs
pusha
adc
and
jns
sub
add
jno
add
rcr
add
pop
push
adc
sub
sbb
pop
inc
push
out
loop
mov
xchg
xor
sbb
scas
jle
jg
gs
sbb
pop
add
fdivrs
or
movsl
or
stc
rcrl
mov
loop
or
call
xchg
xchg
scas
cmp
pop
outsl
movsb
subl
aaa
jp
cmp
inc
inc
and
fstpl
adc
cmpsb
ret
sbb
dec
adc
pusha
aam
push
or
mov
inc
ds
out
fwait
data16
lock
xor
xor
push
ss
fimull
mov
pushf
lea
mov
sbb
and
pop
mov
arpl
pop
inc
sti
xchg
stos
and
push
pop
jbe
outsb
in
fists
mov
mov
faddl
cmpsl
mov
mov
leave
in
mov
ret
scas
loope
je
dec
mov
int3
lret
div
insl
popa
imul
subb
mov
xchg
aas
mov
fwait
push
lock
rorb
mov
test
inc
jl
js
add
push
aas
jl
sub
cmp
jg
push
imul
mov
jp
sahf
ds
lahf
sub
sub
mov
or
dec
leave
clc
mov
fiaddl
mov
das
xorl
mov
inc
pavgb
pop
inc
sbb
mov
pop
popa
inc
pop
push
sub
pop
push
xchg
dec
orb
stos
mov
je
push
inc
mov
jne
and
out
jo
push
das
xlat
mov
sub
push
scas
jno
or
js
push
jg
jmp
sbb
stc
mov
pop
aas
test
push
xor
push
xchg
dec
push
sbb
stc
xor
mov
imul
cmpsl
js
lret
outsl
sub
or
sbb
mov
inc
sbb
jo
push
and
sub
cmp
and
jne
addb
add
inc
repnz
jmp
jle
mov
das
int
rorl
cmp
or
and
outsb
lods
push
sub
xchg
mov
push
std
sub
sbb
leave
icebp
mov
add
pusha
cltd
or
rolb
adc
fsub
push
les
inc
mov
pop
out
bound
icebp
cmpb
add
pop
dec
cmp
adc
clc
in
rcrb
cld
adc
push
mov
lsl
mov
xor
pop
aam
cmp
jae
add
lock
sbb
cmp
sbb
jge
cmp
push
and
fmulp
push
push
leave
push
pop
shlb
adc
xchg
adc
pop
sti
xchg
ljmp
add
add
in
adc
adc
add
cmp
lea
test
fldl
jnp
xchg
rcr
or
lock
clc
sub
push
arpl
js
add
int
pop
cmpl
movsb
es
fs
sbb
int3
addl
mov
pop
nop
or
xchg
pop
jle
arpl
inc
and
push
es
call
loope
mov
aad
pusha
outsb
sub
mov
add
ror
aam
cmpsl
into
dec
inc
dec
lds
jecxz
or
push
fbld
mov
clc
ficompl
shl
mov
enter
test
jo
lea
sub
mov
cs
pop
notl
pop
or
jo
jge
sub
push
mov
cmp
adc
and
sub
sarl
push
add
dec
out
xchg
out
push
nop
sub
or
pop
cmp
mov
sti
movsb
xor
xchg
add
in
call
inc
lret
aas
outsl
addr16
rcrb
inc
divl
addb
jmp
pop
in
pop
rolb
push
subl
sbbl
xchg
jnp
mov
scas
loope
add
nop
inc
push
pop
hlt
inc
mov
sti
pop
aaa
mov
nop
movsl
icebp
lock
lods
inc
sbb
push
sub
outsl
pop
popf
faddp
dec
sbb
and
aad
nop
shrb
neg
data16
test
push
fisubl
js
mov
jno
gs
pop
stos
mov
adcb
arpl
pop
push
in
jne
pushf
cwtl
add
or
push
jbe
push
push
mov
les
gs
jg
lods
js
sub
lods
loopne
hlt
adcb
xchg
inc
daa
cwtl
outsb
push
repz
call
rclb
add
outsb
sub
add
pop
xchg
mov
fldt
mov
push
dec
js
sti
test
jg
or
cli
jmp
pop
and
adc
jmp
inc
cld
ret
cltd
outsb
jl
sti
adc
inc
je
stc
out
cld
ret
jle
mov
inc
and
pop
mov
cwtl
jmp
mov
and
mov
cmp
vpmacsswd
je
test
mov
loope
cmp
das
stos
inc
cmp
popf
lock
lea
mov
rorl
ljmp
dec
xchg
shrb
mov
in
xchg
lock
adc
lds
push
mov
insb
icebp
sbb
add
cwtl
fcmovbe
mov
and
jae
rclb
jns
hlt
xchg
jbe
in
je
xor
lahf
jns
notb
add
call
mov
or
fnsave
cld
and
push
adc
sbb
adc
push
mov
lea
sub
mov
ret
cli
and
push
enter
mov
cmp
leave
xor
pop
les
fstpt
cmp
inc
pop
jl
pop
pop
inc
push
xor
pop
mov
jne
loopne
cmpl
popl
pop
scas
xlat
jmp
inc
fdivs
pop
loope
xchg
fucom
dec
in
out
out
scas
mov
mov
and
cmc
testb
dec
je
fistps
push
notl
roll
iret
fwait
pop
int3
jne
sbb
adc
mov
mov
andl
inc
adc
adcl
inc
dec
fiadds
movsl
lds
pop
xchg
add
int3
jp
or
xlat
add
pop
and
cmpsb
aaa
cmp
cwtl
fimull
pop
aas
sti
cmp
xlat
rcrl
cli
loopne
jmp
es
pop
mov
rorb
enter
in
cmpsb
mov
imul
jb
xor
call
xor
rcrb
mov
mov
sub
add
sbb
push
test
jl
sbb
fiaddl
shrb
and
icebp
adc
jne
add
jle
repz
sbb
or
loop
cmc
xchg
lret
lahf
hlt
push
lret
sti
loop
jno
enter
xor
xchg
sahf
and
cmp
movsb
add
test
add
out
icebp
mov
outsl
mov
stos
mov
je
push
mov
lods
jne
stos
fisubrs
rcrl
mov
cmc
andl
adc
arpl
out
inc
dec
jl
decb
out
iret
or
jnp
jb
stos
cmp
cmpsb
mov
aad
cmpsl
aam
push
jbe
fbld
and
xchg
push
out
loop
dec
adc
push
lock
cwtl
or
fmuls
clc
inc
imul
out
jmp
loope
xchg
nop
mov
popa
popf
sub
sub
and
mov
mov
or
movsb
lret
xor
sbb
lds
xchg
out
push
or
fs
fbld
mov
mov
mov
cs
xchg
or
jne
mov
xor
xchg
jle
ret
xchg
dec
inc
dec
jp
mov
aad
push
pop
xchg
sbb
adc
push
dec
dec
sbb
lds
add
mov
repz
add
call
xchg
jmp
ljmp
ja
push
ja
pop
mov
lock
mov
in
ret
dec
inc
aad
aaa
pop
sbb
nop
add
add
push
xchg
iret
xchg
add
leave
rolb
mov
sbb
mov
pop
sbb
pop
lcall
clc
mov
dec
push
sub
fistpl
xor
fwait
aam
or
sub
and
mov
loop
xchg
cmp
lods
mov
test
pop
sub
inc
test
insl
mov
aad
rcll
call
push
xchg
push
mov
leave
xor
jle
xchg
mov
add
push
mov
loopne
lea
push
dec
rorl
push
outsb
adc
cmp
insb
mov
push
push
fs
cmpl
adc
scas
mov
xlat
sbb
and
pop
mov
fiaddl
sub
cmpb
icebp
loop
pop
fsubrs
adcb
js
adc
mov
jge
fmuls
jne
rol
orb
in
jl
xor
jne
or
pop
jmp
adc
mov
inc
pop
into
xor
fmull
or
rcrl
sbb
add
xchg
add
in
aam
test
push
inc
jge
cmp
pop
shlb
push
aam
pop
pop
in
and
mov
lods
or
jecxz
subl
loope
mov
fbstp
jb
and
test
cmp
push
add
enter
ja
pusha
xor
js
sahf
mov
rorb
in
adc
popa
fs
int
fwait
shrl
xchg
and
mov
subb
adc
out
mov
lret
cli
adc
mov
rcll
jl
add
mov
dec
pop
loope
mov
stos
lea
xchg
lods
lea
jl
xchg
aas
popa
sub
popf
push
sbb
jo
outsb
leave
insl
lods
push
jmp
lds
mov
push
cli
mov
pushf
stos
hlt
or
sbb
lahf
scas
dec
insb
pop
nop
arpl
xchg
or
imul
loope
jae
mov
fildl
xchg
adc
in
sbb
and
stos
or
imul
jne
and
cmpsl
popa
pop
and
jae
ret
popa
xor
cmpl
pushf
icebp
push
adc
lea
xchg
lods
out
aas
dec
lods
and
sub
push
adc
cmp
push
out
xor
sub
or
adc
daa
addr16
xor
jae
xchg
into
test
in
movsb
mov
cbtw
aas
mov
imul
push
jg
clc
rcr
sbbl
sub
pop
xor
ret
add
cmp
and
arpl
mov
push
lock
repz
leave
loop
jge
and
adc
cmpsb
mov
lahf
shr
mov
inc
pop
das
insl
mov
aaa
nop
push
stos
cld
repz
and
cmp
lea
in
xchg
fdiv
xchg
xor
mov
adc
pushf
dec
pop
loop
mov
js
jge
test
cmpsb
lods
adc
xor
add
add
js
fisubrl
shrb
orb
push
xchg
xor
stos
mov
push
imul
fstps
pop
sbb
sbb
lea
sbb
cmc
sub
rolb
out
add
lods
ret
cld
mov
and
cmc
add
and
fdivl
sbb
sbb
rcrl
mov
fdivl
push
pop
dec
cmpsl
push
mov
dec
in
stos
stc
mov
std
jno
mov
nop
imul
or
jns
ficomps
ds
push
jmp
pop
mov
jmp
dec
clc
das
sbb
sub
add
cmpsl
fidivrs
mov
xchg
int3
lea
ficompl
cmpsl
sahf
push
add
mov
jnp
jge
cltd
leave
adc
lock
lret
pop
insb
sub
xchg
and
mov
shll
add
int
push
icebp
pusha
or
jecxz
cmp
add
je
cmp
pop
sub
mov
mov
leave
or
insb
bound
cmp
add
jnp
or
in
cmp
adc
push
sbb
mov
push
sub
xchg
cli
pop
sbb
cmpsb
std
aaa
idivl
pop
shll
jle
mov
iret
xor
adc
push
ficompl
cs
push
jge
shr
rorb
mov
mov
mov
pop
mov
adc
mov
mov
push
pop
outsl
jno
and
sub
addl
leave
inc
sub
js
mov
test
lcall
fdivrs
addr16
stos
inc
insl
test
outsb
dec
pop
xor
popa
nop
mov
cmp
xor
mov
sub
in
add
shrl
xchg
mull
loop
int3
fprem
dec
mov
push
ds
cltd
divb
lock
dec
roll
jle
sub
pop
hlt
add
call
jle
xchg
lahf
cli
push
fwait
sarb
push
cmp
popf
pop
sbb
mov
popa
and
dec
push
jo
pop
lock
and
fidivrs
mov
ljmp
scas
lea
dec
clc
sbb
cmc
add
pop
jns
jl
xorb
push
icebp
xor
sub
and
iret
dec
cmp
test
xchg
inc
push
negb
xchg
cmp
add
mov
insb
pop
cmp
es
cmp
pop
lock
pop
inc
mov
in
jl
push
jb
or
mov
xchg
scas
psllw
insl
shll
sbb
sahf
or
inc
dec
cld
mov
nop
inc
add
ret
in
fwait
shlb
push
push
pushf
test
adc
xchg
mov
inc
loope
jl
stc
add
fisttps
jl
lea
mov
mov
repz
push
imul
inc
sbb
mov
push
cmp
andl
loopne
in
cmc
mov
add
xlat
push
dec
pushf
xor
stos
pop
mov
mov
mov
or
sahf
sbb
push
in
jne
sti
icebp
pop
mov
mov
adc
outsl
pop
xor
aad
cmp
rcll
adc
or
inc
clc
jg
mov
adc
cmp
or
dec
fimuls
inc
inc
ljmp
mov
jg
pop
je
or
mov
mov
stc
add
loop
clc
pusha
aad
ljmp
out
pcmpeqd
cmp
decb
bound
add
mov
adc
outsb
mov
mov
shll
test
pop
and
outsb
jne
jae
lock
lea
add
lods
adc
es
leave
pop
scas
jmp
mov
adc
cli
sbb
mov
mov
mov
add
fimull
adc
add
insl
sbb
jbe
sahf
sub
ret
stc
dec
std
test
cmp
push
mov
jg
gs
fwait
jle
jg
cmc
xor
nop
sub
cmp
inc
or
mov
bound
sahf
popa
jne
inc
rcrl
pop
xchg
mov
insl
push
push
shlb
and
add
pop
jno
xchg
push
test
pop
out
mov
nop
xchg
jno
ret
clc
add
fs
mov
mov
mov
clc
inc
dec
lahf
mov
shlb
cwtl
ds
adc
inc
mov
ret
push
jp
fwait
mov
loopne
icebp
shll
dec
test
aad
cld
arpl
jbe
ja
mov
jmp
lahf
push
mov
cmc
cmp
cwtl
je
daa
loopne
xlat
lret
cmp
out
xor
cmp
cmpsb
push
jae
mov
lea
adc
hlt
mov
in
pop
jg
mov
orl
ret
pop
mov
adc
cmc
mov
notl
cmp
sub
cld
pusha
adc
mov
lock
xchg
xchg
call
outsl
je
lret
xlat
pop
adc
jge
mov
mov
push
xlat
data16
popa
notl
sbb
loopne
inc
jae
in
pop
shrl
sarb
mov
jo
add
cmp
bound
iret
pop
pop
jecxz
test
mov
flds
and
movsl
lock
inc
jg
add
lock
int
xchg
scas
call
jl
or
sbb
insb
insl
sbb
rsm
mov
adc
stc
xchg
test
mov
mov
cmp
jne
and
add
push
lods
sbb
mov
mov
jae
add
jb
mov
cmp
mov
mull
js
push
cld
or
inc
mov
sarl
jns
mov
int
sbbl
nop
pushf
xchg
xchg
pop
jae
shl
mov
js
add
in
add
mov
ljmp
mov
pop
push
or
add
push
repnz
imul
cmp
or
dec
mov
pop
cmpsb
jmp
cmpsb
iret
pop
ljmp
mov
pop
pusha
xor
push
mov
jle
add
shl
push
pop
push
cmp
shrl
movl
dec
cs
mov
sbb
inc
lret
pop
pop
fs
sbb
inc
shll
fmull
add
andb
pop
scas
or
inc
clc
cmp
dec
movsl
add
xchg
push
flds
mov
std
xchg
mov
notl
inc
jbe
or
stos
inc
movzwl
sbb
loope
stc
inc
xor
dec
and
adc
sarl
lcall
lds
scas
xchg
jnp
lds
lea
push
or
ret
and
arpl
xor
add
pop
inc
rcrb
lods
jae
scas
ss
or
repnz
cmp
mov
cmpsb
adc
sub
xlat
jge
rcrb
inc
int
adc
push
jmp
call
or
mov
adc
popa
push
sbb
mov
inc
cltd
outsb
add
and
sub
aas
int
dec
clc
ljmp
insl
sub
dec
gs
cmp
ret
push
cmp
lahf
pusha
gs
jl
or
fldenv
or
push
inc
mov
shlb
test
add
and
xchg
inc
inc
clc
fisubrl
pop
mov
lock
sub
pop
pop
inc
jae
roll
sbb
push
icebp
and
cmc
sbb
cmpsb
in
pop
xor
stos
pushf
cli
cmpl
ds
test
aad
jno
cmp
push
sub
pop
push
jne,pt
xorl
jmp
cs
sahf
pop
xchg
sbb
pop
adc
mov
ficomps
inc
outsl
cmp
mov
shll
mov
vsubsd
rcrl
push
popa
mov
incb
push
das
dec
out
test
hlt
and
jbe
ss
stos
jnp
jge
insb
or
xchg
addl
xor
pop
je
xchg
movsb
out
or
je
rcll
mov
add
fbstp
sbb
jne
push
dec
ret
mov
mov
jp
inc
in
mov
pop
lahf
and
mov
jo
outsb
mov
xor
mov
mov
loopne
stc
loopne
test
push
add
lods
jb
jl
sahf
mov
jmp
jns
cwtl
lds
lock
int3
push
jno
ljmp
in
sahf
andl
dec
sub
in
shll
pop
jo,pn
aam
std
sarl
mov
jp
cmp
add
jp
inc
sbbb
xchg
clc
push
pusha
mov
xor
rcrl
clc
sbb
inc
push
push
sub
scas
inc
and
cs
inc
roll
mov
test
cld
test
fwait
clc
cmp
xchg
pop
mov
adc
stos
jg
mov
push
sub
or
shrl
rcrb
hlt
insl
in
cli
fimull
sbb
mov
in
pop
fs
popf
push
xchg
push
adcb
stos
push
cmp
hlt
cmc
cmpsl
jecxz
push
push
iret
stos
inc
inc
xchg
xor
arpl
std
test
pop
push
or
push
inc
and
adc
dec
das
or
and
fadds
ds
xchg
sbb
xor
sahf
sti
pop
dec
mov
mov
push
aam
mov
aaa
jb
sbb
movd
imul
adc
mov
ret
pusha
mov
mov
push
mov
xor
adc
adc
mov
ror
jecxz
daa
int3
hlt
fld
out
jmp
xor
fdivr
movsl
out
aam
and
xchg
mov
int
pop
fcompl
cld
cmp
push
loopw
js
dec
xchg
add
push
adc
ljmp
push
loopne
aas
cmp
and
push
push
arpl
mov
adc
sahf
stos
cmp
popf
jne
add
loop
add
lds
fcmove
dec
xchg
sbb
cli
adc
mov
mov
clc
repz
scas
fistl
out
pop
mov
add
inc
repnz
cmpsl
loope
ja
jne
lock
xchg
in
mov
push
add
cmpsb
aad
sbb
push
xchg
or
ret
subl
or
sbb
jl
ror
sbb
or
movsb
inc
clc
push
cld
das
sysenter
jecxz
adc
inc
mov
jns
sarb
push
mov
jo
xor
dec
cmp
cmp
mov
cmc
xchg
fucom
push
cmpsl
rcrb
pop
add
xchg
in
ds
pusha
push
or
stos
or
inc
adc
outsb
push
ret
adc
or
in
xor
or
pop
loopne
scas
repnz
sti
clc
lods
sub
ret
ds
fsubrp
lcall
rcl
push
stos
xchg
cmpsl
mov
cmp
xchg
ja
call
mov
in
or
nop
test
adc
add
or
pusha
cld
xchg
and
adc
cwtl
mov
mov
es
or
pushf
ror
aas
cmpsb
push
jne
cmp
div
test
ja
or
popa
repnz
mov
and
mov
inc
mov
mov
and
xor
ret
lahf
mov
int
popa
sbb
sub
bnd
and
pop
adc
xchg
or
data16
jl
mov
or
movsl
xchg
adc
scas
out
dec
icebp
gs
cmp
js
mov
xor
loop
mov
mov
pop
push
inc
sbb
subb
mov
ljmp
aaa
pop
sahf
int
jae
daa
mov
jno
jge
push
ljmp
cwtl
insb
dec
pop
in
add
add
mov
lock
adc
data16
movsb
add
or
ja
ljmp
es
popa
packsswb
add
xchg
and
mov
mov
add
jge
push
mov
jne
and
push
pop
pop
decl
clc
mov
or
pushf
inc
dec
mov
jne
sbb
xor
stos
div
cmp
ds
sub
jo
ret
or
adc
cmp
push
mov
imul
push
pop
inc
shlb
popa
xor
ret
in
push
cmc
push
mov
scas
movsl
pop
xchg
adc
xchg
clc
add
adc
add
xchg
andb
arpl
clc
loop
pop
jnp
mov
or
in
test
xchg
ds
idivl
hlt
xor
or
ljmp
mov
loope
lock
out
push
cld
rcrb
mov
pop
inc
mov
test
mov
or
add
push
out
jb
loopne
fnstenv
xchg
enter
mov
popa
mov
das
xchg
add
subl
sbb
ret
push
pop
in
push
xchg
inc
add
jno
cmp
add
lret
cwtl
out
leavew
add
lock
jnp
lods
fmull
and
je
or
jno
popa
rolb
jl
cld
pop
cmc
dec
imul
ss
or
sub
divb
stc
and
mov
xor
push
loop
cs
aas
and
aas
test
pop
push
push
push
or
mov
jo
mov
jge
mov
xor
jo
sbb
mov
cmpl
lds
fdiv
dec
subl
enter
ja
xchg
testb
aam
or
lods
inc
addl
mov
jecxz
inc
add
cli
hlt
outsb
xor
inc
xchg
clc
test
sbb
dec
imul
adc
ds
adc
sbb
lret
inc
nop
mov
push
pop
in
mov
insl
movl
test
hlt
lds
lcall
lea
jp
xchg
ret
subl
das
stos
subl
mov
jg
rol
aaa
mov
dec
cmp
pop
imul
jb
inc
inc
push
mov
dec
lods
icebp
ffree
and
les
cmc
mov
mov
stos
and
or
xor
movsl
mov
loope
mov
dec
sbb
mov
cmpsb
stc
or
fld
test
sub
mov
cli
jae
mov
add
add
movb
push
add
ljmp
jnp
dec
pop
loop
call
iret
fadds
ds
mov
jl
shl
pop
fidivs
rclb
mov
pop
xor
arpl
stc
pop
cmp
mov
inc
faddp
xor
ja
jno
jecxz
mov
or
outsl
loop
mov
repnz
fimuls
insb
lea
lret
cmp
dec
dec
sarb
add
mov
cmp
movsl
sub
xchg
icebp
mov
bound
rcll
cmovne
adc
mov
out
sub
dec
loopne
cmpsl
pop
dec
rol
repz
loope
cltd
xchg
sub
popa
xor
loop
mov
imul
pop
jno
push
aam
in
jmp
pop
adcl
inc
pop
pop
psllw
xchg
mov
mov
jle
sub
jnp
andb
cwtl
clc
mov
fistpll
cmp
cmp
dec
fildll
pop
xor
shl
pop
push
jnp
std
xchg
add
aas
adc
shl
stos
xor
inc
jg
adc
imul
sbb
add
loopne
fcom
adc
addl
mov
push
negb
movsb
push
mov
lret
mov
jecxz
xor
mov
push
stc
mov
pop
xchg
rolb
loop
movsb
push
xchg
cltd
push
cmc
je
pop
pop
je
and
je
xor
test
ss
sahf
cmp
call
cmpb
loopne
test
cwtl
mov
adcl
xor
enter
inc
fwait
aas
inc
in
or
cli
xchg
out
ds
ret
lods
nop
repz
aaa
mov
cmp
sbb
pop
adc
cs
pop
je
mov
orb
add
loope
loopne
mov
xchg
test
test
push
inc
cmp
xlat
sbb
push
jno
adc
add
repnz
das
mov
sub
mov
outsb
cmp
jne
into
dec
jb
insb
push
push
add
jge
mov
pop
pop
pushl
push
popf
cli
sbb
jmp
and
pushf
icebp
sbb
inc
push
jl
sbb
fisubl
jl
mov
loopne
pusha
inc
leave
mov
xor
enter
aam
nop
push
sub
test
popf
xchg
dec
js
pop
outsl
loop
lock
pushf
insl
rcrb
imul
and
dec
mov
mov
xchg
aas
push
rorb
xor
daa
xchg
out
push
insb
or
lock
inc
imul
mov
xor
jno
and
clc
jo
push
ret
clc
push
sarb
jnp
pop
sub
dec
and
icebp
fisubs
dec
clc
xchg
jo
mov
aas
mov
mov
in
xchg
jge
pop
fcomp
sti
cld
push
xor
cmpsl
xchg
mov
cmpl
mov
mov
push
mov
sub
pop
cli
sbb
stos
sub
je
rcrl
push
fimuls
repnz
push
fdivrs
aad
scas
jbe
dec
sbb
inc
and
orb
dec
loop
xor
js
cwtl
and
cmpsb
lods
sbb
out
pop
jns
dec
pusha
loop
dec
fs
stos
lea
sar
push
or
subb
loope
push
mov
sbb
push
pop
mov
je
push
test
jmp
adc
mov
jecxz
xchg
or
repz
scas
stos
adc
push
mov
cmpsb
mov
daa
clc
cwtl
daa
loopne
cmp
dec
xchg
fdivs
data16
sub
icebp
insb
or
iret
shlb
mov
clc
or
fistpl
or
push
and
enter
inc
bound
rolb
ret
movsb
and
in
enter
or
divb
js
dec
push
fimull
xor
movsb
mov
negb
push
cs
mov
dec
cmp
fucom
dec
jg
add
push
test
ret
cli
xchg
jbe
pop
pop
cwtl
into
outsb
or
ror
adc
dec
addb
pop
add
in
push
xchg
mov
jbe
sub
jns
xchg
es
mov
rcll
cs
xor
leave
bnd
es
andl
call
push
mov
inc
jl
int
push
and
icebp
repnz
add
pop
test
ljmp
jl
mov
test
shlb
movsl
jp
or
add
stc
dec
mov
cmp
mov
stos
xor
sub
dec
mov
dec
inc
jl
xor
not
int
cmp
fsubl
xorl
lcall
mov
or
loope
aad
out
loop
mov
out
arpl
xor
mov
insl
cmp
je
js
lods
cs
inc
mov
lods
push
add
je
mov
push
mov
mov
sub
and
push
or
or
add
fmuls
js
and
inc
mov
cmp
in
ss
mov
dec
test
jnp
aas
mov
je
movsb
sub
push
ds
mov
xor
rolb
rolb
insl
add
xor
fildll
andnps
lods
mov
call
jae
push
dec
sti
test
idivb
outsb
rol
jmp
jle
dec
test
icebp
adc
xchg
mov
pop
rcll
mov
xchg
pop
fsubrl
cld
mov
push
les
add
dec
jmp
jne
loope
rclb
pop
xlat
mov
pop
loopne
dec
pop
pop
pop
pop
or
or
adc
aas
cmp
ja
pop
cmp
xchg
push
es
loope
and
inc
adc
loopne
rol
adc
inc
push
xchg
popl
cli
dec
inc
xchg
mov
jg
fsubs
orb
dec
dec
mov
xor
ss
and
sbb
jnp
roll
js
and
jno
pop
sarb
cld
jg
and
cmp
aas
loop
push
dec
scas
push
pop
xlat
push
ret
push
pop
test
cmpsb
sub
sahf
stos
testb
lret
and
popa
paddusw
pop
jmp
popf
notb
addb
add
insb
jae
push
mov
push
add
inc
inc
adc
faddp
std
ja
sbbl
mov
jb
dec
push
xchg
pop
adc
iret
js
xlat
adc
adc
jae
fdivrl
shll
loopne
pop
adc
add
xchg
or
jge
imul
or
out
push
decl
lcall
bound
orb
add
rcll
dec
sarl
adc
inc
or
mov
inc
imul
pop
lock
sub
lret
popf
add
outsb
je
aam
cmc
mov
jo
cld
dec
lret
movl
jbe
scas
inc
adc
ret
pop
pop
iret
or
and
push
mov
sbb
ret
js
movsb
dec
mov
js
fisubrl
add
ficompl
and
nop
rorb
dec
push
aas
aad
ret
xchg
ficoml
fwait
add
push
pop
lds
push
sbb
in
xchg
xor
xor
popf
aad
mov
scas
or
data16
cltd
or
arpl
subl
aaa
xchg
mov
dec
je
dec
icebp
dec
movsb
sub
imul
jl
test
andb
loope
outsl
and
xor
sti
clc
pop
pop
incl
mov
mov
fwait
stos
push
cmp
enter
das
adc
jl
gs
cld
pop
mov
xchg
jmp
rcll
add
std
and
stos
stos
push
sbb
or
fstl
test
xor
stos
loope
fistps
jo
add
xchg
jg
aam
add
insb
scas
out
sbb
cmc
inc
cmp
adc
rorb
fwait
cmp
lcall
adc
or
jne
getsec
test
gs
ljmp
jmp
pop
out
jecxz
mov
call
ret
je
das
lock
fbld
je
sbb
adc
push
out
and
sbb
pop
pop
wrmsr
sbb
jo
cmp
dec
or
pushf
add
inc
aad
lcall
push
cmp
dec
cmpsb
js
pop
push
enter
lock
adc
repnz
mov
pop
xchg
nop
stos
lods
sbb
outsl
mov
xchg
mov
dec
jge
and
scas
or
movsl
add
and
andb
jmp
sarl
cmp
push
popl
or
divps
sbb
or
imul
add
push
mov
xchg
adc
int
xor
push
push
movsl
mov
xor
stc
movsb
adc
shl
in
cmp
bswap
gs
jbe
mov
xchg
push
das
pop
std
adc
push
das
repz
insl
push
xor
test
sbb
cmpsb
inc
loope
dec
sub
and
mov
sahf
inc
scas
and
jle
mov
xchg
mov
mov
icebp
mov
sub
jp
lea
lret
add
les
mov
push
sbb
shrb
repz
inc
lods
inc
shlb
or
fwait
or
dec
sub
jbe
pop
adc
pop
leave
je
loopne
pusha
dec
xlat
cld
fldt
mov
dec
cmpsl
das
fistps
cld
xchg
mull
outsl
int
add
jbe
push
fwait
test
std
add
inc
insb
sub
rcll
icebp
pop
xchg
push
xchg
mov
adc
jge
mov
push
dec
mov
inc
adc
dec
pop
push
gs
aaa
pop
mov
push
jg
cmpsb
inc
push
push
insl
pop
out
ljmp
sub
and
add
es
hlt
rorb
icebp
out
add
inc
lret
mov
push
loop
mov
xor
sbb
or
cmp
mov
out
xor
call
push
imul
shll
fcom
mov
js
add
inc
paddd
je
imul
or
mov
js
sbb
jbe
add
insl
std
into
sti
mov
push
cmp
sbb
add
mov
loopne
loope
into
rclb
dec
loopne
mov
mov
sub
nop
aas
add
pop
jp
test
jnp
mov
pop
sub
mov
cmpsb
dec
or
or
movsbl
push
sub
jl
push
icebp
ret
je
aas
push
dec
and
inc
pop
stos
add
xchg
adc
xlat
xchg
push
push
sarl
or
pop
data16
xor
dec
sub
movsl
fbstp
xchg
das
cmpsb
aas
and
outsw
adc
hlt
xchg
sub
rcpps
pushf
dec
mov
mov
dec
cld
jle
sub
std
pushl
imul
mov
mov
mov
dec
or
fprem
fisubrl
leave
adc
ss
sbbl
enter
adc
cmp
clc
movl
fs
cli
imul
lods
push
stos
imul
pop
jg
nop
cmpsb
je
or
ljmp
pop
or
sub
rcr
mov
leave
dec
popf
cmp
add
xor
add
adc
jp
jo
ret
pushf
fdivs
jge
cmc
lea
test
add
or
dec
mov
stos
test
mov
push
lcall
mov
cmp
cmpsb
inc
jle
sbb
insb
adc
mov
leave
pop
mov
es
fldt
lret
insb
fnsave
and
or
sbb
push
sub
test
call
and
sbb
sub
adc
dec
xchg
andb
dec
mov
push
popa
mov
push
push
or
fidivrl
pop
js
mov
push
shrl
fstpt
sub
lcall
xchg
inc
xor
movsb
cmc
rcr
xor
iret
in
push
les
outsl
sbb
data16
es
ljmp
xchg
mov
dec
mov
lods
in
test
push
mov
push
xor
mov
jno
stos
and
pop
mov
mov
jle
mov
mov
and
adc
das
dec
in
imul
daa
cmp
mov
and
add
fucomp
add
adc
in
or
lock
dec
push
mov
pop
in
jne
dec
aaa
cmp
xchg
mov
inc
cli
add
and
or
aaa
xchg
ret
sbb
mov
push
icebp
jno
xchg
sub
push
xchg
insb
or
mov
xchg
inc
mov
mov
in
push
inc
cmp
inc
insb
cmc
cmc
pop
xor
shll
mov
int
sbb
xor
mov
xchg
or
sbb
xchg
movsb
mov
jle
or
ljmp
imul
dec
test
and
bound
mov
dec
iret
faddl
mov
mov
loopne
jge
inc
stos
js
cs
call
aam
dec
aas
jno
push
mov
insl
fisubs
inc
push
hlt
mov
adc
aas
and
mov
lods
loope
ret
rcr
or
push
jnp
mov
jnp
test
subb
imul
incb
test
leave
or
cs
rcl
push
cmp
cmpsl
int3
jbe
iret
cmpsl
lods
add
addb
insb
ret
fisubrs
cwtl
data16
xorb
loop
stos
mov
mov
dec
dec
mov
lret
ret
xor
cmp
out
aas
stos
pop
xor
cmpsb
es
jb
les
outsb
and
movsl
xchg
movsb
push
add
nop
movsb
sti
insb
and
outsl
and
sbb
js
jecxz
inc
test
xor
lcall
pop
lea
repz
cmp
sbb
xor
pop
repnz
frstor
iret
lock
rclb
fstl
xor
adc
clc
push
pop
stos
lea
lcall
push
cmpb
rcll
lahf
pop
add
or
or
outsb
jb
shl
jb
scas
pop
lcall
mov
add
ss
xor
push
mov
push
push
cli
pop
mov
movsl
out
mov
mov
bound
or
mov
push
xchg
mov
add
xchg
outsb
sarl
xchg
or
xor
add
xlat
adc
cmpsl
cmpsb
adc
pushf
icebp
aam
mov
dec
incl
lahf
sub
push
fcomps
test
sub
xor
and
lods
js
jl
adc
cmp
jg
in
or
or
push
test
nop
push
cmp
jno,pn
add
clc
mov
xchg
out
in
xor
adc
mov
adc
or
test
pusha
sub
hlt
inc
xor
ficompl
cmp
sub
orb
out
mov
int
movsb
adc
pop
sbb
inc
pop
xchg
in
cmp
add
xchg
dec
xor
loope
mov
pop
or
mov
xchg
es
add
pop
ret
xchg
push
or
aam
fsub
insb
mov
fs
pop
popf
stos
sbb
pop
imul
and
adc
bound
and
arpl
mov
out
pop
mov
and
push
lea
lret
outsl
mov
lods
fwait
sub
pop
js
add
and
pusha
fcmovnb
ja
pop
or
pop
push
sbb
add
mov
push
or
ss
pop
mov
mov
lods
sbb
adc
cmc
test
push
pop
sbb
mov
je,pt
fwait
in
test
stos
lcall
adc
iret
clc
mov
inc
lret
mov
aas
stos
sbb
pusha
add
cld
js
mov
dec
js
bound
subb
lods
xchg
jnp
push
dec
leave
data16
fsubrs
out
cmpsb
cmp
lcall
mov
inc
adc
mov
dec
movsb
xchg
mov
lods
ljmp
icebp
mov
dec
lret
sti
cmp
int3
js
dec
fcomps
std
inc
push
inc
out
out
fnstcw
test
js
sbb
sarb
mov
sti
or
xchg
pop
popa
mov
xchg
fistpll
fst
std
and
rorb
sahf
hlt
mov
adc
jmp
jne
dec
and
pop
pop
mov
aaa
dec
stos
adc
add
into
aas
and
jb
test
dec
xor
mov
ret
pop
out
enter
or
and
das
xor
insb
mov
or
leave
cmp
fxch
mov
push
push
add
repz
lea
not
push
ds
mov
scas
inc
adc
sub
dec
cwtl
int
ret
adc
movsb
push
or
femms
js
inc
ja
push
cs
lret
hlt
adc
inc
adc
scas
sbbb
jg
mov
mov
pop
mov
loope
mov
or
cwtl
rol
push
push
in
mov
icebp
in
test
fsub
pop
out
pop
daa
popf
hlt
repz
jl
xor
pop
loope
out
rsqrtps
enter
test
scas
push
adc
dec
pop
les
imul
mov
cmp
dec
icebp
sub
in
jecxz
scas
xor
pop
rcr
cs
mov
and
jbe
lock
sbb
or
fwait
mov
sub
fimull
shl
lea
add
inc
add
test
xchg
cmc
push
outsl
js
or
cmc
outsb
and
or
or
ss
and
pop
jb
call
mov
je
movb
lea
ljmp
addb
sbb
andb
lcall
push
js
test
out
jno
mov
insl
lods
outsl
xchg
or
or
je
jle
mov
push
mov
icebp
in
test
mov
add
jnp
sub
rorl
add
rcl
adc
mov
xchg
sti
outsl
lea
movsb
loopne
and
inc
sbb
rorl
sub
loopne
pop
sub
xor
loopne
dec
iret
sarl
int3
int
fnstenv
sub
jg
cmp
sub
push
repnz
imul
inc
out
xor
dec
lea
dec
fld
enter
fstpl
outsl
adc
pushf
inc
inc
cmp
dec
inc
jge
into
loop
xor
lcall
aad
push
das
cmpsb
xchg
jo
mov
dec
jae
sub
cmp
jb
mov
and
add
out
adc
call
xor
rcrb
lock
scas
dec
into
push
adc
add
pop
sbb
cmp
cmp
mov
inc
paddb
popa
cmp
test
in
outsl
pop
sbb
bound
add
mov
int3
aaa
in
dec
sub
repnz
cmp
push
aaa
call
test
add
jbe
xorl
sub
sbbl
out
rcr
cmpsl
push
fcomps
or
mov
or
jge
lcall
int3
inc
xor
xor
cmp
movsl
mov
dec
xchg
cwtl
hlt
adc
sbb
inc
or
loope
jecxz
shr
inc
mov
pop
lods
sahf
cli
mov
ds
pushf
int
ss
cld
aam
sahf
and
test
out
cmp
mov
outsb
and
clc
lret
xor
xor
sub
cmp
xchg
pop
jp
mov
outsb
xor
lds
les
mov
orb
je
inc
xchg
jecxz
jp
dec
jge
mov
push
stos
xor
dec
pop
imull
clc
negb
and
adc
mov
adc
lock
xchg
sub
or
xlat
xchg
and
test
mov
pop
movsl
sbb
dec
push
andb
ds
test
rcrl
add
lods
or
fnstcw
sbb
add
sbb
test
rcl
adc
dec
in
and
or
cwtl
test
cmp
dec
jo,pn
sub
pop
or
fwait
andb
lret
roll
call
pop
hlt
das
and
inc
cmp
or
ret
or
or
sub
mov
and
sub
jp
pop
dec
rcrl
out
jge
cmp
outsb
add
js
stos
shll
fsts
dec
movsl
jge
cmpsb
mov
popa
cli
mov
je
movsl
sbb
outsl
shl
mov
dec
push
jmp
fbld
and
and
pop
js
std
aas
es
test
ret
push
cmpl
sbb
mov
cli
es
daa
cmp
or
jno
add
push
and
inc
cli
pop
add
mov
in
pop
ljmp
popl
dec
hlt
rcrl
mov
enter
scas
cmp
cmp
xchg
and
lahf
pop
pop
xchg
inc
add
add
and
ret
in
pop
sbb
ljmp
aas
dec
add
mov
rorl
iret
xor
jl
and
imul
bound
cld
mov
push
inc
sub
adc
push
sarl
mov
cs
dec
sub
outsl
jmp
mov
xor
inc
sahf
and
inc
scas
jg
jl
sarl
dec
inc
mov
jecxz
jbe
xor
or
inc
testl
pop
mov
and
pop
in
xchg
xor
jb
inc
loopne
ret
imul
jg
cmp
xor
push
je
in
sbb
in
imul
stc
fnsave
mov
adc
gs
clc
or
sbb
hlt
inc
jb
ret
inc
add
clc
rcrb
cs
xchg
jg
add
jle
sub
int3
sub
in
cmpl
jb
mov
sbbb
fsubrl
sub
sbb
ds
dec
outsl
or
repz
lahf
orb
and
xor
ds
test
hlt
dec
push
lahf
ret
sbb
add
dec
shlb
add
inc
js
push
sbb
and
inc
sub
and
notb
aas
xchg
push
dec
adc
push
je
pop
jns
mov
stos
mov
push
daa
fldcw
xor
xchg
push
les
cmp
test
and
cmp
sbb
roll
addr16
loop
rolb
out
push
cmp
or
hlt
popa
mov
jo
pop
sbb
push
xchg
cld
pop
push
push
or
mov
pop
or
and
dec
jl
sub
cld
stc
xchg
negb
sahf
ljmp
outsb
int3
rolb
mov
gs
or
loopne
push
mov
pop
data16
int
stos
mov
stc
jb
or
hlt
stos
orb
and
jno
dec
in
daa
movsb
icebp
inc
jb
in
or
add
and
or
mov
jo
das
out
mov
mov
imul
lahf
testb
xchg
js
xchg
stos
push
in
mov
or
mov
ds
js
inc
test
inc
inc
aas
mov
outsl
adc
hlt
sbb
je
adc
mov
or
jae
add
mov
mov
addl
xor
test
imul
cmp
jb
leave
pushf
xchg
sti
inc
mov
sbb
adc
adc
mov
and
repz
ljmp
cld
shll
push
shr
shr
imul
xchg
add
jno
adc
sbb
repnz
jne
imul
mov
sbb
cmp
je
sub
fdivs
sbb
mov
loopne
scas
push
cmc
sbb
adc
lret
loop
mov
pop
lahf
push
std
and
jno
iret
inc
cmp
xchg
add
adc
icebp
loope
jge
data16
cld
add
js
sbb
xchg
push
sub
sub
or
fisttpl
inc
and
adc
and
add
dec
or
dec
mov
popf
xor
movsb
pop
cs
aad
and
push
scas
rorb
push
dec
cld
ljmp
je
push
je
shlb
clc
dec
mov
bsr
lcall
aas
lds
jmp
push
sbb
mov
aam
mov
icebp
icebp
or
cmp
mov
sahf
subl
jmp
leave
cmp
jmp
ds
xchg
stc
lea
mov
jmp
xor
aam
adcl
mov
add
sbb
push
ficoml
aam
cmp
adc
or
fstps
fstl
test
andl
add
sbb
and
std
sarb
jmp
xor
inc
loopne
cli
xchg
push
pop
push
ror
clc
cwtl
pop
adc
loop
clc
and
inc
mov
out
pop
dec
fdivr
fisttpll
mov
and
or
or
add
outsl
lea
xchg
daa
jnp
adc
cmp
push
mov
bswap
sub
cltd
mov
lock
adcb
or
pop
loop
ja
je
subb
cs
xchg
xor
ret
pop
and
lods
cmpsb
fstl
ja
sub
js
or
stos
xor
xchg
mov
add
push
aaa
adc
cmp
hlt
lods
lret
adc
or
ret
pop
pop
jne
sub
mov
aad
sub
fdivr
cmp
add
jp
dec
dec
lds
iret
mov
and
aas
pop
and
mov
scas
orb
mov
add
mov
cmpsl
rcll
lret
aaa
ficomps
mov
in
sarl
jno
mov
test
mov
test
push
sub
les
and
dec
filds
fsubr
rcl
cmovb
hlt
xor
insl
jge
outsl
stc
pop
in
xlat
and
repz
xchg
mov
lock
sbb
popa
das
jne
in
int
lock
aad
mov
clc
sbb
push
nop
inc
mov
pop
mov
enter
adc
dec
add
mov
mov
loopne
add
inc
lcall
sbb
hlt
xchg
aad
mov
inc
pop
je
add
inc
mov
js
pushfw
hlt
mov
jle
mov
ror
cwtl
ret
inc
sbbl
test
add
enter
jmp
dec
hlt
push
bound
inc
or
inc
clc
xchg
js
push
or
push
inc
and
jmp
xorl
pop
cmp
or
mov
aaa
push
shll
scas
arpl
jle
xlat
mov
fcom
sub
cld
and
and
or
xchg
les
jge
add
test
xor
xchg
lds
movsl
cltd
add
push
divl
sbb
in
loop
xchg
lock
mov
es
jmp
iret
div
inc
pop
sbb
test
cmpsb
les
inc
add
push
mov
fsub
rcrb
xchg
cmp
test
xchg
mov
inc
cmp
iret
dec
cmp
inc
jb
lock
xchg
fsubl
popf
and
inc
adc
dec
xchg
mov
mov
adc
push
fistl
sub
outsl
das
push
out
cmp
pop
cwtl
nop
mov
out
mov
pusha
daa
nop
dec
stos
sti
lock
les
add
dec
shrb
xchg
sbb
andb
or
ficomps
pop
inc
jecxz
lret
xchg
in
xor
rolb
sahf
cmp
ljmp
orl
or
outsl
adc
pop
mov
cmp
dec
syscall
cmc
aas
loope
dec
dec
xchg
sbb
fbld
and
xchg
repz
not
cmp
xchg
loope
mov
jge
xchg
and
sub
push
adc
cmp
js
jbe
adc
inc
add
mov
adc
int
ret
push
mov
add
syscall
xor
call
enter
cld
aaa
aas
xor
hlt
stos
stc
push
add
and
lods
sub
push
ret
mov
loopne
aam
mov
ss
mov
aas
push
sub
aam
adc
push
pop
inc
in
movsb
arpl
jns
mov
cmpsl
aad
lret
pop
adc
pop
cmp
mov
and
jp
sarl
cmp
imul
and
cmp
adc
jl
inc
sbb
adc
ret
inc
lcall
mov
and
mov
pop
inc
int3
xchg
jo
sbb
repz
inc
mov
push
je
mov
or
lcall
stc
sub
insb
sub
mov
jl
aas
insb
cmp
dec
loopne
loope
mov
pop
movb
mov
movsl
loope
add
mov
and
pop
icebp
pop
test
lock
push
addr16
cwtl
inc
clc
and
or
into
mov
cmpsl
push
xorb
test
call
mov
add
mov
dec
and
sarb
xchg
pushl
mov
js
cmp
clc
xchg
mov
popl
mov
dec
push
xor
scas
les
cmp
rcll
test
pop
cmc
inc
shrb
jmp
cs
sub
inc
sub
lret
leave
cli
cmc
insl
adc
pop
jne
sbb
or
dec
and
sub
cltd
stc
lods
add
push
mov
cwtl
repnz
add
adc
aas
stos
sub
xor
and
xchg
dec
add
and
sarb
mov
loop
insb
push
pop
sbb
insl
call
fildl
out
mov
jno
mov
mov
pop
cmp
add
fbstp
clc
mov
inc
cmpsb
js
inc
jmp
mov
mov
fcomps
ds
and
stos
add
movb
adc
dec
sahf
push
xor
lret
fstps
or
add
mov
cmp
call
adc
popa
push
stc
xchg
das
outsl
xor
test
cli
sub
mov
int
sub
mov
out
cmpsl
fisttpl
adcb
cmp
and
cwtl
faddl
popa
inc
in
or
rorb
jno
fs
pushf
add
jnp
ja
insb
pop
fisubrl
leave
ss
shlb
add
je
and
mov
test
fwait
outsl
and
xor
and
adc
in
ret
jae
dec
add
pushf
push
nop
rolb
enter
xor
divl
adc
rorb
inc
mov
mov
das
push
xor
xchg
mov
addps
pop
mov
mov
mov
cli
xchg
mov
or
ret
mov
push
xor
jecxz
dec
sarl
or
pop
subl
mov
outsl
mov
hlt
push
insl
jmp
adcb
jge
xorl
xor
pop
nop
jnp
jo
pop
loopne
movsl
pavgw
arpl
out
jecxz
lea
jecxz
or
adc
popf
cmp
mov
mov
sbb
popa
inc
repz
jns
test
pop
aaa
lock
jns
xlat
mov
sarb
mov
les
ror
insb
sub
adc
add
mov
xor
rol
inc
xchg
ss
das
pushl
push
jl
insb
inc
pusha
xor
mov
cmp
rolb
mov
pop
imul
test
movsb
sub
int3
sub
push
clc
add
pop
sahf
inc
jmp
pop
pop
sbb
mov
dec
push
xchg
or
rcl
arpl
pop
and
mov
int3
inc
insb
dec
imul
jecxz
nop
loopne
mov
cmpsl
arpl
test
sti
lret
and
push
pop
mov
and
sub
xchg
out
call
mov
call
icebp
lahf
scas
mov
in
inc
inc
movsb
sub
sbb
jge
cmp
xchg
rcll
xchg
add
xlat
nopl
push
inc
repz
loope
dec
popf
inc
std
cwtl
pavgw
add
add
int3
dec
jbe
dec
pop
imul
push
cld
cmp
and
fwait
cmp
or
ja
sbb
shrl
pop
cmpsb
pop
aam
js
lds
leave
mov
cmp
sbb
aaa
lahf
subb
adc
pop
pop
mov
int3
push
and
sbb
imul
and
fistpl
add
ja
je
or
jmp
jp
jb
xchg
cld
push
shrb
and
sbb
mov
or
jb
mov
inc
aaa
xor
repnz
pop
loope
inc
pushf
or
fisubrs
lcall
mov
roll
xchg
mov
push
adc
loopne
xor
ja
push
inc
xlat
jecxz
mov
dec
pop
lock
bound
insl
fidivrl
xchg
or
in
sbb
rol
jl
imul
iret
out
mov
and
std
jl
testb
add
jno
xor
stos
and
dec
or
inc
call
jecxz
iret
jnp
push
loope
push
lock
sub
ret
out
fcmove
jnp
cmp
leave
dec
insl
lock
cmp
scas
add
data16
in
xor
adc
nop
jle
test
xor
sbb
push
fwait
daa
mov
xchg
sub
mov
mov
sarb
adc
push
or
pop
or
lret
xchg
adc
orb
sbb
lds
inc
add
lea
loopne
shll
pop
mov
pop
sub
lock
ds
arpl
adc
cmp
jae
les
push
push
icebp
repnz
test
mov
loop
xchg
test
js
lahf
cmp
cltd
push
jle
pop
push
sbb
stos
rclb
call
icebp
mov
xor
daa
outsl
push
or
jnp
imul
mov
js
cmp
pop
add
add
push
cmp
sbb
push
outsl
mov
ds
ficompl
add
test
popa
outsb
xchg
jge
pop
and
sbb
out
loopne
sub
movsb
sbb
push
inc
push
cmp
and
mov
inc
mov
lds
push
push
or
je
out
cmp
fsubl
xor
out
imul
enter
ds
std
cli
cmp
movl
add
sub
mov
stc
imul
xor
minps
lds
mov
imul
push
and
dec
pop
das
mov
shlb
ret
ds
jecxz
cmpsb
aaa
adc
add
and
aaa
in
jne
subb
dec
ljmp
add
sub
pop
jle
fwait
pop
pop
inc
es
add
push
mov
in
pop
or
adc
jecxz
mov
sub
push
mov
mov
inc
out
bound
roll
popl
cmpsl
xchg
cld
mov
aas
jnp
scas
js
std
jne
push
dec
xchg
sbb
mov
push
test
xchg
adc
push
aas
and
rcrl
cmpsl
mov
xchg
imul
xor
inc
outsb
rclb
ret
lahf
jp
lcall
adc
xor
cmpsl
or
jmp
or
fisubs
addl
fmull
lea
scas
dec
fstpl
push
es
add
and
and
icebp
ds
dec
xor
jbe
test
mov
inc
jmp
imul
shlb
xor
jno
stos
stos
add
les
mov
mov
lcall
sub
js
pop
int
data16
push
test
push
rcll
adc
sbb
fiaddl
rol
cld
mov
inc
aaa
or
cmp
sub
pop
sub
ficoms
jp
sahf
lret
jecxz
xor
int3
mov
stos
insl
xchg
ror
repz
add
repnz
mov
jl
jbe
xchg
das
jecxz
inc
xor
loop
fsts
scas
inc
push
shrb
sub
stos
cmpsl
aam
and
or
mov
lahf
loop
int3
fcomps
mov
mov
or
jp
add
mov
push
insl
jne
lods
adc
pop
test
sbb
divb
mull
inc
mov
mov
lock
push
mov
scas
je
je
push
adc
xorb
mov
mov
into
fcoml
cwtl
inc
or
dec
xchg
pop
rolb
repz
sbb
mov
xchg
add
mov
mov
push
dec
scas
or
shr
sarl
insb
dec
and
cld
daa
hlt
or
jae
ror
push
jge
clc
pusha
pushf
daa
mov
add
gs
movsb
jecxz
stc
mov
jnp
test
xchg
mov
push
mov
or
in
pop
pusha
rcll
or
jbe
arpl
and
cld
inc
pop
in
and
jbe
adcb
pop
push
xorb
icebp
add
inc
fstl
cmc
mov
cld
sub
mov
fisubrl
push
aaa
ficoml
jo
insb
notb
adc
mov
lods
sbb
mov
dec
adc
adc
sbb
mov
lret
data16
pop
cmp
push
cltd
push
push
jb
repz
push
out
andb
rclb
mov
pop
mov
inc
call
cli
mov
mov
gs
fcoms
cmp
and
jae
testb
cmp
jae
sub
adc
xor
vmovhlps
clc
add
inc
adc
xor
jo
movsb
repnz
ret
rcll
mov
pop
and
lods
push
loopne
ret
data16
fildll
rcrb
icebp
push
push
sub
cmp
fsubrs
mov
ret
imul
popa
loope
inc
and
mov
mov
adc
jecxz
dec
popa
push
dec
jle
or
aam
sti
or
push
fidivrl
push
int3
pop
jmp
push
or
dec
add
call
stc
cmp
inc
sti
scas
test
mov
mov
rcl
xchg
insb
int3
popf
dec
mov
adcb
cltd
fdivrs
mov
cmpsb
hlt
mov
add
pop
adc
add
cmc
add
push
push
movl
loope
movsl
lcall
movl
pop
cmp
mov
js
fiadds
stos
test
dec
pop
ja
hlt
inc
clc
inc
inc
daa
mov
ja
inc
ss
mov
not
and
sbb
icebp
ss
jecxz
rol
loope
cmp
out
arpl
push
pop
repz
fisubrs
cld
lock
imul
int3
mov
cmp
sbbb
push
outsl
adc
shll
fbstp
jp
push
ja
rcrb
fwait
test
mov
sbb
ss
and
jp
mov
sbb
cmp
pop
sub
jne
sub
xchg
mov
xlat
inc
stos
pop
pop
inc
add
aad
jo
and
mov
dec
sbb
adc
xor
xchg
dec
add
bound
mov
test
sub
mov
xor
push
fisttpl
lods
push
xchg
icebp
mov
pop
aaa
dec
push
jno
push
shlb
ss
pushf
inc
inc
xor
js
aad
enter
or
pop
sub
add
pusha
mov
mov
mov
mov
imul
ficoms
addr16
add
sub
mov
xchg
jl
dec
mov
lock
aad
xchg
mov
fstl
and
jmp
xor
adc
stc
insl
push
jno
stc
into
cltd
lret
adc
pop
mov
and
mov
adc
dec
xor
cmp
jle
pop
loop
xor
push
or
jp
add
inc
mov
sbbl
sbb
andl
fwait
push
ljmp
mov
jno
jecxz
and
or
or
push
scas
inc
ja
sub
and
daa
clc
sub
shlb
mov
fsubrs
sahf
adc
or
xlat
dec
sbb
es
lcall
movl
xor
inc
rcl
and
xor
xchg
jbe
nop
fs
fistl
mov
mov
inc
nop
add
cmpl
fcmovnbe
cld
inc
daa
mov
ljmp
loope
in
enter
inc
jle
push
sahf
cmc
push
adc
icebp
mov
test
xchg
cld
mov
mov
jmp
pop
xor
rcll
ljmp
mov
out
pusha
and
add
aas
xor
jle
stos
pushf
and
cwtl
sbb
scas
je
add
sub
jo
pusha
xor
xchg
sbb
test
cmp
pop
push
aas
clc
lds
mov
mov
and
xlat
cmp
incb
dec
std
jle
push
popa
pop
or
loope
xor
filds
push
call
aad
cmpsb
mov
mov
je
cmp
imul
pop
loope
cmp
or
icebp
pop
popf
lock
mov
jbe
hlt
mov
sahf
mov
es
adc
dec
add
rcrb
xchg
or
adc
lods
stc
bound
loopne
add
mov
pop
and
scas
xlat
stos
xchg
sub
cmp
push
inc
sub
sti
fld
loopne
cmp
lock
jno
cmp
jecxz
adc
xchg
das
mov
loopne
and
push
imul
jl
cmpsb
lcall
and
ds
out
inc
dec
test
cmpl
push
jp
pop
or
inc
pop
mov
push
cmp
popf
push
sub
and
mov
push
or
mov
roll
add
mov
or
pop
fbstp
pop
int
cmp
and
jg
sti
push
or
scas
rorl
ret
ret
push
ds
test
xor
aam
rcrb
add
dec
cmpb
push
ffreep
cmc
inc
xchg
xorl
repz
dec
lods
mov
sbb
xchg
fs
push
sbb
push
sbb
ret
pusha
xlat
push
pop
cli
adc
jmp
dec
ds
aas
xor
inc
and
jo
xlat
push
arpl
dec
add
sbb
fmull
pop
stos
ja
mov
lock
lods
data16
or
pop
cwtl
xor
push
push
xor
nop
hlt
xchg
sbbl
xor
mov
xor
jo
shll
jp
test
xor
inc
and
hlt
add
sub
movsb
mov
addl
mov
in
xor
ret
not
xor
subl
repnz
push
jns
sbb
stc
xor
orb
rclb
inc
sub
add
out
in
adc
data16
jp
inc
rcr
cmc
mul
mov
hlt
test
repnz
scas
leave
jae
inc
sbb
jp
ret
jl
add
inc
mov
movsb
mov
xlat
sub
mov
add
lods
or
std
outsb
add
mov
lret
ja
mov
mov
xchg
xor
mov
ficomps
xchg
mov
xchg
sbb
les
pop
push
and
fldenv
mov
sbb
data16
stos
in
xor
mov
popa
pusha
iret
sub
movb
mov
or
rcl
jmp
jge
jo
jno
mov
js
aad
bound
push
dec
imul
test
ds
lock
mov
cld
xor
pop
xchg
dec
popl
inc
lds
xor
add
pop
xor
mov
aam
jl
fsubl
testb
xchg
sti
imul
adc
inc
jle
mov
lcall
mov
pop
popa
repnz
mov
xchg
push
cmp
sub
scas
lds
iret
add
jmp
repz
adc
mov
pop
stos
loope
test
xor
cld
push
pusha
incl
je
push
lret
add
movsb
jl
rcrl
xchg
movsl
int3
addr16
jmp
xor
outsb
pop
xchg
test
xor
xchg
xchg
fldt
hlt
shlb
int3
pushf
loope
pop
and
int
xor
mov
mov
test
add
in
pop
add
daa
xorb
call
mov
adc
iret
cmp
jo
push
lea
clc
push
or
sbb
lock
xor
xchg
stos
push
inc
int3
push
mov
in
jmp
adc
loope
push
xchg
arpl
cld
sbb
sbb
mov
jne
xchg
clc
or
jg
lds
and
push
data16
cmp
pop
test
and
lock
push
fs
cli
ficoml
bnd
stos
push
and
lahf
xchg
cmpsb
mov
addr16
xor
mov
test
in
sub
in
fcoms
inc
dec
jnp
dec
andl
icebp
xchg
clc
loopne
std
pop
in
adc
inc
lret
js
insl
fwait
rcrl
adc
xchg
dec
scas
inc
sub
adc
xchg
data16
sbb
test
cmpsb
sbb
pop
xchg
inc
ljmp
and
inc
adc
les
and
addr16
pop
mov
pop
pop
sahf
nop
je
iret
add
call
dec
xchg
mov
shll
cmp
out
jmp
clc
bound
sahf
les
mov
inc
sub
dec
loopne
repz
add
clc
or
sarl
ds
pushf
and
sarl
loop
shll
inc
aas
gs
ret
dec
mov
fisubrl
ret
inc
mov
into
lret
cwtl
or
ds
dec
and
jmp
xchg
mov
insb
cmc
loopne
cltd
adc
ljmp
or
pop
jle
inc
cs
adc
push
inc
andb
mov
les
pop
and
jne
test
lds
inc
sbb
lahf
xlat
push
dec
dec
js
lret
pusha
mov
loop
mov
insl
sub
inc
mov
inc
fdivrp
sbb
mov
add
inc
cwtl
aam
push
add
vpsllw
xchg
pop
stos
cmpb
inc
loopne
sub
pop
shl
push
sbb
insb
and
pop
cmp
loop,pt
adc
mov
call
add
lea
pop
and
lock
and
add
fcomps
adc
or
imulb
js
sub
je
test
lcall
mul
in
jo,pn
aas
pop
xor
push
int
xchg
mov
lock
test
ljmp
fmull
imul
movsl
or
leave
cmp
lahf
jns
cwtl
xor
cwtl
push
push
add
in
loopne
pop
dec
in
dec
ret
sbb
aam
push
or
push
enter
cli
hlt
push
mov
ficoms
test
jnp
inc
mov
cmp
jb
xor
xor
rclb
cld
pop
icebp
or
pop
or
out
dec
xchg
daa
or
fdivs
hlt
push
dec
pop
mov
push
js
mov
pop
cmp
xorl
icebp
inc
jne
add
cmp
js
dec
lret
aad
test
and
fnstcw
mov
out
cmc
sbb
mov
stos
scas
loop
test
stos
sbb
outsb
fmull
or
adc
jne
push
cld
rolb
add
cmp
push
jae
mov
loope
fdivr
ljmp
dec
data16
xchg
shl
jnp
shlb
das
xorl
arpl
xor
lods
jnp
fmuls
pop
inc
add
stc
jl,pn
testb
cmp
or
imul
fnstenv
pop
sbb
jl
dec
mov
xchg
loope
push
xchg
fldl
jmp
or
adc
add
mov
aam
dec
ret
adc
jecxz
pop
imulb
jnp
jle
ljmp
mov
and
in
lds
push
movsb
scas
or
sub
les
hlt
addl
ret
mov
data16
xorb
pop
sti
add
lahf
push
xchg
arpl
or
in
inc
mov
xchg
orb
test
aam
jns
decb
cmp
pop
sub
mov
aad
inc
pop
cmpb
pop
cmp
xchg
lcall
dec
add
rorl
adc
push
push
jge
fisubs
adc
aaa
cmpsl
in
mov
mov
push
in
ds
sub
xor
push
adc
cmp
sbb
addb
repz
xchg
dec
shrb
rolb
add
out
das
stos
xchg
loope
mov
mov
push
out
int3
adc
jo
add
imul
dec
daa
push
dec
pop
add
cmpsb
idivl
lcall
aad
xor
xor
pop
movsl
aas
loop
add
js
lock
adc
test
gs
popl
cmp
hlt
jns
icebp
xchg
lock
movsl
imul
adc
lods
mov
movsb
adc
xchg
inc
dec
mov
mov
sbb
pop
dec
add
in
repnz
das
loop
aad
sub
or
mov
dec
std
sbb
cwtl
in
xor
add
dec
add
mov
mov
mul
pop
rorl
pop
inc
add
popf
push
xor
in
mov
loopne
mov
cmpsl
das
andl
dec
les
cli
xor
cmp
xchg
mov
aam
jnp
loope
ficoml
out
add
push
rcll
es
jle
xchg
adc
xor
pop
sahf
mov
inc
cld
push
popf
or
jecxz
jbe
pop
xor
adc
cld
mov
pop
mov
jmp
sbb
mov
jno
xchg
in
adc
andb
xor
scas
mov
push
jbe
sbb
xor
sbb
dec
loopne
adc
repnz
cmp
fs
movb
add
insl
aas
xor
lcall
bound
adc
mov
hlt
and
and
inc
fs
cld
stos
in
dec
add
cli
xlat
mov
adc
pop
loopne
mov
call
add
jp
daa
rcl
mov
mov
xchg
pop
dec
mov
add
es
jne
mov
out
je
jl
or
sbb
test
ljmp
xchg
and
aad
lock
stos
xchg
enter
fwait
sbb
xchg
pop
or
and
push
test
fildll
pop
jl
ss
jnp
int3
sub
cmc
inc
aas
mov
add
lret
fwait
int3
imul
aas
dec
pop
xlat
mov
sub
mov
xchg
sub
or
sbb
cmc
cs
movsb
mov
jae
pop
jb
mov
fwait
push
gs
inc
and
pop
aad
aad
push
mov
pop
pusha
push
lret
xor
add
or
or
xor
jae
add
pop
stc
push
popa
movsb
idivb
pop
gs
lods
aad
inc
stos
jbe
adc
xchg
cmpsb
loop
ret
cmovne
xor
int
push
inc
outsb
push
leave
cmpsl
jecxz
add
addr16
and
adc
shll
dec
lcall
out
leave
ljmp
in
incb
call
jmp
or
dec
pop
xchg
scas
scas
shlb
and
enter
lret
aaa
jle
lock
es
pop
call
sbb
ja
add
and
nop
das
mov
fs
mov
and
test
jno
or
inc
jo
push
cmp
pop
dec
aam
lret
cmp
dec
jae
lods
xchg
movsl
ficompl
daa
leave
cmp
and
aam
or
xor
dec
mov
inc
das
mov
and
sub
test
andb
inc
bound
mov
lahf
inc
jl
xor
push
xor
xchg
or
fstpt
xchg
sub
dec
shlb
insb
filds
adc
lcall
or
std
test
mov
pushl
rcrb
test
cmp
xlat
hlt
test
add
add
cli
dec
pusha
or
test
outsb
xor
repz
bound
int
out
mov
lahf
fisttps
aas
ds
dec
test
cmpsl
xor
mov
xchg
or
loopne
je
add
inc
cmp
data16
mov
push
decb
nop
pop
push
out
dec
mov
sub
out
scas
mov
dec
loop
rorl
xchg
js,pt
jg
movsb
dec
adc
xchg
cs
lret
add
cmpxchg
sbb
inc
jg
dec
pop
mov
add
lahf
mov
call
ds
in
push
jbe
pop
cwtl
jmp
loopne
repnz
jl
js
mov
jb
jo
lds
xor
push
pop
aam
push
je
xchg
aam
or
cltd
inc
xor
movb
jp
mov
cmpsl
lods
mov
movsl
loop
push
and
sbb
or
loop
push
push
or
mov
cld
imul
mulb
xor
stc
mov
pop
clc
mov
es
xorb
mov
loop
add
sahf
bound
add
jg
mov
leave
rcrl
inc
andl
xchg
scas
lret
pop
mov
push
or
fs
push
push
sbb
xchg
sbb
xor
push
js
pushl
xor
mov
daa
sbb
je
scas
mov
fcomip
add
pop
repnz
add
xchg
imulb
mov
movsb
pop
andb
bound
mov
sahf
dec
jmp
scas
loop
xor
jo
cmp
xor
cmc
sub
pop
xchg
xor
mov
jl
jns
mov
les
enter
mov
and
test
sti
sbbl
push
ret
js
sub
iret
xor
mov
jbe
push
cmp
sub
mov
jp
jo
sbb
sbb
sbb
fidivrl
fnstenv
mov
das
sub
dec
xor
sub
mov
or
push
sbb
mov
ret
inc
insb
adc
insb
or
je
push
int3
sarl
push
or
push
daa
push
cmp
jmp
pop
xor
adc
movl
faddl
loopne
ret
dec
push
push
inc
mov
sub
je
jg
les
sbb
cmpsl
sub
cmp
lret
jp
dec
fcomps
cmpsb
cli
lods
repz
lods
movsb
daa
call
cmp
or
cmp
xlat
adcb
mov
xor
lea
fildll
mov
loopne
adc
popf
cli
imul
push
popf
les
jb
adc
rcll
fstl
cmc
int3
jge
test
mov
sub
imul
jb
mov
lds
stc
dec
cmp
js
adc
xor
scas
popf
nop
aaa
test
mov
mov
pop
loope
jns
jne
call
ret
ds
pop
in
sbb
icebp
jle
jle
scas
sbb
adc
push
div
pusha
sub
int
in
jae
ljmp
fsubs
lea
adc
mov
dec
lcall
js
cmpsl
sti
adc
lock
dec
and
into
and
cmpl
into
aas
mov
mov
popa
sub
push
add
lock
enter
pop
test
and
test
cmpsl
mov
or
fistl
push
mov
cmp
push
fcomps
lock
pop
mov
pop
rolb
ret
cld
mov
jno
pop
les
ljmp
push
mov
jge
mov
lods
add
je
flds
xor
sbb
cmp
dec
sbb
sti
push
insb
jns
adc
xor
inc
loop
call
es
pop
push
insb
out
or
fiadds
in
je
adc
icebp
and
loope
popf
or
cmpsb
push
xchg
jo
pushf
mov
cmp
adcl
cmpb
in
shrl
add
jae
outsb
sbb
adc
nop
sub
inc
bound
sub
stc
daa
or
add
pop
jae
sub
inc
test
mov
in
mov
cld
cmc
loope
mov
mov
inc
or
fdivs
sbb
jo
and
xor
decl
inc
push
addl
stos
scas
pop
and
lock
rclb
pop
cld
pushf
cmp
mov
aam
test
test
fs
push
iret
and
and
mov
inc
lds
cmp
inc
std
inc
cmpsb
popa
xor
repz
aas
orb
sbb
int
sarb
mov
rep
mov
loopne
in
sbb
rol
call
inc
enter
iret
stos
or
inc
shll
mov
sub
xchg
iret
mov
cld
pop
call
xchg
mov
adc
adc
xchg
add
push
jns
jge
test
mov
cmp
pop
and
aam
out
push
jecxz
leave
testl
and
hlt
or
mov
sbb
add
stc
sbb
loopne
cld
or
push
pop
pop
pop
ljmp
mov
mov
pop
scas
cmp
inc
adc
push
js
xlat
dec
cld
or
xchg
pop
loopne
in
adc
or
mov
aas
and
xor
daa
dec
out
cli
mov
pop
sbb
pop
xor
and
sbb
ret
dec
lods
sbb
xchg
outsl
ja
stos
inc
mov
inc
andnps
rcrb
aas
xchg
out
or
scas
add
repz
lret
lods
dec
ja
int
mov
sbb
push
or
shlb
jg
icebp
iret
cmp
les
sub
jge
xchg
or
movsl
mov
es
push
mov
je
scas
lcall
dec
test
push
insb
cmp
adc
push
aaa
mull
andl
mov
adc
and
test
pop
stos
mov
sbb
inc
inc
sub
sarb
popl
bound
dec
or
dec
loope
sub
push
jl
iret
push
inc
push
push
fdivrl
out
mov
push
mov
mov
pop
xor
imul
pop
les
and
jbe
or
movsl
js
dec
sub
xor
add
or
add
fisttps
add
aaa
loop
pop
jno
sti
mov
mov
pop
jg
sub
cli
popa
shll
mov
mov
je
fdivl
jae
push
add
sbb
jmp
sub
leave
and
sub
les
pusha
outsl
stos
sub
pop
cmpsl
jne
and
adc
inc
mov
or
call
fisttpll
scas
cmp
aad
mov
mov
push
add
mov
daa
ret
sub
inc
ret
sbb
inc
sub
into
fildl
jmp
addl
push
es
xlat
aas
cmp
dec
bound
loope
or
ljmp
cwtl
subl
shlb
pop
jno
icebp
shl
call
sbb
mov
jecxz
pop
stos
sub
test
and
lcall
psubw
mov
xor
sub
jo
repz
adc
mov
std
or
add
jge
sub
outsl
mov
mov
sarb
in
in
or
jmp
mov
int
pop
pop
jnp
aad
jae
aad
jle
pop
fstpl
jp
push
cmpb
in
push
pop
lock
loop
sbb
insl
adc
add
jg
sub
stc
push
adc
mov
add
xchg
mov
add
sub
int3
push
jo
add
cmp
lods
and
xchg
inc
cmpsb
jmp
test
mov
cmp
mov
add
inc
mov
test
ss
nop
sbb
sahf
jp
and
scas
icebp
lahf
adc
repz
sub
clc
les
test
pushf
push
aaa
add
lea
cwtl
or
popa
cmp
lock
cmp
jl
lret
xor
sbb
add
les
mov
lock
mov
mov
dec
xor
mov
into
cmp
mov
xchg
jp
mov
nop
and
pop
ljmp
dec
and
cli
scas
jne
loop
cmpsl
fisubs
and
mov
mov
xor
push
lods
lahf
pop
orl
ja
and
ljmp
jp
inc
idiv
idivb
jmp
lock
jns
fstl
inc
mov
push
test
sarl
adc
test
cli
out
dec
push
cmp
gs
bsf
fistps
jae
mov
int
pop
adcb
mov
and
std
cmpsl
gs
loop,pt
xchg
xor
mov
sbb
or
lcall
or
outsb
sbb
xchg
aaa
das
icebp
inc
xor
lahf
scas
mov
lods
fs
xchg
mov
or
insb
int3
jno
or
adc
and
dec
pop
mov
cs
enter
mov
in
sti
arpl
enter
ja
xor
xor
mov
mov
notl
in
lcall
adc
jno
lcall
out
aam
lock
xor
adcb
insb
or
pop
rorl
fsts
bound
loope
jne
in
dec
xchg
push
and
xor
adc
sub
pop
out
sbb
sub
hlt
mov
xchg
cld
lea
add
bound
stos
adc
mov
dec
jp
mov
xchg
lods
subb
add
filds
sub
push
sbb
lock
and
mov
test
mov
aam
pop
xor
stos
jg
test
inc
cwtl
lock
mov
icebp
popf
xor
jp
ds
xchg
cmp
push
inc
inc
inc
xchg
cs
inc
xor
pop
fsub
pop
inc
xchg
jge
addl
pop
pop
jbe
ss
mov
repz
outsl
pop
scas
jecxz
cli
mov
push
sub
test
xor
inc
lods
movb
aad
rcr
xor
nop
into
les
mov
cmc
xchg
aaa
push
jle
inc
inc
shll
loopne
xchg
jbe
test
decb
cmp
fstps
and
mov
adcl
test
add
and
aaa
xor
fsubrl
sub
push
xor
cld
and
js
bound
inc
ret
out
push
ljmp
loop
hlt
fadds
mov
js
mov
inc
js
xchg
pop
mov
add
mov
fs
cli
movsl
and
mov
scas
xlat
mov
add
scas
fidivrs
pusha
loope
mov
pusha
adc
sub
pop
movsl
stos
fildl
lds
mov
push
xor
xor
movl
adc
lds
fs
mov
sahf
mov
icebp
jp
inc
scas
sub
push
or
fidivs
add
push
hlt
push
jnp
mov
adc
and
add
fiaddl
pushf
mov
das
shrb
aad
sub
dec
mov
into
push
rolb
jae
jo
inc
daa
jle
fwait
push
push
jg
mov
inc
sub
xchg
jns
aaa
clc
inc
push
xor
adc
sub
inc
xchg
repz
add
pop
add
cmpsl
bound
mov
cli
cli
loop
std
movl
inc
stos
sbb
push
mov
xor
cmc
cltd
mov
push
xor
arpl
aam
jo
dec
add
mov
mov
shrl
cmp
clc
int
cld
shrl
pop
sbb
outsl
sbb
sarb
in
xor
inc
test
mov
cli
lods
mov
lds
adc
loope
or
mov
pop
in
pushf
cmp
adc
cmp
gs
ret
xor
or
subb
ljmp
rol
mov
lret
mov
jle
fidivs
inc
cmpsb
cmc
rcl
dec
ret
lea
icebp
iret
cmpsb
xchg
loop
sbb
out
sarl
jl
mov
lock
sahf
lcall
cwtl
aad
imul
adcl
out
fildll
ds
mov
lock
mov
and
clc
data16
out
rclb
cmp
sbb
aad
mov
xor
jne
insb
inc
xor
xor
jge,pn
mov
inc
or
js
jl
data16
or
imul
nop/reserved
flds
sbb
mov
ja
pop
jge
scas
cmpsl
pop
or
in
push
push
jge
adc
jp
and
and
mov
loopne
jae
push
push
ja
icebp
lret
sbb
fidivrl
add
inc
cli
dec
nop
adc
push
mov
and
sub
leave
add
and
je
stos
arpl
mov
jb
ds
xor
test
aaa
mov
idiv
xchg
xorb
sbb
imull
fldl
and
hlt
adc
xchg
inc
scas
xlat
js
adc
mov
mov
lret
imul
rorl
push
jne
int
jmp
shlb
mov
lea
pop
jge
ret
cmpsl
lret
mov
arpl
out
scas
mov
xor
outsb
loop
enter
nop
adc
sets
mov
sub
or
out
cltd
add
dec
call
stos
hlt
push
add
mov
or
leave
inc
rcrb
xor
xor
mov
or
dec
in
xchg
movsl
mov
icebp
nop
pop
sub
inc
scas
es
in
ja
xor
pop
cli
es
shlb
call
push
pop
lock
push
and
add
mov
enter
lea
sub
lcall
add
repnz
aas
xor
pop
xchg
gs
adc
imul
lds
fistpl
insb
rol
scas
jo
in
mov
cmc
faddl
pop
cmp
aad
dec
pushf
punpckhbw
test
push
sbb
imull
fdivs
push
sarl
add
mov
and
lcall
popa
imul
popf
hlt
movsb
add
and
negb
into
bnd
scas
mov
inc
mov
nop
pop
cmpl
jb
inc
sub
xchg
xchg
scas
dec
rcrl
ja
adc
sub
fs
int3
pop
ja
xchg
and
inc
icebp
cmpsb
mov
ficoms
fwait
stos
mov
mov
in
fiadds
pop
fs
push
xchg
inc
ja
add
push
mov
insb
cld
js
and
xor
aaa
fdivrl
dec
or
adc
cmp
add
pop
mov
lahf
push
push
push
push
or
js
inc
fwait
and
inc
sbb
insb
ss
enter
cs
mov
and
mov
jo
xchg
les
sub
cld
xchg
inc
pop
stos
push
ljmp
fdivrs
add
add
mov
sbb
scas
or
pop
push
pop
pop
inc
inc
xchg
xchg
xchg
jp
es
jbe
xchg
in
rcr
stos
mov
inc
cmpsl
xor
dec
or
sbb
pop
jle
lahf
cmp
add
orb
dec
xchg
jne
dec
adc
jns
je
ret
adcl
in
pop
or
int3
in
orb
notl
sub
jbe
out
push
xor
clc
dec
and
fisubrl
sbb
mov
jl
sar
mov
jl
outsl
stos
or
mov
pop
xchg
pop
xchg
pop
subb
push
lods
das
add
mov
popf
loope
sub
fstps
push
andb
xor
pushf
pushf
cs
push
dec
js
xor
lea
lock
mov
jb
mov
ds
mov
cld
xlat
cmpsl
cmp
adc
jmp
adc
aad
mov
mov
aaa
js
pop
xor
mov
clc
mov
ja
cmp
jecxz
dec
cmp
mov
mov
lods
pop
sub
cmp
and
mov
sub
mov
stos
pop
push
lods
mov
pushf
lret
popa
shlb
movsl
lds
mov
jae
add
sub
in
jo
imul
repnz
movsl
add
lock
cmpsl
and
lret
adc
and
ret
out
ret
pop
mov
push
lds
dec
jl
mov
cmpsb
inc
xchg
aam
ret
push
push
mov
test
test
iret
cmp
out
lcall
mov
cmc
bnd
or
ljmp
inc
cmp
aaa
sbb
ljmp
adc
inc
push
lds
lods
jecxz
inc
dec
xlat
cmp
mov
xchg
adc
pop
adcl
sbb
mov
mov
lods
mov
adc
inc
cmp
sahf
adc
ljmpw
movsb
aas
sbb
fs
repnz
jg
pop
addr16
sbb
flds
cli
xor
pop
loop
jnp
addr16
icebp
roll
push
mov
cld
xor
ja
ret
outsb
xchg
in
aam
je
jge
push
popa
call
adc
leave
dec
add
and
out
fsubrs
cmp
mov
push
rorl
sbb
push
bound
adc
pop
pop
dec
es
ja
bound
loope
movsb
sub
xor
int3
pop
xchg
clc
bound
mov
push
mov
xchg
jmp
in
lea
jl
cld
fildll
cmp
mov
insl
call
orb
in
add
or
push
imul
dec
xchg
add
movl
push
imul
stos
jg
jp
loope
or
lods
incb
shll
xchg
mov
aas
dec
bound
cmpl
enter
cmp
xor
pusha
jecxz
je
push
pop
stos
mov
mov
sbb
pop
frstor
mov
and
mov
dec
jbe
mov
push
xchg
mov
rorl
or
pushf
rcrl
mov
adc
pop
clc
or
and
inc
or
mov
xor
xchg
mov
std
jnp
xchg
mov
sahf
inc
cmp
inc
jecxz
lods
xchg
cmp
aas
add
xchg
add
xchg
and
dec
mov
jp
cmpsb
daa
lahf
cmpsl
lret
pop
xchg
pop
sub
add
push
test
lods
pop
pop
enter
ss
jle
and
enter
mov
sbbb
repnz
mov
scas
pop
popa
test
push
lods
cmp
shlb
cld
ss
aaa
jecxz
lret
scas
xorl
insb
xchg
and
and
lods
mov
mov
inc
rolb
jl
cmc
fbstp
hlt
mov
and
inc
add
adc
jb
jle
nop
add
lcall
or
cwtl
and
mov
loope
int3
or
push
pop
rcrb
and
xchg
pusha
dec
mov
or
jo
sahf
mov
shrl
push
xchg
test
stos
pusha
mov
bound
rclb
and
jge
and
test
xchg
add
hlt
sub
addb
ficomps
or
mov
imul
and
dec
mov
xchg
push
xor
test
lock
sbb
inc
lds
jle
push
dec
rorl
aam
scas
cli
sub
xchg
xor
mov
test
ret
pusha
inc
push
or
sbb
mov
lret
loop
nop
push
cmp
xchg
or
popf
xor
inc
mov
ja
das
ret
jecxz
cmp
jne
movsb
inc
push
inc
jne,pn
or
test
stos
out
stos
pusha
ds
xchg
ja
jp
iret
mov
out
add
mov
out
add
pop
test
inc
jbe
icebp
dec
lahf
ljmp
jno
ja
mov
outsl
pop
insl
pushf
jo
cmp
pop
ljmp
push
mov
push
mov
test
lods
inc
popa
test
add
lea
ss
jbe
es
shll
sub
mov
add
or
add
and
imul
std
push
adc
lods
pop
lea
pop
cs
and
push
aas
cltd
and
test
xchg
sahf
mov
xchg
rcrl
push
aad
cmp
loopne
mov
in
xchg
mov
pusha
daa
or
outsb
xor
xchg
cmpsb
jg
loopne
sbb
ret
cmp
das
xchg
cmp
adc
adc
inc
or
ljmp
shrl
outsb
movsl
inc
imul
clc
sbb
push
test
sbb
jle
and
daa
fiadds
xchg
clc
filds
xor
mov
cmpl
cmp
pop
xor
cmp
pop
mov
pop
jne
mov
test
pusha
mov
outsb
pop
and
stos
push
pusha
pop
and
jae
jmp
sub
inc
cmp
andb
cmpsb
add
shl
lret
push
cwtl
loope
sbb
nop
pusha
xchg
faddp
xchg
mov
inc
shlb
sahf
lea
pop
sbbl
push
fcomip
fsubrs
fs
xor
out
loope
adc
pop
jns
jbe
pop
add
jge
outsb
out
shlb
sbb
mov
adc
mov
xor
jno
arpl
movsl
jno
mov
sub
mov
push
dec
dec
scas
cli
into
xchg
imulb
mov
jns
and
enter
test
mov
sbb
nop
pop
scas
jl
xchg
jle
jne
lock
dec
push
cmpsl
add
mov
mov
xchg
std
add
call
js
push
mov
push
or
hlt
sbbb
xchg
aad
mov
mov
je
jns
inc
or
ret
in
arpl
cmp
test
and
aaa
mov
stos
cmpsl
sub
mov
xor
ja
aad
fildll
lret
xlat
decb
fwait
or
inc
mov
sbb
sarb
sbb
pop
and
lret
cli
lock
sbb
dec
pop
dec
sti
fld
sarl
mov
jo
cmc
aad
jbe
rclb
fwait
test
rcr
mov
xchg
scas
inc
and
aam
jno
dec
xchg
mov
xorb
inc
bound
jg
fcoms
dec
dec
mov
cmpl
rorb
scas
jne
in
sbb
jo
outsl
sbb
cmp
mov
adc
idivl
aam
pop
pop
mov
mov
mov
retw
or
fdivrl
clc
adc
ljmp
fsubrl
sub
sub
imul
add
orl
sub
stos
fsubrs
push
inc
pop
addb
frstor
aad
lods
jle
call
shr
inc
push
je
mov
pop
cli
loop
push
cmp
mov
or
mov
or
dec
pushf
xchg
out
pusha
mov
into
jns
push
adc
shr
or
orb
ss
iret
jno
out
repz
add
pop
fstpl
cmp
in
loope
loopne
jbe
or
or
int3
ja
pop
inc
and
mov
cmp
fs
mov
xlat
dec
repnz
sti
jp
xor
mov
xorl
popf
sub
or
pop
push
push
and
repnz
jg
mov
mull
mov
mov
fdivs
es
jmp
int
push
cli
jno
cmpsl
xor
inc
push
and
jp
test
adc
jle
punpcklwd
inc
enter
fs
lret
gs
leave
pop
mov
inc
mov
jne
jmp
repnz
arpl
mov
xchg
testb
fnstenv
sbbb
mov
nop
jbe
mov
es
add
in
aad
loopne
adc
test
xchg
fdivrs
sar
aas
cmc
adc
stos
mov
sub
sub
nop
sub
subl
cmc
cmp
inc
repz
jbe
dec
unpcklps
ss
ret
mov
ja
push
in
inc
int3
fstpt
imul
inc
psrad
loope
push
push
xor
inc
test
jnp
jg
test
mov
test
call
jmp
and
xor
xchg
daa
lods
xor
outsb
cld
xlat
adc
add
sahf
adc
or
and
arpl
out
sarl
jmp
pop
push
andl
fwait
cwtl
or
fists
xchg
mov
jge
mov
mov
adc
scas
jne
hlt
push
cmp
repnz
sub
mov
shl
sub
dec
lret
cmc
dec
ds
fdiv
push
adc
pop
jmp
scas
sbb
daa
dec
sbb
rolb
loope
enter
pusha
arpl
xchg
inc
lea
lcall
insl
mov
sbb
xchg
dec
add
add
ret
lods
xor
aam
in
and
les
and
jl
pusha
xchg
dec
mov
sahf
push
inc
dec
pop
sbb
add
add
push
mov
cmp
bswap
pop
jg
inc
cmpsl
jae
nop
sub
dec
loop
ja
hlt
incb
repnz
mov
add
cmc
ret
add
sbb
mov
jg
inc
cmp
sbb
bound
and
pop
add
pop
dec
clc
or
inc
push
int
dec
jge
jns
mov
jne
inc
mov
push
jmp
cmp
cmp
lods
lds
mov
cwtl
cmpb
adc
cvtpi2ps
test
pop
sub
jp
cmp
outsb
xor
aam
idivl
pop
adc
pop
mov
adc
lret
leave
jae
pop
xor
adc
mov
sahf
jl
sbb
mov
arpl
push
push
psubb
xorb
je
je
push
fsubl
dec
iret
xor
mov
or
dec
out
addr16
xor
xchg
add
clc
dec
cmp
rcll
pop
push
jecxz
shlb
insb
loopne
add
sbb
mov
cmp
jmp
xor
hlt
mov
push
xchg
pushf
lock
jl
dec
xchg
pop
enter
mov
jmp
pop
add
rcrl
adc
xchg
mov
inc
or
push
js
loopne
jp
fwait
adc
pop
push
mov
imul
sti
sti
mov
pop
or
inc
dec
pop
mov
adc
shr
out
icebp
pushf
ljmp
mov
mull
mov
or
cmp
lock
iret
cmp
mov
pushf
cmp
dec
add
stc
sub
cwtl
sbb
mov
dec
push
push
and
pusha
jge
enter
pop
or
push
dec
rclb
sub
cmpl
cmp
xor
and
jg
lahf
test
rorb
test
mov
mov
add
xchg
adc
mov
cmp
jb
pushf
mov
in
test
rcrl
fstl
cmp
and
push
ja
dec
test
jo
icebp
aad
lods
aam
ret
adc
int3
es
mov
jp
mov
cmp
into
add
in
cmpl
cmp
sarl
cmp
xchg
pop
jecxz
syscall
cld
bound
lds
testl
sub
lea
gs
pop
or
mov
dec
dec
icebp
jecxz
outsb
imul
jecxz
xor
adc
add
dec
jp
dec
add
outsb
add
pop
sbb
xor
inc
or
add
ds
xchg
int3
inc
movsl
test
imul
sbb
hlt
movsl
scas
ret
or
push
xor
xchg
jbe
cmp
fcoms
push
sarl
dec
loop
or
pushf
inc
mov
in
aaa
mov
sar
ja
jne
loope
cmpsl
cmp
or
popl
xchg
ffreep
ds
adc
inc
fs
jle
mov
mov
mov
adc
lds
mov
xor
xchg
adc
dec
stos
out
test
cld
jo
sub
mov
fdivs
mov
test
fcmovne
adc
imul
movsl
addl
inc
mov
lahf
xlat
sbb
jecxz
pusha
in
test
sub
into
lods
pop
rcrb
dec
add
xlat
xchg
fwait
inc
enter
repz
cmp
arpl
pop
iret
sub
jae
cltd
cld
push
clc
mov
lret
fisubrl
jno
mov
je
mov
ret
sarb
push
loop
jp
loopne
cmp
mov
jae
lahf
cwtl
ja
icebp
adc
cwtl
cs
adc
dec
int3
call
inc
sbb
subl
les
add
jmp
push
pop
mov
xchg
xchg
mov
in
in
negb
mov
les
pusha
rcrl
and
push
sti
xchg
adc
lcall
dec
out
icebp
xchg
cwtl
call
xor
and
call
or
std
cmp
lcall
push
sub
and
xorl
adc
fists
aaa
adc
pop
mov
cmp
popa
loope
xchg
cltd
mov
mov
imul
jle
mov
in
inc
jecxz
add
aas
lock
cmp
and
sbb
mov
and
inc
xchg
repnz
js
test
mov
push
or
xchg
adc
push
mov
jp
fldl
int3
mov
inc
push
sbb
dec
les
xchg
mov
je
fnstsw
mov
and
dec
stos
fs
cmp
or
adc
mov
sbb
cmc
push
jp
cmp
xor
and
repnz
adc
sti
cli
pop
and
clc
aad
aad
xor
pop
dec
lret
mov
jmp
mov
xchg
popf
adc
inc
pop
aaa
push
cs
xchg
mov
adc
inc
pop
sbb
test
popf
ret
inc
ud0
jbe
sub
dec
adc
xchg
mov
pop
out
shlb
and
mov
push
add
mov
cmpl
inc
xor
sub
stos
xor
test
popf
or
adc
sub
push
fldl
push
push
cmp
xchg
aas
xchg
push
mov
mov
adc
popa
mov
lock
ljmp
out
dec
jno
mov
ret
aam
jnp
sbb
mov
xor
pusha
aaa
mov
sbb
sub
mov
test
dec
fldt
adc
ret
enter
dec
adc
jnp
test
cwtl
mov
test
xchg
xchg
mov
pop
cli
aad
scas
mov
push
xchg
xor
push
fwait
iret
in
sbbb
cwtl
insl
popa
cmpsl
movb
mov
adc
je
add
adc
inc
incb
lock
sub
jmp
cmpsl
gs
les
mov
push
inc
adc
sub
or
fsubrl
pusha
mov
cmp
clc
lret
xchg
dec
out
xchg
or
loopne
jge
int3
orb
add
adc
into
mov
addr16
arpl
cmp
inc
pop
and
xchg
out
push
cmc
inc
pop
push
mov
iret
lods
cmp
and
xor
mov
xor
fimull
fwait
jl
xorl
sbbb
rcrb
das
inc
push
or
and
cmc
inc
adc
ds
pop
movsl
jno
push
cmp
cld
adcl
add
cmpsb
jno
scas
cmpsl
imul
xor
sub
clc
sub
dec
pop
jle
test
aaa
je
or
imul
and
dec
push
xchg
mov
iret
sub
xchg
add
xlat
jbe
sub
add
sub
cs
or
sub
lock
mov
fsubl
xor
inc
pop
test
cmpsl
into
ret
inc
addr16
and
xor
sub
adc
cmp
in
push
adc
daa
xchg
mov
pop
popf
scas
xlat
add
test
es
loop
cmp
mov
xchg
jo
mov
repz
inc
xchg
je
test
sub
and
add
push
sbb
mov
bsr
pop
std
xor
stos
inc
fsub
inc
sub
lods
in
clc
cmp
popf
cli
inc
or
jnp
xchg
pop
js
add
iret
cli
inc
daa
call
in
xchg
jge
testl
in
adc
push
sub
mov
mov
or
in
sarl
mov
popf
jl
and
sbb
arpl
add
sub
xlat
test
xlat
test
inc
and
leave
popf
xchg
cmp
jae
test
lretw
xchg
inc
pop
les
bound
jbe
dec
mov
into
add
ljmp
push
jl
stos
loop
icebp
sbb
sahf
ficoms
roll
jno
jbe
mov
sub
aad
insb
mov
subl
je
lea
outsb
je
xchg
sub
or
pusha
inc
mov
push
cmpsb
mov
shrb
repnz
jl
xchg
jecxz,pt
push
orl
loope
push
xor
inc
push
xorl
ret
loopne
adc
fimuls
sbb
bound
jecxz
jns
das
pushf
pop
push
cmp
pop
rorl
adc
lcall
cmp
shl
xchg
imul
jnp
and
dec
cmp
dec
xor
xchg
aaa
mov
imul
and
cmpb
les
imul
lods
out
add
andb
adc
jmp
jp
and
pusha
add
and
mov
or
addl
andb
fxch
lock
movsl
xchg
jmp
movsb
xor
mov
xchg
push
fcomps
push
imul
cmpb
test
test
push
popa
outsl
clc
mov
gs
rcll
cli
cwtl
nop
xchg
adc
pushf
push
shll
cwtl
and
in
or
rcrl
cmpsl
sbb
jg
add
imul
call
cmc
into
push
mov
popa
imul
and
mov
cld
imul
sub
mov
sub
cmpl
aaa
inc
ret
cltd
add
add
push
test
pop
inc
hlt
test
test
add
and
sbb
bound
enter
fidivs
out
and
dec
nop
push
popa
pop
aaa
popa
cmpsl
fisubl
movl
jecxz
mov
popf
ret
cmp
push
push
mov
mov
decl
sbb
fwait
mov
mov
inc
push
dec
adc
ds
and
mov
mov
rorl
inc
cli
hlt
stc
sbbb
mov
jle
daa
pop
jo
push
sbbb
push
add
add
imul
xor
lods
sub
mov
out
push
mov
aam
xchg
inc
push
cld
cmpsl
nop
les
lea
mov
ja
std
adc
sbb
add
les
mov
mov
ljmp
ret
mov
ja
imul
jmp
dec
add
inc
call
andb
mov
decl
imul
cli
inc
ret
xchg
pop
push
addl
repz
and
jl
dec
dec
pop
sbb
test
push
push
and
movsb
stc
aam
add
or
mov
out
pop
std
sar
icebp
fs
xor
mov
or
in
loop
add
pop
sbb
js
add
inc
fldl
std
outsb
inc
inc
in
aad
mov
inc
dec
out
jb
adc
add
inc
lahf
jno
sub
cmp
cld
mov
jbe
xchg
jo
jecxz
sti
les
les
movsl
fcmovbe
pop
or
push
cmpsb
dec
outsl
jl
pop
aaa
xor
movsb
inc
ficoml
rcl
shll
pop
cmp
je
add
xor
xor
mov
push
cmc
out
add
add
add
cmc
inc
and
fnstsw
fadds
push
cmc
shlb
or
mov
and
inc
ja
test
xor
sbb
jmp
or
sub
push
mov
add
or
push
imul
pop
nop
cmp
push
stos
cmpsb
inc
jbe
xlat
jb
lods
jae
sbb
loope
leave
mov
cmpsl
cmp
sti
sbb
adc
cmpsb
inc
mov
xchg
cld
in
inc
sbb
inc
mov
cmp
sbb
test
pop
or
test
mov
dec
cmp
in
push
mov
mov
fstpt
push
in
sub
adc
xchg
xchg
movsb
out
insb
inc
stos
or
ret
mov
mov
insb
mov
filds
stos
xchg
cmp
mov
cmp
and
mov
lock
js
mov
or
lock
out
inc
inc
push
or
test
inc
fimuls
cmp
pop
mov
rcl
rcrl
dec
add
iret
jae
clc
sbb
sbb
stos
adc
sti
push
sub
repz
mov
daa
mov
mov
dec
fidivrl
adc
ss
xchg
mov
rorl
adc
or
ret
out
lds
or
dec
dec
dec
mov
and
adc
jno
dec
cmpl
push
mov
inc
sub
pop
sub
jne
mov
test
test
imulb
imul
insb
jl
repz
pop
inc
in
into
addr16
daa
shr
lods
pop
cld
in
and
ret
adcb
scas
roll
mov
jg
ficoml
lods
inc
push
shr
fwait
mov
xlat
xchg
cltd
and
popa
push
inc
pop
sbb
mov
adcl
subl
mov
bound
push
pop
jecxz
sbb
or
mov
mov
ret
inc
xor
int
mov
dec
aas
mov
enter
mov
shrl
inc
mov
jns
and
mov
adc
push
pushl
scas
push
jg
outsb
or
or
pop
inc
adc
pop
mov
xor
mov
rclb
and
imul
jo
js
fidivl
inc
lret
mov
jge
cs
push
imul
sub
sbbb
call
adc
mov
cs
repz
add
cmp
test
test
xchg
lods
outsb
sub
mov
jle
xor
jl
movsl
imul
xchg
jecxz
xlat
ud1
pop
mov
lret
outsl
xor
dec
sahf
jp
adc
mov
xor
cltd
sbb
aas
je
and
push
adc
adc
ss
sti
or
mov
inc
imul
and
add
and
fimuls
subb
add
roll
adc
loopne
pop
js
mov
shr
addr16
sbb
test
pushf
mov
push
fisubs
icebp
add
sub
lret
jmp
cmp
je
mov
xor
and
sub
push
and
ret
mov
dec
adc
add
add
push
pop
and
or
sbb
aad
loope
ja
dec
sbb
jnp
shrb
mov
test
sub
test
test
ja
rcrl
das
jo
popa
out
sub
push
add
or
sbb
aaa
aaa
popa
ja
loop
imul
xor
cmp
and
pop
xor
test
adc
insb
icebp
dec
push
cwtl
add
arpl
pop
leave
cmpsl
mov
cmpsb
sbb
pop
decl
sbb
adc
int3
cmpsb
pop
ret
bound
xchg
data16
xor
mov
push
repnz
dec
add
data16
je
stc
xchg
adc
push
adc
xor
push
clc
push
std
push
add
lods
andps
pop
lods
cmp
pop
clc
fs
lret
xchg
aas
mov
adc
adc
xchg
js
mov
push
jg
add
cltd
gs
fiadds
mov
movsl
loopne
out
dec
cld
mov
arpl
fisubs
repz
mov
movsl
and
mov
fldl
imul
pop
push
jno
ret
pop
jle
sbb
push
pop
rclb
or
fs
jnp
jnp
mov
cmp
jp
mov
sbb
or
aas
adc
inc
jp
dec
push
sahf
push
inc
pop
xchg
mov
sbb
test
scas
mov
pop
mov
jmp
cmp
enter
mov
mov
mov
ficoml
sub
add
sub
arpl
int3
sbb
std
add
inc
test
ja
add
rcrb
mov
adc
push
sarb
lret
rcll
enter
lods
std
mov
movsl
pop
adc
hlt
xor
in
mov
push
mov
cmp
pop
dec
int
shll
xor
mov
xor
ret
push
or
jle
call
adc
loopne
and
in
adc
jne
ret
jae
adc
lret
incb
stc
cmp
shll
repnz
aad
jne
and
and
jl
cs
and
out
add
inc
ja,pn
les
mov
jmp
notl
jmp
mov
sbb
lods
ljmp
and
lret
test
xor
xor
adc
inc
popa
push
mov
test
push
icebp
push
stos
dec
scas
and
iret
pop
je
iret
or
in
cmp
in
jp
add
xor
ret
adc
xchg
and
fwait
fwait
add
ljmp
mov
mov
mov
repz
test
fisubl
jns
dec
cs
test
push
dec
fnstsw
sbb
rcr
and
scas
push
add
clc
fnstcw
lock
fdivrp
xor
and
fsub
imul
jo
push
add
je
sbb
scas
sbb
push
push
imul
scas
cmpsl
testb
js
std
mov
loope
ja
lds
pop
push
xchg
sbb
mov
or
fwait
jb
jae
shrb
adc
aad
xchg
mov
nop
cmc
dec
jmp
cmp
fdiv
adc
cld
mov
cmp
sub
fs
inc
popa
add
sbb
jne
mov
adc
jecxz
ds
jo
cmpsl
jge
cmc
adcl
cmp
and
and
fbld
push
pop
test
addr16
push
lods
cmp
popa
xchg
fadds
cmp
pop
test
cmp
pop
inc
nop
push
gs
jecxz
ja
adc
mov
push
je
fdivr
inc
mov
mov
push
inc
clc
dec
mov
pop
loop
or
or
pop
mov
pop
ljmp
jl
or
add
and
push
inc
adc
mov
push
jo
mov
ds
outsl
adc
jmp
sbb
add
mov
push
or
mov
xchg
lret
cli
aam
inc
int
or
adc
cld
jae
xchg
xchg
mov
or
repnz
dec
mov
subl
add
sub
and
inc
ret
insl
cli
mov
lret
sub
leave
sbb
loopne
inc
jmp
daa
pushf
sbb
ja
test
stc
sub
mov
addb
adc
push
sub
inc
cwtl
in
stos
mov
subl
lock
cmp
mov
orl
dec
sub
call
popf
std
cmp
dec
cld
sub
add
adc
cltd
std
loopne
lahf
jp
xchg
xlat
pushf
mov
call
cltd
inc
xchg
outsl
mov
push
inc
stos
mov
lods
sarb
adc
xchg
and
movsl
sub
imul
sub
push
mov
dec
movsb
shrl
pcmpeqw
mov
test
insl
jo
sbb
mov
nop
add
pop
in
leave
aas
add
add
subb
push
and
shr
inc
iret
mov
and
push
add
xchg
cmp
lods
mov
mov
sub
in
cmpsl
out
test
lods
mov
negb
dec
add
push
das
ret
shrb
insl
or
sub
testb
adc
test
call
in
mov
int3
mov
sub
xor
push
hlt
inc
ret
lods
adc
add
mov
add
lock
fsubrl
mov
ret
and
nop
sbb
dec
popf
sbb
sbb
mov
adc
in
lea
sbb
sbb
xor
pop
lret
andl
xchg
fists
lock
aad
push
popf
mov
fsubs
lcall
jnp
stos
scas
dec
xchg
mov
dec
pop
aad
add
xor
mov
mov
mov
mov
adc
shrb
mov
mov
cmpsl
fidivl
mov
shl
adcb
cltd
dec
add
xchg
je
push
and
fldenv
out
mov
sub
add
stos
aaa
pop
xor
addb
mov
push
mov
inc
loop
mov
mov
mov
or
sbb
ljmp
sub
sub
stc
mov
sub
and
rcll
lea
adc
pop
dec
xchg
sub
ret
addr16
arpl
add
inc
push
inc
in
imul
shr
and
mov
cld
stc
add
addr16
xor
out
jnp
icebp
in
mov
mov
scas
adc
mov
and
pusha
ret
xchg
sub
jo
repnz
adc
mov
xchg
jne
dec
in
test
mov
mov
clc
test
enter
push
out
cmpsb
data16
add
daa
test
xor
inc
cmovl
mov
cmp
sbb
xchg
xchg
sbb
add
addb
ja
pusha
pop
andb
mov
ret
pop
sub
jmp
inc
out
and
push
mov
pusha
fstpt
sahf
cs
mov
inc
testl
aaa
vunpckhps
iret
mov
xlat
xchg
sub
hlt
xchg
adc
and
test
in
les
fwait
xor
xchg
fdivrp
adc
push
insl
loope
lret
or
mov
jo
in
xchg
cmp
mov
jne
lcall
cmp
ficompl
adc
mov
mov
lds
jnp
adcb
lods
mov
xchg
aam
repnz
mov
cmpsb
mov
xor
insb
cmp
push
dec
in
mov
pop
dec
mov
jmp
lahf
pop
xor
lds
sub
in
clc
aas
jb
xor
sahf
jno
fildl
inc
sbb
test
sbb
mov
pop
andb
je
push
loope
mov
cld
jge
add
jmp
xor
dec
jb
mov
push
mov
fistpll
je
and
mov
inc
add
jbe
cmpsl
pop
shlb
lcall
and
push
add
pop
sti
dec
outsb
inc
insb
test
mov
cmpl
testl
pop
aas
aam
dec
imul
cmp
mov
stos
jle
push
les
pusha
movsl
cmp
cmpsb
enter
gs
mov
lea
and
mov
hlt
xchg
movsl
sub
push
push
cld
push
inc
in
xchg
xchg
test
icebp
pop
jge
aaa
pusha
mov
and
push
cmp
outsb
cmc
jp
sub
mov
xor
outsb
mov
es
add
divw
inc
mov
jmp
cmpsl
cmp
xor
pop
adc
mov
sahf
sub
lea
mov
fs
and
sbb
sbb
rorl
movsl
add
mov
inc
xchg
mov
out
orb
xor
mov
sub
mov
xchg
jp
test
gs
xchg
lret
clc
mov
xor
fmuls
ja
mov
push
mov
push
in
lea
pop
jmp
inc
cmp
andb
cmc
cmp
xchg
and
mov
popa
sti
or
enter
xchg
in
add
xor
add
ret
push
test
clc
addr16
rclb
xor
and
mov
push
mov
cmp
ret
sti
jg
orb
xorb
jle
xchg
jno
xchg
subl
shr
test
push
push
xchg
mov
mov
pop
push
ret
test
or
fs
outsl
cld
sub
shlb
fbstp
inc
jmp
xchg
xchg
lea
dec
xor
pushf
loope
mov
xor
test
ljmp
cmp
fcompl
jecxz
push
jnp
jns
rolb
iret
ss
loopne
xor
push
inc
sbb
xor
pop
dec
sub
scas
xor
push
jle
xor
jg
xchg
sbb
dec
shl
out
jmp
add
rcrb
add
mov
and
add
pop
decl
and
jg
jns
call
test
or
shrb
aad
mov
xchg
push
sbb
jne
or
ret
pop
add
pxor
adc
loop
fldenv
or
pop
inc
pop
inc
adc
fcompl
sub
adc
adc
mov
inc
inc
mulb
nop
lods
dec
cmp
ljmp
add
mov
sbb
loopne
pop
addl
ficomps
shrd
mov
dec
xabort
clc
stos
push
push
jns
mov
daa
test
mov
xlat
mov
jnp
fs
xor
cld
sub
loop
insl
ljmp
aas
cwtl
aam
data16
cmc
jp
xchg
js
sbb
cmp
mov
in
inc
outsb
js
sbb
adc
ret
push
incl
mov
clc
stos
repz
rolb
cmp
dec
leave
fbld
movsl
lret
call
pop
adc
pop
pop
cwtl
cmp
pop
insl
ja
cmpb
xchg
adc
jnp
daa
and
stos
dec
clc
les
adc
test
call
inc
outsl
insl
adc
xchg
inc
js
jno
mov
push
dec
mov
enter
test
mov
loop
paddsb
sbb
imul
movsl
inc
iret
ljmp
jl
cltd
shlb
dec
insl
jo
fiadds
out
aam
push
mov
push
mov
xlat
cmp
xchg
push
sub
and
cli
add
inc
push
jge
sbb
lret
dec
mov
dec
push
mov
sbb
loope
test
repz
pop
dec
jnp
jns
xchg
andl
add
clc
imul
gs
and
jmp
xor
rcrb
dec
lahf
push
mov
and
cld
addb
rorb
ret
test
cmpl
popf
inc
nop
push
ljmp
orb
mov
sarl
or
push
data16
mov
ljmp
outsl
inc
mov
adc
sub
and
scas
mov
pop
dec
pop
aam
mov
mov
aas
jo
imull
outsl
cld
add
jae
test
bound
jae
xor
outsl
mov
mov
mov
inc
xchg
clc
xchg
jo
mov
mov
int
sbb
sbb
fiadds
push
dec
bound
sub
ss
rclb
xchg
push
scas
adc
test
out
into
pop
add
outsb
sub
mov
cmp
sahf
mov
xor
mov
into
xchg
inc
mov
inc
lds
dec
and
dec
rcrb
add
movb
xchg
push
and
movsb
cld
jns
pop
icebp
jmp
gs
cmpsb
jle
adc
lcall
mov
inc
jo
sub
mov
ret
push
dec
mov
or
dec
mov
jmp
push
stc
in
cmpsl
das
cld
ljmp
nop
or
mov
mov
jbe
data16
aaa
lods
into
int
iret
pop
inc
popa
insb
sbb
popa
jne
data16
sbb
mov
mov
pop
int3
adc
mov
sbb
sub
ja
gs
jbe
in
test
xchg
nop
xor
xor
mov
mov
cmpb
pop
test
fwait
jns
add
sbb
popa
and
js
daa
mov
lea
out
jb
sbb
ret
or
aam
adc
pop
push
cmc
leave
aam
fucom
push
sub
in
mov
fldt
jmp
xor
xor
dec
rsm
pusha
add
pushf
xchg
adc
mov
jp
cmp
mov
clc
fcomip
loop
popa
mov
mov
sub
or
ret
xchg
dec
sbb
loop
or
lods
push
inc
add
ret
mov
pusha
sbb
inc
jle
sbb
push
adc
sbb
mov
cmc
ljmp
hlt
gs
std
insl
ficoml
sahf
loopne
js
push
imul
mov
sbb
xchg
cmp
cmpsl
jbe
sbb
xchg
jle
outsl
loopne
stos
cli
push
mov
and
rol
fcmovb
fldl
lock
pushf
mov
sbb
and
and
rol
or
push
inc
fwait
jmp
mov
divb
imul
xchg
shlb
mov
pop
cmp
jge
lcall
jns
inc
jo
lahf
mov
mov
xchg
in
adc
or
mov
fists
out
mov
push
roll
adc
popa
xor
test
loope
add
scas
xchg
pop
inc
les
xor
scas
sub
pop
fstps
xchg
cmc
rcrb
inc
cld
inc
je
in
pushl
or
mov
xchg
das
stc
mov
jp
pop
cwtl
data16
mov
add
and
push
idivb
dec
fcmovu
jb
rclb
sub
mov
outsb
lds
std
inc
sbb
std
sub
mov
rolb
imul
mov
xchg
test
and
add
jle
shlb
lea
sbb
add
popf
xchg
addr16
cmc
sbb
add
lods
sti
test
add
mov
mov
inc
fcoml
pop
dec
jecxz
dec
cli
shll
adc
adc
and
movsl
dec
pop
push
lahf
jmp
lock
mov
sub
dec
xchg
push
push
dec
xchg
inc
add
aad
mov
inc
sarb
enter
lock
cmp
xor
arpl
int
mov
pop
jle
loop
add
test
mov
or
push
ret
in
pop
or
lds
mov
add
mov
dec
aas
inc
leave
and
loope
inc
and
mov
jmp
out
xor
pop
mov
fidivl
xlat
pop
cmp
fdivrl
mov
cmpsb
push
jmp
pop
ret
cmc
mov
sbb
xor
mov
mov
push
mov
jns
popf
jbe
imul
push
lcall
fisubl
ds
imul
mov
xor
outsl
push
in
mov
inc
add
jbe
dec
dec
sub
cmp
mov
enter
sub
adc
sbb
cmpsl
stos
lahf
xor
adc
test
insb
or
pop
clc
mov
dec
in
pop
rcl
test
or
rorb
push
nop
sub
sub
dec
fwait
xchg
fs
mov
jmp
je
cmpsb
sbb
push
rclb
sahf
sub
and
xchg
mov
add
mov
or
cs
mov
lret
push
cli
push
push
aad
stc
or
fcomp
sahf
les
test
push
cmp
adcl
cmp
or
xor
xchg
rorb
mov
sti
mov
inc
sub
nop
jl
dec
mov
dec
call
add
push
add
jl
jno
nop
sbb
in
aad
sub
inc
xchg
data16
loopne
mov
dec
mov
movsl
xorl
add
arpl
jle
test
stc
cmc
push
jne
movsb
mov
inc
out
fcompl
loop
lock
adc
test
dec
pop
test
xchg
push
mov
adc
nop
jne
xchg
pop
push
add
cmp
mov
add
inc
fnstcw
xchg
sbb
aad
lret
int
sub
loope
jmp
ss
mov
push
mov
stc
or
or
rep
mov
daa
xor
jp
mov
subb
loop
into
test
xchg
pop
pop
data16
mov
sub
sub
pop
sub
fstl
lds
out
xor
or
in
lods
pop
ret
les
ja
mov
pop
sub
popa
push
cmp
daa
mov
icebp
push
mov
xchg
xchg
loop
je
xor
push
dec
push
xchg
or
divl
cmp
mov
mov
nop
vphsubwd
aaa
pop
ret
loopne
outsl
inc
mov
and
jns
mov
jle
insl
mov
and
cmpsb
rolb
mov
sbb
sbb
and
sti
or
jecxz
shrl
or
sbb
outsl
sete
cmp
ja
outsb
sbb
xlat
fldcw
test
shlb
add
xchg
adcl
and
mov
fdivr
inc
pop
in
push
enter
scas
test
dec
pop
leave
test
imul
call
mov
push
mov
push
jl
ret
fsin
add
dec
fmull
sbb
scas
xchg
mov
cmpsl
inc
add
cmp
inc
mov
pop
pusha
in
scas
pusha
jmp
xchg
jmp
jno
dec
lods
add
outsl
adc
jnp
or
inc
andb
mov
aam
rorb
mov
and
xchg
lret
aaa
fucom
cwtl
xchg
and
jp
pop
dec
cmp
out
fwait
lcall
in
inc
jecxz
lea
outsb
aad
sbb
sbb
xor
xor
inc
cmovl
mov
mov
shlb
je
into
into
arpl
lcall
pop
insb
cmpb
rcrb
pop
xchg
inc
adc
xchg
ficoml
test
xchg
lcall
mov
js
add
dec
movsl
icebp
faddl
cwtl
xor
push
popa
adc
pop
pop
jbe
pop
mov
mov
idivb
vmread
fisubs
fldt
sub
sub
pop
mov
cmp
xchg
sbb
sbb
lock
notb
inc
out
inc
shrl
cmp
ret
enter
jb
loopne
mov
push
sbb
fdivl
insb
ljmp
jp
xor
repz
dec
rorb
inc
mov
mov
pop
and
or
xchg
clc
sbb
les
in
mov
hlt
daa
test
bound
sub
aad
sti
jne
sbb
cmp
in
jge
daa
pop
or
xor
cli
dec
hlt
imul
inc
dec
aad
or
mov
or
sti
pop
imul
outsl
cmp
arpl
dec
sbb
add
cltd
pusha
and
mov
fcoml
adc
sahf
or
inc
mov
adc
xchg
mov
pop
ja
in
cltd
fwait
outsl
cmc
test
jge
dec
notb
or
ret
cmp
cmpsl
or
cld
xchg
fcmovu
jmp
sub
nop
pop
movsl
in
jno
cmp
mov
hlt
into
dec
mov
int3
jl
inc
aad
cmp
push
jno
pop
mov
push
std
nop
in
loope
xlat
shlb
cmc
dec
shrl
add
mov
ud1
adc
add
test
enter
outsl
lcall
ret
shll
loop
xchg
cmpl
or
call
in
lds
js
jae
iret
loop
push
or
cmp
pushf
adc
cs
and
test
out
imul
orl
mov
mov
imul
pop
sub
mov
dec
jb
add
test
push
inc
or
cli
lcall
mov
add
enter
mov
and
inc
push
add
shll
pop
sbbb
xchg
outsl
fidivl
xor
dec
arpl
mov
popa
sbb
call
movsl
repnz
enter
jecxz
or
xchg
stc
jae
aad
mov
sti
jns
idivl
stc
dec
dec
std
jns
test
jns
and
repnz
aad
mov
stos
insb
mov
dec
addr16
fmul
loope
mov
ficompl
mov
outsl
add
iret
inc
int
lock
mov
cmp
fnstenv
int3
ss
notb
lahf
mov
dec
and
pop
lahf
movsl
nop
xor
and
push
loope
es
insl
inc
adc
mov
testl
jl
outsb
test
fadds
pop
mov
or
roll
pop
je
jno
scas
push
and
loope
xchg
mov
stos
mov
or
sub
fsubrs
orl
or
pop
ret
xchg
hlt
inc
jl
xchg
hlt
push
leave
bound
mov
mov
mov
ja
clc
orb
xlat
pop
incb
mov
scas
jge
xlat
ret
ss
xchg
orb
popa
addr16
mov
pop
push
je
sbbl
cmpsl
push
fiadds
jb
fs
daa
add
inc
mov
das
hlt
int
addb
inc
xchg
xor
into
fdiv
jg
and
lahf
mov
ja
sub
imul
push
adc
sub
loope
nop/reserved
ffreep
negl
roll
or
dec
sbb
ja
add
daa
mov
andl
ret
xor
push
mov
wbinvd
fsub
dec
jb
xor
sub
ds
imul
das
mov
dec
in
mov
push
pop
jl
sbb
lock
jbe
cwtl
add
xchg
sbb
add
mov
cs
xchg
sub
add
pusha
xchg
testb
add
jmp
jbe
daa
push
bound
xchg
xlat
sbb
and
lock
mov
and
adc
jecxz
or
adc
adc
jge
push
jge
mov
xor
mov
shll
push
clc
sbb
iret
or
push
out
lock
xor
pop
addr16
mov
mov
test
lcall
fidivl
mov
shlb
mov
ret
adc
leave
stc
jg
fildll
mov
jno
cld
add
mov
cmp
and
mov
pushf
jbe
mov
addl
mov
mov
enter
dec
push
cli
push
push
call
or
mov
fsubr
add
mov
jp
aad
xchg
movl
lds
add
sbb
xchg
movsb
sub
add
leave
ret
mov
mov
aas
push
lret
cld
sarb
cmp
jp
jnp
fldenv
pusha
das
nop
mov
or
jb
sub
xorl
inc
ret
xor
mov
mov
lods
push
js
cmp
inc
mov
add
jp
adc
pop
cmpb
outsl
in
movsb
mov
psllw
or
xlat
or
mov
add
scas
jg
stos
xor
adc
sti
int
or
jno
call
iret
inc
les
pushl
xchg
sub
cmpb
dec
jl
jo
and
xor
and
sbb
loope
adc
dec
xor
xchg
dec
js
jl
aam
lds
xchg
lcall
pushf
mov
dec
mov
shrb
stos
adc
movl
movsl
test
sbb
clc
jg
jno
jnp
mov
lahf
mov
stos
aam
add
adc
push
in
adc
repz
dec
push
rcll
adc
and
ror
mov
loope
ljmp
push
out
clc
enter
movsb
mov
adc
mov
lock
pop
shll
dec
add
ss
aad
mov
enter
sub
jmp
push
loop
fiaddl
pop
jns
xor
nop
push
cmp
fidivrl
les
aam
testl
mov
adc
in
std
inc
pop
fwait
push
mov
ljmp
mov
in
add
dec
mov
hlt
lods
xor
imul
push
pop
pop
scas
popf
push
add
dec
leave
push
data16
notb
mov
xor
inc
movsb
in
dec
push
div
mov
xchg
aaa
fs
lods
pop
sahf
pop
addr16
test
cli
rcll
rcrl
das
adc
cmpsb
js
jl
or
lea
xchg
and
xchg
and
negb
dec
fnstcw
subl
jge
std
out
add
cmp
xor
push
xchg
xor
and
addb
les
fs
cmpsb
xor
stc
addl
dec
int3
clc
pop
push
mov
adc
movsl
fcomps
sub
xchg
stos
cmp
xchg
dec
fistpll
loope
pop
pusha
or
lods
lock
stos
mov
xor
ds
daa
stos
daa
push
or
ds
push
cmp
inc
mov
jmp
repz
cmp
cs
fcmovnb
movsb
loopne
outsl
push
shl
cmp
mov
cmpl
xchg
int3
pop
sbb
shrb
popf
push
gs
pushf
out
cmp
pop
cwtl
cltd
test
ret
out
jle
push
push
pop
push
inc
inc
jl
test
dec
pop
dec
in
xchg
mov
inc
pop
and
sbb
fcmovu
gs
inc
jecxz
std
and
mov
je
add
sbb
inc
sbb
add
mov
push
cmc
shrb
dec
mov
adc
mov
es
nop
jp
and
bound
mov
inc
inc
and
rol
mov
loopne
icebp
mov
mov
daa
sub
test
add
push
scas
lahf
test
out
js
xchg
jo
cmp
test
xchg
aam
and
call
jp
stos
dec
bnd
mov
ret
in
mov
cld
cmp
ljmp
push
fsubr
dec
jmp
aas
add
cmp
add
fwait
aam
xor
aam
push
out
jge
lcall
xor
out
arpl
mov
jmp
shll
xlat
jae
push
mov
mov
push
pop
mov
jns
adc
or
jg
in
add
adc
mov
out
hlt
jge
mov
cmp
xor
adc
sbb
dec
push
loopne
inc
push
stc
lret
clc
sbb
stos
movsb
clc
add
pop
lock
xor
scas
icebp
insl
push
lods
daa
popa
jecxz
fimull
cwtl
aam
cmp
imul
inc
ljmp
sub
test
xchg
push
adc
cmp
out
add
add
xchg
cli
popa
cmovs
out
or
adc
bswap
and
mov
pop
sbb
cld
leave
xchg
xchg
adc
into
mov
inc
popa
xchg
notl
adc
scas
dec
dec
outsl
xor
inc
in
adc
ffree
dec
mov
leave
mov
fs
imul
inc
push
aas
addl
lock
sub
xchg
mov
fldl
mov
dec
outsl
ficompl
ret
pop
das
iret
add
dec
mov
and
dec
mov
sahf
jp
cmpsl
mov
mov
lret
rdtsc
mov
inc
dec
or
add
push
pop
mov
mov
and
shl
jle
mov
jle
mov
sbb
fmul
aad
xor
xchg
mov
mov
push
mov
add
mov
rolb
push
scas
cmp
or
cmp
sbb
push
xchg
add
call
dec
xchg
pop
mov
emms
jmp
inc
test
imul
xchg
cmpsb
scas
adc
cmpsl
call
push
enter
ss
mov
pop
cwtl
in
lahf
jp
sbb
xchg
mov
add
sbb
or
pop
mov
ss
cwtl
xor
mov
mov
movsl
mov
and
sbb
jnp
scas
mov
ljmp
int3
pop
mov
dec
pop
mov
rolb
shrl
fadd
jb
pushf
or
std
mov
xor
inc
and
mov
out
pop
adc
inc
pushf
sbb
and
or
mov
jecxz
fdivrl
add
jmp
sub
xor
arpl
pop
push
adc
mov
sbb
mov
pop
adc
fs
and
stos
jl
jg
fcom
iret
out
xchg
inc
stos
cwtl
jle
push
sbb
enter
stc
push
cs
lret
push
ds
cmpsb
xchg
and
jle
and
jl
loope
ret
loop
xor
push
mov
push
xorb
push
fsubs
ret
push
adc
sbb
mov
lcall
and
sub
ret
dec
inc
scas
es
jmp
push
and
bound
mov
and
or
lock
adc
insl
jbe
pop
jg
xor
push
mov
loope
adc
test
int
loop
add
push
pop
xor
cwtl
clc
cld
and
mov
push
dec
mov
lret
cmpb
cld
pop
push
mov
push
jge
xchg
jo
popf
andb
or
pusha
scas
jno
fnsave
push
sub
and
xchg
xchg
or
sub
leave
push
inc
hlt
inc
enter
sub
dec
popl
and
push
mov
out
test
clc
lret
lock
lret
sbb
mov
or
xor
dec
insb
pop
or
dec
push
inc
ret
xchg
lock
mov
jle
push
cmp
mov
inc
push
jecxz
push
scas
sbb
or
stos
pusha
xchg
daa
pop
push
nop
jb
xchg
lock
add
or
xchg
inc
gs
xor
push
xchg
mov
les
std
mov
pop
sbb
mov
add
xchg
lock
test
xor
je
jnp
mov
insl
icebp
and
fildll
pushf
sub
pop
sbb
ss
mov
rcll
and
or
js
int
sub
sbb
add
cs
jg
xchg
xchg
jbe
inc
inc
pop
pop
nop
xor
mov
mov
leave
push
inc
mov
mov
inc
mov
mov
pop
int3
sub
fs
pop
sti
mov
sahf
pop
subb
int
mov
mov
imul
mov
scas
add
and
adc
push
xchg
out
xchg
loopne
notl
or
hlt
inc
pop
loopne
fimuls
es
cs
cmpsl
popf
adcb
loop
lret
lods
and
pop
in
pop
mov
lea
sahf
punpckhdq
movsl
repnz
pusha
add
mov
or
or
mov
mov
das
insl
lea
cmp
cmp
loop
inc
data16
push
mov
lods
add
push
movntq
loop
pop
aam
int3
xchg
dec
inc
flds
add
cmp
jnp
inc
in
cmpsl
in
push
pop
inc
mov
mov
test
loopne
insb
scas
jp
push
adc
fcompl
sbb
sbb
push
jb
add
push
je
push
nop
daa
data16
jmp
cmpsl
rorb
push
out
push
push
xor
js
sub
negb
jns
push
aaa
jae
bound
or
pop
loopne
lock
jnp
xchg
aaa
shrb
push
mov
cmpsl
add
xchg
inc
add
and
xchg
rcl
movsb
out
imul
mov
loop
xchg
add
test
push
add
xlat
push
shl
imul
xchg
popa
mov
mov
repz
mov
xor
ss
sub
mov
mov
or
cmp
sbb
lds
xor
cs
mov
jo
push
push
cmp
mov
sub
dec
movsb
mov
push
sti
sub
pop
fsubl
shlb
dec
mov
xchg
es
xor
pop
mov
inc
addr16
pop
into
dec
lahf
adc
jo
sar
mov
and
outsb
and
popa
cmpsl
sbb
or
loope
push
das
mov
fildl
jbe
and
imul
cmp
insb
mov
pop
push
pop
xor
push
pop
jne
neg
and
and
imul
cmc
rorb
inc
or
jl
mov
mov
ds
mov
out
and
xchg
lahf
jmp
bound
test
data16
lahf
and
sbbb
nop
bound
mov
pop
sbb
mov
jno
xor
ljmp
cmp
lods
ljmp
fisubl
out
mov
ret
push
daa
cmp
jo
or
mov
imul
je
push
pop
pop
imul
sbb
mov
aad
sbb
cli
cmp
push
mov
imul
dec
scas
or
or
ljmp
xchg
mov
lock
orl
into
cmp
inc
or
dec
xor
and
xlat
nop
dec
jb
mov
inc
ret
or
inc
popa
inc
aaa
or
push
mov
mov
jl
aaa
jecxz
mov
test
xor
sub
cltd
push
aas
mov
roll
ljmp
jne
jae
orps
mov
cld
dec
cld
push
enter
dec
xchg
sbb
mov
clc
push
popf
fstl
push
pop
dec
mov
or
mov
shlb
pop
imul
pop
xchg
aas
mov
sbbb
jg
leave
push
mulb
jae
mov
fwait
ja
add
cwtl
push
test
aam
pop
arpl
adc
xor
adc
xchg
les
bound
push
movsb
cmp
dec
mov
cmc
fcmovnbe
test
arpl
mov
pushf
push
lahf
xchg
mov
js
adc
adc
test
fldt
mov
popf
popf
inc
cmp
cld
add
or
addr16
cmpsb
add
adc
push
aam
shlb
shll
mov
fs
inc
dec
push
inc
loopne
dec
mov
sub
dec
mov
mov
push
imul
fs
push
or
mov
icebp
or
js
mov
jne
cmc
add
insb
repz
jns
out
push
push
loopne
xchg
ret
mov
push
ret
sti
ds
or
sbbl
mov
popa
cmp
cmpsb
loope
push
sub
add
into
divl
xor
jbe
dec
jns
scas
dec
rol
pop
jnp
ljmp
lret
bound
inc
aad
frstor
mov
or
test
adc
sbb
or
arpl
mov
mov
insl
subb
lds
js
and
ss
clc
ret
lret
mov
leave
adc
sbb
arpl
std
pop
loope
push
jae
fwait
xor
inc
sarl
scas
aad
mov
or
push
movsl
lods
hlt
pop
sbb
mov
adcb
push
xchg
or
pop
aaa
out
sbbl
popf
pop
std
js
xchg
cmp
loop
int
sub
test
or
inc
ljmp
imul
movsl
and
aas
adc
push
test
hlt
adc
cmp
ret
ficoml
xor
js
rcrl
pop
add
inc
pop
inc
pop
add
sub
bound
mov
jmp
imul
int
xchg
je
dec
jge
jp
jno
mov
inc
push
mov
jne
sbb
jl
mov
shlb
pop
pusha
xchg
mov
adc
icebp
pop
pop
mov
pop
jmp
push
push
dec
push
inc
out
les
ret
mov
mov
icebp
scas
xchg
mov
and
dec
into
xchg
pop
ja
test
scas
sarl
and
insb
mov
mov
nop
aaa
jmp
out
adcl
xlat
add
dec
push
push
nop
xor
inc
sti
push
jp
mov
or
xor
mov
fsub
call
pop
jne
push
jmp
aas
push
adc
test
xor
xor
and
inc
xchg
and
popa
call
loopne
sub
cmp
in
int3
test
push
idivb
imul
mov
faddp
adc
adc
or
nop
rolb
and
add
movb
cmc
ret
mov
hlt
push
or
rcll
push
call
mov
mov
cmp
xor
pop
pop
pusha
pop
in
mov
mov
or
cmc
xorb
pop
adc
into
sbb
pop
sarb
test
es
clc
mov
dec
jg
cmp
test
movsl
movsl
pop
sbb
and
xchg
jp
sub
js
jmp
imul
fs
pop
add
sub
sub
mov
orl
shl
imul
mov
int
adc
mov
dec
and
xlat
xchg
mov
shlb
dec
adc
fbstp
add
pop
fwait
sub
push
add
addr16
loop
push
inc
mov
clc
imul
enter
shl
loop
push
inc
popa
inc
adc
pop
hlt
in
inc
arpl
hlt
addb
js
cli
or
pop
cld
mov
sub
push
cmp
sti
pop
sub
cmp
int3
adc
mov
and
push
into
cmc
fimuls
dec
jp
je
sub
adcl
jle
ds
cmp
push
sahf
inc
pop
cs
adc
aam
or
dec
es
pop
xchg
push
fdivl
out
leave
mov
in
test
xlat
adc
push
int3
xor
clc
inc
add
mov
leave
push
jnp,pt
pop
pop
dec
xchg
cmc
jb
fsts
mov
lds
cmc
bound
jmp
lods
pushf
sbb
ret
sub
popa
dec
or
in
pop
daa
aam
mov
inc
popf
loopne
xchg
push
je
testl
sbb
sbb
std
les
lock
test
add
adcb
aaa
leave
subb
adc
mov
xchg
inc
mov
rcrl
sbb
or
pop
xchg
aas
adc
enter
pop
sub
push
or
int3
fldcw
in
ret
xchg
jp
or
std
aad
adc
or
lret
addb
sub
jo
std
cmp
push
push
push
sbb
mov
mov
shrb
mov
adc
cmp
or
cli
out
pop
mov
lods
out
aam
mov
pop
int
jg
loopne
faddl
sub
out
push
cltd
clc
or
push
mov
pop
push
and
dec
sbb
aas
push
adc
shrl
sbb
push
and
clc
adc
xor
in
fsts
xchg
loopne
sarb
call
jnp
inc
stos
out
xchg
les
sub
aas
or
pusha
jl
dec
sti
sarl
mov
push
xor
add
imull
test
pop
dec
pop
lods
testb
mov
push
mov
leave
push
rorb
push
in
jl
xchg
push
mov
xlat
inc
lahf
insl
cld
add
jecxz
sub
cmp
ret
sub
xor
jl
and
dec
adc
xor
loopne
dec
or
mov
ret
lods
mov
loop
ficoms
add
in
jo
cmp
bound
xchg
in
int
js
popaw
add
test
pop
pop
shlb
idivb
arpl
cmp
js
mov
outsl
sbb
and
jne
nop
sub
add
lods
es
dec
xchg
lahf
xorb
dec
mov
aas
xchg
dec
pop
es
leave
into
pushf
mov
movsl
pusha
movsl
push
dec
or
arpl
add
sub
cs
outsl
mov
aam
les
popf
sub
mov
xor
cmpsl
adc
mov
adc
dec
mov
mov
xchg
xchg
pop
push
jp
fnstcw
sub
jle
adc
pop
daa
mov
or
lods
sbb
in
xor
cmp
inc
popf
mov
lahf
fnstsw
inc
sti
movsb
push
test
or
sbb
dec
clc
outsl
ljmp
mov
std
rolb
adc
outsb
mov
or
sahf
and
xchg
shr
jle
add
jno
xchg
test
push
addb
inc
or
mov
lods
aam
inc
pop
cmp
push
ja
sub
js
sbb
mov
aam
cmpsb
or
or
ret
adc
add
fiaddl
jg
std
mov
repz
mov
pusha
sbb
pop
scas
shlb
test
or
jcxz
insb
stos
xchg
add
cmp
add
add
inc
mov
loopne
inc
adc
xchg
cmp
lods
push
mov
push
jmp
jns
cwtl
mov
push
xor
shll
adc
dec
clc
jno
sub
ljmp
aas
jge
test
fcmove
sub
dec
inc
pop
ret
adc
sbb
fsubrl
and
test
cld
add
loop
push
out
pop
xchg
mov
outsb
lock
or
rcrb
fldenv
jecxz
dec
insl
stos
xor
mov
xchg
bound
and
ds
jmp
dec
sbb
inc
add
xor
adc
mov
push
push
cmp
mov
add
mov
mov
xchg
das
sub
js
js
mov
int
adc
out
cmpsb
cmp
sbb
or
jno
inc
xor
pusha
or
stos
test
jnp
cmp
icebp
cwtl
or
add
js
xor
addr16
movsb
pop
mov
ret
xchg
cli
push
mov
ret
push
test
popa
lea
cltd
xchg
bnd
ficoms
push
mov
push
and
cld
mov
je
mov
jbe
add
or
inc
adc
and
xor
xor
call
ret
lds
pusha
xlat
mulb
lahf
cmp
mov
xor
xlat
add
pop
aaa
aas
mov
inc
xor
add
mov
int
mov
pop
cld
push
nop
or
jne
sbb
inc
es
sti
test
test
rclb
mov
roll
and
fnstenv
mov
sub
mov
arpl
int3
sbb
lret
hlt
sbb
or
ljmp
mov
inc
cwtl
jecxz
sbb
xchg
xchg
add
jb
ss
or
pop
pop
xchg
xor
adc
mov
dec
jae
push
mov
fdiv
adc
aaa
int3
das
jno
push
jae
add
inc
add
jb
adc
fnsave
mov
in
pop
fisubrl
imul
adc
mov
out
sub
fistpl
mov
popa
daa
xor
jmp
fs
in
xchg
decl
sub
lock
addl
ds
push
in
dec
hlt
push
and
lods
popa
lret
fwait
test
inc
lahf
scas
mov
inc
jmp
jle
cmp
inc
fmulp
mov
cmp
add
mov
iret
hlt
popa
mov
add
mov
xchg
jns
es
xchg
push
cmp
cmpsl
in
mulb
lock
imul
mov
shll
and
jnp
icebp
pop
sbb
daa
inc
push
scas
out
mov
inc
mov
sub
cmpsl
adc
cmp
sub
add
les
lods
push
xor
fists
inc
ret
lods
sbb
mov
jge
mov
push
xor
mov
jp
cltd
pop
jo
jge,pt
pop
mov
jmp
imul
fcmovb
popa
ss
sub
push
nop
roll
unpcklps
inc
mov
cwtl
out
jp
ss
cmp
rdmsr
and
sub
arpl
mov
push
jle
inc
sbb
lods
push
imul
xchg
mov
movb
add
add
in
pop
cmpsb
xlat
mov
mov
loopne
clc
imul
dec
dec
addb
sub
dec
mov
cmp
mov
and
xchg
jnp
fcompl
shr
jge
cwtl
mov
incb
jp
fsubl
test
les
int
adc
sbb
lret
insl
test
iret
data16
fistpl
mov
xchg
sar
imulb
lods
ss
popf
test
cmpsb
js
or
aad
mov
mov
int3
adc
or
inc
fisubrs
adc
mov
cwtl
push
xor
mov
xor
scas
hlt
sti
inc
loopne
add
icebp
xor
sub
mov
sub
iret
or
push
and
pop
jecxz
or
loopne
popf
fistps
ds
inc
dec
outsl
jbe
xchg
daa
lods
cmp
shr
stos
stos
mov
mov
dec
xchg
sub
lcall
dec
fucomp
lock
sbb
das
adc
rcl
push
and
mov
sbb
xor
or
add
pop
sub
nop
cltd
jg
insb
mov
mov
mov
push
jnp
incl
mov
sub
movsl
aas
or
pusha
and
aam
shl
or
and
imul
out
int
xor
cmpb
mov
push
xchg
fwait
cli
pop
icebp
jle
inc
pop
stos
dec
lret
js
cld
jp
rclb
sub
rorb
scas
ret
push
incb
jg
mov
lcall
cmp
push
imul
mov
call
insb
push
xor
or
je
push
daa
mov
and
and
add
or
js
sub
cmp
mov
in
sti
push
pop
add
enter
lods
jb
shrl
out
xlat
ficomps
xor
push
mov
js
jo
es
loopne
push
mov
ficoms
pop
jo
iret
or
call
mov
nop
sub
adc
dec
sahf
lret
pusha
stos
inc
cli
push
in
lds
mov
cltd
loop
shlb
xchg
push
push
test
add
stos
push
jne
test
sti
call
ret
xor
ja
push
mov
inc
xchg
lcall
sbb
aam
jl
push
out
das
aam
or
mov
test
clc
xor
sbb
outsb
pushf
pop
test
pop
test
out
rorl
push
pop
mov
into
add
mov
sbb
fsub
push
in
xchg
mov
inc
sub
popa
lea
mov
mov
cmp
jns
test
pop
shrl
ret
stos
push
sbb
imul
sbb
push
sub
adc
ljmp
in
test
cmpsl
adc
mov
push
out
push
lahf
jno
push
cli
aad
cwtl
xor
or
mov
or
jmp
xchg
adc
and
decb
mov
add
icebp
movsl
cmp
into
fs
aam
adc
aaa
popa
or
inc
mov
rclb
cmp
sbb
jbe
cld
ds
xlat
js
mov
jnp
es
xchg
mov
dec
bound
or
in
jecxz
add
dec
das
cmpsl
out
ljmp
outsb
ret
sahf
add
rorl
loop
pop
lock
nop
int3
mov
dec
jl
stc
insb
test
dec
sarb
sbb
push
bound
adc
jb
les
imul
int3
add
dec
cmp
pop
inc
push
ja
pop
xchg
jge
sub
mov
jecxz
add
addr16
add
rclb
cmpl
mov
or
lds
cmp
cmp
insl
mov
xchg
mov
jo
ljmp
xorb
jo
adcb
add
call
pop
add
enter
es
adc
sbb
cmc
mov
and
jo
jns
incl
pop
dec
int
jle
sbb
mov
mov
pop
mov
movsl
push
pop
or
dec
inc
lcall
loopne
stos
sub
add
inc
pop
xor
cli
cld
jp
cli
sub
push
ja
mov
sbb
cmpsb
dec
add
mov
add
add
add
stc
or
sbb
and
dec
pcmpgtb
inc
orl
mov
adc
ret
inc
popf
mov
in
push
ja
or
cmc
pop
jl
shl
hlt
cld
push
leave
dec
mov
ret
or
leave
mov
add
in
mov
notb
ret
cltd
mov
inc
sbb
bound
push
xchg
dec
dec
scas
ret
ret
push
bnd
stos
in
test
pop
lea
pavgw
aas
leave
jmp
fildll
stc
xchg
xor
mov
and
jp
scas
pusha
mov
mov
out
push
cmp
shr
xchg
ljmp
push
inc
stos
data16
cs
lret
mov
fsts
mov
nop
jns
sarl
xlat
sub
jge
xchg
aas
mov
add
loopne
out
pushf
into
mov
push
sti
enter
lods
cli
roll
mov
and
jbe
insl
push
iret
mov
aad
cmp
arpl
cmpsb
xchg
push
insl
ret
scas
mov
push
mov
fbld
cmp
loop
jo
xchg
dec
or
add
jbe
sbb
jmp
movsl
int
hlt
dec
ret
lds
jns,pn
mov
hlt
rorl
push
push
inc
push
dec
mov
fmull
call
xor
mov
add
repnz
rolb
inc
jns
loopne
adc
sbb
shl
cmpb
addr16
das
sub
jae
cmpl
imul
je
sbb
adc
stc
push
scas
adc
xchg
or
pop
stc
movsb
adc
enter
int
movsb
rcll
or
fsubl
hlt
add
es
fbld
pop
sub
inc
loopne
cs
dec
mov
nop
fdivs
pop
add
stos
add
add
mov
ret
pushl
and
mov
loopne
rolb
les
and
xor
push
das
and
pop
mov
cs
popa
xchg
mov
jno
lcall
add
stc
xchg
adc
jp
hlt
mov
jne
xor
repz
scas
mov
sub
ret
fildll
movsb
mov
sub
sbb
push
int
repz
inc
lods
xor
outsb
ljmp
inc
mov
mov
mov
pop
mov
cmp
sub
cltd
fisttpl
adc
cli
xchg
bound
fwait
dec
mov
ja
mov
pop
out
cld
mov
outsb
jmp
stos
icebp
sahf
dec
xchg
gs
arpl
insb
imul
icebp
lea
js
xchg
in
stc
jp
jmp
pop
and
movsl
or
add
ja
xor
cmp
mov
xchg
inc
dec
mov
mov
ljmp
dec
fisubrl
jmp
scas
pop
fsubrl
cmp
or
adc
or
cmp
sti
cltd
push
je
shr
cmp
sub
int3
cmpsb
lret
push
adc
imul
in
push
nop
imul
jo
push
sub
insl
adc
cmpsl
aam
ret
gs
inc
push
push
in
sarb
fs
pop
or
or
sub
and
lcall
adc
push
mov
aam
mov
clc
call
ljmp
add
xchg
scas
roll
mov
in
sub
hlt
insb
ret
mov
lods
sub
fldl
push
jbe
dec
fwait
mov
jbe
mov
inc
cmc
out
mov
std
loopne
xor
lahf
int3
mov
inc
cmpsb
or
sbb
push
or
jno
sub
pop
mov
lahf
xor
std
ret
mov
inc
push
sub
repz
mov
cmc
add
dec
test
cltd
out
std
clc
pop
lock
pop
and
mov
ja
sub
adc
dec
into
subl
jge
mov
dec
lock
sub
dec
sub
loop
in
xchg
cld
rolb
popf
clc
pop
out
rolb
xor
pop
outsl
mov
cmp
pushf
aam
scas
add
jge
dec
pop
xchg
mov
test
pop
das
add
pop
stc
xchg
add
enter
sbb
push
adc
mov
xrelease
aaa
fldenv
rorb
inc
loop
stos
or
mov
cmp
jno
inc
cmp
add
movnti
loope
mov
aaa
scas
pusha
bound
fidivl
outsl
test
sub
repnz
dec
insl
and
outsb
push
cli
insb
jg
dec
sub
je
xor
dec
dec
sbbl
das
faddl
jg
in
out
inc
jg
pop
cwtl
sti
cmpsb
push
add
std
mov
loop
iret
inc
sbbl
loope
mov
mov
push
mov
lods
pop
mov
icebp
in
sbb
sub
jno
xor
mov
aad
pop
mov
or
fnstsw
outsb
inc
ret
rcll
add
adc
push
cmp
push
js
lret
or
or
sub
das
mov
xor
jno
mov
shll
xlat
aam
cli
es
dec
rolb
push
gs
or
loop
aas
cmp
mov
add
push
jo
sbb
sbb
sbb
sbb
imul
in
cmp
adc
stos
inc
outsb
mov
mov
mov
jmp
std
cmp
xchg
jno
pop
rcl
sbb
mov
ljmp
add
or
fistps
add
shlb
mov
push
dec
jge
jecxz,pt
mov
stos
mov
les
fdivr
inc
stc
and
xor
ret
rsqrtps
mov
pop
cld
jp
imul
shll
add
lahf
inc
cmp
fsubrl
mov
mov
icebp
pop
ret
xchg
mov
sbbl
mov
add
arpl
out
add
lods
and
addr16
repnz
addr16
movsb
ficompl
lods
out
inc
mov
in
jnp
mov
cmpsb
pop
add
lret
cli
sbb
jbe
stos
lret
mov
adc
subb
popa
fcmovnbe
bound
adc
lret
pop
mov
ficompl
push
cmpsl
add
dec
adc
out
pop
and
jp
scas
cld
xor
mov
scas
cmp
testl
fiadds
jl
test
pop
xor
bound
xor
sbb
push
dec
dec
xchg
pop
nop
push
js
mov
mov
fidivl
popf
imul
movsb
cmpsb
rorl
loop
sahf
jecxz
push
js
sub
stc
fisubl
dec
in
sbb
mov
rcrb
imul
push
jmp
adc
jb
jnp
push
popf
repz
xor
out
imul
mov
adc
or
xor
pop
mov
aaa
pop
add
xor
mov
mov
daa
ret
and
pusha
mov
test
rorb
jecxz
loop
or
mov
sbb
xchg
and
xchg
mov
and
xchg
xor
push
mov
and
lods
mov
dec
ss
cmp
jb
int3
sub
inc
cs
xchg
insl
dec
push
jne
gs
jne
push
mov
subl
or
mov
xchg
pop
adc
ds
push
jbe
cld
add
or
push
cs
clc
adc
in
inc
inc
cli
jmp
imul
sbbl
shll
xor
pusha
sub
xchg
xchg
xor
mov
insb
pop
das
fsubrs
mov
or
cld
or
imul
xor
jle
jl
sbb
mul
push
test
shll
stos
sbb
fbstp
mov
iret
clc
and
sahf
mov
mov
inc
ds
mov
sarl
pop
mov
cmp
xor
or
mov
js
push
fidivl
movsl
jp
imul
fwait
in
adc
aas
sbb
pusha
and
xchg
mov
or
shll
pusha
sbb
rcr
cwtl
cmp
ljmp
outsl
std
jo
mov
inc
jb
mov
imul
or
xchg
mov
jnp
push
int
push
adc
cli
mov
testb
mov
mov
add
fwait
scas
in
xchg
push
int3
pop
inc
mov
stos
call
enter
sub
or
outsb
imull
xchg
xchg
push
pop
jg
or
sbb
jmp
dec
add
les
sbb
filds
pop
xorl
push
cli
leave
push
movsl
daa
mov
lods
inc
hlt
notb
flds
ret
and
xor
cmpsl
fwait
movsb
mov
xchg
or
add
or
les
xchg
jnp
insb
xor
fnstcw
out
fwait
notl
dec
push
stc
ljmp
xor
aad
test
mov
jg
sbb
push
or
adc
enter
push
scas
dec
stos
rclb
lret
rorb
or
bound
sarl
inc
int
cmp
jmp
jns
cli
mov
inc
lock
xor
jmp
mov
aad
loope
sbb
std
push
nop
cmpsl
pop
aas
je
jp
and
rol
incl
cmpsl
nop
mov
loop
sar
movsl
dec
aam
add
or
dec
jnp
push
push
imul
out
cltd
mov
add
scas
scas
jne
mov
mov
xchg
inc
inc
lcall
adc
mov
std
scas
stos
mov
into
fdivs
inc
mov
mov
pop
xchg
push
xor
in
decl
int
stos
bound
es
orl
daa
mov
mov
and
or
addr16
jne
or
jb
insl
and
jo
pop
aad
fs
add
pop
inc
and
sbb
aas
sub
xchg
sbb
jmp
subl
add
dec
ja
sub
popa
addb
push
inc
dec
adc
jo
aam
add
sbb
jo
loope
mov
push
imul
lcall
cmpsl
popf
mov
mov
jb
mov
sbb
adc
lcall
xor
add
jecxz
dec
in
push
lock
stc
loopne
enter
push
dec
dec
dec
mov
hlt
mov
pop
lea
pushf
push
mov
movsb
test
xchg
fisttps
into
add
jno
int
out
mov
shll
mov
fistpll
and
mov
jmp
pop
nop
cmp
stos
jo
in
and
jp
mov
fcmovb
and
cmp
add
cmp
pop
pushf
inc
cmp
cmpsb
hlt
lock
loopne
mov
xor
jecxz
mov
and
outsl
adc
aas
mov
or
lds
sub
inc
sub
xlat
cmp
jb
aad
xor
push
rorb
adc
xchg
lods
or
inc
mov
aad
fistps
fmuls
or
and
push
testb
or
idiv
sbb
enter
sbb
jp
xor
mov
add
lahf
lock
dec
ds
or
cltd
push
push
pop
sahf
add
pop
mov
clc
add
xor
ja
testb
fwait
aaa
ss
and
pop
lods
and
or
or
lods
int3
add
xchg
jb
in
mov
mov
negb
ret
bound
outsl
or
out
add
data16
loope
add
add
fsts
lret
je
push
mov
daa
pop
jne
sbb
loope
or
in
nop
xor
mov
add
aas
pop
pusha
pop
outsl
bound
jecxz
inc
inc
dec
add
jg
xchg
mov
push
daa
out
add
mov
xor
xchg
rol
rclb
adc
pop
jecxz
dec
jg
shlb
mov
pop
xlat
fsubrp
sbbl
sbb
fisttps
outsl
xchg
cmp
out
lock
inc
dec
hlt
adc
xchg
cmpsl
xchg
jbe
mov
pop
or
daa
and
movsl
mov
inc
or
subb
rorb
scas
and
stos
mov
fldcw
iret
and
xchg
xchg
pop
call
daa
jo
xor
sbb
sbb
movsb
push
cmp
lcall
inc
adc
inc
sub
nop
dec
ficoms
pop
add
insl
icebp
sbb
xor
mov
sbb
pop
and
nop
roll
xor
jge
roll
pusha
fistpl
fs
sbb
jge
sbb
or
push
mov
pop
aam
repnz
mov
mov
pop
xchg
sub
sub
roll
mov
pop
inc
mov
push
xchg
ds
xor
sub
xchg
bound
loope
sbb
or
push
inc
pop
cmp
sub
cmp
es
xor
test
popf
pop
test
xchg
xor
add
lcall
push
fnstsw
dec
push
mov
hlt
popf
lods
mov
mov
adc
jmp
adcb
cwtl
jl
inc
lea
loope
dec
mov
stc
pusha
inc
imul
fldcw
or
xchg
cmp
and
mov
lcall
pusha
push
and
mov
jno
mov
jnp
sbb
andl
push
cwtl
mov
lods
cmpsl
push
jae
pusha
push
xchg
outsb
clc
sub
divb
xor
sub
and
and
daa
cmp
mov
scas
xchg
jns
push
movsl
sbb
jb
xchg
out
xor
xchg
das
push
test
loopne
jl
jl
mov
loopne
icebp
andl
sbb
sbb
and
mov
ret
xchg
fwait
sub
je
mov
xor
loop
add
test
loope
add
jmp
pop
push
push
jb
cmpsl
inc
jg
mov
inc
scas
jle
pop
or
pop
clc
inc
fdivr
dec
add
xchg
jg
sahf
cmp
fld
lahf
sbbb
xor
xchg
jnp
pop
pop
mov
dec
xchg
push
test
or
test
mov
add
inc
jle
lret
and
xor
mov
fcom
cwtl
inc
add
xor
mov
pop
je
insl
rolb
dec
std
push
jmp
mov
hlt
sbb
sbb
nop
dec
jno
lcall
mov
outsb
arpl
popa
mov
ret
adc
out
dec
mov
leave
sub
repz
cmp
pushf
sbb
sbb
cld
andl
icebp
add
or
cwtl
xor
cmp
jecxz
xchg
inc
add
xchg
jge
subl
std
fdivs
mov
cmpsb
inc
ss
mov
cmp
mov
rclb
ret
inc
orb
or
jmp
mov
test
loope
inc
pop
fisubl
imulb
push
iret
cmc
cmc
or
arpl
ja
sbb
stos
add
jecxz
dec
ret
call
sbb
mov
insb
paddusw
pushf
push
mov
lret
mov
cli
mov
or
adc
adc
js
insb
loopne
pop
mov
int
xor
cmp
les
lock
loopne,pn
inc
jns
pop
in
push
scas
rcll
shlb
sarb
inc
sub
jp
jecxz
jbe
pushf
mov
ret
mov
in
adc
add
add
lock
in
xor
shll
pop
lock
adc
rol
mov
sbb
or
iret
cmpsb
sub
sub
jl
ds
jnp
lods
cli
cmc
dec
call
sbb
adc
push
cmp
xor
mov
lds
rcrl
cli
and
les
cmp
fsubl
popf
mov
jo
cmc
repz
push
xchg
mov
aas
loopne
das
push
ljmp
js
scas
dec
cmpsb
dec
ljmp
push
lahf
cmpsl
push
cld
sbb
leave
mov
dec
mov
sub
push
sub
les
sbb
rcr
rorl
cs
xor
test
adc
addr16
scas
rcr
int
xor
outsb
ret
push
pusha
bnd
bound
lcall
mov
inc
fs
jecxz
sbb
fists
mov
mov
xchg
icebp
xchg
mov
cmp
cmp
sahf
lahf
mov
push
testl
xor
rcll
add
adc
fs
sbb
dec
cltd
or
insb
int3
mov
sub
sti
mov
push
jbe
test
xchg
xchg
add
stc
leave
int3
out
test
lret
insb
into
or
pop
rorb
cltd
xor
ds
add
inc
xchg
jbe
mov
mov
clc
mov
movsb
int3
jbe
movsl
sbb
cmp
jle
lret
cmp
test
and
or
mov
in
cltd
in
mov
mov
cmpsl
dec
daa
dec
adc
std
insl
loop
jo
jmp
xor
adc
ds
mov
fs
mov
dec
out
ja
mov
mov
test
sub
shll
cmpl
imul
dec
repnz
or
jecxz
jp
fbstp
inc
ljmp
cld
cwtl
jb
inc
call
pushf
call
pusha
and
inc
pop
jae
loope
mov
or
jbe
dec
mov
rorb
inc
inc
add
pop
cmp
psrld
pushw
push
into
stos
jp
add
and
pop
mov
dec
push
cltd
mov
rcrb
or
subl
sarb
sbb
xchg
mov
add
xor
cmp
or
sub
repnz
rorb
add
xor
jno
jle
jne
jmp
mov
shrb
sahf
jl
adc
mov
dec
mov
dec
jp
sub
or
inc
xchg
jno
out
out
and
mov
sub
adc
xchg
adc
add
push
rolb
std
xbegin
iret
addr16
aas
sub
fdivr
insb
dec
add
push
inc
cmp
push
mov
aaa
loopne
and
jl
or
daa
roll
push
and
inc
push
push
add
push
sub
inc
xor
leave
fmuls
mov
sub
or
mov
jle
push
mov
add
push
and
mov
pop
adc
dec
loope
pop
jb
rol
dec
dec
rcll
fwait
cmp
mov
push
push
jns
cmp
rcrl
cld
pop
mov
mov
add
cmp
and
push
mov
xchg
mov
testb
or
movl
add
cld
pop
xchg
add
dec
adc
cs
inc
cwtl
call
inc
sbb
inc
maskmovq
testl
pop
enter
mov
dec
scas
call
dec
int
ljmp
shlb
imul
call
dec
xor
inc
or
push
push
xorb
push
enter
xchg
mov
scas
mov
push
xchg
out
nop
jns
out
mov
dec
sarb
xchg
add
insb
outsb
dec
jecxz
lcall
xlat
sarl
outsl
mov
movsb
repz
inc
adc
add
test
aam
add
mov
jge
push
pop
add
addb
add
mov
shrl
aad
jnp
mov
loope
in
pop
loopne
gs
shl
loopne
mov
cld
cmp
je
and
adc
lods
jnp
mov
mov
ds
dec
out
sub
push
xor
jecxz
mov
in
fimull
and
sbb
popa
cmpl
out
arpl
ds
xor
insl
cmp
mov
lret
lock
sti
jmp
sub
xchg
xchg
in
sub
outsl
cwtl
lods
xchg
cs
mov
int
and
mov
fisttpll
outsl
mov
iret
jp
mov
shr
jb
sub
sub
daa
negl
mov
xorl
sbb
and
and
pusha
movsb
push
xor
mov
sub
scas
test
mov
lahf
and
jb
and
les
fsubs
xorb
adc
push
int
mov
js
or
adc
mov
dec
iret
adc
sub
xchg
mov
jns
out
enter
aas
pop
movsb
lahf
lock
punpckhwd
in
dec
and
and
test
pop
push
outsl
push
clc
cld
arpl
test
out
adc
les
call
inc
mov
in
inc
xlat
jge
data16
test
sub
cmpsl
cs
push
push
cli
in
cmp
lock
jg
inc
fdivrl
test
lds
push
loope
pop
test
xchg
test
movsl
mov
and
jp
push
push
push
jmp
sub
pop
xchg
sbb
sahf
xchg
cmp
js
or
cmpsb
pusha
adc
imul
or
cmp
adc
push
fiadds
movsb
repnz
test
sbb
orl
orb
jno
data16
xlat
movl
cmp
inc
or
inc
das
stc
sub
xor
pop
cmp
mov
pop
pop
mov
jmp
mov
std
mov
lods
lds
clc
or
aas
mov
fwait
pop
pushf
repz
inc
mov
fsubrs
popa
add
jl
push
cltd
clc
and
call
push
lcall
add
inc
lea
xchg
sub
insb
xchg
pop
adc
add
push
mov
mov
lcall
cmp
orl
lock
cli
fs
ss
pop
mov
pop
rorl
push
and
cwtl
add
dec
je
xor
xlat
push
daa
pushf
nop
icebp
imul
rcll
loopne
not
mov
sbb
mov
fldt
dec
mov
add
xchg
dec
cmp
mov
popa
push
popa
pop
xor
int3
and
mov
not
xor
mov
inc
test
xchg
aam
inc
lods
sbb
jo
xchg
ret
lock
int3
and
cld
mov
ffree
or
add
ret
push
arpl
sub
cmp
lds
es
cs
mov
pop
lock
push
inc
addl
mov
imul
ds
in
sub
dec
jg
xor
iret
add
inc
stc
jle
push
sbb
adc
cmp
pop
loope
push
cmpsb
insb
cld
inc
inc
bnd
cmpsl
inc
pop
add
lods
pop
frstor
mov
bound
loope
icebp
bound
lock
test
jae
push
xchg
inc
bound
scas
call
fwait
pusha
and
es
sub
and
xchg
outsl
inc
shll
decb
ljmp
fcomp
inc
add
andb
xchg
jne
mov
xchg
xchg
fs
push
adc
movsb
xor
lods
cmc
sbb
push
clc
dec
pop
inc
pop
pop
mov
mov
faddl
jnp
push
insl
fmull
jecxz
fimuls
lahf
push
add
pop
cltd
js
test
sub
sub
mov
adcl
imul
rcl
scas
pop
mov
jp
adc
negl
mov
push
inc
fcoml
jg
pop
cwtl
and
cmp
popf
bound
fnstsw
cs
push
popw
faddl
add
push
jo
idivl
xor
cmpl
das
bswap
mov
push
and
or
jl
insb
pop
scas
adc
cmpsl
icebp
icebp
in
mov
push
idivl
addr16
int
jmp
add
dec
lcall
rcrb
xor
push
aas
xor
fwait
and
je
test
ret
add
mov
int3
dec
int3
and
aaa
rorl
aaa
imul
addr16
xchg
std
jmp
inc
pusha
pusha
into
adc
jle
divb
add
push
dec
xor
sbb
or
xlat
outsb
inc
es
xorl
push
xor
clc
push
scas
adc
aaa
jp
mov
enter
fs
hlt
rorl
icebp
scas
xchg
es
inc
dec
test
sub
dec
daa
dec
gs
insl
mov
les
mov
aad
in
push
sub
rcrb
mov
xchg
push
or
cmp
out
mov
ret
xlat
in
sbb
hlt
arpl
ljmp
pusha
stos
cmp
xchg
mov
dec
pop
sbb
and
cmp
mov
sbb
loopne
pop
enter
pop
fs
adc
adc
loopne
sbb
push
test
popa
sbb
sub
push
jno
into
lea
push
pop
fdivrs
sub
rcll
sbb
sahf
ljmp
imul
adc
pop
into
arpl
xchg
pop
push
in
xor
imul
xor
test
mov
decl
insl
leave
fcoml
sub
xchg
mov
push
push
adc
push
std
jb,pn
loop
pusha
cmpsl
or
push
pop
jno
negl
mov
jp
push
sti
outsb
test
sbb
pop
in
out
add
cmp
mov
adc
roll
test
cld
lret
mov
or
lahf
inc
mov
test
in
jne
lock
or
negb
les
fisubl
pop
rcrl
hlt
mov
test
fbld
aam
orl
mov
dec
mov
mov
std
cld
add
repnz
aas
adc
popl
adc
rorb
call
filds
stos
aaa
mov
lods
and
push
mov
rcrl
pop
dec
adc
loope
mov
inc
mov
imul
loope
jl
je
jns
sub
movsl
add
out
pop
scas
rclb
and
pop
add
push
out
pop
xchg
ljmp
add
shrb
add
xor
icebp
ja
dec
add
insl
sub
push
hlt
fdivs
aam
dec
insl
popa
inc
pop
inc
xor
clc
adc
add
into
mov
insl
or
rolb
inc
mov
dec
rol
sub
daa
cli
and
push
add
adc
push
or
cmpsl
xor
xchg
pop
inc
imul
imull
xchg
outsb
sahf
jo
adc
std
mov
pop
push
adc
add
bound
ss
push
mov
addl
inc
ja
dec
push
push
push
and
mov
mov
xor
xchg
xchg
insl
mov
imul
dec
insb
in
adc
mov
xchg
outsl
jmp
cmp
adc
inc
adc
push
sub
cmp
mov
sbb
pop
mov
inc
add
dec
fimull
negb
xlat
add
mov
push
daa
add
pop
add
add
neg
inc
lret
xchg
dec
mov
inc
adc
dec
push
push
push
rcr
cmp
inc
mov
push
pop
cli
inc
repnz
add
adc
adc
into
js
mov
push
loop
adc
add
rcl
inc
enter
dec
sbb
jp
int3
inc
mov
jae
or
dec
dec
dec
push
aam
inc
call
dec
insb
and
out
add
push
insb
popa
jmp
cmp
int
cmp
sbb
repnz
and
das
push
cmp
jmp
push
stos
dec
les
bound
adc
dec
mov
add
sub
cmpsl
xchg
mov
loopne
cmp
xchg
jmp
jne
push
mov
mov
jmp
call
sub
mov
fidivs
je
fdivr
je
or
xor
mov
add
and
or
insb
jo
xchg
lea
out
dec
sbb
pop
popa
lods
xor
inc
mov
andb
sub
mov
imul
lock
loopne
insb
mov
dec
xchg
and
fs
or
mov
mov
push
inc
xor
mov
icebp
mov
or
pushf
and
adc
xor
and
stos
ljmp
mov
mov
sub
addr16
repnz
jmp
cmp
add
adc
paddusw
filds
ret
mov
or
ljmp
jnp
popf
inc
cwtl
je
push
scas
adc
ljmp
dec
xchg
xchg
cmpsb
lock
daa
repnz
add
dec
add
fimuls
mov
addr16
or
cltd
dec
es
mov
push
loopne
stos
or
rclb
xchg
sbb
inc
or
loopne
lea
out
cs
pop
sti
divb
icebp
dec
sbb
addr16
xor
inc
jl
and
mov
movsb
cmp
pop
push
mov
es
add
xor
xor
sub
lods
sbb
xchg
jns
inc
imul
test
andb
mov
xchg
sar
push
push
add
fsubs
or
xchg
xchg
fbld
adc
adc
cmc
loop
mov
adcl
jae
sbb
mov
cmp
and
in
dec
cmp
or
addr16
fadds
adc
pop
lcall
aam
or
test
push
mov
pusha
mov
ret
add
sbb
push
imul
fpatan
sti
mov
add
addr16
push
push
sub
loopne
fldenv
sub
dec
mov
popf
sbb
xor
sbb
cmpsl
push
xor
mov
jns
fsubrl
lret
lea
push
push
jns
stos
xchg
xchg
shrb
pop
and
cld
inc
out
out
popf
xorl
ret
add
lods
push
aad
inc
shll
popf
sub
mov
cmp
inc
mov
pop
insb
pop
je
leave
js
ljmp
mov
pop
cmc
mov
test
or
jmp
xorl
out
mov
or
sub
ds
icebp
leave
fistpll
rorb
shl
sub
xor
ja
jo
inc
adc
lods
iret
sarb
das
lret
sub
adc
inc
jle
leave
outsb
subb
shrb
add
ror
mov
xlat
ficompl
mov
push
test
idivl
daa
xchg
mov
xlat
xchg
dec
inc
and
or
mov
sbb
nop
movsb
pushf
daa
mov
iret
sbb
cld
call
xchg
sub
jns
add
inc
enter
jg
insb
mov
jl
inc
mov
pop
shlb
mov
sub
xor
nop
xor
jnp
lods
enter
out
adc
adc
cmp
inc
push
xchg
mov
mov
out
add
adc
cs
jo
dec
xchg
mull
and
adc
pop
sarl
mov
cmp
call
push
sbb
cld
push
sbb
icebp
decl
cmp
std
push
or
and
mov
xchg
dec
rcr
mov
lock
jmp
rcr
ret
or
mov
ja
idivb
aad
xlat
mov
hlt
xlat
xor
fs
mov
pop
mov
xchg
mov
adc
inc
push
jmp
repnz
pop
sbb
icebp
pop
pop
or
nop
dec
push
roll
push
xor
cmp
movsb
sti
add
cltd
out
pop
fs
pop
and
push
lret
out
cmp
pop
shrl
mov
dec
shlb
je
and
fistpl
or
xor
movl
xor
sbb
push
frstor
ret
pusha
mov
mov
sub
jo
inc
iret
dec
cli
aad
jae
xchg
and
orl
push
add
xchg
cs
pop
push
scas
mov
xor
adc
aaa
add
or
adc
jge
inc
movb
sbb
insb
lcall
repz
test
gs
push
or
lret
imul
insl
das
sub
ret
rcll
and
push
inc
xor
jo
adc
jb
shl
dec
or
mov
sbb
pop
mov
mov
mov
push
and
xchg
shr
xor
xor
ret
push
add
sbb
ret
lods
jnp
or
jle
cld
fdivrs
sbb
inc
outsl
gs
dec
loop
testb
outsl
jnp
mov
mov
pop
or
inc
imul
lahf
pop
dec
test
cs
cli
xor
cmovbe
dec
rcrb
mov
imul
or
xchg
icebp
inc
adcb
dec
push
sub
popa
cwtl
orb
inc
imull
iret
adc
or
mov
icebp
pop
pop
stos
mov
loopne
pop
hlt
out
and
add
inc
in
and
shr
dec
pusha
cltd
mov
pop
lock
xor
dec
daa
push
add
push
add
inc
push
loop
inc
add
pop
cwtl
testb
xor
sbb
and
xor
xchg
sbb
shrb
movsl
bound
xlat
mov
daa
aas
push
orb
les
xchg
test
repz
and
fnstsw
fstl
pop
adc
xchg
dec
cmp
xchg
jecxz
mov
stc
insb
hlt
popa
jb
or
dec
sbb
xchg
add
jbe
mov
pop
xchg
rclb
fiadds
push
push
adc
outsb
push
xorb
lods
or
pop
pop
popa
pusha
inc
fdivrs
mov
add
jmp
popf
jno
mov
dec
fistpl
pusha
cmp
xchg
addr16
add
stos
sub
dec
push
ljmp
add
xchg
popa
xor
pop
lret
shll
cmc
mov
jns
pop
lock
nop
rolb
push
pusha
sub
lea
bound
loop
mov
sub
ja
sbb
and
jbe
negl
and
mov
idivb
adcb
enter
outsl
mov
fwait
mov
pop
mov
pop
cmpps
in
or
xor
inc
loopne
pop
fsubr
mov
dec
push
jmp
inc
mov
dec
lds
callw
cmp
jo
das
push
pop
mov
cmp
stos
and
orl
out
cmp
pop
push
test
loop
pop
stos
sub
inc
cmpsb
test
je
or
mov
aam
sub
pop
jge
nop
jo
mov
xor
loop
loop
flds
cmp
add
mov
lret
into
orl
movsl
data16
xorb
fisttpll
xor
lea
fdivp
mov
mov
mov
dec
shl
test
pop
xor
stos
inc
imul
push
int
movlps
or
mov
mov
outsb
ds
mov
push
push
xlat
fld1
xchg
lahf
pushf
dec
mov
sbb
ja
mov
pop
dec
xor
mov
mov
inc
js
adc
sub
cld
xor
cmpsl
rorl
push
or
cmp
cmp
add
sbb
jecxz
fisubrs
pmulhw
xor
push
movsl
lock
pushf
push
fmul
call
dec
xor
xchg
test
hlt
imul
pop
lcall
and
xchg
sub
sub
mov
inc
mov
fwait
jno
xorb
jnp
dec
jae
jbe
ja
scas
or
aad
push
pop
mov
adc
mov
add
das
cmpsl
mov
add
xchg
pop
shl
pop
clc
push
mov
push
shlb
push
pop
ret
sbb
sub
jo
aad
hlt
add
adc
or
adc
or
cmp
mov
sub
push
mov
mov
adc
aaa
lcall
xchg
xchg
xchg
mov
sbb
out
sub
daa
sbb
add
push
dec
jae
xchg
inc
sub
inc
add
adc
pushf
jecxz
add
or
into
shlb
test
imul
jmp
nop
std
xchg
cltd
shlb
pop
lock
xchg
mov
pop
int3
cmp
movsb
daa
stc
mov
xor
shll
cmpl
or
add
jl
add
sbb
sbb
pop
js
lds
pop
data16
xchg
and
pop
mov
repz
vaddsd
and
adc
add
cmp
cs
pop
repz
xchg
int
fwait
push
test
aaa
mov
pop
push
rorl
pusha
cld
dec
xchg
push
pushf
nop
xchg
sub
aad
pop
push
add
test
leave
arpl
lods
fisubrl
jb
and
jecxz
and
jne
lock
cmpsb
xor
mov
pop
cmp
cmc
gs
aam
dec
hlt
into
filds
inc
das
aaa
mov
lcall
repnz
sbb
fbld
cli
cld
jle
ds
sbb
loopne
xor
inc
bound
addr16
les
xor
clc
movb
cld
shll
aam
fisttpll
pop
lods
mov
aaa
xchg
jg
pop
and
cmp
clc
mov
fs
xor
popa
xor
pop
lods
push
and
in
push
pop
dec
js
loop
lret
lahf
inc
adcl
jnp
mov
loope
push
insb
jns
test
mov
jbe
jne
aaa
lret
xchg
fisttpll
sub
push
inc
inc
loope
mov
dec
mov
or
jbe
andb
lret
and
mov
les
push
pop
jne
imul
nop
pop
jge
or
mov
imul
xchg
mov
inc
mov
adc
rcll
call
add
sbb
fnstenv
pop
cs
xor
add
cs
inc
fstp
xor
jae
cwtl
arpl
jl
mov
lea
fists
mov
ds
nop
icebp
or
jl
push
test
imul
repnz
mov
pop
repnz
cli
out
in
cltd
and
xorl
aas
sbb
jp
fidivl
or
rcrl
adc
jae
js
add
dec
orl
adcl
aad
cmp
xchg
adc
jb
cltd
pop
clc
push
cmp
sbb
xchg
nop
sub
mov
push
mov
jno
jmp
imul
inc
jg
mov
or
loop
ds
pop
inc
mov
pop
jnp
data16
int3
int3
aas
push
in
call
pop
xchg
dec
aaa
sub
or
out
fs
lods
pop
pop
pop
pop
dec
dec
adcl
mov
cli
mov
jbe
sub
adc
dec
mov
and
dec
inc
in
adc
or
pop
mov
scas
sbb
or
or
xchg
nop
mov
sub
mov
jno
jnp
mov
out
sub
push
sub
add
inc
jbe
inc
cwtl
rcl
and
mov
add
arpl
push
mov
dec
xor
dec
push
jb
pop
cli
add
stos
bound
jge
sahf
pop
adc
pop
inc
mov
or
mov
lods
enter
nop
add
inc
adc
popf
sbb
dec
mov
mov
icebp
cmovs
test
jno
sbb
push
sbbb
lock
jecxz
shrb
pop
sti
add
bound
adc
mov
lea
push
add
dec
jo
lods
call
inc
test
mov
push
sub
or
push
shll
pop
sub
dec
fcoms
jge
mov
add
jp
fs
sbb
orl
xor
mov
js
je
adc
mov
movsb
add
pushaw
lock
sub
lock
ljmp
lcall
adc
pushf
jns
dec
sub
mov
cmc
add
cs
rcl
shll
and
mov
and
testl
or
xchg
add
test
jne
inc
out
icebp
lret
icebp
and
pop
mov
es
mov
xchg
test
pop
loopne
xchg
mov
sbb
jb
lret
fildl
push
popa
cmc
xchg
cmp
adc
scas
pop
sub
fimuls
shlb
ret
scas
xchg
xchg
push
cmp
popa
daa
jl
sub
or
sbb
and
ffreep
test
add
out
fwait
mov
and
push
clc
pop
jl
adc
addr16
pop
add
enter
int
bound
mov
cmp
or
enter
or
lea
sbb
push
pop
inc
push
data16
cmc
fsubrl
sbb
mov
mov
insl
add
jo
inc
ret
lods
mov
mov
mov
or
inc
in
inc
add
jg
iret
adc
bound
sbb
pop
aad
xchg
and
inc
fdivr
jg
loope
sarl
rolb
bound
inc
xor
inc
test
cmp
dec
shufps
mov
or
mov
and
daa
lock
pop
adc
xchg
inc
xchg
ljmp
nop
enter
lock
jno
inc
sub
adc
icebp
pop
jae
sbb
add
outsl
jle
cmp
stos
adc
push
stos
imul
add
aam
mov
mov
pusha
add
xchg
fnstsw
or
or
dec
call
orl
cltd
pop
push
sarb
negl
mov
and
adc
mov
pop
lods
js
lea
push
iret
xor
leave
mov
mov
xor
insb
adc
jl
ljmp
push
imul
insb
sbb
mov
test
faddl
pusha
ret
out
stc
adc
sahf
inc
xchg
mov
inc
inc
aas
add
pop
add
inc
xchg
adc
and
je
xlat
sbb
cwtl
ss
sub
pop
sub
stos
jns
mov
inc
xor
mov
push
test
jns
pop
ret
das
lock
xchg
inc
test
pop
push
jae
jns
cli
ret
dec
test
push
loop
int
ss
pop
cs
or
les
hlt
vphaddubd
cmp
sub
pop
pop
cmp
push
movb
inc
xlat
inc
stos
or
sbb
xor
jecxz
and
mov
push
mov
jnp
sub
add
inc
push
pop
xor
adcb
rorl
imul
and
or
testb
adc
pusha
push
mov
xor
and
cltd
test
jl
push
gs
lock
lret
popf
jge
mov
imul
pop
add
aam
pop
aad
repz
leave
das
inc
sarb
dec
fistpl
imull
hlt
ss
movsl
nop
jns
lock
mov
mov
push
xlat
not
sahf
js
sub
mov
enter
lahf
sub
fcomps
pop
repnz
fsubrs
push
popa
shll
inc
adc
ja
popa
sbb
sarb
add
sub
xorl
inc
shl
mov
jg
jge
fdivrs
or
sbb
mov
lds
daa
xchg
mov
push
idivl
cmp
jp
arpl
add
es
mov
sar
in
mov
aas
mov
mov
hlt
mov
add
rorb
iret
xor
mov
icebp
inc
call
shlb
inc
inc
dec
jge
lock
xor
das
xchg
push
pop
int3
out
pushf
xchg
bound
jo
rclb
mov
jnp
jmp
cmp
notl
cmpl
mov
aad
jns
pop
mov
lock
inc
pop
clc
lahf
enter
icebp
enter
jae
xchg
out
or
jle
mov
push
push
jmp
sbb
pop
outsl
xchg
add
cli
add
adc
mov
mov
add
push
popa
pop
rcll
rcl
jp
cmp
ret
push
or
pop
and
aad
loopne
mov
push
mov
movsl
leave
mov
inc
and
sub
shr
ss
inc
cmp
and
or
ja
addl
jns
adc
sub
sbb
xchg
or
das
or
xor
xchg
xchg
jae
je
negl
rcrb
in
xchg
test
xor
sub
xchg
cmp
cli
mov
inc
pop
jg
push
and
cld
adc
mov
inc
jno,pt
push
scas
cmp
iret
mov
add
push
sbb
add
das
daa
push
xor
inc
cli
or
or
cld
and
dec
push
out
sub
ret
out
push
pmuludq
or
sti
add
aaa
and
out
pop
imul
aam
incl
dec
daa
push
push
test
cmpsl
and
add
and
push
imul
mov
pop
ror
test
pop
out
mov
jns
fldenv
adc
xor
sbb
adc
js
cmp
push
mov
lret
loope
push
jmp
in
aaa
jle
call
dec
xchg
scas
out
xlat
call
outsl
mov
push
nop
ja
xor
cmp
lods
mov
aad
lahf
add
fstps
push
or
pop
ficoms
std
js
xor
pop
jmp
and
cltd
loopne
out
adc
mov
mov
adc
hlt
mov
xchg
pop
lock
adc
jl
pop
xor
adc
add
icebp
push
jno
or
adc
pop
jmp
popa
sub
das
pop
jp
jecxz
arpl
push
push
dec
sbbb
dec
mov
xor
jmp
cli
xchg
jmp
imul
jl
jns
push
inc
inc
sbb
inc
fldt
sbb
ds
jne
imul
inc
xor
sbb
xor
push
fiaddl
loope
sbb
ret
jle
sbb
mov
or
jnp
sbb
cs
cmp
sub
xchg
jmp
inc
sti
push
mov
add
gs
fsubrl
sbb
adc
ss
adc
test
in
test
inc
dec
inc
insb
shlb
imul
mov
rorb
fs
sbb
clc
and
and
psubd
dec
cltd
popa
pop
aas
lcall
jmp
movsb
dec
ficoms
insl
cld
fucomp
stc
imul
mov
dec
in
repnz
cmp
pop
sbb
out
xchg
sbb
or
push
pop
lods
pop
push
push
dec
inc
sub
ret
aaa
push
fsubl
adc
clc
add
dec
sub
int
sarl
mov
sti
and
mov
add
xor
int3
cmp
push
xor
pop
cmp
mov
jmp
lcall
mov
movsb
pop
push
cmc
jp
jle
sbb
jle
mov
filds
movsb
and
cmp
test
cltd
hlt
and
mov
outsb
push
mov
mov
sub
push
mov
daa
pop
aam
mov
in
lods
out
mov
push
test
rolb
inc
test
arpl
lock
xor
loope
sub
dec
mov
lock
cmp
ficomps
inc
sub
cmpsb
scas
mov
in
pop
or
les
lods
aaa
dec
neg
lods
dec
andl
lods
adc
or
xchg
test
mov
aad
cld
jmp
sti
push
dec
aas
das
push
inc
icebp
fiaddl
add
cli
cmp
invlpg
xlat
xor
test
cltd
add
jbe
pop
inc
xor
or
or
ss
out
leave
outsb
cmp
push
cmp
dec
mov
push
sti
imull
adc
pop
cwtl
insb
xchg
mov
ja
mov
xor
add
push
mov
call
repz
ret
hlt
cmc
shr
ljmp
xor
dec
aas
and
xlat
gs
mov
jo
jl
xlat
mov
test
int
test
rorb
and
xchg
jnp
shr
dec
mov
sbb
enter
out
movsl
sub
ficompl
lock
push
mov
sub
aas
mov
pop
mulb
popa
push
jno
sbb
loop
pop
add
xchg
xor
test
xor
in
push
add
das
addb
cli
jg
cli
inc
aad
inc
call
add
dec
out
sub
fwait
jbe
or
pop
notl
push
hlt
imul
mov
ret
lock
pushf
lret
ret
clc
push
adc
data16
imul
pop
and
or
push
jp
cwtl
xchg
jne
or
adc
sub
jb
repnz
dec
jbe
in
push
jg
rolb
popa
jne
in
add
sahf
add
adc
test
je
inc
inc
xchg
shll
push
fwait
rcr
jo
repnz
ret
outsl
push
mov
jge
inc
push
das
lret
and
xor
gs
sub
mov
dec
or
inc
pop
cli
mov
dec
inc
mov
sbb
add
decl
cmp
in
inc
push
pop
push
or
push
dec
inc
jns
fnstcw
daa
leave
xor
sbb
cmp
add
sub
sbb
inc
sub
inc
nop
push
not
sub
sbb
js
sbbb
jle
add
decb
sub
neg
push
add
adc
and
scas
in
ljmp
cwtl
inc
mov
cmp
rorl
icebp
pop
and
ljmp
shl
stos
dec
inc
sub
push
sbb
add
add
rorb
ret
add
insl
mov
cld
rol
add
push
inc
add
jecxz
mov
inc
dec
xor
push
lods
gs
adc
mov
dec
adc
mov
adc
leave
jmp
stos
pop
pop
shrb
ss
add
or
push
adc
das
inc
sub
inc
dec
dec
jne
and
add
flds
pop
mov
mov
leave
ret
mov
mov
jae
ss
push
mov
std
xor
xor
mov
mov
mov
in
sbb
clc
and
insl
cmp
add
cmpsb
mov
xor
xchg
cld
into
or
rcll
fcoms
lods
xor
call
dec
sub
jo
hlt
out
cmovno
imul
xor
test
rclb
dec
push
push
js
call
push
lock
jge
pop
dec
mov
nop
aaa
clc
jbe
push
xchg
sub
xor
inc
push
dec
aam
adc
mov
add
push
gs
aad
rcl
jns
fistps
aam
push
daa
inc
and
movups
sub
sub
movsb
inc
cmc
inc
dec
pop
fsts
test
xor
scas
inc
ficoml
cli
cli
loop
ja
push
xlat
leave
testb
icebp
mov
push
sub
orb
inc
adc
xor
fistl
add
sbb
dec
sbb
adc
aas
dec
inc
mov
dec
shrb
testl
psubb
negl
push
imul
fsubs
sub
cmp
inc
dec
xchg
ret
pop
fadds
clc
not
dec
mov
lret
dec
inc
jbe
sbb
jo
repz
dec
lret
push
sub
xorl
pop
pop
rcr
sarl
incb
repz
enter
adc
int3
aam
mov
pop
ret
sbb
inc
and
pop
mov
popa
sub
iret
push
pop
sbb
sub
dec
inc
mov
sti
dec
add
mov
andl
movb
add
sub
mov
xchg
add
enter
mov
pop
dec
or
stc
fimuls
push
xchg
cmp
xor
sub
lods
mov
mov
outsl
sbb
lea
dec
imul
loopne
ljmp
sar
push
test
pop
shl
lahf
xchg
inc
jns
add
fwait
or
push
push
test
imul
jo
pop
test
fimuls
jne
loop
fs
pop
fs
pop
dec
mov
or
test
in
mov
xor
fs
pop
add
insl
push
jge
add
movlhps
dec
adc
or
ljmp
or
jns
inc
nop
imul
xchg
xchg
shlb
or
in
cltd
nop
scas
scas
xor
aaa
stc
cld
ljmp
fincstp
flds
negl
into
or
je
inc
sub
inc
add
in
xchg
or
cli
neg
not
sbb
incb
lock
adc
adc
push
sub
neg
sbb
dec
stos
rorb
iret
and
dec
neg
dec
not
sbb
clc
sub
sbb
jle
outsb
repnz
enter
neg
sub
mov
fwait
not
sub
dec
add
stos
dec
pop
fcoms
cld
mul
divl
inc
add
psrlq
repnz
negb
fs
mov
adc
add
sbb
inc
roll
sub
inc
int3
or
in
into
rcrl
clc
mov
dec
mov
filds
rorb
sub
adc
sub
dec
xor
insb
rcll
dec
push
mov
sub
dec
mov
scas
imulb
adc
cmp
and
adc
jg
lahf
xchg
sub
adc
aaa
sti
jmp
and
adc
dec
and
pop
insb
pushl
hlt
scas
dec
cltd
fildl
pusha
aas
mov
cld
pop
xor
test
rolb
fildl
in
sub
push
insb
hlt
push
push
in
sti
or
std
inc
lock
lea
adc
pop
fst
leave
ret
fadds
cld
cmovb
pop
xor
push
in
push
aaa
cs
jo,pn
dec
call
push
jo
push
push
mov
subps
add
cmp
inc
cld
mov
rolb
sub
aam
je
push
inc
add
enter
add
ret
rolb
repz
jno
adc
push
ret
push
cld
xor
outsb
loopne
and
xor
inc
stos
add
call
push
mov
in
dec
repz
inc
mov
xchg
and
jg
and
imul
test
in
add
in
push
fucomip
push
xchg
jg
pop
loopne
dec
add
not
add
sbb
not
add
inc
pop
xchg
lahf
lock
sub
sahf
neg
dec
flds
into
imul
addl
adc
dec
not
or
neg
jl
adc
negl
in
popa
in
dec
lcall
ja
adc
or
loope
loope
xlat
add
sub
rcrb
stc
fwait
jl
sub
inc
sub
sbb
clc
push
sbb
out
xor
xor
lods
fstps
pop
outsb
fcomp
push
addr16
mov
fisubl
inc
sub
adc
dec
inc
in
mov
add
adc
jmp
jns
outsl
jle
add
cld
dec
dec
push
hlt
rcrl
sbb
popa
int3
lea
push
push
dec
jp
loopne
pushl
repz
sar
jmp
inc
lock
jns
add
gs
dec
xlat
push
lock
sub
clc
hlt
push
push
cmp
push
jle
pop
filds
clc
out
clc
or
adc
inc
lods
dec
neg
movl
out
jo
daa
dec
shlb
mov
clc
add
pop
clc
dec
sbb
adc
les
and
sbb
cld
push
inc
js
stos
push
mov
jle
jb
fadds
incl
mov
pop
mov
xor
add
inc
dec
jg
and
dec
xor
popf
pop
popa
cwtl
call
rorl
data16
push
inc
shrl
faddl
ja
inc
insb
aas
push
cld
lock
cld
dec
dec
jo
xchg
js
mov
or
xor
lret
or
cmp
outsb
push
mov
xchg
clc
push
dec
jns
push
mov
inc
or
mov
dec
sbb
push
lock
sub
inc
mov
ficoml
adc
inc
dec
inc
and
jo
into
jmp
repz
adc
aam
cmovae
neg
cmp
std
adc
add
sub
lods
dec
ljmp
dec
add
lret
inc
dec
mov
or
repz
add
and
loop
dec
xor
mov
inc
adc
lcall
sub
inc
pushf
rorl
enter
dec
xor
inc
adc
shl
pop
lret
sbb
adc
jo
fldenv
adc
fiaddl
iret
add
xchg
pushf
or
dec
inc
push
faddl
sbb
int3
adc
fidivrl
sbb
and
call
mov
lods
fimull
fiadds
int3
inc
adc
test
insl
xlat
clc
call
sub
dec
not
mov
dec
adc
add
adc
test
ss
push
and
mov
xor
sbb
push
push
mov
pop
in
xor
sbb
push
inc
andl
adc
call
inc
mov
jg
jbe
push
mov
mov
dec
or
rclb
add
inc
push
inc
sbb
ret
inc
sub
leave
add
sub
add
push
inc
call
arpl
push
loop
loopne
fs
loopne
loop
push
sbb
jo
sbb
pop
jle
add
outsb
fcoml
scas
fbld
jl
add
push
in
lock
or
push
mov
inc
push
test
movsb
arpl
mov
pop
je
cmp
push
incl
fs
jb
push
add
inc
imul
lret
or
int
cmp
cld
subl
movl
fs
daa
cmp
clc
js
jo
add
mov
add
bound
loopne
mov
or
repnz
shlb
ljmp
jo
dec
inc
fcomps
repnz
jo
stc
or
dec
push
ret
popfw
addr16
and
push
aam
ja
push
hlt
aaa
jns
inc
fs
push
jbe
adc
push
out
push
xor
cmpxchg
test
add
jae
push
shrb
cmp
push
push
mov
add
dec
add
add
loop
test
sub
arpl
loope
push
lret
mov
pop
rcl
add
aaa
hlt
popa
mov
rcrb
inc
adc
sahf
cld
pop
and
dec
inc
subl
jae
cmp
inc
ret
add
sbb
inc
inc
sbb
cwtl
push
lret
orb
cmp
fs
add
lds
push
repz
xchg
inc
push
and
add
es
push
inc
inc
push
pushf
adc
sbbb
inc
inc
xor
clc
push
clc
adc
push
push
inc
clc
jbe
loop
or
cmp
aad
iret
add
aas
and
incl
push
push
push
rep
loope
pop
mov
add
and
push
cld
lahf
sbbb
inc
dec
pop
inc
sub
not
cmp
pop
or
in
movsl
into
add
fidivrl
adc
test
pop
add
xchg
pop
jg
incl
or
addl
mov
mov
jle
mov
push
cmp
lret
xchg
push
int
sbb
inc
jge
or
test
add
into
pop
xchg
add
filds
and
inc
jns
push
shll
mov
or
aad
orb
repz
pop
out
cmp
add
sub
std
das
inc
adc
jge
nop
jge
dec
xor
jl
add
clc
stos
pop
cmp
add
fldcw
mov
ljmp
cli
sub
sbb
fists
jnp
daa
mov
lock
and
push
mov
ds
mov
incl
xchg
push
mov
ret
lds
add
lea
stos
movsl
test
add
popf
stc
lcall
and
in
cli
mov
jae
inc
cmp
and
sbb
mov
outsl
lock
and
jns
mov
mov
orb
inc
dec
adc
pop
mov
adc
out
mov
lcall
mov
iret
std
jg
daa
adc
inc
movsl
rcrb
xchg
imul
sti
push
out
sbb
mov
lahf
jge
cmp
and
sahf
pop
je
jne
pop
push
sahf
out
mov
fnstsw
decb
lret
and
fs
fmuls
loope
xor
pop
mov
ja
inc
int
jle
mov
out
pminsw
lret
jge
lret
push
pop
das
sub
scas
sti
in
out
mov
pop
push
jb
jnp
lahf
xchg
aaa
sahf
jne
or
aas
mov
or
cmp
dec
push
and
ss
sti
jbe
jg
xor
cwtl
outsl
xchg
cmpsl
insb
mov
sti
pop
sti
lahf
add
adc
dec
ja
pushf
and
out
mov
sbb
cwtl
mov
fstl
mov
outsl
ja
fadds
cmpb
fiaddl
xor
sti
out
pop
dec
into
add
jno
mov
pop
repnz
stos
rcrl
mov
es
dec
cltd
icebp
into
lahf
cld
cmp
jmp
or
sbb
sti
xchg
out
in
jnp
fimull
sbb
push
sub
loop
jo
fdivrl
mov
es
adc
imul
pop
dec
push
std
add
sbb
ds
push
add
fidivrs
ret
xchg
lret
mov
xchg
lock
push
inc
popf
sub
xchg
flds
xchg
and
cmp
mov
fistpll
popf
ret
dec
stos
pop
fadds
pop
fsubr
out
add
mov
sbb
jp
bt
add
xor
add
shl
and
push
mov
jmp
fs
pop
xchg
lock
std
mov
data16
jnp
push
dec
repnz
dec
cltd
scas
xlat
pusha
inc
sbb
loope
xor
sbb
movsl
enter
lods
iret
fisttps
jbe
sti
mov
bound
push
push
push
fistpll
push
xchg
xor
jb
out
das
decl
mov
inc
mov
xor
fnstsw
or
lock
in
ss
rcr
and
xorl
xor
cmp
leave
mov
mov
push
jae
icebp
pop
int
push
subl
mov
in
push
adc
lock
sub
out
pop
je
lret
mov
mov
jnp
dec
dec
xchg
inc
push
mov
fcmovnu
std
jp
movb
not
insl
mov
or
mov
cs
out
andl
loopne
mov
add
les
clc
jg
lock
jb
dec
push
add
xchg
pop
inc
xor
fcomp
xchg
pop
xchg
sub
call
sahf
cmp
idivl
mov
int3
xlat
data16
dec
sbb
incb
push
and
jns
loope
jge
and
outsl
jge
xor
jno
pop
scas
mov
test
xchg
incl
cmp
add
pop
mov
lahf
xlat
cmp
sahf
test
addr16
iret
and
jnp
addr16
xchg
cltd
test
jle
xchg
cs
aas
popa
in
mov
fildl
pop
ja
cli
rorl
dec
xor
or
std
add
push
fsts
inc
iret
std
incl
fists
in
cltd
addl
pop
inc
das
dec
das
lahf
dec
adc
stc
jg
jmp
inc
and
fstps
pop
mov
push
and
sbb
jne
shl
inc
pop
fisttps
dec
mov
jl
sbb
add
xchg
jbe
sub
out
add
pop
sub
push
push
out
imul
stos
jg
decb
pop
xlat
scas
je
fidivs
inc
orb
pop
push
push
mov
jle
ds
icebp
iret
jbe
add
add
jb
mov
jo
sbb
mov
push
stc
mov
sti
push
mov
pop
mov
mov
push
je
pop
push
fists
xchg
cmp
ja
jg
scas
nop
imul
xchg
das
mov
out
jg
and
lret
rcrb
fdivl
mov
mov
xchg
mov
push
lods
pop
jg
pop
dec
rorl
gs
lods
pop
fucomi
mov
adc
std
push
pushf
mov
jmp
mov
adc
roll
sbb
femms
jle
add
xchg
sbb
push
out
loopne
cmpsb
movsb
or
push
dec
xor
mov
xor
ja
outsl
in
pop
sub
outsl
mov
and
jl
popf
icebp
rcr
in
sub
sub
pop
mov
and
dec
inc
xchg
lret
mov
xlat
cs
mov
xchg
mov
dec
xor
loope
out
or
sbb
pop
jb
aas
cmp
clc
rorl
shll
lahf
sbb
dec
out
lock
push
jg
xor
or
mov
aas
cmpl
mov
pop
rcrb
inc
add
push
inc
loope
addr16
inc
push
pop
push
cmp
mov
lea
or
lret
jo
mov
mov
ss
push
ds
imul
loopne
movsb
mov
push
or
clc
cmp
adc
xchg
pop
adc
leave
pop
adc
add
xchg
lock
dec
and
sti
mov
sbb
push
xchg
or
std
cmp
and
mov
sub
mov
ds
idivb
xor
add
repz
loope
push
jmp
cmc
jo
push
mov
cli
sbb
xor
jg
jnp
jle
loopne
ret
jo
cs
adc
pushl
rcl
pop
aaa
sub
add
cmc
lcall
hlt
mov
push
cmp
mov
cmp
ss
in
movb
or
pop
fdivrl
mov
xchg
mov
decl
fsts
or
arpl
ds
iret
loope
popf
fstpl
pop
sub
xchg
inc
movsl
mov
popf
mov
outsl
jo
lods
mov
push
push
hlt
push
adc
xchg
loope
mov
dec
mov
lret
cmp
sbb
movsb
lret
test
add
je
cmp
in
lahf
dec
loopne
cmp
out
add
pop
push
push
imul
stos
cmp
sbb
pop
xor
adc
pushf
movsl
clc
aas
sub
mov
leave
or
mov
pop
mov
pop
xchg
push
ds
push
mov
sbb
jo
shll
rorl
clc
mov
xchg
cmp
insb
sbb
cmp
incb
insl
and
adc
outsb
inc
test
jg
xchg
pop
cld
mov
xchg
fidivrl
lods
sub
mov
sub
mov
dec
dec
xchg
fistpll
rcl
mov
aaa
out
push
inc
inc
jmp
mov
insl
int
movsb
mov
popf
jnp
or
sar
leave
dec
inc
and
and
jnp
push
cld
add
adc
loopne
adc
adc
jle
push
in
sub
loopne
and
in
xchg
mov
in
push
lcall
dec
mov
insb
pop
jl
inc
push
lcall
fnstcw
jl
pushf
dec
cli
test
idivl
arpl
cmp
rcll
adc
decl
push
jae
jg
cmp
int
decl
dec
outsl
jecxz
sub
movl
mov
mov
add
das
aas
rol
incl
mov
pop
lock
loop
test
shr
insl
lods
dec
xchg
dec
hlt
ret
inc
pop
and
cmpsl
lahf
jmp
inc
icebp
push
popa
popw
bound
in
notl
xor
xchg
lcall
sbb
fnstsw
ret
xlat
and
jae
mov
pop
pushf
icebp
das
test
adc
lahf
jo
call
jno
add
insl
sub
loope
adc
adc
push
fstpt
mov
call
inc
inc
stos
mov
lahf
pop
arpl
lock
out
cmp
inc
push
jge
pop
daa
rorl
incb
ja
dec
loope
iret
or
sub
in
mov
cli
aas
adc
ror
xlat
hlt
xchg
loope
enter
cwtl
and
cmp
in
xchg
jne
push
fwait
imul
pop
cli
sbb
push
cmpsl
leave
lret
fcos
pop
mov
xor
xchg
cmp
sar
aaa
aad
in
jb
iret
outsb
vmaskmovdqu
lock
cld
push
push
add
lahf
cmp
add
adc
je
mov
bound
dec
fcoml
mov
iret
in
mov
ja
incl
mov
into
lret
mov
mov
sbb
adc
movsl
jne
push
popf
test
out
ss
pop
in
dec
mov
pop
or
push
decb
jle
sub
adc
in
push
xchg
mov
addr16
iret
icebp
jp
add
sti
push
dec
jp
jmp
out
fwait
lcall
jne
mov
std
inc
add
dec
mov
incb
lea
lock
fcmovnbe
pushl
jno
lret
in
mov
cmpsb
outsl
jo
add
testb
sbb
xor
mov
sub
inc
std
pop
mov
sub
lods
mov
popa
push
sbb
adc
call
jmp
xlat
cmp
mov
ja
lret
hlt
loope
pop
mov
mov
mov
fmull
add
sub
adc
jmp
add
js
std
scas
mov
push
sti
popf
std
mov
dec
pop
push
pop
jae
push
int3
divl
int
sar
pop
mov
es
sub
jg
or
or
lahf
stos
push
push
push
pop
mov
js
jne
pop
cmpsl
jg
jg
xor
fcoms
add
push
xchg
mov
jge
mov
jge
jecxz
cmovno
jo
test
mov
test
pop
fucom
cmpb
cmc
test
inc
cmp
cli
cmp
sbb
neg
dec
adc
lock
xor
dec
loope
jp
xor
dec
mov
icebp
mov
jg
std
adc
fisubl
dec
pop
and
cli
negb
push
xchg
stos
push
mov
mov
mov
push
xchg
int
mov
cmp
pop
xor
iret
cmc
mov
es
lahf
sbb
pop
and
cmp
mov
lahf
sbb
xchg
pop
adc
icebp
jmp
loopne
ss
dec
push
inc
adc
ljmp
pushf
movsl
sbb
dec
mov
dec
sub
mov
mov
das
mov
hlt
pop
adc
out
fwait
xor
into
xor
sbb
ss
cmp
popf
add
adc
movsb
push
jg
sarl
dec
fwait
mov
mov
mov
rclb
add
sub
mov
sbb
insb
sbb
mov
je
nop
loope
jno
notl
pop
fnstcw
mov
adc
sbb
ja
aaa
ret
loopne
xor
or
sub
xchg
sar
shr
shrl
sbbl
sbb
addb
aas
in
inc
inc
sbb
cmp
dec
repz
out
jg
push
pop
out
sbb
add
dec
jl
pop
cmp
jns
add
dec
int3
popf
or
idiv
out
or
sbb
or
xor
mov
addr16
cltd
mov
pop
rcl
xlat
mulb
adc
cmp
addr16
add
jg
sub
dec
jns
dec
xor
inc
dec
push
popa
and
scas
or
fwait
jne
sbb
out
pop
jp
xorl
stos
orb
lds
xchg
lahf
icebp
and
test
jo
mov
adc
rclb
push
ds
mov
push
shrl
iret
inc
dec
sbb
cmp
pop
rcll
test
fiadds
rol
cmp
fidivs
sbb
mov
push
sub
cmp
cltd
arpl
movsb
mov
mov
mov
je
and
dec
sub
arpl
cmpsb
push
mov
dec
sarb
xor
or
hlt
ficoms
stc
test
bound
add
movswl
cld
jg
lods
pop
repnz
cmpl
xabort
pop
xchg
mov
mov
adc
cmp
push
lock
enter
jne
push
lock
push
lds
insb
pop
rcrb
ljmp
mov
dec
xchg
mov
xchg
push
mov
dec
push
mov
and
das
in
mov
lcall
xor
adc
test
scas
les
xor
test
cmp
mov
add
mov
jg
das
sbb
addl
rorb
xor
test
jg
cmc
cmpsl
jno
pusha
pop
pop
out
outsb
inc
inc
jno
popf
std
outsl
rolb
jmp
test
divl
mov
lret
repz
call
imul
lds
movsb
scas
data16
jg
vpunpckldq
cld
mov
arpl
and
imul
xchg
scas
jle
xchg
and
inc
sbb
shll
loop
or
test
pop
push
xor
mov
repz
enter
lock
mov
jg
fidivs
and
xor
adc
test
and
inc
daa
rorb
sbb
jmpw
repz
and
jb
incb
mov
fwait
inc
out
pop
and
cmp
push
into
out
out
pop
mov
sub
imulb
aas
xor
inc
loop
inc
sub
jg
lahf
lock
loop
dec
je
incb
xchg
ljmp
inc
cmp
and
xchg
pop
or
lods
lods
ljmp
push
xchg
push
out
out
loopne
xchg
sub
lahf
es
and
cli
into
loope
add
add
xor
xchg
sbb
sub
cmpsl
jg
outsl
imulb
or
out
fdivr
sub
fs
test
rcrb
push
or
pop
jmp
push
ds
and
into
lret
popa
mov
cmpb
shll
decl
testl
lods
adc
shrb
out
mov
or
push
pusha
push
sub
xchg
ja
mov
arpl
rolb
test
inc
int3
inc
sub
les
and
inc
int3
jl
xchg
mov
add
test
ljmp
inc
in
in
or
fdivr
cmp
pushf
js
jo
aaa
aad
mov
test
stos
jg
sti
fadds
xchg
add
mov
std
mov
jns
fcmovu
cmpsl
inc
pop
aam
cmc
xchg
test
jmp
aad
cltd
push
pusha
xor
inc
push
lock
shrl
mov
jge
xchg
and
leave
fisubs
mov
xor
jmp
mov
and
aas
mov
dec
pushl
mov
negl
lock
insl
xchg
xchg
hlt
aas
ljmp
and
inc
mov
out
int
sub
mov
mov
and
jbe
out
std
cmp
enter
fists
dec
xor
fldl
lret
or
loope
add
int
testl
jbe
lcall
and
push
imul
mov
inc
loopne
dec
sbb
cld
cmp
fildll
cmp
movb
jo
pminub
aam
or
sub
stc
adc
xor
scas
enter
movsl
fisubrs
frstor
adc
scas
sbb
out
out
cmp
mov
inc
and
jnp
or
xchg
es
and
pusha
add
adc
add
or
xor
test
mov
inc
pop
jecxz
mov
inc
mov
fisttps
rclb
sbb
sub
ss
outsl
aas
aam
arpl
outsl
adc
add
add
clc
out
cld
aas
mov
data16
out
xor
adc
adc
jg
adc
inc
sub
jl
test
lock
call
sbb
cld
jae
add
fisubs
inc
sarl
mov
inc
divl
fmull
andl
add
js
push
test
test
pop
clc
dec
mov
sub
dec
mov
push
cmpsl
icebp
fwait
mov
sub
mov
add
cmpsb
adc
cltd
sub
cmp
jg
sti
jnp
int
and
add
aas
push
out
push
mov
hlt
mov
movsl
xlat
xchg
adc
inc
mov
and
push
or
cmpsb
pushf
jmp
mov
nop
fbld
test
out
jl,pn
out
fs
ljmp
inc
lds
int3
pop
mov
pmuludq
ljmp
repnz
outsl
pop
jmp
jb
xor
pop
add
mov
ret
sar
out
mov
imul
add
mov
push
inc
mov
ds
lds
sub
aas
push
add
jmp
jne
mov
popf
xor
loop
mov
bound
popa
mov
sarb
hlt
jg
fnstenv
add
mov
inc
call
sbb
stos
add
sbb
repnz
jg
jmp
jecxz
mov
cli
inc
aad
mov
jle
movsb
xchg
add
ljmp
lds
lods
sub
pop
insl
jnp
out
push
xchg
ret
mov
scas
mov
mov
std
pop
cld
jp
push
adc
cld
dec
cmpsl
and
out
testl
hlt
and
ljmp
jg
and
mov
rcrl
insl
dec
add
cmp
adc
fadd
cli
inc
pop
loope
add
fiadds
sbb
loope
fs
in
popf
addr16
jns
xchg
lcall
sbb
pop
bound
je
or
sub
push
jnp
std
outsl
pop
mov
decb
cmp
fidivrl
arpl
push
into
mov
test
pushf
xchg
fiaddl
je
scas
fisttps
inc
push
ja
lea
out
jo
imulw
outsl
cmpsb
inc
dec
scas
adc
sbb
inc
lods
mov
js
sti
cmp
call
sub
leave
mov
xchg
fstpl
in
jle
add
loop
and
pop
pop
lret
xor
xchg
jae
push
jmp
sub
ljmp
out
cmp
hlt
ficomps
jecxz
shrl
cld
test
mov
pop
or
mov
imul
sub
popf
lods
in
je
mov
sbb
sub
cld
fnstsw
ljmp
cld
in
mov
mov
jg
cld
inc
in
fmull
xlat
es
jg
jle
stos
pop
adc
jnp
lahf
daa
fsubs
mov
xchg
mov
ret
cmovbe
cld
cmpsb
mov
lcall
push
out
push
dec
mov
dec
std
xchg
outsl
scas
add
sbb
jne
sbb
clc
into
loop
shl
idivl
jo
sbb
mov
mov
roll
and
aas
jmp
cltd
mov
int3
imul
and
push
mov
jb
mov
lock
add
popf
icebp
andb
pop
aam
shlb
cli
ja
sbb
xor
adc
fnstsw
pusha
xchg
stos
addr16
mov
decl
notb
sbb
cli
jge
mov
dec
jnp
loope
adc
add
cli
std
addr16
sarl
js
das
sub
es
lret
push
ljmp
xchg
and
dec
jo
xchg
dec
mov
loopne
inc
push
adc
cli
add
xchg
adc
xchg
inc
xor
out
fcmovb
iret
jmp
mov
inc
mov
mov
mov
mov
cmp
mov
add
das
cld
andb
push
cmpsl
and
dec
aas
sti
pop
mov
cmp
push
push
add
lock
stos
add
daa
in
add
cmp
rcll
lods
inc
jb
push
push
push
pop
jo
cmp
xchg
inc
jne
pusha
lock
ljmp
adc
ret
test
pop
jmp
sbb
sbb
and
and
jnp
sbb
jge
sahf
roll
lea
hlt
aas
movsl
js
in
fcompp
in
aas
xchg
xor
arpl
dec
ja
incl
sbb
xor
and
inc
repnz
add
lret
stos
popa
cmpsb
mov
push
movsb
std
mov
cmp
lcall
and
jge
addb
call
psubq
mov
das
ljmp
jg
aaa
popa
test
mov
ja
sar
mov
inc
iret
shll
and
xchg
out
out
cmp
inc
mov
arpl
call
jg
jg
mov
mov
and
std
xchg
shll
in
adcb
out
or
push
outsl
dec
stc
scas
ds
fwait
popa
inc
bound
inc
push
and
pop
in
adc
xlat
mov
loop
push
mov
sub
push
jg
stc
inc
push
push
push
lret
lods
sti
and
pop
xchg
xor
lock
mov
rcl
das
outsb
dec
adc
ss
jle
dec
mov
imul
and
test
std
and
ja
mov
std
xchg
mov
lods
xchg
pop
and
push
jge
sbb
jl
push
jo
xchg
mov
test
out
frstor
jae
dec
jmp
jge
shl
loopne
sbb
sbb
push
loope
cs
jg
clc
aas
rorb
call
pop
xchg
push
dec
std
mov
pop
jb
mov
ss
pop
cltd
and
add
sbb
repnz
jmp
leave
rcr
cmpsl
sarl
vorps
and
dec
adc
mov
push
dec
lock
mov
iret
mov
repnz
jnp
enter
fists
mov
movsb
pushf
ljmp
jnp
call
test
aad
push
testl
and
dec
lods
xchg
mov
pop
cmpsb
dec
stos
les
fsts
movsb
pop
adc
jmp
mov
sti
pop
loopne
fs
lret
push
jg
dec
les
jmp
sbb
or
mov
loope
add
idiv
lahf
pop
push
jl
mov
jo
push
mov
inc
fisttps
ljmp
pusha
and
shrl
add
rcrb
jg
mov
std
pop
cld
inc
lahf
pop
jnp
mov
popf
push
mov
loop
leave
adc
xchg
out
imul
cmc
push
cmp
inc
ja
pop
pop
je
push
push
fdivrl
xchg
fidivrs
fnstsw
add
add
jno
int
icebp
sbb
sub
mov
dec
jo
mov
mov
pop
inc
notl
mov
xor
sbb
stc
in
xlat
push
push
xchg
and
clc
mov
daa
ss
cmp
xchg
rcl
call
sbb
cmc
xor
jg
mov
mov
iret
out
dec
push
js
fadd
mov
call
push
in
jp
mov
std
or
inc
jne
repz
pop
or
in
lcall
lock
add
mov
sbb
mov
mov
jl
push
inc
ds
or
xor
jb
fucomip
jecxz
int3
xchg
movsl
xchg
sbb
pop
outsl
popf
cs
xchg
andl
les
outsl
mov
fnstsw
xchg
jnp
add
jecxz
push
sbb
jecxz
jecxz
inc
xchg
ss
inc
sbb
add
jmp
icebp
jge
add
mov
sbb
ljmp
loopne
stos
loopne
dec
fcos
cmp
ds
ja
bound
mov
mov
das
stos
or
cmp
iret
mov
cmpsb
mov
or
mov
ja
ret
lahf
stos
inc
pusha
adcb
sub
xchg
pop
jno
loopne
lods
cwtl
mov
jns
pop
lret
imul
aad
mov
pop
popa
mov
jg
mov
pop
jp
in
stos
icebp
mov
cli
cmp
out
add
cld
rcrl
clc
cmp
divb
sub
push
cld
fs
or
lahf
daa
inc
lods
sub
pop
scas
rcr
shll
rorl
mov
imul
sbb
ret
ret
xlat
fisttps
sbb
sub
fsin
cwtl
pop
mov
jg
mov
adc
xorl
add
xor
outsl
jmp
sbb
cld
pop
aam
inc
loopne
data16
cmpsb
nop
dec
and
loopne
std
sti
stos
enter
hlt
push
adc
nop
lods
insb
paddw
push
cli
aad
mov
call
add
fists
pop
mov
push
lods
mov
aas
or
jmp
push
push
push
jecxz
cmc
pop
sub
or
shll
xor
cmp
icebp
mov
popa
mov
cmp
cmp
imull
pop
mov
sbb
incl
jl
xor
int
int
mov
fdivr
dec
icebp
iret
call
outsb
enter
mov
std
jmp
divb
push
outsb
leave
fiadds
inc
cld
pop
fdivr
rcrb
js
sahf
mov
jo
or
xchg
imul
mov
sbb
sarl
lea
aam
mov
clc
mov
das
jnp
sbb
ret
sub
push
jp
jg
lods
sbb
loopne
mov
andb
jmp
fcompl
stos
pop
ffreep
mov
lcall
or
repz
movsl
add
add
and
push
cli
push
out
jg
imul
jp
insl
mov
out
push
xchg
pop
mov
add
movsb
imul
jmp
test
push
in
cld
pop
ret
inc
pusha
out
imul
iret
lcall
pop
push
jns
push
dec
inc
int3
subb
mov
dec
cmpsl
imul
lahf
scas
les
scas
js
push
pop
call
sbb
xor
pop
js
je
outsl
pusha
test
pop
stos
orb
test
mov
stos
jg
cmp
scas
mov
in
cli
das
jle
fmull
mov
and
jecxz
pop
mov
mov
movsl
mov
sbb
sbb
adc
mov
sub
call
mov
xchg
or
mov
push
adc
sbbb
pop
dec
jl
shl
pop
cltd
lds
data16
inc
cld
aas
sbb
movsb
test
in
jbe
add
clc
inc
aam
and
adc
xchg
popa
pushl
push
or
xchg
aam
sahf
movsl
jmp
push
stos
cmp
pop
ror
into
fwait
mov
test
roll
pop
addr16
jecxz
cmpsb
lock
dec
ss
das
cmp
outsb
ret
notl
inc
out
aaa
in
daa
stos
push
cld
mov
lcall
sbb
mov
cltd
and
mov
inc
jmp
and
adc
in
sub
push
push
dec
pop
clc
popf
or
aas
adc
inc
mov
xor
cmp
outsl
pop
fabs
icebp
repz
mov
in
xchg
cmpsb
or
dec
ljmp
sbb
cmp
sub
lock
lock
add
and
sti
xor
dec
mov
iret
adc
and
aad
xchg
xchg
pop
inc
ja
pop
cmp
out
test
lea
pop
push
imul
lds
sti
loop
jecxz
lods
dec
and
dec
inc
les
mov
in
dec
xchg
test
add
xchg
adc
out
jae
push
xor
fimull
pop
push
ss
add
sbb
inc
sar
stos
and
jb
arpl
rcrb
adc
sbb
fcoms
pop
adc
lea
idivl
sbb
dec
in
in
aad
or
mov
jo
cmp
pop
inc
mov
stos
inc
sub
sbb
mov
pop
mov
int
bound
aam
mov
sti
lcall
cmp
pushf
insl
dec
xchg
push
ficoml
mov
fisttpl
pop
xchg
aam
jne
push
int3
out
aas
adc
lahf
outsb
fisubrs
loopne
jmp
aas
or
mov
pop
lret
cmp
jge
outsl
pusha
out
cmp
adcl
aam
dec
aaa
jne
and
jg
jb
or
mov
cli
inc
jae
xor
faddl
stos
dec
jne
mov
adc
pop
mov
mov
arpl
cmpsl
mov
shr
inc
sbb
add
pop
jbe
pop
icebp
lahf
sbb
sub
out
ljmp
inc
imull
jecxz
add
jg
loop
xchg
ljmp
decl
outsl
aad
testb
push
jmp
imul
fnstcw
loopne
add
mov
insb
fistl
xor
filds
push
lds
sti
iret
loop
push
loope
or
js
mov
lcall
jo
push
sbb
or
push
dec
icebp
mov
dec
mov
into
pop
stos
movsl
cmp
mov
shrl
pop
jno
push
jo
iret
mov
sbb
lahf
data16
dec
mov
add
jns
mov
or
enter
cs
cmpsl
in
jg
sti
dec
cs
dec
jmp
out
mov
jne
pop
loopne
or
or
insl
add
pop
mov
test
call
mov
push
push
sbb
ret
and
jge
dec
push
jnp
stc
loopne
mov
mov
xlat
stc
add
aaa
adc
imul
lock
aas
push
dec
cmovb
or
jns
in
or
pop
psubd
mov
les
lcall
cmp
mov
sbb
cltd
jnp
push
sub
push
aaa
andb
daa
jne
out
scas
cs
fstpl
ja
cmp
mov
mov
std
pop
inc
mov
mov
lahf
ljmp
sub
mov
mov
jl
icebp
fisttps
and
rcrl
nop
add
ljmp
mov
addr16
gs
push
popa
mov
clc
xchg
push
scas
addr16
js
push
js
dec
std
add
hlt
pop
sbb
sar
mov
in
das
adc
xorl
sub
sarb
aam
cmp
xor
pop
movsb
mov
cmp
xor
xor
jg
push
out
cld
lock
jmp
clc
inc
and
icebp
xchg
sub
jns
mov
in
pop
and
adc
mov
cmp
std
lea
dec
sbb
push
sub
fnstsw
aas
pop
cld
cmpsb
or
pop
mov
shl
push
push
or
push
rorb
popf
and
or
or
test
sti
decb
cmp
out
and
xor
push
or
sarb
and
loopne
push
arpl
loop
icebp
daa
mov
jle
xlat
imul
jo
es
lahf
flds
lea
fwait
nop
cmpl
pushf
ja
sub
fisubrl
sahf
clc
jmp
push
sbb
dec
adc
jae
push
pushf
lret
inc
int3
arpl
mov
ljmp
mov
shlb
mov
lcall
mov
adc
lods
popa
in
or
dec
pop
scas
pop
cmp
dec
push
insl
and
out
xor
xchg
fdivs
jnp
dec
jmp
lcall
orb
lds
push
jns
decl
pop
jecxz
dec
cmpsb
pop
nop
js
je
dec
push
sahf
and
lock
jns
lods
and
push
mov
push
bound
xor
adc
hlt
sbb
cmp
pop
push
insl
dec
pop
jg
inc
popa
aad
loope
test
jle
rorb
and
push
lods
aas
and
iret
or
mov
xchg
sar
sbb
push
call
aam
jmp
cli
mov
mov
mov
cmp
faddp
and
je
clc
cmp
shll
xlat
cli
ja
and
test
mov
popa
cltd
adc
xor
scas
cmp
sub
or
andl
pop
cld
fnsave
cmpsb
xchg
sub
stc
call
ljmp
dec
stc
add
push
fwait
in
xlat
clc
mull
inc
pop
ja
mov
or
out
mov
js
test
xor
addr16
jg
lret
pop
mov
cwtl
loopne
mov
dec
or
imulb
test
or
idivl
dec
mov
mov
inc
loopne
in
jg
andl
mov
out
mov
cli
aas
rolb
cs
nop
dec
jge
and
je
in
mov
jge
mov
pop
aas
sbb
inc
push
add
mov
mov
int
push
andl
mov
fstpl
and
fdivl
push
mov
call
loope
xchg
cmp
dec
adc
xlat
aas
jecxz
arpl
xchg
mov
or
cmc
std
inc
out
ds
or
jmp
test
fisttps
xchg
xor
clc
int
iret
test
cmpsl
adc
adc
pop
dec
aaa
lahf
or
out
addr16
std
jae
jl
imul
gs
clc
xchg
ret
js
push
lods
mov
loopne
je
mov
sub
or
aam
pushf
adc
int3
leave
xchg
lret
add
out
inc
mov
cltd
dec
push
pop
gs
aas
enter
xchg
jno
sub
adc
dec
push
cmp
sub
loope
dec
repnz
xor
jo
jnp
xchg
mov
mov
lret
fldl
cmp
out
pop
mov
xchg
pop
loop
imul
mov
xchg
cmp
decl
dec
lret
fstl
dec
dec
lods
add
js
aaa
clc
mov
add
adc
mov
mov
mov
popa
push
mov
inc
jae
lods
and
pushw
jle
inc
sbb
insb
lahf
mov
inc
lahf
xchg
sub
rorl
xor
aad
sub
fildll
adc
dec
repz
inc
filds
jmp
out
push
mov
mov
mov
jg
mov
cmp
add
aas
push
push
inc
fstps
popa
call
xchg
lcall
test
imul
xorb
popa
sahf
dec
dec
mov
sub
mov
add
adc
and
dec
jge
fadds
fnstsw
or
xchg
mov
sahf
dec
adc
aam
xor
mov
jmp
ja
ja
enter
inc
jmp
insb
cwtl
and
jmp
xor
std
xchg
mov
mov
sbb
rorl
loopne
cmpsl
mov
dec
mov
and
add
addr16
or
sub
xor
stc
or
into
lods
mov
pop
cmpsl
dec
test
shrl
and
outsl
test
loop
xchg
mov
pop
inc
pushf
fsubs
or
jmp
push
sbb
je
daa
icebp
aas
push
push
iret
push
or
movsl
cmp
imul
inc
dec
cmpl
cmp
add
or
aam
jecxz
ffreep
and
xchg
xor
fs
xor
sbb
hlt
and
sub
xchg
push
adc
int3
cmp
dec
lahf
mov
imul
inc
pusha
xor
xchg
insb
push
shll
aam
idivl
std
sbb
jns
mov
xor
add
imul
push
fldcw
incl
jae
xlat
jle
sarb
mov
call
inc
cmpsb
icebp
enter
mov
ds
mov
mov
push
in
jne
test
mov
std
paddusw
rorb
aad
call
jp
jnp
push
or
incb
cli
in
mov
int3
sbb
jg
or
mov
jg
mov
jmp
mov
add
pop
int3
jg
dec
dec
dec
jnp
test
add
pop
loope
test
rorl
roll
push
mov
loope
les
dec
push
outsl
inc
loopne
fistpll
mov
je
adc
or
xor
xacquire
jns
fnsave
mov
mov
movsl
cmp
mov
imul
fs
test
aas
mov
pop
push
sbb
stos
xchg
mov
cli
mov
dec
neg
mov
sahf
mov
nop
ror
jl
jl
push
divb
int3
test
leave
stc
out
and
popf
jo
sub
inc
adc
jbe
xchg
jae
jl
xchg
and
inc
pop
adc
inc
loopne
aas
xor
mov
out
or
pop
or
rcr
cmp
cmp
and
std
mov
rcl
cmpsl
sbb
sbb
dec
ss
into
fmuls
and
cmp
int3
lret
inc
sbb
jae
jnp
xlat
ret
cmpsl
jle
pop
stos
sub
or
loopne
jmp
mov
pop
cmp
pop
loop
mov
insl
jo
pop
into
cmp
push
mov
lret
or
cmovne
sbb
shll
jge
out
or
icebp
lods
adc
push
lahf
lcall
pop
push
jl
push
cmp
ja
or
daa
xor
dec
loopne
pop
mov
inc
movsb
insb
adc
xor
push
inc
push
pop
pop
loope
lahf
inc
popa
sub
rcl
sarb
hlt
in
push
push
imul
or
mov
xchg
subb
add
xor
inc
cwtl
lock
pop
xchg
shll
sub
pusha
cmp
test
dec
jp
stos
mov
mov
push
inc
sub
jno
lcall
jg
popf
fdivl
clc
sbb
xor
das
mov
mov
jmp
fcmovu
xor
shrl
add
mov
sti
inc
xchg
mov
test
roll
push
jle
loope
sarb
loope,pt
mov
adc
mov
sub
loop
push
adc
jg
clc
sbb
int3
lods
add
jle
iret
pop
test
jno
outsb
or
inc
test
jg
decl
mov
clc
cmp
xor
incl
lret
shrl
and
in
jmp
cmp
mov
pop
jle
cmp
std
and
nop
mov
mov
add
jg
jbe
cmp
clc
into
mov
lock
xchg
inc
mov
fdivr
adc
mov
popf
cwtl
or
test
std
iret
jmp
and
xchg
jge
cmp
adc
in
mov
or
pop
cmp
arpl
sbb
fimuls
pop
in
leave
pop
jecxz
inc
adc
inc
imul
sbb
scas
push
addr16
mov
stos
push
xchg
insb
and
repz
inc
sbb
ja
lods
decl
inc
notl
pop
inc
rcrb
or
ss
ja
lock
in
push
in
xchg
je
bound
inc
dec
cmp
jg
xor
sbb
lock
call
std
aaa
add
sbbb
je
hlt
pop
mul
pop
arpl
scas
add
cli
loope
dec
pop
push
daa
subl
aam
je
mov
les
clc
mov
out
jg
xor
jno
enter
cmp
pop
nop
addr16
pop
add
gs
inc
mov
test
lahf
push
mov
insb
inc
or
scas
shl
clc
rolb
cmp
hlt
cli
pop
andl
push
ja
out
jnp
adc
movsb
cmp
dec
test
sar
and
std
fists
nop
lock
xchg
and
push
mov
movsl
mov
push
repnz
mov
mov
mov
jg
pop
add
jg
sub
scas
das
cmp
lret
fbld
mov
mov
xchg
xchg
mov
push
aad
ja
jl
data16
mov
add
push
insl
shll
xlat
idivl
pop
and
loope
cmp
aas
mov
aam
mov
clc
clc
mov
mov
mov
std
or
or
cltd
mov
int
and
js
cmp
std
jnp
adcb
mov
push
and
shlb
loopne
fistpl
cmp
push
sub
out
and
and
mov
fsubs
sti
aas
sbb
or
pop
ficompl
loope
sub
ffreep
test
inc
out
mov
js
mov
rcrl
push
xchg
lock
call
and
mov
decl
movsb
add
clc
daa
in
add
repz
out
loopne
mov
repnz
push
jg
imul
into
dec
loope
addl
dec
aam
rolb
push
pop
ljmp
push
lea
ud0
nop
mov
pop
hlt
imull
pop
rcrb
je
adc
ja
test
scas
cmp
outsl
movl
mov
jmp
shll
push
jns
mov
push
testl
or
add
pop
cld
inc
jp
xor
inc
popa
jo
mov
jno
or
jo
aam
mov
outsl
mov
sub
xlat
mov
adc
fildll
data16
inc
mov
lods
xchg
arpl
mov
mov
imul
lret
stos
xor
pop
std
repz
dec
or
cmp
loopne
adc
push
cmp
roll
inc
mov
aam
das
adc
std
int3
mov
mov
xchg
out
push
divb
mov
fistps
cmp
fidivrs
out
xchg
jg
sbb
enter
std
dec
aam
dec
lea
fs
pop
ret
mov
mov
mov
xlat
iret
nop
shlb
cld
dec
xchg
imul
das
cwtl
dec
adc
push
inc
mov
ds
dec
inc
lcall
pop
outsl
add
and
mov
mov
jnp
mov
push
push
shlb
or
rep
testb
insb
sub
jle
xor
imul
sbb
add
cltd
or
inc
xchg
mov
or
xchg
fdivr
pop
or
pop
lods
jecxz
xchg
jl
clc
aas
xor
add
inc
loopne
dec
xchg
sti
clc
mov
sub
and
sub
push
sbb
dec
sti
mov
push
inc
cmp
push
btc
jmp
daa
jg
ret
lea
insb
mov
pop
negb
mov
mov
loope
pushf
mov
xchg
dec
ret
jg
loopne
repz
adc
dec
out
push
add
fcmovnbe
inc
fnstenv
orl
xor
dec
lret
lea
shlb
dec
stc
xchg
mov
sub
adcb
mov
decl
sub
pop
jns,pt
push
ja
pop
sbb
mov
jmp
sub
jmp
cmp
fs
rclb
jae
and
std
sub
adc
je
decl
add
imul
mov
clc
dec
or
imul
outsl
fadds
cli
movsb
cs
mov
xor
sahf
into
in
cwtl
clc
ja
scas
cld
cmp
cwtl
out
sbb
movsb
dec
push
lret
adc
mov
aad
stos
ret
loop
lods
mov
and
and
scas
pop
add
repz
xchg
sbb
mov
or
cltd
add
cmp
jo
outsl
je
mov
insb
xor
push
out
cmc
push
mov
mov
dec
imul
shrb
rolb
cmp
pusha
and
inc
jbe
icebp
clc
lea
mov
cli
div
jg
bound
bound
out
pop
jl
and
and
xor
add
sub
addb
fwait
add
mov
xchg
pop
repz
loop
push
in
pop
jge
pop
add
jg
jmp
ja
push
xor
lret
stc
inc
jecxz
mov
call
std
jg
fldcw
cmp
pop
sub
push
in
pop
dec
sub
cmp
iret
cmc
mov
stos
and
or
xor
and
addl
xchg
jp
sbb
pop
lahf
mov
pop
adc
lret
into
jo
std
xor
lock
fists
adc
inc
fs
mov
jg
cli
aaa
xchg
push
pop
lret
push
sub
incl
je
adc
sub
stos
sub
call
outsl
rcrb
jno
aam
add
sarl
adc
test
jecxz
lcall
mov
xor
mov
int3
cmpsb
cmp
inc
or
out
mov
cltd
cli
popa
mov
sbb
sti
pushl
divl
adc
cmp
push
fcmovu
lcall
cld
fwait
adc
push
outsb
negl
lret
cld
push
adc
mov
sti
cmp
jmp
xchg
push
mov
fsubrs
subb
push
jne
mov
push
inc
lds
into
push
mov
lahf
adc
pop
mov
pop
lcall
ja
fistpl
fstps
jne
dec
add
cmc
notl
hlt
scas
into
in
jne
je
outsb
out
mov
jbe
loopne
sbb
fldl
mov
std
je
push
inc
mov
fisttpll
push
rclb
movsl
ret
inc
mov
aaa
mov
fwait
test
xor
mov
add
repz
adc
add
out
aas
xor
add
adc
or
sbb
incb
pop
das
adc
mov
aas
pop
mov
std
adc
push
sti
xchg
sbb
aaa
xchg
sti
or
push
shl
fstpl
pop
xor
das
faddl
sub
pushf
fdecstp
iret
jb
arpl
push
adc
ror
pop
dec
js
loopne
dec
mov
stc
int
das
outsb
stos
arpl
pop
loope
aam
outsl
jg
mov
mov
jnp
addr16
mov
insb
fcmovbe
stos
or
pop
jo
mov
jl
es
sbb
jecxz
shll
push
pop
mov
outsl
pop
gs
jge
loope
inc
fisubrl
stos
mov
es
lock
push
pop
cmp
push
fistpll
into
ret
sub
adc
mov
and
sahf
in
rcrl
push
and
jmp
fistps
imulb
gs
sub
and
jo
vmwrite
add
adc
iret
sarb
aas
pusha
es
sub
leave
xor
jg
pop
mov
xor
popf
mov
dec
mov
mov
sub
pop
icebp
cmpsb
out
inc
lret
xchg
stos
inc
adc
adc
jecxz
pextrw
push
aaa
je
adc
xchg
rorl
dec
add
sub
gs
mov
dec
aas
pusha
jb
lret
ja
mov
sbb
test
outsl
sbb
xor
jnp
push
inc
add
movsb
rorl
out
sub
mov
mov
xor
xchg
rol
or
imul
xchg
leave
movsl
in
jmp
xchg
call
lds
cli
pop
sbbb
mov
jb
inc
and
decl
out
ljmp
call
pusha
loopne
dec
jae
xlat
dec
or
sbb
test
lock
inc
sub
subb
mov
dec
inc
add
scas
pop
xchg
fdivrs
push
inc
jo
les
repnz
mov
cld
imul
add
ret
rorb
push
xor
or
jg
inc
repnz
outsb
push
fstl
cmp
jmp
xchg
mov
mov
sbb
pop
mov
sarb
clc
or
adc
sar
xor
xchg
test
jmp
scas
sahf
je
jbe
xlat
sbb
pop
mov
fs
pop
lea
xchg
sti
aam
mov
sub
fimull
push
shl
les
fisttps
pshufw
jp
out
clc
fwait
test
scas
fistl
mov
mov
lahf
es
push
ret
jle
push
push
inc
sti
stos
mov
cwtl
imul
incl
push
sbb
pop
clc
ffreep
jbe
push
mov
jbe,pt
sar
sbb
popa
das
shrb
mov
pop
dec
in
rorb
jbe
jno
mull
adc
ds
mov
in
dec
decl
pop
into
xchg
xor
xchg
lock
js
pop
push
cld
sub
jbe
or
call
jae
imul
cmpsb
jl
sbb
and
adc
push
out
in
add
mov
std
jae
adc
add
mov
sub
cmpsl
push
jg
in
adc
inc
jo
fwait
daa
and
lods
mov
fisttps
ja
fbstp
adc
pusha
shr
xchg
fimull
fwait
out
fildl
lcall
cmpsb
push
daa
cs
add
iret
xorl
xchg
fs
mov
dec
hlt
or
mov
insb
test
sub
in
mov
sub
idivb
ljmp
jle
dec
data16
cmpsl
les
test
aas
pop
test
or
lahf
icebp
or
aad
push
nop
pop
cmp
lock
in
add
jo
adc
xor
out
mov
movsb
in
sarl
cld
out
and
decb
mov
xor
movsl
pop
pop
cld
fistpll
xchg
out
dec
ss
cli
mov
fmuls
rcr
lea
or
stos
sub
jp
adc
dec
fs
pop
jg
or
fisubs
push
fdivrl
mov
cld
push
jno
mov
sbb
mov
adc
cmp
fildl
filds
xor
pop
add
mov
out
ss
pushf
pop
jae
dec
clc
inc
testl
lcall
sub
push
cli
repz
pusha
das
mov
rorb
aas
push
or
inc
cmp
jo
movsl
loopne
xchg
imul
and
mov
movl
and
ret
je
cld
aaa
ret
pop
sbb
add
fs
sbb
jg
icebp
pop
daa
insb
je
lahf
in
pop
add
test
dec
out
ffreep
fidivrs
push
push
stos
pusha
jl
xlat
rorl
cmc
pop
cmp
cmc
ja
mov
add
pop
pop
xchg
data16
loope
xor
xchg
test
mov
inc
mov
xchg
ss
pop
loopne
out
jecxz
pop
jbe
ja
imul
push
cld
and
inc
shrb
std
fcmovnbe
mov
rclb
ficompl
pop
std
xchg
std
sub
jns
pop
loope
adc
cmpl
shrb
cmp
je
das
pop
mov
mov
bound
imul
jg
lock
lcall
cwtl
fnstsw
mov
fimuls
mov
in
mov
loop
mov
dec
pop
add
adc
xorl
loop
jp
jg
enter
mov
mov
lcall
mov
mov
sti
pushl
jmp
add
adc
inc
pop
pop
xor
fisttps
and
pop
rorb
out
loopne
and
loop
clc
inc
dec
jg
sti
pop
jne
mov
fimuls
les
jae
mov
enter
or
aaa
incb
in
add
or
je
pop
push
loopne
adc
div
es
popa
add
jle
jmp
js
add
lods
push
add
cli
cmp
arpl
movsl
ficomps
test
mov
xor
shll
add
fstl
ret
mov
push
repz
std
ffreep
mov
sub
sub
aad
jle
pop
cmp
loopne
dec
shll
add
sub
jnp
push
cld
push
std
pushf
ja
and
gs
sarl
fsubl
hlt
sti
jne
mov
sbb
fistps
sub
mov
test
cli
lcall
rcrl
mov
push
stc
sub
hlt
in
aas
xchg
pop
mov
cmp
xor
nop
lea
pop
idivl
fstpl
ja
loop
sbb
add
aam
int
stos
xchg
mov
loopne
rcrl
xchg
and
lahf
push
in
rcrl
jg
mov
sar
arpl
add
pop
dec
adc
dec
add
in
cmp
pushf
fistps
out
test
ret
mov
clc
sbb
jmp
pusha
xor
add
cld
jg
mov
inc
jno
adc
test
fucomp
or
jg
insb
test
xchg
jns
add
pop
mov
jge
cmp
pop
sbb
gs
aad
decl
fwait
pop
lock
fistps
add
icebp
rorb
push
lds
mov
jge
out
ja
or
lcall
lds
aas
addr16
in
cmc
xchg
add
jmp
jo
rcrl
mov
hlt
sub
jne
lahf
movsb
popl
das
frstor
lahf
pusha
iret
daa
and
xor
xor
lahf
jmp
jl
jb
jmp
adc
jbe
flds
repz
call
mov
dec
mov
fwait
in
andb
test
sbb
arpl
js
std
aas
mov
aad
cmpsl
xor
sbb
pop
pushf
jg
stos
mov
movsl
aad
and
cmc
adc
cmp
mov
js
into
mov
and
mov
andl
movsb
mov
push
ljmp
mov
lea
jp
call
fldenv
je
mov
and
scas
xor
cmp
cs
loope
fildll
push
fistpll
push
in
daa
fdivp
mov
movl
jo
cmp
out
lds
add
mov
subl
adc
dec
std
push
mul
sub
cmp
popf
div
repnz
or
xrelease
loope
mov
mov
jmp
dec
sub
fnsave
and
jg
xchg
nop
out
mov
push
mov
cmp
iret
mov
jo
xor
pop
mov
jg
icebp
stos
lcall
popf
and
mov
mov
out
cmpsl
shl
jp
dec
cwtl
daa
call
jne
pop
idivb
fists
shll
push
push
push
xchg
fstp
rorb
cmpsb
and
pop
dec
cvttps2pi
out
cmp
pop
ljmp
jmp
sub
mov
pushf
aad
jb
sbb
mov
popf
dec
add
das
icebp
dec
hlt
sub
out
cmp
or
test
cli
repz
add
jnp
testb
popa
scas
push
pop
or
jle
loopne
lret
jne
cld
mov
int
clc
aaa
cmp
mov
lods
push
movsl
push
cmp
into
int3
std
daa
cld
cmp
stc
idivb
push
aad
cld
das
xlat
rolb
jbe
sbb
or
mov
push
mov
js
xor
adc
lret
mov
push
mov
lods
fnstsw
mov
pop
sarb
cmp
inc
std
jg
cmp
rolb
inc
nop
ja
movsl
movsb
aas
sbb
popa
inc
jno
inc
fs
sub
loopne
test
xchg
add
push
cmpsl
jle,pn
pop
std
out
mov
imul
adc
sub
pop
sbb
pop
add
dec
adc
icebp
scas
mov
cmp
mov
mov
mov
gs
cs
daa
add
pop
int3
aas
scas
mov
push
sub
rclb
push
xor
jg
add
sub
cmp
in
cmp
pop
jmp
popf
mov
bnd
rcl
das
cld
dec
mov
subl
cmc
jns
sbbl
inc
jle
lcall
mov
or
and
lock
in
push
adc
scas
cmp
push
xor
mov
inc
mull
xor
xor
mov
xor
xchg
mov
testb
sub
fdivs
daa
stos
pop
rcrl
mov
cld
mov
add
sub
pusha
mov
adc
sbbb
sbb
std
ja
orb
jle
adcl
and
adc
push
dec
add
bound
sub
scas
xor
hlt
xchg
test
jmp
test
dec
jp
mov
xchg
ficompl
lods
hlt
pop
dec
ljmp
popf
jne
popa
xor
lahf
movsb
lods
js
clc
negb
jl
dec
testb
xor
incb
jae
sbb
sbb
out
dec
cmpb
dec
lret
xor
cmpsl
ret
mov
inc
xor
scas
fwait
stc
in
in
in
dec
cmpb
ss
ljmp
mov
loopne
scas
lds
pop
and
outsb
cmp
call
ja
and
into
push
clc
inc
xchg
mov
in
popf
dec
or
pop
clc
mov
mov
aas
loopne
dec
push
jno
xchg
fcos
sti
add
clc
mov
test
mov
sahf
sub
pop
leave
sub
push
adc
add
and
icebp
pushl
int3
data16
and
test
call
mov
out
imul
leave
push
ret
test
mov
dec
jle
lock
imul
dec
cmp
pop
stos
ret
or
sahf
xchg
mov
mov
sbb
fildll
add
cmp
inc
scas
cli
cmp
mov
lock
sahf
dec
sahf
into
xor
icebp
outsl
sub
pushf
cmpsb
sub
pop
or
jns
int3
pop
jl
mov
push
popa
jbe
clc
add
mov
fnsave
out
jg
lock
adc
in
loop
repnz
popf
sbb
inc
inc
out
and
sub
cmp
out
pop
rorl
shl
repnz
jecxz
push
sbb
movsb
arpl
inc
jno
adc
sub
out
test
inc
adc
inc
fidivl
sub
lahf
fwait
jo
adc
das
add
lods
sbb
cmc
cmp
sbb
outsb
lahf
mov
loope
popf
mov
sbb
test
sahf
mov
dec
lea
jb
mov
sbb
push
sbb
pop
iret
dec
pusha
xor
add
insb
and
add
xchg
jmp
xor
jns
and
mov
dec
pop
loope
xor
push
mov
leave
es
push
cli
out
fcoms
mov
dec
mov
add
cmovns
mov
add
clc
stc
pusha
and
insb
iret
or
stos
xchg
push
mov
mov
sub
shl
xor
ds
xor
pop
std
lahf
jno
inc
mov
fbstp
outsl
stc
pop
cmp
cmpb
mov
or
mov
cmp
pop
dec
xchg
movsb
xlat
pushf
jmp
mov
pop
loop
int3
notl
pusha
test
cmpsl
xchg
call
cld
cmpsl
pop
mov
mov
xchg
faddl
push
mov
mov
les
xor
add
das
bound
lock
inc
aaa
ljmp
add
subl
mov
jg
ljmp
gs
pop
jecxz
movsl
ret
cmp
xchg
ja
and
xor
ret
mulb
popf
lock
jmp
jl
mov
cmp
xor
gs
les
push
push
or
lret
mov
mov
or
por
pop
inc
cmp
clc
stos
cmpsb
loopne
frstor
push
mov
mov
fildl
cs
or
cmpsl
pop
aad
inc
je
sbbb
iret
cmp
les
in
jmp
mov
mov
pop
int3
rcrb
pushf
mov
loopne
pushf
jmp
nop
shlb
popf
or
std
or
mov
add
and
jl
pop
pop
pop
dec
mov
scas
xchg
cli
out
fst
inc
testb
inc
adc
mov
mov
dec
push
leave
and
lds
cmp
jge
cmp
mov
push
pusha
movsl
lahf
dec
jmp
jbe
lock
subl
test
xchg
lret
nop
sti
test
xchg
xchg
mov
loopne
push
mov
cli
in
pop
hlt
ja
add
cmp
xor
ja
cld
xor
enter
mov
test
int3
ds
ret
cmpb
or
popf
jb
test
pop
std
data16
ffreep
repnz
mov
push
inc
fistpll
aas
xor
stc
lcall
out
rcr
prefetchw
and
iret
pop
push
jg
les
and
mov
mov
xchg
push
dec
add
in
mov
into
cmp
xchg
sub
pop
lea
sbb
lahf
sar
rcll
ja
push
push
lret
sti
ja
mov
jmp
mov
test
lock
decb
xor
or
jg
fwait
call
or
cmp
xor
in
mov
popf
cmp
dec
ljmp
jecxz
test
cmova
aaa
js
stos
push
ret
ret
inc
jns
ret
and
and
loopne
ret
mov
das
fldenv
cltd
mov
pop
icebp
dec
pop
or
mov
inc
jnp
cmp
mov
push
incb
cltd
decb
push
stos
mov
orl
fwait
cwtl
sti
jg
call
aaa
pop
cli
movsl
jb
xor
mov
xor
addr16
mov
cld
aaa
loop
add
es
add
or
pop
scas
fldenv
add
fildll
sbb
out
ret
cmc
shl
adc
adc
ja
enter
add
insl
dec
cmc
mov
dec
cmp
hlt
inc
out
les
xchg
jg,pn
rcrl
fcompl
pop
iret
inc
movsb
in
aas
mov
mov
jl
ds
filds
cmpsl
out
out
std
fs
push
popf
outsl
mov
add
lock
addr16
inc
lea
xor
add
jg
dec
push
or
sbb
pusha
stc
mov
jg
cli
xor
test
loop
xor
mov
clc
lahf
xchg
pop
sbb
pusha
shll
sbb
push
mov
cli
ret
dec
jmp
ffree
sub
dec
xor
add
lock
addl
xchg
jge
jb
pop
arpl
sub
cmc
xor
cmpsl
insl
and
and
in
sub
call
add
pop
mov
pop
in
roll
bound
js
cld
decl
ljmp
and
sarl
push
push
pop
and
mov
jge
xchg
adc
fwait
and
lds
xor
mov
mov
dec
cmp
push
pop
call
repnz
int3
or
sbbl
add
xchg
mov
aaa
js
dec
jnp
pop
mov
mov
sub
shlb
bound
cmpb
and
push
sub
pushl
sub
push
mov
or
pop
sarb
ret
push
adcl
out
sub
fistps
mov
cmp
mov
shrb
dec
mov
adc
jp
cmp
sub
loop
add
clc
addr16
daa
hlt
movlps
movsb
mov
rcrl
inc
idivl
adc
adcb
aas
icebp
out
dec
and
icebp
loope,pt
add
stos
notl
jmp
hlt
xlat
movsl
stos
sbb
adc
je
cmp
subl
lods
xchg
mov
inc
ja
in
jge
aad
call
decl
cmp
adc
push
xchg
idivl
inc
cld
cmpsl
adc
jnp
dec
je
or
jl
jo
lret
mov
sahf
and
push
inc
fiadds
repz
stc
jp
aas
stos
jae
lea
popf
and
out
adc
out
jp
dec
movsl
cmpsb
pop
push
ja
cmp
xchg
mov
repnz
bound
fcmovnu
ds
into
ja
addr16
orb
loop
sbb
popa
mov
leave
jmp
in
adc
lahf
jge
arpl
fistps
test
sbb
loop
pop
pop
mov
mov
cmpsl
adc
mov
sbb
and
push
enter
cmp
cmpsl
pop
jmp
add
stos
sahf
dec
test
pop
call
std
inc
neg
imull
int3
pop
add
mov
lea
loop
mov
dec
ja
rorl
popf
dec
jne
jo
out
decl
cmpsl
bound
cmpsl
push
fstl
adc
jg
decl
cli
call
mov
pusha
popl
clc
scas
sahf
cmp
js
mov
cmpsb
dec
mov
xor
or
or
pop
js
sbb
cmp
sti
dec
mov
mov
cmp
adc
ficomps
shrb
aaa
fcomi
out
dec
mov
imul
sbb
adcl
xchg
mov
cmpsb
mov
mov
cmpsl
shl
lcall
mov
imull
push
clc
mov
jne
push
enter
dec
and
adc
ja
mov
arpl
jp
xor
sbb
xchg
adc
mov
add
xor
popf
cmc
jg
std
sbb
imul
out
cmp
js
and
mov
stc
cmp
mov
std
add
jmp
sbb
in
adcl
clc
mov
push
xchg
popa
daa
lock
push
scas
jmp
inc
push
push
cmp
sbb
or
sbb
loopne
cmp
jp
outsl
mov
icebp
icebp
and
or
mov
push
adc
lahf
sbb
out
jle
jmp
fdiv
je
cmp
sbb
inc
decl
xor
ljmp
pop
clc
mov
sahf
sbb
jp
and
push
arpl
test
push
xchg
jle
mov
fcomps
addr16
push
mov
outsb
in
adc
out
in
fmull
stos
inc
fsubs
outsb
cmpsl
pop
ret
lahf
loop
popa
ret
push
sbb
sub
push
push
pushf
test
imul
add
push
mov
cmp
inc
dec
mov
jp
jg
sti
jmp
mov
mov
das
push
mov
sub
xchg
clc
push
sbb
xor
ds
enter
or
add
push
xor
sarb
pushl
lock
cwtl
sbb
jecxz
sub
sub
cs
adc
out
and
cs
call
scas
popa
lret
sub
jmp
mov
push
jns
cld
mov
xchg
mov
scas
fdivr
dec
sub
fdivr
dec
pshufw
outsl
call
push
incl
sub
mov
sbb
add
lret
xor
push
shr
cli
jbe
mov
xchg
mov
fisttpll
outsl
aaa
mov
xor
aaa
sub
leave
inc
mov
jecxz
cli
push
clc
pop
or
jne
arpl
add
sbb
sti
add
out
lcall
js
jo
cmp
outsl
icebp
mov
mov
js
cltd
mov
add
lea
pop
incb
adc
mov
inc
jp
into
xor
std
ljmp
inc
inc
push
ficoml
push
mov
pop
cmp
dec
andl
lcall
roll
adc
jmp
hlt
sti
dec
jnp
cmpsl
add
xor
xor
out
out
lock
jg
lds
dec
mov
sarb
xor
decl
aas
add
call
call
ss
fistl
inc
push
pop
aad
and
ljmp
cmc
pxor
fimull
pop
inc
inc
fs
dec
insb
pop
pop
nop
jge
test
sub
aaa
ret
pop
xchg
adc
and
or
inc
push
xchg
pop
addl
push
loopne
sti
invd
mov
inc
inc
push
call
int
mov
xchg
mov
not
add
adc
je
push
add
jg
adc
push
inc
add
push
push
push
dec
xchg
test
mov
xchg
jo
pop
ja
jge
clc
and
jo
cli
fmull
sub
add
pop
dec
lret
idiv
int3
add
inc
mov
or
xor
adc
sub
leave
mov
mov
or
cld
mov
sub
neg
push
iret
dec
jg
js
test
and
lock
outsb
pop
jns
addr16
push
js
jno
lock
ret
push
push
push
movsb
add
loopne
faddl
inc
lds
and
xor
out
jmp
inc
daa
push
in
push
push
cwtl
outsb
sbb
xor
test
jecxz
push
rorl
incb
movsb
lods
pop
lock
inc
outsb
push
incl
pop
inc
add
not
add
inc
inc
movl
mov
faddl
and
cld
and
out
lock
ja
add
push
add
test
sub
xchg
jno
and
rolb
inc
cld
push
jle
or
sahf
and
add
sub
pop
push
push
push
mov
shr
adc
fidivs
inc
imul
inc
bound
push
and
and
or
sub
pop
adc
gs
dec
ret
lods
cmc
adc
insl
shrb
add
xorl
sub
clc
repnz
xor
in
inc
mull
fisubs
dec
ja
nop
push
xchg
add
out
mov
scas
jg
lea
neg
inc
neg
mov
jb
add
scas
dec
data16
out
inc
bound
cld
jb
jo
or
xchg
xchg
in
push
xchg
cmp
cmp
call
inc
or
ja
imul
adcb
cwtl
push
je
sbb
mov
mov
cmp
pop
rcrl
push
xor
push
scas
xchg
outsb
push
mov
cmc
js
scas
pusha
adcb
xor
push
xchg
pusha
ret
clc
jg
in
or
fiadds
neg
adc
add
xor
les
adc
sarl
repnz
aaa
cs
sub
popa
add
mov
jmp
test
dec
xchg
lret
add
cmc
ret
filds
xor
push
fsubrl
pop
push
dec
loopne
push
mov
gs
inc
daa
xorb
push
or
sub
or
push
push
push
ret
lret
inc
mov
incb
push
jb
lock
rcrb
add
push
push
roll
sub
adc
mov
adc
adc
add
jnp
inc
hlt
arpl
lock
sbbl
xlat
add
loope
jo
repnz
sahf
dec
not
mov
inc
clc
vmovmskps
dec
sbb
adc
inc
test
push
adc
dec
sub
idiv
sbb
dec
push
add
rcll
adc
lods
repnz
aad
add
jo
jae
sub
sub
hlt
fucomip
int3
add
ret
orl
add
or
dec
inc
and
xor
push
addr16
int
outsl
int
clc
jae
sbb
data16
xchg
adc
cli
dec
push
push
insb
push
push
adc
call
ret
ret
or
push
dec
notl
ret
sbb
insl
jno
sub
xor
mov
fsubrl
xor
psrad
add
add
test
addb
mov
mov
add
inc
jne
insb
xor
or
andl
push
xchg
lock
sbb
outsl
cmp
add
mov
push
xor
or
clc
lds
faddl
sub
arpl
je
add
adc
adc
xor
push
inc
int3
imul
call
pop
sbb
roll
sub
or
shlb
sbb
rolb
xchg
cmp
inc
push
jbe
rcrb
push
inc
push
pop
jmp
add
pop
movsb
mov
gs
push
xlat
adc
pop
shrb
popa
xor
cld
push
push
dec
dec
add
inc
push
popa
inc
push
mov
inc
data16
add
mov
add
adc
dec
sbb
neg
dec
or
lock
push
sbb
dec
sub
dec
fs
lea
push
jl
neg
add
or
divl
pushf
aaa
inc
cli
iret
push
adc
shr
adc
adc
push
rcll
fisttpl
neg
repnz
imul
push
adc
roll
fcoms
mov
scas
add
add
in
lahf
cs
jb
inc
nop
test
ret
flds
jnp
and
jmp
negb
pop
js
outsb
inc
xor
push
js
fcoml
push
xor
insb
sti
imul
xchg
int
cli
test
cmp
sbb
lea
in
cmpsb
lock
data16
pop
dec
add
ffreep
add
addr16
xadd
add
hlt
inc
rcl
xchg
and
andb
test
loopne
ffreep
inc
fmull
je
push
pop
jle
jg
push
push
or
inc
inc
shlb
sbb
rcrl
push
in
push
jbe
andl
clc
pop
adc
pushfw
fwait
mov
ret
neg
inc
inc
dec
mov
mov
stc
repnz
sbb
add
jmp
sbb
sub
inc
push
repz
adc
dec
sub
neg
push
or
add
add
fcomps
add
outsb
pusha
inc
adc
push
sbbb
sbbl
and
push
fidivs
push
repz
fs
lock
jns
insb
and
sbb
add
pushf
scas
mov
inc
dec
jecxz
sbb
pop
dec
sub
lods
pusha
repnz
cld
and
jmp
or
scas
push
in
xor
ss
mov
push
arpl
stc
lock
push
push
mov
pop
lcall
aam
dec
jg
xchg
dec
imul
push
iret
scas
rcrb
cli
xchg
cmp
dec
fadds
add
dec
jo
push
mov
push
mov
dec
xor
push
std
dec
inc
fcmovnbe
dec
adc
cmpsb
icebp
in
imul
adc
and
dec
inc
loop
cmp
mov
adc
inc
adc
xchg
lock
and
adc
not
inc
dec
mov
ljmp
inc
loop
fcmovnb
inc
add
cmp
fists
inc
adc
fildl
sti
sub
adc
repz
sub
push
adc
sbb
mov
repz
add
sbb
bound
sub
pop
mov
jmp
or
data16
aam
dec
sbb
aad
gs
and
stos
cmp
cld
mov
xor
xchg
pushf
mov
lock
loopne
add
fisttps
sub
push
icebp
dec
jecxz
insb
sub
add
fadds
je
pop
mov
add
or
popa
inc
xor
pop
in
ss
outsb
dec
push
jmp
mov
sub
fs
jbe
add
xor
mov
cmp
in
mov
add
dec
mov
mov
xchg
sbb
jp
or
not
test
clc
mov
fistps
mov
jae
stc
mov
mov
add
stos
inc
mov
or
pusha
fs
push
cli
lea
cs
imul
inc
mov
jp
mov
sbb
mov
test
es
add
inc
ret
pop
mov
cmp
ja
xchg
jo
cld
push
push
push
dec
xor
sarb
dec
addb
lea
and
xor
imul
call
test
loope
sbb
test
insl
and
mov
or
iret
lret
lahf
jle
adc
cmp
add
push
test
pop
pop
cld
add
dec
lods
push
mov
push
ret
xor
and
mov
inc
adc
xchg
cwtl
mov
mov
test
and
mov
rolb
rorl
inc
rolb
mov
push
push
lods
in
repnz
sub
inc
into
lock
rsm
lds
arpl
iret
dec
inc
dec
dec
jne
mov
data16
loop
in
add
into
cmc
adcl
fisttps
shl
data16
dec
aaa
pop
or
push
xor
mov
daa
lea
xchg
jl
test
cmc
sbb
rolb
push
cmp
or
js
gs
imul
test
cmp
adc
xor
inc
add
decl
ljmp
and
sti
inc
sahf
neg
push
adc
add
lock
shrl
stc
das
sub
jae
adc
jl
clc
sti
pushl
dec
and
sbb
repz
push
pop
inc
incl
mov
cmp
dec
add
or
es
push
aam
inc
add
sbb
add
pushf
pushl
imul
push
push
mov
lret
push
inc
arpl
imul
push
aaa
jb
mov
cwtl
and
lahf
int3
ljmp
mov
push
cld
push
push
icebp
sub
fs
jns
push
in
fidivrs
push
push
je
lret
xchg
or
xchg
add
outsl
jecxz
inc
jp
hlt
xor
cwtl
or
add
test
add
aaa
sbb
int
push
push
add
cmpsw
mov
sub
add
movsl
rol
add
adc
mov
icebp
scas
mov
push
pop
loop
ret
xchg
test
cmpb
inc
loopne
or
fwait
pusha
xor
insb
cld
push
sbb
or
pop
test
push
lcall
jmp
les
xchg
subl
ffree
mov
pop
sar
jo
in
add
fiadds
or
dec
jbe
jo
sbb
js
push
mov
mov
dec
add
aas
push
pop
mov
push
insl
jae
sub
or
and
addl
test
sub
adc
inc
rclb
push
pop
arpl
xor
dec
jle
out
sbb
xchg
sbb
pop
cli
mov
dec
inc
pop
add
stos
ret
les
shll
xor
inc
mov
ud0
ss
push
jbe
je
push
push
xchg
push
ds
dec
pop
movsl
insl
mov
cmp
loope
dec
inc
into
or
xor
jb
dec
xchg
sub
xlat
sub
ret
pop
sbb
ret
push
addb
test
dec
xorl
push
mov
xchg
xor
push
add
rolb
mov
out
sub
lahf
in
lea
inc
add
adc
inc
adc
pop
gs
pusha
negl
push
jb
dec
adc
or
lock
call
xor
mov
lahf
push
aaa
dec
adc
and
or
rorl
cmp
ret
sbb
lret
adc
mov
mov
push
into
loope
arpl
xchg
pop
pusha
rorl
shll
popa
lods
stos
push
fistpll
push
loop
inc
dec
in
clc
push
rcr
pop
call
inc
adc
mov
cmp
adc
fimull
iret
sbb
inc
adc
ja
stos
push
repnz
loope
adc
dec
cld
ljmp
and
decl
jne
leave
ret
fstp
sub
std
xor
insl
fcoms
push
push
push
inc
jns
bound
gs
add
dec
push
or
pop
add
testb
lret
or
ficompl
filds
xchg
fdivrs
in
fstps
cmp
jns
fwait
dec
aaa
arpl
push
js
or
dec
fstl
xor
leave
inc
mov
clc
or
push
inc
gs
data16
pop
mov
out
sbb
dec
inc
adc
dec
add
or
sbb
test
add
ja
push
xchg
mov
ret
aad
dec
jno
std
xor
or
mov
loope
loop
mov
je
cmp
xchg
push
xor
call
imul
test
adc
dec
inc
adc
sub
add
dec
sub
sbb
sbb
mov
lahf
mov
es
outsb
insl
shrl
and
je
test
mov
push
push
inc
addb
push
push
aam
out
in
lea
push
mov
xor
lret
xor
nopl
xchg
es
rol
adc
cwtl
enter
ror
pop
ficoml
popa
cld
or
cli
inc
mov
pop
xor
mov
icebp
mov
in
repnz
insb
fisttps
jmp
push
loopne
call
jl
dec
pop
push
pop
and
aaa
lret
or
add
out
out
add
fimull
push
add
hlt
fisubrs
loop
add
clc
fbld
xchg
inc
push
arpl
cli
sub
pushl
inc
xor
ret
add
pop
pusha
ror
ret
dec
in
clc
das
lods
dec
push
xor
inc
data16
add
dec
negb
je
xor
mov
xchg
add
push
aas
stos
sub
or
ss
cmp
jne
mov
inc
push
xchg
inc
aas
test
gs
insb
outsb
repnz
out
dec
stc
pop
dec
arpl
shlb
or
or
sub
lods
clc
orl
push
pop
lods
mov
pop
push
or
dec
jbe
fcmovb
aas
orb
jge
into
jbe
bound
mov
dec
xor
push
test
stc
push
fisttps
mov
push
jo
push
sub
dec
dec
dec
lods
cmp
div
rcr
mov
test
inc
cld
sbb
dec
fdivs
cmp
popa
add
jb
push
cmp
inc
shrb
inc
pop
roll
push
xor
xor
xchg
dec
arpl
notl
in
fwait
add
sbb
cmp
jne
push
add
stc
mov
xchg
inc
popa
xor
lods
or
mov
dec
mov
jno
jp
je
test
pop
rolb
adc
add
mov
adc
pushf
loope
push
adc
insb
arpl
mov
leave
add
bound
push
mov
jns
xor
add
inc
mov
push
mov
sbb
mov
in
dec
push
daa
hlt
add
daa
dec
mov
arpl
dec
push
bound
add
hlt
xlat
imul
mov
inc
in
or
mov
inc
inc
insl
push
dec
jo
rcrb
movsl
aad
sub
bound
addb
xor
fsubr
ss
xlat
call
inc
lret
pop
xchg
in
sar
aaa
inc
push
mov
push
loop
push
inc
sub
add
sbb
aaa
lea
ss
mov
pop
movsb
aam
int
and
ds
xchg
outsb
int
xor
or
mov
jns
daa
mov
outsb
ss
aaa
mov
ret
push
jns
mov
mov
mov
orl
pop
aaa
dec
je
sbb
jp
dec
in
bound
or
or
dec
je
dec
inc
push
sub
incl
pusha
add
inc
push
neg
inc
jmp
inc
mov
adc
xor
sbb
test
pop
sbb
mov
add
sbb
mov
pushf
xchg
stos
sbb
je
shr
outsl
stos
push
insb
test
fwait
and
adc
add
pusha
xchg
or
insl
pop
mov
jo
push
push
push
jae
es
add
mov
call
sbb
sub
pop
es
mov
test
rcr
and
sub
mov
lods
push
or
imul
fwait
mov
add
aas
lock
xor
add
shll
mov
icebp
inc
dec
pop
sbb
test
imul
leave
ret
filds
icebp
arpl
adc
je
loop
leave
dec
pop
add
mov
sub
insl
jno
xor
add
aad
mov
adc
das
cmpsl
xor
call
mov
or
aas
sbb
mov
add
xor
mov
fwait
lods
pop
pusha
incl
xor
jg
dec
das
mov
aaa
je
push
hlt
scas
add
inc
std
sub
shrb
push
ljmp
xor
push
dec
push
stos
bound
or
sbb
push
jbe
dec
cmp
mov
xor
xchg
adc
and
add
ja
test
push
cltd
repnz
loopne
adc
push
inc
ss
and
adc
inc
pop
cmp
xor
push
sarb
push
sarb
sub
or
push
movsl
mov
ret
arpl
test
or
fstl
xlat
addl
in
xchg
adc
ljmp
push
outsb
jbe
insb
fs
ret
add
adc
and
push
enter
xor
pop
mov
outsb
pop
inc
fstp
mov
xchg
popa
fs
add
decb
jns
je
adc
imul
movl
push
pusha
arpl
inc
outsb
xor
push
xchg
sbb
add
pop
lcall
sbb
dec
push
lret
inc
add
inc
mov
xchg
pop
jo
adc
ljmp
stc
add
push
not
inc
push
cmp
or
ds
das
cs
mov
mov
push
fcmove
push
lods
shll
xchg
cli
sub
sub
mov
push
and
cmpsb
incb
push
dec
xor
push
adc
add
push
hlt
stos
subb
sahf
flds
ja
push
lock
inc
addl
lock
dec
mov
add
jae
dec
add
add
or
adc
fidivs
add
sbb
add
xchg
push
leave
inc
shlb
dec
push
xchg
js
pop
push
roll
xor
cmp
mov
jecxz
ret
push
dec
data16
inc
inc
jmp
adc
enter
sbb
sbb
inc
add
dec
cld
push
jne
mov
pusha
cmp
sbb
add
and
jo
inc
addl
inc
jle
decl
sub
dec
inc
sbb
inc
inc
sub
inc
xchg
pop
adc
sub
or
jne
dec
or
mov
sahf
test
xchg
dec
in
sub
or
or
xor
jne
adc
popf
and
loopne
xor
inc
sbb
adc
orl
popf
loop
add
xchg
popl
lahf
xchg
loop
cmp
je
mov
add
scas
pop
add
add
getsec
push
xchg
test
shrb
fimuls
pop
jnp
mov
xor
imul
add
gs
push
adc
in
insb
imul
mov
xchg
fucomip
add
inc
roll
je
into
ror
sahf
testb
enter
lods
xchg
int
inc
pop
mov
sub
lods
mov
or
addr16
add
mov
rorb
notb
add
and
ss
sbb
addl
push
mov
nop
in
cwtl
out
mov
jmp
inc
pop
in
mov
stc
mov
int
inc
dec
inc
mov
lahf
add
mov
dec
push
xor
pop
or
and
in
test
add
cmp
dec
cmpsl
sahf
sub
cld
or
sahf
or
mov
les
addl
xor
pop
mov
sbb
add
mov
mull
and
daa
sub
sub
sbb
cmp
addb
add
mov
jl
inc
pop
or
mov
js
repnz
in
lcall
push
lock
fisubrl
mov
add
shlb
addr16
std
pop
mov
fisttpll
inc
and
push
daa
movsb
subl
xor
sub
cltd
call
xchg
or
and
jg
lods
cmp
inc
mov
test
adc
sub
mov
or
lods
pop
pop
addb
fisubrs
lret
bound
pop
sbbb
mov
insl
or
inc
addr16
mov
pop
add
pop
jo
fwait
mov
sub
je
dec
cmp
xor
shrl
jae
test
jo
cmp
add
int3
inc
fcomip
insl
in
inc
push
sbb
mov
clc
add
jb
int
and
or
sub
int
mov
mov
push
mov
mov
mov
pop
cmp
idiv
push
mov
adc
or
xchg
outsl
push
lahf
sub
rorl
jge
fisubs
adc
das
inc
and
dec
sti
sbb
xlat
dec
cmpsb
dec
imul
test
popf
sbb
add
shlb
repnz
adc
scas
add
cltd
jae
js
fwait
sub
and
mov
or
mov
dec
ret
enter
jbe
push
repnz
cmpl
jg
nop
out
add
inc
or
insb
sub
in
or
clc
dec
in
out
inc
push
push
stos
adc
mov
les
xlat
cmp
mov
repz
in
mov
jp
inc
jle
mov
shll
or
xchg
subb
xor
or
sti
xor
or
jne
lea
shlb
int
mov
sub
mov
or
xchg
orb
or
rcrb
sub
cmpsb
sbb
pop
jne
mov
push
sbb
cmpsb
jge
push
xchg
sbb
cltd
test
xchg
int3
sti
mov
shrb
movsb
adc
roll
sbb
in
xor
in
mov
mov
sbb
inc
pop
mov
xor
mov
cmp
jp
mov
repnz
push
aaa
repz
pop
into
xchg
jecxz
adc
sahf
push
sub
cwtl
lea
xor
enter
push
cmp
mov
jp
xorb
add
int3
xor
fistl
cli
aad
sbb
imul
cli
test
mov
cmpsb
adc
inc
fistl
loopne
xor
inc
sub
xchg
call
pop
sbb
loop
mov
shrb
sbb
adc
sarl
xchg
cmpsb
ljmp
int
cmpsb
and
sarl
cli
ja
lds
or
icebp
lcall
jl
mov
test
clc
cmp
xor
cmovle
sbb
in
leave
stos
sub
mov
xchg
inc
mov
pop
cmp
inc
sub
jo
nop
pop
jle
fadds
test
leave
sbb
fnsave
pusha
cmp
and
dec
gs
mull
pop
add
mov
xchg
xchg
loope
xor
jnp
mov
mov
sub
push
popa
bound
add
inc
push
jl
adc
repnz
call
cmp
out
mov
mov
lea
dec
scas
pop
add
add
shr
dec
arpl
and
push
inc
arpl
mov
fbld
call
dec
repz
dec
stos
pop
rorb
lock
mov
xchg
fmul
sbb
das
adc
mov
adc
js
cmp
lahf
scas
sarl
enter
pop
and
loope
jo
orb
lods
std
adc
pop
sbb
jmp
inc
inc
sbb
repnz
and
jno
frstor
push
daa
popa
jns
xorb
scas
mov
in
popa
xchg
scas
jo
lock
jo
lcall
add
push
inc
nop
xchg
test
stc
mov
ljmp
and
lcall
add
push
xor
orl
jle
inc
pop
int
test
mov
jne
adcb
cmp
add
arpl
add
add
or
fsincos
or
je
dec
into
or
jg
push
sbb
xchg
adc
aad
xor
faddl
out
shlb
lock
mov
movzwl
lahf
and
inc
imul
jmp
xchg
mov
jne
sbb
in
sub
fldenv
imul
and
shl
sub
mov
cmp
in
cmp
je
or
mov
sub
clc
push
jne
add
xchg
rcrl
xchg
idivb
mov
arpl
fmuls
or
xchg
jno
lock
mov
mov
pop
push
or
out
stos
rorl
jno
add
sub
dec
popf
rolb
xchg
sub
cmp
push
inc
add
pop
pop
lods
jl
sbb
pop
out
xor
sbb
pop
mov
mov
ret
dec
stos
xlat
pusha
sbb
sub
xor
cmp
pop
or
inc
xchg
or
jmp
push
decb
xchg
push
cmp
fldl
das
xchg
sti
jmp
rcl
dec
xor
xor
imul
dec
sub
jp
inc
or
mov
push
mov
mov
hlt
mov
push
push
inc
push
cmovno
in
xor
pop
or
jp
dec
lret
pop
or
cmpsl
inc
or
pop
stos
cmpsl
xchg
ja
loopne
xchg
jg
hlt
mov
jnp
xchg
out
push
xchg
rcrl
sarl
aas
in
mov
push
cmp
in
es
in
lods
repnz
repz
test
jne
subl
pushf
mov
mov
scas
jl
jnp
and
das
lods
mov
mov
pop
inc
ja
pop
adc
push
and
iret
popa
movsl
adc
das
push
push
lock
test
add
out
leave
inc
push
fimuls
add
or
insl
push
cmp
rolb
int
and
stc
addb
dec
fbstp
and
hlt
je
and
cmp
push
cmp
daa
add
cmpsl
add
sub
data16
leave
orl
add
ret
loop
repz
ds
je
lock
push
imul
dec
fmulp
je
out
add
bound
lods
stos
incl
loope
aad
fnsave
mov
jecxz
sbb
shlb
add
daa
adc
inc
sub
xor
xor
imul
stc
mov
jp
daa
stc
and
inc
adc
bound
xlat
adc
add
je
and
popa
lahf
aaa
loopne
in
or
ret
ret
jle
pop
and
scas
push
push
negl
shll
mov
ljmp
sbb
shl
push
jns
dec
xchg
lods
adc
mov
nop
bswap
mov
mov
push
xchg
sti
les
and
in
rolb
loopne
mov
ficoms
mov
repz
imul
pop
scas
pop
or
cmpb
xchg
aaa
dec
enter
mov
fadds
mov
pop
mov
das
xor
scas
add
dec
add
ja
lods
ret
pop
fnstenv
adc
push
rcl
jns
scas
enter
bound
mov
and
into
push
jo
inc
lods
movsb
inc
xchg
jmp
mov
push
add
push
pop
mov
sbbb
ja
sub
pop
ljmp
mov
ret
mov
pop
and
stos
imul
jno
mov
movsb
iret
rcr
sbb
cltd
pop
cwtl
popa
mov
add
addr16
jge
cmp
jge
push
cmp
insl
outsb
imul
dec
sbb
adc
hlt
add
stos
dec
cmp
xorb
fimuls
adc
push
or
cmpsb
loopne
inc
in
sub
xchg
inc
sub
push
ss
fadds
shl
adc
lods
xchg
and
lock
repz
shlb
mov
repnz
into
push
or
cwtl
push
arpl
sahf
cmp
pop
les
shll
xchg
fcmovbe
nop
sbb
scas
add
ljmp
lret
insl
popa
adc
int
ss
add
mov
adc
adc
inc
pop
shlb
cmp
mov
xlat
pop
xchg
dec
sahf
mov
fiadds
dec
lods
sub
popf
insl
std
and
lret
fcmovb
ja
push
daa
test
sbb
imul
pop
and
test
jecxz
push
dec
sbb
and
cmp
add
push
out
pop
push
data16
mov
std
aad
mov
mov
xor
clc
mov
jle
jge
lods
sub
xchg
mov
mov
sbb
push
stos
sbb
ret
push
cmp
test
mov
sarl
arpl
pop
xchg
dec
es
dec
xchg
or
lds
insb
pusha
aas
add
popf
jno
jae
xor
ds
sahf
in
lahf
test
and
xchg
jecxz
outsb
adc
and
mov
cmpsb
ret
mov
adc
arpl
dec
mov
sahf
int
aaa
sbb
das
movsl
pop
cmp
into
push
das
lret
inc
sub
push
pop
orb
ret
mov
sar
imul
pusha
adc
add
inc
call
sbb
mov
int
xorl
add
adc
mov
xor
in
push
mov
nop
and
xchg
lcall
adc
ret
repnz
and
fdivs
jge
sub
adc
inc
ds
fisubrs
pop
outsl
les
and
lock
sub
xor
mov
loopne
inc
into
lret
lcall
mov
pop
xor
scas
dec
mov
jmp
mov
push
nop
mov
dec
arpl
push
aas
add
xlat
xchg
ja
push
mov
push
jge
inc
movsl
ljmp
jno
sub
stos
xchg
mov
daa
movsb
dec
dec
cltd
pop
inc
mov
and
mov
and
or
repnz
movsb
arpl
mov
mov
cmp
and
and
dec
insl
aad
idiv
dec
in
arpl
int3
das
add
ss
jb
movntps
xor
mov
lods
xchg
push
and
rcrl
icebp
mov
mov
xchg
xor
xchg
leave
cwtl
in
imul
xchg
ja
aaa
cmp
test
inc
dec
mov
sub
lds
mov
jl
aam
cmp
and
mov
scas
or
sbb
je
mov
or
cmp
or
sbbl
mov
or
repz
movsl
pop
or
adc
icebp
or
int3
ja
mov
ret
inc
mov
xchg
inc
sub
xchg
sbb
cmp
dec
pop
test
jae
cld
rcl
rcl
adc
ret
adc
scas
sub
and
lds
cwtl
cmp
mov
inc
push
push
and
dec
mov
inc
push
dec
pop
test
xchg
jg
sub
jecxz
push
aaa
in
insb
rcrb
dec
leave
mov
shll
xlat
js
pop
push
cmc
rclb
cmp
xchg
xor
imul
push
sbb
pop
fstl
inc
push
lds
sbb
scas
das
nopl
nop
data16
mov
xchg
cmp
push
adc
pop
jle
mov
sbb
scas
jmp
jns
push
pop
rcr
arpl
or
cmp
idiv
jmp
xor
jb
mov
xlat
int
sub
sti
jp
jo
adc
test
nop
loope
cmpsb
lock
mov
dec
xor
push
adc
test
js
sbb
outsb
rcrb
sbb
cmpsb
pop
xor
adc
sub
rcrb
add
lea
sub
adc
shll
jb
aaa
inc
cmp
sbb
sahf
fs
in
out
adc
mov
xor
add
subb
push
imul
loop
nop
sub
push
xchg
lcall
lahf
hlt
shlb
or
and
inc
xor
mov
popf
lcall
inc
pop
mov
lock
in
adc
fmuls
ficoml
mov
jo
add
cmp
dec
adc
ret
into
mov
fisttps
outsl
jbe
sub
adc
cltd
test
mov
or
xor
xchg
push
es
lods
rolb
dec
xlat
pop
fmull
add
xchg
mov
push
fsub
gs
fwait
pop
rcrl
mov
jmp
in
or
xor
jno
cmp
movsl
pop
or
or
inc
test
sbb
lret
jnp
lods
mov
sub
rorl
add
add
test
xchg
inc
outsb
imul
mov
push
rcrb
mov
sub
test
pop
stos
lcall
dec
xchg
and
or
cmp
adc
mov
jo
lret
jno
jl
push
or
movsb
mov
xchg
inc
inc
pop
pop
jecxz
fmull
ljmp
or
jg
xor
sbb
push
mov
ds
add
xor
clc
mov
mov
adc
data16
shlb
inc
sbb
fcmove
xchg
sub
mov
jae
add
jp
jecxz
mov
xchg
testl
mov
mov
and
inc
fcomps
scas
add
dec
add
jbe
in
cmpsb
inc
and
jb
arpl
push
inc
jp
lds
inc
gs
imul
add
cmp
andl
push
cmpsl
add
jle
lds
aam
pushf
mov
inc
xchg
jb
jp
mov
leave
das
mov
ret
std
lods
mov
sbb
repz
mov
sbbl
ss
inc
imul
pop
sbb
addl
jecxz
testl
test
or
ret
pop
and
jo
dec
test
dec
mov
jbe
pop
push
mov
sarl
pop
xchg
and
mov
int3
ret
stc
jecxz
xor
cmp
and
xlat
jmp
cmp
std
mov
adc
lret
and
test
imull
in
out
mov
inc
xchg
xchg
push
xchg
cwtl
pop
jae
loope
insb
inc
xor
cltd
xchg
pop
stos
ret
and
ret
insl
and
movl
push
and
pop
pusha
push
or
shrl
outsl
jl
inc
int
lods
mov
mov
pop
divl
loope
in
ds
xlat
loope
rcrb
pop
aaa
cmp
jle
jp
xchg
fwait
shll
sbb
push
fisubs
xor
push
jl
call
loop
les
mov
sahf
inc
mulb
push
sub
loope
push
sbbl
stc
mov
je
inc
pop
add
das
shlb
inc
aam
int
pop
mov
lret
cmc
inc
xchg
std
lods
adc
mov
and
xchg
pop
xchg
dec
xor
and
pop
inc
add
fistpll
pusha
movsb
loope
scas
xchg
out
xchg
jns
cmpsl
jmp
add
inc
lret
out
cwtl
scas
sub
rcrl
outsb
xchg
into
daa
jge
xor
pop
das
sbb
inc
repz
js
leave
je
xchg
andl
cmpsb
les
mov
push
push
pop
jae
mov
enter
pusha
enter
inc
mov
adc
jnp
mov
in
mov
out
cmpsl
jmp
lea
stc
sbb
push
popa
and
adcb
jle
xlat
adc
mov
and
sahf
nop
inc
sbb
and
or
xchg
lcall
pop
sub
add
aas
mov
mov
clc
cmp
and
aam
mov
data16
or
fstps
cmp
and
in
sbb
adc
dec
andb
stos
add
pop
insl
dec
add
dec
mov
jmp
aam
ret
and
hlt
test
leave
test
pop
addr16
cli
sbb
mov
adc
pop
and
repnz
sub
mov
shll
jae
addl
dec
popf
and
cmpsb
cmp
test
pop
imul
xor
mov
jl
add
sbb
aas
jecxz
js
mov
jb
loop
jmp
aad
ror
jne
jbe
shlb
std
shlb
adc
icebp
jg
xor
inc
push
aaa
pop
cmp
test
cmpsl
inc
mov
out
xchg
xchg
inc
jmp
orb
or
clc
pop
sti
push
iret
scas
cmpl
cmp
add
out
inc
mov
dec
cli
in
push
in
les
mov
jno
mov
jo
cmp
mov
pusha
enter
clc
loope
add
test
mov
and
ret
stos
test
jne
fstl
jno
mov
and
mov
mov
insl
lods
ret
rorl
xchg
dec
repz
or
cwtl
scas
push
adc
or
sahf
sbb
jns
leave
jae
pop
and
or
push
gs
test
pop
add
add
loope
dec
xor
jo
jne
sub
cltd
je
lea
jmp
fsubl
scas
je
sub
sub
nop
mov
js
pop
popf
pop
and
cmpsl
xlat
fidivs
popa
xchg
int3
sub
add
mov
mov
fadds
cmp
or
pop
inc
dec
or
sti
repnz
xchg
ret
aad
je
shl
mov
in
xor
jae
inc
popf
pop
jne
sbb
mov
add
adc
cwtl
pusha
movsb
dec
push
stos
sub
push
pop
jecxz
dec
or
shl
jo
stos
cmp
push
mov
sbb
in
loopne
cmc
jo
mov
add
mov
xchg
xchg
cmp
adc
lahf
jbe
clc
call
mov
sbb
rcrl
sub
lods
xchg
lock
test
adc
push
popl
out
enter
xchg
push
add
mov
int
sub
mov
push
sbbl
cmp
or
dec
popf
push
dec
mov
icebp
daa
sub
add
icebp
std
into
xor
push
cmpsl
lcall
repz
sbbl
cmpsl
xchg
fwait
dec
andl
out
jbe
cmp
outsl
lock
xchg
dec
xor
dec
je
lock
ds
add
ds
repnz
xchg
pop
cmp
dec
addl
and
arpl
mov
jl
xor
mov
fs
lods
in
add
pop
pop
popf
test
cwtl
sub
cld
cmp
or
icebp
not
push
or
mov
mov
xchg
dec
mov
or
les
roll
ret
xchg
cmp
or
push
call
in
dec
lret
test
pop
push
pop
aam
mov
mov
jle
inc
jmp
ja
jbe
ljmp
fildl
ljmp
pop
out
mov
inc
inc
mov
pop
xor
add
sbb
adc
sarl
andl
je
mov
adc
inc
push
lret
ret
test
xchg
mov
adc
rcrb
mov
pushf
add
xchg
mov
pop
adc
xor
lahf
sti
sarb
cmc
daa
out
or
dec
add
into
cmp
push
imul
in
xchg
lcall
inc
loopne
cs
adc
pop
dec
adc
mov
mov
pop
xlat
mov
rolb
mov
adcl
lock
push
outsl
iret
pop
sub
scas
dec
loope
dec
movsl
dec
call
push
xchg
icebp
ja
mov
sbb
test
aas
sub
sbb
roll
adc
push
ret
push
stos
xchg
sbb
leave
jecxz
mov
cli
mov
mov
fbstp
add
fcomps
test
xor
cmpsl
jb
sbb
lock
outsl
mov
nop
test
push
dec
xchg
sti
iret
ret
bnd
cmpb
clc
mov
ret
imul
cmp
loop
outsl
inc
sbb
lea
popa
inc
pop
inc
sbb
push
ret
mov
and
fs
inc
add
mov
loope,pn
dec
lahf
and
sbb
mov
push
sub
and
inc
and
add
jle
mov
dec
and
inc
stc
shlb
cmp
shrl
jo
jmp
cmc
jmp
test
test
mov
cmp
xchg
std
xchg
sub
sti
popa
push
add
loopne
push
push
outsb
int3
xor
push
mov
and
xchg
mov
das
jmp
jo
sbbl
dec
and
mov
mov
ror
cmpsb
adc
clc
jo
mov
inc
pop
ljmp
inc
ss
in
cmpsl
mov
mov
xchg
orl
popf
dec
xor
call
inc
in
daa
sub
or
orb
add
mov
cltd
xchg
jp
addr16
xor
add
rcr
rcrl
sub
xchg
jns
xlat
loope
jl
pop
pop
icebp
mov
loop
lahf
cld
lahf
inc
jmp
jecxz
sbb
inc
mov
das
test
jno
ljmp
or
adc
dec
fiadds
dec
adc
test
jae
daa
enter
inc
sarb
addl
stc
out
shlb
jne
pop
mov
push
call
sbb
imul
or
mov
push
test
orl
lret
xchg
push
stos
ja
push
orb
ljmp
sbb
sbb
insb
mov
jecxz
cwtl
cltd
loop
pushf
jecxz
push
call
sub
push
jecxz
cmp
test
imul
jne
popf
dec
mov
push
clc
xor
bound
mov
sub
int
push
mov
test
in
add
mov
in
std
xchg
mov
nop
push
adc
sbb
into
je
rclb
mov
pop
sbb
push
test
pop
inc
jb
ficompl
test
inc
jb
cmp
mov
xchg
add
jo
or
gs
sbb
rcrb
jp
popa
cltd
or
ror
inc
lods
mov
lock
loopne
inc
sub
and
adc
jne
mov
pop
les
daa
mov
jp
and
jo
ljmp
pop
pop
pop
sbb
clc
add
imul
shrb
cltd
test
mov
setns
aam
lret
out
lods
xor
xchg
and
jmp
aam
jecxz
cmpsl
inc
xor
add
mov
push
cmp
add
sub
xchg
pop
push
and
mov
inc
mulb
lcall
lods
lcall
add
test
in
fcomi
mov
inc
sub
ret
sbb
daa
sbb
mov
add
xor
shll
cmp
loope
and
pop
aad
add
cmp
sub
mov
add
jecxz
cvtdq2ps
je
in
movsl
mov
sahf
mov
add
das
in
popa
stc
mov
enter
pushf
xor
inc
lret
iret
adc
dec
mov
dec
das
test
pop
bound
into
das
push
xchg
aam
in
mov
in
jp
lret
xor
shrl
sbb
push
xor
push
push
js
sbb
cmp
jle
in
test
push
sbb
cli
dec
cmpl
fistpll
fidivrs
push
test
xchg
push
pop
cmp
sub
cmc
xor
ret
int
jmp
ja
stos
ljmp
pop
hlt
in
adcb
fimuls
repz
cmp
and
fistps
jmp
xchg
push
int3
pop
add
test
adc
test
pusha
xchg
lea
mov
cltd
mov
fsubrs
xchg
dec
jl
pusha
dec
cmpsl
mov
ret
inc
push
loopne
pusha
aas
idiv
pop
nop
and
js
xchg
test
sbb
or
push
jno
dec
cmp
jle
outsb
fdivrl
push
jg
inc
addr16
cwtl
xchg
cmc
jb
cmp
jno
jg
loop
div
cld
stos
sbb
aaa
or
push
aam
clc
imul
cmpsb
jecxz
sub
pop
xor
inc
ljmp
xor
outsl
adc
adc
jo
dec
divl
mov
sub
mov
mov
sub
lret
ret
ret
xchg
mov
jmp
icebp
xchg
jno
xchg
or
fisubs
aas
pusha
rcll
jecxz
and
in
outsl
xor
xchg
mov
jecxz
not
rolb
jp
xor
sub
mov
sub
aam
push
push
dec
xorl
icebp
je
mov
pop
lea
les
sbb
xor
aas
jnp
push
scas
adc
push
sbb
nop
mov
rcr
xor
xchg
pop
inc
sbbl
iret
xchg
sbb
or
mov
sbb
cs
sahf
sahf
inc
and
clc
push
enter
sub
je
and
xchg
jae
ret
pusha
and
jle
mov
adc
shrb
pop
fs
pop
and
and
mov
and
jl
cli
pop
bound
xlat
add
xor
and
dec
jbe
adc
aad
fs
xor
push
test
or
mov
jo
psubw
pop
mov
and
dec
popf
pusha
xchg
out
mov
push
es
jne
aas
inc
lahf
xor
mov
mov
xor
je
dec
mov
loope
push
mov
or
and
xorb
adc
pop
sub
push
rorb
cmp
dec
jb
mov
pop
dec
xchg
lcall
push
aaa
ja
xchg
adc
push
mov
jmp
inc
mov
and
or
or
lahf
inc
test
xchg
inc
les
fwait
loope
out
pop
data16
mov
or
xchg
jl
adc
mov
or
adc
mov
dec
cmp
in
push
scas
cmp
dec
mov
fcomi
gs
xor
divl
lds
hlt
pop
adc
jo
xchg
xor
mov
std
imul
jo
stos
test
xlat
jg
popa
in
mov
into
loop
ret
icebp
addr16
insl
mov
or
cmp
pop
xchg
adc
in
pop
int
sbb
push
pop
xor
popa
inc
mov
mov
das
adc
or
sbb
loope
add
xchg
dec
cmpsb
in
dec
stos
hlt
hlt
mov
add
aam
xor
jno
pmuludq
aad
adc
and
je
jnp
clc
adc
stos
cmp
mull
popf
sbb
scas
and
adc
cmpsl
cmp
add
jp,pt
xchg
mov
or
mov
pop
hlt
stos
cltd
rclb
jo
lcall
scas
aam
dec
aad
nop
ror
xchg
les
data16
add
fwait
mov
adc
lret
dec
cmp
cmp
scas
and
add
sbb
jnp
loop
scas
mov
push
jo
jno
cmp
xor
push
shrb
dec
cmp
push
fcmove
jno
imul
dec
mov
icebp
jmp
ds
leave
sbb
mov
lret
adc
push
add
shlb
xchg
and
fwait
outsl
mov
sub
fidivs
flds
sbb
lcall
icebp
dec
or
dec
and
mov
xor
and
outsl
cld
call
shlb
scas
inc
xor
mov
repz
cwtl
and
cltd
mov
xchg
push
cmp
cmc
inc
std
lret
roll
vsqrtpd
or
ret
sub
add
cld
jnp
or
add
cmc
pop
dec
pop
sbb
xor
or
hlt
lahf
and
xorb
loop
test
xorb
shlb
out
aaa
xchg
or
fucomip
mov
or
mov
sbb
inc
sub
and
pushf
mov
mov
mov
test
or
dec
push
pop
in
pusha
popf
xor
sbbl
sub
cmovle
mov
das
xor
sub
lea
outsl
cmp
adc
icebp
push
ja
xor
js
in
jge
rol
and
pusha
loopne
das
rolb
mov
enter
lret
sbb
and
pop
pop
xor
xlat
movsb
mov
lcall
loope
loope
lods
dec
mov
rcll
sbb
add
pop
cli
sarb
leave
leave
outsl
xor
loop
cmp
or
iret
lahf
mov
pop
cwtl
xor
and
ljmp
aad
xlat
fwait
adc
or
cli
out
pop
in
mov
push
sahf
dec
pop
dec
sub
add
test
call
arpl
cmp
or
mov
in
test
mov
repnz
inc
mov
std
roll
xchg
dec
orl
inc
call
outsl
inc
test
mov
icebp
jge
inc
pop
cltd
scas
pop
js
cmp
std
cwtl
or
xor
shrb
shll
xchg
cmp
lds
xor
sub
stc
xchg
decb
sub
icebp
ljmp
pop
orb
cmp
inc
xchg
dec
xor
jge
jle
nop
push
sub
data16
push
lds
imul
and
mov
inc
arpl
mov
push
iret
rcrb
cwtl
int
mov
xor
lds
imul
mov
inc
rcrb
mov
push
sbb
scas
rclb
cmp
les
xor
cmpsl
fwait
jns
add
jge
mov
or
fsubs
lret
shl
jae
test
xchg
mov
jns
in
pop
ja
mov
dec
push
clc
xor
cmp
sbb
imul
test
sbb
cmpl
ss
addr16
add
stos
jle
xor
in
jns
sub
add
frstor
jl
push
or
shl
adc
push
into
sbb
push
xchg
hlt
daa
mov
icebp
cmc
or
int3
mov
fdivr
and
aaa
roll
enter
pushf
icebp
inc
fildl
push
popa
fs
push
or
mov
add
and
add
inc
pop
jge
into
daa
cs
dec
roll
push
pop
pop
cmp
pushf
push
loopne
sbb
outsb
xor
stos
das
jp
inc
sub
cmpsl
cli
or
inc
mov
mov
enter
add
out
ds
pop
lea
daa
jno
pop
mov
jp
mov
inc
add
sti
and
pop
nop
cmpl
test
sub
fwait
repnz
push
sub
xor
push
sub
inc
orb
in
and
push
adc
push
jmp
cmp
cmpsb
jp
daa
adc
sub
and
sub
out
outsb
sti
xchg
imul
add
test
nop
les
mov
cltd
xlat
mov
mov
pop
add
cld
lock
loopne
xchg
leave
insb
mov
stos
xchg
push
add
int3
mov
xchg
sbb
add
sub
push
shll
and
aad
inc
mov
es
int
pop
or
and
add
mov
sti
inc
pop
dec
mov
jno
adc
cmp
xor
inc
sub
xor
cmp
stos
xorl
jmp
ja
mov
insl
mov
ljmp
inc
orl
lcall
in
pop
push
dec
or
scas
cmc
iret
jne
mov
arpl
adc
mov
addr16
pop
cmp
lods
adc
push
pop
add
pushf
jns
fwait
hlt
xor
nop
mov
dec
je
subb
jecxz
mov
xor
jmp
fbld
pop
call
outsb
pop
lock
cmp
cmp
push
push
addr16
nop
mov
mov
test
dec
cmp
jmp
mov
sbb
xlat
adc
mov
push
sub
pop
into
push
lods
xchg
xlat
mov
aas
mov
cltd
mov
xor
mov
xchg
repz
pop
push
outsl
or
pop
pop
sbb
mov
jle
lahf
cmp
xor
mov
out
xor
sahf
mov
das
adc
test
lahf
pop
cmp
and
xchg
xor
iret
pop
cmp
inc
popf
xchg
lock
dec
cli
loop
xchg
and
jmp
jne
or
cmp
inc
sarl
lods
mov
insl
imul
push
pop
int3
arpl
mov
mov
jb
mov
ljmp
inc
dec
mov
xorb
ljmp
xchg
rcr
push
nop
push
lea
cltd
cwtl
xor
in
sbb
mov
in
push
fadd
test
ja
stos
adc
mov
fdivl
jmp
dec
mov
push
xorps
jo
mov
mov
das
xor
sahf
inc
in
inc
pushf
nop
add
or
xor
push
jo
inc
cmc
in
jmp
and
and
sub
sub
mov
jo
std
out
mov
pop
loope
dec
jge
stc
aaa
adc
loope
lock
loopne
cmpsb
adc
movd
dec
rcll
push
jmp
push
fs
cwtl
fwait
or
nop
shrl
and
imul
xor
mov
loope
lret
pushf
mov
and
rcrb
leave
sbb
stos
mov
subl
rorb
movsb
pop
xor
jp
push
mov
push
jb
cld
pop
cmp
mov
test
fisubs
popa
push
xchg
pop
push
loope
pop
push
inc
mov
mov
lds
sub
pusha
addr16
hlt
xlat
ret
mov
sbb
jl
scas
or
fcomp
mov
dec
push
pop
jge
nop
into
and
xchg
mov
rol
jp
jne
lea
int3
cld
sub
movsb
loop
inc
cmpsl
cmp
add
inc
xchg
mov
rcll
cmpsb
jp
rorb
jbe
mov
movsb
mov
push
int
pop
repz
and
and
mov
inc
in
xchg
shlb
cmp
lret
jecxz
sub
pop
int3
movhps
dec
mov
xchg
lret
inc
std
or
clc
ret
pop
imul
movsb
push
movsb
pop
js
insl
add
test
repnz
xor
push
mov
das
imul
in
jp
sbb
jo
fwait
jns
add
or
lock
sbb
xchg
out
lods
lods
call
sub
dec
insl
sub
inc
xchg
xchg
push
punpckhwd
movb
push
cmp
rcrl
rol
adc
push
inc
popa
push
in
mov
es
faddl
clc
mov
xchg
ret
setae
mov
jae
pop
es
in
ja
xchg
dec
jg
shlb
cmp
loopne
stos
fcomi
xor
les
cltd
icebp
mov
xor
sti
adc
inc
lret
clc
pusha
rol
lahf
cmp
cmp
adc
pop
sbb
daa
xor
jge
insb
int
test
and
cmp
adcl
or
outsl
stos
mov
push
pop
ljmp
dec
xor
sub
inc
pop
daa
shr
stc
and
sbb
jle
fbld
aad
outsl
pop
nop
push
xchg
push
jno
push
iret
icebp
lods
cwtl
or
pop
add
out
jmp
jle
pop
movsb
loope
pop
mov
mov
mov
dec
jg
cmpsl
lods
lret
movsl
or
imul
push
aad
jnp
mov
pushaw
int3
push
pop
sbb
sbb
sbb
cs
or
and
and
ret
add
sarl
adc
dec
pop
sbb
mov
mov
lret
cmp
loopne
or
adc
lahf
jle
jne
pusha
pop
mov
outsl
jmp
push
fistl
loop
int
push
add
xlat
in
jmp
not
mov
mov
sti
loope
inc
imul
orl
xlat
cld
pop
jecxz
cltd
add
and
cmp
dec
push
add
cmpsb
mov
pop
stos
xchg
fsubs
adc
mov
inc
mov
mov
lods
fiadds
mov
in
imul
pop
test
fwait
mov
dec
in
scas
lret
pop
shlb
and
clc
add
cmp
pop
or
in
aam
lds
sub
inc
push
mov
xor
mov
jae
mov
xchg
push
lock
gs
popf
adc
mov
sbbl
pop
xorb
in
adc
or
mov
jo
sbb
xchg
mov
popa
sbb
call
sbb
push
dec
mov
pop
jp
loope
xor
adc
pop
js
pop
pop
lahf
das
bound
popa
xlat
and
and
push
add
js
xor
push
sbb
jmp
jl
popf
sbb
gs
fmull
mov
andb
into
sub
loopne
sub
lea
or
fildl
pop
fs
jns
out
or
stos
stc
xchg
add
sbb
push
icebp
ljmp
or
jo
xchg
inc
jmp
roll
cmp
fs
ret
xchg
sub
jle
filds
out
ret
aam
out
inc
cltd
add
hlt
pop
push
stc
add
popl
test
mov
pop
adc
pop
or
push
sbb
xchg
lahf
jp
mov
scas
rcll
jmp
test
pop
stc
outsl
std
pushf
cmp
das
nop
sub
loopne,pt
ja
cmp
bound
xor
and
movl
jecxz
hlt
sbb
xor
mov
imul
scas
xchg
shl
sbb
mov
and
mov
fdivl
dec
jnp
adc
icebp
int
jne
int
push
and
xchg
mov
dec
lods
dec
pop
cld
jmp
aad
add
and
stos
rorl
lahf
jp
sahf
lods
insb
xor
cmp
pop
sbb
out
mov
mov
xchg
add
js
jae
scas
gs
cli
loope
mov
int
les
adc
jae
lret
mov
shl
loop
mov
fwait
jmp
test
mov
shll
mov
mov
cwtl
or
int
incb
adc
dec
out
iret
in
cli
xchg
mov
ret
add
loopne
ficoml
sub
push
lock
bound
cli
or
cmc
mov
mov
iret
add
lds
cwtl
loopne,pt
mov
rolb
jle
lods
sub
add
fiaddl
jnp
cwtl
mov
fadds
or
push
cmpb
mov
rcr
cmc
cld
repz
daa
jbe
sub
shrl
scas
dec
mov
enter
outsl
test
rolb
push
je
out
lods
jle
add
adc
stc
arpl
sbb
jecxz
cs
mov
daa
dec
lock
leave
cmpsb
dec
and
xor
xchg
jle
in
popa
cmp
push
cmc
les
in
sarl
orb
pop
mov
xchg
sbb
adc
je
pop
mov
jmp
gs
std
add
or
xlat
add
sbb
imul
or
pop
add
data16
or
pop
enter
sar
mov
add
js
sar
dec
or
out
xlat
aas
mov
cli
dec
push
arpl
subb
adc
test
mov
and
lock
out
sub
cmpsb
imul
call
in
dec
add
xor
in
mov
jne
cmp
sbb
mov
jg
pop
frstor
sarb
jae
jns
or
inc
and
jmp
push
insl
notl
jecxz
movsl
adc
lret
gs
test
mov
shlb
shl
mov
shl
jecxz
popf
mov
add
mov
push
cmpsb
pusha
call
repnz
addr16
lea
bound
lods
or
daa
sbb
ja
xor
adc
leave
cmp
mov
call
inc
push
or
fldt
jp
in
or
pop
adc
add
jmp
lret
jbe
add
mov
or
ja
pop
sbb
stc
pop
jge
pop
les
mov
les
xor
xor
dec
arpl
xchg
mov
repz
data16
jg
xor
out
push
xorl
push
push
pop
or
and
mov
cmp
popa
js
fldenv
sub
sub
push
arpl
test
push
mov
scas
clc
out
ror
mov
pop
sbb
rcrl
test
xchg
mov
add
test
or
add
shl
mov
and
idivl
jp
pop
xor
aad
add
and
iret
fadds
lds
fbstp
cmc
in
filds
xor
ljmp
mov
sub
lahf
mov
in
test
or
push
movsl
lods
aaa
pop
jmp
mov
test
jecxz
mov
into
jmp
inc
cli
ljmp
lcall
pop
es
cld
or
inc
mov
xor
mov
flds
xor
ljmp
jbe
xor
pop
mov
push
add
fbstp
loopne
out
push
xchg
loopne
jmp
jle
loopne
test
adc
fsubl
aam
fs
cmp
mov
std
mov
jl
sub
out
nop
pop
adc
and
pop
stos
mov
jle
pop
and
mov
inc
jno
fsts
fiadds
cmp
outsl
int3
std
sub
pop
xor
adc
ljmp
jne
cld
mov
es
in
pop
mov
sub
das
sub
ss
pop
mov
mov
inc
xor
cmpb
lea
cmc
adc
mov
mov
pop
jp,pt
lock
xor
adc
or
aaa
out
sub
add
sub
adc
adcl
jl
mov
dec
and
xlat
xchg
jns
and
dec
and
call
jp
lret
add
adc
mov
shlb
icebp
out
and
and
jno
dec
jo
aas
and
push
dec
dec
jne
daa
jnp
dec
sarl
cmp
pop
test
test
stos
fucom
mov
xor
push
pop
fldl
sbb
idivb
cmpsb
aad
sbb
cld
les
or
jae
xor
pop
imul
testb
test
push
jns
frstor
movsb
dec
lds
dec
pop
add
mov
jp
add
push
add
adc
jecxz
inc
pop
jns
test
and
or
sbb
stc
pop
stc
jle
xlat
jp
cs
adc
jbe
pop
pusha
add
xor
jnp
pop
jg
inc
in
adc
adc
push
aad
shlb
pop
pop
rorb
push
fwait
insb
add
call
lret
pextrw
daa
jle
lods
pop
xchg
push
sub
call
push
call
out
push
jbe
cmp
jle
lock
and
sbb
test
adc
mov
jg
dec
or
ja
lret
cld
mov
add
fiadds
adc
cmp
pop
mov
mov
and
jae
rolb
pop
xchg
cmp
rcll
pop
in
arpl
xchg
subl
pusha
sahf
xchg
xchg
pop
jp
into
into
mov
dec
loope
cwtl
xlat
adc
and
call
mov
xor
repnz
stc
pusha
pusha
stos
stos
aam
cmp
rol
cmp
arpl
and
cmc
imul
xor
mov
fwait
jmp
cwtl
sbbl
xor
shrb
inc
cmp
pop
or
cvtps2pd
cs
inc
fwait
cmovp
and
sbb
adc
add
je
jle
call
imul
cltd
popa
cmp
jp
xor
lods
and
fiadds
lcall
inc
mov
iret
mov
sbb
mov
ret
or
into
mov
stc
mov
push
adc
inc
sbb
out
add
enter
orb
aas
jmp
cmp
fmuls
lret
and
pop
push
jp
aas
icebp
icebp
mov
je
adc
sub
ret
lods
fs
out
ljmp
dec
fisttpll
daa
in
and
mov
add
stos
jnp
cmpsb
or
push
lds
xor
inc
sub
cmp
leave
mov
ljmp
pop
in
subb
pop
scas
ds
push
fdivs
repz
call
or
pop
mov
fisttpl
fwait
cli
add
lcall
hlt
scas
cmp
xlat
mov
add
clc
inc
iret
lcall
xchg
jge
xchg
int
roll
loope
adc
push
add
stos
psubb
aas
lock
call
movsl
addb
fwait
pop
mov
xorl
xchg
jecxz
mov
enter
add
out
loopne
pop
cmp
sub
mov
loope
add
cmp
mov
ret
mov
mov
xchg
and
dec
inc
mov
hlt
popa
push
mov
push
scas
push
jmp
test
enter
scas
xor
mov
mov
xchg
shl
push
mov
cwtl
popa
sub
sbb
sti
add
in
fcmove
ds
adc
jle
aad
jp
dec
fldl
mov
and
les
call
push
adc
lret
mov
mov
nop
push
stos
xlat
test
mov
mov
fisubrl
add
int3
loopne
shlb
pop
ja
les
dec
rorl
jmp
push
pop
test
stos
por
int3
out
fnstcw
inc
jno
leave
mov
push
inc
mov
mov
and
mulb
shrb
inc
mov
imul
ror
and
jns
in
cmp
bound
sub
dec
pop
inc
popl
fwait
cmpsb
mov
jmp
mov
add
cmp
insb
es
test
xlat
pop
imul
and
xor
or
dec
xlat
push
call
ja
push
jecxz
lcall
jmp
sub
pop
lcall
mov
jg
add
std
arpl
xchg
pusha
jmpw
add
jno
out
les
pop
fcompl
sub
xchg
xor
stos
lret
jne
sub
inc
add
daa
adc
add
imul
hlt
sbb
cmp
addr16
fstl
mov
das
cmp
rol
sti
das
loope
ljmp
std
jo
dec
mov
mov
out
adc
add
popa
dec
pop
xlat
inc
in
aad
xor
mov
pop
rol
scas
outsb
sbb
lea
fwait
mov
dec
pop
mov
inc
jno
and
cmp
sub
and
push
jg
adc
les
fimull
jmp
jo
xchg
pop
sbbl
scas
add
cwtl
cld
pop
jg
jnp
popa
mov
loope
cmp
shrl
add
xchg
rclb
fsubrs
ds
adc
push
xor
sahf
fstpt
sbb
dec
enter
sbb
ja
aas
movsb
mov
cmpb
mull
jne
cmpb
data16
lcall
sbb
xchg
push
imul
orl
js
cmp
add
jno
repnz
imul
sbb
mov
jno
out
insb
mov
cmp
jecxz
lcall
jp
shrl
movsb
int3
xor
call
inc
xor
scas
vaddsd
cmp
mov
push
jb,pt
mov
dec
das
jns
xor
in
aam
push
or
clc
cmp
out
xchg
fbld
lcall
jg
jg
in
push
jle
roll
jns
lret
mov
and
imul
mov
rcrb
ret
test
mov
loop
xchg
cmp
mov
pop
mov
mov
stos
in
pop
and
shlb
loope
fnsave
dec
lock
inc
aaa
pushf
jne
repnz
xchg
sbb
xchg
or
das
lds
pop
movsl
pop
xchg
fs
adc
das
jno
push
mov
scas
adc
pop
jecxz
loope
lea
push
out
and
add
repz
and
push
sub
scas
push
test
sbb
mov
cltd
je
rolb
xchg
push
or
dec
xor
test
xor
out
jp
jns
xor
shl
sbb
imul
in
or
pop
cmp
pushl
sar
rolb
mov
or
inc
js
inc
movsl
mov
jp
add
imull
mov
js
sbb
mov
sbb
lods
outsb
inc
cmp
cmp
inc
lods
sub
sbb
popf
loope
movsl
movsb
jl
jns
ret
xchg
dec
scas
sbb
mov
adc
loopne
or
and
push
pop
cmp
adc
add
arpl
aam
test
cmp
inc
out
fwait
mov
xor
push
int
cli
add
popf
icebp
fs
call
movsl
imul
mov
jp
sarl
test
insb
and
aaa
mov
nop
xchg
sbb
enter
xchg
sbb
addr16
or
outsl
pop
repz
adc
and
cmpsl
pop
mov
jge
pusha
cmpsl
out
mov
sbb
xor
cmp
ret
and
push
test
pop
dec
pop
insl
xchg
into
in
fdecstp
pop
pop
jle
fimull
pop
arpl
lea
xor
popa
stos
xlat
cmp
mov
mov
cltd
mov
cltd
fwait
jae
cmp
ret
testb
xor
sbb
mov
in
sti
mov
jecxz
les
push
popf
mov
jne
jnp,pt
les
inc
jae
movsb
mov
arpl
hlt
or
shll
dec
cli
ret
xor
lock
mov
add
mov
or
cld
fst
pop
mov
or
pop
push
leave
cmpsl
aas
lea
xchg
push
mov
cld
loop
push
xor
fadds
pop
xor
mov
daa
insb
adc
sahf
cli
cmp
adc
jne
add
aam
lret
pop
fimull
sti
inc
xlat
js
mov
push
jbe
push
dec
je
rclb
mov
in
fstpt
fistps
jp
pop
push
push
ficompl
sbb
fdivp
and
jnp
xchg
pop
adc
or
or
cmp
inc
inc
rcll
mov
std
shlb
cltd
cmc
in
sub
and
adc
push
mov
mov
dec
pop
jo
data16
sahf
mov
pop
popa
mov
ret
les
ret
sbb
cwtl
add
push
sub
roll
sbb
adc
lock
pop
rcr
and
sar
inc
jo
mov
mov
dec
fistl
in
sbb
das
pop
imul
test
push
mov
rorb
btrl
add
lahf
je
es
sub
ds
push
arpl
js
or
cmp
mov
pop
test
insl
push
jecxz
or
jecxz
cmpb
rcl
mov
jg
fs
test
jo
or
add
push
mov
fwait
movsl
lcall
adc
loope
daa
sahf
iret
jns
neg
loopne
cmc
inc
pop
das
push
lret
pushf
sbbl
cmp
sbb
lahf
add
ja
push
add
daa
arpl
inc
or
mov
adc
fbstp
add
jno
cli
cmc
nop
dec
cmp
bound
scas
mov
pop
adc
mov
push
sub
shll
and
cmp
dec
out
outsb
pop
bound
mov
cmp
orl
jbe
push
in
cmc
jecxz
aam
mov
data16
add
xor
jo
adc
ret
loope
es
or
inc
add
mov
lock
test
fxch
or
sub
adc
pop
loope
inc
sub
pop
sbb
push
fstpl
mov
mov
sahf
scas
fbld
inc
in
jmp
inc
push
xor
cltd
xor
mov
ret
popf
cli
icebp
iret
xor
enter
mov
xlat
and
pop
outsl
and
jecxz
pusha
mov
enter
js
mov
jbe
adc
fwait
in
ret
dec
rcll
loopne
shlb
nop
xlat
mov
add
xchg
test
xor
ret
sbb
xor
xlat
pop
and
inc
enter
dec
fildll
lahf
or
push
lea
fwait
xor
loop
aaa
jne
add
sub
xor
mov
imul
inc
sbb
hlt
lods
xor
lahf
ss
sub
arpl
dec
fisttpll
aas
jne
jge
fdivr
adc
into
cmp
mov
cmp
out
ret
cmc
les
jmp
cmp
cmp
shlb
ret
cmp
iret
call
mov
lret
fnstenv
mov
jmp
dec
leave
jne
push
aam
xchg
fcompl
loope
mov
dec
aad
or
cs
and
in
orl
xor
shlb
mov
outsl
movsb
pop
stos
lods
xlat
jmp
adc
popl
dec
jnp
fdivl
xchg
mov
cwtl
std
or
pop
imul
inc
ja
mov
mov
loopne
pop
mov
call
stos
cmp
xchg
repnz
xchg
inc
in
mov
xor
lds
push
xorl
test
sbb
and
inc
push
pop
loopne
mov
ret
mov
rclb
mov
nop
cmp
pusha
inc
mov
jp
in
or
aam
leave
add
stc
or
sub
icebp
or
add
dec
and
in
jnp
xor
pushl
or
rcll
pop
out
jne
and
inc
push
addr16
outsb
pushf
cmp
fwait
adc
cmp
dec
jnp
mov
das
mov
lcall
cmp
push
ret
mov
jg
xchg
pop
pop
xchg
aad
inc
sbb
and
lds
or
rorb
std
ds
adc
frstpm(287
xchg
pop
aam
sbb
sar
imul
hlt
shufps
jo
aam
cld
sub
xchg
dec
aad
push
imul
insl
call
jae
and
cmpsl
jno
inc
pop
cmp
inc
fwait
pop
and
icebp
out
pop
sbb
dec
sub
jle
cmp
cmp
movsl
pop
cmp
dec
mov
inc
mov
fwait
pop
es
loopne
and
pop
stos
pop
in
insb
pop
mov
xchg
fwait
mov
call
dec
xchg
xorl
add
and
pop
lods
jno
hlt
cmp
adc
jnp
adc
jl
push
repz
sbb
imul
lock
ret
fdivl
and
xchg
std
push
sbb
stc
xlat
push
jbe
and
lods
jl
mov
xor
xchg
or
les
dec
xor
popf
jl
or
or
std
dec
aaa
sahf
mov
test
popa
add
or
movsl
mov
stc
mov
or
fisubl
jecxz
addr16
idiv
and
es
je
adc
cmp
mov
popa
jg
iret
lods
test
rol
imul
push
icebp
pusha
dec
je
test
es
jge
jmp
scas
sub
pop
pinsrw
and
mov
push
dec
or
pop
lods
sbb
mov
mov
xchg
lods
mov
sbb
push
loope
call
mov
add
rclb
lcall
jmp
mov
inc
stc
mov
ljmp
mov
and
or
inc
or
cmp
mov
pop
pop
hlt
jno
and
faddl
and
cmp
pop
mov
sbb
sbb
out
dec
clc
inc
xchg
push
imul
mov
hlt
mov
mov
adc
and
xor
mov
rol
or
jbe
mov
and
outsb
loope
rclb
aad
xchg
sbb
stos
and
push
fs
iret
jp
lock
sub
sub
add
je
fnstsw
xchg
adc
lods
sub
and
add
mov
mov
test
xchg
cmp
adc
mov
call
xchg
sbb
mov
adc
mov
jno
mov
pushf
pop
cmp
sbb
jp
movsb
mov
xlat
xchg
add
femms
mov
push
movsb
or
xchg
in
push
pop
or
push
mov
lock
loope
adc
push
add
clc
and
lock
loope
pusha
ljmp
cmp
dec
sbb
inc
aaa
jg
mov
out
or
adc
xlat
jg
stos
push
int
add
dec
inc
dec
sbbb
or
sarb
add
mov
add
and
pop
aaa
cld
test
sbb
jecxz
aaa
cmp
jp
and
mov
xlat
rol
push
xor
cmp
cmp
imul
pusha
add
or
hlt
pushf
int3
jo
mov
ja
mov
adc
jb
enter
int
lret
dec
movntps
imul
lods
adc
xchg
dec
sub
scas
cmp
mov
sbb
jge
xchg
mov
lds
push
cmpsb
xor
sub
pop
inc
mov
addb
lods
pop
popa
inc
push
in
scas
add
int
jno
scas
push
sbb
xor
jmp
and
sbb
xchg
clc
movsl
jbe
jge
test
std
or
lahf
xchg
sbb
jns
lock
dec
stos
rcrl
nop
push
jnp
cmp
mov
std
les
push
rol
inc
and
addl
ja
push
hlt
xchg
fnstcw
loope
nop
push
icebp
fwait
in
pop
pop
rclb
jbe
stos
dec
mov
xchg
sbb
pop
adc
dec
dec
stos
call
jnp
jge
push
push
jb
mov
popa
xchg
pop
xor
out
adc
cmp
roll
mov
xchg
cmp
bound
pop
call
adc
inc
mov
xor
push
inc
mov
popf
rorb
inc
pop
dec
jne
mov
xchg
add
push
movsl
pop
or
jbe
stos
test
in
fisubs
hlt
leave
leave
shl
inc
jmp
fdivs
jge
loopne
fiadds
cld
sbb
or
icebp
xchg
sbbb
pop
pop
in
or
andl
arpl
adc
mov
jle
std
push
mov
les
push
xor
sub
mov
lret
inc
cmp
stos
pop
sub
push
pop
cli
cmpb
inc
pop
add
sbb
arpl
xlat
cwtl
stc
xor
ret
lock
cmpsb
mov
push
and
xor
in
add
cmp
mov
sbb
mov
push
sub
je
outsb
jne
adc
addr16
loopne
mov
int3
and
cwtl
ljmp
test
sub
insl
sub
push
outsl
mov
cmp
sti
rcrb
scas
adc
dec
sbb
and
mov
pop
int
jp
pop
icebp
or
or
sub
lods
lret
or
arpl
adc
call
or
inc
orl
rcll
jo
addl
lcall
mov
bound
xchg
adc
xchg
mov
les
aaa
test
pop
push
dec
fsubs
pop
xor
aam
mov
sub
mov
int3
dec
inc
pop
jno
std
pop
cltd
jp
loope,pt
mov
xchg
push
sbb
adc
xchg
aad
sbb
adc
sbb
cwtl
punpckldq
insl
leave
pop
ljmp
test
pop
incb
cmpsb
pushl
sbb
fwait
lods
imul
enter
sub
sbb
fistps
add
mov
enter
pop
dec
add
dec
dec
mov
fsts
popa
mov
movsl
stos
push
sub
mov
fmull
mov
jno
jb
push
and
bound
lods
js
and
pop
jnp
adc
ret
xchg
jae
ds
int3
int
mov
pop
stc
popa
and
insb
xor
gs
or
das
push
rclb
push
mov
xchg
or
movsb
jnp
sbb
lcall
pop
pop
add
mov
or
lea
mov
pop
arpl
pop
cli
add
inc
or
mov
mov
stos
sbb
mov
sbb
out
aad
adc
pop
xor
jp
test
mov
push
jge
pop
pop
pop
cltd
push
and
dec
sbb
nop
in
jns
jns
inc
xorl
cltd
dec
imul
pop
inc
sub
xor
addl
call
cmpsl
es
imul
in
push
shll
push
test
or
or
les
repz
inc
pop
push
sbb
hlt
scas
hlt
mov
pop
or
jle
mov
scas
or
sbb
sbb
test
sub
xor
jae
popa
add
pop
push
shll
adc
mov
jnp
cmp
roll
shrb
call
mov
jle
pop
test
xchg
inc
pop
lods
cmp
in
cmp
sub
adc
mov
add
add
or
dec
fwait
xorl
dec
scas
out
jns
ret
push
imul
inc
mov
cmpsl
sarb
shll
add
shll
mov
xchg
mov
or
out
aad
int
mov
insb
les
movsl
popa
mov
jg
pop
xchg
adc
cld
pop
lret
loopne
mov
es
and
ficompl
outsl
and
fsubr
in
mov
xor
add
in
rcrl
cmp
pslld
ror
icebp
or
pushf
scas
leave
test
adc
mov
push
subps
push
or
roll
loop
inc
adcb
test
les
jns
daa
call
cmc
rcrl
movsb
test
data16
and
movsl
fildl
pusha
xchg
add
inc
mov
xor
cmpsb
mov
dec
int3
push
or
add
mov
or
pusha
in
adc
ja
or
sub
cmp
loop
add
mov
lods
jbe
loopne
jmp
pop
std
inc
push
jmp
or
mov
pop
sbb
and
xor
sbb
adcl
sub
std
adc
push
jo
dec
loopne
push
xor
mov
fsubrl
mov
fcoms
and
mov
push
push
and
mov
test
flds
out
push
cltd
or
popf
jno
psadbw
sahf
nop
dec
add
pop
sbb
orl
out
gs
add
js
mov
sub
mov
aaa
repz
adc
xchg
test
fcoms
adc
and
movsl
and
lea
xor
imul
lcall
lods
movsl
shr
testb
sub
sbb
jo
dec
inc
dec
cmp
mov
and
pop
je
inc
aaa
jg
mov
cmp
push
and
insb
or
stos
sbb
fisubl
cli
inc
cmp
sti
pusha
addb
and
add
inc
xchg
pop
leave
mov
call
jecxz
adc
daa
jl
mov
jbe
pop
fsubrs
dec
pop
xlat
je
aas
mov
je
and
cmp
flds
mov
ja
jp
lods
divps
cmpsb
inc
add
aas
mov
dec
xchg
cmp
dec
push
jo
xchg
sbb
dec
fmull
es
pop
loope
imul
sarb
push
jle
jg
adc
sbb
mov
or
pop
fdivl
cmc
out
dec
jecxz
inc
xchg
sub
enter
sbbb
xor
mov
js
lock
repnz
or
popa
sub
pop
add
jmp
xor
nop
and
sbb
add
fisttpll
cmp
sbbl
addl
loopne
sbb
stos
or
adc
mov
push
in
inc
test
add
mov
inc
add
adc
aas
jo
dec
jg,pn
pusha
pop
mov
pop
test
jmp
jle
call
mov
imul
repnz
loop
add
or
jno
xchg
push
xchg
sbb
inc
jnp
adc
cmp
cmpsl
inc
ds
push
leave
adc
mov
or
add
into
pop
add
mov
out
insl
inc
in
and
pop
lcall
sbb
add
repnz
ljmp
lret
cs
sbb
mov
mov
dec
daa
shll
dec
dec
and
adcb
sbb
dec
xor
jle
push
or
push
inc
cltd
mov
inc
pusha
aam
push
bound
scas
push
or
mov
dec
xor
xchg
mov
sub
push
push
dec
cmp
xchg
imull
fcoms
pushl
jmp
scas
dec
lds
int3
inc
cmovno
testl
outsb
mov
jl
sbb
fwait
adc
jg
clc
rcl
clc
das
nop
stos
cmp
mov
xor
shlb
cmp
lcall
imul
and
cmp
mov
dec
add
adc
lock
xchg
push
jo
jge
jbe
andl
cmp
xor
lods
sub
fildll
lcall
add
xchg
and
scas
xor
scas
xchg
imul
pop
arpl
inc
xor
jg
sbb
cmp
out
push
fwait
push
mov
bound
inc
xlat
mov
push
sub
je
dec
jecxz
orl
scas
arpl
mov
xor
sbb
mov
iret
push
cmp
shlb
into
and
jp
or
add
fstps
cs
popf
mov
pop
inc
aas
xchg
xor
xor
cmc
jmp
imul
les
iret
or
xchg
pop
push
jns
out
pop
mov
push
fs
popa
inc
jae
popa
mov
lret
loopne
ja
test
adc
sub
ffreep
push
sbb
push
arpl
xor
inc
mov
outsl
add
shll
lea
jle
stos
jmp
pop
pop
popa
arpl
mov
cmc
xchg
dec
pop
jno
mov
dec
jmp
add
daa
into
icebp
test
clc
xlat
movsl
fcomp
mov
in
gs
ror
sub
jmp
or
popf
ss
imulb
push
fldl2t
xchg
int3
jae
test
data16
xchg
pop
lock
xor
popa
or
out
andl
nop
cmp
xor
fwait
push
sbb
xchg
icebp
and
push
mov
dec
pop
int
pop
jp
aam
outsl
sti
cltd
cmp
testl
stos
aam
scas
inc
lahf
ret
jmp
int
sub
sti
aaa
lret
out
push
fstl
test
xlat
sbb
mov
push
dec
sbb
scas
aad
je
test
jae
das
and
mov
mov
or
aaa
xchg
insb
pop
dec
lods
inc
int3
btc
pop
je
pop
fistps
inc
and
inc
xchg
sbbl
mov
sahf
inc
mov
or
sarl
rorb
mov
fcmovne
clc
jecxz
jp
sub
idivl
cltd
scas
clc
add
arpl
rclb
repnz
clc
ja
pushf
jp
imul
push
jp
movsl
inc
add
out
subl
inc
inc
lcall
mov
out
dec
sahf
sbb
add
aad
lcall
jge
js,pn
and
test
sbb
sub
shlb
dec
sub
push
ret
cltd
sub
out
les
jecxz
or
pop
xchg
ficomps
test
push
jns
push
imul
clc
cmp
push
sub
orl
loop
mov
mov
nop
inc
and
movsl
icebp
lds
push
add
ret
push
jns
shll
test
sub
arpl
xor
mov
cmpsb
inc
fmuls
push
cltd
pop
jb
je
inc
jmp
xchg
ret
jmp
mov
je
cmp
jmp
mov
test
adc
movsl
imulb
nopl
pushf
inc
imul
sbb
push
cmp
jnp
stos
cmpsl
mov
mov
stos
mov
jecxz
jge
sub
loop
push
lcall
repz
pop
imul
fs
jge
aam
sub
jns
or
mov
ret
out
loopne
jnp
inc
mov
cmpsb
inc
loop
xor
jle
in
arpl
mov
add
aam
leave
orb
jle
mov
repnz
mov
rcr
cmp
aas
adc
xchg
push
in
in
in
and
data16
dec
mov
jne
push
push
jo
push
add
inc
push
bts
rcrl
xorl
imul
cmpsl
adcl
and
push
and
xor
or
push
xchg
lods
and
test
mov
aam
pop
sbb
xorb
test
adc
sbb
jge
out
pop
lret
stos
mov
mov
xor
sbb
repnz
mov
ret
rolb
and
xchg
inc
or
jbe
sub
adcl
pop
idivb
jg
and
repnz
js
es
fcomi
lods
shrl
out
cmpsb
push
dec
pop
lahf
add
call
ljmp
sub
push
pop
add
xlat
scas
adc
inc
adc
xor
aad
and
sbb
mov
out
fdivs
loope
sbbl
pop
or
push
loope
in
pop
js
or
or
xor
clc
movsl
aas
inc
sbb
mov
test
repnz
pop
mov
add
sbb
fiaddl
push
inc
arpl
out
movsw
xchg
rcrl
lock
push
mov
jmp
fs
mov
adc
jg
jo
cmpsl
jle
aad
sub
or
jbe
rorl
xlat
inc
cmp
pop
mov
out
jb
push
shrb
dec
xchg
xor
pop
add
sbb
xchg
js
je
loopne
push
dec
jns
sub
dec
mov
cmp
xchg
mov
stos
jnp
aad
lcall
jne
jecxz
cmpsb
or
lahf
xchg
mov
and
js
mov
sarl
dec
add
leave
push
mov
lods
in
adc
jle
daa
add
mov
pop
mov
je
lret
sub
dec
xchg
sub
mov
cwtl
sbb
and
mov
mov
inc
sahf
outsb
cmp
or
test
popa
lret
aad
push
shr
add
mov
dec
mov
rolb
addr16
mov
cmp
lret
aas
pop
mov
test
push
sub
mov
and
add
and
aad
sub
jp
loope
sub
or
push
nop
pop
cmpsb
lock
rol
cmp
shll
sub
push
fmuls
mov
sbbb
ret
xor
cmpsb
mov
ss
adcl
addb
pop
mov
or
push
sbb
jl
cmpsb
pusha
xor
cmp
scas
jbe
cltd
mov
icebp
push
sbb
and
imul
testl
lret
jle
sti
xchg
jno
addb
jle
pop
add
xor
jmp
dec
arpl
sub
jae
nop
sbb
imul
inc
test
add
push
fisttpll
fidivl
mov
dec
mov
xor
imul
xchg
inc
aad
mov
outsl
in
iret
lods
orl
imul
mov
mov
or
xchg
jecxz
push
dec
outsl
jmp
gs
or
scas
xlat
add
xor
mov
in
sbb
in
dec
add
dec
data16
xchg
popf
scas
lahf
sub
test
mov
les
and
xchg
xchg
test
mov
adc
mov
push
sbb
sarl
mov
int3
repz
sub
jb
pop
lock
adc
icebp
pushf
ret
nop
xchg
adc
xchg
inc
lock
je
imul
jecxz
test
nop
clc
mov
mov
or
add
ja
xchg
adc
ret
popa
dec
bound
out
mov
jnp
xor
and
cmpsl
stos
dec
inc
cmpsl
inc
les
mov
and
push
xor
adc
xor
jp
and
push
ds
sbb
loope
jmp
mov
jo
pop
inc
xchg
xchg
mov
mov
dec
push
nop
outsb
or
xchg
loope
pop
mov
adc
rorl
subl
nop
mov
popa
daa
sub
in
inc
das
mov
dec
punpckhbw
push
loop
sub
inc
inc
mov
notb
dec
adc
mov
inc
ret
add
and
adc
pop
mov
jecxz
mov
jo
mov
mov
outsb
popa
vpunpckhbw
and
or
add
repz
pop
sbb
mov
mov
xchg
push
test
sub
mov
outsl
imul
adc
clc
cmp
xchg
rcr
jecxz
ss
mov
lcall
fdivrl
imul
and
xchg
add
or
imul
popf
out
data16
or
or
rolb
loope
mov
clc
popa
sub
jl
hlt
bound
fcoms
sbb
mov
jl
xlat
test
aam
pop
int3
dec
aad
jmp
adc
clc
add
push
sub
or
das
insl
enter
clc
js
lcall
jbe
outsl
xchg
pop
mov
sub
and
sub
and
ss
sbb
or
xchg
jge,pt
mov
add
xchg
mov
xor
clc
jp
movsb
sbb
push
data16
bound
pop
enter
stos
mov
mov
ljmp
fbstp
inc
dec
cltd
mov
jns
fimuls
or
movl
cmp
call
or
jo
mov
mov
mull
pop
lods
jnp
fmull
bound
dec
das
loop,pt
pop
ss
sbb
fimuls
dec
pop
rcll
addr16
outsl
pop
in
mov
aam
cltd
push
dec
xor
mov
int
fwait
icebp
pop
add
imul
pop
es
xchg
xor
jno
and
loope
jne
outsl
adc
cmp
icebp
mov
imul
xor
push
mov
lds
mov
sti
xor
outsl
mov
mov
pop
shll
stos
es
arpl
push
jle
pushf
jb
jns
mov
jmp
jecxz
mov
cmp
cli
aas
pop
scas
push
out
daa
cmp
cmp
and
xchg
mov
cmc
dec
cmp
dec
ljmp
xor
push
add
jg
push
in
mov
cmp
test
add
mov
and
dec
cmpsl
mov
and
inc
js
ret
mov
lock
cmp
das
dec
lds
cmp
cmp
mov
out
fst
pop
add
rorb
ret
fwait
cmp
sbb
mov
xor
pop
std
aas
jno
shlb
or
daa
sbb
dec
dec
fadds
jmp
sbb
hlt
adc
out
test
sbb
popa
push
jne
or
mov
mulb
sub
add
xchg
ret
ret
loop
insb
xor
dec
mov
add
inc
aas
in
cmpsl
add
cmp
addr16
pop
test
stc
addr16
adc
adc
push
cmp
sub
xor
and
mov
fstpt
cmp
jle
sbb
mov
popl
mov
out
jp
push
sbb
add
hlt
ret
mov
cwtl
cli
xchg
push
cmpsl
adc
out
movsb
stos
lret
dec
out
js
xchg
les
shl
cwtl
scas
movsb
popa
inc
jns
pop
rol
leave
sbb
jb
mov
loop
popa
jecxz
mov
cmp
lds
cmp
loope
int3
mov
enter
mov
jge
jp
nop
xchg
jp
jb
cmp
jle
jg
scas
and
add
cmp
ret
test
jle
call
mov
xor
inc
sysret
xchg
pop
sub
cli
mov
jo
test
adc
inc
sbbl
fadd
push
neg
adc
imul
or
cmp
ret
adc
and
mov
cmp
xor
pop
jp
add
push
pop
mulb
paddw
subl
lds
sbb
lret
push
movsb
jecxz
shrb
frstor
mov
int3
in
mov
inc
ss
adc
fdivl
ljmp
addb
testl
movsb
ss
xchg
clc
cmp
repz
jl
inc
jne
mov
test
sbb
mov
fnstsw
xor
or
insl
add
mov
or
pop
pop
dec
dec
add
stos
pop
push
jae
mov
subb
xchg
mov
add
mov
xchg
cwtl
icebp
enter
cmp
add
push
clc
or
and
sbb
cmp
xchg
inc
add
cmp
lea
ret
scas
push
das
pop
sbb
push
pop
pop
movl
iret
insl
or
mov
mov
or
add
sbb
pop
lret
dec
cli
repnz
cs
xor
scas
add
and
jl
xor
ret
inc
inc
jmp
xchg
ja
test
mov
scas
adcb
shll
std
xchg
xchg
xchg
pusha
jbe
cmp
push
insb
sub
inc
push
hlt
call
pop
mov
rcl
or
jp
jl
mov
mov
adc
shlb
test
inc
pop
int3
xor
mov
aaa
movsb
fildll
and
cmp
insl
push
ret
push
mov
pop
lahf
rcll
mulb
stc
adcl
fwait
outsb
pusha
adc
or
test
popf
mov
dec
push
inc
rol
or
sbb
sbbl
outsl
cwtl
push
js
add
inc
lret
inc
mov
ret
and
loope
mov
inc
stos
or
sub
xchg
xor
test
xchg
pop
scas
pop
add
hlt
out
mov
push
add
pop
mov
imul
mov
xor
adc
dec
pop
cmc
inc
rcrl
ds
cltd
jo
inc
jle
mov
adc
insl
xchg
pop
popf
pop
ret
cmpsl
pop
daa
int3
add
nop
adc
sti
inc
into
mov
outsb
xchg
or
mov
fstps
jae
mov
jle,pt
rcl
lock
mov
stos
or
sbb
outsl
mov
fisttpll
jle
rolb
pop
test
push
fnstenv
aaa
adc
sbb
lss
shlb
test
cmp
ljmp
pop
cmp
loop
xor
nop
sahf
loope
aad
inc
test
in
jmp
out
pop
mov
cmp
cmp
call
popa
and
loop
bound
jmp
sar
push
and
cmp
cmpsb
inc
mov
push
adc
push
stc
pop
mov
cmpsb
mov
mov
pop
sub
test
push
pushf
push
int3
fidivrl
and
stc
fdiv
cld
adc
add
test
in
mov
cmp
pop
pop
mov
test
cmpsl
xor
ret
daa
jge
gs
ljmp
mov
dec
jecxz
jns
pop
jge
das
sysexit
xlat
push
jl
adc
mov
cli
dec
int3
cmp
lock
popf
inc
mov
mov
cmp
sbb
xchg
xor
sbbb
adc
lock
xchg
pop
mov
inc
xor
test
jb
loopne
inc
or
cmovle
test
cmp
mov
sbb
lods
movsb
mov
fldl
cmp
adc
jns
cwtl
movsb
push
xor
jb
inc
jns
dec
cwtl
imul
das
and
mov
inc
inc
cmp
sbb
dec
loope
insl
aad
or
je
jmp
dec
je
enter
movsl
mov
loope
and
rcrl
adc
push
jne
ja
jmp
cmp
sbb
push
ret
mov
addb
pusha
stc
ja
adc
and
je
fistl
inc
repnz
mov
scas
out
das
scas
bound
icebp
add
and
outsb
push
xor
fcoms
mov
loop
ja
mov
aam
jl
insl
lods
and
mov
push
inc
sub
xorl
push
int
pop
stos
loope
out
movsl
xchg
dec
jb
fidivl
gs
mov
xor
sarl
inc
jle
mov
loope
rolb
jmp
jmp
cmp
cmc
push
orl
sbb
and
push
lcall
adc
and
cwtl
and
push
rclb
jecxz
mov
push
fisttpl
ds
inc
fstpl
popa
xor
mov
cmpsl
or
pusha
dec
fstps
xor
clc
xor
adc
incb
sbb
shr
dec
add
inc
add
addr16
loopne
pop
jmp
data16
adc
fildll
push
test
negb
jno
mov
fdivrs
mov
testl
dec
shl
pop
add
xor
mov
lock
and
jp
lret
inc
pop
lods
mov
lret
pop
cwtl
sub
in
and
fiadds
mov
pop
loope
fisubs
sub
mov
push
ret
sbb
inc
loopne
es
or
movsb
push
mov
push
mov
jge
mov
mov
xchg
imul
push
das
icebp
lret
stc
jnp
popa
push
jmp
loop
icebp
sub
into
ja
stos
mov
inc
inc
mov
out
cmpsl
jecxz
int3
sub
push
jmp
mov
mov
mov
push
pop
cs
dec
ret
push
mov
lcall
aad
inc
ret
or
and
mov
lods
jo
add
push
mov
pop
push
and
dec
hlt
xchg
es
sub
imul
adc
mov
xor
pop
fimull
leave
int3
sbb
popa
mov
add
sub
jo
push
sub
stos
sub
dec
inc
stc
pop
inc
btrl
and
jnp
xchg
leave
mov
jle
rcrl
or
popf
movsb
push
sbb
rol
addr16
add
clc
movl
or
mov
daa
pop
and
sub
push
cltd
jne
clc
je
cmc
iret
pop
dec
insl
inc
push
fisubrl
pop
sbb
inc
lret
lahf
in
shr
vmovups
jp
stos
inc
hlt
xchg
mov
sarl
cmpsl
es
lods
fs
push
addl
push
rorl
add
clc
rolb
mov
outsb
mov
inc
addl
lret
mov
dec
lea
rolb
push
dec
hlt
movsl
xor
shlb
pop
psubw
cld
jge
jp
and
bound
jns
inc
dec
dec
sub
sti
sbb
out
imull
je
addb
xchg
cmp
pop
jae
or
fistpll
sub
scas
lock
hlt
shr
insb
lahf
pop
adc
mov
mov
mov
movsb
jo
push
lods
ljmp
sbb
xchg
and
getsec
loopne
cli
mov
and
and
add
sbb
sbb
addl
or
jne
orb
in
pop
lods
js
pop
fistpl
cwtl
jp
pop
cwtl
pop
add
dec
sub
xchg
pushf
push
mov
jo
sub
mov
pop
add
jo
dec
fadd
add
jl
insb
ret
pop
push
inc
jl
push
or
xchg
mov
sub
es
repz
dec
arpl
mov
sbb
push
mov
pop
pop
mov
std
mov
fisubrl
jp
pop
mov
adc
test
and
daa
mov
xor
pop
push
inc
jl
jnp
testb
pop
test
ret
sahf
inc
lods
sbb
xor
mov
popa
xchg
mov
sti
xchg
lds
repnz
push
jecxz
in
lock
das
push
dec
lods
dec
sub
push
ficoml
popa
lcall
add
pusha
xor
andb
cmp
sub
pusha
mov
je
adc
cmp
addr16
cmp
stos
pop
test
imul
adc
sar
popf
pop
nop
xchg
iret
xor
cmp
out
mov
popa
aas
mov
jns
cmp
stos
div
les
add
pop
pop
push
mov
add
shrb
sahf
aad
loop
mov
push
jmp
or
pcmpeqw
or
jecxz
xchg
push
cmc
inc
test
add
mov
jecxz
or
mov
mov
jne
or
mov
dec
mov
pop
lods
add
cmpsb
pop
cli
pop
pop
fwait
or
scas
jnp
xchg
fistl
cltd
es
add
mov
mov
add
jecxz
jno
cwtl
imul
leave
mov
add
mov
pusha
cmpsl
sbb
add
pop
and
insb
mov
inc
popa
aam
xlat
mov
lret
daa
xlat
pop
icebp
lret
push
jb
xor
ret
loopne
or
push
inc
jecxz
xor
ret
pop
insl
add
rclb
xchg
clc
pop
ret
pop
js
mov
cmc
inc
jl
sbb
int
mov
xchg
inc
cvtps2pd
testl
jo
xor
fmull
and
push
adc
js
jecxz
inc
in
inc
cs
or
xchg
jmp
mov
xor
lock
add
clc
rolb
in
out
les
xchg
daa
rolb
fwait
mov
int
mov
loope
jbe
stos
mov
test
lahf
dec
adc
push
xchg
adc
pop
pop
inc
sbb
jae
mov
jbe
insl
pushf
add
fistl
rclb
pop
aas
fidivrl
fdivl
xchg
adc
sbbl
pop
cld
aad
sbb
stc
pushf
inc
mov
and
or
test
lock
sub
fcoms
fwait
lret
jne
dec
add
add
es
adc
ja
notb
addr16
pop
xorl
sbb
dec
dec
orl
loopne
mov
out
and
stos
xchg
std
jecxz
mov
leave
sbb
cmpsl
mov
pusha
nop
push
xor
fmuls
loope
cmp
dec
mov
inc
cmp
push
mov
jge
inc
inc
stos
pop
clc
int
sub
pushl
flds
dec
pop
mov
xchg
mov
sub
lock
inc
dec
or
jg
cmp
xchg
sbb
bound
insb
pusha
pop
and
dec
xlat
orl
dec
dec
sub
jle
push
arpl
pop
mov
ja
push
loopne
mov
sub
imul
dec
jo
flds
jl
inc
jmp
js
sub
stc
out
push
push
out
push
imul
aas
adcl
pusha
sub
and
mov
sbb
cmc
cmp
add
mov
movsb
sbb
add
addl
pop
je
jns
xor
in
add
pop
xchg
popa
repz
imul
fld
std
lahf
cmp
xor
in
add
cmp
repnz
mov
fstl
cwtl
aaa
inc
test
pop
or
dec
jo
inc
and
popa
mov
cmc
xchg
mov
and
push
imul
dec
icebp
mov
mov
leave
xlat
insb
rorb
cmp
jb
sbb
icebp
add
jge
sub
pusha
movsb
das
shr
add
push
cmc
test
sub
mov
shrb
shrl
test
xchg
test
push
mov
mov
mov
inc
push
ret
push
push
outsl
jecxz
roll
mov
xlat
sub
andl
pop
dec
inc
fs
mov
push
xor
and
cmp
movsb
mov
pop
pop
pop
loopne
sbb
dec
jecxz
in
mov
clc
shll
xorb
nop
fwait
test
sbb
clc
fsub
pop
cmc
push
mov
sbb
lock
lahf
testb
mov
lods
jns
mov
inc
mov
cli
add
sahf
inc
adc
inc
xlat
add
mov
jb
hlt
shll
fld
sbb
push
mov
scas
xchg
outsl
jbe
iret
cli
psubq
mov
es
mov
aad
fs
into
xor
pop
hlt
out
lahf
xchg
sub
pop
adc
les
mov
aaa
outsl
bound
cwtl
dec
cmp
das
xor
imul
xchg
xchg
mull
enter
loop
loopne
and
adc
and
jae
cltd
push
enter
pop
pop
gs
loopne
mov
fisubrl
cmpsl
test
addb
push
out
cwtl
mov
dec
test
cli
push
addb
mov
mov
add
int
aad
sbbb
cmp
pop
add
rclb
jo
pop
rcrl
test
imul
jae
xor
test
cli
pop
xchg
mov
jmp
fs
xchg
int
mov
orb
cvtpi2ps
mov
aam
mov
cmpsb
sub
addr16
addl
dec
inc
push
cmpsl
push
out
imul
cs
sbb
out
lea
mov
test
pusha
dec
pushf
inc
add
add
and
movsb
ja
jge
lret
scas
add
rcl
mov
inc
adc
xchg
sub
jno
inc
pop
loope
addr16
xor
pmulhuw
lret
aas
pop
popl
cmpsl
aam
inc
sub
inc
in
xchg
xchg
jp
lret
mov
std
add
sbb
and
das
xor
std
lahf
sub
sbb
inc
out
out
and
mov
push
lret
int
mov
add
stc
add
call
xor
and
push
inc
cmp
sbb
jmp
xchg
insb
dec
jge
pop
mov
mov
ret
jmp
pop
mov
and
push
push
imul
lock
inc
cwtl
and
sbb
push
push
ljmp
adc
movsb
mov
jno
jl
int
or
in
add
or
roll
test
test
addl
cld
notb
cld
out
ss
push
cld
fidivrl
or
add
lcall
inc
jg
and
addb
scas
cmpsl
pusha
xchg
nop
aaa
dec
pop
jne
and
fnstenv
sbb
mov
loope
mov
ret
in
pop
fildll
xlat
or
addr16
sub
xchg
xor
jno
ljmp
out
jne
cmpsl
das
adc
mov
ds
dec
or
mov
push
stc
gs
dec
test
int3
test
mov
cld
push
iret
push
test
jae
pop
repnz
stos
js
xor
push
icebp
stos
test
repnz
pop
push
enter
rolb
lods
push
and
adc
or
and
cltd
lds
es
pop
loope
sbb
jle
push
dec
imul
mov
pusha
inc
imul
cmpsl
jecxz
push
sbbb
ds
in
movb
repz
xor
sbb
add
cmp
movsl
fstps
aaa
jge
popa
mov
cmc
mov
xlat
in
cmp
add
call
add
inc
popf
sbb
adc
das
cld
lds
ret
adc
pop
jl
xor
daa
scas
inc
pop
mov
push
mov
mov
aaa
sbb
push
pop
inc
loop
xchg
es
jae
lods
mov
imul
mov
push
outsb
jp
mov
or
pop
xchg
or
push
mov
mov
add
in
test
pop
adc
aaa
jo
shlb
jne
dec
jnp
push
mov
dec
loop
cmp
das
xor
outsl
jne
shrl
push
inc
popf
je
add
inc
add
mov
adcl
xor
ret
daa
sbbl
inc
xchg
mov
inc
xor
in
arpl
mov
imul
add
mov
test
or
in
iret
outsl
mov
add
out
pushf
dec
mov
adc
add
mov
cmpb
mov
icebp
mov
add
pop
xor
mov
jge
pusha
adc
je
dec
test
push
push
cltd
and
and
mov
scas
add
adc
dec
xor
lds
aaa
adc
pushf
inc
fstpl
pop
jmp
push
inc
mov
adc
loopne
cmp
shrl
shll
push
movsb
push
mov
add
mov
repz
jge
push
mov
jns
out
and
sbb
adc
fs
sbb
sti
and
push
stc
cli
fwait
outsb
xchg
and
push
ja
pushf
rorb
push
shlb
int3
push
faddl
mov
or
and
jnp
loop
sub
push
xchg
inc
sbb
pop
mov
mov
in
test
test
pop
movsb
push
push
inc
mov
and
sub
ja,pt
sub
pop
cmp
roll
sbb
dec
adc
dec
inc
sbb
pop
mov
pop
aam
in
adcl
popa
xchg
dec
jnp
xchg
in
sbb
std
cs
dec
mov
xor
jo
or
dec
jmp
xadd
mov
lods
inc
arpl
sbb
pop
xchg
psrld
leave
lods
cmp
adc
adc
rclb
fwait
sahf
subl
push
cli
pop
xor
cmpsl
shr
es
add
cmpl
sbb
xor
dec
imul
sbb
in
push
inc
mov
bnd
xchg
cmp
faddl
jbe
xor
hlt
pslld
aas
xchg
cs
aad
nop
sub
loope
cs
aas
inc
gs
sub
mov
retw
test
mov
jne
inc
sti
mov
cltd
jo
fnsave
or
jp
pop
or
xor
cmp
subl
or
pop
inc
or
pop
rcr
jge
sub
adc
loop
lods
fwait
pop
push
jo
sub
call
sbb
daa
push
mov
push
pop
adc
insb
mov
pop
cmp
xchg
mov
mov
cmpsb
mov
aam
shl
js
mov
or
ljmp
into
scas
mov
loope
xor
pop
adc
js
pop
cmpsl
pop
js
ret
das
rol
clc
add
loop
dec
pop
rolb
popf
nop
ja
hlt
sbb
xor
ret
mov
push
xchg
ljmp
sub
dec
xchg
rolb
mov
fbstp
adc
cmc
or
test
int
sti
inc
xor
and
aaa
pop
mov
pop
jnp
jp
inc
or
sub
inc
xor
shlb
aaa
in
add
movsl
push
and
or
das
mov
jle
clc
sarl
ret
fistps
and
scas
fstl
pusha
popa
push
lret
mov
fisttpll
jae
cmp
insb
mov
inc
inc
fisttpll
dec
call
mov
in
sub
rorb
or
fnstenv
add
push
loopne
xchg
pop
cld
je
dec
insb
cli
mov
in
cld
addl
xor
jb
roll
scas
cwtl
mov
and
stc
or
cld
cmp
adc
ss
xchg
mov
lea
rclb
adc
mov
mov
add
mov
pop
and
sahf
mov
push
push
sbbb
mov
sub
shlb
in
mov
add
xor
mov
adc
mov
sbb
cld
test
mov
push
jl
scas
mov
push
mov
ljmp
in
testb
dec
and
mov
or
shll
sbb
test
or
xchg
movsb
in
xchg
icebp
sub
fnstsw
dec
es
adc
mov
mov
sub
outsb
loopne
mov
aam
sub
add
jb
stc
bound
and
mov
mov
cmp
pop
mov
fstpt
out
inc
nop
lahf
adcb
jmp
fdivl
ljmp
mov
mov
add
pop
loopne
mov
cmpsl
or
xchg
dec
in
dec
insl
inc
lea
cmp
call
mov
lods
jnp
sbbb
loope
pop
jo
inc
xchg
inc
cld
jmp
movl
inc
add
jl
xor
rsqrtps
add
adc
jo
test
imul
cli
pusha
and
inc
jb
clc
popa
dec
jne
jns
hlt
jle
fistpll
inc
scas
add
cld
jne
sbb
fistpl
cmc
ret
or
fists
arpl
push
dec
jo
adc
add
add
push
sbb
cld
or
lret
inc
or
adc
jge
das
jp
stos
sarb
sub
insb
call
inc
or
les
call
xorl
push
shlb
sub
mov
pop
pop
and
std
xchg
mov
push
adc
push
icebp
jne
rolb
loop
test
movsb
mov
mov
mov
in
jne,pn
xchg
cmpb
mov
pop
movsl
scas
dec
xor
test
ljmp
ja
jb
xchg
adc
outsl
icebp
mov
popl
lret
and
and
out
xor
push
loope
mov
fsubs
mov
jb
ja
imul
addr16
add
adc
clc
lret
adc
hlt
xor
cli
hlt
inc
jecxz
popa
testl
sub
stos
in
push
popa
cmp
push
movsl
lcall
add
add
xlat
add
sbb
les
xchg
loope
xchg
movsl
mov
xor
and
pop
test
push
movsb
sub
sub
xchg
rcrl
enter
xchg
mov
lds
xchg
sbb
adc
xor
inc
mov
clc
inc
xchg
pop
adc
lock
loop
lcall
dec
xor
xchg
icebp
sub
notl
sub
clc
stos
test
inc
fs
call
clc
in
lret
inc
in
imul
jo
push
mov
movb
cli
push
adc
shl
add
sub
test
adc
shrl
aas
adcl
mov
mov
shll
mov
mov
push
add
rorl
fisubs
xor
or
pop
xorl
dec
sub
dec
out
cmpsb
jbe
shlb
clc
jnp
push
xor
repnz
or
nop
jns
mov
inc
loopne
iret
inc
sub
pop
stos
mov
pop
ja
ret
xlat
xchg
daa
hlt
pop
inc
test
aad
hlt
sub
adc
add
sbb
mov
xchg
ficoms
or
dec
popaw
add
mov
and
sub
xchg
mov
dec
mov
notb
mov
inc
xor
aaa
pushl
sbb
dec
sbb
push
test
ds
pop
xchg
inc
adc
mov
ss
adc
or
clc
shrb
mov
fbstp
mov
xchg
and
lahf
cs
or
scas
fldcw
jb
gs
aad
stos
push
in
jns
enter
jo
adc
lds
jl
loop
push
sahf
mov
and
pop
jl
in
add
adc
jecxz
and
cmp
push
adc
orb
dec
adc
jbe
test
call
inc
dec
hlt
lahf
aam
and
mov
jge
sarb
cmovb
jne
sbb
mov
push
push
and
dec
sub
stos
repnz
das
adc
cmp
sub
inc
xor
adc
sahf
sbb
lock
mov
movsl
cwtl
les
cs
push
in
push
fists
sbb
sub
pop
jbe
cmp
addb
frstor
int
sub
int
inc
mov
popa
xor
data16
das
in
arpl
jl
push
jl
and
add
mov
mov
ud0
xlat
inc
shlb
jl
push
mov
rsm
or
or
jl
pushf
orb
jno
add
adc
cmp
jno
pop
ret
push
es
addl
cwtl
push
into
push
pop
sub
sahf
pop
divb
fildl
sbb
inc
int
clc
test
fs
andl
mov
mov
sub
adc
pop
xor
adc
loop
pusha
mov
push
xchg
fsubs
loopne
pop
aas
jp
les
std
xor
mov
xchg
jb
lods
lahf
ficomps
testl
mov
loopne
test
cmc
pop
dec
mov
fistps
xchg
je
push
inc
xlat
pop
daa
pop
enter
in
orb
fxch
cltd
inc
sbb
sbb
inc
iret
add
mov
ss
in
into
rcr
mov
addb
fstpl
scas
adc
fiaddl
mov
add
aad
inc
int
mov
lock
jbe
adcl
inc
add
lea
rclb
push
mov
add
xor
inc
mov
lds
adc
cs
push
ljmp
mov
push
xor
mov
and
adc
mov
jns
jge
pop
dec
nop
mov
scas
or
je
add
hlt
out
rorb
jle
lcall
jns
mov
lcall
adc
and
imul
fs
loopne
or
inc
int3
dec
pop
add
mov
add
outsl
pop
ret
dec
sub
test
sbb
dec
push
je
cmp
mov
xchg
je
clc
flds
pushf
fs
and
add
dec
sub
test
xor
jno
out
scas
lea
adc
jp
js
pop
cmp
call
inc
das
and
repz
dec
jecxz
ljmp
cli
icebp
add
mov
adc
xchg
ret
rcll
mov
xor
lret
mov
mov
pop
rcl
mov
add
push
repnz
sub
cmp
pop
in
jno
fidivrs
xlat
mov
push
dec
xchg
push
cmpsb
cmp
push
xor
xchg
jg
cmp
xchg
shll
stc
psubsb
bound
mov
lret
mov
sbb
arpl
test
jle
shll
rol
xor
ret
add
leave
xchg
pusha
mov
outsl
loop
pusha
popa
sub
test
sub
leave
jb
mov
stc
inc
pop
cmpsl
popf
cltd
repnz
stos
jb
add
dec
jne
sbb
and
sbb
aam
ret
shlb
test
lret
dec
arpl
xor
aad
sub
cmc
adc
jb
fidivs
ror
pop
pop
xchg
cmp
or
mov
das
or
jno
sub
aad
imulb
int
sbbb
into
mov
lea
push
cmp
push
or
lret
push
xlat
dec
push
cmp
mov
jae
aad
sbb
shl
sub
arpl
xchg
xchg
mov
push
jp
data16
rclb
lcall
dec
call
sub
lds
and
push
sub
ret
push
push
sub
pop
pop
inc
pop
xchg
es
popa
push
clc
mov
test
sub
jg
jp
loope
sub
inc
ja
movsl
sub
xor
mov
dec
xor
add
lcall
cmp
loop
jecxz
repz
xchg
push
jae
push
mov
fsubs
add
jo
test
jae
sarb
orl
clc
or
add
mov
daa
adc
inc
sahf
add
xchg
rep
inc
and
push
fidivs
mov
shlb
sub
or
mov
popf
cmpb
sti
mov
cli
outsb
xor
mov
push
movsl
or
sbb
mov
rcrb
mov
movsb
push
stos
mov
dec
jo
das
je
cmp
nop
dec
cmpb
or
fsubrs
jnp
lahf
pop
ja
loope
sti
dec
lock
filds
ror
push
inc
adc
hlt
jmp
pop
adc
mov
xor
xchg
and
xor
fisttps
iret
clc
pop
scas
cmp
cmp
in
dec
dec
lock
insb
ss
jne
jnp
and
mov
leave
xchg
aas
push
cmpsl
cmp
pop
fwait
mov
sbb
add
xchg
mov
jecxz
ficompl
icebp
les
jge
inc
aaa
mov
icebp
stc
add
into
ds
pusha
push
adc
aaa
into
cmp
push
cmp
mov
mov
pop
clc
cmp
rclb
push
mov
pop
aam
stc
mov
xor
jl
adc
dec
in
rcll
inc
cmpsl
loope
and
negb
call
jno
and
rcrl
pop
dec
pop
push
rolb
fdivs
mov
sbb
jmp
aad
lahf
cmp
mov
fs
fimuls
fs
addr16
cmp
imul
xor
popa
jle
outsl
adc
nop
jmp
sbb
add
xor
iret
jo
xchg
mov
cmp
lret
xchg
mov
cmp
lea
popf
cmp
inc
mov
aas
inc
movsb
push
push
repnz
cmp
mov
jns
fwait
mov
sub
mov
paddsb
inc
test
sub
movsb
add
sub
nop
cmp
stos
dec
stos
xor
rcll
les
call
data16
das
sbb
pop
mov
fwait
push
push
sbb
cli
les
sub
and
inc
testl
xor
jp
rorb
pusha
das
sbb
cmp
xchg
jo
popf
xor
fimull
and
sub
outsl
pop
mov
daa
orb
dec
hlt
aam
dec
jne
cmp
rclb
pop
ljmp
or
movsb
in
push
call
addl
out
sub
loope
arpl
push
push
mov
mov
cld
and
dec
xor
pop
pop
xor
jmp
and
inc
pop
das
ret
sbb
push
jge
xchg
es
in
clc
inc
icebp
adc
in
mov
cli
ret
push
cmc
test
mov
cs
dec
pop
out
or
sahf
sub
loope
add
shl
in
scas
hlt
ror
out
mov
stos
mov
lods
int
cmp
mov
adc
arpl
jno
jecxz
lahf
gs
mov
outsb
popa
xor
xchg
into
mov
mov
pop
and
mov
xchg
and
push
sbb
mov
xor
out
push
pop
mov
ret
push
mov
mov
jg
sbb
mov
xchg
imul
cmp
jnp
xchg
adc
mov
inc
mov
mov
repnz
aam
data16
xchg
call
sbb
mov
divl
push
adc
jecxz
mov
pop
cmpsl
test
or
inc
lock
mov
inc
pop
adc
sub
push
aad
cli
push
mov
ds
push
imul
sbb
or
popa
sub
pop
cmp
mov
lahf
xchg
xchg
inc
push
add
jl
clc
inc
pop
pop
or
jecxz
mov
shl
gs
and
mov
out
loopne
add
adc
aaa
neg
push
mov
mov
pop
bound
cmpsb
push
cwtl
hlt
and
stos
in
imul
sbb
mov
mulb
mov
xchg
aas
ror
cwtl
adc
scas
shrl
scas
mov
jbe
sub
pop
push
movsb
push
cmp
inc
and
add
stos
sbb
decl
add
scas
addb
lea
dec
mov
icebp
adc
sbb
pop
jge
leave
in
push
mov
fnstcw
subl
lea
jnp
push
fwait
or
stc
inc
imul
ljmp
imul
inc
jecxz
push
test
fidivl
xor
cli
mov
xchg
xor
daa
mov
hlt
dec
test
xor
subb
lahf
sub
repnz
cld
sub
sbb
stos
mov
push
cmp
pop
int
cmp
rcll
test
in
je
mov
inc
jge
jo
jge
push
and
loop
rolb
jb
std
add
cmpsb
aaa
int
jecxz
add
filds
xor
je
loopne
leave
and
mov
adc
test
sahf
sub
rcrl
mov
icebp
jns
jnp
lcall
add
sbb
call
addr16
rcl
sbb
or
ss
test
add
push
xchg
aaa
mov
sub
js
and
pop
aaa
and
loope
pop
movl
andb
fstps
lea
xor
dec
xor
in
std
mov
push
xor
cld
aam
mov
test
cmc
test
pop
ret
mov
jp
and
div
testb
push
test
rclb
mov
mov
adcl
inc
jns
into
add
cmp
mov
xchg
xchg
sub
xor
jne
inc
ret
sbb
xor
mov
cmc
mov
out
test
scas
jo
ret
sub
sbb
push
pop
clc
hlt
in
insl
push
paddsw
lahf
es
je
lret
in
rol
loop
cltd
and
xchg
xor
lcall
das
add
cmc
aas
lret
push
fstl
mov
mov
xlat
cmp
scas
daa
pop
outsb
sub
clc
orl
adc
mov
cmc
cmp
test
sbbb
push
mov
or
sbb
mov
fwait
pusha
inc
cmp
lods
pop
or
sub
push
push
xor
or
cwtl
cmp
popa
mov
shlb
add
jns
xor
or
xlat
dec
jp
mov
mov
std
push
loopnew
test
hlt
xorb
sbb
xchg
push
xorb
and
addl
dec
jno
push
vpackuswb
inc
sahf
mov
roll
or
pop
mov
scas
shl
adc
pop
pop
cmp
fbld
xchg
jnp
pop
icebp
cmp
push
pop
stos
mov
xchg
jmp
pop
loopne
pop
mov
push
push
sbb
push
lahf
push
lahf
mov
sbb
aas
xor
icebp
push
push
loop
cwtl
ret
test
jb
iret
out
pop
push
sbb
sbb
les
dec
mov
jo
test
cmp
mov
mov
movsl
movl
in
add
cmp
jp
mov
adc
rclb
fldt
mov
std
hlt
outsl
imul
add
pop
pop
push
das
fisubrl
pop
jecxz
addb
shll
fcoms
stc
leave
and
cmp
shll
cmp
daa
pop
sub
sub
addr16
inc
loopne
bound
icebp
xor
aaa
call
test
jle
aam
inc
pop
cmp
mov
mov
mov
sbb
pop
inc
leave
jns
iret
or
mov
dec
and
xor
testb
jnp
adc
mov
shr
js
imul
cmp
das
shl
jmp
ljmp
mov
les
pop
cmpsl
pop
mov
jno
movsl
clc
lahf
mov
pop
fucompp
sbbl
and
lret
mov
inc
lret
enter
int
xchg
les
lahf
jb
sub
je
sar
adcb
fucomip
test
pop
add
lods
and
push
push
jbe
mov
inc
mov
cmpsb
or
mov
popa
xor
and
hlt
outsb
andb
mov
vmovsldup
insl
sbb
ss
fldt
mov
mov
fmull
push
shll
bound
cmp
cmp
adc
lds
xchg
arpl
dec
cmpsl
cmp
inc
jp,pt
insl
clc
push
sub
mov
mov
inc
cmp
dec
aas
icebp
into
xchg
sbb
inc
scas
imul
push
loope
in
arpl
int3
orb
cmpsb
mov
add
add
push
dec
fsubs
js
and
test
dec
jg
imul
jb
test
pop
mov
xor
and
mov
cmpsb
out
or
clc
or
imul
fsubrl
inc
mov
inc
ja
dec
insl
push
sub
inc
iret
jg
mov
push
loope
and
sub
add
inc
mov
stos
lahf
out
rorl
adc
push
mov
or
lods
mov
insl
test
xchg
fwait
cli
in
mov
lods
mov
push
clc
repz
loope
mov
in
sbb
call
sti
push
dec
cmp
fprem
inc
mov
jb
pop
sub
adc
icebp
inc
pop
imul
or
negl
push
dec
adc
add
psrad
pop
shll
outsb
or
hlt
push
lock
hlt
push
add
mov
add
adc
fnstcw
loope
andb
mov
inc
dec
push
jno
rcr
adc
pusha
gs
push
cmpsl
and
mov
push
call
inc
jp
iret
xchg
cmp
sbb
mov
enter
sub
out
fcomps
xor
or
sub
cmp
add
add
into
mov
addl
cwtl
mov
dec
mov
cwtl
fwait
cld
dec
test
lcall
stos
mov
mov
mov
cmp
lcall
mov
xchg
les
loope
inc
jl
mov
sub
mov
sahf
pop
add
fisttps
cmp
repnz
mov
out
inc
rcrb
xor
push
cli
shlb
ret
mov
jne
lea
jp
loopne
subl
popa
push
inc
loope
pop
call
popf
sub
cmova
test
xchg
das
cmpb
and
rclb
popa
jmp
cltd
mov
add
and
scas
out
mov
in
pop
mov
loop
sbb
lcall
xorb
cmp
push
aaa
sbb
mov
cmpsb
add
lea
stos
js
std
dec
mov
push
xor
add
xchg
inc
imul
push
stos
jmp
inc
outsl
insb
lds
das
or
aas
mov
xor
test
cmp
sub
push
xchg
fwait
test
movsl
shll
test
fcoms
jns
repz
ret
sub
arpl
push
jo
data16
xor
jo
push
mov
dec
fbld
data16
movsb
mov
das
and
clc
out
sbb
mov
cltd
push
es
enter
jae
imul
nop
add
push
imul
dec
mul
das
xchg
or
insb
cltd
and
mov
mov
dec
mov
inc
ds
adc
enter
movsb
xlat
jb
addr16
fbld
inc
xor
inc
aas
hlt
in
dec
cld
mov
mov
out
cmp
push
xor
push
jl
pop
fdiv
mov
xor
jmp
jbe
push
cmp
ds
cmp
pop
loop
inc
push
icebp
adc
pop
sbb
jecxz
popf
mov
push
xchg
push
jae
loop
mov
mov
rcr
notl
clc
dec
mov
stc
cmp
lret
testl
test
hlt
or
pop
cli
mov
lods
hlt
imul
mulb
lcall
push
pop
js
sahf
mov
lret
in
daa
pop
and
cmp
xchg
int3
rolb
jnp
inc
push
arpl
push
dec
push
adc
jne
mov
dec
mov
jne
sahf
je
lret
pop
lds
inc
addl
xchg
jo
inc
jmp
or
sub
add
test
loopne
sub
xor
faddp
stos
jae
push
mov
cmp
fdivr
shlb
push
pop
pop
scas
mov
sbb
cltd
or
pop
mov
mov
add
stc
mov
or
and
fidivrl
outsb
mov
or
push
adc
scas
mov
xorb
test
insb
das
sbb
and
mov
lock
pop
inc
aad
adc
mov
scas
xchg
pop
pop
aam
mov
push
std
inc
mov
xchg
cmp
movsl
mov
mov
xchg
or
shl
and
pop
xor
movsb
pop
mov
pop
dec
pop
jle
loop
and
xor
pop
sbbb
repnz
ja
cld
fcompl
repnz
mov
xchg
test
push
movsl
inc
inc
mov
loope
aaa
jle
fnstenv
dec
sbb
or
cmp
dec
in
ja
sub
mov
pop
inc
and
add
aam
mov
scas
int3
js
pop
repz
mov
mov
jle
cmp
je
imul
inc
lods
dec
icebp
xor
sbbl
or
insl
adc
mov
loop
mov
dec
cmp
sbb
aam
pop
in
dec
add
xchg
stos
mov
and
adc
ja
mov
mov
push
cwtl
ljmp
aas
les
push
mov
icebp
mov
sub
fcoms
pmovmskb
mov
lea
enter
nop
jle
mov
push
mov
pop
ljmp
jbe
repnz
inc
cmp
jae
fsubl
or
jl
aad
push
pop
adc
or
test
mov
outsl
fcomps
jmp
loop
cmp
add
shrl
or
or
mov
adc
push
push
mov
jnp
mov
lahf
loopne
leave
clc
sbb
cmpsb
inc
inc
sbb
push
xor
sub
xchg
push
inc
jmp
daa
cmp
xor
and
ljmp
cmp
scas
sbb
jg
jno
shll
cmp
sub
mov
mov
or
jle
jle
xor
std
mov
adc
xchg
dec
aas
jno
pcmpeqd
add
add
mov
jns
mov
mov
movl
mov
sbb
or
mov
push
scas
push
subb
cmp
or
sahf
je
movsb
cmc
sub
sbb
add
imul
push
es
in
ret
dec
pop
push
pusha
mov
lea
sbb
mov
insl
or
pop
xchg
decb
sub
inc
xchg
cmpsb
in
lds
ret
xor
add
cli
mov
add
out
mov
subl
mov
loope
dec
dec
sub
pop
push
hlt
add
sbb
add
movhps
push
lret
mov
bound
or
pop
jne
subl
add
adc
jns
sbb
pusha
pop
fwait
imul
fldl
xchg
popf
divl
push
mov
ret
dec
mov
and
mov
out
repz
lea
int
stos
xchg
xor
xor
mov
rolb
les
aad
icebp
loope
and
in
outsb
sbb
mov
into
sti
scas
andb
push
sub
scas
enter
or
pop
xlat
cmp
gs
in
in
push
push
das
daa
mov
fstpl
fcomp
jne
push
push
cmp
ret
cld
insl
inc
arpl
mov
fisubs
js
pmulhw
cmp
xchg
cmp
push
sbb
out
cmp
mov
fucom
xor
das
mov
jne
rclb
sbb
jecxz
popa
mov
addl
int3
pop
out
repnz
xchg
repz
or
fiaddl
lock
in
push
or
inc
mov
adc
push
stos
inc
xchg
ret
bound
pop
outsl
mul
xchg
dec
sbb
mov
sbb
fs
and
cmc
inc
test
push
pusha
ljmp
dec
dec
fs
xor
jp
jmp
js
mov
xchg
outsl
lock
fst
xor
mov
mov
je
aam
outsb
daa
sti
sahf
jbe
fisubs
adc
push
lret
sahf
add
pmaxsw
in
push
into
fwait
movsb
pop
or
ftst
hlt
aad
test
imul
fs
test
xchg
frstor
cmp
pop
cmp
or
pop
add
mov
icebp
nopl
sbb
test
push
aad
adcl
test
ds
xchg
adc
xchg
dec
stos
mov
mov
sahf
inc
dec
sbb
mov
pop
divl
cmp
insb
jne
add
sbbl
fcoml
mov
mov
push
packsswb
sbb
mov
stos
mov
jne
lods
or
test
lods
mov
shrl
mov
sar
icebp
mov
sbb
pop
inc
iret
cmp
cld
jbe
inc
jg
mov
sbb
cltd
scas
icebp
cld
xchg
addl
inc
insb
cmc
sbb
sub
test
add
fwait
mov
sub
xchg
or
pop
loop
fsubp
addr16
movsb
mov
stos
mov
aaa
pop
imul
cmc
andb
data16
xor
mov
mov
mov
shll
mov
test
mov
add
lods
out
insb
mov
push
adc
ficompl
or
push
mov
jle
jge
and
pop
sub
cmp
pop
pushf
sbb
iret
rcr
fnstsw
cmpb
cmpsb
ret
aaa
in
push
jo
pop
lods
repz
fwait
enter
mov
push
andl
mov
cmp
jbe
scas
push
nop
out
popa
mov
push
mov
sti
add
movsl
or
std
in
sarb
test
mov
lods
or
pmaddwd
jg
mov
dec
pop
out
jg
sbb
cmpsb
fldcw
outsb
or
add
cmpl
ljmp
pop
cli
mov
addl
pop
js
js
iret
test
pop
scas
movsl
ret
push
add
xchg
jbe
jge
pushf
adc
and
test
jb
inc
iret
or
pop
inc
xlat
add
and
sbb
mov
les
sarl
mov
inc
or
dec
push
mov
mov
rcrb
clc
and
call
pop
pop
stos
mov
rep
cmpsl
sbb
insb
lret
test
or
cmp
cltd
ret
icebp
and
lods
pop
or
cli
loopne
out
sub
add
fidivl
mov
paddw
add
cmp
aam
les
cmp
addr16
movsl
cld
lock
aas
movl
and
movsb
push
jg
roll
shr
test
outsl
scas
imul
orb
addr16
add
or
dec
nop
lock
insl
ficoml
add
dec
insb
ss
inc
pushl
mull
mov
mov
out
aam
ret
and
idivb
push
enter
dec
pop
hlt
sbb
call
dec
jle
mov
movsb
or
cmp
aas
scas
jne
adc
inc
and
in
lds
mov
cmc
xor
mov
jae
aaa
imul
popa
xor
js
xchg
js
movsb
adc
mov
inc
mov
jge
roll
ret
pop
xchg
add
aas
cwtl
xorb
xchg
lcall
mov
mov
xor
je
fs
pop
xchg
adc
scas
push
sub
sbb
add
cwtl
add
inc
jnp
adc
lock
add
nop
cmp
add
cld
addr16
loope
sbb
imul
sti
mov
cli
movsl
push
xchg
test
and
mov
adc
loop
adc
jecxz
xor
pop
xchg
arpl
jle
popf
or
clc
push
fistl
pop
mov
sbb
or
mov
rcrl
mov
and
xor
cwtl
fstps
jp
cmp
xchg
fstpl
int3
scas
sar
jcxz
bound
push
inc
inc
xor
jge
icebp
mov
mov
scas
inc
dec
adc
ds
add
iret
xchg
adc
insb
mov
aaa
repz
adc
xchg
xchg
jae
xchg
cltd
pop
in
daa
pop
ljmp
push
out
ljmp
cmp
push
leave
ret
mov
fimuls
cmpsl
mov
push
inc
movsb
jle
and
arpl
stos
bound
test
sbb
push
mov
stc
push
into
push
and
cmpb
push
and
dec
out
add
ja
test
xchg
cmp
mov
dec
sub
bound
es
mov
mov
xchg
ss
jnp
mov
xchg
mov
test
jmp
dec
adc
push
shrl
subl
lret
pop
jle
sarb
scas
and
or
pop
cmp
and
icebp
mov
inc
out
call
xchg
xor
test
xor
and
out
pop
add
fimuls
push
mov
sub
out
and
outsl
clc
test
and
icebp
push
jnp
popf
cld
pop
jle
mov
and
movsl
jmp
dec
lea
push
movsb
loope
testb
cmpl
and
jae
es
mov
xor
fwait
push
lahf
xor
xlat
js
push
mov
nop
inc
clc
mov
mov
xchg
cwtl
mov
rcll
add
dec
inc
lcall
adc
xor
sbb
sbb
lcall
pop
aas
sbb
xor
jbe
pop
in
nop
nop
xor
mov
scas
jecxz
cmp
scas
fwait
adc
lahf
mov
call
adc
jge
outsb
inc
loopne
pop
push
add
push
push
mov
aad
mov
cmp
stos
aad
loopne
pop
add
imul
adc
xchg
hlt
push
enter
inc
jge
sahf
hlt
add
jbe
add
push
sub
rcll
jno
sub
insl
and
mov
jmp
xor
mov
fdivrs
and
push
push
lods
out
iret
lea
sbb
lods
hlt
repz
mov
cmp
mov
inc
ds
incl
xor
subl
shll
hlt
ljmp
stos
insb
mov
dec
nop
mov
lds
add
cmc
pushf
aad
into
repz
in
or
call
mov
lea
popa
fstps
xor
adc
repz
lcall
mov
push
push
sub
test
or
xlat
dec
addr16
lock
add
xchg
and
in
out
inc
stos
dec
jmp
imul
sbb
movsl
sub
mov
hlt
pusha
gs
dec
popf
xchg
das
loopne
lea
icebp
xchg
daa
ljmp
rcl
inc
js
outsl
mov
in
inc
and
ljmp
cmp
scas
pop
filds
incl
movsl
gs
mov
roll
flds
add
add
inc
cld
mov
mov
imul
xchg
inc
pop
mov
mov
xchg
or
mov
iret
adc
fildl
mov
imul
out
xchg
pop
pusha
movsl
and
shl
loop
das
stos
pusha
add
jne
gs
pusha
adc
or
fwait
or
pcmpeqw
inc
or
in
add
xchg
mov
cmp
jb
push
ss
sbb
test
inc
gs
adcl
cmp
es
sub
popa
xor
sbb
out
adc
sub
scas
adcb
std
cmp
loope
ss
mov
mov
in
mov
arpl
adc
stos
nop
push
out
add
ret
jle
fwait
mov
hlt
adc
or
ss
movb
mov
es
sarb
into
sbb
jae
hlt
mov
push
enter
sub
out
aam
ljmp
das
rcr
lahf
dec
arpl
stos
cli
cmpl
push
mov
mov
adc
xchg
fnstsw
sbb
pushf
mov
hlt
push
pop
xor
in
stos
pop
repnz
rolb
push
xchg
cwtl
jl
sbb
inc
iret
inc
dec
cmp
sbb
cmpsl
in
adc
and
fdivrs
sub
rcll
fildll
aad
inc
mov
cmp
and
movsl
insb
xchg
inc
mov
push
cmp
inc
imul
push
loope
or
ret
rcrl
and
dec
or
and
lods
xor
bound
cmpsb
or
xchg
jl
fnclex
push
test
mov
cmp
sti
das
rcrl
or
jns
dec
push
xor
test
dec
fcmovbe
addb
and
or
mov
gs
xor
xchg
ret
jno
push
mov
sub
jb
pop
loop
jnp
andl
add
stos
push
cwtl
push
clc
adc
inc
jae
ret
mov
aaa
sbb
in
jle
mov
test
lea
outsb
repz
outsb
in
jmp
add
xorb
or
xchg
inc
mov
jno
in
clc
loopne
xchg
and
push
jmp
dec
push
inc
jno
out
subl
and
mov
or
jp
mov
sarb
and
rcrl
mov
fistpl
inc
jb
xchg
or
xor
and
jo
or
les
pop
jecxz
repz
cltd
call
jp
push
and
inc
inc
mov
ficoms
shr
ficomps
mov
lock
sbb
aam
push
ret
push
dec
lds
aas
pop
sbb
pop
icebp
push
mov
inc
xor
adc
add
jns
shll
pop
sub
pop
pop
inc
test
inc
add
loope
mov
orl
out
pop
mov
push
mov
lods
lahf
andl
pusha
cwtl
jnp
lret
test
mov
sub
mov
push
sub
xchg
movsb
inc
xchg
pop
pop
enter
dec
cltd
hlt
pop
mov
inc
dec
cli
das
mov
lcall
inc
ficoms
sub
xchg
out
pushf
ja
pop
testb
loop
add
or
push
push
ret
adc
call
inc
xchg
jo
mov
outsb
jmp
out
or
fbld
xchg
subl
jno
pop
aam
fimuls
test
cld
mov
cmp
test
testb
dec
stos
dec
out
out
nop
scas
dec
ficoms
mov
jge
rcrl
xchg
dec
jo
movsb
enter
inc
aam
mov
aad
shrl
gs
sub
push
push
je
daa
add
mov
push
add
inc
std
push
iret
movsl
push
enter
add
push
add
mov
je
ficompl
pop
sub
icebp
inc
inc
mov
movsb
add
movsb
push
imul
cmpsl
mov
push
mov
test
iret
repz
add
scas
test
loope
adc
push
sub
out
jno
inc
pop
push
adc
jae
sub
outsl
mov
fwait
or
and
cwtl
mov
push
sti
aam
push
out
ss
xchg
sub
fadds
or
push
pop
mov
arpl
aas
jl
sub
mov
sub
jbe
lahf
pop
add
and
in
shlb
xchg
pop
popa
push
fldt
lcall
shl
push
popa
ret
xorl
shr
shrb
or
in
nop
dec
mov
mov
stos
xchg
add
pop
cmp
cld
sub
mov
jge
shll
data16
jl
push
pop
dec
pop
js
je
pop
inc
pop
call
sbb
mov
fcmovnbe
sub
adc
push
xor
xchg
xchg
dec
pop
add
lock
out
push
fidivl
cmp
loop
push
xor
jle
das
lock
dec
inc
mov
cmp
push
cld
shll
pop
popf
jno
out
and
or
dec
pop
loopne
lcall
fisttps
int
cmp
dec
hlt
pop
xlat
outsb
pop
sub
test
sub
jb
ljmp
idivb
ret
loopne
xchg
leave
xor
aaa
and
repnz
pop
xor
xchg
cli
lds
mov
pop
addb
jnp
inc
mov
je
mov
and
aas
cld
aas
push
push
ss
mov
xchg
jp
and
fnstenv
push
stc
push
push
popf
dec
clc
inc
lcall
lret
xor
jns
xchg
jg
lret
adc
pop
shl
cmp
pusha
pop
inc
push
cmp
pop
gs
pop
xchg
or
add
adc
mov
xlat
inc
shlb
inc
jo
data16
ds
cld
pop
cmpsb
add
outsb
movsb
sbb
xchg
loop
mov
xorb
inc
or
xlat
les
jecxz
test
ret
test
mov
cwtl
jp
scas
cmpsb
out
js
pop
test
sbb
bound
out
fistpll
in
pushf
xchg
and
dec
adc
out
mov
jle
imul
sbb
fldenv
xchg
or
and
mov
sbb
icebp
adc
jmp
repnz
sarb
int3
enter
pop
lret
cmp
cmpb
test
inc
dec
ficoms
xchg
jnp
pop
imul
pop
xchg
jge
sub
in
daa
push
shlb
pop
inc
jno
sahf
mov
gs
test
jno
in
adc
push
idiv
or
aam
cmpl
sbb
adc
mov
stc
add
incl
xchg
or
int3
xchg
ss
clc
roll
int
into
pop
mov
adc
clc
rolb
pop
test
data16
stc
adcb
adc
xor
xchg
pop
mov
in
movsl
out
test
int
mov
xchg
jae
push
jg
push
mov
ret
jnp
xor
es
repnz
bound
mov
repz
ret
push
out
lods
lret
les
stos
adc
repz
jno
jl
push
std
xchg
lret
out
js
push
in
ss
push
xor
jp
popf
cmpl
sub
and
scas
int
lcall
mov
push
insl
imul
out
nop
pop
dec
push
jb
arpl
repz
mov
popf
shl
fs
and
mull
ds
adc
lea
xorl
push
cmp
mov
cltd
mov
jo
sbb
lock
sub
push
enter
mov
mov
dec
cltd
sub
sub
adc
mov
popa
pop
fnstsw
or
sbb
jge
in
xor
aas
cwtl
cld
jle
and
sub
sbb
cmpsb
fidivrs
test
loope
pop
sbb
sub
dec
out
add
pop
sti
mov
call
rolb
cmpsb
sahf
pop
sbbb
mov
inc
mov
lods
lret
lret
addr16
test
xlat
sbb
outsb
popa
jne
pop
hlt
es
push
test
dec
mov
sbb
pop
es
fimull
mov
mov
push
fnsave
jo
lods
sbb
push
and
mov
call
aaa
fmull
jns
les
and
sub
cli
jne
mov
xor
adc
jmp
dec
movsl
and
push
dec
sub
jae
fimuls
xchg
insb
xor
rcrl
cwtl
fsub
xchg
mov
and
jmp
push
repz
outsb
inc
inc
out
scas
clc
mov
push
cld
cmpl
xor
hlt
repnz
ret
nop
pop
xchg
stos
mov
mov
pop
dec
and
clc
inc
pop
push
xor
jo
pop
mov
push
ljmp
comiss
je
push
and
lret
lds
xor
dec
mov
dec
mov
cmp
cmp
aad
add
xchg
and
arpl
inc
data16
inc
int3
sbb
das
jmp
pop
xor
loope
jnp
mov
daa
or
pop
push
push
lods
mov
add
add
fwait
or
pop
lret
rol
aad
test
ret
test
icebp
adc
inc
sub
call
jo
sahf
pop
jo
sub
pop
pop
aad
stos
mov
xor
cli
add
popa
insl
into
enter
pop
pop
pop
arpl
dec
push
cmp
inc
add
cmp
add
mov
mov
push
push
inc
iret
rolb
loop
pop
orl
rcrl
jne
add
sub
sbb
sub
iret
int3
icebp
mov
repz
outsb
pop
pushf
test
ror
add
mov
js
data16
or
mov
stos
xchg
shrb
test
xor
mov
mov
lret
arpl
aas
call
xchg
dec
pop
add
add
flds
pop
or
addr16
jo
imul
jns
push
loopne
aas
sahf
sub
sbb
mov
gs
ret
es
loope
aas
sbb
js
sub
jo
test
jo
ja
mov
jns
repnz
outsb
xchg
adc
loope
pop
xor
inc
inc
scas
sub
mov
pop
mov
cmp
and
xchg
xor
fucom
pop
inc
insl
test
inc
sbb
push
cmc
and
mov
outsl
pop
pusha
dec
lahf
into
imull
push
mov
sub
pop
xor
inc
xchg
std
jne
test
or
call
sub
jp
jecxz
out
ror
movsl
int3
xchg
push
jle
ljmp
cs
fstpt
adc
push
pop
adc
js
push
gs
or
in
pushl
not
jp
pop
movl
or
orl
sub
pop
adcl
fisttpll
or
test
xchg
cmp
jno
shr
cmp
in
into
cmp
xchg
stos
pop
jecxz
aaa
cmp
xchg
aaa
ret
sbb
adc
mov
xchg
xchg
adcl
jno
inc
inc
js
jle
sbb
pop
jl,pn
mov
ds
outsl
das
js
popf
in
int3
enter
mov
sbb
xor
ja
sub
or
je
sbb
sbb
inc
jl
stos
sub
inc
inc
push
shlw
das
push
aas
test
add
es
adc
inc
call
sar
push
pop
mov
bound
xchg
push
push
cld
dec
adc
adc
mov
push
roll
cwtl
dec
mov
and
adc
pop
lahf
inc
mov
sub
pop
or
bound
jle
ret
cmp
cltd
xor
test
ljmp
adc
mov
push
test
and
mov
sbb
xor
in
aas
inc
mov
cltd
xor
cmc
call
movsl
mov
push
jo
xchg
testb
add
adc
mov
mov
movsb
int
pop
mov
loope
cwtl
pop
or
arpl
loopne
js
scas
pop
jl
sbb
xor
adc
jl
and
test
lock
je
out
cmc
cld
inc
ljmp
hlt
jnp
pop
fs
std
mov
cmpsl
and
add
xor
or
pop
imul
out
cmp
push
mov
lcall
fadds
pop
in
jae
cmpsb
scas
mov
adc
repnz
je
shrb
jo
lss
mov
sub
imul
pop
bound
call
or
fcmovne
push
add
icebp
jl
or
daa
add
add
or
add
popa
stos
cmp
popa
aad
or
notl
iret
out
je
xor
xchg
and
push
jb
xor
mov
push
pop
ja
cmc
das
mov
loop
xchg
movsl
sbb
lret
push
jl
loopne
push
insb
cmc
rcrb
cmp
call
and
or
loope
pop
push
lea
das
mov
jae
stos
sbb
jmp
cmpsb
dec
lods
sbb
inc
cmpsl
ret
in
pop
cmp
pop
lock
les
dec
pop
loopne
inc
mov
cwtl
std
icebp
push
and
pusha
push
insb
leave
xchg
in
xor
notb
movsl
push
out
xor
cmp
push
or
mov
adc
jne
mov
pop
mov
dec
xor
jae
nop
sbb
fcomp
jmp
mov
jbe
icebp
lds
dec
adc
stc
adc
xorb
lahf
adc
aaa
or
and
in
inc
inc
xlat
shrl
loopne
pop
pop
pusha
push
rclb
jno
lea
or
dec
pop
clc
rclb
mov
stc
or
dec
mov
xchg
nop
or
int
es
hlt
xor
in
xorl
icebp
aaa
mov
sti
popa
mov
jne
scas
pop
jp
mov
cmpsb
mov
mov
addr16
mov
lcall
jbe
xor
dec
push
push
xchg
push
xchg
cld
bswap
mov
outsb
xor
pop
push
pop
mov
fisubrs
lods
ret
shl
dec
clc
andl
aam
push
in
push
dec
mov
push
jg
inc
ss
inc
loopne
push
add
mov
or
sub
cmp
bound
xchg
ret
push
in
popf
adc
inc
pop
jbe
xor
and
cmp
stc
pop
xor
sbb
repz
js
push
dec
or
pop
popa
inc
and
pop
sub
mov
xorb
fnstcw
jae
icebp
adc
inc
dec
loope
popa
popa
xchg
xchg
xchg
out
xchg
lcall
mov
inc
xchg
xchg
icebp
lods
aad
in
insl
shrb
ds
push
add
adc
mov
inc
add
aam
jle
mov
adc
adc
push
ret
push
mov
pop
pop
enter
sub
jo
cmp
mov
push
inc
roll
stos
ljmp
pusha
cmp
ret
loope
cmp
movsl
and
xchg
dec
xor
mov
bound
xor
mov
mov
sbb
test
mov
sti
insb
and
imul
jecxz
in
imull
cli
xor
sbb
and
jb
xchg
insb
push
mov
mov
cli
lock
call
mov
in
fsubr
lea
loopne
pop
aas
outsb
xchg
das
jmp
movsb
adc
mov
xchg
sub
jmp
cmc
shl
xchg
lock
in
push
fwait
jmp
and
mov
mov
loopne
pop
xchg
jg
add
ficompl
or
and
dec
int3
mov
sahf
dec
push
or
pop
shl
aad
push
imul
push
ja
lret
pop
push
jae
aam
and
push
in
addr16
jne
fsts
adc
xor
mov
jecxz
dec
ret
pop
lahf
cltd
inc
insb
rcrl
sbb
push
dec
pop
js
out
and
adc
stos
inc
in
mov
jb
mov
int
push
bound
xchg
and
fidivl
or
out
jp
xchg
adc
xchg
jmp
cmp
xchg
mov
pop
mov
mov
sbb
movsl
add
imull
std
mov
mov
sub
cmpsb
adc
test
fldcw
dec
jmp
enter
pop
inc
add
andb
mov
pop
mov
push
jns
mov
pop
xchg
cmpps
mov
xchg
jne
jo
rorl
cwtl
lcall
test
add
dec
fimuls
testb
cmp
xchg
lret
aaa
dec
in
mov
imul
xor
pop
fisttpll
xlat
sub
ret
pop
ds
cmp
hlt
outsb
and
aas
rcrb
pop
pushl
cli
xchg
mov
or
les
fdiv
add
sbb
push
mov
cmp
pop
nop
push
push
push
aad
dec
fsubl
pop
mov
mov
mov
daa
fidivrl
ss
jl
mov
push
dec
mov
incb
in
movsb
cmc
xor
scas
fidivrs
sub
push
je
aad
loop
jle
push
sbb
icebp
cs
jns
je
rorl
pop
fstpl
mov
mov
pop
push
xchg
sub
xchg
pop
pop
repnz
push
mov
movsl
rcr
jp
rcll
sub
push
jb
call
inc
cmp
sbb
xor
mov
cmp
jns
in
outsl
pusha
xor
adc
inc
rcrl
cmp
sub
scas
cmp
cmp
imul
fistps
loope
aam
and
fst
fnstcw
je
in
cld
mov
add
and
adc
pushf
addr16
xor
mov
xchg
fisubl
pop
mov
xlat
sti
daa
adc
adc
push
sub
add
jle
mov
adc
scas
push
push
out
orb
mov
insl
jl
movsb
mov
ret
mov
jmp
dec
sub
mov
scas
mov
cmp
punpckhdq
push
in
xor
sbb
lock
cltd
clc
xor
ja
jae
stos
les
xchg
push
adc
ret
add
mov
daa
aad
jg
mov
mov
dec
js
push
movsl
sbb
or
aam
aaa
adc
cmp
sub
jg
cmpsl
sub
push
fwait
push
inc
jo
jne
sar
sar
mov
fstps
js
lea
xor
xor
mov
xchg
xor
inc
sbb
andb
cmp
xor
mov
and
scas
jge
sbb
jnp
insl
and
mov
call
ret
sbb
pop
pusha
pushf
jl
test
shl
out
push
add
mov
mov
loopne
jmp
pop
cmpsb
lahf
lds
jg
loope
out
sub
stc
cmc
and
scas
push
aam
xchg
push
rclb
test
pop
sbb
or
movsb
sub
push
xor
outsb
dec
gs
and
sub
aaa
bound
sbb
cmp
bound
push
push
add
push
xor
xor
add
and
adc
movsb
sbb
jmp
movsb
fiadds
and
sub
pop
cmp
cli
lret
jbe
mov
mov
jp
mov
mov
iret
hlt
pop
rdpmc
cmp
mov
int
push
inc
nop
movsb
iret
adc
mov
hlt
xor
fcoms
ret
adc
mov
scas
adc
shlb
or
inc
nop
lock
addr16
pop
stos
pusha
lret
jb
nop
incl
pushf
cmpb
rclb
inc
mov
dec
scas
xchg
sarb
out
jno
loopne
outsl
adc
mov
sbb
jp
out
les
je
push
inc
adc
pop
and
mov
call
mov
popa
push
mov
int
inc
push
arpl
fdiv
aad
jnp
imul
sbb
pop
and
mov
inc
jge
xchg
repz
hlt
pop
mov
out
or
jo
rorb
pop
or
add
mov
lock
jp
loope
cmp
or
sub
push
push
push
jecxz
push
jmp
jecxz
lret
mov
enter
mov
inc
push
mov
push
outsl
fsubrl
and
xlat
push
dec
pop
nop
adc
jp
jmp
mov
fdivrp
addl
xchg
repz
pushf
popf
mov
shll
push
push
pop
jmp
leave
mov
rorb
pop
mov
jp
in
jp
inc
dec
enter
movsl
push
mov
loopne
inc
adc
je
jecxz
hlt
mov
mov
add
cmp
xor
lods
cs
or
push
jo
in
notl
lods
rclb
stc
xlat
test
lret
dec
fwait
mov
or
xchg
jo
enter
cs
or
push
cmc
push
cmpsb
push
push
add
pop
push
sbbb
cs
loope
negl
mov
add
popa
pop
xor
orb
sar
movl
sahf
mov
mov
adc
mov
pop
rolb
or
xchg
fcmovnu
push
clc
cmpsl
cmc
add
out
and
push
cmp
xchg
hlt
add
push
adc
js
int
lods
cmp
icebp
push
add
xchg
outsb
adcl
or
aad
cmp
push
sub
xor
lock
dec
mov
inc
and
push
out
push
imul
testb
mov
out
outsb
add
movsb
mov
insb
and
xchg
mov
shrl
or
xchg
rcl
dec
inc
arpl
add
push
inc
lea
sub
cmp
sbb
push
xchg
mov
mov
test
cltd
shrl
fidivrs
arpl
cmp
pop
es
dec
adc
jl
or
jge
sbb
cli
jmp
out
das
cmpsl
mov
adc
xor
add
and
or
out
ret
add
fists
inc
and
aaa
lock
and
dec
jnp
mov
mov
adc
das
rcrb
push
lock
and
dec
xchg
mov
mov
xchg
mov
fsubrs
roll
stos
cmpl
push
mov
ret
movsl
mov
mov
mov
push
bound
les
lods
repz
icebp
test
or
lahf
shrl
rcrl
into
push
add
outsl
pop
adc
jbe
fadds
xchg
test
jge
icebp
add
adc
pop
pusha
test
fcoml
xchg
pop
cmp
sahf
mov
cmp
add
ja
in
jnp
lcall
jg
sub
pop
pusha
repnz
jns
fdivs
repnz
clc
mov
and
inc
sbbl
ror
js
mov
fs
cli
sbb
ljmp
sbb
scas
push
cli
sahf
jge
jnp
jg
subb
xchg
xchg
or
into
cld
dec
stos
sub
xor
rol
lds
and
lidtl
repnz
or
popf
vmovhps
add
or
or
lret
cmp
scas
xor
mov
movsb
jp
pop
lock
sysexit
mov
mov
imul
arpl
lahf
inc
or
add
aam
add
shl
jns
in
les
ds
jp
xchg
cmp
mov
lods
cmp
jno
call
jecxz
jno
mov
mov
mov
cmp
data16
aaa
jb
mov
sbb
aas
mov
or
and
cmp
and
adc
out
jb
iret
daa
fisttpl
icebp
adc
ljmp
and
push
and
loope
jne
bound
iret
jmp
sti
stos
loop
popa
mov
bound
das
xor
sbb
in
imul
je
dec
popa
sub
pop
add
push
push
std
mov
imul
push
movb
add
fidivrs
adc
add
ds
jp
pusha
push
faddl
adc
loope
sbb
std
and
xor
das
push
sbb
pop
xchg
lods
mov
mov
and
dec
push
mov
push
lods
jmp
ret
jg
jbe
test
es
jns
cmp
sub
jge
dec
mov
rclb
je
jbe
push
mul
pop
xor
jno
add
paddb
cli
loop
imul
sub
js
mov
pop
sbb
and
sti
fidivrl
jns
test
flds
and
loopne
out
aas
mov
and
lock
bound
icebp
shrl
out
arpl
stc
xchg
fs
push
xor
popl
xchg
loop
push
xor
jo
sub
xlat
cmpsb
ficoml
dec
rclb
mov
sub
out
flds
xor
js
xor
pop
int
inc
or
add
or
aam
lea
bound
ret
bound
fadd
nop
add
sbb
dec
mov
movsb
stos
sbb
mov
pop
mov
testb
imul
cmp
or
popa
test
inc
mov
or
adc
xor
mov
movsb
out
mov
test
inc
or
push
sbb
adc
mov
orl
icebp
mov
mov
sahf
dec
popa
xchg
repz
xchg
insl
or
mov
js
sub
shll
int3
mov
sbb
pop
push
sahf
lods
fwait
inc
jg
adc
mov
ljmp
in
data16
jns
hlt
nop
repz
loop
lods
imul
fs
dec
mov
and
out
pop
xorb
cmpsl
sarb
push
lcall
sub
ret
loope
adc
dec
mov
gs
or
loop
mov
call
andb
pop
jbe
rorb
inc
fisttpll
pop
roll
cmc
dec
or
mov
push
or
mov
notb
jg
xchg
xlat
int
cwtl
loop
subl
push
enter
sub
dec
shlb
and
loope
loopne
jnp
dec
push
rcll
jo
add
js
sarl
je
xchg
mov
push
lcall
negl
jg
inc
bound
pop
dec
aad
test
adc
mov
and
ljmp
icebp
add
pop
scas
cmp
adc
sbb
sub
cmc
icebp
repz
xchg
jg
xorb
or
dec
aas
dec
mov
push
dec
cmp
testl
and
xorb
add
mov
stos
dec
sub
jbe
pusha
push
mov
push
mov
xchg
dec
pop
movsb
dec
leave
sub
add
iret
jmp
aaa
jb
or
mov
outsl
inc
mov
or
inc
or
and
jle
pusha
js
js
arpl
and
or
inc
sbb
movsb
push
nop
dec
cli
mov
cmp
push
push
mov
or
cmp
sbb
nop
inc
xlat
push
dec
and
jmp
mov
sti
hlt
mov
and
cmp
into
int
test
loop
js
jg
mov
fnsave
nop
adcl
jp
lcall
cmp
or
lcall
sarb
outsb
lods
or
sub
ja
push
pop
mov
or
push
daa
test
pop
lret
push
scas
in
mov
and
pop
pop
push
cmpsb
adc
pop
or
xor
sub
sar
mov
dec
mov
push
loop
fdivp
jno
aas
movsb
mov
jl
xor
push
testl
mov
inc
sub
dec
scas
or
mov
xchg
ljmp
popl
add
dec
fmuls
js
inc
scas
jmp
sbb
pushf
pop
sub
xlat
rcrl
push
mov
mov
push
repz
add
inc
add
pop
fdiv
fs
dec
inc
pop
ds
push
sbb
nop
sub
xor
and
insl
cmp
xchg
aad
pop
test
repz
cmp
xor
xor
mov
clc
and
sub
fidivs
and
mov
or
adc
test
add
test
rolb
jmp
xchg
push
clc
pop
es
mov
fs
mov
sbb
inc
push
andb
and
jle
call
xor
sbb
jnp
mov
clc
cmc
rcll
and
imul
lods
imul
pop
add
lods
ljmp
or
sbb
cmp
gs
test
push
cmpsl
push
and
or
ja
pop
jnp
int3
ljmp
pop
add
stc
inc
shrb
inc
sbb
xor
jo
in
bound
xchg
mov
lock
pop
jl
sbb
lods
ja
sbb
rorb
pop
push
call
mov
and
sub
push
popa
push
test
push
pop
sub
cmc
jns
and
mov
aad
mov
cmp
sbb
push
or
in
sbb
push
add
jl
ds
push
push
push
ljmp
aam
test
stc
mov
and
sbbb
dec
cmp
push
or
jle
sub
jl
mov
xor
push
xchg
push
push
xor
lock
bnd
jb
je
sub
daa
mov
cmc
das
mov
test
imul
dec
xor
in
and
cmp
jge
roll
jecxz
xor
pop
sbbb
insl
push
pop
sar
hlt
outsl
mov
xor
and
cmp
mov
ret
add
add
dec
xor
in
jnp
lahf
pusha
jae
int
pop
pop
xlat
inc
sbb
mov
xor
les
push
je
push
add
mov
or
loopne
and
lock
mov
nop
pop
cli
mov
inc
jae
in
setg
call
add
inc
jp
sub
or
jns
add
add
push
scas
inc
scas
int3
xlat
jb
mov
xor
add
inc
out
adc
push
inc
ss
out
adc
push
nop
push
pop
push
xor
and
sub
lds
nop
and
push
xchg
shll
push
aaa
pop
shlb
cmp
jb
test
mov
push
nop
lock
pop
cld
aam
push
xor
sbb
clc
into
inc
inc
and
loop
sub
insb
sub
outsl
sahf
ljmp
mov
pop
addb
repz
fyl2x
sar
dec
fnsave
hlt
out
stos
pop
mov
inc
xor
and
and
and
test
shl
aad
mov
sub
push
out
pop
xchg
add
into
mov
nop
popf
lds
sub
dec
call
scas
movl
mov
jle
push
ja
test
mov
xchg
sbb
push
pop
call
lds
arpl
gs
or
and
mov
push
jge
js
ss
test
out
mov
mov
sar
repnz
pop
or
loopne
out
clc
add
adc
dec
insl
and
dec
nop
icebp
xchg
xchg
dec
inc
sbb
jp
push
push
push
xor
mov
mov
mov
popa
popa
enter
sub
cmc
lret
adc
push
add
jno
xor
add
adc
into
into
stos
pop
aam
xor
and
push
jo
mov
cmp
cmp
push
add
pop
mov
lods
dec
cld
jmp
jecxz
pop
mov
jbe
nop
loop
xlat
sbb
out
daa
mov
xor
test
cmp
call
idivl
ds
cmp
movl
movsl
mov
push
jp
test
pop
fsubrp
adc
push
orb
mov
test
gs
notb
outsb
addr16
xor
mov
rclb
aam
pop
shld
rol
cmp
js
pop
xor
inc
inc
dec
pop
aad
sahf
jp
cmpsl
hlt
xor
xchg
mov
shlb
jge
in
dec
cmp
or
push
fcomp
xor
add
dec
pop
mov
clc
mov
inc
pop
jno
sbb
mov
pop
or
ja
inc
add
mov
int
sub
adc
and
push
jbe
or
test
add
dec
xchg
pop
dec
lea
add
xor
pop
ret
enter
cmp
enter
push
cwtl
mov
ds
jnp
pop
sbb
das
pop
push
jge
dec
mov
das
in
xchg
xchg
lods
push
in
movsl
imul
mov
inc
xor
or
into
rcl
mov
xchg
mov
ds
cs
js
das
rorb
insb
stc
and
ljmp
orl
outsb
add
add
pop
iret
push
lea
lds
mov
and
sub
cld
dec
sub
fsubs
pushf
sbb
push
adc
je
xchg
out
jb
les
outsb
lcall
lahf
icebp
push
ret
mov
scas
repz
adc
pop
add
mov
mov
cmp
stos
inc
mov
or
cmp
outsl
je
cld
add
sub
push
sub
fcompl
out
pop
lea
pop
subl
arpl
xchg
adc
pop
mov
xor
in
dec
mov
loope
mov
pushf
and
or
adc
js
rorl
test
xor
jne
push
ja
jne
jmp
push
mov
mov
insb
mov
adc
iret
push
arpl
or
inc
into
pop
inc
inc
jo
jp
push
inc
jge
mov
icebp
test
mov
imul
pushf
mov
into
mov
aas
loope
ret
xchg
loop
jo
inc
aad
rcrb
loope
repz
lea
mov
lock
inc
addr16
xchg
nop
mov
addr16
fdivr
jmp
test
mov
inc
add
push
aaa
jge
das
mov
dec
repz
fcoml
pop
arpl
into
sbb
sub
push
push
xchg
cmp
cs
mov
and
mov
inc
dec
mov
sub
shll
pop
pop
dec
icebp
int3
ss
fsubrl
jae
mov
fs
cs
pop
and
lods
xor
xchg
cmp
aam
pop
pop
cmc
mov
sub
and
pop
lods
add
pop
adc
xchg
ljmp
mov
fsubrl
sub
loop
jge
pop
sbb
js
ficoml
jo
push
sub
dec
push
mov
fbstp
sub
xor
lcall
inc
dec
jl
fadds
aad
in
loop
fistps
sub
fcomip
dec
stos
cwtl
or
mov
out
sbb
pop
jle
xchg
jecxz
mov
out
inc
pop
into
fsubr
shrb
ror
je
pushf
popf
std
push
cmp
pop
add
add
iret
and
push
inc
daa
push
xor
or
cli
mov
dec
movsl
mov
out
push
xlat
ret
push
testb
adc
xchg
jo
push
inc
xchg
icebp
mov
enter
sub
jp
xor
movsb
xchg
adc
inc
mov
add
mov
ret
xlat
jo
in
loopne
push
xlat
and
hlt
add
add
cmp
dec
adc
hlt
loope
mov
movsb
jne
adc
lds
ljmp
andb
xchg
mov
shll
jns
adc
lock
xchg
push
pop
jno
pop
fstpt
jns
rorb
sbb
push
dec
add
cmp
lds
insl
call
sbb
jl
pop
lods
add
sbb
dec
iret
pop
stc
or
pop
mov
add
jle
imul
subl
std
inc
movsb
mov
push
jp
xor
or
inc
sbb
jp
insl
add
push
ja
xchg
mov
in
js
pop
cmp
arpl
out
push
jmp
jb
ds
clc
icebp
push
inc
dec
cmp
loopne
xchg
movsl
jle
cmpsl
cmp
xchg
push
sub
or
xchg
or
in
and
aam
cmpsl
cs
pop
js
pop
mov
push
inc
inc
mov
push
int3
push
clc
mov
out
xchg
xchg
aad
test
cld
ret
inc
divb
mov
lock
add
mov
and
sbb
inc
mov
and
pushf
and
lods
push
push
xor
int
cmp
push
jg
add
shlb
push
cld
ret
loope
cmpsl
enter
push
cltd
adc
sahf
shlb
cltd
or
xchg
adc
scas
or
dec
push
dec
movsl
pop
pop
and
rol
adc
add
sti
movb
jae
popf
repz
cmpb
mov
pop
pop
dec
pop
pop
add
orl
lea
ficoms
mov
ds
jg
push
pop
xor
sarl
daa
sub
and
shrl
and
xchg
imul
lret
repz
mov
popl
mov
hlt
jo
mov
addl
mov
fisubs
stos
mov
push
push
pop
shl
shll
sub
sub
cmpsl
test
push
or
inc
pop
mov
inc
pop
xchg
cmp
mov
inc
testb
mov
sbb
lock
and
imul
mov
and
xor
cmp
ret
pop
lods
add
fwait
scas
jle
cli
test
cltd
jp
mov
and
pop
test
mov
mov
pop
push
and
aas
loopne
xchg
cmp
in
sahf
pop
leave
jle
mov
sbb
arpl
or
mov
scas
pop
sbb
aaa
sbb
bound
mov
stc
mov
popf
aam
mov
ret
push
std
repz
mov
adc
xor
orl
into
and
ss
aad
xor
lret
cmc
lcall
insl
push
xor
addr16
sahf
cmpb
aas
add
psrlw
jecxz
xchg
dec
es
loope
test
mov
cmp
inc
xor
add
lret
sub
je
pop
fildll
jne
js
in
dec
and
popf
clc
int
inc
mov
xor
orb
ret
inc
inc
cmp
stos
clc
les
jb
testb
fsubrs
push
sbb
sub
mov
nop
fcoms
sbb
movsl
pop
dec
into
push
insl
cmpsl
dec
pusha
scas
xor
push
jb
inc
mov
loopne
push
icebp
dec
mov
int
jo
loop
jns
cmp
popa
in
dec
pushl
mov
movsb
dec
inc
insb
mov
adc
aad
das
jno
shll
or
cmp
jmp
int3
push
sbb
loopne
and
popf
or
cli
push
mov
mov
mov
mov
fiaddl
sbb
cmp
xchg
jo
adc
dec
cs
sub
sbb
add
cmc
daa
rcl
cmp
jmp
movsl
sub
add
xor
enter
notl
pushf
arpl
repnz
out
repnz
nop
or
xchg
cmp
mov
notl
popf
sbb
mov
xor
stos
shll
aas
sub
insl
mov
pop
xchg
mov
aaa
xchg
jo
or
dec
addr16
scas
rclb
arpl
push
call
in
xor
div
sub
cmpsl
xlat
out
or
mov
add
loope
popa
inc
subb
add
cmp
jno
cli
movsb
jp
mov
flds
roll
incb
test
mov
movsl
imul
xchg
push
lods
or
mov
or
push
jmp
in
xchg
fsts
aam
scas
aad
sti
sub
cmpsl
das
xor
pop
xchg
jmp
clc
mov
sub
cmp
shll
ljmp
jbe
movhps
mov
imul
or
fsub
negl
mov
or
and
leave
xchg
push
or
jecxz
or
sbb
xchg
dec
lahf
shr
cli
mov
add
mov
xor
and
push
jl
leave
out
inc
push
cmp
or
jne
inc
adc
pop
nop
push
stos
or
mov
call
sub
sbb
repz
mov
scas
inc
dec
or
sub
mov
insl
ret
aam
inc
inc
mov
outsl
in
mov
sub
dec
add
add
adc
sbb
ret
ret
std
scas
pop
mov
xchg
loop
fisubrl
push
sbb
push
cld
dec
cld
lods
aad
xlat
movsl
in
lods
xchg
push
pop
mov
test
cli
pushf
and
icebp
pop
popf
cmc
push
jnp
adc
out
std
movsl
sub
inc
rol
incb
inc
and
sbb
mov
ret
and
icebp
pop
rol
push
mov
rolb
std
call
add
movntq
push
xchg
or
je
shl
inc
aas
out
mov
mov
adc
ljmp
inc
repz
add
data16
xlat
popf
xlat
adc
aas
pop
push
ss
sub
nop
out
xchg
mov
ret
enter
repnz
add
push
fildl
ret
and
testb
and
incb
mov
fwait
add
das
cmp
add
ret
add
and
testb
and
xor
inc
orl
setne
adc
dec
inc
aad
pusha
sti
sbb
push
insb
sbb
scas
mov
adc
add
incb
inc
mov
mov
push
aaa
and
cmpsb
iretw
ljmp
into
cmp
dec
and
push
idivb
or
lods
dec
lods
cltd
dec
test
sub
push
sbb
push
out
js
jnp
mov
cli
mov
test
cld
mov
mov
pop
jne
mov
inc
mov
rorb
sbb
pop
stc
adc
and
ret
xchg
and
sub
sbb
adc
sbb
cwtl
mov
add
adc
mov
mov
adc
push
out
aaa
mov
pop
xchg
mov
je
icebp
xchg
sbbb
pop
enter
filds
sbb
clc
or
jl
data16
add
xchg
sub
dec
aas
fidivs
incl
loope
sbb
sbb
jge
int3
in
add
outsb
push
pop
dec
into
mov
fwait
test
cmpsl
sub
xchg
mov
je
mov
sub
pusha
xchg
scas
lea
dec
pop
jle
insl
pop
cmc
daa
sahf
fs
fstps
outsl
push
mov
cs
fwait
sbb
push
push
push
ljmp
xchg
loope
fdivrl
mov
xor
lret
jl
mov
pop
and
adc
out
icebp
dec
add
repz
pusha
add
inc
pop
in
stc
xchg
push
jbe
dec
jecxz
fsubl
add
pusha
ja
sbb
mov
jg
push
mov
push
ret
and
and
cli
arpl
loopne
test
jnp
and
mov
ret
mov
dec
jle
sub
mov
pop
je
arpl
mov
xchg
xor
pop
mov
push
add
leave
xchg
loope
cmp
or
and
jmp
dec
leave
ljmp
push
dec
xor
iret
leave
dec
addb
dec
xor
cltd
sub
jg
adc
cmc
jae
cmp
shll
xchg
aad
mov
sub
ss
incb
fiaddl
adc
and
sbb
jmp
add
fldl
or
sbbb
dec
lret
jno
loop
iret
cmp
xchg
scas
push
inc
xor
movsb
xchg
shlb
ljmp
pop
pushf
adcb
mov
shll
test
or
push
pop
mov
je
inc
mov
push
scas
ljmpw
or
rcll
lea
enter
xchg
sbb
inc
mov
movsl
jnp
pushf
jl
xchg
repz
clc
lds
add
loopne
shlb
lods
sub
int
xchg
cmp
mov
popa
mov
add
jmp
add
out
roll
or
pop
push
jo
nop
mov
imul
and
rol
repz
cmp
rclb
xor
aas
pushf
push
cmp
xlat
pop
cmp
dec
inc
mov
ljmp
sub
das
incb
mov
lahf
in
jb
pop
adc
call
addr16
adc
jl
mov
inc
or
sub
cs
mov
rcll
mov
pop
jo
pop
mov
xchg
das
movsl
lret
xchg
pop
sub
sbbb
mov
cmpsb
hlt
fcom
adc
dec
mov
dec
adc
and
dec
je
into
insl
push
scas
mov
addr16
cmpsb
cwtl
cmc
lds
rcrb
adc
shlb
sub
dec
sub
jmp
bound
and
xor
jecxz
push
int
mov
decl
aas
sbb
fcomip
fs
subb
repz
and
adc
mov
or
pop
jno
movsl
or
in
lock
sub
push
outsb
mov
je
fldl
push
roll
push
jl
push
int
add
pop
adc
pop
mov
scas
movsl
fidivl
sub
sub
loop
mov
pop
stc
pop
add
fwait
mov
inc
fistpll
mov
inc
repz
xchg
sub
insb
sbb
add
sbb
scas
int
stos
daa
lcall
pop
dec
and
or
and
mov
xchg
ljmp
mov
xor
mov
xorl
xchg
mov
jmp
fs
std
jno
sub
xchg
xor
insl
dec
or
in
or
popf
lods
mov
ds
movsb
mov
inc
cmp
mov
lock
lret
mov
and
subb
lea
mov
sbb
sbb
rolb
jne
mov
out
or
call
or
mov
out
dec
dec
sbb
rclb
inc
mov
push
mov
jno
jne
xor
jge
inc
clc
mov
adc
aad
adc
add
ja
icebp
inc
cwtl
and
push
xlat
inc
adc
repz
scas
mov
mov
cld
mov
mov
rcrl
lods
es
sub
add
sbb
push
push
leave
sbb
js
aas
aam
shlb
push
sbb
cld
jp
add
fisttpll
pop
mov
jnp
add
mov
jne
icebp
cs
dec
inc
jns
push
pushf
mov
xlat
or
adc
add
sbb
xor
outsl
sbb
imul
xchg
notl
int3
jo
mov
jo
mov
loopne
mov
xor
ljmp
inc
shr
pop
jnp
call
xchg
mov
insl
mov
cmpsb
xor
cmp
hlt
mul
push
add
adcb
mov
push
icebp
or
jg
inc
add
testb
shlb
ret
lea
roll
add
xor
adcb
sub
in
dec
pusha
xorl
icebp
sub
pop
in
cmp
or
les
hlt
orb
fsubs
nop
xchg
add
test
mov
sbb
xchg
cmpsb
or
lods
fistps
lods
inc
mov
mov
or
stos
cmp
shll
pop
push
aam
inc
daa
hlt
clc
imul
mov
sub
push
sbb
push
imul
scas
jbe
adc
loope
cmc
push
sbb
insl
and
loopne
push
sub
rcrb
xchg
push
cld
and
jno
js
mov
jbe
mov
loope
add
mov
mov
out
clc
aas
adc
cmp
push
push
aam
and
imul
ret
std
dec
jne
pusha
pop
jg
out
std
lods
or
scas
imul
pop
lcall
daa
rolb
and
mov
and
push
jg
sbb
dec
cmp
or
or
jb
rcr
mov
mov
mov
add
div
sub
mov
out
sti
inc
inc
aas
je
jmp
xor
push
inc
mulb
je
into
and
lahf
ret
and
mov
jae
jnp
negl
xor
and
sub
sub
mov
ret
mov
cmp
and
or
xchg
pop
ss
lods
ficomps
mov
and
jo
sbb
mov
popf
add
fcomps
and
mov
mov
jo
mov
sbb
adc
and
in
sbbl
mov
or
in
daa
xor
pop
ss
rolb
fisubl
cld
adc
jg
rcll
inc
or
fwait
mov
and
int
push
lret
jno
ljmp
jno
cmp
inc
shrl
loope
arpl
stos
sub
ja
scas
pop
xchg
clc
sub
fisttps
push
ret
push
shr
testl
cmp
popa
sbb
pop
adc
mov
push
mov
sahf
dec
or
mov
mov
xor
js
jnp
mov
cli
out
mov
push
inc
negl
mov
in
test
mov
mov
lret
enter
cmc
push
icebp
push
or
add
mov
pusha
adc
cmp
jmp
adc
out
icebp
xchg
push
std
jo
xor
das
call
xor
inc
sbb
mov
mov
fnstcw
add
sub
test
test
into
mov
add
nop
add
xor
int
mov
jg
dec
lret
shll
out
or
leave
test
js
in
xchg
push
lock
fdivrp
shlb
cmp
les
mov
ss
cmc
in
out
sbbb
rcrl
jmp
jae
pop
adc
sbb
pop
icebp
ret
shlb
jnp
aaa
xor
pop
imul
je
mov
inc
mov
aas
sbb
sbb
cld
shll
jns
push
clc
xorb
aam
pop
inc
fs
pop
out
xor
mov
pop
adc
ret
jo
in
xchg
pop
push
xchg
or
jmp
push
adc
cmpsl
push
je
xchg
cli
sbb
out
scas
push
popf
clc
std
adc
push
ds
mov
repnz
cmpsb
loop
pop
pop
movsl
and
ss
andl
clc
and
push
push
sub
cmp
xchg
xchg
punpckhbw
or
xchg
sub
xor
jo
jnp
addl
inc
pop
xor
fstp
mov
ss
pop
mov
loopne
in
sbb
pop
jp
mov
movsl
mov
rcr
aad
inc
mov
adc
mov
fsubs
fwait
push
dec
jp
daa
call
stos
mov
imull
ds
ficomps
mov
test
push
sbbl
xchg
jno
adc
pop
sahf
or
jns
jp
lret
inc
or
pop
jns
fcompl
mov
das
aas
imul
jns
sub
inc
jg
int
cmpl
pminub
cltd
lret
pop
add
xor
jnp
add
sub
in
mov
out
cmc
push
jecxz
cmc
ror
xchg
enter
xor
pop
pop
loop
dec
fistl
mov
push
mov
adc
call
push
faddp
outsl
int
cmp
or
mov
andl
loopne
mov
pop
fiaddl
pushf
push
jecxz
xchg
dec
enter
mov
xor
jle,pn
sbb
add
adc
or
pop
pop
out
or
mov
or
mov
pop
dec
fistl
xchg
pop
lret
decb
dec
mov
inc
pop
xor
inc
dec
sahf
mov
jmp
imul
push
rcrb
test
loope
xchg
insl
mov
mov
or
popf
xor
je
jle
mov
push
fisttps
jle
in
aad
imul
scas
stc
insl
lods
push
ss
inc
cmp
push
pop
xchg
ds
lock
sbb
sbb
fwait
stos
xor
xor
and
call
xchg
or
cld
mov
and
pop
movsl
scas
or
sub
jmp
int3
out
lret
bound
mov
imul
inc
dec
xchg
cs
je
loopne
lea
xchg
mov
ret
mov
fs
addr16
and
sbb
pop
adc
adc
dec
clc
icebp
in
push
mov
mov
mov
mov
push
push
lods
inc
aas
divb
icebp
push
out
cmp
in
push
movl
mov
or
xlat
xor
xchg
out
outsl
addb
popf
mov
inc
add
cld
mov
test
ds
outsb
push
dec
lea
add
xchg
pusha
test
js
movsl
movsb
ja
sahf
mov
cli
pop
mov
push
lock
nop
scas
xor
enter
inc
push
mov
je
imul
popa
sar
xor
mov
cmpsl
lea
cli
in
add
jbe
arpl
add
inc
mov
lods
jge
lret
xchg
cmp
fbstp
xlat
jns
lods
xchg
imul
adc
xor
loope
cmp
cmpsb
and
ss
mov
jecxz
mov
loope
arpl
mov
lds
clc
or
jbe
cmpsl
std
scas
data16
shll
repnz
mov
stos
mov
sbb
arpl
adc
push
add
lock
stos
lods
int3
pop
xor
lret
shr
sbb
xchg
sbb
flds
xor
loopne
adcl
mov
pop
mov
rorl
pusha
lock
jmp
sub
sub
jecxz
loope
dec
or
mov
pop
adc
add
insb
mov
filds
xchg
test
jne
decb
adc
jle
inc
out
mov
mov
inc
inc
aas
dec
inc
push
hlt
cltd
sub
pop
insl
lock
xchg
imul
icebp
aad
les
xchg
mov
shrb
mov
shlb
sub
clc
inc
inc
mov
sub
push
in
or
stos
inc
sahf
popf
outsb
push
stos
test
or
add
push
or
xor
ds
popf
cmc
jl
test
mov
fsubrs
mov
pop
stos
mov
jne
pusha
xor
mov
xor
cmp
test
xchg
dec
scas
lds
rclb
les
pop
add
cmpsb
imul
jg
int
adc
out
lcall
outsl
in
movsl
sbb
pmullw
pop
and
lods
push
sub
pop
pop
jmp
cwtl
mov
aaa
cmp
mov
xor
sub
call
and
adc
pop
jbe
xchg
cmc
scas
sbb
out
jl
jns
adc
test
fwait
mov
push
subb
repz
xor
add
add
data16
pop
loopne
rolb
push
loope
mov
sbb
adc
pop
inc
movsb
es
cld
fdivrl
mov
js
xchg
dec
stos
pop
push
jae
stos
mov
icebp
lods
push
add
mov
sbb
add
in
push
push
sub
das
mov
xchg
add
or
pop
call
mov
dec
jl
lret
hlt
push
fstpt
call
mov
movsl
scas
stos
daa
ss
jnp
les
add
push
aad
add
movsb
cwtd
sahf
das
lods
ffreep
movsb
in
mov
pop
adc
outsl
loopne
adc
mov
xor
mov
in
fists
and
jno
xchg
orb
cmpsb
cmpsb
jp
xchg
orl
mov
cli
insb
cmp
lods
ja
xor
lods
lcall
sbb
fists
push
arpl
mov
jne
loopne
ficompl
or
shrl
inc
jl
fucomip
mov
lock
ja
leave
fidivrs
inc
nop
imul
cmpsb
push
out
jb
ret
or
xchg
cmpsb
lret
lret
adc
divl
cwtl
pop
sub
pusha
add
je
dec
xor
mov
xor
loope
outsl
mov
insb
rolb
in
pop
pop
loopne
add
push
mov
sub
mov
mov
outsb
popa
aaa
jl
lret
adc
push
xor
aad
jle
hlt
or
mov
jg
sbb
add
sub
and
push
push
inc
pop
jno
jmp
push
imul
pop
sbb
mov
lcall
notl
xor
mov
dec
lret
push
xchg
mov
mov
cmp
jecxz
mov
sbb
cli
lock
ret
ret
fcmovnbe
or
mov
stos
mov
and
pop
movsb
fsubrs
xchg
icebp
jl
add
sbb
push
testl
lods
sbb
mov
dec
inc
std
in
mov
dec
call
mov
test
sbbb
inc
jne
test
dec
fiaddl
push
sbb
mov
inc
insl
out
xor
nop
mov
sub
xlat
cmp
mov
xchg
pop
cli
clc
mov
cmp
imul
pop
dec
pop
lods
out
xchg
add
ret
and
rorl
jl
push
cld
xchg
pop
xor
pop
jp
jns
or
or
cmp
jg
mov
xlat
mov
loopne
mov
mov
pop
and
jo
fcmovb
mov
dec
sbb
cli
insb
outsl
pop
jge
insl
sahf
pop
popa
push
imul
cmpsb
adc
sub
ss
jl
ret
arpl
mov
adc
fdivs
mov
rclb
or
test
push
stc
sub
aas
pop
in
mov
cs
dec
lds
xor
dec
adc
mov
daa
fidivrl
adc
mov
mov
mov
mov
inc
adc
or
pop
pushf
mov
add
in
xlat
push
pop
mov
lods
xor
test
inc
xorb
adc
or
add
push
add
mov
ret
xchg
add
leave
sbb
xor
sub
jmp
mov
fs
mov
mov
and
sub
inc
les
cwtl
sbb
out
mov
rclb
loope
push
mov
sbb
popf
xorl
inc
rorb
adc
xor
ja
add
jmp
cmp
mov
cmp
adc
xor
imul
jbe
xor
call
jle
push
loop
sub
imul
aas
push
xchg
in
popf
mov
and
lods
mov
xor
dec
mov
add
jg
mov
cmpsl
xchg
enter
sbb
insb
sbb
sub
mov
mov
pop
mov
dec
aas
stos
andb
xor
add
sub
rorl
inc
mov
jl
inc
jb
sub
int3
add
jb
into
data16
push
jmp
fbstp
pop
loopne
add
mov
jo
xor
out
adc
sub
sbb
sbb
push
stos
mov
call
cli
add
movsb
icebp
xor
sti
push
xchg
outsl
icebp
pushf
cli
mov
test
push
aam
cld
adc
call
ljmp
frstor
xor
sub
int3
add
inc
sbb
or
push
sar
sbb
push
jge
jmp
or
pusha
cmpsb
sbb
sarb
add
push
in
cmpsl
lds
pop
cmp
and
jno
icebp
push
test
lret
add
pop
push
test
push
jp
xchg
int3
scas
pop
or
cld
lea
pusha
jecxz
push
mov
sbb
push
push
add
enter
lods
jno
rcl
sbb
add
mov
xchg
sarl
push
mov
xchg
insb
mov
cwtl
sbb
push
int3
pop
dec
pop
xchg
add
or
jo
icebp
push
in
das
icebp
inc
lods
out
dec
scas
cmp
adc
pop
xchg
mov
add
cmova
shld
cmpsl
ret
rolb
subl
aaa
in
dec
pushf
mov
sahf
jo
popa
add
pop
mov
push
pop
push
dec
adc
xchg
push
fptan
loopne
loopne
sub
ljmp
push
inc
aam
push
daa
mov
sub
pop
add
jmp
aam
cmpb
inc
fcompl
movsb
test
adc
and
push
data16
cli
movsb
lret
adc
dec
cmovp
call
xor
xor
cmp
ja
pusha
lret
mov
dec
out
inc
or
test
pushf
mov
cmpsb
jnp
mov
psadbw
jecxz
jnp
cmpb
ja
ljmpw
mov
mov
jo
push
loopne
mov
inc
and
dec
cli
rolb
mov
inc
mov
sbb
push
ja
xor
ss
cmpsb
in
inc
fcompl
outsl
jl
pop
inc
inc
out
and
adc
clc
mov
mov
lds
and
call
out
cmpsl
scas
and
sub
ret
jb
pop
pushf
mov
les
sbb
push
pusha
mov
jp
push
and
lock
mov
xchg
das
andb
jmp
mov
jg
dec
jmp
or
mov
pop
pop
out
inc
call
mov
cmp
mov
lods
rcrb
out
inc
sahf
xchg
test
test
xor
add
in
mov
mov
faddp
lds
xchg
dec
jae
jo
lods
inc
inc
int
dec
push
subb
pop
in
incb
pop
mov
fs
add
cmp
lock
inc
sti
adc
dec
in
mov
sub
push
push
mov
mov
daa
xchg
lods
mov
dec
jge
sbb
ds
inc
sbb
sahf
jno
andl
push
sbb
lods
lahf
scas
int3
mov
mov
das
addl
sbb
or
cmp
mov
scas
push
mov
sub
push
sbbb
imul
adc
stc
pop
dec
mov
sqrtps
fbstp
and
or
pop
push
shrl
dec
mov
mov
sub
ret
jo
shlb
jne
lock
in
sub
iret
jns,pn
and
fildll
dec
push
inc
shll
hlt
leave
xchg
fs
dec
pop
cmpsb
push
mov
xchg
mov
push
jbe
adc
test
pop
enter
filds
jge
mov
movsb
mov
xchg
jmp
mov
std
test
mov
dec
pop
fadds
jl
inc
mov
add
stos
clc
sahf
push
fwait
lods
sti
push
push
loop
mov
push
shrb
popa
dec
arpl
push
imul
and
ds
jl
cmpsl
in
cmpl
mov
add
inc
cmpsb
adc
mov
ljmp
addb
add
mov
xor
leave
xchg
mov
test
lret
repz
and
je
je
addl
loope
cltd
or
fidivl
testl
ss
gs
dec
ljmp
ljmp
daa
fstpt
insb
insl
cmp
sub
mov
bound
fstps
aad
mov
inc
xorl
jg
clc
shll
shll
pusha
cmp
testl
or
pop
lock
mov
sbb
les
shll
push
fisubrs
mov
adc
add
and
pop
sub
pop
mov
addb
fdivrp
cli
scas
inc
lods
xor
sbb
push
adc
adc
jne
pop
sub
sub
bound
jnp
leave
mov
adc
adc
xor
lods
movsl
adc
lock
push
mov
jl
and
mov
cld
aad
hlt
xchg
aas
test
pop
test
ljmp
cs
xor
add
pop
aas
adc
adc
ds
push
mov
into
loope
sub
add
in
mov
jmp
push
pop
jmp
test
insl
or
pop
pop
jo
sbb
aaa
clc
push
mov
mov
mov
dec
dec
cmp
jo
loope
pop
jno
add
test
jbe
fldl
daa
in
subl
movl
adc
das
outsl
jmp
cmpsb
in
jl
mov
insl
mov
ret
imul
xchg
mov
add
leave
push
jg
add
and
scas
cmp
mov
rcrb
xor
ljmp
fsubrs
or
pop
add
adc
sub
jl
mov
adc
shlb
mov
cmp
incl
dec
or
pop
cld
cmpsl
lods
dec
adc
cmc
sub
stos
jg
sbb
mov
pop
or
cld
andl
mov
stos
or
cs
cltd
push
aaa
fisubs
lds
popf
mov
jno
aas
sbb
andl
mov
jle
add
sbb
and
sub
mov
xor
cmp
outsl
and
inc
mov
setp
in
ds
rclb
xor
aaa
cmp
cmp
jl
loope
jnp
out
push
xchg
xor
xor
sub
sarl
aas
xor
mov
jl
jge
dec
adc
loope
scas
mov
and
lock
lods
dec
faddl
xchg
movsl
imul
adc
xchg
sub
popl
push
je
out
mov
mov
mov
les
inc
es
push
cmp
and
cmp
push
or
std
mov
rorb
sbb
bound
adc
mov
mov
adc
or
daa
cld
mov
leave
xchg
push
jmp
mov
outsb
push
movsb
fcomps
push
mov
ds
mov
popf
int3
push
fcompl
adc
jo
add
ret
aad
sbb
popf
dec
shll
mov
fldcw
xor
cs
mov
pop
xor
sbb
es
inc
cmp
dec
jge
dec
fdivrp
add
mov
sub
xchg
and
add
ljmp
xchg
pop
cld
xchg
xor
int
dec
mov
jp
mov
and
imul
xchg
mov
or
and
xchg
pop
pfcmpeq
pusha
leave
sbb
jp
mov
and
jmp
mov
enter
mov
fsubrl
clc
mov
pop
int3
sti
sbb
pushf
sbb
mov
stos
xchg
mov
das
mov
adc
scas
mov
mov
lods
jecxz
inc
arpl
adc
fisubs
test
add
icebp
jmp
xor
xchg
mov
int
cmp
popa
lds
and
sarl
sbb
rolb
inc
aad
fiadds
sbb
rcll
loop,pn
jl
sub
ss
and
lock
jle
mov
or
or
mulb
ljmp
cltd
sub
hlt
xchg
add
pop
inc
jnp
stos
pop
sbb
cmp
ret
jno
in
jmp
pop
or
pusha
rorb
jle
sbb
or
mulb
inc
mov
bound
mov
and
push
in
inc
inc
adc
iret
pop
cld
add
mov
nop
jg
and
das
mov
xchg
mov
mov
test
jo
xor
clc
jl
xlat
je
push
insb
enter
jp
clc
add
mov
pop
xor
je
std
adc
sbb
inc
adc
push
add
rcrl
cli
add
shlb
js
inc
dec
inc
data16
sbb
rorb
loopne
add
mov
push
lcall
nop
mov
dec
mov
sbb
cld
fisttpl
mov
rcrb
mov
push
xchg
int
paddw
mov
ret
out
sbb
jnp
add
push
pop
int3
out
outsl
push
inc
cmp
icebp
hlt
cmp
ret
and
and
das
jg
std
aam
inc
and
push
loopne
test
jg
lret
popf
ds
jge
jo
stos
mov
add
es
cs
cmp
cmpsb
dec
daa
scas
ja
xadd
dec
jp
iret
adc
aam
push
sbb
mov
cmp
lret
push
inc
cmp
jns
xor
sub
jb
pushf
push
inc
xchg
and
loop
inc
dec
dec
and
jl
das
push
pop
dec
jmp
lahf
je
cmp
imul
lret
and
insb
adc
lock
inc
mov
pop
lods
sub
dec
xchg
add
mov
push
aaa
in
inc
pop
mov
dec
rclb
shlb
fmul
inc
and
xor
icebp
jge
mov
pop
push
xor
mov
xor
pop
popf
pop
das
loop
fsub
mov
jp
clc
and
fs
adc
fimuls
sub
add
xor
outsb
outsb
or
dec
aam
push
repz
clc
add
add
push
loopne
out
imul
lods
filds
loopne
ss
loopne
dec
bnd
xor
ljmp
jl
mov
pop
xchg
jge
jne
dec
adc
lock
xchg
and
ljmp
data16
cmpsb
lea
mov
in
enter
idiv
dec
testl
push
into
int
pop
jb
xchg
pop
cmp
sahf
data16
mov
cmc
das
sbb
mov
test
push
or
ficompl
decl
push
jne
mov
lret
xchg
mov
cmpb
fstps
into
xchg
sbbl
add
xlat
or
xor
jno
jb
xchg
mov
sbb
cmp
and
sar
push
inc
xchg
sti
mov
mov
mov
shrl
ja
jl
adc
mov
push
rolb
or
adc
lcall
pop
out
lcall
in
lock
test
stos
push
sbb
pusha
ja
pop
data16
repz
xor
test
out
push
push
sarl
mov
push
sbbl
daa
cmpsb
sub
pushf
cmp
sahf
test
aam
mov
or
push
pop
jmp
sub
adc
xchg
lods
clc
push
aas
pop
push
mov
ret
cli
clc
lret
dec
insb
lock
push
outsl
decb
mov
xor
pop
push
push
and
push
fwait
out
and
addl
sub
xor
jmp
mov
mov
sbb
cwtl
aam
jnp
mov
mov
stos
jge
in
inc
or
dec
into
xlat
adc
sbb
jo
xchg
cmp
divb
movsb
in
dec
push
std
ficoms
notb
pop
lret
pop
pop
xchg
lds
cmpsl
cltd
test
je
aas
mov
imul
leave
popa
add
add
arpl
cmp
popa
ret
or
cmp
lret
push
jbe
ds
je
movsb
mov
or
adc
movsl
xor
jmp
movsl
ljmp
out
rorb
lea
jp
pop
int
fisttpll
in
pusha
es
rol
js
jg
pop
add
lcall
push
loope
mov
xchg
jge
rolb
pop
and
mov
insb
inc
jmp
repnz
jl
ja
js
loopne
es
fiaddl
cmp
loopne
es
sarb
mov
rorb
sbbb
xor
dec
xor
or
push
jmp
mov
out
mov
sbb
cmc
mov
add
aad
test
jae
fbld
pop
xor
je
pop
mov
insb
sbbl
sti
adc
outsl
jbe
dec
cltd
pop
enter
das
sbb
nop
movsb
std
xchg
xchg
test
cmp
syscall
scas
fcmovb
pop
call
inc
jne
mov
and
xchg
dec
ficoml
mov
subb
mov
hlt
into
push
cmpsb
inc
in
or
or
xchg
cld
dec
inc
pop
mov
dec
loop
shl
hlt
or
pop
sbb
jno
pop
lret
push
cld
call
out
xchg
dec
xchg
sbb
cli
mov
out
ds
ficoms
mov
imul
out
subl
push
jecxz
ljmp
daa
jbe,pn
sub
das
mov
sub
sbb
out
pop
orb
call
mov
sbb
imul
dec
in
mov
inc
jp
add
dec
dec
daa
dec
mov
add
mov
dec
sahf
ror
je
imul
scas
add
mov
mov
cmp
push
xlat
push
addl
popf
ds
add
loopne
inc
inc
pop
hlt
pop
es
xchg
cwtl
push
jne
lcall
pop
stos
jg
dec
add
pop
outsb
int3
stc
inc
call
or
jno
je
test
mov
rcll
sbb
dec
jb
lods
mov
je
add
dec
ds
jp
out
adc
jecxz
mov
rorb
lods
in
fisttps
add
mov
adc
jg,pt
adc
sldt
lahf
rorb
scas
stos
mov
push
popa
push
cld
adc
lods
sbb
mov
cli
lods
adc
scas
ljmp
inc
ret
cwtl
or
stos
pop
ljmp
inc
ljmp
or
jge
xchg
sbb
or
sbb
call
gs
pop
push
add
and
mov
out
push
je
jge
push
mov
arpl
mov
imul
movsl
jl
aad
ret
psubd
pop
mov
and
out
adc
fidivl
mov
sub
fs
orb
imul
outsb
cmpsl
out
jmp
cmpsb
inc
je
push
pop
jle
pop
scas
popa
mov
mov
aad
fwait
into
and
fs
loopne
and
data16
pop
movsb
xchg
pop
clc
pusha
fisubl
clc
mov
dec
mov
ficompl
xadd
test
repnz
adcl
ss
or
punpckldq
jno
imul
xchg
jecxz
pop
loopne
add
or
testb
rclb
arpl
ficompl
mov
sahf
mov
mov
addr16
jmp
loop
cmp
dec
ds
std
xchg
push
mov
in
ds
fadds
sub
pop
adc
das
test
fs
push
fmull
mov
rcll
jmp
rolb
adcb
or
cmpb
inc
sahf
pop
enter
sahf
cmpsb
out
push
lcall
xor
fildll
pop
and
add
cmp
cld
lds
and
pop
movsl
and
lock
mov
mov
push
movsl
in
xchg
pusha
ret
dec
xor
enter
dec
cs
icebp
mov
out
adc
and
dec
add
cmc
jbe
bound
test
push
push
mull
sub
adc
cmpsl
and
popa
sbb
int
cmp
fldl
add
mov
xchg
loopne
jl
xchg
push
mov
loopne
sbb
adc
pop
jmp
pop
lret
out
sub
jl
xchg
add
xor
clc
sub
jnp
pusha
xor
ss
cmp
lret
clc
or
mov
push
aam
push
int3
push
adc
lcall
mull
lahf
mov
out
cltd
inc
movsb
ljmp
inc
out
pop
pop
cli
add
pop
xchg
jbe
sub
stc
cli
int3
pushf
adc
imul
or
outsl
cmp
inc
sbb
push
push
push
push
das
fsubrs
push
jo
jp
lret
mov
or
loopne
sbbb
shll
movsb
cmc
mov
mov
mov
jp
sbb
add
cs
xor
in
mov
mov
or
push
adc
jb
ljmp
mov
xor
out
mov
out
xchg
aas
jns
mov
data16
outsb
rcll
push
mov
add
push
mov
out
adc
icebp
pop
lods
push
lock
dec
arpl
pop
fisubs
mov
jno
mov
ljmp
push
or
jmp
jo
test
sbb
mov
fisubrl
pop
aam
push
xor
sbb
test
sbb
fcmovbe
xchg
pop
mov
mov
sub
stos
les
movsb
aas
adc
sub
repz
dec
jge
shll
loop
dec
or
lock
push
jnp
adc
lret
and
add
sub
ss
add
pushf
or
je
xor
push
incb
jp
lods
dec
jle
popa
aad
cmpl
je
adc
or
imul
arpl
cltd
fdivrl
push
pop
xchg
addl
mov
orl
aad
icebp
enter
test
pop
loope
pop
xchg
xchg
mov
adc
stos
dec
and
inc
clc
rolb
adc
inc
test
push
sub
rorb
push
pushw
stc
imul
adc
jmp
fistl
or
invd
pop
pop
or
lar
mov
push
in
fwait
arpl
cmp
mov
rcl
jl
rorl
mov
jmp
int
std
mov
loop
cmp
into
push
out
into
in
cmpsl
mov
das
and
xor
mov
or
movsb
inc
stos
cmc
sbb
mov
mov
cmp
mov
test
popl
and
jns
or
popa
jo
mov
push
test
lods
adc
xor
jo
aam
dec
out
xchg
inc
repz
loopne
out
orl
xchg
fwait
js
loopne
jg
popa
imul
or
cmp
sbb
es
cmpsb
sbb
dec
ja
fadd
cmp
pop
cmp
push
aam
push
aas
xchg
and
pop
adc
add
repnz
mov
stos
out
mov
ja
mov
call
pop
fs
jle
dec
pop
mov
adc
or
cmpl
jl
mov
sbb
jo
add
xchg
sbb
push
cmc
inc
push
mov
lock
nop
xor
mov
pop
mov
sub
je
rolb
orl
adc
mov
ss
ficomps
xchg
inc
xchg
xchg
sbb
aas
shlb
roll
xchg
adc
out
cmp
jns
and
xchg
lcall
repz
lea
roll
loopne
sbb
lret
xchg
add
or
sbb
jbe
cmpl
into
test
sub
call
sub
pop
aaa
lds
sbb
icebp
xchg
push
shlb
push
jp
add
bound
lock
dec
stos
mov
pop
add
sarb
scas
sbb
pop
lahf
into
popa
popa
xchg
sbb
pop
je
mov
pop
lods
push
addb
push
inc
aas
mov
ja
sub
shrb
ficompl
pusha
rorl
inc
or
je
out
fucomp
fiaddl
jecxz
pushf
xchg
sti
add
push
loopne
leave
inc
jo
lock
adc
mov
addl
cld
cmpsb
xchg
inc
add
aas
and
lock
jmp
cltd
sbb
mov
ret
adc
ljmp
out
jmp
insl
pop
enter
push
sbb
or
or
ja
imul
pushf
arpl
push
call
xchg
mov
mov
sub
inc
icebp
sarl
and
and
mov
mov
adc
lods
je,pt
outsb
movsb
mov
mov
cmpsb
cmp
sub
xor
call
xor
cltd
je
cmp
fidivrl
rol
sarb
jl
loopne
aam
or
xor
in
mov
movsl
clc
rorl
imul
jl
lcall
pop
cmp
inc
and
inc
lea
mov
lcall
and
push
dec
cmp
lds
jo
adc
in
mov
sbb
mov
lock
mov
pop
and
or
cmpl
sti
xchg
clc
mov
lret
or
mov
ds
rolb
js
orps
mov
adc
cltd
flds
inc
in
add
mov
cli
fs
movsb
cmpsb
pop
add
pop
test
jmp
sbb
cmc
inc
xchg
xchg
adc
inc
mov
loope
test
iret
adcl
roll
inc
es
je
dec
dec
std
stos
clc
loope
xor
cmpsl
and
aaa
test
jo
test
push
sbb
clc
add
mov
das
lods
stc
gs
jge
lds
out
call
gs
movsb
arpl
adc
out
jae
xchg
add
loope
pop
or
test
imul
pop
sub
test
popf
iret
fmull
testb
adcb
loop
hlt
daa
iret
inc
jl
sbb
push
sub
pop
push
adc
stos
xor
dec
lret
adc
sti
dec
mov
adc
dec
rcl
lods
out
xchg
lret
inc
popf
scas
inc
and
cltd
rcll
xor
adc
dec
and
arpl
cwtl
dec
cmp
pop
mov
repz
jo
adc
les
pop
icebp
aad
jae
push
push
cmc
arpl
iret
xchg
and
mov
jecxz
mov
cs
lods
or
loope
jbe
rcrb
inc
or
jno
push
lock
ds
shlb
fsubrs
nop
hlt
mov
jecxz
jecxz
fidivrs
and
lock
test
mov
push
popa
pop
push
ret
dec
mov
clc
adc
jp
rcrl
inc
shlb
out
rcrl
cmpsl
out
xchg
aam
cld
lret
ret
daa
mov
imul
dec
pop
xlat
out
je
pop
cmpsb
dec
push
sbb
push
pop
fistpl
loopne
cwtl
xlat
or
jns
sbb
xchg
fldt
mov
sub
jecxz
dec
enter
or
out
add
inc
roll
jae
loop
sahf
pop
shrl
bound
lock
std
fs
movsb
lret
rclb
cs
mov
or
pop
nop
adc
add
imul
sbb
cwtl
ret
push
insl
call
xchg
mov
pop
mov
mov
sub
xor
xor
add
mov
pop
dec
mov
mov
inc
std
and
xorl
ljmp
mov
int3
enter
cld
sub
lcall
mov
inc
mov
sub
mov
bound
jae
lock
lret
imul
xlat
or
shlb
dec
jle
jp
in
add
jb
ljmp
add
xchg
mov
adc
inc
andl
or
mov
or
push
es
jg
cmpsl
out
leave
ss
inc
movsl
stc
je
faddl
popf
fdiv
jns
int3
mov
push
xchg
es
pushl
mov
sbb
add
push
push
dec
mov
cld
push
fwait
pop
sbb
mov
js
jno
mov
lds
xchg
xchg
push
mov
dec
xor
out
xor
pushf
add
xor
adc
pushf
movsb
pop
cld
jge
and
addb
and
or
inc
mov
stos
fwait
out
add
sub
push
pop
cmp
sub
leave
adc
add
negl
push
in
mov
scas
xor
mov
mov
lods
add
push
push
pushf
dec
xchg
add
test
mov
adc
pop
test
pop
out
in
dec
pop
xchg
pop
xchg
inc
mov
sub
sbb
shll
xchg
mov
or
and
call
adc
lods
pop
insl
movsb
and
cmp
and
push
nop
mov
pop
popf
mov
outsb
push
add
in
push
mov
popf
cltd
mov
out
jge
adc
adc
data16
and
sbb
adc
sbb
aaa
push
call
cmpsl
cmpl
add
mov
push
cmp
fldt
or
pusha
push
lods
push
mov
mov
cmp
les
movsl
es
adc
mov
xor
jbe
mov
aam
xlat
pop
xor
imull
adc
xor
fmul
int3
inc
add
dec
cmp
add
iret
in
rcrl
cmpsb
loopne
push
push
fsubp
dec
or
stc
das
push
mov
pop
adc
mov
popf
jmp
jge
mov
cmp
icebp
mov
adc
sub
rolb
loope
cwtl
mov
daa
adc
icebp
cmp
clc
ja
hlt
cmc
mov
ljmp
movsb
addb
repnz
mov
mov
loopne
fcompl
push
loope
enter
lock
ror
inc
or
nop
loope
mov
pop
xchg
das
scas
and
mov
or
push
repnz
adc
inc
ret
pop
mov
push
test
std
pop
in
dec
mov
sbb
paddb
xor
dec
dec
sbb
repnz
and
pop
lock
aaa
and
mov
push
cmpsb
push
roll
push
ja
sbb
and
cmove
jo
and
lea
ret
dec
nop
mov
push
stc
inc
nop
mov
gs
lods
push
mov
inc
rcrl
in
mov
in
pop
and
cmpsb
push
lods
movsb
push
adc
jnp
push
cmp
leave
push
mov
mov
out
pop
fldt
ja
je
mov
inc
imul
pop
fwait
pop
cli
sbb
mov
pop
jne
adc
mov
mov
inc
mov
lret
loope
sbb
scas
por
cmp
fdivrp
xchg
cmp
pop
mov
mov
jno
icebp
xchg
dec
aas
mov
outsb
cmp
test
adc
mov
call
jo
sub
dec
push
mov
mov
lahf
jp
adc
scas
loopne
sar
jnp
pop
xchg
add
mov
sbb
pop
lods
test
xor
inc
aaa
mov
sub
cmc
inc
cmp
int3
dec
lret
ja
sar
cmp
and
mov
add
rsm
add
data16
insb
cmc
pop
sarl
add
bound
or
cmp
arpl
jl
pop
inc
idivl
ret
dec
pop
mov
dec
sub
fidivl
pop
sbbb
mov
dec
jmp
add
and
push
jnp
mov
mov
pop
cmp
push
add
xor
mov
and
jmp
rol
xchg
adc
testb
pop
jecxz
xlat
and
xor
ficoml
lret
lods
js
gs
jb
mov
fwait
mov
xchg
and
sub
aas
sub
sahf
icebp
cmp
cwtl
adc
mov
dec
into
loopne
popa
xor
je
rcll
loopne
add
inc
adc
test
jns
push
jg
jne
repz
jae
cmp
frstor
inc
push
jmp
aam
and
frstor
mov
js
dec
cli
mov
inc
xchg
adc
cld
push
inc
sbb
inc
loop
pop
mov
cmp
insb
loope
mov
sti
fisttpl
xor
or
js
add
push
xor
or
pop
inc
mov
roll
xchg
in
je
mov
jg
jne
and
sub
ljmp
inc
jp
insb
xor
push
rorb
pop
jmp
cmp
sbb
pop
xor
cmp
mov
pop
loopne
mov
popa
mov
sub
cmp
inc
and
fistpll
leave
out
push
xchg
lret
mov
outsb
add
mov
sub
inc
mov
adc
gs
and
loopne
fcmovbe
les
loopne
xor
cli
sarb
shll
mov
inc
push
in
out
mov
mov
push
jl
sbb
adc
les
inc
cmp
push
mov
mov
jno
jno
loopne
and
sbb
jge
lods
mov
rorl
leave
imul
xlat
push
lods
adc
mov
ficoms
sbb
stc
fcoms
lea
or
js
sub
adc
popf
imulb
and
cmp
cmp
inc
mov
mov
inc
fisttps
sbb
leave
mov
pop
dec
push
fisttpll
iret
clc
xlat
add
adc
jno
inc
fsubrs
test
lds
and
pop
repz
daa
and
pop
dec
xchg
jb
push
jo
or
and
xchg
mov
icebp
fldcw
jp
push
arpl
fwait
or
add
orl
jl
fsubl
adcb
dec
sahf
and
mov
in
test
mov
rcrl
hlt
fnstcw
sub
cmp
mov
mov
loop
pop
jle
inc
mov
stos
add
aas
imul
aaa
mov
call
aad
dec
xchg
fisubl
dec
xor
scas
mov
and
cmp
cmp
std
daa
xor
add
inc
xor
test
mov
test
out
lock
xor
aaa
das
mov
jge
cltd
cli
test
repnz
fistpll
insb
call
and
test
mov
sbbb
xchg
fiadds
scas
xcrypt-ofb
cmpsl
test
xchg
mov
mov
add
lock
psrad
xor
jbe
jb
sbb
pop
lea
sub
mov
push
lds
add
call
jo
jns
adc
push
sbb
jne
les
jl
sbb
scas
jl
pop
ja
shr
add
cmpsb
pop
and
jg
xor
cmpsb
push
jle
sbb
js
scas
lret
in
idiv
xor
add
cmp
clc
clc
lods
jl
mov
out
xor
ss
fld
sub
aam
lock
and
not
inc
push
stc
clc
lret
je
addr16
add
rorl
lcall
xorl
adc
sbb
mov
xor
fs
aad
clc
ret
cmp
icebp
das
xchg
lds
hlt
ss
jns
mov
ror
es
shrb
pop
sbb
sub
jg
dec
adc
fildl
cmp
imul
lea
cmpsb
or
add
mov
hlt
addr16
jle
sarl
sub
push
xlat
std
sub
xchg
jne
xchg
lods
push
dec
adc
mov
push
repz
cmp
nop
sahf
int
adcb
in
push
icebp
xchg
cmpsl
inc
icebp
mov
lds
stc
popa
out
fwait
and
clc
cltd
adc
pop
aam
xchg
lret
cmp
fwait
in
sub
cmp
fs
dec
lahf
cmc
insb
aad
jmp
add
das
sahf
and
xchg
mov
int3
ljmp
pop
ljmp
mov
bound
or
inc
insb
mov
xor
mov
cmp
inc
jg
loopne
jp
les
add
inc
xor
jns
xchg
loopne
mov
add
int
aad
or
xchg
inc
mov
push
jge
mov
ds
inc
or
je
adc
nop
and
in
jnp
cwtl
enter
mov
mov
hlt
dec
inc
stos
pop
xor
pusha
jne
mov
cltd
mov
iret
loope
fbld
fisttps
fs
inc
push
inc
adc
mov
fcoms
pop
adc
push
cmp
xchg
xor
test
jecxz
mov
insl
sbb
jle
mov
mov
dec
push
stc
push
nop
clc
sbb
mov
push
int3
adc
loopne
and
mov
and
add
incl
fwait
adc
sbb
out
test
push
popa
in
movsbl
call
ret
sub
enter
pop
push
xor
clc
inc
pop
in
test
mov
pop
and
fwait
pusha
lods
inc
aad
clc
mov
push
dec
mov
push
inc
xchg
mov
push
movsb
fxch
adc
mov
je
pop
pop
xchg
sub
and
shlb
xchg
or
push
daa
cld
rcr
jmp
ror
hlt
shrb
sub
add
shrl
pusha
pop
xor
in
mov
fmul
jl
jb
push
pop
mov
pop
add
cmp
imul
and
addb
std
dec
mov
jo
pop
add
loope
sahf
lea
pushf
jae
pop
js
je
xabort
fcmovnbe
add
cli
cltd
push
in
je
in
dec
ret
jge
and
je
idiv
shlb
jne
or
paddq
push
nop
lea
imul
sahf
pop
add
sub
and
mov
inc
lock
inc
popw
loope
pop
or
pop
jle
icebp
cmp
icebp
imul
insb
std
xor
xor
fs
loopne
mov
mov
pminub
push
dec
cmp
and
addb
mov
call
xor
stc
nop
sbb
je
push
mov
jmp
add
add
sub
push
jns
push
inc
jne
leave
mov
push
lods
dec
je
outsb
rclb
lods
testb
mov
adc
lds
pop
cmp
mov
enter
add
daa
jo
lea
add
hlt
aad
add
xor
in
dec
ret
das
adc
mov
xchg
lcall
add
add
dec
lods
dec
pusha
pop
loopne
dec
xchg
dec
cmp
add
imul
pop
call
cltd
pop
mov
mov
jo
insb
loope
dec
das
and
sub
sahf
push
dec
adc
xchg
xlat
dec
out
pop
lret
cmc
icebp
daa
jns
add
mov
push
add
dec
jne
mov
adc
dec
ret
sbb
aad
test
mov
std
mov
pop
adc
dec
dec
gs
in
movsb
bound
pop
mov
mov
or
rcll
inc
das
fidivl
or
mov
push
inc
xchg
jle
dec
das
stc
mov
jle
loope
mov
loopne
sahf
fnstcw
dec
mov
push
fimuls
ljmp
cmp
push
sbb
push
stc
aam
xchg
xrelease
daa
sarb
insb
aaa
insb
mov
mov
ret
enter
sbb
test
mov
arpl
jno
xchg
aad
adc
dec
cli
xchg
mov
or
fwait
mov
push
inc
adc
or
or
and
mov
push
and
sbb
add
mov
jp
fistl
cmp
stc
jmp
int
divb
imul
dec
lcall
sub
adc
stc
ret
cs
insl
pop
hlt
mov
jecxz
fsts
das
lods
add
xchg
mov
bound
popa
decb
mov
push
mov
xor
cmp
push
sub
shrb
lea
cmp
pop
mov
outsl
push
add
mov
test
cmp
push
pusha
mov
or
add
inc
inc
in
and
popf
iret
pop
sub
cwtl
addr16
mov
pop
dec
add
dec
es
xchg
push
inc
stos
mov
or
xor
cli
mov
xlat
mov
inc
pop
jmp
xchg
push
push
ret
and
inc
pop
mov
lods
fmul
cltd
push
xchg
push
jo
push
or
jbe
pop
or
dec
mov
test
jg
lock
icebp
pop
clc
jecxz
shrl
sbb
divb
clc
adc
and
xchg
int3
loopne
jp
pop
fadds
add
clc
and
jmp
out
inc
mov
orl
xchg
xlat
out
or
push
jae
imull
jo
adc
ss
xchg
mov
xchg
jmp
loop
push
adc
loopne
test
shlb
push
orl
into
outsb
mov
ror
jbe
loope
aas
mov
xchg
mov
mov
pop
mov
fdiv
jp
rcrb
daa
jecxz
ret
mov
push
scas
add
dec
stos
cmp
sub
mov
es
repnz
subl
neg
imul
cmp
idivl
pusha
push
mov
fildl
push
insl
and
xor
mov
pop
test
xorb
adc
ja
ljmp
adc
aaa
or
sub
xchg
cmp
push
xor
jge
pop
nop
add
icebp
jbe
add
in
cmp
push
or
cmp
rol
pavgb
enter
sbb
push
adc
test
pop
cltd
sbb
loop
mov
and
imul
shlb
sahf
dec
jne
inc
int3
inc
mov
pop
lcall
xorb
jno
inc
push
mov
add
cmp
movsl
ficoml
mov
fwait
dec
test
ljmp
mov
mov
mov
into
sub
test
hlt
mov
addr16
mov
ljmp
jne
hlt
xlat
fcoml
xor
leave
add
mov
repnz
xchg
stos
mov
push
test
outsl
jl
ret
mov
hlt
cs
addr16
cwtl
add
das
out
xchg
xchg
inc
sub
pop
scas
push
stos
clc
in
shrl
stc
mov
rolb
arpl
add
sub
push
jmpw
ljmp
push
add
popf
repnz
rorb
xlat
repnz
and
fwait
repz
sub
or
push
sbbl
clc
js
fcomip
dec
fisttpl
or
shrb
movsb
cld
mov
fs
in
add
cmp
adc
inc
fwait
push
lahf
rorb
lds
xor
and
insb
cmc
dec
fistpl
fstps
fldcw
and
mov
fmuls
jo
daa
cmp
mov
mov
inc
push
dec
ds
aam
lcall
mov
sbb
js
sub
divb
xchg
jle
jecxz
popf
dec
testl
jge
in
imul
jmp
mov
cld
dec
pop
lods
dec
lea
aam
mov
push
fstl
fcom
add
xchg
stc
iret
and
lea
inc
adc
in
lock
xchg
jo
add
mov
sbb
sahf
jne
jns
dec
pop
adcl
dec
loop
xor
shl
jae
jmp
xchg
ret
push
dec
call
or
sub
push
loope
pop
adc
in
or
adc
movsb
lret
pusha
clc
mov
sub
jge
cmp
jecxz
push
das
fstps
sub
cltd
das
mov
cwtl
push
mov
insl
xchg
std
xor
sbb
rclb
out
popf
cmp
in
pop
dec
xchg
std
in
jno
xchg
lcall
addl
cmp
sbb
sbb
mov
and
and
push
sbb
dec
cli
test
add
rcll
nop
cmpsb
fdivr
pop
xchg
xor
dec
dec
cmp
incl
adcb
std
fdivrs
mov
smsw
dec
xor
lock
call
fidivrs
cmpb
pop
lcall
lea
filds
daa
jnp
loop
lock
adc
addr16
scas
out
xchg
sahf
hlt
xor
imul
orb
dec
xlat
sub
mov
adc
stos
shll
sbb
sahf
aaa
sbb
adc
hlt
sbb
lret
mov
cmp
mov
fsubrs
in
pop
js
or
or
loopne
mov
lret
vmread
jle
movsb
jb
je
mov
xor
ds
filds
mov
pop
inc
mov
leave
hlt
pop
inc
mov
mov
js
jmp
jl
lret
imul
andb
test
push
adc
inc
std
les
icebp
loopne
movsl
in
cmpsb
test
rcrl
adc
ficoms
and
adc
mov
or
mov
insb
sarb
and
jmp
pop
mov
push
xor
mov
cmpsw
and
hlt
adc
xchg
cltd
jns
test
mov
arpl
pushf
add
inc
das
inc
repz
mov
test
js
adc
aam
cld
les
rclb
mov
ljmp
je
cmp
fdivl
push
sbb
cmp
sub
cli
adc
lods
lret
mov
jns
push
arpl
subb
ja
pop
jl
mov
dec
cmp
jno
pop
xchg
mov
inc
jae
test
scas
or
and
push
lods
js
or
loopne
addr16
mov
test
loop
punpckhbw
daa
data16
xlat
js
jp
add
mov
stos
cmpsl
push
lret
add
mov
mov
shll
stc
sub
xchg
test
scas
repz
hlt
xchg
cmp
push
inc
test
leave
sti
sbb
outsb
rolb
sub
aas
inc
dec
add
mov
xor
shrb
incl
lock
movsb
push
jne
pop
cli
dec
sub
cmp
sbb
jns
mov
push
dec
inc
mov
and
jns
fcoms
shlb
sub
lock
xor
jecxz
arpl
pop
or
dec
js
add
pop
push
add
aad
sbb
daa
push
in
bnd
push
inc
add
pop
or
imul
inc
push
es
pop
xor
sub
push
jl
add
ljmp
sbb
aam
mov
or
jl
fidivs
sub
bound
cs
push
fistpll
sarb
data16
mov
add
adc
mov
sub
pop
jecxz
xchg
lret
jmp
icebp
aad
xor
movsl
inc
dec
movsb
inc
sahf
cmp
xchg
mov
cmc
push
add
xchg
sahf
pusha
ljmp
add
jno
xchg
sbb
pop
pop
jne
or
stos
jle
ret
push
pop
push
xchg
cs
loopne
push
ljmp
js
sub
aaa
leave
fidivrs
pusha
adc
and
jns
sub
add
jno
add
rcr
add
pop
push
adc
sub
sbb
pop
inc
push
out
loop
mov
xchg
xor
sbb
scas
jle
jg
gs
sbb
pop
add
fdivrs
or
movsl
or
stc
rcrl
mov
loop
or
call
xchg
xchg
scas
cmp
pop
outsl
movsb
subl
aaa
jp
cmp
inc
inc
and
fstpl
adc
cmpsb
ret
sbb
dec
adc
pusha
aam
push
or
mov
inc
ds
out
fwait
data16
lock
xor
xor
push
ss
fimull
mov
pushf
lea
mov
sbb
and
pop
mov
arpl
pop
inc
sti
xchg
stos
and
push
pop
jbe
outsb
in
fists
mov
mov
faddl
cmpsl
mov
mov
leave
in
mov
ret
scas
loope
je
dec
mov
int3
lret
div
insl
popa
imul
subb
mov
xchg
aas
mov
fwait
push
lock
rorb
mov
test
inc
jl
js
add
push
aas
jl
sub
cmp
jg
push
imul
mov
jp
sahf
ds
lahf
sub
sub
mov
or
dec
leave
clc
mov
fiaddl
mov
das
xorl
mov
inc
pavgb
pop
inc
sbb
mov
pop
popa
inc
pop
push
sub
pop
push
xchg
dec
orb
stos
mov
je
push
inc
mov
jne
and
out
jo
push
das
xlat
mov
sub
push
scas
jno
or
js
push
jg
jmp
sbb
stc
mov
pop
aas
test
push
xor
push
xchg
dec
push
sbb
stc
xor
mov
imul
cmpsl
js
lret
outsl
sub
or
sbb
mov
inc
sbb
jo
push
and
sub
cmp
and
jne
addb
add
inc
repnz
jmp
jle
mov
das
int
rorl
cmp
or
and
outsb
lods
push
sub
xchg
mov
push
std
sub
sbb
leave
icebp
mov
add
pusha
cltd
or
rolb
adc
fsub
push
les
inc
mov
pop
out
bound
icebp
cmpb
add
pop
dec
cmp
adc
clc
in
rcrb
cld
adc
push
mov
lsl
mov
xor
pop
aam
cmp
jae
add
lock
sbb
cmp
sbb
jge
cmp
push
and
fmulp
push
push
leave
push
pop
shlb
adc
xchg
adc
pop
sti
xchg
ljmp
add
add
in
adc
adc
add
cmp
lea
test
fldl
jnp
xchg
rcr
or
lock
clc
sub
push
arpl
js
add
int
pop
cmpl
movsb
es
fs
sbb
int3
addl
mov
pop
nop
or
xchg
pop
jle
arpl
inc
and
push
es
call
loope
mov
aad
pusha
outsb
sub
mov
add
ror
aam
cmpsl
into
dec
inc
dec
lds
jecxz
or
push
fbld
mov
clc
ficompl
shl
mov
enter
test
jo
lea
sub
mov
cs
pop
notl
pop
or
jo
jge
sub
push
mov
cmp
adc
and
sub
sarl
push
add
dec
out
xchg
out
push
nop
sub
or
pop
cmp
mov
sti
movsb
xor
xchg
add
in
call
inc
lret
aas
outsl
addr16
rcrb
inc
divl
addb
jmp
pop
in
pop
rolb
push
subl
sbbl
xchg
jnp
mov
scas
loope
add
nop
inc
push
pop
hlt
inc
mov
sti
pop
aaa
mov
nop
movsl
icebp
lock
lods
inc
sbb
push
sub
outsl
pop
popf
faddp
dec
sbb
and
aad
nop
shrb
neg
data16
test
push
fisubl
js
mov
jno
gs
pop
stos
mov
adcb
arpl
pop
push
in
jne
pushf
cwtl
add
or
push
jbe
push
push
mov
les
gs
jg
lods
js
sub
lods
loopne
hlt
adcb
xchg
inc
daa
cwtl
outsb
push
repz
call
rclb
add
outsb
sub
add
pop
xchg
mov
fldt
mov
push
dec
js
sti
test
jg
or
cli
jmp
pop
and
adc
jmp
inc
cld
ret
cltd
outsb
jl
sti
adc
inc
je
stc
out
cld
ret
jle
mov
inc
and
pop
mov
cwtl
jmp
mov
and
mov
cmp
vpmacsswd
je
test
mov
loope
cmp
das
stos
inc
cmp
popf
lock
lea
mov
rorl
ljmp
dec
xchg
shrb
mov
in
xchg
lock
adc
lds
push
mov
insb
icebp
sbb
add
cwtl
fcmovbe
mov
and
jae
rclb
jns
hlt
xchg
jbe
in
je
xor
lahf
jns
notb
add
call
mov
or
fnsave
cld
and
push
adc
sbb
adc
push
mov
lea
sub
mov
ret
cli
and
push
enter
mov
cmp
leave
xor
pop
les
fstpt
cmp
inc
pop
jl
pop
pop
inc
push
xor
pop
mov
jne
loopne
cmpl
popl
pop
scas
xlat
jmp
inc
fdivs
pop
loope
xchg
fucom
dec
in
out
out
scas
mov
mov
and
cmc
testb
dec
je
fistps
push
notl
roll
iret
fwait
pop
int3
jne
sbb
adc
mov
mov
andl
inc
adc
adcl
inc
dec
fiadds
movsl
lds
pop
xchg
add
int3
jp
or
xlat
add
pop
and
cmpsb
aaa
cmp
cwtl
fimull
pop
aas
sti
cmp
xlat
rcrl
cli
loopne
jmp
es
pop
mov
rorb
enter
in
cmpsb
mov
imul
jb
xor
call
xor
rcrb
mov
mov
sub
add
sbb
push
test
jl
sbb
fiaddl
shrb
and
icebp
adc
jne
add
jle
repz
sbb
or
loop
cmc
xchg
lret
lahf
hlt
push
lret
sti
loop
jno
enter
xor
xchg
sahf
and
cmp
movsb
add
test
add
out
icebp
mov
outsl
mov
stos
mov
je
push
mov
lods
jne
stos
fisubrs
rcrl
mov
cmc
andl
adc
arpl
out
inc
dec
jl
decb
out
iret
or
jnp
jb
stos
cmp
cmpsb
mov
aad
cmpsl
aam
push
jbe
fbld
and
xchg
push
out
loop
dec
adc
push
lock
cwtl
or
fmuls
clc
inc
imul
out
jmp
loope
xchg
nop
mov
popa
popf
sub
sub
and
mov
mov
or
movsb
lret
xor
sbb
lds
xchg
out
push
or
fs
fbld
mov
mov
mov
cs
xchg
or
jne
mov
xor
xchg
jle
ret
xchg
dec
inc
dec
jp
mov
aad
push
pop
xchg
sbb
adc
push
dec
dec
sbb
lds
add
mov
repz
add
call
xchg
jmp
ljmp
ja
push
ja
pop
mov
lock
mov
in
ret
dec
inc
aad
aaa
pop
sbb
nop
add
add
push
xchg
iret
xchg
add
leave
rolb
mov
sbb
mov
pop
sbb
pop
lcall
clc
mov
dec
push
sub
fistpl
xor
fwait
aam
or
sub
and
mov
loop
xchg
cmp
lods
mov
test
pop
sub
inc
test
insl
mov
aad
rcll
call
push
xchg
push
mov
leave
xor
jle
xchg
mov
add
push
mov
loopne
lea
push
dec
rorl
push
outsb
adc
cmp
insb
mov
push
push
fs
cmpl
adc
scas
mov
xlat
sbb
and
pop
mov
fiaddl
sub
cmpb
icebp
loop
pop
fsubrs
adcb
js
adc
mov
jge
fmuls
jne
rol
orb
in
jl
xor
jne
or
pop
jmp
adc
mov
inc
pop
into
xor
fmull
or
rcrl
sbb
add
xchg
add
in
aam
test
push
inc
jge
cmp
pop
shlb
push
aam
pop
pop
in
and
mov
lods
or
jecxz
subl
loope
mov
fbstp
jb
and
test
cmp
push
add
enter
ja
pusha
xor
js
sahf
mov
rorb
in
adc
popa
fs
int
fwait
shrl
xchg
and
mov
subb
adc
out
mov
lret
cli
adc
mov
rcll
jl
add
mov
dec
pop
loope
mov
stos
lea
xchg
lods
lea
jl
xchg
aas
popa
sub
popf
push
sbb
jo
outsb
leave
insl
lods
push
jmp
lds
mov
push
cli
mov
pushf
stos
hlt
or
sbb
lahf
scas
dec
insb
pop
nop
arpl
xchg
or
imul
loope
jae
mov
fildl
xchg
adc
in
sbb
and
stos
or
imul
jne
and
cmpsl
popa
pop
and
jae
ret
popa
xor
cmpl
pushf
icebp
push
adc
lea
xchg
lods
out
aas
dec
lods
and
sub
push
adc
cmp
push
out
xor
sub
or
adc
daa
addr16
xor
jae
xchg
into
test
in
movsb
mov
cbtw
aas
mov
imul
push
jg
clc
rcr
sbbl
sub
pop
xor
ret
add
cmp
and
arpl
mov
push
lock
repz
leave
loop
jge
and
adc
cmpsb
mov
lahf
shr
mov
inc
pop
das
insl
mov
aaa
nop
push
stos
cld
repz
and
cmp
lea
in
xchg
fdiv
xchg
xor
mov
adc
pushf
dec
pop
loop
mov
js
jge
test
cmpsb
lods
adc
xor
add
add
js
fisubrl
shrb
orb
push
xchg
xor
stos
mov
push
imul
fstps
pop
sbb
sbb
lea
sbb
cmc
sub
rolb
out
add
lods
ret
cld
mov
and
cmc
add
and
fdivl
sbb
sbb
rcrl
mov
fdivl
push
pop
dec
cmpsl
push
mov
dec
in
stos
stc
mov
std
jno
mov
nop
imul
or
jns
ficomps
ds
push
jmp
pop
mov
jmp
dec
clc
das
sbb
sub
add
cmpsl
fidivrs
mov
xchg
int3
lea
ficompl
cmpsl
sahf
push
add
mov
jnp
jge
cltd
leave
adc
lock
lret
pop
insb
sub
xchg
and
mov
shll
add
int
push
icebp
pusha
or
jecxz
cmp
add
je
cmp
pop
sub
mov
mov
leave
or
insb
bound
cmp
add
jnp
or
in
cmp
adc
push
sbb
mov
push
sub
xchg
cli
pop
sbb
cmpsb
std
aaa
idivl
pop
shll
jle
mov
iret
xor
adc
push
ficompl
cs
push
jge
shr
rorb
mov
mov
mov
pop
mov
adc
mov
mov
push
pop
outsl
jno
and
sub
addl
leave
inc
sub
js
mov
test
lcall
fdivrs
addr16
stos
inc
insl
test
outsb
dec
pop
xor
popa
nop
mov
cmp
xor
mov
sub
in
add
shrl
xchg
mull
loop
int3
fprem
dec
mov
push
ds
cltd
divb
lock
dec
roll
jle
sub
pop
hlt
add
call
jle
xchg
lahf
cli
push
fwait
sarb
push
cmp
popf
pop
sbb
mov
popa
and
dec
push
jo
pop
lock
and
fidivrs
mov
ljmp
scas
lea
dec
clc
sbb
cmc
add
pop
jns
jl
xorb
push
icebp
xor
sub
and
iret
dec
cmp
test
xchg
inc
push
negb
xchg
cmp
add
mov
insb
pop
cmp
es
cmp
pop
lock
pop
inc
mov
in
jl
push
jb
or
mov
xchg
scas
psllw
insl
shll
sbb
sahf
or
inc
dec
cld
mov
nop
inc
add
ret
in
fwait
shlb
push
push
pushf
test
adc
xchg
mov
inc
loope
jl
stc
add
fisttps
jl
lea
mov
mov
repz
push
imul
inc
sbb
mov
push
cmp
andl
loopne
in
cmc
mov
add
xlat
push
dec
pushf
xor
stos
pop
mov
mov
mov
or
sahf
sbb
push
in
jne
sti
icebp
pop
mov
mov
adc
outsl
pop
xor
aad
cmp
rcll
adc
or
inc
clc
jg
mov
adc
cmp
or
dec
fimuls
inc
inc
ljmp
mov
jg
pop
je
or
mov
mov
stc
add
loop
clc
pusha
aad
ljmp
out
pcmpeqd
cmp
decb
bound
add
mov
adc
outsb
mov
mov
shll
test
pop
and
outsb
jne
jae
lock
lea
add
lods
adc
es
leave
pop
scas
jmp
mov
adc
cli
sbb
mov
mov
mov
add
fimull
adc
add
insl
sbb
jbe
sahf
sub
ret
stc
dec
std
test
cmp
push
mov
jg
gs
fwait
jle
jg
cmc
xor
nop
sub
cmp
inc
or
mov
bound
sahf
popa
jne
inc
rcrl
pop
xchg
mov
insl
push
push
shlb
and
add
pop
jno
xchg
push
test
pop
out
mov
nop
xchg
jno
ret
clc
add
fs
mov
mov
mov
clc
inc
dec
lahf
mov
shlb
cwtl
ds
adc
inc
mov
ret
push
jp
fwait
mov
loopne
icebp
shll
dec
test
aad
cld
arpl
jbe
ja
mov
jmp
lahf
push
mov
cmc
cmp
cwtl
je
daa
loopne
xlat
lret
cmp
out
xor
cmp
cmpsb
push
jae
mov
lea
adc
hlt
mov
in
pop
jg
mov
orl
ret
pop
mov
adc
cmc
mov
notl
cmp
sub
cld
pusha
adc
mov
lock
xchg
xchg
call
outsl
je
lret
xlat
pop
adc
jge
mov
mov
push
xlat
data16
popa
notl
sbb
loopne
inc
jae
in
pop
shrl
sarb
mov
jo
add
cmp
bound
iret
pop
pop
jecxz
test
mov
flds
and
movsl
lock
inc
jg
add
lock
int
xchg
scas
call
jl
or
sbb
insb
insl
sbb
rsm
mov
adc
stc
xchg
test
mov
mov
cmp
jne
and
add
push
lods
sbb
mov
mov
jae
add
jb
mov
cmp
mov
mull
js
push
cld
or
inc
mov
sarl
jns
mov
int
sbbl
nop
pushf
xchg
xchg
pop
jae
shl
mov
js
add
in
add
mov
ljmp
mov
pop
push
or
add
push
repnz
imul
cmp
or
dec
mov
pop
cmpsb
jmp
cmpsb
iret
pop
ljmp
mov
pop
pusha
xor
push
mov
jle
add
shl
push
pop
push
cmp
shrl
movl
dec
cs
mov
sbb
inc
lret
pop
pop
fs
sbb
inc
shll
fmull
add
andb
pop
scas
or
inc
clc
cmp
dec
movsl
add
xchg
push
flds
mov
std
xchg
mov
notl
inc
jbe
or
stos
inc
movzwl
sbb
loope
stc
inc
xor
dec
and
adc
sarl
lcall
lds
scas
xchg
jnp
lds
lea
push
or
ret
and
arpl
xor
add
pop
inc
rcrb
lods
jae
scas
ss
or
repnz
cmp
mov
cmpsb
adc
sub
xlat
jge
rcrb
inc
int
adc
push
jmp
call
or
mov
adc
popa
push
sbb
mov
inc
cltd
outsb
add
and
sub
aas
int
dec
clc
ljmp
insl
sub
dec
gs
cmp
ret
push
cmp
lahf
pusha
gs
jl
or
fldenv
or
push
inc
mov
shlb
test
add
and
xchg
inc
inc
clc
fisubrl
pop
mov
lock
sub
pop
pop
inc
jae
roll
sbb
push
icebp
and
cmc
sbb
cmpsb
in
pop
xor
stos
pushf
cli
cmpl
ds
test
aad
jno
cmp
push
sub
pop
push
jne,pt
xorl
jmp
cs
sahf
pop
xchg
sbb
pop
adc
mov
ficomps
inc
outsl
cmp
mov
shll
mov
vsubsd
rcrl
push
popa
mov
incb
push
das
dec
out
test
hlt
and
jbe
ss
stos
jnp
jge
insb
or
xchg
addl
xor
pop
je
xchg
movsb
out
or
je
rcll
mov
add
fbstp
sbb
jne
push
dec
ret
mov
mov
jp
inc
in
mov
pop
lahf
and
mov
jo
outsb
mov
xor
mov
mov
loopne
stc
loopne
test
push
add
lods
jb
jl
sahf
mov
jmp
jns
cwtl
lds
lock
int3
push
jno
ljmp
in
sahf
andl
dec
sub
in
shll
pop
jo,pn
aam
std
sarl
mov
jp
cmp
add
jp
inc
sbbb
xchg
clc
push
pusha
mov
xor
rcrl
clc
sbb
inc
push
push
sub
scas
inc
and
cs
inc
roll
mov
test
cld
test
fwait
clc
cmp
xchg
pop
mov
adc
stos
jg
mov
push
sub
or
shrl
rcrb
hlt
insl
in
cli
fimull
sbb
mov
in
pop
fs
popf
push
xchg
push
adcb
stos
push
cmp
hlt
cmc
cmpsl
jecxz
push
push
iret
stos
inc
inc
xchg
xor
arpl
std
test
pop
push
or
push
inc
and
adc
dec
das
or
and
fadds
ds
xchg
sbb
xor
sahf
sti
pop
dec
mov
mov
push
aam
mov
aaa
jb
sbb
movd
imul
adc
mov
ret
pusha
mov
mov
push
mov
xor
adc
adc
mov
ror
jecxz
daa
int3
hlt
fld
out
jmp
xor
fdivr
movsl
out
aam
and
xchg
mov
int
pop
fcompl
cld
cmp
push
loopw
js
dec
xchg
add
push
adc
ljmp
push
loopne
aas
cmp
and
push
push
arpl
mov
adc
sahf
stos
cmp
popf
jne
add
loop
add
lds
fcmove
dec
xchg
sbb
cli
adc
mov
mov
clc
repz
scas
fistl
out
pop
mov
add
inc
repnz
cmpsl
loope
ja
jne
lock
xchg
in
mov
push
add
cmpsb
aad
sbb
push
xchg
or
ret
subl
or
sbb
jl
ror
sbb
or
movsb
inc
clc
push
cld
das
sysenter
jecxz
adc
inc
mov
jns
sarb
push
mov
jo
xor
dec
cmp
cmp
mov
cmc
xchg
fucom
push
cmpsl
rcrb
pop
add
xchg
in
ds
pusha
push
or
stos
or
inc
adc
outsb
push
ret
adc
or
in
xor
or
pop
loopne
scas
repnz
sti
clc
lods
sub
ret
ds
fsubrp
lcall
rcl
push
stos
xchg
cmpsl
mov
cmp
xchg
ja
call
mov
in
or
nop
test
adc
add
or
pusha
cld
xchg
and
adc
cwtl
mov
mov
es
or
pushf
ror
aas
cmpsb
push
jne
cmp
div
test
ja
or
popa
repnz
mov
and
mov
inc
mov
mov
and
xor
ret
lahf
mov
int
popa
sbb
sub
bnd
and
pop
adc
xchg
or
data16
jl
mov
or
movsl
xchg
adc
scas
out
dec
icebp
gs
cmp
js
mov
xor
loop
mov
mov
pop
push
inc
sbb
subb
mov
ljmp
aaa
pop
sahf
int
jae
daa
mov
jno
jge
push
ljmp
cwtl
insb
dec
pop
in
add
add
mov
lock
adc
data16
movsb
add
or
ja
ljmp
es
popa
packsswb
add
xchg
and
mov
mov
add
jge
push
mov
jne
and
push
pop
pop
decl
clc
mov
or
pushf
inc
dec
mov
jne
sbb
xor
stos
div
cmp
ds
sub
jo
ret
or
adc
cmp
push
mov
imul
push
pop
inc
shlb
popa
xor
ret
in
push
cmc
push
mov
scas
movsl
pop
xchg
adc
xchg
clc
add
adc
add
xchg
andb
arpl
clc
loop
pop
jnp
mov
or
in
test
xchg
ds
idivl
hlt
xor
or
ljmp
mov
loope
lock
out
push
cld
rcrb
mov
pop
inc
mov
test
mov
or
add
push
out
jb
loopne
fnstenv
xchg
enter
mov
popa
mov
das
xchg
add
subl
sbb
ret
push
pop
in
push
xchg
inc
add
jno
cmp
add
lret
cwtl
out
leavew
add
lock
jnp
lods
fmull
and
je
or
jno
popa
rolb
jl
cld
pop
cmc
dec
imul
ss
or
sub
divb
stc
and
mov
xor
push
loop
cs
aas
and
aas
test
pop
push
push
push
or
mov
jo
mov
jge
mov
xor
jo
sbb
mov
cmpl
lds
fdiv
dec
subl
enter
ja
xchg
testb
aam
or
lods
inc
addl
mov
jecxz
inc
add
cli
hlt
outsb
xor
inc
xchg
clc
test
sbb
dec
imul
adc
ds
adc
sbb
lret
inc
nop
mov
push
pop
in
mov
insl
movl
test
hlt
lds
lcall
lea
jp
xchg
ret
subl
das
stos
subl
mov
jg
rol
aaa
mov
dec
cmp
pop
imul
jb
inc
inc
push
mov
dec
lods
icebp
ffree
and
les
cmc
mov
mov
stos
and
or
xor
movsl
mov
loope
mov
dec
sbb
mov
cmpsb
stc
or
fld
test
sub
mov
cli
jae
mov
add
add
movb
push
add
ljmp
jnp
dec
pop
loop
call
iret
fadds
ds
mov
jl
shl
pop
fidivs
rclb
mov
pop
xor
arpl
stc
pop
cmp
mov
inc
faddp
xor
ja
jno
jecxz
mov
or
outsl
loop
mov
repnz
fimuls
insb
lea
lret
cmp
dec
dec
sarb
add
mov
cmp
movsl
sub
xchg
icebp
mov
bound
rcll
cmovne
adc
mov
out
sub
dec
loopne
cmpsl
pop
dec
rol
repz
loope
cltd
xchg
sub
popa
xor
loop
mov
imul
pop
jno
push
aam
in
jmp
pop
adcl
inc
pop
pop
psllw
xchg
mov
mov
jle
sub
jnp
andb
cwtl
clc
mov
fistpll
cmp
cmp
dec
fildll
pop
xor
shl
pop
push
jnp
std
xchg
add
aas
adc
shl
stos
xor
inc
jg
adc
imul
sbb
add
loopne
fcom
adc
addl
mov
push
negb
movsb
push
mov
lret
mov
jecxz
xor
mov
push
stc
mov
pop
xchg
rolb
loop
movsb
push
xchg
cltd
push
cmc
je
pop
pop
je
and
je
xor
test
ss
sahf
cmp
call
cmpb
loopne
test
cwtl
mov
adcl
xor
enter
inc
fwait
aas
inc
in
or
cli
xchg
out
ds
ret
lods
nop
repz
aaa
mov
cmp
sbb
pop
adc
cs
pop
je
mov
orb
add
loope
loopne
mov
xchg
test
test
push
inc
cmp
xlat
sbb
push
jno
adc
add
repnz
das
mov
sub
mov
outsb
cmp
jne
into
dec
jb
insb
push
push
add
jge
mov
pop
pop
pushl
push
popf
cli
sbb
jmp
and
pushf
icebp
sbb
inc
push
jl
sbb
fisubl
jl
mov
loopne
pusha
inc
leave
mov
xor
enter
aam
nop
push
sub
test
popf
xchg
dec
js
pop
outsl
loop
lock
pushf
insl
rcrb
imul
and
dec
mov
mov
xchg
aas
push
rorb
xor
daa
xchg
out
push
insb
or
lock
inc
imul
mov
xor
jno
and
clc
jo
push
ret
clc
push
sarb
jnp
pop
sub
dec
and
icebp
fisubs
dec
clc
xchg
jo
mov
aas
mov
mov
in
xchg
jge
pop
fcomp
sti
cld
push
xor
cmpsl
xchg
mov
cmpl
mov
mov
push
mov
sub
pop
cli
sbb
stos
sub
je
rcrl
push
fimuls
repnz
push
fdivrs
aad
scas
jbe
dec
sbb
inc
and
orb
dec
loop
xor
js
cwtl
and
cmpsb
lods
sbb
out
pop
jns
dec
pusha
loop
dec
fs
stos
lea
sar
push
or
subb
loope
push
mov
sbb
push
pop
mov
je
push
test
jmp
adc
mov
jecxz
xchg
or
repz
scas
stos
adc
push
mov
cmpsb
mov
daa
clc
cwtl
daa
loopne
cmp
dec
xchg
fdivs
data16
sub
icebp
insb
or
iret
shlb
mov
clc
or
fistpl
or
push
and
enter
inc
bound
rolb
ret
movsb
and
in
enter
or
divb
js
dec
push
fimull
xor
movsb
mov
negb
push
cs
mov
dec
cmp
fucom
dec
jg
add
push
test
ret
cli
xchg
jbe
pop
pop
cwtl
into
outsb
or
ror
adc
dec
addb
pop
add
in
push
xchg
mov
jbe
sub
jns
xchg
es
mov
rcll
cs
xor
leave
bnd
es
andl
call
push
mov
inc
jl
int
push
and
icebp
repnz
add
pop
test
ljmp
jl
mov
test
shlb
movsl
jp
or
add
stc
dec
mov
cmp
mov
stos
xor
sub
dec
mov
dec
inc
jl
xor
not
int
cmp
fsubl
xorl
lcall
mov
or
loope
aad
out
loop
mov
out
arpl
xor
mov
insl
cmp
je
js
lods
cs
inc
mov
lods
push
add
je
mov
push
mov
mov
sub
and
push
or
or
add
fmuls
js
and
inc
mov
cmp
in
ss
mov
dec
test
jnp
aas
mov
je
movsb
sub
push
ds
mov
xor
rolb
rolb
insl
add
xor
fildll
andnps
lods
mov
call
jae
push
dec
sti
test
idivb
outsb
rol
jmp
jle
dec
test
icebp
adc
xchg
mov
pop
rcll
mov
xchg
pop
fsubrl
cld
mov
push
les
add
dec
jmp
jne
loope
rclb
pop
xlat
mov
pop
loopne
dec
pop
pop
pop
pop
or
or
adc
aas
cmp
ja
pop
cmp
xchg
push
es
loope
and
inc
adc
loopne
rol
adc
inc
push
xchg
popl
cli
dec
inc
xchg
mov
jg
fsubs
orb
dec
dec
mov
xor
ss
and
sbb
jnp
roll
js
and
jno
pop
sarb
cld
jg
and
cmp
aas
loop
push
dec
scas
push
pop
xlat
push
ret
push
pop
test
cmpsb
sub
sahf
stos
testb
lret
and
popa
paddusw
pop
jmp
popf
notb
addb
add
insb
jae
push
mov
push
add
inc
inc
adc
faddp
std
ja
sbbl
mov
jb
dec
push
xchg
pop
adc
iret
js
xlat
adc
adc
jae
fdivrl
shll
loopne
pop
adc
add
xchg
or
jge
imul
or
out
push
decl
lcall
bound
orb
add
rcll
dec
sarl
adc
inc
or
mov
inc
imul
pop
lock
sub
lret
popf
add
outsb
je
aam
cmc
mov
jo
cld
dec
lret
movl
jbe
scas
inc
adc
ret
pop
pop
iret
or
and
push
mov
sbb
ret
js
movsb
dec
mov
js
fisubrl
add
ficompl
and
nop
rorb
dec
push
aas
aad
ret
xchg
ficoml
fwait
add
push
pop
lds
push
sbb
in
xchg
xor
xor
popf
aad
mov
scas
or
data16
cltd
or
arpl
subl
aaa
xchg
mov
dec
je
dec
icebp
dec
movsb
sub
imul
jl
test
andb
loope
outsl
and
xor
sti
clc
pop
pop
incl
mov
mov
fwait
stos
push
cmp
enter
das
adc
jl
gs
cld
pop
mov
xchg
jmp
rcll
add
std
and
stos
stos
push
sbb
or
fstl
test
xor
stos
loope
fistps
jo
add
xchg
jg
aam
add
insb
scas
out
sbb
cmc
inc
cmp
adc
rorb
fwait
cmp
lcall
adc
or
jne
getsec
test
gs
ljmp
jmp
pop
out
jecxz
mov
call
ret
je
das
lock
fbld
je
sbb
adc
push
out
and
sbb
pop
pop
wrmsr
sbb
jo
cmp
dec
or
pushf
add
inc
aad
lcall
push
cmp
dec
cmpsb
js
pop
push
enter
lock
adc
repnz
mov
pop
xchg
nop
stos
lods
sbb
outsl
mov
xchg
mov
dec
jge
and
scas
or
movsl
add
and
andb
jmp
sarl
cmp
push
popl
or
divps
sbb
or
imul
add
push
mov
xchg
adc
int
xor
push
push
movsl
mov
xor
stc
movsb
adc
shl
in
cmp
bswap
gs
jbe
mov
xchg
push
das
pop
std
adc
push
das
repz
insl
push
xor
test
sbb
cmpsb
inc
loope
dec
sub
and
mov
sahf
inc
scas
and
jle
mov
xchg
mov
mov
icebp
mov
sub
jp
lea
lret
add
les
mov
push
sbb
shrb
repz
inc
lods
inc
shlb
or
fwait
or
dec
sub
jbe
pop
adc
pop
leave
je
loopne
pusha
dec
xlat
cld
fldt
mov
dec
cmpsl
das
fistps
cld
xchg
mull
outsl
int
add
jbe
push
fwait
test
std
add
inc
insb
sub
rcll
icebp
pop
xchg
push
xchg
mov
adc
jge
mov
push
dec
mov
inc
adc
dec
pop
push
gs
aaa
pop
mov
push
jg
cmpsb
inc
push
push
insl
pop
out
ljmp
sub
and
add
es
hlt
rorb
icebp
out
add
inc
lret
mov
push
loop
mov
xor
sbb
or
cmp
mov
out
xor
call
push
imul
shll
fcom
mov
js
add
inc
paddd
je
imul
or
mov
js
sbb
jbe
add
insl
std
into
sti
mov
push
cmp
sbb
add
mov
loopne
loope
into
rclb
dec
loopne
mov
mov
sub
nop
aas
add
pop
jp
test
jnp
mov
pop
sub
mov
cmpsb
dec
or
or
movsbl
push
sub
jl
push
icebp
ret
je
aas
push
dec
and
inc
pop
stos
add
xchg
adc
xlat
xchg
push
push
sarl
or
pop
data16
xor
dec
sub
movsl
fbstp
xchg
das
cmpsb
aas
and
outsw
adc
hlt
xchg
sub
rcpps
pushf
dec
mov
mov
dec
cld
jle
sub
std
pushl
imul
mov
mov
mov
dec
or
fprem
fisubrl
leave
adc
ss
sbbl
enter
adc
cmp
clc
movl
fs
cli
imul
lods
push
stos
imul
pop
jg
nop
cmpsb
je
or
ljmp
pop
or
sub
rcr
mov
leave
dec
popf
cmp
add
xor
add
adc
jp
jo
ret
pushf
fdivs
jge
cmc
lea
test
add
or
dec
mov
stos
test
mov
push
lcall
mov
cmp
cmpsb
inc
jle
sbb
insb
adc
mov
leave
pop
mov
es
fldt
lret
insb
fnsave
and
or
sbb
push
sub
test
call
and
sbb
sub
adc
dec
xchg
andb
dec
mov
push
popa
mov
push
push
or
fidivrl
pop
js
mov
push
shrl
fstpt
sub
lcall
xchg
inc
xor
movsb
cmc
rcr
xor
iret
in
push
les
outsl
sbb
data16
es
ljmp
xchg
mov
dec
mov
lods
in
test
push
mov
push
xor
mov
jno
stos
and
pop
mov
mov
jle
mov
mov
and
adc
das
dec
in
imul
daa
cmp
mov
and
add
fucomp
add
adc
in
or
lock
dec
push
mov
pop
in
jne
dec
aaa
cmp
xchg
mov
inc
cli
add
and
or
aaa
xchg
ret
sbb
mov
push
icebp
jno
xchg
sub
push
xchg
insb
or
mov
xchg
inc
mov
mov
in
push
inc
cmp
inc
insb
cmc
cmc
pop
xor
shll
mov
int
sbb
xor
mov
xchg
or
sbb
xchg
movsb
mov
jle
or
ljmp
imul
dec
test
and
bound
mov
dec
iret
faddl
mov
mov
loopne
jge
inc
stos
js
cs
call
aam
dec
aas
jno
push
mov
insl
fisubs
inc
push
hlt
mov
adc
aas
and
mov
lods
loope
ret
rcr
or
push
jnp
mov
jnp
test
subb
imul
incb
test
leave
or
cs
rcl
push
cmp
cmpsl
int3
jbe
iret
cmpsl
lods
add
addb
insb
ret
fisubrs
cwtl
data16
xorb
loop
stos
mov
mov
dec
dec
mov
lret
ret
xor
cmp
out
aas
stos
pop
xor
cmpsb
es
jb
les
outsb
and
movsl
xchg
movsb
push
add
nop
movsb
sti
insb
and
outsl
and
sbb
js
jecxz
inc
test
xor
lcall
pop
lea
repz
cmp
sbb
xor
pop
repnz
frstor
iret
lock
rclb
fstl
xor
adc
clc
push
pop
stos
lea
lcall
push
cmpb
rcll
lahf
pop
add
or
or
outsb
jb
shl
jb
scas
pop
lcall
mov
add
ss
xor
push
mov
push
push
cli
pop
mov
movsl
out
mov
mov
bound
or
mov
push
xchg
mov
add
xchg
outsb
sarl
xchg
or
xor
add
xlat
adc
cmpsl
cmpsb
adc
pushf
icebp
aam
mov
dec
incl
lahf
sub
push
fcomps
test
sub
xor
and
lods
js
jl
adc
cmp
jg
in
or
or
push
test
nop
push
cmp
jno,pn
add
clc
mov
xchg
out
in
xor
adc
mov
adc
or
test
pusha
sub
hlt
inc
xor
ficompl
cmp
sub
orb
out
mov
int
movsb
adc
pop
sbb
inc
pop
xchg
in
cmp
add
xchg
dec
xor
loope
mov
pop
or
mov
xchg
es
add
pop
ret
xchg
push
or
aam
fsub
insb
mov
fs
pop
popf
stos
sbb
pop
imul
and
adc
bound
and
arpl
mov
out
pop
mov
and
push
lea
lret
outsl
mov
lods
fwait
sub
pop
js
add
and
pusha
fcmovnb
ja
pop
or
pop
push
sbb
add
mov
push
or
ss
pop
mov
mov
lods
sbb
adc
cmc
test
push
pop
sbb
mov
je,pt
fwait
in
test
stos
lcall
adc
iret
clc
mov
inc
lret
mov
aas
stos
sbb
pusha
add
cld
js
mov
dec
js
bound
subb
lods
xchg
jnp
push
dec
leave
data16
fsubrs
out
cmpsb
cmp
lcall
mov
inc
adc
mov
dec
movsb
xchg
mov
lods
ljmp
icebp
mov
dec
lret
sti
cmp
int3
js
dec
fcomps
std
inc
push
inc
out
out
fnstcw
test
js
sbb
sarb
mov
sti
or
xchg
pop
popa
mov
xchg
fistpll
fst
std
and
rorb
sahf
hlt
mov
adc
jmp
jne
dec
and
pop
pop
mov
aaa
dec
stos
adc
add
into
aas
and
jb
test
dec
xor
mov
ret
pop
out
enter
or
and
das
xor
insb
mov
or
leave
cmp
fxch
mov
push
push
add
repz
lea
not
push
ds
mov
scas
inc
adc
sub
dec
cwtl
int
ret
adc
movsb
push
or
femms
js
inc
ja
push
cs
lret
hlt
adc
inc
adc
scas
sbbb
jg
mov
mov
pop
mov
loope
mov
or
cwtl
rol
push
push
in
mov
icebp
in
test
fsub
pop
out
pop
daa
popf
hlt
repz
jl
xor
pop
loope
out
rsqrtps
enter
test
scas
push
adc
dec
pop
les
imul
mov
cmp
dec
icebp
sub
in
jecxz
scas
xor
pop
rcr
cs
mov
and
jbe
lock
sbb
or
fwait
mov
sub
fimull
shl
lea
add
inc
add
test
xchg
cmc
push
outsl
js
or
cmc
outsb
and
or
or
ss
and
pop
jb
call
mov
je
movb
lea
ljmp
addb
sbb
andb
lcall
push
js
test
out
jno
mov
insl
lods
outsl
xchg
or
or
je
jle
mov
push
mov
icebp
in
test
mov
add
jnp
sub
rorl
add
rcl
adc
mov
xchg
sti
outsl
lea
movsb
loopne
and
inc
sbb
rorl
sub
loopne
pop
sub
xor
loopne
dec
iret
sarl
int3
int
fnstenv
sub
jg
cmp
sub
push
repnz
imul
inc
out
xor
dec
lea
dec
fld
enter
fstpl
outsl
adc
pushf
inc
inc
cmp
dec
inc
jge
into
loop
xor
lcall
aad
push
das
cmpsb
xchg
jo
mov
dec
jae
sub
cmp
jb
mov
and
add
out
adc
call
xor
rcrb
lock
scas
dec
into
push
adc
add
pop
sbb
cmp
cmp
mov
inc
paddb
popa
cmp
test
in
outsl
pop
sbb
bound
add
mov
int3
aaa
in
dec
sub
repnz
cmp
push
aaa
call
test
add
jbe
xorl
sub
sbbl
out
rcr
cmpsl
push
fcomps
or
mov
or
jge
lcall
int3
inc
xor
xor
cmp
movsl
mov
dec
xchg
cwtl
hlt
adc
sbb
inc
or
loope
jecxz
shr
inc
mov
pop
lods
sahf
cli
mov
ds
pushf
int
ss
cld
aam
sahf
and
test
out
cmp
mov
outsb
and
clc
lret
xor
xor
sub
cmp
xchg
pop
jp
mov
outsb
xor
lds
les
mov
orb
je
inc
xchg
jecxz
jp
dec
jge
mov
push
stos
xor
dec
pop
imull
clc
negb
and
adc
mov
adc
lock
xchg
sub
or
xlat
xchg
and
test
mov
pop
movsl
sbb
dec
push
andb
ds
test
rcrl
add
lods
or
fnstcw
sbb
add
sbb
test
rcl
adc
dec
in
and
or
cwtl
test
cmp
dec
jo,pn
sub
pop
or
fwait
andb
lret
roll
call
pop
hlt
das
and
inc
cmp
or
ret
or
or
sub
mov
and
sub
jp
pop
dec
rcrl
out
jge
cmp
outsb
add
js
stos
shll
fsts
dec
movsl
jge
cmpsb
mov
popa
cli
mov
je
movsl
sbb
outsl
shl
mov
dec
push
jmp
fbld
and
and
pop
js
std
aas
es
test
ret
push
cmpl
sbb
mov
cli
es
daa
cmp
or
jno
add
push
and
inc
cli
pop
add
mov
in
pop
ljmp
popl
dec
hlt
rcrl
mov
enter
scas
cmp
cmp
xchg
and
lahf
pop
pop
xchg
inc
add
add
and
ret
in
pop
sbb
ljmp
aas
dec
add
mov
rorl
iret
xor
jl
and
imul
bound
cld
mov
push
inc
sub
adc
push
sarl
mov
cs
dec
sub
outsl
jmp
mov
xor
inc
sahf
and
inc
scas
jg
jl
sarl
dec
inc
mov
jecxz
jbe
xor
or
inc
testl
pop
mov
and
pop
in
xchg
xor
jb
inc
loopne
ret
imul
jg
cmp
xor
push
je
in
sbb
in
imul
stc
fnsave
mov
adc
gs
clc
or
sbb
hlt
inc
jb
ret
inc
add
clc
rcrb
cs
xchg
jg
add
jle
sub
int3
sub
in
cmpl
jb
mov
sbbb
fsubrl
sub
sbb
ds
dec
outsl
or
repz
lahf
orb
and
xor
ds
test
hlt
dec
push
lahf
ret
sbb
add
dec
shlb
add
inc
js
push
sbb
and
inc
sub
and
notb
aas
xchg
push
dec
adc
push
je
pop
jns
mov
stos
mov
push
daa
fldcw
xor
xchg
push
les
cmp
test
and
cmp
sbb
roll
addr16
loop
rolb
out
push
cmp
or
hlt
popa
mov
jo
pop
sbb
push
xchg
cld
pop
push
push
or
mov
pop
or
and
dec
jl
sub
cld
stc
xchg
negb
sahf
ljmp
outsb
int3
rolb
mov
gs
or
loopne
push
mov
pop
data16
int
stos
mov
stc
jb
or
hlt
stos
orb
and
jno
dec
in
daa
movsb
icebp
inc
jb
in
or
add
and
or
mov
jo
das
out
mov
mov
imul
lahf
testb
xchg
js
xchg
stos
push
in
mov
or
mov
ds
js
inc
test
inc
inc
aas
mov
outsl
adc
hlt
sbb
je
adc
mov
or
jae
add
mov
mov
addl
xor
test
imul
cmp
jb
leave
pushf
xchg
sti
inc
mov
sbb
adc
adc
mov
and
repz
ljmp
cld
shll
push
shr
shr
imul
xchg
add
jno
adc
sbb
repnz
jne
imul
mov
sbb
cmp
je
sub
fdivs
sbb
mov
loopne
scas
push
cmc
sbb
adc
lret
loop
mov
pop
lahf
push
std
and
jno
iret
inc
cmp
xchg
add
adc
icebp
loope
jge
data16
cld
add
js
sbb
xchg
push
sub
sub
or
fisttpl
inc
and
adc
and
add
dec
or
dec
mov
popf
xor
movsb
pop
cs
aad
and
push
scas
rorb
push
dec
cld
ljmp
je
push
je
shlb
clc
dec
mov
bsr
lcall
aas
lds
jmp
push
sbb
mov
aam
mov
icebp
icebp
or
cmp
mov
sahf
subl
jmp
leave
cmp
jmp
ds
xchg
stc
lea
mov
jmp
xor
aam
adcl
mov
add
sbb
push
ficoml
aam
cmp
adc
or
fstps
fstl
test
andl
add
sbb
and
std
sarb
jmp
xor
inc
loopne
cli
xchg
push
pop
push
ror
clc
cwtl
pop
adc
loop
clc
and
inc
mov
out
pop
dec
fdivr
fisttpll
mov
and
or
or
add
outsl
lea
xchg
daa
jnp
adc
cmp
push
mov
bswap
sub
cltd
mov
lock
adcb
or
pop
loop
ja
je
subb
cs
xchg
xor
ret
pop
and
lods
cmpsb
fstl
ja
sub
js
or
stos
xor
xchg
mov
add
push
aaa
adc
cmp
hlt
lods
lret
adc
or
ret
pop
pop
jne
sub
mov
aad
sub
fdivr
cmp
add
jp
dec
dec
lds
iret
mov
and
aas
pop
and
mov
scas
orb
mov
add
mov
cmpsl
rcll
lret
aaa
ficomps
mov
in
sarl
jno
mov
test
mov
test
push
sub
les
and
dec
filds
fsubr
rcl
cmovb
hlt
xor
insl
jge
outsl
stc
pop
in
xlat
and
repz
xchg
mov
lock
sbb
popa
das
jne
in
int
lock
aad
mov
clc
sbb
push
nop
inc
mov
pop
mov
enter
adc
dec
add
mov
mov
loopne
add
inc
lcall
sbb
hlt
xchg
aad
mov
inc
pop
je
add
inc
mov
js
pushfw
hlt
mov
jle
mov
ror
cwtl
ret
inc
sbbl
test
add
enter
jmp
dec
hlt
push
bound
inc
or
inc
clc
xchg
js
push
or
push
inc
and
jmp
xorl
pop
cmp
or
mov
aaa
push
shll
scas
arpl
jle
xlat
mov
fcom
sub
cld
and
and
or
xchg
les
jge
add
test
xor
xchg
lds
movsl
cltd
add
push
divl
sbb
in
loop
xchg
lock
mov
es
jmp
iret
div
inc
pop
sbb
test
cmpsb
les
inc
add
push
mov
fsub
rcrb
xchg
cmp
test
xchg
mov
inc
cmp
iret
dec
cmp
inc
jb
lock
xchg
fsubl
popf
and
inc
adc
dec
xchg
mov
mov
adc
push
fistl
sub
outsl
das
push
out
cmp
pop
cwtl
nop
mov
out
mov
pusha
daa
nop
dec
stos
sti
lock
les
add
dec
shrb
xchg
sbb
andb
or
ficomps
pop
inc
jecxz
lret
xchg
in
xor
rolb
sahf
cmp
ljmp
orl
or
outsl
adc
pop
mov
cmp
dec
syscall
cmc
aas
loope
dec
dec
xchg
sbb
fbld
and
xchg
repz
not
cmp
xchg
loope
mov
jge
xchg
and
sub
push
adc
cmp
js
jbe
adc
inc
add
mov
adc
int
ret
push
mov
add
syscall
xor
call
enter
cld
aaa
aas
xor
hlt
stos
stc
push
add
and
lods
sub
push
ret
mov
loopne
aam
mov
ss
mov
aas
push
sub
aam
adc
push
pop
inc
in
movsb
arpl
jns
mov
cmpsl
aad
lret
pop
adc
pop
cmp
mov
and
jp
sarl
cmp
imul
and
cmp
adc
jl
inc
sbb
adc
ret
inc
lcall
mov
and
mov
pop
inc
int3
xchg
jo
sbb
repz
inc
mov
push
je
mov
or
lcall
stc
sub
insb
sub
mov
jl
aas
insb
cmp
dec
loopne
loope
mov
pop
movb
mov
movsl
loope
add
mov
and
pop
icebp
pop
test
lock
push
addr16
cwtl
inc
clc
and
or
into
mov
cmpsl
push
xorb
test
call
mov
add
mov
dec
and
sarb
xchg
pushl
mov
js
cmp
clc
xchg
mov
popl
mov
dec
push
xor
scas
les
cmp
rcll
test
pop
cmc
inc
shrb
jmp
cs
sub
inc
sub
lret
leave
cli
cmc
insl
adc
pop
jne
sbb
or
dec
and
sub
cltd
stc
lods
add
push
mov
cwtl
repnz
add
adc
aas
stos
sub
xor
and
xchg
dec
add
and
sarb
mov
loop
insb
push
pop
sbb
insl
call
fildl
out
mov
jno
mov
mov
pop
cmp
add
fbstp
clc
mov
inc
cmpsb
js
inc
jmp
mov
mov
fcomps
ds
and
stos
add
movb
adc
dec
sahf
push
xor
lret
fstps
or
add
mov
cmp
call
adc
popa
push
stc
xchg
das
outsl
xor
test
cli
sub
mov
int
sub
mov
out
cmpsl
fisttpl
adcb
cmp
and
cwtl
faddl
popa
inc
in
or
rorb
jno
fs
pushf
add
jnp
ja
insb
pop
fisubrl
leave
ss
shlb
add
je
and
mov
test
fwait
outsl
and
xor
and
adc
in
ret
jae
dec
add
pushf
push
nop
rolb
enter
xor
divl
adc
rorb
inc
mov
mov
das
push
xor
xchg
mov
addps
pop
mov
mov
mov
cli
xchg
mov
or
ret
mov
push
xor
jecxz
dec
sarl
or
pop
subl
mov
outsl
mov
hlt
push
insl
jmp
adcb
jge
xorl
xor
pop
nop
jnp
jo
pop
loopne
movsl
pavgw
arpl
out
jecxz
lea
jecxz
or
adc
popf
cmp
mov
mov
sbb
popa
inc
repz
jns
test
pop
aaa
lock
jns
xlat
mov
sarb
mov
les
ror
insb
sub
adc
add
mov
xor
rol
inc
xchg
ss
das
pushl
push
jl
insb
inc
pusha
xor
mov
cmp
rolb
mov
pop
imul
test
movsb
sub
int3
sub
push
clc
add
pop
sahf
inc
jmp
pop
pop
sbb
mov
dec
push
xchg
or
rcl
arpl
pop
and
mov
int3
inc
insb
dec
imul
jecxz
nop
loopne
mov
cmpsl
arpl
test
sti
lret
and
push
pop
mov
and
sub
xchg
out
call
mov
call
icebp
lahf
scas
mov
in
inc
inc
movsb
sub
sbb
jge
cmp
xchg
rcll
xchg
add
xlat
nopl
push
inc
repz
loope
dec
popf
inc
std
cwtl
pavgw
add
add
int3
dec
jbe
dec
pop
imul
push
cld
cmp
and
fwait
cmp
or
ja
sbb
shrl
pop
cmpsb
pop
aam
js
lds
leave
mov
cmp
sbb
aaa
lahf
subb
adc
pop
pop
mov
int3
push
and
sbb
imul
and
fistpl
add
ja
je
or
jmp
jp
jb
xchg
cld
push
shrb
and
sbb
mov
or
jb
mov
inc
aaa
xor
repnz
pop
loope
inc
pushf
or
fisubrs
lcall
mov
roll
xchg
mov
push
adc
loopne
xor
ja
push
inc
xlat
jecxz
mov
dec
pop
lock
bound
insl
fidivrl
xchg
or
in
sbb
rol
jl
imul
iret
out
mov
and
std
jl
testb
add
jno
xor
stos
and
dec
or
inc
call
jecxz
iret
jnp
push
loope
push
lock
sub
ret
out
fcmove
jnp
cmp
leave
dec
insl
lock
cmp
scas
add
data16
in
xor
adc
nop
jle
test
xor
sbb
push
fwait
daa
mov
xchg
sub
mov
mov
sarb
adc
push
or
pop
or
lret
xchg
adc
orb
sbb
lds
inc
add
lea
loopne
shll
pop
mov
pop
sub
lock
ds
arpl
adc
cmp
jae
les
push
push
icebp
repnz
test
mov
loop
xchg
test
js
lahf
cmp
cltd
push
jle
pop
push
sbb
stos
rclb
call
icebp
mov
xor
daa
outsl
push
or
jnp
imul
mov
js
cmp
pop
add
add
push
cmp
sbb
push
outsl
mov
ds
ficompl
add
test
popa
outsb
xchg
jge
pop
and
sbb
out
loopne
sub
movsb
sbb
push
inc
push
cmp
and
mov
inc
mov
lds
push
push
or
je
out
cmp
fsubl
xor
out
imul
enter
ds
std
cli
cmp
movl
add
sub
mov
stc
imul
xor
minps
lds
mov
imul
push
and
dec
pop
das
mov
shlb
ret
ds
jecxz
cmpsb
aaa
adc
add
and
aaa
in
jne
subb
dec
ljmp
add
sub
pop
jle
fwait
pop
pop
inc
es
add
push
mov
in
pop
or
adc
jecxz
mov
sub
push
mov
mov
inc
out
bound
roll
popl
cmpsl
xchg
cld
mov
aas
jnp
scas
js
std
jne
push
dec
xchg
sbb
mov
push
test
xchg
adc
push
aas
and
rcrl
cmpsl
mov
xchg
imul
xor
inc
outsb
rclb
ret
lahf
jp
lcall
adc
xor
cmpsl
or
jmp
or
fisubs
addl
fmull
lea
scas
dec
fstpl
push
es
add
and
and
icebp
ds
dec
xor
jbe
test
mov
inc
jmp
imul
shlb
xor
jno
stos
stos
add
les
mov
mov
lcall
sub
js
pop
int
data16
push
test
push
rcll
adc
sbb
fiaddl
rol
cld
mov
inc
aaa
or
cmp
sub
pop
sub
ficoms
jp
sahf
lret
jecxz
xor
int3
mov
stos
insl
xchg
ror
repz
add
repnz
mov
jl
jbe
xchg
das
jecxz
inc
xor
loop
fsts
scas
inc
push
shrb
sub
stos
cmpsl
aam
and
or
mov
lahf
loop
int3
fcomps
mov
mov
or
jp
add
mov
push
insl
jne
lods
adc
pop
test
sbb
divb
mull
inc
mov
mov
lock
push
mov
scas
je
je
push
adc
xorb
mov
mov
into
fcoml
cwtl
inc
or
dec
xchg
pop
rolb
repz
sbb
mov
xchg
add
mov
mov
push
dec
scas
or
shr
sarl
insb
dec
and
cld
daa
hlt
or
jae
ror
push
jge
clc
pusha
pushf
daa
mov
add
gs
movsb
jecxz
stc
mov
jnp
test
xchg
mov
push
mov
or
in
pop
pusha
rcll
or
jbe
arpl
and
cld
inc
pop
in
and
jbe
adcb
pop
push
xorb
icebp
add
inc
fstl
cmc
mov
cld
sub
mov
fisubrl
push
aaa
ficoml
jo
insb
notb
adc
mov
lods
sbb
mov
dec
adc
adc
sbb
mov
lret
data16
pop
cmp
push
cltd
push
push
jb
repz
push
out
andb
rclb
mov
pop
mov
inc
call
cli
mov
mov
gs
fcoms
cmp
and
jae
testb
cmp
jae
sub
adc
xor
vmovhlps
clc
add
inc
adc
xor
jo
movsb
repnz
ret
rcll
mov
pop
and
lods
push
loopne
ret
data16
fildll
rcrb
icebp
push
push
sub
cmp
fsubrs
mov
ret
imul
popa
loope
inc
and
mov
mov
adc
jecxz
dec
popa
push
dec
jle
or
aam
sti
or
push
fidivrl
push
int3
pop
jmp
push
or
dec
add
call
stc
cmp
inc
sti
scas
test
mov
mov
rcl
xchg
insb
int3
popf
dec
mov
adcb
cltd
fdivrs
mov
cmpsb
hlt
mov
add
pop
adc
add
cmc
add
push
push
movl
loope
movsl
lcall
movl
pop
cmp
mov
js
fiadds
stos
test
dec
pop
ja
hlt
inc
clc
inc
inc
daa
mov
ja
inc
ss
mov
not
and
sbb
icebp
ss
jecxz
rol
loope
cmp
out
arpl
push
pop
repz
fisubrs
cld
lock
imul
int3
mov
cmp
sbbb
push
outsl
adc
shll
fbstp
jp
push
ja
rcrb
fwait
test
mov
sbb
ss
and
jp
mov
sbb
cmp
pop
sub
jne
sub
xchg
mov
xlat
inc
stos
pop
pop
inc
add
aad
jo
and
mov
dec
sbb
adc
xor
xchg
dec
add
bound
mov
test
sub
mov
xor
push
fisttpl
lods
push
xchg
icebp
mov
pop
aaa
dec
push
jno
push
shlb
ss
pushf
inc
inc
xor
js
aad
enter
or
pop
sub
add
pusha
mov
mov
mov
mov
imul
ficoms
addr16
add
sub
mov
xchg
jl
dec
mov
lock
aad
xchg
mov
fstl
and
jmp
xor
adc
stc
insl
push
jno
stc
into
cltd
lret
adc
pop
mov
and
mov
adc
dec
xor
cmp
jle
pop
loop
xor
push
or
jp
add
inc
mov
sbbl
sbb
andl
fwait
push
ljmp
mov
jno
jecxz
and
or
or
push
scas
inc
ja
sub
and
daa
clc
sub
shlb
mov
fsubrs
sahf
adc
or
xlat
dec
sbb
es
lcall
movl
xor
inc
rcl
and
xor
xchg
jbe
nop
fs
fistl
mov
mov
inc
nop
add
cmpl
fcmovnbe
cld
inc
daa
mov
ljmp
loope
in
enter
inc
jle
push
sahf
cmc
push
adc
icebp
mov
test
xchg
cld
mov
mov
jmp
pop
xor
rcll
ljmp
mov
out
pusha
and
add
aas
xor
jle
stos
pushf
and
cwtl
sbb
scas
je
add
sub
jo
pusha
xor
xchg
sbb
test
cmp
pop
push
aas
clc
lds
mov
mov
and
xlat
cmp
incb
dec
std
jle
push
popa
pop
or
loope
xor
filds
push
call
aad
cmpsb
mov
mov
je
cmp
imul
pop
loope
cmp
or
icebp
pop
popf
lock
mov
jbe
hlt
mov
sahf
mov
es
adc
dec
add
rcrb
xchg
or
adc
lods
stc
bound
loopne
add
mov
pop
and
scas
xlat
stos
xchg
sub
cmp
push
inc
sub
sti
fld
loopne
cmp
lock
jno
cmp
jecxz
adc
xchg
das
mov
loopne
and
push
imul
jl
cmpsb
lcall
and
ds
out
inc
dec
test
cmpl
push
jp
pop
or
inc
pop
mov
push
cmp
popf
push
sub
and
mov
push
or
mov
roll
add
mov
or
pop
fbstp
pop
int
cmp
and
jg
sti
push
or
scas
rorl
ret
ret
push
ds
test
xor
aam
rcrb
add
dec
cmpb
push
ffreep
cmc
inc
xchg
xorl
repz
dec
lods
mov
sbb
xchg
fs
push
sbb
push
sbb
ret
pusha
xlat
push
pop
cli
adc
jmp
dec
ds
aas
xor
inc
and
jo
xlat
push
arpl
dec
add
sbb
fmull
pop
stos
ja
mov
lock
lods
data16
or
pop
cwtl
xor
push
push
xor
nop
hlt
xchg
sbbl
xor
mov
xor
jo
shll
jp
test
xor
inc
and
hlt
add
sub
movsb
mov
addl
mov
in
xor
ret
not
xor
subl
repnz
push
jns
sbb
stc
xor
orb
rclb
inc
sub
add
out
in
adc
data16
jp
inc
rcr
cmc
mul
mov
hlt
test
repnz
scas
leave
jae
inc
sbb
jp
ret
jl
add
inc
mov
movsb
mov
xlat
sub
mov
add
lods
or
std
outsb
add
mov
lret
ja
mov
mov
xchg
xor
mov
ficomps
xchg
mov
xchg
sbb
les
pop
push
and
fldenv
mov
sbb
data16
stos
in
xor
mov
popa
pusha
iret
sub
movb
mov
or
rcl
jmp
jge
jo
jno
mov
js
aad
bound
push
dec
imul
test
ds
lock
mov
cld
xor
pop
xchg
dec
popl
inc
lds
xor
add
pop
xor
mov
aam
jl
fsubl
testb
xchg
sti
imul
adc
inc
jle
mov
lcall
mov
pop
popa
repnz
mov
xchg
push
cmp
sub
scas
lds
iret
add
jmp
repz
adc
mov
pop
stos
loope
test
xor
cld
push
pusha
incl
je
push
lret
add
movsb
jl
rcrl
xchg
movsl
int3
addr16
jmp
xor
outsb
pop
xchg
test
xor
xchg
xchg
fldt
hlt
shlb
int3
pushf
loope
pop
and
int
xor
mov
mov
test
add
in
pop
add
daa
xorb
call
mov
adc
iret
cmp
jo
push
lea
clc
push
or
sbb
lock
xor
xchg
stos
push
inc
int3
push
mov
in
jmp
adc
loope
push
xchg
arpl
cld
sbb
sbb
mov
jne
xchg
clc
or
jg
lds
and
push
data16
cmp
pop
test
and
lock
push
fs
cli
ficoml
bnd
stos
push
and
lahf
xchg
cmpsb
mov
addr16
xor
mov
test
in
sub
in
fcoms
inc
dec
jnp
dec
andl
icebp
xchg
clc
loopne
std
pop
in
adc
inc
lret
js
insl
fwait
rcrl
adc
xchg
dec
scas
inc
sub
adc
xchg
data16
sbb
test
cmpsb
sbb
pop
xchg
inc
ljmp
and
inc
adc
les
and
addr16
pop
mov
pop
pop
sahf
nop
je
iret
add
call
dec
xchg
mov
shll
cmp
out
jmp
clc
bound
sahf
les
mov
inc
sub
dec
loopne
repz
add
clc
or
sarl
ds
pushf
and
sarl
loop
shll
inc
aas
gs
ret
dec
mov
fisubrl
ret
inc
mov
into
lret
cwtl
or
ds
dec
and
jmp
xchg
mov
insb
cmc
loopne
cltd
adc
ljmp
or
pop
jle
inc
cs
adc
push
inc
andb
mov
les
pop
and
jne
test
lds
inc
sbb
lahf
xlat
push
dec
dec
js
lret
pusha
mov
loop
mov
insl
sub
inc
mov
inc
fdivrp
sbb
mov
add
inc
cwtl
aam
push
add
vpsllw
xchg
pop
stos
cmpb
inc
loopne
sub
pop
shl
push
sbb
insb
and
pop
cmp
loop,pt
adc
mov
call
add
lea
pop
and
lock
and
add
fcomps
adc
or
imulb
js
sub
je
test
lcall
mul
in
jo,pn
aas
pop
xor
push
int
xchg
mov
lock
test
ljmp
fmull
imul
movsl
or
leave
cmp
lahf
jns
cwtl
xor
cwtl
push
push
add
in
loopne
pop
dec
in
dec
ret
sbb
aam
push
or
push
enter
cli
hlt
push
mov
ficoms
test
jnp
inc
mov
cmp
jb
xor
xor
rclb
cld
pop
icebp
or
pop
or
out
dec
xchg
daa
or
fdivs
hlt
push
dec
pop
mov
push
js
mov
pop
cmp
xorl
icebp
inc
jne
add
cmp
js
dec
lret
aad
test
and
fnstcw
mov
out
cmc
sbb
mov
stos
scas
loop
test
stos
sbb
outsb
fmull
or
adc
jne
push
cld
rolb
add
cmp
push
jae
mov
loope
fdivr
ljmp
dec
data16
xchg
shl
jnp
shlb
das
xorl
arpl
xor
lods
jnp
fmuls
pop
inc
add
stc
jl,pn
testb
cmp
or
imul
fnstenv
pop
sbb
jl
dec
mov
xchg
loope
push
xchg
fldl
jmp
or
adc
add
mov
aam
dec
ret
adc
jecxz
pop
imulb
jnp
jle
ljmp
mov
and
in
lds
push
movsb
scas
or
sub
les
hlt
addl
ret
mov
data16
xorb
pop
sti
add
lahf
push
xchg
arpl
or
in
inc
mov
xchg
orb
test
aam
jns
decb
cmp
pop
sub
mov
aad
inc
pop
cmpb
pop
cmp
xchg
lcall
dec
add
rorl
adc
push
push
jge
fisubs
adc
aaa
cmpsl
in
mov
mov
push
in
ds
sub
xor
push
adc
cmp
sbb
addb
repz
xchg
dec
shrb
rolb
add
out
das
stos
xchg
loope
mov
mov
push
out
int3
adc
jo
add
imul
dec
daa
push
dec
pop
add
cmpsb
idivl
lcall
aad
xor
xor
pop
movsl
aas
loop
add
js
lock
adc
test
gs
popl
cmp
hlt
jns
icebp
xchg
lock
movsl
imul
adc
lods
mov
movsb
adc
xchg
inc
dec
mov
mov
sbb
pop
dec
add
in
repnz
das
loop
aad
sub
or
mov
dec
std
sbb
cwtl
in
xor
add
dec
add
mov
mov
mul
pop
rorl
pop
inc
add
popf
push
xor
in
mov
loopne
mov
cmpsl
das
andl
dec
les
cli
xor
cmp
xchg
mov
aam
jnp
loope
ficoml
out
add
push
rcll
es
jle
xchg
adc
xor
pop
sahf
mov
inc
cld
push
popf
or
jecxz
jbe
pop
xor
adc
cld
mov
pop
mov
jmp
sbb
mov
jno
xchg
in
adc
andb
xor
scas
mov
push
jbe
sbb
xor
sbb
dec
loopne
adc
repnz
cmp
fs
movb
add
insl
aas
xor
lcall
bound
adc
mov
hlt
and
and
inc
fs
cld
stos
in
dec
add
cli
xlat
mov
adc
pop
loopne
mov
call
add
jp
daa
rcl
mov
mov
xchg
pop
dec
mov
add
es
jne
mov
out
je
jl
or
sbb
test
ljmp
xchg
and
aad
lock
stos
xchg
enter
fwait
sbb
xchg
pop
or
and
push
test
fildll
pop
jl
ss
jnp
int3
sub
cmc
inc
aas
mov
add
lret
fwait
int3
imul
aas
dec
pop
xlat
mov
sub
mov
xchg
sub
or
sbb
cmc
cs
movsb
mov
jae
pop
jb
mov
fwait
push
gs
inc
and
pop
aad
aad
push
mov
pop
pusha
push
lret
xor
add
or
or
xor
jae
add
pop
stc
push
popa
movsb
idivb
pop
gs
lods
aad
inc
stos
jbe
adc
xchg
cmpsb
loop
ret
cmovne
xor
int
push
inc
outsb
push
leave
cmpsl
jecxz
add
addr16
and
adc
shll
dec
lcall
out
leave
ljmp
in
incb
call
jmp
or
dec
pop
xchg
scas
scas
shlb
and
enter
lret
aaa
jle
lock
es
pop
call
sbb
ja
add
and
nop
das
mov
fs
mov
and
test
jno
or
inc
jo
push
cmp
pop
dec
aam
lret
cmp
dec
jae
lods
xchg
movsl
ficompl
daa
leave
cmp
and
aam
or
xor
dec
mov
inc
das
mov
and
sub
test
andb
inc
bound
mov
lahf
inc
jl
xor
push
xor
xchg
or
fstpt
xchg
sub
dec
shlb
insb
filds
adc
lcall
or
std
test
mov
pushl
rcrb
test
cmp
xlat
hlt
test
add
add
cli
dec
pusha
or
test
outsb
xor
repz
bound
int
out
mov
lahf
fisttps
aas
ds
dec
test
cmpsl
xor
mov
xchg
or
loopne
je
add
inc
cmp
data16
mov
push
decb
nop
pop
push
out
dec
mov
sub
out
scas
mov
dec
loop
rorl
xchg
js,pt
jg
movsb
dec
adc
xchg
cs
lret
add
cmpxchg
sbb
inc
jg
dec
pop
mov
add
lahf
mov
call
ds
in
push
jbe
pop
cwtl
jmp
loopne
repnz
jl
js
mov
jb
jo
lds
xor
push
pop
aam
push
je
xchg
aam
or
cltd
inc
xor
movb
jp
mov
cmpsl
lods
mov
movsl
loop
push
and
sbb
or
loop
push
push
or
mov
cld
imul
mulb
xor
stc
mov
pop
clc
mov
es
xorb
mov
loop
add
sahf
bound
add
jg
mov
leave
rcrl
inc
andl
xchg
scas
lret
pop
mov
push
or
fs
push
push
sbb
xchg
sbb
xor
push
js
pushl
xor
mov
daa
sbb
je
scas
mov
fcomip
add
pop
repnz
add
xchg
imulb
mov
movsb
pop
andb
bound
mov
sahf
dec
jmp
scas
loop
xor
jo
cmp
xor
cmc
sub
pop
xchg
xor
mov
jl
jns
mov
les
enter
mov
and
test
sti
sbbl
push
ret
js
sub
iret
xor
mov
jbe
push
cmp
sub
mov
jp
jo
sbb
sbb
sbb
fidivrl
fnstenv
mov
das
sub
dec
xor
sub
mov
or
push
sbb
mov
ret
inc
insb
adc
insb
or
je
push
int3
sarl
push
or
push
daa
push
cmp
jmp
pop
xor
adc
movl
faddl
loopne
ret
dec
push
push
inc
mov
sub
je
jg
les
sbb
cmpsl
sub
cmp
lret
jp
dec
fcomps
cmpsb
cli
lods
repz
lods
movsb
daa
call
cmp
or
cmp
xlat
adcb
mov
xor
lea
fildll
mov
loopne
adc
popf
cli
imul
push
popf
les
jb
adc
rcll
fstl
cmc
int3
jge
test
mov
sub
imul
jb
mov
lds
stc
dec
cmp
js
adc
xor
scas
popf
nop
aaa
test
mov
mov
pop
loope
jns
jne
call
ret
ds
pop
in
sbb
icebp
jle
jle
scas
sbb
adc
push
div
pusha
sub
int
in
jae
ljmp
fsubs
lea
adc
mov
dec
lcall
js
cmpsl
sti
adc
lock
dec
and
into
and
cmpl
into
aas
mov
mov
popa
sub
push
add
lock
enter
pop
test
and
test
cmpsl
mov
or
fistl
push
mov
cmp
push
fcomps
lock
pop
mov
pop
rolb
ret
cld
mov
jno
pop
les
ljmp
push
mov
jge
mov
lods
add
je
flds
xor
sbb
cmp
dec
sbb
sti
push
insb
jns
adc
xor
inc
loop
call
es
pop
push
insb
out
or
fiadds
in
je
adc
icebp
and
loope
popf
or
cmpsb
push
xchg
jo
pushf
mov
cmp
adcl
cmpb
in
shrl
add
jae
outsb
sbb
adc
nop
sub
inc
bound
sub
stc
daa
or
add
pop
jae
sub
inc
test
mov
in
mov
cld
cmc
loope
mov
mov
inc
or
fdivs
sbb
jo
and
xor
decl
inc
push
addl
stos
scas
pop
and
lock
rclb
pop
cld
pushf
cmp
mov
aam
test
test
fs
push
iret
and
and
mov
inc
lds
cmp
inc
std
inc
cmpsb
popa
xor
repz
aas
orb
sbb
int
sarb
mov
rep
mov
loopne
in
sbb
rol
call
inc
enter
iret
stos
or
inc
shll
mov
sub
xchg
iret
mov
cld
pop
call
xchg
mov
adc
adc
xchg
add
push
jns
jge
test
mov
cmp
pop
and
aam
out
push
jecxz
leave
testl
and
hlt
or
mov
sbb
add
stc
sbb
loopne
cld
or
push
pop
pop
pop
ljmp
mov
mov
pop
scas
cmp
inc
adc
push
js
xlat
dec
cld
or
xchg
pop
loopne
in
adc
or
mov
aas
and
xor
daa
dec
out
cli
mov
pop
sbb
pop
xor
and
sbb
ret
dec
lods
sbb
xchg
outsl
ja
stos
inc
mov
inc
andnps
rcrb
aas
xchg
out
or
scas
add
repz
lret
lods
dec
ja
int
mov
sbb
push
or
shlb
jg
icebp
iret
cmp
les
sub
jge
xchg
or
movsl
mov
es
push
mov
je
scas
lcall
dec
test
push
insb
cmp
adc
push
aaa
mull
andl
mov
adc
and
test
pop
stos
mov
sbb
inc
inc
sub
sarb
popl
bound
dec
or
dec
loope
sub
push
jl
iret
push
inc
push
push
fdivrl
out
mov
push
mov
mov
pop
xor
imul
pop
les
and
jbe
or
movsl
js
dec
sub
xor
add
or
add
fisttps
add
aaa
loop
pop
jno
sti
mov
mov
pop
jg
sub
cli
popa
shll
mov
mov
je
fdivl
jae
push
add
sbb
jmp
sub
leave
and
sub
les
pusha
outsl
stos
sub
pop
cmpsl
jne
and
adc
inc
mov
or
call
fisttpll
scas
cmp
aad
mov
mov
push
add
mov
daa
ret
sub
inc
ret
sbb
inc
sub
into
fildl
jmp
addl
push
es
xlat
aas
cmp
dec
bound
loope
or
ljmp
cwtl
subl
shlb
pop
jno
icebp
shl
call
sbb
mov
jecxz
pop
stos
sub
test
and
lcall
psubw
mov
xor
sub
jo
repz
adc
mov
std
or
add
jge
sub
outsl
mov
mov
sarb
in
in
or
jmp
mov
int
pop
pop
jnp
aad
jae
aad
jle
pop
fstpl
jp
push
cmpb
in
push
pop
lock
loop
sbb
insl
adc
add
jg
sub
stc
push
adc
mov
add
xchg
mov
add
sub
int3
push
jo
add
cmp
lods
and
xchg
inc
cmpsb
jmp
test
mov
cmp
mov
add
inc
mov
test
ss
nop
sbb
sahf
jp
and
scas
icebp
lahf
adc
repz
sub
clc
les
test
pushf
push
aaa
add
lea
cwtl
or
popa
cmp
lock
cmp
jl
lret
xor
sbb
add
les
mov
lock
mov
mov
dec
xor
mov
into
cmp
mov
xchg
jp
mov
nop
and
pop
ljmp
dec
and
cli
scas
jne
loop
cmpsl
fisubs
and
mov
mov
xor
push
lods
lahf
pop
orl
ja
and
ljmp
jp
inc
idiv
idivb
jmp
lock
jns
fstl
inc
mov
push
test
sarl
adc
test
cli
out
dec
push
cmp
gs
bsf
fistps
jae
mov
int
pop
adcb
mov
and
std
cmpsl
gs
loop,pt
xchg
xor
mov
sbb
or
lcall
or
outsb
sbb
xchg
aaa
das
icebp
inc
xor
lahf
scas
mov
lods
fs
xchg
mov
or
insb
int3
jno
or
adc
and
dec
pop
mov
cs
enter
mov
in
sti
arpl
enter
ja
xor
xor
mov
mov
notl
in
lcall
adc
jno
lcall
out
aam
lock
xor
adcb
insb
or
pop
rorl
fsts
bound
loope
jne
in
dec
xchg
push
and
xor
adc
sub
pop
out
sbb
sub
hlt
mov
xchg
cld
lea
add
bound
stos
adc
mov
dec
jp
mov
xchg
lods
subb
add
filds
sub
push
sbb
lock
and
mov
test
mov
aam
pop
xor
stos
jg
test
inc
cwtl
lock
mov
icebp
popf
xor
jp
ds
xchg
cmp
push
inc
inc
inc
xchg
cs
inc
xor
pop
fsub
pop
inc
xchg
jge
addl
pop
pop
jbe
ss
mov
repz
outsl
pop
scas
jecxz
cli
mov
push
sub
test
xor
inc
lods
movb
aad
rcr
xor
nop
into
les
mov
cmc
xchg
aaa
push
jle
inc
inc
shll
loopne
xchg
jbe
test
decb
cmp
fstps
and
mov
adcl
test
add
and
aaa
xor
fsubrl
sub
push
xor
cld
and
js
bound
inc
ret
out
push
ljmp
loop
hlt
fadds
mov
js
mov
inc
js
xchg
pop
mov
add
mov
fs
cli
movsl
and
mov
scas
xlat
mov
add
scas
fidivrs
pusha
loope
mov
pusha
adc
sub
pop
movsl
stos
fildl
lds
mov
push
xor
xor
movl
adc
lds
fs
mov
sahf
mov
icebp
jp
inc
scas
sub
push
or
fidivs
add
push
hlt
push
jnp
mov
adc
and
add
fiaddl
pushf
mov
das
shrb
aad
sub
dec
mov
into
push
rolb
jae
jo
inc
daa
jle
fwait
push
push
jg
mov
inc
sub
xchg
jns
aaa
clc
inc
push
xor
adc
sub
inc
xchg
repz
add
pop
add
cmpsl
bound
mov
cli
cli
loop
std
movl
inc
stos
sbb
push
mov
xor
cmc
cltd
mov
push
xor
arpl
aam
jo
dec
add
mov
mov
shrl
cmp
clc
int
cld
shrl
pop
sbb
outsl
sbb
sarb
in
xor
inc
test
mov
cli
lods
mov
lds
adc
loope
or
mov
pop
in
pushf
cmp
adc
cmp
gs
ret
xor
or
subb
ljmp
rol
mov
lret
mov
jle
fidivs
inc
cmpsb
cmc
rcl
dec
ret
lea
icebp
iret
cmpsb
xchg
loop
sbb
out
sarl
jl
mov
lock
sahf
lcall
cwtl
aad
imul
adcl
out
fildll
ds
mov
lock
mov
and
clc
data16
out
rclb
cmp
sbb
aad
mov
xor
jne
insb
inc
xor
xor
jge,pn
mov
inc
or
js
jl
data16
or
imul
nop/reserved
flds
sbb
mov
ja
pop
jge
scas
cmpsl
pop
or
in
push
push
jge
adc
jp
and
and
mov
loopne
jae
push
push
ja
icebp
lret
sbb
fidivrl
add
inc
cli
dec
nop
adc
push
mov
and
sub
leave
add
and
je
stos
arpl
mov
jb
ds
xor
test
aaa
mov
idiv
xchg
xorb
sbb
imull
fldl
and
hlt
adc
xchg
inc
scas
xlat
js
adc
mov
mov
lret
imul
rorl
push
jne
int
jmp
shlb
mov
lea
pop
jge
ret
cmpsl
lret
mov
arpl
out
scas
mov
xor
outsb
loop
enter
nop
adc
sets
mov
sub
or
out
cltd
add
dec
call
stos
hlt
push
add
mov
or
leave
inc
rcrb
xor
xor
mov
or
dec
in
xchg
movsl
mov
icebp
nop
pop
sub
inc
scas
es
in
ja
xor
pop
cli
es
shlb
call
push
pop
lock
push
and
add
mov
enter
lea
sub
lcall
add
repnz
aas
xor
pop
xchg
gs
adc
imul
lds
fistpl
insb
rol
scas
jo
in
mov
cmc
faddl
pop
cmp
aad
dec
pushf
punpckhbw
test
push
sbb
imull
fdivs
push
sarl
add
mov
and
lcall
popa
imul
popf
hlt
movsb
add
and
negb
into
bnd
scas
mov
inc
mov
nop
pop
cmpl
jb
inc
sub
xchg
xchg
scas
dec
rcrl
ja
adc
sub
fs
int3
pop
ja
xchg
and
inc
icebp
cmpsb
mov
ficoms
fwait
stos
mov
mov
in
fiadds
pop
fs
push
xchg
inc
ja
add
push
mov
insb
cld
js
and
xor
aaa
fdivrl
dec
or
adc
cmp
add
pop
mov
lahf
push
push
push
push
or
js
inc
fwait
and
inc
sbb
insb
ss
enter
cs
mov
and
mov
jo
xchg
les
sub
cld
xchg
inc
pop
stos
push
ljmp
fdivrs
add
add
mov
sbb
scas
or
pop
push
pop
pop
inc
inc
xchg
xchg
xchg
jp
es
jbe
xchg
in
rcr
stos
mov
inc
cmpsl
xor
dec
or
sbb
pop
jle
lahf
cmp
add
orb
dec
xchg
jne
dec
adc
jns
je
ret
adcl
in
pop
or
int3
in
orb
notl
sub
jbe
out
push
xor
clc
dec
and
fisubrl
sbb
mov
jl
sar
mov
jl
outsl
stos
or
mov
pop
xchg
pop
xchg
pop
subb
push
lods
das
add
mov
popf
loope
sub
fstps
push
andb
xor
pushf
pushf
cs
push
dec
js
xor
lea
lock
mov
jb
mov
ds
mov
cld
xlat
cmpsl
cmp
adc
jmp
adc
aad
mov
mov
aaa
js
pop
xor
mov
clc
mov
ja
cmp
jecxz
dec
cmp
mov
mov
lods
pop
sub
cmp
and
mov
sub
mov
stos
pop
push
lods
mov
pushf
lret
popa
shlb
movsl
lds
mov
jae
add
sub
in
jo
imul
repnz
movsl
add
lock
cmpsl
and
lret
adc
and
ret
out
ret
pop
mov
push
lds
dec
jl
mov
cmpsb
inc
xchg
aam
ret
push
push
mov
test
test
iret
cmp
out
lcall
mov
cmc
bnd
or
ljmp
inc
cmp
aaa
sbb
ljmp
adc
inc
push
lds
lods
jecxz
inc
dec
xlat
cmp
mov
xchg
adc
pop
adcl
sbb
mov
mov
lods
mov
adc
inc
cmp
sahf
adc
ljmpw
movsb
aas
sbb
fs
repnz
jg
pop
addr16
sbb
flds
cli
xor
pop
loop
jnp
addr16
icebp
roll
push
mov
cld
xor
ja
ret
outsb
xchg
in
aam
je
jge
push
popa
call
adc
leave
dec
add
and
out
fsubrs
cmp
mov
push
rorl
sbb
push
bound
adc
pop
pop
dec
es
ja
bound
loope
movsb
sub
xor
int3
pop
xchg
clc
bound
mov
push
mov
xchg
jmp
in
lea
jl
cld
fildll
cmp
mov
insl
call
orb
in
add
or
push
imul
dec
xchg
add
movl
push
imul
stos
jg
jp
loope
or
lods
incb
shll
xchg
mov
aas
dec
bound
cmpl
enter
cmp
xor
pusha
jecxz
je
push
pop
stos
mov
mov
sbb
pop
frstor
mov
and
mov
dec
jbe
mov
push
xchg
mov
rorl
or
pushf
rcrl
mov
adc
pop
clc
or
and
inc
or
mov
xor
xchg
mov
std
jnp
xchg
mov
sahf
inc
cmp
inc
jecxz
lods
xchg
cmp
aas
add
xchg
add
xchg
and
dec
mov
jp
cmpsb
daa
lahf
cmpsl
lret
pop
xchg
pop
sub
add
push
test
lods
pop
pop
enter
ss
jle
and
enter
mov
sbbb
repnz
mov
scas
pop
popa
test
push
lods
cmp
shlb
cld
ss
aaa
jecxz
lret
scas
xorl
insb
xchg
and
and
lods
mov
mov
inc
rolb
jl
cmc
fbstp
hlt
mov
and
inc
add
adc
jb
jle
nop
add
lcall
or
cwtl
and
mov
loope
int3
or
push
pop
rcrb
and
xchg
pusha
dec
mov
or
jo
sahf
mov
shrl
push
xchg
test
stos
pusha
mov
bound
rclb
and
jge
and
test
xchg
add
hlt
sub
addb
ficomps
or
mov
imul
and
dec
mov
xchg
push
xor
test
lock
sbb
inc
lds
jle
push
dec
rorl
aam
scas
cli
sub
xchg
xor
mov
test
ret
pusha
inc
push
or
sbb
mov
lret
loop
nop
push
cmp
xchg
or
popf
xor
inc
mov
ja
das
ret
jecxz
cmp
jne
movsb
inc
push
inc
jne,pn
or
test
stos
out
stos
pusha
ds
xchg
ja
jp
iret
mov
out
add
mov
out
add
pop
test
inc
jbe
icebp
dec
lahf
ljmp
jno
ja
mov
outsl
pop
insl
pushf
jo
cmp
pop
ljmp
push
mov
push
mov
test
lods
inc
popa
test
add
lea
ss
jbe
es
shll
sub
mov
add
or
add
and
imul
std
push
adc
lods
pop
lea
pop
cs
and
push
aas
cltd
and
test
xchg
sahf
mov
xchg
rcrl
push
aad
cmp
loopne
mov
in
xchg
mov
pusha
daa
or
outsb
xor
xchg
cmpsb
jg
loopne
sbb
ret
cmp
das
xchg
cmp
adc
adc
inc
or
ljmp
shrl
outsb
movsl
inc
imul
clc
sbb
push
test
sbb
jle
and
daa
fiadds
xchg
clc
filds
xor
mov
cmpl
cmp
pop
xor
cmp
pop
mov
pop
jne
mov
test
pusha
mov
outsb
pop
and
stos
push
pusha
pop
and
jae
jmp
sub
inc
cmp
andb
cmpsb
add
shl
lret
push
cwtl
loope
sbb
nop
pusha
xchg
faddp
xchg
mov
inc
shlb
sahf
lea
pop
sbbl
push
fcomip
fsubrs
fs
xor
out
loope
adc
pop
jns
jbe
pop
add
jge
outsb
out
shlb
sbb
mov
adc
mov
xor
jno
arpl
movsl
jno
mov
sub
mov
push
dec
dec
scas
cli
into
xchg
imulb
mov
jns
and
enter
test
mov
sbb
nop
pop
scas
jl
xchg
jle
jne
lock
dec
push
cmpsl
add
mov
mov
xchg
std
add
call
js
push
mov
push
or
hlt
sbbb
xchg
aad
mov
mov
je
jns
inc
or
ret
in
arpl
cmp
test
and
aaa
mov
stos
cmpsl
sub
mov
xor
ja
aad
fildll
lret
xlat
decb
fwait
or
inc
mov
sbb
sarb
sbb
pop
and
lret
cli
lock
sbb
dec
pop
dec
sti
fld
sarl
mov
jo
cmc
aad
jbe
rclb
fwait
test
rcr
mov
xchg
scas
inc
and
aam
jno
dec
xchg
mov
xorb
inc
bound
jg
fcoms
dec
dec
mov
cmpl
rorb
scas
jne
in
sbb
jo
outsl
sbb
cmp
mov
adc
idivl
aam
pop
pop
mov
mov
mov
retw
or
fdivrl
clc
adc
ljmp
fsubrl
sub
sub
imul
add
orl
sub
stos
fsubrs
push
inc
pop
addb
frstor
aad
lods
jle
call
shr
inc
push
je
mov
pop
cli
loop
push
cmp
mov
or
mov
or
dec
pushf
xchg
out
pusha
mov
into
jns
push
adc
shr
or
orb
ss
iret
jno
out
repz
add
pop
fstpl
cmp
in
loope
loopne
jbe
or
or
int3
ja
pop
inc
and
mov
cmp
fs
mov
xlat
dec
repnz
sti
jp
xor
mov
xorl
popf
sub
or
pop
push
push
and
repnz
jg
mov
mull
mov
mov
fdivs
es
jmp
int
push
cli
jno
cmpsl
xor
inc
push
and
jp
test
adc
jle
punpcklwd
inc
enter
fs
lret
gs
leave
pop
mov
inc
mov
jne
jmp
repnz
arpl
mov
xchg
testb
fnstenv
sbbb
mov
nop
jbe
mov
es
add
in
aad
loopne
adc
test
xchg
fdivrs
sar
aas
cmc
adc
stos
mov
sub
sub
nop
sub
subl
cmc
cmp
inc
repz
jbe
dec
unpcklps
ss
ret
mov
ja
push
in
inc
int3
fstpt
imul
inc
psrad
loope
push
push
xor
inc
test
jnp
jg
test
mov
test
call
jmp
and
xor
xchg
daa
lods
xor
outsb
cld
xlat
adc
add
sahf
adc
or
and
arpl
out
sarl
jmp
pop
push
andl
fwait
cwtl
or
fists
xchg
mov
jge
mov
mov
adc
scas
jne
hlt
push
cmp
repnz
sub
mov
shl
sub
dec
lret
cmc
dec
ds
fdiv
push
adc
pop
jmp
scas
sbb
daa
dec
sbb
rolb
loope
enter
pusha
arpl
xchg
inc
lea
lcall
insl
mov
sbb
xchg
dec
add
add
ret
lods
xor
aam
in
and
les
and
jl
pusha
xchg
dec
mov
sahf
push
inc
dec
pop
sbb
add
add
push
mov
cmp
bswap
pop
jg
inc
cmpsl
jae
nop
sub
dec
loop
ja
hlt
incb
repnz
mov
add
cmc
ret
add
sbb
mov
jg
inc
cmp
sbb
bound
and
pop
add
pop
dec
clc
or
inc
push
int
dec
jge
jns
mov
jne
inc
mov
push
jmp
cmp
cmp
lods
lds
mov
cwtl
cmpb
adc
cvtpi2ps
test
pop
sub
jp
cmp
outsb
xor
aam
idivl
pop
adc
pop
mov
adc
lret
leave
jae
pop
xor
adc
mov
sahf
jl
sbb
mov
arpl
push
push
psubb
xorb
je
je
push
fsubl
dec
iret
xor
mov
or
dec
out
addr16
xor
xchg
add
clc
dec
cmp
rcll
pop
push
jecxz
shlb
insb
loopne
add
sbb
mov
cmp
jmp
xor
hlt
mov
push
xchg
pushf
lock
jl
dec
xchg
pop
enter
mov
jmp
pop
add
rcrl
adc
xchg
mov
inc
or
push
js
loopne
jp
fwait
adc
pop
push
mov
imul
sti
sti
mov
pop
or
inc
dec
pop
mov
adc
shr
out
icebp
pushf
ljmp
mov
mull
mov
or
cmp
lock
iret
cmp
mov
pushf
cmp
dec
add
stc
sub
cwtl
sbb
mov
dec
push
push
and
pusha
jge
enter
pop
or
push
dec
rclb
sub
cmpl
cmp
xor
and
jg
lahf
test
rorb
test
mov
mov
add
xchg
adc
mov
cmp
jb
pushf
mov
in
test
rcrl
fstl
cmp
and
push
ja
dec
test
jo
icebp
aad
lods
aam
ret
adc
int3
es
mov
jp
mov
cmp
into
add
in
cmpl
cmp
sarl
cmp
xchg
pop
jecxz
syscall
cld
bound
lds
testl
sub
lea
gs
pop
or
mov
dec
dec
icebp
jecxz
outsb
imul
jecxz
xor
adc
add
dec
jp
dec
add
outsb
add
pop
sbb
xor
inc
or
add
ds
xchg
int3
inc
movsl
test
imul
sbb
hlt
movsl
scas
ret
or
push
xor
xchg
jbe
cmp
fcoms
push
sarl
dec
loop
or
pushf
inc
mov
in
aaa
mov
sar
ja
jne
loope
cmpsl
cmp
or
popl
xchg
ffreep
ds
adc
inc
fs
jle
mov
mov
mov
adc
lds
mov
xor
xchg
adc
dec
stos
out
test
cld
jo
sub
mov
fdivs
mov
test
fcmovne
adc
imul
movsl
addl
inc
mov
lahf
xlat
sbb
jecxz
pusha
in
test
sub
into
lods
pop
rcrb
dec
add
xlat
xchg
fwait
inc
enter
repz
cmp
arpl
pop
iret
sub
jae
cltd
cld
push
clc
mov
lret
fisubrl
jno
mov
je
mov
ret
sarb
push
loop
jp
loopne
cmp
mov
jae
lahf
cwtl
ja
icebp
adc
cwtl
cs
adc
dec
int3
call
inc
sbb
subl
les
add
jmp
push
pop
mov
xchg
xchg
mov
in
in
negb
mov
les
pusha
rcrl
and
push
sti
xchg
adc
lcall
dec
out
icebp
xchg
cwtl
call
xor
and
call
or
std
cmp
lcall
push
sub
and
xorl
adc
fists
aaa
adc
pop
mov
cmp
popa
loope
xchg
cltd
mov
mov
imul
jle
mov
in
inc
jecxz
add
aas
lock
cmp
and
sbb
mov
and
inc
xchg
repnz
js
test
mov
push
or
xchg
adc
push
mov
jp
fldl
int3
mov
inc
push
sbb
dec
les
xchg
mov
je
fnstsw
mov
and
dec
stos
fs
cmp
or
adc
mov
sbb
cmc
push
jp
cmp
xor
and
repnz
adc
sti
cli
pop
and
clc
aad
aad
xor
pop
dec
lret
mov
jmp
mov
xchg
popf
adc
inc
pop
aaa
push
cs
xchg
mov
adc
inc
pop
sbb
test
popf
ret
inc
ud0
jbe
sub
dec
adc
xchg
mov
pop
out
shlb
and
mov
push
add
mov
cmpl
inc
xor
sub
stos
xor
test
popf
or
adc
sub
push
fldl
push
push
cmp
xchg
aas
xchg
push
mov
mov
adc
popa
mov
lock
ljmp
out
dec
jno
mov
ret
aam
jnp
sbb
mov
xor
pusha
aaa
mov
sbb
sub
mov
test
dec
fldt
adc
ret
enter
dec
adc
jnp
test
cwtl
mov
test
xchg
xchg
mov
pop
cli
aad
scas
mov
push
xchg
xor
push
fwait
iret
in
sbbb
cwtl
insl
popa
cmpsl
movb
mov
adc
je
add
adc
inc
incb
lock
sub
jmp
cmpsl
gs
les
mov
push
inc
adc
sub
or
fsubrl
pusha
mov
cmp
clc
lret
xchg
dec
out
xchg
or
loopne
jge
int3
orb
add
adc
into
mov
addr16
arpl
cmp
inc
pop
and
xchg
out
push
cmc
inc
pop
push
mov
iret
lods
cmp
and
xor
mov
xor
fimull
fwait
jl
xorl
sbbb
rcrb
das
inc
push
or
and
cmc
inc
adc
ds
pop
movsl
jno
push
cmp
cld
adcl
add
cmpsb
jno
scas
cmpsl
imul
xor
sub
clc
sub
dec
pop
jle
test
aaa
je
or
imul
and
dec
push
xchg
mov
iret
sub
xchg
add
xlat
jbe
sub
add
sub
cs
or
sub
lock
mov
fsubl
xor
inc
pop
test
cmpsl
into
ret
inc
addr16
and
xor
sub
adc
cmp
in
push
adc
daa
xchg
mov
pop
popf
scas
xlat
add
test
es
loop
cmp
mov
xchg
jo
mov
repz
inc
xchg
je
test
sub
and
add
push
sbb
mov
bsr
pop
std
xor
stos
inc
fsub
inc
sub
lods
in
clc
cmp
popf
cli
inc
or
jnp
xchg
pop
js
add
iret
cli
inc
daa
call
in
xchg
jge
testl
in
adc
push
sub
mov
mov
or
in
sarl
mov
popf
jl
and
sbb
arpl
add
sub
xlat
test
xlat
test
inc
and
leave
popf
xchg
cmp
jae
test
lretw
xchg
inc
pop
les
bound
jbe
dec
mov
into
add
ljmp
push
jl
stos
loop
icebp
sbb
sahf
ficoms
roll
jno
jbe
mov
sub
aad
insb
mov
subl
je
lea
outsb
je
xchg
sub
or
pusha
inc
mov
push
cmpsb
mov
shrb
repnz
jl
xchg
jecxz,pt
push
orl
loope
push
xor
inc
push
xorl
ret
loopne
adc
fimuls
sbb
bound
jecxz
jns
das
pushf
pop
push
cmp
pop
rorl
adc
lcall
cmp
shl
xchg
imul
jnp
and
dec
cmp
dec
xor
xchg
aaa
mov
imul
and
cmpb
les
imul
lods
out
add
andb
adc
jmp
jp
and
pusha
add
and
mov
or
addl
andb
fxch
lock
movsl
xchg
jmp
movsb
xor
mov
xchg
push
fcomps
push
imul
cmpb
test
test
push
popa
outsl
clc
mov
gs
rcll
cli
cwtl
nop
xchg
adc
pushf
push
shll
cwtl
and
in
or
rcrl
cmpsl
sbb
jg
add
imul
call
cmc
into
push
mov
popa
imul
and
mov
cld
imul
sub
mov
sub
cmpl
aaa
inc
ret
cltd
add
add
push
test
pop
inc
hlt
test
test
add
and
sbb
bound
enter
fidivs
out
and
dec
nop
push
popa
pop
aaa
popa
cmpsl
fisubl
movl
jecxz
mov
popf
ret
cmp
push
push
mov
mov
decl
sbb
fwait
mov
mov
inc
push
dec
adc
ds
and
mov
mov
rorl
inc
cli
hlt
stc
sbbb
mov
jle
daa
pop
jo
push
sbbb
push
add
add
imul
xor
lods
sub
mov
out
push
mov
aam
xchg
inc
push
cld
cmpsl
nop
les
lea
mov
ja
std
adc
sbb
add
les
mov
mov
ljmp
ret
mov
ja
imul
jmp
dec
add
inc
call
andb
mov
decl
imul
cli
inc
ret
xchg
pop
push
addl
repz
and
jl
dec
dec
pop
sbb
test
push
push
and
movsb
stc
aam
add
or
mov
out
pop
std
sar
icebp
fs
xor
mov
or
in
loop
add
pop
sbb
js
add
inc
fldl
std
outsb
inc
inc
in
aad
mov
inc
dec
out
jb
adc
add
inc
lahf
jno
sub
cmp
cld
mov
jbe
xchg
jo
jecxz
sti
les
les
movsl
fcmovbe
pop
or
push
cmpsb
dec
outsl
jl
pop
aaa
xor
movsb
inc
ficoml
rcl
shll
pop
cmp
je
add
xor
xor
mov
push
cmc
out
add
add
add
cmc
inc
and
fnstsw
fadds
push
cmc
shlb
or
mov
and
inc
ja
test
xor
sbb
jmp
or
sub
push
mov
add
or
push
imul
pop
nop
cmp
push
stos
cmpsb
inc
jbe
xlat
jb
lods
jae
sbb
loope
leave
mov
cmpsl
cmp
sti
sbb
adc
cmpsb
inc
mov
xchg
cld
in
inc
sbb
inc
mov
cmp
sbb
test
pop
or
test
mov
dec
cmp
in
push
mov
mov
fstpt
push
in
sub
adc
xchg
xchg
movsb
out
insb
inc
stos
or
ret
mov
mov
insb
mov
filds
stos
xchg
cmp
mov
cmp
and
mov
lock
js
mov
or
lock
out
inc
inc
push
or
test
inc
fimuls
cmp
pop
mov
rcl
rcrl
dec
add
iret
jae
clc
sbb
sbb
stos
adc
sti
push
sub
repz
mov
daa
mov
mov
dec
fidivrl
adc
ss
xchg
mov
rorl
adc
or
ret
out
lds
or
dec
dec
dec
mov
and
adc
jno
dec
cmpl
push
mov
inc
sub
pop
sub
jne
mov
test
test
imulb
imul
insb
jl
repz
pop
inc
in
into
addr16
daa
shr
lods
pop
cld
in
and
ret
adcb
scas
roll
mov
jg
ficoml
lods
inc
push
shr
fwait
mov
xlat
xchg
cltd
and
popa
push
inc
pop
sbb
mov
adcl
subl
mov
bound
push
pop
jecxz
sbb
or
mov
mov
ret
inc
xor
int
mov
dec
aas
mov
enter
mov
shrl
inc
mov
jns
and
mov
adc
push
pushl
scas
push
jg
outsb
or
or
pop
inc
adc
pop
mov
xor
mov
rclb
and
imul
jo
js
fidivl
inc
lret
mov
jge
cs
push
imul
sub
sbbb
call
adc
mov
cs
repz
add
cmp
test
test
xchg
lods
outsb
sub
mov
jle
xor
jl
movsl
imul
xchg
jecxz
xlat
ud1
pop
mov
lret
outsl
xor
dec
sahf
jp
adc
mov
xor
cltd
sbb
aas
je
and
push
adc
adc
ss
sti
or
mov
inc
imul
and
add
and
fimuls
subb
add
roll
adc
loopne
pop
js
mov
shr
addr16
sbb
test
pushf
mov
push
fisubs
icebp
add
sub
lret
jmp
cmp
je
mov
xor
and
sub
push
and
ret
mov
dec
adc
add
add
push
pop
and
or
sbb
aad
loope
ja
dec
sbb
jnp
shrb
mov
test
sub
test
test
ja
rcrl
das
jo
popa
out
sub
push
add
or
sbb
aaa
aaa
popa
ja
loop
imul
xor
cmp
and
pop
xor
test
adc
insb
icebp
dec
push
cwtl
add
arpl
pop
leave
cmpsl
mov
cmpsb
sbb
pop
decl
sbb
adc
int3
cmpsb
pop
ret
bound
xchg
data16
xor
mov
push
repnz
dec
add
data16
je
stc
xchg
adc
push
adc
xor
push
clc
push
std
push
add
lods
andps
pop
lods
cmp
pop
clc
fs
lret
xchg
aas
mov
adc
adc
xchg
js
mov
push
jg
add
cltd
gs
fiadds
mov
movsl
loopne
out
dec
cld
mov
arpl
fisubs
repz
mov
movsl
and
mov
fldl
imul
pop
push
jno
ret
pop
jle
sbb
push
pop
rclb
or
fs
jnp
jnp
mov
cmp
jp
mov
sbb
or
aas
adc
inc
jp
dec
push
sahf
push
inc
pop
xchg
mov
sbb
test
scas
mov
pop
mov
jmp
cmp
enter
mov
mov
mov
ficoml
sub
add
sub
arpl
int3
sbb
std
add
inc
test
ja
add
rcrb
mov
adc
push
sarb
lret
rcll
enter
lods
std
mov
movsl
pop
adc
hlt
xor
in
mov
push
mov
cmp
pop
dec
int
shll
xor
mov
xor
ret
push
or
jle
call
adc
loopne
and
in
adc
jne
ret
jae
adc
lret
incb
stc
cmp
shll
repnz
aad
jne
and
and
jl
cs
and
out
add
inc
ja,pn
les
mov
jmp
notl
jmp
mov
sbb
lods
ljmp
and
lret
test
xor
xor
adc
inc
popa
push
mov
test
push
icebp
push
stos
dec
scas
and
iret
pop
je
iret
or
in
cmp
in
jp
add
xor
ret
adc
xchg
and
fwait
fwait
add
ljmp
mov
mov
mov
repz
test
fisubl
jns
dec
cs
test
push
dec
fnstsw
sbb
rcr
and
scas
push
add
clc
fnstcw
lock
fdivrp
xor
and
fsub
imul
jo
push
add
je
sbb
scas
sbb
push
push
imul
scas
cmpsl
testb
js
std
mov
loope
ja
lds
pop
push
xchg
sbb
mov
or
fwait
jb
jae
shrb
adc
aad
xchg
mov
nop
cmc
dec
jmp
cmp
fdiv
adc
cld
mov
cmp
sub
fs
inc
popa
add
sbb
jne
mov
adc
jecxz
ds
jo
cmpsl
jge
cmc
adcl
cmp
and
and
fbld
push
pop
test
addr16
push
lods
cmp
popa
xchg
fadds
cmp
pop
test
cmp
pop
inc
nop
push
gs
jecxz
ja
adc
mov
push
je
fdivr
inc
mov
mov
push
inc
clc
dec
mov
pop
loop
or
or
pop
mov
pop
ljmp
jl
or
add
and
push
inc
adc
mov
push
jo
mov
ds
outsl
adc
jmp
sbb
add
mov
push
or
mov
xchg
lret
cli
aam
inc
int
or
adc
cld
jae
xchg
xchg
mov
or
repnz
dec
mov
subl
add
sub
and
inc
ret
insl
cli
mov
lret
sub
leave
sbb
loopne
inc
jmp
daa
pushf
sbb
ja
test
stc
sub
mov
addb
adc
push
sub
inc
cwtl
in
stos
mov
subl
lock
cmp
mov
orl
dec
sub
call
popf
std
cmp
dec
cld
sub
add
adc
cltd
std
loopne
lahf
jp
xchg
xlat
pushf
mov
call
cltd
inc
xchg
outsl
mov
push
inc
stos
mov
lods
sarb
adc
xchg
and
movsl
sub
imul
sub
push
mov
dec
movsb
shrl
pcmpeqw
mov
test
insl
jo
sbb
mov
nop
add
pop
in
leave
aas
add
add
subb
push
and
shr
inc
iret
mov
and
push
add
xchg
cmp
lods
mov
mov
sub
in
cmpsl
out
test
lods
mov
negb
dec
add
push
das
ret
shrb
insl
or
sub
testb
adc
test
call
in
mov
int3
mov
sub
xor
push
hlt
inc
ret
lods
adc
add
mov
add
lock
fsubrl
mov
ret
and
nop
sbb
dec
popf
sbb
sbb
mov
adc
in
lea
sbb
sbb
xor
pop
lret
andl
xchg
fists
lock
aad
push
popf
mov
fsubs
lcall
jnp
stos
scas
dec
xchg
mov
dec
pop
aad
add
xor
mov
mov
mov
mov
adc
shrb
mov
mov
cmpsl
fidivl
mov
shl
adcb
cltd
dec
add
xchg
je
push
and
fldenv
out
mov
sub
add
stos
aaa
pop
xor
addb
mov
push
mov
inc
loop
mov
mov
mov
or
sbb
ljmp
sub
sub
stc
mov
sub
and
rcll
lea
adc
pop
dec
xchg
sub
ret
addr16
arpl
add
inc
push
inc
in
imul
shr
and
mov
cld
stc
add
addr16
xor
out
jnp
icebp
in
mov
mov
scas
adc
mov
and
pusha
ret
xchg
sub
jo
repnz
adc
mov
xchg
jne
dec
in
test
mov
mov
clc
test
enter
push
out
cmpsb
data16
add
daa
test
xor
inc
cmovl
mov
cmp
sbb
xchg
xchg
sbb
add
addb
ja
pusha
pop
andb
mov
ret
pop
sub
jmp
inc
out
and
push
mov
pusha
fstpt
sahf
cs
mov
inc
testl
aaa
vunpckhps
iret
mov
xlat
xchg
sub
hlt
xchg
adc
and
test
in
les
fwait
xor
xchg
fdivrp
adc
push
insl
loope
lret
or
mov
jo
in
xchg
cmp
mov
jne
lcall
cmp
ficompl
adc
mov
mov
lds
jnp
adcb
lods
mov
xchg
aam
repnz
mov
cmpsb
mov
xor
insb
cmp
push
dec
in
mov
pop
dec
mov
jmp
lahf
pop
xor
lds
sub
in
clc
aas
jb
xor
sahf
jno
fildl
inc
sbb
test
sbb
mov
pop
andb
je
push
loope
mov
cld
jge
add
jmp
xor
dec
jb
mov
push
mov
fistpll
je
and
mov
inc
add
jbe
cmpsl
pop
shlb
lcall
and
push
add
pop
sti
dec
outsb
inc
insb
test
mov
cmpl
testl
pop
aas
aam
dec
imul
cmp
mov
stos
jle
push
les
pusha
movsl
cmp
cmpsb
enter
gs
mov
lea
and
mov
hlt
xchg
movsl
sub
push
push
cld
push
inc
in
xchg
xchg
test
icebp
pop
jge
aaa
pusha
mov
and
push
cmp
outsb
cmc
jp
sub
mov
xor
outsb
mov
es
add
divw
inc
mov
jmp
cmpsl
cmp
xor
pop
adc
mov
sahf
sub
lea
mov
fs
and
sbb
sbb
rorl
movsl
add
mov
inc
xchg
mov
out
orb
xor
mov
sub
mov
xchg
jp
test
gs
xchg
lret
clc
mov
xor
fmuls
ja
mov
push
mov
push
in
lea
pop
jmp
inc
cmp
andb
cmc
cmp
xchg
and
mov
popa
sti
or
enter
xchg
in
add
xor
add
ret
push
test
clc
addr16
rclb
xor
and
mov
push
mov
cmp
ret
sti
jg
orb
xorb
jle
xchg
jno
xchg
subl
shr
test
push
push
xchg
mov
mov
pop
push
ret
test
or
fs
outsl
cld
sub
shlb
fbstp
inc
jmp
xchg
xchg
lea
dec
xor
pushf
loope
mov
xor
test
ljmp
cmp
fcompl
jecxz
push
jnp
jns
rolb
iret
ss
loopne
xor
push
inc
sbb
xor
pop
dec
sub
scas
xor
push
jle
xor
jg
xchg
sbb
dec
shl
out
jmp
add
rcrb
add
mov
and
add
pop
decl
and
jg
jns
call
test
or
shrb
aad
mov
xchg
push
sbb
jne
or
ret
pop
add
pxor
adc
loop
fldenv
or
pop
inc
pop
inc
adc
fcompl
sub
adc
adc
mov
inc
inc
mulb
nop
lods
dec
cmp
ljmp
add
mov
sbb
loopne
pop
addl
ficomps
shrd
mov
dec
xabort
clc
stos
push
push
jns
mov
daa
test
mov
xlat
mov
jnp
fs
xor
cld
sub
loop
insl
ljmp
aas
cwtl
aam
data16
cmc
jp
xchg
js
sbb
cmp
mov
in
inc
outsb
js
sbb
adc
ret
push
incl
mov
clc
stos
repz
rolb
cmp
dec
leave
fbld
movsl
lret
call
pop
adc
pop
pop
cwtl
cmp
pop
insl
ja
cmpb
xchg
adc
jnp
daa
and
stos
dec
clc
les
adc
test
call
inc
outsl
insl
adc
xchg
inc
js
jno
mov
push
dec
mov
enter
test
mov
loop
paddsb
sbb
imul
movsl
inc
iret
ljmp
jl
cltd
shlb
dec
insl
jo
fiadds
out
aam
push
mov
push
mov
xlat
cmp
xchg
push
sub
and
cli
add
inc
push
jge
sbb
lret
dec
mov
dec
push
mov
sbb
loope
test
repz
pop
dec
jnp
jns
xchg
andl
add
clc
imul
gs
and
jmp
xor
rcrb
dec
lahf
push
mov
and
cld
addb
rorb
ret
test
cmpl
popf
inc
nop
push
ljmp
orb
mov
sarl
or
push
data16
mov
ljmp
outsl
inc
mov
adc
sub
and
scas
mov
pop
dec
pop
aam
mov
mov
aas
jo
imull
outsl
cld
add
jae
test
bound
jae
xor
outsl
mov
mov
mov
inc
xchg
clc
xchg
jo
mov
mov
int
sbb
sbb
fiadds
push
dec
bound
sub
ss
rclb
xchg
push
scas
adc
test
out
into
pop
add
outsb
sub
mov
cmp
sahf
mov
xor
mov
into
xchg
inc
mov
inc
lds
dec
and
dec
rcrb
add
movb
xchg
push
and
movsb
cld
jns
pop
icebp
jmp
gs
cmpsb
jle
adc
lcall
mov
inc
jo
sub
mov
ret
push
dec
mov
or
dec
mov
jmp
push
stc
in
cmpsl
das
cld
ljmp
nop
or
mov
mov
jbe
data16
aaa
lods
into
int
iret
pop
inc
popa
insb
sbb
popa
jne
data16
sbb
mov
mov
pop
int3
adc
mov
sbb
sub
ja
gs
jbe
in
test
xchg
nop
xor
xor
mov
mov
cmpb
pop
test
fwait
jns
add
sbb
popa
and
js
daa
mov
lea
out
jb
sbb
ret
or
aam
adc
pop
push
cmc
leave
aam
fucom
push
sub
in
mov
fldt
jmp
xor
xor
dec
rsm
pusha
add
pushf
xchg
adc
mov
jp
cmp
mov
clc
fcomip
loop
popa
mov
mov
sub
or
ret
xchg
dec
sbb
loop
or
lods
push
inc
add
ret
mov
pusha
sbb
inc
jle
sbb
push
adc
sbb
mov
cmc
ljmp
hlt
gs
std
insl
ficoml
sahf
loopne
js
push
imul
mov
sbb
xchg
cmp
cmpsl
jbe
sbb
xchg
jle
outsl
loopne
stos
cli
push
mov
and
rol
fcmovb
fldl
lock
pushf
mov
sbb
and
and
rol
or
push
inc
fwait
jmp
mov
divb
imul
xchg
shlb
mov
pop
cmp
jge
lcall
jns
inc
jo
lahf
mov
mov
xchg
in
adc
or
mov
fists
out
mov
push
roll
adc
popa
xor
test
loope
add
scas
xchg
pop
inc
les
xor
scas
sub
pop
fstps
xchg
cmc
rcrb
inc
cld
inc
je
in
pushl
or
mov
xchg
das
stc
mov
jp
pop
cwtl
data16
mov
add
and
push
idivb
dec
fcmovu
jb
rclb
sub
mov
outsb
lds
std
inc
sbb
std
sub
mov
rolb
imul
mov
xchg
test
and
add
jle
shlb
lea
sbb
add
popf
xchg
addr16
cmc
sbb
add
lods
sti
test
add
mov
mov
inc
fcoml
pop
dec
jecxz
dec
cli
shll
adc
adc
and
movsl
dec
pop
push
lahf
jmp
lock
mov
sub
dec
xchg
push
push
dec
xchg
inc
add
aad
mov
inc
sarb
enter
lock
cmp
xor
arpl
int
mov
pop
jle
loop
add
test
mov
or
push
ret
in
pop
or
lds
mov
add
mov
dec
aas
inc
leave
and
loope
inc
and
mov
jmp
out
xor
pop
mov
fidivl
xlat
pop
cmp
fdivrl
mov
cmpsb
push
jmp
pop
ret
cmc
mov
sbb
xor
mov
mov
push
mov
jns
popf
jbe
imul
push
lcall
fisubl
ds
imul
mov
xor
outsl
push
in
mov
inc
add
jbe
dec
dec
sub
cmp
mov
enter
sub
adc
sbb
cmpsl
stos
lahf
xor
adc
test
insb
or
pop
clc
mov
dec
in
pop
rcl
test
or
rorb
push
nop
sub
sub
dec
fwait
xchg
fs
mov
jmp
je
cmpsb
sbb
push
rclb
sahf
sub
and
xchg
mov
add
mov
or
cs
mov
lret
push
cli
push
push
aad
stc
or
fcomp
sahf
les
test
push
cmp
adcl
cmp
or
xor
xchg
rorb
mov
sti
mov
inc
sub
nop
jl
dec
mov
dec
call
add
push
add
jl
jno
nop
sbb
in
aad
sub
inc
xchg
data16
loopne
mov
dec
mov
movsl
xorl
add
arpl
jle
test
stc
cmc
push
jne
movsb
mov
inc
out
fcompl
loop
lock
adc
test
dec
pop
test
xchg
push
mov
adc
nop
jne
xchg
pop
push
add
cmp
mov
add
inc
fnstcw
xchg
sbb
aad
lret
int
sub
loope
jmp
ss
mov
push
mov
stc
or
or
rep
mov
daa
xor
jp
mov
subb
loop
into
test
xchg
pop
pop
data16
mov
sub
sub
pop
sub
fstl
lds
out
xor
or
in
lods
pop
ret
les
ja
mov
pop
sub
popa
push
cmp
daa
mov
icebp
push
mov
xchg
xchg
loop
je
xor
push
dec
push
xchg
or
divl
cmp
mov
mov
nop
vphsubwd
aaa
pop
ret
loopne
outsl
inc
mov
and
jns
mov
jle
insl
mov
and
cmpsb
rolb
mov
sbb
sbb
and
sti
or
jecxz
shrl
or
sbb
outsl
sete
cmp
ja
outsb
sbb
xlat
fldcw
test
shlb
add
xchg
adcl
and
mov
fdivr
inc
pop
in
push
enter
scas
test
dec
pop
leave
test
imul
call
mov
push
mov
push
jl
ret
fsin
add
dec
fmull
sbb
scas
xchg
mov
cmpsl
inc
add
cmp
inc
mov
pop
pusha
in
scas
pusha
jmp
xchg
jmp
jno
dec
lods
add
outsl
adc
jnp
or
inc
andb
mov
aam
rorb
mov
and
xchg
lret
aaa
fucom
cwtl
xchg
and
jp
pop
dec
cmp
out
fwait
lcall
in
inc
jecxz
lea
outsb
aad
sbb
sbb
xor
xor
inc
cmovl
mov
mov
shlb
je
into
into
arpl
lcall
pop
insb
cmpb
rcrb
pop
xchg
inc
adc
xchg
ficoml
test
xchg
lcall
mov
js
add
dec
movsl
icebp
faddl
cwtl
xor
push
popa
adc
pop
pop
jbe
pop
mov
mov
idivb
vmread
fisubs
fldt
sub
sub
pop
mov
cmp
xchg
sbb
sbb
lock
notb
inc
out
inc
shrl
cmp
ret
enter
jb
loopne
mov
push
sbb
fdivl
insb
ljmp
jp
xor
repz
dec
rorb
inc
mov
mov
pop
and
or
xchg
clc
sbb
les
in
mov
hlt
daa
test
bound
sub
aad
sti
jne
sbb
cmp
in
jge
daa
pop
or
xor
cli
dec
hlt
imul
inc
dec
aad
or
mov
or
sti
pop
imul
outsl
cmp
arpl
dec
sbb
add
cltd
pusha
and
mov
fcoml
adc
sahf
or
inc
mov
adc
xchg
mov
pop
ja
in
cltd
fwait
outsl
cmc
test
jge
dec
notb
or
ret
cmp
cmpsl
or
cld
xchg
fcmovu
jmp
sub
nop
pop
movsl
in
jno
cmp
mov
hlt
into
dec
mov
int3
jl
inc
aad
cmp
push
jno
pop
mov
push
std
nop
in
loope
xlat
shlb
cmc
dec
shrl
add
mov
ud1
adc
add
test
enter
outsl
lcall
ret
shll
loop
xchg
cmpl
or
call
in
lds
js
jae
iret
loop
push
or
cmp
pushf
adc
cs
and
test
out
imul
orl
mov
mov
imul
pop
sub
mov
dec
jb
add
test
push
inc
or
cli
lcall
mov
add
enter
mov
and
inc
push
add
shll
pop
sbbb
xchg
outsl
fidivl
xor
dec
arpl
mov
popa
sbb
call
movsl
repnz
enter
jecxz
or
xchg
stc
jae
aad
mov
sti
jns
idivl
stc
dec
dec
std
jns
test
jns
and
repnz
aad
mov
stos
insb
mov
dec
addr16
fmul
loope
mov
ficompl
mov
outsl
add
iret
inc
int
lock
mov
cmp
fnstenv
int3
ss
notb
lahf
mov
dec
and
pop
lahf
movsl
nop
xor
and
push
loope
es
insl
inc
adc
mov
testl
jl
outsb
test
fadds
pop
mov
or
roll
pop
je
jno
scas
push
and
loope
xchg
mov
stos
mov
or
sub
fsubrs
orl
or
pop
ret
xchg
hlt
inc
jl
xchg
hlt
push
leave
bound
mov
mov
mov
ja
clc
orb
xlat
pop
incb
mov
scas
jge
xlat
ret
ss
xchg
orb
popa
addr16
mov
pop
push
je
sbbl
cmpsl
push
fiadds
jb
fs
daa
add
inc
mov
das
hlt
int
addb
inc
xchg
xor
into
fdiv
jg
and
lahf
mov
ja
sub
imul
push
adc
sub
loope
nop/reserved
ffreep
negl
roll
or
dec
sbb
ja
add
daa
mov
andl
ret
xor
push
mov
wbinvd
fsub
dec
jb
xor
sub
ds
imul
das
mov
dec
in
mov
push
pop
jl
sbb
lock
jbe
cwtl
add
xchg
sbb
add
mov
cs
xchg
sub
add
pusha
xchg
testb
add
jmp
jbe
daa
push
bound
xchg
xlat
sbb
and
lock
mov
and
adc
jecxz
or
adc
adc
jge
push
jge
mov
xor
mov
shll
push
clc
sbb
iret
or
push
out
lock
xor
pop
addr16
mov
mov
test
lcall
fidivl
mov
shlb
mov
ret
adc
leave
stc
jg
fildll
mov
jno
cld
add
mov
cmp
and
mov
pushf
jbe
mov
addl
mov
mov
enter
dec
push
cli
push
push
call
or
mov
fsubr
add
mov
jp
aad
xchg
movl
lds
add
sbb
xchg
movsb
sub
add
leave
ret
mov
mov
aas
push
lret
cld
sarb
cmp
jp
jnp
fldenv
pusha
das
nop
mov
or
jb
sub
xorl
inc
ret
xor
mov
mov
lods
push
js
cmp
inc
mov
add
jp
adc
pop
cmpb
outsl
in
movsb
mov
psllw
or
xlat
or
mov
add
scas
jg
stos
xor
adc
sti
int
or
jno
call
iret
inc
les
pushl
xchg
sub
cmpb
dec
jl
jo
and
xor
and
sbb
loope
adc
dec
xor
xchg
dec
js
jl
aam
lds
xchg
lcall
pushf
mov
dec
mov
shrb
stos
adc
movl
movsl
test
sbb
clc
jg
jno
jnp
mov
lahf
mov
stos
aam
add
adc
push
in
adc
repz
dec
push
rcll
adc
and
ror
mov
loope
ljmp
push
out
clc
enter
movsb
mov
adc
mov
lock
pop
shll
dec
add
ss
aad
mov
enter
sub
jmp
push
loop
fiaddl
pop
jns
xor
nop
push
cmp
fidivrl
les
aam
testl
mov
adc
in
std
inc
pop
fwait
push
mov
ljmp
mov
in
add
dec
mov
hlt
lods
xor
imul
push
pop
pop
scas
popf
push
add
dec
leave
push
data16
notb
mov
xor
inc
movsb
in
dec
push
div
mov
xchg
aaa
fs
lods
pop
sahf
pop
addr16
test
cli
rcll
rcrl
das
adc
cmpsb
js
jl
or
lea
xchg
and
xchg
and
negb
dec
fnstcw
subl
jge
std
out
add
cmp
xor
push
xchg
xor
and
addb
les
fs
cmpsb
xor
stc
addl
dec
int3
clc
pop
push
mov
adc
movsl
fcomps
sub
xchg
stos
cmp
xchg
dec
fistpll
loope
pop
pusha
or
lods
lock
stos
mov
xor
ds
daa
stos
daa
push
or
ds
push
cmp
inc
mov
jmp
repz
cmp
cs
fcmovnb
movsb
loopne
outsl
push
shl
cmp
mov
cmpl
xchg
int3
pop
sbb
shrb
popf
push
gs
pushf
out
cmp
pop
cwtl
cltd
test
ret
out
jle
push
push
pop
push
inc
inc
jl
test
dec
pop
dec
in
xchg
mov
inc
pop
and
sbb
fcmovu
gs
inc
jecxz
std
and
mov
je
add
sbb
inc
sbb
add
mov
push
cmc
shrb
dec
mov
adc
mov
es
nop
jp
and
bound
mov
inc
inc
and
rol
mov
loopne
icebp
mov
mov
daa
sub
test
add
push
scas
lahf
test
out
js
xchg
jo
cmp
test
xchg
aam
and
call
jp
stos
dec
bnd
mov
ret
in
mov
cld
cmp
ljmp
push
fsubr
dec
jmp
aas
add
cmp
add
fwait
aam
xor
aam
push
out
jge
lcall
xor
out
arpl
mov
jmp
shll
xlat
jae
push
mov
mov
push
pop
mov
jns
adc
or
jg
in
add
adc
mov
out
hlt
jge
mov
cmp
xor
adc
sbb
dec
push
loopne
inc
push
stc
lret
clc
sbb
stos
movsb
clc
add
pop
lock
xor
scas
icebp
insl
push
lods
daa
popa
jecxz
fimull
cwtl
aam
cmp
imul
inc
ljmp
sub
test
xchg
push
adc
cmp
out
add
add
xchg
cli
popa
cmovs
out
or
adc
bswap
and
mov
pop
sbb
cld
leave
xchg
xchg
adc
into
mov
inc
popa
xchg
notl
adc
scas
dec
dec
outsl
xor
inc
in
adc
ffree
dec
mov
leave
mov
fs
imul
inc
push
aas
addl
lock
sub
xchg
mov
fldl
mov
dec
outsl
ficompl
ret
pop
das
iret
add
dec
mov
and
dec
mov
sahf
jp
cmpsl
mov
mov
lret
rdtsc
mov
inc
dec
or
add
push
pop
mov
mov
and
shl
jle
mov
jle
mov
sbb
fmul
aad
xor
xchg
mov
mov
push
mov
add
mov
rolb
push
scas
cmp
or
cmp
sbb
push
xchg
add
call
dec
xchg
pop
mov
emms
jmp
inc
test
imul
xchg
cmpsb
scas
adc
cmpsl
call
push
enter
ss
mov
pop
cwtl
in
lahf
jp
sbb
xchg
mov
add
sbb
or
pop
mov
ss
cwtl
xor
mov
mov
movsl
mov
and
sbb
jnp
scas
mov
ljmp
int3
pop
mov
dec
pop
mov
rolb
shrl
fadd
jb
pushf
or
std
mov
xor
inc
and
mov
out
pop
adc
inc
pushf
sbb
and
or
mov
jecxz
fdivrl
add
jmp
sub
xor
arpl
pop
push
adc
mov
sbb
mov
pop
adc
fs
and
stos
jl
jg
fcom
iret
out
xchg
inc
stos
cwtl
jle
push
sbb
enter
stc
push
cs
lret
push
ds
cmpsb
xchg
and
jle
and
jl
loope
ret
loop
xor
push
mov
push
xorb
push
fsubs
ret
push
adc
sbb
mov
lcall
and
sub
ret
dec
inc
scas
es
jmp
push
and
bound
mov
and
or
lock
adc
insl
jbe
pop
jg
xor
push
mov
loope
adc
test
int
loop
add
push
pop
xor
cwtl
clc
cld
and
mov
push
dec
mov
lret
cmpb
cld
pop
push
mov
push
jge
xchg
jo
popf
andb
or
pusha
scas
jno
fnsave
push
sub
and
xchg
xchg
or
sub
leave
push
inc
hlt
inc
enter
sub
dec
popl
and
push
mov
out
test
clc
lret
lock
lret
sbb
mov
or
xor
dec
insb
pop
or
dec
push
inc
ret
xchg
lock
mov
jle
push
cmp
mov
inc
push
jecxz
push
scas
sbb
or
stos
pusha
xchg
daa
pop
push
nop
jb
xchg
lock
add
or
xchg
inc
gs
xor
push
xchg
mov
les
std
mov
pop
sbb
mov
add
xchg
lock
test
xor
je
jnp
mov
insl
icebp
and
fildll
pushf
sub
pop
sbb
ss
mov
rcll
and
or
js
int
sub
sbb
add
cs
jg
xchg
xchg
jbe
inc
inc
pop
pop
nop
xor
mov
mov
leave
push
inc
mov
mov
inc
mov
mov
pop
int3
sub
fs
pop
sti
mov
sahf
pop
subb
int
mov
mov
imul
mov
scas
add
and
adc
push
xchg
out
xchg
loopne
notl
or
hlt
inc
pop
loopne
fimuls
es
cs
cmpsl
popf
adcb
loop
lret
lods
and
pop
in
pop
mov
lea
sahf
punpckhdq
movsl
repnz
pusha
add
mov
or
or
mov
mov
das
insl
lea
cmp
cmp
loop
inc
data16
push
mov
lods
add
push
movntq
loop
pop
aam
int3
xchg
dec
inc
flds
add
cmp
jnp
inc
in
cmpsl
in
push
pop
inc
mov
mov
test
loopne
insb
scas
jp
push
adc
fcompl
sbb
sbb
push
jb
add
push
je
push
nop
daa
data16
jmp
cmpsl
rorb
push
out
push
push
xor
js
sub
negb
jns
push
aaa
jae
bound
or
pop
loopne
lock
jnp
xchg
aaa
shrb
push
mov
cmpsl
add
xchg
inc
add
and
xchg
rcl
movsb
out
imul
mov
loop
xchg
add
test
push
add
xlat
push
shl
imul
xchg
popa
mov
mov
repz
mov
xor
ss
sub
mov
mov
or
cmp
sbb
lds
xor
cs
mov
jo
push
push
cmp
mov
sub
dec
movsb
mov
push
sti
sub
pop
fsubl
shlb
dec
mov
xchg
es
xor
pop
mov
inc
addr16
pop
into
dec
lahf
adc
jo
sar
mov
and
outsb
and
popa
cmpsl
sbb
or
loope
push
das
mov
fildl
jbe
and
imul
cmp
insb
mov
pop
push
pop
xor
push
pop
jne
neg
and
and
imul
cmc
rorb
inc
or
jl
mov
mov
ds
mov
out
and
xchg
lahf
jmp
bound
test
data16
lahf
and
sbbb
nop
bound
mov
pop
sbb
mov
jno
xor
ljmp
cmp
lods
ljmp
fisubl
out
mov
ret
push
daa
cmp
jo
or
mov
imul
je
push
pop
pop
imul
sbb
mov
aad
sbb
cli
cmp
push
mov
imul
dec
scas
or
or
ljmp
xchg
mov
lock
orl
into
cmp
inc
or
dec
xor
and
xlat
nop
dec
jb
mov
inc
ret
or
inc
popa
inc
aaa
or
push
mov
mov
jl
aaa
jecxz
mov
test
xor
sub
cltd
push
aas
mov
roll
ljmp
jne
jae
orps
mov
cld
dec
cld
push
enter
dec
xchg
sbb
mov
clc
push
popf
fstl
push
pop
dec
mov
or
mov
shlb
pop
imul
pop
xchg
aas
mov
sbbb
jg
leave
push
mulb
jae
mov
fwait
ja
add
cwtl
push
test
aam
pop
arpl
adc
xor
adc
xchg
les
bound
push
movsb
cmp
dec
mov
cmc
fcmovnbe
test
arpl
mov
pushf
push
lahf
xchg
mov
js
adc
adc
test
fldt
mov
popf
popf
inc
cmp
cld
add
or
addr16
cmpsb
add
adc
push
aam
shlb
shll
mov
fs
inc
dec
push
inc
loopne
dec
mov
sub
dec
mov
mov
push
imul
fs
push
or
mov
icebp
or
js
mov
jne
cmc
add
insb
repz
jns
out
push
push
loopne
xchg
ret
mov
push
ret
sti
ds
or
sbbl
mov
popa
cmp
cmpsb
loope
push
sub
add
into
divl
xor
jbe
dec
jns
scas
dec
rol
pop
jnp
ljmp
lret
bound
inc
aad
frstor
mov
or
test
adc
sbb
or
arpl
mov
mov
insl
subb
lds
js
and
ss
clc
ret
lret
mov
leave
adc
sbb
arpl
std
pop
loope
push
jae
fwait
xor
inc
sarl
scas
aad
mov
or
push
movsl
lods
hlt
pop
sbb
mov
adcb
push
xchg
or
pop
aaa
out
sbbl
popf
pop
std
js
xchg
cmp
loop
int
sub
test
or
inc
ljmp
imul
movsl
and
aas
adc
push
test
hlt
adc
cmp
ret
ficoml
xor
js
rcrl
pop
add
inc
pop
inc
pop
add
sub
bound
mov
jmp
imul
int
xchg
je
dec
jge
jp
jno
mov
inc
push
mov
jne
sbb
jl
mov
shlb
pop
pusha
xchg
mov
adc
icebp
pop
pop
mov
pop
jmp
push
push
dec
push
inc
out
les
ret
mov
mov
icebp
scas
xchg
mov
and
dec
into
xchg
pop
ja
test
scas
sarl
and
insb
mov
mov
nop
aaa
jmp
out
adcl
xlat
add
dec
push
push
nop
xor
inc
sti
push
jp
mov
or
xor
mov
fsub
call
pop
jne
push
jmp
aas
push
adc
test
xor
xor
and
inc
xchg
and
popa
call
loopne
sub
cmp
in
int3
test
push
idivb
imul
mov
faddp
adc
adc
or
nop
rolb
and
add
movb
cmc
ret
mov
hlt
push
or
rcll
push
call
mov
mov
cmp
xor
pop
pop
pusha
pop
in
mov
mov
or
cmc
xorb
pop
adc
into
sbb
pop
sarb
test
es
clc
mov
dec
jg
cmp
test
movsl
movsl
pop
sbb
and
xchg
jp
sub
js
jmp
imul
fs
pop
add
sub
sub
mov
orl
shl
imul
mov
int
adc
mov
dec
and
xlat
xchg
mov
shlb
dec
adc
fbstp
add
pop
fwait
sub
push
add
addr16
loop
push
inc
mov
clc
imul
enter
shl
loop
push
inc
popa
inc
adc
pop
hlt
in
inc
arpl
hlt
addb
js
cli
or
pop
cld
mov
sub
push
cmp
sti
pop
sub
cmp
int3
adc
mov
and
push
into
cmc
fimuls
dec
jp
je
sub
adcl
jle
ds
cmp
push
sahf
inc
pop
cs
adc
aam
or
dec
es
pop
xchg
push
fdivl
out
leave
mov
in
test
xlat
adc
push
int3
xor
clc
inc
add
mov
leave
push
jnp,pt
pop
pop
dec
xchg
cmc
jb
fsts
mov
lds
cmc
bound
jmp
lods
pushf
sbb
ret
sub
popa
dec
or
in
pop
daa
aam
mov
inc
popf
loopne
xchg
push
je
testl
sbb
sbb
std
les
lock
test
add
adcb
aaa
leave
subb
adc
mov
xchg
inc
mov
rcrl
sbb
or
pop
xchg
aas
adc
enter
pop
sub
push
or
int3
fldcw
in
ret
xchg
jp
or
std
aad
adc
or
lret
addb
sub
jo
std
cmp
push
push
push
sbb
mov
mov
shrb
mov
adc
cmp
or
cli
out
pop
mov
lods
out
aam
mov
pop
int
jg
loopne
faddl
sub
out
push
cltd
clc
or
push
mov
pop
push
and
dec
sbb
aas
push
adc
shrl
sbb
push
and
clc
adc
xor
in
fsts
xchg
loopne
sarb
call
jnp
inc
stos
out
xchg
les
sub
aas
or
pusha
jl
dec
sti
sarl
mov
push
xor
add
imull
test
pop
dec
pop
lods
testb
mov
push
mov
leave
push
rorb
push
in
jl
xchg
push
mov
xlat
inc
lahf
insl
cld
add
jecxz
sub
cmp
ret
sub
xor
jl
and
dec
adc
xor
loopne
dec
or
mov
ret
lods
mov
loop
ficoms
add
in
jo
cmp
bound
xchg
in
int
js
popaw
add
test
pop
pop
shlb
idivb
arpl
cmp
js
mov
outsl
sbb
and
jne
nop
sub
add
lods
es
dec
xchg
lahf
xorb
dec
mov
aas
xchg
dec
pop
es
leave
into
pushf
mov
movsl
pusha
movsl
push
dec
or
arpl
add
sub
cs
outsl
mov
aam
les
popf
sub
mov
xor
cmpsl
adc
mov
adc
dec
mov
mov
xchg
xchg
pop
push
jp
fnstcw
sub
jle
adc
pop
daa
mov
or
lods
sbb
in
xor
cmp
inc
popf
mov
lahf
fnstsw
inc
sti
movsb
push
test
or
sbb
dec
clc
outsl
ljmp
mov
std
rolb
adc
outsb
mov
or
sahf
and
xchg
shr
jle
add
jno
xchg
test
push
addb
inc
or
mov
lods
aam
inc
pop
cmp
push
ja
sub
js
sbb
mov
aam
cmpsb
or
or
ret
adc
add
fiaddl
jg
std
mov
repz
mov
pusha
sbb
pop
scas
shlb
test
or
jcxz
insb
stos
xchg
add
cmp
add
add
inc
mov
loopne
inc
adc
xchg
cmp
lods
push
mov
push
jmp
jns
cwtl
mov
push
xor
shll
adc
dec
clc
jno
sub
ljmp
aas
jge
test
fcmove
sub
dec
inc
pop
ret
adc
sbb
fsubrl
and
test
cld
add
loop
push
out
pop
xchg
mov
outsb
lock
or
rcrb
fldenv
jecxz
dec
insl
stos
xor
mov
xchg
bound
and
ds
jmp
dec
sbb
inc
add
xor
adc
mov
push
push
cmp
mov
add
mov
mov
xchg
das
sub
js
js
mov
int
adc
out
cmpsb
cmp
sbb
or
jno
inc
xor
pusha
or
stos
test
jnp
cmp
icebp
cwtl
or
add
js
xor
addr16
movsb
pop
mov
ret
xchg
cli
push
mov
ret
push
test
popa
lea
cltd
xchg
bnd
ficoms
push
mov
push
and
cld
mov
je
mov
jbe
add
or
inc
adc
and
xor
xor
call
ret
lds
pusha
xlat
mulb
lahf
cmp
mov
xor
xlat
add
pop
aaa
aas
mov
inc
xor
add
mov
int
mov
pop
cld
push
nop
or
jne
sbb
inc
es
sti
test
test
rclb
mov
roll
and
fnstenv
mov
sub
mov
arpl
int3
sbb
lret
hlt
sbb
or
ljmp
mov
inc
cwtl
jecxz
sbb
xchg
xchg
add
jb
ss
or
pop
pop
xchg
xor
adc
mov
dec
jae
push
mov
fdiv
adc
aaa
int3
das
jno
push
jae
add
inc
add
jb
adc
fnsave
mov
in
pop
fisubrl
imul
adc
mov
out
sub
fistpl
mov
popa
daa
xor
jmp
fs
in
xchg
decl
sub
lock
addl
ds
push
in
dec
hlt
push
and
lods
popa
lret
fwait
test
inc
lahf
scas
mov
inc
jmp
jle
cmp
inc
fmulp
mov
cmp
add
mov
iret
hlt
popa
mov
add
mov
xchg
jns
es
xchg
push
cmp
cmpsl
in
mulb
lock
imul
mov
shll
and
jnp
icebp
pop
sbb
daa
inc
push
scas
out
mov
inc
mov
sub
cmpsl
adc
cmp
sub
add
les
lods
push
xor
fists
inc
ret
lods
sbb
mov
jge
mov
push
xor
mov
jp
cltd
pop
jo
jge,pt
pop
mov
jmp
imul
fcmovb
popa
ss
sub
push
nop
roll
unpcklps
inc
mov
cwtl
out
jp
ss
cmp
rdmsr
and
sub
arpl
mov
push
jle
inc
sbb
lods
push
imul
xchg
mov
movb
add
add
in
pop
cmpsb
xlat
mov
mov
loopne
clc
imul
dec
dec
addb
sub
dec
mov
cmp
mov
and
xchg
jnp
fcompl
shr
jge
cwtl
mov
incb
jp
fsubl
test
les
int
adc
sbb
lret
insl
test
iret
data16
fistpl
mov
xchg
sar
imulb
lods
ss
popf
test
cmpsb
js
or
aad
mov
mov
int3
adc
or
inc
fisubrs
adc
mov
cwtl
push
xor
mov
xor
scas
hlt
sti
inc
loopne
add
icebp
xor
sub
mov
sub
iret
or
push
and
pop
jecxz
or
loopne
popf
fistps
ds
inc
dec
outsl
jbe
xchg
daa
lods
cmp
shr
stos
stos
mov
mov
dec
xchg
sub
lcall
dec
fucomp
lock
sbb
das
adc
rcl
push
and
mov
sbb
xor
or
add
pop
sub
nop
cltd
jg
insb
mov
mov
mov
push
jnp
incl
mov
sub
movsl
aas
or
pusha
and
aam
shl
or
and
imul
out
int
xor
cmpb
mov
push
xchg
fwait
cli
pop
icebp
jle
inc
pop
stos
dec
lret
js
cld
jp
rclb
sub
rorb
scas
ret
push
incb
jg
mov
lcall
cmp
push
imul
mov
call
insb
push
xor
or
je
push
daa
mov
and
and
add
or
js
sub
cmp
mov
in
sti
push
pop
add
enter
lods
jb
shrl
out
xlat
ficomps
xor
push
mov
js
jo
es
loopne
push
mov
ficoms
pop
jo
iret
or
call
mov
nop
sub
adc
dec
sahf
lret
pusha
stos
inc
cli
push
in
lds
mov
cltd
loop
shlb
xchg
push
push
test
add
stos
push
jne
test
sti
call
ret
xor
ja
push
mov
inc
xchg
lcall
sbb
aam
jl
push
out
das
aam
or
mov
test
clc
xor
sbb
outsb
pushf
pop
test
pop
test
out
rorl
push
pop
mov
into
add
mov
sbb
fsub
push
in
xchg
mov
inc
sub
popa
lea
mov
mov
cmp
jns
test
pop
shrl
ret
stos
push
sbb
imul
sbb
push
sub
adc
ljmp
in
test
cmpsl
adc
mov
push
out
push
lahf
jno
push
cli
aad
cwtl
xor
or
mov
or
jmp
xchg
adc
and
decb
mov
add
icebp
movsl
cmp
into
fs
aam
adc
aaa
popa
or
inc
mov
rclb
cmp
sbb
jbe
cld
ds
xlat
js
mov
jnp
es
xchg
mov
dec
bound
or
in
jecxz
add
dec
das
cmpsl
out
ljmp
outsb
ret
sahf
add
rorl
loop
pop
lock
nop
int3
mov
dec
jl
stc
insb
test
dec
sarb
sbb
push
bound
adc
jb
les
imul
int3
add
dec
cmp
pop
inc
push
ja
pop
xchg
jge
sub
mov
jecxz
add
addr16
add
rclb
cmpl
mov
or
lds
cmp
cmp
insl
mov
xchg
mov
jo
ljmp
xorb
jo
adcb
add
call
pop
add
enter
es
adc
sbb
cmc
mov
and
jo
jns
incl
pop
dec
int
jle
sbb
mov
mov
pop
mov
movsl
push
pop
or
dec
inc
lcall
loopne
stos
sub
add
inc
pop
xor
cli
cld
jp
cli
sub
push
ja
mov
sbb
cmpsb
dec
add
mov
add
add
add
stc
or
sbb
and
dec
pcmpgtb
inc
orl
mov
adc
ret
inc
popf
mov
in
push
ja
or
cmc
pop
jl
shl
hlt
cld
push
leave
dec
mov
ret
or
leave
mov
add
in
mov
notb
ret
cltd
mov
inc
sbb
bound
push
xchg
dec
dec
scas
ret
ret
push
bnd
stos
in
test
pop
lea
pavgw
aas
leave
jmp
fildll
stc
xchg
xor
mov
and
jp
scas
pusha
mov
mov
out
push
cmp
shr
xchg
ljmp
push
inc
stos
data16
cs
lret
mov
fsts
mov
nop
jns
sarl
xlat
sub
jge
xchg
aas
mov
add
loopne
out
pushf
into
mov
push
sti
enter
lods
cli
roll
mov
and
jbe
insl
push
iret
mov
aad
cmp
arpl
cmpsb
xchg
push
insl
ret
scas
mov
push
mov
fbld
cmp
loop
jo
xchg
dec
or
add
jbe
sbb
jmp
movsl
int
hlt
dec
ret
lds
jns,pn
mov
hlt
rorl
push
push
inc
push
dec
mov
fmull
call
xor
mov
add
repnz
rolb
inc
jns
loopne
adc
sbb
shl
cmpb
addr16
das
sub
jae
cmpl
imul
je
sbb
adc
stc
push
scas
adc
xchg
or
pop
stc
movsb
adc
enter
int
movsb
rcll
or
fsubl
hlt
add
es
fbld
pop
sub
inc
loopne
cs
dec
mov
nop
fdivs
pop
add
stos
add
add
mov
ret
pushl
and
mov
loopne
rolb
les
and
xor
push
das
and
pop
mov
cs
popa
xchg
mov
jno
lcall
add
stc
xchg
adc
jp
hlt
mov
jne
xor
repz
scas
mov
sub
ret
fildll
movsb
mov
sub
sbb
push
int
repz
inc
lods
xor
outsb
ljmp
inc
mov
mov
mov
pop
mov
cmp
sub
cltd
fisttpl
adc
cli
xchg
bound
fwait
dec
mov
ja
mov
pop
out
cld
mov
outsb
jmp
stos
icebp
sahf
dec
xchg
gs
arpl
insb
imul
icebp
lea
js
xchg
in
stc
jp
jmp
pop
and
movsl
or
add
ja
xor
cmp
mov
xchg
inc
dec
mov
mov
ljmp
dec
fisubrl
jmp
scas
pop
fsubrl
cmp
or
adc
or
cmp
sti
cltd
push
je
shr
cmp
sub
int3
cmpsb
lret
push
adc
imul
in
push
nop
imul
jo
push
sub
insl
adc
cmpsl
aam
ret
gs
inc
push
push
in
sarb
fs
pop
or
or
sub
and
lcall
adc
push
mov
aam
mov
clc
call
ljmp
add
xchg
scas
roll
mov
in
sub
hlt
insb
ret
mov
lods
sub
fldl
push
jbe
dec
fwait
mov
jbe
mov
inc
cmc
out
mov
std
loopne
xor
lahf
int3
mov
inc
cmpsb
or
sbb
push
or
jno
sub
pop
mov
lahf
xor
std
ret
mov
inc
push
sub
repz
mov
cmc
add
dec
test
cltd
out
std
clc
pop
lock
pop
and
mov
ja
sub
adc
dec
into
subl
jge
mov
dec
lock
sub
dec
sub
loop
in
xchg
cld
rolb
popf
clc
pop
out
rolb
xor
pop
outsl
mov
cmp
pushf
aam
scas
add
jge
dec
pop
xchg
mov
test
pop
das
add
pop
stc
xchg
add
enter
sbb
push
adc
mov
xrelease
aaa
fldenv
rorb
inc
loop
stos
or
mov
cmp
jno
inc
cmp
add
movnti
loope
mov
aaa
scas
pusha
bound
fidivl
outsl
test
sub
repnz
dec
insl
and
outsb
push
cli
insb
jg
dec
sub
je
xor
dec
dec
sbbl
das
faddl
jg
in
out
inc
jg
pop
cwtl
sti
cmpsb
push
add
std
mov
loop
iret
inc
sbbl
loope
mov
mov
push
mov
lods
pop
mov
icebp
in
sbb
sub
jno
xor
mov
aad
pop
mov
or
fnstsw
outsb
inc
ret
rcll
add
adc
push
cmp
push
js
lret
or
or
sub
das
mov
xor
jno
mov
shll
xlat
aam
cli
es
dec
rolb
push
gs
or
loop
aas
cmp
mov
add
push
jo
sbb
sbb
sbb
sbb
imul
in
cmp
adc
stos
inc
outsb
mov
mov
mov
jmp
std
cmp
xchg
jno
pop
rcl
sbb
mov
ljmp
add
or
fistps
add
shlb
mov
push
dec
jge
jecxz,pt
mov
stos
mov
les
fdivr
inc
stc
and
xor
ret
rsqrtps
mov
pop
cld
jp
imul
shll
add
lahf
inc
cmp
fsubrl
mov
mov
icebp
pop
ret
xchg
mov
sbbl
mov
add
arpl
out
add
lods
and
addr16
repnz
addr16
movsb
ficompl
lods
out
inc
mov
in
jnp
mov
cmpsb
pop
add
lret
cli
sbb
jbe
stos
lret
mov
adc
subb
popa
fcmovnbe
bound
adc
lret
pop
mov
ficompl
push
cmpsl
add
dec
adc
out
pop
and
jp
scas
cld
xor
mov
scas
cmp
testl
fiadds
jl
test
pop
xor
bound
xor
sbb
push
dec
dec
xchg
pop
nop
push
js
mov
mov
fidivl
popf
imul
movsb
cmpsb
rorl
loop
sahf
jecxz
push
js
sub
stc
fisubl
dec
in
sbb
mov
rcrb
imul
push
jmp
adc
jb
jnp
push
popf
repz
xor
out
imul
mov
adc
or
xor
pop
mov
aaa
pop
add
xor
mov
mov
daa
ret
and
pusha
mov
test
rorb
jecxz
loop
or
mov
sbb
xchg
and
xchg
mov
and
xchg
xor
push
mov
and
lods
mov
dec
ss
cmp
jb
int3
sub
inc
cs
xchg
insl
dec
push
jne
gs
jne
push
mov
subl
or
mov
xchg
pop
adc
ds
push
jbe
cld
add
or
push
cs
clc
adc
in
inc
inc
cli
jmp
imul
sbbl
shll
xor
pusha
sub
xchg
xchg
xor
mov
insb
pop
das
fsubrs
mov
or
cld
or
imul
xor
jle
jl
sbb
mul
push
test
shll
stos
sbb
fbstp
mov
iret
clc
and
sahf
mov
mov
inc
ds
mov
sarl
pop
mov
cmp
xor
or
mov
js
push
fidivl
movsl
jp
imul
fwait
in
adc
aas
sbb
pusha
and
xchg
mov
or
shll
pusha
sbb
rcr
cwtl
cmp
ljmp
outsl
std
jo
mov
inc
jb
mov
imul
or
xchg
mov
jnp
push
int
push
adc
cli
mov
testb
mov
mov
add
fwait
scas
in
xchg
push
int3
pop
inc
mov
stos
call
enter
sub
or
outsb
imull
xchg
xchg
push
pop
jg
or
sbb
jmp
dec
add
les
sbb
filds
pop
xorl
push
cli
leave
push
movsl
daa
mov
lods
inc
hlt
notb
flds
ret
and
xor
cmpsl
fwait
movsb
mov
xchg
or
add
or
les
xchg
jnp
insb
xor
fnstcw
out
fwait
notl
dec
push
stc
ljmp
xor
aad
test
mov
jg
sbb
push
or
adc
enter
push
scas
dec
stos
rclb
lret
rorb
or
bound
sarl
inc
int
cmp
jmp
jns
cli
mov
inc
lock
xor
jmp
mov
aad
loope
sbb
std
push
nop
cmpsl
pop
aas
je
jp
and
rol
incl
cmpsl
nop
mov
loop
sar
movsl
dec
aam
add
or
dec
jnp
push
push
imul
out
cltd
mov
add
scas
scas
jne
mov
mov
xchg
inc
inc
lcall
adc
mov
std
scas
stos
mov
into
fdivs
inc
mov
mov
pop
xchg
push
xor
in
decl
int
stos
bound
es
orl
daa
mov
mov
and
or
addr16
jne
or
jb
insl
and
jo
pop
aad
fs
add
pop
inc
and
sbb
aas
sub
xchg
sbb
jmp
subl
add
dec
ja
sub
popa
addb
push
inc
dec
adc
jo
aam
add
sbb
jo
loope
mov
push
imul
lcall
cmpsl
popf
mov
mov
jb
mov
sbb
adc
lcall
xor
add
jecxz
dec
in
push
lock
stc
loopne
enter
push
dec
dec
dec
mov
hlt
mov
pop
lea
pushf
push
mov
movsb
test
xchg
fisttps
into
add
jno
int
out
mov
shll
mov
fistpll
and
mov
jmp
pop
nop
cmp
stos
jo
in
and
jp
mov
fcmovb
and
cmp
add
cmp
pop
pushf
inc
cmp
cmpsb
hlt
lock
loopne
mov
xor
jecxz
mov
and
outsl
adc
aas
mov
or
lds
sub
inc
sub
xlat
cmp
jb
aad
xor
push
rorb
adc
xchg
lods
or
inc
mov
aad
fistps
fmuls
or
and
push
testb
or
idiv
sbb
enter
sbb
jp
xor
mov
add
lahf
lock
dec
ds
or
cltd
push
push
pop
sahf
add
pop
mov
clc
add
xor
ja
testb
fwait
aaa
ss
and
pop
lods
and
or
or
lods
int3
add
xchg
jb
in
mov
mov
negb
ret
bound
outsl
or
out
add
data16
loope
add
add
fsts
lret
je
push
mov
daa
pop
jne
sbb
loope
or
in
nop
xor
mov
add
aas
pop
pusha
pop
outsl
bound
jecxz
inc
inc
dec
add
jg
xchg
mov
push
daa
out
add
mov
xor
xchg
rol
rclb
adc
pop
jecxz
dec
jg
shlb
mov
pop
xlat
fsubrp
sbbl
sbb
fisttps
outsl
xchg
cmp
out
lock
inc
dec
hlt
adc
xchg
cmpsl
xchg
jbe
mov
pop
or
daa
and
movsl
mov
inc
or
subb
rorb
scas
and
stos
mov
fldcw
iret
and
xchg
xchg
pop
call
daa
jo
xor
sbb
sbb
movsb
push
cmp
lcall
inc
adc
inc
sub
nop
dec
ficoms
pop
add
insl
icebp
sbb
xor
mov
sbb
pop
and
nop
roll
xor
jge
roll
pusha
fistpl
fs
sbb
jge
sbb
or
push
mov
pop
aam
repnz
mov
mov
pop
xchg
sub
sub
roll
mov
pop
inc
mov
push
xchg
ds
xor
sub
xchg
bound
loope
sbb
or
push
inc
pop
cmp
sub
cmp
es
xor
test
popf
pop
test
xchg
xor
add
lcall
push
fnstsw
dec
push
mov
hlt
popf
lods
mov
mov
adc
jmp
adcb
cwtl
jl
inc
lea
loope
dec
mov
stc
pusha
inc
imul
fldcw
or
xchg
cmp
and
mov
lcall
pusha
push
and
mov
jno
mov
jnp
sbb
andl
push
cwtl
mov
lods
cmpsl
push
jae
pusha
push
xchg
outsb
clc
sub
divb
xor
sub
and
and
daa
cmp
mov
scas
xchg
jns
push
movsl
sbb
jb
xchg
out
xor
xchg
das
push
test
loopne
jl
jl
mov
loopne
icebp
andl
sbb
sbb
and
mov
ret
xchg
fwait
sub
je
mov
xor
loop
add
test
loope
add
jmp
pop
push
push
jb
cmpsl
inc
jg
mov
inc
scas
jle
pop
or
pop
clc
inc
fdivr
dec
add
xchg
jg
sahf
cmp
fld
lahf
sbbb
xor
xchg
jnp
pop
pop
mov
dec
xchg
push
test
or
test
mov
add
inc
jle
lret
and
xor
mov
fcom
cwtl
inc
add
xor
mov
pop
je
insl
rolb
dec
std
push
jmp
mov
hlt
sbb
sbb
nop
dec
jno
lcall
mov
outsb
arpl
popa
mov
ret
adc
out
dec
mov
leave
sub
repz
cmp
pushf
sbb
sbb
cld
andl
icebp
add
or
cwtl
xor
cmp
jecxz
xchg
inc
add
xchg
jge
subl
std
fdivs
mov
cmpsb
inc
ss
mov
cmp
mov
rclb
ret
inc
orb
or
jmp
mov
test
loope
inc
pop
fisubl
imulb
push
iret
cmc
cmc
or
arpl
ja
sbb
stos
add
jecxz
dec
ret
call
sbb
mov
insb
paddusw
pushf
push
mov
lret
mov
cli
mov
or
adc
adc
js
insb
loopne
pop
mov
int
xor
cmp
les
lock
loopne,pn
inc
jns
pop
in
push
scas
rcll
shlb
sarb
inc
sub
jp
jecxz
jbe
pushf
mov
ret
mov
in
adc
add
add
lock
in
xor
shll
pop
lock
adc
rol
mov
sbb
or
iret
cmpsb
sub
sub
jl
ds
jnp
lods
cli
cmc
dec
call
sbb
adc
push
cmp
xor
mov
lds
rcrl
cli
and
les
cmp
fsubl
popf
mov
jo
cmc
repz
push
xchg
mov
aas
loopne
das
push
ljmp
js
scas
dec
cmpsb
dec
ljmp
push
lahf
cmpsl
push
cld
sbb
leave
mov
dec
mov
sub
push
sub
les
sbb
rcr
rorl
cs
xor
test
adc
addr16
scas
rcr
int
xor
outsb
ret
push
pusha
bnd
bound
lcall
mov
inc
fs
jecxz
sbb
fists
mov
mov
xchg
icebp
xchg
mov
cmp
cmp
sahf
lahf
mov
push
testl
xor
rcll
add
adc
fs
sbb
dec
cltd
or
insb
int3
mov
sub
sti
mov
push
jbe
test
xchg
xchg
add
stc
leave
int3
out
test
lret
insb
into
or
pop
rorb
cltd
xor
ds
add
inc
xchg
jbe
mov
mov
clc
mov
movsb
int3
jbe
movsl
sbb
cmp
jle
lret
cmp
test
and
or
mov
in
cltd
in
mov
mov
cmpsl
dec
daa
dec
adc
std
insl
loop
jo
jmp
xor
adc
ds
mov
fs
mov
dec
out
ja
mov
mov
test
sub
shll
cmpl
imul
dec
repnz
or
jecxz
jp
fbstp
inc
ljmp
cld
cwtl
jb
inc
call
pushf
call
pusha
and
inc
pop
jae
loope
mov
or
jbe
dec
mov
rorb
inc
inc
add
pop
cmp
psrld
pushw
push
into
stos
jp
add
and
pop
mov
dec
push
cltd
mov
rcrb
or
subl
sarb
sbb
xchg
mov
add
xor
cmp
or
sub
repnz
rorb
add
xor
jno
jle
jne
jmp
mov
shrb
sahf
jl
adc
mov
dec
mov
dec
jp
sub
or
inc
xchg
jno
out
out
and
mov
sub
adc
xchg
adc
add
push
rolb
std
xbegin
iret
addr16
aas
sub
fdivr
insb
dec
add
push
inc
cmp
push
mov
aaa
loopne
and
jl
or
daa
roll
push
and
inc
push
push
add
push
sub
inc
xor
leave
fmuls
mov
sub
or
mov
jle
push
mov
add
push
and
mov
pop
adc
dec
loope
pop
jb
rol
dec
dec
rcll
fwait
cmp
mov
push
push
jns
cmp
rcrl
cld
pop
mov
mov
add
cmp
and
push
mov
xchg
mov
testb
or
movl
add
cld
pop
xchg
add
dec
adc
cs
inc
cwtl
call
inc
sbb
inc
maskmovq
testl
pop
enter
mov
dec
scas
call
dec
int
ljmp
shlb
imul
call
dec
xor
inc
or
push
push
xorb
push
enter
xchg
mov
scas
mov
push
xchg
out
nop
jns
out
mov
dec
sarb
xchg
add
insb
outsb
dec
jecxz
lcall
xlat
sarl
outsl
mov
movsb
repz
inc
adc
add
test
aam
add
mov
jge
push
pop
add
addb
add
mov
shrl
aad
jnp
mov
loope
in
pop
loopne
gs
shl
loopne
mov
cld
cmp
je
and
adc
lods
jnp
mov
mov
ds
dec
out
sub
push
xor
jecxz
mov
in
fimull
and
sbb
popa
cmpl
out
arpl
ds
xor
insl
cmp
mov
lret
lock
sti
jmp
sub
xchg
xchg
in
sub
outsl
cwtl
lods
xchg
cs
mov
int
and
mov
fisttpll
outsl
mov
iret
jp
mov
shr
jb
sub
sub
daa
negl
mov
xorl
sbb
and
and
pusha
movsb
push
xor
mov
sub
scas
test
mov
lahf
and
jb
and
les
fsubs
xorb
adc
push
int
mov
js
or
adc
mov
dec
iret
adc
sub
xchg
mov
jns
out
enter
aas
pop
movsb
lahf
lock
punpckhwd
in
dec
and
and
test
pop
push
outsl
push
clc
cld
arpl
test
out
adc
les
call
inc
mov
in
inc
xlat
jge
data16
test
sub
cmpsl
cs
push
push
cli
in
cmp
lock
jg
inc
fdivrl
test
lds
push
loope
pop
test
xchg
test
movsl
mov
and
jp
push
push
push
jmp
sub
pop
xchg
sbb
sahf
xchg
cmp
js
or
cmpsb
pusha
adc
imul
or
cmp
adc
push
fiadds
movsb
repnz
test
sbb
orl
orb
jno
data16
xlat
movl
cmp
inc
or
inc
das
stc
sub
xor
pop
cmp
mov
pop
pop
mov
jmp
mov
std
mov
lods
lds
clc
or
aas
mov
fwait
pop
pushf
repz
inc
mov
fsubrs
popa
add
jl
push
cltd
clc
and
call
push
lcall
add
inc
lea
xchg
sub
insb
xchg
pop
adc
add
push
mov
mov
lcall
cmp
orl
lock
cli
fs
ss
pop
mov
pop
rorl
push
and
cwtl
add
dec
je
xor
xlat
push
daa
pushf
nop
icebp
imul
rcll
loopne
not
mov
sbb
mov
fldt
dec
mov
add
xchg
dec
cmp
mov
popa
push
popa
pop
xor
int3
and
mov
not
xor
mov
inc
test
xchg
aam
inc
lods
sbb
jo
xchg
ret
lock
int3
and
cld
mov
ffree
or
add
ret
push
arpl
sub
cmp
lds
es
cs
mov
pop
lock
push
inc
addl
mov
imul
ds
in
sub
dec
jg
xor
iret
add
inc
stc
jle
push
sbb
adc
cmp
pop
loope
push
cmpsb
insb
cld
inc
inc
bnd
cmpsl
inc
pop
add
lods
pop
frstor
mov
bound
loope
icebp
bound
lock
test
jae
push
xchg
inc
bound
scas
call
fwait
pusha
and
es
sub
and
xchg
outsl
inc
shll
decb
ljmp
fcomp
inc
add
andb
xchg
jne
mov
xchg
xchg
fs
push
adc
movsb
xor
lods
cmc
sbb
push
clc
dec
pop
inc
pop
pop
mov
mov
faddl
jnp
push
insl
fmull
jecxz
fimuls
lahf
push
add
pop
cltd
js
test
sub
sub
mov
adcl
imul
rcl
scas
pop
mov
jp
adc
negl
mov
push
inc
fcoml
jg
pop
cwtl
and
cmp
popf
bound
fnstsw
cs
push
popw
faddl
add
push
jo
idivl
xor
cmpl
das
bswap
mov
push
and
or
jl
insb
pop
scas
adc
cmpsl
icebp
icebp
in
mov
push
idivl
addr16
int
jmp
add
dec
lcall
rcrb
xor
push
aas
xor
fwait
and
je
test
ret
add
mov
int3
dec
int3
and
aaa
rorl
aaa
imul
addr16
xchg
std
jmp
inc
pusha
pusha
into
adc
jle
divb
add
push
dec
xor
sbb
or
xlat
outsb
inc
es
xorl
push
xor
clc
push
scas
adc
aaa
jp
mov
enter
fs
hlt
rorl
icebp
scas
xchg
es
inc
dec
test
sub
dec
daa
dec
gs
insl
mov
les
mov
aad
in
push
sub
rcrb
mov
xchg
push
or
cmp
out
mov
ret
xlat
in
sbb
hlt
arpl
ljmp
pusha
stos
cmp
xchg
mov
dec
pop
sbb
and
cmp
mov
sbb
loopne
pop
enter
pop
fs
adc
adc
loopne
sbb
push
test
popa
sbb
sub
push
jno
into
lea
push
pop
fdivrs
sub
rcll
sbb
sahf
ljmp
imul
adc
pop
into
arpl
xchg
pop
push
in
xor
imul
xor
test
mov
decl
insl
leave
fcoml
sub
xchg
mov
push
push
adc
push
std
jb,pn
loop
pusha
cmpsl
or
push
pop
jno
negl
mov
jp
push
sti
outsb
test
sbb
pop
in
out
add
cmp
mov
adc
roll
test
cld
lret
mov
or
lahf
inc
mov
test
in
jne
lock
or
negb
les
fisubl
pop
rcrl
hlt
mov
test
fbld
aam
orl
mov
dec
mov
mov
std
cld
add
repnz
aas
adc
popl
adc
rorb
call
filds
stos
aaa
mov
lods
and
push
mov
rcrl
pop
dec
adc
loope
mov
inc
mov
imul
loope
jl
je
jns
sub
movsl
add
out
pop
scas
rclb
and
pop
add
push
out
pop
xchg
ljmp
add
shrb
add
xor
icebp
ja
dec
add
insl
sub
push
hlt
fdivs
aam
dec
insl
popa
inc
pop
inc
xor
clc
adc
add
into
mov
insl
or
rolb
inc
mov
dec
rol
sub
daa
cli
and
push
add
adc
push
or
cmpsl
xor
xchg
pop
inc
imul
imull
xchg
outsb
sahf
jo
adc
std
mov
pop
push
adc
add
bound
ss
push
mov
addl
inc
ja
dec
push
push
push
and
mov
mov
xor
xchg
xchg
insl
mov
imul
dec
insb
in
adc
mov
xchg
outsl
jmp
cmp
adc
inc
adc
push
sub
cmp
mov
sbb
pop
mov
inc
add
dec
fimull
negb
xlat
add
mov
push
daa
add
pop
add
add
neg
inc
lret
xchg
dec
mov
inc
adc
dec
push
push
push
rcr
cmp
inc
mov
push
pop
cli
inc
repnz
add
adc
adc
into
js
mov
push
loop
adc
add
rcl
inc
enter
dec
sbb
jp
int3
inc
mov
jae
or
dec
dec
dec
push
aam
inc
call
dec
insb
and
out
add
push
insb
popa
jmp
cmp
int
cmp
sbb
repnz
and
das
push
cmp
jmp
push
stos
dec
les
bound
adc
dec
mov
add
sub
cmpsl
xchg
mov
loopne
cmp
xchg
jmp
jne
push
mov
mov
jmp
call
sub
mov
fidivs
je
fdivr
je
or
xor
mov
add
and
or
insb
jo
xchg
lea
out
dec
sbb
pop
popa
lods
xor
inc
mov
andb
sub
mov
imul
lock
loopne
insb
mov
dec
xchg
and
fs
or
mov
mov
push
inc
xor
mov
icebp
mov
or
pushf
and
adc
xor
and
stos
ljmp
mov
mov
sub
addr16
repnz
jmp
cmp
add
adc
paddusw
filds
ret
mov
or
ljmp
jnp
popf
inc
cwtl
je
push
scas
adc
ljmp
dec
xchg
xchg
cmpsb
lock
daa
repnz
add
dec
add
fimuls
mov
addr16
or
cltd
dec
es
mov
push
loopne
stos
or
rclb
xchg
sbb
inc
or
loopne
lea
out
cs
pop
sti
divb
icebp
dec
sbb
addr16
xor
inc
jl
and
mov
movsb
cmp
pop
push
mov
es
add
xor
xor
sub
lods
sbb
xchg
jns
inc
imul
test
andb
mov
xchg
sar
push
push
add
fsubs
or
xchg
xchg
fbld
adc
adc
cmc
loop
mov
adcl
jae
sbb
mov
cmp
and
in
dec
cmp
or
addr16
fadds
adc
pop
lcall
aam
or
test
push
mov
pusha
mov
ret
add
sbb
push
imul
fpatan
sti
mov
add
addr16
push
push
sub
loopne
fldenv
sub
dec
mov
popf
sbb
xor
sbb
cmpsl
push
xor
mov
jns
fsubrl
lret
lea
push
push
jns
stos
xchg
xchg
shrb
pop
and
cld
inc
out
out
popf
xorl
ret
add
lods
push
aad
inc
shll
popf
sub
mov
cmp
inc
mov
pop
insb
pop
je
leave
js
ljmp
mov
pop
cmc
mov
test
or
jmp
xorl
out
mov
or
sub
ds
icebp
leave
fistpll
rorb
shl
sub
xor
ja
jo
inc
adc
lods
iret
sarb
das
lret
sub
adc
inc
jle
leave
outsb
subb
shrb
add
ror
mov
xlat
ficompl
mov
push
test
idivl
daa
xchg
mov
xlat
xchg
dec
inc
and
or
mov
sbb
nop
movsb
pushf
daa
mov
iret
sbb
cld
call
xchg
sub
jns
add
inc
enter
jg
insb
mov
jl
inc
mov
pop
shlb
mov
sub
xor
nop
xor
jnp
lods
enter
out
adc
adc
cmp
inc
push
xchg
mov
mov
out
add
adc
cs
jo
dec
xchg
mull
and
adc
pop
sarl
mov
cmp
call
push
sbb
cld
push
sbb
icebp
decl
cmp
std
push
or
and
mov
xchg
dec
rcr
mov
lock
jmp
rcr
ret
or
mov
ja
idivb
aad
xlat
mov
hlt
xlat
xor
fs
mov
pop
mov
xchg
mov
adc
inc
push
jmp
repnz
pop
sbb
icebp
pop
pop
or
nop
dec
push
roll
push
xor
cmp
movsb
sti
add
cltd
out
pop
fs
pop
and
push
lret
out
cmp
pop
shrl
mov
dec
shlb
je
and
fistpl
or
xor
movl
xor
sbb
push
frstor
ret
pusha
mov
mov
sub
jo
inc
iret
dec
cli
aad
jae
xchg
and
orl
push
add
xchg
cs
pop
push
scas
mov
xor
adc
aaa
add
or
adc
jge
inc
movb
sbb
insb
lcall
repz
test
gs
push
or
lret
imul
insl
das
sub
ret
rcll
and
push
inc
xor
jo
adc
jb
shl
dec
or
mov
sbb
pop
mov
mov
mov
push
and
xchg
shr
xor
xor
ret
push
add
sbb
ret
lods
jnp
or
jle
cld
fdivrs
sbb
inc
outsl
gs
dec
loop
testb
outsl
jnp
mov
mov
pop
or
inc
imul
lahf
pop
dec
test
cs
cli
xor
cmovbe
dec
rcrb
mov
imul
or
xchg
icebp
inc
adcb
dec
push
sub
popa
cwtl
orb
inc
imull
iret
adc
or
mov
icebp
pop
pop
stos
mov
loopne
pop
hlt
out
and
add
inc
in
and
shr
dec
pusha
cltd
mov
pop
lock
xor
dec
daa
push
add
push
add
inc
push
loop
inc
add
pop
cwtl
testb
xor
sbb
and
xor
xchg
sbb
shrb
movsl
bound
xlat
mov
daa
aas
push
orb
les
xchg
test
repz
and
fnstsw
fstl
pop
adc
xchg
dec
cmp
xchg
jecxz
mov
stc
insb
hlt
popa
jb
or
dec
sbb
xchg
add
jbe
mov
pop
xchg
rclb
fiadds
push
push
adc
outsb
push
xorb
lods
or
pop
pop
popa
pusha
inc
fdivrs
mov
add
jmp
popf
jno
mov
dec
fistpl
pusha
cmp
xchg
addr16
add
stos
sub
dec
push
ljmp
add
xchg
popa
xor
pop
lret
shll
cmc
mov
jns
pop
lock
nop
rolb
push
pusha
sub
lea
bound
loop
mov
sub
ja
sbb
and
jbe
negl
and
mov
idivb
adcb
enter
outsl
mov
fwait
mov
pop
mov
pop
cmpps
in
or
xor
inc
loopne
pop
fsubr
mov
dec
push
jmp
inc
mov
dec
lds
callw
cmp
jo
das
push
pop
mov
cmp
stos
and
orl
out
cmp
pop
push
test
loop
pop
stos
sub
inc
cmpsb
test
je
or
mov
aam
sub
pop
jge
nop
jo
mov
xor
loop
loop
flds
cmp
add
mov
lret
into
orl
movsl
data16
xorb
fisttpll
xor
lea
fdivp
mov
mov
mov
dec
shl
test
pop
xor
stos
inc
imul
push
int
movlps
or
mov
mov
outsb
ds
mov
push
push
xlat
fld1
xchg
lahf
pushf
dec
mov
sbb
ja
mov
pop
dec
xor
mov
mov
inc
js
adc
sub
cld
xor
cmpsl
rorl
push
or
cmp
cmp
add
sbb
jecxz
fisubrs
pmulhw
xor
push
movsl
lock
pushf
push
fmul
call
dec
xor
xchg
test
hlt
imul
pop
lcall
and
xchg
sub
sub
mov
inc
mov
fwait
jno
xorb
jnp
dec
jae
jbe
ja
scas
or
aad
push
pop
mov
adc
mov
add
das
cmpsl
mov
add
xchg
pop
shl
pop
clc
push
mov
push
shlb
push
pop
ret
sbb
sub
jo
aad
hlt
add
adc
or
adc
or
cmp
mov
sub
push
mov
mov
adc
aaa
lcall
xchg
xchg
xchg
mov
sbb
out
sub
daa
sbb
add
push
dec
jae
xchg
inc
sub
inc
add
adc
pushf
jecxz
add
or
into
shlb
test
imul
jmp
nop
std
xchg
cltd
shlb
pop
lock
xchg
mov
pop
int3
cmp
movsb
daa
stc
mov
xor
shll
cmpl
or
add
jl
add
sbb
sbb
pop
js
lds
pop
data16
xchg
and
pop
mov
repz
vaddsd
and
adc
add
cmp
cs
pop
repz
xchg
int
fwait
push
test
aaa
mov
pop
push
rorl
pusha
cld
dec
xchg
push
pushf
nop
xchg
sub
aad
pop
push
add
test
leave
arpl
lods
fisubrl
jb
and
jecxz
and
jne
lock
cmpsb
xor
mov
pop
cmp
cmc
gs
aam
dec
hlt
into
filds
inc
das
aaa
mov
lcall
repnz
sbb
fbld
cli
cld
jle
ds
sbb
loopne
xor
inc
bound
addr16
les
xor
clc
movb
cld
shll
aam
fisttpll
pop
lods
mov
aaa
xchg
jg
pop
and
cmp
clc
mov
fs
xor
popa
xor
pop
lods
push
and
in
push
pop
dec
js
loop
lret
lahf
inc
adcl
jnp
mov
loope
push
insb
jns
test
mov
jbe
jne
aaa
lret
xchg
fisttpll
sub
push
inc
inc
loope
mov
dec
mov
or
jbe
andb
lret
and
mov
les
push
pop
jne
imul
nop
pop
jge
or
mov
imul
xchg
mov
inc
mov
adc
rcll
call
add
sbb
fnstenv
pop
cs
xor
add
cs
inc
fstp
xor
jae
cwtl
arpl
jl
mov
lea
fists
mov
ds
nop
icebp
or
jl
push
test
imul
repnz
mov
pop
repnz
cli
out
in
cltd
and
xorl
aas
sbb
jp
fidivl
or
rcrl
adc
jae
js
add
dec
orl
adcl
aad
cmp
xchg
adc
jb
cltd
pop
clc
push
cmp
sbb
xchg
nop
sub
mov
push
mov
jno
jmp
imul
inc
jg
mov
or
loop
ds
pop
inc
mov
pop
jnp
data16
int3
int3
aas
push
in
call
pop
xchg
dec
aaa
sub
or
out
fs
lods
pop
pop
pop
pop
dec
dec
adcl
mov
cli
mov
jbe
sub
adc
dec
mov
and
dec
inc
in
adc
or
pop
mov
scas
sbb
or
or
xchg
nop
mov
sub
mov
jno
jnp
mov
out
sub
push
sub
add
inc
jbe
inc
cwtl
rcl
and
mov
add
arpl
push
mov
dec
xor
dec
push
jb
pop
cli
add
stos
bound
jge
sahf
pop
adc
pop
inc
mov
or
mov
lods
enter
nop
add
inc
adc
popf
sbb
dec
mov
mov
icebp
cmovs
test
jno
sbb
push
sbbb
lock
jecxz
shrb
pop
sti
add
bound
adc
mov
lea
push
add
dec
jo
lods
call
inc
test
mov
push
sub
or
push
shll
pop
sub
dec
fcoms
jge
mov
add
jp
fs
sbb
orl
xor
mov
js
je
adc
mov
movsb
add
pushaw
lock
sub
lock
ljmp
lcall
adc
pushf
jns
dec
sub
mov
cmc
add
cs
rcl
shll
and
mov
and
testl
or
xchg
add
test
jne
inc
out
icebp
lret
icebp
and
pop
mov
es
mov
xchg
test
pop
loopne
xchg
mov
sbb
jb
lret
fildl
push
popa
cmc
xchg
cmp
adc
scas
pop
sub
fimuls
shlb
ret
scas
xchg
xchg
push
cmp
popa
daa
jl
sub
or
sbb
and
ffreep
test
add
out
fwait
mov
and
push
clc
pop
jl
adc
addr16
pop
add
enter
int
bound
mov
cmp
or
enter
or
lea
sbb
push
pop
inc
push
data16
cmc
fsubrl
sbb
mov
mov
insl
add
jo
inc
ret
lods
mov
mov
mov
or
inc
in
inc
add
jg
iret
adc
bound
sbb
pop
aad
xchg
and
inc
fdivr
jg
loope
sarl
rolb
bound
inc
xor
inc
test
cmp
dec
shufps
mov
or
mov
and
daa
lock
pop
adc
xchg
inc
xchg
ljmp
nop
enter
lock
jno
inc
sub
adc
icebp
pop
jae
sbb
add
outsl
jle
cmp
stos
adc
push
stos
imul
add
aam
mov
mov
pusha
add
xchg
fnstsw
or
or
dec
call
orl
cltd
pop
push
sarb
negl
mov
and
adc
mov
pop
lods
js
lea
push
iret
xor
leave
mov
mov
xor
insb
adc
jl
ljmp
push
imul
insb
sbb
mov
test
faddl
pusha
ret
out
stc
adc
sahf
inc
xchg
mov
inc
inc
aas
add
pop
add
inc
xchg
adc
and
je
xlat
sbb
cwtl
ss
sub
pop
sub
stos
jns
mov
inc
xor
mov
push
test
jns
pop
ret
das
lock
xchg
inc
test
pop
push
jae
jns
cli
ret
dec
test
push
loop
int
ss
pop
cs
or
les
hlt
vphaddubd
cmp
sub
pop
pop
cmp
push
movb
inc
xlat
inc
stos
or
sbb
xor
jecxz
and
mov
push
mov
jnp
sub
add
inc
push
pop
xor
adcb
rorl
imul
and
or
testb
adc
pusha
push
mov
xor
and
cltd
test
jl
push
gs
lock
lret
popf
jge
mov
imul
pop
add
aam
pop
aad
repz
leave
das
inc
sarb
dec
fistpl
imull
hlt
ss
movsl
nop
jns
lock
mov
mov
push
xlat
not
sahf
js
sub
mov
enter
lahf
sub
fcomps
pop
repnz
fsubrs
push
popa
shll
inc
adc
ja
popa
sbb
sarb
add
sub
xorl
inc
shl
mov
jg
jge
fdivrs
or
sbb
mov
lds
daa
xchg
mov
push
idivl
cmp
jp
arpl
add
es
mov
sar
in
mov
aas
mov
mov
hlt
mov
add
rorb
iret
xor
mov
icebp
inc
call
shlb
inc
inc
dec
jge
lock
xor
das
xchg
push
pop
int3
out
pushf
xchg
bound
jo
rclb
mov
jnp
jmp
cmp
notl
cmpl
mov
aad
jns
pop
mov
lock
inc
pop
clc
lahf
enter
icebp
enter
jae
xchg
out
or
jle
mov
push
push
jmp
sbb
pop
outsl
xchg
add
cli
add
adc
mov
mov
add
push
popa
pop
rcll
rcl
jp
cmp
ret
push
or
pop
and
aad
loopne
mov
push
mov
movsl
leave
mov
inc
and
sub
shr
ss
inc
cmp
and
or
ja
addl
jns
adc
sub
sbb
xchg
or
das
or
xor
xchg
xchg
jae
je
negl
rcrb
in
xchg
test
xor
sub
xchg
cmp
cli
mov
inc
pop
jg
push
and
cld
adc
mov
inc
jno,pt
push
scas
cmp
iret
mov
add
push
sbb
add
das
daa
push
xor
inc
cli
or
or
cld
and
dec
push
out
sub
ret
out
push
pmuludq
or
sti
add
aaa
and
out
pop
imul
aam
incl
dec
daa
push
push
test
cmpsl
and
add
and
push
imul
mov
pop
ror
test
pop
out
mov
jns
fldenv
adc
xor
sbb
adc
js
cmp
push
mov
lret
loope
push
jmp
in
aaa
jle
call
dec
xchg
scas
out
xlat
call
outsl
mov
push
nop
ja
xor
cmp
lods
mov
aad
lahf
add
fstps
push
or
pop
ficoms
std
js
xor
pop
jmp
and
cltd
loopne
out
adc
mov
mov
adc
hlt
mov
xchg
pop
lock
adc
jl
pop
xor
adc
add
icebp
push
jno
or
adc
pop
jmp
popa
sub
das
pop
jp
jecxz
arpl
push
push
dec
sbbb
dec
mov
xor
jmp
cli
xchg
jmp
imul
jl
jns
push
inc
inc
sbb
inc
fldt
sbb
ds
jne
imul
inc
xor
sbb
xor
push
fiaddl
loope
sbb
ret
jle
sbb
mov
or
jnp
sbb
cs
cmp
sub
xchg
jmp
inc
sti
push
mov
add
gs
fsubrl
sbb
adc
ss
adc
test
in
test
inc
dec
inc
insb
shlb
imul
mov
rorb
fs
sbb
clc
and
and
psubd
dec
cltd
popa
pop
aas
lcall
jmp
movsb
dec
ficoms
insl
cld
fucomp
stc
imul
mov
dec
in
repnz
cmp
pop
sbb
out
xchg
sbb
or
push
pop
lods
pop
push
push
dec
inc
sub
ret
aaa
push
fsubl
adc
clc
add
dec
sub
int
sarl
mov
sti
and
mov
add
xor
int3
cmp
push
xor
pop
cmp
mov
jmp
lcall
mov
movsb
pop
push
cmc
jp
jle
sbb
jle
mov
filds
movsb
and
cmp
test
cltd
hlt
and
mov
outsb
push
mov
mov
sub
push
mov
daa
pop
aam
mov
in
lods
out
mov
push
test
rolb
inc
test
arpl
lock
xor
loope
sub
dec
mov
lock
cmp
ficomps
inc
sub
cmpsb
scas
mov
in
pop
or
les
lods
aaa
dec
neg
lods
dec
andl
lods
adc
or
xchg
test
mov
aad
cld
jmp
sti
push
dec
aas
das
push
inc
icebp
fiaddl
add
cli
cmp
invlpg
xlat
xor
test
cltd
add
jbe
pop
inc
xor
or
or
ss
out
leave
outsb
cmp
push
cmp
dec
mov
push
sti
imull
adc
pop
cwtl
insb
xchg
mov
ja
mov
xor
add
push
mov
call
repz
ret
hlt
cmc
shr
ljmp
xor
dec
aas
and
xlat
gs
mov
jo
jl
xlat
mov
test
int
test
rorb
and
xchg
jnp
shr
dec
mov
sbb
enter
out
movsl
sub
ficompl
lock
push
mov
sub
aas
mov
pop
mulb
popa
push
jno
sbb
loop
pop
add
xchg
xor
test
xor
in
push
add
das
addb
cli
jg
cli
inc
aad
inc
call
add
dec
out
sub
fwait
jbe
or
pop
notl
push
hlt
imul
mov
ret
lock
pushf
lret
ret
clc
push
adc
data16
imul
pop
and
or
push
jp
cwtl
xchg
jne
or
adc
sub
jb
repnz
dec
jbe
in
push
jg
rolb
popa
jne
in
add
sahf
add
adc
test
je
inc
inc
xchg
shll
push
fwait
rcr
jo
repnz
ret
outsl
push
mov
jge
inc
push
das
lret
and
xor
gs
sub
mov
dec
or
inc
pop
cli
mov
dec
inc
mov
sbb
add
decl
cmp
in
inc
push
pop
push
or
push
dec
inc
jns
fnstcw
daa
leave
xor
sbb
cmp
add
sub
sbb
inc
sub
inc
nop
push
not
sub
sbb
js
sbbb
jle
add
decb
sub
neg
push
add
adc
and
scas
in
ljmp
cwtl
inc
mov
cmp
rorl
icebp
pop
and
ljmp
shl
stos
dec
inc
sub
push
sbb
add
add
rorb
ret
add
insl
mov
cld
rol
add
push
inc
add
jecxz
mov
inc
dec
xor
push
lods
gs
adc
mov
dec
adc
mov
adc
leave
jmp
stos
pop
pop
shrb
ss
add
or
push
adc
das
inc
sub
inc
dec
dec
jne
and
add
flds
pop
mov
mov
leave
ret
mov
mov
jae
ss
push
mov
std
xor
xor
mov
mov
mov
in
sbb
clc
and
insl
cmp
add
cmpsb
mov
xor
xchg
cld
into
or
rcll
fcoms
lods
xor
call
dec
sub
jo
hlt
out
cmovno
imul
xor
test
rclb
dec
push
push
js
call
push
lock
jge
pop
dec
mov
nop
aaa
clc
jbe
push
xchg
sub
xor
inc
push
dec
aam
adc
mov
add
push
gs
aad
rcl
jns
fistps
aam
push
daa
inc
and
movups
sub
sub
movsb
inc
cmc
inc
dec
pop
fsts
test
xor
scas
inc
ficoml
cli
cli
loop
ja
push
xlat
leave
testb
icebp
mov
push
sub
orb
inc
adc
xor
fistl
add
sbb
dec
sbb
adc
aas
dec
inc
mov
dec
shrb
testl
psubb
negl
push
imul
fsubs
sub
cmp
inc
dec
xchg
ret
pop
fadds
clc
not
dec
mov
lret
dec
inc
jbe
sbb
jo
repz
dec
lret
push
sub
xorl
pop
pop
rcr
sarl
incb
repz
enter
adc
int3
aam
mov
pop
ret
sbb
inc
and
pop
mov
popa
sub
iret
push
pop
sbb
sub
dec
inc
mov
sti
dec
add
mov
andl
movb
add
sub
mov
xchg
add
enter
mov
pop
dec
or
stc
fimuls
push
xchg
cmp
xor
sub
lods
mov
mov
outsl
sbb
lea
dec
imul
loopne
ljmp
sar
push
test
pop
shl
lahf
xchg
inc
jns
add
fwait
or
push
push
test
imul
jo
pop
test
fimuls
jne
loop
fs
pop
fs
pop
dec
mov
or
test
in
mov
xor
fs
pop
add
insl
push
jge
add
movlhps
dec
adc
or
ljmp
or
jns
inc
nop
imul
xchg
xchg
shlb
or
in
cltd
nop
scas
scas
xor
aaa
pop
or
xor
xor
adc
add
test
push
sbb
test
adc
inc
push
mov
jne
xlat
repnz
push
sub
pushf
pop
jmp
push
shrb
dec
jns
xor
inc
lret
jmp
test
push
mov
adc
inc
adc
cmc
mov
inc
or
pop
aas
sbb
add
test
fs
je
mov
pop
enter
or
hlt
pop
pop
leave
shlb
stc
insl
inc
addr16
clc
int3
dec
dec
fildll
aaa
lds
mov
lcall
add
pop
hlt
or
fs
xor
jbe
dec
pop
sub
ljmp
push
push
adcb
mov
lret
or
push
sahf
fwait
jne
mov
sub
mov
lcall
and
inc
adc
cli
fwait
pop
inc
andb
inc
and
and
add
add
mov
and
scas
pop
call
add
adc
and
add
add
mov
or
and
inc
inc
xor
add
mov
bound
mov
mov
inc
and
xor
adc
adc
inc
add
adc
cs
and
out
lods
mov
and
addb
add
loope
gs
mov
imul
insb
xor
cs
insb
jo
push
sbb
pop
xor
xor
push
cli
mov
lods
mov
shlb
add
mov
adc
xchg
jle
push
and
shr
push
adc
and
add
inc
lods
pusha
shrb
mov
mov
cwtl
or
push
jae
pop
imul
and
int3
mov
out
xor
and
inc
mov
push
sub
pop
mov
repnz
sbb
es
dec
cmpb
add
adc
data16
test
adc
xor
xorl
loop
adc
fidivrl
cs
outsb
addr16
and
inc
or
sbb
and
mov
xor
sub
mov
loop
lcall
in
add
adc
rorb
xor
add
loop
test
mov
fadd
add
and
push
push
xor
enter
inc
mov
rorb
jo
push
and
es
flds
sub
mov
popw
test
and
int3
insb
jno
mov
fstps
test
loop
lds
add
and
fldcw
mov
pop
and
adc
and
call
test
lods
push
or
test
out
inc
ds
data16
notb
lods
fcomip
and
sbb
push
and
mov
sbb
xor
test
loopne
vmovntps
call
and
data16
adc
cmp
cmp
push
xor
jecxz
enter
adc
sbbl
cmpsl
je
nop
dec
pusha
cmp
push
mov
cmp
or
ljmp
popa
pusha
jo
push
out
push
pop
data16
ljmp
xchg
dec
div
addb
adc
sbb
adc
mov
shll
push
in
js
and
cwtl
popf
ror
sub
push
loop
sub
inc
jo
bound
dec
add
xor
sar
sub
inc
cmc
addr16
mov
jle
push
push
add
divb
sub
aam
orl
sets
mov
outsb
dec
clc
adc
fmul
test
and
and
pop
jle
cmp
fcomps
sub
sbb
scas
cltd
sub
in
add
out
jo
pop
sbb
mov
lret
mov
dec
jnp
mov
push
outsb
jo
fisubl
pop
add
outsb
cmp
push
into
add
jo
fbld
jl
js
mov
adcb
insb
add
repnz
jb
push
adc
sbbl
xor
mov
mov
je
in
jp
sub
add
push
sub
mov
call
xor
fstpt
insb
jae
jb
adc
popa
xor
dec
gs
sbb
lahf
std
div
je
jne
and
inc
imul
jns
sub
jae
mov
gs
imul
outsw
push
outsb
sub
in
std
mov
add
push
movsb
imul
gs
imul
fwait
in
std
dec
outsl
bound
push
inc
fs
outsl
dec
imul
mov
popa
insb
imul
popa
addr16
jb
jne
sub
jne
dec
sbb
push
jb
add
incb
fwait
or
imul
lods
mov
sbb
sti
iret
or
cmp
and
je
insl
js
fcmovnu
jg
popa
jne
je
inc
dec
inc
sub
addr16
jns
fwait
xorl
mov
mov
out
int
outsl
push
popa
je
mov
and
mov
or
imul
imul
dec
popa
insb
push
inc
outsb
jbe
and
mov
or
shll
inc
mov
fcomip
push
imul
addr16
loopne
jae
jae
mov
jbe
add
pop
insb
cmp
xchg
inc
insb
outsl
inc
or
push
jb
push
push
outsl
fidivl
arpl
je
adc
mov
ljmp
filds
pop
daa
push
adc
inc
inc
ficoml
inc
inc
das
mov
data16
push
jb
jne
jne
mov
lret
adc
mov
bound
cmp
divb
int3
sbb
jo
sbb
loop
mov
push
jae
push
outsb
xchg
jae
fsubrp
clc
fdivl
push
push
jo
jb
sub
sub
fsts
insb
mov
pop
in
stos
sub
push
shll
xor
rol
inc
jno
in
push
das
sbb
jbe
mov
outsb
adc
sbb
pusha
arpl
in
into
loope
fmuls
push
inc
fs
ds
int
adc
jge
jne
xorl
fisubs
cmp
xor
int
sbb
inc
dec
dec
stos
and
xlat
cmpsb
jbe
push
jno
sbb
add
pop
adcl
ss
addb
dec
test
xchg
inc
in
mov
rcrb
push
jo
arpl
pushf
cwtl
mov
insl
outsl
and
mov
cltd
adc
pop
dec
addr16
jnp
addl
out
repz
xor
jnp
dec
adc
adc
push
ja
int
clc
inc
dec
movsb
push
sbb
roll
pop
push
inc
adcl
push
sub
push
pop
xchg
sub
mov
xor
xchg
push
add
jne
je
dec
int3
inc
js
mov
fs
xchg
inc
pop
loop
sub
fsubrs
push
cmp
out
icebp
xor
sbb
pop
sbb
inc
aas
hlt
push
mov
pop
je
daa
mov
out
and
dec
jae
push
sub
popa
xchg
push
sbb
add
xchg
sbb
adcb
stos
jle
insb
jo
inc
adc
push
in
adc
movsb
inc
sub
push
inc
arpl
push
jo
es
loope
js
jne
mov
outsb
iret
daa
cmp
repnz
pop
push
push
pop
add
imul
xor
hlt
jns
imul
adc
xlat
cs
or
mov
aaa
sbb
or
add
adc
sbbb
mov
push
jle
xchg
popa
shrb
pop
jbe
cmp
dec
sub
loope
push
daa
loope
dec
mov
std
push
loopne
sbb
inc
test
lea
loopne
mov
fs
mov
mov
rol
pop
jg
inc
insl
je
roll
dec
loop
sbb
aad
inc
push
mov
dec
inc
push
push
push
inc
inc
dec
incb
dec
inc
inc
dec
and
ljmp
pop
ret
cmp
mov
fimuls
sub
jp
push
sbb
sub
mov
inc
scas
inc
jmp
loop
sarb
jg
cmp
or
push
jo
cmp
fcoms
dec
outsb
imul
sub
pop
fadd
adc
pop
and
jns
das
fdivrs
mov
jae
rcrl
adc
sub
stos
mov
mov
and
or
fdivl
jl
jb
mov
gs
lock
xor
inc
icebp
pushf
and
sub
cmpb
loop
inc
js
mov
add
push
and
cltd
sahf
jge
bound
test
inc
cwtl
test
inc
dec
cltd
jns
inc
or
mov
mov
cwtl
sbb
dec
xchg
xchg
xchg
push
imul
and
scas
data16
sbb
mov
or
outsb
aad
and
mov
cmp
dec
dec
inc
dec
stos
push
clc
cltd
in
jnp
mov
inc
movsl
adc
les
sahf
and
adc
rolb
lods
cmp
push
jno
add
mov
jle
ret
adc
mov
in
inc
mov
inc
sub
jnp
and
fwait
in
adc
cmp
add
xor
and
add
inc
pop
je
roll
push
mov
sahf
and
sub
cmp
adc
lret
xchg
cmpsl
clc
push
push
hlt
mov
insl
jno
inc
stos
insl
push
pop
lods
outsl
mov
bound
push
push
jb
dec
or
xchg
imul
inc
mov
xlat
ss
pop
popa
in
push
daa
xor
xor
dec
or
aam
jo
int
popa
rcll
add
test
mov
jae
scas
sbb
push
mov
and
or
daa
adc
movsb
negb
jns
into
nop
jns
lods
shrb
insb
xor
ret
push
imul
push
arpl
shll
mov
jae
push
ja
mov
andl
aas
add
lock
daa
cmp
mov
jo
sbb
pop
lods
outsb
jne
mov
insl
push
lea
jb
js
inc
xor
and
inc
push
mov
adc
outsb
jns
daa
push
ret
sub
push
popa
bound
pusha
xchg
and
dec
daa
jne
mov
hlt
in
cld
jb
ja
xorb
or
fdivrl
fidivl
bound
jbe
subl
fbld
test
fldl
call
insl
loop
imul
mov
xor
nop
sbb
cmp
adc
push
jl
ds
gs
jae
sbb
adc
scas
pop
daa
jne
ret
ja
mov
push
push
jbe
scas
jnp
rcll
ds
mov
dec
mov
shlb
fs
pop
cmp
xchg
out
jae
scas
jg
fsubs
pop
xchg
js
xor
jp
cmp
mov
jo
push
mov
cmp
xchg
bound
adc
ficoms
mov
aas
inc
popa
js
xor
insb
jne
and
sub
mov
jne
add
das
mov
shl
negl
or
test
pop
outsl
addl
popa
test
je
imul
inc
push
inc
dec
inc
inc
inc
push
inc
push
push
push
inc
dec
inc
ds
sub
popf
arpl
inc
daa
push
insl
imul
sbb
nop
sbbl
xchg
fs
push
dec
cmp
inc
cmc
pop
xorl
xchg
dec
push
inc
jns
mov
in
test
dec
incb
in
jb
fimull
out
inc
jae
ret
dec
in
into
jl
sub
call
sbb
jo
dec
in
mov
fs
gs
dec
add
int
cs
jnp
add
add
test
mov
nop
pop
pop
out
xchg
sub
add
add
add
insl
sbb
cmp
adc
or
add
xchg
push
add
rolb
fwait
add
nop
lahf
addl
fdivrs
and
aaa
xchg
mov
jb,pn
and
jnp
insb
cmpsb
inc
sbb
sbb
inc
repz
jnp
cs
dec
pop
add
sbb
jae
arpl
aaa
mov
shl
lahf
aaa
in
xchg
das
add
and
iret
add
add
inc
and
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
add
add
add
hlt
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
imul
add
cmp
aas
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
imul
ja
popa
add
insl
add
insb
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
imul
add
outsl
add
js
and
dec
add
imul
jo
bound
jne
push
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
xor
add
add
add
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
jne
imul
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
imul
ja
popa
add
insl
add
insb
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
imul
js
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
popa
arpl
fs
insb
add
insl
arpl
xor
fs
insb
add
jns
je
xor
fs
insb
add
imul
insb
insb
add
fs
jo
cs
insb
add
xor
cs
insb
add
gs
cs
insb
add
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
imul
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
xor
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jae
push
inc
fs
imul
popa
ja
outsb
jae
jb
add
inc
gs
inc
jb
gs
push
dec
inc
outsl
outsb
je
js
add
inc
insb
jo
popa
inc
insb
outsb
add
inc
jae
imul
inc
outsl
inc
jb
addr16
jb
jo
add
gs
dec
inc
push
dec
arpl
push
add
push
push
bound
je
add
add
jb
push
je
dec
push
add
add
outsl
outsb
gs
insb
outsl
jae
add
inc
js
jb
arpl
add
ja
arpl
add
insl
insl
imul
add
add
je
outsl
bound
add
push
push
inc
push
outsb
add
