push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
pushl
shlb
pop
add
call
add
pop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
incl
push
and
add
add
mov
add
jp
add
push
and
add
and
add
and
add
and
add
and
add
add
ljmp
add
and
add
and
add
and
add
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
add
and
add
add
bound
add
add
add
add
mov
add
add
add
and
add
and
add
and
add
add
sbb
add
pop
and
add
add
add
add
add
add
nop
and
add
add
add
add
lcall
add
and
add
add
mov
add
jp
add
push
and
add
and
add
and
add
and
add
and
add
add
ljmp
add
and
add
and
add
and
add
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
add
and
add
add
bound
add
add
add
add
mov
add
add
add
add
imul
outsb
je
outsl
insb
add
popa
je
inc
jbe
outsb
je
add
inc
add
outsb
arpl
dec
outsl
add
adc
push
gs
insl
gs
push
add
roll
dec
gs
jo
jb
add
out
inc
gs
imul
bound
gs
add
jge
dec
jo
outsb
dec
jne
gs
add
rolb
dec
gs
jo
gs
jb
jns
enter
jae
gs
popa
insb
jne
add
add
gs
inc
imul
gs
jne
jb
outsb
je
jb
arpl
jae
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
push
push
je
imul
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
fs
imul
add
dec
add
insb
outsb
inc
add
add
je
jb
jbe
je
push
jb
imul
push
add
push
imul
je
add
add
je
jb
jbe
push
jns
gs
add
add
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
outsl
insb
add
jle
inc
gs
imul
gs
add
xor
jae
push
push
popa
je
add
mov
push
gs
imul
gs
add
xor
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
push
outsl
insb
outsl
jb
addb
jae
push
arpl
add
add
ja
push
fs
jb
ja
push
popa
arpl
jb
jne
add
gs
push
gs
dec
gs
imul
gs
push
gs
inc
js
outsb
je
add
inc
gs
push
jns
push
imul
dec
inc
dec
inc
cs
insb
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
dec
inc
inc
inc
push
push
inc
inc
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jp
jl
stos
lods
lods
add
cmpsl
test
mov
mov
mov
lret
into
into
int
rcl
shr
rcl
shl
ror
shl
int3
int
hlt
leave
mov
out
mov
mov
mov
mov
lods
lods
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
lret
leave
not
rcl
cld
xlat
std
fcom
fdivr
xlat
xlat
aam
rcl
iret
dec
int3
int3
aad
aad
rcl
sar
ret
std
mov
mov
scas
iret
movsb
movsb
movsb
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
sbb
mov
jnp
mov
sar
lret
lret
lret
iret
sar
aam
aam
xlat
xlat
call
xlat
call
aad
dec
int3
into
dec
into
int
aad
int3
int3
int
rol
mov
mov
scas
std
test
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
into
int3
call
rcl
call
fcom
call
fdivr
aam
aad
int
int3
dec
lret
into
int
inc
mov
sarb
pushl
cmpsl
cmpsl
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
push
imul
pop
pop
pop
fs
sbb
or
xor
aaa
ss
cmp
cmp
and
and
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
sarb
enter
ror
call
aad
call
aad
call
rcl
inc
mov
inc
ret
ret
mov
mov
lods
scas
scas
jmp
sahf
sahf
xchg
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jl
jg
jg
jno
jb
bound
mov
cmp
cmp
pop
pop
pop
stos
outsl
outsb
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
dec
lret
leave
dec
leave
inc
ret
mov
mov
ljmp
movsl
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
cltd
cltd
in
addb
prefetchw
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
jp
mov
incb
jp
idivb
jnp
outsb
jo
out
addr16
data16
jae
jle
jge
jns
jns
gs
inc
inc
cmp
pop
sbb
adc
adc
stos
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
incl
test
xchg
xchg
xchg
mov
mov
cwtl
mov
js
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
lahf
lcall
lea
cmp
mov
std
xchg
jg
jno
jb
jne
je
jge
jg
addb
xchg
pushw
cmp
cmp
and
and
cmp
mov
test
lods
sti
lods
lods
stos
stos
stos
stos
test
stos
std
movsl
mov
fwait
xchg
xchg
xchg
decl
jg
js
jns
jp
jnp
xchg
cwtl
movsl
movsb
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
prefetch
inc
inc
inc
dec
imul
xchg
xchg
leave
fwait
lcall
fwait
lcall
mov
incl
mov
lcall
cmpsl
movsl
ljmp
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
mov
incl
test
decb
xchg
popf
pushf
popf
std
mov
mov
xchg
in
nop
in
xchg
jne
or
add
inc
daa
sub
push
dec
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
std
mov
call
mov
cmpsl
ljmp
test
pushl
mov
stos
std
roll
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
pushf
cwtl
lcall
mov
call
xchg
xchg
pushf
sahf
sahf
movsb
mov
stos
movsl
mov
cwtl
fstpt
jl
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
jae
mov
lahf
test
mov
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
jbe
mov
movsb
mov
mov
mov
lods
lods
lods
mov
mov
add
pop
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
cwtl
cltd
fwait
cltd
fwait
pushf
sahf
lahf
mov
movsl
std
mov
cltd
cltd
out
nop
xchg
mov
xchg
aad
cltd
cltd
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
jae
lcall
jmp
inc
jnp
mov
jns
mov
jb
mov
outsl
ljmp
pcmpgtw
lods
or
or
mov
jg
mov
mov
stos
pushf
movsb
movsb
movsb
and
add
add
mov
add
pusha
adc
mov
jmp
nop
xchg
call
cltd
fwait
lcall
lahf
lahf
lcall
lcall
xchg
xchg
xchg
cwtl
xchg
call
xchg
fwait
cld
cwtl
cwtl
pushf
stc
mov
xchg
sahf
cld
sahf
mov
xchg
push
xchg
pop
jle
xchg
dec
jns
cltd
cmp
fwait
sub
popf
and
sahf
push
jmp
adc
ljmp
adc
stos
packuswb
scas
adc
mov
imul
mov
insl
mov
fwait
scas
mov
scas
lods
scas
movsl
mov
mov
add
pop
pop
adc
mov
ljmp
sahf
call
pushf
sahf
lcall
movsb
movsb
jmp
mov
decl
mov
decl
mov
fwait
jb
cltd
fs
xchg
push
jnp
xchg
cmp
decl
push
decl
or
pop
call
add
lahf
add
ljmp
pushl
sbb
outsb
mov
and
mov
and
sarl
inc
xchg
lods
mov
scas
scas
mov
lahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
shlb
pushf
pushf
popf
jmp
test
cmpsb
test
ljmp
cmpsb
test
pushf
lcall
mov
mov
decl
popa
decl
push
pop
incl
push
push
incl
add
mov
pop
decl
add
fwait
add
sahf
add
cmpsb
or
mov
outsl
pushl
sub
mov
sub
ret
sub
sub
dec
das
jg
cs
inc
mov
leave
lea
cld
mov
scas
lret
movsb
dec
mov
movsl
mov
add
add
add
push
push
adc
cmpsl
scas
ljmp
sahf
jmp
stos
test
stos
lods
stos
ljmp
mov
lods
lods
scas
jmp
mov
mov
popa
incl
or
pop
push
incl
push
incl
add
xchg
push
decl
push
call
add
mov
add
scas
adc
mov
ss
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
cmpsl
test
scas
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
decl
add
pushf
add
add
test
pop
ljmp
sbb
test
lret
inc
mov
int
call
inc
call
dec
nop
call
dec
xchg
fmuls
fisttpll
ficoml
call
test
mov
mov
mov
sahf
mov
add
inc
dec
adc
jl
movsb
lahf
mov
lcall
stos
test
pushl
mov
pushl
mov
mov
movsb
mov
decl
pusha
call
adc
pop
decl
push
decl
add
popf
add
add
add
stos
add
mov
arpl
shlb
dec
dec
call
push
cwtl
call
push
cltd
fistl
fstl
jmp
pop
pushf
jmp
pop
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
test
jne
mov
lahf
add
inc
inc
adc
ja
sahf
cltd
popf
jmp
sahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
xchg
and
xchg
and
sbb
xchg
or
popl
push
call
add
mov
add
stos
add
mov
gs
mov
xor
call
pop
fwait
fisubl
fisubs
fbld
jmp
data16
jmp
cmpsb
jmp
addr16
jmp
stos
faddl
mov
cmpsl
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
lcall
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
cltd
xor
lcall
lcall
or
xchg
add
lcall
ljmp
add
mov
pushl
adc
roll
fsubl
jmp
outsb
lods
jmp
jo
jmp
jb
call
je
jmp
mov
out
jne
in
je
in
jb
jmp
mov
mov
cmpsb
cmpsl
lcall
mov
add
add
add
add
aas
cmp
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
jo
lahf
cmp
lahf
cmp
sahf
xor
fwait
sbb
pop
call
add
add
test
add
mov
fs
mov
sbb
fistl
in
mov
ljmp
jmp
mov
push
cmpl
xacquire
push
cmpb
mov
mov
test
cmpsl
sahf
sahf
pushf
daa
mov
mov
add
bound
add
xor
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
ret
ret
pushl
insl
mov
cltd
cmp
movsl
inc
jl
movsb
inc
jle
mov
pop
call
pop
jmp
add
scas
add
mov
data16
mov
add
call
and
movsl
jmp
mov
push
sar
xchg
ret
nop
sar
xchg
push
xchg
stc
xchg
mov
out
nop
sar
mov
inc
ret
lods
stos
stos
mov
sahf
pushf
xor
sahf
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
pushl
mov
mov
inc
ret
ret
mov
jle
lcall
jg
stos
dec
test
movsb
xor
push
pop
lcall
add
add
lods
add
mov
arpl
mov
add
leave
add
call
xor
mov
in
xchg
push
lcall
repz
push
fwait
leave
push
lcall
cld
lahf
into
cld
lahf
int
cli
cwtl
lret
xchg
ret
fbstp
cli
mov
mov
mov
nop
add
add
add
xor
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
enter
mov
mov
ljmp
mov
movsl
sub
cltd
pop
pop
lcall
pop
ljmp
arpl
mov
add
leave
add
rorl
jne
fiadds
out
mov
push
movsl
into
push
movsb
into
stc
cmpsl
iret
sti
cmpsl
iret
sti
cmpsb
into
cli
cmpsl
sar
stos
iret
cld
test
sar
negb
lret
leave
int3
std
mov
mov
lahf
mov
xchg
add
lcall
xor
xor
sub
or
bound
push
xlat
jae
jb
mov
rol
rol
mov
ret
enter
ret
rol
mov
cmpsl
jmp
mov
scas
dec
test
mov
add
jmp
add
mov
arpl
mov
add
int3
add
xlat
add
ficoms
jl
out
pop
test
negl
sar
cld
scas
cli
mov
cli
scas
sar
std
mov
std
mov
mov
cld
mov
mov
cld
mov
push
cmpsb
jmp
mov
call
lret
mov
mov
lahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
push
add
dec
dec
outsl
outsb
outsl
mov
fcom
xlat
jmp
xlat
fdiv
rcl
sar
int3
int3
into
dec
leave
lret
dec
lret
lret
lret
lret
leave
leave
mov
scas
ljmp
push
mov
lods
cmp
jmp
add
lods
add
mov
arpl
mov
add
iret
add
xlat
add
add
pop
xchg
cmc
jno
sti
lods
aad
mov
std
mov
fcos
std
mov
cld
mov
xlat
mov
fcos
divl
call
leave
into
mov
mov
xchg
or
add
add
xor
add
add
pop
or
mov
pop
out
out
in
out
jecxz
jecxz
fucom
fcmovnu
fcomi
xlat
fcmovu
cli
xlat
fdivr
into
ror
mov
imul
jmp
add
mov
popa
mov
add
leave
add
add
fldl
jbe
in
js
out
xor
cld
mov
loopne
std
ret
inc
loope
std
fdivrp
inc
fdivrp
dec
dec
dec
fdivrp
inc
fdivrp
std
lret
cli
mov
lret
lret
into
mov
mov
xchg
adc
add
add
std
add
incl
std
std
add
div
or
out
in
pop
jmp
in
sub
out
out
dec
jmp
jmp
call
aad
jmp
mov
xchg
cmpsb
cmp
movsb
adc
jmp
pusha
pushl
add
les
imul
xlat
add
add
jmp
inc
pushf
cld
mov
jecxz
cld
lret
loop
std
int3
out
std
into
in
dec
loop
dec
loop
std
int
std
iret
loop
shl
call
jecxz
std
shl
cld
out
mov
inc
ret
ret
test
mov
xchg
xchg
add
add
add
std
incl
std
add
div
add
repz
add
repz
out
icebp
out
pop
in
icebp
lock
out
in
pop
fnstsw
loope
les
sti
sahf
and
lcall
add
add
mov
data16
mov
add
add
fiaddl
je
in
jnp
in
adc
pop
stos
cli
mov
cld
iret
out
cld
shl
shl
call
out
call
in
call
out
call
jmp
fldl2t
std
fucompp
shl
push
ret
in
fcos
leave
lret
lret
stos
stos
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
cli
add
stc
add
cld
stc
add
cmc
hlt
or
aad
xor
mov
xchg
negb
add
cmpsb
add
lods
add
mov
add
lret
call
add
fildl
ja
call
sbb
cld
fldl2e
fldl2e
std
fldl2t
fucomi
fucomp
std
fsubr
fucomp
std
loopne
std
fsubrp
std
fucomip
cld
aam
push
ret
aad
call
rcl
clc
stos
lods
lods
lods
xchg
xchg
xchg
outsb
outsb
outsl
add
add
mov
loope
add
enter
mov
cwtl
repnz
jmp
add
mov
add
int
outsb
call
add
fiadds
jae
ljmp
sti
mov
shr
std
fcomip
fucomi
std
fldpi
fucomi
call
call
std
aam
cli
iret
loop
cld
shl
clc
iret
fdivrp
stc
lret
cmc
rcl
out
mov
xlat
xlat
sti
mov
mov
cltd
cltd
cltd
cmp
lcall
mov
mov
add
leave
lds
lods
mov
lcall
add
mov
arpl
mov
add
rolb
outsl
call
add
add
ljmp
cld
cwtl
cli
leave
cli
lret
loop
cld
idivl
aad
repnz
iret
push
mov
int3
call
mov
sar
jmp
shl
call
loopne
in
mov
mov
xchg
add
add
add
int
mov
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
dec
pop
jo
rorl
jne
ficoml
ja
loopne
cmp
ljmp
jmp
mov
std
loope
cld
fildll
neg
mov
lret
into
in
enter
into
aad
loop
fcmovb
call
in
test
out
out
popf
call
lret
lods
lods
lods
adc
cmpsb
cmpsb
cmpsb
add
ret
ret
lahf
lods
aam
dec
cmp
sbb
cmpsl
sbb
scas
and
ja
mov
inc
test
ret
push
mov
leave
gs
mov
shlb
rcl
ror
ret
int3
rcl
lret
mov
iret
shll
fcom
aam
fidivl
loopne
gs
in
out
call
xor
div
mulb
icebp
repnz
or
mov
int3
add
add
add
rolb
mov
les
insb
mov
test
sbbb
mov
cmpsb
sarb
stos
mov
ret
cmpsl
enter
lret
ret
mov
lret
ror
into
addr16
iret
push
rcl
rorl
fcom
inc
rcl
aad
aam
fsubs
fcomp
fcompl
fchs
ficoms
fucom
loope
loope
in
out
jmp
in
repnz
add
sti
testb
sti
add
incl
std
add
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
ret
inc
ret
enter
int3
lret
daa
int3
ror
and
rcrb
rcl
aam
rcl
rorb
rcl
aam
rcr
add
fcmovnu
add
add
jecxz
add
in
jmp
lret
fcom
add
std
incb
mov
mov
add
rol
ret
sub
mov
mov
push
rol
or
leave
enter
movl
lret
rolb
rcr
aam
rcl
aam
aam
add
xlat
add
fsub
add
fildl
fnstsw
loopne
loopne
in
call
add
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
mov
test
stos
dec
test
xchg
xchg
pop
add
add
add
add
add
add
scas
scas
mov
mov
sarb
iret
iret
into
jmp
aam
cmc
rcl
sar
ror
iret
cli
int3
int3
lret
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
enter
into
iret
into
xlat
xlat
call
dec
rcl
dec
iret
into
dec
lret
lret
mov
mov
icebp
xchg
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jae
jae
gs
inc
dec
dec
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
rcl
sar
lret
int3
lret
inc
rol
pushl
test
popf
sahf
lahf
xchg
cwtl
xchg
jmp
jno
xchg
push
pop
adc
xor
add
add
add
add
cmpb
jp
jp
test
jp
push
imul
push
push
stos
push
push
outsb
insl
outsb
push
pop
pop
cmp
cmp
pop
jo
jo
scas
scas
mov
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
fwait
fwait
add
popf
xchg
cltd
fcoml
addb
jnp
jnp
js
js
jp
jns
jns
jns
jae
jae
push
push
push
cmp
je
pushf
pushf
sahf
mov
scas
scas
repz
lods
scas
sti
lods
scas
lods
std
test
test
call
xchg
call
mov
scas
jmp
lods
scas
leave
movsb
movsb
movsb
cltd
jae
jae
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
nop
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsl
orl
cltd
repnz
xchg
xchg
std
mov
call
sahf
lahf
ljmp
scas
std
mov
mov
stc
mov
mov
cmpsb
mov
jg
pusha
pop
pusha
or
lods
mov
movsl
lahf
movsl
decl
mov
xchg
xchg
xchg
std
sahf
popf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insl
insl
outsb
xchg
subl
nop
mov
lcall
mov
pushl
pop
mov
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
movsb
test
xchg
xchg
call
xchg
xchg
lcall
lcall
pushf
sahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
cmp
dec
jl
mov
aaa
jbe
scas
sub
sbb
imul
sbb
mov
mov
mov
jle
movsb
mov
add
add
add
popa
or
mov
in
movsl
test
lcall
mov
mov
decl
orb
xchg
jno
cld
xchg
popa
cmp
dec
js
cmp
xchg
sub
xchg
sbb
xchg
punpcklwd
sahf
push
jmp
sbb
mov
insl
pushl
sbb
jbe
rcrb
mov
lods
scas
xchg
popf
popf
popf
adc
add
add
pop
pop
pusha
or
lods
mov
stos
movsb
cmpsl
jmp
cmpsl
test
stos
stos
test
lcall
pop
jnp
mov
imul
mov
pusha
decl
or
mov
call
add
pushf
add
test
pushl
jl,pn
mov
jge,pn
xor
dec
pop
xchg
inc
test
scas
movsb
cmpsl
test
add
add
add
pop
pop
pop
or
movsl
test
ljmp
mov
pushl
mov
jmp
aas
jno
mov
pop
decl
or
xchg
decl
add
xchg
add
lahf
add
movsl
add
mov
insb
inc
ss
int3
inc
mov
rolb
call
inc
mov
inc
xchg
fimull
call
bound
stc
mov
mov
movsl
movsl
mov
add
add
add
pusha
or
mov
ljmp
mov
mov
mov
ljmp
push
jl
sbb
popa
decl
or
push
call
add
cmpsb
add
scas
add
mov
dec
xchg
fcoms
fistpl
ficomps
loop
mov
fildll
dec
test
cld
mov
mov
movsl
lods
movsl
xor
add
add
dec
pop
jle
jnp
fwait
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
lcall
and
call
pop
lcall
add
scas
add
mov
xor
jmp
outsb
test
in
stos
ljmp
in
jb
jmp
cmpsl
mov
shrl
cmpl
dec
dec
dec
pop
outsb
insl
imul
test
cltd
lcall
mov
mov
sar
mov
jmp
jne
lahf
cmp
pushf
sub
call
add
movsb
add
lods
add
mov
gs
or
inc
xchg
jmp
jp
jmp
mov
out
test
push
xchg
out
xchg
mov
cmpsl
cmpsl
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
mov
mov
xchg
ljmp
sub
lcall
ljmp
add
add
int
ja
fbld
in
xchg
mov
push
cltd
push
cwtl
stc
cltd
lret
pushf
lret
cwtl
lods
inc
mov
lods
popa
lahf
mov
add
xor
xor
pop
pop
pop
push
fisttpl
mov
mov
rol
pushl
push
xchg
stos
dec
cmp
and
mov
add
mov
arpl
mov
add
fsubs
cmp
jl
push
movsb
lret
clc
test
cli
test
cli
stos
sar
sti
lods
sar
std
lods
sar
stc
test
jmp
mov
inc
rol
test
sahf
sahf
or
add
add
push
push
dec
aaa
jae
je
stos
stos
stos
ror
int
out
into
int
lret
lret
lret
leave
leave
std
enter
movsb
mov
test
inc
jle
mov
add
mov
fs
add
int
insl
fiaddl
call
xchg
mov
std
mov
cld
mov
sti
mov
xlat
cld
mov
enter
repz
scas
lods
mov
add
add
add
add
pop
or
aad
dec
loope
jecxz
fsubp
loopne
fcmovnu
ffree
fcmovu
xlat
out
mov
gs
test
jae
movsl
push
pusha
pushl
add
leave
add
add
or
push
mov
sti
std
std
inc
loopne
std
lret
dec
loopne
std
out
mov
lret
mov
xchg
pushf
pushf
sahf
sbb
add
add
incl
std
std
std
add
ljmp
jmp
in
xor
loopne
in
lds
mov
mov
add
mov
fs
add
into
add
fldl
jbe
ljmp
std
ret
cld
iret
in
shl
shl
aam
xlat
out
jmp
push
enter
int3
sar
mov
mov
add
std
incb
std
std
add
std
std
pop
aad
push
mov
pop
mov
popf
or
ljmp
add
ret
add
rolb
jo
fiadds
jbe
in
and
shl
std
fsubr
fldl2t
std
xlat
call
cld
fsubr
cld
aad
push
xlat
sti
mov
popf
sahf
das
add
add
int
int
mov
arpl
stos
add
mov
add
aad
jae
loop
ja
in
xor
sti
int3
loop
stc
leave
loopne
cmc
fsin
hlt
ret
aad
icebp
rcl
out
sar
in
vpsubw
shl
in
shl
in
fsubr
enter
test
incb
aam
push
mov
je
or
mov
imul
sbb
lret
and
cs
fists
loop
mov
out
in
lret
jmp
fidivrs
lret
enter
iret
scas
in
fcompl
in
jmp
rorb
mov
add
stos
lods
lods
add
xchg
movsb
les
mov
mov
nop
fidivrl
andb
into
lahf
mov
sarl
enter
int3
insl
aam
int
aam
rorl
cmp
loopne
das
in
fsubl
jecxz
lock
in
in
or
std
std
add
add
add
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrl
mov
pop
rol
adc
rcl
or
or
into
into
add
incl
std
add
add
add
int
shufps
or
into
int3
into
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
cltd
add
ret
enter
leave
leave
mov
ret
mov
scas
scas
scas
insb
stos
lods
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
lods
add
mov
enter
sar
aam
std
rcl
sar
iret
iret
into
std
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jno
jb
addr16
dec
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int
aam
aad
iret
int
dec
enter
mov
jmp
mov
push
add
add
add
add
jne
jne
xchg
adc
outsb
jo
popa
bound
push
outsl
outsb
jb
popa
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jae
and
add
pop
add
add
jb
je
popf
xchg
fwait
mov
xchg
mov
mov
or
addb
push
dec
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
adcb
movsb
test
stos
mov
mov
mov
cld
sahf
sahf
popf
cmc
lcall
mov
push
push
imul
jg
mov
xchg
testl
xchg
pushl
jno
mov
mov
stos
lods
lods
push
stos
lods
lods
add
add
add
scas
test
xchg
xchg
xchg
call
lcall
cwtl
fwait
lcall
mov
loope
jbe
out
xchg
bound
std
fwait
inc
jne
movsl
ss
lods
sub
pushl
sbb
cmp
popf
scas
lock
mov
imul
into
add
xchg
pop
scas
movsb
stos
test
popf
pushf
lahf
jmp
mov
xchg
decl
jbe
nop
inc
je
mov
imul
nop
adc
xchg
or
mov
push
outsb
pushl
and
jp
ret
aas
test
rcrl
subl
jae
push
mov
movsl
cmpsl
cld
test
mov
ljmp
mov
decl
or
xchg
push
decl
add
mov
adc
ret
dec
aas
mov
roll
call
inc
call
dec
xchg
dec
lcall
movsb
movsb
mov
add
push
test
mov
lods
pushl
mov
movsl
call
push
decl
pop
pop
call
add
lods
add
mov
push
xchg
fcompl
loope
mov
jmp
movsl
call
pushf
mov
test
cmpsl
test
add
add
arpl
adc
pushf
pushf
lcall
mov
mov
lcall
xor
lcall
lcall
add
mov
dec
xor
call
jnp
out
jl
push
jle
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
ret
mov
jmp
jl
sahf
and
lcall
pop
pushl
or
dec
xchg
out
mov
push
xchg
push
xchg
leave
push
xchg
enter
mov
cmpsb
sub
aas
aas
aas
adc
push
xchg
xchg
mov
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
fs
add
vmread
ljmp
cli
stos
iret
sti
lods
sar
cld
scas
sar
cld
lods
iret
jmp
lret
mov
movsl
ds
std
add
outsl
inc
scas
mov
mov
aam
aad
aam
rcl
shr
lret
lret
mov
mov
jmp
add
add
add
out
xchg
clc
nop
cld
mov
fdivr
cld
ret
inc
std
ret
fcos
lock
ret
test
addb
add
add
in
jmp
jmp
call
jecxz
fcomp
fldenv
movsl
daa
outsb
ljmp
add
lret
fldl
ja
lock
dec
in
std
shl
call
in
std
aam
call
out
hlt
aam
int3
in
lods
scas
lods
popa
jg
jg
std
incb
std
incl
int
shrl
lahf
sbb
lods
add
mov
add
loop
js
hlt
push
cmpsb
std
loopne
std
jmp
cld
shl
cld
aad
sti
shl
push
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
add
mov
or
fstpl
jg
ljmp
cli
in
mov
into
bnd
ret
in
aam
jmp
scas
push
cltd
fwait
fwait
add
sarb
xchg
dec
and
push
mov
shll
lret
jbe
mov
mov
int3
adc
int
xlat
lret
iret
pop
xlat
dec
in
fistpll
out
out
out
in
in
sbb
mov
mov
cmp
mov
scas
push
mov
mov
cs
mov
lret
sbb
bswap
int3
int
aad
aad
incb
addl
add
stos
std
add
rol
std
incl
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
and
jg
push
inc
bswap
lock
cmpsl
pop
pop
or
pop
xchg
and
in
popa
mov
shrb
xchg
subl
ds
or
cmpb
jnp
in
xchg
xchg
and
and
mov
stc
mov
mov
add
dec
hlt
mov
adc
faddl
or
jns
adc
mov
inc
inc
nop
pop
mov
adc
ja
test
pusha
sub
mov
push
push
dec
pushf
mov
and
outsb
repz
scas
in
adc
push
stc
out
mov
outsl
sub
filds
movl
jge
test
out
inc
mov
fcom
cli
push
inc
outsb
and
cmpsl
into
dec
pop
mov
ret
lea
and
pop
push
pushf
push
inc
pusha
inc
enter
push
mov
mov
pop
repnz
or
daa
arpl
jl
sbb
aam
pop
jp
mov
adc
cmpsl
xchg
es
and
shr
cwtl
and
mov
cmp
add
das
push
rorb
xorps
mov
sub
subl
or
inc
adc
mov
cltd
xchg
mov
enter
mov
cmc
in
add
sub
add
outsl
imul
loope
mov
jae
pop
push
addr16
xor
sbb
loope
sbb
test
cwtl
mov
out
test
mov
sahf
out
jge
cmpsl
mov
xchg
inc
movsb
dec
lcall
xor
imul
sbb
pextrw
mov
movsl
movsl
mov
pop
xchg
iret
and
jo
or
sub
sbbl
sbb
adc
sarl
or
fistpll
add
mov
roll
insl
mov
add
xor
ss
repz
stos
loop
cmpsb
ss
sub
sub
mov
rorl
popf
imul
xchg
or
inc
aad
leave
jb
xchg
ss
fdivrl
rclb
jmp
sbbl
sub
shlb
xor
cmc
icebp
bound
inc
in
inc
inc
mov
and
in
rol
and
dec
jmp
out
push
and
sub
mov
movsb
outsl
jmp
and
jmp
je
mov
dec
popf
sahf
xchg
cmp
pushf
std
dec
inc
les
insb
inc
inc
jno
insb
cmp
fcompl
ljmp
fnstsw
mov
sub
pusha
aam
outsb
in
push
enter
cmpsb
xchg
insl
jecxz
jle
cmc
inc
jg
popf
pop
dec
mov
pop
orl
ds
pop
fisubl
xchg
sub
inc
dec
xor
xchg
aaa
std
cld
leave
cmpsl
lcall
rolb
cltd
bswap
out
push
sti
pop
xchg
hlt
insb
call
mov
sub
cli
loope
sbb
push
pop
push
ret
or
push
push
mov
je
inc
rclb
loop
and
ss
adcb
sti
cmp
cld
ja
sti
dec
shrl
mov
jmp
mov
cmp
add
mov
out
pusha
in
imul
jmp
icebp
xchg
xor
jb
ljmp
adc
mov
lret
add
xor
in
xchg
xor
xchg
lret
lds
lds
test
fisubrl
mov
test
cwtl
xlat
cmpsl
and
lahf
aaa
pop
sbb
stc
mov
stc
sub
xchg
dec
leave
sbb
lds
sti
adc
xchg
push
xchg
push
add
mov
movsb
das
jg
cmc
lahf
pop
mov
xor
imul
pop
test
movsl
inc
dec
mov
ljmp
pop
call
or
adc
mov
loop
dec
call
or
push
add
adc
jne
xchg
das
cmpsl
orl
repnz
adc
add
cltd
mov
mov
sub
mov
rcl
mov
pop
jl
jl
sahf
inc
ljmp
jns,pt
bound
and
jne
scas
roll
lds
imull
mov
popf
adc
mov
mov
mov
loope
popa
mov
xor
stos
xor
leave
adc
icebp
sub
mov
movb
popf
pop
xchg
jmp
fnsave
xor
xchg
movsl
sbb
push
insl
lret
mov
les
ret
add
in
filds
dec
lock
jle
inc
push
add
adc
test
test
mov
mov
mov
mov
lods
cmpsb
mov
cmp
cmp
jno
xchg
sub
lock
xchg
sub
mov
xor
sub
sub
dec
jp
sbb
cmp
insl
mov
mov
out
sti
cmc
movsb
in
pop
pop
leave
mov
je
test
scas
xchg
loopne
push
fadds
jae
iret
push
add
pop
xchg
jge
cmpsb
or
cmp
lds
mov
repz
pusha
jns
ret
imul
int
dec
add
xor
sub
inc
xor
xchg
cmpsl
aad
fnstsw
dec
fcomps
jecxz
mov
push
push
jbe
aam
cmp
ss
dec
lds
pop
or
add
jae
mov
pop
int3
arpl
adc
mov
ss
rclb
ljmp
xchg
sub
out
loope
aaa
inc
fsubs
mov
enter
jo
callw
insb
xchg
sti
xchg
add
incl
cli
das
mov
int3
aaa
montmul
cmpsb
orb
cmpsb
aad
loop
cmp
pop
out
out
insb
push
aad
nop
aam
sub
mov
popf
test
xchg
cs
sub
lock
cld
fsubs
pusha
xchg
stc
sbbl
mov
jle
dec
mov
sahf
inc
lahf
mov
shll
test
and
xor
ljmp
out
cwtl
or
sbb
inc
clc
scas
out
and
iret
jg
adc
cmpsl
sub
inc
lods
xor
rclb
push
mov
pusha
add
loope
push
ja
sub
lea
imul
push
loopne,pn
xchg
push
pop
cs
divl
rorb
push
adc
and
xchg
mov
movsl
jecxz
lds
sub
jp
push
dec
loop
dec
add
fistpl
xchg
cs
cmp
cmp
inc
pop
bnd
ret
pop
aad
jns
mul
js
out
sbb
xchg
jl
mov
imul
push
out
cmp
and
icebp
mov
inc
pop
lock
fs
ja
movb
sub
fmuls
or
mov
insl
sub
pop
mov
push
mov
push
js
insb
ja
lds
mov
pop
addr16
ds
cwtl
repnz
push
aas
out
out
test
cmp
negl
fbstp
pop
and
sub
dec
inc
dec
loope
insl
dec
dec
les
cmp
ss
dec
dec
mov
cmp
fwait
and
push
or
adc
gs
jbe
cmpsl
scas
xor
xor
mov
test
and
mov
adc
sahf
mov
cwtl
mov
loopne
mov
adc
inc
xor
add
mov
push
jmp
or
cs
pop
les
jl
dec
scas
mov
jns
iret
shrl
add
icebp
mov
mov
jne
cmpsb
cmpsb
test
sub
repnz
dec
jecxz
dec
jns
jg
push
sahf
mov
mov
icebp
repz
and
inc
shrl
lds
icebp
mov
mov
sysret
inc
xor
jg
push
and
lcall
and
stc
enter
sbb
xchg
sbb
or
aas
cmpsb
cmp
push
rclb
ret
hlt
sbbl
in
jge
shl
clc
clc
and
push
rorl
sub
test
popf
add
push
pop
mov
daa
mov
ret
lds
or
fsubr
inc
fcmovnu
jns
inc
cmpsl
cli
arpl
jmp
cmp
test
push
jle
pop
out
pop
lahf
dec
in
cld
sbbb
xor
pusha
movsb
mov
iret
data16
ljmp
dec
fists
aaa
and
out
repz
xor
shrl
cli
xchg
or
stos
push
in
xchg
popf
fmul
jbe
mov
fmull
mov
loopne
lea
add
bound
imul
xchg
lds
push
call
cltd
lcall
sub
stos
dec
testb
pop
imul
pop
jb
jno
incl
and
dec
loopne
sbb
loopne
sbbb
mov
add
sarb
les
test
in
mov
sub
int3
rcrl
aas
jge
scas
inc
rcrl
dec
loopne
xor
mov
ret
mov
popf
xor
aad
test
sbb
fidivrl
jg
in
test
rorl
xor
mov
mov
xor
pop
icebp
mov
rclb
icebp
mov
mov
jns
in
pop
repnz
pop
mov
push
xor
adcb
xchg
andb
sbb
xor
jns
ss
sub
leave
xchg
cs
fstl
and
lock
loope
pushf
add
mov
cmp
test
cli
xchg
push
sti
xlat
outsb
sbb
loop
lcall
and
dec
icebp
mov
in
test
dec
daa
mov
data16
or
jge
push
jo
inc
sbb
pop
mov
out
test
scas
cmc
mov
mov
je
xor
lcall
or
jle
mov
sbb
pusha
mull
push
ljmp
fs
in
in
and
sbbl
inc
popa
clc
xor
push
fsubrs
fwait
xchg
sub
imul
insb
xchg
jl
jmp
movsb
mov
pop
add
fs
lock
mov
jbe
sti
shrb
dec
push
call
clc
pop
fnstenv
xchg
cli
xchg
mov
pop
int3
arpl
sub
mov
adc
orl
push
push
fcomip
mov
aaa
sub
test
and
fstpt
fnsetpm(287
jnp
xor
and
add
mov
into
gs
mov
push
ljmp
sub
aam
xchg
dec
push
lods
cmp
pop
insl
push
add
pusha
xor
loopne
adc
rolb
add
mov
xor
lods
js
push
pushf
sbb
xchg
sar
xchg
les
push
call
cli
mov
or
xchg
inc
fadd
or
jnp
ja
ja
pop
cmc
or
cs
xchg
mov
ret
mov
mov
jnp
lods
test
xlat
call
inc
fsubrs
or
sbbl
mov
or
dec
cmpsb
int
and
enter
lret
icebp
fcmovne
data16
pop
iret
out
lcall
add
xchg
bound
mov
cwtl
ljmp
sub
xchg
imul
dec
dec
loope
jno
bound
scas
inc
cmc
push
mov
stos
xchg
and
sbb
lret
cmc
cmp
jp
cltd
in
test
into
jp
rorb
aas
rcll
adc
mov
ljmp
jp
dec
in
fwait
ljmp
cs
call
popf
shlb
xor
jp
sar
nop
in
out
movsl
fdivrs
cwtl
das
jmp
jns
mov
push
out
pusha
imul
sahf
and
jnp
jge
mov
ret
pop
icebp
mov
mov
mov
add
aad
cmp
in
jl
pop
sahf
or
testb
or
cmp
mov
movsb
rcrl
mov
enter
rcrl
sub
lret
lods
addr16
out
mov
fimuls
inc
xlat
lock
daa
mov
adcb
popa
aas
mov
cld
xchg
sub
cli
xchg
test
lret
mov
fucom
jns
data16
xchg
lock
loop
adc
bound
enter
pop
repnz
xchg
jmp
cltd
inc
sub
and
mov
push
lods
add
push
inc
scas
cwtl
das
loop
mov
push
mov
repnz
mov
xchg
sti
jns
dec
cmpsl
sbb
add
test
stc
popa
inc
sbb
aaa
push
add
std
cmpsl
ds
mov
mov
dec
or
sti
or
ret
iret
push
out
scas
repz
xchg
xchg
mov
aaa
into
xor
push
jns
daa
mov
ds
push
iret
xor
push
jns
push
imul
dec
push
pusha
movsl
pop
std
xchg
xchg
push
cmpsb
mov
enter
shrb
outsl
push
js
out
dec
or
jne
push
stos
pop
lret
mov
xor
dec
into
gs
popl
add
sub
xor
call
inc
divl
outsl
movb
cmp
xchg
xchg
pop
mov
dec
and
mov
pop
and
outsl
jle
popa
jo
push
popf
outsl
xchg
pop
cmc
add
popf
xor
and
jle
pop
or
sub
fdivrs
jg
cmp
adcb
pop
cmpsb
cmp
inc
outsl
das
pusha
cmc
mov
add
add
pusha
testl
cltd
xlat
outsb
lds
movsl
cmp
ja
adc
into
inc
xlat
mov
loopne
and
xor
push
in
in
cmp
iret
xor
repz
jl
or
js
popf
ja
in
mov
jo
jbe
aas
inc
add
jmp
or
dec
in
mov
sub
stc
sahf
lods
inc
mov
dec
mov
jns
nop
daa
push
movsbl
aas
fidivs
into
pusha
idiv
rclb
test
mov
dec
mov
jg
loope
call
or
xchg
jnp
sub
pop
popf
mov
and
inc
pop
hlt
js
lcall
ja
or
into
gs
loope
adcl
cmc
cmp
xchg
dec
mov
mov
jecxz
and
mov
stos
xorb
adc
or
je
dec
fbstp
lcall
sub
test
mov
pop
stc
inc
adc
cmpsl
jge
idivl
enter
pop
xor
repnz
xchg
and
inc
jb
dec
adc
push
push
jae
sub
mov
xchg
insb
inc
test
outsl
clc
mov
sbb
jno
lret
loope
movsb
cmp
cmpsb
cmp
nop
leave
call
xor
sbb
dec
lods
push
in
lods
int
inc
mov
movsl
cmp
xlat
scas
inc
in
loop
rolb
xchg
sub
sarl
jle
push
loopne
fdivs
out
into
add
int
das
cmp
outsb
imul
pop
push
mov
cltd
mov
ficoms
mov
xor
popa
sbb
test
mov
shlb
pop
enter
inc
insl
fbstp
pop
pop
icebp
mov
lret
push
lock
xlat
outsb
rclb
lock
fldt
nop
daa
mov
mov
cli
mov
fs
mov
xchg
xchg
pop
mov
fs
gs
adc
jle
outsb
in
test
cmp
aad
pop
mov
imul
or
inc
rolb
in
sbbl
cltd
pop
sti
xchg
insb
mov
sbb
cltd
cmp
imul
ljmp
jno
lea
ret
adc
test
outsl
jb
mov
out
cmpsl
std
push
jmp
pop
and
popa
in
pop
out
dec
cmp
jns
xor
push
ds
inc
fistpl
mov
popa
clc
sub
popa
clc
fsubs
or
shll
inc
fcoml
pop
mov
out
pop
xor
xchg
fmuls
sti
add
sub
push
gs
xchg
stc
xor
xlat
das
aad
stc
adc
sub
inc
inc
sub
dec
sub
push
dec
add
sub
sub
jne
lods
mov
sub
add
les
ret
inc
sbb
inc
inc
add
or
and
mov
jnp
inc
or
inc
mov
call
daa
in
push
cli
mov
or
push
shlb
jae
notb
pop
incl
icebp
mov
pop
xchg
mov
mov
lret
push
xlat
leave
jnp
in
jl
shlb
mov
add
movsb
mov
std
enter
mov
fcmovb
pop
call
or
mov
shrl
data16
mov
inc
mov
int
pusha
imull
in
dec
xlat
inc
sbb
sub
hlt
imul
mov
jecxz
push
add
xor
or
insl
add
leave
shlb
push
shrl
mov
lods
inc
sti
xor
nop
je
pushf
xor
enter
dec
sti
xchg
push
pinsrw
pop
hlt
mov
pop
dec
loop
push
movsl
call
repz
mov
and
mov
sti
xchg
push
call
mov
loopne
enter
loop
fmuls
lahf
call
or
cltd
ret
loop
adc
sahf
sub
push
in
lock
sbbl
adc
iret
xchg
sbb
lea
lret
jno
flds
lret
cmp
pop
sub
xor
imul
push
insl
add
xor
aas
sub
jle
dec
ljmp
sahf
xor
iret
mov
add
sbb
mov
jmp
test
or
jb
mov
or
arpl
mov
scas
clc
and
pushf
xor
push
out
pop
pop
scas
enter
inc
or
jns
xor
cmp
aad
test
test
lahf
in
insl
jb
ficoml
add
ficoms
adc
inc
push
sbbb
add
or
mov
inc
fsubs
addr16
adc
es
jno
pop
mov
xchg
adc
lods
stc
cmp
lret
and
xor
sbb
es
lret
xlat
adc
lcall
or
fbstp
aam
lcall
sbb
into
shrb
lea
out
shrl
lods
cltd
sub
jae
push
fs
mov
rclb
ret
inc
mov
xchg
popf
lahf
pop
testb
mov
rcr
inc
fcmovnb
stc
sbbl
mov
fstl
test
mov
repnz
pop
lock
adc
xchg
inc
mov
mov
data16
ret
std
xchg
cmc
mov
xchg
in
xor
sub
fnstenv
lods
aaa
into
push
jecxz
or
or
dec
aaa
scas
outsb
add
xchg
idivl
call
xor
jmp
mov
jg
sarl
ret
stc
pusha
testl
lds
cli
or
fbld
movq
incb
xchg
popl
push
inc
les
jno
out
pop
xor
movsb
xor
fisttps
aam
negl
int
mov
dec
fnstsw
adc
test
out
test
or
jp
mov
sbb
push
sub
mov
push
jl
ja
test
and
push
movsl
mov
and
enter
push
loop
sbb
xchg
sub
adc
cltd
xchg
inc
imul
xor
xor
lcall
and
mov
scas
ret
insl
fwait
mov
mov
call
call
enter
xchg
and
test
pop
repz
mov
mov
sub
mov
pop
jle
out
dec
jnp
stos
dec
imul
leave
dec
mov
xor
xor
cltd
jns
inc
fisttpll
stos
aaa
into
or
repnz
sub
jnp
mov
add
gs
and
mov
negl
scas
sub
pusha
imull
push
mov
nop
and
shll
inc
inc
fsubs
adc
negb
xor
sbb
test
pop
hlt
adc
pop
scas
bound
jnp
jne
push
jmp
xchg
out
test
jb
ja
dec
loopne
cltd
cmc
mov
sub
xchg
ret
test
or
mov
faddl
out
cli
xchg
out
inc
fstps
mov
mov
leave
pop
xor
jb
jle
lret
dec
lods
xchg
or
lds
mov
adcb
aam
nop
daa
cmc
lods
inc
les
icebp
mov
xsha256
cmpsb
aad
aam
adc
push
out
xor
mov
test
dec
out
and
mov
pushf
lods
inc
and
mov
pop
and
mov
dec
jne
jmp
insb
lahf
ss
pop
mov
xchg
fidivl
jle
icebp
jnp
mov
pushf
xor
add
popa
inc
pop
je
js
sbb
jmp
inc
push
insb
add
mov
mov
sbb
lcall
sbbl
jb
clc
dec
jno
pushf
mov
movsb
xchg
sub
shll
repnz
int3
inc
dec
in
jl
pop
repz
popf
mov
scas
inc
inc
cmpsl
ds
arpl
je
shrl
xchg
and
inc
inc
pop
hlt
push
popa
add
je,pt
or
pop
or
mov
adc
and
mov
lods
inc
add
push
movsl
inc
and
icebp
test
cwtl
xchg
movsl
js
sbb
jl
xchg
xchg
rcrl
icebp
mov
nop
mov
add
mov
cmp
xlat
lret
xchg
arpl
loopne
sbb
push
out
mov
cmpsb
mov
cmp
jnp
sbb
in
ret
mov
jecxz
ljmp
or
mov
pop
repnz
stos
and
jno
pop
out
cmp
notb
ret
repz
mov
sub
fwait
mov
pop
adc
stc
xor
and
mov
in
arpl
pop
xchg
popf
insl
push
shll
mov
imul
aas
lock
or
in
mov
stc
pushf
adcb
addl
add
jmp
inc
adc
dec
mov
mov
out
adc
test
push
jmp
inc
lcall
fmull
iret
pop
dec
in
popf
test
adc
xor
mov
fidivl
stos
and
cmpsb
cmp
shrl
leave
enter
les
fisttpl
jle
xor
xchg
fidivs
std
mov
mov
test
clc
cli
aad
in
inc
cld
xchg
push
or
inc
fidivs
mov
inc
fsubrs
lds
sub
in
pop
adc
cmpsb
scas
data16
cwtl
iret
xor
add
dec
in
or
insb
add
adcb
repz
jle
test
add
dec
jns
das
stos
imul
pushf
int3
mov
lds
das
enter
mov
ja
xchg
es
mov
sbb
or
xchg
pop
xchg
cs
sub
ret
pop
lock
cmp
sarl
outsl
mov
mov
neg
outsl
mov
mov
adc
jae
mov
sti
inc
sbb
jge
jp
sahf
sub
push
loop
jnp
xor
movsb
cmpb
les
mov
mov
lahf
mov
sbb
ror
rcr
and
fcomip
aaa
shlb
sti
dec
daa
leave
movsl
cmp
lea
mov
jge
data16
jp
cwtl
pop
dec
mov
cmpsl
xchg
push
lcall
pop
in
inc
cmp
mov
or
inc
mov
push
xchg
cs
jp
sti
imul
aas
leave
pop
loope
in
out
fdivrs
sub
scas
mov
or
das
add
add
xor
repnz
xchg
jo
int3
imul
sbb
pop
xchg
dec
iret
push
aad
pop
push
in
xor
in
mov
or
inc
fs
sarb
pop
mov
xchg
daa
adc
xchg
xchg
sub
mov
rorl
shrb
sub
bnd
xchg
push
add
and
sbb
andl
xchg
xor
lcall
lahf
std
inc
push
jo
fwait
xor
fs
ds
xchg
mov
outsb
push
mov
push
jae
outsl
push
xchg
pusha
dec
test
push
inc
popa
test
push
jecxz
pop
push
jae
fs
int3
inc
pop
es
ficoml
dec
dec
push
and
push
dec
nop
mov
imul
push
mov
mov
enter
lea
repnz
sub
xchg
dec
daa
enter
dec
shlb
push
mov
jmp
fs
xchg
or
inc
imul
shrb
scas
sbb
in
xchg
cmp
sahf
cmp
push
rclb
fists
mov
stos
and
shrb
inc
jp
inc
imul
sbb
je
mov
push
test
lret
and
cmp
adc
and
xor
arpl
in
pop
jbe
lods
inc
pop
cmp
cmp
mov
push
scas
mov
jge
in
addr16
repnz
mov
divl
mov
in
push
in
movb
cmpsl
add
es
jnp
and
ret
shlb
out
arpl
imul
addr16
xor
insl
cltd
jb
imul
aaa
inc
xlat
xchg
sub
cld
jnp
aaa
inc
std
cmp
push
cltd
inc
arpl
xchg
push
mov
mov
cwtl
daa
inc
testl
and
ret
inc
adc
fs
notb
adc
pop
cmpsb
adc
xor
out
push
sbb
loopne
mov
aam
xchg
push
clc
cmp
movsl
adc
add
int
push
rclb
into
icebp
pop
mov
add
jbe
bound
push
pushf
lods
pop
and
jno
stos
imul
inc
xchg
sub
in
lret
push
inc
push
pop
iret
pop
pop
stos
pop
jno
daa
fbld
mov
loopne
out
dec
cli
mov
lds
shlb
jae
mov
adc
ljmp
leave
xchg
sub
cmpsb
pop
mov
enter
lcall
xchg
or
cmp
ss
and
sub
nop
fidivrs
inc
fcom
add
jb
lret
ficoml
stos
int3
fwait
xchg
loop
and
mov
int3
ja
or
lock
loope
fstpl
dec
movsl
inc
fcom
push
sub
jbe
or
add
lret
mov
ret
dec
push
inc
pushf
int
pop
jne
imul
and
pop
xor
sahf
inc
ret
pop
je
jle
outsb
in
jg
loope
sbb
add
add
rorl
push
fstl
test
xor
nop
sub
stc
hlt
subb
and
sbb
add
dec
xor
jle
ljmp
imul
adc
bound
mov
repnz
mov
stos
lods
xchg
lea
movsl
jne
rol
and
cmp
pop
pop
aas
sub
lods
push
or
pop
sbb
stc
movsl
jnp
xlat
sbb
incb
icebp
daa
mov
sub
add
lds
jne
or
lods
jge
dec
popf
in
out
sub
xchg
sub
adc
dec
xchg
call
aas
cltd
xor
adc
push
stc
dec
fildll
cmp
jb
cmp
dec
inc
data16
inc
cmp
insb
es
jae
or
pop
cs
pop
xchg
dec
add
jns
xlat
inc
adc
jg
jno
les
xchg
sub
pop
xlat
shl
js
mov
repnz
ja
shll
pusha
pop
in
xchg
es
daa
xchg
jmp
mov
dec
mov
ja
scas
push
sub
test
mov
pop
stos
lods
into
test
mov
push
lcall
pop
cmpsl
inc
jne
mulb
jp
lahf
leave
jae
inc
into
dec
lock
push
test
push
mov
in
jmp
in
push
add
pop
xchg
call
adc
pop
roll
je
and
sbb
jl
cmp
or
push
adc
loope
cli
and
pop
mov
lret
inc
inc
jmp
out
sub
mov
sbbl
out
stc
nop
dec
in
mov
xchg
mov
pusha
jg
mov
jge
loope
mov
ss
push
xor
out
popa
pusha
js
mov
or
out
outsl
adc
and
inc
fdivrs
pop
sbbl
push
lds
push
xor
fs
call
push
jns
inc
xor
ja
pop
sub
dec
xor
or
adc
sub
sub
jns
gs
xchg
jo
pop
push
nop
and
mov
loopne
ret
into
inc
dec
pop
jp
mov
js
mov
push
movl
out
scas
scas
addl
in
mov
add
or
jns
xchg
or
pop
adcb
mov
lods
fdivrp
lahf
jnp
fdiv
sti
leave
fisttpl
outsl
mov
ror
or
dec
ds
lods
inc
jg
roll
adcb
sub
and
push
stc
nop
jl
push
xlat
cmp
mov
mov
mov
cld
cmpsb
mov
xchg
lret
bound
fiaddl
push
test
rcr
dec
push
fists
data16
or
mov
popa
xchg
or
sbb
ret
inc
push
mov
xor
pop
jbe
lcall
mov
fs
ljmp
dec
mov
aad
notl
test
clc
lds
outsl
in
cmp
jg
cmp
pop
xchg
and
pop
or
cmpsl
lahf
xor
pushf
xor
jae
gs
orl
enter
add
fs
or
mov
push
sbbl
in
repz
in
cld
pop
repnz
fists
mov
sub
jp
cltd
and
and
push
mov
cmp
and
into
sub
sbb
stos
inc
cwtl
mov
int3
jb
shrb
dec
into
or
lea
fstpl
push
push
gs
adc
and
les
fwait
in
stos
lds
xchg
int3
jl
dec
push
not
lea
sbb
jge
pop
mov
pop
or
and
enter
push
mov
and
stc
mov
std
dec
js
scas
sbb
faddl
aad
es
outsl
fists
pop
in
dec
inc
inc
mov
inc
mov
js
lods
and
ljmp
mov
mov
cld
ret
or
xchg
xor
xchg
xor
push
stc
jns
loopne
jecxz
and
xlat
xor
enter
sub
je
icebp
cs
jg
lret
push
popf
jmp
and
inc
js
mov
call
or
mov
jmp
lds
lret
bound
idivb
mov
cmp
mov
mov
sub
mov
jmp
ljmp
fldl
fucomip
lret
mov
mov
dec
fdiv
mov
das
mov
testb
mov
and
lods
add
es
push
les
pop
inc
scas
mov
loopne
loope
mov
lcall
dec
xor
fisttps
sbb
stos
mov
out
jge
and
cmp
dec
cmp
xor
mov
dec
cltd
xor
stc
push
xchg
jb
adc
stc
scas
movsl
aaa
xchg
aaa
inc
inc
lds
mov
pop
xor
dec
repnz
lds
xor
mov
mov
pop
pop
pop
mov
jns
or
je
sbb
jge
dec
test
loopne
adc
mov
fisttpl
mov
test
or
fildll
outsb
hlt
movlps
movsl
xchg
xor
sub
xchg
mov
mov
jmp
scas
mov
sbb
mov
jmp
pop
pusha
push
into
orl
cmp
mov
les
and
cld
mov
xor
pop
adc
jne
cmp
sar
ja
cwtl
jb
push
loop
xor
imul
pushf
xlat
icebp
push
ficoml
add
insl
rcll
insl
filds
xor
push
es
push
mov
and
hlt
into
xor
icebp
test
inc
xchg
xlat
outsl
xchg
mov
out
xchg
add
mov
hlt
loop
das
fstp
mov
dec
loopne
fisubs
mov
notb
or
pop
dec
pop
sahf
fs
iretw
sbb
xchg
xchg
push
xor
xor
nop
and
mov
mov
cli
push
insb
mov
pushf
lret
dec
dec
mov
mov
lret
mov
out
movsb
cmc
enter
dec
ja
mov
or
jae
xor
dec
pop
bnd
jo
aaa
mov
fildl
ja
test
dec
jle
inc
jl
or
mov
xchg
mov
push
test
sub
push
je
sbb
out
lea
xchg
cmp
inc
cmp
shrl
aam
sbb
test
mov
jo
pop
add
enter
test
sub
lock
sahf
insl
in
adc
or
xor
sbb
pop
rclb
ret
ss
decl
in
pop
push
ljmp
ljmp
into
mov
ja
cmp
imul
xchg
xchg
lods
pop
out
aad
jle
jno
fisttpl
in
cmp
outsb
pop
xor
xor
xor
mov
rcl
adcl
lret
js
lods
xchg
xor
adc
mov
adcl
maskmovq
negl
enter
adc
cs
orl
or
inc
mov
xchg
adc
cwtl
jno
mov
mov
mov
cmp
xchg
pop
sbb
xlat
ss
jb
add
adc
rcrl
mov
dec
bound
aas
jle
call
xchg
xchg
mov
les
push
test
outsl
int
pop
adc
sbb
fldl
mov
shrl
cmpsb
add
scas
fstl
push
jne
sbb
sar
push
or
pop
mov
mov
out
push
loop
xlat
fnsave
cld
xchg
loope
imulb
sbb
or
dec
push
mov
mov
sub
mov
lahf
dec
pop
pop
rcrl
jp
pop
cltd
js
lea
aad
add
loope
push
or
inc
jl
cmpsb
scas
data16
test
dec
out
cmpsb
icebp
or
xlat
in
test
jns
sub
les
mov
mov
rcl
xchg
push
cmp
insb
and
cmpsl
imul
vmaskmovdqu
arpl
repnz
mov
xchg
inc
mov
add
stos
push
cltd
mov
push
xlat
add
ret
jg
fs
stc
test
adc
mov
pop
lret
push
cmpsb
incl
fwait
imul
ret
out
xchg
jns
pop
add
repnz
icebp
inc
data16
adcl
sbb
inc
adc
sbb
push
and
mov
mov
push
lcall
pusha
fwait
into
gs
rolb
fwait
xor
inc
pop
jl
test
loopne
ja
gs
fists
or
xlat
outsb
adc
lcall
sbb
sahf
imul
bound
mov
mov
out
xor
fiadds
shrb
outsl
mov
push
test
iret
ret
xor
andb
and
fnstcw
xchg
cmp
and
das
push
xor
xor
cld
aam
bound
cmp
icebp
fimull
mov
adcb
xchg
inc
mov
mov
addr16
fucomp
or
and
fidivl
cmp
or
adc
icebp
popf
sub
je
xor
int3
pop
std
cmp
rclb
inc
lret
sbb
xchg
scas
in
jae
adc
xchg
xchg
test
arpl
push
xor
iret
adcb
jo
and
rcrl
mov
and
shrl
xor
cmpb
sub
inc
lock
jns
in
jnp
loop
xor
sub
mov
sub
push
cmc
adc
out
lcall
bt
xchg
push
or
scas
mov
push
jl
push
jae
adc
rcrb
mov
dec
cs
mov
into
push
xchg
mov
add
fdiv
cltd
xor
fcoms
stos
out
adc
inc
test
xchg
aam
out
dec
lods
jmp
rcl
dec
mov
test
lea
ret
fiaddl
jmp
in
xorl
out
rolb
call
mov
push
jae
mov
xchg
andl
lcall
cld
out
ds
xorl
cltd
sub
mov
inc
pop
pop
icebp
adc
inc
xchg
pop
xchg
pop
mov
test
xchg
shlb
movl
adc
dec
inc
scas
mov
in
in
test
dec
push
inc
fs
mov
push
inc
mov
mov
xorb
mov
repnz
mov
mov
push
mov
dec
orb
cmp
cmp
jl
cmpsl
push
and
xchg
jp
lods
outsl
xor
push
test
aad
das
xchg
es
das
dec
cmpsb
push
jge
push
scas
je
push
push
scas
dec
jne
in
xor
mov
push
and
push
lcall
aaa
das
cmp
aas
jnp
fstpl
fsts
idivb
inc
xchg
mov
push
adc
mov
repz
fistpll
imul
shlb
mov
mov
push
dec
mov
enter
popa
dec
enter
cmp
jno
sarb
mul
mov
adc
bound
xchg
js
cmp
sub
mov
xchg
push
mov
pop
inc
push
daa
call
mov
push
pop
cmc
popf
jmp
pop
test
sub
mov
dec
sti
out
lds
outsl
cld
mov
cmp
jno
out
xlat
stos
dec
loopne
clc
jne
gs
test
sbb
push
sub
mov
cmp
test
or
cmpsb
push
or
and
scas
test
loope
addr16
sbb
add
push
aaa
addr16
cmp
adc
xchg
cmc
out
mov
leave
mov
mov
loop
fisubrl
shrl
inc
les
loope
adc
dec
jnp
icebp
pop
orl
pop
mov
mov
imul
xor
je
dec
in
hlt
out
xor
lahf
popa
gs
mov
test
or
shr
stc
mov
adc
out
mov
adc
int3
jmp
xacquire
xlat
mov
aam
add
pop
mov
pop
ja
mov
pop
xchg
arpl
and
std
daa
xchg
push
xor
fcomps
frstor
and
test
push
cmp
dec
and
push
sub
scas
lods
jecxz
jp
xor
lahf
addr16
add
je
sti
leave
mov
push
roll
inc
adc
sbb
cld
insb
inc
addr16
jne
in
inc
pop
repz
arpl
mov
add
xchg
sahf
sti
leave
dec
fwait
jb
mov
js
mov
fstpl
mov
clc
add
and
push
cmpsb
lret
or
sbb
xor
mov
or
in
mov
adc
icebp
pop
aas
lea
sub
fdivrl
cwtl
nop
lret
push
scas
mov
testb
push
push
in
mov
aaa
push
mov
lds
mov
push
push
aad
push
mov
mov
sbb
sti
xchg
sub
ret
pop
jo
xlat
mov
xchg
js
insl
imul
sub
lods
pop
mov
lds
imul
repnz
lret
or
adcb
aas
inc
pop
xor
push
jb
ja
outsl
xchg
ja
sbb
jecxz
cmovs
mov
andb
into
mov
add
mov
or
lcall
arpl
sub
lock
xorb
out
sbb
std
inc
sahf
lret
mov
pusha
adc
mov
out
push
jp
jne
ret
ffreep
inc
dec
sbb
fidivrs
xchg
call
and
and
fstp
jae
out
cs
adc
push
test
mov
inc
in
cmc
cmpsl
sub
cli
and
mov
xchg
fldt
insb
jnp
cmp
aam
jae
in
dec
xchg
xor
cmp
je
lret
aas
push
outsl
je
sub
movsl
xchg
sbb
adc
mov
out
xchg
scas
iret
nop
fwait
xor
lock
and
mov
fdivl
stos
ret
xor
cli
orb
mov
in
test
fwait
jne
xorb
xchg
mov
leave
cmpsl
jmp
loope
cs
lock
out
int3
mov
ds
or
push
xchg
sub
dec
das
mov
arpl
test
sub
les
iret
sub
repnz
movsb
jecxz
dec
fdivrl
call
lret
or
lahf
cmp
daa
mov
jmp
or
mov
ret
loopne
push
out
scas
add
roll
push
out
inc
incb
sub
sbb
cmp
jmp
xor
dec
cmp
jae
fs
xlat
push
mov
jl
fidivrl
int3
or
test
sub
xsha1
cmpsb
or
popa
clc
es
mov
inc
fstpt
sbbl
popf
stc
into
sub
pop
and
scas
inc
sahf
xor
add
sti
xchg
push
jmp
pop
hlt
xchg
add
nop
xor
jge
inc
adc
lret
xor
dec
lcall
popa
clc
popf
shlb
or
orb
and
mov
add
mov
dec
loop
ror
in
incb
repnz
adc
inc
cmp
jge
clc
mov
cmp
inc
aad
pusha
jmp
inc
mov
inc
mov
lahf
xor
inc
sub
stos
lods
fiadds
negl
lods
mov
shlb
sbb
push
xlat
lods
jle
daa
or
mov
dec
inc
outsl
jg
mov
dec
mov
pop
push
xchg
dec
sbb
popf
rorl
pop
test
lcall
in
ret
sub
mov
outsl
sbb
or
xchg
stos
push
push
mov
test
gs
jo
adc
sbb
or
xorps
dec
xchg
lods
lea
faddl
ss
xchg
add
imul
mov
jl
or
lret
sahf
arpl
xor
mov
add
xchg
mov
cld
cmpsl
and
imul
mov
insl
xchg
push
fisubl
int
les
loopne
fcompl
enter
jg
jnp
pop
movb
mov
push
jns
inc
and
ret
call
mov
push
xor
fwait
stos
inc
int3
push
bound
cmp
pop
mov
jnp
pusha
roll
iret
push
aam
sbb
cs
push
cmpsb
dec
adc
mov
jne
adc
rep
in
mov
push
testb
scas
imul
pop
jae
pop
jge
xlat
dec
xor
mov
aas
pop
sahf
lahf
stos
sub
push
shl
insb
lcall
ss
adc
dec
lods
aas
and
mov
cmc
lcall
arpl
lret
scas
or
cmp
fstl
lahf
push
or
mov
sub
jns
sbb
subb
xchg
lds
in
rcrb
push
jmp
inc
fisubl
repz
add
ss
push
std
mov
mov
inc
or
test
call
cli
xchg
xchg
cld
jg
aas
cmp
add
data16
and
dec
push
lods
xchg
jge
sub
cmp
pop
mov
cmp
mov
out
xchg
unpcklps
cld
cmpsb
jae
push
fnsave
mov
iret
ds
lret
sbb
push
inc
loope
rcrl
leave
push
daa
push
pop
jae
into
test
sbb
mov
loop
and
sti
sbb
dec
rcrb
lcall
jno
and
cmpsb
pop
inc
fidivrl
fnsave
xchg
cmc
adc
add
and
repz
xchg
sbb
add
scas
cmpl
fwait
ja
adc
test
cwtl
xlat
cwtl
scas
lret
loope
xchg
dec
daa
mov
xchg
cld
add
fcom
jo
or
pusha
psubd
xchg
lret
gs
adc
ja
push
jmp
sahf
scas
je
out
stos
jno
popl
enter
push
dec
out
mov
js
insl
mov
out
popa
out
and
arpl
sarb
mov
dec
es
cmc
mov
cmp
lods
imul
jne
aas
loope
adc
xchg
cmp
pop
imulb
inc
sub
or
cwtl
jg
adc
dec
xchg
je,pt
test
in
adc
xchg
xchg
pushf
popa
sbb
lret
rolb
loopne
repz
mov
sbb
jb
add
cwtl
clc
xor
mov
mov
sbbb
pop
and
xchg
jnp
add
leave
jne
loope
outsb
addr16
notl
jg
incb
pusha
inc
cwtl
mov
jns
inc
mov
push
stos
aad
stc
or
adc
in
add
aad
enter
and
jle
mulb
mov
inc
xchg
pop
dec
sub
jb
adc
mov
jmp
sbb
adc
inc
idivl
or
fs
adc
cmc
sub
faddl
sbb
bndstx
cld
inc
or
jle
dec
lock
je
lcall
lds
pop
jecxz
sbb
ljmp
fisubrl
and
and
lret
dec
adc
add
mov
or
pushf
cs
iret
cmp
mov
jne
out
sbb
jae
fs
fs
xchg
pop
test
mov
dec
mov
into
loope
sahf
xor
lret
adc
cmp
aas
mov
jle
lods
icebp
rclb
lods
mov
stos
jbe
cmc
xor
mov
stc
dec
and
out
mov
pop
push
in
aam
or
adcl
mov
jno
lret
pop
packuswb
nop
enter
jno
and
inc
adc
lahf
and
dec
pop
or
pop
mov
loope
push
pop
clc
and
sbb
or
mov
dec
push
fisubs
cmp
push
xchg
lcall
xchg
lds
dec
insb
jo
outsb
cmp
inc
jp
push
dec
mov
shl
jl
insl
inc
test
shll
shlb
mov
stc
or
lret
cli
push
mov
pop
cmpsl
insb
jle
dec
test
stos
add
sub
and
lods
lods
fsubl
std
insl
push
scas
and
pop
adc
rcrl
cmpsb
mov
jge
jno
or
stos
loopne
pop
push
mov
add
push
mov
jmp
call
jno
out
push
lods
repz
pop
push
repz
inc
stc
nop
jb
mov
outsl
jno
fadds
mov
push
shl
into
insb
add
sub
add
inc
mov
je
ret
xchg
iret
retw
hlt
repnz
jns
cmpsl
mov
lods
sti
repnz
cmpsl
xchg
sub
push
jmp
les
pop
jle
call
add
push
cltd
in
inc
lcall
lea
mov
aad
mov
add
or
and
lds
push
std
and
imul
je
mov
in
mov
in
pop
imul
flds
adc
cwtl
das
adc
add
mov
jg
icebp
xchg
cmp
or
cmp
sbb
push
sub
cmpsl
popf
xor
mov
aad
mov
jl
sbb
adc
sbb
jb
sub
mov
mov
pop
arpl
out
mov
das
aam
adc
inc
sbb
mov
mov
dec
jns
andl
paddq
movsb
jmp
inc
pop
lret
dec
scas
js
push
mov
int3
addl
fs
sbb
lcall
push
call
xchg
cmc
mov
ret
sbb
stos
insl
mov
xor
pop
xor
fwait
xchg
jo
jnp
test
xchg
jno
out
movlps
scas
mov
or
incb
aam
ljmp
jae
push
jmp
incl
cmp
sub
xlat
add
mov
std
clc
je
imul
jmp
ss
push
js
pop
ficompl
bound
jp
mov
xchg
xor
add
sbb
xor
xchg
inc
adc
add
mov
insl
dec
mov
jne
insb
scas
push
mov
fdivrp
lahf
sub
cmp
jno
negl
mov
add
mov
arpl
jge
mov
inc
dec
sub
mov
xchg
mov
and
pop
push
arpl
mov
sahf
lret
push
xchg
scas
jle
fsubrp
adc
pop
dec
push
test
add
push
or
outsl
mov
mov
daa
sarl
pop
insb
repnz
and
js
add
sbb
orb
pop
sahf
mov
adc
mov
pusha
inc
xchg
popf
cltd
data16
add
mov
cmc
movsl
adc
xchg
push
lods
xchg
divl
dec
sub
pop
js
shl
mov
ret
sbb
test
in
popa
add
movsb
lea
stc
xchg
scas
sub
fistpll
rclb
xchg
adc
jne
mov
mov
inc
ja,pn
dec
pop
fbld
cwtl
cltd
sub
lock
shl
jo
adc
jae
imul
mov
xor
sub
push
loopne
xchg
sti
adc
jge
fs
xor
movsb
sbb
cmp
stc
jmp
enter
inc
fisubrs
xor
fdivrs
pop
addr16
sbb
dec
mov
dec
push
xchg
inc
movsl
and
mov
or
push
jae
xor
fstps
ljmp
jne
xchg
inc
mov
test
add
sub
clc
xrstors
cltd
mov
push
push
pushf
jp
daa
xor
fidivl
mov
ljmp
jno
fimull
out
ds
adc
cmp
pop
movsb
xor
push
or
adc
or
fistl
repnz
dec
jae
stos
jge
ret
sub
mov
xlat
push
pop
mov
insb
push
ds
cmp
ret
inc
out
fs
scas
enter
mov
ror
xchg
test
das
int3
sub
std
dec
xchg
pop
dec
push
cmp
pop
scas
rcrb
add
lds
xchg
sub
lea
sysenter
mov
nop
cli
iret
gs
push
lcall
in
jg
jae
mov
cmc
mov
es
aaa
into
jo
mov
orb
hlt
mov
call
pop
mov
inc
mov
xchg
daa
addr16
sbb
dec
mov
arpl
sbb
test
xchg
rcl
push
mov
jne
scas
sub
xchg
lods
pop
jnp
sbb
dec
or
outsl
daa
sub
test
ret
cmpsl
push
popf
xlat
rolb
jg
and
mov
mov
lret
repnz
mov
mov
add
jo
sbb
push
gs
jns
and
pop
add
std
popf
xor
sub
push
vunpcklps
inc
mov
das
cmp
push
cli
sub
dec
add
mov
xlat
adc
xor
mov
movsl
and
cld
push
incb
push
popa
lock
inc
jno
cs
loopne
mov
imul
out
push
fs
inc
fistpl
fwait
jae
mov
adc
pop
adc
cmp
shrl
dec
push
sbb
ljmp
pop
mov
das
pop
fcmovnbe
lea
int3
std
sbb
out
add
and
in
push
mov
out
idivl
xchg
add
fwait
shll
and
sbbb
push
mov
sbb
in
pop
dec
pop
into
lcall
mov
icebp
inc
inc
rcll
cli
andl
inc
fs
cltd
aam
mov
hlt
jo
rclb
aaa
mov
dec
movl
cmp
in
adcb
ret
xor
jo
lods
fsts
cmpsl
jmp
or
fisubs
adc
add
mov
dec
fbstp
pop
daa
ret
push
xor
pop
push
out
lea
jne
rclb
outsl
test
mulb
lcall
test
cltd
fnsave
and
fwait
xor
out
inc
jmp
scas
xor
stc
sbb
adc
lods
xchg
test
nop
das
mov
bound
fisttpll
cs
fld1
loopne
sbb
push
ss
xchg
jo
mov
insl
negl
and
inc
mov
lahf
pop
add
fdivr
push
in
in
out
cmp
dec
cmc
adc
mov
and
sub
and
aad
push
jl
notl
mov
or
andb
sbb
lock
or
push
leave
xchg
pop
ljmp
arpl
fistps
adc
xor
xchg
aaa
mov
adc
and
push
popf
test
sarb
sub
scas
inc
or
jo
int
int3
sub
push
cmpps
pop
test
or
cltd
adc
xor
pop
addr16
icebp
adcb
add
add
pop
int3
cld
cmp
andb
sbb
mov
loop
sbb
imul
ficoml
pop
and
test
push
add
mov
mov
mov
fistps
mov
xor
aam
sub
push
adc
mov
jbe
jns
test
loopne
repz
pop
sbb
xor
and
js
lods
sub
jnp
inc
shr
jp
out
cltd
test
sbb
jne
pop
mov
stc
jl
push
mov
mov
push
sbb
ss
jb
mov
scas
push
stc
or
cld
and
popf
inc
into
or
mov
lods
aas
out
test
mov
xchg
mov
fistpl
rcrl
lods
loop
pop
and
xor
jo
test
popa
aas
mov
fucomi
sub
mov
out
pushf
and
call
jb
mov
dec
sbb
mov
sar
fninit
decb
lds
xor
jl
loop
test
cmpsl
mov
pop
jle
add
mov
in
xchg
jp
in
scas
add
pop
mull
clc
xor
dec
inc
inc
enter
jp
repnz
or
jmp
dec
out
dec
test
inc
cmpsb
mull
mov
mov
std
jo
ss
push
push
lods
repz
jae
xor
pop
std
je
sahf
inc
inc
addb
ja
das
mov
fmuls
sub
sarl
push
sbb
xchg
lds
outsb
lahf
sahf
xor
dec
or
sarl
rcrl
outsb
push
je
adc
add
in
sti
mov
aas
jmp
and
arpl
cli
push
or
adc
pusha
push
ffreep
pop
test
adc
mov
leave
sbb
or
aas
push
dec
out
lahf
pushf
xlat
das
or
push
sub
lea
ror
adc
adc
sub
pop
push
stc
aaa
lea
sbb
cmp
add
sub
aaa
push
push
dec
sbb
cmpsb
unpcklps
xchg
adc
adc
das
in
pop
sbb
or
test
push
and
xchg
sub
mov
shl
stos
xchg
jns
leave
sarl
in
and
inc
je
pop
sub
mov
mov
and
lea
mov
fists
fwait
mov
push
lcall
or
in
scas
test
and
or
or
loopne
cmpsb
pop
jo
inc
call
mov
jmp
fisttps
pop
hlt
sub
stc
nop
cmp
lcall
push
add
popa
jne
in
out
les
jg
out
pop
sbb
jne
nop
inc
mov
std
out
add
or
out
testl
bound
sbb
ds
and
mov
repnz
jg
dec
das
jg
jle
sub
sbb
adc
lret
jbe
test
adc
das
std
dec
xchg
mov
les
cmp
inc
fdivrl
xchg
add
in
cli
lahf
test
fstcw
imull
test
add
notl
aaa
sarb
mov
sub
or
movsb
jae
orl
mov
int
xchg
cmp
mov
js
push
cs
inc
sbb
in
gs
mov
sub
inc
xlat
lods
sbb
divb
orb
push
arpl
fnsave
lret
inc
mov
lock
xor
lret
outsl
cmp
mov
hlt
push
add
jnp
enter
adc
daa
js
inc
faddl
fs
ljmp
lea
or
mov
subb
jb
cwtl
sub
nop
add
dec
mov
dec
adc
pop
inc
outsb
mov
mov
mov
andb
fistl
pop
leave
cld
test
jae
push
mov
stos
pop
sub
jecxz
jge
ss
out
sar
dec
out
dec
dec
sbb
outsb
dec
sbb
xchg
pop
dec
inc
dec
cmp
fsubrp
lahf
add
push
fdiv
mov
jne
add
cmp
in
adc
les
andl
movsl
adc
xor
push
ds
imul
pop
mov
jns
mov
xor
add
inc
pop
or
cli
adc
imul
jle
arpl
fistps
mov
js
cmp
test
jl
sar
pop
jp
add
fcmovne
mov
and
lahf
fmuls
push
rorl
pop
xor
inc
sbb
lret
jne
les
notl
jo
pop
outsb
shll
cmpsb
data16
fisttps
pushf
loop
lahf
push
cmp
jle
cmp
dec
cmp
stc
xchg
pop
adc
add
inc
or
adc
mov
push
call
outsl
sub
add
mov
dec
dec
push
jg
cmp
or
imul
xchg
inc
dec
lods
jmp
fildll
pusha
lahf
push
add
xor
xchg
sbb
sahf
std
bnd
jae
cmpsl
mov
fnstenv
repz
push
fs
stc
test
adc
leave
or
xchg
add
mov
mov
ret
mov
xlat
outsb
dec
loope
jo
fwait
and
push
cmp
shl
das
orb
fbstp
leave
pop
int
cmp
insb
je
sbb
or
out
insl
dec
sub
pushf
sarl
in
subl
int3
movsb
xchg
inc
or
js
and
leave
in
stos
cltd
gs
notl
ds
sbb
adc
pop
adcl
mov
jg
mov
iret
fxch
add
pushf
adc
and
call
or
adc
outsb
pop
pop
sbb
lcall
lea
hlt
test
notl
ret
mov
fs
jbe
aaa
xor
rorb
add
cmpsb
or
sub
lock
in
js
dec
stos
xchg
in
leave
inc
aad
je
cmp
sbb
dec
sbb
push
out
das
sbb
in
imul
into
nop
xchg
and
outsl
jo
sbbb
mov
and
push
in
inc
rolb
insl
mov
push
leave
into
adc
xorb
test
js
jmp
fucomp
shll
shl
jno
out
dec
push
xor
loope
in
out
xor
iret
mov
push
jmp
mov
cmp
lcall
xchg
xor
rolb
das
enter
mov
dec
cmp
xlat
loop
aad
in
sub
push
xchg
ja
test
dec
pop
test
or
pop
cmc
dec
jp
rcl
das
rol
jl
sub
or
adc
iret
test
sbb
ss
lcall
push
clc
fcmovbe
in
xor
mov
lret
jp
cmc
push
dec
lret
jg
dec
xlat
push
ljmp
xchg
jmp
roll
les
insb
faddl
lds
sbbb
dec
jecxz
inc
cltd
xor
fwait
jbe
xchg
cmp
pop
inc
fcomps
dec
add
negb
in
lahf
jbe
adcl
mov
xchg
pop
addr16
jmp
jb
lahf
inc
jmp
mov
andb
pop
pusha
and
out
adc
decl
mov
add
jno
push
xor
ret
adc
xor
jnp
fidivl
push
in
sbb
jp
sbb
dec
add
fs
addl
inc
pop
xchg
ss
imul
cwtl
in
cmc
add
inc
inc
push
fcoml
sbb
or
sub
or
sbbb
lcall
lcall
add
push
push
add
ljmp
test
std
sub
mov
push
adc
adc
fwait
add
pop
jns
jge
cld
test
lret
cld
pop
and
xor
lfs
adc
jl
mov
or
loope
xor
inc
pop
and
mov
test
dec
insb
push
mov
ror
jg
bound
xor
outsb
mov
push
inc
xlat
pop
cltd
in
inc
xor
xchg
sbbl
and
jecxz
ficoml
dec
xchg
add
cli
cmp
inc
call
idiv
mov
cs
mov
push
rolb
cmp
pusha
arpl
jbe
cmp
adc
adc
jecxz
dec
and
xor
cmp
out
inc
lret
add
and
sar
mov
negl
ds
leave
test
push
das
lea
mov
jb
add
mov
mul
out
mov
call
subb
loopnew
push
lret
inc
cld
sar
mov
push
xor
and
push
cmp
pop
dec
cmp
jae
pop
call
icebp
ss
jg
xchg
arpl
adc
pop
loop
outsl
mov
add
push
in
pushf
daa
or
mov
lods
mov
pop
push
daa
sub
add
ret
and
xchg
cmp
mov
sahf
pop
imul
ds
inc
adc
aaa
push
push
ds
bound
daa
and
adc
enter
xchg
fstl
ret
aam
test
or
jbe
jmp
rcll
and
fisubs
jne
fstps
iret
arpl
loop
push
fadds
shll
dec
iret
or
xchg
pop
inc
loope
adc
dec
outsl
int3
jbe
out
insb
test
jge
orl
fsubl
mov
xor
sub
xchg
pop
rorl
fisttpl
adc
ds
adc
pop
or
mov
xchg
es
lock
mov
xor
and
sbb
cwtl
into
xor
sub
fmul
sahf
test
je
inc
jmp
mov
sti
es
outsb
mov
xor
sub
rcrl
xlat
fdivrs
loope
push
jg
push
icebp
mov
jno
sahf
mov
lods
stos
insl
or
pop
addr16
mov
and
loopne
adc
mov
cltd
push
inc
hlt
cmp
mov
and
mov
iret
and
test
mov
xor
jg
xor
xchg
adc
push
or
lods
cld
mov
jne
mov
add
pop
test
out
stos
cmp
fstps
fcoml
leave
inc
push
add
data16
testb
sti
add
mov
mov
lods
xor
xor
enter
outsl
sti
jmp
adc
dec
jnp
dec
loopne
mov
push
out
ljmp
inc
movsl
and
dec
add
cmc
jmp
xchg
icebp
mov
dec
loop
jge
insb
into
push
int3
mov
lods
out
pop
mov
sbb
jp
sbb
stos
push
lcall
and
and
or
cltd
pop
add
aam
add
and
rorb
dec
pop
xor
not
dec
jg
ljmp
ror
pop
push
sub
xor
sbb
pop
rcrl
cmp
cmp
xchg
test
ret
hlt
push
outsb
sti
push
loope
xchg
test
in
mov
adc
fisttpll
adc
divl
ss
pop
hlt
inc
rcrb
jl
lahf
sbb
mov
sub
mov
icebp
mov
pop
dec
mov
aad
mov
or
and
ret
addl
xor
cmc
out
dec
sub
sbb
rcrb
dec
leave
mov
sbb
dec
dec
lods
fisubrl
outsb
adc
xorl
mov
icebp
rcrb
push
gs
inc
cmp
inc
cli
shll
imul
cmpl
or
sub
push
pop
jg
int
fadd
jl
cltd
test
popa
mov
aaa
mov
jae
loope
ss
repz
setno
adcb
rcrl
mov
sbb
test
mov
pushf
sub
push
sub
notb
mov
popf
lods
mov
jb
pushf
imul
loope
adc
mov
out
mov
pop
sub
sbb
add
in
mov
sub
mov
mov
sbb
mov
add
cld
or
sub
sbb
push
mov
push
add
push
pushf
popf
sbbb
loop
sti
xchg
xor
xchg
xor
fbstp
fucom
cmp
out
fidivl
insb
ss
pop
imul
add
jb
pop
xchg
mov
sbb
mov
lods
popl
push
adc
add
daa
xchg
dec
lea
fildl
stc
inc
sbb
ja
cmpsl
sbb
sbb
test
pop
sub
in
out
not
cmp
mov
enter
jo
pop
out
jbe
push
mov
repnz
insl
xchg
mov
jnp
ljmp
in
popf
stc
in
adc
push
sahf
jmp
or
arpl
xchg
and
adc
es
insb
enter
dec
dec
scas
out
popf
nop
push
rol
cwtl
sub
and
repz
push
fsubr
jb
jne,pn
std
pop
xchg
into
in
clc
xor
pop
rcr
inc
inc
mov
lret
popa
sbb
mov
or
lret
push
mov
and
ret
int3
and
outsl
sbbl
jb
pop
ret
leave
mov
dec
or
jne
xchg
sub
jge
push
cli
pop
sbb
in
xlat
jno
sbb
cmc
push
fstps
jnp
repz
mov
popf
or
test
nop
shr
adc
repz
push
push
pusha
lock
stc
test
xchg
mov
inc
fsts
test
flds
rcrb
and
cli
push
in
ret
lds
and
mov
or
inc
dec
aam
call
cmp
fisubrl
in
xchg
imul
pop
mov
scas
mov
dec
call
loopne
les
mov
cmpsb
fsubp
jge
and
lds
inc
mov
in
push
pushf
push
icebp
adc
rorl
lods
mov
orb
mov
xor
mov
jg
dec
mov
pop
imul
adc
dec
add
jmp
pop
lods
in
out
pop
push
inc
inc
ret
rcrb
inc
divl
lods
mov
xchg
ret
aam
jecxz
xor
cmc
ret
mov
int
and
xchg
es
arpl
ficoml
pop
add
xor
and
or
pop
icebp
mov
sbb
pop
add
cmp
pop
mov
inc
mov
rol
gs
jmp
xchg
sbb
mov
xor
push
stos
stc
xor
sbb
push
cmp
cmpsb
jg
mov
inc
test
popa
xchg
xchg
int3
scas
add
jo
push
imul
jp
jmp
es
xor
outsl
jg
push
icebp
jge
cmp
xchg
push
ja
cmp
imul
mov
mov
in
sbb
scas
jnp
and
scas
jmp
in
je
mov
sti
inc
push
lea
stos
jmp
push
fnstenv
add
xor
xor
aas
xor
ljmp
test
mov
stos
nop
dec
cs
mov
lret
sbb
mov
or
insl
xor
push
push
movsb
or
pop
push
mulb
or
leave
mov
je
jnp
subb
add
insb
incb
insb
mov
cmp
push
push
adc
xlat
push
inc
jno
test
mov
sbb
sbb
inc
lret
cmpl
jo
sub
push
std
sub
gs
jno
ljmp
pop
xchg
or
test
scas
sbb
scas
ficoms
mov
sbb
sti
jns
add
enter
push
mov
idivl
mov
fwait
rcrb
sub
stos
subl
dec
aaa
int3
jnp
add
or
out
add
add
cwtd
dec
into
das
pushf
or
add
aam
out
jp
cmc
scas
inc
jecxz
jne
inc
popa
inc
sbb
bound
sbb
ds
jp
and
cmp
loop
loope
mov
pushf
jnp
insl
test
lds
mov
adc
mov
gs
into
xchg
clc
mov
adc
mov
ret
outsl
inc
scas
jb
or
mov
insb
sar
sub
mov
add
mov
add
mov
jb
addr16
cwtl
dec
push
insl
jne
mov
lock
cli
rcrl
ret
sub
pop
lods
and
les
sub
jmp
sbb
mov
into
dec
mov
dec
mov
fdivp
mov
mov
cltd
vpand
jmp
scas
or
inc
stc
cs
fcompl
jb
cld
pop
cli
xchg
mov
jmp
push
mov
mov
js
es
cwtl
inc
lods
je
stos
es
sbb
imul
push
adc
bound
imul
push
jl
mov
lods
mov
ret
add
data16
push
ja
or
push
jne
sub
mov
mov
in
rcll
jle
push
leave
dec
mov
sbb
and
push
sub
arpl
fisubl
popa
jnp
cmpsb
xchg
call
push
inc
imul
jp
test
clc
ret
outsb
sub
imul
cmp
das
cmp
lahf
xor
lock
dec
lea
cmp
out
lcall
nop
filds
leave
or
or
insb
bound
mov
push
rolb
fwait
push
aas
int
cmpsb
jge
pop
mov
mov
add
jnp
jb
pop
movsb
cs
lahf
cmpsl
pop
cwtl
and
shl
orl
xor
arpl
loopne
push
pusha
out
testb
jg
mov
xchg
aam
and
pop
push
push
arpl
repnz
xchg
aad
push
cmp
push
mov
rorb
jo
ret
mov
xlat
iret
pop
inc
adc
and
xchg
mov
ret
sbb
cmp
imul
pop
and
add
stos
in
xor
ss
int
push
dec
pop
mov
xchg
add
jno
sbb
jb
jge
xor
in
flds
ljmp
jbe
lcall
jmp
aaa
in
mov
dec
imul
push
sub
aas
xchg
xor
sbb
mov
mov
mov
inc
fldt
repz
fwait
bound
lds
xchg
adc
jmp
ficoms
test
std
data16
and
fwait
inc
adc
xchg
dec
enter
adc
test
out
jns
dec
pop
loopne
pop
in
popf
mov
mov
pop
push
lods
push
or
lods
mov
movsb
push
rcl
pop
cmpsb
pop
adc
outsb
imul
jae
mov
inc
inc
sbb
test
cli
outsb
fisttpll
lret
cwtl
lods
hlt
sbb
mov
pop
xchg
inc
scas
push
cmc
mov
dec
sbb
dec
jmp
sub
sahf
outsl
mov
test
and
and
xor
mov
rcll
daa
ret
dec
push
fisttpll
cs
sbb
dec
pusha
or
push
sbb
pop
shrb
xchg
mov
inc
mov
push
popf
cmp
cmpb
mov
add
mov
fildl
subl
sbb
mov
xor
outsl
jae
pop
movsl
sbb
mov
out
cmp
pop
dec
and
or
ds
or
lret
xlat
dec
outsl
fwait
ret
pop
test
sub
xor
out
sub
bound
popa
cmp
push
in
adc
incl
lods
jno
push
pushf
adc
fwait
mov
aad
add
jp
data16
test
cmc
rclb
sti
ret
jle
andl
inc
sbb
mov
ret
clc
jne
outsl
js
xor
cmp
inc
outsl
add
push
mov
rolb
lods
cmp
jb
loope
cmp
sub
mov
xchg
nop
xorl
outsb
call
fwait
jns
hlt
std
std
sub
outsl
loope
test
add
add
or
mov
aaa
repnz
adc
pop
inc
pop
nop
xor
scas
sbb
aaa
add
in
jnp
or
push
pushf
test
movd
ret
imul
mov
dec
lea
testb
cmp
arpl
xchg
mov
xchg
pushf
cli
cltd
popf
mov
and
nop
bound
push
sub
xchg
inc
fcompl
test
fdivrs
arpl
popa
push
std
insl
push
jbe
jno
pop
xchg
lea
mov
jns
repz
xchg
or
mov
aaa
scas
movsl
icebp
das
ljmp
adc
push
cwtl
addr16
push
fldenv
pop
push
in
dec
push
sub
push
call
fadds
add
test
fstps
and
pop
pop
cmp
insl
dec
push
xchg
cwtl
mov
xchg
mov
mov
push
js
pop
cmp
inc
dec
dec
ja
popa
mov
pop
aaa
aas
push
jb
mov
daa
jp
jbe
dec
imul
dec
add
xor
test
pusha
cmp
lods
les
push
popf
fstl
mov
mov
rorl
mov
cmp
add
dec
pop
lret
mov
movsb
and
cld
call
cmp
arpl
aad
sar
fidivrs
dec
hlt
add
es
mov
cmc
or
ds
adc
sbb
mov
xchg
mov
int3
xchg
sub
cmc
push
rorl
dec
jecxz
rolb
ds
push
fldl
jns
sbb
sarl
clc
cwtl
dec
mov
sbb
ljmp
out
xchg
lods
pusha
jo
int
add
inc
das
cmp
jbe
push
pushf
idiv
arpl
cwtl
or
push
mov
and
xlat
outsl
sub
cmp
sub
pop
xorb
arpl
pop
notb
imul
test
lods
shr
xchg
inc
mov
and
mov
xor
inc
jle
adc
sub
fwait
jne
inc
and
push
pop
aad
mov
jle
lods
sysexit
iret
je
popa
pop
xchg
sbb
pop
sbb
mov
ja
lods
test
call
or
aam
test
dec
arpl
add
test
and
add
and
cli
cmc
repz
insl
push
mov
jo
inc
repnz
or
aad
leave
aaa
adc
stos
ret
inc
mov
cmc
icebp
inc
and
push
cmpsb
arpl
lret
out
inc
call
dec
add
inc
into
data16
imul
bnd
mov
les
aam
jle
test
pop
cli
fwait
leave
lret
mov
sub
sbb
mov
jno
cld
sbb
repz
iret
xor
lods
inc
stc
mov
outsl
push
push
je
xchg
sbb
mov
mov
sub
dec
add
cmpb
movsb
lods
imul
in
sub
stos
mov
fstps
aas
and
movsb
add
xor
clc
popf
ss
fsts
mov
xor
lods
mov
jl
pop
xor
sahf
mov
lret
fidivrl
icebp
scas
or
and
sarb
push
or
and
cs
leave
mov
filds
bound
mov
outsb
pop
sahf
xor
jg
mov
bound
sarl
or
arpl
mov
insl
cld
push
xor
and
xor
xchg
mov
jmp
pop
mov
add
pushf
shl
cld
dec
pop
cs
jnp
mov
cmpb
mov
pop
jge
aaa
packuswb
xchg
mov
adc
push
xor
les
addr16
je
rclb
fisubs
dec
cld
xlat
xlat
mov
xchg
shrb
bt
leave
scas
pop
mov
inc
push
or
out
loopne
aam
cmpsb
mov
or
stos
out
push
fildl
or
mov
outsl
sub
pop
jecxz
dec
inc
fiaddl
mov
jl
loopne
cltd
sbb
mov
xor
fs
pusha
cmp
lods
dec
test
or
sbb
popf
lcall
movsb
subb
inc
popa
mov
adc
push
loope
mov
fs
inc
and
jae
mov
mov
mov
dec
mov
frstor
cmp
lock
push
adc
xor
fnstcw
stos
in
push
xor
enter
pop
cmp
xchg
cmp
jge
cwtl
xor
pop
and
pop
push
cmp
mov
xchg
add
addr16
xchg
xchg
cli
sub
xchg
xchg
jp
mov
jo
movsl
adc
ret
dec
mov
cs
test
mov
or
xlat
pop
sbb
inc
adc
aas
pusha
jae
ss
je
into
xor
xchg
sbb
lock
loope
jle
push
cmp
fisubs
jl
mov
adc
sbb
es
jns
mov
mov
ds
aas
mov
dec
and
call
sbb
jbe
cmpsb
cmpsb
jns
add
add
iret
fbstp
cwtl
imulb
lock
adc
inc
sbb
add
cmp
inc
stos
xor
lahf
sbb
sbb
sub
sub
add
xacquire
arpl
fidivrl
fs
push
xor
mov
daa
mov
and
test
xchg
jge
int3
sub
in
arpl
xchg
cmp
imul
into
call
xorb
pushf
pop
outsl
popf
xchg
test
push
add
or
js
pushf
pop
mov
pop
and
push
jb
lret
or
mov
lret
fwait
lret
cld
mov
xlat
cmp
xor
fiadds
scas
xor
leave
stc
dec
test
mov
fucomp
add
outsl
push
jnp
push
popf
iret
and
arpl
in
mov
and
jecxz
call
push
pushf
test
cmp
xor
in
sti
lods
pop
xchg
jae
shlb
xchg
ret
jno
and
mov
pop
enter
out
data16
sub
hlt
imul
or
jl
lods
es
pop
stc
sbb
into
inc
cmpsb
push
jmp
add
xor
insb
popf
sarb
adc
cmpsb
push
jae
lret
jae
sub
xor
pop
rcr
rol
jnp
push
sbb
adc
ljmp
ljmp
lock
lds
outsb
fnsave
js
push
xchg
pop
repz
xorl
or
push
cmp
sbb
push
add
les
mov
fstpl
ss
nop
mov
sbb
out
push
sbb
bound
dec
cmp
jne
cmp
jg
ja
jb
push
mov
add
cmp
jmp
dec
inc
test
jns
xor
mov
adc
cmpsb
insl
xchg
mov
jns
jo
mov
pop
or
sarl
scas
unpcklps
and
push
xchg
imul
xlat
adc
std
inc
clc
jge
mov
or
fdiv
cmp
xor
cmp
cmpsb
ss
ds
in
xor
jecxz
cmp
negb
push
cmp
call
je
aas
les
loopne
xchg
rcll
pop
dec
out
add
xchg
mov
fcomps
push
pop
enter
and
or
es
inc
fidivrs
pop
cmp
popf
stc
popf
xchg
jbe
int3
mov
sarl
or
fs
rcrl
ret
xchg
adc
insl
leave
xchg
ds
mov
fldt
inc
and
dec
pop
xor
jo
pushf
jnp
jge
jg
stos
mov
pop
mov
add
je
mov
in
arpl
clc
fbstp
mov
push
lcall
or
loop
pushf
adc
push
out
mov
push
enter
jecxz
fidivrl
xchg
adc
add
out
orl
dec
and
cmp
andb
push
sub
inc
sti
faddp
lods
insb
jns
pop
push
call
fiadds
sahf
iret
pop
mov
pop
adc
in
add
pop
mov
imul
add
incb
in
cmpsl
lret
aaa
or
cmp
xchg
pop
mov
mov
imul
or
popf
inc
fmulp
sub
ja
test
test
inc
out
xor
pop
lcall
movsb
pushf
jmp
pop
lret
lods
mov
and
movsl
mov
imul
mov
sbb
aaa
xchg
test
mov
cmp
leave
or
mov
and
insb
testl
test
test
cld
jecxz
push
mov
scas
xchg
sbb
jb
dec
pushf
jo
push
addr16
jbe
push
repz
loope
sbb
mov
clc
jo
xchg
pop
or
pop
aaa
notl
pop
mov
sbb
dec
fwait
mov
shrb
xchg
mov
xchg
std
pop
sbb
test
rcll
stos
push
add
enter
jecxz
test
fimull
cwtl
bound
shl
inc
les
leave
int
xlat
shl
cmp
jle
mov
or
jb
and
mov
and
insb
mov
push
and
push
out
pop
jp
ficompl
and
sbb
insb
lret
ja
movsl
cmp
test
mov
jb
insb
cmp
pop
ret
insl
cmp
mov
dec
lds
push
sbb
movsl
inc
pop
call
mov
hlt
push
fiadds
ss
and
mov
xchg
in
rorl
jo
test
stos
mov
hlt
jle
jg
sub
sub
mov
test
inc
mov
xor
dec
test
pop
xchg
repnz
mov
int3
das
sub
push
fstpl
xchg
push
sbb
loope
and
mov
push
aas
lock
lahf
jb
mov
outsb
cmpsb
jp
test
aam
fs
mov
mov
xor
and
iret
cmpsb
add
movsb
inc
fs
hlt
mov
xor
inc
addr16
fwait
sbb
adc
int3
fucomip
push
pop
sbb
inc
inc
loope
mov
icebp
jae
cmp
bound
or
cmp
mov
cwtl
test
adc
jae
in
xor
enter
push
xor
inc
mov
and
mov
fwait
mov
adc
dec
xor
insl
or
pop
dec
pop
mov
movb
cld
lahf
test
mov
xor
pop
xchg
out
movsl
cmp
pop
leave
sarl
add
add
test
sbb
inc
add
out
push
movsl
jmp
inc
stos
call
mov
and
push
xor
test
cmp
xchg
mov
mov
stos
ss
sbb
lret
mov
pushf
into
mov
lret
cmpsl
outsl
movsb
nop
std
push
ja
mov
adcl
mov
sub
push
bnd
lock
repz
cli
cmp
jb
jae
lea
rcrb
andb
sub
pop
lods
shlb
sbb
shll
movsb
xchg
arpl
adc
faddp
mov
xchg
xor
or
fmull
sahf
movsl
lds
sub
add
test
leave
enter
mov
cli
add
jb
jp
loop
stos
adc
add
xor
sti
and
negl
mov
ret
mov
mov
xchg
add
lcall
in
ds
xor
push
movsl
cmp
jbe
cwtl
cs
testl
mov
in
push
js
lahf
inc
imul
lods
mov
es
outsl
push
iret
adc
lret
shll
push
mov
je
adc
std
and
ret
aas
push
jl
xchg
jl
sahf
mov
jle
push
es
push
xchg
xlat
mov
fcmovnb
jmp
mov
js
outsl
mov
outsb
inc
mov
or
fidivl
sahf
rol
xchg
push
fcoms
int
add
jb
xor
es
sti
push
nop
cmp
xlat
jp
inc
jb
cltd
lret
inc
stos
mov
ss
addl
mov
cmp
call
leave
imul
rcr
shl
mov
push
in
enter
cmp
sub
and
jl
stc
test
rcrb
and
cmpsb
sub
sub
cmp
gs
xor
arpl
dec
dec
cmp
imul
fidivs
movsl
push
dec
cmpsb
lods
jecxz
xchg
mov
repz
xchg
jns
adc
adc
das
mov
std
fmull
fsts
imul
cmpsl
ret
xor
in
push
jmp
std
lock
mov
jecxz
cmpsl
adc
fdivs
mov
dec
jns
fiaddl
mov
mov
stos
xor
fldt
lea
loopne
mov
ss
pop
xor
dec
insl
xchg
sbb
pop
fdivl
dec
push
xor
js
sbb
mov
dec
xlat
push
sbb
xchg
das
or
test
scas
leave
insl
jge
scas
lds
loop
pop
or
insb
or
sbb
clc
mov
outsl
push
jl
jnp
push
dec
mov
dec
ss
fidivrs
or
mov
ret
sub
imul
scas
jno
sbb
dec
mov
mov
ss
lret
bound
and
cwtl
push
inc
in
test
loop
inc
pop
lock
hlt
aas
les
les
xchg
pop
push
pop
mov
mov
xchg
test
test
jns
sbb
lret
mov
test
imul
pusha
xor
gs
test
mov
sahf
cmpsl
pop
gs
xchg
jnp
call
mov
cmp
dec
ds
aad
in
stc
or
sbbb
sub
js
fmuls
into
loop
rcrb
xchg
mov
scas
lds
inc
loop
cs
in
cmp
push
mov
ret
sbbl
decb
mov
push
xchg
popaw
mov
xor
jae
js
test
mov
insl
inc
pop
and
sbb
arpl
cmp
add
ret
xor
push
iret
jecxz
repz
push
mov
dec
leave
pop
push
aaa
es
push
int3
into
call
les
aaa
into
xlat
dec
add
sub
sbb
cmp
ljmp
cmp
das
push
xorb
and
add
or
fwait
dec
ret
loopne
addr16
call
out
jnp
lods
or
mov
pop
movsb
test
int3
jo
cltd
pop
push
xchg
and
jno
jae
dec
outsb
outsb
cmp
push
ss
dec
sahf
sbb
ds
jl
test
mov
cmp
xor
stos
cs
cmpl
sarb
mov
stos
xor
cwtl
outsl
std
adc
lea
ja
test
xchg
sbb
in
pusha
enter
pop
test
pop
imull
into
das
addr16
pop
pop
xchg
in
jae
imul
imul
xor
or
movsb
repz
das
arpl
and
call
jno
cli
lret
fildll
lods
jb
js
icebp
pushf
xor
rcrl
bound
incl
sub
lret
xlat
cmp
cmp
cmp
xchg
xor
xchg
lds
mov
xor
lock
cmp
clc
xchg
adc
mov
out
subb
mov
dec
aam
and
mov
daa
dec
loope
clc
dec
xchg
jb,pn
cmpsl
sub
mov
imul
es
add
vandnps
hlt
shll
aas
or
rclb
mov
add
call
or
pop
mov
cli
mov
mov
call
jns
xor
lcall
mov
xor
fstpt
mov
sbb
pop
xchg
sub
xchg
fnstenv
add
sbb
je
imull
mov
fcmove
inc
icebp
pop
jl
pop
scas
jns
aad
aaa
loop
xchg
test
out
les
cli
sub
adc
pop
pusha
outsl
sub
fistps
lret
push
cmp
sub
mov
ja
inc
jne
xor
push
jmp
inc
add
xor
js
xchg
xor
bound
pop
in
mov
in
mov
or
sbb
aad
cmp
add
mov
mov
loop,pn
pushf
shlb
das
loopne
add
mov
jl
pop
iret
mov
lcall
jl
outsl
push
sub
cmpsl
push
mov
mov
cmp
gs
call
mov
js
mov
inc
lods
adc
cs
popa
aas
rclb
adcl
mov
mov
add
inc
push
cli
fildl
xchg
sbbl
fwait
scas
insl
jg
out
dec
mov
cmp
pusha
lods
jo
cmp
scas
add
lret
fsubrs
test
in
push
testl
loop
mov
popa
push
lahf
xchg
lcall
mov
popf
mov
ljmp
ljmp
and
jns
sbb
xchg
adc
jmp
outsb
xchg
in
mov
out
xlat
mov
ss
imul
sbb
push
or
mov
mov
popf
aam
loopne
aaa
lods
inc
push
mov
mov
loopne
inc
mov
and
fstpl
gs
adc
imul
sbb
cmp
sbb
sub
mov
push
dec
movsl
sbb
cli
ss
xchg
in
jge
mov
mov
sub
push
call
sub
jnp
sbb
xchg
mov
cmp
scas
jmp
jmp
jne
cwtl
lods
mov
addb
cli
mov
test
pop
outsb
push
jp
and
pop
imulb
mov
aam
ds
or
jno
mov
jle
ret
lods
in
ret
int3
xchg
stos
loopne
dec
movsl
loopne
xor
mov
push
adcb
fwait
xor
call
scas
cs
xchg
lea
mov
insl
sbb
jae
add
xchg
lods
mov
and
into
sbb
xchg
pop
mov
mov
divb
inc
fdivrl
dec
mov
cltd
arpl
mov
ds
inc
popl
fsubrl
lods
es
mov
xor
pop
mov
mov
pop
jno
ljmp
push
jbe
subb
dec
xchg
popa
test
dec
adc
fistps
jae
cmp
in
xor
sub
test
in
test
rsqrtps
movsl
jge
stc
mov
push
xor
leave
mov
nop
xchg
sub
std
pushl
fwait
mov
mov
pop
les
mov
insb
cmp
iret
pop
les
aaa
push
cld
dec
push
jg
push
jp
movsb
mov
or
jne
mov
out
mov
mov
mov
mov
xchg
xchg
lret
xchg
in
pop
add
sarb
push
popa
push
xchg
add
and
mov
mov
jbe
sub
in
mov
mull
xlat
mov
jnp
data16
inc
lea
pop
adc
in
cmp
fadd
movsl
test
lcall
and
xor
es
push
jl
xchg
xchg
push
adc
insb
cmp
fs
ret
rcr
pop
fidivrs
scas
stc
ss
cmp
std
dec
int3
mov
pop
xchg
sbb
xchg
out
lea
jmp
lods
add
ja
pop
pusha
test
cwtl
add
int3
leave
mov
loop
sub
jo
mov
and
iret
xchg
loop
ret
out
push
lods
fcoml
cs
xor
add
fldenv
xor
fldenv
je
adc
inc
out
stc
sti
or
js
call
lds
in
jno
notb
mov
jle
xchg
pop
dec
pop
scas
shll
addr16
ljmp
push
mov
rclb
push
xlat
je
in
test
pminub
and
jecxz
xchg
cwtl
mov
adc
mov
fstpt
inc
adc
cmp
pop
sub
iret
flds
cmpsl
pusha
mov
sub
into
mov
addr16
cltd
ja
mov
fcomps
leave
mov
jbe
outsl
sbb
dec
ds
sub
jne
lock
filds
xchg
shll
addr16
cwtl
fucom
das
adc
jle
pop
sub
add
je
inc
mov
cltd
movsl
jns
fildll
sub
push
xor
inc
clc
out
loopne
call
stc
orl
mov
sub
push
in
jnp
sbb
inc
sahf
xchg
repz
shl
mov
sub
cmp
es
mov
loope
rol
mov
imul
or
inc
stos
rcr
fisubrl
inc
pusha
andps
rorl
push
mov
xchg
xchg
dec
xchg
fucomip
cwtl
orl
or
test
xchg
cmpsb
mov
fcoms
inc
fs
ss
test
pop
shrl
mov
cmp
push
push
mov
pop
dec
int
ret
sbb
shlb
outsb
cltd
pop
jmp
mov
shl
pop
xor
jl
xor
inc
mov
sbb
sarb
sub
aaa
sub
adcl
mov
cmpsl
jns
cmp
fwait
adc
fwait
pop
add
pushf
lock
movsl
or
and
mov
cmp
outsl
imul
cmp
adc
call
cmp
dec
fisttps
push
fcoms
mov
icebp
add
shll
xor
movsl
arpl
testb
les
dec
inc
inc
jmp
inc
inc
pop
pop
and
cmp
add
adc
popa
enter
leave
sbb
int3
mov
imul
dec
add
leave
cmp
inc
xchg
add
xchg
jb
sub
inc
in
cwtl
lds
push
cmp
repnz
pop
not
cmp
test
jl
cmpsb
or
in
xlat
mov
repz
out
aam
jmp
aas
movsl
and
pop
sti
push
lahf
insb
nop
inc
pop
std
push
dec
jecxz
roll
arpl
data16
in
inc
loopne
imul
mov
ret
lret
and
leave
pusha
push
inc
add
imul
lds
jns
outsl
lahf
iret
xchg
mov
in
pusha
jb
mov
in
xchg
and
jb
cmp
pusha
sub
pusha
in
cs
in
inc
add
mov
cs
scas
stc
and
popf
icebp
dec
dec
xchg
scas
sbb
roll
cmovns
scas
imul
adc
mov
mov
adc
xchg
data16
add
sbb
movsb
ljmp
mov
xor
enter
sub
repnz
dec
pop
jg
outsb
sbb
scas
movsl
pop
sub
sub
ds
leave
pusha
into
sbb
mov
lret
and
xchg
rorl
test
xor
js
add
dec
and
dec
inc
pusha
jle
shl
ss
jp
xor
dec
insl
cmp
and
pop
mov
mov
jns
mov
mov
add
inc
jl
dec
scas
popa
mov
xchg
pop
adc
aas
int3
repnz
ret
mov
push
das
loopne
add
loope
loope
adcl
es
mov
jne
dec
fwait
mov
rcr
outsl
add
lcall
ja
aad
iret
scas
rcrl
sbb
dec
pop
aaa
dec
stos
cmp
xor
cmp
sub
lahf
or
lcall
gs
cltd
adc
xchg
jge
cli
or
pop
mov
lock
mov
push
push
add
mov
mov
lcall
inc
xchg
sbb
imul
in
notl
adc
mov
mov
inc
mov
sbbl
das
loop
cmpb
sbb
fcoms
or
push
das
adc
mov
cmpsl
push
mov
adc
aas
cmp
stc
sbb
mov
mov
test
sub
jb
divl
sub
xchg
cmp
add
jg
stc
fadds
dec
push
mov
stos
xchg
inc
xor
jns
mov
jbe
sbb
sarb
rcrl
ret
jp
jns
pop
movsb
in
add
mov
xchg
adcb
clc
inc
sbb
xchg
or
xorl
jp
add
std
inc
sbb
int
test
fimull
inc
sbb
mov
sub
andl
cld
jp
mov
aad
pop
fnsave
push
sbb
jp
jae
pop
jge
lea
sarb
lds
push
jmp
imull
sbb
fcmovnb
jl
and
xor
pop
and
or
inc
cmc
sbb
push
or
inc
mov
je
inc
ficoml
dec
inc
pop
inc
insl
add
out
into
or
arpl
sub
mov
loopne
mov
inc
movsb
mov
mov
dec
stos
xchg
mov
je
mov
lock
fwait
and
filds
dec
jne
mov
adc
sbb
push
push
or
jge
lock
shrd
add
lret
sbb
out
push
jle
inc
push
in
test
jno
mov
int3
pop
cmc
std
jae
jb
and
push
push
stc
jmp
lahf
aas
pushf
imull
adc
adc
stc
push
cltd
xor
sbb
fisubs
xchg
outsb
jl
sub
cmc
vmaskmovdqu
cmpsl
out
adc
sub
push
pop
and
insl
ret
add
lods
inc
push
loop
aas
sti
popf
xor
jnp
jne
jb
sbb
cld
adc
jae
ffreep
shll
insb
pop
rolb
repz
adc
js
inc
aad
inc
sbb
cmpsl
mov
mov
fidivl
push
add
mov
inc
in
out
mov
int
into
movsl
fcoms
iret
adc
pop
ret
inc
mov
add
leave
cmp
imul
or
nop
or
dec
push
repz
push
sbb
push
push
testl
fwait
xor
ja
test
repnz
xchg
jns
mov
xor
out
xor
sahf
lods
inc
cli
mov
mov
xchg
xchg
hlt
movsl
xchg
sub
rcr
jg
lea
sbb
dec
sar
aaa
or
pop
cli
and
mov
loopne
pop
in
cmpsl
pop
push
and
push
fldenv
rclb
lea
mov
cmpsl
adc
xlat
jnp
inc
imul
push
cltd
add
mov
and
jmp
dec
mov
push
es
cmp
cli
es
mov
push
sub
fsubrp
outsb
out
xchg
mov
mov
test
aaa
imul
icebp
in
and
insb
sti
dec
inc
fiaddl
mov
add
dec
xlat
iret
jp
and
cld
addr16
jg
add
mov
bound
xchg
jbe
and
pop
cmp
aam
xchg
sbb
sbb
pop
js
sub
inc
add
orb
pop
add
jae
hlt
push
cmp
mov
push
add
cmpsl
ds
xchg
push
mov
rol
add
call
pop
lea
mov
leave
xchg
adcb
out
sub
sahf
xchg
addl
ds
pop
sahf
xchg
inc
fnstsw
clc
xchg
xlat
jmp
int3
or
es
xchg
xor
sbbl
mov
adc
outsl
je
mov
mov
scas
stos
mov
fbstp
or
lods
mov
lahf
sbb
sbbb
mov
or
jmp
cs
jle
pop
insb
cmp
popa
mov
add
inc
mov
xchg
add
lea
jg
ja
pop
mov
inc
add
add
call
xchg
lret
mov
pop
lock
pop
push
mov
rcrl
shl
or
cmp
jb
insb
mov
shl
andl
aaa
cmp
inc
cmpsl
push
negl
cmpsb
jp
shlb
jnp
fdivrl
xchg
out
dec
mov
push
pop
mov
push
mov
adc
int3
or
rclb
cs
sbb
daa
sbb
dec
push
lahf
mov
pusha
imul
jne
cwtl
lret
xlat
rcr
inc
add
ljmp
jl
les
lods
pop
rolb
mov
cmp
xor
in
sahf
mov
jnp
sbb
add
push
sbb
inc
add
dec
dec
ss
dec
out
dec
movsl
xchg
or
jno
mov
cmpsl
push
lods
addl
in
cmpsb
outsb
adc
bound
sti
jle
ljmp
js
cwtl
push
dec
cs
insb
add
sub
lods
sbbl
loop
mov
std
xchg
test
push
cmpsl
pop
and
sub
lods
mov
sbb
ret
sbb
dec
jg
jns
pop
fisttpl
int3
das
push
jge
out
and
push
push
jbe
addr16
mov
xor
pop
sub
mov
arpl
das
lahf
in
adc
testl
add
flds
fnstcw
xor
add
sbb
ret
iret
mov
pushf
inc
add
loope
pop
imul
or
shll
xor
mov
bound
ljmp
jbe
pop
sbb
inc
pop
mov
jl
imul
ret
jle
mul
imul
hlt
daa
or
add
test
pop
cmpsb
inc
ds
orl
jo
sahf
mov
je
cli
and
xchg
pusha
adc
ljmp
cmp
rcll
and
loopne
jae
mov
iretw
aas
aam
addl
icebp
push
jo
push
call
cmp
inc
stos
push
lret
xchg
iret
int3
mov
or
sti
xor
icebp
dec
mov
test
xchg
out
inc
mov
jno
lea
movsb
repnz
lcall
cmp
jge
enter
das
stos
mov
rcl
cmpsl
fwait
cli
je
pop
test
loop
or
inc
into
insb
pop
xchg
add
xchg
jno
inc
loop
sahf
adc
inc
sarb
imul
xor
rorl
ficoms
cmp
sbb
ret
fistps
jl
loope
sbb
pop
push
jae
sub
jg
testb
lcall
dec
and
stos
cmp
sbb
jp
insb
aas
mov
mov
push
xchg
mov
pop
mov
xchg
insb
cmp
mov
lea
pop
out
stc
sbb
push
cmp
pop
lds
or
jbe
insb
mov
fwait
inc
leave
xchg
and
je
clc
sbb
mov
popf
adc
xchg
jle
movsl
pop
lds
rolb
fistl
scas
cmpsb
adc
iret
inc
in
xor
or
push
adc
out
xchg
sub
add
int
jae
lds
lods
pop
xchg
dec
jecxz
mov
cmc
mov
push
mov
pop
roll
fbstp
or
cmp
lret
jae
xchg
ja
lods
sub
rolb
mov
clc
mov
mov
inc
fnsave
pop
and
adc
call
or
dec
pop
rol
incl
pop
pop
and
jno
inc
xchg
das
mov
bound
sbb
bound
enter
sbbb
out
cld
cli
xchg
sub
test
imull
xor
adc
fucom
xchg
icebp
mov
xor
mov
lcall
jnp
xor
pop
fsubl
mov
lods
push
push
pop
lock
sbbb
add
dec
ljmp
icebp
ffree
pop
iret
add
mov
push
jns
les
jbe
sub
dec
pop
ds
ret
add
mov
cmp
int3
cs
shlb
mov
add
xchg
mov
imull
mov
repz
stos
and
aad
test
shrb
insl
or
sub
lock
or
cmp
jmp
adc
popa
int
popa
fldt
mov
or
mov
mov
fnstenv
jb
dec
mov
pusha
dec
mov
repnz
adc
xchg
aad
dec
test
jns
lcall
mov
sarb
out
push
shlb
jne
jne
mov
mov
ja
dec
and
adc
imul
jp
loope
xor
sarl
jno
clc
xor
and
pop
fldcw
pop
ret
iret
xor
jg
stos
push
push
lret
pop
lret
sbb
data16
mov
inc
pop
ss
imul
push
xor
xor
and
insl
ja
mov
mov
xchg
sub
cmp
pop
lret
push
cmpl
adc
cmp
inc
dec
aaa
jle
testl
jo
les
mov
cmp
lret
jl
std
lahf
or
negb
mov
addl
sub
lahf
ss
pop
imulb
js
pop
jge
jl
sbbb
out
push
sub
ss
into
out
popf
push
jb
mov
xchg
nop
mov
inc
in
sbb
mov
push
mov
mov
jge
out
adc
push
lds
jb
mov
cmp
mov
jecxz
out
les
lods
das
mov
and
xor
bound
scas
mov
pop
mov
mov
sbb
mov
jge
fmull
fsubrs
sub
cmp
icebp
faddl
inc
movsb
leave
mov
cwtl
mov
ds
pop
xchg
lcall
push
cmp
nop
push
mov
push
adc
shrb
push
icebp
lds
mov
adc
sbbl
add
mov
jne
imul
fstl
arpl
push
sub
orl
sbb
imul
push
sub
inc
pop
push
inc
jae
pop
movsl
arpl
pop
dec
cmp
andl
sub
cwtl
in
jmp
xor
mov
mov
repnz
mov
pop
sub
or
fwait
lret
ja
lods
test
cltd
xor
pop
mov
jge
fists
insb
insl
adc
mov
fistl
lods
jp
sbb
inc
mov
sub
push
push
lcall
dec
out
popa
or
sbb
xchg
ja
add
insb
inc
push
ss
stos
outsb
jp
xor
pusha
ret
lds
inc
int3
xchg
jns
scas
out
push
out
test
inc
fcoml
in
scas
or
jp
dec
jbe
jbe
loope
mov
and
inc
in
test
jae
mov
gs
loopne
pushf
or
addr16
xchg
sbb
adc
lret
pop
into
divb
mov
push
or
shll
or
out
ja
outsl
out
test
add
xchg
jmp
out
insb
in
cmpsl
push
gs
ret
inc
insl
dec
pushf
cmp
dec
pop
int
cmp
loop
and
sub
add
mov
test
addr16
push
sbb
sahf
sti
sub
sub
cmp
ret
fwait
out
push
outsl
lcall
and
fcomi
lret
mov
ja
adc
dec
push
jo
loop
cmp
lock
dec
fmuls
sbb
xor
jo
mov
mov
mov
xchg
mov
push
jecxz
adc
mov
jp
lahf
adc
aad
xor
or
xchg
sub
movsb
lret
std
out
mov
cltd
and
loopne
adc
sbb
jmp
xchg
out
std
mov
aad
ljmp
dec
rcll
add
shll
dec
fs
clc
pop
cmp
xor
mov
push
push
or
loope
mov
mov
sub
repnz
mov
rorb
mov
sti
xor
sub
jns
sub
push
mov
test
mov
lds
cwtl
cmc
stos
les
lds
mov
push
push
fiaddl
mov
das
pop
pop
ret
and
repz
lods
xchg
mov
adc
push
xlat
outsb
dec
std
rorb
fdivrs
jl
push
jmp
xchg
and
call
mov
fisubrs
push
push
push
imul
adc
sub
in
push
dec
sub
add
icebp
cli
jl
icebp
popf
lea
sub
push
adc
lcall
cli
mov
adc
mov
test
test
leave
imul
inc
cmp
pop
mov
pop
rorl
jno
stc
dec
adc
ret
fists
xor
faddl
xchg
insl
dec
sarb
insb
imul
popf
pop
aad
outsl
cmc
dec
scas
addl
rep
or
xlat
adc
jbe
mov
aam
add
xchg
xor
imul
mov
sbb
dec
iret
mov
repnz
rcl
xchg
push
fiaddl
test
movsl
jae
sbbb
mov
lea
cmp
inc
jle
shrb
or
adc
sub
add
rol
mov
push
popf
int3
jg
or
cmp
mov
xchg
mov
or
mov
das
mov
rcrl
aad
mulb
pop
movq
shlb
movsb
mov
imul
adc
fnstsw
fisttpl
scas
stos
inc
loope
lmsw
push
je
or
mov
jl
test
movsb
jecxz
call
pop
jecxz
mov
je
mov
sti
ds
xor
push
lods
test
sub
fidivrl
mov
mov
sub
fidivrs
lock
incl
syscall
enter
jecxz
insb
add
mov
jge
in
pop
cmc
xchg
push
jecxz
sbb
jge
jge
push
xchg
fucomp
jno
pusha
daa
xor
sti
mov
dec
std
or
nop
enter
mov
movd
mov
mov
dec
push
arpl
pop
xchg
pop
sub
and
jl
jle
popf
mov
xor
outsl
push
in
movb
fs
xchg
add
push
sub
jb
insb
xlat
subb
int
xor
sub
adc
aam
sbb
cmp
mov
test
cld
dec
out
xor
fs
sbb
jno
mov
pop
jg
adc
sahf
cmp
lock
mov
push
pop
out
loopne
mov
push
inc
aad
lock
cld
xchg
xchg
fisubl
call
mov
sarl
sbb
ja
cli
pop
dec
cld
push
xor
dec
dec
loope
loop
aaa
jbe
repnz
daa
add
mov
fs
mov
fiadds
shrb
cmp
push
jae
mov
mov
add
sub
fs
pop
xor
cli
xchg
jle
pushl
popf
xor
push
test
icebp
stc
add
xchg
mov
pop
lods
jle
inc
jg
cld
sbb
xchg
cmp
and
cmp
cli
insb
cmp
pushf
hlt
pusha
xor
cmp
lods
ss
pop
repnz
xchg
sbb
cmpsl
push
mov
rcl
les
adc
dec
jmp
fstl
mov
test
sti
bound
cmp
mov
jp
lahf
push
out
sbb
dec
cmc
dec
into
imul
and
or
rolb
out
pop
xchg
fcmovnbe
jno
mov
pushf
lcall
popa
fists
xchg
je
mov
push
fisubs
fnstenv
jae
xchg
movsl
push
popa
clc
xorl
fsts
or
adcl
mov
stc
fidivl
sbb
lret
and
out
test
and
stos
jmp
or
mov
iret
jae
shll
adc
fwait
or
xor
cld
fwait
ss
inc
ds
pop
mov
sbb
ret
mov
jg
lahf
and
jbe
mov
stc
cli
inc
pop
pop
daa
das
xchg
inc
and
ss
popf
out
or
inc
sahf
pusha
sbb
pop
cmp
ljmp
jno
push
dec
roll
fdivs
lock
mov
test
cs
lcall
pop
sahf
xor
jns
aas
push
push
mov
pop
das
shrb
bound
test
jae
push
sbb
jg
inc
inc
cld
jnp
dec
inc
pushf
cmpl
xchg
sbb
pop
push
sbb
sbb
pop
mov
mov
xor
int3
shrl
out
aas
mov
dec
mov
add
push
stos
ret
sub
js
inc
mov
adc
mov
sahf
sub
repnz
sbb
jl
int3
inc
dec
mov
inc
push
push
loope
mov
int3
arpl
loopne
pusha
stc
loop
sbb
int
xchg
push
jmp
mov
jge
aas
push
imul
push
jp
sbb
and
pop
fsubp
sahf
mov
jmp
jns
and
dec
test
inc
mov
test
inc
pop
xlat
sub
hlt
sarl
cmpsb
lods
hlt
pop
lods
or
aad
adc
xor
ficompl
jb
xor
mull
addb
add
xchg
add
lret
je
lahf
mov
bound
dec
inc
jbe
mov
fistl
jmp
pop
sub
adc
fwait
add
dec
fbld
popf
pop
dec
ss
bnd
pop
ss
mov
pop
dec
or
xchg
pop
or
and
mov
inc
fdivs
dec
in
outsb
aad
fucomip
lret
ret
xor
xor
aad
lret
sti
imul
pop
xor
int
or
repnz
call
cmpsl
enter
jns
mov
iret
adc
jmp
mov
test
xor
sub
adc
pop
sub
outsl
rolb
shlb
aad
cld
adc
jns
sbb
test
mov
enter
xor
pop
and
lret
sarb
test
fs
push
mov
ret
add
lds
rcrl
cld
push
ds
mov
stc
stos
lods
cmp
inc
pop
jno
imul
mov
jle
push
ret
or
lret
push
scas
gs
xchg
in
add
sbb
scas
push
aam
mov
sub
sub
xchg
pop
lds
xor
aam
data16
lods
out
fsubrl
sahf
dec
push
in
mov
jno
mov
inc
sbb
aad
jb
push
cmc
push
push
out
jle
xchg
lods
orl
iret
push
popf
fdivs
jecxz
mov
push
addr16
add
test
stos
and
push
in
add
push
dec
xchg
test
loopne
inc
fcmovb
cmp
aad
mov
sub
xor
addr16
push
cmpsb
idiv
es
dec
nop
adc
in
insb
aad
mov
scas
push
insl
movlps
jmp
adc
jmp
clc
jno
mov
mov
add
in
push
lods
xchg
add
std
addr16
sub
dec
adc
inc
loop
add
mov
cwtl
out
in
push
adc
loop
mov
out
and
jno
push
sub
jg
dec
cmp
inc
daa
push
pop
inc
movsb
pop
adc
outsl
es
popf
push
sbb
cmp
xor
fisttpl
fnsave
pop
xor
xchg
data16
hlt
cmc
or
das
sahf
iret
outsb
iret
ds
pop
xchg
lock
cmpsb
bound
pop
cmp
push
pushf
cmp
ret
xchg
orl
inc
sub
add
pop
mov
mov
cs
mov
sub
inc
and
mov
aas
add
scas
pop
mov
push
loop
test
lods
mov
mov
lods
stos
pop
sahf
fcmovne
inc
movsb
jecxz
inc
xlat
outsb
jbe
inc
pop
sbb
jno
or
pop
sub
cmp
pop
icebp
pop
cmp
pop
pop
mov
mov
mov
sub
icebp
push
out
push
fidivs
in
jnp
push
and
or
sub
xchg
sub
sti
loopne
inc
push
out
inc
gs
adc
fistpl
push
cltd
sbb
mov
mov
clc
imul
inc
je
insl
add
sbb
jae
mov
xchg
sub
dec
cmp
cmpsb
andl
or
and
scas
jp
mov
adc
rorl
rcr
inc
add
adc
push
jle
and
sbb
mov
mov
sbb
sub
je
clc
pushf
xor
shll
out
add
lcall
xorl
mov
arpl
push
ret
iret
jae
mov
mov
mov
xor
cmpsl
ret
xchg
test
and
xlat
dec
loopne
xchg
addr16
jmp
push
jno
daa
fisubs
es
inc
enter
push
sub
push
inc
lods
mov
lods
xchg
shl
fsubrp
and
sbb
fcompl
xor
aaa
xor
or
inc
mov
or
iret
mov
cmp
insl
adc
mov
lahf
mov
imul
cmc
xchg
jne
shll
mov
outsl
cwtl
int
push
sti
stos
xor
or
insb
inc
xchg
jbe
daa
mov
ret
hlt
jb
xor
adc
jg
cmp
out
push
test
negl
ficoml
mul
js
je
inc
nop
lock
dec
ljmp
inc
bound
xlat
popf
sti
lea
mov
std
cltd
mov
fidivrl
xor
enter
push
in
pop
mov
and
cmp
sarb
mov
inc
push
xor
adc
inc
mov
mov
jmp
inc
icebp
lret
hlt
fwait
out
and
add
dec
arpl
mov
sub
mov
mov
dec
pop
sti
ljmp
dec
dec
add
xor
jno
test
pop
mul
mov
les
xor
pop
aad
fcmovnu
push
loope
pop
jns
orb
push
push
dec
orb
mov
jbe
jl
test
loop
std
loopne
add
push
mov
sbbl
mov
add
mov
and
jecxz
sub
pop
lcall
jmp
dec
mov
lock
push
rclb
adc
mov
jp
inc
lret
add
mov
push
jns
test
shll
mov
push
stc
popf
inc
fistps
push
fucomp
xchg
cwtl
push
push
out
inc
loope
dec
or
jae
ret
push
divb
cmc
movzbl
inc
inc
int3
lock
aad
les
xor
fbld
inc
push
lock
cmpsb
icebp
dec
xchg
jns
adc
xlat
add
dec
mov
pushf
bound
xchg
cmpb
jmp
in
push
mov
or
out
pop
pop
or
scas
xlat
or
xchg
pop
addb
push
test
xchg
popa
stos
scas
and
es
outsb
or
jp
mov
insb
out
gs
xchg
iret
mov
jle
ss
and
ret
fldcw
adc
loopne
or
and
jl
ljmp
es
movl
adc
adc
jbe
cltd
into
push
test
lret
out
aad
mov
lret
loop
test
shl
pushf
rol
std
push
sub
movhlps
mov
jne
add
xchg
and
rcr
cli
iret
fdivrp
loop
mov
adc
pop
dec
sbb
loope
repnz
sbb
stc
movsb
adc
in
andl
or
pop
cli
adc
xor
stos
adcl
add
mov
fidivs
subl
xchg
fadds
lcall
int3
and
rclb
adc
aaa
mov
xor
gs
daa
xchg
hlt
rcr
add
jne
and
cmp
fiadds
repz
sub
sub
in
setnp
mov
push
cmc
out
test
adc
bound
xor
cmp
stos
mov
fmull
in
mov
cmp
fwait
arpl
mov
xor
lcall
or
mov
xchg
jle
lahf
push
adcl
leave
pop
pop
lahf
push
push
js
jo
mov
dec
dec
sub
dec
cvtps2pd
dec
gs
les
or
mov
sbb
out
divl
sub
mov
in
fs
pusha
xchg
dec
push
es
gs
es
les
sub
sahf
pusha
into
loop
ss
shlb
fidivl
mov
cs
lock
mov
xchg
pop
mov
or
js
mov
jecxz
stos
inc
xchg
cmpsb
in
out
outsl
sub
push
jno
sbb
mov
jns
out
imull
cmp
mov
mov
sub
push
int3
lahf
or
xchg
cmpsl
sub
mov
adc
fldenv
dec
push
stc
jl
mov
mov
out
mov
out
cmp
jo
mov
xchg
cmp
negl
add
inc
xor
mov
stc
imul
dec
loope
push
call
push
mov
inc
mov
cmpsb
mov
pushf
imul
add
xor
sub
xlat
repz
or
dec
leave
mov
adc
xchg
sub
push
xchg
dec
loop
xchg
call
xchg
add
push
movsl
sub
sub
mov
lret
jo
lahf
xor
sti
fwait
lods
xor
xor
mov
sub
fucomi
shrl
icebp
push
mov
and
lds
lcall
test
dec
fwait
xlat
ljmp
sub
pop
pop
incl
jp
xor
cmp
mov
cmp
sar
xchg
add
adc
pop
push
xchg
lock
dec
cmp
ror
dec
pushf
mov
xchg
in
lds
ss
sbb
psraw
jnp
mov
mov
in
enter
ficoms
rolb
rcl
rcl
xchg
jp
sub
andb
mov
push
cli
mov
pop
mov
mov
fs
xchg
mov
test
and
cmpsb
data16
push
dec
lahf
push
and
and
lcall
mov
int3
fldcw
cmpsl
jp
adcb
add
mov
shlb
pop
mov
imul
adc
dec
mov
movsl
mov
jbe
mulb
in
mov
mov
sbb
aas
or
dec
xor
mov
aaa
int3
insb
mov
push
xchg
sub
hlt
cltd
or
mov
push
insl
ret
in
xchg
or
mov
sub
rclb
in
repz
sbb
add
jno
dec
lcall
xchg
xor
dec
movsl
shrb
pusha
addb
cmc
pop
xor
insb
rolb
daa
pop
iret
cmp
add
push
fistpll
lcall
clc
aam
xchg
cli
std
test
or
out
sbb
cld
stos
and
repz
rcr
mov
fsubs
sbb
xchg
lret
int
in
movsb
in
cwtl
cltd
and
inc
sub
or
xchg
movd
pop
pop
fstpt
ret
sbb
dec
mov
rcl
cli
or
push
xchg
jns
push
incb
adc
xor
mov
inc
cmp
jl
and
inc
adc
cwtl
jmp
mov
jecxz
bound
and
aas
clc
mov
aad
repz
sbb
les
scas
jp
and
xchg
add
xchg
sbb
in
shl
sbb
push
in
xor
mov
xor
lret
out
std
ss
neg
xor
incb
sbb
xchg
sub
movl
shr
sub
test
and
sti
cwtl
movsb
and
into
jmp
inc
call
xchg
lcall
das
adc
aas
jo
std
mov
idiv
addb
loope
pop
jnp
adc
clc
pop
pop
dec
mov
dec
sub
push
insl
jne
adc
inc
call
or
dec
jecxz
or
daa
lock
loop
adc
mov
mov
ficoms
mov
lods
test
mov
inc
fistpll
jns
das
or
xor
fistps
fbstp
xor
push
imul
and
inc
cli
mov
sub
lret
push
push
jecxz
enter
rcrl
in
jecxz
and
insl
xchg
jge
push
scas
mov
or
push
cmp
not
ret
scas
iret
pop
fcompl
ret
push
shll
loope
movsb
test
icebp
xor
jne
adc
cwtl
jnp
test
jns
sub
cmp
pusha
xchg
shll
iret
andl
lret
xor
mov
mov
inc
cmpsl
sub
loopne
mov
add
inc
pop
xor
lds
pop
js
pop
or
jo
add
pop
aam
push
mov
xlat
mov
cltd
mov
pop
movd
dec
mov
movsl
cmp
repnz
ja
cmpsl
xchg
dec
add
sbb
dec
ret
daa
je
test
adc
inc
ret
hlt
imul
cmp
cmp
mov
inc
pop
lcall
inc
pushf
add
loop
out
fs
fcomi
or
cmp
gs
test
fmull
test
sbb
and
mov
jae
jno
dec
popf
or
iret
outsb
xchg
dec
push
arpl
arpl
cmc
xchg
gs
ljmp
fmull
ret
mov
push
dec
jmp
pop
adc
mov
add
jns
sbb
and
mov
fdivl
pop
movsl
dec
shrb
insl
sub
sbb
add
imul
push
insl
outsl
or
pop
fmuls
push
cmc
stc
loopne
inc
sbb
or
test
fsts
subl
test
inc
fstps
mov
test
rorl
mov
xor
dec
adc
iret
fnsave
icebp
pop
movsb
push
cmp
or
mov
xchg
or
lahf
cs
into
and
and
hlt
jae
sbb
cli
stos
and
leave
roll
add
fiadds
mov
rclb
and
sbb
fwait
add
dec
pop
cmp
in
jbe
repz
stos
add
push
mov
and
scas
rol
lahf
in
add
inc
cmp
mov
psrlw
out
dec
scas
pop
in
and
insl
je
pop
add
jmp
dec
shll
fwait
cmp
nop
popa
push
mov
test
and
sti
aaa
imul
pushf
mov
and
nop
add
movsb
cmpl
or
loop
or
adc
jb
push
pop
std
inc
jp
pop
fsub
das
inc
lods
pop
rcr
push
ss
sti
push
notb
fldcw
lods
or
pop
push
movsl
dec
lret
dec
adc
ret
subb
stc
mov
bound
into
and
or
stos
inc
data16
push
in
jmp
loopne
push
adc
int3
gs
add
sti
jno
in
das
inc
jb
add
js
out
arpl
mov
pushf
lea
adc
lods
jp
lret
sub
xor
inc
ljmp
mov
push
in
jnp
inc
imul
push
shrl
mov
inc
mov
sub
push
xor
fisubs
pop
pop
pop
mov
in
jle
data16
and
lods
setl
fstl
mov
mov
push
lods
fisubl
out
lahf
inc
mov
arpl
test
ljmp
rcr
out
insb
inc
dec
lds
jge
shlb
push
push
hlt
mov
in
cli
xchg
sub
out
xor
mov
enter
sub
iret
mov
cli
jno
sub
shrl
jb
subl
xchg
pop
bound
mov
data16
sub
inc
stos
in
inc
sbb
inc
xchg
xchg
cmpsb
inc
xor
sub
mov
sbb
cmp
push
imul
jge
jb
pop
sbb
dec
sbb
jg
mov
das
data16
pushfw
out
subl
or
aad
scas
dec
sbb
lods
inc
pop
mov
lret
sbb
xor
pop
loopne
mov
int3
dec
sti
cmpsb
mov
mov
mov
std
lods
inc
cli
in
lock
int3
lds
in
xorl
or
nop
xor
mov
fsubl
sub
stc
test
dec
adcl
jns
add
dec
sub
push
cmp
mov
pop
out
ljmp
popf
xlat
loop
je
in
sbb
roll
adc
daa
mov
lods
dec
lods
mov
push
insl
and
mov
in
add
mov
mov
xchg
out
xchg
into
or
pop
into
insl
pop
push
imul
pop
fnstsw
sbb
outsl
add
push
insl
xchg
xor
divb
dec
jmp
adc
cwtl
cmp
fsubrs
xchg
lds
jb
addr16
cltd
test
mov
daa
scas
into
adc
push
push
andb
cmp
outsl
lahf
dec
xor
xorb
xchg
xchg
sbb
pop
or
rcrl
loop
fcoms
xchg
out
popf
xor
mov
pop
lds
pop
mov
or
adc
dec
jmp
mov
jp
lock
fldl
push
jp
jmp
cli
inc
push
xchg
imul
mov
push
stos
cwtl
imul
push
mov
lods
pop
mov
dec
mov
repnz
mov
rcrl
les
mov
pop
push
mov
dec
repz
stos
mov
ret
outsb
cmp
jbe
inc
pop
xor
cmp
pushf
enter
jb
lcall
mov
addr16
push
popa
inc
xchg
jno
xor
test
jns
scas
jl,pn
xchg
dec
pop
bound
xor
sahf
or
and
daa
push
loope
add
xor
adc
jp
xor
cmpsb
sbb
ret
jp
out
cld
or
test
push
out
js
std
lea
cmc
je
sbb
mov
xlat
mov
pushf
xchg
inc
movsb
repnz
lea
fcmovbe
add
fadds
mov
test
dec
mov
adc
test
pusha
push
leave
push
jno
mov
daa
andb
gs
jge
mov
push
addb
jo
sub
dec
flds
out
lods
cmp
out
sub
insb
pop
adc
xlat
xlat
xor
pusha
fidivrs
fdivrl
xor
xchg
movsb
outsl
jp
xor
mov
xchg
adc
inc
dec
subb
test
xchg
aam
in
loop
pop
xor
fnstenv
ficomps
ret
sbb
repz
cmp
mov
xlat
and
dec
bound
pop
aam
out
xor
ret
sub
aad
dec
mov
mov
imul
lahf
and
ficompl
xchg
pop
adc
out
push
lcall
cltd
cld
xchg
push
inc
xor
cwtl
das
loope
or
cmp
mov
mov
mov
lock
std
aad
or
mov
adc
pop
cmp
rclb
rorl
scas
stc
out
test
cmp
sahf
and
jl
jge
mov
cmp
xor
xor
xor
sbb
scas
sbb
test
or
xchg
push
insl
sbb
xor
arpl
add
cltd
mov
mov
pushf
lea
jmp
push
fwait
addl
xlat
mov
pop
push
mov
add
dec
std
aam
out
sbb
cmpsl
sub
insl
xchg
dec
xchg
xor
movsb
cmp
imul
xor
pop
sub
sub
lods
xchg
les
cmpsb
in
fldenv
bound
ja
jnp
fwait
jmp
mov
rorl
lret
shrl
jle
pop
push
dec
xor
mov
jnp
xchg
xchg
push
aad
sub
cli
mov
lret
cltd
iret
aam
and
dec
pushf
cli
out
pop
cmp
mov
pop
dec
jl
adc
outsl
outsl
punpckhwd
mov
jae
jmp
cmpsl
xchg
sub
jno
jae
int
pop
in
in
push
inc
mov
idiv
adc
jbe
xor
jo
pop
in
cmp
adc
and
xor
gs
lret
xchg
repnz
mov
insb
scas
jp
stos
xchg
outsb
push
inc
sbb
adc
mov
adc
call
sbb
pop
lods
pop
loopne
mov
add
dec
cmp
decl
mov
rolb
and
shr
imul
mov
in
add
int
add
enter
mov
jo
cmp
xlat
push
mov
loop
aas
dec
cmp
in
mov
in
and
push
pushf
dec
pushf
arpl
mov
shr
mov
mov
xlat
out
sub
or
and
fs
push
movsb
xor
ror
out
cmp
gs
fsubrl
cmp
xchg
imul
sub
or
adc
ss
dec
xchg
out
mov
sbb
outsl
pushf
pop
mov
mov
jo
daa
pusha
push
dec
jnp
insb
into
lea
pop
xchg
cmp
mov
adc
push
inc
daa
mov
lret
in
pop
in
iret
jnp
mov
sbb
mov
cltd
cli
pop
lods
jge
xchg
or
mov
adc
sbb
lret
push
push
mov
call
or
mov
sbb
mov
popa
jns
xlat
adc
adc
das
dec
xor
je
cmp
push
mov
decb
lods
add
inc
repnz
cltd
push
out
sbb
xchg
pop
fcomi
test
push
xor
rclb
int3
push
cmp
inc
cmpsl
jb
ficoms
or
or
sqrtps
shll
sbb
das
jne
xchg
xchg
sub
mov
add
push
shlb
das
push
inc
push
xor
test
cmpps
fsubs
cltd
add
mov
je
shrl
stc
int3
arpl
js
and
nop
addr16
push
xchg
push
jae
add
xchg
fcmovnb
rorl
call
jg
pop
lock
jge
push
in
or
std
xchg
fwait
xchg
sub
ljmp
mov
outsl
push
in
dec
jecxz
pop
adc
je
ljmp
jl
gs
fistps
push
mov
ljmp
insb
xchg
movl
cmp
loop
imul
add
sbb
inc
dec
inc
push
dec
aas
imul
push
pop
adc
cltd
test
daa
fcmovnu
bound
xchg
jmp
pop
xchg
or
lods
mov
push
add
stc
stos
lods
pop
or
ret
push
and
sub
andl
cmc
push
pop
stc
lcall
test
add
inc
xchg
stos
mov
mov
repnz
jmp
mov
xchg
mov
adc
push
je
enter
cmpsl
jp
mov
sub
in
sub
cld
mov
mov
xor
pop
sub
xor
mov
jae
mov
lock
mov
sbb
popf
mov
jmp
test
stc
push
jg
jecxz
and
ret
jmp
mov
cmp
dec
in
inc
sbb
out
or
jb
ret
dec
scas
cmpsl
adc
xlat
ja
mov
fwait
and
faddl
ja
jp
dec
and
sub
dec
sbb
insb
push
insl
cmc
repz
iret
jecxz
jae
call
hlt
lret
sahf
inc
rcrl
mov
fidivl
mov
xchg
je
aam
pop
mov
mov
mov
call
xchg
imul
mov
dec
les
stc
movsl
out
lods
xchg
pop
xor
aaa
rcrb
adc
sbb
scas
cltd
shl
in
dec
xchg
sub
jno
jno
sub
sub
aad
shr
mov
push
cmpsl
cld
push
jno
mov
sub
mov
add
add
movsb
addr16
es
setnp
fs
xchg
xchg
imul
les
mov
in
jnp
jae
out
mov
outsb
push
dec
xchg
sub
jmp
clc
mov
ficoms
out
xchg
and
jmp
test
divl
insl
ret
mov
push
dec
add
int3
pop
ds
in
add
insb
scas
loope
mov
xchg
jecxz
xor
push
pushl
insl
mov
dec
jno
insl
cmpsl
pusha
outsl
mov
shlb
push
mov
testl
inc
shlb
addr16
fwait
rcl
pop
pusha
out
jge
sub
cltd
aam
add
push
negb
adc
cmpsb
fwait
xchg
cmp
xrelease
add
decl
xchg
in
push
pop
mov
mov
arpl
dec
movsl
lock
dec
into
std
xlat
mov
fdivrs
push
add
push
inc
push
movsb
inc
fwait
pop
add
sarl
mov
stos
and
mov
xchg
pop
xchg
or
xchg
outsl
pop
insl
push
pop
or
xchg
push
push
or
xchg
push
rcrl
push
xor
jne
loopne
lods
add
push
pop
mov
negl
xchg
mov
into
jo
cmpsb
cmp
int3
ret
ret
pop
jecxz
inc
adc
mov
negl
sbb
pop
xlat
lret
orb
repz
fucomip
xchg
pusha
or
fs
popa
add
or
jns
xchg
jmp
mov
cmp
push
jae
shll
lcall
cmpsb
in
dec
andb
mov
int3
xor
push
inc
add
hlt
stc
sbb
xor
out
adc
cld
pushf
adc
std
dec
repz
loope
in
sbb
dec
sbb
fisubl
mov
in
adc
and
or
xchg
cltd
imul
cs
sub
idivb
decl
dec
dec
clc
sahf
out
into
test
std
nop
mov
gs
push
in
loope
dec
mov
loopne
into
fisubs
add
mov
mov
out
shl
sbb
cwtl
or
jle
jge
inc
adc
jmp
aad
and
cmc
into
lahf
in
rorb
rorb
push
mov
add
jno
or
adc
sar
leave
push
data16
insl
test
arpl
lret
lahf
scas
jbe
push
jb
jl
mov
push
dec
es
out
dec
mov
inc
int3
rep
ljmp
inc
xchg
out
jmp
das
add
push
popf
sbbl
inc
mov
xorb
push
std
push
loope
mov
ror
frndint
outsb
add
cmp
lea
cmp
mov
jmp
aaa
push
pop
jle
sub
cld
pop
cmp
lods
sub
sbb
add
jmp
pop
enter
aas
das
loop
das
cs
dec
or
push
pop
out
loopne
adc
mov
jl
daa
js
dec
mov
lods
fstpl
test
in
or
scas
inc
sti
pusha
mov
fisubl
sbbl
iret
inc
xor
in
jns
dec
subb
pop
testb
push
push
shrl
aas
popf
xor
les
std
and
push
inc
push
insb
es
xlat
out
push
outsb
mov
jbe
mov
sahf
call
cs
ja
cmc
enter
ljmp
mov
ret
cmp
add
gs
stos
jb
xchg
cmp
add
jmp
mov
jo
das
in
repnz
mov
add
add
xchg
sbb
hlt
mov
push
pop
inc
and
ds
nop
push
push
testb
pop
aas
mov
add
sti
add
test
pop
jne
nop
rcll
jae
lcall
xchg
add
fs
xor
dec
pop
mov
in
in
push
in
or
jb
ja
or
imul
iret
mov
je
inc
movsb
pop
inc
cmpsb
cmp
popa
aaa
mov
lds
jmp
sbb
outsb
fwait
push
jl
mov
jno
adc
mov
xlat
rolb
out
stc
jb
daa
mov
xor
sub
xchg
nop
and
xchg
dec
negb
jno
fcom
xchg
nop
add
shlb
pop
xorl
jb
sub
cli
mov
int3
mov
jo
das
aaa
notl
xchg
mov
and
adcb
addr16
mov
adc
mov
dec
das
mov
imul
clc
nop
int3
cmp
jns
and
mov
cmp
jbe
xchg
pushf
test
outsl
adc
mov
fidivrl
call
or
cltd
jnp
mov
ds
ds
jg
popa
lds
lret
push
adc
add
in
popfw
outsl
sbb
xor
sub
pushf
jo
or
sub
subl
aam
inc
jl
lret
icebp
push
add
adc
fcoml
fisttps
adc
stc
imul
out
inc
pop
inc
decb
push
mov
push
xlat
fstps
or
ret
hlt
iret
xlat
pop
add
in
push
mov
jmp
loope
ficompl
loopne
sub
inc
loopne
test
jmp
sub
cli
push
mov
decl
sbb
xor
mov
push
hlt
xchg
cmp
stos
lcall
adc
xchg
ljmp
call
adcl
cmpsb
push
xchg
push
inc
pusha
orb
aad
push
sub
outsl
in
inc
push
call
jmp
leave
cmp
dec
in
mov
pop
out
imulb
add
ja
sbb
loop
repnz
and
mov
mov
and
test
incb
or
mov
mov
jecxz
adc
mov
out
mov
dec
divb
rcl
push
cmc
cmp
ljmp
loop
es
neg
fdivrl
leave
in
or
sub
loopne
imul
outsb
pop
aaa
mov
leave
das
dec
lods
inc
jl
lret
ja
push
sbb
add
add
call
mov
insb
pop
jp
sub
dec
mov
dec
sub
push
call
mov
out
xchg
sti
pusha
test
or
push
jbe
icebp
push
sub
xchg
mov
pop
adc
xor
xchg
push
mov
mov
cmp
lods
negl
insb
xor
ljmp
shrl
mov
notb
popf
test
shr
lods
add
mov
scas
sbbl
cmc
push
lock
popa
clc
pop
push
repnz
test
adc
jmp
jmp
lret
pop
out
test
jno
sbb
fsubrs
pop
sti
or
mulb
xchg
bound
lahf
push
es
push
je
inc
pop
sub
movsb
and
fcmovu
mov
test
xlat
push
mov
jmp
loopne
mov
mov
fsubl
mov
adc
mov
iret
testb
lods
lock
and
sbb
fisubs
xchg
or
sub
hlt
xchg
mov
pushf
sub
mov
xchg
jle
scas
jnp
mov
xchg
jne
jecxz
add
movsb
and
mov
addr16
mov
cli
icebp
in
mov
aad
loopne
and
movsb
pop
sub
xchg
test
inc
inc
inc
bnd
and
flds
pop
mov
daa
lahf
cltd
inc
pushf
mov
out
popf
mov
out
lods
in
shrl
lcall
lahf
imull
push
nop
adc
bswap
mov
nopl
insb
xor
stos
mov
jae
enter
push
adc
in
sahf
xor
sbb
add
mov
shl
int
rorb
adc
imul
mov
or
push
in
rcrb
mov
sbb
jmp
inc
jns
lret
faddl
jg
and
pushf
adc
aaa
pop
aaa
xchg
dec
sbb
lods
out
movsb
fistps
out
sbbb
addr16
sbb
aas
test
mov
repnz
and
adcl
addr16
movsb
xorl
lods
repz
sbb
std
repz
push
sub
inc
and
sub
enter
out
mov
sbb
movsb
push
aaa
data16
xchg
out
pop
dec
xor
sub
test
popa
call
divb
sub
outsl
xchg
jge
or
pushf
jl
cli
test
popf
pop
cmc
xchg
addps
cli
rolb
mov
fdivrl
jg
jo
add
push
or
aaa
sbb
mov
cmp
pop
jnp
adc
sbb
dec
outsl
or
flds
push
xchg
jg
or
pop
xchg
add
mov
pop
aad
sbbl
ljmp
xchg
sbb
xchg
mov
js
or
in
or
mov
test
int
shl
jne
bound
xor
into
mov
xor
xlat
push
mov
cli
mov
arpl
add
jmp
dec
out
rclb
dec
movsb
push
gs
jae
jb
dec
xchg
sahf
xor
bound
pop
aam
int
flds
out
or
add
pop
add
stc
xchg
cs
es
scas
loop
in
or
dec
stc
adc
mov
sub
mov
pop
pop
popa
rcrl
andb
sbb
pop
popa
xor
or
mov
xchg
and
stos
nop
or
inc
mov
dec
pop
dec
out
fisubrl
fcompl
add
mov
jb
das
push
lcall
clc
push
xlat
push
loopne
loop
push
sbb
fidivl
push
lret
mov
sti
and
jae
ljmp
icebp
push
addr16
adc
xlat
pop
push
dec
cltd
xor
loopne
cmp
pop
stc
add
cmpsl
insl
add
mov
es
cmpsl
cmc
adc
dec
lods
xor
ret
clc
loop
insb
add
testl
sub
fstpl
sbbl
fisubrs
cmp
shl
mov
into
ds
xor
stos
jbe
inc
cld
fldenv
sbb
imull
dec
mov
inc
in
sbb
in
pusha
hlt
cmpsl
add
idivl
insb
push
pop
cmp
scas
pop
jno
pop
nop
adc
icebp
int3
adc
popf
icebp
sbb
std
or
xor
clc
or
popf
lcall
rol
mov
mov
jmp
xlat
pop
rorb
or
dec
and
mov
data16
rorb
xor
lock
lret
ss
std
xor
sahf
loopne
fstp
notb
lock
mov
push
aaa
pop
cmp
inc
icebp
enter
aam
fwait
dec
mull
in
mov
dec
cwtl
add
jb
and
scas
loop
mov
adc
pop
push
mov
sbb
mov
icebp
movsl
iret
call
stc
adc
inc
xchg
lock
sbb
test
mov
mov
sub
mov
add
jmp
pop
sbb
lea
xchg
lods
lods
ds
add
int
out
out
mov
jle
mov
inc
enter
jge
or
cmp
cmp
mov
jg
and
scas
mov
fisubrs
scas
cmp
in
mov
cmc
cwtl
das
inc
nop
call
cmc
xor
popf
push
cwtl
jae
clc
or
adc
xchg
movsl
mov
xlat
push
je
push
aad
shll
or
dec
mov
or
adc
in
mov
mov
or
mov
nop
jl
repnz
aas
mov
sub
loop
mov
xor
jb
cmp
cld
cwtl
pop
and
or
sbb
scas
inc
sub
pop
outsb
shll
je
mov
fcmove
ss
out
mov
sbb
xchg
addr16
xlat
lahf
ss
or
mov
xchg
in
sbb
jg
sbb
sub
sub
pop
inc
ljmp
push
mov
jg
lods
mov
stos
mov
in
sub
fidivl
jp
in
fdivl
dec
rcrb
mov
rcl
addr16
sub
in
pop
aas
add
push
xor
sub
shlb
mov
imul
leave
pop
xor
out
and
test
cmpsb
push
dec
jecxz
fnstcw
pop
pop
mov
jnp
std
shrl
sti
add
mov
je
xor
jp
adcb
pop
or
jno
fmul
sbb
push
inc
pop
stos
dec
and
mov
roll
mov
mov
or
push
or
in
fidivrs
addb
stos
inc
movl
dec
out
icebp
pop
push
adc
cwtl
stos
mov
mov
fstpt
adc
mov
dec
adcb
push
sbb
into
mov
repz
mov
or
cmp
cmc
loope
scas
mov
sub
mov
dec
rep
dec
mov
pop
jle
lods
pop
ror
mov
mov
out
xchg
je
mov
fidivl
negl
push
sub
bound
mov
enter
xor
mov
xchg
ja
outsb
or
sbb
mov
clc
popl
push
sub
sbb
mov
pop
mov
jp
test
ljmp
jb
jb
pop
lock
cmpsb
out
pop
pop
or
cmpsb
jo
clc
mov
fidivrs
pop
mov
es
pop
inc
jg
jns
cmp
pop
mov
hlt
push
nop
adc
and
and
into
cmp
repnz
mov
mov
mov
cmp
imul
movsb
adc
jae
cs
movl
inc
fldenv
cmpsl
cwtl
jge
subb
lea
add
stc
xchg
inc
mov
leave
in
cli
sub
dec
dec
and
and
rorl
pop
xchg
adc
jge
data16
bndldx
daa
xor
hlt
mov
loopne
pop
xchg
out
mov
xchg
adc
jle
xor
movsb
mov
sub
jae
fwait
pop
cwtl
dec
xlat
mov
and
pop
jnp
fdivs
pop
pop
imul
sub
jle
leave
pusha
mov
push
mov
enter
and
mov
cmp
mov
ficomps
adc
or
inc
cmp
jae
xchg
je
mov
lret
xchg
and
xor
mov
add
xchg
dec
cwtl
les
cltd
lock
cmp
icebp
add
mov
cvtps2pd
jg
pop
lock
mov
adc
es
mov
fnstsw
adc
sub
adc
daa
fbstp
loop
out
push
xor
mov
faddl
rorb
movsb
xor
adc
lahf
or
push
sub
or
push
sarb
enter
mov
mov
xchg
jg
lret
adc
scas
scas
mov
stos
fidivl
lret
bound
cli
jbe
sti
movsl
fs
fsubrs
inc
loope
jle
sbb
pop
mov
lret
dec
mov
mov
pusha
adc
sbb
pop
movsb
cmp
push
les
aad
jle
sbb
mov
std
mov
into
xchg
test
in
push
jmp
jecxz,pt
pop
sbb
xor
and
lret
lds
fimull
fidivl
jbe
inc
sbb
push
inc
vpclmulqdq
ja
loope
popl
dec
fisubrl
or
scas
daa
in
mov
fildll
outsb
test
popa
mov
xchg
sub
dec
testl
lcall
cmpsl
pop
divl
fdivrs
mov
sub
es
xor
push
out
add
and
push
push
push
daa
dec
mov
shrl
inc
push
or
fwait
out
xchg
push
and
or
pop
adc
pop
fmul
jo
sub
inc
dec
jle
cltd
repz
cmpsl
and
cltd
push
leave
into
lds
arpl
cmp
adcb
jmp
popf
lret
repnz
push
fs
testb
push
popf
xor
into
daa
lea
xchg
push
xor
mov
imul
test
addr16
cltd
addr16
push
insl
or
sahf
jae
add
jg
inc
inc
sbb
repz
xchg
pop
rcll
data16
mov
mov
sarl
sub
pop
icebp
sbb
jo
sbb
sbb
mov
push
pop
cmpsb
push
loopne
sub
test
outsb
push
outsl
push
and
jmp
sets
mov
dec
outsb
cmp
pop
jne
fldt
xchg
iret
jbe
sarb
sbb
lods
btr
push
jp
fwait
test
jmp
in
fistl
cmpsl
push
dec
sub
jae
imul
rcll
or
outsl
push
cmp
add
pop
lea
push
lods
rolb
mov
cli
pop
shl
in
adc
in
aaa
das
cmp
in
repnz
cli
add
jp
sbb
mov
mov
lcall
in
pop
loope
ljmp
enter
inc
and
push
inc
dec
or
cwtl
daa
mov
push
push
push
lcall
shl
rol
cmc
repnz
les
xor
pop
mov
push
sbb
inc
in
rorl
icebp
adc
mov
into
xor
xor
arpl
mov
stos
dec
inc
aaa
mov
and
dec
add
jmp
xor
sub
push
cli
aas
imul
dec
psllw
mov
imul
and
std
bound
je
or
lods
add
pop
ficompl
ja
sbb
hlt
fsubr
and
iret
mov
call
mov
pusha
pop
fisttps
push
repnz
sub
mov
cmp
andl
aas
shl
add
std
inc
fisubs
cmp
idivl
adc
rcrl
cmp
mov
mov
sbb
test
mov
jbe
std
xchg
cli
xlat
inc
ljmp
jno
pop
jbe
icebp
cmpsl
cmp
xchg
jne
das
jo
xchg
sbb
jp
add
lret
push
inc
jae
jmp
je
icebp
inc
push
sbb
inc
mov
dec
inc
negl
subb
mov
adc
jns
cmc
pop
mov
pop
jae
iret
add
jbe
and
pop
in
shrb
je
inc
mov
cld
imul
stos
imul
push
cmp
es
sarl
cltd
xchg
jb
fidivs
xchg
mov
pop
les
mov
aas
sbb
stos
jg
jp
fsubs
leave
pusha
sub
and
or
jno
insb
cli
lret
mov
shl
sbb
popa
enter
push
cmpsb
add
cmp
xchg
mov
popa
cmpb
add
mov
fsubrl
sbb
in
and
insb
lcall
orb
es
fisttps
sbb
pop
sbb
mov
xchg
repnz
popf
and
addr16
mov
mov
adc
dec
or
push
push
imul
fwait
ja
cli
out
push
pop
loopne
cld
adc
dec
or
inc
fisubrl
stc
das
scas
push
fisttpll
add
mov
fcomps
insl
lgs
es
and
dec
in
cmp
sub
inc
xor
xlat
jmp
and
mov
mov
pusha
clc
lret
outsl
xchg
enter
pushf
lods
inc
loopne
ss
icebp
sub
lret
mov
mov
aad
jecxz
ds
nop
out
pushf
cli
mov
push
or
inc
push
pop
lret
sahf
mov
mov
mov
sbb
test
jp
mov
fmulp
es
call
sbb
jbe
sub
adc
push
pop
mov
push
stc
pop
mov
pop
push
stc
dec
scas
imul
outsb
cmp
icebp
add
cwtl
mov
test
imul
mov
pop
ss
xchg
pop
xor
aad
pop
xsha1
cmpsb
dec
jmp
cmpsb
and
jns
imul
add
dec
fxch
popa
hlt
inc
movsb
mov
into
fsubrp
ret
pushf
outsl
sbb
pop
test
ss
push
sub
mov
repnz
fs
stos
mov
js
xchg
es
mov
cli
repz
fs
inc
inc
pop
dec
frstor
flds
jb
sub
rcrl
pop
orb
jg
iret
loop
jmp
ret
pop
mov
repnz
push
jb
mov
and
inc
jns
ds
jl
sbb
decb
add
dec
xor
push
out
and
xchg
mov
dec
lock
rolb
subl
negl
shl
movb
fimuls
jmp
add
jns
dec
mov
lds
mov
ss
adc
arpl
jno
lahf
jo
sbb
xor
mov
dec
fildl
xchg
ret
jl
xor
xor
push
and
fadd
sbbb
movsl
outsb
in
rcrb
and
sarb
sbb
pop
pop
std
sbb
cmp
into
cmpsb
jns
mov
in
loope
inc
out
inc
shrl
test
in
mov
in
out
fisubs
inc
aaa
jl
mov
inc
ret
js
shr
mov
inc
test
xchg
pop
outsb
mov
mov
int3
call
stos
xchg
test
pop
mov
dec
cmp
cmp
cmp
xchg
push
daa
sub
divl
loopne
xor
dec
int3
fstl
sbb
cmp
pop
pop
push
outsb
and
fisubrs
push
aas
xor
leave
pop
daa
stos
inc
sbb
outsl
fwait
lods
mov
sub
dec
aam
mov
adc
filds
aad
jbe
mov
inc
xchg
mov
insb
jnp
xchg
nop
sbb
inc
and
mov
sub
loope
mov
rcl
and
cld
pop
push
inc
test
dec
adc
mov
das
out
lcall
or
mov
shl
and
xchg
sub
mov
xchg
xor
cmp
test
ljmp
and
jae
pop
movsl
or
jg
les
adc
out
push
sub
pushf
xor
ret
insl
loopne
les
insl
cmpsl
push
cltd
in
outsl
pushf
mov
push
inc
jmp
insl
and
inc
pop
insl
push
dec
in
jg
test
nop
sub
sbbl
add
dec
outsb
mov
fcomip
nop
daa
out
psubsb
xor
sub
loop
fsubrs
sahf
gs
push
fdivl
mov
mov
cld
pop
hlt
sub
repz
adc
xchg
jno
movsb
scas
jecxz
xor
out
mov
xchg
add
mov
lods
and
adc
hlt
mov
xor
xchg
ret
adc
pop
jns
xchg
pop
xchg
stc
or
adc
xchg
test
jg
push
cli
pop
jae
sbb
sbb
cmp
add
add
lds
das
mov
sub
sub
aam
int
mov
jo
ss
xor
popa
gs
mov
pop
mov
sahf
fisubs
xchg
and
test
cs
xchg
mov
push
je
jno
lret
bound
add
and
or
rorl
fisttpll
mov
iret
mov
jge
mov
notl
cmp
jns
ja
pop
dec
add
in
in
aas
sub
pusha
pop
xchg
in
orb
outsb
jne
mov
insb
std
cwtl
test
aad
xor
cmp
dec
xchg
xor
or
loopne
xlat
fsubr
push
test
cmc
rclb
xor
xchg
adcl
cld
ret
pop
out
call
or
inc
mov
ret
add
notl
daa
outsl
icebp
xchg
or
jecxz
mov
push
into
orl
mov
add
in
popf
pusha
sub
inc
dec
bnd
sub
dec
std
mov
xchg
jbe
sub
mov
pushf
mov
fcomps
or
cmp
in
fistl
rorb
xchg
test
je
xor
or
dec
push
mov
push
mov
js
mov
pop
pop
mov
add
int3
mov
call
in
add
enter
add
xor
xor
mov
aad
jb
xor
mov
imul
popf
xchg
and
jno
testb
jle
lods
pop
inc
lea
aas
dec
push
cld
jmp
jo
push
xchg
and
or
push
jne
icebp
ds
cld
xchg
xchg
cmp
lods
pop
dec
scas
sub
cs
dec
in
mov
pop
incb
push
aam
stc
cwtl
stos
cmp
sub
mov
push
push
mov
je
inc
jbe
daa
data16
xchg
cwtl
push
les
js
push
mov
lock
adc
jge
sub
mov
and
sbb
sub
rorb
xchg
lea
ret
fs
out
inc
test
jno
or
inc
pop
iret
xchg
js
ret
into
mov
xchg
jp
pop
xor
ret
mov
data16
jmp
sbb
lds
popf
test
mov
in
icebp
add
sbb
push
andb
lret
mov
lret
insl
cmp
outsb
push
movsl
ljmp
sbb
aam
adc
xlat
ret
xchg
les
inc
shll
inc
popa
and
dec
loopne
dec
fildl
xlat
mov
cld
pop
xchg
sbb
mov
repz
clc
lahf
stos
ficoms
xchg
add
jg
out
sahf
xsha256
int
add
pop
std
divl
cld
stc
out
cmpb
cmp
pop
test
cmp
mov
mov
jmp
and
shlb
clc
mov
sub
clc
mov
mov
pop
dec
js
inc
fmull
xchg
cld
inc
hlt
cs
push
mov
xchg
xchg
enter
dec
xchg
sub
and
popf
push
lcall
sahf
outsb
pushf
jmp
test
mov
int
lea
xor
or
sbb
jae
ret
and
xchg
in
lahf
inc
push
inc
jnp
xchg
mov
mov
push
mov
sti
ret
mov
xor
jl
rcrb
adc
xchg
fistpll
pop
mov
fnstenv
je
loope
scas
popf
outsl
push
mov
xor
pop
xchg
xchg
mov
loop
mov
out
push
movsl
sub
mov
icebp
shl
nop
and
pop
sub
mov
push
loope
out
and
pop
xchg
push
in
cmp
lcall
mov
pop
mov
das
xor
repnz
fisubl
or
mov
inc
push
aaa
sub
mov
jge
sub
and
mov
int
xchg
aaa
mov
ljmp
dec
ss
push
dec
cli
pushf
out
pop
dec
mov
push
cmpsb
in
and
push
mov
jg
push
xchg
popf
mov
mov
cmpsb
orl
out
out
add
adc
orl
push
push
or
bnd
mov
adc
mov
push
test
push
jbe
push
test
push
popf
xchg
fidivs
mov
push
xchg
icebp
add
leave
mov
push
rcrb
sar
insb
mov
shl
les
mov
rol
xor
loop
pushl
in
enter
mov
jl
xorl
fimull
popf
sub
mov
lods
in
roll
pop
mov
dec
mov
mov
aaa
fwait
leave
mov
test
adc
int
ficompl
lods
pop
cmp
arpl
lods
mov
push
clc
cmp
push
xchg
loop
add
dec
movl
fs
and
rol
data16
rcrb
out
lret
sub
aaa
and
test
out
sbb
jecxz
mov
sbb
add
loop
sub
inc
cs
popa
roll
cli
loop
cmp
cmp
xor
push
jl
aad
popf
stc
nop
cmpsb
pop
repz
cltd
out
stc
lcall
out
shrb
xor
push
cwtl
push
mov
mov
or
and
jbe
sbb
repz
js
xor
jmp
sti
out
js
and
sub
jl
aas
imul
mov
mov
jecxz
inc
xlat
into
jne
xor
jg
or
pop
sarb
lock
int
and
sti
jle
pop
adc
mov
push
scas
mov
or
fcmovu
mov
jb
lock
imul
pop
adc
xlat
add
je
dec
cvtps2pi
aas
test
aaa
popa
clc
dec
cmpsw
mov
leave
sbb
loopne
test
push
rcr
loopne
adc
mov
std
xchg
loopne
xchg
cmp
shrb
and
dec
loop
cmp
mov
jbe
insl
jge
cmp
stos
inc
sbb
xchg
mov
cmp
orl
inc
nop
mov
fstpl
sub
add
negb
imul
sub
repz
roll
fistpll
stc
adc
jmp
add
fimuls
push
clc
dec
loop
bound
mov
push
push
in
mov
movsl
dec
bnd
iret
das
adc
pop
mov
dec
pop
ds
and
dec
loopne
pop
push
or
inc
mov
out
sbb
repz
pop
fsubrs
add
sbb
cmp
nop
inc
in
in
adcb
fldl2e
sarl
lahf
jmp
inc
outsb
add
push
inc
mov
shll
adcl
fiaddl
or
stos
fwait
push
or
jb
push
leave
int3
sbb
pushw
add
sub
rol
xor
sub
pop
adc
pop
push
push
pop
pop
icebp
jno
gs
jge
xchg
mov
or
add
inc
loope
in
inc
pop
pop
add
jmp
sub
int3
fistpll
or
sbbb
test
inc
fwait
sbb
insb
jp
adc
mov
inc
outsb
push
mov
lea
roll
push
xchg
sbb
xchg
sub
sub
in
out
sbb
out
fnstcw
out
pop
sbbl
xorl
movsb
cmp
rolb
inc
sahf
jecxz
repnz
dec
xchg
fs
sti
cmpsl
out
fcmovne
pop
or
pop
loope
jo
adc
jecxz
or
fnstenv
mov
xchg
pop
cmpsl
test
in
aaa
mov
imul
sbb
fdivl
mov
jg
divl
stc
add
ret
and
rol
movsb
jmp
cltd
mov
js
fsubl
xchg
xchg
cmp
insl
sub
not
sub
cwtl
mov
dec
ficoml
testb
sti
shrl
inc
mov
sti
sahf
icebp
subb
dec
mov
cmc
les
jp
negw
pop
sbb
popa
fsub
and
xor
sub
mov
cmpsl
jmp
sbb
mov
sub
gs
mov
int3
add
fisttpl
andb
mov
js
pop
daa
sahf
push
mov
test
cwtl
add
jno
xchg
and
mov
loope
aas
addb
gs
and
fldt
andb
mov
mov
fcom
jae
push
jmp
fisttpll
ret
push
push
push
inc
mov
mov
adc
sbbb
xor
and
rcrl
push
xchg
mov
ret
dec
mov
pop
pop
pop
mov
in
xor
dec
loop
mov
xchg
daa
push
in
addr16
jno
call
shl
iret
dec
jg
mov
adc
das
and
xchg
pop
cmpsb
out
test
lods
stos
sbb
or
adc
fs
ror
dec
les
xchg
add
fs
lcall
sbb
mov
xchg
xor
push
mov
mov
sbbb
jge
ss
sti
add
rolb
stc
lods
jmp
lahf
mov
sti
stos
and
push
movsl
jb
jne
out
mov
xchg
dec
fwait
fs
loope
in
out
jbe
xchg
sub
xchg
adc
cs
loope
sbb
dec
sub
shrl
jne
sarb
xor
std
sti
imul
cmp
jp
sbb
or
sbb
sti
cmc
std
xchg
push
sbb
jne
sub
movsb
dec
dec
sub
aad
ss
cli
cmp
mov
push
dec
mov
xor
fnstsw
mov
cwtl
jns
iret
adc
dec
fidivs
or
mov
pop
sbb
mov
test
repnz
out
sbb
push
ss
jo
sbb
lcall
and
pop
adc
fdivs
xchg
jge
cli
popl
xor
arpl
pop
xchg
dec
inc
mov
decl
fs
jb
outsb
push
jmp
mov
dec
and
aad
data16
nop
dec
insb
jle
aad
rolb
cmp
push
push
rorl
and
add
loop
scas
pop
or
iret
mov
mov
lds
jbe
cld
or
cltd
out
add
xor
push
inc
cwtl
gs
mov
inc
adc
js
das
insl
popf
stos
mov
push
add
pop
prefetchnta
adc
lods
sbb
pop
orl
test
nop
imul
jne
inc
aad
or
jnp
xor
adc
gs
xor
test
popf
mov
leave
xor
shlb
rcrb
jbe
push
aaa
xchg
fcomps
loopne
hlt
mov
xor
je
mov
aaa
movl
jnp
sbb
cwtl
das
in
and
aam
sub
sub
pop
outsl
and
pop
jbe
or
jne
xchg
lock
push
pushf
mov
push
sub
scas
push
mov
test
fidivl
adc
std
push
and
fldt
out
adc
mov
adc
insl
pop
xor
shlb
push
jbe
arpl
or
mov
inc
pop
xor
jne
sub
test
jl
andl
mov
outsl
inc
pusha
outsl
daa
bound
test
lahf
mov
xchg
inc
pop
icebp
jae
fwait
cmp
inc
adc
push
adc
mov
sarl
incl
jb
adc
std
jo
mov
sbb
mov
xchg
sub
arpl
int3
outsb
jle
insl
pop
into
arpl
negl
pop
pop
xchg
add
test
aas
outsb
push
adc
inc
ljmp
inc
ficoml
sbbl
pusha
mov
sarb
lds
data16
push
sbb
and
ret
mov
mov
dec
js
or
out
outsl
sbb
push
out
xchg
fdivs
mov
or
fcoms
mov
fadd
jns
add
std
and
adcb
mov
sti
pop
pusha
movsl
popf
lods
aam
push
jb
pusha
repnz
andl
test
xor
adc
popf
dec
aas
dec
jg
adc
icebp
adc
test
stos
out
scas
adc
add
in
xor
push
or
or
aad
loopne
lds
cmp
divb
mov
xchg
jg
outsl
fs
mov
imul
or
sub
movsb
mov
mov
js
jns
xchg
adc
cmp
mov
insl
xchg
sti
pushf
sub
shlb
jmp
aad
xor
or
push
pmaxub
mov
jno
test
dec
pop
pop
repnz
xchg
out
stos
cmp
xor
outsb
inc
inc
lret
mov
xor
mov
adc
jl
dec
jo
cmp
lcall
push
shll
jge
xor
mov
push
sbb
or
insb
jo
sbb
mov
pop
mov
add
je
jp
lret
mov
and
mov
stos
jle
fwait
pop
insb
incl
out
int3
aam
xchg
sbb
sbb
out
stc
rorb
and
int
dec
jmp
pop
sarl
mov
in
jecxz
and
push
pop
xor
stos
outsl
nop
dec
dec
inc
and
sahf
xchg
pop
add
loope
scas
imul
in
mov
test
popa
or
adc
loope
and
cmc
pop
insl
aam
mov
pusha
repz
cmp
mov
mov
test
in
aaa
stos
ficoml
inc
or
insb
mov
arpl
sub
mov
sbb
xor
xchg
pop
mov
mov
add
jae
jae
cmp
pushf
pop
mov
outsl
adcl
mov
into
cmp
sbb
fstps
into
jecxz
pop
pushf
pop
jg
lret
ffree
jge
adc
push
shr
pop
pop
sti
push
rol
aam
or
sub
lret
inc
and
repz
js
sub
cmc
dec
shlb
repnz
in
jg
scas
std
dec
add
inc
pop
adc
fstl
push
and
xchg
mov
dec
js
or
call
fucomi
push
jmp
je
hlt
cmp
aas
mov
add
sub
and
xor
or
enter
out
repnz
aad
adc
push
push
int3
mov
pop
ljmp
and
fwait
hlt
or
mov
popf
roll
aam
or
xor
inc
fcomps
scas
scas
add
pop
lcall
dec
scas
mov
ss
mov
cmp
push
stos
repnz
les
lcall
int
pop
icebp
xor
popa
pop
fisubrs
xchg
push
sub
xchg
cmp
scas
orb
pop
inc
in
cmp
inc
movl
jp
mov
data16
sbb
pop
outsl
insb
repz
es
aam
jge
arpl
fstps
cmovbe
jl
nop
dec
dec
cmp
aas
lock
sbb
fdivl
les
std
cmp
out
xchg
and
shr
cmp
sbb
add
in
out
popa
mov
clc
cmpsl
sub
enter
rcrb
in
je
sbb
notb
cmpsb
xchg
sbbb
pop
push
jmp
fsub
dec
mov
push
movsl
xor
cmp
stc
orb
inc
sub
xchg
les
inc
mov
int
push
push
insb
pop
ja
sti
cmovbe
lock
insb
push
jo
inc
or
subb
and
inc
push
data16
adc
xor
xor
inc
fwait
sbb
out
xchg
add
test
inc
jg
stos
sub
repnz
dec
data16
sub
jns
or
xchg
test
fiaddl
add
xor
sub
out
cmp
testl
sub
mov
in
aad
das
dec
pop
ret
int
outsb
loope
lcall
pop
sbb
pushf
out
add
scas
jl
test
sbb
cmpsb
outsb
clc
jp
sub
and
stos
add
cld
mov
sub
popf
sub
int
cmpsb
std
dec
lock
push
mov
add
fistpl
xor
add
stos
call
pusha
addl
jbe
lds
popa
repz
inc
aas
dec
cmp
pushl
shrb
cltd
negl
pop
mov
dec
aam
repnz
inc
pusha
jb
clc
dec
aad
jmp
call
mov
pushf
lods
icebp
push
data16
jg
in
loop
inc
inc
sbb
mov
inc
bound
xchg
inc
jno
inc
sub
inc
xor
sub
aam
into
cmp
mov
dec
insl
sti
jbe
insb
cmpsb
dec
lds
pusha
sahf
icebp
fucomp
jl,pn
js
ja
xchg
js
shll
push
jbe
mov
out
ss
arpl
aad
lret
cmp
jle
es
daa
adc
out
popa
push
or
jp
into
add
add
gs
in
inc
into
or
inc
pop
dec
xchg
push
cmpsb
sti
rcrl
or
or
out
mov
ds
or
sbb
mov
inc
enter
rol
or
fsubs
lods
mov
or
notb
or
testl
mov
sub
nop
add
jb
out
jb
sbb
xor
std
xchg
push
cmovnp
sbb
lret
outsb
daa
jmp
inc
pop
movsb
mov
xor
jnp
insl
test
scas
enter
repz
push
and
popf
push
ljmp
out
lahf
jl
mov
pushf
decb
add
push
out
sub
mov
nop
ljmp
sbb
popa
cs
leave
dec
sub
ljmp
adc
test
pop
sub
pop
dec
leave
jge
subl
mov
out
out
cmp
pop
ja
cli
daa
scas
and
push
out
inc
clc
out
adc
mov
sarb
rolb
inc
ljmp
xor
rcrb
cmp
xchg
push
rcl
out
pop
xor
js
xor
adc
int3
jp
inc
add
xchg
cmpsb
add
imull
in
xor
aad
mov
into
iret
insb
pop
cmp
push
insl
cli
push
es
add
pop
popf
int3
pop
jecxz
mov
jle
out
add
pop
outsl
out
mov
sub
xchg
add
in
xchg
out
subb
adc
enter
jb
push
sub
int3
xor
inc
add
xchg
jle
sbb
mov
lahf
xor
add
popa
adc
testl
out
repnz
mov
das
jnp
mov
fcomi
mov
std
or
in
sbb
outsb
loope
and
and
cmp
pop
lea
addr16
daa
ret
push
mov
ss
xchg
mov
xor
jl
push
jmp
sbb
push
movsb
sbb
mov
jno
std
aaa
loop
push
testl
mov
or
sub
adc
repnz
mov
mov
dec
xchg
ss
insl
aaa
xchg
pop
xchg
mov
jae
ds
sub
push
imulb
sbb
aam
call
cmp
inc
stc
sub
loope
ss
add
sub
and
lcall
mov
adc
jae
push
or
jg
mov
push
jge
mov
lods
addr16
fimull
and
adc
cmpsl
and
adc
out
push
fiadds
sub
lcall
jecxz
rcrb
mov
mov
clc
fsubs
and
dec
dec
jo
mull
push
in
mov
popf
lods
outsb
mov
add
inc
lahf
test
shrb
stos
jmp
jne
jmp
pop
addr16
pushf
test
pmaddwd
or
sub
sub
mov
pop
or
mov
cs
aaa
pop
sbb
test
add
jmp
addb
lret
mov
dec
cli
mov
in
jg
pop
cmp
push
test
into
iret
xchg
adc
scas
aad
in
int
sahf
push
test
push
jae
xchg
ss
mov
adc
in
mov
sub
push
push
ljmp
call
mov
cmc
data16
push
add
out
out
sbb
vmovupd
mov
cmp
je
lock
cmp
cwtl
pop
sahf
dec
ret
pop
jnp
inc
mov
ficomps
mov
adc
repnz
sub
inc
pop
pop
jnp
in
inc
push
adc
into
push
sub
cwtl
pop
mov
aam
xchg
imul
adc
cmp
and
iret
push
push
ret
jno
mov
pop
in
adc
out
inc
add
sub
inc
or
repz
adc
movsb
cmp
faddl
stc
pop
repnz
inc
pop
scas
mov
or
add
andl
int3
shlb
data16
adc
push
test
dec
lds
jne
lret
jnp
in
dec
mov
std
xlat
or
push
mov
call
loope
loop
jecxz
cmpsb
pop
jns
aas
in
xor
pop
adc
addb
dec
mov
adc
clc
fadd
pop
div
call
mov
jge
hlt
pop
lods
insb
jp
inc
pop
pop
pop
call
pop
subb
movaps
addr16
in
adc
pusha
je
cltd
es
fidivs
dec
and
outsb
mov
jae
es
shrl
inc
pop
push
scas
or
lea
fwait
jb
mov
dec
movsb
fdivrp
ja
jae
dec
in
orl
pushf
or
xchg
sahf
sbb
push
fsubrs
pop
subb
sub
pop
loope
mov
jb
clc
arpl
cmp
add
adc
aaa
pop
mov
and
and
xchg
jno
fwait
stc
and
mov
insl
and
testl
fwait
mov
jecxz
dec
adc
iret
pop
stos
inc
scas
inc
fsubl
sti
inc
push
ss
push
inc
aas
xor
lea
pop
std
mov
ljmp
ret
fs
cmp
fildll
out
sbb
fidivrs
fldenv
imul
cmp
sahf
lock
mov
in
out
into
jb
rcr
jb
sti
pop
mov
or
inc
mov
mov
jp
hlt
repz
jns
in
pusha
xlat
or
hlt
or
adc
into
or
test
lret
das
fs
mov
adc
and
and
mov
push
gs
daa
leave
or
enter
fcompl
jge
cltd
xchg
dec
lret
scas
bound
jo
push
cmp
xchg
mov
pop
sbb
cmp
dec
jb
lock
adc
mov
push
insl
cmpsb
xor
cmpsl
cmp
mov
mov
push
xor
sub
inc
loope
cmp
lods
mov
dec
mov
arpl
es
mov
maskmovq
notl
inc
sbb
arpl
mov
popa
adc
mov
jnp
inc
mov
ljmp
movsb
ror
fucomp
lds
jge
mov
sub
popf
xchg
repnz
loope
dec
cld
sbb
mov
int
data16
in
or
mov
testl
xor
push
mov
nop
addr16
and
mov
xor
rclb
pop
cwtl
jo
fs
loop
push
dec
ret
jo
pop
push
mov
pop
inc
pop
jne
cmp
lahf
ja
lock
cs
cmp
mov
std
xchg
lcall
sub
dec
dec
out
repz
rolb
sahf
fcoms
dec
mov
outsl
mov
sbb
cmp
lret
setle
js
ja
mov
push
xor
or
std
lret
or
sub
outsb
loope
test
ret
je
or
sub
push
jmp
ja
xchg
je
mov
fidivrs
into
leave
test
adc
mov
in
daa
dec
jo
div
dec
cmpsb
lods
and
sbb
xor
mov
jge
push
lods
dec
inc
stos
jno
adc
lods
inc
jne
rclb
repnz
inc
test
mov
jg
sbb
jo
bound
jbe
pop
mov
jp
das
pop
int3
faddl
mov
fbld
test
stos
nop
and
pop
in
cwtl
movsl
cmp
dec
fs
fadds
xchg
mov
stc
hlt
mov
in
lods
sti
dec
dec
call
push
cmp
xchg
in
jns
jnp
or
mov
pop
mov
adc
jmp
xor
int
aas
xor
jl
rclb
imul
mov
mov
ret
xchg
fisttpll
mov
inc
test
ret
addb
push
mov
cltd
xchg
push
leave
mov
jg
fmul
imul
push
push
add
adc
xor
jecxz
cmp
add
cmpsl
push
and
pop
ds
mov
movsl
push
cmc
inc
cmp
and
pop
cmp
in
aad
or
pop
loopne
sub
and
jns
inc
aas
sti
mov
and
push
jb
jb
std
mov
jbe
mov
xor
sub
outsl
shll
xor
add
sub
dec
in
lds
dec
in
sahf
add
inc
inc
imul
fcoml
xchg
sbb
xor
xchg
jo
cmpsb
mov
call
sub
mov
jle
cld
shl
cli
test
lds
fiadds
inc
std
imul
dec
movsl
int3
lret
and
addb
jae
adc
lods
push
add
sub
insb
cld
inc
sahf
sbb
push
jmp
lock
cmpsl
out
xchg
add
xchg
mov
push
inc
int3
in
xchg
dec
push
leave
or
push
push
mov
call
shr
lcall
call
mov
les
sbb
in
pop
mov
das
repnz
adc
jecxz
pusha
iret
and
or
add
xorb
fadd
mov
bound
sbb
insb
push
jecxz
test
mov
imul
lahf
icebp
xchg
mov
fwait
gs
push
mov
and
test
pop
test
sub
std
sub
add
test
mov
rorb
jl
add
enter
lcall
sub
outsl
pop
outsb
xchg
xchg
xor
fs
pop
sti
add
fldl
sbb
and
lock
insl
cmp
adc
sub
jno
arpl
cltd
xor
xor
pop
je
mov
push
xchg
sub
xchg
mov
out
mov
mov
hlt
mov
mov
cmp
dec
icebp
stos
or
ss
in
aad
push
jmp
dec
or
cmp
xchg
iret
sub
sub
inc
pop
xchg
xchg
push
dec
rcll
jmp
shr
xlat
jbe
cmp
lock
cmp
mov
jmp
sub
ds
pop
xchg
sbb
xor
or
mov
adc
in
pop
lods
mov
sub
push
dec
push
rorl
xchg
adc
loop
fsts
push
push
daa
jb
iret
xchg
cmp
inc
cmp
mov
dec
mov
inc
lret
xchg
lahf
or
aam
jno
mov
jl
jb
adc
mov
dec
jb
jbe
movsb
dec
loop
fisubs
std
ljmp
mov
push
push
xor
jb
inc
cmp
adc
imul
adc
push
pop
xchg
mov
data16
dec
inc
sbb
in
popf
xor
or
jge
cmp
cmp
cmpsl
aas
in
or
clc
push
rcll
jg
mov
mov
jle
movsb
loope
pop
dec
insl
lods
js
fists
mov
fbstp
in
cmpsb
pop
into
pop
out
jle
mov
push
cltd
test
xor
cmpsl
push
inc
fidivrs
cmp
mov
push
icebp
out
xchg
test
dec
lock
sub
movsb
jecxz
negb
sub
push
cmp
push
mov
in
stos
sub
jbe
push
imul
pop
mov
pop
xor
jmp
mov
inc
mov
inc
push
add
dec
jmp
xchg
cmpb
out
jne
pop
adc
cmp
mov
imul
addr16
pop
xchg
add
mov
jo
or
dec
popf
xchg
test
imul
and
out
sbb
inc
cmp
or
and
pop
dec
mov
mov
rcrb
adc
mov
or
cmp
mov
cmp
or
aas
movsl
dec
iret
push
mov
and
lea
in
xor
inc
dec
mov
adc
cmp
mov
push
sub
xchg
data16
mov
js
es
and
popa
out
lret
mov
xor
xor
jmp
jbe
push
or
mov
stc
sbbb
imul
jno
ljmp
js
popf
or
adc
or
jae
loopne
sub
inc
outsb
repz
ficompl
mov
fsubrs
mov
push
mov
pop
scas
scas
or
push
or
int
jb
pop
movsb
pop
xchg
fptan
xchg
dec
lock
test
add
lods
sub
ja
movsl
mov
cld
push
test
inc
push
cmp
pop
mov
mov
pop
mov
pop
outsl
lock
xchg
jbe
fimuls
hlt
mov
in
out
adc
cmp
inc
inc
pop
stc
adc
jmp
jmp
mov
popf
orb
ja
ret
jnp
std
push
push
xor
add
inc
movsl
ja
sbb
cltd
andl
cmp
dec
push
xor
cltd
stos
es
xor
push
into
stc
nop
add
push
cmc
jae
stos
frstor
xchg
test
jp
mov
inc
popa
fucom
lds
pushf
inc
mov
inc
inc
insl
lahf
notb
cld
movsb
out
ljmp
mov
mov
sub
loop
outsl
icebp
push
sbb
test
adc
mov
push
xor
push
adc
das
inc
add
jnp
pushf
jb
mov
fs
and
lock
dec
and
jl
test
lcall
add
sbb
adc
loop
dec
repnz
lahf
dec
test
out
lods
mov
jl
jnp
repnz
sti
pop
cmc
test
xchg
mov
sub
sbbb
fdivr
push
shl
sbb
fsts
or
sbb
adc
mov
in
cwtl
fidivl
bnd
subl
ret
fnsave
sbb
push
dec
jmp
loop
pop
in
rcr
jb
sahf
lock
jle
adc
insl
addb
cwtl
mov
dec
pushf
jmp
mov
mov
stos
out
test
cmp
lods
cmp
adc
jae,pn
sub
xchg
nop
ljmp
repnz
jnp
cmpsl
sarl
jno
add
test
test
and
out
mov
int3
mov
inc
mov
scas
inc
xor
mov
xor
mov
jmp
and
shrb
sahf
mov
jne
call
mov
test
in
mov
pop
std
psrad
scas
dec
cmp
adcl
fisubrs
test
push
mov
iret
data16
les
dec
xchg
sub
fisubs
call
sti
dec
push
jbe
sbb
xor
js
or
push
movsl
xchg
jae
insb
mov
in
repz
repnz
hlt
lcall
jle
pusha
jmp
imul
cs
lahf
imul
fsubrl
ja
push
fs
aas
sub
or
push
push
xchg
pop
icebp
sbb
repnz
jle
mov
inc
fdiv
mov
cmp
sahf
xor
pop
cld
aaa
mov
shrl
popa
imul
leave
cmp
cltd
push
repnz
fs
bound
sti
jo
fiadds
and
adc
jg
adc
aaa
in
scas
mov
add
adc
pop
pop
lahf
mov
cmp
xchg
inc
jge
xchg
es
push
daa
inc
cltd
push
xor
data16
aad
push
fld
rcr
cmpsl
lds
out
test
pop
dec
lea
mov
push
mov
inc
incb
shrl
add
lahf
add
sti
jp
scas
fwait
scas
fildll
adc
outsl
and
es
fs
inc
insb
sub
xchg
push
test
out
out
icebp
sahf
sub
sahf
mov
sbb
push
shr
pop
jg
pushf
movsb
test
out
test
ret
arpl
inc
outsl
jp
popa
pop
or
or
and
iret
jae
adc
cltd
mov
jbe
mov
adc
imul
push
dec
sbb
ljmp
or
shlb
test
lcall
jns
iret
aad
add
push
in
mov
cmp
insl
cwtl
gs
mov
adc
sti
jg
xor
int3
jne
inc
into
std
cmpsl
mov
imul
roll
popa
rorl
fst
pop
sub
xor
pop
jge
cmp
sbb
and
aas
punpcklwd
aad
cmp
push
lcall
xor
movsb
jb
and
mov
and
fiadds
lea
out
fidivrl
ds
cmp
mov
cmp
and
xchg
cli
sbb
sbb
dec
repz
test
inc
shl
aaa
mov
sbb
mov
aaa
lret
stc
aaa
popf
sbb
jg
cmc
mov
out
cmp
lea
lret
push
sbb
lsl
aaa
jns
cmp
sbb
mov
lea
add
dec
xchg
imul
jns
bound
jb
jo
cmp
fnstcw
jecxz
subl
push
pop
and
lahf
pop
inc
in
mov
test
sub
dec
or
jmp
int3
sbb
and
pop
or
xor
push
out
xor
adc
aam
imul
xlat
jmp
push
ret
pop
pop
cmp
cld
or
and
loop
xchg
adc
pop
das
popa
mov
rclb
in
push
jge
orb
lahf
push
lahf
mov
fildll
dec
gs
stos
popf
mov
dec
inc
mov
mov
add
push
jno
push
xchg
sbb
mov
dec
dec
imul
nop
xchg
inc
sub
lods
cld
in
dec
xor
dec
outsb
cmc
mov
fstpl
mov
or
out
pop
add
dec
lahf
inc
test
cmpsl
repz
mov
xchg
shll
out
xchg
add
pop
sub
lods
push
mov
cmp
es
loopne
mov
mov
adc
aad
jo
add
adc
and
ret
jnp
cmp
and
popf
ret
pop
mov
sahf
lods
jae
xchg
test
popf
roll
add
dec
dec
push
pop
xor
cmp
and
add
sub
dec
pop
mov
pop
cmpsb
or
inc
in
clc
aad
push
mov
ljmp
sub
stos
inc
sbb
mov
test
or
fistps
jl
and
scas
xchg
xor
dec
aaa
xchg
ret
js
scas
test
scas
hlt
test
clc
add
repnz
sarb
ficomps
dec
cmp
mov
ds
fisubl
push
sbb
daa
inc
into
and
jo
stos
jno
xorb
sub
push
adc
mov
mov
enter
scas
insl
je
mov
jno
pop
adc
stos
pop
pop
adc
or
cmpsb
add
or
xor
pop
jno,pt
sbb
mov
push
cmp
mov
pshufw
pop
in
xlat
jb
fucom
pop
jecxz
stc
or
dec
sbb
stos
ljmp
out
into
loop
das
jge
cmp
ja
test
out
mov
fwait
adcl
hlt
pop
ss
pop
adc
cwtl
nop
fdivrl
stos
incl
testb
dec
addr16
mov
into
push
add
inc
lods
outsl
xchg
inc
pop
sub
stc
pop
jno
cmp
push
mov
test
dec
bound
mov
movsl
jns
push
movsb
int3
mov
ss
push
rep
decb
sbb
and
iret
into
data16
mull
adc
ss
inc
sbb
mov
push
mov
lret
jmp
sbb
and
test
mov
jl
mov
mov
lds
mov
mov
push
divb
pop
sahf
push
mov
jl
xchg
mov
lds
cmpsb
cmp
adcb
or
out
dec
sub
lods
or
sbb
mov
xor
or
mov
out
test
test
sub
inc
mov
test
lock
ja
mov
inc
mov
jge
fnsave
mov
lds
sti
xchg
test
cwtl
ja
mov
cwtl
xor
push
and
test
add
dec
dec
lea
icebp
or
dec
loop
push
lock
mov
dec
xor
clc
jp
cli
je
xor
sti
lods
fisttps
addr16
xorl
mov
jo
jl
cmp
inc
sar
jno
ljmp
fadds
clc
xchg
je
mov
les
popf
fstpt
dec
das
fidivl
sbb
dec
sub
add
jl
aaa
jp
loopne
mov
cmpsb
mov
rcrb
std
sub
push
push
scas
inc
ret
mov
mov
push
gs
idivl
bound
mov
lods
repnz
pop
sti
dec
push
sub
adc
outsl
mov
hlt
mov
pop
xor
push
xor
push
xor
pop
dec
shr
pop
sbb
or
cmp
adc
cmpsb
push
lcall
popa
and
repnz
pop
xor
jge
out
aaa
ret
sbb
dec
and
rorl
stc
mov
pop
jno
insl
test
mov
sbb
outsb
mov
into
repz
cltd
int3
dec
out
fildll
inc
mov
loope
and
or
xor
fsubrl
sub
cmc
jns
pop
cwtl
mov
dec
jle
ds
dec
add
sbb
mov
aaa
push
jmp
sbb
cmp
xlat
add
pop
mov
scas
daa
dec
push
and
mov
push
arpl
mov
xor
mov
pop
jb
scas
jo
sbb
xorb
mov
ret
mov
ss
shll
outsl
jae
dec
out
scas
shl
rclb
leave
fdivrs
scas
test
mov
sub
movsb
jp
stos
lahf
xor
sbb
xor
inc
pop
lock
cmp
jno
pop
or
subl
aas
jl
mov
mov
pop
mov
arpl
or
jecxz
movsl
aam
stos
jnp
in
cmp
enter
jb
cmp
xlat
loope
mov
je
mov
xchg
pop
mov
xchg
and
xchg
pop
out
push
std
jg
sbb
or
jns
push
loope
push
mov
mov
in
cmpsb
mull
outsl
inc
loopne
negb
push
outsl
mov
push
jmp
idivl
jnp
and
aaa
adc
mov
gs
pop
inc
push
inc
iret
xchg
insl
or
into
pop
js
hlt
jg
pop
pop
movsb
cmp
loop
mov
mov
inc
insl
jbe
stos
iret
fildl
out
or
ljmp
aad
fcomps
pop
sub
pop
mov
lcall
pushf
inc
sahf
ss
push
and
mov
sarb
add
hlt
iret
int
ljmp
call
cmpsb
sbb
and
clc
sahf
jle
les
inc
fisubs
hlt
enter
inc
addl
test
jo
dec
mov
mov
cltd
pop
outsl
xlat
jbe
mov
and
push
sbb
mov
daa
jbe
pop
inc
add
movsb
in
xor
pop
imul
cmpsb
jge
dec
push
push
ret
xchg
add
ret
sti
push
fs
xchg
adc
out
pop
sbb
shlb
fsubs
xchg
inc
dec
dec
mov
aaa
adc
ret
gs
lods
dec
mov
adc
push
jo
cmpsl
mov
inc
sub
jmp
mov
xor
sub
scas
sub
xchg
xor
push
call
lock
cmp
mov
rorb
loope
sub
pop
mov
fsubrs
and
js
hlt
adc
lcall
pop
in
fisubrl
jae
scas
ret
dec
pop
cs
idiv
dec
gs
adc
nop
push
dec
xchg
sub
sub
mov
data16
leave
arpl
pop
pop
xchg
rcrl
mov
add
inc
xchg
xor
mov
leave
scas
cmp
das
xor
inc
add
dec
push
push
js
cmpl
xchg
call
dec
add
mov
movsb
repnz
sub
pop
lahf
lods
jnp
mov
icebp
mov
lcall
into
in
inc
jns
pop
dec
das
jmp
ja
push
in
xchg
add
outsl
scas
ds
cmp
mov
ljmp
mov
xchg
aaa
mov
mov
aaa
movsb
scas
lcall
add
bound
sbb
xchg
xor
in
inc
lret
sbb
and
sbb
mov
shl
fs
mov
add
jg
iret
ret
arpl
jp
mov
add
inc
fs
or
bound
cmp
imul
enter
loopne
aam
sbb
inc
arpl
ror
sbb
dec
dec
add
push
dec
mov
push
mov
pop
or
andl
inc
add
mov
ss
imul
outsl
repnz
ret
xchg
inc
jmp
add
sbb
or
adc
std
iret
mov
mov
rorb
mov
adcl
dec
xchg
add
xor
mov
test
xchg
fsubr
dec
ds
push
mov
popf
clc
sbbl
hlt
bound
addl
shll
ja
int
dec
fimuls
ljmp
lods
xchg
add
add
imul
push
int3
imul
pop
and
clc
sub
ss
mov
inc
push
hlt
testl
push
mov
ficompl
outsb
push
inc
mov
gs
dec
push
rolb
clc
cmp
cmp
rcl
dec
lea
iret
mov
insl
shll
fs
enter
sub
cs
mov
xor
insl
aam
rcrb
pop
mov
in
adc
aam
dec
mov
push
push
xor
in
pusha
mov
lret
xlat
add
adc
fcompl
mov
adc
das
xchg
ret
xlat
mov
push
repnz
ljmp
mov
aam
addr16
push
leave
inc
and
pop
iret
xchg
jmp
cli
shrb
pop
stos
nop
push
call
int
xor
pop
cmpsl
cmp
cmpsl
daa
iret
fs
loopne
xor
cs
lods
add
ja
or
sarl
cmp
mov
lock
dec
loopne
sbb
test
aam
inc
pop
jg
cmpsl
mov
fldcw
or
orl
dec
icebp
fdivs
stos
data16
cmp
pop
and
xchg
fnstsw
or
aam
jp
add
gs
and
mov
insb
ficompl
jg
jb
nop
movsb
jmp
sbbb
sbb
xchg
inc
jg,pt
add
jl
std
mov
fsts
bound
dec
aam
mov
xchg
jle
cmpb
ljmp
mov
adc
cmp
leave
jnp
sbb
add
mov
xor
leave
loopne
sar
and
mov
test
jp
push
jns
nop
sub
pop
imul
daa
test
mov
inc
mov
imul
mov
adc
lods
push
add
push
pop
xor
lret
xchg
xor
ja
stc
out
dec
ljmp
or
jno
ret
sub
dec
mov
xchg
add
bound
lret
orl
pop
push
mov
mov
jmp
mov
ret
insl
inc
push
dec
cmc
mov
jbe
push
rorb
and
cwtl
jns
andl
int3
movsb
push
ljmp
sti
push
pushf
rcr
cmp
arpl
cltd
cmp
cmp
jge
pop
or
in
add
mov
adc
dec
fdivs
push
stos
sub
cmpsb
dec
xchg
cmpsb
adc
ret
movsb
cmp
mov
sub
scas
inc
fld
lods
daa
test
int
sub
scas
mov
xchg
sub
cmp
in
inc
sbb
pop
sub
mov
gs
push
xchg
in
add
mov
notl
roll
jmp
and
ret
push
push
push
shrl
mov
data16
push
push
cmp
sahf
shrl
rcrb
push
add
addb
inc
sub
pop
daa
push
aam
in
movsb
cmc
adc
xor
vpsubq
popa
adc
ss
shr
and
test
lret
in
std
pop
pop
xchg
cmpl
lcall
adc
es
or
les
cmp
push
gs
gs
xchg
xchg
rcrl
dec
cwtl
lds
or
cli
inc
mov
jg
pop
ffreep
in
jmp
or
jge
fistl
xchg
jb
adc
decb
xchg
sbb
nop
sbb
lahf
leave
pusha
or
add
push
cmp
fadds
mov
or
or
daa
call
pop
sub
sbb
sub
mov
cli
jecxz
out
xchg
xor
das
testb
loope
lahf
xchg
int
icebp
popa
hlt
loopne
add
aaa
aam
imul
repnz
fsub
mov
mov
insl
inc
lea
lcall
push
inc
push
xchg
jmp
push
int3
outsb
cld
iret
push
ljmp
in
ret
dec
jns
ljmp
jmp
and
fwait
test
xchg
pop
idiv
sbbb
cmp
xchg
in
or
pushf
xor
loop
mov
add
aaa
int
test
aad
imul
mov
jne
sub
cmpsb
fidivs
ret
jne
mov
int
jno
cmp
in
xchg
cmpsl
ds
repz
push
rorb
mov
dec
or
hlt
mov
stos
xchg
loope,pt
push
mov
ret
in
enter
sarl
xor
mov
data16
cld
cltd
outsl
or
rcl
push
lods
shrb
push
hlt
or
aad
xchg
sub
mov
ror
out
test
mov
or
add
inc
daa
sub
imul
mov
jae
out
lods
sar
cmpsb
sbb
jp
loop
pop
jg
mov
or
test
mov
cs
cmp
mov
and
in
xchg
xchg
cmp
test
pushf
inc
ret
test
lahf
sub
sbb
jnp
adc
adc
ds
jge
stos
mov
jecxz
gs
cmpsl
out
pop
xchg
stos
and
jbe
dec
test
std
lods
cld
inc
push
popf
jbe
out
sbb
adc
pop
fiadds
dec
fnsave
lods
mov
iret
push
xchg
pop
cmp
ficomps
push
stos
leave
adc
out
std
jae
dec
lahf
and
xchg
iret
jo
mov
xchg
mov
cmpsb
dec
jbe
xchg
cmp
pop
fadds
insb
fisubl
mov
rclb
mov
inc
sub
adc
outsl
mov
sbb
or
mov
sti
inc
jle
xor
jno
xchg
xchg
push
mov
adc
es
mov
push
push
mov
pop
xor
rclb
or
pop
pop
icebp
push
dec
sbb
adc
push
rclb
mov
ja
sub
incl
mov
pop
movsl
ljmp
and
std
pushf
adc
mov
inc
faddl
push
jns
fcmovnb
pop
or
das
in
inc
call
aam
mov
call
lret
shlb
mov
faddl
sbbb
std
fdivs
mov
xlat
sahf
test
xchg
jl
ss
jae
jb
inc
push
lahf
xchg
xchg
pop
mov
test
rol
push
out
sahf
dec
lret
mov
mov
sbb
fcmovnb
sbb
mov
lock
cmp
roll
mov
mov
jge
sub
int3
mov
not
push
push
add
mov
stc
test
mov
inc
jle
cld
push
inc
xor
das
in
rclb
mov
popa
add
hlt
ss
ret
xchg
ljmp
lods
adc
xchg
in
jbe
sbb
fwait
jb
pop
mov
flds
mov
andl
xchg
adc
push
ds
das
lods
outsl
lds
mov
mov
sti
mov
pop
jbe
rolb
or
push
add
shrb
mov
lahf
xor
int3
push
and
ja
dec
test
int3
xchg
addr16
jp
sbb
adc
ja
jmp
into
jnp
lods
mov
xchg
cltd
adcl
adc
ljmp
jb
movsb
adc
test
jp
insl
nop
mov
icebp
mov
jle
inc
js
dec
adc
or
popa
xor
adc
roll
ss
mov
dec
loopne
xorb
sub
out
xor
inc
loopne
pop
and
dec
mov
pop
mov
dec
cs
cmc
sbbl
cmp
lahf
bound
and
decl
pop
movsl
movsb
push
shrl
or
or
mov
xchg
mov
pop
sub
push
push
lret
adc
fstpt
mov
out
fists
jb
fadds
insl
jp
sbb
adcb
jae
clc
ss
clc
mov
roll
dec
testb
mov
shr
mov
arpl
xchg
and
jge
in
fsubp
sbb
pop
cwtl
mov
cmpsb
xchg
repz
nop
xor
jle
ret
cmc
push
sub
sub
add
movsb
jae
mov
add
sub
fwait
xor
pop
sub
shrl
aaa
mov
add
mov
add
sub
mov
or
in
inc
in
icebp
scas
sbb
sbb
xor
and
jp
cltd
sub
out
xchg
js
decb
inc
arpl
loopne
mov
iret
push
jge
xchg
int
or
push
adc
mov
mov
pop
cltd
movsl
push
enter
sub
js
fwait
mov
je
add
aaa
cmp
loope
or
into
fadd
insb
pop
scas
mov
and
pusha
push
add
shll
jne
cmc
and
xor
std
lret
sub
cli
test
xchg
inc
lcall
stos
dec
and
cltd
je
sahf
dec
rolb
xlat
sub
je
lock
lds
xchg
aas
in
push
mov
mov
jne,pt
push
jmp
xchg
add
lock
and
les
push
insb
repz
std
or
sub
sarl
mov
shll
lods
aam
lahf
adc
push
iret
out
mov
data16
mov
mov
add
fs
test
jg
and
aad
mov
lds
movsb
aad
push
mov
hlt
xchg
and
adc
mov
shrl
adc
sahf
jns
ss
sbbb
ljmp
sub
adc
repz
jns
mov
test
ds
sub
sbb
pop
fldenv
pop
add
rcrb
ds
adc
mov
mov
ljmp
pop
jb
repnz
loope
pop
adc
mov
mov
repz
fcoml
in
mov
test
jge
push
loop
gs
sbb
sbb
inc
loope
mov
pop
or
sub
or
add
adc
or
xlat
in
xchg
lods
push
add
jecxz
cmpb
sbb
fsubs
or
inc
mov
loop
jmp
dec
or
mov
lcall
and
jbe
dec
leave
or
push
jl
xor
popf
lcall
push
outsb
out
inc
pop
call
or
ffree
sub
push
insb
std
enter
popa
and
rorb
arpl
js
cmp
movsl
sbb
call
ds
das
movsl
enter
jge
add
sub
neg
test
adc
fadds
jns
in
push
push
fcmovb
in
cld
les
sub
inc
mov
xchg
pop
sbb
ficoms
outsb
add
jbe
jbe
adc
xchg
dec
mov
arpl
insl
sbb
mov
inc
jecxz
into
rcrl
xchg
cmc
mov
xor
xchg
mov
and
ja
into
test
mov
pop
pusha
popl
out
sbb
testl
rol
ljmp
loopne
lock
fdivs
push
pop
in
cli
fwait
cmpsl
sub
fiaddl
in
push
mov
sar
xchg
inc
mov
sbb
pop
xchg
aaa
xchg
test
fisubs
or
mov
cmp
pop
pop
in
adc
xchg
mov
lret
xor
mov
push
mov
fsub
sbb
adc
and
ret
shll
in
inc
testl
iret
inc
add
lock
and
mov
ljmp
push
inc
popf
mov
int3
push
clc
push
out
jecxz
pop
jecxz
mov
mov
insb
les
pop
push
dec
push
fcmovb
imul
shrl
jge
jecxz
mov
addl
jo
lret
mov
arpl
inc
jns
inc
loope
bound
iret
paddsb
testl
push
in
adc
xchg
mov
int3
pop
dec
cmpsl
push
cmpsb
movsl
mov
adc
jb
adc
enter
mov
ja
shll
jge
fs
sbb
xchg
sbb
enter
in
or
mov
push
xchg
ljmp
xchg
push
and
sbb
cwtl
roll
arpl
rcl
mov
repz
xchg
int3
test
les
push
in
cmp
ret
dec
pop
hlt
cmc
ds
mov
cmp
imul
hlt
sub
cmc
loope
pop
stc
jne
jp
pop
stos
mov
loope
imul
push
push
adc
jl
gs
mov
adc
cmpsl
lea
pop
sub
outsb
mov
xchg
testl
mov
push
loope
adc
fdiv
jo
mov
fistpl
jno
sbb
jp
movsb
imul
out
popf
ret
imul
lock
iret
shrl
je
movswl
sub
pop
adc
ljmp
cmp
cmpsl
mov
subb
add
scas
mov
cmp
outsl
and
fdivrl
in
insb
cmp
dec
xor
dec
add
cmp
enter
repz
mov
mov
pushf
cld
test
mov
cmp
xchg
cs
popa
lret
xor
addb
lcall
movsl
jbe
push
fisttpl
adc
mov
cmpsb
hlt
xlat
lar
mov
in
std
dec
test
jno
daa
sub
adc
jecxz
xchg
push
xlat
or
adc
push
pop
jge
pop
dec
test
roll
add
fldln2
test
ret
cmpsb
sub
push
pushf
dec
scas
inc
jl
lods
inc
mov
push
lret
out
stc
push
xchg
adc
jbe
sbb
jns
mov
pop
stc
push
sbb
lods
push
cld
scas
lea
pop
mov
insb
xor
dec
xchg
ds
xor
loop
out
pop
hlt
test
ljmp
pop
dec
sbb
daa
mov
cmp
ret
rorb
int
mov
aad
xchg
adc
out
xchg
push
xchg
push
inc
cmpsl
and
pop
popa
xchg
jns
sti
movsb
iret
jl
std
pop
jg
push
push
mov
or
in
jmp
and
mov
xchg
pop
cmp
pop
call
dec
and
mov
lret
sbb
cmpsb
mov
jle
add
dec
lods
ljmp
call
lahf
cmp
into
lods
xchg
inc
or
sub
jbe
pop
out
mov
pop
dec
test
aaa
add
insl
scas
mov
mov
mov
shlb
mov
push
rorl
add
jg
cmpsl
imul
loopne
mov
xchg
push
shll
push
into
xor
pop
mov
xchg
loopne
sbb
adc
jp
std
cltd
adc
ret
cmp
test
adc
stos
lea
adc
icebp
in
ror
mov
jge
pop
divb
repz
ss
lea
es
nop
lret
jno
jle
jecxz
xchg
adc
dec
ss
ss
xor
fbstp
ficoml
dec
add
sti
dec
mov
adc
jl
cmovae
adc
mov
orl
mov
jl
cmp
les
xchg
sub
pop
ljmp
cmp
test
push
add
adc
push
js
stos
stc
cmp
lcall
test
dec
stos
push
jbe
enter
pop
cmpsb
push
movsb
rolb
push
sbb
xchg
push
jmp
movsl
cmp
pop
or
in
ds
stc
add
adc
pusha
inc
incb
popf
in
sbb
fwait
shrl
xchg
test
sarl
sbb
jae
fmull
dec
jbe
je
rcll
adc
add
js
dec
mov
jl
sbb
mov
test
aam
and
xchg
mov
ficoml
xor
rcr
ja
pop
jl
fwait
jnp
add
arpl
xchg
mov
adc
outsl
dec
lods
push
fsubs
xchg
stc
loopne
lods
ja
xchg
dec
cmpsl
pusha
xor
and
pop
fdivr
lahf
daa
add
fidivs
mov
add
out
or
in
mov
out
cld
xchg
mov
lods
sbb
shll
ret
cmp
stos
pushf
jmp
movsb
ret
in
sbbb
and
jns
and
daa
adc
and
jo
stos
cltd
je
push
and
ljmp
insb
loope
dec
jb
cs
lods
sbb
scas
sub
fs
or
mov
cmp
mov
xchg
inc
fbstp
sbb
mov
mov
xchg
mov
testl
mov
cwtl
cld
bswap
mov
add
pop
push
testl
mov
xchg
cmp
pop
cmpsb
rep
or
and
movb
push
xchg
add
into
and
or
rcrb
add
mov
lcall
sub
outsb
rcrb
push
lcall
sbb
pop
shrb
xor
arpl
enter
push
sbb
and
add
movsb
jge
cmpsl
lds
mov
add
xor
lret
mov
push
sbb
mov
xchg
sbbl
inc
push
cwtl
mov
mov
cld
dec
loop
pop
sbb
pop
fdivs
mov
push
dec
mov
addr16
dec
fstpl
mov
test
test
mov
mov
add
or
fs
test
jbe
fnsave
push
scas
add
mov
stc
add
insl
sahf
popf
pop
movsb
stos
sahf
aaa
call
int3
jo
add
xchg
and
push
movsb
mov
popa
xor
xor
xchg
push
push
popa
add
adc
xchg
xchg
int3
insb
fisubrl
xlat
fwait
outsl
ds
imul
adc
fwait
das
dec
pop
les
jecxz
mov
int
lock
shl
aaa
lea
jae
daa
xchg
pop
cltd
lahf
cmp
cld
fisttpll
imull
jecxz
das
adc
mov
push
mov
sahf
outsb
test
mov
xchg
shlb
test
push
sti
fwait
repz
js
jmp
sbb
xchg
dec
pop
cwtl
testl
mov
push
xchg
sbb
out
inc
mov
inc
out
push
int
mov
test
and
int3
adc
gs
shr
mov
fs
sarb
jne
add
insb
adc
ret
push
xor
push
lret
out
jo
inc
push
fadd
outsb
pop
outsl
jns
subw
cmp
ljmp
or
adc
ljmp
cltd
aaa
add
imul
and
enter
jp
cmp
and
jg
hlt
mov
in
ds
and
adc
inc
push
sbb
in
mov
pop
ljmp
push
add
pop
dec
test
cltd
xor
sub
push
jae
sub
inc
mov
push
jge
xor
pop
shll
pop
insb
add
popa
sbb
shrb
add
add
push
cmp
in
jbe
loope
cmp
pop
in
sbb
nopl
fisubl
stos
xchg
and
je
fidivrs
jns
inc
in
mov
xchg
or
jae
push
adc
ror
sti
je
ss
mov
fidivl
call
lea
xchg
pop
jmp
iret
mov
and
aam
dec
push
gs
icebp
push
jle
ret
shrl
ret
ss
lods
dec
dec
sub
jmp
inc
adc
adc
lods
fs
dec
fmull
pop
jnp
add
ss
and
ret
aad
fadds
pop
popa
clc
mov
inc
faddl
or
test
cltd
sti
mov
add
cmp
sbb
inc
ret
in
or
movsl
jno
dec
inc
xor
sbb
cmpsl
rolb
fmull
pop
push
movsl
in
adc
cld
xlat
or
test
cmpsb
mov
add
arpl
scas
lahf
ljmp
xor
push
add
dec
cld
lods
out
mov
mov
jmp
and
mov
add
xor
fmulp
mov
lret
dec
mov
jecxz
dec
add
xchg
add
ljmp
push
cltd
lret
loope
and
and
mov
cmpsl
mov
or
mov
stc
mov
and
push
inc
sti
lods
leave
mov
mov
xchg
jl
fadd
cmp
jl
xchg
in
mov
push
push
jle
leave
dec
arpl
mov
adc
gs
xchg
dec
xchg
jp
adc
mov
js
js
test
xchg
ja
inc
out
icebp
insb
aad
int
and
lods
mov
repnz
nop
sbbb
je
adc
jecxz
out
adc
iret
mov
mov
sbb
movsl
jecxz
imul
clc
mov
es
push
mov
cmp
fidivl
pop
popf
inc
add
sub
fstps
dec
jge
pop
addr16
fists
sbb
or
aaa
jecxz
or
ljmp
iret
pop
fldpi
test
scas
cs
fstpt
es
in
jne
inc
pop
shlb
fdivr
xor
adc
push
xchg
sbb
pop
leave
lock
pop
je
aas
jge
in
add
setge
and
xchg
je
sub
pop
mov
adc
pop
fsubl
and
inc
adc
stc
daa
mov
mov
in
jbe
arpl
xchg
pop
fnstenv
mov
fabs
cmp
xchg
xor
mov
cmp
push
dec
ss
mov
in
sbb
xchg
push
ret
push
out
jmp
lret
stos
out
stos
mov
in
mov
pusha
stc
inc
push
or
push
push
add
mov
jo
xlat
ljmp
mov
cld
ret
adc
pushf
xor
cmp
xor
stos
mov
jnp
add
push
dec
notl
leave
fistpl
jnp
gs
pushf
pop
mov
shlb
scas
sbbl
insl
and
cmp
push
cmp
js
add
mov
dec
cmp
mov
or
pop
jmp
mov
adc
pop
lods
ret
mov
cld
adc
push
jecxz
aad
mov
outsl
inc
int3
outsb
add
xor
fistpl
jno
dec
pop
xor
shl
jmp
sub
xor
push
inc
fimull
popa
or
repnz
add
pop
ljmp
aaa
shrl
inc
or
shrl
inc
push
pusha
sub
sbb
cwtl
shrb
mov
sub
subb
jns
test
push
push
rclb
sbb
mov
push
call
jbe
outsl
push
sub
pop
imul
and
fidivs
dec
stos
mov
jmp
mov
fbstp
sbb
std
xchg
imul
jmp
pop
sbb
mov
imul
or
add
sbb
pusha
ret
jno
mov
mov
mov
mov
and
or
sbb
cmpsb
jge
fcoms
mov
outsb
std
aaa
into
gs
call
push
sub
les
lea
daa
popf
fs
sti
shrb
or
jl
jnp
or
into
jns
or
loopne
pop
sub
adc
push
in
insb
xchg
test
mov
mov
pop
das
mov
push
scas
stos
inc
loopne
pop
adc
shlb
mov
or
stos
cmp
aaa
imul
test
push
jb
adc
dec
xchg
xchg
mov
pusha
outsl
push
cltd
aas
lds
xor
lret
pop
hlt
jne
mov
add
out
les
leave
cs
and
cli
xchg
pop
stc
push
push
cs
jb
mov
push
cvtps2pi
movl
mov
loope
cs
pop
out
js
pop
xchg
jl
jbe
adc
jnp
jb
push
push
mov
jne
pop
xorl
outsl
clc
mov
adc
add
fs
push
add
push
bound
out
hlt
lods
shlb
xchg
mov
das
mov
adc
mov
int
sahf
testb
jge
ret
popa
inc
pop
jp
lea
rcl
leave
lds
jae
rcl
sbb
bound
xchg
pop
ss
addr16
jmp
xchg
aad
in
shll
repz
jnp
aam
jmp
push
mov
ja
out
adc
fs
in
outsl
inc
fsubrs
sbbb
mov
idivl
aaa
clc
ljmp
dec
je
dec
decl
pop
out
cmp
ja
dec
loop
repnz
dec
or
adc
int
jl
in
cs
xchg
mov
lds
mov
add
lahf
xor
cs
xchg
mov
xlat
outsb
pop
sbb
mov
lods
repz
and
loop
add
push
xchg
test
cmc
sub
xor
push
das
cmp
cs
mov
in
les
std
jp
mov
mov
rolb
xor
loopne
dec
add
insb
mov
xchg
sbb
sbb
cmc
hlt
popf
inc
push
add
scas
jb
fwait
sub
adc
add
sar
jnp
xor
test
stos
jmp
idivl
adc
adc
and
fldt
add
cld
jmp
ljmp
and
jbe
shlb
in
std
out
jmp
iret
adc
xchg
insl
jmp
ret
in
sbb
fistpl
add
ret
movsl
call
mov
mov
pop
push
in
shl
mov
or
cmp
loopne
xchg
sub
add
cmp
push
fs
rcrb
repnz
jge
or
or
cmpb
mov
dec
sub
cmc
push
cmp
loopne
fs
mov
cmp
popa
test
xchg
int
push
mov
or
jmp
add
or
int3
arpl
adc
jecxz
popf
or
imul
or
sbb
scas
mov
inc
jp
sbb
imul
jg
sub
data16
pop
add
ljmp
inc
pop
lea
xchg
lret
cld
mov
sbb
mov
pop
dec
or
or
jne
jmp
scas
out
or
pop
cs
mov
stos
insl
sbb
outsb
test
jge
cs
je
add
push
shlb
inc
aas
add
mov
jne
in
sub
push
dec
call
in
repnz
mov
push
mov
mov
sbb
lock
sbb
push
cmc
sub
cli
rcl
sub
push
lods
mov
jns
dec
jno
or
scas
or
push
ret
int
mov
sub
das
out
sub
movsl
sbb
sti
xchg
inc
rorl
dec
mov
and
ss
pop
pop
push
test
js
sti
negl
cli
fwait
ret
cmp
inc
popf
addr16
sub
mov
insl
ret
sub
cmp
outsb
adc
shll
or
adc
sub
adc
push
xor
xchg
and
flds
adc
out
xchg
xor
cmp
test
leave
fucomi
and
cmpsb
jmp
ljmp
movsb
or
adc
nop
bound
xchg
mov
fisttpll
ror
stos
add
mov
in
inc
and
xor
outsb
mov
push
test
bnd
mov
fnstenv
sbb
bound
cmp
push
cli
xchg
dec
inc
fs
jle
ficompl
ret
inc
popa
mov
or
add
mov
mov
jne
adc
insl
add
jp
pop
adc
mov
outsb
jne
xchg
sbb
adc
mov
inc
fsts
pop
in
jg
sbb
into
cmpb
ss
aaa
push
in
xor
cmpsb
gs
push
ljmp
out
or
pop
outsb
sub
cmp
add
ss
fdivrl
sar
lods
vpmaxub
mov
pushf
inc
dec
pop
movb
push
lcall
jecxz
and
shl
cmp
mov
ret
fs
sbb
mov
cld
cmp
lods
popf
arpl
lret
pop
sub
add
xchg
loop
sbb
mov
push
inc
push
clc
add
repz
dec
lahf
xchg
mov
fwait
insb
call
adc
mov
xor
push
dec
pushf
shlb
pop
cltd
mov
or
pusha
aad
test
xchg
push
lock
xor
arpl
mov
mov
cmp
sahf
pop
imul
push
jmp
push
and
pop
pop
dec
data16
jns
in
outsl
jp
cltd
imul
xchg
sbb
xchg
jns,pn
dec
popa
sahf
mov
out
mov
cmp
and
pop
push
mov
mov
xorl
adc
cltd
adc
insb
decb
pop
sub
fnsave
fisubs
push
cmp
arpl
or
xor
loop
ja
dec
sbb
push
sahf
daa
stos
into
xchg
sub
cs
fdivp
add
addr16
movsl
mov
mov
fsubr
bound
lds
ds
shl
sahf
lret
fstl
test
test
sub
mov
mov
mov
icebp
mov
xchg
rol
popf
fwait
mov
icebp
iret
data16
and
dec
fldln2
testl
adc
pop
sub
dec
sub
lahf
test
sbb
push
push
jo
test
xlat
mov
cmp
mov
repz
repz
push
rcrb
nop
outsl
ds
insl
inc
push
leave
or
xor
ret
rorb
pop
xchg
mov
je
mov
mov
rol
scas
fxch
ljmp
inc
rcll
cmp
add
xor
jge
push
in
cmpsl
rolb
imul
test
inc
aad
ja
loop
ret
cld
out
jne
cmp
mov
push
xor
add
popa
out
mov
cmpl
xchg
pop
inc
arpl
stc
sub
and
inc
xor
ja
adc
mov
sub
stos
xchg
sub
cmp
fs
scas
inc
movsb
shll
jp
cli
or
dec
dec
adcl
or
sarl
mov
or
mov
ret
icebp
in
inc
cmp
cmp
int3
sbb
sbb
test
fadds
adc
lcall
push
call
jmp
hlt
inc
pop
repz
sbb
dec
in
arpl
jns
lret
icebp
adc
cmp
mov
jnp
es
cs
pop
mov
adc
mov
dec
adc
push
mov
ret
addr16
adc
push
mov
adc
push
shrl
sbb
jno
in
mov
mov
xor
out
leave
pop
xor
les
rcll
std
cmpsl
sub
push
xchg
cmpsb
mov
icebp
adc
xchg
stos
xchg
cld
stc
fiadds
mov
gs
aad
pop
lahf
in
add
jns
test
xor
movl
lea
cmp
push
outsb
add
outsb
cmp
cmp
subb
roll
add
daa
xchg
in
int3
jmp
iret
xor
cmpsl
inc
push
scas
call
xor
and
pop
rcll
xchg
and
pop
icebp
inc
gs
jae
dec
stos
add
adc
sub
and
xchg
pop
push
fisubl
mov
adc
cmc
xchg
dec
addr16
cmp
fmulp
dec
pop
std
add
inc
cli
mov
bound
int3
jmp
cwtl
adcb
jb
in
iret
adc
cmp
cmc
outsl
stos
fsubl
sub
std
xchg
shl
sub
xchg
fs
or
pusha
negb
lock
pop
call
inc
and
cmp
inc
push
pop
das
push
jno
je
std
int3
arpl
repnz
cmp
push
repnz
lock
enter
int3
lods
jbe
or
push
jb
add
imul
pop
outsb
mov
shlb
mov
shrl
jle
loop
cmp
mov
cwtl
loope
decb
sub
in
lret
or
jmp
pop
inc
push
lods
mov
frstor
sahf
popl
jnp
push
ficoml
andb
lret
loopne
cld
mov
movsb
and
dec
loop
dec
lods
pop
repz
sbb
mov
inc
mov
mov
push
pop
cmc
test
ret
pop
out
inc
mov
stc
mov
inc
test
ja
fsubrl
push
out
mov
push
jne
js
fsubrs
fwait
sbb
icebp
dec
imul
inc
cli
sbbb
inc
int3
arpl
and
stos
xor
andl
or
rolb
gs
shr
jne
aas
dec
mov
ja
out
xchg
pop
int3
mov
mov
mov
out
cmpsb
repz
insl
push
rcrl
dec
mov
sub
mov
test
jge
push
pop
lds
add
lods
out
negb
das
and
leave
push
inc
mov
out
jbe
loope
test
inc
repz
mov
sub
and
loopne
std
sbb
rorl
addr16
dec
add
and
push
mul
pop
in
cmp
nop
int3
jg
push
mov
ds
lret
jo
dec
clc
dec
add
mov
cmp
testb
je
pop
mov
imul
mov
push
fdivs
mov
in
daa
int3
rcll
jecxz
loop
test
jae
mov
add
iret
scas
stos
and
repnz
push
scas
jb
push
fstps
mov
mov
scas
inc
movsb
mov
pop
and
arpl
sub
imul
sbb
lcall
divl
xchg
lock
loop
rcrb
mov
pushf
add
pop
movsl
cmp
and
xchg
enter
mov
push
jae
movsb
jle
cwtl
dec
cmp
imul
cwtl
das
sbb
cmp
jb
jae
or
or
pop
cmp
movsl
sbbl
out
inc
dec
dec
push
xchg
outsl
mov
xor
add
in
xchg
addr16
push
mov
jg
dec
sub
imul
popf
and
jno
adc
xchg
jp
lret
cmp
incl
nop
sbb
or
pop
repz
std
cltd
sahf
clc
sbb
mov
pop
pop
push
gs
xor
scas
dec
and
fcoml
inc
pop
pop
adc
testb
fidivrs
jecxz
nop
xor
pop
jns
or
add
pusha
sbb
push
popa
scas
jno
and
fucompp
fmul
push
jb
movsb
jb
test
jne
or
xchg
cmpsb
inc
bound
test
test
adc
push
out
or
enter
pop
xor
iret
push
pop
xlat
in
pop
cli
loopne
mov
aam
arpl
jle
cmp
sbb
cmp
jecxz
arpl
ja
adc
jns
sub
cmp
int
adc
cli
mov
xor
outsl
sub
test
xchg
cmp
inc
xor
loopne
pop
addr16
add
cmp
push
mov
jns
xchg
xor
mov
mov
rol
adc
pop
fisubrs
push
sbb
jae
jecxz
or
cmp
bound
mov
lea
lods
and
mov
mov
inc
int3
xchg
mov
push
mov
loop
push
addr16
cmp
loop
mov
mov
jge
add
mov
dec
mov
inc
cmc
ljmp
jne
push
aam
out
pop
les
ja
pop
mov
push
mov
pop
in
xchg
mov
pushf
push
lea
vmread
pop
jge
aad
cmp
xchg
test
pop
mov
jl
sbbl
lock
sbb
add
in
roll
mov
add
jp
das
pop
fs
js
loopne
cwtl
mov
mov
jae
enter
sub
and
sub
inc
jp
shrl
push
cwtl
add
xor
shl
scas
inc
mov
pop
leave
movsl
xchg
pop
fisubrs
mov
imul
ljmp
stc
sub
cs
mov
cli
popf
int
xor
or
fidivs
mov
jno
xchg
daa
sbb
popa
xor
adc
dec
mov
push
mov
push
and
fwait
mov
ds
or
fwait
movsl
cmp
push
and
rcrb
push
lret
in
xchg
fnsave
aad
mov
aam
xor
mov
adc
push
mov
iret
and
mov
push
cmc
orb
rorl
sbb
scas
cmp
stc
xchg
jmp
mov
cmp
jge
sbb
ljmp
or
push
xchg
jns
ret
ja
mov
hlt
add
add
clc
jmp
insb
lahf
adc
push
dec
dec
sub
mov
scas
mov
stos
inc
dec
fucomip
adc
sbbb
and
sbb
cmp
mov
ss
dec
sarb
push
xchg
push
jnp
or
lret
dec
sbb
jns
les
inc
sub
xchg
push
sti
lods
sbb
fldt
cs
je
xchg
xor
and
xchg
ds
fdiv
pop
or
aam
mov
mov
js
shll
mov
rep
cwtl
mov
cltd
cltd
ds
nop
fs
dec
pop
int
imul
outsl
and
shlb
in
sub
lea
stc
xchg
test
mov
cmpsb
xchg
jne
cmp
ss
fadds
cmp
data16
pop
aam
push
shl
shrb
cli
dec
lods
ljmp
pushf
repz
in
add
inc
rclb
dec
and
cmp
sub
and
pop
dec
and
cld
mov
lcall
pop
in
fwait
sub
xchg
aam
das
cmp
loop
mov
addb
mov
adc
mov
inc
adcl
and
xchg
jl
add
adc
std
or
mov
push
es
cli
push
mov
lods
add
out
jne
js
push
sahf
arpl
fcom
cmp
mov
ljmp
je
fisubl
push
xchg
out
adc
jl
incb
pop
add
fdiv
daa
daa
mov
cmp
in
das
and
dec
cmpsl
push
js
pusha
sbb
push
mov
test
mov
jnp
sbb
xor
xor
ret
shrl
loopne
in
into
adc
mov
lock
jno
xor
push
adcl
mov
fucomi
fistps
roll
push
fldl
repnz
xor
push
or
mov
push
adc
lods
inc
loope
push
es
dec
mov
mov
pop
jnp
push
pop
rol
rclb
sbb
pop
iret
shl
xor
mov
ljmp
dec
push
fnstenv
lcall
jne
iret
ljmp
mov
jnp
cwtl
loop
cltd
mov
push
ds
mov
je
roll
out
adc
lret
cltd
xor
push
push
xor
test
iret
cmp
sbbl
jb
mov
pop
lret
jae
push
pop
inc
push
ja
and
cs
ds
add
ja
ss
pop
fildll
shr
icebp
fldl
lret
xchg
inc
cmp
xchg
dec
jno
fisubrs
jne
ss
movsl
bound
sbb
insl
xchg
adc
inc
sbb
cld
ret
lods
test
mov
imul
adc
push
dec
fmull
nop
dec
sbb
insb
ds
ja
jae
push
xchg
sub
sbb
lret
fnstsw
cmc
dec
inc
ja
push
movsb
aas
lods
inc
jns
js
sbb
test
in
jmp
movl
andl
mov
addr16
fwait
lods
out
push
sahf
inc
in
div
push
call
mov
sub
jge
pop
and
xchg
decl
iret
adc
push
into
dec
cmp
xchg
sti
lea
inc
pop
jae
pop
enter
jo
in
xchg
xchg
cld
scas
inc
fwait
dec
movsl
test
faddp
lahf
pop
jle
ja
mov
insl
lock
test
popa
mov
xchg
cmpsl
minps
xor
sbb
sub
out
lcall
clc
mov
push
insl
sbb
push
inc
add
notl
addb
mulb
fdivrl
mulb
push
sub
push
cmp
cmp
jp
ret
jle
sbb
jae
add
dec
push
dec
adc
rclb
je
imul
mov
iret
mov
dec
xor
fmuls
imul
or
adc
inc
mov
aam
mov
and
das
push
sbb
xlat
iret
ss
outsb
jge
nop
insl
sub
and
adc
mov
icebp
addr16
mov
loope
or
mov
das
mov
jb
jmp
test
push
jecxz
mov
sub
push
xor
jmp
pop
nop
mov
jo
in
sti
jge
xlat
inc
jp
lds
rolb
popa
dec
inc
ficomps
fdivs
leave
test
pop
dec
cmp
sbb
ret
xchg
mov
add
xchg
xor
sbb
and
push
lcall
fsubs
push
add
cltd
out
jno
shll
and
sub
mov
or
inc
jecxz
sub
in
add
adc
lahf
loope
and
jge
dec
leave
sbb
stc
mov
adc
mov
shl
notl
lahf
enter
notl
sub
xchg
pop
les
dec
pop
in
mov
int3
cmp
in
and
fwait
cmp
sub
scas
or
xor
fstl
lahf
dec
sahf
push
mov
movsb
and
in
iret
mov
mov
adc
cmp
inc
arpl
test
cmp
cmp
insb
out
pop
xchg
dec
adc
cmp
pop
mov
or
add
fisubrl
adc
cmpsl
adc
mov
xchg
ss
or
sbbl
cs
push
inc
or
sub
ss
out
cmp
ljmp
xor
lds
cmp
sub
jecxz
inc
jg
xor
mov
xchg
out
pop
out
test
mov
ljmp
or
aaa
lea
pop
jge
leave
sub
int3
js
sub
pop
push
into
and
test
bound
xchg
mov
movsl
jo
or
dec
xchg
sub
and
pop
stos
adc
dec
out
test
sbb
lods
xchg
jle
push
sub
xchg
mov
repz
clc
adc
push
sbbl
sbb
inc
sbb
clc
inc
pop
out
out
mov
dec
dec
xchg
adc
test
mov
pop
dec
inc
pop
sti
and
out
pop
add
cmpsl
ret
movsl
lds
sbb
pop
or
jge
adc
and
xchg
add
xchg
rol
lahf
pusha
into
pop
lea
ret
fistpll
sbb
daa
das
cmpsb
sub
dec
in
xor
push
mov
inc
outsb
daa
sub
inc
dec
and
aas
or
out
jmp
mov
outsl
mov
dec
jns
push
aam
mov
dec
jb
mov
push
push
icebp
inc
sbb
jle
sub
mov
pop
insb
ds
leave
loope
les
mov
xlat
imul
in
cmpl
xor
inc
xor
js
and
jl
inc
pushf
xor
sbb
xchg
dec
das
cmpsl
pop
adc
enter
dec
mov
inc
mov
fldenv
rcrb
movsl
push
test
push
lods
jo
ja
rorl
push
mov
shlb
xchg
add
fisubrl
fwait
jle
ja
inc
cs
stos
push
push
out
pop
movsb
mov
adc
cmp
and
xorb
out
sbb
leave
xor
pop
movsl
sahf
call
into
pushf
inc
sbb
rcrl
mov
sub
mov
and
cld
pop
inc
adc
adc
sub
lret
jae
mov
aad
mov
pushf
jne
cli
nop
xchg
mov
out
mov
lahf
lods
mov
push
pop
jmp
dec
sbb
add
pop
stc
js
mov
mov
xor
or
stc
andl
or
popa
inc
pusha
rcll
insb
mov
loop
lret
mov
subl
dec
adc
inc
xor
ja
sbb
pushf
push
mov
jo
jmp
fidivl
pop
mov
fpatan
outsb
fnstenv
cmpb
sub
arpl
xor
jmp
push
and
add
mov
in
into
add
xchg
inc
ret
pop
inc
fcmovu
jp
loope
inc
loopne
inc
sbb
jns
cmp
cwtl
pop
push
mov
imul
insl
cwtl
out
sbb
add
out
and
sbb
mov
insl
testb
sub
lds
or
aam
push
aas
mov
mov
sub
stc
fsub
int3
mov
xor
rorl
push
pop
xor
sbb
stc
mov
inc
adc
and
sub
jb
aaa
xor
aam
or
or
mov
in
aas
and
add
mov
cwtl
pop
xchg
cmpsl
jp
pushf
jae
mulb
jbe
pop
scas
jne
icebp
rolb
outsl
notl
mov
leave
mov
lret
lock
ret
fldl
push
movsl
and
repnz
and
jecxz
testb
sbb
out
sub
addb
or
cwtl
hlt
or
loopne
mov
pop
loope
xchg
sub
fwait
mov
imul
fidivl
xor
add
adc
std
adc
iret
inc
sub
std
xchg
movsb
and
xor
icebp
cld
xchg
jecxz
cli
and
and
out
add
in
dec
sub
test
shrl
in
pushf
lea
jge
test
es
cli
pushf
dec
imul
sbb
cmpb
aad
rol
lret
mov
xchg
inc
rcrb
repnz
loope
sub
mov
dec
js
jp
xorb
int3
xchg
in
stos
stc
addl
inc
push
xchg
popa
arpl
mov
faddl
shlb
push
jp
jge
int3
jecxz
sub
jp
insl
lahf
ss
cltd
or
movsl
mov
icebp
pop
pusha
mov
sub
push
cld
push
dec
inc
dec
mov
jns
add
addl
jmp
inc
adc
in
add
push
sbb
ljmp
mov
fcompl
push
pop
xlat
push
mov
jno
mov
push
xor
ja
mov
iret
fists
lret
jbe
shlb
lahf
dec
mov
lret
adc
clc
ljmp
daa
fmuls
sub
loope
add
mov
dec
xor
push
es
into
pusha
orb
xor
shll
push
inc
jg
xchg
andb
test
jae
sbb
imul
or
loope
or
jae
push
sahf
xor
xchg
xor
sub
fnstcw
stos
inc
xorl
mov
shrb
es
stc
push
and
daa
shrb
jp
or
and
jl
push
jge
or
loope
sub
xor
orl
dec
shlb
mov
stos
sbb
xlat
xor
ljmp
sti
pop
in
cs
dec
cmp
loope
mov
mov
add
in
cmp
fwait
stos
bnd
mov
cmp
rcll
inc
test
sbb
jl
adc
dec
nop
push
lea
mov
push
movsl
roll
lret
push
dec
arpl
ds
les
lea
in
mov
ja
push
cmp
roll
push
out
adc
stc
xchg
in
ljmp
aas
push
mov
xchg
test
xor
sbb
sti
inc
pop
test
lret
pop
mov
add
cli
mov
mov
mov
mov
pop
loop
and
je
xor
cmpb
mov
insb
dec
and
add
pop
cmp
out
lret
push
aad
xchg
test
jo
imul
mov
mov
popf
jp
mov
xor
nop
jge
out
adc
or
dec
loop
mov
aas
xlat
subb
xchg
cmp
enter
lret
shrl
push
inc
xlat
sti
movsl
jl
rcr
bound
and
jg,pn
adc
jae
pop
mov
or
cmp
adc
jno
dec
sub
daa
outsl
sub
pop
mov
inc
or
xchg
cmp
jg
push
dec
pop
or
dec
sub
pop
fsubr
and
cs
ljmp
mov
push
add
fldenv
push
orb
sti
cmpsl
jle
add
sbb
dec
xchg
outsl
subl
push
lahf
out
mov
decl
and
adc
stos
pop
mov
loopne
dec
in
fidivl
out
imulb
mov
call
mov
inc
mov
jmp
out
fldenv
jmp
adc
dec
lcall
ret
xchg
mov
daa
addr16
fs
mov
xchg
xchg
lcall
or
xchg
scas
mov
int3
out
aas
pop
mov
cmp
inc
sbb
and
xchg
sbb
test
xchg
push
mov
loopne
icebp
sbb
ja
ss
jecxz
or
or
cli
xchg
orb
ja
cltd
jo
and
or
shlb
frstor
mov
pop
ds
xorb
test
stos
scas
jge
into
sbb
pop
mov
or
movsl
or
cs
out
pop
pushf
cmp
add
mov
inc
arpl
inc
addl
pop
pop
repz
loopne
or
aad
lret
xchg
aas
aad
pop
cmp
scas
mov
mov
dec
xlat
outsb
jle
aaa
pop
add
and
dec
add
add
xchg
mov
loope
mov
or
mov
push
jne
arpl
dec
jne
clc
movsl
out
push
jecxz
lods
scas
daa
or
vpunpckldq
mov
push
cmp
jne
xor
ja
test
movsb
mov
pop
loopne
xchg
dec
into
push
out
dec
in
mov
add
loope
add
cmp
int3
cmp
mov
sbb
fs
lea
jno
mov
in
test
jmp
mov
mov
fs
mov
xchg
ljmp
push
xor
movsb
cmpsl
ret
jb
sub
or
xor
sti
int3
mov
subb
xor
andb
icebp
lods
jl
bound
js
cld
pop
std
cmp
rol
pop
pop
scas
ret
in
fwait
adc
push
inc
mov
gs
mov
inc
fmull
or
or
jg
and
jp
fadds
aam
test
inc
andb
lahf
inc
cmpsl
cli
imul
lret
data16
loop
mov
mov
push
lret
push
test
mov
jnp
fdivs
mov
inc
sub
mov
popa
pop
ja
insb
inc
ficompl
xor
scas
sub
add
mov
test
push
mov
into
jge
xor
jmp
dec
xor
xor
pop
je
jo
adc
or
call
mov
pop
jmp
add
out
incb
and
lcall
jmp
pop
int
pop
inc
adcb
std
pop
ljmp
push
jne
or
inc
sbb
mov
jp
enter
rolb
loopne
icebp
jo
fcom
repnz
sbb
adc
xlat
sub
jle
test
popa
mov
scas
push
jbe
out
adcl
inc
das
jne
jns
mov
push
in
xor
xchg
stos
push
in
out
jae
dec
mov
addr16
or
fiadds
sti
stos
rcrl
loopne
pusha
insl
bound
test
loope
inc
int
xchg
cs
inc
shlb
pusha
pop
cs
fmul
jb
sar
pop
mov
fidivrl
mov
std
movsl
push
adc
mov
testl
cs
mov
movsb
pop
popa
dec
xchg
sub
cli
xchg
mov
mov
push
test
mov
ja
ds
adc
shlb
in
daa
cmp
mov
nop
xorl
out
and
lds
inc
pop
mov
mov
outsb
cld
fsubl
xor
dec
fsubrl
inc
or
push
ss
ljmp
in
ds
xor
les
jne
sahf
scas
adc
and
or
lret
jae
push
sahf
mov
push
fwait
sti
sbb
add
mov
cwtl
stos
in
xchg
adc
ds
push
adc
rcrb
mov
push
mov
notl
mov
sub
fsubrp
pusha
imulb
out
test
fnstsw
or
scas
stos
xchg
das
jle
sub
addb
fildll
xchg
pop
dec
jne
mov
pop
push
nop
add
add
mov
outsb
jmp
outsb
in
insb
jg
cmp
movsb
inc
push
nop
dec
push
push
sti
cltd
ss
and
add
dec
dec
enter
xchg
cltd
bt
cmp
sbb
aas
rcrl
jmp
xor
setl
pop
jno
mov
add
ret
data16
cmp
popf
cmp
ret
jecxz
pop
cmc
cli
pop
xor
je
shlb
aas
rol
repz
push
cltd
shl
inc
push
int3
cmpb
push
sub
sub
jecxz
sub
pop
es
xchg
sbb
stos
adc
fs
jg
ljmp
mov
cmp
imul
rcrl
clc
and
orl
lea
scas
cltd
incl
arpl
dec
push
dec
mov
fxch
int3
push
hlt
pop
sub
adc
mov
int3
out
test
mov
movsl
repz
xchg
push
push
in
aam
fldl
push
gs
sub
leave
sub
xor
push
fwait
jmp
repnz
sbb
push
dec
add
imul
sahf
xchg
mov
loopne
jg
push
mov
les
pop
xor
fisubs
sbb
mov
mov
jle
jbe
leave
lahf
dec
sbb
les
adc
inc
xchg
cmp
lahf
and
shrb
push
jno
bound
iret
xor
test
fwait
sbb
fwait
mov
bt
xchg
pop
adc
ja
cld
lods
loope
mov
sub
repz
mov
mov
sbb
scas
adc
cltd
sub
ljmp
mov
cmp
mov
les
icebp
inc
sub
repz
sbb
mov
or
aad
sub
mov
cld
daa
mov
jo
inc
notl
sahf
push
cmpsl
cli
pop
adc
dec
cld
outsl
inc
push
dec
into
loope
mov
inc
xchg
inc
push
add
add
pop
sbb
out
xorb
adc
jl
shlb
rclb
or
pop
fcmovb
jmp
sbb
or
movsb
mov
jl
mov
jno
or
out
ret
xchg
call
in
xor
scas
sub
xchg
jp
inc
sarb
xchg
push
adc
pop
ja
sub
xorl
or
lods
repz
and
std
jo
lret
enter
mov
jge
jo
xchg
push
xchg
dec
sbb
cmp
stos
es
sub
aad
rcr
adc
sti
outsl
lods
adc
iret
insb
inc
inc
mov
lea
mov
fdivp
pop
xchg
sub
out
jg
add
fcmovnbe
sub
fcompl
pop
insl
mov
in
icebp
movsb
adc
mov
sub
cltd
lahf
mull
fwait
cmp
fnsave
roll
xor
outsl
add
or
sbb
push
push
mov
cmp
repz
add
loop
xchg
lods
outsb
out
ret
daa
cmp
cmovb
dec
inc
xchg
mov
lret
or
in
xchg
repnz
jno
sbb
mov
adc
sub
mov
push
mov
outsb
cmpsw
mov
data16
movsb
mov
ds
into
jae
dec
dec
dec
stc
lcall
hlt
clc
out
into
inc
pop
lret
fst
fistpll
andb
add
jle
aad
xlat
test
rorb
pop
test
loop
arpl
sbb
cmpsl
pop
mov
dec
leave
mov
negl
pop
xor
jp
cmp
pop
jnp
adc
fsubrs
pushf
cwtl
add
mov
jg
xor
idivl
icebp
icebp
or
test
add
cmp
movsl
fisubrs
pop
ja
outsl
xor
pop
adc
rorb
or
add
ret
xor
in
rorb
cmp
test
xor
scas
lea
adc
lods
inc
mov
xor
je
lret
jge
shll
cli
test
add
adc
xor
outsb
js
out
sbb
jl
aas
pop
sbb
in
sub
outsl
test
dec
pop
std
in
and
pushf
xchg
pop
fiadds
xchg
fcompl
hlt
addr16
daa
push
xchg
jo
sti
popf
mov
inc
into
scas
mul
pop
in
and
jae
pop
enter
out
push
add
mov
xchg
lcall
add
push
daa
fcoms
loop
cmp
gs
sbb
pop
xchg
sub
xchg
cmp
cmp
test
enter
ja
ja
xor
movsl
imul
mov
call
dec
out
xchg
call
pop
adc
inc
std
mov
test
jecxz
or
aad
sbb
add
inc
jmp
mov
iret
cmp
pop
pop
mov
push
add
dec
push
pop
out
hlt
loop
scas
inc
xor
gs
push
int3
pop
sbb
test
push
sub
mov
dec
test
sbb
les
fwait
popa
pop
adc
js
mov
adcl
xor
lock
stos
dec
jne
bndstx
lods
aaa
dec
test
incb
pop
inc
arpl
dec
bound
in
mov
xor
repz
cmp
int3
pushf
pop
popf
stc
cmpb
push
stos
jg
adc
sbb
xchg
fxch
fimuls
mov
cwtl
repnz
add
pop
inc
mov
xor
and
mov
mov
nop
flds
and
call
dec
dec
outsl
daa
jmp
inc
xor
clc
lret
cmp
jno
sbb
addr16
js
sub
iret
shrb
and
push
test
push
xchg
push
inc
addb
out
inc
popa
outsl
mov
test
sbb
mov
imul
push
inc
adc
loope
xchg
repnz
cmp
mov
data16
add
adc
mov
jb
mov
push
cwtl
das
std
addr16
dec
rcrl
rcll
pusha
inc
inc
ljmp
decl
add
clc
fidivrs
in
add
lret
int3
fidivs
pop
scas
inc
nop
inc
push
cmp
js
jmp
pop
cltd
jmp
lds
xchg
push
cmpsb
adc
enter
es
lret
xor
imul
data16
xchg
stos
pop
popa
addl
cli
and
mov
mov
stos
fnstcw
outsl
call
scas
push
mov
iret
pop
xor
xchg
repz
ss
cltd
repnz
fbstp
gs
adc
mov
jno
jp
sub
adc
aaa
popa
into
xchg
fldpi
outsb
cmp
inc
inc
in
aam
pop
xor
jecxz,pn
shrb
adc
push
cmp
orl
jecxz
insl
sbb
je
fwait
xor
sub
loop
sbb
icebp
daa
ds
xchg
daa
inc
popf
imul
sbbb
push
mov
cmp
int3
mov
shl
aas
push
xor
cmp
subl
cmpsl
jb
in
mov
push
sbb
ss
insl
ss
cmpb
push
repnz
stc
ret
aad
mov
jmp
dec
fbstp
je
daa
xchg
cmp
jg
push
fnstcw
xor
out
aam
pop
and
rcrl
jae
jns
fisubl
mov
jg
or
or
or
mov
mov
inc
fadds
sub
xchg
and
subl
xor
xor
addr16
mov
mov
cmp
mov
inc
aad
xchg
movsl
jge
jg
mov
cmpsb
mov
fildll
ret
jge
nop
dec
cmp
jns
stos
test
adc
pop
test
mov
loopne
jg
inc
shl
clc
shl
adc
das
fsubrs
les
loop
jne
mov
rcrb
or
iret
inc
mov
push
jo
lret
jne
stc
and
pop
hlt
and
jge
adc
lods
test
bswap
inc
in
pop
adc
push
addr16
jl
insl
or
and
jae
adcb
aad
sbb
cmp
xchg
shlb
into
and
in
pop
and
scas
xchg
ja
scas
cmp
inc
enter
enter
andb
xchg
outsb
dec
xchg
cmp
cmp
movsl
push
sbbl
aaa
push
insl
in
sbb
mov
mov
push
aam
ss
jmp
sub
test
mov
or
jmp
or
in
cwtl
push
pop
mov
fldenv
pop
mov
in
mov
sarb
push
and
dec
loope
inc
add
and
fisubrs
das
mov
pop
pop
xor
fidivrl
fimull
push
add
mov
fiadds
fistpll
push
push
repnz
iret
jnp
and
out
pop
call
inc
fisubl
clc
jp
lods
leave
scas
inc
gs
loopne
testb
mov
lret
aam
add
lods
dec
lods
pop
out
ficoms
mov
add
push
data16
test
sub
mov
lock
cmpsl
sub
jb
mov
inc
xor
mov
xor
mov
mov
movsl
inc
and
or
mov
dec
fcoms
ja
pusha
adc
xchg
sub
or
adc
in
ss
or
mov
adc
sahf
mov
xor
inc
xlat
dec
inc
ja
xchg
pop
jb
call
cmp
into
jle
lods
jo
mov
sbb
insb
lods
stos
mov
sub
test
notb
sti
jo
rol
and
pop
adc
and
shr
dec
sbb
into
and
mov
loop
mov
sub
bound
pop
mov
add
call
sbb
inc
pop
scas
and
mov
insb
add
mov
shlb
fs
inc
fldt
insb
popf
push
pop
and
mov
jmp
ret
rorb
in
mov
mov
ffree
js
mov
mov
inc
push
jb
dec
push
jae
sbb
or
xchg
mov
xchg
out
cmpsb
sarl
test
pusha
dec
and
xchg
decb
and
popf
add
es
shlb
or
sbb
mov
pop
jmp
dec
cmpsb
popf
out
push
repnz
aas
sub
ret
fisubs
filds
fidivl
roll
push
dec
cmp
push
push
in
push
leave
stos
in
dec
call
stos
or
xchg
pushf
mov
sbb
gs
adc
pusha
jae
xchg
icebp
dec
pop
cmpsb
dec
dec
hlt
cmp
sub
cltd
insl
daa
push
mov
jecxz
mov
push
outsl
cmp
push
lds
push
aas
ret
mov
cmpsl
bound
jns
push
mov
sar
push
sub
leave
pusha
mov
jg
pop
sbb
repz
shr
jo
cli
xchg
rclb
sub
icebp
fwait
cmp
mov
cwtl
fs
adcb
jl
ds
pop
and
xchg
xchg
adc
cltd
jl
ljmp
notb
popf
xor
out
push
data16
inc
xchg
sub
lds
jbe
pop
inc
push
jmp
mov
fsub
jnp
jl
or
and
push
pop
je
mov
dec
loop
cwtl
scas
xchg
inc
xchg
aas
dec
cmp
cmp
repz
fs
jg
mov
xor
push
mov
pop
insl
and
shll
sbb
fwait
in
in
aas
xchg
jecxz
pop
in
mov
and
scas
insb
fisttps
jmp
testb
add
es
lods
mov
test
add
cltd
push
push
mov
loopne
subl
pushf
cmpsb
fisttps
pop
pop
test
xchg
cmpsb
add
mov
lret
cld
aad
pop
mov
push
cltd
int
mov
cwtl
loopne
xor
imul
je
outsl
addb
incb
leave
fstps
fsubl
mov
aad
js
mov
mov
sub
out
shlb
jle
mov
ret
sahf
fdivl
push
or
inc
jle
xchg
inc
xor
leave
inc
push
cmc
lods
in
lods
leave
xlat
fimuls
sbb
movsl
push
push
add
aam
mov
scas
adc
sbb
stos
dec
loopne
outsb
daa
testl
and
push
in
xor
inc
dec
add
fwait
pop
aas
mov
mov
lods
in
adc
fs
lret
out
bound
imul
and
sbb
pushf
scas
or
dec
popa
and
das
addr16
mov
push
push
jbe
cmp
or
sub
xor
lret
cld
mov
xor
js
mov
in
dec
xor
cmp
cmp
stc
push
add
dec
in
das
stos
stc
xor
gs
jecxz
lcall
xor
pop
cltd
cmp
out
mov
ds
mov
iret
into
sbbl
imul
fcompl
ss
fstl
clc
jo
outsl
loop
mov
xor
ljmp
daa
lahf
nop
mov
dec
bound
insb
jbe
jg
mov
cmp
jno
add
faddp
mov
int3
out
pop
sbb
out
xchg
cmp
mov
outsb
jp
add
les
lds
mov
lret
jp
and
mov
xchg
pop
icebp
sbb
enter
cltd
add
mov
jmp
cwtl
mov
jbe
js
cmpsl
test
scas
bound
lods
icebp
mov
add
mov
bndstx
inc
aaa
dec
mov
dec
adc
into
xchg
cmp
das
test
fcomi
pop
dec
sub
movsl
jns
lahf
xchg
sahf
lcall
mov
loop
adc
insl
lock
lea
jg
mov
ffree
jmp
dec
add
fiadds
fcmovu
lock
inc
jb
add
insb
inc
sti
push
and
sbb
cmp
ja
push
icebp
pop
icebp
and
mov
dec
mov
xchg
or
scas
fwait
loope
mov
arpl
shrl
movsl
mov
test
in
inc
outsl
push
in
jle
mov
sub
dec
int
aas
adc
push
xlat
ja
add
icebp
scas
sub
xchg
popf
fidivrs
pop
mov
ss
adc
fwait
hlt
mov
lahf
mov
ljmp
cmp
les
call
lret
fstl
or
mov
jne
mov
mov
pop
jmp
push
lock
orl
mov
mov
push
push
test
cmpsl
decb
fnstenv
and
mov
cmpsl
ljmp
sbb
sbb
fs
sarl
outsl
and
sbb
sub
push
and
roll
lods
orl
cmpsb
into
arpl
inc
pop
push
adc
cmp
lret
pop
sub
dec
sub
icebp
dec
xchg
push
mov
jno
pop
in
jo
lods
fcoml
cmc
or
addr16
mov
in
jmp
sbb
dec
dec
mov
subl
lahf
mov
mov
mov
lcall
pushf
ret
jmp
loopne
xchg
lahf
in
push
dec
lock
ss
jge
pop
add
ds
xchg
pop
mov
fwait
sbb
jns
inc
mov
pop
ds
adc
outsl
pop
cmpl
pop
stos
aas
sarl
in
sahf
mov
dec
add
divl
int
sbb
xchg
imul
xchg
add
ja
inc
arpl
push
cltd
jae
add
ss
pop
mov
inc
pop
xlat
xor
pushf
lods
cmp
jb
push
stos
inc
popa
xchg
pop
insb
daa
jo
mov
es
jno
jp
movsb
jbe
sub
cmp
repnz
pop
faddl
popa
sub
xchg
cwtl
mov
lret
pop
adc
enter
cmpsb
cmp
mov
icebp
adc
ja
xor
sub
dec
mov
int
sarb
inc
test
imul
test
inc
and
xor
sbb
mov
add
mov
mov
test
sbb
in
rclb
or
cs
inc
dec
and
das
out
sahf
mov
es
pusha
jno
pushf
daa
mov
in
pop
sub
push
leave
mov
xorl
dec
arpl
pop
orl
adc
clc
adc
xchg
jmp
pop
shlb
and
add
or
cmpsl
shrb
add
or
enter
ret
out
test
loop
shl
mov
mov
fdivp
mov
mov
lea
mov
lret
cmp
mov
push
xor
test
fists
mov
xchg
push
cmp
sub
in
jmp
or
mov
imul
jnp
add
loop
stos
addl
xchg
arpl
data16
add
sysenter
xchg
xorb
insb
scas
data16
inc
fmul
ss
lock
js
inc
fnstenv
inc
leave
imul
xor
ret
mov
xor
add
add
mov
iret
or
sbb
sti
xor
shl
xor
pop
xchg
ss
pusha
jnp
insb
fcom
sbb
mov
and
push
push
pushf
jle
dec
lods
lahf
add
mov
insb
mov
push
mov
loop
lods
test
xor
mov
sbb
nop
icebp
ds
mov
add
add
adc
aaa
sbb
test
mov
mov
dec
cmpsl
dec
sarb
inc
mov
or
xor
testl
cmp
aam
or
pusha
out
popa
pop
iret
dec
push
testb
and
ja
out
loopne
xchg
adc
mov
shll
or
lds
adc
lock
lret
and
xor
and
xor
cmpsl
out
leave
fidivrs
sbb
decb
sub
xchg
sub
in
mov
dec
aad
nop
adc
inc
shl
pop
sahf
xor
pop
out
mov
fistl
and
sbb
jp
mov
pop
cli
test
or
stos
jne
sub
lds
fwait
mov
xor
imull
std
mov
xor
lcall
inc
div
and
jl
mov
addr16
das
addr16
cmp
add
or
lea
cli
mov
adc
fldt
insb
aas
xchg
test
imul
in
dec
push
sahf
iret
hlt
cmp
mov
adc
dec
rolb
or
push
pop
jmp
xlat
pop
out
orb
repnz
hlt
dec
hlt
mov
xchg
dec
mov
adc
sbb
pop
aam
call
test
sbb
roll
mov
mov
mov
rcrl
adc
add
sahf
pop
jmp
push
push
repz
faddp
jle
repnz
int
fsubl
lahf
jmp
mov
xor
shl
std
mov
iret
pusha
dec
outsb
adc
push
nop
daa
inc
adc
cmp
stos
je
in
fsubr
in
addr16
out
push
push
rcrb
xchg
mov
jns
jns
loop
std
cmp
repz
xchg
divl
xor
jp
cs
adc
out
sbb
push
jo
cs
jo
xor
shr
jo
xor
xchg
jg
arpl
loopne
pop
ret
sahf
daa
mov
test
add
inc
sbb
ror
mov
push
fsubl
in
roll
xor
ss
and
adc
push
in
dec
orb
and
xchg
dec
jge
sub
fldcw
mov
lods
inc
aaa
inc
mov
jns
aad
push
lret
mov
scas
xchg
jno
out
mov
clc
les
int
les
pushf
ljmp
icebp
or
jb
xchg
lock
dec
lret
imull
jno
mov
mov
lods
pop
adc
xor
and
inc
mov
into
fsubr
stos
xchg
sub
mov
testl
and
lods
xchg
or
test
mov
or
test
dec
dec
imul
mov
aaa
fdivs
pop
insl
js
dec
lret
and
stc
mov
decb
movsl
jns
into
andb
pop
inc
jmp
rolb
lcall
xor
pop
insl
insb
ss
mov
imul
mov
xchg
stos
mov
leave
into
push
rcrb
lock
inc
test
out
push
outsb
pushf
addr16
sub
sub
fcomps
mov
mov
mov
stos
pop
add
and
mov
or
lcall
das
loopne
add
aad
push
xchg
jns
data16
and
in
pop
popf
es
push
lcall
popa
cmp
test
xlat
rcr
inc
mov
loope
or
and
loopne
test
add
sbb
ret
mov
jae
rorb
jno
push
insb
push
xchg
adc
gs
pop
push
rcl
push
mov
icebp
pop
addr16
mov
adc
lahf
xchg
add
adc
xor
ds
push
xchg
xchg
sarb
out
or
inc
fsubrl
mov
int
push
cltd
sbb
cwtl
lret
addr16
stos
fsts
push
sub
wrmsr
mov
or
push
cwtl
mov
pop
cmp
aad
inc
jp
jecxz
call
andb
ds
mov
loopne
mov
mov
imul
adc
stc
sbbl
out
cwtl
insl
cmpsb
push
jnp
out
test
mov
pop
jg
fdivp
adc
xchg
mov
sti
pop
outsl
sbb
sbb
ss
push
insl
lea
outsl
pop
mov
pop
imull
cmp
mov
jge
mov
jo
jp
je
pop
dec
out
sub
ret
sub
push
push
jns
js
mov
sub
mov
push
jmp
movsl
pop
lea
popa
add
in
cli
test
xchg
cwtl
xchg
call
or
imul
in
pop
fwait
sub
es
in
xor
dec
jmp
jno
inc
and
fidivs
mov
test
subl
pushf
dec
cld
push
add
sbb
in
push
cmp
add
stos
cmp
scas
add
sahf
repz
stos
mov
xor
jns
clc
cld
sub
stos
sub
adc
aaa
xchg
push
xchg
or
jge
push
test
decb
add
js
ret
popa
cmpb
jmp
notl
mov
mov
jns
sbb
inc
inc
and
gs
lret
mov
stos
test
repnz
ret
stc
in
adc
xchg
hlt
cs
and
mov
incb
in
add
mov
insb
jg
lods
pop
push
pushf
inc
dec
mov
mov
shlb
and
movsb
cld
lcall
in
cmpsb
pop
mov
adc
int
cmp
jbe
cli
test
call
lods
imul
cmp
push
fnstcw
cmp
jno
imul
mov
mov
xor
jo
lods
mov
mov
mov
xchg
call
iret
mov
cmp
xlat
outsb
sahf
and
jne
add
add
mov
xor
and
fiaddl
pop
push
into
jns
cmp
lcall
loope
pop
lods
jmp
push
sahf
scas
cmp
dec
test
jno
mov
ret
aaa
int
xchg
stc
xchg
add
cmpsb
les
clc
repz
pavgw
adc
jae
xchg
outsb
sbb
cmp
movsl
sub
or
pop
ds
xor
adc
lret
aaa
dec
inc
fcomps
mov
xchg
ret
cmp
imul
es
dec
pop
fwait
sahf
pop
mov
popf
push
sbb
inc
jo
fstpt
outsl
fdivrs
in
push
movl
int3
arpl
fwait
mov
sub
mov
mov
ficoms
pxor
adcb
add
pusha
cmp
xchg
test
scas
xor
gs
gs
xor
in
outsb
mov
jo
je
xchg
rclb
test
sbb
pop
jbe
jg
js
loop
dec
fldt
imul
hlt
cmp
cmp
cmp
and
outsb
push
ljmp
adc
je
and
arpl
pop
pop
addr16
daa
mov
inc
mov
jmp
adc
fwait
pop
ds
iret
cmp
push
cmpsl
sub
push
adc
sub
mov
in
cmp
dec
cmc
mov
je
out
sub
stc
dec
adc
pop
rolb
adc
cmpsl
cmp
cmc
adc
xor
lcall
minps
lahf
out
dec
sar
es
mov
dec
mov
push
and
adc
cs
cmp
jnp
pop
sbb
jnp
dec
mov
cmc
aaa
arpl
mov
int
movq
ja
jbe
mull
inc
loop
ds
jecxz
dec
pop
or
inc
xchg
dec
mov
int
sub
dec
adc
mov
or
sarb
testb
cmpsl
aas
dec
dec
stc
inc
add
fadd
rorb
xchg
mov
xchg
sub
mov
gs
add
jbe
and
leave
std
add
pop
stc
rolb
ja
adc
or
jge
leave
sub
bound
mov
imul
mov
out
nop
cmp
shr
popf
in
or
dec
dec
xor
insb
lock
add
pop
pop
loope
push
xchg
pop
sub
mov
dec
inc
mov
push
inc
mov
data16
out
iret
je
sahf
dec
push
cwtl
pop
subl
add
shrl
stc
lea
mov
cmpb
inc
add
mov
cmc
or
cwtl
sarl
mov
std
clc
repz
int
push
out
sbb
adc
xor
sbb
pushf
addb
pusha
enter
arpl
rclb
negb
ret
cmp
mov
popa
sarl
mov
outsl
mov
mov
push
xchg
push
scas
les
inc
dec
add
mov
jne
rcl
jg,pt
adc
push
adc
mov
or
cmpb
jle
sbb
movsb
test
mov
int3
dec
in
push
es
sub
aam
xchg
imull
in
jecxz
es
add
andb
into
inc
pop
ljmp
cmp
cmp
icebp
fwait
ror
xor
loope
lds
rorl
pop
inc
dec
add
hlt
loopne
es
rclb
sub
mov
stos
mov
cwtl
insb
sahf
ja
cmpsl
addl
psubsw
dec
inc
je
dec
dec
jae
inc
flds
sarl
rcll
sub
sbb
into
sub
inc
add
mov
out
mov
add
sbb
lods
sub
outsl
jne
rol
add
lcall
lods
enter
jnp
jno
jecxz
push
jno
out
mov
push
pop
pop
push
inc
shrl
sub
and
jb
outsl
movsb
inc
xchg
pop
dec
cmc
int3
add
mov
fdivrs
push
xchg
outsb
push
aad
out
mov
pop
daa
shrb
test
mov
cmc
addr16
mov
dec
mov
je
add
jg
push
sbb
les
adc
imul
enter
pushw
dec
outsb
std
push
rorl
cmp
in
ret
and
adc
cmp
inc
sti
xchg
xor
orl
dec
sbb
xchg
and
lret
cli
mov
xchg
ret
adcl
mulb
dec
and
iret
mov
lds
bound
sbb
call
mov
sub
adc
xchg
sub
rcrb
push
sarb
out
jle
jb
fldt
inc
push
xor
jge
bound
jmp
call
test
scas
cmp
test
dec
mov
mov
sbb
mov
xor
les
push
inc
push
mov
add
and
xor
inc
adcb
mov
sahf
xor
sub
push
orl
lahf
pop
repz
fidivrl
dec
dec
popa
ja
out
test
jne
cmpsl
cmpsb
aaa
or
mov
push
movsl
stos
and
and
lods
and
iret
push
cltd
nop
sub
push
stc
call
inc
pushf
repz
jmp
fs
outsl
mov
sbbl
push
jne
test
sbb
pop
in
sbb
push
lods
cmp
out
je
and
pushf
xchg
jbe
adc
imul
jns
cmp
xrelease
mov
lcall
jnp
xor
pop
imul
mov
pop
mov
mov
and
enter
out
aad
xchg
xor
data16
popf
popa
jge
stos
test
inc
fst
in
hlt
add
xlat
push
push
push
test
int
fidivrs
mov
es
jae
xchg
or
aas
jecxz
fcomps
out
mov
loope
push
cmc
xchg
cmc
stc
xor
sub
frstor
outsl
iret
adcb
push
fcomp
sbb
leave
push
mov
xchg
out
push
inc
push
push
pop
out
cmp
inc
pop
mov
and
fcompl
shrl
loope
or
gs
ja
sti
aas
pop
sub
hlt
sub
scas
xchg
sub
ret
xor
sub
pop
movsl
cmp
cli
xchg
dec
rcl
ret
es
icebp
dec
mov
fwait
jle
stc
sub
jnp
shll
mov
push
sub
into
fnstcw
dec
rcrl
jb
or
mov
adc
movb
or
dec
sbb
fdivrp
adc
cmp
ljmp
sti
pop
push
adc
sub
sbb
insl
xchg
xor
jl
cmp
inc
popf
ljmp
clc
ljmp
add
adc
mov
loopne
xchg
aam
push
xchg
push
stc
and
xor
out
in
in
jbe
push
das
pop
mov
js
sub
mov
push
sub
push
push
xchg
nop
mov
add
push
mov
repz
pop
loop
test
jp
scas
scas
jmp
mov
adcb
aad
jnp
call
in
xchg
fdivl
dec
sbb
adc
and
and
mov
in
or
sbb
in
movsb
cltd
mov
mov
ret
js
pop
adc
ljmp
jg
movsb
mov
out
test
mov
inc
outsl
xor
test
or
das
xchg
pop
popa
repnz
stc
mov
jns
xor
inc
out
mov
mov
movups
scas
stc
xchg
mov
push
pop
pop
rorl
imul
or
cmp
aam
sub
popf
repz
mov
and
lods
in
loopne
mov
jbe
rorb
pop
arpl
aam
inc
jns
jg
in
mov
mov
mov
add
call
dec
cmp
cmp
cmpl
jmp
mov
cmpsb
ret
imul
adc
pop
or
add
push
add
push
dec
test
iret
cmp
adc
pop
push
mov
pop
sbb
mov
test
cltd
mov
leave
es
mov
test
jle
or
stos
pop
xchg
jmp
mov
ljmp
cmp
shrl
ss
adc
lahf
pop
jb
and
in
add
shlb
fcoms
or
ss
sub
fsubrs
adc
and
inc
jmp
cmp
mov
push
jle
cmc
movsb
cmp
jae
mov
adc
pop
ss
std
mov
cmp
decb
push
fs
mov
lods
cld
gs
dec
pop
lret
test
repnz
sbb
mov
pop
icebp
cmp
in
xchg
xchg
add
push
adc
iret
jp
pop
in
std
nop
push
mov
faddl
cmc
push
inc
aas
mov
mov
or
testb
mov
mov
sahf
ret
hlt
and
lcall
xlat
rorb
mov
mov
leave
sub
jnp
adc
dec
loop
pop
orl
inc
clc
jae
lea
push
out
adc
lahf
loope
cli
dec
cmpb
or
sbb
adc
icebp
jae
mov
xor
movsb
pop
pop
loopne
adc
outsl
add
pusha
clc
push
cmp
sub
jg
insb
leave
and
mov
xor
or
and
xlat
jmp
mov
mov
call
enter
loop
pop
inc
xchg
cmp
sbbb
xchg
dec
out
add
jb
lahf
dec
and
into
jb
sub
mov
cltd
jne
fldt
cmpsl
nop
sub
mov
scas
xchg
dec
push
jne
imul
xchg
shlb
cltd
movsl
pop
repnz
ret
push
pop
mov
ja
cmpsb
lods
inc
fdivrs
dec
out
push
clc
movsl
mov
hlt
ds
pusha
cmp
xchg
xlat
dec
dec
les
add
push
fiaddl
mov
or
mov
adcb
dec
mov
adc
out
pop
push
dec
hlt
aad
ds
imul
adc
lods
aam
ffree
cltd
mov
dec
dec
mov
cmp
insb
ret
sbb
pop
mov
sbb
mov
pop
pop
jmp
mov
mov
add
clc
mov
dec
arpl
inc
es
pop
dec
dec
rorb
ljmp
sub
xchg
sub
fsubl
movsb
sub
jnp
jecxz
test
das
jbe
fstps
mov
lret
and
xchg
push
mov
xor
outsb
dec
lret
subb
inc
pop
out
adcb
int
ds
pop
sbb
push
loope
or
mov
pop
iret
push
aad
push
data16
xchg
cmp
sbb
sbb
pop
hlt
icebp
pop
insb
fistpll
jle
or
rcl
hlt
and
fdivrl
dec
fists
mov
inc
lret
popa
adc
iret
push
mov
test
sahf
jae
rolb
sub
ffreep
pop
dec
adc
popa
adc
and
fcomps
out
mov
inc
push
lods
xor
movl
mov
add
jbe
add
xchg
test
cmp
inc
mov
pusha
mov
xchg
inc
in
jmp
sbb
imul
popfw
push
inc
lahf
xlat
mov
xchg
cmp
lods
scas
cmp
mov
icebp
les
or
sub
outsb
loope
les
insb
stos
test
sbb
add
jo
inc
faddl
xor
rorl
jno
lods
movsb
cli
inc
inc
stos
mov
cmp
xlat
sbb
inc
cs
enter
fs
and
clc
sub
sub
es
in
inc
andl
and
mov
dec
add
mov
pop
inc
out
pushf
mov
adc
outsl
cs
mov
nop
xchg
icebp
inc
xor
add
icebp
jmp
mov
adc
jno
inc
inc
adc
ss
test
pop
pop
jo
jnp
fidivl
adcb
dec
fisubs
addb
push
pop
popa
lret
js
aaa
pop
xchg
shl
in
hlt
imul
shlb
in
cmpl
pop
arpl
test
popa
xorl
xor
incl
pushw
stc
and
cwtl
dec
iret
cwtl
pusha
xchg
aad
icebp
and
adc
add
inc
popa
mov
loope
inc
pop
mov
sti
adcb
arpl
or
mov
mov
add
pusha
mov
andb
bound
sbb
test
rcrl
dec
mov
cmp
test
loopne
dec
sub
add
xor
mov
sub
or
xor
inc
lret
cmp
mov
sahf
je
mov
or
aas
push
movsl
jnp
rol
into
loope
in
xor
popa
movsb
lea
fstpt
pop
pop
and
inc
popf
cmp
push
jo
or
testl
mov
popa
jnp
out
mov
push
and
stos
js,pt
sub
dec
in
add
mov
and
inc
pop
test
es
dec
pop
inc
inc
js
dec
loopne
xchg
jge
inc
movsl
repnz
aaa
fcmove
jge
mov
push
jmp
fbstp
roll
or
stc
das
hlt
cmp
jmp
cmpsb
push
clc
mov
test
or
insb
ss
imul
je
jo
lret
lock
mov
push
inc
sbb
mov
mov
cmp
inc
rcll
and
mov
es
inc
pusha
imul
cmp
mov
push
out
cmp
sbb
or
mov
dec
and
pop
mov
mov
inc
insb
push
cmc
jns
cmpsl
ds
add
jmp
push
into
popf
xor
xor
sbb
ret
push
and
stos
push
js
ret
mov
add
xchg
scas
lods
mov
fidivl
cld
xchg
fs
dec
cmpsl
mov
lahf
popa
cmc
scas
in
push
das
cmp
or
das
enter
xor
push
mov
add
data16
nop
xchg
loopne
inc
dec
aaa
inc
in
mov
divl
cmp
mov
mov
jg
xchg
inc
js
inc
mov
insb
mov
cld
or
xlat
adc
mov
pop
test
or
jo
sbbl
ljmp
xor
sbb
mov
rcrl
adcb
cmp
gs
cmp
jecxz
sbb
push
and
arpl
pusha
fidivrl
jecxz
out
jbe
insl
xor
ret
mov
jo
sbb
arpl
mov
movsb
popf
push
mov
push
inc
or
mov
lret
mov
in
pop
mov
sbb
jns
cmp
ficompl
adc
pop
cmp
xchg
lock
mov
and
hlt
jmp
pop
movsb
push
ljmp
add
mov
int3
xor
pushf
or
pop
aas
ljmp
push
cltd
pushf
jle
sbb
test
ror
lock
movsb
dec
divb
or
jno
pop
push
imul
mov
jo
rep
mov
shlb
rcl
jl
or
or
sbb
dec
sbb
push
jnp
jecxz
dec
sbb
int
outsl
aam
test
pop
dec
xor
inc
mov
sbb
sbb
cmc
mov
sbb
mov
push
push
adc
sbb
jmp
mov
pushf
jg
and
jle
aaa
ret
test
xor
movsl
jg
frstor
pusha
stos
sbb
mov
outsl
inc
rcr
inc
jecxz
dec
dec
hlt
sarl
mov
test
scas
dec
test
stos
add
and
jo
inc
mov
dec
dec
pop
jp
cmp
addr16
or
mov
jae
xlat
dec
mov
outsb
lds
ret
sbb
sti
pop
xor
push
or
jne
xor
pushf
or
jnp
imul
push
insl
or
jnp
push
inc
addb
loopne
or
lahf
sahf
mov
xchg
aam
dec
addb
fcomps
cwtl
mov
dec
lahf
sbb
aam
mov
aam
scas
pop
xor
cmp
pop
mov
mov
mov
sti
insb
lret
add
xlat
ret
xor
fstpl
call
cmp
loopne
xlat
adc
mov
mov
inc
sbb
stos
aam
push
repz
xchg
mov
test
cmp
mov
lcall
out
fstps
inc
stc
insb
jmp
adc
stc
je
or
lods
and
xlat
cmp
and
jo
cmp
negb
call
sbbb
popa
in
xor
sub
push
addr16
fwait
inc
int
xchg
cli
pop
mov
dec
pop
pop
aad
push
mov
iret
sbb
adc
push
xchg
jmp
push
cmp
fxch
mov
cmp
lcall
loop
push
jno
test
nop
call
and
mov
sub
mov
pop
lcall
add
and
lods
dec
pop
xor
cmp
int3
push
jo
aaa
xchg
subl
xlat
es
jo
in
xchg
pop
mov
xor
ds
xchg
sbbl
pop
lds
xchg
add
in
testb
stc
cmc
cmp
inc
jnp
sbbl
push
fstps
lea
mov
loop
rorl
mov
fistps
aam
lret
add
insb
js
dec
cmpsb
imul
aad
mov
div
dec
arpl
jns
stc
je
adc
xchg
jl
sbb
xchg
aad
scas
dec
notb
or
sub
das
mov
stos
and
adc
xor
adc
xlat
or
testl
incb
xorb
test
into
and
xor
dec
jge
aad
sbb
mov
mov
jno
int3
call
inc
notl
sbb
jae
mov
jg
or
ret
push
stc
nop
xlat
pop
mov
cltd
je
inc
mov
xor
aam
rcl
mov
sub
addr16
push
and
mov
push
sub
inc
pop
je
xchg
mov
xlat
cmp
add
push
rorb
mov
test
cmpl
sub
push
fcompl
fiaddl
dec
add
popa
sahf
add
sub
mov
std
jbe
dec
sub
push
jmp
lock
fldenv
pop
loope
lcall
dec
adc
fwait
mov
xchg
mov
xchg
lahf
pop
popf
mov
jle
mov
xchg
mov
jmp
adc
mov
cmp
aam
test
cmp
incb
push
cmpsb
mov
jge
js
mov
loop
adc
ret
xor
stos
ficompl
ljmp
jmp
mov
adc
stos
insb
out
add
inc
pop
fildll
hlt
xchg
enter
mov
in
pop
cmp
movsb
xchg
jle
xlat
pop
rolb
mov
dec
arpl
lods
xchg
jmp
jg
and
sti
or
icebp
xor
inc
mul
xchg
dec
leave
sub
sbb
xchg
pop
sbb
sub
inc
jp
repnz
mov
pop
aad
pop
push
and
pushl
aad
xchg
xor
adc
xchg
lcall
adc
rcl
inc
jg
lock
inc
mov
int
jno
push
push
mov
inc
push
mov
push
mov
fbstp
hlt
inc
fucomip
jb
call
push
hlt
hlt
xchg
bound
sbb
adc
and
push
or
loop
cmpsb
enter
jne
loopne
adc
pop
or
or
adc
jb
aas
lret
outsl
pop
cmp
int
js
iret
outsb
mov
leave
pop
and
cli
fsubrl
jo
adcl
jg
xchg
pop
push
in
orl
lret
pop
movb
testl
mov
jp
pusha
stos
pushf
sbb
add
insl
cmp
test
push
js
push
push
stos
ja
hlt
and
xor
add
xor
dec
add
push
jo
mov
loope
or
jns
inc
sub
jmp
inc
jmp
push
push
int
jecxz
xor
sub
ja
dec
dec
aaa
lods
mov
leavew
adc
xchg
xor
call
test
in
mov
rclb
mov
roll
insb
jp
cmc
sbb
call
fcomip
icebp
add
and
data16
xor
in
popf
das
gs
loope
addr16
mov
in
addr16
xlat
cmp
fnsave
enter
dec
ja
in
aas
loop
std
dec
add
pop
jp
mov
movsb
xor
leave
xor
ret
shlb
dec
les
inc
fimull
adc
xchg
popa
lahf
sahf
insl
mov
sahf
out
pop
xor
cmpsb
aam
aad
and
lds
xchg
pop
test
or
je
jne
inc
pop
adc
jmp
or
cmp
and
push
outsb
lods
push
andb
sbb
push
xchg
daa
hlt
leave
inc
aad
cs
outsb
adc
adc
xlat
fldt
dec
cwtl
fs
imul
stos
mov
out
jbe
xchg
pop
in
and
test
add
lcall
xchg
movsb
pop
repz
mov
push
sarb
pop
jge
push
jnp
shll
loope
jle
add
cmp
lahf
or
pop
ss
xchg
fsin
pop
scas
mov
push
fld1
fidivrl
in
std
inc
pop
xor
es
jb
sbbl
cmp
pop
inc
add
fistps
aam
mov
xchg
adc
fadds
jg
iret
orb
adc
cmp
rorb
or
sbb
inc
icebp
imul
mov
loope
pop
mov
filds
cmp
push
jb
xor
mov
pushf
imul
addr16
outsb
inc
jb
sub
mov
lret
cld
adc
sahf
push
mov
push
jmp
inc
lock
lods
jg
dec
mov
movsl
xchg
push
fsubr
test
cmpsl
cmp
lds
jmp
mov
xchg
addr16
sbb
loopne
movsb
jecxz
or
sbbl
pusha
cmp
add
cld
inc
xchg
test
fadds
lret
mov
push
icebp
insb
inc
shll
leave
rcl
jae
cmp
mov
icebp
xchg
aam
test
dec
hlt
lret
stos
add
inc
jp
in
mov
scas
subb
icebp
js
push
lods
push
je
mov
mov
push
jecxz
gs
xchg
jge
mov
sub
loope
ret
xchg
mov
ret
ss
mov
jge
in
sbbl
push
orl
or
out
push
jb
lahf
pop
pop
cmp
loope
xlat
sub
int
mov
pop
popf
cmp
sub
sub
ret
xor
cmp
in
out
repz
or
sub
cmp
mov
roll
popf
or
mov
xor
xor
xrelease
push
add
rcrl
or
pop
in
clc
jo
fisubl
je
xor
add
mov
fdivrl
mov
fdivrl
cmp
sbb
xlat
jl
and
stos
fldenv
jne,pn
mov
out
and
adc
or
mov
push
jbe
test
ds
aas
ficoml
jmp
push
xchg
pop
xor
imul
or
pop
mov
leave
imul
test
xlat
jmp
out
mov
pop
mov
stc
pop
cmp
push
insb
aas
daa
jmp
ja
mov
jl
testl
xor
pop
cmp
xor
and
pop
mov
add
or
xor
imull
mov
jae
add
mov
xor
or
lods
jmp
or
cwtl
popl
cs
xchg
xlat
adc
add
in
or
and
jecxz
popf
adcl
scas
mov
inc
sahf
inc
pop
adc
roll
ds
out
xchg
lea
mov
xchg
out
dec
mov
or
imul
sbb
dec
stos
add
add
mov
mov
sub
rol
rolb
add
daa
out
push
popf
cld
and
ja
rcll
inc
adc
xchg
add
push
imul
or
mov
jb
mov
leave
push
pop
mov
outsb
mov
out
sahf
mull
mov
daa
inc
mov
clc
jns
fs
add
loopne
imul
rorb
sbb
cmp
testb
mov
iret
aad
adc
or
mov
sub
adc
mov
mov
ret
fdivp
mov
sbb
data16
in
out
jle
jecxz
aas
ljmp
std
sub
sub
mov
lods
mov
lods
dec
into
gs
inc
popa
xchg
cltd
in
mov
xlat
movsb
inc
scas
scas
movsb
les
mov
mov
out
out
repnz
test
push
pop
xor
js
mov
rcrl
cmp
xorb
jae
cmp
xor
les
addr16
cs
jmp
jae
xchg
pop
jle
mov
scas
and
cmp
sbb
shrl
jg
pop
insl
adc
aaa
insb
cmpsl
out
rclb
sub
jae
daa
jge
fwait
je
cmp
jae
iret
aam
aas
sti
shrb
orl
sub
mov
mov
sar
jae
cmpsb
mov
inc
adc
xchg
decb
pop
ror
push
lock
popf
aaa
adc
popf
fucomp
lods
wbinvd
cmp
sahf
pusha
and
xlat
cmp
sar
in
outsb
rclb
leave
pusha
cmpb
sub
cmp
add
or
js
aad
imul
out
inc
mov
lahf
jl
lret
ficoms
pop
cmp
insl
les
mov
fldcw
xchg
cmp
arpl
or
ficompl
sub
push
adc
jnp
sub
movsl
xchg
push
testl
mov
pushf
push
sti
push
xor
sbb
adc
add
into
pop
jp
addb
cmc
sahf
cmp
dec
add
jbe
cmp
fmul
in
into
inc
lods
notb
dec
and
push
mov
cwtl
dec
cltd
stos
loope
and
inc
bound
iret
loopne
bound
or
std
pop
push
pusha
int3
pop
sbb
ljmp
and
cmpsl
out
xchg
inc
aam
insb
pop
fcomip
mov
into
icebp
mov
inc
push
sub
out
xor
xor
gs
mov
inc
cmp
aas
xchg
and
sahf
shlb
push
or
rcl
pop
imul
popa
cmp
cmpsb
lret
pushl
dec
test
jb
leave
sub
in
pushf
inc
test
xchg
add
idivl
cmp
xchg
sub
cmc
test
pop
push
in
mov
inc
stc
mov
imul
fldl
or
mov
push
mov
mov
jecxz
and
imul
movsb
fucomip
and
pop
cmp
push
pop
outsb
sbb
mov
out
movsl
js
test
movsb
lahf
lcall
mov
sbb
mov
or
sub
loop
aam
insb
lahf
push
pop
add
add
and
dec
or
inc
dec
cmp
jnp
mov
lea
jg
aam
sub
inc
out
test
jne
iret
push
mov
les
mov
into
jecxz
or
jne
sbbl
loope
mov
pop
es
cmc
xchg
outsl
inc
push
lods
mov
cmp
jne
push
xor
lahf
ss
adc
outsb
ljmp
rcll
cwtl
pop
add
xor
bound
mov
jl
xchg
and
cmp
pop
addr16
gs
jle
xchg
mov
push
pop
dec
dec
adc
add
mov
in
add
push
mov
cmpsb
ds
sbb
or
int3
and
add
pop
mov
dec
loop
jns
outsb
add
pushf
mov
xchg
scas
xor
inc
test
and
inc
or
iret
mov
pop
adc
pop
rolb
pop
sbb
mov
out
lret
xchg
xchg
stc
lret
ss
pusha
jp
lahf
test
addr16
inc
aas
sub
add
inc
repnz
out
cmpsl
divl
xchg
test
lcall
lds
dec
sbb
adc
ss
push
nop
xchg
sbb
cmc
lret
xchg
push
fildl
fiadds
adc
inc
push
call
je
xchg
inc
ds
scas
pop
sub
mov
out
jl
mov
ja
sti
jg
or
mov
mov
or
pop
cmp
mov
sbbb
push
adc
mov
pop
movsl
loopne
repnz
adc
jb
in
adc
xchg
xchg
popl
pop
xor
dec
mov
dec
jns
push
loop,pn
int3
xchg
sbb
mov
jecxz
xorb
int3
fwait
popa
mov
in
in
mov
fs
imul
mov
xor
fbstp
and
rcrl
popa
in
sbb
or
sub
xor
and
cmp
pop
insl
lcall
es
add
xor
dec
mov
and
jb
rcl
or
xchg
cwtl
popa
lds
mov
popa
mov
shll
lahf
xlat
mov
dec
mov
daa
cmp
bound
push
loope
insb
mov
xor
inc
out
jle
test
out
adc
fisttps
sbb
int
addl
push
rol
inc
push
sub
and
sti
pop
push
outsb
gs
stos
sbb
filds
ss
cmp
xchg
test
cmpsl
out
cmp
sahf
sbb
inc
xor
outsl
or
pop
ds
or
jns
and
lcall
xchg
jb
inc
pusha
cmp
jg
in
mov
push
movsl
cmp
outsl
testl
cmp
rep
call
mov
scas
arpl
mov
scas
inc
xchg
pop
push
shr
js
xor
outsl
data16
mov
scas
push
test
std
inc
cltd
out
subb
repnz
push
shll
mov
add
sub
fdivrl
or
insl
shll
loopne
nop
daa
sti
inc
call
popf
lock
xor
dec
rcl
es
loope
outsb
adc
push
and
pop
pop
in
fmull
jecxz
or
or
mov
int
xlat
imul
ret
out
xor
cmp
or
repz
dec
arpl
jnp
jne
test
mov
mov
mov
out
push
sbb
pop
mov
cmp
lods
shll
rclb
popa
jge
push
sub
lea
add
leave
or
test
ljmp
es
cmpl
xorl
add
pop
aaa
test
in
dec
cli
xchg
cmpl
lods
xchg
gs
loopne
lret
ljmp
sarl
pop
repnz
sub
lock
cmp
std
stos
lds
or
pop
dec
jg
lahf
dec
push
ret
mov
leave
cmpsl
pop
ret
in
enter
int3
xor
add
dec
test
lock
and
int3
cltd
test
fnstenv
jmp
in
pushl
fcoml
shlb
mov
enter
mov
sub
scas
les
xchg
imul
cmp
mov
xchg
lods
pop
andl
mov
add
xor
test
xor
xrelease
in
sub
and
fsubrl
or
push
lea
sbb
fcoml
emms
imul
inc
or
dec
mov
jg
int
pushf
jl
rorl
jo
jne
adc
test
jp
negl
jle
inc
in
mov
das
inc
dec
or
cmpsl
bound
mov
jge
fisubrl
imul
pop
test
xchg
ret
and
pop
out
addr16
fsub
movsl
clc
cwtl
sub
fiaddl
sar
inc
add
xor
in
rep
mov
cltd
xor
xor
push
dec
push
fcomps
push
lods
lods
mov
mov
std
mov
sub
stos
xor
mov
sub
cmc
lock
nop
xlat
cmp
mulb
inc
pop
mov
sbb
scas
clc
jo
ficoml
xchg
xor
pop
mov
add
cmovns
push
scas
outsl
popf
adc
insl
jo
xchg
mov
inc
mov
sbb
jg
mov
ds
out
mov
fnsetpm(287
icebp
pop
repnz
pop
cmp
mov
dec
in
push
test
jl
insb
cli
sbb
mov
sbb
ds
sbbb
mov
negl
jg,pt
arpl
dec
cmp
stos
into
andl
push
imul
xor
cmp
outsl
or
out
clc
test
push
dec
insb
mov
fisubrl
sbb
inc
les
mov
cmp
loopne
mov
mov
push
dec
sbb
aam
bound
cmpsb
xchg
lock
sub
sbb
sti
sbb
add
sbb
in
cmc
mov
adcb
addr16
sub
leave
ret
mov
out
fldenv
pop
push
inc
xor
xchg
stos
and
mov
xlat
push
lea
and
sub
das
add
pop
icebp
sbb
cmpsl
xchg
js,pt
test
jns
rorb
repnz
mov
or
lock
dec
ja
jecxz
aad
fisttpll
iret
cmpsb
inc
xchg
call
inc
push
lahf
daa
loop
or
mov
loopne
js
xchg
and
mov
push
sbbl
or
gs
jl
je
shrb
xchg
xor
jecxz
push
add
rcrl
sbb
fcomip
push
xchg
or
lods
mov
adc
or
ss
lods
popf
add
jge
jnp
mov
mov
popa
sbb
pop
xchg
cmp
pop
mov
cmpsb
mov
inc
mov
jns
test
mov
leave
fs
lea
fisubrs
imul
add
fmul
pop
mov
nop
addr16
inc
jp
dec
sub
arpl
jg
lea
ljmp
mov
es
sbbl
fs
lds
mov
xrelease
jmp
jno
jno
pop
imul
pop
test
jle
rolb
adc
aam
mov
les
outsl
aas
arpl
leave
aas
dec
sti
sub
into
xchg
sub
cmp
roll
mov
xor
leave
dec
aaa
sbb
jmp
push
sbb
fdivrl
add
stos
ja
dec
out
dec
icebp
cmp
das
inc
xor
rcrb
in
fs
push
pop
lods
test
and
jns
mov
xor
jge
mov
test
push
pop
sub
insb
ret
out
or
mov
in
mov
lds
mov
xor
divl
in
mov
mov
pop
fdivs
add
jno
iret
nop
sahf
clc
mov
dec
je
mov
jmp
shl
lret
aad
ja
cmp
add
pop
out
sub
mov
rorb
push
lods
ss
or
call
call
lahf
adc
push
push
out
pop
aaa
andl
hlt
mov
aas
adc
into
xor
sub
dec
fcom
std
stos
cli
sbb
ss
pop
push
ljmp
push
cld
stos
xchg
lret
popf
or
movsw
sbb
mov
scas
aam
push
lock
repz
out
push
xchg
outsl
lods
mov
insb
sbb
clc
sbb
fildl
pop
andb
dec
mov
test
lcall
lcall
mov
push
insl
cmp
rcll
mov
stos
outsb
leave
xchg
lcall
inc
mov
hlt
std
leave
mov
and
ja
pop
inc
xchg
sbb
sub
mov
pop
jb
cmp
jge
lcall
and
xchg
xchg
inc
inc
les
cmc
or
jno
sbb
outsl
imul
bound
mov
lods
incl
fnstcw
test
aaa
lret
dec
or
cmpl
divl
cltd
imul
sbb
xlat
outsb
hlt
cmp
adcb
jmp
sbb
and
sub
inc
mov
iret
jp
repz
add
sub
add
cwtl
sub
repz
arpl
dec
cs
movsb
jmp
dec
pop
cld
mov
clc
pop
stos
dec
dec
add
out
clc
sbb
xor
mov
lods
sub
stos
push
lcall
add
push
pop
insb
or
sahf
pop
loope
inc
adc
fidivs
ja
pop
xor
add
add
and
pop
push
jp
xchg
pop
insl
sub
je
pop
mov
push
xor
outsl
test
shrb
lea
dec
shll
jnp
loope
add
mov
cmp
xchg
mov
pop
imul
add
mov
leave
xor
loop
adc
mov
addr16
cltd
mov
aam
call
test
sbb
stc
mov
jne
data16
dec
pop
fnstenv
call
stos
inc
pop
mov
cwtl
mov
mov
pop
push
push
sbb
pop
nop
daa
nop
bound
adc
jb
cmp
in
int3
cmpsl
fucom
push
fwait
mov
les
push
adc
jo
mov
repz
shrl
xchg
push
stos
cmp
or
jl
xchg
sti
jmp
dec
mov
inc
add
nop
pop
test
hlt
fisubl
outsl
xor
imulb
dec
jl
sub
pop
lock
into
pusha
ret
jbe
ja
sub
ss
jne
je
lds
mov
push
jmp
sbb
lock
pop
out
bound
loop
xor
fldcw
push
nop
sub
xor
sub
mov
and
scas
imul
fisubrl
fbld
loopne
jge
lret
movsb
push
and
lock
add
test
dec
je
popf
ljmp
mov
push
xorl
sti
xor
adc
inc
cmc
pop
adc
daa
inc
cmp
push
xchg
loop
xchg
adc
lret
js
shrl
inc
pop
adc
add
mov
jmp
jnp
xchg
and
lods
pop
fcomps
pop
lds
out
push
push
pusha
push
push
mov
mov
fimull
cmp
sbb
insb
cld
ljmp
mov
mov
adc
mov
mov
or
sahf
xor
leave
dec
in
and
dec
shlb
adc
cmp
xlat
repnz
push
popf
jne
jp
or
and
enter
jmp
arpl
popf
cmp
test
gs
fidivl
jmp
dec
nop
mov
mov
aaa
and
insl
in
push
and
sub
mov
pop
leave
dec
adc
jo
lds
insb
aam
push
and
imul
lret
push
sahf
xchg
or
cmp
adc
loop
add
test
cli
add
and
xor
lods
xchg
mov
adcl
popl
adc
lahf
jbe
sub
xchg
std
mov
push
in
jmp
shr
pop
cmc
sbb
pop
cmp
fisubrs
ret
in
mov
rcll
ffree
add
mov
and
lods
and
int
push
and
or
lea
sub
test
lcall
test
test
xchg
popa
pop
lcall
popa
xor
sti
push
mov
rcrb
xchg
push
inc
jno
sbb
ds
pop
sub
pop
lcall
aas
mov
pop
jne
insl
mov
mov
sub
xchg
add
call
dec
hlt
mov
or
push
rcrl
gs
adc
decl
std
std
mov
fdivrl
sub
popf
push
jne
or
cs
and
data16
or
in
dec
add
mov
pop
cmp
mov
push
xor
mov
daa
in
ss
sub
pop
jnp
and
movsl
sbb
jns
inc
lea
add
aam
imul
rcrl
jbe
lret
decb
jb
jno
mov
adc
mov
push
insb
test
fists
push
das
mov
iret
dec
dec
bound
mov
add
test
mov
stos
mov
xchg
outsl
pop
push
rorb
je
xor
and
lods
dec
add
jns
and
or
xchg
inc
testl
rorl
loop
aad
test
adc
push
in
rcrb
shrl
inc
sbb
pop
aaa
inc
fildl
jmp
loopne
cltd
mov
jno
addr16
data16
mov
lahf
mov
movsl
push
aam
mov
rcl
jle
lds
inc
mov
mov
int3
ss
movsl
gs
dec
and
aad
jmp
and
mov
data16
xchg
gs
sbb
jl
mov
xchg
adc
test
mov
push
ret
cmp
insl
push
push
mov
pop
fcoml
add
push
es
testb
add
sbb
sub
pop
adc
xorl
insl
mov
dec
xchg
cmp
mov
push
xor
mov
jge
jecxz
mov
push
decb
mov
pop
xchg
into
in
adc
xchg
push
cs
rol
ficoms
leave
mov
rcl
inc
sti
shl
loope
or
notl
lds
test
add
leave
cs
dec
inc
push
pmullw
xorb
popf
sub
in
int
dec
pop
mov
dec
adc
and
adc
adc
pop
cmp
adc
rorb
stc
lret
add
andb
lds
test
sti
inc
push
inc
shrb
add
mov
inc
inc
fisttpll
cld
xchg
jp
scas
in
test
movsb
or
dec
xchg
fwait
scas
pop
insl
xor
cmc
cmp
ss
inc
mov
outsl
inc
sub
mov
pop
in
sti
pop
inc
mov
orl
lds
sub
mov
ljmp
sub
add
frstor
xchg
adcl
xor
daa
leave
test
pop
pushf
loopne
scas
sbb
fldt
xchg
addr16
xchg
rcll
sub
hlt
sub
int
dec
daa
xchg
jbe
mov
dec
pop
inc
das
mov
sbb
xor
jo
and
sbb
pop
jl
int3
mulb
cmp
dec
test
cmpsl
daa
lcall
inc
push
mov
stos
xlat
int
dec
lcall
push
push
mov
push
pop
repnz
or
test
dec
push
xlat
ret
adc
outsb
dec
pop
push
imul
aad
sbb
dec
cmp
pop
or
jae
fisubrl
cli
in
mov
mov
lods
xor
lea
xor
lret
xchg
jge
add
sti
pop
push
dec
dec
lods
sbb
fisubrl
jle
nop
stos
test
js
imulb
jns
fcmovnb
call
stos
sbb
inc
push
mov
scas
loopne
aam
inc
mov
cs
sbb
fwait
adc
and
mov
or
jne
outsb
cli
rep
or
loop
iret
ljmp
fstps
push
push
fdivs
cltd
sbb
jo
dec
cmp
sbb
mov
cltd
or
sub
mov
add
sub
sbb
jg
in
inc
rcrl
jmp
jb
in
jl
mov
ficompl
cmpl
dec
jecxz
into
cmp
pop
hlt
out
sti
and
pushf
les
mov
ret
pop
mov
in
icebp
sbb
mov
sub
out
loop
js
cmc
insl
subb
sbb
cltd
scas
xor
add
out
cwtl
gs
mov
dec
inc
sub
dec
insl
xchg
ds
and
aad
lods
in
dec
fwait
pop
mov
fs
jmp
mov
mov
sbb
fadds
insl
icebp
jnp
mov
loop
xor
cmp
mov
xor
pop
ficomps
icebp
sub
addr16
dec
and
fidivl
cltd
and
ret
push
mov
mov
xor
cmp
add
iret
or
insb
cmp
out
lret
lret
pop
add
or
dec
cwtl
mov
repz
cmp
js
xchg
pop
shll
dec
clc
into
sub
xchg
fistps
sbb
mov
xchg
aad
cmp
negb
pushf
add
adc
jae
mov
stc
nop
flds
pop
lods
adc
dec
gs
xor
adc
and
and
call
shrb
cmp
xchg
pop
and
fwait
push
jae
ja
lea
pop
popa
clc
mov
push
inc
fistpl
adcb
cld
adc
lcall
repz
and
mov
les
pusha
lcall
je
mov
pop
and
mov
mov
mov
inc
imul
xor
test
jbe
inc
push
mov
andb
xchg
mov
jmp
scas
jle
pop
cli
mov
out
mov
mov
lods
pushf
stos
mov
mov
inc
inc
add
shlb
xchg
jmp
cmpsb
int3
popa
pop
push
or
xlat
sub
call
ja
fiadds
fiaddl
mov
fninit
add
dec
enter
xchg
std
xchg
adc
cmp
inc
mov
add
les
andl
scas
xchg
jp
inc
pop
cmpsb
pushf
lahf
jmp
out
dec
movsb
jnp
jle
sahf
dec
xorl
fs
ja
mov
mov
das
xchg
adc
fsubrp
cmp
cltd
das
repz
fincstp
adc
dec
inc
in
aaa
loop
aad
mov
mov
jo
inc
pop
ljmp
es
gs
clc
mov
jge
arpl
dec
loope
frstor
dec
xchg
jne
scas
imul
movsl
lds
stos
sbb
push
xor
jae
inc
shll
aas
push
xchg
outsb
dec
mov
pop
dec
xchg
cmp
shlb
push
aas
dec
pop
jo
add
mov
push
notl
pop
jne
js
lds
repz
dec
mov
jecxz
push
xlat
inc
pop
lahf
jmp
clc
xchg
lahf
shlb
mov
fdivr
je
and
leave
les
gs
movsl
xchg
jl
movsb
out
cltd
pop
mov
adc
fcmovnb
xchg
add
fdivl
sbb
mov
fs
pop
pause
not
testb
fwait
loope
test
or
cmpsb
and
mov
test
cli
push
sub
pop
cmp
scas
mov
aad
stc
sbb
shrb
jle
js
ds
in
dec
dec
mov
aam
xchg
gs
and
out
xor
insl
iret
jns
pop
insb
and
sbb
fwait
dec
orl
mov
push
ss
lds
sti
xor
inc
cmp
sbb
mov
push
xchg
mov
mov
and
pusha
fwait
out
fbld
xorl
cmp
lods
inc
mov
fwait
popf
shll
cmp
mov
cli
jg
fdivrs
fwait
xchg
cs
jle
xor
test
jle
xchg
ja
push
jg
jl
jnp
mov
xchg
inc
inc
fildll
data16
arpl
loop
push
aad
nop
inc
in
sbb
cmp
mov
xchg
ja
into
xor
fistl
mov
cmp
or
xchg
mov
dec
or
in
insl
sbb
xchg
jb
dec
fs
int3
mov
push
aad
jo
jg
test
jl
adc
mov
push
jb
push
test
sub
pop
clc
out
cmp
insb
sbb
push
sub
dec
js
jecxz
inc
dec
jmp
movsb
mov
mov
popa
xlat
jl
xchg
inc
pusha
in
inc
sbb
cmc
mov
mov
imul
shrl
pop
cmp
adc
sbb
mov
cld
xchg
jns
stos
fucomi
jnp
les
lahf
cmc
mov
jbe
shlb
and
gs
cld
dec
in
xor
xor
push
or
jbe
xchg
cmp
je
dec
mov
and
mov
test
push
xchg
or
jno
mov
cmpsl
call
ss
sti
sti
cmpsb
clc
icebp
sub
jae
adc
shrb
push
in
cli
test
pop
add
push
rorb
mov
mov
inc
test
pushf
sub
std
sub
insl
pop
pop
out
pop
jge
ss
out
pop
call
fwait
pop
stos
stc
jne
adc
xchg
ret
lea
or
dec
mov
imul
push
mov
test
add
mov
dec
jl
mov
ja
shrb
cwtl
in
jnp
xor
push
gs
movsb
adc
push
fists
or
add
adc
fcoms
push
jnp
stos
cmp
enter
push
mov
push
test
lret
fs
rclb
sub
iret
sahf
lods
xchg
xor
mov
mov
fdivp
dec
test
mov
add
xor
mov
mov
dec
mov
xchg
or
rol
mov
iret
mov
mov
push
shrl
or
jecxz
imul
xor
cmp
lea
leave
ljmp
pop
fldl
xor
adc
mov
cli
cmp
add
ja
push
imul
je
cmp
pop
xor
popf
adcb
push
dec
mov
fistl
push
in
push
stos
pop
push
mov
daa
mov
mov
or
int3
sahf
pop
sbb
sbb
fnstenv
add
push
sbb
push
pop
shl
push
cli
add
push
dec
lahf
mov
inc
idivl
adc
push
xlat
data16
add
mov
les
or
sti
sahf
lods
sub
lcall
mov
add
lret
inc
test
in
in
sahf
xor
adc
mov
test
andl
dec
sti
pop
loop
fs
out
or
dec
loope
aam
and
testb
jns
movsl
mov
loop
push
jb
mov
in
jle
dec
mov
jge
and
xchg
xor
stos
push
mov
clc
loope
outsb
push
adc
or
neg
jae
dec
inc
push
rcrb
enter
out
xchg
cmp
aaa
jecxz
lret
cmp
loope
bound
imul
shr
mov
into
sti
xchg
jns
stos
xchg
lahf
stos
jnp
int3
mov
jbe
mov
in
adc
adc
or
xchg
lods
pop
or
sub
int
sbb
test
push
call
jb
dec
into
sub
dec
sbbb
xchg
loop
ret
fsubs
call
fmull
stos
add
and
dec
cmp
inc
jns
xlat
sbb
in
aas
xor
push
fs
outsl
daa
adc
pusha
aaa
mov
pusha
mov
stos
aam
int
sbb
in
jbe
andl
xchg
ret
fidivl
fsubs
ret
jb
cmp
pop
push
sub
inc
sahf
loopne
push
mov
in
scas
es
sbb
cli
sub
push
push
into
cmpsb
add
push
aad
gs
dec
jb
enter
movsb
cmp
iret
imul
subl
scas
adc
cltd
sbb
pop
insb
ret
push
jbe
dec
mov
mov
mov
jo
mov
shll
pusha
push
and
push
mov
icebp
push
gs
mov
dec
ret
popa
jb
loopne
mov
and
cli
pop
lods
pop
push
cwtl
lods
jo
and
jb
lea
mov
ja
sub
or
movsb
popa
cmp
jb
mov
scas
inc
in
in
sbb
int3
fdivrs
mov
idivl
faddl
outsl
jl
and
outsb
out
rcll
inc
pop
add
xor
into
fmull
lock
inc
scas
scas
fstpl
cmpsl
inc
les
mov
pushf
xchg
sbb
lds
sbb
jl
cmpsb
data16
add
into
div
pop
adc
cmp
loop
jmp
jle
data16
mov
adc
sbb
inc
imul
aam
inc
mov
pop
inc
xchg
rcrb
call
xchg
ret
and
shrl
ret
lcall
clc
aas
lcall
shrb
fistl
mov
jmp
lcall
pushl
jo
xorl
sbb
xchg
ret
orb
mov
pop
cmc
imul
adc
push
out
mov
cmp
sbb
imul
xchg
aas
mov
test
pop
jmp
cmp
mov
sub
add
insb
add
xchg
les
xor
ss
sbb
cmp
push
inc
repz
in
popf
lret
mov
popa
or
hlt
cmp
loope
lods
inc
pop
stos
sub
icebp
jg
cmp
xchg
js
loopne
faddp
xor
dec
gs
es
xchg
xchg
or
fistpll
int
loopne
xchg
out
lds
inc
dec
mov
jp
imull
sahf
negl
xchg
push
mov
mov
mov
and
test
dec
mov
fimuls
sub
push
mov
repnz
decb
xor
cmpsl
aas
cmp
loopne
push
insl
les
jge
jnp
dec
dec
data16
das
pop
fistl
cmp
cmp
sub
sub
ja
xchg
mov
repz
icebp
stos
xchg
out
add
mov
adc
dec
rcrl
cmp
dec
pop
push
iret
sbb
lret
dec
jecxz
inc
jo
lcall
add
sahf
lods
jae
outsb
movsl
shlb
fisubl
jo
in
pop
mov
lods
jl
arpl
push
scas
lods
and
lret
xor
into
mov
fistpll
call
ss
push
mov
push
out
adc
sbb
add
addr16
dec
ja
mov
push
sbb
fdivrs
xchg
jle
into
jecxz
stos
pop
push
cmp
das
push
adcl
sbb
test
test
mov
bound
pop
cmp
or
pop
push
shl
cmpl
mov
dec
pop
jle
and
cmp
and
push
xchg
outsb
jae
cmpsb
nop
ds
popf
ds
mov
test
and
inc
xchg
outsl
fnsave
lds
int3
addr16
arpl
and
lods
pop
sub
mov
mov
ljmp
int3
or
sbb
pusha
aam
rcl
pop
decb
mov
cmp
out
adc
inc
int3
shl
dec
in
jno
mov
std
aas
leave
mov
sub
mov
sbb
xorl
andb
bnd
or
mov
pop
movsb
js
sbb
in
push
xor
cmp
fwait
cs
mov
xchg
pop
jg
stc
movsb
cld
xchg
pop
sbb
pop
push
outsb
sub
lods
lea
les
xchg
jmp
repz
fcoms
inc
fdivrl
ret
out
add
mov
dec
add
mov
push
imul
pop
sbb
push
fwait
adc
cli
idivl
mov
adc
dec
jl
outsl
pop
pop
aam
mov
out
mov
icebp
xor
orl
mov
push
lcall
rolb
mov
cmp
dec
cltd
mov
push
push
sub
sub
mov
mov
jg
dec
movl
arpl
pop
pop
clc
pop
jnp
add
push
sbb
pop
mov
pop
clc
outsb
enter
jge
or
stc
or
rorb
je
dec
lods
pop
dec
lods
or
jnp
pop
stos
aaa
in
test
lret
jmp
xchg
xor
imul
bound
or
hlt
lret
pop
jne
bound
rcrb
fstl
mov
mov
scas
repz
fsts
cmp
scas
fcoms
sbb
mov
pusha
push
jnp
loopne
sub
xor
pop
jge
jg
jg
adc
push
popf
das
adc
fisubs
mov
ja
inc
popf
jnp
jmp
jo
and
add
and
scas
rcrb
es
jb
test
movsl
push
aas
mov
and
stos
push
in
pop
adc
adc
add
mov
outsl
shrl
scas
sub
xor
jl
lret
jne
dec
dec
out
mov
jmp
adc
in
imulb
rcll
repnz
loopne
ret
outsb
xchg
sub
add
les
add
jno
or
jne
xchg
outsl
dec
ret
dec
cmpsl
sub
shr
mov
mulb
jmp
or
out
loope
sub
push
mov
push
lret
push
or
and
jbe
adc
andl
insb
mov
xlat
loope
push
cmp
xor
shll
aad
data16
rcrl
or
rcrb
lods
xor
xor
arpl
xor
jne
mov
pushf
dec
pop
aas
loop
push
jno
popf
js
mov
mov
idiv
pushf
gs
mov
sbb
inc
jge
cmc
mov
sahf
sbbl
xor
data16
dec
mov
push
adc
mov
dec
in
leave
test
mov
pop
mov
inc
dec
sbb
pop
ljmp
push
in
mov
push
test
xor
je
pop
jge
ljmp
leave
jae
mov
fistpll
shrl
inc
xlat
lahf
mov
das
ret
xchg
js
jo
out
push
mov
jecxz
imul
mov
pop
hlt
ss
jne
es
jmp
lods
xor
notl
jge
lds
inc
mov
sbb
je
mov
sti
xchg
sub
mov
lods
dec
jg
cmc
into
rol
iret
ljmp
or
aam
shrb
pop
sub
in
adc
cmp
or
arpl
cwtl
push
add
mov
jns
sarb
lds
sub
mov
mov
xchg
fstps
jae
fdivrl
cmp
call
xor
xor
xchg
lahf
mov
sbb
cwtl
iret
fmull
iret
daa
push
shll
push
fmul
mov
adc
loop
mov
pcmpgtd
aad
lods
out
jne
call
decb
sbbb
cld
roll
pop
sahf
incb
cmpsl
dec
inc
cld
push
mov
addr16
std
mov
shlb
cwtl
push
cmpsl
nop
add
push
or
jecxz
data16
or
aam
je
test
push
push
xor
lahf
das
or
imulb
scas
lret
rorb
mov
cwtl
cwtl
test
push
stos
pop
jl
imul
adc
mov
pop
mov
ss
pop
sahf
call
in
cltd
xor
pop
push
mov
mov
dec
into
cmp
jnp
or
xchg
pushf
pop
adc
cmp
dec
shrb
dec
mov
and
jns
inc
xor
out
jp
cmp
shrb
lret
bound
out
nop
mov
cmpb
pop
sbb
add
xor
sbbl
or
sbb
pop
divb
mov
jge
rolb
movl
jecxz
sub
xchg
std
and
aaa
loopne
scas
fucomp
daa
scas
ja
pop
dec
sub
add
test
pop
loope
lret
pushf
xorb
jp
fstpt
dec
mov
mov
sub
xchg
out
call
mov
cmp
sub
mov
mov
int3
xchg
add
adc
inc
add
cmpsl
into
stc
lahf
nop
sub
cs
mov
sbb
ffreep
loop
and
lds
sub
xchg
add
push
cmp
lock
scas
push
cmp
cwtl
inc
adc
aaa
add
pop
rcl
sbb
jp
cmpsl
mov
movsl
jp
lods
pop
mov
jno
aas
jbe
mov
lods
cmp
add
or
adc
and
pop
push
mov
adc
gs
test
fisubs
aam
xchg
xor
inc
inc
test
test
test
pop
lock
sahf
in
test
cltd
push
std
cmp
adc
fildll
dec
ljmp
adcb
jae
push
or
ret
pop
scas
fidivrl
jns
cmp
add
sbb
dec
ds
cmp
xchg
lret
adc
mov
scas
sub
in
sub
stc
pop
ja
lods
mov
add
scas
ficoms
sub
hlt
push
data16
jns
scas
cmp
add
mov
in
lds
push
xor
addr16
ljmp
jno
sbb
lock
imulb
test
cs
lret
das
push
push
in
test
lea
notl
aad
or
call
repnz
sarl
or
pop
sbb
outsb
adc
sub
and
adc
leave
push
stos
mov
stos
ret
lds
movsb
push
loope
loope
sti
enter
pushf
jno
ss
push
inc
cwtl
das
js
lods
sub
mov
inc
imul
pushf
mov
cwtl
ret
pop
das
lds
mov
dec
mov
and
test
std
mov
adc
push
outsb
add
dec
xlat
xor
xchg
jnp
dec
clc
popf
gs
lea
sbb
dec
hlt
out
sub
mov
xchg
adc
xchg
xor
sbb
addps
cwtl
pop
mov
out
test
or
push
mov
xor
mov
rcrb
sub
adc
xchg
stos
inc
mov
jmp
xor
mov
cmp
lret
xchg
pop
idivl
mov
push
notb
push
ds
cld
arpl
out
jno
sti
fdivrs
enter
mov
fbld
mov
movsb
in
mov
les
xchg
pop
mov
push
lds
push
mov
ss
jno
dec
loopne
aaa
out
loope
mov
fisttpl
sub
cmp
dec
cmpsb
jp
push
ficomps
cmpsb
jl
aas
outsb
or
jno
lods
sub
or
enter
cmp
insb
out
rorb
jbe
jecxz
ret
dec
or
inc
bnd
test
pusha
push
mov
fstl
sub
or
cmp
add
sub
lret
add
jg
and
stos
jl
adc
cs
ret
sahf
nop
mov
std
xchg
push
push
sbb
aaa
mov
repnz
loopne
jmp
xor
orl
lds
mov
in
add
inc
jg
cmp
inc
pop
push
ja
adc
mov
scas
lea
inc
pop
sub
xlat
rep
jns
mov
cmc
pop
push
aad
cli
jno
sbb
push
cmp
dec
jmp
repnz
add
mov
mov
sub
insl
pop
add
add
sbb
pop
daa
fcoml
rol
les
sti
add
adc
test
stc
push
add
adc
mov
and
xchg
cmpb
insb
mov
fsubr
push
outsl
cmp
outsl
adc
ja
shrl
cmp
call
inc
xchg
je
cmc
pop
jo
loop
mov
add
stc
adc
xchg
jg
fwait
mov
ss
sbb
lcall
xor
push
push
call
int3
xlat
xchg
in
pusha
or
jnp
mov
mov
cmc
ja
add
xchg
mov
cmpsb
arpl
ljmp
insb
sbb
jge
push
mov
fistpll
or
sahf
jg
push
xor
sub
xor
sub
push
xchg
cs
inc
dec
xchg
add
rorb
dec
sahf
jp
pop
lret
and
jmp
fstpt
bound
addr16
popa
mov
mov
add
push
enter
cmp
cld
mov
xor
and
mov
add
call
in
stos
mov
xchg
mov
insl
lea
punpckhwd
jl
pop
mov
mov
mov
stos
xchg
mov
pop
insl
cmc
lret
mov
mov
xchg
mov
outsb
outsl
mov
inc
sbb
cmp
inc
xlat
ja
notb
movsl
jae
lcall
stc
and
xchg
dec
xchg
rcrb
push
mov
add
stos
sbb
lret
lret
xor
stos
adcb
or
nop
push
pop
fidivrl
mov
adc
inc
mov
mov
pop
adc
mov
sub
sbb
xor
fs
xchg
pop
add
or
loope
xor
movsl
fs
fldcw
mov
clc
fnsave
aad
outsb
cld
test
lods
inc
std
fidivl
les
push
clc
xchg
test
sahf
icebp
mov
jecxz
adc
add
xchg
cmpsb
jns
fistpll
pop
xchg
fcompl
bound
xchg
jmp
sub
and
mov
xchg
push
push
mov
xchg
aad
push
cwtl
fs
shl
adc
pop
das
mov
movsb
fnstenv
and
into
addr16
hlt
sbb
mov
test
dec
roll
mov
ret
outsb
test
cltd
xor
and
cmpsl
rcrl
or
das
sub
dec
or
mov
mov
insl
xchg
add
and
lahf
mov
fcomi
xor
mov
arpl
ljmp
mov
sbb
call
mov
imul
mov
mov
or
pop
sub
loope
mov
cmpsl
add
jge
sub
ljmp
xchg
in
adc
mov
int3
xor
jns
pop
mov
sub
xchg
mov
adc
pusha
int
sahf
incb
dec
xor
pop
sahf
push
sub
jl
stc
and
lea
loope
subb
mov
xchg
shlb
dec
push
stos
in
push
cwtl
out
pop
aad
in
test
mov
sub
pop
in
jns
adc
jl
jp
loopne
dec
add
arpl
cli
push
and
dec
jo
jge
shlb
xor
shl
adc
jecxz
fwait
xor
mov
movl
es
sub
mov
es
jno
shlb
in
cmp
mov
adc
fwait
xor
scas
sub
mov
mov
add
inc
cltd
pop
sbb
and
or
ficoms
call
jnp
aad
dec
pop
mov
out
cwtl
mov
mov
adc
sahf
jbe
inc
shl
ljmp
stos
scas
fildl
or
das
add
lea
sub
cmp
je
sti
xor
push
ljmp
push
rcrb
rep
popa
cmp
pop
flds
mov
or
movsb
jg
push
movsb
pmaxub
decl
push
in
cmpsb
sbb
jae
mov
sub
fwait
xor
mov
mov
add
mov
ljmp
jmp
lock
and
push
pop
ja
mov
and
and
jne
pop
sbb
cmp
inc
dec
push
sub
sub
pop
pop
pop
ss
cmp
xlat
insl
out
dec
repnz
dec
addb
popf
adc
push
test
movsl
sub
sbb
shlb
jbe,pt
outsl
cwtl
lods
ror
ficomps
subl
lods
ljmp
xchg
repnz
std
pop
jg
ret
xchg
imul
icebp
inc
insl
push
repnz
cmp
jmp
adc
popf
stc
adc
or
jno
add
out
popa
mov
sbb
sbb
lcall
pop
pop
dec
in
push
js
mov
add
scas
adc
and
rorl
scas
outsb
out
js
jbe
mov
jge
loop
add
jecxz
pop
movsl
jno
int3
lcall
ret
pop
pop
and
aaa
cmc
bound
lods
fcompl
subl
cmpsb
je
mov
push
gs
and
fwait
ror
in
push
push
scas
inc
sbb
int3
out
popf
or
enter
mov
movsl
rcrb
std
pop
scas
out
mov
mov
loop
or
xor
cli
test
loop
add
xor
inc
adc
push
pop
pop
in
cmp
fwait
bnd
jle
aaa
nop
or
test
sbb
adc
pop
sub
pop
sub
sbb
ja
push
movsl
cmp
ret
ds
and
test
xchg
push
adc
jae
aam
mov
or
mov
adc
push
xchg
mov
aaa
into
fchs
dec
ffreep
cmp
add
je
ds
and
xchg
or
sti
mov
sub
stos
loop
dec
cmpsl
out
jl
push
out
xchg
gs
dec
push
mov
test
pop
icebp
stos
jp
cmpsl
pop
add
push
jae
jmp
pop
cltd
pop
lock
decb
or
pop
cmp
mov
jns
imul
repnz
lcall
jge
add
sub
jo
loop
sbb
dec
jmp
xor
or
sarb
mov
iret
pop
xchg
adcb
mov
sbb
pand
sbb
cmp
je
sub
push
movsl
data16
adc
jne
cs
mov
pop
pop
gs
mov
add
shlb
sbb
push
inc
pop
ja
push
or
jno
and
aaa
ret
shl
ret
mov
pop
jnp
imul
mov
in
je
push
mov
add
mov
enter
cld
fisttpll
inc
arpl
sbb
aaa
or
test
call
sub
mov
xorps
addr16
stc
mov
repz
daa
and
in
imul
mov
jnp
sub
xor
addl
mov
subb
jo
dec
outsl
pop
aas
push
xchg
cmp
aad
mov
sar
mov
hlt
jg
jmp
and
jl
ret
in
popf
loope
leave
xor
sub
push
jo
xchg
mov
les
jnp
jae
push
mov
scas
int3
pop
push
mov
test
sub
mov
inc
or
stc
jne
stos
es
cltd
cmp
cmp
mov
mov
pop
mul
jle
pop
sahf
popf
adc
mov
cmpsb
cmpsl
push
lods
das
jo
in
and
pop
pop
mov
test
cmp
or
pop
xlat
mov
mov
add
xor
imul
jae
push
pop
xchg
add
dec
jns
notb
xchg
add
push
push
sbb
mov
or
jle
cmp
add
mov
cmp
cmp
sbb
test
and
outsl
addr16
leave
enter
mov
xchg
cmc
adc
pop
or
and
sbb
mov
dec
add
xor
sti
jno
sub
and
add
out
inc
inc
mov
outsl
mov
mov
fidivrl
mov
outsl
adc
push
or
sub
arpl
ljmp
mov
and
mov
fbld
or
push
add
lods
adcl
or
iret
sahf
lods
lret
push
mov
in
pushf
xchg
sbb
test
fcomps
popf
or
movsl
jp
xor
push
rcrl
in
dec
lods
mov
cmc
sarl
inc
and
stos
push
lcall
outsb
push
pop
cmc
incb
rcll
push
scas
dec
scas
fcoml
into
jno
call
jnp
mov
pop
hlt
adc
shrb
loopne
in
testl
fwait
sbb
mov
iret
jnp
testb
push
sub
mov
test
sbb
xchg
mov
fdivrs
push
cmp
add
pop
outsb
jl
addb
lahf
sbb
into
ror
jge
lret
mov
popa
xor
adc
cmpsl
nop
push
xchg
add
xor
subl
sarb
jae
orl
xor
popa
data16
test
dec
xchg
js
andb
jecxz
orl
inc
jnp
in
out
out
test
xor
fs
inc
or
mov
into
and
inc
jmp
lret
push
add
xor
mov
jp
xor
cmpsb
xchg
test
jecxz
fistpl
or
ljmp
pushf
es
xor
cli
in
xor
jne
stc
xor
pushf
arpl
lods
nop
xor
sbb
jno
push
xlat
or
push
movsl
inc
xchg
fsubs
imul
out
xchg
mov
and
xchg
xor
dec
cmp
lods
andb
sub
mov
shll
clc
cmpsl
cmp
jecxz
sub
aam
add
lock
mov
sbb
add
mov
fwait
xchg
xor
dec
xchg
lret
filds
test
mov
icebp
es
pop
mov
outsl
add
sub
adc
das
hlt
dec
imul
xor
lods
lods
mov
repz
pop
pop
push
int
mov
sbb
int3
stos
mov
xchg
lea
sub
stc
xchg
mov
fsubrs
pop
inc
cmpsl
sub
mov
dec
orb
pop
mov
lock
ret
lret
int
jmp
sub
test
jge
cmp
stos
mov
imul
je
clc
push
dec
dec
pop
cmp
mov
add
inc
sub
cmp
jno
aam
sbb
call
out
sahf
repz
fisubs
aas
mov
cvtdq2ps
out
cmp
xlat
adc
push
mov
cmp
pop
cmpsl
jne
outsl
xor
jno
sbb
ss
dec
cli
xor
xchg
icebp
add
lret
push
jno
mov
jge
dec
pop
testl
stc
les
fiadds
popa
or
in
xchg
push
lea
jno
xor
hlt
push
jecxz
popf
mov
rclb
xor
lret
lret
add
sbb
popf
push
cmpl
xchg
push
sbb
ljmp
call
ficomps
dec
movb
dec
xchg
mov
add
sub
cli
dec
and
aas
pop
icebp
in
bound
push
clc
and
jbe
repz
arpl
xor
xorb
mov
jp
insb
jnp
shrl
adc
mov
enter
mov
sbb
clc
push
int3
es
int3
jnp
or
add
mov
hlt
mov
dec
dec
mov
sub
testl
lret
cwtl
mov
inc
rolb
mov
rcrl
cwtl
push
jne
in
sub
push
jmp
push
or
jle
data16
xchg
sub
push
add
mov
pop
loop
push
xchg
daa
mov
sbb
popf
push
gs
mov
pop
mov
into
sahf
adc
repz
fbstp
nop
sub
mov
cmpsl
nop
gs
pop
repz
mov
insl
jl
rol
pop
out
int3
sbb
cpuid
outsl
adc
xor
xor
lods
fldz
cmc
mov
imul
jbe
cmc
cs
stos
push
rdpmc
pop
mov
inc
fidivrs
push
lea
push
xor
jne
push
in
xor
pop
mov
es
out
xchg
int3
shll
cltd
add
xchg
xchg
das
mov
inc
push
fs
xchg
fiadds
mov
loopne
loope
adc
add
mov
mov
xor
fsub
cmp
jge
mov
stos
or
popa
dec
adcb
xchg
movsl
jne
test
pop
ficoml
and
in
shrl
push
mov
lret
pop
insb
xchg
pop
fimuls
inc
rcrl
adc
dec
out
jge
ret
mov
out
testb
push
jnp
and
xchg
sub
mov
push
mov
cmpsb
sti
cli
xchg
mov
sub
ret
pop
mov
rcll
dec
jecxz
inc
mov
pop
icebp
mov
mov
arpl
xor
cld
arpl
lock
ds
cwtl
mov
dec
jg
cltd
lock
inc
or
pushf
add
xor
and
pop
mov
dec
inc
mov
xor
addr16
cltd
popa
aad
outsb
test
adc
sub
fsubl
in
lret
xlat
lods
pop
cwtl
std
les
ja
pop
mov
xchg
repnz
dec
fsubrs
lods
movsb
fst
and
ret
movsl
add
lret
lret
pushf
mov
aaa
push
aaa
sbb
mov
shrl
aam
repz
mov
xor
loope
xchg
pop
xor
push
in
and
cld
push
cmpl
xchg
inc
fidivl
adc
or
adc
andl
mov
cwtl
xchg
subb
xor
incl
add
push
cwtl
dec
xchg
jno
out
test
jp
nop
mov
add
lahf
dec
push
inc
in
mov
fs
xor
lea
aad
mov
rcrb
fldcw
lret
dec
popf
hlt
test
mov
pop
mov
enter
insl
mov
adc
pusha
cmp
cmpsl
test
into
fildl
fildll
cmp
inc
cltd
sbb
lret
fcomps
cmc
pop
jno
pop
adc
dec
mov
sahf
pop
adc
push
mov
fxtract
mov
and
push
es
lods
adc
clc
hlt
or
and
sub
pop
popl
mov
lock
inc
sub
pop
mov
adc
fisubl
cld
or
dec
test
xchg
cli
push
and
mov
mov
sub
push
mov
push
inc
pusha
clc
je
jne
std
mov
ljmp
push
sbb
push
mulb
sub
int
stos
jle
xchg
andb
xchg
mov
data16
sahf
test
lret
mov
inc
cmp
clc
lods
cmp
and
daa
cmpl
push
incl
add
jnp
in
rcll
hlt
pop
leave
dec
pusha
push
fdivrs
push
push
mov
push
xchg
sub
adc
push
fldl
jb
inc
push
test
insl
in
fcoms
test
mov
and
xlat
outsb
fs
add
test
rcrb
or
hlt
imul
push
adc
cmp
sahf
and
mov
push
mov
mov
loope
fistpll
out
sti
add
int
jo
mov
into
add
xchg
mov
sbb
add
lds
in
fistl
lea
mov
jmp
cmpsl
arpl
pop
dec
jae
cmpsb
insb
imul
rcl
add
jmp
fstps
inc
sbb
fbld
movq
jg
inc
mov
idivb
pushf
lahf
ss
out
gs
imul
lahf
jmp
shl
add
push
pop
jb
test
mov
enter
loop
clc
cmp
cmc
scas
pop
jae
cld
mov
sarb
add
loopne
cmpsl
ss
test
shll
jle
sbb
sub
or
lods
lea
outsl
adc
stos
cld
push
adc
pop
jecxz
and
sub
mov
movsl
push
je
in
repnz
adc
adc
mov
fnsave
sub
xchg
scas
push
stos
and
jmp
out
icebp
xchg
xor
cltd
cmpsl
adc
pop
cs
mov
dec
xchg
sub
add
push
adc
ljmp
pop
jmp
add
pop
jb
fldenv
jno
inc
cmp
pushf
scas
ljmp
lea
push
cs
adc
fcomi
and
notl
xorl
lret
push
popf
lods
sub
sbb
mov
mov
in
or
jmp
in
jbe
cmc
dec
sahf
xor
aad
in
pusha
fdivrs
jecxz
mov
fwait
clc
mov
jmp
sbb
data16
cmp
cmpsb
push
sub
pop
pusha
jl
dec
cmp
sbb
mov
jns
lods
test
out
pop
mov
dec
jle
shrb
xchg
add
inc
cmpsl
imul
lods
xor
add
int
inc
testb
aas
xchg
push
aas
sub
inc
push
add
fdivp
mov
out
ret
inc
sub
sbb
jb
imul
gs
daa
or
xorl
icebp
or
stos
xor
add
push
lods
lcall
cwtl
jecxz
fcomps
cmp
gs
nop
sbb
leave
int3
dec
out
add
inc
stos
xchg
mov
test
loope
jb
sbb
fldcw
and
enter
inc
sbb
into
mov
inc
dec
gs
jmp
push
mulb
pushf
lods
pop
push
mov
in
push
outsb
push
xchg
andb
incl
ss
addr16
icebp
and
mov
xchg
xorl
and
add
mulb
jmp
mov
push
mov
jo
cmp
mov
stos
icebp
enter
lods
rclb
jbe
jmp
in
ljmp
bound
pusha
fsubrl
jecxz
xchg
push
lods
cld
ss
sub
dec
pop
cs
fnstenv
add
and
loope
nop
mov
in
pop
fists
mov
mov
fstp
push
pop
add
daa
inc
push
call
jae
xor
lods
insl
add
outsb
push
in
ret
sbb
cmpsb
pop
cmc
enter
or
sub
cwtl
das
insb
sti
fidivrl
dec
sub
sub
mov
sub
inc
mov
jae
lock
mulb
pusha
scas
test
add
add
out
xchg
movb
je
out
imul
add
or
into
gs
mov
mov
mov
jne
out
popa
mov
mov
push
xchg
mov
adc
cmp
cmp
insb
jp
inc
nop
dec
loope
ja
dec
loop
cwtl
out
and
icebp
dec
mov
stc
out
inc
mov
out
pusha
aad
mov
bound
jle
loope
jp
lods
xchg
cmpsl
jmp
add
lahf
stos
inc
inc
cmp
mov
out
std
mov
mov
fwait
ljmp
insb
jnp
adc
aad
add
sub
mov
cmp
mov
jbe
or
pusha
sbb
pushl
push
bound
cld
sbb
cmpsb
cld
ss
cmpsl
out
mov
inc
hlt
addr16
pop
adc
cld
shr
adc
push
iret
cli
bound
and
jae
lock
inc
in
sub
mov
fld1
es
add
iret
pop
clc
mov
lods
sub
stc
or
mov
push
jb
cmp
push
icebp
sbb
push
push
pop
jns
mov
xchg
cs
jb
mov
cmc
mov
dec
test
out
push
push
loop
int
xlat
das
inc
mov
imul
xor
ficompl
push
push
sti
fnstsw
mov
insl
or
daa
mov
fisubl
inc
popa
cli
ret
popf
mov
or
inc
cmp
test
outsl
rorl
je
dec
mov
fucomip
xor
movsl
jae
out
sub
push
inc
jbe
push
lds
fwait
test
int3
sub
sub
test
je
mov
bound
or
push
push
pushf
in
leave
loop
stc
mov
jecxz
cwtl
xor
or
push
or
in
xchg
sbb
jecxz
js
orb
lock
dec
pop
mov
fnstsw
cld
push
iret
fucom
ret
roll
in
loop
clc
cli
mov
cli
pop
xchg
arpl
or
imul
or
xor
lea
addb
add
xor
aad
inc
adc
jno
dec
pop
cmc
jns
cmpl
adc
ja
mov
xchg
xchg
and
stos
scas
cmp
pop
sbb
js
cmc
pusha
xlat
jmp
jecxz
xchg
xchg
cmp
scas
les
int
mov
aad
dec
dec
test
cwtl
sbb
dec
and
xor
sub
popa
xchg
in
sbb
sub
mov
or
movsb
sbb
data16
sub
and
xchg
sub
fisubs
ret
jp
xchg
mov
adc
mov
dec
cs
mov
adc
and
cmpsl
lds
add
fadd
mov
push
es
stos
inc
lret
rcrl
mov
leave
pop
push
mov
mov
cmp
mov
mov
inc
pusha
inc
leave
xchg
jmp
loope
out
sahf
sub
jle
stos
fimull
pop
xor
or
ret
pop
in
add
sbbl
and
pop
subl
add
xchg
jl
and
mov
outsl
push
and
arpl
sbb
aad
movsl
jbe
mov
push
jnp
dec
push
or
cmp
pop
scas
daa
lods
add
sbb
fistpll
or
out
in
push
gs
dec
jbe
clc
pop
xchg
sub
dec
cld
lea
jbe
test
or
fisubl
xchg
jb
jecxz
cmp
pop
loope
scas
ret
call
lods
fmull
mov
outsb
fnstenv
popa
sbb
fsubl
std
dec
hlt
add
fldenv
cmp
hlt
mov
sub
or
subl
push
or
cmpsl
adc
lret
nop
jae
fisttps
xchg
mov
cmp
push
rorb
sub
mov
lret
adc
sbb
jno
and
sbb
add
sbb
sahf
sbb
mov
mov
mov
popf
jp
sarl
aaa
into
scas
xchg
add
out
cwtl
rcrb
movsb
sti
pop
cli
imul
clc
inc
fldcw
or
loop
lock
sti
aad
cmpsl
mov
and
mov
push
cld
mov
sub
lods
inc
shrl
cmp
push
hlt
lret
jne
mov
leave
sbb
mov
or
cmp
in
inc
inc
push
or
mov
xor
sbb
cmc
pop
jg
xchg
scas
jo
cld
xchg
inc
sbb
fmuls
loope
jg
lret
in
fdivs
push
dec
push
mov
outsb
xchg
mov
pop
xor
mov
in
test
inc
inc
mov
bound
xor
cltd
clc
sub
inc
push
in
ficompl
mov
insl
iret
xchg
fdivrs
pop
jecxz
ljmp
jb
aas
in
fcompl
fbstp
mov
out
dec
dec
inc
popa
pop
xor
xchg
ret
je
ds
repz
xsha1
cmpsb
mov
sub
xlat
dec
mov
arpl
fcom
or
loop
fsts
sarl
orb
dec
in
jno
xor
mov
test
sub
lock
enter
mov
pand
jl
scas
cmc
xchg
push
rcll
aad
popf
pop
mov
movsb
mov
pop
and
rcl
das
lcall
movsl
imul
add
and
arpl
jb
into
dec
mov
xchg
stc
in
inc
cmp
jbe
inc
cli
mov
sub
push
rorb
xor
adc
popf
stc
fcompl
ret
jge
das
add
push
sbb
jns
sub
imul
jno
jl
adcb
pusha
loopne
jge
faddl
lods
inc
std
clc
ret
sahf
xor
jecxz
sub
jmp
movsl
xchg
divb
mov
nop
lret
ss
xchg
scas
lds
aas
mov
sbb
dec
lods
jno
stos
ljmp
fdivs
or
data16
jge
in
scas
mov
lahf
ret
cmp
lret
mov
or
mov
lcall
dec
pop
lods
cmp
in
mov
ret
movzbl
in
daa
icebp
ja
xchg
and
lock
mov
test
jle
shrl
inc
pop
pop
xchg
sub
mov
lods
jne
lret
aas
aad
mov
pop
negb
mov
pop
pop
scas
mov
fnsave
push
test
fidivs
dec
clc
push
sub
or
pop
and
push
int3
arpl
ljmp
fdivr
nop
or
pop
xor
mov
sub
push
test
loope
cmpsb
adc
test
in
cs
cmp
hlt
adc
jbe
sahf
and
dec
pop
xchg
sub
push
mov
push
inc
sbb
and
mov
mov
dec
lahf
movsb
les
push
lock
push
das
cmp
mov
add
mov
push
iret
gs
sbb
in
test
dec
dec
xchg
in
or
inc
fnstcw
insb
hlt
xor
inc
sub
sbb
into
or
mov
add
and
dec
pop
scas
xlat
outsl
loopne
test
addr16
pusha
aas
call
ret
jno
aaa
fidivl
inc
sbb
repz
imul
mov
aam
dec
test
mov
dec
or
neg
aaa
movsl
bound
sub
cli
xchg
sub
and
pop
inc
push
cmc
invd
jp
ret
hlt
icebp
sbbl
push
les
xchg
sub
and
stos
jno
mov
sbb
jo
hlt
loope
pop
mov
out
xchg
xlat
push
call
or
cmp
movsb
inc
pop
push
das
xor
dec
je
jp
dec
xchg
aad
sti
mov
xor
sbb
rcll
test
imul
xor
sbb
sbb
movb
movsl
outsl
les
push
sbb
stc
les
faddp
or
cmc
and
mov
add
cmp
js
mov
jns
push
mov
ficomps
mov
mov
aad
divl
lret
dec
lret
call
push
xor
mov
sbb
push
cmpsb
xchg
push
and
mov
adc
repz
out
out
repnz
sub
ds
jne
xchg
out
inc
mov
test
jno
or
shll
in
sub
push
dec
and
lods
dec
pop
pop
addb
mov
movsl
cs
adc
lret
bound
scas
out
pop
imul
adc
xchg
push
or
push
jbe,pt
inc
test
int
sub
and
in
std
mov
shrb
insl
popa
jmp
scas
subl
or
jns
push
stos
test
in
popa
lods
cmp
scas
mov
imul
or
pop
push
mulb
and
push
daa
or
ficoms
pop
adc
inc
cli
jns
push
lcall
and
adc
push
mov
aas
sub
rorl
cmp
adc
jb
jge
mov
pusha
cmp
lea
arpl
inc
sub
push
ds
or
stos
pusha
pop
and
stos
lds
xor
pop
or
xchg
sbb
ss
push
or
int3
sub
repnz
lods
jno
popf
jle
add
enter
mov
adc
jmp
and
testl
sub
cpuid
jae
push
out
cwtl
mov
out
bound
xchg
nopl
inc
movsl
ret
push
xlat
mov
inc
enter
mov
jmp
push
ljmp
jno
pop
sbb
jl
or
loop
add
mov
push
cmp
adc
je
xchg
cmpsl
int3
mov
aad
push
sahf
push
add
push
out
and
xchg
dec
loope
js
push
sbb
stc
scas
loope
pop
xchg
xor
ret
lcall
push
mov
jo
lods
pop
mov
mov
enter
cld
fs
xchg
push
scas
inc
xchg
ss
jmp
cltd
xor
adc
mov
loopne
cld
cmc
sub
dec
pop
push
test
and
fidivl
mov
fisubs
inc
adc
dec
mulb
cmp
inc
jmp
push
inc
xchg
jp
ret
les
jae
cltd
sbb
mov
sti
pop
xor
mov
jns
mov
jne
pop
cmovo
add
ret
leave
cmpsl
sub
and
xchg
pop
inc
inc
int
data16
adc
adc
gs
repz
add
adc
jle
flds
pop
sahf
mov
lock
insl
movsb
dec
insb
dec
inc
adc
mov
in
and
cltd
and
cmp
xchg
jl
and
clc
mov
sbbl
loop
xchg
cmp
mov
or
and
jo
stc
push
outsb
movsb
lds
lods
test
in
xor
das
or
es
or
fnsave
mov
inc
adc
mov
jae
jp
daa
pop
fisttpll
lea
fs
test
pusha
lret
dec
push
out
popa
sbb
xchg
bound
lea
ret
adc
mov
ret
pop
xor
and
stc
popf
xor
cmp
ss
push
xlat
stc
pop
sbb
shlb
or
sbb
bound
jnp
inc
jb
test
loope
bnd
aad
test
push
xor
mov
mov
bound
mov
push
imul
in
jne
pop
dec
fwait
mov
push
sub
add
xor
mov
mov
shrb
xor
imul
mov
loopne
xor
and
pop
and
add
lcall
fldcw
aam
mov
std
lods
inc
or
push
push
cmpsl
push
sub
dec
dec
pop
sbb
inc
fwait
das
xchg
fs
ficompl
cmp
pop
arpl
lea
bound
xlat
xchg
fcmovbe
in
inc
add
mov
xchg
push
ljmp
test
cmpsb
ret
jle
xchg
xor
fidivl
pusha
lods
inc
cmpsb
rolb
inc
aad
enter
test
adc
mov
movsb
stos
ss
jne
imull
sub
adc
xor
and
aad
lcall
js
scas
pop
loop
cld
nop
xchg
pop
add
jecxz
out
je
sub
jo
add
mov
insb
jecxz
push
and
jne
jmp
in
mov
out
sub
shll
inc
icebp
into
int3
movsbl
adc
bound
inc
xchg
out
mov
fdivrl
and
jle
jae
sub
add
outsl
lret
sub
loopne
call
add
sti
xchg
sub
sbbl
dec
mov
xor
dec
push
into
lods
xchg
popa
repnz
cmpsl
xchg
mov
leave
insl
pop
sahf
jle
aad
call
rcr
outsl
and
testb
fwait
test
mov
pop
mov
mov
clc
cmc
gs
sbb
and
sbb
andl
pop
insl
mov
mov
outsb
xor
insb
inc
or
test
pop
out
dec
rorl
movsb
cmp
inc
xchg
vpshuflw
sbb
arpl
and
ja
aaa
jbe
xchg
clc
pusha
andb
dec
out
out
roll
nop
js
test
mov
aaa
aam
sbb
dec
add
mov
inc
pop
test
xchg
into
jno
mulb
pusha
movsb
xchg
or
sbb
lods
imul
fcom
pop
xor
shrb
aad
push
jmp
cwtl
push
jno
dec
and
mov
incl
adc
and
adc
push
jb
movsl
mov
pusha
mov
in
sub
and
push
pusha
adc
in
add
cmpb
unpckhps
lock
lods
out
aad
std
jbe
lods
adc
cld
rep
xlat
outsb
mov
jns
or
lds
adc
push
fwait
xor
mov
cmp
mov
aam
dec
in
cmc
cmp
test
insb
call
stos
imul
mov
ret
xor
push
loopne
mov
push
push
insl
lea
cmp
inc
mov
or
sarb
scas
mov
jge
mov
leave
push
adc
push
inc
cmp
lods
jmp
mov
sub
gs
fucomi
stos
push
push
data16
negb
js
imul
xchg
aaa
cmpsl
sub
ljmp
sub
jns
add
sub
add
inc
movsl
cmc
push
xchg
sub
mov
psubsb
mov
clc
mov
cwtl
pop
lds
int3
outsb
bound
rorb
push
dec
cli
lock
mov
sbb
jo
inc
xchg
and
jmp
mov
and
pop
ja
inc
inc
stc
lcall
pop
in
mov
test
or
adc
adc
pop
jecxz
inc
push
xor
cmc
cld
push
fbstp
lcall
mov
pushf
lock
mov
sbb
int3
fnsave
jmp
nop
loopne
add
sbb
fisubrs
sub
imul
pop
aad
cmp
adc
adc
mov
inc
out
sub
sbb
fidivrs
mov
std
jo
dec
pop
xlat
cmc
test
imull
push
and
mov
cmpsb
xor
pop
sub
pushw
cwtl
hlt
pop
lret
sti
iret
cmpb
cmp
and
or
stc
push
inc
mov
test
daa
stc
or
movsl
sbb
inc
bound
mov
int
cmp
mov
jbe
add
test
add
dec
xlat
imul
or
xchg
imul
fdivl
inc
cmova
or
cmpb
mov
movsl
jo
mov
fsubs
adc
mov
cld
inc
icebp
mov
push
addr16
cltd
dec
mov
xor
xor
adc
jp
xor
outsl
inc
adc
ret
add
enter
loopne
push
mov
loop
and
imul
in
or
ljmp
orb
push
lds
scas
add
es
loope
rol
js
jle
fisubs
and
rol
and
add
test
xchg
in
dec
int3
fisubrs
shl
xchg
add
pushw
adc
lea
repz
push
or
out
pop
out
sub
cmp
sbb
ja
lcall
rclb
into
sbb
dec
mov
add
xor
cli
xlat
popf
mov
sbb
sub
xor
mov
fwait
mov
jmp
ret
inc
insl
iret
lcall
mov
cmpsl
cmp
inc
pop
imul
jo
jg
sbb
outsl
mov
cmc
cmp
ret
sub
lret
push
nop
inc
xchg
ja
into
movsl
mov
sbb
in
jp
sbb
xchg
inc
fsubrp
inc
xchg
xor
mov
and
jg
loop
js
or
push
shl
jle
or
imul
fcoml
into
mov
mov
add
call
cwtl
repnz
loop
leave
popa
mov
sbb
inc
in
in
xor
ret
add
mov
sahf
popa
stc
pop
push
jle
fisubs
jl
les
sar
dec
cwtl
xor
mov
imul
jns
or
out
je
aam
xchg
push
js
pop
inc
pop
ret
and
fdivr
loope
inc
rcrl
cmpsb
sbb
orb
push
popa
out
adc
popf
hlt
push
add
aam
arpl
andb
pop
test
shlb
test
lea
out
insb
push
adc
cld
imul
std
addr16
aam
or
movsl
cmp
stos
fdivrs
and
push
dec
into
enter
dec
push
mov
stc
jbe
popa
testl
mov
movsb
dec
push
mov
fsubrs
mov
pop
out
jno
inc
loopne
fcomps
mov
mov
push
pop
adc
mov
lods
mov
imul
cmp
cmpsb
jl
cmp
outsl
cli
dec
fcomi
jae
and
and
imul
lock
mov
mov
pop
mov
pop
fdivl
adc
lret
push
lcall
sbb
dec
rolb
cs
lds
mov
cmc
cmp
pop
add
pop
push
mov
loope
cmp
and
xor
lds
popf
push
mov
cmp
mov
inc
dec
lods
adc
sahf
inc
stos
pop
dec
xchg
push
in
fs
cmc
mov
jle
pushf
cli
cld
lahf
xchg
sub
stc
aad
aaa
push
mov
dec
mov
cmp
iret
movl
mov
in
into
iret
add
cli
inc
stos
in
pusha
sub
lret
bound
repz
movb
lret
aad
sarl
aad
xchg
mov
cmp
or
xor
sub
enter
mov
scas
pop
pop
mov
xchg
ret
arpl
jo
xchg
adc
add
mov
leave
or
nop
fstpl
and
xor
cmp
push
aas
cs
or
and
scas
mov
cmp
incl
push
add
push
inc
xor
outsb
popa
fsts
inc
cmp
mov
push
mov
push
and
in
pop
pop
or
insl
in
push
push
icebp
inc
or
mov
js
imul
inc
das
mov
xchg
and
arpl
pop
sub
adc
dec
loop
inc
mov
add
inc
cli
test
xchg
ja
sub
jl
push
lea
add
push
pop
xchg
inc
out
sub
jg
jl
das
scas
adc
sti
inc
repz
insl
in
decb
mov
test
sbb
add
sti
mov
bound
xchg
pcmpgtw
test
mov
or
test
sbb
mov
sbb
popa
fsts
add
push
movsb
mov
mov
dec
ss
sti
pusha
sub
sbb
mov
pushf
aas
aad
les
dec
clc
lock
test
sbb
rcl
out
inc
in
mov
shll
je
inc
out
mov
outsb
std
enter
mov
or
aas
pusha
daa
adc
loopne
loopne
mov
cmpsb
xchg
insl
les
push
testb
mov
cmpl
loop
loope
dec
mov
jnp
rcrl
or
clc
iret
adc
push
ljmp
jo
pop
insb
push
fistl
and
inc
xchg
repz
or
movsl
int
andl
je
lahf
push
iret
loope
shlb
sbb
mov
int
inc
fsub
mov
pusha
lret
mov
jbe
jg
aas
push
mov
fcomip
adc
add
inc
es
fsubl
push
jne
psrlq
mov
jmp
jbe
sbb
jg
sbb
pop
jmp
mov
adc
enter
or
sbb
mov
aad
xor
and
mov
jo
or
sub
mov
dec
cmpsb
mov
rorb
mov
adc
daa
dec
outsb
cmp
mov
ss
shlb
stos
pop
repnz
push
or
push
jp
xor
mov
dec
sub
rcr
out
fstpl
sti
sbb
mov
adc
xchg
movsb
out
cld
aad
adcl
test
jmp
test
mov
or
jecxz
clc
adc
aam
jg
xchg
test
popf
xor
jo
xchg
in
pop
in
stos
fsubrs
ficoml
dec
imul
lea
dec
pop
cmp
lahf
es
mov
scas
mov
inc
stos
inc
pusha
fcompl
cmpsl
push
sbb
jno
inc
cmp
cmp
push
add
fidivrl
fnsave
popa
or
jbe
pop
xchg
mov
data16
xchg
repz
test
loopne
cltd
jno
ja
add
and
or
lock
pop
mov
icebp
js,pt
push
mov
mov
rcrl
and
mov
sti
fbstp
jle
inc
inc
xchg
aam
loope
jmp
imul
sub
xchg
sub
sti
pop
mov
mov
mov
jp
jb
pop
sbb
cmp
sti
sub
sbb
xchg
push
movsl
and
sbb
or
adc
adc
cmpl
dec
out
sahf
fisubl
or
fimull
pop
call
jno
jne
imul
add
xchg
push
mov
cmc
shll
xchg
cmp
xchg
mov
adc
inc
inc
pop
ret
push
dec
adc
push
ret
test
sub
push
mov
negl
popa
lret
pop
or
call
mov
and
cmp
sbb
push
sub
fcomip
je
or
adc
inc
add
popf
mov
mov
mov
mov
inc
or
lock
scas
mov
sub
outsb
ficoms
cmp
dec
cmp
adc
xchg
mov
les
inc
push
inc
pop
cmp
in
mov
adc
cmp
shrl
inc
js
cmp
fmuls
mov
ss
std
push
clc
push
pop
jl
xchg
int3
sahf
sub
rorb
add
int3
mov
dec
mov
int3
addr16
add
ds
imul
arpl
and
cli
pop
sahf
sub
call
cmp
pop
mov
scas
das
aas
cmp
pop
ss
loopne
rcl
pop
loopne
push
add
sub
and
mov
xchg
jl
push
adc
xchg
fldl2t
lds
mov
inc
add
jle
pop
fisubrs
leave
push
lods
and
fstpt
jb
xlat
jl
inc
test
xchg
push
outsl
mov
pushf
sub
mov
lahf
inc
cmp
shlb
add
lods
cmp
jo
xchg
into
and
mull
adc
fadd
call
mov
lods
pop
or
dec
inc
daa
mov
ret
insl
pushf
sbb
inc
inc
jmp
xor
pop
ret
xor
sahf
stc
fucom
scas
pop
sbb
rorl
jns
jmp
add
das
pusha
andb
inc
or
lock
push
xchg
push
jmp
loopne
jo
leave
and
pushf
outsl
inc
loope
push
or
mov
aaa
mov
mov
mov
push
shll
pop
jecxz
sbbb
pop
call
cwtl
adcb
in
mov
sub
call
idivb
mov
les
cmp
sub
push
cmp
dec
repz
loopne
xor
cmc
stos
ljmp
out
dec
dec
lahf
es
pop
pop
or
mov
cmpb
fmull
loope
pop
mov
int
dec
dec
push
ljmp
pusha
bnd
cli
mov
xchg
test
dec
fs
std
cltd
gs
aaa
out
sbb
int
int
clc
testb
es
or
orb
movsb
ret
in
mov
inc
xchg
jns
pop
lcall
xor
in
loope
outsl
or
imul
mov
das
xor
aas
fs
lcall
nop
stc
cmc
cli
xchg
daa
or
sbb
or
and
cmp
lods
pop
int3
rcrl
xor
xchg
sub
jmp
push
ds
ret
in
pop
xlat
jp
mov
mov
fisttpl
or
sub
xchg
pop
in
pop
add
or
int3
repnz
out
std
mov
std
adc
sub
aaa
xor
xchg
fisttps
sub
pop
mov
pop
rep
pop
insb
pcmpgtw
add
add
ss
or
ja
pop
push
pop
push
push
mov
xor
scas
mov
jle
jns
testb
or
add
mov
movsb
cld
xor
lods
push
ds
aad
pop
push
mov
xor
ss
xchg
pop
imul
xchg
and
stos
dec
cmpsl
jmp
push
fs
fmul
lret
jb
cmc
mov
sbb
out
clc
aas
push
sub
jecxz
pop
outsl
adc
pop
fnstcw
lret
int3
xor
int
xchg
xchg
fcmovu
or
arpl
xor
mov
xlat
out
lret
cltd
or
cmpsl
and
pop
inc
adc
insb
data16
mov
lcall
xchg
in
mov
dec
cmp
jo
sbb
xor
stos
mov
sub
dec
lret
call
and
xor
inc
test
push
adc
lock
jns
mov
inc
int3
out
xorb
daa
mov
push
jecxz
inc
adc
mov
dec
xor
xor
add
dec
mov
adc
push
and
outsb
inc
fdivp
jo
push
jbe
es
dec
stc
insl
jle
dec
inc
push
lods
jo
mov
icebp
repnz
sbb
jmp
mov
sbb
imul
out
xchg
test
cltd
adc
imul
and
mov
inc
rcrb
mov
mov
ret
testl
outsb
int3
xchg
mov
lea
pushf
push
xchg
enter
inc
inc
mov
jle
mov
shrl
lock
dec
scas
aas
out
xchg
xchg
cmp
movsl
fwait
lea
cmp
ljmp
cmc
adc
test
and
leave
and
icebp
mov
pop
push
xchg
insl
popf
ret
jge
cwtl
or
rorb
loop
pusha
rclb
pop
add
xor
xchg
data16
xchg
ret
push
sub
fnstenv
divb
and
or
xor
cmc
je,pt
arpl
inc
enter
xor
subb
rcrl
add
mov
mov
xchg
jne,pt
jo
pop
cmp
push
mov
inc
dec
mov
loop
mov
push
rolb
sbb
data16
inc
pop
cmp
fisubl
sub
fistpll
jo
call
mulb
sub
xchg
push
idivb
cmp
push
test
arpl
jno
jmp
jo
mov
pusha
add
sti
pop
xlat
xchg
adc
mov
daa
mov
imul
lods
lret
push
sbb
pop
inc
adc
adcb
loopne
pop
outsl
into
ja
ret
test
js
lret
movsb
aad
adc
jmp
jno
pushl
int3
loop
xchg
xchg
push
arpl
add
mov
push
xchg
mov
and
sub
cmpsb
lock
lret
xchg
jb
inc
xchg
push
sub
repz
xorl
lock
sub
iret
movsl
hlt
jge
inc
adc
sub
jp
cli
lahf
je
movsb
or
or
shll
cmp
scas
or
shrb
ja
sbb
add
and
js
fisttpl
jae
lods
mov
bnd
aas
ds
lods
data16
lcall
stos
mov
xor
ret
jo
inc
shl
mov
xchg
push
ja
movsl
jp
adc
cltd
cltd
cmp
imulb
sbb
fs
cltd
lret
stc
and
sub
pop
aaa
sbb
dec
pop
cs
mov
mov
movsl
mov
xchg
movsl
mov
jge
clc
lea
popa
or
movsl
ss
mov
enter
sbb
mov
mov
dec
xchg
inc
adc
sbb
testb
stos
xchg
cmp
fsubl
jo
dec
jmp
cmpsl
cmp
popf
xchg
jmp
or
dec
and
cmp
or
xor
jecxz
lock
mulb
add
push
mov
mov
in
test
iret
out
cmpsl
aam
and
arpl
adc
mov
call
and
shrb
lods
pop
pop
icebp
stos
jmp
and
jle
pop
out
int
add
sub
dec
js
popf
lcall
adc
pop
xor
iret
out
test
adc
add
ret
hlt
jno
xchg
daa
neg
or
aaa
into
adc
test
out
rclb
jmp
dec
add
in
test
mov
movsb
cmpsl
lahf
shr
xchg
in
insl
dec
or
gs
mov
data16
lret
push
jns
push
popa
mov
mov
jae
add
sti
cltd
insb
js
add
dec
insl
popf
mov
jecxz
mov
sbb
mov
fistpll
dec
adc
popa
mov
imulb
push
rcrb
xor
ror
mov
jge
out
dec
in
das
dec
test
fstpl
fsubrs
jle
ret
imul
cmp
pop
bnd
adc
sahf
jns
sub
xor
and
adc
jg
xor
mov
hlt
mov
mov
popf
push
fmuls
and
inc
cmp
sub
movsl
adc
or
idiv
movsl
sub
int
push
add
push
push
jmp
xchg
mov
ja
pusha
test
lcall
out
mov
cmp
add
xchg
xor
pop
cmpsb
pop
pop
testb
daa
jnp
push
xchg
insb
js
mov
pop
cmp
je
ret
dec
testl
outsl
mov
int
and
and
lcall
lahf
ret
shlb
mov
shlb
std
and
jbe
push
stos
inc
je
dec
xchg
jne
sub
rcll
cmc
mov
inc
jmp
mov
sti
sub
adc
rorl
das
push
insb
jmp
jp
sub
sub
clc
andb
cwtl
mov
test
pop
nop
popa
jnp
xor
xor
ret
rcll
add
cmp
loop
sahf
jbe
shrb
aam
xor
iret
fcoms
push
loopne
jb
cmp
jecxz
jb
jo
add
stc
nop
xor
loopne
mov
xchg
and
push
mov
adc
inc
cltd
jns
mov
cmp
cmpsb
xor
addb
loopne
mov
data16
adc
cs
jecxz
push
and
stos
lods
aas
push
push
movsb
in
pop
inc
add
outsl
xor
mov
int3
add
mov
stos
fisttps
jb
xrelease
hlt
mov
push
pop
sbb
sahf
test
insl
pop
out
js
xor
sub
push
cmp
xchg
dec
in
orl
icebp
mov
out
push
pop
fisttpl
xchg
mov
xchg
mov
in
int
mov
xchg
mov
lods
push
shlb
sub
pop
mov
les
cmc
inc
ret
out
and
into
sub
add
inc
fistpl
xor
leave
cmp
mov
lret
out
mov
fbld
cmp
ds
outsl
loop
shll
mov
imul
pop
cmpsb
data16
mov
push
stos
repnz
pop
sahf
outsb
out
inc
fwait
inc
fadd
in
xor
les
repz
in
insl
in
push
cmp
rol
and
xor
fs
jecxz
push
jae
aaa
fcomip
outsl
sub
mov
insb
nop
nop
outsl
fdivl
xor
popa
add
or
xchg
dec
xlat
iret
mov
ficoml
mov
push
xlat
jp
fidivrs
dec
jge
frstor
push
clc
jg
test
lret
nop
sar
nop
add
jbe
mov
scas
dec
stos
cmp
rcrb
dec
loope
sbb
or
stc
mov
jae
xlat
pusha
fstpt
push
shll
pop
filds
xchg
lcall
fdivr
shl
int3
dec
out
pop
ret
fistps
jae
outsl
popf
and
jge
adc
mov
jno
mov
lret
jnp
sub
mov
dec
pop
and
jecxz
gs
movsl
pop
inc
mov
mov
mov
add
or
in
out
inc
rol
inc
mov
inc
xor
shll
inc
mov
mov
loopne
xor
imul
sbb
push
enter
cmp
add
outsl
pop
outsl
cmp
outsb
cmp
lds
ljmp
int
arpl
fsubr
xchg
enter
ret
push
cmpsb
mov
mov
les
pushf
ds
jge
scas
sahf
push
icebp
mov
fimuls
mov
sahf
or
nop
sub
and
mov
lods
mov
icebp
xchg
jmp
mov
sub
popf
cmp
int
add
insb
ljmp
push
xor
or
sub
fcompl
xchg
sub
lcall
ss
sbbb
xchg
add
or
jmp
fwait
jle
mov
and
aas
mov
mov
outsb
xor
push
ljmp
xor
addr16
cltd
movsb
jecxz
sub
xchg
mov
dec
add
test
movsl
es
ret
push
insb
jg
dec
push
andb
push
mov
sub
je
mov
sti
adc
ds
pop
cmp
out
int
jb
shld
sarb
cmp
sarb
add
out
jle
in
jmp
ja
fsubl
sbb
lret
and
add
push
mov
cmp
frstor
adc
mov
jg
test
cmp
mov
aam
cwtl
shlb
loope
in
adc
cli
fstps
gs
fistps
into
or
mov
lret
popa
dec
je
push
imul
pop
push
mov
je
cli
js
pushf
xchg
into
popa
add
inc
outsb
jle
sbb
or
or
bound
out
jmp
mov
jno
push
int
xchg
and
push
lahf
in
jmp
xor
pop
or
movsb
inc
lods
stc
insb
pop
arpl
or
sar
mov
mov
cmp
sub
in
adc
push
jmp
test
push
mov
push
scas
andl
xchg
shrb
jle
lock
or
mov
mov
outsl
or
hlt
adc
fidivrs
mov
out
cmpsb
outsb
pushf
push
xchg
lods
mov
xchg
add
jle
lret
jg
enter
add
dec
jb
xchg
jge
lods
jle
xchg
push
xor
add
fldt
negl
xchg
mov
mov
mov
lahf
sti
lret
addr16
movsl
repz
mov
es
jg
adc
mov
cmp
cmp
imul
movw
sbb
aad
sub
jl
jno
or
pop
insb
lcall
sbb
mov
out
ss
inc
loop
in
mov
adc
cmp
sub
mov
rorb
gs
jmp
mov
sub
mov
mov
mov
dec
add
scas
mov
int3
in
xlat
dec
loope
std
movsb
mov
cmp
pop
xchg
jl
repnz
jg
sub
leave
dec
icebp
lock
jo
rol
jl
je
insb
mov
lahf
mov
in
fsubrs
mov
mov
inc
cwtl
mov
push
dec
stos
xchg
push
push
pop
test
cltd
mov
das
ret
gs
xchg
dec
loope
and
sub
fs
dec
xchg
pop
mov
scas
jecxz
dec
out
call
mov
ss
gs
popa
xor
lahf
push
push
ljmp
pushf
or
movsl
xor
xor
jl
insl
insl
sub
mov
fdivrl
inc
loop
pop
stos
push
gs
adc
pop
fsubr
xchg
add
sub
out
mov
stc
in
stos
adc
mov
cmp
mov
faddl
mov
jle
aaa
mov
add
enter
in
mov
enter
insl
jmp
jp
dec
pusha
or
imul
mov
fists
dec
int
xor
int
mov
in
cmp
movsl
lock
pop
xchg
adc
pop
cmp
mov
iret
filds
mov
loop
xchg
subl
inc
cld
mov
arpl
daa
movsl
sbb
aas
xchg
scas
loope
sti
lcall
in
pop
push
or
mov
ret
mov
mov
arpl
push
sbb
movsl
push
xchg
fwait
shll
mov
sarb
cwtl
call
mov
outsb
jge
adc
pop
inc
notl
mov
xor
scas
push
insl
push
ret
std
loopne
jge
mov
ret
adc
loop
fnsave
add
mov
mov
inc
mov
pusha
mov
pop
pcmpgtb
xor
inc
mov
dec
pop
inc
das
push
push
filds
mov
push
loop
pop
adc
test
test
scas
loope
rolb
imulb
or
mov
mov
outsb
loopne
push
es
add
cmp
test
popl
or
xchg
pop
sub
jo
scas
adc
aam
pushf
cli
push
jmp
lahf
sti
test
jmp
rorl
push
jno
mov
lahf
mov
xchg
es
or
shrl
mov
adc
popa
push
das
addr16
mov
popa
mov
mov
nop
shll
cli
mov
adc
pop
jp
hlt
fldenv
loope
xor
mov
lock
aaa
jge
fnsave
jp
push
mov
cli
xchg
enter
mov
dec
test
mov
inc
inc
push
lea
out
iret
xchg
xor
lock
fiadds
pop
movsb
jae
xchg
pusha
or
das
call
dec
push
mov
sub
mov
lds
xlat
or
ljmp
push
xor
adcb
add
push
mov
loope
dec
cmp
std
or
xor
out
push
inc
jbe
dec
test
xor
inc
movsl
rol
daa
ljmp
into
or
fcoml
addr16
jne
mov
roll
int
mov
call
xor
ljmp
and
push
fidivrl
movswl
mov
dec
in
aad
loopne
jb
adc
cmpsb
inc
leave
xor
jge
mov
or
or
xor
scas
sub
adc
xchg
sub
mov
ja
int
movsl
test
xor
mov
pop
frstor
jmp
inc
xorl
or
xchg
pop
shlb
adc
xchg
cs
js
xchg
sub
jle
cli
mov
mov
adc
addr16
sub
cmp
cltd
pop
dec
stos
mov
std
inc
adc
sahf
push
dec
popa
lds
sub
mov
add
inc
jbe
btc
xchg
sub
fnstenv
cmp
or
xchg
mov
or
in
xchg
sbbl
push
inc
sub
scas
inc
iret
sub
int3
arpl
jp
and
adc
mov
aaa
int
out
jmp
dec
insb
add
int
out
repz
sbb
mov
xorb
and
pop
pop
cmp
xchg
sub
mov
popf
andb
push
jge
repz
cmp
inc
dec
jp
xchg
lods
jo
or
sbb
jb
mov
stc
arpl
fsubr
mov
js
add
clc
sub
xchg
outsb
ds
shrl
fdivrs
xor
jae
shlb
sbb
lods
add
xchg
aas
aad
mov
fisubrl
out
jb
scas
pop
sar
rorb
mov
push
lock
test
jno
pushf
stos
gs
jae
popf
xor
adc
mov
out
cmc
cmp
es
pop
lods
test
push
test
leave
enter
pushf
pop
jecxz
hlt
push
pushf
xchg
jb
jne
repnz
sub
rcrl
sub
rep
add
xor
fidivl
fisubrs
hlt
dec
rcrl
sbb
leave
out
push
pop
int3
push
in
and
in
test
mov
sub
push
mov
int3
fstpl
mov
addr16
pushf
es
adc
mov
push
mov
dec
arpl
repnz
mov
inc
push
cltd
xor
push
in
ret
adc
subb
or
sub
int
dec
dec
adc
dec
jg
das
cmp
mov
ja
xor
cmp
orb
std
pusha
in
in
sbb
dec
in
cmp
popa
xchg
mov
fstpl
mov
ljmp
and
test
ficoml
cmp
out
es
mov
mov
aam
mov
into
mov
stos
icebp
fildll
mov
xchg
shrl
not
stc
aaa
push
or
sub
and
push
mov
repz
jecxz
scas
push
je
sub
inc
out
scas
dec
ficoms
cld
cmpsl
xchg
repnz
subb
adc
jbe
sub
xor
sbb
leave
mov
mov
jecxz
xor
sub
shll
add
mov
and
inc
mov
pop
dec
or
push
dec
cmpsb
inc
xchg
cmc
ja
cmpsl
push
add
test
and
pop
aaa
and
jle
movsb
mov
sub
shlb
mov
mov
inc
shl
call
and
cltd
test
cmpl
or
add
adc
ret
dec
mov
dec
outsb
sub
stos
clc
es
sbb
adcb
jmp
xor
leave
and
add
push
jmp
flds
fcomi
aaa
jb
pop
mov
les
adc
push
lcall
mov
dec
fdivrl
aaa
xchg
not
daa
sbb
pop
scas
xorl
lock
or
mov
mov
push
test
lret
sbb
add
dec
push
xrelease
jp
jl
out
push
and
pusha
loope
sbb
inc
xor
jge
lahf
je
decl
push
ret
xchg
ljmp
aam
sbb
cmp
ja
pmulhuw
out
push
punpckhdq
mov
inc
pushf
cli
and
std
pop
dec
sbb
mov
test
pop
jns
jne,pt
cmp
jle
les
lahf
cmp
int3
je
subl
adc
lahf
or
iret
dec
lods
jo
out
pop
fistpl
mov
iret
test
fisubrs
inc
xchg
and
divb
cmp
inc
xchg
sub
add
or
gs
nop
cmp
jle
xchg
inc
sub
pop
test
ljmp
lret
xor
ja
adc
repz
sti
cmc
je,pt
dec
add
lods
xchg
pop
loopne
outsb
xchg
xor
in
rcrb
sbb
jp
sbb
dec
fs
add
ja
daa
mov
scas
sbb
inc
xchg
insl
rorb
fbld
adc
jnp
popa
addr16
cwtl
jno
push
lods
sahf
cmp
hlt
dec
sub
or
sahf
jnp
in
sub
fs
push
lods
jecxz
jmp
adc
xor
sbb
call
mov
inc
xchg
sbb
sub
xor
dec
mov
mov
sar
and
sahf
dec
outsl
les
es
mov
cmp
cld
js
outsl
les
repz
dec
push
push
mov
jmp
jne
cs
stc
sahf
mov
xlat
lock
shll
or
pop
jo
pop
cltd
std
mov
pop
ss
je
repnz
push
jne
xor
dec
lods
lcall
push
mov
cmp
fbld
ss
and
test
in
fiadds
sub
cmp
pop
cmpl
xor
cmp
loopne
mov
jno
rcr
jo
jno
out
cs
mov
push
adc
cmpsb
loopw,pt
pop
inc
jno,pt
push
push
nop
adc
push
sbbl
dec
push
sahf
js
stos
add
push
and
lcall
sbbl
cli
outsl
cmpsb
fbstp
mov
pushf
and
arpl
hlt
mov
cmp
call
insl
lods
outsl
loop
push
dec
add
cltd
das
aaa
mov
rcll
mov
mov
pop
jp
inc
add
ja
adc
test
push
mov
in
inc
ficompl
xor
ljmp
cs
jl
mov
sbb
jp
aad
mov
fwait
mov
imulb
sub
mov
shrl
cmp
pushf
pop
add
pop
xor
lods
add
adc
jl
aaa
into
mov
pop
int3
fmull
iret
fcomip
jne
xchg
mov
movsb
cmp
jbe
insb
mov
in
xchg
je
ret
movsl
dec
xlat
adc
cmp
pop
dec
outsb
push
smsw
inc
jbe
mov
push
stc
fsubrp
inc
data16
sbb
enter
movsl
jmp
push
insl
ds
shrb
in
fcoml
call
fsubrs
and
mov
push
push
aas
or
pop
adc
jle
pop
lock
sbb
and
rorl
test
outsl
lret
xchg
lods
jge
cmpsb
jecxz
pop
repnz
cmpb
data16
and
sahf
mov
frstor
push
mov
fimuls
lock
inc
mov
xchg
rclb
pushf
ja
ljmp
mov
cmpsb
outsb
imul
leave
les
cmpsb
mov
xorb
fistl
push
into
sub
pop
jb
rorb
hlt
push
nop
clc
push
movsl
addl
sub
adc
js
jb
pop
sahf
pop
xchg
xchg
stos
lds
add
add
mov
rcrl
es
lods
jmp
outsl
adc
jne
in
test
fdivs
or
xchg
mov
mov
cmp
rcr
mov
push
fildl
and
inc
bound
js
fwait
pop
icebp
xor
addr16
sub
popa
pop
movsb
jp
popa
outsb
cmpsb
clc
xchg
mov
inc
bound
xor
push
ja
lods
frstor
mov
mov
test
mov
push
push
dec
loop
in
cmp
loop
pop
push
xor
scas
imul
test
pop
out
adc
lock
cmovl
cmpsl
push
rclb
sub
adc
add
xlat
rclb
dec
jle
ficoml
sub
lock
lods
pop
cmc
cmp
push
cmp
mov
sbb
addb
ds
les
rcrl
mov
sbb
cmpsl
sbb
dec
enter
jmp
jle
add
scas
jo
sbb
adc
sub
adc
mov
pop
in
adc
jbe
nop
jnp
adc
ret
jo
iret
into
iret
fidivl
cltd
adc
and
xchg
hlt
ret
roll
push
push
cmp
xor
imul
movsb
sub
ds
mov
mov
mulb
push
dec
lret
mov
jnp
sub
lds
jge
call
push
mov
ja
daa
mov
xor
xchg
dec
xchg
int3
in
jno
cld
pop
jmp
xor
icebp
adc
pop
fsubrl
popf
jl
jmp
cltd
scas
push
popa
dec
in
inc
xchg
sub
imul
mov
into
cmpl
fistpl
rcll
mov
pop
data16
subl
xor
outsl
jns
push
aas
push
dec
mov
movsl
scas
inc
inc
int
push
fs
inc
sbb
ljmp
mov
data16
xchg
jns
pop
fdivrl
test
fmull
leave
lret
mov
dec
outsb
pop
cmc
lahf
sbb
cmp
xchg
jl
and
arpl
sub
lock
and
xchg
js
adc
jmp
out
test
add
aad
dec
nop
mov
mov
in
lock
jno
aaa
into
xchg
cmpsl
lcall
mov
or
inc
sub
shl
dec
int
xor
rorb
pop
lock
inc
fisubl
and
push
inc
popf
xchg
mov
int
das
cmc
ficoml
push
repnz
std
mov
and
dec
in
mov
repz
imul
sahf
jno
enter
insl
dec
cmpsl
jp
stos
sub
fwait
sub
sti
xor
fimuls
xchg
aas
jp
mov
add
stos
and
adcb
loopne
jne
push
xor
repnz
mov
xor
mov
cmp
pushf
xchg
scas
mov
jne
push
lods
icebp
add
fdivs
fbld
jl
mov
out
xor
mov
lods
aas
mov
fwait
sub
icebp
test
lahf
xor
sub
inc
push
enter
xlat
sub
jmp
int
ffree
dec
iret
mov
mov
dec
sarb
lret
xlat
shlb
mov
dec
push
jle
or
pop
ret
daa
pop
mov
push
lds
loop
mov
into
mov
dec
pop
lret
lahf
push
icebp
mov
hlt
fwait
push
push
inc
and
inc
mov
jl
adc
xchg
pop
pop
imul
mov
adc
dec
jmp
mov
push
jmp
pop
dec
popa
fsubrl
sbb
xchg
lcall
pop
adc
xor
push
push
jno
adc
movsl
adc
mov
xchg
push
inc
jp
fiaddl
mov
cltd
nop
and
ds
jo
add
pop
jne
sarl
xlat
mov
or
out
xor
lcall
or
jmp
jle
insb
xor
jb
insb
out
stc
popf
pushf
lcall
add
test
xorb
dec
test
push
push
adc
sbb
outsl
push
shlb
fstpl
xchg
lcall
stos
loopne
int
pop
push
xor
imul
lea
pop
mov
les
or
cmpsl
movsb
out
adc
dec
mov
call
cmc
push
push
and
and
pop
or
stos
xlat
sub
add
or
dec
pop
pop
pusha
jle
dec
xorb
cmp
pop
xchg
pop
adc
mov
xchg
mov
cmpsl
cmp
fistpl
in
add
lods
test
int3
stc
insl
xor
or
in
add
xchg
mov
adcl
xor
out
aad
add
and
mov
rol
scas
xor
jo
dec
jge
dec
dec
cmp
fcmovnu
xchg
adc
rolb
cmp
sbb
cmp
jbe
fmuls
pop
inc
adc
xchg
cmp
jecxz
addl
movsb
stos
in
and
pop
andb
inc
gs
imul
lcall
and
test
dec
loope
leave
mov
ret
stc
movsl
mov
adc
andl
sbb
ljmp
inc
add
frstor
or
insl
xchg
cli
test
aaa
xor
sbb
loop
clc
mov
add
push
cmp
push
pop
or
pop
repz
xchg
inc
ds
adc
jg
fs
ss
inc
xchg
cmp
frstor
cli
cltd
pusha
ss
gs
sub
ljmp
dec
pop
push
inc
dec
jecxz
cwtl
push
cmc
inc
jne
insl
sub
lds
movsl
hlt
mov
shlb
fisubrs
setge
jns
out
push
cltd
subl
fnstcw
cmp
cmc
sbb
dec
push
dec
in
fistps
js
addr16
sbb
mov
cld
dec
mov
mov
loopne
jl
jbe
or
adc
lods
pusha
or
fistl
adc
inc
inc
xchg
xchg
rcrb
icebp
add
add
jecxz
mov
and
and
lea
addr16
pop
mov
and
pop
pusha
mov
xchg
divb
pop
xor
sbb
in
push
push
or
dec
and
lret
pop
cmp
push
sub
ja
mov
in
xchg
xchg
inc
loope
rcr
sbb
push
enter
jecxz
sbb
int
lret
movsb
testl
sub
add
idivb
push
stos
in
adc
js
xor
aam
or
rorb
jg
or
mov
test
in
inc
push
stos
repnz
xorb
cli
popa
sti
jg
mov
insl
rcrl
icebp
andb
jnp
lods
xor
cmc
popa
jl
add
rep
loopne
xchg
ljmp
nop
xor
add
push
loop
in
mov
mov
insl
push
or
mov
xchg
push
pop
inc
std
pop
mov
insb
cli
cmc
jl
add
and
fiaddl
testb
fs
pop
jb
shll
and
movsb
and
add
lret
cmpsl
inc
mov
ret
repz
jg
inc
out
mov
pop
fwait
jb
jl
mov
loope
pop
ss
inc
dec
jns
and
jno
stos
cmp
xchg
lods
stc
jns
mov
clc
lcall
mov
ret
and
mov
repz
jp
shrd
daa
xchg
xchg
or
mov
pop
dec
fisttpll
imul
mov
fcomp
jbe
inc
inc
dec
hlt
jl
iret
sub
push
jmp
mov
jmp
jne
shlb
aam
push
cmp
xor
pop
insl
mov
add
xorl
fmull
pop
jnp
push
adcl
pop
sbb
ja
lret
sti
push
xchg
jl
stc
scas
lahf
mov
popf
into
cmp
es
fdivs
xor
and
std
test
inc
sbbl
daa
fisttps
pusha
lods
inc
xchg
push
push
dec
push
push
fldt
cmp
hlt
lods
pusha
andb
xchg
hlt
cmp
mov
cmc
or
aad
push
lcall
push
imul
in
xor
in
sbb
loope
jp
cmp
push
aas
into
dec
push
mov
out
out
popa
jecxz
and
xchg
xor
push
jb
mov
or
adc
mov
fdivrl
push
dec
mov
sbb
jmp
and
push
fisttpll
lds
inc
iret
outsb
sbbb
stos
xlat
arpl
mov
push
cmp
pop
mov
ret
push
out
xchg
insl
add
and
stc
dec
test
or
popf
incl
push
repnz
inc
or
sub
cwtl
jl
insb
inc
in
ljmp
pushf
cmp
cmp
xlat
in
cltd
fistpll
rolb
push
hlt
adc
push
or
cmc
sbb
test
jle
int3
mov
add
xor
ljmp
daa
or
inc
gs
and
sbb
xchg
icebp
icebp
mov
stc
inc
pushf
dec
pushf
stc
lock
das
icebp
inc
xchg
lea
lock
pop
dec
fiaddl
sahf
xor
dec
or
mov
ret
push
lret
into
fdivs
ja
push
out
xor
dec
call
add
xor
dec
push
rcr
push
adc
inc
fiadds
flds
xor
cs
mov
sub
lock
ljmp
pop
adc
sti
repnz
loop
pop
mov
orb
cld
lret
dec
scas
push
mov
dec
aaa
push
push
inc
negl
mov
mov
push
loope
les
sub
jae
fdivs
add
data16
shl
mov
sbb
mov
jnp
or
pop
ljmp
lret
mov
aam
fdivrs
xchg
adc
sbb
jb
cltd
sub
leave
xor
mov
push
mov
pusha
xchg
je
sub
mov
repz
mov
dec
cmp
dec
ljmp
es
jmp
in
int3
mov
lods
xchg
cld
mov
movsl
inc
scas
test
and
and
pop
adc
mov
loopne
add
push
add
icebp
in
add
inc
jnp
lds
mov
pop
popa
mov
and
dec
sbb
inc
mov
dec
filds
popa
imul
add
jns
fistps
jl
push
fwait
gs
insl
stos
inc
imul
mov
fucomip
mov
inc
out
sbb
sub
jle
cmc
mov
test
rcl
test
xchg
lds
dec
add
test
nop
push
lds
mov
mov
add
test
inc
jp
sub
jg
xchg
mov
push
jne
int3
pop
sub
ret
arpl
mov
jl
mov
cli
mov
lods
inc
xchg
cmpsl
lcall
mov
push
cmp
cmp
fbstp
enter
fadd
shrl
adc
int
ret
jecxz
dec
pop
jecxz
adc
jmp
mov
jle
incl
mov
inc
push
jnp
out
rolb
lahf
out
or
fs
adc
add
jne
pushw
adc
sub
xchg
push
cmp
add
inc
sahf
sbb
pop
jmp
inc
in
mov
sbb
push
xchg
ficoms
cmp
mov
push
movsb
mov
xchg
fcmovbe
insl
fs
ficompl
test
cmp
pop
fs
xor
push
mov
and
fwait
adc
inc
xor
push
jle
in
in
leave
or
or
sbb
sub
push
sub
int
xchg
pop
std
nop
xor
lahf
out
push
pop
mov
mov
mov
jae
mov
repnz
xor
adc
lds
jp
jecxz
xlat
xchg
pop
pop
adc
push
shrl
cmpsb
or
dec
cmc
stos
int3
subl
add
jg
outsb
leave
insb
lods
jo
int3
mov
into
shl
adc
sbb
ss
imul
loope
lea
fstpt
lock
mov
int
mov
aad
lahf
dec
lcall
pop
dec
inc
leave
out
jg
adc
cmp
push
aaa
lret
jb
cmpsl
movsb
ja
mov
mov
popf
sbb
std
lock
pop
and
cmovp
jb
scas
inc
jns
xchg
js
push
into
enter
pmuludq
jne
sbb
xchg
shlb
dec
out
mov
sarb
inc
pop
pop
dec
lahf
or
pop
mov
cmpsb
push
fcomp
mov
or
scas
mov
fdivs
dec
push
sub
pop
call
dec
fidivrs
xor
push
xlat
adc
sarb
xor
dec
sbb
aad
repz
and
jne
push
clc
inc
nop
xor
push
outsb
add
cltd
mov
inc
sbb
mov
push
jmp
xchg
cmp
stos
inc
fdiv
fsts
ficoms
cmp
aaa
push
imul
rcrb
cmp
sub
xor
jmp
xor
aas
cli
movsl
sub
sbb
jecxz
rolb
test
movsl
push
sub
mov
lret
imul
push
dec
xchg
and
inc
dec
pop
pop
mov
out
int
enter
rclb
or
jno
pop
pop
xor
and
sbb
mov
imul
lds
mov
addr16
push
ret
rcrl
mov
loopne
jae
xlat
outsb
mov
pop
outsl
push
add
push
xor
sarb
test
jne
je
xchg
scas
icebp
movsb
adc
addr16
nopl
jno
cmp
push
push
jmp
int3
jbe
add
in
add
jmp
movsb
dec
test
scas
inc
lret
mov
aam
sub
lcall
xadd
xchg
jp
mov
mov
mov
pop
jbe
lret
mov
and
test
cmpsb
ja
das
xchg
sahf
pop
adc
add
pop
mov
dec
mov
lret
inc
aaa
push
xor
sub
xchg
inc
repz
call
dec
imul
sbb
and
adc
test
aad
std
push
into
inc
data16
mov
faddl
xlat
cmp
imul
push
sub
push
andb
fs
xchg
dec
xor
xchg
jnp
pop
out
stc
inc
push
mov
test
pushf
scas
in
loop
fwait
lds
mov
loop
mov
sub
scas
add
sub
dec
pop
lea
and
dec
lret
sbb
mov
mov
pop
mov
fdivrp
push
imul
xlat
es
cmp
mov
inc
movsl
inc
popf
jmp
aaa
and
push
or
push
xchg
adc
mov
push
adc
adc
and
mov
mov
dec
adc
inc
cs
div
scas
mov
xchg
sbb
popf
sbb
insl
dec
mov
rcr
xchg
push
ret
mov
push
and
mov
aaa
out
hlt
pop
and
xor
addb
mov
stc
incb
sar
xor
sbb
pop
cmp
xor
pop
push
mov
mov
push
dec
and
rcll
push
mov
jb
mov
test
mov
in
push
bound
outsb
add
cmp
divl
movsl
jp
adc
pop
cmp
movsb
jne
dec
imul
shll
movsl
repz
mov
or
clc
arpl
jl
test
jno
insb
lahf
adc
sub
nop
sub
xchg
ljmp
mulb
js
int
jg
scas
inc
jl
cmpsl
mov
dec
mov
fdiv
cmp
int3
adc
jmp
push
jb
push
movsb
jno
jns
mov
xchg
push
enter
dec
arpl
ret
jo
popa
stos
jle
ds
movsl
test
sub
push
jne
orl
pop
mov
mull
pop
pop
sub
gs
loopne
jae
scas
mov
aas
std
dec
jmp
popf
jmp
in
add
pop
ljmp
pop
push
inc
cmp
inc
std
mov
xor
push
andw
sub
mov
jmp
inc
outsl
cmp
insb
imul
sub
adc
jno
push
daa
in
test
pop
dec
fisubrl
repz
cltd
adc
arpl
inc
xchg
jbe
dec
movsb
mov
ja
ret
mov
mov
push
int3
or
sbb
stc
xchg
sbb
mov
inc
and
sti
mov
test
shll
adc
cmc
sbb
loope
sub
into
pop
jbe
push
mov
stos
repz
adc
xchg
inc
cld
loope
or
adc
mov
loope
add
jae
out
cmp
and
and
hlt
mov
adc
push
sub
add
inc
pop
repnz
dec
stc
cmp
cmpl
dec
ret
outsl
aad
push
xlat
nop
mov
cmpsl
or
aam
ja
idivl
dec
sub
daa
mov
xchg
sbb
lret
mov
arpl
pushf
add
push
inc
arpl
loopne
push
fsubr
je
inc
ljmp
jb
fmull
fstpt
adc
nop
dec
sub
and
fnstsw
and
xor
fwait
or
sbb
sti
arpl
jmp
pusha
and
xchg
js
fwait
or
xor
es
lea
lret
pop
jge
leave
adc
jns
shrl
popa
addr16
xchg
inc
cmp
ja
fcmove
mov
shlb
dec
or
push
push
add
loop
fstl
add
adc
ss
aaa
cli
or
pop
dec
pop
jg
jne
inc
gs
in
rorl
and
scas
leave
xchg
outsb
adc
popa
faddl
lods
jnp
rcll
cmc
fcomps
clc
ds
xchg
xor
nop
and
adc
enter
sti
movsb
std
cmpsl
imul
hlt
ja
mov
inc
inc
stc
dec
popf
movsl
insl
jmp
ja
inc
inc
fisubs
in
and
pop
or
pop
sub
jle
lahf
ss
mov
jecxz
inc
and
xor
shrl
iret
enter
icebp
movsl
jo
notb
popf
arpl
push
jp
std
outsl
cmpsb
jge
cmpsb
jge
ret
clc
rorb
aad
cltd
es
pop
addb
data16
push
push
add
inc
mov
xor
mov
lods
add
or
and
mov
xor
xchg
add
pop
push
outsb
mov
test
jge
push
leave
add
or
gs
dec
push
add
stc
das
and
jge
inc
xor
in
cltd
jb
cmp
cmp
pushf
mov
push
jl
and
leave
iret
jo
shll
fisubl
mov
dec
xchg
ss
lock
xchg
call
imul
test
push
push
lahf
push
aam
mov
jp
sub
sub
nop
shll
cmc
test
push
jb
loop
sbb
mov
fs
pop
int
fnsave
push
out
pop
fwait
and
mov
lock
xchg
push
mov
data16
lods
and
cld
rclb
int
or
clc
jmp
cmpl
test
lcall
cmp
inc
mov
test
inc
fisttps
jecxz
ret
push
pop
push
stc
aam
xor
push
or
es
dec
pusha
testl
mov
test
pop
sbb
pop
clc
shrl
cmpsl
out
lods
xchg
outsl
inc
cli
pop
hlt
daa
add
cmp
ja
mov
lret
jge
cltd
mov
push
adc
sub
stos
add
std
inc
cmpsl
add
data16
sbb
lahf
sbb
inc
gs
leave
and
inc
adc
dec
mov
out
aad
pop
cmp
in
mov
push
push
push
dec
lea
mov
inc
push
jae
or
lock
aad
mov
inc
sahf
sub
cmc
inc
mov
mov
fdiv
enter
clc
std
mov
cmc
fldenv
clc
mov
iret
movl
mov
add
mov
add
xor
pusha
sbb
jnp
inc
pusha
adc
bound
imull
frstor
sbb
and
cmp
scas
imul
ds
scas
xchg
sub
movsb
scas
je
push
ficoms
xchg
cmc
or
test
scas
jp
fists
cltd
test
mov
cmc
mov
pop
frndint
mov
inc
fs
xchg
pop
jo
lret
jnp
inc
out
add
inc
repz
or
ds
bound
pop
fdivr
xchg
es
clc
or
add
mov
fists
lods
and
cwtl
xor
inc
xor
pushl
inc
xlat
mov
push
pop
cwtl
enter
cmp
insl
add
dec
imul
mov
rorl
and
flds
out
into
sbb
or
sub
and
dec
filds
sub
jp
movsl
nop
aaa
adc
push
push
out
outsb
sub
push
test
mov
out
mov
dec
push
push
mov
jge
repz
pop
jmp
movsl
cmp
shlb
mov
jbe
dec
das
loop
test
jl
inc
cmp
xchg
cmp
push
mov
dec
jb
hlt
imul
in
es
sbbb
movsb
cmp
jge
mov
dec
test
fsts
push
gs
aam
and
call
xchg
leave
addr16
cwtl
lock
insb
xor
push
push
push
mov
and
outsl
jnp
mov
ds
lea
push
gs
pop
ja
cmp
aad
out
jl
cmp
test
jle
xor
mov
xchg
cs
jecxz
mov
cs
mov
mov
leave
jl
or
jmp
sbb
sub
mov
insb
cmpsl
nop
fsubs
test
or
cmp
scas
jae
xchg
pop
inc
andl
xor
sub
pop
sub
int
lods
mov
loopne
push
sti
xchg
psadbw
add
daa
in
inc
in
inc
sub
mov
scas
jge
test
lcall
insl
add
inc
test
and
add
inc
stos
pop
inc
add
cwtl
xchg
shrl
pop
lahf
fdivrs
movsb
out
imul
sub
sub
nop
xorb
xorb
adc
add
loope
pop
jb
out
xor
dec
out
insl
xchg
stc
lahf
jbe
xlat
inc
ret
les
jae
or
xchg
add
sbb
sub
mov
scas
mov
jne
pop
or
xchg
lcall
dec
xor
aaa
test
ja
dec
jb
repz
andl
push
aam
inc
out
std
xchg
cmp
daa
lods
lods
jl
mov
or
out
and
jb
cltd
push
jge
nop
jle
fwait
mov
jmp
fld
es
shrl
pop
andb
sub
shr
add
dec
mov
mov
mov
xchg
mov
rorl
xchg
test
mov
mov
sbb
rorl
mov
movsb
mov
add
leave
test
mov
lahf
or
jae
movsl
push
mov
add
movsb
mov
cmpsb
jg
adc
xchg
lret
addr16
push
lea
das
je
aaa
xor
popf
xor
pop
inc
push
enter
sub
jo
les
sbb
push
mov
cmp
pop
icebp
jmp
sub
testl
and
add
jb
jg
stc
lea
xchg
test
mov
or
arpl
push
mov
lcall
popf
popf
ljmp
inc
jge
push
scas
sti
push
leave
lock
lea
pop
fucomi
and
adc
mov
mov
into
leave
mov
loop
jp
pop
mov
out
xchg
jns
aas
sub
imul
loope
xchg
repz
sti
inc
dec
xor
cld
gs
inc
or
fidivrs
xlat
lea
and
pop
cmp
stos
dec
mov
adc
in
inc
stc
xor
lret
xchg
cmp
enter
or
mov
pushf
jb
lret
mov
clc
xchg
mov
or
outsb
xchg
outsl
inc
push
aaa
mov
or
mov
cmp
jp
cmp
dec
cs
xchg
popf
mov
movsb
in
pushf
mov
xchg
js
mov
or
xchg
adc
mov
mov
adc
and
aas
xchg
or
xchg
cwtl
sub
xor
xor
cmc
dec
imul
pop
insb
bound
sub
outsl
stos
push
mov
sbb
push
test
mov
sub
push
hlt
test
inc
mov
ja
add
fs
xor
stc
dec
jecxz
mov
fldcw
lret
pusha
into
imul
ja
int3
fs
faddl
mull
add
add
mov
negl
loop
jno
pavgw
push
lret
mov
mov
pop
shrb
je
add
pop
adc
in
inc
aas
mov
lcall
lods
xor
or
pop
jns
add
dec
dec
push
aam
mov
lret
aas
mov
cli
mov
fldl
pmuludq
pop
inc
mov
jae
out
sub
mov
sbb
push
mov
bound
popf
cmp
xchg
mov
mov
dec
push
jmp
or
push
dec
mov
lahf
adc
xchg
push
push
or
or
mov
cmp
xchg
xchg
in
sbb
mov
je
stos
out
fdivrl
inc
stos
dec
mov
sbbl
test
and
cmp
push
xlat
push
sbb
movsb
arpl
rclb
pop
and
addr16
sbb
ds
push
movsb
mov
test
into
aad
lods
mov
cmp
lcall
cmpsb
cmp
mov
mov
sti
insb
xchg
adc
out
mov
pop
cmc
sahf
mov
push
scas
jo
out
stc
lods
subl
aas
mov
fwait
pop
pop
lock
jmp
jo
and
testl
mov
xchg
ficomps
push
lea
ja
dec
mov
pop
dec
ljmp
pop
lock
lds
jbe
inc
ja
ljmp
pop
lods
xor
fldenv
push
cmp
fisubrl
imul
shrb
add
mov
gs
pop
stc
or
loop
stos
lcall
sbb
mov
ja
adc
and
inc
scas
inc
push
pop
fnsave
sub
inc
in
int
jo
sti
or
and
sbb
inc
jg
insl
lea
sbb
mov
or
in
es
rcl
insl
lods
cli
sub
fmul
hlt
mov
js
or
push
jmp
mov
dec
out
aad
xchg
xor
std
ret
repz
sbb
lret
add
sub
and
mov
mov
xchg
sbbb
jecxz
pop
ds
xchg
mov
cmpb
jo
inc
push
cmpsb
jg
add
mov
and
add
jne
push
stos
push
je
push
into
jp
mov
jnp
cld
leave
and
test
sbb
jge
repz
jp
dec
sbb
inc
sar
lea
arpl
out
aam
or
into
stos
aaa
into
fucomp
stc
adc
push
jne
push
xor
stos
call
sbbb
lods
inc
jnp
push
loop
movsl
xchg
stos
mov
test
mov
jge
rol
mov
repnz
nop
stos
xchg
push
out
mov
lahf
in
outsb
sbb
cmpsl
push
orb
js
leave
and
pop
mov
add
sub
nop
mov
repnz
pop
aam
jb
ret
xchg
cmp
mov
sbb
and
shll
ret
pop
mov
in
test
or
add
in
in
mov
shrl
sub
add
mov
mov
xor
les
sub
push
pop
loop
mov
push
pushf
xor
push
cmp
sarb
cwtl
sbb
aam
ljmp
mov
ret
jecxz
bound
and
lock
shr
lods
pop
fs
jbe
mov
mov
mov
push
mov
notb
popf
ret
sar
stos
dec
imul
and
testb
push
adc
cmp
xchg
add
les
adc
bound
cmp
repz
sahf
add
cwtl
mov
cmc
movsb
ds
loope
adc
jg
rolb
push
cli
mov
xor
ss
or
les
loop
and
mov
imul
jb
repz
loopne
cmp
push
adc
pusha
jns
pop
cmp
fwait
mov
pop
dec
push
scas
aad
shl
mov
mov
xchg
gs
push
in
outsl
fs
lea
add
test
shl
jns
aam
mov
pop
in
jne
pushf
cmp
repz
mov
or
jae
mov
inc
ficompl
into
popa
sbb
enter
int
and
pop
out
mov
ljmp
push
loop
pop
sub
and
or
notb
inc
xchg
cmc
rclb
mov
mov
rclb
inc
push
adc
xor
mov
imul
loopne
push
shlb
or
jp
pop
ret
adc
das
push
pop
imul
aas
sub
mov
add
xchg
nop
daa
enter
add
imul
mov
mov
jns
jno
push
mov
fdivrl
lock
ficoms
sti
fistl
push
cmp
fcmovne
gs
push
mov
gs
add
mov
add
roll
push
ljmp
mov
or
mov
add
xchg
jb
cld
mov
enter
ljmp
jno
popf
scas
add
cmp
jp
mov
inc
in
pop
les
cld
rcrl
jecxz
mov
dec
data16
sub
sbb
jmp
cmp
sub
jmp
subb
sbb
cwtl
pop
lret
dec
shl
mov
xor
xor
mov
push
int
mov
inc
mov
fs
sbbl
xchg
add
xor
pushf
addr16
push
nop
stc
test
and
adc
push
mov
sbb
dec
stos
push
mov
push
cmpsl
sub
push
push
pop
ret
repz
cmpsl
cmp
push
insl
sbb
sub
sbb
loope
dec
fstl
sbb
fs
or
dec
inc
or
inc
jae
cmpsb
lock
inc
sahf
or
stos
int3
mov
aas
mov
xchg
mov
into
andl
negl
mov
xlat
lds
stos
mov
jae
loop
cmp
fnstcw
test
sbb
mov
or
or
aaa
dec
pop
dec
lret
push
and
xchg
adc
cmp
xor
sub
fnstcw
pop
pusha
mov
xor
mov
sbb
test
add
or
movsb
xor
sbb
mov
xor
rolb
out
mov
jp
jb
das
mov
xchg
das
int3
fdivs
adc
lret
mov
sahf
push
jo
or
movsl
mov
jno,pt
jecxz
push
ror
scas
dec
outsb
sub
lods
dec
lahf
push
cmp
imul
addb
out
add
add
mov
shll
push
push
push
std
cmovl
andb
mov
xchg
gs
arpl
aaa
xchg
test
loope
repz
into
cmp
lods
gs
lock
xchg
sti
xchg
mov
ds
or
sarb
adc
iret
fnstenv
movsl
and
inc
adc
ret
push
mov
shll
xchg
scas
and
cmp
testl
out
mov
lods
cli
icebp
ficomps
or
fwait
lret
int3
insb
subl
pop
cmc
xchg
bound
shll
jl
xchg
mov
inc
push
jge
arpl
pop
pop
xor
push
jl
add
push
stos
insb
das
sti
xchg
pop
xchg
push
addb
out
push
bnd
repnz
pop
pop
jecxz
mov
mov
stc
clc
inc
ds
adc
sbb
das
cmp
scas
movd
and
loope
shlb
in
sahf
repz
mov
cltd
push
mov
jae
pop
sub
lock
idivl
xor
leave
stos
jnp
loopne
adc
lret
xlat
cmp
rcrl
mov
sbb
lret
lret
dec
loop
out
in
sbb
dec
push
lods
pop
scas
ficomps
add
inc
sub
shlb
dec
repnz
js
xchg
lcall
dec
sub
jg
push
pop
pop
inc
je
scas
push
shll
ret
pop
repnz
ror
mov
mov
dec
inc
mov
adc
addb
mov
mov
push
jg
xor
pop
fstpl
rsm
in
and
imul
jle
jnp
cmp
sbb
outsb
push
sbb
cmpsl
add
xchg
dec
xor
lea
mov
popa
sbb
and
dec
rorl
cmp
push
mov
sbb
sbb
fisubl
push
test
xchg
xchg
cld
inc
imul
push
xlat
xorb
movsb
push
add
sbb
pop
shl
mov
and
testl
movsl
in
add
pop
in
jns
push
and
scas
bound
xchg
mov
lock
or
mov
adc
or
lcall
in
int
repz
sahf
or
aad
stc
mov
pushf
or
stc
nop
ret
icebp
out
inc
lret
std
dec
mov
or
and
outsb
mov
jle
popf
jo
pop
out
push
notb
test
loopne
loop
add
xchg
and
push
cli
push
mov
xor
fiaddl
icebp
dec
in
or
js
inc
call
cmpsb
or
xchg
sub
push
out
lods
inc
lea
jle
push
popf
rol
fiadds
decl
dec
stos
push
adc
cmp
pop
mov
hlt
sub
mov
mov
adc
mov
ljmp
push
out
es
cld
xchg
push
test
cltd
cmp
nop
test
test
testl
xchg
mov
adc
cmc
mov
fs
dec
xchg
xor
push
ja
insb
lods
subl
xor
mov
jmp
inc
enter
push
inc
addr16
je
pop
in
jge
ja
or
jnp
jae
into
xchg
and
and
or
lahf
arpl
mov
adc
fwait
and
aas
aad
out
or
cmpsl
add
data16
push
jmp
jmp
pop
bound
out
push
fbstp
gs
push
mov
sbb
clc
xor
outsb
movsl
mov
cmp
pop
jecxz
test
xor
sub
sbb
rcrb
stc
pop
pop
xor
arpl
int
cmp
xchg
xchg
jg
je
jl
scas
push
jbe
jnp
xchg
fwait
mov
sub
pop
ljmp
mov
sbb
or
scas
inc
pusha
or
adc
sub
nop
pop
xor
jb
xor
out
adc
pushf
test
mov
lock
mov
cwtl
xchg
xor
ljmp
jge
lahf
xor
rcr
jae
pop
movsl
jbe
fstpt
push
std
sbb
bound
jle
adc
in
pop
add
scas
xchg
hlt
enter
mov
bound
push
outsl
cmp
popf
imul
jns
das
inc
sub
aam
hlt
jp
lahf
imul
enter
test
xor
stos
xor
mov
xor
mov
aam
lret
rcrb
adc
dec
nop
addb
jns
je
and
cld
dec
mov
call
lock
jo
mov
fld
push
push
js
movsl
push
mov
out
xor
sti
cmc
icebp
dec
cmp
aas
add
adc
sub
dec
xor
insb
ret
pop
int
insl
jb
jbe
out
cmp
add
es
push
and
xchg
dec
bound
aas
xchg
cmp
test
pop
pop
xor
daa
sub
dec
into
jb
sti
in
push
aad
clts
cli
mov
data16
add
out
push
mov
mov
leave
or
or
out
pop
push
jnp
or
ja
mov
sub
dec
adc
fldcw
adc
mov
cli
jecxz
test
mov
idivl
or
mov
jecxz
call
aas
stc
xchg
adc
dec
or
cmp
mov
xlat
pop
loop
cltd
sbb
out
in
in
imul
ret
out
nop
addr16
jmp
out
mov
flds
or
sub
mov
fsubs
pop
mov
lret
incb
mov
xor
adc
xchg
push
jmp
test
aas
pop
daa
iret
jne
add
ss
movswl
cmp
in
test
pushf
mov
cltd
std
outsb
adc
and
xor
pop
jb
cmp
pop
xlat
lea
fnstenv
stc
mov
fdivrl
push
aam
or
xchg
push
stos
jne
fstpl
mov
fmuls
jo
call
adc
inc
dec
adc
cmp
cwtl
das
xor
fst
xor
and
fs
sahf
popf
xor
test
shll
xchg
xlat
outsb
lds
adc
cmc
sbb
fdivs
aam
insl
add
clc
xorl
aaa
jo
in
xor
cmp
pop
mov
addr16
fldcw
mov
popa
cmp
loope
jge
int
jnp
xchg
jnp
mov
inc
fstps
cmp
adc
pusha
pop
inc
nop
adc
inc
rclb
push
fs
xchg
mov
les
fisttps
fcomip
cltd
in
out
push
mov
xchg
test
fwait
movsb
mov
add
adc
inc
out
jle
and
jle
pop
scas
inc
hlt
or
dec
and
adc
jo
mull
rorb
cmp
fmuls
cld
and
or
jecxz
addl
jge
jle
cli
inc
mov
add
and
adc
fs
push
jecxz
jp
icebp
sbbb
ljmp
sarl
loop
lret
xchg
jle
xchg
pop
hlt
shll
and
cs
test
iret
xor
jmp
sub
adc
pop
jb
push
mov
insb
jb
mov
add
test
cmp
dec
out
push
in
insl
pop
cmp
jp
sub
cs
inc
outsb
cmp
int
push
add
push
pusha
dec
out
xchg
xchg
mov
jne
test
js
add
mov
sbbb
pusha
pusha
pop
adc
fcmovnb
jo
outsb
jae
push
testl
cmc
scas
or
mov
fldt
inc
out
xlat
out
xor
pop
ret
xchg
fisubl
inc
mov
cmp
cs
cmp
mov
or
cmp
xchg
filds
in
loope
push
shr
inc
cmpl
pop
mov
popa
add
nop
cmp
pop
cmp
out
inc
and
nop
pop
jno
dec
adc
and
mov
out
mov
lock
jbe
lods
sbb
pop
inc
push
cmp
in
imul
call
add
cmpsb
out
adc
mov
pusha
xchg
cmpsl
leave
sbb
fcomip
sbb
int
lret
cmp
cli
inc
mov
push
sahf
test
lret
out
cmp
mov
sub
bound
js
scas
popf
xor
pop
rcrb
test
mov
aaa
scas
cltd
sahf
mov
inc
mov
jbe
test
mov
sbb
pushf
xchg
adc
pop
sub
fimuls
push
cwtl
mov
test
cli
cmp
shll
mov
add
lret
orl
mov
fwait
jl
aad
or
iret
fistl
ds
sbb
xor
cmp
cmp
iret
mov
test
jge
cmp
shl
pop
jo
jl
pop
xchg
addr16
jns
sarl
shll
pop
addr16
je
lods
push
xorb
ss
push
add
push
xchg
and
stos
das
push
or
in
insl
xor
cmp
cmp
cmp
jle
in
mov
lcall
and
sti
and
sti
mov
jge
orb
fisubrs
pop
inc
push
mov
sbb
popa
jle
jns
rcrb
sub
iret
mov
pop
add
jg
mov
push
add
cltd
stos
add
add
fwait
jp
mov
pop
je
lods
sub
xchg
out
pop
movl
leave
outsl
push
lcall
mov
fsubrs
sub
mov
lret
pop
sbb
pop
push
popa
jns
shrl
stos
push
fldl
mov
ljmp
stos
inc
mov
mov
or
aam
lods
sarb
stos
subl
icebp
xchg
mov
or
mov
int3
out
sbb
mov
xor
popa
add
xor
pop
pop
mov
aad
das
xchg
lahf
sbb
fs
mov
je
lds
adc
xchg
adc
dec
mov
push
js
sub
inc
add
and
push
icebp
adc
mov
aaa
out
sub
sbb
icebp
or
mov
push
jne
adc
and
aas
push
loop
xchg
lret
mov
and
lret
add
faddl
ficompl
jmp
push
fwait
mov
jp
push
mov
push
mov
in
fidivs
cmp
or
inc
adc
xchg
and
mov
in
pusha
sahf
pop
push
out
sbb
jg
jge
sbb
or
rcl
pop
dec
std
mov
scas
pusha
int
push
ret
pop
or
loop
xor
in
sbb
pop
insl
pop
popf
adc
loop,pt
dec
sbb
push
aas
jl
jp
aaa
mov
inc
test
popa
scas
es
jmp
inc
dec
sbb
pop
cmp
pop
ret
adc
test
stos
outsb
mov
mov
push
mov
ljmp
jmp
cld
cwtl
sub
adc
popa
lahf
or
sbb
arpl
push
cmp
xchg
mov
jge
testb
rorl
pop
nop
addr16
dec
mov
dec
xor
add
pop
inc
pop
dec
sbb
jle
adc
in
std
test
add
test
xchg
lcall
xor
sub
sbb
idivl
jmp
mov
loop
mov
scas
sub
js
ret
loopne
test
xor
dec
jns
jnp
test
add
sbb
mov
and
push
pusha
outsb
fiaddl
push
hlt
dec
xchg
mov
popf
ds
scas
lods
or
out
mov
mov
cmpsb
cmp
lcall
inc
stc
mov
repz
adc
iret
popf
rorb
mov
mov
outsl
inc
jecxz
add
jo
mov
add
divb
add
jle
hlt
inc
fsubs
fisubrl
xor
nop
inc
and
adc
and
rorb
and
sub
movsl
dec
pop
dec
test
arpl
jb
imul
push
push
adc
call
and
out
add
int3
inc
gs
jno
fildl
xor
add
or
mov
xchg
lret
hlt
cmp
js
jnp
mov
inc
call
or
pop
clc
out
inc
push
mov
mov
in
or
xchg
xchg
dec
cmpsl
cli
in
mov
push
sbb
push
subb
or
sub
mov
sub
repz
mov
pushf
les
lret
jae
das
loope
mov
scas
cmpb
sub
pop
jle
stos
pop
mov
add
outsl
imul
shrl
mov
shlb
or
jns
sarl
enter
rorb
fwait
and
lret
xchg
cli
adcl
repnz
cmp
push
jb
cmp
sub
mov
or
inc
xchg
sub
push
dec
pop
movsb
pop
loopne
js
insb
out
jb
push
dec
cmp
fdivrl
movsb
mov
mov
arpl
jno
out
xor
mov
mov
cmp
stos
jmp
cmp
xchg
push
inc
lcall
fdivrs
scas
push
dec
inc
movsb
xchg
lret
iret
sbb
push
sub
lret
es
int3
jno
jns
pop
movsl
loope
inc
ret
aad
jns
orb
or
scas
sbbb
and
cmp
sub
shll
sub
lea
xor
mov
mov
sub
bound
pop
das
outsl
jnp
cmp
sbb
push
pop
sub
cltd
test
loop
andl
xchg
push
xchg
fisubrl
iret
pop
mov
out
mov
jmp
xor
or
push
call
and
xchg
out
adc
arpl
insl
sub
add
xor
ss
xor
inc
out
js
fwait
jle
inc
mov
jge
cltd
xor
cmpsl
xor
push
hlt
leave
pop
shlb
cltd
or
mov
inc
mov
or
and
jp
aam
pop
cmc
je
cmp
adc
xor
add
xchg
xchg
xchg
mov
mov
imul
in
clc
mov
pop
cmp
movsb
inc
or
fdivp
adc
les
sbb
xchg
stos
add
xor
ss
pushf
jo
add
js
decl
arpl
or
cmp
mov
hlt
pop
mov
jg
mov
test
mov
add
adc
imul
xchg
aaa
pop
pushf
cmp
popa
pop
sub
mov
add
insb
lret
mov
and
int3
mov
andb
xchg
dec
jae
lods
movsb
outsl
sbb
cmp
jl
into
mov
test
lods
into
sbb
mov
add
mov
adc
inc
js
pop
and
dec
add
mov
sub
pusha
mov
inc
push
mov
pop
sbb
pop
push
dec
push
faddl
cmc
lcall
cmp
mov
xchg
insb
in
add
mov
mov
mov
mov
jge
cmp
sbb
xor
mov
aad
dec
add
sbb
sbb
popf
pop
adc
lea
mov
adc
stos
xchg
fwait
xor
scas
sub
stc
int
sub
jmp
xlat
jns
xchg
icebp
clc
or
add
xor
outsl
fucomp
pushf
push
mov
icebp
dec
mov
pop
scas
xor
sub
aas
adc
icebp
fnsave
push
int3
rclb
mov
popf
push
fldt
adcb
or
in
xchg
jo
or
incl
and
icebp
mov
js
mov
imull
push
xchg
dec
pop
jb
movsb
lahf
add
adc
outsl
mov
hlt
mov
push
and
dec
loope
pop
inc
rorl
das
jg
popa
xor
daa
mov
rorb
lahf
movsl
in
adc
aam
fs
or
lahf
mov
and
jae
lcall
fidivrl
clc
inc
scas
mov
test
mov
leave
mov
xor
pop
xchg
pop
dec
enter
js
jmp
xchg
pop
jge
out
leave
add
out
setge
or
dec
mov
imul
aam
sbb
jae
dec
mov
ret
test
xor
mov
jae
in
sub
and
out
sbb
movsb
xor
jnp
aam
inc
fdiv
in
test
lret
hlt
inc
pusha
and
or
stos
push
and
loope
dec
ss
gs
dec
add
dec
and
add
jge
mov
add
loop
dec
lret
xchg
leave
sub
and
sbb
adc
hlt
dec
or
xor
aaa
cmp
push
test
add
dec
loope
xchg
nop
pop
mov
into
sub
and
mov
fwait
xor
and
outsb
jl
push
lods
or
mov
in
push
lods
lods
sub
pop
call
outsl
sarb
int
lods
pop
mov
cli
lods
cmp
cmp
xorb
loopne
lcall
dec
clc
popf
lcall
mov
aam
jno
xchg
dec
adc
inc
jnp
jmp
fists
fwait
push
pop
ja
jns
and
xchg
xor
inc
jmp
call
jecxz
leave
es
scas
outsb
xor
leave
dec
pop
addl
xor
or
shl
and
sbb
pop
sbb
in
push
and
mov
pop
mov
or
mov
push
sbb
fwait
xor
add
je
cmpsl
sub
xchg
cmp
mov
addr16
lahf
adc
insl
cwtl
andl
ret
add
fcoms
sbb
jl
push
cmp
test
push
out
jmp
sbb
sub
lods
enter
lret
jb
gs
mov
and
jle
cmpsl
cmp
popl
mov
lods
sub
ret
inc
xor
loope
arpl
mov
dec
fldcw
push
scas
mov
mov
push
idiv
das
repnz
lock
pushf
cli
xor
xchg
insl
aaa
push
jbe
push
mov
pop
rolb
hlt
nop
shlb
mov
insl
loop
push
or
xor
cmp
inc
outsl
mov
sbb
xor
xchg
enter
lret
pop
loope
lds
xchg
inc
xchg
add
jns
mull
jbe
adc
or
lret
mov
rclb
sbb
push
sub
jle
out
popa
pop
dec
ret
pop
mov
mov
push
push
orl
jp
jo
jo
add
xchg
test
ja
notl
cmp
enter
mov
and
lods
inc
ss
ret
push
std
hlt
adc
push
jl
lods
inc
nop
sbb
dec
push
mov
out
xchg
repnz
adc
ja
mov
add
cmpl
cli
jb
out
cmp
icebp
cmpsl
ds
mov
lcall
dec
iret
pop
inc
les
mov
aam
push
add
out
cmp
std
dec
dec
dec
dec
pop
sbb
leave
jl
aam
push
pop
mov
jnp
shr
jmp
dec
in
sbb
addr16
dec
test
xor
scas
rcrb
pop
aas
mov
dec
fnsave
out
and
lea
pop
subb
mov
adc
sbb
cs
jle
xchg
add
faddp
dec
push
cmpb
mov
repz
xchg
mov
rcl
daa
ret
sub
icebp
cmp
in
pop
cmovge
mov
sub
daa
arpl
add
add
lods
hlt
mov
mov
in
sbb
jge
lods
cmp
scas
les
popf
sub
sete
scas
lods
loop
insl
dec
jae
fsubs
jge
repz
imul
mov
pop
test
xchg
pop
jne
rclb
imul
pop
xchg
sub
hlt
adcb
inc
mov
fiaddl
in
mov
popa
pop
fldt
add
test
add
fldt
mov
pop
outsb
ret
jge
movsb
cmp
mov
xchg
or
mov
cmp
mov
jecxz
orb
mov
aaa
into
xlat
data16
arpl
enter
stos
push
and
stos
inc
call
dec
dec
icebp
jbe
push
sbb
mov
pop
hlt
inc
imul
fdiv
or
dec
cmp
jg
or
insl
subl
sbb
inc
pop
xchg
cs
test
push
pop
movsb
xchg
add
sub
pop
mov
push
shll
in
xor
sbb
sbb
pop
out
scas
sbb
or
out
inc
sbb
mov
inc
in
dec
mov
jae
and
and
jg
lret
sbb
pop
cmp
int3
fs
ljmp
shr
jno
mov
mov
test
or
adc
pop
mov
stos
mull
scas
mov
pop
push
sub
mov
daa
dec
mov
pop
mov
adc
les
das
notb
inc
jb
data16
jp
mov
testl
rclb
mov
lock
mov
sub
ja
mov
push
push
xchg
mov
je
rcl
sbb
sti
dec
push
adc
push
inc
jb
cli
aaa
xor
jb
or
test
pop
cwtl
stos
inc
ja
or
testl
loope
xchg
rolb
bound
mov
inc
mov
test
aas
into
negl
lea
and
jo
mov
sar
jl
ljmp
cmp
jb
int3
mov
stc
inc
andb
sbb
sub
lcall
sbb
mov
and
jno
cs
cmp
mov
push
shrl
lret
sbb
cmp
mov
push
fcmovu
stc
jmp
xor
pop
or
lock
cli
sub
test
dec
das
inc
out
mov
pop
lret
dec
fisttpll
jne
ljmp
cmp
sbb
push
xchg
ss
insl
push
test
dec
pop
out
push
or
dec
mov
mov
psraw
je
xor
pop
fldl
arpl
xchg
scas
inc
cmp
scas
int3
sub
mov
jbe
dec
cwtl
out
cltd
in
and
xor
inc
lods
int3
push
cld
cwtl
js
fstl
cmp
push
mov
stos
inc
xor
leave
mov
inc
mov
js
add
inc
int
movsl
xor
pushf
aam
dec
pop
and
cld
mov
test
sbb
test
mov
push
shrb
outsl
mov
push
xchg
lock
mov
call
lcall
fnstcw
out
addr16
xchg
xorl
cli
bound
xor
cmpsb
mov
sub
fs
mov
inc
cli
mov
dec
out
cmp
push
outsb
mov
shl
leave
add
xchg
push
lods
sub
cmp
push
inc
loopne
cmp
nop
mov
jbe
in
fcoms
lods
popf
mov
lret
out
iret
jecxz
jl
jae
xor
aas
xchg
jecxz
add
clc
cmpsl
cmp
insb
faddp
pop
pop
or
mov
mov
add
int3
sub
xor
jae
lods
pop
mov
push
ret
xlat
insl
inc
mov
insl
fs
mov
adc
pushl
mov
add
fistpl
dec
cs
fsubrl
stos
cmp
sub
repz
jle
xchg
xchg
and
jmp
or
fisubl
mov
fsubs
xchg
mov
fsubp
mov
xchg
and
xlat
int
in
cmp
mov
aam
pushl
xor
dec
pop
push
mov
movsl
push
test
lret
cld
sub
push
pop
jno
into
repz
gs
sbb
xor
and
movsb
pop
shl
vmovaps
push
pop
lock
stos
jne
fisttpl
mov
mov
jns
cs
test
repnz
sub
sbb
orl
movsb
test
jmp
out
pop
insl
sub
xchg
xor
icebp
xchg
leave
or
fs
gs
cmp
fnstsw
jb
mov
std
shl
insl
and
mov
jb
ds
and
fildll
xor
scas
dec
xor
pusha
fwait
mov
test
pusha
mov
xlat
iret
jne
sub
insl
push
inc
rcpps
xchg
stos
adc
or
sub
sub
in
pop
sub
je
xchg
adc
mov
or
jne
jns
mov
fcoms
ss
add
cld
cmp
xchg
cmpsl
mov
ljmp
aas
xchg
push
jno
jo
in
push
dec
inc
mov
loopne
jl
sub
adc
jecxz
jbe
mov
sti
mov
jns
dec
add
push
cmp
pop
mov
fsubrl
fimuls
push
mov
rorl
mov
out
stos
push
int3
sbb
xor
test
cmp
jl
sbb
push
outsl
sbb
loopne
sbb
icebp
in
jle
inc
xchg
adc
cmp
sub
add
inc
fs
and
sbb
add
loopne
adc
ret
xor
mov
adc
sti
jle
adc
pop
shll
loopne
fldenv
dec
inc
shr
stos
xorl
mov
push
ljmp
push
popf
inc
idiv
mov
mov
imulb
icebp
mov
aam
aas
lock
sbb
test
divl
mov
sbb
sbbl
ja
lret
sub
pop
jbe
cmp
jg
cmp
movsl
dec
add
mov
and
xor
mov
cmp
out
sub
dec
push
jnp
xlat
imul
repnz
add
fwait
jae
xor
and
jno
mov
ret
cmp
push
jae
xchg
pusha
arpl
aaa
cmp
push
push
jb
in
inc
and
leave
dec
in
sbb
mov
pop
inc
inc
mov
fwait
sti
xor
push
jecxz
add
xor
xchg
dec
sbb
mov
xchg
sub
adc
iret
shll
int3
pop
or
xor
dec
jae
aam
xor
in
xchg
ror
xchg
inc
and
scas
mov
adc
inc
fs
rorb
cmp
cld
lcall
cltd
shlb
repz
out
push
int
or
dec
adc
jns
push
aaa
xchg
inc
push
mov
inc
call
sbb
enter
push
add
mov
in
mov
inc
out
dec
cmpsb
xor
int3
lret
sub
adc
mov
dec
andb
mov
js
icebp
cmp
das
mov
out
aam
cwtl
pop
leave
jb
dec
sbb
xchg
push
std
sahf
ss
adc
or
mov
mulb
pusha
test
lcall
cmp
fstp
push
nop
fadd
enter
push
jecxz
dec
rcl
add
roll
rcrb
ja
mov
ror
and
aaa
cmp
lds
xchg
je
lods
aaa
cmp
je
jmp
and
dec
and
push
push
push
iret
fiaddl
out
aas
sti
scas
inc
sub
inc
xchg
jae
cmp
and
dec
pop
lods
inc
add
subl
lret
sbb
sti
jl
sbb
xor
cmp
push
orl
hlt
xchg
sar
leave
mov
cmp
jmp
inc
fcmovnb
or
cmp
popa
aad
xchg
adc
jbe
adc
jmp
mov
bound
divl
xor
jae
divl
or
pop
inc
jl
icebp
push
jo
fwait
mulb
mov
fwait
or
jns
aaa
popa
arpl
into
clc
push
decb
xchg
mov
js
mov
jg
mov
jmp
jg
dec
rol
cli
arpl
out
es
mov
loope
movsl
cmp
inc
pop
lock
mov
add
sahf
cli
or
add
mov
dec
rcrl
mov
outsb
add
lret
dec
or
cmp
jb
dec
sub
adc
es
push
test
jae,pt
jno
mov
pop
sbb
cmp
xchg
iret
cmpsb
cmp
sub
mov
aam
or
loopne
outsb
pop
jo
orb
cmp
jo
mov
pop
sub
popa
scas
adc
push
subb
mov
rcrl
cmp
pop
lock
fisttps
xorl
push
mov
pushf
sub
enter
sti
mov
mov
dec
and
xchg
testb
push
stc
inc
cmpsl
les
inc
and
mov
mov
fcoml
movsl
sub
push
loopne
outsb
lods
mov
fwait
xchg
xchg
aas
aam
cli
add
sahf
sbbb
std
dec
int3
and
clc
pop
adcl
loope
test
nop
stos
pop
cli
and
mov
stos
bound
into
sbb
jecxz
dec
stc
mov
loopne
dec
loop
inc
jecxz
xchg
mov
xor
push
test
inc
bound
sub
imul
mov
bound
lods
add
ja
sub
fstpl
add
lahf
jmp
push
loope
imulb
mov
imul
cld
push
xchg
pusha
leave
pusha
notb
lods
addr16
in
push
xor
lret
shll
jbe
fwait
bound
sbbb
mov
leave
in
ljmp
test
je
inc
js
ret
cmpsl
jle
test
shrb
repz
jns
in
cld
fwait
daa
cmp
adc
call
out
inc
cmpsb
out
arpl
je
rclb
loopne
sbb
adc
pop
or
add
mov
fwait
outsl
daa
mov
arpl
dec
jecxz
insb
mov
push
mov
scas
sub
test
inc
lcall
inc
push
lcall
xchg
jns
sarl
mov
rcrl
cmpb
jne
adc
ljmp
test
scas
data16
push
and
inc
and
push
insl
mov
or
jp
imul
cmp
push
jae
incl
cmpsb
sub
lds
mov
push
pop
cmp
stc
rolb
pop
in
mov
filds
pop
pop
jp
sbb
jmp
cltd
fcomip
or
xchg
ds
js
fistps
test
pop
add
jp
insb
sbb
insl
push
addr16
jae
sbb
js
mov
repnz
jle
inc
popf
leave
lahf
push
dec
out
xor
outsb
popf
into
sbb
imul
add
pop
test
mov
mov
jo
pop
int
mov
outsb
add
shl
test
cmp
mov
pop
les
fdivs
mov
inc
hlt
cmp
nop
mov
clc
pop
out
movsb
insb
hlt
pop
dec
push
std
incl
push
sbb
iret
ss
scas
mov
and
mov
subb
sbb
jmp
fisubrs
jl
adc
cs
and
dec
mov
test
xchg
fstp
lret
mov
xchg
cmc
outsb
stc
test
out
lods
loope
shr
pop
mov
pop
ljmp
cmp
pusha
aam
xchg
xchg
icebp
xchg
adc
mov
movsb
cmp
pop
xchg
sub
jp
pop
sub
dec
into
mov
outsb
rol
sbb
rorl
cmp
jl
daa
mov
dec
pop
fstl
das
stos
push
push
fisttpl
dec
dec
test
mov
dec
out
xchg
xchg
jp
aad
mov
lea
fdivrs
push
jge
das
adc
testb
aas
push
mov
shll
mov
jae
and
popa
popa
iret
fstpl
mov
scas
jb
or
fs
fnstsw
xorw
or
frstor
cmpsb
cld
test
add
cmp
cmp
movsl
pop
sti
adc
fidivl
cmp
adc
mov
push
cmp
lret
daa
add
lahf
push
movsl
int3
adc
push
out
popa
cli
xor
pop
push
jmp
dec
aaa
pop
jne
mov
test
leave
jno
adc
loopne
arpl
dec
adc
inc
imul
xor
xor
out
int3
jb
push
mov
inc
inc
and
inc
int
cwtl
xor
lock
lock
ja
cmp
pushf
push
scas
cmp
sbb
mov
in
xchg
imul
cmp
stc
push
out
in
in
add
sbb
xor
xchg
sbb
mov
outsl
inc
mov
pop
lret
cmp
scas
icebp
mov
ja
cmp
push
push
mov
les
leave
mov
pop
mov
or
mov
mov
sbb
jnp
sub
xor
push
mov
sub
es
xor
adc
das
inc
fistpl
mov
cmp
jle
movsb
mov
push
int3
icebp
repz
inc
and
jb
and
leave
and
dec
in
jbe
das
cmpsl
mov
aas
dec
add
add
ds
pop
jbe
repz
mov
push
adcl
stos
dec
in
scas
enter
xchg
out
data16
mov
mov
test
dec
hlt
jnp,pt
aaa
push
mov
adc
fisubrs
insl
mov
aam
rolb
xchg
adc
jbe
dec
test
lea
and
mov
ror
lret
mov
push
pop
pop
pusha
mov
ds
push
loopne
xchg
sbb
int
inc
decl
lret
cmpsb
rorb
cmp
imul
cwtl
dec
sub
cmp
sub
adc
std
dec
sahf
push
aas
xchg
add
hlt
aad
cmp
inc
fucomp
je
cmp
and
movsb
cs
mov
sbb
push
clc
jae
cmp
repz
out
fldcw
mov
xchg
adc
sahf
xchg
jp
inc
mov
insb
in
jge
push
ss
push
outsl
orl
jle
nop
add
in
insb
test
jle
xchg
xor
lcall
xor
lock
leave
jge
adc
fbstp
cmp
add
mov
pop
adc
push
push
xchg
stos
pop
outsl
into
or
ds
sbb
movsb
mov
push
pop
mov
fst
sub
insb
pop
repz
mov
or
mov
rol
pusha
push
pop
addr16
popa
cmp
jg
stos
mulb
jg
fnstsw
testb
mov
mov
sbb
test
fldenv
fiaddl
call
movsb
insl
and
dec
cmp
sbb
shll
sbbb
fisttpl
sub
test
add
sub
push
jle
in
mov
push
add
test
jae
fmuls
jne
fs
insb
pop
xor
pop
movsl
fnsave
dec
pop
sarb
push
dec
loopne
data16
repnz
fsub
jp
dec
ficompl
arpl
sbb
xchg
sub
lods
fdivrp
aam
pop
pop
repz
mov
loop
in
mov
aaa
and
jp
sbb
aaa
xchg
cmp
xchg
mov
push
test
jmp
mov
sbb
inc
xorl
mov
rcrl
cli
pop
and
xchg
rorb
inc
dec
mov
incb
xchg
std
inc
dec
scas
shr
add
lock
xchg
cli
mov
and
mov
mov
std
aam
in
imul
cmp
mull
mov
pop
push
mov
dec
sbb
push
sbb
adc
cmc
and
jns
mull
call
dec
sti
pop
cmp
rolb
mov
cli
mov
int3
xchg
jmp
cld
push
mov
mov
fdivrs
repnz
inc
add
rclb
mov
push
or
adc
cltd
test
or
imul
adc
sbb
xchg
lds
pop
in
in
incb
push
inc
xorl
aam
pop
cli
int
adc
outsb
aad
mov
pop
rorb
add
xor
jno
lods
mov
fisubl
outsb
mov
xor
xchg
cli
loopne
add
jns
movsb
aas
mov
rolb
sbb
imul
mov
inc
stc
xchg
xchg
cmp
aad
pushl
pop
outsl
loop
push
push
in
dec
outsb
test
dec
ficoms
sub
lahf
mulb
pop
mov
mov
or
or
or
cmp
lcall
pop
fdivp
or
and
xor
call
ficoml
lahf
loopne
shll
xchg
jmp
mov
add
pop
repnz
adc
mov
je
fmul
dec
mov
sbb
or
add
rcr
repnz
scas
loop
mov
rcll
ss
imul
and
add
mov
dec
sub
jle
lock
cmp
push
pop
jge
or
add
movsb
pop
jbe
stos
inc
cmpsb
lea
call
push
mov
sub
cwtl
mov
xor
pop
mov
dec
cmc
mov
int3
insb
add
cmc
mov
fmull
rcr
in
and
ja
movsl
test
stos
inc
inc
adc
loop
lcall
sahf
xor
into
jae
iret
das
lock
mov
jmp
ds
scas
jae
das
mov
pop
movsb
pusha
push
sub
cs
mov
rorb
dec
cmp
xchg
lahf
cmp
xchg
rcrb
push
iret
push
test
addl
mov
mov
ja
popa
xor
adc
pushf
test
xor
mov
inc
pushf
lea
or
dec
inc
pop
jmp
pop
and
lds
mov
jecxz
and
pop
fucomp
std
and
fdivs
mov
lock
rep
js
enter
fists
popa
shl
pop
sub
ret
inc
leave
xor
popl
loopne
pop
push
mov
cmc
push
adc
jmp
aaa
aam
in
adc
cmpsl
cmp
ss
test
dec
lock
jecxz
cld
iret
and
lea
pop
fadd
pop
into
outsl
lcall
mov
cwtl
shll
ds
rcl
jp
mov
xchg
dec
inc
ss
mov
loopne
cmpsb
xchg
mov
mov
xor
movsb
int
movsl
and
mov
and
mov
cmpsb
mov
rolb
dec
addb
je
cmp
adc
rorl
cs
cmpsb
aad
push
movsb
and
or
adcb
mov
rorb
and
sti
fistl
in
adc
xorl
fiaddl
pop
aas
or
inc
test
jb
mov
outsl
pop
cmpb
adc
insb
xorl
lock
repz
xchg
adc
fcomip
xor
and
cmp
add
leave
xlat
pop
imul
mov
dec
pop
cli
pop
loope
xorl
or
or
das
push
or
and
paddw
xchg
imul
jns
imul
pop
cli
jge
lret
pop
pop
ja
mov
mov
aas
and
inc
fisubrl
inc
cld
pop
cmp
in
cmp
imul
insl
sub
dec
cs
xchg
arpl
mov
jge
jl
xor
cld
stc
movl
rcrb
jns
jge
push
in
xor
cmp
add
iret
cmp
pop
clc
sub
cwtl
xchg
cmp
ljmp
pop
mov
xor
xlat
sbb
mov
pop
roll
or
xor
lahf
arpl
xor
mov
lods
ds
xor
cmovbe
ficompl
lahf
and
mov
jmp
dec
sbb
testl
aam
aas
outsb
clc
xchg
mov
nop
inc
mov
data16
jns
lcall
adc
lods
mov
pop
testb
push
fldcw
bound
imul
in
push
fdivl
mov
loopne
jle
cld
push
cmp
dec
add
rclb
xchg
pop
mull
or
jns
sub
shrb
imul
ljmp
pop
rcrl
daa
inc
push
fldt
mov
jbe
js
jno
pop
sub
subb
and
js
cmp
out
cmp
fstl
shrb
mov
pop
cmp
adc
pop
ja
push
jecxz
jno
cmpps
or
outsl
add
pop
stos
imulb
rep
and
push
in
push
mov
jmp
dec
pop
shr
fildl
mov
cmc
sub
daa
lods
and
popl
push
inc
jecxz
inc
push
in
jne
out
cli
test
rcrl
mov
dec
and
mov
in
sbb
xor
ja
mov
in
xchg
out
test
or
inc
fistpl
cli
fsubrl
cmp
scas
test
mov
cmpsb
stos
cmp
int3
scas
inc
das
scas
cmp
mulb
into
fsubl
outsb
fwait
jbe
fstps
mov
jo
sub
into
add
mov
imul
je
xor
js
mov
adc
xchg
add
push
adc
adc
push
xlat
push
cmp
push
pop
daa
sbb
gs
pop
leave
add
mov
mov
jecxz
and
inc
arpl
lods
sub
push
push
mov
push
sub
or
mov
mov
testl
addb
cmc
mov
jb
and
je
out
jbe
xchg
and
outsb
mov
mov
test
and
repnz
imul
xchg
pop
inc
add
xor
xchg
sub
fildll
rolb
icebp
sbb
cmp
insb
inc
dec
cmp
or
popa
cmp
dec
lods
lahf
jb
xchg
int3
sub
cwtl
and
mov
aaa
imul
insb
jmp
dec
jno
mov
mov
sub
aas
loopne
inc
pusha
fldt
jae
outsb
mov
call
xchg
lahf
mov
lock
or
mov
xor
fs
lea
mov
and
and
ret
shrb
pop
div
sbb
mov
push
sbb
sbbb
jns
jb
mov
jnp
orl
jne
inc
mov
xor
pushf
int3
xor
inc
ljmp
in
add
subl
xchg
push
jns
data16
cmpsl
xor
shl
shlb
negb
inc
lds
cld
dec
sbb
sbb
repnz
pusha
mov
icebp
pop
push
mov
mov
popf
aad
cmpsl
lds
jo
pop
mov
gs
test
lret
pop
push
jnp
xor
test
jne
cmp
imull
add
mov
jmp
fisubs
adc
aam
enter
das
gs
fsubp
sti
or
push
and
ficoms
aam
fs
push
pop
adc
js
cmc
cli
and
xchg
or
xor
nop
mov
mov
cmpsb
sbb
cwtl
add
dec
ljmp
mov
jle
dec
mov
in
orl
scas
pop
repnz
inc
call
jne
movsb
cmp
cmp
jo
ret
dec
and
iret
push
jle
pop
insb
sti
mov
jmp
lret
rclb
dec
push
ds
cwtl
cmpsl
lock
mov
out
pop
shl
dec
inc
xchg
or
mov
ja
gs
mov
sbb
mov
mov
ds
ficoml
push
fwait
movsl
addb
or
int3
sub
test
push
xor
mov
iret
es
icebp
cmp
iret
mov
fisubl
inc
dec
pop
in
decl
es
neg
sub
mov
inc
inc
in
ret
sbbl
insb
mov
roll
jbe
or
mov
leave
int3
sub
pop
repnz
xor
in
sub
xrelease
leave
push
movsl
cli
pusha
imul
sub
neg
xchg
push
test
cmpsb
imul
cli
sub
int3
mov
sbb
daa
ljmp
mov
popf
pop
or
ret
ja
sbb
and
mov
addr16
test
out
xor
mov
sub
or
cli
dec
jecxz
cld
mov
and
data16
and
es
jns
add
repz
fimull
stos
es
mov
gs
adc
sub
mov
jbe
pop
mov
mov
fisubrl
shrl
outsw
ret
out
sbb
pop
insl
loopne
fisubl
jae
aad
xchg
bound
or
mov
fstpl
lret
dec
popf
jo
mov
fcmovne
lret
adc
xchg
fstl
inc
cwtl
das
jbe
cmpsl
push
sub
inc
push
mov
fsubs
sub
and
xchg
mov
daa
out
loopne
sarb
cmp
dec
push
or
mov
push
cmp
stc
adc
xchg
sbb
rcrb
xchg
imul
js
mov
ret
xchg
fidivrs
sub
sahf
data16
leave
xor
sub
pop
stos
add
dec
xchg
push
clc
popl
test
mov
stos
pusha
not
sbb
mov
js
adc
lds
nop
stos
sbb
and
pop
pop
repz
es
pop
lods
jg
pop
shrb
icebp
jp
xchg
lods
adc
test
dec
ret
cmp
xchg
or
jne
ret
hlt
out
popf
pop
ds
inc
out
and
imul
add
fcomip
cmc
adc
aas
in
inc
dec
and
add
movsl
inc
xor
lods
inc
movsb
dec
out
sahf
add
jnp,pt
icebp
je
mov
inc
dec
cs
pop
mov
xchg
xchg
mov
ljmp
ss
mov
adc
push
cli
inc
xor
xchg
push
push
adc
add
les
fwait
repnz
adc
jecxz
movsb
adc
jle
push
sub
jb
insl
loopne
sbb
out
adc
jns
xchg
ja
dec
cmp
pop
lock
sub
adc
shrb
and
xlat
imul
or
fs
xchg
add
mov
fnstenv
scas
dec
scas
iret
andb
mov
aam
mov
adc
and
ss
sbb
inc
mov
mov
adc
incl
cmpl
int
xor
ljmp
lret
popf
add
adcb
bound
lock
jle
lahf
or
jnp
pushl
mov
xchg
inc
loope
sub
xchg
sbb
js
inc
ret
pop
sbb
cmp
js
and
xchg
push
out
add
in
lea
jmp
fwait
cmc
adc
sete
jge
mov
inc
mov
loop
ss
adc
ljmp
arpl
xlat
xchg
lahf
leave
sub
jg
pop
cmp
mov
mov
ret
xchg
xor
je
scas
pop
cmp
jle
xor
sub
rcrl
int3
mov
out
test
fistpl
clc
pop
jge
mov
stos
inc
cli
jo
into
gs
enter
or
jp
sub
mov
cmp
jnp
imul
or
cmpsl
adc
arpl
add
stos
test
call
sub
cmp
out
and
int
stos
jb
sbb
out
arpl
cmp
push
jecxz
cmp
or
pop
icebp
jne
pop
fidivrl
push
add
or
push
or
push
pop
xchg
jne
lea
fisttps
push
push
ljmp
jno
jnp
fdivl
iret
dec
aad
cld
js
std
lret
out
stc
jmp
push
sti
mov
mov
xor
imul
adc
sbb
pop
mov
mov
stos
mov
shl
mov
add
sub
xor
pop
ja
jne
xor
jmp
sub
adc
xor
js
sub
adc
inc
fnstsw
hlt
fsubs
sbb
ret
sti
test
xor
lahf
lock
adc
jne
pop
into
and
js
sbb
dec
or
arpl
stos
cli
push
push
or
jl
inc
mulb
mov
ret
shlb
mov
add
cmpsb
outsb
stos
mov
xchg
add
add
sbb
add
mov
addl
sub
out
iret
out
daa
pop
or
mov
jmp
sub
out
add
inc
pop
jl
pop
cmp
dec
mov
push
testl
repnz
push
popf
ret
ret
sub
pop
cs
lods
add
xchg
add
ljmp
iret
xchg
inc
mov
add
shlb
outsl
mov
jnp
lret
mov
repnz
test
ficoms
pushf
xor
adcl
rolb
xlat
out
cltd
sub
gs
jmp
inc
xchg
mov
mov
int
sti
in
imul
adc
xchg
or
jecxz
rcrl
mov
idivb
jmp
outsb
adc
lods
mov
sahf
sar
outsb
mov
in
stos
inc
lret
out
cs
mov
cmp
jno
movsl
xchg
xchg
nop
push
or
fsubrl
adc
inc
in
xor
sbb
push
scas
sbb
rcll
xchg
push
xor
cmp
shll
ja
adc
jae
push
mov
les
lock
push
dec
shrb
mov
cmp
xor
dec
mov
sbb
adc
lods
insl
sub
fucomp
out
scas
imulb
loope
rolb
push
dec
dec
jmp
fisubs
adc
cld
push
xor
and
fwait
shl
adc
sub
and
and
jno
int3
enter
stc
sub
pop
lock
aaa
mov
into
aam
mov
sbb
test
mov
mov
mov
bound
jmp
pushf
xchg
xor
aaa
ror
cmpsl
jmp
ja
ret
imul
ljmp
sbb
ficompl
mov
sub
push
add
addr16
add
adc
daa
xlat
mov
jecxz
test
dec
push
xchg
cmp
xor
adc
lret
in
insb
sub
jecxz
rclb
fmuls
mov
mov
add
dec
dec
lcall
std
and
lret
jne
push
jnp
loop
or
dec
mov
push
mov
inc
out
add
ja
mov
ljmp
mov
jl
lahf
or
push
adc
sbbl
pop
push
mov
mov
push
scas
mov
pop
insb
aas
xor
push
xchg
mov
inc
in
negl
mov
xchg
enter
dec
push
leave
insl
out
test
out
cmp
sub
cwtl
repz
shrl
repz
dec
push
mov
jge
inc
in
xchg
sbb
sbb
pop
pop
xor
add
jp
mov
mov
push
jb
rorl
mov
push
out
push
leave
into
popa
mov
and
inc
cmpsl
mov
dec
rcrb
sub
jecxz
repnz
pop
fbstp
cmpsb
or
aam
fwait
xchg
inc
sbb
clc
orb
mov
sbb
inc
imul
inc
cmp
outsb
add
jno
mov
sbb
shrb
sahf
mov
pop
fldl
notb
shrb
test
push
shrb
inc
popa
xor
mov
xchg
lods
pop
adc
lret
jbe
mov
popa
push
push
mov
jp
push
mov
in
daa
mov
stos
cmp
dec
mov
cltd
test
push
cmc
aas
out
scas
out
xorb
sti
mov
cmp
mov
push
sub
fistps
ficoml
loopne
push
stc
pop
addr16
xor
loopne
sub
mov
ljmp
jae
sbb
shrb
fidivs
lea
cmpsb
push
mov
filds
xchg
sbb
adc
aas
addr16
mov
stos
jmp
adc
add
dec
mov
jge
data16
out
cmpsl
ret
add
ljmp
call
push
movsl
dec
stc
ljmp
and
scas
add
das
xchg
and
ficompl
scas
xchg
js
pop
jae
adc
mov
inc
jae
jbe
jo
mov
xchg
lret
out
lock
sbb
loope
es
xchg
repz
negl
cmpsb
movsb
test
in
outsl
mov
mov
push
pop
jnp
mov
sbb
enter
adc
push
ja
daa
ret
enter
dec
cmpsb
and
jo
cmp
cmp
sbb
adc
movsb
shlb
xor
inc
pcmpgtb
mov
insl
out
pop
enter
popa
or
mov
xor
pop
fcmovb
or
mov
xor
pop
ljmp
push
mov
mov
loop
cld
push
mov
and
pop
pusha
adc
sbb
aam
pusha
jl
gs
mov
rep
std
or
fdivrl
pop
sub
mov
testb
mov
pfsub
xor
push
hlt
gs
imulb
ret
pop
lahf
jge
imul
je
lret
aad
add
cld
push
xlat
add
sub
cltd
fisubrs
add
push
mov
or
fisubrs
data16
xlat
cmpsl
xor
frstor
fldt
movsb
in
pusha
lahf
mov
fimuls
insl
in
ds
iret
addr16
insb
rcl
lds
insl
pop
sub
or
xchg
data16
adc
mov
fists
cmc
jge
imul
fnsave
mov
fcmove
push
mov
adc
sbb
or
add
xor
out
or
test
add
bound
cwtl
call
mov
loop
add
incl
jno
lds
push
or
fistps
jecxz
add
xor
frstor
fld
inc
push
sub
fnstcw
push
mov
mov
in
add
adc
xorb
ffree
mov
jne
mov
outsl
rcl
sbb
outsl
dec
hlt
jl
clc
dec
aam
push
lret
ret
pop
cmp
mov
inc
imul
pop
xchg
sub
in
dec
rolb
divl
aam
sahf
sbb
sbb
adc
inc
xchg
mov
imul
xlat
xchg
push
pop
in
mov
adc
rorl
call
xchg
stos
ficoml
loope
sti
mov
in
repz
dec
mov
cli
jbe
push
or
cmp
inc
push
jp
rcrl
iret
push
out
lods
xor
clc
sbb
sbb
mov
flds
lahf
loope
ja
cmp
clc
data16
pop
and
mov
or
push
inc
mov
cmp
mov
mov
out
pusha
lahf
aam
push
mov
push
loop
push
shlb
push
or
push
jb
hlt
addr16
mov
push
dec
pusha
test
stos
pop
jg
jmp
imulb
adc
sbb
mov
ja
inc
xchg
add
push
xchg
sti
lods
data16
cli
jg
insl
ja
insb
sbb
adc
or
data16
cmp
andb
aad
sub
daa
xchg
cmp
out
push
adc
xor
xchg
sbb
sub
sbb
in
popf
imul
ja
mov
add
faddl
jns
dec
dec
popf
push
xchg
pop
cmp
xchg
sub
sub
orb
cmp
movd
jno
adc
test
into
std
mov
adc
arpl
jbe
jae
je
push
inc
push
jmp
push
or
data16
scas
lock
push
ljmp
aad
cwtl
adc
mov
ret
shlb
lods
lds
int
mov
out
mov
push
mov
xor
jne
sbb
in
lea
inc
mov
fildll
mov
pop
jp
jmp
mov
xor
xchg
dec
jbe
push
cmc
gs
xchg
jne
sub
mov
imul
dec
cmp
cmp
rcrl
mov
mov
loop
and
fwait
mov
lock
sbb
out
dec
in
or
gs
lcall
xor
out
mov
xchg
jns
add
mov
psubsb
pop
lret
loopne
sbb
aad
stos
pop
push
jnp
pop
clc
fsubl
cmp
xchg
aam
hlt
mov
call
jnp
test
mul
xchg
mov
sbb
or
js,pn
mov
fmuls
ficompl
push
adc
repnz
pop
lcall
adc
rcrl
add
dec
sbb
nop
pushf
jg
cltd
lods
cwtl
and
lret
ret
outsb
inc
push
ljmp
jno
jmp
subb
jbe
ss
sti
loopne
out
push
jmp
adc
mov
xlat
stc
dec
nop
or
popa
jge
into
gs
imul
xchg
mov
and
fisubrl
xor
ret
inc
loop
jnp
shrb
mov
xlat
cmp
pop
mov
pop
push
add
and
lods
jmp
xor
and
cmpsb
xorb
fildll
shlb
aad
or
lret
sub
in
in
push
divb
cmpsb
adc
xchg
jp
repnz
or
push
sbb
testb
xchg
int
out
sub
dec
jle
mov
or
push
jns
or
fistpll
out
pop
les
insl
and
sub
jl
xchg
add
mov
sub
inc
cmc
ja
pop
pop
call
pop
ljmp
jmp
iret
nopl
pop
add
popa
cld
mov
pop
cmc
std
pop
shlb
out
lds
jne
add
mov
adc
mov
jo
sbb
xorl
call
fcomps
and
mov
fbstp
jae
mov
dec
lret
icebp
lods
sub
stos
popf
push
fbld
inc
cmp
or
mov
xchg
scas
ss
dec
mov
add
and
popa
cmp
andl
je
and
push
cltd
icebp
dec
xchg
adc
les
inc
js
sub
aaa
jno
and
sahf
sub
add
xchg
hlt
push
adc
jle
inc
in
test
or
fidivs
negl
mov
jp
in
insl
or
xor
push
cwtl
js
and
xor
or
dec
xchg
in
lahf
insl
and
mov
dec
jo
insl
and
leave
call
dec
idivb
in
and
cmp
fdivrl
xchg
mov
out
test
dec
fcmovb
push
stos
xor
pop
sub
lock
into
loop
cmp
dec
ds
xchg
loopne
mov
pop
fimuls
dec
mov
push
mov
mov
sbb
bound
sub
and
daa
jle
sbb
sub
push
ljmp
pushf
cmp
lcall
cwtl
das
mov
fsub
mov
ds
pop
push
pop
cs
mov
cmp
int
mov
into
xor
pop
faddl
and
sahf
cmp
push
mov
add
and
adc
and
fcomp
push
jmp
sbb
mov
fwait
inc
sbb
lea
or
sahf
lods
xchg
dec
pusha
push
fstpl
mov
cld
xchg
jae
dec
cmp
scas
ljmp
or
mov
push
and
pushf
and
sbb
pop
lret
mov
movsb
arpl
pop
int3
jp
fs
clc
push
daa
cmp
dec
jae
cmpb
cmc
xor
ja
xchg
or
mov
push
pop
out
cmc
ljmp
dec
xchg
add
lods
rolb
pop
mov
mov
push
loopne
popa
xchg
fdivl
push
mov
js
test
jbe
mov
lods
inc
cld
fcmovnb
fimull
aam
outsb
and
pop
push
sub
pop
subl
push
cmpsl
aad
sub
cmpsb
scas
call
mov
sahf
or
adc
ret
inc
into
fnsave
mov
pop
fwait
jbe
rorb
push
out
jae
xchg
adc
fdiv
mov
inc
mov
test
mov
jb
arpl
lret
rorl
xchg
lock
push
or
mov
xchg
lock
mov
xor
sbb
inc
pop
test
inc
push
cmp
and
inc
loope
inc
insl
insb
aaa
sbb
lds
sarl
xchg
xchg
sub
push
call
inc
lret
cmp
push
daa
pusha
pop
mov
lret
or
sbb
pop
fs
loop
cmp
fcomip
in
mulb
faddl
pop
hlt
inc
inc
jne
jbe
push
lcall
push
stos
fisubl
adc
ja
test
lret
subl
les
mov
mov
ljmp
cmc
jb
outsb
adc
dec
mov
jp
rclb
jmp
movsl
xor
cmp
test
lock
popl
loop
xor
push
shrb
mov
pop
out
hlt
mov
sbb
sbb
mov
mov
push
stc
addr16
and
rcrb
jp
fwait
in
lds
pop
jg
add
addr16
imul
into
or
or
test
sub
mov
cmpsb
imul
xchg
aam
adc
repnz
into
rcrl
arpl
push
inc
jle
jle
cmpsb
jg
mov
mov
mov
pop
cmp
push
xchg
popf
and
inc
jbe
repz
pop
ficoms
and
cmpsl
mov
jmp
mov
inc
xchg
test
stos
cmp
dec
das
mov
sar
inc
cmp
inc
cmp
add
lcall
sahf
clc
cmp
push
adc
fidivrl
jnp
sbb
mov
or
int
subb
cmp
and
outsl
xor
xchg
fs
dec
shl
mov
jnp
lret
pop
cmp
test
ret
or
stc
mov
jne
xchg
mov
inc
mov
stos
mov
adc
jb
add
dec
dec
enter
add
sbb
mov
inc
mov
cli
ss
shll
insl
add
jnp
icebp
xchg
ret
add
lods
jecxz
inc
mov
fidivrs
and
mov
jae
cld
int3
arpl
sbb
jp
push
fdivrs
out
enter
test
pop
scas
daa
mov
jmp
xchg
xor
loope
and
xor
mov
xchg
pop
ret
lds
mov
push
sar
in
cmp
pop
dec
pop
cmp
dec
in
jb
inc
xor
add
fildll
dec
dec
xor
pop
clc
mov
mov
enter
pop
in
push
pop
shl
mov
test
andb
lea
mov
pop
xchg
xchg
mull
shl
stos
xchg
scas
xlat
pop
xor
cld
repnz
xor
jno
in
pop
pop
test
and
gs
sbb
test
jg
or
cs
fsub
arpl
aad
pushf
repz
inc
lcall
in
aas
sbb
mov
les
cmpsl
call
int
and
mov
mov
scas
dec
pushf
inc
cmpps
mov
fdivrs
sub
int3
or
arpl
lock
jp
lods
and
int3
ror
jnp
add
push
inc
cmp
movsb
outsb
int3
dec
mov
nop
push
xchg
mov
push
out
mov
jno
gs
mov
test
sahf
dec
sbb
xor
out
dec
mov
js
jne
leave
ret
data16
scas
xchg
daa
mov
or
inc
test
sbb
int
add
clc
sub
dec
jb
mov
xchg
and
sahf
push
sub
stos
test
repnz
sbb
adc
cmp
popa
nop
mov
push
fstpl
mov
jb
and
jl
sti
or
or
mov
aad
mov
outsl
push
pop
data16
and
je
xchg
and
lods
sbbb
repnz
jecxz
push
fimull
cmc
mov
jecxz
orb
push
xor
cmp
fcmovu
mov
add
je
std
negl
fucomp
jno
xchg
int3
scas
inc
mov
or
add
xor
and
mov
jns
test
push
jge
ja
hlt
decl
loopne
subl
inc
addr16
std
push
ljmp
insl
cmp
push
aaa
stc
push
fsubl
lcall
or
sbb
xchg
sub
sbbb
inc
mov
adc
test
test
ja
mov
sbb
std
scas
xchg
jo
data16
cmp
mov
imul
and
test
pop
xchg
and
stc
mov
cmp
decl
imul
push
mov
push
add
xor
es
add
push
xor
xchg
lods
lcall
and
push
inc
fimull
cmpsl
ja
and
mov
dec
movsl
maxps
sub
pop
pop
cld
movsb
cmp
ret
add
adc
xchg
pop
lahf
lods
test
pop
mov
test
mov
inc
sahf
jne
test
pusha
test
sub
cmpsb
gs
les
dec
dec
pop
dec
shr
adc
inc
leave
addr16
iret
bound
imul
add
les
imul
pop
cmp
loop
add
push
gs
mov
and
pushf
data16
xor
push
push
cmc
or
movsb
gs
cwtl
xor
loope
xchg
xchg
out
mov
lahf
jb
inc
scas
mov
fisttpl
pushl
icebp
xchg
and
int
xchg
add
xor
lret
imul
loope
dec
cmc
mov
jp
je
cld
and
scas
xchg
cwtl
mov
into
cmc
lods
bound
stos
cmpb
jo
mov
inc
popa
jp
sub
xor
xchg
leave
iret
dec
into
loop
lret
mul
jns
clc
mov
add
cld
adc
and
mov
stos
lret
add
orl
lret
bound
xor
lea
repz
orb
sub
lea
fists
sbb
jbe
movsl
xorb
sub
outsb
dec
scas
jg
and
outsl
test
stos
lret
lea
or
or
sbb
in
into
ljmp
xchg
das
cmp
nop
inc
sti
sub
shll
lods
movsb
shr
dec
pop
out
adc
and
xchg
mov
ret
push
iret
out
xchg
sti
pop
icebp
pop
inc
dec
fs
push
pop
repz
xchg
clc
sub
dec
push
cmc
loop
cmp
jle
ss
mov
pusha
or
push
icebp
cmp
pop
sub
into
jno
push
daa
jecxz
sbb
push
lret
bound
jmp
nop
or
cltd
loopne
daa
hlt
xor
add
das
cmp
cmpsl
adc
inc
test
push
fwait
inc
mov
fsubs
adc
enter
mov
sub
pop
dec
sub
jge
dec
in
sbb
and
scas
js
adc
xchg
bound
xor
add
mov
test
inc
mov
fs
outsl
dec
insl
mov
inc
fcompl
int
cmp
bound
pop
push
out
imul
xorb
mov
movsl
sbb
cs
jns
add
xor
test
pmaxsw
jl
add
sahf
imul
sbb
inc
mov
shlb
mov
or
test
pop
out
mov
jb
add
jbe
lea
setbe
add
call
movsb
cmp
leave
sub
dec
cmp
mov
inc
cwtl
and
or
loope
ja
stc
rolb
pop
out
push
cmp
adc
into
dec
clc
jp
sub
je
and
aaa
stos
xchg
dec
push
mov
scas
std
push
and
adc
xchg
js
add
sbb
fsubs
ljmp
incl
ja
insb
mov
pusha
sbb
or
lds
pop
pop
dec
rclb
jle
jnp
lods
pop
test
test
aaa
xlat
outsb
fiadds
pop
add
cmc
ja
movsl
dec
mov
clc
lock
dec
inc
rolb
lcall
in
stos
mov
xchg
jns
int
or
out
sarb
or
mov
addr16
inc
ja
cmc
sub
xchg
xor
call
and
aad
cwtl
inc
out
push
jbe
and
aas
mov
xor
test
das
inc
test
cltd
mov
xlat
imul
fdivr
inc
add
mov
in
adc
push
fidivrs
rolb
xchg
mov
repnz
inc
sbb
and
mov
arpl
inc
fildl
in
in
call
repz
adc
push
xor
xor
jge
loop
unpcklps
or
in
sbb
xor
sarb
mov
out
loopne
mov
incb
cmp
out
and
fcompl
lea
xor
cwtl
dec
repnz
rolb
cmovg
xchg
xorl
add
push
repnz
lock
sub
clc
or
mov
xor
xchg
loope,pt
mov
pop
repnz
imul
popf
mov
out
mov
mov
sbbl
and
xchg
mov
loope
push
cmp
ret
or
out
cmpb
dec
sbb
fildll
mov
mov
xchg
in
and
jne
inc
push
adc
aaa
xchg
int3
adc
cld
push
dec
adc
dec
jne
daa
jb
or
inc
xlat
scas
shlb
sub
ret
pop
xchg
dec
or
loop
inc
sub
mov
enter
push
fidivrs
push
popa
loopne
sbb
mov
fbld
call
loopne
and
ror
insb
mov
sbb
pop
add
push
lahf
les
adc
pop
mov
data16
xchg
cmp
or
mov
scas
mov
lock
outsl
fsubs
sbbb
lahf
jg
push
mov
sub
pop
pop
mov
jl
add
and
movb
sbb
repnz
sbb
leave
push
iret
test
ds
iret
xchg
push
sub
mov
mov
jmp
subl
xlat
cmpsl
cltd
push
inc
dec
rcrl
jmp
jle
pop
in
mov
ja
jle
imul
cmpsb
std
in
sub
loope
adc
adc
es
xor
mov
mov
fs
add
cs
pop
xor
mov
pop
pop
shrl
test
xor
adc
bound
push
out
fs
aad
cli
insl
and
jp
ja
mov
pop
mov
outsl
cmp
rol
sahf
mov
lahf
lret
add
mov
and
pop
das
repnz
and
mov
add
out
jge
sbb
cmc
add
push
mov
loopne
movsl
std
sub
cs
or
xchg
jge
sahf
test
and
jge
sub
insb
jae
xorb
test
addr16
xor
adc
cwtl
movsl
das
data16
pop
cmp
xor
popa
shr
xchg
add
mov
cld
mov
std
stc
pop
lahf
mov
adcl
and
xchg
out
and
and
rcll
icebp
xchg
loopne
mov
scas
fadd
aam
rep
nop
sub
push
jne
out
jmp
loop
shl
sbb
xchg
mov
xchg
add
push
in
fs
test
dec
xchg
sub
or
xor
nop
pusha
sub
push
cmc
cli
sub
xlat
ds
cmpsl
das
aad
mov
mov
cs
cmp
inc
test
pop
dec
pop
lret
mov
fisubs
cmpsl
adc
mov
or
jg
and
inc
jecxz
adcb
xor
in
inc
bound
xor
mov
pop
jl
xor
sub
dec
mov
ljmp
pop
xchg
jecxz
out
xchg
pop
mov
lar
cmpsb
in
xchg
sub
call
sub
loope
or
js
push
movb
dec
jp
or
xchg
leave
out
push
cmp
or
adc
repz
adc
xchg
cmp
bnd
popa
in
shll
sbb
push
lret
movsb
insb
xor
push
testb
sbb
jns
push
test
rol
and
cmp
pusha
fdivr
xchg
inc
bound
shll
sub
mov
test
in
std
mov
daa
lret
cli
lcall
sub
or
or
inc
adc
ret
andl
aam
add
int3
in
cmp
mov
icebp
movsl
push
inc
incb
sub
xor
ja
leave
mov
lret
in
fcomps
adc
mov
lods
mov
sbb
mov
inc
mov
mov
xor
fcmovnu
cmc
or
sahf
fsts
mov
and
pop
jbe
rcrb
mov
movsl
lds
cmpsb
in
push
aam
mov
ja
jbe
lods
test
xchg
jmp
shl
pop
cmpsl
dec
fnstcw
cmp
jbe
shll
stos
jle
and
push
into
loopne
cmc
or
cmc
dec
pop
daa
xor
cbtw
loopne
movsl
xchg
adc
es
fistpl
aas
fistpll
js
mov
jno
dec
daa
jne
and
aas
rcl
jb
push
pop
repnz
pop
decb
dec
sarl
andps
addb
xchg
cwtl
sub
dec
outsl
mov
mov
fnstenv
lret
pop
inc
push
dec
xor
bound
pop
fnstenv
adc
xchg
add
mov
sbbb
inc
out
test
outsl
pusha
sbb
mov
mov
xor
imul
data16
insl
inc
pop
cmp
xlat
bound
xor
jg
jnp
dec
aad
movsb
sbb
sub
pop
negb
jl
xor
push
and
mov
aad
jl
mov
xor
ficoml
leave
pop
and
nop
pop
dec
popa
cld
mov
adc
add
aad
or
repz
fldcw
sbb
stc
sahf
clc
xor
adc
mov
lock
jmp
xor
fstpl
dec
notb
out
and
test
fldpi
call
cmovbe
pushf
xor
bnd
iret
jno
arpl
and
mov
dec
mov
lea
mov
jge
jne
mov
push
sub
mov
add
mov
jbe
xchg
cwtl
xor
jecxz
ja
nop
add
xor
jnp
push
insb
mov
stos
dec
adc
xor
enter
popf
push
out
jecxz
pop
sub
or
fmul
inc
dec
jne
xlat
scas
xchg
cmpsl
pop
inc
sarb
test
lcall
stc
lea
ret
cli
rcll
sbb
testb
mov
stos
in
pextrw
xor
sbb
mov
or
imul
repnz
add
jns
xchg
int3
jg
addb
sub
out
lea
xor
pop
psrlq
push
xlat
loop
and
add
scas
ds
cmpsb
repnz
dec
inc
cmp
xor
sbb
ja
push
out
xor
ljmp
scas
push
or
movsb
add
aad
rcl
xchg
jg
fnsave
xchg
loopne
jecxz
cld
aaa
push
sub
lcall
add
mov
push
ror
out
jb
cmpsl
mov
sbb
mov
mov
and
inc
jmp
imul
data16
rolb
jne
pop
cmp
and
push
dec
rorb
mov
lcall
fstl
dec
popf
adcl
ds
adc
ret
pop
mov
pop
in
xor
jnp
and
xchg
pop
imull
enter
lods
popa
movsb
lret
repnz
push
xor
mov
push
push
in
shll
mov
inc
inc
cmp
jnp
nop
dec
mov
or
dec
and
iret
loope
sub
out
mov
adcl
sbb
testl
adc
pusha
lds
cmp
out
rcrb
scas
jb
push
jp
jno
mov
push
loopne
aaa
pop
pop
push
dec
pushf
cmp
mov
and
cmp
push
test
mov
xchg
daa
sarb
call
inc
and
cmpsl
sbb
lds
fistps
mov
dec
aam
ljmp
mov
lods
adc
cli
imul
mov
cmp
push
mov
clc
mov
adc
add
cmp
xor
xchg
test
inc
loope
lret
lock
jo
mov
push
adc
dec
sahf
lea
stc
andl
pop
mov
push
mov
cmpsl
leave
mov
mov
and
push
loopne
gs
test
xor
lcall
mov
mov
cmpsl
push
cmp
sbb
mov
mov
dec
and
fwait
adc
flds
dec
pop
pop
jecxz
fs
imul
rclb
sbb
cmp
fsubrs
mov
lahf
loopne
push
out
popa
aam
sub
sbb
pop
ret
jle
fisttps
pop
jb
push
adc
sub
mov
jno
shrl
pop
scas
fcoml
int3
pop
lcall
push
loopne
out
push
jne
inc
fsts
aaa
or
or
mov
int
cmp
scas
mov
xor
sbb
add
call
dec
lods
movsb
adc
mov
xor
xchg
fwait
pop
jbe
rorb
loop
or
mov
dec
mov
and
test
leave
test
and
push
mov
xchg
cmp
es
aad
mov
mov
xchg
cmp
and
push
mov
addr16
xchg
mov
mov
jnp
mov
or
movsl
and
push
loope
add
fs
mov
xchg
cmp
sbb
jl
push
mov
mov
not
jecxz
sub
jae
xchg
movsl
movsl
movsb
shl
int
and
mov
lret
push
data16
xchg
inc
adc
mov
aam
cmp
addb
jno
push
or
sub
arpl
insl
movsb
xor
push
in
orl
dec
inc
fadd
icebp
ret
vdivsd
mov
mov
xchg
adc
push
mov
pop
mov
xchg
sbb
gs
lock
mov
clc
push
popl
mov
lods
test
int3
and
mov
scas
add
push
stos
dec
push
jbe
frstor
jg
loop
xchg
data16
cs
lods
dec
fistpll
mov
sbb
sarl
scas
and
xlat
inc
xchg
lods
inc
les
adc
andb
sbb
mov
lret
adc
sti
setns
mov
popf
loope
call
icebp
fdivl
aas
aam
dec
sub
out
insl
mov
jo
and
test
jnp
mov
xlat
mov
or
mov
sbbl
push
call
add
mov
loope
dec
and
cs
aad
aaa
push
div
outsb
ret
jge
mov
adc
dec
loope
mov
js
dec
sbb
outsb
pop
add
clc
mov
ret
mov
out
inc
mov
sbb
outsl
loopne
cmp
addr16
jno
and
fcomip
cmp
rclb
push
fsubrl
mov
js
jo
fdivr
xchg
jbe
push
dec
pop
jno
fisubl
mov
jb
addr16
sub
push
subl
xchg
popa
or
pushf
cmpsl
pop
inc
cs
jno
sub
push
mov
or
jl
outsb
gs
mov
insb
hlt
cmp
das
xchg
jge
pusha
icebp
in
clc
cwtl
cwtl
out
stc
enter
in
mov
ss
xor
ljmp
xor
pop
scas
out
jl
jg
jle
mov
cmpsb
loop
subb
test
or
xchg
mov
notl
fidivl
lss
ds
dec
pop
imul
daa
or
sbb
sub
mov
fs
enter
cli
adc
push
push
hlt
test
xchg
push
hlt
sub
stos
jle
adc
nop
jne
sub
sbb
inc
call
loope
faddl
scas
cld
cld
mov
in
xchg
sub
mov
aad
and
cwtl
gs
mov
ret
adc
mov
mov
push
cmp
test
mov
pop
inc
push
push
ss
int3
xor
push
in
cmp
ss
inc
mov
jb
shrl
cmp
dec
jmp
or
sti
push
jb
xchg
xchg
fwait
jae
mov
push
fcoms
fwait
dec
xchg
inc
negl
sub
mov
xchg
stc
jns
imul
idivb
add
cli
test
cmp
sbb
inc
and
cwtl
leavew
insl
sbb
or
ss
lods
adc
aas
or
inc
mov
mov
popf
outsl
into
or
icebp
icebp
cmp
sbbl
sbb
ss
xchg
call
das
addr16
sbb
das
cltd
push
insb
cmp
test
lret
lret
test
int3
push
notb
das
cmpsb
outsl
pop
mov
dec
xchg
lahf
mov
popl
xchg
jecxz
and
vpextrw
lds
call
mov
push
addr16
inc
into
sahf
dec
jmp
in
sahf
out
shl
or
mov
pop
movsl
loopne
scas
push
std
push
loop
les
popf
pop
adc
push
jmp
and
mov
jg
and
mov
fisubrs
cmp
inc
clc
push
fstpt
xor
jbe
outsl
mov
mov
lret
push
jnp
mov
adc
ror
sub
scas
sti
inc
xlat
sbb
ss
push
out
xor
push
mov
das
dec
or
scas
cmpsl
ljmp
cmp
xlat
push
in
enter
fsts
pop
outsb
notb
aam
push
nop
loopne
inc
pop
rolb
mov
negb
mov
fisttpl
cs
out
in
jmp
insl
add
sub
aaa
lods
fsubrl
and
data16
dec
stos
xor
sub
push
push
inc
ds
iret
lcall
ss
sub
ficomps
shr
fstps
push
cli
inc
push
aaa
xor
out
xchg
jnp
int3
cmc
mov
push
mov
jge
mov
mov
pop
enter
fidivrs
imul
mov
arpl
xchg
dec
cmp
sbb
push
movsl
clc
or
enter
imul
pop
add
in
mov
out
mov
ret
fildll
addr16
sub
aaa
ss
pop
das
fists
mov
xchg
data16
xchg
or
push
cmpsb
inc
aam
lock
fcmovne
jl
rclb
test
sub
or
aaa
xchg
out
sub
push
repnz
out
mov
ljmp
mov
clc
aad
lods
shll
std
mov
iret
cltd
inc
pop
jo
daa
data16
pushf
jecxz
mov
adc
dec
and
mul
inc
hlt
stc
aad
jb
fists
mov
mov
mov
cmp
es
iret
loopne
pop
mov
xchg
cmpsb
repnz
cmp
push
aad
add
leave
scas
inc
cld
jo
insl
mov
jb
int
pop
adc
or
mov
sbb
mov
loope
cmp
dec
jecxz
pop
mov
and
xchg
scas
test
jl
push
adc
xchg
inc
das
je
pushf
out
jns
cld
cwtl
push
popf
in
push
or
mov
mov
mov
in
lods
jb
sbb
dec
cwtl
rcr
call
sbb
arpl
mov
das
call
cltd
popa
sbb
dec
cmp
inc
dec
jne
jmp
push
movsb
dec
inc
lret
ficompl
jmp
lcall
sahf
and
add
mov
or
out
int3
cmp
jns
rcrb
pop
dec
jmp
in
cmp
xor
push
idivb
dec
insb
fwait
lea
and
cmp
dec
push
dec
inc
jmp
cmp
xor
push
cld
cmp
inc
cmp
and
enter
adc
push
out
pop
inc
xor
jb
lds
nop
xchg
xchg
sub
pop
dec
mov
loopne
enter
mov
jg
mov
jae
sbb
das
test
notb
and
inc
inc
or
in
pop
sub
add
sbb
mov
jecxz
mov
cmp
cld
lcall
add
das
add
adc
inc
push
jg
leave
mov
dec
mov
loope
das
dec
jecxz
imul
jne
adc
xor
inc
idivb
xor
sub
mov
pop
addl
sbb
popa
iret
call
push
scas
jno
sub
jo
add
bound
push
xor
sti
or
aas
inc
rcrb
sbb
or
or
dec
and
loop
mov
add
push
stos
aam
repz
jl
jo
pusha
popa
subl
clc
mov
ret
mov
push
xchg
or
clc
divb
sub
movsl
mov
daa
test
lcall
jo
mov
insb
lea
jo
fidivrl
int
dec
hlt
fdivrs
adc
sbb
sbb
xor
shll
mov
mov
fmulp
add
inc
test
sub
out
insb
inc
pop
xchg
push
fnsave
out
and
into
orl
and
lods
sbb
fld
int
add
add
mov
push
call
lods
xor
int
xchg
fiadds
push
xor
in
pop
je
add
adc
inc
pusha
jno
inc
mov
rol
adc
inc
cli
bnd
mov
test
jl
ret
or
or
mov
dec
mov
int
sbb
pop
stc
inc
inc
cltd
push
jae
adcb
sub
xchg
mov
push
cmp
movb
xchg
pop
out
pop
mov
mov
xchg
int3
fwait
xor
lahf
jecxz
shll
ss
add
jnp
stc
or
xor
test
ja
push
or
mov
inc
shlb
inc
xchg
xchg
lret
sahf
inc
mov
add
aad
sbb
js
lds
mov
aad
movl
mov
in
test
push
add
ret
jnp
dec
mov
js
rclb
sub
addr16
sahf
jge
xor
in
lea
out
mov
cltd
add
aas
sbb
fstl
rcrl
dec
repz
cmp
lahf
mov
dec
mov
jp
ficoml
xor
jg
negl
and
push
inc
sub
adc
in
cmp
insb
mov
or
scas
mov
lods
mov
fisubl
or
cmp
mov
ja
mov
icebp
iret
and
mov
or
add
adc
add
mov
ror
adc
lds
push
cmp
cmpps
in
mov
fsubp
cmp
push
ret
mov
fildll
loope
aaa
jnp
dec
ljmp
in
cli
push
sahf
ficoml
sbb
mov
mov
lods
js
mov
movsl
pop
and
fsubrl
pop
out
xchg
and
add
jbe
into
imul
insl
stos
sub
leave
dec
call
cmp
pop
jno
shrl
jae
sahf
mov
std
sbb
mov
xchg
aam
fwait
dec
testb
pop
adc
push
frstor
lahf
mov
sub
loop
push
sub
jle
in
lods
mov
xor
dec
cmpb
in
push
xor
pop
sbb
dec
cmp
adc
jb
push
mov
or
adc
add
dec
xchg
xchg
add
cli
adc
stos
inc
pop
ja
nop
inc
fcoms
xor
test
inc
pop
push
enter
bound
push
or
fistps
push
out
mov
mov
int
or
or
dec
lea
cmp
lret
adc
add
popf
xchg
mov
push
out
cld
dec
int
push
sbb
cltd
pop
cmpsl
mov
mov
outsl
mov
pop
aas
mov
stc
push
leave
mov
insl
pop
mov
push
ret
sbb
sbb
pop
jo
and
js
ljmp
sbb
enter
dec
sub
out
out
lcall
mov
std
sar
and
out
xor
das
cld
sti
imul
fwait
enter
or
inc
lret
mov
daa
mov
pop
arpl
aas
mov
sbb
shrl
and
push
addl
mov
pushf
pop
inc
in
aam
sbb
les
mov
pop
ljmp
jae
xchg
adc
inc
pop
or
sbb
jae
cs
sarl
fbld
inc
or
lahf
stos
mov
dec
inc
outsb
aam
xchg
nop
nop
stos
shll
test
push
sub
fiadds
xchg
pop
mov
adc
inc
and
fwait
and
push
out
push
adc
imul
pop
dec
pop
lods
stc
nop
fidivs
pop
popf
cltd
add
out
jp
xchg
sub
rclb
dec
in
js
dec
rorb
add
cltd
dec
xchg
rorb
and
or
fnsave
lahf
dec
sbb
shll
nop
lods
xchg
jp
ss
cmp
movl
and
lods
mov
fisubs
cmp
cmpsl
fistps
mov
xchg
mov
dec
cmpsb
inc
fmull
and
cmpsb
jno
cld
out
mov
shrl
andb
fisubrl
test
mov
pop
jecxz
add
and
std
mov
push
jne
test
repnz
adc
add
mov
fdivrs
sarb
mov
adc
adc
push
ja
pop
add
ret
xor
and
jno
add
in
cmp
jno
iret
aam
fdivrs
fisttps
adc
movsl
sbb
pop
jmp
lret
mov
xor
addb
jmp
and
test
adc
cmp
sub
jge
mov
lods
xor
push
and
pop
cwtl
add
shrb
in
test
mov
imul
pushl
hlt
or
pop
or
xchg
cmp
xchg
loop
rorl
push
inc
xchg
xorb
adc
popf
mov
rcrb
pop
dec
loopne
hlt
xchg
add
sbb
mov
dec
mov
jnp
push
inc
pop
sub
out
and
jbe
add
add
cmp
imul
cmp
pop
aad
and
scas
xchg
insb
ret
xchg
jle
add
out
repz
dec
sub
stc
test
fisttpll
lcall
sbb
outsb
mov
je
jb
xor
insb
rorb
lahf
lea
and
cmp
sbb
sbb
lods
cs
in
stos
les
stos
inc
adc
xchg
icebp
std
or
data16
lahf
dec
fimuls
cmp
in
sbb
or
mov
in
shlb
inc
int3
push
je
mov
push
xchg
inc
jb
js
out
lahf
cltd
xchg
sub
orb
jmp
in
loop
mov
sbb
push
gs
fsubrl
stc
push
inc
outsl
jg
mov
outsb
clc
cwtl
int3
sti
xchg
call
mov
or
xor
cmpsl
aaa
pop
mov
loop
xor
popf
push
call
mov
sub
inc
pop
mov
cmp
pop
hlt
mov
loope
inc
mov
add
stc
popa
stos
iret
popf
and
ret
sbb
lea
mov
mov
or
in
setle
cmp
jl
lret
cmpsl
lock
test
dec
ja
add
add
sarb
mov
scas
enter
add
lods
add
jecxz
out
cwtl
mov
mov
sbb
js
outsb
mov
push
insl
inc
lds
rcrb
sahf
popa
xor
mov
push
or
out
and
int3
neg
jmp
push
stos
jle
loope
adc
jl
mov
xor
adc
mov
sub
test
jbe
cmpsl
into
stos
inc
add
dec
rorb
loope
add
pop
idivb
mov
arpl
fnstcw
fistpll
mov
aas
mov
xlat
jne
mov
int3
hlt
mov
rorb
or
ja
xlat
imul
cmp
fwait
data16
stos
xor
leave
add
mov
test
ljmp
mov
jge
fstl
dec
adc
inc
push
jg
out
add
addr16
sub
gs
pushf
mov
jge
push
dec
push
inc
mov
xchg
push
mov
sbb
xorb
test
inc
js
push
imul
xor
decb
test
pop
aad
jns
or
ret
out
and
iret
xchg
inc
aad
cmpsl
jae
movsl
cmp
aam
push
rcrb
loopne
out
add
fldenv
push
btr
pusha
aad
jp,pn
cmpsl
or
rorb
or
test
test
jne
insb
adc
cmpsl
inc
movsl
in
sbb
imulb
push
pop
add
or
dec
adc
and
in
push
cmp
loop
sub
xor
movb
shrb
dec
dec
cwtl
jne
push
out
cmp
xor
fbstp
adc
je
insb
js
fs
and
mov
adc
cmp
adc
xor
ds
xor
adc
pop
fisttpl
cmpsl
bndstx
xor
fisubrs
xor
inc
lahf
fisubs
and
mov
pop
cltd
je
pop
sbb
mov
xlat
negb
pop
sub
xor
call
xchg
dec
jecxz
xchg
cld
sbb
sub
xor
and
movsl
push
shl
out
sahf
jbe
xor
insl
out
cmpsb
ret
cltd
pop
push
out
test
sub
adc
sub
mov
add
ficoms
pop
pop
fiadds
test
pop
adc
mov
mov
jecxz
adc
adc
mov
jno
inc
sub
xchg
sub
dec
and
ret
push
scas
mov
or
dec
outsb
test
and
fnstcw
push
and
cmp
in
inc
xor
jnp
aaa
xchg
and
jge
adc
cltd
inc
das
loopne
cmp
push
fdivs
sub
xchg
xchg
mov
dec
sbb
jmp
or
imul
adc
push
fistpll
pusha
sti
dec
popf
aad
fildll
sub
jo
jl
imul
push
and
mov
or
sub
push
fucomp
je
addb
mov
xor
adc
jnp
jl
pop
xor
aaa
dec
mov
out
inc
aam
enter
pop
insl
gs
fists
lea
ljmp
ret
insb
popf
push
add
xlat
sbb
loop
push
test
push
imul
and
mov
jae
mov
dec
cmp
mulb
adc
xchg
lahf
cmc
call
sub
movsb
rcll
add
clc
mov
jne
push
jmp
push
out
push
test
iret
cli
push
push
dec
dec
fwait
das
clc
pop
dec
stc
scas
fnsave
iret
jns
mov
fucomip
aam
or
inc
push
sahf
xor
lods
pop
loope
gs
mov
fdivrl
lahf
mov
dec
dec
xchg
xor
dec
dec
popf
push
cmp
das
jns
fmul
or
add
insb
out
xor
pop
aas
dec
flds
iret
pop
stos
ror
pushf
daa
lcall
cmp
lahf
sbb
adc
mov
and
mov
mov
or
paddusw
out
movsl
add
fs
sahf
aas
xor
push
pop
push
aam
arpl
pop
fdivrl
in
stos
scas
push
mov
jne
pusha
xor
sbb
mov
int3
mov
add
mov
and
push
pusha
je
fdiv
xchg
and
dec
fsubr
jp
mov
adc
push
push
adc
int3
mov
sbb
add
push
ret
adc
jno
lea
rclb
push
lret
cmc
mov
sbb
or
loope
ja
and
lods
dec
ret
test
cmpsl
dec
push
sub
cltd
lods
bound
divl
scas
pop
test
jns
adc
inc
sbbb
xchg
mov
outsb
aam
xchg
pusha
notl
stos
lds
insb
add
jecxz
pop
adc
dec
fbstp
xor
or
push
jecxz
std
xchg
adc
in
mov
out
lahf
les
stos
mov
sub
push
icebp
fisubrl
aaa
mov
outsb
stos
or
addr16
push
pop
xchg
dec
gs
pop
adc
push
fnstenv
and
rclb
adc
and
xchg
mov
and
inc
sub
inc
shld
xchg
mov
ret
sbb
jecxz
out
out
and
mov
adc
scas
add
push
imul
pop
adcl
pop
imul
xchg
pop
mov
mov
mov
lock
add
test
lret
mov
fcoml
ljmp
inc
inc
loope
jno
inc
cmpsl
icebp
cmpsl
push
and
or
test
movsl
cmp
js
ret
cmp
xlat
rol
or
ja
cli
sub
xchg
jg
pop
cmovo
mov
push
mov
mov
std
xchg
dec
push
lods
push
cltd
inc
adc
ss
gs
xchg
int3
arpl
lret
xor
bound
pusha
cmp
stos
mov
loope
std
lea
mov
popf
inc
push
std
sub
cmpsl
sbb
out
aas
mov
testl
pop
sbb
mov
dec
inc
push
into
fisubrs
loop
call
pop
mov
dec
mov
rclb
ss
mov
jae
adc
push
lcall
cmpsl
xor
jl
adc
adc
sbbb
pop
insl
add
push
sbb
mov
es
loopne
mov
sahf
mov
cld
idivl
pop
pop
or
sub
fwait
mov
and
push
popa
adc
sub
es
mov
roll
test
in
jl
cmp
dec
or
in
add
es
rclb
pop
out
rclb
or
xchg
imul
fldcw
pop
adc
movsb
sarl
sub
xchg
jecxz
and
shrl
mov
mov
pop
rclb
int3
or
enter
or
test
mov
repnz
das
mov
clc
dec
rclb
testl
pop
sub
loop
rcl
xor
mov
not
shrb
mov
mov
loop
js
loope
rorb
out
insb
cmp
jns
jns
mov
xchg
lock
push
pop
jecxz
mov
sahf
jecxz
push
movsb
sbb
int3
mov
into
mov
sbb
int3
mov
lcall
insl
ja
xchg
nop
decl
imul
in
jp
lahf
shrl
imul
mov
add
data16
push
in
push
cltd
push
dec
sarl
repz
sbb
and
dec
jge
icebp
mov
inc
testb
and
and
out
cmp
sub
out
mov
loopne
iret
sahf
pop
sbbl
mov
lahf
insl
pop
jge
iret
and
sbb
lret
in
or
sbb
sub
dec
mov
andb
adc
in
loop
jecxz
into
adc
hlt
out
cmp
mov
mov
les
bound
mov
mov
enter
lcall
outsb
jbe
stos
push
pusha
sbb
adc
push
push
or
add
cmc
rcrb
int
shrb
out
unpcklps
in
arpl
jp
xchg
cmp
aad
movsl
push
pop
lret
ret
sub
cmpsl
mov
pop
jae
js
or
fldenv
or
push
mov
stos
mov
xor
rcr
or
mov
loope
push
insb
mov
inc
loopne
pusha
test
mov
add
repz
mov
fsub
push
mov
cld
xchg
out
pop
push
stos
aas
stos
adc
pop
incb
fnstsw
push
jno
cltd
fs
lret
and
sbbb
jbe
iret
and
push
fcomp
cmp
xor
clc
test
push
mov
pop
data16
movsl
std
sbb
mov
pusha
pop
sbb
adc
out
mov
inc
mov
ret
pop
cltd
jne
push
sub
mov
dec
int3
fs
and
addl
das
cmpsb
ljmp
lahf
js
inc
icebp
jl
jecxz
imul
test
enter
and
fsubrl
int3
push
add
mov
sub
pop
in
xchg
fnstenv
aaa
dec
dec
cltd
jns
xchg
cmp
mov
adcb
sub
lcall
ja
out
je
pop
adc
lret
fsubl
les
xchg
les
sbbb
jecxz
cli
ficoml
and
xchg
mov
dec
stos
mov
xchg
shufps
cmp
mov
frstor
scas
push
movsb
jl
xor
popf
sub
mov
pop
mov
sbb
xchg
insl
mov
pop
mov
es
in
inc
in
test
mov
jae
dec
or
in
out
in
pop
call
out
xor
roll
pop
lret
pop
add
enter
movsb
mov
xor
inc
fnstcw
push
jecxz
int3
mov
mov
addr16
cltd
xchg
stos
mov
out
cmc
mov
int3
adc
gs
xchg
mov
loope
jae
jnp
jae
scas
shl
sbb
ljmp
sbb
imul
data16
or
nop
data16
mov
repz
les
jno
add
adc
inc
dec
pop
xchg
lock
inc
sub
xchg
add
fwait
test
inc
adc
mov
dec
scas
xchg
inc
adc
mov
ret
adcl
sahf
cmc
nop
outsl
mov
pop
insl
or
and
dec
sub
stc
mulb
mov
dec
lcall
inc
mov
adc
jg
shl
dec
out
cmp
sbb
aas
dec
dec
repz
and
push
push
xchg
cmp
gs
push
lret
jmp
arpl
add
add
aam
sub
je
call
adcb
mov
mov
add
ss
sbb
dec
and
cmp
xchg
lea
jmp
mov
rolb
lds
mov
cmpb
sbb
sahf
icebp
rcr
out
aam
sbb
movsl
arpl
daa
leave
cmpsl
dec
cmpsl
push
mov
pop
and
pop
std
loopne
sbb
test
or
cli
adc
test
mov
dec
push
xchg
pushf
sub
aas
fsts
or
jle
or
mov
fcmovb
pop
or
nop
daa
mov
adc
out
xor
and
mov
out
mov
adc
fdivs
pop
lock
in
xchg
sub
cmpsl
imul
sub
xor
push
jmp
int3
push
outsl
ret
popa
or
sbb
mov
outsb
push
enter
cmc
or
std
shrb
fisubrs
cmpl
or
dec
pop
xchg
lret
cmp
shrb
test
aaa
mov
add
mov
mov
pop
lret
je
ja
mov
dec
jmp
sbb
jbe
mov
popl
sub
ljmp
xor
mov
cmc
add
cwtl
inc
push
and
or
sti
inc
ret
roll
xlat
jns
or
enter
mov
add
in
lea
lods
xchg
into
xchg
int3
dec
scas
xchg
test
lods
nop
test
pop
jmp
lret
dec
pop
shl
lea
cli
sub
rorb
add
cmp
mov
test
enter
sub
xor
push
push
pushf
aaa
subl
subb
outsl
daa
inc
push
icebp
mov
out
pop
out
pop
inc
lods
sbb
mov
fsts
push
lods
add
mov
sub
sbb
nop
jl
mov
ss
and
imul
gs
jecxz
mov
mov
mov
and
loopne
in
fwait
inc
inc
in
test
jmp
and
dec
xor
sti
dec
mov
mov
movsb
stos
ja
sub
jbe
scas
cs
lds
push
dec
and
fistl
fildll
cwtl
and
xchg
daa
jl
inc
inc
mov
movhps
xchg
insl
inc
mov
jae
int
lret
jp
adc
pusha
mov
jae
jge
push
mov
push
mov
jne
xchg
nop
test
in
inc
jp
sbb
adc
in
stos
or
out
dec
gs
js
pop
addr16
leave
dec
mov
push
mov
dec
stc
int3
dec
dec
mov
cmpl
dec
cmpsl
mov
call
in
push
lea
or
popf
and
movsl
in
mov
or
in
xchg
xchg
dec
adc
push
jb
loop
push
mov
aam
xorb
mov
push
add
fildl
mov
cmp
add
jecxz
std
sub
out
dec
fwait
add
lret
dec
lods
add
inc
cmc
fcmovb
mov
test
rolb
fisttpl
pop
nop
popa
add
in
aaa
mov
dec
cmp
xchg
and
es
cmp
in
cmp
hlt
add
pop
mov
mov
sbb
mov
jle
xchg
icebp
adc
cmp
sti
cmp
add
outsb
mov
stos
cld
add
fildl
subl
fs
jge
mov
push
in
decl
add
stc
in
push
out
mov
mov
ficompl
outsl
fisttpl
fcomps
mov
push
sub
enter
arpl
das
bswap
imul
scas
push
cli
inc
scas
sbb
push
push
movsl
inc
inc
or
sbb
scas
push
sub
movsl
ret
mov
rep
imul
jmp
clc
mov
xchg
andl
xor
xchg
add
mov
mov
popf
dec
sbb
hlt
aas
jl
jo
cltd
or
lods
jmp
push
mov
cmpsl
aaa
outsl
es
int3
andb
fisubl
xor
mov
mov
xor
xor
dec
data16
sbb
or
in
fwait
repz
jo
xor
lds
dec
fnsave
cmp
jmp
in
popa
adc
je
push
cmp
xchg
mov
out
cli
lock
fildl
mov
inc
hlt
sbb
shrb
xchg
sub
cmc
aas
jg
idivb
jge
out
sahf
mov
xor
mov
fimuls
shlb
repnz
je
jae
mov
loopnew
xchg
bound
pop
adc
xor
call
std
pop
sarb
jp
and
lahf
imul
imul
adc
dec
mov
pop
jmp
hlt
add
jne
out
pop
mov
push
mov
cmp
push
fcmovbe
mov
ds
add
test
lods
dec
pop
fldt
xchg
mov
cmpsb
les
or
test
scas
loopne
dec
sbb
add
outsb
decb
push
shll
cmp
imul
or
add
mov
mov
jp
or
sub
gs
or
inc
pop
mov
cmpsl
xchg
and
add
subl
cmp
cmpsb
pop
xor
sbb
add
arpl
inc
js
xchg
mov
fmull
cmp
cmp
rcrl
lret
mov
ja
test
in
mov
inc
sub
imul
adc
ds
int3
out
lahf
call
mov
pop
imull
aam
fidivrs
das
ror
enter
inc
xchg
pop
mov
sbb
and
loop
cmp
push
sarl
je
pop
push
jmp
dec
ja
dec
out
outsb
dec
out
cmpsb
dec
rcll
cmp
stos
xchg
sub
addl
jle
dec
mov
les
int3
roll
jecxz
cli
inc
sub
aad
pop
icebp
iret
dec
imul
js
mov
ror
cmp
jb
lret
cmc
pop
mulb
jle
pop
sbb
xchg
sbb
adc
mov
ror
jg
jbe
sbb
pop
and
cs
rcl
out
pop
mov
dec
inc
ljmp
mov
inc
dec
push
movsl
scas
fistl
add
je
mov
insl
mov
dec
inc
mov
test
mov
daa
sahf
pop
dec
addl
xor
jbe
xor
pop
std
cwtl
out
insl
jnp
std
dec
cmpsl
insl
rcrl
dec
pop
outsb
mov
push
mov
xchg
sub
js
movsb
ljmp
fwait
cwtl
sahf
iret
mov
gs
pop
lock
ja
clc
adc
push
or
xchg
fildll
push
in
mov
sahf
xlat
scas
faddl
sub
and
lock
jne
xchg
jmp
rcl
imul
repnz
sub
das
cltd
jb
xchg
sbb
inc
loop
rcrb
sbb
cs
popf
into
push
pop
out
popf
sbb
andl
inc
jb
mull
rcrb
outsl
movsl
jae
mov
adc
js
or
cmpsb
aad
out
or
cmp
iretw
jb
paddusw
add
int
sbb
insl
add
orl
dec
inc
ret
out
cli
and
hlt
inc
push
xor
or
xchg
outsb
je
enter
cmc
mov
addr16
movsb
jns
call
roll
mov
adcl
xchg
adc
or
push
shll
sbb
inc
mov
fsubr
decb
aad
lds
and
sti
jmp
es
push
and
sbb
jg
test
cmp
in
shll
cmp
xor
inc
xor
adc
xchg
xor
inc
jmp
in
int3
mov
test
aaa
ret
sbb
xor
push
jnp
mov
add
or
aam
mov
lds
xchg
aas
mov
test
adc
cmc
inc
xor
or
imul
arpl
sbb
into
cmpl
pop
mov
mov
mov
rorb
scas
and
mov
xor
mov
arpl
sbbb
loopne
call
in
cmp
xor
insb
div
cmpsl
sbb
pop
jle
inc
rorb
enter
aaa
shrb
gs
loopne
xor
push
aas
scas
daa
or
imul
addr16
sbb
adc
repnz
arpl
xor
popa
jge
js
mov
add
sahf
xorl
dec
sub
ret
mov
jbe
push
cwtl
outsl
dec
cmp
ret
rcrb
dec
daa
mov
inc
push
xchg
fs
push
mov
popa
push
sti
in
push
xor
pop
cmpsl
cltd
mov
push
lods
adc
pop
adc
jo
lcall
push
mov
scas
aaa
scas
movsl
pushf
mov
rorb
cmc
push
dec
and
repz
shrb
rol
dec
or
scas
stos
enter
fdivl
adc
int
mov
mov
sti
sahf
sbb
je
pop
or
push
call
and
lods
fildl
aad
bound
sub
jno
mov
cmp
mov
lcall
jb
or
push
mov
push
nop
addb
test
lods
pop
sbb
mov
into
jp
xchg
cwtl
or
xor
adc
subl
jb
mov
lcall
inc
lods
aaa
pop
test
mov
mov
dec
pusha
dec
leave
sbb
cli
insl
add
jp
lds
repnz
push
mov
sarl
dec
or
das
jae
in
js
mov
insl
cltd
mov
or
incl
movsb
movsl
std
shlb
jl
mov
push
rcrb
hlt
pop
mov
xchg
movsb
dec
popf
xchg
addr16
stos
rep
adc
in
dec
sbb
jmp
push
xor
add
fiaddl
aas
inc
sub
jae
mov
mov
or
aad
movsb
rol
mov
stc
sbb
inc
outsl
fdivp
xchg
xchg
int3
mov
daa
xchg
fdivrl
dec
lret
xchg
push
mov
out
jns
mov
xor
push
test
xchg
mov
sbb
ljmp
mov
jg
adcl
cmpsb
jno
gs
scas
xchg
or
icebp
and
lret
inc
add
in
inc
push
inc
pop
sbb
fcomps
ja
mov
push
jb
push
sub
cmp
imul
jmp
fstpl
ret
or
add
pop
fdivl
testl
mov
sbb
in
push
cmp
pop
mov
xchg
inc
sub
push
dec
jp
push
dec
dec
daa
stos
cmpsl
cmp
sbb
adc
lcall
cmp
mov
stos
mov
cmp
sub
adc
and
mov
mov
inc
jo
ja
out
dec
dec
add
mov
lret
cmpsb
add
test
and
and
lea
testb
in
out
xchg
pop
rorl
jnp
sub
outsb
mov
fisttps
std
inc
push
ret
ja
inc
pop
jnp
pop
sbb
aad
sar
rcrl
pop
jmp
sbb
xchg
xor
loope
sub
cli
stos
jle
nop
push
push
mov
rolb
mov
push
inc
fistpl
xor
or
sahf
gs
lret
hlt
dec
mov
sub
or
and
test
enter
cli
rorb
mov
aas
cmp
xchg
adc
rcrl
add
jle
dec
cmpsl
out
out
mov
mov
mov
cld
mov
js
pop
or
mov
cmpsl
or
shl
cli
fildl
and
add
outsb
push
out
fimuls
xlat
out
jb
push
movsb
ret
into
into
jae
add
jo
sbb
mov
cmpsl
jmp
mov
stc
adc
mov
popf
sbbl
mov
mov
dec
loope
pop
mov
cwtl
mov
push
std
xchg
push
bound
xchg
aas
or
pushf
or
icebp
test
jl
mov
xchg
xlat
cmpsb
cmp
xor
std
jecxz
jne
movsl
xor
lea
das
jge
push
les
jnp
adc
mov
out
push
cmc
cmp
jmp
icebp
shlb
push
int3
shl
std
aaa
int
push
cli
inc
push
paddq
push
pop
in
add
ljmp
dec
mov
imul
outsl
decl
jle
xchg
int
mov
mov
mov
out
clc
push
mov
xor
sub
dec
jns
test
out
push
jns
pop
jne
lcall
mov
in
cmpb
mov
sbb
subb
or
mov
jp
and
jb
mov
std
rcrl
jbe
daa
cmpl
stc
jl
lds
lock
pop
fucomip
mov
pop
fisubrs
mov
jbe
inc
insb
dec
loopne
outsb
mov
mov
push
or
gs
fcomip
addr16
jb
leave
mov
stc
mov
dec
icebp
insb
lea
and
lds
dec
jbe
add
adc
int3
cs
mov
cmpsb
aam
rorl
or
xchg
lret
scas
mov
imul
insb
lret
sbb
push
daa
adc
and
aam
mov
outsl
call
xor
test
pop
scas
fisttpl
mov
inc
mov
xlat
or
stos
ds
push
cmp
jmp
dec
movsb
aas
fisubl
int3
lea
mov
data16
xchg
lods
inc
lret
outsb
iret
sahf
in
int3
xor
or
cmp
fidivl
jno
loop
inc
jl
add
movsl
mov
fisttps
cmc
and
or
js
in
cmp
das
aam
and
mov
aam
mov
dec
repnz
jle
and
into
xchg
mov
pop
mov
pop
loope
rcrb
push
inc
sub
xchg
xor
hlt
inc
loopne
mov
cmp
xchg
in
xor
adc
pusha
cmovae
and
loop
pusha
out
int3
xor
rcrb
popa
jmp
rcrb
mov
cmpsb
lock
push
out
jmp
insl
sbb
mov
cltd
lock
xlat
cmp
push
and
les
std
cmpb
movsl
jl,pn
push
or
xchg
cmp
dec
pop
or
ret
and
dec
in
mov
outsb
cld
xor
gs
xchg
xor
sub
push
mov
dec
xor
hlt
lret
jb
les
lret
lds
inc
stos
push
mov
adc
loope
arpl
jbe
and
adc
mov
push
cmp
lods
repz
scas
xor
sub
fsubrl
sbb
test
icebp
pop
daa
mov
dec
pusha
dec
mov
inc
popf
adc
inc
add
enter
ret
push
dec
popa
or
mov
out
mov
int
fsubr
pop
daa
xor
pop
fwait
xor
xchg
cmp
sarl
cmpsb
pop
or
scas
mov
fadds
icebp
outsb
push
imul
std
js
mov
fnstenv
test
jp
push
inc
mov
pop
cmp
or
sub
mov
lods
stc
outsl
mov
jns
dec
mov
mov
hlt
rol
aad
jle
mov
ljmp
loopne
and
jle
and
xchg
ret
sub
nop
xor
mov
in
ds
repnz
ret
icebp
mov
addr16
push
mov
movsb
mov
lds
dec
add
mov
cmpsb
cmp
push
rorl
jnp
inc
aad
mov
cmp
lcall
lahf
xor
out
test
inc
jbe
jmp
sub
pop
sub
push
sbbl
call
cmp
call
jecxz
lcall
adc
aas
addr16
loop
jo
mov
inc
cmp
sbb
push
mov
cmp
and
fidivs
pushf
iret
out
or
xor
fs
jp
imul
pusha
cli
adc
ljmp
fdivrl
xchg
in
pop
push
mov
aad
sbb
loop
into
arpl
pusha
pop
scas
out
enter
jno
test
nopl
adc
dec
mov
aaa
jle
mov
and
es
add
out
outsb
loope
pop
sub
test
popf
lock
dec
mov
inc
pop
pop
mov
enter
cmpb
icebp
jl
lock
aaa
lcall
jno
push
gs
push
sbb
stos
pop
hlt
xlat
insl
decl
insl
mov
sbbl
xchg
jge
xchg
mov
ljmp
sbb
testl
cltd
mov
addr16
mov
leave
xchg
mov
shrb
pop
pushf
insb
leave
mov
jge
dec
mov
ret
xchg
push
pop
mov
mov
xchg
loopne
inc
cmp
aad
jbe
lods
gs
aad
dec
pop
sub
cmp
jmp
xor
push
jno
pop
adc
sbb
hlt
out
mov
dec
push
cld
mov
inc
out
out
mov
ret
shlb
ds
adc
js
xor
movsl
jb
xchg
push
pop
push
shrb
add
jbe
inc
hlt
jl
aad
dec
or
add
xor
xchg
lods
push
sub
pop
popa
add
push
lcall
stos
loop
mov
pop
scas
repnz
inc
imul
dec
dec
ja
jmp
and
jbe
jg
adc
lods
ss
jno
push
mov
or
mov
xor
push
jmp
es
notb
fwait
dec
pop
std
clc
das
in
cmp
notb
sti
pop
lds
cmp
js
xchg
push
outsl
test
das
push
xor
jno
mov
mov
dec
faddl
or
std
push
sbbl
imul
cltd
add
cmp
jno
push
pop
or
icebp
fmuls
sub
pop
out
out
leave
push
psrad
popf
dec
xchg
or
inc
cmp
dec
cmp
ret
jl
in
loopne
or
pop
in
test
addr16
push
jl
enter
fsubp
mov
add
mov
clc
popf
xor
fs
pop
imul
lahf
mov
in
lcall
pop
scas
pop
fxtract
sbb
mov
movsb
push
mov
mov
mov
and
test
jl
loope
fcomps
adc
ss
jne
scas
out
fwait
dec
add
xchg
or
cmpb
scas
cmp
sbb
in
pop
cmc
mov
push
inc
in
cmpsl
mov
cmpsl
xor
inc
inc
cld
cli
jmp
lret
daa
push
add
pusha
and
push
mov
adc
cmpsl
adc
in
cmp
adc
push
fisubrs
lcall
push
push
sbb
shrl
movsb
push
xor
mov
adc
ja
outsb
push
es
ss
mov
jg
fdivl
dec
ret
jne
aaa
out
aad
fimull
cwtl
es
push
adc
mov
lret
mov
jbe
push
adc
cmp
lods
push
out
or
cmp
iret
lock
pop
lret
hlt
addr16
cmp
push
push
sahf
mov
ret
repnz
in
ret
jb
test
stos
mov
xchg
mov
mov
push
jne
jecxz
mov
mov
mov
push
xor
xor
je
inc
push
rolb
push
test
iret
loope
je
or
mov
pop
adc
lret
aam
divl
popa
sahf
in
sbb
pop
stc
mov
sub
mov
test
ss
lods
inc
repz
xchg
std
and
js
leave
fstl
hlt
dec
and
lods
add
sub
decl
mov
movsl
lock
fildl
addr16
cld
or
aam
lret
mov
shr
jbe
sbb
sbb
mov
int
rorl
cli
fwait
addr16
mov
xor
mov
pop
or
psrld
test
sbb
fwait
iret
ss
sub
lock
movsb
cmc
shrl
add
stos
sub
fdivrl
mov
ret
outsb
sbb
and
mov
add
sbb
popa
adc
leave
pusha
mov
jle
push
daa
mov
fcmovnbe
ret
shll
cmc
mov
cmp
js
xor
lret
rorl
jmp
or
mov
mov
rol
rcll
scas
pop
shlb
inc
in
jno
inc
lea
sbb
push
out
mov
mov
xor
js
add
cmp
lds
into
mov
leave
popf
mov
in
jbe
push
sbb
in
pop
cmp
ret
imul
push
imul
cmp
and
shl
sub
int
sub
sbb
inc
popf
decl
addr16
mov
push
or
imul
rorl
jno
sub
fnstenv
into
jg
sbb
adcl
nop
jno
stos
fcomip
lret
xor
cmpsl
je
mov
inc
ds
clc
sbb
aas
lods
fnstcw
test
inc
popa
sarb
popf
add
into
xchg
xor
push
sbb
or
inc
pop
cmp
xchg
mov
mov
out
scas
iret
movl
dec
mov
mov
jp
out
pop
lea
fwait
jmp
and
fucomi
xor
xor
imul
inc
inc
push
mov
mov
je
outsl
and
push
notb
xlat
out
sbb
aaa
sbb
shll
cmp
dec
in
lret
or
add
nopl
es
mov
dec
fbld
jl
scas
sbb
pop
inc
dec
fdivrs
xchg
mov
cmp
adc
ss
xchg
into
jg
xor
add
push
pop
mov
lea
andb
mov
fildl
out
cli
mov
movsb
fbstp
xchg
adc
outsb
leave
mov
in
inc
pop
cs
test
jle
das
ljmp
int
pop
pop
stos
int
jb
out
sub
cmp
lock
add
xor
add
and
dec
sub
lds
mov
mov
repnz
and
xor
xchg
sti
loop
and
fdivs
add
pushf
dec
mov
push
sub
jp
mulb
orb
mov
loop
lret
shll
sbb
mov
push
inc
ret
inc
mov
pop
sbb
push
mov
hlt
pop
aaa
daa
push
or
and
inc
in
test
ss
dec
or
ret
mov
or
ss
lahf
or
movsb
gs
pop
iret
push
leave
popa
and
call
add
aam
pop
in
lea
cmp
mov
mov
cmp
std
rcll
jg
fldcw
fidivl
mov
test
cwtl
and
test
jge
jecxz
rorb
mov
sahf
aas
xchg
inc
test
xor
scas
push
jmp
sub
jmp
int
xor
pushf
cmp
popa
test
arpl
mov
test
dec
hlt
sti
icebp
leave
add
iret
faddl
scas
and
xchg
ret
mov
jnp
inc
loop
andb
mov
jbe
mov
mov
test
out
and
inc
pop
test
or
xor
lods
loope
sbb
push
inc
and
xchg
pop
jmp
xlat
xchg
and
mov
or
sbb
push
mov
loope
or
jg
xchg
xor
mov
jmp
aam
fs
fisubs
lds
add
mov
cmp
aas
jmp
lea
ret
scas
cmp
ljmp
push
adcb
pop
push
neg
dec
inc
push
bound
adc
mov
lahf
mov
mov
jl
or
sti
iret
outsb
popa
push
fimull
cs
sub
mov
jae
sbb
xchg
sar
cs
out
aaa
scas
ja
dec
movsl
sub
xchg
pusha
in
sbb
dec
sub
jnp
and
imul
fsubrp
cmp
sbb
stc
mov
jg
cs
popa
call
push
push
mov
popa
iret
fidivs
in
jns
and
scas
pusha
mov
fcoms
out
and
shl
jnp
ret
mov
sub
jmp
sbb
xor
push
ds
out
and
icebp
cmp
outsb
sbb
jae
loope
repz
repnz
cmp
sti
xchg
cmpsl
imul
xchg
cmpsl
dec
dec
repz
dec
push
or
imul
aaa
movl
leave
jnp
pop
inc
popa
cmp
dec
mov
sbb
push
lcall
fildl
in
cmp
stos
pop
jae
arpl
mov
push
cmp
fsubrs
mov
pop
stos
inc
roll
clc
ljmp
mov
loope
cs
mov
pop
fnsave
js
std
xor
xchg
loope
in
shll
push
movsl
test
push
adc
lcall
cmp
hlt
lock
jnp
ja
fstpl
mov
mov
jge
mov
dec
cld
mov
outsb
jle
test
dec
inc
loopne
aad
sub
sub
fildll
or
in
adc
xchg
mov
fildl
xchg
sub
jne
mov
cli
roll
loop
mov
aaa
sbb
std
mov
sbbb
lea
mov
cmp
sub
cli
push
mov
addr16
jo
jb
jl
ds
in
in
mov
insb
push
loopne
je
cmp
or
dec
rorb
xchg
ret
hlt
mov
inc
xlat
ror
cmp
xor
xchg
test
aam
mov
cmovno
xchg
fistpll
sub
inc
fnstenv
push
sub
push
nop
pop
adc
out
pop
repnz
inc
xor
inc
pop
push
cmpsb
call
cmp
movsb
in
push
xchg
sub
das
mov
les
add
out
pop
jb
mov
push
repz
cmpsb
or
push
jne
ss
mov
int3
mov
fistpl
jmp
xor
inc
mov
mov
fdivrs
sub
enter
das
mov
mov
mov
inc
pop
mov
shlb
cmpsb
lahf
jb
xchg
cli
mov
stos
mov
sbb
xor
arpl
jmp
cmp
push
jle
and
inc
cld
adc
jp
imul
dec
rolb
mov
pop
es
jmp
mulb
xrelease
lahf
das
imul
dec
xchg
jg
xchg
mov
aad
vaddss
pop
push
sbb
hlt
push
dec
pop
push
arpl
cwtl
fsubr
stos
mov
or
dec
cmp
jnp
xor
inc
or
cmp
mov
aas
pop
mov
or
mov
mov
mov
iret
push
sub
ds
inc
dec
test
movsl
lods
fnsave
mov
leave
push
das
loopne
ljmp
imul
mov
hlt
and
lcall
push
mov
pop
xor
dec
mov
sub
gs
inc
leave
xor
push
inc
inc
add
sbb
addr16
adc
out
mov
outsl
jle
xor
pop
add
gs
xchg
xchg
je
mov
dec
mov
add
fisubl
push
mov
les
scas
decl
xchg
rcrb
jns
push
dec
pop
clc
scas
sahf
xor
push
push
lcall
add
mov
mov
loop
leave
pusha
jb
ret
push
sub
iret
addr16
sbb
loop
mov
inc
adc
loopne
add
mov
xchg
xchg
cld
sub
out
clc
mov
xor
or
mov
adc
fstl
pop
sbb
je
sbb
lcall
fistl
daa
clc
pop
ss
loope
clc
andb
call
jg
into
sub
loopne
out
aaa
pop
inc
insb
adc
pop
outsb
outsl
or
insb
rcl
cli
push
mov
sub
inc
popf
or
stos
aas
cmp
fdivr
std
pusha
in
jns
and
in
movsl
in
jge
jnp
imul
std
lods
mov
jbe
test
jnp
imul
les
inc
mov
mov
xor
inc
insb
mov
cltd
pushf
out
mov
notl
cmp
idivb
cli
popa
adc
push
pushf
andb
lods
lahf
xor
and
xchg
pop
adc
repz
aam
jg
out
test
mov
inc
popf
or
jl
xor
fbstp
mov
lock
and
mov
push
lahf
mov
xor
aas
cmpsb
inc
push
lock
jl
sbb
cmp
jecxz
outsl
add
adc
addr16
jno
add
imul
pushf
aas
enter
sbb
cmpsb
adc
clc
rol
pop
xor
fs
cmp
pop
and
mov
xor
fcmovnb
pop
loopne
dec
faddp
enter
mov
lds
scas
or
lea
cld
mov
and
stos
push
push
xlat
push
xor
js
aam
hlt
jno
inc
lcall
movsl
das
xor
xor
pop
pop
xchg
sub
mov
in
arpl
adc
inc
int
clc
xchg
fucompp
dec
aad
sbb
lea
movsb
call
sbb
gs
adc
pop
jne
mov
cmpsl
cs
adc
cmc
mov
mov
push
sub
adc
stos
inc
aas
push
cltd
add
mov
leave
or
mov
arpl
jp
cmpsb
jge
sbb
xchg
sbb
sahf
mov
xchg
push
stos
and
int3
pop
mov
mov
out
ret
je
testl
xor
test
lods
pop
push
mov
jne
loope
roll
scas
jbe
pusha
out
xchg
movsl
nop
int3
pop
out
icebp
scas
mov
imul
fists
push
adc
cli
in
mov
push
xchg
add
xchg
imul
lret
dec
dec
pop
pop
inc
test
inc
int3
cwtl
ljmp
dec
pop
and
xchg
push
in
add
cmpsl
jae
adc
add
jo
mov
leave
sbb
fcomps
divb
mov
mov
lret
jno
xchg
mov
test
push
mov
loop
jp
scas
in
add
test
or
adc
jb
das
cs
lret
shlb
lea
inc
fidivrs
pop
xor
int3
frstor
int3
sub
leave
inc
dec
push
call
xlat
test
jge
sbb
test
xchg
movsl
scas
dec
dec
xorl
xchg
dec
movsl
sbb
or
mov
fs
stos
rorb
incl
lea
push
sbb
cli
xchg
pop
arpl
idivl
xchg
xor
or
lock
cmp
jecxz
sub
cs
data16
scas
and
flds
or
insb
inc
fmuls
adc
lods
sub
push
adc
iret
sarb
das
or
and
das
je
aad
orl
jl
jp
sbb
sbb
inc
add
pusha
imul
cli
outsl
arpl
mov
jae
adc
jg
xor
and
push
out
jnp
sub
push
repz
lods
push
push
mov
imul
pushf
nop
pop
aaa
xchg
jnp
xchg
dec
pop
inc
ret
xchg
inc
sbb
mov
dec
roll
data16
lds
iret
mov
jbe
pop
fldl
push
jmp
outsl
lea
lahf
psubd
push
stc
cmp
gs
xlat
xchg
int
hlt
int3
aas
dec
mov
das
xchg
pop
ret
hlt
jp
push
mov
pop
xor
sub
out
int3
dec
dec
and
pushf
sub
mov
xor
adcl
bound
lods
addr16
pop
cmp
xchg
mov
mov
sarl
pop
dec
pop
pop
and
pop
imul
lea
fcoms
bound
scas
js
stos
mov
loope
adcb
jle
jp
jae
inc
adc
test
lret
xor
daa
shlw
int
or
int
stc
in
popf
xor
test
lahf
hlt
mov
inc
in
test
mov
xor
popf
xchg
and
mov
cmpsl
les
mov
stc
mov
loopne
dec
jmp
pop
loopne
mov
dec
sbb
fsubl
xchg
stos
ret
mov
faddl
std
mov
stos
lock
lods
or
pop
mov
mov
mov
sub
push
add
in
arpl
ja
cmpb
xchg
mov
data16
shlb
mov
leave
push
ljmp
out
pop
out
sub
pop
vpsubusb
add
push
mov
lods
add
cmp
stos
leave
pusha
sbb
pop
mov
pop
test
mov
je
aaa
ja
cmpsl
xor
mov
pusha
int
fcmovb
mov
lds
xor
inc
cmc
call
ret
mov
dec
addb
iret
sub
fwait
pop
lods
inc
push
mov
pop
std
ret
pop
hlt
mov
dec
out
call
xchg
inc
jno
mov
mov
sahf
bound
push
mov
mov
xor
xchg
movsb
bound
fs
repnz
gs
pop
icebp
out
in
xor
mov
push
dec
pop
js
jmp
aam
mov
adc
movsl
push
or
into
adc
push
xchg
sub
dec
loope
iret
xchg
mov
data16
into
push
and
aam
inc
pop
insl
add
sub
pushf
fbstp
mov
dec
sub
xsha1
cmpsb
into
js
popa
insb
pop
insl
add
mov
add
out
inc
imul
pusha
add
or
xchg
mov
or
xlat
push
pop
sub
dec
add
icebp
mov
int
pop
dec
push
mov
xchg
sbb
int3
sbb
ljmp
jne
cwtl
xchg
lcall
push
rcl
inc
xchg
call
fsubs
and
add
adcb
dec
shl
popa
and
lods
das
hlt
adc
je
pop
data16
pop
fs
mov
ret
mov
movsl
dec
mov
push
sub
cmp
mov
pop
jmp
mov
inc
cli
loopne
arpl
and
or
mov
jnp
inc
jl
bound
adc
xlat
xchg
ja
fidivl
cmc
pop
mov
and
js
ret
jae
xchg
stos
push
sub
mov
or
mov
aam
push
or
or
xchg
lock
sbb
lds
data16
xchg
loop
jmp
jg
insb
lods
pop
popf
xor
dec
and
jns
push
fsubrl
mov
adc
outsb
js
sub
fldcw
icebp
and
out
xchg
leave
fcomi
std
or
test
je
cmp
dec
cmp
xor
lret
subl
mov
pop
gs
stos
inc
mov
pop
add
lds
jmp
aad
lea
fsubp
mov
push
cwtl
adc
cmp
pop
sub
xchg
rclb
stos
inc
adc
in
test
arpl
jo
movsb
cmp
pop
iret
incl
gs
shrb
jo
add
xor
and
rorl
dec
pushf
scas
jle
jle
bound
sub
dec
pop
lods
cmp
push
mov
mov
stc
leave
test
mov
sar
stos
sub
rclb
fisttpll
fs
xor
dec
scas
enter
pop
outsb
popa
dec
inc
mov
cwtl
sbb
dec
dec
cmp
repnz
push
jmp
sti
pop
sub
fcoml
and
pop
lahf
pop
dec
cmp
dec
sbb
outsb
mov
inc
jle
test
les
sbb
inc
push
iret
enter
jmp
mov
call
bnd
cmp
test
mov
fcomp
sbb
push
mov
mov
insb
ja
aaa
cs
xchg
mov
push
lcall
dec
adc
dec
pop
insb
js
lea
pop
lock
xorb
pop
lods
nop
cld
nop
loopne
movsl
adc
inc
nop
cs
xchg
in
inc
push
inc
cwtl
sub
frstor
sbb
mov
arpl
mov
mov
data16
cmp
push
xor
jmp
leave
add
ljmp
cmpsl
cmp
ja
sbb
pop
inc
sbb
rolb
cmpsb
cmp
in
jno
mov
test
pushf
cmp
aaa
adc
pop
mov
xchg
mov
scas
aaa
rcrl
out
ja
stos
repnz
xlat
sub
add
cld
pop
aas
add
jae
cmp
dec
js
cmp
push
shl
mov
popa
mov
xor
clc
cwtl
imul
pop
push
push
pop
ret
or
aam
cmc
xchg
mov
fcomps
xchg
mov
push
and
aaa
fsts
sahf
es
pusha
jge
in
ret
cld
mov
pop
mov
xchg
cs
sahf
mov
inc
bswap
testb
mov
mov
popa
inc
lods
jmp
lcall
push
inc
mov
jne
sbb
jmp
fiaddl
mov
fxch
loopne
cmp
loope
inc
inc
mov
mov
xchg
out
addb
or
push
dec
sub
add
leave
and
cmpsb
push
sbb
sbbb
mov
mov
out
inc
cmp
sub
nop
enter
test
imul
repnz
mov
test
lods
cmp
sbb
dec
jmp
jg
mov
mov
mov
jmp
xor
addl
cmp
idivl
dec
call
testb
sub
fildll
sahf
ret
sbb
pushf
mov
inc
dec
pop
js
pop
into
mov
je
push
ret
mov
cmp
mov
mov
xor
scas
mov
daa
push
jmp
or
jo
iret
or
inc
sbb
jnp
jno
xchg
xchg
adc
ss
pop
adc
ss
xchg
fwait
ja
xchg
mov
fbld
pop
loop
push
insb
pop
stos
lret
mov
movsb
push
stc
btr
movsb
jp
mov
ret
arpl
shrb
out
pop
outsb
push
mov
inc
jge
xor
out
dec
dec
pop
mov
pushf
jg
inc
lret
mov
roll
push
xlat
xor
push
in
xchg
and
fs
mov
cmp
jae
cltd
lcall
shlb
jno
add
push
fnstcw
sub
jno
insl
dec
push
popf
jns
out
xchg
dec
and
out
cmp
adcb
mov
movsl
push
iret
aaa
or
or
xlat
lea
leave
stos
fcmovnbe
les
and
mov
lret
mov
in
or
icebp
adc
lods
fistpl
ret
test
pop
out
lret
addr16
loopne
and
xor
xchg
das
mov
and
ret
repz
inc
popa
mov
xor
daa
ljmp
mov
xchg
mov
daa
inc
push
pusha
fdivl
mov
clc
popa
add
xchg
bound
call
or
inc
mov
pop
dec
add
call
mov
xchg
dec
push
mov
shl
cld
fldt
imulb
cmp
mov
mov
loopne
pop
pushf
fildll
push
fidivs
mov
scas
jge
loopne
stos
jbe
test
xchg
sbb
xchg
or
pop
xor
mov
adcb
movsl
loope
xchg
scas
pop
mov
stos
mov
jo
pop
mov
jbe
or
mov
aam
pushf
xor
xor
inc
sbb
pusha
test
or
dec
xlat
rcrl
mov
pop
mov
pop
jge
int3
xchg
cmp
loope
push
stos
ss
pop
cmpsb
cmp
push
cld
icebp
mov
imulb
push
mov
add
stc
outsl
faddl
adc
push
and
mov
shl
in
pusha
ret
dec
sbb
int
lret
xor
jp
cs
push
lods
and
and
inc
xor
jo
push
clc
inc
push
dec
ret
jae
mov
cmpsl
idivb
fwait
pop
pop
outsl
test
ds
testl
jo
xor
xchg
add
mov
pop
jae
stc
lret
xchg
cmp
add
add
jns
mov
std
mov
xor
push
adc
lods
mov
pop
pusha
lods
shlb
inc
push
loop
pop
jbe
mov
xor
js
and
lea
ljmp
scas
aaa
call
insb
inc
loop
ljmp
outsb
clc
aam
jle
jae
add
xor
ss
cli
adc
lea
clc
stc
shrb
or
xchg
lea
mov
cmc
movsb
jnp
push
sub
pop
outsl
bound
pop
lds
xchg
xchg
idiv
lock
fildl
imul
mov
mov
push
fldcw
adc
pop
xchg
or
ret
jns
jg
or
and
testl
adc
xor
mov
and
xchg
adc
push
cwtl
mov
and
mov
cld
xchg
pop
jp
call
cmp
jo
or
rorb
xor
icebp
out
out
cmp
sub
cmpb
xlat
cli
push
and
push
push
shll
scas
fdivl
xchg
popf
ss
add
adc
push
xchg
jb
hlt
mov
int
push
test
cmp
fldt
xchg
out
xchg
mov
scas
push
repnz
outsb
lret
out
pop
push
lds
jmp
pushf
popa
lds
lea
shlb
pop
cs
lock
in
jge
mov
or
negl
sub
or
cld
shr
and
push
movsl
jae
sahf
lods
jl
mov
mov
psrad
test
outsl
dec
out
fstl
stos
mov
insl
adc
adc
mov
push
xor
lret
dec
fsubr
aam
addr16
stc
xchg
scas
out
and
enter
mov
clc
adc
mov
stc
jo
enter
mov
rep
ljmp
outsb
sub
sub
popf
scas
inc
lea
pusha
mov
fbstp
adc
cmp
xchg
add
popf
or
test
std
jg
stc
sub
out
sti
inc
dec
addb
les
push
or
cmp
cmc
add
in
aas
push
lret
xchg
or
out
push
mov
mov
mov
push
pop
add
dec
push
aad
jecxz
stos
sbb
les
mov
test
xchg
push
jbe
or
je
sbb
or
mov
fistpll
adc
inc
scas
aaa
xor
loop
loopne
pop
mov
pop
call
rcll
iret
dec
int
pushf
aam
push
sbb
sbb
test
mov
in
aas
dec
jns
out
mov
shrb
int3
loop
fsubr
jo
leave
mov
pop
xor
pop
xchg
and
dec
lcall
shl
roll
push
es
inc
shrl
ds
cwtl
imul
data16
adcb
xor
mov
mov
movl
lret
ss
sbb
neg
jno
ret
pop
repnz
clc
test
mov
call
mov
aas
jo
jno
mov
cmp
lods
add
addb
push
pop
fiaddl
sbb
fcoms
and
stos
andl
loope
add
in
std
sub
nop
pop
inc
mov
mov
bswap
lods
in
shll
test
sbb
ds
pop
jne
sarb
pushf
outsb
add
loope
mov
jns
out
fistps
adc
inc
mov
aam
and
roll
add
into
fnsave
insb
sti
daa
mov
inc
insl
stc
sbb
lret
fstpl
jp
dec
rcrl
adc
call
mov
lods
roll
or
cmp
push
mov
xchg
outsb
inc
dec
cmp
aam
scas
add
xchg
testb
popa
xchg
pop
movsb
lea
lock
lret
sbb
and
and
xchg
lahf
sahf
mov
mov
sub
sti
ja
out
insl
inc
shlb
jne
sbb
adc
notb
xor
rcll
mov
imul
mov
fnstcw
and
dec
cmpsb
and
js
test
jo
mov
inc
lcall
test
movsb
rcrl
std
mov
xchg
das
inc
enter
or
ss
adc
push
into
inc
inc
mov
out
fsts
mov
adcb
jl
ljmp
leave
push
xor
pop
mov
daa
adc
and
xchg
xchg
repnz
cs
cmp
roll
push
out
xor
cmp
outsl
xlat
push
scas
push
push
dec
jge
cmp
addr16
test
mov
cmc
stos
jge
cltd
cmp
xchg
xlat
loopne
xor
fisubrl
mov
addb
insb
adc
sbb
loopne
imul
mov
imul
iret
and
mov
add
adc
adc
jnp
fdivl
push
les
jno
dec
adc
ljmp
sub
inc
or
sub
arpl
jae
xor
shl
repnz
cmp
clc
cmpb
or
sbb
push
push
pop
dec
loopne
mov
lret
or
outsb
rcrl
fs
cmp
aas
fcmovb
mov
xchg
into
sub
cmp
out
pop
js
mov
jmp
mov
mov
push
pop
or
mov
call
test
subb
shrl
lret
sbb
je
pop
repnz
xchg
cmp
adc
test
and
mov
sahf
and
cmp
ja
dec
fstpl
mov
jle
lret
pusha
jl
pusha
subb
pop
sahf
sub
cmp
xchg
dec
fisubrs
out
lahf
lods
push
adc
sbb
sti
test
das
cmp
lods
lea
outsb
cld
jne
sbb
mov
mov
test
pusha
into
jmp
aaa
and
je
sub
dec
pop
xor
dec
or
icebp
pop
into
mov
pop
pop
stos
mov
mov
lods
or
inc
and
daa
jnp
xor
das
add
ss
push
and
sbb
and
dec
pop
cld
outsl
out
xor
lret
fists
fucomp
cmpsl
dec
inc
test
and
aaa
cmc
sbb
inc
xchg
enter
pop
gs
push
cmpsl
sbb
stos
sub
mov
and
and
adc
enter
shll
hlt
xchg
fabs
mov
add
dec
add
xchg
orb
scas
mov
roll
ss
or
cmp
mov
arpl
and
scas
xor
int
pop
or
dec
inc
imul
adcb
out
lahf
inc
fs
xor
clc
cmp
push
stc
sahf
jno
or
mov
sbb
js
subb
enter
cmp
or
and
imul
sbb
push
subl
inc
movl
jnp
xor
xchg
lods
rcrl
xchg
pop
in
inc
add
cmpsl
test
inc
cmp
in
mov
mov
imul
insl
dec
adc
movsl
ja
loopne
lret
xchg
cmc
add
xchg
mov
add
push
rorl
xchg
dec
pop
lahf
dec
mov
scas
out
aas
dec
pop
push
movsl
andl
ret
cmp
add
mov
jecxz
or
fsts
sbb
lods
stos
cmpsb
dec
xchg
ret
fs
int
pusha
pusha
int
ret
out
pop
mov
push
jmp
vpacksswb
scas
movsb
mov
jns
xor
ret
fsubrs
mull
jns
in
push
gs
xchg
test
mulb
imul
inc
cmp
xorl
jmp
and
xlat
inc
inc
xchg
jle
or
les
fld
cltd
lea
sbb
push
pop
stos
lcall
cltd
add
jb
fistps
std
out
sub
sahf
cmp
inc
jl
sub
jecxz
push
cmp
pop
flds
lea
adc
mov
mov
jne
leave
mov
int3
test
xor
xchg
add
xor
out
xor
movsl
jbe
aam
add
dec
data16
fisubs
rorb
adc
xchg
out
jmp
mov
cmp
into
add
mov
push
shll
std
push
rol
icebp
ss
xor
test
aaa
pop
pop
xchg
push
out
hlt
into
icebp
or
pop
int
xchg
push
jmp
add
inc
pop
dec
gs
fsubs
jnp
xor
out
sub
lret
cmp
jae
das
jmp
push
bnd
pop
adc
adc
add
add
bound
mov
jge
inc
scas
sbb
lods
lahf
add
pushf
xor
pop
fbstp
stc
inc
cltd
movsl
jno
rcpps
inc
test
in
pop
adc
mov
sbb
dec
bound
mov
cmp
or
jle
lods
pushf
icebp
out
and
inc
adc
ja
dec
cmp
add
sbb
dec
xchg
pusha
jmp
jbe
aas
roll
das
cmp
mov
test
pop
in
sbb
mov
inc
jl
xor
call
mov
cld
xor
loop
sbb
xchg
add
adc
mov
adc
jne
in
stos
or
mov
lock
xlat
xchg
push
or
adc
jge
mov
mov
sbb
test
iret
mov
pop
stos
pop
jmp
push
pushf
xor
or
iret
das
mov
cmp
xorl
adc
push
jne
test
jae
mov
fxch
fistps
jle
jmp
dec
push
jo
mov
out
push
mov
aad
cwtl
xchg
push
add
dec
fdivrp
insl
stc
dec
jl
push
or
adc
xor
inc
xchg
pop
aad
clc
mov
sub
aas
xor
pop
fwait
addr16
push
dec
add
cmp
cwtl
jae
test
sbb
out
and
cltd
fidivl
sub
shll
repnz
imul
in
clc
push
mov
ja
dec
inc
outsb
mov
ret
aaa
mov
cmc
daa
test
es
jl
jmp
sbb
mov
mov
pushf
jns
fstps
cs
sbb
pop
push
xlat
add
xor
fwait
and
out
int3
lods
arpl
and
push
jae
inc
mov
sti
add
mov
testb
int
mov
pusha
stos
cmc
test
ja
lds
adc
mov
mov
scas
shll
jp
repz
jle
dec
fists
jl
fsubl
xor
js
std
cmpsl
out
shrb
mov
adc
in
nop
xor
mov
int
insl
or
mov
bound
xchg
and
inc
cs
shlb
in
xorl
jb
xor
gs
cwtl
push
testb
out
test
mov
js
lret
sti
xor
xchg
std
js
sbb
popa
sti
xor
pop
sarb
andb
jg
mov
pop
push
loop
jle
clc
or
scas
arpl
cmp
gs
xchg
mov
pop
addr16
negl
fbstp
dec
sub
push
fwait
mov
icebp
scas
ret
hlt
mov
int3
enter
jge
movswl
sbb
lret
bound
jg
mov
push
int3
ljmp
sarb
lcall
mov
pop
push
rol
cmp
cmpsl
test
mov
int3
repnz
stos
xchg
inc
xlat
sub
inc
adc
data16
andl
je
push
cmp
aad
xor
gs
nop
mov
mov
mov
ljmp
mov
mov
enter
adc
pushf
pop
push
jmp
pop
in
out
pop
mov
shlb
test
imul
xchg
xchg
jae
jle
lods
js
jbe
xchg
lods
adc
hlt
inc
fmull
into
gs
jb
cltd
bound
cmp
cmp
push
lahf
out
popf
inc
into
cmpsb
jecxz
loopne
dec
out
inc
add
std
and
pop
out
mov
gs
xor
or
cld
mov
fsubrl
insl
sahf
xchg
mov
or
adc
push
ljmp
hlt
mov
sbb
xchg
rclb
int
pop
fbstp
fisubl
movsl
popa
jns
into
adc
dec
iret
cld
xchg
xlat
ds
js
cmp
lods
pop
and
fsubrp
stos
vmread
pop
mov
and
mov
mov
add
inc
jg
push
push
cmp
or
xor
mov
add
jmp
xor
aaa
cmp
jno
js
nop
push
stos
popf
sub
mov
pop
out
int
xchg
mov
iret
add
cmp
jecxz
mov
and
ja
in
sub
subb
cmp
jecxz
daa
adc
fs
adc
cmpsl
mov
out
lcall
jno
adc
test
or
iret
pop
aad
jne
notrack
xor
cli
das
ret
push
push
sub
cwtl
out
les
and
aad
xor
or
mov
cmp
pop
cli
or
je
jns
push
jne
xchg
mov
jl
sbb
add
icebp
repz
rcll
dec
mov
pop
mov
and
enter
push
sbbb
push
data16
mov
push
les
or
cmpsb
mov
test
adc
ret
jns
mov
loopw
push
lret
pop
inc
ss
jbe
ljmp
aad
jmp
fimull
into
loopne
jb
loope
pop
ja
add
inc
jl
pop
jbe
fwait
xor
xchg
lahf
push
inc
loop
fadds
jmp
jle
rclb
stos
lds
and
dec
push
dec
repz
test
adc
adc
loopne
or
or
jl
jae
stos
dec
lods
mov
push
sbb
repnz
cmp
mov
mov
xchg
sbb
jo
pushf
lods
mov
jo
mov
popa
or
mov
xlat
outsb
clc
dec
stos
inc
insl
pop
outsl
insb
inc
dec
push
inc
adc
pop
loop
jecxz
stos
and
adc
mov
sbbl
test
mov
sbb
sbb
push
sbb
ja
mov
cmp
enter
and
outsb
and
movsb
mov
es
pop
loop
pusha
aam
mov
dec
xor
add
fldenv
lods
and
adc
mov
jge
rcll
mov
push
adc
dec
bound
cmp
adc
jmp
pop
sbb
jle
movsb
jle
xor
sub
xchg
add
push
rclb
inc
mov
hlt
push
cwtl
gs
add
arpl
or
push
push
adc
dec
cmpsb
pop
jae
shl
sti
sub
test
lret
insl
pmaddwd
out
xchg
addr16
mov
dec
xchg
popf
jo
mov
mov
mov
mov
mov
pop
int3
ss
push
or
adc
mov
mov
ror
and
sbb
clc
and
rclb
scas
scas
sbb
jb
jge
int
rorl
repnz
fninit
stos
ss
lock
loop
jo
ret
subl
pop
js
sbb
leave
pusha
sub
jne
adc
jle
add
pop
nop
add
xor
sub
test
cli
gs
mov
jbe
aaa
rorl
pop
cmp
shl
mov
fwait
mov
arpl
ret
add
mov
fmuls
lods
dec
fmuls
sub
cmpsl
mov
cmpl
mov
ljmp
mov
inc
and
shrl
jnp
pop
mov
in
nop
adc
pop
sahf
jb
pushf
arpl
gs
pop
and
es
fbstp
repz
dec
fildl
xor
lcall
mov
lea
test
xchg
repz
adc
mov
jmp
jb
pop
testb
push
fucomp
jge
lahf
mov
ret
leave
jp
sti
sbb
pop
dec
mov
inc
adc
in
cmp
xchg
cmpsl
daa
jmp
out
push
push
lcall
xor
sarl
sarb
jl
cmp
shrl
cltd
or
fwait
cs
dec
cmp
pushf
inc
rcll
test
xchg
jno
lret
movsb
lock
mov
imul
fs
loopne
xchg
push
test
cmp
inc
fldl2t
js
lret
and
stos
cmp
repz
stos
or
mov
jl
jle
push
fadds
stc
xlat
cmp
data16
dec
xchg
lods
jmp
shl
and
adc
popa
or
xchg
dec
cwtl
inc
imul
aas
xchg
aad
pop
mov
mov
dec
cwtl
fwait
dec
icebp
pop
mov
mov
mov
lock
aam
sub
jne
xchg
popa
clc
dec
int
cmc
insl
call
cld
xor
pop
and
cmp
jnp
in
cld
cltd
fdivrs
push
mov
jmp
mov
mov
fnstenv
in
jmp
push
mov
push
xor
ficompl
fdivs
pop
pop
test
rorl
js
fdivl
ret
pop
int3
sbb
pop
mov
outsl
mov
mov
push
pop
shrl
bound
mov
mov
dec
arpl
rorb
loop
dec
gs
mov
or
rol
stos
sbb
rorl
push
call
outsb
gs
fldenv
jl
inc
mov
mov
out
dec
xlat
sbb
pop
not
nop
jmp
or
popa
outsb
sarl
rol
dec
fistpll
repnz
lcall
and
sti
add
test
clc
add
sub
call
inc
push
or
inc
push
shlb
fcmovnu
pop
loope
mov
mov
call
in
shrl
sub
sbb
sub
add
add
lret
or
std
cmc
mov
pop
hlt
inc
adc
lds
psrlq
inc
jns
jecxz
mov
int
xchg
imul
adc
loop
ficoml
jecxz
clc
aam
mov
pushf
xor
shrb
sbbb
push
mov
jg
pop
scas
fistpl
pushf
inc
clc
adc
iret
outsl
das
decb
dec
flds
mov
jbe
fnstenv
xchg
sbb
cmc
negl
inc
sbb
xchg
cltd
jne
pop
and
jmp
incl
inc
mov
gs
dec
push
sti
pop
insb
jne
sahf
and
daa
cmc
std
sbb
or
dec
push
pushf
dec
rclb
push
or
adc
lods
jb
mov
notl
dec
push
pop
fidivl
movsb
lret
dec
clc
popf
pop
adc
adc
bnd
push
add
fstl
jae
outsb
xchg
xor
js
rcr
cltd
sbbl
sub
aaa
jns
sbbl
lcall
cltd
hlt
jns
lret
mov
cltd
and
out
test
sahf
lea
adcb
movsb
or
in
xchg
test
push
es
jp
insl
mov
pop
jp
push
pusha
repz
mov
nop
xchg
call
mov
dec
pop
mov
hlt
flds
faddp
sub
bound
decb
xor
push
push
loopne
test
mov
stos
test
lahf
data16
in
jge
lret
cmp
cmpsb
cld
sub
fs
push
rcrl
mov
sub
into
enter
lret
subb
xchg
jae
popf
mov
in
sbbb
in
cwtl
lds
mov
lea
stc
or
inc
aaa
jecxz
cs
add
lcall
pop
jno
outsl
mov
rcrb
dec
fwait
xlat
scas
daa
fs
mov
test
sbb
cmp
push
pop
inc
aam
cld
fmul
ret
sarb
aam
cmpsl
jae
sbb
fwait
insl
icebp
cmp
fidivrs
and
lock
cmp
pop
ficoml
jecxz
cmpsb
sti
adcb
rorb
sbb
loopne
daa
push
jne
cmc
ffreep
pop
je
inc
xchg
xchg
xchg
cmp
pop
scas
cmp
test
mov
xchg
into
cmpsb
ja
in
sbb
test
inc
push
adc
jle
sbb
scas
das
xor
xor
and
pop
pop
push
sub
mov
arpl
inc
sarb
cmpsl
dec
pusha
sahf
jae
inc
adcl
add
push
cmp
inc
lcall
cmpsb
popa
and
icebp
movsl
imul
iret
sbb
movsl
sbbl
pop
jp
gs
rol
pop
pop
jbe
xor
pop
orl
and
vfmaddsubpd
dec
or
out
data16
mov
mov
nop
pop
stc
scas
xor
cltd
sub
lcall
and
sti
xchg
or
insb
xor
jl
mov
mov
addr16
or
push
add
cmp
or
pop
lahf
stos
cmp
into
lods
lock
arpl
jmp
das
inc
dec
out
out
and
insl
jge
push
cmpsb
sbb
leave
push
repnz
jge
push
bound
in
mov
jg
mov
jl
fdivr
sbb
nop
or
movsl
xchg
sub
mov
dec
adc
insl
jl
mov
add
mov
mov
aam
aam
je
stos
add
lods
mov
xchg
shl
xchg
and
lret
loopne
std
dec
stc
jmp
aaa
xchg
mov
or
fsubrp
mov
push
sti
and
aam
sub
outsb
stos
arpl
cmp
lods
pop
cwtl
aaa
mov
xchg
cld
or
cld
andb
push
cmc
int3
add
std
xchg
testl
push
sub
sbb
dec
mov
dec
dec
mov
mov
ret
movsl
cmpsl
jo
adc
imul
dec
jae
push
mov
mov
scas
insl
clc
fwait
es
mov
lret
push
andb
scas
xchg
cmp
push
and
jl
rclb
rcrb
in
pop
add
push
mov
imul
pop
repz
repz
xchg
cltd
mov
data16
push
mov
add
mov
pop
inc
xchg
mov
jne
nop
js
lods
mov
pslld
mov
push
dec
mov
push
adc
push
les
xlat
rcll
or
cmpb
in
pop
push
add
in
arpl
into
xor
iret
mov
sub
xor
adc
sbbb
jp
mov
add
inc
fstpl
stos
xlat
push
divb
test
stc
sbb
shr
mov
ficoml
mov
mov
in
lahf
mov
xchg
push
popa
xchg
or
cmpsl
ds
fsubrl
inc
mov
shrl
stos
push
ljmp
icebp
insb
xchg
mov
ss
mov
repnz
add
pushl
sub
out
or
subb
bound
lret
push
add
xor
jmp
mov
and
pop
roll
popa
jns
mov
mov
andb
frndint
popa
and
mov
fildl
mov
push
enter
inc
ret
xlat
sahf
jne
inc
cmpsl
aaa
lock
je
pop
jl
lcall
mov
jg
push
pushf
hlt
data16
daa
adc
stos
shrl
or
mov
lahf
pusha
xchg
repnz
fwait
jne
fdivrl
ficomps
sarb
fsubl
mov
cli
cli
sbb
sub
leave
pusha
dec
lds
test
insl
out
mov
stos
mov
fdivs
cwtl
lcall
lods
inc
pop
hlt
cmpsl
jns
in
scas
cs
lock
push
and
cs
pop
ret
xchg
test
fldenv
jge
sub
xchg
mulb
mov
xor
ds
daa
scas
mov
loop
add
sub
scas
loop
pop
dec
ds
dec
sub
sub
call
pop
imul
push
cs
cmp
ss
out
mov
outsb
in
inc
lret
mov
sti
fwait
jae
les
add
jo
pop
shll
add
xor
xchg
shr
in
testb
rclb
push
lds
gs
icebp
sbb
cmpl
add
scas
js
int
push
inc
scas
or
pop
es
dec
jge
addr16
arpl
pusha
mov
pop
xchg
sub
inc
cltd
or
sbb
jge
js
stc
jae
divl
fs
nop
push
xlat
neg
lret
sahf
pop
sahf
iret
push
add
mov
outsl
add
mov
pusha
sbb
in
dec
orl
or
push
mov
add
mov
movsl
mov
outsl
shrl
sbb
pop
scas
sarl
xor
sbb
push
sahf
aaa
cltd
into
cmp
lcall
sbb
jbe
mov
adc
into
jecxz
test
cmp
test
xor
lods
pop
sub
add
pushf
inc
cwtl
add
inc
xor
jp
call
xchg
popf
and
fildl
sub
push
rcr
and
pop
xorps
divl
fs
jno
pop
and
rorb
mov
cltd
loop
mov
mov
push
jb
loop
clc
pushf
mov
mov
dec
add
aaa
xor
popa
std
fistpll
jg
cmp
inc
push
xor
or
cs
mov
fcmovu
jmp
dec
js
jl
in
movsb
mov
loop
enter
rcll
adc
ret
pop
mov
enter
xor
sub
mov
inc
call
rclb
repnz
mov
pop
and
mov
pop
loopne
out
xor
cmp
xchg
das
loop
sub
ljmp
adc
xchg
imul
mov
cmp
test
cmp
or
add
sahf
jbe
and
pop
dec
mov
cld
pop
movsb
add
xlat
test
mov
mov
shrl
sub
call
icebp
or
das
jbe
sahf
pusha
mov
out
and
addr16
in
or
mov
sub
mov
push
loope
jp
test
test
jp
ficomps
int
imul
inc
mov
lret
fidivrs
ja
mov
inc
pop
shll
es
add
inc
icebp
jnp
lods
arpl
pop
pop
lods
sbb
sbb
sti
fnstcw
pop
outsb
cmpsb
jns
js
pop
cmp
jae
fdivrs
dec
inc
mov
lea
xor
mov
mov
jae
push
jnp
pop
loop
inc
add
push
outsb
sbbb
scas
mov
pop
in
dec
scas
xchg
nop
loopne
imul
shlb
dec
and
jg
add
jnp
fistpll
faddl
sbb
stos
stos
test
ds
mov
xor
pop
scas
dec
pop
rol
cmp
sub
movsl
mov
sub
push
leave
xchg
push
lret
pop
leave
mov
xchg
xor
ror
arpl
test
sub
fdivrl
aas
or
sti
xchg
std
mov
sbb
push
test
insb
cs
nop
pusha
lea
in
push
fwait
cmp
sub
lahf
aam
xchg
test
or
shrb
mov
loope
rcrb
mov
movsb
cmp
mov
es
ret
mov
push
flds
pushf
out
push
fs
adc
and
fidivs
enter
xor
shrb
inc
push
sub
inc
in
cltd
push
scas
and
push
in
ds
mov
xchg
mov
je
or
sbb
cmp
js
movsl
xchg
mov
push
push
xchg
stos
and
add
sbb
hlt
jg
dec
pop
add
inc
fwait
iret
lods
xor
cmp
lock
or
sbbb
icebp
inc
enter
and
lahf
mov
pop
push
mov
gs
sub
jbe
std
ret
loope
mov
js
push
mov
jno
xor
sbb
shl
cmp
xchg
stos
mov
jns
push
sarl
push
xor
sub
pop
ds
clc
test
inc
lods
mov
push
sbb
enter
cli
inc
lret
adc
aas
dec
lea
addr16
mov
cmp
test
push
xchg
testl
cli
fsubl
daa
xchg
and
inc
pop
movsb
jbe
rorl
fldt
cmp
dec
push
int
cmp
data16
out
int3
fs
int
push
into
inc
ja
ret
jne
das
lds
mov
dec
jecxz
adc
mov
out
out
jge
lahf
xchg
xchg
mov
or
popa
or
adc
mov
sbb
pop
icebp
call
or
sub
fidivl
sarb
xchg
xchg
outsb
add
cmpb
stos
mov
stc
nop
sub
cld
les
stos
cmc
sbb
lret
xchg
cltd
push
scas
xor
push
call
mov
pop
inc
lds
outsb
pushf
lahf
dec
jecxz
and
imul
cmp
outsl
sub
pop
repnz
dec
jp
test
repnz
or
std
lods
subl
das
xor
imul
lods
rolb
push
stos
outsb
lock
pop
int
inc
cmp
mov
pushf
mov
jns
out
jge
arpl
outsl
daa
mov
popa
pop
mov
pop
jl
dec
scas
cmp
ficomps
inc
in
in
push
outsl
js
cmp
fcomi
in
xchg
rcl
pop
daa
flds
pop
mov
das
add
xor
cwtl
shll
in
and
rcrl
icebp
insb
into
in
fucomip
xor
jecxz
and
leave
pop
xor
add
push
push
inc
jbe
or
mov
pop
out
out
fcomps
pusha
mov
fmul
rol
push
insb
pop
aad
lods
push
out
mov
fnsave
in
push
mov
push
in
fisubl
enter
inc
push
jge
inc
mov
ret
push
test
shrl
cld
mov
push
sbb
mov
jl
aas
loope
mov
bound
add
mov
xchg
mov
fwait
sti
adc
into
js
add
mov
jmp
jl
sbb
mov
fucomp
inc
xlat
cmpsl
jb
gs
inc
pop
test
stos
sbb
aas
xor
jo
repnz
cmp
xor
aad
and
mov
lahf
pop
int3
dec
push
ja
es
clc
mov
inc
add
pop
es
in
xor
aas
mov
sbb
aas
ja
mov
mov
test
mov
pop
mov
push
mov
mov
sub
mov
scas
call
or
mov
shrb
xor
sbb
pop
add
dec
std
xchg
cmp
dec
fs
mov
outsl
cmp
scas
rol
xor
mov
mov
dec
pop
xor
mov
divl
pop
daa
outsl
xlat
mov
imul
outsb
jg
out
xor
and
sbbb
mov
mov
dec
test
mov
jg
lods
sub
iret
daa
mov
mov
loopne
adc
cs
jae
fisubs
imul
hlt
mov
or
add
dec
les
daa
xchg
leave
push
leave
pop
push
pop
repz
imul
xchg
jae
sbbl
xchg
test
mov
pop
ss
fwait
xchg
fxch
jns
jae
lahf
add
pop
fisttpll
sti
add
cmpsl
push
daa
ds
pop
daa
push
arpl
jbe
push
test
imul
idivl
mov
jnp
mov
adc
add
fiadds
fiadds
negl
xor
ss
dec
in
ljmp
jb
or
lahf
xchg
imul
pusha
push
sbb
in
rclb
or
sub
sub
dec
movsb
mov
sub
les
nop
adc
icebp
outsb
cs
sbb
ds
cmp
aad
cmpsl
adc
lock
in
sbb
adc
sub
mov
lret
push
cli
cmp
push
pop
icebp
aaa
dec
xor
je
sti
xchg
sub
cld
sahf
xor
pop
repnz
icebp
lock
lcall
sub
xor
pop
pop
mov
fnsave
xchg
xchg
repz
jbe
fwait
sbb
mov
sbb
inc
not
mov
jbe
loope
pop
mov
dec
fdivrs
orb
das
pop
mov
shrb
popf
call
mov
and
cwtl
xchg
mov
sub
pusha
std
cmp
insl
add
jns
out
mov
cmp
sti
xchg
cs
testl
fcomip
cmp
cmp
ficomps
lea
add
enter
scas
or
lods
mov
test
in
xor
lcall
mov
clc
sbb
and
leave
pmovmskb
sbb
adc
mov
pop
outsl
jb
and
mov
sbb
adc
pop
insl
idivb
icebp
movsl
cmp
sahf
add
sbb
xchg
cmpsl
inc
ss
inc
push
popf
inc
inc
sbb
sbb
cmp
ds
pop
out
popf
out
jmp
idivb
enter
cli
sbb
xor
sub
push
nop
mov
movsb
mov
adc
mov
lret
movsl
jns
sarl
mov
mov
sub
sbb
push
lods
lret
in
stc
sub
xchg
xor
clc
movb
ror
cmp
mov
data16
shlb
aam
and
pop
outsb
xor
repz
imul
divl
adc
cmp
fists
xchg
mov
pusha
cmpsl
add
push
jb
push
scas
inc
sub
out
mov
sbb
aam
mov
lahf
jbe
iret
xor
sub
mov
ret
lods
sub
mov
repnz
mov
repnz
lods
mov
mov
jns
adc
fcomps
inc
inc
je
aad
jnp
and
movsl
pop
xchg
repnz
cs
add
mov
mov
rorl
adc
and
pop
gs
sbb
pushf
and
and
jg
mov
sbb
sbb
cmc
inc
ds
sbb
mov
or
pop
mov
int3
sahf
xor
push
adcl
pushf
jne
ss
jle
pop
add
mov
sbb
pop
pushf
fisubrs
mov
in
fnsave
call
cli
or
negl
xlat
mov
xchg
adc
jns
jge
ja
sbb
inc
out
mov
scas
inc
lods
incb
js
roll
int
lods
inc
sub
sub
mov
push
imul
sahf
mov
js
fidivs
pop
int3
and
shrb
cmp
repz
lret
repz
jg
outsl
aad
fucomip
jnp
pop
sbb
aaa
mov
loope
ds
push
insb
in
les
xor
lret
in
jp
enter
xor
sbb
xor
in
mov
adcl
out
jb
jne
orl
imul
jb
mov
push
movsl
xlat
push
jp
adc
aam
arpl
bound
into
test
ds
aaa
or
push
lock
sub
jb
add
ja
mov
pop
xor
mov
loop
in
or
sub
clc
loop
pusha
jnp
inc
xchg
scas
lods
adc
lds
stos
mov
xchg
imul
sahf
es
or
jb
pop
adc
hlt
xchg
jmp
and
jmp
adcl
into
inc
or
int
xchg
les
stc
or
push
xor
sub
xchg
lret
dec
pop
inc
std
pop
and
or
add
xor
or
xor
pop
adc
xor
xchg
popl
fwait
cs
aad
jae
fsubr
cmp
inc
ljmp
xor
mov
pop
inc
lock
lock
mov
add
pop
cld
repnz
or
xchg
jns
pop
mov
stos
lock
xchg
push
ret
subb
int3
dec
lahf
jb
mov
fnsave
stc
xchg
inc
in
je
jae
cmpsb
cltd
scas
pop
add
inc
lret
lret
jns
test
arpl
mov
inc
movsl
and
movsl
cmp
insl
sbb
lea
insl
or
add
dec
and
in
mov
mov
sub
xor
cmp
xchg
sbbl
jg
std
cmpsl
loop
lcall
sbb
lcall
sti
lcall
dec
fdivrs
push
subb
lahf
mov
xor
push
test
callw
scas
mov
out
xlat
mov
push
mov
sbbb
pop
add
imul
mov
sbb
and
leave
fsubl
lret
pop
cmp
out
sub
add
sub
mov
addr16
imul
notb
popa
loopne
mov
addr16
xor
stos
jl
aam
aam
divl
push
sbb
add
inc
jbe,pt
mov
orb
mov
cli
mov
addl
mov
pop
aad
aam
ret
jp
aam
in
hlt
dec
mov
imul
repz
cs
cmp
shr
dec
mov
hlt
js
dec
insb
add
decl
mov
dec
in
push
add
or
out
mov
sub
sysenter
mov
imul
cmpsb
add
pop
cli
jnp
loopne
lock
scas
js
lcall
sub
push
push
inc
or
stos
jge
push
inc
pusha
dec
xor
pop
mov
fucom
mov
lock
mov
mov
mov
aaa
bnd
and
jmp
mov
cld
add
outsb
scas
std
lods
xchg
push
popf
stc
sub
sbb
cmp
and
adc
nop
sbb
in
loop
push
add
mov
in
adcl
inc
lock
jns
jo
lods
push
iret
divb
xor
lret
pop
push
cmpsb
in
shl
cmp
aam
ret
jae
jp
mov
fmull
inc
divl
mov
inc
jge
stc
or
mov
xor
leave
pop
mov
xchg
out
jb
int3
sbb
test
cmpl
dec
cmpsb
int3
ret
clc
inc
arpl
push
stos
sbb
xchg
dec
or
hlt
shrl
pusha
add
jb
xchg
stos
leave
pop
jge
ljmp
mov
cmp
ficoml
xor
mov
daa
rorb
and
bound
out
in
mov
fiadds
push
test
out
test
fs
xor
or
mov
bound
sbb
add
jnp
xor
test
stos
je
inc
push
loopne
icebp
cmc
inc
push
test
je
adc
stos
fsts
xchg
add
test
sub
iret
inc
idivl
out
inc
repz
mov
les
aam
vpminsw
sub
cmp
dec
loopne
aas
dec
in
or
data16
icebp
jl
scas
imul
popa
mov
mov
add
push
clc
popl
ret
cmp
test
mov
xor
movsb
push
push
sbb
mov
aas
sti
mov
mov
mov
movsl
repnz
stos
add
fsubrl
out
push
dec
fs
adc
inc
data16
jl
std
push
mov
fnclex
push
aam
popf
cmp
mov
inc
outsb
rolb
xchg
jg
fdivrs
fs
stos
pop
iret
aam
dec
xchg
insl
ss
and
sbb
arpl
xor
ljmp
popf
fs
cs
mov
sbb
push
and
enter
or
mov
in
test
pop
dec
in
xchg
sti
mov
out
xchg
aaa
cmp
or
into
jno
fbld
inc
mov
hlt
adc
and
ja
iret
int3
mov
stc
cwtl
pop
xor
xchg
inc
cmp
adc
cld
dec
repnz
cltd
xor
dec
jge
inc
xor
or
aam
jno
or
rcll
ds
dec
sbb
lds
insl
mov
push
sbb
xchg
add
addr16
xor
movsb
jns
loopne
leave
xor
rorb
sahf
in
mov
jb
push
sbb
pcmpgtw
outsl
push
jge
testl
pop
lea
filds
sbb
mov
divl
xor
ss
test
icebp
and
rcl
sub
adc
sub
cltd
test
repnz
es
popf
jbe
decl
leave
hlt
sbb
mov
lar
es
jecxz
xchg
sbb
push
mov
test
mov
jae
sub
sbb
jbe
xchg
divl
sub
and
ret
mov
shll
add
xor
icebp
cmpsl
mov
and
xchg
pop
inc
sub
sub
cld
or
sbb
cld
adc
out
je
shr
fs
cwtl
cs
xor
frstor
dec
xchg
lods
jns
jmp
out
lock
inc
ss
jnp
insb
xchg
add
cmp
mov
mov
sarb
lods
icebp
enter
pop
dec
sub
lods
mov
cltd
push
push
fxsave
insl
dec
adc
jo
adc
or
cltd
std
ljmp
test
sub
mov
push
pop
add
mov
repnz
gs
cmp
add
adc
cmpsl
jae
jns
push
dec
aam
aad
fidivs
mov
gs
mov
dec
adcl
cmp
cs
aaa
scas
push
sub
fs
dec
fdivl
test
lock
mov
lret
scas
popa
aam
jno
inc
pop
fimull
sahf
lock
mov
repnz
stos
xchg
das
imul
xor
or
scas
adc
mov
call
adc
rol
sti
add
dec
loop
dec
repnz
out
and
shlb
add
dec
sbb
hlt
jmp
insl
lahf
cld
repz
lock
aas
mov
and
scas
inc
inc
ret
lea
int
iret
sahf
sahf
xor
mov
ret
xor
jmp
in
sahf
push
xchg
sbb
inc
ds
out
or
pushf
movsb
js
fistpl
call
xor
ja
outsl
cmp
push
or
pop
lret
arpl
mov
jl
fbstp
inc
inc
inc
inc
jae
popf
mov
jmp
pusha
inc
fbld
xchg
mov
div
push
pop
sub
push
adc
mov
adc
ret
dec
push
rcll
sub
insb
mov
jae
mov
test
mov
xchg
add
cmc
adc
cli
loope
push
shrl
xchg
stos
jle
fwait
scas
fs
push
inc
or
push
jg
fucom
cmp
sub
imull
fmuls
mov
lods
jmp
les
fmul
cmpsl
xlat
stc
enter
dec
lcall
es
ja
push
cs
mov
or
pushf
mov
push
pushf
sarb
sub
and
mov
outsb
mov
insl
xlat
cmp
xchg
inc
fcomps
xor
gs
fstl
push
imul
pop
jbe
or
and
mov
jg
loope
mov
sbb
fistpll
pop
sar
pop
sub
dec
jmp
rorb
mov
clc
adc
bnd
push
jno
dec
xchg
aas
lcall
mov
push
mov
adc
xor
daa
xchg
in
push
negl
subb
notl
and
pop
push
out
pusha
pop
out
outsl
xchg
js
or
sbb
in
sahf
adc
leave
adcb
cmp
daa
mov
test
fdivl
pop
mov
cli
sub
xchg
dec
mov
sbb
fistps
mov
and
inc
pmaxub
scas
cltd
clc
es
pop
sarb
lea
cmp
push
fwait
sub
mov
pop
adc
popf
orb
inc
test
not
mov
adc
ja
enter
test
add
or
jecxz
push
push
inc
lret
test
jne
dec
sbb
into
ds
xor
mov
out
cli
cmpsl
dec
and
fldl
mov
jg
gs
mov
jge
pop
push
fwait
xchg
es
loopne
xchg
xor
jecxz
sub
mov
add
jge
subb
and
cmp
xchg
dec
push
lods
sbb
or
scas
aad
sarb
xlat
shrl
mov
xchg
insl
sub
imul
mov
sub
testb
repnz
mov
push
popa
xorl
hlt
mov
push
pop
pop
in
pusha
lret
leave
into
sub
mov
scas
push
sbb
xchg
int
fdiv
shl
leave
popf
icebp
mov
mov
data16
fdiv
pop
inc
sub
xorl
or
xchg
and
aad
cmpsl
repz
cs
jno
mov
lret
lea
sub
xchg
sti
fadds
addr16
stos
xor
pop
xlat
lret
ds
xchg
fwait
adc
shrb
or
int
jle
add
adc
rsm
imul
mov
mov
loopne
shrb
and
jo
lcall
es
je
add
push
dec
xlat
jmp
or
sub
icebp
fsubr
roll
in
rcrl
add
minps
pop
xor
test
pop
mov
int
js
in
pop
lret
cmp
ds
pop
push
jo
icebp
jno
cmc
inc
lahf
scas
out
dec
jecxz
inc
in
xchg
aas
or
add
ds
and
popa
or
xchg
popf
sub
gs
adc
xlat
push
lods
mov
fisttpll
xchg
push
or
aaa
add
push
mov
adc
in
int
int3
cmp
xchg
repz
popf
repnz
jl
fistpl
stc
pop
xchg
pop
dec
lcall
imul
cmp
sub
imul
movsb
ror
enter
andl
dec
pop
jp
pop
rcll
jl
push
xchg
and
sub
rorl
push
clc
sahf
fprem
jb
or
inc
mov
mov
test
or
arpl
dec
in
test
imul
mov
pop
adc
jns
clc
mov
enter
int
xor
and
inc
out
dec
xchg
pop
push
fcoms
pop
je,pn
pushf
movsl
push
jmp
mov
popa
and
cmc
adc
adc
mov
mov
lret
roll
hlt
or
cmp
mov
add
xlat
mov
mov
adc
inc
jecxz
pop
dec
fwait
push
inc
push
xlat
push
xor
and
and
stos
jmp
sbb
xor
fiaddl
mov
jnp
sub
mov
loope
push
mov
je
and
lods
or
cmpsb
mov
cld
lcall
cli
xor
inc
sbb
notb
test
sbb
repz
ds
in
and
sbb
mov
test
je
add
cwtl
jp
incb
pop
sbb
pusha
jne
cmp
ljmp
xor
pop
scas
mov
adc
lods
loop
jbe
mov
int
out
pop
cli
xchg
sub
add
mov
aam
mov
test
faddl
sub
pusha
idivl
jle
lock
xsha256
cmpsb
adc
sub
loope
scas
int
fistpll
das
mov
in
and
jnp
xchg
xchg
cltd
stc
sbb
sub
xchg
push
imul
pop
sub
call
or
bound
sbb
and
dec
loopne
mov
insb
adc
xchg
jns
lret
es
scas
lods
cli
adc
cltd
or
mov
fisubrl
icebp
sahf
cmp
rcrl
sub
pop
cmp
add
lahf
inc
adcl
or
mov
push
cmc
adc
mov
bound
pushf
xchg
pop
std
stos
test
dec
push
mov
push
mov
pusha
or
mov
imulb
iret
jl
add
xor
aas
out
pop
xor
movsl
enter
mov
cwtl
out
subl
ja
iret
aad
aad
mov
insl
fsub
fs
push
and
mov
fsub
int3
xchg
push
lret
shll
and
add
fsubrp
test
add
xor
xchg
sub
adc
dec
pop
cmp
mov
gs
jg
scas
mov
sahf
pop
or
data16
and
das
imul
mov
push
xor
or
outsb
test
fdivl
or
mov
test
cs
andl
cli
xor
mov
loope
out
out
ret
and
xor
jecxz
mov
mov
jmp
xchg
cmc
lock
stos
adc
adc
gs
mov
mov
fwait
out
movsb
enter
jl
sti
cmp
jle
sbb
push
lret
test
pop
adc
loope
jmp
jle
and
fisubrl
mov
stos
pop
je
push
jl
test
cmp
pop
and
ss
mov
loope
or
outsl
out
xlat
and
xchg
arpl
cld
mov
sbb
repnz
cmpsl
add
mov
jo
add
lods
xchg
mov
add
imul
dec
jae
inc
mov
fildll
push
mov
mov
push
sbb
ficoms
cld
jge,pt
cwtl
enter
lods
add
das
pop
lea
lds
loop
ljmp
dec
add
and
or
jle
mov
sub
dec
pop
pop
jae
daa
xchg
pushf
mov
mov
out
or
dec
push
and
mov
mov
mov
xor
adc
mov
shlb
data16
aad
xor
xor
xchg
ljmp
mov
in
or
jle
and
lea
stos
sub
push
shlb
lds
cmp
pop
imul
jbe
dec
mov
sbb
push
es
push
push
fsqrt
xor
or
mov
loope
stos
add
push
in
sbb
push
lods
push
adc
push
sbb
add
jns
or
mov
xchg
in
mov
or
mov
imul
fs
cmp
dec
nop
push
out
cmp
jo
push
pushf
lret
inc
xor
add
jge
or
call
dec
mov
pop
insl
dec
in
push
push
out
jae
jae
fistps
mov
pop
sti
and
lods
push
pushl
inc
enter
imul
shll
dec
imul
mov
mov
cmp
cmp
insl
push
fwait
sahf
push
clc
mov
push
push
push
add
mov
hlt
pop
lar
aad
call
cli
jno
mov
dec
movhps
ret
sub
sbb
dec
cltd
mov
js
andl
sbb
pop
push
jmp
mov
xor
orb
jo
jnp
leave
cmpsl
pop
rorb
imul
sbbl
scas
sbb
push
xchg
outsl
xchg
scas
rorl
mov
push
pop
popf
jbe
jo
pop
dec
pop
insb
lods
fxch
pop
mov
pusha
adc
es
outsl
cmp
enter
mov
push
push
push
mov
adc
pop
leave
mov
jecxz
jmp
icebp
pop
ljmp
mov
inc
or
cs
int
pop
lds
cmp
mov
push
mov
sbb
jns
rcrb
lea
sbb
in
xor
sbb
sbb
inc
cmp
in
rcl
cmc
sbbl
testb
stc
inc
cld
mov
bound
adc
mov
xor
pop
adc
pushf
mov
das
jae
pushl
lods
ret
mov
aad
dec
cmpl
lods
cmp
in
cltd
pop
jno
pop
xchg
test
xor
jmp
push
pop
pop
push
dec
or
nop
daa
jo
lcall
dec
adc
mov
cs
jns
vmovhpd
aas
pop
fldenv
lea
in
das
cmpsb
xchg
gs
and
mov
mov
mov
xor
sub
add
and
and
xor
out
xchg
or
lret
add
cmp
dec
shll
cmp
fcoms
and
mov
and
imul
xchg
and
rorl
movsb
mov
popf
sbbb
jnp
and
cmp
xchg
jecxz
nop
dec
dec
push
mov
mov
mov
iret
push
dec
sbb
adc
jnp
enter
movsb
add
rcrl
imul
out
pop
cmp
add
ljmp
cwtl
setb
jmp
fsts
cmp
lock
in
mov
xchg
and
push
mov
mov
fmuls
test
mov
out
mov
lods
and
enter
in
rclb
in
lret
xor
push
addr16
sub
test
push
or
loopne
pop
pop
les
adc
inc
pop
lods
add
in
jle
dec
mov
jnp
mov
rcrb
inc
mov
mov
sbb
scas
call
cmp
clc
out
and
mov
sub
in
stos
and
push
mov
fistpl
adc
lods
mov
push
rcr
call
mov
add
xchg
pop
pushf
cli
xlat
jo
cld
test
mov
jecxz
jno
mov
aam
sub
mov
mov
mov
lods
push
dec
dec
jns
pop
cmp
mov
mov
ss
in
repnz
fsubs
hlt
scas
push
add
add
dec
test
bound
and
mov
jmp
add
cli
mov
adc
aam
std
push
cwtl
push
push
and
cwtl
ljmp
jns
xchg
push
mov
cmp
sbb
push
push
jno
adc
jmp
sub
jo
cmp
cmp
test
lods
mov
pop
movsl
ficoms
xlat
push
popf
sub
and
test
js
mov
push
cmp
push
repnz
cwtl
sbb
fldcw
mov
mov
icebp
clc
jecxz
gs
sbb
ret
ljmp
dec
xchg
jno
sub
jmp
and
fisttpl
and
mov
popa
xor
xchg
movsb
mov
adc
arpl
sbbl
ret
pusha
loope
rcll
cmp
scas
scas
sbbl
sub
jne,pn
sub
mov
jae
imul
or
cmp
adc
push
pop
fldenv
and
and
adc
rcrl
cmp
insl
pushf
cli
shll
iret
loop
call
cmp
js
ss
lea
stos
orb
xor
pop
mov
movsl
and
push
mov
or
cmp
inc
adc
rol
jl
dec
xor
stc
or
mov
mov
loope
jnp
mov
xchg
add
icebp
jmp
or
xchg
jo
test
jb
call
stc
rcrl
push
and
cmpsb
xchg
pop
out
push
mov
mov
mov
clc
inc
xlat
sub
mov
cltd
pop
sub
stos
ficoms
fldl
add
push
jo
mov
cmc
push
int
mov
cmpsb
add
insb
in
stos
sarb
out
fdivrl
jmp
cld
xchg
test
in
imul
jae
daa
add
xor
xor
mov
inc
mov
in
ds
mov
shrl
jge
arpl
ret
jbe
testl
sub
repz
and
test
fdivl
ret
xor
mov
fisttpl
mov
mov
adc
dec
data16
add
andl
pop
inc
loope
leave
fs
clc
inc
mov
or
cmp
lret
or
stc
inc
mov
mov
xchg
jnp
out
dec
add
insb
inc
push
daa
sub
mov
js
insb
int
xchg
in
or
sti
push
inc
or
xor
lret
push
fwait
xor
or
adc
imul
pop
bound
jmp
sbb
and
aad
jmp
push
mov
lods
test
test
in
fiadds
into
mov
arpl
add
in
xchg
jge
int
mov
outsl
inc
cld
in
mov
sbb
add
aad
ds
push
out
mov
add
push
jae
sbb
adc
insl
mov
mov
outsb
xor
xor
add
pop
push
add
mov
lea
cmp
movsb
mov
sbb
sub
popa
cmp
xor
lods
ljmp
aas
mov
mov
aad
leave
pop
js
aas
mov
test
pop
icebp
scas
loopne
jnp
aaa
cli
das
xor
sbb
mov
push
imul
pop
sbb
insb
divb
mov
or
out
clc
cmpsl
mov
push
push
mov
fwait
into
test
into
sbb
rol
jo
mov
es
mov
add
mov
dec
icebp
mov
pop
jne
negb
pop
fs
addr16
inc
and
jb
data16
fidivs
fsubrl
mov
pop
sbb
and
enter
and
sbb
add
push
push
call
stos
aaa
pop
stos
in
int3
leave
icebp
jbe
push
lods
sti
xchg
add
in
lods
outsl
fsts
pop
xor
jle
jne
push
add
loop
das
sbb
cmp
repnz
fnstsw
lcall
filds
sbb
xchg
pop
aad
faddp
scas
imul
pop
sub
lret
push
lods
fs
push
xor
push
inc
inc
test
icebp
xchg
or
or
shlb
sbb
test
xor
or
dec
mov
pop
mov
inc
adcb
fistpl
into
popa
stos
js
jno
push
cmc
dec
rdmsr
clc
or
dec
mov
js
add
xchg
lds
xlat
mov
fidivl
sahf
in
aaa
into
mov
push
pop
mov
in
jno
enter
iret
jecxz
adc
fnstsw
clc
xchg
sahf
push
jl
push
mov
xor
es
sub
jl
call
mov
stos
dec
dec
sub
ret
add
push
pop
mov
bswap
jne
jmp
xor
jb
orl
adc
cmp
push
jecxz
jmp
pop
in
rorb
or
push
mov
icebp
jg
push
jp
mov
lods
das
add
ljmp
popf
ds
xchg
mov
popa
mov
in
and
push
imul
pop
outsl
test
mov
sub
stos
out
lret
imul
cmp
mov
jbe
orb
fbld
push
mov
adc
xlat
mov
push
jb,pt
push
push
fstl
lds
jg
test
mov
lea
add
daa
movsl
lds
data16
add
sbb
xor
stos
divl
mov
mov
cmp
inc
push
lock
dec
dec
mov
mov
add
mov
pushf
test
test
sbb
repz
lea
out
stc
and
subb
mov
cwtl
pop
movsb
xchg
add
add
loope
sbb
imul
scas
je
cmp
loop
xlat
cmp
adc
push
xchg
adc
gs
xchg
and
add
mov
and
fstps
dec
xlat
ljmp
inc
ret
outsl
and
adc
bound
pop
jg
addl
adc
stc
or
adc
int3
pusha
sti
xchg
push
in
push
dec
cmp
loope
dec
pop
pop
mov
sbb
loop
cmp
das
cmpsb
lock
add
gs
call
std
jmp
stos
icebp
mov
lret
and
and
aas
insb
xor
fsubrl
push
push
dec
or
pop
je
mov
lahf
push
adc
subb
aas
xchg
stos
ret
nop
pop
lds
lods
pop
cmp
repz
pushf
insl
jecxz
dec
dec
lods
insb
shll
dec
push
xor
cwtl
pop
cli
hlt
dec
ret
addr16
mov
push
xchg
push
sub
orb
dec
mov
shrl
fcomps
es
and
sub
sbb
cmpsl
stos
jl
sbb
dec
int
out
push
xor
mov
mov
insb
test
pop
cmpsb
push
cmc
xchg
mov
cmp
clc
or
xor
loopne
out
mov
ret
stos
add
and
fidivs
sahf
int
fldcw
inc
push
cmpsl
mov
jl
gs
sub
jl
icebp
xorl
lods
inc
jnp
mov
addr16
inc
bound
clc
pop
or
xor
mov
test
push
jg
lock
xor
pxor
arpl
fists
lcall
cmc
or
incb
orl
mov
pusha
test
pop
aam
out
jne
pushf
mov
push
sub
gs
mov
dec
iret
mov
out
sbb
cmc
lods
and
xchg
std
add
mov
mov
fwait
or
cmp
push
jo
fsts
xchg
stos
mov
mov
loopne
shl
stos
pop
inc
and
cmp
dec
aas
cmp
jne
loop
imul
fs
fiadds
push
ljmp
cmpsl
hlt
add
push
lcall
fs
sub
clc
cmp
fnstcw
scas
add
fistpl
rcrl
push
add
movsb
cmp
xor
ds
scas
xlat
addr16
insb
fs
push
fldenv
mov
je
and
dec
out
movl
addb
fcmovnu
xchg
inc
mov
loop
sbb
xor
add
inc
dec
pusha
jne
pushf
imul
push
inc
in
dec
dec
loopne
mov
xchg
mov
imul
movsb
dec
jecxz
mov
and
cmpsb
test
pop
rorb
adc
test
dec
or
mov
mov
cli
push
jecxz
adc
sub
sbb
jbe
mov
mov
and
cld
ret
outsb
and
loop
mov
xor
in
movsb
pop
in
add
mov
jo
jo
dec
xor
xchg
adc
mov
imulb
lods
mov
push
ja
mov
in
lds
xchg
jae
aam
dec
std
in
ror
push
xor
insl
test
mov
sbb
lods
les
leave
jae
hlt
push
xchg
mov
xchg
stos
aad
mov
xor
sub
sub
outsl
fcompl
pop
test
dec
pop
cmp
ja
ret
pop
mov
popf
sub
outsl
mov
mov
pop
mov
mov
inc
pusha
lahf
pop
sbb
add
jmp
sub
mov
push
adc
in
mov
aas
fbstp
push
das
ja
insl
idiv
aam
sti
sbb
scas
into
push
mov
or
stc
daa
sub
stc
adc
dec
in
jle
cmp
pop
push
ret
mov
or
mov
sub
cld
xlat
mov
cltd
xor
stos
xor
sub
mov
scas
mov
push
sub
aas
mov
ret
ret
jmp
or
lcall
mov
adc
cltd
jle
out
mov
pop
sbb
sub
cli
repz
sbb
sbb
dec
jl
rclb
pop
pop
data16
loopne
xchg
adc
incl
inc
inc
and
dec
inc
or
dec
pop
adc
inc
fimuls
clc
mov
cmp
fnstenv
dec
jge
mov
insl
xchg
pop
les
cmp
mov
cmp
subb
xor
pop
mov
pop
push
push
jno
sbb
jp
mov
andb
daa
rclb
push
xchg
push
into
inc
cmc
sar
push
loopne
fiadds
dec
mov
push
cmc
movsb
inc
push
stos
xchg
cmp
andl
nop
dec
stos
ret
pushf
jg
jnp
mov
jo
stos
mov
push
test
jnp
in
jp
ljmp
adc
inc
pop
into
mov
or
popa
mov
mov
inc
notl
mov
cmc
lret
rcrb
adc
inc
cs
int3
sbb
cli
ret
inc
dec
in
push
jo
int
mov
lock
sbb
cmp
xchg
aas
xchg
jo
incl
and
mov
sbb
xchg
pop
jno
icebp
fwait
lods
or
push
out
sbb
iret
push
inc
lods
xchg
subb
mov
sub
dec
pop
sahf
mov
or
mov
shl
into
adc
repz
mov
pop
xchg
pop
imul
sub
je
out
data16
test
std
inc
adc
add
jmp
jge
aas
roll
stc
xor
es
in
xor
mov
jg
push
lahf
in
push
cltd
pop
fnsave
push
aas
aam
jno
cmpsb
std
cmp
testb
jo
push
xchg
add
cmp
dec
mov
cmpb
xchg
xchg
dec
push
pop
clc
jecxz
sbb
cmp
cmpsl
mov
push
mov
in
xchg
and
in
dec
arpl
inc
fsubrs
sbb
mov
das
lds
ret
dec
and
repz
pop
sbbb
push
mov
fldt
mov
mov
inc
add
adc
je
xchg
jnp
cmpsb
imul
add
adc
cmp
sbb
mov
rolb
jbe
dec
neg
dec
pop
testb
jle
dec
inc
out
sub
loop
sbb
jge
jo
lcall
sbbb
gs
dec
pop
dec
mov
jge
aad
lret
fldcw
add
in
movsb
mov
sbb
test
adc
pop
dec
sbb
cmc
xor
sub
data16
rol
dec
inc
mov
mov
cmc
stc
cmpsb
fistpll
jmp
movl
pusha
fimull
icebp
mov
push
jl
pop
adc
jno
jno
leave
mov
dec
push
jne
and
and
in
push
push
nop
pushf
cli
mov
mov
lock
xor
sub
roll
or
or
scas
xor
dec
fs
cmpsl
jmp
and
inc
push
ret
sti
xchg
lods
jmp
fwait
xchg
popf
orb
cmpsl
pushf
push
pop
icebp
es
cld
scas
roll
jb
jns
ljmp
jae
andl
lcall
mov
imulb
sahf
jbe
sbb
pusha
mov
fidivs
jmp
add
mov
decl
xchg
ret
bound
ss
outsl
xchg
lret
sub
gs
pop
scas
mov
jg
adc
mov
test
dec
lock
stos
mov
cmp
xchg
daa
push
pop
clc
push
or
mov
loopne
aas
push
jle
cmpsl
nop
nop
mov
loopne
shll
sbb
mov
out
xor
arpl
mov
cmp
pop
add
adc
mov
arpl
jo
push
adc
mov
cwtl
stos
iret
popa
mov
sbb
out
sahf
shrl
ret
movsb
mov
dec
movsl
fbld
in
sbbb
xor
mov
push
mov
and
mov
push
sbb
jl
inc
fidivrs
fbld
pushf
inc
hlt
xchg
loopne
fsts
jne
das
inc
or
hlt
push
pusha
popf
inc
sbb
pusha
inc
push
lods
imul
sbb
jne
ss
cmp
in
shr
pop
xchg
rorb
fcompl
in
xchg
pushf
sub
mov
mov
popa
fcmove
mov
and
mov
push
adc
add
out
cmpxchg
in
or
stos
repnz
sbb
cmpsl
testl
jns
sbb
sbb
mov
or
pminub
cmp
inc
sbb
hlt
imul
lods
stos
decb
or
scas
call
cmp
push
push
loop
ljmp
pop
pop
xchg
cmp
int
xchg
scas
mov
mov
int3
mov
inc
jbe
xchg
les
scas
jmp
dec
push
incb
aam
and
lea
sub
movsl
cmc
ret
outsb
sub
jb
cmp
xchg
xor
sti
xchg
pop
fidivrl
push
mov
scas
xchg
sbb
int
fistps
xchg
mov
mov
dec
ret
fsubl
loop
xchg
clc
call
pop
add
js
and
jae
mov
and
jl
jmp
mov
lock
add
add
push
test
pop
push
adc
jmp
mov
rcl
inc
fadd
in
sbbl
sbb
cmp
adc
rcrb
push
out
add
add
mov
pop
mov
xchg
ss
sbb
mov
aaa
insl
sub
out
shrl
mov
sub
andps
cmp
fmuls
lea
xchg
jmp
inc
mov
adc
outsl
mov
out
je
std
cmp
jo
cmp
mov
fldenv
sub
inc
jge
xor
aas
mov
mov
pusha
scas
pop
inc
insl
xchg
ja
fldenv
or
lock
out
pop
out
int
decl
sub
bound
movsb
sbb
add
sar
jmp
sbbb
push
mov
pop
push
xorl
mov
leave
mov
les
jns
or
jbe
mov
dec
sbb
out
jp
nop
shrb
push
andl
fcmovne
xor
push
jnp
pop
lods
jbe
loopne
rcll
mov
rorl
cmp
stc
and
adc
rcrl
fwait
test
loopne
dec
stos
adc
fsubrl
daa
fsts
and
scas
sub
cmp
or
clc
push
fsubl
insl
adc
in
sbb
push
popf
pop
fidivs
in
into
inc
lret
xchg
push
mov
sbbl
and
push
je
repnz
arpl
negb
stos
mov
rorb
push
repnz
test
in
daa
xchg
popa
scas
pusha
fcmovb
xchg
add
push
dec
dec
cmpl
shr
cld
fs
mov
mov
sbb
out
pop
cli
bound
mov
cltd
mov
outsb
xor
pop
jae
lock
mov
dec
mov
pop
hlt
lods
dec
loope
xchg
aam
aas
pop
push
mov
notl
imul
gs
push
and
icebp
movsl
add
fsubs
stos
cli
push
jo
xchg
sub
sbb
cmpsb
push
or
xor
dec
insb
enter
dec
dec
pop
lret
xor
popf
stos
adc
sub
aad
and
sub
fisubs
jb
dec
test
shll
ficomps
mov
jmp
out
ret
test
add
and
mov
mov
ret
cmp
inc
push
lret
jns
add
call
push
jp
mov
les
sbb
jmp
pop
jnp
add
push
imul
or
jno
jl
dec
add
int
popa
cmpsl
sbbl
ds
or
jmp
adc
inc
aad
enter
mov
enter
adc
fisttpll
xor
jno
shl
or
imul
push
imul
pop
loope
mov
in
js
repz
movsl
mov
lea
fistl
test
jl
push
mov
pop
mov
jbe
push
das
mov
xchg
mov
jb
push
adc
inc
lret
mov
les
cs
les
cbtw
das
pop
mov
xchg
in
sub
scas
shlb
stos
inc
rorl
gs
loop
out
xchg
pop
dec
mov
xchg
or
sahf
push
ficomps
scas
test
pop
cmp
repnz
inc
fistl
add
fdivl
fnsave
and
mov
mov
enter
lods
dec
testl
loop
lret
mov
sub
xor
mov
adc
inc
pop
cmpsb
xor
adc
roll
push
mov
data16
rclb
popa
pop
add
adc
int
bound
int
pop
xor
and
xchg
sub
xor
fidivl
idivl
jnp
aad
dec
dec
add
pop
xor
test
int
fbstp
and
push
cli
andl
jl
push
scas
cmc
mov
mov
mov
mov
xchg
shl
popf
xchg
xor
mov
aas
aam
jo
test
mov
mov
pop
flds
xchg
inc
cs
sbb
push
hlt
outsb
xchg
mov
stc
ds
pmullw
sbb
aas
push
sti
int
mov
clc
cmpsl
jb
ret
jmp
adc
ficoms
pop
jl
cli
shrl
in
imull
jl
es
fldl
addr16
mov
repnz
dec
sahf
mov
cwtl
jecxz
cltd
lahf
mov
xor
popf
popa
xor
xor
movsl
mov
dec
mov
xor
mov
push
rcrl
lods
in
scas
mov
mov
inc
or
icebp
push
cmp
cmc
divl
lret
pop
push
notb
lods
call
in
inc
sahf
pusha
inc
shl
inc
sub
and
out
aaa
adc
jle
vpsubw
xchg
dec
pushf
jo
mov
aad
sahf
pop
lods
dec
xor
sahf
loope
cli
sbb
es
cmp
test
lcall
jns
inc
int
loop
mov
mov
sub
dec
gs
cmp
mov
test
fwait
mov
push
lahf
loopne
pop
mov
xor
mov
mov
mov
jmp
aaa
mov
shrl
imul
mov
in
sub
lcall
dec
rolb
sbb
xlat
aam
add
fsubl
mov
ret
call
or
nop
out
shl
jge
inc
div
je
addr16
pop
add
ljmp
stos
insb
lret
out
mov
in
push
sub
insl
push
push
jns
adc
adc
icebp
inc
insb
lcall
push
xchg
mov
mov
jp
sub
sbb
andl
clc
push
insb
adc
ja
mov
addr16
mov
mov
out
fsubp
pop
imul
sub
je
pushl
inc
xchg
sbb
add
pop
or
jno
xchg
les
inc
cmc
shll
test
or
lret
and
enter
stos
addr16
mov
imul
adc
push
cmp
add
mov
or
push
dec
cmpsl
leave
pop
add
xor
rcr
out
dec
jne
mov
add
push
mov
push
aad
cld
mov
pusha
dec
dec
and
loop
into
out
loop
adc
push
pop
cmp
adc
pop
in
xlat
bnd
mov
inc
aam
cmp
clc
hlt
jne
test
dec
rol
dec
mov
adc
and
jbe
das
pop
loopne
and
clc
jge
loope
xchg
push
out
sub
pop
movsl
outsb
lret
push
pop
jno
nop
repz
ficomps
arpl
sub
pop
inc
sahf
dec
and
pop
lock
push
out
inc
sub
ja
or
inc
sbb
mov
inc
das
cmpsb
ja
aas
out
fstps
mov
mov
xchg
inc
adc
adc
add
push
daa
mov
sub
ret
push
inc
shrb
or
dec
xchg
ljmp
jne
cmpsb
cmp
fisttps
push
mov
mov
jne
cwtl
lahf
ss
cmp
hlt
iret
loopne
sbbb
pop
sti
or
popa
dec
iret
lret
jg
stc
pusha
push
inc
shrb
movsl
aam
inc
pop
pop
dec
addr16
repz
cmp
data16
js
das
sub
or
inc
fs
dec
dec
ffree
xor
fdivs
orb
jo
nop
cmp
and
call
lods
cmp
iret
fsubrs
sbb
pop
ud2
es
pop
xchg
movsl
in
cmp
imul
push
pop
shlb
xbegin
xor
test
xchg
loop
sub
pop
mov
cmc
mov
push
jno
gs
filds
pop
repz
push
pushf
mov
jecxz
sub
out
xor
push
neg
add
xchg
mov
cmpsb
pushf
cmp
xchg
add
loope
inc
sbb
ror
addr16
hlt
int3
scas
loopne
lock
mov
cwtl
aad
add
movsl
jmp
mov
or
pop
sub
jle
mov
iret
jle
jl
cwtl
iret
lret
push
imul
ficomps
sub
sub
jbe
pop
das
push
lds
adc
or
fwait
xor
mov
mov
jecxz
jg
nop
in
mov
loop
jecxz
mov
fs
pop
sbb
inc
adc
in
insl
cld
xchg
sub
aaa
pop
push
sbb
das
call
pushw
xor
gs
push
imul
xchg
mov
in
out
add
cmc
std
cmp
iret
fwait
arpl
mov
sub
lahf
shll
mov
jle
adc
and
jnp
out
test
clc
mov
out
push
mov
adc
gs
mov
icebp
loop
mov
insl
and
or
es
mov
mov
jle
pop
lahf
movsb
loopne
stos
jecxz
mov
outsl
xor
out
add
mov
out
xor
inc
add
inc
ss
cmp
out
rol
nop
jge
xchg
mov
mov
js
scas
and
sbb
fidivs
xchg
inc
out
inc
das
mov
vmovups
ret
sbb
shrb
push
pop
pushf
cmpsb
notb
fsub
aas
test
fsubs
stc
adc
mov
pusha
mov
mov
icebp
add
stos
push
lds
pop
push
pop
andb
jo
push
xor
es
sbb
sub
dec
aam
in
addr16
aaa
mov
aas
cmpsb
rcl
imul
repnz
mov
shll
popa
mov
push
push
mov
dec
hlt
dec
hlt
addr16
pop
div
inc
loope
sub
mov
sbb
adcb
frstor
enter
or
cmp
dec
pop
pop
std
cmpsl
cltd
pop
sub
fnstenv
xor
xor
xchg
mov
idivb
stc
jbe
fmull
xchg
js
leave
imulb
cmpsb
mov
cmp
push
inc
mov
pop
sbb
sub
sub
ja
mov
popf
adc
mov
in
mov
int3
or
fdivrs
arpl
push
inc
mov
cwtl
or
pop
xor
jae
mov
js
test
imull
mov
adc
dec
fdivl
cld
mov
push
dec
cld
adc
rcrb
mov
cmp
adc
push
call
pusha
sub
inc
mov
ror
leave
pop
mov
sub
stos
mov
push
insl
es
dec
out
test
inc
sub
rcll
in
or
add
jmp
dec
push
sbb
jae
cmp
add
inc
iret
aam
cli
add
and
push
test
adc
inc
int
clc
push
jg
xor
out
test
mov
lea
jo
dec
mov
inc
cmp
sbb
sub
orl
fisttpl
outsl
inc
xchg
mov
fcoml
or
sti
ss
cltd
pop
push
or
sarb
xor
dec
ret
movsb
sub
mov
inc
cmp
sbb
outsb
out
rorl
js
sub
jns
mov
arpl
xor
sbb
sbb
xchg
fisubs
xor
add
mov
cmc
push
push
aad
push
jmp
fdivl
icebp
sbb
hlt
fucomip
cmp
imul
xor
add
pop
pushf
xchg
add
jmp
xorb
rcll
jae
xor
clc
mov
clc
push
imul
xchg
add
clc
xlat
sbb
inc
adc
mov
js
pop
and
and
rcr
xlat
mov
mov
adcb
fidivs
adc
dec
push
jl
sub
or
jne
push
xor
mov
push
addr16
xor
sbb
sahf
push
cwtl
dec
out
test
mov
jl
inc
push
mov
fs
aad
mov
and
lds
cmc
pop
sbb
xchg
mov
pop
cmp
cs
mov
jbe
in
push
rcrl
sbb
std
inc
sub
jle
mov
clc
cmpsl
inc
daa
ds
push
cmp
xor
je
cmp
ja
stc
mov
stos
jl
and
dec
pop
jne
push
lods
outsb
mov
push
add
jl
and
pusha
and
lcall
dec
data16
mov
fcmovbe
or
mov
xor
rcrb
xchg
imul
fbstp
out
dec
mov
lret
mov
in
lea
test
pop
dec
scas
in
adc
lahf
orl
add
rcr
xchg
or
push
dec
jmp
fsub
lcall
cmp
mov
mov
sbb
cli
nop
stos
xor
fisubs
lock
mov
pop
mov
repz
cmp
xchg
sub
test
and
data16
cld
testb
push
cmp
jg
scas
and
leave
and
hlt
fwait
loop
sbb
sub
xor
sbb
mov
mov
or
ljmp
sbb
stos
or
loop
or
bound
in
mov
lcall
xor
and
or
ljmp
xchg
push
hlt
adc
gs
fmulp
loope
popf
sbb
test
in
in
test
icebp
out
jne
push
xchg
mov
xor
out
movq
int3
push
out
daa
mov
mov
in
mov
sub
push
stc
fstps
sti
jns
jmp
aas
ljmp
push
inc
cs
or
mov
mov
push
repnz
ljmp
cs
sbb
push
ljmp
scas
push
pop
hlt
push
iret
fbstp
mov
dec
push
sahf
sub
and
pop
popf
mov
popa
pop
xor
dec
clc
lret
int3
mov
or
sub
das
inc
dec
xor
push
pop
pop
add
mov
mov
adc
mov
cmp
enter
or
jg
mov
lret
xchg
cmpsl
inc
dec
les
sbb
ja
lea
stc
out
or
out
out
dec
clc
push
and
xchg
mov
fidivrl
inc
push
jns
or
into
and
shr
test
clc
inc
hlt
mov
dec
jp
icebp
mov
push
jp
mov
pushf
cmpsb
es
inc
or
dec
push
mov
shr
xchg
or
adc
lock
nop
scas
orb
std
sbb
rcrl
dec
mov
pop
adc
loopne
xor
mov
adc
stos
test
xor
adc
popa
mov
xor
fistl
arpl
xor
fdivl
fwait
and
push
sbb
test
adc
dec
fwait
cmp
cmp
push
mov
roll
jl
subb
add
sub
xchg
xor
and
or
aas
cmpsb
dec
rolb
pop
shlb
mov
pop
insl
dec
out
sbb
in
sti
cmpsb
shr
xlat
pop
inc
and
in
pop
push
lods
arpl
sbb
in
mov
loopne
adc
xchg
inc
ds
loope
mov
lds
sbb
outsb
jbe
lret
ret
and
sti
push
add
pop
mov
push
mov
into
mov
mov
pop
in
mov
mov
fcos
pop
cmp
cmc
inc
sbb
cmp
or
sbb
jno
cmp
punpckhdq
xor
shrl
int
push
dec
lock
aaa
andl
push
inc
flds
push
add
pop
int
pop
faddl
xchg
gs
imul
xchg
imul
xchg
std
cltd
pushf
xchg
fpatan
jns
shrl
ja
out
jmp
xchg
pop
and
ds
fwait
repnz
xor
mov
decb
ljmp
inc
popf
scas
faddl
mov
std
jo
stos
clc
mov
outsb
xchg
mov
loopne
jne
dec
bound
sti
cltd
add
test
xchg
ljmp
push
jno
push
imul
bsf
out
daa
push
nop
adc
mov
lcall
cld
je
xchg
pop
rorl
out
jp
cmp
hlt
sbb
mov
mov
and
shrb
test
mov
lods
fsubrp
sub
dec
sub
loope
addr16
fdivl
mov
and
sub
mov
jl
enter
adc
loope
out
jne
adc
or
cmp
jns
mov
lahf
mov
xor
lea
xor
push
mov
call
xchg
pop
in
cmc
pop
out
cmc
cmp
rcl
cmp
lea
pop
stc
nop
lods
push
add
pusha
cmpl
inc
popa
int3
cltd
lahf
push
pop
push
fwait
mov
or
cmpsl
xchg
mov
mov
mov
inc
fdivl
mov
setns
sub
je
sbb
lret
lahf
repnz
outsl
andb
je
addr16
cmp
push
in
test
xchg
jb
xor
xchg
shll
jecxz
push
pop
mov
jl
dec
testl
fs
mov
testl
shrl
pop
cld
pop
stos
movsl
xor
push
cltd
cmp
mov
ficomps
loopne
packsswb
mov
aam
jae
pop
pop
and
mov
mov
filds
test
pushf
mov
push
pop
sub
jmp
cmpsb
push
mov
xor
mov
popf
push
shrb
in
sub
fsubrs
mov
pop
jb
or
addr16
das
cmp
mov
push
push
xor
idiv
stc
push
adc
mov
cli
aaa
insl
sub
push
dec
mov
jle
mov
mov
cwtl
jne
cmpsb
sahf
or
pop
and
ds
cmp
mov
loopne
push
fisubs
pop
add
icebp
fsubrl
sbb
mov
sub
out
cmpsl
loopne
fcomps
mov
sti
or
bnd
or
or
dec
scas
clc
cld
xorb
lcall
mov
push
lahf
jmp
xlat
jle
adcl
int
add
ljmp
inc
xor
pop
cld
sub
sub
push
sbb
fisubrs
popa
cmp
sti
jb
stos
add
jnp
inc
xor
out
inc
jge
faddl
pop
out
inc
fsubrs
rcrl
jge
dec
pop
xchg
or
fwait
jae
jle
mov
mov
dec
xchg
test
ja
fdivrs
jnp
enter
jns
sub
clc
iret
mov
ret
inc
or
sbb
jnp
int3
std
cltd
fs
mov
cmovbe
mov
fs
fcompl
xchg
rcll
repnz
lcall
iret
jg
imul
stos
cmp
cmpsl
lods
arpl
imul
mov
into
sbb
mov
insl
sub
mov
xor
in
add
and
add
sub
in
mov
dec
fcmovne
mov
in
test
xchg
adc
sahf
sbb
mov
iret
in
in
loop
push
dec
inc
fidivrl
push
outsb
dec
cwtl
ss
push
sub
in
xchg
adc
test
push
or
in
xchg
mov
xor
lahf
mov
inc
sbb
push
out
pushf
out
repz
inc
sub
push
out
test
lret
or
negb
inc
jp
iret
cwtl
adc
pop
testl
movsl
sbb
pop
adc
or
jge
shl
popa
lods
hlt
fwait
scas
and
pop
repz
pop
mov
xchg
loopne
adc
imul
loope
or
js
jle
cmc
loopne
mov
sbb
push
movsb
mov
push
stc
in
dec
dec
and
adc
insl
aad
dec
lahf
addb
cmp
xchg
or
xchg
xor
lahf
stos
or
mov
cmp
xchg
mov
lods
inc
adc
mov
test
add
cmp
imul
pop
icebp
jno
xor
pop
cmp
mov
push
xchg
sub
jnp
mov
test
mov
mov
xchg
fcmovne
push
push
out
add
mov
xchg
push
or
repnz
in
mov
pusha
push
adc
jae
lds
popf
lods
lret
inc
shrl
sbbl
cld
enter
leave
jmp
lcall
cmp
adc
lods
rolb
mov
push
rcrb
pop
in
xchg
dec
jb
testb
mov
cmp
shrl
add
shrl
cs
outsb
sbb
out
add
jb
das
mov
or
inc
or
sub
mov
jb
pop
hlt
negb
jl
jb
popa
out
out
push
add
sti
add
lret
xchg
add
xor
cmp
hlt
mov
or
add
mov
mov
sub
sbb
dec
popf
cld
stc
sti
lock
pop
js
dec
shrl
clc
mov
jne
add
add
jle
xchg
pop
push
inc
mov
inc
xor
test
fcom
popa
fdivrs
outsb
scas
int
scas
popa
enter
mov
and
mov
insl
jge
js
jg
mov
xchg
mov
insl
imul
scas
inc
jmp
into
aad
or
jnp
enter
mov
lcall
dec
bound
or
pop
sub
mov
push
sub
stos
pushf
scas
sub
ljmp
push
dec
adc
xor
inc
add
or
dec
loopne
jae
loope
push
out
loop
lcall
or
sbbb
fstpl
rclb
adcb
js
mov
dec
mov
cmp
lods
lods
push
aas
cs
mov
inc
mov
leave
int
lds
xor
xor
rorb
dec
mov
movsb
xchg
imul
stos
std
push
aaa
and
ds
sbb
xlat
in
fmul
rol
jp
ds
test
push
nop
pop
xchg
pop
inc
push
sbb
xor
sub
xor
aas
cmp
pop
mov
loop
pop
shrl
cld
sbb
stc
xchg
stos
cltd
out
ds
ja
adc
test
sub
mov
or
call
or
xor
test
lret
shrb
add
je
out
sbb
inc
int
loop
mov
xchg
nop
repz
fdiv
pop
and
pop
push
and
lret
lds
imul
pop
cmp
jae
fmuls
jecxz
cmp
mov
fwait
push
inc
xchg
shlb
rdpmc
inc
and
or
inc
ds
sahf
daa
push
sbb
jnp
dec
mov
lcall
sbb
mov
cmpsb
leave
in
fwait
push
fwait
gs
lret
test
mov
pushf
xor
lcall
xor
mov
xor
ds
inc
lock
ss
adc
cmp
js
inc
out
dec
xchg
outsb
mov
jmp
mov
sbb
mov
push
jle
sbb
sbb
jmp
testl
test
xchg
rclb
popf
ljmp
cmpsb
or
sbbb
stos
loopne
adc
inc
sar
adcb
push
dec
dec
fnstenv
xchg
movsl
in
fwait
insb
sub
jae
dec
mov
jg
mov
or
inc
push
jp
inc
mov
lea
mov
loop
pushf
mov
mov
popf
mov
icebp
sbb
or
pop
repz
cmpsl
out
fs
push
jno
mov
in
mov
ss
xchg
loopne
cltd
sbb
scas
inc
push
sbb
jae
repnz
or
nop
xor
testb
in
pop
dec
sbb
orl
ret
xchg
cld
adcb
pop
not
jg
add
add
sarb
call
scas
call
into
movsl
sahf
clc
mov
mov
aas
cld
or
mov
cwtl
mov
sahf
arpl
and
cltd
std
cmpsl
pushf
andb
cli
scas
icebp
test
jns
fstpt
add
sahf
or
iret
sbb
les
and
pop
lds
es
mov
jg
push
rol
ret
int3
outsb
sub
out
cmc
mov
int
dec
mov
int
insb
cmp
sub
mov
icebp
aad
pop
cmp
inc
sti
sbb
stc
xor
xchg
js
mov
xchg
adc
sub
or
pop
jo,pt
push
and
pop
lock
cld
push
adcb
loopne
adc
mov
mov
push
icebp
in
rol
inc
dec
inc
pop
jl
into
in
sub
std
aad
mov
mull
jne
movaps
shl
adc
and
rclb
push
imul
xchg
sbbb
push
inc
scas
mov
inc
pop
push
aas
mov
xor
fucomi
pusha
sbb
or
das
addr16
adc
inc
push
clc
or
add
sar
lods
pop
or
add
sbb
ds
push
lods
dec
loop
push
pop
cltd
xlat
mov
mov
enter
add
fidivrl
push
ds
cmp
lock
mov
sbb
in
cmp
xchg
iret
xchg
int3
and
push
mov
jl
les
or
adc
push
mov
mov
cwtl
in
mov
cwtl
mov
and
pop
cmp
testb
loope
scas
dec
sub
cmp
imul
xchg
sbb
mov
xor
mov
inc
and
test
mov
or
or
xchg
add
test
int
mov
cli
imul
mov
xor
out
loop
loopne
sub
sub
adc
mov
arpl
inc
stos
xchg
out
pop
and
std
xor
add
xor
mov
push
adc
or
out
pop
bound
mov
fsubr
shrl
std
push
mov
shl
add
fs
jge
xor
outsl
and
es
mov
aaa
xchg
test
sti
jno
sub
es
push
xchg
push
mov
push
lods
fsubr
xor
mov
stos
cmp
sbb
jae
sub
rclb
xchg
cmpsl
inc
test
pop
add
sub
imul
ret
push
stc
lcall
shrl
lahf
lods
mov
mov
jge
aas
test
lahf
and
jecxz
out
int3
es
jbe
inc
push
push
aaa
jle
and
iret
mov
lods
les
push
jg
and
stc
xchg
stos
and
das
cmp
in
pop
mov
sbb
jle
mov
sub
shlb
fs
mov
call
psraw
es
dec
jle
aaa
cld
cmpsl
ds
sbb
adc
cli
stos
std
xor
das
int
rclb
jmp
les
je
push
sbb
les
stc
add
call
arpl
aaa
pop
or
sbb
arpl
ffree
jno
rolb
fidivs
lods
gs
bound
mov
test
fsubl
mov
adc
add
inc
or
cld
aaa
push
sub
fmul
lret
lds
sbb
loope
pop
mov
stos
addr16
icebp
pop
cmp
push
popa
in
es
add
jmp
pop
lret
cld
xchg
ret
or
roll
push
sbb
das
loope
fadds
arpl
movsb
les
inc
dec
pop
push
xchg
or
push
lods
inc
andl
inc
incl
test
test
loop
inc
mov
shlb
fcmovnbe
pop
dec
sahf
mov
jbe
xchg
push
jne
leave
cmp
cli
jle
mov
loope
je
push
test
sub
sub
dec
scas
inc
fsubs
test
aad
mov
pop
ret
pop
loope
ds
inc
jno
scas
aaa
push
xchg
enter
ja
fucom
out
pop
push
cmpsl
inc
add
jno
jp
ljmp
mov
and
inc
mov
lcall
mov
push
outsb
xor
popf
insb
clc
popf
iret
cmp
and
notl
push
mov
insl
jmp
mov
pusha
mov
xchg
es
into
mov
imul
cmp
aas
xor
add
fnsetpm(287
inc
test
scas
mov
xor
into
outsl
mov
adc
iret
idivb
loopne
out
sbb
dec
ljmp
lret
rorl
xchg
sub
in
ds
lock
inc
xor
icebp
mov
mov
subl
arpl
xor
mov
fimull
movsl
imul
and
dec
cmpsb
mov
pop
adc
nop
mov
sti
mov
popa
jp
inc
popf
cmpsb
xchg
fwait
push
sbbl
sub
lods
or
fnstenv
and
mov
sbb
push
push
mov
std
loop
xchg
mul
dec
mov
movsb
mov
dec
pop
test
js
add
mov
loop
jmp
mov
ret
cmp
ja
push
pop
outsl
faddl
popa
add
inc
fdivrs
jnp
jb
pop
testb
jge
lcall
cmc
jmp
and
loop
jl
stos
fiaddl
or
mov
neg
pop
fdivl
cld
mov
shrl
test
cmp
cmp
add
lds
sub
xor
jecxz
sbb
sbb
and
pop
int3
mov
divb
nop
cmp
cmp
push
adc
bound
dec
hlt
or
movsl
cli
lcall
lods
fwait
inc
sahf
jmp
pop
cltd
lods
testl
mov
shl
sub
lret
std
pop
xchg
loop
pop
jmp
sub
repz
and
and
xchg
xor
les
in
add
jg
int
xlat
mov
imul
dec
dec
dec
xchg
aas
push
fwait
pop
daa
inc
xor
das
jp
mov
mov
mov
xor
ds
inc
jmp
mov
mov
fsubr
mov
and
fs
call
and
jno
in
and
das
test
fs
int
fsubrs
iret
cwtl
stos
cld
mov
ljmp
xchg
icebp
out
and
sub
xchg
pop
out
jnp
negb
xor
scas
ret
jle
and
pusha
cmpb
jnp
lea
std
xchg
sbb
and
sarb
icebp
sarl
xor
or
mov
inc
pusha
sbb
popa
or
fbstp
mov
xor
imul
pop
jmp
xchg
ret
adc
mulb
jmp
sub
test
stos
ss
movl
mov
and
pusha
lods
jns
lods
shrb
lret
jnp
ror
cmc
inc
insl
mov
xor
into
ret
fs
jns
adcl
or
jle
orl
pop
and
mov
pusha
negl
pop
mov
in
xchg
cs
das
sub
loope
mov
test
mov
imul
nop
dec
mov
loop
jne
aad
stos
jbe
dec
push
dec
mov
add
xor
out
lahf
pop
loopne
ss
xor
pop
adc
ja
fldenv
jbe
mov
jmp
pop
pop
rcl
pop
popa
cs
xor
xchg
inc
vzeroall
mov
pop
icebp
xor
ja
sbbl
sub
dec
pop
out
cmp
cmpsl
add
jmp
xor
enter
sbbl
movsb
popa
clc
sbb
cwtl
stos
shl
loop
pop
mov
add
inc
test
inc
jmp
add
data16
mov
push
out
mov
outsb
cmp
mov
fldt
dec
fsts
fsubs
hlt
and
lret
out
out
adc
inc
adc
dec
or
jno
idivb
movntq
out
xchg
xor
test
cmp
jecxz
repnz
outsb
xchg
sbb
jno
jle
stos
cmpl
xor
popf
inc
cmp
adc
and
fstp
add
pop
frstpm(287
xchg
sbb
in
mov
test
jg
filds
sbb
in
test
inc
mov
cwtl
mov
leave
pop
stc
mov
inc
and
mov
xchg
sbb
in
aaa
shlb
icebp
jl
subb
jmp
std
pop
loopne
dec
pop
mov
cmp
mov
push
mov
fsubr
jg
leave
aam
and
ret
iret
mov
ds
inc
pop
push
in
imul
or
inc
jnp
cmc
inc
push
mov
pop
test
inc
xchg
test
xor
add
mov
pop
mov
cmp
call
dec
cmpsl
pop
or
pop
add
loop
rol
jo
dec
dec
int3
mov
in
fnstenv
aaa
jg
inc
loopne
mov
inc
mov
xchg
scas
mov
mov
iret
inc
sahf
jne
lods
dec
inc
cmp
mov
mov
or
inc
out
xor
jmp
adcb
and
bound
lock
dec
sub
add
fmul
lret
shrb
push
sti
adcb
mov
dec
pop
xchg
loope
push
pushf
fisubs
dec
pop
pop
stos
jmp
mov
and
cwtl
mov
pop
push
insb
movl
pusha
fisubrs
xorl
aam
adc
sub
or
ja
jp
ds
insb
jns
mov
add
div
hlt
xor
inc
data16
jb
inc
sub
mov
hlt
leave
filds
sub
icebp
and
enter
push
or
or
jp
mov
rorb
out
jnp
or
push
xchg
orb
jge
lods
out
mov
orb
xorb
mov
xchg
mov
xor
ja
insb
outsl
jns
das
subl
mov
mov
ret
repz
jp
sbb
cwtl
cs
pop
mov
dec
dec
outsl
sub
sahf
xor
jmp
mov
adc
sbb
daa
shlb
jmp
fdivrs
or
jo
fnstcw
stc
and
int
shrl
int3
pop
iret
mov
aam
add
into
cmp
imul
popf
push
repnz
aaa
pusha
jecxz
test
mov
jmp
iret
fildl
fcomps
and
xor
pop
sarb
dec
cmp
cmc
inc
sub
cmc
aas
mov
gs
cmp
daa
xchg
outsl
icebp
lock
lods
adc
xchg
outsl
imul
mov
stos
mov
xchg
mov
jno
mov
loope
add
cmp
lahf
stos
push
jo
or
inc
or
mov
std
nop
push
sub
pushaw
loope
sub
in
mov
sbb
dec
lods
inc
cmp
jno
push
mov
sbb
test
lret
sub
push
xor
xor
lret
jle
jno
loope
sbb
dec
outsl
jle
push
insl
mov
dec
lea
fidivrs
aam
xlat
or
jge
mov
mov
mov
iret
xor
icebp
cmpsb
addr16
inc
jno
pop
imul
or
and
cmp
lods
dec
insb
or
call
shlb
fcoms
push
jbe
jbe
ss
icebp
shrb
stc
in
ja
mov
push
cmp
xchg
stos
in
shrl
fiaddl
xchg
adc
cwtl
or
adc
xchg
lods
movsl
inc
or
pop
cmp
fisttps
adc
cltd
test
hlt
jmp
out
xchg
xchg
scas
push
push
jp
in
lret
push
stos
out
lret
std
or
mov
fcmovnb
pop
loop
scas
push
data16
push
xor
in
lret
es
jb
push
pop
mov
mov
push
call
call
mov
jo
dec
dec
cmp
xchg
aas
les
fdivl
lret
ret
out
cli
int
mov
pop
scas
mov
cltd
mov
adc
sahf
pusha
stos
lret
lret
movl
jne
pop
mov
cld
test
pop
jbe
adc
pop
adc
fisubrs
jmp
or
mov
shrb
loop,pn
js
lds
jp
ds
fiaddl
popf
xor
stos
in
arpl
rolb
dec
add
jnp
push
fs
pop
mov
fistps
data16
inc
mov
mov
dec
divl
out
pop
push
fwait
add
scas
jle
mov
call
orl
add
ret
outsl
and
mov
inc
sbbl
jb
cs
jge
sbb
les
cmp
mull
repz
leave
sbb
or
repnz
lahf
fsts
jns
inc
stos
es
push
int3
int
jmp
xchg
scas
pop
xor
repz
out
jb
xchg
out
adc
in
push
jmp
sti
dec
push
fisttps
aad
pop
insl
mov
add
cmp
xchg
aaa
pusha
jp
ja
into
sub
nop
mov
jp
cmpsb
imul
adc
xchg
inc
cmp
fidivl
pop
xor
inc
mov
sarl
lahf
add
dec
pop
jp
mov
icebp
cmp
and
push
inc
push
fs
gs
das
inc
mov
das
in
mov
nop
xchg
hlt
lea
sbb
bound
jae
insl
pop
repz
mov
jp
sti
inc
out
ja
pusha
xor
mov
push
test
addb
inc
inc
ror
bound
mov
jecxz
mov
pop
fsubrs
add
xor
clc
outsb
and
pushl
movsb
sub
ja
jg
sti
dec
in
sbbb
mov
in
lds
test
mov
popa
gs
cmpsb
push
icebp
push
jno
imul
inc
test
adc
or
pop
cmp
pop
and
sub
xchg
cltd
xor
jle
sbb
jmp
inc
fldcw
cmp
cmpsl
lds
mov
dec
int
repz
jp
adc
ljmp
cmc
jge
daa
jmp
adc
es
in
push
and
cmp
or
outsl
or
sub
andb
cmpsl
std
jb
int3
arpl
mov
loope
bound
test
cmpsl
fcomps
cmc
mov
ds
mov
or
jg
js
imull
cmc
pop
test
mov
stos
push
inc
fildl
xor
call
ret
xchg
jg
or
push
inc
push
ss
ja
icebp
lds
dec
mov
stos
push
nop
adc
nop
loope
jno
arpl
mov
mov
jmp
leave
pop
sarl
jmp
mov
sub
jne
test
adc
bound
add
sub
jl
mov
or
inc
pop
mov
or
outsb
adc
mov
lahf
ds
call
loope
mov
insl
enter
pop
aaa
push
jno
cmp
xchg
xlat
outsb
cltd
jb
outsb
jno
sub
pop
in
aam
lock
pop
insb
push
adc
js
push
ja
mov
push
insl
int3
loopne
stos
lods
out
xchg
sub
iret
lds
iret
sub
icebp
mov
add
add
adc
pop
mov
sub
mov
divl
imul
cli
mov
out
lods
mov
outsl
add
cli
rcrl
ss
cmp
pop
test
dec
movsb
push
rclb
out
std
xchg
dec
loopne
cmp
and
push
inc
pop
mov
test
ja
push
aam
dec
cwtl
repnz
cmp
add
int3
sub
pop
in
adc
sbb
adc
negb
jne
lds
pop
inc
inc
aam
mov
lahf
mov
mov
fcompl
xor
insb
sarl
and
adc
stos
pop
les
in
pop
insl
call
or
cmp
xor
sub
subl
aad
out
sarb
lret
cmpsb
and
xchg
cmp
test
add
pop
jb
cmp
and
jge
mov
pop
jae
sub
pop
xor
es
sbb
nop
insb
aaa
mov
fwait
out
cmp
adc
sub
dec
in
mov
mov
imul
stos
decl
roll
jmp
repnz
popf
xor
mov
dec
adc
aad
dec
xor
mov
xchg
add
sub
fs
stc
cmpb
roll
jge
xor
jge
mov
sahf
lods
jg
test
sbb
inc
xchg
xlat
pusha
mov
push
gs
inc
insl
sar
call
sbb
nop
cmp
ja
out
es
mov
pop
out
in
psubusb
add
daa
cmp
stos
daa
subl
fwait
and
push
cwtl
or
movsb
test
adc
cmp
jmp
nop
daa
cmc
ficoml
push
test
int3
xchg
testb
fstl
fld
scas
sbb
mov
sti
int3
shrl
xchg
adcb
call
jge
xchg
adc
xor
scas
mov
and
clc
and
dec
pop
cmc
xchg
int3
arpl
ljmp
sbb
push
mov
push
xchg
pop
ds
mov
lds
je
sbb
xor
iret
mov
mov
jl
dec
xchg
jns
outsl
xchg
sub
sbb
sbb
sub
lahf
mov
out
sbbl
mov
popf
ret
shll
jmp
or
lret
in
xchg
add
cmc
mov
mov
in
sub
sub
xchg
xor
dec
insl
push
lods
push
call
xor
cli
sbb
mov
dec
inc
sub
pop
dec
cmc
dec
std
push
or
jle
dec
pop
aam
dec
loop
loop
sbb
sub
out
dec
jecxz
lock
mov
dec
test
inc
xchg
fwait
mov
data16
cwtl
sub
cmpsl
fisubl
stos
add
mov
int3
and
cmpsl
ds
imul
in
add
stos
mov
loopne
dec
pop
mov
sbb
iret
xchg
inc
xchg
imul
lret
sbb
clc
sbb
rcrl
outsl
imul
mov
scas
ja
pop
xchg
es
fdivrl
loop
cmc
dec
mov
xchg
mov
dec
pop
cmp
dec
jecxz
add
jge
nop
and
stos
push
cmpsl
mov
fbstp
inc
xchg
mov
call
pushf
js
and
cmp
inc
mov
mov
push
add
add
or
sbb
fnsave
adc
aaa
xchg
mov
or
lea
sub
jecxz
das
lea
lods
jae
mov
gs
jecxz
rol
fsubl
cmpsl
adc
adc
push
xor
std
int3
lods
jp
mov
sbb
or
movsb
mov
hlt
jns
loop
pop
nop
repnz
adc
movsl
cmp
ds
in
pusha
das
dec
and
xchg
mov
inc
je
cmp
bound
inc
push
or
mov
psubd
fidivrs
sub
inc
dec
popa
cld
ja
in
inc
sbb
push
mov
sbb
aas
and
mov
jmp
xchg
pop
test
aad
cmp
nop
mov
pop
mov
mov
aaa
sbb
sbb
push
add
inc
insl
into
sub
cmpsb
xchg
ss
cmpsl
lret
ret
rclb
sbb
pop
mov
dec
out
arpl
jnp
sbb
jl
fdivs
or
mov
inc
push
inc
lcall
dec
fimull
mov
cltd
mov
clc
sub
nop
repz
mov
inc
add
cmp
and
icebp
add
popa
je
mov
pop
cmp
add
dec
adc
enter
out
push
dec
adc
xchg
xor
xchg
push
mov
bound
jg
mov
aad
pop
popf
test
pop
test
pop
xor
in
cmp
stos
inc
leave
lcall
mov
test
test
adc
mov
scas
adcl
fidivs
mov
cmp
mov
mov
adc
cmp
outsb
outsl
pop
and
dec
jl
or
xor
test
popa
imull
mov
std
mov
or
sti
push
in
jmp
xchg
insl
in
outsb
movsb
aaa
dec
dec
fldl
insb
mov
sub
iret
mov
add
mov
in
sbb
inc
in
mov
sub
jb
mov
xorb
sbb
jle
jg
mov
mov
cmpsb
cmp
and
inc
push
dec
or
add
push
jae
adc
add
sub
das
pop
mov
and
mov
sub
leave
inc
out
sbb
pop
rcll
xor
jnp
push
outsl
mov
add
mov
leave
call
or
lods
or
int
loop
std
lcall
sub
lds
lods
dec
pop
cs
hlt
mov
push
adc
mov
push
lret
dec
and
test
imul
xchg
dec
test
call
mov
xchg
shr
sub
mov
inc
scas
mov
sbb
jns
test
add
test
mov
mov
dec
mov
jns
inc
or
cs
filds
xor
popa
ja
insl
rcrb
test
xchg
jo
ds
xchg
into
popa
int
inc
jmp
sahf
dec
jo
insl
mov
hlt
push
je
xor
fsubrp
push
in
lods
xchg
ficoml
aad
push
dec
mov
fwait
mov
cmp
aam
or
jb
jmp
cmpsb
jne
push
push
mov
push
sub
insb
insb
movl
or
std
pushf
dec
and
out
mov
lret
jns
add
sbb
pop
stc
call
dec
add
xlat
ret
notb
dec
push
frstor
mov
shlb
and
sbb
das
inc
insl
xchg
pop
mov
add
xchg
lds
pop
bound
sarl
stos
loop
sub
xor
div
and
ret
ficoml
push
clc
mov
out
lds
mov
in
dec
jbe
pop
fcomps
adc
mov
xor
mov
adc
imul
cmc
test
xlat
repz
xchg
sbbl
clc
push
lahf
mov
jl
xchg
pop
mov
push
mov
xorl
mov
xor
popf
pushf
call
adc
shlb
or
adc
in
ds
jle
inc
sbb
test
mov
xlat
adc
add
cmp
stos
mov
out
addl
in
loopne
pop
adc
loopne
mov
and
iret
mov
pusha
negl
cli
add
cld
dec
stos
in
out
ja
cmp
out
inc
dec
cltd
adc
dec
mov
cmp
imul
insb
fdivs
stos
shrb
and
dec
call
pop
insb
ja
daa
test
adc
add
fs
jne
jecxz
lock
add
mov
dec
cwtl
repnz
mov
add
adc
push
into
int
xor
sub
mov
mov
xchg
data16
ret
cmpsb
clc
and
cmpsl
and
aam
or
or
data16
jmp
test
mov
or
mov
mov
xchg
pop
dec
cltd
cmp
mov
cmp
decl
outsl
add
cmp
fsubl
ja
add
popf
ljmpw
outsl
sbb
test
push
push
imul
outsl
xor
subl
xchg
lea
dec
psrlq
sti
stos
pop
lods
inc
aad
jnp
insb
test
into
call
es
sub
cmpl
scas
mov
shlb
or
daa
cmpsb
inc
popa
mov
lock
pusha
lret
sbb
hlt
cmp
mov
jge
mov
xor
inc
push
fnsave
pop
xor
int
mov
push
or
sbb
and
jle
imul
fwait
inc
push
mov
mov
cmp
sub
lea
leave
push
lret
and
inc
inc
out
and
sub
aaa
push
stos
add
mov
xchg
out
jmp
jmp
or
sub
jmp
into
push
adc
jnp
repnz
mull
jle
das
push
sub
int
jl
pop
icebp
push
cmp
div
cmc
shlb
mov
inc
pop
cld
shll
sbb
mov
pop
mov
iret
cmc
push
xor
mov
test
sub
inc
rolb
lret
das
leave
ss
lods
ret
sub
cmp
call
ds
cmp
movsl
mov
insl
jge
jle
lcall
adc
push
decl
xor
pop
mov
js
jecxz
cmp
sbbb
pusha
aam
aaa
mov
jo
cs
push
jp
xor
das
mov
out
jge
shrb
xchg
fcompl
xor
pop
test
pop
daa
sub
push
sahf
and
pop
into
push
xlat
mov
dec
cmpsb
push
add
mov
popf
insb
sbbl
leave
dec
popf
sub
loop
scas
in
adc
lods
insl
jns
cmp
insb
lcall
lods
lods
inc
clc
pop
data16
and
cmpsb
cmp
dec
mov
pop
lock
lsl
push
push
pop
aad
jle
arpl
jno
aas
pushf
xor
jle
sub
int3
push
insb
jns
mov
add
add
ds
inc
arpl
aad
test
jl
test
out
push
lods
lds
fldcw
cli
scas
add
or
and
jmp
repz
xchg
and
cld
add
xchg
loopne
push
inc
movsl
in
loope
jecxz
hlt
mov
lock
movl
int3
and
pop
cltd
icebp
psubw
fisubrl
xor
jecxz
and
mov
cmpsb
xor
movsb
xor
jae
cmpb
xchg
xor
mov
test
mov
jl
cwtl
add
insl
ss
pushf
inc
cs
inc
and
push
idiv
arpl
adc
fidivs
and
cld
arpl
stos
dec
cld
insl
enter
pop
jae
pop
aaa
ja
insb
scas
and
push
std
inc
or
aad
adc
aaa
repz
daa
mov
out
push
xorb
rorl
inc
add
xlat
pop
mov
add
in
stc
iret
push
in
push
jo
lret
add
mov
loop
mov
or
jge
shlb
pop
jnp
sub
pop
push
dec
int3
into
sub
push
pop
test
out
jp
pop
cwtl
mov
lods
inc
xlat
mov
mov
push
insl
fistps
pushf
orl
movsb
sbb
rorl
bound
push
call
movsl
or
ja
mov
and
and
das
mov
aas
mov
pop
xchg
mov
loop
or
mov
std
xor
pop
out
adc
cwtl
or
xlat
data16
pop
int3
xchg
addr16
test
sbbb
pop
cmp
pushf
pop
dec
loopne
imull
mov
test
inc
inc
xchg
sbb
aam
sub
xchg
addr16
ret
inc
ljmp
mov
popa
mov
out
dec
adc
sbb
dec
xor
pop
aas
mov
sbb
adc
xchg
inc
out
stc
out
sub
or
xor
mov
xchg
mov
rcrl
insb
mov
pop
jecxz
subb
hlt
lahf
stos
cmp
dec
xor
je
jbe
xchg
dec
nopl
dec
xor
xor
idivb
andb
sbb
and
lcall
popa
cmc
lcall
lret
or
hlt
lret
mov
pop
mov
ds
leave
pusha
jbe
ret
push
jo
xchg
and
stos
mov
pusha
adc
scas
xchg
mov
push
popa
icebp
mov
xchg
sub
dec
dec
cmc
inc
push
aaa
mov
js
jl
mov
std
or
jl
inc
out
inc
clc
lcall
dec
jg
notb
jb
and
ret
adc
int3
pop
xor
fnstenv
pop
mov
and
shlb
pushl
lcall
xchg
shrb
daa
gs
mov
mov
psrlq
xor
insl
or
push
test
sub
das
stos
sub
inc
xor
sti
outsb
sub
fcoml
jl
sbb
mov
mov
int
mov
adc
insl
cmp
int3
pop
jge
mov
outsb
test
adc
pop
cwtl
outsl
xor
pop
orb
in
imul
data16
mov
pop
lea
push
int3
adc
or
imul
add
stos
xchg
in
ret
adc
push
iret
faddp
orl
loop
cmpsl
adc
loopne
sbb
mov
gs
lret
fbstp
repnz
mov
mov
mov
sbb
mov
fs
push
xor
mov
sub
repz
xor
rcll
dec
jecxz
push
adc
sbbl
mov
pop
push
arpl
mov
adc
mov
mov
gs
push
cld
loop
sbb
add
std
out
mov
int
dec
mov
sbb
cld
xchg
pop
loopne
inc
fstl
fs
jge
shlb
sub
lret
cld
xchg
lret
pop
add
test
mov
lahf
mov
hlt
std
jb
fsub
rcrl
sub
leave
dec
dec
inc
push
jecxz
daa
cmp
fs
mov
int3
movsl
int3
in
test
in
xor
lcall
sub
andb
add
cmp
xor
xor
shll
pusha
adc
fwait
je
inc
mov
jge
dec
dec
xchg
jbe
stos
xorl
pop
and
mov
outsb
fildl
outsb
jb
push
mov
data16
call
sbb
test
xor
lods
cmc
dec
pop
pushf
jne
hlt
in
xor
add
sbb
rorl
aam
push
jmp
fildll
inc
aad
shlb
pop
loope
cmp
gs
aam
and
sub
cmc
aam
pop
cli
push
or
andl
mov
cmp
xchg
adc
dec
ret
mov
mov
dec
xor
jb
cld
cld
inc
mov
lock
fildll
push
stos
add
cmpsb
sbb
jg
mov
ret
jecxz
popa
lods
or
mov
lcall
lea
xchg
sub
imul
out
iret
inc
add
addb
test
mov
add
pop
or
addr16
add
inc
stc
pop
insb
repz
dec
jmp
pop
pop
addr16
push
inc
out
lods
xchg
fisubrl
dec
int3
xor
fcompl
pop
jmp
ficompl
sbb
popf
inc
cmp
loope
jle
mov
push
movsl
and
mov
dec
jp
inc
ss
sub
xor
jno
repnz
repnz
jns
ret
adc
xor
lock
lahf
jge
pop
pop
cmp
scas
jmp
loope
mov
sub
push
pop
dec
xchg
cld
cmc
cmp
pop
cmpsb
in
mov
lcall
movsb
jno
push
sub
out
xlat
xor
sub
scas
jp
pop
jno
rcrb
or
addr16
aas
push
add
add
je
or
mov
or
mov
dec
adc
imul
ljmp
mov
jecxz
dec
icebp
movsl
dec
sbb
loope
or
in
ljmp
adc
out
mov
rcll
lods
mov
hlt
adc
mov
test
dec
in
push
mov
mov
xchg
cs
cmp
mov
pop
or
cmp
insl
inc
cmp
fcomps
aaa
nop
stos
push
jp
js
daa
or
or
repnz
das
mov
loopne
into
inc
pop
mov
and
cmp
mov
push
jmp
add
mov
ficoml
stos
xchg
int
ret
mov
lret
xorl
xlat
pop
mov
push
jns
daa
cmovnp
mov
or
cmp
fwait
les
xor
dec
movsl
lds
sub
inc
outsl
sbb
outsl
xchg
mov
movsb
clc
push
test
into
insl
xchg
cmpsl
mov
pop
cwtl
sub
pop
sbb
sub
mov
push
adc
jmp
pop
push
sub
inc
repnz
mov
jmp
pop
xlat
lahf
cmp
lock
daa
cmp
sub
inc
pushf
inc
add
int
test
xchg
fdivrs
fldenv
mov
jmp
lds
test
cmc
adc
cld
jle
mov
push
in
add
outsl
cmp
pop
loope
in
mov
push
push
stos
jmp
add
sahf
pusha
mov
jae
lock
push
jbe
inc
cmc
mov
and
out
fs
aaa
mov
out
push
push
shr
iret
pop
in
mov
mov
lods
dec
stos
addl
mov
test
adc
insl
jg
lahf
out
sbb
and
mov
stc
jmp
lds
push
push
push
mov
das
ljmp
cld
hlt
imul
push
mov
jle
shr
xor
pop
imul
add
push
call
inc
arpl
mov
fwait
or
xchg
mull
fdiv
incl
ss
roll
mov
push
add
xchg
mov
aam
add
pop
bnd
xlat
xchg
pop
loope
int3
mov
pop
push
ljmp
jmp
jp
repz
mull
sbb
mov
push
dec
mov
xchg
adc
or
xor
fiadds
dec
loope
mov
ds
fs
int
jg
ss
mov
hlt
mov
xchg
mov
xchg
nop
daa
ret
cmp
out
xchg
in
mov
js
ljmp
xchg
push
in
xchg
and
mov
hlt
ds
sbb
push
lods
fdivrp
xchg
push
cmp
out
xchg
std
enter
xor
imul
in
addb
sarl
sbb
mov
pushf
lods
inc
cmpsb
pop
popf
repnz
push
adc
inc
or
test
push
xlat
pop
sbb
fninit
cmp
int
fimull
sbbl
jle
mov
arpl
sbb
sub
je
ljmp
imul
insb
sbb
mov
shl
arpl
ret
jge
cmp
jb
mov
jne
stos
mov
addl
mov
ret
fsubr
xor
pop
sub
lds
xchg
dec
mov
testl
jne
sub
test
mov
rorb
sub
mov
test
sbb
andb
sub
popf
pop
lods
out
das
add
push
and
dec
xorb
jbe
mov
loope
push
sarl
inc
scas
push
xchg
test
lret
out
lcall
xor
xchg
mov
out
aaa
mov
jl
neg
pop
movsb
jmp
pop
sbb
ds
insb
mov
lret
jbe
mov
rorb
lcall
cwtl
pop
in
cwtl
bound
sub
xor
repz
mov
add
adc
push
or
in
cmp
scas
scas
inc
pushf
xor
and
adc
enter
int
cmp
bound
loope
inc
fdivrs
or
xor
dec
inc
vpcmpeqw
pop
sub
sbb
repz
sbb
xrelease
in
lods
test
sbbl
inc
cmp
pop
mov
lea
inc
fadd
mov
mov
dec
push
imul
lds
pop
sbb
scas
cmp
enter
jb
xor
sbb
pop
mov
mov
sahf
shl
cmp
mov
xchg
xor
mov
mov
enter
fimull
mov
mov
mov
shr
dec
outsb
scas
out
ret
or
mov
mov
push
nop
sub
sbb
push
mov
inc
insl
and
mov
jne
or
xchg
scas
inc
cs
divl
adc
sbb
ret
movsb
repz
imul
push
jp
clc
or
pop
mov
xchg
jl
es
test
stos
cs
scas
add
test
incb
test
bndldx
stos
push
inc
mov
cmp
xor
xchg
and
test
out
xor
dec
adc
push
outsl
iret
jp
adc
cmp
pop
pop
shl
add
insb
adc
lods
dec
push
sbb
stos
cmpsb
cmp
xlat
int3
push
lods
mov
sbb
mov
idivl
aad
jle
sub
add
push
jae
and
cwtl
mov
and
sbb
and
dec
add
hlt
aas
and
dec
clc
sub
pop
dec
je
mov
mov
mull
fs
sti
sahf
repnz
xor
push
rorb
jge
outsb
std
or
mov
jmp
pushf
hlt
mov
addr16
or
push
mov
mov
shll
cmp
add
inc
dec
out
jle
rol
mov
es
inc
or
lahf
inc
sub
pop
iret
push
xchg
jne
test
sbb
xor
jp
push
lods
jne
pop
adcb
pop
fistps
stos
in
call
cmp
fwait
hlt
xchg
pushf
lock
cli
cmp
aas
iret
mov
add
pushf
sbb
mov
sub
shll
lea
sbb
push
cmp
sarb
or
dec
mov
sub
add
jb
leave
jne
jno
xor
rcll
dec
in
sub
mov
cmp
xor
sub
push
add
push
adc
add
in
insl
push
inc
or
pop
rorb
jno
sbb
push
xor
fs
aad
lods
daa
mov
lret
inc
cmpsb
inc
lea
xchg
mov
push
and
outsb
enter
mov
mov
ds
shrl
sub
cli
xchg
dec
je
or
rcl
shr
or
adc
popf
test
sbb
add
push
and
mov
les
ds
stc
mov
inc
pop
xor
clc
or
pop
hlt
sbb
test
aaa
xchg
ret
loope
sub
add
inc
push
lods
sbb
add
jae
and
cltd
jmp
dec
mov
sti
fisubl
testl
popa
fidivs
push
orb
dec
cld
push
xchg
xchg
jbe
stos
xchg
mov
pop
hlt
aaa
adc
xchg
stos
xor
push
arpl
pop
repz
test
jne
push
jge
inc
adc
pushf
inc
popa
mov
cli
leave
xor
mov
out
dec
sbb
push
movsl
jno
adc
filds
xor
or
mov
movsb
in
xchg
add
mov
inc
dec
mov
push
out
fwait
das
push
push
cmp
adc
lods
xor
and
in
pop
cmpsb
dec
jb
mov
xor
in
call
out
adc
js
test
xlat
dec
add
clc
cmp
jg
into
jns
hlt
ret
out
nop
lods
add
repz
lock
outsl
imul
mov
mov
loopne
jbe
inc
scas
ret
std
xchg
gs
shrl
cmp
lds
or
jbe
clc
int
out
push
mov
mov
push
ret
push
pop
sarb
mov
rcl
js
xor
push
stos
loope
xchg
stos
addr16
jae
movsl
pop
inc
adc
add
lds
sub
loop
int
shrl
pushf
es
into
jl
xchg
daa
pop
cwtl
add
adc
xchg
add
pop
sub
pushf
mov
shll
dec
dec
shrl
outsl
push
lods
mov
or
sub
pand
fistpll
sub
test
push
jp
inc
or
mov
adc
cmovge
mov
adc
push
inc
add
inc
fwait
movb
mov
inc
jmp
fwait
scas
jle
mov
fldcw
jge
mov
mov
push
mov
divb
aad
or
lret
loop
ss
dec
pop
pop
into
cltd
data16
adc
aad
sahf
popa
mov
mov
loop
xor
push
out
adc
mov
mov
lods
mov
fst
testb
push
inc
test
xor
ret
repz
mov
notl
cld
jmp
dec
xchg
cmpsl
insl
xor
add
jl
xchg
popa
and
mov
int3
adc
pop
stc
push
jbe
inc
mov
cli
inc
stos
xor
xchg
sbb
fdivrs
pop
pop
sbb
adc
sub
pop
imul
xchg
scas
xor
add
cmc
adc
test
bound
add
push
mov
je
add
add
push
push
subl
mov
fdiv
daa
mov
cwtl
fnstcw
and
sub
scas
out
or
add
and
jmp
dec
es
cmc
sub
lods
jb
or
loop
add
xlat
pop
inc
fucom
aaa
pop
imulb
mov
push
movsl
jge
aaa
sub
xchg
add
add
add
xchg
jg
mov
in
inc
inc
push
sub
add
scas
inc
or
ja
lods
int
fmuls
jmp
sahf
fimuls
pop
xor
push
or
add
cmp
adc
sbb
push
fidivrl
test
inc
mov
xchg
mov
sub
test
andb
repnz
fstpl
add
daa
outsb
inc
xchg
in
scas
insl
push
inc
jp
mov
sbb
jecxz
adc
jns
fnstsw
jne
cmpsb
scas
jne
pop
rcrl
test
xor
inc
push
push
jno
ret
jge
mov
sti
push
rcll
cld
sbbb
xor
addl
aas
adc
inc
insb
add
pop
inc
sbb
mov
push
jmp
push
cmpsl
xorl
mov
mov
into
jle
add
dec
pop
xor
int
mov
sub
mov
test
xor
xor
aas
into
adc
into
push
lret
adc
lods
add
push
imul
jbe
mov
pop
ficoms
push
jge
sbbb
mov
repnz
int3
dec
aaa
mov
mov
push
mov
cmp
and
aam
cmp
lods
bound
mov
push
mov
outsl
xor
jne
xor
cmp
inc
xchg
mov
test
xchg
pushf
icebp
fiadds
je
xchg
adc
nop
sbbb
xchg
cmpsb
dec
push
pop
mov
add
fbld
leave
lret
adc
aad
fwait
pop
mov
inc
mov
lea
stos
sbbl
mov
push
lret
inc
je
pusha
bnd
fmuls
or
popa
stc
jmp
cmp
inc
ret
mov
loopne
aaa
into
xchg
push
test
xor
add
dec
mov
jbe
xchg
mov
lds
loop
test
sahf
pop
adc
cmp
out
int
add
iret
imul
outsl
dec
jbe
jg
cmp
push
xchg
inc
test
rcr
loope
and
mov
adc
jle
scas
xor
out
test
test
jp
sar
or
push
rol
push
adcb
mov
adc
sbb
inc
push
mov
sti
push
daa
stos
fisubrl
xor
mov
cld
push
repz
adc
and
les
dec
dec
xlat
jne
fildll
cmp
call
cmp
jmp
rclb
push
mov
cmp
push
xchg
push
out
dec
fimuls
test
repnz
test
movsb
pop
sub
ss
mov
rcr
cmp
hlt
shl
stos
inc
mov
jbe
imul
scas
push
xchg
mov
mov
inc
cmp
xor
mov
mov
insb
jo
popf
shll
sbb
dec
lahf
sbb
not
mov
mov
loop
cltd
jne
jbe
insl
out
mov
scas
push
add
xlat
daa
add
fsubr
pop
jbe
stc
lea
sbb
jbe
stc
ss
lock
pop
out
fwait
sti
shr
mov
inc
into
decl
pop
adcl
add
cwtl
lsl
xchg
push
outsl
or
sub
into
mov
mov
add
mov
jns
scas
jle
sbb
add
sbb
sbb
or
jl
mov
pop
js
or
cs
add
xor
stos
mov
lods
push
mov
xor
std
mov
push
int
jne
xchg
outsl
xchg
sub
jno
mov
sub
rcrb
fwait
xor
out
bnd
out
dec
aad
push
push
das
sarb
dec
out
mov
test
test
loope
mov
int
xchg
out
sbb
int3
cmpsl
push
push
add
icebp
mov
push
fbstp
jo
ret
mov
shrl
xlat
stc
and
mov
stos
les
int
scas
and
addb
aam
sub
movsb
or
loope
subl
roll
mov
movsb
fidivs
mov
pop
outsl
movsl
cld
xchg
add
xchg
addb
xor
ret
inc
ja
in
sbb
mov
pop
repz
loop
sarl
mov
sub
push
das
out
aaa
in
fisubrl
fmul
sbb
fxsave
mov
scas
dec
sbb
inc
inc
cltd
lods
inc
nop
fnstcw
jbe
mov
jns
sbb
xchg
dec
lret
push
sub
sbb
dec
mov
cmpsl
cltd
repz
xlat
mov
nop
pusha
leave
xlat
mov
lretw
push
cmc
jl
mov
fldt
pop
jae
mov
add
and
fnstcw
xchg
sbb
int
xchg
sub
test
adc
int3
imul
pop
scas
sub
enter
outsl
jmp
ss
arpl
add
aas
xor
pop
insl
ret
sub
sub
adc
cmc
jge
outsb
mov
loop
push
inc
lret
inc
dec
jecxz
psadbw
xor
push
shr
pop
push
outsb
aas
sub
repz
or
scas
in
jmp
mov
jmp
push
pushf
fisubrl
push
dec
jne
pop
cmc
arpl
je
rcrl
filds
lea
xor
pop
rorb
jle
in
in
test
popa
leave
cmpsb
add
popf
sbb
xchg
xlat
xchg
clc
lods
loopne
cmp
jb
enter
push
cmp
mov
xchg
jb
jbe
mov
aam
mov
fsubrp
xchg
pop
lret
and
cmp
push
or
mov
ret
push
sti
mov
or
out
xor
mov
or
mov
das
pop
cmp
mov
pop
jo
repnz
lods
stos
cmp
push
cmp
test
mov
mov
xchg
call
mov
xor
es
test
mov
dec
insb
jle
inc
mov
fstp
cmp
js
lods
jecxz
js
pushl
add
scas
in
jge
repnz
idivl
sahf
lock
and
adc
hlt
out
popf
and
inc
inc
jecxz
ss
jo
out
sub
xchg
pop
hlt
xchg
mov
stos
jp
or
dec
jl
lcall
pop
shrl
adc
xor
imul
or
sub
or
enter
fcmovbe
push
cs
aaa
cmovl
lods
inc
inc
adc
lret
daa
je
xchg
jge
fsubrl
xlat
lahf
lods
enter
jmp
dec
bound
repz
push
sbb
adc
sbbl
lret
fiaddl
out
fsubrs
mov
out
xchg
inc
loop
push
imul
inc
add
dec
jecxz
repnz
and
inc
cmpsb
movb
xor
jp,pn
and
inc
pop
call
into
sbb
jne
outsl
inc
pop
mov
sbbl
pop
mov
movsl
add
fldl
imul
mov
ret
shlb
pop
jnp
pop
icebp
pop
mov
inc
lods
repnz
stos
push
mov
lds
mov
adc
je
mov
insl
movsb
js
pop
imul
jg
mov
jae
jl
mov
pushf
jne
jmp
std
mov
mov
jbe
je
frstor
enter
jnp
add
aas
xchg
lea
popf
mov
pop
and
sbb
cmp
pop
pop
mov
jne
push
call
sub
stos
popa
sbb
cmp
das
jns
outsl
fistpl
int3
dec
inc
mov
mov
notl
dec
dec
shll
enter
shr
jp
sbb
in
les
fistl
mov
jp
and
cmpsb
cmp
xor
inc
int3
xlat
adc
pop
sbb
data16
mov
jmp
data16
outsl
testb
es
push
mov
sahf
mov
das
out
fldenv
sub
es
or
and
jecxz
and
sbb
lods
je
in
test
pop
mov
inc
jae
pop
mov
push
sub
fdivs
or
fs
inc
mov
idivl
fidivrl
pusha
sbb
loop
test
lret
divl
lret
js
repnz
dec
pop
or
mov
movsb
pop
out
jp
sub
in
nop
call
cmp
aad
test
sub
jb
pop
and
popf
cmp
and
jecxz
mov
das
cmp
jmp
inc
or
ds
rol
xorb
fwait
dec
pop
adc
fdivl
xchg
mov
mov
jle
jle
pop
hlt
iret
sbb
cmp
icebp
jnp
and
scas
inc
pusha
cmp
fnsave
shlb
mov
aad
and
sbb
mov
or
loopne
sbb
lods
pop
mov
xor
mov
movsl
aaa
into
mov
repz
lock
shll
push
lahf
hlt
repz
ljmp
push
mov
sbb
sub
adc
pop
sbbl
mov
stc
or
mov
scas
hlt
dec
andl
shlb
test
mov
ret
stos
inc
adc
mov
gs
das
sub
jns
lds
hlt
push
inc
or
xor
pop
test
call
sub
mov
aas
add
xchg
out
dec
sbb
aaa
xchg
insl
andb
fs
lret
adc
test
dec
xor
bnd
and
fisubrl
jbe
xchg
outsl
out
and
sbb
cmp
sub
mov
lods
lds
inc
stos
push
insb
mov
xor
in
sub
daa
repz
aam
out
arpl
lds
dec
popa
orl
mov
pop
pop
mov
insb
xchg
jmp
push
lock
lds
imul
adc
cmc
fs
out
test
int
in
or
push
xchg
jmp
sub
jb
dec
loope
xchg
jnp
jge
scas
mov
pusha
inc
andb
or
jmp
repz
daa
ja
fbstp
push
fisubrl
aaa
rcrl
and
push
add
int3
cld
sub
imul
inc
mov
das
mov
jle
cmp
pop
pop
in
or
notb
sub
or
and
inc
insb
mov
or
fisttps
faddl
push
addr16
fwait
mull
movsb
mov
out
xchg
stc
pop
mov
inc
jno
shrl
adc
or
scas
pop
push
mov
imul
adc
cmp
jne
push
scas
cwtl
test
xlat
call
cmp
xor
testb
repz
pusha
adc
mov
jae
imul
loopne
cmp
repz
pop
xor
mov
or
movsb
aas
jne
fsubr
out
ret
pop
xor
jb
fstpl
and
in
mov
mov
sbb
jecxz
push
mov
nop
sub
push
nop
ja
dec
jp
int3
mov
push
mov
lret
and
in
js
test
xchg
xchg
sub
sbb
mov
and
mov
lods
fisubs
into
push
or
add
ljmp
in
adc
outsb
add
lods
mov
ja
dec
aam
in
enter
jl
loop
cli
jns
out
jg
aad
insb
ret
in
fidivl
call
outsl
push
push
pushf
pushf
xor
and
lcall
inc
fmull
ret
hlt
call
mov
xchg
sbb
jnp
add
push
fcomp
and
xchg
stos
and
in
cs
fwait
insb
cmc
cmp
and
sbb
dec
aad
test
repnz
loopne
sub
and
icebp
mov
lea
in
sbb
lods
mov
adc
and
xlat
lods
in
mov
xor
icebp
pusha
out
fstpl
ja
ja
stos
sub
add
push
outsl
jp
sbb
pop
xchg
rcrl
pop
rorl
fimuls
cli
dec
xor
stc
or
es
mov
bnd
arpl
jle
movsl
push
mov
in
dec
lods
add
push
push
pop
pop
movsb
add
jge
popf
jl
bnd
or
pop
loop
xchg
xor
inc
aam
sub
inc
jb
or
add
pop
xchg
lret
jb
add
adc
push
cmpsl
add
dec
fs
mov
push
jne
pop
icebp
and
sub
mov
scas
je
lds
sbb
aad
mov
mov
fwait
insb
mov
in
test
cmp
xchg
xor
outsb
and
sarl
adc
mov
sub
add
int3
mov
sbb
lds
mov
xor
lret
add
xor
mov
jmp
out
loopne
cmpsb
mov
or
sub
into
cmpsb
shr
mov
cwtl
clc
rclb
fsubrl
insb
mov
cmp
bnd
sub
inc
dec
pop
nop
adc
lret
cmp
add
push
add
sbb
dec
arpl
sbb
sub
leave
pop
mov
in
shrl
pop
arpl
aaa
icebp
imul
add
ljmp
scas
or
push
ljmp
jmp
sahf
test
xor
stos
imul
adc
ds
cs
mov
loope
or
enter
jp
xor
sub
insb
dec
aas
cmp
lds
bound
dec
pusha
xchg
xchg
add
add
fnstenv
push
andb
movsb
out
adc
lock
jle
pushf
outsl
mov
roll
and
push
xchg
pop
out
jae
xchg
jns
sahf
xchg
sahf
or
outsl
xor
pop
jecxz
pop
sahf
roll
pop
movsl
nop
xlat
pop
sub
push
popf
sub
int3
jecxz
gs
xor
push
xchg
fcom
pop
stos
in
and
inc
jae
pop
push
sahf
fisttpll
cmp
mov
fdiv
cmp
addr16
loopne
mov
mov
xchg
ss
cld
xor
pop
adc
es
cmp
inc
ss
dec
sub
loope
cmp
jae
jp
pop
mov
jns
jne
out
daa
testl
fisubrs
adc
outsl
mov
filds
out
aas
imul
pusha
in
nop
sbb
fimuls
xor
leave
in
lret
jae
xchg
cmp
mov
scas
out
insb
mov
outsb
fidivl
cmp
sub
int3
jmp
ds
es
xor
lds
mov
aad
push
xchg
xchg
mov
stos
sbb
and
repz
fwait
xor
push
fidivl
inc
cmp
movsl
cld
clc
dec
add
fstps
rol
lods
jne
pop
lret
cltd
lods
ljmp
pusha
cmp
cmp
out
pop
cmc
das
adc
sbb
xor
and
xchg
test
imul
clc
shl
jg
sarl
ret
sbb
aad
xor
repz
stos
xchg
rcrl
xor
cmp
rclb
or
push
clc
xor
pushf
cli
push
scas
add
icebp
das
je
aas
jb
cld
insl
lahf
push
mov
test
inc
xlat
mov
loopne
lods
add
dec
fists
js
sub
fistl
in
pop
lock
call
xchg
jl
push
out
sahf
sbb
sub
or
data16
mov
cmp
sbb
shll
lret
mov
movsb
mov
lea
mov
sti
fsubrp
into
pop
jge
lret
outsb
gs
fnstsw
ja
out
cld
lcall
mov
or
mov
pop
icebp
lret
inc
out
fs
xchg
paddusw
xchg
hlt
lds
sti
into
sub
mov
testb
sahf
cld
mov
dec
pop
mov
xor
or
out
cmp
loop
pop
pop
outsb
test
imull
rclb
cld
pusha
js
cs
das
lret
insb
test
ljmp
in
mov
mov
xor
xor
jge
hlt
fwait
cmpsl
out
xchg
xor
nop
lcall
arpl
aam
jecxz
pop
or
hlt
adc
repnz
and
jbe
mov
sbb
aad
and
nop
mov
inc
popf
mov
xlat
outsl
mov
jge
int3
arpl
xchg
push
dec
sub
fisubrl
jne
push
mov
mov
mov
fstps
sbb
movsb
adc
loope
sahf
pop
ja
and
mov
lods
mov
outsl
and
subb
testb
sti
xchg
sbb
outsb
lret
xlat
jecxz
sbb
divb
xchg
jo
jp
and
aaa
rcrl
mov
xor
mov
decl
aas
fcomps
or
pop
dec
mov
in
lahf
ja
mov
jns
jecxz
cmpsl
or
mov
mov
mov
add
jno
aaa
ljmp
call
ss
dec
ljmp
dec
imul
roll
mov
xchg
add
mov
xor
iret
cmp
aaa
lret
dec
xor
cwtl
jecxz
scas
inc
negb
xor
stos
jle
pop
add
out
je
sbb
repz
outsb
sub
cli
jnp
adcb
adc
mull
mov
mov
inc
shl
adc
jg
sahf
bound
adc
inc
sbb
inc
cs
cmpsl
mov
test
fsubrs
icebp
inc
cmp
push
cmpl
mov
sti
cli
adc
sbb
or
add
push
aaa
mov
ja
xor
pop
lods
jge
adc
ss
std
scas
into
xchg
cmpsb
scas
pop
mov
ja
notb
push
sahf
xchg
cmp
mov
js
pop
les
gs
frstor
pop
les
dec
push
in
mov
insl
lock
or
imul
mov
imul
xor
insb
fsts
xchg
jmp
lcall
and
addr16
gs
and
and
stos
pop
pop
imul
push
scas
outsl
ret
arpl
lds
notb
push
jmp
add
dec
jmp
mov
faddl
pop
addr16
add
fidivrl
pop
insb
mov
jo
stos
pop
add
hlt
and
mov
pop
adc
hlt
add
dec
fs
xchg
imul
mov
aas
mull
outsl
cmp
jp
xchg
out
cmpsl
fldl
mov
or
push
popf
push
sub
jbe
lret
jmp
and
jbe
pop
je
mov
test
dec
sub
add
or
add
lcall
cmp
mov
in
push
mov
or
test
dec
rclb
adc
push
pop
testb
jle
cmp
ja
lods
dec
test
repz
adc
mov
testl
dec
rorl
mov
repz
out
test
jp
jecxz
testb
in
push
popf
aaa
out
in
push
stos
in
push
mov
push
jl
cmc
pop
clc
push
xorb
push
je
cld
and
sub
mov
iret
mov
push
mov
cmpsl
cmpsl
xchg
or
popf
imul
inc
xor
inc
fsubr
add
sub
mov
int3
jae
in
add
int
sahf
mov
in
jo
cld
mov
or
dec
push
adc
das
add
sbb
and
sahf
pop
lcall
mov
in
add
adc
pushf
cmp
scas
imul
das
or
into
cmp
lea
mov
xor
fmull
adcb
adc
jo
dec
lods
sbb
cmpb
sub
cltd
cwtl
xchg
add
lahf
xor
fwait
jb
adc
xlat
ret
in
test
loop
mov
mov
repnz
xchg
inc
adc
push
loope
ja
xor
out
push
and
cs
lret
fldl
nop
ficompl
gs
test
fdiv
out
or
sub
cmp
pop
inc
xchg
jo
pop
in
xor
cmp
push
loop
mov
fsubl
popf
sub
negl
sub
out
jle
mov
loop
leave
mov
add
pushf
test
pushf
lods
pop
insb
leave
mov
xlat
sbbb
rcr
push
addr16
mov
lds
sub
jno
add
rorl
xchg
inc
push
stos
test
in
subl
addl
dec
leave
sbb
sbb
insl
bound
add
pop
aas
fwait
xor
and
and
mov
push
icebp
mov
in
outsl
aaa
or
push
orb
jne
mov
insl
das
sahf
pop
xchg
pop
pop
outsl
je
or
lds
mov
push
insb
add
cltd
shl
inc
pusha
fnstenv
jbe
dec
cmp
add
loopne
xchg
fcompl
adc
inc
hlt
lods
push
jle
mov
clc
push
inc
sbb
jae
jne
sub
mov
dec
mov
andb
cmp
in
jb
sub
add
mov
test
hlt
jns
mov
cmp
fldl2t
sub
in
imul
fcoml
sbb
call
les
aam
xchg
sub
xor
adc
imul
xor
push
cmpsl
cmc
push
xchg
shl
cli
cltd
sub
cmp
mov
push
mov
test
int3
or
insb
imul
mov
scas
sbb
lods
inc
movb
fcoms
dec
iret
mov
sbb
mov
add
ljmp
subl
mov
sbb
sahf
cs
sbb
popl
jg
gs
or
roll
pop
jne
mov
test
cmpsl
or
xchg
mov
sbb
imul
and
xor
pop
jl
mov
pop
mov
subl
ficomps
mov
sbb
in
std
stos
cmp
jo
ret
inc
fs
movsl
jnp
jecxz
out
adc
ss
cltd
lahf
jb
in
mov
mov
daa
mov
xor
inc
mov
mov
shrl
addb
push
scas
and
or
inc
loope
dec
loope
add
in
mov
lret
xlat
pop
test
lret
gs
out
adc
adc
adc
shlb
xlat
pop
mov
inc
push
ljmp
andb
ret
pop
div
mov
imul
fldl
mov
imul
mov
adc
push
call
pop
out
in
dec
pop
mov
es
add
mov
xor
mov
js
sub
mov
mov
sub
pop
jbe
mov
push
xor
int3
lds
ja
inc
and
cmpsb
test
xchg
mov
pushf
inc
cltd
inc
imul
in
inc
xchg
xchg
push
movsb
xor
mov
xor
enter
aad
cmp
popa
adc
pop
addl
mov
mov
or
out
xchg
mov
jae
rorl
push
in
mov
mov
fimuls
mov
push
add
pop
xchg
xor
adcl
data16
std
or
das
stc
mull
aam
xor
pop
test
adc
daa
cmp
shlb
data16
dec
mov
and
jg
xchg
pop
sbbl
mov
mov
test
int
xor
lcall
inc
mov
sbb
daa
xor
mov
push
cmp
mov
and
fistl
loop
rolb
adc
fildl
or
sbb
mov
mov
mov
das
dec
xchg
flds
xchg
mov
sub
loopne
test
push
cmc
mov
or
sbb
dec
mov
dec
dec
push
sbb
mov
sbb
scas
xchg
repz
movsb
cmp
fdivrl
jo
lret
bound
xor
pop
push
push
mov
dec
inc
pusha
add
adc
mov
scas
inc
ljmp
gs
fdivrs
js
mov
mov
fldenv
or
dec
xchg
pop
jne
mov
xchg
or
cmp
in
loopne
push
movlps
subl
or
imul
mov
imul
inc
bound
ljmp
lea
xchg
mov
out
cmp
in
sti
pop
dec
cmp
pusha
movl
fisubrs
je
and
push
push
popf
and
sbb
dec
test
xchg
les
push
movsl
sbb
fs
gs
cltd
jmp
push
lret
push
and
cwtl
leave
cmc
leave
jno
ljmp
dec
mov
and
ljmp
daa
adc
divb
inc
gs
rol
xor
imul
sub
mov
sbb
iret
sub
ud0
mov
divb
xchg
icebp
pop
jle
cmp
int3
or
jns
ret
xchg
sbb
or
ret
sub
pop
mov
imul
cltd
adc
shrb
inc
insb
or
rcl
fadds
loop
push
pop
mov
ja
inc
adc
test
cltd
test
sub
std
scas
mov
mov
andl
lods
inc
das
xor
outsb
add
ficoms
mov
movsl
xor
arpl
fwait
mov
int
and
sti
cmp
mov
repz
mov
nop
mov
outsb
repnz
adc
and
aam
xchg
add
dec
cmp
mov
aam
cltd
inc
je
clc
mov
insb
les
pop
ja
ret
jnp
wrmsr
pop
push
adc
test
std
ret
ret
int
mov
sbb
xchg
adc
mov
scas
loope
inc
ret
cmpsb
rcl
es
sub
cli
or
add
cmp
fucomp
addr16
hlt
mov
or
mov
mov
and
int3
outsl
mov
test
cs
lods
cmp
adc
pop
add
pop
inc
add
push
out
fcomip
adc
or
jg
mov
push
out
sar
jbe
mov
push
outsl
jae
scas
or
stos
cmp
xchg
mov
pop
jle
test
mov
in
mov
and
andb
push
mov
bnd
cmc
and
jp
js
out
fwait
push
hlt
testl
loopne
adc
lret
sub
sbb
repz
les
movsl
dec
div
push
xor
sbb
pop
xlat
lret
inc
cmpsb
jno
loop
mov
ret
outsl
divl
jb
inc
fnsave
pop
frstor
sbb
mov
jmp
xor
jge
aad
les
repnz
and
les
xchg
aad
orb
mov
dec
cmp
fstl
rsm
lods
gs
push
je
xchg
push
add
inc
xor
or
in
xchg
pop
mov
cli
lock
xor
ret
sub
inc
xchg
mov
fcoml
lods
push
scas
inc
addr16
fwait
push
mov
xchg
push
inc
cld
or
fidivl
xchg
pop
sub
inc
loopne
jg
xorb
bound
movsl
push
lods
adc
sub
movsl
stos
jp
sbb
nop
pop
jne
mov
inc
aas
xor
call
cmp
std
mov
cs
icebp
cmp
pop
mov
sbb
lret
sub
stos
insl
fs
jns
jp
imul
dec
jae
test
push
test
je
and
loop
pop
sbb
pop
xor
les
addb
dec
stos
mov
mov
xor
mov
lods
adc
lret
je
scas
cmp
dec
arpl
fstl
es
insl
shlb
ret
mov
out
mov
and
dec
mov
jge
cmp
or
fistps
les
mov
in
xchg
push
sbb
inc
dec
and
adc
nop
dec
xchg
cli
test
jae
xchg
rorb
sub
ret
push
clc
bound
push
iret
mov
test
scas
repnz
stos
aas
mov
xor
inc
das
add
dec
lcall
dec
stos
sbb
insb
xor
dec
sahf
fisttpll
dec
xchg
pusha
daa
mov
addr16
fsubs
lock
inc
loope
xchg
push
fstpl
fisubs
iret
stos
mov
arpl
sbb
mov
imul
cmp
cwtl
xor
mov
popa
dec
sbb
xchg
mov
iret
add
jae
subb
dec
pushf
xchg
jecxz
pop
test
jl
sbb
xchg
mov
adc
mov
xchg
or
dec
fistps
xchg
scas
dec
inc
data16
xchg
scas
mov
sub
and
xchg
dec
clc
popf
xchg
sbb
xchg
repz
lahf
push
mov
cmp
aam
in
mov
movsb
jle
pusha
dec
test
xor
mov
mov
inc
sahf
or
xchg
aad
and
jns
cmc
jp
add
and
push
mov
inc
mov
jo
popf
mov
iret
jmp
subb
pushf
int
inc
adc
test
aam
lds
adc
stos
xchg
pop
cmp
ja
movsb
adc
ss
lds
pop
fcompl
movl
lret
daa
mov
xor
cmpl
les
jnp
pop
in
repnz
daa
and
sbb
cld
loop
jo
mov
clc
sarb
mov
mov
sub
popa
jbe
dec
mov
ficoms
jno
inc
sbb
addr16
clc
jnp
cmpsl
push
sbb
xor
add
insl
pop
je
cwtl
mov
mov
test
fsubrs
daa
pop
out
sti
jp
fbstp
sbb
sbb
mov
dec
sbb
jnp
sub
pop
mov
add
daa
cmpsl
jmp
subb
mov
and
movsl
bnd
dec
jle
lea
mov
aaa
inc
movsb
in
sub
stos
xchg
pop
enter
adc
mov
sub
pcmpeqw
cmp
out
sti
dec
mov
cmp
shrl
aam
lea
rcll
lret
sti
xchg
mov
xor
push
adc
sub
and
and
bound
or
push
insb
mov
xorb
mov
mov
xchg
cmp
and
into
mov
lahf
in
cltd
adc
iret
sti
leave
sbb
dec
xchg
sbb
cmpsl
push
adc
and
or
cltd
xor
inc
fdivr
loopne
adcl
jne
push
add
fwait
std
repz
lock
hlt
pushf
stc
popf
aas
cmp
jmp
mov
mov
jecxz
pop
popa
or
mov
push
sbb
test
pop
cmp
mov
decl
xor
or
test
or
addl
cmp
test
xor
std
sbb
adc
call
and
dec
xchg
hlt
sub
les
inc
xchg
daa
mov
xchg
aas
orb
or
out
cmp
xor
pop
mov
rcrb
inc
fsubrp
adc
jb
xchg
scas
in
stc
mov
dec
adc
add
add
mov
aam
jnp
fstl
es
add
pop
inc
and
and
fidivrs
movsb
leave
lods
push
push
sbb
cmp
loop
sub
daa
add
jae
add
jne
inc
and
pop
or
inc
lret
or
repnz
sub
pop
test
xor
hlt
or
pop
mov
adc
or
mov
loope
repnz
or
mov
out
xchg
addr16
stos
sbb
outsl
sub
lcall
dec
in
jne
cltd
lea
add
sbb
xchg
sub
movsl
sub
aam
dec
sbb
ret
jp
iret
data16
int3
xor
push
scas
cmp
xor
mov
lods
inc
jg
pop
dec
test
aad
xchg
into
dec
dec
mov
cwtl
mov
xchg
adc
fnstenv
xor
fwait
es
and
mov
ds
sub
push
out
dec
or
aas
bound
inc
push
mov
xor
sbb
cs
dec
add
movsl
pop
stos
inc
rcr
jnp
addr16
pop
jae
pop
lret
aaa
into
cld
xor
jg
stc
fdivp
xor
das
aad
push
xchg
adc
hlt
dec
je
mov
bound
mov
stos
xlat
lret
cmp
push
out
cwtl
in
int3
outsl
out
aas
in
mul
maskmovq
testl
sets
pushf
icebp
sbb
out
pop
sahf
xor
aaa
pop
fs
or
adc
sub
sbb
std
inc
imul
clc
stos
nop
in
int
incb
in
add
pop
aad
jae
insb
sbb
into
xor
push
pop
data16
movsb
jl
sub
ret
sub
int3
lret
jno
pop
icebp
sub
fcmovb
lret
divl
jmp
or
shr
inc
mov
add
mov
adc
xchg
sahf
xor
dec
lock
pop
mov
test
add
mov
xchg
test
lods
mov
mov
pop
and
loop
pop
adc
mov
push
jp
jmp
test
xchg
mull
test
mov
mov
dec
sahf
sub
outsl
ljmp
cmp
add
cmp
lret
dec
or
lock
xor
cs
jne
loopne
or
adc
jle
cmp
mov
push
ss
xchg
lods
test
xlat
pop
stos
out
fldt
pop
cmc
xchg
ja
mov
js
addr16
in
sbb
jb
mov
fisubs
push
adc
jp
inc
test
pop
xchg
lock
add
mov
push
in
xor
push
mov
in
jb
shlb
popf
inc
stc
adc
movsl
lods
push
pushf
jo
or
movsl
sbb
cmp
sbb
ret
test
jle
xchg
aam
or
jnp
loope
in
daa
add
adc
pop
sub
or
idivl
or
loop
sahf
lods
or
out
cmp
cmpsb
out
pop
fwait
cmpsl
imul
add
clc
xor
add
ret
or
es
sub
sbb
dec
in
mov
xchg
push
cmp
pop
imul
xchg
outsl
jge
cwtl
lcall
sub
movb
call
test
cmpsb
pop
repnz
add
int3
sub
mov
rorb
and
pop
jmp
cmp
stos
mov
mov
sbb
loop
and
cmp
jnp
ja
push
jo
sbb
mov
xchg
cmp
jecxz
outsl
push
std
push
pop
repz
and
inc
jp
das
xchg
cmc
sub
push
cltd
sbb
ljmp
outsb
ltr
or
xchg
xor
out
inc
mov
adc
mov
jp
and
dec
or
push
fsubrs
cmp
pop
ds
inc
jo
sub
in
iret
inc
dec
mov
test
icebp
aad
sub
mov
jne
mov
jge
divb
push
dec
xor
das
fwait
movsl
lods
jmp
jo
jnp
mov
push
pushf
les
sub
jo
movsl
xchg
jns
xor
cmpsl
pop
repz
xor
mov
mov
aaa
mov
neg
push
stos
test
mov
push
or
xor
pop
lock
ja
push
fs
xchg
xlat
mov
in
ret
insb
xchg
lea
mov
out
jecxz
inc
dec
sub
mov
xchg
inc
stos
stos
cmp
sbbb
cmp
mov
stc
and
sub
aas
pop
nop
push
vminps
imul
fwait
mov
xchg
insl
dec
ret
xchg
adc
inc
dec
add
aas
mov
jno
xchg
add
jl
test
jns
test
in
imul
xchg
fmul
pop
fs
adc
jg
and
popl
in
mov
mov
cmpsb
mov
cs
stos
or
adc
or
dec
pop
and
iret
pushw
or
inc
in
test
bound
fstpl
and
lods
hlt
fnsave
mov
push
jmp
pop
stos
imul
shl
in
mov
and
int
sub
push
jmp
sti
mov
pop
inc
push
daa
and
fsubrs
push
and
push
cmc
popf
xchg
lds
or
insl
pop
loope
out
pushf
mov
push
cmp
std
andb
cmp
inc
or
addl
int3
fidivl
gs
push
or
sbbb
mov
and
inc
push
cmc
or
imul
sub
es
cmp
shlb
mov
xchg
insb
xchg
test
add
cmpsl
icebp
inc
fidivs
pushf
aad
inc
adc
or
sbb
mov
emms
sub
mov
iret
popa
cs
or
insl
cmpsb
sub
outsb
aas
jp
fwait
push
jne
dec
test
push
fnstcw
test
xor
insl
ja
loop
sahf
mov
jns
popa
sahf
scas
je
xlat
sub
ljmp
ret
stos
fs
push
jo
sbb
test
sahf
pop
mov
pop
js
xor
repnz
aam
dec
stos
inc
cmp
sub
stc
in
mov
pop
xchg
mov
or
int3
add
leave
mov
cld
rcll
rolb
in
shlb
sub
cmpsb
and
and
or
pop
jecxz
pop
notrack
xor
xor
lret
mov
cmpsl
cmp
pop
jbe
mov
es
outsb
dec
pusha
lcall
outsb
jl
mov
sbb
adc
jno,pn
jmp
cmp
dec
test
cmp
pop
bound
cmpsb
push
mov
insb
filds
cmpsl
data16
shr
pop
aaa
sbb
mov
lcall
and
popa
mov
push
jne
lea
dec
jge
adc
mov
lcall
dec
repnz
jne
inc
test
mov
jecxz
cli
cmp
test
das
add
xlat
and
ja
insl
test
leave
mov
mov
mov
rcrl
stos
cmpsb
xor
nop
lret
scas
rorb
test
lret
pop
mov
insb
into
sub
dec
scas
lret
scas
rorl
imul
icebp
mov
loopne
pusha
dec
into
leave
ss
gs
int
ret
sub
jecxz
and
or
lret
lods
loope
loopne
iret
test
addr16
ror
jmp
mov
or
pop
dec
fsubrl
outsl
fs
inc
lcall
sbb
fs
out
mov
inc
push
xlat
outsl
testb
call
cmp
xor
jmp
cli
imul
stos
aas
push
call
int
arpl
push
jns
pop
sbb
fbld
jns
sbb
pop
xor
xchg
sti
sbbb
addr16
arpl
popa
xor
sar
orl
adc
cmp
xchg
arpl
jns
cli
orl
push
insb
push
les
nop
fbld
pop
cmc
sbb
cld
push
in
xchg
and
inc
enter
aas
in
rcrb
mov
into
fnstenv
mov
inc
pop
fldenv
sbb
pop
idivb
fadd
push
push
dec
es
icebp
and
movsb
inc
push
addr16
icebp
movsl
and
test
dec
fildll
inc
adc
mov
lret
into
out
insl
add
push
sbb
inc
sbb
sbb
mov
push
mov
roll
test
mov
jb
cltd
out
js
inc
test
sar
pop
repnz
nop
sbb
out
add
jns
sti
lods
xchg
or
mov
js
in
cmp
aam
sub
dec
xor
jmp
inc
dec
sbb
fimuls
shl
pusha
push
jecxz
pushf
gs
aaa
test
sahf
inc
movsl
inc
xchg
pop
cmpsl
sub
imulb
pop
imul
dec
jmp
in
or
cmp
adc
mov
push
leave
sub
loopne
ret
pop
ss
sahf
decl
sub
stc
adc
inc
push
test
faddp
push
or
test
imulb
fmulp
dec
adc
enter
out
fimull
pushf
in
neg
pusha
add
pushf
cmp
aam
imul
jbe
inc
jno
or
jmp
sbb
jbe
mov
xchg
inc
xchg
icebp
mov
and
xchg
inc
lock
add
jl
pop
or
aas
mov
std
aas
dec
inc
negl
nop
jnp
pop
push
sti
or
incb
and
pop
mov
push
aam
inc
add
cmpsl
imul
xchg
add
or
loop
add
rcrl
xchg
and
leave
clc
icebp
rcrb
test
mov
and
cmp
lods
mov
and
and
mov
adc
dec
cmc
sub
insb
sub
jp
scas
and
inc
mov
int3
sbbl
lret
jg,pn
cs
ss
js
xor
xadd
inc
pop
push
jecxz
dec
fwait
mov
pop
ficomps
xchg
stos
or
inc
xchg
pop
data16
aas
pop
pushf
xchg
or
sti
jmp
pop
hlt
inc
sti
movsb
cmp
lock
jmp
ret
xchg
js
fidivrl
cltd
fwait
sub
sbb
xchg
mov
adc
add
fdivl
adcb
mov
stos
loop
outsl
push
mov
fnsave
adcb
mov
outsl
push
rorb
je
dec
adcb
lahf
adc
loopne
fnsave
adcb
cmpsb
adc
rcll
jbe
pusha
sbbb
add
insb
cli
loopne
fstps
inc
mov
in
in
dec
das
cmp
add
cltd
popa
mov
xchg
imul
test
pop
popa
push
cltd
push
hlt
notb
sub
je
inc
loop
cld
icebp
xlat
push
lods
or
push
mov
decb
enter
cmp
jne
fstpl
pop
loopne
mov
pop
aam
clc
nop
cmp
lret
andl
jle
push
arpl
call
cld
dec
ljmp
in
fs
or
cmp
sti
mov
mov
mov
andb
movsb
decb
dec
insb
push
movsb
mov
push
call
mov
jo
in
shll
inc
js
lods
lea
sub
roll
add
mov
mov
icebp
nop
aaa
inc
and
clc
lret
mov
gs
or
adc
jecxz
fwait
cltd
sbb
fstpl
inc
fisttpll
fs
push
test
fistl
jae
mov
lods
xor
loope
stc
xchg
mov
jle
mov
fisttpll
push
test
jne
pop
cmp
mov
mov
aaa
xchg
sub
mov
mov
daa
cli
loope
mov
jo
xor
mov
pop
xor
cmp
dec
cmc
push
lret
mov
mov
divb
ficoml
jne
add
test
push
mov
dec
sub
cmpsl
lcall
add
push
in
stos
ja
push
sbb
test
xchg
and
jge
orb
jle
out
movzbl
mov
mov
in
test
fwait
rcll
dec
movsl
stos
cmpsl
scas
rcrl
cwtl
xor
bound
adc
pop
gs
fisttpll
sub
rcrl
mov
mov
fistps
pop
loop
inc
out
add
pop
lock
mov
ja
inc
mov
xorl
rcr
ret
sbb
sbb
cmp
ds
movsl
clc
adc
push
adc
pop
insl
mov
inc
push
push
xchg
fnsave
dec
jmp
mov
jmp
sbb
leave
subl
jns
pop
notb
dec
imul
add
fmul
and
jmp
arpl
xorb
loop
sbb
xchg
test
cmpsb
lds
mov
jne
pushf
xlat
cmp
adc
pop
dec
cmpsb
test
scas
fnstenv
xchg
stos
rol
mov
fdivrs
add
stc
pop
testl
cmpb
shll
push
xchg
xchg
es
dec
jno
mov
pushf
fs
dec
dec
out
aas
xchg
test
aad
mov
add
ret
sbb
cmp
push
cmp
jno
and
and
pop
dec
cmp
lea
pop
insl
inc
add
jecxz
jl
dec
call
cmpsb
les
sub
aaa
mov
int3
pop
jmp
je
cmp
push
out
pop
aad
sub
mov
lret
les
lahf
mov
push
or
gs
jmp
mov
imul
cmp
sbb
or
into
xchg
dec
in
lcall
fnclex
dec
cmp
sub
cs
or
jns
pop
push
pop
cmp
jbe
insl
mov
inc
xor
jo
test
pop
lea
cmp
iret
jle
jge
sbb
out
es
das
pop
pop
fidivs
jp
inc
nop
inc
rcrl
dec
mov
mov
fbld
inc
pop
and
sub
jno,pt
data16
mov
mov
ljmp
mov
dec
or
sti
movsl
mov
divb
pop
sub
js
leave
cs
sub
out
mov
aam
out
icebp
mov
lods
fmuls
cmp
ljmp
sbb
faddl
in
cltd
imul
imul
mov
mov
arpl
inc
add
lea
mov
mov
fldl
push
pop
add
sarl
and
mov
mov
or
and
jae
scas
out
jg
inc
push
mov
add
imul
or
xor
adc
fwait
das
cmpsb
or
pop
aas
xorb
jns
or
cs
dec
push
dec
filds
fbld
enter
ja
push
lods
sti
jl
ljmp
add
popa
xchg
cmp
decl
and
pop
xor
and
sub
sub
cmpsb
mov
pusha
fnsave
les
es
add
xlat
movsl
and
repz
orl
jnp
insb
mov
insb
mov
filds
sbb
or
data16
mov
sbb
sahf
mov
in
mov
push
add
sub
shlb
inc
in
filds
repnz
loopne
mov
xlat
mov
dec
inc
inc
imul
lds
call
cmp
lret
cmpsl
and
mov
sub
ss
push
sbb
cmp
xchg
jg
mov
jl
rcll
les
mov
mov
xchg
jmp
or
dec
in
mov
movsl
stc
or
loope
cmp
dec
cli
lea
in
sbb
js
nop
inc
cmpsb
dec
hlt
xchg
es
inc
fdivrl
pop
aaa
mov
pop
test
scas
mov
and
divl
out
dec
in
xchg
or
dec
mov
mov
cli
adc
hlt
cmpsl
rcrl
dec
call
outsb
pop
jmp
lcall
and
out
xchg
inc
adc
dec
in
je
insb
scas
call
inc
cld
pop
cmp
push
int
push
mov
test
or
sub
xchg
sub
lcall
push
js
jb
stos
hlt
daa
jnp
inc
out
mov
clc
bswap
mov
test
cmp
cld
fildll
xchg
in
add
fmuls
push
mov
xchg
sub
and
int
push
xchg
pop
push
scas
add
mov
inc
xchg
mov
and
jne
pop
xor
sub
push
ds
mov
popa
ret
inc
shlb
movsb
in
out
ret
or
sbb
mov
push
movsl
inc
pop
jmp
enter
test
add
fnstenv
pop
mov
jb
xor
sbb
jle
pop
inc
fwait
add
xchg
jmp
mov
scas
and
ucomiss
dec
jnp
cmpsb
dec
jne
aam
push
mov
testb
mov
and
inc
into
inc
sarl
push
cli
js
adc
in
and
mov
mov
xor
jb
pop
cmp
fisttps
pop
xchg
cwtl
nop
jge
movsl
add
sbb
mov
stos
jbe
jo
mov
imul
rolb
sbbl
frstor
leave
mov
pop
out
adc
popa
aas
int3
add
add
inc
sub
push
pop
es
add
mov
js
cmp
outsb
or
ja
out
and
and
inc
ficoml
sub
ss
xchg
xor
add
mov
pushf
cs
push
out
pop
popl
in
scas
fdivp
cld
test
jecxz
test
add
outsl
es
push
push
loop
xorb
fsubr
ja
fidivl
stos
in
inc
and
mov
jecxz
or
imul
fidivrs
push
movsl
ret
shl
xchg
jae
and
lea
jbe
dec
shrb
or
ds
faddl
fildl
es
sub
movsl
sahf
popa
lret
movsb
pop
jmp
addb
cld
icebp
insl
jle
lahf
adc
movsl
repnz
movsb
out
enter
sbbl
pushf
xchg
leave
pop
push
out
aas
repz
add
loopne
cmp
std
dec
and
nop
fsts
adc
jnp
daa
push
and
adc
pusha
mov
aam
lret
aam
bound
int3
pop
pop
cmp
xchg
sti
enter
mov
inc
inc
adcl
inc
testb
xor
mov
xchg
loopne
pop
pop
repnz
and
inc
cs
jmp
push
pusha
pop
xchg
das
mov
xor
sub
cwtl
das
and
mov
mov
push
or
and
popf
cmpsb
push
fldlg2
cmpsb
and
xchg
mov
or
inc
push
sbb
pop
popf
in
fnstsw
iret
fldenv
mov
mov
adc
adc
iret
jne
aas
in
jp
adc
imul
pop
add
adc
sbb
fildl
pop
movsb
fsubrl
gs
in
add
dec
sub
jle
pop
clc
inc
and
nop
nop
daa
ret
ss
fisubs
scas
xchg
adc
add
negl
adc
lret
mov
out
xchg
rcll
les
pop
icebp
cmp
pop
js
mov
xchg
jl
fwait
enter
mov
jg
cltd
push
inc
dec
push
sbb
cmp
bound
sbb
xchg
mov
movsl
cli
add
mov
loopne
and
mov
inc
jp
jb
std
push
push
in
icebp
shrb
or
clc
cltd
pop
mov
add
lock
outsb
push
mov
adc
shl
mov
dec
pop
mov
out
xor
add
mov
ret
mov
shll
es
mov
pop
push
lcall
cwtl
das
xchg
ljmp
jno
push
sar
cltd
pop
add
movsl
or
xchg
cltd
scas
pop
loop
sbb
int3
shlb
mov
cmp
sbb
pop
out
dec
dec
adc
push
into
dec
cmp
cmp
mov
aaa
cmpsb
and
inc
gs
or
inc
subl
lret
gs
jmp
scas
add
cs
xor
push
adc
dec
add
int3
decb
vpaddb
adc
push
inc
cmp
mov
fcomi
adc
push
cmp
and
add
das
sub
pop
ret
aas
mov
rcll
or
cmpb
arpl
fwait
dec
cld
adc
fcoml
or
das
fdivrs
inc
pop
mov
pushl
rorb
daa
nop
repz
adc
mov
ds
hlt
push
enter
lcall
mov
mov
ret
cvtps2pd
cld
cs
shl
or
aad
je
mov
sbb
ja
and
adc
test
insb
mov
sub
int
incl
out
in
push
cmc
add
or
xchg
mov
sub
pop
cmp
lods
in
adcl
iret
mul
cmpsl
mov
push
xor
pop
mov
mov
data16
jge
pop
lock
call
sub
jge
push
pusha
xorl
call
pop
mov
fs
sbb
mov
in
xchg
popf
stc
repz
and
and
out
inc
push
shrb
sbb
insl
mov
cmp
jae
pop
je
es
sbb
lock
xchg
and
sbb
push
ja
sub
stos
xorb
jne
mov
mov
subb
iret
adc
pop
xorb
stc
sbbl
sbb
inc
fdivs
push
fcmovnb
adc
push
lock
mov
in
cltd
push
mov
add
inc
iret
popa
insl
test
push
inc
jb
loope
ficoml
or
stos
push
sub
lods
sbb
sub
gs
cmp
and
push
mov
pusha
xorb
and
aam
adc
jno
sbb
shr
jnp
fs
sbb
movsl
ljmp
movsl
lods
notb
pop
add
lock
cmc
nop
in
cld
push
mov
mov
dec
or
pop
std
pop
inc
mov
or
adc
inc
sbb
inc
push
push
inc
insb
enter
cmpsb
sbb
mov
frstor
push
test
mov
orb
sub
pop
push
mov
push
pop
jecxz
roll
unpcklps
push
xchg
pop
imul
cmp
and
lds
xchg
jnp
cmp
enter
push
add
add
pushf
add
lods
loope
mov
lret
lods
push
inc
test
pusha
and
in
xlat
subl
mov
sti
xchg
imul
bound
subb
push
fs
add
sub
insl
jge
insb
mov
test
add
sbb
imul
jnp
mov
nop
rorb
xor
scas
push
mov
sbb
xchg
mov
push
inc
movsb
xchg
inc
push
inc
or
test
mov
sahf
test
addb
test
cltd
std
rorb
push
adc
or
jae
shll
andb
imul
icebp
sbb
lcall
fcomps
pop
push
dec
jle
in
hlt
and
arpl
roll
add
inc
push
stos
mov
push
scas
push
inc
cmpb
mov
inc
stos
lods
add
mov
push
in
out
add
mov
in
jbe
aam
inc
mov
push
scas
das
jbe
add
mov
mov
nop
out
sbb
mov
movsb
jl
out
xchg
sub
call
xor
fisttps
xchg
clc
inc
pop
inc
in
and
xchg
clc
mov
dec
call
and
jle
rcrl
mov
lahf
mov
imul
cmp
add
jg
fstl
fidivrl
lcall
sub
or
mov
and
mov
pop
sub
iretw
daa
arpl
popa
cmp
mov
fimuls
jnp
xchg
mov
add
jne
and
cmp
push
mov
pusha
ljmp
cli
or
mov
out
jno
cmp
xlat
push
or
cmpsl
stc
inc
mov
mov
movsl
push
pop
fcoml
and
lret
cmp
sub
and
xchg
lods
lock
ds
fdivrl
test
call
je
or
xchg
push
cmp
or
lcall
fwait
test
mov
mov
xor
sbb
mov
inc
in
aas
add
xor
cmp
enter
push
mov
adc
adc
mov
pop
sbbb
negl
add
aam
push
add
push
jle
gs
adc
xchg
out
jp
mov
xchg
fdivrl
xchg
push
sbb
fcmovu
sub
popa
cmp
xchg
repz
cmp
push
mov
xor
lock
adc
insb
mov
popf
jg
mov
adc
fisubs
add
idivb
in
fidivrs
cmp
and
lds
and
fsubs
aaa
cltd
dec
xchg
outsb
add
mov
sub
xchg
movsb
cmpb
add
or
and
aam
jae
test
dec
dec
xchg
cmp
adc
push
push
dec
movsb
aaa
jno
das
cwtl
in
movsb
xchg
mov
cli
pushf
scas
sbb
jo
int3
mov
ret
call
inc
cmp
xor
sarb
dec
cmp
dec
or
pusha
lock
daa
and
scas
add
inc
xchg
sub
popa
jo
ljmp
lds
dec
clc
push
hlt
and
pop
loope
ljmp
cmp
xlat
fdivrl
add
push
cwtl
repz
add
push
mov
aad
and
repz
or
push
xor
insl
gs
shlb
sbb
add
in
subb
repnz
mov
sub
cmpsb
mov
popa
sbb
jo
notl
fistps
pusha
pcmpeqd
mov
les
sbb
sbb
nop
jnp
imul
dec
add
jno
jns
lcall
mov
pop
mov
or
push
fdivrl
ljmp
mov
dec
in
decb
shl
nop
jo
addr16
mov
mov
xchg
cmp
xchg
aad
sub
mov
add
adcb
inc
imul
fwait
mov
cmp
adc
loopne
mov
shlb
and
mov
and
push
mov
push
mov
dec
out
jb
inc
rol
cmc
sub
dec
inc
jb
add
xor
repnz
mov
lret
fstps
fnstenv
leave
and
pop
cmp
arpl
std
dec
or
aaa
or
jecxz
nop
dec
pop
les
movsl
insb
jecxz
sub
out
sti
pop
mov
test
jl
pop
jbe
aas
or
fwait
xchg
xor
xchg
push
mov
mov
pop
pop
scas
add
add
das
rorb
mov
in
jp
aam
jns
inc
mov
repnz
hlt
mov
out
ret
inc
roll
js
jbe
fisubs
daa
inc
mov
lret
xchg
mov
iret
mov
xchg
mov
and
sbb
rorl
lea
jnp
dec
cmc
stc
pop
aas
daa
adc
fstl
faddl
dec
cmp
dec
jge
xlat
jb
mov
and
or
mov
mov
testl
outsl
daa
sub
stos
cmp
pushf
movsl
icebp
xchg
inc
aas
into
cmp
cmc
cld
lea
jo
shlb
or
sti
add
inc
or
dec
jle
mov
pop
push
sbb
cld
repz
aam
fwait
cmpl
addl
popf
push
outsb
rol
sti
shlb
scas
or
xchg
jle
ret
sbb
pop
pop
mov
into
rcrb
test
adc
push
add
loopne
in
push
jae
loope
mov
pop
adc
jb
mov
sbb
xor
push
jb
xor
sarl
jae
push
jmp
mov
cmc
mov
mov
mov
dec
jecxz
lods
mov
adc
mov
aam
xor
call
sbb
jg
push
mov
adc
fwait
add
out
outsl
push
fsubrl
pop
in
jmp
mov
xchg
test
pusha
mov
mov
inc
and
add
outsl
jp
push
inc
fwait
dec
mov
xorb
mov
aam
xchg
or
mov
pop
push
cmp
fildll
iret
add
aam
arpl
push
divb
pop
jge
aad
dec
movsb
xchg
cmpsb
mov
clc
mov
sbb
push
es
jne
testl
xchg
scas
xchg
into
loopne
repnz
adc
test
int3
xchg
and
pop
push
cld
std
cltd
xor
in
inc
mov
jmp
jne
cmp
andl
xor
fistl
inc
mov
push
lods
test
mov
stos
push
inc
clc
inc
inc
push
xchg
dec
push
cltd
jl
pop
mov
push
inc
aam
cmp
xchg
sub
lea
loope
lret
imull
inc
sub
and
dec
push
pop
jnp
test
hlt
sub
adc
js
sbb
dec
roll
push
push
bound
sbb
sub
push
jp
inc
nop
xor
jecxz
inc
mov
fsubr
lcall
inc
and
aas
mov
leave
xor
push
hlt
mov
ret
cmpsl
mov
test
hlt
push
add
xlat
cmc
sbb
pop
aas
cmp
xorb
jnp
shll
inc
mov
push
jno
je
insb
ljmp
std
lods
or
test
insl
add
sahf
jbe
int3
pop
je
push
shrl
nop
shll
push
out
test
mov
das
out
mov
je
jnp
xchg
lock
or
rol
fbstp
pop
mov
inc
inc
mov
flds
xor
dec
jmp
cmpsb
sahf
scas
ds
addl
sub
mov
fwait
xchg
nop
mov
leave
cli
mov
inc
adc
movsl
cmp
xor
inc
popf
add
dec
es
adc
cli
cmp
les
popf
or
mov
add
jp
inc
loope
lcall
mov
cmp
in
bound
xchg
mov
lods
or
jmp
hlt
sub
mov
inc
dec
cmp
push
rorb
pop
dec
push
out
sub
push
hlt
dec
adc
jo
sahf
repnz
leave
push
add
pop
push
stos
add
cmpl
push
gs
popa
loope
ja
jne
outsb
mov
xchg
fxch
in
inc
pop
test
pusha
int3
arpl
imull
add
mov
or
push
lea
lret
jecxz
sub
idivl
fiadds
dec
fcmovu
adc
outsl
jne
ret
inc
test
and
rcrl
mov
and
nop
out
cmp
fidivrl
or
cmp
mov
mov
std
stos
leave
push
cmc
push
jne
inc
xlat
montmul
cmpsb
les
pop
mov
aad
dec
pop
addr16
scas
rclb
adc
and
or
leave
fistl
sbb
gs
mov
mov
mov
and
push
test
mov
incl
xor
ljmp
pop
cmp
mov
push
mov
inc
sbb
jg
push
cmp
sub
cmp
jge
shlb
insl
testb
pcmpgtd
hlt
dec
fcompl
repnz
je
xchg
xor
pop
push
mov
xchg
imul
mov
xchg
push
es
fstpl
movsl
push
test
pop
fisttpl
xlat
enter
lea
out
cmp
sarb
jno
adc
mov
fsubrs
mov
out
popa
movsl
pop
in
les
aam
ret
popa
push
setl
loope
cwtl
mov
xor
push
movsl
mov
out
xchg
aaa
mov
jp
and
xlat
lea
pop
cmp
mov
push
in
lea
pop
cmp
add
push
add
test
ss
loopne
enter
leave
addr16
push
sub
fistps
mov
cmpsb
cmp
stos
ret
hlt
int3
scas
out
sub
cld
sahf
push
lds
test
mov
scas
inc
frstor
cmp
pop
stos
rcl
repz
loop
fs
adc
insl
xchg
cs
and
sahf
xor
hlt
sarb
lahf
jmp
and
sub
int
std
cmpsl
out
xor
mov
sbb
fistps
mov
icebp
lods
inc
loop
ljmp
inc
add
jae
leave
pop
sti
call
sub
xchg
mul
js
sub
xchg
daa
pop
cmc
mov
inc
add
ja
mov
inc
test
adc
fsts
mov
xchg
xchg
sub
mov
pop
repnz
cmp
xchg
cwtl
cltd
dec
loope
jb
stos
popa
lahf
adcb
xorb
scas
dec
outsl
push
aas
xchg
ljmp
sub
mov
ljmp
jnp
lret
mov
mov
mov
jg
or
cmp
mov
mov
pop
lahf
inc
xlat
shrb
call
aad
outsb
push
mov
mov
xlat
call
or
cmp
ljmp
aad
sub
sahf
mov
dec
pop
dec
cmp
addr16
mov
dec
call
or
insl
cmp
pop
pop
push
mov
cmpsl
push
cmpsl
fidivl
daa
lds
clc
jns
adc
xchg
mov
cmc
out
xor
out
jge
cmp
dec
pop
idivb
in
ficompl
add
and
adcb
out
out
xchg
cwtl
sahf
xor
jbe
push
mov
mov
rolb
mov
out
xchg
xor
cmpsl
sbb
loopne,pt
cmp
daa
add
pop
cmp
jp
dec
dec
jecxz
mov
aam
pushf
push
into
pop
pop
repz
lds
inc
cmp
jb
lea
xchg
pop
out
les
inc
sahf
call
std
xchg
ficoms
push
ljmp
jno
xchg
push
int
xchg
es
push
adc
nop
ja
sub
push
mov
dec
loopne
psrld
enter
dec
loopne
jnp
mov
xchg
into
mov
jo
jmp
mov
adc
push
nop
xor
shll
mov
cmp
jo
imul
jne
psrld
jo
push
movsl
jecxz
popa
adc
jge
or
mov
jb
in
loop
dec
adc
mov
cmp
push
and
mov
lds
jo
mov
jge
imull
jbe
insl
cmpsl
out
or
push
jg
pop
scas
add
ljmp
je
repz
mov
cmp
dec
fbld
jge
repz
adc
inc
ja
dec
cmpsb
fisttpll
jno
insl
add
shll
leave
or
xor
pusha
shrb
ret
outsb
add
push
aam
adc
je
pop
cmpsb
and
loop
jp
shrl
cmp
add
es
out
push
movsl
movsl
or
vmaxsd
test
adc
imul
testl
iret
enter
pop
pop
sahf
xor
gs
jnp
shlb
pop
sahf
js
pushf
xor
stos
inc
loope
xchg
popa
xor
iret
data16
lcall
and
sub
loope
cld
xchg
add
pop
mov
adc
push
call
insw
sbb
cmp
sub
or
aas
mov
outsb
and
pusha
icebp
enter
and
lock
dec
dec
push
sti
sub
pop
pop
das
sbb
add
adc
inc
adc
mov
or
sbb
jl
inc
cmc
mov
rcl
imul
adc
or
or
sbb
and
push
ljmp
addr16
push
sub
icebp
pusha
push
call
in
and
push
cmp
stos
jo
cmp
imulb
fnsave
out
test
xchg
les
and
pop
push
push
push
lods
add
enter
jno
push
push
xchg
add
jbe
inc
push
pop
repz
imul
cmc
rcll
sahf
inc
push
xchg
sub
pop
xchg
xchg
inc
pop
xor
mov
insb
add
sbb
cwtl
das
xchg
filds
popf
mov
loopne
push
lods
inc
cltd
clc
mov
jne
sub
pop
insl
push
movsl
lahf
int3
loopne
add
push
out
inc
push
mov
mov
add
jecxz
adc
inc
pop
or
mov
fsubrs
fwait
insb
add
sbb
jle
pop
scas
inc
mov
testl
dec
jnp
push
stos
ret
repnz
outsl
lcall
aam
mov
jns
mov
mov
into
and
xchg
push
inc
testb
mov
sub
xor
fdivl
std
popf
xor
fcoml
adc
sbb
dec
sti
data16
xor
lcall
fdiv
cmpsl
data16
aam
xchg
and
in
xchg
inc
test
ja
mov
out
mov
in
cmp
inc
pop
sbb
imul
scas
or
loop
in
test
inc
outsl
xchg
or
loope
fbstp
inc
dec
data16
call
loopne
cmp
jbe
stos
adc
jecxz
cmpsl
js,pt
cmp
outsb
cmpsl
and
jmp
xor
repz
mov
mov
cmpb
fsubrs
push
aad
pop
lock
daa
mov
je
ja
test
pop
ja
in
fcompl
shrl
push
jmp
adc
dec
out
testl
mov
xchg
outsl
push
divl
pop
xchg
std
addr16
das
mov
mov
push
fwait
xor
xchg
dec
sub
testb
mov
mov
data16
pop
xchg
idivl
and
inc
pop
hlt
jae
push
in
adc
arpl
into
xor
out
sbbl
mov
adc
aad
imul
sti
xchg
mov
fldl2t
orb
dec
out
cs
pop
fcmovu
je
addb
arpl
cmpsb
add
mov
mov
mov
rolb
es
jb
lret
shr
cld
jns
adc
lret
aaa
dec
std
imul
pusha
testl
es
dec
mov
popa
js
adc
inc
mov
jg
xchg
adc
inc
mov
push
loop
testb
mov
in
pop
push
insl
mov
push
mov
pop
out
xchg
mov
xchg
in
inc
pop
addb
cmp
scas
lds
lods
cmp
pop
jle
fnstenv
pushf
mov
lret
push
jp
dec
in
mov
add
sub
scas
jp
or
xchg
sub
pop
pop
repz
mov
adc
bound
aad
test
ret
hlt
sub
mov
pusha
clc
rolb
hlt
sub
pop
sub
sbb
icebp
mov
jl
inc
xor
mov
pop
xchg
es
pop
ret
imul
dec
pop
sub
mov
and
jle
jp
das
xchg
aaa
inc
mov
mov
dec
pushf
xchg
andl
push
test
iret
cmp
cltd
sub
or
fistl
jecxz,pt
xlat
filds
xor
mov
mov
cmpl
cmp
or
add
hlt
and
jne
mov
dec
mov
cmp
jle
push
cmp
dec
in
jae
sbb
xlat
lock
fisttpl
cmpsl
loope
lods
pop
fyl2xp1
in
pop
mov
out
jecxz
shll
xchg
fnstsw
mov
mov
xchg
out
aas
push
popf
mov
dec
sbb
test
movsb
psllq
jmp
mov
mov
loop
adc
hlt
xchg
fwait
push
add
mov
xor
test
mov
cmp
jp
pop
rcrb
and
fldcw
stos
inc
stos
pop
xor
cmp
jg
outsb
or
dec
stos
pop
or
or
push
fs
inc
push
sbb
cmp
xchg
dec
in
xchg
push
mov
pop
jp
out
cmp
outsb
mov
mov
jge
jmp
dec
leave
in
add
lea
in
andl
dec
sarl
ss
xor
or
clc
push
add
push
daa
pushf
mov
sub
daa
dec
lods
sbb
sti
inc
int
js
jmp
lret
in
and
jnp
les
int3
inc
sub
mov
pop
es
mov
xchg
test
cmp
pusha
inc
icebp
sbb
es
xor
popf
outsl
xchg
cmp
adc
js
jnp
or
sub
jne
enter
scas
rorb
iret
stos
pop
fdivr
inc
movsl
ror
lds
fisttps
sub
lods
xchg
ljmp
insb
test
or
cmp
pop
mov
call
rcrl
inc
movsl
ss
and
or
push
mov
mov
cmp
mov
ret
addr16
fldt
mov
fs
jge
cwtl
fidivl
rcrl
mov
xchg
jmp
or
push
ljmp
inc
iret
inc
ss
rolb
mov
jecxz
arpl
add
incl
mov
and
sti
mov
dec
not
outsb
cwtl
mov
mov
rcl
push
push
adc
fwait
scas
lea
pop
sbb
das
xchg
or
jle
leave
cmp
mov
fildl
incb
lret
inc
jecxz
and
mov
clc
sbb
add
sti
xor
and
clc
and
js
cmp
lret
cmpl
push
pop
sarb
cmp
adc
add
mov
sbb
jecxz
mov
xor
in
mov
rorb
stos
in
push
ds
inc
jl
frstor
sbb
ds
jl
cltd
jae
xor
and
mov
sub
mov
xor
push
sub
dec
rclb
mov
pop
mov
lret
repz
push
repnz
pop
pop
hlt
insb
xchg
adc
lea
loopne
push
dec
hlt
pop
jo
imul
pop
into
xchg
pop
mov
fistpll
inc
mov
cmpsb
lds
inc
shrl
push
sub
inc
scas
jle
mull
enter
cmp
imul
cmc
pop
jg
pop
lcall
push
jbe
pop
stos
cmp
jl
mov
cmp
pop
jo
mov
bound
xlat
cmp
xchg
sub
inc
mov
daa
lret
out
sbb
cmp
add
inc
mov
in
pop
movsb
hlt
mov
sub
movl
adcb
or
mov
lds
sbb
fsubs
add
jmp
bound
ja
and
popf
test
pop
int3
xchg
jecxz
push
mov
out
rorb
jge
lock
pop
rcrl
and
xor
adc
or
stos
jb
pop
dec
stc
mov
and
mov
xchg
push
fnstenv
jp
scas
pop
mov
rorb
arpl
mov
fchs
and
std
nop
mov
pop
xchg
push
imul
jl
jbe
inc
ja
pop
mov
arpl
cwtl
mov
sahf
xor
cltd
leave
mov
enter
jg
imulb
lds
iret
mov
pop
mov
je
pop
lahf
inc
fcom
push
push
aad
div
sub
add
pop
or
int
push
das
add
jae
stos
pop
jo
fidivs
and
inc
lahf
mov
mov
xchg
sbb
xchg
mov
imul
add
pop
in
xor
loopne
ds
in
jg
xor
je
mov
insb
ss
mov
imul
int
and
mov
jno
addr16
xchg
push
xor
sub
push
push
jle
outsl
mov
add
cwtl
gs
stc
mov
dec
fucomip
jl
fadds
push
shll
add
icebp
lahf
movsb
pusha
movsb
clc
push
or
rclb
fdivl
hlt
xorl
pop
mov
icebp
dec
cmpb
dec
imul
dec
cmc
mov
fwait
mov
pop
cmpl
mov
xchg
fcmovnb
mov
mov
push
inc
lods
mov
cmc
dec
cwtl
sarl
xchg
mov
sbbb
lods
sbb
insl
test
jno
aaa
sahf
xchg
mov
add
stos
jne
in
dec
mov
clc
mov
mov
cmp
in
repnz
adc
push
testb
clc
cmpl
rol
inc
enter
popf
lods
mov
imul
push
out
mov
data16
or
mov
repz
and
inc
jns
mov
nop
daa
pop
jl
mov
inc
dec
push
mov
jb
popa
fwait
xchg
xchg
dec
mov
lcall
lock
xchg
test
gs
cmp
popf
dec
shll
fsubrl
loopne
sub
mov
pop
rclb
adc
xchg
stos
sbb
push
nop
sti
and
ja
cmpsl
pop
mov
dec
loop
sbb
mov
les
sbb
mov
pop
add
repz
repnz
aaa
mov
mov
inc
test
shrl
jbe
and
add
push
pop
sbb
xchg
ficoml
dec
xchg
sub
push
xlat
sub
add
inc
sub
mulb
mov
call
test
sbb
repz
decl
test
mov
pop
or
pop
shl
fistpl
loope
fcom
cmp
pop
shld
shlb
iret
push
fstpl
fisttpll
iret
pop
repz
push
scas
je
or
sahf
mov
sbb
nop
arpl
pop
xor
data16
push
negl
mov
lods
inc
jp
or
sbb
in
das
pop
xchg
fistl
js
idivl
mov
pop
mov
sbb
dec
add
imul
and
dec
cmpsl
fidivl
jo
adc
idivl
sti
inc
push
xchg
lea
in
sbbb
loop
sub
in
loopne
int
cmp
fbstp
adc
pusha
shr
movsb
mov
fwait
ss
adc
rcll
jns
or
addr16
lock
adc
add
or
xor
mov
mov
dec
outsb
mov
inc
xor
cltd
orb
cmp
inc
pop
mov
xor
outsb
xchg
mov
std
pop
pop
mov
hlt
pop
push
into
fdivrs
shll
mov
subl
inc
cmp
xchg
inc
adc
ja
dec
and
ret
imul
add
push
stc
lods
nop
push
into
das
pop
and
fwait
jle
fldl
xor
loopne
fs
dec
cmpsb
adc
mov
sbb
push
popf
pop
ret
and
insb
xor
imul
push
and
mov
aaa
rorl
jae
data16
adc
enter
adc
and
or
sbb
push
add
xchg
int
xor
adc
scas
sar
xchg
mov
sub
xchg
enter
iret
jmp
and
jmp
cmpsl
and
and
mov
mov
sti
lds
push
aas
adc
xchg
mov
push
cli
outsl
xor
nop
sbbl
fwait
mov
int
jbe
and
sbb
std
inc
rclb
insb
mov
sbb
es
fnstsw
jg
fnstenv
shrb
xchg
lcall
cmpsb
les
int
lods
xlat
push
aad
in
jbe
mov
adc
fstpl
xchg
jbe
add
out
cmp
nop
stos
sbb
or
add
jmp
pop
iret
and
sub
dec
mov
shld
cmpsb
pop
jl
push
jo
xchg
xchg
movsb
inc
jns
push
add
cltd
daa
dec
in
mov
adc
sbb
into
inc
sub
jle
gs
jb
and
dec
xor
stc
bound
push
or
dec
shrl
in
nop
jnp
and
mov
mov
fistpll
dec
jecxz
xor
divl
clc
hlt
test
ljmp
inc
int3
sub
insb
jg
mov
arpl
jle
mov
push
add
add
lahf
push
xor
ds
fisttpll
pusha
int3
push
xor
dec
jl
test
pop
pop
mov
xor
xchg
xchg
pop
sbb
popa
movsl
cmp
xor
lods
retw
aaa
out
ja
nop
mov
aaa
in
or
adc
ds
xor
xchg
sarb
ret
dec
addr16
mov
insb
jb
scas
inc
ss
xchg
movsb
divl
cmc
outsb
mov
jecxz
pop
out
in
aad
pop
mov
or
cmp
and
stos
push
mov
jg
inc
lahf
aam
and
stos
jns
imull
inc
sub
jno
in
test
daa
fbld
out
adc
add
outsl
fstpt
cmpsb
dec
movb
inc
fnstsw
fbstp
fcmovnbe
push
cmc
rcl
jno
pop
ret
and
mov
enter
aaa
call
loopne
push
adc
mov
jbe
xlat
loopne
sub
std
xor
pop
sti
xchg
jb
nop
pop
inc
inc
dec
rcrl
xor
xchg
std
push
into
scas
fucom
push
mov
fldcw
out
into
pop
iret
fcomp
popa
clc
xlat
stc
push
mov
flds
pop
int
fisttpl
fcmovbe
and
hlt
lar
add
loop
cmp
nop
loope
je
mov
push
or
lods
imul
repnz
adc
les
xchg
adc
mov
int3
xchg
dec
int3
push
lret
mov
cltd
or
adc
mov
aam
test
xchg
decl
cmp
lahf
aad
pmovmskb
pop
fcmovu
shl
daa
call
pusha
mov
fidivl
fisttpl
loopne
test
repz
ss
add
loop
out
inc
mov
fwait
xor
stos
pop
inc
xlat
ljmp
add
lret
loope
out
xchg
xlat
hlt
sbb
loop
or
clc
mov
jmp
mov
pusha
test
movsl
cmp
out
cltd
sbb
jo
push
roll
xlat
and
cmp
gs
dec
es
or
mov
ljmp
psrld
pop
push
fmul
push
int
pop
mov
fidivs
rcll
mov
in
dec
sbb
out
pop
sbb
dec
or
add
or
lret
and
adc
pop
cltd
jp
cmp
stos
inc
fidivl
push
fadds
xchg
xor
sbb
sarb
xchg
es
xor
adc
arpl
ja
lahf
jo
insl
inc
or
out
push
xchg
js
mov
and
arpl
mov
cmpsb
push
jg
sub
mov
adc
stos
fsts
test
inc
enter
fcoml
adc
push
add
add
repnz
testb
inc
adc
mov
popf
aaa
dec
aam
rdmsr
hlt
lods
push
inc
mov
mov
imull
mov
daa
loopne
out
loop
mov
push
add
fucomip
ss
test
inc
jmp
pop
std
fdivrl
sub
test
mov
xchg
rclb
mov
orb
cwtl
mov
add
sbb
imul
stos
test
push
iret
sahf
xorl
lods
xor
sbb
ret
mov
fmul
cmp
sbb
roll
loop
frstor
out
mov
pusha
lret
lds
sub
iret
sub
aad
mov
xor
or
push
xchg
jnp
push
lods
or
push
jbe
nop
mov
mov
js
push
test
gs
std
xchg
jle
pop
cmc
xor
popf
mov
inc
into
imul
je
and
jle
dec
js
into
cmp
sub
outsl
mov
icebp
cmc
sbb
mov
rorl
mov
push
arpl
adc
mov
inc
sub
fs
mov
and
es
test
fs
lcall
push
aam
jecxz
popa
lahf
jns
lret
mov
push
mov
fisttpll
mov
mov
adc
xchg
mov
test
cs
mov
push
cmp
mov
hlt
in
jl
lret
mov
jge
rclb
imul
and
xor
xchg
inc
inc
shlb
fcoms
loop
into
adc
repz
or
pop
cwtl
sbb
xor
lcall
pop
icebp
inc
aam
cmp
stos
bound
mov
cwtl
nop
outsb
dec
xor
dec
daa
imul
add
mov
pop
adc
stos
push
mov
aam
pop
hlt
sub
sbb
sti
inc
frndint
xchg
lret
stc
inc
in
aas
out
adc
xchg
or
cmc
xor
es
add
mov
xor
cwtl
popa
and
adc
pop
cmp
and
adc
insb
cmp
xchg
pop
arpl
cltd
inc
addl
and
jb
cltd
mov
inc
or
sbb
sbb
ljmp
lods
pop
lods
mov
scas
gs
cli
lea
push
cmp
sub
loop
mov
pop
sahf
mov
loope
cmpsl
mov
lcall
mov
push
sbb
dec
mov
sbb
cmpb
push
sub
cmpb
out
mov
jmp
arpl
add
inc
repz
mov
xchg
ret
js
mov
xchg
sub
imul
in
cmp
and
adc
stos
iret
push
push
int
insb
mov
mov
inc
scas
jno
pop
push
dec
mov
outsl
and
jns
mov
ljmp
adc
xor
cmp
testl
mov
incl
fnstenv
adc
mov
nop
daa
mov
cmp
jmp
fimuls
cli
lock
sub
es
pop
mov
stos
pop
pop
mov
fs
scas
xchg
sub
adcb
filds
jecxz
add
push
and
pop
mov
mov
rcll
aaa
loop
xor
cmp
pop
in
cmp
xor
sbb
xchg
push
xchg
aaa
jb
push
dec
mov
cwtl
jae
jae
mov
pop
adc
mov
je
push
mov
mov
in
xor
int3
cmp
xor
ja
into
int
mov
repz
aad
push
fldcw
pop
mov
out
enter
leave
lret
ror
adc
loop
dec
jecxz
aad
inc
leave
xchg
mov
inc
orl
pop
adc
test
aaa
insl
shll
xor
push
out
or
pop
cmp
pop
mov
pop
sarb
add
mov
loop
adc
data16
in
stc
daa
movb
pop
int3
fidivl
jnp
xchg
push
jle
insl
outsl
push
outsb
mov
inc
xchg
sub
pop
les
lahf
jg
dec
dec
sbb
push
mov
clc
mov
fs
mov
mov
sti
mov
mov
cli
adc
test
mov
mov
jmp
imul
lods
push
shll
push
dec
std
fdivrs
movsl
inc
aad
jmp
cmp
xchg
sub
mov
xor
mov
into
aas
sbb
sub
mov
rcrl
idivb
push
mov
dec
in
arpl
pop
add
push
ret
push
sub
xchg
mov
stc
push
out
loop
push
mov
add
cmpsl
jbe
pop
into
push
and
das
adc
les
loope
fldenv
mov
call
test
mov
push
mov
stos
clc
push
mov
xor
inc
pop
mov
out
inc
insl
arpl
insl
jge
jmp
add
inc
enter
mov
iret
and
clc
and
add
lock
xor
repnz
mov
aaa
and
test
sub
mov
or
mov
dec
pop
jge
pop
dec
pop
icebp
test
add
sub
das
mov
and
in
loop
rcr
ret
aad
arpl
int
movsl
xor
fs
add
es
stos
push
mov
mov
cli
or
lds
js
ja
ljmp
mov
imul
jl
pop
popa
outsl
iret
xor
push
pop
push
push
mov
arpl
test
incb
mov
mov
inc
mov
and
mov
pop
dec
pop
les
and
pushf
jbe
repz
popa
loope,pt
and
jbe
or
es
push
pushw
aaa
sub
jo
in
push
mov
push
xor
mov
and
addl
push
jle
xchg
pop
mov
mov
and
push
and
imul
imul
sarl
jns
ljmp
push
jecxz
imul
inc
lds
hlt
cmpsl
imul
xchg
xchg
loope
push
lods
sahf
roll
in
jp
lock
adc
sub
jmp
jnp
pop
scas
scas
pop
adc
inc
aam
in
sbb
shrl
mov
cwtl
lea
rorb
mov
mov
push
dec
roll
mov
leave
pop
mov
decl
iret
xor
jno
mov
xchg
cmp
cmpsb
cmp
add
es
imul
mov
pop
imul
cli
es
jnp
pop
inc
aas
lret
sub
mov
movsl
inc
hlt
sub
cmp
stos
pop
fists
cld
loopne
lret
dec
mov
pop
loopne
scas
test
stc
nop
inc
xchg
or
adc
pusha
stos
data16
stc
xor
imul
or
lahf
mov
dec
mov
orl
lods
pop
adc
ficoms
bound
hlt
cmp
cmpsl
pop
jp
inc
fistpl
out
and
push
imul
pop
fs
call
and
pop
mov
adcb
les
rcrl
mov
loopne
gs
cmp
sahf
mov
push
test
xchg
aas
add
aad
mov
aas
sbb
and
inc
jno
lea
les
fdivrp
push
mov
clc
les
shll
or
mov
mov
adc
mov
cld
xor
cmc
mov
into
jne
push
inc
mov
stos
pop
pop
xchg
cs
xchg
push
dec
push
mov
cmpb
lahf
cmp
gs
xor
dec
or
lea
ret
mov
mov
push
out
leave
aad
cmp
int
mov
sbb
in
lods
mov
push
ret
push
add
xchg
cmp
insl
dec
mov
daa
inc
pop
ret
dec
inc
sbb
addr16
aaa
call
out
outsl
mov
mov
cli
out
fs
inc
add
adc
push
jmp
xchg
stos
mov
pop
pushf
jns
into
push
dec
sarb
jmp
test
sbb
inc
mov
xchg
xor
int
inc
fdivrl
jmp
pop
mov
aam
pop
repz
rorb
cmp
in
cltd
ret
sub
sbb
jbe
stc
adc
mov
mov
mov
push
mov
leave
xchg
push
mov
repz
cwtl
pop
pop
jne
stos
das
jae
jl
pop
mov
jp
pop
mov
ss
jae
pusha
clc
sub
or
popl
adc
imul
cmc
leave
pop
repnz
mov
cmpsl
loop
lcall
nop
mov
in
jecxz
insl
adc
ss
mov
mov
sub
dec
cmpsl
ds
or
cs
in
cmc
jecxz
daa
subl
aam
and
fwait
pop
mov
daa
test
pop
in
cmp
pop
lods
aas
pop
bnd
in
rclb
inc
mov
test
xchg
rep
add
sub
test
and
fwait
das
aas
mov
ret
repz
adc
inc
sahf
das
iret
addr16
arpl
pop
push
mov
and
pop
add
lods
inc
lods
push
lret
lret
fdivl
pusha
mov
notl
jp
adc
adcl
loop
rcrl
xchg
sub
push
mov
mov
int3
and
dec
iret
data16
stos
inc
push
popf
in
inc
lret
pop
lock
bound
or
cmpl
pop
or
mov
cmp
data16
fidivl
sbb
lret
lahf
ss
mov
iret
sub
inc
and
mov
mov
jbe
gs
mov
ret
adc
lods
cmp
mov
mov
or
add
call
pop
dec
add
or
ret
inc
imul
mov
pop
out
inc
xor
xor
popf
jno
inc
ret
mov
lahf
dec
pop
mov
adc
adc
test
and
jbe
mov
mov
packssdw
gs
ja
loop
cmp
cld
push
out
sti
insl
jne
lods
or
fmull
adc
ljmp
movsb
js
adc
movsb
fwait
push
cmp
xchg
push
or
aam
mov
sti
mov
hlt
mov
das
shll
xchg
pop
cli
cmp
into
enter
cmovp
imul
lcall
pop
pop
inc
insb
sub
mov
sbb
adc
jns
dec
scas
lret
loopne
sub
dec
ss
mov
cmp
fnsetpm(287
jbe
or
lock
dec
sub
jmp
jno
fisttpll
ret
das
iret
int3
push
fnstsw
notrack
dec
cli
xor
out
jne
jp
imul
mov
pop
stos
adcb
ret
sbb
stos
push
out
sbb
add
adc
mov
arpl
mov
jae
arpl
aaa
pop
fstpt
iret
aaa
cmp
add
mov
or
pop
bound
les
push
imul
pmaddwd
fistpl
test
push
sbb
outsl
cli
repz
mov
mov
cmp
push
loopne
xchg
inc
xor
push
xor
js
test
loopne
test
push
mov
cmc
mov
xchg
inc
cwtl
sti
movsb
jge
cmp
add
jp
test
fs
sbb
in
loope
mov
mov
push
pop
imul
jg
fisttpl
sub
les
mov
xchg
mov
enter
push
lea
and
sbb
icebp
call
inc
add
xchg
xor
pop
dec
dec
mov
xchg
xor
jo
out
popf
fwait
mov
pop
mulb
imul
decb
out
inc
jmp
push
daa
aam
push
jge
imull
std
xchg
pop
ud2
mov
in
and
test
xor
out
movsl
lahf
mov
push
and
push
out
int3
lds
mov
test
inc
dec
add
jno
das
fistl
xlat
outsb
test
outsb
es
test
cmp
mov
and
insl
xchg
dec
or
enter
mov
mov
xchg
dec
loope
or
jl
daa
mov
xchg
dec
in
aas
or
mov
and
in
xchg
dec
leave
pusha
xorb
jle
sbb
push
popa
mov
out
jp
and
cmpsl
stc
dec
jecxz
or
mov
adcb
test
jbe
imul
fisubrs
adc
xchg
mov
mov
dec
or
add
add
mov
cmp
xchg
and
cmpsb
sarb
mov
lret
pop
add
mov
xlat
jle
mov
repnz
pop
add
outsb
mov
pop
bnd
xchg
push
jecxz
cmp
sub
sarl
cmp
jne
add
add
icebp
adc
pop
push
jecxz
adc
adc
iret
cmc
sarl
and
insl
cmp
pop
dec
jge
add
out
jne
fs
xchg
push
test
insl
jl
fnsave
jge
xchg
and
loopne
lock
popl
push
mov
and
dec
adc
js
mov
imul
mov
pop
add
mov
into
xchg
les
loope
pop
push
in
loop
xchg
nop
add
std
ret
fadds
dec
test
jne
popf
dec
adc
mov
mov
into
xchg
bound
imul
sti
pop
jno
mov
lods
and
scas
xor
xchg
outsl
hlt
push
les
push
sti
loop
xchg
repnz
push
sti
ss
cmp
ret
insl
lock
insl
lock
dec
push
push
push
cmpsb
addr16
leave
xchg
popa
je
adc
jbe
ljmp
add
sub
dec
add
mov
je
push
movsb
mov
and
xchg
mov
xor
rcrl
dec
sti
cmp
mov
sbb
xlat
jns
mov
lods
inc
ss
lret
xchg
nop
cmp
pop
hlt
pop
add
push
adc
pop
cld
sarb
fildl
adc
mov
sahf
lock
add
js
push
nop
cmp
push
flds
push
sbb
pop
mov
jg
push
mov
mov
sarb
add
xchg
icebp
pop
test
mov
addr16
imul
inc
ret
lods
or
jecxz
add
pop
sahf
push
aad
add
js
lock
andb
mov
or
pusha
mov
mov
jns
sbb
std
inc
push
or
xchg
push
rorl
pushf
dec
or
leave
ret
xchg
out
xor
imul
je
xchg
cld
outsb
out
mov
lcall
ror
xchg
push
subb
cmc
data16
insb
in
scas
cli
icebp
bound
mov
fnstenv
stos
insb
in
das
popf
push
add
aaa
cmp
call
hlt
jno
xorl
aad
dec
mov
in
xchg
xchg
roll
push
mov
insb
out
lret
bound
adc
pop
push
aad
inc
test
add
inc
adc
cmc
gs
jnp
pop
and
jo
xchg
cmp
ror
test
sbb
add
rolb
cmc
pusha
adc
std
pop
dec
dec
repz
xchg
lret
mov
ret
mov
movsl
dec
or
rorl
f2xm1
in
push
les
dec
or
leave
mov
cmp
xchg
mov
movsb
add
pop
inc
or
leave
mov
xchg
lcall
dec
or
mov
push
push
test
push
nop
push
push
push
popl
jge
inc
adc
fcoms
pop
lods
pushf
cmp
test
sbb
jg
mov
mov
fnstsw
pop
pop
mull
popf
cmp
adc
sbb
cmp
outsl
sub
sti
sbb
inc
scas
daa
loop
popf
cmp
std
hlt
sbb
outsl
out
lea
sbb
fnstsw
inc
das
cmpsl
arpl
hlt
sbb
out
addr16
mov
hlt
sbb
stc
mov
scas
daa
in
pushf
xor
sti
stc
sub
mov
outsl
je
faddl
jp
lods
dec
imul
repz
out
popf
and
mov
cmp
or
sub
das
cltd
adcb
mov
loop
lods
daa
sub
xor
lret
clc
dec
test
out
sbb
cmp
jno
lahf
pop
std
add
sbb
mov
dec
test
push
mov
bnd
adc
inc
imul
push
jge
inc
adc
fs
rorl
jnp
rclb
mov
shrl
mov
aaa
sahf
pop
sbb
call
out
adc
cmpsb
nop
lds
das
scas
lds
jp
sti
aam
enter
push
inc
jp
mov
mov
sub
mov
jae
jle
orl
inc
or
test
lods
xor
aad
mov
stc
pop
jecxz
js
mov
and
imul
add
inc
mov
inc
int3
xchg
outsl
hlt
loopne
std
test
aaa
pushf
loopne
mov
in
cmc
fldl
sarl
push
ficompl
dec
sysret
fdivrl
xlat
add
inc
mov
call
xchg
mov
jecxz
orl
adc
mov
scas
loopne
inc
xchg
cs
xchg
xor
imul
mov
stos
push
clc
out
inc
pop
shl
arpl
stc
add
xor
clc
jg
mov
xchg
cmp
in
jo
sahf
xor
push
or
push
out
dec
adc
hlt
push
cld
dec
sti
ja
cmp
gs
adc
jo
dec
push
jge
inc
push
pop
imul
imul
outsb
repnz
sub
sub
inc
pop
xor
dec
jge
cmp
out
stc
arpl
mov
mov
pop
std
xor
pop
aas
lahf
xchg
call
sub
stos
jg
stos
enter
mov
orb
int3
mov
or
jge
push
xor
dec
sub
xchg
out
dec
loopne
jno
xchg
test
and
in
insl
std
cmp
xorl
push
std
pop
test
jno
ffreep
xchg
fnstcw
lcall
gs
mov
xor
sub
and
add
add
lds
fldl
out
imul
imul
imul
ljmp
sub
pop
xchg
adc
cmp
mov
mov
jge
push
shr
dec
mov
xchg
stos
mov
add
jnp
loopne
cltd
popa
mov
fwait
pop
or
mov
add
jg
pusha
mov
jae
popf
repz
loop
aas
pushf
xchg
addr16
cmp
rcl
inc
lods
pop
push
add
mov
cmpsl
sub
fldl
push
add
movsl
pushf
mov
push
out
xor
fs
add
stos
cli
addr16
jae
call
jl
mov
add
aaa
mov
in
xor
es
xchg
repz
xor
loop
push
idivl
repz
loopne
ss
imul
adc
orl
and
mov
std
xchg
mov
int3
arpl
stc
sub
xchg
adc
inc
movsl
daa
loop
mov
cmc
ss
xor
push
lcall
test
out
xor
pop
std
ljmp
push
adc
dec
mov
imul
scas
cli
cmpsb
ret
int
adc
sbb
fcmovnb
mov
inc
mov
pop
xchg
les
test
mov
loope
roll
or
scas
and
xor
shl
mov
mov
sbb
js
mov
insb
push
ret
pop
or
repz
sub
push
dec
aas
add
mov
repz
mov
mov
xchg
xchg
cmp
jp
adc
stc
imul
out
imul
sbb
dec
xchg
cmp
push
cli
pop
adc
mov
lahf
aaa
lcall
iret
xchg
test
lods
das
rcrl
in
fcmovnbe
jl
cli
std
pop
js
jns
cmp
shlb
mov
out
mov
jecxz
in
mov
faddl
imul
push
sti
iret
andb
hlt
sbb
ja
orb
into
add
pop
incl
push
mov
jb
or
lods
imul
jae
test
xchg
fsubs
roll
sahf
mov
mov
pop
dec
or
stc
xchg
inc
addr16
add
aam
inc
int
cmp
roll
xchg
sahf
cmp
clc
int3
out
sub
xor
dec
mov
sub
into
rorl
int
adc
in
or
lock
pop
scas
inc
dec
or
cmp
scas
mov
sbbl
xchg
ss
jns
in
sbbl
pop
push
rolb
filds
pop
int
fidivrl
adc
mov
stc
fs
xlat
jns
sub
jno
lret
adc
inc
lcall
push
orl
loope
sub
cmp
sub
cmp
in
jb
aas
add
pop
adcl
mov
insl
iret
mov
sbbl
fmuls
loopne
fwait
and
stc
mov
out
push
or
mov
inc
jl
push
push
pushf
pop
outsb
lea
jg
into
mov
arpl
xchg
and
imul
push
enter
test
gs
insl
push
sti
pop
push
imul
iret
or
xor
sbb
lret
rcrl
lods
cmp
mov
leave
inc
cmp
sti
pushw
mov
add
aam
int
imul
gs
mov
subb
mov
lock
ds
insb
inc
xchg
dec
jae
xchg
inc
hlt
outsb
fdivrl
jmp
mov
push
mov
fidivrs
lret
cld
xor
xchg
bound
xchg
std
sub
int
add
jns
mov
xchg
mov
mov
in
jle
sbb
add
fnstsw
mov
lcall
psrlw
mov
inc
dec
push
xor
ficomps
cmp
daa
fsubrs
stos
or
je
push
inc
adc
test
cwtl
cmp
push
add
jp
in
sbb
push
mov
imul
xchg
je
mov
imul
cmpl
mov
push
js
mov
mov
ss
jg
dec
loope
mov
call
mov
lock
inc
adc
call
inc
adc
jg
or
add
mov
test
sbbl
inc
test
enter
popa
mov
stos
nop
cmp
push
flds
sub
jbe
pop
fcmovnu
js
mov
pusha
into
push
std
pop
push
sbb
xchg
ja
add
jle
cmpb
mov
test
lods
lock
and
or
and
bound
es
pop
in
addr16
xchg
mov
dec
mov
xchg
repnz
push
int3
cmp
inc
xor
cmpsl
xor
les
ljmp
leave
test
cwtl
cmp
inc
clc
or
xor
je
dec
std
xor
clc
cli
jno
call
shrl
sub
pop
pop
pop
into
out
fadds
cltd
or
push
int3
xchg
aaa
aad
into
xchg
insl
or
les
std
gs
xor
mov
inc
or
fnsave
mov
cmp
shrl
and
hlt
jbe
cmp
xchg
mov
hlt
outsl
lea
scas
test
pop
cli
clc
or
lock
pop
sti
jns
push
lret
shll
sbb
loope
and
les
repnz
out
insb
lret
mov
ja
imul
insl
adc
sbb
bswap
je
rolb
cmpl
cwtl
cmp
rcrb
push
das
sbb
inc
adc
std
pop
sti
maxps
bound
add
jle
outsb
or
and
cli
fdivs
je
sbb
inc
sbb
add
shl
mov
add
cli
stos
orl
add
repnz
repnz
dec
call
push
xchg
mov
xor
orb
out
jno
fistl
lods
cs
stos
shrb
xchg
test
pop
cmc
inc
aad
mov
fs
pop
popa
push
inc
or
cmc
and
fsubp
dec
adc
or
mov
mov
jne
mov
xchg
cmp
fs
rcrl
test
add
arpl
shll
lock
mov
mov
push
int
sub
pop
scas
js
mov
mov
mov
sbb
adc
push
outsl
mov
cwtl
pusha
mov
pop
les
les
xchg
xlat
xlat
ret
mov
cmp
jg
lea
insl
clc
bound
xchg
cmp
push
sti
fcmovnb
inc
pop
adc
pop
mov
push
decl
into
mov
daa
in
mov
mov
xchg
jmp
inc
or
xchg
loope
adcb
rcrb
mov
test
add
add
pop
mov
pop
das
pop
add
nop
sbb
lock
sub
stos
adc
cs
xor
cmpb
and
cli
adc
xor
add
cmpsl
bound
dec
or
add
out
pop
stos
ss
sti
in
push
sbb
dec
push
mov
mov
scas
push
shrd
cld
lds
fwait
jmp
pop
pusha
into
inc
pop
pop
ja
aad
mov
lds
and
loopne
enter
ds
frstor
test
sti
shrb
mov
xchg
inc
mov
movsb
dec
or
and
jle
fidivl
rcl
jp
loope
inc
cmp
enter
and
push
inc
cli
gs
mov
cmp
ffree
fbld
mov
mov
ja
xchg
out
outsl
mov
or
movsl
lret
xchg
stos
sub
popa
js
add
adc
test
mov
cmp
fnstcw
insb
xor
jne
adcb
lods
daa
call
divl
lahf
cmp
vpaddsw
insb
inc
jae
cld
mov
les
sbb
adc
orl
fst
mov
adc
stos
xor
outsl
hlt
and
es
ret
jp
movsb
data16
pop
pushf
je
lcall
aad
jg
lds
cwtl
xchg
add
iret
mov
out
outsl
sti
pop
cmp
aaa
mov
cmpsl
dec
loopne
jle
stc
jmp
or
addr16
orb
jmp
adc
dec
fimuls
sar
pop
sub
pop
dec
inc
in
lock
icebp
pop
sbb
inc
or
sarl
cltd
inc
out
in
push
repnz
xchg
inc
mov
and
inc
add
loop
cmp
add
xor
aaa
fildl
scas
test
xchg
dec
neg
sbb
fsubl
lods
sub
out
out
xor
shll
cmp
push
cmpsb
lds
aam
jo
push
or
out
and
leave
dec
das
mov
sbb
xor
pop
arpl
sbb
and
xchg
push
faddl
std
jl
ja
out
or
pop
cld
jbe
push
add
insl
out
push
or
pop
iret
lahf
outsb
jmp
push
je
jb
pop
push
add
lods
roll
sub
xor
sub
stc
sbb
dec
pop
add
or
xor
fcoms
addb
outsb
sbb
add
lods
movsl
xor
pop
cmp
mov
jns
fdivrl
fdivrs
xchg
xchg
jp
pop
cli
add
pop
cmp
cld
sub
push
add
xor
rolb
mov
cmp
mov
mov
add
sub
pop
jae
and
mov
pop
mov
push
lock
mov
mov
and
pop
mov
mov
scas
pop
add
jns
xlat
and
inc
mov
push
sti
hlt
inc
sbb
add
push
negb
jp
ja
and
xlat
adc
cmpb
in
popa
movsl
xor
movsb
xor
mov
mov
jge
inc
sahf
jp
stos
add
xor
push
cs
xor
mov
jl
dec
adc
imul
repz
movsl
jae
push
stc
aaa
data16
sub
push
pusha
mov
stos
push
add
loop
inc
lret
imul
dec
or
prefetchw
or
or
sub
cmp
dec
or
adc
push
fnstcw
data16
jmp
cmc
sti
pop
and
es
outsb
pop
inc
fisttpl
loopne
decb
fs
loop
lock
ds
or
sub
jg
xor
lret
and
sbb
dec
mov
jmp
sub
jecxz
pushf
cmp
cld
pop
mov
xchg
mov
addl
aas
js
push
add
sti
pop
out
xchg
sbb
and
out
mov
pop
inc
orb
jmpw
mov
arpl
add
psrlw
push
sub
pop
xchg
cmp
jle
sub
fsubrs
subl
cmp
faddl
mov
mov
sti
pop
pop
rcrl
mov
lock
xchg
inc
mov
pop
rorl
fcom
test
mov
bound
rorl
xchg
dec
mov
sbb
or
dec
adc
pop
sub
jns
mov
mov
add
mov
inc
mov
jae
sbb
scas
or
movsb
ja
xor
ja
or
jb
inc
or
jbe
and
lret
ja
fcmovne
inc
negb
mov
outsl
fcmovne
xchg
sbb
dec
ss
push
xlat
jnp
test
xor
mov
and
mov
sub
pop
ljmp
pushf
and
mov
sub
cmp
mov
xchg
orl
cmp
lods
push
lea
mov
mov
lds
filds
jmp
sub
dec
mul
push
lahf
lret
xchg
lcall
pop
cli
das
mov
lock
pop
dec
and
lcall
sbb
adc
dec
cmp
in
fwait
inc
or
and
pop
pushf
or
mov
sub
add
mov
inc
inc
or
enter
in
sarl
or
sbb
xor
push
xchg
inc
cli
mov
xchg
adc
fs
push
add
xor
jno
imul
jmp
scas
sub
ja
imul
mov
rcll
xchg
and
add
roll
ret
mov
adcl
or
pop
dec
xor
bound
jbe
test
jnp
dec
and
mov
scas
mov
or
pop
mov
scas
xor
mov
push
sti
dec
inc
negl
pushf
inc
or
fsubrs
int
push
mov
inc
out
in
jns
test
mov
roll
add
aaa
into
xchg
lahf
cs
pop
add
add
mov
inc
cs
lea
aaa
mov
mov
push
in
cmp
test
or
popl
pop
pusha
ljmp
stos
ss
iret
xchg
dec
popa
fildl
jne
dec
out
cld
popa
jmp
add
or
lret
xchg
out
cmp
jl
xchg
mov
mov
adc
sbb
dec
rorl
mov
xchg
js,pn
push
pop
cmp
xchg
lea
xchg
fisttpll
pop
insl
or
jne
mov
outsb
cmp
xlat
fidivrs
pushf
adc
lret
inc
mov
or
orb
mov
ss
xor
gs
mov
and
aaa
xchg
dec
xor
stc
pop
sub
jmp
sbb
movsl
xor
in
insb
and
cmp
aam
xchg
inc
xor
cs
in
rorb
add
call
icebp
cmc
fs
cmp
arpl
lahf
fstpt
iret
add
mov
sbb
push
loop
and
jae
push
mov
scas
cmp
lcall
push
movsl
mov
sbb
jo
int3
mov
push
lret
clc
ja
sbb
jmp
das
fbstp
inc
or
cmp
repnz
mov
mov
cmp
test
mov
int
mov
hlt
arpl
xlat
inc
adc
push
dec
push
fbld
jmp
push
pop
mov
mov
jmp
repz
mov
test
shll
test
pop
push
jl
dec
scas
aas
xchg
cmp
mov
lods
xor
cmp
test
xor
test
in
jge
movsb
push
cli
int3
nop
pop
test
lods
cld
sbb
jo
in
pop
add
xor
imul
add
in
call
das
lods
inc
int3
test
cltd
mov
inc
imulb
mov
test
pop
add
mov
adc
cmp
outsl
hlt
jne
in
jne
imul
lea
inc
or
dec
das
mov
xchg
loope
dec
orl
mov
pop
lret
push
jge
and
mov
scas
push
clc
cmc
pop
xor
shl
adc
loope
cmpsl
sub
idivb
imul
mov
mov
add
out
adc
decl
popf
aas
jmp
stos
pop
adc
mov
mov
enter
out
jo
pop
dec
adc
sub
lods
mov
jae
push
cmp
inc
ljmp
mov
add
push
add
sbb
mov
xor
iret
mov
mov
pop
test
mov
adc
mov
in
aam
dec
or
adc
loop
lret
lea
add
das
arpl
int
xor
dec
xchg
hlt
pop
mov
lods
xchg
push
fnstcw
arpl
mov
dec
adc
popf
ret
or
mov
dec
adc
fisttpl
shrb
mov
mov
and
add
inc
or
cmp
xchg
mov
add
lock
call
xchg
cmp
loopne
cmp
push
adc
stc
or
mov
cltd
cmp
lcall
and
inc
adc
inc
inc
adc
lret
xchg
cld
pop
dec
in
fcmovnb
xchg
ret
pop
leave
sbb
bound
loope
pushf
insb
aad
mov
pop
push
sub
test
fisubrl
aaa
movsb
int3
mov
mov
in
push
jp
aam
mov
and
add
pop
ljmp
mov
sarb
sbb
push
movl
ss
push
sub
mov
outsb
out
repnz
inc
rcl
insl
jmp
mov
cmpsl
sub
or
cmpsb
cmp
test
lds
into
xchg
leave
pushf
int
inc
sbb
add
ss
add
roll
add
mov
or
iret
in
pop
xchg
cmp
add
je
dec
jns
inc
mov
in
negl
cmpsl
dec
adc
xlat
jae
mov
mov
sub
ja
jmp
push
loope
sub
mov
mov
mov
in
subl
sub
adc
negl
inc
adc
into
pop
jno
jmp
not
icebp
data16
dec
or
cmp
aad
jecxz
sbb
popf
cmpsl
mov
jno
lds
data16
cwtl
sbb
ret
pop
into
xchg
ja
lods
and
and
ret
sub
aas
mov
push
ja
loopne
dec
bound
xlat
lahf
dec
or
mov
je
xchg
fnstsw
cmp
mov
push
add
stos
stos
daa
aas
add
mov
and
int
not
test
cmp
bswap
subl
imul
cmpsb
push
jne
cmp
negl
sub
ds
dec
je
push
or
loope
ficompl
jge
aaa
lcall
cmp
cwtl
vmovdqu
into
adc
in
sub
jno
mov
popf
mov
dec
push
aas
mov
or
mov
sbb
or
jno
dec
push
cltd
insl
insl
mov
ret
ret
into
xchg
adc
loopw
mov
mov
fstl
scas
loop
xor
mov
cmpsb
daa
add
mov
rcrl
gs
cmp
push
out
jo
pop
dec
or
cmp
or
nop
ficoml
cmpsl
or
hlt
mov
add
movsl
popa
hlt
sub
into
mov
cmpsb
pop
mov
cli
dec
jge
push
jbe
jge
mov
push
add
mov
mov
add
add
sub
adc
fbstp
inc
xor
jae
call
push
push
aad
jl
int
and
cmp
xchg
cmp
lock
mov
inc
or
aam
pushf
popa
pop
cld
cmpsl
int3
push
mov
out
push
add
pop
lods
mov
lret
pop
sti
push
ja
outsl
ds
outsb
pop
and
inc
mov
mov
mov
push
push
jo
push
orb
add
pop
cmc
gs
ds
xchg
dec
xchg
inc
or
push
arpl
and
cmc
gs
inc
into
mov
mov
cmp
mov
xchg
pop
cmp
push
dec
int3
mov
inc
mov
aam
mulb
jg
adc
dec
stos
sub
into
bound
inc
mov
xchg
ret
popf
imul
and
inc
jmp
hlt
fwait
mov
adc
aaa
mov
dec
or
fldl
filds
cmp
pop
jp
push
shll
stos
pop
clc
mov
mov
xchg
inc
pop
sbb
dec
or
mov
out
jne
mov
gs
movsb
sub
psubw
sub
inc
or
cmp
fs
mov
mov
pop
cld
push
push
aad
in
mov
daa
push
xor
in
and
inc
adc
stos
repz
fimull
repz
push
adc
push
aad
xchg
nop
nop
int
test
xchg
inc
fucomip
push
in
stos
sub
jge
inc
psubusw
push
into
push
jbe
pop
adc
mov
xor
in
or
fdivrs
xlat
mov
daa
mov
mov
fdivrs
repz
cmc
jno
imul
cmpb
jge
adc
lcall
push
pop
add
cwtl
inc
movsl
push
rorb
jl
sbb
dec
movsl
sub
cmpsl
orl
lea
xlat
enter
hlt
pop
lea
in
mov
mov
pop
movsl
push
cmp
mov
mov
in
imul
aam
scas
xor
or
gs
push
arpl
iret
fwait
rorb
rclb
or
and
les
ret
mov
mov
sahf
jle
sti
pop
leave
jns
lock
mov
shl
adcb
das
scas
mov
mov
pop
sti
inc
mov
scas
arpl
jmp
into
gs
pop
or
pusha
and
outsl
es
mov
dec
fsubrs
or
das
stos
pop
pop
jo
stc
mov
nop
add
scas
jb
mov
mov
and
out
outsb
or
jmp
xchg
jecxz
js
das
cli
sbb
divl
jg
enter
jb
xorb
mov
xor
stos
add
mov
test
pop
add
fistps
test
loopne
scas
add
or
ljmp
push
in
mov
stc
nop
cmp
cmpsl
inc
or
mov
cli
fnstcw
insb
out
add
and
cmp
lret
cld
popa
add
push
roll
rclb
pop
and
int
xchg
mov
push
jmp
xlat
inc
or
jne
repnz
jecxz
ljmp
sar
push
test
mov
mov
push
dec
pop
je
adcl
fistpll
pop
pushf
push
or
jae
pusha
insl
call
subl
inc
adc
sub
stos
cs
test
jle
test
out
add
je
pop
jle
mov
mov
scas
adc
lods
xor
jg
pushf
aas
mov
mov
sahf
dec
xor
int3
daa
mov
sub
add
je
xchg
int3
xchg
arpl
je
shlb
xor
add
orb
sub
imul
aam
jle
rorl
movsb
xor
xchg
lret
pusha
test
call
jg
scas
push
ljmp
insl
call
je
outsl
push
pop
xchg
cmpsb
inc
dec
inc
or
dec
fadds
cmp
fiaddl
xchg
pop
dec
adc
enter
inc
orb
dec
adc
jl
icebp
in
loopne
adc
jmp
mov
les
arpl
movsb
cmp
add
scas
xor
lods
das
and
cmp
inc
mov
mov
dec
imul
ljmp
push
add
lahf
sti
xchg
push
sub
xor
pop
cmp
das
dec
mov
jnp
push
not
jg
xor
movsb
test
daa
inc
loopne
adc
sahf
sarb
sbb
imul
pop
jne
mov
mov
ljmp
popf
push
call
imul
ja
mov
inc
outsb
sarb
lcall
mov
nop
push
or
inc
xchg
adc
mov
adc
cmp
xor
test
out
and
pop
div
jo
mov
in
mov
xor
cmp
mov
daa
mov
mov
cmp
sub
push
call
int
jnp
jno
xor
stc
xchg
or
xor
jmp
sbb
mov
sub
insl
repz
cmp
cmp
out
or
xor
lods
daa
xor
sub
pushf
pusha
into
jbe
add
popf
inc
movsl
xor
jge
mov
sbb
scas
cld
adc
xor
jle
shrb
adc
lods
sbbl
mov
loopne
leave
icebp
ret
test
js
lds
and
int3
jle
mov
pop
rorb
sti
mov
mov
mov
stos
mov
cmc
adc
push
dec
and
mov
mov
repz
lret
rcll
filds
jp
xor
pusha
in
and
xor
cmc
inc
and
pusha
in
add
push
sub
je
in
and
xor
jne
mov
popa
out
add
test
pop
ret
repnz
in
and
sub
testb
lret
gs
adc
xchg
popf
mov
fwait
inc
aam
adc
cwtl
aas
insl
cmc
mov
mov
stos
aad
fiadds
movsb
xchg
adc
mov
pop
mov
xor
pop
lcall
mov
popf
inc
jnp
ja
cmpsb
imul
cmp
repnz
jne
fcompl
pop
mov
jle
shl
aad
loop
xor
mov
adc
mov
outsl
mov
fdiv
lea
ds
jo
adc
pusha
xchg
aam
ret
xorl
mov
aam
out
cmp
cmpsl
imul
lds
fmull
int
inc
ljmp
push
pusha
and
pusha
push
orl
cmp
clc
daa
les
sbb
dec
jp
jns
imul
int
xchg
mov
pop
mov
movq
inc
jno
aam
bound
repnz
mov
push
out
jp
inc
or
jno
push
clc
lea
push
lods
fisttps
aad
inc
add
mov
mov
test
movsb
jno
push
xor
aaa
testl
inc
jl
insb
add
popf
lret
iret
decb
andb
test
test
jne
pop
xlat
xchg
and
jnp
jmp
add
insb
sahf
and
mov
loope
xor
inc
pop
repz
mov
adc
xchg
jo
call
testl
pop
aam
roll
mov
push
call
addr16
lds
fimull
int3
stos
inc
sub
add
lret
jg
pop
mov
call
cmp
mull
and
jns
push
ficompl
mov
pop
mov
push
adcb
outsl
cmp
xor
repnz
push
out
jp
inc
pop
cbtw
das
cwtl
pop
stc
nop
mov
pop
scas
fimuls
int3
xor
mov
mov
test
mov
xor
testb
mov
inc
jnp
insb
add
pushf
lret
into
std
mov
das
lock
aas
addl
je
pop
xchg
and
jnp
call
add
imul
push
mov
loopne
xor
inc
pop
repz
mov
adc
xchg
jo
out
das
sbb
testl
pop
mov
imul
xor
mov
repnz
rclb
add
outsl
push
push
xchg
lds
lret
stos
inc
std
sub
pop
push
lret
jle
pop
mov
call
cmp
mulb
pop
push
pop
and
jns
imul
sti
mov
pop
mov
or
cmp
xor
icebp
mov
push
in
jp
inc
push
gs
das
xchg
pop
stc
nop
mov
pop
scas
fisttpll
aad
cmp
pop
repz
mov
test
mov
xor
xor
push
dec
in
dec
lods
inc
jp
insb
add
fwait
lret
int
mov
cs
jmp
aas
addb
jae
pop
aad
and
jnp
out
ficompl
dec
add
push
and
mov
fistps
repz
mov
adc
test
jo
out
das
sbb
testl
pop
aam
mov
loopne
mov
rcll
add
cmpsl
and
push
xchg
lds
fmuls
lret
cld
sub
pop
sbb
mov
scas
jo
jg
shlb
popf
cmc
and
pop
push
push
and
jns
push
add
jmp
pop
mov
or
pop
ds
cmp
xor
lock
push
in
jp
inc
add
cwtl
das
xchg
pop
stc
nop
mov
pop
scas
fmull
aad
cmp
xor
mov
mov
test
mov
xor
xor
es
dec
in
inc
lods
inc
jns
insb
add
lcall
sub
dec
test
addl
pop
aam
and
jnp
out
ficoml
dec
add
imul
ds
ficomps
repz
mov
adc
test
jo
in
das
pop
fdiv
mov
cmp
lods
pop
mov
imul
repnz
rclb
add
adc
push
test
lds
xlat
dec
jecxz
leave
stos
inc
sti
sub
pop
sbb
popa
dec
jl
pop
scas
outsl
call
cmp
hlt
and
pop
push
adc
loop
cmpsl
addr16
ficompl
mov
pop
mov
or
aam
pop
sahf
xor
out
mov
push
jecxz
jp
inc
add
jb
arpl
nop
mov
pop
scas
fisttpl
aad
cmp
xor
mov
mov
test
mov
xor
xor
es
inc
lods
inc
js
insb
add
cltd
lret
lret
cli
mov
sub
jmp
aas
addb
jno
pop
rcll
in
es
ficoml
dec
add
push
mov
mov
fstpl
repz
mov
adc
sbb
mov
cwtl
das
push
xlat
testl
pop
mov
imul
repnz
iret
push
call
arpl
outsl
push
push
test
lds
dec
jecxz
enter
sub
pop
sbb
popa
dec
jnp
pop
lods
outsb
call
cmp
repz
pop
push
adc
mov
cmpsb
inc
ficoml
mov
pop
mov
or
aam
pop
sahf
xor
out
mov
push
loop
jp
inc
add
jb
bound
nop
mov
pop
scas
fimull
aad
cmp
xor
mov
scas
adc
roll
xor
xor
es
dec
in
inc
lods
inc
ja
insb
add
cwtl
lret
lret
and
in
jmp
aas
jg
pop
sahf
jo
pop
rclb
in
and
inc
add
addr16
and
mov
fcompl
rep
das
mov
adc
sbb
mov
cwtl
das
adc
aaa
mov
imul
aam
mov
mov
into
push
call
popa
and
push
subb
mov
mov
add
es
pop
sbb
bound
pop
stos
insl
jmp
cmp
icebp
pop
lds
es
movsb
fs
fistl
mov
stc
out
and
cmp
aad
pop
lahf
lea
mov
adc
add
jae
pusha
cltd
xor
mov
dec
in
sbb
cmp
ss
pop
hlt
mov
adc
iret
pushl
xor
nop
daa
and
in
inc
scas
inc
jbe
insb
add
xchg
int3
arpl
testl
aas
jge
or
rclb
in
and
inc
fistl
stc
xchg
and
mov
fistpl
rep
cs
adc
sbb
das
adc
clc
popl
xor
push
lods
pop
mov
imul
repnz
adc
push
subb
mov
movsb
rorb
lods
inc
clc
and
add
int3
arpl
mov
test
lret
cld
mov
lds
daa
mov
mov
ret
add
out
and
cmp
aad
pop
mov
repz
adc
pop
cltd
xor
mov
dec
jecxz
sbb
ss
aaa
into
sub
mov
stos
adc
into
std
xor
cs
sub
push
dec
in
inc
scas
inc
jne
insb
add
xchg
int
enter
daa
ljmp
jnp
or
into
daa
mov
and
inc
fcoml
inc
add
gs
and
mov
ficompl
repz
adc
fistps
nop
push
xor
scas
pop
xchg
imul
repnz
int3
push
ljmp
jb
push
jle
lds
rorb
lds
add
fs
jne
pop
cmpsl
imul
popf
enter
mov
lds
sub
mov
roll
repnz
sti
in
and
cmp
aad
pop
mov
repz
or
cmp
fnsave
cltd
xor
mov
dec
loop
sbb
xor
push
hlt
mov
stos
adc
int
xor
sub
dec
dec
in
inc
scas
inc
je
insb
add
xchg
int
hlt
mov
es
test
jp
or
int
daa
mov
and
inc
fcoml
inc
add
fs
and
mov
ds
fstps
repz
mov
adc
ficomps
nop
add
es
scas
push
test
imul
repnz
lret
push
ljmp
jb
dec
jge
lds
iret
dec
jecxz
les
add
int
dec
je
pop
cmpsb
push
sbbb
mov
dec
movaps
lahf
popa
inc
fstl
mov
sti
in
and
aaa
fs
pop
mov
repz
mov
adc
fnsave
cltd
xor
scas
mov
loope
sbb
xor
aaa
into
daa
push
hlt
mov
test
jae
int3
sti
xor
sub
xchg
sub
dec
dec
in
inc
scas
inc
jae
insb
add
xchg
int
repz
and
inc
test
jns
or
int3
lea
mov
pop
loopne
fcoml
inc
add
arpl
sbbl
push
fcomps
repz
jp
mov
fstpl
nop
add
mov
arpl
aam
mov
xor
mov
lret
sti
sub
cmpsl
pop
sbb
or
lds
into
dec
jecxz
ret
hlt
and
push
adc
mov
movsl
push
cmpsl
ds
mov
pop
dec
or
in
sahf
pop
inc
fstl
mov
sti
loop
and
xor
push
mov
hlt
out
mov
adc
cld
fnsave
lcall
scas
mov
mov
add
outsb
xor
aaa
into
and
inc
push
in
ja
adc
lret
enter
sub
dec
dec
out
aas
scas
inc
jno
insl
add
xchg
int
repnz
and
jmp
sbb
inc
js
or
lret
mov
mov
push
fiadds
cmovo
lcall
and
mov
aas
adc
aaa
pop
hlt
push
mov
mov
fcompl
nop
add
mov
bound
pop
scas
push
adc
mov
xor
mov
enter
sub
test
sbb
dec
jnp
lods
insl
nop
daa
lahf
int
in
shrb
push
adc
fs
jb
and
test
idivl
pop
dec
or
mov
popf
pop
inc
fisttpll
scas
fs
loopne
and
xor
xlat
xchg
push
mov
cmc
in
mov
adc
cli
fnsave
fwait
xor
mov
mov
add
outsl
xor
aaa
into
and
xchg
jne
adc
fcoms
xor
sub
xchg
sub
push
out
cmp
outsb
add
ret
and
in
adcb
stos
inc
ja
or
lret
mov
sbb
aas
add
jo
arpl
pop
xchg
and
mov
inc
xlat
adc
lahf
ss
ss
cmc
addr16
mov
adc
fistpl
nop
add
mov
scas
push
adc
mov
xor
mov
push
ljmp
jb
dec
jp
stos
imul
std
mov
insl
add
adc
fs
jno
and
les
mov
dec
or
mov
pushf
pop
inc
fisttpll
fs
fimuls
and
xor
fcoms
mov
mul
movsl
mov
adc
sub
xor
mov
scas
iret
add
jo
lock
push
testl
fcoms
lret
nop
daa
sbb
jge
scas
inc
insl
sahf
outsl
push
rorb
lea
loop
adcl
leave
pusha
lret
mov
sbb
aas
add
stc
pop
xchg
and
mov
inc
fcoms
sahf
xor
addr16
jge
mov
fistpl
cs
scas
push
adc
int3
mov
les
cmc
daa
adc
dec
jns
enter
daa
fwait
lret
dec
out
mov
outsb
add
inc
jo
and
ret
stos
inc
cmc
mov
mov
dec
pop
sub
fwait
pop
inc
fisttpll
stos
fs
fmull
and
aas
std
sbbb
popa
inc
fsts
mov
mul
mov
jg
aaa
neg
jae
pop
popf
xor
dec
cli
xchg
jnp
mov
scas
int
fnstenv
out
ss
push
testl
xlat
xchg
jb
lret
nop
daa
sbb
call
insb
popf
outsl
push
iret
int3
arpl
loope
adcl
xor
lahf
gs
leave
pusha
leave
xchg
mov
sbb
inc
fisttpl
ds
stc
pop
nop
and
scas
loop
fcoms
rcrl
mulb
mov
adc
ja
jno
ficompl
std
sub
pop
scas
dec
adc
mov
xor
mov
adc
inc
js
enter
daa
lcall
inc
in
sbb
add
inc
outsl
mov
mov
ret
hlt
mov
mov
inc
push
sub
lcall
pushf
in
stos
fs
fisttpl
sbbb
pusha
inc
fsts
mov
mul
mov
jg
ss
fdivl
pop
popf
xor
dec
cli
xchg
jp
mov
scas
int3
fnstenv
out
ss
push
testl
xchg
jb
divl
lret
nop
daa
sbb
call
imul
mov
loopne
adcl
xor
lahf
fs
leave
pusha
enter
mov
out
sbb
inc
fisttpl
cmp
stc
pop
and
scas
loope
fcoms
rcrb
mulb
mov
adc
jbe
jno
fstps
cld
sub
push
pop
sbb
xlat
outsb
mov
xor
mov
push
ljmp
jb
inc
ja
enter
daa
cltd
leave
dec
out
mov
outsb
add
aas
outsb
mov
mov
shrl
in
leave
pusha
inc
add
out
cltd
push
inc
fisttpll
test
and
cmp
pop
inc
fsts
mov
mul
mov
jg
xor
push
popf
xor
inc
cli
xchg
jns
mov
scas
lret
std
fnstenv
in
ss
push
testl
aad
jb
ret
divb
lret
nop
daa
pop
dec
push
call
push
outsl
push
int
int3
arpl
fucomip
adcl
xor
lahf
arpl
es
sbb
inc
fisttpl
cmp
pushf
insl
sub
pop
mov
mov
lods
loopne
fcoms
iret
sahf
xor
and
mov
fidivl
fcomps
sti
sub
scas
dec
jle
outsb
mov
xor
mov
rcll
and
stos
push
adc
inc
jbe
enter
daa
cwtl
enter
mov
outsb
add
ds
mov
lahf
pop
jmp
xchg
shrb
jecxz
leave
pusha
inc
add
mov
cwtl
push
inc
fldl
test
sti
and
cmp
sbbb
pop
inc
mov
mul
mov
jg
xor
fdivl
push
popf
xor
inc
cli
xchg
js
mov
scas
lret
jo
in
ss
push
testl
aam
jb
ret
lret
nop
daa
push
dec
push
call
imul
lea
fsubrp
adcl
xor
lahf
bound
mov
sbb
inc
fildl
cmp
stc
pop
lea
mov
lods
filds
adc
sahf
xor
arpl
mov
adc
je
jno
xlat
fwait
xor
enter
sub
scas
dec
jge
outsb
scas
insl
xor
mov
rclb
and
stos
push
adc
inc
jne
enter
daa
xchg
dec
out
mov
outsb
add
cmp
pop
jmp
nop
mov
or
inc
add
mov
xchg
push
inc
fldl
cmpsl
fs
fmuls
and
cmp
sbbb
pop
inc
scas
pusha
mul
lahf
mov
push
xor
fdivl
push
popf
xor
inc
cli
xchg
ja
mov
scas
leave
sti
fnstenv
jmp
int
dec
testl
rorl
xor
and
out
mov
xchg
cmc
test
push
inc
lods
mov
xor
push
loope
dec
cld
stc
sbb
bound
fst
jnp
sbb
xchg
sub
and
adc
fwait
push
jge
jle
fidivrl
or
inc
add
mov
sbb
dec
lock
test
and
mov
mov
jmp
jbe
adc
mov
xlat
call
push
in
lret
push
popf
xorl
inc
and
imul
add
xchg
push
and
es
fidivl
push
repz
sub
sahf
hlt
xor
pusha
cmpsb
vmwrite
mov
cs
cmpsb
stos
inc
adc
push
pop
mov
pop
adc
push
jg
mov
nop
lret
lea
dec
fidivrs
movsb
hlt
popa
sub
movsb
decl
fdivrl
in
mov
test
lods
xchg
lret
push
or
addb
stc
xchg
pop
jbe
es
orb
jbe
addl
movsl
bound
aaa
and
xchg
xor
int3
movb
and
clc
xchg
mov
xor
das
add
fdivrl
cld
inc
popl
mov
popf
mov
lods
andl
insl
cmp
loop
cld
jnp
mov
jns
mov
movsb
stc
sbb
cmp
mov
lds
aam
cmp
sahf
adc
xor
cwtl
xor
sbb
xor
mov
adc
fsts
mov
outsb
outsb
pop
jne
lea
mov
dec
cmp
and
push
push
lfs
or
outsb
mov
xor
dec
pop
mov
fists
and
push
nop
mov
mov
mov
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
or
addr16
jae
lock
inc
test
push
cltd
lods
es
rol
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
popa
ss
movsb
adc
inc
lds
faddl
xchg
repnz
das
mov
fdivr
cli
inc
and
nop
xchg
xchg
sbb
adc
repnz
or
in
xor
int
mov
sbb
mov
mov
and
xor
sub
dec
cmc
mov
shrb
pop
mov
pop
push
cs
arpl
sbb
jmp
sbb
sbb
xor
or
push
imul
out
pop
pop
xlat
xor
faddl
dec
test
outsb
flds
or
fcmovne
pushf
cmp
fdivrs
pop
cld
push
rcrl
sbb
pop
enter
pop
mov
push
mov
dec
outsl
push
scas
cmpsl
pop
mov
or
cld
lea
arpl
icebp
gs
in
inc
dec
lcall
ljmp
sbb
xchg
xchg
shlb
or
push
mov
jmp
js
push
out
pop
sub
in
push
loopne
cmpsl
cmp
push
pop
ds
add
sti
test
sub
dec
mov
cmp
sub
or
test
clc
insl
sbb
pop
loope
jnp
shlb
sbb
stos
pop
fidivs
fisttps
or
ja
push
push
pop
das
mov
pusha
out
inc
push
adc
xchg
or
jno
in
into
mov
inc
ljmp
mov
enter
ljmp
pop
jnp
inc
test
movsb
and
adc
fistpll
inc
lgs
mov
ffree
mov
std
cmp
fsts
ret
push
out
or
loop
mov
jg
orl
pop
cmc
out
sub
lcall
push
sbb
lret
mov
in
pop
lret
sub
and
inc
pushf
mov
xor
jl
scas
or
aam
lods
xchg
pslld
jl
sub
subl
cld
and
