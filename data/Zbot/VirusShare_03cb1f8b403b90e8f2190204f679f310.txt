andb
insb
mov
jg
fbstp
mov
mov
pusha
call
add
ljmp
dec
jg
mov
loopne
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
dec
and
jne
add
add
xor
enter
shrb
and
int3
sarl
pop
sbb
popf
pop
jo
jno
les
mov
call
popf
insl
repz
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
jae
dec
sbb
lods
orl
or
stos
mov
sub
pushl
call
add
pop
lea
pop
mov
ret
add
js
cmp
iret
shll
fnstcw
in
pusha
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
test
xor
fldl
jecxz
lods
pop
sub
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
mov
mov
sub
movsb
xchg
insb
into
jg
sahf
int
rorl
add
insl
dec
mov
pusha
inc
adc
fisubrs
hlt
mov
aam
xor
ret
rolb
cmpsl
sub
and
bound
enter
or
sahf
sub
push
jbe
push
ljmp
ja
mov
ljmp
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
shll
mov
cmp
or
mov
in
sub
push
push
lea
push
lea
push
subl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
add
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
sub
cmp
jne
mov
pop
ret
add
push
leave
dec
arpl
fimuls
xchg
pusha
subb
scas
insb
out
mov
push
movsb
fisubrs
mov
xchg
mov
jmp
push
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
pop
std
inc
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
outsb
and
add
and
add
add
push
and
add
and
add
add
mov
add
enter
pusha
and
add
and
add
and
add
and
add
add
adc
add
mov
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
and
add
add
dec
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
add
cwtl
and
add
add
add
push
and
add
and
add
add
mov
add
enter
pusha
and
add
and
add
and
add
and
add
add
adc
add
mov
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
and
add
add
dec
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
je
jb
jbe
push
jns
gs
add
add
je
outsl
imul
jbe
jae
add
add
outsb
fs
je
insl
push
add
gs
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
inc
imul
gs
je
imul
push
add
icebp
add
imul
jb
je
arpl
add
roll
dec
gs
jo
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
jb
push
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
jae
inc
jbe
outsb
je
add
add
insb
gs
jae
dec
jne
gs
add
insb
jae
jb
outsb
inc
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
fs
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
enter
jae
gs
popa
insb
jne
add
push
dec
inc
dec
xor
cs
insb
add
jl
inc
gs
push
gs
dec
gs
imul
gs
push
outsl
insb
outsl
jb
addb
jae
push
arpl
add
jae
push
push
popa
je
add
xor
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
imul
gs
add
mov
push
gs
imul
gs
add
jns
inc
gs
push
jns
push
imul
jb
ja
push
fs
inc
gs
push
gs
inc
js
outsb
je
add
add
ja
push
popa
arpl
jb
jne
add
gs
push
outsl
outsl
insb
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jl
jp
lods
lods
lods
add
cmpsl
cmpsl
push
mov
mov
mov
lret
into
into
int3
rcl
in
rcl
shl
rcl
shl
into
into
int
leave
leave
repz
enter
mov
mov
lods
stos
stos
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
leave
leave
not
rcl
cld
fcom
std
fcomp
fdivr
fcomp
fdivr
aad
ror
iret
dec
into
int
aad
aam
iret
rcl
inc
ret
mov
mov
scas
iret
movsb
movsb
mov
dec
cs
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
lods
scas
sbb
mov
jnp
mov
sar
leave
lret
lret
dec
iret
sar
aam
xlat
xlat
xlat
call
fcom
call
aam
dec
into
int3
dec
int
call
aad
dec
into
into
mov
mov
mov
std
cmpsl
cmpsl
test
xchg
xchg
xchg
mov
pop
push
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int
call
rcl
call
fdivr
fcom
call
aam
dec
into
int
lret
lret
lret
into
into
inc
mov
mov
mov
cmpsl
cmpsl
cmpsb
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
fs
cmp
das
push
push
push
sub
push
xor
aaa
ss
cmp
cmp
adc
push
pop
pop
add
add
add
add
fs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
rcl
call
call
aam
iret
iret
iret
inc
enter
inc
ret
mov
mov
ljmp
movsl
movsl
sahf
pushf
pushf
xchg
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jge
jl
jle
jge
jb
jno
popa
bound
push
dec
push
xchg
cmp
inc
inc
mov
jo
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
lret
lret
lret
leave
inc
leave
leave
inc
mov
mov
ljmp
movsl
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
fwait
fwait
in
addb
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
pusha
lea
incb
jp
jnp
jnp
outsb
outsl
jo
addr16
fdivs
jae
jg
jle
jns
jns
fs
inc
inc
cmp
sbb
sbb
movups
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
popf
pushf
popf
decl
test
incl
xchg
xchg
lahf
sahf
lahf
sti
mov
xchg
xchg
mov
jp
jp
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
addl
xchg
addr16
cmp
and
and
jg
jle
fwait
lcall
stos
stos
test
lods
lods
stos
sti
stos
lods
stos
lods
lods
lods
stos
stos
test
movsl
movsb
movsl
std
cltd
cltd
fwait
xchg
xchg
xchg
incl
jge
jp
jp
jp
jp
mov
xchg
movsl
movsb
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsl
out
scas
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
push
or
inc
dec
insl
insl
imul
test
fwait
lcall
cltd
cltd
fwait
stc
std
mov
xchg
mov
mov
lea
fwait
jmp
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
popf
pushf
pushf
std
movsl
mov
mov
in
in
xchg
jne
push
cmovp
or
inc
sub
push
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
lea
nop
call
lahf
lahf
jmp
test
scas
pushl
lahf
scas
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
pushf
xchg
pushf
decl
mov
call
xchg
xchg
xchg
pushf
pushf
popf
movsl
movsl
movsb
test
mov
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
popa
jne
jb
mov
lahf
test
mov
mov
xchg
testl
mov
jmp
lahf
pushl
imul
mov
xor
jbe
mov
movsl
mov
mov
mov
stos
lods
lods
mov
movsb
add
mov
add
pusha
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
cwtl
cltd
lcall
lahf
sahf
sahf
mov
movsl
mov
out
xchg
xchg
mov
cwtl
aad
xchg
cltd
in
xchg
cwtl
out
lea
stc
xchg
xchg
std
xchg
je
lcall
jmp
inc
jl
mov
jns
mov
jb
mov
insl
ljmp
pcmpgtw
stos
or
lods
or
pushl
mov
mov
pushf
movsb
movsb
movsl
and
add
add
mov
add
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
lcall
pushf
popf
lcall
xchg
cwtl
call
xchg
nop
call
fwait
cld
xchg
cwtl
pushf
stc
lahf
cltd
sahf
stc
mov
mov
xchg
insb
mov
xchg
pop
jg
cwtl
dec
jns
cltd
cmp
lcall
sahf
pop
jmp
adc
test
packuswb
lods
adc
scas
adc
mov
push
mov
imul
push
imul
ds
fwait
scas
mov
scas
lods
scas
movsl
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
popf
lcall
mov
movsb
jmp
xchg
cwtl
decl
mov
mov
xchg
jbe
cltd
jno
lcall
call
sub
decl
adc
xchg
or
call
add
fwait
add
lahf
pop
pop
jmp
sbb
pushl
sbb
jo
mov
and
and
shll
inc
aas
test
ret
xchg
scas
mov
lods
scas
mov
sahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
scas
mov
shll
lcall
movsb
movsb
jmp
test
ljmp
cmpsl
cmpsl
lcall
jle
decl
inc
jno
mov
imul
sub
mov
popa
decl
or
addb
incl
add
mov
pop
call
add
fwait
add
lahf
add
or
pushl
sub
mov
sub
sub
ret
sub
jge
leave
xor
dec
inc
mov
leave
lea
cld
scas
mov
lret
mov
add
add
add
add
stos
mov
push
adc
test
ljmp
popf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
xchg
incl
or
pop
push
incl
push
incl
add
mov
push
decl
push
call
pop
lcall
add
ljmp
sub
inc
aaa
cmp
cmp
leave
cmp
call
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
popf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
test
push
incl
add
mov
push
call
add
sahf
add
mov
add
lods
add
mov
jno
les
test
lret
inc
mov
into
inc
call
inc
call
dec
mov
fmuls
fmuls
fimull
fisttpll
ficoml
call
xchg
std
mov
mov
movsl
movsl
movsb
arpl
mov
add
add
add
fwait
cwtl
cltd
add
inc
adc
jl
popf
mov
lcall
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
outsl
decl
sbb
xchg
sbb
mov
decl
add
nop
add
xchg
add
pushf
add
add
test
pusha
ljmp
add
js
int3
dec
call
push
xchg
call
push
fwait
fistl
fistl
ficomps
jmp
pop
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsl
test
sahf
sahf
sahf
or
xchg
xchg
cwtl
add
inc
adc
jns
lahf
fwait
popf
jmp
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
xchg
and
and
push
call
or
xchg
add
xchg
add
cltd
add
mov
add
lods
add
mov
data16
mov
xor
fldenv
jmp
movsb
fisubs
jmp
gs
in
cmpsl
call
push
ljmp
fldl
ret
mov
cmpsb
cmpsb
mov
sahf
lahf
add
inc
aas
adc
jp
xchg
cltd
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
jo,pn
lcall
lcall
or
xchg
add
fwait
add
mov
add
stos
add
mov
pushl
adc
roll
frstor
jmp
jo
jmp
jo
jmp
jb
jmp
je
in
jae
out
jbe
out
jbe
out
jb
jmp
mov
mov
cmpsl
test
lahf
mov
mov
add
add
add
add
cmp
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
outsb
lcall
cmp
xor
fwait
push
call
call
add
movsb
add
test
popa
pushl
add
add
sbb
fistl
jmp
jbe
jmp
jle
in
jg
out
cmpl
push
xchg
push
cmpl
inc
mov
stos
cmpsl
sahf
popf
popf
daa
sahf
sahf
lahf
add
add
add
add
xor
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
outsb
mov
cltd
cmp
movsb
inc
jge
movsb
inc
jge
movsl
aaa
js
cltd
sbb
xchg
add
popf
add
mov
add
scas
add
mov
gs
mov
add
dec
and
mov
jmp
mov
push
sar
xchg
ret
push
pop
push
xchg
ret
push
nop
ret
push
xchg
push
ret
in
mov
fnstenv
clc
lods
lods
stos
mov
pushf
pushf
xor
sahf
popf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
nop
mov
mov
mov
mov
mov
sar
ret
inc
ret
inc
mov
jle
lcall
dec
jg
stos
dec
test
mov
push
pop
lcall
add
test
pop
ljmp
add
add
mov
add
mov
call
xchg
ret
push
fwait
push
lcall
cmc
pushf
leave
push
pushf
lret
pushf
lret
popf
into
cli
lahf
int
sti
lcall
fidivs
enter
mov
lahf
mov
nop
add
add
add
cmp
or
cmp
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
mov
inc
enter
mov
lahf
lcall
dec
xchg
scas
dec
mov
movsb
sub
fwait
pop
pop
lcall
add
lods
add
mov
arpl
mov
add
enter
rorl
in
lea
push
movsb
int3
push
movsb
int3
stc
cmpsb
int
sti
cmpsl
iret
cli
movsl
sar
sti
test
sar
cld
stos
sar
cld
test
mov
dec
lret
mov
mov
mov
xchg
xchg
add
lcall
xor
sub
inc
inc
inc
bound
push
xlat
jne
jno
mov
sarl
mov
ret
ret
inc
mov
enter
rol
mov
cmpsb
jmp
push
mov
scas
dec
test
mov
add
movsl
add
lods
add
mov
mov
add
into
add
add
loopne
jl
in
pop
test
negl
sar
cld
mov
sti
scas
aam
sti
mov
mov
mov
mov
std
mov
pushl
sar
mulb
dec
lret
mov
mov
lahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
dec
ss
jo
cwtl
fwait
cwtl
rol
fcom
fcom
jmp
xlat
xlat
test
into
int
lret
lret
lret
dec
leave
leave
inc
enter
mov
mov
scas
push
mov
lods
jle,pt
lahf
push
jmp
add
mov
mov
add
rolb
outsb
call
add
loopne
jne
ljmp
sti
lods
sar
cld
mov
mov
fdivr
std
mov
std
mov
fdivr
std
rcr
mov
int
out
call
lret
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
add
or
enter
in
pop
call
out
test
in
leave
fsub
fcomi
fsqrt
aam
std
int
into
mov
push
cmp
sub
mov
add
mov
popa
mov
add
lret
call
add
fldl
ja
in
ja
in
xor
cld
mov
inc
loopne
inc
loopne
inc
fdivrp
std
loopne
dec
loopne
std
enter
enter
dec
loope
cld
mov
leave
call
lret
mov
mov
xchg
adc
add
add
incb
std
std
std
add
std
add
cmc
testb
out
jmp
jmp
in
sub
out
out
dec
jmp
ljmp
in
out
fcmovnu
fsubr
ret
mov
xchg
cmpsl
cmp
movsb
adc
pop
ljmp
add
add
les
imul
add
filds
js
ljmp
cld
mov
loop
cld
lret
in
dec
out
dec
in
dec
in
std
into
loop
std
int3
loopne
shl
dec
loop
std
shl
shl
cld
out
mov
fdivr
ret
ret
test
test
xchg
xchg
xchg
sbb
cltd
fwait
add
std
std
add
std
incb
cmc
stc
clc
add
repz
add
hlt
icebp
push
in
repnz
pop
in
repnz
cmp
out
in
pop
fsubp
loope
lds
sti
mov
pop
pop
jmp
add
mov
inc
add
leave
add
rolb
jno
fildl
jbe
jecxz
jp
in
adc
pop
test
cld
shl
shl
std
shl
shr
call
in
call
out
fsub
std
xlat
jmp
fucomi
fldl2e
std
shl
push
ret
jmp
aam
dec
lret
test
xchg
xchg
and
cwtl
xchg
add
cld
add
std
clc
add
sti
cli
add
cmc
cmc
or
aam
xor
jae
negb
add
test
pop
ljmp
add
ret
add
leave
add
add
fildl
ja
call
sbb
push
jbe
sti
std
fsubr
std
std
std
fldpi
std
fsubr
fsubr
fsubr
loopne
fsubrp
std
loopne
shl
push
aam
out
fdivr
rcl
iret
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loope
add
mov
cltd
repnz
ljmp
add
mov
add
into
add
aam
jno
loopne
je
ljmp
cli
mov
shr
fcomip
std
fucomi
std
fucompp
fsub
aad
aam
cli
iret
loopne
sti
shl
stc
into
test
out
mov
fcom
sti
mov
mov
fwait
fwait
cltd
cmp
cltd
add
xlat
add
enter
mov
lahf
jmp
sub
add
stos
add
mov
fs
mov
add
roll
outsb
call
add
loop
js
jmp
aaa
xchg
cli
xchg
cli
enter
lret
jecxz
sti
fdivrp
clc
mov
aad
repz
sar
lock
int3
jmp
mov
sar
ljmp
imul
fsub
cmc
loopne
mov
mov
xchg
add
add
add
int3
add
sarl
lahf
xor
jmp
add
mov
gs
mov
add
into
pop
jo
rorl
jmp
sbb
call
mov
jmp
scas
leave
std
loopne
scas
ret
mov
enter
leave
ljmp
into
fsubp
rcl
shl
xlat
fadd
call
in
test
in
lock
jmp
lret
lods
stos
lods
adc
cmpsb
cmpsb
test
lahf
mov
ret
ret
mov
lahf
lods
aam
dec
jg
pushf
sbb
test
insb
scas
and
mov
ja
mov
dec
xchg
ret
push
stc
lret
test
mov
out
mov
rcl
ror
aad
lret
rcl
int3
mov
iret
shlb
xlat
aam
jg
fcmovnu
jb
gs
in
out
out
ljmp
sub
div
and
icebp
lock
fstp
or
mov
into
add
add
add
rol
mov
scas
mov
stos
xchg
lock
sbbl
mov
test
mov
mov
cmpsl
mov
mov
lret
ror
iret
addr16
rclb
rcl
dec
aad
inc
rcr
aam
aam
fsubs
xlat
sbb
loopne
adc
in
push
loopne
in
call
repnz
add
cli
testb
std
add
std
add
incl
mov
mov
mov
mov
stos
scas
xchg
mov
mov
mov
mov
ret
mov
ret
xor
into
lret
ror
and
aad
sbb
aam
iret
aam
or
xlat
aam
rcr
xlat
add
add
add
in
add
in
ljmp
std
incb
mov
mov
add
ret
ret
sub
mov
mov
push
rol
or
leave
movl
into
lret
aam
add
xlat
aam
aam
aam
aad
aam
aad
add
xlat
loopne
xlat
fildl
loopne
loope
fstp
fiadds
in
call
add
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
lds
mov
mov
mov
stos
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
rcl
jmp
rcl
cmc
rcl
sar
iret
ror
cli
int
lret
stc
lret
lret
mov
mov
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
iret
aad
call
xlat
call
ror
dec
into
iret
dec
int3
lret
mov
mov
cld
lods
stos
stos
icebp
xchg
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
jae
data16
dec
dec
dec
cmp
sub
sub
ss
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
rcl
sar
int3
int3
int3
inc
mov
mov
ljmp
popf
popf
xchg
xchg
xchg
jmp
outsl
outsl
xchg
push
pop
pop
dec
add
add
add
add
add
add
addb
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
push
outsb
outsb
insb
push
pop
pop
cmp
cmp
pop
jno
jo
scas
mov
pop
mov
mov
mov
mov
inc
ret
vshufps
mov
mov
ljmp
fwait
lcall
xchg
xchg
cltd
lcall
dec
dec
dec
dec
wrmsr
add
add
add
add
add
pop
cltd
lcall
popf
xchg
lcall
addl
jmp
jns
sarb
jnp
jns
jnp
jb
jb
push
push
push
cmp
jae
popf
popf
popf
mov
scas
scas
repz
scas
lods
sti
scas
scas
scas
std
cmpsl
test
popf
call
test
call
mov
scas
jmp
scas
scas
leave
movsl
movsl
movsb
cltd
je
jb
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
xchg
mov
sahf
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
jo
orl
cwtl
cwtl
repnz
xchg
xchg
std
lea
call
lahf
ljmp
test
std
mov
scas
mov
mov
mov
cmpsl
movsb
movsl
pop
addl
add
pusha
popa
pop
or
lods
mov
movsl
sahf
mov
decl
mov
std
lahf
sahf
lahf
sti
mov
cltd
cwtl
call
push
push
push
jo
push
pop
outsl
imul
jle
subl
nop
xchg
lock
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
lods
stos
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
cwtl
lcall
cltd
cltd
fwait
fwait
pushf
fwait
lahf
popf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
mov
out
xchg
jne
notb
pop
jle
popf
dec
jl
movsb
inc
jp
lods
xor
je
mov
outsl
ljmp
sbb
mov
mov
scas
scas
jle
mov
add
add
add
popa
pusha
pusha
or
mov
lcall
popf
sahf
jmp
mov
xchg
decl
addl
xchg
jno
cld
xchg
pusha
cmp
dec
js
xchg
cmp
xchg
sub
xchg
sbb
adc
mov
push
imul
mov
insb
pushl
sbb
je
mov
test
lods
xchg
sahf
sahf
popf
adc
add
add
pusha
pusha
pusha
or
stos
mov
test
mov
cmpsb
ljmp
cmpsl
test
lcall
decl
sub
mov
pop
incl
add
push
call
add
cmpsl
or
je
mov
jge,pn
lds
jle
enter
lret
dec
pop
xchg
inc
stos
mov
mov
mov
cmpsl
cmpsl
test
popa
pusha
popa
or
movsb
test
cmpsl
mov
cmpsb
ljmp
mov
pushl
cwtl
lahf
call
adc
mov
push
incl
add
decl
add
xchg
add
sahf
add
movsl
add
mov
outsb
inc
cmp
dec
inc
call
inc
mov
inc
xchg
fadds
call
popa
lahf
inc
test
stc
mov
mov
mov
std
incb
add
add
pop
pusha
popa
or
popf
mov
ljmp
mov
pushl
mov
stos
lcall
push
call
adc
pop
decl
add
lahf
add
add
lods
add
mov
dec
nop
fcomps
fcompl
ficomps
jmp
pop
mov
fisubrs
lret
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jp
pushf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
insb
call
adc
add
lahf
add
cmpsl
add
scas
add
mov
xor
jmp
insl
test
in
stos
call
jb
in
jno
jmp
cmpsl
mov
shrl
cmpb
add
add
dec
pop
outsl
outsb
imul
xchg
lcall
mov
mov
sar
mov
jmp
cmp
lcall
sub
xchg
or
pop
jmp
popa
pushl
or
xchg
jmp
jns
jmp
mov
out
test
cmc
xchg
mov
push
lcall
add
sub
push
push
dec
pop
addr16
test
mov
mov
mov
mov
ret
mov
xchg
ljmp
sub
cltd
pop
pop
jmp
add
mov
gs
mov
adc
fistps
in
nop
mov
push
xchg
push
xchg
clc
cltd
leave
cli
fwait
lret
clc
xchg
jmp
stos
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
ret
mov
test
ljmp
pop
imul
add
ljmp
add
mov
add
fisubl
cmp
jl
push
mov
sar
stc
test
cld
stos
iret
std
stos
iret
cld
lods
sar
sti
test
jmp
mov
inc
rol
stos
stos
stos
jne
popf
popf
or
add
add
push
dec
push
aaa
je
jae
stos
test
int
lret
cmc
leave
int3
int3
sti
leave
lret
mov
mov
stos
popa
ljmp
adc
cmpsl
add
mov
arpl
ret
dec
add
fiaddl
jne
ljmp
sti
mov
std
mov
fdivr
std
mov
mov
sar
jmp
lret
rol
scas
lods
scas
mov
add
add
add
add
or
aad
dec
loope
loope
loopne
loopne
ffree
aad
fsubr
shlb
test
jb
movsb
or
scas
add
mov
add
aad
jae
in
jp
lock
mov
cld
loop
inc
inc
fdivrp
dec
fdivrp
dec
cld
out
mov
lret
divb
popf
sbb
add
add
incb
std
incl
jmp
in
sbb
in
in
xor
loop
loop
mov
mov
mov
add
mov
inc
add
into
add
fildl
jne
call
insb
mov
cld
sti
shl
call
out
call
out
call
in
std
aad
fsub
std
shl
push
enter
int3
sar
mov
mov
and
add
add
incl
std
std
incl
cld
cld
cld
pop
aam
aad
mov
pop
xchg
sahf
or
pop
pushl
add
rolb
jo
fiadds
jne
out
and
shl
fsubr
std
fsubr
std
fsubr
cld
fsub
cld
xlat
call
std
shl
push
xlat
jmp
rcl
sti
mov
popf
sahf
das
add
add
int
into
or
bound
stos
add
mov
add
aad
jae
loop
js
out
das
nop
push
fwait
enter
loop
cli
lret
test
hlt
aad
bnd
std
out
ret
aam
in
aam
in
aam
jmp
shl
in
fucomp
enter
stos
test
das
std
std
add
add
add
aad
push
mov
jb
or
mov
imul
sbb
int3
and
cs
loopne
fwait
clc
in
mov
out
loop
lret
mov
loope
mov
int3
leave
faddp
sarb
in
fcompl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
jg
rol
lods
mov
lahf
mov
shll
jge
int3
insl
aam
iret
pop
aam
rorb
fcomp
cmp
fnstsw
das
jecxz
fisubs
loop
lock
in
jmp
fcmovnu
faddl
std
std
incb
std
incb
mov
mov
outsb
scas
mov
scas
data16
mov
mov
mov
shrl
leave
and
aam
pop
rol
adc
rcl
or
or
int3
into
add
std
incb
incl
fwait
cltd
fwait
add
mov
mov
into
int
stos
stos
lods
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
ret
mov
xchg
enter
mov
ret
mov
scas
mov
insb
stos
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
std
rcl
sar
int
iret
std
mov
stc
mov
cmpsl
cmpsl
sarl
gs
push
pop
add
add
add
add
add
add
add
add
jae
jb
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
rcl
dec
into
into
inc
mov
mov
scas
lods
lcall
mov
push
add
add
add
add
jne
jae
test
aad
outsl
outsl
ret
bound
outsl
insl
insl
jb
popa
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jae
daa
and
add
add
add
jae
je
pushf
xchg
fwait
mov
xchg
xchg
xchg
test
test
push
push
push
inc
mov
fwait
into
mov
mov
xchg
decb
mov
pushf
lcall
mov
mov
ret
xchg
aas
sub
sub
add
add
jg
adcl
test
mov
xchg
xchg
xchg
cld
pushf
pushf
pushf
cmc
cltd
lcall
push
push
push
imul
jle
mov
xchg
notl
mov
pushl
push
mov
test
call
lods
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
cltd
cltd
lcall
lcall
xchg
mov
loope
jbe
out
nop
fs
push
jp
fwait
inc
ja
cmpsb
ss
scas
sub
pushl
sbb
mov
jl
mov
mov
imul
int
add
add
xchg
pop
lods
movsl
stos
test
sahf
pushf
lahf
jmp
movsb
cmpsb
call
jle
mov
decb
xor
mov
call
or
mov
sbb
pushl
es
shlb
inc
inc
test
rcrb
subl
jne
push
mov
movsb
cmpsl
cld
test
mov
pushl
xchg
decl
or
xchg
decl
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
inc
mov
dec
xchg
dec
lcall
movsl
mov
add
push
xchg
xchg
test
mov
scas
pushl
mov
ljmp
outsb
call
sbb
xchg
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsb
call
pushf
mov
mov
test
pop
add
add
popa
bound
mov
pushf
cld
mov
scas
mov
mov
scas
lcall
jb
lcall
jmp
add
mov
xor
jmp
jo
jmp
ja
in
jl
out
jl
out
jg
ficompl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
arpl
jmp
add
test
pop
pushl
or
fmull
in
mov
push
xchg
clc
xchg
stc
xchg
jmp
cmpsl
inc
mov
movsb
sub
aas
inc
inc
adc
push
xchg
mov
mov
inc
ret
inc
mov
xchg
ljmp
pop
jmp
pushl
imul
jmp
scas
clc
cmpsl
iret
clc
stos
sar
cld
lods
sar
cld
lods
sar
std
lods
sar
in
mov
inc
mov
movsb
ds
incb
xor
xor
scas
mov
mov
aad
mov
fnop
rcl
out
lret
cli
mov
mov
jmp
add
add
aad
jno
call
nop
ret
cld
mov
fdivr
cld
ret
inc
fdivr
std
ret
out
mov
shl
cmpsl
test
add
add
add
in
in
or
call
out
outsb
fcmovu
fldenv
movsb
outsb
ljmp
add
lret
add
fldl
cld
mov
cld
iret
in
shl
shl
aam
std
shl
push
fdivr
aam
int
lods
lods
scas
popa
cmpb
std
incl
std
incl
int
shrl
mov
add
mov
add
loop
jp
hlt
push
cmpsb
dec
loop
xlat
out
std
aam
aam
sti
aad
stc
shl
push
leave
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
cmp
imul
mov
into
repnz
loope
lret
jmp
fcmovu
scas
les
cltd
lcall
add
add
mov
lods
xchg
inc
and
ret
int3
lret
mov
xlat
mov
lret
adc
int3
outsl
fxch
into
pop
xlat
dec
in
fistpll
out
out
out
in
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
stos
mov
les
ret
and
ret
fisttpll
int
into
or
aam
push
std
std
add
jg
std
add
add
add
rolb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
xor
sbb
data16
aaa
cmp
imul
mov
cmp
fisttps
push
xor
test
jne
xchg
pop
mov
fxam
jl
stc
sbb
pop
dec
cmp
jl
and
into
sarl
add
je
and
sub
jnp
test
mov
enter
sti
jmp
mov
subl
insl
mov
ret
hlt
mov
loope
mov
dec
xor
imul
sti
mov
dec
out
xlat
sbbb
push
outsb
add
pop
popa
mov
xchg
jge
push
scas
mov
inc
out
fdivl
or
pusha
cmp
cli
xchg
push
pop
out
lea
scas
cmpsl
scas
add
int
add
xor
push
in
dec
push
inc
flds
mov
aas
mov
add
stos
imul
cs
xchg
adcb
cmp
sub
mov
pop
sbb
cmpsl
pop
cmp
js
jo
lds
ret
repz
mov
adc
cmp
addr16
sbb
test
mov
lahf
mov
xlat
jp
stc
mov
mov
ficomps
movd
punpckldq
in
add
lcall
jns
lods
int3
mov
lcall
fnsave
mov
push
jb
xchg
movsb
jae
imul
jle
fstl
iret
mov
pushf
xor
stos
push
in
fistl
push
cmp
or
movsl
fsubrs
dec
xchg
sub
aaa
cwtl
das
imul
dec
mov
int
imul
and
sbb
repz
inc
fldcw
adc
rol
mul
jle
mov
outsl
push
jo
pop
dec
jne
jle
mov
rorl
mov
es
popa
adc
inc
jp
enter
out
xchg
mov
test
out
outsb
sbb
das
icebp
cmp
mov
dec
in
mov
stos
mov
loopne
mov
add
stc
daa
and
pop
mov
adc
fsts
push
arpl
xor
xlat
mov
lret
insl
pop
and
call
mov
outsl
push
test
adc
cld
and
push
sbb
dec
in
jo
popa
mov
ret
call
and
sahf
inc
insl
test
mov
repnz
out
inc
or
stc
cmp
pop
adcb
mov
sahf
xor
cmp
testb
jge
loopne
stc
nop
faddl
pushf
xor
std
pop
scas
cs
mov
int3
subb
ljmp
jno
es
adc
addb
jns
xor
rcrb
push
out
out
lret
bound
inc
outsb
add
jae
mov
lret
xchg
pop
sahf
inc
push
out
mov
jb
inc
fisubrl
out
lds
add
pop
fidivrs
adc
and
arpl
mov
cmc
push
fcomp
jo
xor
sub
mov
lcall
mov
lret
insl
pop
and
push
jge
mov
rclb
test
sti
and
push
sbb
inc
dec
je
in
outsl
lret
insb
add
ret
hlt
sbb
sahf
inc
insb
test
mov
icebp
mov
out
inc
or
cmp
add
xchg
pop
adcb
mov
mov
loop
inc
fdivrs
pop
ret
pop
xor
push
sub
test
test
jmp
sub
lret
push
adc
out
popa
clc
aam
in
xor
inc
fsubrl
dec
pop
lock
sub
loopne
shrl
add
jns
lock
mov
xorb
and
add
ret
pop
notb
pop
mov
xchg
xor
test
mov
mov
loopne
lcall
push
in
bound
gs
mov
inc
fdivl
shll
pop
push
popa
clc
test
xchg
sub
jnp
fstpt
or
leave
sbb
ja
jo
dec
lahf
sbb
lcall
mov
insb
or
xchg
cmp
pop
mov
mov
push
fldt
popa
clc
pop
cld
jns
stos
dec
stc
nop
jp
lret
bound
jno
loopne
inc
xor
jae
scas
inc
stos
stos
mov
fidivl
test
lret
bound
in
scas
xlat
outsb
fidivrs
mov
xchg
sub
cmp
cltd
mov
call
andl
roll
test
fs
cwtl
mov
ja
mov
arpl
jbe
mov
jge
mov
popa
adc
rcr
mov
mov
fnstenv
cmpsl
push
ljmp
jns
jnp
aas
movsb
test
jo
jns
sahf
stos
inc
fwait
xor
jno
lods
mov
aam
jb
mov
jg
and
mov
mov
jae
ljmp
imul
call
ss
orl
fnstenv
jo
jl
cmp
cli
stos
mov
shl
ja
pop
cmpsb
aas
movsl
cmp
jl
mov
call
aaa
sbbl
test
mov
push
cmpsl
bound
ret
sbb
arpl
dec
loop
insl
std
xchg
mov
andb
mov
xlat
outsb
lock
gs
mov
sub
mov
in
test
insl
addr16
lahf
sub
pop
xchg
mov
push
in
clc
insl
dec
loopne
and
push
mov
incb
imul
sbb
pop
dec
sub
mov
fnstenv
and
cmp
push
cmp
dec
xchg
into
mov
push
in
or
push
call
push
je
and
jg
add
jp
mov
idivl
call
push
jp
stos
in
test
jle
add
das
and
lods
int3
int
add
mov
xor
dec
push
cli
xchg
or
and
es
lret
negb
inc
push
dec
cmp
jl
cmc
mov
stos
push
in
fldenv
jne
test
fnsave
pop
lock
sub
pop
push
leave
pusha
xchg
add
or
pop
mov
scas
sbb
push
lods
mov
int
sti
decb
arpl
inc
lahf
ss
jnp
pushf
and
mov
je
cmova
lret
sti
in
cwtl
push
cmp
dec
mov
jbe
mov
or
lea
es
test
imul
sti
push
out
mov
lcall
cld
xchg
xor
and
cmp
push
aam
mov
jge
shrb
lcall
jnp
stc
and
mov
jecxz
xchg
cmpsb
cmp
jnp
sbb
inc
mov
jbe
test
and
pop
jns
pop
icebp
push
mov
xor
repnz
mull
mov
mov
jae
xchg
jo
ret
or
adc
stos
cmp
outsb
int3
add
add
stos
inc
push
add
dec
movsl
pop
xchg
sub
jnp
mov
ja
push
push
stc
nop
cmc
aas
lds
sbb
shrl
inc
lahf
sti
pop
hlt
sub
enter
scas
inc
jne
and
bound
mov
loop
inc
fidivs
cmpsb
cmp
lret
push
mov
xor
scas
push
out
xor
arpl
outsb
add
mov
fcom
out
or
mov
pop
and
cmp
push
mov
sub
push
in
subl
ds
enter
xchg
xchg
ret
aas
dec
jecxz
scas
sbb
pop
xchg
cmp
outsb
mov
xor
or
out
or
cs
sub
popf
pop
mov
xlat
in
jns
mov
dec
in
fldenv
cmp
push
jle
xchg
pop
fnstcw
ljmp
and
call
mov
push
mov
xchg
out
sbb
cmp
lock
pop
and
dec
cmpsl
insl
aad
popf
cli
call
into
call
add
int3
arpl
push
mov
jno
popf
out
test
xchg
mov
std
pop
cmc
das
push
call
adc
mov
repnz
add
ss
les
push
stos
inc
mov
xchg
cs
add
cmp
add
shrb
xor
mov
mov
stc
ffreep
xchg
mov
test
mov
lcall
testb
out
push
lret
fistps
insb
inc
int3
and
rorl
dec
and
in
iret
jecxz
mov
rclb
pop
inc
push
into
push
jae
xor
sbb
xchg
mov
inc
and
das
aad
ffreep
pop
adc
sub
mov
xor
adc
dec
adc
add
inc
pushf
lods
repz
xchg
sarl
ds
push
xchg
lret
ficompl
std
stc
mov
fildll
lret
in
jae
movups
or
lds
test
add
cmp
sbb
imull
stc
out
into
pop
dec
fcmovne
adc
ds
mov
negb
sbb
lods
mov
mov
insl
mov
popf
and
mov
cmp
adc
lods
mov
in
notb
push
in
frstor
out
cwtl
dec
fs
xchg
pop
pusha
or
add
mov
cs
add
sti
jle
mov
in
ds
mov
xor
jnp
test
and
divl
cmp
mov
jmp
insl
test
test
xchg
lahf
lret
xor
pushf
push
mov
sbbb
mov
pop
outsl
mov
mov
push
aad
jmp
hlt
push
imul
add
adc
cmpsb
cmpsl
xlat
scas
inc
clc
push
cmpb
arpl
xor
xlat
mov
fidivrl
mov
push
push
daa
imul
mov
enter
sub
gs
fsubl
sub
mov
loopne
mov
push
imul
push
fstpl
mov
dec
or
cld
test
in
int
pop
lods
lea
push
icebp
mov
andl
mov
push
lds
sub
cmp
inc
jp
mov
jae
addr16
je
push
jl
xlat
cmp
mov
jnp
out
dec
int
daa
ds
jo
scas
shll
inc
in
ja
into
mov
daa
leave
cmp
dec
pop
add
mov
dec
and
pop
cmp
or
mov
mov
and
mov
lcall
stos
mov
in
mov
fs
in
daa
lods
pop
dec
rorb
imul
dec
imul
loop
pop
out
jg
in
xchg
xor
xor
pusha
popf
mov
mov
pop
cltd
iret
sub
cmpsb
aam
cmp
bnd
push
test
xchg
daa
mov
frstor
cli
in
pusha
negl
sbbb
jle
adc
test
lret
mov
fadd
push
push
sbb
mov
stos
mov
cld
pop
hlt
sub
push
movsl
sub
add
mov
cmpsb
pop
xchg
sub
call
mov
mov
inc
cmp
outsl
push
push
pop
shrl
je
movsb
push
mov
cmpsb
mov
icebp
lea
and
inc
test
aaa
insb
jge
sahf
pop
pop
mov
les
sbb
jns
push
int3
arpl
repnz
xchg
ljmp
add
mov
rcll
ljmp
xchg
jp
inc
pop
fs
mov
das
shll
pop
icebp
jmp
jl
xor
aad
fdivl
adc
pop
mov
xchg
fdivrs
fadds
sbb
or
es
loopne
push
jmp
or
rorl
inc
dec
cli
nop
daa
and
pop
mov
loopne
push
mov
icebp
mov
cmc
mov
andb
adc
ds
addr16
xchg
lock
rep
mov
jp
pop
inc
insl
add
jg
pop
push
xchg
mov
mov
test
inc
outsb
loopne
pop
push
mov
subb
jl
cmpsb
xchg
cld
lcall
fimuls
and
lods
pop
inc
xlat
inc
lds
outsb
insb
pop
cmc
mov
lret
or
test
and
sub
fwait
pushl
ljmp
jg
xor
xchg
ret
popf
mov
lret
mov
roll
pop
mov
loopne
xor
pop
xor
jle
divb
mov
xlat
es
push
mov
outsl
pushf
cltd
fnstenv
mov
out
js
mov
adc
lods
ljmp
fisttpl
mov
das
lods
hlt
jno
mov
dec
in
fimuls
add
mov
and
pop
fdivl
pop
test
xor
cld
pop
pop
dec
adc
in
mov
leave
add
sub
and
pop
lcall
std
pop
repz
repz
xor
inc
jp
mov
lret
imulb
mov
cmpl
stos
aad
fst
jne
mov
rcll
mov
or
fstpt
fnsave
stc
shlb
jmp
mov
adcb
mov
sahf
xor
or
inc
fdiv
sbb
jb
adc
gs
nop
scas
xchg
jb
xor
pop
scas
and
mov
int3
movsl
mov
ljmp
jno
inc
and
test
imul
inc
and
sub
jle
lret
bound
out
add
jne
pop
ficoms
scas
es
cmp
int3
stos
push
mov
ljmp
jb
outsl
call
nop
daa
mov
or
lret
mov
push
loopne
lret
out
aaa
ljmp
jbe
lahf
push
ljmp
jae
mov
fstpt
xlat
stc
sub
int
mov
adcb
loopne
sbbb
or
jne
aaa
into
clc
sahf
fidivl
adc
add
jmp
sub
test
inc
or
test
daa
mov
in
inc
shrl
mov
repz
xchg
lret
or
aaa
pop
jnp
rclb
mov
lock
cmp
add
cli
xchg
lods
xchg
mov
jbe
sbb
sub
ss
inc
xlat
outsb
daa
fs
jmp
push
cmc
mov
adc
or
inc
fdivs
fstps
or
insb
add
movsb
mov
pushf
mov
pusha
mov
mov
or
daa
aad
mov
aam
mov
scas
adc
pop
xchg
aas
cli
je
negb
jge
pop
fldt
aad
fwait
xor
xchg
movsb
jbe
sub
adc
mov
or
shrb
mov
stos
cmc
hlt
lock
outsb
add
test
mov
push
sarl
jae
dec
xor
pop
insl
rcll
dec
mov
add
enter
mov
and
adc
adc
mov
vpsrlq
sbb
xor
mov
jns
imul
lahf
mov
and
loope
and
popf
lea
pop
xchg
cmpsb
and
dec
mov
inc
fstps
adc
cltd
mov
pusha
div
movsb
and
jae
ds
popf
lea
cmp
inc
fdivrs
cld
mov
fdivl
movsb
sbbl
cwtl
jmp
cmp
dec
pop
sahf
adc
push
pop
cmp
je
sbb
cmp
mov
aad
mov
gs
cs
lcall
cmpl
jnp
dec
xchg
sub
mov
and
add
outsl
stos
in
test
mov
or
or
mov
ds
rcrl
repz
mov
insl
cmpsl
jp
fimuls
cwtl
das
or
add
push
ljmp
outsl
mov
aam
xchg
mov
fcoml
cmpsl
divl
add
pop
das
cmc
fwait
xor
cmpsb
dec
in
ljmp
sub
mov
lcall
ds
inc
add
pop
adcb
mov
fidivl
xor
cwtl
repz
jecxz
pusha
idivl
push
jle
xchg
into
lcall
push
cmpsl
ds
mov
pop
outsl
je
jo
mov
jp
int
mov
aad
lods
or
es
imul
push
call
adc
jne
sbb
and
inc
movsl
cmp
mov
ret
pop
ljmpw
loope
push
aas
out
mov
lret
add
adc
adc
fwait
xor
test
push
ljmp
jno
and
dec
mov
leave
lods
inc
cli
pop
xsha1
cmpsb
or
es
sbb
hlt
or
aaa
cmp
mov
pop
pop
inc
fistl
mov
mov
shl
adcb
sti
aam
jp
sahf
xor
dec
mov
push
loope
aad
gs
nop
mov
lret
pop
sahf
adc
pop
cmp
sbb
push
ficompl
mov
clc
lds
jg
sbb
push
mov
int3
mov
mov
pop
fidivl
sarl
mov
aas
lods
dec
in
pop
push
lods
xchg
sub
and
xchg
cs
repz
jmp
add
jo
push
sub
push
orb
cmp
lods
inc
inc
pop
pop
mov
outsl
lret
bound
xchg
push
in
dec
in
aas
sbb
cmp
push
cmp
popl
pop
out
mov
shll
add
aad
cltd
sub
xchg
mov
inc
inc
aas
add
out
xchg
loopne
lea
lahf
cvttps2pi
dec
mov
dec
loope
sub
push
inc
mov
leave
int
jo
movsb
cmp
cltd
sti
xchg
add
test
sbb
iret
jle
sarl
mov
cmp
jae
in
push
in
mov
aad
or
xchg
sub
ss
pushf
scas
inc
movsl
push
push
jmp
ret
fnsave
jb
out
out
xchg
stos
pop
xchg
sub
mov
sub
add
and
jge
in
xorl
or
je
sub
inc
mov
jmp
inc
fimuls
ja
push
out
data16
cltd
lret
add
mov
xchg
push
cmp
dec
mov
pop
jmp
or
mov
out
jl
fwait
cmpsb
or
data16
or
mov
mov
sub
das
into
stos
dec
lcall
fwait
scas
inc
sub
push
dec
dec
loop
subb
cmpsb
call
adc
in
ljmp
cmp
mov
mov
pop
jae
les
xchg
mov
lds
out
dec
adc
ss
scas
and
mov
fisttpll
push
push
pop
repnz
shll
adc
orl
sub
data16
add
test
pop
sahf
aam
sarb
cmp
int
push
incl
jne
fnsave
xor
jae
xchg
movsl
call
push
mov
cmp
insb
sbb
aad
lea
out
pushf
loopne
dec
adc
shlb
adc
mov
flds
sahf
cld
test
jl
sbb
mov
idiv
xchg
sub
inc
fistl
mov
stc
in
cmp
sbb
repnz
repnz
aaa
mov
jbe
mov
xor
add
outsl
xor
mov
mov
cmpsl
adc
ret
lret
sbb
jge
cmp
add
mov
mov
fstpt
or
mov
pop
lret
push
mov
fidivl
aad
jp
aas
add
pop
xchg
and
lods
jecxz
adc
cmp
pushl
pop
lock
xchg
mov
ficompl
sub
sub
mov
dec
adc
mov
shrb
shl
mov
es
cmpsb
push
adc
inc
js
mov
sahf
lret
repz
and
xor
scas
xchg
push
icebp
mov
scas
jmp
flds
test
cmp
movsl
cmp
pop
into
mov
jle
loopne
rcrl
xchg
sub
jmp
mov
mov
xchg
sub
nop
sbb
xor
xchg
cs
ss
ljmp
call
xor
lret
bound
push
stc
mov
push
out
jo
adc
lret
imulb
shrl
aaa
into
push
push
adc
jno
or
lret
cmc
push
jmp
pop
push
jp
mov
ja
bound
pop
repnz
fmulp
data16
sub
mov
xlat
jae
pop
lods
clc
xchg
sub
iret
and
jge
movsb
cmp
shrb
fs
popf
jmp
hlt
mov
xor
insb
or
jl
lea
mov
push
call
adc
lds
cmp
xor
adc
aad
movsl
push
mov
mov
das
push
jmp
xor
push
decb
imul
pop
fbstp
or
lahf
xor
es
push
call
inc
out
mov
sbb
adc
xor
mov
xchg
push
in
mov
pop
lock
mov
dec
or
pop
xchg
push
and
icebp
scas
lea
adc
repz
cmp
inc
add
jecxz
fsubrs
add
fnstcw
pop
aaa
into
mov
xchg
sub
pop
cmc
rorb
xor
sub
nop
daa
add
adc
and
xchg
jle
arpl
lret
hlt
imul
adc
scas
inc
mov
int3
arpl
mov
mov
pop
add
mov
mov
mov
loopne
pop
add
add
mov
pop
repz
stos
int
aam
data16
dec
cmc
push
out
push
scas
xchg
dec
xchg
sub
cmp
in
lcall
aaa
in
sub
pop
sbb
scas
push
mov
jo
std
jnp
es
orl
xor
ljmp
rclb
fnstenv
cmp
andb
popa
insl
cmpl
mov
ret
pop
push
or
push
xor
jo
jae
ljmp
call
xor
sbb
push
pop
mov
mov
jo
mov
loop
adc
cwtl
das
xor
pop
lock
push
lret
bound
mov
cmpsl
ljmp
and
pop
nop
sbbb
ljmp
pop
aaa
fnstenv
pop
mov
addl
pandn
pop
lock
add
xchg
cmp
adc
test
scas
movsl
or
clc
lahf
sub
lcall
data16
xchg
mov
rcr
cli
repnz
fidivs
dec
jg
jns
pop
lock
lcall
out
out
xchg
adc
jno
inc
sbb
xchg
popf
mov
xor
out
pop
and
out
test
out
outsb
fnstenv
lcall
loop
fbstp
add
mov
push
mov
mov
fidivl
rcll
popf
cmp
cltd
xor
movsb
push
popf
out
xchg
add
jno
sub
push
pop
in
xchg
scas
cmpsl
pop
icebp
jo
or
es
push
pop
fnstenv
js
aaa
mov
les
incb
lcall
pop
cmc
mov
test
jno
mov
fsubr
repz
sub
out
xchg
pop
icebp
js
adcb
lcall
jecxz
fidivl
add
mov
and
mov
cmp
daa
shrb
inc
xchg
jne
test
cmpsb
xchg
inc
fcmovnb
fidivs
jecxz
loope
adc
dec
inc
ss
mull
mov
adc
xlat
mov
outsl
xor
into
gs
push
ret
ja
outsl
mov
ret
repz
add
cmp
push
call
xchg
jmp
loopne
adc
ss
cmp
dec
test
in
movsl
fsubrs
mov
pop
out
add
ds
or
jle
scas
inc
mov
shrl
in
pop
repz
repz
cmp
add
or
mov
fdivl
out
sub
push
jne
add
mov
adc
aaa
into
pop
xor
pop
rep
xor
mov
ficoml
scas
adc
das
mov
xchg
mov
int
mov
dec
flds
add
mov
push
push
das
mov
test
cmp
inc
add
dec
inc
pop
call
stos
xchg
imul
enter
jecxz
or
sbb
dec
dec
xchg
je
xchg
ss
cltd
mov
mov
data16
in
leave
pop
adc
repz
inc
aas
frstor
imul
xchg
mov
aad
ret
cmp
xor
push
hlt
pop
pop
dec
fiadds
test
scas
cmp
clc
test
sub
dec
nop
inc
mov
jnp
lret
pop
jecxz
loope
lret
imul
sets
in
jns
xor
mov
subb
cld
push
cwtl
and
cmp
or
and
popf
cs
lods
in
ds
cli
cld
cmp
jge
dec
lea
mov
lea
sahf
add
jle
outsl
cmpxchg
dec
sahf
fwait
es
lret
push
fdivs
bound
mov
popa
imul
dec
mov
ljmp
adc
xchg
cmp
push
mov
inc
adc
cmpsl
mov
arpl
imul
outsl
or
push
xchg
pop
inc
pop
popf
push
jne
mov
mov
mov
dec
dec
ss
pop
mov
fcmovne
push
int3
leave
imul
xor
jl
jg
xchg
stos
and
out
adc
in
cmp
pop
dec
jg
test
add
mov
lahf
sbb
in
fwait
push
and
sub
mov
mov
inc
jmp
push
jecxz
cmp
inc
pop
lea
cmp
push
loop
shll
xor
push
in
push
jg
fcomp
push
mov
out
or
inc
push
xchg
sub
mov
jne
jmp
pop
mov
mov
push
aam
mov
jmp
daa
pop
adc
scas
xor
mov
in
xchg
pop
cmpsl
mov
sub
repz
imul
rcrb
push
push
test
fwait
addb
scas
rcrb
jg
sbb
sub
pop
insb
dec
iret
jo
fwait
nop
sbb
loopne
xchg
sbb
aas
sub
int
mov
aam
mov
jmp
pop
pusha
js
test
shlb
std
fcoms
mov
dec
or
lock
js
popa
xchg
xorb
stos
jge
repz
lea
daa
shll
dec
push
fwait
test
or
push
xor
mov
xor
xor
stos
pushf
or
cld
les
mov
inc
sub
enter
jne
xchg
pop
ffree
div
mov
loop
sti
adc
stos
jl
adcb
popf
das
into
xchg
loope
fstpt
add
cs
pusha
xchg
xchg
sub
cmp
inc
sbb
or
push
cmp
jb
daa
inc
fstps
cmc
mov
jns
pop
stos
loop
ret
scas
inc
pushl
sbb
lea
xchg
mov
bound
imul
pop
sbb
dec
jg
jo
insb
data16
popf
shl
mov
test
icebp
and
mov
int3
test
ret
pop
xchg
leave
push
call
ljmp
jg
outsb
mov
jge
rcll
jecxz
iret
inc
add
cli
xor
push
sbbl
in
cmpsb
lahf
fcoms
ljmp
data16
jp
es
mov
mov
arpl
leave
shlb
sbb
and
push
out
adc
push
andb
mov
aaa
jne
mov
pop
ljmp
aad
xchg
lret
pop
sti
pop
dec
leave
and
push
pop
ret
jg
mov
jbe
sarb
push
jmp
mov
jl
mov
rcrb
xor
jge
addl
leave
lret
lahf
dec
in
pop
ja
push
test
rorb
in
mov
mov
mov
shlb
adc
and
xchg
mov
xor
int3
dec
mov
sbb
jmp
movntps
mov
dec
sub
iret
or
add
inc
test
and
mov
arpl
ret
out
rorb
push
aad
sbbl
push
inc
jnp
inc
mov
decl
mov
xchg
ret
cmp
movsb
fbstp
fadd
lock
popa
cmpsl
cs
jle
enter
mov
pop
icebp
xchg
xchg
out
inc
sbb
fiaddl
lods
call
in
mov
addr16
or
xchg
movsl
jae
sti
adc
cmpsb
in
gs
inc
repz
call
mov
mov
mov
fwait
mov
jmp
pop
sub
cmp
adc
rolb
loope
mov
mov
cmp
add
leave
call
or
in
sbb
jbe
lock
add
cli
push
dec
nop
fcmove
adc
lcall
arpl
mov
stos
das
aaa
adc
test
jns
test
or
or
les
repz
into
jns
out
cmp
cmc
cmp
jp
jnp
cmc
fdiv
add
cs
pop
rolb
fs
sbb
es
inc
shlb
adc
mov
call
pop
cmc
lock
xchg
add
fstps
adc
stos
scas
cmp
xchg
push
rorl
adcb
cmp
movsb
loop
call
sbb
mov
mov
or
lock
shll
or
sar
jp
pusha
jmp
subb
aaa
out
pop
sbb
insb
sub
in
adc
ficoml
stos
mov
js
pop
or
mov
inc
mov
ficoml
cmp
dec
pop
push
mov
ljmp
andl
pop
ljmp
push
lock
leave
stos
jle
push
mov
cmp
dec
jmp
dec
loope
push
sub
push
inc
data16
xor
cwtl
shlb
adc
push
adc
push
icebp
cwtl
icebp
push
iret
mov
push
mov
popf
pop
arpl
aam
ret
sarl
cmp
xor
in
popf
mov
add
and
mov
into
pop
sub
movb
daa
nop/reserved
roll
jle
in
xchg
fadd
shlb
mov
and
mov
push
add
bound
pop
mov
push
mov
mov
sub
jl
jae
sub
ficoml
clc
js
aas
sahf
aad
inc
add
jp
ret
sbb
xchg
dec
shrl
call
and
out
jns
dec
dec
cs
add
inc
mov
les
pop
loopne
sti
lea
or
sbb
push
out
pop
out
mov
dec
inc
movsl
mov
popf
ja
jl
lods
arpl
and
in
lock
stos
mov
cmp
lods
cltd
dec
and
cmp
mull
in
xor
js
dec
xchg
push
imul
inc
rcrb
je
sub
pop
sbb
setno
sub
cwtl
mov
pop
andb
repz
scas
sarb
add
add
loop
inc
ja
out
mov
sub
fsubrl
cmp
add
fidivs
dec
testl
push
nop
test
movsb
dec
cli
push
inc
enter
aaa
sbb
int
jb
jg
cmp
test
add
dec
push
xor
rcl
es
cmp
xor
jl
mov
sbb
cs
fimull
fs
es
mov
sahf
dec
fmul
and
cmp
outsb
push
mov
cmpsb
jmp
fisubrs
loop
push
jnp
jns
adc
inc
mov
push
cmpl
sbb
mov
popf
das
mov
sbb
jp
cmpsl
push
ds
or
aas
test
mov
fisttps
cld
pop
mov
subl
clc
jecxz
pop
cwtl
inc
jl
sub
stos
add
bound
add
je
std
mov
or
xor
push
lods
adc
push
inc
js
push
jle
js
mov
lock
cmpb
cmpsl
insb
sbb
sbb
test
shlb
fcomps
push
out
pop
sahf
dec
add
mov
jns
inc
shll
jle
rorb
mov
dec
lods
xor
cmp
or
test
mov
xchg
adc
mov
cmp
adc
jbe
pop
pop
cmp
bound
mov
or
outsl
xor
mov
xchg
aas
loope
sahf
dec
cmp
cmp
xchg
orb
xor
mov
inc
mov
gs
fildl
movsb
mov
mov
push
push
jo
das
sub
hlt
sarb
adc
mov
inc
fldcw
test
cmp
ficoml
icebp
push
jnp
lds
cmp
xchg
dec
xor
andl
dec
pop
sub
adc
sbb
jno
push
fbstp
pop
in
jo
mov
jno
mov
in
mov
lret
push
pop
in
daa
push
mov
in
push
sbbb
loop
mov
addb
lret
pop
bound
jp
push
sbbl
fcmovnu
fisubrs
in
mov
mov
xchg
xchg
jae
std
add
mov
das
mov
mov
dec
stos
sbb
jns
adc
lret
inc
xchg
jb
xchg
stos
push
inc
pushf
pushf
and
stos
scas
loope
sub
add
push
adc
inc
xor
pop
xor
dec
push
pushf
add
sub
popa
cltd
rol
mov
pop
and
mov
jbe
cmp
add
out
testl
roll
jecxz
aas
push
stos
cmp
insb
hlt
dec
sub
jne
arpl
ss
loope
push
out
mov
jmp
jb
jge
jl
dec
xchg
push
lret
insb
cmp
int3
movsb
jle
dec
out
test
adc
jl
mov
sarb
mov
xchg
insl
shlb
out
jge
adc
push
in
int3
and
push
es
arpl
cmp
dec
jne
push
scas
outsb
xor
jnp
add
push
aas
subb
mov
cmp
imul
filds
sbb
popa
ret
mov
mov
sub
imulb
cmpsb
movsb
sahf
pop
xchg
outsb
jmp
es
mov
sub
pop
cmp
pop
push
mov
inc
sub
dec
lret
ja
push
in
shrb
in
jle
aad
and
dec
scas
inc
jbe
sbbl
xor
mov
pop
add
pop
pop
ljmp
xchg
xor
je
jl
call
inc
pusha
add
addr16
in
cmp
mov
lods
dec
cmp
lea
adc
out
jns
adc
shlb
out
and
xor
out
xchg
and
cmp
mov
jns
shll
jg
imul
jmp
sub
filds
push
push
inc
adc
scas
inc
aam
adc
mov
popa
hlt
sarl
ljmp
mov
out
add
mov
fld
jge
cmpsl
sbb
mov
lock
dec
les
mov
in
or
fimull
xchg
sahf
mov
xchg
adc
test
mov
jecxz
add
addl
xor
mulb
pop
pop
cwtl
inc
enter
rorl
pop
les
jg
sarl
inc
sbb
cs
leave
dec
test
jle
mov
stc
mov
pop
add
cmp
out
addb
ret
divb
mov
divb
rcl
jl
fbld
inc
and
cmp
add
xchg
aam
jae
mov
fwait
xchg
jnp
inc
movsl
xor
cmp
divb
int3
sbb
shrb
std
cmpsl
or
cs
mov
es
xchg
insl
or
push
xchg
std
sbb
sbb
cmp
xchg
jne
or
sti
mov
sahf
jo
xchg
cmp
cmp
xor
dec
clc
xlat
sbb
mov
inc
mov
leave
sub
test
mov
jno
dec
xchg
gs
dec
jle
sbb
pop
popf
inc
scas
adc
mov
push
inc
mov
jmp
mov
dec
inc
jmp
sbb
cltd
loopne
testl
rcl
dec
mov
faddl
or
enter
das
dec
and
enter
push
jae
mov
cmp
sbb
mov
inc
neg
jecxz
hlt
pop
mull
pusha
cmc
push
add
push
negb
jns
inc
dec
dec
pop
cmpb
sub
test
sub
push
cmp
test
mov
test
pop
arpl
xchg
mov
out
mov
popl
aaa
cmpsb
or
or
sbb
pop
and
push
inc
cld
ss
loope
scas
mov
mov
data16
sub
rcrl
mov
orps
cmc
push
dec
and
mov
xor
xchg
repnz
mov
mov
push
mov
sbbl
les
cmp
adc
fidivrl
popf
movsl
add
dec
jo
pop
shr
shll
and
shl
stos
imul
push
jbe
lds
hlt
push
rclb
ss
and
add
lahf
fsubr
ret
lret
aaa
imul
xchg
rorb
mov
cmp
pushf
mov
in
fsubrl
jmp
and
adc
pushl
repnz
addr16
and
je
fcomip
hlt
lods
cmp
add
getsec
adc
mov
xchg
movsb
imul
call
aad
xor
mov
push
pop
adc
out
test
sti
xchg
mov
out
mov
pop
dec
jmp
mov
pop
sbb
push
jp
repnz
movsb
bound
adc
daa
push
test
mulb
pop
xorl
mov
add
test
rcr
mov
stc
fistpll
sub
sar
adcb
pop
add
dec
repnz
push
xchg
gs
ja
pop
xor
out
mov
jnp
mov
out
mov
mov
pushf
add
dec
in
aad
lcall
push
cmp
sub
pushf
inc
cmc
iret
mov
out
add
adc
fsubp
rolb
into
add
mov
movsb
pop
in
hlt
jmp
rcrl
mov
cmc
faddp
in
mov
out
sbb
aas
daa
sarb
lock
dec
fcoml
ljmp
jecxz
fldl
in
mov
cmp
dec
mov
outsl
mov
push
xchg
sub
cmp
ret
pushf
push
das
push
jl
xor
cmp
mov
mov
sub
jae
enter
lds
and
or
jmp
mov
jle
insl
repz
and
push
stos
dec
mov
mov
loopne
jbe
or
sub
adc
les
jb
lods
cmp
inc
inc
negl
mov
mov
outsl
ficoms
sti
mov
mov
bound
and
mov
jle
xchg
dec
lret
fisubl
inc
lahf
adc
cmp
push
mov
push
inc
pop
mov
mov
mov
lds
inc
and
push
fdivp
or
jmp
clts
scas
jae
loop
adc
pushf
stc
jge
mov
cmp
add
dec
and
minps
inc
hlt
cs
nop
xchg
bound
repnz
sbb
jb
jnp
ss
xchg
add
int3
sbb
inc
out
pop
shrb
sbb
in
imul
lahf
mov
or
frstor
sub
scas
test
push
xlat
fistl
jns
out
das
jp
mov
fwait
sbb
test
daa
sub
mov
inc
jns
jbe
inc
xchg
inc
out
rorl
scas
stc
xor
cmp
pop
out
cmp
inc
jg
popa
sahf
inc
jne
adc
arpl
iret
xchg
jae
sub
jmp
scas
std
mov
and
pusha
aam
xlat
and
test
loop
call
pop
cmpsl
mov
adc
pop
fs
xchg
cmpsb
les
icebp
push
mov
jle
jge
mov
imul
or
cld
call
loopne
inc
testb
icebp
dec
dec
nop
mov
pop
test
pop
ljmp
fcomps
or
push
std
adc
push
add
mov
ret
jmp
jl
jge
dec
dec
fldenv
out
test
adc
insl
addr16
into
mov
push
enter
mov
sbb
adc
or
test
repz
push
push
mov
jb
mov
xor
ficompl
test
or
and
mov
sub
dec
sub
lcall
movsb
xor
jns
pop
and
in
mov
out
xchg
cmp
dec
lods
cmpsl
lock
dec
pop
fnstcw
dec
sahf
and
pop
hlt
cmp
sbb
sahf
fisttpll
ss
fistpl
mov
cmp
xchg
les
and
inc
pop
rolb
imul
jnp
cmp
les
cmp
adc
lret
mov
popa
dec
gs
cmpsb
mov
aam
scas
mov
push
adc
adc
loopne
aas
or
gs
xchg
adc
inc
das
jp
loope
jle
js
inc
int3
paddb
push
push
mov
outsb
ret
dec
dec
leave
movsl
daa
sahf
dec
sub
push
sbb
or
divb
jnp
int3
aad
inc
divl
in
adc
mov
inc
scas
aad
pop
lods
pusha
jle
dec
push
scas
out
xchg
jo
aaa
xchg
xchg
and
test
sahf
sbb
dec
lds
push
inc
in
les
aad
test
rol
out
push
mov
cmpsl
pop
push
std
push
pop
shrb
xor
out
pop
xchg
arpl
add
jecxz
aad
clc
enter
xchg
pop
xor
icebp
xor
pusha
orb
aam
jle
imul
add
mov
fs
cmp
in
cltd
push
mov
mov
ficoml
andb
insb
adc
sub
xchg
notb
adc
aas
into
pop
xor
push
sbb
aaa
insb
cmpb
jl
ss
popa
pop
lds
pop
pop
gs
out
or
jmp
cmp
cwtl
out
fistpl
jb
pop
enter
aam
xchg
aas
stos
cmp
jle
add
orl
mov
sub
out
jns
mov
xor
jno
shll
movb
push
outsb
call
or
jl
cmp
cmc
mov
flds
addb
mov
aaa
pop
inc
sub
daa
push
push
inc
cmp
push
sbb
out
movsb
sub
adc
fcompl
divl
push
es
roll
jne
or
inc
xchg
xchg
pop
shll
pop
in
xor
ret
xorb
js
push
sub
js
dec
bound
xchg
mov
cmpsb
cmp
lret
aam
xor
test
jmp
jl
add
inc
cmp
jg
dec
xchg
out
jecxz
xor
movsl
jns
adc
jnp
xchg
rcrl
jge
or
dec
scas
push
jb
ja
push
aaa
inc
adc
push
repnz
sti
push
pusha
xchg
ficoml
mov
sti
and
sbb
mov
and
mov
outsl
adc
imul
out
dec
cmc
pop
ja
dec
lret
adc
mov
popa
sarb
rcrb
push
add
jmp
lods
shr
inc
lahf
cmp
mov
and
cmc
and
push
add
push
mov
add
nop
loop
stc
xchg
sub
js
xchg
push
and
mov
adc
adcl
mov
clc
repz
push
shlb
mov
dec
cmpsl
sahf
lret
mov
ret
push
pop
out
leave
popa
fmull
outsb
outsb
dec
dec
jl
jno
adc
decl
jecxz
push
jmp
pop
mul
jns
lret
mov
and
aaa
xchg
and
mov
dec
cmpsl
rolb
push
in
dec
js
adc
adc
mov
push
lea
gs
cmp
aaa
test
js
test
pop
mov
pop
push
sbb
cmc
dec
xor
push
mov
enter
jbe
outsl
aad
mov
or
xor
inc
mov
jns
pop
inc
sub
int3
shll
outsb
adc
ds
cwtl
sub
pushf
mov
sub
addr16
or
stos
mov
mov
fs
jne
in
dec
xchg
test
dec
call
push
adc
pushf
scas
jl
xchg
in
lcall
sub
jge
mov
pop
xor
push
jne
cmpsl
mov
daa
mov
ror
sbb
popf
jl
jl
sub
lahf
scas
cmpsl
sub
fwait
mov
mov
clc
in
jb
insb
lods
movsb
adc
test
lret
sub
decb
dec
lds
jmp
mov
es
sbbb
mov
xchg
jbe
mov
adc
xchg
ret
data16
dec
sahf
mov
pusha
xchg
lods
fnsave
add
jno
mov
je
and
xor
mov
dec
inc
pop
insb
int3
sarb
push
repnz
xor
into
adc
addr16
mov
jg
sub
sub
xchg
jno
mov
sub
or
addb
into
jle
aaa
sub
das
mov
icebp
mov
adc
jb
or
and
ss
sahf
push
and
mov
cmp
adc
inc
or
out
push
movsl
arpl
add
imul
shl
stos
xor
jl
stos
cmpsl
mov
xor
enter
sub
pop
inc
xchg
mov
int
std
insl
pop
idivl
cmpsb
cmp
sbbb
loop
xorl
ss
pop
inc
sahf
jne
js
loopne
sub
out
adc
daa
aas
popf
cmp
mov
arpl
mov
call
sub
test
and
lods
inc
xor
fsubrs
ret
sub
je
mov
push
test
push
dec
sub
or
and
sbb
mov
std
repz
hlt
xchg
icebp
inc
ja
mov
xchg
add
ja
dec
les
leave
xchg
pop
xor
mov
sbb
pop
mov
into
sahf
mov
pop
enter
add
jne
leave
cmp
stos
repz
sahf
sar
dec
iret
xchg
sbb
arpl
xor
push
and
cmc
pop
xchg
je
mov
andl
sub
xchg
add
andb
ficoml
mov
pop
adc
pusha
ret
out
inc
daa
addr16
prefetcht1
sub
or
xchg
cltd
inc
repz
popa
andb
sbb
jno
lods
outsl
inc
push
sub
dec
fwait
lcall
pop
je
aad
jp
repnz
or
xorb
jb
adc
xor
pop
push
push
fcomps
cmpsb
shll
shll
add
sbb
push
sbb
push
inc
test
push
xchg
cltd
movsl
into
mov
and
mov
test
jns
sub
xchg
xchg
addl
pop
leave
lds
jbe
push
movsb
scas
in
scas
adc
daa
and
movsb
push
lcall
repnz
bound
mov
mov
cmp
sarb
dec
jbe
out
aaa
and
stos
in
pop
adc
dec
in
xor
lock
lea
xor
aas
movsb
xchg
pushf
jle
sbb
sub
push
jmp
add
out
xor
xchg
andb
cmp
outsb
mov
cmp
clc
mov
or
iret
push
jo
sarl
add
xchg
lcall
inc
lock
je
loope
aas
jp
xchg
call
and
sub
push
cmp
fisubs
loope
mov
sti
ja
add
and
sub
lods
movsb
jae
sbb
push
sahf
inc
pop
xor
fnsave
jmp
push
loope
cmc
mov
rorb
jg
rcrl
and
filds
ficompl
pop
rorl
cld
cli
xor
push
jmp
fsts
mov
adc
cmp
or
xchg
jmp
inc
xor
xor
cmp
mov
test
mov
xchg
incb
clc
xchg
js
adcb
dec
dec
mov
fs
nop
stos
dec
aad
aad
fwait
push
test
and
bound
imul
divb
xorb
adc
into
fdivr
lds
jg
mov
dec
cli
xor
outsl
pop
les
adc
mov
ret
cmp
xchg
aaa
mov
mov
movsb
sbb
xor
lds
sbb
cltd
add
icebp
sub
negl
imul
stos
sarb
repnz
mov
cmp
inc
mov
xor
scas
add
inc
shr
pushf
push
cmp
pop
mov
inc
mov
mov
cmpsl
add
sbb
lods
fsubs
mov
inc
pop
and
movsl
insb
or
cmpsb
mov
frstor
or
cmp
scas
mov
sbb
stos
push
mov
ficompl
scas
fwait
mov
inc
pop
gs
sbb
mov
imul
xchg
fsubrs
into
cs
jo
mov
mov
js
not
adc
mov
testb
outsb
addr16
icebp
stos
dec
jge
pop
rclb
xchg
mov
mov
sbb
rcll
out
cmp
sub
mov
in
dec
mov
adc
ja
mov
dec
repnz
aaa
adcl
in
fiadds
sub
mov
adc
lock
js
out
dec
imul
clc
jmp
mov
imul
inc
in
xchg
div
dec
testb
push
das
gs
in
xchg
pop
loopne
cmp
aas
hlt
xchg
inc
jp
sub
pop
aaa
imul
jl
aam
add
fwait
jmp
rcrl
xchg
cmp
jge
jnp
mov
mov
lods
inc
inc
pushf
pop
cwtl
or
xchg
enter
ret
in
or
ja
lahf
and
pop
pop
sbb
mov
jnp
xlat
jbe,pn
push
into
mov
xchg
insb
cli
in
sub
imul
addr16
xor
inc
lahf
hlt
into
jge
aas
mov
mov
call
ljmp
fadd
fsubl
mov
insb
xadd
in
ret
aad
mov
lock
mov
push
xchg
mov
data16
inc
loop
mov
rclb
sbb
push
sbb
addr16
sub
pop
scas
fsubrs
or
mov
mov
lret
jno
idivl
xchg
cltd
hlt
out
cmp
fcoms
sbb
daa
or
cmpb
push
pop
push
pop
pop
fs
aaa
sbb
xor
pop
dec
sbb
xchg
sahf
mov
out
pop
in
lock
cmpsb
lods
rcrl
cmp
dec
pusha
xchg
cmpsl
mov
xor
in
adc
sub
mov
movsb
stos
in
push
iret
jno
jnp
fwait
push
fmulp
dec
imul
dec
push
in
vmovaps
imul
or
xor
ja
fcoms
jb
fs
mov
inc
cmc
lahf
adc
js
int3
sbb
xor
mov
lret
pop
shlb
and
pop
mov
xor
ja
push
pop
and
cwtl
push
adc
cmp
jae
and
mov
icebp
aaa
stos
sbb
in
scas
loop
inc
sahf
aam
xchg
in
nop
dec
lret
aam
push
clc
test
fdivrl
pop
sbb
push
mov
shrl
or
cmpsl
lcall
ret
mov
pop
push
pop
jb
iret
test
addr16
faddl
cmpsl
gs
xchg
enter
dec
aaa
push
mov
popf
or
and
ss
or
push
pop
mov
xor
ja
xchg
add
test
inc
daa
inc
cmp
mov
lahf
mov
test
aam
movsl
cwtl
cwtl
gs
les
sub
jbe
test
out
mov
pop
fldt
xchg
sbb
mov
insb
loop
mov
xor
movl
xchg
xchg
inc
cmpsb
aad
pop
dec
dec
in
pop
xchg
xchg
fcmovnb
stc
fmull
jnp
sbb
pop
jecxz
adc
sar
push
sti
mov
out
mov
xchg
sbb
jns
cmpsb
bound
jmp
clc
daa
add
dec
pop
xor
in
out
add
mov
mov
imul
hlt
cmpl
lods
and
jae
mov
pop
gs
xchg
test
sbb
mov
aaa
or
push
mov
xchg
mov
outsl
xchg
or
jnp
fstpt
jl
lock
les
jnp
mov
ljmp
mov
inc
arpl
add
aad
imul
fs
outsl
xchg
fildl
jnp
xor
imul
push
mov
pop
mov
loope
xchg
subb
lcall
nop
mov
pop
xlat
and
addr16
sbb
xchg
jae
aad
rcrl
xor
mov
bound
add
add
inc
dec
roll
mov
mov
sbb
pop
lret
orb
inc
xchg
jo
test
ret
imul
cltd
jmp
push
lahf
cmp
xchg
and
sub
insb
mov
xorl
mov
js
pop
cmc
pop
dec
sbb
lret
arpl
mov
shlb
movsb
adc
push
mov
jne
hlt
test
jmp
add
fadds
sub
or
or
mov
fldcw
cltd
sub
jo
fs
int
out
or
lea
test
enter
adc
mov
and
loope
jg
test
pusha
or
push
mov
mov
adc
repz
out
mov
xor
rcrl
out
push
and
pop
fidivrl
cmpsl
push
je
mov
fidivs
add
sub
mov
leave
iret
cwtl
clc
loop
mov
mov
movsb
dec
in
scas
jno
inc
lret
je
pop
cld
cmpl
les
jmp
add
mov
cwtl
sbb
orl
jmp
shrb
adc
pop
sub
shlb
jecxz
fildl
ficoml
mov
sub
jno
lahf
sbb
add
xor
sbb
in
ja
imull
pop
fdivp
xchg
sbb
sar
mov
push
pushf
gs
lods
push
inc
push
mov
add
scas
inc
leave
shlb
lfs
add
aas
loopne
add
push
shl
stos
pushl
dec
mov
add
out
mov
dec
sti
cmc
aas
bts
push
lcall
fstenv
lcall
orb
mov
cltd
in
aas
sbb
ficomps
jecxz
or
mov
in
shrb
das
imul
mov
fwait
xchg
les
scas
xchg
std
sbb
sub
rcl
mov
sub
jp
jge
jle
dec
or
scas
push
dec
jno
mov
pop
pop
pop
iret
repnz
or
scas
aas
mov
lret
insl
sbb
push
jmp
cmp
push
stos
lds
or
int3
mov
sub
test
movb
xchg
mov
mov
jmp
or
dec
adc
ljmp
sbbl
adc
dec
in
fidivrs
cwtl
pop
enter
mov
jge
mov
lcall
adc
daa
xor
gs
into
addl
js
push
rdpmc
lret
aad
xor
shrb
push
hlt
mov
mov
adc
sbb
fisttps
scas
data16
out
lret
xor
or
jne
xor
movsl
cmp
xchg
jb
mov
scas
inc
mov
fcmovbe
outsb
jmp
mov
imul
xchg
imul
enter
daa
ljmp
cmp
push
jno
cmpb
cmp
pop
jge
rorb
stc
das
jnp
lds
inc
sub
pop
js
lahf
adcl
jbe
push
orl
stos
push
es
sar
xchg
add
lock
cli
adc
gs
dec
sbb
notb
idivl
shrl
push
push
in
mov
pusha
hlt
arpl
jle
adc
ss
test
ljmp
arpl
dec
mov
ljmp
and
nop
cmp
rcll
dec
dec
ljmp
pop
mov
dec
and
imul
or
pop
hlt
cmpsl
je
addb
mov
push
stc
push
popa
sti
xchg
aas
das
and
pusha
pusha
test
inc
test
xchg
js
mov
out
stc
pop
mov
inc
lds
mov
movsb
mov
imul
cmpsb
push
sub
es
idivb
cld
jecxz
xor
push
cltd
xchg
sub
daa
mov
mov
imul
mull
or
nop
jmp
push
dec
push
mov
jp
dec
pop
and
cmp
jb
add
out
inc
and
xchg
sub
lahf
xchg
imul
jle
jmp
sbb
sbbl
xchg
cmp
pop
inc
faddl
and
cwtl
mov
into
gs
adc
pop
cmp
xchg
push
xorl
push
inc
jno
xor
push
push
push
mov
cmp
lods
inc
mov
aam
orb
ja
shrd
pop
lcall
adc
sub
fidivl
xchg
bound
shrb
sub
or
pop
mov
pop
sahf
daa
out
push
lods
inc
shrl
stos
inc
lcall
jb
scas
xor
and
jae
adc
xor
jbe
fsubs
mov
cwtl
push
xor
outsl
arpl
pop
mov
test
lea
xchg
push
cmc
adc
rolb
or
push
dec
pop
mov
jb
imul
mov
cld
dec
loopne
sbb
test
dec
push
xor
mov
cmpsl
and
pop
hlt
push
inc
mov
push
int
aam
clc
out
iret
data16
or
lret
outsl
push
call
ret
rcll
lds
repz
xchg
push
mov
xchg
mov
fistpl
and
cltd
sbb
ds
xchg
sub
xchg
in
sub
in
js
fs
xchg
iret
adc
aam
inc
cmp
test
pushf
lret
adc
ds
nop
mov
sbb
push
sub
mov
mov
mov
jnp
push
pop
mov
nop
loopne
std
sub
cwtl
add
fsubrl
hlt
add
jp
shll
pop
in
lea
cli
mov
mov
jae
addr16
add
idiv
shlb
adc
std
addb
sbb
inc
sub
xor
rolb
jae
dec
add
mov
xchg
aaa
xor
jo
or
std
aam
test
add
sub
push
lcall
loop
pop
dec
iret
es
xor
repz
add
std
xchg
arpl
sub
fsubs
sub
hlt
jl
or
and
adcb
inc
rcrl
sahf
xor
mov
mov
xlat
outsb
and
xchg
sub
mov
stos
push
lods
sbb
and
imul
into
hlt
adc
je
lock
ja
imul
ret
sub
hlt
push
xchg
and
sbb
xchg
jbe
xchg
test
mov
cmp
or
jp
ds
imul
xor
ja
cltd
jle
or
push
mov
inc
stos
sbb
fildl
pop
xor
in
out
pop
lock
in
fnstcw
lcall
popf
xor
into
sub
and
das
mov
loope
push
gs
es
adc
mov
mov
dec
sub
adc
cltd
jle
xorb
enter
and
xor
cs
add
jns
imull
mov
cltd
loope
call
xor
out
jecxz
fbstp
frstor
in
fistpll
cmp
out
loopne
fildll
fsubrs
pop
data16
cmp
iret
data16
insl
mov
lret
fadds
addr16
xchg
sub
sub
int
pop
test
addr16
shlb
mov
or
push
shlb
cld
or
cs
data16
cmp
je
je
fbld
mov
fnstenv
testl
bound
push
scas
ret
enter
stc
jmp
repz
aaa
into
mov
and
mov
add
mov
loop
stc
xbegin
fcoms
cmp
mov
lret
jne
mov
int3
mov
stc
mov
clc
loop
rcrl
cmp
mov
mov
mov
mov
data16
subl
popfw
or
lods
inc
aad
mov
mov
es
xor
add
ljmp
pop
dec
out
aam
pop
pop
jbe
mov
pop
xlat
lods
inc
or
push
in
adcl
inc
fucomi
jg
xchg
mov
testb
out
pop
mov
scas
mov
pusha
testl
pusha
add
sub
pushf
xor
das
and
sahf
call
jo
into
inc
fsubrs
or
push
mov
mov
xchg
cs
scas
inc
sub
call
fimull
leave
jle
mov
test
xchg
ss
into
gs
xor
pusha
arpl
pop
jnp
or
or
popa
cmp
scas
inc
xor
pop
stos
sub
pop
test
jmp
mov
mov
pop
pop
push
sub
ss
test
lods
mov
mov
and
and
sarb
lret
push
add
gs
js
push
insb
sbb
dec
outsl
lds
or
push
adc
pop
inc
sahf
dec
test
jb
sti
test
sbb
ljmp
ret
inc
lea
inc
dec
fistpll
jmp
sbb
out
test
mov
sub
cmpsb
sub
fcomps
push
dec
add
insl
xor
sub
mov
xchg
mov
scas
inc
loope
movsb
cmp
adc
pop
test
jg
sub
cmp
pop
rclb
mov
movsl
jle
dec
outsb
mov
mov
xchg
daa
mov
xchg
inc
int3
arpl
rclb
jbe
mov
mov
dec
in
push
fwait
xor
jmp
xchg
inc
fdivl
stos
xlat
outsb
in
jle
mov
pop
jp
pop
push
adc
repz
or
testl
jp
icebp
mov
test
mov
int3
adc
data16
addr16
pop
nop
jae
xchg
arpl
pop
lock
ss
push
add
imul
jne
stos
aas
jmp
sbbl
and
xsha256
cmpsb
adc
jnp
jo
mov
mov
icebp
mov
stc
hlt
std
xchg
call
in
xchg
loopne
repz
adc
xchg
adc
pop
test
das
dec
push
out
out
push
sub
add
and
loopne
sarl
aad
xor
shlb
cmp
sbb
stos
daa
mov
xchg
mov
mov
pop
lock
ret
or
outsl
jl
pop
repz
jg
in
outsb
test
popf
mov
aad
popa
mov
das
jecxz
push
in
push
sti
sub
sub
aad
fs
dec
loopne
jle
scas
sbb
mov
dec
loopne
pop
mov
das
iret
data16
aaa
rcrl
push
in
int
pop
repnz
mov
push
jmp
clc
xchg
sub
pop
xor
mov
inc
cmpb
cld
stos
fs
push
out
add
xchg
xor
fidivs
mov
loop
jns
shrb
mov
jl
lds
mov
mov
or
mov
mov
dec
in
pop
outsl
push
dec
in
out
xchg
jg
fsubrl
int3
arpl
in
adcl
push
cmp
mov
or
scas
cmp
mov
lock
mov
or
push
cmp
shrb
cmp
stos
xor
test
push
lods
scas
pusha
or
call
repz
and
faddl
in
insb
xchg
mov
push
test
js
inc
mov
mov
hlt
mov
dec
in
sub
pop
out
or
fiadds
icebp
mov
aam
popa
enter
cmp
xor
gs
jns
pop
insl
mov
shlb
arpl
adc
push
xchg
lods
inc
lds
pop
pop
xsha1
cmpsb
dec
fwait
fs
or
mov
cmp
inc
sbb
int3
xor
test
mov
xor
les
xlat
dec
push
into
gs
mov
pop
mov
movsb
adc
fists
lods
inc
inc
push
or
lret
rolb
cltd
ret
adc
mov
fs
mov
shll
xlat
or
into
cmp
daa
push
and
pusha
push
xchg
jg
push
lea
mov
test
movsb
fidivrl
adc
mov
mov
push
jmp
xchg
jl
subl
xchg
sub
jl
sub
hlt
ds
or
imul
sar
repnz
aaa
pop
shlb
ret
inc
inc
fnstenv
sahf
xor
mov
mov
mov
scas
and
ds
inc
jno
mov
jmp
dec
push
out
ret
cmc
aas
popf
xor
in
push
call
push
inc
jmp
jns
sahf
xor
xchg
xchg
dec
filds
int
mov
ss
push
push
ss
fsubl
test
dec
sbb
std
xchg
push
pusha
cmp
push
pop
lahf
mov
inc
fadds
inc
xor
jb
xor
push
test
test
stos
xor
sbb
pop
scas
pop
pop
rcrl
test
cld
ficoml
or
ret
pop
jg
mov
andl
gs
repz
inc
inc
sbb
mov
leave
mov
iret
loop
pop
lock
gs
sbb
je
nop
nop
xchg
sub
aad
cmp
in
dec
push
inc
mov
ja
shrl
je
jae
mov
mov
fcoml
test
sbb
mov
xor
enter
int
test
mov
push
out
jmp
jo
or
or
sub
sub
mov
dec
in
shrb
push
shrb
daa
repz
out
addb
push
mov
icebp
imulb
and
dec
loope
dec
dec
in
popa
insb
call
mov
sbb
sbb
mov
ds
pop
mov
pop
mov
fucom
ja
add
xchg
bound
lods
mov
xor
fcmovnbe
cmp
push
std
push
jmp
pop
dec
jo
cmpl
and
push
lods
inc
daa
and
popa
xchg
mov
mov
test
xchg
or
fwait
jg
xchg
sub
pop
mov
cs
pop
jo
shlb
insl
mov
mov
jl
or
sti
xchg
aas
ds
xor
lods
rcrl
aaa
into
mov
fsubrs
stos
leave
pusha
in
or
je
cmp
adc
push
jl
leave
outsl
mov
loop
test
jmp
adc
in
test
mov
xchg
xor
insl
arpl
mov
ljmp
mov
xchg
in
aam
outsl
movsb
cmp
outsl
call
pop
sahf
or
mov
cmp
dec
scas
sbbb
jle
jecxz
stc
sbb
sub
pop
dec
xchg
sub
pop
out
mov
mov
sbb
pop
xchg
sub
ljmp
push
sbb
mov
mov
movsl
arpl
stc
arpl
in
adc
xchg
inc
push
insl
add
pushf
mov
inc
rcll
fiaddl
jmp
js
fnsave
daa
mov
cmp
and
es
ret
pop
pop
mov
sbb
dec
jg
scas
outsb
xchg
or
adc
fwait
xor
lods
inc
sahf
inc
test
mov
cmp
and
adc
fistl
xsha1
cmpsb
mov
scas
inc
dec
fstl
test
rcrl
pop
mov
loope
test
mov
pop
mov
movsl
pop
repnz
or
popf
cmp
es
das
pop
sub
movsl
pushf
subl
scas
into
lods
aam
ficomps
mov
cmp
add
push
mov
sahf
add
lds
movntq
xchg
int
lods
inc
sbb
and
inc
pop
call
roll
popa
clc
cmp
push
movsl
push
mov
inc
mov
test
jmp
and
push
dec
in
cs
es
jp
les
xor
stos
cltd
pop
sahf
or
lret
out
stc
lods
add
xor
inc
fst
sub
lahf
pop
loop
mov
mov
ja
aad
inc
fneni(8087
in
gs
fidivs
ljmp
push
jb
mov
cmpb
call
daa
pop
sub
jno
adc
fwait
pushf
adcb
les
cmc
and
fs
in
into
gs
movsl
mov
pop
jp
mov
xchg
lods
clc
and
lods
inc
add
clc
inc
pop
push
in
mov
int3
fs
jg
xchg
and
nop
cmp
stos
lret
sti
fldt
push
adc
dec
pusha
idivl
outsl
push
jb
add
clc
rcrl
jmp
fstpl
fsubrs
xor
test
aad
add
lret
adc
cld
stc
jmp
inc
sbb
imul
jno
ljmp
out
insb
add
ret
hlt
lock
test
out
repnz
pop
push
xchg
outsl
mov
test
jne
enter
or
push
jmp
jbe
jno
sbb
inc
or
insw
mov
lahf
cwtl
outsb
add
stc
ds
xchg
loope
push
aad
xchg
sub
lock
gs
cmpsb
sbb
push
nop
mov
out
test
push
test
push
jb
jl
mov
in
andl
shrl
adc
dec
lahf
out
setbe
mov
fsubrs
add
rolb
xor
mov
cmpsb
lods
inc
call
repz
adc
push
inc
fdivs
es
insb
hlt
mov
mov
pop
xlat
mov
push
push
jno
push
xchg
loope
push
mov
push
jg
inc
test
push
and
mov
add
xor
sub
pop
cmc
mov
clc
mov
mov
out
sub
adc
shrb
jae
mov
cmpl
cmpsl
mov
pop
imulb
mov
dec
sub
add
lahf
jnp
xor
inc
fsubr
or
xlat
outsb
and
cmp
pop
sub
stos
stos
pop
push
jmp
mov
inc
out
add
xor
repnz
fldcw
loopne
imul
ss
out
sbb
or
pusha
cmp
and
pop
fisttpl
dec
jecxz
sbb
cwtl
fists
mov
sbb
sub
jg
mov
test
mov
call
sbb
mov
pop
mov
clc
outsl
mov
mov
inc
fldcw
add
pop
mov
fnstenv
inc
sbbl
lods
sbbl
inc
inc
fnstsw
pop
push
mov
dec
add
push
dec
lds
stc
mov
cmpsl
cld
xchg
fldenv
inc
fsts
mov
cmp
pop
and
jecxz
mov
jnp
sbb
sub
pop
mov
sar
xchg
ret
xor
lds
pop
repnz
jae
shrb
inc
fiaddl
out
xchg
mov
push
es
imul
outsb
add
iret
or
add
pop
andb
mov
or
loope
movsl
cmp
stc
stc
nop
sub
movsb
pop
xor
cmp
scas
jmp
fbstp
or
sbb
jno
sbb
jno
sub
fs
push
insb
les
testb
cwtl
and
pop
sarb
fwait
xor
and
fsubl
mov
fnstenv
imulb
sub
cli
xchg
sbbl
mov
adcb
stos
inc
gs
in
add
fs
sub
daa
mov
mov
mov
in
daa
jbe
roll
sub
lret
cmp
bound
jno
pop
lahf
jne
rcrb
or
inc
and
scas
testb
cwtl
call
jmp
imul
sbbl
fisubrl
stc
pop
in
xchg
sub
test
xchg
mov
jns
shrl
push
call
sub
mov
popa
imul
xchg
sahf
mov
aad
shl
mov
es
push
jmp
mov
mov
push
lods
fisubrl
sub
mov
xchg
sub
push
xchg
sub
es
cld
xor
sub
scas
out
push
jmp
ljmp
and
mov
xor
jno
xchg
sub
rcrb
insb
dec
loopne
pop
repz
lahf
xchg
sub
pop
int
xchg
aas
dec
jecxz
leave
outsl
push
sti
loopne
sub
jecxz
test
out
loopne
dec
stos
inc
sub
sub
or
fs
ficoms
mov
lock
sub
fyl2xp1
nop
or
stc
xchg
or
sub
stc
nop
adc
cli
dec
dec
mov
sub
cltd
adc
push
ljmp
cmp
push
cs
icebp
popf
dec
in
jp
and
adc
inc
iret
and
addr16
ret
xchg
push
pop
xlat
pop
repz
sbbl
push
push
popf
test
cwtl
das
adc
sbb
push
mov
repz
and
nop
jp
and
int
mov
pop
push
cmpsl
inc
lret
outsb
xchg
sub
nop
outsl
add
ljmp
cld
push
inc
pop
mov
cmpsl
cwtl
sbb
stos
jecxz
ret
pop
gs
jecxz
into
aas
adc
add
fs
insb
and
pop
xor
xchg
pop
sbb
mov
push
push
jle
fwait
mov
fs
pop
sbb
fs
xchg
pop
imul
push
aam
fsubrl
or
iret
jl
jp
dec
out
fs
daa
jbe
mov
mov
push
cmc
mov
xor
xor
mov
psubq
push
stos
inc
cli
ret
movb
adc
sahf
push
mov
and
cmp
and
push
test
leave
fsubrs
xchg
jb
sbb
mov
xchg
sub
pusha
mov
sbb
xchg
mov
pop
dec
filds
or
test
lret
imul
push
mov
fists
test
cmpsl
push
jmp
icebp
cmp
loop
out
test
cs
enter
lods
sub
into
call
mov
dec
and
lods
pusha
sbbl
dec
inc
fnsave
mov
hlt
xor
jae
push
sbb
mov
xor
sbb
testl
shl
js
sub
push
ljmp
mov
pop
or
mov
cmpsl
xchg
sub
pop
das
stc
nop
mov
ret
mov
jecxz
sub
lret
leave
push
in
add
inc
fcomp
mov
vmovd
enter
in
dec
lahf
mov
jne
pop
xor
movsl
cli
sbbl
sbb
add
fstps
mov
xchg
es
mov
pop
xchg
incb
mov
dec
out
adc
aad
mov
and
sub
dec
in
iret
jbe
stc
enter
pushf
in
or
das
lret
jo
adc
fimuls
jbe
nop
daa
icebp
adc
repz
xlat
outsb
sbb
fnstenv
jno
inc
xchg
int3
xor
mov
push
add
imul
adc
jbe
fidivs
xchg
leave
pusha
or
out
test
inc
fsubrs
push
sub
inc
dec
mov
inc
call
push
movsl
push
mov
call
mov
shlb
push
sbb
jb
lock
scas
mov
and
test
inc
pop
repz
jbe
inc
pusha
xchg
sub
pop
out
push
dec
ja
mov
subb
sbb
mov
cld
adc
insl
shlb
inc
and
lods
inc
xor
push
push
call
push
push
cli
xchg
adc
outsb
mov
or
jae
mov
xchg
aaa
cwtl
das
push
mov
lds
inc
lret
bound
pop
repz
sub
dec
mov
mov
inc
xchg
subb
bound
pop
sahf
test
gs
xor
xor
sbb
lock
lret
or
inc
into
fnstsw
lahf
lock
sub
cmp
outsb
jno
push
in
je
dec
loope
xchg
adc
jae
sub
outsb
add
mov
pop
pop
icebp
jp
sub
push
and
or
mov
ss
jg
shl
jns
sbb
mov
or
mov
repz
shrb
vcvttsd2si
jno
in
add
add
jns
loopne
and
or
jb
mov
cwtl
in
popf
xor
test
mov
cmp
mov
ret
or
dec
aad
jle
in
es
fcmovb
mov
hlt
sti
out
in
xchg
jp
lret
push
fs
jg
xor
test
mov
push
xor
inc
or
sti
xchg
mov
fcmove
popa
int3
jge
push
stos
in
lock
dec
mov
sbb
icebp
mov
or
xor
lds
icebp
mov
mov
sbbl
dec
es
test
dec
mov
cmpsl
jno
push
arpl
aam
test
pop
dec
pop
push
jmp
in
xchg
sbb
jnp
scas
subb
iret
in
shll
lcall
cmp
in
mov
addr16
ja
js
stos
inc
cmp
mov
outsl
lahf
cmpsl
pop
not
rolb
mov
cmc
mov
xor
inc
xlat
clc
jns
xor
les
fimull
sti
or
dec
jle
lea
lahf
mov
out
sahf
xor
xor
push
mov
in
dec
and
int
pushf
or
fs
fsubl
push
popf
out
js
mov
sete
xorl
fnstenv
ss
cli
xlat
enter
jg
dec
lods
js
inc
xor
jb
cmp
ficomps
inc
inc
jmp
lock
cmp
adc
in
cld
movsl
sbb
pop
aaa
fidivs
insl
mov
bsf
je
xchg
sub
pop
push
ljmp
or
jbe
ret
pop
or
jns
fldt
xor
fwait
jb
cmpsb
mov
xchg
sub
dec
loopne
inc
daa
sbbl
popa
push
push
add
ss
shll
push
jg
mov
shrl
jae
inc
mov
out
pop
pop
shrb
inc
xor
xor
clc
pop
push
cmp
int
shrb
lret
insb
add
jns
push
imul
push
incb
imul
fidivl
mov
sub
sbb
ds
sbb
xor
xor
or
pop
mov
js
repnz
repnz
adc
mov
adc
je
sbb
cmc
mov
xor
mov
fists
xor
aad
sub
lods
inc
jbe
test
adc
bswap
pop
lcall
xchg
outsl
mov
lea
push
cli
xchg
inc
out
inc
fimull
fs
scas
push
cmpsb
add
frstor
add
cli
inc
icebp
mov
dec
jbe
iret
data16
es
xor
adcb
push
aaa
into
inc
mov
jns
addr16
pusha
pop
xchg
insb
push
mov
mov
les
and
mov
mov
hlt
and
std
xchg
add
xchg
cmp
mov
dec
test
test
insb
pop
icebp
pop
pop
repz
movsb
cmp
out
dec
xchg
or
add
sbb
sub
into
pushl
clc
mov
fs
cmp
int
pop
dec
fisttps
pop
jo
clc
pop
and
jb
cmp
repnz
sub
mov
xchg
cmpsl
notrack
shrl
cmp
lods
outsw
push
fwait
int
ja
xor
pop
out
shl
mov
in
xchg
and
sub
pop
mov
push
loope
test
xchg
cs
cmpsb
call
scas
stc
sbb
push
dec
cmp
jge
icebp
mov
pop
lock
ja
cmpsb
test
ja
and
push
adc
fildll
mov
out
xor
mov
cs
sahf
pop
dec
mov
pop
pop
and
xchg
arpl
cmp
jns
orb
sbb
fldl
push
inc
mov
push
sbb
movsl
pushf
mov
and
inc
lret
mov
ds
mov
out
sbb
jne
insl
push
clc
cmp
push
lods
mov
mov
adc
data16
push
jmp
mov
fisttpl
mov
sub
lods
inc
sub
lret
shlb
add
sbbl
icebp
push
popf
and
cmp
lret
mov
fld
push
fidivs
out
negl
jb
xchg
movsb
cmp
imul
mov
mov
push
jge
or
jl
les
mov
es
insb
sub
cli
cmpsl
out
ss
pop
cmp
ljmp
neg
xchg
push
sub
pop
ja
sub
lret
cmpsl
out
gs
dec
fcompl
mov
jp,pt
xchg
loope
dec
dec
mov
ja
repnz
cmp
cs
add
push
aas
push
sarb
dec
push
mov
sbb
outsl
mov
testb
call
xor
jne
xor
adcb
out
call
outsb
add
outsb
dec
mov
jnp
rcrl
stos
inc
into
loop
jbe
lock
std
xchg
push
mov
mov
xchg
add
fstpt
rorb
and
pop
cmp
insb
xorb
lea
mov
loopne
adc
daa
mov
pop
xor
data16
xchg
test
inc
pop
and
popf
bswap
inc
shlb
ljmp
or
or
es
icebp
jne
xor
loope
sub
int
inc
mov
add
jae
rol
lret
dec
rclb
mov
icebp
push
out
fisubs
into
adc
jnp
inc
fistl
xchg
out
fwait
lds
mov
add
sbb
push
imul
outsl
mov
push
data16
inc
std
jl
and
cmp
lods
push
jne
push
or
lret
testl
mov
jg
sbb
cmpsl
mov
js
js
stc
pop
cvtpi2ps
inc
aas
or
mov
dec
pop
push
ja
inc
outsl
in
pop
sub
lcall
mov
xor
testb
cld
and
mov
mov
push
out
sbb
mov
mov
popf
xor
sub
sbb
cltd
cli
pop
test
dec
pushf
jge
aam
test
mov
adcb
std
push
sub
push
xor
pop
movsb
adc
in
sub
aas
push
cmp
neg
mov
jbe
scas
jecxz
stos
cmp
add
jl
aam
sub
mov
and
jle
ljmp
cmpsb
shll
sbb
cmpb
jmp
lods
push
inc
test
push
popl
jno
cwtl
sbb
add
stos
push
pushf
inc
insl
sbb
fld
ja
clc
repnz
fistpl
arpl
xchg
out
ljmp
repnz
hlt
lock
xor
cmpsb
nop
xchg
faddl
jecxz
ljmp
incl
sti
add
je
ffree
fisttpl
cs
or
jns
jne
inc
aad
dec
dec
xor
fldt
cmpsl
push
jp
mov
jp
ret
or
jmp
mov
mov
cmp
cmp
addb
ficomps
imul
pop
sahf
fiadds
sub
cltd
push
insl
inc
jns
addr16
insl
push
stc
sbb
pop
dec
or
add
in
xchg
xchg
clc
decb
lea
jmp
inc
lahf
ds
xchg
das
mov
xchg
dec
xchg
adc
xchg
mov
push
and
and
ljmp
push
mov
rorl
mov
mov
popf
cmc
fdivrs
and
jnp
cmpsl
loopne
push
jbe
mov
jne
sbb
inc
or
out
xor
sbb
imul
arpl
mov
sub
mov
mov
scas
orl
jge
push
sti
xor
pop
sub
inc
in
lods
fnstsw
icebp
testb
jae
outsl
and
mov
loope
rolb
ljmp
cmp
pop
out
fs
in
mov
xchg
mov
cmp
fwait
or
dec
or
lock
and
call
icebp
inc
call
mov
pop
sub
inc
pop
pop
ljmp
adc
or
dec
shl
bswap
pop
or
je
xorb
dec
add
xor
push
loop
mov
fadds
mov
fs
cmp
or
loopne
addr16
idiv
in
repnz
or
jns
in
dec
pop
inc
add
pop
fwait
stos
sub
xchg
das
add
aad
jp
push
dec
add
shl
cs
js
sti
test
mov
xchg
je
adcb
jne
fisttpll
or
xchg
aam
outsb
call
adc
and
or
js
xchg
jbe
pushf
cmp
pop
ja
lahf
cmp
insb
icebp
fs
and
sbb
add
aaa
ja
minps
ret
fwait
out
std
xchg
mov
cmp
mov
inc
outsl
sub
je
jae
aaa
push
mov
or
and
jmp
lods
xor
push
es
mov
cmpsl
dec
mov
sti
pop
jmp
clc
iret
mov
mov
js
and
fbld
jg
pop
loope
out
repz
xchg
hlt
sahf
add
arpl
mov
insl
in
pusha
sti
idiv
inc
lcall
add
sbb
cld
and
dec
insl
jmp
pop
sub
adcb
sbb
inc
test
dec
scas
negl
xor
add
repz
loopne
enter
in
sahf
inc
sbb
push
sbb
fsubs
pop
popf
inc
xor
stos
mov
pop
ret
push
ss
sub
sti
mov
push
in
sahf
inc
addb
sub
mov
ss
shrb
popf
inc
lds
sti
lret
negb
fldenv
mov
add
jmp
fs
dec
sti
sub
add
mov
fidivl
or
out
jmp
shlb
cmpsl
push
repz
movsb
push
in
cmp
jnp
xchg
sub
jo
sbb
or
push
fisubrs
mov
sub
inc
pop
xor
xchg
lods
call
cld
push
jb
inc
push
cmpsl
bound
out
mov
fs
shll
or
clc
xchg
icebp
repz
out
pop
add
mov
fdivrl
cmp
lea
xchg
cmp
and
xor
mov
stos
hlt
push
test
mov
mov
sub
lret
mov
sub
in
aaa
test
fwait
lods
inc
cmp
jb
xchg
xlat
aas
xor
sbb
push
jns
mov
nop
lods
out
int
lea
in
inc
cmpsb
f2xm1
xor
xor
ret
daa
test
insl
xor
jmp
mov
scas
cmp
xchg
loope
sbb
push
fwait
jne
mov
mov
push
push
push
and
fistpl
jp
pop
rol
ds
int3
jns
xchg
xchg
inc
clc
mov
add
push
das
add
cmpsb
dec
cmp
xchg
lcall
and
loope
cmp
roll
and
mov
add
add
in
stos
jne
in
cmp
mov
movsb
pop
mov
and
xor
je
push
movsb
and
addr16
je
add
jg
test
xchg
in
out
mov
aam
lahf
and
hlt
jne
ds
jns
add
pop
mov
test
cmpsl
pop
in
fmull
jmp
movb
or
mov
lcall
or
out
dec
cld
xorb
or
mov
mov
sub
mov
cmp
inc
pop
pop
fisttps
test
sahf
test
testl
int3
lock
or
out
filds
dec
call
pop
mov
cmp
or
xchg
dec
pop
adcl
sub
addr16
pushf
out
jg
and
stos
rcrb
inc
idivl
mov
cmp
pusha
adc
fmul
adc
adc
sbb
or
movb
adc
lahf
dec
cwtl
sub
jo
jmp
lods
push
mov
leave
enter
scas
inc
mov
std
jne
lret
push
mov
mov
pop
iret
ja
and
mov
mov
pop
rcr
test
cmpsl
movl
mov
stos
fmull
jecxz
inc
int3
lret
mov
shl
fistpll
sti
mov
pop
and
out
inc
testl
idivb
rorb
sub
mov
mov
inc
insl
xor
lahf
nop
mov
hlt
es
cwtl
hlt
lods
rcll
sub
out
pushf
dec
test
int
add
cmpsl
mov
xchg
inc
xchg
mov
xor
dec
mov
sub
repz
shlb
into
lret
dec
cmp
mov
cltd
jmp
movsb
cmp
enter
jo
pop
faddp
push
pop
dec
push
loope
mov
data16
lods
inc
and
inc
int3
arpl
or
int3
in
or
adc
mov
cld
xchg
inc
fcmovnb
sbb
sub
adc
ss
loope
ret
xrelease
mov
fildl
sbb
movsb
cmp
mov
pop
mov
mov
ja
cmp
je
sub
nop
or
pop
scas
pop
or
cmp
lods
pop
dec
in
into
push
ljmp
jb
push
add
adc
test
pushf
xor
pop
fdivs
push
cmpsl
stc
out
cmp
fdiv
push
mov
sub
lcall
loope
pop
int3
arpl
xchg
and
mov
adcb
push
inc
fildl
test
stc
fldenv
out
cli
adcb
lret
lahf
mull
jo
inc
mov
sub
inc
inc
mov
int3
arpl
lea
mov
loopne
nop
adc
pop
scas
fs
or
lods
jmp
call
sbb
and
popf
push
nop
mov
mov
adc
ss
mulb
popa
clc
dec
xchg
mov
ficompl
xor
pop
adc
outsl
mov
pop
jb
push
jbe
push
cmp
jl
cmp
jle
data16
shrl
xor
cmp
xor
mov
inc
into
mov
dec
out
mov
add
mov
and
sub
pop
push
mov
das
lcall
sub
mov
movsb
repz
inc
jno
adc
les
jp
dec
loop
pushf
dec
in
aaa
imul
and
mov
jae
movsl
cmp
xchg
cmpsl
ds
xor
pop
arpl
lds
loope
mov
jecxz
insl
fdivr
xchg
or
sbb
mov
jle
shrb
rcrb
add
ja
push
fdivrs
or
sub
sub
dec
sti
jle
dec
mov
shrl
rcl
add
mov
ret
dec
jecxz
shr
repz
cmp
fsubrs
pop
lcall
cmp
and
pop
inc
jne
xor
xchg
enter
mov
xchg
out
add
stc
xchg
lahf
push
cmp
test
push
in
or
sub
pause
dec
lea
xorl
popf
xor
shlb
push
xchg
and
pop
push
mov
jb
js
jp
or
xchg
aas
int
cwtl
std
pop
pop
lods
lea
and
jmp
sub
hlt
xor
imul
push
pop
repz
pop
jg
nop
outsl
mov
mov
ret
hlt
add
push
ss
lret
bound
test
push
arpl
mov
data16
pop
clc
test
mov
sub
leave
loopne
fnsave
outsb
add
xchg
pop
int3
arpl
sarl
mov
xor
or
cs
xchg
sahf
sti
xchg
and
inc
jle
es
stc
nop
cmp
fstps
js
mov
xor
push
hlt
hlt
rcrb
stc
fs
sub
aaa
or
lods
nop
mov
scas
inc
lods
pop
scas
mov
mov
or
push
jge
jns
stos
dec
lahf
lds
dec
push
or
sub
inc
mov
cmpsb
mov
adc
fistps
mov
jb
xor
add
dec
fstps
iret
xor
rcrl
add
or
outsl
repnz
les
cmc
roll
sub
xor
fsubs
call
out
adc
nop
push
cmc
pop
add
subl
push
pop
std
and
xchg
sub
push
je
mov
stc
popa
fmull
lret
and
test
in
add
loopne
ret
or
popa
adc
out
cmp
sub
ds
xchg
cmp
out
xchg
fmuls
decb
cld
ret
popa
test
mov
testb
mov
mov
mov
ret
insb
add
pop
data16
mov
es
lods
jg
fildll
ds
pop
pop
icebp
stc
mov
ljmp
rcr
in
xchg
lcall
xor
cmp
inc
mov
repnz
mov
cmp
outsl
mov
rorl
sbb
dec
pop
pop
out
nop
insl
mov
ficoml
jbe
popf
push
mov
cmc
les
fsts
or
stos
cli
out
test
lret
push
out
lock
cmp
mov
lock
shlb
shl
jp
loope
mov
fnstenv
xlat
xchg
sub
fcompl
mov
fnsave
es
pop
mov
cltd
scas
stos
iret
data16
iret
xchg
mov
fsubrs
shl
js
fnstsw
sub
mov
mov
xchg
adc
adcb
test
xchg
sti
cmpsb
into
add
in
mov
mov
pushf
pop
adc
sarb
loope
sahf
rorl
lret
mov
xchg
and
inc
inc
xlat
ja
dec
loop
cwtl
sbbl
inc
cmp
bsf
aam
ja
adc
xsha1
cmpsb
dec
je
mov
incb
imul
aas
jno
test
adc
cmp
pop
call
sbb
cmp
mov
roll
incl
fstpl
mov
jg
imull
inc
xlat
dec
sbb
add
mov
push
push
push
call
pushl
call
push
movsb
outsl
push
mov
aad
adc
xchg
and
lods
push
lds
out
stos
add
add
sub
test
adc
divb
push
or
cmp
shrb
push
dec
ds
inc
xor
ja
push
lods
lock
int
mov
mov
loop
insl
int3
adc
movsl
sbb
aaa
jl
je
add
test
push
out
adc
mov
mov
inc
mov
pop
ja
faddl
lds
int
cwtl
testl
outsb
lea
or
loope
pop
in
call
mov
test
shrl
mov
xchg
sub
cmp
fnsave
sub
pushf
mov
xor
ffreep
pop
shlb
mov
mov
out
add
gs
add
or
mov
dec
sub
test
pop
mov
fs
push
push
cli
xchg
xchg
aaa
adc
mov
sbb
ljmp
dec
mov
inc
lret
pop
inc
inc
call
test
inc
ficompl
out
fisttps
xor
jns
icebp
mov
sbb
fimuls
mov
jp
mov
lcall
ds
inc
test
inc
mov
cli
xchg
xchg
dec
test
push
mov
in
jb
jne
out
pop
out
call
or
scas
icebp
mov
jecxz
icebp
mov
std
and
lock
jae
cmc
mov
iret
sub
push
cmpsl
outsb
cmpsl
cmp
hlt
and
jge
jmp
stc
cmp
std
xor
repz
and
push
movsb
arpl
ret
inc
xchg
xchg
pop
mov
test
aas
outsb
add
loop
jmp
cs
aaa
into
cli
dec
jmp
mov
dec
sub
mov
push
lods
out
std
jb
jle
push
xchg
sub
ret
enter
mov
pop
loop
std
xchg
icebp
add
add
enter
mov
add
lock
nop
shl
std
xchg
shl
insl
add
bnd
add
std
xchg
or
call
pop
imul
mov
lcall
cmp
lahf
hlt
adc
mov
loopne
in
mov
pop
das
add
and
leave
pusha
shlb
push
and
xchg
push
adc
cmp
sbb
jp
sub
xchg
sub
pop
jp
popa
sbb
addr16
jno
xchg
mov
mov
sbb
dec
repnz
xchg
and
xchg
sub
outsb
xchg
add
pusha
andl
gs
push
stos
add
testb
jns
movsb
lods
je
jmp
fisubl
lahf
ss
xchg
je
or
mov
mov
jns
out
icebp
loopne
in
jb
xchg
mov
push
and
push
jmp
mov
insb
add
cmp
jno
push
lods
xchg
cs
repnz
or
cmp
pop
push
jmp
and
xchg
popa
inc
shrl
add
mov
adc
fs
dec
fbld
pop
cwtl
jg
dec
outsl
cmp
or
jle
ret
pop
out
lahf
xchg
daa
inc
rcrb
inc
cmc
int
shrl
inc
lcall
in
pop
nop
adcb
cmc
imul
movsb
test
sbb
inc
fsubs
dec
cmpsb
cmp
fs
pop
leave
sub
repnz
dec
loopne
sbb
loope
daa
out
xchg
xchg
shrl
fnstenv
and
xchg
inc
jp
cmp
lods
in
into
iret
data16
dec
fbstp
shll
int
in
cmc
push
jmp
aas
xchg
cs
or
shrb
jmp
push
call
stos
xchg
mov
in
not
imul
insb
add
lea
mov
fidivs
and
xchg
pop
jbe
jo
jg
sbb
movsb
cmp
ret
aam
jmp
or
cmp
lret
bound
xlat
outsb
dec
andl
jno
pop
jbe
addr16
jo
mov
xchg
rorb
movsb
push
mov
sbb
aas
or
jo
jg
push
xchg
xchg
sub
cmp
addl
je
mull
push
popf
mov
ret
jecxz
mov
jmp
or
xchg
mov
ret
jno
cmc
xor
mov
hlt
mov
leave
outsb
add
mov
dec
pop
test
shlb
sti
pop
mov
pop
nop
daa
push
pop
mov
mov
jge
fnstsw
sub
add
xchg
add
ss
mov
imul
cmp
popa
and
mov
daa
mov
add
testb
xchg
adc
es
inc
fsubrp
inc
pop
negb
mov
xor
sub
dec
xchg
mov
fisttps
movsl
adc
fs
mov
mov
push
leave
pusha
and
ss
fcmovnbe
outsb
loope
xor
push
add
ret
inc
xlat
addr16
mov
sbb
or
cmpsl
jns
jb
pop
pop
es
lods
xor
orb
imul
aas
mov
xor
xor
loopne
cmp
or
mov
ss
mov
sub
inc
pop
aas
sub
lods
iret
adc
daa
loope
in
pop
jne
call
es
sbb
out
adc
push
cmp
dec
test
mov
and
push
rcr
out
and
fnstcw
icebp
jecxz
incl
rolb
add
mov
rcll
dec
or
shl
repnz
add
mov
adc
ds
pop
rclb
xor
cs
mov
lcall
pop
icebp
adc
pop
mov
and
mov
aad
sub
dec
mov
sub
cmpsb
into
pop
repz
pop
jge
or
imul
inc
push
xchg
insl
call
adcb
sahf
pop
movsl
pop
clc
out
mov
inc
xchg
in
mov
test
out
push
inc
fiadds
sub
cwtl
mov
jno
adc
xchg
mov
aam
mov
dec
es
fldcw
push
outsl
ret
ret
cmp
sahf
push
faddl
test
and
mov
pop
lds
ficompl
adc
lea
mov
push
popa
pushf
hlt
shll
mov
add
dec
data16
adc
shl
addr16
push
add
imul
mov
sub
dec
out
fstpt
inc
out
mov
aaa
shr
addb
insl
jo
or
mov
sahf
stos
in
mov
sub
push
pusha
sub
nop
fstps
xor
dec
stos
xchg
mov
pop
push
mov
rorl
adc
xchg
in
test
mov
imul
inc
adc
adc
jmp
fwait
or
mov
shll
in
jl
in
outsb
faddl
cltd
in
lret
and
dec
sbb
push
mov
or
and
repnz
ja
push
call
mov
test
dec
add
cmc
stos
mov
je
jne
pusha
push
mov
pop
ret
inc
rcll
fcomps
adc
aam
stos
scas
jp
jo
inc
jecxz
mov
add
xor
pushf
rcrb
popw
das
fcmovb
pop
or
jo
sbb
push
fs
shll
pushf
push
jb
adc
push
cmp
adc
sbb
push
fsts
and
inc
cli
fcomps
pop
xlat
mov
ret
iret
mov
in
lds
lcall
jl
std
xor
lock
and
sbb
xor
pusha
fistl
mov
test
scas
pushf
xor
bound
xlat
cli
or
out
adc
sbb
dec
in
add
in
jbe
dec
into
out
mov
lcall
push
invd
pop
mov
int3
ret
and
dec
mov
mov
dec
ds
sub
mov
mov
xorl
fidivrl
pop
out
xor
adc
insl
pop
int
stc
adc
cmpsb
loope
sbb
call
sbb
mov
jl
cmp
mov
dec
aas
in
lea
xchg
ret
add
aaa
pop
xchg
out
cmove
and
sti
js
sub
ljmp
xchg
in
lea
jne
pop
cmpsl
pop
cli
pop
mov
mov
shlb
out
out
mov
mov
add
nop
xlat
out
xchg
and
cltd
lods
inc
push
mov
fwait
push
sub
mov
sub
jne
pop
in
ss
lea
sarl
mov
cld
pusha
xor
xor
sub
push
dec
sarb
je
cmpsb
das
xlat
lret
and
pop
adc
cmp
outsl
xchg
pop
pop
js
cmpsb
pusha
and
mov
sti
scas
pusha
in
adcb
push
call
cmp
out
call
pop
xlat
das
xchg
fwait
in
or
mov
mov
not
adc
mov
movsl
or
inc
cmp
lods
test
lods
mov
mov
jmp
pop
inc
not
fwait
inc
dec
cmp
loopne
lods
pop
mov
inc
ja
jecxz
call
sub
mov
and
popa
jae
pop
out
push
popa
js
loop
xor
adc
cmp
cmp
push
pop
jno
int3
pop
imul
jg
push
and
les
push
or
mov
mov
dec
aas
sbbl
xchg
clc
es
xchg
js
je
stos
movsl
in
dec
lds
sahf
xor
adc
les
sbb
and
and
pusha
enter
add
and
mov
jge
xchg
inc
pop
jbe
daa
cmp
mov
lret
and
out
fmull
or
shll
loop
push
adc
pop
bound
jmp
adc
or
dec
cmp
cli
pop
nop
in
aas
repz
andb
push
stc
nop
push
pop
shlb
xor
xor
and
enter
or
mov
in
push
test
jo
and
inc
incb
xchg
ret
xchg
inc
mov
ret
out
mov
testl
jmp
xchg
daa
scas
fistpll
rclb
xchg
push
xor
or
icebp
mov
incl
push
mov
ds
pop
scas
fxch
stc
cmp
out
fcomip
inc
enter
mov
leave
jp
dec
xchg
mov
sbb
orl
sbb
adc
inc
loop
jne
inc
mov
inc
inc
test
and
inc
aaa
push
adc
sbb
incl
test
push
lahf
aad
xor
push
mov
cli
add
inc
aas
out
add
loopne
pop
mov
and
out
mov
loopne
inc
jo
out
in
and
dec
cmp
fistl
popf
aaa
xchg
cmp
mov
daa
loope
es
cli
shr
push
push
pop
push
pop
mov
pop
or
daa
bound
nop
mov
nop
push
fcmovnb
and
mov
jp
popa
movsl
cmp
pop
loopne
scas
stos
inc
loope
jnp
or
sbb
das
xor
int3
test
shll
push
fimull
sub
dec
sahf
and
ss
pop
out
push
mov
sbb
insb
sbb
jle
cli
cmp
icebp
mov
mov
lods
xchg
or
into
outsb
add
aaa
rolb
stos
stos
in
test
lret
sbb
mov
fs
pop
outsb
dec
loope
cmp
pop
adc
lcall
lea
rol
pop
mov
shlb
xchg
mov
fdivl
or
mov
lahf
adc
or
flds
sub
outsb
fcmovbe
and
inc
jo
push
shrl
add
xlat
mov
fcmovb
pop
adc
sbb
imul
adc
xchg
in
sbbb
in
test
jno
or
dec
dec
mov
daa
xchg
pop
lret
lcall
lahf
mov
xchg
mov
jb
fdivs
xchg
hlt
mov
push
pop
int3
jg
or
mulb
jp
jo
gs
or
inc
ret
sub
add
bound
ja
fwait
inc
jno
lea
repnz
add
sbb
push
jge
push
xor
dec
icebp
xor
lods
xchg
dec
insl
paddb
je
cmp
mov
mov
push
sbb
mov
shlb
ret
add
pusha
mov
rorl
inc
mov
sbb
arpl
aaa
push
movb
aas
and
leave
rorl
adc
and
ror
leave
scas
xchg
and
outsb
and
addr16
jb
movsb
popf
xchg
sub
sub
out
imul
pushf
adc
mov
das
mov
dec
hlt
sbbb
push
push
test
adc
arpl
sub
fsubrl
and
adc
imul
push
ja
sub
pusha
test
cmpsl
adc
jle
jl
pop
jo
fbld
push
out
and
test
push
pop
pop
fs
mov
scas
dec
lock
pop
xlat
add
fcomp
jo
mov
cld
sub
push
sbb
outsl
adc
icebp
js
call
std
mov
jno
mov
sti
scas
jmp
aad
mov
aad
je
xchg
push
xchg
fisttps
xchg
hlt
and
sub
mov
lock
outsl
sar
inc
push
push
push
mov
lcall
jge
stos
add
pop
jp
imul
repnz
pop
bound
cmp
push
push
addr16
sbb
std
lret
mov
jg
ret
testb
inc
pop
pusha
ret
cli
push
popf
sub
out
cmp
jmp
out
pop
jl
push
mov
adc
pusha
stos
push
cltd
lret
ja
sbb
cltd
imul
xchg
ljmp
xor
pop
hlt
pop
xchg
and
outsb
pop
jmp
lock
fstl
xor
push
xlat
inc
xor
stc
jge
imul
fsubs
cltd
pop
add
cltd
cmp
dec
adc
add
push
stc
mov
pop
les
outsb
fldenv
movsl
bound
inc
stc
movsb
ss
mov
mov
mov
add
push
mov
sti
push
bswap
jns
outsl
ret
mov
cmp
out
std
js
or
jmp
loop
ds
add
mov
and
mov
inc
xor
mov
or
jnp
jno
lds
xchg
sub
shlb
push
stos
movsl
sub
ds
cltd
fnstcw
mull
fsubrp
ficompl
je
imul
repnz
in
fwait
mov
jae
jg
push
in
pusha
mov
sbbb
add
inc
jle
lret
add
cmpsl
sub
ss
jg
mov
scas
out
fsubr
xchg
adc
pusha
aam
les
dec
and
fwait
es
jg
ret
ljmp
repz
inc
push
hlt
cmp
test
inc
js
ret
movsl
mov
mov
pop
movsb
and
push
sbb
cs
mov
mov
frndint
ss
push
mov
mov
test
dec
sub
js
das
cmp
aam
lahf
gs
ret
test
loopne
jbe
xchg
xor
adc
outsl
mov
dec
in
and
pushf
pop
insb
testl
add
push
loopne
outsb
inc
fstps
sub
xor
lods
lcall
fmuls
popf
clc
ficompl
jns
out
lcall
xorl
mov
jge
pop
pop
mov
push
push
sbb
push
and
push
fs
inc
movsl
lahf
daa
and
sub
imul
faddl
mov
aaa
pop
imul
adcb
frstor
stc
fdivp
jl
xchg
aad
ret
mov
dec
push
add
adc
repz
cmpsb
inc
lcall
mov
subl
data16
push
sub
popf
jne
into
xchg
or
shl
test
in
das
cmp
pusha
push
test
or
aas
sub
pushf
stc
sbb
insb
xchg
pop
and
sub
mov
es
insb
pop
push
cli
pop
push
movsl
push
sbb
cwtl
cli
test
lret
mov
sti
mov
cltd
fstpl
jp
repnz
mov
ljmp
in
ftst
arpl
jecxz
lahf
mov
inc
bound
xchg
into
mov
mov
aam
and
leave
mov
inc
movsb
cmp
adc
in
lea
or
test
stos
movsb
xor
dec
xor
inc
adc
testb
aad
xchg
mov
adc
jmp
mov
jae
das
xorb
mov
lods
xor
fnstenv
mov
in
movsb
adc
sbb
jle
add
bound
xchg
cmp
test
pop
mov
out
push
sub
jb
loop
sub
shrb
adc
divb
dec
in
inc
cmp
push
xchg
push
adc
push
prefetch
mov
sub
jno
inc
jp
rolb
or
int
mov
add
xchg
and
cmpsb
lea
cs
pop
inc
enter
gs
cmpsl
xchg
test
dec
out
sbb
adc
aas
fisttps
cmp
inc
pop
rcrb
mov
ja
or
dec
je
mov
rcrb
push
andb
out
xlat
or
mov
or
js
xor
dec
push
call
pushf
xchg
jns
mov
jnp
xor
jno
mov
mov
rorb
cwtl
sub
pop
pop
jo
jb
pop
sahf
inc
inc
in
cmp
mov
enter
sti
jne
xchg
sub
lcall
cmp
jno
daa
mov
pop
pop
clc
mov
int
xchg
push
dec
dec
sbb
mov
bound
cmc
lds
xchg
xlat
scas
gs
mov
out
xor
int
mov
jmp
stc
add
mov
push
jne
mov
sub
jns
jbe
scas
xor
out
mov
and
mov
add
lcall
cmp
gs
push
movsl
pop
jl
inc
addl
xorb
sbb
mov
sub
inc
mov
sub
xor
dec
sbb
rcrb
mov
adc
ret
add
fnsave
pop
dec
add
int3
rcrl
and
cwtl
push
xor
aas
je
jno
icebp
scas
lret
mov
jmp
jae
cltd
and
jmp
or
pop
mov
xor
shll
pop
sti
xorb
mov
imul
mov
sbb
pop
and
pop
add
stc
fdivl
cmp
xchg
call
push
aad
cld
out
loop
inc
cmp
enter
loop
cld
lds
fidivl
mov
mov
jb
cmp
and
and
cwtl
cmp
sub
sub
decb
sub
and
je
inc
and
std
daa
cmp
pop
push
pop
jl
adc
repz
push
lea
pop
data16
lods
or
pushf
xor
pop
sahf
out
inc
ljmp
mov
cmp
sbb
or
sub
mov
shlb
xor
out
mov
ret
mov
pop
out
jno
sub
push
xchg
mov
push
out
sub
mov
mov
nop
mov
pop
dec
loop
scas
les
adc
jg
ds
push
push
movsl
xchg
inc
dec
out
outsl
mov
push
shll
lds
inc
fwait
stos
or
and
in
aas
inc
loop
mov
push
dec
pop
lock
inc
cmpsl
adc
cmp
xchg
pop
inc
stos
cmp
fisubs
in
mov
dec
icebp
dec
int
fidivs
out
mov
push
stos
pop
mov
test
xchg
hlt
rclb
mov
pop
dec
test
mov
cs
nop
add
add
push
addb
jo
cmc
push
mov
in
es
mov
push
mov
add
jbe
jecxz
jnp
xor
sub
lcall
int3
insb
add
jo
je
loope
dec
ret
push
mov
imul
pusha
inc
ficoms
gs
stos
fnstcw
int
daa
mov
aaa
fnstcw
push
mov
in
test
shr
test
or
push
lods
sub
fidivs
shll
add
mov
leave
and
in
roll
or
icebp
test
in
adc
fadds
and
pop
pop
mov
jo
lods
lret
shr
xor
fidivrl
in
jecxz
mov
xor
xchg
sub
mul
icebp
cmp
movsb
test
add
fsubrs
xchg
xchg
jp
lods
scas
gs
rolb
cwtl
jg
push
mov
sub
sbb
mov
movl
inc
stc
jp
es
mov
call
imul
call
mov
push
call
clc
pop
push
shlb
pop
inc
mov
mov
sti
mov
cli
std
push
xchg
dec
mov
data16
pop
jp
or
aas
jnp
out
mov
ljmp
jecxz
and
mulb
loop
stc
sub
mov
sti
arpl
scas
loope
sarb
sub
sbb
in
orl
js
mov
add
sbb
movsb
addr16
push
out
mov
jns
or
ja
mov
stc
nop
and
dec
insb
add
push
flds
inc
fadds
mov
sbb
lods
inc
dec
test
mov
imul
pop
mov
out
stc
ret
fistps
or
je
sub
imul
out
int
adc
mov
jge
loopne
or
out
test
and
cmc
in
test
in
cwtl
xlat
or
mov
jecxz
daa
mov
rcll
stos
inc
adc
xchg
orl
and
sbb
clc
dec
rclb
loopne
sbb
pop
loop
movsl
cmp
add
pop
xor
push
fnstcw
jp
les
inc
ss
push
insb
clc
xor
jp
into
shl
dec
dec
xchg
bt
push
push
daa
inc
fs
jge
mov
or
aad
pop
hlt
dec
insb
pop
cmp
test
inc
std
mov
sahf
fldpi
push
arpl
mov
push
sar
mov
in
sub
insl
data16
xchg
sbb
test
dec
imul
andl
mov
sub
mov
lock
push
testb
inc
in
adc
push
iret
add
push
fsubs
lds
into
gs
fwait
xor
in
cmpl
push
rcrb
xlat
outsb
and
inc
cmc
mov
inc
fnsave
adc
ret
enter
sbb
aas
dec
out
aaa
mov
add
fwait
cli
xchg
int
mov
pop
out
sbb
pop
mov
cmp
pop
lea
xchg
gs
adc
test
mov
test
mov
fwait
jns
mov
push
xchg
out
lock
pushf
in
sbb
lock
lcall
add
xchg
incl
repz
fidivrs
pop
das
sarb
sbb
mov
mov
je
std
repnz
inc
add
pop
mov
and
lods
fsubl
fdivp
lea
fs
xor
inc
dec
push
cs
inc
pop
xchg
mulb
mov
xlat
cmovno
divl
jl
in
in
pop
sbb
inc
cs
je
leave
push
lcall
cwtl
arpl
out
adc
lret
adc
inc
out
jg
dec
lea
jle
insl
rcrl
fisttpl
inc
pop
or
adc
and
xchg
call
or
mov
xor
test
push
add
jge
jbe
out
in
add
insb
add
hlt
js
insl
mov
xor
call
xchg
xorb
leave
gs
aad
sub
pop
xchg
into
mov
addr16
lcall
mov
ret
fwait
cli
adc
and
lock
and
inc
adc
aam
lcall
out
lret
mov
rorl
jbe
push
pop
scas
or
mov
mov
inc
jne
add
xor
inc
cmpsb
je
rorl
in
dec
mov
les
popf
ss
xor
in
fmuls
dec
jg
sti
out
jne
inc
push
aad
mov
xlat
outsb
mov
ret
cmc
or
push
repz
xchg
daa
imul
mov
add
cmp
mov
mov
adc
mov
inc
push
into
jb
insb
sbb
xchg
jnp
cmp
pop
xchg
scas
cmp
mov
jp
sub
shlb
cmp
push
and
cmp
xchg
push
adc
jl
lods
jmp
and
roll
aas
notb
sub
repz
mov
sti
or
inc
sbb
test
push
mov
mov
jne
mov
jecxz
sbb
test
fildll
stc
std
ss
addr16
inc
scas
int3
nop
sub
repz
lods
mov
push
in
lret
dec
cmpsb
das
addr16
and
shll
jb,pn
push
out
popf
sub
sub
adc
xchg
mov
lret
sub
pop
aaa
into
xchg
cli
sub
jb
adc
leave
mov
inc
data16
es
add
daa
push
add
daa
rorl
cmp
insl
shrl
outsl
in
xor
push
or
out
pop
and
sti
leave
stos
or
push
stc
xchg
lock
jl
jbe
rclb
mov
or
jb
sub
xchg
jge
ret
ljmp
xor
mov
and
subb
cmp
stos
cmp
dec
js
out
cmp
inc
cmpsl
or
jg
lret
push
clc
jg
ret
mov
pop
imul
outsl
sti
xchg
fisubl
xlat
xchg
sti
dec
test
test
inc
stos
hlt
repnz
pop
and
jb
aaa
mov
push
rclb
and
das
imul
dec
scas
xchg
mov
cmp
inc
stos
push
daa
ficomps
sbb
cmc
mov
inc
cmpsb
push
and
int3
imul
dec
test
dec
and
cmp
fsubl
add
in
repnz
test
sub
dec
sbb
push
call
sub
rep
push
or
pop
out
aas
cmpsl
inc
dec
call
xor
mov
sarl
pop
ljmp
push
mov
and
clc
xchg
push
xor
add
lods
xor
mov
lretw
xor
mov
push
shrb
xchg
cmp
mov
fs
cmpsl
add
push
imul
pop
push
lea
lret
xchg
fldt
cli
loopne
push
js
test
ret
ss
cmp
adcb
xor
and
cmpsb
pop
push
cmp
push
ljmp
inc
ja
mov
dec
sbb
xchg
sub
pop
jno
out
sub
int
arpl
push
in
addl
je
xor
call
jmp
outsl
or
pop
add
mov
fildl
inc
xor
loopne
push
ret
mov
popf
and
faddl
in
mov
push
icebp
dec
ds
je
and
mov
push
jb
mov
xchg
stos
cmpsb
sahf
inc
int
icebp
cmp
mov
cmc
push
flds
loopne
imul
push
rolb
js
cs
outsb
cltd
push
push
and
mov
and
enter
mov
lahf
repnz
mov
rcl
jge
mov
mov
and
or
cld
inc
pop
cmp
jle
pushf
cli
imul
lret
adc
cld
in
std
cmc
loopne
jp
mov
add
frstor
mov
movsb
ja
ret
daa
cmp
jp
shll
aam
std
js
cli
cs
movsl
adc
test
incb
inc
add
mov
push
loope
movsb
pop
sbb
int
push
mov
in
test
repnz
aad
lret
testb
push
pop
mov
sbb
jb
scas
pop
sahf
pop
sar
mov
mov
cltd
push
fbld
mov
gs
scas
enter
call
sbb
aaa
push
icebp
mov
adc
bound
jl
lret
scas
add
imul
leave
sbb
sub
xchg
jne
jne
daa
push
popa
or
fcmovnbe
lods
mov
ss
pop
mov
out
mov
test
js
jg
scas
dec
add
mov
addb
pop
push
rorl
jl
push
jno
rolb
popa
aad
dec
mov
cmc
sbb
sbb
adc
push
rcrb
jnp
inc
in
stos
out
cmpsl
xchg
fbstp
outsb
inc
das
scas
iret
push
popf
xor
gs
stos
sub
inc
les
or
pop
pop
sahf
add
ljmp
push
jle
sub
gs
or
dec
vmread
inc
sub
mov
mov
sbb
jl
xchg
push
scas
push
loope
ficomps
cs
add
xchg
xor
add
mov
xchg
pop
lock
jmp
and
inc
cmc
arpl
cmpsl
rorl
push
add
movsl
cmp
pop
mov
leave
ret
push
rclb
mov
adc
push
cmc
mov
mov
pop
jl
aaa
jge
loop
fldl
mov
pop
push
adc
js
in
xchg
mov
jbe
aaa
ret
shrl
clc
in
mov
mov
cmpsb
adc
xchg
clc
dec
dec
filds
popa
loope
lcall
sub
mov
cmp
mov
mov
mov
nop
roll
or
mov
hlt
mov
testb
push
fimull
pop
push
imul
pushf
sbbl
das
sbb
dec
dec
fsubs
call
jne
xor
cmp
cmp
hlt
adc
lahf
icebp
mov
lds
mov
popa
xsha256
cmpsb
xchg
pop
cmp
sub
sub
xchg
xchg
pop
in
jl
inc
scas
pop
jae
rcr
inc
lahf
mov
aas
push
mov
push
mov
fldlg2
or
insb
pop
inc
xchg
rclb
and
loopne
jge
cmpsb
push
cmp
jg,pn
sub
xor
mov
lcall
jns
push
gs
sbb
jne
xchg
insb
sub
adc
into
push
imul
adc
into
mov
inc
pop
pop
jge
push
jae
inc
es
inc
xchg
add
pop
xchg
pop
mov
sub
pushf
inc
jmp
pop
inc
push
jnp
aaa
jg
mov
sarl
incl
repnz
lret
pop
test
fwait
xor
ljmp
iret
shrb
mov
ss
test
mov
or
les
sahf
scas
add
xchg
xor
es
and
xor
sahf
and
add
sbb
or
cli
mov
lret
jl
adc
mov
sbb
mov
test
adc
movsb
xchg
scas
or
pop
nop
pop
pusha
push
sahf
movsl
sbb
es
pop
cmpsb
test
cld
mov
sbb
xchg
std
pop
cmp
xchg
inc
loopne
icebp
xchg
scas
add
repnz
mov
mov
sub
mov
stos
lahf
lcall
xchg
lret
loope
cmpsl
mov
dec
push
jne
and
pop
xor
scas
sbb
test
xor
jmp
sub
xchg
cmp
mov
dec
push
int
dec
pop
jecxz
sahf
addr16
mov
js
ret
cmp
sti
mov
sti
inc
faddl
push
negb
cli
add
xor
repnz
cmp
mov
lods
rcl
lcall
stc
shlb
imul
jecxz
mov
jmp
mov
and
call
arpl
or
test
or
pop
mov
movsb
lret
push
xchg
mov
loop
jg
xchg
push
dec
test
dec
cmp
pop
test
cmovb
sub
lods
or
ljmp
dec
shll
lock
stos
jle
fucompp
push
push
fidivrs
in
xorl
xchg
add
mov
xor
ja
jo
mov
sbb
out
xchg
nop
popf
stc
lret
xlat
sub
adc
pop
adc
fmulp
lods
jge
xchg
pop
push
and
insb
sbb
cli
cwtl
das
sub
cmpsb
cmp
loopne
add
out
adc
mov
push
in
ss
out
hlt
cltd
mov
int3
fisubs
push
inc
jns
sbb
mov
pushl
mov
in
mov
add
and
inc
les
pop
xchg
mov
adc
jns
sbbl
jnp
sbb
sub
cmpsl
cmp
neg
les
xorl
adc
scas
es
push
xor
sarl
stos
data16
sub
mov
dec
testl
lahf
adcb
ret
add
jecxz,pn
dec
pop
je
movsb
addr16
xchg
out
sub
ss
bndldx
ret
aam
shlb
rclb
mov
out
mov
cmc
mov
mov
dec
mov
repnz
or
jo
dec
dec
mov
rolb
push
mov
add
rcl
xchg
push
cmpsb
ret
outsl
pop
or
jg
mov
lret
iret
mov
popf
cmp
cli
jmp
xorl
mov
dec
add
test
xchg
mov
xchg
xor
inc
repnz
int3
lret
shrb
xchg
pop
mov
push
stos
pushf
inc
rcrl
into
xor
push
xchg
outsb
shl
in
adc
mov
jb
sub
and
cmp
xchg
add
mov
inc
mov
imul
aaa
adc
idivb
fisubrs
mov
je
test
inc
pop
mov
int
aas
and
mov
loop
xor
sbb
push
xchg
xor
jo
lea
mov
testl
mov
sbb
and
dec
mov
push
outsl
xor
lock
outsl
xchg
xchg
ffree
rcrb
mov
xchg
xor
dec
push
push
sub
xchg
mulb
lods
fbld
push
cwtl
scas
mov
lock
icebp
mov
gs
sbb
sbb
xchg
mov
ficoml
mov
bound
mov
push
aad
mov
xchg
test
sub
xchg
and
jb
inc
lahf
outsb
add
test
movsl
mov
repz
shrb
inc
mov
dec
lret
bound
repnz
mov
adc
sub
jp
outsb
fwait
jl
pop
stos
pop
adc
inc
inc
push
andl
jnp
test
cmp
cmp
les
rorl
js
in
aad
and
mov
aaa
push
icebp
jmp
fs
jmp
pop
jo
or
mov
mov
js
lds
cmp
cmpsb
loop
dec
cmp
fucomip
mov
jae
stc
and
sahf
or
sti
xlat
mov
jno
ss
xchg
str
and
ret
pop
push
cmp
aaa
jmp
das
cmp
pop
pop
sahf
pusha
cmp
pop
repnz
cmpps
jne
inc
sub
sbb
cwtl
es
sahf
imul
inc
pusha
xor
shld
popf
xchg
pop
sub
dec
mov
xor
out
int
pop
push
xor
sbb
fnsave
cmp
push
repz
pop
cli
test
stos
test
fsubrl
lods
fadds
sub
in
aas
push
pop
pushf
pop
or
pop
dec
gs
jns
test
mov
and
jne
in
in
notb
push
pop
addr16
cld
or
cmp
pop
dec
push
shl
frstor
inc
fmuls
fwait
xlat
mov
lods
sub
mov
pop
xor
dec
add
loope
push
adc
hlt
mov
clc
xchg
push
repnz
xchg
lds
repz
inc
insb
fistpll
fwait
adc
pushf
cmpsb
outsl
sbb
mov
lcall
outsl
sub
pop
xchg
loop
sbb
mov
daa
scas
cmp
pop
xchg
pop
bound
and
pop
mov
lcall
repnz
adc
add
dec
xchg
ljmp
test
mov
mov
inc
popa
mov
in
pop
out
push
push
test
jmp
and
jns
xor
or
push
and
aas
sub
sub
inc
pop
jmp
lcall
mov
dec
lock
mulb
dec
dec
subb
inc
fiadds
pusha
aad
pop
and
cld
sbbb
dec
in
idivb
jle
sbbb
jmp
push
clc
jge
add
sub
mov
push
fidivrl
sub
lcall
fnstsw
out
popf
inc
sbb
add
and
cld
push
mov
decb
out
cmpsl
adc
sbb
in
ret
xchg
arpl
ss
fnstsw
mov
or
out
mov
fstpl
dec
loopne
add
push
daa
ds
out
test
xchg
sbb
sbb
rcll
movups
outsl
xchg
ss
add
push
pushf
mov
xlat
sbb
aas
mov
or
pop
pop
arpl
imul
imul
inc
rorb
shrb
adc
jl
adc
lret
call
mov
pushf
mov
rolb
cltd
add
fwait
mov
scas
in
sub
dec
push
push
fs
insb
adc
loope
faddl
add
xchg
enter
pop
jns
or
mov
outsl
cs
int
data16
xor
enter
movsb
std
inc
rcr
push
in
and
jnp
repz
repz
ds
cmp
xchg
mov
push
sahf
ds
leave
jne
out
pop
add
lret
and
cltd
gs
jg
add
data16
pop
ficomps
push
mov
repz
sbb
leave
lods
mov
and
pop
rcr
lds
xlat
sbb
repz
mov
pop
cmp
add
lret
or
sub
inc
test
sbbl
test
mov
adc
fldt
or
gs
sti
xor
and
sbbb
popl
cwtl
rcrl
or
pop
sub
cmp
push
adc
jmp
mov
lahf
push
insb
xchg
imul
or
xor
add
add
sbb
lret
cmp
cmp
cmp
cmp
mov
dec
add
push
movsl
xor
lahf
jno
gs
loopne
pop
lret
add
lea
nop
mov
into
shrb
loop
testb
mov
test
dec
fwait
push
jecxz
popa
push
cli
push
data16
xchg
loopne
cmp
mov
and
adc
ret
inc
push
in
cmp
cli
cs
aaa
jbe
addr16
ds
or
cmp
imul
sbb
sbbl
add
mov
int3
push
mov
xchg
cmpl
mov
mov
fcoms
mov
pusha
mov
ret
and
inc
mov
mov
pop
rolb
lret
xor
inc
popa
add
loop
sub
adc
fdivs
enter
scas
add
rcll
xor
jecxz
popf
pop
xchg
cmpsl
cmpsl
out
push
fld
xchg
sub
int
inc
pop
out
pop
in
cmp
shld
mov
nop
stos
mov
in
mov
pop
jecxz
or
out
lcall
gs
lret
adc
gs
dec
xchg
pop
popa
jmp
hlt
jl
xor
sahf
sub
sbb
jp
movsb
bound
push
std
in
jmp
pop
xchg
adc
popf
rcrl
jnp
push
aas
pushf
lods
cwtl
out
mull
stos
andl
dec
outsl
push
jge
nop
pop
cmc
ret
mov
imull
push
lods
sbb
mov
shlb
mov
test
cwtl
sub
jnp
xchg
lea
inc
and
scas
nop
push
mov
or
movsb
pop
lahf
mov
xchg
dec
jp
mov
scas
bound
popf
sti
cwtl
bound
or
movsb
mov
add
mov
jae
daa
mov
pusha
shll
jp
mov
ss
mov
shr
xor
std
test
orb
lods
jae
jnp
icebp
push
filds
inc
jns
int
bndstx
add
xorl
jnp
mov
ja
fidivl
or
jmp
fldl2t
mov
ljmp
js
jo
dec
jecxz
mov
leave
mov
or
sub
inc
gs
imul
lods
xchg
xor
js
int
mov
xor
pusha
outsl
repz
xor
filds
out
stc
and
fnsave
add
mov
xchg
in
stc
xchg
pop
addr16
nop
aam
ja
lret
pop
mov
xor
push
pop
stos
xor
cmpsb
xchg
pop
mov
data16
loopne
in
iret
adc
mov
fildl
lea
cmp
idivl
jbe
jo
jle
shll
sbb
jo
cmpsl
out
sbb
movsb
dec
dec
subl
jmp
sub
shll
jge
dec
dec
jb
cmp
lcall
mov
mov
and
je
and
mov
outsl
jecxz
in
scas
inc
jae
xchg
lods
fidivrs
adc
cltd
jbe
mov
fucomp
cld
ds
icebp
xor
idivl
sbb
inc
inc
inc
mov
pusha
loop
test
inc
jno
fdivs
jge
std
mov
test
call
push
sub
inc
dec
aam
adc
orl
sbb
jecxz
push
push
add
adc
lds
scas
outsb
imul
call
sbb
addr16
lea
cmp
push
mov
push
mov
ja
adc
lods
aam
cltd
icebp
in
mov
push
pop
pop
cld
xchg
enter
adc
and
adcl
jne
orl
push
jmp
hlt
leave
inc
adc
out
xchg
adc
mov
js
push
in
xchg
ret
in
loope
xchg
or
in
cs
jp
sahf
add
cmp
mov
xor
and
sbb
mov
gs
sub
xchg
sub
or
sub
pop
sbb
lret
daa
jge
jns
mov
je
ja
pushf
dec
mov
shl
sbb
pop
cmp
mov
pop
pusha
sahf
cli
lret
movsb
js
aas
leave
jnp
adc
out
das
xchg
out
mov
out
jbe
inc
sbb
shlb
mov
push
out
outsb
and
insl
xchg
lea
out
pop
mov
adc
es
xchg
sub
inc
mov
inc
scas
mov
xlat
fdivrs
fstps
mov
mov
insl
and
loop
aas
lahf
in
inc
or
stos
sbb
add
movsb
fisubl
je
roll
in
mov
mov
jb
lcall
leave
clc
cmpsb
inc
imul
xor
push
std
sub
scas
dec
in
push
mov
jno
push
lcall
mov
or
push
stos
push
xchg
lahf
stc
push
imul
pop
fiaddl
push
js
mov
shll
test
js
stos
cli
xchg
into
pop
push
test
pop
hlt
adc
insb
mov
sbb
sbb
outsl
js
pop
xchg
repnz
repnz
adc
inc
je
popa
neg
jno
xchg
jle
inc
hlt
in
sub
icebp
mov
dec
mov
divps
push
or
cli
and
sub
sbb
int
shl
inc
mov
inc
minps
pusha
mull
or
fiadds
dec
sub
in
out
aad
out
sbbl
dec
pop
and
jo
stos
push
outsl
mov
aas
mov
gs
repnz
mov
mov
mov
mov
stos
jge
call
test
mov
or
imul
sbb
in
gs
shll
insl
icebp
loope
mov
incl
xlat
or
mov
push
popf
xor
adc
jmp
sbb
mov
fs
pop
mov
cmp
sbb
lcall
rcrl
dec
mov
lahf
xor
aad
push
mov
mov
imul
jmp
pop
ja
loop
repz
scas
jge
rclb
mov
andb
jae
xor
lock
int
add
movsb
pop
hlt
pop
stos
push
adc
xor
inc
mov
sbb
out
or
cltd
ja
adcl
mov
inc
stos
stos
daa
jns
jle
test
imul
cmp
loopne
shll
jnp
sbbw
aam
mov
sbb
mov
sahf
loope
mov
ss
push
dec
pop
negb
jp
clc
cmp
in
inc
pop
push
mov
xchg
xchg
jmp
dec
mov
push
jge
jmp
and
jmp
out
popa
mov
loopne
jg
pop
adc
cmp
pop
fsubrp
mov
inc
and
pop
and
sbb
aam
aas
push
xor
lea
inc
sbb
insb
push
mov
mov
sbbl
xchg
and
mov
insl
shll
xor
movl
xor
fs
xchg
loop
mov
out
mov
cmp
jle
les
sub
scas
xchg
scas
fsubs
sub
test
idiv
adc
xchg
fsts
ja
sub
movsl
mov
cmp
fidivs
ret
mov
push
jo
adc
loope
sbb
aam
cmp
lcall
push
pop
sahf
xchg
sub
push
push
jecxz
push
ljmp
test
inc
pop
ret
xlat
jb
dec
pop
imul
xchg
pop
mov
test
inc
mov
mov
push
cmp
aad
jecxz
in
push
xchg
imul
jbe
push
das
sub
or
pushf
jbe
jmp
cmpb
iret
mov
and
xchg
pop
mov
popf
or
iret
xor
in
adc
mov
and
inc
pop
jns
js
sub
data16
and
test
pop
outsb
lods
xchg
stos
xchg
push
lods
mov
dec
scas
and
mov
das
xor
arpl
push
xor
mov
jmp
jl
or
jns
mov
icebp
mov
sub
mov
jns
add
cmc
mov
mov
fnstenv
shrb
sti
adc
push
shl
mov
mov
adc
in
inc
mov
flds
scas
pop
les
cmpb
adc
lret
xor
mov
ret
les
pop
dec
add
fidivrl
mov
cmp
mov
in
xorl
cs
mov
dec
popa
xor
ja
and
ficomps
add
jecxz
jnp
add
pop
jecxz
mov
adc
sahf
and
rcrl
xchg
in
pop
shlb
cmp
test
and
jbe
or
imul
fucomi
aad
mov
std
mov
popf
ret
cli
and
jge
jmp
rorl
sti
pop
icebp
in
xor
outsb
dec
stc
nop
jnp
inc
int3
sbb
outsl
jecxz
int
adc
popf
les
push
cli
inc
push
fsubl
mov
xor
xor
data16
push
jo
dec
fmul
mov
mov
leave
stos
ret
jp
je
mov
aas
outsb
and
pop
repz
aam
subl
or
xchg
pushf
or
and
push
sbb
insl
add
popa
shl
adc
shlb
jb
and
addr16
jg
mov
mov
gs
mov
in
movsb
addr16
aad
shrb
sti
push
out
mov
or
or
add
pop
imul
call
sub
adc
cli
push
sbb
shr
xlat
and
mov
mov
pushf
or
das
fisttpl
in
xchg
mov
fninit
ss
sub
sub
or
lret
xchg
movlps
sbb
add
or
mov
add
dec
ret
call
popf
mov
cmpsb
ret
sub
jl
or
cmp
test
push
or
mov
xchg
cltd
mov
pop
mov
add
sahf
and
fsubrs
inc
test
imul
xchg
call
testb
out
push
and
pop
xchg
mov
rol
stos
push
or
imul
push
dec
ja
mov
dec
and
int3
push
in
or
mov
in
addw
lock
inc
mov
fdivr
sbbl
lea
out
push
cmp
das
mov
sbb
ds
xor
xor
js
std
xor
fadd
pop
es
fsubs
and
push
jns
mov
movsl
push
cmpsb
aad
mov
aas
mov
mov
adc
push
sbb
mov
xchg
sbb
mov
lret
inc
xlat
push
cmp
push
pop
fcompl
mov
jb
mov
jle
lock
mov
push
aad
cmpsl
loope
ja
cmc
ret
insb
mov
aad
call
and
inc
mov
loopne
movsl
adc
out
insl
sbb
mov
aad
shll
push
outsb
jle
mov
std
fimuls
les
cmp
rcl
inc
xor
js
xchg
sbb
xchg
iret
andb
push
shl
mov
ret
jl
pop
jno
jne
pop
mov
fwait
sub
inc
rcll
jl
xchg
shrl
int3
push
int3
cld
sbb
addb
pop
lret
nop
push
out
insl
jge
jecxz
xchg
rcll
and
sub
ds
movsb
cwtl
adcb
xchg
lock
push
leave
fnstenv
addr16
or
pop
testb
dec
sub
adc
jmp
imul
int3
lret
rorb
in
hlt
imul
mov
in
fstps
fiadds
repz
lahf
enter
xchg
sarl
fwait
aas
mov
jl
mov
mov
push
mov
mov
inc
sub
xor
cmp
shrb
scas
pop
je
or
mov
std
ss
inc
xchg
stc
inc
int
repnz
ss
and
sti
cmp
mov
sbb
xchg
dec
cmp
fwait
mov
aas
pop
aam
lea
mov
lds
and
push
push
dec
xchg
into
mov
pop
sbb
vunpcklps
mov
mov
ja
xchg
in
sbb
stos
lahf
addb
sub
xchg
clc
int
pop
lcall
shl
and
dec
mov
dec
mov
adc
push
movsl
mov
test
adc
cmp
ja
cwtl
sti
sbb
nop
xchg
xor
lds
notl
in
sbbl
mov
pop
call
pop
pop
xor
jle
lock
test
xchg
fidivrs
pop
sbb
fmull
xchg
repz
cwtl
insl
cmp
mov
or
mov
xor
fsts
mov
js
test
pop
mov
icebp
pop
cmc
and
xor
cmp
addr16
inc
bswap
icebp
adc
dec
mov
lods
sub
nop
fnsave
inc
packssdw
out
popa
inc
adc
sub
pushf
xchg
mov
cmc
lock
push
add
pop
push
or
inc
es
mov
int
inc
fs
fcmovb
mov
lods
sbb
fsubrl
dec
ja
sbb
dec
movsl
inc
stos
call
mov
js
lods
or
icebp
aas
outsb
pop
xor
je
loop
in
inc
ficompl
or
dec
scas
or
popl
cmpsb
jg
ljmp
enter
xor
mov
pusha
dec
pushf
mov
into
imul
data16
sbb
add
jmp
scas
inc
addr16
mov
add
mov
ja
out
dec
sbb
sahf
nop
hlt
cmp
add
lds
nop
jmp
xchg
ficompl
das
arpl
xchg
push
mov
mov
stc
push
add
inc
clc
sub
fwait
pop
hlt
and
sub
jne
adc
cmpsb
cmp
jg
ds
pop
in
test
in
xchg
or
daa
loopne
mov
add
ja
pop
call
pop
testl
repnz
std
add
push
pop
pop
sbb
xor
dec
jae
clc
shll
mov
or
es
outsb
test
imul
loope
xor
cmp
iret
push
dec
push
push
pop
outsl
cmp
fiaddl
dec
dec
adc
cwtl
cs
mov
int3
fnstenv
sub
js
sbb
cmp
mov
adc
mov
inc
in
cmpsl
loop
rol
mov
int3
mov
inc
sub
push
repz
jns
mov
and
or
add
movsb
xor
and
xchg
in
jns
mov
in
jbe
jae
or
shl
push
lock
mov
das
mov
jle
pop
mov
dec
fadds
jl
cmpsb
adc
sbb
sbb
sub
mov
in
pusha
ljmp
bound
or
ljmp
dec
mov
shll
sbb
jo
decb
jne
jbe
xchg
divl
adc
aam
mov
iret
les
mov
js
pop
rcrb
mov
dec
dec
icebp
sar
movl
js
cmp
push
dec
shlb
pop
jl
sub
jnp
add
inc
push
mov
test
mov
inc
lds
cmc
pop
cmc
adc
jge
pop
mov
cmp
int
push
adc
stos
int3
das
test
cmp
fadds
inc
rorb
repnz
fcoml
cmpsl
push
jle
jg
push
mov
pop
mov
cmp
js
jne
jnp
popa
xchg
fstl
inc
and
sub
mov
negl
lock
jb
lods
cmp
mov
cmp
stc
mov
mov
pusha
and
xor
push
mov
ds
mov
xor
lds
cmp
fnstenv
subb
test
jle
andl
xchg
or
movsl
in
push
add
repnz
jg
xchg
ficoml
lret
add
push
inc
adc
xor
sbb
test
popa
addl
stc
cmpsl
lea
sbb
sub
mov
xchg
cmpsb
pop
test
repz
imul
in
jge
adc
adcb
jo
dec
scas
nop
icebp
leave
lahf
mov
and
in
fst
xor
jae
push
jmp
sbb
mov
mov
imul
adc
clc
pop
out
nop
scas
inc
inc
fidivs
in
mov
outsl
scas
inc
jmp
cmp
repnz
out
push
aas
mov
lret
sti
dec
adc
adc
cmp
negl
sub
adc
shl
cmp
in
add
imul
icebp
out
xor
adc
fwait
inc
push
rol
push
test
adc
inc
or
arpl
mov
sti
out
sub
das
fdivp
pusha
jne
popf
sub
pusha
dec
fwait
inc
aas
xchg
out
push
sbb
pop
out
cs
jne
mov
shll
sub
and
jno
xor
push
mov
test
adc
jg
stos
or
dec
repnz
les
and
frstor
dec
in
xor
sbb
lret
clc
or
out
lahf
test
cmp
insb
pavgw
outsb
inc
popa
or
outsl
mov
call
add
ss
push
imul
xchg
repnz
test
adc
push
xchg
or
mov
mov
lret
xchg
sar
test
es
leave
xor
mov
mov
in
mov
fstpt
xor
xchg
jne
cld
lock
das
and
push
xchg
push
fldt
mov
sub
daa
movsb
xchg
popa
mov
cltd
stos
inc
and
cmp
xchg
mov
arpl
dec
xchg
push
es
mov
nop
mov
into
xor
std
xchg
movsb
xchg
cli
push
dec
and
push
outsl
lcall
sbb
pop
sti
in
or
movsl
mov
mov
stc
movb
lret
xchg
frstor
bound
das
pushf
add
fcompl
push
mov
out
pop
adc
xor
es
lds
jmp
icebp
rcll
inc
nop
pop
ss
cli
mov
pop
jo
lea
ss
je
addl
aad
incl
jne
lods
cmpsb
addr16
arpl
int3
daa
in
lret
mov
pop
pop
inc
cltd
jecxz
outsl
sub
imul
and
mov
jecxz
xor
rcrl
insl
add
out
fistpl
jns
adc
add
mov
lods
and
fisttpl
mov
rolb
lds
jne
repz
or
dec
pop
insb
mov
push
aam
mov
gs
or
mov
push
mov
and
xchg
lret
dec
cmp
movsb
cmp
iret
out
insb
add
pop
ss
mov
clc
setae
mov
orb
leave
inc
out
ja
jle
sahf
insl
scas
dec
push
sub
dec
cltd
sbb
mov
shlb
xor
mov
cmp
cli
xchg
stc
aam
es
cs
imul
xchg
mov
xor
mov
in
cmc
fsub
int3
scas
jbe
pop
das
xor
jb
push
sti
mov
ret
xchg
in
mov
aam
mov
test
inc
xlat
dec
xor
push
scas
addl
or
adc
dec
loopne
fidivl
iret
loope
repnz
mov
jae
mov
mov
lahf
xchg
xlat
sbb
mov
testb
pushf
test
cld
lcall
jbe
aas
ljmp
lret
lahf
outsl
cmp
xchg
sub
xchg
rcr
mov
xchg
hlt
sub
shll
mov
movsl
add
sub
cmp
cmpsl
adc
jno
es
inc
fnstcw
push
xchg
lds
pop
adc
mov
mov
testl
xchg
sbb
sbb
sub
ror
pushf
or
xor
sbb
lock
or
pop
jle
xorb
ljmp
iret
nop
arpl
mov
stos
in
inc
push
dec
dec
repnz
sub
pushf
icebp
cs
sub
xlat
dec
js
sbb
jp
mov
inc
sub
arpl
fs
adcb
mov
and
test
adc
sahf
fwait
cli
or
lods
inc
mov
aaa
xor
inc
pop
fdivrs
inc
aas
jb
jl
lcall
jp
cs
ljmp
lock
frstor
adc
lea
xor
out
pushf
jg
or
adc
stos
js
pusha
loopne
dec
xchg
xchg
mov
mov
repz
push
push
nop
filds
cld
stos
cmpsb
or
pop
into
out
push
dec
shrl
and
daa
or
push
out
jg
popf
mov
scas
cld
ljmp
hlt
test
jae
shrb
dec
inc
pop
aaa
into
dec
jno
mov
mov
scas
bound
push
mov
pop
sub
je
nop
incl
sbb
inc
mov
dec
push
fistpll
xchg
cwtl
pushf
mov
int
sbb
cmp
mov
sbb
enter
dec
lods
jo
fildll
lea
sbb
fdivs
loopne
sbb
xchg
and
sbb
push
fistl
push
jge
mov
fistl
pop
jmp
mov
hlt
push
mov
fstpl
cmpb
pop
mov
add
scas
cli
fwait
inc
inc
leave
and
fsubr
std
mov
mov
mov
push
mov
xor
leave
lret
cwtl
pop
jb
mov
mov
fsubr
mov
outsl
fs
push
test
add
or
dec
push
mov
push
cmpsl
cmc
sbb
mov
iret
pop
rol
test
jae
pop
lods
ds
fwait
incb
shlb
mov
cmp
loopne
push
sub
add
adc
fildl
add
lods
loope
or
roll
xor
sbb
inc
std
fs
out
lret
add
inc
cmp
fwait
jl
divl
testb
mov
xor
jecxz
nop
test
add
in
pop
xor
das
xchg
nop
insb
push
jbe
and
lds
mov
pop
fdivl
sbb
lds
shrl
xorl
cs
out
mov
mov
incb
mov
lahf
inc
lea
sbb
aaa
mov
push
mov
sub
xchg
mov
fmulp
call
jmp
cmp
cmpsb
xor
or
inc
fbld
imul
add
inc
push
mov
ja
loopne
scas
jge
cmc
jg
sahf
clc
loope
and
aas
movsb
es
cmp
sub
fs
cwtl
adc
xchg
dec
cmpsl
cmp
inc
std
js
pop
sub
cmp
mov
cmp
dec
cmpsb
jne
repz
ret
push
ret
scas
jno
inc
loope
dec
jae
jl
jmp
jle
mov
daa
scas
stos
mov
ffree
test
mov
mov
ret
mov
xor
daa
mul
sbb
mull
xor
mov
ret
test
mov
aam
hlt
loope
add
xchg
jp
pop
pop
outsb
mov
inc
cmc
xor
fcmovb
inc
pop
pusha
jb
stc
cmpsl
popa
cmp
inc
mov
adc
aad
imul
out
dec
dec
or
in
rcll
insl
dec
push
dec
mov
inc
sbb
mov
jnp
cmpsb
cmpsb
adc
jmp
inc
shrb
sbb
jle
cltd
pushf
or
out
pandn
imul
mov
hlt
jb
dec
dec
aam
sub
sbbb
das
or
mov
cmpsb
inc
sub
mov
aam
dec
insl
or
cmpsl
jle
sbb
jge
cs
adc
pop
adc
mov
movsl
mov
call
stos
pop
push
xor
mov
pop
xchg
ds
das
sub
aad
mov
add
pop
dec
subb
loopne
in
xchg
lock
es
out
cli
fcmove
in
int
out
movsb
dec
cld
jb
or
ss
in
xor
add
out
push
test
cmp
mov
lds
into
gs
xor
add
adcl
or
and
insl
mov
adc
movb
sub
pop
mov
push
lcall
push
inc
pop
jge
push
mov
inc
stos
mov
shl
notl
mov
icebp
and
js
js
jp
repz
pop
add
jns
lea
mov
sub
dec
xor
aam
mov
mov
add
xchg
mov
mov
push
sbb
inc
cmp
cli
mov
jns
jmp
jl
sbbl
ffreep
sbb
add
movsl
push
outsb
fnstsw
imulb
lods
pop
push
je
lods
leave
mov
mov
push
adc
fcomps
pop
and
adcb
xchg
push
mov
in
stos
fisubrs
sbb
inc
pushf
add
ret
adc
lret
mov
call
and
out
jne
push
push
mov
imul
fdiv
les
xor
pop
mov
lea
xor
mov
loopne
imul
lahf
test
sbb
or
inc
imul
sub
lea
fstpt
add
sbb
and
shlb
xchg
lods
ret
sub
stos
dec
dec
loope
add
repz
cld
je
xor
shlb
cwtl
std
stos
inc
sub
push
std
cmp
pusha
insl
pop
inc
out
movsb
into
imul
or
xor
test
mov
fs
fdivrl
aaa
fxch
fidivrs
cmp
pushf
push
jnp
sub
sbb
pop
dec
xchg
cmpsl
cmpsl
iret
mov
mov
adc
mov
bound
cmpsb
into
test
test
cld
cmpl
iret
iret
ds
stc
xchg
sub
inc
pushf
in
popf
cmpl
andl
sbb
push
jne
sti
ds
fs
xchg
loop
dec
pusha
jbe
and
cmpsb
cmp
movsl
cmp
jne
je
cmp
dec
lds
out
scas
push
xlat
sub
outsl
add
addr16
jns
sub
or
sub
addr16
or
in
adc
arpl
pushf
phaddd
fcoms
test
int
int
icebp
mov
repz
or
dec
icebp
movsb
bound
inc
xchg
cmpl
rcl
mov
loope
jne
mov
push
cmp
push
jb
fildl
nop
sti
mov
rcrb
loopne
cmp
dec
outsb
imul
jb
sub
mov
lret
adc
ss
bound
scas
loope
rorb
scas
add
adc
push
sysret
fidivl
xchg
icebp
sbb
rol
or
adc
icebp
and
into
push
xor
jecxz
enter
cmpsb
sub
add
sti
push
iret
jno
and
repnz
mov
cmp
out
mov
adc
enter
daa
sbb
or
jmp
pop
xorl
mov
inc
ficoms
pop
movsb
mov
jg
stos
outsb
add
mov
mov
jl
cltd
add
dec
xchg
pop
inc
leave
adc
push
sub
jno
outsl
jne
lahf
fsubl
scas
lock
ljmp
sbb
popa
mov
in
jnp
mov
aam
clc
rcl
out
call
dec
outsl
popa
aaa
push
xchg
and
add
pushf
cmpsl
sub
dec
cs
adc
cmp
mov
pushf
lods
nop
xchg
pop
lods
mov
scas
inc
out
fdivs
or
iret
pop
aaa
dec
dec
loope
pop
in
or
jl
call
push
sbb
pop
icebp
idivb
mov
pslld
xchg
std
adc
dec
mov
xor
sub
imul
sahf
sahf
dec
sbb
and
mov
testl
push
push
push
xorb
mov
fstpt
or
mov
sbb
loopne
cmp
in
das
fwait
fs
xor
popf
push
gs
aas
shll
sbb
stos
and
scas
sti
mov
pop
dec
clc
add
lods
dec
scas
inc
jl
dec
push
sbb
int
inc
cmp
lds
mov
pop
jno
xchg
mov
xchg
lods
xchg
sbb
sub
fisubrs
mov
cwtl
adc
repz
push
aad
es
xchg
push
xchg
movsb
inc
sub
mov
fiadds
test
push
rorb
icebp
adc
arpl
lahf
lea
cltd
lret
outsb
repz
xchg
out
lds
cld
jno
stos
push
jb
push
fildl
in
clc
outsb
popl
mov
movl
lret
mov
scas
pushf
cmp
or
in
xchg
jnp
pop
inc
jne
add
pop
out
add
jo
fidivrl
and
push
sub
pop
jecxz
pushf
push
hlt
dec
sub
mov
and
test
push
add
sub
stos
sub
add
inc
popf
aaa
in
in
jg
mov
cmp
dec
mov
lahf
fdivrl
push
jge
mov
add
cmpsb
xlat
insl
nop
daa
lahf
int3
rclb
mov
std
rolb
or
je
mov
fldl
pop
add
insl
arpl
jno
lcall
imul
pushf
popa
outsb
fisttpl
mov
popf
and
mov
cmp
pushf
inc
dec
pop
jae
cmp
lds
dec
dec
pushf
jae
add
lahf
inc
out
or
sub
or
das
jo
movsl
icebp
mov
subb
dec
jbe
movsl
xchg
out
xchg
ret
testb
ja
cmc
mov
subl
out
call
jno
or
cmpsb
add
arpl
sub
in
jns
sub
ds
ret
mov
push
inc
xlat
inc
flds
test
test
nop
test
test
mov
call
jns
xchg
fwait
out
push
sub
or
inc
adc
add
push
mov
je
cmpsb
aaa
flds
inc
std
in
cmpsb
mul
jle
mov
add
aaa
popf
stc
jae
sub
nop
ss
xchg
add
cmp
aam
sbb
inc
sarl
jl
fs
jmp
jo
aad
or
or
movsb
mov
shl
sbb
xchg
shll
mov
push
jmp
inc
mov
stos
jbe
pop
sub
mov
xor
arpl
cmp
gs
fstps
mov
cli
sbb
in
inc
fnstsw
mov
movsw
mov
subl
mov
les
lods
loope
notl
inc
mov
push
flds
xchg
inc
xchg
dec
mov
sub
loope
enter
scas
sub
push
mov
sti
pop
push
pop
call
mov
out
cmp
arpl
mov
push
in
fldcw
gs
addl
pop
cmp
mov
call
repnz
ljmp
sbb
addr16
fwait
int
icebp
sti
push
test
adc
pop
or
push
into
stos
nop
and
cmp
dec
mul
cltd
imulb
mov
add
or
add
lods
fisttpl
lods
cmpsl
fisttps
inc
fdivs
icebp
adc
sub
jp
inc
lea
push
sbb
sahf
push
sbb
jb
push
mov
in
loopne
xlat
lret
mov
mulb
aas
push
cmpsb
xlat
rorl
and
xlat
lea
sarl
cmp
jmp
pop
shr
dec
add
pop
lods
ret
lods
xor
mov
cmp
pop
cmp
jecxz
or
cmp
add
sub
sub
jg
lcall
push
int3
pushf
mov
cwtl
dec
inc
or
cld
andb
cmc
mov
inc
xchg
frstor
pop
jo
daa
movsb
xor
out
faddl
orb
dec
sbb
push
jns
jg
sub
into
and
mov
js
lret
cmpsl
sub
dec
cmpsb
jp
pop
xor
pusha
or
xchg
mov
daa
lcall
adc
inc
push
add
jg
dec
popa
sub
xchg
les
movsl
aam
xor
xchg
daa
aas
push
test
test
mov
in
push
inc
arpl
jae
lahf
data16
shl
clc
inc
out
and
pop
push
push
lock
scas
mov
push
jno
bound
mov
add
imul
xchg
adc
dec
clc
leave
int
nop
push
cmpsl
mov
pop
imul
cs
xchg
test
push
or
repz
call
lcall
mov
stos
xchg
sbb
sub
inc
sub
movsb
push
test
push
jb
mov
mov
cmp
arpl
arpl
bnd
iret
add
sbb
sbb
and
or
xchg
dec
test
sub
xchg
outsl
daa
and
mov
or
dec
jle
cmp
inc
dec
push
sbb
nop/reserved
clc
in
jge
scas
push
arpl
adc
inc
inc
inc
mov
lcall
cmp
aaa
jne
cmpsl
cmp
push
dec
push
or
push
mov
xchg
ljmp
mov
mul
xor
sub
and
sbb
add
push
ss
ljmp
push
pop
outsl
loope
cltd
popf
nop
push
hlt
and
imul
outsl
f2xm1
cmp
loope
inc
data16
loopne
dec
xadd
jae
shll
cmp
outsl
jecxz
in
mov
add
ficomps
outsb
push
sbb
js
outsl
mov
int3
inc
pusha
adc
in
test
int3
cmp
sbb
jbe
xor
das
cmc
sbbb
or
pop
mov
jmp
and
pushf
or
pop
xor
adc
andb
rcr
cmp
insb
imull
inc
mov
push
hlt
dec
test
inc
fs
out
mov
daa
into
mov
jne
add
les
pusha
insl
cmpsl
js
mov
sbb
lcall
cwtl
stos
fwait
ds
in
sub
push
add
call
mov
or
out
bound
dec
aaa
lock
push
fwait
dec
loope
cmp
stos
bound
jae
mov
ret
push
pop
stc
aaa
xor
pop
divb
jae
lea
sbb
pop
xchg
test
adc
test
lods
pop
andl
cmp
pop
scas
mov
rcll
mov
shl
sub
xchg
mov
in
cltd
mov
in
std
jns
lods
mov
jo
lea
push
inc
push
dec
inc
xor
ret
mov
mov
rcrb
shlb
fwait
mov
js
xchg
and
ljmp
arpl
call
divl
mov
push
mov
aaa
and
pop
ss
xchg
in
lods
lods
mov
sub
adc
add
in
inc
clc
push
jne
out
sahf
fwait
sbb
pop
mov
std
sub
inc
lds
dec
sbb
pop
popa
pop
cltd
push
jge
icebp
adc
pop
lret
bound
and
jno
and
push
xchg
pop
add
scas
mov
sbb
and
push
icebp
pop
fbld
sbb
mov
movsl
test
shll
cmpsb
test
cmp
shlb
dec
loopne
mov
or
out
adcl
mov
cld
xor
inc
cltd
or
idivb
inc
jmp
sbb
mov
and
or
pusha
and
xor
mov
adc
push
repz
xchg
jo
outsb
lods
stc
push
sbb
adc
inc
mov
or
lds
or
in
movsl
cmp
fmulp
xlat
js
ret
sbb
cltd
pop
rorb
dec
dec
cli
xor
cmp
sub
sbb
and
xor
std
push
inc
push
loope
dec
in
push
lods
js
mov
push
pop
push
das
faddp
movsl
push
call
jns
push
mov
sti
out
test
inc
mov
scas
cmp
jge
sub
add
out
jg
ja
sbb
out
push
test
mov
xor
xchg
push
jb
pushf
mov
out
inc
aam
std
jbe
pushf
mov
ljmp
mov
xor
adc
cld
nop
adc
pop
nop
xor
into
addl
jnp
nop
mov
pop
inc
daa
out
test
jb
adc
into
push
sbb
fdivs
in
stc
ficoml
xor
mov
das
adc
inc
movsb
cmp
fcomip
push
push
add
mov
dec
ror
mov
mov
push
adc
jg
dec
scas
arpl
mulb
ret
inc
jmp
lea
inc
gs
mov
cmpsl
sub
pop
jae
lds
mov
jb
inc
jp
jbe
or
fs
sbb
add
das
jae
or
pop
rclb
cltd
dec
and
pop
or
add
or
cmp
or
push
addl
fdivrs
push
sahf
rclb
and
mov
inc
inc
cmp
adc
push
lret
fidivs
lcall
inc
in
xchg
add
fcompl
rol
shll
inc
rorb
add
int3
arpl
ljmp
sub
pop
in
hlt
inc
stc
or
mov
sbb
outsl
lock
shr
lcall
jp
pop
mov
add
incl
pop
xor
test
scas
pop
out
daa
lret
mov
jo
sbb
popl
cld
gs
in
test
mov
movsl
add
pusha
pusha
cld
push
outsl
test
add
ret
mov
lret
xor
js
out
rep
lea
xorl
adc
test
sahf
xor
push
out
xchg
inc
addr16
ds
bound
inc
push
mov
pop
xorb
pxor
ret
dec
rolb
inc
add
in
mov
je
out
and
push
sbb
add
test
add
in
sub
xchg
push
ret
movsl
movb
leave
insb
lock
cmp
xor
xchg
inc
in
in
in
es
in
test
jno
mov
movsb
push
and
add
sub
insb
js
mov
xchg
add
mov
fs
iret
sbbb
cli
xchg
sub
mov
jl
dec
push
push
sub
xchg
out
add
jno
adc
dec
add
cmc
repz
pop
enter
cmc
xchg
jge
mov
mov
mov
sahf
enter
fnstenv
je
loop
xchg
stos
imul
shlb
push
jnp
mov
es
jle
pop
mov
mov
dec
cmc
fsubrl
repz
lock
push
mov
xchg
aas
push
xor
sbb
xchg
jb
rcrl
in
jg
imul
andl
mov
push
leave
mov
imul
ret
es
sbb
jo
jp
push
mov
pop
add
push
jo
cmp
sbbb
xor
lods
fwait
xor
fcomi
loope
lret
sbb
mov
inc
in
mov
lods
insl
or
pop
lahf
hlt
mov
mov
enter
rcr
lcall
cmp
subb
jbe
mov
scas
jge
test
jp
add
loope
mov
xor
test
shlb
in
mov
fsubrs
cwtl
mov
lret
cmp
sbb
xlat
scas
mov
in
bound
inc
xchg
and
shll
repz
mov
mov
xchg
jno
enter
pop
mov
xchg
adc
dec
sbb
idiv
ljmp
scas
sbbl
sbb
inc
dec
push
pusha
cmc
mov
push
jo
in
inc
ds
lds
xchg
or
sub
pop
test
mov
iret
mov
sbb
xchg
mov
push
orl
cli
lret
jl
cld
pop
sahf
sub
sub
inc
inc
dec
push
pushf
push
inc
std
je
enter
outsl
rorb
lods
inc
lds
push
call
pushl
lods
cld
jne
leave
stos
popa
cmp
mov
push
pop
add
insb
mov
push
ret
pop
push
xchg
mov
loopne
push
push
push
repnz
into
ret
cmp
data16
sbb
stc
ss
jge
repnz
fs
inc
mov
out
pop
add
andb
or
loopne
daa
leave
shl
or
shl
adc
and
adc
dec
inc
xchg
sub
imul
iret
jbe
push
scas
call
bound
xchg
push
and
test
sbb
jnp
inc
in
inc
lret
rcll
xor
jns
pop
mov
pop
jmp
lds
iret
insl
popa
push
les
js
aad
inc
pop
pop
cmc
int3
mov
ret
aas
leave
mov
je
jg
es
dec
adc
cmp
cmpsb
add
and
and
inc
cmp
stos
rolb
dec
xor
dec
lods
inc
push
inc
leave
js
into
lcall
adc
xchg
inc
mov
cmp
push
cmpl
mov
and
and
jbe
sub
aaa
pop
pop
test
sub
sub
mov
adc
sahf
jb
pop
test
test
popa
jns
scas
mov
inc
cmpsl
cmp
xchg
cmpsb
rorb
mov
stos
es
inc
pop
xchg
dec
sarb
in
push
sub
push
popf
sbb
test
mov
push
aas
aam
sub
pop
xor
test
mov
or
movsl
sub
pop
xchg
dec
jns
lahf
lret
mov
ret
pop
xchg
jecxz
dec
cltd
cmpsl
stos
aas
cld
ds
sbb
sbb
cmp
loope
sar
lret
add
ljmp
rolb
cmp
addr16
lods
cwtl
pop
and
inc
and
cwtl
mov
cltd
pop
and
mov
cmpsl
jmp
fsubr
cli
rclb
mov
inc
std
push
out
or
shrb
and
jne
icebp
sbb
xor
cli
nop
daa
sub
push
sub
repz
mov
push
pop
lock
sbb
das
or
fnsave
sbbb
cmpsb
push
jle
cmpsb
arpl
xor
mov
stos
loop
scas
cmp
loopne
scas
cmc
cmp
push
stos
scas
imul
aam
pop
fwait
cmp
fwait
mov
lods
and
imull
add
mov
fsubs
mov
and
pop
lods
out
and
or
std
push
idiv
test
lods
xor
mov
in
les
mulb
add
ss
jno
mov
lock
or
jnp
aaa
pusha
nop
das
pop
fldt
lds
outsl
dec
cwtl
adc
cs
out
cmp
mov
inc
adc
cld
pop
das
mov
lcall
and
xor
add
sbb
movsb
cmp
xchg
shr
leave
out
fstpl
jmp
sbb
iret
pop
push
and
inc
test
in
out
cld
pop
inc
outsl
loop
mov
inc
pop
adc
andb
cmp
cmp
inc
mov
jno
push
dec
xchg
cmpl
ds
mov
dec
cwtl
fwait
mov
test
jns
cmp
pop
lcall
inc
ljmp
insl
rorl
insb
popa
adc
dec
loop
mov
lea
imul
inc
fs
sbb
pusha
xor
fdivrp
or
stc
xor
adc
iret
addb
jno
cmp
pop
loope
pop
ret
inc
xlat
loopne
add
lods
in
mov
xchg
popa
adc
cld
dec
loope
imul
sbb
inc
push
cmp
mov
out
insb
cmovnp
and
int
ret
in
mov
sbb
sub
iret
pop
mov
lods
cs
scas
xor
test
jo
mov
jl
mov
cld
popf
test
dec
push
inc
fsubs
lock
inc
add
add
and
inc
xor
xchg
jb
imul
ss
mov
js
and
sub
das
pusha
mov
sbb
ja
imul
out
icebp
imul
add
jns
aaa
ret
ret
jmp
or
add
or
jl
xchg
or
jl
iret
push
scas
ja
add
adc
adc
mov
testl
and
sub
xor
std
inc
lahf
sub
pop
and
mov
xchg
inc
cs
iret
enter
xchg
jmp
mov
jecxz
jecxz
repnz
adc
int3
js
xchg
dec
lods
adc
mov
insb
dec
fidivs
adc
pusha
repnz
add
cmp
adc
cmp
scas
fwait
cli
mov
fldl
sub
mov
mov
jnp
pop
call
push
test
shl
aad
sub
xchg
dec
jmp
aam
rolb
gs
ljmp
jg
pop
mov
stos
mov
mov
aam
add
lds
dec
mov
rorb
sti
cltd
gs
repz
lret
pushf
test
jmp
in
inc
jp
movsb
and
out
jae
ljmp
das
lock
and
cltd
push
and
xchg
negl
imul
cld
push
mov
call
jg
inc
xchg
inc
push
dec
insb
fdiv
popf
outsl
fptan
xchg
mov
add
imul
inc
mov
stos
out
dec
pop
xor
das
cmp
push
in
sbb
jae,pt
push
call
push
in
pop
jno
dec
adc
mov
popa
sti
test
pop
cmp
dec
sbb
fidivrs
xor
sub
push
mov
mov
lods
popa
stos
cmpsb
cli
push
fcmovne
fbstp
cld
mov
cmp
push
int3
pop
or
movsl
mov
shll
pop
loop
xor
mov
mov
fildl
xor
sbb
aam
notl
aad
xor
arpl
xchg
mov
mov
push
loope
outsl
mov
jmp
pop
pop
int3
cmp
sbb
adcb
mov
jbe
pop
push
je
jb
push
movsb
cmpsl
arpl
xor
lds
cltd
into
dec
out
popa
sub
jnp
sbb
repnz
loope
add
cmp
pop
mov
push
dec
or
into
aam
jne
stos
lds
inc
mov
ja
push
imul
mov
ljmp
push
cmpsl
dec
imul
jp
jbe
sbb
xchg
xchg
xchg
push
xor
cmp
inc
outsb
add
stos
xchg
pop
loop
pushf
jl
dec
xchg
dec
xchg
int
mov
push
je
movsb
add
in
cmp
and
cmc
sbb
cmpsl
mov
mov
lock
pop
push
subb
pop
pusha
testl
jle
push
mov
mov
jmp
and
pop
jg
xchg
jl
mov
and
xchg
mov
hlt
shll
ret
arpl
ret
outsb
test
mov
int3
mov
stc
pop
mov
aam
fwait
add
nop
loop
leave
jle
push
jo
int
cli
cmp
fidivs
leave
jl
xor
fdivs
dec
movsl
sqrtps
out
ja
std
xor
push
push
add
xchg
aam
xor
adc
jbe
push
mov
push
je
addr16
push
lods
aaa
jecxz
lds
sbb
sbb
jnp
js
cmpsb
sub
pop
sub
push
push
ficomps
jle
sub
cli
mov
aam
subb
ja
shl
out
pusha
push
imul
push
xlat
dec
xchg
test
pop
popaw
xor
icebp
in
inc
sbb
shl
ja
mov
adc
je
xchg
test
mov
mov
and
outsb
cltd
and
fisubl
mov
scas
icebp
jl
in
push
mov
or
aam
repz
in
sti
lret
or
pop
xor
lret
test
mov
add
popf
add
mov
testb
hlt
adcl
pop
mov
aas
push
mov
sub
fbld
test
iret
lods
movsb
imul
arpl
int
mov
sbb
and
adc
jno
loop
fiaddl
ds
fsubr
test
dec
es
and
sbb
dec
repz
jl
cmp
sub
lret
ret
jnp
jb
imul
rorl
or
or
lods
ss
xchg
dec
add
push
fnstcw
repz
add
popl
movsb
and
fsubs
iret
sbb
cmpsb
jl
pop
pusha
sbb
in
cmp
jl
test
cmp
mov
cltd
sub
pop
mov
pop
adc
iret
pushf
dec
jge
ja
enter
inc
mov
pusha
xor
cli
scas
int
mov
jp
int
mov
or
lret
fisttps
loope
and
mov
out
jle
jae
pop
mov
mov
cmpsl
aaa
sbb
in
xchg
gs
mov
mov
cmp
popf
sub
mov
arpl
mov
movb
push
mov
push
in
mov
xchg
out
inc
add
inc
pop
ds
sbb
lods
scas
aam
das
xchg
int
inc
dec
add
jbe
and
push
and
and
push
cmpsb
sbb
notl
mov
inc
mov
bound
push
and
push
push
adc
mov
dec
fisttps
push
jno
popa
or
out
mov
inc
in
fldenv
and
dec
movsl
xchg
iret
leavew
add
je
xor
imul
int3
lret
mov
mov
xchg
push
out
mov
insl
mov
bound
pushf
loope
das
out
xor
mov
sbb
cmp
mov
xchg
call
fs
lret
mov
sub
mov
xor
nop
adc
fxch
mov
lods
and
ret
fildll
bound
pop
loop
lahf
xor
cmp
dec
inc
inc
sub
cli
mov
sbb
movsb
ret
into
jg
inc
sbb
mov
lcall
out
sub
xlat
add
sbb
mov
push
add
lods
cmc
mov
cmp
or
lds
out
nop
xor
pusha
and
fwait
nop
or
xor
sbb
or
adc
pop
cmp
xchg
cmp
jo
hlt
je
dec
push
dec
push
sbb
dec
sub
mov
leave
cwtl
shr
sbb
mov
push
shr
lds
loopne
add
jmp
and
loopne
ljmp
aas
jmp
jl
sub
add
cmp
xor
dec
inc
aaa
cmp
inc
das
dec
in
push
into
push
insl
pop
stc
sbb
mov
in
std
inc
mov
dec
in
mov
fsubl
mov
fcomps
cld
sbb
cs
mov
clc
lock
sub
popf
aad
int
insl
lret
mov
mov
add
jmp
jmp
mov
int3
and
jg
iret
data16
sbb
int
fldpi
pushf
out
imul
or
outsb
ljmpw
imul
lea
lods
jecxz
xor
pop
insb
fisttps
xchg
pop
xchg
dec
inc
mov
add
xchg
repz
pop
adc
popf
push
jno
add
pop
enter
into
adc
pop
lret
call
mov
nop
fisubs
or
add
enter
fldl2t
out
sbb
out
js
outsl
or
and
push
or
pop
add
addr16
stos
test
mov
and
jbe
adcb
adc
shll
rorl
sbb
loop
inc
pop
mov
adc
mov
mov
sub
jg
sub
ss
fs
or
xchg
jnp
aam
ja
cmc
jns
jge
into
cmp
sahf
arpl
cmpsl
mov
jle
repz
pop
sbb
cld
cmp
fcmovb
mov
inc
jb
pop
mov
jno
addr16
arpl
cmc
je
stos
mov
mov
pop
es
insb
xchg
and
lods
mov
mov
iret
shrl
add
test
mov
jae
adc
jl
int3
enter
sub
clc
movsb
popf
sbb
xchg
sub
je
sbb
in
out
xchg
dec
xor
hlt
clc
xchg
fwait
sti
sahf
mov
mov
mov
sti
adc
dec
lret
mov
hlt
dec
leave
outsb
inc
cwtl
sbb
repz
dec
aas
push
call
fildll
call
test
stc
xor
push
ror
lret
clc
ficoms
enter
jns
and
movlps
fnstenv
rep
stc
test
push
cwtl
xor
or
push
or
lcall
in
xor
sbb
mov
sbb
aam
stc
popf
mov
int
orl
mov
arpl
orl
mov
mov
pop
ret
mov
jae
add
stc
jno
movsl
xor
push
push
push
mov
cmpsb
cmp
jp
cmp
cmc
mov
incl
add
pop
cmp
sbb
adc
inc
shr
or
sub
mov
xchg
xor
or
sbb
scas
push
mov
sahf
sub
enter
or
jecxz
push
mov
mov
icebp
pop
out
ficoms
es
xchg
repnz
jle
loopne
jg
lret
sub
add
xor
icebp
sbb
mov
aad
push
lods
xor
dec
out
shll
or
lahf
ss
popf
sbb
pop
in
cmpsl
je
inc
sub
push
cld
cld
jecxz
stos
enter
fs
cmp
and
mov
xchg
push
in
and
mov
leave
leave
xchg
mov
ret
push
mov
aam
jno
xlat
mov
ljmp
push
movsb
push
cltd
adc
imul
in
aam
insb
cmpsb
pop
stos
xchg
cltd
scas
inc
test
fdivl
fcoms
and
addr16
sbb
push
out
pop
mov
add
jecxz
xchg
sbb
shll
cmp
dec
ret
aaa
cmpsb
sti
lcall
sarb
js
sbb
jg
test
mov
and
js
mov
mov
mov
add
or
mov
pop
movsl
out
fwait
mov
add
xchg
aas
jo
ds
add
fadd
add
mov
pop
out
adc
xor
mov
loope
mov
mov
negl
cltd
sbb
sbb
jg
dec
cwtl
mov
lcall
jp
xchg
aaa
nop
inc
scas
testb
xchg
in
jne
fcoml
mul
sub
inc
jnp
idivb
test
addr16
pop
cmp
out
xchg
bound
xchg
test
and
mov
ss
das
repnz
xchg
pop
mov
lock
imul
sub
inc
mov
pop
dec
inc
mov
jge
psubd
mov
mov
dec
xchg
movsl
mov
enter
cmp
out
aad
jo
pusha
mov
sbb
cmpl
inc
and
cmp
add
ret
jp
lret
test
mov
jno
xlat
add
or
lahf
add
cmpsb
pop
frstor
ds
arpl
stos
fwait
test
icebp
mov
sub
out
dec
dec
jnp
int
cmp
sbb
adc
insb
outsl
and
dec
cmp
cmp
cwtl
jno
mov
push
nop
mov
call
lea
cli
lea
mov
repnz
dec
adc
jns
pop
and
inc
addl
bound
cs
mov
xor
fnstenv
adc
ljmp
cs
push
and
or
int3
fiadds
fldenv
les
pop
or
xchg
jle
jmp
popa
xchg
and
xor
pushf
sti
sbb
mov
dec
xchg
sub
jp
and
hlt
adc
add
jmp
out
pop
or
mov
shlb
rcrl
cmp
mov
loop
push
xchg
inc
test
mov
out
in
pop
mov
inc
movsb
push
or
call
push
dec
sahf
icebp
cli
jno
sub
test
rcrl
or
imul
pop
adc
outsl
mov
stc
add
cmc
mov
adc
xchg
xchg
dec
sub
pop
loope
mov
notb
inc
sub
test
std
shrb
mov
xor
xchg
cmp
push
stc
dec
mov
outsb
add
enter
dec
dec
xchg
lret
jnp
and
repnz
stos
dec
stos
inc
inc
dec
pushf
and
lret
ja
std
test
and
test
dec
out
scas
push
sub
shlb
leave
pop
mov
nop
push
sbb
lahf
or
clc
dec
es
and
iret
jnp
push
dec
jo
mov
mov
dec
xchg
mov
pop
cli
push
sarb
shr
je
add
mov
filds
sbb
outsb
jmp
das
or
shlb
mov
mov
iret
jge
jge
scas
jb
pop
popa
loope
adc
jo
xchg
jge
cmp
lds
dec
or
test
xchg
dec
xor
dec
mov
enter
fcomip
jns
in
jae
jecxz
fisubrs
ljmp
add
js
xor
mov
dec
sub
lret
sbb
inc
cld
gs
xchg
mov
push
je
mov
push
inc
dec
or
loop
push
push
jae
sub
ds
gs
xlat
xchg
adc
lahf
sub
imul
cmc
sub
cmp
das
or
cmc
jge
scas
push
nop
dec
dec
inc
push
jmp
cmp
dec
pop
dec
jb
dec
shrb
out
mov
shrb
sbb
fwait
jge
lds
dec
sbb
push
outsl
push
adc
push
push
pop
das
test
popa
jp
push
pop
in
loopne
shr
icebp
mov
add
cmpsl
mov
insb
xchg
mov
mov
lret
and
or
sbb
repz
jbe
pushf
mov
dec
daa
and
test
push
sub
hlt
clc
rorb
jmp
mov
dec
and
lahf
push
add
fnsave
jns
cmp
imul
clc
lret
js
cltd
pop
mov
fs
es
in
xor
pop
es
sub
adc
inc
pop
andl
mov
or
movsb
jg
data16
jo
int
adc
push
push
repz
cmpsb
cmpsb
lock
mov
dec
data16
cwtl
jo
jo
mov
aas
pmulhw
sbb
dec
xchg
lods
mov
jno
inc
and
movl
dec
mov
repnz
fdivl
outsb
addr16
loop
cltd
cmp
inc
bound
pop
dec
cmp
mov
imul
imul
stos
jnp
push
lcall
sbb
or
sbb
test
lret
jb
jb
outsl
test
jb
imul
stc
nop
stos
dec
test
and
xor
test
enter
push
mov
call
add
leave
pop
negb
fists
lret
cld
out
mov
pop
repnz
cmpsl
sti
mov
sarl
sahf
push
mov
inc
xlat
inc
lock
fs
cmc
adc
mov
xchg
loope
addb
mov
mov
sahf
js
xlat
cmpsl
mov
fld
test
or
mov
jnp
stos
in
xor
pop
cmpsl
pop
cmpsb
mov
lcall
or
jle
or
push
leave
xchg
mov
pop
and
xor
xchg
jb
xchg
adc
je
fimull
adc
xor
adc
sahf
push
cmp
sahf
xor
push
in
repz
xchg
js
push
stos
jnp
xorl
lods
cmp
mov
fidivrl
lcall
loope
out
nop
aad
out
push
ds
loopne
or
ficoms
jns
jo
movsb
or
es
pop
hlt
cmc
rorb
lea
cmpsl
out
jge
fbstp
xchg
loope
ret
fnsave
stc
imul
clc
insl
aad
adc
loopne
sub
xor
shl
pop
mov
sub
fstl
sbb
inc
ficomps
sbb
ret
dec
fneni(8087
add
mov
out
out
jbe
add
aad
sbb
inc
push
cli
jo
and
add
int
pop
lods
cwtl
out
jl
sarl
idivb
jg
dec
inc
xlat
ds
jge
fninit
mov
loop
inc
fdivr
jmp
scas
loope
mov
outsl
int3
jg
add
repnz
pop
cmp
mov
push
add
cli
cmp
das
sbbb
or
icebp
js
fs
sub
mov
in
xchg
fs
sbb
stos
mov
push
mov
inc
fidivrl
out
adc
cmp
xchg
in
mov
and
cmp
pop
orb
dec
loope
das
cmp
xchg
addr16
lds
cmp
out
sub
shrb
fbstp
icebp
xchg
mov
imul
push
insb
idivl
or
push
add
test
mov
cmp
fldt
push
out
xor
mov
adc
loope
xor
add
dec
mov
pop
mov
sub
mov
inc
in
mov
cmp
dec
in
pop
xchg
idivl
repz
inc
ljmp
out
add
je
pop
inc
dec
cmc
aaa
daa
pop
xchg
pop
or
ss
sbb
jbe
mov
fdivl
pop
popa
scas
call
or
mov
sub
je
sbb
add
aas
xor
cli
rorb
sbbl
sub
jp
mov
sbb
mov
adc
inc
sbb
test
mov
andl
mov
inc
ss
fcomps
insb
or
jle
cmp
cwtl
rcl
dec
pop
adc
ds
in
mov
test
jecxz
clc
shrd
xor
dec
inc
sahf
lcall
cmp
inc
bound
daa
mov
dec
out
adc
mov
pop
stos
inc
dec
add
pusha
push
push
xchg
mov
and
mov
push
pop
sbb
push
iret
data16
jns
dec
add
xchg
xor
pop
arpl
jbe
pop
xchg
adc
test
jae
inc
cmp
mov
ret
mov
pop
popf
xor
out
es
jle
sbb
out
dec
mov
xchg
fcom
aaa
jbe
mov
inc
call
fsts
mov
jmp
enter
lcall
jp
or
and
fsubr
std
or
jo
imul
lahf
jo
xor
mov
pop
repnz
inc
adc
cwtl
je
aam
push
jno
lods
test
mov
pop
add
aam
mov
push
test
popa
mov
xor
test
cmpsl
xor
inc
sbb
pop
pop
out
mov
pop
lahf
mov
aaa
or
ret
inc
lods
hlt
cmp
dec
mov
xchg
mov
add
sbb
or
xor
mov
sbb
mov
movsl
in
dec
sbb
add
cmovo
xor
in
mov
ss
cwtl
stos
jnp
mov
cltd
inc
mull
sub
insl
mov
fisttpl
or
std
add
push
mov
sub
cwtl
shlb
or
in
xchg
pop
incb
testb
fstpl
xor
outsl
mov
mov
add
push
in
sub
push
cltd
jg
test
mov
xor
loope
pop
xchg
clc
jge
inc
std
mov
cs
mov
pop
dec
inc
out
loope
adc
data16
stos
inc
and
mov
fnstenv
mov
enter
xchg
inc
test
mov
sti
mov
push
sub
dec
rol
push
imul
insb
dec
loope
sub
sub
es
sub
es
je
ja
xchg
test
aaa
into
fisttpll
int3
ss
or
mov
enter
outsl
mov
xchg
jle
sub
inc
sbb
loopne
arpl
inc
ja
cli
push
imul
and
mov
xchg
test
push
inc
out
xchg
cmp
dec
cmp
test
shlb
jp
mov
lds
and
or
ret
cmp
pop
xchg
lods
or
jl
mov
mov
popf
cld
xchg
xchg
clc
add
mov
cmp
push
mov
pushf
push
sub
pop
lock
sti
pusha
fldenv
mov
mov
sub
mov
push
es
mov
sub
out
outsb
aad
push
scas
xchg
test
in
repnz
test
cmp
lret
pop
in
das
lret
sbb
mov
rcll
push
mov
mov
imul
inc
mov
icebp
repz
sub
sbb
mov
in
popf
or
out
push
subl
dec
arpl
notl
adc
xor
push
mov
outsl
push
lock
test
pop
pop
insl
mov
test
shlb
xor
dec
and
in
stc
jp,pn
push
jo
mov
jno
push
mov
movsb
pop
or
dec
dec
loop
cmp
test
xlat
enter
mov
stos
sti
sbb
sub
jo
xor
mov
nop
addr16
push
push
ret
jnp
cli
rcl
js
cs
sub
dec
adc
test
pop
dec
xor
cld
and
aad
cmp
sub
dec
dec
dec
cmp
push
lds
xor
imul
mov
rcrb
enter
mov
popf
mov
mov
jns
inc
rol
test
in
lods
repnz
xchg
sub
repz
outsb
mov
loopne
push
lahf
enter
fdivr
adc
sub
cmp
jecxz
pop
jecxz
jg
mov
in
push
pop
mov
subl
movsb
shlb
or
int3
cmpsb
das
pop
call
arpl
jmp
mov
push
and
mov
outsb
dec
push
lods
sub
mov
iret
testl
mov
loopne
cld
ror
xchg
aas
inc
cmpsl
in
les
clc
jnp
cmp
push
pop
pop
mov
jecxz
shl
mov
mov
imul
xchg
test
xor
je
addr16
push
adc
aas
icebp
je
ljmp
inc
out
imul
dec
fidivrl
or
fisubs
lret
pop
mov
mov
inc
pop
orl
add
xor
xor
aam
dec
ret
int3
cld
hlt
dec
pop
clc
cmp
in
xchg
mov
xor
jmp
insl
test
aaa
fsts
sbbl
clc
or
cmp
add
xchg
int
dec
adc
and
pushf
clc
lcall
leave
gs
mov
pusha
test
rclb
sub
stos
xor
fmull
push
fimull
out
test
sbb
lods
outsb
jnp
xor
outsl
aaa
fldz
adc
sbb
data16
sub
xchg
out
in
nop
mov
lret
inc
lods
fidivrs
xchg
push
jo
mov
sbb
jp
mov
pop
mov
fists
mov
das
lods
enter
dec
bound
pop
cmc
mov
mov
inc
sub
testl
inc
rcll
lret
bound
mov
cmp
sti
je
scas
xor
mov
bound
fisttpl
and
stc
insl
and
mov
jns
sub
mov
xchg
fdivrs
faddl
testb
into
or
pop
xchg
push
add
add
inc
pop
push
adc
fsubs
sbb
mov
negl
push
push
inc
fcompl
mov
jl
fcoms
xor
add
jl
jne
mov
repz
mov
ljmp
aaa
das
aas
into
mov
stos
mov
packssdw
jecxz
adc
cmpsl
call
xchg
pop
outsb
dec
lcall
daa
jns
inc
fistl
and
xchg
sub
bt
gs
ret
dec
push
fwait
scas
fcmove
int3
xor
add
test
xchg
cmp
and
out
or
js
fs
mov
shrb
pop
adc
pop
data16
mov
xchg
adc
std
xor
pop
cwtl
xor
dec
lds
jbe
lds
jae
xchg
stos
cmp
mov
mov
lds
je
enter
sbb
or
leave
bound
or
aam
add
push
pop
mov
insl
ja
adc
movsl
cmp
xchg
lcall
add
xor
jae
hlt
mov
subb
aad
lods
inc
push
out
test
daa
out
sbb
xor
dec
fwait
mov
dec
pop
iret
mov
mov
lods
inc
push
pop
jge
lods
mov
xor
arpl
pop
pop
jecxz
and
and
mov
mov
pop
mov
dec
inc
or
sub
arpl
aad
in
aas
shlb
adc
adc
in
scas
call
push
fildl
xchg
push
lds
loope
in
xlat
xchg
cs
shrl
outsl
out
jge
xchg
sahf
lods
divl
mov
out
je
jp
dec
pop
ds
push
jo
sbb
or
adc
scas
push
sub
aaa
inc
bound
xor
or
mov
cmp
nop
test
xor
pop
data16
or
and
and
push
push
mov
mov
or
loope
hlt
adc
les
aas
mov
in
jb
and
xchg
mov
in
scas
sbb
pop
dec
xlat
pop
push
imul
lret
sbb
xor
loope
shl
pop
call
ss
scas
inc
into
jb
fstl
ja
sub
inc
mov
xor
insb
mov
mov
loop
test
dec
mov
push
and
sub
and
fs
adc
cmp
jle
cmp
hlt
inc
pop
test
nop
add
aaa
jge
in
xor
cmp
pop
rclb
cmp
cwtl
and
cmpsl
test
jl
test
and
push
repnz
stc
xlat
mov
xchg
adc
data16
cwtl
pop
pop
addr16
add
or
out
inc
mov
push
ret
or
test
mov
add
push
je
xchg
adc
fcmovbe
lock
rorl
mov
push
imul
lock
sub
ljmp
push
cwtl
aad
mov
cmp
cmc
mov
add
jo
pop
or
fiadds
dec
sbb
ffree
jns
cmpsl
leave
fs
mov
mov
xchg
mov
test
mov
and
iret
sbb
xor
arpl
stos
pushf
jns
movsl
test
or
mov
fs
loope
jnp
jbe
mov
add
nop
mov
or
cli
aad
je
fisubl
inc
mov
daa
std
mov
adc
imul
scas
inc
mov
fmul
pop
dec
sub
stos
pop
iret
gs
call
or
sub
out
push
jno
mov
add
xlat
ret
and
jne
dec
xchg
popa
fisttpll
js
hlt
mov
test
lods
adc
dec
inc
leave
out
xchg
jo
mov
aad
or
lds
sub
incl
xor
addr16
sbb
sbbl
xchg
mov
lcall
mov
in
int3
xchg
push
repnz
or
inc
dec
jnp
rorb
mov
fcoms
pop
dec
sub
push
pusha
or
jne
mov
test
repz
sbb
or
addr16
mov
jg
lret
jns
adc
aam
out
out
in
sahf
jnp
popa
mov
and
fists
jne
jg
jbe
or
stos
es
lret
ss
lea
cltd
cmpsl
pop
or
push
test
mov
mov
aas
xlat
mov
dec
xor
mov
popa
and
sti
bound
out
jb
cld
mov
inc
leave
ror
and
adc
aaa
jb
test
mov
fcoms
jb
jbe
lds
and
pop
sti
mov
lcall
add
mov
xchg
iret
mov
mov
push
xchg
jl
adc
int
fists
jae
mov
nop
mov
rcl
repz
sub
sbb
sbb
les
mov
insl
sbb
mov
or
nop
jo
cltd
lock
adc
repnz
adc
int3
out
add
push
enter
push
jmp
add
daa
pop
je
aas
adc
in
push
adc
add
mov
and
jp
dec
dec
cmp
cltd
repz
dec
push
adc
dec
sti
aaa
les
lods
push
xor
lea
xchg
rorl
ss
dec
stos
jp
imul
test
insl
loopne
cmp
mov
inc
loopne
jge
pop
add
push
cmp
test
les
fildl
outsb
add
cmpb
pushf
mov
sbb
xchg
sub
mov
fsubl
push
jecxz
mov
out
sbb
dec
enter
sbb
xchg
or
jl
dec
movsb
jecxz
xor
lcall
sahf
ss
sub
sbb
mov
cmpsb
xchg
out
rcrb
mov
xchg
in
cmp
xor
int3
out
push
in
add
push
jo
lds
mov
in
incb
jo
dec
push
pop
jne
inc
sub
jg
and
push
xchg
lcall
add
xchg
repnz
pop
fs
push
adc
icebp
daa
sub
pop
adc
pop
xchg
dec
aaa
sbb
add
lock
lods
jecxz
sub
imul
imul
sahf
jnp
and
outsl
dec
and
dec
xchg
pop
out
aas
add
xlat
xchg
fwait
push
adc
sahf
nop
or
adc
aas
push
push
stos
adc
ljmp
call
inc
es
mov
or
mov
inc
mov
sbb
xchg
flds
gs
sahf
scas
ss
push
js
imul
ficomps
cs
add
icebp
ret
and
cmp
and
out
jo
push
mov
enter
add
mov
xor
jmp
adcb
loope
sbb
mov
jae
cmp
lcall
sbb
mov
jae
or
cli
insl
add
pop
je
and
mov
xchg
mov
dec
mov
and
adc
insb
sub
sub
add
cmc
sahf
jne
dec
lock
push
out
pop
andb
xchg
add
cld
mov
ds
lds
sti
into
pop
aad
fiaddl
jp
out
inc
push
stos
sbb
stos
fs
ret
pop
mov
arpl
sbb
sbb
jp
mov
in
lret
test
out
or
sub
and
or
mov
pop
push
cmovnp
mov
iret
gs
or
gs
cmp
inc
sub
mov
mov
std
xchg
push
hlt
push
xor
xchg
cmp
inc
push
mov
insl
in
sbb
rolb
push
jmp
aad
hlt
pop
push
ds
addr16
pop
dec
pop
shlb
mov
jg
out
icebp
push
lahf
inc
hlt
in
jae
call
pop
adc
repnz
aas
pop
test
inc
mov
test
inc
mov
ficoml
dec
clc
adc
addr16
sbb
je
sub
add
sbb
pop
push
xor
or
sub
jg
lret
push
push
jl
push
jbe
push
int3
hlt
fs
mov
cmp
test
inc
pop
inc
mov
call
push
mov
xor
out
cmpsb
js
decb
push
mov
mov
pop
inc
lret
mov
das
add
push
cmp
cwtl
jae
cwtl
repnz
sub
hlt
push
mov
js
sub
subb
fdivrs
push
test
mov
cmpsl
push
test
and
mov
mov
fwait
dec
aaa
sbb
mov
jmp
out
sbb
testb
xor
ja
insb
fists
push
or
cld
rcrl
pop
lret
imul
lret
cs
rol
xor
sbb
xchg
mov
jo
lods
jne
pop
add
pop
test
mov
xchg
sub
pop
les
fldt
enter
mov
imul
ja
mov
out
rorb
add
lock
xchg
inc
aaa
cmp
outsb
aad
push
std
fcompl
or
ja
fsts
lds
push
mov
adc
fsubr
sub
jns
in
in
sbbb
sub
inc
pop
ret
mov
dec
add
jge
lahf
scas
out
cwtl
pop
clc
stos
jb
push
push
daa
jp
cmp
inc
scas
std
pop
mov
setno
popf
push
rcrl
mov
or
push
lcall
cmp
mov
loopne
sub
std
icebp
int3
scas
fimuls
fdivrl
sub
repz
aad
jns
mov
loopne
cmc
in
out
fldt
xor
int3
loopne
sti
xchg
mov
lret
ret
mov
std
lods
or
mov
or
mov
sub
mov
jnp
mov
and
dec
add
inc
push
and
push
loop
out
jnp
adc
out
cmp
sbb
mov
pushf
sub
iret
xchg
data16
add
scas
repnz
std
cmp
fisttps
lahf
mov
adc
or
pop
pop
jge
dec
and
push
test
jl
add
je
xchg
dec
rcrb
or
ljmp
jecxz
fiaddl
jp
out
adc
and
in
adc
insb
jle
xchg
xchg
shll
imul
hlt
data16
sub
mov
aam
roll
push
fidivs
ljmp
sub
pop
out
imul
push
lock
push
adc
sbb
cmp
scas
sahf
mov
cmp
daa
adc
sahf
xor
or
inc
inc
imul
fsub
scas
and
push
jo
and
jp
jmp
lahf
jb
fcompl
mov
arpl
rcll
lods
lret
fadds
sbbb
cwtl
pop
aas
add
cwtl
dec
push
sbbb
pop
sub
in
dec
cltd
add
rcrl
imul
sbb
test
movsb
pop
out
add
in
inc
iret
dec
movsb
mov
in
sti
xchg
fsub
push
call
sbb
outsl
cmpl
xor
pop
add
bound
dec
jno
jmp
mov
add
adc
xorb
das
mov
fidivs
xchg
in
stos
ret
rcll
mov
mov
fisttps
addb
shrb
cs
or
hlt
jno
loop
daa
cmpsl
pop
test
imul
mov
ret
sti
jb
inc
inc
jp
out
fsts
adc
mov
mov
xor
adc
pop
aas
test
mov
jl
test
aas
lods
adc
pop
clc
aas
or
outsb
lahf
push
push
and
xor
dec
push
cwtl
insl
pshufw
push
dec
addr16
push
daa
mov
ret
test
cmp
popa
sbbb
xchg
mov
imul
adc
jp
push
mov
xor
pop
pop
cmpsb
sbb
xchg
dec
enter
sub
test
or
adc
test
cwtl
jecxz
jecxz
lock
and
test
mov
das
or
add
xor
loop
jp
mov
imul
addb
mov
adc
sbbb
sbbb
sbb
imul
lahf
cmpsb
out
jbe
mov
out
xor
or
xchg
sti
es
push
xor
into
arpl
fldl2e
push
mov
mov
adc
insl
ja
js
mov
aas
dec
sub
cmp
pop
mov
pop
cmp
adc
outsl
das
cmp
pusha
adc
lock
repnz
ja
or
adc
movsb
aaa
int
inc
jbe
sub
jo
adc
and
and
sub
in
pusha
repz
add
mov
mov
icebp
push
iret
mov
pop
mov
lods
pop
sbb
and
xchg
push
lods
jge
loop
adc
or
inc
inc
loopne
fdivl
popa
fsubr
jbe
test
xchg
jbe
add
ret
jne
call
aam
pusha
sbb
jmp
ja
xchg
not
cwtl
or
sub
mov
jo
fsubr
std
pushf
aaa
jbe
cli
sub
sub
dec
mov
data16
push
mov
loopne
pop
not
subb
test
inc
std
fidivs
dec
bound
and
movsl
cmp
xchg
frstor
xlat
cmpb
sbb
pop
dec
cmpsb
inc
fst
imul
xor
mov
into
or
push
movsb
bound
push
outsl
maskmovq
divl
int
cs
adc
arpl
inc
ss
pop
out
fs
xor
mov
mov
sub
mov
adc
stc
pop
movswl
iret
jno
or
andl
xchg
in
sub
mov
movsl
cmp
push
test
push
clc
jle
pop
mov
push
shll
inc
xor
or
test
pop
stos
popl
mov
mov
cmpsl
popf
daa
cmp
fidivs
sarl
sahf
mov
dec
sbb
and
into
xchg
andb
mov
jne
popa
sub
js
imul
push
xor
in
mov
arpl
je
mulb
fistl
hlt
mov
scas
aaa
stc
push
push
cmpl
in
pop
repz
daa
mov
out
bound
inc
cli
cmp
mov
push
scas
enter
mov
rcrb
push
jg
lea
xchg
loop
cmp
inc
cltd
std
ja
ret
pop
mov
fsub
sub
mov
mov
xchg
inc
aad
and
add
movsb
lahf
jecxz
push
lcall
sub
mov
push
in
pop
inc
adc
jle
mov
pop
cltd
sbb
push
int3
mov
push
in
inc
notb
jecxz
int3
xor
shll
lods
mov
in
pusha
add
xchg
sti
xchg
pop
les
push
add
dec
push
dec
fs
jbe
add
std
cltd
jno
cmp
sbb
mov
jge
int
mov
arpl
xor
test
or
xlat
cli
jne
fs
pop
int
test
stos
pop
sbb
xor
pusha
lret
fcoms
or
call
adc
or
lret
cld
cmpsl
insl
aad
das
ljmp
push
in
xchg
pop
adc
jae
inc
pop
in
aad
dec
cmp
loopne
call
mov
dec
out
test
nop
fdivs
ss
repz
leave
pop
push
addb
call
int
ret
test
adc
inc
inc
mov
lock
aaa
pop
mov
sub
test
push
sbb
xchg
jge
mov
cmp
aam
jno
nop
xchg
out
mov
sbb
or
mov
or
test
out
mov
pop
adc
test
sbbb
dec
sbb
call
push
push
sbb
mov
mov
lret
and
ret
notb
pop
mov
js
or
xlat
push
jns
add
cmpsl
imul
mov
scas
imul
aam
gs
popa
iret
jo
sub
das
imulb
pop
push
clc
int3
xor
push
lahf
mov
push
in
ret
int3
aad
sbb
add
jnp
icebp
subl
into
jae
mov
jae
sbb
cmp
sbb
fwait
dec
das
dec
mov
sahf
cmp
scas
mov
lret
jg
shl
movsl
sub
outsb
mov
scas
dec
push
push
mov
cmpsb
cmp
testb
addl
pusha
add
dec
in
cmpsb
iret
adcb
cmp
add
xchg
adc
pop
imul
ja,pn
sahf
pop
dec
decb
aaa
mov
into
scas
pop
clc
inc
mov
ja
xchg
fsubr
les
cmovb
mov
add
in
jp
inc
adc
sub
int
cld
hlt
adc
mov
popa
movsb
movb
dec
push
cmc
xlat
cwtl
in
cwtl
dec
xchg
inc
adc
enter
fdivs
pop
call
xor
mov
pop
stc
mov
cwtl
inc
lods
inc
jno
cmpsl
xor
fsts
hlt
arpl
lods
arpl
daa
mull
dec
iret
fstpt
push
push
inc
mov
repz
or
addr16
jle
xchg
lods
int3
in
add
sub
repz
fldt
popf
lods
scas
xchg
mov
mov
lods
gs
xchg
outsb
mov
inc
cmpsl
dec
gs
pop
push
pop
sub
pop
mov
mov
nop
adc
add
scas
int3
push
subb
fwait
or
mov
xchg
int3
outsl
adc
mov
js
psrlq
mov
jne
scas
cwtl
cmpsb
push
lea
dec
cmp
mov
aad
mov
pop
outsl
pop
vpmacssdqh
mov
js
repz
outsb
leave
fucomip
mov
lods
cmpsl
lock
das
loope
decb
in
cwtl
out
mov
je
fs
jp
or
xlat
pop
cld
mov
xchg
add
push
mov
scas
ret
lock
fisttpll
dec
fidivs
movsl
push
pop
fidivl
addr16
or
or
mov
in
das
ljmp
iret
sub
mov
aam
mov
xor
jae
outsl
jge
out
dec
arpl
add
add
insb
or
sub
out
dec
sub
add
xchg
xlat
jae
mov
push
mov
cmp
dec
aam
scas
test
mov
int
lea
lret
cld
xlat
xchg
push
mov
rcrb
dec
cmp
dec
dec
pop
outsb
mov
pop
sub
les
pop
outsl
jne
add
mov
ja
lods
test
insb
in
jle
or
cs
pop
orb
ss
arpl
mov
sahf
ja
xchg
sbb
loope
xchg
shr
ja
rolb
mov
aaa
jbe
inc
test
in
movsl
leave
xor
insl
aaa
inc
inc
out
xchg
in
icebp
ret
out
jmp
adc
inc
mov
push
es
push
in
sbb
cwtl
lcall
xchg
sbb
adc
cmp
push
inc
hlt
pop
rcrl
sarb
das
xchg
xor
xor
xchg
aam
dec
movsl
inc
ret
and
inc
xchg
dec
and
iret
fsubr
xor
push
jb
sub
dec
push
fimull
and
adc
and
ljmp
mov
adc
mov
push
fstps
jbe
aas
or
outsl
or
pcmpeqw
cwtl
mov
or
aas
stos
inc
dec
cltd
cld
cmp
mov
cld
fldl
jnp
fildll
inc
mov
add
scas
inc
dec
add
cltd
xor
inc
test
orb
pop
cwtl
xor
mov
test
rcl
push
imul
push
std
pop
cmpsl
in
mov
jns
pusha
sbb
mov
outsb
mov
pop
pop
fcoms
sub
and
mov
inc
rcrb
inc
fwait
push
mov
adc
pop
mov
pop
jmp
xchg
daa
cmc
mov
in
inc
fnstenv
out
lods
inc
adc
dec
mov
call
xlat
jge
ror
mov
jae
in
sub
push
sub
inc
mov
xchg
adc
mul
add
and
mov
int3
ret
frstor
xchg
push
ss
xchg
subl
inc
push
test
cmpsb
loopne
mov
jbe
inc
pop
call
hlt
xor
jge,pn
pop
fistpl
or
dec
sbbl
jno
pusha
fistl
cmp
andl
imul
add
fdivs
inc
ror
mov
mov
insl
lret
mov
js
insl
jno
adc
lods
fwait
popa
push
add
or
jo,pn
fmul
xor
imul
mov
sub
int3
push
mov
dec
jmp
and
das
cmp
or
shll
inc
sub
xor
fisttps
fcompl
cs
mov
negb
push
stc
ss
jmp
lret
enter
negl
loope
ret
dec
clc
cli
jbe
ljmp
push
xorl
xchg
pop
and
sub
hlt
pop
add
imul
iret
outsb
loopne
shlb
jb
xchg
mov
jl
or
shlb
or
js
sub
inc
mov
mov
pop
mov
in
in
xor
jle
call
je
mov
fsub
dec
orb
pushf
or
mov
test
icebp
cmp
mov
gs
pop
xchg
cltd
jnp
inc
mov
pop
imul
and
nop
pop
jp
lds
lods
inc
inc
inc
jp
inc
bound
xor
cmp
js
sahf
fadd
pop
push
mov
loope
jno
jl
push
xchg
jle
pushf
das
xchg
adc
mov
add
pop
leave
shll
imull
sub
out
pusha
ljmp
mov
je
mov
arpl
push
pop
mov
and
sub
jae
mov
adc
movsb
adcb
fmul
add
sbb
jo
jb
push
shrb
jmp
subb
test
xchg
xchg
inc
daa
lods
add
sbb
aas
jge
xchg
mov
jns
test
movsb
hlt
mov
data16
stc
leave
nop
idiv
cwtl
cmp
sti
jae
es
into
cmp
outsb
sub
int
mov
cs
ret
cmp
pop
rorb
lahf
enter
js
push
push
jnp
int3
out
xor
dec
out
sarl
popf
mov
js
mov
cmpb
repnz
mov
ds
hlt
movsl
push
mov
test
cltd
sbb
pop
pop
add
roll
push
bound
mov
or
xchg
pop
cmpsb
fs
imul
pusha
adc
push
ret
cs
pop
flds
dec
loope
mov
mov
inc
icebp
stos
hlt
ror
lds
push
jne
in
test
stos
les
mov
imul
outsb
push
mov
or
pop
cld
in
jmp
xor
jno
stos
dec
jne
pushf
and
lcall
push
repz
stos
xchg
push
or
mov
xorl
mov
in
leave
and
or
pop
mov
mov
sub
jecxz
out
adc
int
add
mov
and
outsb
test
dec
mov
inc
add
inc
in
sti
inc
ficoml
sub
in
adcl
popa
mov
cmp
icebp
pop
xchg
cmp
add
jbe
lock
stc
sbb
cli
add
sarb
je
dec
andb
fcompl
imul
mov
fcmovnu
sbb
sbb
push
push
lods
test
fcoms
pusha
lock
dec
je
sahf
xchg
mov
xor
int
and
xor
sbbl
in
iret
mov
mov
or
jmp
add
jmp
sbb
cmp
xor
add
xchg
ljmp
xor
aam
adc
insb
and
add
mov
push
xor
add
cmp
divl
adc
sti
and
lods
sub
fcompl
cs
out
lods
outsb
sub
xor
push
gs
cmp
mov
ficomps
adc
mov
les
or
and
scas
out
cmpsb
ja
into
js
add
xchg
insl
xchg
push
insb
fbstp
hlt
push
xor
aad
pop
push
lods
leave
fstpt
add
inc
pop
ljmp
push
outsl
sub
inc
scas
push
xchg
lds
js
cwtl
xor
popf
or
pop
int
lea
ret
popa
jl
pop
dec
stos
movsl
sub
cmp
or
out
push
das
addr16
out
dec
std
pop
mov
sub
adc
div
popa
add
enter
in
xchg
loopne
pop
dec
mov
repz
bound
jmp
adc
jle
push
push
xor
cmpl
nop
xchg
push
icebp
decb
aad
or
push
popf
mov
outsl
movsl
sbbb
jmp
sub
cmpsb
xchg
pop
inc
idivl
rcll
mov
hlt
hlt
mov
testb
jg
mov
xchg
dec
call
mov
push
fcom
sbb
int3
negl
add
or
pop
add
insb
insb
pop
idivb
scas
fnsetpm(287
sub
call
loope
jo
or
jle
push
or
inc
cli
sub
push
repnz
jbe
in
std
test
inc
xor
loope
mov
push
popa
clc
xchg
lds
sub
ljmp
rolb
sbb
mov
mov
ja
sub
sbb
push
gs
jae
shrb
add
push
jae
xor
inc
mov
dec
in
jnp
mov
mov
test
je
cmp
stos
mov
lock
add
dec
and
insl
push
mov
xlat
hlt
mov
mov
cmpsl
dec
add
mov
mov
or
jne
mov
jmp
ss
jp
jae
sahf
gs
xchg
cwtl
xor
cmp
popf
mov
fimull
pop
jae
jb
xor
hlt
inc
mov
adc
scas
push
pop
push
add
popf
cmp
adc
push
sub
les
es
test
rcrl
mov
pop
inc
inc
pop
dec
cmp
repz
cld
or
jle
ljmp
divl
cmpsb
icebp
fsubr
je
pop
call
dec
aaa
jo
push
mov
adc
test
jne
les
sbb
enter
or
mov
pop
vcvtps2dq
arpl
lahf
mov
leave
inc
pop
or
arpl
adc
ja
enter
rep
mov
cltd
push
xchg
repz
decb
inc
jge
in
ss
imul
cmpl
cmc
cmpsl
subb
adc
and
mov
lea
mov
cmpb
mov
repnz
das
pop
pop
loopne
jns
adcb
lahf
jns
inc
cmp
shl
pop
outsb
inc
adc
pop
test
cld
outsl
stos
pop
lahf
pushf
mov
loopne
mov
sub
lea
nop
mov
and
sti
rol
push
dec
cld
icebp
andl
mov
fs
pop
sub
jmp
or
mov
mov
ficompl
iret
test
lock
mov
int3
nop
mov
or
insb
dec
ljmp
add
mov
je
ret
lods
imul
data16
sbb
mov
addr16
fdivl
mov
jmp
pop
add
les
enter
mov
dec
jae
aas
mov
inc
call
push
add
add
pop
pop
and
cmp
push
icebp
movsb
pushf
dec
out
movsl
or
sahf
mov
insl
aaa
dec
je
out
dec
pushf
adc
jmp
fstpt
iret
int3
xor
shrl
aas
add
sub
and
in
mov
xchg
or
or
mov
scas
inc
testb
incl
and
lods
pop
sub
aas
xor
mov
inc
push
pop
xchg
xor
repnz
cltd
xchg
lret
outsl
push
dec
movsb
sti
dec
fldt
cmp
imul
mov
xlat
fdivrs
mov
jmp
std
xchg
push
insl
jg
mov
adc
jp
mov
ljmp
jecxz
lret
fnstsw
sub
into
faddl
dec
icebp
pop
addb
xor
test
and
ss
fsubl
lds
std
jl
int
lret
inc
xor
push
negb
push
out
xor
cmp
lea
les
xchg
daa
repz
pop
ljmp
push
sub
mov
xor
call
int
outsb
std
pop
cs
sbb
and
jne
in
dec
sbb
aas
mov
jmp
xor
cli
push
aad
inc
mov
test
in
fstl
push
enter
pop
nop
pop
imul
popf
cmp
scas
push
cmp
ljmp
jnp
in
cwtl
test
cmp
jae
mov
inc
add
push
jno
push
xchg
out
mov
loopne
test
push
sbb
sbb
inc
push
push
out
xchg
je
sub
mov
fs
test
push
pop
push
jmp
in
pop
jo
pop
xor
lahf
gs
pushf
bound
xor
pop
jo
xchg
fstps
sbb
jmp
xchg
mov
mov
mov
sbb
sbb
addr16
mov
rcrl
or
stc
add
xor
lahf
stos
cld
lods
outsl
outsb
dec
es
lea
lea
adc
in
jb
or
int
rolb
repz
and
aas
mov
out
stos
outsb
fists
jbe
lods
subb
xchg
addr16
out
xchg
in
lret
bound
and
push
mov
mov
jb
outsb
nop
dec
dec
test
scas
mov
push
aas
pop
ret
sbbb
stos
in
mov
lea
daa
movsl
push
push
mov
leave
and
inc
jecxz
adc
mov
push
adc
scas
test
ret
sub
push
push
lods
push
jecxz
xor
cmp
popa
and
lret
sbb
scas
mov
scas
cld
iret
pop
into
pop
repz
jge
inc
scas
sbb
repnz
jge
cs
cld
push
or
inc
repz
mov
cli
into
fcmovnu
sbb
shlb
pusha
sub
test
sbb
loopne
xor
das
adc
lds
xchg
mov
lcall
jno
and
push
push
add
mov
sti
popa
lahf
fadds
xchg
data16
push
xor
fdivrl
repz
add
xchg
std
jmp
into
divl
ljmp
rorl
mov
addr16
sub
jae
notl
adc
in
inc
daa
dec
cwtl
and
inc
sbb
jo
lock
arpl
into
xor
mov
cmpsb
inc
aam
push
fwait
cmp
jg
aam
pop
add
or
cli
scas
movsb
stos
mov
add
mov
insb
add
popf
lds
insb
sbbl
pop
mov
and
cmp
je
inc
out
popf
mov
arpl
mov
cmpsb
imul
sbb
adc
or
cmpsb
pop
pusha
js
dec
jge
jg
sbb
xchg
dec
fwait
ss
cmp
push
mov
mov
loopne
and
iret
mov
icebp
sub
sbb
cmp
xchg
jbe
std
push
xor
fcomp
inc
pusha
lret
dec
out
or
movd
test
xchg
inc
ds
push
fs
fisubrs
lret
pop
das
int3
scas
inc
mov
loopne
or
hlt
jmp
lock
lret
and
test
sbb
mov
insl
imul
inc
cs
pop
jmp
dec
out
xor
mov
sahf
inc
and
fdivr
mov
adc
push
clc
popl
jle
lock
and
pop
and
jg
jb
test
js
inc
ljmp
sarb
mov
mov
push
mov
inc
movl
cmc
scas
and
mov
into
jle
je
or
sahf
lret
and
out
aaa
bound
sbb
pop
jbe
bndstx
rcrl
or
mov
push
xchg
mov
jle
inc
imul
pop
aas
cltd
xchg
hlt
inc
dec
loope
mov
test
es
addr16
cwtl
sbb
dec
lock
sbb
rcl
sub
dec
fimull
dec
mov
jl
aam
shll
lea
add
cs
and
ljmp
inc
repnz
ret
loopne
xchg
std
dec
loop
ss
xlat
in
inc
sbb
cld
fnsave
dec
push
mov
clc
xchg
sub
sbb
jl
imul
cmc
int
filds
mov
in
test
pop
cmc
inc
loope
fidivrs
adc
sub
xor
lods
push
les
fnstenv
add
push
outsb
mulps
lods
and
adc
scas
lea
ja
pop
scas
jb
mov
ja
fmulp
cld
addr16
jae
xchg
aas
fnstenv
ds
das
addr16
cmp
js
test
jl
xor
shl
daa
mov
push
cs
cmpsb
mov
data16
ret
ja
movsb
outsb
out
sub
negl
sub
push
repz
pop
push
lods
mov
adc
cmp
xchg
pop
pop
dec
subb
pop
movsb
test
push
js
jmp
cmp
cmc
hlt
pop
addr16
mov
sbb
testb
inc
dec
ret
sub
jns
cwtl
sub
or
jns
and
inc
mov
faddl
lea
mov
decb
jb
push
xor
popa
aas
jge
jnp
push
mov
add
imul
daa
sub
fbld
pusha
int
mov
mov
repz
jns,pt
pop
popf
movsb
cmp
jnp
pop
adc
or
xor
add
arpl
xlat
xchg
cmpsl
mov
sub
dec
add
dec
fwait
xlat
lds
adcb
ss
out
xchg
sub
negb
push
pop
in
pop
sub
scas
and
jbe
sub
out
movsl
mov
dec
sub
addr16
ret
ffreep
inc
gs
mov
and
jne
stos
es
loopne
or
movsl
mov
iret
pop
fdivl
mov
test
in
in
lock
imul
jl
testl
stc
jmp
inc
or
out
sub
pop
push
dec
sub
sbb
loopne
movsl
scas
sbb
jne
scas
data16
mov
jb
jne
xlat
sbb
pop
mov
movsl
cmp
sbb
shrb
push
mov
xor
xor
nop
gs
mov
sub
pop
jmp
mov
pshufw
icebp
mull
xchg
in
in
and
and
scas
adc
adcb
xchg
xor
sbb
pop
sbb
push
jno
add
xchg
filds
insb
orl
outsb
and
mov
outsb
fsubrs
int3
jmp
dec
shr
jns
or
pop
mov
pop
dec
fcompl
jae
jp
lahf
lock
add
fisttpl
mov
pop
add
sub
fisttpl
sbb
or
sbb
cltd
ds
ret
mov
cmpsb
scas
loopne
shl
pop
push
aad
enter
popf
xor
scas
mov
xchg
jg
push
mov
mov
jnp
arpl
xor
shlb
in
test
fwait
xchg
mov
jl
inc
pop
sbb
pop
imulb
fwait
outsb
popf
xchg
negl
mov
test
hlt
mov
push
repnz
pop
clc
mov
jnp
pop
jo
cmp
pushf
cmp
arpl
jne
jns
insl
add
ret
sub
sub
loope
insb
pop
jne
pop
test
jae
jae
jb
pop
repz
lcall
jp
dec
testl
mov
mov
shll
cwtl
ret
insb
lcall
cmpsb
lods
dec
stc
mov
jnp
adc
cs
and
inc
rcl
js
adc
fsubl
xchg
jecxz
pop
lahf
repnz
mov
sbb
test
andl
push
mov
add
lea
ret
inc
jecxz
cmp
gs
subb
jno
fidivs
repz
fmuls
sbb
jecxz
xor
js
dec
in
mov
xor
or
icebp
adcb
adc
dec
lods
jmp
fbld
or
jnp
sub
movsl
add
sub
scas
iret
mov
pop
jmp
fisttpll
mov
xchg
sub
inc
fidivs
xlat
cmp
lret
cmc
xchg
ror
repnz
mov
mov
outsb
iret
cmpsl
or
jb
insl
repnz
aam
mov
sub
xchg
loopne
movsl
jecxz
jae
out
jg
mov
mov
pop
jnp
mov
outsl
into
cltd
sub
jne
sti
sub
fdivl
rcll
xchg
mov
stc
adc
or
hlt
mov
sub
pop
or
pop
or
xor
push
cltd
pusha
xchg
fs
fs
jp
adc
or
clc
or
cmp
pop
bound
iret
stos
mov
lret
into
insl
es
sub
sub
dec
rcr
jnp
pop
das
xchg
cwtl
mov
loop,pt
or
cmp
pushf
addr16
movsl
sub
mov
jge
enter
dec
bound
fdiv
ljmp
xchg
lods
inc
lcall
fs
jg
jno
ljmp
rcrl
hlt
pop
push
out
xchg
sub
inc
cwtl
outsb
es
out
jg
shrb
sub
lds
bound
sbbl
mov
cmp
xchg
mov
outsb
orl
enter
add
lret
mov
out
test
loopne
push
jmp
cmp
jne
jae
mov
lods
or
data16
pop
and
and
xor
pop
mov
jmp
outsb
mov
push
push
inc
mov
in
inc
push
scas
cmp
cmp
xlat
cmp
or
push
movsl
fidivs
cld
push
xor
stc
push
and
and
add
in
jo
sbb
sbb
cltd
mov
call
cmp
ljmp
dec
cmp
mov
insb
aam
jg
xchg
mov
and
shll
arpl
adc
aad
test
pop
jg
lahf
scas
repnz
out
cmpsl
shl
repz
or
aas
sub
sbbl
mov
and
pop
xchg
push
js
inc
hlt
ja
mov
imul
lods
jge
pop
mov
mov
out
in
or
jle
aaa
mov
push
inc
out
jecxz
pop
or
mov
jg
sbb
sbb
es
mov
mov
mov
test
mov
pop
idivb
out
and
out
sub
jno
aaa
dec
add
dec
ret
pop
or
mov
dec
cmp
leave
add
pop
xchg
mov
jp
ficoms
les
rol
outsb
cmp
imull
cmc
mov
pop
pusha
jae
popa
test
les
sbb
popf
or
mov
push
bound
mov
sbb
loop
push
lock
push
xor
out
sbbl
sub
jo
sub
out
adc
ficompl
mov
lds
jbe
mov
jmp
js
je
cwtl
inc
ret
xchg
mov
jbe
daa
jmp
or
jns
fcomps
insb
rorb
push
icebp
movsl
cwtl
mov
pop
sub
sahf
cmp
loope
jno
xor
push
adcb
fwait
and
push
push
xor
leave
outsl
add
xchg
pusha
rol
lcall
cli
sub
xor
sub
xchg
push
out
inc
cli
mov
outsl
shr
add
mov
addr16
icebp
mov
or
rcl
fldt
mov
and
jne
fs
popf
stc
scas
push
or
repnz
mov
adc
jo
push
and
cmpb
mov
inc
imul
aas
in
mov
adc
cmp
xchg
out
cmp
push
inc
fs
scas
ja
rsm
dec
psubq
jp
add
lock
addr16
or
dec
out
cld
fldcw
hlt
push
ds
insb
mov
dec
jnp
fsubr
ss
out
frstor
int
push
leave
jbe
mov
mov
xchg
mov
pop
out
notb
mov
mov
inc
fsubs
jnp
icebp
pop
das
icebp
adc
aam
mov
push
xorb
push
lret
cmc
mov
sub
adc
rorb
xor
sub
dec
scas
in
mov
aam
cmp
dec
lcall
push
sbbl
scas
sub
dec
jno
cltd
dec
sub
sahf
out
cli
test
repz
pop
gs
in
adc
mov
fcompl
cmp
inc
push
jmp
notl
pop
out
pop
inc
push
lods
arpl
mov
and
mov
cmp
mov
ret
lods
and
hlt
and
fsubr
stc
push
mov
aam
cmc
pop
icebp
es
out
sub
mov
outsb
popf
test
ss
jmp
add
add
rorb
sahf
orb
mov
out
ja
pop
lods
js
fisubrs
mov
jecxz
jmp
sub
pop
sbb
les
push
popa
or
out
sbb
test
les
rorl
add
pop
push
adc
shl
stc
dec
jnp
imul
push
mov
xchg
daa
fbstp
mov
call
or
adc
pusha
arpl
shll
jmp
cmp
loope
and
or
insl
lods
insl
mov
sahf
std
jb
sbb
inc
loope
push
mov
test
pop
aaa
push
stos
inc
jo
fistl
test
jno
mov
mov
cmp
mov
ficompl
mov
inc
xor
mov
xor
and
mov
adc
in
lret
xchg
add
xor
pop
xchg
popl
aas
xchg
pop
xchg
jo
add
imul
repnz
je
iret
inc
adc
adc
mov
aad
nop
testl
push
sahf
and
push
cmpsl
xor
xor
fdivrl
loopne
sub
insl
in
or
idivb
into
add
int
sbb
mov
ret
test
or
lret
pop
mov
cmpsb
jl
enter
or
cltd
cmp
lret
adc
pop
outsl
pushf
jo
loopne
lahf
dec
adc
repz
call
push
outsl
mov
aad
mov
sbb
add
in
push
stos
loope
dec
pop
popa
inc
sub
stc
xchg
out
repnz
lret
and
mov
mov
or
jp
mov
add
pop
xor
fsubs
loop
lahf
and
inc
add
dec
jns
lret
jmp
hlt
ljmp
leave
int
xchg
xchg
mov
push
js
xor
mov
das
push
adc
mov
lock
mov
push
mov
jns
jmp
and
dec
and
mov
xchg
dec
movsb
pop
clc
jae
push
hlt
pop
lret
jecxz
xchg
mov
lcall
push
ret
stos
and
mov
insl
add
popl
pop
pop
cltd
pop
shl
dec
mov
inc
and
push
leave
fidivl
je
xor
mov
xor
test
or
sbb
negb
mov
or
shrl
fstps
ret
xchg
fmuls
ss
scas
dec
or
mov
iret
lock
iret
jecxz
je
adc
dec
and
dec
addr16
or
adc
push
sub
clc
jbe
lock
xor
pop
pop
mov
pop
cmpsb
scas
andl
sub
ljmp
push
stc
push
repz
sbb
push
mov
outsb
cmc
jle
lock
xor
dec
xlat
push
repnz
clc
iret
popf
lods
fldl
pop
mov
gs
jp
jecxz
push
mov
dec
clc
adc
xchg
push
inc
xor
fnstenv
xor
jbe
cmp
loope
mov
iret
mov
bswap
std
or
pop
sbb
and
movsl
inc
in
adc
cmc
or
sti
push
add
fldt
xchg
test
jae
adc
sub
pop
xor
sbb
test
or
xchg
cmp
xchg
mov
ret
lcall
mov
negb
adc
inc
inc
jge
adc
push
xor
xor
or
stos
imul
out
dec
into
ja
sbb
jp
imul
sbb
adc
jl
imul
shrl
popa
notb
xor
mov
cmp
aaa
mov
xchg
pushaw
iret
arpl
adc
sbb
sub
aam
lcall
xor
xchg
je
movsb
sub
movsl
lea
fildl
xor
adc
push
push
ror
int
daa
insl
lock
js
jo
pop
cld
inc
dec
mov
inc
enter
hlt
rcrb
je
mov
adc
outsl
adc
sbb
push
cmp
push
movsl
js
pusha
aad
pop
jecxz,pt
jo
inc
xlat
test
add
int
loop
dec
lods
xchg
fildll
movsl
jl
popf
dec
pop
mov
dec
and
xor
ja
and
adc
jnp
and
daa
add
pop
and
and
imul
push
fdivp
scas
mov
push
adc
movsl
lcall
jp
jnp
mov
in
test
mov
pop
mov
movsl
hlt
or
inc
mov
jae
pop
andb
push
or
lahf
mov
or
int
pop
push
in
dec
push
jo
out
inc
sub
iret
aam
inc
sub
cwtl
jmp
pusha
fneni(8087
cli
loope
call
mov
jbe
push
adc
fwait
ret
call
mov
mov
pop
mov
fcomps
fdivl
xchg
out
dec
incl
in
push
mov
scas
ds
jecxz
or
sub
loop
pushf
adc
insb
call
cmc
mov
jne
mov
cli
imul
xor
jns
cmc
xchg
cmpsb
pop
add
mov
divl
mov
arpl
inc
push
outsb
sub
pop
mov
dec
pop
adc
xor
js
pop
jle
mov
and
cmpsl
pushf
lods
inc
into
enter
lods
or
xchg
rcrb
add
pop
pop
pop
mov
sub
pop
inc
rclb
mov
cmp
test
ret
fstl
lahf
lcall
clc
arpl
lea
lods
arpl
fadd
pop
repz
xchg
adc
aad
mov
inc
ret
call
xor
push
and
xorb
lret
bound
mov
fwait
xor
ss
xchg
push
mov
arpl
and
rcrb
loope
imul
push
nopl
lds
daa
push
popa
inc
push
pop
movsb
insl
or
mov
adc
sub
das
and
mov
dec
scas
nop
cltd
imul
push
jno
sbbl
aad
mov
outsl
mov
adc
pop
lods
dec
fists
jno
int3
sub
js
mov
fsubrs
iret
movsl
mov
push
jl
stos
sub
jb
add
gs
pop
mov
imul
xchg
push
mov
jmp
sub
aas
push
into
or
sahf
and
test
xor
push
pop
in
add
inc
xchg
mov
in
in
rcr
or
je
mov
jecxz
jge
mov
loopne
adc
cmp
int
scas
ret
push
in
pop
pushf
insl
loopne
mov
or
push
lea
push
mov
div
xchg
jmp
cmpsl
imul
jno
in
push
push
mov
decb
jbe
pushf
loop
dec
sub
adc
test
mov
inc
or
xchg
int3
mov
cs
in
aam
lea
push
in
inc
and
aad
adc
scas
jne
rcrb
test
push
add
daa
das
sbb
mov
ficoml
add
lea
cmp
mov
pop
mov
jmp
pop
lahf
and
shll
lods
mov
pop
xor
inc
movsb
cmp
jmp
mov
int
inc
incl
cwtl
das
mov
lcall
mov
push
or
xchg
cmp
push
push
ret
rorl
push
dec
and
push
cmp
mov
enter
stos
pop
les
adc
stos
inc
sti
mov
jno
aam
and
jle
fisubrs
in
or
jmp
mov
scas
mov
shlb
xchg
xor
push
icebp
mov
dec
int3
sub
fstpt
xchg
mov
or
loopne
fdivs
lds
cmpsl
cli
movsb
jns
sub
dec
incl
pop
xor
sbb
push
lock
stc
mov
fbstp
adc
jbe
pushf
test
ds
out
sub
mov
mov
cmp
shrl
add
lods
gs
mov
xchg
js
ret
and
fildll
jo
xor
jns
xor
sub
push
iret
jb
add
mov
in
sub
push
or
add
nop
pop
xchg
incl
les
repnz
ds
stos
inc
dec
xchg
hlt
cmp
imul
cmp
adc
rorb
fisubs
adc
fldl
add
xchg
sub
jns
pop
sub
inc
add
aam
jmp
dec
mov
cmp
or
pop
pop
std
mov
clc
in
out
mull
cltd
mov
icebp
insb
sbb
in
negl
idivb
inc
movsb
cmp
imul
pop
cmp
sbb
leave
inc
dec
or
sti
sub
outsb
loop
mov
int3
js
inc
dec
adc
cltd
mov
add
xchg
adc
xor
adc
loop
xchg
sub
nop
lods
adc
repz
cmp
sbb
shll
in
or
dec
popf
mov
sub
cltd
arpl
jnp
test
imul
das
lods
cs
jno
and
fidivl
lds
push
mov
imul
and
fdivr
xchg
decl
enter
jle
rcrl
cmp
imul
test
js
push
xchg
push
sub
pop
lock
ss
lock
out
push
and
inc
mov
test
push
dec
mov
mov
jo
mov
inc
divl
mov
push
pop
sahf
jge
mov
setg
call
or
push
jle
push
dec
mov
dec
dec
pcmpgtd
adc
adc
add
sub
ss
outsb
xor
insb
shr
xchg
jb
mov
loope
sub
inc
out
aam
ret
pop
adc
push
imul
or
int
pop
sub
jns
sarb
mov
ljmp
xor
xor
dec
pop
fxch
lret
dec
pop
add
pop
sahf
mov
mov
mov
leave
stos
rol
jp
adcl
icebp
mov
test
adc
lods
out
cmp
push
mov
push
sub
or
pop
cmpsl
mov
lahf
jb
repz
out
stos
xchg
fstpl
addb
jg
enter
shrl
sbb
adc
loopne
jmp
arpl
fucomp
decb
dec
lods
inc
jl
mull
push
sub
mov
sbb
test
or
mov
out
push
incb
pop
jl
lahf
test
inc
push
smsw
and
ja
inc
xchg
push
jge
icebp
daa
or
stos
cmp
adc
lods
out
mov
jo
frstor
push
dec
loopne
inc
insb
sub
cmp
lods
rclb
dec
jle
rol
insl
shl
pop
ret
hlt
ss
xchg
push
in
std
jle
sub
cmp
jbe
rorl
repnz
add
and
add
cmp
xchg
orl
in
xchg
in
inc
pop
or
sbb
inc
hlt
je
pop
dec
jo
push
and
inc
jge
shrl
addr16
push
out
dec
xchg
outsl
cmp
fsubrp
lcall
rorb
or
cmpsb
sbb
repnz
sar
fwait
pop
mov
xor
outsb
fldenv
cmc
or
lret
dec
stc
xchg
inc
jecxz
sti
dec
fisubrs
aad
ds
pop
jo
sahf
xor
daa
xor
pop
push
cmp
imul
sub
scas
or
or
insl
jnp
sahf
sbb
cmp
push
sahf
and
add
mov
movsb
dec
fwait
jae
in
sub
push
scas
push
addb
add
rcrl
lahf
push
sbb
push
out
nop
loop
jnp
mov
mov
out
xor
push
enter
mov
xor
add
mov
popa
or
aam
push
xor
push
sti
fimull
jp
cltd
dec
in
jno
push
in
inc
inc
sub
pop
mov
imul
nop
jle
cltd
ficoml
or
xchg
push
lahf
add
pop
or
divb
js
iret
inc
test
jmp
fs
out
and
test
pop
cmpsl
enter
jecxz
shll
sub
dec
mov
out
jle
adc
ret
sti
int
sub
dec
in
sbbl
or
mov
test
xor
add
lahf
ss
inc
dec
xchg
imul
stc
push
dec
xchg
cmpsb
push
jns
in
leave
xor
aad
aaa
icebp
lcall
imul
sahf
fsubrl
mov
or
inc
cmp
cwtl
sub
outsb
jl
dec
pop
sub
pop
jnp
push
sub
pushl
xor
mov
out
add
push
outsl
jnp
cmpsl
dec
xchg
fisubrl
iret
sahf
mov
push
jg
jb
arpl
jbe
popf
xor
push
gs
aad
fmulp
outsb
inc
adc
or
bound
cmp
pop
int3
cmc
out
cmpsl
mov
inc
sbb
dec
dec
fisttps
popf
inc
xchg
and
adc
imul
mov
mov
add
and
or
mov
lods
adcl
ficoml
arpl
sub
push
adc
stos
xchg
xchg
jecxz
add
popa
jmp
sub
dec
mov
jge
pop
std
out
sahf
testl
xor
in
jae
mov
test
inc
fcmovnbe
fsubrs
dec
movsl
loop
lea
or
sub
notb
dec
hlt
js
sbb
adc
inc
sti
adc
cmp
pop
push
push
mov
xchg
xchg
jnp
xchg
xor
push
stos
enter
inc
sub
cmp
push
sbbl
or
aaa
ficompl
pop
adc
hlt
push
push
loop
mov
shll
pop
pop
push
pop
adc
int
popa
shlb
cmpsb
xchg
push
xorl
mov
repz
test
mov
push
fidivl
mov
pop
pop
sub
fwait
cmp
out
dec
mov
add
lds
int3
inc
or
fdivp
sbb
faddl
or
or
xor
cmc
pop
test
dec
xchg
lods
jl
fisubs
pop
mov
dec
idivl
mov
jmp
sub
decb
or
fs
cmp
stos
push
mov
push
es
xor
out
insb
push
clc
or
int3
inc
shll
dec
sahf
mov
cli
sti
dec
out
jmp
jg
fidivrl
sbb
adc
in
ficompl
fwait
test
and
std
mov
push
stos
in
dec
frstor
mov
jo
adc
outsl
mov
in
lea
inc
lahf
mov
cmp
mov
ret
lret
cmp
aad
and
pop
jns
or
jg
sbb
or
xlat
mov
push
mov
xchg
fstpl
xchg
add
sbb
mov
fwait
dec
jb
std
mov
ret
inc
mov
aaa
out
mov
inc
push
xchg
add
arpl
int3
fistpl
dec
insl
sarb
fldcw
mov
push
insl
lcall
push
bound
cmp
xor
popf
jne
rclb
leave
push
mov
les
xchg
inc
push
scas
lock
pop
test
xchg
and
and
mov
std
dec
sti
icebp
ret
loope
xor
mov
mov
mov
or
je
or
addr16
jae
push
movsl
iret
mov
mov
sbb
ds
sarl
add
popa
inc
dec
pushf
dec
cmp
call
stos
push
jb
push
movsb
jb
clc
pop
mov
inc
cmpsb
push
in
out
xor
lea
test
sahf
xor
pusha
repnz
andl
pop
push
add
pop
cmp
xchg
insl
test
sbb
xor
pop
push
ljmp
sub
jo
add
mov
pop
and
lds
adc
test
pop
out
js
cmc
das
in
jbe
arpl
adc
imul
push
icebp
dec
repnz
call
inc
and
fcoml
adc
inc
pop
das
jg
inc
inc
mov
ja
or
push
push
stos
mov
cmp
sti
adc
push
or
push
mov
lods
das
lcall
sub
xchg
and
cmp
sbb
cmp
jne
sub
insb
hlt
int3
ljmp
adc
mov
push
lods
imul
fstps
push
pop
popf
fwait
mov
mov
nop
daa
pop
pop
dec
add
mov
es
test
push
rcl
adc
pop
push
ret
sub
or
cmc
mov
push
data16
in
nop
flds
or
cli
push
cld
sub
mov
rol
mov
outsb
pop
xchg
jmp
icebp
pop
and
repz
xlat
adc
lcall
and
pop
xchg
push
out
lcall
mov
stos
xlat
push
cld
xchg
int
jmp
test
add
outsb
mov
adc
out
add
sub
arpl
lret
cmp
and
das
ret
jge
popa
fdiv
pop
lret
pop
sbbb
out
lret
decb
mov
fnstenv
mov
ja
push
scas
jmp
dec
inc
repnz
jo
mov
test
insl
popa
les
ss
pop
icebp
pop
addr16
hlt
jo
out
push
jae
fsubl
or
sbb
loopne
call
cmp
addl
stos
rcrb
lea
fidivl
dec
pop
test
sbb
int3
popa
mov
popa
mov
popa
sahf
lcall
jmp
mov
stos
in
xchg
loope
sub
lock
pop
hlt
sub
dec
and
lcall
and
pusha
je
xlat
movsl
xor
jb
xchg
or
lods
fs
adc
shlb
dec
mov
pop
in
cmpsb
cmp
xlat
and
shll
dec
pop
cmp
mov
mov
jmp
mov
ret
pop
push
xchg
jle
andl
sub
iret
insb
or
inc
bound
lods
shlb
xchg
shll
jmp
daa
sbb
ljmp
xor
roll
movzbl
pop
mov
sbb
test
sub
es
jl
fisubrs
loopne
and
repz
test
dec
out
fwait
sub
mov
push
mov
loopne
negb
popf
add
xor
mov
inc
sub
dec
xorl
insl
ja
xor
in
cltd
lret
add
mov
pop
inc
sti
movsb
icebp
js
jo
xchg
xor
fsubs
mov
xor
mov
push
sbb
inc
rolb
and
or
aad
or
jl
add
push
je
fwait
sti
stos
fmull
mov
mov
pop
getsec
lock
rcll
mov
mov
add
pop
jo
loopne
push
and
mov
push
fstpl
push
ljmp
icebp
lea
xchg
out
mov
shl
in
iret
sub
idivl
sub
sbb
int3
jecxz
imulb
dec
ljmp
pushf
jp
in
imul
popw
push
jnp
dec
leave
flds
lds
pop
cmp
imul
outsb
fistpl
leave
mov
fidivrl
fistpll
xor
stos
add
lods
dec
sub
sahf
sbb
jns
hlt
test
sub
les
xor
test
sbbb
orb
or
or
xchg
ret
dec
push
hlt
cld
jmp
fstl
jo
inc
inc
sub
or
mov
dec
jp
icebp
test
fldcw
sahf
push
out
movsb
out
icebp
dec
outsb
shl
adc
lret
loop
in
xchg
mov
fisttpll
cmpsb
out
jp
sbb
inc
xor
aad
mov
mov
mov
fs
or
push
sub
jb
lahf
or
sbb
xchg
stos
loope
push
mov
mov
jae
popa
stc
out
dec
pop
rcr
testl
mov
jne
and
mov
pop
idivl
nop
push
aaa
dec
cmp
push
inc
lret
iret
sub
data16
lret
je
icebp
inc
mov
sahf
jle
or
cmp
sub
scas
push
outsb
shlb
xchg
mov
imul
lahf
inc
cmp
stc
enter
out
lcall
inc
mov
push
sbb
js
ljmp
shl
cmc
pushf
jo
sbb
test
add
jl
and
out
mov
add
push
pcmpeqw
jae
and
dec
lea
push
push
lcall
push
mov
jecxz
test
inc
jge
popf
mov
push
push
or
shrl
mov
lea
ficoml
es
iret
and
out
pusha
popf
ja
sbb
mov
lds
xor
fs
mov
jge
or
cltd
xor
hlt
sub
nop
sbb
add
cld
and
insl
call
mov
push
xchg
pop
out
sub
int
in
cltd
cmpsl
in
inc
push
inc
mov
sbbb
fdivp
inc
shl
adc
xchg
mov
push
int
jbe
imul
jno
cmp
jecxz
push
cwtl
decb
lods
popa
push
inc
push
inc
ficoms
mov
dec
out
push
push
cmp
gs
aas
pop
into
outsl
pop
mov
or
xchg
mov
int
adc
xchg
push
nop
cltd
popa
ljmp
mov
xchg
sub
andb
mov
setle
jmp
jo
jb
xor
mov
mov
aas
lds
cmp
ret
iret
pusha
test
movsl
add
inc
clc
dec
fcomp
fcompl
sub
gs
or
xchg
jbe
and
mov
je
rsqrtps
cmp
and
nop
xlat
mov
imul
ret
data16
jns
imul
movsl
in
push
int
pop
js
push
cltd
dec
jge
mov
mov
js
mov
lahf
adc
cmp
mov
orl
pop
mov
and
sub
mov
mov
and
mov
mov
test
and
mov
dec
or
hlt
lahf
push
inc
in
adcb
je
or
and
lea
daa
xchg
out
ret
fs
inc
in
sbb
outsb
cld
lret
add
pop
mov
xor
pop
fildll
xor
das
jl
fs
push
pop
jnp
fistl
pop
pop
xchg
cmpsb
adc
mov
mov
in
cmp
sbbl
loopne
adc
and
or
push
iret
xor
iret
mov
outsb
xchg
imul
pop
ds
popf
arpl
xchg
ss
aaa
cmpsl
lods
lret
xchg
mov
sti
cmp
cltd
shld
fnstsw
movsb
inc
xlat
pop
shlb
or
je
mov
xchg
lret
int
jl
in
xlat
fstps
das
adc
fdivrl
aas
icebp
cmc
cltd
xor
mov
ret
js
in
xchg
call
iret
adc
mov
lock
cltd
cltd
dec
xchg
fwait
xchg
add
fstp
pop
mov
pop
mov
dec
cmpl
movb
arpl
add
push
mov
mov
sub
inc
pop
push
cmpsb
ja
mov
mov
mov
faddl
scas
imul
popf
pop
adc
rolb
cmp
imul
add
mov
sub
pop
cmpsb
add
pop
sub
mov
leave
subb
out
add
jnp
cmp
in
and
test
push
adc
cmp
and
ret
mov
pusha
dec
jp
outsb
idivb
and
int3
jne
pushf
data16
fidivrs
std
fcmovu
jo
push
ret
imul
sub
push
rcl
sub
pop
lea
shll
cli
mov
lcall
xor
mov
inc
pop
or
std
shlb
pop
mov
xor
jle
stc
fcmovnb
ja
xchg
add
gs
xorb
mov
repz
cld
mov
push
mov
mov
fsubp
lret
fsubrs
push
add
mov
stos
stos
inc
and
cmp
lahf
add
sbb
adcl
dec
lahf
test
lds
xchg
xlat
lret
cltd
cltd
adcb
imul
popf
xchg
pop
clc
push
jmp
imul
cwtl
lock
mov
lock
add
dec
aaa
mov
push
out
sub
leave
xchg
outsb
jle
lea
adc
out
shll
sub
pop
xlat
mov
std
jne
dec
mov
add
xor
or
xor
aad
push
orl
mov
aaa
sbb
or
xchg
cmp
jg
bound
cmp
and
lcall
loop
shlb
lcall
sti
jg
lcall
fs
cmp
fmulp
and
fsubl
sub
rolb
push
cwtl
loop
mov
and
inc
push
icebp
add
dec
into
xchg
mov
inc
int3
inc
fdivrs
int
popl
cmpsb
out
xchg
pop
outsb
test
xchg
push
lret
or
das
sbb
jno
mov
outsb
adc
call
and
jnp
xor
ljmp
movsb
or
pop
jmp
jp
aaa
mov
mov
movsl
dec
out
rcrb
push
or
jnp
test
ret
ficomps
xchg
pop
xchg
out
fucomp
rorb
dec
lods
inc
repz
xor
cmc
inc
mov
add
mov
push
out
sub
andl
sbb
mov
dec
test
ss
lret
aas
adc
int
dec
bound
int
pop
xor
inc
cmp
shrl
sahf
xor
pop
imul
psubusb
ss
sbb
cmp
mov
std
xchg
scas
jno
es
insl
pop
mov
rep
scas
dec
jmp
jo
int
push
in
out
lret
daa
sub
push
mov
cmp
iret
pop
xor
shl
mov
sbb
mov
cmp
subb
ret
and
pushf
mov
dec
repnz
mov
cmp
lods
jg
jge
jo
into
test
out
jns
mov
adc
dec
inc
adc
test
mov
push
adc
fisttps
pop
fnstcw
int3
lret
adc
pop
sbb
pusha
in
movsl
leave
fldenv
out
bound
test
adc
mov
je
push
fstpt
lret
sub
jecxz
mov
push
fcomp
pop
jns
xchg
add
lea
sahf
popl
inc
fildll
fnsave
xor
inc
add
dec
je
sub
mov
xchg
dec
sahf
mov
lock
scas
fcmovnbe
pop
movsb
sub
ret
mov
add
ss
je
addl
scas
daa
int
invd
js
loop
popa
leave
adc
and
cld
cmc
xchg
sbb
lods
jp
lods
cmp
cmp
inc
js
inc
cmp
int
mov
out
std
fidivrl
arpl
jle
rcl
add
jnp
inc
lods
data16
mov
in
les
add
iret
das
insb
xor
jo
sub
xchg
sbb
jo
addr16
and
lret
shlb
lds
and
aaa
dec
dec
insl
sarl
pop
mov
pop
and
sbb
daa
pop
mov
jb
ds
and
xchg
mov
sbbb
aad
into
push
testl
sub
lahf
shrb
bound
js
sti
andl
icebp
sbb
clc
scas
test
std
loope
xor
fbstp
inc
pop
mov
adc
cmp
movsl
out
clc
sbb
lods
inc
idivb
jnp
mov
dec
loop
sub
xor
push
jmp
aam
adc
pop
cmp
lea
push
daa
bound
push
js
stos
inc
jmp
loopne
lea
mov
and
xchg
testl
pop
mov
xchg
inc
or
xor
push
lods
add
cltd
pop
test
mov
bound
and
int3
jnp
pop
mov
leave
sub
jg
mov
inc
loop
jb
adc
sar
jg
lods
dec
aad
aad
stos
mov
jge
iret
popa
cmp
sbb
cmp
arpl
and
inc
fdivl
add
test
sahf
xor
shl
clc
pop
mov
sub
jg
shrl
insl
iret
sbb
imul
push
lahf
xor
dec
push
mov
xorl
out
popf
stos
and
je
test
frstor
cli
sti
pop
dec
adc
aam
lret
jle
push
push
jmp
ja
jge
sub
imul
leave
push
jb
pop
mov
scas
loop
add
xor
and
out
lahf
ds
jae
xor
mov
jge
xor
lcall
in
push
daa
icebp
jbe
push
jne
std
push
in
add
cld
sti
outsb
lahf
push
outsl
sar
stos
inc
push
pop
daa
jnp
jns
xor
stos
inc
xchg
mov
or
enter
int
ficoml
in
pop
lret
lret
enter
jb
sbb
andl
add
lcall
and
adc
testl
lahf
pop
in
adc
pop
add
popa
repnz
xchg
push
mov
mov
adc
int
jae
fistpl
mov
jle
ds
cs
in
jecxz
out
dec
mov
lods
popf
int
xlat
aas
dec
stc
jmp
pop
xchg
cmp
and
or
cld
jno
mov
mov
add
and
bound
sti
pop
cs
sahf
pusha
push
fsubrl
mov
sub
pushf
arpl
or
mov
mov
fwait
sbb
insb
cli
inc
mov
scas
inc
inc
lock
loopne
bound
jle
xchg
icebp
nop
sbb
cmpl
outsb
xchg
repz
das
adc
inc
bound
cs
testl
or
mov
mov
cmp
lahf
dec
jb
mov
mov
iret
movsl
push
sbb
add
sub
or
sbb
shll
pop
jae
pop
out
push
mov
enter
lea
sarb
cmp
or
nop
daa
stos
ja
push
mov
pop
or
je
into
shrl
daa
xchg
rorl
nop
fadds
mov
mov
jnp
jnp
dec
inc
sub
imul
jp
mov
mov
data16
jae
nop
pop
in
test
xchg
mov
lods
sbb
dec
into
mov
lret
cli
shrl
adc
cld
push
adc
imul
dec
cmp
or
pop
dec
sub
hlt
ds
dec
adc
pop
repnz
dec
mov
adc
ss
jp
outsl
and
cmp
xor
popf
bound
mov
pop
in
sbb
leave
ja
aaa
test
dec
push
cmp
ss
mov
test
inc
sbb
dec
dec
lea
push
jp
xor
stos
pmovmskb
imul
ret
push
pop
jg
and
xor
ljmp
mov
xor
cmp
xchg
sub
inc
dec
pop
mov
mov
dec
jo
std
mov
adc
jae
insb
adc
inc
push
movsl
aaa
or
xlat
stos
sbb
mov
mov
shrl
jbe
push
push
pusha
or
adc
adc
sub
test
mov
lcall
mov
sbb
js
pop
insb
push
pop
dec
lods
jnp
scas
ret
stc
inc
jp
mov
cli
mov
mov
roll
cltd
ljmp
bound
cmp
mov
cmp
pop
in
mov
sbbl
pop
sbb
adc
xlat
or
cs
or
or
cmp
mov
ss
xchg
ret
or
loope
inc
bound
cmp
aas
hlt
loop
or
mov
sbb
cmp
dec
shrb
enter
add
js
mov
dec
or
shl
andl
pop
jo
mov
xor
pop
mov
pop
pop
stc
sbbl
shrb
das
jp
mov
jae
dec
loop
adcb
add
push
ds
cld
mov
imul
cld
mov
jae
sbb
in
js
push
mov
mov
cld
adc
push
scas
in
xchg
mov
sbb
data16
daa
lret
jae
xchg
cmp
jne
sbb
inc
adcl
sbb
gs
add
dec
inc
and
gs
jbe
mov
jns
xchg
ds
mov
sbb
fsubr
insl
imul
ret
outsl
fisubs
divl
cmpsb
sahf
test
subb
imul
lea
std
pop
int3
pop
fstps
jge
xchg
cmp
jecxz
pop
mov
mov
fnsave
xor
cmpsb
mov
jl
out
xchg
sbb
dec
pop
sar
test
and
leave
sub
inc
out
xor
add
cwtl
pop
test
lcall
popa
adc
push
inc
sbb
fisubrl
repz
movsl
adc
xchg
ljmp
insl
jnp
notb
popa
shrd
dec
add
int3
arpl
cmp
out
push
pushf
dec
popf
test
lods
mov
pop
sub
pop
nop
pop
add
fisttpll
mov
test
pop
sbb
cmp
xlat
xchg
push
adc
loope
add
mov
std
jno
push
dec
add
xor
jmp
push
in
xchg
sub
push
pushf
scas
test
das
fsts
lds
in
push
mov
mov
test
and
aam
das
dec
dec
mov
movsb
ret
jg
sbb
dec
out
lock
sbb
ret
push
es
pop
ret
cltd
xor
lds
dec
mov
xchg
out
jno
pop
hlt
push
bound
xchg
xor
sub
rolb
pop
cmpsl
dec
and
cmc
popf
repnz
pop
outsl
lret
cli
iret
xor
out
mov
pop
ljmp
aaa
cmpb
xor
lds
stos
sbbl
rcr
dec
push
xor
movsb
inc
inc
ja
fildll
sub
insl
mov
or
cmp
inc
cmp
cmc
mov
xlat
pop
enter
sub
out
ds
shr
cmp
mov
shll
xchg
das
in
or
pop
sub
mov
jae
sub
stos
fs
sub
bound
jae
cmp
xchg
js
push
xchg
rorb
add
popl
push
xorl
es
neg
sub
xchg
outsb
pop
adc
out
addr16
sahf
cmp
dec
sti
sub
xor
xchg
adc
xchg
jae
mov
add
push
push
push
pop
cmp
mov
loopne
or
test
push
mov
icebp
cmp
test
outsl
and
and
cs
scas
inc
sbbb
pushf
mov
inc
lcall
and
push
cmp
xor
scas
inc
adc
inc
sbb
call
out
movsb
imul
mov
adc
aas
cmp
stos
cwtl
lcall
cmpsb
push
xchg
into
mov
fs
fildll
inc
mov
or
sbb
andb
insb
cld
inc
jno
test
mov
popf
inc
jns
pop
in
dec
and
cmpsb
scas
in
mov
adc
inc
sahf
cmp
stos
nop
dec
in
inc
icebp
sbb
mov
mov
add
rcll
fnsave
je
rcr
xchg
push
imul
xchg
ja
adc
aam
mov
into
and
xor
lods
mov
or
cmp
out
xchg
popa
imull
in
movsb
sbb
shl
sti
nop
pop
ret
jns
dec
in
inc
call
xor
pop
je
mul
jge
fst
insl
gs
pop
jno
hlt
mov
adc
je
hlt
cmc
adc
cmp
dec
cltd
mov
mov
mov
movsb
cmp
inc
jle
mov
gs
sarb
ret
enter
cmp
or
jecxz
bound
pop
xchg
jnp
mov
xchg
mov
mov
mov
adc
add
lods
inc
stc
and
inc
xor
push
or
aas
mov
rolb
icebp
jl
dec
pop
popf
push
jmp
add
jae
outsb
jb
pushf
fisubs
out
addr16
pop
jns
repnz
sub
mov
cli
inc
cld
xchg
jne
shll
fstpl
sub
inc
pusha
lcall
add
shlb
inc
std
test
test
sbb
popf
jg
mov
lret
lock
xor
adc
cmp
pop
mov
fdivs
xchg
imul
cmp
xchg
adc
jae
push
imul
aaa
fs
inc
ljmp
jb
imul
add
jb
dec
jae
test
arpl
cmp
out
cmpsl
mov
cs
mov
and
insl
fcmovu
mov
das
mov
push
pop
data16
jge
dec
fnstcw
cmpsl
ds
adc
aas
jne
xchg
jbe
notb
push
mov
push
adc
les
repz
xor
jp
fdivs
mov
add
mov
stos
ljmp
mov
xor
mov
mov
addr16
loop
adc
mov
enter
mov
inc
aas
dec
mov
ss
lods
pop
insb
jge
cmp
push
mov
sub
dec
fstl
ret
pushf
shlb
cmpb
dec
dec
push
in
mov
sub
or
idiv
and
enter
lods
ljmp
repnz
jns
pop
fdivrl
out
push
sub
mov
mov
dec
dec
enter
jmp
push
mov
dec
mov
ficoms
mov
xor
pop
push
sti
sbb
cwtl
sbb
jo
pop
repz
cmp
outsb
xlat
scas
lods
xor
inc
or
sub
dec
loop
lcall
push
mov
sbb
sbb
sbb
mov
cmp
pop
arpl
rorl
push
insb
jle
or
addl
xor
fwait
shl
mov
icebp
cs
fcomps
jbe
xlat
icebp
adc
stc
jno
adc
xchg
mov
rorl
mov
or
int3
fiadds
bound
pop
sub
fmull
sbb
pop
sbb
dec
lock
nop
pop
scas
xor
jbe
psrlw
leave
movsb
jmp
mov
mov
sub
cmp
daa
adc
in
je
jo
shll
and
in
lcall
add
out
mull
dec
xchg
mov
es
lcall
sbb
fmuls
fistpll
adc
rorb
loop
pop
and
xchg
jb
push
xor
sbb
andl
cmp
out
mov
adc
and
inc
mov
pop
sarb
mov
mov
iret
das
pop
pop
pop
adc
popa
sbb
push
jno
pushf
mov
data16
loopne
push
loop
inc
idivl
arpl
imul
aad
dec
xor
sbb
xchg
subb
insl
pop
xchg
xchg
enter
pop
mov
push
aas
enter
xor
fnstcw
mov
popa
pop
ja
orl
orl
or
pop
add
leave
lret
int
inc
ljmp
pusha
orb
push
lcall
sbb
pop
lret
mov
cmp
lret
aaa
dec
aaa
xor
fcomps
push
cmp
stos
sbb
out
test
jns
xchg
sar
fiadds
sbb
lret
adc
cmp
push
aas
cmp
cmp
mov
xor
int
pop
xchg
popl
cmp
lods
aaa
or
loopne
les
subl
jne
lcall
jns
inc
clc
rcll
push
leave
scas
jns
test
addr16
push
push
or
jne
push
pop
call
sbb
jns
mov
jle
dec
fsts
cmp
pop
hlt
sub
dec
jl
imul
mov
mov
inc
repnz
xlat
andb
scas
jmp
cmp
xor
mov
test
push
jge
jb
ret
inc
in
sbb
inc
fsincos
lods
cmpsb
pop
stc
pop
jecxz
xchg
mov
out
lods
repnz
aam
xor
mov
data16
notb
dec
into
dec
jecxz
insb
scas
push
mov
push
arpl
mov
nop
pop
xchg
mov
lcall
movsl
jp,pt
out
push
out
pop
add
xor
jne
mov
mov
mov
aad
push
jo
jg
repnz
pop
pop
mov
repz
arpl
loopne
or
adc
cmc
cmpsb
sbb
mov
iret
inc
addb
fsubs
into
mov
dec
sub
ret
pushf
arpl
jb
call
adc
and
xor
xchg
hlt
sub
dec
loop
leave
mov
ja
jne
mov
movsb
mov
fistl
and
pop
aaa
xor
jge
daa
lcall
or
cmp
dec
cmp
pop
jno
cmp
jmp
fldl
pusha
fcmovnbe
ljmp
inc
push
cmc
push
mov
mov
sub
mov
add
jecxz
loopne
lods
fildl
cmpsb
scas
mov
mov
mov
adc
jg
and
sbb
int
nop
xorl
ds
movsb
lret
jno
pshufw
and
or
xorb
cli
enter
into
call
sub
fcoms
test
lods
mov
mov
shl
mov
daa
shlb
cwtl
loopne
cli
pop
jno
pop
dec
xor
jecxz
fstl
imul
mov
repz
mov
iret
daa
rolw
cmp
aam
mov
jo
fsubr
mov
jbe
jo
mov
inc
jne
addr16
aaa
mov
mov
popf
jo
sbb
push
mov
call
sarb
ret
pop
leave
xlat
ret
push
cmp
adc
jle
cmp
add
jmp
pop
pop
out
jl
jl
dec
adc
cmpsb
test
loopne
dec
sarl
out
sub
or
sahf
dec
fs
sub
or
inc
jnp
subb
push
push
mov
or
add
mov
insb
inc
test
add
mov
push
dec
popa
cmp
jp
sbb
lock
push
inc
mov
add
leave
ljmp
jg
scas
cmpb
mov
sarb
sbb
mov
movl
xor
pop
sub
dec
or
cmpsl
adc
sbb
imul
xchg
push
mov
rorl
sub
and
jecxz
lds
jne
and
filds
sbb
movsb
hlt
cmpsl
aaa
repz
ret
pop
xchg
or
loope
into
in
ret
inc
shlb
mov
mov
sbb
out
fucomi
enter
and
sub
loop
push
xor
push
lcall
cs
mov
inc
in
movsl
stc
pop
notb
mov
xchg
fcoml
add
cmp
inc
pusha
stos
push
mov
push
mov
push
aad
fstps
lret
shrl
mov
repz
fwait
cmp
inc
or
xchg
sbb
adc
loope
daa
ds
arpl
enter
dec
arpl
mov
scas
pop
mov
imul
arpl
cmpsb
in
pop
lods
sbb
push
sub
xor
popa
adc
cmp
subb
arpl
std
pop
insb
das
dec
xchg
stc
popf
sarl
add
fmulp
mov
and
adc
xchg
std
mov
cwtl
stos
pop
adc
or
adc
lret
shrb
leave
adc
pop
xchg
dec
dec
orl
cmp
and
push
sti
test
mov
mul
mov
push
fidivl
mov
dec
push
rol
out
imul
push
fmuls
jp
mov
mov
mov
outsb
cmp
dec
lret
shl
mov
loop
filds
mov
cmp
mov
ja
cmc
mov
std
rorb
test
inc
lods
mov
aam
lcall
std
aam
adc
jle
repnz
cld
insb
and
mov
int3
adc
rcrb
push
cmp
inc
dec
fyl2x
out
cltd
xor
pop
mov
js
dec
into
xor
mov
aas
fildll
push
pop
test
lahf
imul
scas
sbb
idivb
shlb
mov
pusha
inc
pushf
cli
jb
shrb
pop
jbe
pop
pop
mov
fmul
and
ror
imul
push
arpl
mov
push
xor
jmp
xlat
push
sahf
mov
or
push
stos
jnp
mov
outsl
sub
sbb
dec
out
dec
mov
xchg
jge
mov
xor
dec
in
pop
lods
mov
xor
or
arpl
pop
jmp
adc
call
lock
and
push
add
jle
cltd
sbb
mov
jnp
and
bound
repnz
out
push
cltd
lods
inc
dec
hlt
fisttpll
and
mov
lahf
ss
aaa
rcr
iret
mov
mov
sbb
inc
add
ret
pop
mov
cmpsb
ds
into
out
jg
shrb
mov
addr16
shrb
sub
push
fwait
popw
ljmp
jno
cmp
jecxz
iret
sbb
adc
rcll
inc
fisubl
push
xor
mov
outsl
jnp
fnsave
push
lds
adc
in
sbb
push
xchg
mov
inc
lahf
and
mov
ficompl
outsl
mov
jbe
insl
pop
rcrb
xor
ds
mov
mov
push
push
mov
and
movsl
cmp
mov
ret
nop
sbb
out
xchg
xchg
movsb
xchg
and
out
out
ss
mov
shl
rcr
adc
movsl
add
aaa
mov
pop
pop
and
in
je
xchg
push
iret
ret
scas
jl
movsb
jmp
test
adc
vandps
out
jns
das
loopne
mov
leave
pop
xchg
jl
iret
push
in
pop
outsb
into
fisttpl
jp
test
adcl
jnp
or
adc
cmc
adc
mov
xor
loope
adc
ret
mov
repz
mov
int
adc
sbb
cmp
test
jb
cwtl
cmp
int
push
mov
pop
mov
dec
mov
pop
and
mov
lret
testl
cmpsl
repz
cmp
ja
mov
mov
xor
je
rcrb
pop
fildll
loop
repnz
clc
xchg
inc
jnp
leave
mov
jmp
cmpl
mov
xor
mov
int3
pop
mov
in
test
arpl
pop
inc
and
sbb
pop
xor
lds
rclb
mov
pop
pop
femms
sub
aaa
push
ss
push
dec
push
into
aas
jge
xchg
sbb
jo
cld
pushf
xor
mov
inc
sbb
push
jo
popf
mov
fisubl
call
daa
rep
push
and
cmpsl
sbb
push
xchg
sub
xor
test
mov
mov
pop
adc
ss
bound
adc
or
mov
jb
mov
je
jne
pusha
lods
scas
mov
std
aam
add
mov
leave
jge
lret
add
mov
nop
push
loope
ljmp
arpl
mov
lcall
mov
fbstp
imul
xchg
dec
and
push
in
mov
ljmp
lcall
cwtl
stos
push
pop
jnp
stos
dec
insl
aam
enter
ret
hlt
je
cs
sub
je
hlt
ret
pop
es
adc
popa
mov
xchg
sub
rol
fldl2e
and
ret
mov
adcl
xchg
out
sub
or
and
out
mov
or
mov
mov
and
imul
pop
adc
sub
psubsw
sub
add
test
rcrb
outsl
ds
push
mov
sbb
in
lret
data16
push
cmp
dec
jp
jo
mov
mov
xor
sti
xchg
das
or
pusha
in
ret
add
inc
mov
mov
aaa
fdivs
fistpll
inc
and
sub
imul
das
mov
clc
push
dec
adc
inc
shll
js
push
lea
ret
sub
push
add
insl
in
cmp
dec
sub
lahf
cmpsl
cmp
pop
adc
imul
ficompl
inc
jge
aaa
mov
inc
cli
in
and
sbb
test
fists
mov
mov
push
dec
mov
cmp
fsubr
inc
mov
cmp
jne
int3
rcll
loope
loope
pop
push
aad
cli
dec
arpl
jge
addr16
nop
mov
lret
iret
stc
and
jne
inc
shrb
or
mov
jno
mov
jbe
xlat
insl
adcb
mov
std
fs
sbb
mov
sbbb
mov
mov
mov
scas
xchg
lret
repz
dec
sub
jl
popf
stos
cld
sahf
xor
stc
jbe
push
out
sahf
pusha
ljmp
dec
mov
cmp
out
jmp
mov
pop
or
dec
lcall
sbbl
lods
js
or
test
adc
add
fcomps
outsb
dec
pop
dec
dec
cmp
cmpsl
mov
cwtl
in
inc
mov
lock
lds
outsb
icebp
test
mov
out
sub
das
lods
stc
aad
loop
pop
aaa
cwtl
pop
es
sbb
popf
xchg
xchg
pusha
and
sbb
ret
mov
aam
dec
pop
push
ret
call
ret
shl
nop
aam
repnz
push
fldl
imul
les
jge
stc
insb
loop
in
fsubrs
loope
int3
mov
cmpsb
hlt
hlt
sub
mov
mov
dec
ret
movsb
cmp
in
daa
pop
mov
imul
scas
call
jae,pn
jae
cmpsb
ds
leave
lea
test
outsl
in
stos
mov
pop
lret
cmp
pop
test
lock
in
imul
adc
out
xor
pushf
scas
mov
js
mov
adc
fidivrs
and
sti
fsubr
sub
and
std
sub
push
jno
adc
aad
mov
gs
dec
hlt
push
mov
int
lret
fstl
push
adc
dec
or
cmp
das
pop
mov
rorb
push
dec
push
test
xchg
or
xchg
fldz
test
pop
jnp
adc
fs
adc
add
sbb
jmp
mov
stc
and
sahf
or
ret
scas
pop
cmp
addl
push
mov
test
mov
cmp
popf
or
in
mov
mov
mov
into
imul
nop
inc
mov
push
in
sar
jge
jmp
mov
add
mov
lret
inc
fsubrp
xor
jae
subb
sbb
mov
dec
nop
mov
jno
mov
add
and
adc
lcall
loope
xor
bound
pop
inc
andl
xchg
jne
jle
clc
test
xchg
shlb
sahf
mov
sbb
push
dec
sub
push
push
push
pop
stos
push
es
adc
sub
and
sti
push
out
cmp
push
rcl
lret
pop
in
jbe
cmpsl
cmp
jo
or
or
adc
sub
sub
movsb
push
mov
stos
sbb
cmp
mov
and
mov
aas
loop
mov
mov
jne
mov
xchg
fs
inc
cltd
in
movsl
mov
pop
insb
scas
cmp
movsb
and
ret
inc
lea
xor
icebp
sbb
mov
cmp
inc
popa
sub
scas
or
into
addb
subb
cltd
sub
in
xor
jmp
out
and
adc
xchg
dec
xor
cli
mov
movsl
adc
popa
jg
dec
or
xchg
push
sbb
cs
mov
sbb
dec
xchg
ret
aad
jmp
fcomi
fs
sbb
or
test
iret
or
inc
add
fidivs
cmp
mov
mov
ss
loop
ret
gs
arpl
andl
sbb
int3
mulb
mov
notl
ret
inc
xor
aad
cmp
pop
and
push
or
cmp
xor
pusha
jge
repz
sarl
loop
ja
adc
insb
xor
push
andb
cli
ljmp
outsl
or
xchg
cs
daa
xor
frstor
mov
jnp
adc
jnp
lods
cmc
fcmovbe
pushf
push
insl
rcr
mov
orb
mov
outsl
loop
mov
push
imul
or
adc
mov
addl
xchg
push
pushf
dec
hlt
inc
sbb
xchg
mov
or
cwtl
test
dec
imul
sub
mov
push
or
dec
cld
imul
cmpsl
bound
int
mov
test
scas
popa
dec
mov
std
mov
insl
fbstp
into
enter
out
cltd
inc
inc
xchg
cld
pop
xchg
lods
cmp
xor
ret
sbb
negb
inc
int
andb
cmpsb
adc
fdiv
jl
sbb
xchg
popf
in
ja
and
push
pop
sub
loop
sahf
dec
jmp
sub
bnd
movsb
xchg
sbb
pop
pop
scas
call
dec
movsb
sahf
and
cmp
ljmp
scas
std
aad
pop
in
xor
out
xchg
bound
fwait
push
cltd
dec
lock
xchg
dec
dec
rcll
insb
cli
pop
pop
dec
inc
lret
mov
pop
les
adc
mov
xchg
add
mov
inc
ss
popf
pop
inc
mov
pop
jb
clc
sub
add
iret
daa
js
mov
push
repnz
push
filds
xchg
int3
and
pop
pop
std
jae
mov
push
or
rcrl
xchg
js
jecxz
lahf
push
out
xor
lods
test
or
ret
pusha
cmpsb
sub
decl
sbb
mov
xchg
rcll
mov
flds
xor
icebp
out
and
mov
arpl
sbb
imul
add
sti
xchg
pop
cmc
sti
std
lods
gs
xchg
add
orl
mov
cwtl
pop
sub
mov
dec
jne
scas
mov
mov
xor
lds
xchg
or
mov
fld
popa
fiadds
adc
adcl
push
popf
jo
mov
addr16
dec
fisubl
insl
data16
cmpsb
mov
pop
dec
decl
cltd
push
adc
and
and
push
mov
adc
mov
push
repz
add
rclb
cwtl
bound
dec
lods
shl
repnz
imul
stos
das
sbb
sti
and
popa
add
in
xorl
or
leave
cld
mov
inc
push
jge
inc
mov
jmp
cmp
xchg
mov
loopne
imul
daa
cmp
mov
mov
jae
in
daa
xchg
rcrb
clc
dec
dec
push
pop
sbb
push
add
or
cmpsb
les
sbb
inc
not
stos
inc
enter
inc
fiadds
push
js
jg
into
push
push
sub
pop
pop
repz
and
cmp
inc
add
xor
data16
or
int
sbb
inc
ds
lea
mov
out
xchg
dec
test
icebp
icebp
ds
test
movsl
xchg
jl
mov
test
pushf
or
fxrstor
dec
xchg
sbb
adcl
aas
insl
scas
icebp
sbb
inc
lcall
mov
sbbb
cmp
cli
xchg
pop
fistpl
inc
out
out
minps
nop
andl
mov
xor
insl
mov
sub
push
pop
mov
xor
inc
jmp
cmp
addr16
mov
daa
lcall
push
jae
push
mov
movsb
orw
push
dec
xorl
js
dec
cld
xchg
and
mov
out
out
call
test
lods
sub
pop
fadds
add
push
outsl
jo
in
lea
mov
or
iret
mov
call
push
out
sbb
push
inc
popa
pop
outsb
mov
mov
or
adc
mov
ret
aad
cmp
xor
in
sarb
pop
or
pop
scas
loop
pusha
enter
push
jno
jg
call
xchg
add
mov
ret
in
loope
mov
pop
mov
es
mov
jmp
dec
cs
cld
mov
sti
imul
jge
xchg
jecxz
cmp
ds
sub
and
repz
in
jns
data16
mov
add
daa
fisubs
fs
cmp
outsb
and
dec
pop
imul
clc
or
inc
cmp
jg
int
enter
pop
pop
pop
lret
mov
and
popa
cmp
pushl
jb
scas
add
jo
psrlq
cmp
sbb
add
call
and
fneni(8087
out
pushf
sbb
adc
std
nop
jmp
sbb
sbbl
jp
push
mov
lock
adc
jne
xchg
fs
test
bound
divl
mov
enterw
addr16
into
movsb
push
inc
lods
cmp
arpl
in
mov
lahf
jmp
inc
push
mov
mov
and
rcrb
inc
push
mov
push
mov
jnp
and
jg
push
es
das
call
xlat
dec
in
daa
push
mov
int3
adc
mov
dec
pop
pop
idivb
ja
rcrl
shr
sbbl
sub
and
aaa
pop
push
jge
ret
sbb
jp
push
aas
push
jbe
inc
int3
rorb
fcmovne
add
daa
dec
push
sub
rcl
loopne
push
cmc
adc
aas
shrb
adc
scas
js,pn
mov
sub
shlb
push
aaa
dec
pop
lret
ss
xchg
shlb
mov
pop
fmull
lods
lods
mov
jno
pop
dec
inc
xchg
shl
lret
or
icebp
mov
dec
call
enter
xor
add
jne
pop
jge
mov
pop
dec
pop
or
cs
pop
ret
cmc
push
sbb
fwait
and
sbb
add
xor
fcmovbe
iret
inc
cltd
ljmp
js
aaa
mov
cmp
push
setp
mov
fs
push
inc
adc
lret
push
lahf
or
rcll
movsl
cli
or
or
jne
incl
loop
dec
pop
pushf
fucomp
mov
inc
inc
adc
mov
outsb
add
mov
cmpps
enter
xor
xchg
or
pop
int3
jg
cmpl
shl
les
mov
or
push
hlt
sub
gs
adc
xchg
adc
shrb
adc
gs
iret
cmpsb
into
scas
add
push
adc
push
outsl
dec
dec
outsb
imul
test
mov
popf
aad
push
repz
in
loope
xchg
gs
arpl
adc
adc
adc
and
pop
pusha
push
ficomps
faddl
rcll
mov
fistl
aaa
dec
mov
ret
sar
stos
mov
push
inc
fwait
movsb
repnz
push
pop
in
adc
xchg
mov
jns
xchg
push
lcall
cwtl
and
xchg
addr16
adc
inc
push
shrl
int
push
test
push
pop
int
jbe
inc
test
or
movsl
sub
sub
mov
jp
sub
leave
push
clc
iret
sub
outsl
scas
mov
mov
xchg
cltd
outsb
xor
andl
pop
loope
sarl
inc
fdivl
aam
mov
lds
mov
fsubrl
rclb
mov
arpl
jle
jbe
dec
push
jns
cwtl
fdivl
cmp
sbb
push
pop
sub
hlt
scas
dec
rcrb
andl
sbb
jl
je
inc
insl
add
lahf
and
pushf
add
or
and
pop
cmp
jecxz
dec
leave
fs
push
push
xor
jo
sub
sbb
imul
mov
ffree
push
push
add
rcl
jbe
neg
insb
aam
insl
out
outsl
loop
mov
inc
xor
jle
mov
gs
xchg
or
sub
outsl
push
es
xchg
mov
cli
lea
test
xchg
fisttpl
aas
mov
inc
pop
mov
add
pop
movsl
hlt
mov
scas
js
xchg
negl
scas
inc
fildl
xlat
add
es
outsb
xchg
xor
scas
arpl
aaa
fidivrl
push
fldln2
xor
test
adc
push
int
xor
mov
stc
push
gs
test
aaa
and
xchg
dec
mov
shl
cmc
xchg
scas
test
inc
int3
xchg
in
xor
fdivrl
pop
lods
jecxz
cmp
in
xchg
lcall
lock
sbb
aas
cmpsl
out
icebp
pop
pop
icebp
add
fucomip
int
cmpb
scas
mov
cmp
push
cwtl
js
sti
cmp
into
or
sub
aam
or
inc
shll
movsl
loop
xor
mov
aas
dec
cs
cli
or
sub
addr16
jg
mov
xor
lea
cli
or
inc
sti
mov
fsubrs
repz
and
adc
cmc
lret
cmp
mov
xchg
and
test
mov
repz
test
mov
or
sbb
push
pop
into
sbb
and
sub
pop
cwtl
jne
or
adc
stos
mov
mov
repz
dec
ds
add
cmpsb
push
test
xor
shll
ss
xor
adc
frstor
cmp
andb
sub
adc
fistpll
mov
arpl
sub
repz
and
ret
lea
and
cs
aad
shl
xchg
loope
sbb
lcall
cli
and
add
arpl
mov
dec
cmovo
iret
mov
loope
jg
inc
int
push
lahf
shlb
mov
mov
mov
rcl
add
repnz
xor
pop
test
pop
fadds
call
in
cmpsb
xchg
int
outsl
inc
jmp
mov
mov
and
inc
xor
rcr
cmpsl
sub
sub
bound
leave
flds
mov
or
out
add
and
sub
ljmp
sbbb
add
add
test
cs
push
mov
inc
mov
in
js
xor
xchg
sti
or
push
sahf
xor
and
pop
sbb
jae
inc
movsl
mov
add
push
inc
add
mov
xor
mov
stc
or
jne
sbb
sti
mov
inc
in
test
adc
adc
dec
out
push
cmpb
cli
sahf
test
and
shlb
int
mov
sub
les
insb
sbb
mov
insl
les
test
loope
push
lock
pop
and
loope
adcb
icebp
push
loope
pop
sti
js
mov
push
iret
mov
push
jnp
test
jbe
daa
lret
iret
cwtl
lods
sub
push
xor
lods
xchg
cmp
stos
adc
subl
aas
sbb
sbb
push
jl
jo
fsubl
push
test
cltd
insb
clc
or
xchg
xorb
sub
jge
pop
loopne
cs
movsl
fcmove
adc
cmp
sti
sbb
xchg
pop
sbb
push
push
sub
push
dec
popf
jno
and
pop
mov
and
or
cmp
mov
xlat
cmp
and
xchg
mov
pop
adc
jb
fwait
sti
pop
adc
mov
push
call
dec
shr
push
cmp
pop
sub
dec
out
filds
xchg
stos
cltd
and
icebp
xor
push
jge
sbb
arpl
cmpsb
jmp
cmp
int3
add
push
ljmp
sbbl
inc
fnstsw
add
lea
test
jb
cmp
mov
ja
hlt
mov
arpl
mov
fs
adc
repz
add
push
movsb
adc
loopne
add
push
es
jle
mov
insl
sahf
mov
push
pusha
jmp
pop
ja
pop
fnstenv
sarb
jo
jge
xchg
shll
pusha
mov
cmp
out
rolb
int3
aad
and
sub
jge
insl
dec
pop
push
sub
js
fists
roll
sahf
or
enter
jmp
push
mov
out
dec
dec
pop
pusha
clc
fs
sub
stos
xchg
insb
push
pop
test
pop
mov
mov
push
and
dec
sbb
jg
sarb
sub
scas
leave
jle
lods
pop
ljmp
cmp
push
jge
imul
aam
adc
push
out
je
inc
inc
scas
and
hlt
add
lret
dec
hlt
sub
out
adc
sub
dec
xchg
pop
movsb
icebp
jmp
outsl
pusha
mov
shlb
xchg
adc
mov
xchg
mov
popf
sahf
xor
jge
cmp
mov
out
and
es
xchg
pop
cmp
jb
aad
cltd
mov
add
lods
adc
and
dec
xor
and
lds
mov
adc
lahf
pop
cmpsl
and
jge
mov
ss
sbbb
mov
xor
mov
jns
dec
pop
cmp
adc
ja
inc
out
add
jns
rcrb
xor
test
test
jns
jne
fbstp
fisttpl
stos
es
addr16
jbe
imul
jne
mov
adc
adc
fs
add
iret
cli
scas
negb
inc
lret
or
daa
cld
xchg
pop
mov
popf
cmpsl
out
mov
push
pusha
idiv
cmpl
mov
sub
and
arpl
and
ret
dec
add
and
ret
sub
or
arpl
lret
sbb
jae
test
lret
push
scas
jbe
pop
scas
mov
jl
sub
je
testb
scas
sbb
mov
push
hlt
mov
stos
scas
lret
rcr
cs
dec
pop
iret
lods
mov
pop
push
mov
push
jns
xchg
and
in
mov
movsl
sbb
or
jnp
in
ljmp
push
roll
xor
jp
xchg
in
test
stos
inc
sbb
or
fwait
mov
pop
rol
pop
cmc
hlt
xchg
pusha
aaa
inc
jl
dec
popf
mov
inc
enter
cmp
ret
dec
and
and
outsl
or
and
inc
push
inc
inc
loopne
inc
adc
jge
sbb
jle
mov
out
les
add
es
loope
jno
cld
push
sbb
dec
in
test
aad
adc
test
or
mov
jbe
dec
dec
add
and
mov
xchg
sbbl
decb
sub
push
jmp
cmpsl
lock
dec
inc
scas
jp
mov
add
mov
mov
aaa
test
mov
xchg
push
push
in
mov
inc
mov
sbb
or
and
adc
mov
push
adc
movl
cs
fnstsw
push
sti
sub
fbstp
ds
pop
in
cmovl
push
pop
push
int
cs
push
push
psrad
mov
adc
add
xchg
outsl
xor
lods
inc
mov
int
jns
mov
notl
aad
int
rcr
and
leave
and
subl
adc
addr16
push
mov
ja
je
test
mulb
inc
shr
in
aas
xchg
lock
int
stos
mov
or
mov
dec
rcrl
sbbl
sbb
out
jmp
mov
lods
and
sar
data16
lds
xchg
rorl
jne
sbb
mov
xor
addr16
scas
adc
push
mov
shll
or
pop
adc
sahf
cld
ds
in
and
or
lret
in
pop
pop
mov
adc
decl
and
pop
stc
je
pop
fwait
ret
movb
rcrb
ret
repnz
cltd
daa
push
test
dec
pop
mov
outsb
push
lds
iret
fistps
lret
enter
in
pusha
push
dec
push
insl
mov
lods
dec
es
fisubrs
mov
loopne
push
into
adc
mov
andl
mov
mov
mov
adc
loopne
inc
inc
pushf
lods
mov
mov
outsb
out
jno
int3
in
outsl
daa
fiadds
scas
jns
scas
and
int3
addr16
rcrl
xor
dec
dec
in
jnp
xchg
and
inc
sbb
mov
dec
pop
jb
mov
lahf
inc
incb
addl
loopne
xchg
subl
fadds
adc
and
dec
lods
test
mov
inc
addl
xor
jno
in
test
mov
sub
cmpsl
mov
push
call
xchg
pop
xchg
test
js
inc
in
scas
pop
xor
push
fildl
pusha
mov
jmp
xchg
push
jbe
mov
add
psubd
mov
jge
enter
out
mov
cmp
xchg
mov
xor
and
cmp
or
into
push
dec
pop
test
cmp
outsl
ret
out
xor
mov
enter
jns
hlt
mov
inc
adc
adcb
or
xchg
dec
pop
xchg
sbb
imul
inc
mov
cmpb
je
ljmp
bound
xlat
lea
mov
add
push
push
xor
xchg
in
jp
imul
xchg
mov
movsb
cmp
xor
ds
outsb
cmpsb
test
stos
sbb
mov
push
pop
xchg
xlat
ret
jno
into
push
sub
pop
outsb
aad
push
outsl
push
adc
jge
mov
sahf
push
adc
test
pushf
stos
xchg
and
js
xchg
flds
fnstenv
dec
jecxz
clc
sub
sub
sub
inc
inc
lret
stos
fadds
sbbb
data16
lock
pop
insl
aad
mov
mov
divb
ret
pop
aam
nop
and
push
inc
cmp
dec
pop
int3
dec
and
and
shl
xchg
je
xchg
jns
cmp
mov
dec
outsb
sbb
sub
movsl
mov
enter
inc
stos
mov
or
jbe
dec
sub
test
pop
xchg
mov
test
js
xchg
pop
insb
fisttps
push
push
mov
jp
add
dec
push
push
mov
jmp
cltd
add
jmp
ret
lea
out
into
cmp
dec
and
dec
call
inc
mov
xchg
arpl
jno
stc
cmp
imul
stos
cmp
jae
es
mov
pop
dec
xor
clc
cwtl
cmp
push
inc
shrl
jmp
gs
xchg
inc
mov
fisttpll
loop
or
add
push
cmp
sub
sbb
add
pop
es
mov
stos
jle
fsubr
cmp
loopne
push
js
inc
push
fdivr
and
ss
cltd
mov
push
cli
popf
out
inc
push
les
mov
std
out
inc
xlat
dec
testl
cmpsb
test
inc
xor
sub
lea
mulb
xchg
sarl
sbb
jl
movsl
ds
fbld
popl
movsl
cld
xchg
imul
mov
jne
lock
fwait
daa
push
or
add
jge
hlt
in
push
cltd
push
daa
push
xor
fsubrs
add
and
push
shrl
les
jp
clc
jae
adc
stos
sub
in
cmc
inc
imul
jl
mov
or
aam
insb
push
push
jmp
int
jo
mov
pop
sbb
ljmp
mov
fucomip
push
cmpsb
sti
pop
and
ret
stc
push
stc
cmp
addr16
out
incb
cltd
lcall
fucomi
adc
dec
lods
daa
imul
inc
cmp
loop
push
adc
sub
fcomps
lcall
or
lret
into
jle
mov
lret
gs
push
in
es
ss
leave
rcl
hlt
adc
mov
lds
pop
push
pushf
mov
dec
fwait
push
jmp
adc
cmpsl
mov
sbb
pop
loopne
test
popf
add
into
jno
int
ds
add
xchg
fmuls
mov
jp
mov
and
gs
out
xchg
insl
mov
test
lods
popa
enter
inc
push
push
mov
shrb
xor
inc
mov
and
jp
inc
push
mov
mov
jl
pop
mov
adc
mov
pop
outsb
push
sub
imul
stos
adc
mov
iret
pop
xor
into
lock
lods
mov
xor
jmp
and
lcall
and
dec
mov
pop
scas
xor
push
add
mov
xchg
sub
mov
mov
flds
or
fimuls
aam
sahf
rolb
push
out
addr16
and
jle
jg
jb
dec
pop
mov
mov
cmpsl
pop
test
mov
sarb
int
pop
fs
sub
ss
push
inc
sbb
and
sbb
or
or
loope
test
outsl
pusha
lods
rcrl
bound
add
test
sbb
sbb
jl
sti
mov
jns
mov
test
pop
pop
xor
jno
jbe
rcll
loop
scas
jmp
in
xor
sub
bnd
test
int3
test
cli
add
loope
aad
mov
test
inc
fwait
in
adc
mov
cmpsb
mov
xlat
push
push
add
xor
in
jo
repnz
adcl
call
adc
sub
out
cwtl
je
push
xor
inc
and
pop
icebp
test
addr16
inc
or
inc
les
leave
push
push
dec
mov
jne
mov
cld
xchg
mov
shl
into
xchg
push
jmp
outsb
xchg
jmp
fdivrp
mov
stc
out
loopne
filds
add
jae
jmp
js
jmp
jae
cmpsb
call
inc
xor
jbe
stos
jmp
cmp
es
jno
inc
sbb
sbb
test
loop
outsl
or
push
dec
sbb
xor
sub
jnp
mov
pop
mov
aas
data16
add
std
test
in
and
xchg
int3
pop
xchg
dec
in
das
cmpb
xchg
mov
jo
rcrl
or
pop
add
jns
lret
add
jb
mov
or
xorb
imul
and
test
adc
nop
into
int
add
xor
jo
aad
aad
lret
jae
lds
push
adc
in
push
and
outsl
pop
out
pop
sub
push
sub
push
stos
jns
xlat
mov
fdivrs
inc
pop
enter
outsl
jnp
loop
mov
jnp
pop
mov
mov
cld
jns
imulb
lods
adc
adc
sub
js
xorl
icebp
pop
leave
addr16
inc
sbb
mov
dec
adc
mov
das
mov
mov
mov
lcall
fstps
add
mov
lock
cld
or
sbb
xchg
sbb
cmp
push
ljmp
scas
cld
in
jo
or
xchg
sub
aaa
mov
push
sbb
lock
xor
mov
xchg
jb
scas
mov
insb
call
push
mov
pop
filds
cmp
cld
inc
stos
sub
and
push
pop
mov
mov
mov
jle
aas
movsb
call
mov
arpl
call
gs
lods
clc
dec
xchg
push
pop
push
aad
dec
cmc
ficoms
sti
xchg
outsb
insl
mov
sbb
pusha
les
addl
mov
into
in
sti
in
jmp
je
sbb
inc
dec
inc
insb
rolb
sahf
sbb
add
sbb
xor
cwtl
ret
push
lods
sbb
and
xor
int
stos
in
sub
mull
cmpsl
push
add
mov
mov
push
sub
rcpps
add
add
leave
pusha
data16
test
jbe
out
cmp
jle
inc
popf
xor
inc
cmpl
push
cmpsl
js
sub
fdivrl
dec
mov
fsub
cwtl
daa
add
push
dec
and
mov
test
icebp
aad
dec
jb
movsb
push
sbb
popa
add
shll
inc
inc
ficompl
xor
mov
xchg
loop
pop
xor
std
test
movsb
add
sbb
cwtl
jg
and
cmpsb
pop
daa
popf
or
sbb
pop
ret
cmp
js
mov
pusha
push
push
or
pop
jecxz
aas
adc
cltd
pop
mov
incb
fcmovbe
xchg
sbb
mov
and
push
xlat
aas
push
stc
and
lret
xor
inc
daa
enter
pop
push
and
push
pushl
out
cmp
sub
add
adc
adc
bound
xor
xor
sub
cltd
pop
xchg
pop
xchg
insb
or
fs
and
into
push
mov
pop
mov
fsubrp
mov
mov
add
imul
movsb
enter
fimuls
inc
bound
cmpsb
cmp
ljmp
cmp
mov
xchg
fs
int3
aaa
aam
sub
lcall
push
test
pop
gs
test
fistps
add
dec
push
fsubrs
hlt
push
int3
aas
scas
jb
std
lret
cmp
out
or
mov
cmp
cmc
fsubrl
add
pop
shrl
enter
outsb
movsb
dec
dec
mov
push
icebp
pop
cmp
mov
std
dec
repz
and
sti
dec
fwait
inc
test
std
fldenv
aaa
enter
add
mov
mov
inc
pop
shlb
int
dec
jge
fdivrs
pusha
inc
jb
ficompl
cli
dec
add
adc
in
push
xor
adc
ss
je
sub
dec
xchg
pop
xorb
sub
loope
mov
and
jp
mov
xchg
clc
pop
and
rorl
push
ja
ja
xor
adc
fisubrl
jmp
notb
addr16
cmc
add
lcall
push
mov
cld
orb
jnp
lds
cltd
lea
in
and
and
cmc
cmp
push
mov
adc
pop
addr16
cmp
cmp
dec
fiadds
cmp
roll
sbb
xor
jle
pop
jp
mov
std
pop
sub
add
mov
sbb
insb
outsb
int3
arpl
push
jg
and
out
pusha
mov
aam
shlb
das
mov
ret
pop
std
jae
pushf
push
mov
mov
loope
add
pop
cmc
pop
cmp
push
dec
dec
test
jle
in
fwait
jmp
xchg
or
fdivl
mov
xlat
stos
test
rorl
dec
dec
push
cltd
loope
mov
mov
pushl
scas
xchg
ja
int
mov
and
sbb
jnp
hlt
das
dec
sbb
daa
cmpsb
jl
xchg
ret
cli
jne
cmp
sahf
adc
mov
xor
pop
in
pop
sahf
push
cwtl
js
push
es
xchg
jmp
sbb
cmp
das
test
aam
cmp
lods
test
mov
mov
in
or
inc
psubq
xchg
inc
xorb
nop
data16
call
lret
dec
and
mov
cmp
pop
les
cmp
push
and
mov
lods
imul
fistps
lea
or
xchg
jb
lock
xor
das
pushf
push
scas
inc
push
xor
mov
arpl
dec
inc
adc
rolb
lock
fldt
push
inc
ret
push
mov
sub
leave
push
or
or
mov
ret
test
repnz
clc
and
sub
mov
orl
lock
fs
mull
push
or
lahf
and
or
mov
add
ffree
dec
and
cwtl
pop
fidivl
cmp
mov
mov
or
test
jne
sub
mov
fisttps
insl
jge
add
cmpsb
sbb
push
js
lods
rorb
dec
push
cmp
push
call
push
inc
repnz
inc
jb
adc
outsb
rcll
mov
lods
jle
pop
insb
fldt
mov
mov
jecxz
xor
push
mov
cwtl
mov
leave
sub
lods
or
push
in
mov
loope
adc
inc
xor
fmull
push
movsb
sbb
xor
pop
or
out
mov
pop
scas
xor
sti
cmc
push
xor
xor
adcl
stc
loop
add
and
pop
loope
shrl
adc
clc
dec
aaa
xor
sub
jmp
pop
xchg
and
fsts
mov
or
fbstp
and
es
outsl
pusha
cltd
jns
xor
adcl
das
cmp
lahf
add
mov
push
popa
inc
or
push
mov
lcall
test
in
sub
pop
jae
push
mov
jno
jecxz
mov
in
inc
std
xchg
out
test
aaa
jg
mov
and
aaa
lret
rclb
std
sbb
add
ljmp
jne
fnsave
push
sarb
lea
dec
fsts
cmp
bound
mov
jo
repz
rcrb
iret
pop
outsb
subl
or
mov
pop
flds
cmpsb
inc
fidivrl
int3
xor
sub
sti
cmc
in
mov
sub
enter
call
mov
imul
add
std
mov
pop
xchg
inc
rcr
ss
or
sbb
pusha
inc
sub
mov
insl
aad
loop
addr16
std
scas
jno
in
push
xchg
jo
pop
cltd
dec
loopne
xor
lods
insb
icebp
sbb
mov
xchg
xchg
je
scas
in
jmp
iret
fdivl
lock
ljmp
inc
mov
testb
xor
xor
jo
mov
adc
cltd
inc
mov
imul
xchg
dec
xchg
add
fmull
call
cmp
nop
insl
dec
sti
jbe
add
aad
push
xchg
sub
inc
xor
stos
jle
call
js
subl
les
jle
mov
dec
rcrb
xchg
shrl
pop
jge
add
sbb
mov
mov
leave
sub
mov
jns
mov
sarl
test
mov
mov
shl
and
pop
inc
lahf
push
cmp
leave
pusha
cvttps2pi
xchg
movsl
out
pop
jbe
out
push
enter
fsubr
js
and
adcb
cmp
in
std
sbb
pop
add
xchg
insl
mov
or
pop
int3
rcrb
iret
push
std
sbb
jae
mov
jns
cmc
mov
sbb
leave
add
mov
fsubs
icebp
insb
adc
cmp
mov
jo
jl
insl
jnp
popf
adc
cwtl
outsl
xor
mov
dec
aad
jle
sub
sarl
xor
cmp
sub
pop
or
adc
mov
aad
les
or
jb
pop
push
cmpsb
mov
fldcw
nop
scas
mov
add
in
lock
pop
cld
loope
unpcklps
xor
add
roll
add
or
popa
test
or
inc
into
sub
mov
into
movsb
dec
sbb
subl
add
je
pop
ret
and
mov
mov
xlat
adc
and
in
cwtl
and
adc
push
mov
bound
jb
fmuls
sbb
adc
in
jbe
aas
andl
push
loop
shr
pop
out
ret
sbb
mov
sub
sub
out
push
outsb
sub
js
mov
in
jge
or
arpl
imul
imul
jns
dec
inc
lret
cmp
out
fdivrs
subb
call
adc
jge
bound
and
adc
sub
scas
cmp
xor
sub
dec
jmp
insl
pop
cmc
adc
int3
out
ja
mov
pop
sti
mov
push
setnp
xor
fwait
sbb
inc
add
rcr
sbb
movl
shl
cltd
enter
xor
frstor
loop
xor
adc
nop
mov
lcall
cmp
sbb
mov
clc
cmp
and
dec
ljmp
push
jge
fbstp
push
je
sbb
lret
aaa
sbb
add
insb
in
cwtl
daa
es
hlt
aam
lfs
dec
jle
lods
push
xor
lcall
pop
stos
inc
cmp
std
or
movsl
mov
mov
push
mov
mov
enter
ret
fstpl
mov
inc
orb
push
and
dec
cmp
repz
inc
loopne
push
cmpsb
loop
cli
or
popf
push
jle
test
rclb
cli
in
add
ror
push
shrb
enter
int
inc
jae
mov
shr
xchg
xlat
jne
adc
push
mov
fcmovu
xchg
out
sbb
and
fistl
pop
ficoml
fildl
addr16
lahf
scas
cltd
out
dec
and
push
adc
sbb
cmp
or
mov
into
xor
mov
adc
cmc
decl
mov
xchg
sub
mov
fistpl
inc
mov
jecxz
cs
pop
in
cmc
fdivrs
ds
pop
jnp
mov
mov
nop
sbb
inc
lahf
jb
and
jl
cmp
jge
stos
xchg
ret
jno
jl
bnd
loope
rcrb
aaa
cmp
cmp
jae
scas
mov
sti
or
cmp
mov
push
push
pop
dec
pavgw
mov
mov
xor
test
in
mov
ljmp
cwtl
mov
jb
les
and
pop
nop
xchg
jne
inc
rclb
lcall
lods
cmp
mov
sbb
repz
pushf
mov
push
in
xchg
push
push
xchg
shll
dec
out
aas
cmc
stos
ds
cmp
pop
in
in
test
cmp
dec
loopne
jbe
lret
mov
add
mov
movsb
cmpsb
jns
xchg
stos
sub
notl
dec
loope
cmp
pushw
out
lods
xchg
mov
cmp
setge
adc
inc
and
inc
jmp
sub
jns
inc
mov
into
add
or
lods
mov
push
shll
mov
lock
insb
push
pusha
mov
les
cmc
pop
jmp
dec
fs
jno
jl
xchg
aas
outsb
ret
mov
iret
outsb
sub
loopne
es
pop
idivb
dec
mov
xlat
cmp
pop
test
fidivrl
adc
pop
aad
adc
xor
mov
mov
inc
stos
sub
adc
cmp
add
xchg
lret
data16
mov
fildll
add
push
shll
mov
and
mov
testl
inc
in
xchg
and
cwtl
xor
mov
mov
fwait
popf
and
jb
dec
jmp
sbb
out
mov
mov
xor
aad
cmp
mov
jmp
ficompl
adc
out
imul
lods
pop
adc
cmp
mov
or
call
sub
fstpl
mov
dec
mov
or
and
in
or
mov
fstpt
mov
movsb
adc
scas
cmp
xlat
jae
pusha
stc
popf
int
aad
mov
jmp
mov
jp
sub
ret
push
je
data16
inc
dec
movsb
xchg
mov
sub
fdivp
or
gs
fwait
xchg
xor
shrl
jae
inc
je
jbe
cmp
std
adc
mov
pop
mov
lret
dec
push
xor
incb
test
mov
fistpl
xchg
ja
adc
sub
insb
js
cltd
cs
stc
push
lret
sbb
push
in
or
jns
add
pop
aas
mov
fidivl
aad
adc
movsb
btc
clc
xlat
lods
xchg
add
sbb
lcall
xor
cmpsl
gs
mov
cmp
loop
xor
jb
popa
mov
lahf
mov
bound
cs
add
shr
icebp
cmp
xor
pop
dec
add
adc
sub
xchg
adc
in
sti
jg
xchg
sub
push
sbb
jne
dec
cmpsl
dec
and
mov
shll
mov
iret
data16
jmp
and
xchg
xchg
inc
cltd
xor
rcrl
push
clc
outsl
lret
xorl
or
and
cld
or
or
in
inc
pop
sub
inc
pushf
push
fucomi
cmp
flds
ds
cmp
fstpl
imul
mov
lea
ret
jecxz
sbb
jmp
ss
cwtl
and
push
dec
mov
icebp
jp
out
test
dec
dec
jo
test
shl
cmp
fs
popa
xor
ret
fidivrl
sarb
or
scas
inc
shrl
fstpt
push
cltd
add
or
cli
add
fwait
hlt
test
jecxz
mov
js
mov
addb
aas
push
int
inc
stos
jp
aam
cs
popa
clc
inc
lret
mov
mov
or
lcall
mov
insb
out
dec
xchg
shlb
cmp
mov
add
inc
sub
lret
mov
inc
mov
add
mov
lea
outsl
lea
lock
imul
int
push
sbb
dec
dec
das
cmp
test
lods
mov
inc
sbb
lret
sti
xchg
fisubl
mov
hlt
movsl
cmp
cld
ucomiss
dec
stc
xor
rorb
push
cmc
and
mov
call
into
insb
cmp
ror
dec
test
mov
sarl
lds
lahf
pusha
shrl
xchg
addb
aam
push
cmpps
and
mov
out
mov
fdiv
mov
fadds
daa
jge
and
and
adc
pop
dec
fisubs
sbb
mov
xlat
insl
stos
insb
push
push
xchg
jp
or
out
ja
movsb
inc
pop
mov
adc
dec
push
sub
cld
or
mov
pusha
jbe
repz
iret
sub
xchg
scas
mov
adc
inc
cld
out
or
pop
loopne
movsb
adc
repnz
cmp
pop
sahf
ret
inc
pop
cmp
sbb
loopne
enter
data16
fstps
call
mov
lock
cmp
mov
push
mov
sbb
jbe
rorl
lods
and
mov
mov
imulb
or
dec
mov
aam
xor
movsb
mov
mov
and
test
pop
jecxz
lea
mov
lcall
mov
mov
sbb
xor
xchg
mov
aad
mov
push
jp
movsl
imul
out
shrb
sbb
rclb
out
cld
movsl
cmp
mov
sub
pop
push
push
into
pop
dec
cmpsb
xchg
cmp
stc
paddusb
mov
ja
or
or
or
xchg
pop
push
and
pusha
shlb
clc
xor
outsl
inc
jbe
mov
nop
lds
or
cld
jbe
and
mov
inc
jg
insl
lock
mov
call
push
divb
xchg
sbb
jg
push
jne
xor
lret
js
push
iret
push
aam
pop
jle
or
cmp
sarb
and
push
add
or
push
sbbl
sbb
inc
loopne
int
test
repz
sti
or
lods
inc
sbb
and
mov
jge
test
xor
movsl
hlt
xchg
loope
les
divb
dec
pusha
outsl
dec
loope
cltd
add
andb
sub
loop
jle
cmpsl
and
and
pop
xor
xchg
cmpsl
sub
mov
idivl
fpatan
jb
stc
nop
adc
mov
mov
cvttss2si
adc
sbbl
aas
out
inc
imul
push
into
leave
pusha
add
flds
jmp
xor
lods
inc
xlat
push
pop
movsb
mov
adc
push
lret
pop
cmp
mov
popf
mov
inc
mov
jae
jmp
mov
shrb
mov
or
sub
daa
stos
sti
rclb
push
push
imul
shlb
pop
inc
cmpsl
sub
scas
jle
ljmp
notb
xchg
shl
mov
aas
pop
leave
test
xchg
jns
dec
push
mov
subb
jo
mov
cmpsb
das
cs
cmp
lds
out
mov
cmc
icebp
idivl
pop
aam
addr16
mov
out
imul
shl
cmp
adc
shrb
adc
push
jo
sbb
fbld
lock
xor
inc
lret
cld
xchg
sahf
ds
and
aad
call
xor
shlb
in
push
push
inc
pop
xor
hlt
push
aam
je
push
sub
xchg
pop
pop
dec
jne
xor
inc
xor
loope
repz
stos
fadds
lock
das
enter
push
pop
arpl
cmpb
lea
fnstenv
aam
adc
daa
notl
sarb
cmc
jne
inc
ss
add
lcall
sub
inc
dec
inc
cwtl
repnz
sbb
cmp
lret
es
xlat
pop
xor
stc
gs
daa
rolb
aaa
xchg
mov
or
sub
sub
push
mov
inc
adc
imul
jecxz
jb
aas
adc
test
dec
popa
cmp
stos
call
push
jge
int
xorl
cmc
daa
push
and
mov
andb
ljmp
sahf
xor
pop
xchg
mov
loopne
jno
xchg
mov
add
pop
clc
test
inc
ficoms
sbb
add
push
rorl
imul
nop
xchg
jl
and
lcall
outsb
sub
call
in
fwait
test
inc
pop
dec
adc
int
pop
repnz
mov
fs
cmpsl
cmpsl
lods
sub
enter
dec
or
cmp
jg
sahf
js
sbb
xor
je
sar
js
call
adc
pop
add
xchg
jmp
push
push
aad
xor
imul
sbb
out
cs
cmp
arpl
lds
scas
lods
or
adc
jl
lods
lea
mov
or
pop
test
push
add
mov
mov
jbe
fisttpll
shr
data16
ss
and
push
cwtl
movsl
xchg
dec
out
pop
or
jg
in
out
sbb
mov
mov
mov
jnp
lods
loop
mov
shlb
mov
sub
inc
sahf
mov
jmp
inc
mov
pop
rcll
sbb
test
cmc
mov
xor
adc
iret
aas
xor
jo
dec
dec
mov
and
mov
mov
add
cmp
push
out
xchg
data16
push
icebp
inc
and
out
xor
inc
mov
jmp
adcb
inc
cmpsl
push
inc
mov
mov
mov
inc
add
xorb
fwait
movsl
sub
pop
pop
je
sti
sbb
in
or
adc
inc
dec
jmp
jb
mov
pop
fwait
jns
stos
stos
mov
flds
mov
shl
divb
rep
inc
add
sub
mov
adc
lret
sub
mov
push
faddl
movsb
dec
dec
lea
nop
ss
cwtl
inc
jmp
out
test
push
arpl
mov
cltd
mov
lea
mov
push
xchg
stc
nop
mov
sbb
xor
xchg
sub
mov
mov
cli
jno
popa
dec
ljmp
jno
sub
ret
pop
jl
sbb
sahf
test
mov
rorb
fisttpl
mov
and
push
bound
mov
rclb
ljmp
or
rcll
or
movsl
and
test
pop
in
fcmovnb
sbb
cmc
lea
mov
sub
mov
stos
jnp
sbb
nop
mov
lahf
sti
mov
mov
xchg
subb
lods
inc
es
hlt
mov
xchg
mov
out
xchg
pop
nop
and
test
lods
cmp
cmpsb
sbb
addb
rorl
and
add
leave
push
mov
test
mov
fisttpll
insl
jnp
int
iret
adc
imul
loopne
test
cmp
mov
repnz
arpl
sysexit
sti
xchg
cmp
out
ja
ljmp
or
jno
or
insl
jae
daa
xor
or
sub
push
popa
pop
repz
imul
lahf
mov
mov
cmpsl
out
mov
mov
cmpsb
mov
int
test
mov
sbb
iret
sbb
xor
lahf
rcll
lods
mov
insl
jne
jecxz
push
sahf
push
fcomip
jnp
je
inc
stos
movsb
ja
push
inc
enter
mov
int
mov
or
arpl
and
rcrb
call
mov
out
push
jmp
cmpsb
jns
jno
shrb
rorb
mov
mov
mov
add
sub
adc
jl
sub
lret
sbbl
cs
cmpsl
cli
adc
adc
jg
ljmp
gs
pop
pop
je
push
ss
in
out
or
cld
or
pop
jbe
sub
cltd
jmp
dec
add
js
lods
inc
inc
mov
loope
pop
ds
pop
mov
sub
or
sub
arpl
decl
or
into
mov
iret
jns
out
xor
jnp
aad
lret
and
out
lods
xchg
xchg
add
sti
jae
or
inc
js
fs
xchg
inc
mov
into
adc
arpl
loop
and
notb
inc
push
movsl
je
pop
scas
mov
flds
les
gs
loopne
mov
test
dec
xchg
sub
movsl
icebp
mov
add
mov
mov
ljmp
out
dec
adc
enter
mov
adc
pop
cmp
pushf
xor
stos
loop
xlat
mov
lea
insb
dec
xor
stos
mov
daa
add
pop
test
xchg
add
xchg
sub
inc
movsb
pop
fsubl
andl
mov
xor
sbb
xchg
test
call
ja
push
test
dec
je
inc
sbb
pop
xor
shr
push
or
mov
jmp
push
lds
shrl
adc
mov
inc
mov
xchg
mov
js
dec
ljmp
ja
iret
xchg
loopw
inc
pop
or
sub
fwait
sub
lret
rclb
lds
lods
push
mov
mov
jo
sbb
mov
into
pop
jge
sbb
sbb
inc
ret
mov
ficomps
pop
push
js
jge
xchg
outsb
mov
les
sub
inc
pusha
and
lret
movsl
jl
pop
iret
and
repnz
cmp
iret
mov
jnp
adc
pop
add
shlb
xlat
dec
ds
and
lods
add
pop
mov
int3
test
mov
xlat
int3
cmp
xor
call
mov
ss
mov
imul
fs
and
fsubs
jbe
repnz
xor
jb
and
stos
push
loope
out
jge
dec
in
aam
cmp
xor
mov
hlt
sbb
ja
dec
stos
fwait
sbbl
data16
scas
test
and
iret
push
adc
or
or
imul
pop
lahf
das
in
das
adc
pop
lcall
aad
sahf
pusha
push
idivb
sar
xlat
push
std
outsb
loope
push
add
in
and
es
int
icebp
cvttps2pi
rcrb
push
fidivs
imul
pop
and
sbb
push
in
jmp
mov
mov
sbb
sbb
sub
pop
jb
testb
add
xchg
push
sbb
movsl
sbb
andl
adc
mov
pop
cmpsl
dec
mov
push
int3
imul
iret
and
xlat
repz
push
flds
adc
addr16
inc
test
jbe
lret
lret
sbb
cs
mov
sarl
jo
std
cmpsl
sbb
hlt
mov
rcr
mov
mov
repz
sub
stos
mov
rcll
into
or
mov
xor
jecxz
call
mov
adc
fidivrs
fisubs
push
sub
adc
push
jnp
jl
test
fbld
pushf
fdiv
jno
aaa
je
xor
pop
incl
iret
add
iret
std
inc
xchg
call
cmp
lods
push
inc
aad
mov
stos
sbb
jns
cli
mov
xchg
push
cli
xchg
shrl
add
jo
movsb
push
pusha
gs
push
lock
inc
push
enter
push
insb
xor
jb
jo
movsl
mov
pop
mov
int3
icebp
mov
loop
push
insb
ret
push
jnp
inc
in
dec
pcmpgtw
push
icebp
rcrb
xor
pop
sub
push
ds
shr
negl
jmp
popa
sub
pop
lcall
xor
push
addr16
fiaddl
test
test
outsb
das
cmpsl
cmp
insl
mov
int3
push
rol
in
jecxz
push
mov
add
push
icebp
xchg
adc
mov
scas
fwait
push
sbb
cmp
popf
sub
into
pop
pop
scas
push
ror
pop
sub
lods
jo
dec
movsl
push
sub
sbb
jbe
cmpb
mov
jg
test
push
add
test
sub
mov
pop
cmp
add
jb
inc
xchg
outsb
rclb
das
stc
lea
jg
pop
xchg
adc
mov
leave
dec
in
add
mov
popa
xrelease
sub
jle
inc
inc
mov
imul
jnp
fdivl
dec
aaa
or
sarb
cmp
mov
jmp
enter
lea
push
pop
jge
cmp
fwait
into
in
xor
stc
sbb
push
sbb
mov
push
pop
cmp
jecxz
movsb
inc
insl
sub
ja
pop
jnp
add
pop
gs
jns
mov
push
shl
mov
mov
or
xchg
adc
repnz
cmc
xchg
push
xchg
insl
test
mov
fnstcw
idivl
inc
mov
fs
jb
cld
jnp
test
push
jo
cmp
dec
call
sahf
xor
popf
pop
mov
andb
mov
push
xchg
nop
inc
jecxz
push
jbe
inc
sti
push
lcall
cmp
int
clc
pop
adc
dec
lods
lret
add
jnp
push
insl
lahf
daa
jg
and
mov
sub
loopne
adc
in
inc
and
push
mov
pusha
pop
or
lds
jmp
lds
mov
jle
iret
jge
cs
mov
mov
jp
faddl
cltd
ss
sbb
or
jnp
xor
cltd
push
rol
hlt
add
pushw
xor
aaa
xchg
iret
sub
aam
sub
or
xor
pop
mov
xchg
div
mov
aam
lds
clc
jecxz
hlt
das
es
dec
sbb
cltd
dec
dec
mov
jnp
inc
push
cmp
leave
cmp
repnz
call
add
mov
leave
xchg
shrb
jo
stos
jne
xchg
scas
jo
push
test
jnp
push
xor
mov
sarb
xchg
sub
sbb
mov
sbb
notb
mov
aaa
popf
xor
push
mov
lea
pop
sahf
lods
push
and
mulb
outsl
adc
inc
push
jno
inc
mov
jge
rol
push
fstl
in
pop
xor
push
in
pop
je
ja
stos
jo
insl
mov
mov
jp
ja
adc
sti
outsl
out
fwait
mov
lahf
stos
roll
jle
xchg
jae
subl
pop
movsl
and
jmp
add
ret
outsl
subb
addl
lds
pop
xchg
pop
lcall
sub
mov
mov
idivb
sbb
mov
fs
rclb
dec
or
mov
adc
imul
push
aad
xor
jb
sbb
sti
adcb
js
cmp
inc
xor
jne
xchg
xor
xchg
lods
test
repz
add
shlb
lock
add
sub
mov
nop
xor
icebp
cvtdq2ps
loop
mov
rcl
std
xchg
gs
lds
loopne
lea
out
or
cmp
cmp
push
push
jl
movsb
stos
adcb
nop
push
or
mov
mov
adc
cltd
hlt
std
pop
imulb
sti
push
dec
push
test
dec
push
enter
cltd
jb
add
dec
adc
lock
cli
dec
xor
mov
repnz
dec
loope
jne
pop
mov
pop
in
add
out
cmp
loopne
fldt
xchg
mov
and
test
dec
mov
pop
fsubrl
cmpsl
mov
pusha
imul
jbe
push
stos
dec
xor
ja
push
imul
cli
pop
shll
enter
mov
fdivrs
pop
pop
mov
ds
or
andb
or
int
mov
arpl
scas
fwait
and
mov
lods
cs
cmpsb
lock
sbb
jnp
push
es
inc
pop
ss
or
push
imul
test
mov
das
aam
push
add
mov
push
mov
js
frstor
jecxz
sub
mov
jne
xor
mov
sbb
xchg
das
imull
and
sbb
push
or
inc
mov
jno
outsb
pop
negb
mov
fnclex
insl
inc
pop
xchg
mov
or
andl
ja
into
cmp
movsb
xchg
movsl
or
push
adc
test
mov
ja
popf
das
insb
and
arpl
push
call
cmp
fwait
into
out
dec
out
mov
adc
cmp
xorl
fidivs
ret
mov
push
lods
inc
call
int
add
mov
fidivs
aam
jl
mov
mov
lret
mov
pop
jmp
mov
test
jecxz
or
jbe
mov
cmp
mov
les
and
push
add
movsl
push
xor
and
xchg
add
mov
cmc
pop
repz
fsubrs
lcall
push
mov
int3
jg
aam
cmpsl
mov
xor
push
cli
push
dec
loop
sbb
stos
pop
and
cmp
dec
stos
out
push
sub
mov
test
inc
pop
rorl
sarl
fstl
add
xchg
add
inc
xchg
xor
fwait
xor
fiadds
push
movsb
mov
ret
scas
jmp
icebp
sub
int
mov
js
jns
sbb
pop
mov
cwtl
mov
cmp
mov
jg
xor
shlb
sbb
into
cmp
jne
out
pop
mov
orb
testl
add
lahf
push
insl
or
gs
int
cmpsb
enter
pop
add
orb
mov
xor
pop
lds
xchg
lods
mov
sub
fnstenv
mov
mov
and
cs
icebp
scas
out
sahf
inc
das
or
or
enter
jb
fs
rcll
imul
lahf
cld
insb
imulb
mov
roll
clc
or
dec
lahf
mov
or
sbbl
jns
subb
mov
ss
cmc
mov
daa
lods
xor
adc
jge
fnsave
stc
je
sbb
dec
mov
repnz
dec
push
repz
dec
fdivr
lcall
fsubr
test
sbb
adc
int3
popf
out
jmp
mov
jecxz
mov
dec
or
sub
sbb
or
fcompl
outsl
stos
sbb
jmp
or
test
insl
cltd
jg
popa
add
jmp
push
push
in
cltd
xor
fdivrl
adc
rcl
lds
cmp
shlb
out
inc
clc
imulb
dec
movsb
dec
add
adc
inc
loop
in
mov
in
pop
hlt
ss
aas
xor
in
and
xor
popa
or
push
ja
sub
mov
lret
pop
sbb
repz
ss
add
subb
jno
imul
dec
lock
das
xor
dec
cmc
js
out
insb
jp
push
mov
and
loopne
pop
cmp
dec
div
or
outsl
push
in
js
std
mov
pop
push
push
adc
call
xchg
cmp
xor
ljmp
ljmp
aad
xor
sbb
test
xlat
mov
push
mov
pmaxub
mov
pop
and
pop
jmp
fs
aam
mov
arpl
xor
mov
test
sub
add
mov
pop
pop
dec
movsl
lret
mov
add
das
addr16
pop
mov
leave
jns
lods
pop
jo
jno
push
cli
xchg
ffreep
stc
test
test
js
mov
xorl
jne,pn
mov
shll
stos
cmp
lods
aaa
pop
test
jecxz
and
sbb
xchg
xchg
in
icebp
sub
and
cmc
xchg
lods
push
mov
ja
cmp
jae
xchg
shrl
cmp
scas
fcoml
add
mov
jns
inc
movsl
lods
cmpsl
mov
jle
or
out
int
lods
add
cmp
push
mov
pop
xor
mov
dec
xchg
outsl
and
mov
nop
int3
mov
out
xchg
in
insl
repnz
ret
repnz
xchg
jg
sub
jp
add
popf
mov
repz
fdivs
push
imul
es
jb
pop
add
ja
mov
xor
out
add
stc
shll
sbb
and
stos
testb
js
fstpt
fidivl
repz
cmp
mov
cltd
xchg
inc
mov
popf
xchg
or
xor
cmp
push
mov
pusha
cmp
sbb
mov
xlat
push
in
or
jae
or
push
stc
inc
push
or
nop
into
mov
and
sub
fsubl
add
mov
dec
pop
aas
adc
aam
shlb
addr16
inc
sbb
cmp
or
in
pop
mov
pop
lret
lock
add
cli
mov
cltd
cmp
sbb
lahf
iret
movsb
ficomps
rcll
pop
add
cld
mov
sbb
ret
pop
xchg
push
push
mov
rcr
jno
sti
jbe
imul
in
fnstsw
mov
lea
xlat
stc
cmpsb
adc
jmp
insl
sub
xor
cld
xor
stos
mov
adc
ret
adc
pushf
add
adc
add
lahf
cld
push
xchg
pop
test
cmp
fwait
or
sahf
clc
enter
jmp
pop
sarl
xchg
push
lods
lods
outsl
jmp
adc
jecxz
and
xchg
add
sbb
and
inc
ss
push
mov
nop
cmpsb
cmp
xchg
dec
loop
fstpt
cmp
daa
insb
rol
les
and
aaa
pop
out
push
or
xchg
testl
or
mov
dec
cmpsb
cmp
pop
dec
xor
outsl
movsl
cmp
test
push
pextrw
adc
xor
sysexit
mov
mov
cltd
fidivs
adc
jge
div
push
clc
add
dec
xchg
das
mov
movsl
xor
xor
xchg
cmpsl
jmp
sub
dec
or
fwait
sbb
pop
fiaddl
lea
and
loop
sub
mov
lret
addr16
cmc
and
jl
fsub
into
pop
push
inc
mov
jns
jne
imul
mov
cwtl
sbb
sub
pop
inc
push
popf
dec
mov
sbb
mov
out
xlat
mov
fmuls
and
pushf
xchg
jno
ja
xchg
in
xor
push
xchg
pop
scas
imul
dec
and
xchg
jne
pop
sbb
nop
insl
dec
lods
jp
movsl
inc
ja
xor
mov
jg
sub
int
jne
inc
mov
loop
jne
jae
mov
or
fnstsw
stos
test
dec
mov
adcb
mov
mov
out
loope
orb
mov
std
xchg
call
or
out
cli
mov
popa
mov
bound
and
push
insb
orb
pop
hlt
pop
pushf
pop
das
dec
ret
hlt
das
loopne
jne
ja
lret
in
out
sub
mov
sbb
push
mov
arpl
adc
popa
nop
mov
call
mov
sbb
stc
in
js
ret
push
xorb
shl
jne
je
push
mov
mov
mov
imul
lea
xor
xor
mov
stos
arpl
insb
mov
cmp
shlb
test
sbb
cmp
jno
lret
aaa
dec
aas
inc
push
call
dec
sbb
dec
outsb
xchg
mov
shlb
jb
dec
imull
mov
icebp
call
lods
pusha
iret
xchg
adc
dec
add
add
sbb
imul
pop
ret
lret
cmp
and
imul
jae
jmp
or
push
scas
cs
jne
add
iret
cmp
je
push
inc
adc
pop
movsl
xor
jle
jecxz
mov
cmp
stos
sub
into
jne
rep
push
cltd
adc
int
out
addr16
or
out
inc
outsl
cmp
negb
xor
daa
mov
lcall
push
jmp
iret
dec
stos
sbb
fwait
sti
add
xor
xchg
inc
loopne
mov
imul
mov
push
pop
sahf
and
je
aaa
mov
jecxz
xor
aaa
jbe
repnz
outsl
and
call
add
inc
mov
test
sub
cli
nop
cmp
inc
sub
dec
test
sbb
int3
dec
push
adc
cld
lods
outsb
out
movsl
nop
push
mov
out
in
xor
shlb
fists
loope
xor
call
cltd
aas
das
out
or
repz
pop
sbb
jp
mov
addr16
pop
ja
loopne
pop
out
adc
sub
cmpsl
mov
mov
jg
out
in
mov
lret
cmovs
ja
roll
cwtl
xchg
stos
enter
or
xor
shlb
mov
fistl
fcompl
pop
cmp
dec
rolb
rorl
mov
mov
push
pop
fstl
pop
arpl
rcll
adc
cmp
roll
push
fildll
scas
mov
shrb
push
je
adc
call
xor
and
mov
jl
lret
add
std
into
add
stos
and
push
lret
jb
into
mov
sbb
ss
push
mov
rorb
mov
xchg
testl
sbb
xchg
gs
aad
pop
mov
pushf
in
jno
std
xchg
sahf
mov
ret
mov
sbb
arpl
push
loope
jl
mov
aad
lret
fistps
test
adc
jmp
xor
dec
lds
push
pop
cmp
scas
idivl
lods
xchg
rcrl
clts
cmc
lods
inc
es
lea
mov
xor
xor
push
jo
mov
sub
mull
mov
cmc
mov
mov
stos
aam
mulb
mov
out
adc
mov
lods
stos
add
lea
xchg
stos
mov
aam
xor
sub
popa
out
xchg
xor
in
es
rcr
mov
in
jns
mov
xchg
pushf
mov
and
cmp
jecxz
pop
lcall
xor
cmc
sub
es
shll
mov
and
pop
and
xor
inc
cltd
out
push
aam
mov
ficompl
mov
mov
std
lods
iret
lock
inc
cmp
loopne
mov
nop
dec
push
cmp
mov
jno
lods
je
js
lock
call
mov
cmp
stos
mov
lds
add
imull
test
popa
adc
addr16
cmp
cmp
and
cmc
scas
adcl
stos
inc
sahf
pop
xchg
aas
push
jae
mov
add
aas
ja
lods
and
stos
pop
hlt
fisttpl
negb
sarb
ss
sbb
shlb
pop
add
adc
and
xor
jmp
loopne
pop
mov
shlb
push
aam
jl
cmp
or
stc
out
adcl
xor
mov
ss
mov
mov
mov
sub
imul
pop
ljmp
cmc
mov
inc
enter
xchg
jmp
xor
push
jmp
sub
dec
dec
mov
jb
and
inc
dec
sahf
fsincos
dec
adc
inc
push
sub
add
inc
and
pop
push
subl
xchg
jg
and
dec
lods
inc
inc
jmp
lret
and
adc
xchg
inc
outsb
dec
dec
in
lock
xchg
aaa
stos
jnp
cmp
mov
sub
jecxz
adc
jle
fsubp
mov
jge
jmp
or
pop
sub
shl
pop
std
mov
cmp
test
push
fcmove
xor
lds
cmpsb
daa
push
stos
adc
mov
call
test
leave
lods
cwtl
jmp
dec
add
icebp
mov
pop
add
cmp
xchg
adc
or
fidivl
stc
shrl
andl
push
rcrl
xlat
sbb
test
daa
outsl
imul
mov
fistpl
lcall
mov
cld
bound
sbb
into
in
jp
jl
inc
movsb
cmp
les
adc
fmul
das
dec
pop
jo
push
in
sahf
sub
add
dec
loop
mov
arpl
aas
and
xorl
adc
adc
push
mov
rclb
pop
and
enter
loopne
push
adc
mov
lock
mov
adc
xor
jnp
lods
les
sub
push
movsl
pop
repnz
jb
mov
in
dec
aas
je
dec
loope
sbb
push
adc
imul
mov
sub
lea
jl
ds
aas
cmp
insl
jge
bnd
call
jecxz
fsubr
dec
in
or
imul
mov
orl
imul
ret
pop
cmp
xlat
loope
or
cmp
and
adc
lcall
nop
push
ret
int
jae
or
and
push
xchg
mov
or
mov
jne
lock
loopne
std
js
add
jb
push
rol
jmp
jl
imull
fstl
lds
test
mov
jo
scas
movsl
mov
scas
inc
mov
fcmove
cmpsb
sbbb
out
xor
pop
mov
xor
cmp
inc
outsw
out
dec
and
and
std
fsubrp
movsb
cmp
mov
fidivs
pop
hlt
mov
incb
xor
insl
and
ret
push
mov
es
mov
addr16
xor
pop
cli
gs
jle
sub
mov
pop
lods
push
inc
cmpsb
push
in
movsb
cmp
mov
mov
cmp
dec
xchg
daa
cld
inc
fisubrs
jmp
sub
and
out
mov
mov
scas
push
jo
les
mov
sub
pop
add
ret
in
xchg
pop
fidivrs
icebp
insb
sub
sbb
lret
bound
mov
jno
dec
pop
inc
mov
addr16
fistl
cmp
mov
push
aas
std
imul
cmp
jbe
hlt
mov
insl
loopne
insb
out
sahf
ret
inc
push
insb
add
cmp
data16
mov
push
jmp
add
test
loopne
aaa
pop
lret
jg
outsl
pop
mov
outsl
add
add
es
popa
xor
test
jl
out
sbb
out
xchg
push
aaa
jno
or
jle
pop
and
xchg
jnp
xor
dec
sbb
dec
dec
or
cmp
or
rclb
mov
mov
int
sub
mov
fmuls
popa
xor
mov
arpl
pop
popa
mov
pop
dec
jno
jp
dec
dec
adc
push
push
test
loope
jg
inc
mov
addr16
outsl
fwait
xor
cmp
das
dec
pop
loope
lea
pop
loope
mov
cmp
push
shlb
and
dec
int3
xchg
cmp
in
fwait
scas
xor
pop
out
jmp
sbb
rcl
sub
lock
add
mov
js
aas
insb
shrb
pop
ss
dec
in
dec
lahf
and
cmp
dec
push
add
xorl
iret
sbb
mov
fstps
adc
fdivrs
cmp
mov
jg
iret
dec
filds
mov
cmp
movsl
fldt
out
pop
sbb
data16
test
mov
fmul
push
dec
aad
push
mov
lds
push
xor
mov
pop
shrl
mull
fwait
loop
xchg
dec
add
and
movb
jae
fs
cli
xchg
imul
xlat
sub
cltd
mov
lret
hlt
pop
pop
xchg
sahf
iret
iret
imull
lds
int3
jg
loopne
mov
lahf
stos
in
push
clc
push
adc
sbb
xor
or
mov
popa
sbb
adc
dec
ret
mov
addr16
out
push
sbb
pop
mov
insl
das
mov
pop
sub
xchg
popa
sub
cld
orl
cld
push
fucomp
xchg
je
lahf
loop
or
jnp
pop
jo
sbb
leave
test
inc
pop
ja
push
jecxz
dec
dec
jns
jecxz
inc
popa
adc
pop
mov
stos
jg
mov
jg
les
dec
decl
into
gs
rcrl
inc
jmp
pusha
inc
or
push
repnz
cmpb
lcall
je
jnp
pop
jae
mov
push
sub
push
push
gs
bound
insb
mov
shll
imul
mov
or
ds
xlat
pop
sub
in
xchg
mov
sti
sbb
aas
subb
xchg
es
pushf
lea
cmpsb
mov
ret
out
mov
adc
xor
rcrb
mov
or
fistps
addr16
loope
fwait
dec
and
loop
iret
dec
stos
dec
lods
or
movsb
and
ds
das
dec
push
movsl
pop
sti
fclex
sahf
bound
stos
ljmp
int3
stc
je
mov
enter
stos
push
fldt
in
inc
and
std
aas
cmp
mov
push
jnp
andb
push
je
xchg
xchg
sub
cmp
lcall
cmp
shrb
mov
jb
add
fldenv
push
ds
data16
and
gs
adc
cmp
filds
fs
mov
js
rcrb
add
test
jns
cmpsb
push
pusha
shl
inc
mov
push
jae
adc
pop
inc
cmp
rclb
cmp
cmpsl
pop
add
jne
mov
call
nop
pop
add
ret
out
fsubrs
or
jle
out
xchg
stos
aas
shll
repnz
mov
mov
int
sti
push
pop
loope
push
xor
aas
mov
sarl
xchg
add
cmc
xor
pusha
xchg
push
pop
ja
xchg
push
jne
nop
inc
mov
pushf
push
xlat
insb
repnz
push
push
ljmp
xchg
sub
pushf
add
mov
test
xor
or
sahf
jle
loopne
inc
dec
out
jno
and
push
adcb
movsl
sbb
mov
in
push
mov
mov
test
jl
cmp
mov
mov
lret
jns
or
inc
jle
ss
jb
adc
mov
push
stc
nop
xchg
sti
push
sbb
rorb
fldl
mov
sti
pop
ror
fwait
mov
shrl
inc
mov
mov
push
notw
cmpsl
out
or
cmp
repnz
pop
loop
jp
ret
outsb
jecxz
xchg
lret
test
jecxz
push
repnz
add
cmp
mov
ljmp
xor
mov
cli
jge
std
push
sbb
ds
repz
ror
movsb
cmp
imul
sbb
mov
ret
xchg
cld
subl
outsb
andb
inc
dec
mov
lea
mov
int
jge
test
jo
popf
ret
jmp
mov
xor
mov
add
xor
push
icebp
std
pop
stc
das
dec
movsb
sub
xchg
lds
ret
outsb
mov
or
popa
bound
or
stos
sbb
or
dec
repz
or
adc
mov
cmc
and
xchg
cs
sub
add
pop
pop
and
mov
shlb
ljmp
aas
dec
outsl
testl
rcll
out
adc
lds
orb
jne
dec
jl
xchg
xlat
decb
and
or
xor
repz
sti
mov
jl
stos
inc
mov
pextrw
add
dec
xlat
and
out
inc
sbb
mov
xchg
testb
mov
cmp
dec
pop
jmp
fstpt
adcl
and
loopne
jno
sbb
cmp
hlt
insl
mov
mov
sub
xchg
ss
ljmp
cld
add
push
jl
jno
into
push
movsl
sub
push
pop
popf
mov
or
or
mov
inc
outsb
push
dec
mov
addr16
pop
inc
and
dec
xchg
gs
fbstp
sbb
adc
lahf
loop
or
nop
movsl
xchg
sub
faddp
mov
pop
mov
fbld
getsec
pop
adc
loope
das
out
push
out
daa
sbb
jne
sbb
jecxz
rclb
enter
cmp
ficoml
adc
fists
xor
fcoml
cmp
pop
aam
loope
or
add
push
mov
aam
rcl
or
pop
xlat
adc
mov
fmuls
mov
adc
adc
fcmovu
or
pop
fmuls
mov
xadd
aad
imul
adc
or
test
or
in
adc
adc
cpuid
add
int3
mov
aad
cmc
ja
and
push
out
cmp
jo
mov
jne
xlat
xlat
jle
sbb
and
push
push
mov
add
shlb
leave
sti
inc
imul
push
mov
pop
lea
mov
pop
mov
fsubr
lds
popf
add
or
jge
add
jecxz
rol
popa
add
mov
mov
inc
loopne
push
lods
mov
in
and
das
addr16
adc
std
mov
pop
jge
mov
bnd
or
xchg
ds
and
adc
lea
mov
mov
mov
fbld
lcall
mov
dec
pop
mov
es
inc
loope
inc
cwtl
add
jbe
or
icebp
test
rorl
cmc
add
or
mov
fiadds
inc
fdivl
mov
fmulp
scas
arpl
scas
cmp
inc
push
int
repnz
dec
cmpsl
test
push
mov
pop
and
dec
movsl
cmpsl
dec
mov
fadds
push
in
out
pop
and
jne
clc
pop
dec
out
popf
test
jmp
testb
jne
lods
sahf
ret
pop
and
inc
xor
inc
in
gs
sahf
xchg
aad
popa
mov
and
inc
adc
xchg
out
shrb
pop
push
test
xchg
push
xchg
les
mov
popa
imul
mov
clc
daa
popa
aaa
mov
shll
sub
xlat
repz
out
or
ds
add
stos
std
pop
mov
inc
push
inc
cmpsb
cmp
cmpsb
push
lds
pop
or
stos
cmp
push
lock
out
sbb
arpl
inc
cli
insl
mov
decb
cltd
xor
stos
or
push
and
js,pn
mov
pop
enter
cmp
test
push
lods
dec
jg
orl
popf
xor
aad
mov
xchg
mov
xchg
mov
lock
scas
sbb
loopne
dec
add
mov
sbb
add
sbb
mov
movsl
loopne
xlat
mov
sub
mov
mov
mull
enter
in
loope
aam
aad
gs
lds
addr16
hlt
repz
xlat
add
insb
inc
mov
ficomps
xchg
inc
xor
mov
lock
aad
out
jp
rcrb
mov
and
fwait
lods
mov
mov
int3
sbb
xchg
jp
call
cmpps
lea
scas
push
scas
or
fimull
mov
or
xchg
cmp
pop
pop
cmp
jns
xchg
fucomip
mov
add
in
out
test
push
xchg
ja
cmp
repz
or
pop
test
out
adc
mov
fcoml
or
cmpsl
jae
flds
sbb
jl
adc
mov
jb
cli
xor
jle
xchg
daa
stos
sub
scas
mov
and
jo
adc
ja
add
xor
sub
and
pusha
lods
popa
lds
leave
pop
xchg
cld
xor
and
js
sarl
pop
add
sbb
popa
sbb
lahf
aaa
adc
mov
sub
adc
popf
xchg
mov
imul
push
imul
or
cmp
dec
insb
add
pop
xor
inc
popa
push
popf
fidivs
dec
insb
sbb
leave
cld
outsb
adcb
shlb
and
xchg
inc
lods
push
out
mov
shl
pop
std
mov
leave
loope
in
cli
cwtl
mov
popf
jl
test
lret
outsb
cmpsb
fists
fs
shlb
add
mov
mov
jp
roll
and
adc
jb
cld
pop
imul
add
dec
adc
jecxz
pop
mov
mov
in
int
fcompl
hlt
jnp
sbb
jp
or
add
mov
pop
pushf
sub
pop
xchg
mov
jo
std
mov
mov
leave
xchg
pop
mov
dec
mov
insb
repz
pushf
mov
adc
jb
mov
xchg
ret
sub
enter
jns
jp
cmp
testl
scas
les
xor
pop
jmp
pusha
lret
ljmp
adc
mov
inc
push
cmp
scas
jmp
loopne
mov
push
pop
or
loope
mov
push
movl
movsb
dec
xchg
jp
jle
pop
imul
and
jmp
dec
sbb
arpl
cmp
stos
gs
pop
and
xchg
enter
xor
dec
sbb
mov
pop
popa
jns
mov
imul
pop
inc
xchg
fiaddl
aad
lret
mov
inc
aaa
ror
and
fs
testb
push
in
les
fdivl
hlt
push
add
dec
cli
stos
jmp
or
mov
addb
add
movsl
rolb
mov
stc
cmpsl
push
fisubrl
testb
int3
cmp
ret
sbb
mov
dec
add
jo
xchg
cmpsl
stos
fcoml
or
mov
xchg
jl
addl
mov
jns
popf
mov
lcall
pop
pop
call
arpl
sub
popf
jg
xor
sar
inc
clc
push
call
xlat
sub
add
les
out
pop
lahf
das
icebp
ret
rorl
imul
adc
pop
std
lret
xorb
fsubp
jnp
in
jbe
arpl
scas
mov
push
mov
add
add
jnp
adc
inc
pop
dec
and
inc
lods
fldt
lret
pop
std
xor
data16
cmp
iret
inc
cmp
ret
fcos
andl
add
xor
sub
mov
mov
push
mov
shll
cmp
incb
das
xor
fidivrs
fxch
cmp
mov
dec
in
loope
fstpl
into
adcb
xchg
cmp
faddl
fsubrs
inc
insb
fbstp
testb
fldenv
das
lods
gs
sbb
insb
sbb
add
lods
loopne
xchg
sub
fucom
mov
imul
rcrb
rolb
xchg
inc
lea
mov
gs
inc
push
aam
mov
xlat
mov
or
dec
dec
dec
aaa
mov
jl
jle
lock
and
mov
ja
lea
in
leave
das
cmp
jmp
aaa
pop
inc
mov
dec
pop
in
int
mov
inc
lret
roll
ja
jns
inc
and
enter
je
jae
pop
cli
jne
dec
cli
jne
loopne
xor
sub
pop
xor
aad
dec
and
cmpsb
aaa
lahf
pop
rorl
add
fadd
mov
fisttps
ret
xor
outsl
xlat
mov
sbb
sbbl
gs
out
cltd
sbb
enter
in
jmp
add
inc
sarb
insb
cmp
add
les
aaa
mov
loop
nop
lret
mov
cld
mov
ficoms
cmpsl
cmovne
push
sar
pushf
adc
sbb
pop
or
sub
sbb
mov
mov
cmp
repz
and
sub
and
mov
pop
shll
clc
loope
push
or
add
pop
out
xor
pop
movsl
pop
adc
loope
sbb
aaa
into
jecxz
cmp
rol
seta
pop
dec
arpl
das
pop
mulb
into
sub
icebp
repz
cmp
cmp
xor
clc
xchg
out
mov
sub
mov
jl
add
fisttps
cltd
mov
cld
inc
mov
xchg
mov
fcompl
loopne
push
andb
xor
rclb
push
scas
and
bound
jns
xchg
cmp
inc
sub
add
inc
sbb
jae
jge
lret
add
mov
icebp
enter
repz
into
gs
mov
add
push
mov
aas
mov
cld
adc
imul
notl
and
in
push
nop
push
xlat
scas
mov
popa
push
cmp
test
mov
mov
fsubl
inc
add
pop
push
arpl
fisttps
mov
aam
lcall
jg
pop
cs
pushf
pmullw
adc
dec
xchg
jo
testb
sub
mov
dec
dec
xor
pop
mov
cltd
out
nop
jge
imul
test
or
in
jnp
jae
iret
push
add
cmp
xor
lret
push
dec
pop
flds
sbb
xor
aam
push
leave
fmull
lea
popa
clc
enter
or
xor
add
outsl
jns
adc
push
xor
xchg
pop
mov
imul
push
push
in
mov
inc
test
insb
popf
pop
jecxz
push
test
sbb
cmp
jp
adc
jecxz
lcall
insb
and
scas
or
mov
dec
jns,pt
xchg
scas
mov
fnstenv
movsl
mov
int3
mov
jns
ret
adc
fisubrl
add
lea
lock
adc
jae
mov
adc
push
push
mov
mov
fsubs
test
jl
or
or
or
call
push
scas
cwtl
mov
xor
add
outsl
bswap
cmp
test
shl
add
push
sbb
and
or
dec
nop
sub
outsb
xor
loop
in
jo
daa
data16
cltd
sub
dec
insb
jmp
addr16
jecxz
add
push
out
pop
ljmp
jno
insb
xor
arpl
mov
cmpsl
push
xchg
sub
mov
jno
fists
int3
icebp
adc
push
inc
ficoml
sbb
stos
int3
or
pop
rcrl
ja
ror
xor
mov
test
pop
xchg
mov
fistps
dec
xor
mov
aas
enter
sub
outsl
xchg
mov
mov
lret
cmp
lcall
cmc
jp
daa
movsb
xchg
dec
xor
loop
ds
fs
jmp
fucomi
scas
stc
mulb
jno
out
mov
fs
leave
xchg
push
xchg
mov
mov
mov
fs
je
mov
pop
into
add
pop
sub
shrl
cmp
xor
daa
test
sarl
push
pop
mov
add
in
lcall
inc
arpl
lcall
xchg
sub
pop
push
decl
daa
xchg
in
popa
add
add
lds
insl
add
dec
mov
mov
ret
mov
pop
test
pop
movsb
movsl
fwait
cs
subl
adc
xor
sbb
insb
das
xor
and
mov
adc
test
popa
int3
and
inc
stos
lea
mov
hlt
sub
divb
aad
push
xor
inc
pushf
or
cmp
mov
call
adc
daa
fsubrs
dec
fmul
and
inc
push
inc
out
popf
sub
mov
inc
ret
shrl
sti
jge
gs
sub
outsl
fldt
sub
or
cmp
orl
and
hlt
call
adc
cmc
shrb
cmp
dec
sbb
ja
mov
inc
or
lock
jbe
xchg
ret
or
iret
sub
aad
inc
pop
pop
repz
jno
jne
shl
lea
idivl
addb
inc
mov
bound
test
call
pop
popa
ljmp
fcomi
out
and
pop
repnz
mov
ret
jns
fisttpl
std
jbe
add
loop
jnp
sarl
sbb
icebp
xor
pusha
jl
push
ja
jb
adc
pop
repz
jnp
cmp
fchs
pop
flds
or
scas
jp
and
xchg
inc
cmp
sbb
adc
popl
daa
push
lods
pop
dec
mov
out
xor
xor
and
adc
lods
xchg
xor
inc
cmpsl
mov
call
pop
pop
outsl
push
dec
jo
lock
mov
xchg
mov
aam
inc
test
cmc
jle
sbb
and
inc
hlt
mov
pop
xlat
cmpl
gs
jecxz
cmp
enter
jo
sbb
sub
ror
xchg
sbb
popf
xor
cwtl
and
rcl
cmp
or
daa
mov
test
lret
aad
push
or
adc
sub
pop
fidivrs
xor
add
call
dec
or
jns
push
enter
in
fistps
insb
int
or
mov
and
mov
scas
mov
imul
fisttpl
add
in
in
jo
cmp
mov
sti
jnp
mov
je
insb
jns
shrb
nop
dec
ret
test
add
push
pop
stos
arpl
movsb
leave
gs
cli
lds
adc
sbb
pop
and
cwtl
push
adc
jbe
rcrb
pop
mov
std
inc
pushf
cmpsl
mov
adc
data16
push
lret
mov
xchg
negl
divb
repz
notb
mov
pop
pcmpeqw
sahf
jno
lods
adc
cld
cmpsl
sub
mov
int
addl
ja
icebp
xor
push
sti
cmpsl
adc
pop
repnz
cmc
shlb
add
sub
dec
mov
icebp
movsb
sub
push
inc
pop
testl
sbb
fsubrs
fisubrl
stc
iret
out
pop
jns
loope
je
out
aas
in
outsb
mov
stc
or
movsl
out
sbb
xlat
lret
push
cmp
test
shll
stos
pushf
loopne
es
and
dec
jle
popf
test
subl
mov
add
sub
mov
xor
fimuls
pop
inc
sbb
mov
mov
stos
repz
jge
mov
sahf
pop
mov
adc
sbb
in
jmp
cwtl
pop
add
mov
arpl
mov
adc
push
dec
mov
sbbl
pusha
rcrl
mov
mov
mov
out
fisttpl
lock
inc
mov
pop
cmp
mov
repz
push
sti
jmp
scas
aas
insl
ja
test
pop
mov
push
pop
loop
push
ret
jl
dec
ja
cmp
add
lock
rcrl
lods
add
in
and
cmpsb
dec
xchg
push
decb
in
jg
add
stc
xlat
movsb
jle
mov
ss
jns
jmp
push
sbb
rclb
mov
aad
add
mov
lea
lds
and
adc
ret
mov
jl
push
dec
cmp
int
xchg
push
pushf
fxch
dec
out
mov
insw
and
or
or
addr16
inc
fcomps
stos
scas
add
xor
das
add
push
xchg
jmp
inc
mov
popa
sti
scas
mov
mov
sbb
pminub
sub
aam
xchg
pop
sub
mov
clc
sysenter
cmpsl
jl
xchg
imul
inc
jmp
lcall
dec
inc
add
inc
xor
out
sarb
in
sbb
push
or
xchg
popf
hlt
mov
les
out
or
push
mov
popa
ljmp
inc
or
inc
dec
cmpsl
dec
aaa
leave
pop
out
pop
rcrb
inc
icebp
xchg
xlat
push
mov
or
inc
sbb
test
lods
decl
sub
mov
ficompl
add
mov
bound
mov
jo
xor
inc
movb
inc
add
daa
pop
jb
aas
into
and
jmp
cltd
faddl
rcl
jecxz
stos
hlt
dec
fbld
inc
std
fldt
lret
jmp
lea
mov
xchg
mov
jb
ret
lret
inc
xor
ja
mov
mov
mov
int3
andl
push
test
addr16
jbe
out
mov
pop
mov
add
fldl
roll
cmp
and
sbbl
fists
push
loope
hlt
push
or
movsb
int
ds
daa
adc
add
and
dec
push
adc
enter
fmulp
sub
cli
xchg
mov
pop
sbb
repnz
das
pop
cmp
decl
or
cmp
push
movsl
in
rol
pop
add
fidivrs
dec
pop
int3
fistpll
bound
mov
adcl
cmp
pop
test
push
cmc
mov
loope
mov
cmp
std
xchg
lcall
xlat
sti
test
mov
pop
aad
addb
sbbb
pop
mov
je
xchg
push
mov
imul
loop
cmc
pusha
mov
push
imul
cltd
test
hlt
inc
fsubl
add
adcl
lahf
inc
mov
cltd
sti
add
mov
and
subb
xor
fstps
cltd
aaa
out
mov
fwait
loope
pop
jg
aas
jmp
pop
daa
icebp
cwtl
shl
leave
xor
in
ljmp
scas
push
and
bound
test
jmp
in
in
sub
fdivl
push
insl
add
mov
mov
in
aaa
sub
mov
daa
jecxz
dec
notl
inc
sub
jmp
and
movsl
sbb
ss
mov
shl
jle
loop
lock
jbe
push
repnz
add
xor
mov
jbe
mov
xchg
stc
jp
aaa
push
add
sub
dec
mov
fs
inc
mov
repnz
es
hlt
adc
aaa
sbb
pop
shrl
insb
dec
in
add
daa
addl
mov
adc
pop
ja
lods
scas
sub
leave
adc
xor
mov
fiaddl
cmp
and
mov
repz
and
xchg
push
cmpsb
fsubs
jg
jp
std
pushf
and
lods
aad
adc
bound
xchg
xor
push
add
in
xchg
fisttps
cli
sbb
mov
pop
lea
cli
dec
cltd
mov
filds
xchg
cltd
push
jge
sbb
xchg
jp
fucomp
rcll
xchg
stc
rorb
stos
jno
lea
xchg
jle
pushl
loopne
movsb
adc
inc
mov
jg
fimuls
insl
dec
cs
sub
xlat
in
mov
in
inc
push
cmpsb
mov
mov
jg
sub
or
xchg
ja
add
jnp
lods
adc
cmpsb
xchg
dec
mov
out
sub
stc
dec
mov
subb
adc
pop
pop
jge
popf
sub
pop
lock
sbb
and
dec
scas
js
xor
shlb
push
orl
pusha
testl
jle
fisttps
inc
in
sbb
pop
dec
xlat
imul
in
lcall
push
clc
mov
dec
fcomip
pop
cwtl
push
lea
popf
out
test
rclb
and
inc
fimull
loop
rcll
dec
or
das
insl
popf
es
pop
or
shll
enter
xlat
dec
adc
sub
jnp
pop
mov
xor
pop
icebp
inc
or
and
std
jg
dec
cmc
sub
dec
cmp
imul
and
jbe
inc
xor
jp
push
mov
loopne
daa
lcall
mov
std
jno
mov
stos
repz
push
push
mov
pop
sbb
dec
adc
in
enter
cltd
jmp
add
test
fstpt
sbb
jbe
inc
loopne
stos
xchg
outsl
push
int3
sub
fs
imul
mov
or
leave
pop
dec
push
xor
jo
out
dec
test
mov
mov
gs
ss
adc
or
shrl
sub
mov
movsb
outsb
sbb
xchg
in
mov
loopne
aam
loop
mov
sbbb
out
push
inc
ret
and
stos
stos
mov
xchg
cmpsb
mov
in
aam
es
cs
xchg
cmp
xor
enter
adc
sub
int
dec
cmc
loop
pop
cltd
cmpsl
ds
sahf
adc
jmp
pop
lahf
and
in
insl
mov
mov
lcall
dec
in
mov
cltd
push
pop
inc
popf
push
cmp
ret
cltd
jg
mov
loopne
bnd
push
ror
rcrb
rep
mov
scas
shl
aam
stos
rclb
pop
jne
addb
push
rcrl
enter
and
stc
push
stos
scas
hlt
addr16
es
xchg
cwtl
add
push
jno
jecxz
xchg
es
xchg
lret
mov
or
js
xor
mov
or
rorl
push
ljmp
xor
data16
mov
outsl
repz
fisubs
xlat
addr16
fmull
fwait
mov
mov
cli
dec
mov
xchg
sbb
mov
mov
push
test
jae
xor
xchg
xchg
fidivl
loopne
lods
push
in
xchg
pop
cmp
jg
call
sub
mov
dec
fildll
insl
sahf
pop
scas
mov
icebp
cmp
adc
bound
ret
test
dec
frstor
mov
and
mov
or
push
xchg
jmp
push
add
pop
mov
and
jmp
add
out
scas
leave
cmpsl
push
xchg
cmp
rcrl
cmp
imul
in
mov
cli
cmp
or
xchg
inc
pslld
jecxz
mov
fnsave
dec
punpckhdq
int
inc
lret
and
inc
fstpl
sbb
pop
mov
pusha
xchg
pushf
xor
cmp
scas
adc
scas
mov
out
xlat
std
cmp
mov
sub
mov
into
in
jnp
out
rol
fwait
enter
mov
xor
cmp
dec
dec
xchg
xchg
xchg
orb
mov
add
in
test
inc
test
cmp
push
hlt
and
pop
push
je
cmpsb
cli
push
mov
mov
iret
shlb
mov
fnstcw
iret
push
fcomps
jns
mov
clc
data16
sub
adcb
loopne
das
sub
repnz
pusha
inc
xchg
pop
dec
in
xchg
xor
and
xor
xor
pusha
xor
inc
inc
mov
push
push
out
jns
mov
clc
cmp
stos
shrl
gs
arpl
cmp
push
subl
enter
rclb
std
mov
or
enter
adc
mov
xlat
sbb
sbb
stos
std
adc
or
das
repnz
sub
jno
pop
inc
pop
adc
add
lock
daa
ret
push
pop
jae
ss
gs
adc
push
fmul
xor
cmc
cwtl
mov
xchg
stos
cld
mov
mov
cmp
inc
xor
insb
inc
dec
sbb
add
fstpt
lds
stos
sbb
ja
adc
or
mov
push
push
jb
incb
out
hlt
lds
cmpsb
jns
xchg
mov
cmp
cmovno
add
popa
orl
pop
repz
xchg
fnstenv
rcrl
jg
jae
add
fisubs
lahf
hlt
lret
xchg
jmp
inc
or
xchg
ret
cltd
mov
and
dec
lea
fidivrl
out
icebp
xchg
or
cmp
sbb
movsb
rcrl
jb
ret
shlb
ret
arpl
push
jo
lahf
and
aam
xlat
cmp
push
ret
mov
movsl
lea
les
inc
stc
aam
xchg
scas
inc
pop
insl
dec
and
ror
sub
loope
js
pop
out
mov
repz
jle
mov
mov
cmpsb
out
iret
loope
movsb
andb
push
aas
mov
lods
por
icebp
mov
es
cmp
sub
dec
lret
popa
lods
stos
push
mov
push
push
and
push
ret
sub
in
mov
outsl
loopne
andl
rcl
bound
cmpsl
das
lods
repnz
sbb
aas
ja
je
inc
cltd
and
ds
int3
filds
jo
shl
rcl
repz
jmp
insb
sbb
dec
and
fsubrs
fnstcw
out
inc
sbb
out
outsb
arpl
and
stos
jae
jbe
push
aam
cmpl
jns
sub
add
fidivrs
pusha
cmp
imul
movsl
addr16
fldt
mov
es
ljmp
negl
dec
repz
jae
out
test
rcrb
pop
cmp
sarb
lock
js
mov
push
add
and
test
inc
cwtl
insb
sti
cmc
or
outsb
lahf
jmp
loopne
pushf
xor
inc
or
inc
pop
mov
cltd
lds
shrl
or
mov
and
in
fwait
ja
dec
in
sub
and
and
dec
add
push
mov
icebp
not
lock
lcall
mov
mov
dec
not
shrb
dec
or
aaa
leave
int3
mov
cmp
jns
ret
outsl
sbb
je
mov
in
ret
cmp
and
sub
push
in
sbb
clc
fidivrs
out
jo
fnstsw
and
sbb
mov
mov
sbbb
push
out
adc
jo
shl
repz
xor
fstps
or
neg
lret
lret
push
sub
pop
inc
cmp
mov
leave
pop
mov
jne
adc
insl
scas
mov
push
fbstp
inc
idivl
outsb
insl
add
inc
or
repnz
dec
movsb
std
lds
insl
pop
into
xor
rcrl
inc
pop
out
pop
pop
cwtl
xchg
aaa
sbb
cmc
jle
aaa
xchg
inc
fisttps
adc
mov
movsb
inc
call
lods
mov
popa
dec
fwait
stos
fidivl
lahf
lret
bound
sbb
dec
mov
shl
int
adc
xchg
sub
shl
push
push
fidivrl
dec
dec
mov
rcl
scas
push
sub
xchg
mov
stos
rolb
fmull
decl
loopne
xchg
adc
shrl
repnz
ja
mov
lock
mov
jnp
lds
add
mov
xchg
jae
jae
rcrl
ja
pop
and
fdiv
cmovle
dec
repnz
mov
fwait
mov
sbb
and
mov
std
cld
clc
frstor
mov
test
sbb
mov
pop
scas
and
adc
int3
xor
fmuls
and
fsubrl
stos
mov
jecxz
inc
scas
aas
jae
mov
dec
enter
sbb
mov
pop
ret
test
daa
das
aaa
mov
loope
mov
mov
dec
stos
lea
sahf
sub
xor
bound
jb
mov
lcall
push
sub
iret
daa
sbb
loope
fisubrs
incb
cmp
pop
xchg
add
lcall
je
insl
sbb
xchg
jmp
stos
stc
mov
mov
push
repz
movsb
aas
daa
out
icebp
jl
dec
hlt
sbb
je
sub
shrb
mov
xchg
loopne
out
mov
push
xor
std
pop
sub
aas
popf
adc
sbb
jecxz
in
jbe
mov
inc
arpl
push
test
xor
push
aad
inc
cmc
add
les
stc
sahf
insl
push
lods
dec
inc
jle
sti
jmp
sub
add
jnp
jbe
mov
mov
add
sti
subb
mov
mov
jge
mov
jg
icebp
mov
add
fidivrs
loope
into
mov
je
andb
cld
out
jns
inc
pop
lahf
sub
dec
sub
push
loopne
push
dec
imul
rolb
popf
xchg
movsl
fdivl
mov
dec
push
or
ss
insl
imul
lods
mov
out
mov
ficomps
add
or
mov
push
cltd
popa
sbb
add
mov
jnp
pop
ss
inc
in
or
jmp
cli
inc
add
mov
push
mov
xor
rol
fadd
insb
les
jbe
popf
push
mov
adc
int3
pop
cmc
rolb
inc
je
leave
incl
daa
mov
or
mov
sub
addb
in
pop
dec
fistpl
les
pusha
lret
adc
call
sub
adc
roll
mov
sbbl
in
jo
dec
sbb
imull
ret
inc
scas
mov
inc
rcr
sbb
dec
pcmpgtd
sbb
lock
insl
repnz
shlb
mov
lods
ret
and
lea
rol
daa
xlat
ret
jb
test
sub
jo
push
fucomp
les
pop
mov
sub
jecxz
fdivrp
sbb
iret
mov
pop
icebp
mov
push
in
sahf
jo
movsl
mov
test
xchg
es
sahf
divl
dec
and
jle
xchg
movsl
cmp
shrl
hlt
aas
sbb
add
cmc
shrl
daa
lret
orl
leave
aaa
inc
pop
rolb
mov
loope
pop
adc
mov
add
push
hlt
pop
in
sti
push
cltd
add
add
mov
xchg
sarb
insl
insb
sahf
push
pop
mov
mov
mov
arpl
jl
cwtl
stos
es
stc
dec
rclb
shrb
jecxz
push
push
dec
insb
add
inc
fdivp
fcoms
inc
xchg
mov
and
pop
fistpl
lahf
lods
sbb
jne
fildll
stos
push
jne
imul
ret
stos
inc
pop
lcall
add
cmc
les
shlb
mov
push
movsl
jg
mov
xor
imul
ds
adc
repnz
jnp
inc
jno
shlb
hlt
rol
sti
jb
cmpsb
iret
push
lock
pop
movsb
outsb
lock
sub
and
fcoml
xchg
sbb
stos
icebp
cltd
test
inc
dec
pop
outsb
mov
and
stc
repz
sub
xor
mov
test
fs
aaa
jmp
rclb
rol
pop
repz
jl
add
dec
jmp
add
xor
test
insl
icebp
pop
fisttpl
xchg
jp
push
gs
pop
cmp
scas
test
lods
pusha
mov
inc
and
gs
mov
jb
stos
jp
insb
mov
cltd
pop
daa
int3
jg
dec
jbe
fwait
cmpsl
push
push
lret
push
jmp
mov
xchg
xchg
pop
cmp
imul
or
jbe
adc
jns
jl
xchg
cmpsl
cld
push
cltd
ret
scas
fst
xor
jmp
cmpsl
mov
in
cmpsb
mov
orb
aas
pusha
rep
and
call
jns
test
lret
mov
inc
add
js
dec
fisubrl
outsl
adc
fwait
and
sarl
sahf
dec
mov
ja
sbb
imul
mov
aad
sbb
stos
add
dec
mov
or
sbb
adc
fmull
cmpsb
xchg
enter
mov
push
jp
xor
es
push
sub
mov
int3
fsubrp
stc
sub
stc
mov
inc
ljmp
mov
mov
add
int3
ss
lret
sarl
or
pop
push
mov
xchg
add
and
mov
mov
add
inc
out
xor
ljmp
enter
jp
inc
mov
icebp
pop
popa
daa
jl
pop
popl
sbb
mov
pop
sub
and
push
push
test
cmp
outsl
mov
pusha
es
jno
daa
lret
in
mov
sbb
push
repz
add
cltd
dec
call
call
mov
icebp
mov
add
pop
xor
xorl
dec
int3
ficoms
and
leave
fs
popf
jg
xor
cli
call
push
int
mov
std
or
mov
inc
mov
mov
push
xchg
lock
adc
lods
xchg
cmpsl
bound
cld
xchg
jnp
push
mov
test
test
mov
push
fimuls
movsl
aam
fnstcw
scas
in
dec
fcmove
jno
xchg
pop
xor
ljmp
mov
dec
sub
imul
das
push
or
pop
jp
adc
jge
addb
scas
cmp
sub
pop
test
lret
push
cmp
pop
push
mov
js
xchg
sub
cmpsb
les
lret
in
push
pop
imul
popf
jns
sti
sub
mov
je
ja
mov
push
cltd
cmpsl
jp
push
jno
jg
repnz
mov
xchg
leave
inc
cmpsb
jno
xchg
fs
repz
sbb
out
jae
jo
adc
mov
xor
icebp
testb
incl
or
adc
mov
bound
xor
jns
sbbb
adc
push
mov
adc
xor
pop
jae
cltd
push
loopne
mov
in
xor
sbb
xor
and
push
add
ret
inc
xchg
jle
inc
or
push
jo
pop
shll
push
in
in
dec
cltd
adc
push
dec
or
es
jae
or
inc
xlat
mov
dec
and
and
andb
xor
lcall
pop
cld
or
mov
daa
jle
rorb
xor
and
add
cmp
mov
fcomps
or
add
fdivl
xor
add
sub
scas
pop
es
and
or
lret
negl
fnsave
loope
pusha
xorb
inc
es
sub
fmull
ljmp
mov
popf
dec
dec
xchg
movsb
cmp
inc
mov
dec
add
ljmp
push
pop
sti
movb
sbb
roll
int
fisubl
jl
cmp
insl
fistpl
lods
push
aad
daa
pop
sub
divb
out
push
jnp
or
adc
push
lahf
push
mov
sarl
test
sub
push
aas
or
inc
push
xor
into
enter
fstps
cmpsl
jl
mov
outsl
inc
imul
xchg
pop
int3
push
sahf
imul
imul
mov
in
adc
cmp
gs
in
jecxz
mov
lcall
fs
nop
push
repz
pop
mov
adc
jle
xchg
out
std
cmpsb
loop
in
inc
push
adc
xor
ds
jo
pop
cld
fmull
lret
fildll
fdivrl
arpl
xlat
xchg
lahf
lret
xchg
xor
in
mul
mov
ja
mov
cmp
lea
insb
mov
fsubs
stc
mov
sti
mov
adcb
movsb
sbb
xchg
xchg
add
out
xor
imul
sbb
xchg
push
imul
cs
testl
shr
mov
pop
dec
mov
mov
jg
popf
pop
adc
insb
push
and
rcrb
mov
push
xor
ficoms
subl
push
mov
aaa
and
stc
adc
movsl
enter
in
xlat
and
or
ficompl
push
jmp
or
aaa
or
loope
sub
fs
sub
leavew
test
xor
or
add
cmc
xor
aad
out
scas
lret
cmp
sbb
lret
shrb
mov
loope
jmp
rol
or
adc
movsl
inc
pop
lcall
add
cmp
add
popa
outsl
sub
sahf
stos
pop
aaa
sub
test
jb
insl
addr16
pop
stc
fsubs
nop
pop
rorb
xor
adcb
pop
andb
movsb
jne
and
test
pop
mov
mov
sub
pop
xlat
sub
adc
xor
sub
lods
sti
ror
cmp
popa
dec
mov
push
stos
jmp
dec
rol
fcoml
xor
xor
sub
pushl
iret
push
in
and
nop
mov
push
cmp
loope
pop
pop
aas
dec
adc
xchg
cs
sbb
ja
repz
mov
adc
aas
lcall
mov
test
mov
push
scas
sub
or
pop
outsb
push
fs
or
imul
test
sub
add
imul
jb
jl
shll
addb
cmc
or
repz
inc
jmp
pop
lret
inc
lock
cmpsl
aad
mov
mov
inc
xor
outsb
push
std
xchg
xchg
push
lods
iret
shrl
xorl
xor
jge
lock
xorb
sbb
and
push
add
jmp
or
cltd
lahf
fmul
cs
cmp
shl
dec
sbb
fdiv
gs
xchg
in
filds
filds
cs
inc
xchg
adc
inc
xor
and
cmpsb
movsbl
mov
mov
incb
sbb
rcrl
or
add
mov
fs
imul
pop
xchg
lahf
stos
and
stos
iret
push
bnd
stos
dec
repnz
movsb
add
rcl
lds
int
sbb
mov
nop
idiv
xchg
cmp
icebp
or
repz
sub
jbe
idivb
xor
lods
cmp
cmp
int
add
mov
mov
mov
ja
pop
mov
or
stos
cltd
xor
and
cmpsb
repnz
add
dec
mov
jbe
das
sub
ds
les
in
fisubs
mov
addl
or
or
std
xchg
pop
cmc
enter
mov
jl
mov
add
mov
dec
enter
pop
and
pop
or
push
or
xorl
dec
mov
push
sbb
push
mov
jecxz
lret
and
outsb
sbb
push
push
adc
inc
punpckhdq
push
into
and
sub
sub
lea
lret
mov
mov
rclb
xchg
or
cmc
and
cmpsb
cmp
sub
or
mov
test
jns
sub
lret
stos
or
andl
dec
xchg
inc
sti
cltd
jo
lret
sbb
or
fidivs
lea
movsb
xlat
cld
xchg
leave
ljmp
push
push
mov
xchg
lea
call
adc
add
cs
pop
sub
cmp
xchg
lods
adc
fldl
jecxz
xor
test
add
mov
repnz
addr16
pop
mov
pop
jecxz
cmp
fwait
xor
mov
int3
jmp
inc
sbb
mov
mov
rorl
iret
jno
push
mull
shl
mov
cltd
xor
mov
testl
mov
mov
xor
shrb
imul
push
push
pop
cmpsl
or
push
xchg
jns
arpl
sbb
push
pop
push
pop
or
cmpsb
pop
insb
scas
int
sbbl
pushl
pop
or
jnp
loope
ljmp
dec
aad
pushl
dec
hlt
pop
mov
repnz
mov
es
lret
and
push
mov
dec
lods
les
aad
dec
scas
adc
js
outsb
jp
cltd
lret
adc
cmpsl
sub
nopl
popf
sbb
inc
jo
inc
mov
adc
inc
in
cmp
imul
xchg
leave
inc
pop
sub
xchg
push
jge
into
gs
cmp
mov
dec
push
dec
dec
cmp
outsl
out
ret
dec
adc
dec
or
mov
cmp
add
jne
cmp
pop
mov
and
mov
inc
dec
in
inc
xor
mov
repz
aam
out
mov
or
insl
add
in
fisttpll
mov
jecxz
mov
and
data16
xchg
sbb
jae
ds
in
cli
xchg
sub
movsl
adc
fcompl
call
out
mov
jo
push
jecxz
push
fbld
pop
je
inc
xlat
and
loope
add
adc
ljmp
xchg
adc
add
jle
loop
add
ja
pop
inc
pop
lea
sub
sub
stos
fsubrs
arpl
adc
fadds
ss
mov
fsubrp
test
jecxz
mov
aas
adc
inc
lods
shrb
andl
test
sub
test
jbe
push
mov
push
fistpll
test
daa
and
mov
in
sbb
add
mull
stc
aad
fistpl
jle
scas
cmp
test
dec
jecxz
add
push
xchg
popf
jmp
fcomps
fcmovb
pop
or
bound
andb
ss
into
push
leave
shl
iret
dec
xor
xchg
sbb
int
adcl
shl
mov
push
cmpsb
arpl
add
aad
xchg
push
fcmovnbe
cltd
dec
cmpsb
sti
push
pop
jne
sarl
jb
iret
cwtl
sub
insl
stos
adcl
sbb
xchg
mov
mov
push
leave
mov
cmp
add
xchg
dec
out
xchg
cli
jl
jne
cli
scas
loop
pop
jmp
mov
adc
imul
sbb
les
les
mov
imul
and
loope
jle
js
cwtl
dec
sub
add
scas
xchg
ret
ja
test
jecxz
sbb
dec
cmp
add
fwait
adc
or
xchg
daa
add
push
sbbb
dec
lock
lods
mov
add
sar
xchg
mov
les
sub
ja
lock
movsb
adc
xor
sub
arpl
dec
inc
sbbl
fsubs
fistps
push
mov
sub
hlt
add
xor
sub
jp
movsb
jnp
int
mov
xchg
in
std
inc
mov
icebp
rorb
mov
enter
or
or
loop
cs
jmp
mov
je
cli
and
add
mov
lods
pop
push
adc
mov
in
pusha
out
or
mov
push
dec
xor
in
sbb
jo
ja
push
pop
mov
push
daa
or
push
and
inc
xchg
cld
xchg
jbe
sub
inc
sbb
cwtl
lahf
push
in
in
repz
bound
shll
es
jb
ljmp
mov
hlt
xchg
sub
mov
mov
push
and
jecxz
ret
shll
in
and
mov
lea
data16
lea
xchg
cltd
xchg
inc
nop
dec
mov
loop
mov
pop
lds
fs
pop
adc
xor
dec
aam
repz
mov
inc
push
lock
jne
xchg
rolb
cmp
or
push
cwtl
or
and
out
ja
pop
adc
cmpsb
repz
dec
in
pop
inc
pop
test
jl
xor
sar
outsl
mov
popa
or
pop
fs
push
ljmp
out
adc
xchg
xchg
lcall
sub
xchg
pop
adc
call
in
cmc
mov
xchg
loop
sbb
call
mov
cltd
xchg
sti
mov
jle
adc
and
jle
std
es
pusha
rcrb
fsubrs
fnstenvs
xorb
andb
ficomps
mov
les
fimull
popa
jecxz
pop
adc
cld
or
adc
in
ja
xlat
test
stos
mov
je
popa
into
out
jg
and
jns
movsl
dec
fldl2t
add
push
or
sbb
jmp
jg
xchg
add
push
in
subl
inc
dec
dec
das
jg
stos
or
lcall
sbb
clc
imul
cmpsl
sbb
mov
shlb
mov
icebp
mov
js
or
mov
test
lods
fistl
or
fwait
xor
or
test
out
lahf
inc
std
jg
stos
xchg
ljmp
insl
loopne
push
or
mov
dec
and
xchg
xchg
cmp
scas
nop
imul
out
scas
xchg
jmp
xor
pop
mov
mov
inc
std
and
pop
inc
test
cmc
lods
fidivrl
rorb
xor
test
call
adcb
pop
popf
scas
add
test
scas
dec
test
sbb
add
dec
xchg
sbb
stos
mov
inc
mov
aas
ret
xor
popa
pop
call
or
push
adc
add
popa
or
mov
push
cld
jmp
test
inc
int
je
movsb
shl
es
pop
jmp
pop
loope
xchg
push
rclb
jle
or
imul
scas
movsl
pushf
and
insl
sti
adc
fdiv
dec
sub
fucompp
or
lret
dec
xor
jg
mov
stc
sub
std
cmp
pop
scas
das
dec
cld
outsl
push
xchg
jmp
lahf
mov
adc
aad
fucomi
jns
add
in
test
lcall
mov
fstl
xchg
sub
cmp
push
ljmp
orl
pushl
enter
pop
push
push
add
shlb
sub
mov
pop
dec
lods
enter
mov
jae
add
add
jge
or
xlat
mov
mov
xor
mov
mov
pop
inc
sbb
movsb
repnz
push
or
push
push
add
mov
adc
addr16
pop
adc
out
bound
add
dec
and
out
test
sahf
imul
int3
rcrb
cld
je
rcll
leave
clc
jle
orl
xchg
jge
dec
mov
pop
inc
xor
jge
shr
sbb
dec
adc
pop
mov
imul
lods
or
mov
fs
sub
scas
jmp
loopne
inc
inc
mov
jge
cmpsb
nop
in
jp
xchg
push
rclb
add
call
ret
mov
ljmp
mov
pop
mov
jmp
fcomps
pop
out
or
cmp
fmuls
cmpsl
mov
nop
xchg
or
sub
mov
push
inc
icebp
mov
cmpsb
fidivs
pop
scas
pop
fisubs
inc
mov
fisttpl
xor
stos
negl
cltd
popa
mov
cmpsb
xchg
loop
pop
mov
dec
in
test
add
cmp
xor
test
jg
leavew
cli
cli
or
ret
lret
addr16
add
mov
inc
data16
jbe
es
cmp
stc
jl
mov
jg
push
add
mov
iret
imul
ja
lock
and
push
cmpsb
adc
mov
sbb
outsb
das
pop
or
sub
xor
add
test
xor
in
fstps
movsb
cs
xlat
lds
inc
sbb
push
popa
cld
push
xchg
pop
aad
clc
push
aas
outsb
loope
add
mov
mov
cld
adc
bound
lods
jo
fisttps
std
fdivs
adc
sub
sbb
scas
out
mov
pop
mov
pop
fsts
gs
into
mov
addr16
push
fsubs
int3
sub
mov
jno
xchg
scas
ret
jl
into
jmp
in
sbb
pop
lcall
sahf
xor
lret
addr16
lock
push
jo
fsubp
mov
loope
mov
insb
sbb
mov
fsub
addr16
and
mov
cmp
lds
lret
and
or
sub
adc
insl
inc
in
inc
in
xchg
push
test
test
inc
movsb
adc
sbb
inc
inc
stc
aaa
test
insb
out
jge
lods
movsb
mov
lods
mov
sarl
xchg
pop
or
adc
push
mov
leave
cmpsl
or
aaa
ficoml
test
mov
ja
push
cli
or
fisubrl
xchg
lret
popf
mov
js
or
es
push
and
and
cld
push
daa
out
add
cwtl
ds
push
jb
mov
inc
out
in
push
popf
ficoms
std
movsb
mov
inc
cmpsl
test
sub
int3
push
inc
or
add
add
xor
fisttps
push
jle
or
pop
jmp
test
push
jg
insb
std
and
outsb
add
test
push
xor
leave
mov
xchg
xchg
sbb
outsl
fstps
imul
je
aam
es
inc
push
mov
lods
xchg
shr
xchg
jnp
popa
ds
scas
out
call
or
mov
js
or
jae
push
movsl
mov
xchg
cld
or
fwait
movsl
dec
aas
lock
push
stos
xor
jp
xor
cwtl
inc
test
xchg
sub
in
dec
imul
cmp
mov
pop
jecxz
push
inc
cld
lock
jmp
jno
jns
aaa
aas
in
inc
fcmove
add
jo
add
sbb
jle,pn
sbb
cmpsb
cmp
jmp
aas
lret
ds
into
adc
inc
fsub
sub
adc
add
lret
mov
scas
lds
adcb
sub
gs
add
ret
shl
and
lret
push
and
mov
into
pop
ja
jl
aam
jno
push
push
ljmp
scas
xchg
mov
lods
pop
lock
dec
cs
mov
leave
loope
repnz
sbb
jecxz
mov
push
jg
fcoml
mov
add
push
nopl
mov
dec
aad
cmp
aas
fcmovne
in
push
sub
pop
test
xor
mov
jecxz
stos
mov
cmc
adc
sbb
pusha
mov
scas
in
mov
sub
and
fstpt
pop
loopne
pop
pop
outsb
imul
mov
adc
inc
fcomps
lea
sub
lret
inc
cwtl
jae
mov
sbb
pop
inc
int
lcall
ret
ret
xchg
rolb
pop
push
add
arpl
xchg
cs
xor
call
aad
jmp
inc
sbb
xchg
test
fwait
xchg
clc
jmp
or
xor
fldenv
sub
push
jb
nop
cmc
jae
gs
ja
mov
ljmp
js
ret
sub
ljmp
enter
inc
mov
xchg
subb
mov
out
push
addr16
test
cmp
cmp
das
push
into
jae
xchg
sub
xchg
add
add
or
leave
and
je
xor
insl
jmp
fiaddl
mov
in
cld
ret
ja
adc
dec
inc
push
inc
sti
aad
pushw
sub
jne
pop
cli
mov
pop
aam
sahf
outsb
inc
cmpsb
les
es
orb
cmp
pop
loop
push
jbe
inc
and
xchg
mov
push
leave
popf
sub
cli
push
movsl
jnp
pop
pop
stos
clc
outsl
shlb
jecxz
notb
imull
dec
jp
pop
iret
jp
push
push
in
pop
or
loop
cmpsb
adcl
cmp
push
fldenv
cmc
arpl
ljmp
xchg
test
mov
imul
mov
lods
pushw
mov
test
pop
aad
push
mov
sub
adc
out
fstpt
int
inc
not
jnp
push
daa
mov
aaa
pop
mov
fidivrs
and
xchg
xchg
scas
enter
rorb
mov
push
add
mov
xor
stos
pop
cmpsl
inc
int
dec
mov
push
mov
insl
lcall
or
ficoms
jge
jae
push
sbb
insb
roll
sbbl
mull
jp
mov
mov
out
xor
mov
imul
out
add
sbb
sub
sub
sahf
jae
add
js
xchg
xor
mov
jmp
bound
mov
add
inc
sar
add
add
and
iret
push
sub
jg
adc
or
cmc
dec
pop
lock
popf
sar
movl
jle
lods
and
or
adc
sbb
xchg
push
lods
push
sti
xorb
push
loope
lret
rol
sub
pop
test
pop
or
jb
es
and
mov
data16
jp
ret
and
jb
imul
pushf
inc
ret
icebp
jbe
xlat
push
or
jle
lods
push
mov
out
xchg
scas
pop
aas
into
sub
pusha
add
push
in
sub
lock
cmpsl
insl
xlat
sbb
roll
add
jae
and
adc
or
ret
repz
xchg
add
mov
push
lahf
fnstsw
lret
mov
movl
sub
shlb
vdivsd
lahf
repnz
push
ss
mull
orl
xchg
push
in
xor
mov
arpl
or
fstpt
fisubl
shll
inc
sahf
nop
jb
jne
loope
mov
clc
aaa
in
out
push
adc
call
or
movsl
xchg
dec
bound
or
jno
loopne
adcb
jl
jmp
pop
and
inc
push
inc
inc
popa
jmp
cmpsb
xchg
hlt
mov
leave
int
cmpsb
fdivs
hlt
testb
lcall
mov
cmc
rclb
sbb
test
xchg
mov
int3
cmovnp
push
push
mov
repnz
sub
lods
pop
popa
mov
dec
cmpsb
sub
jecxz
inc
adc
mov
pop
adc
sahf
sub
lcall
sahf
sub
jmp
popa
fnstcw
aas
xchg
into
sub
jb
loope
leave
dec
cld
pcmpeqb
xchg
pop
xchg
push
addr16
mov
add
xor
inc
or
cs
jmp
or
leave
or
push
jo
es
pop
hlt
jnp
in
das
imul
and
mov
mov
and
adcl
sbb
movsl
addr16
cmc
dec
dec
movsb
rclb
aam
jecxz
cmp
mov
stos
mov
dec
ss
push
and
leave
sbb
mov
mov
in
lock
dec
mov
add
in
aad
push
add
xor
push
test
sub
or
sub
sbb
repz
mov
adcb
pusha
sub
out
lods
pop
mov
mov
inc
fsubrs
divb
fsubs
adc
mov
xchg
mov
sub
popa
inc
div
mov
gs
test
and
movsb
mov
notb
push
pushf
sbb
out
sti
stos
push
dec
sub
jge
sub
push
aas
fcomps
push
negb
fcomp
mov
adc
movsl
jne
mov
push
pop
push
loopne
mov
fnstenv
dec
or
jns
push
int
sahf
inc
popf
rcrb
mov
movsl
icebp
xchg
sahf
dec
lahf
mov
pop
es
addr16
jb
and
push
mov
push
aam
push
add
sub
jnp
and
mov
fwait
add
inc
aam
xor
mov
aam
nop
push
into
adc
xor
cli
or
dec
dec
inc
addb
imul
xor
in
jle
sub
mov
xchg
dec
xor
inc
in
fmul
xchg
rcr
imul
addr16
mov
and
cmp
outsb
jp
pop
test
pop
aad
add
cmc
cmpsl
push
mov
ljmp
mov
add
insl
das
cmpsb
les
insl
sbb
push
adc
mov
sbb
dec
xchg
leave
push
repnz
aas
cmp
fwait
mov
jl
lahf
add
rcrb
sub
inc
ja
popf
mov
aam
xchg
out
xchg
mov
adc
mov
push
pop
push
mov
or
ja
jle
pop
imul
or
popf
cmp
ficoms
jmp
rcl
push
popa
cmp
loop
ret
out
inc
in
mov
fstpt
xchg
and
push
lock
cmp
xchg
call
xchg
loopne
int3
xchg
lret
in
fs
in
aam
and
xorb
data16
movsb
popf
jo
inc
mov
pop
addr16
popl
jns
push
and
jmp
mov
inc
or
rcll
imul
dec
outsb
lahf
js
add
cmp
pop
call
iret
sub
popa
lret
add
es
push
cs
xor
lahf
xor
fxch
cmp
pusha
testl
add
mov
dec
and
cli
stos
addr16
out
sahf
mov
sub
and
shrb
jp
adc
out
cmp
sbb
icebp
stos
aaa
mov
push
jmp
xchg
xorl
inc
inc
inc
pusha
jae
dec
adc
cmpb
sbb
aad
subl
decl
into
loop
jbe
xchg
es
movsb
xchg
jae
xchg
cltd
or
shlb
cmp
add
cmp
dec
mov
popf
or
add
test
jmp
dec
xor
dec
dec
adc
inc
lods
xor
lahf
aas
inc
inc
out
pop
mov
push
mov
cmc
mov
idivb
adc
jp
mov
sbb
insl
fnstsw
cmp
cmp
inc
insl
and
aas
push
lea
xchg
sub
and
iret
int
out
fildl
pop
inc
sub
jnp
fildll
out
ds
or
push
push
pushf
sub
aas
push
outsb
fwait
add
mov
add
stos
mov
sub
loopne
inc
dec
cltd
repnz
filds
fsubs
dec
or
jbe
mov
or
push
xchg
or
dec
outsl
jl
mov
inc
lods
xchg
dec
mov
cmp
mov
fidivl
enter
nop
js
dec
jae
ss
jle
rcrl
rcrl
lcall
and
pop
or
cmp
clc
adc
inc
jbe
jecxz
ljmp
sbb
lds
sbb
xchg
leave
cmpsl
lds
or
sbb
dec
jmp
jnp
add
and
pushf
sub
inc
xchg
aas
jecxz
xor
fcomp
jle
push
hlt
sbb
adc
jb
sbb
push
mov
out
mov
hlt
mov
jle
sub
mov
jle
dec
sub
mov
xchg
roll
pop
push
add
in
cmpsb
adc
imul
cmp
inc
in
sbb
and
into
jmp
out
xchg
out
adc
xchg
mov
push
call
mov
test
iret
lds
inc
add
or
inc
lret
insl
test
adc
dec
add
out
arpl
xchg
xor
jge
sbbl
mov
pop
sub
nop
adc
inc
or
push
cli
je
in
std
roll
test
cmc
outsb
mov
or
inc
aad
push
xchg
in
mov
xchg
jmp
aad
xor
inc
movsl
inc
inc
pop
pop
mov
sahf
xor
jo
jecxz
xchg
push
xchg
jg
add
xchg
mov
test
mov
fs
loopne
xchg
in
adc
pop
dec
adc
test
das
decl
cmpsb
loopne
push
nop
jbe
xchg
aas
xlat
scas
lods
cmp
push
iret
data16
fs
lea
pop
idivb
out
or
xchg
pop
jge
lret
xor
push
adc
fs
xor
stc
cmp
bound
jg
inc
sarl
sub
js
mov
movb
mov
add
stos
xchg
mov
xor
leave
or
aam
das
push
lahf
dec
out
inc
sub
stos
std
lret
in
test
lret
loopne
sub
mov
testb
inc
adc
add
outsl
scas
ds
jp
jnp
cmpsb
std
sti
xchg
fnstsw
adc
loopne
inc
pop
adc
int3
addr16
or
cwtl
or
jecxz,pn
cmp
out
xchg
pop
cmc
mov
in
lret
lahf
aam
jbe
andl
sbb
call
pop
fcmovu
mov
adc
jne
clc
jae
sbb
nop
and
loop
xchg
inc
mov
fistl
pop
add
aaa
popa
push
xor
push
inc
fisubrs
sbb
push
jmp
iret
cmp
mov
lods
pop
or
jae
popf
sarb
aas
lods
and
jns
xor
sub
sub
insb
xchg
inc
push
fwait
inc
xchg
icebp
dec
dec
xor
jge
push
xchg
sarl
xor
push
mov
ss
addr16
std
xchg
sbb
sub
mov
clc
xchg
inc
outsb
jp
push
add
nop
xchg
rorb
int3
insl
add
sahf
popa
xchg
out
shll
and
xchg
loop
jl
ja
xchg
imul
xor
repnz
lret
cmp
jne
pop
shlb
pop
lods
scas
xor
mov
movsb
dec
xchg
xchg
out
mov
mov
pop
mov
sar
xchg
rcrl
ret
pavgb
or
mov
or
cmpsb
imul
mov
xchg
outsb
pop
xchg
insl
sar
sub
mov
adc
push
lods
pop
outsb
pop
xor
jge
shlb
dec
xor
lods
jmp
out
inc
push
cmp
repz
cmpsb
jl
ja
aam
mov
arpl
loopne
push
addr16
dec
fdivl
sbb
iret
mov
ret
pop
stos
xor
lods
inc
push
cmp
imul
push
jmp
mov
jmp
pop
sbb
imul
rolb
negl
sbb
jb
lahf
and
imul
pushl
mov
into
jp
cmp
andl
stos
loopne
mov
mov
out
cmpsl
push
mov
cmp
mov
icebp
movsb
hlt
pop
jg
lods
mov
mov
jecxz
pop
lock
std
dec
sbb
mov
inc
xchg
pop
push
pop
dec
hlt
dec
loopne
sub
addr16
into
sbb
jns
xchg
pop
test
jmp
pushf
xchg
sbb
outsb
fwait
repnz
jecxz
loope
or
or
xor
test
stc
add
sbb
fcomps
xorb
sub
add
cmp
cwtl
dec
notb
ss
dec
mov
pop
lahf
xlat
cli
cmp
ss
jl
sub
mov
pop
sub
add
inc
inc
push
lds
push
mov
lret
cmp
mov
fwait
cli
sub
int3
es
into
sub
sub
xor
cmp
cltd
subb
mov
cld
sbb
xchg
stos
mov
inc
fistpl
sbb
push
bound
or
pop
insb
scas
leave
fistpl
mov
filds
lcall
xor
push
adc
xchg
dec
add
inc
repnz
std
repz
xchg
mov
dec
cld
and
push
push
in
push
sub
add
jns
outsl
push
test
lret
lea
push
lock
and
es
and
mov
or
fnstcw
not
lds
pop
push
mov
xlat
and
lods
inc
les
in
dec
pop
enter
aad
mov
push
sbb
push
cmp
std
sub
adc
mov
bound
movsb
out
xor
test
xorb
insl
aad
cwtl
mov
call
xchg
jne
or
jle
addr16
lahf
rcrl
out
pop
aaa
bound
push
push
mov
arpl
xor
xorl
xchg
jnp
mov
cli
dec
fisttps
out
jne
shlb
and
addr16
pushf
jae
xchg
xchg
dec
or
cli
pushf
loopne
int3
and
stos
push
push
push
jg
aas
daa
xchg
or
aad
or
cwtl
sahf
sub
jp
divb
jo
js
xor
loopne
jge
les
and
movsl
sub
push
cmp
pushf
outsl
rorl
sub
push
and
add
push
cld
or
push
mov
das
xorb
cwtl
mov
inc
lcall
inc
lods
and
mov
cmc
mov
xchg
or
cld
and
cs
jecxz
fdivl
leave
xchg
mov
cmpsl
push
stos
xchg
sbb
push
add
push
lods
inc
nop
mov
mov
jno
jmp
mov
out
pop
sub
cmp
or
add
xor
lcall
adc
loopne
call
repnz
testl
mov
cmp
sbb
adc
inc
mov
ret
jnp
dec
mov
enter
ret
leave
pop
sub
jp
mov
pusha
jb
adc
push
fwait
xor
leave
aas
lret
mov
rorb
mov
sub
mov
xchg
movsb
loope
mov
out
fbld
mov
mov
loopne
out
inc
push
inc
test
mov
into
lea
stos
js
adc
fsubr
clc
mov
pop
fwait
scas
cld
inc
xor
xchg
xchg
mov
stos
sbb
add
or
lods
jp
test
add
je
inc
fdivl
shll
pop
push
lret
push
or
ljmp
dec
xor
mov
fsubl
mov
clc
xor
icebp
out
cli
adc
dec
mov
jle
cmp
cmp
out
dec
mov
adc
and
and
dec
in
jg
mov
leave
shrb
popf
push
pop
mov
jbe
hlt
das
loop
and
in
mov
imul
jae
inc
sub
mov
clc
inc
cltd
mov
pop
jb
pop
and
mov
cmpsb
loop
pop
lahf
cmp
outsb
popf
xor
fwait
push
add
in
in
sub
and
mov
push
push
addr16
stc
pop
mov
inc
pop
inc
xchg
sub
inc
pop
loope
pop
xor
push
cmc
xchg
fbld
dec
xor
scas
mov
lcall
sahf
stos
xchg
cld
lcall
lcall
mov
test
fwait
sti
lret
dec
mov
inc
aam
add
and
pop
sbbb
or
sbb
lods
int
addb
iret
cmp
xchg
sub
data16
pop
out
xchg
pop
or
pop
cmp
xor
mov
sbb
std
repnz
push
xor
jne
xchg
or
sahf
aaa
movsb
sub
sahf
shll
outsl
adc
notb
add
das
push
add
pop
push
sbb
pop
outsl
das
and
faddl
ja
and
mov
sbb
or
test
lea
mov
adc
les
pop
decb
cmp
popf
stc
in
popf
or
xor
rcl
out
mov
xor
int
push
push
mov
xchg
lcall
scas
adc
repz
ja
xor
mov
sub
addr16
nop
insl
push
lret
lret
pop
adc
pop
int
inc
fdiv
jle
outsb
lock
aam
pushf
repz
mov
add
negl
inc
int3
orl
fisttpll
cmp
fucomi
sub
movsl
and
adc
jmp
or
and
outsb
jp
sub
mov
enter
stos
or
call
add
sub
push
mov
mov
inc
ljmp
loop
push
pop
mov
scas
xchg
fsubrl
shl
push
mov
add
gs
add
mov
aam
ljmp
pushf
jecxz
scas
mov
xchg
decb
cmp
add
push
cmpsb
cmc
cli
push
sub
aad
cmp
add
or
testl
adc
js
push
xchg
sbb
sbb
push
call
std
and
subl
add
adc
aam
push
clc
out
cli
inc
lea
loopne
shll
cltd
stos
add
push
cwtl
scas
ja
or
xor
dec
scas
inc
subl
or
ljmp
cmpsb
jl
loop
add
into
iret
mov
fnsave
cltd
adc
pop
das
jno
mov
dec
xchg
adcb
mov
and
jne
push
test
dec
cs
push
sub
xchg
adc
xchg
leave
scas
nop
cli
mov
loopne
sub
cmp
mov
leave
fs
mov
je
mov
outsb
jb
clc
cmp
arpl
adc
mov
rol
data16
sti
pop
loop
mov
divb
stos
xchg
ja
aad
or
or
insl
nop
sub
aas
into
aas
and
shlb
pop
jmp
add
mov
or
dec
aad
rolb
mov
jge
addl
rolb
add
xchg
frstor
cld
lcall
push
lods
out
popf
mov
int
sbbl
orl
pop
sbb
mov
dec
cld
xchg
push
ret
xchg
and
add
mov
imul
call
cwtl
or
mov
push
sbb
pop
xor
cmc
stos
ret
outsb
lea
sbb
insl
scas
mov
loopne
push
xchg
jb
sbb
add
js
arpl
push
aas
push
inc
loopne
lds
inc
ljmp
inc
sbb
aaa
rcrb
lret
cmc
pop
cmp
inc
sbb
inc
sbb
mov
xchg
sub
outsl
and
in
or
sbb
jns
xchg
sub
or
jl
xor
mov
push
lock
jmp
data16
lahf
fs
jge
cs
pop
sbb
xchg
sbb
mov
les
inc
fildl
adc
inc
scas
xlat
jmp
ficompl
mov
mov
lcall
fmuls
hlt
jg
fnstsw
adc
and
sub
dec
mov
xchg
mov
push
jmp
dec
sbb
cmpl
or
add
xchg
push
pop
bound
inc
sbb
addb
jmp
pop
divb
popl
stos
outsl
in
push
xor
sub
mov
test
adc
inc
adc
negl
daa
mov
pop
push
icebp
cltd
push
movsb
sbb
adc
sbb
jb
pop
scas
inc
lea
daa
add
push
fnstenv
jmp
mov
fldcw
ljmp
adc
jno
pop
ret
add
fisttpll
addl
mov
dec
pop
lcall
push
dec
adc
push
cmp
fcomi
or
mov
fdecstp
push
cmp
jns
mov
sbb
push
mov
out
push
or
mov
in
imul
and
push
adc
add
xor
aaa
add
push
ss
jecxz
scas
inc
lods
shr
sbbl
or
loope
rolb
xor
add
mov
jae
les
shr
addl
jb
daa
jb
fcomi
stc
dec
push
mov
sbb
xor
xchg
lret
sbb
cld
cwtl
pusha
cmp
lds
lret
adc
mov
outsl
push
push
mov
mov
pusha
jecxz
sub
or
sub
mov
test
loopne
out
mov
aad
ds
lahf
ss
pop
sbb
add
jp
fcmovnu
pop
lock
inc
mov
inc
dec
pop
jae
shld
js
push
ret
cmp
in
inc
and
add
in
push
push
jmp
rorl
sahf
jnp
jns
add
push
mov
mov
push
push
inc
dec
loop
cltd
lea
mov
pusha
stos
aas
lret
xchg
cmc
jo
dec
repnz
sbb
mov
mov
cmp
dec
loopne
rcl
sub
mov
data16
xchg
arpl
into
push
mov
adc
pop
jnp
call
lcall
pop
sbb
xor
movsb
inc
pop
or
dec
cmp
pop
mov
outsb
jp
aad
jle
out
adc
add
pop
lahf
movsb
test
sub
add
pop
bound
mov
push
out
stc
popf
inc
mov
and
adc
loop
les
cs
xchg
or
ret
dec
cld
jecxz
mov
cltd
sbb
ret
xchg
and
pop
in
jno
inc
shlb
fs
rol
cmp
repz
rclb
ret
pop
fmulp
add
add
imul
mov
adc
sbb
jge
jl
in
xlat
loop
fwait
adc
in
or
cmpsl
aad
and
sub
sub
cmpsl
popf
xor
int
mov
lret
rcrb
mov
or
xchg
iret
pop
popf
repz
mov
cmp
out
push
pushf
sub
loopne
or
pop
mov
int
or
loop
push
mov
sar
adc
cmp
xchg
insl
jg
adc
ficoms
sub
mov
dec
enter
lds
and
aam
ret
pop
movsl
outsl
sub
or
pushf
cmp
cmp
sti
jecxz
mov
stos
fldcw
mov
movsl
lcall
pop
sbb
cli
xchg
xchg
inc
add
cli
enter
scas
push
out
xchg
rcrb
cmc
mov
jno
adc
test
pop
ret
xor
ffreep
mov
lret
cmp
sub
mov
shl
das
movsb
repz
sub
dec
aad
cmp
rcl
xlat
out
mov
roll
xchg
xchg
xlat
or
sbb
ljmp
call
nop
lock
pop
cmp
ficomps
dec
xchg
pop
lods
movsl
pop
xor
test
pop
shll
xchg
jecxz
test
xchg
mov
pop
repz
inc
jb
out
sub
pop
cmp
movb
sarb
loopne
mov
or
pop
sub
xchg
xor
add
push
in
sbbl
pop
aas
stc
push
pop
xchg
andb
add
and
popa
add
push
test
xchg
inc
ss
cmp
dec
in
wrmsr
push
xor
xor
and
adc
inc
loope
leave
cmpsb
xchg
mov
imul
ss
lods
call
cs
mov
cld
scas
loop
pop
cmpsb
call
ficoms
lea
sub
subb
mov
scas
cmpsl
sub
xlat
out
nop
pop
jge
imulb
ja
popa
cs
pop
in
adc
inc
nop
in
cmpsl
jmp
push
adc
enter
in
mov
push
jge
arpl
jae
in
pop
es
push
push
iret
addb
jno
push
sub
xchg
test
shll
dec
and
mov
xchg
popf
stc
mov
es
in
pop
loopne
test
incb
loope
hlt
pop
or
cli
test
sub
pop
xchg
ljmp
adc
dec
imulb
faddp
sub
in
bound
xor
outsl
mov
adc
and
adc
outsl
push
jae
push
lods
mov
push
shlw
test
mov
aaa
jns
lock
xchg
adc
jmp
mov
insb
decl
int3
idivl
ja
cmp
lcall
test
sub
add
push
cmpsb
push
mov
xchg
icebp
in
push
fcompl
std
adc
push
jmp
sahf
imul
or
rorb
xchg
mov
inc
sub
out
mov
mov
icebp
add
sub
and
cmpsb
push
cld
out
mov
xchg
fwait
pop
aaa
push
jecxz
out
std
jle
xchg
scas
std
jnp
sub
ret
sti
pop
pop
sahf
movups
adc
mov
fistpll
pop
sbb
dec
lods
mov
dec
or
test
rorb
dec
iret
out
xor
add
into
fildll
aad
push
or
aad
cmp
cmp
sbb
pushf
xchg
in
inc
mov
xlat
push
cmp
nop
push
jecxz
pop
add
lcall
sub
xor
sbb
andb
mov
sti
fwait
mov
xor
lods
stc
or
int
mov
adc
or
and
sbb
cmp
fistps
xor
push
xchg
ja
fsubl
mov
push
je
jl
or
movsb
arpl
push
cmc
cmc
adc
jbe
adc
xor
push
scas
sbbl
ja
mov
mov
cli
inc
sub
adc
pop
push
outsl
sub
pop
lahf
cmp
ret
pop
cld
lods
mov
xor
dec
loope
pop
xchg
push
sub
cli
xchg
xlat
xchg
notb
mov
cld
push
iret
pushf
push
xchg
imul
aas
sti
jbe
or
mov
and
xchg
mov
sub
sbb
jle
add
mov
mov
bound
pop
jle
aaa
mov
int3
sub
xchg
inc
pop
inc
mov
ret
popa
inc
cld
dec
lds
pop
popa
out
mov
sub
shlb
pop
mov
mov
out
sbb
scas
push
sbb
xor
leave
mov
push
addr16
outsb
lahf
es
push
lds
and
insl
inc
rol
jmp
ret
dec
mov
ret
jns
cli
xchg
daa
data16
repnz
loopew
fdivrs
dec
ror
mov
js
andb
mov
jns
jnp
mov
add
bnd
aaa
pop
shlb
rolb
in
loope
arpl
add
add
cld
adc
xchg
out
pop
call
mov
repz
add
fcoms
push
push
out
mov
mov
mov
pop
jns
mov
mov
sbb
loop
pusha
inc
add
push
mov
dec
mov
mov
test
inc
dec
mov
mov
mov
loopne
data16
cmp
jbe
or
push
cmp
in
sbb
jb
push
or
push
mov
int
fcomi
lret
int3
test
stos
mov
pop
imul
lods
or
aaa
mov
xchg
pusha
mov
cmp
cltd
leave
push
pop
mov
mov
sbb
xchg
and
out
popf
and
ljmp
testb
dec
lea
lods
outsb
jnp
movsl
out
mov
cwtl
sbb
inc
and
push
jno
test
add
iret
out
aad
fbld
fldenv
arpl
mov
dec
mov
sbbb
fcmove
in
xor
cmpsl
sbb
call
xchg
in
pop
xor
cmpsb
or
and
cwtl
dec
lock
fsts
in
rcr
in
cmp
popf
pop
add
jne
pop
add
inc
jmp
loop
sti
add
clc
sub
push
movsl
test
dec
test
hlt
aad
scas
cmp
mov
or
mov
in
movsl
fidivrl
mov
cmpsb
mov
jmp
negl
xor
inc
je
xchg
aas
sub
sti
sub
jmp
pop
fwait
dec
clc
inc
xchg
lods
jae
loop
lea
push
mov
les
or
subl
adc
cmp
fadd
lcall
dec
pop
sub
imul
mov
mov
jp
les
int
in
mov
lahf
push
inc
fldl
dec
mov
aad
xor
stos
xchg
jae
cmc
das
mov
fstl
nop
mov
cwtl
outsb
fwait
pop
xor
xchg
cmp
iret
lock
add
fsubrl
loopne
aad
inc
or
inc
adc
sti
aam
mov
adc
in
push
ret
push
xchg
push
and
ret
mov
sahf
mov
mov
aas
mov
shlb
lock
out
cmp
jp
lcall
arpl
cmp
hlt
sbb
aaa
cmp
pop
xor
ja
push
pop
adc
stos
jge
and
cmp
lods
repnz
test
inc
mov
mov
pop
js
sub
xchg
xchg
mov
movl
pop
add
mov
lcall
scas
xchg
in
sar
adc
add
ljmp
pop
xchg
cmpsb
cmp
cmp
cmp
and
sbb
jae
cmpl
scas
std
or
cmpsb
jbe
and
out
or
test
idivb
ficoml
mov
aad
jg
inc
pop
mov
orb
pop
sarl
adc
lds
jbe
in
aad
add
subl
push
and
les
mov
jno
push
stos
xchg
pusha
lahf
cmpsb
enter
xor
pusha
xchg
mov
fs
iret
mov
lret
and
dec
push
not
push
cmp
xor
mov
jo
push
jae
and
pop
into
sti
iretw
aad
pop
sbb
in
dec
imul
inc
push
sub
loopne
push
cmp
mov
push
mov
mov
jnp
mov
mov
xchg
push
outsl
test
inc
pop
cmp
imul
dec
jl
mov
jo
add
or
jnp
ds
and
push
sbb
jmp
orl
aad
pusha
and
inc
mov
xchg
push
push
pop
or
and
sub
jmp
mov
sbbl
cmp
outsb
outsb
fsubl
dec
jge
sbb
cmp
push
push
fidivrl
fisubrs
cmc
stos
fsubs
popa
sbbl
jge
scas
ds
stos
neg
pop
gs
cmp
in
mov
and
pop
out
ret
hlt
repz
sub
jle
insl
adc
outsl
sub
insb
leave
xor
add
inc
sub
pop
imul
or
sarw
std
rolb
cmp
enter
push
push
mull
or
xlat
jbe
enter
scas
jb
pop
jg
mov
mov
into
inc
je
pop
mov
loopne
data16
out
add
aad
subl
lcall
testb
and
mov
adc
popf
jae
dec
xchg
stos
adc
fdivs
add
negb
mov
ljmp
outsb
push
enter
sub
testb
sbb
push
push
add
dec
dec
and
lods
popf
dec
xchg
js
test
dec
dec
sbb
out
cmpsl
jnp
mov
mov
std
shr
jb
sbb
outsb
fdivrl
adc
pop
pop
repnz
mov
dec
inc
jg
add
shl
mov
jnp
outsw
addr16
scas
inc
fstpl
jg
pushf
cmpsl
int3
arpl
and
jp
sbb
inc
shlb
push
mov
addr16
fwait
add
jp
pop
test
xchg
mov
sbb
testb
lea
test
xchg
in
sbb
cld
addr16
imul
lret
push
mov
pop
in
mov
adc
or
arpl
test
repz
push
jbe
adc
outsl
pop
scas
adc
ffreep
ss
jecxz
mov
pop
repz
repz
sti
mov
shrb
adcl
pop
xchg
add
cmp
push
imul
repz
push
movsl
inc
je
jb
popf
xor
push
scas
gs
xchg
pushf
outsl
mov
pop
mulb
mov
xchg
cmpsl
mov
sbb
push
cld
ret
cmp
and
pop
push
push
dec
push
mov
push
cltd
xor
lret
mov
rcll
call
dec
and
mov
mov
mov
icebp
add
enter
nop
mov
xchg
and
add
inc
xor
out
pop
mov
jg
cmp
push
call
jne
cmp
jg
push
daa
inc
pop
jae
int
inc
shlb
cltd
jle
pop
clc
fnstcw
push
mov
insl
add
xchg
ds
hlt
inc
stos
and
inc
hlt
sub
and
shrb
dec
stos
sub
add
mov
pop
addl
out
flds
fimuls
mov
jno
mov
sbb
pop
ret
repz
cmp
outsb
clc
dec
and
push
enter
test
ret
mov
cmp
enter
jle
mov
push
jg
sub
jge
out
jmp
lretw
cmp
or
pop
repnz
aad
into
outsb
call
outsb
inc
push
rcrl
cmpsb
push
push
mov
int3
add
jbe
leave
inc
mov
push
pop
sub
lods
call
daa
or
mov
nop
mov
ret
inc
mov
mov
xchg
dec
pop
jp
popf
push
mov
hlt
int3
push
das
enter
divl
pop
dec
or
xchg
popa
and
iret
cmc
call
in
push
xchg
push
sbb
jb
out
mov
pusha
ss
xor
bound
xchg
pop
mov
mov
sahf
inc
pusha
rcr
addr16
sahf
push
movsb
add
scas
xchg
adc
or
mov
inc
pop
adc
mov
xor
cmp
sub
push
adc
loop
icebp
iret
xchg
jecxz
push
mov
sub
push
mov
scas
adc
xor
addr16
dec
fbstp
dec
inc
and
pop
mov
movsl
fists
xchg
test
push
gs
adc
jmp
sbb
mov
out
jnp
mov
mov
adc
inc
push
clc
xor
fnstsw
loopne
push
popf
push
inc
test
jmp
stos
mov
xor
jmp
mov
xchg
outsb
cmpsb
dec
xchg
popf
mov
dec
xor
fsts
mov
mov
aam
movsb
add
inc
outsl
loop
ja
das
cmp
jl
ja
jecxz
mov
inc
loop
pop
cmp
pop
in
xchg
dec
data16
ret
sti
ret
cmp
in
add
sub
mov
clc
ljmp
cs
cmp
push
or
pusha
or
xor
xchg
daa
mov
stos
cld
inc
out
adc
lea
xchg
mov
mov
in
daa
and
stos
inc
cld
cmp
out
sub
shrl
cmp
call
add
push
es
mov
fcoms
pusha
int
sti
arpl
dec
pop
add
fnsave
gs
xchg
and
push
or
xchg
stos
movsb
inc
pop
lea
mov
outsb
jg
mov
inc
popf
sbb
ja
mov
mov
push
and
nop
push
adc
test
jb
cmp
insb
ret
push
out
add
dec
dec
popa
test
add
dec
in
and
jmp
int3
and
dec
movsl
shlb
imul
sbb
mov
sahf
ror
psubsw
int
mov
pop
cltd
xor
jmp
mov
dec
mov
cwtl
jg
je
push
add
pop
out
out
test
leave
ljmp
mov
sarl
cltd
cmp
inc
lea
lret
xor
gs
lods
ljmp
mov
mov
sub
fbld
shl
mov
or
nop
daa
inc
andb
scas
pop
stc
repnz
div
insb
dec
pop
cltd
cmpsl
mov
cmp
sbb
push
jno
nop
popa
lock
pushf
arpl
loopne
push
pop
mov
pop
lock
inc
ja
daa
jae
stc
cmp
push
or
fcomps
sub
mov
sbb
sub
push
jne
loope
pop
mov
or
mov
mov
dec
sbb
xor
jl
cli
inc
or
or
add
adc
pop
repz
imul
jecxz
mov
ja
hlt
dec
in
jge
cmc
sub
and
lret
xrelease
push
push
movsb
loop
and
push
rorl
aaa
out
jmp
fisubrs
pop
pop
insl
jmp
js
xchg
outsl
dec
and
xchg
mov
inc
arpl
mov
fsubl
ds
lret
lret
push
pusha
push
pop
insb
inc
subb
out
or
rdpmc
xor
stos
inc
push
enter
cwtl
mov
sub
push
mov
mov
inc
sbb
lcall
jne
push
test
pop
rclb
pop
push
and
insl
push
jmp
adc
lcall
xor
adc
lds
jno
ja
mov
sbb
xchg
es
les
mov
mov
dec
in
adc
jb
shrl
ja
mov
cld
cmpsb
cmp
sub
mov
mov
pop
das
stos
out
ds
cmp
pusha
adc
xor
js
xor
pop
pop
push
inc
fadd
mov
jecxz
dec
iret
pop
cli
xchg
dec
fsubrs
fbld
mov
mov
sub
stos
sub
xor
je
xor
dec
mov
fs
ret
lods
push
sub
lahf
add
xchg
mov
add
push
pop
fidivrl
loop
pop
mov
out
inc
inc
jp
mov
gs
fcmovnb
ss
adc
fstl
aad
mov
xor
mov
sub
mov
mov
cwtl
movsb
push
jno
rorl
jns
lods
loopne
mov
ja
cmp
mov
xchg
mov
lock
nop
daa
inc
movaps
push
cmpsl
sbb
or
aam
add
mov
pop
cmp
sbb
cmp
jp
push
and
in
push
xchg
xor
icebp
xchg
rcr
and
mov
pop
dec
fldt
push
js
sbbb
addr16
imul
ds
dec
jne
add
iret
pushf
pop
repnz
dec
sarl
mov
xchg
cmpsl
lcall
in
cli
sub
ss
and
out
je
inc
xchg
mov
push
or
xor
out
dec
jge
orb
cld
andb
insb
mov
test
mov
or
out
fwait
sub
test
loopne
movsb
ja
add
xor
jno
inc
in
and
lods
inc
lret
cmp
lahf
push
std
xchg
fisubrs
popf
sar
mov
testl
and
jbe
out
mov
loope
jb
mov
outsb
lahf
xor
in
mov
ficoml
mov
or
cmp
stos
fidivs
pop
pop
jae
pop
lahf
ss
clc
fdivp
sub
cmpsb
mov
insl
cwtl
out
enter
or
scas
push
inc
pop
xchg
push
ja
nop
stos
mov
cs
in
jns
add
xchg
push
loop
sbb
mov
shl
popf
push
xchg
out
imul
sar
and
sub
xor
xchg
add
jmp
mov
arpl
pop
push
dec
inc
scas
xchg
or
xlat
fsubrs
loop
mov
fstpl
inc
in
mov
rclb
ret
push
cmc
jl
test
and
ds
sub
sub
rcrb
das
dec
lar
sbb
mov
lods
ljmp
xchg
sarb
mov
add
pop
out
inc
lods
dec
hlt
mov
int
pop
pop
jae
mov
stos
adc
out
cmp
data16
adc
loope
je,pt
outsl
repz
movsl
mov
sub
and
add
mov
scas
ret
adc
mov
xchg
enter
sahf
xor
sub
cmpsb
in
pop
pop
cmc
mov
mov
push
sub
clc
mov
cmpsl
adc
testb
mov
jp
mov
cmc
ret
out
mov
iret
ret
out
jle
mov
je
popa
pop
ja
inc
lcall
inc
fcoml
cmp
cld
mov
popf
lods
jge
es
setg
dec
add
pop
add
jl
and
dec
loopne
fwait
sbb
inc
lahf
or
jmp
add
pop
popa
sbb
fmull
or
sub
cmp
dec
in
call
lock
dec
aad
cmp
fwait
loopne
or
ret
outsb
xor
test
fadds
adc
in
pop
popa
mov
das
cmp
xlat
xchg
arpl
scas
mov
cmp
xchg
scas
mov
in
aam
xlat
sbb
xchg
or
mov
in
out
ret
pop
pop
push
aaa
add
lcall
fdivs
xchg
sbb
xlat
mov
or
push
mov
out
adc
dec
dec
subl
shlb
dec
scas
fimuls
mov
and
mov
out
xor
mov
cwtl
mov
ret
mov
das
and
stos
and
sub
fsubr
pop
cwtl
out
rclb
outsb
out
out
cmp
mov
mov
sub
dec
and
stos
cld
push
fmuls
or
jg
lret
mov
jb
test
in
mov
cmc
pop
mov
xchg
add
out
mov
bnd
mov
add
jecxz
gs
shrl
inc
mov
mov
jnp
ja
cmpsb
sub
ds
idivl
add
bound
xchg
fisubrs
mov
dec
out
mov
mov
lcall
push
sub
cmp
xchg
lret
cmc
mov
fcoms
or
and
lahf
jmp
mov
repz
cmp
icebp
mov
scas
enter
dec
and
mov
cli
loope
inc
loop
dec
clc
cmp
fs
push
int
dec
pop
mov
fisubs
cmp
popa
negb
vcvtsd2ss
jns
cmp
lock
cmp
xchg
scas
mov
pop
lret
out
lret
xor
lret
jmp
cmp
add
sbbb
push
push
call
das
lods
pop
rcl
cmp
push
cmc
out
clc
and
mov
rorb
add
inc
cwtl
cwtl
and
push
addr16
sbb
loopne,pt
jle
pusha
cmpsl
out
mov
rorb
mov
fnstenv
sub
loope
cmp
aaa
xchg
mov
fisubs
cmpl
fdivrl
loopne
or
xor
pop
push
aas
sbb
sbb
pusha
push
xor
arpl
xorl
pop
repnz
adc
jae
pop
mov
mov
out
cmp
xchg
rorw
cmc
loop
insb
addr16
sti
pop
jae
or
xlat
arpl
imul
incl
es
push
mov
lcall
inc
xor
inc
fcmovne
mov
mov
dec
loop
lock
push
add
in
xchg
xchg
adc
cmc
daa
fdivrs
xor
fwait
cmpsl
cmp
jle
cmpsb
in
and
or
jecxz
xchg
add
ror
mov
loop
in
cwtl
mov
pop
mov
mov
aad
sub
es
or
mov
cmp
xor
insl
inc
adc
push
arpl
scas
xor
aad
mov
pop
lcall
dec
loop
ret
je
pusha
dec
sub
cwtl
mov
push
fsts
insl
cmp
add
dec
pushl
ds
mov
pop
lds
mov
loopne
or
cmp
call
aas
insl
adc
test
lret
out
adc
push
das
sub
and
or
ja
xchg
sbb
shlb
rcll
ja
xor
cmpsb
mov
adc
std
mulb
into
adc
jp
fldt
iret
rol
fdivl
inc
jecxz
ret
movb
enter
iret
fnstenv
ret
aam
add
rcrb
and
xchg
push
mov
xor
test
lret
adc
fidivl
sbb
adc
sub
and
inc
pop
pushf
daa
pop
mov
adc
enter
add
cmp
clc
push
jge
or
adc
lret
sbb
inc
out
mov
out
pop
je
movsb
aad
in
lcall
and
or
or
adc
cmc
popf
das
push
scas
lods
call
sub
lcall
dec
insl
jmp
push
mov
fcoms
test
and
cmpsl
xor
jbe
nop
mov
push
and
sub
pop
repz
push
imulb
bound
jae
dec
lea
adc
cmpsl
orb
cli
push
addr16
adc
or
movsl
bound
dec
cmp
fwait
jg
inc
dec
adc
icebp
out
stos
and
mov
jae
inc
fisttpl
shll
pop
xchg
mov
lock
mov
lods
cmpsb
call
mov
rcrb
add
test
adc
lds
cltd
mov
dec
adc
rcr
test
into
and
movsb
cld
mov
sarb
push
mov
xor
nop
pop
out
mov
or
add
idivl
lahf
daa
adc
adcb
or
aad
mov
xor
add
inc
fdivl
mov
arpl
mov
je
mov
mov
or
call
scas
push
rcrl
xor
mov
test
out
xlat
fcompl
mov
cmp
ret
inc
add
js
jbe
jbe
sub
adc
orl
inc
xor
mov
mov
jo
inc
rcrb
vunpcklps
testb
jg
mov
out
sbb
sbb
pop
dec
mov
push
insb
add
outsl
or
mov
sbb
jb
xor
pop
das
mov
inc
add
pop
stos
sbbb
dec
mov
cmpsl
pop
mov
mov
mov
mov
and
cmp
sbb
fisubs
jg
sub
lods
test
ret
insl
test
or
aad
js
stos
mov
pusha
les
mull
pop
pop
cmp
negb
pop
cmp
cmp
pop
out
jge
iret
push
jecxz
lds
cmp
xlat
mov
jp
xor
jnp
loop
test
and
lret
and
push
dec
mov
jle
add
add
aam
outsl
push
aam
in
fldenv
lock
je
mov
cwtl
mov
add
lret
xor
pop
loopne
pusha
inc
fistl
das
pop
cmp
xlat
outsb
xacquire
daa
shrb
aam
cmp
fisubl
negb
mov
sti
imul
jnp
dec
adc
xor
xor
mov
sub
xchg
mov
js
test
lahf
aam
nop
stos
xor
test
push
fisttpll
sbb
andl
lods
lods
add
bound
xlat
lods
outsb
sub
adc
jmp
int
popa
les
jbe
sub
mov
sbb
sbb
inc
ret
jne
repz
push
rclb
aas
pop
ja
mov
enter
dec
or
stos
sarb
in
push
dec
scas
mov
xlat
jbe
pop
or
adc
test
lret
movsl
test
mov
and
mov
fadds
lods
adc
clc
repz
sbb
fdivs
add
es
jg
mov
add
icebp
pop
mov
aaa
push
mov
dec
int
test
jae
add
ja
or
or
sub
imul
lock
jg
add
push
add
mov
subb
arpl
clc
pop
and
and
ja
jecxz
ficompl
xchg
mov
je
fs
cmp
je
mov
arpl
push
adc
out
stos
add
mov
test
adcl
aas
add
shll
lcall
ficomps
or
aas
add
sar
xchg
sti
clc
pop
push
int
mov
push
stos
xchg
xor
jg
aaa
movb
and
aaa
xchg
jmp
mov
out
mov
push
push
lcall
sahf
lock
test
test
fisttps
scas
cmpsl
mov
in
ret
lret
and
adc
jmp
adc
out
repz
cltd
push
fstl
cmpsb
xor
add
jbe
add
fsub
jno
add
adc
push
pop
sbb
jb
cmp
loopne
inc
mov
mov
bound
push
or
pop
sbb
pop
push
cmp
gs
ret
jle
movntq
jne
pop
rorb
ja
aaa
and
xchg
lods
ljmp
testl
imul
sti
pop
imul
dec
stos
mov
shlb
pop
fldt
je
stos
sti
mov
daa
sub
jb
daa
mov
cmc
xchg
dec
insl
mov
mov
lret
xor
sti
dec
cmpl
imul
ss
fadds
fsqrt
jne
dec
fildll
pusha
cmp
dec
bndstx
mov
lds
xor
jo
roll
mov
mov
arpl
cmp
mov
sbb
add
jne
leave
push
sbb
jge
inc
sub
sbb
jecxz
jmp
popf
mov
sbb
pop
jmp
adc
pop
jmp
sbb
lds
push
dec
jmp
mov
pop
aaa
jb
icebp
pop
sbb
lea
stos
push
or
cmc
mov
cmp
and
mov
mov
fidivrs
in
movsb
rclb
sub
xchg
daa
jge
xor
push
cmc
adcb
dec
sub
cmp
jnp
sar
adc
mov
cmpb
fwait
sbb
adc
add
aad
pop
movsl
mov
jmp
dec
in
scas
out
lds
jns
pop
sbb
add
xor
out
fwait
nop
insb
rorb
mov
aas
lahf
mov
fiaddl
mov
decb
and
popa
add
add
sub
pop
jg
test
shll
adc
mov
adc
js
xor
mov
sarl
jmp
aas
lcall
jnp
push
pop
jmp
mov
into
shll
ds
jl
int3
xor
xchg
ret
hlt
push
sub
cmp
test
jge
cwtl
daa
inc
xchg
add
int
lods
or
scas
xor
adc
fwait
and
out
and
rclb
ljmp
xchg
jle
adc
scas
cmpsl
sbb
and
leave
cmp
imul
dec
dec
repz
pop
addl
adc
je
add
push
sub
aaa
call
bound
repz
sbb
xchg
lods
sub
leave
jno
add
ret
and
push
sub
dec
icebp
xchg
add
test
mov
out
mov
jle
mov
jle
push
adc
pop
sbb
lea
cmp
repz
cmpsl
shll
adc
in
fmulp
push
lock
xchg
shrb
adc
mov
into
jno
in
adc
push
pop
push
pop
mov
jge
and
jns
mov
lock
push
insl
inc
insb
daa
add
shrl
pusha
push
dec
mov
sub
inc
clc
aaa
xor
imul
test
pop
xor
nop
insb
test
lea
and
rorl
nop
fcoml
push
xor
inc
push
mov
mov
cmp
lods
daa
xchg
cmp
mov
lcall
mov
push
mov
out
xlat
outsb
loopne
mov
adc
and
in
sahf
and
cmp
inc
mov
movsl
inc
push
std
lret
xor
push
test
negl
mov
lret
cmpsl
mov
mov
outsb
add
nop
movb
fdivp
push
out
lret
sub
out
data16
mov
adc
mov
inc
pusha
xor
loop
pop
in
push
cmpsb
push
pop
push
lret
pop
aas
or
arpl
hlt
adc
pop
sbb
inc
cmp
aas
push
mov
nop
xor
inc
fsubl
adc
fucomip
inc
push
lods
push
arpl
cmp
pusha
enter
lcall
push
stc
jno
test
and
mov
mov
sub
jle
jge
add
mov
xchg
sbb
dec
ds
cmp
in
push
icebp
xchg
in
addb
pop
out
xchg
shld
repz
aaa
xor
aad
mov
mov
mov
jg
ficompl
pop
pop
sub
dec
fcmovbe
ret
movsl
inc
pop
out
mov
inc
dec
out
cmp
adc
lcall
pop
sub
xor
or
jle
xchg
xchg
jo
lods
inc
pop
adc
mov
mov
cmc
dec
outsl
out
mov
mov
push
jmp
int3
and
mov
mov
add
inc
insb
inc
mov
xchg
subl
inc
decl
mov
sub
sarb
xor
bound
xor
sahf
xor
xor
mov
xchg
push
and
and
mov
push
outsb
cmp
sbb
and
mov
lods
cld
je
jo
pop
dec
pop
dec
pop
insb
jle
pushf
ret
push
cli
dec
lcall
push
xor
daa
pop
cwtl
lea
pop
jmp
movsb
divb
sub
push
repnz
iret
cmpsb
popf
adc
push
sub
sti
iret
push
data16
and
pop
stos
dec
mov
or
pop
aam
jne
push
ljmp
xorb
push
fnstsw
jp
imul
mov
outsb
insl
push
push
mov
and
and
jle
fcompl
mov
nop
mov
xor
xchg
xor
jbe
sub
enter
pushf
icebp
or
outsl
das
pop
movsb
mov
imul
hlt
sbb
mov
aas
inc
outsl
insl
ret
mov
idiv
psllq
in
loop
jge
pop
mov
push
out
jecxz
jecxz
jo
push
rcrl
aas
insb
cld
lea
lahf
out
inc
fcoms
ds
into
cmp
jmp
pop
push
mov
shl
je
fbstp
pop
xor
xchg
data16
neg
int3
dec
push
adc
icebp
sbb
repnz
cmp
rclb
sub
fstl
ljmp
mov
out
je
movsl
cmp
xchg
cltd
inc
jmp
xor
xor
inc
pop
jg
adcb
jb
pop
stos
rclb
xor
pop
xor
imul
push
imul
lahf
or
in
or
and
dec
insb
test
orl
cmp
xor
mov
cmpl
dec
decl
add
mov
pop
test
or
stc
inc
xor
cmpsl
xor
fbstp
iret
repz
test
out
sbb
dec
pop
leave
jb
jl
xchg
add
lods
je
cmpsb
cld
xchg
dec
jns
xorl
xchg
mov
xchg
mulb
and
and
sbb
mov
insb
loopne
jge
inc
hlt
lret
mov
or
mov
test
cmc
mov
out
xchg
call
push
sub
in
stos
pop
xor
push
inc
xchg
scas
and
cmpsb
fisubrs
push
mov
mov
int
in
sbb
bswap
cmp
imul
lcall
mov
stos
imul
sub
lds
test
hlt
mov
sbb
pop
mov
jecxz
pushf
fdivs
pusha
nop
push
add
decl
inc
test
mov
sub
sub
xchg
data16
out
lret
mov
push
mov
inc
mov
inc
ret
daa
or
or
mov
dec
stc
lock
repz
and
nop
ret
clc
insl
xor
xchg
iret
mov
jmp
lock
out
inc
mov
negb
pop
in
inc
adc
inc
sti
out
test
push
jmp
and
dec
out
out
imul
aas
out
xchg
inc
fildl
jp
xlat
push
popa
cltd
push
icebp
repnz
or
cltd
push
sub
lahf
jge
lods
cmp
cmpsl
cmp
mov
iret
fucom
mov
arpl
leave
into
gs
orl
in
aas
inc
mov
mov
icebp
jge
push
outsl
sarb
or
pop
sub
mov
mov
sahf
push
outsb
xor
ret
iret
dec
mov
adc
ds
mov
stos
in
mov
jnp
js
rorb
mov
sarl
fstl
mov
shlb
cmc
and
test
mov
mov
sbb
mov
pop
movsb
inc
pop
into
mov
or
or
cmp
sti
xchg
xor
gs
push
imul
push
add
gs
mov
inc
xchg
jae
out
fwait
das
mov
cltd
sarl
cld
jle
mov
push
adc
pop
and
es
pop
jg
fstpl
mov
nop
pop
insl
add
mov
loop,pt
adc
adc
push
mov
in
cmp
decl
leave
out
cs
stc
mov
dec
or
in
rorb
int
call
aas
dec
outsl
pop
insl
sahf
xor
dec
pop
cmp
aad
push
nop
pop
pop
mov
mov
push
shrl
inc
add
ja
sbb
outsl
outsb
stc
push
mov
mov
leave
lods
pop
lods
loope
cmp
in
mov
push
inc
sahf
or
jb
cmp
push
dec
lcall
es
into
rcll
nop
daa
mov
js
adc
aaa
into
or
mov
add
fsubrl
test
mov
adc
cmp
or
dec
ret
lahf
jg
outsl
loop
adc
dec
popf
inc
int
jmp
imul
cltd
cld
in
inc
add
inc
pushf
fiaddl
outsb
mov
out
xor
jnp
lock
or
outsl
lea
into
adcb
test
lret
mov
push
pop
rolb
and
inc
xor
push
sbb
adc
pop
stos
jo
sahf
mov
push
cli
mov
and
mov
outsb
pop
xchg
sti
icebp
xchg
mov
rcrb
aam
inc
idiv
fsubr
fcoml
fldenv
orl
inc
inc
add
cmp
fucom
into
and
ds
out
divl
inc
mov
pusha
xchg
inc
pop
test
fldcw
mov
enter
bound
mov
mov
pop
adc
xor
shll
out
outsl
rcrb
dec
loop
out
popf
mov
sbb
adc
inc
loopne
inc
mov
loop,pn
test
testb
mov
inc
lahf
xorl
fimuls
pop
jg
ds
push
cmp
pop
jne
and
aas
mov
push
cmc
lea
es
pop
je
test
pop
cmpsb
inc
lret
or
or
in
into
jg
mov
push
rcl
movb
push
adc
lcall
jmp
pop
lock
pushf
mov
call
movsb
pushf
mov
ds
push
test
test
ds
icebp
inc
scas
stos
outsb
mov
leave
xor
shlb
mov
xor
pop
push
sub
adc
mov
pop
movsl
js
push
cli
push
sub
sbb
lea
repnz
cmp
iret
fs
pop
mov
xchg
mov
mov
js
repz
dec
cs
fs
or
lea
in
add
cld
outsb
mov
test
ljmp
lea
mov
sbb
cmp
stos
inc
daa
and
lods
or
xor
mov
aas
dec
push
cs
sahf
outsl
mov
fldl2e
mov
outsb
imul
mov
sbb
frstor
roll
lret
outsb
movsl
push
mov
push
or
fsubs
push
cmp
mov
xor
push
outsb
pop
jle
aam
sbb
jno
jnp
lahf
sbb
imul
push
dec
es
cmp
das
sub
inc
test
adc
mov
jno
shrl
mov
dec
sti
sbb
out
add
mov
xchg
add
jmp
sbb
inc
lock
aad
cmp
and
mov
shlb
sbb
mov
mov
and
mov
sbb
sbb
dec
lods
add
mov
ret
fimull
or
lahf
ficompl
test
dec
ficomps
aam
cmpsb
jno
xchg
sbb
cmpsl
gs
push
outsl
jb
aaa
inc
sbb
xchg
ret
sbb
cmpsl
out
std
sub
insb
pop
xchg
xchg
ss
pop
out
xchg
mov
jmp
movsl
jns
mov
inc
icebp
xchg
outsb
push
addr16
xchg
mov
js
scas
imul
push
sub
insl
dec
jg
xchg
push
xor
fwait
mov
adc
dec
mov
cmp
daa
out
sbb
mov
xchg
mov
and
repz
jne
cltd
out
repz
out
or
arpl
sbb
test
dec
mov
jp
xor
inc
dec
jb
loope
push
push
jecxz
xchg
enter
mov
or
or
in
push
div
int3
imul
pop
jae
ss
sti
enter
pushf
push
into
int
mov
xchg
and
or
adcl
lods
jno
inc
and
add
in
les
xchg
nop
mov
hlt
test
popa
mov
aaa
pushl
dec
roll
adc
sub
cmpsb
mov
enter
adc
insl
ds
loope
aaa
loop
outsl
mov
es
add
scas
and
push
push
add
push
jae
cs
or
in
shrl
das
movb
nop
adc
aad
jg
cmp
movsl
lods
ds
and
push
cmp
push
int3
fwait
cmpsl
sbb
xlat
outsb
lcall
add
dec
or
mov
push
lock
lea
mov
or
pop
xchg
pop
jle
xchg
repnz
adcl
lds
xor
xor
sbb
add
lock
adc
cmp
add
daa
loope,pt
push
mov
dec
sub
adc
cmp
xchg
test
pop
mov
or
cmpsl
sti
fwait
mov
outsl
xor
and
popa
lods
sub
inc
push
pop
enter
repz
sub
jnp
pop
repnz
push
and
adcl
or
mov
test
xor
in
push
cld
add
mov
pop
repnz
push
stos
pop
int
add
movsl
test
jmp
popa
xchg
mov
and
cmp
aaa
dec
cld
mov
pop
pop
push
bndstx
mov
icebp
fdivp
dec
add
xor
adc
mov
out
popf
dec
scas
mov
cmpsl
bswap
sahf
out
jb
sub
mov
jns
jmp
rolb
dec
pop
adc
xchg
mov
mov
mov
jns
push
or
aam
test
cltd
movsb
scas
sbb
dec
lods
aaa
push
mov
dec
icebp
shr
pusha
push
cwtl
test
mov
je
insb
out
cmp
aam
jne
cmp
in
orl
lock
dec
cmpsb
mov
add
jmp
notl
sbb
xchg
adc
shr
push
mov
push
gs
sub
movsl
sbb
out
stos
shl
xchg
inc
mov
cld
ret
scas
mov
cmp
sbbl
and
movsl
mov
push
push
mov
pop
cmc
bound
pop
mov
into
and
sbb
push
cmc
popf
cmp
or
lcall
xchg
inc
clc
adc
pop
adc
fsubrp
pop
lea
dec
push
call
rorb
sbb
inc
sbb
mov
mov
cmpsb
sbb
ja
pop
inc
sbb
aas
push
aaa
push
jbe
and
in
inc
jecxz
nop
loop
mul
push
fidivl
xchg
pop
aad
nop
dec
jne
out
inc
push
xor
jmp
repnz
xor
sub
mov
andl
lock
jnp
mov
or
jp
adc
sub
xchg
js
dec
cli
xchg
cs
gs
sub
popf
lret
cmp
pop
xchg
insl
push
cwtl
addr16
leave
loop
xchg
andb
and
add
dec
push
lea
push
jecxz
in
orl
call
loope
mov
inc
mov
cmp
xchg
rcr
sbbl
jp
mov
jecxz
push
loope
cmpsl
xor
sbb
ss
icebp
daa
arpl
mov
out
das
lock
pop
cmc
pusha
cmp
scas
mov
sub
sbb
sbb
out
inc
jmp
push
shrl
mov
out
add
inc
inc
mov
add
xchg
push
js
mov
mov
adc
roll
mov
add
push
add
lea
sbbb
popf
pusha
loopne
xchg
mov
adc
mov
addb
jne
push
sbb
xor
stos
jle
es
push
mov
xor
xor
adc
ds
iret
dec
int
mov
mov
cmc
test
in
aaa
aas
ljmp
in
imul
or
lcall
push
sahf
rclb
jnp
rcrb
add
push
outsl
js
popf
andb
xchg
pushl
lret
sbb
jne
ret
and
mov
in
xor
add
ret
xchg
scas
orb
out
in
xchg
rolb
push
sahf
imull
and
sub
mov
xchg
outsl
loope
fistpl
call
cmp
mov
cmpb
fcompl
add
sti
shl
bound
dec
mov
in
stc
scas
xorb
sbb
movsl
mov
imulb
cmpl
nop
mov
popf
loopne
mov
dec
jecxz
mov
xor
adc
addr16
cmp
mov
mov
les
adcl
dec
imul
push
or
inc
es
fbstp
and
push
call
in
mov
push
inc
cmp
jne
dec
addl
insb
leave
pusha
pop
xor
mov
dec
es
mov
test
nop
pop
fxam
push
pop
aam
xchg
sub
add
lods
inc
rorl
aas
mov
lret
dec
mov
push
sub
icebp
jge
les
repz
sbb
xchg
mov
push
dec
cmp
inc
out
ja
insl
cmc
test
jl
jno
std
xchg
mov
or
adc
ja
xchg
stos
ljmp
hlt
fmuls
fidivl
stc
repz
lods
or
add
stos
lea
cmp
cli
or
pop
or
jne
shr
push
mov
xor
xchg
adc
sub
inc
mov
fiadds
cmp
cmc
add
daa
jp
aad
mov
xor
pop
imul
insl
and
sti
fwait
push
mov
jmp
fs
xor
into
sbbb
mov
mov
cmp
fstps
or
rcrb
jl
out
pop
xchg
mov
iret
xor
adc
ss
mov
inc
jp
stc
adc
rorl
and
inc
imul
fs
sbb
xor
mov
test
pop
sub
in
fldenv
div
call
mov
add
or
in
cmp
pop
xor
and
out
push
insb
js
mov
jecxz
xchg
insl
inc
jmp
addr16
xchg
scas
ret
xor
hlt
movsb
inc
pop
loop
mov
jno
imul
fiaddl
pop
cld
insb
lock
addl
sub
jae
sub
inc
push
shrl
push
or
outsl
dec
test
cs
stc
dec
jmp
loopne
movl
and
push
out
jle
cmp
jle
jmp
jecxz
fmull
mov
push
sub
jbe
push
aam
push
lahf
push
cmp
lods
jo
add
orl
sbb
xlat
ficoml
filds
cli
push
and
in
mov
adc
movsb
dec
sti
add
rcrb
mov
cmp
hlt
jnp
xor
jbe
ljmp
cmpl
mov
clc
insb
test
mov
or
push
push
push
outsb
xchg
fmull
fmuls
dec
ds
push
loope
in
lret
push
pop
jp
add
jge
sbb
test
clc
add
sti
jg
iret
in
je
sbb
inc
mov
push
jno
mov
inc
mov
fucomip
mov
movsl
inc
arpl
mov
xchg
repnz
add
test
jb
test
mov
adc
pushw
stc
aam
mov
or
mov
gs
xor
stos
aas
into
sbb
xchg
inc
mov
jmp
mov
add
add
insl
int3
inc
mov
cmp
mov
ret
sbb
sub
sub
and
xchg
test
mov
adc
stc
imul
and
das
popl
mov
pop
loopne
inc
and
dec
pop
rolb
mov
xchg
push
ret
leave
pmulhuw
lock
pop
aas
jg
mov
dec
sub
lret
dec
cmpsl
fs
or
clc
dec
aam
addr16
sub
pop
pop
sub
stos
fdivrl
add
cmc
xor
push
xchg
xchg
inc
les
lock
cwtl
push
mov
outsl
and
push
out
cmpsb
and
push
out
loop
mov
push
mov
adc
iret
add
out
inc
add
mov
jb
cmp
lret
xor
pop
int
pop
out
mov
jg
add
out
mov
cwtl
or
lock
push
jne
push
cmpsl
xchg
insl
cli
fs
call
jns
xchg
clc
pop
mov
cmp
stc
pop
sahf
sbb
aas
clc
push
adc
scas
lret
push
clc
sub
pop
sbb
aad
cltd
dec
dec
cwtl
rorl
inc
jns
out
pusha
cmp
out
in
nop
ja
push
call
aam
in
and
fsubrl
or
or
sub
bnd
movsb
cmp
or
stc
outsb
mov
aas
xor
push
insl
out
scas
dec
icebp
mov
push
fadds
in
jb
dec
movsl
bound
pop
shl
jno
leave
fsts
das
clc
jae
cmp
mov
stc
mov
out
cmpb
mov
sub
xchg
fildll
lock
mov
je
sbb
scas
insl
sub
out
pushf
fwait
jmp
jg
fdivrl
add
push
fs
mov
dec
andb
cmpsl
add
clc
enter
sub
mov
stos
and
pop
pop
pushf
cli
rcll
aas
insb
out
cmp
movsb
das
jp
out
mov
sub
test
inc
loope
sti
adc
xor
rep
in
ret
sahf
cli
bnd
and
daa
or
jb
call
imul
xor
loope
fnsave
test
test
sbb
into
cmpsb
in
and
cmp
mov
dec
fcmove
inc
clc
fnstenv
dec
sbb
cmp
outsb
std
push
fisubrs
mov
xor
cld
arpl
popf
sub
cmp
sub
and
xor
je
jns
orb
out
lret
mov
in
push
and
sub
mov
aaa
ret
xor
ds
fnstsw
ss
mov
test
adc
ja
push
fldenv
cmpsl
dec
cli
popf
push
lock
mov
ss
mov
loop
inc
fidivs
jnp
stos
pop
test
mov
and
cmp
pushf
std
cmpsl
shrl
cwtl
das
cmp
aam
rcrb
dec
dec
mov
aam
movsb
push
cmp
xor
fcompl
mov
pop
mov
push
stos
or
pop
xchg
stos
shll
adc
dec
push
pushf
cli
jmp
sbb
enter
imul
insl
adc
roll
or
sub
jns
fiadds
mov
adc
imul
mov
insb
lcall
sub
mov
sub
in
mulb
out
add
and
cs
and
into
es
add
push
xor
fdivs
loope
int
insb
sbb
lea
lock
push
aas
mov
add
insb
out
sbb
test
dec
jp
inc
lods
test
add
cs
mov
push
imull
cmpsb
jg
enter
mov
ljmp
mov
gs
or
xor
or
add
xchg
movsb
fcomi
dec
cmp
std
sub
push
fldl
es
lret
cmp
popl
aad
mov
pop
hlt
lods
pop
push
outsl
or
jnp
sahf
push
movsl
add
cltd
push
push
sbb
adc
es
call
adc
mov
std
jnp
mov
shll
pushf
jge
dec
pop
mov
hlt
or
lret
scas
inc
std
inc
mov
cwtl
mov
out
aaa
bnd
clc
ds
sub
out
in
pop
outsb
cmpsl
add
jmp
outsb
pop
jo
cmp
jge
inc
sub
cmpsl
imul
dec
sub
xchg
stc
dec
and
xor
sbb
lcall
fisubrl
cmp
xor
mov
sub
outsb
xchg
imul
xchg
movsb
ret
scas
ret
mov
xor
sbb
cwtl
enter
pop
test
push
fs
or
and
pushf
loopne
js
cli
orl
out
push
jns
push
inc
out
stos
pusha
fstps
pop
cmpsb
xchg
sub
mov
mov
fsub
das
clc
or
adc
pop
jbe
shlb
idivl
jae
xchg
scas
dec
adc
or
mov
fdivr
sbb
fiadds
inc
cld
lret
aas
cmp
sbb
scas
outsl
mov
pop
cs
insb
lahf
cltd
jmp
jae
pushl
int3
cmp
mov
and
xlat
outsb
jecxz
ret
imul
dec
jo
jg
aaa
or
push
scas
inc
sar
gs
push
jmp
enter
sahf
mov
shll
add
scas
fwait
inc
addb
fsubrl
mov
ljmp
or
movsb
mov
mov
sub
nop
js
xchg
inc
negl
mov
push
stos
jmp
aaa
xor
imul
ret
xlat
ss
or
sub
jae
test
dec
test
bound
lds
sbb
in
xchg
dec
sbb
jle
push
cmp
mov
sub
ljmp
xchg
test
cmp
repnz
andl
mov
sbb
lds
outsb
pop
js
cli
fmuls
push
push
sbb
jb
mov
insb
int3
scas
jmp
xchg
cmpsl
add
mov
lcall
dec
bound
scas
or
int3
mov
call
cmpsb
lds
in
int3
or
scas
mov
xor
ret
addr16
lret
arpl
jo
dec
push
stos
idivb
popa
ds
adc
rcrl
jecxz
loop
fimuls
mov
inc
pop
mov
push
inc
and
mov
sbbl
mov
ret
aaa
add
fwait
loop
icebp
pop
jae
pop
pop
int
pop
lods
rcrb
or
dec
xchg
movsl
inc
mov
das
les
stos
ja
lcall
inc
dec
sub
and
jl
test
xor
xchg
ljmp
inc
push
adc
cwtl
out
pop
cmp
rep
and
xchg
dec
in
shl
inc
mov
cltd
cmpsb
xchg
push
push
or
push
in
gs
mov
lock
je
call
mov
push
sarb
cmp
ret
mov
push
out
dec
int3
mov
fimull
pop
repnz
adc
fnstcw
mov
pop
jmp
xor
and
xchg
push
mov
clc
divl
arpl
push
lock
fdivrs
mov
xor
or
jmp
jmp
leave
push
testl
lret
mov
push
mov
dec
enter
pop
adc
ljmp
cmc
adc
pop
int3
imul
imul
sbbb
sbb
pop
or
data16
mov
dec
adc
inc
adcb
push
popf
push
call
shrb
pusha
outsb
mov
int
clc
mov
iret
add
xor
subb
pop
arpl
xchg
push
pop
outsb
aaa
jl
xor
in
stos
mov
xlat
loop
shl
jge
lret
lods
sub
sbb
jl
inc
xchg
ja
xchg
in
insb
xchg
or
clc
mov
fldl
jo
int3
cmp
adcl
jne
jo
outsl
xchg
xlat
mov
andb
scas
jb
repnz
adc
sahf
outsl
mov
fstpl
stos
cli
jno
call
jge
mulb
add
scas
les
loope
cltd
dec
and
sti
scas
ljmp
pushf
das
adc
rorb
insl
mov
test
pop
or
dec
outsl
ja
icebp
jne
lods
inc
ret
add
repnz
iret
ja
or
addr16
jb
pop
push
sub
js
mov
sarb
in
dec
rol
lret
push
jae
jg
jmp
hlt
mov
fnsave
or
cwtl
jns
xchg
in
dec
pop
loopne
nop
pop
dec
dec
fcomip
and
jnp
cmp
pushf
cmp
sahf
and
iret
in
mov
xor
push
mov
add
adc
jns
flds
fucomp
lea
mov
daa
dec
push
push
imul
mov
add
push
js
subb
mov
loopne
inc
inc
and
xchg
stos
push
ret
orb
rcl
movsl
inc
adc
jg
cmp
push
cltd
adc
dec
cwtl
ja
cmp
bnd
sbb
pop
mov
sbb
std
xchg
pop
and
test
adc
arpl
mov
mov
jecxz
adc
cmp
jb
mov
push
faddl
add
xor
out
popa
dec
add
xor
mov
imul
mov
test
sbb
outsb
push
push
push
jl
aam
xchg
xchg
movsl
sub
insl
mov
ja
lahf
and
sub
fsubrs
cmp
dec
out
push
cmpsl
std
call
stos
xchg
shlb
cmp
inc
pop
cmpb
or
push
test
sbb
cwtl
lods
ja
dec
int3
testb
insl
xchg
mov
jg
push
xchg
cmp
jae
dec
or
movsl
clc
add
mov
jle
jle
xchg
sub
dec
fldl
xchg
insl
mov
fcmovnb
jbe
cmp
fstps
mov
mov
dec
lods
mov
mov
adc
rcl
enter
imul
stc
xchg
mov
enter
insb
daa
inc
inc
pop
lea
fiadds
xchg
ret
aam
jmp
imul
pop
inc
ss
divl
cmp
mov
sbb
popf
and
popf
lods
shll
cmp
pop
ljmp
sbb
and
stos
xchg
dec
push
dec
repz
xchg
sbb
adc
add
ret
lret
mov
fimuls
into
and
aad
jl
and
sub
mov
mov
cmc
push
insl
jl
xchg
or
cmp
in
roll
jge
je
imul
sti
ss
sarl
leave
nop
mov
jge
in
sbb
fildl
repz
mov
adc
cwtl
jle
xor
bound
sbb
cmp
fdivrs
clc
loope
mov
icebp
jb
jb
enter
mov
push
das
mov
pop
cs
xor
push
or
rcrb
add
add
in
rcrb
pop
dec
mov
pop
xor
mov
shld
add
je
pcmpgtw
js
in
cwtl
jo
out
jae
jne
ret
jge
cmp
jb
push
ja
je
insl
push
pop
ret
outsl
and
pop
xor
mov
xor
rcrb
js
and
adc
mulb
jae
mov
lea
mov
push
fidivrl
rcrl
dec
fdivrl
js
fildll
dec
xor
sub
shlb
or
daa
sbb
fadd
xor
or
mov
cld
lods
add
mov
jae
cmp
pop
jbe
jl
into
popf
js
lret
outsl
xor
add
mov
imul
adc
mov
test
icebp
out
mov
mov
pushf
pop
into
jne
lcall
inc
adc
xchg
jg
sub
sahf
cmp
push
cmc
cmp
cltd
mov
pop
xor
scas
push
cmp
push
nop
fucomp
lds
ret
test
loop
inc
pop
sub
jg
enter
out
xchg
or
iret
lock
pop
pop
shll
lret
lahf
cmpsl
sbb
nop
mov
cs
stos
inc
jle
push
xor
sti
movsb
pop
mov
dec
in
and
push
mov
xor
lret
sbbl
push
jno
mov
and
pop
leave
push
outsl
cmp
mov
out
mov
sbb
inc
push
mov
out
and
out
sbb
roll
sub
pop
in
xchg
ja
dec
and
sbb
jmp
push
add
and
inc
dec
mov
push
jl
cmp
mov
jnp
popa
mov
lret
pop
into
pop
int
data16
cli
mov
jbe
popa
mov
xchg
arpl
rcll
xchg
lods
mov
cmp
dec
mov
or
cmp
and
xchg
xchg
out
push
fstl
icebp
movsl
lret
sbb
push
cwtl
pusha
fwait
leave
loopne
xor
mov
add
aad
jmp
icebp
xchg
xor
mov
cltd
push
pop
rolb
sub
pop
or
arpl
test
lahf
mov
or
mov
outsl
cmp
ss
cmpsl
das
add
adcb
dec
out
mov
test
addl
fwait
scas
sbb
repnz
jb
jne
dec
insb
xchg
inc
cmpsl
loop
inc
jmp
adc
xchg
pop
mov
inc
mov
rclb
inc
xlat
daa
hlt
fildll
ret
adc
testl
into
cmc
mov
push
mov
xor
aad
adc
xor
or
dec
mov
outsl
mov
sti
outsl
pop
or
jecxz
data16
add
fsts
inc
lods
stc
pop
push
fsubs
pop
shlb
inc
xlat
test
call
mov
lods
iret
mov
mov
jno
sub
out
test
lret
lock
dec
cmpsl
inc
fwait
or
les
fistl
repnz
inc
daa
jne
pop
sub
jbe
outsb
int3
pusha
lret
push
mov
in
fdivrl
fbld
add
dec
mov
shl
sub
adc
insb
mov
popf
lahf
mov
mov
jne
mov
sub
cltd
arpl
rcll
mov
gs
aad
cmc
scas
std
push
sub
sahf
sub
add
dec
xor
scas
xor
scas
sbbb
dec
fs
lock
stos
add
adc
inc
fdivrs
popa
jl
scas
imul
fs
push
jg
jp
mov
mov
pop
mov
test
pop
ds
stos
add
push
mov
jns
xorb
mov
push
pop
aad
add
in
add
aad
flds
arpl
xchg
divb
jns
shrb
or
enter
out
jne
lds
dec
inc
mov
push
loope
movsl
lds
dec
stos
add
aam
mov
mov
push
aad
pop
pop
daa
sti
jge
jg
jge
jmp
ja
mov
and
in
mov
cld
pop
shrb
negb
and
lret
and
aas
dec
cmp
shr
lds
fbstp
out
mov
arpl
inc
adc
sbb
repz
outsl
repnz
mov
sbb
inc
push
insb
push
sub
je
push
xor
xchg
push
lods
xchg
pop
aad
jo
scas
mov
sub
out
mov
or
aas
adc
scas
push
enter
cmp
fldcw
lods
stc
out
mov
pop
add
hlt
fsubl
call
lock
mov
loope
cmp
add
xchg
add
movsb
and
mov
ret
pop
jae
and
mov
shlb
push
jmp
andb
pop
or
add
cmp
adc
fiadds
mov
dec
sarl
sub
add
or
inc
sub
loope
loopne
mov
pop
ss
addr16
or
movsl
call
das
aas
xchg
jge
sbb
popf
pop
stos
outsl
fnstcw
pop
ljmp
mov
jae
negl
jp
jecxz
in
xor
and
rcll
and
lahf
mov
mov
mov
push
dec
lret
int
fwait
sbb
xor
pop
fldenv
add
mov
push
mulb
mov
jne
add
sub
notb
out
dec
inc
stc
outsl
xor
inc
lock
sbb
mov
in
xchg
pop
inc
sbb
imul
popa
jnp
xchg
in
xor
fnstenv
leave
cld
jne
test
data16
sbb
mov
adc
mov
mov
in
fsubs
insb
inc
pop
je
hlt
push
ss
xchg
cmc
sub
xor
mov
jbe
push
xchg
push
test
ja
or
cs
bound
and
imul
and
jo
ret
and
stos
test
fnsave
mov
js
inc
aas
cwtl
pushf
stc
nop
into
mov
movsb
pop
popa
arpl
ret
lock
pusha
lahf
xor
popa
hlt
push
sbb
dec
fidivl
mov
imul
ds
add
rcr
je
or
adc
sub
mov
push
jmp
gs
push
mov
pop
ret
data16
in
popf
es
inc
sti
mov
sbb
and
mov
test
mov
lock
pop
ljmp
cmpsl
mov
xchg
cmp
push
fidivl
test
scas
rep
jmp
test
popf
mov
std
imull
mov
bound
adc
rcrb
ret
lahf
sti
pextrw
mov
lods
icebp
out
sbb
int3
pop
sub
jnp
dec
jns
lds
or
and
mov
xlat
sbb
iret
adc
int
mov
filds
mov
cmp
cmp
jns
ret
aaa
iret
repnz
adc
jb
xchg
inc
ror
jae
int3
stos
lods
popf
arpl
je
push
sbb
lea
sbb
xchg
xchg
push
cmpsb
add
mov
frstpm(287
scas
inc
pop
cld
rorb
gs
adc
and
xchg
inc
lret
ret
pop
lock
hlt
push
out
stc
pusha
andb
jg
orb
jae
add
pop
mov
aad
mov
xor
popa
sti
fnstsw
xchg
adc
popa
add
or
push
je
mov
push
ss
lea
xor
jo
xchg
mov
mov
jle
sbbb
pop
jmp
and
adc
rcrl
jmp
push
adc
cmp
fsts
jmp
push
out
popa
movsb
pushf
pushf
mov
scas
sbb
dec
cmp
push
mov
imul
out
jmp
jbe
enter
out
insb
decl
insl
fimull
or
js
or
lds
push
jg
pusha
lret
out
test
je
xchg
movsb
inc
xchg
xor
lret
mov
outsl
sub
jl
inc
pop
fs
adc
adc
mov
mov
cwtd
mov
jno
lcall
adc
hlt
fs
cmc
mov
es
mov
adcb
loopne
test
push
ret
out
rclb
clc
sbb
ja
mov
pop
ljmp
into
out
vpmacssdd
in
xchg
xchg
out
add
jp
testl
pop
iret
sub
xchg
mov
mov
jmp
sub
lock
xor
pushl
imul
jae
repz
cmc
and
cmp
mov
mov
fcmovb
aas
or
arpl
lds
pop
stos
ja
faddl
pop
xor
push
insl
orl
repnz
hlt
mov
das
dec
in
inc
adc
pop
cmp
lcall
mov
movsb
mov
sub
cmc
push
leave
aaa
std
cmp
ds
mov
and
cwtl
xor
or
add
mov
hlt
or
popa
add
shlb
insl
sub
ret
aam
xchg
sbb
movsb
cmp
movsb
sub
xchg
call
fs
sbb
bound
xchg
xor
imul
mov
fbld
pop
inc
add
gs
jnp
cmp
add
push
icebp
mov
mov
daa
mov
and
jl
popa
sbb
std
cltd
xchg
inc
xchg
sub
js
stos
ds
hlt
inc
xor
test
inc
mov
xor
sub
in
loopne
dec
stos
add
lcall
movsl
repnz
adc
cli
mov
push
sbb
push
sbbl
test
lahf
sub
xchg
jo
push
dec
lea
aad
adcl
jns,pn
push
and
and
jae
push
out
notl
add
cld
xchg
jbe
or
pushf
sub
jnp
cltd
mov
bound
jle
testl
jle
imul
mov
mov
cli
xchg
mov
xchg
mov
push
ficompl
push
pop
jge
xor
dec
cmpb
jae
push
inc
pop
inc
xor
push
stos
test
inc
sub
dec
xor
mov
lret
jb
jb
adc
lods
adc
es
or
psllq
push
std
loop
sbb
in
add
das
jge
inc
sub
popf
cld
bnd
xchg
push
or
cvtps2pd
add
test
xor
and
mov
adc
mov
adc
jne
imulb
mov
and
bound
sub
and
mov
mov
mov
mov
das
mov
fcmovne
fists
pop
pop
mov
mov
ljmp
pop
clc
sub
jb
ret
sbb
jo
outsl
outsb
xchg
ret
dec
loop
jb
rorb
scas
add
shrl
and
idiv
push
in
mov
pop
pop
call
pop
sbb
sub
sbb
sub
out
sbb
mov
aam
push
rcrl
loope
in
insl
jnp
xchg
xor
and
xchg
push
add
mov
push
jo
scas
out
scas
inc
fnstenv
lahf
jb
xchg
pusha
testl
push
dec
aas
adc
cwtl
das
adc
jmp
test
insb
shll
pop
or
int3
adc
cltd
insl
xor
jb
or
mov
movd
je
cmpps
imul
push
lret
mov
dec
and
fwait
mov
shlb
mov
les
aad
push
xchg
xor
ret
pop
repz
sub
cwtl
lcall
inc
addl
cltd
insb
fwait
lea
xchg
lods
iret
loop
mov
or
lods
test
adc
mov
and
and
lods
pop
push
dec
mov
push
cs
adc
lahf
or
sbb
sbb
stos
pushf
addr16
pushf
xor
push
fadd
jns
out
mov
cmpsl
sbb
jns
fsubr
xchg
adc
in
stos
or
stc
imul
inc
loop
std
lock
sbb
or
jae
jge
test
cld
int3
mov
jne
fdivrs
sbb
mov
call
out
pop
push
test
aaa
lds
add
dec
dec
das
push
rcl
icebp
lds
pop
insb
cmp
inc
sbb
xlat
stos
mov
push
insl
and
test
adc
adc
pop
jae
xchg
movsl
sbb
out
mov
inc
in
out
lods
sbb
in
lahf
loop
xor
jg
push
add
into
cli
jb
sub
andb
sub
push
scas
jbe
shl
inc
fistpl
cmc
dec
ljmp
mov
int3
dec
out
mul
pop
mov
in
push
cs
leave
bound
sbb
orl
sti
sahf
movsb
mov
and
repz
push
adc
push
movsb
repnz
dec
arpl
std
xchg
jno
sbb
test
lahf
sahf
xor
xchg
jge
test
lret
cltd
ja
fwait
test
repnz
jecxz
or
dec
call
mov
pop
int
fsubl
enter
shl
add
cmpsb
jo
add
add
pop
sbb
lock
mov
lock
push
scas
pop
jno
mov
push
loope
jo
xor
out
aaa
dec
outsl
pop
hlt
pop
cmp
lea
and
mov
inc
std
dec
add
addl
out
mov
jecxz
mov
cmpsl
out
ret
dec
ss
popa
cmp
inc
inc
or
ficompl
pop
pop
push
insb
fisttps
xchg
xchg
push
cmp
outsb
jno
pop
shl
fsubrp
test
mov
jmp
add
xor
ret
pop
jle
shll
jnp
inc
and
int
xor
mov
lods
sbb
mov
cmp
shl
cmp
pushf
pop
aas
inc
xchg
mov
hlt
or
fsubs
sub
das
sub
sbb
enter
ja
addb
or
dec
pop
loopne,pt
cltd
xchg
push
popf
push
in
ret
outsl
xor
testb
cli
cmp
push
add
cs
push
mov
add
loop
jnp
jp
enter
incb
movsb
jb
sti
fwait
test
shl
mov
add
repnz
sub
dec
add
stc
js
mov
dec
notl
dec
adc
jnp
mov
out
jae
in
out
loopne
cmp
dec
cmp
jne
ljmp
or
mov
aad
xor
sbb
jns
jge
and
mov
fisubs
jo
xorl
sub
aad
je,pt
xor
aad
and
push
and
mov
sub
inc
add
inc
lea
out
ljmp
push
test
jae
loope
mov
test
leave
aam
js
stos
shlb
and
lea
lods
in
in
fwait
xor
jmp
mov
mov
add
mov
sbb
sbb
mov
xlat
xor
sarl
cmc
jle
sbb
iret
insl
sub
mov
fldt
pop
push
out
mov
pusha
mov
lahf
mov
or
push
mov
adc
or
mov
and
mov
dec
jl
push
and
shrb
ror
sub
fildll
push
insb
dec
mov
movl
push
jge
cmpsb
pop
into
sarb
adc
iret
jns
mov
or
dec
mov
mov
add
aad
pop
cmp
cmpsb
push
stc
xor
jne
fdivs
stos
mov
setle
rol
movsb
pushf
addr16
jl
gs
xchg
and
jns
jne
loope
dec
inc
test
push
sub
dec
inc
mov
fldl
js
and
xchg
cmp
icebp
rorb
pusha
int
popa
mov
lret
jg
in
mov
xchg
jno
cmpsb
pop
out
lahf
es
in
push
loope
cld
jg
into
bound
push
sbb
rcrb
aas
orl
stos
cmp
mov
aaa
pop
inc
mov
aad
rcr
jb
gs
jb
cmpb
dec
movsl
ret
mov
movsl
push
rcll
sbb
test
jmp
jo
prefetch
lea
mov
jno
mov
or
jp
idivb
pushaw
mov
push
mov
insl
sbb
enter
mov
lcall
sahf
lds
adc
dec
pop
nop
test
movsl
in
xor
push
fs
or
cmp
or
fscale
insl
mov
cwtl
dec
inc
dec
clc
mov
sarl
lock
push
addr16
jp
or
cmpsl
jo
shll
inc
fcompl
lcall
jle
pop
lods
out
push
and
push
xor
mov
cltd
es
cld
sbb
sbb
fstps
pop
lock
sub
popf
aam
mov
pop
xor
nop
pop
push
add
jb
imul
in
push
out
lret
jne
adc
xchg
mov
adc
or
popf
cld
sub
scas
sbb
push
mov
out
dec
pop
int3
cmp
add
cwtl
cs
gs
cmpsl
stos
pushf
fcmovb
sbbl
es
jp
cli
fcoms
dec
dec
sbb
into
jns
jnp
xchg
cltd
add
mov
add
not
cld
movsb
nop
ret
cmp
or
cld
popl
mov
adcl
inc
dec
shlb
sub
xchg
dec
sbbb
movsl
icebp
jecxz
out
push
call
cmp
mov
adc
in
sbb
push
dec
or
xchg
fisubrl
push
inc
cmpsl
xor
mov
fwait
divl
cmc
cmp
sub
mov
push
pusha
andb
mov
sub
pop
addr16
fldcw
daa
fldt
scas
cmp
icebp
jl
jo
mov
jp
out
ss
addr16
and
mov
imul
or
pop
cltd
nop
jge
popa
les
mov
sbb
pop
fdivrl
out
arpl
int3
lcall
lret
cld
fwait
jmp
dec
inc
aas
mov
jno
ljmp
rorb
sbb
jmp
dec
add
push
andb
rol
faddl
add
xor
movl
fidivrl
cmc
dec
pop
bound
aas
sti
jae
sbb
imul
xchg
pusha
and
or
test
lcall
sub
xchg
sbbl
cmpb
mov
aam
pop
mov
fsubrp
mov
xchg
pop
jl
daa
popa
mov
icebp
sahf
sub
lcall
pushf
call
pop
sarb
fldcw
or
sarb
and
inc
sbb
test
popa
ss
lcall
sbb
dec
notl
ss
dec
pushf
sub
pop
ss
dec
xchg
pop
cwtl
roll
imul
andl
cwtl
out
lods
outsl
leave
pusha
int3
dec
addr16
lods
in
out
sti
sbb
xchg
in
sbbl
sbb
inc
pop
adc
pop
mov
js
outsb
sbb
jnp
jp
pop
dec
popf
lods
mov
shrb
addr16
or
mov
cli
adcl
je
xchg
mov
and
inc
jno
and
sahf
dec
pop
sarb
js
daa
pop
adc
cli
imul
loop
mov
xor
sub
cmp
mov
mov
fnsave
sub
pop
dec
popf
add
xchg
inc
jl
inc
push
in
inc
lcall
loopne
add
lea
push
mov
and
adc
sbb
icebp
aas
mov
loope
pop
loope
icebp
dec
cld
push
adc
pop
divps
nop
insl
pop
icebp
pop
push
sub
mov
push
or
adcl
push
push
inc
fimull
pop
dec
cmp
sub
sub
dec
in
push
andb
in
jns
or
sbb
out
mov
ja
cs
repnz
xor
lds
adc
leave
xlat
std
rorl
cmpsb
add
pop
rep
jecxz
jle
lret
mov
fdivp
mov
mov
xchg
xchg
mov
ret
shld
sbb
adc
cltd
mov
push
jbe
and
sub
sub
or
sbb
out
orb
lahf
xchg
bound
inc
cmp
sbb
gs
mov
jecxz,pn
add
jmp
jnp
dec
rolb
add
sbbl
loopne
pop
faddp
sarb
sub
xchg
xchg
mov
or
js
sbb
dec
xchg
cmp
dec
sbb
pop
enter
repz
sarb
std
push
std
scas
sahf
xchg
and
subl
in
mov
ret
arpl
movsb
gs
stc
jmp
cmp
dec
call
aas
mulb
xchg
lret
scas
pop
in
mov
xchg
out
scas
sub
rorl
movb
mov
adc
push
xor
ss
dec
mov
dec
or
filds
xchg
xor
shrl
adc
or
pop
hlt
sub
lea
pop
mov
inc
cmp
pop
daa
xchg
int
dec
xchg
xchg
sub
cmpsb
mov
insb
sub
or
movsl
and
mov
test
cld
insl
inc
push
stos
stos
je
xchg
stos
cmp
lcall
mov
mov
push
adc
mov
nop
fiaddl
fstpl
fmuls
mov
lods
dec
jnp
call
cmp
arpl
adc
push
repz
xor
pop
stc
test
in
push
inc
inc
pop
repz
ljmp
loop
fcmovb
loopne
pop
mov
or
mov
cmp
je
sti
sub
xchg
push
outsl
pushf
sub
pop
fnstenv
dec
std
outsl
daa
daa
inc
pop
out
mov
jle
or
adc
mov
jbe
cmp
pushf
repnz
xchg
imul
push
sub
xrelease
rclb
daa
mov
cmpsl
mov
mov
in
aad
cmp
shll
gs
mov
and
popf
mov
jl
jno
fsubs
mov
jp
push
add
loopne
mov
mov
cwtl
and
cltd
adcb
arpl
push
dec
cmp
mov
or
pushf
paddb
bound
push
xchg
jecxz
ret
add
repz
and
hlt
dec
lret
cmp
imul
fnstcw
enter
xor
jo
cli
into
mov
add
into
aaa
cmp
push
shrl
repz
xor
std
icebp
cmp
adc
dec
aam
or
adc
cs
insl
ljmp
cmp
incl
push
loop
add
ficompl
fxam
out
pop
repz
fstpt
push
push
inc
jae
push
jge
js
push
stos
add
jle
test
mov
mov
and
iret
shld
mov
and
scas
sbb
adc
inc
sub
mov
stos
xor
adc
jmp
aam
insb
cmpl
jg
aas
sub
dec
fdiv
inc
sub
adc
push
lods
mov
push
in
in
adc
bound
xchg
xor
mov
aas
addl
jne
cmpsb
xor
xchg
aam
or
mov
xchg
jge
xor
loope
sub
shlb
mov
out
test
jmp
sbb
and
mov
xor
pop
pop
dec
push
mul
stc
sub
push
std
addr16
push
push
rol
xor
ds
sti
jecxz
mov
xchg
mov
clc
and
sar
pushf
cs
cmp
xchg
pop
fcomi
mov
lcall
dec
sub
add
xchg
dec
loopne
fst
sbb
add
xor
push
jecxz
adc
imul
xchg
pop
sub
mov
mov
or
adc
int
cwtl
xlat
mov
hlt
stc
xchg
add
in
arpl
xchg
popl
or
mov
jo
push
movsl
mov
inc
lods
adc
push
xor
popa
test
adc
xchg
dec
js
dec
stos
and
cmpl
dec
add
add
rcrl
mov
add
lods
cmpsl
cmp
stos
inc
lods
push
rorl
mov
dec
hlt
sub
xor
dec
loopne
cmp
hlt
cmp
dec
iret
jno
or
mov
cmp
addl
xchg
mov
cmpsl
pop
addr16
fiadds
add
mov
mov
pop
lea
loopne
sub
adc
cmp
push
adc
add
mov
push
inc
sub
xor
xchg
lock
popa
xor
and
mov
sub
pop
mov
pop
or
xchg
mov
inc
scas
fldl
push
mov
test
mov
or
adc
push
inc
aam
rorb
fistps
ret
test
inc
dec
xor
aas
in
xchg
dec
sub
and
adc
out
aaa
cmp
mov
jecxz
inc
sarl
mov
push
insl
aad
dec
jbe
hlt
addb
jecxz
inc
fisubrs
subb
xor
fwait
imul
jecxz
fidivs
mov
fldenv
es
add
into
scas
call
jb
xchg
cmpsl
mov
inc
pop
mov
sbb
xchg
cmpsl
cmpsb
push
jle
iret
js
jae
xor
push
add
nop
fyl2x
ljmp
jmp
imul
outsb
loope
aam
scas
pop
es
cwtl
push
xor
mov
mov
lret
cmp
pushf
sub
and
pop
mov
mov
subl
pop
scas
or
outsl
jge
sbb
cmpsl
inc
stos
add
push
test
mov
mov
es
jge
push
push
lods
pop
mov
push
fs
in
subb
loope
and
jo
or
test
and
faddl
push
sbb
push
stc
cmp
xchg
mov
push
adc
rcll
js
pusha
lahf
mov
jbe
adc
mov
pop
fistpll
cmp
loopne
rclb
and
scas
in
test
jecxz
arpl
inc
orl
mov
shlb
xchg
push
pop
stos
sub
cwtd
push
idivl
jmp
sarl
xor
add
dec
out
nop
push
leave
pusha
insl
jge
stos
sbb
pop
pop
lahf
jno
cltd
xor
cmpsb
sbb
push
adc
add
imul
mov
push
nop
cmp
push
std
xchg
xchg
or
sbb
mov
aam
hlt
int3
mov
popa
fcmove
popa
mov
mov
inc
iret
inc
test
fs
leave
inc
std
test
lods
push
inc
fstpl
push
out
shll
shlb
and
mov
sub
jecxz
mov
adc
aam
daa
push
cmp
dec
pusha
cld
mov
mov
push
scas
movsb
mov
popf
jp
mov
mov
mov
inc
es
jo
ss
test
pop
jp
lods
mov
int
dec
pushl
or
stc
push
adc
xlat
ljmp
adc
dec
pop
sarl
or
add
arpl
add
test
out
rorl
insl
jge
mov
mov
xchg
dec
ret
fisttpl
xorl
push
xlat
hlt
gs
sar
push
testl
mov
repnz
push
lods
push
xchg
ljmp
ljmp
mov
mov
sub
dec
mov
mov
out
sbb
mov
gs
jl
and
lcall
clc
xor
cmpsl
mov
jno
arpl
push
xchg
adc
mov
add
imulb
xchg
inc
mov
mov
fimull
lock
jle
inc
push
push
aad
dec
mov
aam
iret
xchg
in
loope
movl
iret
rorl
ss
sbb
mov
movsl
ljmp
lock
dec
jns
js
jge
outsl
sub
imul
mov
test
in
out
repz
data16
outsb
mov
xor
adc
aaa
mov
cli
and
or
ret
xor
leave
mov
aaa
jmp
loopne
dec
testb
sub
pop
pop
xchg
jge
add
xor
mov
addb
cmp
loop
dec
in
sbb
adc
pop
dec
xchg
popf
xor
outsl
push
push
out
lds
push
rcrb
cmpsl
adcb
xchg
cmp
jbe
sbb
dec
out
cmp
in
int3
adc
mov
ror
sub
ja
outsb
sub
pop
lock
dec
std
xchg
js
add
repnz
sbb
inc
jecxz
mov
jp
ret
and
sbb
xchg
aad
and
jb
pop
mov
pop
loopne
mov
addr16
push
aam
adc
dec
mov
jecxz
xchg
fsts
stos
push
xchg
cmp
add
rclb
fnstcw
jp
sbb
push
pop
add
dec
insb
sub
xor
cmpsb
sbbl
data16
insb
mov
dec
mov
test
jmp
std
cltd
addr16
aam
adc
out
fists
cmp
xlat
pop
fwait
out
dec
sahf
mov
push
add
pop
out
out
aad
mov
mov
inc
sahf
pusha
nop
subl
adc
aam
mov
mov
sub
dec
loopne
adc
repz
addr16
jo
lods
test
add
mov
dec
rcrl
cmpps
popa
ret
daa
xchg
les
and
pop
sub
loop
hlt
loop
cmp
push
test
mov
jnp
xorb
jecxz
aam
xlat
mov
dec
popa
push
sub
pop
iret
imul
psraw
imul
hlt
fnstcw
sub
inc
addr16
pop
sbb
and
add
xor
lds
sub
cmp
into
pop
lods
fdivl
dec
push
into
add
jno
repz
mov
pop
xchg
mov
push
adcb
aas
cs
mov
aam
pop
jo
inc
lock
iret
dec
fsubl
xor
inc
vsqrtss
addr16
sbb
movsb
mov
testb
dec
pop
push
mov
out
mov
enter
ret
inc
stos
insb
pushl
inc
add
sbb
and
outsl
ja
fdiv
add
xchg
xchg
aad
mov
jmp
pop
mov
xchg
scas
pop
xlat
das
lods
loop
out
js
call
je
mov
scas
dec
cli
xor
cltd
sbb
clc
inc
xbegin
mov
loope
sti
xchg
xchg
aam
adc
fsubrl
andb
xchg
js
mov
pop
adc
add
xchg
push
adc
in
inc
cltd
inc
fwait
jl
cmp
icebp
ds
push
cmc
push
or
out
mov
sti
adc
cmc
inc
mov
into
xchg
pop
test
shlb
mov
push
mov
sub
ja
shr
mov
mov
loop
jp
mov
je
fwait
rol
hlt
mov
xchg
ret
sbb
ret
les
fildl
sahf
or
jge
mull
xchg
inc
mov
inc
fldcw
lret
adc
incb
add
jecxz
cli
sahf
mov
mov
mov
arpl
inc
sub
add
and
test
inc
xchg
mov
aas
fs
cmp
mov
in
sub
movsb
cmp
outsl
cmp
sbb
mov
inc
imul
cmp
movsl
std
xorl
pushf
stos
es
arpl
fisubrl
mov
aas
int3
loop
inc
pusha
aam
test
inc
fnstsw
fbld
clc
dec
idivb
idivb
aam
rorb
mov
arpl
pop
imul
outsl
push
int3
adc
fsubrl
scas
scas
rcrl
xchg
lods
pop
add
ja
jp
mov
iret
sub
mov
dec
rolb
div
aam
lods
add
pop
pop
stc
das
pusha
lret
fsts
push
call
fsubl
ljmp
not
addl
shrb
mov
ficoml
mov
add
push
sbb
lahf
loopne
pusha
push
cld
add
push
aas
sbb
or
ja
imul
jae
ds
and
mov
push
pop
mov
outsl
test
in
pusha
xchg
push
jg
add
ljmp
aaa
addb
repz
cld
inc
xchg
int3
mov
loopne
sub
cmp
sub
pop
shr
mov
mov
jne
mov
mov
pop
test
insb
inc
dec
enter
jecxz
aaa
pop
int
cmpsl
cmp
xchg
mov
enter
pop
jecxz
in
subl
mov
sub
aad
test
mov
xor
insl
cwtl
mov
sub
mov
push
out
sub
mov
mov
pop
push
jns
gs
mov
sub
xor
sub
cltd
xor
or
dec
bound
cmc
xchg
je
addr16
into
sbb
sub
aas
or
jnp
cvtdq2ps
jns
mov
psubb
or
xchg
push
int3
rclb
jg
subb
cmp
in
ss
push
mov
jle
sbb
hlt
je
lds
xor
or
mov
add
iret
inc
aad
mov
push
jmp
xlat
jl
rorl
movsl
and
mov
xchg
mov
xchg
sbb
mov
jp
test
mov
ret
lods
inc
mov
ljmp
loop
orl
jecxz
movsl
scas
icebp
js
adc
idivl
push
or
cmpsb
ret
rcl
movsb
or
loop
inc
loop
subb
push
xchg
addb
insl
sbb
test
xor
inc
outsl
mov
mov
addr16
je
negl
test
xor
sub
rcrl
xor
orb
cmp
es
jns
ljmp
adc
insb
out
sahf
mov
mov
jge
test
jno
push
mov
dec
repnz
push
in
inc
bound
scas
inc
dec
jno
mov
negb
inc
int3
xchg
aas
push
dec
push
fidivrs
mov
into
xchg
cmp
push
repnz
xchg
mov
mov
test
add
mov
push
fidivs
loope
in
push
std
adc
xchg
repz
aaa
add
out
cmp
lret
or
xchg
scas
inc
inc
scas
in
scas
dec
int3
mov
stos
mov
mov
mov
in
cmc
mov
xchg
mov
int
gs
sbb
jb
cmp
cmpsl
roll
sub
aaa
mov
aaa
pop
aaa
add
cmpsl
mov
aad
push
add
sahf
gs
mov
and
inc
mov
popa
and
std
int3
out
ret
mov
out
mov
or
fwait
test
ljmp
shll
or
hlt
push
test
aaa
into
jnp
dec
adcl
popf
dec
jb
lahf
and
fwait
fwait
mov
shll
mov
lds
mov
pop
sub
dec
push
jmp
js
inc
mov
lahf
push
jmp
scas
push
and
and
jae
xor
movsl
cli
lcall
aaa
pusha
stos
inc
sbb
sub
xchg
inc
sub
dec
lret
cltd
cld
jb
test
adc
dec
cwtl
jp
push
nop
stc
mov
or
imul
sub
shlb
addr16
loopne
push
outsb
cmc
sub
jne
push
testb
pop
adc
xorb
mov
inc
test
cld
lcall
in
add
inc
in
into
jle
int
lock
and
cmp
jmp
mov
lods
mov
sub
adc
push
inc
and
push
cltd
repnz
lock
cmp
sarb
xchg
stos
inc
call
or
jge
pop
ljmp
lods
fildl
push
mov
and
inc
cmp
pop
test
pop
les
fbstp
stos
enter
iret
in
stos
mov
popa
rcrb
mov
fmul
inc
sbbl
or
xchg
jg
sti
insb
or
pop
sbb
cmpsl
jp
mov
jg
nop
lfs
inc
add
std
leave
xor
jle
sahf
xchg
pop
push
outsl
push
mov
mov
fbld
jns
and
or
insb
sub
stc
test
sti
lea
fcmovbe
or
hlt
cmpsl
mov
lret
xor
mov
push
nop
pop
andl
in
mov
scas
fcomp
cmpb
sti
push
xor
sub
adcb
cmp
xchg
inc
mov
data16
xor
add
mov
popa
enter
loope
pop
dec
push
movsl
dec
addl
xor
push
push
insl
pop
or
or
loope
imul
cmp
sbbb
cmpsl
jmp
ds
shr
dec
mov
rcl
dec
mov
outsl
jbe
ret
stos
inc
fmul
out
loopne
lock
sub
ret
sbb
and
jle
and
add
bound
mov
dec
sbb
and
out
dec
inc
fiadds
or
orl
movsl
adc
fsts
pusha
movntq
sub
adc
int
sub
dec
mov
dec
in
js
ja
push
insl
fs
es
ror
sbb
lret
mov
mov
xchg
and
add
cld
inc
stos
sbb
out
loopne
aas
pop
divl
sub
lea
lret
sbb
sar
cmp
cmp
jo
imul
stos
or
fcompl
jl
dec
sbb
bound
and
test
xor
add
add
pop
inc
cwtl
or
int
pop
adcl
mov
jae
cmp
mov
push
insl
pop
lahf
insb
int3
sbb
add
cmpsl
xor
adc
leave
int
jne
hlt
das
cmpsl
aas
pop
adc
adcl
mov
leave
and
fcompl
cmp
mov
xchg
ss
addr16
les
int3
add
push
mov
add
pop
int3
add
and
adc
mov
cmp
jnp
xor
xchg
adc
sbb
mov
aas
lds
sub
pushf
mov
xor
xchg
and
bound
aas
inc
push
repnz
movsb
xchg
into
jo
fcoml
xchg
inc
fists
pop
pop
ror
inc
sbb
cwtl
mulb
push
sbb
setp
sub
push
ret
sub
cwtl
adc
mov
in
leave
stos
jmp
icebp
dec
cmpsb
adc
and
push
cmp
add
sbbb
icebp
cmp
xor
cmp
adc
pop
mov
jne
test
push
and
mov
leave
xchg
lea
jae
mov
sub
cmp
iret
je
popf
mov
or
repnz
jns
out
bound
xlat
clc
sahf
pop
mov
pushf
mov
movsl
repnz
jle
fistl
mov
lea
rcll
int
fcmovu
addr16
fisttps
xchg
adc
mov
sbb
cmc
dec
cld
aad
xchg
insb
aas
idivb
lods
inc
iret
data16
mov
fcoms
or
jmp
jae
sub
sbb
aam
mov
jge
push
sbb
mov
adc
insb
sub
mov
pop
idivb
imul
lods
mov
jae
and
test
push
jle
mov
mov
and
shll
jle
in
push
gs
sbb
jno
fs
sbb
ret
repz
sbb
cld
insl
aad
or
mov
xchg
push
je
xchg
adc
ret
dec
loope
aam
test
testb
movsb
lds
lahf
into
rep
out
ss
out
inc
jge
je
add
loope
pop
fidivs
inc
call
cmp
or
rol
cmp
hlt
inc
mov
repnz
sbb
in
lret
lret
fdivrl
sti
adc
xor
mov
iret
mov
mov
jle
push
insl
test
cmc
insl
sub
adc
push
jne
aas
cmp
mov
or
ds
jl
popf
xchg
loope
andb
sbb
popl
and
xor
enter
repnz
fs
mov
sti
and
xrelease
cmp
push
pop
movsb
fnsave
shll
int
insb
mov
lds
jno
in
jge
int3
xor
sahf
pop
bound
fcompl
mov
dec
dec
int3
lock
cmpsb
cmpsb
bound
push
and
dec
cmpsl
xor
sbbb
sti
sub
and
fldt
xor
mov
xchg
rcll
mov
out
mov
mov
nop
out
push
cmc
adc
ds
ret
mov
or
ja
test
out
adc
fistpl
data16
test
xor
jg
sahf
ficompl
mov
and
adc
aas
in
or
stos
fists
mov
jnp
into
and
add
aaa
dec
scas
pop
cmc
loopne
cmc
dec
jae
jl
lods
shrl
ljmp
int3
pop
push
out
or
jo
push
xorl
cmpsb
iret
data16
xor
push
jnp
subl
out
scas
dec
or
rorl
dec
xor
in
jo
scas
sub
adc
les
jb
cli
fists
cmp
call
or
cmpsl
in
fwait
push
lea
vorps
jmp
ret
inc
icebp
insb
xor
fmulp
inc
in
mov
pop
dec
cld
insb
out
inc
hlt
push
cld
mov
inc
movsl
cwtl
dec
lea
dec
mov
gs
add
ss
cmc
jg
cld
addr16
inc
bound
mov
mov
int
add
cmp
jl
cmp
xor
test
sbb
sbb
std
loopne
and
int
enter
jns
ljmp
jno
pop
add
inc
int3
or
add
lea
pusha
mov
and
add
out
popf
fildll
or
data16
test
dec
mov
paddusb
fsubrp
mov
mov
rcrl
rorb
mov
psadbw
out
fpatan
or
cli
add
aaa
shll
jns
mov
int3
aaa
mov
push
ljmp
call
sbb
inc
and
je
mov
gs
pop
push
mov
jae
and
rcrl
test
test
pop
push
ss
aaa
call
mov
dec
pop
dec
jl
jnp
in
jbe
fwait
movl
xor
dec
and
mov
scas
cmp
sbb
dec
sub
fstp
pushf
xor
mov
pop
mov
hlt
xchg
pop
lods
loopne
pop
clc
mov
sbb
lods
inc
add
lret
into
cmp
push
inc
in
jmp
roll
mov
mov
pop
mov
pop
sbb
pop
leave
push
cmp
adc
xor
je
andl
push
outsb
add
jecxz
mov
jbe
xchg
jg
ret
mov
or
or
sub
fidivs
pusha
popa
and
out
mov
outsl
pop
aam
cmp
jnp
mov
add
mov
mov
shrb
inc
ficoml
add
dec
fsts
dec
loope
pop
sti
sahf
stos
out
repz
int
jno
cmp
ret
sub
pushf
push
inc
lcall
fldenv
cmp
lret
inc
push
mov
jnp
mov
xchg
xchg
out
sub
mov
cmp
jae
call
jg
shr
in
test
repz
and
test
ja
dec
adc
cltd
jecxz
or
in
cs
fiaddl
stos
cltd
nop
rcrl
jg
cmovp
cmp
xchg
xlat
xchg
and
xchg
cmp
insb
add
out
loopne
mov
xchg
loop
push
push
nop
loop
inc
adc
xlat
inc
arpl
inc
leave
adc
or
rsm
xchg
sub
mov
frstpm(287
push
jmp
cld
inc
insl
or
mov
mov
inc
roll
in
aaa
repnz
lret
ja
rclb
dec
jecxz
mov
xor
pop
push
mov
in
jmp
fidivl
in
outsl
xlat
and
hlt
mov
add
orl
adcl
lods
inc
nop
pop
inc
dec
xor
lea
lods
jg
sub
mov
gs
xchg
xchg
dec
rcrb
cwtl
repnz
lret
lock
ds
movsb
mov
lds
xor
mov
adc
dec
lea
cmc
outsl
scas
and
push
pushf
inc
ret
sbb
in
or
mov
xor
std
mov
test
push
shll
sub
enter
jecxz
mov
cmp
rcr
outsb
mov
lret
mov
cmpsb
sti
test
xchg
mov
leave
jp
shr
jge
test
sahf
jp
pop
sub
shlb
loopne
pop
jnp
or
addr16
xor
rep
dec
mov
jno
jp
outsb
sbb
rcrl
push
jecxz
xor
sbb
adc
add
repnz
adc
pop
ds
outsl
jg
negb
and
loope
lods
popa
imul
out
testb
add
test
cltd
mov
adc
dec
adc
lods
int3
insb
push
aas
inc
test
into
jb
jbe
stos
or
cld
lcall
in
inc
ljmp
xlat
inc
jge
mov
mov
mov
aaa
out
push
pushf
sub
loop
ret
leave
and
cwtl
lcall
xor
jbe
mov
and
sti
jbe
test
lret
adc
add
jb
push
hlt
insb
cmc
int3
sbb
cmpsb
std
push
aas
inc
fadd
js
mul
mov
jp
adc
ja
mov
iret
fistpl
add
pusha
ja
test
or
xchg
clc
popf
popf
xchg
sub
add
cltd
in
in
dec
psubb
and
popl
into
ret
stos
aad
sub
repz
adc
div
or
sbb
stc
cltd
je
mov
push
and
in
ficomps
imul
pushf
cmp
dec
sahf
sti
mov
mov
fisttpll
psraw
push
and
pop
stos
inc
sbb
lahf
inc
test
mov
test
rcrb
add
pop
ja
push
insl
rcl
jne
pop
repnz
adc
rolb
xor
sbb
push
push
out
adc
daa
mov
xchg
fisubl
pmaxub
xchg
leavew
ja
sti
das
xchg
xchg
or
and
scas
cmpsl
pop
sbb
fcoml
push
inc
mov
xchg
cli
fidivrs
sbb
in
fs
sub
or
cmc
sub
daa
fldl
xchg
fcomip
pop
mov
cli
jbe
or
lds
cmp
mov
popf
push
stos
mov
mov
je
mov
xchg
pop
scas
xchg
mov
pop
ss
sbb
loope
xchg
call
pop
lds
int3
mov
sahf
lods
hlt
lret
adc
jae
jno
js
jno
inc
inc
clc
jns
jp
ret
mov
ljmp
sbb
and
shr
inc
mov
hlt
adc
loop
dec
pop
sarb
es
xlat
inc
sbb
xchg
sub
loope
mov
dec
or
jg
in
mov
push
cmc
into
cmp
push
faddl
cwtl
jl
popa
mov
in
data16
cwtl
das
repnz
out
shlb
dec
cmp
mov
lcall
insl
mov
lret
repz
pop
cmpsb
inc
clc
push
mov
cmp
mov
dec
pop
jg
hlt
andl
lds
loop
sub
mov
addr16
out
sti
or
rcrl
je
imul
repnz
orl
std
xor
pop
cmp
subb
sub
idivl
jo
sbb
mov
test
xchg
mov
roll
les
sbb
mov
in
dec
loopne
test
cmp
jnp
sahf
das
inc
sbb
push
mov
cwtl
cltd
mov
int3
jecxz
loope
lret
cmc
fsubr
push
das
xchg
cmc
pop
lahf
cmp
and
ja
popa
outsb
bsf
xchg
sbb
mov
jl
push
cmpsb
les
pop
scas
test
xchg
jge
ja
push
mov
std
lods
push
pop
xlat
mov
or
mov
jae
das
movsb
mov
cmp
mov
loopne
dec
xchg
test
mov
add
cmp
dec
in
fstps
subb
jge
add
daa
jmp
negl
lret
repz
jo
sub
pop
and
mov
adc
data16
loope
int
or
sbb
call
mov
and
ja
sub
cltd
adc
stos
sub
addr16
in
cmp
and
mov
hlt
xchg
and
mov
les
movsl
cmp
xchg
fwait
sbb
sbb
cmpl
scas
gs
inc
xchg
or
fistpll
aaa
xchg
popa
push
xor
and
insl
or
push
mov
lds
pop
nop
mov
ret
cs
daa
pop
out
add
sub
popa
add
pop
lods
iret
ljmp
fldl
add
dec
pop
jo
jne
jp
jne
mov
lods
mov
or
stos
loopne
mov
stos
add
add
sbb
xchg
pop
adc
sbb
xor
insl
push
mov
cmpl
lret
mov
adc
mov
fmull
in
ret
shlb
mov
jge
jne
mov
xchg
ret
sarl
add
repnz
dec
fdivrp
add
aas
fldt
iret
add
mov
sub
loope
in
pop
mov
adc
dec
subl
aaa
sbb
outsb
mov
pusha
in
cmpsl
out
mov
adc
fnsave
lret
enter
pop
mov
inc
lahf
jno
cs
stos
scas
clc
inc
fadds
jne
push
dec
add
das
adc
mov
cmp
mov
jmp
pop
xor
ss
orl
cs
xchg
ljmp
popf
xor
or
xor
lods
call
xchg
cmp
popf
push
pop
cmp
aaa
push
jne
adc
push
daa
inc
in
fs
adc
sub
call
ror
clc
cwtl
dec
cli
dec
hlt
mov
lahf
xchg
sarb
rclb
pop
fdiv
inc
lret
and
mov
inc
push
iret
dec
pop
lret
decl
mov
adc
push
fildll
imul
sbb
mov
jnp
sbb
adc
mov
or
idivb
inc
rorl
lods
fdivrl
sbb
loop
or
add
mov
loopne
shr
inc
ss
popa
sbb
into
lods
test
push
jne
jo
add
add
mov
rcr
sub
pop
stos
jae
lret
mov
popa
orb
adc
mov
rcr
out
fcomi
push
mov
mov
pop
testb
nop
push
fimuls
cmpsb
sbb
aas
adc
loopne
cmpsl
inc
pushf
jecxz
jl
or
mov
sub
push
les
sbb
aad
pusha
push
decl
mov
sahf
push
stos
inc
jnp
and
int3
and
movsb
cmp
and
addb
pushf
add
data16
arpl
dec
inc
or
in
mov
fimuls
fnsave
mov
push
test
daa
adc
repnz
dec
rcrb
jmp
jl
jnp
cmpsl
inc
fistl
pop
outsl
dec
inc
dec
mov
add
pushl
or
mov
cli
pushf
push
sbb
out
out
mov
sub
jg
stos
jne
sbb
cmp
jmp
cmp
in
fwait
test
jp
imul
out
sub
sarl
hlt
and
clc
ja
push
and
sub
jl
je
push
add
fistpll
xchg
or
xorl
inc
test
cltd
popf
mov
stos
add
mov
scas
jns
inc
mov
dec
testb
and
mov
jle
push
daa
rol
and
cmc
sbb
fidivrl
push
push
call
mov
into
ret
add
iret
imul
in
outsl
or
inc
sub
fstpt
lea
in
movsb
jecxz
xor
xchg
out
adc
and
push
xor
xchg
test
imul
xchg
fadd
mov
insl
add
mov
movsb
add
mov
decb
mov
notl
fcoms
mov
dec
fdivs
fstpl
jae
subl
cmpsl
insb
rcrl
aam
push
push
sahf
mov
inc
fsubl
lcall
mov
loop
xchg
or
aad
nop
pop
gs
jl
dec
outsl
push
pop
cltd
mov
xchg
add
iret
adcl
imul
insb
lea
jbe
les
inc
lods
pop
loope
scas
xchg
leave
scas
dec
out
mov
bound
test
arpl
lods
mov
or
cs
jb
xchg
xor
add
dec
mov
xchg
sub
cld
cmp
mov
dec
call
in
xor
xor
xlat
jmp
addr16
add
scas
addr16
in
cld
xchg
jg
lds
adc
jp
mov
cmp
dec
mov
hlt
pop
repz
inc
mov
pushf
in
pop
xchg
mov
mov
inc
mov
leave
pop
xor
mov
mov
out
lods
les
push
and
and
jbe
mov
xchg
mov
xchg
mov
ror
mov
sub
lock
bound
in
loop
fcmovbe
mov
inc
insb
inc
push
divl
xchg
xor
clc
mov
and
push
fucomip
aas
mulb
subb
lock
mov
xor
shlb
insb
adc
adcb
addl
mov
pop
sbb
arpl
ljmp
jb
inc
push
bound
fcompl
aaa
loopne
jl
arpl
or
cmp
pop
pop
shl
outsb
sti
pop
ret
cmp
inc
push
mov
adcb
das
adc
out
fisubrs
sub
fidivs
cs
clc
xor
xchg
pusha
mov
enter
xchg
iret
dec
mov
and
jp
mov
pushf
mov
rcrl
fcomp
mov
pop
sub
popa
add
dec
cmp
loop
push
jbe
mov
adc
jbe
xchg
inc
xchg
shrb
fdivrp
fidivrl
mov
faddp
fisttps
xchg
mov
mov
adcb
ret
sub
jo
pop
out
lea
add
or
fistpl
mov
mov
stc
xlat
call
or
clc
mov
dec
pop
and
xchg
jmp
je
stos
xchg
jne
leave
int3
out
add
ja
jnp
cmp
push
lock
and
enter
in
rclb
push
jo
loope
sti
mov
popa
mov
xchg
add
push
stos
jnp
cmpl
popa
out
pop
adc
rclb
or
cmp
daa
daa
inc
sbb
push
push
mov
adc
push
and
adc
pop
inc
shrb
idivl
fidivrs
add
rcrb
fmul
xchg
repz
ds
cld
lcall
insb
js
push
or
push
insb
in
jl
mov
loope
jae
stc
mov
insb
pop
scas
sub
imul
xor
mov
dec
push
orb
cmp
js
les
mov
decl
imul
fidivs
fadd
pop
pop
cmp
test
out
ds
fwait
gs
cmpsl
out
paddsb
loop
test
mov
mov
std
mov
or
sbb
mov
add
push
in
notb
dec
imul
mov
jns
fnsave
fisttpll
jg
mov
aas
movl
sti
jnp
and
nop
js
cltd
mov
aaa
sub
ret
dec
cwtl
int3
jmp
pop
mov
out
xor
jmp
aam
in
inc
xchg
jb
out
jno
mov
jbe
rcrw
jge
iret
inc
add
sbb
cmp
xor
mov
imul
mov
or
aaa
addb
dec
mov
rcrb
std
sbbb
cmpsl
inc
insl
and
insl
dec
fdivs
push
out
popa
mov
xchg
jmp
xor
adc
pop
mov
call
or
lret
je
jle
and
push
jnp
ljmp
pushf
jns
xchg
fisubl
and
inc
push
push
xchg
sbb
cmc
mov
add
out
xchg
std
and
nop
lea
adc
pop
push
sbb
lods
xchg
stc
or
cltd
loope
cmc
shlb
adc
xor
push
sahf
mov
mov
jg
popf
leave
int
imul
mov
ljmp
dec
shrl
push
fsubrl
lret
imul
popa
clc
sbb
add
xchg
fistl
xchg
mov
mov
pop
jne
lea
arpl
pop
xchg
cmp
sub
push
or
test
bound
aam
sti
hlt
adc
pop
fistpl
jmp
dec
cld
movsl
cmp
push
dec
cmc
fdivr
dec
xor
pop
ds
inc
sub
insb
roll
xchg
out
lret
pop
jne
dec
in
mov
mov
std
imul
mov
xchg
jmp
loope
or
sub
xchg
add
imul
mov
xchg
sub
out
pop
es
pop
xchg
lcall
sbb
xor
lret
sti
insb
iret
push
ficomps
pop
mov
push
test
push
popa
push
pop
push
cmpsl
imul
popa
pop
mov
pop
pop
jae
jns
jmp
pop
add
sbb
jno
mov
stc
push
mov
pop
cmp
popf
add
pop
idivb
lock
rcrb
inc
xchg
xor
add
and
xchg
push
dec
jae
push
xchg
or
jbe
adc
inc
in
ja
dec
movsl
cmp
jecxz
push
shll
xor
jo
push
xor
test
ds
cmpsl
jecxz
out
dec
jo
fsubrl
jbe
push
sti
loopne
inc
mov
outsb
dec
nop
sub
pop
jns
mov
shrl
in
shrb
or
mov
mov
jge
mov
lds
mov
sub
std
push
mov
pop
rorb
sbb
dec
adc
cmpsb
or
cmc
repz
sti
jecxz
subl
sbb
daa
ret
ljmp
xor
lds
jmp
sbb
dec
cmp
dec
mov
ror
sbb
stos
mov
int
cs
imul
jbe
cmp
js
xchg
sahf
adc
mov
icebp
add
das
leave
cmc
mov
xchg
mov
xchg
fnstcw
mov
or
push
mov
jns
sbb
push
jge
inc
xor
mov
pop
inc
cltd
xchg
in
cli
mov
fwait
pop
das
sub
pop
nop
iret
retw
mov
cwtl
outsb
stos
clc
push
rcll
bound
xchg
push
mov
insl
or
xchg
stos
test
in
add
inc
repnz
sbb
xor
sbb
aam
lea
sbb
aas
imul
repz
sahf
stos
add
xchg
sub
mov
in
push
pushf
and
insb
push
mov
ljmp
scas
or
jo
aaa
push
ja
pushf
dec
jge
mov
insb
and
push
adc
loop
adc
pop
out
sub
jbe
out
popa
cmp
sti
xchg
hlt
mov
sbb
mov
pop
adc
lret
ljmp
fs
fcomps
lea
mov
in
stos
xor
out
push
jne
into
ljmp
outsl
push
lcall
in
dec
arpl
out
cmpl
mov
scas
ficomps
daa
or
sub
and
jmp
cwtl
xchg
arpl
mov
mov
jmp
adc
xchg
xor
pop
xchg
testb
icebp
mov
pop
pushf
jecxz
mov
in
cmp
sbb
loope
pop
movsb
xchg
push
cmpb
push
mov
cmp
inc
popf
xchg
push
les
dec
outsb
pop
ds
sbb
aam
mov
cmp
or
pop
add
lods
xor
push
or
ss
bound
dec
adcb
jb
fistl
sub
cld
nop
and
insl
push
out
lds
sub
push
sar
loope
pop
out
pop
sub
cmp
aaa
sbbl
push
mov
and
mov
mov
mov
int
dec
mov
adc
aad
stc
outsb
or
add
mov
pushf
repnz
in
jne
test
adc
xor
fisubl
add
das
mov
and
xchg
sub
xorl
mov
leave
mov
sub
sbbb
xor
add
movsb
rorl
ja
lds
insb
fwait
vpaddd
or
mov
bound
jnp
xor
pop
pop
mov
pop
sub
pusha
test
loopne
mov
rol
inc
jmp
adc
negl
scas
into
ds
dec
stos
stos
and
adc
sub
addr16
je
pop
xchg
jle
add
mov
std
mov
cmp
lods
sbbb
add
mov
sbb
xorb
clc
mov
lds
test
mov
mov
pop
inc
xor
test
cld
repnz
cmp
mov
cltd
mov
mov
dec
push
mov
jae
cmp
pop
inc
or
cmp
movsl
dec
sub
mov
clc
cld
mov
jno
adc
push
cmpsb
inc
xchg
sub
xchg
cmp
icebp
jnp
insb
xorb
ret
insl
es
xchg
rorb
add
adcl
lret
test
popa
inc
inc
or
into
in
xor
dec
int3
adc
aaa
push
lahf
pop
xchg
push
out
fwait
pop
stc
inc
fbstp
aas
les
mov
test
out
sahf
lods
inc
fwait
or
lods
int
stc
push
aad
aas
add
aad
int
push
enter
lods
sar
mov
inc
popf
enter
mov
hlt
jg
add
ficoml
jge
or
pop
push
fs
xchg
inc
adc
cmp
sbb
sub
inc
add
dec
imul
mov
fisubrs
mov
or
aam
xchg
sub
sub
cs
test
scas
push
push
rcrb
repnz
lods
shrl
std
cld
jecxz
test
stos
push
lods
pop
mov
xor
mov
fwait
insl
xorl
aad
popa
arpl
mov
gs
xchg
xlat
orb
pop
mov
adcb
subl
ret
push
mov
push
test
enter
inc
sub
lods
dec
int
jg
sub
addr16
in
xor
dec
pop
jo
xchg
mov
outsl
mov
mov
imull
in
sub
ret
outsl
arpl
xchg
push
popf
jbe
pop
mov
cmp
dec
in
daa
jg
xchg
mov
lods
add
mov
xor
les
ljmp
call
mov
xchg
sub
clc
stos
cmp
loope
fwait
inc
scas
incb
jne
out
clc
push
and
orl
push
pop
cs
mov
jno
or
das
mov
cmp
xor
aam
fiaddl
dec
rcrl
push
ss
push
out
mov
and
push
pop
inc
push
sbb
xor
cmp
ficompl
adc
push
mov
sarl
lods
pop
das
sub
iret
xor
repnz
ljmp
int
mov
push
inc
fnsave
add
inc
mov
ljmp
jno
rcll
es
sbb
insl
sbb
scas
inc
call
scas
xchg
inc
sti
je
shlb
jae
cwtl
fstps
frstor
mov
fisttpll
xor
add
cmpsl
push
jp
jnp
dec
cld
xor
push
xlat
push
mov
jp
push
cmp
lahf
out
lcall
test
je
mov
push
mov
int
pop
mov
mov
adc
aaa
push
shlb
aad
inc
in
xor
adc
cmp
mov
ficompl
aad
pop
sub
sub
or
mov
sub
mov
dec
push
fisttps
pop
lock
cmp
je
movsl
sub
daa
jecxz
loope
push
mov
bound
dec
inc
frstor
in
pop
mov
jp
incb
xor
sbb
add
scas
enter
push
cmp
cmp
loopne
das
adc
aas
add
jo
mov
sahf
mov
mov
fwait
test
lds
jae
pushf
cmc
dec
mov
or
iret
push
cmpl
imul
lcall
je
pop
inc
mov
cmpsl
push
mov
mov
fbstp
ljmp
and
pop
jge
es
rcrl
lods
nop
xchg
dec
arpl
xor
xlat
pop
hlt
fcomi
mov
push
pop
and
gs
call
dec
xchg
pop
jo
ja
fs
xchg
jb
jle
pushf
pop
sub
stos
push
sub
mov
hlt
jnp
push
inc
or
mov
sub
xchg
inc
cmp
pushf
scas
mov
ret
movsl
fiadds
mov
leave
fprem
sub
add
movsl
and
movsb
inc
adc
sub
out
xchg
jnp
mov
mov
dec
pop
sbb
xchg
jne
enter
mov
loopne
das
shl
push
stc
subb
out
xchg
xchg
mov
insb
push
icebp
sbb
jns
cld
mov
sub
fxtract
fcomps
cmpsl
xchg
xor
cmp
cwtl
out
aad
and
mov
dec
cli
test
lock
push
jb
dec
or
mov
aam
inc
das
aam
popa
popa
in
inc
or
pop
sub
popf
jge
aaa
jns
cmp
outsl
icebp
arpl
xor
add
push
and
cli
cmp
pop
add
imul
sbbl
jmp
cmp
rcll
lea
lds
jmp
loop
jecxz
pop
ds
mov
push
aaa
jns
sbb
cmp
cmp
cmp
iret
rcll
pushf
in
fucomip
adc
xor
push
cs
adc
mov
sub
insl
jge
negb
sbb
mov
xchg
lods
sub
xchg
adc
mov
in
faddl
lahf
inc
sub
jg
sub
dec
jge
adc
aaa
pop
cmpsl
mov
cld
lods
and
pop
lods
mov
pusha
xchg
shr
testb
loop
iret
mov
jno
push
imul
fs
pop
test
movsb
sbb
pop
or
mov
jnp
and
rcr
jno
add
mov
ret
in
pavgw
jne
mov
and
rcll
mov
ret
cli
lret
push
cmp
dec
jg
jmp
repz
push
xchg
and
vmovd
lret
add
bound
cmp
cmp
rcrl
jl
pop
repnz
popf
or
dec
movsb
add
sbb
sub
out
repz
dec
xor
add
push
jge
jne
std
cmpb
subb
mov
cmp
pop
shlb
lret
call
pop
jge
icebp
jecxz
pop
pusha
jge
jge
mov
push
std
cld
cmpsl
lds
dec
cmp
nop
pop
cmp
int3
add
mov
cld
jl
xor
mov
in
les
leave
mov
xor
xor
push
pop
repnz
data16
enter
jg
xor
sub
iret
cmp
insl
fldenv
mov
jns
in
adc
jecxz
int3
ret
inc
imul
test
and
and
push
aas
jle
mov
fcoms
push
rol
add
mov
mov
and
rcrb
and
cmpsb
mov
shlb
sbb
aas
mov
adc
jo
and
jo
repnz
mov
pop
inc
popf
scas
pop
xchg
aaa
fwait
aad
sti
jle
mov
mov
mov
jne
xchg
xorb
mov
jmp
pop
pop
jge
int
cmp
vorps
aam
dec
pop
mov
or
sub
lods
pop
adc
push
xchg
pop
dec
in
jle
jp
sub
cmp
mov
pop
cmp
dec
mov
mov
test
push
lret
lret
pop
jne
mov
cmp
xor
add
aam
xchg
in
sbbb
sbb
in
fisttps
aam
xchg
jecxz
sub
cs
push
scas
inc
leave
adc
ret
hlt
sbb
shlb
add
xchg
jge
pop
push
jge
popa
in
cltd
test
and
andb
scas
and
ds
hlt
and
pop
pop
sbb
mov
aas
mov
dec
enter
aam
aas
push
movsb
jecxz
mov
test
nop
stos
inc
sub
mov
in
iret
sub
fbstp
ds
movsl
ret
sarl
movsl
mov
add
das
sbb
aaa
mov
push
sbb
dec
push
movsl
lret
pop
ret
int
cmp
xchg
pop
int
outsb
out
fstpt
data16
in
sub
sub
inc
stc
ja
sbb
in
insb
jle
cmp
pop
xchg
call
mov
imull
mov
scas
in
push
sub
popa
add
outsl
or
sbb
adc
cmp
pop
mov
leave
inc
loope
jp
xchg
jnp
sbb
cmpsb
inc
mov
and
inc
and
pop
lods
add
cmpsl
je
jle
cwtl
dec
sub
aas
and
repnz
dec
sbb
jno
aaa
stos
jne
push
pop
mov
pop
xlat
sar
sbb
pop
pop
sub
dec
mov
cwtl
ljmp
clc
out
addb
ja
pop
xor
sbb
cltd
and
shlb
push
xlat
cmc
cltd
mov
out
movsl
enter
jnp
or
add
inc
jno
pop
xor
inc
push
out
sub
xor
xchg
hlt
mov
add
sbb
ss
push
daa
lahf
xor
in
out
aam
int3
cmp
xchg
push
scas
inc
test
les
push
push
in
jg
ret
pop
xchg
pushf
mov
mov
adc
or
andb
push
ss
arpl
jno
mov
pop
mov
repnz
jl
jno
xchg
mov
pop
pop
popf
or
jnp
out
popf
in
std
adc
mull
jp
out
mov
lds
add
rorb
int
xchg
xor
or
lcall
stos
inc
push
and
outsb
cli
rclb
es
sub
dec
jg
idivb
outsb
rol
divl
and
inc
arpl
data16
call
xor
mov
lret
jb
in
xchg
shlb
movsl
frstor
pop
adc
lods
mov
insb
je
aam
sahf
xor
xchg
and
or
ja
push
test
dec
test
inc
ud1
fnstenv
sub
in
pop
pop
dec
or
addr16
js
and
adc
ja
pop
test
jns
jae
pop
lea
fwait
adc
jno
cmp
movsl
out
mov
inc
loopne
lahf
scas
fnstcw
sbb
les
insl
inc
lods
sahf
xchg
jne
pop
push
fstpl
inc
or
mov
lods
adc
cmp
pop
cmp
test
psubb
cltd
pop
xor
subl
addb
xchg
jge
sub
mov
cli
pop
or
cmp
cmp
dec
fldl
mov
mov
sub
add
cmp
jno
mov
add
shrl
aam
jbe
lcall
sub
inc
xlat
testl
fcomip
adc
in
mov
je
mov
sti
sbb
push
push
add
roll
lcall
cltd
and
negl
iret
aaa
dec
sub
movsb
pop
inc
aas
sbb
test
cmp
inc
mov
test
and
shrl
fistl
xchg
sbb
dec
lahf
ja
testb
sbb
sub
jle
movsl
jo
lret
loop
sub
hlt
stos
cmpsl
mov
clc
fst
fcmove
xor
adc
movsl
push
sahf
loope
inc
test
xchg
inc
jbe
push
xor
xor
loope
sub
xchg
cmp
lret
insb
dec
xchg
sarl
outsb
clc
pusha
cmpsb
addr16
mov
arpl
push
in
dec
push
and
test
imul
sub
mov
lahf
inc
push
sub
rolb
cmp
popa
shll
mov
int3
mov
js
mov
inc
cmpsb
jp
sahf
and
cmpl
shr
push
in
add
fs
cmp
mov
int3
data16
loope
jp
popa
adc
push
add
jns
mov
int3
test
mov
test
cmp
mov
fbld
lea
sbb
xor
inc
test
mov
adcl
imul
and
xor
xor
setno
pop
pop
test
dec
repnz
ja
xchg
jb
add
jbe
outsl
test
xchg
sar
and
cmp
lahf
cmp
sahf
xorl
inc
cs
out
stc
dec
xchg
daa
imul
add
pop
leave
cmpsb
pop
xlat
lcall
in
xchg
xchg
aas
lret
shl
sahf
mov
cmp
sbb
inc
sbb
iret
adc
push
loop
mov
mov
dec
cld
xchg
outsb
int3
mov
or
popa
mov
aad
push
shlb
fs
add
adcb
jne
in
fidivrs
repz
in
sbb
dec
add
movsb
dec
and
rcll
mov
shll
aas
fcmovnbe
ss
cli
xchg
pop
inc
inc
xchg
jmp
mov
movsl
jmp
inc
mov
xchg
xor
int3
mov
fildll
push
xchg
push
mov
mov
push
addr16
push
dec
cmp
sub
inc
or
stos
xor
mov
or
scas
imul
jmp
in
lods
or
and
mov
addl
or
pushfw
xchg
outsb
jo
push
dec
repnz
aad
xchg
test
mov
fisubrs
mov
adcb
push
pop
call
ret
ja
enter
dec
xchg
adcb
ljmp
pusha
sub
call
jne
loope
sub
scas
inc
test
and
mov
inc
imulb
mov
bound
out
and
addr16
test
test
and
dec
loop
out
dec
cltd
cmc
mov
dec
mov
es
loope
mov
incb
fwait
jmp
mov
push
jns
gs
jns
test
ja
dec
xchg
pop
or
xchg
aas
imul
cmc
cmp
mov
leave
sub
jle
movsl
xchg
push
xchg
dec
and
cmc
or
mov
jmp
cmp
out
pop
jae
lea
dec
aas
push
or
popf
popa
in
mov
xchg
cmp
ret
jbe
or
daa
fldenv
dec
cmp
xorb
cwtl
or
fiaddl
inc
push
xor
mov
sub
xor
dec
cmp
test
pushf
test
rorl
adc
cs
int
repz
xchg
in
mov
incb
outsb
push
inc
push
or
xor
pushf
lea
ret
mov
loopne
inc
popa
dec
icebp
cli
ja
nop
and
cmp
push
imul
mov
inc
dec
ret
jns
into
insl
jl
in
test
and
fnstsw
enter
jg
jo
mov
pop
loope
xor
stos
icebp
and
dec
sbb
addb
dec
fidivl
ret
push
jo
inc
dec
pop
jns
adc
adc
movb
popa
sbb
lret
mov
ljmp
pop
mov
push
je
andl
repnz
aaa
lods
and
cmpl
xor
mov
out
push
pop
je
jns
inc
aas
lds
lret
test
roll
xor
in
sub
sub
mov
fsubrl
adc
cwtl
push
inc
jmp
aaa
inc
test
push
adc
xor
cs
inc
out
pusha
sbb
loopne
mov
mov
cmp
mov
xor
call
mov
cmc
or
sahf
inc
xchg
pop
sbb
pop
sub
dec
movsl
sbb
outsl
push
jnp
iret
xchg
out
or
xor
jmp
das
add
push
mov
scas
cld
xchg
mov
sbb
inc
add
and
out
pusha
cs
or
push
es
loop
jg
mov
loopne
adc
or
dec
push
nop
pop
stc
cmp
mov
mov
out
mov
outsb
lea
mov
cmp
xor
mov
insl
xchg
cmc
rcll
test
mov
dec
mov
jg
jmp
jle
and
call
or
inc
push
xor
inc
rorb
mov
fs
test
lahf
inc
loope
ja
jbe
iret
out
sub
lret
mov
xchg
sub
push
sbb
aad
jo
loope
xchg
imul
dec
loope
jns
inc
mov
nop
sub
pop
inc
scas
add
arpl
or
mov
lret
rolb
cli
pusha
and
inc
sub
loopne
sub
shlb
push
lea
xchg
add
test
lret
push
mov
dec
add
cmp
fcompl
add
cmp
enter
les
cmc
push
test
movsl
xchg
fs
pop
mov
jno
stos
stc
cmpsb
leave
pushf
mov
fsubs
xchg
lret
pop
xchg
punpckhwd
lret
aam
mov
ret
jle
xchg
sub
cmc
adc
daa
add
and
jg
stos
mov
jl
sub
mov
xchg
pop
xchg
cmpsl
lea
out
bound
sti
leave
pop
mov
imul
pop
inc
adc
addb
jae
mov
cmpsl
out
sub
mov
ljmp
pusha
jp
mov
inc
in
mov
mov
and
movl
roll
xor
push
dec
shll
sahf
enter
mov
jne
mov
adc
cmp
pop
dec
stc
sahf
in
dec
nop
in
shrl
ljmp
sub
inc
je
shrl
and
testl
jae
sti
xchg
lea
outsl
int
or
jl
xchg
lods
rclb
dec
clc
ret
out
mov
push
sub
adc
icebp
dec
sbb
jns
out
leave
xchg
icebp
sub
out
jge
mov
std
roll
test
jle
inc
data16
roll
icebp
push
sub
rcrb
mov
sub
mov
or
outsl
cmp
or
loope
imul
daa
loopne
xchg
mov
xchg
mov
ret
call
pop
repz
les
or
fdivp
xor
imul
movsl
dec
dec
or
lret
cmpsb
scas
lea
mov
sub
push
or
xchg
mov
add
cmp
sbb
test
fs
dec
mov
pop
fildl
xchg
xchg
adc
xorb
mov
add
fiaddl
mov
cmp
stos
pop
ret
imul
js
dec
mov
cmp
jg
pusha
adc
pop
inc
jnp
xor
jbe
push
gs
gs
mov
mov
arpl
dec
rdmsr
or
cmp
xchg
stos
stc
push
or
push
mov
call
jo
or
push
iret
rcrl
mov
mov
cmp
sub
addr16
lds
inc
negl
push
popa
xor
inc
jecxz
lea
xchg
popa
lds
ljmp
insb
mov
sbb
cld
push
insb
xchg
jle
ljmp
cmc
xchg
and
std
xor
lahf
ja
jecxz
nop
fisubl
add
out
xlat
shr
inc
mov
lcall
ljmp
cmp
ja
xchg
sub
jl
in
cs
adc
ret
or
dec
cmp
xchg
outsb
xor
pop
jmp
dec
dec
enter
add
int3
imul
std
pop
mov
and
je
and
jne
fs
xchg
sub
pop
imul
jne
sub
dec
addl
inc
pxor
adc
or
cltd
sbb
movsb
inc
mov
js
adc
mov
push
xor
push
adcl
insb
mov
pop
mov
lahf
pop
std
cmp
insb
cmp
das
sub
jp
repz
nop
iret
xchg
lods
leave
pusha
clc
stos
aam
nopl
shl
repnz
sbb
inc
test
mov
ss
xchg
jecxz
jno
add
movsl
adc
cli
enter
aas
adcl
sbb
and
and
es
jno
testl
or
sbb
pop
cmc
pop
adcb
imul
mov
fisttps
sbb
cmp
dec
repnz
iret
jecxz
shl
aad
gs
sbbl
and
lock
xchg
out
adc
sub
outsl
outsl
mov
sbb
push
inc
ficoms
push
out
xor
adc
add
dec
jecxz
test
int
test
cmp
pusha
imul
test
and
inc
cltd
mov
icebp
cmp
jp
out
mov
add
pop
or
sub
pushl
cmp
inc
lcall
sbb
outsb
dec
out
push
daa
mov
xchg
stos
jge
cwtd
add
test
jl
lods
pop
fsubr
add
lcall
in
jno
in
dec
imul
pusha
xchg
and
dec
and
jg
mov
jl
adcl
aas
mov
cmpsl
jecxz
mov
jle
fistps
adc
rcrl
push
add
dec
testb
das
mov
xor
xchg
push
cmp
pop
inc
fcmove
cld
nop
adc
popa
andl
fbstp
mov
int3
mov
gs
or
mov
jl
mov
adc
lret
push
sbb
or
sbb
aaa
outsl
jl
sub
or
mov
movsl
es
addr16
add
add
add
xchg
cmpsb
mov
lcall
cli
push
sbb
xchg
test
mov
insl
cmc
mov
jne
stos
cmp
jecxz
arpl
xor
push
mov
adc
popa
adc
push
pusha
cwtl
call
pop
bound
jmp
dec
pop
adcl
and
dec
sti
xchg
add
push
sahf
sub
add
rorl
sub
pop
and
fsubr
push
cli
cli
call
cmp
jg
std
shll
cwtl
ret
dec
pop
cmp
mov
insb
push
repnz
sub
stos
fsubp
inc
ljmp
sbb
cmpsb
sbb
mov
hlt
mov
lret
jne
dec
rcrb
aas
cld
nop
pop
cwtl
test
loop
imul
mov
int3
jo
or
mov
sub
scas
outsl
dec
nop
das
inc
ja
lcall
jb
jo
and
inc
pusha
jnp
or
es
shr
fsubrs
mov
addr16
jno
mov
and
ljmp
test
leave
cwtl
mov
xchg
imul
and
mov
push
out
inc
aas
xchg
dec
push
add
xor
mov
sbb
movsl
cmpsb
sub
push
sbbb
sbb
popa
xor
movsl
pop
sbb
jl
repz
push
xor
test
mov
sahf
jl
or
adcb
ljmp
jg
pop
pop
or
dec
xchg
aad
int
dec
pop
inc
pop
xor
jo
jp
test
xchg
add
rol
sahf
cmp
loope
in
mov
xchg
jne
sbb
aas
imul
push
push
hlt
sub
mov
or
test
rorb
inc
mov
adc
in
adcb
sbb
sbb
es
dec
nop
mov
mov
jns
xchg
mov
outsb
sub
scas
inc
ljmp
mov
mov
xor
gs
fmuls
push
dec
lods
push
cmp
adc
repz
mov
repz
sti
lret
lods
mov
sub
push
imul
mov
mov
sbb
or
cmc
pop
imul
lret
popf
xor
push
xchg
jmp
push
push
sbb
pushf
push
dec
mov
or
inc
aam
test
bound
push
mov
mov
rorb
dec
cmc
neg
jbe
lahf
sub
in
sub
ja
ja
push
and
fisttps
mov
mov
sub
jecxz
iret
push
test
test
repnz
or
or
push
addr16
mov
sbb
popa
ret
dec
pop
stos
jo
int
fwait
sub
sahf
stos
in
test
lahf
jmp
ret
xor
jae
mov
int3
loop
jge
dec
arpl
pop
add
xchg
scas
sbb
gs
and
and
gs
in
sub
xlat
cwtl
scas
es
fildl
jno
jecxz
ljmp
stc
adc
mov
iret
pop
pop
shrl
test
fs
inc
fiaddl
jg
push
cmpsb
fdiv
adc
clc
xchg
je
movsb
add
jnp
lods
inc
dec
or
insl
loope
lods
jmp
iret
rcrb
adc
pushf
ss
repz
mov
fidivrs
lea
inc
pop
adc
sub
pop
cld
cwtl
cmp
mov
nop
call
xor
and
adc
mov
xor
sbb
jnp
pop
push
cmp
fidivl
or
xor
push
or
inc
mov
les
repz
mov
pop
test
add
repnz
out
cli
loop
rcll
jmp
push
mov
leave
dec
jge
lret
add
push
cmpsl
pop
pushl
or
lahf
nop
imul
lock
repz
out
mov
pop
ret
out
mov
in
incb
mov
dec
sub
cld
outsl
sti
mov
adc
movsb
pushf
xor
fisttpll
sub
aaa
push
mov
in
sbb
sub
test
mov
mov
pop
roll
mov
in
cwtl
sbbl
mov
shlb
clc
das
pop
and
adc
jae
inc
movsl
repz
and
push
mull
lret
jg
xchg
add
add
jo
sub
pusha
ljmp
mov
fidivl
mov
mov
repz
popa
sub
sub
dec
ljmp
call
sbb
cmpsl
insb
inc
cmp
js
cmp
movsl
xchg
addr16
lods
cmpsl
push
xor
insb
filds
imul
lock
loopne
scas
fcomip
mov
out
lods
pushf
aas
push
lds
jne
shr
mov
out
in
add
jmp
push
aas
adc
cmp
pop
sub
fcompl
cmpsl
add
push
jmp
lahf
stos
aaa
xchg
or
pop
xor
push
mov
xchg
push
or
and
incb
adc
inc
sbb
cmp
cmp
repnz
sub
xor
mov
shrb
rcr
fdivl
add
sbb
inc
cmp
cmp
dec
test
mov
lds
shl
mov
inc
stc
inc
jmp
jbe
test
cltd
or
dec
test
sbb
push
clc
cmp
xchg
bound
sbb
xchg
ja
out
xor
int3
xchg
adc
fdivl
or
fwait
mov
leave
jbe
jl
imul
add
test
rcrl
add
sub
mov
stos
jns
or
sub
inc
cmp
ja
out
imul
xor
test
sub
jne
arpl
pop
sub
outsl
pop
mov
clc
xchg
int
fsts
xlat
adc
dec
mov
push
out
xchg
out
xorl
adc
enter
jmp
ror
lcall
sbb
rol
pop
pop
mov
hlt
xchg
inc
ret
shlb
lcall
or
insl
sbb
data16
das
mov
fnstenv
sti
subl
mov
js
or
adc
fwait
inc
insb
fldenv
sub
or
call
scas
fnsave
aaa
pop
shll
and
add
lret
mov
lea
cmpsl
jmp
subb
mov
sub
or
mov
cmc
and
xor
ret
out
sub
out
add
xor
inc
mov
pop
push
pop
mov
es
push
imul
test
add
cmp
sahf
frstor
fwait
mov
shr
mov
add
and
mov
sbb
ret
cmp
lods
push
mov
rolb
mov
fidivs
ss
fcomps
ret
dec
lahf
mov
daa
and
loopne
inc
ljmp
sbb
js
int
xor
xor
sub
dec
sub
outsl
stc
aad
push
in
into
cmc
test
insl
and
xlat
or
cmpb
mov
push
incl
into
inc
mov
and
loopne
fists
or
lds
cli
rclb
movsb
aad
and
sti
ret
aaa
ret
fildl
std
pcmpgtw
push
sbb
sarb
scas
icebp
push
mov
and
test
cmp
push
stos
pop
pop
mov
jg
inc
test
lret
subb
ficomps
or
and
out
push
dec
scas
cmpb
or
lret
mov
pusha
stc
out
mov
outsb
jge
lret
mov
add
cltd
push
stos
adc
test
add
sbb
arpl
sub
jmp
cli
and
sub
cmc
pop
jmp
mov
sbb
outsb
out
mull
adc
lret
xchg
xlat
outsb
scas
pop
jmp
js
push
outsb
ficompl
jno
jmp
cltd
mov
jp
lods
mov
lods
pop
add
mov
outsb
mov
call
or
cmp
fidivrl
jg
mov
cli
or
dec
push
out
orb
cmpsl
loopne
xlat
push
mov
ret
out
mov
mov
and
mov
adc
pop
xor
dec
fnsave
in
xor
xor
bound
insl
iret
push
dec
pop
mov
pushf
sub
dec
add
test
and
add
enter
lods
scas
lret
addr16
aad
xchg
cmp
lahf
push
imul
addr16
sub
xor
sub
dec
inc
pop
int
and
jne
ljmp
jno
mov
enter
mov
lahf
push
cwtl
push
jb
inc
es
js
dec
dec
jns
std
cltd
das
sub
mov
and
mov
push
mov
push
dec
pop
mov
mov
push
pushf
mov
in
cmpsl
xchg
sbb
iret
sub
lea
stos
sbb
jne
gs
int3
xor
decl
js,pn
push
inc
jbe
pop
jb
mov
repnz
arpl
push
fsubrl
out
sti
mov
cli
mov
fsubs
mov
pop
ss
scas
xor
jle
icebp
daa
xchg
add
out
adcb
scas
xor
iret
cmpsb
mov
sti
mov
leave
movsb
sub
jb
add
mov
rclb
dec
xor
push
sarl
leave
fmuls
cltd
mov
std
add
mov
data16
dec
push
daa
jle
cmpsl
clc
adc
inc
push
add
cwtl
inc
pop
jb
mov
outsl
addb
xlat
cmp
adc
jo
xchg
mov
pop
and
rcr
xchg
insl
testb
in
call
mov
test
push
xchg
xor
out
lret
and
or
adc
lods
ret
dec
push
fdivp
xor
mov
mov
dec
pop
jg
fsub
gs
mov
mov
cmp
ret
pop
cmp
mov
stc
sub
pusha
xchg
inc
dec
jecxz
mov
or
clc
and
mov
int3
xchg
andb
add
in
mov
in
stos
xchg
mov
sbb
xlat
outsb
movsb
imul
mov
cld
xchg
icebp
enter
xor
and
jne
and
mov
lret
add
cld
push
xchg
lods
lea
in
cmpsl
sub
mov
mulb
mov
out
adc
scas
inc
or
xchg
out
mov
cmpsl
pop
mov
or
repz
cli
push
xchg
out
sbb
add
testl
data16
insl
pop
addr16
xor
or
mov
adc
in
mov
xchg
add
and
mov
outsb
mov
lods
mov
fs
adc
adc
dec
movsl
and
repnz
insl
add
adcb
les
xor
lods
mov
stc
mov
inc
pusha
inc
sahf
mov
mov
stos
cmp
or
ds
jno
repnz
jnp
mov
jo
data16
insb
fnstsw
sub
sub
cmp
cmpsl
imul
xor
push
sub
test
pop
movsl
push
pop
sbb
gs
mov
dec
les
js
mov
sub
jl
xchg
jmp
push
mov
inc
cwtl
in
dec
inc
sbb
pop
sbb
pop
jne
in
lods
cltd
mov
fnstcw
xor
jmp
arpl
icebp
movsl
imul
test
cmc
in
icebp
test
xor
subb
lahf
mov
inc
cltd
in
mov
and
jne
adcl
aaa
fiaddl
and
pushf
adc
cmp
pop
jge
in
xchg
int3
fsub
and
dec
pop
lock
fsubrs
sbb
mov
aad
mov
cli
test
ret
jae
mov
jbe
add
add
rorb
mov
dec
xchg
jmp
sbb
gs
add
cs
sbb
popf
inc
jb
shl
std
test
adc
in
test
xchg
sub
ret
mov
pop
jne
mull
or
push
pushf
xchg
xchg
xor
fdivrl
shr
mov
or
or
dec
sahf
inc
mov
jo
cmpl
or
shlb
xchg
fsubrl
mov
arpl
fadds
or
pushf
dec
shll
xlat
bound
scas
xlat
add
idiv
popa
incb
xor
push
inc
fadds
sahf
fbstp
ds
xchg
or
das
sbb
stos
test
and
push
mov
lock
cmp
jno
inc
push
in
xchg
pop
outsl
in
fsubrl
sbb
lcall
dec
in
fs
inc
lahf
mov
mov
fdivr
mov
sarb
jp
dec
xlat
fldenv
cs
jnp
pop
fucomip
adc
lods
inc
sahf
mov
pusha
cwtl
mov
call
push
test
mov
inc
dec
xlat
or
imul
sbb
mov
cli
adc
arpl
jg
jno
jb
rcl
inc
outsb
mov
push
sbb
jno
bound
faddl
pusha
in
cwtl
cmp
fbstp
out
or
inc
inc
in
test
int
stos
mov
mov
movsb
cmp
rolb
mov
inc
fsts
ljmp
andb
push
jge
mov
addr16
adc
mov
push
lahf
flds
and
movsb
sub
lret
xchg
cli
push
inc
cmpsb
ja
iret
mov
add
std
cltd
inc
cmp
enter
jns
inc
jae
jbe
pop
mov
pop
xchg
add
rolb
insb
ficoms
pop
xor
push
mov
ja
jp
or
cmp
movsb
cs
insl
in
dec
sbb
add
or
push
repnz
jo
jbe
lods
out
add
add
mov
cmc
cltd
pop
mov
stc
and
push
in
xor
xchg
push
xchg
loopne
fs
loop
jo
outsl
and
push
mov
push
push
add
dec
rcrl
clc
xchg
testb
push
aas
pop
cmpsb
mov
daa
icebp
das
mov
test
add
mov
xchg
rclb
push
cltd
inc
cltd
nop
out
push
inc
rcrb
ss
loopne
mov
sub
mov
jnp
mov
lcall
movsb
xlat
mov
xor
in
rorb
add
mov
push
aas
push
sbb
and
ljmp
mov
inc
inc
mov
stos
sbb
popf
testl
rcrl
cmpsb
cwtl
adc
out
cmp
in
mov
sarb
add
pop
xor
sub
xor
mov
lcall
repz
add
jnp
pop
imul
pop
push
jno
int3
ja
lahf
add
test
xchg
adcl
divb
xchg
dec
jne
mov
in
inc
pop
sti
lock
dec
mov
stc
push
sub
sbb
add
in
mov
popf
mov
pop
xchg
add
fimuls
out
sub
lahf
mov
sub
jmp
fs
and
out
scas
mov
shlb
and
add
pop
aam
mov
jo
les
adc
pop
cmp
ret
mov
mov
or
out
mov
pcmpgtd
mov
mov
lea
mov
test
movsb
es
jl
lea
nop
stc
cwtl
dec
sbb
mov
popl
add
jne
mov
jg
xchg
sub
jo
test
mov
dec
fsubrs
mov
xorb
mov
pop
pop
mov
cmp
adc
and
or
mov
pop
sbb
sbb
fadd
in
into
movsl
repnz
cmp
les
inc
dec
cld
cmp
push
sub
mov
repz
movsl
in
sub
adc
xchg
mov
jg
mov
push
lods
gs
ds
push
int3
inc
ljmp
push
sub
hlt
mov
in
inc
and
fimull
dec
lret
mov
push
fabs
and
inc
test
ljmp
xor
mov
xchg
dec
inc
push
dec
push
xchg
in
and
xchg
jne
lds
mov
jns
fmulp
lea
bnd
aas
mov
push
fwait
adc
inc
xor
dec
arpl
in
xor
test
fwait
je
pop
les
cmp
gs
cmp
test
cmp
xchg
mov
enter
pop
jg
cmp
insl
pop
bound
xor
mov
cmp
nop
sbb
icebp
rol
xchg
scas
icebp
icebp
jns
add
push
adc
cmc
roll
hlt
lock
xchg
out
sbb
sbb
sub
push
push
mov
mov
jle
pop
test
ret
xor
jmp
ja
jecxz
inc
sbb
add
dec
pop
pop
fnsave
mov
in
mov
mov
xchg
filds
push
add
xor
sti
addr16
ss
sub
adc
pushf
and
sbb
iret
ja
iret
fidivs
ret
push
jmp
push
nop
cmp
imulb
popf
ja
lcall
cmc
pop
test
or
insl
add
dec
cmp
mov
pop
or
sbb
es
int
lods
jae
cmp
fidivl
outsb
divl
ja
movsb
cli
stc
ds
stos
es
in
les
dec
into
xchg
push
dec
adc
mov
mov
mov
add
setp
mov
repnz
cmp
jle
xchg
push
imul
sbb
cmc
jb
push
data16
popa
xor
cmp
ljmp
jno
pop
inc
mov
mov
lods
jns
pop
rorl
push
jns
mov
repz
adc
xchg
sub
nop
testb
or
jns
aam
mov
je
sub
das
xchg
mov
das
add
shll
jno
out
cld
mov
ja
adc
in
jge
cmpsb
cld
push
mov
les
pushf
push
icebp
xchg
lock
stos
pop
xor
in
jne
scas
stos
lret
push
icebp
mov
add
xchg
vpmacsww
mov
lea
sub
sbb
shlb
mov
fs
nop
ret
and
mov
mov
xor
sub
mov
pop
std
mov
push
cld
pop
or
push
cmpsl
aam
mov
mov
add
gs
or
cmpsb
sub
jmp
rclb
inc
xchg
mov
gs
xor
inc
push
movsb
out
push
cs
in
repnz
cmpsl
mull
jg
adc
das
push
cmp
lea
inc
icebp
mov
fstps
or
cli
dec
cmp
imul
imul
in
popa
inc
int3
jbe
subl
test
leave
lds
push
mulb
fs
outsl
and
xor
adc
cmp
dec
xor
mov
dec
mov
and
dec
shr
aam
data16
push
repnz
sub
cmpsl
pop
inc
lahf
addl
xchg
lret
jecxz
mov
fildll
mov
insb
ds
cmpsl
sbb
xor
jmp
sub
jae
mov
jns
sub
movsl
adc
adc
push
pop
sub
popf
mov
ss
sub
xor
loope
ficompl
aas
add
das
mov
mov
scas
gs
cmp
gs
xchg
ss
leave
fbld
xchg
mov
push
fcomi
add
add
xchg
lahf
mov
dec
pop
add
push
push
fiaddl
inc
xor
adc
scas
inc
cmpsl
outsl
dec
imul
push
cmp
sarl
jl
push
out
or
out
cmpsl
rclb
inc
cltd
lret
dec
fildll
adc
lods
xlat
inc
out
cld
clc
xor
lahf
stc
mov
test
aam
cld
out
aam
stc
cmp
xchg
insb
dec
mov
push
push
cmp
or
sbbl
in
fcmovne
rcrb
jno
into
push
icebp
add
aam
inc
cmc
and
sbb
mov
mov
aas
and
in
and
aas
stos
jmp
or
js
sbb
ret
sbb
loop
mov
pushf
scas
leave
xchg
shl
mov
jp
mov
ds
inc
loope
aam
stc
mov
jl
cltd
std
xchg
std
out
nop
in
mov
xchg
imul
pop
jg
jg
jl
add
mov
fld
loopne
or
push
lcall
fs
sahf
mov
sti
test
call
dec
inc
outsl
les
mov
cmp
dec
mov
mov
sub
in
lahf
je
ja
popa
repnz
push
lock
xor
ss
test
cmc
mov
or
out
jl
jp
mov
pop
mov
into
inc
xchg
cmpsb
pusha
cmp
repz
cmc
popf
jbe
ret
stos
mov
push
bound
stos
or
xor
jmp
mov
fs
sbb
inc
movsb
and
into
es
sbb
sahf
pop
mov
sub
push
fwait
push
call
popf
jbe
aaa
mov
std
push
stc
sbb
xchg
aad
fnsave
xor
sbb
aad
mov
sarb
fs
mov
xchg
ja
cmp
sub
cltd
jb
std
cmp
jno
stc
push
xchg
imul
repz
jecxz
mov
and
and
repnz
stos
xorb
rclb
pop
fdivrl
xchg
pop
mov
test
imul
adc
gs
jb
mov
or
pop
negl
and
bound
sub
adc
xchg
pop
js
popf
xchg
cs
or
fcomip
adc
orl
dec
inc
fcmovb
movsb
cwtl
insl
popa
icebp
ss
arpl
xor
sub
xor
mov
call
push
insb
scas
pusha
xchg
inc
mov
xchg
xchg
fidivs
jne
std
or
scas
add
orl
mov
notb
push
in
adc
addl
mov
lock
mov
insb
loopne
cmpsb
icebp
adcl
shr
es
add
loopew
movsl
cmp
xor
inc
mov
add
mov
je
adcb
push
dec
pop
mov
test
out
mov
xchg
push
iret
push
gs
scas
lds
lcall
push
push
or
test
mov
jle
or
inc
jbe
stos
sbb
and
sub
fdiv
mov
sar
dec
dec
scas
xor
arpl
cltd
stos
imul
push
add
sub
xchg
fnstcw
loope
xor
xor
dec
mov
jmp
push
std
sti
xorl
push
jbe
mov
and
xchg
loope
pop
je
mov
adc
and
push
jb
je
mov
xlat
cs
sub
adcl
mov
mov
mov
cltd
in
sub
push
xchg
sub
test
xchg
out
lcall
and
ret
push
cmpsl
jl
sbb
fsubs
fidivs
int3
insl
pop
mov
mov
cmpsb
mov
pop
test
xchg
fiaddl
aaa
and
lret
sbb
mov
data16
fisttpll
push
test
lods
jg
and
push
push
in
jns
repz
test
sbb
jo
call
xor
arpl
add
aad
xor
jle
add
lret
sub
and
jo
shrl
scas
inc
sub
add
inc
cld
cli
fildll
and
in
fdivr
or
das
push
jno
push
dec
bound
xchg
mov
shll
in
lods
ljmp
mov
fdiv
movl
imul
xchg
jg
lret
test
scas
dec
int3
lret
mov
mov
dec
mov
shlb
inc
dec
dec
hlt
mov
test
xor
lock
std
push
jnp
adc
test
adc
add
xchg
sbb
scas
lea
add
aaa
in
sbb
pop
sti
cmp
or
repnz
push
mov
mov
mov
jg
cmpsl
dec
jnp
jle
or
inc
loope
fists
fs
movsl
push
in
and
fdivr
dec
outsb
jle
stos
dec
pop
in
addr16
je
sbb
cmp
push
jae
repnz
and
out
xchg
fildl
outsl
in
aaa
leave
mov
sub
arpl
test
repz
mov
push
or
jge
test
dec
lahf
push
out
inc
leave
sbb
insb
ret
out
push
int3
aas
xor
sbb
add
cmc
insb
lsl
xchg
push
mov
sub
lods
jg
mov
pushf
out
test
xchg
sub
fidivs
sbb
jno
mov
test
or
adc
outsb
js
cld
movsl
lret
std
xchg
std
jnp
lcall
arpl
popa
adc
sbb
xor
aam
cmp
mov
dec
bound
imull
xlat
xor
sbb
xchg
lret
shr
jge
jo
push
mov
push
xchg
repnz
mov
sub
push
repnz
sbb
xor
stc
push
mov
xchg
mov
outsb
clc
inc
sub
mov
in
mov
mov
loope
push
lret
cli
call
adc
xchg
push
xor
dec
test
in
push
call
mov
mov
les
sub
add
sub
aad
cmc
stos
jmp
in
dec
popf
lret
lea
movsl
nop
push
mov
cmp
je
imul
int3
stos
ret
hlt
fnstsw
push
sub
pop
xor
ljmp
xor
push
sub
xor
outsb
int
mov
in
cmp
and
out
dec
les
cmp
pusha
pop
add
lret
aam
je
sub
outsb
int3
mov
mov
shrl
xor
xchg
pop
inc
inc
data16
jg
mov
out
push
roll
sbb
adc
push
mov
out
mov
nop
adc
xchg
pop
fdiv
add
xor
fistpl
pop
sbb
xchg
add
inc
sub
sub
les
cmc
stc
mov
fcmovnb
sub
sub
std
add
jl
lods
cmpsl
jns
pop
into
lcall
mov
mov
inc
inc
insl
mov
and
mov
std
pop
ret
sbb
jge
xchg
pop
jnp
mov
mov
cmp
push
outsl
xchg
jno
mov
xor
jbe
addr16
loope
sub
imul
shl
pop
adc
test
hlt
inc
cltd
pop
cwtl
add
mov
loop
adc
adc
and
gs
test
add
mov
inc
std
loopne
push
ds
jecxz
mov
and
roll
sahf
ljmp
scas
sti
ret
cmp
sbb
dec
sbbl
pop
dec
mov
xor
popa
push
cld
scas
mov
xor
pop
fwait
jb
or
lods
push
into
adc
add
out
xchg
cmc
and
incl
push
in
cwtl
xchg
test
ret
inc
cmpb
push
cwtl
dec
dec
fdivrl
xor
out
imul
sub
mov
cmc
mov
xlat
cmpsl
xchg
es
adc
sbbb
mov
cld
push
xchg
pusha
cld
cmp
insl
dec
rclb
push
repnz
push
pop
inc
pop
mov
cltd
std
push
xchg
sub
inc
or
aas
mov
pop
sbb
fwait
mov
subl
aam
pop
mov
xchg
in
sahf
pushf
pop
push
cmpb
popf
iret
or
push
cmp
add
xchg
xor
rcrb
lcall
sub
je
inc
lahf
imull
and
data16
insl
push
pop
aam
lea
push
pusha
mov
lods
add
insb
test
lds
divb
inc
cld
outsl
sbb
xor
popa
arpl
cli
repz
rcll
pushw
das
stos
cmp
xor
pusha
cltd
aam
jmp
shrl
mov
add
ret
je
in
sbb
lods
mov
mov
roll
xchg
sub
lock
pop
inc
testl
jbe
in
mov
jo
add
les
jle
out
push
push
insb
icebp
mov
negb
daa
xor
aam
xor
lcall
inc
lret
adc
xorl
jecxz
repz
mov
fmuls
into
fidivrl
push
mov
into
das
dec
mov
scas
mov
imul
ljmp
mov
add
nop
mov
push
and
xchg
out
xchg
sbb
gs
cmp
std
xchg
lcall
cld
sub
loope
mov
mov
pop
mov
test
loop
xor
gs
push
in
push
lods
mov
sub
dec
sbb
xor
mov
sbbb
stos
repz
stos
ret
push
push
insb
xlat
push
repnz
or
es
fbstp
and
insb
subb
dec
mov
dec
dec
pushf
outsl
int
ret
and
hlt
imul
mov
pop
or
jo
xor
movsb
sbb
rcrl
and
mov
push
fstpt
cld
inc
lahf
test
test
leave
out
push
xchg
adc
xchg
pusha
cmp
xchg
jmp
push
cltd
dec
es
jns
or
push
pop
repnz
push
gs
mov
sub
pop
mov
cmc
scas
cwtl
insb
pop
ds
rcll
adc
add
mov
sub
sbb
fcompl
test
xchg
gs
daa
xor
cs
mov
popa
out
mov
sbb
or
sub
jl
jne
clc
iret
fistl
xchg
pop
xchg
cli
test
lods
movsl
sub
pop
int
cs
gs
push
mov
jo
xchg
pop
aad
in
pop
sub
loope
push
mov
enter
push
mov
jge
out
stc
pop
xor
adcl
dec
pushf
aad
or
dec
push
test
sub
pop
jmp
xor
sub
and
mulb
inc
jle
sarb
repnz
add
test
dec
outsb
ret
outsl
shlb
decb
addl
orb
ret
pop
stos
xchg
int3
into
loop
mulb
sub
jg
ret
jne
sub
rcl
push
loope
outsb
jo
xchg
push
aaa
add
jb
adc
pop
divb
js
imul
add
jecxz
sbb
int3
and
and
jp
aad
sbb
pusha
pusha
incb
inc
inc
dec
in
and
imul
enter
popf
and
fisttps
jmp
add
movsl
xor
out
dec
mov
test
popf
roll
push
int
fwait
loopne
out
lcall
lahf
mov
mov
aam
push
test
jge
push
pop
in
int3
and
inc
push
cmp
loop
sar
dec
and
sbb
les
add
pop
inc
popa
mov
xchg
and
push
sarb
popf
jg
imulb
push
xchg
clc
cmpsl
cmpb
mov
bound
mov
or
lods
inc
add
adc
sti
bound
int
jecxz
testl
mov
jmp
and
sub
test
or
int
pop
movsl
icebp
xlat
ds
cli
push
xchg
xlat
cmc
mov
jle
mov
fiadds
rsqrtps
adcl
imul
sub
shl
loop
daa
imul
mov
lcall
fnsave
mov
aam
push
imul
in
dec
imul
pop
push
fwait
movb
enter
repnz
jmp
jns
sbb
xor
lret
aam
sbb
cwtl
pop
pushf
clc
cmp
mov
iret
out
in
cmp
mov
rorl
pop
loop
adc
icebp
mov
in
and
mov
scas
cs
jbe
push
icebp
out
sarb
leave
add
xchg
fldenv
rorb
cmpl
shl
pop
cli
cmp
mov
out
push
push
in
mov
dec
mov
add
dec
xchg
faddl
xchg
testl
data16
xchg
jb
push
mov
and
in
dec
xlat
push
test
jle
add
out
sbb
sbb
lods
jg
hlt
mov
repnz
push
es
xor
cli
insb
lcall
out
push
or
push
arpl
scas
and
lods
inc
leave
in
adc
daa
inc
sahf
xchg
pop
cmp
sub
mov
jo
int
lds
pop
mov
inc
and
pop
dec
fisttpl
sahf
xor
pop
fistps
push
test
push
into
enter
dec
pop
mov
aad
xor
shrb
xchg
xchg
fcomps
push
push
jmp
jo
out
xchg
mov
mov
lret
push
xor
loopne
lods
aas
std
inc
dec
icebp
imul
cmp
pushf
and
xchg
mov
dec
mov
pop
xlat
push
jns
data16
pop
pop
nop
ljmp
bnd
add
addr16
adc
xchg
inc
insb
add
mov
jns
jg
sbb
jns
dec
stos
pop
push
and
and
sub
add
je
pop
xorl
fcomps
xchg
dec
and
dec
mov
push
jo
call
shr
dec
pop
mov
int
rcll
and
lods
dec
fs
divb
or
or
mov
add
jb
xchg
dec
mov
jo
jmp
or
jp
nop
pop
jle
clc
into
ja
iret
sbb
loope
or
adc
xchg
dec
ret
rcr
jno
in
and
pop
or
out
adcl
xchg
test
add
in
addl
inc
jmp
fs
stc
xchg
imul
gs
xchg
loop
sub
cli
dec
fsub
cmp
imul
xor
cmpsb
jb
sarl
and
add
loop
dec
cwtl
jne
imulb
sbb
pop
dec
add
clc
mov
jmp
ret
inc
outsb
add
cmp
lea
ret
insl
cmpsb
iret
mov
sub
cs
mov
push
sub
sbb
repnz
lds
cmp
jno
push
cs
mov
ljmp
mov
push
std
sbb
rorb
mov
repnz
lods
loopne
bound
out
add
or
sub
jge
pop
out
add
rcl
popa
test
rclb
rolb
scas
lcall
loop
mov
fwait
lcall
or
insb
push
stos
popf
call
int
mov
daa
in
xchg
mov
dec
dec
add
fwait
leave
int
pushf
cmpsl
jle
xchg
mov
add
mov
pushf
and
sbb
sub
push
xchg
or
sbb
mov
ja
push
daa
gs
and
sbb
jnp
aas
repnz
pop
xor
ja
add
jle
mov
data16
and
test
and
js
mov
sub
rol
dec
jecxz
xor
rol
fwait
sbb
xchg
and
sub
sbb
fidivrl
aaa
hlt
imul
jae
loopne
into
cmpl
or
imul
xor
ds
jge
icebp
scas
sub
sbb
cmp
mov
dec
xchg
leave
int3
mov
lret
inc
pop
push
call
push
sbb
shl
insl
inc
pop
xlat
mov
loope
mov
mov
add
xchg
orl
cmp
test
subb
ljmp
sti
fstpl
sub
dec
movsb
xchg
shrb
ds
mov
orb
fwait
sub
shrl
jae
sub
jle
adc
xor
bound
inc
dec
add
sbb
movsl
mov
pop
scas
ljmp
in
inc
sbb
cmp
dec
pop
dec
sub
xchg
call
xchg
dec
pop
xor
cmp
popa
adc
push
push
jo
loop
xor
mov
testl
push
dec
jns
sub
inc
rorl
dec
mov
lahf
fimull
shrb
int
pushf
jne
sbb
leave
sbb
ret
cmp
mov
repnz
add
lods
mov
mov
sbb
pop
stos
xchg
fistpll
mov
out
ja
dec
dec
jb
aam
dec
push
scas
out
leave
xchg
adc
mov
inc
popa
call
in
pushf
outsl
and
xor
inc
ret
cmp
call
inc
mov
cwtl
test
adcl
repnz
mov
das
cmp
add
lds
test
in
loopne
loopne
cmp
lahf
popa
mov
xchg
aaa
popf
jo
push
pop
sahf
lds
dec
sbb
sti
inc
add
aas
data16
pop
loope
call
imul
push
pop
mov
mov
lcall
xabort
inc
pop
sbb
sbb
push
sub
adc
fistpll
jae
dec
roll
mov
mov
ss
xchg
mov
mov
je
int3
push
lods
or
out
shrl
cwtl
repz
jp
pop
ror
add
sbb
add
cmp
push
call
adc
out
mov
push
pop
push
popa
push
fstl
int
clc
mov
stos
fdivs
sbb
mov
bound
mov
push
loop
xchg
jecxz
fmuls
sub
mov
loop
in
fs
pushf
adc
inc
inc
js
mov
mov
outsl
jnp
mov
sub
jno
pop
call
sbbl
xor
xchg
decl
pop
pushf
neg
popa
cmc
adc
ret
les
xor
fdivs
scas
and
cmp
cmpsb
test
mov
pop
push
mov
jb
shrl
mov
daa
outsl
push
lcall
loope
lods
dec
lods
push
mov
xchg
scas
lret
das
notb
orl
cwtl
cmp
lods
or
xchg
adc
sbb
scas
bound
fnstcw
lret
jecxz
push
mov
int3
inc
add
inc
mov
les
nop
sbb
lock
movsl
or
mov
sahf
out
fstl
imul
add
lret
push
mov
int
push
inc
fstl
repz
mov
lret
mov
popf
std
adc
sbb
sbb
mov
ds
xor
jo
jg,pt
add
lods
xlat
nop
sbb
bound
xchg
mov
jg
add
dec
test
add
test
in
sahf
xchg
pop
mov
aam
sbb
dec
sbb
hlt
push
cmp
test
mov
mov
mov
mov
xor
push
xlat
or
mov
mov
push
enter
pop
aas
arpl
lds
outsb
dec
or
or
outsl
fisubl
dec
cmp
mov
pushf
testl
rorb
aam
mov
xor
xchg
push
out
movsl
imul
adc
push
xor
jecxz
mov
rorb
int
push
leave
pushf
sti
jae
sbb
in
add
inc
mov
jb
xchg
sub
add
adc
mov
jae
mov
out
cmp
push
pop
push
imul
sbb
or
cmpsl
xor
jb
add
jns
std
pop
mov
pop
int
jae
leave
and
sub
and
out
sub
adc
call
in
in
loop,pt
clc
cld
in
int
pop
cmc
or
cli
test
shrb
cmp
sub
push
jp
push
imulb
daa
leave
push
in
out
dec
push
cmc
aam
jmp
dec
dec
push
ljmp
mov
cmp
stc
pop
mov
sub
jae
call
rclb
movhlps
or
mov
sub
push
dec
fisubl
subb
into
fwait
adc
sub
adc
test
sub
enter
lahf
push
add
inc
xchg
pop
cmp
dec
test
push
push
adcb
jb
xor
mov
andl
mov
pop
orl
pop
out
ja
enter
jge
scas
mov
addr16
sbb
mov
mov
gs
mov
ret
push
sub
jbe
push
inc
subl
push
aad
fildl
int3
outsl
mov
mov
das
gs
ja
xchg
insb
std
mov
outsb
ret
shrb
daa
test
outsb
daa
add
sbb
dec
fisttpll
mov
push
jecxz
std
xchg
sbb
loop
dec
dec
jnp
ret
adc
roll
fadds
pop
add
mov
cli
leave
jecxz
ret
enter
hlt
les
pop
sbbl
sahf
xchg
adc
mov
pop
inc
arpl
mov
lahf
pop
push
jo
xchg
push
cmp
scas
shll
mov
push
dec
dec
fcomi
daa
cmpsb
jbe
push
xlat
repz
icebp
xor
ret
mov
shlb
jmp
gs
add
bound
lds
jl
popa
adc
push
jbe
and
int3
sbb
repnz
rcrb
scas
shll
imul
xor
sbb
iret
sarl
cmc
fwait
lcall
lahf
mov
mov
mov
jb
mov
icebp
in
test
imul
addr16
scas
fiadds
or
jae
and
lds
jno
fwait
push
cmpsb
dec
push
sub
or
pop
addr16
test
stos
push
inc
sub
and
imul
stc
jae
sar
xor
sbb
adc
push
inc
sbb
cmp
lcall
mov
into
cmp
or
loop
dec
sbb
test
bound
mov
fstl
dec
and
mov
dec
mov
mov
filds
fcompl
fistps
ljmp
xor
xor
and
jle
adc
dec
sub
shr
cwtl
hlt
mov
int
scas
xchg
xor
jp
rcrl
dec
repnz
cmp
sub
fidivs
pop
mov
mov
cmpsb
sti
rclb
xor
cs
leave
mov
outsl
and
cli
inc
sbb
xor
dec
adc
xor
cltd
loopne
mov
lret
inc
xor
add
ret
lock
pop
ljmp
imul
pop
mov
enter
iret
ja
mov
popl
arpl
sbb
mov
jnp
sbb
test
std
data16
mov
pop
adc
sub
ljmp
lret
cmp
in
inc
jmp
pusha
leave
push
les
stos
xchg
outsl
out
lcall
hlt
je
fstpt
inc
push
push
inc
mov
sbb
mov
xor
and
xlat
pop
sti
dec
adc
enter
repnz
out
popa
das
xchg
aas
and
movsb
jnp
dec
call
fs
shll
daa
push
ljmp
jno
cmp
xlat
imul
dec
repnz
loop
push
mov
push
in
movsb
popa
lcall
sub
or
sub
lea
lods
inc
mov
push
pushf
pop
insb
mov
scas
sbb
adc
sub
mov
stos
es
jmp
sub
jo
lcall
das
dec
in
push
xchg
sub
push
lods
sbb
enter
xor
decb
test
insl
addr16
enter
lods
xor
sti
mov
shll
insl
or
or
in
stc
mov
aaa
xor
test
xor
push
push
or
mov
shrl
add
mov
movhps
repnz
or
add
push
sbb
shl
dec
loop
sbb
cmp
jecxz
out
jne
mov
inc
dec
notl
xor
mov
xchg
rcll
lock
mov
popf
pushf
popf
divb
test
or
leave
and
push
mov
xor
mov
inc
sahf
mov
shlb
and
movsb
inc
shr
adc
dec
dec
cld
adc
jb
jp
jbe
out
dec
in
scas
lods
fsubrl
mov
pop
xchg
jno
mov
fs
int
addl
addr16
lret
inc
mov
clc
dec
cltd
cmpsb
pusha
jns
inc
push
sbb
dec
push
mov
jmp
pop
jg
movsb
lea
mov
lods
andb
jl
push
or
adc
shlb
fwait
jb
jns
fs
mov
or
mov
pusha
cwtl
int
cwtl
shrb
pop
xchg
and
in
lret
lahf
sbb
mov
push
push
das
fmull
sub
sbb
pop
jle
sub
dec
jnp
jno
in
sub
push
jp
in
outsl
push
loope
push
and
xor
dec
adc
jecxz
fcmovnu
push
mov
inc
or
insb
sub
add
pop
xor
les
gs
jmp
xchg
pop
adc
movsl
mov
inc
lods
outsl
loopne
adc
fldl
sub
js
negl
adc
push
mov
mov
fsubrl
sbb
fdiv
mov
mov
cmp
pop
movsb
mov
roll
mov
mov
jnp
loopne
adc
loopne
leave
lret
mov
push
mov
adc
xchg
ljmp
fstl
rcl
xchg
push
lcall
mov
dec
mov
scas
xchg
pop
jecxz
rcl
or
cmp
dec
mov
push
cltd
sti
lret
adc
bound
sbb
mov
call
jno
out
adc
inc
jp
icebp
dec
mov
fadds
iret
mov
or
lods
dec
pop
add
dec
movsl
pushaw
cmp
and
sub
xor
dec
mov
mov
jo
sti
imul
pusha
jmp
mov
pop
jo
jbe
mov
ljmp
roll
xor
imul
xchg
mov
xchg
dec
xchg
adc
sahf
jge
jmp
int
sub
dec
dec
xchg
insb
mov
dec
jl
mov
pop
mov
adc
mov
mov
clc
push
xor
inc
jnp
aam
iret
dec
data16
mov
fs
leave
in
push
shlb
test
mov
test
sbb
in
movsb
cmp
lods
pushf
scas
push
or
pop
cmp
adc
scas
ja
mov
cmp
cmp
cli
pop
xsha1
cmpsb
mov
shll
sub
outsb
imul
lret
shrl
imul
arpl
mov
inc
std
sub
mov
cmp
sbb
mov
lock
xor
pop
cmpsl
cvttps2pi
mov
shl
jns
arpl
dec
jle
scas
lcall
mov
pop
insl
sbb
lahf
cmp
test
pop
outsl
jmp
and
movl
rcr
adc
pop
imul
add
fdivs
mov
mov
mov
dec
in
jnp
or
lock
std
sub
mov
push
xchg
mov
sbb
xor
lcall
push
aad
lods
addr16
pop
mov
cmp
sarl
xchg
jp
xor
push
mov
jo
in
push
aaa
dec
mov
adc
addr16
rcr
mov
popf
stc
ret
out
jo
imul
imul
mov
hlt
dec
fldenv
ljmp
jge
scas
mov
mov
lret
aas
mov
push
ret
rol
pushf
jp
insb
mov
fisttpl
ficompl
xchg
insl
idiv
int
xor
stc
lods
into
xchg
ret
cmove
add
add
orl
dec
mov
add
cmp
aam
jo
imul
mov
pop
insb
jno
cmp
cld
jo
cs
sub
mov
xor
push
fs
xchg
xor
inc
inc
stc
adc
jb
sbb
aaa
mov
push
int3
sbb
js
inc
mov
pop
call
mov
clc
xchg
push
adc
push
enter
push
pop
das
cmp
das
pusha
mov
ja
mov
adc
cmpsb
pop
xchg
mov
jns
xchg
or
icebp
enter
dec
jmp
nop
sub
mov
in
sbbb
adc
in
push
icebp
sbb
push
divb
cmp
inc
dec
sub
bound
xchg
andl
lahf
pusha
aaa
dec
out
jg
mov
stos
clc
sbb
int
ds
mov
neg
popa
or
shr
push
mov
sub
cmc
incl
add
lds
and
push
and
mov
jg
push
int
sbb
xor
xor
xlat
push
icebp
inc
pop
repnz
and
sbb
pop
jns
mov
mov
scas
mov
jne
pop
dec
shrl
gs
push
nop
pop
in
and
mov
mov
lods
insb
and
adc
sub
jg
addr16
xchg
add
adc
sbb
push
xorb
and
stos
push
mov
mov
pop
scas
fnsave
jg
pop
xor
inc
and
pop
addr16
xchg
xor
xor
and
jae
outsb
pop
push
jg
xor
aad
push
pop
shrb
cli
xchg
lahf
sbb
push
subb
in
add
cmp
dec
add
cmp
push
in
pushf
jmp
push
jmp
int3
cmp
mov
dec
xchg
pop
jge
rolb
sbb
icebp
jecxz
fs
ss
mov
cmp
push
mov
not
stos
bound
jge
sub
stc
cmp
xadd
call
lcall
ss
jb
dec
push
hlt
xchg
icebp
mov
loope
mov
ja
mov
pop
push
push
push
out
mov
push
imul
mov
pop
outsl
mov
xchg
jns
ficompl
mov
pop
or
fsubrp
mov
pop
iret
xchg
jmp
or
mov
clc
iret
nop
sysexit
loop
mov
jns
nop
xor
jle
push
dec
lahf
imulb
push
xor
aam
dec
add
pop
lock
insl
fcmovne
inc
inc
hlt
ja
sbb
push
in
push
add
scas
aaa
inc
out
test
inc
loope
sub
daa
sbb
adc
lret
mov
cmp
clc
das
movsl
ret
fst
nop
jae
rorb
test
mov
data16
dec
ret
push
stos
insl
daa
lea
lcall
dec
mov
or
adc
sub
xor
jle
lret
cli
sbb
adc
mov
mov
ljmp
and
cmpsl
scas
push
push
cmp
loopne
ret
filds
add
add
test
mov
jmp
mov
add
xlat
movsb
cmp
adc
mov
stos
in
nop
icebp
push
aad
adc
lret
outsl
add
aas
xchg
push
shrl
add
out
fs
adc
int
push
cmp
fdiv
mov
iret
mov
and
xor
fstpt
add
mov
push
jmp
dec
sbb
or
mov
mov
or
xchg
sub
mov
outsl
sbb
push
aaa
test
out
data16
xor
bound
sti
mov
lret
or
cmp
inc
ffree
in
add
movsl
dec
cmpsb
xchg
cs
repnz
imul
movsl
movsl
jle
add
repz
jno
fwait
into
scas
pop
outsb
aad
js
cmpsl
dec
mov
out
repnz
idivb
out
push
jo
dec
xchg
testl
pop
sbb
outsl
push
sub
scas
pop
mov
lret
psubw
into
adc
leave
mov
dec
jle
mov
mov
cmpsb
std
cmp
xor
outsb
mov
mov
xchg
xchg
enter
in
dec
mov
fldcw
outsl
push
xchg
jo
mov
nop
daa
out
inc
gs
cmpsb
ljmp
shll
ret
add
std
lods
xchg
and
mov
xor
mov
and
adc
pop
ret
call
xor
cld
or
or
or
mov
jne
sub
adc
loopne
mov
insl
jg
add
rclb
inc
stc
and
insb
pop
cltd
test
ror
outsl
jg
push
mov
lods
in
std
add
adcb
fimuls
in
sub
data16
loope
cli
xchg
pusha
push
jo
in
jg
mov
or
mov
rcrb
pop
add
jp
aad
xchg
inc
mov
jmp
mov
push
mulb
pop
int
loopne
ljmp
mov
adcb
test
sub
mov
dec
in
cmpl
cltd
xor
and
mov
or
mov
jge
jae
cs
lods
imul
cli
adc
push
cwtl
or
icebp
mov
mov
adc
mov
aad
sub
xchg
dec
dec
fdivrl
cltd
mov
loope
mov
push
popf
pavgb
jnp
subl
sti
gs
cmp
mov
cwtl
scas
shrb
test
fmull
in
jnp
jg
enter
cmc
jmp
cwtl
cld
xchg
xchg
push
lds
mov
pushf
and
cs
fbstp
pop
shrl
xor
xchg
cmp
push
bound
push
std
insb
sub
cmp
push
xchg
shrl
loopne
orb
and
or
aas
or
bswap
loope
push
mov
mov
fstl
daa
cmp
or
loope
inc
std
inc
inc
and
pushf
in
in
xchg
dec
or
subl
dec
pop
das
push
jge
jno
iret
pop
mov
cmp
lea
movsl
sbb
mov
add
xor
les
lahf
cmpsl
ret
in
sub
xchg
jmp
movsb
fbstp
cmp
jns
dec
rcll
jns
inc
mov
dec
mov
andl
xchg
mov
pop
jmp
sarb
sub
data16
xor
leave
sub
push
dec
xor
insl
int3
push
negb
fimuls
xchg
cltd
popa
int
aad
in
cwtl
int
dec
sbb
mov
inc
sub
int
adc
or
repnz
sub
shlb
or
and
xchg
dec
push
push
mov
xor
xor
fs
xor
clc
and
mov
ja
ss
adc
leave
outsb
out
sahf
and
cmc
mov
inc
fdiv
mov
out
mov
test
or
das
andb
pusha
add
cld
xchg
iret
ret
out
cmp
popa
and
jne
fsts
adc
push
outsl
rcll
les
and
xchg
sbbl
fldl
jge
bound
lret
adc
jg
push
mov
xchg
cmp
pushf
fcomps
sbb
mov
nop
adc
out
sbb
into
lahf
shr
ja
inc
nop
jno
movsb
cmp
pop
push
fwait
xlat
mov
dec
lock
outsl
stos
inc
inc
push
cld
mov
fidivrl
data16
sahf
mov
push
popf
push
test
fldt
push
insb
push
sub
add
xorl
dec
mov
xor
or
ret
xor
test
popa
cmp
lock
sbb
fs
incl
les
dec
fisubrs
dec
sbb
loop
lods
cmp
fadds
adc
scas
xor
adcl
sbb
dec
jno
mov
fmul
js
test
mov
push
xchg
mov
xor
bound
add
or
cmp
jns
aaa
nop
mov
xchg
add
xor
sbb
pop
sbb
inc
pusha
inc
sti
push
icebp
adc
scas
inc
in
jmp
mov
adc
xchg
mov
pop
mov
rolb
xor
mov
push
jle
push
xchg
jno
enter
xorl
pop
and
push
aas
sbb
fnstenv
mov
in
and
in
test
mov
movsb
adcl
add
ror
test
mov
add
orb
xor
out
jg
inc
int
addr16
push
shll
into
outsl
adc
inc
lods
clc
xlat
aam
imul
adc
or
inc
imul
push
pop
lahf
and
and
mov
shlb
popa
lock
mov
std
test
push
xor
inc
fcomps
aaa
adc
ss
cmp
push
xchg
dec
movsb
dec
sub
and
xchg
fidivl
mov
inc
jecxz
stc
jne
cmp
xchg
and
and
add
sbb
rorl
jns
xor
cmc
bndldx
add
mov
rcll
or
lds
sub
into
shlb
and
dec
aam
mov
fistps
xor
dec
in
pop
jp
test
imul
xor
xchg
mov
add
jne
fnstenv
insl
inc
cli
pop
inc
pop
call
pop
sub
out
jle
rol
leave
mov
jmp
pop
sbb
push
pop
movsl
cmp
xchg
sbb
mov
push
xchg
xchg
xor
call
cltd
mov
out
aam
mov
icebp
mov
jle
fwait
scas
xor
fs
and
gs
mov
lock
lods
loope
mov
xchg
cs
cmp
add
lret
out
jmp
mov
aaa
push
fwait
aas
shll
adcb
mov
pop
xlat
and
test
call
mov
je
xor
shll
and
pop
fwait
xor
xchg
out
xor
push
into
xchg
xchg
sub
ss
leave
or
adcb
mov
out
push
jbe
scas
or
mov
sbb
dec
pop
fnsave
fcompl
push
cmpsb
clc
pop
cmp
adc
jbe
nop
sub
gs
out
dec
rcr
ret
xor
jae
cmp
cwtl
out
mov
xor
and
pop
pop
inc
lcall
sbb
dec
pushf
bound
vandps
jo
push
add
mov
jl
sub
and
outsl
adc
mov
les
dec
test
jmp
xor
lahf
mov
xor
lret
fisubrs
rcrb
cs
imul
iret
daa
leave
xchg
add
out
adc
xchg
out
push
in
and
lahf
repz
pop
sahf
inc
sbb
movsl
aam
shl
jns
ss
and
push
jmp
insl
xlat
inc
pop
or
ljmp
dec
hlt
push
inc
adc
and
scas
jp
ret
sub
pop
stos
xchg
mov
rclb
mov
sbb
cmpsl
dec
lahf
pop
xchg
dec
bound
add
es
sbb
cwtl
lahf
sbb
popf
and
inc
lods
out
fs
and
cmp
fs
les
popa
pop
idivb
data16
jmp
add
les
pop
dec
loop
ret
xchg
pop
std
lock
fistpl
add
jg
push
scas
push
or
dec
stos
push
push
add
out
xor
inc
subl
lcall
sub
bound
cmp
fstpt
movsl
cmp
out
mov
mov
pushf
repz
iret
jge
push
scas
sbb
call
xor
mov
pop
sub
pop
repz
cmp
ficoml
or
pop
adc
sbb
mov
mov
jbe
mov
je
add
dec
lret
xchg
and
cwtl
mov
mov
les
jp
add
mov
lret
jb
xlat
pop
pop
mov
test
sbb
cmpsl
or
addb
and
xlat
cmpsl
mov
sub
sarl
in
jns
xchg
pop
inc
jle
jno
int
out
enter
pop
jo
iret
xor
clc
out
mov
or
int
sub
into
cmc
jb
lock
lods
xchg
insb
jmp
insb
loop
div
or
cmp
int3
mov
cmc
jae
mov
repz
movsb
xchg
in
pop
aaa
pop
sbb
leave
pusha
scas
sub
es
nop
insb
add
addr16
out
or
sti
cmp
cmp
mov
jns
aaa
pop
test
mov
pop
and
mov
repnz
clc
pop
repnz
jmp
jmp
popf
mov
ror
leave
inc
mov
ljmp
mov
cld
scas
push
mov
ficomps
inc
sbb
sbb
scas
cmp
fildll
enter
mov
xchg
push
inc
test
rcll
jne
stc
je
and
inc
push
ret
sub
outsl
mov
cmc
adc
ret
outsb
jbe
mov
inc
jmp
inc
clc
repz
out
cmpsl
out
inc
aad
ds
and
test
jg
and
fbstp
jnp
mov
pop
xlat
and
push
or
xchg
int3
add
pusha
or
mov
add
call
fdivl
mov
mov
bound
inc
clc
aas
stos
inc
insl
pop
adc
dec
mov
xor
insl
xchg
push
fwait
jge
out
bound
ljmp
test
bnd
mov
cld
imul
mov
clc
cmp
inc
pusha
mov
mov
add
mov
cltd
sub
and
dec
roll
and
adc
imul
pop
stos
ja
popa
jae
pop
movsl
adcb
jg
testl
mov
pop
cmp
lds
fisubrl
xchg
in
adc
repz
out
int3
je
cld
fwait
movsl
mov
movsl
cmp
add
pop
pop
sbb
pop
and
pop
push
cld
fsubl
dec
cmp
inc
dec
fwait
mov
mov
stos
sbb
ret
jg
cmp
stos
imul
in
jge
dec
push
adc
div
int3
xchg
inc
pop
mov
sbb
mov
jecxz
mov
cmp
push
push
call
leave
pusha
leave
add
inc
bound
js
decb
sub
iret
loopne
out
in
sbb
inc
and
xchg
push
in
adc
xor
in
xchg
cmp
sub
add
aad
xor
xlat
push
xor
add
lea
dec
enter
mov
or
or
cltd
dec
push
pop
push
mov
and
cmp
js
push
mov
out
lods
and
jns
testb
push
pop
out
pop
in
and
fadd
mov
jp
mov
in
out
mov
ja
hlt
ljmp
sahf
mov
dec
scas
adc
aam
fldt
xorl
mov
xor
loop
daa
imul
cmp
xchg
aam
jmp
scas
scas
cmp
scas
pushf
sbb
cmp
mov
gs
xchg
sarb
adc
out
mov
int
cli
aaa
pop
jl
inc
xchg
ss
mov
ret
outsb
into
cmp
mov
ja
jns
pop
dec
into
fcoml
loope
into
hlt
mov
adc
jbe
cmp
insb
dec
xchg
sbb
test
pop
jmp
scas
mov
jmp
jne
out
mov
mov
and
add
scas
inc
adc
push
inc
es
sbb
sub
out
xchg
sub
jbe
dec
pop
lock
adc
adc
es
jge
ss
int3
and
dec
mov
into
inc
popa
rcl
arpl
mov
scas
xor
xchg
cmp
dec
sahf
cmp
mov
cli
jp
cld
lods
in
es
aas
fildl
or
mov
dec
outsl
cli
cmp
ret
mov
jg
push
pop
pop
rcl
imul
std
cld
xchg
testb
or
lods
jmp
cs
cld
push
push
movsl
jno
push
push
push
push
aaa
xlat
or
lock
lods
cmpsb
push
orb
push
test
movsl
xor
out
xor
and
aad
imul
out
repz
sub
ja
imulb
xor
sbbl
lea
dec
negb
stos
insl
add
lcall
push
movsl
loop
mov
repz
adc
sub
ret
jno,pt
in
fsubrs
cmp
jl
inc
imul
sbb
iret
addr16
ror
jno
cmp
lock
dec
stc
icebp
adc
imul
jns
mov
ret
xchg
sbb
push
clc
and
adcb
cltd
inc
jae
lock
in
jg
dec
pop
dec
lea
xor
addr16
clc
stos
or
dec
lea
pusha
or
mov
rcrb
jge
add
js
mov
add
lods
push
mov
out
push
or
sarl
xchg
sub
fisubl
dec
adc
and
mov
add
sub
cmp
pop
cmp
or
dec
fbstp
shll
mov
ret
test
sbb
cmpsl
mov
lds
mov
pop
fidivrl
mov
stc
pop
aad
mov
xorl
in
mov
aaa
jae
adc
fidivrl
and
popa
clc
fsub
es
pop
xchg
mov
stc
jecxz
sbb
lea
cmp
push
mov
cmpsb
les
push
xchg
pop
mov
add
fstpl
mov
jecxz
jae
add
jno
adc
cmp
imul
bound
add
inc
loope
jno
sahf
xor
insl
jmp
je
mov
cmpsl
js
xchg
outsb
jl
shrd
loopne
loop
daa
std
cmp
idivb
mov
mov
xor
xchg
mov
int3
push
inc
push
mov
push
xor
subl
push
inc
add
es
xchg
mov
jns
mov
shlb
daa
or
in
or
lds
or
mov
loop
outsb
lret
and
xor
and
shrb
cltd
lock
idivl
out
xor
cmc
or
adc
push
and
jb
mov
in
std
jo
stos
mov
sub
xorl
les
and
pop
jge
outsl
sahf
pop
movsb
mov
icebp
inc
mov
mov
sub
and
mov
xchg
adc
ds
push
push
sbb
jecxz
mov
fstps
ret
dec
push
sti
or
stos
jb
mov
int3
xchg
outsb
jae
sub
mov
add
jo
mov
aas
mov
jae
mov
pushf
popa
pop
lods
rcrl
jno
add
loope
std
in
add
out
mov
pop
ja
fisubrl
ljmp
call
ficoms
jge
mov
mov
inc
sub
push
or
and
test
insl
add
ljmp
push
rcrl
mov
mov
arpl
pop
call
dec
adc
mov
xchg
inc
data16
push
fucomp
aaa
repnz
repz
frstor
hlt
jbe
xchg
sbb
test
pop
cmp
insb
divl
lcall
cmpsl
fists
imull
add
add
or
xchg
inc
cmp
mov
inc
dec
pop
js
xlat
add
lea
push
jmp
xor
pop
cmpsb
xlat
ja
shll
rcrl
add
sub
test
sbb
inc
popa
jg
into
mov
popf
push
test
ja
aas
sub
adc
lcall
and
dec
gs
je
mov
lods
mov
jbe
sbb
stos
inc
arpl
and
stos
jnp
sub
movsb
test
mov
cmp
sub
shlb
les
mov
loopne
mov
cmp
out
sbb
pop
jle
insl
add
jnp
fwait
das
mov
lods
mov
jbe
movl
into
push
or
push
push
sub
inc
push
jge
outsb
sub
stos
mov
mov
sarl
xchg
aaa
and
scas
mov
xchg
movsb
xchg
mov
int3
mov
pop
rcrb
fwait
push
sahf
dec
push
inc
jmp
data16
mov
jno
xor
and
mov
out
fwait
push
loop
sarl
push
jbe
jne
add
scas
lods
mov
and
ret
sub
cs
xor
hlt
jae
pop
nop
daa
repz
add
xor
bound
stos
push
mov
mov
invd
scas
mov
rorl
inc
adc
mov
loop
jle
cmc
dec
cld
push
ret
mov
stc
repz
daa
in
pop
cmp
and
mov
push
unpckhps
cmp
fbstp
pop
icebp
dec
dec
push
cld
push
movsb
ret
jnp
shll
sub
push
arpl
add
add
leave
xchg
cmp
xchg
dec
data16
test
cmp
mov
inc
out
mov
cs
lods
xchg
adc
popf
cmpsb
pop
mov
mov
and
enter
cmpsl
cld
xor
testl
cmc
mov
jge
movzbl
and
inc
cld
jno
mov
mov
gs
fwait
int3
xor
fs
push
or
inc
xchg
gs
cmp
hlt
xchg
ret
add
push
outsb
xchg
fbstp
ljmp
push
iret
clc
sub
into
mov
sbb
or
in
lock
mov
int
aas
xchg
dec
dec
enter
int
js
pop
or
sub
loope
xor
mov
iret
lret
pusha
or
jge
daa
bound
dec
pop
cld
loopne
jp
add
xchg
imul
xor
pop
dec
sbbb
fwait
jb
mov
stc
nop
test
inc
and
lods
or
xor
cmp
icebp
mov
inc
or
pop
icebp
fisubrs
mov
scas
mov
xor
stc
pop
lods
js
push
aas
ret
out
sti
ja
push
mov
xchg
dec
icebp
aaa
xlat
aas
adc
push
jge
push
scas
xor
lret
popf
xor
icebp
test
push
jb
lock
push
test
leave
jecxz
inc
push
cwtl
jp
movsb
mov
or
add
lds
in
in
cmpsb
arpl
in
jmp
rol
jmp
movsl
icebp
sbbl
lcall
mov
andl
or
and
push
outsl
add
add
push
in
mov
gs
or
lret
orb
push
in
jl
je
lock
nop
stos
sub
notl
cmc
jns
and
push
insl
xlat
rcll
sub
push
mov
adc
ss
cs
out
mov
into
push
mov
mov
addr16
test
divl
std
cmp
mov
insb
and
cld
mov
adc
inc
mov
cmc
cli
shll
aad
fisttpll
and
lds
pop
dec
arpl
jp
imul
decb
addr16
cmp
loope
test
cmpsb
push
ja
in
jp
pop
loope
inc
push
ret
cmpsl
adc
fsubr
add
add
mov
iret
mov
fiadds
xchg
sbb
push
ss
addr16
jg
lods
fcoml
mov
int3
pusha
push
stos
ss
and
icebp
and
or
mov
pop
xchg
js
sbbl
mov
sbb
and
mov
bound
push
lods
and
jge
fisubrs
jl
les
xchg
pop
lea
lods
jmp
add
iret
xor
lret
inc
leave
add
pop
mov
xchg
jg
fsubr
push
jle
push
pop
xor
fsubl
insl
cld
xchg
lahf
inc
push
push
in
mov
mov
gs
testl
add
sub
or
add
xlat
push
inc
ret
imull
int
rolb
push
push
inc
mov
xor
pusha
inc
dec
cmpsl
stos
mov
mov
scas
push
inc
pop
mov
aas
imul
mov
mov
ss
mov
or
data16
xchg
jle
sbb
or
je
lods
xchg
sbb
call
mov
out
into
mov
cltd
push
inc
jmp
lods
push
and
xor
adc
fidivs
push
sbb
outsl
leave
lret
push
lock
jno
mov
addr16
sbb
or
movsb
cmpsl
or
aas
in
pop
push
dec
leave
and
push
sahf
jb
mov
test
jb
mov
mov
or
sbb
loope
dec
and
imul
notl
mov
pusha
mov
and
mov
rclb
cmpsb
into
loop
subl
jg
mov
dec
arpl
jns
sub
out
sbb
in
add
mov
push
popa
fdivrs
es
cmp
pusha
xorb
shrl
sti
loop
ret
sarl
mov
lahf
pop
xor
jo
iret
inc
jae
xchg
inc
popa
push
mov
push
adc
out
mov
push
ss
cwtl
cli
xchg
stc
mov
sbb
jg
bound
mov
sbb
mov
iret
in
add
fxch
lret
loopne
or
cmp
gs
mov
mov
cvtdq2ps
mov
pushf
inc
fcmovne
fs
pop
lock
lock
mov
mov
inc
xchg
lcall
or
fidivs
loope
lcall
adc
cmpsb
push
dec
shlb
test
icebp
cs
negb
xor
fbstp
fiaddl
cld
fldcw
cmpsl
shr
jl
mov
cli
dec
push
pop
cwtl
cmpsl
xchg
mov
insl
stc
data16
and
popf
mov
push
fcompl
jb
test
xor
popf
shrb
ja
cwtl
mov
fldt
pop
cmp
sub
pop
loopne
addb
sub
aaa
shr
sbb
daa
mov
das
and
cmp
add
sarl
mov
push
and
cmpsb
cmpsb
xlat
xchg
adc
and
bound
cmp
push
inc
sbb
neg
aam
add
xor
mov
addb
inc
sti
popa
jne
mov
inc
jne
mov
sbb
ror
jle
into
enter
or
cmc
iret
sbb
js
inc
jge
jbe
push
fisttps
mov
dec
mov
cmp
outsb
pop
dec
and
cmp
popa
inc
push
jb
pop
and
in
ja
sub
mov
jp
es
sbb
push
sub
mov
movsb
xlat
mov
fisttpll
outsb
jbe
or
int3
leave
ss
outsb
xchg
push
pushf
dec
lret
mov
dec
repnz
xor
push
push
inc
rcr
cmp
inc
push
lret
fnsave
repz
cmpsb
iret
fnstsw
rorb
xchg
insl
or
cmc
test
pop
mov
dec
inc
push
xor
jmp
and
out
xchg
ds
leave
adc
imul
test
sub
lcall
xor
lret
mov
push
ljmp
aad
mov
mov
cwtl
sub
mov
push
mov
cmc
sti
fbstp
dec
filds
test
sub
stos
mov
inc
jno
sahf
adc
and
push
xor
mov
lds
daa
fs
cmp
iret
mov
dec
cld
les
ret
pop
mov
fsubp
js
mov
adc
movsl
loop
sub
mov
vaddps
push
test
outsb
sbb
cmc
das
xchg
loope
adc
movsb
cld
or
pop
sbb
or
mov
mov
xchg
xchg
addr16
jne
jns
shlb
jno
les
mov
data16
push
or
test
and
dec
imul
pop
in
xchg
sbb
inc
popa
clc
dec
push
jp
pminsw
and
xor
movsl
popf
ds
push
dec
mov
inc
cld
fs
rcl
pop
cltd
inc
add
xlat
cmp
repz
xchg
mov
adc
inc
pop
test
ds
movsb
in
cmc
mov
mov
mov
mov
push
adc
dec
std
xor
sti
hlt
fsubs
sub
dec
and
mov
mov
ljmp
cs
xchg
sahf
jns
rsm
cmp
add
hlt
sbb
add
mov
dec
pop
cltd
call
dec
dec
leave
icebp
nop
pop
inc
dec
push
jne
inc
push
add
pop
sub
add
lods
lret
jbe
test
and
xchg
xor
jns
xor
jle
add
outsl
cmc
test
leave
vcvtss2sd
mov
rcrb
inc
sub
mov
jecxz
mov
xchg
scas
dec
ss
loope
pop
lret
pusha
movsl
mov
jnp
jnp
pop
inc
test
mov
std
ret
insl
fiadds
sub
test
stc
in
stos
sub
shrl
out
je
loope
loop
jp
and
fwait
inc
stos
incl
mov
adc
cmpsl
ret
in
xor
lea
shrl
cmc
push
loopne
push
js
ret
pop
int3
fcmovnu
push
and
and
jno
call
fnsave
cmp
in
sar
mov
ficompl
scas
adc
aaa
lds
nop
lea
shll
ljmp
add
jl
scas
cli
xchg
xchg
shrb
into
and
push
shrl
dec
sbb
insl
cmp
loopne
stc
or
dec
js
jp
rorb
xchg
jns
cmc
idivb
aaa
mov
dec
xchg
out
adc
inc
adcl
popl
xor
cltd
test
mov
cmpsb
inc
lds
ret
jno
lods
mov
test
call
dec
cld
fistpll
insl
mov
popf
jne
mov
icebp
push
pop
dec
out
daa
cmp
mov
gs
xchg
mov
jbe
jne
in
push
xor
adc
je
cmp
repnz
adc
xor
xchg
pop
mov
adc
xchg
mov
popa
inc
sahf
xor
gs
jge
xchg
aam
jge
lods
xor
fdivs
jnp
dec
and
fs
xor
jns
in
pop
mov
leave
test
repnz
stos
aam
les
rcr
jne
inc
bnd
mov
lahf
icebp
enter
push
xor
ljmp
outsb
xchg
ficoml
je
sbb
pop
gs
shrb
fistpll
jmp
mov
and
out
cld
add
rcrb
adc
bnd
cmp
push
je
jl
fmul
mov
dec
pop
dec
pop
pop
scas
insl
pop
mov
mov
fdivr
xchg
mov
add
adc
lods
mov
mov
add
dec
fistpl
or
mov
fcoms
cltd
vandnps
cli
mov
mov
ret
or
cld
orl
repnz
cmp
xor
cmc
ss
mov
jmp
sbb
lods
scas
adc
into
jne
je
mov
pop
ja
jmp
cmpsl
fcmovbe
push
mov
shr
cmp
pop
mov
mov
cmpsw
pop
pop
xchg
mov
imul
out
cmc
sahf
movsl
mov
dec
dec
add
xor
pop
mov
mov
xorl
mov
fisubl
mov
dec
sti
pop
dec
push
inc
mov
in
add
dec
mov
xchg
sbb
and
addr16
cmpsb
xor
test
in
lret
lret
mov
call
repz
dec
pop
cmc
addb
and
fcomi
sti
std
xchg
xchg
pop
sub
jg
jecxz
xor
xchg
sub
pop
lcall
dec
and
test
stc
nop
mov
xchg
mov
jle
sti
dec
mov
bound
aas
daa
arpl
cli
dec
sti
mov
movsl
js
sti
jp
es
ja
inc
int
jne
cmp
je
ljmp
imul
stos
inc
sub
inc
inc
sahf
sub
data16
cwtl
cmpsb
jl
sub
idivl
mov
scas
cli
in
fs
mov
adc
push
sbb
xor
push
mov
mov
jmp
bswap
xchg
andl
add
jp
pushf
dec
pop
fcoml
pop
aad
popa
jbe
mov
pushf
repz
subb
insl
stc
mov
add
dec
push
inc
popa
mov
or
aam
ljmp
mov
aam
shll
arpl
mov
rol
mov
dec
jnp
add
push
imul
sti
in
sti
pop
lret
pop
add
push
pop
outsb
test
shl
popf
jb
xchg
mov
enter
mov
outsl
addl
sti
xchg
lcall
or
aas
ja
ljmp
pushf
icebp
fistpl
pop
dec
fstl
cmpsl
mov
mov
jecxz
push
pop
insl
cmp
mov
jl
sbb
jne
mov
test
push
fmul
pop
or
rolb
cwtl
add
xlat
inc
scas
dec
icebp
xorl
test
arpl
or
cwtl
xor
pushf
push
lea
jp
or
stc
push
repz
pop
cmc
mov
imul
and
iret
addb
jnp
push
adc
in
cli
cmc
getsec
xor
xor
fcoml
mov
fdivrl
dec
jge
int
inc
fidivrl
mov
xor
ljmp
xor
jns
fisttpl
outsl
outsl
jge
lahf
lods
test
inc
cmpsb
loop
fcompl
and
pop
xchg
mov
push
or
mov
sub
adc
ret
sub
jl
mov
and
daa
mov
xor
jmp
add
outsl
cmpsb
call
testb
and
in
push
mov
mov
sub
mov
cltd
das
test
mov
lods
mov
pop
bound
fmulp
addb
scas
div
fidivl
xorb
in
lds
scas
push
lds
ja
lret
ja
hlt
sarb
jnp
es
cmpsb
cmp
pop
insl
leave
xor
aaa
into
repnz
pop
mov
xlat
int3
int3
lea
jmp
or
daa
pop
sub
leave
or
mov
insl
xchg
mov
shlb
pop
shrl
mov
sub
sub
sti
pusha
fwait
aaa
roll
inc
mov
mov
pop
into
xchg
insl
xor
jecxz
andl
iret
popf
stos
mov
and
xchg
lahf
shlb
inc
lret
jae
jmp
jnp
pop
leave
mov
or
adc
repnz
psllq
sbb
adc
es
push
in
fsubl
icebp
fdivrl
pop
add
pop
pop
push
xchg
jle
xor
test
repz
nop
mov
inc
and
data16
sbb
jg
lock
and
mov
xor
sahf
std
js
inc
insl
xchg
jg
or
in
sbb
push
gs
std
loope
ltr
repz
clc
mov
and
sbb
xor
fistpll
jno
loope
add
sahf
sub
bound
mov
and
push
sub
push
out
push
or
xchg
test
xor
inc
fcmovu
mov
data16
xor
inc
mov
fldt
mov
fnstenv
jg
movsl
and
pusha
pop
xchg
xor
lret
cmp
or
imul
lds
xchg
hlt
xor
xchg
insl
stos
adc
adc
cmp
popa
outsb
push
gs
cmp
call
sub
jae
fisttpll
dec
jl
mov
dec
cmpsb
xor
adc
das
jo
mov
ljmp
dec
cli
mov
fnstcw
dec
jg
push
cmc
jo
scas
inc
push
out
mov
pop
leave
xchg
inc
push
cmp
call
mov
fistl
mov
jb
int3
popf
pop
mov
aad
xor
xchg
mov
sbbl
dec
out
enter
cltd
add
or
xor
bnd
mov
popf
imul
jno
cmc
sub
es
dec
sub
inc
adc
ldmxcsr
cmp
int3
insl
and
loop
fdivrp
and
imul
jb
jecxz
fisttpll
push
and
push
int3
inc
push
adc
and
add
dec
mov
scas
cmp
test
pop
aaa
cmp
aas
mov
fmuls
or
push
sub
xchg
sbb
mov
jp
pushf
inc
neg
and
dec
daa
mov
into
mov
imul
lods
imul
je
add
dec
push
mov
push
adc
mov
add
jecxz
mov
pop
leave
xor
dec
mov
pusha
inc
pop
adc
shlb
loop
dec
pop
cltd
add
daa
sbb
inc
mov
cmp
sub
sub
in
lods
jecxz
push
sub
pop
je
call
fnstsw
push
stos
cli
fbstp
or
cwtl
adc
es
sub
mov
mov
insl
adc
lahf
cmp
jge
inc
fst
pop
inc
shlb
adc
pop
aaa
mov
rorl
mov
in
cmp
mov
cmp
loope
push
data16
fdivp
lods
mov
inc
push
mov
jge,pn
xchg
xchg
dec
mov
cmp
pushf
xor
pop
jo
dec
pop
jmp
xchg
mov
xchg
mov
imul
or
mov
lcall
xchg
std
adc
dec
fs
jle
jmp
shll
adc
ds
fdiv
stos
fisubrs
push
push
outsl
testb
sub
xchg
fldl
mov
cmp
int
fucomi
fbstp
inc
push
or
loopne
add
popf
xchg
nop
out
or
bound
pop
mov
pop
or
pop
sbb
jmp
jo
xor
popa
jmp
add
sti
stc
outsb
sti
push
xor
std
pushf
into
mov
scas
mov
out
test
cmp
mov
or
xchg
dec
das
xchg
rolb
rdmsr
push
dec
fnstsw
inc
push
int
xchg
rclb
mov
sub
xchg
out
in
dec
jg
arpl
push
cmc
and
dec
divl
sub
push
rclb
sub
aas
sbb
jle
mov
xchg
rorl
sbbl
mov
iret
push
stos
jne
inc
loop
adcb
outsl
xlat
mov
add
sti
push
adc
pop
pop
xchg
xchg
testb
cmp
jnp
jecxz
adc
mov
fwait
push
fiadds
pop
jne
dec
shrl
fdivl
and
add
inc
out
bound
dec
cmp
popa
int
iret
mov
sub
mov
ljmp
inc
in
ss
xchg
mov
rorb
mov
ret
jbe
pop
sub
xor
fsin
cmp
sub
mov
xchg
bound
pusha
shrl
push
mov
lock
add
adc
jnp
inc
jno
fcoms
push
add
les
cmpsb
aad
dec
aad
sbb
pop
and
sbb
pop
sti
mov
icebp
xchg
sub
int
dec
sbb
adc
mov
jne
lahf
xchg
popaw
add
es
push
xchg
dec
bound
out
shrl
fdivs
aam
aam
add
xchg
sahf
hlt
push
mov
in
or
push
add
inc
lcall
inc
fs
xchg
cmp
sub
orb
int3
arpl
sarl
push
mov
dec
in
xchg
inc
xlat
fsts
in
sbb
imul
popf
test
in
cmp
xchg
dec
mov
pop
xchg
jmp
jecxz
scas
out
ret
jle
jns
insb
lock
std
xchg
lock
daa
sbbb
cs
xchg
dec
jb
pop
cmpsb
cmp
hlt
push
aam
insl
das
pop
dec
ja
pop
pop
sub
lock
lods
adc
mov
xor
add
push
ss
mov
jno
pop
sti
pop
mov
or
test
es
add
mov
pusha
mov
push
js
push
aaa
inc
imul
xchg
sti
push
mov
xchg
stc
enter
add
or
fstp
mov
js
mov
jnp
pop
int
out
add
aad
and
sbb
inc
jmp
sub
or
adc
inc
jnp
test
push
add
push
fdivl
pop
hlt
hlt
and
repnz
cld
xor
pop
mov
add
and
mov
data16
mov
add
daa
inc
mov
or
test
and
jle
cwtl
xor
add
gs
xchg
movsb
bound
mov
and
mov
sbb
popa
rorl
dec
dec
cmovg
mov
ficoms
je
mov
jp
jmp
xor
data16
ljmp
movsb
lods
cmp
faddp
loopne
js
or
movsl
cltd
mov
dec
xchg
xchg
adc
andb
stos
ret
mov
fbld
push
adc
ret
push
enter
mov
pop
out
jae
inc
int
hlt
adc
out
enter
push
insb
movsb
imul
lcall
fwait
sti
aam
cmpsl
int3
xor
insl
insl
push
loopne
into
jg
mov
out
adcl
jle
jno
mov
fdivp
xchg
hlt
lods
andl
ljmp
fs
dec
push
push
or
jns
mov
xorb
mov
dec
and
push
imul
cwtl
sbb
pusha
jle
cmp
inc
pop
sbb
gs
in
jge
mov
cwtl
sahf
into
fcmove
mov
jecxz
fmull
mov
in
js
rcrb
cmpsb
ds
icebp
xor
in
aad
cmp
dec
popa
lahf
jmp
push
repz
sarb
mov
mov
or
cld
mov
push
in
cmp
xchg
rsm
outsb
inc
mov
out
dec
icebp
idiv
sbb
cmp
and
push
ret
inc
data16
pusha
popf
xor
jl
ja
in
push
pop
inc
sbb
mov
mov
xchg
push
jmp
mov
xchg
sbb
xchg
js
sahf
adc
insl
pop
fdivl
lea
ds
mov
pop
xchg
pop
jne
orb
lcall
pusha
imul
ret
clc
mov
mov
push
mov
xor
loope
inc
adc
mov
pop
icebp
mov
sub
xchg
and
or
subb
push
add
movsb
ficoml
adcl
add
stc
andb
andl
dec
enter
push
cmp
arpl
xchg
pop
fsubr
push
and
fildll
addr16
adc
jne
push
ljmp
jno
and
loopne
sub
jnp
push
xchg
add
sti
add
lcall
cmc
jbe
cmpsl
pop
xchg
mov
sub
dec
dec
negl
or
out
jns
sarb
mov
add
nop
lcall
cmp
repnz
add
adc
pop
pop
repnz
icebp
mov
ljmp
xor
cmp
imul
jle
mov
scas
mov
or
stos
ja
push
lods
sarb
loop
das
insl
push
mov
add
mov
insb
mov
mov
or
sbb
pop
sub
pop
cmp
nop
lods
pop
and
push
cmpsl
arpl
sbb
or
mov
mov
mov
popa
lcall
inc
mov
adc
push
loop
jno
loopne
xor
cli
lea
adc
es
pop
repnz
dec
sbb
mov
lock
cmp
sub
enter
addr16
xchg
add
nop
int3
vpmaddwd
lods
pop
xlat
ds
ljmp
stos
mov
bound
ret
int
cmc
mov
outsb
repz
mov
pop
xchg
fstpl
jecxz
ljmp
jae
inc
repnz
enter
fsts
adc
and
out
test
repnz
xchg
mov
decl
lahf
cmpb
andl
sbb
cmpsl
std
and
das
sub
shrb
mov
leave
jmp
push
sahf
push
fistl
lods
pmaxsw
scas
pop
dec
ja
in
out
inc
ret
negl
pushf
xor
aas
js
lcall
push
jl
mov
sbb
incl
mov
sbb
shl
outsl
xor
shl
inc
mov
cmpsl
mov
popa
sbb
push
jno
lods
arpl
push
fstpt
sub
loopne
lods
push
data16
jno
pop
out
out
lret
push
mov
int3
jnp
dec
and
xchg
mov
or
jbe
fistpll
fdivrl
lea
mov
push
loop
push
adc
xchg
mov
lret
mov
sub
adc
pop
sbb
cmc
out
popf
push
scas
jno
push
loop
sbb
jg
out
sbb
pop
fisubrl
ficomps
cwtl
sub
xlat
or
sub
cmp
jp
nop
and
mov
adc
sbb
mov
std
or
sub
in
hlt
inc
movsl
mov
sub
out
and
sbb
mov
add
mov
jmp
movsb
sahf
aaa
pop
xchg
out
mov
fnsave
sbb
xor
and
dec
pop
lods
addb
mov
test
xchg
enter
scas
sub
lods
inc
icebp
leave
xchg
sub
add
ss
leave
mov
outsb
add
loop
pop
and
mov
loopne
mov
inc
jmp
dec
dec
sub
xor
lea
cmp
fwait
lcall
jne
add
repnz
daa
mov
adc
mov
xchg
imul
dec
stc
or
inc
js
mov
pusha
jl
ror
adc
lds
mov
in
loopne
mov
ret
xchg
je
mov
sbb
cli
push
test
inc
fcoms
mov
enter
cmp
dec
jns
loop
adc
push
jp
push
in
leave
xor
sahf
das
pop
dec
adc
dec
mov
inc
shrb
adc
sub
out
xchg
pop
lea
aad
fsubs
jge
popf
xor
jmp
repz
add
and
shl
inc
lret
mov
bound
cmpsl
and
aaa
test
cmp
sbb
cmc
mov
sbb
jbe
inc
cmp
clc
out
js
in
cli
push
in
mov
xor
jg
mulb
pop
push
mov
mov
add
mov
push
movsb
repnz
scas
push
mov
ss
push
inc
inc
pop
jns
pop
dec
lds
and
nop
addr16
mov
dec
mov
or
or
rorl
loop
dec
cwtl
cmp
mov
add
inc
aas
pop
jmp
ja
test
fsts
lcall
and
loop
das
ror
sbbb
rcl
pop
leave
cmpsb
pop
cmpsb
out
pop
out
sbb
push
jne
lds
out
fcompl
rcrb
cmp
jmp
lret
call
mov
aad
out
mov
std
mov
push
pop
sti
mov
les
ret
cmp
or
vpsrlq
mov
xor
pusha
insb
push
xchg
out
xchg
sbb
movsl
jae
dec
mov
mov
shrl
loop
nop
jbe
sahf
jo
jg
ds
mov
jns
bound
pop
sbb
xor
sbb
xlat
mov
xor
mov
cmc
in
fisubs
stc
adc
xor
stos
adc
pop
mov
xor
sub
push
test
mov
mov
shll
and
xor
dec
inc
inc
shl
test
aas
adc
cmp
mov
pop
and
test
pop
pop
xor
bound
sub
add
push
sub
push
dec
inc
adc
notl
xor
adc
mov
or
inc
and
lock
and
sbb
inc
xlat
inc
arpl
cmp
adc
xor
xor
loop
fsubrs
lock
cli
sbb
es
push
scas
out
mov
bound
lock
and
sbb
test
imul
inc
xchg
shr
pop
mov
mov
add
adc
shll
arpl
stos
inc
mov
stc
lret
iret
add
fimuls
adc
mov
in
add
iret
pop
push
cmc
lcall
dec
lds
add
and
fdivp
jb
stos
stos
nop
adc
scas
js
testb
cmp
flds
sahf
or
mov
test
lds
aas
push
adc
or
inc
push
in
or
dec
daa
inc
mov
fxtract
push
dec
mov
enter
subl
mov
shlb
adc
cwtl
jne
jl
ds
fisubrs
cmpb
add
mov
test
sbb
rcr
loop
rcrb
movsl
je
add
fdivrl
sub
in
inc
fnstcw
testl
mov
pusha
mov
and
rorb
push
pop
cmp
fldenv
mov
or
mov
pop
cltd
fidivrl
pushf
sub
int
pop
ret
xor
push
cmpsb
lock
pop
and
inc
loopne
xor
int
aaa
push
add
sbb
ret
or
add
es
sbb
dec
push
in
xchg
cmp
fsubr
mov
cmp
push
pop
pop
push
sbb
stos
jmp
add
mov
daa
subl
push
pusha
arpl
aad
ret
xor
pushl
pop
orb
adc
inc
cmp
lods
aad
icebp
ror
jae
push
cmp
jmp
ss
or
outsl
loopne
add
je
outsb
cmp
jle
push
mov
jp
idivb
fsubrl
sbb
dec
inc
add
fs
xor
test
mov
aaa
inc
sbb
mov
ret
inc
mov
or
sbb
mov
mov
lock
and
mov
xchg
xchg
test
mov
mov
insl
movsb
mov
into
fildl
and
gs
loope
mov
cmp
aaa
push
shlb
enter
enter
jae
aad
pusha
and
fmull
jae
lahf
push
pop
in
aas
jne
xor
sbb
dec
push
jmp
xor
push
stos
fcmovb
jno
sahf
clc
mov
aam
xorb
or
dec
and
js
scas
cmp
mov
bound
scas
xchg
add
fbld
imul
inc
jno
sub
cmc
xor
pop
out
xchg
cmp
shrl
loop
jb
iret
loop
mov
mov
shlb
rolb
adc
fs
and
stos
mov
clc
sahf
in
bnd
inc
mov
movsl
inc
gs
jne
fnstenv
mov
pop
enter
mov
mov
in
stos
cmp
pop
xchg
dec
jns
cmc
mov
ret
pushf
pushl
mov
jmp
cs
sub
mov
mov
add
les
test
and
sbb
mov
jmp
dec
xchg
push
outsl
enter
pop
or
push
out
add
andb
ja
lods
push
push
xor
mov
lret
xor
cmp
fsubp
lea
iret
sbb
inc
fstl
js
mov
fs
xchg
xchg
imul
das
test
popa
mov
std
sbb
shr
insb
bound
ds
mov
test
ljmp
cmc
lahf
jg
stos
jne
shl
adc
inc
push
push
mov
mov
cltd
sti
adc
jg
pop
movsb
dec
jl
lods
sub
sbb
inc
pop
cwtl
loopne
dec
stos
int3
loop
push
inc
push
mov
mov
dec
leave
xchg
int
ret
out
mov
push
fstpl
cwtl
pop
int3
cmp
fs
mov
pop
mov
mov
fucompp
mov
sahf
jo
inc
pop
in
imul
xor
outsl
test
mov
add
xchg
sti
divl
out
pop
adc
fnsave
rolb
cmp
push
leave
call
add
jae
xor
mov
mov
ja
xchg
mov
cwtl
mov
mov
idivl
mov
imul
xor
lea
ret
add
xchg
sbb
mov
add
sahf
push
pop
lds
into
daa
push
in
push
add
aas
mov
lods
mov
xchg
add
inc
stos
cmp
push
add
push
jecxz
pop
adc
jl
add
aam
inc
lods
mov
add
ds
sbb
sbb
inc
lods
jb
or
fimuls
jbe
and
cwtl
das
cmp
inc
dec
mov
fldt
dec
cmp
lcall
mov
and
aaa
rcrl
sbb
push
cmp
mov
jo
loopne
adc
dec
add
psrlq
add
pop
add
stos
xor
and
push
cld
pop
stos
cmp
add
xchg
pop
cmpsl
dec
fisubl
popf
sahf
les
addl
mov
xchg
fistl
pop
mov
mov
mov
testb
or
add
sbb
dec
xchg
push
popl
lret
push
mull
xchg
mov
jg
adc
ljmp
in
clc
cmpsl
push
insl
pop
cmp
xchg
jne
lods
xor
push
add
leave
pop
sbbb
and
or
ds
sub
add
fs
mov
iret
mov
push
shrl
mov
movsl
xchg
jno
cmp
scas
sbb
cltd
imul
cmp
ficompl
fucomp
sub
push
inc
pop
jns
lea
xor
arpl
sti
out
mov
or
cmp
iret
push
ljmp
or
xorb
and
mov
sub
and
test
aas
mov
sbb
add
inc
rorb
mov
hlt
jmp
rcrb
cli
cmpb
ss
pop
pop
mov
jmp
addl
lock
cmp
and
loop
int
lock
cmpsb
push
pop
mov
enter
push
shrb
pop
push
jne
jge
xchg
inc
mov
xchg
popa
arpl
bound
cltd
pushf
inc
xchg
sub
and
xor
xlat
cmc
sahf
add
data16
xor
fs
sub
dec
enter
in
pop
mov
cwtl
mov
xchg
cmp
inc
arpl
push
insl
mov
fs
js
mov
jle
cli
jecxz
daa
add
daa
scas
ljmp
test
out
inc
mov
xchg
xor
push
int3
xor
icebp
mov
cmpsb
fucomip
push
push
jp
sbb
add
test
nop
pop
loope
jmp
sub
in
cmp
rorb
dec
push
out
decl
xor
dec
leave
cld
cmp
inc
ret
addl
sbb
nop
cmp
out
and
adcb
xor
gs
cmp
mov
xchg
mov
mov
fnstcw
out
jmp
loopne
cwtl
push
mov
lss
fnstcw
incb
jmp
cmc
rcll
ret
mov
sarb
xor
cmp
mov
add
pop
aas
ficomps
int
cltd
and
mov
push
lock
dec
orb
int3
sub
adc
sbb
sub
int3
cwtl
lahf
jno
xlat
xchg
push
or
lea
std
or
cmpsl
push
fisubrl
adc
inc
das
or
notb
mov
sbb
inc
vpsllq
and
push
das
jbe
loopne
stc
shlb
add
mov
dec
and
dec
fs
fs
jg
jmp
ret
in
out
sahf
xchg
loope
mov
sbb
push
imulb
popa
int3
jge
incb
cwtl
adc
fxam
xor
sbb
cmp
sar
dec
jae
jle
aam
mov
lahf
xorl
flds
dec
test
sub
push
xchg
add
cld
pop
fnsave
or
cltd
stos
js
es
cld
mov
out
mov
aad
ficoml
pop
mov
xor
dec
cmp
into
mov
inc
movsl
cltd
insl
orb
mov
aas
adc
and
adc
addr16
imul
or
sahf
test
icebp
xchg
mov
in
mov
sbb
and
push
lds
daa
mov
fisubs
adc
jbe
or
push
scas
sbb
sub
les
imul
push
out
inc
push
lcall
cwtl
out
cmp
push
stos
mov
mov
ret
pop
and
push
insb
orb
cwtl
daa
and
dec
dec
pop
je
into
call
in
rcll
mov
mov
sub
aam
in
pop
stc
add
dec
in
addl
mov
mov
xor
stos
shlb
leave
sbb
sti
push
sub
dec
xchg
lods
movsb
outsb
ljmp
jmp
inc
add
out
inc
and
push
sub
adc
pop
inc
cmp
shrl
pusha
gs
insl
add
sbb
and
pop
xchg
xor
push
arpl
add
sbb
scas
and
mov
mov
dec
pop
repnz
je
adc
movsb
mov
or
or
sbb
arpl
sahf
fs
je
or
outsb
cmp
push
mov
mov
cmp
popa
jmp
xchg
pop
jg
pop
mov
popf
xor
jne
inc
mov
in
xchg
push
or
inc
in
push
andl
es
fstl
test
mov
push
or
mov
add
adcb
test
xchg
sub
fistpl
scas
inc
test
int
dec
dec
testl
push
loopne
xchg
and
add
repnz
imul
js
jns
pop
mov
sub
clc
and
inc
fnsave
jnp
inc
ret
xchg
or
xor
stos
sbb
push
std
dec
jecxz
pop
into
addl
adc
fisttpl
mov
divl
add
push
cmpsl
shrl
xchg
lret
jnp
jae
jmp
push
lcall
stc
lea
into
enter
mov
add
stos
hlt
jo
gs
jae
mov
jbe
subb
pop
repz
gs
mov
adc
sbb
in
ror
jno
hlt
jnp
sbb
mov
sub
sbb
cwtl
mov
cltd
cmp
hlt
lea
sbb
loop
pextrw
mov
add
enter
addl
les
mov
push
or
mov
in
pop
push
orb
lret
rcl
cmpsb
cmp
lea
shrb
or
xor
shll
push
ror
fidivl
aaa
sbb
lds
cmpsb
jge
mov
lods
fdivl
fwait
dec
inc
fisubl
sub
arpl
out
jle
addr16
xorl
sbb
stos
mov
lods
lea
movsb
jae
lret
mov
add
sbb
adc
dec
push
push
scas
xchg
cltd
inc
xchg
sub
mov
loopne
mov
xor
adc
mov
push
in
movsl
add
and
inc
mov
repnz
es
test
mov
call
das
cmp
mov
mov
jp
jp
inc
les
push
push
iret
jmp
aaa
cmp
fnstenv
jge
cwtl
out
add
ficoms
push
and
push
push
and
inc
mov
xor
sti
into
push
inc
cmp
fadd
dec
cmp
push
mov
ror
sbb
or
sbb
fxam
movsb
out
int3
jg
gs
and
out
lea
push
push
jmp
adc
xchg
popf
mov
add
and
mov
xor
daa
outsl
xor
fsubrl
gs
aas
incl
jnp
in
cwtl
mov
je
sbb
mov
outsb
add
je
mov
push
and
mov
or
iret
popa
daa
jo
loopne
xchg
push
xorb
add
jne
sub
xchg
and
mov
jns
or
das
xchg
daa
test
in
xchg
sub
pusha
mov
jmp
jge
lahf
push
sub
dec
shlb
adc
dec
addr16
pop
test
push
inc
faddl
in
fidivrs
sub
xorl
inc
arpl
or
jmp
aaa
gs
xor
mov
test
ja
es
push
xchg
xor
pop
jmp
xlat
arpl
xor
fcomp
stos
mov
dec
xchg
sub
lret
data16
sahf
int3
xor
pop
sbb
enter
stos
fbld
sbb
inc
rcr
bound
dec
jne
mov
xchg
xchg
fldt
insb
push
mov
xlat
push
out
pop
mov
rcl
xor
out
lret
fs
lcall
loop
int
imul
inc
fists
std
sbb
push
adc
mov
rorl
insb
ds
jae
lea
xor
mov
sub
repz
inc
lock
addl
mov
mov
mov
pop
repz
rcll
imul
popa
xchg
sbb
outsb
adc
sahf
mov
fs
mov
pop
lods
push
xchg
je
adcl
mov
mov
or
jl
leave
in
into
mov
dec
lahf
enter
push
loop
xchg
in
ss
addr16
and
pop
pop
clc
cwtl
push
dec
and
test
fists
xchg
jne
xorl
cmp
push
mov
and
inc
fdivr
push
sbb
int3
adc
mov
mov
push
in
daa
subl
dec
cwtl
das
cvttps2pi
dec
fcomps
inc
gs
imul
repnz
scas
imul
push
in
stos
repnz
xchg
out
pop
cmpsl
rclb
test
add
and
in
push
stos
mov
mov
pusha
inc
sbb
sti
hlt
cmp
jbe
repnz
cld
ds
xor
rcrl
loop
pop
fwait
sti
mov
push
cltd
std
loopne
mov
inc
sub
mov
lds
fs
xor
jl
mov
pop
out
xor
mov
stos
cmpsb
sub
pop
cmp
or
xor
cs
bound
rolb
jp
int3
cmp
out
out
popf
and
mov
enter
sbb
out
add
stc
sbb
aaa
leave
lds
fxch
out
int3
stos
mov
outsb
shl
push
mov
inc
rcll
add
inc
mov
cwtl
and
leave
pop
scas
jns
adc
dec
movaps
push
js
lahf
je
sarl
lods
add
xor
add
iret
adc
dec
inc
and
cltd
js
fsts
aas
sub
push
aam
test
pop
fisubs
cltd
je
lret
outsb
shrb
jbe
lods
xor
lock
adc
xchg
mov
inc
sbb
mov
jno
sbb
sbb
sub
push
dec
sbb
pop
mov
xlat
pop
jecxz
pop
enter
mov
insb
or
xor
jns
sub
sub
adc
fsubrl
push
rolb
pop
jg
mov
fsubr
sar
xchg
add
sub
daa
dec
or
cmc
push
repnz
fisttps
mov
loop
clc
pop
jecxz
jle,pn
push
mov
jg
cld
cli
out
dec
loop
or
jns
test
adc
jmp
and
push
mov
or
hlt
lock
aad
test
divl
jmp
leave
aad
inc
call
les
cmp
insb
into
mov
repz
fidivrl
test
adc
cmpsb
addr16
aaa
inc
and
lock
test
add
dec
add
xchg
movsl
icebp
xchg
sbb
add
lods
jo
leave
pusha
into
add
out
test
cmp
dec
or
xchg
and
dec
or
hlt
bound
push
aas
hlt
or
sub
fwait
push
fs
mov
popl
sbb
sub
test
cld
cmp
orl
cmp
mov
push
out
push
addl
ja
or
fisubl
loopne
xchg
scas
scas
pop
push
jo
repz
fcoml
lea
jae
pop
hlt
xchg
imul
adc
repnz
gs
pop
clc
adc
aam
int
std
fists
mov
cli
cmpl
nop
or
lret
cmp
mov
and
add
in
fwait
packsswb
insl
pop
out
or
sarl
cmpb
cmp
test
out
jle
xchg
int3
cmp
cli
dec
pop
in
cmpsb
fwait
negb
out
shlb
loope
test
push
ficompl
mov
data16
adc
push
fwait
or
test
mov
sbb
sub
sti
cmp
imul
jmp
xchg
mov
gs
add
jmp
dec
or
jmp
add
loope
in
mov
fisubrs
dec
fisubs
push
push
jne
js
std
test
bound
inc
adc
outsb
shl
mov
sub
jg
int3
jo
in
mov
sbb
push
fs
fists
add
sbb
xchg
mov
sub
mov
add
mov
mov
gs
repnz
xor
jo
adc
mov
test
jge
adcl
mov
push
fstpt
call
mov
adc
sahf
xchg
lock
into
aam
sbb
pop
in
xor
insb
xchg
xor
cmp
sub
loopne
xor
dec
cmpsl
lods
sbb
cmp
dec
imul
dec
push
or
dec
push
pop
inc
dec
cmpsl
out
das
adc
mov
popf
fldenv
repnz
push
call
mov
pushf
imul
pushf
scas
sbb
xchg
jecxz
xchg
sti
adc
cmpsl
pop
mov
jb
cli
cltd
xor
push
cmc
arpl
or
ret
jnp
mov
rorb
rcll
call
xlat
push
jnp
repnz
sub
loop
sbb
inc
enter
cwtl
cmpsl
out
cmp
adc
insl
sbb
jno
mov
cmp
adc
enter
rcrl
rorl
dec
pop
lods
bndstx
fwait
out
insb
cmc
mov
jecxz
push
mov
cmp
mov
aad
rol
push
mov
mov
pusha
js
clc
pop
push
pop
adc
ss
ss
mov
test
jo
mov
popa
cmp
lcall
sbb
call
mov
je
out
data16
lret
xor
xor
inc
push
sbb
mov
jp
js
das
scas
ffree
loop
lods
cli
cmp
gs
arpl
stos
mov
sub
test
xchg
das
fld
insl
daa
pop
icebp
int3
adc
push
mov
lods
pop
dec
mov
mov
cmp
sbb
xchg
data16
cmp
orl
mov
sbb
leave
xor
and
pushl
cmp
or
stc
popf
cmp
out
mov
inc
jne
jl
cmpsl
ds
pop
fistl
sub
lret
pop
cmp
aaa
test
dec
inc
dec
inc
pop
jbe
push
in
rcll
out
gs
sbb
push
rclb
enter
leave
pop
aam
mov
fisttpl
pop
dec
stc
lods
sbb
scas
lea
sbb
and
shlb
lds
xchg
push
ljmp
popa
aaa
sbbb
loop
out
cld
sub
adc
lods
scas
and
jnp
lock
rclb
pop
inc
insb
sub
popf
out
xor
adc
add
je
cmp
sbbb
cli
fiadds
ficoml
pop
es
dec
sbb
and
adc
arpl
jmp
or
addr16
mov
pushf
cld
adc
push
and
adc
or
fwait
xchg
pop
nop
pop
push
push
push
enter
or
lea
mov
dec
push
loopne
add
add
adc
push
test
pop
fidivrl
inc
addb
js
mov
adc
ret
sbb
imul
jnp
aaa
add
cmp
pusha
mov
xchg
jmp
cli
xlat
jae
inc
sbb
pop
xchg
mov
iret
sti
dec
daa
cli
cwtl
fs
js
out
sbbl
xchg
insb
loope
fldenv
cld
aad
jp
mov
adc
xchg
lahf
dec
lahf
mov
push
mov
leave
movsb
in
xchg
insl
std
faddp
cmpsl
ds
lahf
popa
movsb
icebp
dec
push
sbb
xchg
mov
xchg
mov
in
and
call
and
cli
fnstsw
or
scas
xchg
mov
sub
jge
mov
sbb
test
movsl
ss
adc
fimuls
mov
pop
fucom
test
movd
jle
pop
mov
sahf
cmpsb
pop
pop
ds
icebp
and
dec
mov
gs
repz
cs
xlat
xchg
test
adc
xchg
mov
and
or
push
mov
jg
push
out
decb
stos
fidivl
push
add
das
or
xchg
subl
sub
inc
aad
les
jno
add
sub
addb
test
mov
in
enter
incl
rcrb
xchg
dec
cmp
int3
add
mov
daa
xchg
jnp
inc
arpl
and
sub
jo
lea
add
out
jmp
sbb
and
sub
pushf
outsl
daa
into
data16
ss
mov
in
mov
test
add
push
xchg
ja
sbb
call
dec
cmp
adc
pop
jl
scas
inc
and
outsl
pop
or
push
ljmp
mov
in
mov
shll
roll
inc
push
dec
push
popa
addl
jl
cmpsb
fisubrl
aad
inc
fmuls
mov
notb
pop
xor
es
jle
idivl
xor
cmp
xor
cmpsl
out
daa
adc
xor
movsb
jmp
aaa
fnstcw
mov
push
sbb
ret
sub
test
pop
pop
insl
mov
mov
jecxz
mov
sbb
or
imul
and
mov
test
and
rcrb
pop
test
push
push
mov
hlt
int
out
jb
sahf
pop
cmp
jg
ficoml
cmpsl
dec
data16
jae
mov
or
pushf
sti
ja
pop
shlb
ret
xchg
jl
inc
into
gs
sbb
decl
jnp
jnp
cmpl
lcall
sub
and
sub
repz
jl
pop
out
cld
jle
or
and
insb
add
xchg
or
and
loop
daa
cmp
decb
in
pop
inc
sub
or
cs
loop
and
adc
jne
dec
mov
call
adc
or
sub
cmc
add
insl
movb
cmp
cmp
xlat
xor
addr16
jge
cld
out
jmp
push
js
das
pmulhuw
testb
sbb
and
scas
out
jecxz
inc
add
xchg
shll
push
jb
pop
push
je
xchg
push
mov
pop
adc
jp
mov
sub
sub
dec
pop
lds
imul
call
cmp
insb
xor
mov
push
xor
ja
std
xchg
xrelease
mov
repnz
pop
call
outsl
jecxz
push
xlat
sbb
mov
decl
decl
mov
xlat
pusha
jl
jg
shll
cs
pop
inc
dec
fbstp
and
aad
jns
repnz
lret
mov
xchg
xchg
aam
hlt
icebp
jp
loop
fildl
add
sbb
adc
add
scas
insb
data16
in
ja
popa
add
push
mov
rcr
mov
data16
cmp
arpl
push
daa
jnp
fsubs
inc
daa
cwtl
jbe
push
pop
scas
mov
pop
jge
test
sub
call
cmp
fisubs
pop
or
mov
mov
fstp
xor
jbe
shll
mov
aaa
xor
adc
pop
mov
inc
out
call
mov
enter
push
iret
mov
insl
inc
push
sbb
arpl
or
loop
outsl
ja
mov
js
fisubs
mov
mov
push
lcall
xchg
js
lds
mov
mov
sahf
add
ljmp
popf
mov
mov
mov
in
lret
hlt
int3
sar
ljmp
bound
add
bound
int
lds
js
sbb
adc
aaa
out
nop
pop
in
sub
insl
in
mov
cltd
mov
andb
roll
add
std
fnsave
mov
push
push
sar
xchg
out
out
out
mov
dec
das
ret
lcall
ja
ja
push
cmpsl
inc
mov
test
shlb
iret
cmp
cmp
idivb
xchg
movsl
fdivr
cwtl
shrb
add
pop
das
jecxz
int3
pop
mov
lret
jno
arpl
out
and
or
jno
mov
push
lds
xchg
xchg
movsb
loope
std
cmp
sub
scas
cmp
data16
imul
sub
stos
lods
adc
imul
ljmp
mov
test
ljmp
pushw
scas
testl
and
lds
lods
sbb
jnp
or
loopne
js
mov
daa
xchg
popf
add
jo
add
or
cmp
and
aas
js
mov
ss
add
fmull
mov
daa
push
sub
xchg
outsb
xchg
popa
push
popa
adc
data16
push
in
sub
inc
stc
ja
sbb
push
jo,pt
xchg
pusha
push
jne,pt
out
push
cmp
ja
sub
adcl
dec
rcrb
pop
test
mov
dec
jle
xorl
jo
push
test
fstpl
xlat
xchg
add
cs
arpl
lods
int
pop
outsb
ljmp
jmp
mov
pop
sub
mov
js
lea
insb
mov
inc
mov
stc
aam
and
adc
inc
shlb
lret
jle
js
out
test
adc
lret
mov
sub
adc
xchg
add
pop
jns
aam
push
insb
into
sbb
iret
repnz
and
jle
ds
lcall
jno
add
dec
cmc
lods
mov
pushf
inc
and
enter
imul
push
sub
lcall
out
cmp
daa
xor
push
mov
adc
jle
or
mov
mov
mov
or
cmp
cs
ds
mov
add
jo
icebp
insb
or
nop
mov
pop
sti
or
jnp
fwait
jle
jle
loopne
pop
adc
lods
ret
jno
pop
xchg
or
inc
aam
lods
add
inc
pusha
cld
lahf
jp
test
rolb
es
and
xor
pop
dec
mov
loope
mov
imul
jbe
pop
mov
enter
and
adc
xor
adcl
sbb
enter
xchg
dec
mov
sub
cwtl
xchg
scas
mov
call
mov
or
test
pop
lds
mov
mov
imul
setle
in
daa
dec
or
xchg
sub
pusha
fsubs
popl
lea
adc
push
xchg
jae
cmpb
mov
fs
inc
fidivl
movsb
inc
loope
xchg
and
cmp
lds
mov
fadds
push
setb
les
and
inc
mov
sub
pop
pop
insb
shlb
std
ja
or
test
pop
inc
bound
xchg
insb
add
add
loopne
mov
xor
sbb
xchg
jbe
shrb
add
push
arpl
mov
fldcw
lods
incb
sbb
popf
mov
decl
mov
pop
xchg
mov
idivb
ret
mov
inc
dec
mov
pop
or
mov
ja
sbb
jle
mov
inc
aam
cli
lods
or
clc
test
das
cmp
inc
push
inc
jg
addl
sub
dec
lods
dec
or
idivb
jl
or
mov
aad
outsb
mov
sbb
sbbb
pop
jmp
in
adc
ljmp
gs
lahf
and
lahf
xor
arpl
sub
xchg
sbb
dec
cmp
subb
push
rcr
push
jb
inc
add
sub
test
popa
xchg
sub
sub
repz
push
int3
out
mov
push
mov
aas
mov
add
movsb
out
arpl
pop
add
mov
mov
int3
je
push
mov
fstpt
arpl
pop
ljmp
cmp
hlt
hlt
jecxz
dec
pushf
mov
rol
je
mov
mov
cmp
sbbl
mov
int
xchg
repz
push
push
clc
xor
into
adc
and
xchg
mov
mov
cwtl
popf
pop
fwait
ljmp
and
or
xor
push
adc
nop
mov
sub
fisttpl
cld
ds
shrl
loope
ret
pusha
loopne
jp
fs
mov
add
sub
sbb
into
test
fwait
inc
in
inc
gs
push
or
and
sub
fadd
test
je
movsl
cs
fcompl
or
xor
fsubr
lock
pop
mov
je
xchg
insl
dec
xchg
jge
scas
adc
mov
js
fwait
in
jecxz
xchg
int3
jae
inc
mov
daa
pushf
jecxz
and
stos
mov
pop
das
sahf
addl
aaa
sub
test
sub
xorl
adc
iret
xor
out
shll
jl
xor
in
loopne
or
adc
jp
xorl
mov
mov
mov
notl
cmpb
xorl
gs
mov
movb
cwtl
mov
jb
and
dec
and
aas
push
loopne
enter
popf
xchg
pop
into
push
sub
pop
cwtl
or
jns
cli
pop
cmp
and
aam
or
xchg
add
lds
cmp
mov
fcoms
cli
pop
int
stc
arpl
cld
pop
xchg
sub
out
jno
mov
add
out
popf
xor
pop
out
enter
mov
add
add
cmp
lahf
lcall
das
pop
inc
lods
inc
xchg
xor
idiv
loope
or
pop
cmp
inc
adc
movsb
shlb
jo
mov
or
icebp
push
fwait
dec
cmp
jnp
js
dec
push
xchg
movsl
mov
imul
xchg
pop
add
inc
mov
cmp
and
icebp
xor
mov
add
in
xchg
inc
lcall
or
cmp
xor
dec
push
or
jno
or
or
sub
js
in
dec
js
jg
adc
in
pop
inc
cmpsl
hlt
mov
aas
ljmp
pop
addl
pop
xchg
fs
add
loopne
push
adc
movsb
in
mov
popf
xchg
ret
jp
fs
insl
arpl
loop
mov
jg
dec
fwait
outsb
xchg
xchg
repz
sub
inc
pop
cmp
mov
test
aas
je
out
lea
in
js
push
jg
mov
xor
fucomi
cmp
sbb
mov
repz
cmp
subl
jl
sar
pop
mov
int3
out
in
popf
in
and
cwtl
cmp
in
push
mov
jb
pop
icebp
cltd
xchg
aaa
pusha
lods
aas
mov
leave
xchg
loope
bound
jge
lret
mov
and
add
inc
fistpl
outsl
push
fstpl
fldt
xchg
sbb
pop
stos
mov
or
push
sti
ficomps
dec
ret
xchg
jns
jb
push
cld
push
test
into
enter
sub
xor
xchg
in
pusha
popf
inc
push
lock
sbb
lods
mov
sbb
test
and
mov
sbb
cmc
sbb
wbinvd
sub
ljmp
jno
shrl
push
out
mov
out
mov
mov
or
aam
dec
sub
pop
pop
mov
and
fistpll
adc
popa
mov
or
mov
pop
cli
sbb
out
cmc
aad
or
addr16
adc
cmp
pop
gs
cld
lods
mov
mov
arpl
adc
clc
fdivrl
dec
bound
arpl
sub
and
or
aam
sub
and
pop
jg
mov
jl
aam
sbb
int3
jge
sub
xchg
pop
jno
cmp
and
mov
outsb
cmp
sub
jnp
loopne
testl
ret
out
pop
mov
test
in
call
add
mov
loop
sti
cmpsb
sub
mov
dec
fnstenv
lods
and
push
mov
fadd
mov
jae
pop
loope
mov
lods
pop
sub
pop
clc
sbb
in
loopne
push
cmp
adc
in
sub
dec
push
sub
orl
dec
cmp
and
add
movsl
pop
sahf
xor
mov
and
dec
mov
dec
mov
fsubrs
push
fmuls
out
mov
sub
cmp
add
and
sub
lds
cmp
mov
xchg
and
jmp
ja
pop
shrl
cmp
sbb
lea
es
dec
cld
cltd
mov
xor
out
in
test
sbbb
dec
or
in
lds
and
lock
in
mov
into
mov
mov
aam
adc
insb
nop
lods
dec
jl
in
adc
sbb
push
mov
xor
out
in
sub
ficoms
int
mov
sbb
imul
sub
cmpsb
popa
xchg
popa
cld
or
mov
adc
nop
adc
rol
pop
xor
and
dec
clc
cmpsl
aam
xor
ja
sub
es
xor
mov
sub
push
shrl
jp
int
aaa
ret
pop
xchg
ficoms
adc
pop
out
or
push
xchg
and
iret
loop
je
adc
pop
adc
or
subb
sahf
clc
ror
push
push
add
add
and
xorb
test
loope
out
cmp
mov
jns
into
jns
pop
ror
shll
shrl
dec
jp
cmp
repnz
adc
je
int3
lahf
es
je
or
flds
shlb
cmpsl
es
cld
shrl
mov
lahf
pusha
fsts
adc
mov
add
rcr
pop
pop
insb
test
jge
mov
hlt
aad
in
xchg
ret
or
mov
push
cmc
cmp
jno
lods
sub
mov
lock
xchg
add
iret
flds
xchg
cmpsb
push
fwait
scas
orl
fsubs
in
call
movsb
mov
cmp
adc
int3
in
sbb
cltd
dec
inc
mov
cltd
mov
stos
out
bound
mov
pusha
ljmp
jno
mov
xchg
lcall
idivl
ss
sub
popl
int3
mov
and
rorl
sub
or
cmp
aad
dec
ret
ror
repnz
push
fsts
orl
or
lcall
outsb
outsb
pop
mov
adc
push
mov
jns
lret
imul
loop
jmp
push
push
js
rorl
bnd
xchg
mov
mov
aam
push
jmp
push
jg
jmp
iret
shr
lret
ret
inc
fs
xchg
push
enter
daa
decl
sbb
cmc
mov
bswap
das
cmp
cli
push
sbb
pop
insl
imul
sarb
pushl
dec
popa
xor
outsl
mov
ret
dec
lds
cmp
jmp
sbb
add
adc
or
push
shrb
mov
sub
or
out
xchg
mov
mov
in
xor
mov
push
test
adcl
xlat
pop
xor
mov
out
leave
int3
pop
jns,pn
cmp
inc
dec
pop
repz
movsb
jmp
or
sbb
adc
imulb
sbb
sub
jbe
dec
pop
les
xor
loop
cs
push
ljmp
pushf
pop
lret
xor
mov
sub
xor
ret
inc
mul
mov
xor
add
ljmp
cmp
cmp
js,pt
add
mov
cmp
inc
subb
test
mov
rcr
mov
adc
adc
sbbb
jecxz
dec
cltd
fstpt
xor
push
aas
test
ja
arpl
into
pop
adc
repnz
sarb
pop
movsl
pop
adc
loope
pop
sbb
cmp
aam
aam
or
add
fsubrl
addl
rclb
imul
je
or
mov
shrl
sbb
add
fidivs
sub
movsb
ficomps
out
lcall
insl
sub
test
cmpsb
cmpl
dec
xchg
mov
popf
dec
pop
cmpb
fistpll
fwait
les
xor
push
subb
fdivr
xchg
push
xchg
jp
pop
out
out
cmpsb
hlt
xchg
sub
aas
push
cld
mov
fiaddl
mov
xor
xchg
pop
jecxz
aaa
sbb
repnz
inc
pop
loope
fnstenv
xchg
jo
inc
mov
pop
xchg
mov
ficomps
cli
lret
or
enter
xchg
sub
xchg
or
mov
xchg
mov
mov
icebp
xchg
mov
mov
dec
adc
loopne
nop
daa
or
out
pop
scas
inc
mov
repnz
ret
or
push
and
mov
mov
sbb
jbe
test
push
sub
sub
mov
and
inc
fsubrp
xchg
nop
andl
roll
pop
mov
xor
popa
adc
clc
je
mov
xchg
subl
lret
mov
js
lea
mov
mov
push
mov
xor
scas
fists
adc
mov
in
jae
xchg
int3
jo
cmp
xchg
push
je
imul
mov
mov
enter
data16
inc
pop
pop
push
mov
push
call
cltd
aam
jb
xchg
sub
cmpsb
lock
lock
enter
cmc
mov
fldenvs
push
xchg
add
sahf
repz
sub
xchg
testl
push
call
sbb
and
sti
add
mov
jmp
jle
xchg
mov
popf
into
cmpsb
xchg
pop
jae
inc
mov
add
cmp
outsl
push
jmp
sbb
push
xchg
gs
cmp
fisubs
xchg
fwait
mov
or
loope
popa
dec
lret
sbb
movsb
addl
or
lcall
jmp
fistpll
aam
add
mov
lcall
sub
cmpsb
add
mov
cmp
repnz
cmpsb
loope
in
ret
jne
jg
sub
push
inc
push
dec
pushf
and
push
ss
jne
fcomi
popl
shl
mov
pop
in
cmp
call
imul
sahf
adc
mov
inc
stos
mov
frstor
cltd
dec
xchg
pop
jecxz
and
pop
xchg
rcrb
out
dec
outsl
std
jp
cwtl
stos
push
idivl
fs
and
shrl
push
dec
pop
push
push
icebp
xchg
movsw
clc
sub
frstor
shlb
aad
insb
push
mov
clc
enter
pop
insl
mov
mov
add
push
lea
or
cmp
xchg
sub
data16
mov
je
mov
repnz
jb
loope
sahf
push
sarb
xchg
jl
loopne
insl
dec
es
add
inc
scas
or
pop
sbb
inc
pusha
mov
mov
ljmp
into
mov
gs
jns
and
adc
jp
std
outsl
push
or
test
sti
pop
push
mov
pusha
push
out
xchg
loopne
jo
fwait
jne
inc
sbb
ljmp
push
ficomps
nop
cmp
xchg
mov
rclb
dec
sbb
pop
push
jecxz
mov
mov
cwtl
in
fidivl
jge
je
add
or
pop
mov
jnp
in
push
sbb
stos
inc
jg
out
mov
lea
iret
cs
sbb
cltd
hlt
push
or
lods
ja
outsb
sub
insb
mov
fwait
test
or
lods
daa
mov
pop
int
cmc
arpl
in
cmp
test
popf
mov
popf
out
shrb
push
push
adc
aad
loopne
push
inc
inc
dec
fwait
std
ja
in
ror
inc
fs
xchg
mov
fs
pop
cmpsb
jb
mov
push
push
or
lcall
xchg
xchg
test
in
push
cmp
enter
dec
fs
and
into
pushl
mov
rol
cmpsl
out
mov
sbb
push
jl
fcomi
or
mov
pop
and
iret
mov
inc
mov
inc
gs
push
addr16
fsubrl
push
aas
mov
scas
push
cmc
push
inc
cld
pop
push
push
mov
cmp
aas
jle
push
mov
add
es
jno
int3
xor
cltd
into
enter
xor
mov
pushl
roll
mov
ja
push
dec
push
lock
inc
aaa
jnp
in
push
jmp
out
lret
push
jbe
xor
jl
das
adc
push
test
mov
mov
add
sbb
cmp
jns
add
inc
pusha
cltd
std
shlb
mov
scas
dec
xor
xorb
fwait
imull
jle
rol
sbb
rol
rol
int
and
loopne
lods
test
or
idivl
jbe
add
icebp
sarl
mov
xchg
xchg
dec
sbb
xor
mov
icebp
mov
cltd
testl
push
or
xor
or
jge
xchg
sbb
jp
adc
inc
jns
mov
lcall
and
in
aas
mov
mov
xchg
sub
cmp
adc
xor
xorb
dec
xchg
jl
dec
imul
cmpsb
test
xor
and
insl
inc
lcall
ja
cmp
cmpsl
jecxz,pt
push
or
vmovupd
shlb
push
aad
loope
imull
out
adc
cmp
bound
push
jno
mov
adc
and
or
mov
iret
popf
pop
insl
mov
sbb
mov
push
lret
lahf
pop
ljmp
jno
xchg
cmp
jg
leave
mov
jnp
arpl
stos
mov
pop
jbe
mov
imul
rcll
or
lcall
adc
clc
stos
sbb
and
inc
jp
test
jnp
adcb
ja
lcall
push
mov
popa
das
jo,pt
sbb
cld
pop
aas
lock
inc
ret
loopne
iret
and
and
nop
lcall
ja
ss
iret
mov
push
jmp
xor
in
popa
adcb
jno
mov
aaa
sahf
sub
mov
xchg
sbb
push
mov
sub
pop
scas
iret
repnz
adc
mov
mov
mov
mov
pop
xchg
add
pop
push
and
mov
lret
add
ficomps
jge
mov
dec
loopne
lcall
pop
test
cmpl
nop
jae
sub
mov
loopne
ret
cld
dec
or
ret
push
loope
and
addr16
subb
jmp
pop
sbb
pop
cmp
jno
lea
hlt
xchg
rcll
pop
jg
pop
and
sub
cmp
negl
fsubr
fwait
sub
inc
push
xchg
adc
pop
adc
pop
cmp
int
cltd
out
mov
add
xchg
xor
add
and
mov
sub
mov
popa
cmpsb
pop
xor
stos
jge
jg
pop
leave
cmp
mov
enter
ret
add
jecxz
cmp
jecxz
push
xor
add
xacquire
xchg
adc
inc
pop
inc
and
add
andb
clc
aam
movsl
push
mov
cmp
jnp
filds
adc
in
push
jae
jo
fisubrl
out
fwait
les
sarb
jge
mov
pop
inc
js
inc
loopne
push
adc
leave
xor
call
inc
push
push
push
mov
int3
dec
insl
or
cmpsl
dec
sbb
fimull
cmpsb
inc
cmpsl
jecxz
add
dec
cltd
cld
pushf
sub
bound
jo
loopne
out
xchg
sub
pop
mov
push
add
dec
outsl
sbb
lods
push
sahf
cld
mov
loopne
xor
lret
hlt
mov
push
adc
mov
inc
push
es
push
jae
and
xchg
ds
rcr
adc
or
jge
leave
out
sbb
mov
lea
lcall
in
lods
cmp
xchg
in
xchg
rcrl
mov
cmp
lock
push
cltd
gs
enter
sbb
repz
imul
int3
lea
jno
scas
scas
in
lcall
mov
scas
sbbb
jb
shl
xor
cwtl
fmull
and
xchg
fnsave
inc
push
xchg
push
add
cmpsb
sbbl
ret
mov
push
lcall
sti
inc
fnstsw
xchg
popa
and
pop
arpl
fdivs
ret
cmp
mov
pusha
xchg
push
push
les
mov
xor
ret
sbb
jno
jo
icebp
push
inc
pop
mov
inc
sbb
mov
xor
dec
repz
inc
mov
cmp
bound
fsubrs
std
cltd
aaa
scas
outsl
jge
xchg
fwait
jne
stos
mov
jo
lds
out
jge
push
test
ret
ss
add
mov
ds
into
xor
int3
jne
fnstsw
outsl
fcoml
push
xchg
popf
xor
or
xor
dec
or
jbe
loope
cmp
xchg
mov
bound
xchg
stc
push
and
or
cs
cmpsl
aam
xchg
scas
mov
xor
jb
loope
or
xchg
sub
jmp
es
and
mov
inc
out
xchg
push
pop
lret
in
sarl
test
sub
cmpsb
push
repz
testl
jne
push
lahf
fsubl
test
mov
sbb
adcl
inc
xchg
decb
mov
ror
sub
dec
andb
pushl
sbb
sub
aaa
lcall
add
leave
int
lods
xor
popf
leave
movsb
cmp
xchg
xlat
mov
ret
stos
xor
and
test
cmp
push
pushf
mov
inc
and
dec
add
mov
test
pop
pop
cmp
lods
mov
cs
repz
lods
pop
imull
sbb
xchg
inc
push
lcall
and
add
mov
das
ss
addr16
adc
push
cmpsl
jge
push
push
jae
and
mov
aas
insl
push
dec
pusha
push
pop
inc
out
or
inc
scas
sub
jo
mov
or
mov
mov
ret
mov
fidivl
push
call
or
repnz
fildll
mov
andl
add
add
fs
fwait
sbb
xchg
xor
mov
xchg
mov
loop
inc
popa
imul
sub
push
jne
mov
loopne
imul
les
and
test
mov
mov
les
pop
push
push
es
push
lods
adc
fwait
cmp
ljmp
mov
cmp
push
push
fdivrp
test
jne
fsubl
jae
cwtl
and
or
scas
inc
adc
push
xchg
xchg
aaa
dec
rcrl
and
icebp
insb
or
adc
inc
dec
add
dec
cmp
mov
sarb
sahf
cmp
jp
sub
shl
divl
data16
stos
jb
test
addl
pop
hlt
ja
mov
cmp
scas
mov
adc
pop
mov
ds
xchg
cmp
push
rclb
cmpsl
pop
sub
hlt
loop
push
ds
xchg
pop
icebp
mov
int
add
ret
mov
sbb
ficomps
aas
test
scas
lods
or
ss
mov
addr16
lcall
or
mov
sbbb
dec
cmp
out
or
loop
and
in
ds
pop
or
mov
push
pop
mov
xchg
sub
mov
mov
aaa
cmpsb
mov
arpl
and
add
aad
xor
pop
outsb
pop
adc
je
mov
leave
lods
push
fldl
stos
daa
stc
pop
xchg
jae
push
cmc
andb
test
mov
arpl
test
fcmovb
xlat
sub
insl
jb
ja
scas
cld
pop
adc
stc
inc
jge
xlat
cld
insl
jg
sbb
jmp
bound
mov
mov
lret
cwtl
jns
and
jns,pt
repz
shrb
mov
cmpb
pusha
repz
lea
pop
sub
outsl
daa
and
jg
pop
fidivrl
addr16
rol
ljmp
aam
xor
and
or
int
cltd
std
stc
mov
leave
fs
mov
xor
enter
mov
nop
cmp
notb
dec
or
and
cmp
out
pop
sub
or
ds
dec
mov
add
ret
adc
rcrb
lret
or
imul
mov
xchg
cmpsb
pop
cwtl
sub
mov
mov
pop
clc
xlat
xchg
add
insl
sbb
aad
or
mov
std
cltd
ret
pop
mov
jg
xor
jnp
mulb
leave
ret
add
sti
cmp
sbb
inc
and
inc
jno
pop
loopne
xchg
xor
pop
repz
fidivrs
mov
rcrb
pop
sub
ret
pusha
aad
pop
pushf
xor
loop
int
xchg
push
sub
sbb
mov
push
popf
mov
sarb
sbb
ljmp
jno
push
mov
and
cmp
xor
mov
hlt
pop
mov
jns
cmp
push
pop
jo
sahf
dec
and
push
or
lret
jmp
stc
mov
outsb
ret
cli
pushf
dec
pop
jo
sub
adc
add
mov
js
lds
js
jb
stc
insb
imul
hlt
cltd
jmp
push
jnp
addb
int
lds
pop
adc
sbb
dec
mov
jl
fwait
arpl
xlat
mov
jae
mov
push
push
dec
xchg
push
rcrb
pop
and
scas
mov
mov
adcl
nop
inc
movsb
fcoml
sub
les
fstpl
aam
lods
lds
push
add
subb
aas
mov
in
xchg
ficoml
movsl
shrl
cli
add
cmpb
int3
test
cli
add
in
xchg
mov
dec
push
jl
lds
push
cmpsb
add
inc
mov
stos
inc
pop
orl
lock
add
roll
push
in
lock
sahf
cs
pusha
rcrb
test
or
or
mov
in
clc
xlat
scas
mov
ja
push
mov
dec
or
sahf
mov
pop
movsl
and
enter
dec
pop
int3
pop
add
loopne
movsb
lods
cmp
lds
inc
pop
lods
mov
inc
insl
test
lret
frstor
cmpsl
fcomps
inc
lahf
insb
stos
nop
call
insl
shrl
dec
add
add
mov
mov
dec
leave
ss
mov
aaa
mov
sub
lods
jl
repnz
push
pop
cmpxchg
pushf
lret
cs
fstpl
mov
imul
mov
sbb
into
jmp
rcrb
clc
jecxz
add
ja
cli
xor
xchg
lds
imul
movsl
lret
dec
scas
xor
or
cmp
cmp
ret
add
sub
and
add
test
push
aas
mov
xchg
aad
scas
inc
adc
addr16
rorl
das
cmp
dec
mov
lds
jbe
xor
sub
and
inc
test
add
dec
dec
iret
and
fcomip
roll
jbe
pop
xchg
sbb
push
in
xchg
mov
inc
ret
enter
mov
ret
fidivs
pop
and
cmp
loope
jb
xor
cmpsl
roll
stos
xor
xor
adc
pop
xchg
pop
mov
dec
fmull
fldenv
sahf
xchg
icebp
fwait
mov
mov
cmp
in
lods
push
sti
leave
aaa
subl
aas
int
xchg
mov
out
lds
jbe
shl
in
mov
pop
fimuls
mov
inc
and
insb
fs
lret
xlat
out
sbb
jne
or
fidivs
dec
mov
cli
pusha
mov
dec
inc
mov
cmpsl
dec
mov
adcl
xor
frstor
nop
arpl
pop
in
push
gs
push
maskmovq
imull
clc
mov
andb
sub
mov
jle
imul
xor
test
or
push
sbbb
movl
imulb
fdivrl
aad
mov
ret
aam
or
in
clc
xorb
sbb
je
outsl
outsb
loope
das
test
inc
push
adc
fcoms
jg
inc
jmp
sub
repz
fcmovb
sbb
cmp
rcrl
into
leave
loope
decl
call
out
jb
pop
mov
cmp
jl
shl
stc
hlt
add
push
xchg
and
loope
mov
mov
add
inc
push
pop
dec
adc
sahf
mov
lret
in
mov
xlat
ret
out
loopne
pushf
or
loop
mov
xlat
mov
fisttpll
mov
sub
push
idiv
ss
sbb
imul
in
js
sub
ret
filds
xchg
inc
xor
mov
inc
rcr
jno
loope
leave
popf
mov
je
stc
and
xchg
add
cmp
sbb
mov
dec
das
mov
lea
xor
addl
cmc
push
in
test
jl
sbb
dec
push
cmp
test
lods
rcl
add
push
push
lods
and
icebp
dec
lcall
lods
test
mov
inc
ss
icebp
mov
loop
pop
jg
and
jp
andl
fstl
fdivr
movsl
lds
in
lods
xchg
daa
sub
cmc
push
add
xchg
push
shll
jnp
add
pop
cmp
xor
add
jnp
sbb
cld
nop
dec
pop
mov
cmpsb
lretw
int3
je
push
mov
scas
mov
mov
push
inc
loop
aaa
mov
push
mov
pop
movsl
loope
xor
push
sub
call
xchg
xchg
fsts
imul
cmpsl
or
add
push
fldt
dec
in
stos
or
xchg
or
add
pusha
scas
hlt
aaa
in
dec
es
or
ret
imul
loopne
pop
xor
adc
pop
stos
insb
iret
jbe
push
cmp
incl
xchg
pop
mov
add
ret
xchg
adc
adc
pop
jnp
nop
pop
fcompl
xchg
add
mov
test
sbb
or
and
ret
push
mov
cmpsl
pop
pusha
daa
clc
push
adc
imul
cmpsb
pop
mov
mov
test
mov
jg
jmp
in
mov
jbe
shrl
sub
jl
insl
or
jo
dec
pop
mov
mov
les
inc
test
mov
aaa
pushf
cli
testb
fstpt
adc
and
or
test
imul
negl
mov
adc
std
sbb
nop
fiaddl
cmp
into
or
imul
fucomip
adc
push
fs
and
int
mov
and
xor
shll
lods
fidivl
or
rcrl
icebp
inc
pop
das
dec
rclb
pop
addb
stos
mov
pop
fdivr
push
and
rorl
pop
dec
xor
mov
dec
andl
out
mov
neg
sbb
movsb
push
sbb
ja
divb
mov
adc
mov
or
or
fmull
pop
ret
or
outsl
stc
fbstp
mov
adc
push
cwtl
ss
addr16
addl
xor
pusha
inc
lock
or
aad
lcall
push
fisubrs
fdivrl
add
loope
or
mov
add
ljmp
scas
jne
stos
fwait
push
inc
mov
std
sbb
adc
out
mov
dec
mov
loopne
daa
inc
jl
icebp
dec
or
testl
cli
or
adc
lds
cmpsb
loope
xchg
es
xor
scas
add
test
mov
jo
xchg
pop
inc
scas
xchg
decb
sarl
daa
popa
xor
loopne
fidivrs
test
lds
mul
scas
sub
shll
repz
jle
lods
add
or
jnp
inc
cmpsb
xor
arpl
fsts
ja
lcall
loopnew
sbb
sbb
out
test
mov
faddp
lcall
mov
or
pop
pop
sub
or
push
icebp
add
pop
dec
popa
mov
pop
scas
in
push
mov
sahf
ss
insb
sarb
in
xchg
in
or
dec
fists
out
jne
std
addw
lret
pop
and
andb
jp
pop
mov
push
add
mov
dec
out
pop
inc
adc
into
jge
fsubrl
xlat
test
testl
aas
mov
mov
push
xchg
je
stos
icebp
mov
sti
fwait
mov
jp
sub
popa
mov
mov
xchg
lahf
scas
jo
loope
sbb
int3
into
adc
cmp
fs
xchg
jnp
lods
imul
ss
jmp
push
mov
push
dec
fwait
mov
adc
adc
cwtl
outsl
xchg
rcrb
inc
pop
dec
test
inc
xchg
adc
xor
imul
push
sbb
mov
cwtl
sahf
xchg
cmc
mov
pop
imul
jl
cmc
push
fiadds
insl
pop
popa
mov
lret
xlat
insl
xlat
call
pop
insb
fnsave
xlat
fs
out
inc
enter
cltd
lds
pusha
and
es
push
dec
mov
or
mov
out
sbb
mov
int3
sbb
shr
or
push
stos
ds
mov
dec
cmc
mov
mov
loopne
xchg
push
mov
pop
adc
movsl
sbb
mov
dec
mov
subb
outsl
test
test
xchg
xchg
xor
es
add
fwait
ja
xlat
das
jne
mov
mov
movsb
dec
mov
mov
mov
lock
and
loope
sbb
mov
or
ss
ret
xchg
cmp
push
sbb
mov
push
sbb
add
sbb
stc
nop
bound
sub
shrl
xchg
sub
push
loop
aaa
sarl
pop
insb
lods
in
test
push
xchg
sub
adc
add
pop
push
rcrl
push
in
xchg
cli
insb
add
ljmp
cmpsb
daa
mov
sub
pop
pop
xchg
mov
or
int
dec
add
jg
xlat
mov
pushf
or
nop
lods
dec
adc
mov
cmp
mov
sbb
jnp
stc
xchg
xchg
cmp
sub
movsl
xchg
push
lahf
fidivl
sub
add
mov
js
xchg
ljmp
idivb
mov
push
lds
cmp
mov
xor
dec
popa
stos
adc
aam
add
insl
insl
into
fwait
cmpsl
packssdw
sahf
mov
lahf
add
addr16
or
adc
xchg
pop
pop
loopne
jmp
push
nop
push
fiadds
lods
mov
adcb
xorb
popf
repz
fnstsw
and
and
add
dec
fildl
pop
popa
rclb
in
and
je
les
mov
ror
sti
push
fsubr
jl
cs
fucomp
jbe
icebp
leave
dec
lcall
mov
fldl2e
ja
mov
cmp
dec
int
inc
push
pusha
jg
shlb
pop
out
mov
sub
cmp
mov
push
cmp
sbb
jae
add
jecxz
lods
in
dec
mov
test
inc
or
testb
out
or
lcall
xor
dec
pop
shl
inc
push
insb
leave
dec
sbb
cltd
cmp
jb
push
jnp
ss
aaa
lods
sub
mov
pop
hlt
cli
or
int3
pop
popf
jbe
fisttpll
add
scas
sbbb
lock
mov
mov
inc
sbb
inc
int
xor
push
outsl
and
sbb
rcl
pop
xchg
lea
lock
add
ret
ds
popf
out
sub
xchg
stos
pop
aad
outsl
and
inc
mov
cwtl
pop
add
pop
pop
fildl
shl
xlat
cmp
fcomps
and
xchg
and
jle
cmp
loop
arpl
loopne
scas
pop
xchg
out
movl
sub
pop
mov
or
outsb
sbb
lock
sbb
sub
das
or
push
ljmp
and
mov
aad
inc
imul
test
fistps
inc
jle
stos
imul
mov
sub
fcomp
bound
mov
dec
in
push
popf
lods
xor
imul
push
pop
jbe
sbb
adc
jno
dec
lods
stos
adc
ret
jp
fcomp
ficoms
insb
addr16
sub
aad
sub
nop
dec
sbb
jge
push
daa
bound
fidivl
dec
inc
std
ret
lock
sbb
popf
sbb
xchg
sub
xchg
push
xchg
ret
inc
mov
add
notb
int3
mov
xchg
stos
push
pop
pop
and
jp
repnz
sti
add
mov
dec
inc
pop
or
xor
mov
fwait
push
daa
mov
popa
xor
in
int3
addr16
xchg
sub
out
movsl
inc
pop
sti
xchg
iret
cmp
mov
cwtl
sbb
lcall
frstor
out
jo
stos
jl
xor
lahf
arpl
sbb
cmp
jae
cmpsl
dec
xor
fcoms
mov
movsb
jnp
popf
lock
sbb
mov
lcall
les
sub
test
ja
test
mov
inc
add
inc
pushf
data16
int
push
ljmp
pop
das
in
fistpl
push
pop
mov
jmp
add
push
mov
fistpl
sub
sbb
xor
in
push
fwait
sbb
sub
scas
inc
xlat
jno
inc
arpl
push
jne
lea
and
or
out
add
mov
xor
dec
inc
fpatan
pusha
sbb
mov
repnz
movl
mov
lret
movsl
mov
ja
loopne
jg
dec
xor
jp
js
bound
into
mov
lods
fs
pop
cmp
sbbb
xchg
out
jae
jne
add
inc
add
sub
fstpt
in
mov
mov
push
stos
mov
dec
mov
push
aad
sahf
fdivr
push
test
or
cmpb
push
adc
mov
pop
shll
cmp
xor
fs
imul
xor
lcall
sub
adc
fnstsw
insb
aad
pop
stc
pop
pop
jbe
mov
mov
imul
lds
fwait
xor
fmulp
push
mov
mov
ja
and
sbbl
and
out
or
jmp
mov
mov
in
sahf
pop
cwtl
test
out
imul
mov
cltd
jae
stos
jo
adc
pop
jne
jl
cmc
fsubl
mov
andb
xchg
je
push
mov
test
ja
insb
ret
fisubrl
sbb
ljmp
jo
mov
mov
mov
scas
mov
mov
cs
jns
data16
dec
or
cs
es
jb
xor
inc
xchg
in
push
mov
pop
in
sbb
add
cmpsb
clc
cvtsi2ss
push
sub
in
in
inc
pop
mov
adc
es
fisubrs
inc
jp
lret
xor
fmulp
gs
popa
add
mov
xchg
in
ljmp
jne
sbb
xchg
push
js
mov
xchg
roll
mov
mov
out
shrl
scas
dec
in
dec
jo
mov
fldl2t
xchg
testb
cmp
adc
lods
aam
lods
or
sahf
mov
hlt
mov
loope
sub
outsl
add
jns
jp
movsl
pusha
push
fisttpll
out
xchg
pop
xlat
fucomp
pop
shl
jne
xor
pop
adc
inc
cmp
cmpsl
jmp
mov
testb
pop
adcl
pop
ljmp
dec
fildll
pop
sbb
rcll
out
sbb
cmc
push
hlt
mov
pushf
cmp
add
inc
pop
idivb
iret
hlt
sub
rolb
pop
pop
mov
outsb
addr16
out
loopne
xchg
adc
int
repnz
out
lods
popf
repz
sub
add
xchg
jns
pop
lods
cmp
dec
popf
mov
jns
xlat
xchg
cmp
push
xchg
cmp
sbb
dec
aam
outsb
xlat
cli
sbb
jae
insb
add
and
or
dec
inc
mov
nop
out
clc
pusha
mov
mov
sub
or
adc
cmp
jmp
shl
ss
dec
dec
sub
test
shlb
rcrb
add
shrb
lock
enter
lods
inc
pop
cwtl
xor
xor
jg
sbb
outsb
mov
ds
into
mov
imul
pop
cld
jmp
sub
loopne
rcll
adc
adc
fidivs
sub
lret
movsl
add
lea
fsubrl
lock
inc
and
ret
rcl
inc
enter
fbstp
test
xchg
mov
dec
out
cmc
sbb
out
adc
ljmp
mov
sbb
or
popa
clc
push
outsl
fnstenv
clc
jg
movsb
mov
push
pop
sub
push
adc
jbe
xor
lahf
pop
arpl
inc
outsl
sar
mov
pop
in
mov
adc
xor
outsb
iret
andl
push
cmc
adc
scas
pop
gs
sarb
xchg
sub
jecxz
pop
lret
bound
fsubr
cwtl
mov
notl
xor
fdivs
imul
movsl
cmp
shlb
sub
dec
sub
stc
bts
lds
cmp
sub
lret
bound
lock
repz
jp
lret
xor
mov
insb
js
jbe
cld
in
and
jl
adc
add
mov
movsb
data16
mov
jns
dec
jo
test
mov
mov
cmpsl
test
flds
push
jmp
lret
jle
movsl
lds
dec
lret
test
inc
pusha
aam
aas
inc
rcl
jo
or
fdivl
stos
das
out
fsubrl
aas
dec
sti
js
test
mov
dec
push
cmp
xchg
rcll
add
clc
jns
sbb
cld
nop
mov
push
push
inc
xchg
sarb
and
lret
inc
in
cmp
std
add
lahf
faddl
mov
ret
sysexit
in
jb
sahf
xor
push
sti
mov
testb
rcll
imul
pop
out
inc
or
fbld
cld
push
das
cmp
lods
sub
mov
mov
test
mov
mov
ds
mov
nop
stos
and
cltd
loopne
pop
scas
cld
pop
mov
cmp
scas
inc
inc
mov
int3
loope
rclb
cld
orl
sub
lahf
pop
cwtl
jg
jnp
es
xchg
push
xchg
jae
js
lret
mov
and
sbb
add
mov
pop
femms
or
xchg
inc
cwtl
movsb
nop
sub
arpl
dec
insb
call
sub
jecxz
xchg
call
ljmp
pop
cmp
outsl
imull
dec
lods
ljmp
pushf
divb
add
adc
rcrl
sbb
in
outsb
jb
push
test
pop
xchg
ss
xor
in
lret
adc
enter
lods
imul
and
adc
clc
jbe
dec
stos
enter
push
adc
out
mov
in
pushf
adc
mov
add
cltd
xlat
iret
xchg
pop
xchg
fildl
adc
sub
lds
ficompl
xor
jl
neg
dec
in
add
dec
pop
out
ja
leave
dec
bound
es
ss
cwtl
loop
lret
sti
call
sbb
adc
jp
push
lret
leave
inc
xor
fdiv
loopne
push
dec
xchg
das
repz
insb
fisubrl
popa
addb
hlt
or
rorb
add
aas
shll
mov
sub
repz
inc
add
mov
insl
inc
cmp
cltd
int
je
xor
xor
jo
sub
mov
roll
pop
mov
fwait
inc
ja
popf
icebp
imul
adc
rorl
lret
xlat
not
dec
scas
mov
mov
aas
repnz
cmpsl
dec
stc
adc
iret
mov
enter
inc
mov
clc
jge
stos
lods
pop
dec
sar
mov
jo
shrl
add
add
lsl
mov
test
inc
in
popa
cmp
add
push
fnsave
push
ror
mov
xchg
aad
sub
sbb
cmp
mov
jnp
cmp
cmc
in
mov
cwtl
nop
and
aam
dec
hlt
repnz
rcrb
movsb
xlat
fcmovbe
push
inc
mov
cmpsb
les
jp
push
sahf
mov
xchg
mov
push
fadds
or
sub
sbb
pop
pop
ret
test
stc
outsl
insb
add
xchg
adcb
add
xchg
adc
xchg
test
insl
cmpl
add
sbb
testb
aad
add
cmpsl
es
outsb
hlt
mov
mov
cmp
daa
mov
sub
cli
or
adc
mov
shrl
pop
jg
addr16
repz
fadds
js
jae
mov
arpl
sub
xchg
xchg
dec
imul
xchg
jae
sub
pop
push
add
test
adc
shll
test
aad
gs
call
xchg
push
push
xor
mov
add
out
addr16
cmp
test
loope
push
xchg
imul
sub
pop
add
int
sbb
push
rorl
xor
daa
and
mov
add
je
stc
pop
sbb
fnstsw
iret
mov
pop
add
pop
sbb
add
or
push
xchg
test
push
fdivp
mov
jae
push
stos
jmp
jecxz
lock
lods
xor
arpl
es
test
lret
daa
or
rcl
loope
loop
sbb
enter
sbb
add
aaa
pop
and
sub
rep
mov
inc
fnstcw
xchg
lret
aas
push
loopne
addr16
sub
push
aam
cmpsb
in
clc
hlt
push
push
insl
add
sub
lods
sti
mov
and
push
pop
inc
or
lods
mov
sbb
fisubrs
mov
pusha
pop
push
inc
cmp
call
pop
mov
mov
stc
jno
xchg
popa
jo
cmpb
add
dec
movsb
mov
popa
inc
testl
scas
inc
repnz
and
fcompp
xchg
jno
lcall
fwait
data16
cltd
stos
mov
fnsave
mov
cmp
insb
nop
pop
aas
stc
aaa
outsl
test
sbb
lea
leave
pop
xchg
imul
popf
mov
pop
in
add
out
sbb
mov
pop
clc
leave
dec
pop
sbb
jo
nop
in
mov
pop
add
mov
xor
mov
dec
push
enter
data16
rcrl
fld
xchg
cmp
sbb
xlat
xchg
pop
mov
sub
sub
push
xchg
xchg
jae
scas
jg
jae
xchg
sub
cmpsl
fistps
out
add
mov
push
cmp
or
pop
aad
mov
jmp
stc
ds
outsl
imul
fs
aaa
leave
shlb
add
jmp
fidivrs
popa
clc
xor
cli
xchg
mov
cmc
sbb
xor
xchg
cld
mov
push
lods
xchg
rcrb
icebp
pop
and
push
sub
cmpsl
pop
push
push
inc
add
and
das
int3
fisubs
stos
add
cs
mov
movsb
xchg
pop
popa
or
enter
sti
lods
addr16
adc
or
icebp
ds
bound
insb
rcr
sub
mov
sbb
sbbb
in
andb
push
nop
icebp
fadds
lock
in
xchg
cmpsb
xor
fldz
mov
dec
popf
pushf
lods
jo
xchg
arpl
add
repz
sub
test
jmp
popa
cltd
inc
fcmovne
les
xchg
jle
fbstp
ja
adc
int3
push
mov
or
ja
cwtl
bound
fwait
das
push
jg
push
dec
leave
sub
cmp
mov
and
dec
sbb
and
insl
push
mov
inc
and
in
addr16
aam
inc
fsub
insl
dec
bound
lea
mov
sub
pop
mov
push
sbb
dec
loop
cmpsl
fs
adc
imul
xchg
repnz
subb
imul
mov
or
jns
push
jno
in
jle
pusha
divl
mov
sub
add
xor
jmp
inc
pop
push
sbb
lcall
xor
mov
mov
rclb
popf
jmp
sbb
jmp
pop
fs
xor
jae
sub
xor
fs
aad
leave
xchg
shrl
jbe
push
jl
push
dec
test
push
cmc
jp
pusha
mov
xlat
ss
mov
call
jo
in
pop
xchg
fadds
popf
push
lret
add
out
sub
sub
lcall
add
dec
cmp
insl
xchg
and
add
cmc
gs
mov
pop
outsl
leave
mull
pop
cmp
inc
and
sub
add
and
dec
data16
jp
mov
fistps
or
add
and
ds
fsubrs
ret
dec
pop
rcl
mov
int
rorl
mov
sbb
imul
inc
pop
cltd
xchg
or
adc
ret
adc
inc
andl
or
aad
mov
and
dec
fdivrl
out
int3
cmp
xor
pop
xchg
jp
aam
movsl
out
rcl
dec
loopne
xlat
or
pop
push
es
mov
jno
xchg
push
rorl
movnti
cmc
xor
and
mov
pop
je
sbb
cmc
shll
daa
mov
shll
jp
imul
aas
lock
push
aam
icebp
push
das
cli
sub
sbb
mov
out
cs
push
or
dec
or
out
cld
add
frstor
fwait
and
lcall
jge
pop
fiadds
mov
mov
sbb
push
mov
repz
test
mov
mov
xchg
movsb
push
xor
fidivs
sbb
inc
push
pusha
orb
or
mov
fstps
xchg
out
scas
inc
and
push
fdivrl
in
sub
mov
or
mov
aad
sarb
sub
inc
pop
mov
es
popa
sbb
push
push
stos
add
arpl
push
icebp
mov
jns
dec
stos
lret
xlat
adc
dec
repz
mov
add
lret
jl
mov
inc
jl
clc
lods
in
lds
insl
xor
sbb
xor
sbb
sti
aaa
data16
jle
sbb
xor
or
cltd
xor
out
jecxz
push
inc
and
mov
mov
stos
dec
sub
negb
test
add
je
repz
mov
mov
xor
jns
mov
inc
rcrb
scas
or
stos
daa
scas
pop
int3
push
sub
push
rolb
test
stc
nop
push
fstp
icebp
add
and
std
cmc
dec
sub
mov
mov
out
jno
out
pop
sub
sbb
jle
ljmp
ljmp
js
and
int
mov
dec
call
add
xor
test
sarb
shrb
or
lock
test
lret
dec
add
test
dec
aam
xchg
movsb
mov
pop
test
mov
inc
pop
xlat
xchg
stos
inc
vaddps
mov
cmpsb
in
ljmp
sub
testb
imul
rcrl
pop
add
cmpsl
inc
adc
xor
pop
idivb
adc
stos
pop
insl
orb
pop
xchg
filds
es
adcb
inc
inc
mov
shrl
inc
sub
ficompl
shrl
jne
sahf
pop
inc
push
and
cmp
aad
scas
inc
xor
push
mov
mov
and
inc
lods
xchg
scas
scas
jnp
lret
ror
xchg
xchg
push
jae
mov
and
ret
fnstsw
ja
dec
or
push
and
aaa
mov
mov
and
inc
mov
fldcw
mov
dec
add
sub
test
inc
and
aaa
push
pop
nop
push
cmpsb
ret
insb
inc
push
push
pop
jmp
xor
in
in
pop
sub
xor
testl
jmp
xor
pop
test
stos
xlat
pop
pop
inc
ja
jns
pusha
div
loop
leave
cmp
jg
ret
inc
popf
ss
jnp
test
push
insb
add
lret
and
adc
inc
adc
and
xchg
lret
pop
call
pop
adc
rep
les
inc
push
in
test
shlb
cmp
aam
dec
jae
pop
insb
push
and
xor
inc
in
stc
jg
add
jnp
mov
inc
scas
hlt
jle
hlt
sub
aaa
scas
adcl
xor
fstps
mov
jl
xor
sub
sbb
insl
dec
cmpsl
stos
inc
ftst
andb
xchg
lods
push
inc
and
cmc
mov
cmp
push
push
pop
in
aaa
fcmovnu
je
pop
ss
movb
jecxz
cmp
clc
dec
cmpsb
inc
cmp
and
push
sti
cmp
cmpsl
jbe
xchg
ds
cld
outsb
sti
add
les
push
scas
stc
daa
xor
stc
cltd
test
mov
jle
inc
sbb
sti
and
stc
jecxz
xor
call
add
push
add
mov
pop
jno
or
cmp
sub
aas
loope
xchg
cmpsl
xor
mov
xor
xor
fsub
sub
inc
or
push
ja
ss
mov
xlat
jmp
add
sbb
push
mov
or
mov
xchg
push
es
mov
mov
inc
arpl
pushf
sub
data16
je
cmpsl
lock
and
jns
xor
push
mov
pusha
inc
fmuls
cmpsb
mov
dec
roll
xchg
stos
cmp
add
push
ss
jecxz
sti
sahf
and
mov
mov
dec
mov
mov
sbbb
push
fdivl
fisttpl
jb
mov
stc
nop
sub
loope
dec
pop
sub
mov
and
int3
loope
mov
stos
pop
xchg
lcall
jb
xor
fisubl
leave
cld
dec
iret
outsl
adc
add
scas
add
mov
imul
mov
push
popf
stos
insb
push
push
stos
popf
sbb
out
lods
je
inc
lcall
lods
pop
push
push
jbe
cltd
mov
push
std
sub
out
xchg
mov
shlb
or
jbe
sbb
push
dec
mov
mulb
cmp
cmpsb
ds
sbb
dec
in
and
push
xchg
test
cwtl
pop
lret
js
push
frstor
fildll
mov
sub
pop
mov
je
or
xor
pop
lods
inc
xchg
inc
xchg
pop
add
pop
adc
push
in
rcrb
cmc
hlt
hlt
pop
outsb
push
gs
scas
fisttpll
cmc
adc
push
mov
cmp
out
insl
in
pop
add
hlt
inc
jb
cmc
insl
in
pop
and
dec
mov
ret
loope
test
sub
ss
test
icebp
lods
lahf
shlb
aam
loope
sub
dec
pop
add
rep
subl
or
mov
pop
hlt
mov
cmc
cmp
xchg
cs
mov
xchg
stc
xchg
ja
loopne
lods
ffreep
lds
jnp
arpl
and
iret
push
decb
and
xor
pop
das
rolb
jg
inc
pop
scas
popa
clc
fistpll
cs
jg
sbb
dec
pop
jnp
mov
and
fisubrs
mov
mov
fucomp
mov
enter
xchg
ffree
rclb
and
mov
movsb
cs
xchg
inc
cmp
jne
lea
pop
jmp
movsb
sbb
mov
ljmp
pop
cmp
nop
sub
inc
sbb
imul
mov
xchg
xor
mov
fldcw
and
inc
pushf
adc
mov
sti
lock
aam
xchg
mull
aam
push
pop
lock
mov
fistpl
xchg
sbb
jmp
aaa
mov
xchg
cmpsl
adc
sbb
xchg
ja
cltd
xor
movsb
int
mov
jae
loope
push
jno
mov
and
sub
fnsave
jo
pushf
xchg
xor
rcll
inc
std
mov
add
mov
loopne
cmp
or
leave
outsl
shrb
aaa
pop
or
jbe
ficoml
call
mov
jae
addr16
test
xchg
push
mov
and
inc
fsts
in
into
je
jp
jecxz
dec
adc
cmp
dec
push
cmc
rol
in
push
in
inc
ret
fnstenv
pop
mov
cli
dec
xchg
inc
test
cmp
test
pop
pop
xor
add
xlat
out
inc
push
dec
ret
in
shll
fsubl
push
in
inc
repnz
jmp
jae
cmp
pop
cmp
push
es
add
dec
dec
cltd
sbb
ds
pop
pop
cs
jb
sub
jmp
test
cmp
sbb
fistl
jmp
add
adc
push
cmp
push
xor
sbb
sub
cmpsl
mov
mov
enter
mov
mov
lret
lahf
cs
hlt
mov
aad
xor
pop
mov
pop
in
jnp
movsb
sub
test
mov
pop
lock
dec
xchg
nop
xchg
xor
xlat
mov
shl
out
sub
inc
aad
aaa
xchg
jg
je
movsb
in
mov
xchg
inc
jecxz
sub
repz
jo
sbb
mov
mov
clc
in
rorb
mov
subb
xor
mov
les
sub
mov
stos
xchg
call
push
dec
out
andl
std
pop
push
arpl
cmp
movsb
xchg
fstps
mov
jne
xchg
movsb
mov
lcall
xchg
rol
js
jo
inc
mov
fs
sbb
int3
mov
data16
push
pop
movsb
xchg
negb
xor
mov
scas
push
inc
sbb
ds
loope
cmp
lret
imul
loop
pop
clc
ljmp
cli
imul
adcb
out
leave
scas
stos
dec
adc
ljmp
pop
cmp
shll
add
add
in
in
rcll
daa
inc
fnstenv
movsl
jg
push
or
leave
imul
jp
xchg
xor
jne
cli
pop
sub
lea
sbb
adc
pusha
mov
ret
push
and
call
or
inc
cmp
in
cs
test
adc
int
pushf
lods
mov
jle,pt
ret
sbb
jl
sub
push
fdiv
inc
repnz
cmpsl
jo
popf
mov
push
loop
push
roll
pusha
lods
repnz
addl
and
mov
out
test
push
es
loope
mov
hlt
mov
mov
jge
mov
add
aad
adc
fistpll
jmp
sub
jb
aam
in
std
push
mov
cmp
xchg
les
lcall
add
add
cld
js
fcompl
mov
mov
xchg
lods
out
sub
fiadds
hlt
mov
sub
push
sbb
js
aaa
push
or
mov
lods
loope
rcll
mov
das
add
sub
test
dec
int3
out
fcoms
stc
or
aas
test
inc
testb
aam
movsl
mov
push
outsb
loopne
sbbb
mov
xor
mov
cmp
or
out
cmpsl
pop
mov
fbstp
mov
mov
adc
cmp
ds
in
mov
mov
es
xchg
sub
pop
stc
or
jg
imul
js
lods
and
arpl
mov
jns
std
addr16
and
ja
outsb
push
sbb
sbb
mov
lcall
sub
jb
add
inc
xchg
pop
sub
xchg
lcall
ds
test
lret
inc
fsubr
mov
adc
mov
out
rcll
es
dec
in
sub
pop
adc
xor
in
inc
pop
scas
push
aas
aaa
aad
jbe
jmp
int3
or
push
into
enter
mov
sbb
repnz
je
aaa
lret
xchg
mov
xor
stos
pop
stos
shrb
dec
lock
iret
mov
push
daa
adc
and
push
frstor
ret
mov
sub
stos
das
shrl
in
jnp
mov
loopne
leave
into
out
sbbl
sub
sahf
ja
repz
rcr
add
repnz
std
out
in
xchg
jmp
xchg
dec
inc
fwait
mul
mov
dec
jle
push
pop
out
xchg
mov
dec
fsubrs
and
jne
adc
adcl
mov
aam
sarb
cmc
pusha
test
aam
jmp
std
es
or
iret
das
mov
push
jo
pop
lock
jnp
stos
xchg
push
mov
dec
lret
fs
ret
jecxz
cld
mov
out
fnstsw
jb
mov
mov
icebp
xchg
es
int
add
das
push
out
fidivl
xor
stos
cmp
icebp
dec
lea
rorl
pop
cli
jle
sbb
jge
in
and
aad
sbb
mov
popa
pop
push
push
jecxz
pop
lcall
mov
sub
mov
cmp
in
dec
push
push
js
aam
sbb
test
std
xchg
movsl
mov
popf
sub
jns
popf
fs
pop
movsl
jb
push
repnz
cmc
and
dec
push
adc
gs
lds
and
inc
sti
mov
or
arpl
clc
cmp
dec
sub
repz
pop
outsl
dec
outsb
and
xchg
test
int
xorb
stos
test
xor
jb
and
inc
leave
popa
jg
and
fiadds
mov
pop
in
push
adc
rcrl
sbb
insl
repz
sti
mov
cmp
or
sbb
mov
ret
icebp
inc
jp
movsb
fsubrs
adc
xor
repnz
sub
movsl
mov
jp
les
xchg
call
int3
inc
add
pop
jns
mov
cmp
fucomi
sub
lahf
pop
outsb
cli
jle
fldcw
mov
cmpsl
inc
sbb
orb
mov
in
mov
mov
jp
aas
test
cmpsl
add
sub
leave
loopne
adc
fadds
sub
mov
mov
xchg
pop
jmp
es
aam
jb
sbb
ds
into
imul
aam
cmovns
repnz
lea
and
jno
push
ficoml
sbb
call
lock
push
cs
stc
inc
jl
ljmp
fwait
in
add
popa
hlt
test
es
and
dec
and
push
sub
pusha
loopne
mov
jmp
popf
xor
or
push
mov
icebp
and
shll
add
dec
and
aas
push
and
lcall
inc
cli
arpl
pushf
fidivrs
scas
hlt
cmp
pusha
and
stc
mov
negl
jns
add
fwait
stos
push
mov
sbb
dec
push
lods
or
decl
mov
mov
fwait
repz
mov
push
jmp
or
xor
into
insl
sub
mov
cwtl
mov
arpl
sub
test
mov
mov
xor
xchg
mov
pop
add
cmp
pop
imul
lfs
scas
inc
mov
jno
scas
fildl
and
scas
notb
jmp
add
xor
sub
shlb
xor
jbe
dec
cwtl
push
xchg
xchg
add
cmp
loopne
fcmovu
in
add
ljmp
xchg
stc
cmpsl
xchg
or
jmp
popf
loope
xchg
ja
jle
cmpsl
xchg
jmp
sbb
std
ret
push
adc
add
push
xor
xchg
mov
addr16
cmp
loop
adc
sti
sbb
movsl
jle
in
mov
hlt
ds
and
dec
loope
test
out
dec
and
push
in
jle
stos
jne
lahf
xchg
xor
add
lahf
lods
xchg
sarl
mov
insl
jnp
mov
sbb
aam
movsb
nop
cmc
jmp
sti
xor
in
or
mov
mov
mov
and
ficomps
mov
pushf
ljmp
jge
js
testl
cwtl
cs
add
or
add
push
in
ljmp
outsl
outsb
cmp
cmc
out
mov
pcmpgtb
shll
les
and
jo
cmc
lret
push
push
inc
mov
pop
mov
into
loop
cltd
or
lds
or
lret
pop
fucomp
mov
jne
xchg
test
inc
test
ja
loopne
dec
iret
mov
xchg
aas
loope
jbe
popa
pop
jmp
cs
icebp
push
mov
or
test
pop
daa
mov
rcrl
push
mov
ret
mov
imul
sbb
leave
or
dec
lea
pop
and
push
cmp
sbb
push
cmp
nop
ljmp
and
test
shr
fdivr
xchg
or
pop
in
push
sbb
pusha
dec
dec
gs
xor
data16
add
aam
int
lea
aam
gs
stos
dec
push
mov
arpl
in
add
or
mov
dec
test
mov
lods
mov
jb
pop
push
leave
cmpsl
mov
push
jae
lret
aas
mov
imul
mov
ffreep
dec
in
add
cmp
xchg
rorb
stos
pop
lock
and
mov
xchg
ja
jle
iret
lock
stc
shr
and
data16
xchg
ljmp
and
inc
mov
jg
cmp
dec
sub
lods
mov
fs
add
adc
and
loope
cld
push
xchg
add
lods
mov
sub
insl
mov
lahf
cwtl
mov
lock
cmp
sarb
insb
fwait
xor
jae
in
mov
push
pop
or
or
jns
call
mov
sub
popf
pop
stos
inc
mov
cwtl
imul
dec
into
das
mov
out
int
and
jmp
jb
fs
push
xchg
add
sub
sbb
int3
roll
adc
hlt
push
lds
pop
dec
jmp
mov
mov
out
subl
mov
mov
ret
mov
push
cmp
or
mov
jbe
mov
test
cmpsl
ret
ljmp
ss
adc
sbb
push
repnz
jns
movsl
add
fidivl
dec
enter
clc
ja
in
sbbl
cmp
scas
insb
xor
ss
mov
outsl
mov
inc
out
movsl
mov
mov
xchg
adc
mov
sbb
ret
pop
scas
insb
imul
gs
clc
daa
stos
cmp
hlt
aaa
lret
cmpsl
jle
jae
pop
mov
jp
lock
push
add
addb
popa
pusha
les
enter
mov
jge
test
mov
fstl
xchg
xor
xchg
inc
cmp
jmp
ret
ret
gs
mov
adc
jmp
add
aaa
pop
imul
in
mov
sbb
dec
jbe
pusha
mov
mov
xor
shr
jg
mov
neg
and
cld
popa
sbb
push
hlt
repnz
js
leave
add
push
xlat
pusha
push
push
or
mov
mov
push
mov
inc
mov
inc
stos
ficoml
out
test
sub
int3
xor
xor
imul
cmp
xchg
mov
out
mov
pop
in
jp
pop
jl
mov
inc
jmp
repz
or
daa
adc
lret
lret
jg
xchg
lret
movsb
or
xchg
xor
sbb
push
outsl
xchg
pop
add
andl
inc
inc
loope
push
dec
add
pop
cmpsl
ds
fmuls
jae
fdivl
push
xor
pop
mov
lcall
xchg
jecxz
sub
in
sbb
push
scas
bound
call
or
stos
push
push
lods
add
xor
flds
cmp
cli
sti
mov
pop
mov
sbbb
lock
push
into
pop
sbb
mov
lds
pop
test
icebp
jb
test
dec
push
loop
mov
jns
data16
mov
fisttpll
sbb
leave
pop
les
out
adc
mov
js
roll
jl
xor
mov
xor
xor
sub
inc
sbb
and
fsts
ja
sti
inc
fbstp
push
data16
pop
shll
fsubl
enter
dec
cmpsb
out
fildl
cltd
or
pusha
ds
or
ja
hlt
rcrb
xchg
add
sbb
in
xchg
jmp
test
push
popa
pop
jns
lea
sbb
rcll
addr16
fidivrl
pop
inc
aam
ja
cmp
loop
mov
mov
idivb
inc
adc
ss
out
test
push
pop
inc
pop
xchg
loopne
je
mov
add
ss
out
lret
add
aad
in
jnp
pop
pop
repz
and
gs
xchg
sbb
lock
sahf
adc
cmpsl
insb
repnz
lods
into
mov
mov
xchg
sub
push
shrb
dec
jecxz,pn
ffreep
aad
outsl
stos
rcrl
sub
aaa
push
shl
and
ret
jo
pop
mov
mov
fisttps
sbb
push
imul
cli
push
mov
cmp
mov
sub
and
mov
mov
pusha
xor
or
pushf
out
adc
add
adc
lret
rcrl
fistl
push
mov
mov
imul
rcl
outsb
inc
outsb
inc
pop
pushf
leave
ss
mov
into
jecxz
pop
cli
add
pushf
mov
pop
ljmp
xchg
jae
lcall
shl
out
cmp
fcmove
mov
sbb
int3
xchg
mov
es
aam
xchg
xor
cmc
lock
cmp
or
orb
mov
mov
or
jmp
mov
int
mov
push
add
lret
xlat
shll
xor
fcompl
mov
jl
popa
push
dec
xsha1
cmpsb
or
arpl
arpl
imul
add
in
jp
ljmp
adc
push
xchg
sub
and
push
xchg
loope
cs
addr16
mov
mov
les
test
jb
xor
xchg
push
xchg
adc
mov
sub
adc
mov
test
mov
mov
sbb
add
lods
out
adc
icebp
fdivl
push
add
push
mov
orl
cli
xor
inc
cld
ret
loope
push
cmp
xor
push
jmp
mov
sub
sub
les
cmp
xor
push
mov
mov
sbb
loopne
arpl
or
push
mov
mov
mov
cmpsl
cmc
lret
cmc
xchg
mov
dec
sbb
sub
and
push
xchg
dec
dec
in
std
inc
pusha
les
sti
cmc
sub
gs
nop
cmp
sub
rcr
repz
adc
cld
xor
cld
stos
and
or
xchg
push
movsb
test
fwait
mov
ror
fiaddl
leave
xor
sbb
out
adc
jle
pop
dec
pop
test
sbb
pusha
popf
mov
mov
test
fdivl
les
add
in
xchg
push
lea
aad
pop
test
scas
cmp
mov
js
push
out
repz
clc
cwtl
push
dec
xchg
mov
imul
inc
inc
lods
inc
xor
or
dec
mov
sbbl
leave
sub
fsubr
mov
cld
cmpsb
push
scas
call
sub
out
test
rclb
lds
loope,pt
lret
pusha
push
int
mov
cld
outsl
xchg
outsb
adc
fdivs
std
aad
addr16
aaa
lcall
xchg
testl
out
test
mov
sbb
push
xor
inc
or
daa
push
insb
add
je
mov
rcll
xor
sub
or
push
mov
and
sub
mov
popa
cwtl
pop
shll
in
mov
std
mov
adc
jb
adcl
je
sbb
or
insl
pushf
lods
jmp
xor
xorl
lds
ret
pushf
bnd
dec
test
jmp
aad
dec
mov
ret
loope
xlat
push
jbe
data16
in
loop
cs
aas
mov
cmp
jo
mov
cmp
adc
xchg
call
dec
out
outsl
mov
jecxz
jns
inc
rolb
inc
xorl
ficoms
hlt
ret
pop
aas
pop
mov
lds
stos
inc
lds
add
sbb
cltd
xor
lret
bound
loop
cmp
xor
jo
dec
xlat
sbb
jecxz
lea
xor
xchg
and
dec
in
popf
jg
or
or
and
xchg
test
pop
imul
add
sub
mov
inc
fcmovbe
outsl
pop
sub
sbbb
dec
les
dec
xor
insb
dec
mov
jnp
test
out
and
mov
mov
mov
cwtl
add
inc
dec
mov
movsb
pop
outsb
lahf
sbbl
mov
or
dec
mov
pusha
repnz
inc
xlat
into
sar
mov
sbb
xchg
ja
int3
mov
xchg
cmp
push
loopne,pt
jmp
dec
jl
or
push
mov
fsubl
clc
mov
push
mov
fwait
aad
pop
sbb
ds
mov
fistps
push
or
sbbl
pop
gs
sbb
inc
add
mov
arpl
or
adc
xlat
pop
mov
out
xor
mov
pop
pop
or
mov
and
lahf
shlb
mov
les
je
cmp
jne
sbbb
ljmp
int3
push
bnd
das
stos
nop
addr16
push
and
xor
hlt
adc
or
sub
push
pusha
cmp
add
cmpsl
inc
aad
cs
jne
rclb
lcall
mov
adc
or
std
pop
aaa
sub
mov
test
rcl
fwait
xor
out
in
pop
repz
add
cmpsl
and
mov
ret
pop
insl
sub
js
jo
enter
nop
adc
xchg
jl
ljmp
shl
icebp
mov
add
aas
mov
inc
add
sbb
vmovd
xchg
ficompl
lahf
outsb
stc
rolb
jecxz
dec
mov
imul
sub
pop
jp
or
cmp
mov
jmp
aas
dec
mov
inc
fucom
jl
cmp
aam
cmp
fdivs
dec
push
sbb
push
and
and
sub
jae
push
dec
inc
dec
es
scas
mov
stos
aas
mov
mov
inc
outsb
and
xorl
mov
inc
arpl
lods
inc
adc
sbb
adc
xchg
xor
test
sub
sbb
out
out
mov
xchg
mov
push
dec
xor
mov
clc
movsl
jmp
ret
push
dec
rcrb
or
les
pop
inc
xchg
outsb
nop
ss
lcall
inc
cs
add
repnz
sti
in
jno
jae
jne
dec
push
sbb
cwtl
dec
ds
jns
jae
push
adc
or
test
out
xor
fninit
mov
movsl
std
pusha
xor
das
insl
test
jmp
fldcw
test
out
shlb
jae
xchg
mov
mov
xchg
mov
dec
jmp
sub
or
ljmp
stc
fistl
loopne
cltd
cmc
add
jmp
adc
add
gs
mov
int
popf
imul
pushf
mov
mov
cmp
icebp
mov
and
mov
arpl
xor
test
sub
out
mov
jg
mov
adc
ss
mov
sub
rcl
sub
adc
sub
inc
lcall
sub
inc
imull
cmp
ss
cltd
cmp
inc
loop
fs
jle
idivb
sub
pop
in
jecxz
stc
dec
aaa
inc
dec
std
cmp
cltd
sti
pop
les
lock
push
jnp
mov
push
mov
inc
aas
in
jp
adc
pop
dec
pop
xchg
imul
push
mov
adc
jno
and
sbb
shll
insb
imul
adc
and
mov
sbb
ret
arpl
dec
mov
add
cltd
pusha
mov
xor
fucomi
dec
lcall
mov
nop
sub
dec
loop
xchg
scas
inc
vhsubps
adc
pop
mov
shl
add
xor
enter
fucomi
pop
cltd
testl
add
cmp
iret
aaa
xchg
rcr
pop
push
pop
pop
or
xlat
inc
inc
fldl
cs
lods
fs
pop
jae
jmp
mov
mov
mov
popa
cltd
jae
in
into
rcrl
mov
mov
jp
and
pop
cmp
and
inc
push
cmpsb
jp
and
out
sub
fimuls
movsl
sbb
push
fs
cmp
push
popa
mov
mov
test
lds
push
push
test
scas
je
movsb
fdivl
aad
repnz
mov
xchg
out
cli
mov
pop
sbb
clc
mov
jae
xchg
addr16
popf
pop
pop
mov
mov
test
or
cwtl
nop
loop
jg
lret
jle
mov
xchg
call
sub
xchg
rcr
repnz
and
pop
jno
gs
xchg
inc
adcl
adc
ds
cmp
adc
dec
cmp
push
daa
and
cmpsl
mov
cwtl
mov
int3
jp
pop
ja
movsl
sti
cmp
out
fs
divb
or
inc
mov
push
lods
pop
outsb
xorb
mov
sub
enter
popf
std
xchg
rcll
sbb
jb
les
dec
loop
fsubrl
imul
dec
pop
in
pop
lods
or
lret
fldenv
dec
push
jo
sub
fldt
je
mov
xor
jno
push
sarb
cmpsb
and
lahf
xchg
cmpsb
popa
flds
mov
sub
cld
adc
pop
out
inc
test
in
adc
jbe
repz
and
push
and
or
fdivs
dec
mov
fidivl
clc
and
pusha
jp
pop
or
inc
cld
fwait
sub
inc
fwait
mov
popf
mov
push
repnz
lea
ret
add
int
test
imul
cs
dec
out
hlt
and
movsl
mov
adc
dec
inc
pop
addr16
in
int3
mov
xchg
pop
je
push
push
and
addr16
push
jg
andb
loopne
jg
inc
test
icebp
sbb
and
pop
mov
loopne
lret
mov
sti
pop
cli
pushf
insb
vshufps
orl
mov
data16
fnstsw
sbb
shrl
fsubs
mov
cld
outsl
sti
xchg
pop
mov
scas
inc
out
mov
jg
mov
mov
mov
pop
push
jmp
and
xor
fcmovb
or
popa
pop
pop
cmc
dec
or
stos
jp
test
sbb
es
loop
cmp
out
pop
sub
push
cltd
jmp
jnp
sub
pushf
popf
lea
xor
push
sbb
addr16
mov
xor
mov
mov
xchg
push
pop
lea
push
fldenv
xchg
lods
pusha
int
andb
loop
in
dec
lcall
inc
or
pop
and
movsb
hlt
adc
jecxz
sbb
mov
or
out
jge
mov
push
out
add
inc
imul
sub
pop
rcrb
inc
mov
mov
inc
pop
xor
cmp
jo
lcall
daa
test
sbb
add
lea
ljmp
cmpsb
xchg
fisttpl
outsl
fbld
rol
rol
sbb
adc
loopne
fwait
xchg
cwtl
stos
test
outsb
mov
sbb
cs
shll
xor
in
sbbl
push
out
shlb
insb
add
cmpsb
mov
xchg
movsb
out
lahf
es
out
inc
sbb
imul
shrl
sti
fiadds
pop
cmp
jecxz
cld
cmp
mov
or
je
loop
push
lahf
pop
sbb
repnz
sbb
je
adc
jne
mov
mov
test
cmp
scas
std
rcrb
mov
sub
out
xchg
clc
cmpsl
out
cmp
jmp
dec
les
dec
xchg
jns
pushf
push
inc
or
std
cltd
repz
outsb
shrl
test
or
mov
jp
jl
out
xor
sub
sub
rcrb
xchg
push
ljmp
mov
rclb
addr16
loope
and
jmp
outsl
subl
jp
fldl
adc
ja
subl
or
cmp
lahf
stos
xchg
pop
xor
jne
fstl
push
test
inc
push
ror
fistl
xor
sub
sbb
mov
call
movsb
adc
pop
cmovae
mov
test
into
faddl
xor
fldenv
and
das
mov
mov
mov
nop
popf
je
lret
jne
push
bound
mov
or
push
cmp
clc
adc
cmpsl
mov
jge
ss
xchg
dec
sbb
mov
testb
adc
insl
mov
mov
jmp
lods
cmp
or
pop
fdivrs
pop
ret
jnp
fstp
mov
inc
out
je
jmp
lcall
or
mov
add
lahf
popf
inc
jnp
jle
mov
std
jl
bound
lret
js
push
pop
sbb
mov
lret
stc
push
bound
stos
sub
xor
and
mov
add
mov
mov
icebp
xorl
fmulp
inc
call
test
adc
pop
dec
sbb
movsb
jle
xchg
add
stos
push
add
sti
rcl
inc
add
jg
pop
mov
dec
ds
or
lahf
test
inc
mov
adc
test
test
pop
sbb
dec
dec
sbb
iret
insl
cld
out
adc
jne
mov
repz
jno
jbe
cmp
mov
or
xor
call
jnp
js
adc
fldenv
mov
dec
jo
dec
rclb
push
pop
ja
or
ret
dec
push
cltd
icebp
pop
jmp
push
lods
pusha
ret
jnp
imul
cmp
es
mov
cmc
jbe
jne
andl
xchg
lock
dec
lods
add
and
call
je
xchg
or
xchg
dec
in
movsb
mov
mov
jb
loope
add
cmc
mov
repnz
aad
int3
arpl
mov
repnz
and
addl
pop
movsb
push
es
sub
push
xchg
fcomp
stc
add
sbb
push
fwait
nop
cwtl
out
inc
xchg
sbb
xchg
sbb
adc
cmp
outsl
mov
mov
rcl
inc
test
rolb
pop
inc
je
xchg
and
pop
cld
jae
aad
or
adc
push
data16
jb
push
mov
jne
les
pop
and
dec
in
push
jo
in
test
sub
dec
and
arpl
or
add
fadds
dec
insb
sti
shll
sbb
movsl
sbb
jle
cmc
mov
dec
push
jg
inc
sub
or
movsl
sbb
fbld
push
notl
push
or
mov
lods
xchg
insb
xchg
fs
add
add
jbe
mov
in
adc
xor
xchg
fisttpl
or
fistpl
mov
jno
mov
fistl
comiss
pushf
daa
cmp
xchg
stos
bound
icebp
mov
fsubrl
mov
add
jmp
sub
mov
push
sub
lcall
xor
sti
adc
mov
les
icebp
aam
shll
cmp
xor
adc
pop
mov
movsl
popa
adc
fucom
loop
and
jge
sti
jl
aas
cltd
push
xchg
push
push
jp
dec
sub
dec
shrb
xlat
js
or
adc
inc
scas
jns
loop
and
clc
cmpsl
adc
std
xchg
cwtl
js
mov
jge
lods
cmp
loop
loopw
out
xor
jae
je
rcrl
mov
movb
int
or
sbbb
xchg
jmp
push
sarb
pop
jae
mov
clc
out
xchg
adc
adc
add
or
in
aaa
sarl
int3
sbb
je
repnz
adc
sub
add
cmp
and
popa
mov
sahf
bound
popa
orl
enter
icebp
lods
int
pop
ss
test
das
inc
hlt
mov
js
in
push
xor
xchg
and
out
mov
int3
ds
mov
sbb
xchg
jle
dec
fs
or
mov
cmp
clc
aas
divl
fwait
stc
mov
test
inc
add
out
ljmp
std
or
dec
jae
mov
ret
jle
xchg
stos
and
int
push
decl
divb
lret
pushf
out
adc
xchg
and
cmc
pop
std
mov
sub
add
nop
xor
test
pop
out
dec
mov
mov
push
sbb
jbe
push
sbb
data16
pop
cmp
push
lret
cmp
das
cmp
pushf
fistpl
mov
stc
push
push
inc
lcall
int
shll
and
xor
jge
mov
inc
aas
mov
cmpsl
mov
aad
cltd
inc
jecxz
push
dec
pop
adcb
int
lea
movsb
orb
and
cmpsb
in
mov
test
out
jmp
pop
inc
jne
add
movsb
in
cmp
or
xchg
push
rcr
call
add
jne
cmp
scas
mov
dec
inc
test
aad
dec
int3
jecxz
cli
xor
aas
mov
sahf
ja
shll
js
and
movsb
cs
lret
sbb
adc
and
test
add
enter
scas
jae
in
hlt
sbb
roll
sbb
xchg
mov
jp
jno
or
rolb
mov
jns
imul
movsl
mov
dec
enter
push
cmc
sbb
pop
movsb
jns
out
mov
xchg
js
pop
mov
sahf
and
iret
ljmp
xor
fistpll
push
pop
arpl
mov
das
out
inc
xchg
ret
stc
scas
mov
cmpsl
ja
adc
test
xor
addr16
pop
dec
or
clc
mov
cmp
stos
xchg
sbb
repz
mov
pop
add
rclb
fildl
adc
xchg
sbb
push
push
inc
xchg
cmc
dec
dec
xchg
cwtl
in
dec
jbe,pt
clc
stc
mov
outsl
pushf
data16
sbb
sbb
pusha
repz
ljmp
sahf
clc
sbb
inc
call
dec
dec
push
call
ss
aam
mov
out
mov
jne
jnp
es
nop
ss
push
jnp
mov
in
stos
push
or
lret
stc
mov
ret
lcall
jne
call
fdivs
pop
ror
jne
mov
decl
fnstsw
xchg
jnp
out
jge
call
or
mov
mov
and
and
xchg
dec
scas
aad
jl
divb
mov
arpl
jne
inc
or
ljmp
mov
hlt
mov
adc
mov
and
jne
sarb
loope
in
xchg
inc
mov
inc
stos
fildll
sbb
push
push
shlb
popl
das
notl
stc
lods
fildll
push
outsb
cmc
mov
and
lods
inc
repz
pop
jo
xlat
dec
pop
enter
pop
std
popf
sbb
dec
cmpsb
cmp
xchg
js
sahf
add
mov
and
pop
xor
mov
and
jo
sub
icebp
or
popf
dec
dec
adc
and
mov
push
out
sbb
dec
lds
popf
inc
outsl
jl
dec
cmpsl
sub
fwait
aam
mov
sub
jp,pn
fwait
insl
out
addr16
mov
out
jg
cli
popf
mov
ret
lock
dec
jle
arpl
jne
sbb
add
fsubl
mov
data16
movl
cltd
push
das
dec
stos
sbb
das
hlt
or
imul
mov
mov
or
pop
inc
jmp
loopne
push
mov
and
imul
pusha
insl
mov
sub
sahf
cmpsl
add
sbb
ret
sub
sbb
sbb
sbb
ror
cmp
mov
cmpb
loop
and
aam
mov
cltd
icebp
int3
gs
sub
and
mov
cltd
jne
lahf
mov
shll
lahf
sub
movsl
xor
jnp
iret
aas
aad
cmpsb
arpl
sub
mov
aam
push
mov
mov
in
xor
mov
add
mov
add
es
fnsave
and
iret
xor
jmp
imul
mov
pop
outsb
jge
mov
add
idiv
repz
ds
push
dec
dec
outsb
inc
xchg
adc
dec
imul
push
jno
ret
pop
cmp
sub
mov
push
dec
fcmovnu
fyl2x
or
test
in
inc
popa
push
clc
push
jle
mov
insb
fwait
loop
vmwrite
xchg
xchg
scas
test
pop
mov
xchg
adcl
mov
cmpsl
xchg
pop
pop
mov
daa
in
jmp
ss
rol
fwait
std
or
mov
or
mov
mov
sbb
inc
fcomps
jge
xor
loop
shlb
sbb
cmp
jnp
fwait
or
cld
adc
push
jae
fdivs
xor
mov
xor
negb
xor
mov
mov
in
push
fsubs
and
in
loopne
cmc
mov
adc
jg
insl
es
int3
fdivrl
or
shlb
mov
nop
cld
not
popa
jge
jae
or
fnstenv
pop
subb
and
add
push
test
sbb
sbb
int
out
cmp
rcrl
cmp
daa
cltd
xchg
test
jae
sbb
pop
out
mov
adc
xchg
lret
push
adc
into
orl
cmpsb
push
out
fs
sub
inc
ds
dec
and
in
ret
inc
mov
ficoms
repnz
loop
fstl
cmp
mov
push
push
popf
xchg
fsubrs
shlb
lods
and
dec
mov
adc
ljmp
std
nop
mov
push
pop
ret
sub
leave
lret
sub
adcl
loope
jmp
push
jo
push
les
loop
mov
push
jnp
add
sti
je
in
insb
iret
cli
adc
insb
jle
xor
sbb
outsl
pushf
movsb
sub
and
ds
call
push
dec
pushf
xor
xor
pop
and
into
sub
dec
push
in
jg
enter
jae
out
aam
enter
jp
inc
push
jg
das
adc
sti
xchg
jbe
hlt
iret
frstpm(287
rorb
cwtl
mov
shlb
inc
jg
in
fldt
xchg
aas
mov
out
xchg
shll
mov
imul
mov
imul
fwait
mov
dec
dec
adc
jae
mov
xchg
mov
mov
mov
inc
pop
adc
test
xchg
dec
jmp
loope
adcb
dec
int3
add
push
nop
stos
fmull
push
stc
cmc
shrl
inc
mov
jmp
sub
xor
mov
out
dec
and
mov
xlat
sbb
lahf
xchg
test
ja
lds
mov
cmp
aaa
push
aam
xor
xor
pop
aaa
outsb
cs
sub
or
imull
imul
out
clc
loope
out
test
xchg
mov
sub
repz
push
cmp
out
cltd
or
or
push
and
outsb
inc
xlat
inc
pop
sub
sbb
pop
imul
pop
repz
mov
and
mov
dec
js
or
rol
daa
pop
sbb
xor
fcomps
lea
icebp
jecxz
mov
int
pusha
mov
ficoms
lods
xor
add
mov
dec
jns
outsb
insl
outsb
mov
into
adcl
dec
psllq
mov
test
cwtl
mov
mov
lcall
cwtl
dec
sbb
add
push
push
jmp
mov
loop
and
xor
mov
xchg
jae
aam
cmp
add
mov
outsl
add
rcr
jno
ss
jl
cmp
negl
xor
sbb
ret
jp
push
imul
jo
pushf
cli
dec
adc
jbe
mov
lret
xlat
outsl
jnp
and
lds
hlt
xchg
es
dec
sub
xchg
mov
lds
sbbb
repnz
icebp
mov
ret
out
mov
jae
add
pop
cmp
push
rorl
xchg
jmp
mov
cmp
cmpsl
or
cs
les
inc
mov
pop
cmp
sti
push
and
sbb
mov
lods
or
lods
add
jl
mov
or
je
add
fistl
cltd
xor
jo
add
jl
daa
cmpsl
lret
cld
dec
xor
sbb
jae
xchg
sub
mov
xlat
sahf
add
sbb
je
adc
and
fisubl
sbb
addb
ds
pop
outsl
add
movsl
add
jae
pop
mov
mov
inc
cli
movsl
stos
inc
pop
lahf
insl
push
jg
in
jae
pop
xchg
call
loopne
loopne
jmp
cs
xor
jb
pop
sahf
rcll
js
in
push
sar
jge
dec
fbld
cmp
jb
xlat
push
fists
jge
inc
jg
or
test
mov
cmp
inc
sub
push
pushf
lret
pop
testb
sub
fst
and
inc
pop
call
mov
loopne
repnz
adc
jb
and
int
mov
filds
xor
sarl
dec
inc
xchg
ja
std
and
shl
out
inc
test
sbb
dec
dec
mov
or
push
test
push
sbb
das
out
outsb
outsb
or
test
push
xor
ret
scas
repnz
mov
add
push
int3
inc
pushf
jbe
repz
mov
cmp
xchg
inc
mov
mov
and
cmp
inc
icebp
sbb
popf
mov
pop
lock
shlb
pop
xor
dec
cmp
sahf
jae
test
aam
inc
fidivrs
xchg
inc
or
inc
pop
mov
mov
movb
aam
scas
sub
xchg
jo
test
mov
pop
in
pop
and
and
shll
ror
in
rolb
cmp
dec
scas
fisttps
lods
scas
stos
push
add
fstpt
or
stos
inc
push
add
stos
xorb
sbb
push
pop
xor
xor
fcompl
jle
adc
mov
rcrl
sub
add
mov
pop
push
add
leave
mov
dec
dec
and
or
repz
movsb
rcrl
pushl
int
sbbb
jno
test
cmp
or
gs
jle
in
nop
daa
pop
ret
sub
fnstenv
dec
add
hlt
in
sbb
xchg
sbb
pop
mulb
and
jb
cmp
sub
push
cmp
fwait
or
jns
mov
or
sub
fwait
pop
and
test
pop
hlt
push
mov
pop
pop
jbe
push
pop
and
jecxz
shll
iret
push
arpl
xchg
outsl
jns
stos
jmp
pop
dec
push
sub
mov
push
sbbl
ljmp
lret
fbld
into
mov
adc
push
in
idiv
and
mov
inc
stos
xchg
outsl
and
iret
lret
jl
scas
jmp
dec
sub
pop
xor
and
mov
dec
push
int
dec
add
sub
aad
arpl
adcb
in
and
enter
lods
lret
popa
int3
leave
cmpsl
jno
pop
mov
jp
hlt
cwtl
ljmp
pushf
test
cmp
dec
popf
and
xchg
sbb
lret
mov
outsl
rol
aad
push
fwait
sbb
xchg
mov
pop
mov
rcrb
mov
test
gs
cmp
mov
lods
bound
inc
in
out
cmp
and
add
inc
dec
dec
pusha
neg
cmp
xor
and
cmp
test
fdivl
dec
pop
adc
and
repnz
adcb
xchg
sets
mov
lcall
and
scas
clc
or
mov
test
cmpsl
ljmp
fwait
sti
xchg
mov
adc
pop
aaa
mov
sbb
pop
mov
xor
xor
jno
imul
movsb
adc
dec
movsl
add
or
sub
sarb
xchg
ja
bound
sub
repz
js
fmuls
inc
fs
scas
call
loope
sahf
icebp
test
push
mov
sbb
inc
push
jmp
push
sub
ss
sti
xor
xchg
and
lcall
dec
lds
mov
adc
into
mov
scas
and
jo
js
aaa
gs
jne
sub
push
inc
push
push
xor
insb
cmp
movsb
pushf
jns
inc
push
cmp
dec
clc
add
leave
mov
test
pop
xchg
cmp
enter
mov
dec
dec
add
aam
dec
cmpsl
dec
lcall
in
test
lods
jecxz
arpl
mov
push
mov
and
je
es
pop
adc
sti
stos
xor
aad
imul
sbb
outsb
pop
cmp
mov
mov
cwtl
mov
mov
outsl
ds
add
add
test
inc
xorl
xchg
jnp
pop
dec
inc
push
jge
or
jo
ret
rclb
loope
shrb
popa
paddb
or
sub
sbb
sbb
mov
popf
xchg
xchg
mov
cmp
popl
movsl
jl
popf
das
mov
popf
stc
cwtl
push
dec
bound
mov
sbb
or
and
sti
std
adc
dec
push
pop
sub
jo
sub
stos
pop
mov
dec
and
jle
inc
aam
push
lock
stos
leave
shlb
mov
pop
cmp
xor
adcl
pop
leave
int
rcll
mov
call
out
popf
stc
pop
rclb
sub
loopne
hlt
negl
imul
pop
mov
xor
xchg
add
out
adc
loopne
pop
cld
lcall
sub
ror
mov
fdiv
xchg
cmc
adc
nop
loop
sahf
mov
sub
inc
sub
lea
cs
cmpsb
xchg
bound
test
add
mov
fsubr
pop
and
pop
xor
out
add
pop
leave
mov
pop
ficoml
outsl
jge
dec
dec
popf
clc
mov
ficomps
sub
mov
lcall
frstor
repz
inc
push
cmp
mov
pop
imul
cmpsb
xor
jno
stos
out
sub
mov
add
fdivl
mov
xsha256
cmpsb
push
push
loop
or
and
ficoml
push
movsl
xorl
movsl
pop
jl
add
fistpll
mov
pop
jae
mul
mov
xor
andl
inc
mov
cmpsl
xchg
xor
in
gs
fisubrl
aaa
das
call
xor
mov
dec
stos
addr16
sbb
xchg
jmp
pop
outsl
push
mov
sbb
ret
or
or
scas
inc
subl
leave
mov
lret
or
xchg
hlt
jmp
push
pop
mov
mov
test
test
adc
jge
jae
mov
popf
notl
orb
aad
in
mov
sbb
jnp
lcall
fcmovne
mov
add
loope
cmp
pusha
subl
ror
ret
lret
adc
add
pop
jno
and
imul
pop
test
pop
sub
xor
xchg
sub
jge
mov
cld
mov
sbb
insb
jle
subb
jne
sub
mov
arpl
sub
test
pop
xchg
xchg
pop
cmp
lret
aam
popf
or
jge
mov
mov
push
ljmp
js
jp
mov
push
mov
jg
test
xchg
inc
lret
aas
scas
sub
outsl
pop
addr16
jb
xor
jo
jno
nop
notb
andl
inc
or
push
pop
mov
int
popf
ss
outsl
jae
push
repz
loope
mov
daa
orb
shlb
pop
lock
test
xor
iret
sub
addl
and
jne
and
pop
and
inc
xchg
sub
and
push
sub
addr16
push
push
sub
xchg
mov
mov
and
mov
xor
in
arpl
sahf
adc
mov
aas
clc
xor
cmpb
mov
out
aad
push
out
jnp
jge
sub
cmp
mulb
es
ds
inc
das
adc
inc
push
insl
jnp
xor
bound
add
jb
test
or
or
in
rorl
subl
and
push
dec
inc
sti
stos
out
dec
fstpl
sub
in
mov
xchg
pop
test
fistps
in
pop
loopne
fsub
repnz
scas
push
jbe
loop
lahf
ss
shrb
mov
stos
mov
and
dec
cmp
jge
loop
stc
addr16
hlt
fs
and
int3
arpl
mov
out
jg
adc
mov
pop
mov
sub
cmp
std
je
dec
lret
jmp
cld
jle
fsub
push
stc
int3
into
push
xchg
repnz
xchg
adc
insl
add
gs
inc
xchg
cmc
lahf
ds
enter
pop
jmp
xchg
pop
mov
dec
fdivl
shlb
inc
cmpsl
lods
dec
inc
pop
enter
and
pop
push
jmp
cld
cli
mov
div
ret
hlt
adc
cmp
sub
jno
out
xchg
jecxz
clc
and
xchg
mov
mov
xchg
cltd
mov
js
mov
pop
in
inc
fiadds
inc
loope
js
arpl
hlt
scas
ret
push
int
pop
lea
or
xchg
mov
dec
add
test
pushf
xor
pop
jmp
hlt
or
push
arpl
lea
mov
push
pop
popa
roll
pop
arpl
loope
aam
test
mov
or
sbbl
pusha
xor
xor
adc
out
shrl
shll
inc
rcl
adc
and
or
outsb
xor
int
jmp
cmp
pop
push
shlb
xor
jb
jge
add
cmp
mov
xchg
jo
nop
jnp
push
cmc
pop
dec
aad
icebp
das
pusha
push
outsl
bound
ds
stc
pop
ja
mov
xor
sarl
imul
call
cmc
fimuls
and
movsb
xchg
repnz
sub
lds
int
mov
fcomps
pusha
and
mov
xchg
mov
mov
mov
mov
jge
or
mov
mov
xchg
dec
or
add
lods
add
ret
jbe
stc
movsl
adc
sub
xchg
pop
cs
sti
outsb
cmp
imul
in
lods
ljmp
xorb
imul
andl
lahf
pop
movsl
decb
mov
xchg
add
jmp
fwait
cli
ffree
sub
insl
inc
add
pop
pop
cmp
push
icebp
sbb
fidivs
cmp
xchg
lods
mov
push
xor
jno
mov
pop
or
iret
addr16
mov
lds
insb
cmp
add
inc
sbb
jnp
scas
sbb
jae
mov
aam
out
cmpsl
and
jmp
imull
jle
dec
ljmp
xchg
pop
ret
out
dec
and
jnp
inc
shlb
sbb
mov
pop
fbstp
icebp
mov
lret
pop
shlb
xor
mov
stos
stc
sub
xchg
lea
fs
fsts
adc
jae
sarb
test
out
adc
out
add
or
in
xorl
aaa
push
mov
or
rorb
sbb
shlb
push
fnstsw
mov
ja
mov
lret
cmp
pusha
mov
xchg
xor
mov
xchg
sub
sbb
dec
in
les
jg
mov
mov
lock
cmpsb
stos
inc
pop
test
cmc
in
js
popa
stos
iret
lret
adc
test
inc
xchg
fnstenv
addr16
cmp
push
and
and
movsl
cwtl
xchg
and
jno
divl
xorb
mov
fs
dec
cs
bound
orl
fsub
sti
icebp
sbb
add
mov
fdivp
mov
xchg
mov
cld
inc
xlat
insl
mov
and
repnz
add
call
sub
scas
mov
mov
or
pop
popf
mov
push
or
pop
sub
push
out
mov
imul
mov
ds
pusha
fistpl
sub
jae
jmp
push
into
iret
adc
shrb
cmp
inc
insb
lock
dec
mov
sub
dec
ror
frndint
pop
jo
xor
aad
rcll
nop
mov
mov
jae
sbb
dec
mov
xchg
loope
push
aad
mov
in
in
push
add
loope
idivb
add
add
xchg
adc
inc
iret
mov
pop
mov
shlb
icebp
in
in
sbb
and
mov
sub
arpl
popf
fwait
cld
mov
out
adc
and
jo
aad
aam
cld
lcall
dec
cwtl
mov
xor
pusha
dec
inc
sbb
jmp
movsl
mov
xchg
lock
mov
fucomp
sbb
pop
lods
out
adc
stos
mov
fnstsw
mov
xchg
aaa
cmp
push
out
popl
jg
cmp
stos
aaa
cs
pop
mov
push
andl
pop
add
jge
pop
outsb
lret
sahf
ja
shl
lds
jns
sbb
cmp
outsl
push
aam
cltd
nop
jno
lea
adc
test
mov
repnz
ret
shl
cmp
into
mov
adc
pop
or
in
push
jg
lea
repz
scas
and
stos
aas
xchg
xchg
mov
addl
out
cld
pop
insl
pop
or
je
test
inc
popf
xor
sbb
scas
add
out
lods
daa
pop
mov
gs
and
sbbl
out
cmpsb
shl
fs
dec
imul
stc
sbb
mov
xor
xchg
mov
jmp
or
jb
std
ret
out
xchg
push
jmp
cmc
popf
clc
mov
out
cli
pushf
sbb
dec
pop
mov
imul
push
mov
jae
xor
pop
mov
data16
lea
dec
hlt
pop
xor
push
fistl
lret
inc
sbb
push
stos
sbb
sub
jne
xor
cmp
fs
movsb
ljmp
jmp
mov
adc
sub
loop
jnp
pop
aaa
cli
xchg
dec
test
fcomps
adc
int
stos
pop
mov
pop
fbld
push
mov
jmp
adc
lret
leave
leave
xlat
repnz
pop
push
js
ljmp
fstp
mov
inc
sub
out
push
int3
xchg
cmp
jnp
roll
fadds
popf
dec
cmpsl
mov
lret
dec
sbb
add
sbb
push
iret
fcmovnu
mov
mov
push
xchg
mov
fwait
shrb
add
test
xchg
pop
xchg
cmp
into
dec
fdivl
out
sbb
push
xor
push
or
testb
repz
rcrb
sbb
mov
lea
aam
push
xchg
push
sbb
xor
cmp
jmp
push
dec
xchg
iret
sub
dec
clc
xor
xlat
push
add
mov
pushf
xchg
enter
jae
movsl
cmp
fwait
cltd
cli
dec
xor
ja
leave
or
negb
mov
ja
rclb
pop
mov
jnp
into
cmp
cmp
inc
sub
sbbl
ja
div
jne
mov
xchg
sub
negb
fldcw
ret
arpl
jmp
dec
das
lods
hlt
out
adc
or
mov
push
dec
and
pop
cs
fld
push
jmp
jne
mov
push
filds
add
mov
xchg
xor
or
or
mov
ret
out
lcall
aas
pusha
mov
repz
sti
cli
out
mov
xchg
xchg
xor
mov
sub
mov
push
mov
cwtl
mov
in
xchg
insl
adc
mov
test
ja
push
in
lods
sub
pusha
fldpi
je
cmp
lea
jg
gs
jae
adc
nop
popf
sbbl
cmpsl
and
in
sbb
jo
stos
lret
sbbb
jecxz
or
mov
add
adc
or
mov
dec
js
mov
mov
add
out
lock
cmp
lret
fdivrp
and
mov
fimull
sahf
popf
xor
xor
cmpsb
dec
inc
mov
test
sbb
jg
lahf
xchg
shlb
xchg
xlat
loope
aaa
pop
je
jmp
jge
stos
sub
xor
sub
ss
dec
jo
jg
mov
lahf
cmpsl
mov
pusha
xor
aaa
iret
sbb
xor
mov
fstpl
fildll
xchg
xchg
outsb
vmread
xchg
lds
push
xor
adc
mov
jmp
xchg
jg
mov
loopne
mov
push
xor
mov
insl
xchg
mov
sbb
fdivl
test
int3
xor
xchg
loopne
movb
push
jb
insb
out
sahf
outsb
push
test
mov
sbb
shlb
in
xlat
ds
xchg
mov
aaa
in
jp
jmp
adc
and
cwtl
cmpsl
lcall
pop
add
sub
enter
pop
ljmp
jne
ja
jecxz
divb
xchg
sub
push
cmp
fucomp
sti
mov
lods
mov
dec
out
aaa
aad
repnz
adc
inc
xor
jp
outsl
sahf
pop
inc
inc
pop
ss
push
and
inc
sbb
adc
test
scas
adc
add
xchg
fcmovnu
test
xchg
mov
push
or
dec
xor
cmp
lret
mov
test
out
out
jb
int
xchg
mov
addr16
imulb
cmpsl
mull
int3
inc
lods
xorb
or
mov
push
out
out
lock
icebp
cmc
xchg
xor
fwait
or
sbb
fidivrl
fwait
sbb
popa
addr16
popa
add
fdiv
shll
dec
test
jnp
inc
jmp
add
xor
int
hlt
add
adc
in
addr16
mov
sarl
jecxz
mov
pop
loop
xchg
mov
mov
jne
xor
jno
cmc
test
test
mov
aaa
xchg
add
add
cwtl
imul
push
ret
jecxz
dec
pop
jb
outsb
cmp
lahf
rsqrtps
mov
mov
mov
sub
nop
outsb
js
out
pop
mov
adc
mov
inc
nop
dec
outsb
shl
mov
stc
pop
dec
cmpsl
pop
out
stc
xchg
jg
shufps
subl
mov
push
das
cs
mov
cltd
in
mov
bnd
stc
xchg
add
xor
adc
ret
jo
inc
xchg
test
jle
insl
add
out
push
jmp
mov
xor
mov
fistpll
xchg
push
ds
loop
xchg
and
dec
add
jle
imul
vpmovzxdq
stc
xchg
in
popa
mov
or
clc
xor
push
jg
xchg
mov
dec
es
pop
ss
mov
sbb
ret
sarb
push
loopne
fwait
popa
bound
inc
xlat
dec
test
insb
xor
out
lods
pop
stos
rolb
mov
adc
outsb
testl
fcoms
jnp
in
jp
xlat
jnp
ja
push
fidivl
fcoms
or
mov
imul
imul
int
sub
or
in
aam
push
add
adc
adc
sbb
arpl
cs
push
dec
sbb
jmp
jbe
xor
imul
add
pop
pop
sub
mov
fadd
test
mov
idivl
xchg
push
sub
shlb
rcrl
test
or
xchg
hlt
mov
pop
adc
xchg
daa
bound
push
and
add
sarl
mov
pop
xchg
pop
subb
mov
sbb
push
cmp
hlt
lock
mov
insl
inc
pop
mov
dec
mov
pop
scas
sbb
lock
stos
test
lret
add
ret
jmp
pop
pushl
xor
aam
xchg
inc
pop
or
pop
movsl
mov
lret
xchg
repnz
pop
push
inc
and
ficomps
imul
scas
call
popa
push
sahf
xor
test
and
and
lea
test
inc
vcvttsd2si
mov
push
stos
pop
jecxz
inc
lahf
and
aad
and
aaa
cmp
icebp
xchg
push
pop
dec
pop
pop
repnz
jge
je
das
jp
push
shr
rolb
mov
sub
mov
insl
mov
jmp
frstor
cmp
jbe
push
test
mov
sti
lds
xchg
sub
jb
movsb
bound
sahf
orb
inc
leave
pop
inc
insl
insb
adc
out
hlt
mov
ret
lods
pop
xor
add
scas
js
test
xor
into
stos
sbb
pop
movsb
aaa
call
push
cltd
ret
mov
push
loop
mov
or
pop
jecxz
sub
or
pop
fwait
add
sub
sbb
in
jmp
mov
aad
scas
pop
mov
fimuls
xchg
add
push
pop
and
cli
jle
sahf
arpl
jmp
mov
fidivl
or
sbb
mov
stc
iret
sub
or
testl
inc
xchg
out
mov
add
push
xor
and
pop
xor
pusha
dec
cmp
xor
scas
stc
jg
das
nop
shrb
mov
dec
jge
lock
shl
fwait
jnp
xor
popf
and
sub
lds
fdivr
in
cli
lds
mov
cli
push
fsubr
cmpsb
cmp
mov
xchg
mov
pop
jb
out
scas
jle
push
lcall
mov
lock
test
push
cmp
mov
cmp
mov
mov
rcl
push
push
lds
mov
inc
in
test
or
call
fdivl
iret
pop
jo
stos
pushf
xor
test
mov
popa
mov
fucomi
jmp
push
jmp
sub
add
pop
xor
in
ss
xchg
push
rcrb
push
jae
insl
add
sbb
cmp
mov
rclb
fldt
sub
add
ret
sbb
ret
push
stc
jmp
or
mov
add
leave
shlb
out
cmp
mov
push
fsubs
dec
sbb
stc
jo
shlb
iret
lret
fadd
adc
mov
arpl
and
andb
rcr
xchg
ljmp
insb
mov
sbbl
dec
cmp
aas
push
lahf
scas
int
loopne
adc
adc
push
sub
xchg
mov
mov
add
lret
aam
arpl
sarb
in
clc
out
cmp
les
add
mov
mov
addr16
mov
dec
xchg
and
popa
cmp
lods
daa
xor
shlb
mov
pop
xchg
sub
jle
mov
xchg
xchg
rcll
in
jb
rcl
mov
xchg
pusha
mov
mov
sub
pop
in
out
jl
sbb
dec
shl
cmp
and
cmp
daa
cmc
dec
or
mov
enter
xor
xchg
int3
pop
dec
sub
cwtl
and
subl
or
jb
daa
mov
cmp
fidivrl
loopne
add
js
ret
mov
icebp
ljmp
ret
adc
imul
jmp
in
leave
lock
and
xchg
mov
adc
adc
pop
cmpsb
les
mov
ficomps
gs
pop
and
xor
pop
mov
shrb
cmp
push
call
inc
lcall
and
adc
jae
shlb
sub
and
cltd
sub
in
pop
cltd
test
adc
mov
jnp
jno
mov
pop
mov
enter
cmp
jp
xchg
ljmp
mov
lahf
mov
in
jb
cmp
test
ret
fcomip
call
sub
inc
mov
je
ret
push
subl
into
pop
mov
mov
xor
or
aam
xlat
cmp
stos
test
adcl
sbbl
es
in
add
dec
lods
and
int
push
push
jmp
stc
cmp
sbb
jo
stos
inc
xchg
push
fld
jecxz
push
adc
mov
mov
pop
mov
xchg
pop
in
adc
adc
adc
jno
adc
lahf
cmp
lahf
lcall
jmp
notl
lds
cmp
lcall
mov
nop
dec
mov
adc
inc
fcoms
std
clc
xor
adc
ljmp
xchg
das
mov
sub
lods
mov
js
mov
mov
cld
mov
ja
bound
inc
outsl
jle
pop
test
loopne
mov
addr16
xchg
and
lcall
jbe
inc
mov
cs
inc
sub
sub
pop
push
movsl
dec
pop
add
jecxz
sub
mov
pop
xchg
imul
push
shrl
mov
int
pushf
pop
mov
imul
sub
dec
jg
in
pop
out
outsl
nop
clc
xor
sub
add
mov
in
scas
cmpsb
mov
pop
inc
cmp
js
pop
xor
mov
xchg
pop
mov
loop
sub
cld
sbb
stc
nop
sub
out
outsb
mov
out
cmc
mov
in
fdiv
xlat
xor
lods
popa
nop
sarl
xorl
mov
ss
cmpsb
mov
and
mov
inc
call
sub
lods
mov
lock
jecxz
ljmp
cmp
loope
sbb
mov
sub
daa
cmpb
lahf
stos
test
cmp
sub
loope
xchg
or
mov
jns
cmp
jns
mov
pop
mov
or
ds
xor
movsb
jg
xchg
xchg
dec
test
mov
bnd
xor
ljmp
test
mov
lret
fdiv
je
std
or
push
pop
stc
adc
jl
out
inc
jb
jns
push
stos
mov
popa
push
xchg
push
and
mov
shlb
fistl
inc
inc
mov
imul
movl
xchg
cmc
scas
add
add
mov
or
dec
add
repnz
iret
jne
fwait
jno
shll
jb
push
out
cmpsl
test
pop
test
jg
das
fisubl
cld
jl
movsl
ljmp
dec
ss
pop
ret
cmpsl
sub
iret
lcall
out
inc
test
inc
inc
fstpt
loopne
mov
cmpsl
jb
and
dec
scas
cmp
out
pop
rcll
pop
mov
mov
shr
fs
loop
orb
or
loope
rolb
or
sub
pop
mov
xor
push
jmp
test
roll
scas
or
inc
push
add
mov
out
add
or
adc
ds
pusha
jo
sub
les
xlat
mov
sbb
ret
inc
es
mov
aad
push
lods
pop
repz
in
push
jp
hlt
or
test
mov
inc
loop
lahf
xor
mov
push
jmp
push
outsl
or
add
shll
mov
mov
das
fsubp
or
push
dec
mov
fnstsw
hlt
shrl
inc
cmp
aas
les
pop
jns
ja
jne
fnstcw
and
dec
mov
js
cmp
pop
or
pop
dec
mov
popa
and
xchg
or
jbe
in
mov
ja
insb
and
fiaddl
dec
fstps
dec
push
fsubrs
mov
daa
aaa
adc
adc
dec
into
gs
fwait
mov
sahf
in
adc
addr16
repz
or
pop
repz
mov
lods
xchg
leave
pop
rcr
ljmp
out
sub
jae
jno
xor
push
push
loope
mov
mov
cwtl
and
mov
aad
xlat
ftst
divl
in
cmp
ret
xchg
imul
add
jns
and
out
call
idivb
ljmp
jno
je
push
push
icebp
pop
cmc
push
pop
push
aaa
stc
nop
imul
lcall
push
jbe
cwtl
sbb
jb
mul
xchg
dec
pusha
mov
shll
cmp
hlt
mov
arpl
jo
or
rcl
lea
pop
cmc
push
test
mov
scas
daa
sub
pop
adc
in
testl
mov
fistpll
mov
aaa
into
arpl
movsl
adc
inc
div
clc
fdivl
into
or
movsb
int3
out
lods
pop
hlt
fsubs
lock
cli
jnp
sub
mov
dec
cltd
nop
mov
out
insb
sbb
mov
outsl
mov
push
mov
setbe
fmull
ret
ss
cld
and
loopne
sub
fmuls
and
mov
popa
or
movb
sti
clc
xchg
pop
mov
ret
pusha
xor
push
popf
out
mov
sub
shll
mov
daa
testl
fnsave
jmp
lock
xchg
sub
adc
cs
fnsave
or
xor
push
dec
xlat
leave
cmpsb
lea
mov
pop
pop
enter
aam
xor
insb
cmp
xchg
icebp
or
aaa
xchg
push
loop
lahf
pop
jmp
add
das
jae
xor
cmc
push
mov
sbb
mov
popf
xor
pusha
mov
int
fdivl
call
mov
out
cli
adc
rclb
outsl
pop
inc
mov
dec
lret
xchg
mov
sub
mov
fwait
mov
in
jne
lcall
insl
sarl
adcb
jb
mov
sbb
lret
and
sbb
pop
lahf
mov
add
daa
inc
pop
push
adc
sub
repz
mov
pop
xor
adc
add
fdivs
jne
pop
stc
jg
xor
lret
pop
js
xchg
aam
je
sahf
popf
not
loope
cmc
pop
movsl
add
mov
loop
jb
jmp
mov
fidivs
xorb
fstl
mov
pop
sar
or
in
popa
outsb
mov
adcb
das
jge
mov
sahf
sub
iret
cmpxchg
enter
or
mov
mov
int
dec
or
dec
ret
inc
sti
dec
and
cltd
push
sub
repnz
clc
lahf
pop
shll
in
imul
sbb
aas
and
call
scas
push
mov
xchg
or
sbb
jae
xchg
aam
lods
stc
aam
das
mov
push
and
xor
hlt
pusha
inc
push
test
insb
push
xor
or
sahf
mov
xchg
fldl2t
lods
sub
aam
xor
mul
mov
mov
xchg
shrl
jge
test
xorl
xor
or
jnp
aas
mov
out
add
shrl
jg
and
popf
lods
repz
add
iret
xor
jne
shll
xor
adc
rorl
mov
cld
jg
mov
loop
add
fistpl
movsb
pop
push
das
or
jmp
push
outsb
add
push
or
jae
xchg
loope
movmskps
push
testb
ficoml
add
add
divl
mov
xlat
popf
lcall
push
pop
dec
jp
clc
mov
and
neg
inc
insl
add
out
aad
in
loope
out
sub
imul
es
leave
int
icebp
mov
outsb
inc
mov
out
xchg
inc
and
daa
incb
sahf
dec
pop
icebp
std
inc
pop
movsb
jb
jns
adc
ljmp
and
and
pop
cmp
fidivs
jmp
and
push
repnz
pop
adcb
jecxz
pop
pop
jne
call
jno
pushf
xor
jg
cmpsb
push
mov
pop
jbe
xchg
cs
jns
push
je
aaa
lret
sub
int
hlt
insl
in
lea
decb
sub
pushf
insl
cmpsb
testl
repnz
jo
in
adc
pop
push
imul
arpl
int
xor
mov
jecxz
xchg
inc
aam
pop
push
cmp
inc
rclb
out
data16
xchg
or
mov
fcomp
jne
movsb
sub
xor
xchg
bound
mov
int
sbb
fsubl
inc
cli
xchg
xchg
rol
test
in
daa
xor
arpl
aad
sbb
inc
ljmp
rcrl
addr16
adc
movsl
std
shrb
aas
enter
lock
fbstp
test
add
jb
mov
out
popf
out
ljmp
mulb
cmpsb
clc
mov
fld
in
stc
outsb
in
push
lret
imul
mov
pop
adc
pop
rclb
xor
mov
xor
jne
jbe
das
inc
leave
xchg
pop
dec
inc
xchg
and
pushf
int3
ss
mov
aam
inc
push
or
jmp
xor
and
int
outsb
stc
lahf
insb
clc
loopne
cli
lea
pop
stos
fdivr
outsb
icebp
inc
mov
nop
je
pop
vpunpckhqdq
cmpb
xchg
sbb
shlb
loop
sub
adc
iret
divb
xor
lahf
lods
jmp
xor
scas
ret
dec
scas
pop
fdivs
insl
in
rclb
or
fs
lods
dec
pop
jae
icebp
adc
xchg
mov
mov
rol
rolb
dec
pop
repnz
mov
jno
enter
pop
icebp
or
nop
test
xor
add
fdivp
or
xchg
sub
or
mov
cwtl
cmp
sub
mov
loope
mov
stc
cmp
or
pop
cmp
jmp
sub
cmpsl
outsl
lret
mov
shl
stc
mov
int3
in
enter
fsubs
hlt
pop
lahf
insl
cmp
int3
inc
jp
addl
lods
xchg
cmp
mov
pop
inc
insb
adc
enter
dec
xchg
jp,pn
push
jmp
negb
adc
insl
and
mov
fnstcw
add
nop
fs
mov
xchg
pop
add
daa
in
ret
jnp
cmpsb
mov
rcrb
mov
xrelease
lahf
pusha
dec
jp
outsb
mov
jmp
or
das
fsubs
mov
stos
xchg
xchg
fninit
ja
mov
in
jl
fidivs
fistpl
add
aad
pop
xchg
fsts
push
mov
sbb
jg
dec
mov
lahf
push
cmp
cmp
mov
fadds
push
mov
movsb
inc
insb
mov
test
dec
gs
pop
push
clc
and
sbb
sbb
dec
mov
or
mov
xchg
ja
not
adcl
cmp
cmp
mov
imul
jbe
shl
cwtl
adc
push
out
inc
and
xlat
sbb
dec
push
lods
call
or
test
pop
adc
loop
aad
out
lret
in
das
ret
and
push
cwtl
out
dec
nop
sub
or
push
pop
fmuls
jecxz
cld
in
jl
mov
and
or
repnz
cs
lret
popa
loop
stc
inc
mov
xor
sub
xchg
jecxz,pn
lcall
xor
cmp
mov
or
into
loop
sub
lods
jnp
cli
nop
sub
test
dec
push
xchg
mov
cmc
and
movsb
add
test
jge
nop
inc
push
ret
push
loope
xor
loopne
jb
sub
mov
loopne
sub
int3
dec
lods
fisubrs
cmpsb
stos
inc
icebp
mov
lock
add
sub
arpl
mov
add
add
popf
insb
cmpsl
int3
xchg
enter
jle
sub
mov
popf
stc
loopne
icebp
mov
inc
roll
pop
cmpsb
das
mov
movsl
fimuls
stos
test
jo
negb
jg
jmp
iret
scas
pop
or
scas
inc
xlat
divb
inc
push
push
xchg
mov
cmp
xchg
pop
test
dec
and
xor
mov
cmp
insl
data16
mov
jne
sbb
cwtl
stos
push
lock
mov
jae
sbb
dec
mov
and
std
lds
test
or
lcall
jno
sub
into
xchg
loop
lahf
dec
lret
rolb
and
addr16
pop
xor
cmc
movsl
mov
cmpb
das
mov
mov
and
or
insb
add
pusha
push
jae
loopne
cmp
mov
in
dec
pop
int
in
test
lahf
lods
xor
fsts
mov
sub
inc
push
pop
dec
stc
shlw
fiaddl
insl
subl
rclb
xchg
fisubl
push
mov
pop
pop
sti
sbb
sub
cmpsb
sub
rcrb
in
push
das
andb
ror
int3
daa
mov
push
sti
rorl
sbb
mov
lock
jns
lds
nop
push
sub
sbb
mov
adc
inc
stos
xlat
loope
xchg
dec
loope
push
xchg
adc
sti
icebp
add
push
nop
daa
inc
cmp
test
shlb
xchg
push
arpl
lock
das
imul
sti
mov
inc
add
int3
jp
scas
test
push
or
andb
sub
pushf
insb
divb
dec
imul
pop
or
mov
pop
xchg
push
add
add
jne
push
iret
xlat
mov
lock
lods
sub
aad
and
iret
sbb
in
sub
je
pop
cmp
adc
insl
sbb
sti
mov
sub
push
xchg
ret
das
test
mov
std
data16
push
rcll
sub
xchg
pop
xchg
cmp
xchg
push
fwait
movsl
cmp
push
fs
data16
sbb
pop
mov
subb
xchg
sub
int3
dec
mov
shrb
fs
aam
test
fildll
and
jae
adc
loope
pushf
das
or
inc
xchg
push
add
jge
push
xlat
adc
cmpsl
inc
cmp
fwait
lock
dec
outsl
pushf
scas
mov
or
push
push
lret
jnp
je
in
popa
daa
fiadds
repnz
sub
adc
test
fs
loop
mov
push
pop
jne
jl
outsl
sub
mov
mov
shll
mov
sahf
jmp
or
add
push
insb
sbb
rclb
push
je
xorb
icebp
bound
jl
call
push
insl
inc
data16
xchg
data16
out
aam
sbb
mov
and
fstl
sub
call
iret
repnz
or
inc
es
arpl
inc
pop
lods
movsb
fs
xchg
mov
pop
addr16
jmp
aaa
sub
stos
and
cmpsl
jae
mov
notb
movsl
add
sbb
clc
aas
mov
lret
pop
xchg
or
mov
in
inc
xor
jnp
and
and
jecxz
cld
mov
int3
les
popa
pop
adc
hlt
and
lcall
cmp
fisttpl
mov
push
lret
addr16
rorb
es
push
xchg
cld
addr16
add
sbb
cli
adcb
jg
cmp
popf
repz
inc
fisubl
in
xlat
loopne
mov
dec
and
add
lahf
stos
xchg
lahf
mov
push
add
sbb
aas
lahf
push
sub
cmp
push
jmp
push
cli
pushf
jns
lret
andb
jb
popf
call
inc
es
pop
cmp
and
std
outsl
jge
mov
cmp
in
test
aaa
jmp
aam
jmp
pop
pushf
rorb
and
and
lods
sub
inc
shlb
call
test
add
push
clc
gs
mov
daa
or
mov
mov
out
xchg
mov
jmp
es
xor
jge
inc
flds
sub
adc
stc
ret
inc
jbe
je
sub
adc
add
mov
ja
inc
in
sub
femms
add
pop
cmp
js
inc
out
ret
sbb
ja
testl
js
mov
ja
cltd
cmpsb
les
xchg
stos
xchg
sub
mov
adcl
xor
push
test
shrb
xlat
mov
pop
cld
jge
pop
stos
lret
pop
jbe
leave
loope
jb
and
and
mov
adc
or
add
fildl
sti
cld
sub
mov
pop
cs
jnp
xchg
mov
loopne
or
jle
sub
mov
mov
cltd
adc
push
fisttps
xchg
mov
shrl
out
mov
movsl
push
add
and
push
cltd
mov
sub
and
mov
std
ret
pop
inc
sbb
sbb
lret
pushf
icebp
insl
and
push
mov
out
data16
push
or
sti
repz
ret
pop
mov
xchg
cld
pop
mov
movsb
jmp
push
pop
cmp
cmp
push
mov
stos
xor
mov
lods
and
mov
sbb
and
mov
bound
pop
loope
iret
push
jbe
xchg
aam
out
and
fstpt
mov
popa
and
jae
ffree
outsl
scas
jno
pop
in
rorl
add
jne
mov
mov
insl
out
leave
add
or
out
xchg
sub
mov
push
rcll
gs
clc
loopne
pop
push
inc
jmp
lret
test
jbe
or
imul
lahf
mov
sar
mov
in
stos
cmp
xchg
push
test
into
imul
push
xchg
scas
mov
jp
pop
aad
lahf
inc
je
shl
pop
xor
mov
add
ret
jmp
lcall
add
dec
add
mov
or
jnp
iret
jbe
sbb
dec
dec
scas
sub
mov
sbb
mov
shlb
js
sbb
lcall
and
repnz
sub
adc
pop
out
test
jno
sbb
jb
or
mov
jno
sub
stc
daa
nop
dec
xor
sbb
xchg
dec
and
xor
sub
pop
pop
decb
sbb
shl
jge
in
mov
sbb
int3
outsb
sub
cld
pusha
fcmove
jge
aad
aaa
mov
leave
test
or
ret
push
jns
iret
gs
adc
dec
inc
arpl
jle
fcom
rcrl
das
pop
cmp
xchg
test
stos
mov
and
lret
jns
sbb
rclb
test
push
out
pop
imulb
daa
cmp
sub
push
dec
and
xchg
xor
xor
inc
push
push
cmp
es
gs
inc
repnz
pop
pop
je
jmp
xchg
sbb
clc
sbb
sub
scas
and
xor
fcomip
gs
out
sub
jl
das
pop
mov
push
lcall
repz
push
mov
mov
sbb
cltd
test
icebp
cs
fisubs
xchg
mov
mov
in
aaa
enter
ja
pop
xchg
adc
xchg
and
into
jp
push
or
loopne
mov
fmulp
bound
pop
mov
xchg
and
pop
add
repz
out
dec
repz
jecxz
shl
and
sub
popa
jns
mov
or
cmp
jl
push
push
inc
out
mov
xchg
in
adcl
mov
xchg
hlt
clc
loopne
notb
scas
or
lock
mov
sub
push
fsubs
add
push
jecxz,pn
mov
adc
push
dec
cmpsb
cmp
scas
mov
and
cmp
pushf
or
inc
sub
mov
fsubrs
js
scas
inc
dec
sahf
mov
dec
sub
stc
jo
adc
push
mov
jg
add
xchg
push
icebp
inc
out
dec
lahf
mov
jl
xchg
adc
lcall
and
in
inc
or
jae
leave
pop
mov
push
push
inc
outsb
stos
adc
jg
add
and
mov
and
pop
mov
dec
push
sarb
sub
lret
neg
test
adcl
fiaddl
push
sub
adc
jae
test
or
scas
ds
xor
cmc
fcomip
push
mov
inc
std
jo
ds
jo
cmp
outsl
in
andb
out
add
lods
ss
jg
xchg
dec
inc
dec
cmpsl
pop
sbb
sub
pop
sti
dec
fsubs
push
xchg
lods
cmp
loope
or
sub
jge
cld
daa
sbb
mov
jb
push
js
movsl
jns
jae
cmpsl
jecxz
push
xchg
sub
sub
push
jp
and
xor
imulb
sti
add
cmp
shl
mov
push
pop
repz
push
push
subl
mov
sbb
cli
cli
repnz
lret
clc
fwait
adc
cwtl
mov
cmpsl
xor
icebp
imul
les
inc
jno
sub
popa
and
loopne
jne
gs
negb
jne
hlt
sub
shl
pop
adc
sahf
jae
in
mov
bound
xchg
push
out
movb
and
mov
inc
aaa
loopne
sbb
jmp
mov
out
ret
xchg
lret
or
mov
cltd
je
hlt
aaa
xchg
mov
shrl
push
pop
mov
or
jnp
cmp
cmp
fwait
or
in
inc
xchg
mov
movsb
mov
repz
add
mov
aam
and
push
dec
push
xlat
popf
sub
push
mov
add
movsb
mov
loopne
repz
xchg
xor
imul
lods
fcoml
std
xchg
adc
pop
lock
adc
mov
push
call
adc
rcrl
dec
and
pusha
jmp
xlat
sub
mov
shrb
popa
mull
jne
popf
cmpsb
inc
jge
hlt
xlat
insb
enter
bnd
push
imul
out
sub
xor
jl
xchg
imul
sub
push
shlb
and
cs
adc
pminsw
add
pop
cmp
addr16
stc
xchg
xor
test
cmp
lds
mov
loop
cmpsb
fwait
into
data16
pop
inc
jo
jle
fisubrs
mov
out
inc
dec
ja
or
insb
add
fmul
and
pop
pop
into
jo
clc
sub
aam
adc
push
xorb
icebp
arpl
insl
dec
mov
mov
jo
mov
fwait
push
lods
int3
scas
jecxz
and
and
cmp
aas
cmp
push
shrb
test
test
cmp
jg
dec
xorb
cmpb
aas
pop
ret
pop
push
fidivrs
inc
sbb
in
add
xor
clc
testl
aaa
arpl
xor
rcrb
adc
jp
xor
xchg
call
mov
loope
fldl
outsl
in
ret
sbb
pushf
dec
inc
push
adc
mov
pop
push
push
pop
xchg
mov
or
sbb
mov
adc
test
pop
rcll
mov
aad
lcall
jno
cld
popa
fadds
dec
mov
in
mov
sti
mov
fsubs
test
jo
cmp
divb
fistl
or
mul
mov
cmc
mov
in
dec
jg
arpl
or
mov
inc
aaa
hlt
addr16
jecxz
loope
insl
sbb
stc
mov
fdivl
cmp
pop
pop
fimuls
int
and
xor
cli
xchg
xor
out
movsl
adc
sub
data16
pop
sahf
pop
addr16
icebp
push
cld
lds
or
mov
sarl
leave
mov
sahf
scas
push
jmp
clc
jne
xor
pop
mov
xor
push
sbb
mov
inc
aad
das
jle
cmc
jge
mov
and
xchg
sub
pop
in
sub
xchg
addb
outsl
lcall
xor
push
xor
xor
jnp
test
cli
add
push
or
xor
xor
mov
pop
sub
jns
inc
stos
enter
int3
jecxz
adc
xor
xlat
and
adc
push
and
fsubl
mov
test
cmpsl
lret
jno
imul
shr
xchg
mov
adc
insb
or
out
mov
dec
orl
cmp
fisubrl
push
ret
js
jb
lods
mov
or
insb
mov
mov
stos
daa
out
in
addr16
xor
hlt
outsb
repnz
movsl
addr16
sub
insb
mov
popa
sbb
in
and
nop
xchg
mov
popa
addl
aas
jmp
sub
sbbb
ja
jecxz
adcl
adc
out
aas
int
cmp
mov
mov
mov
push
fbstp
sub
ret
push
jae
and
xchg
inc
nop
mov
mov
inc
jno
push
in
cld
adc
inc
call
xchg
or
cmp
fwait
mov
mov
push
pop
aam
add
gs
jbe
cmp
je
sti
int
cmp
stos
sub
into
arpl
test
adcb
jno
outsb
testl
push
cmpsb
cmp
call
pop
stos
nop
insb
cltd
fcomps
scas
mov
bound
clc
or
lods
es
imul
ret
add
sbb
filds
arpl
bound
xchg
pop
dec
cmc
xchg
adcb
loop
and
fisttps
clc
sarl
add
mov
or
mov
movsl
ficompl
aaa
jo
push
out
sbb
push
add
mov
push
call
dec
shrl
fsubl
ret
call
mov
push
jg
pop
xor
mov
into
std
inc
lret
pop
out
jbe
xor
sbbb
pop
sbb
xor
mov
ret
subb
xor
mov
sbb
movl
out
xchg
cmc
push
jmp
sub
mov
fwait
insl
sbb
mov
jns
push
xor
jns
inc
loopne
adc
test
imulb
ret
mull
mul
xchg
adc
inc
xor
mov
loopne
aam
jmp
or
in
inc
call
lcall
mov
out
into
fstpt
adc
int3
inc
and
fdivrs
stc
lret
imul
lock
inc
mov
and
enter
add
sarl
mov
cmp
mov
lcall
pop
jae
mov
or
or
iret
mov
lret
inc
fwait
aas
pop
xor
pop
pop
aad
push
dec
jns
add
insb
and
push
or
dec
xor
xor
add
xor
xchg
sub
pop
cmc
adc
pop
outsb
mov
cli
test
mov
fcompl
les
icebp
inc
movsl
xor
push
mov
int3
data16
aam
and
es
mov
sar
call
shlb
in
xchg
mov
xor
add
mov
adc
or
hlt
mov
outsl
loop
pop
pop
lock
roll
testl
push
insl
clc
cmp
add
in
jnp
xchg
insl
jge
scas
ja
cltd
jnp
sub
inc
add
mov
dec
fistpll
xchg
sbb
add
push
loope
xor
and
faddp
adc
jno
xor
data16
out
test
adc
mov
or
stos
or
divb
idiv
adc
fs
jno
jne
les
stos
mov
jmp
mov
sub
test
jbe
dec
daa
and
jecxz
mov
dec
pop
push
sbb
dec
inc
xor
js
movsl
sbb
test
sbb
rorl
stc
add
cmpsb
lods
out
call
into
sub
and
enter
sub
xchg
loope
std
dec
push
mov
mov
sbb
rorl
mov
push
xor
adc
pusha
cld
lahf
in
cltd
mov
jp
push
clc
call
mov
dec
pusha
jp
push
shl
out
sbb
dec
adc
repz
push
in
cwtl
gs
push
mov
adc
push
outsl
jg
and
adc
ret
jp
iret
mov
push
mov
pop
stos
mov
xor
xchg
mov
arpl
adc
mov
mov
xor
loope
mov
mov
xor
cltd
cmp
popa
icebp
and
and
js
jl
std
es
mov
std
aas
sub
pop
movsl
mov
xchg
in
fcompl
add
inc
int3
das
adc
jns
xchg
pop
push
lret
mov
scas
inc
subl
inc
imul
adc
ds
lcall
xchg
dec
popa
jecxz
sbb
cmp
jae
cmp
mov
js
push
sahf
clc
lcall
dec
imul
inc
cmpsb
in
inc
cmp
sbb
xor
inc
inc
js
out
push
fmulp
xlat
test
lods
dec
inc
adc
or
push
test
mov
xor
sbb
dec
or
cmp
push
es
mulb
fs
xchg
fisubrs
dec
add
mov
sub
jo
mov
aam
jnp
mov
xlat
xchg
cmp
call
xor
cmp
fwait
jae
pop
jle
lods
jmp
orl
aas
imul
rolb
adc
and
loopne
or
data16
add
das
test
inc
push
push
repz
sub
or
out
iret
pop
iret
enter
jg
mov
push
leave
cmp
clc
push
mov
xchg
fs
movsl
in
insl
iret
xor
xor
mov
rclb
ret
xchg
xor
popf
xor
js
xchg
negl
cmp
pop
sahf
ja
pop
fwait
push
cltd
and
les
fisubl
jnp
mov
mov
std
lods
cmp
dec
dec
push
call
test
ret
push
stc
rorb
cmc
xchg
aas
lods
mov
push
outsb
roll
mov
or
pop
mov
rcl
xchg
popf
xor
mov
inc
dec
mov
rol
fs
iret
mov
mov
mov
dec
adcb
mov
push
and
lods
mov
push
repnz
leave
sbb
hlt
inc
popa
andl
pop
inc
jmp
les
insb
dec
pop
mov
mov
sub
xlat
sbb
in
dec
mov
lret
daa
sub
jbe
mov
jne
movsb
and
and
movb
in
mov
mov
mov
insb
xchg
xchg
cmpsl
mov
mov
push
mov
fimull
ja
inc
sti
dec
in
xlat
lcall
add
xlat
mov
pop
outsb
or
lds
dec
jmp
xchg
ss
mov
push
lock
fisttps
mov
mov
repnz
sahf
aas
xchg
sarl
inc
outsl
ljmp
mov
ret
pop
stc
cmp
in
lds
inc
lcall
xchg
mov
mov
popf
add
stc
push
cmp
adc
jns
pop
inc
sub
loopne
sub
scas
jae
std
fs
sub
lcall
cs
adc
xor
lret
adc
cmp
out
xlat
add
push
fdivrl
imul
cmp
je
fdivl
sub
mov
cmp
lcall
insb
mov
mov
xor
aam
fnstenv
push
scas
negb
mov
xchg
add
enter
in
cld
pop
lret
in
std
int
ss
outsl
or
push
push
insb
xchg
pop
cmpsb
xchg
movsb
mov
pop
xchg
addr16
imul
popa
out
test
clc
stos
mov
xlat
push
sbb
mov
inc
mov
inc
dec
fcomi
mov
nop
push
in
pop
aad
mov
loop
or
imul
leave
pop
out
enter
data16
dec
mov
jle
xchg
icebp
xchg
sbb
leave
adc
inc
ljmp
push
cmp
out
lea
jno
pushf
aad
pop
shl
jns
lods
pop
out
fcmovu
adc
or
fdivrs
add
out
ret
negb
cmp
mov
nop
inc
pop
cmp
dec
jo
movsb
sub
mov
pushf
std
sbb
rorl
jnp
dec
pop
ljmp
pushf
pusha
je
ss
imul
in
push
loop
mov
sbb
shlb
add
sbb
pop
jmp
loopne
sbb
adc
push
cwtl
out
data16
mov
xor
dec
shl
sbb
cmp
lret
test
sbb
dec
xchg
popf
cmc
cli
xor
cmc
jecxz
lds
repz
cmp
sbb
lret
test
mov
cwtl
mov
incb
stos
nop
enter
inc
mov
sub
push
scas
inc
or
lahf
ss
dec
js
xor
imul
or
fs
loop
or
test
jno
loop
jmpw
mov
fstl
push
out
jo
ret
mov
shlb
iret
enter
sub
int
or
sub
int
int3
in
leave
push
loope
adc
rcrl
add
dec
icebp
lods
lret
hlt
lods
jg
sub
rcr
hlt
pop
fstpt
fdivrs
test
dec
push
shll
ss
xor
xchg
cmp
dec
fdivrs
cld
xlat
jb
adc
jns
shlb
sbb
push
pop
repz
add
fcmove
xor
mov
fldl
nop
lds
mov
mov
fldl
mov
sahf
xor
push
cmp
aaa
add
xor
and
adc
pop
adc
jo
add
cmp
push
xor
into
fcompl
bound
outsl
in
rolb
mov
divb
inc
fadd
pop
mov
lods
les
sub
push
call
or
idiv
cld
lcall
push
testb
add
mov
bound
aam
mov
js
jmp
push
pop
fldenv
cmp
xchg
ret
add
push
cmp
dec
add
mov
add
stos
dec
xchg
or
or
xor
xchg
inc
aad
xor
pop
icebp
out
daa
inc
or
or
push
sti
jbe
ficompl
push
fsubp
notl
or
out
mov
dec
rcl
iret
in
fisubrl
sbb
scas
imul
out
mov
mov
jmp
mov
mov
mov
cli
xchg
sub
test
mov
jnp
jl
inc
sub
push
insb
andl
cmpb
mov
lret
ljmp
push
mov
fistl
loopne
inc
adc
andl
push
add
xor
cmp
add
mov
inc
jns
bswap
mov
xlat
lods
dec
hlt
mov
in
push
jno
xor
push
popf
repz
sub
inc
js
cmpsl
mov
sub
pop
in
cmp
popa
push
hlt
adc
orl
xor
lds
inc
dec
lahf
xchg
lcall
notl
mov
sti
push
fwait
pushf
pop
cmc
int
fstpl
lea
push
mov
jne
pop
test
stos
cld
loopne
arpl
fwait
lds
sbb
mov
out
add
and
testb
cli
sub
cli
pushf
out
mov
out
hlt
sub
ljmp
jae
test
pop
inc
pop
jg
out
push
stos
pusha
rcrb
loopne
mov
mov
subb
flds
inc
sbb
cmp
repnz
dec
push
xor
fbld
addr16
inc
inc
mov
sub
push
xchg
inc
cli
and
jg
dec
inc
jno
mov
mov
loop
push
out
mov
cmp
js
inc
idivb
adc
leave
test
ror
pop
and
mov
dec
aaa
xlat
js
push
lds
cmpsw
push
add
pop
cmp
or
imulb
movntq
out
push
jno
pop
adc
mov
push
jge
cmp
js
sub
jb
xchg
mov
lds
sbbb
inc
inc
jecxz
sbbl
mov
push
mov
add
out
mov
cli
cmpsl
std
enter
aaa
int
mov
dec
incl
cltd
and
ja
shll
ja
push
bound
stc
mov
imul
xchg
add
pop
push
and
xor
jae
or
and
lret
xlat
xor
ret
loop
push
pop
scas
cltd
pop
mov
mov
mov
aaa
mov
cli
push
jbe
enter
lcall
out
icebp
dec
int
addb
das
pop
dec
dec
test
xor
sub
inc
and
dec
mov
scas
loop
adc
ss
shr
xchg
scas
fdivp
ficompl
fnstenv
sub
in
adc
sub
push
imul
sbb
dec
jecxz
jb
lcall
out
cmpb
dec
push
aas
cmp
in
leave
cmp
pop
push
out
lods
test
roll
in
aaa
mov
rcrl
mov
dec
aas
inc
es
fidivrs
push
and
mov
loopne
xor
and
subb
sahf
sbb
push
lods
dec
sbbb
cmpsl
or
xor
or
xor
adc
mov
sub
dec
sbbl
into
gs
push
sub
mov
and
rorb
mov
dec
jecxz
test
jge
in
pop
jg
mov
mov
outsl
fnsave
pop
cmp
cmp
mulb
in
test
xor
mov
js
mov
pop
aad
pop
cmpsb
pusha
psadbw
testl
icebp
mov
frstor
jecxz
mov
push
mov
iret
jne
scas
divb
sbb
sub
jae
andb
or
and
insb
push
aam
xchg
dec
repz
xorb
cmp
dec
pop
das
jne
lahf
push
loope
ss
sahf
dec
inc
lahf
fdivrp
f2xm1
xchg
das
fcmovnu
cmpsb
cmp
aam
negl
mov
push
adc
and
je
and
push
pushf
add
loop
mov
xor
aad
inc
jns
data16
dec
push
mov
lods
jge
lock
test
cmpsb
test
pop
aad
icebp
aam
cmp
scas
in
pop
imul
dec
jmp
out
jnp
inc
cli
add
dec
jo
lods
mov
inc
es
dec
repnz
mov
mov
push
sub
stc
nop
fisttpl
or
js
adc
mov
and
mov
mov
pop
mov
std
mov
out
test
shll
dec
in
stos
mov
sbb
ds
repnz
push
ljmp
in
into
sbbb
scas
push
or
adc
cmpsl
out
std
cmp
test
mov
clc
cmpsb
test
mov
cmp
lcall
lret
cmp
mov
xchg
repnz
jmp
xchg
fdivl
nop
daa
mov
ret
scas
call
mov
test
xor
pop
mov
mov
movsb
jne
dec
cmp
dec
jp
cmp
mov
xchg
cli
jne
out
mov
lahf
and
es
leave
ja
mov
repz
call
clc
cld
sahf
xor
sub
je
call
movsb
push
mov
lock
pop
clc
incl
inc
sub
into
enter
xchg
cmp
adc
stos
inc
xor
jbe
cs
sub
jl
pusha
dec
push
inc
out
jae
mov
push
lods
aas
lcall
rcll
es
icebp
iret
data16
es
xor
inc
out
cmpl
mov
dec
in
lds
mov
sbb
dec
adc
test
or
arpl
leave
ljmp
sbb
lcall
lea
push
lods
inc
inc
push
push
popa
test
xchg
sti
jmp
cmp
pop
call
add
test
mov
or
inc
repz
repz
jle
lods
clc
push
movsl
sub
pushf
xor
dec
sub
andb
mov
jmp
or
pop
cmp
push
out
push
pop
ret
pop
mov
mov
shll
inc
sub
insl
ss
or
adc
repnz
fsubrl
xchg
xchg
sub
cli
imul
in
dec
pop
dec
mov
jl
sbb
jo
inc
fidivrl
loopne
clc
adc
add
outsl
pop
stc
mov
adcb
adc
sub
xchg
cmpsl
cld
adcb
leave
sbb
jge
jne
inc
mov
mov
loopne
inc
adc
xor
pop
cmp
dec
lahf
shlb
icebp
rcl
repnz
inc
sbb
dec
je
test
fidivs
lret
cld
xor
xchg
imul
push
lods
into
add
and
push
jmp
ds
outsb
add
xchg
out
sbb
aaa
adcb
add
aaa
xchg
mov
into
gs
outsl
push
mov
movsb
cmp
mov
mov
sbb
ja
sbb
add
nop
daa
pop
call
xor
test
int3
ss
mov
sbb
xchg
sub
push
mov
ret
clc
nop
mov
xlat
dec
call
fdivl
cmp
scas
inc
decb
xchg
push
fsubrl
scas
sub
arpl
sub
cld
js
lea
enter
outsb
inc
fistpl
mov
mov
sahf
add
scas
xor
iret
orw
mov
shrb
and
mov
jae
jb
xchg
xchg
sub
bound
inc
sbb
pop
cmc
xor
pop
cwtl
jmp
sbb
mov
pushf
in
xor
pop
mov
mov
push
cli
xchg
pop
mov
sarb
mov
mov
js
add
or
sbb
cmp
cmp
or
in
mov
sbbw
in
xchg
sbb
ret
pop
cmp
jp
jecxz
mov
mov
ret
lret
arpl
xchg
out
xchg
adc
or
cmp
pusha
xchg
out
scas
adc
or
mov
jecxz
pop
adc
pop
scas
cmp
loop
je
mov
lock
dec
pop
sahf
jp
dec
in
test
inc
fdivs
inc
sbb
and
arpl
das
dec
ja
jge
mov
lock
sub
xor
jnp
sub
repz
push
in
cmp
mov
and
adc
fidivrs
and
adc
fbstp
inc
arpl
jno
icebp
mov
mov
in
in
dec
jecxz
cmp
stos
jo
es
in
jae
cmp
rcrl
shrl
mov
int3
arpl
out
test
rcl
hlt
or
cmpb
ret
pop
pop
leave
add
inc
and
es
frstor
mov
ret
shrl
sbb
dec
sub
faddl
les
loope
and
mov
fbld
jp
sbb
dec
and
push
rorb
lret
negl
shlb
and
and
lds
xorb
xor
push
loop
mov
testb
sub
int
les
stc
or
cwtl
inc
xor
mov
push
mov
in
adc
insl
inc
aas
cmp
insl
shll
or
adc
fwait
xor
adc
repz
jge
daa
pop
scas
push
fidivrl
aad
ret
repz
xchg
push
daa
cmp
cs
aad
scas
fstpl
mov
lds
in
adc
outsl
inc
je
loop
push
jns
lret
jae
std
roll
repz
mov
inc
jo
inc
mov
ret
leave
pusha
stc
mov
adc
and
xchg
push
movzbl
ja
mov
gs
loope
ret
clc
mov
test
or
cmp
lock
pop
aas
mov
mov
mov
pop
loopne
xor
push
mov
xchg
mov
inc
std
mov
nop
xchg
push
cmp
test
sbb
xor
hlt
mov
pop
adcb
inc
lcall
xchg
pop
xrelease
adc
xor
fwait
popa
scas
pop
neg
mov
sub
je
or
les
xor
pusha
fwait
jecxz
roll
mov
sub
cmp
push
dec
push
call
inc
cmpsb
xlat
outsb
aam
std
xchg
xchg
cmc
xchg
and
call
insb
icebp
movsl
cmp
mov
pop
mov
mov
mov
sbbl
sub
or
sub
call
enter
dec
jecxz
mov
gs
xchg
xor
push
xorl
mov
shll
or
and
and
push
mov
xchg
cs
add
xor
pop
inc
pop
nop
push
add
push
mov
mul
jno
mov
add
xor
pop
sti
xchg
mov
mov
inc
movsl
pop
hlt
shlb
mov
sti
mov
movsb
hlt
inc
jmp
jae
mov
int
test
lcall
push
inc
aas
jne
inc
pop
enter
xchg
mov
sbb
data16
cld
ljmp
inc
xchg
test
adc
test
jnp
xchg
fdivrs
fldenv
or
mov
push
fmuls
cmpsl
mov
adcb
arpl
daa
sbb
push
fsubl
les
popf
scas
pop
mov
push
shlb
add
add
inc
and
or
fnsave
iret
data16
sti
xchg
hlt
sbb
push
movsl
inc
insl
cli
xchg
fwait
push
lods
inc
in
mov
add
ds
and
inc
mov
lds
mov
sti
pop
ss
fsub
inc
and
out
push
or
jo
adc
cld
xor
or
in
test
push
cli
scas
push
push
shrl
divb
decb
mov
mov
shll
clc
sub
fdivl
mov
sub
aas
sbb
fists
sahf
das
ret
mov
sti
or
shrl
mov
rcll
adc
jecxz
ds
decb
push
lret
shrb
ja
cmc
xor
mov
xchg
lock
or
lahf
pop
sbb
in
jl
mov
out
pop
enter
aam
or
cmp
pop
pop
sub
cmpsb
jl
mov
jns
jae
repnz
bnd
jl
mov
inc
push
pushf
lret
push
das
inc
sub
jne
mov
or
fwait
xchg
adc
sahf
pop
repz
icebp
sbb
or
mov
in
pop
dec
loop
push
call
add
add
daa
mov
ret
call
test
mov
daa
lcall
dec
mov
fisttpl
dec
add
pop
sbbb
sbb
push
lea
and
jbe
mov
adc
push
lret
addl
scas
jne
fistps
mov
xlat
xchg
ja
aaa
sub
test
mov
repnz
adc
ljmp
jge
sub
jnp
negb
arpl
pop
stc
jle
aam
pop
cmp
or
call
mov
lock
sbb
pop
pop
ret
shrl
daa
xor
movsl
mov
or
in
cmpl
insl
mov
mov
mov
lcallw
cltd
jge
fisttps
repz
fstl
out
sbb
mov
sbb
dec
mov
cltd
or
fcoms
or
cld
pop
sub
adc
dec
dec
jmp
mov
cmpsl
push
lds
call
test
jnp
test
push
jmp
leave
pop
ret
shl
inc
ret
mov
daa
mov
mov
fsubrl
pop
xchg
shll
sub
in
inc
mov
push
shrl
sbb
lea
aam
pop
sbb
pushf
cmp
jle
adc
xchg
xor
test
icebp
sub
add
dec
xchg
adcb
and
pop
mov
jno
negb
push
mov
std
inc
mov
fcomps
mov
stos
xor
cli
rorb
int
shr
arpl
in
sti
into
scas
sahf
popa
cmc
int3
push
out
fidivrl
and
or
cmp
sub
stos
jne
decw
add
cmc
enter
into
mov
out
fdivs
out
fadds
jg
pusha
inc
shrl
aas
push
mov
mov
das
out
lahf
test
push
pusha
pushf
push
loopne
movsb
ret
pop
pop
les
dec
in
push
inc
mov
daa
push
shll
hlt
mov
add
mov
lock
sarl
sub
insb
xchg
lret
ja
lret
iret
mov
stos
pusha
cli
inc
dec
pop
rcrl
jmp
aas
sub
lea
fdivrl
adc
ret
lds
in
pop
add
stc
xor
lret
push
iret
aad
int
mov
push
into
les
inc
lods
jmp
lea
ds
repnz
fiadds
fsts
data16
cmp
dec
pushf
xchg
out
movl
popf
mov
leave
cmp
push
enter
sub
adc
sbb
aad
ljmp
hlt
lret
es
lret
subb
call
inc
mov
sbb
inc
lcall
pop
imul
icebp
jp
pop
fldl
jge
stc
inc
mov
aam
sbbb
pop
std
push
pop
ret
inc
sbb
inc
mov
xor
and
mov
inc
hlt
and
inc
mov
mov
push
mov
mov
fs
adc
cli
ss
mov
mov
push
adc
mov
mov
call
jmp
push
add
popf
push
fidivs
sbb
mov
lea
out
add
popf
popa
sbb
xor
cltd
jp
icebp
sub
mov
je
lods
push
sahf
or
jae
add
mov
pop
andl
ss
mov
jo
in
or
push
lahf
mov
mov
andb
push
fisubrs
sti
xor
jp
out
cmp
mov
mov
inc
rcrb
inc
jle,pn
mov
push
jg
mov
xor
pop
shlb
icebp
sub
cs
dec
fs
inc
dec
or
push
push
imul
push
sbb
into
addb
fbstp
loope
rclb
mov
les
dec
mov
jb
xor
xchg
add
daa
imul
call
mov
in
or
in
jmp
jecxz
into
bound
add
mov
xor
pop
mov
cmc
das
pop
out
imul
das
or
sbb
mov
ljmp
push
lret
sti
xor
mov
ret
enter
movsl
into
out
xor
fisttpll
lods
pop
hlt
mov
out
inc
ret
out
mov
and
mov
cld
and
mov
filds
pop
mov
ret
cmpsl
outsb
aam
jmp
fadd
mov
stc
dec
mov
ljmp
pop
mov
add
cltd
xor
imul
mov
adc
jmp
int3
sbb
jp
push
push
icebp
hlt
cs
pop
mov
mov
loope
in
test
in
icebp
int3
shlb
mov
movups
pop
std
xchg
jo
lods
push
frstor
pop
sarl
inc
lock
sub
gs
insl
mov
xchg
mov
xor
mov
dec
popaw
stc
fsubrl
lea
aam
lock
sahf
push
loope
aaa
xor
psubd
push
out
fidivrs
ss
pushf
adc
pop
adc
sbb
add
cld
popf
sub
and
or
imul
fcoms
aas
icebp
shrl
ret
cld
nop
push
add
and
push
subb
xor
pop
or
out
jecxz
mov
out
test
shrl
aam
les
mov
neg
inc
lret
into
popa
cmc
in
push
cmpsb
mov
sti
loope
pop
les
scas
popa
mov
xchg
xchg
pop
cmpsl
fnstenv
dec
push
dec
and
jno
jb
xor
xchg
addr16
push
mov
mov
imul
jmp
push
add
pop
add
push
pop
xor
test
push
inc
cmp
ja
fs
test
push
sbb
sahf
xor
hlt
push
arpl
push
jg
fnstenv
or
andb
mov
insl
or
scas
and
fcoms
inc
mov
cmp
dec
rcr
jp
xchg
lods
fstpt
sbb
fdivl
or
fisttpl
lock
hlt
call
mov
fdivr
xor
scas
test
cmp
sbb
roll
push
out
pop
fisttps
pop
sbb
movsl
or
pop
xchg
mov
loope
ss
fcmovnu
push
jmp
scas
test
or
xchg
push
outsb
cltd
xchg
xor
jle
test
test
dec
ret
dec
ret
xor
jne
dec
mov
test
ret
adc
loop
in
scas
into
dec
sbb
cmpsl
mull
cld
xchg
ja
dec
ret
xor
sub
ds
inc
mov
jae
test
xchg
pushf
cmp
jns
dec
xchg
adc
push
mov
std
xchg
inc
jbe
push
push
movsl
push
mov
clc
loope
fnsave
mov
lret
mov
icebp
pop
lret
out
jg
sbb
adc
loope
out
cmp
cs
clc
frstor
cli
cmp
and
shrb
lods
pop
ficompl
lds
add
fisubl
aas
mov
ds
dec
mov
adc
sahf
sbb
pushf
or
dec
ret
xchg
sub
adc
test
aam
add
sub
push
aas
aad
xchg
add
adc
sbb
stc
lcall
or
cs
sub
iret
cmp
hlt
jecxz
lret
cmpsl
fs
cs
sub
jbe
enter
sbb
adc
lods
pop
int
verr
cmpsb
les
mov
data16
mov
cmp
lods
pusha
cmpsb
jg
pop
cmp
jbe
sub
ror
mov
pop
or
test
lret
rclb
aam
dec
aam
adc
and
mov
jmp
xchg
addb
mov
push
add
adc
pop
xchg
cld
pop
sub
pop
data16
xor
push
sub
pushf
xchg
into
inc
mov
outsl
mov
cmpsb
or
cmp
xchg
xchg
in
pop
and
pop
stos
addr16
repnz
aaa
jmp
xlat
test
and
sbb
xchg
imul
mov
push
repnz
xor
ret
cmp
call
mov
fisttpll
test
jg
jle
push
fcomps
pop
fiaddl
out
xchg
je
stos
pop
repz
dec
cmpsb
jnp
push
mov
aaa
push
xchg
mov
mov
mov
inc
add
clc
adcl
push
faddl
and
adc
bnd
jg
mov
out
icebp
cmpsb
es
adc
xchg
dec
jmp
mov
loop
or
add
daa
movsb
outsb
fwait
arpl
pop
ljmp
ds
xor
or
push
call
test
cld
insl
mov
cmp
or
les
fsub
in
cmpl
mov
in
add
popa
hlt
push
sahf
loopne
jp
daa
cmpsl
pusha
rolb
fidivs
push
mov
inc
js
pop
repz
into
push
jnp
push
fisubl
pop
jns
push
aas
fwait
aaa
out
sbb
or
push
mov
pop
push
andb
lds
xchg
js
mov
adc
or
add
pop
lahf
orl
jp
lcall
aas
stos
jno
xchg
loope
ljmp
popl
ds
jnp
sbbb
pushf
push
add
stos
loope
push
insl
xchg
jo
sub
mov
cmp
fists
rorb
push
scas
inc
test
mov
sub
mov
mov
xor
push
sub
mov
or
xchg
pop
inc
fldt
push
test
jle
bound
xor
fwait
push
pop
rclb
outsl
add
pusha
int
push
mov
lock
xor
add
or
inc
xchg
dec
jae
jp
mov
sbbb
pop
mov
fdivrl
or
xchg
lea
jmp
sub
mov
repnz
sbb
push
pop
fs
jne
mov
sarl
dec
mov
xchg
sub
sbb
lods
pop
es
xchg
sub
sub
pusha
or
scas
inc
add
popa
loope
movsl
sarl
adc
lret
mov
mov
imull
fmul
jnp
and
cmp
adc
push
add
push
mov
pop
mov
push
fmuls
data16
aas
addr16
gs
or
enter
xchg
dec
adc
dec
add
fs
dec
add
imul
xchg
mov
lds
in
orb
bound
sbb
js
movsb
cmp
sarl
pop
hlt
sub
ds
repnz
test
ret
dec
cmp
roll
aaa
cs
test
xchg
dec
les
xor
xchg
pop
push
je
add
jno
xchg
iret
push
es
mov
fs
loop
pop
in
push
shrb
sarb
sub
mov
push
or
test
or
addb
and
repnz
sub
popa
cli
cs
sahf
imul
sub
fsubrl
mov
ds
nop
std
xchg
sub
jecxz
cmp
adcl
sbb
roll
jo
es
mov
out
mov
loope
xchg
xchg
mov
push
lahf
mov
jmp
xor
jo
aad
fildl
xlat
mov
mov
ss
mov
cmp
pop
icebp
outsb
pop
mov
sub
mov
jae
pop
and
lods
inc
popf
mov
add
pop
sbbb
repnz
sbb
mov
lock
loop
push
ret
push
je
mov
je
subb
push
roll
movsb
pop
rorl
in
xor
cmp
dec
sub
jp
pop
repnz
dec
jnp
xchg
inc
pop
cmc
push
pop
push
jns
push
inc
clc
xchg
add
xchg
inc
mov
sub
mov
imul
inc
inc
pop
testb
xchg
pop
xor
mov
push
addr16
pop
push
push
ret
jno
popa
dec
das
mov
push
pop
jno
pop
jae
mov
aaa
dec
fs
pop
subb
cmp
push
int
xchg
push
shll
shr
or
xchg
dec
jmp
ficomps
sbb
fdivrl
movsb
stc
sbb
aam
test
rcr
sub
push
sbb
mov
dec
or
or
ret
dec
pop
push
loopne
push
mov
cmp
js
hlt
das
xor
sahf
xor
push
in
pop
mov
mul
sbb
and
rclb
cmpsl
lea
lret
mov
std
popf
xor
cltd
lahf
cmp
xchg
jle
loopne
push
adc
and
xchg
popa
mov
cmc
xchg
addr16
or
mov
lcall
mov
dec
je
push
pop
pop
out
cmp
imul
lock
mov
dec
movsb
popa
int
dec
ret
pop
cltd
sub
push
xchg
jb
sbb
lods
pop
sbb
movsb
pop
pop
push
cmp
mov
sbb
add
gs
mov
cmc
addl
testl
rorb
or
inc
stos
test
ljmp
inc
pop
fnstsw
mov
mov
mov
js
xor
add
mov
fdivrl
std
loope
inc
iret
loope
out
enter
adc
sub
add
enter
aas
out
xchg
xchg
pop
fsts
das
movb
xchg
xor
mov
jp
mov
andl
mov
testb
popf
mov
es
sbb
fwait
sub
sbb
cmp
cltd
or
inc
fwait
pop
lcall
or
jne
xchg
push
out
sub
adc
and
jmp
rol
loope
call
cmpsl
lret
or
dec
lods
fistpll
testb
repnz
cmc
es
orb
hlt
js
scas
jne
pop
or
sbbl
mov
or
sbb
push
fwait
or
jle
clc
inc
pop
lock
ds
orl
jp
insl
pop
addr16
dec
mov
scas
pop
mov
adc
push
pushf
js
aaa
int
cltd
and
sub
mov
or
iret
cmp
into
push
jecxz
dec
mov
fdivl
sbb
daa
mov
out
xor
lock
inc
jns
mov
pop
nop
adc
push
cmpsb
pop
dec
in
mov
cltd
std
rclb
out
testb
fstps
sub
scas
lods
loop
fucomip
push
adc
stos
out
stc
cwtl
sbb
jae
lock
ret
jo
dec
ss
lahf
push
push
lret
and
sub
fmuls
cs
int
mov
cmp
mov
into
jg
je
les
dec
inc
dec
push
lret
outsb
inc
scas
popa
imul
xchg
add
pop
mov
shrl
mov
xchg
cs
mull
in
mov
movsb
and
mov
ja
cmc
test
movsl
popa
ror
clc
ror
mov
adc
shlb
js
pushl
mov
loopne
fimuls
push
ret
in
leave
int3
dec
mov
loopne
pop
ror
stos
fnstenv
rcrl
out
cmpsb
popa
out
jge
or
xchg
mov
sbb
lods
pusha
and
insl
test
mov
sar
out
jne
in
stos
xor
mov
out
lods
push
in
outsl
jmp
sti
es
ficoms
pop
adc
mov
sub
sbb
in
mov
test
sti
cmpsl
jp
lods
dec
shl
cmpsb
insl
jmp
sub
push
or
or
icebp
pop
mov
adc
xchg
adcb
jle
repnz
adc
mov
icebp
sbb
xchg
pop
mov
pop
mov
ss
add
jno
adc
sub
es
into
inc
fistps
cmp
mov
dec
repnz
lea
mov
push
adc
orb
and
xchg
pushf
xchg
test
mov
sarb
xor
es
cli
repnz
aaa
push
lods
es
pop
movl
cmp
out
mov
std
and
fcomip
mov
mov
jecxz
je
dec
mov
ss
icebp
sub
push
out
data16
and
bound
setle
sub
stos
jbe
imul
pushf
xchg
mov
mov
aaa
arpl
xchg
orl
push
addr16
mov
xorb
imul
mov
popf
cmp
sti
ss
cmp
sbb
loop
sub
xlat
pop
ret
imulb
shll
or
into
aam
aad
add
or
icebp
mov
push
ror
sbb
cltd
pop
or
out
andl
mov
cmp
push
roll
xchg
xor
in
jecxz
mov
sbb
pop
shl
mov
sbb
jmp
aaa
fiadds
frstor
in
and
in
pop
jno
outsl
cmpsb
adc
xor
mov
insl
sub
arpl
pusha
imul
pop
popa
fwait
pop
cmp
gs
cmp
pop
enter
inc
push
dec
inc
mov
ljmp
and
xchg
push
mov
clc
cwtl
push
out
mov
sub
int
mov
pop
out
iret
out
push
mov
std
xchg
push
jmp
pop
and
pushf
subl
mov
scas
clc
pop
lret
loop
test
out
test
rcrb
int3
lds
push
out
and
push
mov
ljmp
and
push
push
aad
data16
inc
aaa
cmc
and
in
jbe
loope
sub
adc
bound
push
inc
pop
call
popf
fcmovb
cmp
aad
loope
sarb
psrld
jbe
xor
sbb
mov
inc
mov
xchg
insl
fcomps
inc
movsl
stc
hlt
sbb
repnz
mov
out
jmp
fsubr
mov
dec
pushf
jg
fadd
cmp
fnstsw
ja
add
adc
ljmp
add
mov
push
sbb
fldl
cwtl
in
sub
int3
cmp
test
cmp
insb
mov
xor
xchg
shll
or
imul
inc
es
pop
add
xchg
popf
mov
cmpsl
mov
test
icebp
push
add
dec
testl
add
and
lret
jg
bound
rcrb
adc
mov
in
aas
sub
pop
mov
mov
mov
fmul
inc
int
notb
pop
push
add
adc
xchg
inc
mov
and
cli
dec
repz
sub
imul
cmp
or
jne
pop
jmp
and
xchg
fldenv
fildl
subl
outsl
popf
xchg
jp
mov
lock
adc
jae
sub
or
test
and
pop
inc
mov
fiadds
pop
pop
fdivr
nop
push
dec
mov
push
sub
and
fmul
pushw
mov
cmpsl
push
sub
jne
push
ljmp
cmp
lds
adc
mov
in
add
rcr
icebp
sbb
roll
lcall
dec
mov
into
dec
pop
movb
movsb
iret
dec
cmp
outsl
ret
lea
cmp
dec
jnp
mov
xor
mov
push
imul
inc
scas
cmp
jne
out
inc
fsts
adc
fldenv
in
cmp
loopne
cmp
add
add
mov
out
sbb
xor
mov
or
pop
mov
xchg
pop
inc
mov
cmpsl
cmc
pop
sarb
out
cmp
adc
mov
pop
cltd
rcl
jle
rcl
push
call
movsl
cmp
imull
or
fsubs
mov
adc
xchg
sti
xor
mov
fwait
or
out
test
lret
sti
mov
and
dec
push
lods
inc
cmp
fcomps
rcrb
lods
jmp
adc
xor
xor
mov
inc
fcmovbe
or
jo
cmc
popa
clc
es
testl
in
popf
xor
add
mov
jmp
jb
jo
fcoml
mov
sbb
inc
cmpl
lret
lret
mov
mov
fisubrs
adc
popf
jl
lea
popf
and
into
test
fldenv
fmul
pusha
or
divl
out
pop
xchg
jle
jle
pushf
scas
out
xor
shll
mov
insl
and
push
mov
outsl
shlb
cmpsb
loope
lea
enter
xor
stos
sbb
mov
mov
out
ret
hlt
sub
pop
adc
mov
scas
push
stos
inc
add
enter
push
jmp
test
jo
xchg
leave
add
cli
mov
and
in
es
push
push
inc
xlat
aas
ja
lret
test
pop
notb
shrb
xchg
push
in
movb
jne
jns
sbb
xchg
lods
or
dec
lcall
inc
nop
and
push
mov
jae
loopne
es
lret
sahf
fsubrs
in
adc
insl
sub
sub
add
mov
fists
adc
mov
jg
dec
or
scas
cmp
jo
mov
orb
shll
lret
mov
rcll
fdivl
ja
mov
mov
xchg
rol
iret
clc
loope
out
adc
ss
push
mov
sub
push
jmp
cmp
pop
adc
pop
je
push
cmpsb
jnp
ret
lods
popf
je
jp
add
pop
int
arpl
das
ljmp
add
xor
sbbl
xchg
lods
pop
sbbl
lret
insl
cmp
push
adcb
dec
push
add
shlb
jbe
outsl
add
lods
push
xchg
outsb
es
or
mov
mov
and
inc
or
sbb
mov
rcrb
jecxz
cmpsl
lahf
aad
sbb
mov
sub
push
pop
jbe
jg
cmpsl
fnsetpm(287
mov
sahf
jno
gs
movsb
je
lcall
out
fadd
mov
ds
mov
push
inc
fwait
out
jg
loop
lods
sbb
ljmp
cmp
insl
cli
movsl
push
jmp
enter
cli
pop
lcall
sbb
sub
outsl
cwtl
xorl
mov
xor
ret
xchg
fbld
lock
mov
stos
mov
mov
shl
and
and
mov
mov
cmp
test
movb
lods
ret
mov
xchg
xchg
jmp
pop
fldenv
inc
xchg
inc
add
leave
cld
push
lock
in
outsl
clc
mov
inc
or
out
xchg
lcall
lods
stc
bound
mov
mov
jecxz
gs
daa
mov
popf
cmp
andl
mov
xchg
adc
mov
mov
pop
sti
xor
imul
mov
cmp
fildll
and
jbe
xchg
mov
es
inc
in
jo
push
test
loopne
xchg
imul
pusha
inc
and
in
xchg
iret
cli
jp
xchg
aam
xchg
xor
cli
fnstenv
test
jmp
jg
ss
jae
out
nop
aaa
or
inc
test
adc
xchg
aas
das
in
lret
adcb
jno
in
pop
pop
ljmp
loopne
add
sbb
jb
xor
fwait
pop
jecxz
aad
dec
dec
js
jl
cmp
lahf
cmc
lods
stos
cli
das
hlt
cmpl
cmpl
rorl
mov
add
adc
jne
in
call
cli
mov
rcrb
outsb
inc
xchg
pusha
testl
adc
orl
xor
pop
arpl
nop
xchg
or
lock
mov
mov
and
jns
leave
daa
xor
pop
insb
sub
mov
sbb
gs
pushf
inc
lods
inc
xor
push
jmp
mov
push
pop
sahf
inc
enter
hlt
test
mov
or
push
popf
mov
in
aad
xlat
outsb
imul
mov
cmpsl
out
jnp
sti
mov
in
lds
nop
and
mov
fidivrs
out
lret
cs
jg
subl
popf
imul
hlt
xorb
jb
jmp
leave
inc
mov
rclb
daa
mov
incl
stos
cld
jecxz
or
and
or
popf
cmp
fldenv
aaa
in
xchg
imul
inc
bound
pop
xchg
cmp
cmovge
mov
push
outsl
out
outsb
sub
shrb
andb
push
push
repz
and
dec
adc
xor
push
cld
xor
or
rorl
js
cmpb
leave
scas
jo
or
or
aad
faddl
inc
jg
add
push
add
adc
add
adc
sti
popa
ret
inc
xchg
adc
sbb
sub
mov
inc
push
xor
sub
arpl
add
mov
or
scas
sarb
fsts
stos
xor
or
int3
jmp
cld
negl
jmp
lret
int3
scas
sbb
dec
mov
sub
outsl
stc
and
out
jge
pop
pop
imul
das
sbb
and
sbb
inc
or
stc
and
outsb
std
cmp
jno
mov
lret
and
and
subb
xlat
adc
xchg
and
or
repz
fadds
mov
xor
pushf
pop
lcall
and
sti
mov
xchg
mov
repnz
inc
fnop
jnp
xchg
cmp
push
xor
jg
cltd
insb
nop
dec
psadbw
add
fiaddl
xor
orb
pop
add
lods
pop
add
das
mov
mov
add
pop
mov
pushl
stos
xor
mov
pop
rorb
je
mov
mov
orb
scas
das
lcallw
fiaddl
pop
inc
cmpsb
daa
sub
and
rorb
icebp
pop
test
mov
xchg
rorb
imulb
mov
cwtl
sbb
std
cmc
orb
pop
mov
ret
or
into
adc
pop
mov
cmc
sub
emms
add
les
lock
sub
xchg
inc
push
fwait
lods
sub
mov
jne
ljmp
fdivrp
mov
pop
stos
sub
mov
movsl
in
mulb
nop
aas
imul
fnstenv
loop
add
mov
or
popf
pop
and
and
addl
lahf
neg
jge
mulb
pop
mov
cmp
mov
das
lods
xor
xor
jle
xor
and
cmp
and
and
dec
xor
jle
mov
cmp
loop
xor
push
iret
mov
or
cmpsb
xor
sbb
xchg
fnstenv
pop
shrl
add
jge
aaa
mov
and
mov
cmp
shrb
inc
push
sahf
xor
fisubrs
mov
les
push
xor
mov
mov
insb
xor
rolb
or
push
das
test
push
ja
xchg
stos
sub
outsl
iret
add
aam
icebp
arpl
sub
stos
mov
jg
and
inc
push
stos
dec
sti
pop
mov
fstpt
cmpsb
xor
out
mov
cmp
lds
mov
jns
outsb
jae
inc
jl
cmpsb
and
mov
cld
ret
cmpsb
mov
mov
clc
pop
inc
bound
movsl
lahf
pushf
loopne
mov
cmp
lds
movsl
aas
sbb
xchg
jns
js
jle
js
dec
bound
movsl
pop
xchg
loope
cmp
push
pop
es
dec
inc
xor
sti
mov
negl
loopne
enter
jge
xor
mov
jo
popf
jp
mov
into
push
and
or
xor
mov
lods
lret
call
stc
sbb
adc
mov
mov
mov
fistpl
lea
cmpsl
jge
adc
jb
and
pop
cmp
mov
adc
aas
movsl
in
cmp
fwait
lock
cmp
loopne
mov
test
push
lret
jge
or
mov
sbb
scas
cmpsb
sub
pop
test
push
std
mov
sahf
inc
fidivrs
mov
push
test
movsb
fldt
push
fldt
mov
xchg
push
mov
mov
rorl
fisubrs
pop
push
ret
pop
in
inc
or
repz
sti
loopne
out
cmc
es
mov
cmp
pushl
call
roll
mov
adc
pusha
mov
and
push
out
je
mov
cmp
scas
inc
or
fisttpll
f2xm1
pop
inc
jmp
insb
imul
lods
xor
movsl
pop
add
or
xor
nop
lea
in
popa
ljmp
push
mov
lods
xor
cmpsl
pop
add
sub
mov
stos
lea
call
or
sarl
stos
pop
add
mov
xor
add
push
cmpb
pop
mov
nop
mov
std
scas
xor
mov
mov
pusha
cs
sahf
mov
pop
sti
arpl
scas
push
rolb
pop
cli
repnz
gs
or
inc
adc
int
jecxz
dec
or
adc
jnp
roll
or
das
scas
ror
add
sbb
adcl
dec
or
test
jns
fisubrs
adc
ljmp
inc
adc
dec
pop
push
je
mov
cmp
pop
push
fimull
int3
pop
mov
popf
rolb
mov
inc
ja
ret
xor
add
rorb
or
lds
jle
push
std
fisubrl
je
push
and
mov
lret
jle
pop
and
lahf
aas
jg
push
dec
imul
jno
mov
fwait
mov
mov
add
adc
ljmp
xchg
pop
test
dec
mov
movsl
mov
pop
mov
arpl
pop
xlat
orl
cmpsb
xor
push
mov
aas
fwait
test
pop
sti
push
rolb
enter
pusha
adc
or
lret
push
rorb
sbb
jns
stos
ja
es
xor
iret
push
add
sbb
mov
push
or
mov
in
stc
ljmp
jnp
xchg
rolb
pop
shrl
mov
mov
imul
and
cmp
ficomps
dec
push
dec
add
cmp
or
movsl
push
cltd
bound
je
pusha
pop
out
xchg
inc
sti
xchg
jae
lcall
dec
lods
xor
mov
jle
xchg
adc
push
sti
incl
and
fiaddl
and
mov
xor
push
and
jp
xor
stos
push
and
xchg
cs
stc
popa
mov
cld
data16
arpl
ds
xchg
inc
hlt
jl
xchg
sub
add
push
jns
cmp
dec
adc
xlat
jl
outsl
in
jne
xchg
cmp
iret
pushf
mov
dec
cs
jbe
int
les
or
mov
fdivrl
xchg
aas
out
xor
add
imulb
insb
lock
data16
push
mov
aaa
mov
stos
subb
mov
jb
insl
es
pushf
inc
adc
aam
xor
ja
sub
stos
sub
cmpsl
sbb
xchg
rcrl
and
adc
mov
cmpsb
dec
out
sub
add
jge
cwtl
sahf
sbb
iret
das
sub
out
cwtl
mov
xchg
cmp
rorb
xor
dec
and
aas
cmpsl
das
mov
das
nop
cmp
mov
pop
add
adc
inc
lcall
cli
lret
xchg
pop
push
je
pop
xchg
pop
sti
inc
dec
outsl
jmp
fwait
mov
sbb
pusha
repnz
adc
xor
test
out
cmp
test
es
pop
mov
jp
dec
jae
push
in
sub
push
fsubrs
or
imul
and
faddl
pop
pop
jo
xor
daa
fiadds
pop
sbb
add
mov
idivb
das
lods
sahf
nop
or
sbb
clc
or
rcrb
jg
xor
xchg
adc
scas
lret
jae
cld
pop
inc
imul
lret
ljmp
repnz
adc
jb
hlt
xor
sarb
shrb
dec
adc
push
add
push
adc
pop
dec
popf
cmp
lea
jbe
stos
cmpsl
mov
add
out
mul
mov
dec
adc
loop
fstpl
mov
in
xor
iret
push
std
dec
adc
test
and
jnp
xor
mov
ja
xchg
and
pop
addr16
push
mov
jae
mov
loopne
negb
mov
mov
mov
in
mov
mov
mov
lods
and
rclb
xor
lret
cmp
xchg
fisubrs
mov
shlb
scas
adc
cld
insb
test
jmp
cmp
pop
sbb
mov
leave
xchg
push
lret
or
pop
ljmp
jbe
push
and
jecxz
jno
leave
push
fnstcw
adc
add
add
mov
and
lahf
sbb
dec
jae
jge
jg
mov
or
xchg
mov
popa
cld
pop
jne
int3
outsb
cmp
cmp
sub
lcall
sub
jle
aam
pop
imul
jg
or
mov
popf
dec
pop
pop
lret
xor
lcall
dec
or
arpl
test
jbe
mov
push
fstp
icebp
arpl
mov
repz
adc
sub
jg
jae
out
cmp
in
and
das
xchg
enter
mov
faddl
repz
xor
and
mov
scas
adc
jmp
cwtl
jp
fcomp
sbb
sub
cmp
lahf
insl
pop
adc
fstps
push
inc
test
pusha
in
add
aaa
cwtl
sti
push
jg
mov
scas
dec
adc
movsl
xchg
inc
lret
push
sub
sbb
sar
and
out
adc
js
fs
add
or
jecxz
xor
xchg
aaa
andb
sub
fcoms
mov
inc
orl
out
subl
mov
lock
insl
je
xchg
xchg
popa
fidivs
dec
xor
inc
adc
push
hlt
gs
inc
push
mov
mov
add
loopne
loop
lahf
cld
mov
hlt
ret
lea
jmp
xchg
sbb
pop
sbb
inc
push
loopne
repz
sub
jl
xchg
cmp
inc
push
das
jle
mov
pop
mov
outsb
int
aas
cwtl
jne
in
out
popl
stc
dec
or
into
sti
xchg
add
sub
lods
xor
xchg
mov
je
repz
cmp
aad
push
mov
test
mov
mov
cmp
mov
fadds
imul
mov
mov
sbb
push
sti
mov
sub
fmull
ss
jnp
sbb
adc
inc
jae
inc
adc
push
xchg
or
xchg
lods
push
push
shrl
mov
xlat
test
mov
insb
jmp
fwait
lock
adc
adc
cli
arpl
and
jge
sbb
sbb
cmp
aaa
sbb
clc
loop
je
loop
nop
daa
xor
cmpsb
cmp
les
repz
adc
push
cld
enter
fcompl
sbb
inc
add
out
sbb
sub
lea
inc
or
test
fadds
out
je
pop
fstpt
mov
xchg
pop
add
jb
lods
sbb
je
jmp
adc
mov
pop
add
and
pop
sub
daa
test
cmp
jle
mov
jmp
jmp
add
inc
sti
pop
out
shr
sub
out
js
inc
lcall
mov
divl
out
je
push
out
in
mov
inc
ds
dec
sbb
inc
rolb
clc
scas
push
xlat
sbb
push
adc
lea
out
or
das
cmpsl
mov
sbb
fbld
mov
loop
stos
xor
repz
jo
cmp
imul
push
jo
sub
stos
ljmp
add
rcrb
xchg
mov
cmc
insl
icebp
pusha
dec
out
push
int
xchg
je
jns
lock
pop
bound
or
jae
jl
cmpsb
cmp
outsl
test
pop
jne
lods
ss
loopw
or
xor
push
cmp
jp
xor
add
pop
cli
push
std
pop
mov
mulb
xlat
in
lret
js
push
popf
cmp
loopne
in
std
or
cmp
push
jmp
aam
imul
push
xchg
jge
or
add
cmpsl
sub
loope
ret
xchg
in
outsl
clc
jp
test
hlt
data16
repnz
sbb
push
aas
fidivrs
lret
jle
mov
jmp
xor
cli
sbb
setno
repnz
iret
repnz
sub
sti
xchg
sub
into
movsl
cmp
outsb
loopne
bound
cmp
jae
push
mov
test
pmullw
andl
push
call
dec
adc
mov
js
inc
scas
dec
out
popf
dec
loope
xchg
insl
add
out
dec
adc
sbb
insb
and
inc
adc
mov
jp
push
lods
ds
jo
popf
inc
mov
xor
mov
cmpsb
push
out
fsubs
sbb
int
xchg
ds
push
into
xchg
or
fildl
dec
xor
shl
pushf
inc
or
jmp
flds
ja
fdivrl
pop
gs
xlat
pop
cmc
pop
std
add
shr
push
clc
jns
fwait
inc
loope
in
push
imull
jle
gs
rcrl
mov
decl
cmp
inc
pop
add
jecxz
cmpsb
sub
into
ljmpw
pop
jmp
test
cmp
dec
pop
loope
outsl
popf
pop
add
jnp
nop
jae
mov
xchg
pop
std
jmp
loope
pusha
in
pop
imulb
mov
cwtl
adcb
jns
jle
or
jno
jns
add
iret
push
movl
push
pusha
in
test
rorb
sub
push
cmp
pop
mov
jg
inc
sarl
dec
test
push
xchg
imul
mov
inc
in
sub
iret
test
pop
xchg
lret
test
rclb
mov
movsl
xor
aad
jo
inc
mov
xchg
inc
push
xchg
or
pop
jecxz
dec
mov
test
add
push
aaa
popf
pop
inc
popa
out
dec
xlat
jl
adc
nop
mov
jnp
ret
sub
jbe
pushf
inc
push
gs
pop
xchg
sub
push
cmp
push
int3
ljmp
push
lock
fcoms
test
enter
out
bound
mov
adc
add
and
mov
lods
xchg
cmp
les
jne
push
jle
loopne
jne
cmp
aaa
cwtl
xchg
xor
test
roll
nop
cmp
mov
mov
mov
arpl
add
xor
and
movsl
sub
cs
xchg
mov
push
mov
sub
test
mov
or
int3
mov
add
sub
out
dec
int3
int3
cmp
fld
mov
or
mov
outsb
rolb
and
jg
ds
pop
push
push
negb
mov
cmc
xchg
daa
adcl
mov
add
enter
mov
mov
ljmp
shrl
ret
adcb
rcl
xchg
pop
data16
xchg
xchg
js
call
mov
push
test
loop
jno
pop
std
inc
push
pop
sbb
stos
xchg
mov
stc
add
data16
out
sbb
mov
sbb
popf
dec
cmpsb
insl
hlt
sbb
es
test
hlt
jno
push
icebp
popa
mov
or
jp
xor
fsub
fnstsw
ljmp
sbb
push
jle
out
inc
adc
std
das
test
sahf
sub
lods
cltd
ret
cmc
mov
mov
lods
in
hlt
jno
xchg
out
out
repnz
std
int
push
xchg
mov
push
inc
or
cli
push
lcall
cmpsl
jmp
out
imul
xor
fwait
es
mul
jbe
lea
cltd
xchg
fisttpl
cmc
int3
bswap
mov
mov
mov
xchg
jge
cmp
mov
fsubrs
mov
daa
and
jg
mov
mov
and
test
lds
out
jne
and
push
push
push
xor
and
lock
outsb
lods
loop
mov
lods
iret
xchg
fsub
cmp
cmp
lret
push
cmc
adc
pop
leave
mov
mov
xor
loop
inc
jecxz
push
lods
xchg
jg
push
mov
loopne
jne
lods
xor
and
mov
int3
bswap
in
incb
dec
cld
fdivs
xchg
ret
nop
push
jmp
mov
jnp
fcoms
jmp
roll
or
xor
test
mov
ret
lods
xor
add
push
mov
cltd
and
mov
into
lahf
inc
enter
or
lods
das
cwtl
pop
or
sti
int
mov
lock
les
mov
mov
scas
mov
sbb
push
mov
pop
fcompl
mov
and
int
inc
dec
lcall
jnp
mov
xor
inc
or
mov
dec
or
lods
cs
mov
cwtl
cmp
dec
cs
vcmpgtps
xchg
pushf
cmp
mov
add
add
mov
mov
cmp
pop
and
sbb
xlat
jge
dec
fwait
inc
imul
ja
jp
popf
cltd
addl
lret
inc
push
dec
sub
je
pushf
outsb
icebp
inc
pop
jnp
sub
ret
mov
fwait
iret
push
mov
les
out
adc
mov
aas
pop
add
cwtl
ja
sub
shrb
mov
push
adc
fidivrl
sub
sub
cmp
xor
rcr
xchg
sahf
es
das
inc
bswap
pushf
scas
sub
scas
or
mov
sub
leave
mov
aaa
mov
cmp
test
mov
adc
fisttps
mov
pop
cli
jecxz
jo
sbb
sbb
paddq
push
push
sbb
or
cs
push
clc
pop
or
mov
jecxz
adcl
jne
das
mov
xchg
sub
sbb
add
xor
jl
and
xchg
insl
add
adc
inc
mov
pop
jns
xor
pop
push
lcall
mov
push
xchg
inc
lret
lea
ss
mov
or
or
sub
or
test
push
inc
adc
pop
xsha1
cmpsb
mov
xchg
sub
inc
fwait
inc
leave
push
inc
or
sbb
push
out
addr16
cmc
jmp
and
mov
xor
pop
jo
jge
popaw
jmp
in
mov
push
mov
js
and
jnp
mov
mov
cmpsl
sub
stos
xchg
pop
cmp
outsl
out
sub
and
dec
mov
adc
addr16
ret
test
ds
out
js
push
cmp
scas
adc
in
and
gs
push
out
jne
ret
pop
push
in
cwtl
push
shlb
leave
xchg
cmp
or
push
je
adc
fdivrs
mov
sbb
orb
test
inc
add
int
dec
adc
aad
xchg
jp
out
inc
jb
lahf
mov
mov
mov
inc
out
fstpt
cltd
jmp
stc
ss
insl
jmp
pop
cwtl
mov
int3
pop
mov
mov
test
lret
notl
mov
or
arpl
aam
xchg
fistpl
mov
or
jg
and
jp
inc
bound
clc
push
outsl
add
lahf
cmp
cwtl
sbb
jp
ret
dec
or
ret
sub
mov
movsb
pop
sti
aas
vphadduwd
sub
or
xor
xchg
pop
sarb
mov
and
jl
arpl
pop
outsb
insb
cmc
jl
add
insl
outsl
adc
dec
jg
dec
stos
fwait
add
mov
add
adc
lahf
inc
inc
inc
add
test
shl
sti
imul
addr16
clc
pop
mov
scas
aam
cltd
or
or
fildl
or
sub
imul
repz
xor
mov
sbb
xor
dec
in
jp
or
fsubrs
sbb
lret
dec
pop
lret
jmp
imul
call
inc
push
mov
stos
stc
arpl
mov
mov
stos
sub
xchg
test
notl
ret
daa
addr16
add
inc
test
sbb
jno
jbe
push
sbb
push
shlb
mov
cmpsb
movsb
xor
dec
and
shlb
cmpsb
leave
mov
push
lds
mov
sbb
cmpsl
xor
push
test
xlat
jp
popf
cmp
dec
or
fnstsw
outsl
or
push
shrb
mov
and
xchg
pop
fxch
mov
inc
fisttpl
push
popf
mov
fisubl
out
popa
loop
cld
pop
int3
xchg
mov
popa
call
xchg
jbe
push
sbb
pop
xor
test
inc
daa
call
fbld
sub
into
xchg
push
sbb
mov
test
inc
mov
into
xchg
mov
mov
cmpsl
xchg
inc
push
pushf
loope
push
std
clc
lcall
into
dec
or
movsl
daa
mov
lret
sbb
inc
adc
inc
or
pusha
dec
int3
mov
and
test
jae
jge
stos
das
dec
insl
or
add
pop
out
je
insl
inc
adc
std
xchg
aas
movsb
mov
mov
xchg
jne
jne
ret
push
push
pop
mov
ss
cmp
das
sub
inc
outsb
cmp
mov
push
inc
sbb
xchg
dec
icebp
pop
pushl
mov
rcrl
xlat
pop
dec
adc
push
std
pop
add
sbb
or
mov
push
cmc
pop
lds
xchg
rep
inc
and
mov
cmc
das
mov
sub
lea
mov
gs
lret
xchg
int3
mov
sarl
mov
sbb
adc
enter
dec
or
adc
jecxz
push
dec
adc
jo
lret
outsl
icebp
mov
shl
sbbl
xor
rclb
dec
inc
jl
mov
mov
jecxz
cmp
cmp
and
xchg
cmp
in
scas
xor
repnz
stc
sahf
inc
cli
pop
fiaddl
loopne
aas
mov
test
call
nop
les
or
cmpsl
sti
negl
mov
lods
push
mov
add
rorb
xorl
xchg
out
outsl
repnz
flds
andl
or
cmpsb
xor
mov
outsb
mov
xor
push
mov
add
push
nop
pop
jb
mov
test
out
cmc
dec
jbe
repz
std
into
push
xchg
aas
sbb
jecxz
push
dec
dec
out
out
cli
xchg
and
adc
das
sti
shll
inc
pop
add
dec
fldl
sub
sarl
out
pop
push
push
adc
pop
mov
sti
pusha
adc
pop
push
inc
and
insl
clc
mov
bound
mov
jb
adc
and
jne
mov
mov
jecxz
faddl
pop
adc
mov
rcl
dec
push
mov
lods
xchg
adc
movsl
mov
sahf
leave
mov
fs
or
les
movsb
xor
mov
es
addl
scas
sub
andb
repnz
aad
sub
mov
mov
mov
push
int
sti
xchg
mov
scas
orl
sbb
nop
push
fs
mov
mov
jmp
clc
jne
cld
cmc
insl
repnz
jmp
mov
jbe
popa
in
jp
xchg
inc
movsb
arpl
test
stos
sub
out
pop
test
ret
testb
scas
popf
push
cmp
aad
dec
or
push
add
mov
aad
cmp
jl
insl
out
bound
aad
outsl
test
clc
shrb
mov
popa
cmc
dec
mov
jl
adc
cld
arpl
mov
outsl
in
mov
scas
out
or
lea
or
push
mov
xchg
incl
aaa
fwait
in
icebp
pop
mov
orb
inc
pop
xorb
lods
aad
dec
je
mov
inc
inc
iret
movl
pop
enter
sbbl
inc
sub
insl
jmp
cmp
out
jb
and
mov
mov
jbe
scas
jno
stc
cmc
mov
ja
out
int
outsb
lods
aas
fwait
movsb
jbe
ja
mov
sbb
shll
rclb
cli
pop
jmp
clc
cmp
dec
pop
push
jmp
imul
addl
icebp
outsb
repz
mov
dec
adc
inc
or
inc
cmpsl
sub
pop
adc
pop
cld
xchg
ds
mov
js
mov
mov
jb
bswap
xchg
inc
mov
or
cmpsl
sarb
test
int
test
sbb
aas
push
push
inc
movl
mov
mov
and
pop
mov
push
push
test
or
pop
test
aas
sbb
pop
out
push
je
insl
clc
out
insl
lea
imul
adc
jno
inc
cmp
jl
lcall
push
push
ror
mov
cmpsb
cmp
cwtl
jp
pop
lods
mov
sarl
pop
ljmp
mov
out
lcall
xchg
push
pop
enter
xor
mov
adc
push
test
loop
inc
or
lods
xchg
jns
out
iret
fnstcw
in
outsl
in
or
xchg
xor
jge
adcl
sbb
dec
insl
mov
das
xchg
ret
ss
ret
loope
sbb
pop
outsl
inc
sahf
cmp
fldl
add
cmp
fwait
push
jbe
popl
sbb
inc
call
pop
push
adc
inc
xchg
jecxz
les
fldcw
std
adc
int3
inc
cmp
jg
or
cld
ret
aad
pop
sub
ja
lret
pop
sbb
jle
push
cmpsl
hlt
pop
sub
cltd
out
mov
enter
add
pop
cmp
pop
add
cmp
fsts
ljmp
push
push
shll
cmp
mov
xchg
cmp
sahf
inc
or
push
leave
xchg
mov
test
js
adc
xor
popa
cmpsl
xchg
cmp
js
bound
mov
dec
adc
mov
push
insl
out
out
in
jg
pop
mov
or
inc
adc
scas
daa
push
push
mov
lea
fdivr
add
aaa
lea
mov
insl
scas
or
loop
fwait
inc
or
aad
arpl
mov
test
pop
add
xor
and
mov
ret
xchg
lcall
xchg
pushf
lret
das
stos
outsl
enter
je
int
stos
out
push
cmp
and
push
orl
mov
adc
jecxz
das
ret
mov
or
push
push
imul
inc
jmpw
filds
jp
fildl
lret
add
repz
aas
jge
inc
xor
rorb
flds
dec
sub
xchg
fisubrl
popa
inc
push
iret
lea
in
insl
iret
outsl
enter
fistpll
sub
insl
push
sub
pop
inc
mov
add
push
pop
mov
adc
add
test
pusha
xchg
inc
negl
pop
in
jno
addl
xor
fnsave
sub
xchg
loope
mov
cmp
ds
fnsave
cld
mov
mov
and
xchg
mov
mov
pop
std
ds
in
imul
pop
adcl
push
jae
insl
ljmp
lods
sub
ret
inc
push
add
xchg
out
ret
dec
adc
ljmp
popl
mov
sbb
cmp
pop
mov
stc
mov
bound
xchg
in
cmpxchg8b
sar
pop
inc
mov
pop
mov
mov
repz
sbb
test
push
lcall
dec
cmpsb
sahf
inc
inc
lcall
mov
xor
ljmp
sbb
popf
inc
orl
sub
cmp
mov
sti
pop
aam
cmp
jp
jmp
add
in
push
dec
ljmp
popf
and
xchg
pop
jno
and
jmp
pop
rcrl
in
cs
jbe
dec
scas
xor
cmp
ja
sbb
dec
cmp
jl
out
sub
xor
jo
add
fcmovnu
push
and
icebp
adc
call
clc
mov
ds
jns
jo
gs
mov
sbbb
shr
jae
jle
scas
sti
mov
mov
mov
mov
and
lahf
ss
jnp
push
adc
lods
xor
inc
in
je
adc
mov
das
pmullw
sub
es
jno
and
xchg
aaa
adc
xor
scas
ja
sub
adc
negb
inc
and
lcall
jge
xchg
test
adc
cmp
xchg
fistpl
sarl
incb
jns
mov
add
int
xchg
inc
pop
adc
jle
fwait
cmp
cmp
sahf
mov
cmpsl
rolb
orb
mov
fildl
int3
adc
orl
adc
dec
mov
cs
movsl
mov
and
pop
inc
inc
adc
stos
es
push
dec
or
out
dec
pop
aad
roll
cmp
sarl
add
les
iret
repz
or
add
lcall
mov
test
sub
xor
cs
addr16
aaa
xchg
inc
cld
hlt
mov
out
mov
push
fidivrl
pop
cs
dec
iret
int3
mov
int3
lea
mov
dec
mov
jo
push
les
push
add
scas
js
aam
int3
mov
or
sub
test
cld
xchg
jo
sti
loop
pop
shl
int
push
mov
les
aad
rcrb
pushf
out
addr16
sar
mov
imul
jl
lret
pop
adcb
mov
dec
or
ja
xchg
mov
jne
cmc
mov
and
cld
xchg
sub
ds
push
lods
outsb
mov
jg
pop
dec
dec
inc
or
mov
into
xor
imul
push
insb
idiv
divb
lock
pop
mov
add
xchg
fidivrl
movb
shl
cmp
sub
and
je
pop
xor
pop
or
rorl
or
pushf
cmp
pop
and
ss
fsub
push
xchg
mov
pusha
divl
stos
mov
fcoml
xchg
shrl
test
xor
push
icebp
mov
movsb
xsha256
cmpsb
aad
fsubrs
imulb
aam
dec
loop
cmc
adc
es
imul
js
xchg
and
movsl
cmp
in
outsb
add
aas
mov
jno
loope
sbb
call
sbb
out
imul
rclb
lea
mov
fbld
mov
mov
fsts
cmc
mov
mov
pop
jl
or
lcall
jge
dec
scas
es
insl
add
ret
hlt
mov
dec
loopne
jbe
test
dec
enter
outsl
xchg
dec
ret
hlt
insb
insl
add
adc
mov
icebp
push
stos
inc
inc
mov
enter
push
mov
mov
cmp
xchg
or
icebp
jecxz
and
ss
inc
fsub
push
xchg
mov
pusha
divl
stos
mov
fcoml
adc
das
cmpsl
pushf
xor
push
icebp
mov
movsb
xsha256
cmpsb
aad
fsubrs
imulb
rorl
loop
hlt
adc
and
inc
xor
ja
xchg
and
movsl
cmp
jmp
add
mov
jo
loope
sbb
call
pop
sbb
jge
loope
rclb
mov
mov
fisubs
mov
mov
fsts
cmc
mov
mov
pop
aad
adc
adc
mov
lcall
jl
dec
scas
es
insl
add
ret
hlt
mov
loopne
jne
test
dec
xor
clc
outsl
xchg
dec
ret
hlt
imul
adc
mov
lock
stos
inc
inc
mov
enter
push
mov
mov
jge
pusha
cmp
xchg
or
icebp
jecxz
and
ss
inc
fcomp
push
xchg
mov
pusha
divl
stos
mov
fcoml
adc
das
cmpsb
pushf
xor
push
icebp
mov
movsb
xsha256
cmpsb
aad
fsubrs
imulb
rorb
loop
repz
and
imul
jbe
xchg
and
movsl
cmp
ljmp
cmp
loope
sbb
call
push
sbb
jge
loope
rclb
mov
mov
frstor
mov
mov
fsts
cmc
mov
mov
pop
aam
adc
adc
mov
lcall
jnp
dec
lods
es
insl
add
ret
hlt
mov
dec
loopne
je
test
dec
xor
imull
sbb
dec
ret
hlt
push
add
adc
mov
out
push
stos
inc
inc
mov
enter
push
mov
mov
jge
pusha
cmp
xchg
or
icebp
jecxz
and
lods
inc
fcomp
push
xchg
cs
pop
divb
stos
mov
fstl
adc
shrl
movsl
fwait
xor
push
icebp
mov
movsl
xsha256
cmpsb
dec
xlat
outsb
jge
sub
mov
dec
dec
loop
repnz
into
inc
xor
jne
xchg
and
movsl
cmp
jmp
ret
pop
enter
outsb
jmp
test
xchg
outsb
jecxz
pop
adc
ss
push
mov
lcall
and
mov
ficoml
hlt
mov
mov
pop
sarl
add
es
xor
out
xchg
jp
dec
lods
daa
or
insb
jns
ret
hlt
mov
dec
loopne
jae
test
dec
lds
imulb
sbb
dec
ret
hlt
imul
inc
mov
loope
lcall
xchg
in
enter
push
mov
mov
jge
pusha
cmp
xchg
or
icebp
jecxz
and
lods
inc
fcomp
push
xchg
cs
pop
imulb
stos
mov
fstl
adc
shrl
movsb
fwait
xor
push
icebp
mov
movsl
xsha256
cmpsb
dec
xlat
outsb
jl
sub
mov
dec
dec
loop
icebp
adc
into
inc
xor
je
xchg
and
movsl
cmp
call
ret
pop
enter
insl
jmp
test
xchg
outsb
loop
pop
adc
sbb
jl
loop
rclb
mov
lcall
and
mov
ficoml
hlt
mov
mov
pop
sarb
add
shrl
and
out
xchg
jns
dec
stos
daa
or
insb
jns
ret
hlt
mov
dec
loopne
jb
test
dec
les
cmc
outsl
xchg
inc
ret
hlt
push
ret
pop
inc
mov
loope
lcall
xchg
in
popa
enter
push
mov
mov
jge
pusha
cmp
xchg
pop
add
icebp
jecxz
and
ss
inc
fcomp
push
xchg
cs
pop
imulb
stos
mov
fisttpll
adc
shrl
mov
icebp
mov
movsl
xsha256
cmpsb
dec
xlat
outsb
jnp
sub
mov
dec
dec
loop
lock
into
inc
xor
jae
xchg
and
movsl
cmp
out
add
xchg
ret
pop
enter
insb
jmp
test
xchg
outsb
loope
pop
adc
in
data16
rclb
mov
lcall
and
mov
ficoml
hlt
mov
mov
pop
sarl
add
cltd
xor
out
xchg
js
dec
stos
daa
or
insb
std
jns
ret
hlt
mov
dec
loopne
jno
test
dec
ret
xor
hlt
outsl
xchg
inc
ret
hlt
insl
add
adc
mov
in
push
stos
inc
aas
mov
enter
push
mov
mov
jge
pusha
cmp
xchg
push
add
icebp
jecxz
and
ss
inc
fcomp
push
xchg
cs
pop
imulb
dec
jge
cmp
push
mov
icebp
mov
movsl
xsha256
cmpsb
dec
xlat
outsb
jp
sub
mov
dec
dec
loop
out
adc
into
inc
xor
jb
xchg
and
cmp
out
add
xchg
ret
pop
enter
imul
js
lea
xchg
outsb
loopne
pop
adc
in
gs
rclb
xchg
lcall
and
mov
ficoml
hlt
scas
sub
jnp
add
cltd
xor
out
xchg
ja
dec
test
lret
cld
jns
ret
hlt
mov
dec
loopne
jo
test
dec
ret
rep
xchg
inc
ret
hlt
insw
add
adc
mov
jmp
loope
lcall
xchg
in
pop
enter
push
mov
mov
jge
pusha
cmp
xchg
add
pop
icebp
jecxz
and
ss
xchg
cs
pop
imulb
mov
fisttpll
adc
shrl
mov
icebp
mov
movsl
xsha256
cmpsb
inc
xlat
outsb
jns
sub
mov
dec
dec
loop
out
adc
into
inc
xor
jno
xchg
and
movsl
cmp
in
add
xchg
ret
pop
enter
push
loope
sbb
xchg
outsb
ffreep
pop
adc
in
fs
rclb
xchg
lcall
and
mov
ficoml
hlt
scas
sub
jnp
add
cltd
xor
xchg
jbe
dec
test
or
insb
sti
jns
ret
hlt
mov
dec
loopne
outsl
adc
dec
shll
repnz
xchg
inc
ret
hlt
gs
add
adc
mov
ljmp
inc
cmp
pop
enter
push
mov
mov
jge
pusha
cmp
xchg
add
pushf
xor
push
and
ss
fcomp
push
xchg
cs
pop
imulb
stos
mov
fisttpll
jle
shrl
mov
icebp
mov
movsl
xsha256
cmpsb
inc
xlat
outsb
js
sub
mov
dec
dec
loop
in
adc
into
aas
xor
jo
xchg
and
movsl
cmp
in
add
xchg
ret
pop
enter
imul
test
xchg
outsb
faddp
pop
adc
in
arpl
cmp
adc
pop
lock
and
mov
ficoml
hlt
lods
sub
jnp
add
cltd
xor
out
xchg
jne
dec
cmpsl
daa
or
insb
cli
jns
ret
hlt
mov
dec
loopne
outsb
adc
dec
shlb
icebp
outsl
xchg
inc
ret
hlt
fs
add
adc
mov
jmp
or
xchg
in
pop
enter
push
mov
mov
jge
pusha
cmp
xchg
add
icebp
jecxz
and
cmpsl
inc
fcomp
push
xchg
cs
pop
imulb
stos
mov
fisttpll
adc
shrl
lahf
fwait
xor
push
icebp
mov
movsl
xsha256
cmpsb
inc
xlat
outsb
ja
sub
mov
dec
dec
loop
in
adc
into
ds
outsl
out
xchg
and
movsl
cmp
jecxz
add
xchg
ret
pop
enter
push
mov
xchg
outsb
ffree
pop
seto
jl
loop
rclb
test
lcall
and
mov
ficoml
hlt
lods
sub
jnp
incl
lcall
je
dec
cmpsb
es
insl
stc
js
ret
cmc
mov
loopne
insl
adc
dec
mov
xchg
inc
shll
adc
pop
inc
mov
and
loopew
cltd
or
xchg
in
pop
leave
pusha
mov
out
loope
cmp
nop
add
popf
xor
and
test
jns
xor
push
xchg
cs
pusha
imull
stos
mov
fmull
adc
das
sahf
pushf
xor
push
icebp
mov
movsb
xsha256
cmpsb
aad
fsubrs
imulb
lret
loop
jmp
stos
sbb
imul
outsb
out
xchg
and
movsl
cmp
loop
add
xor
loope
sbb
call
push
sbb
jge
loope
rclb
addl
xor
fs
mov
mov
fsts
cmc
stos
sub
dec
pop
int3
jl
jg
push
push
shr
xchg
mov
movsb
push
xlat
outsb
clc
ja
ret
testb
insb
adc
popf
sbb
dec
mov
xchg
inc
shlb
adc
pop
inc
mov
and
data16
cwtl
or
jmp
lret
or
mov
scas
call
rorl
mov
icebp
loope
and
adc
xchg
cs
popa
clc
sub
jg
jnp
shrl
popf
popf
xor
dec
icebp
mov
mov
fnstenv
cmc
sub
mov
inc
dec
loop
ljmp
int3
cmp
lret
xchg
pop
push
call
jb
outsl
push
adc
and
out
js
mov
xchg
insb
fcmovne
pusha
or
cs
pusha
loopne
rclb
addb
arpl
and
mov
inc
fcoms
xchg
sub
jns
imulb
lret
jge
std
jle
push
push
shr
xchg
jb
push
movsb
and
movsb
push
divl
ret
testl
pushf
sbb
dec
mov
xchg
inc
mov
jo
xchg
adc
pop
inc
mov
and
xchg
pop
lods
inc
cmp
lret
bound
jmp
rorl
scas
pop
icebp
loopne
es
xor
cs
stc
daa
test
dec
fimull
pop
jp
shrl
pushf
sahf
xor
sub
push
and
fidivl
hlt
sub
loop
jmp
imul
insb
in
xchg
push
mov
mov
loopne
pop
adc
mov
sbb
call
or
sbb
jg
fistpll
rclb
addl
lock
test
mov
inc
fsts
xchg
sub
js
imull
lret
cld
jge
push
dec
shr
xchg
jno
push
mov
fnstenv
jne
ret
clc
loopne
push
lods
fwait
sbb
dec
mov
xchg
aas
mov
jno
xchg
adc
pop
inc
mov
es
loope
xchg
push
scas
inc
cmp
int3
arpl
lods
ljmp
decl
lahf
xor
es
xor
xchg
cs
stc
es
dec
fiaddl
pop
jns
shrl
fwait
sahf
xor
sub
push
and
fidivl
hlt
sub
pop
inc
dec
loop
call
imul
imul
push
push
lea
mov
fbstp
adc
mov
sbb
call
or
call
rclb
addb
mov
pop
lock
test
mov
inc
fsts
xchg
sub
ja
imull
leave
jle
sti
jge
push
dec
shr
xchg
jo
push
mov
ret
fnstenv
jne
ret
clc
loopne
imul
decl
xor
in
imul
ds
jno
xchg
adc
pop
inc
mov
es
loope
xchg
add
call
mov
push
mov
stos
ljmp
decb
lahf
das
scas
pop
icebp
loopne
es
xor
xchg
cs
stc
and
inc
adcb
sti
shrl
lcall
sub
push
pop
mov
fidivl
hlt
sub
pop
inc
dec
loop
out
lods
sbb
xor
push
xchg
push
mov
mov
fidivs
adc
mov
sbb
call
or
call
rclb
jg
popf
mov
pop
lock
test
mov
inc
fsts
sub
jbe
mull
enter
jge
push
dec
shr
xchg
outsl
mov
movsb
push
ret
hlt
jne
ret
clc
popl
dec
loopne
push
push
lret
jmp
xchg
cmp
pop
jno
nop
adc
pop
inc
mov
es
loope
xchg
add
inc
ss
xchg
jmp
or
mov
stos
ljmp
std
or
loopne
es
xor
xchg
cs
stc
and
mov
fiaddl
pop
ja
shrl
cltd
sahf
xor
sub
push
push
mov
fidivl
hlt
sub
pop
inc
dec
loop
out
lods
pop
cltd
imul
imul
push
jmp
jno
jo
setae
pop
lds
mov
sbb
xchg
imul
popa
or
call
rclb
jle
popf
scas
xor
shlb
add
fsts
xchg
sub
jne
mull
jle
stc
jge
push
dec
shr
xchg
outsb
mov
movsb
push
rcr
repz
ret
clc
popl
dec
loopne
addr16
lods
cwtl
sbb
dec
mov
xchg
cmp
movsb
cmp
pop
jno
adc
pop
inc
mov
es
loope
xchg
add
xchg
jmp
or
mov
test
cmp
cld
or
loopne
es
xor
xchg
cs
stc
and
adcb
sti
shrl
cwtl
sahf
xor
sub
push
sbb
fidivl
hlt
sub
pop
inc
dec
loop
in
lods
push
cltd
imul
push
mov
mov
fdivl
push
xchg
ret
pop
lds
mov
sbb
call
or
call
rclb
jge
popf
scas
xor
iret
and
add
fsts
xchg
sub
je
mull
jle
clc
jge
push
dec
shr
xchg
insl
mov
movsb
push
rcr
bnd
ret
clc
popl
dec
loopne
pushw
lods
xchg
sbb
dec
mov
xchg
cmp
jno
mov
ret
pop
inc
scas
es
loope
xchg
add
xchg
jmp
or
mov
test
sbb
sti
or
loopne
es
xor
xchg
cs
stc
and
adcb
sti
shrl
xchg
sahf
xor
sub
push
sbb
xsha256
cmpsb
sarl
sub
pop
inc
dec
loop
in
lods
adc
ss
addr16
xchg
push
mov
mov
or
mov
sbb
call
pop
lea
jg
fistpll
rclb
jl
popf
lods
xor
into
and
incl
inc
ficoml
xchg
sub
jae
clc
movsb
sub
push
idivl
scas
sbb
xchg
insb
mov
movsb
push
mov
sub
movsl
adc
nop
inc
dec
loopne
gs
scas
xchg
sbb
dec
mov
int3
call
or
mov
jb
lea
ret
pop
inc
scas
nop
daa
loopne
loope
xchg
add
xchg
call
or
mov
cmpsl
jmp
fstps
rorl
pop
icebp
fisttps
jge
jns
xor
xchg
cs
arpl
and
sbbl
sub
lahf
ss
jg
mov
cmpsb
sarb
jb
repz
nop
ret
loop
jecxz
scas
adc
imul
data16
push
sbb
movsl
cmp
fidivl
or
ret
pop
les
loope
pop
subl
bound
mov
sbbb
rorb
jnp
sahf
lods
xor
popa
int
mov
mov
inc
fistl
xchg
sub
jb
stc
mov
les
push
dec
into
out
xchg
imul
push
mov
sub
movsb
adc
xchg
inc
lds
mulb
xchg
pop
push
int
imul
cmp
pop
jae
mov
ret
pop
inc
lods
xchg
sub
js
add
xchg
out
into
test
push
mov
cmpsb
in
sbb
cmp
mov
or
fimuls
mov
xor
xchg
sub
and
sbbb
stc
shrb
xchg
mov
xchg
mov
roll
push
cltd
dec
xchg
pusha
add
outsb
sbb
aaa
and
aas
fidivrl
mov
sub
jns
pushf
clc
pop
and
sbb
test
enter
aas
mov
inc
mov
es
pop
out
cmp
jns
sub
lods
jmp
js
mov
rcll
imul
sub
cmc
mov
out
outsl
mov
cmp
sub
repz
dec
sar
mov
jle
sbb
adc
pop
mov
sbb
in
imull
xchg
clc
mov
insb
dec
lret
cmovns
call
sbb
mov
fstp
jg
push
mov
add
ret
and
rorl
jne
mov
pminub
push
pop
cwtl
jo
imul
cmp
lret
js
std
std
push
mov
mov
add
cmp
lods
dec
mov
insb
aaa
xchg
add
cs
inc
rcrl
sbb
popf
pop
adc
inc
adc
les
push
sbb
mov
sub
xchg
scas
or
push
outsb
sbb
aam
push
xchg
dec
adc
jp
jns
sbb
in
inc
jnp
std
mov
pop
sbb
add
cmp
lea
inc
sbb
sub
xchg
rcl
sbb
push
inc
dec
lea
sahf
inc
mov
outsb
leave
mov
ficompl
test
aam
mov
ret
iret
sub
cmpsl
push
mov
setle
rclb
mov
data16
stc
loop
jmp
jbe
xor
scas
outsb
leave
jl
mov
sub
mov
xor
loop
popa
cli
jno
fstl
xchg
lcall
pop
push
sbb
mov
fwait
jne
popf
pop
into
push
std
sbb
aad
repz
pop
cmp
adc
loope
lcall
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
fiaddl
mov
xchg
dec
les
ds
xchg
mov
cmp
stos
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fcmovnb
dec
push
maxps
mov
test
icebp
scas
fnstenv
dec
push
fsubrs
ja
pop
adc
adc
into
adc
jl
je
or
popa
fcmovu
add
push
jle
mov
jmp
jb
or
jo
ljmp
arpl
jne
cmp
or
out
cmp
jg
xchg
jnp
mov
jnp
sub
or
divb
cmpsb
push
cmp
mov
mov
or
dec
or
xchg
mov
push
outsl
mov
out
jge
sub
enter
addr16
popa
js
pop
sbb
data16
test
scas
xor
loope
sub
test
lock
xor
cmp
fildl
sbb
sbb
adc
mov
scas
sbb
.byte
scas
jae
