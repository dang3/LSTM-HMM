lcall
xchg
add
in
sub
lea
push
push
lea
push
push
push
push
imul
jno
push
lea
push
pushl
push
pop
add
ja
out
mov
add
leave
sub
arpl
shl
cmpsl
fstp
push
push
lods
lret
popa
mov
pop
and
sbb
cmp
rorl
icebp
push
inc
sbb
add
adc
jmp
mov
add
add
or
push
or
push
decl
in
outsb
pop
xor
xor
inc
roll
bound
xor
sbb
push
sub
aaa
xor
push
cld
clc
test
push
push
xor
popa
dec
inc
adc
sub
mov
sahf
xor
sub
add
adc
push
sub
fs
add
fnstcw
stos
loopne
ss
adc
and
dec
inc
popl
dec
cld
aas
fdivrs
xchg
inc
add
adc
inc
add
add
insl
pop
push
faddl
andl
dec
xchg
push
idiv
jne
adc
mov
pop
scas
sbb
mov
inc
gs
push
mov
sarl
inc
dec
xor
add
call
cli
add
sub
mov
add
mov
xlat
mov
fistl
and
rolb
enter
xor
fsub
push
imul
shll
adc
fldenv
push
sub
int
mov
rsm
mov
ljmp
push
dec
shll
dec
dec
inc
in
rcll
sbb
push
push
pop
fdivrs
push
push
mov
les
pop
sbb
inc
add
push
lahf
mov
push
jns
dec
adc
jo
pop
aas
and
sbb
mov
sub
adc
rcll
add
pop
push
cmp
sub
dec
lods
push
push
shl
jns
loopne
push
in
in
insb
lcall
mov
push
mov
add
add
loopne
int
push
xor
jmp
sar
push
xor
push
stos
push
lock
imul
xchg
cld
xor
xor
sbb
add
jg
adc
xorl
fmull
aad
scas
xchg
ljmp
push
cmp
cmp
lds
pop
sbbb
data16
push
ficompl
push
mov
sarl
jp
jg
roll
ret
mov
into
in
ss
incl
push
imul
or
push
pusha
fcomip
add
mov
call
cmp
stos
mov
add
mov
fcompl
dec
xor
and
hlt
pop
in
int
inc
clc
notl
test
inc
xor
xor
or
insb
push
jo
inc
fsubrl
addb
stc
scas
scas
sti
fucomi
sub
push
push
xlat
push
test
inc
push
incb
pop
mov
dec
push
inc
aaa
push
fimull
jp
push
or
push
std
lcall
lret
sub
mov
jmp
xor
imul
add
jnp
popa
jno
push
movsl
lock
jbe
ljmp
out
lds
rcr
xorl
mov
push
pop
aam
dec
imul
sbb
insl
jg
jae
inc
or
adc
add
cmpsl
jg
adc
negl
xchg
sub
fiadds
dec
outsl
ja
insb
mov
or
dec
inc
push
push
sub
xor
bound
imul
das
and
mov
cltd
stos
and
outsb
js
sbb
mov
adc
fwait
loopne
lock
insl
inc
add
sub
inc
incl
and
lods
cwtl
and
add
ret
sbb
mov
push
cmpsl
cmp
insl
push
sbb
cmp
push
in
jnp
ss
or
or
or
jp
pop
push
orl
lods
and
cmp
rorl
mov
sub
cmp
inc
fcomp
pop
dec
pop
pop
and
push
in
inc
push
push
push
and
sbb
push
pop
push
jg
mov
push
stos
into
cs
cld
insb
in
aaa
call
jne
fstps
jbe
xrelease
out
push
push
dec
lret
inc
inc
xchg
negl
icebp
incb
xlat
ret
mov
jne
outsl
hlt
mov
push
sub
rcll
mov
cld
lock
inc
add
push
cld
cmp
push
sbb
jle
adc
imul
testb
push
std
pushf
add
cmp
call
push
pop
addb
mov
aaa
pop
or
lret
cli
add
imul
add
mov
loopne
mov
add
imul
mov
sbb
push
add
pop
cmpsl
dec
mov
mull
sar
ljmp
inc
mov
sub
dec
mov
xor
xor
ds
loopne
cld
ret
jno
xor
movsl
dec
pop
mov
jo
outsb
cmp
test
addr16
cmp
mov
sub
stos
orb
or
add
pop
incl
iret
inc
dec
push
test
das
out
cmp
add
insb
xchg
loopne
test
call
enter
sbb
outsl
aaa
push
adc
inc
add
add
dec
std
mov
dec
inc
dec
adc
inc
add
dec
sbb
adc
sub
dec
sbb
dec
sub
jmp
repz
insb
fadds
je
push
aaa
dec
or
and
insl
ja
gs
push
and
sub
sti
pusha
add
sbb
add
sub
sbb
out
in
add
pop
and
push
fcoms
mov
dec
nop
sub
mov
pop
int3
push
rorb
xor
pop
pusha
outsl
enter
ss
adc
sub
sub
add
sar
mov
enter
mov
jnp
insl
das
ds
pop
xor
aam
sarl
mov
mov
pop
sar
pushf
ss
out
popa
pop
fwait
fwait
mov
add
fs
mov
mov
int
fdivrp
adc
dec
inc
dec
or
xor
imul
dec
sub
dec
out
jns
imul
xor
inc
pop
enter
outsl
rorl
mov
js
jb
and
pop
push
dec
adc
mov
frstor
mulps
enter
dec
dec
dec
inc
cmp
fwait
cmp
idivl
dec
js
push
ljmp
add
inc
insb
inc
dec
adc
mov
adc
mov
push
popa
fs
jb
push
push
stos
push
jo
push
clc
pop
pop
mov
sub
test
push
in
inc
add
inc
outsb
sub
jge
or
or
push
int3
dec
ja
xorl
mov
lahf
push
enter
fsubrs
adc
add
dec
jae
cmp
mov
inc
mov
xlat
mov
shrl
je
ss
push
jmp
pop
cmovne
sub
inc
cmp
notb
lret
mov
ds
pop
dec
inc
jno
outsl
dec
inc
arpl
pusha
inc
ret
call
push
pop
sub
pop
lahf
lock
add
xor
loope
dec
addr16
and
addr16
addl
cmp
mov
push
inc
aaa
dec
push
jo
in
ja
and
mov
push
pop
mov
push
add
push
dec
dec
jb
loopne
add
adc
or
or
or
lret
test
sbb
xor
sbb
lock
inc
jl
adc
jle
jae
arpl
push
sub
pop
pop
mov
or
fucomi
jmp
push
lahf
push
movb
push
push
adc
pextrw
add
or
dec
adc
jp
pop
mov
push
adc
jbe
push
in
jns
pop
lcall
lret
mov
sbb
lahf
cmp
inc
sarl
in
in
out
jo
fisubrs
or
push
loope
pusha
pusha
push
mov
inc
and
cmpsl
pop
lods
xchg
push
cmp
movsl
xchg
insl
jno
push
hlt
mov
dec
outsb
pushaw
js
xchg
push
sub
jne
push
add
add
repnz
adc
sub
xchg
fadds
pop
add
sbb
cmc
lcall
jbe
inc
mov
dec
add
dec
add
sbb
xchg
mov
jp
add
xlat
adc
xor
pop
cmp
add
add
jo
stc
hlt
push
test
and
sub
dec
aam
lods
call
dec
mov
daa
jge
xor
push
enter
repnz
sub
adc
add
aaa
xchg
xor
mov
clc
push
ss
insb
push
out
mov
mov
push
push
sub
and
je
push
clc
push
movsl
mov
outsb
pop
enter
add
sub
insl
icebp
jmp
jo
fwait
loopne
je
add
inc
jecxz
cmp
adc
sar
xor
dec
negl
push
mov
jle
xchg
xor
dec
adc
andnps
pusha
lds
insl
rcrb
pop
enter
js
jb
stos
clc
xor
dec
sbb
add
aas
sub
sbb
add
dec
out
mov
push
push
stc
mov
outsl
mov
push
xor
cmpsb
inc
or
and
xchg
jp
dec
xor
adc
dec
dec
inc
cld
lahf
inc
sbb
mov
inc
adc
ret
sbb
add
rcrb
js
paddusb
mov
outsl
xor
jae
or
dec
adc
cmp
push
jmp
dec
stos
fdivs
dec
jne
push
xchg
sarb
loope
rorb
jl
sbb
pop
out
or
dec
int3
add
pop
sub
movsb
aas
cmpsl
inc
add
inc
add
std
aaa
add
sbb
dec
sub
sbb
mov
andb
dec
in
fstps
add
stos
pop
xor
loope
xor
sbb
lods
cmp
jl
push
enter
aas
push
sub
shrb
adc
or
lock
sub
add
xor
daa
lods
mov
push
mov
push
add
bound
inc
aad
xor
rol
sbb
push
dec
loope
enter
sti
lock
xlat
repz
incl
adc
or
je
adc
inc
sub
adc
add
sbb
sub
sub
push
mov
ss
inc
add
dec
add
bound
cmpsb
ja
xor
inc
xchg
insb
push
pop
paddw
dec
aaa
bound
fisttps
mov
push
je
divb
cmp
arpl
sub
jp
push
push
shr
mov
sbb
int
xor
mov
pop
imul
pop
inc
rcrb
add
std
mov
add
sbb
add
jbe
dec
add
decb
dec
cs
inc
mov
mov
stos
sub
mov
addr16
adc
fidivrs
pop
rolb
pop
imul
xchg
cmp
fnstenv
inc
add
cmp
out
sbb
hlt
push
xor
mov
lret
and
pushf
sub
rcrb
lock
jbe
inc
out
mov
cmc
dec
in
testb
incl
clc
add
mov
add
inc
addb
ljmp
adc
mov
test
inc
jb
ficompl
push
daa
sbb
dec
enter
sbb
cli
sbb
mov
insb
xor
nop
shll
fdivs
aaa
xchg
loope
popf
in
pop
mov
xor
mov
mov
or
data16
jmp
dec
push
push
dec
inc
push
sub
add
call
jbe
dec
inc
or
fs
mov
xor
mov
insl
mov
mov
repz
mov
xchg
inc
pop
push
push
aam
popa
mov
add
shl
xor
xlat
fdivl
ja
dec
pusha
ja
outsb
xchg
aaa
inc
insb
dec
fstpt
outsl
dec
dec
inc
jae
dec
dec
sub
xor
dec
inc
mov
je
std
mov
lods
loopne
push
aad
cwtl
mov
mov
insb
mov
das
push
adcb
outsb
insb
jne
inc
mov
push
ljmp
dec
jge
out
xor
pop
dec
scas
popa
enter
xchg
dec
jb
out
insb
mov
loope
repnz
dec
push
mov
lret
shlb
adc
lods
arpl
ret
or
imul
inc
cli
test
dec
mov
or
jne
rcrb
mov
hlt
pop
and
inc
dec
sbb
sub
test
pop
dec
mov
adc
cmp
push
jae
xor
test
cld
ja
xor
aad
ja
xlat
ljmp
and
mov
fmull
push
xchg
or
popa
push
les
xlat
testl
mov
popl
push
sbb
es
test
add
jnp
dec
rorb
dec
push
pop
push
push
jo
fs
sbb
call
push
jbe
push
pop
movsb
push
cmp
ficompl
jbe
arpl
test
into
jb
jp
rolb
jecxz
dec
cmp
add
movl
xor
push
cmp
ss
imul
popa
sbb
sbb
push
adc
cmp
decl
arpl
push
jno
mov
mov
dec
inc
xor
cld
addl
rolb
imul
stc
mov
jbe
insl
jae
mov
mov
push
repnz
mov
jno
sub
xor
push
inc
cmp
movsb
pop
bound
jbe
shl
rorb
imul
push
mov
jl
imul
shll
jo
inc
pop
sub
loope
adc
and
std
jmp
sub
es
mov
or
inc
xorl
add
out
dec
push
roll
xchg
push
push
fnsave
add
inc
jge
inc
inc
andl
stos
outsb
cmc
dec
js
gs
popa
lock
ret
and
fchs
pop
push
cld
pusha
xorl
jo
sbb
push
inc
or
popl
adc
in
pop
cmpsl
and
push
movsl
das
mov
mov
ret
or
add
add
add
adc
mov
in
and
push
fcompl
out
fwait
cmc
fiadds
clc
adc
ret
push
inc
cli
mov
data16
cli
add
sti
inc
pop
jmp
fs
punpckhbw
loope
pop
sub
xchg
jl
popa
cmp
xorl
cld
nop
dec
mov
dec
jne
fimull
sarb
inc
int
push
push
adc
mov
inc
cmc
decl
adcb
jo
sub
pop
dec
mov
ss
cld
arpl
insb
xor
sbbb
scas
aas
xor
push
nop
push
push
push
shr
mov
clc
imul
dec
movsb
loop
out
addr16
mov
adc
push
pop
push
mov
stos
pop
cmp
scas
sub
gs
mov
sbb
inc
and
mov
mov
adc
jmp
pop
push
mov
or
pop
out
inc
bound
dec
inc
movsb
fsubr
push
mov
mov
add
add
xchg
sub
push
jecxz
loope
cmp
adc
push
xor
outsl
xor
xor
inc
add
push
test
xchg
jns
testb
sub
into
jge
jo
push
xchg
mov
lret
pushl
cmp
sbb
push
dec
gs
sbb
push
push
fisttpll
xchg
insb
push
scas
add
xor
mov
loope
push
ret
je
je
into
cmp
or
hlt
and
jo
adcb
push
push
clc
adc
xor
dec
cmp
push
incl
movsl
popf
push
cmp
sub
mov
pop
sub
fsub
test
loope
jno
add
mov
dec
iret
sub
shrl
enter
inc
lock
push
jne
sub
push
xor
push
repnz
mov
pop
cmp
jae
dec
push
loope
bound
jne
push
bound
imul
dec
sbb
test
and
int3
mov
cmp
inc
cwtl
or
addl
sub
xorl
cmp
test
fiaddl
dec
es
inc
js
lock
inc
loope
pushf
orl
inc
or
data16
pop
mov
pop
jmp
cltd
push
dec
push
outsl
addr16
andb
movsl
stc
add
mov
add
cwtl
xor
fdivs
sbb
adc
dec
and
pop
push
ja
xor
test
call
mov
adcb
sub
push
out
and
jbe
outsl
dec
and
xlat
sbb
add
dec
mov
mov
imul
je
inc
lds
out
push
inc
pop
xchg
pop
jno
sub
aas
test
shr
in
mov
in
pop
jne
addl
push
addr16
clc
jmp
ret
mov
sbb
xlat
loope
inc
xor
leave
inc
sub
insb
dec
mov
inc
shll
and
inc
inc
insl
mov
mov
int
fs
jbe
pop
push
push
cmpsb
pop
pop
cmpsl
jmp
inc
into
bound
and
hlt
inc
mov
pop
lcall
inc
js
dec
adc
sub
pop
dec
addb
or
lods
pop
adc
lahf
cmp
js
into
xorl
jle
outsl
push
mov
inc
aaa
ds
cmpb
inc
dec
mov
mov
fwait
sub
pop
ficomps
addr16
popa
xor
inc
push
hlt
push
push
aaa
jo
data16
clc
bound
int
push
repnz
add
pusha
negl
inc
out
mov
sbb
popa
xchg
mov
push
xchg
add
push
sub
outsl
subb
loope
inc
add
sbb
jns
mov
test
fs
ret
and
cmp
xchg
pop
dec
stc
insb
and
xor
ret
or
push
fsub
addr16
cmc
lcall
test
gs
popa
aaa
stos
adc
push
pop
sbb
aas
jg
push
filds
arpl
ret
jecxz
imul
pop
loopne
push
outsb
or
dec
sub
icebp
inc
fsubs
aam
in
jae
push
fs
clc
pushf
push
jne
lcall
in
inc
xchg
lods
and
call
xor
inc
add
test
mov
sub
mov
pop
sbbb
inc
or
xor
push
flds
stos
frstor
roll
mov
imul
dec
loopne
jo
mov
insb
xchg
andb
dec
dec
sbb
cmp
or
sub
js
ljmp
xor
ret
inc
rcr
dec
aas
or
jecxz
dec
mov
adc
inc
in
in
jno
outsl
adc
repz
fs
push
clc
add
adc
sub
mov
ret
dec
dec
or
dec
movl
in
sbb
sub
dec
cltd
sbb
bound
or
decl
xorl
sub
add
inc
sub
fcos
add
inc
inc
inc
add
push
add
icebp
dec
outsb
addr16
mov
pop
jnp
dec
pushl
mov
ret
sub
inc
cmp
aad
iret
mov
ficompl
ret
add
sub
mov
faddl
push
sub
pop
add
mov
inc
decl
mov
cmpsb
mov
add
sbb
jg
or
inc
call
add
push
dec
add
pop
enter
push
add
dec
and
xor
xchg
in
jo
and
clc
jl
sub
ret
leave
ret
xchg
pop
stos
lcall
inc
sub
dec
add
sub
cmp
sbb
add
mov
adc
push
pop
mov
in
addr16
jns
idiv
add
pushf
xor
adc
mov
pop
sbb
adc
lcall
fs
je
jecxz
jp
cmpsl
in
inc
inc
int3
mov
lret
mov
movzbl
outsl
dec
arpl
add
dec
arpl
pusha
add
rolb
mov
cld
pop
mov
movsb
adc
dec
scas
push
lods
add
pop
add
rorb
in
lds
ja
rdpmc
insb
sbb
push
add
inc
add
aam
aaa
add
cmp
fucomip
mov
pushf
add
add
add
pop
xchg
jmp
or
test
and
xor
cs
or
and
add
loopne
and
add
push
out
std
lahf
fst
ror
pusha
pop
inc
mov
nop
mov
add
ret
inc
loopne
jno
mov
dec
mov
add
out
add
push
xchg
jns
hlt
aaa
shlb
xchg
push
lds
movsb
int3
add
test
or
xchg
pop
add
or
xor
pushf
xchg
adc
cmp
inc
lods
stc
pop
dec
and
test
or
pop
add
adc
adc
out
push
outsl
add
mov
mov
xor
ljmp
sbb
mov
mov
mov
mov
es
pop
add
push
push
jmp
ret
das
xchg
push
ljmp
pop
aad
cmp
or
add
stos
pop
cmp
ljmp
icebp
enter
int
add
and
cld
pusha
sarb
sub
add
push
mov
sbb
cmpsb
and
lock
xor
insl
sub
stos
xchg
adc
pop
popa
xor
lea
jp
js
int
sub
inc
push
mov
addb
sarl
jmp
add
incb
daa
cmpsl
mov
imulb
cmp
xchg
mov
cmp
aad
popa
jo
xor
pop
ret
and
mov
fisubrl
or
clc
adc
imul
mov
and
loope
test
sbbl
jbe
push
push
test
ljmp
mov
add
inc
mov
mov
sbb
add
mov
stos
add
shrb
add
bound
test
imul
outsl
push
pop
popa
scas
test
out
aam
mov
xor
mov
jle
xor
mov
mov
loope
dec
shl
mov
push
in
sbb
lock
addb
int
inc
xor
call
cmp
insl
xchg
xchg
cmp
test
loop
testb
mov
dec
and
fsubs
push
ficoms
and
xchg
add
out
subb
icebp
push
adc
sub
jne
cmp
push
mov
cli
add
pop
icebp
mov
ja
inc
mov
fisubrs
into
add
adc
jbe
sub
adc
clc
mov
js
mov
or
lock
scas
cmp
mov
cld
outsl
addb
cmpsb
mov
xor
xor
pop
ljmp
push
insl
dec
xchg
loope
shl
push
popa
fnstenv
fdivrp
mov
sbb
pop
scas
sub
inc
idivl
mov
aad
sub
add
add
mov
push
scas
hlt
ret
lds
fidivl
iret
pusha
dec
mov
mov
and
mov
sbb
mov
sti
sub
dec
inc
or
fistpll
inc
in
cmp
sub
out
sub
dec
or
pop
repz
mov
xor
or
fmuls
push
mov
clc
inc
jmp
jecxz
je
cli
jb
dec
inc
push
mov
xchg
jbe
cmp
pop
rcr
pop
sub
les
test
or
insb
sub
inc
cmp
inc
mov
xchg
push
cmpsb
mov
out
fisttpl
and
jno
sub
lods
mov
push
jb
stc
push
insl
inc
pushf
mov
mov
adc
fwait
add
lcall
inc
add
repnz
add
shr
adc
in
shl
push
xchg
sub
adc
je
pop
or
push
fidivs
mov
stc
test
leavew
mov
insb
ret
cli
push
aad
or
mov
add
scas
out
adc
leave
add
jp
mov
lret
loope
loop
xchg
pop
cmp
jbe
pusha
xor
int3
outsb
xor
fs
out
push
lock
dec
js
pop
cmp
xchg
rcrb
cmp
fdivrp
adcl
or
bound
adc
sbb
add
out
hlt
rcl
jmp
jl
mov
pop
sbb
cmp
shrb
sub
insb
xor
cmpsb
add
sbbl
mov
push
jae
sub
shll
or
push
loopne
mov
cmp
shrl
inc
xchg
adc
pop
pop
pop
jne
cld
clc
xchg
pop
push
je
sbb
push
xchg
cltd
rcrl
out
imul
lret
mov
mov
mov
cmpsl
cmc
mov
sbb
or
lds
lock
mov
cpuid
ja
dec
loopne
inc
cld
fwait
pop
inc
push
insl
pop
push
dec
push
xorl
hlt
xor
test
xor
out
xchg
dec
xchg
cmp
nop
push
mov
lcall
daa
or
mov
mov
mov
push
push
loopne
xor
lret
scas
adc
xor
push
xchg
shrl
add
mov
mov
push
mov
orb
in
stos
mov
mov
add
mov
xchg
mov
mov
into
add
dec
pop
mov
mov
sbb
or
mov
fldcw
es
pop
xchg
xor
mov
ret
test
mov
lahf
xor
lret
push
inc
jbe
push
inc
mov
jge
mov
cmpsl
arpl
xchg
lea
sbb
outsl
pop
xchg
out
in
sbb
andb
xchg
or
xchg
mov
ret
out
rcrl
and
mov
push
cmpsb
loopne
cmp
fsubrl
aad
clc
cmc
pop
ret
sbb
push
add
fsubrs
jecxz
xor
cmpsb
movl
xor
cmp
hlt
push
int
adc
mov
xlat
test
jns
pusha
dec
mov
ds
pop
pop
test
notb
pop
loopne
dec
ret
mov
mov
or
mov
pop
clc
push
mov
xchg
and
mov
mov
sarl
add
xlat
xor
pop
inc
inc
mov
mov
pop
ficompl
icebp
jg
or
movb
pop
movsl
push
shrb
mov
sub
dec
mov
out
or
mov
pop
mov
adcl
pop
xlat
mov
pop
loope
or
sub
adc
add
mov
push
lock
jo
int
cld
jmp
call
cmpsb
out
jns
add
pop
pushf
imul
adc
push
push
mov
and
push
pusha
pop
mov
jecxz
and
pusha
je
sub
or
jae
ret
jecxz
push
xchg
ss
push
push
icebp
xchg
in
sub
imul
pop
stos
scas
xor
in
movl
pop
or
fwait
ljmp
sbb
int3
or
hlt
out
idiv
rol
mov
arpl
jae
lods
lods
js
push
adc
cmp
mov
adc
push
es
lods
add
pop
cmp
les
sbb
mov
in
inc
inc
sbb
cmp
out
mov
sbb
and
fdivrs
pop
lock
mov
add
pushf
inc
popf
or
and
lahf
xorb
cmp
es
inc
xor
mov
push
mov
or
jb
js
rcrb
bound
dec
aad
cmpb
lods
adc
orb
push
mov
adc
les
outsb
jnp
pop
sbb
cli
mov
sub
jbe
push
popf
rorb
je
inc
and
mov
les
mov
add
inc
pop
enter
test
cmp
inc
stos
fcomps
mov
les
aam
in
inc
mov
sti
push
inc
xchg
jle
mov
scas
dec
sub
and
sbb
lahf
pop
sbb
ljmpw
jmp
aam
icebp
sahf
xchg
jl
lock
cmp
mov
in
xor
mov
and
in
jle
xchg
mov
adc
add
fbld
sbb
and
mov
fcomps
int
lods
or
jb
xchg
stos
inc
das
ss
and
bound
cmp
inc
ja
xchg
or
adc
data16
adc
dec
clc
jnp
jnp
jne
xchg
inc
push
test
mov
xor
or
cs
sbb
cs
sahf
pop
push
or
inc
sub
insb
adc
push
in
ss
sub
movsb
shlb
dec
push
cld
xor
cmc
xor
loopne
mov
jmp
in
pusha
pop
fisubrs
jle
cltd
ja
loopne
leave
popa
insb
cld
iret
xchg
xor
xor
les
push
xchg
ja
and
shrb
pop
cld
add
fs
mov
scas
ret
mov
or
add
pop
mov
test
or
dec
pop
inc
neg
loop
cmp
mov
inc
add
xchg
ds
movsl
sbb
or
adc
popf
inc
in
orb
cmc
clc
cmp
adc
arpl
ja
jg
setb
bound
ja
loop
jns
pusha
mov
add
out
add
test
scas
aaa
call
add
rcll
loopne
iret
jae
mov
xorl
sub
xchg
mov
xor
push
xchg
add
pop
pop
push
xchg
adc
stos
xchg
xchg
jno
ds
inc
into
xor
fmul
adc
mov
and
cmp
mov
inc
hlt
shlb
inc
ja
mov
sbb
test
lds
xchg
out
into
sub
jg
js
hlt
rcll
sahf
loop
movsb
pop
push
clc
test
lahf
push
adc
mov
cwtl
push
ja
mov
js
test
pop
cmpsb
xchg
pop
in
aam
mov
cmp
f2xm1
rcrl
je
es
push
fstpt
inc
xchg
adc
ljmp
mov
jnp
sbbl
jecxz
call
mov
mov
sbb
or
std
add
and
mov
stc
fwait
call
stos
repz
mulb
clc
insb
shl
test
ds
lock
arpl
pushw
push
xor
sbb
sti
adc
js
nop
rcl
push
xor
mov
inc
lds
xlat
jle
push
or
or
cmp
sub
out
js
fs
add
and
int
or
pop
sbb
aad
dec
lds
xchg
xor
add
ss
cmp
mov
pop
push
mov
jo
ret
aaa
cmp
cmpsl
and
movsl
jae
xchg
aaa
sbb
out
and
mov
or
add
icebp
dec
pop
shlb
add
orl
das
fnstsw
push
cld
pop
xor
xor
dec
pushf
dec
daa
inc
das
pusha
jo
stos
es
pop
or
jecxz
jb
lock
or
sbb
lahf
daa
ds
shl
je
adc
popa
or
rorb
add
mov
lret
les
hlt
push
lods
pop
fs
dec
jno
mov
addr16
rorl
bound
jl
or
cmpsl
sbbb
out
repnz
insb
nop
outsb
mov
sub
mov
lea
push
js
push
pop
data16
jmp
es
cmp
popf
jle
push
lds
mov
jno
dec
push
data16
xor
in
cmpsb
mov
loope
movsl
decl
jae
push
ljmp
out
rcrb
xchg
xor
imul
cmp
loope
stos
into
mov
push
push
xchg
cmp
cmp
popf
aam
popf
add
ss
xor
jb
or
inc
cmp
cs
out
jne
and
popf
mov
mov
inc
outsb
ret
mov
mov
cmpsb
loopne
loopne
sub
repnz
sahf
gs
incb
idivl
rolb
popf
xchg
mov
loopne
jecxz
rolb
adc
imul
cmp
adc
or
pop
call
or
outsl
out
pop
push
sbb
inc
add
mov
push
add
xlat
jmp
pop
cmpsb
mov
incb
sbb
movl
mov
jle
jle
inc
ret
cvtpi2ps
xor
lea
das
mov
cmpsl
mov
nop
stos
add
mov
xchg
hlt
lds
push
cmc
repz
dec
and
xchg
jne
inc
cld
push
cmp
jbe
jns
stos
sub
aaa
int
fstps
adcb
aam
sbb
and
das
pop
mov
outsl
pop
in
lock
rclb
lds
push
lds
pop
jns
lds
mov
fwait
pop
in
mov
shr
mov
sub
pop
clc
paddd
xchg
xchg
jg
call
jae
movhps
hlt
aad
sarl
stos
dec
or
sbb
jno
aaa
cli
cmp
aam
mov
mov
sub
mov
in
push
adc
inc
shlb
fcom
mov
fidivs
js
mov
jo
jp
or
mov
rcll
in
les
cmp
cld
mov
js
add
xchg
or
push
cli
ljmp
jb
or
mov
inc
pop
dec
arpl
jecxz
lcall
pop
dec
jnp
je
adc
in
bound
sub
xor
pop
xor
mov
mov
sbb
rorl
pusha
sahf
cmp
jnp
cld
jle
mov
les
and
jnp
mov
cmp
jo
push
insl
lods
stc
and
mov
imul
xor
lods
mov
adc
and
fstl
stos
inc
es
pop
pop
pxor
pushl
aas
xchg
or
and
sub
loop
or
cltd
ret
lods
sahf
ret
sub
sub
orb
pop
mov
pop
pop
rcrl
cld
loop
mov
mov
loop
je
push
push
movsl
mov
lods
jb
pop
push
push
mov
adc
mov
dec
pop
mov
adc
jo
cmc
cli
lods
scas
push
inc
in
dec
daa
push
push
push
fs
pop
xchg
cmp
sarb
ret
pop
orl
call
inc
mov
je
aas
dec
jne
add
inc
enter
xor
add
in
shll
icebp
stos
sbb
adc
mov
push
je
and
sbb
pop
call
imull
shlb
xchg
fisubrl
mov
insl
cs
in
outsb
xchg
mov
sbb
ret
xchg
push
inc
xchg
lcall
in
loopne
lock
xchg
mov
or
roll
xor
push
xchg
daa
add
mov
adc
sub
ret
pop
nop
adc
repz
sub
mov
mov
sarl
cld
insl
cmp
out
adc
mov
jo
pop
mov
clc
mov
jle
adc
adc
shr
roll
cmp
ss
lahf
fucomip
bound
add
push
insl
rcrl
mov
or
mov
xlat
inc
shrb
shll
imul
stos
mov
dec
nopl
jo
roll
sub
add
or
cwtl
std
or
sbb
xlat
ljmp
cwtl
mov
and
scas
mov
and
and
js
xor
xorl
push
mov
pop
popf
imulb
test
pop
adc
clc
inc
cmp
pop
jno
cmc
mov
repz
outsb
lahf
mov
mov
mov
sub
adc
jl
sbbl
push
or
rolb
fists
iret
jge
fiadds
lods
mov
mov
cmp
int
js
fwait
es
adc
inc
pusha
pop
in
clc
aam
sbb
sub
pop
fimull
jg
bound
hlt
cmpsl
adc
xor
sub
inc
push
inc
das
cld
loope
mov
mov
hlt
mov
jae
ds
mov
push
inc
mov
dec
je
enter
repnz
pop
pusha
add
scas
mov
adc
ja
mov
fcom
mov
push
jl
and
repz
ret
push
shll
data16
lahf
mov
outsb
mov
test
scas
mov
loopne
mov
push
jmpw
inc
lret
pusha
or
or
pop
xlat
lock
add
in
jne,pt
stos
lahf
xor
push
dec
xchg
lds
aas
xchg
ljmp
xor
pop
std
stos
movsl
mov
or
adc
jnp
mov
daa
xchg
mov
cmc
lods
lret
shrl
mov
lcall
jmp
mov
adc
add
push
and
cmp
fwait
cmpsb
into
mov
popa
lahf
inc
jl
popf
pop
lds
lods
fisubrl
std
cmp
adcb
xchg
add
dec
lock
scas
das
mov
outsl
inc
adc
es
std
xlat
sbb
lods
sub
add
test
xchg
popf
cmp
mov
cmp
and
fnstcw
iret
jo
pop
lea
fs
push
fdivs
mov
lahf
movsb
xchg
jo
rorb
sti
mov
mov
in
or
lret
or
mov
add
xor
jmp
in
sbb
mov
movsb
das
xchg
fbld
jo
sub
push
test
shlb
lret
mov
push
sti
or
mov
push
cld
cltd
out
jnp
mov
add
fmuls
xchg
loope
mov
mov
lock
cmpsb
rolb
es
mov
pop
mov
mov
lret
addr16
cmp
mov
jno
je
inc
jmp
xlat
mov
dec
inc
push
adc
leave
xchg
data16
rclb
ljmp
icebp
shlb
push
fs
test
mov
jecxz
decb
roll
mov
adc
cmp
pushf
int3
dec
mov
out
cmp
imul
mov
push
call
pop
shlb
mov
fcomip
movsl
jp
cmpsb
mov
pop
out
and
fs
sub
in
test
ret
sahf
repz
add
xchg
jo
enter
loop
clc
mov
adc
and
fld
add
xchg
test
lea
cmpsl
enter
mulb
enter
push
les
pop
cmp
sub
or
lds
jp
ljmp
push
test
call
or
cmp
inc
xor
or
xlat
sub
xor
in
out
movsb
std
or
dec
loop
ja
aad
test
jl
aaa
outsb
je
add
push
cltd
shl
loop
clc
push
cmp
je
push
push
push
pop
movsl
push
xchg
push
push
sbb
mov
clc
sub
mov
scas
xchg
les
es
out
cmpsl
sbb
lds
xor
rorl
or
mov
stc
aam
dec
jge
loop
insb
pop
and
cmp
rorl
fbld
out
sub
add
mov
sub
cwtl
pop
xchg
cmc
lahf
jecxz
pop
ljmp
push
pushf
add
sub
add
test
sbb
sub
push
lock
cld
sub
mov
and
pop
inc
or
mov
cmp
clc
cmpsl
das
pop
into
add
sti
daa
cld
add
adcl
dec
adc
jp
pop
and
inc
rorb
xchg
jmp
imul
or
push
pop
scas
inc
aas
popa
push
pusha
add
es
and
pushf
cmpsb
add
fs
loopne
inc
sbb
pop
cmp
lds
pushfw
inc
leave
jbe
cmp
xor
movsl
andb
push
xor
cli
adc
adc
adc
lret
mov
xchg
inc
add
call
or
and
cld
stc
testl
mov
shl
divl
cli
mov
xchg
cmpl
mov
leave
sub
cmp
adc
jl
mov
test
cmp
je
adc
or
stos
test
out
xchg
sbb
inc
clc
sbb
rcl
fcoms
incl
mov
jne
nop
cs
in
fs
sbb
inc
jl
jp
mov
stos
clc
packssdw
call
sub
cmp
xchg
ljmp
jl
lret
mov
movb
imul
adc
and
loopne
push
xor
aad
leave
xor
fstl
pop
pop
and
stos
in
ret
and
sbb
inc
fsubs
adc
les
loopne
jne
cmpb
push
repnz
inc
jnp
stc
and
sbb
divb
and
in
push
imulb
enter
addr16
test
inc
mov
fadd
and
std
loopne
or
rcrb
or
jno
sbb
pop
adc
nop
jo
lods
adcb
mov
cmp
dec
dec
adc
xor
push
pop
js
mov
inc
stos
xchg
cli
out
lods
adc
shl
cmpsl
jmp
lahf
inc
int
sbb
out
popf
shrd
dec
xchg
lahf
ss
mov
mov
pop
cld
orb
add
negb
dec
add
sbb
push
nop
mov
and
mov
or
fimuls
push
addr16
xor
ss
pop
fcmovb
jle
jo
in
enter
rclb
mov
mov
cmp
jo
cmp
rolb
out
inc
jmp
pop
int3
loopne
mov
test
mov
cmp
jmp
fmull
cmp
in
inc
xchg
stos
jnp
add
leave
rcll
ds
add
sarl
js
adc
test
fdivrs
out
shlb
cmpsb
add
pop
jmp
adc
subb
dec
mov
sbb
lcall
leave
jg
lock
daa
sub
jecxz
shrb
or
jg
inc
cs
or
in
call
sarb
cmc
or
sbb
loop
jg
jl
push
test
sbb
fsubp
sbb
lea
popl
gs
in
dec
loopne
outsl
scas
scas
dec
sti
fildll
fldenv
std
fistps
jno
cli
sar
loopne
cli
pop
sbb
cwtl
or
pop
je
and
lea
test
cmpsb
fbstp
dec
and
xor
stos
nop
inc
and
sub
enter
insb
sbb
jle
cwtl
loopne
add
mov
dec
inc
and
imul
mov
shll
xor
cmpsb
lods
xchg
andl
aas
cmp
mov
daa
mov
or
in
aas
lods
sbb
and
mov
ja
sub
add
and
xchg
hlt
fwait
dec
inc
mov
loopne
icebp
iret
push
adc
inc
mov
hlt
cwtl
adc
ljmp
lods
dec
scas
addl
rorl
add
lea
mov
xor
xchg
insb
xorb
orb
call
xchg
xor
jl
shr
cmp
pop
enter
pop
mov
mov
adc
xchg
xchg
int3
jo
outsb
out
rcrb
fidivrs
out
add
pcmpeqd
xor
mov
rclb
call
add
pop
mov
mov
lods
sti
daa
push
in
outsl
and
data16
add
leave
cmpsl
mov
and
es
in
mov
fs
dec
add
pop
ud0
xor
or
and
add
dec
mov
or
cmc
sub
ret
out
rorl
test
xchg
lock
mov
movsb
jnp
push
cmp
test
in
cmp
add
rcrb
add
sub
xor
std
pop
push
mov
es
push
inc
sahf
dec
ljmp
dec
out
mov
in
test
sub
aaa
push
int3
xor
jo
fidivrs
jecxz
std
push
mov
jns
fiadds
mov
rcl
mov
in
push
mov
mov
int
aad
xchg
in
iret
pop
rcll
pop
loopne
inc
ds
fcmovnb
or
push
xchg
inc
mov
fdivrl
mov
call
jle
adc
popl
jb
into
pop
adc
inc
and
inc
lea
cli
lds
out
dec
sbb
pushw
ret
push
leavew
mov
sub
fildl
mov
cli
push
sbb
cmpb
lock
repz
mov
sub
sarl
sub
pop
and
or
adc
adc
jecxz
iret
stos
mov
stos
inc
in
test
and
rol
add
popa
test
xor
jno,pt
out
and
add
cmp
loope
je
mov
mov
mov
rcrl
cmp
xor
pop
xchg
addb
imul
aam
add
mov
ljmp
lret
mov
mov
das
mov
jmp
and
lcall
aad
mov
mov
jl
je
cmp
sarl
pop
or
mov
out
test
inc
fwait
cmp
xchg
mov
fidivl
sub
mov
dec
lods
or
lret
rol
stos
dec
sub
mov
adc
pop
push
pop
imul
xchg
mov
inc
stos
fnstenv
add
jo
jnp
pop
pop
inc
mov
jno
add
jne
ret
ret
bound
cmp
mov
ljmp
lods
cmp
negb
or
cmp
and
mov
mov
in
push
mov
dec
daa
popa
iret
fiaddl
sbb
sub
jmp
jns
adc
mov
sbb
mov
mov
push
add
mov
insb
cmpsl
inc
xor
out
jl
mov
jmp
inc
sarl
fnsave
std
mov
fimull
shl
xor
js
jbe
jbe
jmp
pop
xchg
or
outsl
or
sbb
or
pop
out
pushf
inc
das
cld
sub
xchg
adcb
imul
ja
jne
pop
insb
rcr
sub
cmpsl
adc
into
in
xor
loop
inc
out
cmp
dec
jl
in
push
ret
push
mov
inc
and
add
pop
lock
into
sub
and
scas
das
dec
jae
mov
ret
cmpsb
xchg
and
js
dec
adc
je
pcmpeqw
add
mov
pop
push
inc
pop
hlt
test
pop
push
daa
push
jb
cmp
cmpsl
pop
dec
inc
inc
aad
dec
mov
adc
int
jb
push
mov
stc
lcall
fwait
mov
loopne
jle
sub
sbb
aad
pop
sub
orb
push
fdivrl
sub
or
lock
add
pop
sbb
insl
into
loop
xor
push
fildl
sbb
cmp
iret
das
cld
jno
adc
cld
bound
push
rcrb
pop
xor
inc
or
xchg
push
lods
jmp
jnp
cmp
inc
icebp
fcompl
xchg
sahf
cmp
or
cld
push
mov
xchg
inc
dec
xor
out
adc
cli
test
test
insb
mov
les
lahf
add
jecxz
fdivs
or
and
movsb
pop
xchg
jno
loop
shll
cmp
or
sahf
ja
mov
sub
scas
xlat
ret
das
bound
adc
outsb
loopne
mov
shlb
repz
cld
aas
arpl
xor
imul
rorb
je
mov
inc
cld
jecxz
and
mov
cli
mov
lret
cmp
adcl
out
pop
loopne
xor
inc
sbb
aad
xchg
mov
in
ds
jmp
push
outsl
pop
lods
push
rorl
push
jg
xor
dec
add
call
fimuls
das
push
rdpmc
adc
xor
add
in
cltd
repz
out
inc
xor
xor
xorb
lds
test
sti
loop
aas
mov
push
loopew
xchg
les
mov
bound
js
fsts
xchg
xor
and
nopl
push
pusha
leave
sti
mov
or
push
xchg
out
cmp
add
or
loop
jecxz
imul
mov
repnz
pop
mov
popa
pop
push
ss
add
sbb
arpl
push
xlat
mov
adc
cld
xor
jae
dec
inc
jnp
scas
mov
inc
out
xchg
mov
movsl
scas
mov
xchg
shll
stos
aad
iret
shrl
xchg
cwtl
add
loope
and
std
cmpsl
mov
popa
jmp
mov
lahf
loop
jnp
mov
ljmp
loope
fldt
mov
scas
inc
ja
repz
mov
sbb
call
sahf
clc
and
pop
pusha
push
or
push
in
sub
push
add
sub
mov
dec
mov
push
pop
cmp
sub
inc
cmp
add
loope
inc
mov
mov
and
scas
push
rclb
cwtl
xor
add
pop
dec
adc
notb
nopl
cmpsb
xor
mov
sbb
and
stos
nop
xor
mov
sbb
or
rorb
hlt
mov
idivl
xchg
and
add
cli
inc
clc
add
jle
sbb
test
scas
push
cmp
or
push
adc
adc
lea
mov
stos
sarl
xchg
dec
xchg
outsb
pop
sbb
clc
sub
loope
and
in
jecxz
inc
pop
out
rolb
xor
push
rorl
shr
pop
sbb
cs
das
inc
jnp
ret
ret
cmc
dec
mov
pop
pop
ret
mov
add
pop
dec
incl
inc
vxorps
enter
pop
xchg
ret
test
jnp
push
jbe
push
pop
mov
add
scas
scas
lea
adc
sbb
ret
push
push
imulb
adc
loopne
adc
sbb
shr
and
sbb
aas
stos
and
and
mov
addr16
push
sbb
test
xorl
mov
divl
push
xchg
add
adc
psubusw
pop
ret
js
add
jb
xchg
sub
mov
push
andb
push
gs
or
aas
ret
cmp
loopne
data16
xor
rcrb
loopne
jg
cmc
dec
out
push
imul
mov
sbb
mov
mov
jno
xchg
push
jmp
mov
std
inc
cli
ljmp
pop
insb
pop
nop
sub
hlt
mov
sub
jle
mov
fwait
mov
or
test
mov
pop
lock
lods
sbb
jge
adc
ds
jmp
push
push
std
xor
pusha
repnz
add
adc
pushf
or
and
and
push
out
or
lds
dec
mov
adc
xor
pop
adc
lds
xchg
mov
pop
pop
push
rolb
mov
shrb
dec
addr16
cmpsl
pusha
hlt
push
mov
fildll
adc
pop
call
lods
cwtl
stos
ds
roll
sub
lock
sub
aaa
push
pusha
xchg
scas
int3
subl
cmpsb
imul
in
or
enter
in
rorb
or
cmpb
add
push
insb
jo
or
nop
cmp
mov
mov
xchg
jae
and
test
loope
iret
cmp
pop
mov
inc
push
fiaddl
pop
lret
ds
jg
pop
fwait
sarb
mov
jp
pop
mov
mov
mov
xor
int
jge
push
jns
adc
adc
shrb
cmp
fldl
es
testl
sbb
pop
lcall
test
push
das
mov
mov
or
lds
les
sbb
sub
dec
sub
mov
and
jae
push
gs
test
outsl
push
mov
sbb
mov
adc
mov
jno
add
lcall
jo
xor
cltd
dec
or
test
lcall
push
sbbb
adc
imul
popf
push
xor
rcll
mov
inc
xchg
cmpsl
push
sub
jl
mov
sbbl
pop
loop
loope
push
movsb
jl
test
lock
popl
sub
xchg
adc
mov
mov
enter
call
aaa
ficompl
jle
std
push
xchg
cltd
inc
cli
and
imul
cmpsl
loopne
mov
xchg
sub
pop
cli
divb
fwait
jae
mov
and
mov
in
mov
jmp
gs
outsl
int
mov
push
jo
sbb
mulb
pop
imul
cmp
pop
pusha
or
mov
hlt
stos
inc
mov
jg
mov
sub
fstpl
cwtl
movswl
jno
or
lret
enter
or
and
push
mov
lds
mov
outsl
jbe
mov
pusha
ret
xor
and
pop
mov
jno
jg
add
in
cs
das
repnz
mov
lcall
push
aam
mov
loopne
jbe
mov
adc
mov
and
ljmp
es
jmp
pop
inc
sbb
push
mov
mov
sub
xchg
mov
or
mov
push
jo
xor
push
les
mov
rcll
xor
sbb
ljmp
adc
data16
mov
inc
mov
mov
cmp
xor
or
mov
jb
add
cmp
xchg
mov
call
insl
add
mov
jmp
jmp
jne
mov
cli
jmp
mov
mov
call
lock
mov
mov
ss
test
and
hlt
adc
ds
xlat
sti
mov
movsb
cmpsl
jl
jg
mov
push
mov
aam
popa
js
orl
dec
inc
or
js
pusha
push
cmc
out
repz
mov
pop
setge
test
mov
cmc
je
pusha
out
sti
andl
into
push
pop
jno
jg
or
scas
jbe
leave
fists
lahf
js
orl
add
fisubl
or
test
mov
push
fldenv
xchg
xchg
lcall
call
insb
adc
sbb
xchg
clc
into
movsb
sub
aad
daa
jl
aam
xor
clc
inc
sbb
xor
push
adc
cmc
and
inc
ret
lea
std
stos
pop
xor
add
mov
mov
mov
aas
inc
xor
mov
aas
lcall
js
jecxz
shlb
pushf
rcl
ljmp
dec
sub
jmp
and
fisttpll
pop
xor
jb
imul
mov
mov
mov
cmp
call
dec
push
stos
sub
xor
mov
pusha
gs
xor
mov
mov
sub
pop
shl
rcll
mov
fs
mov
pop
in
cmpl
movl
lds
push
xor
hlt
lahf
dec
mov
mov
pop
cmp
or
imul
lret
jmp
movb
ret
and
rol
outsl
loopne
xchg
js
int3
and
xchg
pop
sub
adc
and
ja
mov
vpshufd
stos
pop
cmpb
insb
dec
xor
jo
and
loope
jnp
sbb
mov
push
pop
aas
cmp
cli
push
inc
xorb
je
enter
inc
jle
and
xor
hlt
push
push
call
dec
mov
pop
or
sbb
mov
rcrl
in
stos
adc
adc
aaa
xchg
xchg
rcrb
es
push
incl
mov
jg
nop
mov
mov
out
sub
loopne
inc
mov
sarb
add
ss
fidivrs
arpl
adc
test
and
add
xchg
into
cmpsl
fnstsw
add
sub
and
push
xor
adc
inc
push
ljmp
mov
loope
cmp
push
cld
xor
or
lock
enter
cmp
push
fs
cs
push
jo
inc
in
pop
sahf
rolb
add
enter
out
vmread
push
loopne
mov
and
mov
jmp
add
xor
mov
push
dec
and
ljmp
lret
lods
mov
pop
shr
sbb
mov
pushf
scas
add
in
dec
fdivrp
rcr
jns
je
push
loopne
jmp
push
push
scas
lock
mov
sub
cmp
call
mov
pop
mov
aaa
outsb
mov
jg
xchg
pop
mov
adcb
add
mov
mov
and
test
lret
and
xor
rcrb
mov
aas
in
lods
inc
or
jmp
push
pop
pop
andw
jle
dec
std
popa
add
outsl
aad
gs
arpl
pop
adc
xchg
and
jbe
adc
or
push
movsl
push
icebp
xorb
loopne
and
sahf
xor
push
adc
mov
adc
subl
sub
or
arpl
inc
fcomps
lock
jl
xor
cli
lods
inc
xor
punpckldq
test
scas
ret
imul
outsb
push
xlat
inc
jge
stc
adc
push
pop
push
add
jo
lods
push
mov
pop
rolb
addr16
pop
shl
add
dec
add
stos
imul
clc
adc
mov
out
sbbb
add
inc
aad
jg
call
jecxz
iret
dec
lods
mov
adc
jae
test
xlat
rorb
push
pusha
hlt
shll
xchg
pop
pop
fsubr
addr16
dec
in
mov
fnsave
mov
mov
data16
dec
mov
clc
or
ljmp
rorb
pop
test
sbb
sub
shl
mov
repnz
fbstp
push
shll
mov
jp
cmp
mov
lods
push
outsl
add
xlat
lods
sbb
push
stos
or
mov
push
jno
jmp
je
cmp
popf
jmp
mov
lods
jb
movsl
lea
in
jns
cltd
and
cmp
sub
enter
adc
lret
ret
add
js
rolb
adc
call
jecxz
inc
test
mov
loope
std
xor
fistps
jmp
loop
inc
scas
pop
xchg
and
dec
sub
push
sahf
loopne
mov
inc
outsl
add
sub
sub
sub
mov
xchg
xor
les
or
mov
xor
aas
outsb
xchg
adc
add
cmp
lock
push
negb
pop
pop
push
fdiv
call
dec
xor
idiv
loopne
cmp
pop
loop
pop
ds
cli
or
ljmp
mov
repnz
rcrb
imul
out
nop
push
rorl
jg
pop
adc
je
cmp
rclb
jne
pusha
xor
add
imul
lods
out
aas
lock
sub
shlb
dec
hlt
rcr
sub
sbb
movsb
sbb
sbb
cmpsl
cld
pop
push
je
xor
lahf
mov
push
fs
jl
xchg
pop
ja
lret
lods
test
sbb
ds
add
inc
jg
inc
inc
xsaves
adc
inc
loopne
cmp
or
mov
lea
iret
jmp
roll
xor
inc
out
pop
jge
mov
es
fistpl
or
inc
lods
andl
fdivrp
popa
pop
data16
mov
in
pop
adc
std
mov
imul
int3
pushf
jle
enter
inc
sbb
cmp
std
push
out
xchg
inc
sbb
jmp
cmc
fstpl
sbb
popa
mov
dec
sbb
icebp
mov
mov
in
pop
push
mov
xor
retw
jbe
jne
loopne
xor
cmpsb
call
sub
jmp
mov
push
adc
and
jg
cli
mov
jg
lds
cmp
test
push
movsl
call
cmp
inc
loop
mov
push
lret
cld
in
loope
pop
sbb
sahf
inc
outsl
loop
pop
rorb
and
loopne
dec
jo
pusha
inc
jne
mov
cmp
andl
lds
or
hlt
jp
stos
ds
push
push
jecxz
mov
ds
in
mov
fldl
lcall
cld
cmp
mov
sub
jbe
push
in
xor
or
push
xchg
cmp
dec
jmp
ljmp
je
or
inc
das
loopne
ret
loope
or
int
sbb
call
outsb
mov
test
jp
lods
pop
sub
addr16
loopne
movsb
sbb
jb
pop
dec
mov
dec
pop
lret
jmp
xlat
add
xor
sbb
and
pop
mov
inc
or
pop
cmp
adc
xchg
mov
call
xor
add
outsl
sbb
and
xorl
inc
test
and
fistl
decb
invd
xchg
and
mov
mov
stos
f2xm1
inc
pop
dec
clc
cs
or
cld
and
push
into
pop
push
sbb
cmp
sbb
push
sub
loopne
xchg
or
fistpl
mov
mov
push
rolb
cld
pop
fildll
adcl
inc
daa
sbb
or
xchg
pop
inc
clc
push
adc
dec
cmp
or
mov
inc
pop
scas
sbb
scas
xchg
sbb
enter
jge
insb
dec
mov
sbb
jne
ficoml
jmp
mov
lods
ficoms
rcl
ljmp
sub
nop
pop
test
fsub
inc
pop
leave
aas
inc
div
lods
arpl
adc
lretw
xor
sbb
dec
jne
or
cmp
xor
mov
mov
lcall
ret
pop
jle
push
sub
mov
out
jne
stos
sbbl
xchg
or
into
repnz
shl
sti
insb
and
stos
out
lea
in
adc
or
popf
hlt
and
mov
lea
dec
fdivl
stos
cmp
cmpsl
pop
mov
or
data16
movsb
mov
pop
sbb
push
aas
or
call
sbb
add
fcomps
pop
pop
scas
dec
xor
arpl
das
je
push
adc
aas
loopne
mov
pop
mov
repnz
inc
loope
xor
fcomps
mov
inc
xor
sarb
push
xor
pop
mov
add
adc
test
mov
cmp
dec
sub
inc
pop
movl
inc
js
clc
int3
sti
dec
jecxz
lahf
clc
push
lea
xor
sbb
loopne
fistps
inc
xchg
jge
pop
mov
xchg
nop
push
jb
xor
setbe
sub
sbb
dec
jo
mov
jge
xor
into
test
out
test
enter
out
in
sbb
ljmp
pop
add
pop
enter
and
ljmp
sbb
fwait
stos
outsb
dec
pop
outsl
mov
test
addr16
push
push
fs
repnz
mov
test
aas
mov
nop
mov
pop
jmp
jns
xchg
xchg
lock
jp
adc
jge
std
cmpsl
push
xor
and
shll
xchg
dec
push
clc
movsb
lds
test
inc
sub
jecxz
jle
jl
cli
ffree
lret
cmpsl
aaa
decb
cli
add
int3
pop
stc
adc
xlat
addl
rcrl
push
push
inc
arpl
cmpb
insb
ret
outsb
push
add
testb
mov
and
dec
in
add
add
loopne
icebp
push
in
bound
loop
imul
ret
movsb
daa
dec
cli
sbb
roll
test
mov
pop
scas
pop
fisttps
subb
mov
push
insb
add
add
pop
dec
out
sbb
adc
push
dec
hlt
jne
hlt
lods
and
jae,pn
dec
sti
in
outsl
mov
hlt
test
cld
outsb
or
add
inc
shl
addl
jg
fsubs
inc
inc
cmp
pop
aas
js
xchg
push
mov
lds
mov
clc
lock
mov
cmpb
es
mov
insb
dec
jne
pop
sub
rcrb
lock
dec
mov
sahf
jb
aaa
inc
movsl
jmp
and
mov
xor
aas
ucomiss
push
ds
dec
inc
hlt
rcl
mov
dec
push
inc
sarb
dec
jecxz
jg
inc
or
inc
cs
xor
jmp
rcrb
idivb
test
imul
dec
inc
shll
cs
xchg
gs
sti
ss
sbb
push
fwait
cmp
ds
lret
jg
and
lods
lods
addb
and
push
and
mov
cmp
push
scas
xlat
mov
adc
cmp
popa
adc
inc
mov
push
inc
fiadds
lcall
push
cmp
repnz
mov
xor
push
mov
stos
cmp
jb
jnp
mov
iret
and
add
aaa
cmp
sbb
ljmp
fsub
pop
mov
pop
add
mov
pop
pop
nop
mov
inc
pop
in
or
mov
pop
mov
lds
lahf
inc
inc
sbb
outsb
shrb
ljmp
mov
sbbb
sbbb
push
mov
dec
loope
cli
and
jne
test
cmpsl
jmp
pop
xchg
and
or
ret
test
stos
and
nop
cmp
dec
mov
pop
jle
mov
ss
je
aam
jmp
xor
je
std
dec
and
or
jg
in
fmul
mov
or
mov
das
ds
xchg
rorb
pushf
and
push
or
inc
push
addr16
or
mov
outsb
and
icebp
add
adc
int3
pop
dec
icebp
jecxz
add
push
adc
fisubrs
notl
adc
adcl
out
push
pop
inc
sti
jnp
sbb
and
mov
lods
sarb
xchg
mov
add
cmc
das
mov
jne
push
xor
rol
stos
jne
jecxz
add
lods
mov
test
jmp
cmp
cmp
cltd
jp
cmp
repnz
sbb
jmp
mov
addr16
adc
daa
and
and
jl
mov
mov
sbb
loope
mov
lods
loop
push
std
ja
inc
and
push
cmpsl
push
inc
pop
ficompl
aaa
push
call
call
js
push
pop
sarl
enter
add
repz
mov
bound
leave
push
add
push
cmp
lahf
jno
or
decl
push
scas
add
ljmp
ss
cmp
pop
dec
cmp
xor
dec
setle
dec
orb
mov
inc
divl
mov
inc
dec
mov
rcl
addb
es
xchg
icebp
scas
loope
mov
test
fimull
adc
and
push
sub
data16
ss
jbe
rolb
inc
icebp
clc
mov
gs
xor
out
hlt
loopne
xchg
movsl
shll
lcall
mov
imul
or
adc
scas
jle
addl
dec
sbb
xlat
out
adc
push
int
and
cmp
icebp
jg
iret
jge
leave
cmp
pminub
mov
pop
std
pusha
mov
mov
xchg
sbb
inc
cld
sub
mov
jb
push
aaa
push
or
cmpsl
lds
mov
clc
inc
jno
mov
test
jo
in
jp
cltd
jle
add
jg
clc
into
test
or
pop
cmp
movsb
dec
cmp
mov
jp
mov
inc
jp
std
add
je
and
cmc
mov
xor
scas
sbb
and
cmpsb
push
scas
arpl
dec
jo
jl
and
xchg
jo
sbb
or
mov
roll
and
sub
sti
cli
stos
jo
pop
mov
add
nop
xor
loopne
sub
xlat
sahf
cmpsl
lods
in
lcall
addr16
sbb
push
dec
mov
sbb
jl
cmp
mov
jo
inc
xchg
and
cmpl
bound
xchg
sahf
add
inc
cmp
push
stos
data16
jb
cli
dec
push
loopne
stc
inc
mov
add
icebp
imul
push
testl
xor
rorl
ret
xor
aaa
adcb
and
lahf
mov
dec
loopne
dec
test
loope
lods
sti
xor
cmc
orb
mov
mov
jb
cld
mov
xor
mov
pop
xchg
cmp
mov
sbb
jmp
xor
pusha
mov
cs
xchg
xor
ljmp
inc
mov
cmp
loop
insb
cli
xchg
insb
shrl
cld
cmp
subl
mov
inc
sub
ljmp
sbb
rcl
das
cmp
cmp
adc
fdivr
cli
inc
leave
insb
pop
mulb
enter
cltd
js
add
dec
pop
sbb
fucomp
nop
or
fidivrs
call
xchg
out
rcrl
xor
pop
push
unpcklps
xchg
fucomp
pop
and
dec
push
and
in
pop
test
stos
cs
xchg
loop
push
adc
jl
xchg
testb
jg
mov
and
inc
sbb
add
fiaddl
push
add
sub
aad
pop
es
push
clc
xor
gs
rol
mov
pop
addr16
out
xchg
dec
stos
lods
in
shrl
scas
push
fwait
stc
cwtl
jnp
push
dec
xchg
lret
sub
ret
aad
test
jb
jnp
out
mull
test
push
dec
inc
sbb
add
jnp
inc
pop
push
add
mov
rorb
dec
sbb
jle
sahf
cmp
sbb
adc
jo
inc
aas
scas
shrl
shl
sub
push
mov
shrl
fwait
adc
push
sub
add
mov
hlt
or
lret
ja
xor
or
cmp
aas
mov
pop
repz
push
push
ja
fs
insl
movl
pop
sbb
jmp
ret
jg
xchg
pop
jl
add
sub
adc
mov
mov
loop
mov
push
loop
lock
jo
inc
and
das
ja
test
mov
or
jecxz
decb
aam
mov
xlat
xlat
pop
push
ds
stos
inc
mov
addr16
leave
push
dec
pop
sub
adc
lcall
icebp
add
pushw
in
hlt
orb
and
je
mov
les
loopne
and
adc
adc
jg
push
orl
mov
pop
hlt
dec
rorb
add
pop
jmp
test
add
jne
fisttps
mov
jb
adc
lock
fwait
divb
mov
mov
pop
orl
outsb
mov
imul
sub
mov
and
insl
cmp
imul
clc
das
pop
push
sub
iret
lcall
cli
lock
mov
test
pop
lock
aas
sbb
or
daa
mov
lods
int
mov
dec
mov
xor
pop
cmpl
xlat
aad
or
imul
sub
mov
pushf
add
ret
mov
sub
adc
mov
fnstsw
push
mov
adc
mov
hlt
mov
xor
jmp
lds
push
jge
mov
cmc
in
outsl
push
rolb
cltd
ljmp
fdivl
fisubrl
push
mov
std
lcall
scas
lahf
les
and
sbb
out
and
fimull
bswap
xor
xchg
movsl
aam
cmpb
cmp
push
mov
js
repnz
and
or
sub
cmpsb
sub
pop
cmp
clc
push
ret
and
in
and
or
popl
hlt
dec
push
les
bound
mov
xor
xchg
jnp
stos
fucomp
int
lock
or
sub
lret
nop
inc
push
clc
push
mov
push
out
fsubl
sbb
jmp
cmp
cltd
mov
negl
xlat
in
push
sbb
or
sbb
fldcw
fimuls
sbbl
sub
xor
xor
mov
icebp
lahf
or
popf
aaa
or
mov
push
push
fldl
ffreep
loope
aaa
aad
pushf
loope
paddd
cmp
mov
jne
push
push
xchg
mov
mov
data16
mov
loopne
js
or
shll
lods
test
sub
adc
mov
dec
outsb
push
movsb
stos
pop
clc
das
es
cmp
ret
mov
outsl
lret
outsl
popa
out
es
mul
jmp
push
lds
into
loope
mov
pop
out
inc
add
in
adc
loope
mov
aad
es
pusha
push
mov
shr
ss
push
inc
cmp
sub
popf
xchg
adc
gs
xor
inc
cmp
test
pop
stos
ret
pop
xor
dec
addb
cwtl
sbb
jne
loop
xchg
adc
pop
test
ljmp
cmp
xchg
lods
add
test
loopne
popf
insl
mov
xchg
cmp
test
call
lret
jmp
cmp
cmp
imul
mov
mov
scas
dec
inc
inc
sub
outsb
das
dec
fnstcw
xchg
xchg
pop
and
sub
jecxz
jp
shlb
mov
push
or
es
lcall
sbb
jg
inc
cmp
pop
mov
scas
push
and
and
lcall
clc
add
vmread
les
xor
or
xor
push
cmp
mov
outsl
sub
sub
inc
js
push
cmp
mov
lock
inc
jmp
call
jo
xchg
subl
js
testb
pop
div
inc
and
sub
inc
and
or
xorb
add
mov
test
push
cld
lcall
lds
add
push
loopne
lods
mov
fimull
and
xchg
jg
push
aas
or
adc
or
push
xchg
xlat
push
addl
call
fs
sub
add
jne
sub
jnp
pop
cmp
dec
bound
inc
sbb
push
daa
pop
pop
movb
sub
inc
mov
imul
pusha
cmpsb
pop
add
ficompl
xchg
mov
jg
scas
cmp
xlat
clc
push
pop
jae
mov
jp
mov
push
dec
adc
pop
or
add
fcoml
iret
inc
stc
mov
nop
gs
cli
scas
out
sar
push
rol
arpl
inc
add
adc
loopne
lock
sbb
push
les
mov
ret
adc
outsb
ljmp
xor
pop
adc
fucomip
mov
pop
pusha
adc
and
lea
pop
add
lds
sbb
jle
js
or
xchg
xor
in
add
pop
dec
iret
push
arpl
test
or
push
mov
pop
loopne
aas
xor
add
hlt
adc
mov
inc
pop
cmp
xchg
sahf
test
mov
xor
je
dec
cmp
mov
xor
mov
fsubs
subl
inc
or
or
ljmp
stos
pop
xchg
loop
call
repz
dec
lods
mov
mov
pop
push
or
push
ret
gs
outsl
shr
cmc
sahf
or
ss
int3
fdiv
adc
or
cmp
mov
repnz
mov
cmp
jne
call
jo
and
loope
call
dec
mov
and
stos
leave
sbb
xchg
push
pop
mov
adc
dec
lahf
jnp,pn
adc
adc
sbb
or
mov
mov
cmp
push
pop
adc
aaa
js
loopne
clc
pop
cmpps
pop
loop
mov
sub
lods
andb
sub
lret
mov
cld
sbb
add
pop
jb
mov
leave
shr
xchg
jnp
shrb
inc
sbb
inc
sub
mov
rorl
push
adc
sbb
shll
xchg
je
sub
and
pop
out
mov
push
sbb
pop
and
mov
pop
mov
xchg
hlt
filds
cmp
movsb
add
adc
xor
adc
or
stc
adc
cmp
sub
popa
or
ror
inc
ja
push
loope
pusha
sbbl
jno
jp
mov
loope
out
or
movsb
test
sbb
xor
inc
fcmovne
add
clc
orb
adc
cwtl
pop
out
sub
jge
nop
cmp
sub
mov
sub
or
and
aam
les
test
xchg
outsb
mov
lea
push
cmpsb
test
pop
jmp
cmp
insb
add
clc
xchg
cld
inc
or
icebp
push
mov
push
cwtl
jg
or
movb
pop
sti
xchg
dec
or
dec
mov
mov
in
mov
and
pop
xchg
je
std
loope
repz
std
jmp
mov
fmuls
clc
and
jae
inc
xchg
inc
ss
lock
or
lcall
lret
shr
rol
mov
psrlw
push
mov
movsl
and
sti
clc
xchg
scas
mov
mov
clc
push
loop
into
xchg
add
testb
ljmp
mov
dec
sbb
data16
nop
ret
ds
js
loop
push
dec
or
sahf
movsb
xor
adc
cmpl
xor
std
jno
jmp
enter
lcall
and
shlb
movsb
mov
adc
mov
pop
loopne
sub
push
fcmovbe
clc
aas
lock
icebp
out
mov
leave
push
mov
pop
mov
cmp
cmc
sahf
adc
hlt
mov
pop
lahf
xchg
push
push
rcl
shlb
aaa
pop
cmp
mov
js
jecxz
lds
cmp
push
pushf
mov
es
mov
push
stos
push
daa
ds
mov
fadd
adc
shr
or
out
xchg
and
divps
mov
fisubs
loop
sbb
loopne
outsl
pushw
lcall
ja
sbb
jbe
out
push
sbb
add
bound
das
dec
imulb
jo
cwtl
std
shll
lock
sti
es
pushf
mov
repnz
js
out
xor
sbb
push
cs
and
cld
jbe
xchg
mov
jno
jne
or
data16
mov
aas
sbb
ds
jmp
mov
push
adc
lret
mov
and
push
pop
mov
daa
mov
or
cltd
and
out
and
dec
cld
mov
mov
pop
and
imul
jecxz
incb
mov
jp
add
xchg
mov
xor
cmp
sbb
iret
add
pushf
lods
pop
aas
mov
sub
scas
fcoml
mov
stos
ds
aad
mov
cli
and
data16
lods
inc
add
loopne
sahf
cmpsl
inc
lcall
pop
xchg
push
movsb
in
hlt
daa
xchg
inc
mov
jle
push
mov
mov
int3
add
cmc
pop
inc
lds
arpl
bndldx
adc
pop
lret
xor
addr16
rcll
cmp
scas
insb
cmp
pop
mov
push
cli
mov
jg
pop
in
add
dec
dec
xchg
mov
xchg
mov
adc
mov
jns
push
les
es
icebp
mov
lods
lret
push
and
in
cs
jle
push
inc
push
mov
push
fcoms
adc
lret
mov
jno
mov
cmc
frstor
jg
add
test
movsl
cs
test
ljmp
insb
mov
cmp
or
jg
cli
push
aam
push
test
cs
in
and
or
cmp
xchg
rorl
loop
int3
data16
pop
repnz
mov
push
jge
arpl
xor
pusha
xor
or
shll
add
cli
mov
aad
jae
cmp
aam
scas
lcall
jb
and
jecxz
push
sar
mov
and
inc
dec
sbb
inc
jae
pop
and
loop
mov
mov
pop
adc
subb
sbb
insl
ret
adc
mov
iret
inc
push
mov
movl
and
push
es
lret
mov
jg
in
pop
arpl
lods
mov
mov
outsl
inc
mov
test
mov
xor
push
call
mov
out
outsb
pop
jp
lods
xor
cs
aaa
xchg
test
pop
adc
add
fwait
push
pop
into
inc
lds
rclb
jl
test
add
insb
cld
jbe
mov
dec
add
jp
cwtl
pop
adc
and
test
inc
dec
js
popa
push
orb
cs
and
sti
shrb
incb
pushf
adc
add
dec
inc
lds
push
push
jg
sbb
inc
push
fadds
and
aaa
movsb
add
arpl
cmp
aam
jo
xor
test
popa
push
mov
pop
cmp
cmpsb
push
aam
dec
mov
popf
mov
out
cs
inc
dec
or
sar
cltd
stos
negb
adc
push
lret
cmpl
sahf
in
dec
lods
cmp
cmp
jb
filds
loopne,pn
push
or
push
push
sub
pop
pop
ds
pop
and
add
loopne
icebp
enter
fistl
inc
rorl
mov
loope
inc
inc
and
mov
ja
add
and
int
fisttps
push
aas
jecxz
imul
add
inc
mov
movsb
pop
pop
dec
dec
movsb
mov
ja
cld
or
sub
in
adc
cmp
shll
or
or
xor
push
bound
in
fimull
movsb
inc
xchg
ds
sarb
hlt
inc
sub
and
mov
mov
popa
les
or
push
xchg
cmp
shlb
jnp
add
js
call
imul
dec
push
pop
dec
sbb
scas
lock
cwtl
int3
add
shll
inc
fsts
imulb
imul
pop
pop
push
iret
das
dec
add
addr16
popa
xchg
sbb
and
xor
ljmp
push
clc
jp
cwtl
inc
sbb
mov
jp
fnstsw
adc
add
pop
jle
adc
stos
test
inc
inc
pop
in
xchg
mov
adc
pop
js
clc
loopne
ja
test
jle
inc
adc
sbb
into
cs
dec
sbbl
out
lods
inc
scas
scas
stc
mov
add
and
sahf
cmp
in
mov
cmp
incb
stc
mul
loope
cli
ret
les
or
pop
jl
fdivl
and
add
xor
outsl
and
sbb
outsb
rol
adc
rclb
jg
and
leave
add
jg
orb
inc
ret
xor
jecxz
rclb
in
xor
mov
inc
mov
rol
pop
popf
inc
cmp
mov
or
pop
or
mov
test
pop
rol
arpl
push
adc
mov
or
dec
add
push
sbb
xor
jle
add
or
or
jmp
add
outsb
ss
pop
divl
std
mov
mov
mov
sub
cld
cmp
ss
push
sti
cmp
adcb
adc
loop
mov
xchg
mov
push
nop
inc
imul
and
xor
inc
push
movb
aas
mov
js
adc
push
stos
insb
lds
mov
pop
call
push
mov
or
adc
mov
ds
fcompl
or
mov
jo
call
stos
aam
xor
inc
aas
insb
in
in
dec
movd
repnz
in
or
call
and
push
inc
call
jb
mov
in
add
jl
lock
dec
in
add
add
movsb
das
sbb
pop
mov
pop
jle
out
fidivl
jmp
push
cmp
ss
icebp
fimuls
jo
in
mov
fcmovnb
mov
call
jmp
icebp
fsubs
lret
orl
dec
mov
in
add
inc
mov
ret
sub
adc
fdiv
loope
outsl
inc
cmc
mov
push
mov
inc
xchg
or
mov
cmp
push
nop
aad
test
ret
loop
sub
lret
pop
test
mov
jb
sbb
mov
inc
sub
aaa
rolb
jmp
insl
push
jns
mov
dec
arpl
lods
xchg
loopne
jmp
dec
sbb
or
ss
push
call
mov
push
lock
scas
cwtl
adc
xchg
je
pop
adc
fwait
popf
dec
adc
push
adc
mov
or
cmpsb
int
add
pusha
sbb
ja
ds
lods
xlat
aad
out
stos
jne
sbb
cmp
inc
sub
mov
ret
mov
sbb
sbbb
scas
in
inc
inc
mov
pop
ret
in
mov
add
mov
and
stos
pop
mov
push
call
or
or
outsl
jle
shlb
aas
xor
stos
adcl
and
adcl
push
adc
shll
inc
adc
or
icebp
or
xchg
ljmp
fisubl
cmp
xor
shrl
jnp
and
adc
xor
je
lods
rcrl
mov
data16
mov
cmpb
loop
aas
gs
into
push
aas
ret
scas
sarb
out
cmp
dec
out
xchg
mov
sub
sarl
cli
mov
scas
or
cmp
retw
sbb
insb
hlt
jne
hlt
push
push
pop
and
repnz
inc
mov
push
sub
mov
pop
mov
pusha
std
aam
sub
pop
test
and
ret
mov
xor
inc
xchg
or
ficoms
push
inc
cmp
add
fnstcw
fcoml
mov
clc
xchg
rolb
mov
imul
bt
push
dec
adc
pop
je
ret
sub
sbb
test
mov
fld1
cmp
test
and
push
add
cld
adc
inc
outsl
pop
pop
push
push
push
pop
ret
movsb
or
popf
sbb
iret
jns
dec
cld
push
int3
in
xlat
mov
loope
ds
test
loopne
cmp
test
aad
mov
sub
or
mov
adc
call
sarb
or
cltd
push
jmp
scas
pop
and
inc
loope
loop
mov
or
xchg
dec
xchg
clc
movsb
push
or
insl
pusha
jmp
scas
stos
jp
shll
pop
dec
mov
or
fldlg2
aam
cmp
pop
cli
push
push
push
adc
sbb
mov
pop
mov
or
es
xor
loopne
shrb
loopne
mov
xor
jmp
add
popf
sub
sub
loopne
sbbl
pop
fxch
cmpb
sub
into
xchg
jge
es
jle
mov
pop
cltd
cmpsl
aas
cmp
adc
pusha
dec
xor
pop
and
data16
ret
jge
in
in
add
test
mov
std
mov
jge
dec
push
jl
pop
jecxz
insb
inc
jg
call
add
adc
or
mov
cmpsb
testl
jg
xchg
mov
cmpsl
sbb
or
les
jnp
nop
sti
pusha
stos
inc
adc
aaa
cmpsl
imul
out
adc
or
aaa
xchg
ljmp
cli
movsb
mov
int
xor
ret
xor
jb
sub
jnp
cmp
sbb
dec
mov
ds
popa
cmc
jmp
mov
push
xchg
add
and
lock
fdivr
and
jbe
jno
rcrl
fisubrs
jp
icebp
icebp
cs
ss
shll
call
xchg
stos
ret
sbb
cwtl
xor
jl
cmovl
call
enter
and
add
dec
pop
movb
cmp
sub
aaa
push
clc
mov
or
ds
sahf
mov
imul
dec
js
pop
das
cmp
pop
lods
roll
hlt
cmpsl
jecxz
push
pop
int3
cmp
insb
jecxz
sub
test
rolb
ljmp
movntq
add
sbb
sbb
or
and
mov
xchg
or
mov
pop
cltd
add
in
inc
mov
mov
adc
inc
shrl
js
popf
xchg
loopne
dec
sarb
loope
xchg
and
push
test
push
nop
loopne
push
popa
sub
push
jecxz
clc
dec
sahf
jno
pusha
and
sti
mov
xlat
add
enter
pop
mov
inc
outsl
es
jle
mov
and
js
lcall
lea
in
into
popa
push
push
mov
or
inc
mov
pop
aas
sbb
xchg
inc
add
or
lret
sbbb
rol
scas
mull
imul
sbb
clc
pop
inc
sbb
ret
cwtl
mov
movsb
xor
rorl
xchg
xchg
lea
pop
inc
xchg
mov
cld
jbe
dec
xor
cmp
mov
fs
ljmp
cld
cld
adc
lock
jp
sbb
add
or
jle
hlt
xlat
imul
and
in
enter
push
shrb
frstor
cmp
adc
push
clc
mov
jg
pop
into
and
addb
out
adc
call
inc
gs
ss
jecxz
or
les
testb
mov
sub
dec
sbb
push
inc
rolb
arpl
ret
lret
sbb
icebp
in
sub
mov
lods
loope
pop
test
fs
adc
stc
test
test
aad
es
enter
or
ud0
test
push
push
add
dec
lret
fidivrl
push
pop
xor
arpl
fwait
xchg
push
jb
mov
sub
mov
add
mov
jecxz
mov
fs
lea
add
aam
xor
sbb
sub
pop
fiaddl
xlat
out
ror
mov
xor
inc
inc
fimull
adc
push
repz
inc
jo
push
or
scas
cld
out
scas
jne
mov
jo
adc
adc
inc
xor
loop
jle
inc
daa
icebp
pop
sub
out
out
js
sub
inc
fldenv
xchg
in
add
sbb
cmp
adc
sbb
lcall
jp
and
in
dec
pop
aad
push
fwait
xor
loop
pop
sub
pop
dec
cld
inc
movsl
loope
gs
xor
jmp
clc
add
cld
push
lock
and
jmp
lahf
ret
lcall
pop
callw
cld
aas
jl
iret
aam
push
lock
clc
adc
nop
imul
es
test
add
in
movsb
jp
jecxz
jbe
lods
xlat
es
push
adc
addb
mov
mov
cmp
and
xchg
push
cmp
jbe
pop
adc
mov
sbb
lcall
lock
into
enter
cmpsl
jecxz
adc
and
adc
sbb
jmp
jae
sub
cmp
loopne
cmp
mov
jecxz
lret
jmp
mov
js
fistpl
popa
out
and
and
int
aad
sbb
adc
rolb
and
jnp
icebp
add
std
out
jo
pop
inc
adc
je
xchg
push
sarb
xor
lret
jae
ret
in
mov
in
mov
pop
pop
test
in
sti
sbbl
dec
sbb
lods
sbb
lret
divl
or
xor
mov
jb
adc
mov
add
sbb
add
in
pop
ss
add
jp
inc
ljmp
sub
adc
out
mov
inc
pop
pop
mov
loop
cld
es
push
imul
lods
push
sbb
push
mov
dec
mov
jle
out
or
sub
ret
mov
mov
xchg
push
pop
xchg
cmp
ss
push
mov
adc
pop
sub
mov
add
xor
xlat
dec
mov
adc
add
cmpsb
fcoml
and
in
mov
xchg
dec
ret
or
insb
cmp
inc
jae
std
or
ret
pusha
push
push
jle
std
mov
push
fdiv
mov
bound
clc
into
xchg
in
movl
cmp
ret
mov
cmp
sahf
mov
fsubrl
push
rclb
jbe
jecxz
mov
sbb
cmpsb
daa
ljmp
inc
out
dec
sub
sbb
mov
xchg
test
push
enter
xchg
push
sub
push
xchg
dec
dec
inc
cld
lock
sbb
sbb
pop
lahf
xor
push
test
pinsrw
push
outsb
sub
adc
or
push
int
jbe
cmp
or
cmp
std
mov
jo
shrl
xchg
xchg
xchg
rclb
and
push
sbb
mov
xchg
mov
sar
shlb
xchg
mov
int
adc
fdivrs
sbb
mov
mov
jecxz
out
out
enter
filds
sub
dec
cmpsb
adc
cmp
cwtl
in
inc
mov
inc
scas
sahf
cli
hlt
pushf
insb
ja
pop
dec
and
add
pop
sbb
mov
mov
mov
les
or
pop
shrb
lock
push
mov
fwait
ds
mov
in
inc
sbb
fldt
jmp
sbb
call
cmp
sti
push
pushf
mov
jmp
inc
mov
cmpsb
push
inc
push
outsb
mov
popf
inc
jp
inc
xchg
shlb
lret
jb
lods
push
sub
sbb
sub
in
loope
testb
mov
je
sub
std
adc
aad
aad
mov
dec
shlb
push
inc
adc
insb
mov
sbb
ljmp
xchg
jmp
sbb
outsl
lret
ds
ret
cwtl
insl
shll
es
andb
call
call
mov
cltd
testb
test
jb
lahf
mov
fsubs
xor
sub
clc
or
sar
aad
pop
jle
test
mov
or
xchg
ret
push
dec
js
push
mov
or
jp
mov
dec
cli
mov
sub
movsl
xchg
or
test
xor
mov
add
fwait
sub
daa
repnz
add
rolb
popa
lock
dec
jle
lret
and
xchg
out
jno
cmp
int
movsb
repz
pop
jne
add
inc
pop
adc
out
add
mov
rol
xchg
outsl
movsb
push
in
sbbb
int3
and
lods
enter
mov
sub
outsl
sbb
inc
repnz
cmc
dec
xchg
imul
pop
mov
hlt
orb
mov
and
xor
add
outsb
cmpsb
sub
clc
inc
cli
loopne
mov
add
mov
and
and
or
push
sahf
arpl
push
inc
les
mov
cmp
sub
push
js
cmp
fildl
sub
lock
mov
jl
jno
bound
loopne
into
outsb
push
pop
and
subb
popl
cmp
xor
stos
test
xor
pop
lock
jp
adc
jl
xor
adc
loope
mov
mov
rolb
or
jge
lods
in
inc
fnstcw
or
mov
insl
int3
adc
jecxz
sahf
mov
dec
mov
push
movsb
imul
cmc
jp
nop
std
cmpsb
mov
pop
mov
out
test
cmp
out
in
in
mov
mov
psadbw
jne
dec
fs
imul
cmpsl
push
js
dec
and
imul
mov
int3
pop
popa
outsl
add
and
add
cmpl
add
add
lret
adc
fdivl
ja
lret
shl
push
les
add
cmc
sbb
repz
or
inc
stos
clc
jmp
imul
xor
rcrl
mov
cmp
stos
call
add
stos
cmp
add
xchg
adc
in
inc
std
in
adc
fldcw
in
ret
mov
sbb
out
xlat
xchg
rorb
push
push
mov
adc
xor
adc
inc
adc
mov
cld
mov
mov
sub
pop
inc
mov
das
outsb
sar
push
mov
lock
imul
push
jmp
mov
jno
ret
jb
inc
sub
popf
loop
clc
movb
mov
bound
jo
xor
jle
adc
cwtl
mov
ds
sahf
cmp
mov
mov
addr16
jp
add
jecxz
inc
loopne
mov
aam
xchg
stos
dec
dec
ror
xor
sbb
gs
add
sbb
jle
test
movsl
lods
enter
roll
pop
inc
mov
jp
inc
call
cmpsl
movsb
sbbb
push
push
xor
pusha
lea
or
cmc
add
test
sbb
inc
icebp
insl
xor
inc
lahf
test
jno
mov
int
sub
cs
add
hlt
cmp
shll
jmp
pop
mov
les
loope
lods
scas
out
inc
adc
adc
cmc
and
xor
cmc
bound
jbe
negl
scas
push
inc
pushf
stos
bound
jno
jmp
ss
std
dec
mov
or
and
xchg
lret
mov
mov
decb
scas
pop
adc
cltd
pop
ljmp
mov
inc
leave
movsb
nop
or
pop
cmp
ret
jo
or
xor
add
cmp
sub
scas
test
xchg
gs
lret
sahf
lock
adc
xchg
mov
pop
in
les
test
cwtl
adc
dec
adc
cwtl
popa
test
nop
adc
mov
adc
andl
ret
icebp
cmp
into
cmp
xchg
pop
mov
test
jl
or
inc
xchg
or
adc
mov
or
add
popf
dec
inc
clc
hlt
aad
inc
push
or
shl
mov
shlb
jle
fdivl
inc
int3
testb
int3
call
ss
inc
mov
xor
fidivl
xchg
popf
andl
cwtl
cltd
divb
add
adc
clc
dec
or
mov
xchg
into
adc
outsb
and
lock
adc
mov
clc
jp
pop
out
sbb
mov
test
sub
and
push
sbb
mov
or
test
add
fs
in
and
scas
sahf
outsl
cmpsl
testl
fwait
in
xchg
mov
or
inc
or
jmp
mov
or
pop
cmp
cli
sbb
dec
and
shl
repnz
sbb
lods
insb
push
movsb
push
test
adc
fsubrp
incl
notb
jg
mov
jnp
and
dec
lahf
mov
sbb
sbb
or
mov
mov
push
jb
adc
mov
js
aas
jbe
and
fcoml
cltd
aas
xchg
rcl
or
fisttps
add
mov
jecxz
adc
in
cmpsb
jle
push
icebp
sbb
sbb
xor
mov
test
add
mov
sub
jle
inc
outsl
jnp
cmp
pop
lds
sub
aad
mov
mov
adc
jb
jnp
fnstsw
inc
cmp
add
sbb
add
xor
or
cld
mov
pop
or
insl
pop
and
icebp
pop
pushf
cmpxchg
mov
in
jae
dec
js
dec
psubd
testb
jl
testl
dec
xor
push
enter
mov
adc
negl
jl
imul
dec
mov
enter
or
adc
aas
xorb
shlb
in
sbbl
fisubrs
or
add
xchg
jecxz
aas
add
pop
ss
clc
inc
add
and
imul
mov
cli
pop
jmp
ja
int
data16
movsb
ss
jnp
cmp
out
xchg
rclb
xor
dec
sub
sub
lock
mov
fucomi
movd
pop
mov
push
call
pop
cmp
mov
pop
popa
xchg
je
aad
fsubp
adc
xchg
pusha
stos
fisubl
push
push
aad
add
fcmovb
and
xchg
orb
mov
push
dec
test
push
xchg
stos
pop
add
clc
sub
fldcw
movsl
push
xor
stos
or
daa
inc
ljmp
add
js
pusha
add
inc
ja
iret
push
xor
dec
sbb
and
nop
lds
or
mov
mov
jp
sbb
pop
ficoms
push
add
ljmp
add
negb
das
popf
lcall
cmpsl
and
orb
jg
nop
push
or
xor
push
push
push
jae
repz
adc
mov
mov
push
mov
rolb
inc
outsl
xchg
lods
aad
adc
sub
das
shlb
push
hlt
rcll
ss
jae
add
stos
push
lods
jo
sub
and
pop
aas
xor
hlt
out
or
or
daa
nop
push
cmp
inc
adc
insb
mov
push
dec
call
pushf
inc
xchg
enter
js
jp
cmpsb
enter
leave
add
cmp
sbb
lret
sbb
inc
cli
dec
mov
sub
das
cwtl
cmp
fdivs
mov
aam
fs
fnstcw
scas
filds
adc
jg
xchg
cmp
shll
push
stos
lcall
fdivr
push
inc
inc
shlb
mov
roll
cld
daa
loopne
test
push
ja
mov
and
mov
pusha
mov
aam
adc
push
adc
mov
movsb
sub
pop
cmp
bound
jae
xor
std
adc
mov
sub
dec
flds
test
bsf
mov
icebp
fimull
xor
inc
cmp
mov
or
push
negl
inc
push
cmpsl
ret
imul
cmp
cwtl
add
add
sbb
cs
sbb
dec
mov
call
mov
mov
hlt
sbb
adc
or
inc
dec
loope
loopne
pop
jl
femms
mov
jo
and
dec
imul
std
test
movsl
loop
lods
rol
xor
mov
pop
push
outsb
and
or
mov
pop
mov
cld
inc
enter
mov
sti
loope
int3
fs
clc
outsl
je
inc
lods
pop
dec
inc
mov
add
cmp
xor
idivb
shll
mov
ret
mov
mov
push
int3
push
push
mov
orl
mov
fistps
jno
mov
jge
shll
mov
jae
cmpsl
mov
sbb
sbb
sub
andl
sbb
xor
testb
cmp
icebp
push
cmpsl
pop
sbb
test
lret
xor
cwtl
daa
dec
and
mov
and
cmpsl
outsl
add
push
xor
pop
mov
inc
aas
sbb
ds
cmc
mov
sbb
js
xchg
mov
imulb
das
aam
lret
mov
adc
mov
mov
inc
roll
pop
jg
adcb
sbb
add
cld
push
hlt
lock
jmp
movsb
push
mov
arpl
sub
test
or
cmpsl
jnp
sub
repz
testb
ja
mov
add
ret
push
in
test
in
adc
sub
rcrb
hlt
pop
xorb
xchg
filds
sarb
jno
rol
mov
sarl
add
stos
fistl
arpl
mov
fistpll
out
and
in
mull
cmp
popf
ss
jne
aad
dec
jmp
xchg
jp
iret
and
pop
ss
fimuls
push
scas
dec
nop
sub
mov
push
les
sub
mov
adc
dec
inc
push
and
bound
in
add
pop
ss
mov
push
aam
pusha
mov
aad
adc
fwait
xor
nop
hlt
adc
dec
and
fisttpll
and
rcrb
cmp
ja
xchg
fs
call
data16
cmp
dec
push
dec
jp
fwait
loopne
pusha
xchg
mov
inc
scas
adc
fisubrs
pop
jno
in
xchg
outsb
cs
xor
and
xchg
mov
lock
mov
hlt
push
pop
dec
mov
cmp
ret
adcl
into
cmc
inc
and
jne
faddl
add
out
jl
adc
and
xorl
out
imul
or
pop
or
mov
adc
or
loope
xor
sbb
popf
cmp
aas
push
push
adc
mov
add
cld
punpckhbw
shl
mulb
stos
mov
lock
lock
jbe
sub
cwtl
jae
mov
sbb
iret
jp
xor
lds
shr
inc
cmpl
aas
fwait
fstpl
dec
xchg
pop
in
clc
mov
insb
adc
mov
shlb
add
rorb
mov
sub
push
test
add
cmp
mov
cmp
hlt
inc
push
mov
cltd
repnz
lods
xchg
add
aaa
cs
aaa
sarb
sbb
push
adc
pop
test
mov
aas
adc
aas
rolb
hlt
inc
shr
adc
mov
push
push
mov
enter
shl
and
dec
xchg
pop
xchg
aad
dec
js
das
jo
ljmp
mov
jle
dec
lods
and
movsl
push
pop
out
xor
flds
mov
das
lcall
adc
xor
movl
sahf
pop
leave
inc
cmp
xchg
lret
je
icebp
push
adc
add
add
mov
pop
xor
mov
adc
orb
jne
mov
pop
aam
mov
push
inc
mov
outsb
in
pop
xchg
jecxz
fsubrl
imul
xlat
inc
sbb
nop
add
shll
jnp
cmp
pop
xchg
mov
jle
pusha
sbb
inc
sarl
and
out
test
push
imull
movsl
mov
test
fisubrs
sub
push
push
jmp
cmc
gs
dec
adc
popf
sbb
clc
push
dec
sub
dec
sbb
push
repnz
xchg
inc
add
pop
xchg
scas
mov
jle
out
push
adc
xor
push
hlt
mov
lahf
cmpsb
dec
rorl
arpl
add
xor
xor
pop
pop
pop
adc
pop
push
sahf
push
cmp
dec
stos
cwtl
push
pusha
fdivrl
vandps
popa
push
bound
cld
mov
shl
or
icebp
dec
in
xchg
ret
or
add
dec
add
adcl
mov
sub
lock
inc
inc
add
mov
xor
pop
push
sti
xchg
jnp
ja
test
aas
leave
mov
mov
or
sub
cmpsb
or
sahf
imul
sbb
xchg
add
adc
dec
dec
rorl
pusha
fistpl
pusha
call
clc
adc
aad
lcall
lcall
pop
push
jbe
ret
iret
lret
les
xchg
push
not
dec
stos
add
cmp
je
mov
rcr
push
and
adc
mov
mov
pop
out
mov
movsb
ss
cmp
aas
add
rorl
iret
and
icebp
negb
inc
lcall
add
lock
jb
iret
clc
xchg
pop
sbb
or
xlat
cwtl
push
mov
adc
sbb
std
imul
ja
inc
mov
je
movsl
mov
lock
out
push
icebp
sub
adc
inc
pop
jmp
pop
adc
jo
sbb
fbld
cmpb
adc
dec
jmp
in
fs
pop
test
cltd
stc
pop
mov
xor
xor
sarb
or
cmc
clc
es
jmp
sub
inc
sbb
adc
inc
jo
sbb
mov
in
mov
add
sbb
add
int
minps
sub
fnstenv
lock
cmp
push
je
jbe
cmp
push
pop
xchg
cli
shrb
outsl
add
insl
js
xor
ret
in
hlt
adc
mov
pop
sub
sbb
jne
dec
loope
ja
and
out
add
or
fisubrs
or
xchg
sbb
xchg
movsb
scas
mov
sub
mov
insl
pop
out
push
add
dec
les
jg
or
mov
int3
bound
cmp
mov
stos
test
loopne
insl
lret
js
stos
jae
xor
add
jge
sbb
lods
xor
mov
pop
cli
mov
inc
lret
lods
dec
sbb
cmc
adc
pop
cmpsb
adc
or
insb
aas
inc
ds
mov
xor
call
out
xor
cmp
jne
push
sbb
xchg
std
mov
jl
cmp
add
lahf
push
mov
inc
dec
dec
xor
roll
cmp
nop
sub
dec
test
xlat
std
xor
cmp
xchg
stos
dec
lock
mov
mov
jbe
lea
decb
lods
rep
cmpb
adc
pop
cmp
sbb
pop
sarb
mov
mov
or
clc
cmp
aas
xchg
xor
pop
and
inc
clc
gs
mov
test
into
jl
mov
mov
or
mov
aad
mov
sub
push
mov
sub
ret
ljmp
out
mov
cs
jnp
adc
loopne
and
test
stc
push
out
into
ret
xchg
ret
add
push
call
push
adc
cmp
jbe
dec
cmc
sub
inc
stc
dec
mov
faddl
sub
les
loopne
js,pn
add
push
js
push
dec
push
mov
mov
or
lret
loope
sub
sbb
xchg
lret
xchg
test
clc
lcall
fisubl
adcb
dec
or
sbb
idivb
inc
push
push
inc
fists
mov
stc
fidivs
loope
lock
cli
data16
pop
mov
cmp
mov
jne
push
sbb
aad
into
icebp
fildll
mov
jmp
mov
mov
test
adc
orl
fs
scas
cmp
xchg
push
mov
mov
scas
mov
jo
mov
shrb
inc
cmp
adc
outsb
sub
add
fadds
jns
jle
daa
std
cli
js
adc
mov
addr16
push
clc
xor
or
pusha
fsubp
in
cmp
pop
xchg
dec
or
rol
add
inc
lcall
inc
xchg
sbb
aaa
cld
push
rclb
cmc
fnstcw
shl
push
jo
and
int
add
popf
xor
je,pt
stos
push
mov
data16
mov
in
sbb
mov
push
insb
add
xchg
ret
sbb
and
pop
mull
sub
bound
pop
jge
cld
inc
or
scas
call
push
cmpsl
and
arpl
adcl
enter
cmp
pop
psllw
jl
pop
or
mov
lods
cmpsb
mov
loop
test
ja
es
xor
sub
adc
add
sti
sarl
mov
arpl
stos
cmp
sahf
aas
xchg
sub
in
lods
icebp
lret
cltd
mov
mov
inc
xchg
out
lret
push
and
pop
push
divl
push
movsb
je
pop
mov
sbb
mov
jbe
xchg
ds
in
xchg
push
loop
jb
bound
inc
xor
mov
add
mov
cmp
sahf
cmp
je
sbb
or
mov
imul
call
pushf
pop
lcall
sub
es
adc
cmp
push
test
imul
mov
inc
adc
pop
add
pushf
xchg
and
aaa
mov
sti
sbb
mov
lods
test
sbb
xor
inc
or
push
sub
pop
inc
jl
adc
rorl
lds
leave
or
cmp
or
mov
sti
ljmp
lahf
repnz
inc
jmp
inc
pop
fs
stos
add
dec
and
add
adc
loopne
push
or
add
fisubl
sbb
mov
aas
wbinvd
mov
jne
dec
clc
aaa
xlat
cs
cwtl
or
int3
shrb
inc
jl
sahf
in
fwait
mov
enter
xor
mov
pop
mov
pop
lahf
add
or
pop
jb
icebp
inc
shrb
out
jg
xor
xchg
xchg
xchg
repnz
in
cld
insb
inc
push
movsb
mov
fs
add
cwtl
dec
test
pop
pusha
pop
mov
push
push
mov
cmc
jg
jge
in
xchg
popf
loopne
imul
ljmp
push
icebp
mov
lods
jp
xchg
loop
nop
mov
adc
inc
into
dec
sbb
loop
jbe
xchg
in
mov
dec
std
xor
daa
loope
mov
push
pushl
mov
push
inc
hlt
lods
ret
push
js
cld
fldenv
les
inc
call
mov
fs
ret
std
out
mov
rcrb
mov
fmull
pop
push
pusha
pop
cs
inc
cmpsl
push
into
mov
adc
shll
cli
test
cmpsb
insl
mov
inc
push
stc
xor
aas
pop
pop
adc
sbbl
aaa
jne
fs
mov
aas
xor
into
sbb
adc
xchg
xchg
push
stos
mov
push
xchg
pop
int3
mov
xor
int3
push
inc
add
aam
icebp
scas
jecxz
adc
xchg
or
out
pop
sub
outsl
rclb
ljmp
clc
leave
cmc
jbe
imul
sub
sbb
out
push
sbb
sbb
scas
bound
repz
sar
leave
cmpsb
sbbb
sub
out
in
jb
ret
inc
loop
ljmp
mov
daa
cmp
xor
jo
dec
mov
loopne
dec
loope
mov
loope
ret
lea
inc
ret
rorb
testl
cmp
rolb
out
rcrl
ret
xchg
loope
add
push
push
or
sarl
fadds
mov
or
stos
adc
dec
pop
cld
rcl
test
xlat
jns
lods
out
in
jle
rorb
push
cmpsb
or
fcompl
adc
push
adc
scas
lea
mov
js
push
sub
rorl
outsb
add
outsb
jg
lods
adc
mov
adc
les
push
pop
les
cmp
cmpb
mov
or
shrl
sbb
clc
cli
mov
jp
adc
mov
insl
repz
xchg
mov
mov
inc
and
xchg
cld
and
loopne
enter
mov
push
call
or
inc
adc
adc
dec
cwtl
xor
in
test
lret
lcall
jae
loope
clc
fstpl
or
push
fldenv
arpl
add
sbb
sub
out
xchg
into
andb
fiaddl
divb
shrb
daa
addr16
jne
inc
jge
fidivs
jne
sub
pop
into
inc
sarb
xlat
nop
data16
sbb
test
mov
sub
dec
push
inc
loop
icebp
aas
add
lcall
or
aaa
pop
nop
loopne
lock
push
inc
and
mov
mov
sub
sub
xor
push
ret
cmp
icebp
filds
add
add
cs
jp
xchg
cltd
pop
mov
or
test
cmc
in
pusha
das
lods
jg
adc
jo
or
cmpxchg
mov
sahf
int
inc
into
arpl
movsl
mov
inc
ret
adc
push
les
jle
ret
ljmp
lcall
jecxz
pop
push
cwtl
decl
push
cli
outsl
bswap
and
sub
xor
and
xchg
std
mov
fs
dec
sti
aam
jne
imul
test
add
push
rorb
inc
pop
test
jbe
adc
das
mov
adc
pop
jo
dec
ret
and
jb
pop
insl
ds
adc
push
jbe
mov
push
sub
ljmp
pop
pop
mov
ljmp
xchg
add
push
movsb
jmp
mov
nop
ljmp
outsb
xor
lea
jnp
pop
lea
mov
js
into
fsubs
das
mov
nop
shrb
cwtl
sub
imulb
loop
loopne
push
lods
add
shrl
pop
pop
test
cmc
filds
jle
jae
xor
es
and
xor
or
xor
push
aad
push
fstpt
mov
fsubs
shl
arpl
or
fcmovbe
out
xor
xchg
out
dec
call
mov
add
cmc
inc
inc
fnstsw
add
repz
popl
sbb
aam
mov
mov
sbb
and
push
mov
mov
loop
mov
aas
inc
adc
sbb
jge
iret
subl
or
arpl
test
inc
insb
mov
and
xchg
loopne
push
xchg
add
mov
jl
sub
test
dec
or
xorb
ljmp
leave
in
cli
and
nopl
push
clc
cmovp
clc
mov
jbe
inc
inc
add
push
jge
dec
push
sub
dec
dec
sub
jae
loope
mov
mov
push
jge
and
negl
mov
xchg
sarb
sub
loopne
cmp
scas
mov
pop
ljmp
roll
cmp
frstor
inc
push
inc
bound
mov
pop
mov
stos
mov
lret
fisubrl
rcl
add
xchg
or
fsubp
das
mov
sub
pop
aam
sub
insl
pop
push
xchg
movsl
jno
loopne,pt
or
sbb
and
sbb
incl
inc
cltd
lock
into
add
inc
cmpsb
mov
out
sub
add
pop
bound
mov
sub
test
clc
arpl
imul
push
adc
push
stos
bound
add
imul
adc
cmpsl
mov
mov
leave
push
mov
jmp
push
aaa
cmpsl
push
std
bound
pop
ljmp
pop
cs
movb
jmp
in
mov
jl
movsl
mov
push
sub
es
jg
push
push
push
mov
repnz
in
pop
xor
push
cwtl
jnp
les
sbb
iret
push
mov
enter
clc
dec
push
in
cli
jg
inc
cli
jle
adc
xchg
sbb
and
idivl
add
sti
and
sub
aas
imul
jg
or
mov
fdivp
mov
pop
iret
cmp
inc
cmpsl
jnp
lea
movb
data16
int
dec
in
jo
add
sbb
xor
loopne
mulb
cmc
inc
xchg
je
shl
es
pop
mov
push
subl
jmp
push
incl
add
imul
rorl
pop
xor
jae
inc
push
push
movl
out
pop
lcall
lock
cmpsb
pop
js
pusha
mov
push
aam
jg
in
push
pop
pop
sahf
fdivrs
add
scas
les
mov
popa
mov
rorb
mov
loope
adc
dec
cmpsl
stc
out
sub
test
xchg
and
std
fsts
sub
mov
clc
popf
push
xchg
ret
mov
and
pushf
cmp
ss
xchg
inc
jne
dec
push
cmp
and
mov
mov
sub
fwait
ljmp
jbe
mov
cmpsb
ss
lock
or
jle
incb
push
lock
jns
outsl
insl
mov
lahf
lods
push
or
cmp
es
mov
sub
cwtl
adc
enter
jno
sub
adc
jp
inc
adc
cmpsb
mov
mov
cmc
adc
movl
cmp
xchg
pop
or
or
dec
pop
pop
xor
xor
inc
cmpsl
jb
mov
pop
icebp
movsb
pop
aaa
into
icebp
scas
cltd
jo
and
pop
das
and
cltd
cltd
loope
or
push
cmp
ljmp
test
cli
mov
mov
push
or
xor
cmp
inc
call
mov
sbb
lret
movsb
out
icebp
sub
fidivl
xchg
mov
add
inc
subb
and
mov
imul
enter
push
cmc
mov
mov
adc
adc
lods
jl
add
popf
xchg
mov
lock
into
mov
dec
push
push
js
dec
mov
ja
xchg
imul
int3
push
or
test
mov
scas
shlb
jbe
mov
or
je
rcl
push
jne
arpl
sbb
inc
insb
cmp
jl
cmp
pushf
cwtl
mov
ret
add
in
xor
pop
lret
mov
adc
mov
jg
shll
es
mov
cltd
sub
inc
mov
mov
xchg
mov
lock
lret
call
or
or
adc
orl
mov
cmp
cld
push
orb
or
inc
and
icebp
ret
nop
dec
out
fsubs
call
add
add
xchg
push
stos
shl
xchg
fimuls
adc
pop
and
inc
adc
lock
mov
or
mov
sbb
lods
cli
mov
jp
lcall
mov
fs
push
add
inc
scas
pop
adc
xchg
dec
cmp
inc
xlat
adc
daa
cmp
jns
add
inc
push
dec
shl
arpl
pop
cld
sbb
dec
xchg
push
pusha
push
enter
mov
or
or
jmp
mov
jge
cld
inc
xchg
pop
xchg
js
lcall
aam
dec
in
add
js
std
adc
clc
das
mov
jo
cmp
pop
pusha
cmp
daa
cmpl
shrl
xchg
es
fdivrs
aad
mov
push
loope
lods
pop
cmp
out
inc
mov
popf
lret
mov
gs
cwtl
scas
outsl
lods
pop
insb
dec
and
scas
jmp
sub
out
sub
adcb
iret
int3
mov
aad
and
mov
adc
fbld
stos
aaa
pop
cltd
push
cmp
cmc
in
stos
push
lcall
cmc
popl
xchg
and
movsb
fcmovnu
pop
add
xor
push
aam
out
mov
fwait
aam
mov
rcrb
fiaddl
ret
sarb
pusha
xor
push
sbb
push
jmp
test
shlb
outsl
je
push
inc
rolb
test
aam
pop
inc
sub
lock
addb
adc
lret
je
movsb
lea
mov
mov
orl
jle
sbb
repz
add
push
lea
cmpsb
cld
inc
or
test
push
jl
inc
shlb
sahf
jb
sub
inc
xchg
mov
aam
std
adc
std
mov
fimuls
leave
jb
lock
ficomps
mov
jns
adc
and
daa
cli
pop
sub
testl
dec
mov
movsb
mov
call
in
inc
cmpsb
push
xor
sub
pop
sub
cmp
or
inc
je
sahf
mov
lock
mov
pushl
pop
pop
pop
rcrb
bound
push
rorb
test
xor
stos
divl
jns
jl
xor
test
cmp
mov
arpl
fdivrs
outsb
mov
adc
das
sub
mov
inc
mov
les
sub
xchg
out
mov
or
jno
add
mov
sbb
insl
std
jbe
addb
cwtl
jo
ja
sub
dec
lcall
xchg
pushf
test
pop
pop
add
mov
mov
test
or
mov
sub
mov
js
es
push
in
or
fistpl
push
popa
lcall
push
call
xor
inc
pushf
insb
nop
sarl
xor
push
rcl
inc
cs
lock
ss
aas
xor
lods
add
mov
adc
dec
lret
ss
push
hlt
inc
jo
imul
xor
xchg
mov
outsb
call
adc
sbb
xchg
push
or
outsb
mov
mov
or
mov
mov
dec
mov
call
nop
mov
fsubrp
cmp
cwtl
gs
icebp
inc
test
lods
pop
hlt
sub
mov
test
push
incl
dec
and
lcall
sub
add
imul
mov
ljmp
pop
inc
pop
mov
pop
or
inc
in
or
or
mov
pusha
adc
xchg
dec
mov
jbe
cld
not
sbb
sbb
inc
shr
sbb
dec
push
sub
push
cmp
ret
scas
out
mov
js
mov
loope
or
add
adcl
push
and
or
push
rclb
jl
xor
fwait
lock
xor
imul
arpl
sbb
movb
subl
push
xchg
xor
das
movb
test
add
push
cmpl
sti
ss
insl
les
fistpll
lret
jle
addr16
aad
push
mov
jne
add
pop
push
mov
mov
push
adc
xchg
lret
dec
lock
in
add
jge
sahf
dec
hlt
out
sbb
aad
test
xorb
push
fdivr
add
mov
orb
dec
push
aas
std
cmc
jle
cmp
add
or
adc
inc
xchg
loope
das
por
mov
push
mov
sahf
inc
roll
mov
pop
add
push
jo
jb
adc
push
mov
mov
fimuls
xchg
imulb
cwtl
or
arpl
xchg
dec
and
sub
or
pop
movsl
or
test
xchg
into
hlt
sbb
cmpsl
push
push
cmp
rolb
and
loope
jp
mov
sbb
icebp
lds
gs
inc
push
movsb
xor
lret
push
cmp
mov
adc
loopne
cmp
scas
aad
mov
call
cmp
das
cld
cmpb
adc
nop
push
adc
in
sbb
icebp
cmc
insl
and
add
mov
sub
test
xchg
shrl
andl
ret
les
inc
fistpl
sbb
fucomip
xor
or
shl
xchg
sar
cmpb
aam
push
daa
cmc
lds
sbb
inc
add
js
push
rcl
out
sbb
push
jmp
or
mov
andb
sahf
sahf
mov
jecxz
and
inc
stos
sti
inc
scas
movsl
push
inc
movb
adc
out
xchg
jmp
xchg
lret
push
sbb
push
cwtl
sbb
xchg
rcrl
dec
push
pop
jecxz
mov
mov
xor
call
and
mov
pop
mov
outsb
shl
pop
and
jb
adc
push
enter
lock
push
in
lods
adc
fistps
jmp
arpl
xlat
test
insl
add
pop
mov
data16
ficoml
push
cmp
sbb
adc
xchg
icebp
ja
cmp
je
adc
pop
pop
jmp
insl
dec
cmp
sahf
jae
test
or
notb
mov
push
ljmp
ljmp
out
cmc
jb
cmp
lods
or
ret
and
std
imull
lds
mov
movsl
sbb
add
stos
les
push
push
mov
or
test
jnp
mov
jbe
pop
jne
out
dec
lods
sbbb
fldpi
mov
cmp
cld
mov
xor
loop
stc
rol
push
les
inc
pop
fisttpll
push
fsubrl
inc
or
pextrw
das
mov
xorb
inc
inc
loope
stos
cmp
inc
adc
jb
adc
xor
mov
xchg
mov
dec
or
lods
repnz
add
jle
clc
jo
inc
clc
or
shlb
sbb
loopne
ret
std
fwait
rorb
add
xchg
shlb
jo
psraw
mov
or
loop
in
cmpsb
or
lea
pop
cmc
xorl
ret
out
in
sbb
scas
sbb
push
mov
stos
and
jbe
out
jle
push
testl
jnp
sbb
push
ret
fisttps
push
insl
sub
test
adc
add
mov
in
jb
in
push
test
or
xlat
dec
in
imul
mov
pop
cmpsl
ret
out
cmc
dec
lods
mov
pusha
rcrb
pusha
js
cld
push
mov
in
inc
push
shl
fimull
shll
aaa
cltd
jg
lock
imul
in
inc
xchg
jmp
fmull
aas
enter
jl
add
adc
mov
shll
sbb
and
push
lds
mov
mov
loope
dec
aam
xor
notb
pop
out
inc
ja
cmp
inc
adc
mov
icebp
fisttpl
adc
and
and
xor
pusha
mov
jmp
int
mull
mov
inc
mov
addb
je
jmp
add
cmp
ss
push
jmp
mov
jp
adc
repnz
and
xor
push
lea
je
adc
call
push
jnp
cmp
and
orb
and
sub
subl
xchg
lds
movsl
mov
push
mov
sub
inc
test
fs
mov
sbb
mov
jo
loop
jbe
dec
das
cmp
adc
or
inc
and
jne
dec
fcompl
sbb
sub
ljmp
popf
andb
imul
push
xchg
stos
lods
jle
sub
fwait
adc
std
rcl
test
loopne
dec
les
ret
inc
jl
aaa
push
lods
dec
js
sbbb
ret
mov
or
out
pop
enter
mov
in
rclb
add
faddl
call
sbb
sub
inc
cli
mov
js
nop
or
test
sarb
adc
out
xchg
test
add
adc
cmc
cmp
mov
sbb
outsl
sub
adcl
js
mull
push
movl
cmp
out
mov
sbb
fdivl
inc
clc
adc
outsl
fs
mov
adc
cli
les
jle
test
and
mov
icebp
lret
sbb
ljmp
lods
sbb
cmp
cmp
sbb
sbb
incb
pop
repz
mov
xchg
jb
rcll
add
sbb
add
stos
sarl
leave
sbb
mov
ficoms
lret
insb
push
xor
jbe
add
imul
sub
dec
xor
add
or
and
mov
cmc
shld
pop
and
sbb
call
dec
mov
lds
aas
mov
pop
and
arpl
add
aas
cmc
mov
and
es
jno
cmp
orl
shrl
and
and
inc
mov
sbb
cmp
inc
sbb
cmpl
jmp
xchg
xchg
hlt
test
push
stos
cmc
ret
sbb
mov
ret
scas
mov
xchg
inc
adc
pop
push
jg
cmpsl
or
or
mov
mov
jecxz
mov
loopne
add
popa
mov
or
nop
sti
roll
inc
or
in
jmp
push
ljmp
xchg
cli
pop
fnstcw
imul
add
push
xorl
fnstsw
sub
sub
popa
lock
scas
pusha
aaa
jmp
mov
xor
insb
dec
jp
out
popa
dec
or
jmp
insl
mov
mov
push
inc
rcrl
fbld
jecxz
int3
sbb
pushf
cs
out
jmp
fs
or
aad
pop
fmul
sbb
lock
push
loope
pop
and
sub
add
rcrl
sbb
test
icebp
cmc
test
pop
icebp
fdivrl
clc
test
pop
push
sahf
push
xchg
sub
dec
stos
clc
scas
mov
popf
shrl
sub
aam
clc
aad
mov
jle
adc
scas
dec
pop
or
into
dec
mov
fnsave
adc
loope
test
fiaddl
or
jbe
push
xor
repnz
testl
ret
inc
imul
pop
hlt
lods
imul
lods
xchg
mov
scas
mov
or
push
call
sbb
out
sub
inc
cld
xchg
and
push
mov
mov
shl
mov
test
jp
sbb
sub
pop
mov
sahf
xchg
add
mov
hlt
add
adc
stos
push
and
mov
push
add
enter
das
insb
cmp
lcall
out
cmp
inc
lods
adc
shl
add
ja
mov
test
add
push
cmp
clc
daa
jge
dec
inc
dec
repnz
mov
cmp
adc
aas
enter
jo
dec
insl
push
clc
test
nop
popf
test
imul
scas
loopne
push
sti
loopne
mov
jg
sub
mov
push
sub
add
jo
mov
jl
dec
loopne
xor
mov
adc
outsl
sbb
mov
call
inc
rcr
jmp
inc
fistl
das
into
movsb
mov
movq
or
add
loop
mov
xchg
or
daa
movsb
lock
or
cmpl
cmc
adc
inc
mov
mov
and
jb
pop
jecxz,pt
daa
movsb
rorb
add
dec
mov
adc
jge
pop
add
or
cmp
cltd
int
rorb
push
int
push
shlb
aad
pop
out
movsb
or
les
aas
clc
xlat
sbb
mov
icebp
pop
cmp
in
enter
jge
pushf
xchg
and
mov
loopne
sub
add
cvtpi2ps
or
andl
mov
decl
push
xchg
das
jbe
xor
mov
xlat
call
cmp
dec
es
pop
push
push
lock
lods
fmuls
xor
sbb
cmp
call
test
dec
push
adc
pop
cmc
add
mov
mov
push
push
pop
add
mov
ds
adc
pop
adc
mov
or
in
add
sub
sbb
imul
xor
ljmp
clc
rcrb
call
and
and
sub
sbb
mov
jge
push
ss
add
imul
imul
inc
scas
or
std
xlat
iret
xchg
cltd
in
or
pop
sbb
xchg
xchg
mov
xor
rolb
lods
ret
lods
icebp
add
ror
add
fcoml
or
addl
in
dec
rorb
popl
inc
mov
cmc
dec
das
lock
mov
or
loope
push
and
sub
cmpsl
pavgw
cmp
rcrb
pop
mov
mov
xchg
add
cld
adc
popl
sbb
mov
ret
cmpl
mov
sbb
xor
mov
inc
jnp
cmpsb
pop
inc
jg
fistl
data16
aam
mov
clc
mov
inc
xchg
xor
inc
xchg
mov
add
mov
mov
push
insb
sarb
loopne
jae
push
and
or
pusha
and
mov
lret
cltd
pop
mov
cmpsl
daa
imul
jo
popl
add
mov
dec
cmc
inc
pop
xchg
cwtl
fsubrl
push
mov
punpcklbw
add
push
pop
fstpl
pop
je
mov
mov
into
push
stos
pop
loopne
dec
xor
rcrb
aas
or
dec
adc
mov
fisttpl
shlb
mov
mov
pushf
andb
or
mov
push
sbb
push
shlb
pop
stos
mov
enter
shll
cwtl
and
mov
or
xor
clc
xor
hlt
push
jle
pop
jb
popa
mov
xchg
rcll
fwait
dec
iret
mov
xor
test
scas
sahf
leave
lret
sbbl
xchg
mov
insb
dec
push
push
lds
jbe
and
dec
cwtl
lea
das
sub
or
mov
mov
jnp
mov
inc
mov
and
imul
jmp
jmp
xchg
fiaddl
xchg
addl
data16
dec
cmp
inc
add
xor
push
hlt
mov
cld
push
loope
cmpl
add
rorb
sahf
gs
mov
inc
mov
adc
xchg
fwait
data16
or
jo
add
push
sarl
ljmp
mov
xchg
pop
je
in
dec
push
fsubl
loopne
cmpsl
cmp
mov
jb
add
sub
ret
dec
sub
sbb
mov
mov
push
sarb
jno
xchg
pop
adc
ficomps
pop
and
dec
loopne
in
jo
push
ja
add
inc
out
rolb
add
xor
add
inc
pop
pop
push
clc
punpckhbw
or
cmp
fucomip
mov
mov
pusha
lret
mov
push
movsl
lods
fyl2x
cmc
mov
mov
pushf
xor
movsb
push
adc
addps
outsl
mov
mov
mov
dec
nop
sahf
push
mov
je
cli
leave
inc
inc
mov
and
dec
cmp
testb
mov
pop
add
mov
stc
mov
or
jne
or
mov
jae
dec
mov
dec
imul
sahf
out
movsl
addl
hlt
arpl
or
push
mov
push
out
sub
jbe
jmp
into
sub
cmp
jne
imul
mov
iret
xor
sbb
cmp
insl
add
sbb
xor
mov
lock
push
jbe
cmp
fisttpl
push
data16
ret
ret
adc
ss
testl
repz
js
lods
mov
gs
or
jle
add
push
fdivrs
dec
or
je
test
out
xor
test
stc
dec
aaa
cmp
push
push
rcrl
add
shlb
test
pop
rorb
vpshufhw
test
jno
pop
cld
dec
les
sbb
sbb
push
cmp
sbb
imul
add
xor
shrb
jmp
and
and
outsb
sbb
fstl
aam
xor
adcl
jo
mov
sbb
jne
inc
ljmp
addl
lret
aam
pop
add
ss
jo
imull
pushf
je
xchg
dec
pop
sub
lods
ljmp
sbb
mov
xor
mov
xchg
inc
test
lret
xchg
adc
mov
inc
into
out
aad
sbb
ljmp
hlt
nop
add
dec
pusha
and
adc
loopne
push
and
lods
sub
push
scas
popa
mov
rcl
jmp
es
sub
shrb
in
sub
jecxz
or
adc
inc
out
mov
jo
outsb
mov
xor
lock
adc
loope
xchg
pop
jle
fisubl
jl
lods
mov
jl
lock
test
pop
or
adc
inc
and
xorb
xor
or
dec
or
icebp
sbb
imul
add
inc
mov
cwtl
lock
jmp
je
fs
inc
imul
push
sbb
mov
adc
sbb
or
cmp
pop
push
or
js
cli
aam
push
inc
lods
jbe
andb
ret
bswap
push
push
sub
mov
outsb
loope
popa
js
xchg
repnz
xchg
jg
aaa
cmc
push
fs
xor
lock
fiadds
je
jo
push
push
push
mov
and
xor
testb
int3
dec
imull
and
mov
aaa
inc
andb
xor
jp
fcmovb
scas
jg
push
xor
mov
bnd
mulb
movsb
dec
dec
pop
fcmovnu
mov
mov
inc
xchg
hlt
push
fdivrl
xor
add
add
mov
cli
adc
scas
in
ret
xor
in
xor
jb
jno
or
outsb
inc
mov
xor
add
pop
cmp
sub
adc
pop
icebp
movsl
mov
aad
sahf
je
sub
and
cmpsb
dec
cmp
leave
ja
and
mov
push
sar
loopne
sub
inc
pop
cmc
in
mov
push
mov
js
xchg
inc
cmpsl
jb
pusha
adcl
out
jne
popl
pop
inc
daa
sbb
es
sub
push
dec
daa
inc
sub
aaa
adc
aaa
mov
aaa
mov
adc
flds
mov
or
lock
inc
push
ret
arpl
sub
xchg
fidivrs
popf
aas
js
testb
or
push
jge
shrb
pop
mov
pop
in
adc
in
mull
test
jg
lods
outsb
add
and
pop
sar
sbb
push
shlb
xchg
jnp
adc
or
mov
push
or
nop
shrb
in
push
ja
dec
out
adc
jnp
xlat
out
lods
lret
mov
ss
aas
mov
adcl
sub
jl
push
repz
cmp
lock
jns
pop
mov
mov
sub
roll
mov
insl
hlt
test
leave
dec
loope
xchg
xchg
sbb
mov
sbb
sub
loopne
push
sti
and
dec
addr16
out
pop
fisttps
dec
push
dec
ljmp
push
or
sub
mov
mov
pop
dec
mov
and
gs
and
and
out
aam
dec
or
jno
add
fs
adc
call
adc
push
cmp
lcall
mov
fisubl
add
push
lock
mov
sub
out
dec
enter
lods
outsb
inc
mov
aas
mov
ret
shl
or
scas
hlt
fldenv
sub
call
test
negb
push
lret
test
mov
loope
or
cmp
aaa
jecxz
stos
repz
imul
fwait
push
shrl
mov
mov
mov
sbb
ret
outsl
adc
adc
repnz
inc
call
add
fisubs
adc
push
push
cmp
in
push
std
or
aaa
scas
lock
pop
in
test
jp
sahf
das
rcll
mov
pusha
adc
les
cmp
fistl
mov
adc
xlat
jae
or
sbb
subb
adc
out
cwtl
inc
shll
test
adcb
cld
cld
cli
in
cmpsb
mov
push
add
adc
xchg
xchg
dec
xor
int
sub
push
clc
cwtl
adc
or
mov
mov
add
or
jge
xchg
mov
mov
int
sahf
jmp
and
mov
clc
xor
shrb
mov
test
ljmp
lahf
xor
mov
or
sub
xor
leave
loope
incb
and
scas
sub
imul
or
add
sub
fadd
pop
mov
call
jo
rolb
ljmp
cmp
popa
leave
insl
sub
mov
fwait
fwait
lahf
lods
bound
dec
sbbb
cmc
pop
jmp
ret
adc
inc
push
add
mov
mov
and
inc
jbe
add
ret
xchg
and
ljmp
adc
mov
nop
jp
mov
mov
adc
int
xchg
dec
nop
popa
in
aad
aad
cwtl
jg
sbb
mov
adc
leave
aaa
out
das
repnz
cmp
ja
jmp
inc
push
mov
mov
pop
nop
data16
mov
cld
jno
aas
dec
clc
punpcklbw
bound
ret
sbb
test
mov
sbbl
inc
mov
xor
push
clc
cmp
pop
hlt
sti
std
dec
subl
pop
mov
aas
xchg
cmp
adc
xor
inc
repz
add
cs
ret
das
adc
lock
and
cmpsb
add
adc
push
stc
sbb
add
lea
dec
jne
mov
les
adc
es
ja
add
jo
pusha
or
scas
add
cmp
sub
add
cmp
mov
and
fdiv
push
ljmp
mov
or
cs
hlt
dec
xchg
sub
fdivp
sbb
imul
dec
leave
xor
pop
pop
add
ljmp
stos
icebp
scas
jecxz
sbb
ret
and
and
xchg
aas
lcall
add
mov
xor
lds
sbb
popf
add
call
mov
int3
or
xor
aas
cmp
xchg
inc
cld
repz
jl
sub
lea
and
loopne
jae
add
nop
dec
jle
repz
js
mov
dec
loope
inc
or
test
loopne
sbb
pop
inc
jg
incl
bound
mov
mov
in
loop
mov
mov
ljmp
dec
loope
push
sbb
xchg
and
test
pusha
mov
xlat
jae
adc
popa
shl
mov
aas
test
movsb
push
mov
in
arpl
fists
push
out
fdivrs
scas
sub
test
lcall
push
hlt
loope
adcl
push
inc
std
mov
adc
hlt
xchg
mov
push
add
hlt
or
and
shll
add
mov
mov
lahf
mov
push
sbb
pop
into
jp
sub
je
and
add
add
jo
scas
test
rcrb
push
xor
fildl
xor
mov
mov
jg
or
cwtl
ret
lahf
icebp
fisubs
fstpl
subl
inc
xor
shlb
and
rorl
xchg
arpl
sub
push
inc
es
inc
sbb
repnz
pop
mov
sbb
dec
sub
sub
rcr
mov
mov
out
jmp
rorb
insb
and
pop
cmpl
movsl
add
lcall
test
psrlw
sti
add
and
cli
leave
adc
cmp
lret
ss
jb
jecxz
pushf
cmp
and
fistpll
imul
xor
sub
jge
lret
nop
call
xor
popa
jns
mov
jmp
lea
movsb
sbb
pop
pop
movsl
add
decl
cltd
mov
cmp
call
scas
xlat
out
dec
inc
sbb
and
ds
sub
add
ds
fnsave
out
cmpsb
pushf
fldpi
xor
mov
adc
repz
or
jmp
inc
cwtl
ficoms
in
std
ret
in
inc
and
wrmsr
js
faddl
push
lea
mov
test
mov
xlat
enter
inc
xchg
xor
aas
mov
movsb
movsl
bound
js
or
or
pop
pop
and
sub
mov
lret
test
imul
sahf
stos
mov
mov
inc
daa
scas
xlat
sbb
decl
mov
loop
dec
or
sbb
pop
cmc
sbb
push
or
xor
in
jne
clc
inc
or
fsubs
shll
mov
xor
leave
rcrb
cmpsb
pop
loopne
ret
rcl
mov
inc
push
or
pop
inc
xor
aaa
inc
arpl
jmp
xor
sbb
adcl
cld
sbb
enter
out
cmc
dec
fucomip
loope
lods
pusha
or
push
mov
or
hlt
and
xor
mov
inc
mov
scas
lock
sub
push
orl
clc
out
add
test
roll
lods
jnp
or
xor
data16
inc
sub
add
aaa
sarb
in
xor
pop
fwait
clc
add
mov
int
mov
inc
jmp
pop
nop
push
aaa
add
ja
out
movsl
out
pop
aam
or
cmp
or
fwait
push
sbbb
sub
rcll
pushf
popa
adc
std
rcr
fcmovne
xor
clc
jo
sahf
sub
ret
xchg
sbb
hlt
cmp
jnp
mov
and
pop
mov
incl
and
push
add
add
pop
ds
loopne
jno
pop
xchg
jns
sbb
nop
loope
mov
shrb
cltd
bound
test
pop
jecxz
xor
test
jb
and
mov
pop
out
add
inc
rcr
ret
pop
sub
dec
sub
adc
arpl
cld
sahf
inc
mov
sbb
or
inc
cmp
scas
into
mov
adcl
ret
adc
mov
sub
outsl
jne
loope
pop
dec
cld
push
gs
mov
jae
pop
xor
and
popf
outsb
push
push
push
jp
std
sub
sub
and
cs
add
inc
out
lret
into
imul
les
aas
lods
mulb
jecxz
xor
test
fstl
arpl
ss
test
rcrl
ljmp
sbbb
cmp
aam
movsl
imul
aas
jg
fstps
movsb
add
mov
mov
nop
cwtl
cli
es
or
adc
ficomps
lds
pop
ficoms
push
cmp
cmp
aam
int
sbb
and
rclb
ror
xor
and
add
adc
or
mov
sahf
scas
iret
shl
dec
push
call
push
popa
jnp
add
push
lock
in
aam
dec
out
rcr
cltd
stos
cmp
pop
addb
fdivrp
add
dec
call
fwait
aas
dec
fdivrs
scas
jne
sbb
push
add
pop
hlt
aas
and
into
inc
cmp
adc
inc
int3
roll
int
mov
adc
jne
and
inc
mov
ja
and
mov
subb
cmp
scas
pop
lock
insl
adc
inc
imul
mov
int3
cmpsb
dec
or
sub
repnz
rclb
loop
clc
push
inc
add
call
ljmp
jmp
scas
xor
lods
jg
add
xchg
dec
adc
push
mov
outsb
fsubl
push
arpl
inc
subl
pop
adc
push
aas
mov
inc
or
mov
mov
loopne
jmp
mov
jp
stc
jecxz
pop
cmp
xchg
mov
int
shrl
or
into
ret
add
lock
inc
cs
pushf
insb
jns
je
jb
xor
push
fsub
adc
jecxz
and
adc
adc
and
mov
out
and
and
iret
and
pop
movsl
std
xor
and
and
jbe
iret
popa
inc
repz
add
jmp
andl
and
inc
popf
lock
in
aas
cmp
lret
dec
or
ja
add
add
and
pop
jae
inc
mov
loope
sbb
xchg
fnstenv
pop
scas
shlb
push
in
popa
jmp
test
xor
mov
jo
xchg
lods
xor
notl
sbb
pop
cmp
cmp
inc
pop
testb
or
icebp
loopne
xchg
icebp
jecxz
xor
pavgb
aad
jmp
int
mov
push
dec
addl
outsl
loope
xchg
in
or
arpl
js
cmp
mov
jb
leave
add
xor
jo
movsl
pop
mov
lahf
fs
inc
divl
xchg
inc
loop
js
insb
xchg
loop
jg
cmpsl
pushf
mov
subl
mov
test
pop
inc
mov
and
pop
push
xchg
popa
lods
and
pop
dec
mov
rorb
ret
lret
insl
arpl
fbld
int
push
call
loopne
loope
pop
or
lock
fcoms
jno
and
popf
inc
push
je
add
ds
rcr
test
enter
aad
sub
popa
enter
shlb
xchg
cs
sti
loope
dec
lods
dec
cs
mov
adc
inc
push
inc
sub
mov
add
add
data16
stos
push
mov
loopne
push
cmpsb
sub
fs
mov
adc
xchg
jmp
push
mov
push
inc
mov
pop
add
push
mov
add
jne
jp
pop
mov
sbb
sub
jne
xchg
dec
cmp
mov
pop
loopne
sbb
dec
or
aaa
rcrl
xchg
jle
jg
pop
sbb
add
nop
dec
or
mov
dec
scas
inc
std
xchg
fistl
mov
mov
fistl
ja
cmp
roll
scas
fsubl
push
mov
dec
pop
lar
inc
jo
push
shlb
cmc
lahf
outsb
jne
pop
adc
std
jge
pop
into
sbb
pop
gs
add
movl
adc
sarl
aaa
sub
mov
push
ret
xor
cli
push
jl
jg
dec
pop
fildl
in
push
mov
mov
xor
stos
push
sub
dec
sub
push
or
xchg
jle
add
pusha
push
faddl
pop
imul
test
mov
jp
push
cmpl
pop
mov
mov
es
sub
and
add
shrl
add
and
jae
mov
cwtl
pop
xchg
dec
dec
loopne
mov
call
sub
push
fdivr
or
in
cmp
pop
shrl
pop
mov
push
cmp
mov
or
push
loop
mov
sub
or
iret
test
push
outsl
js
fldenv
aaa
mov
inc
jg
ss
fwait
sbb
aas
das
rclb
xor
pusha
cmc
pop
xchg
mov
xchg
fildll
jns
xorl
xchg
call
cmp
pop
mov
jae
mov
dec
dec
mov
jl
adcb
jmp
jo
sahf
je
or
cld
and
loopne
xor
mov
xor
sbbb
jo
jbe
adc
icebp
sbb
sbb
jl
out
cmp
jecxz
decb
outsl
fbstp
ljmp
movsb
push
sbb
fistl
pop
enter
adc
int
scas
enter
and
es
gs
dec
inc
in
pop
dec
cmpsl
mov
hlt
mov
clc
loopne
jmp
in
rcrl
cwtl
mov
cmp
es
pop
nop
popl
cld
addr16
fimull
nop
jge
fs
xor
xor
jp
fwait
jmp
cltd
fstpl
sub
mov
addr16
cmp
dec
lds
mov
fnstsw
xor
xchg
cmpsb
xor
mov
pop
mov
iret
dec
ret
cli
mov
test
xorl
mov
imul
dec
test
xchg
inc
movsl
dec
add
add
fwait
xor
in
xchg
mov
test
clc
sub
fwait
inc
push
adc
shll
pop
dec
or
cli
mov
push
xor
jne
mov
push
add
out
loop
fcmovnu
insl
or
inc
xchg
and
loop
cmc
or
pop
jg
or
cmp
sbb
inc
aad
or
mov
cmp
sub
adc
xchg
and
into
inc
sub
push
and
test
out
mov
sbb
stos
lcall
out
mov
sbb
ficompl
add
outsl
adc
lret
scas
adc
in
fwait
pop
lds
sbb
sbbl
lcall
pop
insb
push
and
pusha
cmpsl
fs
rol
mov
aad
mov
dec
shrl
mov
inc
jae
int
outsl
dec
sbb
and
add
xchg
aad
inc
clc
scas
loop
stos
in
dec
cltd
loopne
test
jle
test
adc
xchg
mov
adcl
test
sub
and
daa
jbe
mov
sub
cmp
add
ficoml
inc
xchg
jmp
enter
aas
push
sahf
xor
lock
cmpsb
mov
aas
out
mov
lahf
sub
ficomps
sbb
push
adc
das
call
mov
aaa
jmp
push
scas
push
in
push
lahf
adc
sub
mov
push
bound
aas
xchg
lods
pop
pop
adc
add
sarl
mov
je
lods
mov
arpl
loope
sbb
fidivs
aam
or
nop
xor
mov
mov
lret
mov
into
mov
dec
adc
cwtl
push
es
scas
sub
popa
in
in
addr16
inc
or
xor
leave
repz
and
je
dec
inc
or
push
or
aam
mov
cmp
jl
inc
mov
test
push
dec
shrl
je
inc
push
sub
rolb
sub
inc
addb
jle
call
ret
in
inc
fwait
enter
ss
sbb
mov
sbb
pusha
mov
loopne
aam
mov
stos
adc
sbb
mov
stc
clc
push
hlt
movsl
cmp
shrl
push
xchg
cmp
cmp
xor
jp
and
into
mov
cmp
lahf
mov
push
addr16
mov
fisttpl
jnp
or
jo
adc
add
lock
lods
pop
mov
and
clc
dec
mov
mov
shlb
add
mov
cli
push
xchg
inc
dec
fisubl
out
jmp
stc
sti
lret
adc
adc
sub
jno
xor
mov
sbb
lret
fstps
clc
push
push
sbb
lret
stos
sti
adc
lock
shlb
test
cmp
lcall
mov
jl
adc
xchg
xchg
ljmp
pop
inc
inc
aas
out
cmp
add
mov
xor
pop
pop
cli
nop
clc
imul
mov
mov
imul
pop
out
cwtl
sbb
mov
mov
es
pop
mov
and
inc
decb
mov
hlt
push
mov
js
cmp
rol
scas
pop
cmpb
xlat
add
fadds
decl
dec
pushaw
mov
popa
xor
jle
jle
sahf
jae
repnz
push
dec
jecxz
aas
out
inc
xchg
dec
adc
clc
adc
icebp
inc
sbb
stos
jp
xchg
sarb
pop
pop
insl
ds
push
xor
rcrl
pusha
out
bound
xor
aas
adc
inc
add
ljmp
ret
lock
xchg
popf
push
mov
xchg
pop
aas
mov
andb
loop
hlt
loope
loopne
imul
addr16
addl
inc
sbb
dec
icebp
add
test
pop
rol
mov
ljmp
shufps
shlb
iret
xor
inc
dec
sub
cmp
cmpsb
mov
cli
sub
lock
ss
or
cmp
clc
clc
imul
pushf
xchg
mov
sahf
jle
je
dec
sti
add
or
out
dec
adc
xor
xchg
enter
fdivr
jmp
popl
fwait
pusha
or
fdecstp
mov
jmp
rorb
stos
aas
dec
or
in
dec
and
cmpsl
mov
in
sub
xchg
or
aas
or
fwait
cltd
scas
test
js
add
pop
push
movl
mov
daa
sbb
xlat
mov
enter
sub
loop
and
outsl
loope
inc
xchg
pushf
dec
jnp
andl
out
lcall
add
call
inc
mov
js
dec
popa
sarb
add
ret
ret
sbb
testb
sbb
mov
jmp
dec
mov
jo
cmp
dec
imul
dec
int3
xor
cld
sbb
sbb
lds
in
inc
jo
or
inc
sub
inc
mov
sbb
and
dec
fidivrs
movsb
stos
scas
jne
bound
fwait
js
ret
lret
xchg
push
mov
pushf
nop
cld
and
shll
push
fbstp
pusha
mov
sti
leave
sbb
adc
pop
mov
test
inc
sub
xor
sbb
pop
pop
xchg
add
jge
jl
jg
add
test
add
mov
sbb
cltd
and
mov
cli
dec
lahf
rorl
add
jmp
les
pop
jmp
jp
xor
aam
mov
pop
jg
inc
leave
lret
sub
je
rcrl
inc
mov
mov
push
and
out
mov
or
test
pop
popa
xor
and
jp
sbb
xchg
cmp
bound
outsl
add
fcmovnb
push
loopne
jmp
or
inc
inc
pop
add
fisttps
inc
cmp
jge
lea
mov
cltd
jg
cmp
fstpl
das
icebp
sbb
push
push
jmp
push
mov
pushl
jae
movsl
push
xchg
icebp
test
scas
mov
cmp
addr16
vpcomuw
sbb
jecxz
pusha
lahf
iret
and
das
sbb
jo
push
or
ss
cmp
jp
mov
das
movnti
imul
out
stc
jl
push
inc
cmpsb
xor
int3
mov
ret
jg
jg
movsl
aas
or
pop
adc
icebp
jecxz
loop
decb
or
pop
aaa
pop
mov
iret
pop
push
rorb
popa
jmp
mov
inc
mov
dec
jo
clc
add
clc
flds
xchg
adc
add
or
inc
xchg
sub
pop
in
shlb
sub
ja
repz
cmpsl
scas
push
sub
imul
mov
clc
and
outsb
and
pushf
cwtl
jns
out
add
jbe
ljmp
and
add
gs
mov
mov
fs
inc
js
or
pusha
xor
fidivs
ds
cmp
jecxz
repnz
sbbl
mov
sbb
iret
push
push
test
mov
or
mov
pop
jecxz
xchg
fdivrs
push
hlt
add
insl
test
inc
in
pop
out
stos
inc
inc
sub
and
jmp
sbb
xchg
into
dec
and
stos
xor
xor
loop
fstpl
push
push
test
out
push
andb
jg
and
orb
jae
minps
testl
scas
imul
rcll
push
and
add
clc
dec
jp
jb
addr16
out
push
lock
je
jmp
stos
insb
jns
and
test
notl
adc
xchg
ja
fmull
popa
mov
or
ljmp
popa
mov
fildl
xor
aas
sbb
jmp
inc
out
sti
pop
ret
inc
lahf
push
out
hlt
cmp
push
push
push
cmp
aas
in
filds
mov
mov
mov
pop
dec
stos
fimull
aas
mov
sarb
adc
ror
div
add
jno
mov
inc
add
lret
ds
or
mov
popf
jge
fnstenv
xor
dec
out
mov
or
shll
adc
inc
mov
add
jb
cld
pop
js
jns,pt
jle,pt
push
mov
sub
cmp
sub
dec
lock
lret
adc
xchg
mov
xchg
jle
mov
movb
js
push
jnp
xchg
out
dec
push
out
fstpt
fs
pop
sbb
pop
xor
icebp
pop
shl
mov
out
inc
adc
sub
xor
rolb
fldt
sbb
jge
adc
add
sbb
in
push
test
nop
mov
jo
push
enter
not
fiaddl
sbb
inc
cmc
adc
repz
mov
or
cmp
adc
dec
mov
add
movsb
xor
mov
mov
loop
test
mov
sub
pmullw
jnp
movsl
add
fucomi
push
scas
add
loope
mov
and
push
pop
lret
dec
sub
int
jl
ret
inc
add
lds
rol
rorb
loop
adc
addl
aam
lods
dec
push
or
sub
or
xor
pop
cltd
and
out
mov
mov
es
outsl
jmp
mov
pop
or
in
push
int3
iret
cmp
pop
add
test
faddl
das
ret
imul
enter
pusha
out
push
add
add
pop
inc
mov
push
aas
adcl
ret
inc
js
dec
ljmp
mov
loopne
inc
je
dec
cltd
dec
sbb
add
out
pop
adcb
pop
ret
stc
in
jnp
nop
xchg
xor
ja
xchg
cwtl
sub
sar
inc
aam
lds
push
addl
and
jmp
les
xlat
insl
imul
pop
cmp
lea
cmp
imul
jmp
popa
push
vpunpckldq
fldcw
fidivl
cmp
aam
cmpsl
lret
add
lahf
add
pop
fldl
and
mov
imul
add
test
ljmp
mov
and
inc
pop
bound
push
add
out
mov
mov
cmp
das
xchg
lods
or
das
jg
ljmp
cmp
dec
sbb
fnstcw
int3
sub
sbb
mov
xor
js
shlb
into
mov
stos
jae
fdivl
jecxz
adc
xor
movsb
aam
pop
sbb
and
lahf
pushf
xor
and
negb
std
sub
xchg
fnstenv
or
pop
nop
aaa
fldcw
or
mov
jg
jae
imul
ja
or
fisttpl
movsb
push
add
mov
xchg
stos
test
dec
cmpb
dec
rclb
jae
ret
lret
push
sub
add
ret
lret
add
lods
adc
inc
and
ret
aas
sub
popa
cmp
js
arpl
xchg
cmc
cmp
jo
imul
lahf
cmp
and
xchg
loopne
adc
mov
jg
mov
mov
loopne
test
icebp
pop
fsubl
sbb
in
inc
inc
push
lahf
add
pop
add
repz
aas
insb
leave
rcll
inc
hlt
ja
faddl
add
fld
mov
cli
ret
dec
inc
ret
inc
adc
cmpsb
sbb
xchg
cmpsb
lea
and
pop
mov
pop
notb
inc
fs
aam
sub
fmul
cmp
ja
jne
test
pop
add
sub
and
incb
dec
push
and
mov
shlb
inc
jg
pop
mov
sbb
push
inc
xchg
mov
insl
xabort
aad
jmp
cmp
imul
jmp
imul
cmpsl
inc
sbb
int
stos
dec
mov
cmp
out
and
xor
jno
imul
jmp
dec
les
sbb
lods
pop
add
inc
pop
mov
xchg
imul
mov
fdiv
mov
test
lea
stos
push
or
sbb
out
mov
mov
pop
jle
jne
mov
mov
lock
jl
mov
movsl
xchg
inc
push
mov
sbb
loope
stos
jle
insl
out
mov
dec
or
int
fistps
pop
mov
sub
mov
lret
cmp
add
pop
mov
sbb
sub
lahf
lock
push
mov
orl
cmp
inc
adc
and
test
mov
pop
movsb
inc
dec
cmp
imul
lods
or
and
xor
aaa
loope
imul
mov
jle
cmpb
sbb
inc
push
into
inc
shrl
add
pop
add
mov
cs
scas
xchg
mov
mov
inc
add
mov
test
clc
daa
pop
ret
mov
scas
ret
add
icebp
aam
mov
mov
fdivr
mov
pop
rolb
aas
or
int
cmpsl
pop
scas
enter
inc
xchg
jae
xor
push
cld
rorl
pop
fstpt
or
mov
pusha
adcl
mov
movsb
call
je
ficoml
cs
ja
mov
or
adc
jo
les
test
or
mov
ljmp
or
arpl
mov
dec
iret
pop
pop
lods
ret
inc
testb
dec
std
mov
adc
inc
aas
mov
popa
cwtl
mov
sbbb
mov
add
xor
loope
je
xor
add
repnz
outsl
add
mov
xchg
pop
leave
dec
call
mov
sub
and
iret
xor
stos
ret
push
jne
adcl
and
lock
ret
mov
clc
mov
dec
xchg
outsb
adc
aam
sti
add
call
lock
jno
subb
sahf
bound
adc
ret
cmc
fadd
or
push
in
loope
repnz
mov
repz
hlt
add
mov
jge
xchg
cmp
push
pop
jmp
cmp
cmp
jg
pop
iret
mov
aas
js
sbb
cs
aaa
pusha
insl
mov
dec
lods
loopne
in
jne
and
push
xchg
push
out
inc
mov
incb
cmpb
or
pshufw
rcrl
lahf
xor
push
add
daa
les
daa
sub
dec
mulb
jge
push
loopne
stc
or
lock
mov
dec
add
pop
sbb
lahf
rcrl
sub
inc
scas
sbb
or
rcrl
push
xor
aam
mov
push
sub
or
cmpsl
cmp
flds
int3
mov
in
push
loop
in
icebp
popa
daa
lds
mov
mov
js
push
adc
xor
dec
fmull
xchg
clc
mov
sahf
cwtl
mov
jmp
cmp
inc
push
sbb
sbb
inc
xorl
and
xor
test
les
mov
mov
add
mov
xor
call
sub
sbb
sub
mov
cmp
cmp
mov
push
leave
adc
enter
lock
add
cmpsb
mov
mov
pop
scas
inc
jmp
push
pause
lcall
mov
std
stos
push
adcl
cmp
push
aaa
lahf
push
sarl
add
mov
jbe
aam
scas
loopne
cmp
pop
push
and
mov
nop
add
push
outsb
repz
invlpg
and
mov
xchg
pop
mov
loopne
or
lock
lods
jle
es
pop
xor
arpl
stc
test
mov
cmp
xchg
sahf
and
xor
sbb
lret
orl
or
push
jge
inc
in
sbb
xor
inc
test
jae
scas
inc
and
das
sbb
loop
or
sbb
adcb
xor
dec
das
jle
sub
mov
mov
sub
mov
mov
adcb
shrd
dec
push
jle
mulb
arpl
cltd
lock
jp
icebp
adc
add
movsl
push
rol
test
jbe
fwait
add
dec
out
in
pop
adc
mov
adc
jge
jl
jp
mov
and
inc
add
test
test
rcl
add
sbb
lods
mov
les
push
fidivs
shll
adc
inc
jmp
push
cld
dec
push
add
pushf
mov
data16
jmp
rcl
mov
addl
pcmpgtd
or
push
xlat
sbb
jo
insb
je
mov
fildll
sub
or
jno
jmp
push
push
and
in
sbb
imul
sbb
mov
icebp
ja
orl
aad
sbb
popa
scas
test
ret
push
and
adc
daa
repz
ret
stos
cmp
cltd
daa
outsl
add
js
cwtl
adcb
or
test
xor
mov
and
loope
fisubl
mov
das
outsl
pop
dec
loop
xor
inc
fidivl
add
push
shll
add
and
arpl
adc
inc
mov
mov
add
mov
mov
adc
imul
aas
adc
int3
adc
filds
push
mov
add
std
mov
outsl
mov
sbb
dec
cmp
aaa
pop
repnz
lods
aas
adc
sbb
dec
xor
std
popa
negl
in
xor
sbb
add
and
pop
xlat
lea
mov
enter
cmp
jnp
pop
xor
dec
cmp
mov
daa
scas
or
mov
loope
lahf
xor
cmp
imul
adc
inc
mov
jno
orl
pop
test
mov
inc
or
out
insl
inc
sub
aas
jge,pn
mov
jae
or
test
jae
lds
xor
pop
jmp
xor
pop
xchg
or
call
lods
les
leave
mov
fdivrs
mov
mov
mov
or
add
lret
pushf
pop
dec
je
and
scas
imul
add
mov
ds
add
shlb
sub
xchg
inc
test
loope
icebp
jns
cmpb
jle
lret
jl
scas
shl
setno
jns
or
add
iret
iret
out
addl
pop
xor
add
cmc
je
add
xor
dec
inc
stos
scas
adc
arpl
jmp
daa
nop
xor
aad
insl
movsb
mov
lcall
dec
jp
int3
lock
and
lock
xchg
lcall
pushf
test
mov
add
mov
cmc
inc
inc
dec
test
xchg
xchg
shrb
cld
dec
inc
cmp
mov
scas
or
mov
adc
mov
icebp
ljmp
daa
jp
push
mov
imul
cmpsl
inc
mov
mov
jmp
mov
imul
shll
dec
xchg
clc
loopne
mov
adcb
stc
lret
addb
xchg
subb
jae
or
xor
sbb
sarb
dec
xchg
popa
mov
loopne
mov
or
sbb
faddl
cli
xor
movsl
dec
and
jle
xlat
mov
out
iret
rclb
add
clc
xchg
dec
sar
outsl
addr16
movsl
test
cli
gs
and
sbb
bnd
mov
sub
fs
xchg
xor
lock
imul
sbb
xchg
cmp
les
popf
xchg
mov
cmp
test
xor
mov
xor
cmp
scas
xchg
inc
out
test
jp
xor
and
or
andb
pop
mov
ds
icebp
rolb
xor
adc
mov
pop
push
cld
lret
mov
scas
inc
test
fwait
or
sub
movsl
les
jno,pt
int
cmp
or
jns
or
addl
mov
mov
fnsave
push
sbb
fists
inc
xchg
sub
cld
insb
adc
pop
mov
mov
inc
mov
stos
sub
mov
outsb
dec
scas
sti
mov
lret
ror
cmc
dec
sar
cs
and
popa
cmpsl
dec
mov
push
mov
ja
shl
dec
aad
lcall
mov
pop
stos
fildl
mov
mov
andb
add
imul
adc
int
iret
dec
cmp
add
movsl
mov
mov
repnz
push
sub
inc
dec
imul
lret
push
mov
jg
call
fmuls
push
cmc
adc
inc
and
std
push
popa
iret
int3
and
out
in
fisubs
scas
sbb
aaa
ja
lds
aam
lcall
sbb
mov
inc
in
loopne
out
out
mov
stc
sbb
cltd
aam
or
movsl
sub
shll
insl
sub
test
fwait
test
lds
repnz
mov
inc
jne,pt
test
mov
sbb
stos
test
cs
jo
add
in
lock
pop
ljmp
fyl2xp1
add
inc
mov
sub
aam
outsb
shlb
mov
adc
adc
test
rorl
push
icebp
push
pop
mov
loope
fldl
stc
js
cmp
ja
lret
dec
mov
jbe
sbb
xchg
cld
mov
rolb
sbb
mov
aas
les
xor
and
aam
sbb
imul
pop
stos
mov
sbb
inc
sbb
loopne
in
mov
std
add
scas
sub
add
popa
and
mov
mov
ds
xor
mov
sbb
pop
adc
and
ja
lods
pop
mov
fwait
xchg
mov
push
arpl
dec
aaa
mov
xchg
imul
push
sub
adc
pop
sahf
push
and
mov
aaa
sbb
mov
mov
insb
in
loopne
cld
hlt
add
stos
ja
dec
rorl
mov
adc
cmpsl
test
inc
cmp
push
jg
repz
in
fs
fistpll
andl
fs
sbb
push
and
inc
and
insl
mov
stos
xchg
repnz
jnp
jp
jo
pop
subb
mov
int
mov
loop
sarb
push
pop
loope
stc
and
sbb
pop
ds
inc
sub
sub
xchg
sbb
repz
shlb
out
xchg
rolb
fldt
adc
into
outsb
push
ja
adc
ror
in
sub
ja
fs
stc
xchg
mov
call
dec
mov
push
mov
das
jno
push
out
mov
adc
jle
lret
adc
push
xchg
mov
sub
stos
mov
cmp
jno
inc
bound
mov
sub
aas
lahf
cmp
xor
notl
xor
and
flds
dec
insl
jbe
adc
jae
pop
out
jecxz
xchg
sub
mov
test
mov
xchg
or
je
ret
sbb
dec
std
es
push
mov
push
sbb
push
inc
fdivrs
data16
sbb
or
lahf
lahf
push
sbb
fistpll
pop
int3
inc
cmp
mov
popf
mov
lods
add
sbb
sbbb
pushf
dec
aad
add
cmp
mov
inc
sub
dec
mov
jecxz
adcl
stc
inc
addr16
and
pop
ljmp
dec
or
rol
mov
incb
sbb
std
xor
push
and
bound
xor
mov
jmp
incb
subl
out
mov
jmp
xchg
mov
push
inc
fwait
mov
push
aad
xchg
loope
mov
pop
loop
adc
pop
lret
mov
push
ret
sub
sahf
imul
nop
pop
cli
sub
and
inc
mov
cld
sbb
mov
popf
push
rolb
mov
rcrb
cli
clc
pop
adc
mov
lds
loopne
out
cltd
scas
mov
mov
shrb
pop
jecxz
call
pushw
sar
in
fnstsw
xor
fisubs
lds
push
pop
std
dec
pushf
js
gs
negl
lret
inc
pop
jmp
xor
outsb
cmpsl
and
add
inc
xor
push
mov
push
xchg
loope
out
xchg
sub
pop
popf
add
push
cmp
aam
outsl
dec
out
xchg
fld
aas
aas
push
add
mov
sbbb
mov
push
ja
repz
fsubp
ja
push
orb
mov
pop
outsl
fs
lods
ficoms
addb
fwait
mov
adcb
mov
cmp
gs
inc
push
jecxz
iret
rcrl
cmc
scas
mov
adc
or
je
inc
out
mov
dec
sub
mov
jl
loop
sub
inc
rcl
or
xor
dec
sub
in
xor
dec
xchg
mov
shll
sbb
or
lods
dec
test
inc
cld
mov
add
rcrb
add
cmp
jp
push
lcall
sti
adc
lock
movsb
dec
xchg
aam
ret
mov
sbbb
or
test
jmp
mov
fwait
adc
cmpsl
mov
inc
cmc
insl
sub
add
out
mov
or
mov
jmp
or
adc
notl
sbb
aad
xlat
les
inc
mov
mov
addr16
xchg
add
adc
adc
shr
sbb
inc
mov
cwtl
clc
cmpsl
adc
add
stos
xchg
fldenv
in
push
daa
imul
lea
call
jo
mov
cmc
test
daa
out
xor
push
adc
jns
cs
pop
fwait
hlt
add
sub
add
cmp
in
and
pop
or
xlat
out
xchg
add
lret
mov
jg
and
or
loope
test
pop
cmpsb
xor
cmp
xor
into
fisubrl
sbb
cmpsb
aas
jno
fucomp
dec
out
lds
insb
ss
ret
inc
popa
inc
inc
lea
movl
inc
repnz
out
xor
mov
pop
adc
push
adc
add
ds
jl
inc
jmp
mov
rcrl
and
sub
pushf
ret
pop
popf
idivl
gs
das
les
cltd
inc
mov
shlb
clc
mov
adc
and
jmp
dec
xchg
icebp
clc
ljmp
push
frstor
mov
insl
loope
sub
pop
fs
push
dec
cs
addl
nop
int3
sbb
push
sti
pop
hlt
test
ror
xchg
jge
sbb
clc
rclb
jg
mov
enter
cmp
fcoms
xor
push
icebp
das
adc
repz
ljmp
popf
mov
xor
inc
fdivrl
bound
fcoms
fiaddl
push
mov
cmp
xchg
cmpsl
cmpsb
pusha
gs
test
sbb
dec
pop
jp
inc
cld
sbb
les
ljmp
icebp
daa
push
adc
cld
pop
arpl
ds
and
decb
fsts
movsl
jo
and
or
js
jle
sahf
jbe
or
jecxz
lock
inc
in
rcll
test
dec
add
enter
ja
mov
nop
mov
or
mov
mov
rolb
movsl
jo
les
movsb
ljmp
inc
lods
inc
ljmp
icebp
and
cmp
lods
jmp
addr16
out
mov
or
adc
push
test
and
mov
clc
sbb
pop
leave
test
inc
inc
cmpsl
pop
sbb
inc
outsb
daa
ss
add
inc
or
dec
push
xor
aad
pop
pop
mov
popa
sub
pop
jae
jp
pop
pop
push
xchg
mov
aad
dec
aam
lea
in
xchg
lahf
mov
push
ja
loopne
es
xchg
pop
and
dec
or
mov
jo
lret
jnp
test
pop
test
shll
dec
in
pusha
out
dec
mov
dec
mov
push
cmp
test
jge
or
out
aam
daa
push
or
les
pop
push
jbe
sub
lods
add
and
fdivl
xchg
sub
dec
test
jge
adc
ror
mov
clc
imul
ror
js
je
jo
add
mov
push
adc
mov
fwait
cmp
aas
jecxz
adc
test
icebp
mov
sbb
pop
xchg
hlt
inc
xchg
push
mov
push
mov
loop
int3
xchg
jae
sub
subb
cmp
xor
cmp
pop
mov
push
movsl
das
sub
out
je
add
orb
xchg
mov
pop
jecxz
loope
ljmp
pushf
or
inc
adc
xchg
pop
lds
push
add
out
les
jmp
pop
sbb
sbb
mov
mov
insb
cmpl
test
aaa
or
sub
pusha
mov
fbstp
mov
cmpl
std
ret
pop
sbb
or
mov
cmp
mov
mov
in
sbb
adc
rcrl
shlb
adc
push
mov
and
jbe
orl
cld
test
les
push
roll
scas
mov
fs
push
std
push
ret
mov
pushf
leave
xor
out
push
adc
cld
sub
xchg
xchg
xchg
pop
lds
ja
aad
outsb
outsb
push
out
sbb
mov
roll
lods
jo
ljmp
inc
clc
loop
mov
scas
cmp
xchg
sahf
js
out
mov
pop
cmpsl
fcomi
sub
orb
orl
fimull
in
pop
out
xchg
mov
shlb
fldenv
popf
nop
sub
inc
decl
ljmp
cmc
sub
inc
andb
adc
add
push
or
aas
loopne
and
mov
push
jge
inc
pop
xor
lret
fdivrl
stc
movsb
lea
push
xor
jmp
out
and
cli
sub
fisubs
lock
in
add
sub
rorb
sbb
jp
inc
mov
andb
arpl
mov
outsl
loop
ss
mov
cmp
inc
and
mov
inc
leave
cmc
pop
push
mov
lods
and
call
shl
inc
mov
push
or
mov
arpl
cmp
lcall
icebp
stos
test
mov
pop
sbb
mov
jo
xchg
adc
aas
arpl
lret
adcb
je
jae
ret
roll
repnz
cmp
std
add
inc
mov
jmp
add
xchg
dec
dec
aas
rolb
mov
jno
cmp
in
pop
mov
pop
std
xchg
xor
sub
sub
or
xchg
mov
inc
frstor
out
or
fnstcw
push
js
mov
cs
mov
lea
in
ror
jmp
mov
cmp
mov
ret
aaa
lea
rcr
ret
enter
add
cmc
pop
jl
jno
jle
dec
add
push
mov
jo
mov
add
cmc
jb
xchg
dec
adc
cmpsb
imul
mov
imul
xor
jb
icebp
xor
stos
call
or
std
daa
mov
dec
inc
nop
gs
cmp
sarl
xchg
jnp
mov
xchg
push
repnz
loopne
in
incl
mov
daa
push
xorl
lods
outsb
mov
in
or
faddl
outsl
or
mov
inc
xchg
insl
sub
sub
stc
shll
cs
adc
lcall
loop
and
or
push
jmp
loopne
mov
sbb
xor
lock
jnp
push
negb
repnz
mov
je
push
test
push
dec
outsb
decl
or
or
es
dec
inc
inc
mov
adc
fsubr
test
fsub
add
scas
pop
sbb
rolb
jge
clc
sub
and
incl
mov
insl
jns
std
adc
jns
jne
mov
push
dec
sub
int3
pop
mov
cmc
mov
add
jae
sbb
test
mov
and
and
out
push
xor
sbb
or
dec
cmc
and
cmpsl
sub
xchg
push
cmp
mov
and
test
rolb
pop
jno
adc
sbb
xchg
sbb
aad
orl
mov
mov
jo
inc
lret
pop
xchg
adc
add
je
aaa
iret
inc
dec
aas
inc
arpl
dec
push
xchg
add
cmc
mov
dec
lret
adc
ja
push
push
js
mov
mov
pop
call
mov
repz
xchg
and
push
lahf
or
jns
xchg
mov
push
das
sbb
ds
mov
jle
icebp
dec
pop
inc
sbb
addr16
dec
add
es
scas
dec
int3
gs
add
add
add
xchg
xchg
mov
mov
shrb
adc
iret
xorb
pop
jbe
add
sub
stos
mov
ret
pop
xchg
mov
add
daa
movsb
jbe
popa
mov
cltd
nop
add
pop
mov
fsubrs
inc
loope
mov
test
aas
add
and
jno
mov
fdiv
mov
fs
cmp
push
pop
jecxz
xchg
pop
add
add
loopne
xlat
out
adc
out
mov
xor
data16
xor
jp
push
in
pop
adc
fistpll
or
add
ds
aad
lcall
add
mov
aas
pop
xor
cmp
repnz
adc
pop
test
jl
sub
xor
pop
pop
mov
aam
xchg
inc
lret
mov
std
inc
dec
push
outsb
cld
pop
mov
cmp
int
xor
xchg
outsl
add
clc
push
arpl
dec
inc
filds
adc
out
mov
pop
mov
jg
rclb
xlat
sbb
fnstenv
popf
or
das
pop
inc
aam
cwtl
jbe
lods
sbb
mov
std
ds
jns
fmul
jecxz
iret
add
jg
jl
mov
add
push
mov
xor
in
cmp
test
jae
gs
add
sub
adc
jg
mov
add
call
sbb
sbb
hlt
insb
jns
loopne
cmpsb
adc
mov
mov
fdivs
mov
mov
lock
int3
faddl
mov
adc
or
loope
cld
add
pop
cmp
bswap
jg
out
xor
pop
mov
nop
mov
fwait
jne
push
and
icebp
add
leave
mov
cmpsb
adc
push
out
push
add
mov
jmp
roll
xchg
jmp
and
push
fdivp
sub
xlat
cmp
pop
cmp
cli
or
sub
jne
sti
cmp
push
lock
sahf
xor
sbb
in
loopne
pushf
jb
pushf
int
pop
dec
icebp
int
stos
mov
pop
or
xor
bound
lods
pop
cld
addl
fstps
shrb
lods
mov
mov
push
jecxz
inc
mov
shlb
cmpsl
mov
fimull
shrl
imul
mov
push
rcl
inc
ret
movsl
sbb
repz
mov
in
addb
jle
xchg
mov
mov
jns
cmp
jge
test
xor
mov
test
or
js
cmpsb
sub
inc
mov
pop
in
pop
add
sbb
lock
sub
sub
push
push
push
ljmp
aaa
or
xchg
test
lahf
sub
adc
sbb
mov
rorl
pop
inc
add
dec
push
xchg
test
subb
orb
test
push
dec
test
xchg
sub
out
push
int
cmp
add
insl
outsb
adc
test
lods
add
sub
daa
pop
and
xchg
fmuls
stc
add
test
jo
add
inc
pushf
ja
jl
sbb
les
dec
mov
inc
mov
ds
scas
pop
jg
cmp
jp
ret
test
pop
fs
call
shll
scas
cmp
mov
cld
mov
mov
ja
mov
mov
ljmp
sbb
ret
mov
ds
add
test
mov
adc
adc
stos
inc
or
push
mov
test
xor
aaa
sti
inc
push
movsl
lods
hlt
inc
push
mov
mov
out
and
or
test
test
mov
cli
add
in
mov
lds
cmc
xlat
or
xchg
pop
enter
rorb
std
dec
psubb
push
rcrb
nop
push
xchg
sbb
dec
out
pop
imul
sub
stos
sbb
add
xorl
clc
aas
sbb
iret
and
cli
dec
adc
push
dec
shlb
jns
lods
push
aad
std
fsts
mov
jp
push
mov
adc
add
lcall
leave
popf
mov
roll
sbbl
push
cmpsb
xor
icebp
scas
lret
jp
repz
or
sbb
pop
adc
sti
cmpsb
jl
je
iret
mov
fsts
loop
xchg
ljmp
pop
or
mov
jecxz
pop
and
out
fists
add
dec
adc
and
shrl
inc
and
mov
sarl
cmp
movsl
dec
and
inc
pop
or
ret
aam
mov
stos
adc
cmp
test
push
mov
jo
cmp
bound
leave
loopne
lds
cli
arpl
mov
out
lods
clc
clc
pop
pop
adc
ret
iret
lods
mov
lock
jb
iret
lea
jo
xchg
mov
lods
mov
gs
push
out
cmpsl
popa
dec
out
sbb
mov
xchg
popa
or
dec
adc
hlt
ret
inc
mov
push
loopne
pusha
sub
mov
cld
das
xchg
test
cmovge
adc
jb
pop
cmp
or
hlt
or
sub
int3
xor
mov
or
enter
hlt
popf
sbb
std
dec
fs
jecxz
data16
mov
jns
arpl
mov
je
adc
xlat
adc
mov
sar
icebp
decl
icebp
adc
mov
pop
clc
cmp
rcrb
and
inc
lds
shrl
ss
sti
pop
lods
repz
lahf
outsb
push
cld
int3
mov
xchg
addl
push
cmc
pop
hlt
add
jb
bound
aad
or
and
call
sub
mov
int3
lds
add
sub
push
cld
loop
shll
scas
adc
in
pop
cld
lcall
or
jg
sub
movsl
lret
pop
and
adc
add
in
cmpsb
jg
popa
aam
out
push
adc
addb
test
jle
cltd
call
js
out
adc
adc
add
sahf
loopne
mov
rclb
add
scas
sahf
iret
inc
adc
push
add
add
jne
mov
xchg
mov
bound
add
aam
push
sub
push
inc
dec
mov
sti
add
inc
call
stos
cmp
push
into
mov
aad
rorl
adc
mov
pop
pop
sub
cmp
pop
or
inc
jne
ret
adcl
mov
dec
mov
adc
scas
lods
in
shrl
lods
dec
sbb
cmp
xchg
les
shll
lret
mov
sub
ffree
pop
inc
dec
je
clc
rclb
push
jge
mov
dec
jg
or
dec
das
pusha
fwait
loopne
incl
test
or
sbb
arpl
ds
xchg
add
dec
mov
mov
lods
or
out
cmpb
sub
in
rcll
pushaw
aaa
ror
and
add
mov
or
mov
push
xchg
mov
leave
or
jo
jg
inc
push
mov
add
imul
xchg
push
mov
mov
and
push
mov
lcall
jno
add
rcl
dec
mov
and
les
insb
cld
lcall
jb
ret
fisubs
xor
add
adc
daa
shr
mov
pushl
es
cmp
sar
subps
add
sbb
sbb
outsb
aam
xor
push
shl
mov
enter
push
push
into
iret
inc
push
jb
or
push
notb
testb
cli
or
clc
arpl
xchg
sub
scas
and
out
push
aam
lods
std
shl
dec
in
dec
jb
xchg
mov
rolb
fwait
and
jecxz
popf
mov
mov
hlt
mov
push
cltd
dec
mov
in
fs
xor
fnstcw
mov
lods
leave
mov
stos
nop
push
or
pop
in
jp
sbb
inc
rcrl
bnd
jo
push
aad
scas
ret
mov
xchg
sbb
loopne
pop
pop
lret
xchg
and
in
mov
cmc
jno
inc
js
xchg
inc
icebp
ja
cmp
es
mov
test
add
stos
or
or
clc
imul
xchg
repnz
add
clc
cmc
or
insb
hlt
jp
cmc
and
ja
mov
jecxz
pop
out
ret
aaa
mov
jge
subb
and
pop
jmp
fstps
mov
fwait
test
test
call
xchg
loope
stos
andl
inc
imul
xor
jae
push
loop
cmp
int3
cmpsb
scas
lea
mov
out
sbb
cwtl
push
leave
xchg
stos
ljmp
into
pop
jge
adc
nopl
xor
sbb
mov
inc
mov
dec
push
data16
jecxz
and
mov
in
add
push
daa
in
jle
movsl
sbbb
das
mov
lock
int3
xor
xchg
inc
lods
adc
or
ss
inc
jl
push
repz
push
mov
aas
mov
sbb
push
cmp
aas
sbb
push
sub
pop
cmp
std
jo
or
mov
cli
mov
and
loope
rcll
sub
scas
dec
xor
scas
stos
test
xchg
cmpsb
push
test
lds
cmp
or
sub
push
xchg
andb
in
lock
mov
int
popf
in
stos
inc
jge
jno
popf
hlt
daa
add
xor
xorl
out
rorb
dec
cli
andb
mov
inc
das
add
stc
sbb
pop
push
xchg
cmc
xor
repnz
je
pop
movl
addr16
jns
lahf
sub
add
sub
cmpl
cmp
and
inc
mov
or
lcall
les
xor
cmc
push
pop
jo
je
adc
das
jg
call
lock
pop
insl
push
mov
xor
and
add
sub
xor
mov
jmp
dec
fs
jp
inc
dec
mov
mov
test
jg
insb
cs
and
mov
in
pop
inc
pop
lock
loop
popa
fsubrl
repnz
mov
arpl
enter
icebp
mov
push
cmpl
test
outsl
es
push
inc
jo
dec
sbb
cmp
cmp
mov
sbb
aas
and
push
mov
xchg
inc
xor
dec
loope
outsb
pop
je
jae
ss
or
xchg
push
mov
inc
cmpb
fisttpl
jmp
cmpsl
mov
or
cmpsb
mov
jbe
sbb
cltd
sub
test
xchg
cmp
stc
orl
in
sub
cmovl
insl
addr16
push
mov
sub
xchg
lock
mov
or
jp
rorb
mov
aaa
cmp
xchg
mov
enter
xchg
jae
cmpsb
pop
mov
pushf
test
das
jle
test
out
int3
jo
cmp
clc
aas
shlb
das
insl
ljmp
ret
inc
and
jg
imul
int3
add
movsb
ljmp
jl
xchg
dec
jmp
sub
daa
jne
icebp
xrelease
sahf
sbb
or
push
sub
or
imul
out
lea
test
test
data16
push
adc
adc
xchg
xchg
dec
lods
lds
push
jo
pop
call
int
aam
mov
mov
aad
xchg
les
pop
and
je
push
inc
std
push
push
and
ret
sbb
sub
dec
fsts
cmp
cld
add
js
xchg
roll
sub
lahf
dec
cmp
aas
js
push
sarl
mov
clc
push
adc
pop
add
pop
lods
les
inc
aas
les
cmp
loope
adc
and
ja
add
mov
pop
add
add
mov
lods
and
fwait
out
jo
jo
adc
mov
incl
inc
jl,pn
and
lret
andl
xor
in
imul
imul
xchg
inc
and
imul
mov
int3
xchg
testb
arpl
sahf
es
rcll
mov
mov
into
rolb
sub
cld
je
cwtl
push
push
insb
lahf
and
xchg
in
adc
div
jne
jg
jne
inc
mov
fisttps
push
pop
insb
ficoml
adc
sub
ret
cmp
xchg
add
pop
addr16
mov
mov
imul
loopne
mov
and
sub
dec
inc
pop
sub
imul
add
pop
xchg
into
es
test
jg
dec
sub
dec
sbb
add
push
mov
add
xor
or
xorb
pop
cmpsl
cmc
sarb
push
sub
xor
add
mov
out
inc
dec
or
mov
cmp
fiadds
fistps
add
cs
mov
int3
lahf
arpl
fstps
xchg
out
faddp
inc
jecxz
or
xchg
inc
imul
inc
daa
call
out
inc
enter
inc
scas
ss
enter
fucomp
pop
repnz
cli
mov
jp
negb
push
adc
dec
mov
sahf
sbb
jnp
dec
ret
jae
dec
cmp
mov
andb
jno
out
sbb
adc
aas
add
or
inc
jmp
addb
or
cmp
int3
outsl
ret
inc
pop
sub
repnz
cwtl
je
icebp
ss
filds
xchg
xchg
cwtl
loope
in
sbb
sub
dec
cli
xor
cmpsl
or
das
cmp
pop
xor
and
les
jne
inc
mov
push
fucomp
sub
pop
test
lea
dec
clc
add
jb
mov
mov
and
mov
or
movsb
out
cmp
mov
lock
mov
jmp
mov
xsha1
cmpsb
push
loope
sbb
jno
mov
cmp
lds
rcll
mov
xor
add
mov
mov
pop
lea
cld
shlb
in
nop
ss
mov
icebp
and
mov
inc
je
ss
lods
mov
pop
pushf
add
cmp
cli
and
fnstcw
outsl
push
sub
jbe
and
test
into
into
jnp
push
add
cld
sub
inc
inc
sbb
mov
adc
in
iret
add
in
mov
mov
xchg
cmp
dec
ret
pop
dec
or
leave
mov
pop
loope
in
xchg
xlat
shrl
sbb
adc
lea
pushf
add
test
mov
test
or
inc
push
stos
movsb
shll
stc
push
xchg
mov
mov
xchg
arpl
hlt
fbld
aam
dec
sub
shlb
xor
jle
pop
icebp
aaa
xor
stos
fildll
cmp
sub
add
push
int
xor
pop
call
or
movsb
pusha
mov
xor
je
and
cld
and
inc
jl
test
fmull
movsb
mov
xchg
popf
push
popa
sbb
add
cvtps2pd
ficoms
cmp
sbb
movups
fsubs
jne
lods
ror
movsb
sbb
mov
out
test
and
push
movsb
push
jns
xchg
jl
in
jbe
repnz
or
sti
hlt
push
sysexit
push
std
push
lock
adc
add
jp
pop
scas
push
push
pop
push
and
mov
daa
mov
sti
or
adc
jg
xchg
dec
jp
or
jl
cmp
xor
cmp
aad
xchg
sbb
ja
add
xchg
pop
js
icebp
out
dec
jl
fsubrl
sbbl
adc
jp
insl
pop
mov
mov
adc
int3
and
iret
ds
test
mov
rorb
sbb
pop
adc
shlb
ret
add
inc
lods
lret
jecxz
mov
or
in
pop
mov
je
jmp
pushf
xor
outsl
add
inc
and
fldt
hlt
pusha
out
out
add
std
mov
fmull
jo
in
inc
or
das
sbb
add
inc
clc
lea
pop
adc
fistpll
out
mov
fadds
loop
popa
in
lcall
sbb
dec
jle
xor
incb
add
dec
pop
jp
daa
js
and
scas
test
dec
xlat
leave
xor
inc
mov
inc
jl
mov
jg
lods
test
nop
inc
repz
add
fiaddl
testb
nop
jecxz
dec
jmp
push
and
adc
jg
xor
lods
dec
adcb
pop
shll
lret
push
mov
pop
shl
cmp
mov
out
movb
aaa
push
lods
and
or
lods
add
dec
in
and
popf
pop
fisubl
cs
arpl
mov
dec
mov
xchg
sbb
add
fistpl
shlb
add
ret
add
xchg
dec
lcall
xor
sbb
lret
hlt
ret
sarl
stos
fisttpl
jns
jne
sar
mov
mov
xchg
mov
pushf
push
mov
ret
add
icebp
dec
shl
cltd
test
rol
mov
cld
dec
dec
mov
mov
xchg
sub
sub
inc
mov
dec
cli
or
or
cmp
shll
xchg
add
les
lods
lret
data16
fadds
sarb
adc
sub
movsl
adc
adc
jne
icebp
cltd
add
fidivs
rclb
dec
fisubrl
mov
aaa
mov
or
push
in
xor
test
rclb
into
cmp
scas
js
fwait
pop
into
jo
leave
jbe
leave
and
and
aaa
jge
pop
and
cwtl
add
cmp
inc
fs
insl
cld
stos
mov
loope
adc
or
cmpsb
mov
lea
push
adc
push
scas
in
xchg
xchg
push
adc
ds
adc
test
scas
jo
rolb
mov
pop
outsl
movsb
cli
inc
xchg
es
je
ss
mov
xlat
lds
in
mov
push
dec
mov
pop
mov
lock
inc
pusha
popa
rorl
mov
popa
push
jmp
add
push
cmc
std
sub
lods
test
jns
ljmp
addr16
sarb
fsubs
js
lock
mov
xchg
clc
mov
loopne
lcall
imul
iret
cli
addr16
ret
fists
push
outsb
sub
or
mov
mov
lret
mov
cmc
inc
push
es
cwtl
dec
push
cli
stos
rcl
sub
rorl
add
or
mov
xor
jle
jo
mov
pop
call
int
or
push
inc
sbb
fstpl
lcall
outsb
cmc
sub
jp
or
ds
pusha
adc
out
mov
mov
or
aaa
sbb
add
ds
xor
jnp
lods
aas
inc
ret
int
scas
mov
push
sub
sub
loop
adc
push
ret
pop
gs
mov
ss
dec
pop
sub
icebp
nop
stos
or
jg
lret
loope
rep
add
fldcw
fcomip
cltd
sbb
cmc
test
adc
pop
push
cwtl
fadds
jle
mov
jecxz
es
fnsave
lock
push
mov
fmulp
push
addr16
subl
sahf
aam
pop
pop
push
pop
fistps
in
das
pop
jecxz
jno
cmp
xchg
jge
cli
adc
sbb
daa
mov
jns
add
sub
cmpsl
sub
test
xor
dec
adc
dec
insl
cli
les
addr16
std
out
ds
push
imul
decb
cmpsl
or
inc
repz
popf
aaa
inc
mov
dec
sub
out
ds
fiadds
pop
mov
xchg
pop
pop
jb
cs
xor
xor
fs
test
jmp
mov
mov
jmp
into
add
test
or
test
push
or
adc
roll
jg
pop
add
push
subb
adc
sub
jg
dec
mov
loope
in
rolb
jne
push
insl
rorb
inc
mov
js
sub
inc
mov
dec
inc
mov
push
cmc
stos
andl
mov
fldcw
mov
clc
aaa
ds
out
cmpsb
daa
inc
sbb
dec
andb
pop
testb
sbb
arpl
pop
mov
jno,pt
stc
pop
fs
lods
insl
sub
sub
mov
fildl
add
arpl
icebp
sbb
adc
lahf
addb
and
inc
pop
sbb
jl
or
fs
xchg
xchg
inc
outsb
mov
shl
mov
cwtl
in
jnp
and
imul
sub
ret
dec
cmp
mov
rolb
aas
mov
js
sub
lea
lock
movsb
test
das
push
add
xchg
mov
fstpt
stc
aas
notb
std
movsl
push
mov
push
adc
push
pop
add
ss
jns
inc
clc
cmp
push
loop
pop
xchg
sub
cmpsl
mov
push
enter
sbb
daa
lret
stc
movsb
inc
inc
incb
add
sti
test
clc
and
xchg
xchg
dec
sub
push
sbb
daa
ja
iret
add
xchg
lock
adc
mov
shll
aas
lcall
mov
sub
shll
es
psubw
mov
push
sub
shlb
outsb
mov
push
test
fwait
adc
jb
mov
xchg
jp
cmpl
rolb
xor
clc
and
ret
test
adc
sbb
loop
push
stc
test
push
arpl
mov
mov
pushf
add
imul
movsl
sbb
fidivrl
fcmovu
adc
mov
gs
fcompl
shl
stos
fwait
mov
jnp
movsb
sahf
push
mov
repnz
cmp
cli
add
std
mov
pop
add
xor
pop
leave
push
loop
cwtl
jl
jbe
adc
sahf
push
mov
adc
or
sub
push
call
arpl
sti
sbbl
dec
cmp
xor
dec
stc
mov
xchg
xchg
sahf
push
cmc
fistps
mov
lods
or
jle
das
push
adc
popa
lcall
cmc
cmp
push
filds
adc
aaa
shll
test
je
test
ds
pop
xchg
js
rcl
ds
gs
data16
loope
sbb
sub
and
inc
add
xchg
rcll
adc
gs
push
pop
lock
mov
cld
leave
mov
leave
out
inc
jge
add
sbb
fists
xor
clc
mov
icebp
mov
rclb
jp
push
inc
jg
xchg
jne
clc
inc
scas
push
add
clc
sub
sbb
popa
rcrl
xor
mov
mov
add
inc
mov
pop
cs
int3
cmp
pop
icebp
lcall
scas
inc
lods
push
jl
gs
cli
lods
and
xchg
xor
fs
ret
add
jne
xlat
adc
insb
pop
push
mov
dec
ja
aas
push
cld
ja
icebp
mov
insl
and
xchg
pop
dec
mov
cmpsb
jne
inc
cwtl
rcll
pop
pop
lret
cwtl
fcompl
jbe
mov
in
dec
jecxz
lcall
mov
mov
dec
les
jo
pop
mov
std
mov
in
clc
inc
pusha
cmc
cld
jae
mov
jg
dec
push
clc
loopne
bound
add
inc
mov
dec
jae
or
hlt
inc
pusha
int
mov
int3
sub
pop
sarl
adc
fists
or
cmp
ds
push
rcl
out
adcl
mov
cmp
out
sbb
adc
inc
ret
data16
rorl
cld
add
cmpb
mov
add
popa
push
sarl
dec
push
ret
add
pop
fs
or
gs
pop
jbe
addr16
idiv
cmpsl
xchg
mov
adc
cs
adc
and
shlb
pop
adc
gs
clc
cbtw
int
mov
mov
inc
aaa
mov
test
leave
sub
inc
cmp
add
and
sbb
push
pop
and
aaa
adc
mov
rolb
and
cld
insb
cmpsl
filds
push
cmp
pop
dec
lahf
je
pusha
dec
test
inc
aas
in
and
loopne
inc
inc
pushf
pop
fstpt
push
jg
out
and
pop
cltd
icebp
outsb
test
pop
out
add
and
test
clc
push
repz
push
pop
call
lds
jg
rorl
add
adc
adc
scas
add
movsb
shlb
push
subb
push
cmp
adc
add
add
aaa
or
and
mov
sti
jle
mov
das
test
fprem1
clc
jge
sub
ror
xor
call
or
add
pop
scas
loope
sbb
int3
mov
arpl
inc
icebp
test
xchg
mov
ret
mov
shl
sub
and
add
out
rcr
xor
mov
and
and
jmp
push
stc
push
lods
pop
push
repz
mov
xor
and
pop
mov
cmp
nop
and
ss
sbb
xchg
fistl
dec
pop
xchg
cs
popa
push
add
out
sub
aaa
xor
adc
pushf
pop
or
and
push
xchg
mov
shlb
lds
notl
mov
push
movsb
xchg
cltd
imul
inc
repz
push
shlb
mov
add
add
scas
pop
lds
and
fwait
dec
cld
sbb
xchg
and
inc
push
pop
lods
dec
or
fbld
pop
lods
push
xor
sbb
jmp
stos
fucompp
cmp
push
inc
cmp
dec
rorb
mov
add
imul
insl
add
pop
shlb
bound
scas
cltd
lock
icebp
mov
dec
jbe
mov
mov
sbb
jno
or
mov
adc
repz
gs
or
loop
or
xchg
or
inc
fnsave
hlt
data16
shrb
jne
pop
add
jmp
test
adc
xchg
xor
sub
int3
insl
mov
push
gs
test
dec
lock
xchg
scas
addr16
add
sub
or
jmp
sbb
mov
jecxz
push
sbb
pop
adc
cltd
int3
inc
shlb
cmc
loope
xor
dec
or
xchg
pop
sub
sbb
sub
adc
lds
fildl
mov
rolb
ja
inc
cmpsl
mov
fidivrs
mov
and
lock
mov
mov
add
ds
pusha
mov
test
rcrb
and
adc
sbbb
icebp
inc
scas
xchg
je
mov
in
dec
inc
rolb
in
inc
nop
out
cmp
sub
inc
ss
push
cli
xchg
sub
sbbl
bound
lret
jmp
les
mov
inc
test
sarl
or
or
xlat
icebp
push
ja
clc
insb
jecxz
pop
sub
adc
or
fdivp
nopl
adc
inc
cmp
adc
sub
lock
arpl
adc
inc
xchg
fmul
pop
test
aas
inc
popf
scas
sbb
mov
or
aas
pop
lea
push
cmp
mov
sbb
add
stc
les
shrb
inc
and
inc
inc
imul
int
notl
or
inc
int
xchg
or
adc
xchg
mov
dec
pop
arpl
cmpsb
sbb
sub
cmp
das
insl
lcall
arpl
push
pop
loopne
fistpll
lock
mov
add
ljmp
xor
pop
es
fisubl
outsb
orb
jp
lods
out
mov
xor
add
xchg
inc
imul
lock
scas
pop
mov
ss
das
pop
push
mov
or
mov
or
sbb
rorl
push
push
repnz
mov
xchg
dec
cmp
mov
adc
js
push
push
inc
insl
jo
pop
adc
rol
mov
sbb
xchg
js
pop
inc
cli
unpcklps
and
cmp
data16
adc
push
arpl
mov
data16
dec
adc
lret
sahf
inc
xor
leave
and
jo
dec
sub
mov
rolb
pop
out
mov
pop
push
pop
xor
sub
out
ja
fistpll
mov
jg
jmp
lock
xchg
cmp
leave
cwtl
dec
mov
jmp
or
movsl
dec
mov
sbb
mov
xchg
stc
pop
jns
add
xchg
cltd
add
jb
jmp
or
sbb
add
add
jns
push
sar
nop
nop
add
xor
iret
inc
mov
cmc
mov
test
out
jp
mov
add
leave
adc
add
xor
push
mov
lret
shr
stc
or
sub
add
cmpsb
jg
dec
popa
in
cmp
loope
movsb
xor
and
sbb
cli
adc
mov
jl
rolb
xor
call
lcall
lret
and
or
movsl
add
repz
imul
ret
jae
repz
push
xchg
out
in
xchg
push
nop
mov
addb
pop
xor
cmpsb
xchg
adc
sub
out
xchg
fistpll
jmp
or
cld
cmpsl
add
cmp
and
pop
dec
adc
xor
push
in
cli
xor
sbb
and
pop
xlat
call
pop
sbb
cmc
enter
fisttps
dec
mov
aad
push
mov
rcll
clc
les
and
sbb
jecxz
or
dec
lock
ljmp
shrb
repz
or
push
jecxz
push
mov
pop
and
xchg
clc
adc
xor
push
test
into
jo
sbb
push
xchg
add
adc
int
add
and
inc
mov
jge
add
mov
imul
mov
mov
js
jp
in
push
mov
add
popf
js
pop
jmp
in
mov
nop
inc
std
mov
pop
test
lcall
cld
movsb
in
xchg
nop
aas
mov
mov
loopne
iret
and
pop
sbb
ss
iret
lods
jo
mov
or
xchg
add
sub
fidivrs
roll
ss
xchg
repnz
mov
push
inc
out
es
pop
ret
sbb
stc
sbb
packsswb
in
pop
nop
mov
orb
insl
iret
or
push
ficoms
inc
mov
sub
lahf
cmp
mov
nopl
xchg
subl
insb
test
or
mov
sbb
xchg
popa
fwait
ja
or
and
cmc
jecxz
sbb
push
data16
lock
sbb
pop
mov
in
aas
rolb
lock
repz
sub
xor
mov
jne
xchg
fadds
clc
cmp
movsb
out
nop
into
mov
lods
imul
sbbb
mov
pushf
shr
push
inc
xor
xchg
sub
out
pop
xor
sub
fstpt
cmc
dec
mov
adcb
in
pop
lock
mov
les
add
inc
pop
add
lahf
fcomps
pushf
dec
shll
in
rcl
jae
mov
repz
imul
pop
imul
inc
jo
iret
cli
xor
and
adc
popf
pop
jl
dec
dec
pop
fmuls
inc
pop
push
xor
lea
sub
jp
adc
xor
mov
pop
mov
dec
jecxz
cmc
or
stos
inc
cmp
xchg
int
scas
mov
out
mov
push
cmpsl
mov
test
orl
jo
or
mov
pop
insb
mov
sbb
aaa
js
scas
dec
adc
ss
dec
icebp
jb
inc
rcrb
jl
jecxz
dec
popa
int3
xlat
inc
cvtps2pd
pop
xor
in
push
in
es
mov
dec
into
gs
clc
inc
dec
lea
mov
int
jg
lcall
pop
push
dec
pop
cltd
lods
mov
xchg
or
mov
jae
shll
jecxz
jle
push
and
mov
mov
push
xor
andl
hlt
in
add
xbegin
jle
mov
pop
cmp
adc
mov
or
xchg
pop
adc
icebp
sti
jno
shlb
test
push
outsb
std
cltd
jno
inc
aas
push
jne
xchg
bound
push
mov
jmp
loope
mov
pushf
xor
mov
jo
dec
mov
sub
and
jge
and
test
int
imulb
sub
cmpsl
cld
add
lret
cmp
mov
add
dec
mov
cmp
or
jle
mov
movl
cmpsl
jmp
or
mov
add
ret
dec
leave
iret
or
enter
test
mov
loop
loope
dec
adc
adc
bound
or
push
add
cld
push
rcrb
inc
push
dec
xchg
fiadds
rorb
adc
daa
movsb
xchg
cmc
out
push
jg
inc
fwait
dec
or
adc
stos
mov
adc
or
sti
adc
imul
fdivrp
jbe
subb
mov
push
andb
xorb
dec
add
nop
sbb
and
out
jne
push
int
push
sarb
mov
xor
popa
adc
push
pop
inc
fmul
mov
mov
push
in
xchg
xchg
icebp
test
out
lods
xor
sahf
ret
add
outsl
scas
mov
ret
add
fcmovne
xchg
sbb
out
sub
arpl
sahf
adc
adcb
xchg
in
xor
enter
mov
cmc
pop
mov
xor
pop
test
or
mov
incl
dec
stos
add
rolb
lcall
xor
es
pop
incb
jp
daa
sub
out
sub
aam
pop
xor
repz
xor
out
add
adc
mov
add
pushl
shlb
and
xchg
scas
pop
add
xchg
sbb
pop
enter
and
cmc
push
xor
pop
ljmp
push
add
mov
cltd
cmp
xor
jo
ret
enter
in
movsb
sbb
mov
jge
or
in
pop
scas
dec
stos
lock
filds
call
pusha
adc
nop
shlb
jp
shrb
cmpsl
xchg
jg
bound
cmp
dec
shrl
icebp
popa
outsb
dec
xlat
ss
stos
test
fsts
or
mov
rcrb
hlt
pop
inc
mov
mov
lds
sbb
jb
sbb
mov
sarl
lahf
add
push
jnp
add
pop
into
iret
mov
iret
mov
mov
push
out
std
mov
pushf
in
sub
sub
push
rcrl
imul
cli
inc
int
or
stc
mov
bound
xchg
sbb
mov
mov
popa
inc
mov
pop
cmpsl
or
iret
and
inc
inc
stos
stos
hlt
pop
sub
sarb
mov
dec
jp
pop
mov
mov
popf
cmp
cmpxchg
inc
fs
jne
sub
mov
and
icebp
push
test
dec
mov
cld
or
cmp
mov
jle
add
xorb
fldcw
sub
jecxz
clc
xor
sbbl
ret
jns
push
repnz
mov
imul
in
lcall
sub
orb
out
and
loope
cmp
xchg
outsb
inc
push
inc
test
xchg
loop
stos
xor
mov
jge
aad
sub
rclb
ljmp
into
cltd
pop
loop
call
cmpsb
mov
cmc
xchg
inc
sbb
adc
sarl
fstpl
pop
dec
into
lret
inc
adc
dec
loop
es
ljmp
mov
cmpsb
roll
push
push
lahf
sbb
and
pop
push
add
pop
pop
sub
imul
orb
loop
add
adc
adc
shrb
jns
mov
adc
out
adc
push
sbb
mov
adc
ret
dec
jle
xor
leave
mov
pop
mov
icebp
xor
arpl
jno
and
push
pop
sarl
push
inc
or
stos
sbb
cmp
lea
mov
sbb
cmpl
lods
rorl
push
je,pn
cmp
pop
lahf
aas
ljmp
pop
push
mov
mov
xchg
lcall
mov
mov
mov
lret
sarb
add
ret
xchg
aas
dec
test
enter
xor
repnz
into
mov
cmc
add
ret
clc
and
xor
addl
mov
cmpb
sbbl
cmp
fidivrl
and
adc
xchg
aam
ret
aaa
mov
pusha
insl
jge
sub
lcall
xor
addr16
jp
sbb
push
rorb
cmp
es
xorl
dec
add
rolb
int
cmpb
xchg
lret
andb
sbb
lret
push
loop
mov
inc
xor
leave
pop
cltd
adc
adc
push
push
adc
sbb
or
mov
arpl
ljmp
jl
xchg
and
sbb
clc
mov
cmovbe
shrl
fwait
mov
mov
mov
ret
pop
sub
les
push
sbb
inc
das
icebp
movsl
sbb
push
leave
jnp
push
fwait
clc
out
or
pop
mov
mov
mov
sub
rclb
or
ds
std
dec
jbe
mov
cmpsb
mov
lods
in
push
add
xchg
bound
lcall
cld
mov
je
jnp
inc
adc
push
repnz
jbe
inc
and
and
dec
push
add
addr16
add
xchg
sbb
mov
jne
add
filds
sbb
sarl
mov
mov
mov
push
adc
mov
push
adc
or
gs
out
fildl
sahf
fptan
or
stos
lcall
and
add
pop
cwtl
pop
or
sbb
icebp
add
loopne
aad
pop
adc
jp
pop
adc
inc
sub
pop
mov
add
or
jmp
dec
pop
jecxz
sbb
jmp
sub
or
stos
push
or
xchg
mov
pop
xor
insl
test
insl
jp
imul
xchg
push
lods
pop
aas
outsb
add
test
adc
cmp
lock
out
jne
push
movsl
fistpll
sarb
pusha
jno
xchg
and
addl
insl
xchg
in
shrb
jl
dec
cmc
test
and
into
pop
in
lret
mov
add
cld
pop
adc
pop
cltd
rclb
loop
icebp
cwtl
adc
repnz
lcall
aas
test
pop
add
xor
cmpsl
cs
cmp
push
fucomip
mov
in
fldcw
add
mov
rcrl
mov
stc
jl
cwtl
movsb
outsl
in
mov
fwait
inc
sbb
stos
imul
xchg
mov
lock
nop
jle
inc
inc
std
and
test
mov
ljmp
inc
lods
mov
clc
pop
mov
push
jmp
cmp
jno
mov
mov
inc
inc
mov
out
xchg
subb
je
push
lcall
inc
sbb
or
pop
or
push
mov
or
adc
push
xchg
fdivrs
es
pop
repz
jmp
fsin
shlb
call
ret
add
jo
push
push
xchg
mov
cmpsb
fiadds
push
imul
out
das
outsb
add
mov
xchg
xchg
jle
mov
stos
out
rcrb
js
jnp
out
mov
lret
loope
or
in
adc
pop
iret
inc
jle
jmp
mov
sub
dec
jecxz
push
nop
add
sbb
mov
cmpsb
sub
sub
loop
subb
mov
xor
adc
loopne
inc
sub
aad
add
out
mov
loopne
adc
or
loope
push
xor
sbbl
rolb
and
cmp
xor
xchg
push
xchg
movsw
jge
sbb
test
in
push
mov
rolb
and
xor
es
fsubrp
xchg
add
push
cld
int
mov
adc
cmp
adc
and
mov
insb
das
xchg
mov
mov
in
cli
inc
sub
cld
xchg
shrl
sbbb
xchg
cli
sub
dec
nop
ljmp
cmp
pop
popf
fcmovnb
stos
inc
and
pop
mov
ret
stc
sbb
sbb
cmp
lret
xor
mov
jo
fucompp
sub
insl
gs
vpsllw
mov
xor
cmp
xchg
add
iret
andl
je
push
les
adc
cli
inc
add
mov
stc
add
mov
xorb
lea
inc
adc
ljmp
das
js
sbb
jbe
data16
jge
adc
inc
iret
mov
je
cs
test
dec
andl
pop
mov
mov
mov
xchg
negb
fwait
lock
hlt
test
sbb
mov
mov
aam
mov
iret
test
andl
mov
sti
nop
aam
pop
imul
cmp
adc
shlb
sti
xchg
sub
and
addr16
push
push
mov
ljmp
sbb
lret
and
xchg
incl
mov
add
pop
icebp
mov
push
inc
fsts
inc
mov
mov
push
dec
and
jne
in
cmpsb
pop
fsubrs
xchg
stos
icebp
xchg
stos
stos
test
lods
loope
and
inc
es
mov
pop
cld
loopne
or
in
lret
pop
xor
scas
imul
add
repz
or
ret
sti
cmpsl
lret
add
cmpsb
mov
lods
and
lock
xchg
das
pushf
cwtl
out
and
adc
shlb
jg
xor
mov
xchg
insb
rol
lcall
mov
sub
add
fwait
movsb
es
pop
mov
hlt
push
popa
rorl
jns
add
cli
call
sub
das
mov
jl
mov
cld
stos
imul
daa
and
pushl
mov
xchg
gs
movsb
push
loope
sbb
jle,pn
xlat
test
je
mov
es
adc
lahf
sub
mov
das
add
adc
pop
inc
push
test
cmp
mov
xor
xor
push
pop
and
repnz
mov
push
push
jmp
call
or
cli
xchg
sbb
test
pushf
mov
cld
dec
xchg
adc
pop
add
or
cmp
out
inc
xorb
jnp
xlat
cmp
cmp
cltd
fdivl
or
roll
mov
mov
testb
pusha
call
cli
shll
push
test
cs
and
pusha
jecxz
aam
fstpl
jns
jnp
test
int
sbb
imul
push
and
inc
push
fnstenv
and
adc
push
dec
inc
adc
lods
cmp
lahf
push
imul
xor
dec
in
mov
mov
in
in
aad
aas
adc
mov
repz
push
fdivrs
push
dec
mov
mov
xchg
dec
xchg
cmp
in
adc
xor
loope
jle
cvttps2pi
test
adc
cmp
mov
pop
mov
imul
mov
push
mov
pop
lret
mov
stc
mov
test
mov
in
mov
lods
mov
fwait
adc
mov
add
pop
inc
inc
pop
mov
inc
fistpl
xor
ljmp
push
mov
xor
mov
inc
jnp
mov
and
sbb
popa
rorl
loopne
sub
icebp
aaa
sbbl
data16
inc
lock
loope
or
mov
jge
es
sub
inc
push
daa
cld
and
lds
aas
ljmp
inc
add
insb
inc
out
sub
scas
xorb
out
jmp
insl
test
pop
rol
jns
stc
std
jbe
cmc
pop
pop
test
jb
xchg
ret
lcall
inc
sti
or
adc
mov
pop
push
mov
pop
gs
std
scas
add
adc
and
and
hlt
jg
adc
cwtl
inc
lods
shll
xchg
rcll
pop
out
cmp
shrb
ret
pop
sub
imul
jmp
jmp
stc
xchg
inc
cli
cli
adc
icebp
mov
icebp
sti
dec
jns
or
mov
das
ret
gs
stc
mov
icebp
leave
inc
mov
push
sbbb
adc
or
push
xlat
sbb
sub
outsl
inc
in
and
loopne
dec
shll
stos
lock
or
mov
outsl
mov
rcrb
jne
jb
or
pusha
lock
addl
in
in
jns
loop
faddp
mov
ret
loopne
inc
xor
fdivl
pop
xor
xchg
adc
lods
mov
ja
mov
fisubrl
incb
pop
rorl
xchg
add
lret
mov
scas
inc
jmp
lods
adc
js
pop
cld
ficoml
sbb
inc
aad
call
add
xor
inc
clc
mov
sbb
sub
stos
out
jo
push
mov
sub
cli
and
pop
add
je
addr16
shlb
repz
jg
dec
bound
jmp
icebp
les
popf
addl
imul
push
add
cli
aaa
and
loopne
icebp
adc
xchg
out
jbe
andl
push
aad
jecxz
adc
push
test
adc
jne
xchg
ljmp
rorl
or
dec
mov
pop
dec
add
dec
jb
sub
mov
push
jmp
out
pop
jae
add
dec
leave
sub
push
add
adc
notb
and
das
inc
mov
jo
xlat
xchg
xor
and
xlat
lods
xchg
movsl
pop
cmp
and
xchg
add
mov
or
or
dec
ss
cmp
test
insl
scas
jg
fnstenv
fistps
fcomi
xor
test
sbb
sub
mov
lcall
push
mov
out
and
adc
or
mov
add
jb
pop
inc
icebp
adc
push
sub
mov
dec
inc
sub
mov
cld
imul
mov
inc
inc
jge
dec
sbb
cmpsb
sub
cmp
mov
xchg
clc
push
insl
js
adc
or
cwtl
rorb
sbb
pop
fcmovnb
push
jg
push
fildll
xor
push
rcr
xlat
dec
add
shrb
test
mov
push
fsubrl
shlb
cmp
loope
out
or
push
xchg
or
jl
add
mov
and
pop
repz
and
out
push
cmpsl
clc
sbb
cli
jg
stc
nop
out
xchg
jnp
mov
inc
push
xchg
loope
mov
or
and
nop
add
inc
andb
jmp
gs
or
popa
or
dec
add
movsl
call
idiv
sti
jne
rcrl
push
inc
push
les
sub
js
xchg
sbb
mov
stc
add
cwtl
add
push
stos
mul
or
stos
dec
mov
lcall
insb
lcall
add
test
lahf
data16
mov
rol
test
in
sbb
js
xchg
gs
xor
inc
cmpsb
dec
test
movsb
push
mov
pop
inc
pop
pop
cmpb
test
xchg
shlb
enter
cwtl
jo
sarl
rcll
iret
lahf
hlt
sbb
mov
into
lock
movsl
add
fs
pop
jl
sbb
ss
jno
sub
nopl
xchg
jg
sub
pop
and
xor
loop
pop
xchg
mov
test
or
stos
xchg
cmc
sub
mov
jecxz
xchg
dec
xlat
sti
add
pop
mov
scas
add
inc
mov
adc
pop
sub
cld
or
xchg
xchg
jns
add
mov
push
jb
pop
xchg
icebp
push
jno
pop
dec
add
cld
mov
rclb
mov
inc
in
cmpsb
ret
push
sub
dec
push
cli
dec
mov
out
dec
add
pop
fstpt
pop
xchg
push
push
xchg
jecxz
pcmpgtd
xchg
popa
xor
fs
sub
push
aaa
cmp
add
and
pop
dec
pusha
inc
fisubrl
push
inc
sbb
js
aas
mov
scas
adc
imul
sbb
cli
jl
mov
jg
rclb
movsl
hlt
xor
es
daa
mov
mov
push
stos
adc
mov
icebp
push
mov
jge
mov
mov
stos
push
mov
int3
inc
xchg
int3
in
mov
sbb
push
insl
push
cld
jo
jne
inc
add
mov
ret
sbb
lock
dec
stos
and
xchg
call
push
xor
xor
imul
ret
lret
lret
xchg
or
sti
lock
lahf
loopne
push
cld
or
stos
stc
int3
ljmp
cmp
rorb
popf
mov
jns
pop
push
jno
xchg
pop
pop
mov
enter
mov
push
mov
adc
mov
inc
xchg
movsb
lds
xlat
and
mov
jnp
xchg
dec
mov
cmp
ja
xor
cld
dec
ret
sub
leave
sbb
cli
or
jge
push
dec
push
push
push
scas
push
stos
add
jns
stc
cmpsl
lcall
and
xor
cmp
sub
mov
ds
xor
in
into
inc
loop
xchg
sbb
cmp
ljmp
xchg
inc
imull
mov
mov
dec
push
inc
sub
add
add
sti
adcb
sbb
add
cmp
cwtl
shrb
stos
iret
hlt
shlb
push
sub
aad
pop
cmp
ds
rolb
lcall
fnstenv
add
std
mov
insb
ljmp
lds
inc
dec
and
jecxz
test
push
mov
dec
push
sub
add
sarl
xchg
test
repz
add
mov
push
sub
inc
jl
sub
add
and
xchg
sarb
push
dec
imul
jno
insb
arpl
in
adc
sub
xchg
add
insl
pop
jns
les
add
negl
or
sbb
sub
jle
stos
add
lcall
pop
popf
lock
add
sub
and
rorb
mov
aaa
call
int
or
fimuls
adc
push
pusha
jmp
push
sub
lods
cli
jg
sbb
pop
nop
incl
notb
out
inc
hlt
mov
mov
stos
jg
loopne
adc
or
mov
dec
insl
pushf
jmp
mov
mov
scas
popa
scas
stos
pop
push
dec
mov
pop
push
cmpsl
cmp
pop
cmpsl
leave
lods
dec
mov
arpl
inc
lds
and
sbb
in
jne
xor
jle
mov
andb
cmp
loopne
fildll
dec
lea
je
dec
mov
push
pop
add
aaa
mov
and
lods
mov
ret
mov
mov
mov
mov
cwtl
mov
popf
mov
loop
cmp
pop
cmp
roll
leave
cmp
jg
pop
lret
rolb
aaa
push
push
test
xorb
outsl
jg
lahf
or
dec
in
pop
roll
cmp
adc
mov
jp
shr
mov
sbb
jae
popa
push
xchg
or
push
mov
fildl
negb
pop
mov
addb
add
push
sbb
pop
xchg
push
sub
pop
mov
add
cmp
xorl
adc
jne
pop
mov
jo
aam
call
mov
push
notl
bound
cmp
pop
nop
jne
push
mov
mov
outsl
mov
mov
xchg
icebp
xlat
mov
adc
sbb
push
lcall
push
mov
or
out
shrb
adc
jp
jl
dec
pushf
add
into
lods
mov
flds
scas
pop
in
xchg
out
mov
push
push
mov
xchg
jp
cmp
addb
nop
gs
js
ja
pop
pop
cmpsl
call
shr
in
addr16
lea
loope
icebp
lret
andb
adc
shrb
lods
setl
mov
xchg
rorb
cmpsb
mov
cwtl
push
cld
enter
mov
fldenv
out
and
fwait
mov
shll
mov
aam
bound
lcall
dec
cld
push
testl
mov
lea
or
mov
cmp
jno
hlt
fstp
test
scas
inc
addl
addl
rorl
xlat
repz
fisttps
scas
inc
out
ljmp
pop
add
mov
sub
jp
loope
in
rcrb
das
aam
push
sahf
sub
xchg
rcrb
test
inc
js
imul
or
imul
shlb
xchg
pop
leave
mov
fcmove
notl
lods
xchg
pop
jae
rolb
mov
movq
gs
sti
mov
sbb
icebp
insl
cmp
dec
cld
stos
je
or
cmpsl
loopne
cmp
jmp
jmp
jle
or
test
das
adc
mov
mov
jg
jle
andl
xor
decb
mov
jp
or
outsl
mov
addr16
jne
mov
or
fisttpl
pop
nop
filds
add
or
daa
mov
orl
ds
insb
ljmp
push
sub
fimull
push
js
inc
enter
lahf
push
lods
pop
jnp
cmp
push
and
cli
dec
es
dec
or
jmp
inc
or
shrb
sbb
bound
cwtl
mov
call
leave
adc
pop
lret
sbb
fs
mov
dec
mov
jno
add
fwait
mov
popa
adc
inc
mov
icebp
pushf
sub
and
pop
sbb
push
adc
sbb
js
movsb
push
andb
lcall
push
mov
out
xor
sbb
push
adc
mov
shl
or
and
push
pop
xor
out
cmp
pop
push
push
scas
xchg
xchg
push
mov
sbb
push
sub
adc
and
mov
jmp
lock
push
cmp
insb
lock
mov
pop
xchg
add
push
out
push
sbb
fisubl
sub
cld
in
jb
push
push
jmp
movsb
lret
loope
dec
aam
mov
dec
das
adc
test
and
or
mov
or
dec
out
add
loope
aaa
cli
xchg
cmp
inc
je
mov
popf
cli
shl
pop
stos
jne,pn
xchg
fbstp
cmp
mov
add
call
in
pop
pop
inc
int
push
mov
rcl
and
cmp
jno
inc
sbb
mov
dec
cmp
mov
xlat
movsl
movsl
stos
add
pop
mov
jno
std
adc
rcll
xorb
or
in
test
int
rcrl
orl
pop
pop
add
adc
addr16
jg
rcll
push
mov
xchg
pop
popa
push
push
jl
xor
lock
xor
aas
int
mov
das
subb
repz
clc
and
cwtl
cmp
pop
lret
loope
jecxz
mov
mov
xor
cmp
adc
adc
jb
lods
iret
mov
cmc
jg
add
in
adc
in
cwtl
sbb
loope
jbe
punpcklbw
cmpsb
shrb
add
dec
mov
mov
ret
in
or
adc
jge
xor
inc
ljmp
sub
add
or
stos
xchg
mov
adc
or
push
add
es
xor
cli
and
fimuls
jns
mov
jecxz
mov
sub
fdivl
xchg
or
mov
inc
pop
in
lahf
cli
dec
cmpsb
and
sti
daa
pop
inc
fbld
cld
add
not
stos
dec
jns
mov
imul
sahf
jp
jne
iret
hlt
dec
jne
adc
xchg
adc
std
test
pop
shlb
cmpsl
jcxz
adc
scas
in
sbb
jecxz
or
jno
adc
shlb
inc
orb
std
fs
icebp
adcl
pushf
inc
movsb
xchg
mov
jg
jg
pop
push
or
mov
inc
add
imul
or
arpl
adc
cli
sbb
mov
cmpb
stos
les
jo
jnp
dec
jb
sbb
mov
adc
mov
std
cld
lods
orl
xor
dec
test
sbb
mov
xor
pop
jl
xchg
int3
pop
daa
push
mov
mov
loopne
daa
adcl
push
incl
push
lcall
push
dec
push
xor
mov
arpl
enter
bound
push
sub
add
das
mov
or
jnp
shrl
add
jbe
xchg
mov
push
jmp
fsubs
dec
imul
mov
push
push
arpl
sub
pminsw
inc
cmp
sbb
roll
insb
in
in
leave
fucomp
shlb
aaa
jmp
jg
rorb
inc
sbb
or
rol
adc
lret
dec
mov
sbb
add
and
popa
dec
push
adc
xor
loope
sbb
inc
icebp
dec
adc
mov
cmpsl
jg
out
rorb
cmp
ljmp
movsl
or
sbb
stos
dec
and
fdivs
add
out
insl
in
dec
arpl
in
push
jno
push
test
fwait
add
push
cld
repnz
shll
push
pop
xlat
push
mov
pusha
lock
pop
fwait
loope
stc
insl
ss
push
sub
jecxz
inc
inc
add
fwait
arpl
jg
leave
adcl
pop
nop
lret
hlt
addb
cmc
aaa
scas
clc
sarl
inc
lods
inc
in
les
pop
or
inc
int
outsb
mov
sbb
push
jge
xor
js
adc
jge
xor
sbb
je
les
mul
push
pop
push
pop
decl
mov
aam
int3
sti
incl
imul
jge
cmp
cmpb
push
dec
mov
or
sbb
pop
add
aad
mov
ljmp
inc
stc
repz
call
addr16
xchg
sbb
fdivrs
jns
push
push
insl
cwtl
jno
ja
ror
jmp
sub
movsb
dec
enter
cmp
je
adc
filds
rcrl
stos
jns
dec
out
pop
and
xchg
dec
mov
std
dec
daa
jo
jb
hlt
cmp
xchg
adc
jg
das
dec
inc
popf
loopne
add
imul
call
push
mov
pop
pop
arpl
sbb
xchg
fidivs
sbb
paddb
in
cmc
cmpsl
or
dec
push
add
push
mov
sahf
dec
fwait
hlt
faddl
push
push
lock
pop
es
ret
mov
stc
jno
cmp
lods
jne
sbb
add
cmp
les
lahf
sbb
iret
or
sbb
divb
mov
dec
add
cmp
aas
movsb
sbb
mov
cmp
rorl
xor
aad
mov
inc
lock
dec
push
fdivr
jmp
mov
mov
or
nop
cmp
adc
addr16
push
jp
ljmp
lea
enter
and
mov
cltd
push
jl
fwait
or
loope
cwtl
mov
xor
adc
leave
and
pop
fsubrl
std
cli
and
xor
or
out
je
shl
lahf
inc
scas
ret
xlat
mov
add
mov
inc
test
fisubrs
shll
aad
xor
pop
call
repz
imulb
jne
cs
aad
into
aad
test
mov
fdivrl
or
and
xorb
clc
push
xor
loopne
lods
or
mov
cmpsl
mov
daa
mov
push
mov
out
xor
adc
or
and
mov
addb
dec
int
and
xchg
movsb
shl
sub
shl
and
dec
push
inc
adc
mulb
lock
jg
dec
enter
pop
stos
jno
cmp
cltd
fisubrs
mov
add
or
push
sbb
imul
cmp
rcrl
mov
sub
shl
sub
push
mov
and
sbb
push
mov
pushl
es
push
popa
aam
and
xor
dec
pusha
jge
jb
jo
pop
jle
sub
rcrb
mov
cmpl
mov
xor
arpl
js
int
outsb
ret
xchg
sbb
adc
and
nop
dec
mov
data16
jge
popl
jns
movsl
push
or
mov
mov
iret
movsl
das
jo
in
mov
fadds
mov
dec
jl
cmp
adc
mov
sahf
fwait
cmp
jno
stos
xor
ficomps
push
cmp
jno
cmpl
inc
loope
xor
stos
dec
adc
rcrb
jne
pop
ror
in
jns
jns
and
add
sbb
jmp
xor
stos
inc
lock
or
pop
loop
cltd
imul
mov
sub
dec
sbb
lcall
daa
inc
lods
push
or
inc
add
xor
cmpl
cmp
lret
orb
out
and
dec
ja
dec
cmp
jl
jae
mov
pop
and
xor
repz
or
add
dec
sbb
or
fwait
jno
lock
pop
xchg
arpl
pop
lock
mov
mov
insl
and
mov
pop
shrb
jmp
js
sub
mov
pusha
add
mov
jb
shll
push
inc
mov
inc
fisubrl
movl
push
mov
jbe
pop
jmp
inc
add
cmp
lods
clc
inc
or
sbbl
jne
inc
repz
inc
xor
jae
int3
popf
sarb
xor
cmp
shrb
stos
in
xchg
xor
cld
sahf
dec
ret
xor
dec
push
bound
dec
and
xlat
int3
jl
adc
aad
and
sub
sub
cmp
in
popa
pop
inc
dec
xchg
cmc
hlt
push
test
lahf
test
cmp
loopne
jo
xchg
ds
pop
cwtl
test
ds
in
gs
enter
test
ja
loope
into
addb
frstor
fdivs
xcrypt-ofb
cmpsl
ljmp
mov
icebp
inc
jmp
cmp
es
and
movsl
lret
nop
lds
mull
ja
test
add
das
xor
data16
pop
test
scas
ficomps
popa
cwtl
adc
in
movsb
cld
int
xchg
rclb
adc
ja
adc
packssdw
gs
stos
imul
cwtl
cmc
fwait
mov
mov
loope,pt
or
in
sub
loopne
adc
jne
mov
push
cmp
pop
or
cld
pop
xlat
add
sub
movsl
xor
insb
sub
es
cmc
rcrb
popf
cmp
rcrb
pusha
roll
ret
shll
sub
dec
out
sahf
mov
jge
push
sahf
xchg
mov
mov
sub
mov
xorl
xchg
jns
pop
xor
movzbl
jle
jns
adc
pop
xor
sub
cmp
inc
bound
test
push
pop
mov
push
in
mov
daa
je
add
cwtl
popf
and
mov
aam
adc
add
jle
call
xorl
imul
push
cmp
xor
daa
or
sbb
jecxz
ja
jne
sbb
ficompl
in
iret
or
and
jl
pop
pop
icebp
adcb
mov
add
cli
setge
mov
pop
cmp
pop
dec
xchg
ja
std
arpl
ljmp
sarl
push
aad
out
je
cltd
in
push
shll
sbb
jle
xlat
out
sub
fstpl
jg
add
aam
inc
lock
jo
and
out
movsb
pop
or
mov
push
push
lea
shll
enter
push
test
fsubl
sub
movb
push
or
sbb
fcomip
or
sti
daa
inc
jae
dec
add
test
popf
stos
xor
negb
and
sub
movsb
in
push
call
push
mov
pop
ret
shll
sbb
pop
mov
mov
or
add
arpl
cli
push
sti
icebp
mov
movsb
adc
iret
or
push
add
sar
xor
dec
adc
inc
xor
xchg
ja
test
pushf
outsb
ret
push
lea
mov
lcall
insb
adc
push
cmp
std
jo
add
cmp
shrl
jmp
push
mov
out
lcall
daa
dec
std
ds
or
fsqrt
jo
sbb
mov
loope
xchg
or
jne
js
lcall
dec
cmp
xchg
jg
or
mov
bound
sarb
outsb
pop
xor
ja
sub
mov
pop
outsl
push
and
das
and
in
bound
sub
mov
cmpsl
sbb
dec
mov
add
cmp
iret
repz
int
ja
and
cmpsb
xchg
mov
xchg
cmp
push
jnp
imul
push
aad
pop
mov
sub
scas
sahf
lods
fsubrl
arpl
push
pop
push
out
icebp
repnz
les
cli
mov
or
sub
push
add
and
mov
shrb
movsl
unpcklps
mov
adc
add
add
ret
test
pop
fdivrl
cmpsl
ja
push
adc
test
cmp
mov
sub
jne
adc
jg
add
out
leave
inc
xor
jmp
xor
call
decb
mov
mov
movl
movl
out
dec
add
cltd
leave
stc
mov
mov
jg
push
cmc
call
arpl
movsl
xchg
xchg
mov
sar
add
inc
syscall
jle
ret
into
and
cmpsl
xor
dec
icebp
dec
dec
pop
or
lods
ret
test
sbb
pop
shrl
and
inc
xchg
movb
scas
hlt
cmc
xor
mov
cmp
mov
xor
aam
push
adc
adc
xchg
mov
mov
pop
and
xchg
inc
jns
and
jmp
outsl
clc
loop
lcall
pop
lea
sqrtps
inc
jl
call
inc
dec
sbb
sbb
pop
mov
clc
push
cwtl
and
jmp
inc
xchg
ret
sti
or
les
cmp
mov
jmp
cwtl
in
out
adc
addb
pop
aam
push
repz
lods
xchg
lods
insb
xchg
mov
or
dec
arpl
push
mov
ss
pop
call
adc
or
or
enter
push
sbb
sub
sbb
in
jecxz
stos
ficomps
cmpsl
mov
scas
xchg
adc
sub
loopne
xchg
hlt
call
pop
xlat
mov
and
mov
pushf
and
mov
cmpsb
aam
mov
sbb
rorl
lods
jbe
fmull
dec
adc
inc
ret
mov
xchg
movsb
dec
arpl
shlb
ljmp
sbbb
push
sub
incb
test
sbbl
cmpsl
ficoml
out
les
pusha
sbb
ds
dec
pop
push
call
jg
ret
pushf
adc
leave
adcl
dec
mov
and
aad
xor
mov
add
roll
insl
pop
mov
shl
addl
negb
mov
and
rcll
pop
push
ficomps
and
repz
mov
pushf
fwait
dec
jg
inc
cwtl
xchg
mov
add
nop
mov
mov
adc
push
pop
enter
data16
data16
dec
loope
mov
and
imul
lahf
mov
rcll
test
adc
sub
inc
add
add
movsl
loop
dec
cmp
ret
call
and
add
sub
mov
jecxz
jge
repnz
adc
paddw
enter
jo
and
clc
xor
push
f2xm1
push
adc
loop
lods
cmp
push
push
adc
sti
mov
std
insl
jl
shll
xchg
and
shl
and
cld
aas
or
les
shll
nop
test
loopne
cltd
lods
out
call
fiadds
inc
sub
shlb
hlt
cvtpi2ps
xchg
pushf
or
scas
shlb
outsb
pop
pop
cmpsl
ljmp
cs
mov
shr
lahf
cmp
and
dec
ja
xchg
push
popa
out
sub
inc
fwait
pcmpgtd
aas
dec
mov
pop
cmp
sar
ljmp
and
loope
add
push
dec
pop
pop
adc
jns
adc
sbb
cld
xor
xor
aam
xor
push
loope
inc
xlat
cmpsl
scas
loopne
test
repnz
push
adc
inc
inc
xor
inc
pop
jmp
and
hlt
inc
mov
sub
pop
mov
popf
cs
push
aam
cmp
popa
add
or
jg
push
jne
sbbb
add
cmc
sbb
xor
mov
test
xchg
mov
add
loope
inc
jb
mov
out
add
dec
cltd
fistpll
push
sbb
stc
imul
or
cld
test
mov
or
shl
das
jno
cmpsl
pop
pop
add
cvttps2pi
inc
enter
push
bound
cld
xchg
add
hlt
push
movsb
xor
mov
mov
push
les
xchg
lock
or
lock
rcrb
inc
cld
cmp
xchg
inc
popl
mov
sti
test
mov
aam
hlt
mov
sub
mov
sbb
inc
lret
pop
or
pop
sub
push
fadds
out
inc
dec
mov
sub
adc
adc
inc
mov
xor
mov
dec
adc
mov
dec
fidivs
inc
out
push
cld
xor
movsb
fs
pop
sbb
xor
mov
and
xorl
inc
shlb
pop
lods
dec
jnp
mov
loopne
popa
xor
movsb
xchg
out
lret
jno
out
lret
movsb
cmp
call
cmpsl
cmp
pop
and
pop
lock
and
pusha
leave
jecxz
add
adcb
mov
xor
pop
sub
out
test
inc
jp
es
loop
xchg
cwtl
push
mov
push
inc
cmpb
mov
test
jbe
adc
add
sub
or
int3
cli
mov
sbb
xchg
xchg
inc
cmpl
out
aad
xor
mov
mov
pop
pop
sub
sbb
cmpsl
out
es
jl
sbb
bound
cmp
shl
mov
lret
mov
out
sbb
sbb
cli
test
filds
sub
cmp
aas
aas
push
outsb
and
push
jecxz
pusha
cmpsl
mov
inc
cs
or
cltd
or
stc
mov
xchg
mov
subl
jno
les
ret
inc
movsl
cmp
mov
add
mov
jb
adc
scas
pop
adc
pop
lods
mov
nop
mov
jno
inc
jle
nop
sub
int
and
jo
test
test
sahf
aad
jmp
lea
cmc
lock
std
shrb
dec
clc
je
adc
jno
stc
cmp
mov
insb
out
aaa
addr16
shl
aam
push
lcall
cmpsl
sub
and
mov
jmp
popf
stc
cli
add
rcl
inc
jno
aas
inc
mov
mov
jne
shrb
mov
lahf
push
mov
and
cmp
sub
fs
pop
in
or
mov
ljmp
and
or
xor
fsubs
sub
xor
push
lret
outsl
adc
dec
jl
add
or
inc
mov
test
push
aam
jns
jecxz
sub
test
xor
addb
push
dec
dec
adc
sbb
mov
std
outsl
jl
dec
mov
mov
cmc
add
cli
cs
cwtl
hlt
shlb
push
adc
or
pop
enter
pop
js
xchg
or
mov
xlat
sbb
sub
popa
mov
bound
stc
push
aam
arpl
pop
xchg
cmc
mov
in
rcrl
adc
mov
pop
xchg
mov
xor
hlt
imul
es
jnp
sbb
fidivl
pushw
loope
or
pop
imul
popf
sbb
mov
sbb
xor
hlt
pusha
repz
sbb
lods
sahf
mov
jno
scas
mov
stc
cld
dec
loop
hlt
mov
andb
test
jge
fisttps
xchg
out
jae
or
movsb
popf
mov
jns
rorl
ficoms
mov
pop
inc
xchg
add
clc
loop
cld
inc
out
mov
ret
sbb
push
test
or
ret
adc
daa
mov
cmp
sub
mov
mov
test
stc
loope
pusha
ret
out
push
dec
sbb
addr16
mov
mov
xor
cltd
and
lcall
xchg
push
daa
dec
cmp
adc
lock
hlt
xor
scas
sbb
ljmp
push
nopl
rcr
movsb
in
aam
or
cmc
sbb
xlat
pop
movsl
jno
leave
dec
cmp
add
or
xor
mov
xor
loopne
pusha
inc
fidivrs
cmp
movsb
dec
jbe
push
test
pop
loop
sbb
push
imul
mov
pop
inc
lods
jge
adcb
jle
mov
add
dec
sbb
or
cmpb
mov
fadds
in
fs
rcll
aas
push
xor
lods
dec
mov
aad
push
gs
jne
push
dec
leave
ja
jne,pn
jecxz
pop
test
es
lods
test
or
adc
std
or
adc
and
addb
js
adc
nop
push
lret
rcrl
ljmp
push
push
jmp
in
sbb
imul
inc
pusha
mov
movsl
mov
pop
arpl
stos
sub
xor
or
icebp
clc
rolb
push
sub
push
add
add
adc
and
adc
shll
popa
rcr
add
adcl
lret
xor
xchg
adc
repnz
push
lcall
lcall
lea
push
pop
mov
ffreep
dec
shlb
inc
mov
out
xor
mov
std
loop
cmc
test
scas
inc
mov
imul
packsswb
push
dec
and
and
pop
cmpsl
les
mov
sub
je
jo
fadds
lea
pop
stos
test
pop
dec
and
push
lret
mov
dec
cmp
pop
mov
shlb
idivb
or
pop
in
mov
rcrb
test
scas
rorl
jne
mov
dec
enter
cwtl
adc
imul
je
into
mov
sbb
xchg
jb
mov
add
pop
and
adc
scas
jl
dec
imull
fcomps
add
decl
loope
incb
xor
adc
nop
push
or
sbb
push
sub
nop
xchg
out
inc
addl
pop
xchg
pop
lock
xlat
jp
add
sbbl
pushf
nop
dec
es
lea
scas
cmp
lock
test
mov
int
cli
scas
or
xor
insl
in
xor
ljmp
sbb
or
mov
xchg
jbe
xor
test
jle
rcrb
daa
out
lcall
jbe
cmp
rclb
or
cmp
mov
xchg
bound
push
call
lds
ds
adc
adc
test
push
imul
pop
jo
cltd
popf
inc
ret
inc
inc
dec
stos
mov
adc
inc
bound
pop
inc
repz
xorl
repz
enter
mov
pop
xchg
mov
bound
sub
rcrb
jg
nop
test
in
fcomp
xor
lods
outsl
add
sub
push
or
sar
xchg
imulb
cmp
stos
mov
test
add
xorl
leave
jle
xchg
lods
ds
psubsb
mov
fmull
xor
dec
nop
mov
cld
add
ss
push
add
stos
push
nop
cmp
mov
xchg
cli
leave
repz
mov
add
mov
jne
lock
adc
xchg
inc
cmpsl
sbb
sarl
inc
out
lret
stc
adc
loope
stos
in
and
xor
inc
dec
lret
inc
adc
lret
test
loope
pusha
push
cmp
push
add
pop
xchg
add
mov
clc
jp
cld
dec
pop
es
clc
out
addr16
imul
pop
cmp
jecxz
outsl
scas
es
push
push
sbb
hlt
jmp
lds
jmp
and
in
popf
inc
lods
xchg
cli
test
adc
outsb
mov
and
stos
sti
sub
nop
sti
xchg
inc
add
add
out
xor
xor
in
dec
jae
add
mov
or
inc
outsb
jmp
xchg
pop
aam
jne
or
push
add
mov
xchg
sub
add
xchg
fcomps
jo
dec
sub
dec
add
and
mov
jno
std
mov
or
lret
inc
rorb
and
gs
ret
aas
pop
in
inc
rcrl
jne
ss
and
lcall
add
jno
and
xor
adc
outsb
aaa
cmp
andb
popa
repz
jp
mov
push
shll
inc
jmp
adc
jl
mov
lods
fsubl
cld
scas
aaa
push
mov
cmp
jp
loop
add
mov
pop
xchg
adc
jl
jg
sarb
aas
cmp
sbbl
and
popf
adc
jne
pop
adc
daa
sbb
out
fs
mov
and
jp
pop
push
sahf
mov
jne
sub
dec
test
lahf
or
jne
rclb
and
jl
push
cwtl
in
jbe
leave
mov
adc
push
sub
mov
andps
adc
or
sub
out
rcr
push
cmp
xchg
sbbb
inc
clc
dec
add
loopne
fs
and
add
or
cld
test
xor
rolb
pop
and
hlt
add
movsb
sti
or
dec
and
aaa
sub
popa
jl
sbb
fnstsw
cli
je
inc
and
lds
push
jmp
jno
aaa
push
lcall
adc
pop
jae
fists
inc
sbb
sub
inc
mov
lret
mov
add
cmp
jne
mov
sbb
aam
xchg
jl
enter
iret
icebp
nop
movsb
push
pop
cmp
xchg
ljmp
inc
inc
and
or
mov
cs
jle
mov
cmpsb
js
inc
push
nop
stos
les
stc
sbb
cli
jl
cmp
push
ja
add
les
mov
inc
loop
push
test
lds
rcll
repz
xor
jg
mov
pop
xor
add
adc
xchg
pop
rorb
dec
mov
jnp
dec
test
fs
cmp
mov
xchg
xchg
or
stc
push
arpl
rorl
aas
dec
and
nop
aas
pop
pop
in
ljmp
fdivr
push
cmp
out
dec
sbb
xor
sub
sub
cmpsb
pop
sarl
lahf
int
movsb
xchg
shll
push
pop
dec
bound
cmp
push
repnz
repnz
test
add
xchg
repnz
imul
jnp
test
nop
ja
cmp
pushf
mov
popa
mov
sbb
cmp
mov
out
xor
scas
aaa
int3
pop
aam
push
lds
jle
jge
andb
leave
or
clc
fwait
je
insl
stc
outsl
jmp
out
pusha
jmp
call
test
xchg
sbb
std
adc
roll
inc
add
loope
mov
aam
xor
nop
sbb
adc
test
dec
xchg
in
ss
jne
stc
cmpsl
pop
xchg
pop
mov
jae
sub
mov
sbb
rorb
movsl
pop
xchg
adc
inc
js
rol
push
inc
out
or
push
mov
push
fistpl
fwait
clc
popa
pop
scas
push
daa
inc
movsb
decl
jl
cmp
dec
sbb
sub
lods
push
mov
aad
out
mov
add
js
into
lret
cmp
lahf
push
mov
or
xor
push
in
jb
jns
orb
adc
inc
xor
js
fildl
push
call
in
push
sub
mov
add
lret
cs
and
lret
loope
mov
push
scas
sub
mov
cwtl
test
sbb
fcomip
and
sbb
mov
cli
adc
adc
cmp
scas
inc
lods
jb
jmp
ret
mov
and
loop
xchg
adc
adc
inc
sti
xor
pop
xor
mov
adc
inc
in
daa
dec
jge
pop
dec
daa
mov
push
push
loope
xchg
xor
loope
rolb
stos
es
add
pop
and
orb
jne
dec
push
lds
lods
aas
push
imul
xchg
orl
push
leave
sub
inc
lods
ljmp
add
mov
in
lock
mov
std
adc
pop
mov
test
dec
lea
sbb
pcmpeqb
test
mov
jo
push
nop
or
in
cltd
inc
cmp
mov
enter
lret
lds
das
dec
lds
pop
data16
mov
pop
cli
push
inc
js
sub
out
sbbl
fcmovb
call
mov
sub
iret
or
mov
or
clc
mov
pop
in
stc
mov
daa
xor
shlb
inc
push
stos
adc
and
pop
pushf
outsb
dec
je
lods
les
pop
fwait
inc
popa
repnz
sub
sub
je
cmp
sub
aam
inc
fs
das
test
lret
xor
xchg
sti
dec
sbb
insl
out
adc
ret
movsb
cli
pop
test
das
and
out
dec
inc
push
xor
push
mov
clc
jne
mov
adc
xor
into
test
and
xchg
cli
cmpb
ja
pop
xchg
xchg
call
mov
xor
aas
push
std
push
jmp
bound
fwait
sub
push
add
push
cmc
adc
cltd
shl
inc
push
add
push
jne
stos
test
mov
adc
cmp
addb
push
test
iret
push
call
clc
pop
xchg
sbb
mov
sbb
inc
xlat
scas
test
std
or
data16
sbb
cli
push
jb
dec
dec
adc
ljmp
lods
xor
xchg
clc
mov
sub
pop
jmp
decb
stos
xchg
aad
mov
push
dec
jae
push
adc
push
clc
xor
and
shlb
pushf
mov
in
fidivrs
push
lds
arpl
dec
popl
mov
out
dec
stos
mov
nop
dec
sti
pop
mov
mov
sbb
cmp
sbb
lods
jns
icebp
pusha
sub
dec
loop
push
adc
dec
outsb
insl
fs
call
adc
mov
push
xor
pop
hlt
push
cmpsb
mov
loop
jmp
inc
pop
shlb
sbb
ja
xor
sub
jp
cmp
mov
loope
lcall
mov
xchg
xchg
out
pop
push
or
loopne
and
sub
or
push
in
inc
in
mov
ds
lds
les
dec
pop
push
pop
add
fst
xchg
rorl
test
test
cmp
and
dec
adc
arpl
aam
cmpb
pop
adc
lea
add
jecxz
add
mov
es
rcrb
mov
outsl
or
lock
cwtl
adc
sub
mov
inc
aaa
cmc
pop
sahf
or
lret
inc
lea
cmpl
mov
sbb
adc
aam
out
inc
inc
sbb
push
test
dec
mov
out
dec
sbb
cmc
fcomps
shll
pop
dec
push
adc
and
loope
cmp
in
or
mov
and
push
sub
in
fldenv
jmp
adcl
mov
mov
fcomi
loope
adc
inc
mov
loope
data16
mov
test
add
aam
sbb
mov
sub
enter
aam
dec
ror
sub
mov
pop
imul
add
sbb
mov
or
sbb
inc
xor
faddl
aas
adc
dec
subb
loop
pop
jle
insl
pinsrw
popa
adc
dec
dec
pop
rorb
cld
jmp
push
test
mov
loope
idiv
adc
push
jmp
push
out
shll
imul
in
adc
jg
sbb
or
xchg
scas
imul
dec
imul
das
sbb
mov
repz
add
lahf
in
or
movsl
mov
xchg
lcall
xlat
jg
add
repnz
mov
loopne
pop
xchg
pusha
mov
iret
cwtl
call
adc
and
idivl
test
adc
in
sbb
vpshuflw
call
rol
adc
jle
mov
ret
fs
arpl
hlt
xchg
pop
adc
sub
push
or
je
mov
into
xchg
jno
xchg
inc
repnz
call
xchg
je
fwait
mov
and
call
or
int
lahf
sub
sub
shll
sbb
pushf
xchg
aad
fistpl
stc
pop
leave
cmp
insl
push
adc
pop
xor
jg
push
mov
adc
hlt
daa
cs
inc
add
dec
mov
mov
sub
jb
and
add
push
ds
cltd
xchg
or
daa
ja
loope
ja
aas
out
jge
loope
jle
test
repnz
inc
ret
xchg
push
adcb
mov
push
cmp
sbb
push
sub
xchg
rolb
inc
shlb
dec
test
js
and
cmpsb
lcall
nop
icebp
mov
add
fs
and
ss
inc
push
aad
inc
test
fisubs
loopne
adc
jp
inc
call
in
push
xchg
adc
outsb
call
mov
mov
cmc
inc
add
mov
jle
mov
mov
addb
stos
dec
loopne
fldt
push
xchg
dec
lcall
sub
mov
cmpsb
cwtl
mov
rclb
clc
cltd
out
gs
mov
cwtl
or
shlb
push
jmp
hlt
imul
cmp
sub
xchg
add
shrb
lret
hlt
mov
mov
in
jge
loope
adc
data16
adc
pop
sbb
xor
rolb
mov
cmp
inc
mov
loope
and
mov
mov
daa
push
jb
test
add
mov
cli
add
push
loopne
sub
imul
lea
roll
and
mov
shrl
xchg
movsl
lods
test
and
and
lret
push
sub
dec
dec
sbb
inc
sub
xchg
xchg
out
and
xor
or
and
lret
push
cs
jnp
pushf
pushf
test
daa
dec
popl
decb
jle
adc
leave
cltd
add
popl
nop
scas
sbb
mov
xchg
outsb
inc
dec
adc
or
stos
lahf
cmpsl
pop
es
and
lcall
mov
inc
push
in
test
fstl
repnz
xchg
inc
adc
mov
adc
and
lods
rcll
sub
cmp
pushf
sub
out
loope
xchg
sarb
mov
gs
xchg
lods
push
shrl
pop
push
movsl
and
shll
or
nop
dec
adc
outsl
cmpl
iret
jo
add
std
inc
fldl
jecxz
sti
xchg
jno
push
cmp
mov
pop
add
dec
popa
push
add
add
push
and
in
inc
pop
dec
inc
pop
in
and
pusha
push
mov
jns
mov
xor
adcb
es
jmp
cmp
pop
and
ret
dec
insb
and
dec
sub
add
xlat
test
or
jge
shr
movsb
mov
add
mov
xor
jno
add
scas
vpsrlw
aam
jno
mov
adc
inc
repz
sub
in
test
cwtl
dec
mov
sub
fisubrs
pop
mov
inc
push
or
dec
and
lret
add
inc
push
orl
fdiv
ljmp
rcr
mov
mov
xor
sub
add
sub
mov
outsl
or
lcall
jmp
mov
in
sub
xchg
adc
out
or
push
ret
adcb
cmpsb
mov
add
movsl
pop
cmpsl
cmp
mov
fwait
inc
xor
cmp
aaa
mov
test
hlt
sub
xor
cld
inc
inc
std
jmp
push
push
pop
test
pop
in
mov
add
mov
or
movsl
add
jbe
icebp
int3
aas
inc
pushf
jmp
movsb
dec
and
fs
cltd
js
data16
pusha
fbld
cltd
lods
and
stos
mov
sub
cmp
add
mov
jl
adc
xor
mov
push
fs
hlt
dec
in
ljmp
adc
push
xchg
aad
and
shr
pop
mov
jno
push
sub
cli
pusha
out
or
inc
pop
xchg
arpl
mov
js
dec
pop
notb
or
sbb
jmp
dec
daa
gs
add
lcall
cmp
std
in
xchg
ljmp
daa
sar
jge
add
jbe
repnz
xor
stc
push
inc
aad
and
dec
pushf
hlt
out
imulb
xchg
pop
dec
mov
cmc
stos
inc
nop
shl
cltd
out
xor
or
js
out
std
dec
jg
data16
icebp
xchg
les
pop
mov
icebp
push
rcll
cltd
and
fsubs
add
outsl
dec
jno
sarb
jl
pop
aaa
pop
sbb
dec
cmpl
mov
pop
push
stos
enter
call
sbb
jg
je
jne
xchg
nop
lods
addr16
jns
push
pop
ja
dec
push
faddp
cli
loope
out
mov
sub
stos
fsubrl
out
mov
das
mov
rcll
mov
jl
jp
and
int3
mov
cld
xorl
jno
adc
inc
dec
inc
lcall
lods
xlat
cmp
inc
addr16
mov
aas
ret
sub
jp
rcll
mov
or
insb
add
push
data16
aad
movsb
enter
adc
add
xor
sti
push
nop
cwtl
int3
add
xor
test
inc
fs
outsl
dec
xorl
pop
add
inc
gs
inc
sub
scas
adc
push
pop
jns
dec
add
movsb
out
xor
lahf
xchg
mov
inc
mov
fimull
shll
incb
or
cltd
adc
movsl
push
jmp
cmp
sub
bsf
pushf
bound
lock
in
cmp
ja
cwtl
pop
xor
scas
out
and
dec
jecxz
xchg
sub
testb
cmp
ficoml
jne
mov
cmovbe
jp
fcompl
fldcw
or
adc
lds
out
nop
ss
mov
cmpsl
or
and
pop
inc
xor
mov
push
sti
inc
mulb
aaa
push
sbb
cltd
jo
imul
xchg
cwtl
nop
inc
mov
iret
xor
std
inc
imul
data16
out
nop
fucom
jbe
ret
cmpl
mov
mov
test
add
xor
inc
pop
test
or
push
lret
fisubl
rorb
inc
xchg
jne
mov
adc
in
mov
je
sbb
imul
and
loop
push
push
cmp
cmpsl
inc
fdivrs
clc
pop
out
ret
in
mov
lahf
pop
pop
ficomps
dec
jecxz
mov
mov
cmpsl
shlb
and
sbb
add
inc
insl
aad
dec
stc
test
test
sub
adc
and
jns
cld
lods
pop
shlb
nop
cmpsl
aad
adc
stos
sbb
or
das
std
cmpl
jmp
jge
cmpsl
xchg
lea
push
lods
out
in
pop
pop
adc
sbb
and
add
push
jae
mov
push
popa
rolb
sbb
fmull
unpcklps
mov
jns
push
or
popa
fdiv
inc
cld
lret
sbb
dec
stos
cmp
push
aad
sub
mov
inc
dec
xchg
test
js
movsl
inc
outsb
push
jg
sti
std
inc
int
cmp
leave
mov
push
mov
neg
cld
jns
loope
or
inc
jbe
push
orb
mov
jmp
mov
sbbb
sbb
adc
aas
in
pop
shufps
stos
push
leave
or
cli
pop
adc
adc
push
add
ljmp
inc
sub
jp
sbb
adc
inc
outsl
movsl
or
jecxz
rclb
into
cmc
inc
sub
cwtl
or
xor
inc
jl
sbb
xor
adc
xor
mov
js
loopne
jg
hlt
ret
push
in
lret
and
ds
icebp
mov
mov
std
jnp
sbb
lock
pop
jbe
or
mov
push
bnd
pop
pop
lea
subl
mov
cs
lahf
sbb
call
jmp
mov
dec
push
xchg
adc
adc
inc
ret
fiaddl
adc
cli
jmp
and
lock
repz
push
das
std
and
and
xchg
mov
xor
shr
mov
sbb
jo
mov
dec
cmc
lcall
out
dec
dec
inc
shl
mov
jp
jmp
xor
push
pop
inc
sbb
rcrl
add
mov
das
test
aas
push
imul
dec
jl
jmp
jmp
mov
mov
fnstsw
sbb
adcl
lahf
dec
pop
dec
push
mov
clc
add
pop
rcrl
in
loope
push
and
add
sti
js
jg
pusha
sbbb
jno
cmp
push
sub
push
std
ljmp
test
fidivrs
test
mov
or
pusha
iret
dec
sbb
adc
adc
dec
mov
mov
xchg
lcall
push
push
test
mov
cli
frstor
add
ret
std
adc
clc
fnstenv
orb
pop
insb
xchg
sahf
sub
inc
movsl
vpmacsswd
je
mov
fcoml
ret
inc
lods
std
cmp
and
push
mov
outsb
fildl
movsl
xor
pop
ret
inc
push
push
xor
mov
js
adc
mov
addps
das
rep
clc
xacquire
pop
xor
loopne
mov
dec
fcoms
dec
ret
pushl
arpl
inc
pop
push
add
cli
dec
add
ds
dec
push
test
add
fists
mov
push
js
movsb
ds
repnz
mov
mov
xchg
rcl
cld
out
push
cltd
lea
out
aaa
lods
out
cmpsl
rcr
jnp
insl
xorb
inc
and
inc
pop
mov
sbb
test
mov
hlt
repz
repnz
scas
dec
mov
xor
jle
push
cmpsb
rcl
cmpsb
andb
fistps
inc
aad
mov
scas
js
in
stos
jecxz
mov
jecxz
jle
add
cwtl
inc
or
mov
mov
sarb
xchg
sbb
inc
pusha
cmp
push
pop
test
loop
je
das
add
ja
ds
ret
test
xchg
inc
push
xor
sub
scas
pushf
sub
cmp
and
sub
subl
ds
aam
fisubs
addr16
xchg
add
mov
add
xor
jle
js
or
rcr
pop
sbb
mov
insl
push
mov
out
dec
ret
mov
lods
pop
mov
or
pushf
fcoms
testl
mov
clc
jo
rolb
jg
scas
jne
leave
xor
icebp
jge
jecxz
clc
mov
stos
jbe
inc
mov
push
outsl
pop
push
out
popa
xchg
popa
add
fistpll
dec
sbb
mov
scas
jl
mov
loopne
xchg
jae
or
mov
adc
inc
and
jb
add
lret
les
daa
in
icebp
das
les
xchg
ja
sub
pop
int
sub
cmp
xchg
in
nop
sub
mov
repz
leave
push
push
std
adc
stc
pop
popa
sbb
or
cli
stc
add
and
adc
jmp
inc
add
loope
sub
imul
adc
call
mov
sub
jnp
stos
dec
rcrl
sahf
gs
inc
bound
les
sbb
push
filds
lock
jnp
hlt
test
lahf
or
inc
add
xor
cmp
jbe
mov
and
fwait
inc
frstor
sbbl
sub
inc
adc
pop
cltd
sbb
xor
mov
or
mov
test
mov
cmp
inc
fyl2x
jg
insl
dec
incl
in
pop
rcl
inc
mov
cmpsl
bound
or
mov
pusha
ret
imul
test
pop
lods
lcall
jg
out
lcall
push
pop
lods
insl
mov
jge
mov
aas
inc
es
into
and
pop
lds
jle
lahf
sub
dec
dec
sbb
inc
fs
lods
aam
jmp
and
aas
xor
or
shrb
ret
xor
xchg
cmp
or
rorb
pop
insb
shll
enter
fucomi
cs
push
dec
pusha
or
test
inc
inc
out
lea
mov
xchg
adc
lahf
mov
xchg
fstl
push
inc
pop
adc
add
arpl
pop
in
adc
cmp
lea
into
mov
clc
and
push
sub
mov
inc
jb
test
and
shll
pop
jg
lcall
jge
ret
mov
out
mov
push
mov
sub
sbb
sub
aas
orb
imul
sahf
ret
hlt
pop
mov
xor
insb
mov
mov
jg
loope
xor
xchg
push
mov
or
out
dec
lret
ljmp
inc
mov
into
lea
add
jmp
stc
adc
push
jg
les
cld
mov
mov
cmp
or
push
sar
xchg
enter
lods
mov
pop
add
popf
loopne
mov
inc
pop
mov
sbb
add
int
and
and
and
jg
test
xchg
scas
mov
sarl
xchg
pop
jno
arpl
fists
sub
pusha
sbbl
cs
sahf
push
cmc
mov
dec
fdivl
and
cmp
xor
lahf
sub
or
add
aas
sbb
cvtps2pd
jne
inc
movsb
arpl
fsts
out
out
cmp
mov
jmp
cmc
lahf
or
xor
cmp
sahf
inc
std
ljmp
std
sub
das
pop
cmp
inc
leave
lods
pop
mov
inc
mov
ds
sub
cmp
mov
and
sbbl
mov
push
loop
xchg
sti
inc
mov
add
and
mov
movsb
pop
dec
sub
dec
adc
xor
mov
push
dec
ss
clc
pop
or
mov
outsb
in
mull
ds
jns
jnp
insl
mov
push
rorl
mov
push
sub
sar
mov
iret
test
inc
dec
cmp
inc
adc
cmp
hlt
sti
shlb
jo
stos
fucomp
lods
sahf
mov
and
add
adc
mov
inc
cmp
push
adc
cmpsl
popa
cmp
adc
xchg
mov
sub
scas
fisttps
pop
inc
pushf
xor
jmp
emms
push
stos
inc
inc
dec
adc
mov
stos
pop
pop
fildl
pop
xchg
push
and
nop
stc
add
pop
int3
clc
std
int3
cmp
add
mov
test
bound
cmp
or
sahf
dec
les
add
or
xor
ret
aam
xchg
fiaddl
fstpl
aas
sahf
adc
add
iret
mov
add
inc
jecxz
imul
mov
add
or
out
rclb
xchg
and
inc
movsb
pop
popa
mov
fwait
jp
nop
jge
mov
dec
push
lods
mov
push
add
negl
repnz
ret
jae
lods
add
mov
mov
dec
sub
xor
or
pop
cs
mul
fisubs
iret
sbb
sti
sub
loopne
cld
xchg
dec
mov
jae
jbe
aaa
pop
jle
cltd
cmc
aam
cmp
mov
pop
inc
data16
jmp
add
out
adc
dec
jno
jg
es
rcl
lock
into
sub
mov
add
rcll
rolb
cmc
jg
inc
imul
push
mov
jl
std
xchg
fimuls
repz
mov
xchg
ss
mov
xchg
inc
aas
out
test
shrl
outsl
lahf
xchg
mov
orb
fistpll
scas
push
out
out
pop
dec
pop
cmp
mov
movsl
and
xchg
jb
sti
pop
add
adc
sbb
stos
mov
mov
adc
cmp
adc
adc
lcall
pop
add
jl
imull
mov
dec
adc
fidivs
pop
sbb
fwait
add
inc
push
cli
sub
mov
add
cmc
incb
enter
push
and
aam
or
jp
inc
dec
mov
pop
outsl
mov
sbbl
xchg
adc
push
sub
and
es
repnz
pop
dec
pop
orb
pop
es
hlt
add
inc
xor
jmp
jo
mov
push
adc
clts
xor
xchg
adc
lea
jle
jmp
aaa
mov
mov
adc
and
sbb
imul
push
leave
ficompl
shl
xchg
ds
in
aaa
push
shr
jecxz
mov
or
enter
pushf
pop
aad
cmp
xchg
int3
cmp
lret
sbb
and
mov
pop
test
jbe
mov
push
add
jl
mov
adc
dec
pop
ret
fwait
test
in
mov
jae
shl
and
push
repz
sbbl
xchg
pushf
aas
mov
int
add
jmp
pop
or
cwtl
cmp
fwait
push
mov
mov
das
mov
mov
mov
push
mov
test
jno
sahf
scas
sbb
into
cltd
jl
sbb
mov
negl
mov
sar
pop
add
mov
pop
inc
nop
xor
ss
std
pop
jecxz
dec
out
cs
pop
daa
mov
or
aam
adcb
xor
leave
shrb
lahf
jns
out
xor
cli
dec
mov
xchg
gs
mov
repz
andl
pop
pop
mov
adc
push
mov
adc
mov
inc
imul
ret
cmp
jp
adc
das
and
xchg
xchg
jbe
lods
push
or
add
sub
shll
popa
test
popa
fbld
mov
daa
ret
or
and
fnstsw
cmpsb
mov
mov
push
and
movsb
or
mov
test
in
dec
loop
mov
rcl
xor
add
inc
and
test
sub
jbe
jbe
or
sub
cs
xor
mov
jae
sub
ret
test
xchg
ljmp
xor
imul
sbb
shlb
cmp
add
mov
sbb
cmc
pop
mov
aad
push
test
jbe
pop
popa
clc
add
dec
ret
shlb
ljmp
mov
pop
xor
mov
push
mov
add
int
inc
xor
mov
cmp
cli
adc
push
cmp
lds
iret
out
mov
inc
add
xchg
inc
pop
jns
imul
test
mov
sbb
cmp
in
iret
adc
sub
lods
and
xchg
mov
mov
and
sub
push
and
adc
pop
daa
pop
mov
cmp
jmp
mov
shrl
mov
popl
pop
les
ret
sbbl
mov
fxtract
repnz
rcrb
mov
sub
pop
data16
inc
daa
sub
sti
xlat
scas
add
cmc
sbb
repz
lahf
xchg
stos
add
daa
push
dec
bound
imul
in
sarl
or
ret
mov
out
lods
js
add
dec
mov
jl
aas
mov
test
mov
xlat
mov
clc
jl
cli
cmpl
jne
dec
jg
rcrl
sub
movsl
clc
cmp
cmp
or
jmp
clc
test
lahf
fadds
imul
nop
nop
cli
push
imul
movsl
test
sub
ljmp
stos
mov
mov
mov
sub
add
ret
js
push
int
sub
mov
scas
rorl
dec
aaa
pop
dec
and
inc
popa
aad
dec
repnz
and
leave
xchg
les
setbe
je
movsb
cwtl
lahf
mov
sarb
fidivrs
add
adc
mov
nop
jp
stos
lock
addb
loopne
xorl
xchg
jbe
sbb
fstl
push
sub
dec
inc
sbb
push
arpl
stos
cltd
jmp
or
and
dec
pop
dec
jae
adc
add
ret
ret
jg
sbb
pusha
xchg
add
inc
cmc
dec
or
jno
dec
nop
pop
adc
xor
test
insl
mov
adc
cmp
sbb
lea
and
mov
cli
daa
iret
add
jg
jmp
js
dec
sahf
ds
enter
push
inc
cmpl
enter
xor
shl
add
out
sbb
mov
mov
nop
pushf
ret
lock
es
pop
cmp
repnz
shrl
lcall
cmc
sbb
xor
out
and
les
arpl
jle
add
xchg
add
adc
mov
out
jo
lds
lods
or
fisttps
test
lcall
push
xor
add
xlat
adc
adc
push
mov
jge
jmp
add
movzwl
jb
std
test
les
stos
sysexit
icebp
lock
sbb
mov
add
das
xchg
ret
and
int
rcll
sbbl
push
push
movsl
mov
or
test
fistl
mov
inc
jp
jns
punpckhwd
push
int
pop
cwtl
adc
pop
andl
pop
movl
mov
in
aam
sub
push
xlat
imul
imul
and
lret
sbb
aaa
adc
pop
xor
dec
sub
sub
out
or
iret
xor
adc
bound
sub
dec
ljmp
in
mov
daa
sub
test
pop
inc
sti
jo
xchg
lock
call
cwtl
jl
xor
cmc
cmp
xchg
push
cwtl
push
les
and
bt
pop
hlt
cwtl
into
movsb
popa
push
stos
movsb
dec
or
and
xor
loope
pop
bound
inc
cmpsl
std
xchg
pop
pop
dec
or
push
movsl
add
jle
or
shlb
loope
jne
push
add
sbb
jle
out
les
or
pop
jg
cs
adc
sub
repz
out
xchg
xor
cltd
mov
int
pusha
or
and
and
popf
aas
mov
leave
add
add
shrl
sub
jg
add
fs
mov
cld
test
sbb
lret
mov
sbb
les
or
pop
sbb
sub
test
flds
scas
or
push
xchg
xchg
out
cmp
mov
and
imul
incl
sub
add
push
sub
cmpsb
and
frstor
jno
sbb
jnp
leave
xchg
fildll
add
jmp
sti
test
push
fwait
das
jns
aas
cs
push
mov
inc
mov
or
and
repz
sbb
ljmp
cmp
movsl
mov
sbb
and
addr16
push
sub
xor
cld
subl
loop
mov
inc
lods
lds
push
adc
inc
xor
sub
push
ror
lock
dec
cli
pop
push
and
xchg
cmp
aaa
mov
jecxz
mov
outsl
mov
adc
pusha
inc
mov
incb
mov
scas
es
popa
in
mov
add
adc
lcall
dec
add
arpl
out
xor
xchg
scas
jl
mov
rorb
jecxz
or
cld
cwtl
jle
mov
rol
xchg
and
nop
or
andl
push
push
inc
mov
dec
add
mov
jbe
sbb
xor
dec
out
leave
fiaddl
loop
add
mov
ljmp
xchg
lock
das
mov
inc
fnstenv
or
add
das
sbbl
das
mov
das
outsb
loope
xor
aad
cmc
imul
or
and
fstpt
out
inc
insb
shl
pop
add
xor
add
mov
enter
hlt
pop
cmc
and
mov
mov
scas
decb
or
push
adc
ret
lcall
dec
cmpsl
add
xchg
cli
insl
pop
sbb
and
add
xor
xlat
cli
addr16
xor
push
outsb
mov
pop
dec
fdivl
push
out
xor
or
out
ret
jmp
inc
jmp
es
or
dec
test
cmp
scas
movsb
mov
int
or
jmp
lds
repnz
or
dec
call
add
cmc
jmp
add
jae
ljmp
xchg
stc
outsl
je
jl
aam
jbe
gs
pop
mov
push
fwait
les
inc
imul
and
adc
aad
outsl
add
or
mov
stos
stc
jg
loope
sbb
les
imul
orl
adc
cmp
inc
divl
mov
mov
sahf
and
jb
rcrb
int
std
mov
sub
shl
jge
les
inc
xor
dec
mov
mov
mov
outsl
test
sbb
dec
pop
sub
inc
outsl
jl,pn
xchg
out
popf
es
dec
sbbl
sahf
lods
inc
subb
pop
jle
orl
es
add
or
cmp
arpl
pop
adc
bound
mov
shll
lock
add
popa
inc
push
push
lods
ljmp
or
in
loopne
pop
mov
fistl
std
ret
mov
iret
jnp
outsl
pop
sbb
popf
mul
mov
orl
sar
ret
cs
mov
scas
fwait
pop
test
adc
xchg
adc
push
inc
loope
dec
dec
mov
test
inc
mov
clc
xor
jl
sub
icebp
and
or
cmp
in
fwait
jne
sbbl
inc
mov
cld
push
mov
add
jns
jns
aas
mov
mov
mov
push
add
and
xchg
idivl
stc
pop
pop
outsb
cwtl
sbb
add
dec
dec
cmp
mov
lods
jg
lret
jmp
and
lods
leave
pop
mov
inc
pop
inc
pop
sbb
test
orb
shrl
mov
mov
mov
mov
sbb
sbb
lds
shrl
stos
int
outsl
jno
ret
dec
or
insl
bound
mov
or
cmp
push
sbb
mov
sub
inc
cmpsb
add
mov
xor
xlat
add
and
cmp
mov
and
inc
inc
sbb
jns
inc
stos
and
add
jo
dec
jno
pop
inc
lock
and
sub
outsl
ret
ret
fs
arpl
inc
pop
lods
add
inc
out
xchg
add
mov
sbb
cld
aas
pop
dec
ret
rorl
sub
mov
jns
add
cmpsb
xlat
sbb
xchg
push
pop
push
ret
gs
adcb
mov
add
dec
sbb
add
je
jg
inc
addb
inc
adc
scas
add
xor
sub
lahf
pop
sub
fs
iret
pop
insl
jae
mov
lock
rcrl
test
loopne
call
ljmp
jecxz
out
mov
cli
push
shlb
or
lahf
test
les
sbb
loopne
inc
xchg
stos
test
push
mov
add
or
xchg
lea
lods
cmpsl
sarl
out
add
push
jmp
in
and
decb
dec
jg
pop
cmpl
pop
fisttpll
cmpl
test
cwtl
jne
pop
lahf
push
mov
xchg
int3
sbb
mov
outsb
shrb
pop
push
inc
or
mov
xchg
mov
inc
xor
ljmp
inc
aas
or
or
jle
lods
es
mov
push
inc
push
cwtl
sbb
add
sbb
pop
add
iret
mov
sahf
cs
mov
test
xlat
xchg
mov
cmp
mov
xchg
mov
xor
adc
sub
insl
les
daa
adc
mov
inc
add
pop
mov
pop
xor
sbbl
sbb
outsl
push
mov
or
xchg
lock
pop
pop
jl
sub
sub
fninit
add
pop
cmp
nop
jo
frstpm(287
add
add
aam
fsubrs
push
andb
mov
test
add
cmp
adc
cwtl
std
addr16
insb
inc
and
mov
mov
sbb
fs
mov
jge
sbb
es
inc
push
cmp
cs
inc
lret
dec
mov
or
push
sbb
sub
or
jo
cwtl
add
add
int3
mov
dec
fcmovne
xorl
out
adc
adcb
and
mov
mov
faddl
in
or
addb
out
mov
testb
dec
popl
lock
mov
cmc
jnp
stos
push
xor
push
xor
imul
dec
stc
sub
push
std
lahf
imul
and
gs
mov
rclb
fwait
cld
aad
mov
fnstsw
add
fwait
nop
fcomps
mov
clc
loop
or
decl
dec
test
cmp
aad
sub
por
sbb
sub
add
inc
or
insl
dec
imull
imul
xchg
and
mov
adc
daa
dec
fbstp
mov
lahf
daa
lock
arpl
iret
das
sbbb
sbb
jo
sub
xchg
mov
and
cmc
xor
adc
xchg
xchg
loope
or
dec
rorb
sti
stos
jp
or
cmp
cmp
xchg
sub
adc
mov
enter
lds
adc
mov
cmpsl
scas
icebp
shl
inc
push
dec
xlat
ret
sub
and
xor
sub
out
sbb
les
push
mov
dec
scas
or
cmp
int
orb
cltd
or
sub
add
mov
adc
or
cmp
roll
outsb
mov
cmpsl
jo
inc
adc
xchg
les
inc
jg
jl
incl
loope
cmp
adc
std
and
cs
pop
adc
and
unpcklps
loopne
cltd
cmp
mov
hlt
and
jge
dec
pop
mov
dec
lods
adc
insl
test
xchg
mov
dec
sub
cmp
jmp
jae
add
ss
loope
cmp
cmp
add
pop
in
arpl
xchg
xchg
fisttpl
aam
xor
adcb
jae
xor
cwtl
mov
and
scas
mov
lods
sbb
jae
cmp
add
xor
adc
pop
aaa
mov
popf
add
xchg
add
hlt
scas
sub
push
shrl
inc
mov
pop
jns
pop
call
pop
inc
mov
sbb
inc
je
xor
mov
mov
pop
pushf
or
inc
int
dec
jmp
pop
adc
inc
imul
test
aaa
mov
mov
sbb
pop
paddd
es
add
call
clc
push
stos
mov
xchg
jle
sub
or
adc
adc
ret
add
cmpsl
scas
add
xchg
sti
lret
xor
out
inc
pop
mov
ljmp
es
xor
pop
fdivl
xchg
sbb
dec
mov
mov
or
in
shlb
sbb
and
adc
push
jl
sahf
cmp
xchg
add
popl
and
bound
jbe
cltd
or
stc
imul
stc
cli
and
xor
rolb
cmp
pop
lds
mov
pop
jl
addr16
icebp
mov
in
push
mov
mov
lock
jge
je
roll
add
ret
stc
addr16
mov
mov
cmc
es
jnp
jno
push
outsl
jg
and
xchg
icebp
mov
lea
inc
dec
dec
add
sub
or
push
inc
cli
sub
rolb
xor
dec
add
out
xor
je
cld
fs
outsb
rorb
jg
fildl
pusha
add
hlt
aas
rol
mov
lcall
mov
jge,pn
fldl
ljmp
pop
and
add
lahf
jbe
jl
sbb
hlt
jmp
addl
cmpsb
adcw
cmc
inc
dec
dec
clc
sbb
fstps
sbbl
and
imul
push
xor
test
push
xchg
aad
cmp
lock
push
sbb
sub
sub
xchg
push
sarb
xor
movb
add
ret
ret
icebp
jmp
xchg
mov
xchg
push
add
dec
mov
mov
testb
popa
sbb
dec
dec
push
or
push
inc
jmp
aas
push
dec
test
jb
xchg
nop
ja
cmp
jae
clc
push
fnsave
sar
outsb
push
stc
inc
add
xor
inc
fisttps
lock
leave
jns
add
add
and
push
dec
andl
cli
add
and
cwtl
jge
push
loop
je
or
and
cmp
mov
mov
fstl
fisubrl
sbb
mov
ds
push
stc
cli
fs
jge
lret
bsr
sbb
cli
adc
mov
pop
gs
je
pop
add
inc
clc
mov
mov
je
add
nop
pusha
adc
iret
sarl
adc
repz
or
dec
cmp
movsl
stos
aad
and
xchg
lock
xor
mov
push
mov
shrl
add
imul
cmp
leave
lods
mov
mov
mov
xchg
aas
sti
in
lds
leave
sub
sbb
adc
outsb
mov
sbb
inc
insl
ja
fsubl
insb
add
lds
jmp
inc
hlt
movsl
xchg
adc
xchg
lock
nop
cld
int
and
adc
jge
mov
test
or
sub
inc
jge
gs
out
popa
lahf
adc
and
pop
xor
aas
cmp
scas
push
xchg
loop
xor
mov
imul
decb
push
lcall
and
movsb
test
ret
mov
mov
mov
fwait
and
inc
push
pop
insb
add
or
push
pop
shlb
jno
movsb
mov
repz
add
out
pushl
add
inc
xchg
fwait
or
pop
mov
std
mov
pop
mov
cli
adc
add
lahf
insl
pop
pop
test
sbb
mov
jge
aaa
xor
jmp
iret
fidivl
fs
xchg
aaa
dec
add
push
or
push
cs
fldt
cltd
popf
mov
es
jbe
dec
sbb
sbb
mov
mov
adc
or
mov
in
adc
addb
int3
das
outsl
mov
clc
dec
sub
rolb
sbb
es
sub
and
add
outsb
mov
andl
mov
jmp
sbb
mov
les
sbb
punpckhwd
sbb
cli
addr16
or
fcom
add
aaa
test
cmp
jmp
repz
pop
aaa
aad
or
lcall
jmp
out
mov
fidivrl
divl
dec
pop
imul
insl
or
jg
adc
and
jp
adc
or
jg
mov
dec
jne
nop
mul
lock
addr16
dec
ficoml
dec
adc
loope
add
xor
dec
or
push
adc
cmp
imul
stos
out
roll
inc
cmp
outsb
push
loopne
sub
adc
pusha
jae
outsb
mov
gs
aad
addl
adc
adc
insl
repnz
test
mov
shr
mov
arpl
lahf
movsl
or
out
rcll
mov
das
adc
jo
fmull
xchg
inc
ss
jp
pushl
xor
sbb
mov
add
xor
sbb
loop
mov
prefetchnta
xor
std
xchg
loope
cmc
jae
add
sbb
sub
cmp
mov
popa
adc
aam
cli
sar
pop
add
pop
push
cltd
or
jo
dec
sahf
mov
cmp
sub
mov
dec
and
minps
and
rol
adc
inc
xchg
mov
in
sbb
mov
pusha
or
stc
mov
aad
xchg
cmpsb
mov
xor
test
or
jg
daa
cmovbe
push
rcrb
stos
das
notb
mov
bound
push
call
mov
push
test
dec
iret
xchg
shll
mov
pop
xor
or
pop
xchg
out
idivb
or
movsl
push
or
in
push
std
repz
shrl
mov
sbb
adc
xchg
out
cmpsb
nop
lea
mov
dec
pop
iret
cmp
adc
mov
fadds
pop
mov
add
cli
or
clc
pop
xor
iret
and
cwtl
jae
ret
xchg
and
outsb
jmp
stos
insb
je
mov
push
fsts
push
inc
cmp
cld
daa
mov
dec
fistl
fsts
mov
pop
test
xchg
push
jne
roll
aad
or
cmpl
xchg
rcrb
inc
dec
in
pop
xor
add
sbb
addl
dec
adc
sub
ret
lcall
daa
cmp
or
jne
pop
mov
daa
sub
xor
mov
add
add
hlt
imul
xchg
add
add
cld
pusha
aam
mov
les
lahf
imul
pop
or
jge
fs
jne
ljmp
push
sbb
je
and
ds
jo
pop
add
cmc
dec
stos
scas
arpl
test
add
push
stos
inc
and
int3
mov
pop
mov
scas
imul
dec
mov
inc
adc
and
ret
int3
into
aaa
adc
pop
mov
paddb
fidivl
mov
mov
punpckhdq
scas
jg
dec
fidivl
jg
jecxz
das
add
pop
adc
fbstp
leave
push
das
stos
in
inc
sbb
mov
or
pop
ret
inc
sub
aas
hlt
jae
inc
mov
scas
leave
mov
scas
int3
mov
push
xchg
inc
jle
lods
inc
adc
dec
dec
add
dec
ljmp
mov
pop
inc
pop
xlat
loop
jbe
cmpsl
testb
or
sahf
les
pop
outsl
pusha
lcall
cmp
dec
mov
jmp
inc
jbe
in
mov
jge
mov
adc
inc
mov
dec
inc
jle
add
mov
jae
loop
lock
or
inc
and
lsl
and
repnz
pop
mov
addl
das
fsubl
xor
or
cmpsl
shl
mov
lret
xchg
add
jge
test
push
and
or
ret
cmc
fld
mov
loop
lahf
loope
mov
dec
jmp
push
sub
pop
lods
pop
call
call
scas
daa
mov
cmpsb
mov
sbb
test
pop
loop
jb
mov
xchg
roll
andb
hlt
mov
sub
dec
inc
fsubrl
and
mov
fnsave
mov
add
test
sbb
pop
orl
xor
repnz
jmp
xchg
js
mov
adc
jge
jmp
and
dec
dec
js
lahf
loop
push
mov
in
rcll
call
jne
sub
icebp
mov
enter
or
lret
add
dec
test
bound
in
popf
aas
pop
es
js
jl
xchg
cld
dec
and
push
aad
add
jno
pop
ret
sub
inc
es
cwtl
int
loope
fadds
jg
and
outsl
dec
xorl
cmp
jge
fisubl
mov
out
pusha
push
pop
inc
loope
xor
subb
pop
sbb
lret
mov
xor
push
cmpsb
mov
ficompl
nop
mov
enter
adc
jp
push
inc
push
push
pop
inc
push
mov
fs
sub
imul
std
push
icebp
push
sub
mov
into
push
sub
sbb
popa
adc
and
outsl
and
pop
mov
push
pop
andb
sub
or
jmp
cmp
lret
movl
xor
lea
test
rcl
mov
andl
adc
add
mov
pop
enter
fcomp
out
sbb
cs
pop
sbb
cmc
les
jge
xor
push
test
xchg
cmp
xchg
adc
or
mov
add
mov
push
inc
ljmp
xor
jae
daa
lock
rolb
or
dec
add
jl
xor
sub
ret
push
out
jle,pt
sti
and
and
xor
and
outsb
jmp
dec
call
xchg
add
xor
leave
pop
and
rolb
sub
sub
push
cmp
cwtl
cwtl
pop
orl
jecxz
dec
or
aam
xchg
cli
mov
into
data16
mov
ret
popa
mov
push
mov
inc
add
cltd
xlat
and
rorb
repz
bnd
cld
pop
imul
add
mov
dec
mov
bound
or
cmp
jle
cmp
inc
cli
incb
xchg
sbb
push
sbb
hlt
ret
int
pushf
pop
hlt
out
or
fisttpll
xor
add
mov
call
inc
xor
xor
lods
push
xor
push
es
scas
mov
outsl
aad
nop
sub
test
cmp
push
cmp
fcoms
cwtl
je
dec
push
jle
adcl
aas
das
jl
push
sti
xlat
test
mov
inc
jbe
loopne
jo
mov
add
adc
push
ret
mov
in
sbb
dec
rcrb
dec
mov
jmp
and
test
insl
push
pop
add
push
adc
sbb
push
btl
xlat
sbb
add
test
inc
jns
push
cs
roll
add
arpl
mov
jne
hlt
push
orl
pop
xlat
push
js
add
push
or
jo
out
aaa
and
sti
push
hlt
pop
stos
and
sbb
sbb
aaa
insb
jnp
lret
add
mov
or
sarl
shlb
jb
pop
and
dec
pop
mov
mov
fmul
fimull
outsb
imulb
in
stos
test
aad
dec
inc
clc
ret
add
call
jle
out
push
jo
lcall
outsl
jmp
sub
inc
add
test
mov
adc
arpl
cmpsb
dec
fucom
xchg
addb
je
imul
bound
mov
pop
js
stc
in
mov
cmp
inc
int3
insl
mov
mov
sub
inc
int
jno
jns
inc
and
sbb
sbb
pop
cmpsb
sti
loope
dec
mov
and
cmovp
repnz
popf
inc
pop
clc
out
add
adc
cmpsb
jecxz
and
cltd
dec
in
enter
shll
and
cld
mov
mov
xlat
rolb
lock
ror
cmp
stos
popf
out
decb
and
inc
lods
jecxz
lock
js
mov
invd
push
mov
je
les
jns
fiaddl
arpl
outsl
push
pop
jle
cmp
jge
ljmp
arpl
add
jno
int
adc
jl
jle
sbb
mov
sbb
loopne
clc
add
ret
dec
mov
aad
je,pn
mov
mov
movsb
sbb
and
pop
inc
out
packuswb
in
jg
ret
test
mov
push
pop
ds
mov
pushf
ja
adc
jle
outsb
pop
lods
repz
or
icebp
xor
and
xor
in
lea
or
loop
mov
cmc
lret
ja
cs
cwtl
inc
popa
cmpsl
inc
jge
pop
shl
sbb
insl
insb
dec
jb
and
notb
int3
jp
inc
xor
sti
daa
pop
cmp
pop
xor
jmp
fisttps
xchg
jg
das
sbb
sbb
fildl
dec
lahf
sub
mov
xchg
aas
shrb
and
jg
inc
test
add
jmp
fwait
pop
mov
sbb
daa
add
mov
pop
or
sub
dec
jecxz
dec
test
hlt
nop
divl
daa
cmc
dec
sbb
popa
xchg
and
pop
or
xlat
add
das
fsubr
sbb
mov
inc
xor
and
jne
push
add
and
or
movsl
data16
xchg
bsr
test
mov
cmp
push
imul
fidivl
ficompl
or
mov
test
iret
data16
push
jmp
push
sbb
push
inc
xchg
add
mov
stos
cmp
cs
sub
test
subb
loopne
les
nop
pop
movsl
mov
dec
js
lock
lds
mov
pop
int
cli
sbb
outsl
push
call
rolb
insb
std
icebp
inc
ja
mov
add
imul
in
pop
adc
call
pop
dec
bnd
shll
xor
fwait
imul
idivl
fwait
mov
fdivs
push
jle
sub
xor
je
dec
sbb
fldt
and
jae
repnz
ret
loope
push
sub
subl
and
fbld
jmp
lret
repnz
mov
dec
pop
jmp
pop
xchg
mov
mov
stc
cmp
jne
dec
xchg
push
mov
sub
jle
in
aas
pop
cmpsl
lea
lret
dec
std
jne
pop
and
jmp
pop
dec
cltd
and
mov
add
or
sbb
lcall
inc
xor
test
jae
aam
add
add
mov
push
cwtl
cs
pop
imul
mov
hlt
adc
lcall
pop
pop
or
or
aam
cwtl
mov
dec
test
lods
adc
mov
add
push
scas
cmp
mov
mov
cld
pop
push
fimull
hlt
sbb
mov
test
push
push
incl
aam
lods
dec
jb
and
int3
cmp
push
outsl
aad
mov
mov
movsl
rcrl
sbb
rorl
mov
jo
call
js
mov
clc
rol
pop
cmpsl
jo
int
or
mov
scas
or
add
sarl
lahf
xchg
and
inc
add
mov
or
push
mov
lock
inc
dec
jecxz
mov
out
cmp
leave
inc
mov
lock
je
or
mov
xchg
inc
cs
faddl
adc
add
pop
sbb
xchg
data16
pop
je,pt
xor
sbb
rorb
add
ljmp
cmp
aaa
jne
or
pop
clc
das
es
lods
push
xlat
fsubs
jno
clc
cld
dec
stc
call
ja
inc
pusha
shll
das
inc
repnz
xchg
xchg
incb
jo
lds
popa
sbb
insl
aam
fsubrl
lock
sbb
sbb
add
jo
das
cmc
in
dec
lcall
jae
lods
leave
int
mov
stc
add
addl
movl
loopne
bound
in
add
sub
insl
add
or
inc
add
orl
xchg
int3
fdivl
fwait
add
cmpl
or
test
adc
adc
and
bound
push
mov
std
or
lods
lds
imul
idiv
lret
push
das
add
aas
mov
sbb
adc
push
sahf
and
add
std
or
push
outsb
stos
push
lahf
inc
int3
inc
movsb
dec
or
leave
movsl
or
shlb
push
test
or
add
into
mov
js
push
cmpsb
adc
cli
bound
rcrb
ja
cmp
ss
data16
mov
or
ja
icebp
pop
xchg
sbb
test
test
stos
adcb
mov
nop
ret
js
dec
dec
or
mov
dec
test
rcl
xchg
lea
jmp
cli
cmp
outsb
xor
inc
or
sbbl
xor
in
cwtl
sbb
add
in
push
arpl
mov
mov
leave
push
mov
je
aaa
sbb
mov
pop
or
add
and
test
insl
shrb
loope
out
lods
cwtl
stos
imul
adc
mov
aas
lcall
mov
test
hlt
inc
add
xor
dec
inc
sub
xchg
aam
aaa
loop
add
mov
hlt
insl
imul
inc
insb
jp
int3
ja
add
mov
sahf
cltd
mov
daa
or
test
adc
adc
je
mov
and
dec
jge
pop
outsl
test
add
or
lret
rcrl
das
sbb
push
jnp
jmp
dec
add
inc
jmp
adc
stos
xor
test
popa
sub
addl
mov
lods
sbb
mov
ljmp
in
add
js
adc
mov
jmp
orb
cld
in
fadds
cmp
sbbl
xchg
shlb
test
xor
sbb
pop
jae
mov
xor
je
lods
sar
test
push
add
add
sti
sub
hlt
iret
ss
aam
sbb
adc
mov
insl
pop
jno
mov
shlb
roll
or
jp
mov
push
loope
mov
xchg
jo
inc
adc
test
test
testl
rorb
sbb
sbbb
push
sbb
sbb
dec
call
jbe
adc
adc
enter
les
adc
sub
pushf
js
cmpsb
cltd
xchg
in
rclb
mov
pop
add
mov
adc
dec
out
fcompl
push
icebp
dec
and
repnz
mov
scas
es
outsl
aad
adcb
add
xchg
movd
lods
mov
jl
mov
push
sbb
and
jbe
sub
lea
call
xlat
rolb
push
rol
mov
dec
jmp
adc
mov
testl
push
dec
in
test
jge
lods
add
adc
add
fbstp
movsb
or
cli
enter
and
frstor
cmp
in
sbb
pop
movsb
push
push
pop
gs
popa
lods
xor
popa
dec
in
push
pop
pop
les
scas
pop
dec
imul
xor
shlb
push
ja
mov
or
outsl
pop
xor
pop
clc
jno
rcr
jae
adc
cli
shrb
and
mov
int
shrb
inc
sti
and
dec
jbe
and
ljmp
jmp
push
push
jb
inc
xchg
gs
mov
sub
push
call
sub
shll
sbb
ss
adc
outsl
sbb
mov
sub
cmp
ss
sbb
inc
lods
je
pop
push
or
insl
imul
pop
test
ret
stos
pop
push
loope
cmpsl
xor
jp
loop
xchg
jmp
les
mov
push
loopne
push
add
bound
pop
adcb
inc
adc
aad
fmuls
cld
je
aad
inc
cs
add
out
push
adc
jo
mov
insb
out
push
enter
jb
dec
pop
jo
cs
popa
cmp
fldl
out
aad
loopne
stos
inc
sbb
jo
pusha
mov
fbld
add
push
ja
push
andl
dec
push
ret
test
mov
bound
sbb
sbb
add
stc
icebp
dec
sbb
ret
adc
ret
and
mov
mov
adc
cmpsl
sub
daa
add
ss
aad
mov
xor
fisttps
add
test
cltd
sbb
sub
rolb
loopne
sub
addl
fdivl
loope
xor
push
adc
push
fsubl
cmp
push
outsl
popa
xchg
imul
mov
add
or
addr16
out
nop
xor
iret
inc
and
xchg
icebp
xor
iretw
mov
test
gs
and
ljmp
imul
pop
mov
xchg
pop
mov
inc
shr
pop
mov
stos
adc
lock
call
pop
inc
pop
lods
lods
lcall
jl
adc
icebp
dec
add
rorb
cmp
cmpsb
mov
lahf
test
mov
mov
lock
movups
adc
mov
test
xorl
stos
fstps
fwait
mov
or
lcall
push
into
cmp
lock
inc
hlt
mov
jo
pop
or
pushf
xchg
jnp
loope
sub
mov
xchg
subl
or
or
or
sub
add
and
dec
cltd
dec
mov
push
rol
or
and
pusha
shlb
inc
add
inc
xor
add
shll
push
cmpl
in
les
add
pushf
xchg
rolb
xor
fimull
mov
and
dec
push
lock
aaa
jp
xchg
je
push
push
mov
mov
fsts
mov
dec
cmp
mov
movsl
dec
addb
lahf
and
or
cmc
push
xor
push
outsb
xchg
xchg
jmp
mov
aaa
push
push
sub
adc
loopne
cmpsl
nop
adcb
aam
dec
xchg
jle
inc
adc
or
sub
sbb
insl
add
lahf
cmc
and
xor
jno
add
xor
sbb
sahf
cmp
cwtl
push
fs
rorl
scas
dec
and
daa
loopne
scas
mov
jae
test
pop
xlat
outsb
add
imul
int3
or
push
mov
mov
mov
xchg
sbb
sbb
pop
jns
scas
xor
push
jno
add
popa
aam
cmp
scas
scas
push
js
ret
inc
fsubrl
push
fildl
mov
lret
jae
mov
push
imul
lcall
pop
pop
bound
mov
mov
std
jne
mov
adc
verr
dec
daa
bound
and
ljmp
in
iret
add
inc
lahf
test
xorb
or
add
adc
test
mov
mov
movsl
and
push
aam
test
sub
ds
orb
sbb
movsl
pop
xor
push
in
mov
xchg
cltd
fimuls
lcall
sbb
push
gs
or
cmp
adc
int
and
gs
ret
jge
mov
cmpsl
push
push
rcrl
mov
das
pop
inc
xor
loope
add
loope
loop
test
cmp
sub
jnp
adc
pop
pop
repnz
lret
sbb
leave
push
push
jae
push
nopl
les
out
dec
ljmp
cmp
dec
dec
insl
jo
and
loope
xchg
cmpsb
ror
in
xor
mov
mov
jl
lds
xor
push
add
dec
lock
incl
cld
orb
mov
arpl
xchg
aad
jge
mov
mov
or
xor
out
pop
xchg
cmpsb
jg
mov
push
and
xchg
xlat
or
push
in
add
sti
mov
in
dec
xor
cmp
push
lock
andnps
xor
test
push
test
xchg
jns
nop
or
sbb
xchg
scas
movsl
pushf
pop
jne
pushf
daa
test
dec
jp
cmpsl
inc
sub
pop
rolb
add
popa
jmp
dec
mov
xor
push
ret
cmc
stos
sub
addb
iret
pop
sbb
gs
int
dec
in
je
les
sub
push
pop
dec
outsl
loope
stos
inc
cmpsl
fldl
addr16
and
adc
push
add
xlat
in
add
imul
mov
scas
je
mov
loop
adc
scas
dec
fsts
pusha
push
cmc
mov
jbe
inc
push
ret
and
sbb
cwtl
cmpsb
or
insb
or
movsb
jl
imul
sub
adc
popf
sbb
mov
mov
dec
aas
loope
sbbb
pop
xchg
inc
jb
outsb
xor
inc
push
test
aam
pop
sahf
jbe
subl
push
and
lods
ss
aaa
movsl
das
rol
mov
jae
loope
fs
stos
push
add
mov
xchg
inc
scas
mov
pop
add
mov
dec
lods
inc
or
add
sub
and
xor
mov
ljmp
lds
push
push
adc
imul
stc
loopne
movsb
out
imul
iret
outsb
test
arpl
mov
adc
jb
lds
imul
dec
and
ja
mov
cmc
js
test
mov
mov
or
hlt
loope
inc
aas
add
pop
dec
loope
jns
lods
adc
les
lret
mov
add
popa
out
sbb
ss
scas
loopne
sub
push
lods
mov
ret
test
inc
jbe
pushl
xor
lock
scas
lea
jle
push
sub
mov
adc
jnp
cmpb
pushf
xor
or
pop
inc
adc
xchg
test
pop
mov
or
dec
jecxz
add
sub
jo
jecxz
and
ret
sub
movsl
out
mov
push
ret
mov
mov
adc
iret
ret
xchg
push
pusha
lcall
push
insl
add
lahf
rorb
sub
out
inc
sti
outsl
loope
push
add
cwtl
xor
mov
shr
add
xchg
add
fs
sub
shll
xchg
sahf
and
sbb
data16
not
push
ret
jb
cmpsl
cld
pop
xor
xor
int
add
dec
or
pop
sbb
divl
and
test
jle
jl
xchg
jne
add
inc
sub
mov
cltd
cmova
test
insb
mov
xchg
jge
test
sub
pop
repnz
add
out
mov
sti
xchg
mov
movsl
add
push
addr16
jl
push
stc
bound
movsl
jp
xor
jno
mov
mov
ret
pusha
xor
add
inc
or
mov
das
fstps
fimull
gs
mov
bound
inc
xchg
sub
outsb
and
jp
mov
push
and
xchg
ljmp
push
push
aaa
jno
mov
nop
push
das
mov
cs
imul
imul
cmpsb
xor
push
dec
pop
push
negl
sbb
out
idivl
lock
in
jle
lock
sbbl
cmp
jp
repz
loop
inc
and
mov
mov
dec
psrld
insl
or
cmpsl
jle
push
dec
push
stc
rorb
mov
pusha
sahf
xlat
roll
jbe
push
mov
cmpsl
dec
cld
in
imul
cmp
mov
pxor
cmpl
rclb
jmp
pop
lret
inc
sub
sub
adc
mov
sub
in
cmp
jmp
mov
or
jge
sub
shll
outsl
fisubs
cwtl
dec
jge
or
cmp
xor
scas
fwait
sub
sbb
pop
xchg
inc
sbb
adc
inc
sub
outsw
ret
dec
and
mov
dec
loopne
and
fs
jae
aam
das
subl
cmp
cmp
das
inc
cmc
dec
push
sbb
xchg
outsl
out
stc
mov
roll
cmpsb
xchg
fs
inc
or
mov
adc
adc
int
mov
int
shll
imul
es
in
dec
ljmp
and
jae
inc
fnstsw
adc
dec
cli
out
dec
lea
loope
sub
popf
pop
lds
fucompp
mov
je
pop
in
sbb
mov
outsl
cli
cmp
and
lcall
jmp
mov
push
adc
aas
adc
lea
mov
pop
adc
shlb
fildll
stos
mov
sbb
xor
incl
pop
mov
mov
add
mov
or
pop
mov
shl
jo
mov
xor
sub
daa
sbb
xlat
push
inc
jne
adc
rcrl
scas
ljmp
nop
push
cmp
inc
mov
mov
pop
sahf
xchg
imul
mov
cmp
jbe
dec
les
mov
fldl
inc
sbb
mov
das
rorl
or
dec
push
mov
cld
jno
mov
test
clc
test
xchg
adc
test
cmp
sti
movsb
pop
loopne
xorb
add
aas
and
or
or
ret
adc
mov
pop
mov
mov
xchg
sahf
cmp
sbb
push
mov
fildl
pop
jle
lods
das
or
mov
adc
inc
pop
mov
aad
stos
mov
dec
add
dec
sbbb
or
outsb
adc
cmp
cmpsb
inc
shrd
dec
cmp
ret
add
sub
xor
je
addr16
test
sbbl
cwtl
pop
push
pop
mov
cmp
xlat
mov
mov
stc
adcl
inc
call
imul
mov
xchg
dec
daa
in
dec
repz
mov
adc
cmp
dec
rorb
mov
add
xchg
add
mov
int3
push
adc
push
or
mov
arpl
jle
and
adc
xor
mov
xor
clc
sub
xlat
std
adc
ds
nop
cwtl
or
mov
es
push
xchg
sahf
lea
inc
xlat
pop
aaa
loop
nop
inc
aam
testl
cmp
repz
pop
ds
cltd
sbb
and
faddl
pop
stc
cs
pop
jno
and
inc
ja
test
lock
in
cmpsl
in
stos
je
dec
rcll
xchg
test
mov
int3
je
mov
fwait
jo
inc
ret
sbb
push
outsb
xor
ds
outsl
cli
xorb
mov
cmpl
loope
stos
insb
sub
test
fcoml
inc
and
pop
pop
insl
or
lea
faddl
xchg
inc
mulb
outsb
pusha
aaa
or
and
movsl
fcmove
aam
sbb
aad
inc
mov
cmp
pop
cmp
mov
scas
xchg
shll
insb
mov
out
test
mov
js
xor
subb
mov
and
lret
jno
sub
push
test
sar
push
or
sbb
jmp
lret
adc
xor
sahf
std
test
test
and
inc
xor
sub
rcrl
mov
adc
or
xor
jbe
or
rorl
shl
out
lods
sbbb
push
out
std
shrb
sbb
sahf
inc
inc
pop
cmp
fstpl
push
push
ret
add
rcll
out
push
andl
push
ds
iret
aas
dec
sub
jle
es
cmp
jl
and
or
iret
repz
lock
mov
push
push
push
mov
mov
cwtl
pop
out
in
icebp
xchg
cmp
push
and
ret
adc
into
sub
cmpsb
or
dec
js
pusha
pop
mov
add
loopne
inc
mov
dec
jo
pop
xor
cs
sti
xor
rorl
add
and
adc
jecxz
subl
loopne
aam
roll
mov
sbb
mov
push
mov
xchg
xchg
dec
int
popa
repnz
xor
push
or
popf
ljmp
ds
nop
loop
test
push
scas
pop
pop
xchg
jb
repz
pushl
mov
xchg
xchg
cmp
into
inc
cmp
or
lock
mov
inc
xor
pop
or
roll
pop
push
pop
sub
cmp
lret
xor
cmp
lock
sahf
les
gs
into
pushl
inc
push
sbb
cmp
fsubs
cmp
jne
pop
lods
insb
lret
insl
mov
push
shrb
loope
fdivl
stos
jl
add
sbb
shll
cmc
push
push
outsb
cmc
adc
fcoms
inc
sub
addr16
cmpsl
mov
scas
mov
mov
or
push
sub
shlb
or
movsl
insl
stos
mov
cli
or
cs
xlat
incb
jno
sbb
dec
stc
mov
sbb
loope
adc
adc
call
and
add
clc
stc
inc
inc
xchg
das
push
adc
bound
xchg
movsb
and
lea
and
es
loop
sbb
adc
add
mov
loop
sub
mov
mov
rcl
lahf
dec
rorl
shll
push
imul
cmpsl
and
add
fistpll
adc
nop
pusha
aam
in
xor
popf
jno
lcall
int
outsb
sbb
leave
cmpsl
test
imul
insb
pop
sub
sti
pop
cmp
add
fldcw
and
jg
inc
mov
xor
jno
xchg
lea
xchg
sub
adc
push
dec
insb
lret
pop
mov
mov
cmpl
mov
clc
leave
xchg
sbb
leave
inc
out
or
fiaddl
jle
mov
cmpsb
xchg
lock
or
push
out
dec
xor
pusha
and
test
mov
mov
mov
xchg
test
lock
incb
imul
dec
dec
incl
adc
test
mov
faddl
roll
dec
inc
enter
jmp
add
in
shrb
adc
rcll
ret
jo
mov
mov
mov
xor
testb
mov
add
adc
xor
push
mov
pop
or
or
pusha
das
imul
xor
adc
or
cmp
arpl
mov
or
enter
adc
xchg
jl
inc
aad
mov
xchg
arpl
dec
out
pop
mov
jno
addr16
push
mov
insl
jo
ljmp
push
imul
cmp
xchg
ret
jnp
push
cmpsl
adcb
jl
out
js
imul
lock
dec
dec
hlt
es
inc
pop
scas
or
test
mov
out
shrl
and
dec
ret
fiadds
cmpsb
add
mov
xor
insb
dec
imul
mov
add
test
enter
imul
in
lahf
xor
scas
mov
dec
inc
adc
push
cmpsb
dec
push
stos
inc
inc
dec
xchg
sbb
mull
cmp
jecxz
in
sbb
testb
inc
and
rclb
mov
sbb
test
pop
sbb
test
dec
jp
adc
sub
inc
sub
mov
jnp,pt
ret
je
fucomip
mov
xchg
jns
mov
pop
mov
flds
push
sub
push
jle
sub
jecxz
sub
or
push
call
stos
adc
sbb
push
inc
fists
xor
push
lahf
push
ret
jne
cmp
push
xchg
push
je
mov
push
daa
or
movsb
mov
mov
adc
cmpsb
or
inc
or
aam
loop
test
stos
repz
pop
inc
cld
jmp
xor
fwait
inc
stos
dec
cmp
inc
sub
ror
and
inc
adc
sbb
insl
sub
popa
jb
xchg
adc
sarl
insl
xor
pushf
jb
and
sub
bound
and
sti
dec
fcoms
into
aad
rolb
sub
dec
jmp
ficoml
test
push
jp
xlat
sub
push
cmpsl
or
orl
mov
fdivrp
nop
cmp
lods
lock
lods
enter
hlt
cltd
jle
jbe
dec
jns
mov
dec
mov
mov
jmp
jno
and
mov
and
mov
mov
ds
push
movsl
mov
out
add
push
or
add
push
sub
filds
pop
adc
mov
or
je
mov
jge
movsb
les
fs
and
cmovb
xchg
pop
xchg
bound
sbb
out
mov
adc
and
xorl
jbe
mov
mov
push
movsb
xchg
add
loope
jp
mov
push
ret
pusha
dec
lahf
xchg
jo
push
sbb
fcmove
inc
fisttps
test
sbb
sub
mov
arpl
xchg
jle
lret
enter
pop
lcall
popf
js
push
in
mov
int
cmpsb
dec
inc
ret
jl
cmp
jecxz
xchg
fists
add
int3
push
add
sub
dec
ljmp
xor
add
cmp
or
test
adc
xchg
jmp
in
push
lea
inc
pushf
arpl
mov
inc
lods
mov
inc
or
mov
iret
mov
or
int
dec
aaa
sbb
xor
lods
pop
jns
mov
ss
sbb
lea
sbb
imul
mov
add
aad
xor
pop
push
popa
push
jno
test
and
inc
popf
pop
stos
pop
cmp
into
xchg
mov
xchg
or
rolb
bound
lcall
mov
flds
notl
lret
add
insl
setge
cmp
mov
cmp
cmp
fistps
jns
iret
mov
pop
add
jns
rorb
push
jg
call
or
add
ret
in
cmp
mov
or
test
inc
adc
fs
mov
cmc
xchg
movsl
mov
loope
mov
push
loopne
lods
ja
dec
sahf
pop
cmp
icebp
cmp
fs
adc
cmp
add
sbb
sbb
or
rolb
sar
cmp
inc
fcoml
jo
or
and
leave
sbb
push
imul
fbld
inc
dec
or
xchg
shlb
shrl
inc
lret
shrb
inc
subb
dec
dec
pop
push
sbb
adc
mov
or
in
inc
mov
sbb
aas
sbbl
adc
mov
jg
sub
adc
pop
sbb
mov
adc
push
jo
ret
imulb
ss
mov
sbbl
add
sbb
xchg
sbb
fisttpll
ficompl
jl
push
dec
arpl
pusha
jmp
out
xor
cmpb
scas
aaa
cltd
lcall
sbb
fwait
mov
dec
inc
aaa
lret
inc
and
arpl
movsb
out
dec
nop
push
pop
inc
lea
data16
aas
mov
xchg
repnz
mov
and
pop
aas
test
jns
adc
pop
cltd
call
pusha
testl
loopne
stc
xchg
test
outsb
testb
pop
push
xchg
inc
cmp
jp
popa
ljmp
lret
adc
inc
mov
mov
daa
js
mov
ds
outsb
xor
and
in
jecxz
loope
in
rorl
sbb
sub
or
ret
pop
rol
adc
ss
fisubl
cmpl
and
ja
ds
shr
sbb
test
int
jo
adc
je
adc
in
aam
cmp
jmp
inc
orl
data16
mov
pop
mov
lret
adc
dec
xor
shll
mov
and
push
inc
push
mov
xlat
nop
imul
data16
ljmp
jns
movsb
sbb
push
cmpsl
fsubs
inc
sbb
add
push
xorb
call
inc
sbb
testl
or
mov
cld
pop
and
cmp
sub
adc
scas
out
sub
inc
add
loop
inc
popf
add
bound
insl
ljmp
pop
push
cmp
mov
sbb
mov
shll
jns
xor
sub
pop
int
push
push
sbb
jo
leave
lods
sbb
adc
jmp
popa
inc
jnp
loopne
sub
sahf
pop
push
shll
rorb
int
adcl
dec
sbb
cmp
icebp
xor
pop
aad
push
insl
jne
fcomi
lahf
subb
push
fmuls
jns
ljmp
mov
lret
cwtl
je
add
cmp
inc
or
adc
je
sahf
dec
add
xchg
add
movsl
pop
jp
xchg
and
cs
das
push
pop
and
sub
jae
das
scas
and
mov
push
mov
pop
cmp
dec
jo
test
adc
push
push
mov
jb
and
test
xor
push
pop
cmp
push
inc
cmp
je
and
adc
test
sbb
int
mov
pop
mov
stc
pop
adc
pop
mov
xor
rorb
adc
adc
repz
jle
pop
aaa
fcmovb
lcall
or
test
mov
aad
outsl
stos
jge
xchg
and
clc
mov
jg
insl
sbb
ret
cli
mov
jg
inc
adc
scas
sbb
inc
pop
lret
xor
or
ret
or
mov
mov
jnp
xchg
nop
mov
push
insl
adc
mov
decb
push
or
jb
shlb
sub
nop
add
popf
add
jno
inc
mov
clc
push
loopne
dec
sub
arpl
add
inc
sub
sbb
ljmp
shll
sub
and
push
aam
dec
lds
jo
leave
in
stos
mov
xor
stos
and
and
sub
fnsave
pop
addl
enter
jo
cltd
and
mov
pusha
inc
test
sub
inc
cs
add
in
cld
pusha
xor
inc
push
sbb
or
pop
or
rorl
mov
and
lcall
pop
clc
stos
mov
sbb
cwtl
push
jno
nop
sbb
popf
mov
add
fwait
mov
cmp
pop
sbb
arpl
sub
lock
add
xchg
inc
push
sbb
les
iret
cmpsl
or
inc
or
inc
mov
fsub
sbb
movsb
cmpsl
xchg
pusha
mov
fmuls
movsb
inc
jnp
loopne
movsl
in
bound
stos
or
addb
mov
lock
fwait
out
loope
rorl
push
push
stos
or
dec
mov
rorb
sbb
aaa
jno
xlat
pop
jne
les
ss
daa
or
clc
xchg
je
imul
insl
adc
add
insl
orb
pusha
gs
cmp
mov
or
mov
fcmovnb
push
test
mov
mov
mov
and
jl
or
stos
inc
jb
and
stos
out
lods
inc
mov
mov
mov
arpl
jecxz
pop
pop
test
dec
popf
arpl
outsl
dec
sbb
cmpsl
lret
mov
inc
add
cmp
lret
lret
lcall
subl
fcmovb
mov
int3
lock
jns
das
daa
sbb
and
mov
dec
lret
call
inc
arpl
imul
sub
pop
jno
adc
sbb
sub
cmpsl
xchg
mov
addb
scas
fisubs
sub
rclb
rolb
push
lea
loopne
sbb
nop
test
mov
sub
fldl
inc
or
sbb
ret
lods
and
pushf
imul
jecxz
inc
cmp
pop
push
push
das
rcrl
mov
cmp
xor
std
in
andl
bnd
jno
lds
xor
push
aad
add
jb
popf
jmp
rclb
sub
sbb
add
or
mov
lods
movsb
adc
jg
inc
imul
loope
mov
movsl
jno
popa
inc
pop
in
xchg
cs
movsb
test
xor
stc
push
lahf
dec
out
or
inc
inc
push
mov
push
cmp
cmp
outsl
rol
inc
mov
inc
imul
cmp
jle
cli
or
and
pop
inc
dec
test
stc
push
lret
movmskps
in
movsb
mov
ds
bound
and
insl
gs
shrl
ret
xchg
mov
xor
dec
ret
in
addr16
pop
pop
adc
movsb
lret
mov
and
push
stc
stos
ljmp
xlat
fidivs
lds
xlat
add
mov
and
mov
popa
js
cmpps
push
lea
ja
xchg
push
dec
in
lcall
adc
jnp
cld
pop
shlb
inc
cmp
push
inc
add
je
dec
js
loopne
pop
andl
imul
jns
lret
imul
push
jb
dec
mov
jns,pt
dec
dec
push
cmpsl
fs
jno
and
in
test
in
out
xchg
and
lods
lds
adc
dec
int3
adc
push
enter
je
je
pop
pop
add
xchg
push
push
cmp
pop
loope
inc
jmp
mov
out
fnstcw
push
mov
stos
push
movsl
push
lods
data16
add
push
rcll
mov
push
push
cwtl
lcall
outsl
jb
test
inc
or
in
pushf
xor
adc
pop
dec
xchg
mov
cltd
push
inc
pop
jae
adc
dec
jl
daa
enter
mov
stos
cli
js
call
loop
insl
gs
gs
sbb
push
lahf
adc
jmp
inc
adc
test
mov
inc
add
mov
push
cmp
sub
test
add
adc
dec
lock
xor
add
rcrl
adc
test
out
mov
loope
xchg
dec
dec
pop
and
inc
pop
mov
inc
fsubs
fiaddl
shlb
adc
cld
lea
popf
xor
ljmp
and
nop
cmpsb
xor
xlat
arpl
aad
push
cmc
sbb
sarb
lock
sub
mov
js
mov
imul
mov
adcb
add
mov
jp
in
ja
mov
sbb
or
ret
push
mov
and
add
push
std
sti
cmp
push
testl
push
leave
push
cmp
mov
test
push
dec
mov
xor
out
sbb
add
sub
shrl
inc
rolb
mov
jecxz
stos
subl
and
sti
and
daa
jecxz
add
lret
dec
es
test
lret
mov
daa
sti
mov
dec
xchg
sbb
push
push
cmp
fs
int
clc
sub
sbb
aas
lcall
daa
cmpl
ljmp
mov
and
jbe
inc
push
sub
js
test
push
rorb
push
test
sbb
pop
mov
test
cltd
pop
popf
adc
add
aam
push
mov
adc
lock
out
and
pop
ljmp
jge
je
xor
sub
addr16
cmp
lahf
cmp
adc
scas
add
pop
ja
mov
dec
cli
fdivrs
lods
aam
pusha
shll
mov
imul
ja
cmpsb
ret
test
adc
push
fisttpl
mov
rolb
imul
mov
cmpsl
push
cwtl
dec
cmc
add
cmp
pop
inc
push
call
fildll
int3
xchg
sbb
mov
xor
popl
dec
fadd
fsubrs
inc
add
sbb
shll
cmp
mov
adc
aad
fildl
pop
mov
test
sbb
xor
mov
test
movsl
test
icebp
or
fucomi
push
movsb
mov
push
jg
mov
xor
mov
aas
push
push
sub
or
cmpsb
xchg
inc
lods
repnz
mov
inc
sbb
gs
ljmp
push
cmp
fisttps
or
xchg
mov
pop
xor
in
or
or
and
sbbl
or
mov
sbb
xchg
mov
mov
lcall
mov
pop
pop
movsb
std
mov
lds
iret
jns
das
mov
aas
mov
movsl
pop
daa
lcall
lods
inc
clc
lcall
daa
or
push
inc
mov
xchg
addb
ljmp
inc
xor
sub
add
xchg
mov
stos
shll
or
mov
clc
outsb
aad
mov
sbb
or
sbb
pop
adcb
xor
gs
push
in
mov
int
mov
pusha
sub
inc
mov
in
orl
sub
imul
jmp
sub
int3
xchg
xchg
pop
cmc
pop
lods
cltd
out
lahf
inc
pusha
adc
pusha
mov
shl
pop
add
ja
mov
aaa
or
cli
jne
ljmp
sahf
mov
lcall
jne
xlat
push
or
mov
xlat
push
mov
xchg
outsb
sub
add
mov
popf
jg
inc
syscall
ss
push
lock
mov
aad
sbb
xor
adcb
subl
add
scas
sbb
cmpsb
das
pop
arpl
gs
shlb
pushf
pop
je
std
inc
ljmp
xchg
cmp
sub
inc
out
jne
pop
lods
push
call
nop
mov
aaa
out
cmovae
stos
pop
in
inc
mov
xor
sbb
adc
popf
jne
push
pop
jno
push
sub
xor
in
sub
cmc
mov
xor
jg
fmuls
in
push
mov
es
cs
pop
add
adc
sub
add
out
mov
sbb
aad
add
jbe
das
dec
mov
dec
scas
add
aad
imul
in
cwtl
xlat
ret
push
pop
cmp
scas
leave
ja
pop
mov
jne
dec
es
add
push
pop
shll
lret
dec
daa
hlt
test
pop
aas
fbstp
mov
sub
jno
fmuls
pushf
cmp
mov
or
sbbl
xor
push
sub
adc
test
inc
fcmovne
inc
inc
adc
pusha
sub
test
pop
adc
insb
ret
popf
mov
je
divl
scas
jae
push
orl
xchg
jl
and
aas
mov
popa
push
sbb
in
pushf
jmp
mov
or
mov
arpl
jp
jns
divb
cld
hlt
je
or
xor
inc
jge
or
sbb
jle
xchg
xchg
inc
imul
adc
xchg
pop
mov
adc
mov
enter
pop
shr
add
loope
rcll
adc
roll
loope
test
fisttpll
push
inc
pop
xchg
mov
inc
pop
subl
fwait
test
xchg
sahf
cmpsb
xor
das
add
xor
add
lock
mov
inc
andl
into
push
cmpsb
push
nop
adc
pop
enter
xor
cmpsb
das
pusha
or
jb
push
push
daa
test
push
pop
mov
dec
xchg
aad
rcr
dec
jno
push
test
mov
jo
push
pusha
lea
and
testl
ds
stos
inc
dec
aam
cltd
push
and
inc
fdivrl
stc
xchg
or
add
outsb
sarl
push
adc
push
rolb
adc
lock
inc
mov
shll
imul
adc
sub
popf
inc
add
or
negl
push
dec
mov
loop
inc
sbb
cs
push
daa
jo
shll
and
dec
mov
mov
lea
loop
sbb
loope
stos
xor
jno
cmp
sub
in
xchg
or
inc
popf
jae
sbb
dec
mov
or
gs
add
jne
test
popf
aam
xor
imul
add
loop
jne
xchg
enter
sub
int
jns
inc
push
int
jbe
and
jge
data16
sub
scas
rcll
mov
fisttps
pop
mov
push
lahf
add
sub
stos
mov
dec
popf
rcrl
push
cmc
sub
int3
xchg
adc
mov
adc
xor
add
xchg
mov
dec
and
je
icebp
inc
or
xor
jno
push
xchg
add
push
sahf
dec
ret
sbb
adc
fistps
insl
scas
dec
lret
test
jbe
clc
mov
dec
xchg
fsubl
je
cltd
push
mov
sbb
scas
jno
dec
fwait
jae
inc
or
pop
mov
add
jl
or
enter
mov
bswap
inc
imul
notl
cmp
test
roll
dec
int
js
sbb
inc
popl
rcl
fistpll
dec
test
ss
aam
add
add
adc
cmp
adc
shll
or
stc
les
popf
push
cltd
nop
mov
mov
jle
mov
rorb
push
add
pop
pop
dec
rorb
daa
push
mov
adc
mov
pop
imul
pop
mov
ret
arpl
inc
sti
mov
les
pop
daa
sub
out
lods
add
cli
add
lods
and
push
sub
lret
and
xchg
andb
sub
bound
repz
leave
orl
inc
mov
test
and
push
jns
xor
lods
fists
jno
cmp
testl
lret
mov
pop
fisttpll
sbb
dec
mov
jae
or
pop
sbb
icebp
popf
outsb
lahf
push
sub
icebp
lret
scas
movsl
or
nop
pop
add
mov
insl
mov
jne
xlat
cmp
mov
aad
xor
sahf
rcrl
jmp
aad
cs
xchg
les
fucomip
add
loopne
mov
fwait
orl
mov
lds
test
or
loopne
or
inc
mov
sub
cmpsl
adc
fwait
ja
sub
push
imul
or
xor
fnsave
insl
bound
and
mov
int
aas
and
andl
inc
imul
nop
fdivl
push
push
imul
push
dec
sub
xlat
xor
sti
mov
add
cmpsb
dec
push
insl
rclb
dec
lods
sub
jns
mov
or
pop
cmp
mov
es
push
je
inc
test
xchg
mov
jbe
test
xchg
cmpsb
xor
mov
rorl
pop
or
pop
dec
sbb
mov
inc
bound
addb
dec
loope
out
mov
and
adc
sbb
sub
addr16
movsl
add
testb
mov
jns
rorb
inc
imul
movsb
add
jge
jecxz
jno
aad
fwait
xor
test
dec
shll
stos
xor
repz
push
mov
mov
sub
mov
mov
inc
push
xor
cmc
and
cmp
mov
xchg
dec
fs
mov
test
dec
sbb
pop
loope
push
add
mov
je
pop
jl
jle
sub
sub
es
dec
cmp
lret
mov
xor
fldl
shlb
fs
mov
lock
push
adc
out
scas
sub
mov
cmpsb
sub
movsb
cltd
xchg
pop
sbb
sbb
cs
push
xchg
icebp
sub
pop
adc
adc
pop
test
movl
in
adc
mov
or
out
icebp
fsubs
adc
int
ficomps
addl
add
stos
ja
iret
xor
fwait
sub
aam
add
rcrb
xor
loope
lea
sbb
repz
rcll
cmp
inc
stos
stos
or
andb
push
xlat
cmpsl
bound
pop
jb
mov
adc
popa
lds
pop
sbb
and
push
int3
mov
cltd
or
in
jmp
cmpsb
xchg
mov
test
mov
cmpsb
popa
push
pop
and
or
sbbb
enter
stc
incl
pop
dec
and
push
movsl
vpmacsdqh
rol
imul
add
mov
lods
sub
and
lahf
push
adc
hlt
and
pop
movsb
call
icebp
push
ja
addr16
cmp
subps
pop
data16
nop
jmp
mov
test
push
enter
outsb
int3
cwtl
add
es
mov
adc
into
and
lock
or
adc
or
and
cmp
test
ja
popa
das
inc
mov
test
or
sbb
sbb
insb
inc
mov
bound
inc
mov
int3
clc
add
aam
mov
jg
mov
pop
xchg
push
xor
push
adc
lcall
hlt
or
scas
popf
xchg
mov
adc
adc
testl
jge
clc
mov
sub
add
mov
and
aad
test
inc
js
pop
and
adc
pop
stc
fwait
ret
fimuls
push
rcr
xchg
xor
fcoms
test
inc
inc
addl
test
lea
or
cld
orb
mov
sbb
mov
cmpsb
add
in
mov
pushf
lcall
mov
cmp
cli
or
or
push
loope
xor
push
mov
cmpsl
out
cwtl
sub
cmp
inc
sti
inc
or
push
and
insl
dec
test
inc
push
ljmp
hlt
and
pusha
pop
ss
les
xchg
ffreep
pop
mov
mov
add
shll
inc
fdivrl
or
scas
shlb
jg
pop
pop
xchg
sbb
dec
mov
pop
fisttpl
add
not
sti
fdivl
stos
and
adc
mov
lea
ja
inc
dec
aas
sub
xchg
addb
fndisi(8087
out
jecxz
inc
fdivr
jno
add
pusha
xor
insb
imulb
inc
mov
and
or
sbb
cwtl
fiaddl
mov
fsubrl
mov
nop
fldl
cwtl
aam
std
lahf
cmp
into
dec
pop
add
sbb
sub
mov
test
and
fcmovb
sbb
lret
or
pop
adc
push
in
orb
sbb
dec
dec
fidivl
mov
push
xor
test
js
xchg
stos
pop
jg
leave
add
loope
repnz
lahf
cs
xchg
sub
es
jo
inc
mov
pop
lds
xchg
mov
rol
mov
insb
dec
pop
lock
push
dec
inc
lods
mov
cli
mov
xlat
loope
adc
sbbl
aaa
loop
push
jecxz
or
mov
sub
mov
lahf
xlat
popa
sbb
icebp
sbb
test
xorl
sar
inc
dec
or
inc
mov
jg
loopne
or
cmp
arpl
jo
pop
pushf
int
test
pop
fsubrl
ljmp
jl
das
scas
cmp
pop
cmp
js
jae
lret
jo
pop
inc
mov
pusha
mov
daa
add
repz
movsb
or
pop
mul
xchg
loop
dec
mov
adc
xor
cmpsb
mov
into
into
sbb
ja
pop
and
mov
adc
and
xchg
and
adc
std
or
add
stos
sub
push
jecxz
push
aaa
adc
sbb
mov
es
mov
pop
jo
add
push
inc
clc
adc
xchg
lahf
stos
push
mov
dec
inc
lods
and
js
test
xor
aam
cltd
sub
dec
fildll
out
jns
mov
fimull
dec
sbb
jns
sti
insb
cmp
mov
test
pusha
xchg
mov
inc
sub
mov
adc
xchg
jg
shll
jmp
mov
or
shll
daa
xor
daa
push
push
jo
stos
ret
inc
and
or
daa
cmp
cltd
test
cmpsl
sbb
scas
xor
mov
inc
addr16
mov
push
adc
jecxz
adc
adc
out
adc
addl
push
dec
inc
subb
fld
pop
mov
pop
adc
mov
push
sbb
cmp
movups
hlt
fadd
incl
cmpsb
xor
xlat
add
and
fisttps
xor
adc
mov
adc
loop
push
dec
data16
jne
repz
xor
ret
xor
cwtl
insb
pop
mov
and
add
xlat
add
inc
movsl
aad
insl
inc
stos
sbb
sbb
push
sbb
and
out
cmpsb
aas
cwtl
test
pop
cli
sbb
mov
ret
mov
inc
and
inc
outsl
pop
add
cmp
fidivl
adc
and
pusha
dec
sbb
push
out
les
movsb
ret
sub
insl
push
or
loopne
and
xchg
dec
gs
mov
mov
js
add
outsb
sub
cvtpi2ps
push
xchg
sbbb
or
pop
enter
push
ss
xchg
jp
les
cmovbe
sbb
dec
in
jae
sub
and
xor
mov
popa
aad
xor
cmp
std
adc
test
jecxz
mull
or
add
dec
sub
mov
jp
xor
rcll
fwait
push
push
imul
sub
pop
je
popa
mov
sub
pop
stos
cmp
add
jg
and
int
jb
mov
bound
imul
mov
and
sbb
jle
add
out
adc
cmp
dec
mov
sbb
in
shll
jge
clc
pusha
adc
or
push
movsb
fists
mov
or
int3
adc
or
inc
adc
xchg
mov
xchg
mov
lea
add
xor
mov
mov
adc
sub
fisubl
dec
pop
sbb
pop
mov
jno
xor
push
inc
inc
out
lock
dec
lret
sub
cmpsl
fisubrs
mov
xor
ljmp
xor
fiaddl
outsb
add
jg
aas
dec
xchg
jg
sub
cld
fwait
shrb
insb
pop
pop
clc
nop
out
pop
fmull
ja
add
lret
or
out
fs
lret
pop
test
call
gs
pop
xchg
or
mov
xchg
std
shr
testl
xchg
or
aad
pop
fistl
mov
cli
clc
inc
jne
js
xchg
and
sbb
pop
lock
push
les
mov
jg
subb
adc
cmp
or
out
in
mov
popa
mov
and
mov
push
jmp
sbbl
dec
shrb
pop
aam
push
aam
sub
cmp
fdivrs
sbb
xchg
in
inc
sub
sub
vmovshdup
push
arpl
add
pop
and
leave
push
in
or
fcomps
sahf
add
in
pop
fistps
jecxz
jge
rolw
scas
push
add
xchg
into
lahf
cld
push
or
int
mov
push
mov
dec
pop
push
xor
popa
mov
aas
sbb
jne
cld
cs
es
mov
lret
or
lods
pop
shlb
out
sbb
xor
jae
imul
mov
sub
mov
pop
je
cld
xor
dec
pop
fsubl
shll
xchg
and
rcl
adc
xor
dec
loopne
sbb
adc
cmp
inc
or
leave
test
stc
cmp
cmp
push
rcrl
and
push
xlat
push
lods
jne
mov
repz
lods
insl
lahf
cmp
fwait
pop
pusha
out
es
into
mov
aaa
cld
push
out
iret
mov
lahf
sbb
xor
lods
pop
shl
or
lret
lret
push
dec
scas
push
stc
and
repz
mov
rcrl
sbb
lods
outsb
insl
mov
daa
test
add
and
mov
xor
lock
test
repz
fbstp
bound
cmc
imul
cmp
lds
inc
cmpsb
hlt
stos
jmp
into
sbb
jno
in
cmp
or
sbb
cmp
outsl
jne
adc
and
xor
in
add
mov
ljmp
cmp
sbbb
and
jl
pop
push
sahf
add
adc
lret
nopl
sarb
push
mov
or
fisubrs
out
cwtl
scas
lcall
loope
shl
dec
test
neg
ja
aas
sti
clc
push
xor
sub
lods
data16
mov
aaa
arpl
aaa
jl
add
stc
scas
loop
in
loop
jle
push
fnsave
adc
insb
jp
ficoms
cld
std
mov
xchg
inc
popa
test
add
test
icebp
in
cmp
pop
pop
repnz
ds
adc
icebp
xchg
or
icebp
mov
inc
loopne
add
push
ds
add
cmp
out
dec
jbe
mov
stos
pop
cmpsl
sti
jg
fimull
or
ss
add
inc
js
notb
jle
jbe
sub
jb
xchg
sub
dec
lods
pop
cld
pop
push
clc
push
jl
movsl
cmpsb
jno
lahf
jecxz
pop
fmuls
icebp
les
xor
push
jmp
adc
mov
ds
stos
aas
or
and
jne
push
add
fnstsw
push
mov
into
outsb
mov
aam
or
aad
xlat
jl,pt
fldt
int
scas
or
inc
stos
mov
ret
cmp
loope
mov
or
sub
rcrb
mov
sub
add
xor
shl
push
sbb
test
adc
sahf
ret
and
lds
js
cwtl
jb
pop
pop
insl
sbb
xchg
ret
push
sub
jo
sub
push
sub
mov
xchg
and
xchg
mov
pop
fistpll
or
ja
ret
lret
pop
adc
pop
outsl
call
out
shll
std
xor
std
push
and
sahf
sub
xchg
sub
jecxz
cwtl
js
pop
add
aad
sbb
sub
adc
cmpsl
sarb
aam
push
mov
jl
das
push
sbb
incl
sub
ds
icebp
jb
jbe
xor
ret
push
ds
cmpb
add
imul
mov
jne
add
push
in
das
mov
je
shlb
jl
rorl
mov
bound
mov
orb
clc
cmp
ja
sbbb
mov
mov
or
push
dec
xchg
pushf
and
pop
sub
mov
jb
cmpsb
adc
movsb
das
dec
xchg
hlt
xchg
inc
lds
mov
sub
icebp
scas
pusha
add
lods
cmp
neg
cld
mov
pop
loope
xor
xchg
mov
pushf
lahf
clc
lahf
sbb
cwtl
fst
faddl
cmp
lods
cmp
sar
shrl
pop
push
mov
popf
or
insl
push
rcll
add
mov
and
movsl
mov
lret
icebp
add
push
loopne
mov
fdivl
dec
jecxz
clc
fidivl
mov
pushf
xor
loop
jae
adc
jg
es
cmp
shrb
lods
xor
ss
sub
push
jg
xor
jg
xchg
das
popf
iret
cmpsl
xchg
cltd
cwtl
in
cli
popf
jo
in
sub
out
stc
call
stc
cmp
lock
push
mov
smsw
out
pusha
icebp
fiaddl
mov
imul
add
adc
adc
sbb
testb
jecxz
cwtl
inc
aam
xchg
lock
out
add
andnps
mov
jns
rcrb
movsl
int
nop
bound
cmp
unpckhps
add
stos
stos
mov
mov
or
das
addl
das
lcall
jmp
mov
pusha
pop
jns
movq
insb
jl
out
inc
out
pop
pop
jb
mov
aaa
loope
xor
pop
jecxz
cli
ljmp
xor
xchg
mov
js
cmp
aad
ror
mov
xchg
cmc
in
or
ss
sarl
mov
popl
mov
roll
fcompl
inc
cmpsb
in
lods
add
xor
subl
cmc
rcl
je
jmp
cmp
mov
mov
cmp
xor
imul
or
cmp
repnz
jg
add
pop
flds
jne
mov
test
xchg
testb
lahf
pop
enter
xchg
shr
jl
jmp
mov
lcall
sarl
push
sbb
fs
adc
loope
mov
dec
mov
pop
ficoms
mov
mov
out
push
adc
icebp
rorb
or
shrb
mov
imul
mov
out
enter
sub
add
dec
loopne
les
jb
out
xor
adc
vpmaxuw
pop
cld
mov
push
adc
push
ds
sbb
aas
outsl
test
fs
cs
negl
jmp
xchg
jecxz
dec
testl
loop
jl
mov
add
inc
push
aaa
jnp
jbe
inc
or
jl
jecxz
gs
adc
xor
xorb
mov
mov
adc
mov
sub
pop
cmp
inc
outsl
aas
es
js
or
push
mov
push
xchg
cmp
cmp
mov
xor
hlt
call
mov
jecxz
adc
sub
ljmp
std
sahf
and
loopne
ljmp
push
shl
bound
mov
jl
jl
pop
lods
jle
fnstcw
xchg
rorb
sbb
jae
xor
cld
or
aad
mov
ret
adc
loope
xor
out
fdivrs
push
insl
clc
xchg
mov
xchg
push
jl
fildll
dec
insb
out
sbb
sahf
jl
fiaddl
rol
iret
pop
shrl
cmpsb
mov
mov
ret
fnstcw
lods
fnsave
mov
jl
fldl2e
add
sub
xchg
pop
sbb
mov
pop
jo
mov
mov
sub
and
sub
inc
lahf
cmp
mov
lea
and
cwtl
dec
pop
add
push
mov
mov
or
push
pop
cmp
shlb
jle
push
pop
mov
xor
dec
cmpl
je
in
mov
mov
popa
mov
lods
pop
inc
mov
das
adc
lahf
out
addr16
dec
js
nop
movsb
fdivs
mov
add
sbb
jmp
out
jg
cld
pop
sbb
enter
pop
dec
data16
fbld
ret
xchg
cmp
xor
mov
ret
dec
incl
mov
je
dec
pop
inc
mov
xor
xor
mov
data16
jae
inc
and
lds
adc
cmp
jbe
push
mov
sbb
jae
jge
or
sbb
mov
cwtl
push
mov
inc
hlt
divb
or
inc
ds
dec
cli
das
fadds
push
jne
xchg
dec
js
mov
or
arpl
lea
ffree
loopne
dec
jns
lods
add
adc
push
sahf
inc
movsb
or
dec
in
pushf
jo
pop
or
fsubl
or
mov
mov
idivb
dec
popf
sbb
filds
mov
sbb
pop
mov
mov
mov
popa
jne
mov
push
les
inc
mov
adc
jle
sbb
pop
divb
push
lock
add
lcall
rorb
outsb
imul
roll
jg
mov
lret
rcll
push
sub
loope
xor
cld
mov
or
xchg
xlat
xor
mov
add
pop
mov
add
adc
mov
jno
pushf
cli
icebp
inc
rclb
hlt
adc
stos
xchg
cli
mov
add
test
test
mov
sbbb
inc
sarl
mov
jle
mov
adc
jne
push
ljmp
pop
xchg
cltd
pop
push
mov
jo
addl
ss
in
ret
mov
cmp
gs
push
dec
xlat
xor
xor
fisubrl
xor
pop
or
xor
ja
pop
sub
loop
lods
cmpsl
pop
pusha
sub
mov
je
mov
dec
pop
lods
ss
clc
add
mov
add
mov
shl
sub
cmp
mov
ds
sub
mov
adc
ljmp
pop
lock
or
pop
mov
mov
and
add
push
ret
cmp
sahf
and
dec
mov
sub
loopne
xchg
out
add
add
cmp
mov
or
jae
loope
sbb
iret
ret
mov
mov
cld
fcoms
dec
bound
sbb
leave
aaa
inc
cld
aad
sbbb
in
icebp
sub
ficoms
ret
icebp
pop
fidivrl
cld
jnp
flds
add
sub
jl
add
dec
push
int3
sbb
mov
and
div
mulb
push
and
rorb
shl
lock
cltd
cmc
loope
mov
cs
decl
pushf
dec
aaa
mov
lret
or
ds
rclb
popa
xchg
and
in
xchg
pop
push
xor
pop
pop
pop
xchg
loop
aad
rorb
cli
jo
pop
mov
dec
cld
aam
inc
in
jnp
sbb
iret
sub
fcompl
or
push
loopne
mov
insb
cmp
jle
insl
sub
movsl
les
push
addl
add
ss
and
test
int3
mov
push
loope
mov
mulb
jb
mov
sbb
jmp
lods
sub
scas
adc
mov
pop
rcrl
imull
dec
pop
hlt
xchg
sbb
pop
ljmp
push
addb
mov
dec
in
int
pcmpgtb
mov
out
fyl2xp1
adc
pop
push
jno
outsl
rorl
addr16
pop
add
xor
les
rorl
xchg
mov
mov
lds
pushf
xor
mov
movsb
xor
lock
lods
fildll
inc
nop
or
sbb
in
aaa
mov
push
outsl
sbb
push
leave
fbstp
leave
lret
or
rolb
push
adc
into
das
push
rcr
jle
stc
or
jge
sub
out
or
enter
mov
dec
loop
icebp
nop
inc
jnp
sti
sub
or
dec
ljmp
xlat
or
and
sbb
shlb
dec
jmp
mov
jl
cmp
pop
jp
pop
gs
decb
scas
add
stc
mov
xor
lds
idiv
lock
ret
in
testl
fwait
lods
cld
cmpsl
push
xor
fwait
xchg
cmp
out
xorl
dec
loope
je
xchg
xchg
je
mov
call
cmp
scas
mov
push
dec
sub
inc
popa
and
xchg
cwtl
cltd
adc
mov
in
jno
insb
adc
sbb
or
jb
int
mov
lahf
mov
bound
adc
aas
jb
arpl
ret
mov
jle
xor
hlt
clc
pop
rol
adc
mov
data16
loopne
adc
or
adc
addr16
mov
scas
jmp
out
push
popa
xchg
lock
cs
enter
pop
jge
or
dec
jp
outsb
out
ficompl
inc
sub
mov
outsb
out
xor
mov
push
popf
jecxz
add
mov
and
je
jge
jle
or
fsub
sti
mov
mov
or
mov
inc
clc
int3
stos
adc
arpl
pop
out
incl
xchg
ljmp
arpl
je
adc
orb
and
repnz
das
xchg
mov
and
push
sub
mov
or
xor
xor
rorb
and
jp
and
dec
popl
in
lcall
pop
jmp
mov
mov
mov
sbb
cmp
das
jecxz
lods
push
inc
mov
sbb
jb
sti
imul
add
stos
inc
xchg
mov
cmpsb
sub
mov
dec
pop
xor
sbb
insb
fmuls
dec
cmp
daa
mov
add
test
mov
adc
mov
cmp
sbb
xchg
jl
shll
mov
jno
cmc
push
adc
jbe
call
pop
mov
fistpll
pop
inc
ret
push
js
addb
lods
insb
and
daa
scas
dec
adc
jo
nop
mov
mov
jg
dec
push
cmp
insb
mov
clc
dec
push
mov
test
movsb
pop
icebp
clc
stos
cmp
and
sbb
mov
insb
inc
mov
lcall
adc
ja
scas
add
mov
dec
mov
mov
shrb
mov
cmp
xchg
adc
aas
loop
push
pop
add
rolb
insl
js
xorb
mov
clc
lds
inc
cmp
or
cmpl
cmpsl
jge
dec
daa
jae
and
mov
xor
lea
mov
dec
and
sbbl
push
mov
jne
xchg
and
into
cli
loopne
fs
mov
icebp
sub
sbb
mov
sbb
ljmp
loope
aam
loope
icebp
mov
pop
xor
xchg
inc
mov
jl
inc
roll
test
xor
mov
dec
push
lea
push
aaa
mov
lea
add
ret
pop
cmpl
mov
inc
flds
mov
out
or
cmp
inc
mov
and
push
xor
lea
or
and
call
sub
iret
dec
popa
rcll
push
mov
cmp
popa
pop
add
sbb
dec
lock
pop
jle
les
sbb
mov
sub
or
xchg
mov
fsubs
sbb
adc
xchg
push
pop
cld
xchg
sti
fmull
gs
or
mov
adc
jo
in
rol
fildll
jg
inc
mov
enter
pop
cmp
fimull
push
fs
lret
popl
or
jbe
inc
fwait
hlt
sbb
or
insb
rcll
xor
lock
insb
bound
sbb
mov
mov
insl
bnd
enter
inc
stos
dec
push
pop
adc
gs
cmp
fistl
in
inc
sub
ds
aam
imul
lret
or
das
push
cld
das
bound
inc
push
mov
stos
test
mov
xchg
dec
pop
pushf
push
cmp
mov
mov
mov
ret
cltd
inc
xor
fiadds
push
test
add
int
xorl
dec
call
cmpsl
mov
sub
fcoms
jge
les
dec
in
push
and
adc
sub
pop
out
mov
es
push
lods
add
xchg
divl
sub
jge
push
cli
or
inc
and
push
add
cld
shll
add
popl
adc
mov
mov
mov
push
in
inc
dec
xchg
pop
xchg
pop
cld
push
sbb
mov
push
aaa
inc
xor
jbe
jb
sahf
icebp
bound
push
jg
data16
js,pt
sar
dec
jo
xchg
xor
fisttpll
fcmovnb
adc
lock
mov
cld
mov
aam
scas
mov
loope
repnz
icebp
or
jae
bound
cmp
ret
test
pop
clc
fdivl
mov
mov
pop
int3
adc
push
adc
cwtl
bound
popa
int
push
pop
pusha
add
mov
cmpsb
xor
dec
mov
out
push
jge,pt
fmull
movsl
int3
add
lds
or
bound
mov
frstor
or
repnz
fdivrl
out
push
mov
sub
mov
hlt
test
mov
xor
jae
mov
dec
mov
je
test
arpl
jbe
dec
clc
jg
add
sarl
jo
fcomps
add
mov
mov
in
cmp
xchg
xor
push
mov
fimuls
and
add
cmp
sub
fdiv
mov
mov
mov
sub
out
cli
and
pop
and
clc
call
je
xor
cld
mov
inc
cmp
stc
test
add
les
sub
or
js
das
out
pop
xchg
mov
sarb
jg
sti
enter
dec
aaa
inc
cmp
jb
adc
imul
loope
test
xor
fwait
aad
mov
push
push
mov
adc
push
xor
cmp
xlat
addr16
idivl
shrb
dec
inc
dec
stc
xchg
lcall
push
test
xchg
shlb
sbb
pusha
mov
pop
ficompl
scas
inc
mov
ljmp
lock
fldl
hlt
ja
push
sub
adc
iret
jg
pop
fs
xor
dec
or
repz
pop
xchg
adc
sti
sahf
fst
jmp
jbe
pop
ljmp
push
ss
stos
out
sarb
jmp
ja
sub
popa
rorl
mov
movsl
mov
add
sbb
lcall
ret
add
fdivrs
pop
xor
mov
dec
xchg
stos
out
cli
arpl
mov
cwtl
les
aad
stos
adc
mov
inc
or
aaa
cs
dec
orb
sbb
jp
pop
imul
shll
cmp
insb
cmp
or
mov
fsubl
or
cmpsb
fdivl
scas
test
inc
push
orb
leave
push
test
and
push
andl
adc
cmp
shll
mov
outsl
push
mov
out
pop
idivb
dec
clc
or
push
test
push
fdivl
mov
cmp
addr16
sbb
nop
jecxz
inc
andb
sbbl
mov
test
adc
ret
test
mov
cwtl
arpl
cmp
mov
mov
mov
xor
xchg
mov
or
and
or
inc
mov
or
cmp
lea
js
nop
outsl
insl
icebp
inc
push
lcall
and
movsb
sbb
scas
sub
and
xor
sbb
ffree
and
mov
cmp
lods
pop
repnz
out
inc
scas
fcmovbe
jl
dec
xor
das
testb
inc
push
adc
xor
or
pusha
ss
dec
pop
xor
or
pop
sbb
lods
shrb
push
mov
pop
dec
inc
push
mov
and
mov
scas
add
add
rolb
sbb
push
mov
push
jecxz
cmp
cwtl
decb
in
mov
popa
push
lock
dec
push
out
stos
std
mov
fwait
inc
xchg
fcmovu
inc
sub
scas
sbb
jae
loope
adc
loop
and
out
push
jno
push
shl
daa
mov
xor
ret
test
sbb
faddl
adc
and
pop
ror
adc
cmc
faddl
je
fbstp
imul
cld
test
sbb
mov
pop
test
rcr
push
inc
aad
push
dec
mov
jo
jp
mov
ljmp
add
inc
repz
add
push
bound
sbb
xor
xchg
inc
mov
in
stc
ficomps
sbb
push
enter
jmp
ja
push
iret
or
and
add
repz
pop
sbb
out
cmpsl
and
cmp
jno
aas
push
test
add
shl
and
sbb
pop
xor
fsubrl
repz
jl
cmp
adc
jmp
mov
mov
jge
sbb
pusha
popa
xchg
enter
aaa
mov
cmp
lds
cmpb
xchg
jmp
push
mov
add
inc
inc
mov
inc
outsl
ds
sbb
shlb
in
mov
push
xchg
test
inc
das
std
int
sub
adc
mov
xchg
sbb
lock
pushf
leave
fnstcw
bound
push
push
pop
sub
pop
clc
mov
push
jge
aaa
push
ja
clc
fs
bound
push
setnp
add
movsl
std
cmpsl
aas
add
cld
dec
mov
aaa
xor
sbb
les
lcall
push
aad
adc
add
gs
subb
lods
sub
or
pop
push
enter
lea
lahf
ss
mov
add
sar
jnp
mov
dec
pop
popf
stos
mov
pop
test
lea
rol
in
sbb
add
das
sbb
jmp
or
fcomip
cmp
push
cmp
adc
lret
or
push
mov
les
daa
outsl
roll
push
pop
testb
jo
adc
out
push
cmpsl
and
hlt
lret
aas
mov
jg
rcrl
mov
add
mov
rcl
push
sbb
push
test
mov
fs
inc
mov
or
lds
aaa
insl
movsl
mov
inc
xchg
jl
scas
cmp
in
or
mov
mov
mov
ss
popa
xchg
fwait
out
hlt
sarl
dec
loopne
push
sbb
xor
jae
shrl
cwtl
lock
sbb
adc
out
fwait
dec
in
imul
jg
mov
mov
jb
and
loop
mov
or
sbb
ss
insl
fnsave
mov
sub
sbbl
pop
fisubrs
or
insl
mov
mov
in
mov
push
or
sub
xlat
data16
jnp
test
out
pop
adcl
jb
sahf
fildl
adc
aaa
adc
add
std
sbb
loop
stc
enter
nop
mov
mov
mov
outsb
jmp
aaa
and
ljmp
inc
pop
cmp
cmpsl
add
push
fwait
dec
fs
mov
les
dec
int3
les
movsb
xorb
mov
or
addb
inc
popa
cltd
dec
xor
or
ficompl
mov
pop
mov
cwtl
loope
inc
ret
adc
cwtl
das
push
incl
and
inc
xchg
inc
xchg
lret
cld
leave
adc
adc
or
cmp
jmp
jbe
xchg
xor
push
in
mov
fs
mov
sub
inc
add
fwait
sub
jl
pop
loop
push
pop
das
sub
test
jle
mov
sahf
ret
mov
ss
mov
xchg
add
cmp
mov
push
icebp
repnz
mov
mov
sub
loop
js
fwait
shll
ja
sbb
sbb
jl
loop
pop
adc
rcl
faddl
and
callw
mov
sbb
arpl
or
mov
jge
xorb
xchg
stos
or
push
sub
push
inc
jno
in
fs
push
scas
pop
cld
stos
jg
leave
add
push
and
mov
add
in
jge
sub
adc
mov
int3
js
or
mov
dec
mov
sbb
mov
mov
jb
cmp
dec
pop
adc
inc
mov
pop
mov
jmp
outsl
mov
out
dec
or
push
xchg
stc
ror
jmp
loop
outsb
roll
icebp
xor
pop
pop
xor
push
test
pusha
movl
dec
insb
adc
cmp
sub
push
aam
push
mov
cmp
sarl
jg
dec
dec
jge
sbb
mov
push
mov
and
push
push
cmp
rorb
out
mov
loope
cmp
js
movsb
and
jns
cmpsl
scas
push
push
in
sbb
and
sti
sbb
and
repz
cwtl
mov
adc
popa
inc
scas
or
popl
mov
cmp
in
iret
pop
es
sbb
lods
pop
stos
les
push
fnstenv
adc
cmp
out
cmpsb
xchg
or
enter
fcom
pop
jno
mov
push
rcrb
mov
pop
cmc
push
sbb
add
pop
push
out
mov
aaa
clc
test
push
icebp
push
inc
sub
and
fcmovnbe
and
cli
sti
push
or
dec
lret
loope
inc
and
in
cltd
push
scas
add
or
fadds
adc
repnz
pop
lock
xchg
adc
popf
stc
jbe
addl
aas
movsl
cli
jecxz
test
das
jmp
fwait
jmp
lods
cmp
pop
mov
push
dec
aad
mov
and
loop,pn
lods
loopne
and
movsb
push
xchg
sahf
sbb
inc
movsl
js
adc
lock
insb
dec
outsb
inc
fdivrp
pop
loopne
cli
out
fwait
sub
inc
mov
jo
enter
nop
mov
inc
mov
add
and
or
cmpsb
or
lock
mov
inc
sub
and
pop
sub
and
adc
jb
scas
loope
or
lds
push
nop
xor
mov
add
popf
lods
mov
mov
fsubrs
sub
sub
xchg
mov
lock
int
xor
loopne
insb
fbstp
stc
cmp
fistpl
xchg
scas
inc
clc
iret
push
push
arpl
add
imul
mov
test
sub
rolb
adc
xor
shlb
cmovno
insl
repnz
and
in
loopne
inc
inc
sbb
xor
push
jo
adc
rclb
lcall
mov
or
pop
sub
in
in
mov
mov
cli
clc
sub
mov
stos
jno
mov
test
in
mov
push
icebp
jne
repz
push
shl
lock
cmp
mov
add
ljmp
lahf
movsl
icebp
mov
add
daa
lret
inc
push
add
fcompl
dec
orb
mov
ret
and
idivb
ljmp
mov
sahf
inc
adc
mov
inc
xchg
repnz
push
shll
push
loopne
xor
or
pusha
and
mov
popf
jle
jbe
push
lret
mov
dec
cwtl
nop
lock
loopne
popa
mov
loop
inc
loope
outsb
mov
push
dec
fadds
pop
call
sbb
and
movsb
lods
xchg
sbb
in
or
xor
aam
push
mov
fwait
es
dec
push
loope
icebp
sbb
jae
xchg
push
rcrb
dec
add
mov
adc
js
jb
push
push
pop
scas
xchg
imul
jae
out
jmp
add
in
and
ret
js
cmp
inc
mov
fcoms
enter
sub
aas
cmpsb
fldt
mov
push
push
sarl
sbb
xor
mov
es
and
cs
or
das
out
out
jnp
and
xor
mov
jge
or
add
std
xor
int
std
popa
clc
outsl
call
pushf
add
pop
fidivs
mov
push
je
pop
and
frstor
jno
cmp
jae
ret
inc
test
pop
jp
xchg
jo
or
or
xchg
dec
inc
cli
clc
xor
push
mov
loop
fdivs
call
or
cmpb
push
push
and
jbe
movsl
xor
inc
xor
jne
xorl
jecxz
mov
insb
mov
stos
xor
pop
push
or
ret
mov
add
popf
pop
dec
popa
xor
pop
ss
les
mov
sbb
loopne
push
mov
add
rclb
adc
mov
insb
sahf
mov
cmp
popa
push
loope
je
push
push
sub
das
xchg
lret
clc
int
add
movsb
loope
div
push
jmp
scas
mov
fcompl
sbb
clc
mov
adc
xchg
std
xchg
or
sbb
mov
sub
push
adc
js
and
xor
aas
rorb
add
nop
mov
outsl
mov
gs
push
int3
icebp
dec
pop
sti
ja
stos
or
xchg
sbb
mov
rclb
filds
cmpsb
sbb
call
lds
adc
cmp
jbe
dec
rcrl
push
mov
mov
mov
adc
jl
clc
xchg
pop
jo
push
stc
mov
add
lods
les
mov
ficoms
dec
fsubr
mov
inc
jp
repz
adc
mov
inc
jnp
aaa
cld
clc
imul
dec
or
push
popf
ret
neg
and
lahf
addl
jb
adc
mov
mov
test
add
dec
in
inc
ss
stos
loope
inc
pop
data16
and
repnz
sbb
or
ds
xlat
adc
adc
xchg
fnstsw
pop
sahf
sub
sbb
inc
push
lcall
enter
sub
daa
jle
ss
and
loopne
dec
adc
pop
pushl
jo
bound
popl
jg
xor
loop
dec
insl
mov
push
and
test
sub
ret
rclb
sti
xor
push
je
je
das
mov
sub
add
mov
xor
addr16
clc
or
mov
aad
push
adc
insb
mov
sub
out
dec
sbb
sahf
sbb
dec
mov
out
cmp
dec
dec
xor
mov
pop
mov
divl
mov
das
xor
mov
fldl
clc
testb
sub
clc
mov
push
xchg
add
or
push
aam
jae
sub
and
loope
punpcklwd
iret
pop
shll
sbb
test
rcrb
mov
adcb
sti
add
enter
add
lods
dec
jbe
loopne
icebp
scas
cmp
sbb
iret
and
movsb
fdiv
or
push
push
pop
mov
dec
inc
out
outsb
nopl
cld
push
sbb
inc
jo
add
andb
and
mov
in
xchg
int3
pop
jae
xorb
decb
test
xor
inc
mov
bound
xor
rorl
test
sub
add
or
sub
stos
shrb
xor
bswap
rcrb
ss
lods
enter
fisubrl
sbb
xlat
push
adc
adcl
push
or
shll
int
sub
dec
mov
mov
adc
pop
add
jp
dec
and
stc
or
sbb
addr16
xchg
fdivp
mov
adc
xor
cmp
orb
in
adc
adc
sub
rcl
pop
cmp
push
rorl
out
jg
hlt
mov
xlat
xor
mov
fwait
jnp
xor
sahf
fmuls
sub
pop
into
repnz
ja
and
and
test
mov
mov
add
es
and
pop
push
js
int3
movsl
push
dec
or
shlb
xor
push
mov
mov
dec
jae
fwait
mov
cmc
movsl
sub
push
cmpsw
in
std
push
mov
ds
outsl
rorb
enter
pop
dec
jb
negb
lahf
xlat
pop
imul
fidivrl
and
xchg
sub
cmp
jle
repnz
sub
add
into
mov
or
pop
cmp
int
ret
das
fidivs
and
outsl
mov
add
mov
and
out
inc
data16
and
mov
int3
loope
lret
icebp
ret
adc
pop
inc
incl
leave
cmpsb
and
sub
ror
mov
stos
mov
cmp
add
xchg
xchg
loope
add
aaa
out
aam
mov
xor
pop
pushf
out
ja
sbb
test
addl
out
into
aam
adc
jge
adc
loope
pop
fdivs
pop
mov
pop
mov
xchg
cmp
add
sahf
mov
fs
outsl
push
inc
inc
sub
xor
std
add
push
sti
xor
addr16
test
inc
loop
ljmp
dec
or
pop
push
jae
jnp
ret
mov
cmp
roll
aaa
and
add
lcall
test
jecxz
daa
xor
lds
push
dec
mov
fdivr
mov
in
push
push
ja
and
push
pop
cmpsb
adc
jne
and
popa
cmp
gs
or
inc
or
mov
dec
inc
adc
hlt
pop
dec
jbe
decb
push
add
cmp
sarb
xor
inc
pop
ss
mov
in
push
mov
lock
push
push
outsl
js
xchg
in
add
sub
mov
jae
mov
add
inc
or
push
imul
lods
cwtl
ss
push
or
dec
or
pop
push
fs
pop
enter
dec
push
es
sub
lea
int
cld
cmpsl
push
push
add
push
and
mov
mov
subb
fs
pop
mov
or
dec
and
or
bswap
insl
shl
test
push
hlt
add
orb
mov
repz
icebp
and
push
insl
cmp
xchg
pop
push
add
sbb
xor
dec
fdivs
jns
mov
ret
mov
sbb
jo
xor
mov
adcl
popa
jo
insl
int3
add
divb
push
xor
push
push
shl
lds
popf
jno
jg
or
pop
shrb
je
call
mov
lea
ret
mov
pop
add
bound
mov
notl
mov
ds
push
push
jp
add
xor
sub
push
stos
loopne
aas
xor
cwtl
gs
mov
fisttps
xchg
or
push
xor
push
mov
push
cmpsb
mov
shll
pop
jmp
je
xlat
loopne
sub
arpl
inc
inc
cli
pop
loopne
add
adc
arpl
pop
mov
sub
call
in
cpuid
and
and
jo
test
lea
dec
add
addr16
mov
inc
and
or
mov
ror
push
dec
jb
mov
inc
daa
cmc
push
mov
jmp
shrl
js
insb
sbb
iret
imul
out
cmpsb
mov
shrl
and
mov
mov
aam
ja,pt
fistps
sub
inc
jl
mov
loopne
scas
adcl
inc
icebp
lahf
xchg
popa
and
icebp
or
lea
mov
call
testb
and
aam
adcl
xor
or
dec
sub
push
stos
or
mov
lods
popf
xor
in
mov
cmp
push
cmpsl
push
xchg
or
ljmp
mov
cmp
sbb
hlt
xchg
xor
les
mov
aam
dec
es
cmp
orb
ljmp
mov
les
mov
pop
pop
fsubr
in
sub
scas
xor
outsl
jo
mov
lea
je
loope
or
or
xchg
push
sarb
jp
fdivr
adc
pop
cmc
pop
push
addr16
cmp
jg
pop
shrl
fs
movsl
scas
push
aam
jl
xlat
sub
mov
add
inc
jecxz
dec
and
inc
das
cmp
lds
test
popf
sub
sbbl
int3
push
pop
negb
cli
rclb
dec
lock
test
xchg
shrb
test
sbb
test
shrb
shrb
pop
daa
loope
aas
rcll
mov
cwtl
les
je
push
pop
jmp
push
push
loop
cmpb
pushl
push
xor
and
cmp
cmpsb
loope
push
jg
adc
aaa
push
jg
pop
adc
or
stc
imul
mov
cmp
sub
push
mov
cmp
outsb
fiadds
inc
clc
cmp
lea
pop
cmp
lcall
mov
ret
mov
das
not
inc
mov
xchg
or
and
push
dec
dec
jecxz
and
mov
sub
xor
dec
jg
das
push
sub
or
xor
aam
adc
test
and
je
inc
push
adc
mov
add
cmp
cmpsl
std
clc
dec
mov
or
ret
ljmp
xor
mov
arpl
mov
stc
pop
cmp
sub
jno
repnz
mov
lock
stc
xchg
ljmp
scas
lods
push
xor
cwtl
gs
ljmp
and
pop
sysexit
dec
adc
cmpsb
popa
outsb
xlat
dec
loope
jecxz
ud2
xchg
repnz
xchg
cli
dec
nop
mov
orb
fwait
mov
pop
mov
pusha
lcall
fistpl
or
push
std
sub
scas
popf
sub
rorb
inc
mov
rorb
adc
jne
mov
pop
les
cmp
lock
test
jno
xchg
out
mov
xchg
and
cmp
pop
add
fdivrp
add
leave
cwtl
cmp
sarb
enter
mov
fs
std
adc
shrb
mov
push
stos
jp
lds
aad
adc
fimuls
cmp
push
clc
cs
push
ret
std
xor
mov
aas
mov
xchg
mov
push
dec
stos
fisttps
mov
mov
mov
mov
or
mov
xlat
ret
sbb
xchg
sahf
mov
sbb
inc
pop
lods
sbb
jmp
hlt
lcall
cmp
stos
inc
pop
push
sbb
mov
scas
fchs
xchg
popa
stos
cltd
shr
ds
es
shld
shl
test
mov
cmc
incb
inc
cmp
dec
and
and
or
inc
cltd
addb
es
rolb
in
sbb
add
add
push
std
push
pop
cmp
push
add
outsb
shlb
movsbl
xor
cmp
sbb
imul
dec
cmc
aam
adc
in
mov
pop
aaa
mov
cmp
mov
adc
mov
outsb
sbb
aad
jmp
shr
cmc
pop
pop
mov
or
dec
xor
testl
adc
push
jbe
fimull
incl
aam
data16
movsl
call
or
xor
ret
pushf
mov
jle
xlat
cli
movsb
out
xlat
adc
orb
xchg
cmpsl
mov
pusha
lret
pop
testl
push
pop
clc
jo
xor
mov
incl
mov
push
call
xorb
mov
adc
fs
shlb
adc
mov
movsl
sub
orb
mov
and
adc
popa
mov
pusha
lock
and
mov
inc
sub
push
cwtl
push
xor
call
push
and
arpl
icebp
jge
push
dec
xchg
mov
cld
pop
jge
dec
adc
jns
out
cld
popa
jo
or
push
sarb
pop
mov
cmp
pop
inc
inc
mov
mov
shlb
dec
lock
jne
pop
dec
dec
push
in
int3
out
pop
push
mov
lcall
rcl
ret
pop
sub
je
stos
orb
inc
add
movsb
sub
addl
daa
addl
sahf
popa
adc
out
fbstp
arpl
adc
jno
adc
jb
std
or
cmc
sbb
inc
iret
mov
and
imul
jecxz
mov
iret
jae
call
addr16
xor
std
xchg
cmc
ss
adc
cmp
cmp
movsl
xor
dec
test
or
scas
xor
push
adcb
adc
xchg
jge
ljmp
gs
sub
and
add
pop
push
and
sbb
sbb
and
jmp
shrl
nop
psrlq
cmpsl
push
dec
je
andb
cld
loop,pn
jnp
lds
lahf
in
pusha
rclb
mov
mov
adc
test
mov
lods
sub
xor
or
sbb
aad
push
lods
sbb
lea
sti
adc
push
lock
xchg
sar
les
aam
jbe
call
push
popf
xchg
subl
inc
insl
mov
or
add
stos
push
fs
mov
clc
pop
mov
add
dec
mov
add
xchg
mov
fdivrl
loopne
test
and
adc
xorb
test
xor
add
push
or
add
dec
mov
shl
xor
mov
and
shr
std
jp
shlb
xor
loop
outsl
cmpsl
daa
dec
cltd
cli
lds
and
mov
les
aas
rolb
ret
pusha
subl
loop
lret
cld
ficoml
sbb
push
dec
jg
lods
in
std
and
mov
ret
xchg
nop
fisubrl
dec
jo
sti
push
incb
aad
sub
lods
adc
rolb
jp
jae
push
xor
shlb
push
lods
ja
push
sbb
dec
movl
xchg
add
push
or
lock
lahf
lods
jnp
rcr
scas
mov
test
sahf
jbe
cmp
jecxz
dec
roll
jnp,pt
cs
out
rorl
and
hlt
and
jmp
pop
pop
xchg
add
mov
jb
dec
stc
in
daa
mov
shll
dec
cmp
mov
dec
shll
scas
cs
test
test
bound
and
jo
icebp
mov
sub
aas
sub
xor
cli
mov
test
scas
out
pop
clc
insl
das
xchg
fwait
ljmp
jbe
fucomi
test
jnp
mov
jmp
sarw
fnstsw
xor
test
and
ss
pop
hlt
not
inc
dec
push
loope
inc
add
push
imulb
lods
mov
test
das
xor
dec
gs
jp
lods
sbb
cmpsl
pop
hlt
repnz
popa
add
lahf
mov
push
mov
sub
nop
mov
sub
jecxz
xor
bound
je
shrb
or
and
mov
mov
inc
cld
mov
adc
in
ja
adc
in
sti
jg
es
push
dec
ror
mov
mov
and
cmp
stos
inc
subl
mov
add
sub
loope
cli
les
inc
jge
stc
add
jne
mov
sub
test
mov
icebp
shlb
ds
lahf
dec
cmp
dec
loope
jp
pop
sub
test
add
mov
dec
add
rorb
shrb
leave
sbb
mov
inc
dec
dec
lcall
and
xchg
inc
fwait
out
jne
cli
add
cltd
shrl
hlt
int
pop
xor
push
jno
and
idivl
pop
in
adcb
sub
cmc
das
addl
in
sahf
call
jno
dec
loope
mov
and
xchg
imul
rcll
mov
lock
jo
mov
push
pop
and
test
adc
cmc
fwait
mov
movl
popl
xchg
rcrb
mov
lods
mov
inc
mov
mov
movsl
mov
pop
lea
fidivrl
stos
sbb
leave
mov
notb
mov
adc
cmp
clc
or
push
xor
sub
imul
pop
aam
daa
push
test
test
xchg
scas
mov
test
test
js
add
mov
cmp
das
mov
daa
js
cmp
pop
cmpsb
mov
add
cmp
xchg
and
dec
mov
sbb
jp
icebp
psubd
push
xchg
xor
mov
hlt
pop
lahf
push
sahf
cmc
pop
cmp
inc
mov
lret
jp
adc
aad
js
xchg
lea
out
jnp
add
fwait
pop
adc
enter
movsl
jecxz
jmp
and
mov
jle
add
mov
jo
sbb
mov
push
dec
dec
ret
iret
or
pushf
dec
fsts
cmp
sbb
mov
sbb
pop
lea
pushf
add
arpl
es
addr16
dec
jmp
loopne
adc
setno
call
xchg
inc
xchg
and
lock
lea
sbb
cmpsb
push
xchg
xor
scas
jecxz
pop
inc
sbb
in
filds
add
insl
test
lret
pop
sbb
add
addb
jmp
icebp
or
popa
inc
lret
divb
add
lock
cld
push
leave
leave
sub
lret
cmp
mov
shlb
fucomi
lock
ja
loop
fsubr
aam
cmp
dec
or
mov
xchg
sbb
hlt
xor
cmp
xor
or
je
or
pop
test
aad
dec
mov
or
shr
outsb
cmpsb
call
sbb
rcr
enter
adc
dec
sbb
jmp
lea
push
dec
test
add
inc
cmp
cmpsl
dec
pop
cmc
scas
push
xchg
xor
mov
cmc
clc
or
jecxz
push
push
out
mov
aas
push
insb
mov
push
lcall
popl
mov
pop
cmp
out
push
pusha
jo
nop
stc
inc
aad
mov
cmc
lds
ss
inc
add
test
adc
shr
jecxz
sbb
sub
dec
sbb
aaa
dec
je
sar
dec
jl
sbb
xchg
push
mov
dec
ret
add
xchg
xchg
idiv
lods
enter
pop
out
loopne
ja
call
inc
cmpsl
sahf
xor
adc
testb
movb
xchg
adc
add
or
and
mov
adc
sbb
ljmp
outsl
lock
mov
jne
ljmp
adc
cmp
movl
stos
or
pop
lods
xchg
arpl
cs
cmpb
clc
sbb
lret
jmp
data16
outsb
ss
jg
das
int
ficompl
sub
ret
push
jge
mov
adc
mov
inc
or
int3
shl
add
jp
andb
xor
pusha
pusha
je
outsb
jnp
and
sbb
mov
cmp
pop
mov
push
inc
fdivrs
mov
je
mov
clc
jmp
out
dec
jge
add
adcl
or
add
in
frstpm(287
xlat
jg
fcompl
icebp
push
movsb
iret
and
mov
pop
enter
xor
fisubs
lea
rorb
sbb
dec
sub
rcl
es
stos
imul
mov
enter
pop
shr
and
pop
or
and
out
aas
iret
pop
or
aad
nop
jns
dec
enter
dec
scas
jns
xor
adc
push
add
jmp
icebp
lcall
ja
add
pop
mov
push
rcll
sbbl
inc
negl
dec
repz
cmpb
ljmp
dec
mov
inc
mov
pop
es
rolb
andb
or
jmp
cltd
sbb
pop
cmp
mov
shl
pop
call
sub
dec
cmc
out
sbb
and
test
mov
mov
fwait
mov
test
and
es
test
pop
std
shr
pop
sti
push
pop
cld
inc
adc
hlt
mov
dec
pusha
cld
cmp
mov
push
imul
jge
in
repz
mov
jg
jbe
add
adc
cwtl
les
test
adc
pop
cmp
movb
pop
mov
ret
stos
enter
iret
out
adc
fsubrs
not
sub
je
fistpl
adc
pop
xchg
insb
inc
call
call
add
add
lods
dec
lret
mov
mov
xor
xor
iret
push
mov
ja
sbb
scas
jae
push
ljmp
jb
adc
cmp
divb
cmpsl
adc
pop
or
mov
cmpsl
outsl
mov
inc
pop
pop
notb
je
xor
lock
leave
push
faddl
xor
test
push
es
je
test
rcrl
cmc
push
andb
jg
dec
lds
pop
and
pop
outsl
arpl
adc
push
imul
cld
jo
cmp
mov
call
mov
jecxz
pop
cmc
add
sbbl
and
mov
call
or
inc
xor
mov
lcall
dec
popa
mov
and
or
pushf
lds
lods
xor
xor
sub
fwait
js
add
sub
pop
mov
andl
cmp
fldt
jo
adc
or
xorb
xchg
pop
or
sbb
pop
leave
push
cmp
cmp
sbb
and
js
jne
lds
xchg
bound
fsts
or
add
pop
test
mov
addb
inc
addr16
rorl
push
rclb
in
fsubrs
sub
cmc
adcl
shll
push
imul
sub
repnz
test
add
cmp
xchg
mov
frstor
or
scas
and
nop
fwait
xchg
scas
mov
arpl
pop
stc
push
dec
xchg
rol
cmp
xchg
clc
lods
pop
pop
insb
xor
dec
mov
hlt
cltd
add
mov
shrl
mov
and
pop
inc
cmpsl
push
jg
adc
insl
rorl
loopne
xchg
mov
scas
jmp
mov
ljmp
jb
cltd
push
lock
sub
aas
in
jo
pop
bound
cld
cld
add
pop
ljmp
and
dec
ljmp
cmp
xchg
and
mov
push
push
insb
pop
and
movsl
stos
xor
sub
rcll
scas
adc
jb
pop
mov
jnp
js
aad
mov
ljmp
add
inc
mov
sub
jle
mov
fcompl
jl
outsb
jb
mov
sbb
ret
aas
mov
lock
sbb
daa
sub
jno
adcb
jbe
orl
sbb
cmp
rcrb
push
scas
insb
loop
sbb
je
imul
subl
icebp
ljmp
mov
cmpsb
mov
xlat
jle
push
out
cmpsl
xor
adcb
bound
data16
and
fidivl
add
sarb
sbb
ljmp
cli
cmpsl
jecxz
ret
aas
clc
mov
add
pop
add
dec
mov
mov
push
and
sub
mov
jl
movsl
xchg
arpl
or
cmpsl
push
mov
scas
movsl
mov
jg
add
lds
daa
les
lret
dec
js
jp
pop
fisubl
cwtl
stos
clc
inc
repz
mov
cmpsl
inc
pop
lcall
mov
push
dec
ja
lahf
into
mov
call
jp
ret
sub
jle
lea
inc
ret
sbb
aaa
incb
jmp
movsl
mov
sbb
xchg
cmp
fdivr
popf
xor
ds
decb
jb
or
push
xchg
mov
aam
ljmp
pop
sub
mov
popl
imul
clc
mov
xchg
push
adc
adc
movsl
or
outsl
pop
out
icebp
add
sbb
sub
xor
repz
or
pop
jno
lods
xor
mov
adcl
add
les
sub
sbb
loope
push
add
cmp
cmp
sub
loope
cli
into
push
imul
mov
and
xchg
sub
xchg
stos
inc
jmp
mov
push
lcall
mov
loopne
ds
roll
adc
mov
outsl
inc
inc
cmpsb
out
xor
or
push
bound
mov
mov
ffree
pop
cmp
pop
mov
jmp
sbb
dec
lds
loop
roll
dec
pushf
push
call
loope
inc
mov
jmp
push
pusha
test
aad
add
leave
rcll
mov
push
xchg
sbb
lods
mov
je
lods
jp
in
mov
mov
ja
pushf
fldt
xor
jecxz
arpl
cmpsb
jg
pop
cmpsl
stc
loop
inc
or
dec
fstl
mov
call
jmp
jns
aad
rorl
sbb
fsub
push
inc
mov
scas
and
sub
push
xor
xchg
int3
inc
add
js
mov
pop
dec
out
lret
sub
imul
sbb
es
ss
paddusw
aad
in
add
outsl
insl
inc
loopne
jb
push
pop
pop
loopne
call
loopne
lods
pop
mov
addb
clc
pop
imull
mov
push
fwait
jns
fs
jg
cmc
add
add
xchg
neg
test
fildl
pop
std
dec
sub
ret
cmp
mov
out
pop
outsb
mov
inc
adc
mov
loop
jg
push
scas
notl
jp
mov
cli
imul
mov
or
adc
dec
xchg
xor
jle
out
incb
jns
imul
bnd
cmp
cltd
mov
ret
add
or
push
std
jns
pop
mov
add
add
mov
orl
jp
ret
xor
in
xor
cmc
fmuls
adc
enter
push
mov
rorl
sbbl
adc
fmuls
adc
mov
pop
sbb
hlt
xchg
shll
xor
fwait
aad
js
ret
ret
gs
and
pop
inc
push
cltd
dec
pop
imul
daa
pop
jbe
pop
mov
and
pop
scas
xor
push
or
jno
fists
in
add
test
lods
sub
jl
cmp
push
mov
mov
rcr
xchg
aad
shl
mov
pop
iret
adc
cld
shll
out
sub
cmp
movsb
loopne
mov
mov
cld
aad
cmp
pushf
std
test
inc
xchg
jl
fisubl
mov
jb
sbb
adc
add
shlb
enter
mov
and
push
shrl
js
out
push
sbb
dec
rcl
add
push
and
push
adc
adc
sub
data16
add
cmp
sub
mov
xchg
jp
push
arpl
repnz
dec
scas
adc
shrb
mov
mov
pop
or
sbb
jbe
mov
sub
scas
aad
aas
or
ret
xor
jns
cmpsl
inc
cmp
push
sub
pusha
mov
inc
in
push
push
or
mov
rorl
shlb
push
jbe,pt
std
mov
mov
push
add
xor
icebp
mov
arpl
and
jl
jo
xor
pop
jecxz
jecxz
push
push
add
xchg
push
jle
pop
pusha
lock
jecxz
out
loopne
pop
cli
stos
jae
cmp
dec
sub
adc
pop
inc
out
adc
push
addr16
inc
inc
arpl
leave
lahf
imul
push
add
cmp
rorl
inc
jno
nop
push
fcmovnb
pushf
and
cmp
sbb
inc
mov
loop
out
enter
js
clc
push
dec
rorb
jg
xorb
mov
stos
dec
or
repnz
stos
rorl
outsb
leave
mov
adc
psrld
hlt
aas
je
cltd
test
xor
adc
imul
dec
je
arpl
orl
sbb
sbb
es
push
lahf
cmc
push
xchg
add
mov
cli
adcb
mov
rcrl
xchg
rol
roll
inc
lahf
or
aaa
mov
xor
out
fnstenv
pop
mov
mov
mov
das
adc
in
mov
clc
pop
add
add
push
cli
jmp
jne
aas
or
test
fstpt
xchg
cli
jp
rcll
scas
dec
mov
cmc
xor
cmp
and
jb
and
mov
fisubrs
into
xor
or
repnz
mov
mov
fsubs
mov
sbb
xor
mov
cmp
nop
lea
dec
je
aad
push
aas
je
mov
sub
mov
xor
lret
push
jecxz
add
cmp
cmp
jle
or
pusha
mov
push
std
paddsb
iret
push
xchg
inc
jecxz
pop
mov
mov
mov
inc
nop
and
ss
pusha
push
or
aam
dec
out
shl
adc
loopne
pusha
mov
aam
pop
orb
rol
pushl
sub
push
insb
xchg
or
xchg
sar
aas
pop
fistps
out
rorb
rcll
push
leave
sbb
cmp
sahf
sbb
daa
jb
rcrb
out
sub
ss
inc
into
jns
lret
xor
flds
xchg
add
adc
dec
and
inc
imul
add
pop
dec
cmc
jp
sub
push
ret
jne
sub
xchg
and
xchg
pop
mul
xchg
sub
push
push
dec
cmp
pop
dec
paddd
fwait
orps
cmpsb
xor
sub
adc
rol
mov
inc
cmp
daa
cld
js
insb
mov
daa
rorb
jb
iret
push
out
push
jmp
xor
xlat
fld
icebp
test
int3
lods
nop
in
push
pop
loop
jne
and
and
sub
cld
cmp
insb
pusha
sbb
mov
out
iret
bound
addb
cltd
lea
je
dec
push
ret
jmp
lcall
inc
sub
into
ds
cmpsl
push
dec
cli
or
adc
lea
jl
inc
addb
xchg
lret
or
inc
mov
loop
popa
loopne
shlb
dec
cmp
push
ja
mov
adc
mov
in
jp
rcrl
dec
es
notb
jno
insb
mov
arpl
mov
xchg
orb
pop
in
adc
ds
or
mov
or
outsl
and
cmp
int3
push
scas
addr16
sbb
adc
mov
aam
or
push
adc
or
and
not
jns
mov
pop
imulb
xchg
lcall
xchg
daa
int
add
or
data16
loope
jno
ss
xor
ljmp
dec
push
scas
mov
ret
cmp
stos
cmpsl
loope
test
jle
jne
fldt
clc
lcall
roll
adc
nop
into
inc
out
jp
mov
cmp
fmuls
lret
pop
lret
das
aam
pop
clc
movsl
adc
loop
mov
jo
jns
xor
adc
shll
sbb
inc
js
push
push
rolb
cld
push
mov
add
enter
jae
sti
pop
push
cmp
in
sub
scas
add
xchg
and
fstpl
movsb
xchg
xor
push
bound
sbb
pusha
sub
stos
call
jae
xor
mov
pushf
repnz
adc
jmp
push
loop
mov
lock
push
sub
lret
sub
sub
loop
mov
add
mov
mov
lods
rcll
pop
aaa
stc
shl
mov
push
jp
ret
cmp
mov
mov
push
rclb
in
andl
xorb
gs
inc
add
xorb
pop
xchg
fisubl
jns
mov
ficomps
push
add
fwait
aaa
out
popf
std
gs
xchg
push
cli
push
fnsave
push
orb
or
jp
jmp
sbb
mov
lock
aam
or
clc
cmpsl
push
sbb
sbb
mov
popa
into
outsl
mov
or
xchg
mov
pop
scas
dec
data16
xorl
xor
cs
xchg
lods
sahf
icebp
aas
mov
xor
mov
push
xchg
sbb
inc
ss
icebp
push
cmpsb
push
jge
mov
cmp
js
movsl
mov
adc
mov
inc
and
out
pop
sub
nop
xchg
dec
adc
fsubl
sbb
iret
loop
add
jge
pop
sbb
pop
adc
push
rorb
pushf
bound
ljmp
xchg
repnz
xlat
scas
lcall
push
stos
lods
add
add
mov
add
xlat
pop
outsl
cmp
loopne
cwtl
mov
adc
sbb
cli
xchg
add
mov
sahf
adc
sbb
cwtl
xchg
pop
fstp
adc
test
fcoml
inc
dec
xor
fimuls
push
fsubs
mov
jg
and
or
cs
adc
xor
xchg
xchg
scas
sub
ja
jl
in
test
das
popf
sti
mov
rol
add
inc
push
inc
lret
cs
adc
insb
mov
inc
mov
test
jg
jle
dec
std
gs
or
leave
push
mov
jp
adc
jl
mov
stos
pop
inc
das
mov
jbe
push
mov
cld
mov
loope
icebp
push
test
repz
lret
cmp
push
int3
push
jo
xor
fildll
inc
cld
mov
fmull
scas
or
mov
sbb
sbb
mov
notl
add
and
pop
fcoms
fmulp
cmp
sub
cmp
xchg
cwtl
ds
pusha
push
inc
xor
push
xchg
adc
adc
aas
pushf
sar
jno
jg
sti
shl
jns
mov
and
xchg
popf
cwtl
leave
sub
jecxz
or
mov
sbb
jne
fisubrl
dec
jecxz
sub
adc
xchg
jle
flds
lea
jnp
mov
fidivrl
jb
adc
aad
pop
cli
or
xchg
cmpsl
lret
add
dec
dec
dec
lods
cmc
sub
test
jg
cmc
loop
pushf
push
mov
push
movsl
ret
dec
sti
inc
jp
scas
sbb
dec
hlt
adc
clc
std
jbe
add
cmpsl
hlt
js
je
xor
fcoml
pop
gs
jbe
jmp
sbb
xorl
and
in
cmc
out
jl
loopne
hlt
pop
pop
sbb
cld
jmp
adc
or
sbb
and
cli
leave
mov
push
ljmp
fsubrp
adcb
push
mov
aad
push
sti
ss
pop
ljmp
dec
imul
xor
mov
push
jg
lods
test
dec
iret
cmpsb
sbbl
outsb
sbb
sbb
inc
insb
dec
fwait
nop
push
stc
mov
loop
decb
adc
add
jmp
inc
dec
pmaxub
pop
inc
aaa
pop
mov
mov
insl
cld
sub
sbb
aas
scas
push
hlt
inc
ja
inc
daa
inc
loop
dec
roll
ror
xor
movsb
dec
mov
rol
sbb
pusha
aad
inc
cld
cs
sub
push
pop
test
in
or
push
mov
sub
jnp
push
and
nop
add
xchg
mov
add
push
mov
xor
jecxz
gs
push
std
lock
rcll
adc
in
nop
mov
cmp
push
nop
stos
les
lods
sub
and
push
mov
int
add
icebp
dec
jno
jb
out
test
test
or
sub
jmp
clc
inc
mov
enter
fldl
pop
xchg
rorb
mov
lret
add
ljmp
repz
dec
inc
clc
xor
lret
inc
pop
call
or
outsb
cmp
outsb
clc
or
loop
pop
cmpsb
push
add
dec
scas
pop
mov
les
xor
mov
jg
pop
sbb
shll
xlat
xor
jmp
fisubrs
dec
jge
std
daa
int3
cmpsl
les
addl
xacquire
sbb
daa
fadds
xchg
bound
xor
mov
testl
sub
mov
das
dec
push
cmpsb
mov
add
fiadds
sbb
test
outsl
dec
loope
adc
push
pushl
adc
fbstp
jno
scas
xor
jbe
add
lods
js
and
inc
xor
pop
in
sbb
je
ds
xor
pop
add
js
xchg
cmp
adc
dec
dec
pop
das
loopne
cwtl
and
mov
jle
jle
leave
push
pusha
push
add
xor
or
jle
popf
mov
mov
in
data16
call
jecxz
cmp
dec
sahf
fcoml
push
push
mov
iret
mov
cmp
out
sub
push
mov
cwtl
loopne
xor
cmp
das
das
sbb
pop
cmp
and
daa
loopne
aad
inc
rcrb
inc
dec
jg
add
cli
inc
testb
imul
and
xor
enter
mov
inc
mov
in
xlat
lahf
push
aad
fucomi
mov
adc
inc
out
loop
sub
mov
out
dec
inc
out
int
mov
xchg
and
push
cmp
inc
dec
adc
xchg
add
or
imul
inc
ss
mov
jl
xor
stos
push
cld
inc
clc
cmpsl
add
adc
dec
sbb
aad
cmp
test
in
lret
fs
xchg
cmpsl
cmp
jp
pushf
loop
jl
xchg
adc
cs
test
sub
mov
pop
std
lret
adc
pop
mov
mov
dec
call
cli
lods
jo
inc
arpl
push
mov
mov
push
mov
sahf
pop
cld
dec
roll
jno
shll
push
dec
jle
lock
pop
push
xchg
jg
subb
or
cmp
mov
mov
cmp
lea
movsl
shrl
adc
xchg
xchg
mov
pop
js
jmp
pusha
nop
loopne
movsl
pop
loopne
call
or
cmpsl
jge
sbb
test
js
and
sub
mov
pusha
pop
psubsb
es
rolb
xor
insb
in
gs
aas
adc
xchg
sbb
sbb
jmp
add
ja
inc
scas
mov
pop
addr16
push
cmp
dec
cmp
xchg
or
cli
test
inc
inc
push
loope
push
jno
data16
loope
mov
popf
cmp
es
xor
aaa
lods
leave
or
mov
sbb
xor
mov
mov
ret
mov
jbe
xchg
jle
addr16
ja
push
push
jg
and
xchg
testl
cltd
pop
mov
add
sbb
scas
jmp
jae
sub
fwait
call
pop
imul
icebp
jg
adc
inc
adc
mov
pop
aad
leave
pop
sbbl
xchg
or
adc
inc
outsl
sarb
pushf
loopne
cmpsl
je
scas
hlt
sbb
aad
pusha
dec
aas
and
adc
jecxz
mov
je
mov
cmp
xchg
dec
fs
sbb
cmp
xchg
push
and
xor
loop
mov
and
insl
bound
adc
ljmp
inc
sbb
mov
mov
fidivl
sbb
add
or
rcll
xchg
lock
cwtl
xor
arpl
mov
shr
stos
popa
push
cli
mov
jnp
sahf
dec
out
mulb
mov
hlt
or
jne
fs
popa
cmovb
sub
sub
xor
mov
cmc
cwtl
sbb
jecxz
jp
inc
sub
xchg
pop
xchg
dec
fsub
add
aad
stos
divb
jg
clc
sarb
pop
scas
roll
leave
cld
inc
xor
stos
jo
shlb
inc
mov
dec
push
daa
mov
std
roll
xor
xchg
rolb
xchg
push
pop
jnp
cld
push
rcll
adc
pop
stos
cld
jbe
cltd
cwtl
xor
or
or
sbb
push
stos
jns
and
test
movsb
jbe
sbb
outsl
repnz
push
aaa
inc
into
ljmp
call
cmc
dec
iret
stos
out
inc
inc
insl
sbb
out
mov
jnp
incb
push
rclb
or
and
cmp
add
cmpb
bound
loop
jne
out
jo
mov
clc
xor
sbbl
test
xchg
sahf
dec
js
xor
mov
test
mov
out
shlb
cs
inc
push
adc
ret
jae
push
mov
js
clc
aam
jno
sbb
ret
nop
mov
jb
and
shll
loop
mov
ja
clc
inc
rcrb
mov
and
xor
rcrl
pop
cmp
mov
es
xor
and
in
adcb
pop
or
sar
mov
mov
pop
frstor
mov
and
in
jbe
or
hlt
lea
inc
std
cmpsl
pop
sbb
mov
dec
push
in
fmuls
adc
popa
gs
add
fucom
cmp
mov
inc
loop
jb
ret
mov
xorb
cmpsb
ret
inc
xchg
sahf
dec
pop
push
sbb
push
push
hlt
nop
ret
sti
test
pop
inc
cld
push
jmp
lds
js
fnsave
inc
inc
mov
mov
call
dec
pop
mov
jp
dec
outsb
scas
mov
lea
dec
xor
fldcw
add
inc
out
dec
insl
stc
clc
mov
out
inc
das
pop
cld
adcb
cmpsb
ds
aam
or
sub
inc
leave
dec
mov
test
repz
push
fwait
cs
lret
lret
ljmp
cmp
test
cli
and
fidivs
repz
xchg
movsl
fisubs
pop
andb
sti
mov
pop
cld
and
cmpsb
push
or
fsubr
xor
mov
jae
ret
push
lds
loope
loope
sub
mov
in
xchg
test
ljmp
mov
test
aas
push
sub
push
dec
xor
stos
imul
hlt
enter
push
xchg
repnz
inc
push
mov
mov
push
jne
pop
push
sbb
add
orl
jle
fistpl
mov
hlt
popa
out
mov
shlb
rcrl
les
int3
and
outsb
add
and
loop
pop
jne
xchg
scas
xchg
cmp
in
sar
ds
pop
add
adc
sbb
and
imul
clc
inc
xchg
inc
add
adc
and
pop
or
add
sub
enter
and
sbb
cld
dec
inc
enter
adc
out
aas
push
movsl
mov
pop
test
mov
mov
ds
mov
cli
xor
add
cmc
pop
in
ja,pn
jp
push
sbb
mov
insl
xor
add
pop
jo
dec
lahf
scas
dec
jb
rol
ljmp
sub
fbstp
ret
stos
push
pop
jl
rol
xchg
dec
inc
mov
mov
pop
arpl
andb
mov
call
ja
dec
fbld
pop
pop
add
loopne
ret
mov
adc
lcall
flds
lock
jle
in
xor
inc
movsb
or
xor
aas
mov
sahf
mov
jl
cmpsl
mov
ret
addb
lock
or
sbb
aas
and
mov
dec
push
pop
fists
test
mov
push
je
jle
test
cmp
cmp
cmp
or
jecxz
jnp
sbb
xorb
nop
push
inc
stos
pop
push
int3
jecxz
add
inc
lahf
adc
sbb
sbb
and
mov
xchg
out
fsubrl
sub
sbb
ret
daa
push
inc
sbb
dec
add
mov
pop
cmpsb
insb
ja
or
leave
movsb
mov
jns
mov
fiaddl
in
adc
pop
lcall
repnz
aam
or
fdivrs
ss
lds
or
push
and
sbb
out
sbb
call
xchg
jo
loopne
aas
gs
lret
dec
ljmp
adc
dec
mov
loop
and
xor
push
orb
mov
cmp
loope
mov
and
mov
aad
sbb
fcomps
pop
xchg
rcll
mov
rol
out
or
sbb
sub
sbbl
inc
mov
xchg
sbb
and
inc
cmp
sbb
mulb
fs
sub
or
or
sub
sub
push
cld
scas
jge
mov
adc
adc
bound
arpl
inc
sbb
ljmp
sub
insb
pusha
inc
mov
insl
sbb
add
push
xchg
dec
mov
sub
push
mov
js
add
mov
sub
jl
arpl
push
sbb
mov
mov
dec
gs
adc
loop
cmp
data16
or
sub
cmc
jno
dec
pop
add
add
loopne
decb
dec
cld
dec
mov
jnp
rol
sar
cmpsl
cmp
insb
leave
aam
push
mov
cmp
sub
jg
test
popf
in
lahf
out
cmp
mov
fwait
insl
mov
aad
fst
xor
push
aas
arpl
into
mov
mov
dec
add
daa
sub
push
icebp
test
sbbb
xchg
inc
punpckldq
mov
mov
add
aas
mov
sub
aas
pop
std
inc
hlt
call
mov
pop
cmpsl
add
add
mov
sbb
sub
push
addr16
fstp
jnp
add
aam
psrlq
fbld
xchg
or
jo,pn
bound
test
pop
cmp
jnp
sti
push
or
push
jnp,pt
jmp
or
push
xorl
sbb
mov
inc
pop
movb
dec
mov
push
loope
jle
and
mov
test
push
push
decl
pusha
stos
sbb
loopne
cmpsl
adc
test
dec
adc
lret
ss
in
or
lcall
mov
and
pop
cmc
or
lods
outsl
popf
rcrb
xchg
mov
add
sti
mov
pop
clc
es
xchg
call
roll
pop
push
xor
ret
negb
cmp
popf
lea
jmp
xchg
inc
psubsb
jmp
stos
inc
xor
add
push
mov
test
sub
cmpsl
inc
add
sbb
mov
movq
mov
loope
and
sub
je
shll
pop
aam
imul
cwtl
stos
icebp
mov
xchg
aaa
sub
cmpsl
stos
add
ja
xor
jne
cmpsb
lcall
dec
rcrb
andl
incb
mov
xchg
loope
daa
mov
daa
mov
jmp
add
add
mov
repz
mov
xchg
scas
shl
push
inc
es
aad
cmp
jae
jp
test
push
ret
add
jbe
imul
jnp
mov
adc
addb
repnz
jg
scas
rcrb
xor
lods
repnz
aaa
fcmovnb
pop
les
call
pop
mov
cld
add
adc
mov
mov
mov
arpl
mov
out
inc
cld
mov
xchg
stc
xchg
movsb
rclb
pop
fbld
enter
movsl
je
pop
ret
jecxz
xor
cmpps
jno
imul
adc
jle
jg
xor
cmp
jno
mov
in
push
pop
or
cld
repz
enter
jns
cmp
scas
cwtl
movsb
jle
dec
adc
imul
scas
js
ret
xchg
iret
lcall
dec
jns
pop
jbe
cmp
mov
mov
pop
jge
and
cmc
cmp
fbld
and
and
and
mov
inc
ljmp
mov
pop
push
mov
adc
addr16
mov
out
stos
fldz
mov
adc
push
adc
popa
mov
test
push
lret
hlt
xor
test
lcall
test
or
pusha
adc
inc
xor
stos
les
je
adc
push
sbb
jecxz
push
mov
arpl
mov
sub
bound
jecxz
mov
dec
xchg
ret
hlt
or
mov
xor
addr16
gs
fs
ss
cmp
jae
mov
es
adc
test
fisubrl
jg
jae
xbegin
push
mov
inc
rcrl
and
fisttps
inc
sbb
inc
stos
push
lock
or
push
lret
aas
aam
cmpsl
xor
and
sub
jl
pop
loope
jnp
popf
push
sbb
jge
cmc
cwtl
sub
xchg
fisttps
lods
pop
ds
repnz
sbb
daa
push
pop
add
inc
das
push
xlat
dec
fs
mov
and
mov
fs
inc
or
jp
cmpsl
orl
push
mov
adc
adc
adc
ljmp
inc
xchg
and
pop
mov
jmp
out
pop
test
dec
inc
jp
sub
inc
push
imul
scas
xlat
adc
mov
xchg
negb
inc
jne
push
dec
pop
cmpl
jo
xchg
dec
sti
scas
out
flds
cs
stc
pushf
sti
xor
dec
or
in
inc
and
adc
cld
add
inc
hlt
cs
inc
inc
sarl
stc
dec
xor
mov
push
cmpsl
into
aad
mov
cmpsb
and
add
mov
test
in
adc
xchg
xor
jae
add
jp
cli
repnz
aad
adc
add
cltd
and
roll
aam
xor
movsb
and
andb
cmpsl
add
mov
or
cmp
fadd
lcall
push
clc
sbb
mov
scas
or
xor
test
ss
das
or
dec
call
cmp
adc
xchg
sub
or
mov
jnp
ja
push
inc
xchg
in
dec
das
repz
rorb
adc
popa
sub
popf
int3
lods
callw
hlt
in
sbb
xor
mov
mov
dec
dec
jae
mov
sbb
shrl
loopne
fsubrs
mov
jg
orb
jge
sub
stos
rcr
mov
mov
or
pop
add
aaa
xchg
ficomps
jecxz
or
aas
lock
ror
dec
jge
mov
mov
je
cmp
jecxz
or
or
inc
es
add
dec
xchg
pop
inc
test
xorl
insb
rorb
shlb
jne
std
xor
dec
enter
mov
clc
jae
push
mov
ficoms
inc
lea
test
mov
add
xrelease
das
pop
push
movsb
clc
push
fcompl
adc
pop
subb
xor
test
shlb
push
pop
cmpb
nop
jl
arpl
adc
fs
lcall
shlb
insb
arpl
insl
shll
ret
add
add
jecxz
in
addr16
xchg
add
negl
push
gs
push
in
call
cld
aaa
dec
dec
xor
mov
or
adc
mov
jno
sarb
push
mov
or
ljmp
jno
sub
mov
push
inc
xchg
movsl
insb
daa
push
or
jle
dec
aam
addb
addr16
or
xor
cld
push
je
xchg
mov
adc
adc
inc
stos
inc
subl
je
subb
ja
pop
jns
js
push
inc
mov
jns
jbe
int3
sahf
xchg
cmp
fs
cs
cmp
inc
scas
or
push
push
xchg
push
inc
ja
adc
add
subb
dec
adc
dec
add
mov
jg
xchg
sti
add
push
add
push
cld
mov
dec
in
inc
rclb
popa
mov
pop
mov
xor
and
sub
das
inc
push
push
dec
data16
add
andl
mov
in
push
dec
sbbb
xor
dec
shll
jnp
cs
lock
jne
inc
jb
repz
js
pop
and
test
push
outsb
aam
mov
pusha
cmp
stos
push
popa
repz
in
adc
dec
sub
adc
test
ud0
shrl
roll
sti
dec
jmp
xlat
loop
stos
xlat
mov
or
xchg
rcr
jbe
mov
leave
ret
sbb
call
mov
jns
arpl
jb
js
out
mov
push
inc
movsw
ljmp
xchg
sbb
dec
mov
push
clc
out
xchg
in
inc
jno
insl
dec
push
push
mov
leave
sub
cmp
addb
sub
arpl
cltd
je
aam
scas
push
mov
aaa
orl
jbe
add
enter
xchg
or
incb
out
repz
inc
dec
add
sbb
dec
insl
pushf
push
nop
mov
les
mov
push
notb
dec
aaa
cmp
xor
jnp
decl
fiadds
in
ret
or
lret
call
or
mov
jmp
add
cmp
clc
add
inc
add
and
dec
movl
push
dec
popa
dec
icebp
push
rorl
test
cmp
mov
mov
and
mov
aaa
dec
pusha
and
jmp
sub
push
or
inc
stos
pushl
inc
rcrb
push
sbbb
inc
stos
sbbl
push
js
xor
lds
loop
das
pop
aas
jmp
inc
outsl
jbe
adc
mov
sub
inc
add
adc
or
pop
clc
inc
clc
loopne
hlt
es
je
push
add
cmp
dec
pop
mov
test
push
sub
dec
push
mov
dec
jp
enter
mov
stos
mov
repnz
push
or
orl
lahf
imul
mov
das
mov
or
add
sbb
pop
js
decl
lcall
inc
aaa
add
mov
lcall
push
add
xchg
add
jns
jbe
and
jp
and
mov
mov
js
xor
sbb
mov
mov
mov
inc
lock
stos
ljmp
xor
jns
dec
nop
push
push
cltd
jle
aaa
push
mov
inc
mov
xchg
popf
push
je
mov
insb
ss
sbbl
xchg
or
add
sbb
addb
mov
push
addr16
frstor
sub
adcl
push
xor
sbb
jae
adc
mov
aaa
adc
jno
into
and
fcoms
or
cmc
mov
inc
dec
or
insb
dec
jbe
pusha
mov
test
push
add
sub
rdtsc
cmpb
insb
adc
imul
out
loopne
add
xlat
mov
add
cmpsb
pop
loop
cmp
inc
lcall
test
and
and
sub
mov
lock
adc
add
push
and
test
xor
or
pushf
inc
insb
xor
jge
out
sbb
mov
ret
scas
testb
pushf
lcall
jg
fucomi
ss
sar
sub
add
dec
fdivl
jmp
lahf
out
test
lock
jmp
cmp
lcall
jbe
ja
movsl
and
xor
ds
mov
cld
iret
stos
sar
stos
xchg
movsb
cwtl
je
dec
or
jb
jnp
imull
incl
das
sbb
add
lock
out
mov
cmp
addb
pop
push
xor
repnz
push
adc
test
fstp
or
cmp
or
add
adc
ja
rolb
test
nop
dec
push
dec
sbb
jecxz
jb
sbb
mov
leave
out
pushf
std
fwait
pop
flds
jmp
pushl
movsl
fisttpll
xchg
mov
add
push
push
loopne
mov
loopne
jns
insb
loop
les
xchg
icebp
xchg
cmp
sti
outsl
jo
ret
add
mov
fwait
dec
jns
mov
mov
pop
push
aad
fwait
rclb
jb
aas
jl
cmpb
int
dec
cwtl
jo
lds
xchg
fsubrl
adc
xor
mov
movntq
clc
inc
sub
addr16
mov
inc
cmp
daa
and
mull
addr16
push
mov
jmp
mov
push
sahf
and
mov
aad
ljmp
mov
jo
xor
xchg
and
cmp
pop
jl
cltd
int3
into
sbb
insl
mov
add
gs
add
pop
idiv
jno
movsl
adc
mov
cmp
inc
cmp
cmpl
jo
out
and
in
xor
lods
sub
scas
std
jg
jmp
test
cmp
pop
and
sbb
test
cld
iret
popa
aam
popf
sbb
and
call
subl
and
push
sbb
in
or
pop
inc
sub
inc
idivl
mov
out
fisttpll
jns
sbb
shlb
mov
pop
lods
or
xchg
in
mov
inc
cmc
lock
mov
or
sahf
cmp
dec
in
loop
int3
pushf
aaa
xchg
cmp
lret
faddl
push
cld
sbb
fistps
or
in
mov
loope
jge
and
mov
adc
dec
adc
or
mov
push
add
popa
repnz
std
lahf
shll
repnz
fincstp
ja
or
sti
jmp
std
in
mov
loopne
cmpl
dec
sub
dec
sub
hlt
popf
or
into
jmp
pop
out
add
out
jg
mov
rolb
jp
or
repz
movsb
aam
pop
inc
bound
add
mov
jg
gs
xchg
gs
lcall
lret
add
or
fildll
push
std
incl
out
jle
in
and
outsb
orb
sbbb
rol
out
fmull
bound
test
arpl
decl
incl
mov
rcrl
mov
inc
mov
scas
in
or
scas
and
arpl
leave
mov
inc
popa
in
jecxz
or
andl
inc
out
pop
cmc
das
cmpsl
inc
icebp
dec
cli
fnsave
jl
loopne
das
sarl
dec
mov
ret
cmp
shr
lods
cmpsl
dec
lods
mov
call
jb
inc
mov
xchg
dec
cmc
sbb
imull
add
shll
incl
cmc
sahf
jle
fwait
popf
idiv
in
jecxz
cmp
sbb
jl
pop
jmp
outsl
addr16
ja
popa
pop
out
in
cld
ja
adc
cld
cmpsb
lock
jg
pop
dec
dec
stos
lret
in
es
incl
jge
sbb
mov
sahf
incb
jg
dec
jnp
jnp
test
lock
push
dec
ficomps
clc
and
sti
je
roll
out
ffreep
dec
mov
xchg
add
sbb
lcall
clc
and
sarl
out
sub
orl
inc
sbb
subb
std
pop
shlb
push
dec
mov
adc
lahf
test
inc
popf
repnz
lods
arpl
xor
xchg
inc
aas
pop
add
pop
jmp
xchg
imul
sbb
ret
std
and
adc
rolb
mov
sbb
mov
mov
aad
cli
jb
push
int3
and
pop
nop
inc
leave
push
mov
xchg
xor
hlt
mov
cmc
xchg
cmpsl
aaa
cld
fstl
and
mov
sbb
dec
xchg
incl
pop
lea
pop
aad
inc
repz
push
jl
enter
dec
mov
das
pusha
out
or
xchg
sub
dec
rcrl
inc
incl
fwait
cmp
mov
push
xor
lods
sub
adc
push
insl
mov
cmp
cld
push
add
enter
out
cld
pop
mov
test
and
push
imul
scas
push
jmp
jns
sbb
in
lock
jne
sbb
dec
cs
ja
scas
pop
sbb
cmp
and
pop
jp
loopne
lds
decl
addr16
mov
push
daa
sub
cmp
nop
mov
adcl
mov
fcmove
xchg
xchg
xchg
shlb
adc
xchg
sub
jno
fistps
das
movsl
faddl
jbe
xchg
pushf
std
push
out
add
push
dec
imul
and
jo
and
cmp
push
add
cltd
les
aas
adc
aaa
cmp
lods
pop
repnz
pusha
nop
pop
negl
imul
addr16
cs
clc
lahf
and
mov
shrb
and
aam
lea
mov
js
lea
sbb
ffreep
jge
test
in
adc
outsb
push
gs
sub
outsb
pop
std
aaa
cmp
outsb
sahf
xor
push
lock
push
nop
hlt
call
cli
sbb
or
test
add
jl
or
int3
lods
call
adc
imulb
ret
aas
movsb
pushw
mov
push
ja
inc
aaa
xchg
test
jo
add
dec
push
push
cmp
dec
cmp
mov
aas
mov
mov
cmp
shrb
fistps
in
jmp
jl
inc
jmp
jecxz
lea
int3
es
mov
jg
add
hlt
flds
nop
jecxz
pop
aad
xor
lea
out
or
aad
sub
test
rcrb
lahf
leave
ds
jns
mov
sbb
popf
cmp
jbe
out
mov
mov
xchg
into
in
ja
dec
mov
jmp
mov
xchg
push
sahf
push
imul
inc
jg
mov
sub
push
xchg
das
xchg
cld
out
sub
inc
mov
dec
icebp
mov
pop
dec
orb
pop
push
loop
adc
jge
xchg
push
fdivr
lcall
add
or
daa
pop
aaa
mov
add
pop
xchg
or
jo
rclb
jmp
xchg
pop
add
cmc
pop
push
out
dec
das
push
adc
sbb
ds
add
mov
xor
mov
adc
push
mov
sbb
inc
push
stos
andl
testl
mov
out
mov
fisttpl
and
es
outsl
pop
dec
call
outsl
jbe
cmc
idiv
sbb
inc
repz
xor
mov
jecxz
mov
sarl
pop
divb
mov
xchg
lfs
jnp
outsl
std
mov
pushl
and
outsb
xor
xor
push
inc
rcr
sub
popf
inc
jle
cmp
rolb
loop
xor
rorl
scas
rcl
je
sbb
orb
in
push
out
stos
call
add
popa
loop
mov
cmp
mov
incl
xchg
sbb
xchg
sub
popf
leave
dec
stc
cmp
lret
fbld
mov
or
repz
insl
out
jae
and
test
mov
data16
out
sbb
scas
hlt
fistpll
push
jp
pop
pusha
sub
xor
fwait
pop
dec
mov
mov
in
jmp
mov
cltd
jo
inc
or
pop
pop
jge
sub
je
popf
data16
pop
add
mov
stc
lods
pop
mov
pop
cld
mov
cmp
lods
bnd
clc
inc
cwtl
jae
add
xchg
lea
add
fwait
inc
mov
ds
lea
in
loopne
dec
jp
cmp
hlt
xchg
stos
dec
fists
and
in
inc
lahf
push
insb
repnz
and
or
iret
jecxz
out
scas
aaa
and
push
push
cltd
filds
les
lahf
std
xchg
inc
cmpsl
iret
pop
or
mov
insb
insb
sbb
div
jno
cmp
mov
test
xchg
mov
sbb
inc
xor
jne
adcl
dec
mov
sti
inc
lcall
je
in
cltd
lret
and
jbe
subl
cmpsb
fdivrl
lods
or
dec
shl
push
mov
dec
std
aaa
dec
popa
bound
rolb
mov
push
xor
dec
dec
or
jnp
call
pop
sti
adc
mov
aas
mov
adc
movsl
and
mov
insb
out
pop
pusha
sbb
sub
jae
jo
outsl
and
and
fmul
imul
aas
push
sbb
rol
arpl
mov
aam
mov
call
fwait
ds
fisttpl
sub
scas
xchg
lea
cli
jecxz
lahf
adc
xlat
mov
pop
pop
outsl
push
xlat
cmpsb
xchg
ljmp
loope
data16
leave
rcr
xor
jp,pn
push
add
aaa
mov
repz
ja,pn
loope
sub
sub
outsl
test
cmp
jle
out
xor
js
daa
lock
aas
mov
cmpsl
mov
cmpsb
sub
mov
sti
sub
dec
pusha
cltd
add
call
xchg
push
out
add
rcrl
dec
and
iret
jmp
xor
scas
or
cmpl
imull
orl
mov
or
cmp
ret
cmc
push
push
orb
dec
lods
and
cmp
movsb
lds
scas
push
in
outsl
or
jo
pop
imul
add
mov
loop
rclb
js
push
fbld
mov
les
xor
dec
std
aas
and
xchg
or
jg
push
adcl
push
int3
lods
stos
jg
decl
in
inc
mov
sti
mov
ljmp
jmp
mov
cmp
push
lock
jb
cs
dec
lods
jl
add
jno
lock
jmp
ss
imul
pop
jge
fdivrs
mov
nop
cmp
inc
pop
jmp
dec
xor
or
daa
dec
ja
pop
mov
pop
sub
std
outsl
movsl
lds
and
or
jmp
mov
leave
sbb
rol
into
fists
incl
pushf
insl
stos
lea
and
les
mov
decb
or
cli
push
out
setb
xchg
sbb
mov
fimuls
cld
enter
push
inc
inc
rorb
cmpsl
inc
jno
imul
jb
sahf
add
ret
stos
sbb
test
mov
or
mov
in
pop
cmp
into
ja
and
cmpsl
jecxz
loopne
loop
idivb
mov
sub
aad
stos
cmp
jmp
sbb
push
pusha
pop
testl
mov
jl
ljmp
push
out
cwtl
dec
cs
and
xchg
push
scas
jl
pop
or
push
pop
cmp
rorl
xchg
sbb
rcrl
pop
mov
std
dec
test
mov
imul
pop
push
mov
cmp
aas
nop
lret
nop
sahf
aam
dec
and
outsb
push
jmp
push
pop
movsl
add
xorb
movq
dec
jbe
dec
pusha
and
std
test
popf
sar
nop
push
rcrb
movsl
ds
ds
rcl
sbb
mov
pop
sarb
sbb
fucomip
outsb
pop
loop
addr16
pushf
xlat
mov
mov
clc
out
out
push
negb
inc
nop
cwtl
mov
stos
jo
ss
cmp
jge
jbe
fcoml
inc
lods
pop
mov
ss
pop
cwtl
test
mov
icebp
call
pop
xchg
xchg
cs
mov
cmp
ljmp
sarb
stc
add
mov
sbbb
push
cli
mov
pusha
jo
ja
jle
xchg
gs
or
aad
jmp
adc
mov
imull
fildll
push
jg
mov
cltd
test
fdivp
incb
repz
xchg
push
push
cmp
push
scas
mov
movb
sub
das
cmp
cmp
insl
addl
jae
cmp
xchg
arpl
adc
pushl
iret
mov
push
xchg
loop
pop
xor
jbe
ljmp
mov
mov
xchg
icebp
add
inc
call
jbe
jae
into
ret
adc
loope
ud2
push
out
outsb
adc
fucom
imul
mov
jmp
and
mov
fldl
fucomip
mov
mov
gs
mov
lcall
jmp
add
add
inc
cmp
mov
test
popa
ret
outsl
test
lcall
mov
push
lahf
mov
dec
mov
outsl
push
dec
add
lcall
mov
jmp
mov
and
jns
pop
jecxz
clc
insb
testb
mov
jnp
gs
sbb
ss
rolb
lahf
sbb
xchg
loope
addr16
ss
jmp
sti
xchg
lods
sar
repz
aas
enter
jns
cmp
sbb
roll
jg
pop
test
mov
dec
cwtl
mov
das
outsl
aas
test
mov
imul
sti
xor
jg
out
stos
or
test
iret
mov
dec
in
push
pop
xchg
ficoml
xor
loopne
mov
inc
jne
add
push
dec
test
clc
ja
in
push
or
adc
cmp
jns
pop
xlat
cli
lret
jo
jo
stos
jo
and
rcl
stc
sbb
xor
and
push
loop
das
jo
ljmp
mov
xchg
ret
fisttps
mov
fwait
mov
fnsave
loopne
cmp
pop
sbb
jne
sbb
mov
mov
stc
movsl
jb
je
or
push
inc
jnp
xor
jge
clc
fistpll
icebp
xchg
nop
and
fwait
pop
xchg
clc
pop
pop
stc
cs
lock
xchg
lods
mov
fdivr
mov
test
pop
sbb
bound
popf
lcall
push
mov
xchg
cmpsl
mov
cwtl
xchg
sbb
jno
dec
fbld
scas
mov
call
bnd
mov
ret
lods
jp
mov
mov
shrl
std
pusha
inc
das
jne
mov
jg
lcall
and
mov
or
xor
jg
mov
mov
mov
ja
add
iret
mov
mov
add
xchg
sahf
jbe
call
mov
mov
cld
fnstcw
ljmp
cmp
andl
cmp
or
ret
incl
shl
cmp
daa
cmp
scas
mov
decb
jmp
test
adc
sarb
mov
xchg
movsl
pop
shrl
cli
xor
xor
in
and
xchg
cmp
iret
scas
outsb
cmp
imulb
jg
dec
push
inc
push
iret
repz
or
inc
inc
cmp
cmp
sub
sub
sub
adc
out
in
jo
mov
data16
mov
loopne
xor
pop
incl
addr16
into
cmp
pusha
xchg
jge
sarl
sbb
sbb
frstor
sbb
pandn
mov
scas
out
outsl
lret
leave
cli
jne
mov
outsl
sbb
mov
test
cmp
cmp
minps
mov
mov
mov
negl
push
insl
lea
mov
ss
pop
sbb
mov
out
pop
arpl
jmp
sbb
call
push
jns
mov
out
cmp
cs
mov
adc
mov
sti
push
cmpsl
inc
jge
pop
icebp
enter
mov
test
xlat
jp
popf
icebp
lock
push
cmp
xchg
icebp
cmp
and
dec
pop
cmp
mov
cltd
inc
popf
pop
xor
bound
insb
enter
push
add
push
insb
cmp
mov
jns
xor
pushl
ja
mov
out
xor
lahf
call
icebp
setno
sbb
leave
decl
cmp
loopne
inc
sahf
or
mov
xchg
mov
clc
ss
xor
cmp
mov
repz
fdivr
shr
aam
sti
inc
in
mov
cwtl
pop
aad
shl
push
shl
sbb
lea
add
jbe
scas
adc
dec
mov
pop
xchg
jns
fists
aas
movsl
cltd
pushf
testl
mov
lock
std
filds
pop
repz
inc
or
sub
jne
xor
or
push
mov
xor
pop
sar
into
mov
sub
loop
out
icebp
xor
popa
and
mov
mov
fists
mov
sar
push
dec
dec
icebp
add
cmpsb
insl
fst
cmp
cli
aas
fnstsw
jmp
pop
push
mov
push
sub
and
pushf
jns
pop
outsb
lcall
neg
dec
mov
cmp
js
stc
pop
or
xchg
loopne
inc
cld
inc
and
subb
decl
call
outsb
jnp
or
jp
mul
jle
mov
popf
cwtl
jmp
jg
loopne
sti
mov
iret
sbb
add
lcall
pop
enter
in
decl
fsub
jge
adcl
pop
cmp
cmp
sbb
shr
pop
mov
arpl
mov
push
jge
daa
pushl
aas
out
gs
pop
mov
outsb
scas
push
inc
arpl
std
xchg
push
xchg
and
mov
mov
aas
xchg
in
ljmp
fists
sti
div
mov
pop
mov
xchg
incl
das
jl
mov
stos
out
int3
sub
adc
ja
es
fisttpll
int3
cli
adc
inc
lock
hlt
iret
inc
sbbb
or
inc
insl
outsl
in
adc
pushf
pop
add
test
dec
jle
fnstsw
dec
xor
dec
sbb
ljmp
incb
shll
and
out
jnp
cmp
sbb
rcll
rcrb
mov
xchg
mov
inc
push
cmp
sbb
test
cmp
bound
lock
frstor
sahf
insb
add
push
or
jmp
cmp
int
cld
jno
addl
or
or
pop
cld
xor
sahf
mov
add
fs
cmp
pop
pop
jmp
cmp
ret
cli
lahf
sarl
test
mov
xor
cltd
imul
adc
sbb
loope
fs
inc
xchg
cld
jg
aad
sar
iret
xchg
pushf
push
cs
xchg
mov
shll
in
test
imul
imul
lods
mov
test
pop
hlt
cs
jnp
mov
xchg
mov
mov
xor
mov
dec
push
pop
addl
mov
loop
and
jge
sti
add
imull
add
xchg
mov
jg
stos
or
jns
mov
decl
mov
sub
cmp
jo
mov
cmp
push
push
and
inc
std
add
aad
outsl
cmp
scas
scas
in
push
sub
lock
call
inc
cli
les
sbb
stos
xchg
pop
ror
std
outsl
lock
imul
imul
push
and
cmp
lock
jnp
insl
test
adc
push
js
sub
xchg
and
inc
aam
dec
jo
daa
or
aaa
out
cmp
push
jo
repnz
jmp
sub
or
in
sbb
pop
mov
rorl
jge
repnz
out
jmp
mov
inc
lock
sub
rcr
cli
mov
mov
push
jle
ss
pop
cmpsl
jns
push
push
cmp
lea
repz
cld
xchg
xor
movsl
test
jle
scas
fcoms
out
pushf
ret
push
mov
testb
test
sysexit
or
ret
or
cmp
push
cld
in
push
insl
jmp
sbb
fwait
push
repnz
sub
lea
add
repnz
add
adc
mov
adcl
cmp
push
sub
je
sti
add
xchg
call
leave
or
iret
dec
add
sub
mov
test
pop
loopne
add
scas
loopne
push
inc
ret
addr16
sbb
sub
push
mov
bound
dec
daa
lahf
mov
xchg
lahf
and
mov
add
pop
std
mov
push
fmull
js
test
cmp
lock
lods
ljmp
pop
out
repnz
in
sub
inc
inc
ud0
cmp
mov
push
mov
adc
sub
push
mov
clc
lahf
lock
arpl
frstor
jo
xor
add
add
gs
sti
out
jg
add
push
adc
lock
addr16
add
jbe
aaa
jmp
cwtl
lret
xchg
lahf
pop
and
les
push
and
addr16
jns
push
loope
sbb
jg
mov
adc
or
aas
pop
dec
dec
mov
dec
dec
mov
call
fisubrl
push
add
loopne
int
sub
rcr
add
xchg
sbb
lods
pop
mov
int
dec
mov
sub
push
cli
aas
lock
and
and
and
mov
lods
pop
fs
fs
lret
ja
lds
cmp
sbb
js
fisubs
dec
clc
frstor
out
es
lahf
sub
setbe
xor
push
add
std
inc
jo
stos
test
add
sti
mov
jg
incl
push
popa
mov
xchg
and
cld
jnp
pop
sub
movups
push
jle
ja
insl
cld
pop
idivl
add
jnp
and
lock
pop
dec
pop
fmul
or
mov
mov
imul
std
push
fisubs
mov
aas
adc
es
xchg
call
cmp
mov
lods
xchg
fs
push
push
xor
xchg
mov
mov
aad
push
sti
mov
fs
outsl
or
std
jae
test
call
rcrl
sub
cmp
ja
add
loopne
pop
inc
stc
sub
loopne
and
std
dec
cld
shr
scas
sbb
xchg
cmp
fisttps
inc
push
test
loopne
add
and
add
outsl
cwtl
je
fldl
push
loopne
inc
pop
gs
dec
xchg
dec
es
sbb
aad
mov
sarb
stos
mov
inc
sbb
decb
and
jne
adc
jne
cmp
cmp
cs
jb
add
jne
jge
scas
jg
pop
sbb
mov
outsl
adc
std
filds
pusha
add
jmp
xor
scas
pop
sbb
scas
fnstenv
push
mov
sti
icebp
sub
sbb
dec
mov
jg
sbb
push
xchg
xchg
jl
pusha
cld
icebp
lock
imul
xchg
sbb
fwait
xor
sub
pop
test
push
xor
add
and
loope
cmpsl
ret
sbb
insb
mov
mov
imul
popf
lds
jmp
xor
das
cmp
mov
push
das
subb
int
pusha
std
je
dec
repz
int
cli
inc
mov
mov
sbbb
add
xor
jno
xchg
lock
gs
or
add
mov
aas
adc
rcr
add
push
out
xlat
or
cld
pop
or
push
les
pop
rcr
subl
je
sarl
sub
cmp
clc
fisttps
sbb
dec
stos
push
sub
incb
sub
cmpsb
sbb
ffreep
sbb
fnsetpm(287
adc
wrmsr
mov
inc
jae
js
pushf
dec
hlt
sub
mov
pushl
hlt
dec
lds
mov
add
out
outsl
mov
push
cmp
aaa
test
js
jns
xchg
lock
int
out
cmp
add
stos
mov
sbb
mov
push
sbb
loope
pop
outsb
es
add
aas
inc
icebp
aam
arpl
fstpl
cs
loop,pt
in
jno
aam
and
andl
fstpl
or
lret
add
iret
loop
fisttpll
mov
repz
loope
mov
push
lods
das
stos
jns
cmp
pop
mov
call
jns
jle
ja
xor
movsl
mov
add
mov
andl
jmp
lret
icebp
lahf
and
enter
push
fwait
lcall
adc
stos
jns
mov
jo
ja
mov
mov
testl
dec
xor
call
mov
mov
cmc
sub
cld
jg
mov
rclb
mov
adc
jo
aas
pop
stos
dec
pushf
aam
adc
lret
out
xchg
cltd
mov
adc
cmpl
inc
jae
rolb
out
stos
icebp
inc
sub
aaa
std
xorl
hlt
roll
fucomp
inc
mov
push
jbe
enter
aas
rorl
cmp
pushf
mov
push
shrb
sbb
push
loope
cmpsl
outsl
scas
xchg
lods
aam
iret
pushf
lcall
fadds
in
popa
clc
xchg
sub
loopne
lds
lret
lret
lret
sti
xchg
loopne
jg
mov
mov
sti
pop
dec
mov
lahf
mov
and
cmpsb
mov
sub
outsl
popa
lock
and
sbb
scas
xchg
iret
push
inc
outsb
xor
pop
pop
mov
icebp
jnp
or
std
cmovbe
pop
jmp
test
sub
jg
cmp
cwtl
pop
pop
lock
pop
aas
jp
pop
sub
leave
xor
sar
jg
pop
xchg
cmc
insb
mov
mov
cmp
pusha
div
fcoml
add
inc
loope
imul
cmp
mov
adc
imul
inc
push
cltd
sbb
pop
fsubrl
mov
test
std
xchg
in
std
scas
xlat
mov
cmp
andl
in
jmp
mov
into
cmp
into
mov
out
fwait
sub
movsl
fsubl
jmp
push
mov
jae
mov
jo
add
nop
mov
sub
add
jnp
add
push
jle
mov
test
inc
mov
and
out
fbstp
inc
roll
mov
sub
pushl
outsl
in
aad
mov
popa
test
in
and
push
imul
leave
xor
jle
and
inc
das
clc
loopne
xchg
stos
lcall
xchg
add
in
sub
lea
push
push
lea
push
push
push
push
imul
jno
push
lea
push
pushl
push
pop
add
ja
out
mov
add
leave
sub
arpl
shl
cmpsl
fstp
push
push
lods
lret
popa
mov
pop
and
sbb
cmp
rorl
icebp
push
inc
sbb
add
adc
jmp
mov
add
add
or
push
or
push
decl
in
outsb
pop
xor
xor
inc
roll
bound
xor
sbb
push
sub
aaa
xor
push
cld
clc
test
push
push
xor
popa
dec
inc
adc
sub
mov
sahf
xor
sub
add
adc
push
sub
fs
add
fnstcw
stos
loopne
ss
adc
and
dec
inc
popl
dec
cld
aas
fdivrs
xchg
inc
add
adc
inc
add
add
insl
pop
push
faddl
andl
dec
xchg
push
idiv
jne
adc
mov
pop
scas
sbb
mov
inc
gs
push
mov
sarl
inc
dec
xor
add
call
cli
add
sub
mov
add
mov
xlat
mov
fistl
and
rolb
enter
xor
fsub
push
imul
shll
adc
fldenv
push
sub
int
mov
rsm
mov
ljmp
push
dec
shll
dec
dec
inc
in
rcll
sbb
push
push
pop
fdivrs
push
push
mov
les
pop
sbb
inc
add
push
lahf
mov
push
jns
dec
adc
jo
pop
aas
and
sbb
mov
sub
adc
rcll
add
pop
push
cmp
sub
dec
lods
push
push
shl
jns
loopne
push
in
in
insb
lcall
mov
push
mov
add
add
loopne
int
push
xor
jmp
sar
push
xor
push
stos
push
lock
imul
xchg
cld
xor
xor
sbb
add
jg
adc
xorl
fmull
aad
scas
xchg
ljmp
push
cmp
cmp
lds
pop
sbbb
data16
push
ficompl
push
mov
sarl
jp
jg
roll
ret
mov
into
in
ss
incl
push
imul
or
push
pusha
fcomip
add
mov
call
cmp
stos
mov
add
mov
fcompl
dec
xor
and
hlt
pop
in
int
inc
clc
notl
test
inc
xor
xor
or
insb
push
jo
inc
fsubrl
addb
stc
scas
scas
sti
fucomi
sub
push
push
xlat
push
test
inc
push
incb
pop
mov
dec
push
inc
aaa
push
fimull
jp
push
or
push
std
lcall
lret
sub
mov
jmp
xor
imul
add
jnp
popa
jno
push
movsl
lock
jbe
ljmp
out
lds
rcr
xorl
mov
push
pop
aam
dec
imul
sbb
insl
jg
jae
inc
or
adc
add
cmpsl
jg
adc
negl
xchg
sub
fiadds
dec
outsl
ja
insb
mov
or
dec
inc
push
push
sub
xor
bound
imul
das
and
mov
cltd
stos
and
outsb
js
sbb
mov
adc
fwait
loopne
lock
insl
inc
add
sub
inc
incl
and
lods
cwtl
and
add
ret
sbb
mov
push
cmpsl
cmp
insl
push
sbb
cmp
push
in
jnp
ss
or
or
or
jp
pop
push
orl
lods
and
cmp
rorl
mov
sub
cmp
inc
fcomp
pop
dec
pop
pop
and
push
in
inc
push
push
push
and
sbb
push
pop
push
jg
mov
push
stos
into
cs
cld
insb
in
aaa
call
jne
fstps
jbe
xrelease
out
push
push
dec
lret
inc
inc
xchg
negl
icebp
incb
xlat
ret
mov
jne
outsl
hlt
mov
push
sub
rcll
mov
cld
lock
inc
add
push
cld
cmp
push
sbb
jle
adc
imul
testb
push
std
pushf
add
cmp
call
push
pop
addb
mov
aaa
pop
or
lret
cli
add
imul
add
mov
loopne
mov
add
imul
mov
sbb
push
add
pop
cmpsl
dec
mov
mull
sar
ljmp
inc
mov
sub
dec
mov
xor
xor
ds
loopne
cld
ret
jno
xor
movsl
dec
pop
mov
jo
outsb
cmp
test
addr16
cmp
mov
sub
stos
orb
or
add
pop
incl
iret
inc
dec
push
test
das
out
cmp
add
insb
xchg
loopne
test
call
enter
sbb
outsl
aaa
push
adc
inc
add
add
dec
std
mov
dec
inc
dec
adc
inc
add
dec
sbb
adc
sub
dec
sbb
dec
sub
jmp
repz
insb
fadds
je
push
aaa
dec
or
and
insl
ja
gs
push
and
sub
sti
pusha
add
sbb
add
sub
sbb
out
in
add
pop
and
push
fcoms
mov
dec
nop
sub
mov
pop
int3
push
rorb
xor
pop
pusha
outsl
enter
ss
adc
sub
sub
add
sar
mov
enter
mov
jnp
insl
das
ds
pop
xor
aam
sarl
mov
mov
pop
sar
pushf
ss
out
popa
pop
fwait
fwait
mov
add
fs
mov
mov
int
fdivrp
adc
dec
inc
dec
or
xor
imul
dec
sub
dec
out
jns
imul
xor
inc
pop
enter
outsl
rorl
mov
js
jb
and
pop
push
dec
adc
mov
frstor
mulps
enter
dec
dec
dec
inc
cmp
fwait
cmp
idivl
dec
js
push
ljmp
add
inc
insb
inc
dec
adc
mov
adc
mov
push
popa
fs
jb
push
push
stos
push
jo
push
clc
pop
pop
mov
sub
test
push
in
inc
add
inc
outsb
sub
jge
or
or
push
int3
dec
ja
xorl
mov
lahf
push
enter
fsubrs
adc
add
dec
jae
cmp
mov
inc
mov
xlat
mov
shrl
je
ss
push
jmp
pop
cmovne
sub
inc
cmp
notb
lret
mov
ds
pop
dec
inc
jno
outsl
dec
inc
arpl
pusha
inc
ret
call
push
pop
sub
pop
lahf
lock
add
xor
loope
dec
addr16
and
addr16
addl
cmp
mov
push
inc
aaa
dec
push
jo
in
ja
and
mov
push
pop
mov
push
add
push
dec
dec
jb
loopne
add
adc
or
or
or
lret
test
sbb
xor
sbb
lock
inc
jl
adc
jle
jae
arpl
push
sub
pop
pop
mov
or
fucomi
jmp
push
lahf
push
movb
push
push
adc
pextrw
add
or
dec
adc
jp
pop
mov
push
adc
jbe
push
in
jns
pop
lcall
lret
mov
sbb
lahf
cmp
inc
sarl
in
in
out
jo
fisubrs
or
push
loope
pusha
pusha
push
mov
inc
and
cmpsl
pop
lods
xchg
push
cmp
movsl
xchg
insl
jno
push
hlt
mov
dec
outsb
pushaw
js
xchg
push
sub
jne
push
add
add
repnz
adc
sub
xchg
fadds
pop
add
sbb
cmc
lcall
jbe
inc
mov
dec
add
dec
add
sbb
xchg
mov
jp
add
xlat
adc
xor
pop
cmp
add
add
jo
stc
hlt
push
test
and
sub
dec
aam
lods
call
dec
mov
daa
jge
xor
push
enter
repnz
sub
adc
add
aaa
xchg
xor
mov
clc
push
ss
insb
push
out
mov
mov
push
push
sub
and
je
push
clc
push
movsl
mov
outsb
pop
enter
add
sub
insl
icebp
jmp
jo
fwait
loopne
je
add
inc
jecxz
cmp
adc
sar
xor
dec
negl
push
mov
jle
xchg
xor
dec
adc
andnps
pusha
lds
insl
rcrb
pop
enter
js
jb
stos
clc
xor
dec
sbb
add
aas
sub
sbb
add
dec
out
mov
push
push
stc
mov
outsl
mov
push
xor
cmpsb
inc
or
and
xchg
jp
dec
xor
adc
dec
dec
inc
cld
lahf
inc
sbb
mov
inc
adc
ret
sbb
add
rcrb
js
paddusb
mov
outsl
xor
jae
or
dec
adc
cmp
push
jmp
dec
stos
fdivs
dec
jne
push
xchg
sarb
loope
rorb
jl
sbb
pop
out
or
dec
int3
add
pop
sub
movsb
aas
cmpsl
inc
add
inc
add
std
aaa
add
sbb
dec
sub
sbb
mov
andb
dec
in
fstps
add
stos
pop
xor
loope
xor
sbb
lods
cmp
jl
push
enter
aas
push
sub
shrb
adc
or
lock
sub
add
xor
daa
lods
mov
push
mov
push
add
bound
inc
aad
xor
rol
sbb
push
dec
loope
enter
sti
lock
xlat
repz
incl
adc
or
je
adc
inc
sub
adc
add
sbb
sub
sub
push
mov
ss
inc
add
dec
add
bound
cmpsb
ja
xor
inc
xchg
insb
push
pop
paddw
dec
aaa
bound
fisttps
mov
push
je
divb
cmp
arpl
sub
jp
push
push
shr
mov
sbb
int
xor
mov
pop
imul
pop
inc
rcrb
add
std
mov
add
sbb
add
jbe
dec
add
decb
dec
cs
inc
mov
mov
stos
sub
mov
addr16
adc
fidivrs
pop
rolb
pop
imul
xchg
cmp
fnstenv
inc
add
cmp
out
sbb
hlt
push
xor
mov
lret
and
pushf
sub
rcrb
lock
jbe
inc
out
mov
cmc
dec
in
testb
incl
clc
add
mov
add
inc
addb
ljmp
adc
mov
test
inc
jb
ficompl
push
daa
sbb
dec
enter
sbb
cli
sbb
mov
insb
xor
nop
shll
fdivs
aaa
xchg
loope
popf
in
pop
mov
xor
mov
mov
or
data16
jmp
dec
push
push
dec
inc
push
sub
add
call
jbe
dec
inc
or
fs
mov
xor
mov
insl
mov
mov
repz
mov
xchg
inc
pop
push
push
aam
popa
mov
add
shl
xor
xlat
fdivl
ja
dec
pusha
ja
outsb
xchg
aaa
inc
insb
dec
fstpt
outsl
dec
dec
inc
jae
dec
dec
sub
xor
dec
inc
mov
je
std
mov
lods
loopne
push
aad
cwtl
mov
mov
insb
mov
das
push
adcb
outsb
insb
jne
inc
mov
push
ljmp
dec
jge
out
xor
pop
dec
scas
popa
enter
xchg
dec
jb
out
insb
mov
loope
repnz
dec
push
mov
lret
shlb
adc
lods
arpl
ret
or
imul
inc
cli
test
dec
mov
or
jne
rcrb
mov
hlt
pop
and
inc
dec
sbb
sub
test
pop
dec
mov
adc
cmp
push
jae
xor
test
cld
ja
xor
aad
ja
xlat
ljmp
and
mov
fmull
push
xchg
or
popa
push
les
xlat
testl
mov
popl
push
sbb
es
test
add
jnp
dec
rorb
dec
push
pop
push
push
jo
fs
sbb
call
push
jbe
push
pop
movsb
push
cmp
ficompl
jbe
arpl
test
into
jb
jp
rolb
jecxz
dec
cmp
add
movl
xor
push
cmp
ss
imul
popa
sbb
sbb
push
adc
cmp
decl
arpl
push
jno
mov
mov
dec
inc
xor
cld
addl
rolb
imul
stc
mov
jbe
insl
jae
mov
mov
push
repnz
mov
jno
sub
xor
push
inc
cmp
movsb
pop
bound
jbe
shl
rorb
imul
push
mov
jl
imul
shll
jo
inc
pop
sub
loope
adc
and
std
jmp
sub
es
mov
or
inc
xorl
add
out
dec
push
roll
xchg
push
push
fnsave
add
inc
jge
inc
inc
andl
stos
outsb
cmc
dec
js
gs
popa
lock
ret
and
fchs
pop
push
cld
pusha
xorl
jo
sbb
push
inc
or
popl
adc
in
pop
cmpsl
and
push
movsl
das
mov
mov
ret
or
add
add
add
adc
mov
in
and
push
fcompl
out
fwait
cmc
fiadds
clc
adc
ret
push
inc
cli
mov
data16
cli
add
sti
inc
pop
jmp
fs
punpckhbw
loope
pop
sub
xchg
jl
popa
cmp
xorl
cld
nop
dec
mov
dec
jne
fimull
sarb
inc
int
push
push
adc
mov
inc
cmc
decl
adcb
jo
sub
pop
dec
mov
ss
cld
arpl
insb
xor
sbbb
scas
aas
xor
push
nop
push
push
push
shr
mov
clc
imul
dec
movsb
loop
out
addr16
mov
adc
push
pop
push
mov
stos
pop
cmp
scas
sub
gs
mov
sbb
inc
and
mov
mov
adc
jmp
pop
push
mov
or
pop
out
inc
bound
dec
inc
movsb
fsubr
push
mov
mov
add
add
xchg
sub
push
jecxz
loope
cmp
adc
push
xor
outsl
xor
xor
inc
add
push
test
xchg
jns
testb
sub
into
jge
jo
push
xchg
mov
lret
pushl
cmp
sbb
push
dec
gs
sbb
push
push
fisttpll
xchg
insb
push
scas
add
xor
mov
loope
push
ret
je
je
into
cmp
or
hlt
and
jo
adcb
push
push
clc
adc
xor
dec
cmp
push
incl
movsl
popf
push
cmp
sub
mov
pop
sub
fsub
test
loope
jno
add
mov
dec
iret
sub
shrl
enter
inc
lock
push
jne
sub
push
xor
push
repnz
mov
pop
cmp
jae
dec
push
loope
bound
jne
push
bound
imul
dec
sbb
test
and
int3
mov
cmp
inc
cwtl
or
addl
sub
xorl
cmp
test
fiaddl
dec
es
inc
js
lock
inc
loope
pushf
orl
inc
or
data16
pop
mov
pop
jmp
cltd
push
dec
push
outsl
addr16
andb
movsl
stc
add
mov
add
cwtl
xor
fdivs
sbb
adc
dec
and
pop
push
ja
xor
test
call
mov
adcb
sub
push
out
and
jbe
outsl
dec
and
xlat
sbb
add
dec
mov
mov
imul
je
inc
lds
out
push
inc
pop
xchg
pop
jno
sub
aas
test
shr
in
mov
in
pop
jne
addl
push
addr16
clc
jmp
ret
mov
sbb
xlat
loope
inc
xor
leave
inc
sub
insb
dec
mov
inc
shll
and
inc
inc
insl
mov
mov
int
fs
jbe
pop
push
push
cmpsb
pop
pop
cmpsl
jmp
inc
into
bound
and
hlt
inc
mov
pop
lcall
inc
js
dec
adc
sub
pop
dec
addb
or
lods
pop
adc
lahf
cmp
js
into
xorl
jle
outsl
push
mov
inc
aaa
ds
cmpb
inc
dec
mov
mov
fwait
sub
pop
ficomps
addr16
popa
xor
inc
push
hlt
push
push
aaa
jo
data16
clc
bound
int
push
repnz
add
pusha
negl
inc
out
mov
sbb
popa
xchg
mov
push
xchg
add
push
sub
outsl
subb
loope
inc
add
sbb
jns
mov
test
fs
ret
and
cmp
xchg
pop
dec
stc
insb
and
xor
ret
or
push
fsub
addr16
cmc
lcall
test
gs
popa
aaa
stos
adc
push
pop
sbb
aas
jg
push
filds
arpl
ret
jecxz
imul
pop
loopne
push
outsb
or
dec
sub
icebp
inc
fsubs
aam
in
jae
push
fs
clc
pushf
push
jne
lcall
in
inc
xchg
lods
and
call
xor
inc
add
test
mov
sub
mov
pop
sbbb
inc
or
xor
push
flds
stos
frstor
roll
mov
imul
dec
loopne
jo
mov
insb
xchg
andb
dec
dec
sbb
cmp
or
sub
js
ljmp
xor
ret
inc
rcr
dec
aas
or
jecxz
dec
mov
adc
inc
in
in
jno
outsl
adc
repz
fs
push
clc
add
adc
sub
mov
ret
dec
dec
or
dec
movl
in
sbb
sub
dec
cltd
sbb
bound
or
decl
xorl
sub
add
inc
sub
fcos
add
inc
inc
inc
add
push
add
icebp
dec
outsb
addr16
mov
pop
jnp
dec
pushl
mov
ret
sub
inc
cmp
aad
iret
mov
ficompl
ret
add
sub
mov
faddl
push
sub
pop
add
mov
inc
decl
mov
cmpsb
mov
add
sbb
jg
or
inc
call
add
push
dec
add
pop
enter
push
add
dec
and
xor
xchg
in
jo
and
clc
jl
sub
ret
leave
ret
xchg
pop
stos
lcall
inc
sub
dec
add
sub
cmp
sbb
add
mov
adc
push
pop
mov
in
addr16
jns
idiv
add
pushf
xor
adc
mov
pop
sbb
adc
lcall
fs
je
jecxz
jp
cmpsl
in
inc
inc
int3
mov
lret
mov
movzbl
outsl
dec
arpl
add
dec
arpl
pusha
add
rolb
mov
cld
pop
mov
movsb
adc
dec
scas
push
lods
add
pop
add
rorb
in
lds
ja
rdpmc
insb
sbb
push
add
inc
add
aam
aaa
add
cmp
fucomip
mov
pushf
add
add
add
pop
xchg
jmp
or
test
and
xor
cs
or
and
add
loopne
and
add
push
out
std
lahf
fst
ror
pusha
pop
inc
mov
nop
mov
add
ret
inc
loopne
jno
mov
dec
mov
add
out
add
push
xchg
jns
hlt
aaa
shlb
xchg
push
lds
movsb
int3
add
test
or
xchg
pop
add
or
xor
pushf
xchg
adc
cmp
inc
lods
stc
pop
dec
and
test
or
pop
add
adc
adc
out
push
outsl
add
mov
mov
xor
ljmp
sbb
mov
mov
mov
mov
es
pop
add
push
push
jmp
ret
das
xchg
push
ljmp
pop
aad
cmp
or
add
stos
pop
cmp
ljmp
icebp
enter
int
add
and
cld
pusha
sarb
sub
add
push
mov
sbb
cmpsb
and
lock
xor
insl
sub
stos
xchg
adc
pop
popa
xor
lea
jp
js
int
sub
inc
push
mov
addb
sarl
jmp
add
incb
daa
cmpsl
mov
imulb
cmp
xchg
mov
cmp
aad
popa
jo
xor
pop
ret
and
mov
fisubrl
or
clc
adc
imul
mov
and
loope
test
sbbl
jbe
push
push
test
ljmp
mov
add
inc
mov
mov
sbb
add
mov
stos
add
shrb
add
bound
test
imul
outsl
push
pop
popa
scas
test
out
aam
mov
xor
mov
jle
xor
mov
mov
loope
dec
shl
mov
push
in
sbb
lock
addb
int
inc
xor
call
cmp
insl
xchg
xchg
cmp
test
loop
testb
mov
dec
and
fsubs
push
ficoms
and
xchg
add
out
subb
icebp
push
adc
sub
jne
cmp
push
mov
cli
add
pop
icebp
mov
ja
inc
mov
fisubrs
into
add
adc
jbe
sub
adc
clc
mov
js
mov
or
lock
scas
cmp
mov
cld
outsl
addb
cmpsb
mov
xor
xor
pop
ljmp
push
insl
dec
xchg
loope
shl
push
popa
fnstenv
fdivrp
mov
sbb
pop
scas
sub
inc
idivl
mov
aad
sub
add
add
mov
push
scas
hlt
ret
lds
fidivl
iret
pusha
dec
mov
mov
and
mov
sbb
mov
sti
sub
dec
inc
or
fistpll
inc
in
cmp
sub
out
sub
dec
or
pop
repz
mov
xor
or
fmuls
push
mov
clc
inc
jmp
jecxz
je
cli
jb
dec
inc
push
mov
xchg
jbe
cmp
pop
rcr
pop
sub
les
test
or
insb
sub
inc
cmp
inc
mov
xchg
push
cmpsb
mov
out
fisttpl
and
jno
sub
lods
mov
push
jb
stc
push
insl
inc
pushf
mov
mov
adc
fwait
add
lcall
inc
add
repnz
add
shr
adc
in
shl
push
xchg
sub
adc
je
pop
or
push
fidivs
mov
stc
test
leavew
mov
insb
ret
cli
push
aad
or
mov
add
scas
out
adc
leave
add
jp
mov
lret
loope
loop
xchg
pop
cmp
jbe
pusha
xor
int3
outsb
xor
fs
out
push
lock
dec
js
pop
cmp
xchg
rcrb
cmp
fdivrp
adcl
or
bound
adc
sbb
add
out
hlt
rcl
jmp
jl
mov
pop
sbb
cmp
shrb
sub
insb
xor
cmpsb
add
sbbl
mov
push
jae
sub
shll
or
push
loopne
mov
cmp
shrl
inc
xchg
adc
pop
pop
pop
jne
cld
clc
xchg
pop
push
je
sbb
push
xchg
cltd
rcrl
out
imul
lret
mov
mov
mov
cmpsl
cmc
mov
sbb
or
lds
lock
mov
cpuid
ja
dec
loopne
inc
cld
fwait
pop
inc
push
insl
pop
push
dec
push
xorl
hlt
xor
test
xor
out
xchg
dec
xchg
cmp
nop
push
mov
lcall
daa
or
mov
mov
mov
push
push
loopne
xor
lret
scas
adc
xor
push
xchg
shrl
add
mov
mov
push
mov
orb
in
stos
mov
mov
add
mov
xchg
mov
mov
into
add
dec
pop
mov
mov
sbb
or
mov
fldcw
es
pop
xchg
xor
mov
ret
test
mov
lahf
xor
lret
push
inc
jbe
push
inc
mov
jge
mov
cmpsl
arpl
xchg
lea
sbb
outsl
pop
xchg
out
in
sbb
andb
xchg
or
xchg
mov
ret
out
rcrl
and
mov
push
cmpsb
loopne
cmp
fsubrl
aad
clc
cmc
pop
ret
sbb
push
add
fsubrs
jecxz
xor
cmpsb
movl
xor
cmp
hlt
push
int
adc
mov
xlat
test
jns
pusha
dec
mov
ds
pop
pop
test
notb
pop
loopne
dec
ret
mov
mov
or
mov
pop
clc
push
mov
xchg
and
mov
mov
sarl
add
xlat
xor
pop
inc
inc
mov
mov
pop
ficompl
icebp
jg
or
movb
pop
movsl
push
shrb
mov
sub
dec
mov
out
or
mov
pop
mov
adcl
pop
xlat
mov
pop
loope
or
sub
adc
add
mov
push
lock
jo
int
cld
jmp
call
cmpsb
out
jns
add
pop
pushf
imul
adc
push
push
mov
and
push
pusha
pop
mov
jecxz
and
pusha
je
sub
or
jae
ret
jecxz
push
xchg
ss
push
push
icebp
xchg
in
sub
imul
pop
stos
scas
xor
in
movl
pop
or
fwait
ljmp
sbb
int3
or
hlt
out
idiv
rol
mov
arpl
jae
lods
lods
js
push
adc
cmp
mov
adc
push
es
lods
add
pop
cmp
les
sbb
mov
in
inc
inc
sbb
cmp
out
mov
sbb
and
fdivrs
pop
lock
mov
add
pushf
inc
popf
or
and
lahf
xorb
cmp
es
inc
xor
mov
push
mov
or
jb
js
rcrb
bound
dec
aad
cmpb
lods
adc
orb
push
mov
adc
les
outsb
jnp
pop
sbb
cli
mov
sub
jbe
push
popf
rorb
je
inc
and
mov
les
mov
add
inc
pop
enter
test
cmp
inc
stos
fcomps
mov
les
aam
in
inc
mov
sti
push
inc
xchg
jle
mov
scas
dec
sub
and
sbb
lahf
pop
sbb
ljmpw
jmp
aam
icebp
sahf
xchg
jl
lock
cmp
mov
in
xor
mov
and
in
jle
xchg
mov
adc
add
fbld
sbb
and
mov
fcomps
int
lods
or
jb
xchg
stos
inc
das
ss
and
bound
cmp
inc
ja
xchg
or
adc
data16
adc
dec
clc
jnp
jnp
jne
xchg
inc
push
test
mov
xor
or
cs
sbb
cs
sahf
pop
push
or
inc
sub
insb
adc
push
in
ss
sub
movsb
shlb
dec
push
cld
xor
cmc
xor
loopne
mov
jmp
in
pusha
pop
fisubrs
jle
cltd
ja
loopne
leave
popa
insb
cld
iret
xchg
xor
xor
les
push
xchg
ja
and
shrb
pop
cld
add
fs
mov
scas
ret
mov
or
add
pop
mov
test
or
dec
pop
inc
neg
loop
cmp
mov
inc
add
xchg
ds
movsl
sbb
or
adc
popf
inc
in
orb
cmc
clc
cmp
adc
arpl
ja
jg
setb
bound
ja
loop
jns
pusha
mov
add
out
add
test
scas
aaa
call
add
rcll
loopne
iret
jae
mov
xorl
sub
xchg
mov
xor
push
xchg
add
pop
pop
push
xchg
adc
stos
xchg
xchg
jno
ds
inc
into
xor
fmul
adc
mov
and
cmp
mov
inc
hlt
shlb
inc
ja
mov
sbb
test
lds
xchg
out
into
sub
jg
js
hlt
rcll
sahf
loop
movsb
pop
push
clc
test
lahf
push
adc
mov
cwtl
push
ja
mov
js
test
pop
cmpsb
xchg
pop
in
aam
mov
cmp
f2xm1
rcrl
je
es
push
fstpt
inc
xchg
adc
ljmp
mov
jnp
sbbl
jecxz
call
mov
mov
sbb
or
std
add
and
mov
stc
fwait
call
stos
repz
mulb
clc
insb
shl
test
ds
lock
arpl
pushw
push
xor
sbb
sti
adc
js
nop
rcl
push
xor
mov
inc
lds
xlat
jle
push
or
or
cmp
sub
out
js
fs
add
and
int
or
pop
sbb
aad
dec
lds
xchg
xor
add
ss
cmp
mov
pop
push
mov
jo
ret
aaa
cmp
cmpsl
and
movsl
jae
xchg
aaa
sbb
out
and
mov
or
add
icebp
dec
pop
shlb
add
orl
das
fnstsw
push
cld
pop
xor
xor
dec
pushf
dec
daa
inc
das
pusha
jo
stos
es
pop
or
jecxz
jb
lock
or
sbb
lahf
daa
ds
shl
je
adc
popa
or
rorb
add
mov
lret
les
hlt
push
lods
pop
fs
dec
jno
mov
addr16
rorl
bound
jl
or
cmpsl
sbbb
out
repnz
insb
nop
outsb
mov
sub
mov
lea
push
js
push
pop
data16
jmp
es
cmp
popf
jle
push
lds
mov
jno
dec
push
data16
xor
in
cmpsb
mov
loope
movsl
decl
jae
push
ljmp
out
rcrb
xchg
xor
imul
cmp
loope
stos
into
mov
push
push
xchg
cmp
cmp
popf
aam
popf
add
ss
xor
jb
or
inc
cmp
cs
out
jne
and
popf
mov
mov
inc
outsb
ret
mov
mov
cmpsb
loopne
loopne
sub
repnz
sahf
gs
incb
idivl
rolb
popf
xchg
mov
loopne
jecxz
rolb
adc
imul
cmp
adc
or
pop
call
or
outsl
out
pop
push
sbb
inc
add
mov
push
add
xlat
jmp
pop
cmpsb
mov
incb
sbb
movl
mov
jle
jle
inc
ret
cvtpi2ps
xor
lea
das
mov
cmpsl
mov
nop
stos
add
mov
xchg
hlt
lds
push
cmc
repz
dec
and
xchg
jne
inc
cld
push
cmp
jbe
jns
stos
sub
aaa
int
fstps
adcb
aam
sbb
and
das
pop
mov
outsl
pop
in
lock
rclb
lds
push
lds
pop
jns
lds
mov
fwait
pop
in
mov
shr
mov
sub
pop
clc
paddd
xchg
xchg
jg
call
jae
movhps
hlt
aad
sarl
stos
dec
or
sbb
jno
aaa
cli
cmp
aam
mov
mov
sub
mov
in
push
adc
inc
shlb
fcom
mov
fidivs
js
mov
jo
jp
or
mov
rcll
in
les
cmp
cld
mov
js
add
xchg
or
push
cli
ljmp
jb
or
mov
inc
pop
dec
arpl
jecxz
lcall
pop
dec
jnp
je
adc
in
bound
sub
xor
pop
xor
mov
mov
sbb
rorl
pusha
sahf
cmp
jnp
cld
jle
mov
les
and
jnp
mov
cmp
jo
push
insl
lods
stc
and
mov
imul
xor
lods
mov
adc
and
fstl
stos
inc
es
pop
pop
pxor
pushl
aas
xchg
or
and
sub
loop
or
cltd
ret
lods
sahf
ret
sub
sub
orb
pop
mov
pop
pop
rcrl
cld
loop
mov
mov
loop
je
push
push
movsl
mov
lods
jb
pop
push
push
mov
adc
mov
dec
pop
mov
adc
jo
cmc
cli
lods
scas
push
inc
in
dec
daa
push
push
push
fs
pop
xchg
cmp
sarb
ret
pop
orl
call
inc
mov
je
aas
dec
jne
add
inc
enter
xor
add
in
shll
icebp
stos
sbb
adc
mov
push
je
and
sbb
pop
call
imull
shlb
xchg
fisubrl
mov
insl
cs
in
outsb
xchg
mov
sbb
ret
xchg
push
inc
xchg
lcall
in
loopne
lock
xchg
mov
or
roll
xor
push
xchg
daa
add
mov
adc
sub
ret
pop
nop
adc
repz
sub
mov
mov
sarl
cld
insl
cmp
out
adc
mov
jo
pop
mov
clc
mov
jle
adc
adc
shr
roll
cmp
ss
lahf
fucomip
bound
add
push
insl
rcrl
mov
or
mov
xlat
inc
shrb
shll
imul
stos
mov
dec
nopl
jo
roll
sub
add
or
cwtl
std
or
sbb
xlat
ljmp
cwtl
mov
and
scas
mov
and
and
js
xor
xorl
push
mov
pop
popf
imulb
test
pop
adc
clc
inc
cmp
pop
jno
cmc
mov
repz
outsb
lahf
mov
mov
mov
sub
adc
jl
sbbl
push
or
rolb
fists
iret
jge
fiadds
lods
mov
mov
cmp
int
js
fwait
es
adc
inc
pusha
pop
in
clc
aam
sbb
sub
pop
fimull
jg
bound
hlt
cmpsl
adc
xor
sub
inc
push
inc
das
cld
loope
mov
mov
hlt
mov
jae
ds
mov
push
inc
mov
dec
je
enter
repnz
pop
pusha
add
scas
mov
adc
ja
mov
fcom
mov
push
jl
and
repz
ret
push
shll
data16
lahf
mov
outsb
mov
test
scas
mov
loopne
mov
push
jmpw
inc
lret
pusha
or
or
pop
xlat
lock
add
in
jne,pt
stos
lahf
xor
push
dec
xchg
lds
aas
xchg
ljmp
xor
pop
std
stos
movsl
mov
or
adc
jnp
mov
daa
xchg
mov
cmc
lods
lret
shrl
mov
lcall
jmp
mov
adc
add
push
and
cmp
fwait
cmpsb
into
mov
popa
lahf
inc
jl
popf
pop
lds
lods
fisubrl
std
cmp
adcb
xchg
add
dec
lock
scas
das
mov
outsl
inc
adc
es
std
xlat
sbb
lods
sub
add
test
xchg
popf
cmp
mov
cmp
and
fnstcw
iret
jo
pop
lea
fs
push
fdivs
mov
lahf
movsb
xchg
jo
rorb
sti
mov
mov
in
or
lret
or
mov
add
xor
jmp
in
sbb
mov
movsb
das
xchg
fbld
jo
sub
push
test
shlb
lret
mov
push
sti
or
mov
push
cld
cltd
out
jnp
mov
add
fmuls
xchg
loope
mov
mov
lock
cmpsb
rolb
es
mov
pop
mov
mov
lret
addr16
cmp
mov
jno
je
inc
jmp
xlat
mov
dec
inc
push
adc
leave
xchg
data16
rclb
ljmp
icebp
shlb
push
fs
test
mov
jecxz
decb
roll
mov
adc
cmp
pushf
int3
dec
mov
out
cmp
imul
mov
push
call
pop
shlb
mov
fcomip
movsl
jp
cmpsb
mov
pop
out
and
fs
sub
in
test
ret
sahf
repz
add
xchg
jo
enter
loop
clc
mov
adc
and
fld
add
xchg
test
lea
cmpsl
enter
mulb
enter
push
les
pop
cmp
sub
or
lds
jp
ljmp
push
test
call
or
cmp
inc
xor
or
xlat
sub
xor
in
out
movsb
std
or
dec
loop
ja
aad
test
jl
aaa
outsb
je
add
push
cltd
shl
loop
clc
push
cmp
je
push
push
push
pop
movsl
push
xchg
push
push
sbb
mov
clc
sub
mov
scas
xchg
les
es
out
cmpsl
sbb
lds
xor
rorl
or
mov
stc
aam
dec
jge
loop
insb
pop
and
cmp
rorl
fbld
out
sub
add
mov
sub
cwtl
pop
xchg
cmc
lahf
jecxz
pop
ljmp
push
pushf
add
sub
add
test
sbb
sub
push
lock
cld
sub
mov
and
pop
inc
or
mov
cmp
clc
cmpsl
das
pop
into
add
sti
daa
cld
add
adcl
dec
adc
jp
pop
and
inc
rorb
xchg
jmp
imul
or
push
pop
scas
inc
aas
popa
push
pusha
add
es
and
pushf
cmpsb
add
fs
loopne
inc
sbb
pop
cmp
lds
pushfw
inc
leave
jbe
cmp
xor
movsl
andb
push
xor
cli
adc
adc
adc
lret
mov
xchg
inc
add
call
or
and
cld
stc
testl
mov
shl
divl
cli
mov
xchg
cmpl
mov
leave
sub
cmp
adc
jl
mov
test
cmp
je
adc
or
stos
test
out
xchg
sbb
inc
clc
sbb
rcl
fcoms
incl
mov
jne
nop
cs
in
fs
sbb
inc
jl
jp
mov
stos
clc
packssdw
call
sub
cmp
xchg
ljmp
jl
lret
mov
movb
imul
adc
and
loopne
push
xor
aad
leave
xor
fstl
pop
pop
and
stos
in
ret
and
sbb
inc
fsubs
adc
les
loopne
jne
cmpb
push
repnz
inc
jnp
stc
and
sbb
divb
and
in
push
imulb
enter
addr16
test
inc
mov
fadd
and
std
loopne
or
rcrb
or
jno
sbb
pop
adc
nop
jo
lods
adcb
mov
cmp
dec
dec
adc
xor
push
pop
js
mov
inc
stos
xchg
cli
out
lods
adc
shl
cmpsl
jmp
lahf
inc
int
sbb
out
popf
shrd
dec
xchg
lahf
ss
mov
mov
pop
cld
orb
add
negb
dec
add
sbb
push
nop
mov
and
mov
or
fimuls
push
addr16
xor
ss
pop
fcmovb
jle
jo
in
enter
rclb
mov
mov
cmp
jo
cmp
rolb
out
inc
jmp
pop
int3
loopne
mov
test
mov
cmp
jmp
fmull
cmp
in
inc
xchg
stos
jnp
add
leave
rcll
ds
add
sarl
js
adc
test
fdivrs
out
shlb
cmpsb
add
pop
jmp
adc
subb
dec
mov
sbb
lcall
leave
jg
lock
daa
sub
jecxz
shrb
or
jg
inc
cs
or
in
call
sarb
cmc
or
sbb
loop
jg
jl
push
test
sbb
fsubp
sbb
lea
popl
gs
in
dec
loopne
outsl
scas
scas
dec
sti
fildll
fldenv
std
fistps
jno
cli
sar
loopne
cli
pop
sbb
cwtl
or
pop
je
and
lea
test
cmpsb
fbstp
dec
and
xor
stos
nop
inc
and
sub
enter
insb
sbb
jle
cwtl
loopne
add
mov
dec
inc
and
imul
mov
shll
xor
cmpsb
lods
xchg
andl
aas
cmp
mov
daa
mov
or
in
aas
lods
sbb
and
mov
ja
sub
add
and
xchg
hlt
fwait
dec
inc
mov
loopne
icebp
iret
push
adc
inc
mov
hlt
cwtl
adc
ljmp
lods
dec
scas
addl
rorl
add
lea
mov
xor
xchg
insb
xorb
orb
call
xchg
xor
jl
shr
cmp
pop
enter
pop
mov
mov
adc
xchg
xchg
int3
jo
outsb
out
rcrb
fidivrs
out
add
pcmpeqd
xor
mov
rclb
call
add
pop
mov
mov
lods
sti
daa
push
in
outsl
and
data16
add
leave
cmpsl
mov
and
es
in
mov
fs
dec
add
pop
ud0
xor
or
and
add
dec
mov
or
cmc
sub
ret
out
rorl
test
xchg
lock
mov
movsb
jnp
push
cmp
test
in
cmp
add
rcrb
add
sub
xor
std
pop
push
mov
es
push
inc
sahf
dec
ljmp
dec
out
mov
in
test
sub
aaa
push
int3
xor
jo
fidivrs
jecxz
std
push
mov
jns
fiadds
mov
rcl
mov
in
push
mov
mov
int
aad
xchg
in
iret
pop
rcll
pop
loopne
inc
ds
fcmovnb
or
push
xchg
inc
mov
fdivrl
mov
call
jle
adc
popl
jb
into
pop
adc
inc
and
inc
lea
cli
lds
out
dec
sbb
pushw
ret
push
leavew
mov
sub
fildl
mov
cli
push
sbb
cmpb
lock
repz
mov
sub
sarl
sub
pop
and
or
adc
adc
jecxz
iret
stos
mov
stos
inc
in
test
and
rol
add
popa
test
xor
jno,pt
out
and
add
cmp
loope
je
mov
mov
mov
rcrl
cmp
xor
pop
xchg
addb
imul
aam
add
mov
ljmp
lret
mov
mov
das
mov
jmp
and
lcall
aad
mov
mov
jl
je
cmp
sarl
pop
or
mov
out
test
inc
fwait
cmp
xchg
mov
fidivl
sub
mov
dec
lods
or
lret
rol
stos
dec
sub
mov
adc
pop
push
pop
imul
xchg
mov
inc
stos
fnstenv
add
jo
jnp
pop
pop
inc
mov
jno
add
jne
ret
ret
bound
cmp
mov
ljmp
lods
cmp
negb
or
cmp
and
mov
mov
in
push
mov
dec
daa
popa
iret
fiaddl
sbb
sub
jmp
jns
adc
mov
sbb
mov
mov
push
add
mov
insb
cmpsl
inc
xor
out
jl
mov
jmp
inc
sarl
fnsave
std
mov
fimull
shl
xor
js
jbe
jbe
jmp
pop
xchg
or
outsl
or
sbb
or
pop
out
pushf
inc
das
cld
sub
xchg
adcb
imul
ja
jne
pop
insb
rcr
sub
cmpsl
adc
into
in
xor
loop
inc
out
cmp
dec
jl
in
push
ret
push
mov
inc
and
add
pop
lock
into
sub
and
scas
das
dec
jae
mov
ret
cmpsb
xchg
and
js
dec
adc
je
pcmpeqw
add
mov
pop
push
inc
pop
hlt
test
pop
push
daa
push
jb
cmp
cmpsl
pop
dec
inc
inc
aad
dec
mov
adc
int
jb
push
mov
stc
lcall
fwait
mov
loopne
jle
sub
sbb
aad
pop
sub
orb
push
fdivrl
sub
or
lock
add
pop
sbb
insl
into
loop
xor
push
fildl
sbb
cmp
iret
das
cld
jno
adc
cld
bound
push
rcrb
pop
xor
inc
or
xchg
push
lods
jmp
jnp
cmp
inc
icebp
fcompl
xchg
sahf
cmp
or
cld
push
mov
xchg
inc
dec
xor
out
adc
cli
test
test
insb
mov
les
lahf
add
jecxz
fdivs
or
and
movsb
pop
xchg
jno
loop
shll
cmp
or
sahf
ja
mov
sub
scas
xlat
ret
das
bound
adc
outsb
loopne
mov
shlb
repz
cld
aas
arpl
xor
imul
rorb
je
mov
inc
cld
jecxz
and
mov
cli
mov
lret
cmp
adcl
out
pop
loopne
xor
inc
sbb
aad
xchg
mov
in
ds
jmp
push
outsl
pop
lods
push
rorl
push
jg
xor
dec
add
call
fimuls
das
push
rdpmc
adc
xor
add
in
cltd
repz
out
inc
xor
xor
xorb
lds
test
sti
loop
aas
mov
push
loopew
xchg
les
mov
bound
js
fsts
xchg
xor
and
nopl
push
pusha
leave
sti
mov
or
push
xchg
out
cmp
add
or
loop
jecxz
imul
mov
repnz
pop
mov
popa
pop
push
ss
add
sbb
arpl
push
xlat
mov
adc
cld
xor
jae
dec
inc
jnp
scas
mov
inc
out
xchg
mov
movsl
scas
mov
xchg
shll
stos
aad
iret
shrl
xchg
cwtl
add
loope
and
std
cmpsl
mov
popa
jmp
mov
lahf
loop
jnp
mov
ljmp
loope
fldt
mov
scas
inc
ja
repz
mov
sbb
call
sahf
clc
and
pop
pusha
push
or
push
in
sub
push
add
sub
mov
dec
mov
push
pop
cmp
sub
inc
cmp
add
loope
inc
mov
mov
and
scas
push
rclb
cwtl
xor
add
pop
dec
adc
notb
nopl
cmpsb
xor
mov
sbb
and
stos
nop
xor
mov
sbb
or
rorb
hlt
mov
idivl
xchg
and
add
cli
inc
clc
add
jle
sbb
test
scas
push
cmp
or
push
adc
adc
lea
mov
stos
sarl
xchg
dec
xchg
outsb
pop
sbb
clc
sub
loope
and
in
jecxz
inc
pop
out
rolb
xor
push
rorl
shr
pop
sbb
cs
das
inc
jnp
ret
ret
cmc
dec
mov
pop
pop
ret
mov
add
pop
dec
incl
inc
vxorps
enter
pop
xchg
ret
test
jnp
push
jbe
push
pop
mov
add
scas
scas
lea
adc
sbb
ret
push
push
imulb
adc
loopne
adc
sbb
shr
and
sbb
aas
stos
and
and
mov
addr16
push
sbb
test
xorl
mov
divl
push
xchg
add
adc
psubusw
pop
ret
js
add
jb
xchg
sub
mov
push
andb
push
gs
or
aas
ret
cmp
loopne
data16
xor
rcrb
loopne
jg
cmc
dec
out
push
imul
mov
sbb
mov
mov
jno
xchg
push
jmp
mov
std
inc
cli
ljmp
pop
insb
pop
nop
sub
hlt
mov
sub
jle
mov
fwait
mov
or
test
mov
pop
lock
lods
sbb
jge
adc
ds
jmp
push
push
std
xor
pusha
repnz
add
adc
pushf
or
and
and
push
out
or
lds
dec
mov
adc
xor
pop
adc
lds
xchg
mov
pop
pop
push
rolb
mov
shrb
dec
addr16
cmpsl
pusha
hlt
push
mov
fildll
adc
pop
call
lods
cwtl
stos
ds
roll
sub
lock
sub
aaa
push
pusha
xchg
scas
int3
subl
cmpsb
imul
in
or
enter
in
rorb
or
cmpb
add
push
insb
jo
or
nop
cmp
mov
mov
xchg
jae
and
test
loope
iret
cmp
pop
mov
inc
push
fiaddl
pop
lret
ds
jg
pop
fwait
sarb
mov
jp
pop
mov
mov
mov
xor
int
jge
push
jns
adc
adc
shrb
cmp
fldl
es
testl
sbb
pop
lcall
test
push
das
mov
mov
or
lds
les
sbb
sub
dec
sub
mov
and
jae
push
gs
test
outsl
push
mov
sbb
mov
adc
mov
jno
add
lcall
jo
xor
cltd
dec
or
test
lcall
push
sbbb
adc
imul
popf
push
xor
rcll
mov
inc
xchg
cmpsl
push
sub
jl
mov
sbbl
pop
loop
loope
push
movsb
jl
test
lock
popl
sub
xchg
adc
mov
mov
enter
call
aaa
ficompl
jle
std
push
xchg
cltd
inc
cli
and
imul
cmpsl
loopne
mov
xchg
sub
pop
cli
divb
fwait
jae
mov
and
mov
in
mov
jmp
gs
outsl
int
mov
push
jo
sbb
mulb
pop
imul
cmp
pop
pusha
or
mov
hlt
stos
inc
mov
jg
mov
sub
fstpl
cwtl
movswl
jno
or
lret
enter
or
and
push
mov
lds
mov
outsl
jbe
mov
pusha
ret
xor
and
pop
mov
jno
jg
add
in
cs
das
repnz
mov
lcall
push
aam
mov
loopne
jbe
mov
adc
mov
and
ljmp
es
jmp
pop
inc
sbb
push
mov
mov
sub
xchg
mov
or
mov
push
jo
xor
push
les
mov
rcll
xor
sbb
ljmp
adc
data16
mov
inc
mov
mov
cmp
xor
or
mov
jb
add
cmp
xchg
mov
call
insl
add
mov
jmp
jmp
jne
mov
cli
jmp
mov
mov
call
lock
mov
mov
ss
test
and
hlt
adc
ds
xlat
sti
mov
movsb
cmpsl
jl
jg
mov
push
mov
aam
popa
js
orl
dec
inc
or
js
pusha
push
cmc
out
repz
mov
pop
setge
test
mov
cmc
je
pusha
out
sti
andl
into
push
pop
jno
jg
or
scas
jbe
leave
fists
lahf
js
orl
add
fisubl
or
test
mov
push
fldenv
xchg
xchg
lcall
call
insb
adc
sbb
xchg
clc
into
movsb
sub
aad
daa
jl
aam
xor
clc
inc
sbb
xor
push
adc
cmc
and
inc
ret
lea
std
stos
pop
xor
add
mov
mov
mov
aas
inc
xor
mov
aas
lcall
js
jecxz
shlb
pushf
rcl
ljmp
dec
sub
jmp
and
fisttpll
pop
xor
jb
imul
mov
mov
mov
cmp
call
dec
push
stos
sub
xor
mov
pusha
gs
xor
mov
mov
sub
pop
shl
rcll
mov
fs
mov
pop
in
cmpl
movl
lds
push
xor
hlt
lahf
dec
mov
mov
pop
cmp
or
imul
lret
jmp
movb
ret
and
rol
outsl
loopne
xchg
js
int3
and
xchg
pop
sub
adc
and
ja
mov
vpshufd
stos
pop
cmpb
insb
dec
xor
jo
and
loope
jnp
sbb
mov
push
pop
aas
cmp
cli
push
inc
xorb
je
enter
inc
jle
and
xor
hlt
push
push
call
dec
mov
pop
or
sbb
mov
rcrl
in
stos
adc
adc
aaa
xchg
xchg
rcrb
es
push
incl
mov
jg
nop
mov
mov
out
sub
loopne
inc
mov
sarb
add
ss
fidivrs
arpl
adc
test
and
add
xchg
into
cmpsl
fnstsw
add
sub
and
push
xor
adc
inc
push
ljmp
mov
loope
cmp
push
cld
xor
or
lock
enter
cmp
push
fs
cs
push
jo
inc
in
pop
sahf
rolb
add
enter
out
vmread
push
loopne
mov
and
mov
jmp
add
xor
mov
push
dec
and
ljmp
lret
lods
mov
pop
shr
sbb
mov
pushf
scas
add
in
dec
fdivrp
rcr
jns
je
push
loopne
jmp
push
push
scas
lock
mov
sub
cmp
call
mov
pop
mov
aaa
outsb
mov
jg
xchg
pop
mov
adcb
add
mov
mov
and
test
lret
and
xor
rcrb
mov
aas
in
lods
inc
or
jmp
push
pop
pop
andw
jle
dec
std
popa
add
outsl
aad
gs
arpl
pop
adc
xchg
and
jbe
adc
or
push
movsl
push
icebp
xorb
loopne
and
sahf
xor
push
adc
mov
adc
subl
sub
or
arpl
inc
fcomps
lock
jl
xor
cli
lods
inc
xor
punpckldq
test
scas
ret
imul
outsb
push
xlat
inc
jge
stc
adc
push
pop
push
add
jo
lods
push
mov
pop
rolb
addr16
pop
shl
add
dec
add
stos
imul
clc
adc
mov
out
sbbb
add
inc
aad
jg
call
jecxz
iret
dec
lods
mov
adc
jae
test
xlat
rorb
push
pusha
hlt
shll
xchg
pop
pop
fsubr
addr16
dec
in
mov
fnsave
mov
mov
data16
dec
mov
clc
or
ljmp
rorb
pop
test
sbb
sub
shl
mov
repnz
fbstp
push
shll
mov
jp
cmp
mov
lods
push
outsl
add
xlat
lods
sbb
push
stos
or
mov
push
jno
jmp
je
cmp
popf
jmp
mov
lods
jb
movsl
lea
in
jns
cltd
and
cmp
sub
enter
adc
lret
ret
add
js
rolb
adc
call
jecxz
inc
test
mov
loope
std
xor
fistps
jmp
loop
inc
scas
pop
xchg
and
dec
sub
push
sahf
loopne
mov
inc
outsl
add
sub
sub
sub
mov
xchg
xor
les
or
mov
xor
aas
outsb
xchg
adc
add
cmp
lock
push
negb
pop
pop
push
fdiv
call
dec
xor
idiv
loopne
cmp
pop
loop
pop
ds
cli
or
ljmp
mov
repnz
rcrb
imul
out
nop
push
rorl
jg
pop
adc
je
cmp
rclb
jne
pusha
xor
add
imul
lods
out
aas
lock
sub
shlb
dec
hlt
rcr
sub
sbb
movsb
sbb
sbb
cmpsl
cld
pop
push
je
xor
lahf
mov
push
fs
jl
xchg
pop
ja
lret
lods
test
sbb
ds
add
inc
jg
inc
inc
xsaves
adc
inc
loopne
cmp
or
mov
lea
iret
jmp
roll
xor
inc
out
pop
jge
mov
es
fistpl
or
inc
lods
andl
fdivrp
popa
pop
data16
mov
in
pop
adc
std
mov
imul
int3
pushf
jle
enter
inc
sbb
cmp
std
push
out
xchg
inc
sbb
jmp
cmc
fstpl
sbb
popa
mov
dec
sbb
icebp
mov
mov
in
pop
push
mov
xor
retw
jbe
jne
loopne
xor
cmpsb
call
sub
jmp
mov
push
adc
and
jg
cli
mov
jg
lds
cmp
test
push
movsl
call
cmp
inc
loop
mov
push
lret
cld
in
loope
pop
sbb
sahf
inc
outsl
loop
pop
rorb
and
loopne
dec
jo
pusha
inc
jne
mov
cmp
andl
lds
or
hlt
jp
stos
ds
push
push
jecxz
mov
ds
in
mov
fldl
lcall
cld
cmp
mov
sub
jbe
push
in
xor
or
push
xchg
cmp
dec
jmp
ljmp
je
or
inc
das
loopne
ret
loope
or
int
sbb
call
outsb
mov
test
jp
lods
pop
sub
addr16
loopne
movsb
sbb
jb
pop
dec
mov
dec
pop
lret
jmp
xlat
add
xor
sbb
and
pop
mov
inc
or
pop
cmp
adc
xchg
mov
call
xor
add
outsl
sbb
and
xorl
inc
test
and
fistl
decb
invd
xchg
and
mov
mov
stos
f2xm1
inc
pop
dec
clc
cs
or
cld
and
push
into
pop
push
sbb
cmp
sbb
push
sub
loopne
xchg
or
fistpl
mov
mov
push
rolb
cld
pop
fildll
adcl
inc
daa
sbb
or
xchg
pop
inc
clc
push
adc
dec
cmp
or
mov
inc
pop
scas
sbb
scas
xchg
sbb
enter
jge
insb
dec
mov
sbb
jne
ficoml
jmp
mov
lods
ficoms
rcl
ljmp
sub
nop
pop
test
fsub
inc
pop
leave
aas
inc
div
lods
arpl
adc
lretw
xor
sbb
dec
jne
or
cmp
xor
mov
mov
lcall
ret
pop
jle
push
sub
mov
out
jne
stos
sbbl
xchg
or
into
repnz
shl
sti
insb
and
stos
out
lea
in
adc
or
popf
hlt
and
mov
lea
dec
fdivl
stos
cmp
cmpsl
pop
mov
or
data16
movsb
mov
pop
sbb
push
aas
or
call
sbb
add
fcomps
pop
pop
scas
dec
xor
arpl
das
je
push
adc
aas
loopne
mov
pop
mov
repnz
inc
loope
xor
fcomps
mov
inc
xor
sarb
push
xor
pop
mov
add
adc
test
mov
cmp
dec
sub
inc
pop
movl
inc
js
clc
int3
sti
dec
jecxz
lahf
clc
push
lea
xor
sbb
loopne
fistps
inc
xchg
jge
pop
mov
xchg
nop
push
jb
xor
setbe
sub
sbb
dec
jo
mov
jge
xor
into
test
out
test
enter
out
in
sbb
ljmp
pop
add
pop
enter
and
ljmp
sbb
fwait
stos
outsb
dec
pop
outsl
mov
test
addr16
push
push
fs
repnz
mov
test
aas
mov
nop
mov
pop
jmp
jns
xchg
xchg
lock
jp
adc
jge
std
cmpsl
push
xor
and
shll
xchg
dec
push
clc
movsb
lds
test
inc
sub
jecxz
jle
jl
cli
ffree
lret
cmpsl
aaa
decb
cli
add
int3
pop
stc
adc
xlat
addl
rcrl
push
push
inc
arpl
cmpb
insb
ret
outsb
push
add
testb
mov
and
dec
in
add
add
loopne
icebp
push
in
bound
loop
imul
ret
movsb
daa
dec
cli
sbb
roll
test
mov
pop
scas
pop
fisttps
subb
mov
push
insb
add
add
pop
dec
out
sbb
adc
push
dec
hlt
jne
hlt
lods
and
jae,pn
dec
sti
in
outsl
mov
hlt
test
cld
outsb
or
add
inc
shl
addl
jg
fsubs
inc
inc
cmp
pop
aas
js
xchg
push
mov
lds
mov
clc
lock
mov
cmpb
es
mov
insb
dec
jne
pop
sub
rcrb
lock
dec
mov
sahf
jb
aaa
inc
movsl
jmp
and
mov
xor
aas
ucomiss
push
ds
dec
inc
hlt
rcl
mov
dec
push
inc
sarb
dec
jecxz
jg
inc
or
inc
cs
xor
jmp
rcrb
idivb
test
imul
dec
inc
shll
cs
xchg
gs
sti
ss
sbb
push
fwait
cmp
ds
lret
jg
and
lods
lods
addb
and
push
and
mov
cmp
push
scas
xlat
mov
adc
cmp
popa
adc
inc
mov
push
inc
fiadds
lcall
push
cmp
repnz
mov
xor
push
mov
stos
cmp
jb
jnp
mov
iret
and
add
aaa
cmp
sbb
ljmp
fsub
pop
mov
pop
add
mov
pop
pop
nop
mov
inc
pop
in
or
mov
pop
mov
lds
lahf
inc
inc
sbb
outsb
shrb
ljmp
mov
sbbb
sbbb
push
mov
dec
loope
cli
and
jne
test
cmpsl
jmp
pop
xchg
and
or
ret
test
stos
and
nop
cmp
dec
mov
pop
jle
mov
ss
je
aam
jmp
xor
je
std
dec
and
or
jg
in
fmul
mov
or
mov
das
ds
xchg
rorb
pushf
and
push
or
inc
push
addr16
or
mov
outsb
and
icebp
add
adc
int3
pop
dec
icebp
jecxz
add
push
adc
fisubrs
notl
adc
adcl
out
push
pop
inc
sti
jnp
sbb
and
mov
lods
sarb
xchg
mov
add
cmc
das
mov
jne
push
xor
rol
stos
jne
jecxz
add
lods
mov
test
jmp
cmp
cmp
cltd
jp
cmp
repnz
sbb
jmp
mov
addr16
adc
daa
and
and
jl
mov
mov
sbb
loope
mov
lods
loop
push
std
ja
inc
and
push
cmpsl
push
inc
pop
ficompl
aaa
push
call
call
js
push
pop
sarl
enter
add
repz
mov
bound
leave
push
add
push
cmp
lahf
jno
or
decl
push
scas
add
ljmp
ss
cmp
pop
dec
cmp
xor
dec
setle
dec
orb
mov
inc
divl
mov
inc
dec
mov
rcl
addb
es
xchg
icebp
scas
loope
mov
test
fimull
adc
and
push
sub
data16
ss
jbe
rolb
inc
icebp
clc
mov
gs
xor
out
hlt
loopne
xchg
movsl
shll
lcall
mov
imul
or
adc
scas
jle
addl
dec
sbb
xlat
out
adc
push
int
and
cmp
icebp
jg
iret
jge
leave
cmp
pminub
mov
pop
std
pusha
mov
mov
xchg
sbb
inc
cld
sub
mov
jb
push
aaa
push
or
cmpsl
lds
mov
clc
inc
jno
mov
test
jo
in
jp
cltd
jle
add
jg
clc
into
test
or
pop
cmp
movsb
dec
cmp
mov
jp
mov
inc
jp
std
add
je
and
cmc
mov
xor
scas
sbb
and
cmpsb
push
scas
arpl
dec
jo
jl
and
xchg
jo
sbb
or
mov
roll
and
sub
sti
cli
stos
jo
pop
mov
add
nop
xor
loopne
sub
xlat
sahf
cmpsl
lods
in
lcall
addr16
sbb
push
dec
mov
sbb
jl
cmp
mov
jo
inc
xchg
and
cmpl
bound
xchg
sahf
add
inc
cmp
push
stos
data16
jb
cli
dec
push
loopne
stc
inc
mov
add
icebp
imul
push
testl
xor
rorl
ret
xor
aaa
adcb
and
lahf
mov
dec
loopne
dec
test
loope
lods
sti
xor
cmc
orb
mov
mov
jb
cld
mov
xor
mov
pop
xchg
cmp
mov
sbb
jmp
xor
pusha
mov
cs
xchg
xor
ljmp
inc
mov
cmp
loop
insb
cli
xchg
insb
shrl
cld
cmp
subl
mov
inc
sub
ljmp
sbb
rcl
das
cmp
cmp
adc
fdivr
cli
inc
leave
insb
pop
mulb
enter
cltd
js
add
dec
pop
sbb
fucomp
nop
or
fidivrs
call
xchg
out
rcrl
xor
pop
push
unpcklps
xchg
fucomp
pop
and
dec
push
and
in
pop
test
stos
cs
xchg
loop
push
adc
jl
xchg
testb
jg
mov
and
inc
sbb
add
fiaddl
push
add
sub
aad
pop
es
push
clc
xor
gs
rol
mov
pop
addr16
out
xchg
dec
stos
lods
in
shrl
scas
push
fwait
stc
cwtl
jnp
push
dec
xchg
lret
sub
ret
aad
test
jb
jnp
out
mull
test
push
dec
inc
sbb
add
jnp
inc
pop
push
add
mov
rorb
dec
sbb
jle
sahf
cmp
sbb
adc
jo
inc
aas
scas
shrl
shl
sub
push
mov
shrl
fwait
adc
push
sub
add
mov
hlt
or
lret
ja
xor
or
cmp
aas
mov
pop
repz
push
push
ja
fs
insl
movl
pop
sbb
jmp
ret
jg
xchg
pop
jl
add
sub
adc
mov
mov
loop
mov
push
loop
lock
jo
inc
and
das
ja
test
mov
or
jecxz
decb
aam
mov
xlat
xlat
pop
push
ds
stos
inc
mov
addr16
leave
push
dec
pop
sub
adc
lcall
icebp
add
pushw
in
hlt
orb
and
je
mov
les
loopne
and
adc
adc
jg
push
orl
mov
pop
hlt
dec
rorb
add
pop
jmp
test
add
jne
fisttps
mov
jb
adc
lock
fwait
divb
mov
mov
pop
orl
outsb
mov
imul
sub
mov
and
insl
cmp
imul
clc
das
pop
push
sub
iret
lcall
cli
lock
mov
test
pop
lock
aas
sbb
or
daa
mov
lods
int
mov
dec
mov
xor
pop
cmpl
xlat
aad
or
imul
sub
mov
pushf
add
ret
mov
sub
adc
mov
fnstsw
push
mov
adc
mov
hlt
mov
xor
jmp
lds
push
jge
mov
cmc
in
outsl
push
rolb
cltd
ljmp
fdivl
fisubrl
push
mov
std
lcall
scas
lahf
les
and
sbb
out
and
fimull
bswap
xor
xchg
movsl
aam
cmpb
cmp
push
mov
js
repnz
and
or
sub
cmpsb
sub
pop
cmp
clc
push
ret
and
in
and
or
popl
hlt
dec
push
les
bound
mov
xor
xchg
jnp
stos
fucomp
int
lock
or
sub
lret
nop
inc
push
clc
push
mov
push
out
fsubl
sbb
jmp
cmp
cltd
mov
negl
xlat
in
push
sbb
or
sbb
fldcw
fimuls
sbbl
sub
xor
xor
mov
icebp
lahf
or
popf
aaa
or
mov
push
push
fldl
ffreep
loope
aaa
aad
pushf
loope
paddd
cmp
mov
jne
push
push
xchg
mov
mov
data16
mov
loopne
js
or
shll
lods
test
sub
adc
mov
dec
outsb
push
movsb
stos
pop
clc
das
es
cmp
ret
mov
outsl
lret
outsl
popa
out
es
mul
jmp
push
lds
into
loope
mov
pop
out
inc
add
in
adc
loope
mov
aad
es
pusha
push
mov
shr
ss
push
inc
cmp
sub
popf
xchg
adc
gs
xor
inc
cmp
test
pop
stos
ret
pop
xor
dec
addb
cwtl
sbb
jne
loop
xchg
adc
pop
test
ljmp
cmp
xchg
lods
add
test
loopne
popf
insl
mov
xchg
cmp
test
call
lret
jmp
cmp
cmp
imul
mov
mov
scas
dec
inc
inc
sub
outsb
das
dec
fnstcw
xchg
xchg
pop
and
sub
jecxz
jp
shlb
mov
push
or
es
lcall
sbb
jg
inc
cmp
pop
mov
scas
push
and
and
lcall
clc
add
vmread
les
xor
or
xor
push
cmp
mov
outsl
sub
sub
inc
js
push
cmp
mov
lock
inc
jmp
call
jo
xchg
subl
js
testb
pop
div
inc
and
sub
inc
and
or
xorb
add
mov
test
push
cld
lcall
lds
add
push
loopne
lods
mov
fimull
and
xchg
jg
push
aas
or
adc
or
push
xchg
xlat
push
addl
call
fs
sub
add
jne
sub
jnp
pop
cmp
dec
bound
inc
sbb
push
daa
pop
pop
movb
sub
inc
mov
imul
pusha
cmpsb
pop
add
ficompl
xchg
mov
jg
scas
cmp
xlat
clc
push
pop
jae
mov
jp
mov
push
dec
adc
pop
or
add
fcoml
iret
inc
stc
mov
nop
gs
cli
scas
out
sar
push
rol
arpl
inc
add
adc
loopne
lock
sbb
push
les
mov
ret
adc
outsb
ljmp
xor
pop
adc
fucomip
mov
pop
pusha
adc
and
lea
pop
add
lds
sbb
jle
js
or
xchg
xor
in
add
pop
dec
iret
push
arpl
test
or
push
mov
pop
loopne
aas
xor
add
hlt
adc
mov
inc
pop
cmp
xchg
sahf
test
mov
xor
je
dec
cmp
mov
xor
mov
fsubs
subl
inc
or
or
ljmp
stos
pop
xchg
loop
call
repz
dec
lods
mov
mov
pop
push
or
push
ret
gs
outsl
shr
cmc
sahf
or
ss
int3
fdiv
adc
or
cmp
mov
repnz
mov
cmp
jne
call
jo
and
loope
call
dec
mov
and
stos
leave
sbb
xchg
push
pop
mov
adc
dec
lahf
jnp,pn
adc
adc
sbb
or
mov
mov
cmp
push
pop
adc
aaa
js
loopne
clc
pop
cmpps
pop
loop
mov
sub
lods
andb
sub
lret
mov
cld
sbb
add
pop
jb
mov
leave
shr
xchg
jnp
shrb
inc
sbb
inc
sub
mov
rorl
push
adc
sbb
shll
xchg
je
sub
and
pop
out
mov
push
sbb
pop
and
mov
pop
mov
xchg
hlt
filds
cmp
movsb
add
adc
xor
adc
or
stc
adc
cmp
sub
popa
or
ror
inc
ja
push
loope
pusha
sbbl
jno
jp
mov
loope
out
or
movsb
test
sbb
xor
inc
fcmovne
add
clc
orb
adc
cwtl
pop
out
sub
jge
nop
cmp
sub
mov
sub
or
and
aam
les
test
xchg
outsb
mov
lea
push
cmpsb
test
pop
jmp
cmp
insb
add
clc
xchg
cld
inc
or
icebp
push
mov
push
cwtl
jg
or
movb
pop
sti
xchg
dec
or
dec
mov
mov
in
mov
and
pop
xchg
je
std
loope
repz
std
jmp
mov
fmuls
clc
and
jae
inc
xchg
inc
ss
lock
or
lcall
lret
shr
rol
mov
psrlw
push
mov
movsl
and
sti
clc
xchg
scas
mov
mov
clc
push
loop
into
xchg
add
testb
ljmp
mov
dec
sbb
data16
nop
ret
ds
js
loop
push
dec
or
sahf
movsb
xor
adc
cmpl
xor
std
jno
jmp
enter
lcall
and
shlb
movsb
mov
adc
mov
pop
loopne
sub
push
fcmovbe
clc
aas
lock
icebp
out
mov
leave
push
mov
pop
mov
cmp
cmc
sahf
adc
hlt
mov
pop
lahf
xchg
push
push
rcl
shlb
aaa
pop
cmp
mov
js
jecxz
lds
cmp
push
pushf
mov
es
mov
push
stos
push
daa
ds
mov
fadd
adc
shr
or
out
xchg
and
divps
mov
fisubs
loop
sbb
loopne
outsl
pushw
lcall
ja
sbb
jbe
out
push
sbb
add
bound
das
dec
imulb
jo
cwtl
std
shll
lock
sti
es
pushf
mov
repnz
js
out
xor
sbb
push
cs
and
cld
jbe
xchg
mov
jno
jne
or
data16
mov
aas
sbb
ds
jmp
mov
push
adc
lret
mov
and
push
pop
mov
daa
mov
or
cltd
and
out
and
dec
cld
mov
mov
pop
and
imul
jecxz
incb
mov
jp
add
xchg
mov
xor
cmp
sbb
iret
add
pushf
lods
pop
aas
mov
sub
scas
fcoml
mov
stos
ds
aad
mov
cli
and
data16
lods
inc
add
loopne
sahf
cmpsl
inc
lcall
pop
xchg
push
movsb
in
hlt
daa
xchg
inc
mov
jle
push
mov
mov
int3
add
cmc
pop
inc
lds
arpl
bndldx
adc
pop
lret
xor
addr16
rcll
cmp
scas
insb
cmp
pop
mov
push
cli
mov
jg
pop
in
add
dec
dec
xchg
mov
xchg
mov
adc
mov
jns
push
les
es
icebp
mov
lods
lret
push
and
in
cs
jle
push
inc
push
mov
push
fcoms
adc
lret
mov
jno
mov
cmc
frstor
jg
add
test
movsl
cs
test
ljmp
insb
mov
cmp
or
jg
cli
push
aam
push
test
cs
in
and
or
cmp
xchg
rorl
loop
int3
data16
pop
repnz
mov
push
jge
arpl
xor
pusha
xor
or
shll
add
cli
mov
aad
jae
cmp
aam
scas
lcall
jb
and
jecxz
push
sar
mov
and
inc
dec
sbb
inc
jae
pop
and
loop
mov
mov
pop
adc
subb
sbb
insl
ret
adc
mov
iret
inc
push
mov
movl
and
push
es
lret
mov
jg
in
pop
arpl
lods
mov
mov
outsl
inc
mov
test
mov
xor
push
call
mov
out
outsb
pop
jp
lods
xor
cs
aaa
xchg
test
pop
adc
add
fwait
push
pop
into
inc
lds
rclb
jl
test
add
insb
cld
jbe
mov
dec
add
jp
cwtl
pop
adc
and
test
inc
dec
js
popa
push
orb
cs
and
sti
shrb
incb
pushf
adc
add
dec
inc
lds
push
push
jg
sbb
inc
push
fadds
and
aaa
movsb
add
arpl
cmp
aam
jo
xor
test
popa
push
mov
pop
cmp
cmpsb
push
aam
dec
mov
popf
mov
out
cs
inc
dec
or
sar
cltd
stos
negb
adc
push
lret
cmpl
sahf
in
dec
lods
cmp
cmp
jb
filds
loopne,pn
push
or
push
push
sub
pop
pop
ds
pop
and
add
loopne
icebp
enter
fistl
inc
rorl
mov
loope
inc
inc
and
mov
ja
add
and
int
fisttps
push
aas
jecxz
imul
add
inc
mov
movsb
pop
pop
dec
dec
movsb
mov
ja
cld
or
sub
in
adc
cmp
shll
or
or
xor
push
bound
in
fimull
movsb
inc
xchg
ds
sarb
hlt
inc
sub
and
mov
mov
popa
les
or
push
xchg
cmp
shlb
jnp
add
js
call
imul
dec
push
pop
dec
sbb
scas
lock
cwtl
int3
add
shll
inc
fsts
imulb
imul
pop
pop
push
iret
das
dec
add
addr16
popa
xchg
sbb
and
xor
ljmp
push
clc
jp
cwtl
inc
sbb
mov
jp
fnstsw
adc
add
pop
jle
adc
stos
test
inc
inc
pop
in
xchg
mov
adc
pop
js
clc
loopne
ja
test
jle
inc
adc
sbb
into
cs
dec
sbbl
out
lods
inc
scas
scas
stc
mov
add
and
sahf
cmp
in
mov
cmp
incb
stc
mul
loope
cli
ret
les
or
pop
jl
fdivl
and
add
xor
outsl
and
sbb
outsb
rol
adc
rclb
jg
and
leave
add
jg
orb
inc
ret
xor
jecxz
rclb
in
xor
mov
inc
mov
rol
pop
popf
inc
cmp
mov
or
pop
or
mov
test
pop
rol
arpl
push
adc
mov
or
dec
add
push
sbb
xor
jle
add
or
or
jmp
add
outsb
ss
pop
divl
std
mov
mov
mov
sub
cld
cmp
ss
push
sti
cmp
adcb
adc
loop
mov
xchg
mov
push
nop
inc
imul
and
xor
inc
push
movb
aas
mov
js
adc
push
stos
insb
lds
mov
pop
call
push
mov
or
adc
mov
ds
fcompl
or
mov
jo
call
stos
aam
xor
inc
aas
insb
in
in
dec
movd
repnz
in
or
call
and
push
inc
call
jb
mov
in
add
jl
lock
dec
in
add
add
movsb
das
sbb
pop
mov
pop
jle
out
fidivl
jmp
push
cmp
ss
icebp
fimuls
jo
in
mov
fcmovnb
mov
call
jmp
icebp
fsubs
lret
orl
dec
mov
in
add
inc
mov
ret
sub
adc
fdiv
loope
outsl
inc
cmc
mov
push
mov
inc
xchg
or
mov
cmp
push
nop
aad
test
ret
loop
sub
lret
pop
test
mov
jb
sbb
mov
inc
sub
aaa
rolb
jmp
insl
push
jns
mov
dec
arpl
lods
xchg
loopne
jmp
dec
sbb
or
ss
push
call
mov
push
lock
scas
cwtl
adc
xchg
je
pop
adc
fwait
popf
dec
adc
push
adc
mov
or
cmpsb
int
add
pusha
sbb
ja
ds
lods
xlat
aad
out
stos
jne
sbb
cmp
inc
sub
mov
ret
mov
sbb
sbbb
scas
in
inc
inc
mov
pop
ret
in
mov
add
mov
and
stos
pop
mov
push
call
or
or
outsl
jle
shlb
aas
xor
stos
adcl
and
adcl
push
adc
shll
inc
adc
or
icebp
or
xchg
ljmp
fisubl
cmp
xor
shrl
jnp
and
adc
xor
je
lods
rcrl
mov
data16
mov
cmpb
loop
aas
gs
into
push
aas
ret
scas
sarb
out
cmp
dec
out
xchg
mov
sub
sarl
cli
mov
scas
or
cmp
retw
sbb
insb
hlt
jne
hlt
push
push
pop
and
repnz
inc
mov
push
sub
mov
pop
mov
pusha
std
aam
sub
pop
test
and
ret
mov
xor
inc
xchg
or
ficoms
push
inc
cmp
add
fnstcw
fcoml
mov
clc
xchg
rolb
mov
imul
bt
push
dec
adc
pop
je
ret
sub
sbb
test
mov
fld1
cmp
test
and
push
add
cld
adc
inc
outsl
pop
pop
push
push
push
pop
ret
movsb
or
popf
sbb
iret
jns
dec
cld
push
int3
in
xlat
mov
loope
ds
test
loopne
cmp
test
aad
mov
sub
or
mov
adc
call
sarb
or
cltd
push
jmp
scas
pop
and
inc
loope
loop
mov
or
xchg
dec
xchg
clc
movsb
push
or
insl
pusha
jmp
scas
stos
jp
shll
pop
dec
mov
or
fldlg2
aam
cmp
pop
cli
push
push
push
adc
sbb
mov
pop
mov
or
es
xor
loopne
shrb
loopne
mov
xor
jmp
add
popf
sub
sub
loopne
sbbl
pop
fxch
cmpb
sub
into
xchg
jge
es
jle
mov
pop
cltd
cmpsl
aas
cmp
adc
pusha
dec
xor
pop
and
data16
ret
jge
in
in
add
test
mov
std
mov
jge
dec
push
jl
pop
jecxz
insb
inc
jg
call
add
adc
or
mov
cmpsb
testl
jg
xchg
mov
cmpsl
sbb
or
les
jnp
nop
sti
pusha
stos
inc
adc
aaa
cmpsl
imul
out
adc
or
aaa
xchg
ljmp
cli
movsb
mov
int
xor
ret
xor
jb
sub
jnp
cmp
sbb
dec
mov
ds
popa
cmc
jmp
mov
push
xchg
add
and
lock
fdivr
and
jbe
jno
rcrl
fisubrs
jp
icebp
icebp
cs
ss
shll
call
xchg
stos
ret
sbb
cwtl
xor
jl
cmovl
call
enter
and
add
dec
pop
movb
cmp
sub
aaa
push
clc
mov
or
ds
sahf
mov
imul
dec
js
pop
das
cmp
pop
lods
roll
hlt
cmpsl
jecxz
push
pop
int3
cmp
insb
jecxz
sub
test
rolb
ljmp
movntq
add
sbb
sbb
or
and
mov
xchg
or
mov
pop
cltd
add
in
inc
mov
mov
adc
inc
shrl
js
popf
xchg
loopne
dec
sarb
loope
xchg
and
push
test
push
nop
loopne
push
popa
sub
push
jecxz
clc
dec
sahf
jno
pusha
and
sti
mov
xlat
add
enter
pop
mov
inc
outsl
es
jle
mov
and
js
lcall
lea
in
into
popa
push
push
mov
or
inc
mov
pop
aas
sbb
xchg
inc
add
or
lret
sbbb
rol
scas
mull
imul
sbb
clc
pop
inc
sbb
ret
cwtl
mov
movsb
xor
rorl
xchg
xchg
lea
pop
inc
xchg
mov
cld
jbe
dec
xor
cmp
mov
fs
ljmp
cld
cld
adc
lock
jp
sbb
add
or
jle
hlt
xlat
imul
and
in
enter
push
shrb
frstor
cmp
adc
push
clc
mov
jg
pop
into
and
addb
out
adc
call
inc
gs
ss
jecxz
or
les
testb
mov
sub
dec
sbb
push
inc
rolb
arpl
ret
lret
sbb
icebp
in
sub
mov
lods
loope
pop
test
fs
adc
stc
test
test
aad
es
enter
or
ud0
test
push
push
add
dec
lret
fidivrl
push
pop
xor
arpl
fwait
xchg
push
jb
mov
sub
mov
add
mov
jecxz
mov
fs
lea
add
aam
xor
sbb
sub
pop
fiaddl
xlat
out
ror
mov
xor
inc
inc
fimull
adc
push
repz
inc
jo
push
or
scas
cld
out
scas
jne
mov
jo
adc
adc
inc
xor
loop
jle
inc
daa
icebp
pop
sub
out
out
js
sub
inc
fldenv
xchg
in
add
sbb
cmp
adc
sbb
lcall
jp
and
in
dec
pop
aad
push
fwait
xor
loop
pop
sub
pop
dec
cld
inc
movsl
loope
gs
xor
jmp
clc
add
cld
push
lock
and
jmp
lahf
ret
lcall
pop
callw
cld
aas
jl
iret
aam
push
lock
clc
adc
nop
imul
es
test
add
in
movsb
jp
jecxz
jbe
lods
xlat
es
push
adc
addb
mov
mov
cmp
and
xchg
push
cmp
jbe
pop
adc
mov
sbb
lcall
lock
into
enter
cmpsl
jecxz
adc
and
adc
sbb
jmp
jae
sub
cmp
loopne
cmp
mov
jecxz
lret
jmp
mov
js
fistpl
popa
out
and
and
int
aad
sbb
adc
rolb
and
jnp
icebp
add
std
out
jo
pop
inc
adc
je
xchg
push
sarb
xor
lret
jae
ret
in
mov
in
mov
pop
pop
test
in
sti
sbbl
dec
sbb
lods
sbb
lret
divl
or
xor
mov
jb
adc
mov
add
sbb
add
in
pop
ss
add
jp
inc
ljmp
sub
adc
out
mov
inc
pop
pop
mov
loop
cld
es
push
imul
lods
push
sbb
push
mov
dec
mov
jle
out
or
sub
ret
mov
mov
xchg
push
pop
xchg
cmp
ss
push
mov
adc
pop
sub
mov
add
xor
xlat
dec
mov
adc
add
cmpsb
fcoml
and
in
mov
xchg
dec
ret
or
insb
cmp
inc
jae
std
or
ret
pusha
push
push
jle
std
mov
push
fdiv
mov
bound
clc
into
xchg
in
movl
cmp
ret
mov
cmp
sahf
mov
fsubrl
push
rclb
jbe
jecxz
mov
sbb
cmpsb
daa
ljmp
inc
out
dec
sub
sbb
mov
xchg
test
push
enter
xchg
push
sub
push
xchg
dec
dec
inc
cld
lock
sbb
sbb
pop
lahf
xor
push
test
pinsrw
push
outsb
sub
adc
or
push
int
jbe
cmp
or
cmp
std
mov
jo
shrl
xchg
xchg
xchg
rclb
and
push
sbb
mov
xchg
mov
sar
shlb
xchg
mov
int
adc
fdivrs
sbb
mov
mov
jecxz
out
out
enter
filds
sub
dec
cmpsb
adc
cmp
cwtl
in
inc
mov
inc
scas
sahf
cli
hlt
pushf
insb
ja
pop
dec
and
add
pop
sbb
mov
mov
mov
les
or
pop
shrb
lock
push
mov
fwait
ds
mov
in
inc
sbb
fldt
jmp
sbb
call
cmp
sti
push
pushf
mov
jmp
inc
mov
cmpsb
push
inc
push
outsb
mov
popf
inc
jp
inc
xchg
shlb
lret
jb
lods
push
sub
sbb
sub
in
loope
testb
mov
je
sub
std
adc
aad
aad
mov
dec
shlb
push
inc
adc
insb
mov
sbb
ljmp
xchg
jmp
sbb
outsl
lret
ds
ret
cwtl
insl
shll
es
andb
call
call
mov
cltd
testb
test
jb
lahf
mov
fsubs
xor
sub
clc
or
sar
aad
pop
jle
test
mov
or
xchg
ret
push
dec
js
push
mov
or
jp
mov
dec
cli
mov
sub
movsl
xchg
or
test
xor
mov
add
fwait
sub
daa
repnz
add
rolb
popa
lock
dec
jle
lret
and
xchg
out
jno
cmp
int
movsb
repz
pop
jne
add
inc
pop
adc
out
add
mov
rol
xchg
outsl
movsb
push
in
sbbb
int3
and
lods
enter
mov
sub
outsl
sbb
inc
repnz
cmc
dec
xchg
imul
pop
mov
hlt
orb
mov
and
xor
add
outsb
cmpsb
sub
clc
inc
cli
loopne
mov
add
mov
and
and
or
push
sahf
arpl
push
inc
les
mov
cmp
sub
push
js
cmp
fildl
sub
lock
mov
jl
jno
bound
loopne
into
outsb
push
pop
and
subb
popl
cmp
xor
stos
test
xor
pop
lock
jp
adc
jl
xor
adc
loope
mov
mov
rolb
or
jge
lods
in
inc
fnstcw
or
mov
insl
int3
adc
jecxz
sahf
mov
dec
mov
push
movsb
imul
cmc
jp
nop
std
cmpsb
mov
pop
mov
out
test
cmp
out
in
in
mov
mov
psadbw
jne
dec
fs
imul
cmpsl
push
js
dec
and
imul
mov
int3
pop
popa
outsl
add
and
add
cmpl
add
add
lret
adc
fdivl
ja
lret
shl
push
les
add
cmc
sbb
repz
or
inc
stos
clc
jmp
imul
xor
rcrl
mov
cmp
stos
call
add
stos
cmp
add
xchg
adc
in
inc
std
in
adc
fldcw
in
ret
mov
sbb
out
xlat
xchg
rorb
push
push
mov
adc
xor
adc
inc
adc
mov
cld
mov
mov
sub
pop
inc
mov
das
outsb
sar
push
mov
lock
imul
push
jmp
mov
jno
ret
jb
inc
sub
popf
loop
clc
movb
mov
bound
jo
xor
jle
adc
cwtl
mov
ds
sahf
cmp
mov
mov
addr16
jp
add
jecxz
inc
loopne
mov
aam
xchg
stos
dec
dec
ror
xor
sbb
gs
add
sbb
jle
test
movsl
lods
enter
roll
pop
inc
mov
jp
inc
call
cmpsl
movsb
sbbb
push
push
xor
pusha
lea
or
cmc
add
test
sbb
inc
icebp
insl
xor
inc
lahf
test
jno
mov
int
sub
cs
add
hlt
cmp
shll
jmp
pop
mov
les
loope
lods
scas
out
inc
adc
adc
cmc
and
xor
cmc
bound
jbe
negl
scas
push
inc
pushf
stos
bound
jno
jmp
ss
std
dec
mov
or
and
xchg
lret
mov
mov
decb
scas
pop
adc
cltd
pop
ljmp
mov
inc
leave
movsb
nop
or
pop
cmp
ret
jo
or
xor
add
cmp
sub
scas
test
xchg
gs
lret
sahf
lock
adc
xchg
mov
pop
in
les
test
cwtl
adc
dec
adc
cwtl
popa
test
nop
adc
mov
adc
andl
ret
icebp
cmp
into
cmp
xchg
pop
mov
test
jl
or
inc
xchg
or
adc
mov
or
add
popf
dec
inc
clc
hlt
aad
inc
push
or
shl
mov
shlb
jle
fdivl
inc
int3
testb
int3
call
ss
inc
mov
xor
fidivl
xchg
popf
andl
cwtl
cltd
divb
add
adc
clc
dec
or
mov
xchg
into
adc
outsb
and
lock
adc
mov
clc
jp
pop
out
sbb
mov
test
sub
and
push
sbb
mov
or
test
add
fs
in
and
scas
sahf
outsl
cmpsl
testl
fwait
in
xchg
mov
or
inc
or
jmp
mov
or
pop
cmp
cli
sbb
dec
and
shl
repnz
sbb
lods
insb
push
movsb
push
test
adc
fsubrp
incl
notb
jg
mov
jnp
and
dec
lahf
mov
sbb
sbb
or
mov
mov
push
jb
adc
mov
js
aas
jbe
and
fcoml
cltd
aas
xchg
rcl
or
fisttps
add
mov
jecxz
adc
in
cmpsb
jle
push
icebp
sbb
sbb
xor
mov
test
add
mov
sub
jle
inc
outsl
jnp
cmp
pop
lds
sub
aad
mov
mov
adc
jb
jnp
fnstsw
inc
cmp
add
sbb
add
xor
or
cld
mov
pop
or
insl
pop
and
icebp
pop
pushf
cmpxchg
mov
in
jae
dec
js
dec
psubd
testb
jl
testl
dec
xor
push
enter
mov
adc
negl
jl
imul
dec
mov
enter
or
adc
aas
xorb
shlb
in
sbbl
fisubrs
or
add
xchg
jecxz
aas
add
pop
ss
clc
inc
add
and
imul
mov
cli
pop
jmp
ja
int
data16
movsb
ss
jnp
cmp
out
xchg
rclb
xor
dec
sub
sub
lock
mov
fucomi
movd
pop
mov
push
call
pop
cmp
mov
pop
popa
xchg
je
aad
fsubp
adc
xchg
pusha
stos
fisubl
push
push
aad
add
fcmovb
and
xchg
orb
mov
push
dec
test
push
xchg
stos
pop
add
clc
sub
fldcw
movsl
push
xor
stos
or
daa
inc
ljmp
add
js
pusha
add
inc
ja
iret
push
xor
dec
sbb
and
nop
lds
or
mov
mov
jp
sbb
pop
ficoms
push
add
ljmp
add
negb
das
popf
lcall
cmpsl
and
orb
jg
nop
push
or
xor
push
push
push
jae
repz
adc
mov
mov
push
mov
rolb
inc
outsl
xchg
lods
aad
adc
sub
das
shlb
push
hlt
rcll
ss
jae
add
stos
push
lods
jo
sub
and
pop
aas
xor
hlt
out
or
or
daa
nop
push
cmp
inc
adc
insb
mov
push
dec
call
pushf
inc
xchg
enter
js
jp
cmpsb
enter
leave
add
cmp
sbb
lret
sbb
inc
cli
dec
mov
sub
das
cwtl
cmp
fdivs
mov
aam
fs
fnstcw
scas
filds
adc
jg
xchg
cmp
shll
push
stos
lcall
fdivr
push
inc
inc
shlb
mov
roll
cld
daa
loopne
test
push
ja
mov
and
mov
pusha
mov
aam
adc
push
adc
mov
movsb
sub
pop
cmp
bound
jae
xor
std
adc
mov
sub
dec
flds
test
bsf
mov
icebp
fimull
xor
inc
cmp
mov
or
push
negl
inc
push
cmpsl
ret
imul
cmp
cwtl
add
add
sbb
cs
sbb
dec
mov
call
mov
mov
hlt
sbb
adc
or
inc
dec
loope
loopne
pop
jl
femms
mov
jo
and
dec
imul
std
test
movsl
loop
lods
rol
xor
mov
pop
push
outsb
and
or
mov
pop
mov
cld
inc
enter
mov
sti
loope
int3
fs
clc
outsl
je
inc
lods
pop
dec
inc
mov
add
cmp
xor
idivb
shll
mov
ret
mov
mov
push
int3
push
push
mov
orl
mov
fistps
jno
mov
jge
shll
mov
jae
cmpsl
mov
sbb
sbb
sub
andl
sbb
xor
testb
cmp
icebp
push
cmpsl
pop
sbb
test
lret
xor
cwtl
daa
dec
and
mov
and
cmpsl
outsl
add
push
xor
pop
mov
inc
aas
sbb
ds
cmc
mov
sbb
js
xchg
mov
imulb
das
aam
lret
mov
adc
mov
mov
inc
roll
pop
jg
adcb
sbb
add
cld
push
hlt
lock
jmp
movsb
push
mov
arpl
sub
test
or
cmpsl
jnp
sub
repz
testb
ja
mov
add
ret
push
in
test
in
adc
sub
rcrb
hlt
pop
xorb
xchg
filds
sarb
jno
rol
mov
sarl
add
stos
fistl
arpl
mov
fistpll
out
and
in
mull
cmp
popf
ss
jne
aad
dec
jmp
xchg
jp
iret
and
pop
ss
fimuls
push
scas
dec
nop
sub
mov
push
les
sub
mov
adc
dec
inc
push
and
bound
in
add
pop
ss
mov
push
aam
pusha
mov
aad
adc
fwait
xor
nop
hlt
adc
dec
and
fisttpll
and
rcrb
cmp
ja
xchg
fs
call
data16
cmp
dec
push
dec
jp
fwait
loopne
pusha
xchg
mov
inc
scas
adc
fisubrs
pop
jno
in
xchg
outsb
cs
xor
and
xchg
mov
lock
mov
hlt
push
pop
dec
mov
cmp
ret
adcl
into
cmc
inc
and
jne
faddl
add
out
jl
adc
and
xorl
out
imul
or
pop
or
mov
adc
or
loope
xor
sbb
popf
cmp
aas
push
push
adc
mov
add
cld
punpckhbw
shl
mulb
stos
mov
lock
lock
jbe
sub
cwtl
jae
mov
sbb
iret
jp
xor
lds
shr
inc
cmpl
aas
fwait
fstpl
dec
xchg
pop
in
clc
mov
insb
adc
mov
shlb
add
rorb
mov
sub
push
test
add
cmp
mov
cmp
hlt
inc
push
mov
cltd
repnz
lods
xchg
add
aaa
cs
aaa
sarb
sbb
push
adc
pop
test
mov
aas
adc
aas
rolb
hlt
inc
shr
adc
mov
push
push
mov
enter
shl
and
dec
xchg
pop
xchg
aad
dec
js
das
jo
ljmp
mov
jle
dec
lods
and
movsl
push
pop
out
xor
flds
mov
das
lcall
adc
xor
movl
sahf
pop
leave
inc
cmp
xchg
lret
je
icebp
push
adc
add
add
mov
pop
xor
mov
adc
orb
jne
mov
pop
aam
mov
push
inc
mov
outsb
in
pop
xchg
jecxz
fsubrl
imul
xlat
inc
sbb
nop
add
shll
jnp
cmp
pop
xchg
mov
jle
pusha
sbb
inc
sarl
and
out
test
push
imull
movsl
mov
test
fisubrs
sub
push
push
jmp
cmc
gs
dec
adc
popf
sbb
clc
push
dec
sub
dec
sbb
push
repnz
xchg
inc
add
pop
xchg
scas
mov
jle
out
push
adc
xor
push
hlt
mov
lahf
cmpsb
dec
rorl
arpl
add
xor
xor
pop
pop
pop
adc
pop
push
sahf
push
cmp
dec
stos
cwtl
push
pusha
fdivrl
vandps
popa
push
bound
cld
mov
shl
or
icebp
dec
in
xchg
ret
or
add
dec
add
adcl
mov
sub
lock
inc
inc
add
mov
xor
pop
push
sti
xchg
jnp
ja
test
aas
leave
mov
mov
or
sub
cmpsb
or
sahf
imul
sbb
xchg
add
adc
dec
dec
rorl
pusha
fistpl
pusha
call
clc
adc
aad
lcall
lcall
pop
push
jbe
ret
iret
lret
les
xchg
push
not
dec
stos
add
cmp
je
mov
rcr
push
and
adc
mov
mov
pop
out
mov
movsb
ss
cmp
aas
add
rorl
iret
and
icebp
negb
inc
lcall
add
lock
jb
iret
clc
xchg
pop
sbb
or
xlat
cwtl
push
mov
adc
sbb
std
imul
ja
inc
mov
je
movsl
mov
lock
out
push
icebp
sub
adc
inc
pop
jmp
pop
adc
jo
sbb
fbld
cmpb
adc
dec
jmp
in
fs
pop
test
cltd
stc
pop
mov
xor
xor
sarb
or
cmc
clc
es
jmp
sub
inc
sbb
adc
inc
jo
sbb
mov
in
mov
add
sbb
add
int
minps
sub
fnstenv
lock
cmp
push
je
jbe
cmp
push
pop
xchg
cli
shrb
outsl
add
insl
js
xor
ret
in
hlt
adc
mov
pop
sub
sbb
jne
dec
loope
ja
and
out
add
or
fisubrs
or
xchg
sbb
xchg
movsb
scas
mov
sub
mov
insl
pop
out
push
add
dec
les
jg
or
mov
int3
bound
cmp
mov
stos
test
loopne
insl
lret
js
stos
jae
xor
add
jge
sbb
lods
xor
mov
pop
cli
mov
inc
lret
lods
dec
sbb
cmc
adc
pop
cmpsb
adc
or
insb
aas
inc
ds
mov
xor
call
out
xor
cmp
jne
push
sbb
xchg
std
mov
jl
cmp
add
lahf
push
mov
inc
dec
dec
xor
roll
cmp
nop
sub
dec
test
xlat
std
xor
cmp
xchg
stos
dec
lock
mov
mov
jbe
lea
decb
lods
rep
cmpb
adc
pop
cmp
sbb
pop
sarb
mov
mov
or
clc
cmp
aas
xchg
xor
pop
and
inc
clc
gs
mov
test
into
jl
mov
mov
or
mov
aad
mov
sub
push
mov
sub
ret
ljmp
out
mov
cs
jnp
adc
loopne
and
test
stc
push
out
into
ret
xchg
ret
add
push
call
push
adc
cmp
jbe
dec
cmc
sub
inc
stc
dec
mov
faddl
sub
les
loopne
js,pn
add
push
js
push
dec
push
mov
mov
or
lret
loope
sub
sbb
xchg
lret
xchg
test
clc
lcall
fisubl
adcb
dec
or
sbb
idivb
inc
push
push
inc
fists
mov
stc
fidivs
loope
lock
cli
data16
pop
mov
cmp
mov
jne
push
sbb
aad
into
icebp
fildll
mov
jmp
mov
mov
test
adc
orl
fs
scas
cmp
xchg
push
mov
mov
scas
mov
jo
mov
shrb
inc
cmp
adc
outsb
sub
add
fadds
jns
jle
daa
std
cli
js
adc
mov
addr16
push
clc
xor
or
pusha
fsubp
in
cmp
pop
xchg
dec
or
rol
add
inc
lcall
inc
xchg
sbb
aaa
cld
push
rclb
cmc
fnstcw
shl
push
jo
and
int
add
popf
xor
je,pt
stos
push
mov
data16
mov
in
sbb
mov
push
insb
add
xchg
ret
sbb
and
pop
mull
sub
bound
pop
jge
cld
inc
or
scas
call
push
cmpsl
and
arpl
adcl
enter
cmp
pop
psllw
jl
pop
or
mov
lods
cmpsb
mov
loop
test
ja
es
xor
sub
adc
add
sti
sarl
mov
arpl
stos
cmp
sahf
aas
xchg
sub
in
lods
icebp
lret
cltd
mov
mov
inc
xchg
out
lret
push
and
pop
push
divl
push
movsb
je
pop
mov
sbb
mov
jbe
xchg
ds
in
xchg
push
loop
jb
bound
inc
xor
mov
add
mov
cmp
sahf
cmp
je
sbb
or
mov
imul
call
pushf
pop
lcall
sub
es
adc
cmp
push
test
imul
mov
inc
adc
pop
add
pushf
xchg
and
aaa
mov
sti
sbb
mov
lods
test
sbb
xor
inc
or
push
sub
pop
inc
jl
adc
rorl
lds
leave
or
cmp
or
mov
sti
ljmp
lahf
repnz
inc
jmp
inc
pop
fs
stos
add
dec
and
add
adc
loopne
push
or
add
fisubl
sbb
mov
aas
wbinvd
mov
jne
dec
clc
aaa
xlat
cs
cwtl
or
int3
shrb
inc
jl
sahf
in
fwait
mov
enter
xor
mov
pop
mov
pop
lahf
add
or
pop
jb
icebp
inc
shrb
out
jg
xor
xchg
xchg
xchg
repnz
in
cld
insb
inc
push
movsb
mov
fs
add
cwtl
dec
test
pop
pusha
pop
mov
push
push
mov
cmc
jg
jge
in
xchg
popf
loopne
imul
ljmp
push
icebp
mov
lods
jp
xchg
loop
nop
mov
adc
inc
into
dec
sbb
loop
jbe
xchg
in
mov
dec
std
xor
daa
loope
mov
push
pushl
mov
push
inc
hlt
lods
ret
push
js
cld
fldenv
les
inc
call
mov
fs
ret
std
out
mov
rcrb
mov
fmull
pop
push
pusha
pop
cs
inc
cmpsl
push
into
mov
adc
shll
cli
test
cmpsb
insl
mov
inc
push
stc
xor
aas
pop
pop
adc
sbbl
aaa
jne
fs
mov
aas
xor
into
sbb
adc
xchg
xchg
push
stos
mov
push
xchg
pop
int3
mov
xor
int3
push
inc
add
aam
icebp
scas
jecxz
adc
xchg
or
out
pop
sub
outsl
rclb
ljmp
clc
leave
cmc
jbe
imul
sub
sbb
out
push
sbb
sbb
scas
bound
repz
sar
leave
cmpsb
sbbb
sub
out
in
jb
ret
inc
loop
ljmp
mov
daa
cmp
xor
jo
dec
mov
loopne
dec
loope
mov
loope
ret
lea
inc
ret
rorb
testl
cmp
rolb
out
rcrl
ret
xchg
loope
add
push
push
or
sarl
fadds
mov
or
stos
adc
dec
pop
cld
rcl
test
xlat
jns
lods
out
in
jle
rorb
push
cmpsb
or
fcompl
adc
push
adc
scas
lea
mov
js
push
sub
rorl
outsb
add
outsb
jg
lods
adc
mov
adc
les
push
pop
les
cmp
cmpb
mov
or
shrl
sbb
clc
cli
mov
jp
adc
mov
insl
repz
xchg
mov
mov
inc
and
xchg
cld
and
loopne
enter
mov
push
call
or
inc
adc
adc
dec
cwtl
xor
in
test
lret
lcall
jae
loope
clc
fstpl
or
push
fldenv
arpl
add
sbb
sub
out
xchg
into
andb
fiaddl
divb
shrb
daa
addr16
jne
inc
jge
fidivs
jne
sub
pop
into
inc
sarb
xlat
nop
data16
sbb
test
mov
sub
dec
push
inc
loop
icebp
aas
add
lcall
or
aaa
pop
nop
loopne
lock
push
inc
and
mov
mov
sub
sub
xor
push
ret
cmp
icebp
filds
add
add
cs
jp
xchg
cltd
pop
mov
or
test
cmc
in
pusha
das
lods
jg
adc
jo
or
cmpxchg
mov
sahf
int
inc
into
arpl
movsl
mov
inc
ret
adc
push
les
jle
ret
ljmp
lcall
jecxz
pop
push
cwtl
decl
push
cli
outsl
bswap
and
sub
xor
and
xchg
std
mov
fs
dec
sti
aam
jne
imul
test
add
push
rorb
inc
pop
test
jbe
adc
das
mov
adc
pop
jo
dec
ret
and
jb
pop
insl
ds
adc
push
jbe
mov
push
sub
ljmp
pop
pop
mov
ljmp
xchg
add
push
movsb
jmp
mov
nop
ljmp
outsb
xor
lea
jnp
pop
lea
mov
js
into
fsubs
das
mov
nop
shrb
cwtl
sub
imulb
loop
loopne
push
lods
add
shrl
pop
pop
test
cmc
filds
jle
jae
xor
es
and
xor
or
xor
push
aad
push
fstpt
mov
fsubs
shl
arpl
or
fcmovbe
out
xor
xchg
out
dec
call
mov
add
cmc
inc
inc
fnstsw
add
repz
popl
sbb
aam
mov
mov
sbb
and
push
mov
mov
loop
mov
aas
inc
adc
sbb
jge
iret
subl
or
arpl
test
inc
insb
mov
and
xchg
loopne
push
xchg
add
mov
jl
sub
test
dec
or
xorb
ljmp
leave
in
cli
and
nopl
push
clc
cmovp
clc
mov
jbe
inc
inc
add
push
jge
dec
push
sub
dec
dec
sub
jae
loope
mov
mov
push
jge
and
negl
mov
xchg
sarb
sub
loopne
cmp
scas
mov
pop
ljmp
roll
cmp
frstor
inc
push
inc
bound
mov
pop
mov
stos
mov
lret
fisubrl
rcl
add
xchg
or
fsubp
das
mov
sub
pop
aam
sub
insl
pop
push
xchg
movsl
jno
loopne,pt
or
sbb
and
sbb
incl
inc
cltd
lock
into
add
inc
cmpsb
mov
out
sub
add
pop
bound
mov
sub
test
clc
arpl
imul
push
adc
push
stos
bound
add
imul
adc
cmpsl
mov
mov
leave
push
mov
jmp
push
aaa
cmpsl
push
std
bound
pop
ljmp
pop
cs
movb
jmp
in
mov
jl
movsl
mov
push
sub
es
jg
push
push
push
mov
repnz
in
pop
xor
push
cwtl
jnp
les
sbb
iret
push
mov
enter
clc
dec
push
in
cli
jg
inc
cli
jle
adc
xchg
sbb
and
idivl
add
sti
and
sub
aas
imul
jg
or
mov
fdivp
mov
pop
iret
cmp
inc
cmpsl
jnp
lea
movb
data16
int
dec
in
jo
add
sbb
xor
loopne
mulb
cmc
inc
xchg
je
shl
es
pop
mov
push
subl
jmp
push
incl
add
imul
rorl
pop
xor
jae
inc
push
push
movl
out
pop
lcall
lock
cmpsb
pop
js
pusha
mov
push
aam
jg
in
push
pop
pop
sahf
fdivrs
add
scas
les
mov
popa
mov
rorb
mov
loope
adc
dec
cmpsl
stc
out
sub
test
xchg
and
std
fsts
sub
mov
clc
popf
push
xchg
ret
mov
and
pushf
cmp
ss
xchg
inc
jne
dec
push
cmp
and
mov
mov
sub
fwait
ljmp
jbe
mov
cmpsb
ss
lock
or
jle
incb
push
lock
jns
outsl
insl
mov
lahf
lods
push
or
cmp
es
mov
sub
cwtl
adc
enter
jno
sub
adc
jp
inc
adc
cmpsb
mov
mov
cmc
adc
movl
cmp
xchg
pop
or
or
dec
pop
pop
xor
xor
inc
cmpsl
jb
mov
pop
icebp
movsb
pop
aaa
into
icebp
scas
cltd
jo
and
pop
das
and
cltd
cltd
loope
or
push
cmp
ljmp
test
cli
mov
mov
push
or
xor
cmp
inc
call
mov
sbb
lret
movsb
out
icebp
sub
fidivl
xchg
mov
add
inc
subb
and
mov
imul
enter
push
cmc
mov
mov
adc
adc
lods
jl
add
popf
xchg
mov
lock
into
mov
dec
push
push
js
dec
mov
ja
xchg
imul
int3
push
or
test
mov
scas
shlb
jbe
mov
or
je
rcl
push
jne
arpl
sbb
inc
insb
cmp
jl
cmp
pushf
cwtl
mov
ret
add
in
xor
pop
lret
mov
adc
mov
jg
shll
es
mov
cltd
sub
inc
mov
mov
xchg
mov
lock
lret
call
or
or
adc
orl
mov
cmp
cld
push
orb
or
inc
and
icebp
ret
nop
dec
out
fsubs
call
add
add
xchg
push
stos
shl
xchg
fimuls
adc
pop
and
inc
adc
lock
mov
or
mov
sbb
lods
cli
mov
jp
lcall
mov
fs
push
add
inc
scas
pop
adc
xchg
dec
cmp
inc
xlat
adc
daa
cmp
jns
add
inc
push
dec
shl
arpl
pop
cld
sbb
dec
xchg
push
pusha
push
enter
mov
or
or
jmp
mov
jge
cld
inc
xchg
pop
xchg
js
lcall
aam
dec
in
add
js
std
adc
clc
das
mov
jo
cmp
pop
pusha
cmp
daa
cmpl
shrl
xchg
es
fdivrs
aad
mov
push
loope
lods
pop
cmp
out
inc
mov
popf
lret
mov
gs
cwtl
scas
outsl
lods
pop
insb
dec
and
scas
jmp
sub
out
sub
adcb
iret
int3
mov
aad
and
mov
adc
fbld
stos
aaa
pop
cltd
push
cmp
cmc
in
stos
push
lcall
cmc
popl
xchg
and
movsb
fcmovnu
pop
add
xor
push
aam
out
mov
fwait
aam
mov
rcrb
fiaddl
ret
sarb
pusha
xor
push
sbb
push
jmp
test
shlb
outsl
je
push
inc
rolb
test
aam
pop
inc
sub
lock
addb
adc
lret
je
movsb
lea
mov
mov
orl
jle
sbb
repz
add
push
lea
cmpsb
cld
inc
or
test
push
jl
inc
shlb
sahf
jb
sub
inc
xchg
mov
aam
std
adc
std
mov
fimuls
leave
jb
lock
ficomps
mov
jns
adc
and
daa
cli
pop
sub
testl
dec
mov
movsb
mov
call
in
inc
cmpsb
push
xor
sub
pop
sub
cmp
or
inc
je
sahf
mov
lock
mov
pushl
pop
pop
pop
rcrb
bound
push
rorb
test
xor
stos
divl
jns
jl
xor
test
cmp
mov
arpl
fdivrs
outsb
mov
adc
das
sub
mov
inc
mov
les
sub
xchg
out
mov
or
jno
add
mov
sbb
insl
std
jbe
addb
cwtl
jo
ja
sub
dec
lcall
xchg
pushf
test
pop
pop
add
mov
mov
test
or
mov
sub
mov
js
es
push
in
or
fistpl
push
popa
lcall
push
call
xor
inc
pushf
insb
nop
sarl
xor
push
rcl
inc
cs
lock
ss
aas
xor
lods
add
mov
adc
dec
lret
ss
push
hlt
inc
jo
imul
xor
xchg
mov
outsb
call
adc
sbb
xchg
push
or
outsb
mov
mov
or
mov
mov
dec
mov
call
nop
mov
fsubrp
cmp
cwtl
gs
icebp
inc
test
lods
pop
hlt
sub
mov
test
push
incl
dec
and
lcall
sub
add
imul
mov
ljmp
pop
inc
pop
mov
pop
or
inc
in
or
or
mov
pusha
adc
xchg
dec
mov
jbe
cld
not
sbb
sbb
inc
shr
sbb
dec
push
sub
push
cmp
ret
scas
out
mov
js
mov
loope
or
add
adcl
push
and
or
push
rclb
jl
xor
fwait
lock
xor
imul
arpl
sbb
movb
subl
push
xchg
xor
das
movb
test
add
push
cmpl
sti
ss
insl
les
fistpll
lret
jle
addr16
aad
push
mov
jne
add
pop
push
mov
mov
push
adc
xchg
lret
dec
lock
in
add
jge
sahf
dec
hlt
out
sbb
aad
test
xorb
push
fdivr
add
mov
orb
dec
push
aas
std
cmc
jle
cmp
add
or
adc
inc
xchg
loope
das
por
mov
push
mov
sahf
inc
roll
mov
pop
add
push
jo
jb
adc
push
mov
mov
fimuls
xchg
imulb
cwtl
or
arpl
xchg
dec
and
sub
or
pop
movsl
or
test
xchg
into
hlt
sbb
cmpsl
push
push
cmp
rolb
and
loope
jp
mov
sbb
icebp
lds
gs
inc
push
movsb
xor
lret
push
cmp
mov
adc
loopne
cmp
scas
aad
mov
call
cmp
das
cld
cmpb
adc
nop
push
adc
in
sbb
icebp
cmc
insl
and
add
mov
sub
test
xchg
shrl
andl
ret
les
inc
fistpl
sbb
fucomip
xor
or
shl
xchg
sar
cmpb
aam
push
daa
cmc
lds
sbb
inc
add
js
push
rcl
out
sbb
push
jmp
or
mov
andb
sahf
sahf
mov
jecxz
and
inc
stos
sti
inc
scas
movsl
push
inc
movb
adc
out
xchg
jmp
xchg
lret
push
sbb
push
cwtl
sbb
xchg
rcrl
dec
push
pop
jecxz
mov
mov
xor
call
and
mov
pop
mov
outsb
shl
pop
and
jb
adc
push
enter
lock
push
in
lods
adc
fistps
jmp
arpl
xlat
test
insl
add
pop
mov
data16
ficoml
push
cmp
sbb
adc
xchg
icebp
ja
cmp
je
adc
pop
pop
jmp
insl
dec
cmp
sahf
jae
test
or
notb
mov
push
ljmp
ljmp
out
cmc
jb
cmp
lods
or
ret
and
std
imull
lds
mov
movsl
sbb
add
stos
les
push
push
mov
or
test
jnp
mov
jbe
pop
jne
out
dec
lods
sbbb
fldpi
mov
cmp
cld
mov
xor
loop
stc
rol
push
les
inc
pop
fisttpll
push
fsubrl
inc
or
pextrw
das
mov
xorb
inc
inc
loope
stos
cmp
inc
adc
jb
adc
xor
mov
xchg
mov
dec
or
lods
repnz
add
jle
clc
jo
inc
clc
or
shlb
sbb
loopne
ret
std
fwait
rorb
add
xchg
shlb
jo
psraw
mov
or
loop
in
cmpsb
or
lea
pop
cmc
xorl
ret
out
in
sbb
scas
sbb
push
mov
stos
and
jbe
out
jle
push
testl
jnp
sbb
push
ret
fisttps
push
insl
sub
test
adc
add
mov
in
jb
in
push
test
or
xlat
dec
in
imul
mov
pop
cmpsl
ret
out
cmc
dec
lods
mov
pusha
rcrb
pusha
js
cld
push
mov
in
inc
push
shl
fimull
shll
aaa
cltd
jg
lock
imul
in
inc
xchg
jmp
fmull
aas
enter
jl
add
adc
mov
shll
sbb
and
push
lds
mov
mov
loope
dec
aam
xor
notb
pop
out
inc
ja
cmp
inc
adc
mov
icebp
fisttpl
adc
and
and
xor
pusha
mov
jmp
int
mull
mov
inc
mov
addb
je
jmp
add
cmp
ss
push
jmp
mov
jp
adc
repnz
and
xor
push
lea
je
adc
call
push
jnp
cmp
and
orb
and
sub
subl
xchg
lds
movsl
mov
push
mov
sub
inc
test
fs
mov
sbb
mov
jo
loop
jbe
dec
das
cmp
adc
or
inc
and
jne
dec
fcompl
sbb
sub
ljmp
popf
andb
imul
push
xchg
stos
lods
jle
sub
fwait
adc
std
rcl
test
loopne
dec
les
ret
inc
jl
aaa
push
lods
dec
js
sbbb
ret
mov
or
out
pop
enter
mov
in
rclb
add
faddl
call
sbb
sub
inc
cli
mov
js
nop
or
test
sarb
adc
out
xchg
test
add
adc
cmc
cmp
mov
sbb
outsl
sub
adcl
js
mull
push
movl
cmp
out
mov
sbb
fdivl
inc
clc
adc
outsl
fs
mov
adc
cli
les
jle
test
and
mov
icebp
lret
sbb
ljmp
lods
sbb
cmp
cmp
sbb
sbb
incb
pop
repz
mov
xchg
jb
rcll
add
sbb
add
stos
sarl
leave
sbb
mov
ficoms
lret
insb
push
xor
jbe
add
imul
sub
dec
xor
add
or
and
mov
cmc
shld
pop
and
sbb
call
dec
mov
lds
aas
mov
pop
and
arpl
add
aas
cmc
mov
and
es
jno
cmp
orl
shrl
and
and
inc
mov
sbb
cmp
inc
sbb
cmpl
jmp
xchg
xchg
hlt
test
push
stos
cmc
ret
sbb
mov
ret
scas
mov
xchg
inc
adc
pop
push
jg
cmpsl
or
or
mov
mov
jecxz
mov
loopne
add
popa
mov
or
nop
sti
roll
inc
or
in
jmp
push
ljmp
xchg
cli
pop
fnstcw
imul
add
push
xorl
fnstsw
sub
sub
popa
lock
scas
pusha
aaa
jmp
mov
xor
insb
dec
jp
out
popa
dec
or
jmp
insl
mov
mov
push
inc
rcrl
fbld
jecxz
int3
sbb
pushf
cs
out
jmp
fs
or
aad
pop
fmul
sbb
lock
push
loope
pop
and
sub
add
rcrl
sbb
test
icebp
cmc
test
pop
icebp
fdivrl
clc
test
pop
push
sahf
push
xchg
sub
dec
stos
clc
scas
mov
popf
shrl
sub
aam
clc
aad
mov
jle
adc
scas
dec
pop
or
into
dec
mov
fnsave
adc
loope
test
fiaddl
or
jbe
push
xor
repnz
testl
ret
inc
imul
pop
hlt
lods
imul
lods
xchg
mov
scas
mov
or
push
call
sbb
out
sub
inc
cld
xchg
and
push
mov
mov
shl
mov
test
jp
sbb
sub
pop
mov
sahf
xchg
add
mov
hlt
add
adc
stos
push
and
mov
push
add
enter
das
insb
cmp
lcall
out
cmp
inc
lods
adc
shl
add
ja
mov
test
add
push
cmp
clc
daa
jge
dec
inc
dec
repnz
mov
cmp
adc
aas
enter
jo
dec
insl
push
clc
test
nop
popf
test
imul
scas
loopne
push
sti
loopne
mov
jg
sub
mov
push
sub
add
jo
mov
jl
dec
loopne
xor
mov
adc
outsl
sbb
mov
call
inc
rcr
jmp
inc
fistl
das
into
movsb
mov
movq
or
add
loop
mov
xchg
or
daa
movsb
lock
or
cmpl
cmc
adc
inc
mov
mov
and
jb
pop
jecxz,pt
daa
movsb
rorb
add
dec
mov
adc
jge
pop
add
or
cmp
cltd
int
rorb
push
int
push
shlb
aad
pop
out
movsb
or
les
aas
clc
xlat
sbb
mov
icebp
pop
cmp
in
enter
jge
pushf
xchg
and
mov
loopne
sub
add
cvtpi2ps
or
andl
mov
decl
push
xchg
das
jbe
xor
mov
xlat
call
cmp
dec
es
pop
push
push
lock
lods
fmuls
xor
sbb
cmp
call
test
dec
push
adc
pop
cmc
add
mov
mov
push
push
pop
add
mov
ds
adc
pop
adc
mov
or
in
add
sub
sbb
imul
xor
ljmp
clc
rcrb
call
and
and
sub
sbb
mov
jge
push
ss
add
imul
imul
inc
scas
or
std
xlat
iret
xchg
cltd
in
or
pop
sbb
xchg
xchg
mov
xor
rolb
lods
ret
lods
icebp
add
ror
add
fcoml
or
addl
in
dec
rorb
popl
inc
mov
cmc
dec
das
lock
mov
or
loope
push
and
sub
cmpsl
pavgw
cmp
rcrb
pop
mov
mov
xchg
add
cld
adc
popl
sbb
mov
ret
cmpl
mov
sbb
xor
mov
inc
jnp
cmpsb
pop
inc
jg
fistl
data16
aam
mov
clc
mov
inc
xchg
xor
inc
xchg
mov
add
mov
mov
push
insb
sarb
loopne
jae
push
and
or
pusha
and
mov
lret
cltd
pop
mov
cmpsl
daa
imul
jo
popl
add
mov
dec
cmc
inc
pop
xchg
cwtl
fsubrl
push
mov
punpcklbw
add
push
pop
fstpl
pop
je
mov
mov
into
push
stos
pop
loopne
dec
xor
rcrb
aas
or
dec
adc
mov
fisttpl
shlb
mov
mov
pushf
andb
or
mov
push
sbb
push
shlb
pop
stos
mov
enter
shll
cwtl
and
mov
or
xor
clc
xor
hlt
push
jle
pop
jb
popa
mov
xchg
rcll
fwait
dec
iret
mov
xor
test
scas
sahf
leave
lret
sbbl
xchg
mov
insb
dec
push
push
lds
jbe
and
dec
cwtl
lea
das
sub
or
mov
mov
jnp
mov
inc
mov
and
imul
jmp
jmp
xchg
fiaddl
xchg
addl
data16
dec
cmp
inc
add
xor
push
hlt
mov
cld
push
loope
cmpl
add
rorb
sahf
gs
mov
inc
mov
adc
xchg
fwait
data16
or
jo
add
push
sarl
ljmp
mov
xchg
pop
je
in
dec
push
fsubl
loopne
cmpsl
cmp
mov
jb
add
sub
ret
dec
sub
sbb
mov
mov
push
sarb
jno
xchg
pop
adc
ficomps
pop
and
dec
loopne
in
jo
push
ja
add
inc
out
rolb
add
xor
add
inc
pop
pop
push
clc
punpckhbw
or
cmp
fucomip
mov
mov
pusha
lret
mov
push
movsl
lods
fyl2x
cmc
mov
mov
pushf
xor
movsb
push
adc
addps
outsl
mov
mov
mov
dec
nop
sahf
push
mov
je
cli
leave
inc
inc
mov
and
dec
cmp
testb
mov
pop
add
mov
stc
mov
or
jne
or
mov
jae
dec
mov
dec
imul
sahf
out
movsl
addl
hlt
arpl
or
push
mov
push
out
sub
jbe
jmp
into
sub
cmp
jne
imul
mov
iret
xor
sbb
cmp
insl
add
sbb
xor
mov
lock
push
jbe
cmp
fisttpl
push
data16
ret
ret
adc
ss
testl
repz
js
lods
mov
gs
or
jle
add
push
fdivrs
dec
or
je
test
out
xor
test
stc
dec
aaa
cmp
push
push
rcrl
add
shlb
test
pop
rorb
vpshufhw
test
jno
pop
cld
dec
les
sbb
sbb
push
cmp
sbb
imul
add
xor
shrb
jmp
and
and
outsb
sbb
fstl
aam
xor
adcl
jo
mov
sbb
jne
inc
ljmp
addl
lret
aam
pop
add
ss
jo
imull
pushf
je
xchg
dec
pop
sub
lods
ljmp
sbb
mov
xor
mov
xchg
inc
test
lret
xchg
adc
mov
inc
into
out
aad
sbb
ljmp
hlt
nop
add
dec
pusha
and
adc
loopne
push
and
lods
sub
push
scas
popa
mov
rcl
jmp
es
sub
shrb
in
sub
jecxz
or
adc
inc
out
mov
jo
outsb
mov
xor
lock
adc
loope
xchg
pop
jle
fisubl
jl
lods
mov
jl
lock
test
pop
or
adc
inc
and
xorb
xor
or
dec
or
icebp
sbb
imul
add
inc
mov
cwtl
lock
jmp
je
fs
inc
imul
push
sbb
mov
adc
sbb
or
cmp
pop
push
or
js
cli
aam
push
inc
lods
jbe
andb
ret
bswap
push
push
sub
mov
outsb
loope
popa
js
xchg
repnz
xchg
jg
aaa
cmc
push
fs
xor
lock
fiadds
je
jo
push
push
push
mov
and
xor
testb
int3
dec
imull
and
mov
aaa
inc
andb
xor
jp
fcmovb
scas
jg
push
xor
mov
bnd
mulb
movsb
dec
dec
pop
fcmovnu
mov
mov
inc
xchg
hlt
push
fdivrl
xor
add
add
mov
cli
adc
scas
in
ret
xor
in
xor
jb
jno
or
outsb
inc
mov
xor
add
pop
cmp
sub
adc
pop
icebp
movsl
mov
aad
sahf
je
sub
and
cmpsb
dec
cmp
leave
ja
and
mov
push
sar
loopne
sub
inc
pop
cmc
in
mov
push
mov
js
xchg
inc
cmpsl
jb
pusha
adcl
out
jne
popl
pop
inc
daa
sbb
es
sub
push
dec
daa
inc
sub
aaa
adc
aaa
mov
aaa
mov
adc
flds
mov
or
lock
inc
push
ret
arpl
sub
xchg
fidivrs
popf
aas
js
testb
or
push
jge
shrb
pop
mov
pop
in
adc
in
mull
test
jg
lods
outsb
add
and
pop
sar
sbb
push
shlb
xchg
jnp
adc
or
mov
push
or
nop
shrb
in
push
ja
dec
out
adc
jnp
xlat
out
lods
lret
mov
ss
aas
mov
adcl
sub
jl
push
repz
cmp
lock
jns
pop
mov
mov
sub
roll
mov
insl
hlt
test
leave
dec
loope
xchg
xchg
sbb
mov
sbb
sub
loopne
push
sti
and
dec
addr16
out
pop
fisttps
dec
push
dec
ljmp
push
or
sub
mov
mov
pop
dec
mov
and
gs
and
and
out
aam
dec
or
jno
add
fs
adc
call
adc
push
cmp
lcall
mov
fisubl
add
push
lock
mov
sub
out
dec
enter
lods
outsb
inc
mov
aas
mov
ret
shl
or
scas
hlt
fldenv
sub
call
test
negb
push
lret
test
mov
loope
or
cmp
aaa
jecxz
stos
repz
imul
fwait
push
shrl
mov
mov
mov
sbb
ret
outsl
adc
adc
repnz
inc
call
add
fisubs
adc
push
push
cmp
in
push
std
or
aaa
scas
lock
pop
in
test
jp
sahf
das
rcll
mov
pusha
adc
les
cmp
fistl
mov
adc
xlat
jae
or
sbb
subb
adc
out
cwtl
inc
shll
test
adcb
cld
cld
cli
in
cmpsb
mov
push
add
adc
xchg
xchg
dec
xor
int
sub
push
clc
cwtl
adc
or
mov
mov
add
or
jge
xchg
mov
mov
int
sahf
jmp
and
mov
clc
xor
shrb
mov
test
ljmp
lahf
xor
mov
or
sub
xor
leave
loope
incb
and
scas
sub
imul
or
add
sub
fadd
pop
mov
call
jo
rolb
ljmp
cmp
popa
leave
insl
sub
mov
fwait
fwait
lahf
lods
bound
dec
sbbb
cmc
pop
jmp
ret
adc
inc
push
add
mov
mov
and
inc
jbe
add
ret
xchg
and
ljmp
adc
mov
nop
jp
mov
mov
adc
int
xchg
dec
nop
popa
in
aad
aad
cwtl
jg
sbb
mov
adc
leave
aaa
out
das
repnz
cmp
ja
jmp
inc
push
mov
mov
pop
nop
data16
mov
cld
jno
aas
dec
clc
punpcklbw
bound
ret
sbb
test
mov
sbbl
inc
mov
xor
push
clc
cmp
pop
hlt
sti
std
dec
subl
pop
mov
aas
xchg
cmp
adc
xor
inc
repz
add
cs
ret
das
adc
lock
and
cmpsb
add
adc
push
stc
sbb
add
lea
dec
jne
mov
les
adc
es
ja
add
jo
pusha
or
scas
add
cmp
sub
add
cmp
mov
and
fdiv
push
ljmp
mov
or
cs
hlt
dec
xchg
sub
fdivp
sbb
imul
dec
leave
xor
pop
pop
add
ljmp
stos
icebp
scas
jecxz
sbb
ret
and
and
xchg
aas
lcall
add
mov
xor
lds
sbb
popf
add
call
mov
int3
or
xor
aas
cmp
xchg
inc
cld
repz
jl
sub
lea
and
loopne
jae
add
nop
dec
jle
repz
js
mov
dec
loope
inc
or
test
loopne
sbb
pop
inc
jg
incl
bound
mov
mov
in
loop
mov
mov
ljmp
dec
loope
push
sbb
xchg
and
test
pusha
mov
xlat
jae
adc
popa
shl
mov
aas
test
movsb
push
mov
in
arpl
fists
push
out
fdivrs
scas
sub
test
lcall
push
hlt
loope
adcl
push
inc
std
mov
adc
hlt
xchg
mov
push
add
hlt
or
and
shll
add
mov
mov
lahf
mov
push
sbb
pop
into
jp
sub
je
and
add
add
jo
scas
test
rcrb
push
xor
fildl
xor
mov
mov
jg
or
cwtl
ret
lahf
icebp
fisubs
fstpl
subl
inc
xor
shlb
and
rorl
xchg
arpl
sub
push
inc
es
inc
sbb
repnz
pop
mov
sbb
dec
sub
sub
rcr
mov
mov
out
jmp
rorb
insb
and
pop
cmpl
movsl
add
lcall
test
psrlw
sti
add
and
cli
leave
adc
cmp
lret
ss
jb
jecxz
pushf
cmp
and
fistpll
imul
xor
sub
jge
lret
nop
call
xor
popa
jns
mov
jmp
lea
movsb
sbb
pop
pop
movsl
add
decl
cltd
mov
cmp
call
scas
xlat
out
dec
inc
sbb
and
ds
sub
add
ds
fnsave
out
cmpsb
pushf
fldpi
xor
mov
adc
repz
or
jmp
inc
cwtl
ficoms
in
std
ret
in
inc
and
wrmsr
js
faddl
push
lea
mov
test
mov
xlat
enter
inc
xchg
xor
aas
mov
movsb
movsl
bound
js
or
or
pop
pop
and
sub
mov
lret
test
imul
sahf
stos
mov
mov
inc
daa
scas
xlat
sbb
decl
mov
loop
dec
or
sbb
pop
cmc
sbb
push
or
xor
in
jne
clc
inc
or
fsubs
shll
mov
xor
leave
rcrb
cmpsb
pop
loopne
ret
rcl
mov
inc
push
or
pop
inc
xor
aaa
inc
arpl
jmp
xor
sbb
adcl
cld
sbb
enter
out
cmc
dec
fucomip
loope
lods
pusha
or
push
mov
or
hlt
and
xor
mov
inc
mov
scas
lock
sub
push
orl
clc
out
add
test
roll
lods
jnp
or
xor
data16
inc
sub
add
aaa
sarb
in
xor
pop
fwait
clc
add
mov
int
mov
inc
jmp
pop
nop
push
aaa
add
ja
out
movsl
out
pop
aam
or
cmp
or
fwait
push
sbbb
sub
rcll
pushf
popa
adc
std
rcr
fcmovne
xor
clc
jo
sahf
sub
ret
xchg
sbb
hlt
cmp
jnp
mov
and
pop
mov
incl
and
push
add
add
pop
ds
loopne
jno
pop
xchg
jns
sbb
nop
loope
mov
shrb
cltd
bound
test
pop
jecxz
xor
test
jb
and
mov
pop
out
add
inc
rcr
ret
pop
sub
dec
sub
adc
arpl
cld
sahf
inc
mov
sbb
or
inc
cmp
scas
into
mov
adcl
ret
adc
mov
sub
outsl
jne
loope
pop
dec
cld
push
gs
mov
jae
pop
xor
and
popf
outsb
push
push
push
jp
std
sub
sub
and
cs
add
inc
out
lret
into
imul
les
aas
lods
mulb
jecxz
xor
test
fstl
arpl
ss
test
rcrl
ljmp
sbbb
cmp
aam
movsl
imul
aas
jg
fstps
movsb
add
mov
mov
nop
cwtl
cli
es
or
adc
ficomps
lds
pop
ficoms
push
cmp
cmp
aam
int
sbb
and
rclb
ror
xor
and
add
adc
or
mov
sahf
scas
iret
shl
dec
push
call
push
popa
jnp
add
push
lock
in
aam
dec
out
rcr
cltd
stos
cmp
pop
addb
fdivrp
add
dec
call
fwait
aas
dec
fdivrs
scas
jne
sbb
push
add
pop
hlt
aas
and
into
inc
cmp
adc
inc
int3
roll
int
mov
adc
jne
and
inc
mov
ja
and
mov
subb
cmp
scas
pop
lock
insl
adc
inc
imul
mov
int3
cmpsb
dec
or
sub
repnz
rclb
loop
clc
push
inc
add
call
ljmp
jmp
scas
xor
lods
jg
add
xchg
dec
adc
push
mov
outsb
fsubl
push
arpl
inc
subl
pop
adc
push
aas
mov
inc
or
mov
mov
loopne
jmp
mov
jp
stc
jecxz
pop
cmp
xchg
mov
int
shrl
or
into
ret
add
lock
inc
cs
pushf
insb
jns
je
jb
xor
push
fsub
adc
jecxz
and
adc
adc
and
mov
out
and
and
iret
and
pop
movsl
std
xor
and
and
jbe
iret
popa
inc
repz
add
jmp
andl
and
inc
popf
lock
in
aas
cmp
lret
dec
or
ja
add
add
and
pop
jae
inc
mov
loope
sbb
xchg
fnstenv
pop
scas
shlb
push
in
popa
jmp
test
xor
mov
jo
xchg
lods
xor
notl
sbb
pop
cmp
cmp
inc
pop
testb
or
icebp
loopne
xchg
icebp
jecxz
xor
pavgb
aad
jmp
int
mov
push
dec
addl
outsl
loope
xchg
in
or
arpl
js
cmp
mov
jb
leave
add
xor
jo
movsl
pop
mov
lahf
fs
inc
divl
xchg
inc
loop
js
insb
xchg
loop
jg
cmpsl
pushf
mov
subl
mov
test
pop
inc
mov
and
pop
push
xchg
popa
lods
and
pop
dec
mov
rorb
ret
lret
insl
arpl
fbld
int
push
call
loopne
loope
pop
or
lock
fcoms
jno
and
popf
inc
push
je
add
ds
rcr
test
enter
aad
sub
popa
enter
shlb
xchg
cs
sti
loope
dec
lods
dec
cs
mov
adc
inc
push
inc
sub
mov
add
add
data16
stos
push
mov
loopne
push
cmpsb
sub
fs
mov
adc
xchg
jmp
push
mov
push
inc
mov
pop
add
push
mov
add
jne
jp
pop
mov
sbb
sub
jne
xchg
dec
cmp
mov
pop
loopne
sbb
dec
or
aaa
rcrl
xchg
jle
jg
pop
sbb
add
nop
dec
or
mov
dec
scas
inc
std
xchg
fistl
mov
mov
fistl
ja
cmp
roll
scas
fsubl
push
mov
dec
pop
lar
inc
jo
push
shlb
cmc
lahf
outsb
jne
pop
adc
std
jge
pop
into
sbb
pop
gs
add
movl
adc
sarl
aaa
sub
mov
push
ret
xor
cli
push
jl
jg
dec
pop
fildl
in
push
mov
mov
xor
stos
push
sub
dec
sub
push
or
xchg
jle
add
pusha
push
faddl
pop
imul
test
mov
jp
push
cmpl
pop
mov
mov
es
sub
and
add
shrl
add
and
jae
mov
cwtl
pop
xchg
dec
dec
loopne
mov
call
sub
push
fdivr
or
in
cmp
pop
shrl
pop
mov
push
cmp
mov
or
push
loop
mov
sub
or
iret
test
push
outsl
js
fldenv
aaa
mov
inc
jg
ss
fwait
sbb
aas
das
rclb
xor
pusha
cmc
pop
xchg
mov
xchg
fildll
jns
xorl
xchg
call
cmp
pop
mov
jae
mov
dec
dec
mov
jl
adcb
jmp
jo
sahf
je
or
cld
and
loopne
xor
mov
xor
sbbb
jo
jbe
adc
icebp
sbb
sbb
jl
out
cmp
jecxz
decb
outsl
fbstp
ljmp
movsb
push
sbb
fistl
pop
enter
adc
int
scas
enter
and
es
gs
dec
inc
in
pop
dec
cmpsl
mov
hlt
mov
clc
loopne
jmp
in
rcrl
cwtl
mov
cmp
es
pop
nop
popl
cld
addr16
fimull
nop
jge
fs
xor
xor
jp
fwait
jmp
cltd
fstpl
sub
mov
addr16
cmp
dec
lds
mov
fnstsw
xor
xchg
cmpsb
xor
mov
pop
mov
iret
dec
ret
cli
mov
test
xorl
mov
imul
dec
test
xchg
inc
movsl
dec
add
add
fwait
xor
in
xchg
mov
test
clc
sub
fwait
inc
push
adc
shll
pop
dec
or
cli
mov
push
xor
jne
mov
push
add
out
loop
fcmovnu
insl
or
inc
xchg
and
loop
cmc
or
pop
jg
or
cmp
sbb
inc
aad
or
mov
cmp
sub
adc
xchg
and
into
inc
sub
push
and
test
out
mov
sbb
stos
lcall
out
mov
sbb
ficompl
add
outsl
adc
lret
scas
adc
in
fwait
pop
lds
sbb
sbbl
lcall
pop
insb
push
and
pusha
cmpsl
fs
rol
mov
aad
mov
dec
shrl
mov
inc
jae
int
outsl
dec
sbb
and
add
xchg
aad
inc
clc
scas
loop
stos
in
dec
cltd
loopne
test
jle
test
adc
xchg
mov
adcl
test
sub
and
daa
jbe
mov
sub
cmp
add
ficoml
inc
xchg
jmp
enter
aas
push
sahf
xor
lock
cmpsb
mov
aas
out
mov
lahf
sub
ficomps
sbb
push
adc
das
call
mov
aaa
jmp
push
scas
push
in
push
lahf
adc
sub
mov
push
bound
aas
xchg
lods
pop
pop
adc
add
sarl
mov
je
lods
mov
arpl
loope
sbb
fidivs
aam
or
nop
xor
mov
mov
lret
mov
into
mov
dec
adc
cwtl
push
es
scas
sub
popa
in
in
addr16
inc
or
xor
leave
repz
and
je
dec
inc
or
push
or
aam
mov
cmp
jl
inc
mov
test
push
dec
shrl
je
inc
push
sub
rolb
sub
inc
addb
jle
call
ret
in
inc
fwait
enter
ss
sbb
mov
sbb
pusha
mov
loopne
aam
mov
stos
adc
sbb
mov
stc
clc
push
hlt
movsl
cmp
shrl
push
xchg
cmp
cmp
xor
jp
and
into
mov
cmp
lahf
mov
push
addr16
mov
fisttpl
jnp
or
jo
adc
add
lock
lods
pop
mov
and
clc
dec
mov
mov
shlb
add
mov
cli
push
xchg
inc
dec
fisubl
out
jmp
stc
sti
lret
adc
adc
sub
jno
xor
mov
sbb
lret
fstps
clc
push
push
sbb
lret
stos
sti
adc
lock
shlb
test
cmp
lcall
mov
jl
adc
xchg
xchg
ljmp
pop
inc
inc
aas
out
cmp
add
mov
xor
pop
pop
cli
nop
clc
imul
mov
mov
imul
pop
out
cwtl
sbb
mov
mov
es
pop
mov
and
inc
decb
mov
hlt
push
mov
js
cmp
rol
scas
pop
cmpb
xlat
add
fadds
decl
dec
pushaw
mov
popa
xor
jle
jle
sahf
jae
repnz
push
dec
jecxz
aas
out
inc
xchg
dec
adc
clc
adc
icebp
inc
sbb
stos
jp
xchg
sarb
pop
pop
insl
ds
push
xor
rcrl
pusha
out
bound
xor
aas
adc
inc
add
ljmp
ret
lock
xchg
popf
push
mov
xchg
pop
aas
mov
andb
loop
hlt
loope
loopne
imul
addr16
addl
inc
sbb
dec
icebp
add
test
pop
rol
mov
ljmp
shufps
shlb
iret
xor
inc
dec
sub
cmp
cmpsb
mov
cli
sub
lock
ss
or
cmp
clc
clc
imul
pushf
xchg
mov
sahf
jle
je
dec
sti
add
or
out
dec
adc
xor
xchg
enter
fdivr
jmp
popl
fwait
pusha
or
fdecstp
mov
jmp
rorb
stos
aas
dec
or
in
dec
and
cmpsl
mov
in
sub
xchg
or
aas
or
fwait
cltd
scas
test
js
add
pop
push
movl
mov
daa
sbb
xlat
mov
enter
sub
loop
and
outsl
loope
inc
xchg
pushf
dec
jnp
andl
out
lcall
add
call
inc
mov
js
dec
popa
sarb
add
ret
ret
sbb
testb
sbb
mov
jmp
dec
mov
jo
cmp
dec
imul
dec
int3
xor
cld
sbb
sbb
lds
in
inc
jo
or
inc
sub
inc
mov
sbb
and
dec
fidivrs
movsb
stos
scas
jne
bound
fwait
js
ret
lret
xchg
push
mov
pushf
nop
cld
and
shll
push
fbstp
pusha
mov
sti
leave
sbb
adc
pop
mov
test
inc
sub
xor
sbb
pop
pop
xchg
add
jge
jl
jg
add
test
add
mov
sbb
cltd
and
mov
cli
dec
lahf
rorl
add
jmp
les
pop
jmp
jp
xor
aam
mov
pop
jg
inc
leave
lret
sub
je
rcrl
inc
mov
mov
push
and
out
mov
or
test
pop
popa
xor
and
jp
sbb
xchg
cmp
bound
outsl
add
fcmovnb
push
loopne
jmp
or
inc
inc
pop
add
fisttps
inc
cmp
jge
lea
mov
cltd
jg
cmp
fstpl
das
icebp
sbb
push
push
jmp
push
mov
pushl
jae
movsl
push
xchg
icebp
test
scas
mov
cmp
addr16
vpcomuw
sbb
jecxz
pusha
lahf
iret
and
das
sbb
jo
push
or
ss
cmp
jp
mov
das
movnti
imul
out
stc
jl
push
inc
cmpsb
xor
int3
mov
ret
jg
jg
movsl
aas
or
pop
adc
icebp
jecxz
loop
decb
or
pop
aaa
pop
mov
iret
pop
push
rorb
popa
jmp
mov
inc
mov
dec
jo
clc
add
clc
flds
xchg
adc
add
or
inc
xchg
sub
pop
in
shlb
sub
ja
repz
cmpsl
scas
push
sub
imul
mov
clc
and
outsb
and
pushf
cwtl
jns
out
add
jbe
ljmp
and
add
gs
mov
mov
fs
inc
js
or
pusha
xor
fidivs
ds
cmp
jecxz
repnz
sbbl
mov
sbb
iret
push
push
test
mov
or
mov
pop
jecxz
xchg
fdivrs
push
hlt
add
insl
test
inc
in
pop
out
stos
inc
inc
sub
and
jmp
sbb
xchg
into
dec
and
stos
xor
xor
loop
fstpl
push
push
test
out
push
andb
jg
and
orb
jae
minps
testl
scas
imul
rcll
push
and
add
clc
dec
jp
jb
addr16
out
push
lock
je
jmp
stos
insb
jns
and
test
notl
adc
xchg
ja
fmull
popa
mov
or
ljmp
popa
mov
fildl
xor
aas
sbb
jmp
inc
out
sti
pop
ret
inc
lahf
push
out
hlt
cmp
push
push
push
cmp
aas
in
filds
mov
mov
mov
pop
dec
stos
fimull
aas
mov
sarb
adc
ror
div
add
jno
mov
inc
add
lret
ds
or
mov
popf
jge
fnstenv
xor
dec
out
mov
or
shll
adc
inc
mov
add
jb
cld
pop
js
jns,pt
jle,pt
push
mov
sub
cmp
sub
dec
lock
lret
adc
xchg
mov
xchg
jle
mov
movb
js
push
jnp
xchg
out
dec
push
out
fstpt
fs
pop
sbb
pop
xor
icebp
pop
shl
mov
out
inc
adc
sub
xor
rolb
fldt
sbb
jge
adc
add
sbb
in
push
test
nop
mov
jo
push
enter
not
fiaddl
sbb
inc
cmc
adc
repz
mov
or
cmp
adc
dec
mov
add
movsb
xor
mov
mov
loop
test
mov
sub
pmullw
jnp
movsl
add
fucomi
push
scas
add
loope
mov
and
push
pop
lret
dec
sub
int
jl
ret
inc
add
lds
rol
rorb
loop
adc
addl
aam
lods
dec
push
or
sub
or
xor
pop
cltd
and
out
mov
mov
es
outsl
jmp
mov
pop
or
in
push
int3
iret
cmp
pop
add
test
faddl
das
ret
imul
enter
pusha
out
push
add
add
pop
inc
mov
push
aas
adcl
ret
inc
js
dec
ljmp
mov
loopne
inc
je
dec
cltd
dec
sbb
add
out
pop
adcb
pop
ret
stc
in
jnp
nop
xchg
xor
ja
xchg
cwtl
sub
sar
inc
aam
lds
push
addl
and
jmp
les
xlat
insl
imul
pop
cmp
lea
cmp
imul
jmp
popa
push
vpunpckldq
fldcw
fidivl
cmp
aam
cmpsl
lret
add
lahf
add
pop
fldl
and
mov
imul
add
test
ljmp
mov
and
inc
pop
bound
push
add
out
mov
mov
cmp
das
xchg
lods
or
das
jg
ljmp
cmp
dec
sbb
fnstcw
int3
sub
sbb
mov
xor
js
shlb
into
mov
stos
jae
fdivl
jecxz
adc
xor
movsb
aam
pop
sbb
and
lahf
pushf
xor
and
negb
std
sub
xchg
fnstenv
or
pop
nop
aaa
fldcw
or
mov
jg
jae
imul
ja
or
fisttpl
movsb
push
add
mov
xchg
stos
test
dec
cmpb
dec
rclb
jae
ret
lret
push
sub
add
ret
lret
add
lods
adc
inc
and
ret
aas
sub
popa
cmp
js
arpl
xchg
cmc
cmp
jo
imul
lahf
cmp
and
xchg
loopne
adc
mov
jg
mov
mov
loopne
test
icebp
pop
fsubl
sbb
in
inc
inc
push
lahf
add
pop
add
repz
aas
insb
leave
rcll
inc
hlt
ja
faddl
add
fld
mov
cli
ret
dec
inc
ret
inc
adc
cmpsb
sbb
xchg
cmpsb
lea
and
pop
mov
pop
notb
inc
fs
aam
sub
fmul
cmp
ja
jne
test
pop
add
sub
and
incb
dec
push
and
mov
shlb
inc
jg
pop
mov
sbb
push
inc
xchg
mov
insl
xabort
aad
jmp
cmp
imul
jmp
imul
cmpsl
inc
sbb
int
stos
dec
mov
cmp
out
and
xor
jno
imul
jmp
dec
les
sbb
lods
pop
add
inc
pop
mov
xchg
imul
mov
fdiv
mov
test
lea
stos
push
or
sbb
out
mov
mov
pop
jle
jne
mov
mov
lock
jl
mov
movsl
xchg
inc
push
mov
sbb
loope
stos
jle
insl
out
mov
dec
or
int
fistps
pop
mov
sub
mov
lret
cmp
add
pop
mov
sbb
sub
lahf
lock
push
mov
orl
cmp
inc
adc
and
test
mov
pop
movsb
inc
dec
cmp
imul
lods
or
and
xor
aaa
loope
imul
mov
jle
cmpb
sbb
inc
push
into
inc
shrl
add
pop
add
mov
cs
scas
xchg
mov
mov
inc
add
mov
test
clc
daa
pop
ret
mov
scas
ret
add
icebp
aam
mov
mov
fdivr
mov
pop
rolb
aas
or
int
cmpsl
pop
scas
enter
inc
xchg
jae
xor
push
cld
rorl
pop
fstpt
or
mov
pusha
adcl
mov
movsb
call
je
ficoml
cs
ja
mov
or
adc
jo
les
test
or
mov
ljmp
or
arpl
mov
dec
iret
pop
pop
lods
ret
inc
testb
dec
std
mov
adc
inc
aas
mov
popa
cwtl
mov
sbbb
mov
add
xor
loope
je
xor
add
repnz
outsl
add
mov
xchg
pop
leave
dec
call
mov
sub
and
iret
xor
stos
ret
push
jne
adcl
and
lock
ret
mov
clc
mov
dec
xchg
outsb
adc
aam
sti
add
call
lock
jno
subb
sahf
bound
adc
ret
cmc
fadd
or
push
in
loope
repnz
mov
repz
hlt
add
mov
jge
xchg
cmp
push
pop
jmp
cmp
cmp
jg
pop
iret
mov
aas
js
sbb
cs
aaa
pusha
insl
mov
dec
lods
loopne
in
jne
and
push
xchg
push
out
inc
mov
incb
cmpb
or
pshufw
rcrl
lahf
xor
push
add
daa
les
daa
sub
dec
mulb
jge
push
loopne
stc
or
lock
mov
dec
add
pop
sbb
lahf
rcrl
sub
inc
scas
sbb
or
rcrl
push
xor
aam
mov
push
sub
or
cmpsl
cmp
flds
int3
mov
in
push
loop
in
icebp
popa
daa
lds
mov
mov
js
push
adc
xor
dec
fmull
xchg
clc
mov
sahf
cwtl
mov
jmp
cmp
inc
push
sbb
sbb
inc
xorl
and
xor
test
les
mov
mov
add
mov
xor
call
sub
sbb
sub
mov
cmp
cmp
mov
push
leave
adc
enter
lock
add
cmpsb
mov
mov
pop
scas
inc
jmp
push
pause
lcall
mov
std
stos
push
adcl
cmp
push
aaa
lahf
push
sarl
add
mov
jbe
aam
scas
loopne
cmp
pop
push
and
mov
nop
add
push
outsb
repz
invlpg
and
mov
xchg
pop
mov
loopne
or
lock
lods
jle
es
pop
xor
arpl
stc
test
mov
cmp
xchg
sahf
and
xor
sbb
lret
orl
or
push
jge
inc
in
sbb
xor
inc
test
jae
scas
inc
and
das
sbb
loop
or
sbb
adcb
xor
dec
das
jle
sub
mov
mov
sub
mov
mov
adcb
shrd
dec
push
jle
mulb
arpl
cltd
lock
jp
icebp
adc
add
movsl
push
rol
test
jbe
fwait
add
dec
out
in
pop
adc
mov
adc
jge
jl
jp
mov
and
inc
add
test
test
rcl
add
sbb
lods
mov
les
push
fidivs
shll
adc
inc
jmp
push
cld
dec
push
add
pushf
mov
data16
jmp
rcl
mov
addl
pcmpgtd
or
push
xlat
sbb
jo
insb
je
mov
fildll
sub
or
jno
jmp
push
push
and
in
sbb
imul
sbb
mov
icebp
ja
orl
aad
sbb
popa
scas
test
ret
push
and
adc
daa
repz
ret
stos
cmp
cltd
daa
outsl
add
js
cwtl
adcb
or
test
xor
mov
and
loope
fisubl
mov
das
outsl
pop
dec
loop
xor
inc
fidivl
add
push
shll
add
and
arpl
adc
inc
mov
mov
add
mov
mov
adc
imul
aas
adc
int3
adc
filds
push
mov
add
std
mov
outsl
mov
sbb
dec
cmp
aaa
pop
repnz
lods
aas
adc
sbb
dec
xor
std
popa
negl
in
xor
sbb
add
and
pop
xlat
lea
mov
enter
cmp
jnp
pop
xor
dec
cmp
mov
daa
scas
or
mov
loope
lahf
xor
cmp
imul
adc
inc
mov
jno
orl
pop
test
mov
inc
or
out
insl
inc
sub
aas
jge,pn
mov
jae
or
test
jae
lds
xor
pop
jmp
xor
pop
xchg
or
call
lods
les
leave
mov
fdivrs
mov
mov
mov
or
add
lret
pushf
pop
dec
je
and
scas
imul
add
mov
ds
add
shlb
sub
xchg
inc
test
loope
icebp
jns
cmpb
jle
lret
jl
scas
shl
setno
jns
or
add
iret
iret
out
addl
pop
xor
add
cmc
je
add
xor
dec
inc
stos
scas
adc
arpl
jmp
daa
nop
xor
aad
insl
movsb
mov
lcall
dec
jp
int3
lock
and
lock
xchg
lcall
pushf
test
mov
add
mov
cmc
inc
inc
dec
test
xchg
xchg
shrb
cld
dec
inc
cmp
mov
scas
or
mov
adc
mov
icebp
ljmp
daa
jp
push
mov
imul
cmpsl
inc
mov
mov
jmp
mov
imul
shll
dec
xchg
clc
loopne
mov
adcb
stc
lret
addb
xchg
subb
jae
or
xor
sbb
sarb
dec
xchg
popa
mov
loopne
mov
or
sbb
faddl
cli
xor
movsl
dec
and
jle
xlat
mov
out
iret
rclb
add
clc
xchg
dec
sar
outsl
addr16
movsl
test
cli
gs
and
sbb
bnd
mov
sub
fs
xchg
xor
lock
imul
sbb
xchg
cmp
les
popf
xchg
mov
cmp
test
xor
mov
xor
cmp
scas
xchg
inc
out
test
jp
xor
and
or
andb
pop
mov
ds
icebp
rolb
xor
adc
mov
pop
push
cld
lret
mov
scas
inc
test
fwait
or
sub
movsl
les
jno,pt
int
cmp
or
jns
or
addl
mov
mov
fnsave
push
sbb
fists
inc
xchg
sub
cld
insb
adc
pop
mov
mov
inc
mov
stos
sub
mov
outsb
dec
scas
sti
mov
lret
ror
cmc
dec
sar
cs
and
popa
cmpsl
dec
mov
push
mov
ja
shl
dec
aad
lcall
mov
pop
stos
fildl
mov
mov
andb
add
imul
adc
int
iret
dec
cmp
add
movsl
mov
mov
repnz
push
sub
inc
dec
imul
lret
push
mov
jg
call
fmuls
push
cmc
adc
inc
and
std
push
popa
iret
int3
and
out
in
fisubs
scas
sbb
aaa
ja
lds
aam
lcall
sbb
mov
inc
in
loopne
out
out
mov
stc
sbb
cltd
aam
or
movsl
sub
shll
insl
sub
test
fwait
test
lds
repnz
mov
inc
jne,pt
test
mov
sbb
stos
test
cs
jo
add
in
lock
pop
ljmp
fyl2xp1
add
inc
mov
sub
aam
outsb
shlb
mov
adc
adc
test
rorl
push
icebp
push
pop
mov
loope
fldl
stc
js
cmp
ja
lret
dec
mov
jbe
sbb
xchg
cld
mov
rolb
sbb
mov
aas
les
xor
and
aam
sbb
imul
pop
stos
mov
sbb
inc
sbb
loopne
in
mov
std
add
scas
sub
add
popa
and
mov
mov
ds
xor
mov
sbb
pop
adc
and
ja
lods
pop
mov
fwait
xchg
mov
push
arpl
dec
aaa
mov
xchg
imul
push
sub
adc
pop
sahf
push
and
mov
aaa
sbb
mov
mov
insb
in
loopne
cld
hlt
add
stos
ja
dec
rorl
mov
adc
cmpsl
test
inc
cmp
push
jg
repz
in
fs
fistpll
andl
fs
sbb
push
and
inc
and
insl
mov
stos
xchg
repnz
jnp
jp
jo
pop
subb
mov
int
mov
loop
sarb
push
pop
loope
stc
and
sbb
pop
ds
inc
sub
sub
xchg
sbb
repz
shlb
out
xchg
rolb
fldt
adc
into
outsb
push
ja
adc
ror
in
sub
ja
fs
stc
xchg
mov
call
dec
mov
push
mov
das
jno
push
out
mov
adc
jle
lret
adc
push
xchg
mov
sub
stos
mov
cmp
jno
inc
bound
mov
sub
aas
lahf
cmp
xor
notl
xor
and
flds
dec
insl
jbe
adc
jae
pop
out
jecxz
xchg
sub
mov
test
mov
xchg
or
je
ret
sbb
dec
std
es
push
mov
push
sbb
push
inc
fdivrs
data16
sbb
or
lahf
lahf
push
sbb
fistpll
pop
int3
inc
cmp
mov
popf
mov
lods
add
sbb
sbbb
pushf
dec
aad
add
cmp
mov
inc
sub
dec
mov
jecxz
adcl
stc
inc
addr16
and
pop
ljmp
dec
or
rol
mov
incb
sbb
std
xor
push
and
bound
xor
mov
jmp
incb
subl
out
mov
jmp
xchg
mov
push
inc
fwait
mov
push
aad
xchg
loope
mov
pop
loop
adc
pop
lret
mov
push
ret
sub
sahf
imul
nop
pop
cli
sub
and
inc
mov
cld
sbb
mov
popf
push
rolb
mov
rcrb
cli
clc
pop
adc
mov
lds
loopne
out
cltd
scas
mov
mov
shrb
pop
jecxz
call
pushw
sar
in
fnstsw
xor
fisubs
lds
push
pop
std
dec
pushf
js
gs
negl
lret
inc
pop
jmp
xor
outsb
cmpsl
and
add
inc
xor
push
mov
push
xchg
loope
out
xchg
sub
pop
popf
add
push
cmp
aam
outsl
dec
out
xchg
fld
aas
aas
push
add
mov
sbbb
mov
push
ja
repz
fsubp
ja
push
orb
mov
pop
outsl
fs
lods
ficoms
addb
fwait
mov
adcb
mov
cmp
gs
inc
push
jecxz
iret
rcrl
cmc
scas
mov
adc
or
je
inc
out
mov
dec
sub
mov
jl
loop
sub
inc
rcl
or
xor
dec
sub
in
xor
dec
xchg
mov
shll
sbb
or
lods
dec
test
inc
cld
mov
add
rcrb
add
cmp
jp
push
lcall
sti
adc
lock
movsb
dec
xchg
aam
ret
mov
sbbb
or
test
jmp
mov
fwait
adc
cmpsl
mov
inc
cmc
insl
sub
add
out
mov
or
mov
jmp
or
adc
notl
sbb
aad
xlat
les
inc
mov
mov
addr16
xchg
add
adc
adc
shr
sbb
inc
mov
cwtl
clc
cmpsl
adc
add
stos
xchg
fldenv
in
push
daa
imul
lea
call
jo
mov
cmc
test
daa
out
xor
push
adc
jns
cs
pop
fwait
hlt
add
sub
add
cmp
in
and
pop
or
xlat
out
xchg
add
lret
mov
jg
and
or
loope
test
pop
cmpsb
xor
cmp
xor
into
fisubrl
sbb
cmpsb
aas
jno
fucomp
dec
out
lds
insb
ss
ret
inc
popa
inc
inc
lea
movl
inc
repnz
out
xor
mov
pop
adc
push
adc
add
ds
jl
inc
jmp
mov
rcrl
and
sub
pushf
ret
pop
popf
idivl
gs
das
les
cltd
inc
mov
shlb
clc
mov
adc
and
jmp
dec
xchg
icebp
clc
ljmp
push
frstor
mov
insl
loope
sub
pop
fs
push
dec
cs
addl
nop
int3
sbb
push
sti
pop
hlt
test
ror
xchg
jge
sbb
clc
rclb
jg
mov
enter
cmp
fcoms
xor
push
icebp
das
adc
repz
ljmp
popf
mov
xor
inc
fdivrl
bound
fcoms
fiaddl
push
mov
cmp
xchg
cmpsl
cmpsb
pusha
gs
test
sbb
dec
pop
jp
inc
cld
sbb
les
ljmp
icebp
daa
push
adc
cld
pop
arpl
ds
and
decb
fsts
movsl
jo
and
or
js
jle
sahf
jbe
or
jecxz
lock
inc
in
rcll
test
dec
add
enter
ja
mov
nop
mov
or
mov
mov
rolb
movsl
jo
les
movsb
ljmp
inc
lods
inc
ljmp
icebp
and
cmp
lods
jmp
addr16
out
mov
or
adc
push
test
and
mov
clc
sbb
pop
leave
test
inc
inc
cmpsl
pop
sbb
inc
outsb
daa
ss
add
inc
or
dec
push
xor
aad
pop
pop
mov
popa
sub
pop
jae
jp
pop
pop
push
xchg
mov
aad
dec
aam
lea
in
xchg
lahf
mov
push
ja
loopne
es
xchg
pop
and
dec
or
mov
jo
lret
jnp
test
pop
test
shll
dec
in
pusha
out
dec
mov
dec
mov
push
cmp
test
jge
or
out
aam
daa
push
or
les
pop
push
jbe
sub
lods
add
and
fdivl
xchg
sub
dec
test
jge
adc
ror
mov
clc
imul
ror
js
je
jo
add
mov
push
adc
mov
fwait
cmp
aas
jecxz
adc
test
icebp
mov
sbb
pop
xchg
hlt
inc
xchg
push
mov
push
mov
loop
int3
xchg
jae
sub
subb
cmp
xor
cmp
pop
mov
push
movsl
das
sub
out
je
add
orb
xchg
mov
pop
jecxz
loope
ljmp
pushf
or
inc
adc
xchg
pop
lds
push
add
out
les
jmp
pop
sbb
sbb
mov
mov
insb
cmpl
test
aaa
or
sub
pusha
mov
fbstp
mov
cmpl
std
ret
pop
sbb
or
mov
cmp
mov
mov
in
sbb
adc
rcrl
shlb
adc
push
mov
and
jbe
orl
cld
test
les
push
roll
scas
mov
fs
push
std
push
ret
mov
pushf
leave
xor
out
push
adc
cld
sub
xchg
xchg
xchg
pop
lds
ja
aad
outsb
outsb
push
out
sbb
mov
roll
lods
jo
ljmp
inc
clc
loop
mov
scas
cmp
xchg
sahf
js
out
mov
pop
cmpsl
fcomi
sub
orb
orl
fimull
in
pop
out
xchg
mov
shlb
fldenv
popf
nop
sub
inc
decl
ljmp
cmc
sub
inc
andb
adc
add
push
or
aas
loopne
and
mov
push
jge
inc
pop
xor
lret
fdivrl
stc
movsb
lea
push
xor
jmp
out
and
cli
sub
fisubs
lock
in
add
sub
rorb
sbb
jp
inc
mov
andb
arpl
mov
outsl
loop
ss
mov
cmp
inc
and
mov
inc
leave
cmc
pop
push
mov
lods
and
call
shl
inc
mov
push
or
mov
arpl
cmp
lcall
icebp
stos
test
mov
pop
sbb
mov
jo
xchg
adc
aas
arpl
lret
adcb
je
jae
ret
roll
repnz
cmp
std
add
inc
mov
jmp
add
xchg
dec
dec
aas
rolb
mov
jno
cmp
in
pop
mov
pop
std
xchg
xor
sub
sub
or
xchg
mov
inc
frstor
out
or
fnstcw
push
js
mov
cs
mov
lea
in
ror
jmp
mov
cmp
mov
ret
aaa
lea
rcr
ret
enter
add
cmc
pop
jl
jno
jle
dec
add
push
mov
jo
mov
add
cmc
jb
xchg
dec
adc
cmpsb
imul
mov
imul
xor
jb
icebp
xor
stos
call
or
std
daa
mov
dec
inc
nop
gs
cmp
sarl
xchg
jnp
mov
xchg
push
repnz
loopne
in
incl
mov
daa
push
xorl
lods
outsb
mov
in
or
faddl
outsl
or
mov
inc
xchg
insl
sub
sub
stc
shll
cs
adc
lcall
loop
and
or
push
jmp
loopne
mov
sbb
xor
lock
jnp
push
negb
repnz
mov
je
push
test
push
dec
outsb
decl
or
or
es
dec
inc
inc
mov
adc
fsubr
test
fsub
add
scas
pop
sbb
rolb
jge
clc
sub
and
incl
mov
insl
jns
std
adc
jns
jne
mov
push
dec
sub
int3
pop
mov
cmc
mov
add
jae
sbb
test
mov
and
and
out
push
xor
sbb
or
dec
cmc
and
cmpsl
sub
xchg
push
cmp
mov
and
test
rolb
pop
jno
adc
sbb
xchg
sbb
aad
orl
mov
mov
jo
inc
lret
pop
xchg
adc
add
je
aaa
iret
inc
dec
aas
inc
arpl
dec
push
xchg
add
cmc
mov
dec
lret
adc
ja
push
push
js
mov
mov
pop
call
mov
repz
xchg
and
push
lahf
or
jns
xchg
mov
push
das
sbb
ds
mov
jle
icebp
dec
pop
inc
sbb
addr16
dec
add
es
scas
dec
int3
gs
add
add
add
xchg
xchg
mov
mov
shrb
adc
iret
xorb
pop
jbe
add
sub
stos
mov
ret
pop
xchg
mov
add
daa
movsb
jbe
popa
mov
cltd
nop
add
pop
mov
fsubrs
inc
loope
mov
test
aas
add
and
jno
mov
fdiv
mov
fs
cmp
push
pop
jecxz
xchg
pop
add
add
loopne
xlat
out
adc
out
mov
xor
data16
xor
jp
push
in
pop
adc
fistpll
or
add
ds
aad
lcall
add
mov
aas
pop
xor
cmp
repnz
adc
pop
test
jl
sub
xor
pop
pop
mov
aam
xchg
inc
lret
mov
std
inc
dec
push
outsb
cld
pop
mov
cmp
int
xor
xchg
outsl
add
clc
push
arpl
dec
inc
filds
adc
out
mov
pop
mov
jg
rclb
xlat
sbb
fnstenv
popf
or
das
pop
inc
aam
cwtl
jbe
lods
sbb
mov
std
ds
jns
fmul
jecxz
iret
add
jg
jl
mov
add
push
mov
xor
in
cmp
test
jae
gs
add
sub
adc
jg
mov
add
call
sbb
sbb
hlt
insb
jns
loopne
cmpsb
adc
mov
mov
fdivs
mov
mov
lock
int3
faddl
mov
adc
or
loope
cld
add
pop
cmp
bswap
jg
out
xor
pop
mov
nop
mov
fwait
jne
push
and
icebp
add
leave
mov
cmpsb
adc
push
out
push
add
mov
jmp
roll
xchg
jmp
and
push
fdivp
sub
xlat
cmp
pop
cmp
cli
or
sub
jne
sti
cmp
push
lock
sahf
xor
sbb
in
loopne
pushf
jb
pushf
int
pop
dec
icebp
int
stos
mov
pop
or
xor
bound
lods
pop
cld
addl
fstps
shrb
lods
mov
mov
push
jecxz
inc
mov
shlb
cmpsl
mov
fimull
shrl
imul
mov
push
rcl
inc
ret
movsl
sbb
repz
mov
in
addb
jle
xchg
mov
mov
jns
cmp
jge
test
xor
mov
test
or
js
cmpsb
sub
inc
mov
pop
in
pop
add
sbb
lock
sub
sub
push
push
push
ljmp
aaa
or
xchg
test
lahf
sub
adc
sbb
mov
rorl
pop
inc
add
dec
push
xchg
test
subb
orb
test
push
dec
test
xchg
sub
out
push
int
cmp
add
insl
outsb
adc
test
lods
add
sub
daa
pop
and
xchg
fmuls
stc
add
test
jo
add
inc
pushf
ja
jl
sbb
les
dec
mov
inc
mov
ds
scas
pop
jg
cmp
jp
ret
test
pop
fs
call
shll
scas
cmp
mov
cld
mov
mov
ja
mov
mov
ljmp
sbb
ret
mov
ds
add
test
mov
adc
adc
stos
inc
or
push
mov
test
xor
aaa
sti
inc
push
movsl
lods
hlt
inc
push
mov
mov
out
and
or
test
test
mov
cli
add
in
mov
lds
cmc
xlat
or
xchg
pop
enter
rorb
std
dec
psubb
push
rcrb
nop
push
xchg
sbb
dec
out
pop
imul
sub
stos
sbb
add
xorl
clc
aas
sbb
iret
and
cli
dec
adc
push
dec
shlb
jns
lods
push
aad
std
fsts
mov
jp
push
mov
adc
add
lcall
leave
popf
mov
roll
sbbl
push
cmpsb
xor
icebp
scas
lret
jp
repz
or
sbb
pop
adc
sti
cmpsb
jl
je
iret
mov
fsts
loop
xchg
ljmp
pop
or
mov
jecxz
pop
and
out
fists
add
dec
adc
and
shrl
inc
and
mov
sarl
cmp
movsl
dec
and
inc
pop
or
ret
aam
mov
stos
adc
cmp
test
push
mov
jo
cmp
bound
leave
loopne
lds
cli
arpl
mov
out
lods
clc
clc
pop
pop
adc
ret
iret
lods
mov
lock
jb
iret
lea
jo
xchg
mov
lods
mov
gs
push
out
cmpsl
popa
dec
out
sbb
mov
xchg
popa
or
dec
adc
hlt
ret
inc
mov
push
loopne
pusha
sub
mov
cld
das
xchg
test
cmovge
adc
jb
pop
cmp
or
hlt
or
sub
int3
xor
mov
or
enter
hlt
popf
sbb
std
dec
fs
jecxz
data16
mov
jns
arpl
mov
je
adc
xlat
adc
mov
sar
icebp
decl
icebp
adc
mov
pop
clc
cmp
rcrb
and
inc
lds
shrl
ss
sti
pop
lods
repz
lahf
outsb
push
cld
int3
mov
xchg
addl
push
cmc
pop
hlt
add
jb
bound
aad
or
and
call
sub
mov
int3
lds
add
sub
push
cld
loop
shll
scas
adc
in
pop
cld
lcall
or
jg
sub
movsl
lret
pop
and
adc
add
in
cmpsb
jg
popa
aam
out
push
adc
addb
test
jle
cltd
call
js
out
adc
adc
add
sahf
loopne
mov
rclb
add
scas
sahf
iret
inc
adc
push
add
add
jne
mov
xchg
mov
bound
add
aam
push
sub
push
inc
dec
mov
sti
add
inc
call
stos
cmp
push
into
mov
aad
rorl
adc
mov
pop
pop
sub
cmp
pop
or
inc
jne
ret
adcl
mov
dec
mov
adc
scas
lods
in
shrl
lods
dec
sbb
cmp
xchg
les
shll
lret
mov
sub
ffree
pop
inc
dec
je
clc
rclb
push
jge
mov
dec
jg
or
dec
das
pusha
fwait
loopne
incl
test
or
sbb
arpl
ds
xchg
add
dec
mov
mov
lods
or
out
cmpb
sub
in
rcll
pushaw
aaa
ror
and
add
mov
or
mov
push
xchg
mov
leave
or
jo
jg
inc
push
mov
add
imul
xchg
push
mov
mov
and
push
mov
lcall
jno
add
rcl
dec
mov
and
les
insb
cld
lcall
jb
ret
fisubs
xor
add
adc
daa
shr
mov
pushl
es
cmp
sar
subps
add
sbb
sbb
outsb
aam
xor
push
shl
mov
enter
push
push
into
iret
inc
push
jb
or
push
notb
testb
cli
or
clc
arpl
xchg
sub
scas
and
out
push
aam
lods
std
shl
dec
in
dec
jb
xchg
mov
rolb
fwait
and
jecxz
popf
mov
mov
hlt
mov
push
cltd
dec
mov
in
fs
xor
fnstcw
mov
lods
leave
mov
stos
nop
push
or
pop
in
jp
sbb
inc
rcrl
bnd
jo
push
aad
scas
ret
mov
xchg
sbb
loopne
pop
pop
lret
xchg
and
in
mov
cmc
jno
inc
js
xchg
inc
icebp
ja
cmp
es
mov
test
add
stos
or
or
clc
imul
xchg
repnz
add
clc
cmc
or
insb
hlt
jp
cmc
and
ja
mov
jecxz
pop
out
ret
aaa
mov
jge
subb
and
pop
jmp
fstps
mov
fwait
test
test
call
xchg
loope
stos
andl
inc
imul
xor
jae
push
loop
cmp
int3
cmpsb
scas
lea
mov
out
sbb
cwtl
push
leave
xchg
stos
ljmp
into
pop
jge
adc
nopl
xor
sbb
mov
inc
mov
dec
push
data16
jecxz
and
mov
in
add
push
daa
in
jle
movsl
sbbb
das
mov
lock
int3
xor
xchg
inc
lods
adc
or
ss
inc
jl
push
repz
push
mov
aas
mov
sbb
push
cmp
aas
sbb
push
sub
pop
cmp
std
jo
or
mov
cli
mov
and
loope
rcll
sub
scas
dec
xor
scas
stos
test
xchg
cmpsb
push
test
lds
cmp
or
sub
push
xchg
andb
in
lock
mov
int
popf
in
stos
inc
jge
jno
popf
hlt
daa
add
xor
xorl
out
rorb
dec
cli
andb
mov
inc
das
add
stc
sbb
pop
push
xchg
cmc
xor
repnz
je
pop
movl
addr16
jns
lahf
sub
add
sub
cmpl
cmp
and
inc
mov
or
lcall
les
xor
cmc
push
pop
jo
je
adc
das
jg
call
lock
pop
insl
push
mov
xor
and
add
sub
xor
mov
jmp
dec
fs
jp
inc
dec
mov
mov
test
jg
insb
cs
and
mov
in
pop
inc
pop
lock
loop
popa
fsubrl
repnz
mov
arpl
enter
icebp
mov
push
cmpl
test
outsl
es
push
inc
jo
dec
sbb
cmp
cmp
mov
sbb
aas
and
push
mov
xchg
inc
xor
dec
loope
outsb
pop
je
jae
ss
or
xchg
push
mov
inc
cmpb
fisttpl
jmp
cmpsl
mov
or
cmpsb
mov
jbe
sbb
cltd
sub
test
xchg
cmp
stc
orl
in
sub
cmovl
insl
addr16
push
mov
sub
xchg
lock
mov
or
jp
rorb
mov
aaa
cmp
xchg
mov
enter
xchg
jae
cmpsb
pop
mov
pushf
test
das
jle
test
out
int3
jo
cmp
clc
aas
shlb
das
insl
ljmp
ret
inc
and
jg
imul
int3
add
movsb
ljmp
jl
xchg
dec
jmp
sub
daa
jne
icebp
xrelease
sahf
sbb
or
push
sub
or
imul
out
lea
test
test
data16
push
adc
adc
xchg
xchg
dec
lods
lds
push
jo
pop
call
int
aam
mov
mov
aad
xchg
les
pop
and
je
push
inc
std
push
push
and
ret
sbb
sub
dec
fsts
cmp
cld
add
js
xchg
roll
sub
lahf
dec
cmp
aas
js
push
sarl
mov
clc
push
adc
pop
add
pop
lods
les
inc
aas
les
cmp
loope
adc
and
ja
add
mov
pop
add
add
mov
lods
and
fwait
out
jo
jo
adc
mov
incl
inc
jl,pn
and
lret
andl
xor
in
imul
imul
xchg
inc
and
imul
mov
int3
xchg
testb
arpl
sahf
es
rcll
mov
mov
into
rolb
sub
cld
je
cwtl
push
push
insb
lahf
and
xchg
in
adc
div
jne
jg
jne
inc
mov
fisttps
push
pop
insb
ficoml
adc
sub
ret
cmp
xchg
add
pop
addr16
mov
mov
imul
loopne
mov
and
sub
dec
inc
pop
sub
imul
add
pop
xchg
into
es
test
jg
dec
sub
dec
sbb
add
push
mov
add
xor
or
xorb
pop
cmpsl
cmc
sarb
push
sub
xor
add
mov
out
inc
dec
or
mov
cmp
fiadds
fistps
add
cs
mov
int3
lahf
arpl
fstps
xchg
out
faddp
inc
jecxz
or
xchg
inc
imul
inc
daa
call
out
inc
enter
inc
scas
ss
enter
fucomp
pop
repnz
cli
mov
jp
negb
push
adc
dec
mov
sahf
sbb
jnp
dec
ret
jae
dec
cmp
mov
andb
jno
out
sbb
adc
aas
add
or
inc
jmp
addb
or
cmp
int3
outsl
ret
inc
pop
sub
repnz
cwtl
je
icebp
ss
filds
xchg
xchg
cwtl
loope
in
sbb
sub
dec
cli
xor
cmpsl
or
das
cmp
pop
xor
and
les
jne
inc
mov
push
fucomp
sub
pop
test
lea
dec
clc
add
jb
mov
mov
and
mov
or
movsb
out
cmp
mov
lock
mov
jmp
mov
xsha1
cmpsb
push
loope
sbb
jno
mov
cmp
lds
rcll
mov
xor
add
mov
mov
pop
lea
cld
shlb
in
nop
ss
mov
icebp
and
mov
inc
je
ss
lods
mov
pop
pushf
add
cmp
cli
and
fnstcw
outsl
push
sub
jbe
and
test
into
into
jnp
push
add
cld
sub
inc
inc
sbb
mov
adc
in
iret
add
in
mov
mov
xchg
cmp
dec
ret
pop
dec
or
leave
mov
pop
loope
in
xchg
xlat
shrl
sbb
adc
lea
pushf
add
test
mov
test
or
inc
push
stos
movsb
shll
stc
push
xchg
mov
mov
xchg
arpl
hlt
fbld
aam
dec
sub
shlb
xor
jle
pop
icebp
aaa
xor
stos
fildll
cmp
sub
add
push
int
xor
pop
call
or
movsb
pusha
mov
xor
je
and
cld
and
inc
jl
test
fmull
movsb
mov
xchg
popf
push
popa
sbb
add
cvtps2pd
ficoms
cmp
sbb
movups
fsubs
jne
lods
ror
movsb
sbb
mov
out
test
and
push
movsb
push
jns
xchg
jl
in
jbe
repnz
or
sti
hlt
push
sysexit
push
std
push
lock
adc
add
jp
pop
scas
push
push
pop
push
and
mov
daa
mov
sti
or
adc
jg
xchg
dec
jp
or
jl
cmp
xor
cmp
aad
xchg
sbb
ja
add
xchg
pop
js
icebp
out
dec
jl
fsubrl
sbbl
adc
jp
insl
pop
mov
mov
adc
int3
and
iret
ds
test
mov
rorb
sbb
pop
adc
shlb
ret
add
inc
lods
lret
jecxz
mov
or
in
pop
mov
je
jmp
pushf
xor
outsl
add
inc
and
fldt
hlt
pusha
out
out
add
std
mov
fmull
jo
in
inc
or
das
sbb
add
inc
clc
lea
pop
adc
fistpll
out
mov
fadds
loop
popa
in
lcall
sbb
dec
jle
xor
incb
add
dec
pop
jp
daa
js
and
scas
test
dec
xlat
leave
xor
inc
mov
inc
jl
mov
jg
lods
test
nop
inc
repz
add
fiaddl
testb
nop
jecxz
dec
jmp
push
and
adc
jg
xor
lods
dec
adcb
pop
shll
lret
push
mov
pop
shl
cmp
mov
out
movb
aaa
push
lods
and
or
lods
add
dec
in
and
popf
pop
fisubl
cs
arpl
mov
dec
mov
xchg
sbb
add
fistpl
shlb
add
ret
add
xchg
dec
lcall
xor
sbb
lret
hlt
ret
sarl
stos
fisttpl
jns
jne
sar
mov
mov
xchg
mov
pushf
push
mov
ret
add
icebp
dec
shl
cltd
test
rol
mov
cld
dec
dec
mov
mov
xchg
sub
sub
inc
mov
dec
cli
or
or
cmp
shll
xchg
add
les
lods
lret
data16
fadds
sarb
adc
sub
movsl
adc
adc
jne
icebp
cltd
add
fidivs
rclb
dec
fisubrl
mov
aaa
mov
or
push
in
xor
test
rclb
into
cmp
scas
js
fwait
pop
into
jo
leave
jbe
leave
and
and
aaa
jge
pop
and
cwtl
add
cmp
inc
fs
insl
cld
stos
mov
loope
adc
or
cmpsb
mov
lea
push
adc
push
scas
in
xchg
xchg
push
adc
ds
adc
test
scas
jo
rolb
mov
pop
outsl
movsb
cli
inc
xchg
es
je
ss
mov
xlat
lds
in
mov
push
dec
mov
pop
mov
lock
inc
pusha
popa
rorl
mov
popa
push
jmp
add
push
cmc
std
sub
lods
test
jns
ljmp
addr16
sarb
fsubs
js
lock
mov
xchg
clc
mov
loopne
lcall
imul
iret
cli
addr16
ret
fists
push
outsb
sub
or
mov
mov
lret
mov
cmc
inc
push
es
cwtl
dec
push
cli
stos
rcl
sub
rorl
add
or
mov
xor
jle
jo
mov
pop
call
int
or
push
inc
sbb
fstpl
lcall
outsb
cmc
sub
jp
or
ds
pusha
adc
out
mov
mov
or
aaa
sbb
add
ds
xor
jnp
lods
aas
inc
ret
int
scas
mov
push
sub
sub
loop
adc
push
ret
pop
gs
mov
ss
dec
pop
sub
icebp
nop
stos
or
jg
lret
loope
rep
add
fldcw
fcomip
cltd
sbb
cmc
test
adc
pop
push
cwtl
fadds
jle
mov
jecxz
es
fnsave
lock
push
mov
fmulp
push
addr16
subl
sahf
aam
pop
pop
push
pop
fistps
in
das
pop
jecxz
jno
cmp
xchg
jge
cli
adc
sbb
daa
mov
jns
add
sub
cmpsl
sub
test
xor
dec
adc
dec
insl
cli
les
addr16
std
out
ds
push
imul
decb
cmpsl
or
inc
repz
popf
aaa
inc
mov
dec
sub
out
ds
fiadds
pop
mov
xchg
pop
pop
jb
cs
xor
xor
fs
test
jmp
mov
mov
jmp
into
add
test
or
test
push
or
adc
roll
jg
pop
add
push
subb
adc
sub
jg
dec
mov
loope
in
rolb
jne
push
insl
rorb
inc
mov
js
sub
inc
mov
dec
inc
mov
push
cmc
stos
andl
mov
fldcw
mov
clc
aaa
ds
out
cmpsb
daa
inc
sbb
dec
andb
pop
testb
sbb
arpl
pop
mov
jno,pt
stc
pop
fs
lods
insl
sub
sub
mov
fildl
add
arpl
icebp
sbb
adc
lahf
addb
and
inc
pop
sbb
jl
or
fs
xchg
xchg
inc
outsb
mov
shl
mov
cwtl
in
jnp
and
imul
sub
ret
dec
cmp
mov
rolb
aas
mov
js
sub
lea
lock
movsb
test
das
push
add
xchg
mov
fstpt
stc
aas
notb
std
movsl
push
mov
push
adc
push
pop
add
ss
jns
inc
clc
cmp
push
loop
pop
xchg
sub
cmpsl
mov
push
enter
sbb
daa
lret
stc
movsb
inc
inc
incb
add
sti
test
clc
and
xchg
xchg
dec
sub
push
sbb
daa
ja
iret
add
xchg
lock
adc
mov
shll
aas
lcall
mov
sub
shll
es
psubw
mov
push
sub
shlb
outsb
mov
push
test
fwait
adc
jb
mov
xchg
jp
cmpl
rolb
xor
clc
and
ret
test
adc
sbb
loop
push
stc
test
push
arpl
mov
mov
pushf
add
imul
movsl
sbb
fidivrl
fcmovu
adc
mov
gs
fcompl
shl
stos
fwait
mov
jnp
movsb
sahf
push
mov
repnz
cmp
cli
add
std
mov
pop
add
xor
pop
leave
push
loop
cwtl
jl
jbe
adc
sahf
push
mov
adc
or
sub
push
call
arpl
sti
sbbl
dec
cmp
xor
dec
stc
mov
xchg
xchg
sahf
push
cmc
fistps
mov
lods
or
jle
das
push
adc
popa
lcall
cmc
cmp
push
filds
adc
aaa
shll
test
je
test
ds
pop
xchg
js
rcl
ds
gs
data16
loope
sbb
sub
and
inc
add
xchg
rcll
adc
gs
push
pop
lock
mov
cld
leave
mov
leave
out
inc
jge
add
sbb
fists
xor
clc
mov
icebp
mov
rclb
jp
push
inc
jg
xchg
jne
clc
inc
scas
push
add
clc
sub
sbb
popa
rcrl
xor
mov
mov
add
inc
mov
pop
cs
int3
cmp
pop
icebp
lcall
scas
inc
lods
push
jl
gs
cli
lods
and
xchg
xor
fs
ret
add
jne
xlat
adc
insb
pop
push
mov
dec
ja
aas
push
cld
ja
icebp
mov
insl
and
xchg
pop
dec
mov
cmpsb
jne
inc
cwtl
rcll
pop
pop
lret
cwtl
fcompl
jbe
mov
in
dec
jecxz
lcall
mov
mov
dec
les
jo
pop
mov
std
mov
in
clc
inc
pusha
cmc
cld
jae
mov
jg
dec
push
clc
loopne
bound
add
inc
mov
dec
jae
or
hlt
inc
pusha
int
mov
int3
sub
pop
sarl
adc
fists
or
cmp
ds
push
rcl
out
adcl
mov
cmp
out
sbb
adc
inc
ret
data16
rorl
cld
add
cmpb
mov
add
popa
push
sarl
dec
push
ret
add
pop
fs
or
gs
pop
jbe
addr16
idiv
cmpsl
xchg
mov
adc
cs
adc
and
shlb
pop
adc
gs
clc
cbtw
int
mov
mov
inc
aaa
mov
test
leave
sub
inc
cmp
add
and
sbb
push
pop
and
aaa
adc
mov
rolb
and
cld
insb
cmpsl
filds
push
cmp
pop
dec
lahf
je
pusha
dec
test
inc
aas
in
and
loopne
inc
inc
pushf
pop
fstpt
push
jg
out
and
pop
cltd
icebp
outsb
test
pop
out
add
and
test
clc
push
repz
push
pop
call
lds
jg
rorl
add
adc
adc
scas
add
movsb
shlb
push
subb
push
cmp
adc
add
add
aaa
or
and
mov
sti
jle
mov
das
test
fprem1
clc
jge
sub
ror
xor
call
or
add
pop
scas
loope
sbb
int3
mov
arpl
inc
icebp
test
xchg
mov
ret
mov
shl
sub
and
add
out
rcr
xor
mov
and
and
jmp
push
stc
push
lods
pop
push
repz
mov
xor
and
pop
mov
cmp
nop
and
ss
sbb
xchg
fistl
dec
pop
xchg
cs
popa
push
add
out
sub
aaa
xor
adc
pushf
pop
or
and
push
xchg
mov
shlb
lds
notl
mov
push
movsb
xchg
cltd
imul
inc
repz
push
shlb
mov
add
add
scas
pop
lds
and
fwait
dec
cld
sbb
xchg
and
inc
push
pop
lods
dec
or
fbld
pop
lods
push
xor
sbb
jmp
stos
fucompp
cmp
push
inc
cmp
dec
rorb
mov
add
imul
insl
add
pop
shlb
bound
scas
cltd
lock
icebp
mov
dec
jbe
mov
mov
sbb
jno
or
mov
adc
repz
gs
or
loop
or
xchg
or
inc
fnsave
hlt
data16
shrb
jne
pop
add
jmp
test
adc
xchg
xor
sub
int3
insl
mov
push
gs
test
dec
lock
xchg
scas
addr16
add
sub
or
jmp
sbb
mov
jecxz
push
sbb
pop
adc
cltd
int3
inc
shlb
cmc
loope
xor
dec
or
xchg
pop
sub
sbb
sub
adc
lds
fildl
mov
rolb
ja
inc
cmpsl
mov
fidivrs
mov
and
lock
mov
mov
add
ds
pusha
mov
test
rcrb
and
adc
sbbb
icebp
inc
scas
xchg
je
mov
in
dec
inc
rolb
in
inc
nop
out
cmp
sub
inc
ss
push
cli
xchg
sub
sbbl
bound
lret
jmp
les
mov
inc
test
sarl
or
or
xlat
icebp
push
ja
clc
insb
jecxz
pop
sub
adc
or
fdivp
nopl
adc
inc
cmp
adc
sub
lock
arpl
adc
inc
xchg
fmul
pop
test
aas
inc
popf
scas
sbb
mov
or
aas
pop
lea
push
cmp
mov
sbb
add
stc
les
shrb
inc
and
inc
inc
imul
int
notl
or
inc
int
xchg
or
adc
xchg
mov
dec
pop
arpl
cmpsb
sbb
sub
cmp
das
insl
lcall
arpl
push
pop
loopne
fistpll
lock
mov
add
ljmp
xor
pop
es
fisubl
outsb
orb
jp
lods
out
mov
xor
add
xchg
inc
imul
lock
scas
pop
mov
ss
das
pop
push
mov
or
mov
or
sbb
rorl
push
push
repnz
mov
xchg
dec
cmp
mov
adc
js
push
push
inc
insl
jo
pop
adc
rol
mov
sbb
xchg
js
pop
inc
cli
unpcklps
and
cmp
data16
adc
push
arpl
mov
data16
dec
adc
lret
sahf
inc
xor
leave
and
jo
dec
sub
mov
rolb
pop
out
mov
pop
push
pop
xor
sub
out
ja
fistpll
mov
jg
jmp
lock
xchg
cmp
leave
cwtl
dec
mov
jmp
or
movsl
dec
mov
sbb
mov
xchg
stc
pop
jns
add
xchg
cltd
add
jb
jmp
or
sbb
add
add
jns
push
sar
nop
nop
add
xor
iret
inc
mov
cmc
mov
test
out
jp
mov
add
leave
adc
add
xor
push
mov
lret
shr
stc
or
sub
add
cmpsb
jg
dec
popa
in
cmp
loope
movsb
xor
and
sbb
cli
adc
mov
jl
rolb
xor
call
lcall
lret
and
or
movsl
add
repz
imul
ret
jae
repz
push
xchg
out
in
xchg
push
nop
mov
addb
pop
xor
cmpsb
xchg
adc
sub
out
xchg
fistpll
jmp
or
cld
cmpsl
add
cmp
and
pop
dec
adc
xor
push
in
cli
xor
sbb
and
pop
xlat
call
pop
sbb
cmc
enter
fisttps
dec
mov
aad
push
mov
rcll
clc
les
and
sbb
jecxz
or
dec
lock
ljmp
shrb
repz
or
push
jecxz
push
mov
pop
and
xchg
clc
adc
xor
push
test
into
jo
sbb
push
xchg
add
adc
int
add
and
inc
mov
jge
add
mov
imul
mov
mov
js
jp
in
push
mov
add
popf
js
pop
jmp
in
mov
nop
inc
std
mov
pop
test
lcall
cld
movsb
in
xchg
nop
aas
mov
mov
loopne
iret
and
pop
sbb
ss
iret
lods
jo
mov
or
xchg
add
sub
fidivrs
roll
ss
xchg
repnz
mov
push
inc
out
es
pop
ret
sbb
stc
sbb
packsswb
in
pop
nop
mov
orb
insl
iret
or
push
ficoms
inc
mov
sub
lahf
cmp
mov
nopl
xchg
subl
insb
test
or
mov
sbb
xchg
popa
fwait
ja
or
and
cmc
jecxz
sbb
push
data16
lock
sbb
pop
mov
in
aas
rolb
lock
repz
sub
xor
mov
jne
xchg
fadds
clc
cmp
movsb
out
nop
into
mov
lods
imul
sbbb
mov
pushf
shr
push
inc
xor
xchg
sub
out
pop
xor
sub
fstpt
cmc
dec
mov
adcb
in
pop
lock
mov
les
add
inc
pop
add
lahf
fcomps
pushf
dec
shll
in
rcl
jae
mov
repz
imul
pop
imul
inc
jo
iret
cli
xor
and
adc
popf
pop
jl
dec
dec
pop
fmuls
inc
pop
push
xor
lea
sub
jp
adc
xor
mov
pop
mov
dec
jecxz
cmc
or
stos
inc
cmp
xchg
int
scas
mov
out
mov
push
cmpsl
mov
test
orl
jo
or
mov
pop
insb
mov
sbb
aaa
js
scas
dec
adc
ss
dec
icebp
jb
inc
rcrb
jl
jecxz
dec
popa
int3
xlat
inc
cvtps2pd
pop
xor
in
push
in
es
mov
dec
into
gs
clc
inc
dec
lea
mov
int
jg
lcall
pop
push
dec
pop
cltd
lods
mov
xchg
or
mov
jae
shll
jecxz
jle
push
and
mov
mov
push
xor
andl
hlt
in
add
xbegin
jle
mov
pop
cmp
adc
mov
or
xchg
pop
adc
icebp
sti
jno
shlb
test
push
outsb
std
cltd
jno
inc
aas
push
jne
xchg
bound
push
mov
jmp
loope
mov
pushf
xor
mov
jo
dec
mov
sub
and
jge
and
test
int
imulb
sub
cmpsl
cld
add
lret
cmp
mov
add
dec
mov
cmp
or
jle
mov
movl
cmpsl
jmp
or
mov
add
ret
dec
leave
iret
or
enter
test
mov
loop
loope
dec
adc
adc
bound
or
push
add
cld
push
rcrb
inc
push
dec
xchg
fiadds
rorb
adc
daa
movsb
xchg
cmc
out
push
jg
inc
fwait
dec
or
adc
stos
mov
adc
or
sti
adc
imul
fdivrp
jbe
subb
mov
push
andb
xorb
dec
add
nop
sbb
and
out
jne
push
int
push
sarb
mov
xor
popa
adc
push
pop
inc
fmul
mov
mov
push
in
xchg
xchg
icebp
test
out
lods
xor
sahf
ret
add
outsl
scas
mov
ret
add
fcmovne
xchg
sbb
out
sub
arpl
sahf
adc
adcb
xchg
in
xor
enter
mov
cmc
pop
mov
xor
pop
test
or
mov
incl
dec
stos
add
rolb
lcall
xor
es
pop
incb
jp
daa
sub
out
sub
aam
pop
xor
repz
xor
out
add
adc
mov
add
pushl
shlb
and
xchg
scas
pop
add
xchg
sbb
pop
enter
and
cmc
push
xor
pop
ljmp
push
add
mov
cltd
cmp
xor
jo
ret
enter
in
movsb
sbb
mov
jge
or
in
pop
scas
dec
stos
lock
filds
call
pusha
adc
nop
shlb
jp
shrb
cmpsl
xchg
jg
bound
cmp
dec
shrl
icebp
popa
outsb
dec
xlat
ss
stos
test
fsts
or
mov
rcrb
hlt
pop
inc
mov
mov
lds
sbb
jb
sbb
mov
sarl
lahf
add
push
jnp
add
pop
into
iret
mov
iret
mov
mov
push
out
std
mov
pushf
in
sub
sub
push
rcrl
imul
cli
inc
int
or
stc
mov
bound
xchg
sbb
mov
mov
popa
inc
mov
pop
cmpsl
or
iret
and
inc
inc
stos
stos
hlt
pop
sub
sarb
mov
dec
jp
pop
mov
mov
popf
cmp
cmpxchg
inc
fs
jne
sub
mov
and
icebp
push
test
dec
mov
cld
or
cmp
mov
jle
add
xorb
fldcw
sub
jecxz
clc
xor
sbbl
ret
jns
push
repnz
mov
imul
in
lcall
sub
orb
out
and
loope
cmp
xchg
outsb
inc
push
inc
test
xchg
loop
stos
xor
mov
jge
aad
sub
rclb
ljmp
into
cltd
pop
loop
call
cmpsb
mov
cmc
xchg
inc
sbb
adc
sarl
fstpl
pop
dec
into
lret
inc
adc
dec
loop
es
ljmp
mov
cmpsb
roll
push
push
lahf
sbb
and
pop
push
add
pop
pop
sub
imul
orb
loop
add
adc
adc
shrb
jns
mov
adc
out
adc
push
sbb
mov
adc
ret
dec
jle
xor
leave
mov
pop
mov
icebp
xor
arpl
jno
and
push
pop
sarl
push
inc
or
stos
sbb
cmp
lea
mov
sbb
cmpl
lods
rorl
push
je,pn
cmp
pop
lahf
aas
ljmp
pop
push
mov
mov
xchg
lcall
mov
mov
mov
lret
sarb
add
ret
xchg
aas
dec
test
enter
xor
repnz
into
mov
cmc
add
ret
clc
and
xor
addl
mov
cmpb
sbbl
cmp
fidivrl
and
adc
xchg
aam
ret
aaa
mov
pusha
insl
jge
sub
lcall
xor
addr16
jp
sbb
push
rorb
cmp
es
xorl
dec
add
rolb
int
cmpb
xchg
lret
andb
sbb
lret
push
loop
mov
inc
xor
leave
pop
cltd
adc
adc
push
push
adc
sbb
or
mov
arpl
ljmp
jl
xchg
and
sbb
clc
mov
cmovbe
shrl
fwait
mov
mov
mov
ret
pop
sub
les
push
sbb
inc
das
icebp
movsl
sbb
push
leave
jnp
push
fwait
clc
out
or
pop
mov
mov
mov
sub
rclb
or
ds
std
dec
jbe
mov
cmpsb
mov
lods
in
push
add
xchg
bound
lcall
cld
mov
je
jnp
inc
adc
push
repnz
jbe
inc
and
and
dec
push
add
addr16
add
xchg
sbb
mov
jne
add
filds
sbb
sarl
mov
mov
mov
push
adc
mov
push
adc
or
gs
out
fildl
sahf
fptan
or
stos
lcall
and
add
pop
cwtl
pop
or
sbb
icebp
add
loopne
aad
pop
adc
jp
pop
adc
inc
sub
pop
mov
add
or
jmp
dec
pop
jecxz
sbb
jmp
sub
or
stos
push
or
xchg
mov
pop
xor
insl
test
insl
jp
imul
xchg
push
lods
pop
aas
outsb
add
test
adc
cmp
lock
out
jne
push
movsl
fistpll
sarb
pusha
jno
xchg
and
addl
insl
xchg
in
shrb
jl
dec
cmc
test
and
into
pop
in
lret
mov
add
cld
pop
adc
pop
cltd
rclb
loop
icebp
cwtl
adc
repnz
lcall
aas
test
pop
add
xor
cmpsl
cs
cmp
push
fucomip
mov
in
fldcw
add
mov
rcrl
mov
stc
jl
cwtl
movsb
outsl
in
mov
fwait
inc
sbb
stos
imul
xchg
mov
lock
nop
jle
inc
inc
std
and
test
mov
ljmp
inc
lods
mov
clc
pop
mov
push
jmp
cmp
jno
mov
mov
inc
inc
mov
out
xchg
subb
je
push
lcall
inc
sbb
or
pop
or
push
mov
or
adc
push
xchg
fdivrs
es
pop
repz
jmp
fsin
shlb
call
ret
add
jo
push
push
xchg
mov
cmpsb
fiadds
push
imul
out
das
outsb
add
mov
xchg
xchg
jle
mov
stos
out
rcrb
js
jnp
out
mov
lret
loope
or
in
adc
pop
iret
inc
jle
jmp
mov
sub
dec
jecxz
push
nop
add
sbb
mov
cmpsb
sub
sub
loop
subb
mov
xor
adc
loopne
inc
sub
aad
add
out
mov
loopne
adc
or
loope
push
xor
sbbl
rolb
and
cmp
xor
xchg
push
xchg
movsw
jge
sbb
test
in
push
mov
rolb
and
xor
es
fsubrp
xchg
add
push
cld
int
mov
adc
cmp
adc
and
mov
insb
das
xchg
mov
mov
in
cli
inc
sub
cld
xchg
shrl
sbbb
xchg
cli
sub
dec
nop
ljmp
cmp
pop
popf
fcmovnb
stos
inc
and
pop
mov
ret
stc
sbb
sbb
cmp
lret
xor
mov
jo
fucompp
sub
insl
gs
vpsllw
mov
xor
cmp
xchg
add
iret
andl
je
push
les
adc
cli
inc
add
mov
stc
add
mov
xorb
lea
inc
adc
ljmp
das
js
sbb
jbe
data16
jge
adc
inc
iret
mov
je
cs
test
dec
andl
pop
mov
mov
mov
xchg
negb
fwait
lock
hlt
test
sbb
mov
mov
aam
mov
iret
test
andl
mov
sti
nop
aam
pop
imul
cmp
adc
shlb
sti
xchg
sub
and
addr16
push
push
mov
ljmp
sbb
lret
and
xchg
incl
mov
add
pop
icebp
mov
push
inc
fsts
inc
mov
mov
push
dec
and
jne
in
cmpsb
pop
fsubrs
xchg
stos
icebp
xchg
stos
stos
test
lods
loope
and
inc
es
mov
pop
cld
loopne
or
in
lret
pop
xor
scas
imul
add
repz
or
ret
sti
cmpsl
lret
add
cmpsb
mov
lods
and
lock
xchg
das
pushf
cwtl
out
and
adc
shlb
jg
xor
mov
xchg
insb
rol
lcall
mov
sub
add
fwait
movsb
es
pop
mov
hlt
push
popa
rorl
jns
add
cli
call
sub
das
mov
jl
mov
cld
stos
imul
daa
and
pushl
mov
xchg
gs
movsb
push
loope
sbb
jle,pn
xlat
test
je
mov
es
adc
lahf
sub
mov
das
add
adc
pop
inc
push
test
cmp
mov
xor
xor
push
pop
and
repnz
mov
push
push
jmp
call
or
cli
xchg
sbb
test
pushf
mov
cld
dec
xchg
adc
pop
add
or
cmp
out
inc
xorb
jnp
xlat
cmp
cmp
cltd
fdivl
or
roll
mov
mov
testb
pusha
call
cli
shll
push
test
cs
and
pusha
jecxz
aam
fstpl
jns
jnp
test
int
sbb
imul
push
and
inc
push
fnstenv
and
adc
push
dec
inc
adc
lods
cmp
lahf
push
imul
xor
dec
in
mov
mov
in
in
aad
aas
adc
mov
repz
push
fdivrs
push
dec
mov
mov
xchg
dec
xchg
cmp
in
adc
xor
loope
jle
cvttps2pi
test
adc
cmp
mov
pop
mov
imul
mov
push
mov
pop
lret
mov
stc
mov
test
mov
in
mov
lods
mov
fwait
adc
mov
add
pop
inc
inc
pop
mov
inc
fistpl
xor
ljmp
push
mov
xor
mov
inc
jnp
mov
and
sbb
popa
rorl
loopne
sub
icebp
aaa
sbbl
data16
inc
lock
loope
or
mov
jge
es
sub
inc
push
daa
cld
and
lds
aas
ljmp
inc
add
insb
inc
out
sub
scas
xorb
out
jmp
insl
test
pop
rol
jns
stc
std
jbe
cmc
pop
pop
test
jb
xchg
ret
lcall
inc
sti
or
adc
mov
pop
push
mov
pop
gs
std
scas
add
adc
and
and
hlt
jg
adc
cwtl
inc
lods
shll
xchg
rcll
pop
out
cmp
shrb
ret
pop
sub
imul
jmp
jmp
stc
xchg
inc
cli
cli
adc
icebp
mov
icebp
sti
dec
jns
or
mov
das
ret
gs
stc
mov
icebp
leave
inc
mov
push
sbbb
adc
or
push
xlat
sbb
sub
outsl
inc
in
and
loopne
dec
shll
stos
lock
or
mov
outsl
mov
rcrb
jne
jb
or
pusha
lock
addl
in
in
jns
loop
faddp
mov
ret
loopne
inc
xor
fdivl
pop
xor
xchg
adc
lods
mov
ja
mov
fisubrl
incb
pop
rorl
xchg
add
lret
mov
scas
inc
jmp
lods
adc
js
pop
cld
ficoml
sbb
inc
aad
call
add
xor
inc
clc
mov
sbb
sub
stos
out
jo
push
mov
sub
cli
and
pop
add
je
addr16
shlb
repz
jg
dec
bound
jmp
icebp
les
popf
addl
imul
push
add
cli
aaa
and
loopne
icebp
adc
xchg
out
jbe
andl
push
aad
jecxz
adc
push
test
adc
jne
xchg
ljmp
rorl
or
dec
mov
pop
dec
add
dec
jb
sub
mov
push
jmp
out
pop
jae
add
dec
leave
sub
push
add
adc
notb
and
das
inc
mov
jo
xlat
xchg
xor
and
xlat
lods
xchg
movsl
pop
cmp
and
xchg
add
mov
or
or
dec
ss
cmp
test
insl
scas
jg
fnstenv
fistps
fcomi
xor
test
sbb
sub
mov
lcall
push
mov
out
and
adc
or
mov
add
jb
pop
inc
icebp
adc
push
sub
mov
dec
inc
sub
mov
cld
imul
mov
inc
inc
jge
dec
sbb
cmpsb
sub
cmp
mov
xchg
clc
push
insl
js
adc
or
cwtl
rorb
sbb
pop
fcmovnb
push
jg
push
fildll
xor
push
rcr
xlat
dec
add
shrb
test
mov
push
fsubrl
shlb
cmp
loope
out
or
push
xchg
or
jl
add
mov
and
pop
repz
and
out
push
cmpsl
clc
sbb
cli
jg
stc
nop
out
xchg
jnp
mov
inc
push
xchg
loope
mov
or
and
nop
add
inc
andb
jmp
gs
or
popa
or
dec
add
movsl
call
idiv
sti
jne
rcrl
push
inc
push
les
sub
js
xchg
sbb
mov
stc
add
cwtl
add
push
stos
mul
or
stos
dec
mov
lcall
insb
lcall
add
test
lahf
data16
mov
rol
test
in
sbb
js
xchg
gs
xor
inc
cmpsb
dec
test
movsb
push
mov
pop
inc
pop
pop
cmpb
test
xchg
shlb
enter
cwtl
jo
sarl
rcll
iret
lahf
hlt
sbb
mov
into
lock
movsl
add
fs
pop
jl
sbb
ss
jno
sub
nopl
xchg
jg
sub
pop
and
xor
loop
pop
xchg
mov
test
or
stos
xchg
cmc
sub
mov
jecxz
xchg
dec
xlat
sti
add
pop
mov
scas
add
inc
mov
adc
pop
sub
cld
or
xchg
xchg
jns
add
mov
push
jb
pop
xchg
icebp
push
jno
pop
dec
add
cld
mov
rclb
mov
inc
in
cmpsb
ret
push
sub
dec
push
cli
dec
mov
out
dec
add
pop
fstpt
pop
xchg
push
push
xchg
jecxz
pcmpgtd
xchg
popa
xor
fs
sub
push
aaa
cmp
add
and
pop
dec
pusha
inc
fisubrl
push
inc
sbb
js
aas
mov
scas
adc
imul
sbb
cli
jl
mov
jg
rclb
movsl
hlt
xor
es
daa
mov
mov
push
stos
adc
mov
icebp
push
mov
jge
mov
mov
stos
push
mov
int3
inc
xchg
int3
in
mov
sbb
push
insl
push
cld
jo
jne
inc
add
mov
ret
sbb
lock
dec
stos
and
xchg
call
push
xor
xor
imul
ret
lret
lret
xchg
or
sti
lock
lahf
loopne
push
cld
or
stos
stc
int3
ljmp
cmp
rorb
popf
mov
jns
pop
push
jno
xchg
pop
pop
mov
enter
mov
push
mov
adc
mov
inc
xchg
movsb
lds
xlat
and
mov
jnp
xchg
dec
mov
cmp
ja
xor
cld
dec
ret
sub
leave
sbb
cli
or
jge
push
dec
push
push
push
scas
push
stos
add
jns
stc
cmpsl
lcall
and
xor
cmp
sub
mov
ds
xor
in
into
inc
loop
xchg
sbb
cmp
ljmp
xchg
inc
imull
mov
mov
dec
push
inc
sub
add
add
sti
adcb
sbb
add
cmp
cwtl
shrb
stos
iret
hlt
shlb
push
sub
aad
pop
cmp
ds
rolb
lcall
fnstenv
add
std
mov
insb
ljmp
lds
inc
dec
and
jecxz
test
push
mov
dec
push
sub
add
sarl
xchg
test
repz
add
mov
push
sub
inc
jl
sub
add
and
xchg
sarb
push
dec
imul
jno
insb
arpl
in
adc
sub
xchg
add
insl
pop
jns
les
add
negl
or
sbb
sub
jle
stos
add
lcall
pop
popf
lock
add
sub
and
rorb
mov
aaa
call
int
or
fimuls
adc
push
pusha
jmp
push
sub
lods
cli
jg
sbb
pop
nop
incl
notb
out
inc
hlt
mov
mov
stos
jg
loopne
adc
or
mov
dec
insl
pushf
jmp
mov
mov
scas
popa
scas
stos
pop
push
dec
mov
pop
push
cmpsl
cmp
pop
cmpsl
leave
lods
dec
mov
arpl
inc
lds
and
sbb
in
jne
xor
jle
mov
andb
cmp
loopne
fildll
dec
lea
je
dec
mov
push
pop
add
aaa
mov
and
lods
mov
ret
mov
mov
mov
mov
cwtl
mov
popf
mov
loop
cmp
pop
cmp
roll
leave
cmp
jg
pop
lret
rolb
aaa
push
push
test
xorb
outsl
jg
lahf
or
dec
in
pop
roll
cmp
adc
mov
jp
shr
mov
sbb
jae
popa
push
xchg
or
push
mov
fildl
negb
pop
mov
addb
add
push
sbb
pop
xchg
push
sub
pop
mov
add
cmp
xorl
adc
jne
pop
mov
jo
aam
call
mov
push
notl
bound
cmp
pop
nop
jne
push
mov
mov
outsl
mov
mov
xchg
icebp
xlat
mov
adc
sbb
push
lcall
push
mov
or
out
shrb
adc
jp
jl
dec
pushf
add
into
lods
mov
flds
scas
pop
in
xchg
out
mov
push
push
mov
xchg
jp
cmp
addb
nop
gs
js
ja
pop
pop
cmpsl
call
shr
in
addr16
lea
loope
icebp
lret
andb
adc
shrb
lods
setl
mov
xchg
rorb
cmpsb
mov
cwtl
push
cld
enter
mov
fldenv
out
and
fwait
mov
shll
mov
aam
bound
lcall
dec
cld
push
testl
mov
lea
or
mov
cmp
jno
hlt
fstp
test
scas
inc
addl
addl
rorl
xlat
repz
fisttps
scas
inc
out
ljmp
pop
add
mov
sub
jp
loope
in
rcrb
das
aam
push
sahf
sub
xchg
rcrb
test
inc
js
imul
or
imul
shlb
xchg
pop
leave
mov
fcmove
notl
lods
xchg
pop
jae
rolb
mov
movq
gs
sti
mov
sbb
icebp
insl
cmp
dec
cld
stos
je
or
cmpsl
loopne
cmp
jmp
jmp
jle
or
test
das
adc
mov
mov
jg
jle
andl
xor
decb
mov
jp
or
outsl
mov
addr16
jne
mov
or
fisttpl
pop
nop
filds
add
or
daa
mov
orl
ds
insb
ljmp
push
sub
fimull
push
js
inc
enter
lahf
push
lods
pop
jnp
cmp
push
and
cli
dec
es
dec
or
jmp
inc
or
shrb
sbb
bound
cwtl
mov
call
leave
adc
pop
lret
sbb
fs
mov
dec
mov
jno
add
fwait
mov
popa
adc
inc
mov
icebp
pushf
sub
and
pop
sbb
push
adc
sbb
js
movsb
push
andb
lcall
push
mov
out
xor
sbb
push
adc
mov
shl
or
and
push
pop
xor
out
cmp
pop
push
push
scas
xchg
xchg
push
mov
sbb
push
sub
adc
and
mov
jmp
lock
push
cmp
insb
lock
mov
pop
xchg
add
push
out
push
sbb
fisubl
sub
cld
in
jb
push
push
jmp
movsb
lret
loope
dec
aam
mov
dec
das
adc
test
and
or
mov
or
dec
out
add
loope
aaa
cli
xchg
cmp
inc
je
mov
popf
cli
shl
pop
stos
jne,pn
xchg
fbstp
cmp
mov
add
call
in
pop
pop
inc
int
push
mov
rcl
and
cmp
jno
inc
sbb
mov
dec
cmp
mov
xlat
movsl
movsl
stos
add
pop
mov
jno
std
adc
rcll
xorb
or
in
test
int
rcrl
orl
pop
pop
add
adc
addr16
jg
rcll
push
mov
xchg
pop
popa
push
push
jl
xor
lock
xor
aas
int
mov
das
subb
repz
clc
and
cwtl
cmp
pop
lret
loope
jecxz
mov
mov
xor
cmp
adc
adc
jb
lods
iret
mov
cmc
jg
add
in
adc
in
cwtl
sbb
loope
jbe
punpcklbw
cmpsb
shrb
add
dec
mov
mov
ret
in
or
adc
jge
xor
inc
ljmp
sub
add
or
stos
xchg
mov
adc
or
push
add
es
xor
cli
and
fimuls
jns
mov
jecxz
mov
sub
fdivl
xchg
or
mov
inc
pop
in
lahf
cli
dec
cmpsb
and
sti
daa
pop
inc
fbld
cld
add
not
stos
dec
jns
mov
imul
sahf
jp
jne
iret
hlt
dec
jne
adc
xchg
adc
std
test
pop
shlb
cmpsl
jcxz
adc
scas
in
sbb
jecxz
or
jno
adc
shlb
inc
orb
std
fs
icebp
adcl
pushf
inc
movsb
xchg
mov
jg
jg
pop
push
or
mov
inc
add
imul
or
arpl
adc
cli
sbb
mov
cmpb
stos
les
jo
jnp
dec
jb
sbb
mov
adc
mov
std
cld
lods
orl
xor
dec
test
sbb
mov
xor
pop
jl
xchg
int3
pop
daa
push
mov
mov
loopne
daa
adcl
push
incl
push
lcall
push
dec
push
xor
mov
arpl
enter
bound
push
sub
add
das
mov
or
jnp
shrl
add
jbe
xchg
mov
push
jmp
fsubs
dec
imul
mov
push
push
arpl
sub
pminsw
inc
cmp
sbb
roll
insb
in
in
leave
fucomp
shlb
aaa
jmp
jg
rorb
inc
sbb
or
rol
adc
lret
dec
mov
sbb
add
and
popa
dec
push
adc
xor
loope
sbb
inc
icebp
dec
adc
mov
cmpsl
jg
out
rorb
cmp
ljmp
movsl
or
sbb
stos
dec
and
fdivs
add
out
insl
in
dec
arpl
in
push
jno
push
test
fwait
add
push
cld
repnz
shll
push
pop
xlat
push
mov
pusha
lock
pop
fwait
loope
stc
insl
ss
push
sub
jecxz
inc
inc
add
fwait
arpl
jg
leave
adcl
pop
nop
lret
hlt
addb
cmc
aaa
scas
clc
sarl
inc
lods
inc
in
les
pop
or
inc
int
outsb
mov
sbb
push
jge
xor
js
adc
jge
xor
sbb
je
les
mul
push
pop
push
pop
decl
mov
aam
int3
sti
incl
imul
jge
cmp
cmpb
push
dec
mov
or
sbb
pop
add
aad
mov
ljmp
inc
stc
repz
call
addr16
xchg
sbb
fdivrs
jns
push
push
insl
cwtl
jno
ja
ror
jmp
sub
movsb
dec
enter
cmp
je
adc
filds
rcrl
stos
jns
dec
out
pop
and
xchg
dec
mov
std
dec
daa
jo
jb
hlt
cmp
xchg
adc
jg
das
dec
inc
popf
loopne
add
imul
call
push
mov
pop
pop
arpl
sbb
xchg
fidivs
sbb
paddb
in
cmc
cmpsl
or
dec
push
add
push
mov
sahf
dec
fwait
hlt
faddl
push
push
lock
pop
es
ret
mov
stc
jno
cmp
lods
jne
sbb
add
cmp
les
lahf
sbb
iret
or
sbb
divb
mov
dec
add
cmp
aas
movsb
sbb
mov
cmp
rorl
xor
aad
mov
inc
lock
dec
push
fdivr
jmp
mov
mov
or
nop
cmp
adc
addr16
push
jp
ljmp
lea
enter
and
mov
cltd
push
jl
fwait
or
loope
cwtl
mov
xor
adc
leave
and
pop
fsubrl
std
cli
and
xor
or
out
je
shl
lahf
inc
scas
ret
xlat
mov
add
mov
inc
test
fisubrs
shll
aad
xor
pop
call
repz
imulb
jne
cs
aad
into
aad
test
mov
fdivrl
or
and
xorb
clc
push
xor
loopne
lods
or
mov
cmpsl
mov
daa
mov
push
mov
out
xor
adc
or
and
mov
addb
dec
int
and
xchg
movsb
shl
sub
shl
and
dec
push
inc
adc
mulb
lock
jg
dec
enter
pop
stos
jno
cmp
cltd
fisubrs
mov
add
or
push
sbb
imul
cmp
rcrl
mov
sub
shl
sub
push
mov
and
sbb
push
mov
pushl
es
push
popa
aam
and
xor
dec
pusha
jge
jb
jo
pop
jle
sub
rcrb
mov
cmpl
mov
xor
arpl
js
int
outsb
ret
xchg
sbb
adc
and
nop
dec
mov
data16
jge
popl
jns
movsl
push
or
mov
mov
iret
movsl
das
jo
in
mov
fadds
mov
dec
jl
cmp
adc
mov
sahf
fwait
cmp
jno
stos
xor
ficomps
push
cmp
jno
cmpl
inc
loope
xor
stos
dec
adc
rcrb
jne
pop
ror
in
jns
jns
and
add
sbb
jmp
xor
stos
inc
lock
or
pop
loop
cltd
imul
mov
sub
dec
sbb
lcall
daa
inc
lods
push
or
inc
add
xor
cmpl
cmp
lret
orb
out
and
dec
ja
dec
cmp
jl
jae
mov
pop
and
xor
repz
or
add
dec
sbb
or
fwait
jno
lock
pop
xchg
arpl
pop
lock
mov
mov
insl
and
mov
pop
shrb
jmp
js
sub
mov
pusha
add
mov
jb
shll
push
inc
mov
inc
fisubrl
movl
push
mov
jbe
pop
jmp
inc
add
cmp
lods
clc
inc
or
sbbl
jne
inc
repz
inc
xor
jae
int3
popf
sarb
xor
cmp
shrb
stos
in
xchg
xor
cld
sahf
dec
ret
xor
dec
push
bound
dec
and
xlat
int3
jl
adc
aad
and
sub
sub
cmp
in
popa
pop
inc
dec
xchg
cmc
hlt
push
test
lahf
test
cmp
loopne
jo
xchg
ds
pop
cwtl
test
ds
in
gs
enter
test
ja
loope
into
addb
frstor
fdivs
xcrypt-ofb
cmpsl
ljmp
mov
icebp
inc
jmp
cmp
es
and
movsl
lret
nop
lds
mull
ja
test
add
das
xor
data16
pop
test
scas
ficomps
popa
cwtl
adc
in
movsb
cld
int
xchg
rclb
adc
ja
adc
packssdw
gs
stos
imul
cwtl
cmc
fwait
mov
mov
loope,pt
or
in
sub
loopne
adc
jne
mov
push
cmp
pop
or
cld
pop
xlat
add
sub
movsl
xor
insb
sub
es
cmc
rcrb
popf
cmp
rcrb
pusha
roll
ret
shll
sub
dec
out
sahf
mov
jge
push
sahf
xchg
mov
mov
sub
mov
xorl
xchg
jns
pop
xor
movzbl
jle
jns
adc
pop
xor
sub
cmp
inc
bound
test
push
pop
mov
push
in
mov
daa
je
add
cwtl
popf
and
mov
aam
adc
add
jle
call
xorl
imul
push
cmp
xor
daa
or
sbb
jecxz
ja
jne
sbb
ficompl
in
iret
or
and
jl
pop
pop
icebp
adcb
mov
add
cli
setge
mov
pop
cmp
pop
dec
xchg
ja
std
arpl
ljmp
sarl
push
aad
out
je
cltd
in
push
shll
sbb
jle
xlat
out
sub
fstpl
jg
add
aam
inc
lock
jo
and
out
movsb
pop
or
mov
push
push
lea
shll
enter
push
test
fsubl
sub
movb
push
or
sbb
fcomip
or
sti
daa
inc
jae
dec
add
test
popf
stos
xor
negb
and
sub
movsb
in
push
call
push
mov
pop
ret
shll
sbb
pop
mov
mov
or
add
arpl
cli
push
sti
icebp
mov
movsb
adc
iret
or
push
add
sar
xor
dec
adc
inc
xor
xchg
ja
test
pushf
outsb
ret
push
lea
mov
lcall
insb
adc
push
cmp
std
jo
add
cmp
shrl
jmp
push
mov
out
lcall
daa
dec
std
ds
or
fsqrt
jo
sbb
mov
loope
xchg
or
jne
js
lcall
dec
cmp
xchg
jg
or
mov
bound
sarb
outsb
pop
xor
ja
sub
mov
pop
outsl
push
and
das
and
in
bound
sub
mov
cmpsl
sbb
dec
mov
add
cmp
iret
repz
int
ja
and
cmpsb
xchg
mov
xchg
cmp
push
jnp
imul
push
aad
pop
mov
sub
scas
sahf
lods
fsubrl
arpl
push
pop
push
out
icebp
repnz
les
cli
mov
or
sub
push
add
and
mov
shrb
movsl
unpcklps
mov
adc
add
add
ret
test
pop
fdivrl
cmpsl
ja
push
adc
test
cmp
mov
sub
jne
adc
jg
add
out
leave
inc
xor
jmp
xor
call
decb
mov
mov
movl
movl
out
dec
add
cltd
leave
stc
mov
mov
jg
push
cmc
call
arpl
movsl
xchg
xchg
mov
sar
add
inc
syscall
jle
ret
into
and
cmpsl
xor
dec
icebp
dec
dec
pop
or
lods
ret
test
sbb
pop
shrl
and
inc
xchg
movb
scas
hlt
cmc
xor
mov
cmp
mov
xor
aam
push
adc
adc
xchg
mov
mov
pop
and
xchg
inc
jns
and
jmp
outsl
clc
loop
lcall
pop
lea
sqrtps
inc
jl
call
inc
dec
sbb
sbb
pop
mov
clc
push
cwtl
and
jmp
inc
xchg
ret
sti
or
les
cmp
mov
jmp
cwtl
in
out
adc
addb
pop
aam
push
repz
lods
xchg
lods
insb
xchg
mov
or
dec
arpl
push
mov
ss
pop
call
adc
or
or
enter
push
sbb
sub
sbb
in
jecxz
stos
ficomps
cmpsl
mov
scas
xchg
adc
sub
loopne
xchg
hlt
call
pop
xlat
mov
and
mov
pushf
and
mov
cmpsb
aam
mov
sbb
rorl
lods
jbe
fmull
dec
adc
inc
ret
mov
xchg
movsb
dec
arpl
shlb
ljmp
sbbb
push
sub
incb
test
sbbl
cmpsl
ficoml
out
les
pusha
sbb
ds
dec
pop
push
call
jg
ret
pushf
adc
leave
adcl
dec
mov
and
aad
xor
mov
add
roll
insl
pop
mov
shl
addl
negb
mov
and
rcll
pop
push
ficomps
and
repz
mov
pushf
fwait
dec
jg
inc
cwtl
xchg
mov
add
nop
mov
mov
adc
push
pop
enter
data16
data16
dec
loope
mov
and
imul
lahf
mov
rcll
test
adc
sub
inc
add
add
movsl
loop
dec
cmp
ret
call
and
add
sub
mov
jecxz
jge
repnz
adc
paddw
enter
jo
and
clc
xor
push
f2xm1
push
adc
loop
lods
cmp
push
push
adc
sti
mov
std
insl
jl
shll
xchg
and
shl
and
cld
aas
or
les
shll
nop
test
loopne
cltd
lods
out
call
fiadds
inc
sub
shlb
hlt
cvtpi2ps
xchg
pushf
or
scas
shlb
outsb
pop
pop
cmpsl
ljmp
cs
mov
shr
lahf
cmp
and
dec
ja
xchg
push
popa
out
sub
inc
fwait
pcmpgtd
aas
dec
mov
pop
cmp
sar
ljmp
and
loope
add
push
dec
pop
pop
adc
jns
adc
sbb
cld
xor
xor
aam
xor
push
loope
inc
xlat
cmpsl
scas
loopne
test
repnz
push
adc
inc
inc
xor
inc
pop
jmp
and
hlt
inc
mov
sub
pop
mov
popf
cs
push
aam
cmp
popa
add
or
jg
push
jne
sbbb
add
cmc
sbb
xor
mov
test
xchg
mov
add
loope
inc
jb
mov
out
add
dec
cltd
fistpll
push
sbb
stc
imul
or
cld
test
mov
or
shl
das
jno
cmpsl
pop
pop
add
cvttps2pi
inc
enter
push
bound
cld
xchg
add
hlt
push
movsb
xor
mov
mov
push
les
xchg
lock
or
lock
rcrb
inc
cld
cmp
xchg
inc
popl
mov
sti
test
mov
aam
hlt
mov
sub
mov
sbb
inc
lret
pop
or
pop
sub
push
fadds
out
inc
dec
mov
sub
adc
adc
inc
mov
xor
mov
dec
adc
mov
dec
fidivs
inc
out
push
cld
xor
movsb
fs
pop
sbb
xor
mov
and
xorl
inc
shlb
pop
lods
dec
jnp
mov
loopne
popa
xor
movsb
xchg
out
lret
jno
out
lret
movsb
cmp
call
cmpsl
cmp
pop
and
pop
lock
and
pusha
leave
jecxz
add
adcb
mov
xor
pop
sub
out
test
inc
jp
es
loop
xchg
cwtl
push
mov
push
inc
cmpb
mov
test
jbe
adc
add
sub
or
int3
cli
mov
sbb
xchg
xchg
inc
cmpl
out
aad
xor
mov
mov
pop
pop
sub
sbb
cmpsl
out
es
jl
sbb
bound
cmp
shl
mov
lret
mov
out
sbb
sbb
cli
test
filds
sub
cmp
aas
aas
push
outsb
and
push
jecxz
pusha
cmpsl
mov
inc
cs
or
cltd
or
stc
mov
xchg
mov
subl
jno
les
ret
inc
movsl
cmp
mov
add
mov
jb
adc
scas
pop
adc
pop
lods
mov
nop
mov
jno
inc
jle
nop
sub
int
and
jo
test
test
sahf
aad
jmp
lea
cmc
lock
std
shrb
dec
clc
je
adc
jno
stc
cmp
mov
insb
out
aaa
addr16
shl
aam
push
lcall
cmpsl
sub
and
mov
jmp
popf
stc
cli
add
rcl
inc
jno
aas
inc
mov
mov
jne
shrb
mov
lahf
push
mov
and
cmp
sub
fs
pop
in
or
mov
ljmp
and
or
xor
fsubs
sub
xor
push
lret
outsl
adc
dec
jl
add
or
inc
mov
test
push
aam
jns
jecxz
sub
test
xor
addb
push
dec
dec
adc
sbb
mov
std
outsl
jl
dec
mov
mov
cmc
add
cli
cs
cwtl
hlt
shlb
push
adc
or
pop
enter
pop
js
xchg
or
mov
xlat
sbb
sub
popa
mov
bound
stc
push
aam
arpl
pop
xchg
cmc
mov
in
rcrl
adc
mov
pop
xchg
mov
xor
hlt
imul
es
jnp
sbb
fidivl
pushw
loope
or
pop
imul
popf
sbb
mov
sbb
xor
hlt
pusha
repz
sbb
lods
sahf
mov
jno
scas
mov
stc
cld
dec
loop
hlt
mov
andb
test
jge
fisttps
xchg
out
jae
or
movsb
popf
mov
jns
rorl
ficoms
mov
pop
inc
xchg
add
clc
loop
cld
inc
out
mov
ret
sbb
push
test
or
ret
adc
daa
mov
cmp
sub
mov
mov
test
stc
loope
pusha
ret
out
push
dec
sbb
addr16
mov
mov
xor
cltd
and
lcall
xchg
push
daa
dec
cmp
adc
lock
hlt
xor
scas
sbb
ljmp
push
nopl
rcr
movsb
in
aam
or
cmc
sbb
xlat
pop
movsl
jno
leave
dec
cmp
add
or
xor
mov
xor
loopne
pusha
inc
fidivrs
cmp
movsb
dec
jbe
push
test
pop
loop
sbb
push
imul
mov
pop
inc
lods
jge
adcb
jle
mov
add
dec
sbb
or
cmpb
mov
fadds
in
fs
rcll
aas
push
xor
lods
dec
mov
aad
push
gs
jne
push
dec
leave
ja
jne,pn
jecxz
pop
test
es
lods
test
or
adc
std
or
adc
and
addb
js
adc
nop
push
lret
rcrl
ljmp
push
push
jmp
in
sbb
imul
inc
pusha
mov
movsl
mov
pop
arpl
stos
sub
xor
or
icebp
clc
rolb
push
sub
push
add
add
adc
and
adc
shll
popa
rcr
add
adcl
lret
xor
xchg
adc
repnz
push
lcall
lcall
lea
push
pop
mov
ffreep
dec
shlb
inc
mov
out
xor
mov
std
loop
cmc
test
scas
inc
mov
imul
packsswb
push
dec
and
and
pop
cmpsl
les
mov
sub
je
jo
fadds
lea
pop
stos
test
pop
dec
and
push
lret
mov
dec
cmp
pop
mov
shlb
idivb
or
pop
in
mov
rcrb
test
scas
rorl
jne
mov
dec
enter
cwtl
adc
imul
je
into
mov
sbb
xchg
jb
mov
add
pop
and
adc
scas
jl
dec
imull
fcomps
add
decl
loope
incb
xor
adc
nop
push
or
sbb
push
sub
nop
xchg
out
inc
addl
pop
xchg
pop
lock
xlat
jp
add
sbbl
pushf
nop
dec
es
lea
scas
cmp
lock
test
mov
int
cli
scas
or
xor
insl
in
xor
ljmp
sbb
or
mov
xchg
jbe
xor
test
jle
rcrb
daa
out
lcall
jbe
cmp
rclb
or
cmp
mov
xchg
bound
push
call
lds
ds
adc
adc
test
push
imul
pop
jo
cltd
popf
inc
ret
inc
inc
dec
stos
mov
adc
inc
bound
pop
inc
repz
xorl
repz
enter
mov
pop
xchg
mov
bound
sub
rcrb
jg
nop
test
in
fcomp
xor
lods
outsl
add
sub
push
or
sar
xchg
imulb
cmp
stos
mov
test
add
xorl
leave
jle
xchg
lods
ds
psubsb
mov
fmull
xor
dec
nop
mov
cld
add
ss
push
add
stos
push
nop
cmp
mov
xchg
cli
leave
repz
mov
add
mov
jne
lock
adc
xchg
inc
cmpsl
sbb
sarl
inc
out
lret
stc
adc
loope
stos
in
and
xor
inc
dec
lret
inc
adc
lret
test
loope
pusha
push
cmp
push
add
pop
xchg
add
mov
clc
jp
cld
dec
pop
es
clc
out
addr16
imul
pop
cmp
jecxz
outsl
scas
es
push
push
sbb
hlt
jmp
lds
jmp
and
in
popf
inc
lods
xchg
cli
test
adc
outsb
mov
and
stos
sti
sub
nop
sti
xchg
inc
add
add
out
xor
xor
in
dec
jae
add
mov
or
inc
outsb
jmp
xchg
pop
aam
jne
or
push
add
mov
xchg
sub
add
xchg
fcomps
jo
dec
sub
dec
add
and
mov
jno
std
mov
or
lret
inc
rorb
and
gs
ret
aas
pop
in
inc
rcrl
jne
ss
and
lcall
add
jno
and
xor
adc
outsb
aaa
cmp
andb
popa
repz
jp
mov
push
shll
inc
jmp
adc
jl
mov
lods
fsubl
cld
scas
aaa
push
mov
cmp
jp
loop
add
mov
pop
xchg
adc
jl
jg
sarb
aas
cmp
sbbl
and
popf
adc
jne
pop
adc
daa
sbb
out
fs
mov
and
jp
pop
push
sahf
mov
jne
sub
dec
test
lahf
or
jne
rclb
and
jl
push
cwtl
in
jbe
leave
mov
adc
push
sub
mov
andps
adc
or
sub
out
rcr
push
cmp
xchg
sbbb
inc
clc
dec
add
loopne
fs
and
add
or
cld
test
xor
rolb
pop
and
hlt
add
movsb
sti
or
dec
and
aaa
sub
popa
jl
sbb
fnstsw
cli
je
inc
and
lds
push
jmp
jno
aaa
push
lcall
adc
pop
jae
fists
inc
sbb
sub
inc
mov
lret
mov
add
cmp
jne
mov
sbb
aam
xchg
jl
enter
iret
icebp
nop
movsb
push
pop
cmp
xchg
ljmp
inc
inc
and
or
mov
cs
jle
mov
cmpsb
js
inc
push
nop
stos
les
stc
sbb
cli
jl
cmp
push
ja
add
les
mov
inc
loop
push
test
lds
rcll
repz
xor
jg
mov
pop
xor
add
adc
xchg
pop
rorb
dec
mov
jnp
dec
test
fs
cmp
mov
xchg
xchg
or
stc
push
arpl
rorl
aas
dec
and
nop
aas
pop
pop
in
ljmp
fdivr
push
cmp
out
dec
sbb
xor
sub
sub
cmpsb
pop
sarl
lahf
int
movsb
xchg
shll
push
pop
dec
bound
cmp
push
repnz
repnz
test
add
xchg
repnz
imul
jnp
test
nop
ja
cmp
pushf
mov
popa
mov
sbb
cmp
mov
out
xor
scas
aaa
int3
pop
aam
push
lds
jle
jge
andb
leave
or
clc
fwait
je
insl
stc
outsl
jmp
out
pusha
jmp
call
test
xchg
sbb
std
adc
roll
inc
add
loope
mov
aam
xor
nop
sbb
adc
test
dec
xchg
in
ss
jne
stc
cmpsl
pop
xchg
pop
mov
jae
sub
mov
sbb
rorb
movsl
pop
xchg
adc
inc
js
rol
push
inc
out
or
push
mov
push
fistpl
fwait
clc
popa
pop
scas
push
daa
inc
movsb
decl
jl
cmp
dec
sbb
sub
lods
push
mov
aad
out
mov
add
js
into
lret
cmp
lahf
push
mov
or
xor
push
in
jb
jns
orb
adc
inc
xor
js
fildl
push
call
in
push
sub
mov
add
lret
cs
and
lret
loope
mov
push
scas
sub
mov
cwtl
test
sbb
fcomip
and
sbb
mov
cli
adc
adc
cmp
scas
inc
lods
jb
jmp
ret
mov
and
loop
xchg
adc
adc
inc
sti
xor
pop
xor
mov
adc
inc
in
daa
dec
jge
pop
dec
daa
mov
push
push
loope
xchg
xor
loope
rolb
stos
es
add
pop
and
orb
jne
dec
push
lds
lods
aas
push
imul
xchg
orl
push
leave
sub
inc
lods
ljmp
add
mov
in
lock
mov
std
adc
pop
mov
test
dec
lea
sbb
pcmpeqb
test
mov
jo
push
nop
or
in
cltd
inc
cmp
mov
enter
lret
lds
das
dec
lds
pop
data16
mov
pop
cli
push
inc
js
sub
out
sbbl
fcmovb
call
mov
sub
iret
or
mov
or
clc
mov
pop
in
stc
mov
daa
xor
shlb
inc
push
stos
adc
and
pop
pushf
outsb
dec
je
lods
les
pop
fwait
inc
popa
repnz
sub
sub
je
cmp
sub
aam
inc
fs
das
test
lret
xor
xchg
sti
dec
sbb
insl
out
adc
ret
movsb
cli
pop
test
das
and
out
dec
inc
push
xor
push
mov
clc
jne
mov
adc
xor
into
test
and
xchg
cli
cmpb
ja
pop
xchg
xchg
call
mov
xor
aas
push
std
push
jmp
bound
fwait
sub
push
add
push
cmc
adc
cltd
shl
inc
push
add
push
jne
stos
test
mov
adc
cmp
addb
push
test
iret
push
call
clc
pop
xchg
sbb
mov
sbb
inc
xlat
scas
test
std
or
data16
sbb
cli
push
jb
dec
dec
adc
ljmp
lods
xor
xchg
clc
mov
sub
pop
jmp
decb
stos
xchg
aad
mov
push
dec
jae
push
adc
push
clc
xor
and
shlb
pushf
mov
in
fidivrs
push
lds
arpl
dec
popl
mov
out
dec
stos
mov
nop
dec
sti
pop
mov
mov
sbb
cmp
sbb
lods
jns
icebp
pusha
sub
dec
loop
push
adc
dec
outsb
insl
fs
call
adc
mov
push
xor
pop
hlt
push
cmpsb
mov
loop
jmp
inc
pop
shlb
sbb
ja
xor
sub
jp
cmp
mov
loope
lcall
mov
xchg
xchg
out
pop
push
or
loopne
and
sub
or
push
in
inc
in
mov
ds
lds
les
dec
pop
push
pop
add
fst
xchg
rorl
test
test
cmp
and
dec
adc
arpl
aam
cmpb
pop
adc
lea
add
jecxz
add
mov
es
rcrb
mov
outsl
or
lock
cwtl
adc
sub
mov
inc
aaa
cmc
pop
sahf
or
lret
inc
lea
cmpl
mov
sbb
adc
aam
out
inc
inc
sbb
push
test
dec
mov
out
dec
sbb
cmc
fcomps
shll
pop
dec
push
adc
and
loope
cmp
in
or
mov
and
push
sub
in
fldenv
jmp
adcl
mov
mov
fcomi
loope
adc
inc
mov
loope
data16
mov
test
add
aam
sbb
mov
sub
enter
aam
dec
ror
sub
mov
pop
imul
add
sbb
mov
or
sbb
inc
xor
faddl
aas
adc
dec
subb
loop
pop
jle
insl
pinsrw
popa
adc
dec
dec
pop
rorb
cld
jmp
push
test
mov
loope
idiv
adc
push
jmp
push
out
shll
imul
in
adc
jg
sbb
or
xchg
scas
imul
dec
imul
das
sbb
mov
repz
add
lahf
in
or
movsl
mov
xchg
lcall
xlat
jg
add
repnz
mov
loopne
pop
xchg
pusha
mov
iret
cwtl
call
adc
and
idivl
test
adc
in
sbb
vpshuflw
call
rol
adc
jle
mov
ret
fs
arpl
hlt
xchg
pop
adc
sub
push
or
je
mov
into
xchg
jno
xchg
inc
repnz
call
xchg
je
fwait
mov
and
call
or
int
lahf
sub
sub
shll
sbb
pushf
xchg
aad
fistpl
stc
pop
leave
cmp
insl
push
adc
pop
xor
jg
push
mov
adc
hlt
daa
cs
inc
add
dec
mov
mov
sub
jb
and
add
push
ds
cltd
xchg
or
daa
ja
loope
ja
aas
out
jge
loope
jle
test
repnz
inc
ret
xchg
push
adcb
mov
push
cmp
sbb
push
sub
xchg
rolb
inc
shlb
dec
test
js
and
cmpsb
lcall
nop
icebp
mov
add
fs
and
ss
inc
push
aad
inc
test
fisubs
loopne
adc
jp
inc
call
in
push
xchg
adc
outsb
call
mov
mov
cmc
inc
add
mov
jle
mov
mov
addb
stos
dec
loopne
fldt
push
xchg
dec
lcall
sub
mov
cmpsb
cwtl
mov
rclb
clc
cltd
out
gs
mov
cwtl
or
shlb
push
jmp
hlt
imul
cmp
sub
xchg
add
shrb
lret
hlt
mov
mov
in
jge
loope
adc
data16
adc
pop
sbb
xor
rolb
mov
cmp
inc
mov
loope
and
mov
mov
daa
push
jb
test
add
mov
cli
add
push
loopne
sub
imul
lea
roll
and
mov
shrl
xchg
movsl
lods
test
and
and
lret
push
sub
dec
dec
sbb
inc
sub
xchg
xchg
out
and
xor
or
and
lret
push
cs
jnp
pushf
pushf
test
daa
dec
popl
decb
jle
adc
leave
cltd
add
popl
nop
scas
sbb
mov
xchg
outsb
inc
dec
adc
or
stos
lahf
cmpsl
pop
es
and
lcall
mov
inc
push
in
test
fstl
repnz
xchg
inc
adc
mov
adc
and
lods
rcll
sub
cmp
pushf
sub
out
loope
xchg
sarb
mov
gs
xchg
lods
push
shrl
pop
push
movsl
and
shll
or
nop
dec
adc
outsl
cmpl
iret
jo
add
std
inc
fldl
jecxz
sti
xchg
jno
push
cmp
mov
pop
add
dec
popa
push
add
add
push
and
in
inc
pop
dec
inc
pop
in
and
pusha
push
mov
jns
mov
xor
adcb
es
jmp
cmp
pop
and
ret
dec
insb
and
dec
sub
add
xlat
test
or
jge
shr
movsb
mov
add
mov
xor
jno
add
scas
vpsrlw
aam
jno
mov
adc
inc
repz
sub
in
test
cwtl
dec
mov
sub
fisubrs
pop
mov
inc
push
or
dec
and
lret
add
inc
push
orl
fdiv
ljmp
rcr
mov
mov
xor
sub
add
sub
mov
outsl
or
lcall
jmp
mov
in
sub
xchg
adc
out
or
push
ret
adcb
cmpsb
mov
add
movsl
pop
cmpsl
cmp
mov
fwait
inc
xor
cmp
aaa
mov
test
hlt
sub
xor
cld
inc
inc
std
jmp
push
push
pop
test
pop
in
mov
add
mov
or
movsl
add
jbe
icebp
int3
aas
inc
pushf
jmp
movsb
dec
and
fs
cltd
js
data16
pusha
fbld
cltd
lods
and
stos
mov
sub
cmp
add
mov
jl
adc
xor
mov
push
fs
hlt
dec
in
ljmp
adc
push
xchg
aad
and
shr
pop
mov
jno
push
sub
cli
pusha
out
or
inc
pop
xchg
arpl
mov
js
dec
pop
notb
or
sbb
jmp
dec
daa
gs
add
lcall
cmp
std
in
xchg
ljmp
daa
sar
jge
add
jbe
repnz
xor
stc
push
inc
aad
and
dec
pushf
hlt
out
imulb
xchg
pop
dec
mov
cmc
stos
inc
nop
shl
cltd
out
xor
or
js
out
std
dec
jg
data16
icebp
xchg
les
pop
mov
icebp
push
rcll
cltd
and
fsubs
add
outsl
dec
jno
sarb
jl
pop
aaa
pop
sbb
dec
cmpl
mov
pop
push
stos
enter
call
sbb
jg
je
jne
xchg
nop
lods
addr16
jns
push
pop
ja
dec
push
faddp
cli
loope
out
mov
sub
stos
fsubrl
out
mov
das
mov
rcll
mov
jl
jp
and
int3
mov
cld
xorl
jno
adc
inc
dec
inc
lcall
lods
xlat
cmp
inc
addr16
mov
aas
ret
sub
jp
rcll
mov
or
insb
add
push
data16
aad
movsb
enter
adc
add
xor
sti
push
nop
cwtl
int3
add
xor
test
inc
fs
outsl
dec
xorl
pop
add
inc
gs
inc
sub
scas
adc
push
pop
jns
dec
add
movsb
out
xor
lahf
xchg
mov
inc
mov
fimull
shll
incb
or
cltd
adc
movsl
push
jmp
cmp
sub
bsf
pushf
bound
lock
in
cmp
ja
cwtl
pop
xor
scas
out
and
dec
jecxz
xchg
sub
testb
cmp
ficoml
jne
mov
cmovbe
jp
fcompl
fldcw
or
adc
lds
out
nop
ss
mov
cmpsl
or
and
pop
inc
xor
mov
push
sti
inc
mulb
aaa
push
sbb
cltd
jo
imul
xchg
cwtl
nop
inc
mov
iret
xor
std
inc
imul
data16
out
nop
fucom
jbe
ret
cmpl
mov
mov
test
add
xor
inc
pop
test
or
push
lret
fisubl
rorb
inc
xchg
jne
mov
adc
in
mov
je
sbb
imul
and
loop
push
push
cmp
cmpsl
inc
fdivrs
clc
pop
out
ret
in
mov
lahf
pop
pop
ficomps
dec
jecxz
mov
mov
cmpsl
shlb
and
sbb
add
inc
insl
aad
dec
stc
test
test
sub
adc
and
jns
cld
lods
pop
shlb
nop
cmpsl
aad
adc
stos
sbb
or
das
std
cmpl
jmp
jge
cmpsl
xchg
lea
push
lods
out
in
pop
pop
adc
sbb
and
add
push
jae
mov
push
popa
rolb
sbb
fmull
unpcklps
mov
jns
push
or
popa
fdiv
inc
cld
lret
sbb
dec
stos
cmp
push
aad
sub
mov
inc
dec
xchg
test
js
movsl
inc
outsb
push
jg
sti
std
inc
int
cmp
leave
mov
push
mov
neg
cld
jns
loope
or
inc
jbe
push
orb
mov
jmp
mov
sbbb
sbb
adc
aas
in
pop
shufps
stos
push
leave
or
cli
pop
adc
adc
push
add
ljmp
inc
sub
jp
sbb
adc
inc
outsl
movsl
or
jecxz
rclb
into
cmc
inc
sub
cwtl
or
xor
inc
jl
sbb
xor
adc
xor
mov
js
loopne
jg
hlt
ret
push
in
lret
and
ds
icebp
mov
mov
std
jnp
sbb
lock
pop
jbe
or
mov
push
bnd
pop
pop
lea
subl
mov
cs
lahf
sbb
call
jmp
mov
dec
push
xchg
adc
adc
inc
ret
fiaddl
adc
cli
jmp
and
lock
repz
push
das
std
and
and
xchg
mov
xor
shr
mov
sbb
jo
mov
dec
cmc
lcall
out
dec
dec
inc
shl
mov
jp
jmp
xor
push
pop
inc
sbb
rcrl
add
mov
das
test
aas
push
imul
dec
jl
jmp
jmp
mov
mov
fnstsw
sbb
adcl
lahf
dec
pop
dec
push
mov
clc
add
pop
rcrl
in
loope
push
and
add
sti
js
jg
pusha
sbbb
jno
cmp
push
sub
push
std
ljmp
test
fidivrs
test
mov
or
pusha
iret
dec
sbb
adc
adc
dec
mov
mov
xchg
lcall
push
push
test
mov
cli
frstor
add
ret
std
adc
clc
fnstenv
orb
pop
insb
xchg
sahf
sub
inc
movsl
vpmacsswd
je
mov
fcoml
ret
inc
lods
std
cmp
and
push
mov
outsb
fildl
movsl
xor
pop
ret
inc
push
push
xor
mov
js
adc
mov
addps
das
rep
clc
xacquire
pop
xor
loopne
mov
dec
fcoms
dec
ret
pushl
arpl
inc
pop
push
add
cli
dec
add
ds
dec
push
test
add
fists
mov
push
js
movsb
ds
repnz
mov
mov
xchg
rcl
cld
out
push
cltd
lea
out
aaa
lods
out
cmpsl
rcr
jnp
insl
xorb
inc
and
inc
pop
mov
sbb
test
mov
hlt
repz
repnz
scas
dec
mov
xor
jle
push
cmpsb
rcl
cmpsb
andb
fistps
inc
aad
mov
scas
js
in
stos
jecxz
mov
jecxz
jle
add
cwtl
inc
or
mov
mov
sarb
xchg
sbb
inc
pusha
cmp
push
pop
test
loop
je
das
add
ja
ds
ret
test
xchg
inc
push
xor
sub
scas
pushf
sub
cmp
and
sub
subl
ds
aam
fisubs
addr16
xchg
add
mov
add
xor
jle
js
or
rcr
pop
sbb
mov
insl
push
mov
out
dec
ret
mov
lods
pop
mov
or
pushf
fcoms
testl
mov
clc
jo
rolb
jg
scas
jne
leave
xor
icebp
jge
jecxz
clc
mov
stos
jbe
inc
mov
push
outsl
pop
push
out
popa
xchg
popa
add
fistpll
dec
sbb
mov
scas
jl
mov
loopne
xchg
jae
or
mov
adc
inc
and
jb
add
lret
les
daa
in
icebp
das
les
xchg
ja
sub
pop
int
sub
cmp
xchg
in
nop
sub
mov
repz
leave
push
push
std
adc
stc
pop
popa
sbb
or
cli
stc
add
and
adc
jmp
inc
add
loope
sub
imul
adc
call
mov
sub
jnp
stos
dec
rcrl
sahf
gs
inc
bound
les
sbb
push
filds
lock
jnp
hlt
test
lahf
or
inc
add
xor
cmp
jbe
mov
and
fwait
inc
frstor
sbbl
sub
inc
adc
pop
cltd
sbb
xor
mov
or
mov
test
mov
cmp
inc
fyl2x
jg
insl
dec
incl
in
pop
rcl
inc
mov
cmpsl
bound
or
mov
pusha
ret
imul
test
pop
lods
lcall
jg
out
lcall
push
pop
lods
insl
mov
jge
mov
aas
inc
es
into
and
pop
lds
jle
lahf
sub
dec
dec
sbb
inc
fs
lods
aam
jmp
and
aas
xor
or
shrb
ret
xor
xchg
cmp
or
rorb
pop
insb
shll
enter
fucomi
cs
push
dec
pusha
or
test
inc
inc
out
lea
mov
xchg
adc
lahf
mov
xchg
fstl
push
inc
pop
adc
add
arpl
pop
in
adc
cmp
lea
into
mov
clc
and
push
sub
mov
inc
jb
test
and
shll
pop
jg
lcall
jge
ret
mov
out
mov
push
mov
sub
sbb
sub
aas
orb
imul
sahf
ret
hlt
pop
mov
xor
insb
mov
mov
jg
loope
xor
xchg
push
mov
or
out
dec
lret
ljmp
inc
mov
into
lea
add
jmp
stc
adc
push
jg
les
cld
mov
mov
cmp
or
push
sar
xchg
enter
lods
mov
pop
add
popf
loopne
mov
inc
pop
mov
sbb
add
int
and
and
and
jg
test
xchg
scas
mov
sarl
xchg
pop
jno
arpl
fists
sub
pusha
sbbl
cs
sahf
push
cmc
mov
dec
fdivl
and
cmp
xor
lahf
sub
or
add
aas
sbb
cvtps2pd
jne
inc
movsb
arpl
fsts
out
out
cmp
mov
jmp
cmc
lahf
or
xor
cmp
sahf
inc
std
ljmp
std
sub
das
pop
cmp
inc
leave
lods
pop
mov
inc
mov
ds
sub
cmp
mov
and
sbbl
mov
push
loop
xchg
sti
inc
mov
add
and
mov
movsb
pop
dec
sub
dec
adc
xor
mov
push
dec
ss
clc
pop
or
mov
outsb
in
mull
ds
jns
jnp
insl
mov
push
rorl
mov
push
sub
sar
mov
iret
test
inc
dec
cmp
inc
adc
cmp
hlt
sti
shlb
jo
stos
fucomp
lods
sahf
mov
and
add
adc
mov
inc
cmp
push
adc
cmpsl
popa
cmp
adc
xchg
mov
sub
scas
fisttps
pop
inc
pushf
xor
jmp
emms
push
stos
inc
inc
dec
adc
mov
stos
pop
pop
fildl
pop
xchg
push
and
nop
stc
add
pop
int3
clc
std
int3
cmp
add
mov
test
bound
cmp
or
sahf
dec
les
add
or
xor
ret
aam
xchg
fiaddl
fstpl
aas
sahf
adc
add
iret
mov
add
inc
jecxz
imul
mov
add
or
out
rclb
xchg
and
inc
movsb
pop
popa
mov
fwait
jp
nop
jge
mov
dec
push
lods
mov
push
add
negl
repnz
ret
jae
lods
add
mov
mov
dec
sub
xor
or
pop
cs
mul
fisubs
iret
sbb
sti
sub
loopne
cld
xchg
dec
mov
jae
jbe
aaa
pop
jle
cltd
cmc
aam
cmp
mov
pop
inc
data16
jmp
add
out
adc
dec
jno
jg
es
rcl
lock
into
sub
mov
add
rcll
rolb
cmc
jg
inc
imul
push
mov
jl
std
xchg
fimuls
repz
mov
xchg
ss
mov
xchg
inc
aas
out
test
shrl
outsl
lahf
xchg
mov
orb
fistpll
scas
push
out
out
pop
dec
pop
cmp
mov
movsl
and
xchg
jb
sti
pop
add
adc
sbb
stos
mov
mov
adc
cmp
adc
adc
lcall
pop
add
jl
imull
mov
dec
adc
fidivs
pop
sbb
fwait
add
inc
push
cli
sub
mov
add
cmc
incb
enter
push
and
aam
or
jp
inc
dec
mov
pop
outsl
mov
sbbl
xchg
adc
push
sub
and
es
repnz
pop
dec
pop
orb
pop
es
hlt
add
inc
xor
jmp
jo
mov
push
adc
clts
xor
xchg
adc
lea
jle
jmp
aaa
mov
mov
adc
and
sbb
imul
push
leave
ficompl
shl
xchg
ds
in
aaa
push
shr
jecxz
mov
or
enter
pushf
pop
aad
cmp
xchg
int3
cmp
lret
sbb
and
mov
pop
test
jbe
mov
push
add
jl
mov
adc
dec
pop
ret
fwait
test
in
mov
jae
shl
and
push
repz
sbbl
xchg
pushf
aas
mov
int
add
jmp
pop
or
cwtl
cmp
fwait
push
mov
mov
das
mov
mov
mov
push
mov
test
jno
sahf
scas
sbb
into
cltd
jl
sbb
mov
negl
mov
sar
pop
add
mov
pop
inc
nop
xor
ss
std
pop
jecxz
dec
out
cs
pop
daa
mov
or
aam
adcb
xor
leave
shrb
lahf
jns
out
xor
cli
dec
mov
xchg
gs
mov
repz
andl
pop
pop
mov
adc
push
mov
adc
mov
inc
imul
ret
cmp
jp
adc
das
and
xchg
xchg
jbe
lods
push
or
add
sub
shll
popa
test
popa
fbld
mov
daa
ret
or
and
fnstsw
cmpsb
mov
mov
push
and
movsb
or
mov
test
in
dec
loop
mov
rcl
xor
add
inc
and
test
sub
jbe
jbe
or
sub
cs
xor
mov
jae
sub
ret
test
xchg
ljmp
xor
imul
sbb
shlb
cmp
add
mov
sbb
cmc
pop
mov
aad
push
test
jbe
pop
popa
clc
add
dec
ret
shlb
ljmp
mov
pop
xor
mov
push
mov
add
int
inc
xor
mov
cmp
cli
adc
push
cmp
lds
iret
out
mov
inc
add
xchg
inc
pop
jns
imul
test
mov
sbb
cmp
in
iret
adc
sub
lods
and
xchg
mov
mov
and
sub
push
and
adc
pop
daa
pop
mov
cmp
jmp
mov
shrl
mov
popl
pop
les
ret
sbbl
mov
fxtract
repnz
rcrb
mov
sub
pop
data16
inc
daa
sub
sti
xlat
scas
add
cmc
sbb
repz
lahf
xchg
stos
add
daa
push
dec
bound
imul
in
sarl
or
ret
mov
out
lods
js
add
dec
mov
jl
aas
mov
test
mov
xlat
mov
clc
jl
cli
cmpl
jne
dec
jg
rcrl
sub
movsl
clc
cmp
cmp
or
jmp
clc
test
lahf
fadds
imul
nop
nop
cli
push
imul
movsl
test
sub
ljmp
stos
mov
mov
mov
sub
add
ret
js
push
int
sub
mov
scas
rorl
dec
aaa
pop
dec
and
inc
popa
aad
dec
repnz
and
leave
xchg
les
setbe
je
movsb
cwtl
lahf
mov
sarb
fidivrs
add
adc
mov
nop
jp
stos
lock
addb
loopne
xorl
xchg
jbe
sbb
fstl
push
sub
dec
inc
sbb
push
arpl
stos
cltd
jmp
or
and
dec
pop
dec
jae
adc
add
ret
ret
jg
sbb
pusha
xchg
add
inc
cmc
dec
or
jno
dec
nop
pop
adc
xor
test
insl
mov
adc
cmp
sbb
lea
and
mov
cli
daa
iret
add
jg
jmp
js
dec
sahf
ds
enter
push
inc
cmpl
enter
xor
shl
add
out
sbb
mov
mov
nop
pushf
ret
lock
es
pop
cmp
repnz
shrl
lcall
cmc
sbb
xor
out
and
les
arpl
jle
add
xchg
add
adc
mov
out
jo
lds
lods
or
fisttps
test
lcall
push
xor
add
xlat
adc
adc
push
mov
jge
jmp
add
movzwl
jb
std
test
les
stos
sysexit
icebp
lock
sbb
mov
add
das
xchg
ret
and
int
rcll
sbbl
push
push
movsl
mov
or
test
fistl
mov
inc
jp
jns
punpckhwd
push
int
pop
cwtl
adc
pop
andl
pop
movl
mov
in
aam
sub
push
xlat
imul
imul
and
lret
sbb
aaa
adc
pop
xor
dec
sub
sub
out
or
iret
xor
adc
bound
sub
dec
ljmp
in
mov
daa
sub
test
pop
inc
sti
jo
xchg
lock
call
cwtl
jl
xor
cmc
cmp
xchg
push
cwtl
push
les
and
bt
pop
hlt
cwtl
into
movsb
popa
push
stos
movsb
dec
or
and
xor
loope
pop
bound
inc
cmpsl
std
xchg
pop
pop
dec
or
push
movsl
add
jle
or
shlb
loope
jne
push
add
sbb
jle
out
les
or
pop
jg
cs
adc
sub
repz
out
xchg
xor
cltd
mov
int
pusha
or
and
and
popf
aas
mov
leave
add
add
shrl
sub
jg
add
fs
mov
cld
test
sbb
lret
mov
sbb
les
or
pop
sbb
sub
test
flds
scas
or
push
xchg
xchg
out
cmp
mov
and
imul
incl
sub
add
push
sub
cmpsb
and
frstor
jno
sbb
jnp
leave
xchg
fildll
add
jmp
sti
test
push
fwait
das
jns
aas
cs
push
mov
inc
mov
or
and
repz
sbb
ljmp
cmp
movsl
mov
sbb
and
addr16
push
sub
xor
cld
subl
loop
mov
inc
lods
lds
push
adc
inc
xor
sub
push
ror
lock
dec
cli
pop
push
and
xchg
cmp
aaa
mov
jecxz
mov
outsl
mov
adc
pusha
inc
mov
incb
mov
scas
es
popa
in
mov
add
adc
lcall
dec
add
arpl
out
xor
xchg
scas
jl
mov
rorb
jecxz
or
cld
cwtl
jle
mov
rol
xchg
and
nop
or
andl
push
push
inc
mov
dec
add
mov
jbe
sbb
xor
dec
out
leave
fiaddl
loop
add
mov
ljmp
xchg
lock
das
mov
inc
fnstenv
or
add
das
sbbl
das
mov
das
outsb
loope
xor
aad
cmc
imul
or
and
fstpt
out
inc
insb
shl
pop
add
xor
add
mov
enter
hlt
pop
cmc
and
mov
mov
scas
decb
or
push
adc
ret
lcall
dec
cmpsl
add
xchg
cli
insl
pop
sbb
and
add
xor
xlat
cli
addr16
xor
push
outsb
mov
pop
dec
fdivl
push
out
xor
or
out
ret
jmp
inc
jmp
es
or
dec
test
cmp
scas
movsb
mov
int
or
jmp
lds
repnz
or
dec
call
add
cmc
jmp
add
jae
ljmp
xchg
stc
outsl
je
jl
aam
jbe
gs
pop
mov
push
fwait
les
inc
imul
and
adc
aad
outsl
add
or
mov
stos
stc
jg
loope
sbb
les
imul
orl
adc
cmp
inc
divl
mov
mov
sahf
and
jb
rcrb
int
std
mov
sub
shl
jge
les
inc
xor
dec
mov
mov
mov
outsl
test
sbb
dec
pop
sub
inc
outsl
jl,pn
xchg
out
popf
es
dec
sbbl
sahf
lods
inc
subb
pop
jle
orl
es
add
or
cmp
arpl
pop
adc
bound
mov
shll
lock
add
popa
inc
push
push
lods
ljmp
or
in
loopne
pop
mov
fistl
std
ret
mov
iret
jnp
outsl
pop
sbb
popf
mul
mov
orl
sar
ret
cs
mov
scas
fwait
pop
test
adc
xchg
adc
push
inc
loope
dec
dec
mov
test
inc
mov
clc
xor
jl
sub
icebp
and
or
cmp
in
fwait
jne
sbbl
inc
mov
cld
push
mov
add
jns
jns
aas
mov
mov
mov
push
add
and
xchg
idivl
stc
pop
pop
outsb
cwtl
sbb
add
dec
dec
cmp
mov
lods
jg
lret
jmp
and
lods
leave
pop
mov
inc
pop
inc
pop
sbb
test
orb
shrl
mov
mov
mov
mov
sbb
sbb
lds
shrl
stos
int
outsl
jno
ret
dec
or
insl
bound
mov
or
cmp
push
sbb
mov
sub
inc
cmpsb
add
mov
xor
xlat
add
and
cmp
mov
and
inc
inc
sbb
jns
inc
stos
and
add
jo
dec
jno
pop
inc
lock
and
sub
outsl
ret
ret
fs
arpl
inc
pop
lods
add
inc
out
xchg
add
mov
sbb
cld
aas
pop
dec
ret
rorl
sub
mov
jns
add
cmpsb
xlat
sbb
xchg
push
pop
push
ret
gs
adcb
mov
add
dec
sbb
add
je
jg
inc
addb
inc
adc
scas
add
xor
sub
lahf
pop
sub
fs
iret
pop
insl
jae
mov
lock
rcrl
test
loopne
call
ljmp
jecxz
out
mov
cli
push
shlb
or
lahf
test
les
sbb
loopne
inc
xchg
stos
test
push
mov
add
or
xchg
lea
lods
cmpsl
sarl
out
add
push
jmp
in
and
decb
dec
jg
pop
cmpl
pop
fisttpll
cmpl
test
cwtl
jne
pop
lahf
push
mov
xchg
int3
sbb
mov
outsb
shrb
pop
push
inc
or
mov
xchg
mov
inc
xor
ljmp
inc
aas
or
or
jle
lods
es
mov
push
inc
push
cwtl
sbb
add
sbb
pop
add
iret
mov
sahf
cs
mov
test
xlat
xchg
mov
cmp
mov
xchg
mov
xor
adc
sub
insl
les
daa
adc
mov
inc
add
pop
mov
pop
xor
sbbl
sbb
outsl
push
mov
or
xchg
lock
pop
pop
jl
sub
sub
fninit
add
pop
cmp
nop
jo
frstpm(287
add
add
aam
fsubrs
push
andb
mov
test
add
cmp
adc
cwtl
std
addr16
insb
inc
and
mov
mov
sbb
fs
mov
jge
sbb
es
inc
push
cmp
cs
inc
lret
dec
mov
or
push
sbb
sub
or
jo
cwtl
add
add
int3
mov
dec
fcmovne
xorl
out
adc
adcb
and
mov
mov
faddl
in
or
addb
out
mov
testb
dec
popl
lock
mov
cmc
jnp
stos
push
xor
push
xor
imul
dec
stc
sub
push
std
lahf
imul
and
gs
mov
rclb
fwait
cld
aad
mov
fnstsw
add
fwait
nop
fcomps
mov
clc
loop
or
decl
dec
test
cmp
aad
sub
por
sbb
sub
add
inc
or
insl
dec
imull
imul
xchg
and
mov
adc
daa
dec
fbstp
mov
lahf
daa
lock
arpl
iret
das
sbbb
sbb
jo
sub
xchg
mov
and
cmc
xor
adc
xchg
xchg
loope
or
dec
rorb
sti
stos
jp
or
cmp
cmp
xchg
sub
adc
mov
enter
lds
adc
mov
cmpsl
scas
icebp
shl
inc
push
dec
xlat
ret
sub
and
xor
sub
out
sbb
les
push
mov
dec
scas
or
cmp
int
orb
cltd
or
sub
add
mov
adc
or
cmp
roll
outsb
mov
cmpsl
jo
inc
adc
xchg
les
inc
jg
jl
incl
loope
cmp
adc
std
and
cs
pop
adc
and
unpcklps
loopne
cltd
cmp
mov
hlt
and
jge
dec
pop
mov
dec
lods
adc
insl
test
xchg
mov
dec
sub
cmp
jmp
jae
add
ss
loope
cmp
cmp
add
pop
in
arpl
xchg
xchg
fisttpl
aam
xor
adcb
jae
xor
cwtl
mov
and
scas
mov
lods
sbb
jae
cmp
add
xor
adc
pop
aaa
mov
popf
add
xchg
add
hlt
scas
sub
push
shrl
inc
mov
pop
jns
pop
call
pop
inc
mov
sbb
inc
je
xor
mov
mov
pop
pushf
or
inc
int
dec
jmp
pop
adc
inc
imul
test
aaa
mov
mov
sbb
pop
paddd
es
add
call
clc
push
stos
mov
xchg
jle
sub
or
adc
adc
ret
add
cmpsl
scas
add
xchg
sti
lret
xor
out
inc
pop
mov
ljmp
es
xor
pop
fdivl
xchg
sbb
dec
mov
mov
or
in
shlb
sbb
and
adc
push
jl
sahf
cmp
xchg
add
popl
and
bound
jbe
cltd
or
stc
imul
stc
cli
and
xor
rolb
cmp
pop
lds
mov
pop
jl
addr16
icebp
mov
in
push
mov
mov
lock
jge
je
roll
add
ret
stc
addr16
mov
mov
cmc
es
jnp
jno
push
outsl
jg
and
xchg
icebp
mov
lea
inc
dec
dec
add
sub
or
push
inc
cli
sub
rolb
xor
dec
add
out
xor
je
cld
fs
outsb
rorb
jg
fildl
pusha
add
hlt
aas
rol
mov
lcall
mov
jge,pn
fldl
ljmp
pop
and
add
lahf
jbe
jl
sbb
hlt
jmp
addl
cmpsb
adcw
cmc
inc
dec
dec
clc
sbb
fstps
sbbl
and
imul
push
xor
test
push
xchg
aad
cmp
lock
push
sbb
sub
sub
xchg
push
sarb
xor
movb
add
ret
ret
icebp
jmp
xchg
mov
xchg
push
add
dec
mov
mov
testb
popa
sbb
dec
dec
push
or
push
inc
jmp
aas
push
dec
test
jb
xchg
nop
ja
cmp
jae
clc
push
fnsave
sar
outsb
push
stc
inc
add
xor
inc
fisttps
lock
leave
jns
add
add
and
push
dec
andl
cli
add
and
cwtl
jge
push
loop
je
or
and
cmp
mov
mov
fstl
fisubrl
sbb
mov
ds
push
stc
cli
fs
jge
lret
bsr
sbb
cli
adc
mov
pop
gs
je
pop
add
inc
clc
mov
mov
je
add
nop
pusha
adc
iret
sarl
adc
repz
or
dec
cmp
movsl
stos
aad
and
xchg
lock
xor
mov
push
mov
shrl
add
imul
cmp
leave
lods
mov
mov
mov
xchg
aas
sti
in
lds
leave
sub
sbb
adc
outsb
mov
sbb
inc
insl
ja
fsubl
insb
add
lds
jmp
inc
hlt
movsl
xchg
adc
xchg
lock
nop
cld
int
and
adc
jge
mov
test
or
sub
inc
jge
gs
out
popa
lahf
adc
and
pop
xor
aas
cmp
scas
push
xchg
loop
xor
mov
imul
decb
push
lcall
and
movsb
test
ret
mov
mov
mov
fwait
and
inc
push
pop
insb
add
or
push
pop
shlb
jno
movsb
mov
repz
add
out
pushl
add
inc
xchg
fwait
or
pop
mov
std
mov
pop
mov
cli
adc
add
lahf
insl
pop
pop
test
sbb
mov
jge
aaa
xor
jmp
iret
fidivl
fs
xchg
aaa
dec
add
push
or
push
cs
fldt
cltd
popf
mov
es
jbe
dec
sbb
sbb
mov
mov
adc
or
mov
in
adc
addb
int3
das
outsl
mov
clc
dec
sub
rolb
sbb
es
sub
and
add
outsb
mov
andl
mov
jmp
sbb
mov
les
sbb
punpckhwd
sbb
cli
addr16
or
fcom
add
aaa
test
cmp
jmp
repz
pop
aaa
aad
or
lcall
jmp
out
mov
fidivrl
divl
dec
pop
imul
insl
or
jg
adc
and
jp
adc
or
jg
mov
dec
jne
nop
mul
lock
addr16
dec
ficoml
dec
adc
loope
add
xor
dec
or
push
adc
cmp
imul
stos
out
roll
inc
cmp
outsb
push
loopne
sub
adc
pusha
jae
outsb
mov
gs
aad
addl
adc
adc
insl
repnz
test
mov
shr
mov
arpl
lahf
movsl
or
out
rcll
mov
das
adc
jo
fmull
xchg
inc
ss
jp
pushl
xor
sbb
mov
add
xor
sbb
loop
mov
prefetchnta
xor
std
xchg
loope
cmc
jae
add
sbb
sub
cmp
mov
popa
adc
aam
cli
sar
pop
add
pop
push
cltd
or
jo
dec
sahf
mov
cmp
sub
mov
dec
and
minps
and
rol
adc
inc
xchg
mov
in
sbb
mov
pusha
or
stc
mov
aad
xchg
cmpsb
mov
xor
test
or
jg
daa
cmovbe
push
rcrb
stos
das
notb
mov
bound
push
call
mov
push
test
dec
iret
xchg
shll
mov
pop
xor
or
pop
xchg
out
idivb
or
movsl
push
or
in
push
std
repz
shrl
mov
sbb
adc
xchg
out
cmpsb
nop
lea
mov
dec
pop
iret
cmp
adc
mov
fadds
pop
mov
add
cli
or
clc
pop
xor
iret
and
cwtl
jae
ret
xchg
and
outsb
jmp
stos
insb
je
mov
push
fsts
push
inc
cmp
cld
daa
mov
dec
fistl
fsts
mov
pop
test
xchg
push
jne
roll
aad
or
cmpl
xchg
rcrb
inc
dec
in
pop
xor
add
sbb
addl
dec
adc
sub
ret
lcall
daa
cmp
or
jne
pop
mov
daa
sub
xor
mov
add
add
hlt
imul
xchg
add
add
cld
pusha
aam
mov
les
lahf
imul
pop
or
jge
fs
jne
ljmp
push
sbb
je
and
ds
jo
pop
add
cmc
dec
stos
scas
arpl
test
add
push
stos
inc
and
int3
mov
pop
mov
scas
imul
dec
mov
inc
adc
and
ret
int3
into
aaa
adc
pop
mov
paddb
fidivl
mov
mov
punpckhdq
scas
jg
dec
fidivl
jg
jecxz
das
add
pop
adc
fbstp
leave
push
das
stos
in
inc
sbb
mov
or
pop
ret
inc
sub
aas
hlt
jae
inc
mov
scas
leave
mov
scas
int3
mov
push
xchg
inc
jle
lods
inc
adc
dec
dec
add
dec
ljmp
mov
pop
inc
pop
xlat
loop
jbe
cmpsl
testb
or
sahf
les
pop
outsl
pusha
lcall
cmp
dec
mov
jmp
inc
jbe
in
mov
jge
mov
adc
inc
mov
dec
inc
jle
add
mov
jae
loop
lock
or
inc
and
lsl
and
repnz
pop
mov
addl
das
fsubl
xor
or
cmpsl
shl
mov
lret
xchg
add
jge
test
push
and
or
ret
cmc
fld
mov
loop
lahf
loope
mov
dec
jmp
push
sub
pop
lods
pop
call
call
scas
daa
mov
cmpsb
mov
sbb
test
pop
loop
jb
mov
xchg
roll
andb
hlt
mov
sub
dec
inc
fsubrl
and
mov
fnsave
mov
add
test
sbb
pop
orl
xor
repnz
jmp
xchg
js
mov
adc
jge
jmp
and
dec
dec
js
lahf
loop
push
mov
in
rcll
call
jne
sub
icebp
mov
enter
or
lret
add
dec
test
bound
in
popf
aas
pop
es
js
jl
xchg
cld
dec
and
push
aad
add
jno
pop
ret
sub
inc
es
cwtl
int
loope
fadds
jg
and
outsl
dec
xorl
cmp
jge
fisubl
mov
out
pusha
push
pop
inc
loope
xor
subb
pop
sbb
lret
mov
xor
push
cmpsb
mov
ficompl
nop
mov
enter
adc
jp
push
inc
push
push
pop
inc
push
mov
fs
sub
imul
std
push
icebp
push
sub
mov
into
push
sub
sbb
popa
adc
and
outsl
and
pop
mov
push
pop
andb
sub
or
jmp
cmp
lret
movl
xor
lea
test
rcl
mov
andl
adc
add
mov
pop
enter
fcomp
out
sbb
cs
pop
sbb
cmc
les
jge
xor
push
test
xchg
cmp
xchg
adc
or
mov
add
mov
push
inc
ljmp
xor
jae
daa
lock
rolb
or
dec
add
jl
xor
sub
ret
push
out
jle,pt
sti
and
and
xor
and
outsb
jmp
dec
call
xchg
add
xor
leave
pop
and
rolb
sub
sub
push
cmp
cwtl
cwtl
pop
orl
jecxz
dec
or
aam
xchg
cli
mov
into
data16
mov
ret
popa
mov
push
mov
inc
add
cltd
xlat
and
rorb
repz
bnd
cld
pop
imul
add
mov
dec
mov
bound
or
cmp
jle
cmp
inc
cli
incb
xchg
sbb
push
sbb
hlt
ret
int
pushf
pop
hlt
out
or
fisttpll
xor
add
mov
call
inc
xor
xor
lods
push
xor
push
es
scas
mov
outsl
aad
nop
sub
test
cmp
push
cmp
fcoms
cwtl
je
dec
push
jle
adcl
aas
das
jl
push
sti
xlat
test
mov
inc
jbe
loopne
jo
mov
add
adc
push
ret
mov
in
sbb
dec
rcrb
dec
mov
jmp
and
test
insl
push
pop
add
push
adc
sbb
push
btl
xlat
sbb
add
test
inc
jns
push
cs
roll
add
arpl
mov
jne
hlt
push
orl
pop
xlat
push
js
add
push
or
jo
out
aaa
and
sti
push
hlt
pop
stos
and
sbb
sbb
aaa
insb
jnp
lret
add
mov
or
sarl
shlb
jb
pop
and
dec
pop
mov
mov
fmul
fimull
outsb
imulb
in
stos
test
aad
dec
inc
clc
ret
add
call
jle
out
push
jo
lcall
outsl
jmp
sub
inc
add
test
mov
adc
arpl
cmpsb
dec
fucom
xchg
addb
je
imul
bound
mov
pop
js
stc
in
mov
cmp
inc
int3
insl
mov
mov
sub
inc
int
jno
jns
inc
and
sbb
sbb
pop
cmpsb
sti
loope
dec
mov
and
cmovp
repnz
popf
inc
pop
clc
out
add
adc
cmpsb
jecxz
and
cltd
dec
in
enter
shll
and
cld
mov
mov
xlat
rolb
lock
ror
cmp
stos
popf
out
decb
and
inc
lods
jecxz
lock
js
mov
invd
push
mov
je
les
jns
fiaddl
arpl
outsl
push
pop
jle
cmp
jge
ljmp
arpl
add
jno
int
adc
jl
jle
sbb
mov
sbb
loopne
clc
add
ret
dec
mov
aad
je,pn
mov
mov
movsb
sbb
and
pop
inc
out
packuswb
in
jg
ret
test
mov
push
pop
ds
mov
pushf
ja
adc
jle
outsb
pop
lods
repz
or
icebp
xor
and
xor
in
lea
or
loop
mov
cmc
lret
ja
cs
cwtl
inc
popa
cmpsl
inc
jge
pop
shl
sbb
insl
insb
dec
jb
and
notb
int3
jp
inc
xor
sti
daa
pop
cmp
pop
xor
jmp
fisttps
xchg
jg
das
sbb
sbb
fildl
dec
lahf
sub
mov
xchg
aas
shrb
and
jg
inc
test
add
jmp
fwait
pop
mov
sbb
daa
add
mov
pop
or
sub
dec
jecxz
dec
test
hlt
nop
divl
daa
cmc
dec
sbb
popa
xchg
and
pop
or
xlat
add
das
fsubr
sbb
mov
inc
xor
and
jne
push
add
and
or
movsl
data16
xchg
bsr
test
mov
cmp
push
imul
fidivl
ficompl
or
mov
test
iret
data16
push
jmp
push
sbb
push
inc
xchg
add
mov
stos
cmp
cs
sub
test
subb
loopne
les
nop
pop
movsl
mov
dec
js
lock
lds
mov
pop
int
cli
sbb
outsl
push
call
rolb
insb
std
icebp
inc
ja
mov
add
imul
in
pop
adc
call
pop
dec
bnd
shll
xor
fwait
imul
idivl
fwait
mov
fdivs
push
jle
sub
xor
je
dec
sbb
fldt
and
jae
repnz
ret
loope
push
sub
subl
and
fbld
jmp
lret
repnz
mov
dec
pop
jmp
pop
xchg
mov
mov
stc
cmp
jne
dec
xchg
push
mov
sub
jle
in
aas
pop
cmpsl
lea
lret
dec
std
jne
pop
and
jmp
pop
dec
cltd
and
mov
add
or
sbb
lcall
inc
xor
test
jae
aam
add
add
mov
push
cwtl
cs
pop
imul
mov
hlt
adc
lcall
pop
pop
or
or
aam
cwtl
mov
dec
test
lods
adc
mov
add
push
scas
cmp
mov
mov
cld
pop
push
fimull
hlt
sbb
mov
test
push
push
incl
aam
lods
dec
jb
and
int3
cmp
push
outsl
aad
mov
mov
movsl
rcrl
sbb
rorl
mov
jo
call
js
mov
clc
rol
pop
cmpsl
jo
int
or
mov
scas
or
add
sarl
lahf
xchg
and
inc
add
mov
or
push
mov
lock
inc
dec
jecxz
mov
out
cmp
leave
inc
mov
lock
je
or
mov
xchg
inc
cs
faddl
adc
add
pop
sbb
xchg
data16
pop
je,pt
xor
sbb
rorb
add
ljmp
cmp
aaa
jne
or
pop
clc
das
es
lods
push
xlat
fsubs
jno
clc
cld
dec
stc
call
ja
inc
pusha
shll
das
inc
repnz
xchg
xchg
incb
jo
lds
popa
sbb
insl
aam
fsubrl
lock
sbb
sbb
add
jo
das
cmc
in
dec
lcall
jae
lods
leave
int
mov
stc
add
addl
movl
loopne
bound
in
add
sub
insl
add
or
inc
add
orl
xchg
int3
fdivl
fwait
add
cmpl
or
test
adc
adc
and
bound
push
mov
std
or
lods
lds
imul
idiv
lret
push
das
add
aas
mov
sbb
adc
push
sahf
and
add
std
or
push
outsb
stos
push
lahf
inc
int3
inc
movsb
dec
or
leave
movsl
or
shlb
push
test
or
add
into
mov
js
push
cmpsb
adc
cli
bound
rcrb
ja
cmp
ss
data16
mov
or
ja
icebp
pop
xchg
sbb
test
test
stos
adcb
mov
nop
ret
js
dec
dec
or
mov
dec
test
rcl
xchg
lea
jmp
cli
cmp
outsb
xor
inc
or
sbbl
xor
in
cwtl
sbb
add
in
push
arpl
mov
mov
leave
push
mov
je
aaa
sbb
mov
pop
or
add
and
test
insl
shrb
loope
out
lods
cwtl
stos
imul
adc
mov
aas
lcall
mov
test
hlt
inc
add
xor
dec
inc
sub
xchg
aam
aaa
loop
add
mov
hlt
insl
imul
inc
insb
jp
int3
ja
add
mov
sahf
cltd
mov
daa
or
test
adc
adc
je
mov
and
dec
jge
pop
outsl
test
add
or
lret
rcrl
das
sbb
push
jnp
jmp
dec
add
inc
jmp
adc
stos
xor
test
popa
sub
addl
mov
lods
sbb
mov
ljmp
in
add
js
adc
mov
jmp
orb
cld
in
fadds
cmp
sbbl
xchg
shlb
test
xor
sbb
pop
jae
mov
xor
je
lods
sar
test
push
add
add
sti
sub
hlt
iret
ss
aam
sbb
adc
mov
insl
pop
jno
mov
shlb
roll
or
jp
mov
push
loope
mov
xchg
jo
inc
adc
test
test
testl
rorb
sbb
sbbb
push
sbb
sbb
dec
call
jbe
adc
adc
enter
les
adc
sub
pushf
js
cmpsb
cltd
xchg
in
rclb
mov
pop
add
mov
adc
dec
out
fcompl
push
icebp
dec
and
repnz
mov
scas
es
outsl
aad
adcb
add
xchg
movd
lods
mov
jl
mov
push
sbb
and
jbe
sub
lea
call
xlat
rolb
push
rol
mov
dec
jmp
adc
mov
testl
push
dec
in
test
jge
lods
add
adc
add
fbstp
movsb
or
cli
enter
and
frstor
cmp
in
sbb
pop
movsb
push
push
pop
gs
popa
lods
xor
popa
dec
in
push
pop
pop
les
scas
pop
dec
imul
xor
shlb
push
ja
mov
or
outsl
pop
xor
pop
clc
jno
rcr
jae
adc
cli
shrb
and
mov
int
shrb
inc
sti
and
dec
jbe
and
ljmp
jmp
push
push
jb
inc
xchg
gs
mov
sub
push
call
sub
shll
sbb
ss
adc
outsl
sbb
mov
sub
cmp
ss
sbb
inc
lods
je
pop
push
or
insl
imul
pop
test
ret
stos
pop
push
loope
cmpsl
xor
jp
loop
xchg
jmp
les
mov
push
loopne
push
add
bound
pop
adcb
inc
adc
aad
fmuls
cld
je
aad
inc
cs
add
out
push
adc
jo
mov
insb
out
push
enter
jb
dec
pop
jo
cs
popa
cmp
fldl
out
aad
loopne
stos
inc
sbb
jo
pusha
mov
fbld
add
push
ja
push
andl
dec
push
ret
test
mov
bound
sbb
sbb
add
stc
icebp
dec
sbb
ret
adc
ret
and
mov
mov
adc
cmpsl
sub
daa
add
ss
aad
mov
xor
fisttps
add
test
cltd
sbb
sub
rolb
loopne
sub
addl
fdivl
loope
xor
push
adc
push
fsubl
cmp
push
outsl
popa
xchg
imul
mov
add
or
addr16
out
nop
xor
iret
inc
and
xchg
icebp
xor
iretw
mov
test
gs
and
ljmp
imul
pop
mov
xchg
pop
mov
inc
shr
pop
mov
stos
adc
lock
call
pop
inc
pop
lods
lods
lcall
jl
adc
icebp
dec
add
rorb
cmp
cmpsb
mov
lahf
test
mov
mov
lock
movups
adc
mov
test
xorl
stos
fstps
fwait
mov
or
lcall
push
into
cmp
lock
inc
hlt
mov
jo
pop
or
pushf
xchg
jnp
loope
sub
mov
xchg
subl
or
or
or
sub
add
and
dec
cltd
dec
mov
push
rol
or
and
pusha
shlb
inc
add
inc
xor
add
shll
push
cmpl
in
les
add
pushf
xchg
rolb
xor
fimull
mov
and
dec
push
lock
aaa
jp
xchg
je
push
push
mov
mov
fsts
mov
dec
cmp
mov
movsl
dec
addb
lahf
and
or
cmc
push
xor
push
outsb
xchg
xchg
jmp
mov
aaa
push
push
sub
adc
loopne
cmpsl
nop
adcb
aam
dec
xchg
jle
inc
adc
or
sub
sbb
insl
add
lahf
cmc
and
xor
jno
add
xor
sbb
sahf
cmp
cwtl
push
fs
rorl
scas
dec
and
daa
loopne
scas
mov
jae
test
pop
xlat
outsb
add
imul
int3
or
push
mov
mov
mov
xchg
sbb
sbb
pop
jns
scas
xor
push
jno
add
popa
aam
cmp
scas
scas
push
js
ret
inc
fsubrl
push
fildl
mov
lret
jae
mov
push
imul
lcall
pop
pop
bound
mov
mov
std
jne
mov
adc
verr
dec
daa
bound
and
ljmp
in
iret
add
inc
lahf
test
xorb
or
add
adc
test
mov
mov
movsl
and
push
aam
test
sub
ds
orb
sbb
movsl
pop
xor
push
in
mov
xchg
cltd
fimuls
lcall
sbb
push
gs
or
cmp
adc
int
and
gs
ret
jge
mov
cmpsl
push
push
rcrl
mov
das
pop
inc
xor
loope
add
loope
loop
test
cmp
sub
jnp
adc
pop
pop
repnz
lret
sbb
leave
push
push
jae
push
nopl
les
out
dec
ljmp
cmp
dec
dec
insl
jo
and
loope
xchg
cmpsb
ror
in
xor
mov
mov
jl
lds
xor
push
add
dec
lock
incl
cld
orb
mov
arpl
xchg
aad
jge
mov
mov
or
xor
out
pop
xchg
cmpsb
jg
mov
push
and
xchg
xlat
or
push
in
add
sti
mov
in
dec
xor
cmp
push
lock
andnps
xor
test
push
test
xchg
jns
nop
or
sbb
xchg
scas
movsl
pushf
pop
jne
pushf
daa
test
dec
jp
cmpsl
inc
sub
pop
rolb
add
popa
jmp
dec
mov
xor
push
ret
cmc
stos
sub
addb
iret
pop
sbb
gs
int
dec
in
je
les
sub
push
pop
dec
outsl
loope
stos
inc
cmpsl
fldl
addr16
and
adc
push
add
xlat
in
add
imul
mov
scas
je
mov
loop
adc
scas
dec
fsts
pusha
push
cmc
mov
jbe
inc
push
ret
and
sbb
cwtl
cmpsb
or
insb
or
movsb
jl
imul
sub
adc
popf
sbb
mov
mov
dec
aas
loope
sbbb
pop
xchg
inc
jb
outsb
xor
inc
push
test
aam
pop
sahf
jbe
subl
push
and
lods
ss
aaa
movsl
das
rol
mov
jae
loope
fs
stos
push
add
mov
xchg
inc
scas
mov
pop
add
mov
dec
lods
inc
or
add
sub
and
xor
mov
ljmp
lds
push
push
adc
imul
stc
loopne
movsb
out
imul
iret
outsb
test
arpl
mov
adc
jb
lds
imul
dec
and
ja
mov
cmc
js
test
mov
mov
or
hlt
loope
inc
aas
add
pop
dec
loope
jns
lods
adc
les
lret
mov
add
popa
out
sbb
ss
scas
loopne
sub
push
lods
mov
ret
test
inc
jbe
pushl
xor
lock
scas
lea
jle
push
sub
mov
adc
jnp
cmpb
pushf
xor
or
pop
inc
adc
xchg
test
pop
mov
or
dec
jecxz
add
sub
jo
jecxz
and
ret
sub
movsl
out
mov
push
ret
mov
mov
adc
iret
ret
xchg
push
pusha
lcall
push
insl
add
lahf
rorb
sub
out
inc
sti
outsl
loope
push
add
cwtl
xor
mov
shr
add
xchg
add
fs
sub
shll
xchg
sahf
and
sbb
data16
not
push
ret
jb
cmpsl
cld
pop
xor
xor
int
add
dec
or
pop
sbb
divl
and
test
jle
jl
xchg
jne
add
inc
sub
mov
cltd
cmova
test
insb
mov
xchg
jge
test
sub
pop
repnz
add
out
mov
sti
xchg
mov
movsl
add
push
addr16
jl
push
stc
bound
movsl
jp
xor
jno
mov
mov
ret
pusha
xor
add
inc
or
mov
das
fstps
fimull
gs
mov
bound
inc
xchg
sub
outsb
and
jp
mov
push
and
xchg
ljmp
push
push
aaa
jno
mov
nop
push
das
mov
cs
imul
imul
cmpsb
xor
push
dec
pop
push
negl
sbb
out
idivl
lock
in
jle
lock
sbbl
cmp
jp
repz
loop
inc
and
mov
mov
dec
psrld
insl
or
cmpsl
jle
push
dec
push
stc
rorb
mov
pusha
sahf
xlat
roll
jbe
push
mov
cmpsl
dec
cld
in
imul
cmp
mov
pxor
cmpl
rclb
jmp
pop
lret
inc
sub
sub
adc
mov
sub
in
cmp
jmp
mov
or
jge
sub
shll
outsl
fisubs
cwtl
dec
jge
or
cmp
xor
scas
fwait
sub
sbb
pop
xchg
inc
sbb
adc
inc
sub
outsw
ret
dec
and
mov
dec
loopne
and
fs
jae
aam
das
subl
cmp
cmp
das
inc
cmc
dec
push
sbb
xchg
outsl
out
stc
mov
roll
cmpsb
xchg
fs
inc
or
mov
adc
adc
int
mov
int
shll
imul
es
in
dec
ljmp
and
jae
inc
fnstsw
adc
dec
cli
out
dec
lea
loope
sub
popf
pop
lds
fucompp
mov
je
pop
in
sbb
mov
outsl
cli
cmp
and
lcall
jmp
mov
push
adc
aas
adc
lea
mov
pop
adc
shlb
fildll
stos
mov
sbb
xor
incl
pop
mov
mov
add
mov
or
pop
mov
shl
jo
mov
xor
sub
daa
sbb
xlat
push
inc
jne
adc
rcrl
scas
ljmp
nop
push
cmp
inc
mov
mov
pop
sahf
xchg
imul
mov
cmp
jbe
dec
les
mov
fldl
inc
sbb
mov
das
rorl
or
dec
push
mov
cld
jno
mov
test
clc
test
xchg
adc
test
cmp
sti
movsb
pop
loopne
xorb
add
aas
and
or
or
ret
adc
mov
pop
mov
mov
xchg
sahf
cmp
sbb
push
mov
fildl
pop
jle
lods
das
or
mov
adc
inc
pop
mov
aad
stos
mov
dec
add
dec
sbbb
or
outsb
adc
cmp
cmpsb
inc
shrd
dec
cmp
ret
add
sub
xor
je
addr16
test
sbbl
cwtl
pop
push
pop
mov
cmp
xlat
mov
mov
stc
adcl
inc
call
imul
mov
xchg
dec
daa
in
dec
repz
mov
adc
cmp
dec
rorb
mov
add
xchg
add
mov
int3
push
adc
push
or
mov
arpl
jle
and
adc
xor
mov
xor
clc
sub
xlat
std
adc
ds
nop
cwtl
or
mov
es
push
xchg
sahf
lea
inc
xlat
pop
aaa
loop
nop
inc
aam
testl
cmp
repz
pop
ds
cltd
sbb
and
faddl
pop
stc
cs
pop
jno
and
inc
ja
test
lock
in
cmpsl
in
stos
je
dec
rcll
xchg
test
mov
int3
je
mov
fwait
jo
inc
ret
sbb
push
outsb
xor
ds
outsl
cli
xorb
mov
cmpl
loope
stos
insb
sub
test
fcoml
inc
and
pop
pop
insl
or
lea
faddl
xchg
inc
mulb
outsb
pusha
aaa
or
and
movsl
fcmove
aam
sbb
aad
inc
mov
cmp
pop
cmp
mov
scas
xchg
shll
insb
mov
out
test
mov
js
xor
subb
mov
and
lret
jno
sub
push
test
sar
push
or
sbb
jmp
lret
adc
xor
sahf
std
test
test
and
inc
xor
sub
rcrl
mov
adc
or
xor
jbe
or
rorl
shl
out
lods
sbbb
push
out
std
shrb
sbb
sahf
inc
inc
pop
cmp
fstpl
push
push
ret
add
rcll
out
push
andl
push
ds
iret
aas
dec
sub
jle
es
cmp
jl
and
or
iret
repz
lock
mov
push
push
push
mov
mov
cwtl
pop
out
in
icebp
xchg
cmp
push
and
ret
adc
into
sub
cmpsb
or
dec
js
pusha
pop
mov
add
loopne
inc
mov
dec
jo
pop
xor
cs
sti
xor
rorl
add
and
adc
jecxz
subl
loopne
aam
roll
mov
sbb
mov
push
mov
xchg
xchg
dec
int
popa
repnz
xor
push
or
popf
ljmp
ds
nop
loop
test
push
scas
pop
pop
xchg
jb
repz
pushl
mov
xchg
xchg
cmp
into
inc
cmp
or
lock
mov
inc
xor
pop
or
roll
pop
push
pop
sub
cmp
lret
xor
cmp
lock
sahf
les
gs
into
pushl
inc
push
sbb
cmp
fsubs
cmp
jne
pop
lods
insb
lret
insl
mov
push
shrb
loope
fdivl
stos
jl
add
sbb
shll
cmc
push
push
outsb
cmc
adc
fcoms
inc
sub
addr16
cmpsl
mov
scas
mov
mov
or
push
sub
shlb
or
movsl
insl
stos
mov
cli
or
cs
xlat
incb
jno
sbb
dec
stc
mov
sbb
loope
adc
adc
call
and
add
clc
stc
inc
inc
xchg
das
push
adc
bound
xchg
movsb
and
lea
and
es
loop
sbb
adc
add
mov
loop
sub
mov
mov
rcl
lahf
dec
rorl
shll
push
imul
cmpsl
and
add
fistpll
adc
nop
pusha
aam
in
xor
popf
jno
lcall
int
outsb
sbb
leave
cmpsl
test
imul
insb
pop
sub
sti
pop
cmp
add
fldcw
and
jg
inc
mov
xor
jno
xchg
lea
xchg
sub
adc
push
dec
insb
lret
pop
mov
mov
cmpl
mov
clc
leave
xchg
sbb
leave
inc
out
or
fiaddl
jle
mov
cmpsb
xchg
lock
or
push
out
dec
xor
pusha
and
test
mov
mov
mov
xchg
test
lock
incb
imul
dec
dec
incl
adc
test
mov
faddl
roll
dec
inc
enter
jmp
add
in
shrb
adc
rcll
ret
jo
mov
mov
mov
xor
testb
mov
add
adc
xor
push
mov
pop
or
or
pusha
das
imul
xor
adc
or
cmp
arpl
mov
or
enter
adc
xchg
jl
inc
aad
mov
xchg
arpl
dec
out
pop
mov
jno
addr16
push
mov
insl
jo
ljmp
push
imul
cmp
xchg
ret
jnp
push
cmpsl
adcb
jl
out
js
imul
lock
dec
dec
hlt
es
inc
pop
scas
or
test
mov
out
shrl
and
dec
ret
fiadds
cmpsb
add
mov
xor
insb
dec
imul
mov
add
test
enter
imul
in
lahf
xor
scas
mov
dec
inc
adc
push
cmpsb
dec
push
stos
inc
inc
dec
xchg
sbb
mull
cmp
jecxz
in
sbb
testb
inc
and
rclb
mov
sbb
test
pop
sbb
test
dec
jp
adc
sub
inc
sub
mov
jnp,pt
ret
je
fucomip
mov
xchg
jns
mov
pop
mov
flds
push
sub
push
jle
sub
jecxz
sub
or
push
call
stos
adc
sbb
push
inc
fists
xor
push
lahf
push
ret
jne
cmp
push
xchg
push
je
mov
push
daa
or
movsb
mov
mov
adc
cmpsb
or
inc
or
aam
loop
test
stos
repz
pop
inc
cld
jmp
xor
fwait
inc
stos
dec
cmp
inc
sub
ror
and
inc
adc
sbb
insl
sub
popa
jb
xchg
adc
sarl
insl
xor
pushf
jb
and
sub
bound
and
sti
dec
fcoms
into
aad
rolb
sub
dec
jmp
ficoml
test
push
jp
xlat
sub
push
cmpsl
or
orl
mov
fdivrp
nop
cmp
lods
lock
lods
enter
hlt
cltd
jle
jbe
dec
jns
mov
dec
mov
mov
jmp
jno
and
mov
and
mov
mov
ds
push
movsl
mov
out
add
push
or
add
push
sub
filds
pop
adc
mov
or
je
mov
jge
movsb
les
fs
and
cmovb
xchg
pop
xchg
bound
sbb
out
mov
adc
and
xorl
jbe
mov
mov
push
movsb
xchg
add
loope
jp
mov
push
ret
pusha
dec
lahf
xchg
jo
push
sbb
fcmove
inc
fisttps
test
sbb
sub
mov
arpl
xchg
jle
lret
enter
pop
lcall
popf
js
push
in
mov
int
cmpsb
dec
inc
ret
jl
cmp
jecxz
xchg
fists
add
int3
push
add
sub
dec
ljmp
xor
add
cmp
or
test
adc
xchg
jmp
in
push
lea
inc
pushf
arpl
mov
inc
lods
mov
inc
or
mov
iret
mov
or
int
dec
aaa
sbb
xor
lods
pop
jns
mov
ss
sbb
lea
sbb
imul
mov
add
aad
xor
pop
push
popa
push
jno
test
and
inc
popf
pop
stos
pop
cmp
into
xchg
mov
xchg
or
rolb
bound
lcall
mov
flds
notl
lret
add
insl
setge
cmp
mov
cmp
cmp
fistps
jns
iret
mov
pop
add
jns
rorb
push
jg
call
or
add
ret
in
cmp
mov
or
test
inc
adc
fs
mov
cmc
xchg
movsl
mov
loope
mov
push
loopne
lods
ja
dec
sahf
pop
cmp
icebp
cmp
fs
adc
cmp
add
sbb
sbb
or
rolb
sar
cmp
inc
fcoml
jo
or
and
leave
sbb
push
imul
fbld
inc
dec
or
xchg
shlb
shrl
inc
lret
shrb
inc
subb
dec
dec
pop
push
sbb
adc
mov
or
in
inc
mov
sbb
aas
sbbl
adc
mov
jg
sub
adc
pop
sbb
mov
adc
push
jo
ret
imulb
ss
mov
sbbl
add
sbb
xchg
sbb
fisttpll
ficompl
jl
push
dec
arpl
pusha
jmp
out
xor
cmpb
scas
aaa
cltd
lcall
sbb
fwait
mov
dec
inc
aaa
lret
inc
and
arpl
movsb
out
dec
nop
push
pop
inc
lea
data16
aas
mov
xchg
repnz
mov
and
pop
aas
test
jns
adc
pop
cltd
call
pusha
testl
loopne
stc
xchg
test
outsb
testb
pop
push
xchg
inc
cmp
jp
popa
ljmp
lret
adc
inc
mov
mov
daa
js
mov
ds
outsb
xor
and
in
jecxz
loope
in
rorl
sbb
sub
or
ret
pop
rol
adc
ss
fisubl
cmpl
and
ja
ds
shr
sbb
test
int
jo
adc
je
adc
in
aam
cmp
jmp
inc
orl
data16
mov
pop
mov
lret
adc
dec
xor
shll
mov
and
push
inc
push
mov
xlat
nop
imul
data16
ljmp
jns
movsb
sbb
push
cmpsl
fsubs
inc
sbb
add
push
xorb
call
inc
sbb
testl
or
mov
cld
pop
and
cmp
sub
adc
scas
out
sub
inc
add
loop
inc
popf
add
bound
insl
ljmp
pop
push
cmp
mov
sbb
mov
shll
jns
xor
sub
pop
int
push
push
sbb
jo
leave
lods
sbb
adc
jmp
popa
inc
jnp
loopne
sub
sahf
pop
push
shll
rorb
int
adcl
dec
sbb
cmp
icebp
xor
pop
aad
push
insl
jne
fcomi
lahf
subb
push
fmuls
jns
ljmp
mov
lret
cwtl
je
add
cmp
inc
or
adc
je
sahf
dec
add
xchg
add
movsl
pop
jp
xchg
and
cs
das
push
pop
and
sub
jae
das
scas
and
mov
push
mov
pop
cmp
dec
jo
test
adc
push
push
mov
jb
and
test
xor
push
pop
cmp
push
inc
cmp
je
and
adc
test
sbb
int
mov
pop
mov
stc
pop
adc
pop
mov
xor
rorb
adc
adc
repz
jle
pop
aaa
fcmovb
lcall
or
test
mov
aad
outsl
stos
jge
xchg
and
clc
mov
jg
insl
sbb
ret
cli
mov
jg
inc
adc
scas
sbb
inc
pop
lret
xor
or
ret
or
mov
mov
jnp
xchg
nop
mov
push
insl
adc
mov
decb
push
or
jb
shlb
sub
nop
add
popf
add
jno
inc
mov
clc
push
loopne
dec
sub
arpl
add
inc
sub
sbb
ljmp
shll
sub
and
push
aam
dec
lds
jo
leave
in
stos
mov
xor
stos
and
and
sub
fnsave
pop
addl
enter
jo
cltd
and
mov
pusha
inc
test
sub
inc
cs
add
in
cld
pusha
xor
inc
push
sbb
or
pop
or
rorl
mov
and
lcall
pop
clc
stos
mov
sbb
cwtl
push
jno
nop
sbb
popf
mov
add
fwait
mov
cmp
pop
sbb
arpl
sub
lock
add
xchg
inc
push
sbb
les
iret
cmpsl
or
inc
or
inc
mov
fsub
sbb
movsb
cmpsl
xchg
pusha
mov
fmuls
movsb
inc
jnp
loopne
movsl
in
bound
stos
or
addb
mov
lock
fwait
out
loope
rorl
push
push
stos
or
dec
mov
rorb
sbb
aaa
jno
xlat
pop
jne
les
ss
daa
or
clc
xchg
je
imul
insl
adc
add
insl
orb
pusha
gs
cmp
mov
or
mov
fcmovnb
push
test
mov
mov
mov
and
jl
or
stos
inc
jb
and
stos
out
lods
inc
mov
mov
mov
arpl
jecxz
pop
pop
test
dec
popf
arpl
outsl
dec
sbb
cmpsl
lret
mov
inc
add
cmp
lret
lret
lcall
subl
fcmovb
mov
int3
lock
jns
das
daa
sbb
and
mov
dec
lret
call
inc
arpl
imul
sub
pop
jno
adc
sbb
sub
cmpsl
xchg
mov
addb
scas
fisubs
sub
rclb
rolb
push
lea
loopne
sbb
nop
test
mov
sub
fldl
inc
or
sbb
ret
lods
and
pushf
imul
jecxz
inc
cmp
pop
push
push
das
rcrl
mov
cmp
xor
std
in
andl
bnd
jno
lds
xor
push
aad
add
jb
popf
jmp
rclb
sub
sbb
add
or
mov
lods
movsb
adc
jg
inc
imul
loope
mov
movsl
jno
popa
inc
pop
in
xchg
cs
movsb
test
xor
stc
push
lahf
dec
out
or
inc
inc
push
mov
push
cmp
cmp
outsl
rol
inc
mov
inc
imul
cmp
jle
cli
or
and
pop
inc
dec
test
stc
push
lret
movmskps
in
movsb
mov
ds
bound
and
insl
gs
shrl
ret
xchg
mov
xor
dec
ret
in
addr16
pop
pop
adc
movsb
lret
mov
and
push
stc
stos
ljmp
xlat
fidivs
lds
xlat
add
mov
and
mov
popa
js
cmpps
push
lea
ja
xchg
push
dec
in
lcall
adc
jnp
cld
pop
shlb
inc
cmp
push
inc
add
je
dec
js
loopne
pop
andl
imul
jns
lret
imul
push
jb
dec
mov
jns,pt
dec
dec
push
cmpsl
fs
jno
and
in
test
in
out
xchg
and
lods
lds
adc
dec
int3
adc
push
enter
je
je
pop
pop
add
xchg
push
push
cmp
pop
loope
inc
jmp
mov
out
fnstcw
push
mov
stos
push
movsl
push
lods
data16
add
push
rcll
mov
push
push
cwtl
lcall
outsl
jb
test
inc
or
in
pushf
xor
adc
pop
dec
xchg
mov
cltd
push
inc
pop
jae
adc
dec
jl
daa
enter
mov
stos
cli
js
call
loop
insl
gs
gs
sbb
push
lahf
adc
jmp
inc
adc
test
mov
inc
add
mov
push
cmp
sub
test
add
adc
dec
lock
xor
add
rcrl
adc
test
out
mov
loope
xchg
dec
dec
pop
and
inc
pop
mov
inc
fsubs
fiaddl
shlb
adc
cld
lea
popf
xor
ljmp
and
nop
cmpsb
xor
xlat
arpl
aad
push
cmc
sbb
sarb
lock
sub
mov
js
mov
imul
mov
adcb
add
mov
jp
in
ja
mov
sbb
or
ret
push
mov
and
add
push
std
sti
cmp
push
testl
push
leave
push
cmp
mov
test
push
dec
mov
xor
out
sbb
add
sub
shrl
inc
rolb
mov
jecxz
stos
subl
and
sti
and
daa
jecxz
add
lret
dec
es
test
lret
mov
daa
sti
mov
dec
xchg
sbb
push
push
cmp
fs
int
clc
sub
sbb
aas
lcall
daa
cmpl
ljmp
mov
and
jbe
inc
push
sub
js
test
push
rorb
push
test
sbb
pop
mov
test
cltd
pop
popf
adc
add
aam
push
mov
adc
lock
out
and
pop
ljmp
jge
je
xor
sub
addr16
cmp
lahf
cmp
adc
scas
add
pop
ja
mov
dec
cli
fdivrs
lods
aam
pusha
shll
mov
imul
ja
cmpsb
ret
test
adc
push
fisttpl
mov
rolb
imul
mov
cmpsl
push
cwtl
dec
cmc
add
cmp
pop
inc
push
call
fildll
int3
xchg
sbb
mov
xor
popl
dec
fadd
fsubrs
inc
add
sbb
shll
cmp
mov
adc
aad
fildl
pop
mov
test
sbb
xor
mov
test
movsl
test
icebp
or
fucomi
push
movsb
mov
push
jg
mov
xor
mov
aas
push
push
sub
or
cmpsb
xchg
inc
lods
repnz
mov
inc
sbb
gs
ljmp
push
cmp
fisttps
or
xchg
mov
pop
xor
in
or
or
and
sbbl
or
mov
sbb
xchg
mov
mov
lcall
mov
pop
pop
movsb
std
mov
lds
iret
jns
das
mov
aas
mov
movsl
pop
daa
lcall
lods
inc
clc
lcall
daa
or
push
inc
mov
xchg
addb
ljmp
inc
xor
sub
add
xchg
mov
stos
shll
or
mov
clc
outsb
aad
mov
sbb
or
sbb
pop
adcb
xor
gs
push
in
mov
int
mov
pusha
sub
inc
mov
in
orl
sub
imul
jmp
sub
int3
xchg
xchg
pop
cmc
pop
lods
cltd
out
lahf
inc
pusha
adc
pusha
mov
shl
pop
add
ja
mov
aaa
or
cli
jne
ljmp
sahf
mov
lcall
jne
xlat
push
or
mov
xlat
push
mov
xchg
outsb
sub
add
mov
popf
jg
inc
syscall
ss
push
lock
mov
aad
sbb
xor
adcb
subl
add
scas
sbb
cmpsb
das
pop
arpl
gs
shlb
pushf
pop
je
std
inc
ljmp
xchg
cmp
sub
inc
out
jne
pop
lods
push
call
nop
mov
aaa
out
cmovae
stos
pop
in
inc
mov
xor
sbb
adc
popf
jne
push
pop
jno
push
sub
xor
in
sub
cmc
mov
xor
jg
fmuls
in
push
mov
es
cs
pop
add
adc
sub
add
out
mov
sbb
aad
add
jbe
das
dec
mov
dec
scas
add
aad
imul
in
cwtl
xlat
ret
push
pop
cmp
scas
leave
ja
pop
mov
jne
dec
es
add
push
pop
shll
lret
dec
daa
hlt
test
pop
aas
fbstp
mov
sub
jno
fmuls
pushf
cmp
mov
or
sbbl
xor
push
sub
adc
test
inc
fcmovne
inc
inc
adc
pusha
sub
test
pop
adc
insb
ret
popf
mov
je
divl
scas
jae
push
orl
xchg
jl
and
aas
mov
popa
push
sbb
in
pushf
jmp
mov
or
mov
arpl
jp
jns
divb
cld
hlt
je
or
xor
inc
jge
or
sbb
jle
xchg
xchg
inc
imul
adc
xchg
pop
mov
adc
mov
enter
pop
shr
add
loope
rcll
adc
roll
loope
test
fisttpll
push
inc
pop
xchg
mov
inc
pop
subl
fwait
test
xchg
sahf
cmpsb
xor
das
add
xor
add
lock
mov
inc
andl
into
push
cmpsb
push
nop
adc
pop
enter
xor
cmpsb
das
pusha
or
jb
push
push
daa
test
push
pop
mov
dec
xchg
aad
rcr
dec
jno
push
test
mov
jo
push
pusha
lea
and
testl
ds
stos
inc
dec
aam
cltd
push
and
inc
fdivrl
stc
xchg
or
add
outsb
sarl
push
adc
push
rolb
adc
lock
inc
mov
shll
imul
adc
sub
popf
inc
add
or
negl
push
dec
mov
loop
inc
sbb
cs
push
daa
jo
shll
and
dec
mov
mov
lea
loop
sbb
loope
stos
xor
jno
cmp
sub
in
xchg
or
inc
popf
jae
sbb
dec
mov
or
gs
add
jne
test
popf
aam
xor
imul
add
loop
jne
xchg
enter
sub
int
jns
inc
push
int
jbe
and
jge
data16
sub
scas
rcll
mov
fisttps
pop
mov
push
lahf
add
sub
stos
mov
dec
popf
rcrl
push
cmc
sub
int3
xchg
adc
mov
adc
xor
add
xchg
mov
dec
and
je
icebp
inc
or
xor
jno
push
xchg
add
push
sahf
dec
ret
sbb
adc
fistps
insl
scas
dec
lret
test
jbe
clc
mov
dec
xchg
fsubl
je
cltd
push
mov
sbb
scas
jno
dec
fwait
jae
inc
or
pop
mov
add
jl
or
enter
mov
bswap
inc
imul
notl
cmp
test
roll
dec
int
js
sbb
inc
popl
rcl
fistpll
dec
test
ss
aam
add
add
adc
cmp
adc
shll
or
stc
les
popf
push
cltd
nop
mov
mov
jle
mov
rorb
push
add
pop
pop
dec
rorb
daa
push
mov
adc
mov
pop
imul
pop
mov
ret
arpl
inc
sti
mov
les
pop
daa
sub
out
lods
add
cli
add
lods
and
push
sub
lret
and
xchg
andb
sub
bound
repz
leave
orl
inc
mov
test
and
push
jns
xor
lods
fists
jno
cmp
testl
lret
mov
pop
fisttpll
sbb
dec
mov
jae
or
pop
sbb
icebp
popf
outsb
lahf
push
sub
icebp
lret
scas
movsl
or
nop
pop
add
mov
insl
mov
jne
xlat
cmp
mov
aad
xor
sahf
rcrl
jmp
aad
cs
xchg
les
fucomip
add
loopne
mov
fwait
orl
mov
lds
test
or
loopne
or
inc
mov
sub
cmpsl
adc
fwait
ja
sub
push
imul
or
xor
fnsave
insl
bound
and
mov
int
aas
and
andl
inc
imul
nop
fdivl
push
push
imul
push
dec
sub
xlat
xor
sti
mov
add
cmpsb
dec
push
insl
rclb
dec
lods
sub
jns
mov
or
pop
cmp
mov
es
push
je
inc
test
xchg
mov
jbe
test
xchg
cmpsb
xor
mov
rorl
pop
or
pop
dec
sbb
mov
inc
bound
addb
dec
loope
out
mov
and
adc
sbb
sub
addr16
movsl
add
testb
mov
jns
rorb
inc
imul
movsb
add
jge
jecxz
jno
aad
fwait
xor
test
dec
shll
stos
xor
repz
push
mov
mov
sub
mov
mov
inc
push
xor
cmc
and
cmp
mov
xchg
dec
fs
mov
test
dec
sbb
pop
loope
push
add
mov
je
pop
jl
jle
sub
sub
es
dec
cmp
lret
mov
xor
fldl
shlb
fs
mov
lock
push
adc
out
scas
sub
mov
cmpsb
sub
movsb
cltd
xchg
pop
sbb
sbb
cs
push
xchg
icebp
sub
pop
adc
adc
pop
test
movl
in
adc
mov
or
out
icebp
fsubs
adc
int
ficomps
addl
add
stos
ja
iret
xor
fwait
sub
aam
add
rcrb
xor
loope
lea
sbb
repz
rcll
cmp
inc
stos
stos
or
andb
push
xlat
cmpsl
bound
pop
jb
mov
adc
popa
lds
pop
sbb
and
push
int3
mov
cltd
or
in
jmp
cmpsb
xchg
mov
test
mov
cmpsb
popa
push
pop
and
or
sbbb
enter
stc
incl
pop
dec
and
push
movsl
vpmacsdqh
rol
imul
add
mov
lods
sub
and
lahf
push
adc
hlt
and
pop
movsb
call
icebp
push
ja
addr16
cmp
subps
pop
data16
nop
jmp
mov
test
push
enter
outsb
int3
cwtl
add
es
mov
adc
into
and
lock
or
adc
or
and
cmp
test
ja
popa
das
inc
mov
test
or
sbb
sbb
insb
inc
mov
bound
inc
mov
int3
clc
add
aam
mov
jg
mov
pop
xchg
push
xor
push
adc
lcall
hlt
or
scas
popf
xchg
mov
adc
adc
testl
jge
clc
mov
sub
add
mov
and
aad
test
inc
js
pop
and
adc
pop
stc
fwait
ret
fimuls
push
rcr
xchg
xor
fcoms
test
inc
inc
addl
test
lea
or
cld
orb
mov
sbb
mov
cmpsb
add
in
mov
pushf
lcall
mov
cmp
cli
or
or
push
loope
xor
push
mov
cmpsl
out
cwtl
sub
cmp
inc
sti
inc
or
push
and
insl
dec
test
inc
push
ljmp
hlt
and
pusha
pop
ss
les
xchg
ffreep
pop
mov
mov
add
shll
inc
fdivrl
or
scas
shlb
jg
pop
pop
xchg
sbb
dec
mov
pop
fisttpl
add
not
sti
fdivl
stos
and
adc
mov
lea
ja
inc
dec
aas
sub
xchg
addb
fndisi(8087
out
jecxz
inc
fdivr
jno
add
pusha
xor
insb
imulb
inc
mov
and
or
sbb
cwtl
fiaddl
mov
fsubrl
mov
nop
fldl
cwtl
aam
std
lahf
cmp
into
dec
pop
add
sbb
sub
mov
test
and
fcmovb
sbb
lret
or
pop
adc
push
in
orb
sbb
dec
dec
fidivl
mov
push
xor
test
js
xchg
stos
pop
jg
leave
add
loope
repnz
lahf
cs
xchg
sub
es
jo
inc
mov
pop
lds
xchg
mov
rol
mov
insb
dec
pop
lock
push
dec
inc
lods
mov
cli
mov
xlat
loope
adc
sbbl
aaa
loop
push
jecxz
or
mov
sub
mov
lahf
xlat
popa
sbb
icebp
sbb
test
xorl
sar
inc
dec
or
inc
mov
jg
loopne
or
cmp
arpl
jo
pop
pushf
int
test
pop
fsubrl
ljmp
jl
das
scas
cmp
pop
cmp
js
jae
lret
jo
pop
inc
mov
pusha
mov
daa
add
repz
movsb
or
pop
mul
xchg
loop
dec
mov
adc
xor
cmpsb
mov
into
into
sbb
ja
pop
and
mov
adc
and
xchg
and
adc
std
or
add
stos
sub
push
jecxz
push
aaa
adc
sbb
mov
es
mov
pop
jo
add
push
inc
clc
adc
xchg
lahf
stos
push
mov
dec
inc
lods
and
js
test
xor
aam
cltd
sub
dec
fildll
out
jns
mov
fimull
dec
sbb
jns
sti
insb
cmp
mov
test
pusha
xchg
mov
inc
sub
mov
adc
xchg
jg
shll
jmp
mov
or
shll
daa
xor
daa
push
push
jo
stos
ret
inc
and
or
daa
cmp
cltd
test
cmpsl
sbb
scas
xor
mov
inc
addr16
mov
push
adc
jecxz
adc
adc
out
adc
addl
push
dec
inc
subb
fld
pop
mov
pop
adc
mov
push
sbb
cmp
movups
hlt
fadd
incl
cmpsb
xor
xlat
add
and
fisttps
xor
adc
mov
adc
loop
push
dec
data16
jne
repz
xor
ret
xor
cwtl
insb
pop
mov
and
add
xlat
add
inc
movsl
aad
insl
inc
stos
sbb
sbb
push
sbb
and
out
cmpsb
aas
cwtl
test
pop
cli
sbb
mov
ret
mov
inc
and
inc
outsl
pop
add
cmp
fidivl
adc
and
pusha
dec
sbb
push
out
les
movsb
ret
sub
insl
push
or
loopne
and
xchg
dec
gs
mov
mov
js
add
outsb
sub
cvtpi2ps
push
xchg
sbbb
or
pop
enter
push
ss
xchg
jp
les
cmovbe
sbb
dec
in
jae
sub
and
xor
mov
popa
aad
xor
cmp
std
adc
test
jecxz
mull
or
add
dec
sub
mov
jp
xor
rcll
fwait
push
push
imul
sub
pop
je
popa
mov
sub
pop
stos
cmp
add
jg
and
int
jb
mov
bound
imul
mov
and
sbb
jle
add
out
adc
cmp
dec
mov
sbb
in
shll
jge
clc
pusha
adc
or
push
movsb
fists
mov
or
int3
adc
or
inc
adc
xchg
mov
xchg
mov
lea
add
xor
mov
mov
adc
sub
fisubl
dec
pop
sbb
pop
mov
jno
xor
push
inc
inc
out
lock
dec
lret
sub
cmpsl
fisubrs
mov
xor
ljmp
xor
fiaddl
outsb
add
jg
aas
dec
xchg
jg
sub
cld
fwait
shrb
insb
pop
pop
clc
nop
out
pop
fmull
ja
add
lret
or
out
fs
lret
pop
test
call
gs
pop
xchg
or
mov
xchg
std
shr
testl
xchg
or
aad
pop
fistl
mov
cli
clc
inc
jne
js
xchg
and
sbb
pop
lock
push
les
mov
jg
subb
adc
cmp
or
out
in
mov
popa
mov
and
mov
push
jmp
sbbl
dec
shrb
pop
aam
push
aam
sub
cmp
fdivrs
sbb
xchg
in
inc
sub
sub
vmovshdup
push
arpl
add
pop
and
leave
push
in
or
fcomps
sahf
add
in
pop
fistps
jecxz
jge
rolw
scas
push
add
xchg
into
lahf
cld
push
or
int
mov
push
mov
dec
pop
push
xor
popa
mov
aas
sbb
jne
cld
cs
es
mov
lret
or
lods
pop
shlb
out
sbb
xor
jae
imul
mov
sub
mov
pop
je
cld
xor
dec
pop
fsubl
shll
xchg
and
rcl
adc
xor
dec
loopne
sbb
adc
cmp
inc
or
leave
test
stc
cmp
cmp
push
rcrl
and
push
xlat
push
lods
jne
mov
repz
lods
insl
lahf
cmp
fwait
pop
pusha
out
es
into
mov
aaa
cld
push
out
iret
mov
lahf
sbb
xor
lods
pop
shl
or
lret
lret
push
dec
scas
push
stc
and
repz
mov
rcrl
sbb
lods
outsb
insl
mov
daa
test
add
and
mov
xor
lock
test
repz
fbstp
bound
cmc
imul
cmp
lds
inc
cmpsb
hlt
stos
jmp
into
sbb
jno
in
cmp
or
sbb
cmp
outsl
jne
adc
and
xor
in
add
mov
ljmp
cmp
sbbb
and
jl
pop
push
sahf
add
adc
lret
nopl
sarb
push
mov
or
fisubrs
out
cwtl
scas
lcall
loope
shl
dec
test
neg
ja
aas
sti
clc
push
xor
sub
lods
data16
mov
aaa
arpl
aaa
jl
add
stc
scas
loop
in
loop
jle
push
fnsave
adc
insb
jp
ficoms
cld
std
mov
xchg
inc
popa
test
add
test
icebp
in
cmp
pop
pop
repnz
ds
adc
icebp
xchg
or
icebp
mov
inc
loopne
add
push
ds
add
cmp
out
dec
jbe
mov
stos
pop
cmpsl
sti
jg
fimull
or
ss
add
inc
js
notb
jle
jbe
sub
jb
xchg
sub
dec
lods
pop
cld
pop
push
clc
push
jl
movsl
cmpsb
jno
lahf
jecxz
pop
fmuls
icebp
les
xor
push
jmp
adc
mov
ds
stos
aas
or
and
jne
push
add
fnstsw
push
mov
into
outsb
mov
aam
or
aad
xlat
jl,pt
fldt
int
scas
or
inc
stos
mov
ret
cmp
loope
mov
or
sub
rcrb
mov
sub
add
xor
shl
push
sbb
test
adc
sahf
ret
and
lds
js
cwtl
jb
pop
pop
insl
sbb
xchg
ret
push
sub
jo
sub
push
sub
mov
xchg
and
xchg
mov
pop
fistpll
or
ja
ret
lret
pop
adc
pop
outsl
call
out
shll
std
xor
std
push
and
sahf
sub
xchg
sub
jecxz
cwtl
js
pop
add
aad
sbb
sub
adc
cmpsl
sarb
aam
push
mov
jl
das
push
sbb
incl
sub
ds
icebp
jb
jbe
xor
ret
push
ds
cmpb
add
imul
mov
jne
add
push
in
das
mov
je
shlb
jl
rorl
mov
bound
mov
orb
clc
cmp
ja
sbbb
mov
mov
or
push
dec
xchg
pushf
and
pop
sub
mov
jb
cmpsb
adc
movsb
das
dec
xchg
hlt
xchg
inc
lds
mov
sub
icebp
scas
pusha
add
lods
cmp
neg
cld
mov
pop
loope
xor
xchg
mov
pushf
lahf
clc
lahf
sbb
cwtl
fst
faddl
cmp
lods
cmp
sar
shrl
pop
push
mov
popf
or
insl
push
rcll
add
mov
and
movsl
mov
lret
icebp
add
push
loopne
mov
fdivl
dec
jecxz
clc
fidivl
mov
pushf
xor
loop
jae
adc
jg
es
cmp
shrb
lods
xor
ss
sub
push
jg
xor
jg
xchg
das
popf
iret
cmpsl
xchg
cltd
cwtl
in
cli
popf
jo
in
sub
out
stc
call
stc
cmp
lock
push
mov
smsw
out
pusha
icebp
fiaddl
mov
imul
add
adc
adc
sbb
testb
jecxz
cwtl
inc
aam
xchg
lock
out
add
andnps
mov
jns
rcrb
movsl
int
nop
bound
cmp
unpckhps
add
stos
stos
mov
mov
or
das
addl
das
lcall
jmp
mov
pusha
pop
jns
movq
insb
jl
out
inc
out
pop
pop
jb
mov
aaa
loope
xor
pop
jecxz
cli
ljmp
xor
xchg
mov
js
cmp
aad
ror
mov
xchg
cmc
in
or
ss
sarl
mov
popl
mov
roll
fcompl
inc
cmpsb
in
lods
add
xor
subl
cmc
rcl
je
jmp
cmp
mov
mov
cmp
xor
imul
or
cmp
repnz
jg
add
pop
flds
jne
mov
test
xchg
testb
lahf
pop
enter
xchg
shr
jl
jmp
mov
lcall
sarl
push
sbb
fs
adc
loope
mov
dec
mov
pop
ficoms
mov
mov
out
push
adc
icebp
rorb
or
shrb
mov
imul
mov
out
enter
sub
add
dec
loopne
les
jb
out
xor
adc
vpmaxuw
pop
cld
mov
push
adc
push
ds
sbb
aas
outsl
test
fs
cs
negl
jmp
xchg
jecxz
dec
testl
loop
jl
mov
add
inc
push
aaa
jnp
jbe
inc
or
jl
jecxz
gs
adc
xor
xorb
mov
mov
adc
mov
sub
pop
cmp
inc
outsl
aas
es
js
or
push
mov
push
xchg
cmp
cmp
mov
xor
hlt
call
mov
jecxz
adc
sub
ljmp
std
sahf
and
loopne
ljmp
push
shl
bound
mov
jl
jl
pop
lods
jle
fnstcw
xchg
rorb
sbb
jae
xor
cld
or
aad
mov
ret
adc
loope
xor
out
fdivrs
push
insl
clc
xchg
mov
xchg
push
jl
fildll
dec
insb
out
sbb
sahf
jl
fiaddl
rol
iret
pop
shrl
cmpsb
mov
mov
ret
fnstcw
lods
fnsave
mov
jl
fldl2e
add
sub
xchg
pop
sbb
mov
pop
jo
mov
mov
sub
and
sub
inc
lahf
cmp
mov
lea
and
cwtl
dec
pop
add
push
mov
mov
or
push
pop
cmp
shlb
jle
push
pop
mov
xor
dec
cmpl
je
in
mov
mov
popa
mov
lods
pop
inc
mov
das
adc
lahf
out
addr16
dec
js
nop
movsb
fdivs
mov
add
sbb
jmp
out
jg
cld
pop
sbb
enter
pop
dec
data16
fbld
ret
xchg
cmp
xor
mov
ret
dec
incl
mov
je
dec
pop
inc
mov
xor
xor
mov
data16
jae
inc
and
lds
adc
cmp
jbe
push
mov
sbb
jae
jge
or
sbb
mov
cwtl
push
mov
inc
hlt
divb
or
inc
ds
dec
cli
das
fadds
push
jne
xchg
dec
js
mov
or
arpl
lea
ffree
loopne
dec
jns
lods
add
adc
push
sahf
inc
movsb
or
dec
in
pushf
jo
pop
or
fsubl
or
mov
mov
idivb
dec
popf
sbb
filds
mov
sbb
pop
mov
mov
mov
popa
jne
mov
push
les
inc
mov
adc
jle
sbb
pop
divb
push
lock
add
lcall
rorb
outsb
imul
roll
jg
mov
lret
rcll
push
sub
loope
xor
cld
mov
or
xchg
xlat
xor
mov
add
pop
mov
add
adc
mov
jno
pushf
cli
icebp
inc
rclb
hlt
adc
stos
xchg
cli
mov
add
test
test
mov
sbbb
inc
sarl
mov
jle
mov
adc
jne
push
ljmp
pop
xchg
cltd
pop
push
mov
jo
addl
ss
in
ret
mov
cmp
gs
push
dec
xlat
xor
xor
fisubrl
xor
pop
or
xor
ja
pop
sub
loop
lods
cmpsl
pop
pusha
sub
mov
je
mov
dec
pop
lods
ss
clc
add
mov
add
mov
shl
sub
cmp
mov
ds
sub
mov
adc
ljmp
pop
lock
or
pop
mov
mov
and
add
push
ret
cmp
sahf
and
dec
mov
sub
loopne
xchg
out
add
add
cmp
mov
or
jae
loope
sbb
iret
ret
mov
mov
cld
fcoms
dec
bound
sbb
leave
aaa
inc
cld
aad
sbbb
in
icebp
sub
ficoms
ret
icebp
pop
fidivrl
cld
jnp
flds
add
sub
jl
add
dec
push
int3
sbb
mov
and
div
mulb
push
and
rorb
shl
lock
cltd
cmc
loope
mov
cs
decl
pushf
dec
aaa
mov
lret
or
ds
rclb
popa
xchg
and
in
xchg
pop
push
xor
pop
pop
pop
xchg
loop
aad
rorb
cli
jo
pop
mov
dec
cld
aam
inc
in
jnp
sbb
iret
sub
fcompl
or
push
loopne
mov
insb
cmp
jle
insl
sub
movsl
les
push
addl
add
ss
and
test
int3
mov
push
loope
mov
mulb
jb
mov
sbb
jmp
lods
sub
scas
adc
mov
pop
rcrl
imull
dec
pop
hlt
xchg
sbb
pop
ljmp
push
addb
mov
dec
in
int
pcmpgtb
mov
out
fyl2xp1
adc
pop
push
jno
outsl
rorl
addr16
pop
add
xor
les
rorl
xchg
mov
mov
lds
pushf
xor
mov
movsb
xor
lock
lods
fildll
inc
nop
or
sbb
in
aaa
mov
push
outsl
sbb
push
leave
fbstp
leave
lret
or
rolb
push
adc
into
das
push
rcr
jle
stc
or
jge
sub
out
or
enter
mov
dec
loop
icebp
nop
inc
jnp
sti
sub
or
dec
ljmp
xlat
or
and
sbb
shlb
dec
jmp
mov
jl
cmp
pop
jp
pop
gs
decb
scas
add
stc
mov
xor
lds
idiv
lock
ret
in
testl
fwait
lods
cld
cmpsl
push
xor
fwait
xchg
cmp
out
xorl
dec
loope
je
xchg
xchg
je
mov
call
cmp
scas
mov
push
dec
sub
inc
popa
and
xchg
cwtl
cltd
adc
mov
in
jno
insb
adc
sbb
or
jb
int
mov
lahf
mov
bound
adc
aas
jb
arpl
ret
mov
jle
xor
hlt
clc
pop
rol
adc
mov
data16
loopne
adc
or
adc
addr16
mov
scas
jmp
out
push
popa
xchg
lock
cs
enter
pop
jge
or
dec
jp
outsb
out
ficompl
inc
sub
mov
outsb
out
xor
mov
push
popf
jecxz
add
mov
and
je
jge
jle
or
fsub
sti
mov
mov
or
mov
inc
clc
int3
stos
adc
arpl
pop
out
incl
xchg
ljmp
arpl
je
adc
orb
and
repnz
das
xchg
mov
and
push
sub
mov
or
xor
xor
rorb
and
jp
and
dec
popl
in
lcall
pop
jmp
mov
mov
mov
sbb
cmp
das
jecxz
lods
push
inc
mov
sbb
jb
sti
imul
add
stos
inc
xchg
mov
cmpsb
sub
mov
dec
pop
xor
sbb
insb
fmuls
dec
cmp
daa
mov
add
test
mov
adc
mov
cmp
sbb
xchg
jl
shll
mov
jno
cmc
push
adc
jbe
call
pop
mov
fistpll
pop
inc
ret
push
js
addb
lods
insb
and
daa
scas
dec
adc
jo
nop
mov
mov
jg
dec
push
cmp
insb
mov
clc
dec
push
mov
test
movsb
pop
icebp
clc
stos
cmp
and
sbb
mov
insb
inc
mov
lcall
adc
ja
scas
add
mov
dec
mov
mov
shrb
mov
cmp
xchg
adc
aas
loop
push
pop
add
rolb
insl
js
xorb
mov
clc
lds
inc
cmp
or
cmpl
cmpsl
jge
dec
daa
jae
and
mov
xor
lea
mov
dec
and
sbbl
push
mov
jne
xchg
and
into
cli
loopne
fs
mov
icebp
sub
sbb
mov
sbb
ljmp
loope
aam
loope
icebp
mov
pop
xor
xchg
inc
mov
jl
inc
roll
test
xor
mov
dec
push
lea
push
aaa
mov
lea
add
ret
pop
cmpl
mov
inc
flds
mov
out
or
cmp
inc
mov
and
push
xor
lea
or
and
call
sub
iret
dec
popa
rcll
push
mov
cmp
popa
pop
add
sbb
dec
lock
pop
jle
les
sbb
mov
sub
or
xchg
mov
fsubs
sbb
adc
xchg
push
pop
cld
xchg
sti
fmull
gs
or
mov
adc
jo
in
rol
fildll
jg
inc
mov
enter
pop
cmp
fimull
push
fs
lret
popl
or
jbe
inc
fwait
hlt
sbb
or
insb
rcll
xor
lock
insb
bound
sbb
mov
mov
insl
bnd
enter
inc
stos
dec
push
pop
adc
gs
cmp
fistl
in
inc
sub
ds
aam
imul
lret
or
das
push
cld
das
bound
inc
push
mov
stos
test
mov
xchg
dec
pop
pushf
push
cmp
mov
mov
mov
ret
cltd
inc
xor
fiadds
push
test
add
int
xorl
dec
call
cmpsl
mov
sub
fcoms
jge
les
dec
in
push
and
adc
sub
pop
out
mov
es
push
lods
add
xchg
divl
sub
jge
push
cli
or
inc
and
push
add
cld
shll
add
popl
adc
mov
mov
mov
push
in
inc
dec
xchg
pop
xchg
pop
cld
push
sbb
mov
push
aaa
inc
xor
jbe
jb
sahf
icebp
bound
push
jg
data16
js,pt
sar
dec
jo
xchg
xor
fisttpll
fcmovnb
adc
lock
mov
cld
mov
aam
scas
mov
loope
repnz
icebp
or
jae
bound
cmp
ret
test
pop
clc
fdivl
mov
mov
pop
int3
adc
push
adc
cwtl
bound
popa
int
push
pop
pusha
add
mov
cmpsb
xor
dec
mov
out
push
jge,pt
fmull
movsl
int3
add
lds
or
bound
mov
frstor
or
repnz
fdivrl
out
push
mov
sub
mov
hlt
test
mov
xor
jae
mov
dec
mov
je
test
arpl
jbe
dec
clc
jg
add
sarl
jo
fcomps
add
mov
mov
in
cmp
xchg
xor
push
mov
fimuls
and
add
cmp
sub
fdiv
mov
mov
mov
sub
out
cli
and
pop
and
clc
call
je
xor
cld
mov
inc
cmp
stc
test
add
les
sub
or
js
das
out
pop
xchg
mov
sarb
jg
sti
enter
dec
aaa
inc
cmp
jb
adc
imul
loope
test
xor
fwait
aad
mov
push
push
mov
adc
push
xor
cmp
xlat
addr16
idivl
shrb
dec
inc
dec
stc
xchg
lcall
push
test
xchg
shlb
sbb
pusha
mov
pop
ficompl
scas
inc
mov
ljmp
lock
fldl
hlt
ja
push
sub
adc
iret
jg
pop
fs
xor
dec
or
repz
pop
xchg
adc
sti
sahf
fst
jmp
jbe
pop
ljmp
push
ss
stos
out
sarb
jmp
ja
sub
popa
rorl
mov
movsl
mov
add
sbb
lcall
ret
add
fdivrs
pop
xor
mov
dec
xchg
stos
out
cli
arpl
mov
cwtl
les
aad
stos
adc
mov
inc
or
aaa
cs
dec
orb
sbb
jp
pop
imul
shll
cmp
insb
cmp
or
mov
fsubl
or
cmpsb
fdivl
scas
test
inc
push
orb
leave
push
test
and
push
andl
adc
cmp
shll
mov
outsl
push
mov
out
pop
idivb
dec
clc
or
push
test
push
fdivl
mov
cmp
addr16
sbb
nop
jecxz
inc
andb
sbbl
mov
test
adc
ret
test
mov
cwtl
arpl
cmp
mov
mov
mov
xor
xchg
mov
or
and
or
inc
mov
or
cmp
lea
js
nop
outsl
insl
icebp
inc
push
lcall
and
movsb
sbb
scas
sub
and
xor
sbb
ffree
and
mov
cmp
lods
pop
repnz
out
inc
scas
fcmovbe
jl
dec
xor
das
testb
inc
push
adc
xor
or
pusha
ss
dec
pop
xor
or
pop
sbb
lods
shrb
push
mov
pop
dec
inc
push
mov
and
mov
scas
add
add
rolb
sbb
push
mov
push
jecxz
cmp
cwtl
decb
in
mov
popa
push
lock
dec
push
out
stos
std
mov
fwait
inc
xchg
fcmovu
inc
sub
scas
sbb
jae
loope
adc
loop
and
out
push
jno
push
shl
daa
mov
xor
ret
test
sbb
faddl
adc
and
pop
ror
adc
cmc
faddl
je
fbstp
imul
cld
test
sbb
mov
pop
test
rcr
push
inc
aad
push
dec
mov
jo
jp
mov
ljmp
add
inc
repz
add
push
bound
sbb
xor
xchg
inc
mov
in
stc
ficomps
sbb
push
enter
jmp
ja
push
iret
or
and
add
repz
pop
sbb
out
cmpsl
and
cmp
jno
aas
push
test
add
shl
and
sbb
pop
xor
fsubrl
repz
jl
cmp
adc
jmp
mov
mov
jge
sbb
pusha
popa
xchg
enter
aaa
mov
cmp
lds
cmpb
xchg
jmp
push
mov
add
inc
inc
mov
inc
outsl
ds
sbb
shlb
in
mov
push
xchg
test
inc
das
std
int
sub
adc
mov
xchg
sbb
lock
pushf
leave
fnstcw
bound
push
push
pop
sub
pop
clc
mov
push
jge
aaa
push
ja
clc
fs
bound
push
setnp
add
movsl
std
cmpsl
aas
add
cld
dec
mov
aaa
xor
sbb
les
lcall
push
aad
adc
add
gs
subb
lods
sub
or
pop
push
enter
lea
lahf
ss
mov
add
sar
jnp
mov
dec
pop
popf
stos
mov
pop
test
lea
rol
in
sbb
add
das
sbb
jmp
or
fcomip
cmp
push
cmp
adc
lret
or
push
mov
les
daa
outsl
roll
push
pop
testb
jo
adc
out
push
cmpsl
and
hlt
lret
aas
mov
jg
rcrl
mov
add
mov
rcl
push
sbb
push
test
mov
fs
inc
mov
or
lds
aaa
insl
movsl
mov
inc
xchg
jl
scas
cmp
in
or
mov
mov
mov
ss
popa
xchg
fwait
out
hlt
sarl
dec
loopne
push
sbb
xor
jae
shrl
cwtl
lock
sbb
adc
out
fwait
dec
in
imul
jg
mov
mov
jb
and
loop
mov
or
sbb
ss
insl
fnsave
mov
sub
sbbl
pop
fisubrs
or
insl
mov
mov
in
mov
push
or
sub
xlat
data16
jnp
test
out
pop
adcl
jb
sahf
fildl
adc
aaa
adc
add
std
sbb
loop
stc
enter
nop
mov
mov
mov
outsb
jmp
aaa
and
ljmp
inc
pop
cmp
cmpsl
add
push
fwait
dec
fs
mov
les
dec
int3
les
movsb
xorb
mov
or
addb
inc
popa
cltd
dec
xor
or
ficompl
mov
pop
mov
cwtl
loope
inc
ret
adc
cwtl
das
push
incl
and
inc
xchg
inc
xchg
lret
cld
leave
adc
adc
or
cmp
jmp
jbe
xchg
xor
push
in
mov
fs
mov
sub
inc
add
fwait
sub
jl
pop
loop
push
pop
das
sub
test
jle
mov
sahf
ret
mov
ss
mov
xchg
add
cmp
mov
push
icebp
repnz
mov
mov
sub
loop
js
fwait
shll
ja
sbb
sbb
jl
loop
pop
adc
rcl
faddl
and
callw
mov
sbb
arpl
or
mov
jge
xorb
xchg
stos
or
push
sub
push
inc
jno
in
fs
push
scas
pop
cld
stos
jg
leave
add
push
and
mov
add
in
jge
sub
adc
mov
int3
js
or
mov
dec
mov
sbb
mov
mov
jb
cmp
dec
pop
adc
inc
mov
pop
mov
jmp
outsl
mov
out
dec
or
push
xchg
stc
ror
jmp
loop
outsb
roll
icebp
xor
pop
pop
xor
push
test
pusha
movl
dec
insb
adc
cmp
sub
push
aam
push
mov
cmp
sarl
jg
dec
dec
jge
sbb
mov
push
mov
and
push
push
cmp
rorb
out
mov
loope
cmp
js
movsb
and
jns
cmpsl
scas
push
push
in
sbb
and
sti
sbb
and
repz
cwtl
mov
adc
popa
inc
scas
or
popl
mov
cmp
in
iret
pop
es
sbb
lods
pop
stos
les
push
fnstenv
adc
cmp
out
cmpsb
xchg
or
enter
fcom
pop
jno
mov
push
rcrb
mov
pop
cmc
push
sbb
add
pop
push
out
mov
aaa
clc
test
push
icebp
push
inc
sub
and
fcmovnbe
and
cli
sti
push
or
dec
lret
loope
inc
and
in
cltd
push
scas
add
or
fadds
adc
repnz
pop
lock
xchg
adc
popf
stc
jbe
addl
aas
movsl
cli
jecxz
test
das
jmp
fwait
jmp
lods
cmp
pop
mov
push
dec
aad
mov
and
loop,pn
lods
loopne
and
movsb
push
xchg
sahf
sbb
inc
movsl
js
adc
lock
insb
dec
outsb
inc
fdivrp
pop
loopne
cli
out
fwait
sub
inc
mov
jo
enter
nop
mov
inc
mov
add
and
or
cmpsb
or
lock
mov
inc
sub
and
pop
sub
and
adc
jb
scas
loope
or
lds
push
nop
xor
mov
add
popf
lods
mov
mov
fsubrs
sub
sub
xchg
mov
lock
int
xor
loopne
insb
fbstp
stc
cmp
fistpl
xchg
scas
inc
clc
iret
push
push
arpl
add
imul
mov
test
sub
rolb
adc
xor
shlb
cmovno
insl
repnz
and
in
loopne
inc
inc
sbb
xor
push
jo
adc
rclb
lcall
mov
or
pop
sub
in
in
mov
mov
cli
clc
sub
mov
stos
jno
mov
test
in
mov
push
icebp
jne
repz
push
shl
lock
cmp
mov
add
ljmp
lahf
movsl
icebp
mov
add
daa
lret
inc
push
add
fcompl
dec
orb
mov
ret
and
idivb
ljmp
mov
sahf
inc
adc
mov
inc
xchg
repnz
push
shll
push
loopne
xor
or
pusha
and
mov
popf
jle
jbe
push
lret
mov
dec
cwtl
nop
lock
loopne
popa
mov
loop
inc
loope
outsb
mov
push
dec
fadds
pop
call
sbb
and
movsb
lods
xchg
sbb
in
or
xor
aam
push
mov
fwait
es
dec
push
loope
icebp
sbb
jae
xchg
push
rcrb
dec
add
mov
adc
js
jb
push
push
pop
scas
xchg
imul
jae
out
jmp
add
in
and
ret
js
cmp
inc
mov
fcoms
enter
sub
aas
cmpsb
fldt
mov
push
push
sarl
sbb
xor
mov
es
and
cs
or
das
out
out
jnp
and
xor
mov
jge
or
add
std
xor
int
std
popa
clc
outsl
call
pushf
add
pop
fidivs
mov
push
je
pop
and
frstor
jno
cmp
jae
ret
inc
test
pop
jp
xchg
jo
or
or
xchg
dec
inc
cli
clc
xor
push
mov
loop
fdivs
call
or
cmpb
push
push
and
jbe
movsl
xor
inc
xor
jne
xorl
jecxz
mov
insb
mov
stos
xor
pop
push
or
ret
mov
add
popf
pop
dec
popa
xor
pop
ss
les
mov
sbb
loopne
push
mov
add
rclb
adc
mov
insb
sahf
mov
cmp
popa
push
loope
je
push
push
sub
das
xchg
lret
clc
int
add
movsb
loope
div
push
jmp
scas
mov
fcompl
sbb
clc
mov
adc
xchg
std
xchg
or
sbb
mov
sub
push
adc
js
and
xor
aas
rorb
add
nop
mov
outsl
mov
gs
push
int3
icebp
dec
pop
sti
ja
stos
or
xchg
sbb
mov
rclb
filds
cmpsb
sbb
call
lds
adc
cmp
jbe
dec
rcrl
push
mov
mov
mov
adc
jl
clc
xchg
pop
jo
push
stc
mov
add
lods
les
mov
ficoms
dec
fsubr
mov
inc
jp
repz
adc
mov
inc
jnp
aaa
cld
clc
imul
dec
or
push
popf
ret
neg
and
lahf
addl
jb
adc
mov
mov
test
add
dec
in
inc
ss
stos
loope
inc
pop
data16
and
repnz
sbb
or
ds
xlat
adc
adc
xchg
fnstsw
pop
sahf
sub
sbb
inc
push
lcall
enter
sub
daa
jle
ss
and
loopne
dec
adc
pop
pushl
jo
bound
popl
jg
xor
loop
dec
insl
mov
push
and
test
sub
ret
rclb
sti
xor
push
je
je
das
mov
sub
add
mov
xor
addr16
clc
or
mov
aad
push
adc
insb
mov
sub
out
dec
sbb
sahf
sbb
dec
mov
out
cmp
dec
dec
xor
mov
pop
mov
divl
mov
das
xor
mov
fldl
clc
testb
sub
clc
mov
push
xchg
add
or
push
aam
jae
sub
and
loope
punpcklwd
iret
pop
shll
sbb
test
rcrb
mov
adcb
sti
add
enter
add
lods
dec
jbe
loopne
icebp
scas
cmp
sbb
iret
and
movsb
fdiv
or
push
push
pop
mov
dec
inc
out
outsb
nopl
cld
push
sbb
inc
jo
add
andb
and
mov
in
xchg
int3
pop
jae
xorb
decb
test
xor
inc
mov
bound
xor
rorl
test
sub
add
or
sub
stos
shrb
xor
bswap
rcrb
ss
lods
enter
fisubrl
sbb
xlat
push
adc
adcl
push
or
shll
int
sub
dec
mov
mov
adc
pop
add
jp
dec
and
stc
or
sbb
addr16
xchg
fdivp
mov
adc
xor
cmp
orb
in
adc
adc
sub
rcl
pop
cmp
push
rorl
out
jg
hlt
mov
xlat
xor
mov
fwait
jnp
xor
sahf
fmuls
sub
pop
into
repnz
ja
and
and
test
mov
mov
add
es
and
pop
push
js
int3
movsl
push
dec
or
shlb
xor
push
mov
mov
dec
jae
fwait
mov
cmc
movsl
sub
push
cmpsw
in
std
push
mov
ds
outsl
rorb
enter
pop
dec
jb
negb
lahf
xlat
pop
imul
fidivrl
and
xchg
sub
cmp
jle
repnz
sub
add
into
mov
or
pop
cmp
int
ret
das
fidivs
and
outsl
mov
add
mov
and
out
inc
data16
and
mov
int3
loope
lret
icebp
ret
adc
pop
inc
incl
leave
cmpsb
and
sub
ror
mov
stos
mov
cmp
add
xchg
xchg
loope
add
aaa
out
aam
mov
xor
pop
pushf
out
ja
sbb
test
addl
out
into
aam
adc
jge
adc
loope
pop
fdivs
pop
mov
pop
mov
xchg
cmp
add
sahf
mov
fs
outsl
push
inc
inc
sub
xor
std
add
push
sti
xor
addr16
test
inc
loop
ljmp
dec
or
pop
push
jae
jnp
ret
mov
cmp
roll
aaa
and
add
lcall
test
jecxz
daa
xor
lds
push
dec
mov
fdivr
mov
in
push
push
ja
and
push
pop
cmpsb
adc
jne
and
popa
cmp
gs
or
inc
or
mov
dec
inc
adc
hlt
pop
dec
jbe
decb
push
add
cmp
sarb
xor
inc
pop
ss
mov
in
push
mov
lock
push
push
outsl
js
xchg
in
add
sub
mov
jae
mov
add
inc
or
push
imul
lods
cwtl
ss
push
or
dec
or
pop
push
fs
pop
enter
dec
push
es
sub
lea
int
cld
cmpsl
push
push
add
push
and
mov
mov
subb
fs
pop
mov
or
dec
and
or
bswap
insl
shl
test
push
hlt
add
orb
mov
repz
icebp
and
push
insl
cmp
xchg
pop
push
add
sbb
xor
dec
fdivs
jns
mov
ret
mov
sbb
jo
xor
mov
adcl
popa
jo
insl
int3
add
divb
push
xor
push
push
shl
lds
popf
jno
jg
or
pop
shrb
je
call
mov
lea
ret
mov
pop
add
bound
mov
notl
mov
ds
push
push
jp
add
xor
sub
push
stos
loopne
aas
xor
cwtl
gs
mov
fisttps
xchg
or
push
xor
push
mov
push
cmpsb
mov
shll
pop
jmp
je
xlat
loopne
sub
arpl
inc
inc
cli
pop
loopne
add
adc
arpl
pop
mov
sub
call
in
cpuid
and
and
jo
test
lea
dec
add
addr16
mov
inc
and
or
mov
ror
push
dec
jb
mov
inc
daa
cmc
push
mov
jmp
shrl
js
insb
sbb
iret
imul
out
cmpsb
mov
shrl
and
mov
mov
aam
ja,pt
fistps
sub
inc
jl
mov
loopne
scas
adcl
inc
icebp
lahf
xchg
popa
and
icebp
or
lea
mov
call
testb
and
aam
adcl
xor
or
dec
sub
push
stos
or
mov
lods
popf
xor
in
mov
cmp
push
cmpsl
push
xchg
or
ljmp
mov
cmp
sbb
hlt
xchg
xor
les
mov
aam
dec
es
cmp
orb
ljmp
mov
les
mov
pop
pop
fsubr
in
sub
scas
xor
outsl
jo
mov
lea
je
loope
or
or
xchg
push
sarb
jp
fdivr
adc
pop
cmc
pop
push
addr16
cmp
jg
pop
shrl
fs
movsl
scas
push
aam
jl
xlat
sub
mov
add
inc
jecxz
dec
and
inc
das
cmp
lds
test
popf
sub
sbbl
int3
push
pop
negb
cli
rclb
dec
lock
test
xchg
shrb
test
sbb
test
shrb
shrb
pop
daa
loope
aas
rcll
mov
cwtl
les
je
push
pop
jmp
push
push
loop
cmpb
pushl
push
xor
and
cmp
cmpsb
loope
push
jg
adc
aaa
push
jg
pop
adc
or
stc
imul
mov
cmp
sub
push
mov
cmp
outsb
fiadds
inc
clc
cmp
lea
pop
cmp
lcall
mov
ret
mov
das
not
inc
mov
xchg
or
and
push
dec
dec
jecxz
and
mov
sub
xor
dec
jg
das
push
sub
or
xor
aam
adc
test
and
je
inc
push
adc
mov
add
cmp
cmpsl
std
clc
dec
mov
or
ret
ljmp
xor
mov
arpl
mov
stc
pop
cmp
sub
jno
repnz
mov
lock
stc
xchg
ljmp
scas
lods
push
xor
cwtl
gs
ljmp
and
pop
sysexit
dec
adc
cmpsb
popa
outsb
xlat
dec
loope
jecxz
ud2
xchg
repnz
xchg
cli
dec
nop
mov
orb
fwait
mov
pop
mov
pusha
lcall
fistpl
or
push
std
sub
scas
popf
sub
rorb
inc
mov
rorb
adc
jne
mov
pop
les
cmp
lock
test
jno
xchg
out
mov
xchg
and
cmp
pop
add
fdivrp
add
leave
cwtl
cmp
sarb
enter
mov
fs
std
adc
shrb
mov
push
stos
jp
lds
aad
adc
fimuls
cmp
push
clc
cs
push
ret
std
xor
mov
aas
mov
xchg
mov
push
dec
stos
fisttps
mov
mov
mov
mov
or
mov
xlat
ret
sbb
xchg
sahf
mov
sbb
inc
pop
lods
sbb
jmp
hlt
lcall
cmp
stos
inc
pop
push
sbb
mov
scas
fchs
xchg
popa
stos
cltd
shr
ds
es
shld
shl
test
mov
cmc
incb
inc
cmp
dec
and
and
or
inc
cltd
addb
es
rolb
in
sbb
add
add
push
std
push
pop
cmp
push
add
outsb
shlb
movsbl
xor
cmp
sbb
imul
dec
cmc
aam
adc
in
mov
pop
aaa
mov
cmp
mov
adc
mov
outsb
sbb
aad
jmp
shr
cmc
pop
pop
mov
or
dec
xor
testl
adc
push
jbe
fimull
incl
aam
data16
movsl
call
or
xor
ret
pushf
mov
jle
xlat
cli
movsb
out
xlat
adc
orb
xchg
cmpsl
mov
pusha
lret
pop
testl
push
pop
clc
jo
xor
mov
incl
mov
push
call
xorb
mov
adc
fs
shlb
adc
mov
movsl
sub
orb
mov
and
adc
popa
mov
pusha
lock
and
mov
inc
sub
push
cwtl
push
xor
call
push
and
arpl
icebp
jge
push
dec
xchg
mov
cld
pop
jge
dec
adc
jns
out
cld
popa
jo
or
push
sarb
pop
mov
cmp
pop
inc
inc
mov
mov
shlb
dec
lock
jne
pop
dec
dec
push
in
int3
out
pop
push
mov
lcall
rcl
ret
pop
sub
je
stos
orb
inc
add
movsb
sub
addl
daa
addl
sahf
popa
adc
out
fbstp
arpl
adc
jno
adc
jb
std
or
cmc
sbb
inc
iret
mov
and
imul
jecxz
mov
iret
jae
call
addr16
xor
std
xchg
cmc
ss
adc
cmp
cmp
movsl
xor
dec
test
or
scas
xor
push
adcb
adc
xchg
jge
ljmp
gs
sub
and
add
pop
push
and
sbb
sbb
and
jmp
shrl
nop
psrlq
cmpsl
push
dec
je
andb
cld
loop,pn
jnp
lds
lahf
in
pusha
rclb
mov
mov
adc
test
mov
lods
sub
xor
or
sbb
aad
push
lods
sbb
lea
sti
adc
push
lock
xchg
sar
les
aam
jbe
call
push
popf
xchg
subl
inc
insl
mov
or
add
stos
push
fs
mov
clc
pop
mov
add
dec
mov
add
xchg
mov
fdivrl
loopne
test
and
adc
xorb
test
xor
add
push
or
add
dec
mov
shl
xor
mov
and
shr
std
jp
shlb
xor
loop
outsl
cmpsl
daa
dec
cltd
cli
lds
and
mov
les
aas
rolb
ret
pusha
subl
loop
lret
cld
ficoml
sbb
push
dec
jg
lods
in
std
and
mov
ret
xchg
nop
fisubrl
dec
jo
sti
push
incb
aad
sub
lods
adc
rolb
jp
jae
push
xor
shlb
push
lods
ja
push
sbb
dec
movl
xchg
add
push
or
lock
lahf
lods
jnp
rcr
scas
mov
test
sahf
jbe
cmp
jecxz
dec
roll
jnp,pt
cs
out
rorl
and
hlt
and
jmp
pop
pop
xchg
add
mov
jb
dec
stc
in
daa
mov
shll
dec
cmp
mov
dec
shll
scas
cs
test
test
bound
and
jo
icebp
mov
sub
aas
sub
xor
cli
mov
test
scas
out
pop
clc
insl
das
xchg
fwait
ljmp
jbe
fucomi
test
jnp
mov
jmp
sarw
fnstsw
xor
test
and
ss
pop
hlt
not
inc
dec
push
loope
inc
add
push
imulb
lods
mov
test
das
xor
dec
gs
jp
lods
sbb
cmpsl
pop
hlt
repnz
popa
add
lahf
mov
push
mov
sub
nop
mov
sub
jecxz
xor
bound
je
shrb
or
and
mov
mov
inc
cld
mov
adc
in
ja
adc
in
sti
jg
es
push
dec
ror
mov
mov
and
cmp
stos
inc
subl
mov
add
sub
loope
cli
les
inc
jge
stc
add
jne
mov
sub
test
mov
icebp
shlb
ds
lahf
dec
cmp
dec
loope
jp
pop
sub
test
add
mov
dec
add
rorb
shrb
leave
sbb
mov
inc
dec
dec
lcall
and
xchg
inc
fwait
out
jne
cli
add
cltd
shrl
hlt
int
pop
xor
push
jno
and
idivl
pop
in
adcb
sub
cmc
das
addl
in
sahf
call
jno
dec
loope
mov
and
xchg
imul
rcll
mov
lock
jo
mov
push
pop
and
test
adc
cmc
fwait
mov
movl
popl
xchg
rcrb
mov
lods
mov
inc
mov
mov
movsl
mov
pop
lea
fidivrl
stos
sbb
leave
mov
notb
mov
adc
cmp
clc
or
push
xor
sub
imul
pop
aam
daa
push
test
test
xchg
scas
mov
test
test
js
add
mov
cmp
das
mov
daa
js
cmp
pop
cmpsb
mov
add
cmp
xchg
and
dec
mov
sbb
jp
icebp
psubd
push
xchg
xor
mov
hlt
pop
lahf
push
sahf
cmc
pop
cmp
inc
mov
lret
jp
adc
aad
js
xchg
lea
out
jnp
add
fwait
pop
adc
enter
movsl
jecxz
jmp
and
mov
jle
add
mov
jo
sbb
mov
push
dec
dec
ret
iret
or
pushf
dec
fsts
cmp
sbb
mov
sbb
pop
lea
pushf
add
arpl
es
addr16
dec
jmp
loopne
adc
setno
call
xchg
inc
xchg
and
lock
lea
sbb
cmpsb
push
xchg
xor
scas
jecxz
pop
inc
sbb
in
filds
add
insl
test
lret
pop
sbb
add
addb
jmp
icebp
or
popa
inc
lret
divb
add
lock
cld
push
leave
leave
sub
lret
cmp
mov
shlb
fucomi
lock
ja
loop
fsubr
aam
cmp
dec
or
mov
xchg
sbb
hlt
xor
cmp
xor
or
je
or
pop
test
aad
dec
mov
or
shr
outsb
cmpsb
call
sbb
rcr
enter
adc
dec
sbb
jmp
lea
push
dec
test
add
inc
cmp
cmpsl
dec
pop
cmc
scas
push
xchg
xor
mov
cmc
clc
or
jecxz
push
push
out
mov
aas
push
insb
mov
push
lcall
popl
mov
pop
cmp
out
push
pusha
jo
nop
stc
inc
aad
mov
cmc
lds
ss
inc
add
test
adc
shr
jecxz
sbb
sub
dec
sbb
aaa
dec
je
sar
dec
jl
sbb
xchg
push
mov
dec
ret
add
xchg
xchg
idiv
lods
enter
pop
out
loopne
ja
call
inc
cmpsl
sahf
xor
adc
testb
movb
xchg
adc
add
or
and
mov
adc
sbb
ljmp
outsl
lock
mov
jne
ljmp
adc
cmp
movl
stos
or
pop
lods
xchg
arpl
cs
cmpb
clc
sbb
lret
jmp
data16
outsb
ss
jg
das
int
ficompl
sub
ret
push
jge
mov
adc
mov
inc
or
int3
shl
add
jp
andb
xor
pusha
pusha
je
outsb
jnp
and
sbb
mov
cmp
pop
mov
push
inc
fdivrs
mov
je
mov
clc
jmp
out
dec
jge
add
adcl
or
add
in
frstpm(287
xlat
jg
fcompl
icebp
push
movsb
iret
and
mov
pop
enter
xor
fisubs
lea
rorb
sbb
dec
sub
rcl
es
stos
imul
mov
enter
pop
shr
and
pop
or
and
out
aas
iret
pop
or
aad
nop
jns
dec
enter
dec
scas
jns
xor
adc
push
add
jmp
icebp
lcall
ja
add
pop
mov
push
rcll
sbbl
inc
negl
dec
repz
cmpb
ljmp
dec
mov
inc
mov
pop
es
rolb
andb
or
jmp
cltd
sbb
pop
cmp
mov
shl
pop
call
sub
dec
cmc
out
sbb
and
test
mov
mov
fwait
mov
test
and
es
test
pop
std
shr
pop
sti
push
pop
cld
inc
adc
hlt
mov
dec
pusha
cld
cmp
mov
push
imul
jge
in
repz
mov
jg
jbe
add
adc
cwtl
les
test
adc
pop
cmp
movb
pop
mov
ret
stos
enter
iret
out
adc
fsubrs
not
sub
je
fistpl
adc
pop
xchg
insb
inc
call
call
add
add
lods
dec
lret
mov
mov
xor
xor
iret
push
mov
ja
sbb
scas
jae
push
ljmp
jb
adc
cmp
divb
cmpsl
adc
pop
or
mov
cmpsl
outsl
mov
inc
pop
pop
notb
je
xor
lock
leave
push
faddl
xor
test
push
es
je
test
rcrl
cmc
push
andb
jg
dec
lds
pop
and
pop
outsl
arpl
adc
push
imul
cld
jo
cmp
mov
call
mov
jecxz
pop
cmc
add
sbbl
and
mov
call
or
inc
xor
mov
lcall
dec
popa
mov
and
or
pushf
lds
lods
xor
xor
sub
fwait
js
add
sub
pop
mov
andl
cmp
fldt
jo
adc
or
xorb
xchg
pop
or
sbb
pop
leave
push
cmp
cmp
sbb
and
js
jne
lds
xchg
bound
fsts
or
add
pop
test
mov
addb
inc
addr16
rorl
push
rclb
in
fsubrs
sub
cmc
adcl
shll
push
imul
sub
repnz
test
add
cmp
xchg
mov
frstor
or
scas
and
nop
fwait
xchg
scas
mov
arpl
pop
stc
push
dec
xchg
rol
cmp
xchg
clc
lods
pop
pop
insb
xor
dec
mov
hlt
cltd
add
mov
shrl
mov
and
pop
inc
cmpsl
push
jg
adc
insl
rorl
loopne
xchg
mov
scas
jmp
mov
ljmp
jb
cltd
push
lock
sub
aas
in
jo
pop
bound
cld
cld
add
pop
ljmp
and
dec
ljmp
cmp
xchg
and
mov
push
push
insb
pop
and
movsl
stos
xor
sub
rcll
scas
adc
jb
pop
mov
jnp
js
aad
mov
ljmp
add
inc
mov
sub
jle
mov
fcompl
jl
outsb
jb
mov
sbb
ret
aas
mov
lock
sbb
daa
sub
jno
adcb
jbe
orl
sbb
cmp
rcrb
push
scas
insb
loop
sbb
je
imul
subl
icebp
ljmp
mov
cmpsb
mov
xlat
jle
push
out
cmpsl
xor
adcb
bound
data16
and
fidivl
add
sarb
sbb
ljmp
cli
cmpsl
jecxz
ret
aas
clc
mov
add
pop
add
dec
mov
mov
push
and
sub
mov
jl
movsl
xchg
arpl
or
cmpsl
push
mov
scas
movsl
mov
jg
add
lds
daa
les
lret
dec
js
jp
pop
fisubl
cwtl
stos
clc
inc
repz
mov
cmpsl
inc
pop
lcall
mov
push
dec
ja
lahf
into
mov
call
jp
ret
sub
jle
lea
inc
ret
sbb
aaa
incb
jmp
movsl
mov
sbb
xchg
cmp
fdivr
popf
xor
ds
decb
jb
or
push
xchg
mov
aam
ljmp
pop
sub
mov
popl
imul
clc
mov
xchg
push
adc
adc
movsl
or
outsl
pop
out
icebp
add
sbb
sub
xor
repz
or
pop
jno
lods
xor
mov
adcl
add
les
sub
sbb
loope
push
add
cmp
cmp
sub
loope
cli
into
push
imul
mov
and
xchg
sub
xchg
stos
inc
jmp
mov
push
lcall
mov
loopne
ds
roll
adc
mov
outsl
inc
inc
cmpsb
out
xor
or
push
bound
mov
mov
ffree
pop
cmp
pop
mov
jmp
sbb
dec
lds
loop
roll
dec
pushf
push
call
loope
inc
mov
jmp
push
pusha
test
aad
add
leave
rcll
mov
push
xchg
sbb
lods
mov
je
lods
jp
in
mov
mov
ja
pushf
fldt
xor
jecxz
arpl
cmpsb
jg
pop
cmpsl
stc
loop
inc
or
dec
fstl
mov
call
jmp
jns
aad
rorl
sbb
fsub
push
inc
mov
scas
and
sub
push
xor
xchg
int3
inc
add
js
mov
pop
dec
out
lret
sub
imul
sbb
es
ss
paddusw
aad
in
add
outsl
insl
inc
loopne
jb
push
pop
pop
loopne
call
loopne
lods
pop
mov
addb
clc
pop
imull
mov
push
fwait
jns
fs
jg
cmc
add
add
xchg
neg
test
fildl
pop
std
dec
sub
ret
cmp
mov
out
pop
outsb
mov
inc
adc
mov
loop
jg
push
scas
notl
jp
mov
cli
imul
mov
or
adc
dec
xchg
xor
jle
out
incb
jns
imul
bnd
cmp
cltd
mov
ret
add
or
push
std
jns
pop
mov
add
add
mov
orl
jp
ret
xor
in
xor
cmc
fmuls
adc
enter
push
mov
rorl
sbbl
adc
fmuls
adc
mov
pop
sbb
hlt
xchg
shll
xor
fwait
aad
js
ret
ret
gs
and
pop
inc
push
cltd
dec
pop
imul
daa
pop
jbe
pop
mov
and
pop
scas
xor
push
or
jno
fists
in
add
test
lods
sub
jl
cmp
push
mov
mov
rcr
xchg
aad
shl
mov
pop
iret
adc
cld
shll
out
sub
cmp
movsb
loopne
mov
mov
cld
aad
cmp
pushf
std
test
inc
xchg
jl
fisubl
mov
jb
sbb
adc
add
shlb
enter
mov
and
push
shrl
js
out
push
sbb
dec
rcl
add
push
and
push
adc
adc
sub
data16
add
cmp
sub
mov
xchg
jp
push
arpl
repnz
dec
scas
adc
shrb
mov
mov
pop
or
sbb
jbe
mov
sub
scas
aad
aas
or
ret
xor
jns
cmpsl
inc
cmp
push
sub
pusha
mov
inc
in
push
push
or
mov
rorl
shlb
push
jbe,pt
std
mov
mov
push
add
xor
icebp
mov
arpl
and
jl
jo
xor
pop
jecxz
jecxz
push
push
add
xchg
push
jle
pop
pusha
lock
jecxz
out
loopne
pop
cli
stos
jae
cmp
dec
sub
adc
pop
inc
out
adc
push
addr16
inc
inc
arpl
leave
lahf
imul
push
add
cmp
rorl
inc
jno
nop
push
fcmovnb
pushf
and
cmp
sbb
inc
mov
loop
out
enter
js
clc
push
dec
rorb
jg
xorb
mov
stos
dec
or
repnz
stos
rorl
outsb
leave
mov
adc
psrld
hlt
aas
je
cltd
test
xor
adc
imul
dec
je
arpl
orl
sbb
sbb
es
push
lahf
cmc
push
xchg
add
mov
cli
adcb
mov
rcrl
xchg
rol
roll
inc
lahf
or
aaa
mov
xor
out
fnstenv
pop
mov
mov
mov
das
adc
in
mov
clc
pop
add
add
push
cli
jmp
jne
aas
or
test
fstpt
xchg
cli
jp
rcll
scas
dec
mov
cmc
xor
cmp
and
jb
and
mov
fisubrs
into
xor
or
repnz
mov
mov
fsubs
mov
sbb
xor
mov
cmp
nop
lea
dec
je
aad
push
aas
je
mov
sub
mov
xor
lret
push
jecxz
add
cmp
cmp
jle
or
pusha
mov
push
std
paddsb
iret
push
xchg
inc
jecxz
pop
mov
mov
mov
inc
nop
and
ss
pusha
push
or
aam
dec
out
shl
adc
loopne
pusha
mov
aam
pop
orb
rol
pushl
sub
push
insb
xchg
or
xchg
sar
aas
pop
fistps
out
rorb
rcll
push
leave
sbb
cmp
sahf
sbb
daa
jb
rcrb
out
sub
ss
inc
into
jns
lret
xor
flds
xchg
add
adc
dec
and
inc
imul
add
pop
dec
cmc
jp
sub
push
ret
jne
sub
xchg
and
xchg
pop
mul
xchg
sub
push
push
dec
cmp
pop
dec
paddd
fwait
orps
cmpsb
xor
sub
adc
rol
mov
inc
cmp
daa
cld
js
insb
mov
daa
rorb
jb
iret
push
out
push
jmp
xor
xlat
fld
icebp
test
int3
lods
nop
in
push
pop
loop
jne
and
and
sub
cld
cmp
insb
pusha
sbb
mov
out
iret
bound
addb
cltd
lea
je
dec
push
ret
jmp
lcall
inc
sub
into
ds
cmpsl
push
dec
cli
or
adc
lea
jl
inc
addb
xchg
lret
or
inc
mov
loop
popa
loopne
shlb
dec
cmp
push
ja
mov
adc
mov
in
jp
rcrl
dec
es
notb
jno
insb
mov
arpl
mov
xchg
orb
pop
in
adc
ds
or
mov
or
outsl
and
cmp
int3
push
scas
addr16
sbb
adc
mov
aam
or
push
adc
or
and
not
jns
mov
pop
imulb
xchg
lcall
xchg
daa
int
add
or
data16
loope
jno
ss
xor
ljmp
dec
push
scas
mov
ret
cmp
stos
cmpsl
loope
test
jle
jne
fldt
clc
lcall
roll
adc
nop
into
inc
out
jp
mov
cmp
fmuls
lret
pop
lret
das
aam
pop
clc
movsl
adc
loop
mov
jo
jns
xor
adc
shll
sbb
inc
js
push
push
rolb
cld
push
mov
add
enter
jae
sti
pop
push
cmp
in
sub
scas
add
xchg
and
fstpl
movsb
xchg
xor
push
bound
sbb
pusha
sub
stos
call
jae
xor
mov
pushf
repnz
adc
jmp
push
loop
mov
lock
push
sub
lret
sub
sub
loop
mov
add
mov
mov
lods
rcll
pop
aaa
stc
shl
mov
push
jp
ret
cmp
mov
mov
push
rclb
in
andl
xorb
gs
inc
add
xorb
pop
xchg
fisubl
jns
mov
ficomps
push
add
fwait
aaa
out
popf
std
gs
xchg
push
cli
push
fnsave
push
orb
or
jp
jmp
sbb
mov
lock
aam
or
clc
cmpsl
push
sbb
sbb
mov
popa
into
outsl
mov
or
xchg
mov
pop
scas
dec
data16
xorl
xor
cs
xchg
lods
sahf
icebp
aas
mov
xor
mov
push
xchg
sbb
inc
ss
icebp
push
cmpsb
push
jge
mov
cmp
js
movsl
mov
adc
mov
inc
and
out
pop
sub
nop
xchg
dec
adc
fsubl
sbb
iret
loop
add
jge
pop
sbb
pop
adc
push
rorb
pushf
bound
ljmp
xchg
repnz
xlat
scas
lcall
push
stos
lods
add
add
mov
add
xlat
pop
outsl
cmp
loopne
cwtl
mov
adc
sbb
cli
xchg
add
mov
sahf
adc
sbb
cwtl
xchg
pop
fstp
adc
test
fcoml
inc
dec
xor
fimuls
push
fsubs
mov
jg
and
or
cs
adc
xor
xchg
xchg
scas
sub
ja
jl
in
test
das
popf
sti
mov
rol
add
inc
push
inc
lret
cs
adc
insb
mov
inc
mov
test
jg
jle
dec
std
gs
or
leave
push
mov
jp
adc
jl
mov
stos
pop
inc
das
mov
jbe
push
mov
cld
mov
loope
icebp
push
test
repz
lret
cmp
push
int3
push
jo
xor
fildll
inc
cld
mov
fmull
scas
or
mov
sbb
sbb
mov
notl
add
and
pop
fcoms
fmulp
cmp
sub
cmp
xchg
cwtl
ds
pusha
push
inc
xor
push
xchg
adc
adc
aas
pushf
sar
jno
jg
sti
shl
jns
mov
and
xchg
popf
cwtl
leave
sub
jecxz
or
mov
sbb
jne
fisubrl
dec
jecxz
sub
adc
xchg
jle
flds
lea
jnp
mov
fidivrl
jb
adc
aad
pop
cli
or
xchg
cmpsl
lret
add
dec
dec
dec
lods
cmc
sub
test
jg
cmc
loop
pushf
push
mov
push
movsl
ret
dec
sti
inc
jp
scas
sbb
dec
hlt
adc
clc
std
jbe
add
cmpsl
hlt
js
je
xor
fcoml
pop
gs
jbe
jmp
sbb
xorl
and
in
cmc
out
jl
loopne
hlt
pop
pop
sbb
cld
jmp
adc
or
sbb
and
cli
leave
mov
push
ljmp
fsubrp
adcb
push
mov
aad
push
sti
ss
pop
ljmp
dec
imul
xor
mov
push
jg
lods
test
dec
iret
cmpsb
sbbl
outsb
sbb
sbb
inc
insb
dec
fwait
nop
push
stc
mov
loop
decb
adc
add
jmp
inc
dec
pmaxub
pop
inc
aaa
pop
mov
mov
insl
cld
sub
sbb
aas
scas
push
hlt
inc
ja
inc
daa
inc
loop
dec
roll
ror
xor
movsb
dec
mov
rol
sbb
pusha
aad
inc
cld
cs
sub
push
pop
test
in
or
push
mov
sub
jnp
push
and
nop
add
xchg
mov
add
push
mov
xor
jecxz
gs
push
std
lock
rcll
adc
in
nop
mov
cmp
push
nop
stos
les
lods
sub
and
push
mov
int
add
icebp
dec
jno
jb
out
test
test
or
sub
jmp
clc
inc
mov
enter
fldl
pop
xchg
rorb
mov
lret
add
ljmp
repz
dec
inc
clc
xor
lret
inc
pop
call
or
outsb
cmp
outsb
clc
or
loop
pop
cmpsb
push
add
dec
scas
pop
mov
les
xor
mov
jg
pop
sbb
shll
xlat
xor
jmp
fisubrs
dec
jge
std
daa
int3
cmpsl
les
addl
xacquire
sbb
daa
fadds
xchg
bound
xor
mov
testl
sub
mov
das
dec
push
cmpsb
mov
add
fiadds
sbb
test
outsl
dec
loope
adc
push
pushl
adc
fbstp
jno
scas
xor
jbe
add
lods
js
and
inc
xor
pop
in
sbb
je
ds
xor
pop
add
js
xchg
cmp
adc
dec
dec
pop
das
loopne
cwtl
and
mov
jle
jle
leave
push
pusha
push
add
xor
or
jle
popf
mov
mov
in
data16
call
jecxz
cmp
dec
sahf
fcoml
push
push
mov
iret
mov
cmp
out
sub
push
mov
cwtl
loopne
xor
cmp
das
das
sbb
pop
cmp
and
daa
loopne
aad
inc
rcrb
inc
dec
jg
add
cli
inc
testb
imul
and
xor
enter
mov
inc
mov
in
xlat
lahf
push
aad
fucomi
mov
adc
inc
out
loop
sub
mov
out
dec
inc
out
int
mov
xchg
and
push
cmp
inc
dec
adc
xchg
add
or
imul
inc
ss
mov
jl
xor
stos
push
cld
inc
clc
cmpsl
add
adc
dec
sbb
aad
cmp
test
in
lret
fs
xchg
cmpsl
cmp
jp
pushf
loop
jl
xchg
adc
cs
test
sub
mov
pop
std
lret
adc
pop
mov
mov
dec
call
cli
lods
jo
inc
arpl
push
mov
mov
push
mov
sahf
pop
cld
dec
roll
jno
shll
push
dec
jle
lock
pop
push
xchg
jg
subb
or
cmp
mov
mov
cmp
lea
movsl
shrl
adc
xchg
xchg
mov
pop
js
jmp
pusha
nop
loopne
movsl
pop
loopne
call
or
cmpsl
jge
sbb
test
js
and
sub
mov
pusha
pop
psubsb
es
rolb
xor
insb
in
gs
aas
adc
xchg
sbb
sbb
jmp
add
ja
inc
scas
mov
pop
addr16
push
cmp
dec
cmp
xchg
or
cli
test
inc
inc
push
loope
push
jno
data16
loope
mov
popf
cmp
es
xor
aaa
lods
leave
or
mov
sbb
xor
mov
mov
ret
mov
jbe
xchg
jle
addr16
ja
push
push
jg
and
xchg
testl
cltd
pop
mov
add
sbb
scas
jmp
jae
sub
fwait
call
pop
imul
icebp
jg
adc
inc
adc
mov
pop
aad
leave
pop
sbbl
xchg
or
adc
inc
outsl
sarb
pushf
loopne
cmpsl
je
scas
hlt
sbb
aad
pusha
dec
aas
and
adc
jecxz
mov
je
mov
cmp
xchg
dec
fs
sbb
cmp
xchg
push
and
xor
loop
mov
and
insl
bound
adc
ljmp
inc
sbb
mov
mov
fidivl
sbb
add
or
rcll
xchg
lock
cwtl
xor
arpl
mov
shr
stos
popa
push
cli
mov
jnp
sahf
dec
out
mulb
mov
hlt
or
jne
fs
popa
cmovb
sub
sub
xor
mov
cmc
cwtl
sbb
jecxz
jp
inc
sub
xchg
pop
xchg
dec
fsub
add
aad
stos
divb
jg
clc
sarb
pop
scas
roll
leave
cld
inc
xor
stos
jo
shlb
inc
mov
dec
push
daa
mov
std
roll
xor
xchg
rolb
xchg
push
pop
jnp
cld
push
rcll
adc
pop
stos
cld
jbe
cltd
cwtl
xor
or
or
sbb
push
stos
jns
and
test
movsb
jbe
sbb
outsl
repnz
push
aaa
inc
into
ljmp
call
cmc
dec
iret
stos
out
inc
inc
insl
sbb
out
mov
jnp
incb
push
rclb
or
and
cmp
add
cmpb
bound
loop
jne
out
jo
mov
clc
xor
sbbl
test
xchg
sahf
dec
js
xor
mov
test
mov
out
shlb
cs
inc
push
adc
ret
jae
push
mov
js
clc
aam
jno
sbb
ret
nop
mov
jb
and
shll
loop
mov
ja
clc
inc
rcrb
mov
and
xor
rcrl
pop
cmp
mov
es
xor
and
in
adcb
pop
or
sar
mov
mov
pop
frstor
mov
and
in
jbe
or
hlt
lea
inc
std
cmpsl
pop
sbb
mov
dec
push
in
fmuls
adc
popa
gs
add
fucom
cmp
mov
inc
loop
jb
ret
mov
xorb
cmpsb
ret
inc
xchg
sahf
dec
pop
push
sbb
push
push
hlt
nop
ret
sti
test
pop
inc
cld
push
jmp
lds
js
fnsave
inc
inc
mov
mov
call
dec
pop
mov
jp
dec
outsb
scas
mov
lea
dec
xor
fldcw
add
inc
out
dec
insl
stc
clc
mov
out
inc
das
pop
cld
adcb
cmpsb
ds
aam
or
sub
inc
leave
dec
mov
test
repz
push
fwait
cs
lret
lret
ljmp
cmp
test
cli
and
fidivs
repz
xchg
movsl
fisubs
pop
andb
sti
mov
pop
cld
and
cmpsb
push
or
fsubr
xor
mov
jae
ret
push
lds
loope
loope
sub
mov
in
xchg
test
ljmp
mov
test
aas
push
sub
push
dec
xor
stos
imul
hlt
enter
push
xchg
repnz
inc
push
mov
mov
push
jne
pop
push
sbb
add
orl
jle
fistpl
mov
hlt
popa
out
mov
shlb
rcrl
les
int3
and
outsb
add
and
loop
pop
jne
xchg
scas
xchg
cmp
in
sar
ds
pop
add
adc
sbb
and
imul
clc
inc
xchg
inc
add
adc
and
pop
or
add
sub
enter
and
sbb
cld
dec
inc
enter
adc
out
aas
push
movsl
mov
pop
test
mov
mov
ds
mov
cli
xor
add
cmc
pop
in
ja,pn
jp
push
sbb
mov
insl
xor
add
pop
jo
dec
lahf
scas
dec
jb
rol
ljmp
sub
fbstp
ret
stos
push
pop
jl
rol
xchg
dec
inc
mov
mov
pop
arpl
andb
mov
call
ja
dec
fbld
pop
pop
add
loopne
ret
mov
adc
lcall
flds
lock
jle
in
xor
inc
movsb
or
xor
aas
mov
sahf
mov
jl
cmpsl
mov
ret
addb
lock
or
sbb
aas
and
mov
dec
push
pop
fists
test
mov
push
je
jle
test
cmp
cmp
cmp
or
jecxz
jnp
sbb
xorb
nop
push
inc
stos
pop
push
int3
jecxz
add
inc
lahf
adc
sbb
sbb
and
mov
xchg
out
fsubrl
sub
sbb
ret
daa
push
inc
sbb
dec
add
mov
pop
cmpsb
insb
ja
or
leave
movsb
mov
jns
mov
fiaddl
in
adc
pop
lcall
repnz
aam
or
fdivrs
ss
lds
or
push
and
sbb
out
sbb
call
xchg
jo
loopne
aas
gs
lret
dec
ljmp
adc
dec
mov
loop
and
xor
push
orb
mov
cmp
loope
mov
and
mov
aad
sbb
fcomps
pop
xchg
rcll
mov
rol
out
or
sbb
sub
sbbl
inc
mov
xchg
sbb
and
inc
cmp
sbb
mulb
fs
sub
or
or
sub
sub
push
cld
scas
jge
mov
adc
adc
bound
arpl
inc
sbb
ljmp
sub
insb
pusha
inc
mov
insl
sbb
add
push
xchg
dec
mov
sub
push
mov
js
add
mov
sub
jl
arpl
push
sbb
mov
mov
dec
gs
adc
loop
cmp
data16
or
sub
cmc
jno
dec
pop
add
add
loopne
decb
dec
cld
dec
mov
jnp
rol
sar
cmpsl
cmp
insb
leave
aam
push
mov
cmp
sub
jg
test
popf
in
lahf
out
cmp
mov
fwait
insl
mov
aad
fst
xor
push
aas
arpl
into
mov
mov
dec
add
daa
sub
push
icebp
test
sbbb
xchg
inc
punpckldq
mov
mov
add
aas
mov
sub
aas
pop
std
inc
hlt
call
mov
pop
cmpsl
add
add
mov
sbb
sub
push
addr16
fstp
jnp
add
aam
psrlq
fbld
xchg
or
jo,pn
bound
test
pop
cmp
jnp
sti
push
or
push
jnp,pt
jmp
or
push
xorl
sbb
mov
inc
pop
movb
dec
mov
push
loope
jle
and
mov
test
push
push
decl
pusha
stos
sbb
loopne
cmpsl
adc
test
dec
adc
lret
ss
in
or
lcall
mov
and
pop
cmc
or
lods
outsl
popf
rcrb
xchg
mov
add
sti
mov
pop
clc
es
xchg
call
roll
pop
push
xor
ret
negb
cmp
popf
lea
jmp
xchg
inc
psubsb
jmp
stos
inc
xor
add
push
mov
test
sub
cmpsl
inc
add
sbb
mov
movq
mov
loope
and
sub
je
shll
pop
aam
imul
cwtl
stos
icebp
mov
xchg
aaa
sub
cmpsl
stos
add
ja
xor
jne
cmpsb
lcall
dec
rcrb
andl
incb
mov
xchg
loope
daa
mov
daa
mov
jmp
add
add
mov
repz
mov
xchg
scas
shl
push
inc
es
aad
cmp
jae
jp
test
push
ret
add
jbe
imul
jnp
mov
adc
addb
repnz
jg
scas
rcrb
xor
lods
repnz
aaa
fcmovnb
pop
les
call
pop
mov
cld
add
adc
mov
mov
mov
arpl
mov
out
inc
cld
mov
xchg
stc
xchg
movsb
rclb
pop
fbld
enter
movsl
je
pop
ret
jecxz
xor
cmpps
jno
imul
adc
jle
jg
xor
cmp
jno
mov
in
push
pop
or
cld
repz
enter
jns
cmp
scas
cwtl
movsb
jle
dec
adc
imul
scas
js
ret
xchg
iret
lcall
dec
jns
pop
jbe
cmp
mov
mov
pop
jge
and
cmc
cmp
fbld
and
and
and
mov
inc
ljmp
mov
pop
push
mov
adc
addr16
mov
out
stos
fldz
mov
adc
push
adc
popa
mov
test
push
lret
hlt
xor
test
lcall
test
or
pusha
adc
inc
xor
stos
les
je
adc
push
sbb
jecxz
push
mov
arpl
mov
sub
bound
jecxz
mov
dec
xchg
ret
hlt
or
mov
xor
addr16
gs
fs
ss
cmp
jae
mov
es
adc
test
fisubrl
jg
jae
xbegin
push
mov
inc
rcrl
and
fisttps
inc
sbb
inc
stos
push
lock
or
push
lret
aas
aam
cmpsl
xor
and
sub
jl
pop
loope
jnp
popf
push
sbb
jge
cmc
cwtl
sub
xchg
fisttps
lods
pop
ds
repnz
sbb
daa
push
pop
add
inc
das
push
xlat
dec
fs
mov
and
mov
fs
inc
or
jp
cmpsl
orl
push
mov
adc
adc
adc
ljmp
inc
xchg
and
pop
mov
jmp
out
pop
test
dec
inc
jp
sub
inc
push
imul
scas
xlat
adc
mov
xchg
negb
inc
jne
push
dec
pop
cmpl
jo
xchg
dec
sti
scas
out
flds
cs
stc
pushf
sti
xor
dec
or
in
inc
and
adc
cld
add
inc
hlt
cs
inc
inc
sarl
stc
dec
xor
mov
push
cmpsl
into
aad
mov
cmpsb
and
add
mov
test
in
adc
xchg
xor
jae
add
jp
cli
repnz
aad
adc
add
cltd
and
roll
aam
xor
movsb
and
andb
cmpsl
add
mov
or
cmp
fadd
lcall
push
clc
sbb
mov
scas
or
xor
test
ss
das
or
dec
call
cmp
adc
xchg
sub
or
mov
jnp
ja
push
inc
xchg
in
dec
das
repz
rorb
adc
popa
sub
popf
int3
lods
callw
hlt
in
sbb
xor
mov
mov
dec
dec
jae
mov
sbb
shrl
loopne
fsubrs
mov
jg
orb
jge
sub
stos
rcr
mov
mov
or
pop
add
aaa
xchg
ficomps
jecxz
or
aas
lock
ror
dec
jge
mov
mov
je
cmp
jecxz
or
or
inc
es
add
dec
xchg
pop
inc
test
xorl
insb
rorb
shlb
jne
std
xor
dec
enter
mov
clc
jae
push
mov
ficoms
inc
lea
test
mov
add
xrelease
das
pop
push
movsb
clc
push
fcompl
adc
pop
subb
xor
test
shlb
push
pop
cmpb
nop
jl
arpl
adc
fs
lcall
shlb
insb
arpl
insl
shll
ret
add
add
jecxz
in
addr16
xchg
add
negl
push
gs
push
in
call
cld
aaa
dec
dec
xor
mov
or
adc
mov
jno
sarb
push
mov
or
ljmp
jno
sub
mov
push
inc
xchg
movsl
insb
daa
push
or
jle
dec
aam
addb
addr16
or
xor
cld
push
je
xchg
mov
adc
adc
inc
stos
inc
subl
je
subb
ja
pop
jns
js
push
inc
mov
jns
jbe
int3
sahf
xchg
cmp
fs
cs
cmp
inc
scas
or
push
push
xchg
push
inc
ja
adc
add
subb
dec
adc
dec
add
mov
jg
xchg
sti
add
push
add
push
cld
mov
dec
in
inc
rclb
popa
mov
pop
mov
xor
and
sub
das
inc
push
push
dec
data16
add
andl
mov
in
push
dec
sbbb
xor
dec
shll
jnp
cs
lock
jne
inc
jb
repz
js
pop
and
test
push
outsb
aam
mov
pusha
cmp
stos
push
popa
repz
in
adc
dec
sub
adc
test
ud0
shrl
roll
sti
dec
jmp
xlat
loop
stos
xlat
mov
or
xchg
rcr
jbe
mov
leave
ret
sbb
call
mov
jns
arpl
jb
js
out
mov
push
inc
movsw
ljmp
xchg
sbb
dec
mov
push
clc
out
xchg
in
inc
jno
insl
dec
push
push
mov
leave
sub
cmp
addb
sub
arpl
cltd
je
aam
scas
push
mov
aaa
orl
jbe
add
enter
xchg
or
incb
out
repz
inc
dec
add
sbb
dec
insl
pushf
push
nop
mov
les
mov
push
notb
dec
aaa
cmp
xor
jnp
decl
fiadds
in
ret
or
lret
call
or
mov
jmp
add
cmp
clc
add
inc
add
and
dec
movl
push
dec
popa
dec
icebp
push
rorl
test
cmp
mov
mov
and
mov
aaa
dec
pusha
and
jmp
sub
push
or
inc
stos
pushl
inc
rcrb
push
sbbb
inc
stos
sbbl
push
js
xor
lds
loop
das
pop
aas
jmp
inc
outsl
jbe
adc
mov
sub
inc
add
adc
or
pop
clc
inc
clc
loopne
hlt
es
je
push
add
cmp
dec
pop
mov
test
push
sub
dec
push
mov
dec
jp
enter
mov
stos
mov
repnz
push
or
orl
lahf
imul
mov
das
mov
or
add
sbb
pop
js
decl
lcall
inc
aaa
add
mov
lcall
push
add
xchg
add
jns
jbe
and
jp
and
mov
mov
js
xor
sbb
mov
mov
mov
inc
lock
stos
ljmp
xor
jns
dec
nop
push
push
cltd
jle
aaa
push
mov
inc
mov
xchg
popf
push
je
mov
insb
ss
sbbl
xchg
or
add
sbb
addb
mov
push
addr16
frstor
sub
adcl
push
xor
sbb
jae
adc
mov
aaa
adc
jno
into
and
fcoms
or
cmc
mov
inc
dec
or
insb
dec
jbe
pusha
mov
test
push
add
sub
rdtsc
cmpb
insb
adc
imul
out
loopne
add
xlat
mov
add
cmpsb
pop
loop
cmp
inc
lcall
test
and
and
sub
mov
lock
adc
add
push
and
test
xor
or
pushf
inc
insb
xor
jge
out
sbb
mov
ret
scas
testb
pushf
lcall
jg
fucomi
ss
sar
sub
add
dec
fdivl
jmp
lahf
out
test
lock
jmp
cmp
lcall
jbe
ja
movsl
and
xor
ds
mov
cld
iret
stos
sar
stos
xchg
movsb
cwtl
je
dec
or
jb
jnp
imull
incl
das
sbb
add
lock
out
mov
cmp
addb
pop
push
xor
repnz
push
adc
test
fstp
or
cmp
or
add
adc
ja
rolb
test
nop
dec
push
dec
sbb
jecxz
jb
sbb
mov
leave
out
pushf
std
fwait
pop
flds
jmp
pushl
movsl
fisttpll
xchg
mov
add
push
push
loopne
mov
loopne
jns
insb
loop
les
xchg
icebp
xchg
cmp
sti
outsl
jo
ret
add
mov
fwait
dec
jns
mov
mov
pop
push
aad
fwait
rclb
jb
aas
jl
cmpb
int
dec
cwtl
jo
lds
xchg
fsubrl
adc
xor
mov
movntq
clc
inc
sub
addr16
mov
inc
cmp
daa
and
mull
addr16
push
mov
jmp
mov
push
sahf
and
mov
aad
ljmp
mov
jo
xor
xchg
and
cmp
pop
jl
cltd
int3
into
sbb
insl
mov
add
gs
add
pop
idiv
jno
movsl
adc
mov
cmp
inc
cmp
cmpl
jo
out
and
in
xor
lods
sub
scas
std
jg
jmp
test
cmp
pop
and
sbb
test
cld
iret
popa
aam
popf
sbb
and
call
subl
and
push
sbb
in
or
pop
inc
sub
inc
idivl
mov
out
fisttpll
jns
sbb
shlb
mov
pop
lods
or
xchg
in
mov
inc
cmc
lock
mov
or
sahf
cmp
dec
in
loop
int3
pushf
aaa
xchg
cmp
lret
faddl
push
cld
sbb
fistps
or
in
mov
loope
jge
and
mov
adc
dec
adc
or
mov
push
add
popa
repnz
std
lahf
shll
repnz
fincstp
ja
or
sti
jmp
std
in
mov
loopne
cmpl
dec
sub
dec
sub
hlt
popf
or
into
jmp
pop
out
add
out
jg
mov
rolb
jp
or
repz
movsb
aam
pop
inc
bound
add
mov
jg
gs
xchg
gs
lcall
lret
add
or
fildll
push
std
incl
out
jle
in
and
outsb
orb
sbbb
rol
out
fmull
bound
test
arpl
decl
incl
mov
rcrl
mov
inc
mov
scas
in
or
scas
and
arpl
leave
mov
inc
popa
in
jecxz
or
andl
inc
out
pop
cmc
das
cmpsl
inc
icebp
dec
cli
fnsave
jl
loopne
das
sarl
dec
mov
ret
cmp
shr
lods
cmpsl
dec
lods
mov
call
jb
inc
mov
xchg
dec
cmc
sbb
imull
add
shll
incl
cmc
sahf
jle
fwait
popf
idiv
in
jecxz
cmp
sbb
jl
pop
jmp
outsl
addr16
ja
popa
pop
out
in
cld
ja
adc
cld
cmpsb
lock
jg
pop
dec
dec
stos
lret
in
es
incl
jge
sbb
mov
sahf
incb
jg
dec
jnp
jnp
test
lock
push
dec
ficomps
clc
and
sti
je
roll
out
ffreep
dec
mov
xchg
add
sbb
lcall
clc
and
sarl
out
sub
orl
inc
sbb
subb
std
pop
shlb
push
dec
mov
adc
lahf
test
inc
popf
repnz
lods
arpl
xor
xchg
inc
aas
pop
add
pop
jmp
xchg
imul
sbb
ret
std
and
adc
rolb
mov
sbb
mov
mov
aad
cli
jb
push
int3
and
pop
nop
inc
leave
push
mov
xchg
xor
hlt
mov
cmc
xchg
cmpsl
aaa
cld
fstl
and
mov
sbb
dec
xchg
incl
pop
lea
pop
aad
inc
repz
push
jl
enter
dec
mov
das
pusha
out
or
xchg
sub
dec
rcrl
inc
incl
fwait
cmp
mov
push
xor
lods
sub
adc
push
insl
mov
cmp
cld
push
add
enter
out
cld
pop
mov
test
and
push
imul
scas
push
jmp
jns
sbb
in
lock
jne
sbb
dec
cs
ja
scas
pop
sbb
cmp
and
pop
jp
loopne
lds
decl
addr16
mov
push
daa
sub
cmp
nop
mov
adcl
mov
fcmove
xchg
xchg
xchg
shlb
adc
xchg
sub
jno
fistps
das
movsl
faddl
jbe
xchg
pushf
std
push
out
add
push
dec
imul
and
jo
and
cmp
push
add
cltd
les
aas
adc
aaa
cmp
lods
pop
repnz
pusha
nop
pop
negl
imul
addr16
cs
clc
lahf
and
mov
shrb
and
aam
lea
mov
js
lea
sbb
ffreep
jge
test
in
adc
outsb
push
gs
sub
outsb
pop
std
aaa
cmp
outsb
sahf
xor
push
lock
push
nop
hlt
call
cli
sbb
or
test
add
jl
or
int3
lods
call
adc
imulb
ret
aas
movsb
pushw
mov
push
ja
inc
aaa
xchg
test
jo
add
dec
push
push
cmp
dec
cmp
mov
aas
mov
mov
cmp
shrb
fistps
in
jmp
jl
inc
jmp
jecxz
lea
int3
es
mov
jg
add
hlt
flds
nop
jecxz
pop
aad
xor
lea
out
or
aad
sub
test
rcrb
lahf
leave
ds
jns
mov
sbb
popf
cmp
jbe
out
mov
mov
xchg
into
in
ja
dec
mov
jmp
mov
xchg
push
sahf
push
imul
inc
jg
mov
sub
push
xchg
das
xchg
cld
out
sub
inc
mov
dec
icebp
mov
pop
dec
orb
pop
push
loop
adc
jge
xchg
push
fdivr
lcall
add
or
daa
pop
aaa
mov
add
pop
xchg
or
jo
rclb
jmp
xchg
pop
add
cmc
pop
push
out
dec
das
push
adc
sbb
ds
add
mov
xor
mov
adc
push
mov
sbb
inc
push
stos
andl
testl
mov
out
mov
fisttpl
and
es
outsl
pop
dec
call
outsl
jbe
cmc
idiv
sbb
inc
repz
xor
mov
jecxz
mov
sarl
pop
divb
mov
xchg
lfs
jnp
outsl
std
mov
pushl
and
outsb
xor
xor
push
inc
rcr
sub
popf
inc
jle
cmp
rolb
loop
xor
rorl
scas
rcl
je
sbb
orb
in
push
out
stos
call
add
popa
loop
mov
cmp
mov
incl
xchg
sbb
xchg
sub
popf
leave
dec
stc
cmp
lret
fbld
mov
or
repz
insl
out
jae
and
test
mov
data16
out
sbb
scas
hlt
fistpll
push
jp
pop
pusha
sub
xor
fwait
pop
dec
mov
mov
in
jmp
mov
cltd
jo
inc
or
pop
pop
jge
sub
je
popf
data16
pop
add
mov
stc
lods
pop
mov
pop
cld
mov
cmp
lods
bnd
clc
inc
cwtl
jae
add
xchg
lea
add
fwait
inc
mov
ds
lea
in
loopne
dec
jp
cmp
hlt
xchg
stos
dec
fists
and
in
inc
lahf
push
insb
repnz
and
or
iret
jecxz
out
scas
aaa
and
push
push
cltd
filds
les
lahf
std
xchg
inc
cmpsl
iret
pop
or
mov
insb
insb
sbb
div
jno
cmp
mov
test
xchg
mov
sbb
inc
xor
jne
adcl
dec
mov
sti
inc
lcall
je
in
cltd
lret
and
jbe
subl
cmpsb
fdivrl
lods
or
dec
shl
push
mov
dec
std
aaa
dec
popa
bound
rolb
mov
push
xor
dec
dec
or
jnp
call
pop
sti
adc
mov
aas
mov
adc
movsl
and
mov
insb
out
pop
pusha
sbb
sub
jae
jo
outsl
and
and
fmul
imul
aas
push
sbb
rol
arpl
mov
aam
mov
call
fwait
ds
fisttpl
sub
scas
xchg
lea
cli
jecxz
lahf
adc
xlat
mov
pop
pop
outsl
push
xlat
cmpsb
xchg
ljmp
loope
data16
leave
rcr
xor
jp,pn
push
add
aaa
mov
repz
ja,pn
loope
sub
sub
outsl
test
cmp
jle
out
xor
js
daa
lock
aas
mov
cmpsl
mov
cmpsb
sub
mov
sti
sub
dec
pusha
cltd
add
call
xchg
push
out
add
rcrl
dec
and
iret
jmp
xor
scas
or
cmpl
imull
orl
mov
or
cmp
ret
cmc
push
push
orb
dec
lods
and
cmp
movsb
lds
scas
push
in
outsl
or
jo
pop
imul
add
mov
loop
rclb
js
push
fbld
mov
les
xor
dec
std
aas
and
xchg
or
jg
push
adcl
push
int3
lods
stos
jg
decl
in
inc
mov
sti
mov
ljmp
jmp
mov
cmp
push
lock
jb
cs
dec
lods
jl
add
jno
lock
jmp
ss
imul
pop
jge
fdivrs
mov
nop
cmp
inc
pop
jmp
dec
xor
or
daa
dec
ja
pop
mov
pop
sub
std
outsl
movsl
lds
and
or
jmp
mov
leave
sbb
rol
into
fists
incl
pushf
insl
stos
lea
and
les
mov
decb
or
cli
push
out
setb
xchg
sbb
mov
fimuls
cld
enter
push
inc
inc
rorb
cmpsl
inc
jno
imul
jb
sahf
add
ret
stos
sbb
test
mov
or
mov
in
pop
cmp
into
ja
and
cmpsl
jecxz
loopne
loop
idivb
mov
sub
aad
stos
cmp
jmp
sbb
push
pusha
pop
testl
mov
jl
ljmp
push
out
cwtl
dec
cs
and
xchg
push
scas
jl
pop
or
push
pop
cmp
rorl
xchg
sbb
rcrl
pop
mov
std
dec
test
mov
imul
pop
push
mov
cmp
aas
nop
lret
nop
sahf
aam
dec
and
outsb
push
jmp
push
pop
movsl
add
xorb
movq
dec
jbe
dec
pusha
and
std
test
popf
sar
nop
push
rcrb
movsl
ds
ds
rcl
sbb
mov
pop
sarb
sbb
fucomip
outsb
pop
loop
addr16
pushf
xlat
mov
mov
clc
out
out
push
negb
inc
nop
cwtl
mov
stos
jo
ss
cmp
jge
jbe
fcoml
inc
lods
pop
mov
ss
pop
cwtl
test
mov
icebp
call
pop
xchg
xchg
cs
mov
cmp
ljmp
sarb
stc
add
mov
sbbb
push
cli
mov
pusha
jo
ja
jle
xchg
gs
or
aad
jmp
adc
mov
imull
fildll
push
jg
mov
cltd
test
fdivp
incb
repz
xchg
push
push
cmp
push
scas
mov
movb
sub
das
cmp
cmp
insl
addl
jae
cmp
xchg
arpl
adc
pushl
iret
mov
push
xchg
loop
pop
xor
jbe
ljmp
mov
mov
xchg
icebp
add
inc
call
jbe
jae
into
ret
adc
loope
ud2
push
out
outsb
adc
fucom
imul
mov
jmp
and
mov
fldl
fucomip
mov
mov
gs
mov
lcall
jmp
add
add
inc
cmp
mov
test
popa
ret
outsl
test
lcall
mov
push
lahf
mov
dec
mov
outsl
push
dec
add
lcall
mov
jmp
mov
and
jns
pop
jecxz
clc
insb
testb
mov
jnp
gs
sbb
ss
rolb
lahf
sbb
xchg
loope
addr16
ss
jmp
sti
xchg
lods
sar
repz
aas
enter
jns
cmp
sbb
roll
jg
pop
test
mov
dec
cwtl
mov
das
outsl
aas
test
mov
imul
sti
xor
jg
out
stos
or
test
iret
mov
dec
in
push
pop
xchg
ficoml
xor
loopne
mov
inc
jne
add
push
dec
test
clc
ja
in
push
or
adc
cmp
jns
pop
xlat
cli
lret
jo
jo
stos
jo
and
rcl
stc
sbb
xor
and
push
loop
das
jo
ljmp
mov
xchg
ret
fisttps
mov
fwait
mov
fnsave
loopne
cmp
pop
sbb
jne
sbb
mov
mov
stc
movsl
jb
je
or
push
inc
jnp
xor
jge
clc
fistpll
icebp
xchg
nop
and
fwait
pop
xchg
clc
pop
pop
stc
cs
lock
xchg
lods
mov
fdivr
mov
test
pop
sbb
bound
popf
lcall
push
mov
xchg
cmpsl
mov
cwtl
xchg
sbb
jno
dec
fbld
scas
mov
call
bnd
mov
ret
lods
jp
mov
mov
shrl
std
pusha
inc
das
jne
mov
jg
lcall
and
mov
or
xor
jg
mov
mov
mov
ja
add
iret
mov
mov
add
xchg
sahf
jbe
call
mov
mov
cld
fnstcw
ljmp
cmp
andl
cmp
or
ret
incl
shl
cmp
daa
cmp
scas
mov
decb
jmp
test
adc
sarb
mov
xchg
movsl
pop
shrl
cli
xor
xor
in
and
xchg
cmp
iret
scas
outsb
cmp
imulb
jg
dec
push
inc
push
iret
repz
or
inc
inc
cmp
cmp
sub
sub
sub
adc
out
in
jo
mov
data16
mov
loopne
xor
pop
incl
addr16
into
cmp
pusha
xchg
jge
sarl
sbb
sbb
frstor
sbb
pandn
mov
scas
out
outsl
lret
leave
cli
jne
mov
outsl
sbb
mov
test
cmp
cmp
minps
mov
mov
mov
negl
push
insl
lea
mov
ss
pop
sbb
mov
out
pop
arpl
jmp
sbb
call
push
jns
mov
out
cmp
cs
mov
adc
mov
sti
push
cmpsl
inc
jge
pop
icebp
enter
mov
test
xlat
jp
popf
icebp
lock
push
cmp
xchg
icebp
cmp
and
dec
pop
cmp
mov
cltd
inc
popf
pop
xor
bound
insb
enter
push
add
push
insb
cmp
mov
jns
xor
pushl
ja
mov
out
xor
lahf
call
icebp
setno
sbb
leave
decl
cmp
loopne
inc
sahf
or
mov
xchg
mov
clc
ss
xor
cmp
mov
repz
fdivr
shr
aam
sti
inc
in
mov
cwtl
pop
aad
shl
push
shl
sbb
lea
add
jbe
scas
adc
dec
mov
pop
xchg
jns
fists
aas
movsl
cltd
pushf
testl
mov
lock
std
filds
pop
repz
inc
or
sub
jne
xor
or
push
mov
xor
pop
sar
into
mov
sub
loop
out
icebp
xor
popa
and
mov
mov
fists
mov
sar
push
dec
dec
icebp
add
cmpsb
insl
fst
cmp
cli
aas
fnstsw
jmp
pop
push
mov
push
sub
and
pushf
jns
pop
outsb
lcall
neg
dec
mov
cmp
js
stc
pop
or
xchg
loopne
inc
cld
inc
and
subb
decl
call
outsb
jnp
or
jp
mul
jle
mov
popf
cwtl
jmp
jg
loopne
sti
mov
iret
sbb
add
lcall
pop
enter
in
decl
fsub
jge
adcl
pop
cmp
cmp
sbb
shr
pop
mov
arpl
mov
push
jge
daa
pushl
aas
out
gs
pop
mov
outsb
scas
push
inc
arpl
std
xchg
push
xchg
and
mov
mov
aas
xchg
in
ljmp
fists
sti
div
mov
pop
mov
xchg
incl
das
jl
mov
stos
out
int3
sub
adc
ja
es
fisttpll
int3
cli
adc
inc
lock
hlt
iret
inc
sbbb
or
inc
insl
outsl
in
adc
pushf
pop
add
test
dec
jle
fnstsw
dec
xor
dec
sbb
ljmp
incb
shll
and
out
jnp
cmp
sbb
rcll
rcrb
mov
xchg
mov
inc
push
cmp
sbb
test
cmp
bound
lock
frstor
sahf
insb
add
push
or
jmp
cmp
int
cld
jno
addl
or
or
pop
cld
xor
sahf
mov
add
fs
cmp
pop
pop
jmp
cmp
ret
cli
lahf
sarl
test
mov
xor
cltd
imul
adc
sbb
loope
fs
inc
xchg
cld
jg
aad
sar
iret
xchg
pushf
push
cs
xchg
mov
shll
in
test
imul
imul
lods
mov
test
pop
hlt
cs
jnp
mov
xchg
mov
mov
xor
mov
dec
push
pop
addl
mov
loop
and
jge
sti
add
imull
add
xchg
mov
jg
stos
or
jns
mov
decl
mov
sub
cmp
jo
mov
cmp
push
push
and
inc
std
add
aad
outsl
cmp
scas
scas
in
push
sub
lock
call
inc
cli
les
sbb
stos
xchg
pop
ror
std
outsl
lock
imul
imul
push
and
cmp
lock
jnp
insl
test
adc
push
js
sub
xchg
and
inc
aam
dec
jo
daa
or
aaa
out
cmp
push
jo
repnz
jmp
sub
or
in
sbb
pop
mov
rorl
jge
repnz
out
jmp
mov
inc
lock
sub
rcr
cli
mov
mov
push
jle
ss
pop
cmpsl
jns
push
push
cmp
lea
repz
cld
xchg
xor
movsl
test
jle
scas
fcoms
out
pushf
ret
push
mov
testb
test
sysexit
or
ret
or
cmp
push
cld
in
push
insl
jmp
sbb
fwait
push
repnz
sub
lea
add
repnz
add
adc
mov
adcl
cmp
push
sub
je
sti
add
xchg
call
leave
or
iret
dec
add
sub
mov
test
pop
loopne
add
scas
loopne
push
inc
ret
addr16
sbb
sub
push
mov
bound
dec
daa
lahf
mov
xchg
lahf
and
mov
add
pop
std
mov
push
fmull
js
test
cmp
lock
lods
ljmp
pop
out
repnz
in
sub
inc
inc
ud0
cmp
mov
push
mov
adc
sub
push
mov
clc
lahf
lock
arpl
frstor
jo
xor
add
add
gs
sti
out
jg
add
push
adc
lock
addr16
add
jbe
aaa
jmp
cwtl
lret
xchg
lahf
pop
and
les
push
and
addr16
jns
push
loope
sbb
jg
mov
adc
or
aas
pop
dec
dec
mov
dec
dec
mov
call
fisubrl
push
add
loopne
int
sub
rcr
add
xchg
sbb
lods
pop
mov
int
dec
mov
sub
push
cli
aas
lock
and
and
and
mov
lods
pop
fs
fs
lret
ja
lds
cmp
sbb
js
fisubs
dec
clc
frstor
out
es
lahf
sub
setbe
xor
push
add
std
inc
jo
stos
test
add
sti
mov
jg
incl
push
popa
mov
xchg
and
cld
jnp
pop
sub
movups
push
jle
ja
insl
cld
pop
idivl
add
jnp
and
lock
pop
dec
pop
fmul
or
mov
mov
imul
std
push
fisubs
mov
aas
adc
es
xchg
call
cmp
mov
lods
xchg
fs
push
push
xor
xchg
mov
mov
aad
push
sti
mov
fs
outsl
or
std
jae
test
call
rcrl
sub
cmp
ja
add
loopne
pop
inc
stc
sub
loopne
and
std
dec
cld
shr
scas
sbb
xchg
cmp
fisttps
inc
push
test
loopne
add
and
add
outsl
cwtl
je
fldl
push
loopne
inc
pop
gs
dec
xchg
dec
es
sbb
aad
mov
sarb
stos
mov
inc
sbb
decb
and
jne
adc
jne
cmp
cmp
cs
jb
add
jne
jge
scas
jg
pop
sbb
mov
outsl
adc
std
filds
pusha
add
jmp
xor
scas
pop
sbb
scas
fnstenv
push
mov
sti
icebp
sub
sbb
dec
mov
jg
sbb
push
xchg
xchg
jl
pusha
cld
icebp
lock
imul
xchg
sbb
fwait
xor
sub
pop
test
push
xor
add
and
loope
cmpsl
ret
sbb
insb
mov
mov
imul
popf
lds
jmp
xor
das
cmp
mov
push
das
subb
int
pusha
std
je
dec
repz
int
cli
inc
mov
mov
sbbb
add
xor
jno
xchg
lock
gs
or
add
mov
aas
adc
rcr
add
push
out
xlat
or
cld
pop
or
push
les
pop
rcr
subl
je
sarl
sub
cmp
clc
fisttps
sbb
dec
stos
push
sub
incb
sub
cmpsb
sbb
ffreep
sbb
fnsetpm(287
adc
wrmsr
mov
inc
jae
js
pushf
dec
hlt
sub
mov
pushl
hlt
dec
lds
mov
add
out
outsl
mov
push
cmp
aaa
test
js
jns
xchg
lock
int
out
cmp
add
stos
mov
sbb
mov
push
sbb
loope
pop
outsb
es
add
aas
inc
icebp
aam
arpl
fstpl
cs
loop,pt
in
jno
aam
and
andl
fstpl
or
lret
add
iret
loop
fisttpll
mov
repz
loope
mov
push
lods
das
stos
jns
cmp
pop
mov
call
jns
jle
ja
xor
movsl
mov
add
mov
andl
jmp
lret
icebp
lahf
and
enter
push
fwait
lcall
adc
stos
jns
mov
jo
ja
mov
mov
testl
dec
xor
call
mov
mov
cmc
sub
cld
jg
mov
rclb
mov
adc
jo
aas
pop
stos
dec
pushf
aam
adc
lret
out
xchg
cltd
mov
adc
cmpl
inc
jae
rolb
out
stos
icebp
inc
sub
aaa
std
xorl
hlt
roll
fucomp
inc
mov
push
jbe
enter
aas
rorl
cmp
pushf
mov
push
shrb
sbb
push
loope
cmpsl
outsl
scas
xchg
lods
aam
iret
pushf
lcall
fadds
in
popa
clc
xchg
sub
loopne
lds
lret
lret
lret
sti
xchg
loopne
jg
mov
mov
sti
pop
dec
mov
lahf
mov
and
cmpsb
mov
sub
outsl
popa
lock
and
sbb
scas
xchg
iret
push
inc
outsb
xor
pop
pop
mov
icebp
jnp
or
std
cmovbe
pop
jmp
test
sub
jg
cmp
cwtl
pop
pop
lock
pop
aas
jp
pop
sub
leave
xor
sar
jg
pop
xchg
cmc
insb
mov
mov
cmp
pusha
div
fcoml
add
inc
loope
imul
cmp
mov
adc
imul
inc
push
cltd
sbb
pop
fsubrl
mov
test
std
xchg
in
std
scas
xlat
mov
cmp
andl
in
jmp
mov
into
cmp
into
mov
out
fwait
sub
movsl
fsubl
jmp
push
mov
jae
mov
jo
add
nop
mov
sub
add
jnp
add
push
jle
mov
test
inc
mov
and
out
fbstp
inc
roll
mov
sub
pushl
outsl
in
aad
mov
popa
test
in
and
push
imul
leave
xor
jle
and
inc
das
clc
loopne
xchg
stos
mov
jg
add
mov
add
and
out
inc
clc
ja
dec
xchg
fs
loop
test
test
aas
and
dec
addr16
mov
mov
pop
cmp
shlb
push
or
ds
shr
mov
lahf
sbb
aaa
mov
rorl
shlb
jno
lods
fisttps
decl
mov
jmp
sti
push
fdivrl
les
add
mov
outsl
mov
push
out
js
pop
pop
stos
out
cmpsb
mov
xchg
aaa
pop
and
jmp
mov
cld
inc
push
sbb
aad
lock
lea
sbb
pop
js
push
jae
xor
nopl
icebp
mov
jp
inc
aam
shrb
shll
inc
xor
enter
cmp
xchg
lret
std
enter
aaa
pop
sbb
leave
pop
insl
shrl
lahf
add
mov
dec
mov
xor
mov
and
jg
icebp
insl
add
pushf
aas
ret
out
adc
adc
pusha
movsb
jg
or
sbb
call
call
out
mov
sbb
test
or
push
fstpt
cmp
lock
xchg
outsl
out
and
push
jge
stos
lock
cltd
sbb
loopne
cmp
mov
cmpsb
rolb
sbb
lods
das
inc
or
addr16
outsl
pop
inc
pop
push
pop
popa
xchg
or
popa
or
cld
out
or
mov
mov
shrb
out
jmp
fistpl
sbb
fdivrl
sbb
sti
outsl
push
jmp
fnstsw
mov
out
and
int3
mov
les
mov
in
enter
cmp
daa
jg
sbbl
or
enter
pop
rorl
repz
cmpb
jg
cs
or
data16
mov
mov
or
leave
fucomi
inc
jae
into
ljmp
loope
add
stc
sbb
jg
cld
in
imul
adc
sub
cmpsl
jmp
mov
mov
int
inc
jb
psadbw
cmp
push
in
inc
psubd
mov
jne
jnp
dec
data16
jge
repz
inc
ret
add
imul
fimuls
out
mov
outsb
push
inc
sbb
mov
cmp
jg
cmc
push
imull
fisttpl
add
jne
mov
adc
in
add
roll
call
pop
std
addr16
addb
lret
jne
lahf
loopne
add
out
ljmp
cltd
xor
jg
out
fnstsw
pop
repz
xor
xlat
mov
inc
cld
mov
sarl
jg
cli
aaa
mov
push
std
add
fildl
mov
cmp
mov
adc
pop
ret
sub
std
insl
push
rcll
push
popa
jnp
idivb
cmpsb
in
test
xor
add
dec
lods
loop
into
bound
incl
add
loope
sub
aas
out
pop
dec
add
cmp
mov
xchg
lcall
inc
or
jo
lahf
cmp
and
ds
xchg
jbe
ss
inc
inc
ret
arpl
loope
mov
xchg
icebp
sbb
out
int3
mov
add
js
out
pop
dec
jg
jmp
jecxz
mov
divl
fninit
lock
push
or
jo
fs
jmp
lret
lret
pop
adc
icebp
out
adc
xchg
mov
psllq
jle
das
sahf
decb
stos
sbb
aad
add
adc
ret
pusha
sbb
mov
mov
dec
clc
enter
jno
std
inc
dec
jne
and
mov
aam
mov
fwait
aad
in
pop
jg
filds
sbb
mov
pop
xchg
pop
outsl
or
iret
loope
jno
or
push
adc
scas
in
movsb
clc
xchg
pop
lock
sar
push
xchg
ljmp
cld
in
cld
sti
cld
cmp
fmuls
dec
pushf
cmc
pop
clc
call
xorb
leave
andl
cmp
into
xorl
ret
out
fcomps
pop
add
mov
cwtl
xchg
dec
dec
lock
mov
pxor
inc
fwait
lea
cli
dec
call
out
cltd
adc
or
push
adcb
pop
rorl
ret
mov
cmp
cmpsb
mov
gs
inc
pop
icebp
aas
cmpsl
jnp
jbe
cmp
call
out
xchg
rdtsc
mov
cmp
loop
rorl
notl
lahf
repnz
push
xchg
add
pop
jmp
push
cmp
insl
adc
fistpl
and
jbe
roll
loop
mov
adc
mov
sarl
scas
xor
jmp
adc
cmpsl
mov
sar
xor
clc
push
or
hlt
add
mov
fucom
icebp
out
dec
ja
pop
or
add
mov
imul
add
icebp
es
mov
repnz
jg
or
jns
repz
movsl
adc
lea
js
pop
jge
jl
mov
cs
inc
cmp
icebp
push
or
addr16
sbbb
ficoms
push
pushf
jg
aaa
daa
or
pushf
cmp
stos
pushf
mov
pop
cld
pop
mull
adc
iret
mov
mov
cmp
loop
pop
cmpsl
fisubrl
push
scas
pop
loopne
lock
gs
xchg
sub
pop
pop
sti
ds
aas
and
js
cwtl
es
sbb
mov
and
jge
iret
sbb
jo
cmp
ja
adc
pop
and
jge
pop
xor
or
jp
or
rcll
cmpsl
xor
incl
shlb
out
inc
negb
mov
out
sarl
mov
imul
loope
shlb
mov
cmp
xor
js
pop
xor
stc
test
jp
mov
test
sbb
out
xchg
aad
add
pop
out
xor
sahf
xlat
imul
cmp
xchg
inc
cmc
jo
and
push
and
std
mov
and
xchg
sub
jg
shr
stc
dec
es
fwait
ss
cmp
out
pop
or
xchg
clc
out
lock
mov
cmp
push
xchg
push
xor
mov
cmp
jg
cmp
push
cmp
pop
test
fcmove
pusha
lahf
add
push
fbstp
int3
mov
and
xchg
mov
roll
gs
push
out
test
mov
cmp
bound
out
xor
clc
pop
dec
dec
pop
popa
loop
mov
jne
cmp
loope
xchg
les
add
mov
push
add
fsubp
adc
pop
sbbb
mov
dec
cmp
loopne
jb
pop
ficoms
movsb
adcb
test
dec
mov
or
cltd
outsl
pop
pusha
jb
lock
aad
add
sub
sti
mov
jmp
outsl
jmp
fwait
fstpt
call
jne
scas
fs
push
loopne
icebp
subl
xchg
xchg
push
sti
in
notl
and
cmp
hlt
adc
pop
push
popa
fnstcw
je
aas
pop
cmp
mov
into
divb
bnd
cld
inc
xchg
lcall
and
mov
cmp
cltd
cmp
in
and
jo
dec
lret
loop
negb
xchg
jae
pop
enter
jmp
mov
je
xchg
ds
out
idiv
lahf
jmp
daa
inc
mov
cmc
int
add
bound
sti
jb
mov
add
pop
imul
xchg
xchg
arpl
lods
inc
pop
mov
mov
push
imul
mov
call
adc
loopne
mov
arpl
adc
jp
add
dec
jg
add
mov
push
fldcw
lahf
mov
incl
jle
add
xlat
jle
inc
ds
and
mov
sub
pop
rep
or
xlat
dec
or
cmp
rolb
cmp
push
out
pop
addr16
test
mov
xchg
movsl
or
xchg
pcmpgtw
fdivr
xchg
sti
sarl
mov
adc
int3
hlt
push
push
cmpsb
pop
je
mov
out
test
add
mov
mov
jo
mov
scas
xor
sub
jl
mov
decl
xor
int3
ret
cmpsl
or
movsl
dec
ffree
sarl
sbb
arpl
hlt
aaa
xor
lret
in
ret
js
aaa
mov
rorb
mov
pop
fucomi
in
push
ds
xchg
mov
data16
sahf
and
add
jne
mov
aaa
cmp
addr16
arpl
in
nop
testl
push
adc
jp
add
movsb
jg
clc
inc
call
jne
movsl
cs
ss
outsl
fwait
jg
mov
dec
lods
push
mov
adc
cld
pushl
int3
cmp
std
cmp
push
dec
jno
cmpl
aaa
mov
not
xchg
cmp
rorb
push
xchg
jmp
mov
xchg
imul
decl
rol
or
or
pushf
add
stos
popf
imul
loop
jno
cwtl
sub
popa
add
scas
xor
mov
inc
xchg
sbb
sub
incb
push
add
and
mov
mov
push
adc
cmp
mov
lret
iret
loopne
iret
jg
popa
jno
mov
inc
xchg
mov
in
jmp
push
out
bound
xor
incb
and
aaa
ja
movsb
stc
sub
gs
aam
pusha
xor
aad
js
mov
pusha
jge
loop
loope
adc
addr16
sub
pop
jns
movups
or
popa
icebp
popf
inc
out
jnp
jg
dec
ljmp
xchg
cmp
sbb
jg
adc
mov
iret
movsb
add
push
fdivl
sti
scas
aam
stos
pop
push
scas
mov
aad
fnstsw
and
std
mov
notl
stos
pop
int3
jmp
mov
ror
popf
add
movsl
sbb
sar
push
lea
cmpsl
jp
outsl
xlat
iret
test
loopne
inc
incl
jmp
scas
or
rcll
daa
iret
jecxz
cmp
call
jo
adc
call
jbe
or
add
mov
ljmp
push
mov
push
repz
or
pop
xor
push
jne
xor
pop
and
std
xchg
mov
sub
mov
pop
dec
cli
cmp
xor
fildll
jbe
or
push
pop
sub
xor
fistpll
das
inc
aaa
dec
in
fdivrs
bound
ss
push
adc
sub
jg
imul
mov
push
push
mov
mov
xor
jle,pn
and
pop
cmp
movsl
pop
in
mov
scas
pop
dec
inc
or
sbb
aad
rorl
jbe
insl
fnsave
popa
mov
clc
cmpsl
clc
mov
jae
xchg
roll
sbb
outsb
icebp
mov
or
cmp
pushf
movsl
outsl
icebp
aam
xchg
mov
ret
sbb
mov
fisubrs
dec
sahf
call
mov
ffreep
push
orb
adc
movl
decl
fisttps
inc
inc
mov
cltd
cmp
aaa
mov
out
in
mov
cmc
sbb
xor
in
aaa
aam
or
mov
sbb
lret
jecxz
jl
mov
aam
ljmp
aad
fimull
jne
ljmp
enter
jo
and
pop
imul
add
rcl
daa
mov
lds
ret
mov
mov
add
dec
loope
jmp
outsl
mov
inc
pop
in
cld
jnp
jle
pop
icebp
sbb
xchg
dec
enter
je
lock
xchg
std
testl
movsl
and
mov
add
push
test
mov
cmp
lret
call
dec
int
adc
pusha
loopne
and
mov
fidivs
loope
adc
pop
add
aas
rorb
fldcw
lods
push
push
cmc
mov
repz
lcall
adc
dec
dec
jns
xchg
mov
loope
shll
push
sub
stos
mov
ljmp
hlt
mov
mov
decl
sti
mov
add
test
nop
xlat
ss
sti
cmp
mov
cmp
mov
lock
mov
cli
addr16
add
push
jno
imul
insl
mov
std
pop
lock
pop
pop
and
pop
in
notb
mov
movsb
fwait
pop
push
cmp
xchg
loopne
icebp
incl
cltd
jg
pop
daa
popf
jno
xchg
cmp
ret
jecxz
cmp
std
lea
fisubl
push
dec
lock
mov
lock
add
xor
aas
test
xchg
xor
js
imul
xlat
mov
sub
mov
xor
imul
std
push
in
sbb
pop
clc
cmp
pop
push
shll
call
mov
lea
ja
iret
dec
je
inc
xor
enter
inc
xchg
and
push
pop
or
or
sub
pushl
push
jbe
repnz
fildll
jo
push
dec
nop
ret
lcall
sbb
cli
outsl
movsl
mov
adc
sbb
pop
add
mov
sub
xchg
push
xor
in
add
into
mov
inc
movsl
mov
in
push
incl
imul
jg
repnz
mov
push
pushf
subl
sub
outsl
mov
mov
and
mov
pop
jno
lret
dec
aas
adc
lret
ret
lea
lahf
loop
or
scas
jns
cmpsb
popf
test
inc
inc
add
shrb
push
and
aas
call
clc
ud2
jbe
fcomip
add
icebp
incl
mov
lcall
or
ljmp
test
mov
mov
imul
mov
xchg
xchg
push
and
sbbl
mov
shrl
dec
loopne
and
mov
out
loop
xor
lea
jmp
push
adc
icebp
cli
repz
mov
loopne
push
mov
outsl
lods
xor
or
mov
incb
insb
divl
mov
pop
out
pop
sbb
ja,pt
cs
outsl
iret
int
and
lret
test
pop
iret
les
dec
mov
jge
dec
or
sbb
mov
lds
adc
adc
sub
jg
mov
and
shll
add
pop
adc
mov
popa
and
push
decb
and
fiadds
icebp
mov
jl
cmp
push
stos
in
es
lcall
xor
cmpsb
dec
lds
cld
cli
pop
loope
mov
sbb
mov
loope
incb
aaa
out
repnz
push
push
cmp
push
les
pop
cld
out
dec
add
or
pop
mov
ret
inc
jno
xchg
mov
inc
pop
xchg
push
ja
jmp
cld
mov
lahf
std
repnz
pop
push
pop
in
add
addr16
std
addl
sbb
ja
pop
mov
jp
cmp
fists
fmull
push
mov
or
cmp
ret
decl
test
es
or
inc
or
lods
jg
adc
shlb
js
sbb
or
inc
arpl
push
xchg
xor
xor
fwait
rol
fucom
dec
pop
lock
mov
or
pusha
cmp
ss
dec
ja
clc
fnstcw
mov
mov
xlat
dec
inc
mov
dec
adc
mov
pop
inc
mov
cld
pushl
in
sahf
gs
sub
mov
push
adc
clc
les
int
or
iret
jb
out
stos
dec
jecxz
test
or
into
aam
sbb
adc
add
xchg
ja
sbb
adc
outsl
or
lahf
ljmp
movsl
ljmp
xor
push
jne
ficoml
test
adc
ret
jo
mov
outsl
jns
mov
cmp
fildll
xor
cld
ret
iret
in
pop
sbb
ror
aaa
jp
shrl
push
mov
imul
cmp
dec
subl
mov
scas
stos
xchg
inc
adc
and
mov
mov
or
dec
aam
mov
cltd
mov
loopne
daa
clc
sub
xchg
and
bound
inc
jns
and
mov
leave
adc
inc
lret
dec
and
inc
lods
sub
sbb
imul
in
loop
xor
inc
aas
mov
push
pop
sub
mov
adc
sub
arpl
lods
decl
jg
fldcw
gs
pop
cs
and
test
adc
jno
mov
sti
aas
jo
sub
js
ja
incl
push
mov
lret
cmp
and
daa
cld
jbe
outsl
faddl
pop
insb
adc
mov
cmpb
sub
test
aas
cld
and
pushf
mov
cmovl
decb
loopne
aad
inc
xor
stos
sti
xchg
sbb
jmp
ficompl
xor
sahf
jae
fmulp
adc
std
push
fdivrp
dec
jp
lock
fbstp
sbb
push
inc
ja
push
mov
xchg
xchg
fisttps
jg
gs
or
imul
stc
sub
xchg
xchg
das
xor
es
loopne
cmp
repz
jge
mov
aad
add
pop
cmp
cs
add
jno
mov
mov
inc
insb
xor
div
aaa
and
sbb
pop
cmp
outsb
int3
sbb
stos
jp
loopne
or
push
mov
adc
push
lahf
std
cmp
mov
mov
ss
ss
jmp
ffreep
fcompl
jl
imul
mov
rcrb
jmp
cld
loop,pn
xchg
scas
jno
dec
and
and
clc
mov
mov
dec
dec
xchg
dec
xor
test
rolb
out
push
fwait
rol
ret
cltd
lea
or
pop
pushf
adc
mov
jae
sub
std
ljmp
dec
mov
or
inc
mov
call
addr16
dec
xchg
test
mov
pop
daa
icebp
add
xchg
idiv
jg
pop
int3
lahf
sbb
adc
insl
fldl
fucomip
push
mov
mov
xor
mov
pop
jg
cmp
in
movsb
gs
jo
jae
jns
test
cld
mov
dec
cmp
xchg
cmpsb
and
rcr
clc
dec
cli
xchg
ljmp
mov
mov
sub
gs
mov
les
stos
jg
leave
inc
mov
push
mov
cmp
xchg
mov
fnsave
lcall
aas
xor
mov
mov
or
cmp
int3
pop
clc
mov
add
jge
testl
dec
pushl
mov
mov
inc
js
push
lds
dec
sbb
add
outsb
fcoml
pop
ucomiss
inc
out
sbb
mov
test
aaa
pushf
icebp
sbb
push
fbld
and
push
xchg
cmp
movsl
out
push
fcmovnbe
adc
xor
fstpl
mov
mov
pushl
adc
mov
push
or
pop
push
add
and
ljmp
je
jle
push
pop
stos
in
mov
jle,pn
mov
stos
xor
ds
rcll
js
out
push
xchg
lret
add
popf
aam
das
out
jnp
rorb
outsb
je
pop
jmp
jae
test
negl
xchg
rcll
outsb
daa
and
inc
and
hlt
js
incl
loop
es
and
jg
popf
call
jb
roll
pushl
adc
fs
loop
aas
add
mov
push
cmpsl
ret
imul
push
mov
shll
lahf
dec
cli
jmp
mov
shll
mov
pop
add
push
mov
psllw
leave
cs
push
pop
jo
call
ljmp
push
lock
test
sahf
cmp
add
jle
incl
push
jmp
jb
out
and
ja
fcomip
shl
or
cltd
xchg
outsl
mov
jb
or
aas
lea
mov
cs
jno
sti
leave
lods
push
lock
pop
and
or
mov
aas
rcr
cmpb
lea
sti
outsl
jno
lret
jno
xor
ror
jo
test
cld
add
aaa
outsl
dec
ljmp
imul
paddw
mov
into
mov
adc
jo
dec
pop
aaa
pop
xor
sbb
mov
and
mov
cmc
mov
lcall
cvtdq2ps
jl
xor
xchg
pop
pop
add
filds
popf
mov
ret
in
popa
mov
decl
std
sub
scas
ss
addr16
je
or
mov
mov
cmp
loopne
sub
jle
mov
int
fisttps
inc
es
pushf
adc
fwait
mov
sub
aaa
fwait
outsb
cwtl
dec
mov
lahf
push
cmp
lock
inc
popa
imul
sbb
xor
jnp
repz
xchg
movsb
loope
jbe
sbb
and
fwait
xchg
jbe
dec
xor
cmp
ret
jnp
movsb
pop
mov
fs
imull
or
and
and
mov
or
add
psraw
xchg
lock
sti
pusha
stos
ret
push
mov
lea
int
jge
shlb
push
es
je
out
movsb
inc
xchg
int3
lods
adc
fstl
push
ud0
ds
iret
mov
xor
mov
xor
and
dec
outsl
jno
jbe
sbb
in
cmp
mov
pop
and
negl
or
clc
jnp
arpl
xchg
cmpsl
push
mov
cmp
fcomps
xchg
xchg
arpl
dec
gs
popf
les
sub
subb
add
xchg
xchg
adc
xchg
aas
fwait
imul
xchg
push
mov
lds
add
jl
cmpl
imul
and
loope
sbb
jp
cmpsl
test
mull
cld
jae
push
mov
clc
hlt
mov
dec
lods
xor
mov
into
loopne
loopne
ja
xor
pop
fists
scas
xlat
inc
add
jg
cmpsl
pop
aas
int3
iret
dec
xchg
jg
mov
test
cltd
xchg
add
mov
std
int3
out
dec
lret
jecxz
cwtl
or
or
sbb
mov
pushl
pop
add
pop
ret
jmp
and
mov
inc
cmc
xchg
mov
jg
adc
rclb
mov
loope
adc
loopne
test
or
dec
negl
std
int3
aam
daa
cltd
outsb
leave
je
sub
mov
inc
lret
jo
mov
mov
loop
jno
add
mov
inc
in
sub
push
sub
addr16
dec
cld
pop
sub
stc
pop
test
jg
jmp
inc
in
jno
pop
sub
ret
sbb
jecxz
clc
add
scas
jmp
inc
cmp
out
jg
xchg
xor
sbb
stos
ja
mov
dec
cmp
pop
ret
xor
xchg
in
jl
and
aaa
mov
fwait
pop
mov
cmc
das
out
sub
sub
cld
or
adc
xchg
loope
ljmpw
pop
test
sub
dec
aas
shll
push
addb
xor
incb
jle
dec
mov
ds
inc
dec
mov
xchg
inc
lcall
push
inc
push
cld
add
cld
add
sub
cmp
sub
mov
jo
xor
add
cmp
je
out
fwait
jae
hlt
inc
ljmp
popf
out
pushl
lcall
xor
ja
and
dec
xor
cmp
sahf
inc
ds
mov
enter
hlt
incl
dec
stc
xorl
sbb
jmp
xchg
es
and
sbb
ret
pop
inc
fmuls
std
pop
call
jmp
into
xor
fdivrl
ffreep
xchg
aaa
pop
and
xchg
or
fcoml
inc
mov
outsl
ljmp
push
clc
cmpsb
fisttpl
adcl
fdivr
jnp
sbb
pop
cmpsl
lret
mov
test
movb
je
ret
pop
push
sbb
decl
sub
out
les
mov
shlb
cmp
jg
out
and
jbe
ljmp
jo
cmp
push
jmp
mov
decl
jl
dec
mov
and
pop
xor
or
dec
push
dec
sub
adcl
inc
clc
iret
add
dec
mull
push
xor
dec
pop
icebp
repnz
mov
dec
fnsave
sbb
shrl
daa
test
les
call
xchg
push
pop
mov
incb
add
cmp
push
xchg
sahf
clc
aam
and
jmp
xchg
mov
pop
pop
test
jg
push
cmp
push
test
pushf
ljmp
cmc
jg
push
orb
repz
jne
mov
aas
test
lods
jg
addr16
push
jg
pop
xorl
push
dec
xor
mov
dec
add
popf
js
jl
lret
jns
sbb
mov
loope
into
lahf
mov
mov
mov
sub
ret
push
cmp
out
out
aaa
or
adc
cmp
iret
pop
push
dec
scas
sub
sub
sub
pop
dec
std
testb
xchg
jns
mov
add
lahf
cmp
popf
inc
rcrb
inc
inc
arpl
nop
out
pop
jae
mov
lds
mov
push
sub
inc
xor
dec
aad
pop
jp
test
je
in
mov
mov
xchg
pop
lahf
ret
pop
pop
lods
pop
and
imul
adc
pop
loopne
sbb
xor
into
lock
in
jp
je
pop
pop
sub
cs
std
jnp
loop
movsl
or
push
sbb
mov
ss
mov
mov
leave
ljmp
popf
push
dec
cltd
mov
push
int
lea
adc
sub
int3
adc
pop
or
aas
std
add
scas
repz
sti
repz
out
cmp
and
inc
mov
or
out
add
mov
dec
mov
je
call
test
sub
lahf
movsl
cmpsl
cmpsl
dec
sarb
lock
cmp
adc
int
xchg
xchg
clc
pop
pushl
call
idiv
cmp
jno
and
fiadds
test
jae
popa
cmp
dec
notb
data16
arpl
jg
test
cmp
inc
xor
cmp
out
mov
scas
sbb
fists
push
adc
enter
arpl
incb
mov
shrb
enter
jne
push
sub
subl
cld
pop
pop
cmp
mov
pop
dec
in
int
insb
xor
push
loope
ret
test
cld
cmp
xchg
lock
mov
stos
jnp
mov
mov
sbb
mov
stos
xor
sbb
mov
push
les
syscall
sbb
jle
popf
lea
arpl
test
cmp
cwtl
scas
pop
sbb
pop
and
ljmp
scas
dec
mov
daa
jno
ret
cwtl
cli
orb
call
or
sbb
add
jl
jmp
icebp
dec
in
sahf
or
bound
add
lcall
jge
add
movsl
int
dec
jb
cltd
add
mov
jnp
insl
aad
pop
out
ret
cmp
clc
push
loope
mov
in
mul
movsb
outsl
pop
mov
inc
fistpll
jg
decl
js
movsb
adc
sub
xor
xchg
ljmp
bound
mov
clc
mov
fstpt
into
outsl
jb
leave
mov
scas
or
sarl
adc
fdivrs
ror
mov
sti
out
loopne
and
mov
or
or
mov
lret
mov
jb
xor
iret
cli
mov
mov
sbb
inc
testl
sub
lea
mov
stos
outsb
sub
add
and
push
mov
leave
xchg
das
inc
mov
dec
jmp
in
xchg
xchg
movsl
fdivr
cmpsl
xchg
push
pop
lret
test
add
aaa
daa
psubsw
call
add
dec
lret
xor
jo
sti
lret
call
mov
jno
xor
jecxz,pt
inc
test
push
pop
shrb
jp
into
ffreep
loopne
data16
jmp
jne
jne
push
mov
jecxz
out
xchg
das
outsl
jno
decl
sahf
roll
mov
pop
adc
daa
dec
inc
es
hlt
pushl
aaa
xchg
pushf
cmp
test
xor
xchg
sar
out
push
pop
scas
xchg
lock
call
push
jne
cmc
mov
sbb
imul
mov
mov
xchg
int3
cli
ljmp
inc
fnstcw
xor
mov
clc
cli
cli
or
pop
jl
sub
cmp
lds
jae
adc
jge
testb
les
and
sub
or
incl
sahf
inc
ds
cmpsb
jge
sub
mov
and
mov
repz
pop
mov
call
push
cld
in
add
push
xchg
push
xchg
rclb
xor
bound
hlt
in
or
adc
cmp
test
leave
inc
sbbl
loop
xor
sbb
push
add
icebp
ja
std
outsb
xchg
pop
je
outsl
icebp
sub
test
push
sbb
pop
test
and
negb
call
mov
add
add
sbb
nop
pop
mov
lea
aas
cmp
ljmp
daa
adc
push
lea
sar
cmpsl
sub
push
test
rolb
jge
std
sti
cli
pop
fisttpll
or
xchg
push
ljmp
int3
xorl
mov
sub
testb
and
daa
pop
arpl
or
xlat
inc
sarl
add
sbb
stos
cmp
aad
aas
lods
jmp
xor
fdiv
add
mov
and
fistps
jge
dec
inc
movsl
lea
and
sti
cmc
adc
adcb
mov
fwait
xor
jg
xchg
xchg
icebp
mov
insb
scas
in
int
jmp
loope
cmp
insb
pop
push
scas
outsl
setle
imul
xchg
cli
scas
xchg
loope
popf
sbb
incl
aas
pushf
leave
mov
cwtl
mov
iret
std
mov
mov
adc
call
nop
fyl2x
cs
jp
mov
daa
lret
and
out
push
mov
pushl
shll
inc
pop
popa
or
test
out
rcrb
add
dec
shll
pusha
or
adc
and
xchg
bound
pop
mov
inc
jg
fistpll
out
int3
outsl
mov
jmp
popa
les
nop
ljmp
lcall
mov
pop
shrb
push
data16
shll
imul
inc
out
shlb
add
popf
scas
add
and
jae
cmp
mov
pop
ficoms
cld
lahf
jecxz
xchg
call
add
cmp
push
sbb
outsb
imulb
add
adc
decb
les
sub
mov
rcrl
pop
int
push
sbb
add
jg
cmp
push
fs
outsb
sbb
mov
push
lods
mov
xchg
inc
push
fsts
dec
aas
adc
jmp
cmpsb
nop
jns
or
lret
add
fst
sti
xor
and
dec
pop
lret
inc
jne
xchg
insb
stos
leave
loope
scas
outsl
jo
aam
mov
jle
jecxz
sbb
and
jg
cmp
stc
ret
rep
aas
push
pop
push
mov
loop
shl
int
addr16
mov
and
insl
pop
inc
clc
jnp
out
mov
outsb
xor
mov
add
iret
jecxz
stc
xor
push
fstpl
out
iret
mov
push
in
dec
mov
pop
adc
add
mov
and
sub
push
jecxz
jo
lods
scas
decl
fdivrl
das
inc
push
fistl
decl
pushf
jecxz
aaa
cmp
mov
pop
adc
lahf
sub
pop
push
dec
cmpsb
pop
icebp
out
lahf
push
jmp
push
icebp
lret
mov
pop
fimull
cmp
fbstp
xchg
add
ss
pop
subl
mov
cltd
insb
rcrb
dec
decl
clc
xchg
ss
ss
outsl
out
jg
mov
cltd
add
mov
leave
xchg
loopne
lods
inc
add
cmp
stos
push
sub
idivb
xlat
cli
lcall
xor
xchg
cmpsb
and
int
jne
out
pop
inc
test
loop
iret
mov
or
das
stos
ret
popa
sbb
out
lret
fcoml
cs
dec
in
gs
mov
bound
mov
add
out
jle
mov
outsb
inc
cmc
lods
in
mov
cli
add
lret
or
mov
cmp
imul
cld
out
sbb
and
xor
cld
out
mov
incl
mov
sub
dec
sub
adc
ja
aas
ret
cmc
lock
iret
add
out
out
pop
out
in
push
cmp
roll
aaa
cmc
add
aas
cmpsl
push
add
dec
popa
add
aas
inc
sbb
xchg
aas
jp
jp
iret
sub
iret
mov
pusha
lock
repnz
sahf
rorb
stc
mov
inc
and
dec
adc
inc
push
inc
frstor
xor
xchg
xchg
add
mov
pop
icebp
pushl
icebp
xchg
out
test
mov
inc
hlt
and
mull
sarl
adc
ds
or
xor
push
pop
inc
inc
mov
push
cli
imul
push
dec
sbb
div
inc
ret
push
jg
sbb
cmp
and
sub
cld
loop
std
jnp
pop
mov
pop
loop
mov
and
pop
jmp
sysret
decb
mov
xor
adc
out
adc
mov
xchg
lret
mov
dec
pop
add
fsubl
pop
adc
cmp
mov
mov
cli
test
inc
int3
and
fdivrl
xlat
xor
xlat
lods
jg
repnz
data16
in
pop
pop
push
pusha
outsl
sbb
aas
cmp
outsl
aas
test
js
sahf
shll
or
dec
or
das
js
aad
insb
std
mov
mov
imul
in
jo
jmp
shrb
cmp
ffreep
aas
in
inc
pushf
mov
jne
push
subl
adc
daa
xor
cmp
std
xor
mov
inc
jo
shrb
jmp
call
add
jg
adc
into
xor
jae
mov
ds
inc
daa
pop
std
fcmovbe
push
clc
cltd
in
adc
fadds
adc
cli
sbb
outsl
ss
lock
xor
out
shl
mov
cld
sbb
mov
add
mov
adc
pop
pushf
test
jne
jo
xchg
pop
movsb
fisubs
jecxz
pop
gs
fidivrs
cld
cmpsl
mov
mov
ret
sbb
jmp
pop
and
push
popf
jmp
jg
dec
ret
test
xchg
push
popa
cmp
lods
lods
jb
les
aaa
lock
cltd
dec
xor
scas
data16
mov
jmp
faddl
mov
xor
mov
loope
test
xor
lds
push
or
cmpl
mov
mov
jnp
test
loopne
add
in
js
data16
repz
jns
sub
outsb
adc
or
pop
sbb
test
mov
fbstp
jg
jge
sbb
or
sbb
das
enter
push
decl
inc
andl
test
inc
movsl
clc
mov
out
jecxz
enter
mov
xchg
cltd
cwtl
lahf
xchg
jmp
xchg
mov
cmp
and
pop
lahf
mov
push
cli
shlb
movl
adc
lcall
mov
mov
pop
lcall
clc
pop
iret
popa
push
mov
mov
clc
test
or
mov
out
add
fistpll
or
jno
cmp
push
lahf
or
mov
pop
scas
out
mov
mov
cmp
movsb
aas
mov
jae
ja
enter
cli
fnstsw
sbb
add
stos
repnz
jl
mov
cmp
jo
jp
add
sub
pop
test
clc
scas
scas
mov
xor
pop
jb
push
icebp
mov
mov
insl
stc
dec
pop
pop
out
mov
add
lret
cmpl
jbe
aam
idiv
add
std
lret
lret
imul
add
cmp
jno
jg
mov
sub
lcall
cmp
sarl
sbb
in
fisttps
out
fistps
sbb
into
inc
mov
sbb
lcall
incl
cwtl
push
lret
nop
leave
sbb
push
std
mull
cmp
or
fcoml
adc
das
mov
and
test
dec
add
jge
dec
jg
std
fistl
jmp
pop
and
lods
push
aad
pop
sbb
cld
pop
div
add
inc
stc
xabort
dec
call
call
aad
dec
mov
ret
mov
ret
or
sbb
cwtl
clc
ja
popf
sti
outsl
jae
or
or
sub
and
decb
jg
test
pop
mov
push
xor
cld
mov
xchg
ret
fcmovb
add
jns
aaa
mov
cmc
sbb
clc
out
jp
or
xor
mov
dec
push
addb
jo
or
ret
xchg
stos
out
rcrl
mov
and
lea
xor
fists
mov
shrb
int
ret
jecxz
mov
pop
pop
mov
mov
jg
jecxz
cmpl
adc
jg
std
jg
repz
sbb
jbe
sti
cmpsb
adc
cmp
in
cld
sub
pop
sbb
test
and
jnp
pop
push
mov
jl
test
or
jnp
scas
andl
ret
lahf
sbb
mov
out
sub
add
jmp
outsl
sbb
cs
cld
jmp
cmp
fmuls
adc
dec
movsb
adc
sbb
cmp
into
sti
sbb
call
imul
fbld
jmp
sbb
es
pop
enter
and
cld
fistps
cld
and
push
inc
xor
in
and
push
cli
mov
pop
jo
pop
push
adc
mov
dec
addl
inc
push
push
inc
aas
jle
enter
mov
cld
popf
divb
mov
mov
test
jae
outsl
dec
push
and
sbb
adc
jo
mov
add
mov
push
mov
lahf
sarb
xchg
fnstsw
loopne
aas
dec
loopne
adc
cmp
fwait
adc
adc
out
loopne
mov
in
repnz
lcall
sbb
sub
pop
call
mov
mov
stos
aaa
sti
inc
inc
jecxz
mov
fdivp
addb
jg
outsl
mov
cmpsl
out
mov
jmp
lahf
test
arpl
pop
and
inc
jl
jg
lahf
pop
int
lahf
ja
shl
pop
dec
push
daa
pop
outsb
mov
das
insl
inc
sub
call
sub
pop
aaa
rorl
call
and
out
sahf
mov
sub
out
std
cmp
js
daa
ds
cmp
or
mov
stos
push
pusha
push
das
mov
icebp
push
add
outsl
repnz
adc
cwtl
aas
mov
xchg
push
xchg
sti
inc
incl
push
jno
add
loop
push
mov
or
pusha
jns
sbb
cmp
mov
adc
fucomip
loop
inc
fisttpl
mov
add
nop
inc
pop
mov
inc
call
sbbb
ror
pushf
pop
sbb
ja
sarb
insl
mov
mov
aas
xchg
std
mov
scas
adcb
dec
cmpsl
pop
mov
mov
fs
mulb
js
sbb
out
call
pop
in
xorl
lods
dec
xchg
cmp
push
lock
jnp
sbb
cli
pop
notl
es
fsubs
loopne
adc
pop
clc
push
mov
jg
stos
mov
push
sbb
adc
outsl
jbe
dec
inc
jp
aas
adc
push
dec
sbb
jae
xor
add
jbe
loopne
cltd
shlb
inc
push
jo
and
decl
push
adc
dec
and
cmc
sbb
or
decb
stc
mov
insb
imul
sub
jmp
sub
dec
and
cmp
sbb
xor
hlt
or
dec
je
adc
add
xor
and
push
or
or
add
dec
sbb
mov
sbb
add
mov
dec
dec
mov
sbb
sbb
dec
mov
adc
push
dec
adc
cmp
cmpsb
std
das
or
and
dec
cmp
push
test
push
mov
add
push
imul
xchg
inc
dec
into
add
and
inc
xlat
pop
jo
rclb
das
xor
clc
xor
data16
push
cmc
mov
outsb
push
inc
pop
in
jle
imul
inc
js
dec
popf
sub
push
cwtl
lcall
test
ss
fwait
mov
xchg
dec
mov
decl
test
ret
dec
sbb
leave
insb
inc
iret
xchg
xor
inc
inc
popa
inc
adc
mov
xor
sbb
pop
and
lods
sti
lea
cmovns
and
xor
test
lret
imul
aas
adc
decb
ja
push
aam
add
push
decl
adc
sbb
dec
add
sub
mov
adc
add
add
nop
hlt
adc
sbb
and
jno
sbb
shl
ret
sub
sub
jno
test
out
inc
pop
add
sub
add
jg
fidivrs
das
xchg
lcall
sub
gs
push
rcl
sar
push
xor
push
xchg
stos
in
push
sbb
in
mov
data16
cli
test
cmp
pop
inc
insb
popa
push
shlb
push
repz
mov
inc
gs
or
hlt
jbe
push
push
arpl
jnp
nop
int
int3
and
mov
or
call
js
pop
xor
jbe
aam
popa
push
pop
push
lret
jp
stos
adc
jae
inc
clc
lock
sub
leave
dec
shrl
dec
arpl
hlt
sbb
dec
add
test
int
dec
in
lods
mov
in
xchg
push
cmp
sub
pop
ss
jle
mov
sbb
arpl
dec
outsl
dec
dec
xor
add
push
jnp
xor
sbb
mov
push
dec
lods
addr16
js
aaa
inc
dec
arpl
ret
xor
push
xchg
orb
adc
mov
xor
dec
pop
xlat
aaa
xor
ret
gs
daa
loopne
inc
jmp
push
aad
clc
test
xchg
jne
out
xor
xchg
sbb
dec
enter
mov
add
adc
jle
clc
enter
divb
pop
icebp
inc
clc
out
notl
push
push
push
outsl
xor
add
pop
pop
cmp
je
outsl
jb
dec
sbb
orl
dec
outsb
ja
xor
lock
sub
mov
sbb
push
sub
addr16
aas
in
push
pop
dec
xorb
jbe
dec
add
cmp
out
fdivl
lret
and
sbb
pop
inc
inc
dec
in
loopne
fiadds
xchg
mov
or
sub
inc
dec
jp
sub
mov
clc
loopne
dec
push
ss
clc
add
enter
js
add
lock
mov
push
xor
pop
lds
dec
xlat
loopne
ss
and
inc
into
mov
xchg
int3
lret
add
mov
xor
lea
xor
sbb
push
int3
push
or
fcoms
fistl
push
push
and
sysenter
push
cmp
push
or
rol
sbb
js
fadd
dec
dec
push
xchg
mov
and
jl
xor
or
add
dec
xor
dec
add
test
inc
adc
insb
inc
mov
and
mulb
or
inc
orb
fstpt
add
dec
adc
ja
rolb
dec
test
dec
cmp
addb
push
mov
add
jbe
cltd
pusha
bound
xor
lods
sbb
add
aad
xor
and
and
xor
xor
loop
push
push
sarb
xor
test
add
imul
mov
sbb
bound
mov
aas
dec
mov
sbb
in
sbb
push
add
lcall
or
jp
and
xor
fidivs
mov
inc
negb
inc
jo
xor
nop
pop
inc
incb
sbb
pop
adc
cmp
test
mov
outsb
xor
push
and
adc
and
add
push
jbe
int3
dec
sbb
pushf
push
push
cltd
popf
or
or
int
mov
in
mov
xchg
or
rol
jp
mov
cltd
in
ljmp
sbb
add
mov
mov
xchg
adc
pop
sbb
add
jl
pusha
ret
mov
pusha
push
add
xchg
test
sub
add
push
sub
fs
test
nop
inc
add
pop
mov
test
into
add
mov
add
data16
bound
or
pop
cmp
add
cltd
fstps
pop
add
sbb
push
in
test
addb
adc
je
xor
push
xchg
push
dec
and
lods
orb
xor
fidivrl
data16
mov
cmpsb
popf
test
mov
je
cmp
adc
or
jmp
or
popa
data16
add
and
xor
push
test
or
mov
cmp
jl
xchg
cld
cltd
or
jbe
je
or
adc
out
mov
loopne
pop
and
rcl
xchg
icebp
push
push
add
gs
gs
xor
cs
insb
or
jb
add
cmp
xchg
sub
add
cmpsb
mov
jbe
enter
mov
in
push
in
add
adc
insb
nop
pushf
repnz
mov
push
out
cli
dec
pusha
es
rorb
hlt
xor
or
les
js
xor
cmp
outsb
pop
pushf
dec
xchg
add
call
mov
sub
sbb
ss
push
xor
add
out
in
ret
or
mov
roll
test
fmulp
and
js
adc
sarl
or
cmpsb
inc
sbb
dec
xor
or
add
sub
add
sti
incl
imul
popa
jb
sbb
imul
gs
arpl
outsb
inc
sub
popa
insl
gs
imul
push
push
jb
inc
outsb
dec
jb
pop
imul
fucomp
jbe
jns
sub
push
imul
ja
jge
insl
dec
arpl
push
push
push
jne
mov
sbb
imul
mov
fldcw
mov
je
arpl
jae
outsl
xor
and
std
mov
jp
xor
insb
jae
outsl
je
outsb
outsw
and
imulb
inc
pop
inc
outsl
insl
insl
dec
jae
rcl
fsubrp
dec
jae
push
je
adcb
and
sbb
aad
and
pusha
imul
jo
jns
popa
je
popa
add
daa
inc
rolb
adc
rol
inc
daa
fisubl
xor
insb
jne
push
pop
push
rcrl
jne
push
popa
adc
das
ret
pop
orb
stos
cmp
push
inc
insb
sbb
push
hlt
pop
sub
sub
dec
mov
insl
lods
dec
dec
jo
fldt
xchg
gs
fs
fstpt
fisubl
sub
daa
or
lods
pop
movsl
shll
outsb
push
andb
in
fisubl
jae
or
insb
inc
fsubrl
js
mov
jb
push
sbb
sbb
push
jb
pop
xor
adc
jno
leave
inc
outsl
jae
movsb
iret
imul
outsb
push
insl
fcompl
push
jbe
and
loopne
je
cmp
js
loopne
add
jo
fnstsw
xchg
shll
add
loopne
sarl
inc
jne
fs
push
jnp
inc
mov
and
aaa
push
adc
into
je
gs
outsl
in
cmp
sub
xchg
dec
dec
inc
inc
sbb
rcrb
sbb
and
mov
out
ret
add
mov
cmp
shll
push
push
fs
mov
fcmovnb
pop
insb
and
pop
inc
push
rol
test
mov
ror
jae
mulb
mov
lods
inc
sub
insl
sbb
xchg
daa
xor
add
out
pusha
mov
pop
jecxz
xor
insl
mov
inc
adc
sbb
sbb
push
lcall
adc
cld
addr16
jno
sbb
pop
xorl
aaa
js
sub
sbb
add
movsl
push
outsl
lahf
mov
repnz
inc
enter
push
mov
out
jae
pop
push
daa
daa
popa
jl
dec
mov
inc
jb
call
imul
and
imul
xchg
fadd
jbe
jb
or
cmp
push
push
fnstenv
fadd
xchg
mov
push
insb
cmp
cmpsl
jge
xor
inc
fs
push
jae
lds
push
dec
jo
jmp
dec
push
push
icebp
mov
add
jle
mov
push
popa
addr16
pop
xor
mov
xchg
push
sub
pop
ficompl
movsb
push
imul
dec
push
repnz
pop
adc
dec
push
push
std
test
mov
xorl
pop
sub
testb
stos
data16
arpl
imul
lret
insl
dec
jmp
fs
clc
js
xchg
mov
jns
xor
or
jmp
repnz
cmpsb
sbb
int
and
push
popa
cmp
inc
test
outsb
adc
add
sub
mov
das
sub
add
inc
push
jne
xor
and
adc
mov
inc
aad
mov
das
xchg
arpl
push
shll
insl
fs
call
jae
arpl
mov
imul
dec
jae
test
fldenv
inc
push
pusha
icebp
ds
jb
xor
mov
mov
popa
jns
pop
fs
cmp
inc
or
push
popa
inc
xorb
gs
sbb
push
dec
xor
nopl
push
mov
xor
mov
test
inc
jbe
je
sbb
mov
pop
sbb
insb
andb
xor
rcrb
addr16
cmp
mov
xor
das
xor
adc
lret
loopne
jne
sub
in
aam
and
mov
jb
shlb
fsts
lcall
or
je
adc
ret
repnz
adc
push
adc
inc
pop
pushf
push
cmp
mov
dec
stos
and
mov
and
adc
push
dec
test
inc
dec
pop
jno
mov
cmp
pop
xor
xor
push
push
jne
push
xchg
xor
xchg
mov
cmc
inc
arpl
inc
push
aad
les
inc
fdivs
sbb
and
stos
push
pop
imul
adc
jo
cmp
xor
leave
xor
jbe
or
sbb
mov
adc
inc
sub
iret
pusha
dec
inc
push
popf
pop
aam
test
and
insb
pop
dec
outsl
data16
sti
xchg
aam
and
mov
sbb
jecxz
inc
pop
clc
movsb
fs
outsl
pop
and
je
cmpsl
scas
jbe
xchg
insl
xor
pop
je
jb
jo
or
lcall
cmp
push
add
push
adc
mov
inc
jns
and
mov
adc
popa
stos
adc
xchg
push
xchg
jne
cmp
inc
xchg
push
adc
divb
jae
dec
jae
push
dec
inc
pop
vaddsd
push
test
xor
data16
mov
and
and
ret
leave
adc
pop
and
dec
cmp
inc
pushf
lods
ret
sbb
in
lcall
jne
daa
subb
jb
dec
imul
sbb
mov
shr
jmp
ss
push
pop
add
in
int3
inc
push
pop
fucomi
xor
insb
push
nop
imul
sysenter
les
outsl
fcmovne
pushf
xchg
push
mov
mov
loop
flds
sahf
mov
sbb
popa
inc
lea
pusha
imul
adc
jns
jbe
loop
pop
inc
pop
bound
add
rcr
je
and
cmp
jnp
and
jo
xor
sbb
lahf
jbe
rorl
cmp
adcl
jo
pop
fs
pop
fistl
lea
jmp
add
rorb
insb
imul
outsb
les
icebp
dec
mov
push
jmp
jp
lock
mov
shr
inc
jns
add
jae
shlb
xchg
cmpsb
fs
popa
jb
add
pop
cmp
ret
js
add
test
ret
popa
mov
rdtsc
mov
jmp
pop
xchg
pusha
push
imul
ljmp
mov
sahf
shrl
pop
pushf
dec
add
lea
jmp
scas
dec
stos
jne
inc
mov
mov
mov
push
outsl
pop
or
push
inc
lods
into
test
or
lahf
in
subb
mov
and
bound
cmp
xor
pop
mov
jbe
mov
xor
and
in
clc
mov
inc
push
cmp
push
pop
int3
adc
into
into
insb
and
rcr
je
arpl
dec
js
mov
pop
push
inc
jp
add
adc
inc
and
loopne
add
push
add
fiadds
and
add
pop
jg
fistpl
sbb
add
add
cmp
add
mov
inc
inc
pop
jl
int3
jo
nop
ss
inc
sbb
aaa
scas
xlat
add
and
mov
in
xlat
add
and
popf
sub
inc
hlt
test
out
sbb
add
cs
xor
fcmovbe
fisubrs
dec
rcrb
lock
add
jo
lahf
add
cld
inc
das
xchg
dec
xchg
and
push
add
inc
and
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
int3
jmp
mov
in
int3
cmp
adc
mov
xor
adc
daa
xchg
push
sub
lahf
cli
jbe
push
addr16
sbb
xor
lock
int3
ret
in
adc
xor
mov
push
repz
add
rolb
dec
fdivrs
fisttps
inc
cmp
push
cmp
lcall
xchg
sub
das
push
and
lods
js
int3
jle
sub
mov
out
mov
ja
dec
dec
dec
sbb
inc
push
push
xchg
fwait
fwait
xchg
scas
decb
lahf
mov
jno
cltd
mov
xchg
or
dec
aas
adc
pop
pop
xchg
fmul
imulb
cmpsl
cmp
mov
ds
and
outsb
in
dec
jb
enter
cltd
movl
call
aam
sbb
loopne
icebp
jp
add
pop
shl
testb
or
sbb
rorl
push
push
popf
shl
sbb
js
in
push
jecxz
push
fldz
sub
dec
enter
and
sub
xchg
cmp
fnstsw
repnz
outsl
imul
sbb
lods
inc
or
sbb
mov
out
shlw
mov
loope
xchg
mov
adc
in
fwait
sub
dec
push
notl
out
cmp
push
cmc
inc
ret
and
fnstenv
daa
aas
imul
jbe
or
stos
inc
call
inc
add
cltd
adc
jecxz
frstor
xchg
dec
mov
add
ja
sbb
cmc
xor
mov
das
insb
ss
push
subl
js
and
mov
movsb
cltd
or
adc
hlt
dec
sarb
cs
scas
dec
or
xor
cltd
cmp
shlb
xchg
fcmovu
repz
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
add
add
add
or
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
cmp
add
aas
add
add
add
add
add
add
add
push
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
imul
js
and
dec
add
jne
push
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
imul
js
and
push
add
jno
imul
inc
add
ja
add
imul
outsl
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
je
insb
add
imul
js
add
add
jo
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
imul
js
and
dec
add
jne
push
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
imul
js
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xchg
lds
cld
les
fwait
lds
add
add
test
add
or
add
mov
add
adc
add
mov
lds
leave
lds
and
add
aam
add
sub
add
ffreep
add
xor
add
jmp
add
cmp
add
clc
lds
inc
lds
add
add
dec
lds
adc
add
push
lds
sbb
add
pop
lds
movb
lds
xor
add
insb
lds
movb
lds
dec
movb
lds
push
movb
movb
movb
movb
movb
movb
add
add
add
mov
add
add
movb
add
add
movb
add
add
movb
add
add
movb
add
add
movl
sbb
add
add
add
xor
add
add
add
inc
movl
push
movl
pop
movl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
xor
cs
insb
add
push
imul
insl
jo
cs
insb
add
popa
arpl
xor
fs
insb
add
insb
popa
outsb
insl
popa
outsb
cs
insb
add
gs
arpl
fs
insb
add
insl
insb
imul
jae
arpl
xor
cs
insb
add
je
jo
jo
cs
insb
add
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
xor
fs
insb
add
gs
outsb
jbe
fs
insb
add
jb
imul
add
outsb
jae
popa
cs
insb
add
xor
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
insl
insl
dec
outsl
arpl
dec
inc
inc
add
add
popa
bound
outsl
jne
gs
add
gs
gs
popa
jae
inc
jb
outsl
jb
add
add
insl
inc
outsl
jb
popa
je
outsb
jne
push
add
dec
push
inc
insb
outsl
jae
inc
outsb
jne
add
add
je
je
je
push
gs
inc
add
add
insl
inc
jb
gs
gs
outsl
jb
add
add
inc
outsl
outsb
outsb
arpl
je
jne
je
add
add
je
jo
jo
outsb
dec
outsb
inc
imul
push
inc
imul
jb
jo
push
add
add
jo
inc
imul
add
dec
jae
push
add
inc
gs
push
dec
dec
imul
push
gs
imul
push
add
push
imul
outsl
outsb
inc
outsb
gs
je
dec
imul
add
jae
outsb
fs
