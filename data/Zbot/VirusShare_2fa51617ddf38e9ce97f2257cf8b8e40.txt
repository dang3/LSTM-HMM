jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
push
call
ret
nop
push
mov
push
mov
and
push
mov
push
call
cmp
sbb
neg
and
pop
ret
push
push
mov
and
push
mov
push
call
ret
nop
test
je
call
or
je
ret
mov
jmp
ret
nop
test
je
call
or
jne
ret
mov
jmp
ret
nop
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
cmp
jge
jcxz
cmp
je
push
push
mov
mov
ja
lea
lea
std
rep
jmp
cmp
je
push
push
mov
mov
mov
ja
and
lea
lea
std
rep
sar
mov
mov
sub
sub
rep
cld
dec
sar
js
rep
and
mov
rep
pop
pop
ret
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
push
push
push
push
mov
mov
test
je
mov
mov
test
jle
dec
mov
mov
test
je
mov
call
test
jg
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmp
sete
cmp
jle
mov
inc
mov
test
je
call
test
je
mov
cmp
je
mov
mov
mov
call
jmp
cmp
jg
pop
pop
pop
pop
ret
mov
test
je
mov
xor
mov
xchg
call
ret
lea
movl
movl
mov
xor
mov
mov
mov
mov
movb
call
ret
nop
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
decl
jne
push
lea
call
pop
ret
mov
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
decl
jne
lea
call
add
dec
jne
pop
pop
ret
mov
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
mov
call
pop
ret
nop
test
je
mov
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
mov
call
push
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
lea
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
decl
jne
lea
call
mov
pop
mov
ret
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
ret
lea
mov
jmp
ret
mov
sub
jb
sub
je
call
ret
lea
mov
xor
movl
inc
cmp
jne
mov
mov
ret
nop
mov
jmp
ret
mov
mov
mov
ret
mov
push
push
mov
mov
test
je
mov
call
mov
test
jne
pop
pop
ret
lea
call
ret
mov
push
mov
xor
push
push
pushl
mov
incl
jne
cmpl
je
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
subl
jae
call
mov
movl
call
call
mov
ret
lea
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
decl
add
sbb
sbb
adc
add
add
decl
add
add
adc
or
or
add
decl
add
and
pop
push
pop
adc
pop
or
sbb
add
call
add
add
add
adc
add
add
call
add
add
adc
daa
sbb
adc
adc
add
add
decl
add
add
add
pop
push
pop
adc
adc
add
decl
add
add
sbb
pop
pop
adc
adc
adc
aas
add
add
call
add
add
sbb
pop
pop
adc
or
or
sbb
add
call
add
add
adc
push
sbb
adc
sbb
or
add
add
call
add
add
pop
sbb
adc
sbb
or
add
call
add
sub
and
pop
sbb
xor
sub
or
call
add
add
adc
sbb
push
pop
adc
adc
push
push
push
push
add
mov
pusha
popa
nop
nop
nop
movb
nop
pusha
popa
pusha
popa
movb
nop
nop
inc
dec
nop
movzbl
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
pusha
popa
inc
dec
dec
nop
pusha
popa
inc
dec
mov
call
test
jle
mov
mov
nop
nop
lea
mov
sar
jns
adc
sub
jl
inc
xchg
inc
dec
dec
jne
pusha
popa
inc
dec
nop
inc
dec
inc
dec
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
and
inc
dec
pusha
popa
pusha
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
pusha
popa
nop
mov
call
xor
mov
add
xor
mov
inc
dec
nop
inc
dec
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
and
pusha
popa
pusha
popa
nop
pusha
popa
mov
call
mov
mov
inc
dec
inc
dec
inc
dec
pusha
popa
xor
mov
cmp
jne
mov
pusha
popa
nop
nop
xor
mov
cmp
je
inc
inc
decl
jne
nop
nop
pop
pop
pop
pop
pop
pop
ret
nop
push
nop
inc
dec
nop
inc
dec
shr
mov
pusha
popa
pusha
popa
nop
mov
pop
ret
mov
push
mov
inc
dec
pusha
popa
nop
pusha
popa
movzwl
lea
add
nop
inc
dec
pop
ret
push
inc
dec
nop
nop
pusha
popa
push
mov
push
call
test
je
push
push
push
xor
mov
add
add
push
mov
push
call
test
jne
xor
jmp
mov
pusha
popa
nop
nop
mov
pop
ret
mov
push
push
push
push
mov
pusha
popa
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
pusha
popa
mov
mov
call
pusha
popa
nop
nop
pusha
popa
movl
nop
nop
movb
inc
dec
inc
dec
nop
nop
pusha
popa
nop
push
push
push
push
xor
mov
push
push
push
push
call
push
push
call
inc
dec
pusha
popa
pusha
popa
inc
dec
nop
inc
dec
nop
inc
dec
pusha
popa
movl
inc
dec
nop
inc
dec
pusha
popa
inc
dec
inc
dec
pusha
popa
call
test
je
nop
pusha
popa
pusha
popa
inc
dec
mov
push
mov
push
call
nop
inc
dec
mov
mov
add
mov
pusha
popa
pusha
popa
pusha
popa
nop
mov
pusha
popa
pusha
popa
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
nop
inc
dec
nop
nop
push
mov
mov
push
push
mov
push
mov
push
call
inc
dec
nop
pusha
popa
pusha
popa
inc
dec
mov
call
mov
inc
dec
inc
dec
mov
movzwl
dec
test
jl
inc
xor
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
call
test
je
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
call
inc
dec
jne
inc
dec
inc
dec
nop
push
push
push
xor
mov
add
add
push
mov
push
call
test
je
pusha
popa
inc
dec
inc
dec
mov
mov
add
mov
nop
nop
nop
inc
dec
inc
dec
inc
dec
push
mov
push
call
cmp
sbb
inc
mov
inc
dec
pusha
popa
nop
nop
inc
dec
nop
nop
nop
nop
inc
dec
nop
cmpb
jne
push
mov
push
call
jmp
mov
push
call
pusha
popa
inc
dec
pusha
popa
pusha
popa
pusha
popa
nop
pop
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
and
clc
sbb
enter
mov
inc
add
inc
add
sbb
add
inc
add
sbb
add
add
mov
mov
add
push
push
push
xor
mov
mov
mov
call
xor
push
push
pushl
mov
nop
pusha
popa
nop
push
call
mov
inc
dec
pusha
popa
push
push
push
push
call
mov
pusha
popa
nop
nop
push
push
push
call
pusha
popa
inc
dec
inc
dec
push
push
push
call
add
mov
inc
dec
inc
dec
pusha
popa
push
push
call
pusha
popa
nop
inc
dec
push
lea
mov
call
pushl
push
lea
mov
call
mov
call
push
push
call
mov
nop
inc
dec
inc
dec
pusha
popa
push
push
call
inc
dec
nop
push
call
add
nop
nop
nop
nop
mov
nop
inc
dec
movb
inc
dec
inc
dec
mov
add
inc
dec
nop
inc
dec
addb
pusha
popa
nop
inc
dec
xor
pusha
popa
pusha
popa
pusha
popa
pusha
popa
mov
inc
dec
inc
dec
inc
dec
nop
xor
nop
inc
dec
inc
dec
pusha
popa
nop
pusha
popa
mov
sub
mov
pusha
popa
pusha
popa
nop
inc
dec
movb
nop
pusha
popa
nop
mov
call
inc
dec
nop
nop
inc
dec
mov
call
inc
dec
pusha
popa
mov
call
inc
dec
pusha
popa
mov
call
inc
dec
inc
dec
inc
dec
nop
mov
call
nop
pusha
popa
mov
call
inc
dec
nop
pusha
popa
mov
call
inc
dec
pusha
popa
mov
call
pusha
popa
inc
dec
mov
call
nop
inc
dec
mov
call
inc
dec
pusha
popa
nop
mov
call
pusha
popa
nop
nop
nop
mov
call
pusha
popa
pusha
popa
mov
call
push
call
mov
pusha
popa
nop
mov
call
push
call
mov
inc
dec
nop
pusha
popa
mov
call
push
push
call
mov
inc
dec
inc
dec
mov
call
push
push
call
mov
inc
dec
pusha
popa
pusha
popa
nop
mov
call
push
push
call
mov
inc
dec
inc
dec
nop
mov
call
push
push
call
mov
inc
dec
nop
nop
inc
dec
mov
call
push
push
call
mov
nop
pusha
popa
mov
call
push
push
call
mov
pusha
popa
inc
dec
mov
call
push
push
call
mov
pusha
popa
nop
inc
dec
mov
call
push
push
call
mov
inc
dec
nop
pusha
popa
inc
dec
mov
call
push
push
call
mov
nop
inc
dec
mov
call
push
push
call
mov
pusha
popa
inc
dec
pusha
popa
inc
dec
xor
xor
mov
shr
xor
mov
pusha
popa
inc
dec
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
and
nop
inc
dec
inc
dec
pusha
popa
movb
nop
nop
mov
mov
inc
dec
pusha
popa
pusha
popa
pusha
popa
mov
xor
mov
xor
xor
xor
xor
xor
mov
pusha
popa
nop
cmp
je
inc
dec
inc
dec
inc
pusha
popa
inc
dec
pusha
popa
jmp
cmp
jne
mov
pusha
popa
nop
inc
dec
jne
nop
nop
pusha
popa
call
pusha
popa
nop
nop
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
imul
insb
add
add
push
dec
inc
pop
add
incl
add
add
je
incl
dec
outsl
fs
add
add
add
add
inc
pop
inc
add
adc
movsb
adc
in
inc
add
push
inc
add
add
add
inc
add
inc
add
lret
int3
enter
enter
fmul
loopne
jecxz
in
lea
in
inc
add
lea
add
inc
add
mov
cmp
and
lcall
sub
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
xchg
ja
jne
insb
lret
lret
jne
pop
ret
jns
stos
inc
xor
sbb
or
or
dec
or
stc
cli
cli
out
repnz
mov
repnz
out
in
in
mov
mov
mov
cmp
in
push
insl
mov
adc
mov
repnz
jge
xorb
fdivrl
add
xlat
lods
ss
cs
test
aam
iret
rcrb
and
testl
push
xor
loope
out
in
in
ljmp
adc
adc
push
sbb
out
pop
add
add
add
push
out
or
or
or
ss
lret
xor
ds
cmp
cmp
cmp
es
xor
and
xor
cs
sub
sub
cmp
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
xor
dec
dec
dec
dec
dec
dec
dec
jbe
je
repz
popa
jle
insb
jge
jnp
imul
pusha
popa
outsb
jg
insl
push
push
xchg
xchg
mov
nop
sahf
out
popf
lcall
test
mov
mov
mov
mov
mov
mov
mov
movsb
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
fmul
mulb
lock
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
jnp
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
adc
xor
inc
pop
pop
dec
pop
cmp
or
daa
and
and
and
das
sub
sub
sub
push
push
push
push
push
push
push
push
pop
pop
sbb
pop
sbb
daa
xor
inc
dec
dec
dec
sub
jbe
je
jae
jo
jle
jl
jp
js
data16
bound
insb
insl
push
push
xchg
xchg
xchg
nop
xchg
sahf
lahf
pushf
popf
lcall
test
mov
mov
mov
mov
mov
mov
mov
movsb
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
enter
hlt
cmc
repnz
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
xor
xor
xor
ds
cmp
cmp
cmp
es
and
and
and
cs
sub
sub
sub
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jbe
je
jb
jo
jle
jl
jp
js
fs
popa
outsb
outsl
insb
insl
push
push
xchg
xchg
xchg
nop
xchg
sahf
lahf
pushf
popf
lcall
test
mov
mov
mov
mov
mov
mov
mov
movsb
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
enter
hlt
cmc
repnz
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
xor
xor
xor
rolb
inc
lods
inc
scas
inc
lods
mov
pop
stos
push
movsl
inc
daa
push
push
mov
fsubrs
ret
lods
push
neg
fnsave
mov
xor
js
push
xlat
fnstenv
fidivs
loopne
mov
jecxz
mov
xor
jl
cwtl
jno
call
cmp
xor
xchg
inc
sbb
jbe
add
popf
sahf
mov
adcl
mov
test
push
in
mov
pop
add
xchg
idivb
es
mov
mov
xchg
in
sbb
enter
or
addb
adc
orb
jns
mov
push
push
arpl
jae
pop
arpl
ljmp
add
jecxz
xchg
cmp
pop
inc
mov
movsb
adc
rclb
pop
or
fcmovb
xor
lea
dec
dec
out
das
lea
addr16
dec
jnp
es
outsl
dec
aad
movsb
and
mov
mov
test
mov
test
or
inc
inc
data16
jne
adc
xchg
sbb
and
xor
enter
jg
xchg
or
subb
add
sbb
out
mov
add
push
pop
xor
shl
je
jne
mov
jle
jg
leave
mov
sbb
in
ret
cmp
rcll
scas
repnz
xchg
fisttps
xchg
cwtl
int3
test
and
sub
push
pop
jo
add
mov
mov
mov
adcl
inc
lret
inc
negb
orl
mov
out
push
call
call
dec
mov
arpl
ja
out
push
je
xchg
jl
fisubrl
jne
int3
std
mov
push
les
stos
xor
mov
adc
add
xchg
out
mov
xchg
or
jns
jmp
sub
daa
pop
mov
stos
and
popf
sbb
pop
outsl
inc
mov
out
xchg
xorl
pop
iret
adc
cmp
movsl
dec
pop
mov
ret
lods
ljmp
or
dec
or
arpl
or
sub
sub
adc
je
adc
fcomp
xor
mov
add
sti
xchg
fsubrl
cli
and
dec
mov
scas
cmp
and
loopne
scas
in
test
fiaddl
inc
mov
rol
lds
sbb
lcall
lret
rorl
rcll
mov
mov
xchg
ljmp
in
inc
insl
mov
inc
pop
jmp
xor
xchg
cmpsl
idivb
pop
push
out
xchg
lcall
push
aad
nop
cld
std
jno
clc
jno
jg
sub
xor
and
sub
dec
add
or
or
dec
xor
and
dec
xor
outsl
fadds
inc
push
in
cmp
jae
jo
loopne
jnp
in
daa
adc
aas
test
ds
aad
mov
pushf
bound
scas
fnsave
es
das
jg
fwait
shlb
cld
inc
loope
mov
out
ss
sbb
in
hlt
stos
xchg
jnp
and
add
sub
inc
sub
mov
cwtl
imul
pop
sub
mov
cld
mov
mov
mov
icebp
mov
js
mov
pop
cwtl
sarl
fmuls
add
jmp
je
cld
int
pushf
pusha
gs
sti
jo
mov
stos
leave
jno
arpl
ds
xor
sub
lods
add
mov
and
mov
sub
jae
jno
repz
sbb
push
int
and
push
add
push
mov
mov
or
xor
inc
popa
or
cmp
js
mov
inc
dec
jo
xor
pop
push
sti
mov
pop
insb
test
jb
or
data16
push
pop
loopne
test
outsl
test
jp
cwtl
cmc
mov
int
rol
sbb
pop
or
push
push
sbb
out
xchg
in
push
icebp
adc
std
push
lods
sbb
stos
cmpsl
sbb
ret
fxch
adc
std
pop
mov
lods
fiaddl
lock
add
add
push
stos
lea
icebp
xlat
inc
loop
mov
out
dec
push
iret
sbb
cmp
es
shr
dec
flds
xor
std
hlt
adc
dec
popa
or
test
je
lods
nop
and
movsl
add
dec
sahf
and
mov
pushf
and
pop
jle
cld
dec
dec
inc
pusha
frstor
push
pop
ss
or
mov
jp
cmp
sub
je
inc
xor
pop
insl
push
ret
jo
push
pop
and
ret
shlb
cmp
das
push
hlt
xor
jno
fnstenv
jo
les
xchg
inc
xchg
mov
mov
idivb
and
and
out
shlb
loope
hlt
cmp
jnp
nop
sub
sbb
mov
mov
mov
mov
mov
xor
decb
cmp
js
jmp
cmp
ja
push
out
sub
jecxz
jb
push
fcom
mov
fistpl
cmp
sti
xchg
je
mov
imul
imul
add
fisubrl
xor
jg
jp
ja
dec
lods
push
xchg
push
push
jbe
das
mov
inc
ret
adc
imul
in
out
or
outsl
das
xchg
pop
incl
jl
jno
arpl
push
loop
call
push
xor
fimull
sbb
or
call
gs
in
aaa
ret
lret
adc
inc
inc
mov
sbb
inc
pop
or
icebp
sbb
test
push
or
mov
add
icebp
or
leave
push
clc
adc
std
das
shlb
test
jbe
daa
jl
repnz
stc
out
mov
sahf
imulb
test
cmpsb
mov
jge
nop
sbb
inc
out
push
aam
xchg
dec
test
jge
pop
jne
nop
int3
imul
jnp
test
lahf
ss
pop
outsl
cltd
stos
fdivr
ss
push
mov
insb
mov
hlt
sbb
mov
cmc
sub
scas
mov
inc
lods
pop
mov
or
ds
test
cmp
sub
push
lods
jno
xchg
sub
push
pop
add
test
and
adc
out
ficoml
testl
sbb
mov
mov
lock
sbb
jl
sbb
or
ds
std
repnz
aas
mov
pop
mov
jp
dec
std
into
lock
jmp
outsl
xor
std
sti
sbb
push
xchg
or
jecxz
sub
lahf
lock
adc
dec
test
fwait
pop
andb
lods
lods
mov
loopne
jmp
je
in
stos
push
mov
test
inc
xchg
lahf
jl
clc
mov
xchg
das
xchg
jle
ja
or
xorb
jae
cltd
ss
fs
xlat
loopne
data16
adc
divb
scas
ss
sub
pop
inc
int
mov
stos
push
lahf
pop
pop
imul
enter
ljmp
lock
das
xchg
jbe
fsubs
nop
mov
jmp
fcmovb
hlt
in
sub
sbb
xchg
sub
sub
add
jle
dec
std
xor
rcll
jae
js
repz
cld
xorb
or
bound
sbb
or
out
lahf
push
popf
repnz
movsl
sbb
mov
jp
xchg
loope
xchg
add
adc
sarl
mov
test
inc
js
movsl
scas
ret
pop
sbb
mov
inc
push
sub
in
test
ljmp
lea
aas
inc
xchg
jl
jno
jb
jae
popf
sbbb
jns
rcrl
addr16
push
cmpsb
xchg
or
sahf
insb
addb
sbb
stos
push
mov
dec
pop
sub
add
sub
mov
dec
mov
jbe
ja
into
or
clc
jp
mov
xlat
mov
xchg
rorb
and
fsubl
push
dec
mov
int
cmp
incb
push
mov
mov
pop
filds
mov
loopne
adc
leave
scas
jmp
scas
mov
das
lret
mov
and
push
je
add
orl
cmp
mov
mull
addb
std
movsb
mov
jmp
ljmp
push
pop
xchg
dec
ficomps
mov
js
pop
mov
imul
int3
sub
dec
popa
insl
xchg
jo
sahf
dec
xor
or
or
push
das
subb
dec
inc
mov
imul
scas
sbb
and
add
xchg
sub
movsl
mov
xor
push
xor
push
adc
push
mov
cltd
inc
aas
fs
leave
jo
leave
sbb
push
sub
inc
in
mov
lret
sub
aad
fs
mov
and
outsl
sbb
sub
cmc
dec
filds
out
cli
pop
mov
xchg
mov
adc
add
loope
mov
mov
gs
or
xchg
scas
jnp
pop
sub
or
jle
cmp
xor
mov
rorb
jecxz
adcb
dec
sahf
aad
pop
mov
sbb
cmpsb
and
stc
jmp
popa
push
imul
out
dec
xor
frstor
cmp
cmpb
into
iret
nop
xchg
inc
fistpll
out
scas
daa
aas
dec
jle
mov
xor
shll
test
or
movsb
push
adc
movsl
mov
sahf
mov
popf
fiaddl
dec
xchg
and
lods
sub
repnz
cmp
mov
xor
rclb
jnp
ss
shlb
xor
call
insl
ss
mov
or
bound
jge
xchg
pop
mov
adc
test
fs
sbb
jg
dec
out
xchg
js
int
mov
adc
loopne
shlb
dec
mov
or
scas
sti
in
in
movsl
sbb
lret
mov
aad
mov
ror
and
mov
or
aam
movsb
cmc
jbe
add
jp
push
jle
xchg
rorb
out
lea
js
in
push
dec
pop
loope
cmp
arpl
add
xchg
insl
and
lret
aad
add
scas
insl
btc
jecxz
loop
jo
jnp
rorb
outsl
push
sbb
and
jge
outsl
scas
pop
adc
in
fistpll
jb
mov
pop
jg
cmp
das
inc
push
xor
dec
int
push
sub
push
cmp
and
sbb
loopne,pt
popf
push
ret
hlt
sbb
sbb
pusha
popa
inc
inc
adc
test
push
mov
popf
xchg
mov
mov
icebp
icebp
clc
mov
sbb
sahf
xchg
cmp
es
mov
mov
pop
mov
jg
dec
mov
hlt
decb
jp
movl
lahf
jmp
mov
mov
xchg
and
inc
xor
push
stos
stos
insb
hlt
cmc
ficomps
insb
cmp
jl
xchg
ja
adcl
mov
mov
gs
ja
sub
sbb
outsl
sub
ja,pn
cmp
sbb
ljmp
mov
jmp
jns
push
push
cld
jl
out
cmp
pop
cmp
ror
fsubs
imul
add
xchg
push
shlb
inc
cli
push
xor
cli
cmp
pop
dec
dec
out
inc
xor
int
stos
jnp
xchg
mov
cld
mov
fcomip
adc
cli
dec
pushf
mov
sti
or
sbb
xor
xchg
adc
lcall
adc
pop
daa
inc
imul
fcmovnbe
xor
inc
inc
scas
fwait
movsb
sub
cmpsb
push
dec
cltd
dec
mov
adc
cmpsb
and
mov
mov
mov
jbe
in
xor
jle
cmc
movsl
xchg
inc
pusha
pop
push
jo
mov
sbb
pop
jae
out
lods
addl
and
adc
inc
sbb
movsb
pop
mov
shlb
data16
aaa
pop
cmp
jg
xor
jae
adc
pop
fisttps
inc
jge
les
dec
add
into
cmpsb
push
mov
outsl
pop
ficompl
dec
push
shrb
in
daa
mov
mov
fldl
fisubs
test
fcoml
pop
adc
incb
test
mov
das
or
and
mov
adc
ret
pop
fwait
daa
cmc
into
ljmp
loop
call
aad
testl
xlat
xchg
stos
test
je
stc
cli
mov
jne
shlb
fwait
xchg
mov
xor
push
bound
pop
push
rcl
fwait
sub
lcall
lcall
bound
push
push
jb
movsb
mov
lahf
imul
stos
and
jb
mov
sbb
scas
scas
mov
fwait
rorb
pop
push
push
push
dec
mov
div
dec
cmp
and
inc
daa
xor
in
sbb
sbb
cmp
inc
out
ret
mov
pop
out
rorl
addr16
fidivrs
pop
fidivl
hlt
sbb
lock
push
mov
es
mov
xor
mov
add
jle
adc
xchg
orl
sbb
fistpl
push
adc
sbb
sub
cmp
cli
and
sub
xchg
lods
clc
hlt
xor
push
shl
js
mov
mov
fistpll
movsb
xor
outsl
mov
jns
pusha
clc
stc
lret
fiadds
cli
cltd
cmpsl
sub
and
xchg
dec
dec
lea
mov
mov
cld
add
jae
push
jae
es
cmpsl
sub
jp
pusha
jmp
jp
enter
push
movsl
mov
mov
mov
mov
mov
das
lds
loop
dec
movsl
fidivrs
xor
insb
jmp
pop
insl
fimuls
fidivs
jecxz
push
shrl
pop
push
ljmp
insl
xor
inc
or
adc
jp
rolb
sub
mov
mov
mov
adc
sbb
xrelease
scas
or
ret
mov
dec
sub
pop
rcll
add
pop
test
xorb
testl
fimull
les
decb
lods
push
ljmp
mov
shll
data16
jge
out
xchg
jo
jle
int
iret
xchg
jle
push
xor
adc
out
jae
pop
push
sbb
rol
movsl
lahf
cld
cs
ret
stos
inc
scas
pop
sub
sbb
scas
bound
adc
stos
cmp
and
jo
or
add
xor
lds
jecxz
adc
loope
gs
aaa
pop
ds
push
sarl
cmp
mov
or
jb
add
jge
push
imul
lds
repz
fdivp
dec
adc
cli
repz
push
add
inc
inc
loop
mov
push
loop
cwtl
push
fwait
aad
decb
aas
sbb
push
jae
sub
and
jle
sub
cs
imul
sub
test
lret
stc
fcom
fnstenv
jp
mov
add
jo
cmpsb
insl
out
lods
test
pop
lret
mov
shlb
lahf
inc
gs
pop
or
adcb
jecxz
aas
test
pop
arpl
jno
jnp
imul
enter
mov
outsl
mov
mov
outsl
push
gs
jno
lahf
call
jns
pop
dec
mov
mov
dec
lods
mov
aas
push
mov
mov
dec
jp
xlat
pusha
jbe
mov
sub
push
cmp
sub
lds
jno
pushf
jecxz
pop
movntq
dec
out
and
ja
fiadds
aaa
sbb
dec
sbb
scas
clc
outsl
insb
aas
dec
loop
mov
fsubr
push
loopne
or
and
stc
or
lock
or
stos
les
cmpsl
pushf
and
xchg
andb
xchg
and
loop
aad
ret
add
cmpsb
outsl
mov
mov
not
mov
push
into
vandnps
push
mov
scas
pop
push
out
xchg
or
call
loopne
lcall
mov
repz
push
inc
jp
jae
cmpb
lods
addr16
popf
sbb
mov
adc
push
fsubrs
ja
jne
sbb
sub
sub
add
fidivrs
inc
mov
cmp
test
pop
dec
shll
dec
jb
sti
and
push
jp
xor
push
ja
test
add
out
popf
xor
mov
ret
pop
sub
dec
xor
inc
aaa
mov
add
jmp
dec
mov
in
cltd
fisubrl
add
inc
rorl
test
sahf
xchg
xor
stos
loopne
sub
sbbl
ds
subl
test
xchg
andps
adc
repnz
and
xchg
sarb
loope
jecxz
fninit
jmp
dec
js
mov
xchg
mov
push
outsl
jae
xchg
repz
xchg
mov
dec
push
mov
imul
and
data16
mov
cmp
add
test
xchg
or
or
dec
dec
lock
adc
mov
sub
push
push
adc
pop
mov
and
sbb
lret
sub
mov
stc
fcoml
shl
popa
xchg
push
add
pop
mov
outsl
out
imull
outsb
adcl
pop
in
adc
cmpsb
movmskps
into
dec
xor
mov
in
push
pop
or
adc
mov
cmp
ds
scas
repnz
loopne
push
xchg
lahf
and
push
lahf
cmp
popf
pop
inc
add
negb
imul
test
inc
test
xorl
bound
inc
pop
shll
frstor
mov
cmc
andb
shll
pop
xchg
sbb
fwait
scas
iret
cmc
xchg
inc
decl
lock
push
mov
mov
int3
push
sub
mov
jp
sub
daa
dec
jns
pop
push
mov
mov
jno
inc
pop
xor
pop
mov
push
rcl
aaa
dec
sti
jl
lock
push
out
add
es
movsl
jno
push
pop
lret
into
ss
push
mov
jae
push
sub
int
mov
ffree
sti
and
pop
sbb
jmp
rorb
cli
aaa
mov
xor
mov
or
icebp
or
ret
add
cltd
test
and
cmpsb
nop
inc
rcr
aaa
push
aad
jmp
jp
sarl
scas
aaa
pop
cld
inc
repz
adcl
test
mov
lea
push
push
xor
cmp
push
popa
jge
lock
rolb
iret
sub
nop
jns
pop
mov
push
mov
js
cltd
popf
jae
or
xchg
gs
inc
addb
lock
adc
inc
mov
sbb
sub
jno
ret
inc
sub
out
outsl
fldl
mov
cmp
or
cmc
cmp
ret
out
push
cmp
pop
cmp
shll
xor
sbb
cmp
ja
test
fwait
dec
or
out
cld
inc
cmpsb
das
xchg
push
push
inc
mov
sbb
pop
mov
loop
mov
mov
mov
xor
or
or
into
aaa
pushf
scas
xor
roll
sub
xor
dec
rcl
test
ljmp
repnz
xlat
mov
and
jl
es
fsub
jle
in
out
pop
mov
push
leave
push
gs
xor
xchg
aad
lcall
icebp
and
decl
dec
adc
push
rcll
add
cmp
test
sub
fs
je
pushf
sub
mov
jle
or
pop
ja
stos
repnz
sbb
cmp
insl
test
xchg
ja
sbb
out
movsb
xchg
and
out
fldcw
mov
jmp
mov
and
rcl
jecxz
mul
xlat
cli
insl
imul
out
out
lock
repnz
sbb
ret
in
loop
dec
xchg
inc
stos
inc
xor
sbb
test
and
xchg
push
mov
stc
cli
aas
adc
popf
or
addl
sub
cli
cmp
xchg
xor
rol
sub
fisubl
xor
xor
sarl
sub
stc
je
sub
dec
lock
divb
inc
sahf
test
jecxz
call
std
mov
mov
add
pop
lea
fwait
sbb
push
xchg
mov
call
mov
cwtl
mov
mov
mov
adc
mov
cmp
jl
mov
je
push
and
push
stos
imul
stos
ret
push
xor
cld
pop
dec
xor
add
sbb
popa
leave
xchg
sub
jno
fs
cmp
xor
sub
xor
adc
icebp
repz
notb
and
out
pop
dec
cli
iret
bound
jl
sbb
or
mov
ds
sbb
adc
call
add
and
sbb
loope
mov
sbb
or
xor
ds
fbld
popa
fisubs
ds
cmp
cmp
je
std
lods
inc
fs
mov
mov
mov
lcall
mov
lods
mov
arpl
outsb
cmpsl
pusha
addl
fadds
test
das
push
and
xchg
jnp
andb
rolb
mov
pop
cs
xlat
sub
scas
push
mov
and
mov
push
mov
xor
jp
mov
das
ss
cmp
addl
jae
leave
add
xor
fidivl
outsl
sbb
nop
xor
mov
fstp
xor
jmp
pop
add
in
xor
xor
jbe
scas
repnz
or
jge
jae
and
decl
stos
loopne
sbb
add
mov
mov
in
add
mov
sbb
std
test
sar
pop
pushf
iret
loop
inc
cmp
daa
clc
in
push
iret
mov
repnz
cmpb
in
ljmp
mov
mov
dec
std
push
cmp
rorl
in
push
movsl
js
adc
pop
pop
push
out
fiaddl
stc
pop
notb
aas
jne
decl
outsl
push
inc
mov
dec
jl
jbe
outsl
sbb
xlat
adc
movsb
mov
mov
pop
or
pop
cmp
pop
sbb
adc
mov
divps
bound
mov
sbb
pop
ret
shlb
jg
in
xlat
pop
sbb
arpl
vpavgb
popa
into
pop
shr
aaa
push
pop
sbb
add
roll
cmp
sahf
dec
push
lret
mov
lods
mov
aas
loop
sbb
mov
xchg
and
mov
mov
sub
das
aaa
and
lods
rclb
add
sub
ret
dec
xchg
rsm
mov
sub
cmp
loop
fs
cmp
mov
fbld
inc
mov
inc
hlt
xchg
ret
mov
sti
mov
test
mov
outsl
fadd
lcall
test
ffree
imul
add
cltd
jg
sbb
ds
jb
pop
and
mov
jnp
mov
xor
incb
clc
icebp
jbe
push
mov
mov
xchg
xor
cli
add
dec
jle
lock
add
dec
fidivrl
cld
xchg
jge
sti
insb
lea
xlat
pusha
in
push
xchg
pop
sbb
dec
pop
pop
or
or
jmp
cmpsb
or
pop
xor
sbb
jmp
sub
into
daa
mov
add
xchg
clc
sahf
scas
hlt
xor
xor
xchg
incb
daa
fisubs
pop
movsb
into
cmpsb
and
test
ret
cmp
out
sub
xchg
fs
xchg
aad
insl
push
shr
cld
lods
dec
jp,pt
xchg
lcall
or
pop
jecxz
jne
mov
insl
into
push
pushf
xlat
ds
xchg
lcall
mov
ja
ds
jns
fwait
xchg
sub
push
popa
xchg
test
nop
mov
daa
bound
sbb
sbb
pop
jne
or
scas
es
sbb
push
repz
jp
pop
pop
inc
mov
mov
jp
and
inc
inc
lods
xor
fbld
std
jae
aad
js
or
pop
loopne
popa
les
icebp
xor
or
loop
add
mov
add
mov
loop
adc
or
loop
xor
out
ja
ss
mov
outsb
mov
dec
in
cltd
clc
mov
mov
sub
adcl
cmpsb
sti
xchg
loope
add
pop
lds
in
ret
pop
and
xor
ret
xlat
dec
pop
into
fnstenv
scas
mov
les
out
mov
add
inc
mov
mov
dec
popa
mov
es
imul
lahf
push
cmc
out
ret
rorb
jne
add
mov
cmpb
insb
mov
jno
and
es
sbb
xchg
dec
xchg
test
notl
jmp
mov
pushf
mov
ss
jmp
jno
xlat
insb
cmc
stos
sub
les
sbb
iret
out
add
pop
dec
outsl
psllw
inc
or
adc
push
xchg
cmpsb
sti
sbb
mov
jmp
icebp
jmp
mov
push
sub
xor
in
add
ds
dec
or
add
sub
sbb
mov
sub
dec
and
rcl
dec
dec
inc
pop
fstps
mov
cltd
insl
js
jg
pop
mov
test
enter
push
dec
jne
cwtl
in
out
mov
ja
lret
xchg
xchg
pusha
xchg
int
int3
je
cli
mov
cmp
xor
dec
into
sub
into
stos
sbb
lds
mov
sbb
insb
mov
stos
sub
push
pop
punpckhwd
mov
sub
mov
jns
dec
sbb
sub
in
ds
pusha
push
jp
xor
mov
repnz
xchg
ljmp
xor
popa
push
adc
cmp
js
dec
das
call
popf
mov
loopne
addr16
cli
xchg
nopl
repz
rcrb
sub
or
lret
mov
loope
pop
mov
sahf
xlat
daa
insl
mov
orb
mov
add
ljmp
pop
push
ja
gs
jmp
inc
jmp
outsl
push
out
jecxz
int
test
jne
sub
inc
inc
xchg
sahf
xchg
rclb
jns
in
addr16
imul
fwait
cwtl
or
jae
gs
cs
pop
cltd
imul
mov
adc
push
mov
das
dec
scas
test
test
mov
jecxz
push
xchg
mov
out
inc
xor
cmp
jns
jbe
jb
inc
jne
and
lret
call
jmp
addr16
push
leave
cmc
rolb
cmp
and
xlat
and
fptan
dec
call
jb
adc
pop
inc
xchg
xorl
jecxz
mov
pop
cmpb
pop
mov
push
sti
lahf
cmc
ficomps
and
xchg
lahf
xchg
cmp
fucomi
lret
fsubl
sub
aad
rorl
sbb
push
pusha
mov
dec
dec
lret
adc
loop
aam
inc
sbb
mov
mov
mov
lea
addl
addr16
sbb
in
push
rorb
jo
fidivs
add
push
jl
push
cmpsl
mov
test
mov
jbe
aaa
cld
mov
sbb
jle
test
and
inc
lods
lcall
insl
mov
add
dec
cmc
pop
repz
in
inc
sti
cmp
cmp
jb
mov
mov
addr16
scas
fsubs
sbb
in
add
pop
in
lock
popa
push
scas
stc
fimuls
loopne
lcall
cli
into
out
jmp
lret
mov
ja
jmp
cmp
mov
out
idivl
mov
or
sbb
lcall
into
cmpl
outsl
mov
test
mov
and
jo
mov
mov
popf
mov
mov
jecxz
fucom
lods
out
inc
je
repnz
nop
mov
mov
fadds
in
pop
into
inc
add
xchg
test
js
push
jmp
sub
pusha
jge
xor
xchg
jae,pt
dec
xchg
and
je
nop
pop
sbb
js
mov
jo
and
stos
call
in
push
xchg
aad
xchg
sub
je
inc
jl
inc
cmp
lret
sbb
mov
loopne
lds
fldenv
push
ja
cld
cmp
push
pop
add
repz
loope
jmp
or
push
popa
adc
lret
dec
stos
sti
add
adc
in
hlt
in
cmp
in
add
or
lods
pop
mov
mov
wrmsr
cli
push
and
subl
mov
cmpl
daa
enter
call
std
cld
loopne
jb
pop
pop
ljmp
in
push
call
aad
mov
es
fistpll
pop
xor
in
scas
fildll
add
stc
les
xchg
mov
xchg
outsl
sbb
imul
jl
subb
sub
dec
cmp
dec
jg
and
inc
ret
cltd
mov
mov
mov
and
cmpsl
push
mov
jecxz
aad
lahf
dec
testb
sub
cwtl
in
arpl
dec
or
xlat
addb
lret
mov
iret
inc
test
add
lcall
xor
dec
xor
inc
pop
ret
ss
stos
mov
loop
lock
add
or
jecxz
lock
repz
lcall
ret
out
call
test
mov
mov
jge
inc
fdivrs
mov
mov
push
push
out
gs
fisttpll
mov
fisubrl
xchg
in
xchg
popf
xorw
fwait
xor
xchg
shlb
cmp
xor
xor
enter
sub
sub
cmpb
sub
sbb
adc
mov
cmp
xor
sub
jne
mov
dec
dec
jne
sub
std
sar
sti
sarl
outsb
lret
pop
jp
xor
jb
arpl
pop
ss
xchg
data16
clc
lods
or
adc
sub
shl
sub
inc
adc
add
jmp
mov
push
shr
or
sbb
notb
aad
xor
adc
es
sbb
iret
add
add
mov
in
in
imul
popf
mov
lods
xchg
dec
idiv
pop
loop
shlb
mov
mov
ljmp
ja
aad
jae
js
pop
ret
insb
rcr
mov
insl
push
sub
xchg
imul
xchg
or
mov
or
push
cmp
cmpb
or
das
sbb
inc
iret
add
pop
es
and
in
test
sbb
bound
xchg
adc
mov
cmp
jnp
sbb
sub
pushf
sarl
movsb
sub
mov
sarl
cmp
roll
addr16
and
pop
mov
or
push
bound
or
mov
divl
pop
ds
adc
cmpsl
jo
pop
enter
xchg
cmp
ljmp
rorl
das
add
std
aas
pop
mov
repnz
lret
adc
adc
xchg
outsl
les
push
xlat
sub
sub
aam
push
xchg
jl
out
iret
movsb
iret
add
dec
shll
in
fsubrl
push
mov
sahf
dec
or
xor
call
fdivl
subl
pop
outsl
cli
jb
mov
lret
dec
jns
mov
imul
xorb
addr16
xchg
xchg
outsb
daa
jge
mov
adcb
mov
je
inc
pop
sub
cmpsl
hlt
scas
sbb
mov
dec
orl
seto
and
divb
pop
sub
xor
and
cmp
or
ss
jno
and
cmp
loop
clc
lea
pushf
add
test
std
adc
add
icebp
stos
out
out
cmpsl
enter
pop
jmp
mov
sahf
sbb
in
adc
fwait
leave
iret
stos
cmp
cmp
adc
jbe
int3
dec
xor
jl
out
jecxz
cltd
sbb
mov
mov
and
and
and
sub
pop
stc
clc
pushf
xchg
cmpb
ret
movsl
fs
push
pushf
dec
loope
xlat
out
fwait
dec
xchg
push
lahf
lods
or
jg
fldl
mov
lcall
nop
or
repnz
imul
pusha
dec
xor
push
mov
or
cltd
jo
js
sbb
dec
inc
mov
cmpsl
loope
dec
adc
bound
cwtl
popf
push
push
adc
pop
xor
push
gs
jns
jge
insb
lds
xor
cld
sub
xor
int
int3
stc
inc
outsb
fildl
pop
pusha
sub
movsb
xchg
push
mov
in
insl
jmp
shrl
shll
or
movsl
adc
shrb
shll
loope
xor
out
repz
in
mov
ror
adc
sub
nop
flds
pushf
adc
shrb
repnz
add
test
pop
sbb
push
daa
or
cli
lret
jne
jae
repnz
mov
js
jg
lods
mov
push
call
outsl
mov
push
jecxz
xchg
jae
add
mov
int3
xor
xchg
out
sahf
icebp
and
dec
push
aas
pop
push
cmp
inc
and
fisubs
imul
sub
test
jle
js
mov
scas
popa
add
xor
xor
pop
mov
mov
add
je
xor
rorb
aad
pop
sbb
fcmove
ja
cmp
fstpt
add
clc
push
pop
fcmovb
xor
add
inc
gs
loop
lret
leave
dec
shlb
cmp
mov
dec
mul
xor
decl
lret
mov
loop
hlt
mov
jmp
shlb
cltd
xchg
adc
push
rcrl
int
xlat
inc
cmp
arpl
fdivrp
inc
stc
movb
fsub
dec
mov
cmpsb
fadds
cmp
sbb
mov
fmull
or
lods
test
mov
pop
je
shl
xchg
inc
lods
in
lock
or
gs
inc
push
and
in
inc
int3
jno
jp
test
pushf
sahf
jbe
lahf
jno
lret
lods
aad
mov
inc
sub
sahf
fwait
push
mov
fistpl
stc
lods
push
push
sub
jg
jge
xor
add
fadds
and
cmp
add
outsb
pop
aas
inc
and
or
jle
pop
adc
sahf
or
pop
icebp
pop
dec
mov
cmp
jmp
jno
nop
shll
mov
test
mov
or
mov
sbb
cltd
push
clc
push
sarb
sbb
negb
jo
imul
test
xchg
fcomp
push
mov
push
lret
xchg
pop
inc
leave
mov
je
popa
or
movl
xchg
loopne
mov
pop
mov
sub
rcl
inc
sti
cli
stos
test
imul
inc
jb
pop
jbe
inc
mov
xchg
outsb
xor
stc
dec
lret
mov
xor
repz
jne
in
pop
push
popa
xor
sub
scas
and
push
xor
push
push
pushf
pop
or
mov
push
test
cli
clc
clc
xchg
lcall
push
into
iret
andb
out
xor
push
add
out
cld
xor
fidivrs
sub
jae
cli
stos
push
dec
adc
jne
sub
mov
clc
add
rcr
mov
or
lcall
std
cli
xor
sahf
jmp
es
cmp
jb
shl
out
sbb
jae
cmc
ret
mov
push
and
cmp
mov
mov
xchg
cmc
sti
js
xchg
enter
adc
data16
or
sahf
jo
out
add
jb
out
jo
add
inc
xchg
cmp
jo
inc
xchg
lods
and
inc
mov
addl
jecxz
mov
adc
sti
jb
clc
jge
imull
movsl
jl
mov
push
lahf
or
dec
aaa
sbb
push
imul
mov
mov
ret
aad
daa
sti
inc
add
fsubs
imul
test
jbe
sbb
cmpsb
push
cmp
mov
and
mov
cmp
orl
shr
dec
inc
out
xor
and
sbb
mov
test
push
sub
cmc
sbbl
int
pop
int3
stos
push
fbstp
mov
inc
lods
lea
or
in
mov
xor
cltd
mov
cmp
leave
je
lds
mov
push
mov
mov
repz
bnd
lods
push
mov
mov
mov
imul
rcl
push
mov
test
adc
xchg
lret
imul
jnp
cltd
popf
movsb
aad
cmp
or
inc
jae
stc
out
mov
outsl
jo
sahf
test
xchg
mov
adc
inc
lods
scas
sub
outsb
pop
aas
xor
push
test
incb
jbe
jle
dec
add
out
sbb
push
aaa
cwtl
sub
loopne
cmpsb
push
loopne
dec
pop
les
sbb
add
insb
pop
dec
dec
dec
outsb
add
mov
outsl
rolb
sbb
mov
or
scas
pop
sbb
stos
adc
adc
jbe
lock
popf
daa
das
mov
cmp
jmp
sti
fbstp
xor
arpl
sbb
pop
xchg
adc
pusha
into
or
inc
leave
lds
aad
in
or
pop
sub
jecxz
mov
into
pop
pop
in
xlat
pop
repnz
mov
gs
jg
push
data16
jle
sub
pop
push
adc
outsb
or
push
bound
mov
ret
test
mov
cmp
mov
shrb
in
push
add
addr16
cmp
xor
add
mov
sub
nop
popf
adc
sbb
xor
fucom
xlat
xor
lock
fsubr
ss
sbb
mov
cs
cs
cmp
push
pop
in
dec
repz
xchg
sarb
pushf
inc
mov
pop
and
cmpb
mov
lcall
xchg
inc
lock
jbe
nop
or
mov
sbb
cmc
xchg
sub
jb
cld
mov
iret
enter
push
mov
sub
scas
push
hlt
push
pop
pop
dec
hlt
lds
in
jge
inc
dec
popf
mov
call
mov
sarl
add
cmpsb
fcomps
stos
repnz
mov
imull
lea
js
and
jbe
and
sub
mov
push
imul
inc
mov
popf
mov
xor
mov
cmpsb
mov
pop
mov
xchg
jae,pn
and
add
arpl
out
jl
ljmp
call
cmc
out
cs
push
fists
testl
dec
sbb
in
stc
arpl
decb
and
dec
xor
push
fisubrl
sbb
adc
push
lea
lret
lods
frstor
inc
xchg
ds
es
dec
mov
jbe
lods
cmc
movsl
rcrl
andb
adc
ljmp
mov
pop
inc
jecxz
dec
ljmp
subl
fwait
icebp
push
addr16
jmp
jnp
and
or
cmpl
ljmp
imul
cwtl
sub
fs
cmc
inc
sbbb
outsb
adc
adc
xor
lcall
xorb
and
pop
push
dec
lcall
and
dec
fldt
lcall
call
daa
add
cmp
gs
inc
add
sub
int
pop
mov
sbb
icebp
inc
ja
testb
ljmp
and
ljmp
mov
aaa
rcrb
and
nop
lods
lcall
test
lahf
ror
jbe
dec
adc
cmpb
fnstsw
sbb
cmp
leave
mulb
sub
pop
lahf
in
in
push
push
adc
dec
mov
mov
add
sub
dec
aad
or
bound
xor
sahf
je
imul
mov
mov
cmp
jl
lcall
gs
outsl
imul
pop
xchg
leave
jb
mov
sbb
add
fidivs
cmp
jp
pushf
push
and
lods
mov
mov
mov
pop
insb
fnstcw
adc
mov
push
cld
outsb
push
iret
fdivr
mov
and
call
vmwrite
mov
imul
fnstsw
inc
cltd
mov
sub
out
repz
int
fmuls
xor
and
test
rep
lods
ljmp
movsl
dec
clc
sbb
loop
mov
les
lods
xor
les
lret
aam
add
or
mov
enter
pop
out
jl
cli
cld
lock
mov
movsl
in
mov
pop
sarl
outsb
pop
mov
subl
jbe
imul
roll
push
pop
jle
call
mov
data16
dec
outsl
jl
xchg
mov
or
inc
movsb
jne
iret
sbb
push
adc
mov
cmp
cmp
mov
aad
push
sbb
xor
sbb
repz
jbe
jne
ja
sbb
push
arpl
push
push
mov
loope
fcmovnb
inc
and
frstor
lds
sbb
adc
popa
sti
inc
xchg
xor
or
or
push
adc
pop
mov
dec
lret
inc
jp
dec
imul
xchg
loopne
lcall
cltd
jbe
nop
lds
cmp
lret
enter
frstpm(287
jmp
mov
push
loop
sub
pop
mov
mov
mov
dec
dec
pop
sar
frstor
jmp
popf
dec
mov
jne
sbb
mov
outsb
cmp
pop
jg
aam
aam
pop
jg
cltd
mov
lds
ljmp
inc
cmp
mov
addb
or
xchg
fbstp
xchg
cwtl
ss
xchg
mov
imul
mov
sbb
mov
ljmp
imul
loop
cmp
rcr
clc
rcll
lds
or
out
mov
cmp
mov
lock
xor
jp
and
fdivp
in
rcl
inc
push
loope
ja
sbb
xlat
or
scas
pop
sbb
cmpsb
psubw
lods
pushf
sub
sbb
or
lcall
jl
sarb
xchg
xor
add
xorl
and
out
jecxz
pop
jbe
std
mov
mov
fs
bound
dec
or
gs
inc
inc
paddsb
fidivs
test
test
xor
jne
imul
dec
addr16
jl
mov
mov
mov
mov
mov
sub
popa
faddl
and
pop
icebp
push
dec
in
dec
jb
push
out
dec
addr16
ds
xor
scas
add
mov
ds
xor
test
aad
fistpll
lret
or
or
cvtpi2ps
call
cmp
cmp
aas
cmp
fdivs
fidivs
shrb
sub
enter
int3
fnstenv
fbstp
fnsave
cmp
hlt
dec
ds
lret
and
mov
das
shl
sub
scas
push
add
int3
mov
sbb
mov
mov
mov
add
outsb
outsl
shlb
les
fdivrs
mov
jge
jg
pop
mov
inc
test
and
sub
in
nop
xor
ljmp
push
mov
pusha
test
imul
outsl
pushf
imul
adc
sub
sub
dec
daa
test
sahf
aas
pushf
cmp
xchg
pop
xor
out
dec
in
dec
loop
loopne
out
in
xor
pop
pop
shlb
aam
into
sub
adc
add
outsb
int
ret
pusha
lds
fnstenv
shll
jo
jbe
je
mov
mov
inc
in
and
and
cwtl
aas
sahf
cmp
nop
aaa
xchg
sbb
sub
sarl
in
mov
lret
clc
test
int
mov
mov
mov
mov
ljmp
or
or
aad
xlat
movsb
shrl
mov
lahf
and
dec
loope
jecxz
in
in
out
xor
xchg
sub
div
lock
repnz
cld
test
stc
aad
iret
add
push
add
add
jne
insb
or
pusha
adc
push
cmp
mov
mov
push
mov
in
and
and
sub
lods
push
in
cwtl
pop
mov
movsb
dec
insl
xchg
xchg
xor
xchg
inc
cmpl
xchg
dec
adc
jne
cld
daa
fsub
sub
shlb
into
pop
pop
pop
pop
and
gs
movsb
push
imul
adc
fnstcw
leave
enter
mov
xor
xor
jmp
in
sbb
and
shl
nop
xor
or
lods
add
xor
jae
add
mov
js
ret
dec
xlat
mov
jnp
jne
lahf
jo
jb
inc
adc
iret
dec
in
roll
sbb
fnstcw
dec
jp
jmp
sub
pop
test
stos
inc
lods
inc
scas
inc
jo
xchg
pop
stc
lret
test
add
push
lcall
sub
je
movsl
dec
pop
fidivs
adc
sbb
dec
and
jl
cmpsl
inc
mov
xor
sub
dec
dec
clc
mov
pusha
icebp
sbb
xor
push
sub
xchg
sub
int
mov
push
rep
int
mov
xor
xor
xor
push
aaa
rol
pop
fidivrs
push
pop
jb
cmpsl
mov
inc
inc
inc
add
or
lea
sbb
out
mov
mov
adc
repnz
cmp
ljmp
int
js
push
xorl
rcrl
jge
push
lea
mov
arpl
out
fimull
scas
test
mov
call
dec
pushf
dec
mov
cmpl
bound
xor
xchg
lds
xor
andb
jl
xchg
adcb
xchg
js
lret
sahf
and
bnd
lahf
jl
pushf
xor
inc
mov
or
in
cmp
dec
sub
sarb
fs
leave
pop
fwait
mov
xor
add
add
cmp
insl
mov
insb
adc
pop
rcr
ret
jmp
shll
loopne
in
mov
mov
loop
push
push
sbb
repnz
lods
sahf
and
ret
movsb
xchg
xor
adc
cld
lret
sbb
sbb
mov
mov
cmpl
mov
lock
std
mov
popa
jns
jnp
push
mov
into
rcl
shrb
sub
lahf
push
mov
out
mov
mov
push
inc
into
scas
jo
cltd
cs
mov
aas
hlt
push
cmp
xchg
or
or
das
sbb
sbb
insb
lods
inc
mov
push
jp
pop
std
xchg
xchg
mov
adc
rolb
cmpb
test
pop
mov
mov
inc
xchg
cmp
and
enter
loopne
push
rorl
xor
push
out
fbld
pushf
xor
ss
fdivs
ficompl
fiadds
arpl
in
push
out
sbb
sarl
mov
shlb
lea
fcompl
loopne
movsb
orl
daa
clc
sbb
xchg
xor
dec
sti
sbb
sub
test
push
hlt
mov
add
out
mov
mov
cmc
out
pop
lods
push
mov
out
shl
repz
push
out
push
inc
ljmp
mov
out
in
cltd
jo
lds
inc
test
xor
gs
fs
add
outsb
mov
test
jnp
lods
mov
test
fstpt
jge
pop
cld
push
cmpsl
jno
jp
nop
fldenv
xchg
push
inc
sbb
xorl
xchg
pop
push
or
scas
xchg
incl
mov
iret
mov
xchg
cmp
pop
jbe
rcrb
pop
int3
inc
jp
inc
push
inc
in
dec
dec
rcr
dec
jbe
pop
jne
lds
jle
xor
jp
cmpxchg
pusha
lea
inc
insl
push
push
xchg
sub
pushf
sbbb
roll
mov
bound
mov
aas
mov
negl
push
mov
cmp
inc
stc
aad
rcl
scas
and
fldl
fcomps
cli
les
lds
cmc
dec
imul
leave
imulb
jo
cmp
mov
jle
call
push
mov
push
push
cmc
in
push
outsb
call
adc
aaa
xchg
popf
pop
mov
inc
loop
cmp
mov
dec
aaa
les
int3
mov
or
or
or
imul
neg
out
cmp
pop
out
xlat
inc
xor
and
fildll
pop
scas
mov
inc
pop
push
mov
pop
push
inc
xchg
inc
pop
les
dec
pop
scas
mov
insl
mov
mov
daa
or
jle
xchg
jp
mov
addl
push
outsb
outsl
fiaddl
push
lahf
add
les
cmc
lahf
inc
mov
inc
loop
adcb
jbe
push
mov
mov
mov
mov
cmp
xor
mov
inc
lret
cmpsl
add
repnz
out
stos
push
loop
xlat
ss
push
shlb
fisubl
and
out
ret
lock
dec
int3
int
outsl
push
lcall
mov
int
cld
mov
dec
out
mov
out
out
aaa
adc
loope
inc
pop
push
cli
mov
in
sbb
sub
in
dec
in
add
aas
add
or
ss
jo
jmp
or
cmp
cmp
js
xor
and
insl
lret
add
xchg
xchg
mov
mov
push
loope
pop
mov
cmp
jmp
jo
dec
pop
rorl
mov
adc
je
mov
jo
mov
jnp
sbb
fs
data16
push
ljmp
nop
negl
fwait
cwtl
xlat
mov
inc
rolb
lea
mov
mov
push
mov
inc
mov
jg
cmpsb
xchg
movsb
jg
loope
pop
in
dec
enter
and
sub
push
rcr
std
fsubl
jbe
orb
sbb
iret
sub
nop
and
stc
mov
nop
cmc
repnz
add
mov
sti
sub
out
pop
in
cmp
loope
add
out
ljmp
adc
repnz
ret
sub
popa
sbb
pop
sar
pushl
loop
sbb
or
jae
xchg
mov
push
inc
cmp
aam
addr16
das
subb
cli
add
push
repnz
xchg
sbbb
cmpsl
inc
sarb
dec
mov
dec
push
xor
das
movsl
les
notb
cmp
data16
fsubrs
insb
jmp
pushw
daa
dec
jbe
xchg
es
mov
pop
xor
shlb
mov
push
mov
pop
mov
mov
mov
mov
movsb
out
ss
aad
push
stos
mov
aad
dec
rolb
fstpt
popf
test
fidivl
leave
cmp
popf
lock
or
clc
mov
loope
loope
push
in
sub
adc
out
jmp
sbb
roll
add
add
sbb
or
sarl
xor
jg
adc
scas
and
ret
das
mov
adc
push
jns
push
cwtl
lods
sbb
pop
and
ret
je
inc
jbe
inc
inc
jg
fimuls
dec
les
dec
inc
pushl
je
movsb
jl
ljmp
enter
sbb
outsl
insb
arpl
mov
xchg
lahf
jmp
pusha
fwait
lods
cltd
or
sub
popl
sub
outsl
sbb
mov
mov
inc
cmc
pop
adc
scas
lods
or
pop
mov
pop
rcl
dec
ficomps
fadds
add
lods
cs
lret
enter
or
mov
scas
stc
xor
push
mov
jae
sbb
int
mov
cld
adc
push
pop
dec
inc
out
add
or
movsb
pushf
or
test
sbb
or
cmp
cmp
sub
dec
lds
pop
fimull
push
xchg
andl
mov
xor
cmc
dec
inc
jbe
je
lods
nop
jl
jle
mov
push
inc
fs
iret
insb
std
cmpsl
xchg
ret
xchg
pop
xchg
mov
les
mov
cmp
lret
push
divl
mov
inc
test
mov
pop
mov
mov
push
stos
cld
push
sbb
xlat
mov
push
rolb
mov
push
fcomp
mov
out
rol
adc
inc
mov
arpl
scas
pop
cmc
and
icebp
cmp
test
add
rcr
cli
in
or
dec
loope
out
fs
push
adc
in
testb
pop
sbb
pop
pop
idivb
add
dec
jmp
or
adc
add
sbb
cmp
add
loop
mov
adc
and
rorl
push
nop
imul
pop
pop
daa
pop
lds
lods
mov
dec
mov
dec
in
pop
xchg
orb
data16
sbbl
jo
cli
xchg
aaa
mulb
outsl
insb
mov
daa
push
push
ja
push
popf
lcall
or
inc
lea
outsl
mov
mov
inc
sti
mov
mov
movsl
mov
jmp
outsl
test
jmp
sub
fcmovnu
dec
xlat
sub
ret
shlb
les
sbb
out
adc
int3
jl
add
push
out
jmp
cmpsl
jecxz
loope
mov
cmp
adc
stc
adc
repz
call
add
push
jnp
xor
jb
nop
roll
fs
add
push
adc
frstor
jnp
fldt
xor
repnz
pop
cmpsl
lcall
lods
pop
push
pop
lea
testl
jge
dec
dec
inc
dec
cmp
inc
xchg
jbe
and
mov
jnp
mov
jo
xor
mov
sahf
outsl
jnp
mov
fs
xchg
ljmp
ss
mov
lahf
shlb
imul
orl
iret
mov
scas
mov
lea
pop
mov
push
cmpsl
lods
and
mov
push
ljmp
pusha
cmp
rcl
cmp
in
and
enter
sti
push
ret
es
iret
stc
int
mov
hlt
xchg
dec
rep
cli
sarb
mov
stc
arpl
in
loop
loopne
push
and
testb
lods
outsb
mov
adc
xchg
mov
jle
das
stc
lock
push
out
pop
inc
enter
add
test
inc
ss
xor
xor
ds
and
lret
sbb
mov
lret
shrl
mov
sbb
push
xcrypt-cbc
cmpsl
xchg
fwait
loop
push
pop
inc
movsb
inc
inc
mov
inc
pop
pop
scas
pop
dec
jle
push
inc
jbe
je
dec
lods
jns
cwtl
mov
loope
jnp
mov
test
js
cltd
insl
mov
int3
xchg
lea
lahf
jne
inc
pop
ret
mov
lods
and
jge
orb
jg
or
test
mov
cmpsl
andl
push
cmpsl
inc
xor
push
pop
aad
fbstp
jmp
int
xor
sub
leave
testb
popa
ss
popa
and
std
sti
lea
outsl
in
add
outsb
out
jne
cmc
in
into
iret
lock
in
adc
rcrl
cmp
add
mov
lahf
add
dec
inc
add
or
cs
idivb
sarb
fidivrs
addr16
inc
sub
and
and
in
sub
lock
sub
mov
jns
sahf
xchg
arpl
je
outsb
pop
pop
mov
add
jb
adc
dec
mov
ljmp
jle
xor
mov
fs
jb
test
arpl
mov
and
adcb
push
inc
popf
cltd
dec
aam
test
mov
fnstcw
pop
dec
jo
push
mov
lcall
jg
scas
push
lods
lods
call
sbb
mov
xor
lahf
jae
adc
into
das
cmp
insb
cmp
push
repz
push
cld
inc
cli
hlt
out
out
in
push
loopne
adc
or
pop
int3
rcll
inc
enter
sbb
push
bound
add
addb
out
stos
or
ss
push
xchg
xor
aas
loope
push
das
dec
ds
scas
and
push
mov
bound
jge
push
inc
enter
push
mov
rcrb
aad
cltd
sbb
xchg
adc
inc
sub
lea
jp
je
aaa
push
fdivs
enter
ret
js
add
sbb
cmc
mov
movsb
or
fstl
nop
mov
outsb
cwtl
loop
jp
pop
insb
cwtl
js
dec
lahf
mov
xchg
mov
mov
cmpsl
aam
add
into
cmpsb
xchg
sbb
dec
scas
out
in
xor
push
adc
pop
fcompl
ficoml
inc
test
mov
adc
mov
add
add
cld
and
int3
mov
inc
clc
pop
out
sbb
mov
fsubr
sbb
and
fstl
leave
pop
hlt
jmp
iret
sbb
stc
dec
xor
icebp
or
add
enter
out
mov
stos
adc
xor
jo
mov
es
jge
jecxz
mov
sub
mov
jbe
sahf
sub
out
sbbl
xor
pop
test
dec
mov
and
jg
jl
jle
or
sub
lcall
lock
scas
into
xchg
xchg
xor
mov
xchg
jo
into
fisubrl
pop
mov
xor
mov
and
dec
mov
mov
cmpsb
shld
push
mov
je
xchg
jle
sti
mov
shll
outsb
jecxz
das
loopne
fldcw
lods
les
ret
inc
adc
lock
mulb
das
inc
test
test
inc
in
std
add
xor
add
jecxz
sub
loopne
in
popa
mov
inc
test
adc
cmp
lret
stos
subl
xadd
pop
adcl
insb
lds
push
cmp
jae
push
jae
lock
ret
and
aam
and
in
insl
push
push
mov
inc
pop
mov
and
xchg
inc
in
sbb
xchg
mov
jl
jp,pn
je
jb
jo
out
cli
jge
jnp
imul
fwait
insb
test
imul
pop
jno
xchg
jle
nop
mov
lahf
scas
popf
data16
mov
in
add
dec
mov
mov
mov
push
xor
mov
inc
arpl
push
scas
push
lods
and
xlat
aam
shrb
xor
lahf
fadd
inc
or
mov
sbb
sub
lret
movsb
adc
les
cltd
repz
fstpt
add
in
mul
int
out
and
jmp
jnp
adc
nop
out
f2xm1
add
adc
roll
pxor
in
xor
dec
aas
aad
jg
dec
push
es
ret
andb
dec
in
sub
movsb
inc
mov
push
or
push
movsb
test
aaa
pop
ja
pop
pop
mov
inc
cld
xlat
inc
jl
dec
dec
dec
xchg
xchg
inc
xchg
outsb
lea
in
jle
andl
xlat
in
adc
popa
ljmp
xchg
sahf
leave
xchg
xchg
pop
lahf
sahf
sbb
adc
outsb
mov
sub
mov
je
mov
mov
mov
mov
fldenv
cmp
mov
jno
enter
aam
shl
rcl
fwait
push
sbb
popa
xchg
fcoms
pop
mov
imul
jp
mov
cmp
aam
ljmp
stos
jle
stc
push
pusha
imul
ljmp
adc
sbb
ja
rdmsr
push
pop
add
add
pop
jp
or
push
xorb
jns
fidivrl
jl
jns
data16
and
faddl
add
push
fldcw
clc
pop
repnz
add
add
inc
xchg
out
dec
cmp
ja
xchg
or
dec
lret
and
push
rorl
popa
outsb
lcall
stos
xchg
xchg
es
subl
xor
push
sbbl
mov
adcb
xor
jl
mov
mov
int
dec
addr16
cltd
aam
push
shll
hlt
fimuls
xchg
fisubl
push
in
mov
popf
xchg
scas
lock
jmp
sbb
mov
sti
adc
mov
daa
in
je
stos
sub
mov
adc
xor
stc
shr
sbb
add
add
lods
add
sbb
or
xor
xor
out
cmp
aas
lret
les
popa
aas
cmp
and
out
cmp
cmp
pop
sub
pop
aam
sbb
cmpsb
fadd
mov
pop
add
mov
xchg
inc
jmp
or
clc
cmpl
lcall
inc
arpl
jbe
xchg
cmp
flds
push
sti
xchg
pushl
lahf
fldt
mov
std
mov
cmpl
push
or
and
mov
mov
mov
xchg
gs
push
mov
in
cltd
test
sub
clc
rcl
pop
fbld
fnstsw
push
dec
outsl
les
xor
inc
jmp
lret
dec
sub
hlt
leave
repnz
insb
xchg
cli
std
in
clc
add
lret
cmp
loop
loopne
or
outsl
ljmp
xchg
movsl
adc
outsb
push
sbb
ret
add
push
fimull
or
xor
ljmp
jp
cmp
add
stos
les
fsubl
cmp
sub
nop
into
push
aam
mov
or
push
xchg
jle
inc
popaw
inc
inc
pop
movsb
js
jle
mov
je
mov
insl
jl
mov
inc
lcall
push
insb
in
push
in
mov
push
out
xchg
lahf
pushl
fwait
das
push
mov
mov
cmp
outsb
mov
adc
inc
mov
inc
dec
mov
adc
pop
push
mov
inc
jae
mov
pop
test
out
pop
push
fsub
imul
xchg
add
ret
rcrb
call
inc
leave
sti
lret
repnz
inc
icebp
scas
test
and
push
push
cli
push
popa
ljmp
iret
adc
pop
sbb
pop
test
add
mov
add
add
mov
or
out
cs
iret
and
xor
aas
cmp
repz
and
sbb
cmc
pushf
sub
test
xor
maxps
mov
inc
add
inc
inc
in
inc
mov
sbb
mov
cmp
jl
and
jns
addr16
gs
sbb
mov
bound
repnz
push
sahf
imul
xchg
jbe
cmpl
sbbl
pop
inc
cli
jmp
popa
dec
mov
jne
aad
popa
mov
aas
daa
mov
je
mov
icebp
cmp
pushf
lcall
rorb
rcl
sub
fsubrs
rcr
fnstcw
faddp
shlb
ret
inc
enter
hlt
outsb
cli
and
int
rol
cmp
fisubrs
das
aaa
pop
mov
icebp
adc
mov
mov
sbbb
sub
jecxz
xor
out
sbb
outsl
repz
aaa
xor
lahf
or
and
lret
cs
es
push
adc
das
mov
or
push
jo
xor
push
leave
pop
jo
scas
inc
jno
cmc
sahf
pop
dec
imull
fs
scas
je
jb
jo
mov
pop
dec
shlb
mov
test
pop
sbb
xchg
pushf
xchg
jae
fistpl
imul
push
mov
out
mov
mov
pop
cwtl
mov
mov
movsb
nop
mov
popf
lods
xor
pushf
and
in
add
add
adc
cli
pop
sbb
movsl
add
iret
int3
test
or
fisubrs
in
lods
push
cld
or
dec
fs
and
in
dec
jecxz
imul
mov
in
jmp
out
xchg
adc
adc
inc
loopne
xchg
sbb
jbe
les
cli
pop
out
add
add
testb
testl
mov
mov
add
mov
push
and
sub
cmpsl
shll
push
mov
test
mov
stc
pop
pop
jbe
xchg
inc
dec
movsl
mov
hlt
cmpsl
push
mov
fdivs
jb
jo
add
cmpsl
pusha
pusha
cmp
fs
arpl
insl
and
js,pt
pop
test
xchg
mov
fwait
inc
cltd
test
arpl
outsl
lea
pop
mov
adc
push
inc
lock
xchg
mov
scas
pop
lods
fwait
stos
inc
test
rolb
imul
pop
clc
fcmovb
test
xor
hlt
adc
and
fs
cli
imul
out
in
rclb
loope
out
out
ljmp
adc
sbb
push
fidivl
dec
adc
sub
or
shr
adc
pop
xor
ds
sub
sbb
fs
and
into
out
mov
hlt
sub
lods
sub
decl
leave
push
jnp
outsb
arpl
pop
push
ja
inc
sub
push
jne
mov
int
push
ja
sbb
cld
lods
mov
dec
clc
scas
jae
sti
test
fstpt
addr16
pop
fcoml
cltd
ljmp
dec
xchg
jb
mov
aam
inc
daa
test
das
add
mov
in
adc
jne
adc
inc
dec
add
rcrb
ror
movlhps
out
fldt
fstpl
pop
shlb
and
addb
shll
xor
push
call
adc
pushl
clc
inc
jbe
add
fs
fsts
fstps
lahf
mov
stc
or
aad
add
push
into
or
or
or
ret
sub
mov
or
cmp
xchg
outsl
sub
inc
pushf
and
sbb
pcmpeqw
push
popa
adc
cmp
out
sbb
inc
pop
jae
pop
cmp
shl
insl
jbe
xchg
in
cmp
jg
pop
lods
jnp
or
outsb
pusha
fsubrs
test
xchg
xchg
sbb
adc
cmpsb
sahf
fistpl
popf
add
test
imul
xchg
jo
mov
push
cmp
mov
xor
push
fisttpl
mov
popf
inc
mov
lods
cmpsl
inc
icebp
inc
sub
mov
rcl
fst
ret
and
mov
sub
loopne
xor
adc
jl
jp
std
dec
cmp
and
sti
insl
stc
xor
and
sbb
inc
pop
int
shlb
fwait
out
push
adc
daa
pusha
jmp
lods
sbbb
int3
dec
jo
lahf
repz
xor
fbstp
xor
mov
xchg
aas
and
and
ja
cs
sub
movb
push
adc
lret
jmp
sub
and
inc
inc
lock
jae
loope
cmp
dec
jbe
lods
jne
and
in
cmp
lret
inc
sub
mov
arpl
push
stos
outsl
insb
mov
pushf
leave
jbe
xchg
xor
orb
lcall
lea
mov
aad
mov
int3
mov
and
mov
add
mov
movsb
add
insb
das
mov
mov
adc
lret
rorb
and
or
jecxz
les
lret
mov
cltd
cmp
scas
add
fs
cmp
std
cli
test
mov
push
in
std
jecxz
insb
out
mov
adc
pop
psrld
adc
ljmp
ret
lds
mov
pop
or
stos
dec
xor
int
jne
in
cmp
sarl
cmp
mov
jb
xchg
xor
xchg
imul
pop
pop
adc
jmp
pop
xchg
aas
fistpl
mov
xchg
repnz
ja
les
imul
outsb
dec
jns
sbb
mov
in
daa
insb
loope
imul
pop
xchg
cmpsl
xchg
dec
lahf
addr16
into
fwait
hlt
scas
leave
xchg
add
fldenv
pushf
mov
mov
mov
or
add
mov
mov
mov
mov
test
xlat
lods
mov
fdivp
fdivl
fcomp
ss
xor
lcall
adc
or
cmp
lds
sti
push
sbb
push
mov
mov
lcall
adc
enter
push
push
in
sbb
rolb
in
add
push
jne
or
divb
mov
xor
or
lahf
cmp
and
pop
and
out
jg
mov
divb
sub
push
push
loope
push
dec
out
notl
xlat
pop
inc
inc
lcall
add
dec
jne
sahf
xchg
jg
shll
pop
xor
fs
stos
insb
dec
sbb
xchg
test
repnz
bound
out
fwait
cltd
push
inc
test
loope
push
in
mov
mov
xchg
mov
jb
mov
cmpb
lods
jne
inc
sahf
mov
stos
xor
inc
pop
mov
stos
shl
movsb
sbb
arpl
fcoms
dec
lds
xor
jnp
cmp
clc
loope
adc
icebp
cmpsb
dec
std
sub
clc
sbb
jo
mov
or
sbb
jmp
mov
adc
sbb
iret
mov
add
sbb
popa
dec
lds
aaa
and
xor
sbb
cmp
arpl
fsubp
and
stc
sub
popf
sub
test
wrmsr
je
xlat
lret
lods
fcmovu
les
mov
sbb
push
xor
jae
andb
and
push
and
arpl
insb
add
xchg
into
xchg
jo
xchg
adc
mov
arpl
jae
sub
inc
test
mov
sub
jg
jne
insl
imul
bound
dec
sbb
mov
test
mov
add
xor
xlat
stos
insl
popa
shrl
pop
jbe
ss
pop
addr16
dec
test
ret
movsl
xchg
cltd
cmp
jg
enter
hlt
popf
sub
jmp
fistpll
inc
xor
ljmp
pop
inc
or
in
xchg
adc
adc
outsb
xchg
sbb
sysret
xchg
xchg
cpuid
sahf
pop
fadds
adc
stos
xor
ds
cmp
mov
jae
and
test
cs
popf
sbb
sub
mov
mov
negb
pop
in
pop
cmc
fildl
mov
inc
shrl
dec
aad
jne
dec
mov
out
jle
or
sahf
xchg
push
xchg
addr16
mov
cmpsb
or
testl
xchg
xchg
ja
arpl
cwtl
scas
enter
sub
loope
pusha
leave
mov
mov
mov
mov
mov
movsl
xchg
inc
mov
mov
pop
xlat
sub
adc
rorb
fmul
in
ret
push
inc
les
enter
iret
int3
pop
stc
aas
push
popf
idivl
repnz
cld
hlt
jge
push
stc
xor
push
in
push
loopne
jge
in
cmpsl
ljmp
adc
xchg
mov
sbb
pop
pop
sbb
push
pop
add
jmp
cmp
stc
dec
xchg
push
fdivl
xor
insl
cmp
cld
inc
pusha
outsl
rolw
sahf
and
and
test
sub
fldt
mov
pop
jle
pop
sbb
inc
es
je
mov
dec
repnz
sub
je
jb
cmp
inc
jl
jp
push
jbe
pop
fs
int3
push
stc
fsubrl
push
testl
push
push
and
mov
addl
mov
mov
outsb
inc
inc
mov
outsb
mov
adcb
lock
sbb
mov
and
rcrb
push
fdivrp
xlat
fnsave
jb
fstps
test
ror
enter
fcomp
repnz
out
clc
jle
test
or
out
adc
or
fs
mov
lods
sbbb
sbb
test
test
cli
in
add
dec
or
cmp
xor
enter
cmp
xor
and
fidivl
sub
ror
jne
mov
push
pop
pop
lea
inc
lret
inc
fstpl
and
add
dec
inc
lcall
bnd
jnp
js
adc
arpl
popa
outsb
aam
or
pop
bound
jge
xchg
sbb
lahf
jne
in
cltd
inc
loop
test
jge
jmp
jns
addr16
repnz
into
fwait
mov
push
pop
outsl
pop
stos
or
lods
sub
fistps
aad
and
sub
loop
lahf
js
clc
dec
fsubrs
adc
inc
enter
xor
dec
sbb
clc
cli
cli
clc
jl
out
cld
pop
loope
jbe
ja
sbb
std
cmpsb
xchg
sarb
into
sbb
sub
sbb
push
xor
rorl
or
xor
xor
xor
test
dec
daa
cmp
adc
xor
aad
push
adc
jp
pop
pop
cmpsb
aas
lds
lret
aad
mov
mov
not
xchg
jnp
sarb
jg
dec
adc
js
jno
jmp
arpl
push
mov
imul
mov
mov
xor
popa
test
subl
mov
mov
jl
jo
push
mov
mov
adc
push
lock
iret
pop
mov
lods
mov
test
xchg
mov
aad
rcll
rcr
pop
jbe
in
adc
or
divl
icebp
mov
jmp
mov
cmpsl
adc
pop
sbb
ljmp
lret
or
adc
jp
int
pop
sbb
xchg
inc
add
xchg
push
fcoms
or
xor
xor
nop
int3
xchg
sub
sub
pop
mov
jns
shlb
cmp
dec
push
sub
or
stos
push
gs
test
cwtl
pop
loope
je
inc
xchg
inc
fistpl
loopne
lods
sub
mov
out
xchg
push
jl
xchg
test
pop
pusha
lods
or
insb
jge
imul
inc
xchg
nop
dec
jne
clc
jns
xchg
cwtl
mov
jnp
je
daa
push
lea
cmp
mov
mov
repnz
lock
push
mov
movsl
mov
and
mov
rcrl
fisubs
lods
fldcw
ret
imul
dec
test
sbb
xor
data16
add
dec
or
cli
xor
mov
and
movsb
dec
jnp
popa
jmp
adc
fcomps
jp
sbb
pop
gs
dec
lgs
or
or
xor
xor
sub
cmp
arpl
cmpsl
and
jns
sub
ds
xchg
ja
pop
pop
add
sbbb
inc
mov
out
jge
dec
pushf
dec
mov
jae
mov
jp
js
addr16
arpl
and
imul
pop
inc
pushf
xchg
push
xchg
push
addr16
lahf
insb
scas
gs
jo
xchg
cs
and
add
mov
xchg
mov
or
mov
push
sarb
mov
data16
arpl
add
xor
leave
or
shlb
testl
popa
subb
out
in
xor
loope
sbb
shlb
add
mov
or
fmull
inc
clc
rcrl
js
add
pop
or
in
aaa
xor
mov
push
stos
rorb
mov
loopne
and
cs
outsl
pop
push
inc
es
push
mov
sbb
pop
adc
inc
pop
inc
lcall
dec
dec
rorb
dec
insb
ljmp
mov
jp
pop
jns
jb
gs
or
aad
outsl
cmpsl
insl
fdivrl
push
popf
xchg
scas
xchg
xchg
sbb
cwtl
lods
push
andl
add
mov
mov
push
mov
push
imul
idivb
cmpsl
cmp
out
xor
push
adc
jp
rol
rcrl
dec
adc
nop
sub
lods
ret
ror
notl
xor
mulb
inc
mov
decb
std
push
out
xor
cmp
aad
push
jecxz
loope
out
inc
in
ljmp
sbb
inc
test
xchg
sbb
and
out
add
sbb
cmp
in
xor
pushw
ds
scas
cmp
fs
and
rorl
push
push
mov
fisubs
inc
push
pop
pop
pop
cmp
mov
fidivrl
mov
xchg
in
jecxz
lods
jge
or
sub
push
add
mov
outsl
jecxz
push
test
nop
adc
cmpsl
sbb
test
repnz
sub
stc
rorb
imul
ja
sbb
mov
mov
mov
sahf
sbb
jp
aam
rcr
leave
jb
inc
fsubrl
mov
int
xor
or
mov
jge
cld
hlt
mov
cmp
sti
cmpsb
out
mov
aam
repz
addr16
jns
push
insl
jmp
jecxz
adc
pop
pop
sub
sbb
pop
add
mov
pop
pusha
cmp
or
repnz
dec
aas
mov
test
and
sub
pop
je
pop
adc
xchg
adc
push
call
in
lods
push
pop
sbb
in
inc
push
mov
inc
cwtl
inc
dec
push
xchg
sub
dec
fnstcw
in
mov
int3
push
aam
imul
sub
mov
les
xchg
or
lock
out
jl
jecxz
cwtl
sbb
adc
mov
pusha
mov
or
test
jnp
push
mov
aaa
movsl
mov
stos
cmp
push
rcll
jae
bound
push
enter
aam
pushf
push
enter
inc
test
xchg
xchg
pusha
pop
cmp
gs
fs
out
xchg
jle
pop
mov
adc
dec
sbb
and
pop
data16
add
pop
int
scas
or
and
or
inc
xor
cmp
mov
shll
lds
push
push
push
push
sahf
push
subl
pop
pop
popa
aad
xchg
mov
out
add
dec
dec
push
inc
test
dec
inc
or
mov
or
jle
mov
sbb
xor
xor
in
mov
lods
cmc
in
xchg
xchg
sbb
jmp
nop
cld
xor
orl
clc
lea
fwait
mov
pop
jnp
mov
mov
xchg
mov
stos
add
jge
pop
call
fadd
add
mov
lock
iret
stos
cmpsb
inc
ret
jnp
div
cmc
movsb
test
incl
out
out
in
loop
loopne
push
out
stos
inc
ljmp
pop
adc
adc
sbb
sub
mov
loope
ss
jp
aaa
std
sarb
cmp
cmp
cmp
push
into
xchg
divb
sbb
out
cmc
push
push
push
sub
loopne
cmpsl
movsb
insl
sub
mov
std
mov
dec
insl
dec
movsb
mov
mov
jmp
jne
lcall
jp
adc
andl
pusha
inc
outsb
lea
imul
and
ror
sub
stos
push
or
divl
xchg
push
pop
test
daa
sbb
add
pop
mov
and
mov
mov
cltd
mov
pop
mov
xchg
lods
jecxz
jae
bswap
aam
inc
push
stos
pop
push
fcmovnu
ja
xor
and
ror
mov
jnp
enter
hlt
mov
repz
icebp
popf
and
test
or
push
out
rolb
out
in
bound
jmp
cwtl
mov
jb
in
mov
mov
pop
mov
aaa
arpl
mov
or
hlt
and
or
mov
push
gs
push
cmp
and
sbbl
ss
inc
sub
nop
rcr
mov
push
loopne
hlt
add
inc
inc
mov
jns
dec
jae
lods
leave
or
dec
nop
ja
jne
fdivl
test
push
jp
lahf
or
je
xchg
mov
out
add
xchg
jo
addr16
sbb
fisubs
ds
test
adc
dec
adc
mov
arpl
std
or
movsb
cmp
rcrl
lods
xor
and
shr
sarb
ret
pushf
add
inc
ret
sar
int3
int
add
pop
lods
notl
cmc
push
push
div
fists
adc
inc
clc
stc
push
mov
loopne
dec
out
dec
in
les
dec
hlt
cmpsl
andb
sahf
xor
or
andl
xchg
imul
mov
das
jmp
xchg
aas
xchg
cmp
xor
inc
in
das
shrl
push
mov
push
lods
jecxz
pop
icebp
pop
dec
fs
cltd
js
push
rolb
xchg
dec
nop
shlb
je
jae,pn
xchg
xchg
mov
js
pushw
and
popa
push
mov
imul
xchg
movsl
xchg
loop
nop
pop
lods
pop
pushf
das
and
mov
adc
subl
lock
mov
push
out
xchg
ja
movsl
push
mov
lods
mov
pop
jnp
jl
push
aad
and
mov
fdivs
push
cmp
mov
lret
inc
mulb
lock
cld
sbb
lcall
stc
aaa
out
push
jecxz
imul
movsb
pop
jo
adc
adc
mov
cmpsb
imul
sbb
pop
mov
lods
lret
add
push
std
jl
or
push
call
sarb
cmp
cmp
enter
out
daa
push
mov
ret
andb
xor
pop
sub
inc
dec
inc
inc
add
or
dec
push
dec
push
outsb
mov
aaa
sti
jne
test
insb
js
jnp
jns
pop
mov
sub
pusha
popa
adc
jbe
dec
xlat
xchg
rcrl
sbb
in
push
int3
addb
lea
es
mov
mov
cmc
enter
and
cmp
clc
movsl
inc
mov
mov
jb
adc
xchg
rcll
fcmovu
in
sbb
repz
lcall
int
xchg
enter
pop
adc
repz
ss
xchg
mov
jecxz
cs
sbb
ljmp
jns
pop
sbb
sbb
lods
pop
xor
aam
xor
or
or
or
xor
sti
xor
lret
cmp
cwtl
loopne
and
mulb
std
push
sub
ret
popf
mov
push
xor
pop
sbbb
js
mov
loopne
mov
dec
inc
mov
insb
ret
push
jo
jle
cmp
loop
and
mov
test
mov
daa
imul
cmp
inc
push
pushf
imul
xchg
test
xchg
orl
sahf
inc
mov
push
mov
mov
mov
movsl
dec
push
add
add
mov
push
sti
movsl
mov
jno
out
fstp
add
sbb
rol
leave
jns
pop
cmp
cmpsb
fdiv
xor
cli
js
stc
sarb
and
addr16
mov
mov
fstps
push
pop
sub
into
sbb
fldl
cmpsb
inc
faddl
push
iret
mov
int
aaa
jecxz
iret
inc
cmpsl
xor
jl
sbb
cmp
and
flds
sub
jl
js
push
mov
pop
aas
xor
xor
xchg
ljmp
mov
adc
movsl
dec
fdivrs
pushf
dec
aad
movsl
ja
mov
jae
stos
inc
js
inc
into
jnp
jns
loopne
gs
mov
cmp
and
sbb
xchg
xchg
xchg
xor
cltd
mov
mov
sbb
push
dec
or
cmp
cwtl
mov
testl
stos
push
sbb
rorl
cmp
inc
fdiv
insb
adc
adc
push
jecxz
add
jg
icebp
cli
mov
ljmp
sub
and
bound
insl
jmp
or
adc
pop
adc
sbb
add
add
or
test
xor
out
fs
sub
jb
hlt
mov
sub
sub
adc
pop
out
lea
xor
sub
xchg
loope
inc
insl
mull
or
outsb
cmp
in
pushl
jg
out
add
addr16
popa
test
insb
into
push
fsubrl
adc
xchg
push
nop
jno
lret
data16
mov
ja
sbb
push
aam
mov
mov
xchg
mov
mov
inc
movsl
inc
mov
gs
dec
xchg
cmp
hlt
xchg
loopne
fdivrs
rcr
fcmovnu
out
pushf
in
mov
inc
adc
std
dec
int
popa
enter
sbb
test
cld
sub
out
lds
out
movsb
arpl
push
notb
inc
mov
in
nopl
inc
pop
dec
je
add
add
clc
pushf
rorl
cld
and
xor
add
scas
aas
xchg
xor
das
xlat
sub
push
clc
and
pop
push
push
sub
pop
fnstenv
pop
fistpl
push
je
mov
sti
adc
push
push
lods
xchg
daa
mov
mov
in
and
in
mov
push
outsb
outsl
jp
js
rclb
xchg
adc
mov
test
ret
je
xchg
sti
test
push
mov
mov
mov
mov
xor
jne
or
sbb
test
sbb
pop
aad
loope
shll
sar
jbe
std
rcl
ret
cmp
adc
jp
lret
sti
imulb
cmc
jne
adc
incl
bound
cmp
loope
out
xor
inc
lret
adc
xchg
lahf
pop
fcoml
int
inc
lds
mov
or
mov
cmpb
aaa
lock
ds
cmp
ljmp
mov
bound
mov
sub
lret
lods
push
scas
inc
push
push
stos
adc
push
or
inc
sti
xchg
ret
dec
push
sub
jle
fwait
stos
jb
inc
jno
jg
stc
enter
inc
push
and
add
insb
into
push
dec
imul
pop
insl
xchg
outsl
lahf
pushf
out
add
test
cltd
jae
testl
mov
mov
xorb
cwtl
xor
jecxz
cmpsl
dec
pop
cld
mov
lods
sbb
stos
xchg
test
add
dec
adc
cld
sub
fidivrl
sarb
enterw
xlat
int
fwait
lock
add
out
add
xchg
loopne
xor
in
sbb
vxorps
mov
ret
pop
sbb
mov
push
pand
test
jne
push
push
mov
cmp
shlb
jle
lods
and
jns
mov
push
fsubl
pop
sahf
cmpsl
xor
inc
push
adc
dec
xor
jbe
je
stos
fwait
jo
aaa
fidivrs
jnp
xchg
scas
xchg
arpl
sahf
outsb
loop
insl
aaa
imul
dec
xchg
xchg
inc
hlt
xor
mov
xchg
sbbl
mov
mov
mov
addr16
mov
mov
mov
mov
inc
stos
aaa
shll
aam
rorl
movsl
stc
ret
inc
into
inc
int3
inc
lret
test
repz
xchg
add
mov
adc
out
xor
jecxz
in
icebp
out
dec
lret
call
mov
dec
sbb
roll
mov
xchg
mov
xchg
ss
lret
scas
xor
or
sbb
xor
pop
and
mov
and
sub
sti
inc
dec
push
das
push
jb
lock
xor
mov
test
push
inc
inc
imul
pushf
inc
dec
fs
dec
aaa
jne
add
adc
jnp
adc
mov
arpl
imul
xchg
cmp
movb
inc
inc
fwait
and
push
xor
xorl
in
push
mov
pop
mov
mov
mov
movsb
mov
mov
aam
stos
or
ds
rolb
out
jne
pushf
rcr
popa
xchg
lret
add
mov
rorl
enter
aam
dec
fsubs
adc
mov
sbb
fs
loope
lret
xor
mov
dec
sbb
adc
pop
push
addr16
mov
dec
pop
sbb
dec
add
mov
paddw
test
or
xor
mov
lret
leave
adc
and
sub
jecxz
dec
sub
mov
loop
pop
adc
push
jne
out
pushf
inc
js
mov
dec
popa
mov
push
sbb
mov
jg
jge
xor
insb
scas
xor
push
out
popa
jmp
insb
shrb
insb
imul
push
nop
jle
push
in
push
outsl
cwtl
jno
mov
adc
mov
mov
outsl
imul
mov
push
cmpsl
ret
mov
cmp
test
ljmp
pop
mov
fninit
repnz
pop
sub
sbbl
enter
aas
outsb
cli
lods
push
push
je
cli
adc
popa
repz
int3
movb
mov
mov
mov
enter
inc
pop
orb
add
sti
or
or
or
ss
pusha
mov
ds
gs
int
idivb
cld
and
ret
sub
push
push
mov
push
aas
ret
cmpsl
testb
mov
inc
inc
fs
daa
dec
add
je
xorb
jle
jl
fdivrl
xlat
data16
dec
out
arpl
iret
outsb
movsb
insb
lret
push
test
lcall
popf
orb
xor
sbbb
mov
and
jg
mov
cmp
insl
inc
mov
rcr
inc
cmp
int3
scas
pop
lods
insl
stos
repz
or
inc
shll
fildll
jno,pn
loopne
dec
ret
int
or
enter
fcomps
shl
mov
push
cld
int
sti
clc
arpl
mov
jge
loopne
out
outsl
shll
mov
sbbb
sbb
jge
xchg
xor
push
cmovg
or
or
dec
aaa
dec
aad
xor
xor
out
sbb
aaa
xchg
and
sub
ficompl
push
loopne
jp
xor
ds
stos
push
mov
inc
jne
out
inc
cmp
dec
dec
dec
jbe
and
fimuls
int
push
nop
jnp
or
stos
xchg
inc
adc
bound
imul
std
xchg
xor
sahf
arpl
jp
test
adcl
mov
mov
icebp
pop
jae
pop
mov
push
test
push
inc
lods
test
repnz
rcl
xor
inc
fists
and
jbe,pn
mov
pop
push
push
and
shl
repnz
lds
cld
std
fiaddl
clc
inc
out
mov
mov
loopne
dec
in
shr
jnp
pop
adc
adc
outsl
test
push
loop
pop
add
es
cmc
add
orb
das
ret
leave
cmp
lods
mov
ds
loop
sbb
xchg
aam
movsb
xchg
and
add
mov
sub
loope
push
js
push
data16
pop
adc
mov
sbb
ret
insl
mov
jb
sub
sub
jl
test
sbb
pusha
add
insb
mov
test
mov
arpl
xchg
xchg
jb
dec
orl
mov
push
testl
mov
movsl
mov
mov
stos
shrl
dec
rcr
rorl
stos
jmp
je
inc
shll
enter
hlt
shll
cld
sub
mov
sub
ss
xor
jmp
inc
adc
dec
adc
jmp
stos
xchg
add
add
jno
push
xlat
fs
or
clc
or
ret
xor
fists
add
es
and
mov
in
and
into
push
frstor
pop
enter
shlb
xorl
inc
jecxz
dec
dec
adcb
xchg
push
jno
jge
mov
mulw
arpl
popa
repz
imul
xchg
xorb
xchg
sbb
jnp
lret
jmp
mov
fcoml
std
mov
gs
pushf
movsb
push
dec
scas
scas
scas
scas
lds
stos
and
and
popa
aad
stos
shl
cmpsb
xor
or
lds
xlat
push
into
repnz
sbb
xchg
cmp
repz
push
out
in
or
loope
mov
cs
jmp
call
sbb
bound
add
add
outsb
sti
pcmpgtd
push
xor
xor
cmp
cmp
in
xlat
rol
and
push
aas
and
mov
jl
push
push
addb
pop
sbbl
dec
or
sar
sbb
dec
dec
push
repz
je
jb
xor
popa
lcall
ret
fs
in
popa
in
outsl
insb
ljmp
xchg
loope
clc
mov
lahf
push
pushf
push
xor
rcrl
cltd
movsb
stos
sub
mov
mov
inc
push
mov
mov
pop
jle
movsl
movsl
repz
clc
scas
inc
mov
daa
xlat
aam
inc
sbb
cmpsl
lahf
fldt
push
les
cmp
int
push
inc
leave
jno
ret
repz
call
call
loop
inc
loope
xor
add
je
adc
adc
leave
xchg
bound
dec
add
aaa
mov
push
or
xor
test
sbb
and
pop
mov
sbb
pop
sub
push
or
enter
mov
pop
pop
cmc
xor
addr16
fldl
dec
insb
and
rclb
jb
test
jle
jl
ret
sbb
add
out
push
mov
insb
insl
sbb
push
push
dec
xchg
pop
xchg
ret
nop
lcall
or
addl
lret
inc
addr16
mov
jle
mov
sub
mov
es
jl
pop
mov
lods
shrl
das
aad
rcrl
add
mov
mov
jns
int3
mov
push
enter
cmp
repz
sub
loope
and
clc
lods
arpl
mov
out
stos
in
in
rcrl
into
inc
dec
adc
xchg
icebp
sbb
sbb
loope
decb
cmc
adc
shr
mov
xor
lret
cmp
testb
and
push
fisubrl
xchg
sub
fwait
pop
push
pop
sbb
popf
pop
popl
mov
add
mov
fbstp
icebp
jne
mov
inc
push
jg
daa
xor
fs
pop
arpl
xchg
outsb
shl
push
imul
xchg
aaa
xchg
mov
xchg
nop
sub
out
push
push
movsb
scas
mov
cmpsb
mov
push
das
adc
and
sbb
repnz
mov
cwtl
pop
js
jb
mov
or
cmp
fcmovnbe
mov
fisubs
cmp
or
fcomps
rcl
inc
and
and
enter
aaa
mov
imull
cli
jns
push
shll
pusha
out
test
pop
sbb
jmp
repz
int3
mov
adc
and
out
add
lahf
lret
and
or
test
iret
fidivs
xor
xor
cmpsb
sub
dec
xor
cmp
mov
xchg
sub
sbb
xor
cmc
jmp
push
sbb
decb
shrl
jne
lea
dec
in
dec
dec
or
xor
sbb
addl
bound
popa
mov
ret
pusha
leave
xchg
fwait
xchg
xchg
clc
jno
lahf
cmpsl
jl
rclb
or
inc
dec
les
mov
int
mov
mov
mov
mov
movsl
ljmp
lods
mov
lds
aam
pop
add
ror
cmc
fsubrl
push
int
cmp
subb
add
push
loope
push
enter
mov
xor
ret
hlt
shrb
in
push
es
in
push
mov
and
push
loopne
adc
pop
jg
adc
in
sbb
dec
push
add
add
js
cmc
mov
daa
xor
dec
aas
sbb
cmp
shl
rcrl
inc
push
out
das
outsl
inc
sub
sub
push
or
push
push
jmp
imul
sbb
lods
rolb
sub
mov
dec
add
movsl
push
jbe
imul
jo
int3
enter
jns
jns
addr16
mov
pop
cmpsl
xchg
fidivrl
lock
arpl
xchg
adc
repz
or
dec
mov
dec
mov
add
mov
pop
sub
mov
movsl
jns
je
into
scas
fwait
xor
mov
push
shrb
push
sub
ficoml
fsubs
and
sahf
outsb
iret
pop
jne
ret
mov
cmc
jbe
cs
lods
or
xor
push
clc
stos
out
jo
inc
add
xchg
adc
in
aad
jmp
xchg
cmc
push
dec
jmp
aad
push
test
dec
push
jmp
jle
or
or
cwtl
rorb
xchg
cmp
sub
mov
and
adcl
or
push
add
mov
das
push
push
xchg
mov
pop
jecxz
fmuls
inc
inc
mov
mov
dec
jl
mov
dec
ja
mov
fidivs
jg
xchg
add
jns
pop
test
arpl
or
xchg
imul
popa
jmp
nop
lock
jg
lods
fistps
int
stc
into
xorb
push
mov
xchg
xchg
mov
dec
sub
jne
mov
jg
pop
pop
shrl
call
jbe
pop
xchg
leave
fucom
and
inc
movb
mov
push
cmc
iret
subb
adc
pop
mov
cld
mov
sti
out
repnz
adc
inc
loopne
adcl
sub
push
adc
add
sbb
push
pop
inc
xchg
jnp
decl
xor
sti
aaa
loop
adc
xor
dec
cmp
cmp
daa
cld
and
and
sub
shrb
pop
inc
mov
aaa
inc
add
inc
stos
mov
push
mov
mov
jne
cmpsb
int3
jno
push
sbb
inc
fs
pop
pusha
mov
push
in
mov
xchg
nop
jns
lahf
jge
lcall
inc
mov
in
orl
mov
push
hlt
mov
leave
leave
mov
push
shll
jp
scas
sbb
lods
sub
int3
xchg
push
fimuls
fnstsw
mov
inc
repnz
jns
ljmp
stc
sub
jae
cli
push
stc
das
sub
es
and
mov
gs
out
inc
jge
push
sub
fucomi
sbb
loopne
pop
mov
in
add
jmp
cmp
or
inc
push
jl
loope
xor
sarl
or
sub
adc
jecxz
not
test
xchg
push
jo
lcall
pop
sbb
inc
inc
int3
inc
add
stos
mov
jbe
je
jb
sbb
scas
adc
mov
aad
ret
xchg
outsb
lcall
xchg
xchg
dec
xchg
pop
xchg
pop
inc
lret
mov
adc
push
xor
xor
aaa
mov
mov
scas
xor
aas
mov
fsubrl
cmp
mov
mov
stos
dec
in
stc
aam
popa
cmp
roll
call
aam
ret
stos
int
addr16
int3
scas
xchg
int3
int
lret
fmul
push
test
pop
xchg
stos
enter
cli
cmpsl
subb
inc
in
pop
loopne
inc
mov
jmp
jmp
out
mov
mov
and
mov
sbb
or
out
or
mov
lret
adc
xorb
xor
sub
pop
and
call
or
sub
sub
or
cmp
inc
incb
add
xchg
stos
mov
dec
dec
pop
adc
jbe
inc
cmpsb
das
fadds
dec
ljmp
xor
jecxz
popa
outsb
rcrl
cmpl
add
nop
ror
lahf
pushf
rol
mov
test
jl
jle
mov
mov
mov
sbb
dec
mov
test
cmpsb
mov
in
cs
lods
inc
dec
pop
mov
sub
mov
add
mov
sub
ret
movsb
jns,pn
int
lret
mov
lret
es
jmp
mov
out
in
jecxz
fsubr
xchg
add
lret
lds
push
cmpsb
sbb
sbb
mov
and
push
in
mov
clc
fld
lret
push
xor
lods
pushl
fdiv
push
jns
dec
es
sti
and
xchg
push
ja,pn
lds
push
mov
push
sub
enter
aad
xor
mov
neg
dec
mov
mov
jb
jb
dec
xor
jns
sbb
test
or
outsb
lcall
inc
pop
push
repz
sbb
lcall
push
push
push
mov
jae
or
fisubs
loopne
cmpsb
cmp
scas
int
lods
adc
test
push
shrl
lods
jecxz
fsubrs
testl
inc
mulb
hlt
pop
mov
adc
adc
std
inc
push
shrb
jg
dec
jb
pop
fwait
out
xlat
pop
das
push
sub
mov
xchg
rcrb
sbb
es
repnz
mov
ss
cwtl
xor
xor
inc
push
xchg
and
out
and
das
sub
push
push
sub
push
out
fdivl
negb
dec
dec
inc
hlt
es
xor
xlat
dec
dec
imul
jo
mov
divl
jp
dec
shlb
addr16
rolb
push
sbb
arpl
rcll
nop
jne
dec
push
popf
adcl
imul
xchg
xchg
out
mov
mov
sbb
mov
out
sub
sarl
fs
lods
movsb
push
mov
dec
lods
push
ss
test
bnd
push
xchg
imul
lea
rol
ret
pop
ret
in
int3
int3
fldl
lret
add
xor
lock
movsl
pusha
std
adc
fisttps
mul
dec
sub
jns
out
pusha
cmpsb
ljmp
out
mov
sbb
lods
xchg
sbb
pop
add
subb
mov
lock
push
or
xor
out
cmp
xchg
cmpl
mov
and
and
shrl
jmp
mov
addr16
lcall
pop
sbb
test
inc
ljmp
lods
pcmpeqd
adc
sub
sub
lea
arpl
popa
es
insb
insl
pop
imul
clc
push
xchg
sub
pushf
popf
scas
fwait
add
lcall
leave
aaa
jbe
jno
lea
popa
sbb
ret
arpl
pop
jne
pop
pop
mov
movsb
movsl
inc
sub
xchg
cmp
dec
adc
mov
out
jnp
daa
push
pop
push
jmp
sbb
outsl
jp,pt
or
negb
scas
and
repz
mov
mov
sub
sbb
out
loopne
cmp
test
mov
lock
lods
sahf
pop
imul
xchg
repz
repnz
add
add
add
in
or
aaa
mov
xor
in
test
es
and
in
sub
nop
stos
add
sbb
push
mov
inc
add
xor
rorl
sbb
je
cld
jae
add
sbb
lea
out
jb
xor
imulb
imul
or
inc
divl
pop
fwait
rorb
test
js
xchg
mov
mov
insb
shlb
aaa
fistpll
ss
in
mov
xor
fisubs
aam
push
shll
push
inc
scas
fdivr
add
fnstenv
movsb
into
mov
shrb
loopne
ret
hlt
mov
mov
je
icebp
incb
std
cli
mov
fisttps
push
loopne
stc
sub
cmpsb
cli
pop
adc
and
sbb
sbb
pop
xor
test
or
pop
or
or
xlat
mov
iret
int
jb
loop
ds
mov
ret
into
lods
and
mov
xchg
or
push
lea
or
cs
rorb
lds
decb
jecxz
or
jbe
test
jae
jno
shrl
mov
lea
popa
outsl
insl
lahf
imul
pusha
inc
repz
or
nop
mov
stos
fwait
jo
fmull
andl
mov
daa
mov
ret
bound
imul
inc
adc
xchg
shrl
aad
rcll
ffree
mov
les
adc
faddl
idivl
icebp
fisubrl
mov
sti
mov
imul
and
test
pop
cmp
call
imul
sbb
sahf
int3
sbb
test
data16
or
les
divb
lods
cli
fistpl
sti
cmp
and
mov
sub
pop
ret
inc
push
lds
pop
dec
inc
vpmacssdql
lahf
inc
popf
dec
adc
dec
lds
jmp
and
jl
and
fs
pusha
out
lahf
cmp
fstl
fisubrs
icebp
xchg
cwtl
inc
add
xor
mov
mov
data16
jecxz
mov
adc
mov
sarb
mov
scas
adc
pop
stos
addr16
rcrb
sarl
fistpl
mov
cmpsl
icebp
shll
int3
and
data16
push
pop
jl
cs
mov
and
test
shlb
in
lcall
ljmp
test
loopne
xchg
push
sbb
jb
xor
xor
hlt
or
xor
mov
shlb
ds
mov
jecxz
and
shr
sub
add
sub
push
push
icebp
push
push
add
cmp
pop
fcompl
mov
fwait
int
inc
sbb
mov
int
jb
jb
out
popf
shll
adc
movsl
and
pop
cmp
sub
nop
pop
inc
mov
fwait
and
lcall
cwtl
dec
sub
mov
movsb
mov
cli
addr16
pop
jnp
stos
ret
mov
mov
ret
les
add
test
cmc
sar
shr
fistps
loopne
jo
dec
add
movsl
push
push
mov
gs
inc
sbb
hlt
cmc
repz
mov
sti
cmpb
cmp
sahf
pop
sbb
test
stc
sbb
xor
sbb
and
mov
cmc
add
sbb
adc
stc
cli
sub
xchg
xor
add
sbb
and
das
jmp
shll
push
in
and
mov
rcrl
mov
cmp
out
fbld
cmp
jbe
mov
test
imul
imul
pusha
lds
jp
pop
xchg
mov
sahf
mov
xchg
lret
pusha
jb
adcb
subl
mov
mov
mov
lcall
mov
sub
lcall
lds
mov
mov
mov
jbe
les
imul
scas
lds
ror
pusha
inc
div
shr
lret
inc
cld
test
movl
in
jecxz
sub
arpl
jmp
and
fwait
or
sbb
data16
mov
aam
cli
xchg
insb
push
fdivs
xchg
or
iret
stc
cmp
dec
daa
scas
and
enter
sub
das
out
push
push
jge
pusha
dec
sbb
pop
mov
cmc
incb
jnp
pop
pop
scas
cmp
mov
enter
adc
mov
jp
js
cltd
sub
mov
pop
insl
imul
fistl
pushf
popf
inc
jno
cltd
mov
adc
jmp
mov
rcr
mov
mov
movsl
xchg
out
scas
mov
adc
mov
daa
fwait
rcl
cmc
or
xor
loop
out
fldenv
pushf
les
test
shll
jecxz
dec
clc
hlt
pop
repnz
mov
mov
cmpsb
out
shll
pop
mov
jmp
jmp
clc
iret
dec
push
arpl
sbb
jp
add
add
add
imul
or
pop
aas
mov
cmp
cmp
jnp
and
and
and
scas
mov
xlat
mov
push
mov
pop
loopne
mov
aas
jp
mov
jno
rorl
dec
inc
cs
fs
mov
and
jnp
push
jg
fs
arpl
loope
or
insl
fwait
imul
xchg
xchg
rcll
pushf
push
ret
or
pusha
xchg
add
mov
and
sbb
cs
in
out
inc
movsb
arpl
cmp
mov
lea
shl
mov
fcomps
ret
negl
iret
int3
loopne
dec
enter
mov
bnd
mov
pop
rorb
out
adc
push
loopne
out
ret
imul
call
aad
cwtl
pop
stos
outsl
sbb
popf
sbb
sbb
or
sub
imul
inc
lock
adc
sar
ret
negb
fcoms
add
jecxz
gs
or
jmp
xchg
push
lods
cmp
and
inc
sub
mov
movsl
hlt
ja
mov
dec
dec
movsb
ja
jne
push
jno
xor
mov
leave
jl
push
arpl
xlat
push
pusha
jne
xor
lahf
cmp
xchg
test
mov
mov
pusha
mov
mull
push
mov
cmpsb
cmpsl
cwtl
les
xchg
mov
xchg
sbb
test
xor
and
add
mov
mov
pushf
lods
nop
aas
push
ljmp
push
idivb
pop
roll
cld
out
sub
insl
stos
clc
daa
jne
in
gs
push
inc
adc
mov
lods
and
adc
cltd
adc
into
lret
pop
imul
add
imul
sub
jns
aas
mov
push
cmp
jp
rol
mov
adc
xlat
push
clc
push
pop
pop
andb
aaa
inc
inc
outsl
inc
sbb
or
sbb
jae
jb
dec
outsb
test
push
jge
inc
dec
jns
sub
gs
popa
outsb
pop
sub
xchg
xchg
sbbl
inc
popf
lcall
and
mov
adc
mov
jbe
mov
fstpt
movsb
xor
inc
scas
out
stos
insb
sbb
or
dec
fisttpll
cmp
mov
cs
cmp
std
inc
call
popf
xchg
aaa
lock
hlt
incl
mov
in
jmp
fstl
adc
in
ljmp
sub
adc
enter
sbb
push
jns
xchg
or
negb
pushf
fs
jbe
xor
xchg
or
lahf
and
ds
cs
push
cmc
jb
sub
sub
fildll
fcoml
push
push
test
mov
les
add
mov
inc
ja
sbb
mov
int3
mov
std
xlat
jo
mov
jo
inc
scas
stos
int
jp
mov
movsl
cltd
dec
scas
popa
pop
dec
cmp
mov
dec
iret
jbe
adc
xchg
mov
fmuls
popa
jmp
pop
fbstp
mov
mov
cmpsl
jo
hlt
sbb
cmp
call
mov
fsubp
sti
ljmp
sbb
inc
or
rorl
cltd
lret
into
lcall
icebp
or
daa
jp
mov
in
in
popa
cwtl
test
out
call
and
dec
adc
ret
pop
fldl
push
bound
xlat
in
stos
xor
ret
xor
cmp
inc
cmc
and
add
xchg
jg
push
les
cmp
aas
jno
xor
push
cmpsl
inc
inc
in
inc
adc
int
nop
cmpsb
je
jb
out
test
sbb
scas
jnp
jns
mov
dec
bound
pusha
movsl
jbe
insb
or
daa
push
adcb
movsb
pushf
or
inc
sbb
adc
ja
cmpsb
mov
mov
mov
mov
inc
jns
mov
mov
sbb
mov
mov
loope
xlat
push
aad
rcl
pop
repnz
mov
cmp
pop
scas
and
ror
xor
mov
out
decl
xor
out
in
shr
pop
dec
clc
out
pop
ljmp
adc
lock
iret
sbb
shrl
pop
mov
add
or
pop
pop
mov
imul
cmp
nop
daa
push
daa
cmpsb
and
sub
popa
push
test
ret
push
adc
add
scas
xchg
stos
dec
rorl
dec
movsb
scas
add
out
dec
mov
jg
jge
jnp
dec
data16
fs
into
push
adc
adc
imul
inc
push
push
add
rcrl
pop
xorb
add
and
xlat
mov
push
cmp
stc
xor
mov
mov
or
xor
mov
fsubl
sahf
fisubl
flds
iret
jne
ret
xchg
dec
int3
and
stos
scas
hlt
cmc
adc
repnz
idiv
test
std
dec
mov
loope
imul
mov
fwait
sub
inc
pushf
adc
pop
sbb
mov
mov
iret
pop
xchg
add
push
imul
or
or
mov
xor
aas
cmp
xchg
popa
jle
shll
sub
pop
jl
sub
notl
mov
adc
add
inc
mov
xor
mov
das
mov
shll
jno
in
jl
out
lods
js
shlb
popf
cld
xchg
popa
outsb
push
and
scas
imul
movsb
dec
nop
outsb
in
hlt
ja
push
int
dec
mov
repz
andl
or
or
mov
dec
cld
mov
mov
sub
xchg
and
xlat
aam
rorb
shl
cmp
cmpsl
fwait
jge
das
mov
lret
adc
inc
ror
int3
xchg
push
sub
cmc
add
and
or
xor
xchg
out
lahf
in
sbb
or
das
xchg
sbb
xchg
into
sbb
sbb
sbb
loopne
push
inc
data16
xcrypt-ecb
cmpsl
or
ss
ret
cmc
lock
jl
push
add
and
push
cmp
cmpsb
add
sub
xor
mov
mov
inc
inc
cmp
dec
sbb
addr16
dec
cmpl
test
fwait
fs
bound
insb
pop
push
call
xchg
pushf
sub
in
sahf
lahf
and
push
hlt
or
fimuls
test
mov
fildl
sub
mov
mov
adc
icebp
jmp
or
lods
fcmovb
jne
push
aam
shrb
sar
push
pop
enter
cmc
xor
dec
lds
shrb
aad
pop
inc
enter
loope
cmp
lock
cli
stc
cmp
incl
loopne
stos
push
push
fsubr
fs
dec
fcoms
push
jge
das
popa
ds
inc
pushf
and
in
inc
or
jle
les
mov
xchg
scas
xor
and
cmpsb
ljmp
push
sub
in
push
ss
push
adc
jns
add
xchg
test
dec
inc
movsl
testb
out
loop
dec
inc
xchg
jbe
je
jb
rcll
jbe
cmp
js
shlb
push
pop
insl
push
cmp
xchg
fcoms
sahf
mov
cmc
sub
jmp
jne
rcrb
xchg
mov
mov
mov
mov
and
xlat
repnz
movsl
mov
pop
lcall
ss
shlb
jae
fwait
jmp
or
into
mov
xchg
ret
shlb
xchg
push
movsb
enter
xor
repnz
push
push
cld
bt
mov
in
jecxz
add
jmp
jp
cmp
mov
sbb
xchg
sbb
imul
or
or
scas
sysenter
push
xor
addr16
cmpsl
das
sbb
and
sub
adc
sbb
sub
mov
imul
adc
int
mov
cmovp
dec
fwait
jbe
test
jb
fs
not
sbb
js
cmc
addr16
gs
imul
bound
xchg
xchg
pop
xchg
pop
pushf
movsb
mov
mov
addb
mov
insb
bound
mov
mov
push
mov
pusha
xchg
dec
ds
negb
add
aad
and
mov
sub
lds
cmp
lret
mov
or
add
xchg
repz
daa
dec
sti
dec
mov
loop
loope
jmp
lret
cwtl
mov
sub
xor
lea
add
jbe
adc
ds
sub
lods
out
xor
stos
aas
lds
add
stos
cmp
std
cltd
sub
lock
rcll
mov
je
hlt
pop
inc
pop
inc
loope
ja
cmpsb
inc
xchg
rclb
sbb
lods
jae
stc
xchg
jg
nop
jp
js
nop
addr16
or
mov
imul
xchg
nop
cmp
int3
movsb
xor
hlt
ja
addl
mov
mov
xor
mov
jmp
push
stos
dec
push
cmpsl
dec
xor
into
scas
jl
popa
mov
aam
sarb
shrb
shlb
push
rcr
cltd
lds
aas
shrb
push
int
lret
adc
sub
and
repnz
sahf
stos
cld
xchg
arpl
mov
out
and
mul
mov
in
sub
jmp
jo
daa
xor
lahf
hlt
xor
ss
cmp
add
xor
inc
movsb
or
sbb
mov
imul
cmp
mov
push
inc
and
and
cmpsl
xor
scas
xor
mov
mov
inc
fiadds
dec
inc
sub
pop
incl
call
je
xor
jo
enter
sbb
fwait
nop
mov
or
jl
imul
sarb
xchg
or
pushf
fwait
bnd
cltd
ret
test
mov
dec
sub
mov
mov
popf
addl
mov
mov
stos
fldt
sub
pop
sbb
test
pop
fdivrs
pop
int
ret
or
dec
loopne
lods
leave
inc
outsb
div
push
add
lock
iret
cld
psubd
ja
imul
push
xor
int3
loope
jl
sahf
ljmp
and
cli
out
pop
sbb
xchg
pop
push
stc
xor
add
cmp
cltd
out
xor
inc
xor
cmp
jle
imul
sub
sub
mov
dec
stc
fisubs
push
push
pop
out
fs
rcrl
inc
inc
xor
inc
and
inc
dec
or
cld
dec
pushf
fisttps
call
dec
jno
jg
jge
jnp
jns
cmpsb
sbbb
or
pop
push
ja
test
xchg
or
sahf
int
jns
insl
cwtl
mov
xchg
or
lea
xchg
mov
cmp
sub
mov
pop
cmpsl
sub
mov
lret
cmp
jmp
aad
lcall
mov
add
ret
mov
push
dec
stc
or
negl
repz
or
cld
adc
xchg
jmp
push
out
inc
add
and
dec
cmp
cwtl
das
adc
sub
sub
in
add
xor
cmp
or
and
xor
xor
lods
cmp
sbb
cmp
mov
test
xchg
push
in
push
rclb
jle
xchg
xor
fists
xchg
inc
inc
dec
es
popf
dec
jns
ja
iret
jb
mov
lods
jp
jge
or
fs
push
push
outsb
scas
pop
insl
jg
jo
push
cmpsl
stos
ja
inc
nop
xchg
loop
enter
nop
cltd
or
popl
test
mov
add
test
dec
jge
enter
mov
mov
shrd
xchg
test
add
arpl
pop
jmp
mov
jge
inc
inc
mov
sbb
xchg
testb
cmc
xor
or
popl
fwait
pop
clc
stc
dec
out
imul
in
in
ss
xor
and
push
lahf
cmp
lods
cmpsl
ficoms
lcall
xchg
or
aaa
xor
outsl
out
and
daa
inc
aam
mov
outsb
and
fstps
add
fldl
call
adc
push
add
pop
aad
inc
mov
std
jge
jle
stos
ficomps
popa
test
gs
js
adc
mov
es
pushf
or
popf
insb
ss
lahf
aam
into
test
sbb
dec
aaa
mov
cmp
nop
push
or
mov
into
mov
scas
lods
into
dec
test
xor
aad
or
dec
xchg
mov
js
data16
adc
nop
sar
jl
int
dec
pop
sbbl
or
std
addr16
jge
xchg
pop
fcoml
mov
cmp
gs
adc
pop
pop
lcall
dec
ret
xchg
pop
push
cmp
mov
jmp
test
cmp
ss
jo
mov
xchg
pop
push
mov
inc
push
xlat
push
add
pop
pop
scas
or
cmp
inc
loop
decb
dec
fisttpll
clc
sbb
dec
jge
jle
xor
fs
data16
mov
arpl
cmp
xlat
dec
insl
enter
popa
xchg
lea
enter
and
mov
cmp
jns
dec
inc
mov
mov
inc
cld
mov
push
daa
daa
mov
cmpsb
js
cltd
mov
scas
mov
stos
stos
std
cltd
pop
popa
in
push
test
sub
fcmovu
jp
outsl
xor
add
into
iret
mov
leave
jbe
pop
sub
mov
cld
sahf
and
dec
out
xor
sub
loope
dec
in
in
pop
add
jmp
adc
movsb
pop
stos
mov
loope
sbb
add
mov
dec
fisttpl
ss
push
xor
add
cmp
and
and
sub
outsb
mov
mov
add
pop
loope
pop
test
inc
imul
sbb
test
dec
mov
mov
sub
jp
js
pop
insb
shrb
popa
pusha
outsl
loop
push
pop
imul
lahf
dec
popf
repnz
cltd
pop
xchg
repnz
mov
mov
push
and
fstpl
pop
mov
cmpsb
jle
push
jmp
cmpsb
fsubrs
jne
aam
sarb
test
clc
fstpl
adc
sbb
dec
pop
or
enter
hlt
fdivp
dec
movsb
aaa
sbb
xchg
dec
sti
call
in
jecxz
inc
adc
mov
jmp
dec
adc
push
in
cltd
or
sbb
sbb
imul
jo
fcomps
or
xchg
scas
adc
aas
pop
jb
ja
mov
pop
sub
sbb
lods
sub
dec
sub
jb
into
push
arpl
hlt
xchg
adc
push
pop
push
pusha
daa
inc
inc
inc
imulb
dec
test
fisttpll
dec
pusha
add
movsb
je
xor
jns
inc
jns
adc
outsb
out
sbb
imul
xchg
xchg
cmp
lods
pushf
popf
or
mov
leave
or
jns
mov
movsl
es
mov
mov
mov
jg
mov
xchg
mov
loope
jp
jo
sbbl
push
aaa
jp
cmc
int3
xor
lret
xor
pop
notl
repnz
push
or
inc
out
iret
and
out
jo
insb
ljmp
adc
adcb
test
push
sbb
jg
addb
imul
fimull
push
jge
inc
dec
out
mov
sub
les
lds
pop
shl
leave
sub
adc
pop
sub
xchg
push
test
sbbb
pop
and
inc
push
or
or
xchg
jne
jae
jno
test
cli
jnp
inc
and
xor
stc
outsb
mov
lret
xchg
push
sahf
clc
pushf
cmp
sbb
ljmp
cmp
std
lods
mov
xchg
mov
mov
inc
mov
adc
rcl
loopne
xchg
rclb
jecxz
cmp
neg
mov
jecxz
lds
push
push
subl
adc
icebp
push
push
std
mov
clc
or
push
in
loop
loopne
out
xchg
xchg
ljmp
jp
mov
lcall
movb
or
add
mov
mov
lea
cmp
cmpsb
mov
std
stc
and
and
fucomp
mov
sub
mov
push
push
hlt
push
jo
xlat
lock
icebp
inc
push
inc
inc
sbb
and
lret
int3
inc
jbe
mov
jb
test
jno
movsl
xor
outsb
or
gs
in
lods
popa
jge
cmp
out
and
dec
xchg
and
lock
cwtl
cltd
aad
xlat
or
jmp
rclb
mov
dec
xor
lods
mov
lret
movsb
movsl
andb
lods
dec
ss
jns
xor
fcmovbe
xchg
mov
mov
dec
xchg
sub
ret
fmuls
iret
dec
or
lret
and
dec
js
xor
rcrb
dec
std
mov
stc
in
pop
mov
or
sub
std
and
adc
sbb
mov
add
cltd
negb
or
test
lcall
ds
cmp
dec
mov
in
and
shl
mov
sub
push
adcb
adc
iret
rcrl
inc
pop
nop
sbb
inc
bound
cmpsb
dec
dec
das
xchg
xorl
pop
jno
and
cmp
movl
pop
imul
outsb
das
sbb
dec
lret
pushf
and
xchg
mov
imul
mov
movsl
or
inc
push
mov
push
insl
cmpsb
loop
push
popa
mov
push
lods
stos
ret
xlat
test
inc
cmpsb
hlt
and
fidivl
inc
lahf
sahf
not
add
into
jo
aad
adc
in
testl
xchg
cmpsb
std
int3
sti
add
enter
adc
in
pop
xor
std
pop
mov
outsb
pop
push
out
lea
testl
or
std
movsb
lret
xor
ds
cmp
call
insb
es
and
cmpsl
cs
push
cmc
sub
js
outsl
push
jne
push
dec
jp
xchg
mov
pop
adc
scas
ret
inc
ss
dec
dec
into
les
jbe
les
xor
out
jl
cmp
js
sbb
gs
pusha
arpl
cmpsl
ret
fsubrl
fwait
xchg
adcb
fwait
add
push
fwait
and
xor
mov
cmp
faddl
adc
jge
xlat
mov
inc
mov
mov
fwait
sub
mov
shl
fiadds
shl
lock
shrl
ljmp
mov
cmp
xor
sti
sbbl
out
jmp
jp
imul
call
decb
adc
sbb
sbb
cmc
add
rclb
mov
in
aaa
xor
xchg
xchg
xor
mov
pop
test
and
and
fucomi
sub
in
push
ror
call
pop
pop
dec
repz
pop
cmp
inc
js
js
orb
push
dec
repnz
je
cmpl
jle
jl
cmpsl
jnp
jns
addr16
cmp
aam
in
mov
add
jmp
popf
je
pop
push
add
pop
push
test
push
mov
push
xchg
mov
mov
mov
dec
mov
scas
mov
lock
stos
sbb
cmp
push
dec
or
lds
iret
sbb
leave
negb
loope
lret
jae
stc
movsb
clc
lea
lret
out
pusha
or
fcomps
xor
call
out
jge
push
ret
jmp
ljmp
sbb
aaa
add
lock
add
repnz
or
cmpsl
jecxz
jg
xor
xor
xor
aas
imul
and
and
rcll
or
jns
xchg
push
call
pop
add
pop
mov
inc
sbb
cwtl
loopne
mov
adc
xchg
jbe
je
push
jae
or
xlat
movsl
jns
fisubs
stos
pusha
sbbl
imul
fists
xor
lahf
jge
pop
xchg
xchg
dec
or
dec
mov
pop
sub
mov
dec
cmpsl
mov
jl
aas
lods
jns
jbe
push
lcall
rcrl
push
outsb
fnstsw
insl
lds
push
int3
xchg
lret
xor
idivl
jmp
push
stc
ret
shl
mov
loope
inc
ficomps
mov
push
mov
sbb
pop
fwait
cmp
and
or
or
cmp
mov
das
or
sbb
jmp
and
lret
pusha
cmpsl
pop
sub
pop
push
in
push
push
push
fs
lcall
cmp
pop
rorb
mov
inc
dec
pushf
ja
jne
dec
jo
jns
daa
ss
mov
jp
adc
inc
outsl
jae
fsubrs
cli
xchg
xchg
xchg
das
pop
stos
popf
fwait
adc
insb
xchg
fidivrs
imul
lea
js
mov
js
and
insl
mov
popf
movsl
inc
mov
in
stos
jecxz
test
jb
shr
fbstp
or
pop
dec
xchg
inc
ret
sarb
iret
push
popa
clc
lret
inc
leave
jmp
repz
sarb
std
adc
in
in
mov
xor
leave
js
push
inc
fsts
jg
insb
mov
iret
push
pop
cmp
push
addl
pop
mov
lea
mov
rol
xchg
and
and
push
sbb
pop
ljmp
push
fstps
aam
scas
pop
mov
fldl
add
nop
outsl
sub
jne
jne
inc
jo
mov
mov
add
ljmp
jno
lcall
lahf
push
popf
jno
cwtl
fldl
xorl
lods
mov
add
sub
mov
lret
out
mov
in
pusha
pusha
in
jl
mov
sti
imul
cmp
lea
cmp
fiaddl
lret
shl
rcll
ja
lret
cmp
hlt
std
pop
mov
std
outsl
sti
sbb
and
loopne
lock
xlat
mov
adc
cld
out
push
adc
xor
dec
in
sbb
in
pop
inc
add
adc
or
push
aaa
and
xor
lods
ds
jl
and
and
and
jae
enter
fldt
push
icebp
cld
scas
push
rcrb
pop
or
mov
sti
inc
jo
stos
dec
and
jbe
adc
jge
jl
mov
pop
fs
mov
popa
shrl
dec
and
inc
xchg
out
xchg
movsl
jg
pusha
lahf
lahf
ficompl
fwait
cwtl
mov
subb
push
pop
mov
mov
test
xchg
mov
std
mov
or
pop
jbe
push
lods
jo
int3
push
test
sub
jo
stos
inc
mov
dec
sub
pushl
iret
push
int
pop
enter
hlt
jb
outsl
inc
adc
imul
sti
push
fs
outsl
jecxz
loope
mov
icebp
jmp
sub
sti
pop
dec
sbb
in
pop
mov
add
cmp
or
jmp
sub
sahf
push
jno
dec
scas
cs
mov
sub
insb
push
push
xor
push
adc
negb
pop
aad
inc
mov
inc
push
mov
rorl
jmp
add
fsts
dec
pop
jl
adc
pop
jae
fs
bound
pusha
nop
cwtl
cld
movsl
inc
push
or
xchg
xchg
sub
cmpsl
mov
ds
sub
cltd
icebp
movb
cmpb
push
adc
cmp
les
cmpsb
or
aas
jnp
cltd
pop
cmp
xchg
mov
fsubrl
add
xor
sbb
sbb
lret
mov
cmc
xor
lock
push
outsl
cli
rcrl
inc
jb
xlat
out
jp
imul
adc
fildll
sbb
pop
pop
add
jno
push
pop
mov
or
into
aaa
xor
pop
inc
mov
jbe
aas
int3
test
mov
clc
mov
hlt
sbb
jle
push
push
jno
push
hlt
push
pop
vmread
sbb
out
rolb
inc
mov
cld
inc
ficomps
sbb
and
jb
js
pop
mov
js
inc
jle
fsubl
pusha
stc
ret
insl
push
push
jl
push
lahf
xchg
sahf
push
popf
imul
outsl
xchg
test
adc
popa
jnp
mov
mov
das
add
dec
mov
fmul
cmpsb
inc
hlt
movsl
mov
scas
and
loopne
mov
pop
call
icebp
fiadds
frstor
and
push
test
ror
int3
jl
nop
inc
mov
mov
or
cli
xchg
add
out
jl
imul
mov
pop
pop
ficoml
adc
cld
push
adc
mov
pop
cltd
loop
into
add
nop
orl
cmp
mov
or
jmp
es
push
and
outsl
pushf
sub
pop
les
sahf
push
push
and
ss
sub
je
inc
ret
pop
mov
mov
ja
lods
adc
mov
cmp
addr16
gs
inc
insb
pop
and
enter
xchg
shll
mov
scas
imul
cltd
jge
mov
xor
xor
mov
inc
mov
xchg
inc
xor
repz
jne
push
loope
inc
data16
sub
insl
test
add
rcl
fsub
int3
fucomp
jecxz,pn
mov
xor
into
hlt
sbb
lret
pop
inc
maskmovq
mov
push
movsb
push
in
sub
mov
out
mov
inc
pop
outsb
adc
pop
jecxz
icebp
sbb
fildl
push
out
or
popf
lahf
add
mov
imul
add
cmp
shlb
push
jne
and
mov
sub
popf
mov
push
adcl
pop
shll
dec
inc
loope
pop
insb
orb
dec
and
jb,pt
sbb
jge
jnp
jns
and
push
bound
popa
loope
outsl
int3
shrb
rclb
lahf
in
out
fwait
cwtl
int
xor
roll
push
cwtl
sbb
test
add
mul
jae
rolb
movsb
outsb
dec
xchg
mov
xchg
inc
xor
test
mov
shrb
fists
pop
pop
mov
mov
push
int3
nop
lret
leave
jg
hlt
xor
xchg
icebp
leave
pop
cld
jmp
test
ja
or
imul
enter
stos
adc
push
pop
daa
sbb
and
push
fstps
out
sti
aaa
add
cmp
cmp
xor
push
shll
sarb
and
in
add
mov
sub
mov
jecxz
test
cmp
inc
inc
add
and
je
frstor
jo
jle
jl
jp
js
rorb
pusha
popa
cs
insb
insl
stc
xchg
or
sub
ficomps
subl
mov
push
xchg
and
jbe
mov
mov
and
pop
cmp
xchg
xchg
cmpsl
inc
push
icebp
cmp
mov
push
lods
lods
std
push
test
ljmp
shll
push
xor
dec
dec
mov
cmp
test
hlt
cmc
stc
clc
xor
add
std
movsl
or
in
into
ljmp
lea
scas
sbb
add
popf
sti
push
sbb
mov
add
mov
cmpsl
orb
aaa
xor
shlb
ret
xor
xchg
cmp
dec
inc
and
fwait
stos
sub
sub
pop
cmp
pop
lret
pop
ret
inc
cmp
push
inc
iret
inc
cltd
incb
ja
dec
outsb
adc
test
fnstenv
lods
nop
mov
jl
dec
xchg
test
jb
add
bound
out
pop
insb
nop
push
clc
jl
outsb
lds
push
xchg
daa
xchg
test
or
xchg
andb
aaa
lea
mov
push
mov
mov
xor
roll
and
lods
scas
adc
test
jmp
fildll
mov
and
aaa
movl
ds
sbb
pop
nop
or
stos
dec
or
repz
lock
push
cli
jp
or
loop
popa
loope
cli
in
dec
ljmp
jle
inc
adc
cmc
sbb
test
pop
aas
jb
add
insl
movsl
bound
cltd
or
xor
lods
in
gs
mulb
shll
add
mov
jg
rsqrtps
shll
push
pop
mov
and
xchg
fimull
jns
aas
push
mov
jle
jne
das
push
sarb
jge
mov
repnz
int
adc
push
pusha
movsl
shll
aam
add
jl
adc
xchg
push
repnz
inc
sub
sahf
loopne
sti
mov
enter
push
pop
sahf
lods
cmpsb
push
movsb
movsl
cli
clc
mov
push
jge
shrl
lahf
rcrb
fists
add
fisttpl
and
testl
fidivl
jle
sti
and
in
jecxz
loope
cmpsl
and
jmp
push
adc
push
or
loopne
adc
push
int3
add
push
fcomps
or
sub
nop
xor
clc
cs
xor
cltd
daa
and
into
das
pop
sub
push
inc
sbbl
pop
add
jno
pop
and
inc
xchg
inc
mov
inc
test
push
loope
dec
dec
jmp
movsl
mov
test
mov
dec
sub
sarl
in
mov
sahf
fisubrl
imul
gs
int
mov
les
lahf
fs
ficompl
adcb
jge
mov
sbb
cmpl
cmp
movsl
fcompl
mov
push
stos
lods
mov
aad
shr
popa
jmp
aaa
call
jno
les
add
into
or
int
or
aam
outsl
push
mov
sarl
pop
popa
stc
out
in
loop
test
out
pop
ljmp
setb
mov
adc
push
mov
adc
sbb
inc
pop
mov
dec
sti
add
inc
je
and
rcll
cmp
xor
push
enter
cmp
xchg
call
sbb
cmpsl
mov
cmp
sub
js
sbbb
ja
dec
inc
inc
or
orb
aaa
rol
in
call
jl
lret
xchg
mov
outsb
outsl
test
push
mov
ljmp
or
std
push
test
testl
aam
mov
or
inc
dec
aad
mov
jp
mov
inc
cmc
movsl
test
sub
xchg
pop
stos
pop
subb
aam
roll
jp
fists
mov
mov
lock
and
push
out
shll
enter
xor
icebp
data16
push
ret
push
clc
mov
add
push
jmp
adc
pop
jecxz
sub
push
push
es
sbb
stc
daa
push
add
push
in
fmul
add
or
ss
xor
xor
xor
cmp
adc
shlb
test
das
sub
sbb
pushf
cmp
pop
sbb
mov
jnp
cwtl
ljmp
out
call
je
fdivl
sub
out
dec
jp
js
adc
jle
arpl
pop
cmp
jne
rclb
pop
pop
add
mov
roll
push
mov
test
test
push
adc
sub
aam
nop
cmp
fbld
mov
lods
stos
cld
out
test
shrb
call
fldcw
xlat
push
or
jae
imul
jns
sbb
xor
sbb
shl
aaa
and
stc
loopne
leave
xchg
in
xor
inc
sbb
lahf
sbb
dec
aas
sbb
pop
int3
rcr
ja
in
cltd
pcmpeqw
cld
or
mov
lds
jb
imul
mov
jae
test
sub
stc
ret
mov
sbb
pop
and
xchg
fadds
dec
jne
lea
xchg
jbe
lea
cwtl
loopne
fidivrl
sub
out
mov
sub
outsb
pop
insb
lods
cmp
inc
stos
popf
mov
pushf
add
mov
dec
int
mov
dec
adc
leave
shlb
mov
mov
pushf
mov
push
cmpsb
hlt
movsb
xchg
imul
and
in
dec
loop
inc
sarl
cmp
pop
ret
dec
into
iret
inc
fs
call
add
aam
hlt
sti
mov
dec
mov
loopne
sbb
out
mov
ljmp
adc
das
pop
sbb
das
pop
test
pop
dec
movsl
add
jg
aas
dec
scas
les
std
jb
or
jl
jb
mov
jle
daa
and
push
mov
das
fldt
mov
push
push
sbbl
dec
dec
divl
lahf
inc
inc
jle
or
out
dec
clc
inc
sub
jno
mov
jp
or
adc
fldenv
arpl
ds
push
xchg
push
cmc
add
dec
int3
clc
jl
mov
push
mov
in
inc
cmp
mov
mov
lahf
mov
cmp
push
mov
scas
or
stos
push
int3
pop
aam
pop
in
shll
mov
fldl
sub
push
push
fistps
push
xor
cmc
div
jnp
decb
pop
mov
mov
jecxz
loop
jl
ja
mov
aad
adc
adc
adc
sbb
dec
cmp
mov
in
cmp
idivl
dec
adc
pop
cmp
cmp
push
icebp
dec
insb
movsb
cmpsb
icebp
mov
xor
xor
push
fistl
lret
push
pop
out
pop
scas
pop
jns
in
in
dec
inc
mull
fisttps
ret
dec
jbe
je
jb
inc
or
jl
mov
repz
xor
mov
aad
cmp
int3
xor
adcl
lock
les
addb
inc
mov
jbe
dec
push
mov
dec
sub
stc
loope
mov
fldenv
lods
pop
stos
stos
ljmp
xlat
xor
mov
cli
ret
ffree
dec
test
cmpsb
lods
add
mov
and
mov
icebp
sub
add
push
lahf
call
adc
movsl
out
xchg
ljmp
lcall
mov
cmc
in
lahf
sbb
test
or
outsl
push
xor
inc
int
sarb
cmpb
cltd
imul
ror
cmp
das
and
sub
pop
jl
push
push
push
lret
in
pop
sub
pop
xor
jnp
lret
dec
xor
pop
je
jb
mov
lret
or
and
bound
push
fs
outsl
scas
sub
mov
mov
push
js
inc
xchg
jns
pushf
sub
adcb
fidivrl
call
das
adc
pop
mov
mov
cmpsb
lods
jb
mov
scas
mov
scas
xchg
shrl
cmc
rorl
out
in
fnstsw
out
test
loopne
or
and
xor
push
or
shl
pushf
adc
call
mov
mov
in
lret
mov
jmp
add
jb
je
and
repz
adc
cmpsl
scas
aam
or
outsl
push
jg
sub
pop
outsl
xor
push
xor
mov
sub
clc
arpl
mov
repz
cs
sub
lret
sub
or
push
ss
push
pop
xor
pop
pop
shll
inc
cmp
dec
dec
xchg
mov
in
xorb
mov
mov
idivb
loopw
push
fs
scas
pop
popa
jno
insb
and
pusha
cmp
popa
outsb
sahf
lods
das
popf
pop
fwait
in
imul
fimuls
pop
out
jne
mov
mov
mov
mov
xchg
and
jb
andl
lods
arpl
scas
ljmp
fstl
sub
fld
pop
into
mov
int
or
data16
pop
repnz
lock
xchg
lds
inc
xabort
mov
ds
in
outsb
xor
call
push
les
pop
lods
stc
sbb
cld
or
inc
fsubp
test
lcall
sbb
lahf
into
out
push
les
aam
divb
mov
aaa
imul
fnsave
ficoml
push
add
add
fwait
cmp
xor
test
rorl
jbe
xchg
push
in
cli
test
enter
outsb
xchg
sub
mov
int
and
and
sbb
mov
pop
loopne
mov
sbbl
or
dec
push
inc
arpl
mov
adc
mov
adc
shrb
insl
fsubs
dec
mov
dec
int3
jmp
push
test
xchg
sbb
clc
fwait
jb
fcomps
mov
or
xchg
mov
inc
cmp
sbb
mov
lods
add
cmp
or
std
xor
xor
fcomi
cmp
movsl
es
and
gs
fs
int
and
sub
push
mov
pop
sbbl
lret
inc
fldenv
cmp
add
ds
adc
shlb
push
add
sbb
pop
js
xchg
dec
fs
push
or
push
ja
lea
xchg
jmp
popa
pushf
popf
pop
push
jmp
mulb
addb
adc
xor
and
mov
mov
push
sub
loopne
test
in
fwait
movsl
fcmovu
std
cmp
dec
add
into
iret
in
inc
enter
int3
cmp
cmc
sub
stos
sub
fdivrp
jb
push
aam
cmp
loope
out
dec
clc
pop
jmp
nop
sti
adc
adc
xor
inc
sub
push
inc
inc
add
cs
ficoml
xor
xor
out
aaa
sub
push
sub
icebp
mov
mov
cvttps2pi
into
sub
addr16
lcall
imul
lahf
xor
inc
inc
fwait
dec
and
dec
popa
dec
xchg
jb
xchg
jne
notb
cli
sarb
jnp
dec
aad
lcall
adc
fimuls
xchg
xchg
lahf
pop
xchg
inc
jmp
popf
pop
fwait
adc
cmpl
and
mov
inc
and
lea
lock
xchg
mov
pushf
sahf
stos
movsb
imulb
repnz
rcrb
fidivs
test
fwait
lret
xchg
cmp
pop
int
dec
cmp
js
sahf
adc
icebp
decb
lret
rclb
loope
out
in
xchg
ljmp
fcoml
sbb
adc
jnp
or
out
in
xchg
nop
add
lret
test
je
insb
loopne
pop
cmp
xchg
das
je
cld
and
jmp
sub
push
sub
mov
and
adc
outsl
inc
pusha
inc
aad
push
inc
inc
xlat
jbe
jns
call
je
sub
outsb
out
lcall
leave
push
mov
std
outsl
aas
aaa
push
push
ja
seto
sahf
lahf
mov
xchg
push
mov
mov
into
inc
push
fs
mov
mov
jne
cmpsb
sub
add
test
sub
aam
push
dec
hlt
shll
fiaddl
in
cld
outsl
lock
inc
outsb
mov
push
push
lret
adc
pop
imul
sbb
out
xor
ja
push
pop
out
ljmp
pop
movsl
adc
cs
aas
pusha
or
add
lcall
daa
mov
pop
or
xor
mov
aaa
cmp
and
fsubs
and
xorb
push
stos
or
cmpsb
fs
pop
mov
inc
popa
inc
bnd
sarl
xor
fsubp
adc
sbb
mov
jp
push
jns
ja
sub
or
mov
out
scas
add
out
xchg
jb
sub
insb
add
test
add
mov
mov
push
insb
mov
inc
jge
push
push
mov
mov
cmpsl
gs
mov
in
jo
stos
dec
test
and
dec
cltd
out
cmp
mov
pushf
mov
int
jns
cmp
idivl
repnz
icebp
stc
and
pop
out
jne
loop
loopne
out
jnp
in
insb
jmp
jmp
adc
mov
sbb
int
xor
fimuls
mov
or
xor
cmp
es
xor
inc
out
dec
mov
adc
sub
xor
push
in
xor
push
pop
mov
xor
xchg
and
or
dec
dec
add
jne
ret
jne
pop
push
pushf
jnp
and
arpl
iret
scas
insb
push
xchg
dec
jg
imul
or
lcall
sub
andl
push
lea
mov
mov
mov
cwtl
cmpsb
cmpsb
js
dec
mov
inc
fldcw
or
loop
sbb
lret
imul
fcoms
idivb
lock
and
std
enter
imul
in
sub
test
xor
sahf
adc
push
fistpl
aad
in
repz
fninit
mov
mov
movsl
mov
icebp
aaa
xor
inc
aas
push
cmp
es
iret
and
mov
pop
mov
jbe
iret
push
pop
fcoms
lds
pop
fcmovnbe
inc
inc
jno
or
mov
cmp
dec
cmpl
stc
shrd
pushl
add
jnp
mov
adc
cs
nop
dec
mov
xchg
lods
or
lcall
sbb
push
jle
lea
out
sbb
add
or
mov
dec
and
lahf
lock
rcrb
rcrl
push
jecxz
xchg
mov
cmp
je
ror
testl
ret
js
repz
push
sbb
sub
clc
xchg
jge
imul
mov
aad
mov
adc
and
daa
or
out
xor
ss
xor
xor
or
mov
lods
cmp
and
jbe
lahf
das
js
sub
scas
ficomps
sahf
aas
fistpl
pop
xor
mov
lods
lock
inc
rolb
jae
xchg
dec
shrb
arpl
lret
aas
jle
jl
xor
or
addr16
bound
pusha
cmp
insb
sbb
not
xchg
xchg
lds
pop
lahf
xchg
cltd
pop
cwtl
push
jp
mov
sub
mov
push
xchg
cmp
mov
pop
mov
xor
das
mov
ds
stos
outsb
test
scas
repz
sub
or
fcomps
inc
sti
and
adc
int3
push
lret
jl
idiv
sub
test
mov
cli
pushl
sub
out
cltd
lcall
adc
gs
jle
sahf
pop
sbb
add
pop
mov
or
jge
aaa
push
xor
ljmp
cmp
aam
push
in
popa
mov
mov
sub
les
mov
pop
mov
cmp
inc
inc
add
dec
sbb
dec
lret
mov
jle
cmp
out
jns
addr16
gs
pusha
adc
outsl
dec
fmulp
imul
xchg
xchg
ret
lret
ss
xchg
std
int3
cwtl
dec
ja
dec
add
pop
and
push
inc
mov
mov
mov
add
shll
ds
sti
movsl
mov
add
push
mov
lds
rcl
shrb
mov
popf
shrl
mov
es
dec
and
mov
lret
lahf
in
imul
cli
sti
stc
rsqrtps
cwtl
mul
adc
out
add
adc
fwait
call
sub
rcll
jge
sbb
aas
pop
sbb
xlat
scas
add
push
or
js
xor
xor
movsl
pop
xlat
mov
inc
mov
das
sub
mov
cmp
push
pop
mov
xchg
aad
cmp
pop
arpl
inc
pop
inc
int3
inc
test
scas
mov
dec
lret
mov
or
mov
sbb
jns
cmp
gs
pop
gs
outsl
dec
insl
enter
inc
xchg
cmp
sahf
cld
icebp
popf
inc
and
jae
test
dec
jecxz,pn
or
mov
mov
test
sub
jecxz
and
ficompl
add
sub
into
js
int
rcl
and
push
jb
into
add
repz
rcr
int3
int
lret
test
negb
rcrb
push
cmp
fnsave
adc
mov
idivl
mov
cltd
fidivl
push
dec
pop
and
bound
ss
add
pusha
cltd
lret
outsb
or
mov
pop
xor
pop
cmp
cmp
pop
mull
fldenv
dec
sub
sub
sbb
push
pop
stos
daa
imul
pop
js
inc
jb
add
movsb
faddp
dec
dec
jg
inc
push
jb
push
jne
pop
cld
jge
jnp
sbb
xchg
pusha
add
cwtl
fcomps
cmp
mov
mov
sahf
adc
or
mov
int3
add
adc
movsl
sbbl
outsb
stc
mov
inc
mov
mov
sub
mov
enter
adc
inc
test
add
outsb
insb
daa
out
sahf
xchg
sbb
addr16
gs
lret
shll
xchg
imull
xor
dec
leave
adc
cli
mov
in
sti
mov
loope
jo
jo
inc
pop
jmp
sbb
mov
push
sbb
lea
int
in
add
pop
addl
push
std
or
inc
arpl
mov
aaa
push
xor
loopne
cmp
jo
sbb
movsl
cli
dec
sub
or
push
push
add
pop
loop
repz
lcall
dec
pop
sbb
dec
mov
clc
xchg
mov
pop
icebp
inc
jp
mov
cmp
dec
popa
cmp
push
pushf
imul
dec
call
lcall
inc
jge
jle
sbb
mov
xor
sub
mov
cli
push
pop
push
movsb
movsl
das
dec
mov
sub
int3
aam
push
adc
jmp
jb
lret
scas
ret
sbb
lret
mov
ret
ret
sbb
jg
fstpl
or
jnp
je
jb
fisttpl
aaa
lret
mov
mov
adc
cwtl
pop
sbb
mov
ss
push
mov
psrld
testl
cmp
dec
and
sbb
cs
sub
fsts
push
in
push
or
lds
and
xchg
inc
sub
dec
jno
and
mov
ffree
jno
jg
sahf
fldcw
inc
arpl
popa
out
dec
insl
scas
sbb
and
pop
nop
xor
lahf
pop
mov
xchg
cmpsb
xorb
sbb
mov
mov
xchg
and
mov
mov
popf
aaa
add
push
stos
mov
add
push
fsubrl
add
cld
stos
adc
shlb
adc
sbb
test
mov
adc
adc
pop
sti
clc
mov
shl
fwait
loope
je
add
push
call
adc
adc
pop
sbb
imul
ss
push
mov
dec
or
or
aaa
bound
ds
add
mov
bound
sti
pop
outsl
jmp
and
xchg
sub
mov
push
push
mov
xchg
pop
rolb
mov
push
mov
jne
dec
lahf
inc
jbe
lcall
lea
jnp
jns
bound
mov
cmp
lds
imul
xor
sub
cltd
rolb
xor
fdivrl
stos
rcll
jnp
pop
mov
mov
inc
mov
test
fldt
rorl
push
xchg
fstp
jno
loop
jbe
ret
push
clc
pop
int3
cmpsb
stc
mov
cmp
add
std
or
in
orb
clc
push
sub
pop
adc
ficompl
cltd
cmp
fisubrl
push
js
add
sbb
in
or
pop
mov
jae
xor
cmp
xchg
cmp
jl
sbb
and
cmp
pop
sub
push
jle
ret
push
jno
pop
pop
sbb
outsl
sub
jbe
xchg
cmc
inc
out
dec
xor
dec
xor
out
add
jno
pop
loope
jp
jns
pop
sub
pop
mov
insb
cmpsb
push
or
push
xchg
xchg
out
add
aad
mov
cwtl
and
or
pop
push
sbb
adc
mov
mov
mov
jnp
mov
fidivrs
xchg
mov
lods
insl
jnp
xor
rolb
rcl
lock
add
jne
sahf
out
fisubrl
ret
ja
and
or
sti
test
jb
movsl
xrelease
lret
cld
inc
dec
mov
add
pop
in
loop
add
fucomp
jo
add
aad
cmp
inc
dec
sbb
xchg
cmpsl
add
pop
ret
mov
dec
or
dec
mov
mov
pop
cmp
cmp
dec
ret
xor
cmc
and
and
scas
inc
xchg
sub
push
adc
arpl
jle
ds
sub
cwtl
insb
movl
or
mov
rcll
add
repz
jp
js
lea
bound
cmp
aam
scas
lds
cmp
insb
xchg
sbbb
fildll
arpl
fwait
pusha
mov
push
jp
mov
mov
mov
xor
and
mov
jne
inc
mov
lods
aam
dec
test
push
inc
shlb
ffreep
mov
fdivs
add
stos
ret
sub
pop
clc
int3
fs
dec
divb
psllw
lods
xchg
cli
lcall
in
repz
out
add
add
jecxz
and
lods
icebp
mov
scas
jmp
int3
pop
pop
aam
add
add
jo
ss
adc
jne
cmp
cmp
cmp
daa
mov
cmp
lock
fwait
dec
je
push
adc
mov
sub
ljmp
inc
inc
outsl
jg
cmp
popf
dec
rcll
in
mov
jle
jl
stos
jnp
jns
mov
popa
xchg
mov
push
push
push
xchg
xchg
iret
push
xchg
sbb
lahf
iret
and
test
call
arpl
cmp
xorl
fs
jno
xchg
clc
mov
lods
cmp
aas
jne
and
rcll
cmp
dec
sbb
or
addr16
dec
sub
jbe
xor
push
cmc
jno
lock
ljmp
les
fistl
adc
outsb
out
sti
test
adc
adc
xor
mov
sbb
sbb
arpl
mov
add
jno
popa
mov
std
or
repnz
popf
jno
and
cmp
lods
and
push
mov
xchg
xor
pop
push
mov
lods
pop
pop
sbb
mov
xchg
dec
sub
pushl
jo
jle
jl
jo
js
mov
bound
outsb
outsl
xchg
insl
mov
fwait
jge
sbb
xchg
cs
xchg
adc
mov
adc
enter
mov
mov
mov
lahf
or
mov
xchg
mov
jmp
jle
test
idivb
in
sbb
scas
sub
mov
push
call
imul
sarl
mov
jo
leave
imul
pop
jl
int3
fs
mov
out
in
gs
addr16
cmp
xchg
ds
mov
adc
mov
sbb
or
addb
loop
xor
ss
xor
cmp
mov
bound
add
repnz
xor
cwtl
push
mov
cmp
sbb
inc
call
inc
hlt
sbb
int
daa
dec
jp
ja
addl
aaa
out
and
inc
xchg
mov
xchg
hlt
insl
mov
sub
movsl
je
imul
mov
orb
push
mov
xchg
mov
out
sub
cmpsl
movsb
bound
jnp
scas
dec
je
call
popa
inc
and
rol
aaa
rcr
mov
insl
inc
inc
lds
popa
lret
int3
sbb
gs
loop
hlt
pop
lods
repz
icebp
loop
xchg
cli
stc
mov
stc
in
or
mov
repnz
adc
push
negl
scas
movsb
int3
pop
add
ljmp
pop
xor
lcall
ljmp
jg
leave
bound
and
sub
adc
pushf
push
xor
sbbl
pop
scas
inc
arpl
dec
dec
add
lods
outsl
test
sarb
jge
jnp
js
addr16
cltd
arpl
insl
push
les
xchg
mov
imul
test
roll
xchg
and
inc
mov
dec
mov
xchg
xor
js
mov
pop
mov
imul
test
or
mov
fildll
rcr
mov
movsl
adc
ret
sbb
jno
fmuls
xchg
lahf
leave
xlat
testl
sub
das
inc
stc
pop
out
in
in
loope
test
in
push
inc
int3
lret
adc
cmpb
dec
sbb
decb
pop
add
add
in
or
pop
aaa
out
pop
popf
fnsave
icebp
ds
lret
or
cmp
mov
inc
and
xor
repz
pop
pushf
push
push
mov
ret
pushf
stos
pop
cmpsb
imul
adc
dec
and
mov
xchg
jnp
jns
out
out
stos
out
add
fldl
lahf
jb
xchg
pop
xchg
add
sub
lahf
pushf
mov
insl
stos
xchg
out
inc
test
dec
stos
addl
cmp
jno
jl,pn
mov
mov
mov
push
jbe
cld
scas
mov
stos
mov
dec
xlat
mov
shlb
sarl
fdivrl
cmp
push
lret
cmpsb
lods
iret
xchg
or
in
repnz
sub
mov
sub
daa
in
jecxz
loope
out
mov
in
mov
jl
aam
jmp
nop
xchg
and
xor
add
and
cmp
cmp
repnz
ds
sub
push
repz
fnop
and
and
das
in
call
push
outsl
fists
in
push
push
pop
rcrl
pop
pop
jne
mov
xchg
dec
lret
dec
scas
icebp
sub
push
data16
mov
jnp
movsl
lcall
outsb
test
insl
adc
scas
imul
add
lcall
test
pop
or
jns
xchg
lea
mov
add
scas
mov
mov
fs
xchg
or
movsl
adc
jg
test
or
aad
shll
ficomps
in
movb
fcmove
jl
mulb
lret
hlt
dec
repnz
lock
decl
sub
clc
xchg
es
in
or
add
xor
jmp
adc
jb
sbb
test
dec
or
pop
adc
add
sbb
cmp
xor
cmp
in
push
sbb
cmp
dec
jge
xor
sub
mov
push
mov
sarl
in
movsb
jmp
call
mov
xor
dec
pop
and
aam
dec
jae
jno
jg
xchg
js
mov
stos
push
bound
ja
pop
lods
push
xchg
fistl
pushf
sub
outsb
pop
cltd
das
xchg
sub
cmpsb
mov
xlat
mov
fidivl
cmp
mov
inc
lahf
push
aas
cmpsl
sub
es
and
jg
faddl
xchg
enter
and
mov
es
out
xchg
fimull
mov
pop
repnz
mov
imul
in
and
insl
push
push
out
in
addr16
adc
in
adc
push
adc
aaa
sbb
mov
les
add
enter
or
sti
or
aaa
pop
lret
xor
ds
fists
data16
mov
and
push
mov
sub
inc
cs
push
xchg
nop
push
push
or
pop
jl
pop
jno
cltd
lahf
out
inc
pop
and
dec
dec
imul
dec
fisubrl
jno
cmc
jl
jp
cmp
cmpsl
add
mov
add
insb
in
imul
inc
xchg
mov
setp
int3
push
mov
scas
cmp
mov
pop
jo
int3
shl
shrb
mov
lock
ret
and
out
lods
rsm
pop
push
cli
sbb
or
adc
jb
fadds
ret
jno
je
and
lret
rolb
sub
lock
movsb
std
sub
out
loopne
mov
xchg
and
jmp
loope
aas
mov
rcrb
push
push
incb
push
mov
xor
or
rorl
xor
cmp
fnstsw
shlb
or
iret
sub
xor
aas
mov
sbbl
sbb
inc
insl
inc
aad
js
dec
pushf
dec
fwait
ljmp
and
lea
add
inc
adc
repz
popa
mov
mov
imul
ret
mov
dec
inc
into
cli
test
pusha
ds
daa
filds
pop
mov
push
pop
enter
inc
xlat
mov
movsb
xchg
adc
fs
into
aam
rorb
rorl
sub
fisubrs
aas
lds
jmp
int
lret
fdivrs
fldt
icebp
mov
js
sbb
or
and
push
mov
ficoms
divb
in
pop
aad
popa
sbb
insl
fldt
imul
lods
fimull
ss
xor
testb
cmp
and
out
test
leave
sub
mov
push
bound
lods
pop
into
pop
add
movsb
pop
es
fs
mov
aam
inc
dec
dec
push
dec
js
je
mov
jge
push
shrb
xor
lock
js
outsl
or
pop
in
test
xchg
mov
in
sbb
mov
popf
xor
or
sti
mov
mov
xchg
lds
gs
inc
ljmp
adc
sbb
int3
dec
rcl
aad
ljmp
shl
lds
pop
fld
push
or
ljmp
sub
imul
clc
adc
out
and
test
testb
mov
pop
pop
jmp
fs
loop
data16
std
sub
pop
out
hlt
stc
add
aad
xor
aas
shll
aas
cmp
aas
fmul
cmp
xchg
add
dec
cltd
addr16
jnp
scas
sub
sub
push
in
or
sub
insb
adc
lods
xchg
cwtl
inc
je
fiaddl
ror
and
icebp
adc
jae
mov
jg
jge
jnp
in
addr16
bound
popa
pop
cltd
div
push
mov
xchg
dec
insb
cld
data16
adc
xchg
movsl
imul
mov
mov
jl
ss
inc
clc
mov
fimuls
movsl
jbe
mov
hlt
push
cmp
aad
shlb
fucomip
fucom
fstps
les
add
sub
cmp
push
and
cld
jmp
out
movsb
in
jecxz
loope
out
cmp
jne
das
jmp
in
ret
adc
mov
sbb
jge
cmp
xchg
repz
dec
or
xor
ds
adc
push
cmp
es
sub
subl
icebp
push
push
fs
pop
negb
sub
pop
lret
gs
leave
inc
xchg
xor
mov
jae
andl
jg
mov
lcall
jne
mov
push
gs
push
xchg
daa
aas
xchg
loop
addl
cltd
inc
xchg
sbb
cs
adc
mov
icebp
out
mov
xorb
mov
xlat
xlat
outsb
mov
push
jne
and
push
stos
stos
mov
aad
and
in
das
fisttpll
les
adc
lods
dec
lret
dec
push
loop
div
mov
lock
dec
sti
das
cmp
out
push
adc
pop
loope
fucomp
adc
mov
mov
adc
adc
or
movsl
les
imul
mov
push
cmc
ss
mov
add
das
cmp
cmp
addr16
cs
sub
mov
and
lret
push
aad
insb
pop
lret
fs
ret
xlat
inc
std
fisttps
fimuls
andl
int3
inc
cmpsb
jle
jl
jg
dec
data16
gs
sub
outsl
insb
xchg
and
movsb
xchg
in
mov
lahf
pushf
sub
xchg
mov
mov
rcrl
enter
mov
mov
das
lods
in
stos
jnp
test
or
shrb
filds
mov
ret
and
imul
ds
add
push
mov
in
icebp
add
clc
jge
rorl
orl
out
bound
out
imul
sbb
push
sbb
hlt
sbb
add
push
add
imul
or
pop
aaa
popa
aam
clc
push
imul
loopne
xchg
daa
push
and
das
repz
pop
cmp
push
gs
cmp
pop
pop
cmp
sbb
pop
add
mov
dec
shrb
sahf
je
mov
mov
jle
sbb
js
cmp
ss
arpl
popa
sbb
out
or
xchg
xchg
push
dec
sub
pushf
popf
sbb
cwtl
repnz
xchg
cmpsl
mov
hlt
jns
out
std
sbb
insb
notb
mov
cmpsl
bound
sbb
lods
adc
or
pop
sub
dec
je
fstpl
or
push
rcrb
inc
sbb
enter
dec
cmc
xor
icebp
fdivrp
or
bound
jecxz
loope
pop
mov
add
adc
sbb
sbb
fiaddl
loop
or
xchg
or
out
xor
mov
sarb
pop
cmp
and
and
sbb
and
sub
push
clc
rol
push
inc
push
imul
inc
rcl
jnp
inc
sub
rorl
decb
test
jb
push
aad
jl
jp
adc
addr16
pushf
dec
cmp
push
pop
fbld
jl
dec
jecxz
pop
add
push
int
mov
inc
cmp
sbb
lret
push
stos
in
mov
fbstp
mov
loopne
or
mov
sbb
mov
scas
lods
dec
test
pushf
and
rclb
add
push
xchg
popf
movq
imul
push
jp
mull
das
mov
sub
and
lahf
cmp
sub
xchg
mov
push
nop
call
adc
adc
dec
sbb
dec
dec
imul
enter
or
or
push
jge
pop
mov
ds
lock
loope
and
imul
out
push
sub
mov
imul
pop
les
inc
bound
out
dec
cmpsb
int3
loop
xchg
dec
dec
cwtl
popf
dec
jne
dec
pop
cmp
fstpt
gs
fnstcw
data16
out
popa
jge
pop
std
push
push
ja
push
nop
jl
ja
popf
int3
fwait
nopl
test
mov
pop
ss
mov
fidivs
mul
insb
mov
push
sbb
mov
scas
and
xlat
and
lock
xchg
ja
fucomp
ret
outsl
push
sbb
test
jnp
iret
aaa
int
cmpsb
enter
cwtl
xor
repz
dec
pushl
push
out
cmpsb
and
and
loope
out
cwtl
in
or
cmpsb
adc
int
out
mov
push
xchg
add
add
or
xor
xor
cmp
inc
sub
out
inc
and
and
hlt
push
sub
push
sbb
popf
push
xor
mov
cmp
inc
push
xchg
inc
mov
roll
inc
dec
mov
lcall
jg
bound
scas
jns
addr16
arpl
push
mov
insl
push
fists
cwtl
xchg
in
pop
xchg
std
sahf
movsb
repz
jp
ljmp
xor
jb
inc
pusha
mov
xchg
cmp
xlat
mov
push
movsb
int
inc
cmpsb
mov
stos
das
test
cmpsl
pop
aam
adc
pop
rol
outsb
and
push
push
fadds
ret
sbb
aad
cmp
mov
cmc
inc
mov
add
cli
and
mov
out
icebp
gs
jmp
mov
sbb
adc
push
dec
test
ret
aas
ds
pop
gs
dec
inc
insl
dec
or
test
xorl
xor
cmp
sub
and
inc
sbb
sub
loop
jmp
pop
nop
pop
jl
ret
inc
scas
inc
jle
xchg
call
dec
jb
xchg
mov
xchg
lret
jno
jg
dec
jne
jne
cli
addr16
popa
sub
outsl
push
cmp
sbb
jns
in
fwait
mov
jnp
fs
push
mov
xorb
dec
mov
mov
inc
shlb
bound
scas
pop
mov
movsl
shlb
neg
lods
cmp
test
jnp
aam
rcl
push
rorl
sti
sub
sub
adc
mov
into
adc
enter
inc
mov
std
int3
jbe
sub
out
dec
loop
adc
rcll
xchg
pop
mov
adc
mov
sbb
push
cmp
int
push
leave
prefetch
dec
lods
into
aaa
jne
mov
xchg
popa
cmp
aas
out
daa
mov
comiss
mov
popa
push
xchg
push
dec
push
lahf
fldl
and
stos
push
pop
adc
dec
out
or
xor
nop
jno
jg
or
jnp
jbe
jae
xor
inc
outsl
mov
movsb
repz
push
xchg
xchg
mov
pushf
jo
fwait
mov
adc
sbb
mov
insb
mov
ja
jns
sti
mov
cmp
gs
ret
and
xchg
mov
stos
push
test
cmp
aam
stos
push
daa
data16
fbstp
inc
ljmp
hlt
ret
outsb
daa
into
loope
fcmovbe
lret
adc
xor
inc
add
jne
pop
pop
std
jbe
clc
sbb
imul
dec
stos
loope
movsl
fiadds
insl
push
call
adc
sub
aad
sbb
testb
push
cmp
test
or
jns
or
adc
ds
cmp
subb
mov
adc
sub
fidivl
cmp
push
into
jecxz
pop
pop
sub
adc
inc
adc
dec
jo
add
lret
lcall
jb
and
jle
inc
daa
push
or
add
mov
fildll
cltd
insl
out
push
dec
xchg
push
mov
sahf
lahf
jg
lcall
in
push
test
mov
mov
mov
jnp
mov
xor
inc
and
movsb
movsl
btc
pop
scas
sahf
lods
lods
pop
stos
fwait
sub
cmpsb
shll
sbb
push
dec
sbb
cmpsl
push
rorl
imul
imull
cmc
lcall
push
sti
sahf
xchg
ret
lods
outsb
loop
in
pop
mov
xchg
out
sub
xor
nop
sbb
mov
int3
add
pop
outsl
or
or
push
xor
ds
iret
or
cmp
jne
in
cs
or
dec
sub
stos
push
into
push
add
jb
jno
pop
and
push
lock
inc
leave
inc
jnp
and
dec
add
xchg
mov
jae
dec
gs
ljmp
fs
stos
pusha
sub
mov
lock
xchg
xchg
jecxz
ljmp
jle
push
cltd
or
mov
mov
push
cltd
mov
add
mov
jne
push
xchg
in
in
test
mov
jle
pop
lods
cmpsb
or
aam
xor
xchg
out
aam
ret
aaa
leave
adc
imul
mov
icebp
mov
push
popa
jge
adc
pusha
in
sub
cmp
in
adc
cmp
mov
adc
adc
pop
sbb
cmp
add
inc
movntps
mov
xchg
leave
aaa
aaa
leave
movsl
lret
inc
cmp
aaa
lods
cmp
ljmp
cs
cmpsl
pop
clc
sub
mov
mov
pop
gs
xchg
pop
sbb
jo
inc
push
inc
inc
jns
dec
jb
jecxz
jecxz
ja
lahf
mov
leave
pop
jg
push
stos
lock
cmp
popa
lret
sub
inc
stos
dec
fmull
xor
jae
outsb
test
adcl
outsl
inc
idivl
and
sbb
mov
mov
repz
in
mov
pop
mov
xchg
jnp
test
pop
xor
mov
fadd
xor
add
insl
imul
sahf
pop
int
mov
bnd
push
lock
cld
cld
cmp
clc
inc
jbe
mov
loope
xchg
ss
gs
jmp
arpl
dec
jmp
add
int
add
add
orb
or
xor
das
stos
jecxz
cmp
cmp
sbb
sub
fcomp
sub
sub
fsts
jo
push
leave
jp
pop
dec
notb
jns
adc
cmp
test
dec
dec
pop
dec
push
pop
jne
jae
jno
mov
or
cmpsb
lds
jno
outsl
subb
nop
xchg
lcall
jns
cmpsb
cwtl
in
inc
xchg
test
bound
mov
mov
bound
ss
in
mov
dec
mov
lods
and
in
mov
aad
rcl
dec
lds
fsubrl
push
lock
sub
mov
decb
pop
leave
iret
test
xchg
repnz
xchg
mov
push
pushf
mov
popf
jae
xor
loopne
loopne
inc
in
aaa
jae
scas
dec
movsb
mov
pop
stc
add
xor
sbb
pop
adc
add
adc
ss
test
ds
xor
cmp
cmp
xor
test
sbb
movsl
adc
xchg
push
arpl
push
push
mov
repz
dec
or
inc
out
cwtl
pop
daa
inc
inc
lret
dec
and
dec
testb
ja
cmp
jae
jno
xlat
xchg
aad
jnp
mov
add
ds
popa
xchg
sub
push
xchg
sub
hlt
sahf
je
stos
push
lock
xchg
test
jb
mov
and
sub
movsl
mov
mov
and
pop
pop
xlat
popf
mov
jecxz
mov
fcmovu
sarb
and
fwait
mov
xchg
lret
mov
je
xrelease
mov
adc
movsl
jle
jp
xchg
loopne
shr
ljmpw
adc
adc
mov
insl
cwtl
sbb
int3
cmp
add
mov
or
sbb
iret
xor
cmp
iret
inc
adc
xchg
and
inc
sub
push
nop
nop
push
pop
mov
mov
pop
out
ret
scas
jp
xchg
xor
inc
mov
dec
int
sub
jbe
dec
jne
loop
cmp
mov
std
jnp
jns
mov
adc
cmp
mov
add
test
inc
out
xchg
ret
popf
notl
aaa
stos
dec
sbb
addl
mov
mov
mov
loopw
jns
pop
bound
pop
cmpsb
outsb
pop
push
or
mov
mov
adc
mov
cmpb
jle
loope
outsl
out
push
push
ret
rolb
imul
mull
cmp
fcomp
or
dec
sbb
loope
adc
shr
push
ljmp
sub
rcll
pop
sbb
sbb
nop
aas
add
xor
fs
ss
adc
xor
ficomps
js,pt
movsb
pop
dec
xor
sub
imul
sub
pop
pop
mov
dec
fnsave
pop
push
ljmp
push
pusha
inc
roll
cmp
dec
dec
dec
and
inc
and
jg
jge
mov
fs
outsb
xchg
fisubrl
mov
xchg
sbb
jnp
pushf
popf
mov
cwtl
fildl
xor
sbbl
adc
mov
shll
iret
pop
mov
inc
cmpsb
or
push
cmp
adc
lret
sbb
or
dec
cmc
rcl
sub
fisttpll
lcall
fsts
mov
push
mov
mov
push
das
decl
in
lret
cltd
fs
dec
jecxz
loope
inc
xchg
fimull
xchg
adc
adc
adc
xor
add
scas
push
add
fidivl
fwait
popf
xor
leave
add
cmp
mov
daa
fldt
cld
and
call
int3
push
push
push
mov
push
pop
pop
pop
ds
pop
inc
mov
loope
inc
inc
inc
orb
dec
daa
shlb
xlat
fs
jb
pop
jno
xor
insb
int3
and
lret
outsb
ds
icebp
jecxz
movsl
xchg
test
notl
lahf
pushf
push
lcall
test
in
mov
mov
mov
cmp
mov
mov
xor
or
pop
test
ror
dec
xchg
fsubl
fldt
xchg
mov
push
into
sahf
das
fldl
xor
dec
pop
js
cmp
sahf
stc
push
push
std
in
jecxz
loope
out
sbb
mov
mov
loopne
mov
sbb
leave
xor
fimull
ss
test
xor
lret
jmp
daa
shlb
cs
sbb
jmp
push
rclb
push
dec
cltd
movsb
scas
dec
pop
pop
pusha
icebp
out
jbe
popf
jbe
inc
and
dec
jns
dec
dec
dec
mov
inc
push
jb
jne
mov
xor
jns
push
pop
gs
arpl
popa
in
loop
mov
sbb
add
mov
std
cltd
jno
jo
addb
push
push
mov
mov
mov
mov
stos
mov
xchg
xor
jle
scas
scas
inc
or
mov
jo
jno
in
rolb
fcmovnbe
and
inc
in
shr
mov
jnp
lret
sbb
pop
shl
repz
jmp
mov
and
movsb
in
and
dec
loope
jbe
ljmp
out
xchg
adc
sbb
and
out
addb
xchg
or
cld
aaa
jo
ljmp
inc
bound
cmp
jg
push
jle,pn
add
popf
sub
push
adc
loope
nop
push
mov
and
inc
inc
mov
dec
cltd
sub
hlt
ja
dec
jb
jo
loop
jl
and
jns
mov
pusha
testl
xchg
xchg
test
shrl
stc
lcall
clc
adc
jp
adc
mov
mov
mov
xchg
stc
addr16
mov
push
movsb
xchg
mov
mov
or
jbe
push
xlat
push
aad
das
dec
mov
pop
cmp
fldcw
sbb
ret
test
sbb
leave
pop
jnp
stc
scas
repz
jl
pusha
cld
or
sti
jg
push
aas
add
insb
sarl
out
mov
in
repz
call
mov
ljmp
mov
mov
and
aam
jns
or
or
addl
std
xor
enter
es
cmp
xlat
fcoms
mov
out
inc
push
outsl
push
push
fists
jae
addr16
and
inc
mov
fidivrl
aam
dec
rcrb
jb
push
shrl
dec
data16
cmp
pusha
fwait
outsb
mov
lds
insb
xchg
xchg
popa
xchg
xchg
mov
sbb
in
sbbl
mov
xor
sbb
push
mov
mov
mov
mov
out
pop
bts
out
stos
sbb
fldl
sub
loop
fsubrs
ret
inc
into
or
int
mov
hlt
xchg
repnz
pop
das
decl
repz
inc
or
push
jecxz
call
ljmp
adc
sub
sbb
pusha
push
add
sub
add
push
into
push
mov
out
xor
xlat
pushf
mov
cltd
sbb
or
mov
xor
fstps
subl
push
pop
pop
mov
adc
pop
lahf
pop
mov
das
inc
shrl
leave
inc
addr16
dec
mov
jbe
shlb
jb
scas
xchg
lods
jge
mov
bound
mov
stc
push
pop
outsb
mov
cmpsb
xchg
xchg
insb
jp
nop
mov
jne
movsb
pop
xchg
fs
sbb
adcl
mov
mov
mov
sbb
dec
insb
loopne
jl
sub
mov
test
not
aam
rcl
outsb
ja
fdivrl
aam
adc
pop
mov
jg
jns
xchg
lret
fs
mov
mov
cmpsb
sti
mov
out
lods
in
jnp
repz
adc
jmp
icebp
adc
test
sbb
pop
cmpsb
add
dec
stos
or
fstpl
or
ss
test
fdivl
lret
cmp
cmp
ss
cmp
add
and
dec
sub
push
into
in
cmp
pop
ficompl
out
and
inc
inc
xchg
dec
inc
movsb
jae
leave
jb
push
jne
push
jo
xor
push
js
out
daa
cmp
jmp
sub
pop
or
loope
xchg
xchg
sahf
lahf
das
add
xchg
test
pop
lock
sub
or
mov
jnp
repnz
jb
pcmpeqb
mov
mov
xlat
out
inc
lcall
and
fwait
jecxz
lods
add
lds
shlb
int3
fs
push
hlt
push
bnd
icebp
and
mull
xchg
clc
jle
out
push
push
adc
imul
pop
arpl
rolb
ja
call
dec
xor
add
subl
aam
divb
lds
add
mov
cmpsb
fwait
xor
jge
fisubs
add
and
test
sub
pop
out
ds
push
push
push
sub
lds
pop
cltd
inc
and
call
xor
cld
sub
jne
inc
sub
movsb
clc
jnp
jnp
push
inc
gs
insb
out
bound
pop
xchg
mov
xchg
push
lahf
pushf
push
lcall
filds
pop
sbbl
sub
jl
mov
mov
mov
mov
mov
pop
sub
aaa
movsl
inc
loopne
mov
gs
test
mov
push
aad
roll
fidivs
fsubs
sub
pop
test
sarl
sub
andb
neg
cmc
and
cmp
sub
in
pop
jecxz
jbe
push
nop
in
ljmp
push
cmpsl
icebp
pushw
pop
jbe
sbb
sbb
mov
in
sbb
or
or
or
es
lea
lods
mov
jns
aas
fs
daa
cmp
cmpsb
and
stos
xchg
sub
sub
push
push
mov
jmp
push
pop
pop
mov
into
inc
sbb
push
dec
mov
cmp
dec
mov
jge
or
data16
stos
pusha
mov
outsl
ret
mov
imul
icebp
popf
inc
movsl
cmp
add
or
xchg
push
loop
push
lea
push
xor
outsb
mov
mov
adc
sub
lods
xchg
mov
sub
push
test
imul
mov
fdivrl
fldt
loope
ss
cltd
cli
xchg
ljmp
xchg
div
mov
fdiv
xchg
push
jnp
stos
sbb
jns
dec
dec
jae
lds
aam
xchg
aas
dec
jmp
adc
mov
sbb
jecxz
rolb
cmp
or
xor
lcall
or
mov
stos
les
sbb
rclb
je
sbb
test
adc
out
insb
add
movsb
cwtl
test
pop
push
jmp
pop
adc
adc
inc
add
lods
dec
out
dec
rclb
fs
mov
inc
jnp
xchg
adc
popa
pusha
fsubrl
mov
pop
mov
popf
inc
xchg
rclb
jecxz
sub
xor
push
js
adc
mov
mov
and
xchg
jmp
xchg
and
lahf
jae,pt
xor
cmpsl
popa
inc
arpl
nop
imulb
add
aad
aam
rcrb
shlb
adc
cmp
es
fldcw
clc
xor
add
ds
push
std
sub
movsb
repnz
lock
clc
dec
in
jnp
outsl
jmp
loop
in
data16
js
pop
ljmp
lahf
sbb
bound
or
cwtl
add
arpl
in
movq
aam
xor
inc
push
enter
pop
cmp
sbb
aaa
and
push
push
imul
push
andnps
push
push
push
push
ljmp
test
repnz
pop
fwait
adc
inc
pop
jb
jo
jnp
jl
jp
js
enter
bound
and
popf
insb
insl
dec
mov
imul
push
call
data16
xor
push
sbb
mov
in
pop
adc
mov
mov
js
int3
bound
mov
push
mov
dec
lods
cmpsb
pop
mov
aad
shll
rorl
xorl
les
pusha
jl
or
lret
in
imulb
aaa
scas
lock
push
hlt
cli
cli
adc
jnp
push
xchg
sub
gs
adc
adc
adc
sbb
popf
dec
sbb
xchg
lock
mov
ror
test
xor
je
ret
loop
int
idivb
es
mov
mov
in
push
std
push
pusha
in
push
imul
inc
adc
inc
fsub
mov
dec
test
dec
in
je
ret
stos
inc
mov
testl
imul
push
loope
test
xchg
adc
test
lcall
test
mov
mov
xchg
je
add
add
mov
pusha
jp
push
mov
cmp
je
pop
xlat
mov
gs
es
faddl
call
adc
mov
stos
int
push
push
lcall
lock
into
clc
push
xor
mov
aas
sbb
call
jge
adc
sbb
and
stos
lret
add
add
lret
xchg
fisubl
and
jle
xchg
xor
gs
cmp
jae
lahf
and
xchg
das
mov
jno
mov
pop
aaa
push
or
pop
pop
aas
lock
pop
cmp
sbb
sub
clc
dec
insb
idivl
jae
add
xor
sub
outsl
icebp
pop
mov
outsb
sub
xchg
inc
lahf
xchg
sbb
jp
test
xchg
xor
push
scas
adc
mov
mov
mov
icebp
mov
lock
outsl
movsl
cmp
repz
cmpsb
test
fnstenv
aam
xchg
and
pop
out
fcmovu
xor
rclb
xor
iret
hlt
int
pop
enter
hlt
sbb
push
lock
mov
cld
std
lods
test
xor
pop
mov
cmp
mov
adc
adc
orb
pop
jae
sbb
cli
prefetch
or
or
ss
jp
xor
pop
addr16
sbb
adc
jno
and
and
or
cmp
push
xor
or
pop
jg
arpl
sub
daa
loopne
jbe
adc
sub
in
xchg
data16
jnp
jns
addr16
cmp
insb
xchg
push
sti
rclb
xchg
shlb
sbb
lcall
arpl
mov
lods
jle
fldl
add
mov
jmp
addr16
movsl
movsl
adc
pop
ja
scas
aaa
pop
pop
pusha
test
sub
xlat
jns
jb
fcoms
cmp
mov
repnz
adc
leave
div
test
pushf
push
std
sub
popa
stc
out
jo
xor
loopne
sbbb
in
ljmp
cmpsb
jb
sbbb
loope
sbb
jmp
sbb
mov
or
aas
xor
adc
dec
pusha
sti
test
daa
sbb
mov
fldt
pushf
aad
mov
cmp
lcall
or
lret
inc
push
mov
dec
lds
daa
int3
jg
jno
push
push
jo
pop
jg
bnd
sub
data16
fs
btr
outsl
cmp
xchg
cmpsl
or
nop
mov
lcall
addb
push
dec
mov
aam
and
mov
mov
movsb
movsl
and
mov
and
test
mov
cmp
mov
mov
inc
lret
add
cmc
lret
lcall
inc
ss
shrb
aas
out
sub
ja
call
into
inc
jge
out
ljmp
lahf
test
add
inc
aas
and
cmp
dec
shlb
push
ds
pushf
cmp
mov
and
cs
pop
hlt
sub
mov
jo
cwtl
pop
jg
pop
xor
inc
mov
adc
mov
add
sti
cmpsl
mov
mov
jge
jnp
adc
pop
shlb
xlat
jo
insb
mov
inc
xchg
rclb
mov
cmc
popf
push
sub
call
xlat
subl
mov
fwait
mov
sbb
mov
pop
orb
adc
cmpsl
mov
scas
cmpsl
scas
lods
mov
ja
push
xchg
aad
in
roll
sub
aad
mov
fld
out
vmaxss
test
inc
enter
test
repnz
cld
sbb
sti
clc
daa
out
adc
cmpsb
inc
js
or
jmp
out
cwtl
lret
jnp
adc
prefetch
mull
rolb
insl
sets
or
and
or
fnstsw
pop
bound
icebp
and
mov
and
sub
into
mov
pop
mov
pop
xor
and
mov
das
lds
dec
jmp
jge
aaa
je
mov
xchg
jmp
mov
xor
cld
push
push
testb
adc
ret
xchg
std
mull
rorl
popf
rcl
cwtl
movsb
xchg
and
push
int3
mov
mov
sub
mov
mov
shrl
mov
jg
in
xor
aaa
jne
stos
stos
or
shlb
shll
or
fdivs
shr
das
fmul
lret
cmp
idiv
out
ljmp
std
in
out
jp
rcr
loop
jge
push
aaa
sbb
test
repnz
sahf
push
jb
dec
jg,pt
sbb
cmpsl
xor
cmp
cmp
or
lahf
out
xor
sub
popf
cmp
es
and
dec
and
dec
je
mov
jge
out
stos
push
add
push
adc
pop
push
pop
hlt
stos
pop
mov
mov
imul
movsb
loope
incb
sbb
jle
dec
lods
scas
mov
ret
or
add
insb
aad
shll
xchg
xchg
cmc
adc
xchg
das
pushf
add
xchg
adcb
movsb
inc
lea
mov
int3
mov
mov
lods
mov
lret
or
mov
movl
out
aam
in
movsb
sub
add
sub
mov
shll
enter
inc
ret
repnz
dec
push
decb
mov
ds
push
imull
ss
mov
js
cli
ret
imul
cmp
icebp
push
add
or
xor
or
aaa
cmpsb
mov
lret
xor
or
pop
rcl
cmp
jle
and
adc
sub
sub
sbb
mov
pop
pop
xor
or
inc
out
inc
jae
dec
dec
pop
jecxz
jb
or
cmp
ss
jnp
icebp
das
mov
and
adc
insb
loope
lds
xchg
sbb
nop
xchg
pop
sahf
and
xchg
push
mov
add
insl
cmpsb
lea
aaa
or
sub
jo
dec
mov
inc
repz
pushf
idiv
xchg
push
dec
mov
cld
je
jbe
je
inc
popf
mov
push
fstps
mov
rcl
or
lret
or
mov
repz
xor
sar
stc
mov
cld
into
loop
loopne
jae
in
in
xlat
jmp
aas
jl
lret
lret
adc
mov
ss
sbb
jbe
add
mov
push
orl
sbb
andl
push
push
fists
inc
popf
cmp
inc
mov
and
jl
das
lds
sub
dec
adc
push
adc
cmp
jne
xchg
bound
sub
scas
adc
cmp
lcall
jnp
ja
jne
jbe
comiss
push
mov
push
xchg
ljmp
insb
sub
xor
sbb
out
and
call
lcall
push
sbb
pop
out
mov
pop
push
mov
mov
imulb
mov
mov
popa
movsl
mov
scas
std
mov
jecxz
insl
dec
sbb
mov
mov
and
mov
jae
leave
jl
fdivp
js
lock
sub
std
cli
cmp
lahf
adc
loopne
mov
adc
hlt
adc
les
adc
add
add
inc
out
dec
add
or
out
aam
xor
jo
xor
es
and
and
rcrl
jb
dec
push
push
cmpsb
push
pusha
push
pop
push
repz
out
pop
jecxz
pop
push
push
je
inc
push
inc
inc
insb
arpl
dec
sbb
scas
mov
jo
jle
ds
jp
mov
rorl
insb
insl
dec
lods
push
xchg
enter
sahf
lahf
inc
fs
fwait
mov
inc
mov
pop
js
xchg
mov
int3
cmpsl
ja
test
lcall
mov
test
subl
sarl
pop
sbb
mov
pop
inc
clc
sbbb
into
cmpsl
or
ljmp
xor
adc
jp
in
inc
mov
out
sti
jns
call
xor
loope
mov
in
xchg
cmp
aam
cltd
mov
cmp
sbb
mov
or
push
das
dec
or
lret
aaa
jecxz
xor
lcall
cmp
sub
test
and
dec
sub
sub
sub
push
jmp
push
xchg
inc
inc
pop
test
mov
inc
push
inc
adc
inc
inc
xchg
mov
mov
fdivs
xchg
cmc
testb
std
jns
addr16
add
outsl
fsubrl
push
pop
xor
xchg
nop
aam
lahf
arpl
push
fildll
loope
jp
data16
fisubrl
push
xor
mov
mov
cmp
cmpsl
xor
scas
ficoms
jmp
repnz
xchg
fwait
mov
mov
stos
fidivrl
repnz
xchg
mov
hlt
div
sbb
cltd
cld
cli
cmpsl
clc
mov
ret
jecxz
loope
out
or
jmp
test
aaa
adc
push
push
sbb
xor
enter
push
add
out
mov
rorl
or
xchg
rdmsr
xorb
test
adc
addr16
and
and
loope
cs
sub
push
push
sbb
push
pop
inc
pop
jmp
pop
jnp
inc
or
inc
shll
add
dec
pop
add
cmp
jb
aas
sub
xor
jp
aaa
adc
sub
bound
in
sbb
daa
sbb
xchg
fcoml
ds
aam
and
int3
subl
mov
mov
mov
pop
push
mov
mov
mov
hlt
arpl
cmpsl
call
dec
or
in
xlat
push
aad
rcrl
jle
xchg
mov
retw
mov
push
or
lret
test
push
idivl
icebp
pop
pushl
stc
inc
or
mov
dec
sbb
pop
adc
sbb
sbb
rorb
cmpsb
add
or
or
add
ds
cmpb
nop
and
and
das
inc
sub
mov
push
adcb
mov
adc
pop
push
pop
mov
inc
push
inc
mov
dec
out
je
shlb
jae
jno
jg
jge
jnp
jns
loopw
pop
arpl
sbb
insl
pop
imul
fcoml
jbe
les
outsb
cltd
in
xchg
loopne
inc
xor
mov
les
mov
cmp
mov
repz
xchg
movsl
or
stos
lods
adc
aam
insb
ror
rcr
or
fdiv
movb
cmp
enter
hlt
sti
repnz
idiv
adc
clc
std
in
loop
loopne
out
in
xor
fld1
aas
pop
jge
xchg
adc
adc
pop
ds
push
pop
push
add
mov
or
test
inc
xor
mov
cmp
mov
pushf
and
cs
sub
sub
dec
push
in
loop
or
pop
pop
fistpl
inc
inc
clc
inc
pop
add
inc
pop
dec
lock
push
jl
xchg
push
jbe
je
jb
jo
jle
mov
les
out
sahf
jp
fsubl
push
aam
jbe
sub
js
pushf
addb
push
cmp
mov
mov
mov
mov
add
ljmp
add
cmpsb
cmpsb
sbb
das
scas
mov
adc
mov
push
ror
fisubs
rcr
fadd
jnp
fld
ret
jb
cwtl
iret
movsl
int
lret
jb
mov
repz
icebp
sar
std
int3
sti
and
enter
lock
push
in
cld
jmp
jmp
sbb
sbb
sbb
sbb
push
icebp
add
add
add
push
jmp
or
ss
pop
xor
cmp
cmp
cmp
es
and
and
sub
sub
push
daa
push
lds
pop
ficomps
aad
cmp
inc
das
inc
cmp
icebp
dec
push
dec
cmc
dec
imul
outsl
jae
ret
jle
jl
jp
js
sub
and
insb
mov
xchg
mov
nop
pop
sahf
sbbl
orb
mov
fwait
mov
mov
mov
mov
mov
gs
int3
mov
popa
lods
adc
aam
shlb
mov
jno
lahf
fidivrl
xchg
pop
les
into
dec
int3
mov
inc
enter
hlt
lahf
repnz
in
decl
call
out
in
jecxz
push
out
mov
sub
pop
adc
enter
les
sub
add
xorl
adc
aam
cmp
cmp
ret
daa
xchg
and
lret
das
lods
pop
sub
lret
push
mov
push
push
and
pop
xchg
out
pop
pop
lcall
inc
repnz
decl
leave
cmp
ja
jb
ljmp
jnp
lret
data16
bound
shrb
insb
fisubrs
push
loopne
xchg
repnz
lahf
cs
ss
ret
mov
push
mov
push
mov
xor
mov
mov
mov
inc
mov
scas
push
stos
stos
push
sbb
xlat
es
cmp
fistps
fcmovu
cmp
push
jbe
ret
adc
iret
push
jle
lret
or
testl
mov
sti
jns
out
inc
push
loop
jp
out
out
jle
ljmp
out
mov
adc
mov
sbb
cld
lds
add
xchg
sbb
xchg
and
inc
xor
testb
sub
xchg
mov
and
lahf
jae
sbbb
push
sbb
push
push
shrb
pop
pop
lahf
in
push
pop
insb
icebp
adcb
pop
push
and
clc
pop
dec
scas
pop
xchg
ret
mov
es
push
push
adc
cmpsb
jno
xlat
mov
fistl
insl
fildll
in
xchg
xchg
sbb
mov
jmp
insl
popf
lcall
dec
andb
add
arpl
je
mov
mov
and
and
jbe
xchg
mov
outsb
xlat
rcl
mov
jecxz
arpl
push
jg
mov
pop
ja
aad
jae
enter
arpl
int
lahf
icebp
std
push
imul
sti
clc
shl
scas
cmp
gs
sub
mov
sub
fcomps
out
inc
orl
add
or
inc
sti
mov
xor
lea
adc
and
imul
xor
and
loop
push
nop
jmp
lds
lock
push
inc
hlt
inc
push
dec
cmp
clc
pop
jbe
mov
gs
jl
sub
sarb
je
fisubl
scas
mov
adcb
test
sub
mov
fwait
pop
dec
pop
xchg
lahf
cmpb
lea
mov
mov
or
mov
adc
mov
loope
lods
mov
cltd
or
rcl
xchg
cmp
fstl
out
lds
iret
out
push
cmpsl
jae
shl
dec
adc
adc
sar
add
cli
inc
jae
cmpsl
pop
xor
into
je
clc
out
inc
pop
jo
lock
adc
inc
pop
or
movmskps
pop
repz
aam
dec
add
mov
or
xor
push
loop
mov
cmp
test
arpl
or
sub
sub
push
mov
rclb
negl
mov
inc
pop
inc
test
test
inc
xor
dec
dec
push
shl
insl
sub
fistl
xor
sarl
dec
jns
adc
lret
xchg
arpl
mov
inc
fists
xchg
dec
daa
lods
in
lods
out
lahf
cmp
jmp
add
or
iret
jmp
mov
imulb
mov
stc
adc
out
movsb
in
mov
scas
inc
lods
cli
stos
mov
push
xlat
out
rclb
inc
pop
or
mov
push
fldt
adc
iret
cmp
dec
mov
pop
shlb
cld
and
sti
dec
or
negb
icebp
cli
out
in
xchg
ljmp
adc
mov
or
lods
lea
inc
mov
push
xor
push
or
xor
cs
outsb
cmp
mov
cmp
push
push
pop
loopne
push
xchg
pop
daa
pop
mov
sbb
inc
in
inc
push
jnp
mov
add
jbe
je
jb
aas
jno
jae
inc
fidivrs
loopne
sub
pop
arpl
popa
jne
aaa
pop
sbb
mov
sub
sahf
xchg
and
xchg
out
test
cmp
popl
lea
jb
mov
lods
push
sbb
mov
in
inc
jne
call
test
pop
popf
aad
ja
les
lcall
movl
or
insl
hlt
inc
add
sti
inc
aad
cld
dec
jle
clc
stc
jmp
mov
or
out
scas
ljmp
fidivrs
sbb
sbb
inc
leave
stos
jns
frstor
pop
dec
arpl
xlat
test
jno
xchg
cmp
in
cmp
dec
and
sub
enter
push
out
daa
or
xor
std
inc
pop
adc
dec
call
jmp
shr
scas
movsb
jb
call
bound
jmp
sub
mov
and
popa
xchg
mull
fsincos
aas
inc
aad
outsb
cwtl
aad
push
test
mov
mov
mov
mov
mov
or
mov
decb
movsb
in
mov
add
stos
dec
test
gs
shrl
lret
or
jp
fnstenv
rorl
push
aam
jp
fadd
jle
aas
fs
mul
popf
inc
inc
in
dec
push
cld
mov
aas
icebp
in
push
cmpsl
out
hlt
stc
push
pop
cmp
mov
sbb
ja
xchg
sbb
lods
add
push
rsm
inc
or
or
xor
xor
jle
xlat
add
and
mov
rcll
push
cmpsb
push
and
sbb
aaa
inc
imulb
mov
inc
inc
inc
sbb
jae
dec
dec
mov
repnz
dec
jbe
and
mov
fs
pop
mov
inc
jp
pusha
cmp
cmpsb
xchg
insl
push
imul
sbb
adc
stos
xchg
test
mov
pop
fmull
mov
xchg
hlt
mov
mov
mov
mov
inc
lods
push
mov
movsl
sub
and
sub
fcmovnbe
aad
pop
pop
push
mov
pop
insb
cmc
jns
ret
dec
ror
fildl
lret
testl
jb
mov
clc
cld
jl
enter
data16
pop
call
call
pusha
testb
push
pop
or
xchg
adc
cwtl
fcompl
add
add
ss
fistpll
or
inc
xor
mov
fwait
daa
and
and
sub
jmp
adc
push
rcrb
jne
fwait
pop
aam
jecxz
pop
inc
inc
inc
xchg
lret
mov
mov
jp
adc
out
sahf
push
adc
mov
cmp
aaa
jmp
ret
out
inc
dec
test
xchg
mov
shrb
cmp
push
jmp
jge
test
mov
repnz
into
call
push
jmp
push
iret
pushf
dec
cmp
shl
cmp
push
icebp
xchg
mov
adc
icebp
das
xchg
bound
cmp
movsb
add
xchg
pop
jl
xchg
pop
mov
in
subl
lods
jle
repz
or
mov
mov
lret
jno
lret
fstpt
into
je
sti
mov
jg
xlat
insb
jnp
mov
std
divl
pop
stc
outsb
out
mov
movl
and
testl
cld
imul
cmp
or
jecxz
mov
daa
negl
and
pop
add
lahf
xchg
daa
divl
push
das
jmp
fwait
dec
inc
sub
push
adc
test
jecxz
dec
lock
fwait
cmp
xor
push
cmp
arpl
cld
sbbl
mov
and
arpl
xchg
repz
iret
out
xchg
aas
scas
je
icebp
imul
pop
jb
push
icebp
hlt
sub
adc
xchg
and
pop
mov
pushf
unpcklps
pop
adc
mov
je
fldcw
and
lahf
or
lcall
mov
scas
dec
mov
cli
jb
std
pop
xchg
cmp
mov
loopne
ljmp
push
cld
dec
addr16
mov
jo
into
insl
jp
jnp
mov
mov
add
mov
ds
fsts
pop
ljmp
xorb
out
fdivl
and
jle
iret
ret
xor
in
andb
sub
imull
jle
push
xchg
mov
lock
fsubr
xor
ret
test
sbb
dec
out
lea
repnz
pop
mov
mov
or
cmpsb
jae
repz
or
lods
stos
es
dec
rcl
aad
rorb
out
push
shl
cmp
rcr
js
ficomps
xor
inc
push
test
and
outsl
into
imull
out
adc
ds
add
pop
fstl
adc
jmp
push
mov
add
or
or
or
leave
xor
xor
xor
cmp
ja
mov
sub
xor
outsl
mov
sbb
and
xor
out
pop
and
call
jge
fistpl
stc
in
mov
add
mov
cmp
fidivrl
fmulp
xor
ret
or
adc
imul
xchg
mov
nop
and
cld
pushf
inc
lcall
insb
add
mov
xchg
std
mov
cmpsb
adc
int3
cmpsb
push
movsb
movsl
int3
xchg
push
stos
mov
aam
rorb
and
outsl
and
fldt
daa
ja
ret
into
iret
inc
jg
lret
in
jp
idiv
cmc
fwait
repz
incl
mov
adc
in
jecxz
mov
inc
inc
lods
mov
stc
push
push
mov
pop
cltd
mov
sbb
xchg
jmp
mov
cmp
sub
cmpsl
xchg
imul
cmp
xor
movsl
cmp
loopne
fimull
mov
push
cld
lahf
xor
push
push
adc
hlt
mov
sbb
push
jnp
inc
jmp
add
sti
or
jmp
xor
xlat
jl
cmc
sarb
mulb
bound
sub
ret
roll
xchg
imul
data16
sbb
out
addl
sub
mov
mov
outsb
jp
roll
sbb
push
imul
scas
jne
mov
xor
adc
fidivrs
fstp
loope
enter
fildl
test
xor
pop
test
inc
es
insb
in
cmp
sub
clc
xlat
lock
aad
pop
adc
rcrl
push
mov
add
js
adc
or
aaa
jge
xor
mov
cmp
cld
push
cmp
pop
iret
sub
push
push
cmp
push
test
nop
sbb
xchg
pop
pop
ss
mov
inc
scas
popf
inc
mov
or
dec
punpckhbw
mov
out
jae
jo
leave
jl
dec
std
outsb
and
pushf
jb
mov
insb
inc
sub
out
and
arpl
cmp
mov
out
test
adc
xchg
mov
pop
nop
mov
mov
mov
fstpt
push
mov
push
in
inc
insl
mov
or
xchg
aaa
jg
push
fucomi
fsin
scas
les
test
pushf
mov
fdiv
enter
inc
xchg
mov
cmp
stc
push
pmulhw
push
mov
imul
add
pop
in
mov
nop
pushf
adc
mov
hlt
testl
in
sarb
sub
jecxz
xor
ds
cmp
pop
sub
add
and
xor
das
cmpsl
sbb
movsb
sub
test
mov
je
inc
mov
jbe
shlb
movsb
inc
push
jnp
adc
mov
sti
flds
pushf
jbe
nop
jg
dec
je
leave
cmpsl
ja
aad
bound
gs
fsubrl
sub
xchg
xchg
ds
shlb
cmp
mov
xor
cltd
sub
std
popf
mov
push
mov
push
les
stos
xchg
mov
mov
iret
ds
inc
mov
mov
stos
aam
sbb
sub
es
pop
dec
sub
push
sbb
leave
xor
shl
jno
cmp
push
xchg
sti
aas
inc
or
mov
loope
mov
pop
jg
repz
gs
and
sbb
roll
add
test
loope
ss
xor
int
cmp
cmp
frstor
mov
ret
imul
jo
sub
push
or
jno
out
dec
mov
pop
pop
aaa
in
mov
js
inc
fimull
outsl
loope
ja
jo
jae
lods
sbb
imul
pop
fs
pusha
push
int
hlt
pop
into
cmp
imul
nop
sub
xchg
popf
test
cltd
in
test
sub
lds
fmuls
inc
or
lods
sub
fld
shrb
mov
push
cmpsl
das
mov
scas
sbb
stos
and
jmp
shll
ljmp
outsl
js
ret
xor
sub
adc
inc
cmp
lock
push
push
mov
cld
dec
or
push
imul
scas
push
lods
aas
call
xor
adc
rcrb
rcll
pop
push
mov
inc
cmpsb
int3
or
mov
aaa
cltd
cmp
xchg
cmp
es
mov
icebp
sub
push
adc
daa
push
scas
pop
enter
xchg
jb
inc
inc
dec
out
sub
dec
dec
xchg
pop
dec
rorb
jno
jg
cwtl
int3
inc
js
shlb
push
in
repz
outsb
fsubrl
imul
imul
hlt
rcrl
icebp
sbb
jp
xchg
or
sub
fdivrl
cmpb
mov
mov
subb
sbb
rcl
test
xchg
fstpt
xchg
mov
fistpl
ror
int
jb
cmpps
call
enter
xor
sti
jecxz
pop
out
int3
in
sub
pop
mov
notl
push
xchg
push
cli
dec
add
jp
sbb
movsl
add
inc
inc
in
inc
or
or
mov
mov
cmp
insb
movsb
sub
rcl
shl
pop
imul
in
push
icebp
xchg
push
nop
call
sbb
repz
push
push
inc
adc
jae
dec
xor
dec
ret
jbe
je
int
mov
cwtl
cmpsl
jnp
pop
callw
cs
outsb
test
imul
mov
pushf
push
cmp
xchg
cmp
sbb
adc
mov
js
aam
mov
dec
pop
mov
mov
insl
lods
imulb
jecxz
xor
popf
fbstp
cltd
jg
fld
mov
mov
addr16
lret
fnsave
cld
in
and
inc
stos
in
dec
jns
mov
repnz
inc
or
addr16
out
dec
in
test
inc
push
adc
mov
adc
sbb
pop
xor
add
push
sub
xlat
or
xor
sbb
xor
sarl
es
and
adc
sbb
push
fsts
push
push
pop
inc
pop
pop
add
pop
pop
push
inc
xor
dec
dec
aaa
dec
lds
jbe
je
jb
lret
dec
fidivrl
js
push
push
ss
jge
push
inc
jno
sbb
xchg
xchg
jb
push
sahf
adc
popf
adc
xlat
test
nop
jle
mov
xchg
rorl
or
jl
mov
repz
cmp
xchg
add
xlat
pop
aad
mov
dec
test
fadd
test
stos
ret
adc
fs
hlt
jb
push
cld
mov
pop
clc
jmp
mov
push
or
sub
jmp
sub
adc
sbb
push
pop
jp
add
repnz
mov
xor
push
sahf
aas
or
cld
nop
daa
inc
and
test
repnz
popf
mov
mov
push
and
mov
mov
stc
or
inc
test
pop
or
mov
je
jb
sbb
mov
pop
or
js
push
addr16
mov
scas
xchg
push
subb
sbbl
push
push
xchg
inc
lcall
mov
jp
jecxz
add
jb
mov
mov
daa
mov
insb
mov
cmpsb
jl
shlb
dec
lods
push
mov
jge
das
shrl
mov
adc
mov
sbb
sub
add
lret
cmc
icebp
cli
push
and
xchg
cmp
enter
jg
ja
cwtl
ljmp
adc
popf
push
cmp
stos
mov
lods
scas
jbe
dec
bound
test
inc
mov
or
loope
jmp
pop
pushf
mov
mov
cmp
daa
cmp
fyl2xp1
mov
jne
es
add
push
push
ljmp
push
xchg
inc
push
sbb
dec
in
mov
sbb
jle
fdivrl
lods
js
enterw
arpl
popa
outsb
or
fcomip
imul
or
xchg
addb
mov
mov
mov
mov
mov
mov
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
enter
hlt
cmc
repnz
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
xor
xor
xor
sbb
cmp
xor
es
push
and
or
cs
push
sub
jg
push
push
xor
push
sub
pop
sarl
pop
bound
cmc
inc
inc
test
dec
fwait
outsb
dec
dec
movsl
push
jbe
jno
jb
push
pop
jle
dec
pop
jp
cmp
xor
pusha
or
insb
sbb
push
cmp
mov
lcall
cmpsl
addb
lods
mov
xchg
mov
jecxz
mov
mov
flds
lods
or
aam
hlt
rcl
cmp
fcmovu
xlat
loope
in
ret
jmp
lret
shl
hlt
lahf
aad
lock
fsin
cld
jae
cli
clc
push
shl
pop
sub
int
call
push
cmp
adc
aaa
sbb
sbb
das
add
add
or
or
xor
cmpsb
pop
cmp
cmp
or
and
pop
sub
sub
push
push
inc
jp
push
js
pop
pop
pusha
jb
pop
or
inc
push
push
inc
and
dec
bound
pop
jne
out
jno
fcoml
jge
push
jns
cmpsb
dec
gs
inc
insl
insl
xchg
inc
imul
mov
popf
popf
lods
mov
cltd
into
lods
test
in
lea
ds
mov
push
cltd
mov
add
mov
movsl
pop
mov
lods
mov
cld
aad
out
clc
rcl
xchg
hlt
fstp
test
test
call
int
loopne
leave
inc
fdiv
cmc
es
icebp
sbb
std
std
add
stc
stc
out
lret
in
ret
loope
ret
in
in
test
jmp
adc
adc
xor
xchg
xor
push
mov
sub
push
lds
or
shll
fstpl
xor
xor
xor
cmp
cmp
and
and
arpl
sub
dec
add
push
push
fnstcw
pop
ret
jno
pop
icebp
jne
inc
stc
imul
popa
dec
dec
mov
dec
jbe
pop
je
arpl
jle
push
jl
dec
push
js
and
dec
pusha
outsb
add
push
inc
push
xchg
cmp
pushf
lcall
test
test
mov
lea
mov
cmpsb
fisttpll
mov
stos
add
aam
add
rcr
add
xor
fadd
hlt
ror
cld
int3
lret
enter
hlt
repnz
lock
cmpsl
int3
cld
cli
mov
clc
out
aam
loop
shl
out
inc
fsubr
ljmp
adc
mulb
pop
pop
out
sub
pop
pop
adc
add
xor
cmovle
or
aaa
aaa
push
add
xor
aas
aas
inc
or
cmp
adc
and
sbb
sub
sbb
mov
mov
insb
pop
pop
dec
imul
ja
inc
push
dec
dec
jb
dec
dec
add
ja
inc
jae
add
jg
dec
jnp
out
dec
addr16
arpl
push
outsl
outsl
stos
pop
imul
xchg
xchg
jle
xchg
xchg
xchg
mov
fwait
fwait
mov
mov
adc
loopne
mov
xchg
mov
jp
cmpsl
cmpsl
jb
mov
scas
push
sahf
stos
stos
movsb
popf
xlat
xlat
mul
rcl
out
sahf
jmp
mov
mov
stc
lret
lret
insb
std
div
dec
shl
ds
and
sti
sti
or
out
loop
jecxz
aam
out
fcomp
jmp
mov
daa
adc
ja
push
sbb
das
sbb
sbb
pop
add
aaa
add
mov
aas
or
in
ss
add
xor
or
cmp
or
cmp
es
adc
and
cs
sbb
sub
fs
push
xchg
push
pop
pop
mov
inc
inc
inc
jne
inc
popa
jns
dec
jge
dec
dec
or
je
inc
jb
adc
dec
jp
icebp
push
data16
push
bound
pop
outsb
insb
cmpsl
pop
push
mov
xchg
xchg
arpl
sahf
pushf
mov
mov
addb
mov
mov
mov
mov
xchg
mov
scas
fwait
mov
lods
adcl
aam
jmp
shlb
jecxz
fadds
mov
sti
ret
test
enter
hlt
repz
cld
clc
test
fsub
loopne
aam
in
dec
shr
call
les
adc
hlt
and
sbb
push
cmp
add
inc
xor
or
dec
or
xor
xchg
add
cmp
cld
sbb
and
rclb
sub
push
adc
push
push
cmp
pop
fsubs
pop
fdivrl
inc
call
jae
dec
movsb
ja
dec
jo
jne
insb
dec
jno
dec
inc
jge
cmp
jns
pop
gs
pop
popa
popa
push
push
insl
insl
loopne
imul
scas
xchg
xchg
dec
mov
cltd
cltd
test
addl
mov
mov
cmpl
movsl
sbb
mov
lods
pop
xchg
test
aad
in
rcl
in
loopne
fstpl
cld
rol
lock
outsb
hlt
leave
leave
dec
enter
int3
icebp
icebp
sbb
std
std
cli
sti
clc
stc
mulb
loope
fsubrs
jmp
adc
pop
sbb
mov
inc
add
iret
inc
add
rorl
decl
xor
xor
jno
adc
cmp
cmp
jne
and
dec
popa
and
mov
imul
push
adcl
pop
pop
pop
sbb
pop
push
inc
inc
outsl
add
jno
dec
dec
sbb
dec
jbe
ss
cmc
xor
fistpll
jl
sarl
test
bound
cs
push
sub
mov
xchg
xchg
test
fistps
test
orb
lret
mov
push
repz
dec
mov
cmpsb
and
mov
call
test
stos
nop
aam
pop
xchg
rcr
jnp
addr16
fadd
or
ror
mov
lret
enter
hlt
bnd
mov
mov
cld
cli
movsl
mov
in
movsl
loopne
jns
in
ljmp
adc
lret
pop
call
pop
pop
pop
sbb
add
xor
addps
or
aaa
mov
ja
aas
xchg
jnp
cmp
jg
daa
cld
arpl
and
addr16
das
sub
sub
outsb
push
push
push
adc
push
push
pop
pop
cmp
pop
pop
fcomps
inc
inc
faddl
inc
inc
out
dec
dec
hlt
or
mov
ja
lods
xor
sahf
ss
jle
jnp
bound
addr16
sub
outsl
outsl
or
imul
xchg
xchg
add
xchg
xchg
cmp
lahf
lahf
es
fwait
dec
roll
cmpl
add
mov
cld
mov
lock
mov
mov
fsubr
mov
scas
cmp
stos
stos
add
xlat
xlat
pusha
pushf
rcl
sbb
fcmovnu
sub
ret
ret
fimull
lret
lret
mov
repz
sti
insb
mov
out
scas
jecxz
pop
stos
out
out
cmpsl
jmp
or
adc
sbb
push
sbb
aaa
dec
push
add
dec
add
pop
inc
push
or
inc
or
ja
ss
jns
xor
jno
cmp
insl
es
imul
sub
popa
sub
and
push
push
inc
push
push
push
jne
pop
pop
outsl
push
pop
pop
adc
push
inc
inc
das
add
aaa
push
dec
dec
cmp
out
jb,pt
lds
jle
mov
jp
mov
bound
and
jno
push
inc
fistl
nop
pushf
cmc
xlat
lcall
iret
addb
mov
pop
pushl
mov
popf
call
mov
lods
leave
in
test
cwtl
aam
pushf
rcl
dec
nop
gs
fcmovu
adc
ret
or
movl
repnz
mov
cld
scas
mov
clc
xchg
test
loop
imul
adc
adc
push
sbb
sbb
push
add
add
pop
or
or
xor
push
outsl
cmp
cmp
jae
and
jnp
sub
add
pop
push
pop
pop
inc
or
jo
inc
inc
adc
inc
inc
cs
dec
dec
xor
dec
dec
out
jne
fsubl
jno
jge,pn
mov
jns
xchg
gs
xor
insb
cmp
push
mov
mov
loope
ret
mov
lret
shl
xlat
out
stos
rcrb
mov
jmp
lcall
out
leave
mov
mov
loop
mov
mov
hlt
in
mov
fstpl
rclb
shl
into
test
out
xchg
mov
out
stos
xchg
mov
mov
xchg
lock
in
loopne
inc
add
and
xor
jg
dec
or
dec
or
fs
arpl
sbb
jnp
jle
push
jb
aas
sub
jle
cmp
imul
es
jne
dec
dec
inc
sub
xor
es
pop
pop
pop
inc
fistps
inc
inc
inc
inc
dec
dec
dec
dec
dec
mov
dec
jbe
fs
jmp
jo
jg
jge
jnp
jns
jmp
bound
pusha
outsb
out
jb
push
push
xchg
xchg
xchg
rclb
lcall
test
lods
lds
mov
mov
mov
cltd
ljmp
mov
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fidivs
and
fadd
iret
loopne
ret
ror
call
enter
hlt
repnz
aam
incb
fdivr
out
shl
push
loopne
sub
in
ljmp
adc
adc
pop
pop
cmp
sbb
cmp
pop
inc
and
add
pcmpgtb
or
jle
aaa
aaa
cmpsb
adc
xor
sbb
cmp
sbb
daa
les
and
add
das
or
sub
xorps
jae
push
push
pop
pop
push
jnp
pop
push
jg
inc
xor
inc
inc
cmp
dec
dec
ret
dec
in
outsl
ja
lret
jae
push
jg
xchg
pop
jnp
js
addr16
arpl
inc
outsl
outsl
pop
dec
imul
xchg
xchg
enter
cli
mov
lahf
loopne
fwait
fwait
push
mov
addl
stos
mov
inc
xchg
mov
mov
mov
mov
xchg
lea
scas
lock
xlat
scas
std
rcl
pop
stc
inc
cmc
fcmovnu
jo
mov
or
iret
iret
adc
lret
lret
and
div
hlt
fdiv
repz
fcmovbe
sti
sti
ret
out
int3
jecxz
mov
jmp
xchg
rclb
popf
cmp
adc
xor
sbb
sub
add
daa
push
or
and
or
pop
ss
sbb
xor
adc
cmp
adc
cmp
or
and
or
and
cs
add
sub
push
push
fnstsw
push
cmc
je
pop
loope
pop
pop
xchg
insb
inc
inc
lods
push
dec
dec
dec
popa
dec
dec
pop
pop
jbe
pop
pop
jb
dec
push
jle
aaa
push
jp
daa
dec
or
pusha
jecxz
outsb
insb
cmc
inc
push
sarl
nop
inc
mov
pushf
jns
lcall
scas
addb
cmpsb
mov
in
mov
fistl
mov
movsb
add
scas
lods
xchg
cli
aam
rcl
rcr
fincstp
fcmovu
ret
jmp
imul
ret
jecxz
int3
xchg
out
enter
hlt
fcomip
lock
cld
popa
xlat
cli
clc
push
lret
out
pop
iret
loop
xor
out
in
or
ljmp
cmp
sbb
sbb
sub
add
or
or
sbb
cmp
cmp
or
and
add
sub
push
jl
push
push
pusha
jo
pop
add
and
inc
cmp
fisubs
dec
aam
dec
dec
ficomps
jne
pop
jno
scas
push
jge
cmpsb
push
jns
mov
bound
popa
jl
insl
insl
je
imul
mov
popf
popf
ret
cltd
hlt
mov
test
mov
adcl
mov
mov
pusha
xorl
dec
mov
movsl
mov
mov
lods
call
out
aad
loop
shll
ljmp
push
repnz
dec
int
cli
leave
leave
cmp
cmc
cmc
sub
icebp
icebp
adc
std
std
add
stc
stc
not
in
shl
loope
fucomp
in
aam
jmp
adc
adc
insl
cs
sub
push
xchg
ss
lods
xor
push
mov
or
int
or
jmp
add
ds
or
add
and
arpl
and
jnp
sub
inc
sbb
push
sub
push
fldenv
pop
shrl
jmp
pop
inc
test
inc
xchg
jae
dec
cmpsl
jg
dec
mov
dec
jbe
inc
je
push
inc
jo
dec
dec
jl
cmp
aas
push
bound
push
pusha
outsb
adc
push
pop
push
xchg
sub
lcall
test
xchg
mov
mov
in
mov
mov
mov
adc
popf
test
cmp
aam
xlat
out
faddp
ljmp
mov
mulx
into
mov
dec
notb
hlt
repnz
lock
cmp
cld
cli
sub
shl
loop
xlat
loopne
iret
fucomi
ljmp
adc
inc
es
pop
js
sbb
outsb
cs
pop
mov
add
mov
cmp
or
ds
aaa
call
push
aas
aas
sub
daa
daa
fs
das
das
push
adc
push
push
imulb
push
out
pop
pop
xchg
gs
pop
mov
jge
inc
dec
js
dec
push
je
dec
data16
ja
dec
jae
cmp
jg
inc
jnp
add
addr16
pop
arpl
pop
outsl
outsl
cmpsb
push
imul
xchg
xchg
data16
xchg
xchg
xchg
stos
lahf
lahf
mov
fwait
fwait
mov
mov
mov
mov
mov
mov
mov
mov
mov
lcall
int3
xchg
xlat
xlat
stos
out
rcl
inc
ljmp
adc
mov
xor
iret
iret
xor
lret
lret
fdivp
div
fmulp
repz
lcall
jle
jecxz
dec
fucomp
out
and
jmp
push
aad
adc
das
adc
mov
sbb
daa
sbb
pop
cmp
add
aas
add
xor
or
aaa
or
orl
xor
rdmsr
xor
add
cmp
pop
cmp
aad
es
sbb
and
adc
sub
push
push
xor
pusha
pop
pop
aad
pop
pop
lds
inc
jmp
inc
inc
pushl
dec
xchg
je
dec
mov
dec
jb
push
inc
jle
dec
inc
jp
aas
pop
xor
pusha
adc
insb
out
push
int
xchg
xchg
das
lods
xchg
nop
inc
mov
lcall
ret
movsl
into
mov
divb
mov
mov
mov
sbb
mov
lods
jno
stos
test
xchg
aam
xchg
rcl
leave
lahf
icebp
fcmovu
cltd
xchg
les
into
int3
inc
mov
enter
hlt
pop
mov
lock
cli
clc
sti
movsb
out
jmp
out
in
shrl
adc
adc
pop
sbb
mov
inc
add
in
dec
or
or
je
xor
add
cmp
cmp
and
and
sub
cli
adc
push
lcall
pop
stos
sbb
dec
add
popw
inc
inc
jbe
dec
dec
sbb
dec
dec
adc
jne
push
aaa
jno
repnz
fidivrs
jns
fisubl
gs
daa
popa
popa
mov
insl
insl
sahf
das
imul
xchg
xchg
scas
ficompl
cltd
fadd
test
or
lea
sbb
mov
jb
mov
fs
mov
mov
mov
jmp
test
aad
xchg
rcl
inc
cltd
fstp
jo
push
add
sarl
int
int3
mov
leave
fdivl
icebp
icebp
test
std
std
lcall
in
movsb
loope
dec
test
in
push
lods
jmp
adc
push
adc
icebp
pop
sbb
sbb
push
sbb
dec
add
inc
inc
or
imul
dec
jl
xor
je
cmp
insb
and
shrl
shll
daa
popa
sub
push
push
push
jg
push
pop
pop
adc
pop
inc
sub
inc
dec
movl
je
cmp
mov
jl
movsl
xor
xchg
sub
pusha
outsb
jne
insb
push
and
xlat
ficoms
cmc
pushf
lcall
test
xor
mov
push
mov
dec
cli
mov
mov
mov
cmpsb
mov
movsb
mov
cmc
out
stos
int
test
test
fwait
rcr
inc
xchg
ja
fadd
pop
pop
ret
ror
xchg
lret
enter
hlt
repnz
lock
clc
out
test
loop
lods
loopne
andl
adc
mov
pop
test
sbb
rclb
pop
fmull
add
dec
inc
or
adc
aaa
aaa
sbb
xor
aas
push
je
daa
pop
push
das
das
andb
in
fs
push
mov
push
push
mov
adc
dec
pop
inc
inc
pusha
or
add
dec
dec
push
add
sub
ja
push
cmp
clc
aas
jg
loopne
jnp
shlb
lods
sub
subb
outsl
lcall
xchg
mov
xchg
xchg
mov
rcrb
xchg
lret
cli
into
popl
mov
push
cli
mov
push
mov
mov
mov
icebp
scas
scas
cmp
stos
xchg
stc
xlat
xlat
sahf
test
rorl
fcmovnu
pop
mov
push
xchg
ret
ret
pusha
xchg
iret
iret
bound
div
sub
cld
lods
sti
sti
in
out
shlb
out
mov
adc
inc
adc
mov
dec
sbb
xlat
push
push
add
push
add
cmc
pop
push
or
pop
or
or
aaa
xor
xor
inc
push
push
push
push
push
pop
push
push
daa
and
and
inc
inc
bound
pop
dec
dec
dec
pop
push
push
leave
push
pop
xor
and
sub
sub
and
add
es
xor
dec
jb
sbb
adc
cmp
push
adc
or
add
add
pop
aas
imul
in
out
shl
cmc
fadds
out
out
std
sti
int
cld
loop
in
mov
mov
fcmovbe
ret
enter
into
out
movsb
mov
out
call
mov
mov
stos
xchg
shl
fistps
mov
xchg
cmpsl
mov
int3
mov
xchg
fwait
xchg
cld
xchg
sti
mov
xchg
xchg
xchg
test
adc
jns
jp
imul
insb
dec
push
pop
gs
push
data16
gs
push
jle
insb
insl
pop
pop
pop
push
pop
inc
inc
jno
push
aas
jg
pop
pop
dec
pop
jno
dec
inc
dec
push
jae
dec
pop
inc
inc
inc
jl
sub
push
sbb
and
cmp
sub
xor
and
sub
dec
dec
jp
and
adc
adc
sbb
sbb
or
or
xor
or
sbb
jmp
fdivr
cli
in
push
cmc
out
int3
cwtl
cltd
addr16
jmp
out
call
ret
ret
mov
jb
stc
ret
call
enter
les
fcmove
in
vpmaxsw
mov
mov
cltd
movsl
fcmovu
into
fisttpl
stos
scas
movsl
mov
mov
hlt
cmc
out
repz
xchg
xchg
stos
xchg
xchg
lahf
xchg
mov
jecxz
loopne
mov
xchg
jo
addr16
adc
jb
pop
jg
dec
pusha
jne
imul
inc
jae
jl
or
push
inc
jb
inc
push
push
inc
push
dec
push
pop
insl
push
push
pop
dec
push
and
and
push
insl
pop
pop
pop
inc
pop
sub
ss
sub
xor
xor
inc
dec
inc
or
sub
and
and
jbe
jbe
pop
sbb
xor
sbb
adc
add
xor
mov
cmp
or
sbb
loop
aad
icebp
idiv
hlt
in
call
and
into
test
in
mov
mov
jmp
fsub
fcmovnu
aam
leave
cli
les
into
cmc
rol
imulb
int
sarb
mov
aaa
ficompl
lods
stos
cmpsb
lods
mov
mov
movsl
mov
mov
xchg
xchg
test
xchg
popf
mov
addb
jmp
lea
jl
arpl
jge
jne
insb
push
addr16
push
add
cli
add
jg
imul
dec
jno
gs
xor
dec
push
jle
dec
dec
dec
inc
pop
jbe
push
push
dec
inc
dec
pop
insb
sub
in
sub
and
xor
mov
push
daa
xor
xor
sub
cmp
adc
and
sbb
adc
jp
clc
jnp
add
sub
or
sbb
adc
and
out
icebp
xchg
xchg
jo
shl
std
stc
xlat
imul
iret
jmp
jecxz
sti
in
fadd
out
adc
rcl
ret
ljmp
lods
jmp
cmpsl
movsb
mov
xchg
movsl
mov
sahf
mov
fwait
stos
mov
mov
mov
popf
xchg
xchg
cwtl
nop
mov
or
mov
mov
lahf
lods
mov
fwait
lods
in
sub
mov
je
jbe
inc
jno
sbb
sbb
inc
imul
dec
outsb
addr16
dec
je
or
dec
push
push
ja
pop
push
pop
inc
push
pop
push
dec
pop
pop
dec
dec
dec
dec
and
dec
inc
addr16
push
js
dec
cmp
jno
adc
and
sub
pop
inc
adc
pop
cmp
and
jbe
jbe
pop
pop
cmp
sbb
sub
bound
cmp
pop
sbb
in
lds
stc
sti
xlat
out
call
loop
mov
mov
out
rol
sar
ffree
lock
iret
out
ror
ret
lret
shl
into
mov
iret
cmpsb
mov
mov
mov
xchg
scas
stos
mov
iret
mov
lods
cltd
andb
mov
xchg
popf
mov
loop
lea
xchg
adc
stos
sbb
dec
jp
push
jb
push
push
dec
push
inc
inc
js
pop
push
jno
inc
jnp,pt
dec
outsb
dec
pop
push
push
push
jb
dec
pop
pop
inc
pop
push
sub
push
pop
xor
push
xor
cmp
sbb
sub
inc
inc
roll
sub
push
sub
daa
and
sbb
sbb
xor
adc
or
add
adc
push
sbb
mul
loopne
loopne
jmp
pushf
popf
je
fucom
out
repz
in
out
idiv
lret
jg
into
in
fsub
fcmovnu
aam
leave
cli
les
shl
enter
rcr
in
jmp
cmpsb
scas
xchg
sub
lcall
movsb
mov
xor
xchg
movsb
scas
cmpsl
mov
mov
adcl
xchg
pushf
xchg
xchg
xchg
in
daa
loop
xchg
mov
pushf
call
ja
inc
js
jnp
push
je
insl
arpl
dec
outsl
jo
push
or
or
jnp
pop
inc
popa
inc
inc
pop
push
pop
imul
push
addr16
inc
push
push
insl
inc
inc
dec
jp
out
jge
add
cmp
cmp
xor
daa
pop
movsb
pop
push
cmp
and
sub
add
push
dec
xor
sub
xor
add
adc
add
or
adc
jp
jns
add
and
daa
sbb
outsl
sub
sbb
push
push
sbb
mul
fdivr
cmc
call
call
push
les
loopne
call
fld
out
rol
sarb
lret
cli
into
jmp
stc
scas
lods
pushf
stos
in
int
popf
mov
xchg
call
mov
mov
mov
scas
stos
mov
mov
movsb
mov
cmc
repnz
icebp
mov
xchg
lcall
mov
xchg
cltd
ljmp
addr16
arpl
dec
jae
sbb
xchg
push
bound
jno
jb
insb
imul
inc
pop
push
inc
pop
pop
pop
jg
sbb
push
dec
dec
ja
dec
push
outsl
inc
push
push
dec
dec
dec
sub
and
pop
push
mov
xor
xor
adc
sub
sub
dec
or
aas
es
add
ds
pop
pop
or
wbinvd
jnp
js
add
add
prefetch
aas
add
push
inc
imul
cld
out
in
ficomps
out
ret
out
in
loope
clc
jmp
out
mov
mov
rol
loopne
ret
shl
int
js
icebp
lret
rol
enter
fucomip
leave
fisubl
rcrb
scas
fwait
mov
mov
mov
mov
cltd
scas
mov
lcall
cwtl
std
mov
subb
mov
scas
lahf
push
jge
jle
ja
jo
jne
jg
insb
dec
addr16
push
or
imul
pop
fs
inc
xor
inc
cmp
pop
dec
jle
pop
dec
inc
bound
dec
push
insb
inc
pop
dec
inc
sub
xor
add
adc
xor
or
push
pop
sbb
sub
push
daa
es
das
and
aas
push
sub
and
jae
adc
or
add
add
test
cmp
pop
repnz
jecxz
xchg
hlt
xchg
ret
ljmp
lock
in
std
jmp
std
sar
rcr
aad
mov
ret
shl
leave
test
ret
test
mov
mov
cltd
mov
mov
mov
test
cmpsl
mov
fwait
lods
addb
icebp
jno
mov
xorl
mov
push
jnp
pop
jge
js
jp
imul
jo
arpl
je
push
or
push
bound
pop
pop
inc
pop
pop
push
push
inc
pop
cmp
cmp
push
inc
push
inc
push
jle
pop
sub
gs
ds
push
push
xor
or
xor
sub
cs
and
sub
or
dec
es
add
or
pop
or
pop
adc
arpl
pusha
cmp
and
sbb
xchg
xchg
shl
in
lock
out
ljmp
in
clc
fimull
ret
neg
sar
mov
fcmove
shl
leave
rol
int3
rol
fcmove
sti
lods
test
cmpsl
pushf
mov
stos
mov
fsts
cmpsb
mov
cwtl
scas
mov
leave
test
movsb
xchg
xchg
mov
cli
sti
ret
stc
mov
nop
lea
cmpl
inc
jno
jbe
jns
jne
jge
je
ja
add
push
jp
dec
bound
imul
pop
dec
push
jg
cmp
cmp
dec
dec
outsb
push
ja
dec
inc
push
inc
pop
dec
insb
sub
push
push
cmp
pop
push
pop
pop
pop
push
sub
or
sub
adc
cmp
cmp
push
or
add
jno
inc
jge
push
or
sub
adc
pusha
xor
sbb
sbb
ds
loop
shr
rclb
jmp
out
cmc
loope
imul
repnz
iret
mov
mov
jmp
stc
hlt
std
neg
rcr
out
int
fdivr
mov
ret
xlat
enter
jmp
fidivrl
push
rolb
mov
test
mov
lret
pushf
test
xchg
nop
mov
clc
test
xchg
orb
jb
inc
adc
dec
outsl
push
jbe
gs
inc
add
jp
pop
insb
jle
inc
push
push
inc
inc
dec
jg
or
push
dec
push
addr16
inc
addr16
inc
dec
push
inc
dec
pop
inc
jge
repz
push
ds
or
push
aas
and
pop
cld
inc
pop
or
sbb
and
das
sbb
dec
pop
jbe
add
xor
or
cmp
adc
add
fs
bound
adc
ds
sbb
xchg
xchg
shl
in
lock
out
ljmp
in
clc
int3
mov
test
out
mov
ljmp
lret
fcmove
in
iret
shrb
mov
mov
stos
mov
xchg
mov
cmpsb
xchg
ret
xchg
rcrb
mov
cmc
mov
mov
mov
scas
mov
xchg
cltd
mov
adc
jae
js
jnp
pop
outsl
jae
jge
jae
pushaw
jo
add
subps
inc
dec
imul
pusha
inc
inc
jge
dec
push
jnp
cmp
es
ja
inc
jno
dec
pop
push
fs
dec
inc
jl
sbb
sub
push
push
mov
aas
cmp
sub
sub
push
or
cmp
dec
adc
cmp
add
add
push
jno
or
das
jns
push
gs
adc
and
sbb
push
loopne
fdiv
call
lcall
loopne
iret
out
loop
sti
in
in
mov
fldz
ret
enter
loope
leave
mov
loopne
xchg
lods
std
lret
ffreep
ljmp
xchg
fisubs
mov
cmpsl
mov
mov
andb
cmpsl
mov
cmpsb
sbbb
sti
clc
je
mov
xchg
mov
mov
fs
jl
adc
sub
dec
jl
jae
insb
outsl
imul
insb
je
push
or
addr16
pop
inc
push
pusha
inc
push
pop
pop
dec
jl
cmp
cmp
push
imul
jbe
das
jg
jp
pop
inc
adc
and
cmp
and
pop
pop
or
xor
and
and
sbb
dec
sbb
and
adc
pop
pop
adc
sub
pop
or
xor
adc
daa
sbb
and
cmp
cli
repnz
leave
lahf
stos
pushf
leave
out
ljmp
xorl
enter
shl
fcmovnu
in
mov
mov
xlat
lock
cmc
mov
fsubrp
lret
test
mov
fistps
mov
movsl
test
imul
test
xchg
lea
sahf
mov
mov
mov
lcall
mov
push
ja
push
arpl
jns
outsl
jbe
jl
inc
add
add
jae
pusha
jle
imul
gs
dec
push
jae
xor
dec
dec
outsb
dec
push
push
jno
and
and
push
inc
jl
inc
pop
jns
inc
and
push
aad
add
and
cmp
xor
and
and
add
dec
push
cmp
and
and
sub
cmp
push
sub
or
xor
xor
adc
add
idiv
loope
nop
xchg
lahf
int3
call
test
shl
cmc
out
jecxz
cli
ljmp
test
mov
fsubp
lret
lret
div
ljmp
rcr
mov
rcrb
mov
mov
lods
cmpsl
xchg
mov
mov
enter
mov
test
lcall
xchg
lahf
test
adc
and
inc
gs
dec
pop
outsl
jno
sbb
popl
push
fs
push
arpl
push
pop
inc
pop
pop
pop
xor
and
outsl
dec
dec
js
dec
push
and
pop
inc
jle
inc
dec
inc
dec
adc
and
cmp
cmp
xor
pop
pop
jno
or
das
pop
sub
push
and
das
cmp
sub
ss
jae
cmp
or
jns
addr16
push
or
or
adc
sbb
div
jecxz
lahf
dec
popf
leave
ror
cld
loope
mul
jecxz
in
ffree
jmp
mov
std
fadd
cld
fcmovnbe
ror
ret
neg
fcmove
into
lret
mov
fadd
jecxz
clc
sarl
scas
stos
test
xchg
nop
mov
movsb
movsb
cmpsb
mov
mov
scas
mov
sahf
xchg
pushf
xchg
xorb
out
out
jbe
mov
jp
ja
jg
jg
jns
sbb
sbb
push
popa
bound
je
pop
pop
insl
popa
jg
dec
or
pop
xor
push
inc
pop
js
insb
pop
push
pop
imul
and
dec
pop
js
pop
dec
dec
dec
add
xor
pop
push
add
sub
xor
and
push
dec
pop
sub
daa
adc
or
pop
sbb
sub
cmpsl
js
cs
adc
or
push
or
out
xlat
icebp
call
leave
out
in
in
out
lock
sti
fsubr
jecxz
icebp
divl
rol
in
fnop
aad
aam
xlat
in
clc
mov
in
out
rcr
mov
mov
ficoms
fmull
test
mov
movsb
scas
mov
leave
pushf
test
mov
lahf
lods
clc
scas
out
xchg
mov
mov
mov
inc
adc
pop
adc
push
jge
outsb
push
fs
cmovns
jg
pop
inc
inc
arpl
dec
push
jp
push
pop
jbe
pop
push
addr16
dec
push
dec
dec
dec
inc
pop
jp
sub
sub
and
aas
cmp
cs
xor
inc
sub
and
pop
cmp
add
sbb
sbb
add
jg
jge
sbb
and
push
adc
add
pop
push
cmp
imul
iret
repz
fsubr
div
iret
ret
test
loop
out
jmp
in
fidivs
rol
fyl2xp1
fcmove
cld
enter
cmpsb
cmpsl
fbld
jecxz
fmul
ret
int3
mov
aam
mov
mov
scas
xchg
fwait
mov
xchg
rol
xchg
out
fwait
cwtl
cmc
pusha
repnz
lea
mov
sbbb
mov
push
adc
add
outsb
je
jb
jl
bound
addr16
push
outsb
bound
push
inc
pop
xor
jmp
jb
push
pop
jp
dec
dec
dec
push
push
inc
jo
and
push
sub
pop
dec
imul
and
xor
sbb
cmp
das
cmp
add
aaa
adc
cmp
cmp
sbb
adc
jg
dec
js
sbb
add
push
sub
sub
push
imul
sti
test
hlt
out
loop
cld
cmc
in
in
repnz
repz
mov
out
dec
out
vaddsubpd
cli
fdivp
fst
jmp
mov
ret
in
rol
shr
lret
iret
iret
jmp
rcrl
sahf
mov
stos
mov
mov
lods
mov
lret
addb
sahf
cwtl
popf
nop
cwtl
cwtl
cli
mov
stos
addl
test
test
mov
jo
jbe
addr16
jns
jne
jle
popa
push
add
dec
add
imul
jo
dec
jne
and
jle
pop
push
dec
jns
inc
inc
push
push
arpl
and
dec
pop
js
dec
add
daa
cmp
sub
sub
xor
aaa
xor
inc
add
sub
das
cmp
sbb
add
add
sub
scas
jns
add
add
push
xor
sbb
imul
test
in
jmp
cwtl
cltd
testb
loopne
out
call
stc
mov
rol
hlt
enter
not
fucomip
cmpsb
cmpsl
enter
repz
ffreep
int3
leave
into
jecxz
scas
adc
or
xchg
movsb
scas
mov
mov
test
ret
ja
lea
cmpsb
mov
test
test
mov
mov
xchg
popf
fwait
mov
push
adc
adc
push
push
imul
jno
jbe
gs
push
ja
pop
outsl
insb
pop
insb
inc
popa
push
pop
inc
push
jne
imul
pop
dec
push
jo
inc
pop
pop
inc
pop
push
bound
cmp
sub
push
xchg
push
add
ds
sub
das
and
push
xor
sub
sub
ss
jo
adc
cmp
push
or
pusha
xor
sbb
pop
or
mul
shl
jmp
cmc
jmp
test
icebp
loopne
cli
shl
cld
stc
in
out
enter
hlt
mov
mov
rcl
lret
iret
jmp
int3
faddp
fcmovu
fildl
mov
mov
fmuls
mov
test
xchg
xchg
mov
into
in
xchg
mov
andb
adc
push
adc
jno
dec
push
jne
popa
pusha
push
push
imul
fimull
jne
dec
inc
inc
gs
inc
push
pop
inc
outsb
push
pop
push
pop
push
push
push
inc
jne
jb
insl
inc
inc
pop
dec
outsb
pop
dec
cmp
sbb
xor
cmp
sbb
das
adc
adc
es
xor
xor
sbb
das
or
adc
or
pop
sub
jnp
or
pop
adc
pop
adc
add
daa
or
imul
out
hlt
inc
stc
cmc
sahf
lahf
sub
fldl2t
loope
bnd
loope
lock
lock
mov
cld
fadd
in
lret
stc
mov
loopne
rcr
lret
loop
clc
fstpt
test
shr
fistps
pushf
mov
stos
mov
lods
lods
test
mov
xchg
mov
icebp
fdivrp
mov
popf
xchg
addl
test
js
jo
inc
push
inc
sbb
imul
pusha
addr16
jns
imul
or
outsb
jne
pop
inc
push
js
dec
ds
cmp
push
inc
push
inc
jbe
push
push
inc
inc
jl
pop
pop
dec
inc
pop
cmp
push
lret
xor
das
xor
sub
sub
daa
sub
inc
inc
pop
dec
or
and
cmp
add
and
sub
adc
and
pop
push
adc
adc
push
push
loope
shl
hlt
sahf
xor
into
out
clc
jmp
loopne
out
cmc
repz
cmc
in
out
mov
mov
rol
std
fcompp
fmulp
lret
jmp
enter
stc
scas
lods
into
test
int
xchg
movsl
mov
mov
mov
ret
mov
mov
nop
adcl
xchg
mov
mov
test
orl
pop
cmp
popa
popa
data16
jbe
pop
imul
dec
jnp
pop
jne
pop
xor
pop
cmp
dec
pop
push
pop
insl
dec
inc
dec
imul
sub
xor
and
pop
pop
pop
pop
and
and
xor
sub
sub
or
das
or
push
add
adc
sbb
jg
jge
or
or
es
adc
or
add
add
sbb
adc
xchg
xchg
stos
xchg
aad
in
call
jmp
cld
loop
out
out
repz
cld
stc
loope
clc
mov
lret
ret
hlt
ror
shr
enter
ret
jecxz
andb
lret
lcall
test
xchg
mov
stos
lods
test
mov
mov
lods
scas
xchg
mov
mov
ja
mov
xchg
nop
lea
xchg
lea
ljmp
inc
jbe
addr16
jns
js
jge
jb
popa
data16
imul
dec
insl
jge
inc
inc
inc
inc
push
push
gs
dec
pop
push
sbb
push
jno
push
push
inc
dec
dec
jle
dec
pop
pop
and
add
cmp
and
inc
mov
das
and
and
sub
push
add
adc
adc
mov
or
add
or
nopl
repz
lock
out
clc
ljmp
lock
jmp
shl
jecxz
mov
loopne
rcl
rcl
loopne
ret
enter
sti
into
shl
enter
loope
scas
sbb
int3
mov
cmpsb
mov
lods
mov
mov
xchg
cmpsb
cmpsl
test
lods
mov
mov
popf
xchg
mov
stos
addl
test
imul
scas
jb
push
jno
jne
insl
dec
jns
ja
imul
push
inc
insb
jb
insb
imul
ss
inc
jb
push
pop
dec
dec
insl
pop
dec
push
push
push
push
dec
dec
dec
push
dec
pop
pusha
dec
inc
dec
dec
pop
push
adc
sub
adc
push
xor
and
dec
or
sub
push
adc
add
sbb
bndstx
cltd
gs
or
push
sbb
or
loope
loopne
xchg
and
in
fsubp
jmp
out
sbb
jmp
jmp
in
ret
cmc
mov
mov
ret
iret
enter
call
rol
loope
adc
dec
fdivrp
int
mov
cmpsl
mov
stos
lods
outsl
cmpsb
mov
test
stos
movsl
lret
push
enter
pushf
xchg
mov
xchg
xchg
popf
xchg
sahf
mov
test
push
out
scas
lahf
xchg
fwait
pushf
scas
jb
push
ja
jno
jb
dec
outsl
jne
jno
arpl
add
jl
jl
dec
jle
gs
push
push
inc
push
jnp
inc
push
aas
cmp
cmp
inc
push
push
popa
dec
push
dec
jo
inc
pop
inc
dec
dec
pop
pop
jle
xchg
push
push
and
and
or
sub
das
sub
push
daa
cmp
dec
sbb
cmp
pop
or
jno
out
jge
adc
aaa
push
or
or
or
cmp
push
or
shl
out
lock
clc
into
clc
in
jmp
repz
int3
in
in
neg
mov
mov
fcmovnb
fsubp
ret
ror
aad
in
rcl
xlat
repnz
enter
scas
xchg
aam
rolb
test
mov
stos
nop
test
cmpsl
cmpsb
cmpsl
mov
lea
add
test
mov
mov
xchg
mov
adc
jg
pop
imul
push
imul
fs
imul
jae
inc
push
inc
pop
inc
dec
push
dec
jle
push
dec
dec
dec
dec
and
xchg
and
pop
jl
dec
pop
pop
inc
pop
das
push
cmp
cmp
pop
cmp
ds
or
and
cmp
and
sub
dec
dec
in
dec
sbb
cmp
pop
sbb
sbb
sbb
sbb
push
sub
adc
arpl
add
add
or
repz
idiv
xchg
mov
out
cmc
jecxz
loope
div
jmp
mov
in
shl
fcmovb
rcr
lret
mov
ret
aad
test
enter
ret
sti
fnsave
rcll
mov
mov
mov
movsl
lods
scas
test
mov
mov
xchg
lahf
cwtl
mov
xchg
mov
mov
jp
ja
fs
jnp
jne
outsb
imul
insb
push
push
jae
jl
pop
fs
inc
inc
push
pop
inc
push
push
pop
dec
inc
push
push
jno
jo
dec
dec
das
sub
sub
pop
xor
and
adc
xor
or
sub
add
sub
sub
or
or
add
pop
adc
push
jae
cmpl
or
adc
or
or
sbb
cmp
stc
repz
cld
std
lret
fsubrs
repnz
loopne
lret
loop
shl
loopne
lock
cli
fdiv
fstpt
aam
loop
rol
in
ret
int3
fdivr
cli
call
aam
rcrl
pushf
scas
scas
mov
test
mov
mov
cwtl
mov
movsl
xchg
test
mov
mov
popf
mov
lea
in
stos
ljmp
pop
jno
je
imul
jle
ja
imul
inc
jg
jg
pushaw
pop
push
xor
rdpmc
jae
ja
push
dec
push
pop
push
push
pop
inc
and
push
and
imul
dec
cmp
adc
cmp
pop
aaa
xor
pop
xchg
pop
adc
pop
and
and
xor
cmp
ds
stos
dec
pop
and
adc
adc
cmp
pop
sbb
pop
or
push
or
or
in
xchg
nop
xchg
sti
int
cli
in
int3
cmc
loop
sar
repz
pop
pop
loope
leave
std
loopne
shl
rol
rcr
sarb
ljmp
out
rcl
int
out
lret
xlat
das
aad
mov
mov
mov
lods
lods
mov
scas
test
div
mov
mov
mov
lea
mov
adc
pop
jg
outsl
jne
ja
ja
bound
push
gs
push
bound
jns
push
popa
inc
inc
push
pop
push
cmp
cmp
pop
inc
push
inc
dec
inc
push
push
arpl
inc
inc
dec
pop
sub
push
push
and
xor
cmp
cmp
das
xor
or
cmp
dec
add
daa
sbb
adc
or
push
sbb
pop
or
xor
adc
andl
or
push
and
clc
cld
shr
xchg
test
cmc
repz
fucomp
imul
enter
adc
int3
jecxz
out
in
loope
ret
in
lock
xlat
fstpt
leave
aam
hlt
enter
ret
int3
cmpb
sahf
mov
lahf
scas
mov
scas
stos
scas
test
mov
xor
mov
xchg
addl
popf
mov
adcl
mov
jb
popa
ja
jne
jg
jo
push
jp
jge
bound
daa
add
jp
arpl
insw
addr16
jne
inc
popa
inc
push
xor
aas
jae
pop
js
pop
inc
push
inc
arpl
dec
gs
pop
dec
sub
add
cmp
and
xor
pop
cmp
cs
inc
inc
add
sub
cmp
sbb
daa
pop
xor
adc
sbb
push
aas
push
or
or
pop
pop
insl
out
imul
repz
lock
hlt
push
shl
rcr
hlt
mul
out
test
add
fucomp
clc
in
lock
fcmovnbe
fcmovnu
les
lret
cmpsl
lods
movsb
in
iret
fucomi
ret
leave
sarb
mov
stos
fcoml
scas
stos
lods
mov
mov
int
lret
test
xchg
mov
orb
xchg
pushf
out
or
lods
popl
cltd
test
adc
int3
push
push
jo
pop
imul
pusha
fs
imul
js
inc
aaa
xor
xor
jge
pop
pop
dec
pop
jne
dec
push
pusha
inc
push
inc
push
dec
pop
pop
inc
pop
sub
sub
adc
and
sub
sbb
sub
and
sub
cmp
and
cmp
pop
jb
pop
sbb
xor
pop
add
push
sub
sbb
push
or
push
push
lock
out
std
idiv
std
jmp
out
test
add
shr
call
cli
lret
mov
mov
fmul
call
rcl
cld
fcomp
iret
lret
cltd
aam
mov
cmpsb
mov
stos
cmpsb
stos
scas
cmpsl
mov
or
mov
xchg
mov
cwtl
mov
subb
test
orb
push
addr16
inc
arpl
dec
jl
jb
ja
inc
jbe
arpl
add
dec
bound
jle
inc
inc
pusha
pop
popa
push
pop
push
ds
push
pop
inc
dec
push
push
inc
push
insl
inc
inc
inc
inc
dec
jns
push
sub
adc
xor
sub
adc
xor
pop
xor
and
sub
cs
and
adc
jae
push
sub
sbb
nopl
and
push
or
add
pop
insl
jle
cmp
repz
stc
repz
ret
pushf
popf
dec
fwait
aad
call
shl
in
out
sti
in
out
fucomi
std
fsubp
std
int
fmul
fdivp
xlat
aad
in
scas
scas
lret
lods
jmp
mov
mov
fstpl
scas
mov
cmpsl
mov
mov
mov
lods
leave
sti
mulb
mov
mov
mov
out
in
popl
stos
cwtl
test
jae
adc
dec
insb
jns
outsl
jge
inc
dec
dec
push
addr16
push
or
dec
inc
push
push
inc
push
je
pop
pop
dec
push
pop
jns
push
dec
dec
push
dec
push
inc
and
adc
jl
dec
arpl
pop
cmp
sbb
cmp
sub
push
inc
push
sub
cmp
add
cmp
sbb
jne
xchg
adc
xor
sbb
push
push
add
pusha
and
cmp
sbb
in
icebp
out
repnz
fdiv
lock
xchg
call
imul
std
clc
ret
fcmovnu
in
cmc
clc
out
stc
loop
ror
fdivrp
shll
rol
lret
cli
ret
into
int3
in
mov
mov
mov
fcompl
mov
test
mov
movsb
orl
repnz
lock
stos
popf
mov
mov
hlt
out
mov
test
jle
adc
push
dec
imul
popa
push
jbe
jb
imul
or
popa
pop
pop
push
inc
inc
push
pop
push
je
dec
pop
dec
inc
inc
inc
inc
and
arpl
insl
inc
gs
bound
dec
cmp
es
cmp
sub
cmp
mov
push
xor
and
and
daa
nopl
adc
jb
add
xor
or
or
sbb
and
pop
or
aad
loope
loopne
xchg
sbb
fucomip
cli
in
cld
leave
jmp
out
jmp
loope
out
cli
mov
fcmovb
clc
iret
fcmovnu
cld
lret
leave
xlat
movsb
movsl
pop
mov
ret
int3
into
stos
jno
cltd
mov
cmpsb
mov
stos
xchg
xchg
lahf
mov
lods
mov
stos
scas
lret
lods
leave
mov
cmpsl
addb
nop
pushf
mov
xchg
mov
movsb
test
adc
dec
jb
je
insb
jo
imul
add
or
dec
arpl
jnp
pop
inc
pop
dec
dec
xor
xor
pop
jo
pop
push
push
dec
dec
dec
dec
inc
and
and
pusha
inc
dec
js
dec
outsb
xor
sbb
xor
and
pop
mov
push
sub
add
aaa
xor
add
es
and
jle
ss
sbb
cs
or
sbb
aaa
push
or
push
adc
outsb
lea
push
sub
repz
lock
cld
fdiv
lock
cwtl
flds
in
mul
cld
sti
enter
mov
ret
xlat
addl
leave
int3
shl
ret
loope
enter
aas
nop
mov
andb
xchg
mov
xchg
movsl
cmpsl
scas
cmpsb
sarb
andb
mov
sbbb
sti
clc
jecxz
movsb
mov
xchg
xchg
inc
jns
jnp
fs
jb
inc
insb
insb
addr16
jne
wrmsr
or
inc
push
inc
inc
pop
pop
push
inc
pop
jl
push
pop
push
dec
cmp
push
dec
dec
dec
jns
pop
pop
inc
inc
inc
push
push
adcb
cmp
ss
and
cmp
daa
cmp
xor
add
pop
sbb
jnp
push
and
adc
pop
adc
add
sbb
add
xchg
sti
stc
mull
lock
addr16
repz
cld
loop
stc
stc
fmull
fadd
rcl
fstp
jmp
iret
fdiv
iret
rcr
jecxz
ret
lods
lock
inc
movsb
mov
mov
test
xchg
mov
nop
mov
push
xchg
icebp
je
scas
cwtl
mov
mov
stos
lcall
jb
je
ja
je
test
push
arpl
add
pusha
jp
pop
outsl
js
jl
push
push
popa
dec
inc
push
inc
imul
pop
dec
gs
dec
inc
dec
inc
inc
push
addr16
dec
inc
jge
sub
cmp
sbb
sub
cmp
inc
inc
sub
and
and
and
push
jb
jno
sbb
xor
push
push
adc
and
or
sub
or
pop
push
in
repz
push
ret
call
cltd
xchg
int3
icebp
aad
in
out
shl
ljmp
xlat
aad
int3
aam
rep
mov
rcr
fmulp
in
mov
mov
mov
fimuls
test
xchg
mov
lahf
mov
cld
mulb
mov
test
loopne
sbbb
mov
jp
jbe
jo
jp
dec
sbb
inc
sbb
jo
push
dec
outsb
addr16
dec
je
or
dec
or
pop
push
popa
inc
inc
pop
push
pop
imul
inc
addr16
inc
push
je
arpl
pop
inc
imul
pop
cmp
xor
ds
and
and
xor
cmp
aas
dec
dec
pop
dec
xor
add
adc
adc
or
jnp
jnp
add
xor
push
add
or
cmp
imul
repnz
fucomi
stc
repz
ficompl
loopne
xlat
call
out
out
jmp
xlat
rol
int3
mov
loopne
enter
rcl
lret
scas
test
mov
xchg
mov
sub
cltd
mov
mov
mov
subl
leave
add
mov
sahf
lcall
std
mov
xchg
xchg
xchg
orb
jmp
jmp
jno
inc
addr16
jg
js
jg
sbb
push
popa
ja
bound
jnp
imul
gs
popa
aaa
xor
xor
push
pop
dec
pop
jo
push
push
dec
dec
dec
push
and
je
inc
inc
dec
inc
insl
inc
inc
xor
sub
push
jecxz
adc
cmp
xor
es
pop
sub
cmp
dec
add
xor
adc
or
sub
or
add
or
push
or
sar
stc
notl
lock
cli
hlt
fsubr
jmp
out
repnz
out
cli
in
shl
fcmovu
aam
fdivr
mov
rcl
int3
into
rol
ret
leave
out
cli
stos
test
rolb
movsb
mov
nop
mov
ja
test
mov
outsl
lret
lcall
test
xchg
sahf
scas
stc
out
out
lea
mov
pusha
push
jl
jns
jno
jno
je
dec
insl
je
push
jno
add
push
or
push
pop
inc
pop
pop
push
jp
inc
dec
dec
jge
push
cmp
push
fs
dec
dec
jo
inc
pop
dec
sub
jg
jns
xor
ss
cmp
sub
xor
sub
cmp
dec
or
ds
daa
sub
adc
jl
stos
jns
or
add
adc
sbb
sbb
mov
std
jmp
stc
sar
stc
std
cmc
movl
stc
out
out
out
fcom
shl
mov
mov
fucomp
xlat
ror
ror
mov
iret
lret
test
mov
fstp
ficompl
mov
mov
cmpsl
cmpsl
div
enter
xchg
lcall
popf
mov
xchg
xchg
xchg
mov
mov
mov
inc
pusha
jl
js
jp
imul
add
add
outsl
jnp
pop
imul
push
inc
inc
pop
inc
pop
pop
pop
mov
jnp
dec
push
dec
dec
inc
ja
push
inc
dec
insl
sub
xor
xor
add
ds
xor
loopne
add
aaa
add
cmp
and
adc
sbb
or
jno
aad
adc
sbb
pop
xor
in
add
push
or
das
or
aam
cld
std
xchg
sahf
cwtl
popf
fsub
jmp
mul
ret
jmp
out
out
jecxz
loop
fcos
cli
loopne
rol
hlt
mov
mov
int
jmp
in
rol
mov
leave
fsqrt
fld
iret
mov
cmpsl
xchg
rcr
cltd
ficomps
mov
mov
movsb
lods
mov
enter
xchg
xchg
xorb
std
cli
mov
mov
xchg
cmpsb
mov
mov
push
data16
jp
jae
ja
pop
pop
inc
imul
jnp
jg
or
pop
or
inc
je
pop
pop
jg
push
pop
push
cmp
jb
dec
inc
dec
pop
pop
push
pop
cmp
icebp
push
sbb
sub
das
sub
cmp
and
add
push
dec
dec
push
dec
push
and
adc
sbb
add
pop
adc
cmp
sub
jns
fs
add
xor
or
sbb
add
in
xchg
xchg
rcll
stc
aad
cmc
cld
cmc
jecxz
lods
xchg
repz
lret
stc
jmp
mov
out
sti
rcr
fcmovbe
fxtract
aam
xlat
lret
lret
ror
int
mov
enter
fistpll
mov
movsl
mov
mov
xchg
jecxz
lea
test
leave
lahf
hlt
cmpsb
nop
xchg
xchg
mov
xchg
lcall
movsb
xchg
test
ljmp
js
arpl
dec
insl
jnp
jge
push
xor
inc
addr16
jae
imul
pop
pop
push
bound
shlb
jbe
dec
je
push
pop
push
pop
outsl
dec
inc
dec
push
dec
inc
push
inc
inc
inc
sub
xor
add
cmp
or
das
xor
inc
add
aaa
adc
cmp
sub
and
cmp
adc
sbb
sbb
or
jp
js
or
or
or
sub
sub
out
lock
out
icebp
cmc
out
shl
loopne
test
fucomp
clc
fucomi
out
in
mov
mov
xlat
hlt
ret
xlat
leave
fldl2t
ret
lret
fucomp
cmpsb
adc
into
rcr
ror
int
xlat
aam
rclb
mov
movsl
cmpsb
test
ret
xchg
mov
mov
xchg
cmpsb
xchg
nop
test
cli
sti
cld
stos
adcl
mov
iret
in
mov
push
push
jno
jns
jne
imul
dec
jge
insb
jle
dec
jg
pop
inc
bound
xor
xor
dec
jae
push
pop
pop
push
push
push
dec
inc
dec
gs
pop
pop
pop
insb
and
cmp
and
push
sbb
sub
aas
sub
daa
xor
inc
inc
leave
inc
or
and
sub
push
and
adc
jno
jge
sbb
sub
adc
push
adc
xor
sysret
pop
add
ds
sbb
pop
icebp
xchg
xchg
push
xchg
xlat
hlt
ljmp
imul
loop
icebp
aam
bnd
lret
mov
in
fcmovb
ror
iret
aad
rcl
ret
hlt
rcl
xlat
rcl
scas
scas
int
jmp
mov
xchg
shrl
xchg
mov
mov
cmpsl
mov
mov
xchg
repz
mov
mov
xchg
xchg
test
jnp
mov
mov
addr16
insb
jo
je
jle
insl
je
addr16
add
mov
arpl
js
insl
test
jno
push
inc
push
jg
dec
push
dec
pop
push
push
push
and
leave
sub
dec
inc
dec
cmp
pop
cmp
cmp
pop
sbb
das
sbb
xor
xor
sub
rorb
sbb
adc
xor
jl
jnp
adc
add
or
or
add
or
sbb
lock
div
out
dec
lahf
pushf
fmul
mov
stos
out
in
orl
mov
mov
mov
mov
mov
mov
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
enter
hlt
cmc
repnz
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
xor
xor
xor
ds
cmp
cmp
cmp
es
and
and
and
cs
sub
sub
sub
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jbe
je
jb
jo
jle
jl
jp
js
fs
popa
outsb
outsl
insb
insl
push
push
xchg
xchg
xchg
nop
xchg
sahf
lahf
pushf
popf
lcall
test
mov
mov
mov
mov
mov
mov
mov
movsb
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
enter
hlt
cmc
repnz
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
xor
xor
xor
ds
cmp
cmp
cmp
es
and
and
and
cs
sub
sub
sub
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jbe
je
jb
jo
jle
jl
cmc
cltd
js
adc
adc
pusha
xlat
xor
push
push
imul
into
std
arpl
jp
test
mov
inc
outsb
inc
mov
mov
mov
mov
mov
adc
mov
movsb
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
enter
hlt
cmc
repnz
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
xor
xor
xor
ds
cmp
cmp
cmp
es
and
and
and
cs
sub
sub
sub
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jbe
je
jb
jo
jle
jl
jp
js
fs
popa
outsb
outsl
insb
insl
push
push
xchg
xchg
xchg
nop
xchg
sahf
lahf
pushf
popf
lcall
test
mov
mov
mov
mov
mov
mov
mov
movsb
movsl
mov
scas
lods
lods
stos
stos
test
xlat
aam
rcl
rcl
fcmovu
fcomp
mov
rol
iret
int3
int
lret
enter
hlt
cmc
repnz
cld
std
cli
sti
clc
stc
out
in
loop
loopne
out
out
in
in
ljmp
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
add
push
or
ss
xor
xor
xor
ds
cmp
cmp
cmp
es
and
and
and
cs
sub
sub
sub
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jbe
je
jb
jo
jle
jl
jp
sbb
rcrb
inc
add
sbb
add
inc
add
inc
add
sbb
dec
sbb
sbb
sbbb
add
inc
add
sbb
add
add
adc
add
add
add
and
add
add
add
inc
add
add
add
inc
add
mov
add
push
nop
add
xchg
xchg
add
mov
add
ficoms
add
mov
nop
add
loop
add
out
nop
add
add
add
and
add
cmp
add
push
xchg
add
pop
xchg
add
push
add
js
add
test
add
movsb
xchg
add
mov
add
int3
xchg
add
add
add
call
xchg
add
or
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
js
je
jb
arpl
jae
add
push
je
push
outsb
ja
outsb
add
add
imul
jo
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
insb
jae
gs
popa
insb
jne
add
add
inc
gs
popa
insb
jne
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
jb
gs
imul
add
dec
gs
jo
jb
add
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
gs
jo
insb
insb
outsl
arpl
add
inc
gs
jb
arpl
jae
gs
jo
add
jb
gs
xor
cs
insb
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
imul
imul
jns
add
add
inc
gs
jb
arpl
fs
jae
add
imul
insb
add
add
je
outsl
jne
fs
arpl
add
je
outsl
jne
fs
arpl
add
je
imul
add
add
gs
je
inc
inc
inc
add
inc
add
inc
add
mov
add
add
mov
add
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
push
xor
bound
push
jb
js
mov
xchg
xor
xor
xor
xor
xor
xor
push
xor
xor
bound
xorl
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
jb
js
mov
xchg
xor
xor
xor
xor
sbb
aaa
xor
xor
xor
xor
xor
or
adc
sbb
aaa
cmp
inc
aaa
outsl
aaa
jnp
xorl
aaa
xchg
aaa
lahf
aaa
mov
mov
aaa
fdivs
add
sub
cmp
aas
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jg
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
push
jns
jle
mov
fidivrs
sti
cmp
es
ds
ds
ds
ds
ds
jns
mov
xchg
ds
ds
mov
mov
ds
fdivrl
out
lock
std
or
adc
sbb
and
daa
aas
cs
cmp
aas
pop
aas
pop
aas
gs
jo
test
aas
xchg
aas
popf
aas
movsb
aas
mov
aas
fidivrs
call
aas
add
add
test
add
push
xor
xor
xor
xor
xor
pop
xor
xor
insb
xor
je
js
jl
test
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jb
xorl
mov
xor
xor
xor
xor
xor
xor
push
xor
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
add
add
adc
sbb
sbb
and
and
sub
xor
xor
push
xor
add
jo
add
add
add
cmp
nop
cmp
mov
cmp
mov
add
add
add
add
or
or
add
add
add
mov
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
adcb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
adc
add
rcl
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
add
add
andl
aaa
outsb
jae
jbe
adc
jns
gs
add
push
jns
je
insl
add
adcl
je
or
push
imul
