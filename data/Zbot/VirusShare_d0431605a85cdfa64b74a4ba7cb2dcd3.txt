jbe
idiv
push
mov
sub
mov
pop
mov
ret
pop
sbb
das
out
incl
mov
pushl
call
sub
ret
xor
aad
inc
add
or
daa
dec
scas
jl
mov
and
nop
jo
hlt
lea
push
js
xchg
fcmovu
lds
inc
in
push
pop
cld
jg
in
sti
push
sbb
adc
push
push
dec
push
dec
outsl
lcall
in
mov
nopl
push
clc
lock
push
lea
push
lods
in
lock
cmp
inc
shrb
pop
inc
ja
mov
mov
call
push
loopne
dec
je
paddusb
xor
test
mov
push
loopne
clc
sbb
pop
or
sbb
mov
mov
sub
cmpsb
or
sbbb
or
cld
orl
push
push
add
push
push
incl
out
orb
mov
xor
clc
add
idiv
push
mov
xor
pop
sbb
dec
cli
jl
add
push
push
and
inc
call
mov
sub
push
push
jo
sahf
xor
adc
or
jmp
out
outsl
addr16
sbb
sub
push
loopne
push
insl
jae
or
push
popa
addr16
mov
mov
cmp
or
lea
inc
inc
mov
hlt
movsb
clc
insb
sbb
mov
xor
add
int
mov
jb
popa
push
push
aaa
push
das
adc
bound
push
or
cmpsb
add
jl
xor
push
push
pop
rcrb
xor
rorl
add
xchg
ret
icebp
lds
adc
pop
xor
lds
jo
sub
loope
inc
and
mov
or
and
xorb
push
adc
add
movnti
push
sub
adc
rcll
clc
nop
je
mov
and
in
push
push
inc
adc
sbb
movsb
clc
push
nop
pop
mov
push
or
mov
insb
arpl
enter
lock
test
add
and
sbb
fsub
pop
cld
push
test
imul
das
and
mov
or
cs
and
push
sarl
ljmp
fs
push
push
insl
mov
sti
cmpsl
add
pop
or
ja
or
push
adc
mov
loopne
cmp
add
xor
add
sbb
xlat
test
fists
rolb
inc
cld
push
xchg
jge
iret
mov
les
aad
ucomiss
xor
imul
cwtl
hlt
push
movsl
rcll
add
inc
orl
mov
add
daa
and
hlt
shrl
adc
dec
push
mov
je
dec
push
fwait
and
mov
in
out
xchg
sbb
push
adc
adc
pop
xchg
jbe
popa
and
sub
lods
fstps
push
das
ds
push
mov
call
or
cmp
add
in
sbb
testl
leave
sbb
cmpsb
xchg
adc
adc
daa
mov
mov
dec
fs
in
leave
enter
sbb
push
cwtl
clc
imul
js,pn
cmp
and
sbb
push
dec
sub
inc
gs
push
hlt
jmp
dec
enter
push
push
insl
push
xchg
push
jmp
mov
push
or
jp
paddd
inc
or
adc
inc
imul
fistpll
push
mov
pop
out
push
mov
cmp
sbb
js
pushf
cmpsl
push
add
sbb
pop
mov
sti
mov
or
repz
mov
xor
cmp
rcrb
inc
mov
pop
add
push
sbb
rolb
loop
push
push
mov
mov
rorl
inc
mov
cs
daa
in
test
and
ds
mov
sbb
ss
push
scas
sbb
stc
mov
inc
addl
cltd
add
test
adc
scas
or
jg
xor
add
or
jnp
mov
inc
inc
lcall
dec
cmpsl
les
xor
and
push
xor
inc
pop
scas
xchg
cmpsl
inc
shl
add
add
cwtl
mov
in
pop
aad
gs
xchg
mov
cmc
insl
jecxz
dec
sub
call
adc
sub
cmp
dec
jo
xchg
jnp
into
scas
and
push
dec
enter
repz
jno
enter
push
push
push
add
jne
push
sbbb
negl
and
pop
repnz
fldt
or
test
arpl
call
pop
in
push
lods
popf
mov
push
push
sub
xchg
add
xchg
and
mov
inc
inc
adc
mov
int
jecxz
jle
lock
jae
xlat
inc
adc
cmp
inc
adc
addl
xor
mov
or
out
test
insl
in
dec
jne
out
push
inc
je
push
dec
pop
inc
add
fwait
xor
std
pop
imul
es
inc
push
subl
mov
push
push
cmp
ret
sbbl
inc
inc
mov
mov
adc
jne
mov
or
je
test
jns
fs
xchg
fwait
nop
pop
aas
imul
insb
and
xor
cmp
aaa
outsb
gs
add
leave
enter
and
push
dec
lock
ja
or
rorb
add
ds
aas
adc
and
dec
aaa
addr16
in
rcll
and
lock
dec
scas
in
push
dec
adc
dec
addl
nop
pop
pop
mov
xor
out
or
das
sub
repz
mov
fs
test
sub
push
das
cmp
xor
pop
rorb
in
xor
push
fsub
push
add
push
xor
shr
pop
mov
iret
mov
or
es
bound
push
push
dec
stos
xchg
jae
lret
adc
add
inc
push
xor
mov
jg
movl
add
mov
data16
jl
xor
and
push
or
jnp
and
jmp
lods
scas
outsb
push
addr16
jne
cmp
pop
loop
or
and
pop
cld
jp
shrl
pop
leave
out
push
push
add
flds
shll
mov
cmp
pusha
jno
mov
or
push
out
pop
push
mov
aam
stc
loop
sbb
outsb
push
dec
sbb
cli
lds
scas
inc
ds
xor
movl
push
fsubrs
pop
adc
cmp
aas
adc
ljmp
push
popa
stos
pop
rorb
push
push
or
mov
inc
push
inc
or
push
stos
mov
jmp
in
or
incb
pop
cld
push
mov
leave
shll
aas
and
repnz
push
pusha
or
push
les
sbb
out
pop
sbb
inc
jns
inc
clc
cld
ljmp
add
out
push
add
xor
not
aaa
pop
lds
and
out
mov
rcll
rcrb
nop
int
xor
test
movsb
sbb
push
adc
push
dec
insb
xchg
ja
loope
imul
push
push
or
or
dec
push
fisubrs
and
cvtps2pi
mov
push
and
loopne
push
sub
mov
jae
dec
out
shrb
std
loop
sbb
dec
push
mov
push
mov
nop
lods
or
cltd
or
loop
fs
jg
inc
mov
inc
or
sub
push
mov
xorl
dec
lods
add
adc
mov
push
mov
push
test
dec
push
cld
lcall
push
or
mov
mov
inc
inc
dec
or
jne
pop
adc
orl
icebp
es
or
mov
xor
dec
cmp
adc
or
or
xor
bound
xchg
and
inc
mov
pop
sti
xchg
shll
add
mov
dec
xor
mov
or
arpl
push
sub
mov
mov
sti
out
xor
lcall
mov
sbb
push
cmc
push
xor
push
pushf
std
cltd
add
sbb
in
cmp
push
pop
jno
adc
mov
cld
addl
jg
mov
mov
inc
daa
adc
je
pop
xorb
mov
and
arpl
stos
xorl
dec
dec
add
or
outsl
ljmp
cli
pushf
add
mov
lahf
add
inc
lcall
pop
jns
sbb
imul
adc
push
sub
add
push
mov
test
sub
lcall
jo
and
in
cmpb
imul
adc
sub
pop
push
or
sbb
pusha
xor
int3
das
mov
push
mov
scas
adc
gs
add
push
dec
jno
pop
mov
jl
push
jne
shrl
xchg
outsl
bound
push
aas
xchg
lcall
and
punpckhbw
dec
push
repnz
dec
push
test
js
dec
dec
lret
lea
pushf
insl
adc
addr16
mov
push
push
jbe
mov
outsl
inc
mov
adc
hlt
clc
loop
xor
pop
cmp
lods
adc
out
xor
loopne
inc
test
decb
in
orb
adc
cs
adc
xlat
inc
enter
pusha
push
push
or
cmp
bound
andl
dec
daa
pop
add
add
aad
inc
push
pop
mov
arpl
push
inc
adc
or
dec
mov
add
stos
mov
sbb
idivl
repnz
cmp
sbbb
xorl
push
test
aaa
sbb
aad
xlat
inc
stos
or
adc
nop
inc
push
push
in
dec
fsubrl
push
add
fstl
popa
and
ja
lods
add
pop
repnz
fs
insl
rcrb
pop
xlat
or
inc
pop
xchg
pusha
pop
and
add
enter
insb
pop
jne
push
adc
js
imul
mov
cmp
mov
sbb
rcrl
fcom
fistpl
push
push
push
or
in
pop
dec
and
pop
call
loop
ljmp
gs
xchg
push
adc
lods
adc
aad
push
dec
leave
push
xor
dec
xchg
or
push
in
mov
dec
push
sub
fbstp
or
mov
sbb
or
push
xchg
adc
int
push
call
ret
loopne
cmp
push
or
xchg
cmpsb
daa
cmpsl
or
and
add
test
out
sti
sbb
or
sbb
and
pop
jp
je
rcrl
insb
xor
inc
jae
xchg
pusha
cmp
rcr
in
aad
lods
xchg
loope
dec
hlt
outsb
xor
ret
test
bound
andl
je
push
repnz
dec
lcall
popa
push
sub
cld
pop
orb
push
std
lods
adc
ljmp
add
mov
imul
js
sbbb
mov
push
aam
inc
leave
dec
mov
bound
pop
sbb
fistps
adc
sbb
or
shl
cmp
ss
sbb
xchg
insl
arpl
cmp
or
hlt
add
jno
imul
and
add
adc
addl
jne
lcall
dec
insb
sbb
repz
push
or
insb
add
sub
pop
push
cwtl
jl
lock
mov
add
adc
cmp
mov
push
cs
xchg
loop
test
or
dec
adc
mov
cltd
or
in
push
adcb
pop
sbb
call
lds
mov
cmp
ja
mov
inc
inc
je
fsubl
daa
jb
inc
jb
push
push
xchg
mov
pop
inc
sbb
push
aas
sbb
adc
lods
pop
pusha
pop
lcall
mov
adc
adc
loopne
push
stos
or
in
test
inc
jle
imul
aaa
pop
cmp
js
jo
push
bound
outsb
daa
cs
jns
push
pop
sbb
fimuls
mov
and
sub
sbbl
mov
inc
adc
or
rorb
ficompl
mov
adcb
mov
sub
inc
mov
icebp
and
jno
cmp
sbb
in
add
adc
push
in
test
enter
adc
and
add
popw
push
mov
jl
aam
xor
pop
adc
or
add
fs
dec
enter
je
xchg
or
test
daa
scas
int3
call
jbe
or
int
lods
and
ljmp
xchg
or
sbb
test
adc
and
pusha
mov
or
jp
insl
inc
push
or
pop
fcmovu
or
mov
fidivl
and
mov
jno
push
ja
ret
dec
pusha
add
inc
hlt
add
loope
jl
dec
pusha
arpl
je
std
mov
pusha
mov
jl
gs
inc
sub
dec
jne
bound
pop
addr16
inc
push
mov
das
push
push
imul
jns
mov
sbb
mov
push
dec
adc
pop
fimuls
mov
and
sbb
loop
outsl
adc
test
out
sub
push
inc
jo
pop
mov
xor
inc
sub
insl
dec
into
add
pcmpeqd
ret
rorl
add
xor
in
and
enter
cmp
and
dec
jae
or
sbb
adc
jae
pop
adc
add
dec
adc
cmp
xor
xor
aaa
xor
xor
je
ss
ja
jns
cmp
imul
add
jbe
inc
push
js
add
xor
js
ljmp
xor
push
inc
inc
inc
pop
push
inc
push
add
js
insb
push
inc
insb
xor
inc
fisttpl
jp
add
arpl
je
jbe
popa
jno
push
push
dec
dec
dec
call
inc
dec
inc
inc
dec
dec
add
ret
and
or
pusha
sbb
push
lcall
call
fcoms
out
sbb
sbb
aad
ljmp
xlat
jp
icebp
mov
call
xor
movsb
andb
popf
xor
push
and
std
out
sbb
pushl
out
lcall
rcrl
iret
lods
addb
icebp
mov
jmp
push
call
stos
gs
fwait
jecxz
mov
das
adc
repnz
xor
pushl
out
xchg
add
xchg
lds
ljmp
pop
sbb
incl
pop
ja
in
dec
call
pop
and
inc
outsb
sub
xlat
stc
or
ljmp
sti
inc
jne
and
xchg
push
pushf
bound
sbb
jp
sbbb
jns
cmc
mov
in
pop
pop
adc
repz
pop
adc
dec
xchg
dec
push
xor
pusha
jle
jecxz
std
lcall
mov
test
mov
repz
icebp
mov
jle
and
je
cld
pop
out
daa
jo
bswap
add
and
gs
mov
call
dec
jecxz
pop
lret
xor
test
mov
mov
cmp
mov
lcall
test
cltd
loope
popf
mov
xor
call
cmc
cmc
push
inc
rcr
insb
dec
jno
clc
ds
popf
loopne
icebp
cmp
ret
cmp
lcall
or
fisubs
mov
call
xchg
push
lock
in
adc
sbb
and
jb
mov
cltd
lock
mov
insb
out
clc
add
incl
dec
fcomi
cmp
jmp
leave
mov
je
jmp
sub
shll
or
outsl
mov
pop
lds
scas
push
lds
sbb
fsubl
mov
call
mov
sbb
jmp
push
xchg
xor
mov
outsl
roll
pop
out
pop
cs
movsl
ja
cli
inc
je
es
dec
cmpsb
aaa
pop
call
or
push
les
lahf
jmp
add
xlat
push
adc
adc
cmpsb
xchg
ljmp
lds
and
sti
inc
lea
stos
stos
mov
sbb
notl
std
aad
call
andl
movsb
mov
pop
lods
jmp
aad
sarb
iret
jg
mov
mov
xchg
xchg
icebp
outsl
clc
inc
dec
jbe
pushl
rcr
and
push
dec
mov
daa
mov
sbb
mov
xchg
push
adc
push
pop
test
mov
das
bound
test
jno
inc
inc
loopne
mov
pop
pusha
pop
mov
cwtl
jae
jmp
sbb
mov
pusha
in
mov
lret
lods
in
xor
or
push
adc
and
or
scas
clc
pop
rclb
jae
and
lods
in
mov
lods
mov
incl
inc
push
pop
das
xchg
stos
repz
pop
and
clc
cli
ret
push
pop
cmp
incl
iret
add
test
in
lret
and
sti
fcmovnbe
pop
fsubl
cmp
dec
lret
sbb
aam
mov
mov
xor
mov
decl
push
iret
movsb
push
push
mov
jl
aad
data16
adc
push
sub
jmp
xlat
fcoms
pusha
adc
mov
sbb
or
out
inc
repnz
mov
add
or
cld
mov
and
xchg
inc
mov
mov
out
aas
test
movsb
test
popf
pop
mov
or
pushl
pop
arpl
push
cwtl
xchg
stos
movsl
xchg
cmpsl
xchg
lds
inc
push
aas
decl
daa
hlt
cmp
jp
leave
test
cmp
xlat
shl
test
call
js
pop
sub
push
sub
xchg
fildll
pop
roll
cmpsl
test
pushl
or
inc
jae
pop
arpl
imul
mov
mov
jl
inc
cmc
fwait
movsl
out
add
add
clc
jecxz
dec
xchg
movl
fwait
sub
xchg
inc
mov
js
jno
inc
jno
adc
lret
rcll
mov
incl
adc
jmp
jnp
int
mov
adcb
jns
dec
inc
xchg
cmpsl
out
cli
gs
cmc
xchg
test
xchg
jns
xchg
out
xchg
push
sar
out
scas
push
lret
decl
jge
sahf
mov
loope
xlat
cmp
insb
dec
or
adc
ljmp
in
popf
dec
lahf
sub
cltd
insb
dec
mov
push
xor
hlt
cmp
push
push
popa
cmpsl
out
je
dec
adc
outsb
sub
cld
jmp
les
xchg
xor
pop
mov
or
fcomip
add
neg
mov
xchg
setns
dec
jle
mov
subl
ljmp
jecxz
je
xchg
test
rol
out
cmp
int3
xor
loopne
insl
outsl
in
les
loopne
enter
je
push
lods
hlt
adc
push
addr16
mov
out
cli
pop
stc
aam
jle
shll
push
sub
push
add
stos
fnstsw
fwait
scas
sub
xor
enter
nop
cmp
lcall
and
rclb
cmp
cli
xchg
test
or
popf
jne
outsl
daa
insl
inc
pop
mov
mov
loopne
and
lods
adc
fidivl
clc
test
cmp
inc
in
xor
mov
das
sarb
sub
popa
lahf
loopne
pop
sbb
les
mov
call
push
fdiv
inc
mov
pop
cld
addl
mov
push
lcall
sbb
out
mov
in
add
in
mov
jne
outsl
mov
mov
lcall
ljmp
cltd
pop
ret
ret
hlt
mov
stos
repnz
loopne
sbb
decb
lock
pop
mov
push
pushf
into
movsl
jl
cmp
fldt
inc
adc
scas
lahf
mov
xlat
or
cmpsl
cmp
data16
cli
repnz
and
pop
or
jnp
sbbl
sarl
mov
jb
add
lock
add
jle
cwtl
je
cld
lods
aas
ljmp
cltd
stos
inc
jbe
dec
add
stc
ficompl
out
lahf
xor
mov
mov
ss
mulb
pop
dec
cltd
lret
shl
aam
outsb
mov
addb
mov
iret
js
cmp
cmc
test
test
std
lcall
cmp
pop
fidivs
dec
push
sbb
into
pop
incl
and
add
jecxz
sbb
push
sbb
stos
mov
sbb
out
icebp
fs
lea
out
sbb
int
inc
xor
fists
je
das
sub
out
fcoms
mov
decl
xor
inc
jnp
and
dec
call
mov
mov
add
test
cmp
push
adc
loopne
pop
cmpsl
push
mov
mov
pop
cmc
outsl
mov
ljmp
mov
ds
sub
xor
shll
imul
xor
mov
daa
fwait
rcrb
popa
stc
fnstcw
sub
xor
pushl
movsb
xor
int
loopne
movsb
and
mov
sub
inc
add
pop
stos
scas
ljmp
inc
push
sub
mov
and
insl
stos
lock
or
jne
dec
lea
mov
sbb
push
hlt
sbb
pop
sbb
sub
mov
xchg
outsl
mov
popf
fistpl
fcomip
in
mov
enter
data16
repz
xlat
lea
cmpsb
out
adc
incl
in
pusha
jo
push
clc
in
scas
and
shll
imul
or
cmc
lret
sbb
and
adc
cmp
pop
mov
push
clc
ja
ljmp
les
push
aad
cmp
add
or
jae
movsb
shlb
jmp
outsl
cmp
out
xchg
pop
adc
loop
rcrb
pop
jl
xor
lahf
lcall
das
data16
je
lods
cmc
jno
orb
out
out
adc
incl
dec
movsb
arpl
insb
mov
mov
mov
inc
aad
jmp
in
out
cmp
ja
cld
outsl
clc
test
cmp
xor
xor
out
icebp
add
push
pushf
lcall
add
inc
imul
pop
and
dec
js
sbb
sbb
mov
or
jg
push
pop
nop
pop
fidivrl
decl
cltd
push
incl
cmp
mov
out
jne
dec
push
and
sti
or
loopne
aas
fistpl
mov
out
mov
mov
jg
leave
test
aaa
inc
rcll
scas
sub
loop
popf
in
lret
xchg
cmpsb
test
push
mov
and
mov
lahf
sbb
into
cmp
icebp
or
pop
std
mov
xchg
cld
faddl
andl
and
outsl
decl
rcrl
cld
xor
addl
xchg
jmp
adc
cmp
lods
mov
push
mov
ret
xor
lret
sub
add
add
push
xor
in
jbe
xor
in
idiv
decl
lock
or
and
jbe
lea
stc
or
in
cmp
and
sbb
pop
sbb
cmp
movsl
push
std
incl
sti
inc
pop
cmp
cli
xchg
dec
rolb
jo
adc
fdivrl
mov
out
dec
pushl
mov
pop
cmc
jae
std
xchg
cmpsl
test
pop
fcompl
pop
jo
push
dec
ljmp
stc
push
test
and
sbb
fstps
add
cmpsl
cmp
data16
pop
push
sahf
jmp
mov
sub
xchg
fnsave
push
sar
mov
mov
sbb
cmp
push
jno
adc
nop
iret
adc
test
adc
mov
mov
ret
or
sbb
sub
dec
dec
inc
call
mov
pop
cmc
jge
cmp
push
xor
in
add
fcomip
xchg
in
lret
outsb
xor
data16
lcall
sbb
rcl
pop
and
pop
and
cmp
in
mov
rcr
cld
jns
je
scas
test
sub
cmp
int
outsb
cs
sub
mov
fwait
inc
or
mov
push
loope
dec
mov
cmc
push
push
out
sub
lock
ret
cmp
unpckhps
pushl
lret
lahf
mov
push
fiaddl
fidivs
jp
mov
pusha
mov
idiv
mov
jmp
pop
rolb
loop
mov
icebp
sbbl
mov
adc
sbb
out
cmp
cmp
or
pushl
cs
pop
cmp
lret
push
xlat
sbb
mov
and
or
int
cld
push
aas
fsubl
jno
pop
cld
loopne,pt
call
mov
push
push
mov
incl
sub
jbe
enter
jge
sbb
cmpb
out
add
incl
int3
xchg
je
test
xchg
fwait
inc
mov
rcrl
lahf
ljmp
jg
out
inc
insl
arpl
push
fwait
repz
mov
cmp
dec
xchg
loope
out
mov
adc
mov
into
sbb
jge
clc
add
mov
mov
out
xchg
xchg
xlat
xchg
mov
movsl
mov
xchg
mov
inc
push
dec
dec
jp
or
add
incl
and
fwait
cltd
push
mov
jecxz
in
xor
mov
setne
jne
in
pop
cltd
mov
jge
in
pusha
mov
and
js
push
inc
in
hlt
clc
push
sub
int3
mov
mov
or
adc
jle
mov
in
mov
lods
int
loope
sbb
bound
hlt
mov
dec
enter
outsl
push
call
add
addr16
stos
xor
shll
test
aaa
xchg
jbe,pn
jmp
shll
and
xchg
cmp
or
in
pop
test
inc
popa
fs
jl
sub
push
xor
jb
lcall
cmpl
ljmp
ss
adc
in
dec
pop
pusha
sub
pop
decl
leave
lcall
cmp
fwait
aam
inc
dec
filds
push
hlt
imul
and
out
fcomip
sub
sub
jecxz
fstps
xchg
clc
iret
xchg
out
cld
pushl
inc
lcall
dec
sbb
jp
jmp
mov
ja
mov
jb
test
mov
dec
or
adc
outsl
jg
push
cmp
jnp
bswap
movsl
jno
xchg
test
sub
in
movsl
xchg
fdivrl
pop
mov
shll
ljmp
mov
cmp
cli
xor
mov
add
fistps
fsqrt
jne
add
jp
insb
mov
jle
push
sar
or
jg
mov
adc
push
adc
cmp
incb
js
jno
rcl
pop
push
std
jg
decb
je
movl
sbb
jb
mov
inc
and
enter
mov
push
xchg
ljmp
cli
cmpb
loop
jle
stos
mov
push
dec
dec
inc
push
dec
inc
add
inc
jb
icebp
decl
pop
ja
bound
push
outsb
insb
jne
inc
jns
insl
push
pop
add
push
lcall
pushl
popa
arpl
xor
push
xor
pushf
add
push
push
dec
push
inc
pop
inc
inc
dec
outsl
lcall
add
xor
pushw
add
js
jno
outsl
jbe
push
ja
popa
dec
mov
push
mov
mov
jbe
push
dec
popa
jb
add
jo
push
outsl
dec
inc
add
popa
ss
mov
jae
inc
inc
dec
inc
inc
cli
dec
adc
add
cs
mov
dec
push
inc
inc
push
dec
dec
push
push
jb
jbe
arpl
mov
outsb
gs
push
dec
inc
inc
outsl
jno
bound
fidivs
js
outsb
lock
sahf
push
aaa
jb
xor
inc
inc
push
inc
push
inc
push
inc
dec
dec
dec
dec
ljmp
pop
sub
aaa
dec
inc
push
jne
jae
je
push
xor
jne
jg
pushl
push
inc
dec
push
push
xor
cmp
xor
outsl
in
testb
imul
inc
inc
dec
add
dec
push
dec
push
ljmp
dec
dec
inc
inc
dec
push
dec
push
sbb
push
dec
xor
jb
dec
add
inc
inc
push
push
sti
xchg
jne
dec
add
push
je
add
aaa
xor
flds
repz
popa
outsb
jae
imul
aaa
xor
lcall
popa
insl
mov
jae
pop
cld
mov
push
dec
inc
dec
inc
hlt
push
add
ja
jno
pop
cld
pop
insb
test
jbe
outsl
xor
push
je
jno
ja
mov
divb
jae
mov
dec
dec
pop
jb
pop
xor
loopne
fisubrs
xor
jl
mov
pusha
push
dec
add
js
insl
jo
xor
imul
outsl
outsb
jns
pop
pop
push
dec
push
or
sbb
adc
dec
xor
lcall
insl
ja
arpl
data16
imul
imul
ja
xor
ds
imul
std
fbstp
push
jae
jno
dec
jns
bound
xor
inc
xor
data16
add
lock
dec
xor
inc
dec
xor
adc
xor
jno
js
inc
xor
dec
dec
ja
movsb
sbb
stos
loop
xor
push
dec
inc
inc
scas
inc
pop
and
mov
fs
push
inc
push
mov
push
push
popa
dec
imul
clc
aaa
adc
je
je
insb
inc
push
bound
mov
das
cwtl
push
jno
js
pop
inc
dec
dec
push
dec
inc
push
push
push
dec
jne
or
push
je
fcompl
mov
call
jno
xor
ja
addr16
gs
push
addr16
pop
dec
dec
xchg
mov
inc
push
inc
push
aaa
imul
dec
push
cmp
out
cmp
add
loope
std
fistl
xor
imul
dec
push
push
push
dec
bound
dec
push
jae
jg
xchg
push
call
dec
ja
xor
imul
inc
imul
push
jbe
push
bound
jo
mov
push
jns
jbe
pop
bound
outsl
jo
mov
push
inc
mov
rcrl
inc
in
cmp
jae
mov
jb
aam
scas
loop
xor
xor
xor
dec
ret
icebp
adc
popa
push
dec
je
xor
xor
insb
outsb
add
fnstsw
arpl
push
sub
push
add
jg
ret
mov
ja
push
shl
sbb
je
push
insl
imul
inc
xchg
push
int
jl
xor
aaa
ss
sub
push
cmp
sbb
adc
je
jb
inc
pop
adc
xchg
inc
jbe
cmp
push
mov
insb
imul
js
js
popa
pop
hlt
sbb
addr16
pushw
add
jo
push
dec
xor
jp
dec
data16
push
ja
push
jns
push
insl
push
sbb
popa
inc
data16
dec
push
dec
push
cmc
sbb
dec
outsb
dec
push
imul
xor
jbe
aaa
mov
xor
dec
push
lods
push
inc
dec
pop
inc
insb
inc
pusha
xor
or
aam
xor
sub
dec
adc
sbbl
out
js
add
jae
bound
jo
ja
je
pop
add
pop
pusha
push
popa
adc
imul
push
bound
inc
and
pop
dec
inc
dec
pop
cmc
stos
sub
popa
addr16
inc
dec
dec
push
inc
cmp
inc
push
push
sti
ja
push
jae
imul
insb
dec
subb
lods
loop
bound
ja
adc
push
popa
jno
or
add
dec
ja
jbe
jo
ret
mov
sub
dec
push
jb
cmp
stos
pop
push
cwtl
ss
push
mov
push
push
dec
pop
xchg
imul
push
dec
push
cmp
cli
lcall
into
pushf
or
add
mov
outsb
pop
arpl
inc
inc
adc
out
push
dec
push
dec
push
mov
inc
popa
mov
inc
dec
sub
ret
jl
xor
jle
outsl
mov
cwtl
popa
ss
imul
jbe
dec
inc
pop
stos
push
xor
mov
add
insb
arpl
or
fidivs
dec
cmp
js
cli
push
sti
xor
loopne
js
inc
arpl
xchg
sub
dec
inc
push
inc
outsl
outsb
jp
shlb
sub
mov
cmp
push
mov
fiadds
adc
and
inc
dec
insl
inc
or
gs
xchg
dec
pop
dec
inc
inc
dec
push
hlt
and
out
dec
lock
dec
push
repnz
mov
mov
enter
pop
inc
xchg
sub
dec
xlat
sub
or
push
dec
jno
dec
adc
push
jne
inc
push
dec
and
add
out
add
insl
popa
cmp
nop
aam
add
dec
pop
dec
pop
in
test
inc
out
les
push
push
cmp
les
sbb
xlat
sbb
in
inc
lods
and
mov
insl
popl
fs
inc
lret
shll
data16
aaa
xor
rolb
xor
push
or
into
imul
jle
das
sbb
fs
jae
jne
jns
insl
outsl
sbb
pop
xchg
xor
cwtl
shlb
push
scas
das
xor
cmp
inc
dec
push
pop
cmpb
push
loope
xchg
inc
and
ja
loopne
rcrb
jo
inc
fisubs
bound
push
push
inc
pop
jns
push
mov
imul
imul
scas
cmpsb
ljmp
or
test
js
adc
add
outsl
stos
and
sbb
popa
outsl
ja
test
inc
adc
in
scas
push
inc
and
xlat
jg
push
jb
xor
ja
dec
nop
xor
addr16
js
jne
loopne
dec
inc
sbb
fsubrl
jns
insl
cmp
dec
and
inc
push
movsb
pop
push
sbb
sub
mov
pop
dec
testb
outsl
xchg
inc
push
inc
push
inc
push
movsb
jl
push
inc
push
xor
inc
ss
insb
out
outsb
xor
outsl
decb
mov
sub
dec
cmp
or
jle
inc
inc
push
xchg
mov
mov
movsb
divb
clc
pop
lock
inc
inc
pop
push
mov
dec
and
imul
xchg
add
gs
ja
gs
xchg
push
pop
dec
adc
mov
mov
dec
andb
push
je
push
add
es
into
dec
adc
inc
dec
dec
dec
addb
sub
sub
pop
jl
je
arpl
push
aaa
clc
popa
pop
push
or
outsb
xor
jns
or
push
dec
dec
dec
dec
ja
xor
push
push
push
jns
mov
push
fsubr
inc
addr16
int3
sahf
add
hlt
mov
insl
and
pushf
push
push
dec
dec
mov
push
inc
inc
push
inc
pop
sbb
mov
xor
push
arpl
cli
mov
clc
pop
xor
sbb
jbe
push
dec
push
push
fs
mov
sbb
push
dec
dec
dec
dec
jno
fs
aad
mov
pop
insb
inc
in
inc
loope
and
push
dec
and
bound
sub
outsl
jns
inc
pop
push
pop
and
dec
jb
jo
dec
and
dec
jb
or
mov
ds
push
sub
push
inc
movsb
dec
add
push
insl
inc
jns
js
jno,pt
mov
push
cmp
imulb
sbbb
add
lret
inc
inc
dec
inc
cmp
adc
fdiv
inc
push
sub
push
dec
fs
pop
dec
mov
sub
mov
add
insl
fs
popa
jo
addr16
out
add
fwait
inc
iret
inc
xor
fs
adc
sub
sub
loop
es
dec
lods
les
xchg
mov
fwait
inc
call
jbe
arpl
mov
push
js
ss
mov
mov
test
jns
dec
jae
pop
add
lret
dec
imul
push
xchg
lods
jo
jb
dec
imul
scas
or
mov
xchg
inc
mov
xor
lock
divb
outsl
outsb
xor
sbb
push
aam
mov
inc
pop
inc
push
jns
inc
incl
or
mov
add
jbe
push
jne
inc
xchg
aad
insl
call
xor
push
jno
outsl
lock
lret
mov
pop
lods
push
cmp
xor
mov
ds
push
dec
insl
ja
and
outsl
stos
popa
arpl
fs
push
push
push
fs
fwait
addl
adc
add
and
inc
xchg
dec
push
push
push
inc
popa
addb
inc
cmpsb
stos
jle
adcl
jne
dec
arpl
fs
push
cwtl
inc
pushf
push
push
bound
mov
movsb
clc
push
dec
pop
je
mov
ret
scas
pop
in
dec
je
xor
push
push
xor
mov
adc
add
fcom
adc
jb
je
jb
js
ds
ret
stos
xor
push
cmp
outsb
mov
cmpsb
adc
jne
cli
sub
pop
addr16
add
jns
outsb
dec
fs
mov
pop
inc
mov
jb
pop
sub
sub
cmpsb
or
je
push
call
add
ror
mov
jno
cmp
xor
dec
xor
mov
rol
in
fcomps
lods
pop
insb
dec
adc
jle
cs
inc
dec
mov
inc
push
dec
push
pop
loop
inc
pop
mov
mov
inc
adc
movsb
dec
stos
outsl
xchg
push
dec
cmp
jno
jae
bound
inc
xchg
sbb
jb
push
in
adc
popa
xor
inc
dec
mov
dec
insb
bound
dec
outsl
stos
mov
xor
bound
mov
incl
jns
imul
out
jb
je
je
cli
or
mov
or
ret
pop
ja
mov
push
lock
sbb
push
push
inc
bound
loop
push
inc
data16
mov
push
mov
lcall
bound
roll
or
cwtl
sbb
xor
dec
jo
dec
gs
cmpsb
and
push
outsb
inc
jae
push
fnsave
cmp
dec
fcoms
xor
loopne
lods
mov
adc
push
mov
fs
outsl
addr16
inc
pop
icebp
lcall
shrb
push
data16
arpl
push
dec
push
inc
push
inc
stos
lods
ljmp
insb
jae,pn
mov
add
inc
arpl
push
jbe
adc
push
insl
or
jbe
js
xor
sub
fimull
cmp
jo
and
js
stos
lcall
push
sbb
or
jne
push
inc
push
push
mov
roll
adc
push
inc
faddl
inc
imul
push
jns
xor
in
imul
sub
insb
insb
outsl
out
inc
bound
jae
rol
xor
loop
ss
addb
lret
push
dec
jno
or
sbb
repnz
xchg
insb
or
pusha
test
cmp
and
jo
outsb
push
sbb
mov
pop
loop
push
insl
outsb
inc
push
dec
push
je
imul
dec
adc
aam
jp
pop
sbb
inc
inc
in
mov
ljmp
pop
xor
push
xor
js
es
pop
lcall
imul
cld
adc
lods
int3
or
push
push
mov
jle
adc
jae
push
aaa
dec
inc
sahf
call
jge
inc
jbe
push
inc
push
jbe
arpl
jo
js
imul
cld
sub
inc
dec
bound
pop
movsb
nop
push
rorb
push
es
jne
add
jbe
or
jbe
add
mov
mov
xor
inc
rorb
dec
dec
fsub
pop
push
lods
push
pop
push
inc
jl
dec
push
fs
cmpsb
jb
stos
push
aaa
ja
ds
ljmp
jb
mov
and
dec
jecxz
or
ja
imul
inc
xchg
inc
fs
mov
add
je
sbb
mov
jecxz
arpl
jns
bound
dec
dec
push
jl
imul
jns
lods
mov
mov
jbe
shrb
call
into
push
pusha
pop
inc
js
aaa
shlb
shrb
sub
bound
fidivl
push
jno
adc
mov
jno
arpl
inc
push
rcrb
mov
dec
push
or
inc
inc
sub
push
dec
pop
or
pop
mov
call
push
ret
sub
mov
cld
xor
push
and
inc
add
ja
inc
js
fs
add
outsb
stos
add
add
jbe
dec
xchg
dec
push
imul
push
push
inc
inc
jne
lods
test
test
data16
push
jo
jae
push
add
mov
push
xor
xchg
rcl
add
mov
repnz
and
mov
and
les
mov
inc
lahf
mov
orl
int3
lock
and
orl
cs
adc
mov
je,pt
movsl
sbb
or
or
push
imul
pop
dec
insb
sbb
xor
add
mov
adc
push
imul
adc
cmp
mov
sbb
out
inc
mov
push
jmp
xchg
fadds
mov
ss
rcll
pop
sbb
rcrl
pop
or
mov
xchg
add
insb
fisubrl
mov
dec
pushf
lods
push
pop
cmp
jge
scas
clc
jb
cmp
imul
inc
mov
arpl
push
ret
insl
inc
jae
notb
daa
pop
das
push
xchg
setb
or
sbb
out
sbbb
dec
xor
faddp
add
or
xor
cmp
inc
cld
adc
push
add
out
xchg
dec
or
lea
pop
test
fwait
dec
mov
scas
or
dec
lods
nop
sub
sbb
jecxz
fmul
in
pop
psubsb
fcmovnbe
and
jl
sbb
ror
mov
cmpb
pop
insl
int
sub
popa
test
nop
cmp
ja
and
inc
aas
cmc
xchg
push
divb
jns
add
stos
mov
xchg
ljmp
sub
pop
repnz
sbb
cmc
sub
pop
sbbb
and
jo
adc
fistl
or
adc
lahf
xlat
xchg
fbld
cmp
add
cltd
add
popa
add
add
mov
mov
mov
pop
aaa
cmp
insl
jbe
sub
mov
xchg
and
stos
in
sbb
repnz
push
push
mov
pop
and
adc
roll
jne
cs
fs
inc
mov
shl
or
movsl
dec
add
out
mov
fwait
stos
jns,pn
jns
xor
ffreep
aam
pop
lret
insb
notl
sbb
icebp
mov
xchg
push
add
pop
inc
cmp
or
pop
or
mov
call
add
je
insb
xor
add
loope
mov
sti
sbb
ficomps
inc
mov
decl
mov
add
add
xchg
out
sbb
dec
into
popa
mov
in
sub
push
out
pusha
mov
xor
jne
lret
aaa
jle
xchg
dec
add
mov
cmpsb
sti
xchg
ja
fwait
je
sbb
sbb
adc
jne
pop
scas
push
push
repz
xchg
outsl
minps
pop
in
pusha
dec
jb
add
sbb
pop
sub
mov
mov
dec
aad
rcrb
ljmp
dec
push
iret
dec
sub
xchg
inc
imul
adc
addr16
jne
pop
mov
xor
ret
stos
add
mov
leave
std
add
popl
pop
xor
xchg
add
push
mov
ret
inc
or
push
mov
rcll
ja
push
or
xor
jb
jbe
imul
shlb
sbb
add
push
fisttpl
stc
popf
or
loop
mov
inc
xor
andb
fs
xor
xor
xor
mov
stos
or
insl
mov
and
loope
int
adc
rorl
add
test
inc
enter
stos
inc
pushf
cmpsl
inc
aad
sbb
adc
shl
dec
mov
bound
sbb
inc
or
js
out
fdiv
call
sahf
jne
subl
jle
inc
aas
pop
ret
mov
or
cwtl
and
mov
popf
mov
dec
sub
mov
mov
test
xor
mov
bound
add
cmc
je
bound
pop
jl
lods
add
adc
sub
and
inc
mov
pop
loopne
inc
adcl
xorb
inc
sbb
mov
nop
test
ja
idivl
and
mov
fldcw
inc
jns
loopne
xchg
pop
cmovo
in
or
loopne
jge
out
push
xor
data16
jecxz
lods
sbb
pop
adc
push
ret
or
stos
icebp
mov
or
mov
xor
adc
cmp
popa
push
enter
xchg
out
cmp
and
aad
add
leave
add
arpl
popf
daa
jns
push
and
es
es
ret
movsb
loopne
dec
fsts
add
dec
xlat
js
sbb
ror
mov
sub
inc
or
dec
pop
add
pop
or
or
es
inc
insl
inc
or
shrd
and
pop
mov
mov
cmp
mov
add
mov
push
fadd
push
mov
mov
cmp
je
push
mov
cmpsb
add
sahf
in
xor
push
das
int3
in
sbb
jns
xchg
movsl
loopne
push
insl
pop
and
es
leave
or
sahf
aad
enter
jne
jg
je
stc
in
cmc
jecxz
mov
leave
leave
push
dec
cmp
enter
add
cmpsl
mov
fwait
mov
nop
testb
cmpsl
fstpl
pop
imul
shll
dec
jns
aad
pop
imul
iret
lcall
cld
push
pop
mov
popa
popa
enter
mov
push
subb
adc
sbb
push
imul
leave
pushl
xchg
adc
adc
push
bound
pusha
and
xchg
cld
push
push
xchg
std
int3
stos
jmp
scas
out
pop
ds
cmc
pop
arpl
jp
add
aas
jge
dec
xchg
cltd
xor
inc
shl
outsl
sti
gs
ret
dec
imul
cli
imul
mov
xchg
int3
jns
jne
fmuls
ficoml
movsl
jae
jb
insl
ret
cmc
sarb
mov
mov
sbb
push
bound
or
pop
shll
sub
rolb
outsl
add
cld
xchg
outsb
mov
or
nop
push
lea
filds
in
sbb
sub
jno
movsb
int3
dec
sub
out
xchg
mov
aam
add
addr16
mov
push
mov
das
inc
inc
stos
or
addl
dec
mov
mov
jo
and
inc
fstpl
negb
shrl
inc
out
sbb
jmp
xor
shll
ss
dec
mov
xchg
pop
fsubrl
sub
add
mov
jmp
ja
loope
xchg
jecxz
adc
mov
imul
xor
loope
or
out
movsb
sbb
sbb
call
clc
inc
rcll
push
shlb
in
enter
inc
sbb
xchg
dec
jbe
sbb
sahf
jnp
in
cs
and
mov
enter
or
mov
sub
dec
lods
dec
js
jns
lods
mov
inc
cs
or
std
leave
push
sbb
or
repz
sub
and
inc
sbb
adc
in
rcr
jecxz
cmp
imul
insl
pop
daa
es
out
cmpsl
xor
adc
cltd
test
and
pop
mov
sbb
xchg
xor
pusha
add
sub
jle
in
mov
xchg
sbb
or
xchg
stos
dec
mov
xchg
addr16
add
in
enter
push
mov
jmp
adc
jle
xchg
cmp
enter
idivb
add
dec
cmp
cmpsl
or
inc
mov
pop
clc
outsb
lods
or
das
xchg
pop
stos
stos
out
cmp
in
das
dec
movsb
add
push
test
ja
roll
ret
shrb
movsb
jns
mov
test
pop
push
add
test
sub
les
je
xor
pop
sbb
push
ja
test
sbb
mov
insl
sbb
xor
adc
pop
mov
xor
loop
mov
dec
test
or
imul
lds
lcall
add
loopne
dec
cmpl
add
or
inc
mov
adc
inc
mov
addr16
sub
pop
add
cmp
test
xchg
sub
icebp
xchg
push
mov
mov
test
jbe
enter
pop
xor
sarl
lods
or
sub
leave
sbb
pusha
jmp
rcll
pop
push
add
repnz
lahf
jecxz
cmp
mov
inc
push
imul
jno
xchg
add
mov
jae
sbb
jmp
dec
push
xchg
push
xchg
cwtl
mov
and
pop
andl
inc
cmp
inc
push
gs
icebp
loope
popf
cwtl
sub
lret
test
lret
or
imul
movsb
mov
add
stos
roll
and
inc
push
adc
fildl
loope
es
mov
xor
es
xchg
lods
test
xchg
aam
aaa
adc
and
sbb
es
mov
enter
notl
add
lods
dec
imul
xchg
inc
je
add
imul
adc
out
mov
mov
sub
cmpsl
cs
sub
mov
lods
icebp
sbb
sbb
dec
jb
or
out
ret
pop
pop
jns
fldcw
ret
mov
inc
loop
cmpsl
cmpsb
xchg
hlt
lahf
ja
cwtl
repnz
mov
cmc
mov
leave
or
ret
push
jmp
dec
rcrl
fnstsw
jecxz
lock
xchg
sbb
ret
imul
inc
push
nop
xchg
fiaddl
pop
mov
pop
mov
popa
mov
movsb
cltd
sub
pop
arpl
add
add
mov
enter
das
and
sbb
xchg
out
sub
or
sub
fcmovnbe
mov
into
xor
adc
mov
adc
push
sysret
aaa
bound
push
xchg
mov
jo
pop
sub
dec
sub
mov
cmovge
jns
sbb
push
mov
xor
lods
pop
cmp
xor
lds
ss
arpl
jnp
imul
cmp
jne
push
mov
mov
mov
ja
std
push
es
push
push
aad
enter
pop
mov
and
xchg
mov
dec
xor
add
jnp
mov
xlat
dec
les
cmc
cld
lea
mov
sbb
roll
cld
in
push
xor
push
stc
leave
pop
jmp
shl
lock
sub
add
loop
mov
das
xchg
jns
testb
pop
mov
das
adc
mov
pushf
or
shlb
xchg
jb
cwtl
je
xor
clc
shlb
pop
fmuls
inc
add
jns
and
jecxz
or
cmp
dec
lcall
dec
aaa
push
repz
add
push
imul
movsb
ljmp
ficoml
dec
dec
adc
xor
jmp
xorb
inc
add
test
fiaddl
lock
adc
push
dec
cmp
push
aas
out
movsb
pop
fstps
nop
jge
push
push
sub
in
xor
xor
add
leave
cmp
and
aam
in
pop
adc
test
rolb
pop
mov
test
fildl
daa
in
push
mov
or
scas
sbb
fisttpll
cmp
repz
adcl
pusha
pusha
enter
jno
mov
adc
repz
or
mov
test
mov
xchg
mov
insl
sbb
cmc
adc
rcll
or
cli
cs
push
popf
adc
mov
es
sbb
mov
jne
mov
sbb
imulb
aaa
add
add
sbb
cltd
ja
dec
mov
add
adc
push
insl
or
fwait
and
dec
int3
or
and
icebp
and
fadds
mov
xor
cld
mov
push
cmp
jecxz
jle
mov
cltd
dec
sbb
jg
and
cmp
nop
pop
andl
mov
scas
sbb
xor
or
adc
repnz
scas
es
xchg
ret
push
adc
popa
jb
inc
dec
arpl
xor
inc
and
or
ret
sub
loop
es
xchg
out
es
sti
inc
add
jae
call
add
mov
dec
es
adc
sub
jae
or
cmp
ret
mov
vmovupd
push
sbb
sbb
movsl
ret
xchg
out
idivb
and
inc
test
icebp
sub
mov
sbb
dec
aaa
dec
jno
int
or
sbb
push
gs
and
shl
xor
ret
imul
loop
cmpb
clc
mov
xor
xor
into
push
jo
mov
std
pop
jo
dec
add
xchg
push
xchg
inc
sbb
add
push
scas
pop
shl
fcoml
sarl
pop
sub
test
dec
inc
ja
fiaddl
mov
and
cmp
pop
lcall
pusha
cmp
in
repz
out
push
or
jecxz
mov
int
int
push
shll
out
lret
arpl
adc
push
rcr
adc
dec
aaa
sbb
arpl
xchg
sub
iret
mov
pop
xor
adc
rorl
cmpsb
sbb
dec
cmp
stc
cmpsb
cmp
mov
jb
bound
xor
stc
mov
jmp
sti
mov
cmp
push
mov
jne
fnstenv
roll
stc
rorl
test
daa
stos
push
sbb
dec
aam
sbb
fidivrs
dec
loope
imul
or
mov
adc
pop
xchg
jl
or
jno
bound
adc
xchg
or
shrl
in
pop
and
pop
ret
shl
imul
cs
push
insl
adc
jno
pop
or
pop
cwtl
sub
sub
adc
sub
inc
pop
lea
xchg
mov
in
sbb
stc
add
push
in
xchg
stos
out
or
sub
push
pop
push
xchg
push
push
cltd
loope
mov
xorl
jl
xlat
inc
rcll
incl
in
xor
push
jne
mov
orb
arpl
mov
add
sub
sbb
lock
dec
jg
cs
xor
mov
fcomip
in
add
add
sbb
ret
inc
jb
fldl
fs
cmp
jl
pop
in
or
add
push
sarl
dec
movsl
fnstsw
jb
ja
xchg
orl
jmp
or
cmp
movsb
addr16
out
and
out
test
pop
clts
int3
sub
cmp
scas
xor
xchg
outsb
sub
sahf
imul
or
ror
int
orb
rcl
xlat
inc
add
push
ret
cmpsl
lea
nop
cmp
sbb
call
pop
sub
push
mov
mov
sub
subb
inc
xchg
cmp
sub
adc
ret
ret
arpl
js
popf
xor
pop
or
xor
xchg
mov
or
movsb
imul
mov
cmp
call
jae
and
xchg
shl
sbb
ss
inc
mov
mov
jmp
js
pop
sub
andb
or
ret
aaa
or
add
push
mov
test
pop
les
sub
ds
xlat
mov
push
ljmp
rclb
xchg
cmp
repnz
icebp
inc
std
pushf
jbe
sbb
sbb
and
std
or
add
mov
push
add
add
call
sbb
cmp
fadd
mov
inc
push
daa
jno
sbb
popa
std
dec
fdivrp
popf
xchg
clc
mov
lcall
or
fcomps
xchg
xor
shll
es
push
shrb
popa
rcrl
stos
insl
xchg
js
test
sub
dec
lcall
orl
jns
mov
add
add
scas
lea
or
ret
fimull
xor
jo
jae
add
test
cli
adc
adc
dec
mov
mov
cmpsb
jecxz
mov
lods
dec
mov
push
inc
aad
xlat
or
cmp
ljmp
notb
jnp
popa
mov
daa
xchg
adc
pop
frstor
adc
lods
cli
or
inc
cmpsb
or
sbb
push
loop
inc
xor
aad
dec
pop
cmp
pop
mov
pusha
rcl
jae
leave
mov
inc
loopne
andl
scas
push
and
jg
cmpsl
add
sub
les
push
xor
jne
xchg
movsl
mov
or
enter
mov
or
or
cmp
add
push
sub
mov
adc
in
sbb
int3
test
push
movsb
popa
sub
xor
cmp
rorb
pop
sbb
mov
cmp
loop
sbb
push
inc
leave
arpl
mov
dec
xor
push
aad
sub
add
lret
lea
xchg
add
sbb
test
daa
je
push
jmp
xchg
ja
pusha
mov
push
inc
push
xor
xchg
dec
jmp
mov
sahf
dec
add
test
scas
lcall
out
xchg
push
mov
mov
xor
aas
out
mov
push
fistpl
rol
pop
leave
xlat
and
popf
jp
leave
shrl
and
pop
ljmp
mov
xor
xorb
push
jg
push
addl
je
sub
and
push
sbb
push
mov
nop
cmpsb
sbb
dec
stos
sbb
cmp
xchg
mov
dec
sbb
aaa
je
icebp
std
jbe
push
bound
jecxz
inc
enter
cmp
add
fs
sti
shlb
popa
xor
push
and
inc
in
loop
mov
mov
dec
in
lods
cltd
aas
sub
loope
lods
test
push
mov
ljmp
mov
lcall
pop
ret
inc
out
or
pop
std
rorb
cltd
xchg
imul
sbb
xchg
pop
sti
pop
sbb
and
mov
mov
mov
dec
cmp
xchg
sarl
and
mov
ret
scas
jl
out
sbb
and
sbb
inc
add
jno
movl
mov
push
xorb
cmpsb
adc
xchg
xor
fimull
push
fchs
xchg
pop
lcall
sbb
xchg
loop
arpl
sub
pusha
cmp
shll
loopne
jp
mov
sbb
lods
sub
leave
adc
pop
pop
xor
popf
push
cmp
dec
lret
mov
push
lds
pop
push
insl
and
and
enter
notb
push
jae
iret
and
mov
sub
mov
lret
and
loop
out
incl
les
cmpsb
imul
out
mov
cmc
inc
mov
sbb
jmp
hlt
pop
push
add
xchg
and
add
pusha
dec
and
pusha
dec
mov
mov
cmp
push
adc
jo
pop
dec
arpl
mov
sub
inc
xchg
icebp
and
data16
femms
cmp
mov
repnz
idivb
pop
lea
sahf
xchg
xchg
or
cmpsb
push
cmpsb
daa
sarl
or
cmp
push
iret
test
dec
and
test
sbb
test
fs
jne
xchg
stc
sbb
xor
loopne
xor
stos
jne
test
add
cmp
popf
ficoml
push
cmp
push
sti
inc
or
adc
mov
insb
jne
shll
inc
xchg
adc
or
push
adc
mov
lock
sub
xorb
imul
imul
mov
ret
sub
stc
jge
jl
lahf
arpl
test
sub
cmp
and
mov
filds
push
popa
cmp
add
jno
in
leave
orb
mov
and
repz
ret
imul
cmc
or
mov
mov
mov
xorb
sbb
pop
nop
mov
pop
xchg
fstl
cmp
xchg
jo
push
push
in
jns
mov
sbb
mov
stos
xor
aam
xchg
push
pusha
jo
xchg
and
mov
push
pop
pop
cmp
xchg
rcl
add
ljmp
mov
fnstcw
sarl
movsl
ljmp
mov
addl
rorl
sub
ljmp
loope
pop
mov
adcb
lea
xor
push
pop
popa
int3
gs
push
or
xor
mov
xchg
mov
xchg
mov
xor
inc
rcr
add
out
pusha
lds
sbb
or
popa
sub
out
gs
fs
les
in
or
cmp
pop
fiaddl
push
adc
xchg
xchg
ficomps
daa
cmpsb
scas
xchg
fwait
imul
push
movsl
pop
dec
out
xchg
push
cmp
adc
cltd
or
fld
cli
dec
cwtl
bound
aad
fldcw
mov
shrb
lea
mov
sub
pop
adc
aad
pop
pusha
push
shl
or
jne
movsl
es
frstor
ds
mov
out
dec
push
adc
adc
sbbl
or
in
mov
xor
je
sbb
push
cmp
sbb
andl
mov
push
push
stc
adc
movsl
dec
enter
clc
cmc
es
mov
test
hlt
xor
add
test
leave
aas
lods
pusha
inc
testb
xor
mov
lahf
adc
dec
add
movsb
iret
pusha
shrl
cmp
shr
jge
mov
xchg
xor
xlat
shrb
and
pop
push
int
jb
xor
dec
lea
ficoms
daa
add
mov
popa
adc
mov
push
dec
xor
inc
insb
mov
pop
ret
inc
test
das
shll
pop
xlat
xchg
scas
mov
pop
jno
jno
rcrb
sarb
cld
sub
add
es
jmp
insb
add
adc
jge
push
inc
aam
daa
dec
ret
mov
adc
pop
cmpsl
stc
test
jb
jae
push
xor
popa
xor
xor
scas
jecxz
mov
rcrl
pop
xchg
rorl
cmp
adc
outsl
and
add
nop
inc
in
bound
cmpsb
in
add
add
pop
arpl
push
insl
xchg
loop
dec
cmp
jecxz
fiaddl
ja
push
arpl
dec
pop
add
add
dec
push
movsl
xlat
test
mov
xchg
xchg
cmp
scas
movsb
jnp
call
jg
pop
xor
psrlw
rolb
xlat
cwtl
scas
fwait
xor
mov
lods
imul
nop
push
push
arpl
cli
and
or
sbb
cmp
xor
or
inc
out
mov
ljmp
dec
addb
cmc
pop
icebp
insb
xor
mov
pop
shlb
fwait
into
das
ss
or
adc
inc
and
add
and
mov
sbb
or
and
push
popa
fadd
xchg
outsl
dec
cmp
dec
fstpl
mov
jo
jne
inc
xlat
mov
pop
pop
fsub
addr16
dec
lret
repz
xor
inc
pop
mov
je
inc
pop
out
or
dec
ret
test
jecxz
lret
loope
push
fstpl
sub
jmp
or
jecxz
imul
stos
shrb
push
xlat
pop
popf
rol
cmp
rcrb
sbb
cmpsl
stc
std
mov
call
cmpsl
inc
xor
mov
or
jmp
mov
push
out
xor
sbb
lret
mov
adc
ret
fldenv
add
push
std
aad
stos
pop
in
mov
out
cmp
push
dec
rol
scas
xor
inc
add
pop
mov
inc
test
xchg
push
stos
mov
push
and
inc
mov
test
imul
push
cwtl
data16
mov
dec
int
mov
and
adc
or
lds
push
mov
arpl
arpl
xor
dec
xchg
loopne
lods
arpl
xchg
leave
adc
inc
movsl
int
incl
pop
jecxz
inc
and
sbb
popa
fisubs
rclb
mov
cmp
inc
mov
cmpsl
mov
or
and
xchg
xor
push
insb
sub
aam
cmp
les
inc
mov
cs
shl
gs
xchg
mov
push
arpl
sub
data16
mov
push
jge
pop
push
add
xor
dec
or
popf
iret
iret
ret
and
das
stc
aas
pop
cli
in
stos
pop
cmp
lret
inc
adc
inc
xor
xor
and
out
sahf
or
mov
sub
mov
sub
mov
or
xor
mov
pop
xor
ret
or
or
test
jo
jl
je
add
adc
push
jp
push
test
mov
leave
dec
sbb
sbb
push
popa
cmpb
push
xor
cmp
and
les
popa
arpl
nop
inc
pop
cmc
xchg
sar
pop
sbb
movsb
and
inc
pop
xchg
jp
add
ljmp
cmc
loope
add
pop
add
dec
frstor
dec
jmp
fists
pop
daa
sti
sbb
add
xor
adc
ss
mov
mov
dec
aaa
loopne
xchg
call
xor
mov
adc
icebp
or
scas
cmpsb
movl
dec
movsb
cmp
inc
aad
fstl
test
shll
mov
xor
sub
pop
stos
sbb
inc
pop
pop
and
mov
sahf
sbb
aam
addr16
or
addb
cmc
scas
adc
xor
jae
jp
test
cmp
pop
aad
pop
and
adc
sub
push
std
aad
sbb
lea
pushf
sbb
jl
dec
lcall
add
cmpsb
call
les
test
lea
in
cmp
mov
lock
mov
enter
test
mov
lea
xchg
or
add
push
xchg
push
data16
fistpl
push
push
ljmp
sub
mov
insl
fcmovb
adc
inc
cmp
sbb
into
mov
int
add
mov
cld
and
int3
adc
inc
inc
adc
jl
mov
loope
enter
add
loope
push
push
nop
sbb
rolb
mov
inc
sbb
push
jl
add
or
mov
aam
std
sbb
cmpsb
mov
mov
dec
repnz
mov
jmp
jl
ret
enter
sbb
adc
jo
mov
stos
xchg
xor
or
mov
ret
mov
or
jg
pop
rcl
orl
xchg
jle
push
imul
mov
xchg
pop
mov
sbb
std
arpl
les
sub
aaa
out
enter
fwait
push
or
push
mov
ffree
push
loope
mov
or
lds
jp
aam
mov
sub
ljmp
ljmp
clc
mov
test
mov
push
inc
xchg
xchg
rorl
mov
mov
popf
inc
or
adc
pop
loop
shll
push
dec
inc
icebp
inc
in
leave
mov
sti
xlat
pop
cmp
pop
ret
jnp
xor
orb
mov
imul
or
xor
pop
hlt
add
fists
arpl
mov
or
mov
lds
and
cmp
repz
cmp
stos
mov
pop
fwait
or
inc
add
jmp
mov
inc
mov
sbb
lahf
add
ret
daa
add
lcall
arpl
mov
stos
jmp
lods
or
xorb
aaa
inc
inc
add
pop
mov
dec
enter
lds
icebp
xlat
xor
loopne
mov
les
mov
roll
mov
popa
jmp
in
js
icebp
imul
push
rorl
test
lea
cmc
ljmp
xchg
xchg
pop
lock
mov
add
loope
adc
popa
nop
dec
js
push
imul
xchg
rorl
sbbl
mov
stc
pop
dec
xor
adc
or
adc
je
dec
xor
or
shlb
mov
stc
inc
repz
andl
xchg
mov
jno
rol
aam
outsl
in
cmp
pop
xchg
cmpsb
sub
rcll
adc
in
mov
cmpsl
add
push
loopne
leave
push
cmpl
fidivrs
jo
loopne
jmp
push
mov
xchg
orl
inc
movsl
xchg
das
add
dec
inc
mov
xor
aad
cmc
fs
pop
or
test
lods
sbb
dec
scas
adc
or
jmp
push
mov
lahf
mov
cmp
dec
or
add
cmp
xchg
dec
shll
test
cmpsl
dec
sbb
rol
xor
add
ljmp
in
push
shll
rorl
outsb
imul
or
mov
stos
mov
sub
jmp
loope
mov
mov
bound
or
jmp
xchg
fisubrs
sbb
cs
cwtl
es
xor
pop
enter
test
adc
decb
lods
mov
lods
aaa
jns
inc
push
out
dec
jae
xchg
cld
addr16
cmp
clc
mov
dec
dec
inc
sub
lahf
loopne
es
xchg
sbb
cmp
daa
or
popf
arpl
popa
ss
sbb
push
xor
ljmp
loope
and
sbb
ds
add
inc
dec
nop
pusha
cmp
test
xchg
test
enter
cmp
repz
insl
cmpsb
icebp
or
out
lock
push
fidivl
cli
fmuls
adc
jge
sbb
push
jnp
xchg
or
loope
jecxz
adc
inc
xchg
cmp
or
inc
jmp
stos
mov
aad
xor
dec
in
adc
sub
xchg
fisttps
arpl
mov
addb
jnp
xchg
dec
scas
xchg
mov
cmpsb
adc
orl
and
hlt
push
popf
mov
addr16
jo
lds
mov
cmp
or
ds
sar
out
inc
xchg
mov
or
testb
pop
adc
add
ja
sbb
push
lea
and
leave
push
rorl
push
dec
scas
cmpsb
pop
push
pop
jns
xor
in
jle
cmpb
dec
stos
popf
addl
mov
mov
test
jmp
adc
lahf
pop
pop
jo
das
in
cmc
lea
lods
retw
mov
iret
add
push
pop
inc
sti
jnp
pop
arpl
insl
inc
xchg
subb
push
rorl
loop
dec
xlat
adc
xchg
pop
fsub
mov
es
jp
sbbl
arpl
or
and
movsb
push
xchg
repz
sbb
jae
xchg
jbe
jno
fstpt
push
dec
mov
add
and
movsl
sti
mov
roll
dec
jg
pop
lds
sbb
scas
sete
ljmp
or
push
orl
out
sub
mov
xchg
mov
movsl
mov
shr
jno
rorl
lahf
ficoms
push
cmp
pop
aad
lret
std
xchg
popl
aaa
jne
test
roll
std
push
jno
imul
inc
add
mov
ret
mov
popf
inc
pop
push
dec
in
lahf
or
stc
rolb
fsubl
aad
fadds
mov
in
push
rorb
popa
pop
or
add
bound
inc
test
push
negb
sub
jne
pop
pop
xlat
scas
mov
pop
sbb
daa
mov
and
aam
mov
sub
adc
sbb
xor
add
test
je
cmpsb
popf
adc
add
lds
xchg
mov
sti
xchg
push
and
cmp
ret
push
insb
cmp
out
ror
or
stc
leave
xchg
sbb
sbb
testl
out
pop
roll
dec
popf
lock
inc
and
cwtl
push
xor
push
and
adc
pop
dec
sbb
dec
xor
adc
cmp
cs
cmp
cwtl
test
imul
mov
fildl
push
xor
aad
and
or
jmp
cmc
sub
sub
adc
and
xchg
xor
ja
add
mov
addr16
cmc
sti
mov
or
cmp
test
inc
and
xor
popf
push
fwait
sbb
mov
mov
xchg
arpl
mov
xchg
cmpsb
fst
filds
push
cmp
pop
rcrl
mov
sbb
scas
xchg
dec
out
imul
iret
mov
jmp
or
repz
popf
sbb
mov
push
outsl
pop
shl
repz
loopne
stc
in
and
push
aaa
fsubs
cwtl
xchg
sbb
popf
xchg
and
mov
mov
and
jg
lahf
or
pop
mov
mov
sub
dec
xlat
pop
or
rol
push
xor
lods
fldcw
pop
xchg
cmp
cwtl
jae
ret
rorb
imul
cmpsl
add
xchg
dec
jmp
aaa
pop
bound
dec
mov
adc
pushl
stc
dec
jb
icebp
popa
in
iret
jmp
pop
stos
jg
js
cmp
daa
push
push
mov
popa
xor
sbb
mov
sub
stos
and
sbb
les
cmovs
addl
jp
sbb
mov
nop
or
or
inc
sbb
mov
hlt
mov
subl
rcrb
andb
cmp
xchg
cmc
jne
icebp
mov
push
aaa
push
mov
roll
imul
jne
mov
mov
jecxz
sbb
xorl
push
in
adc
fucomp
cmp
sbb
sub
cs
and
push
out
jae
adc
bound
daa
pop
cmp
adc
clc
sbb
inc
inc
ret
xchg
mov
push
xor
mov
inc
xchg
mov
lods
push
mov
pusha
inc
sbb
and
jne
inc
xchg
pop
js
inc
dec
mov
inc
xchg
scas
icebp
daa
cmpsl
dec
mov
pusha
test
das
xchg
adc
add
insl
mov
test
faddl
adc
cmpsl
mov
mov
push
xor
ret
mov
mov
xchg
fmulp
push
dec
js
or
sbbl
inc
push
jne
fistps
or
jp
adc
add
and
nop
cli
pop
stos
pop
dec
push
or
andb
pusha
loop
mov
sub
cmpsb
xchg
mov
xchg
xlat
mov
xor
mov
nop
cmp
lea
or
cmc
into
test
sub
add
movsb
bound
rol
mov
jge
mov
fldl
cltd
loope
xlat
lahf
popa
sub
arpl
sub
pop
jo
add
shlb
sbb
test
mov
mov
jne
ja
or
mov
pusha
and
cmp
test
push
cwtl
pusha
dec
xor
inc
adc
xor
and
jo
xlat
jmp
xlat
jne
cwtl
xor
dec
mov
cmp
mov
jp
inc
jo
xor
sbb
add
dec
sub
dec
jmp
push
mov
test
repnz
icebp
adcl
cld
add
mov
push
out
or
xor
cwtl
ret
mov
loopne
pop
mov
sbb
or
aad
cmpsl
xchg
xor
mov
xchg
lea
dec
outsb
push
and
jo
repnz
sbb
movsl
mov
fmull
or
pop
mov
adc
popa
jo
ret
inc
adcl
repnz
sbb
fs
adc
sub
mov
inc
add
mov
data16
mov
lods
mov
cmp
mov
test
nop
inc
pop
dec
arpl
pop
xchg
push
adc
out
pop
dec
mov
push
imul
push
inc
cmp
or
sahf
mov
sbb
add
xor
or
adc
fstl
jl
lock
ret
add
cmp
les
ret
xor
repz
push
mov
xchg
push
pushf
cmp
inc
jle
adc
test
xor
xor
dec
addr16
ja
call
in
sbb
cmp
js
adc
jb
je
inc
scas
hlt
repz
jae
cmp
int
es
jbe
jno
or
and
mov
or
xchg
xor
adc
popa
cmp
push
sbb
and
or
adc
scas
xchg
xor
bound
pop
mov
call
pop
dec
xor
js
add
add
mov
sbb
fs
enter
push
xchg
mov
stos
mov
sub
cmp
mov
fisubs
scas
lahf
push
push
add
push
push
mov
mov
orl
cmp
movsl
inc
clc
mov
or
adc
subl
jae
arpl
adc
mov
adc
test
clc
and
loop
sbbb
mov
mov
test
shrl
pop
push
push
and
jle
ds
jbe
inc
cmp
or
in
test
mov
xor
jge
les
push
sbb
mov
movsl
sub
xor
lahf
jecxz
inc
mov
pop
jge
mov
push
xor
pop
jne
enter
jge
jmp
adc
pusha
aaa
and
lock
sbb
lods
pop
je
jmp
ja
cltd
jge
sbb
adc
das
jno
xchg
xchg
into
ror
aad
xchg
jns
jmp
xchg
sarl
inc
jmp
jns,pn
sti
add
push
inc
lods
or
shl
xor
mov
aaa
pop
test
shrl
scas
add
rorb
popa
aam
repnz
or
lods
aam
lds
aaa
hlt
sbb
mov
mov
dec
mov
push
or
loope
push
mov
jnp
push
jl
mov
fstl
jg
xor
xchg
ret
jg
popa
mov
test
aam
push
jmp
jp
mov
dec
sub
inc
in
or
sar
cwtl
dec
inc
cltd
dec
ja
pop
xchg
mov
subb
pop
jae
fdivl
ds
and
repnz
rcl
pop
and
fnsave
push
flds
fnsave
std
scas
es
je
xor
mov
or
jns
and
sbb
xchg
dec
xchg
add
rol
inc
jle
add
pusha
leave
ja
lcall
test
jbe
test
scas
rolb
setae
or
sahf
push
mov
xchg
dec
call
dec
inc
adc
pop
cmpsb
inc
in
xchg
cmpsl
push
xor
sbb
jmp
imul
xor
cld
inc
bound
enter
add
sbb
inc
lock
mov
sbb
push
dec
rolb
add
insl
out
test
adc
xor
inc
jge
insl
dec
push
movsl
call
cld
cmp
in
test
stos
jle
and
jecxz
cwtl
test
jmp
mov
pop
mov
and
int
call
loopne
push
int3
loop
inc
lods
icebp
mov
sbb
jle
jecxz
les
pusha
cs
out
push
pop
das
subb
add
aad
and
adc
dec
stos
lds
xchg
pop
out
push
sbb
jne
pop
xor
mov
push
jb
cmp
xorl
mov
or
adcl
out
or
orl
ud2
push
or
out
add
nop
xchg
ds
inc
xorl
imul
or
mov
jns
insl
test
mov
shlb
jmp
arpl
cmp
push
dec
inc
insl
cmp
js
dec
pop
daa
pop
aad
inc
jmp
iret
movsl
and
cltd
inc
and
xchg
pop
pop
pop
sbb
sbb
cmp
int3
movsl
lds
aad
push
cltd
adc
dec
mov
das
xor
insl
cmpsl
xchg
cltd
les
xor
or
pop
xor
out
in
stos
xchg
sti
cltd
mov
cmp
cmp
daa
fmul
pop
ficompl
insb
cmp
cmpsb
xor
sbb
mov
cwtl
test
test
ret
ret
insl
dec
aad
mov
pop
xchg
lds
push
inc
mov
jne
in
enter
movsl
dec
mov
js
inc
shll
pop
mov
adc
jg
andb
xor
push
jge
or
pop
push
push
xor
sub
add
out
ljmp
sub
sbb
and
gs
inc
push
push
enter
push
dec
test
xchg
cmp
test
cmc
jne
outsb
test
dec
dec
lret
in
dec
push
xchg
lea
and
arpl
icebp
lods
in
insl
push
into
shlb
imul
sbb
pop
lods
and
cli
sub
scas
xchg
repnz
jo
inc
push
xchg
inc
loop
mov
or
stos
orb
ret
lods
mul
std
xor
or
cmp
fldt
lods
sub
cmp
and
adc
mov
push
jge
sub
xchg
push
pop
xlat
or
pusha
aad
sbbl
adc
sbb
mov
stos
mov
mov
inc
mov
ret
xor
sbb
in
lahf
add
mov
pop
enter
sbb
vcvtsi2sdl
loop
push
jnp
pop
ds
xor
mov
push
push
and
adc
mov
jne
stc
fistl
mov
scas
mov
rcl
adc
lret
js
inc
movsl
sbb
les
test
adc
mov
cmpsl
add
mov
pop
icebp
and
sub
and
roll
jecxz
or
scas
popa
adc
rol
scas
push
imul
cmc
xchg
sbb
dec
aad
je
daa
pop
stos
loop
test
js
loop
inc
cmp
rcl
je
pop
loop
sbb
mov
and
out
xor
mov
xchg
cmp
adc
in
dec
sti
adcl
mov
fistpll
std
insl
xlat
fsts
clc
xchg
cwtl
popaw
add
insl
pop
adc
mov
sub
adc
xchg
mov
add
shlb
sti
cmp
dec
pop
loope
push
cmp
lds
mov
dec
fnstenv
dec
and
mov
mov
enter
cmpsl
idivl
out
push
popf
xor
inc
ljmp
inc
sub
stc
cmc
mov
pop
cmc
rcll
inc
scas
push
dec
clc
in
les
mov
lea
push
lds
or
sub
sbb
jl
aad
shl
adc
jl
cld
fstps
sbb
pusha
xlat
and
mov
and
movsb
add
mov
add
cmpsb
mov
adc
or
mov
sbb
sbb
lret
les
mov
jle
jne
shll
xor
bound
aaa
dec
jmp
mov
cmp
movsb
xchg
jae
inc
sub
repnz
push
jge
pusha
subb
mov
adc
bound
das
cmp
dec
sti
lcall
adc
xor
mov
hlt
add
mov
aad
sti
dec
dec
mov
or
adc
pushf
cmp
sub
jne
mov
mov
or
sub
lods
sbb
arpl
imul
mov
sbb
call
and
fdivs
fldl
enter
fildll
scas
aam
jb
cmp
adc
pop
jmp
xor
push
jae
jno
xchg
and
mov
or
pop
ficoml
xchg
and
and
loopne
dec
lds
insl
sbb
scas
pop
lods
xor
mov
dec
in
test
shrl
sahf
or
rcll
xor
gs
dec
popa
add
jo
out
push
aad
bound
lea
in
push
hlt
or
iret
shlb
dec
movsl
pop
shll
outsb
sub
clc
push
loopne
test
dec
lods
fdivrs
xlat
nop
jbe
mov
push
loope
cli
jg
pop
movsb
xor
inc
lahf
dec
sahf
inc
test
cwtl
cmp
add
fdivr
xor
jecxz
fldt
pop
rolb
adc
jecxz
jne
push
cwtl
sub
xchg
sbb
mov
cmp
inc
daa
test
dec
loopne
jb
or
inc
jmp
orl
frstor
sub
xor
add
inc
cmp
mov
sti
or
leave
insb
rclb
lods
and
sub
push
test
lahf
adc
sbb
call
or
xor
lret
mov
shlb
inc
mov
jmp
xor
cmpl
or
jmp
in
mov
scas
insl
imul
xchg
xchg
mov
dec
xchg
xchg
xor
lods
mov
es
jecxz
je
inc
mov
adc
scas
lds
xor
aad
inc
sub
jmp
xchg
scas
push
xor
dec
push
or
add
pop
inc
or
inc
fisubrs
or
add
jno
dec
pushl
mov
push
add
and
dec
sahf
pavgw
jo,pt
adc
mov
or
test
pusha
in
cmp
jp
aam
fsts
mov
inc
pop
xor
js
cmp
adc
mov
dec
and
add
push
bts
dec
roll
lods
push
xor
fwait
add
jno
test
xchg
outsl
call
sbb
stc
xchg
mov
push
cmpsl
and
jno
xor
out
out
jecxz
dec
push
xor
dec
and
adc
cmp
jo
lcall
stos
and
cmpsb
lar
les
call
arpl
add
loope
xchg
sub
nop
out
or
mov
nop
testb
sub
xchg
sbb
filds
adc
lods
rolb
movsl
inc
movsl
je
pop
fnsave
and
mov
dec
or
xlat
pop
out
lret
jmp
leave
xchg
outsl
frstor
cltd
pop
cwtl
scas
les
or
fimull
les
inc
aad
xchg
or
sub
cmp
lds
push
adc
sbb
aas
std
fcoml
xchg
cmp
push
mov
cmp
gs
push
xchg
mov
orl
je
lods
jnp
roll
xchg
sbbb
aam
inc
adc
pop
jno
aad
pop
jg
push
sbb
mov
mov
pop
pop
cmp
jge
cmpsl
adcl
ret
lods
sub
sbb
arpl
stc
gs
inc
adc
inc
daa
sbb
test
das
and
shrl
repz
adc
xchg
je
dec
pushf
inc
jge
iret
pusha
push
pop
inc
mov
fisttpll
jecxz
mov
jo
or
dec
loop
or
sbb
add
nop
outsl
clc
adcl
push
ds
mov
ret
or
sub
and
push
test
xor
icebp
mov
int3
sbb
aas
jb
aad
cmpsl
and
mov
movsb
add
or
ljmp
addr16
fbstp
xor
addl
mov
cmpsb
sbb
push
seta
jns
fists
loope
rorl
xor
xchg
cmp
dec
xchg
cmpsb
repnz
clc
in
enter
jmp
sub
add
sub
mov
dec
cmc
sub
jo
inc
pop
arpl
xor
cmp
js
hlt
jne
orps
push
dec
stos
and
ds
mov
inc
inc
inc
jp
sahf
sub
mov
or
in
xlat
mov
int
shll
ds
mov
mov
xor
pop
aad
xchg
testb
negb
dec
adc
or
loopne
xor
iret
and
xor
jg
jge
imul
sbb
mov
cmc
iret
dec
jmp
daa
mov
ds
das
mov
sub
sbb
subb
sbb
inc
ja
dec
not
sub
adc
add
inc
and
lea
rorl
mov
imul
mov
test
pushf
or
push
xor
inc
pop
popl
xchg
push
repnz
inc
push
scas
loope
and
pop
icebp
adc
outsb
sbb
shll
pop
xor
add
addr16
dec
mov
mov
test
push
push
insl
adc
adc
adc
enter
pop
pop
dec
inc
add
mov
inc
cmp
enter
mov
pop
imul
js
dec
xor
lds
loopne
mov
pop
push
inc
pop
sbb
xor
aad
sbb
and
test
pop
rolb
pop
js
jmp
inc
arpl
outsl
inc
cmp
xor
cmp
dec
das
dec
and
and
jp
and
jmp
cmp
aaa
ret
cmpsl
adc
sub
test
or
insl
adc
fbstp
imul
inc
icebp
sbb
xchg
je
ror
push
fs
push
cmp
leave
fs
call
cmp
dec
and
sub
dec
sbb
xchg
jae
inc
jne
pop
frstor
push
jo
or
cmp
and
pop
cmp
jmp
xor
outsb
fnstcw
daa
hlt
mov
xor
or
jo
pop
pop
xchg
mov
imul
fwait
and
jl
fdivrp
mov
jge
pop
cmp
pop
and
shr
sbb
add
inc
dec
imul
dec
push
clc
add
xor
mov
popf
lock
ret
inc
or
test
lcall
in
shll
pop
clc
dec
inc
jno
dec
inc
lcall
ss
inc
scas
sarb
cld
sti
add
aad
mov
jg
enter
inc
sbb
sbb
arpl
imul
ja
loopne
test
mov
add
sbb
mov
xor
jnp
push
xchg
dec
cmp
out
cwtl
lds
rcll
jno
mov
push
inc
adc
outsb
jp
push
stc
loope
mov
imul
in
mov
outsl
fwait
aam
dec
sbb
test
jnp
and
adc
adc
add
or
dec
push
add
stos
jae
rcrl
add
mov
mov
add
xorl
div
mov
inc
jns
xchg
push
stos
add
ljmp
inc
pop
push
pop
xorl
cli
inc
dec
dec
jns
mov
adc
ljmp
divl
cmc
pop
movsl
push
jecxz
add
loopne
xchg
loop
in
add
jmp
lods
notl
lret
cmp
orb
mov
fsubrp
aaa
push
das
push
and
data16
mov
mov
shll
shrb
xchg
xchg
dec
xor
sbb
pop
dec
rclb
sbb
leave
sbb
test
nop
jno
xchg
push
mov
adc
icebp
in
and
lock
mov
or
test
adc
push
ds
imul
mov
push
xlat
sti
jle
insb
loopne
subb
negl
out
add
fldl
jg
xor
dec
cmpsl
lock
sbb
xlat
shlb
mov
daa
add
push
lods
adc
orl
repz
xor
mov
dec
or
dec
xchg
bound
adc
cmp
out
sbb
shlb
ja
adc
and
dec
sbb
adc
add
aaa
push
sub
shr
adc
dec
and
fdiv
push
cmpsl
sub
mov
add
jg
aaa
and
xchg
mov
or
jmp
out
lcall
cltd
push
dec
cmp
popf
mov
iret
pushf
movsb
add
pop
sub
jle
inc
sub
adc
stos
stos
lcall
push
out
inc
icebp
add
jmp
movsb
jmp
aas
sbb
loop
popf
and
pop
pusha
or
loope
aad
inc
sbb
aam
movb
jg
or
jno
shlb
lock
mov
jae
imul
push
movsb
sti
cmp
or
pop
rol
pop
mov
sbb
xchg
popa
cmpl
jge
fsts
loop
or
push
add
xor
xchg
xchg
dec
inc
das
xchg
and
xchg
mov
adc
xchg
into
mov
loop
jnp
pop
and
push
scas
stos
addb
jne
scas
inc
sbb
jg
outsl
test
andl
sub
sbb
ficoml
lret
lea
lahf
fstps
dec
ds
in
mov
or
shlb
sbb
test
sbb
xor
and
pop
cld
push
and
int3
cmpxchg8b
iret
push
dec
addr16
lcall
repnz
mov
mov
aad
stos
shr
daa
lret
addr16
cmp
jmp
cmpsl
dec
or
ret
iret
mov
sarl
xchg
fucom
pop
or
out
or
push
arpl
movsb
dec
inc
inc
mov
jecxz
jmp
test
insl
mov
push
pusha
outsl
pop
mov
xor
fwait
sbbb
imul
and
cwtl
das
adc
addr16
xor
sub
js
mov
in
adc
pop
and
adc
xor
xor
ficomps
add
adc
pop
daa
aaa
push
lds
cs
popf
mov
push
enter
data16
es
sub
mov
mov
arpl
adcl
daa
scas
dec
jge
or
jne
mov
push
jecxz
ss
je
lds
popa
lock
jl
sub
xchg
dec
enter
dec
sub
jns
sbbb
sbb
xor
stos
dec
out
in
push
shr
pushf
pop
or
xchg
mov
ror
push
call
rolb
and
xor
jp
test
lods
sarb
mov
jo
cmpsb
stos
pop
sbb
mov
pop
xor
enter
dec
inc
rorb
fisttpll
fcoms
mov
addl
stos
mov
xchg
mov
pusha
mov
insl
sahf
pop
adc
sub
push
sarl
mov
sbb
dec
add
fcomps
das
out
xor
lcall
lods
mov
cmpsb
ret
cwtl
in
pusha
repnz
into
xchg
inc
add
xor
and
and
ret
inc
movsb
in
sbb
jge
push
mov
xchg
inc
insl
dec
insb
outsb
jmp
das
or
pop
pop
sbb
mov
mov
lret
mov
sarl
mov
add
addb
mov
cmpsb
jmp
bound
rolb
hlt
xor
test
clc
lea
out
out
pushf
aam
sti
mov
mov
scas
push
pop
clc
mov
adc
mov
arpl
lcall
xlat
adc
sbb
shll
cmp
pop
out
and
push
sub
lea
xor
cmp
adc
mov
add
insb
movsl
cmpsl
out
mov
sub
outsl
int3
dec
cmp
push
cmp
jp
fldcw
add
add
push
push
cmp
pop
lcall
mov
in
and
test
repnz
pusha
sbb
repz
shl
mov
mov
inc
das
lcall
aaa
xchg
aam
call
js
hlt
and
dec
push
add
pushf
or
jae
inc
sbb
mull
or
jno
push
mov
enter
bound
adc
fsqrt
lret
push
add
jo
mov
adc
add
jno
neg
nop
data16
xchg
jmp
jne
loopne
sbb
xor
mov
xor
test
adc
add
cmp
push
or
lods
xor
inc
cmpsb
cmp
aaa
adc
pop
test
es
sub
cmp
repz
adc
fldl
dec
xchg
dec
adc
pop
dec
test
sbb
les
mov
add
repz
pop
jbe
shl
dec
or
xchg
stos
daa
pop
shrl
icebp
or
or
in
cmp
vmwrite
mov
ja
cmp
leave
xor
shl
lds
push
lret
mov
in
subl
nop
mov
push
and
pop
aad
iret
repnz
subl
call
cld
mov
xor
push
inc
fidivs
lea
push
xchg
push
adc
push
push
fists
test
mov
pusha
jge
fs
or
addb
jecxz
ret
mov
jne
loopne
xor
lds
cs
xor
push
pushf
push
mov
sbb
sarl
hlt
test
inc
outsb
mov
mov
mov
scas
mov
icebp
dec
js
shll
aad
ror
pop
out
sub
cli
rorb
push
popf
orb
out
xchg
and
stc
mov
add
adc
push
or
lea
xor
xor
gs
add
mov
xor
xchg
mov
adc
push
cld
xchg
mov
sti
arpl
or
das
xchg
lock
jno
pusha
adc
out
js
les
xor
sub
mov
jl
push
cwtl
sbb
test
pop
movsb
jns
lds
jl
sbb
xorl
or
gs
inc
mov
sti
sub
out
mov
cmpsl
push
jmp
jg,pn
enter
add
add
out
adc
stos
jne
int
ret
loop
lds
xor
xchg
adc
inc
loope
outsl
pop
cld
and
mov
dec
mov
loopne
cmp
xchg
mov
mov
cld
sub
bound
push
arpl
mov
scas
mov
lds
or
iret
test
pushf
stc
jl
in
xor
ja
cmp
dec
nop
rclb
xor
push
loop
cmp
adc
sub
inc
imul
jle
sbb
mov
and
inc
add
mov
xor
sbb
pushf
adc
outsl
loope
xchg
daa
lods
adc
stos
xchg
dec
adc
or
loope
push
mov
sub
lcall
xor
stos
lret
shrb
ds
scas
mov
pop
or
pushf
or
push
scas
xchg
push
sub
adc
pop
stos
or
cwtl
push
test
jns
inc
inc
add
hlt
xlat
adc
call
fildll
sub
jb
xor
cmp
ret
into
mov
inc
ljmp
fs
test
cmp
cltd
pusha
inc
mov
lea
ret
icebp
cld
or
stos
or
jecxz
push
lret
mov
xor
mov
mov
je
adc
adc
scas
or
mov
sbb
std
rol
sbb
test
subl
test
and
xchg
les
xor
rorl
shlb
dec
inc
pop
inc
data16
ja
mov
pop
jae
jl
icebp
bound
shll
iret
xchg
pop
lret
jns
dec
xor
dec
icebp
lcall
rcrl
into
inc
xor
outsl
jg
test
push
pop
mov
negb
pop
sbb
aaa
xor
inc
and
fadds
and
xor
jnp
mov
sbb
adc
and
mov
aad
mov
into
pop
mov
jae
inc
xor
je
loop
iret
sahf
ds
out
sbb
cmpb
push
jle
adc
icebp
mov
pop
and
push
enter
lret
enter
sbb
lock
loopne
call
in
lcall
pop
sbb
push
outsb
mov
push
push
sbb
xor
repz
dec
test
jns
mov
sbb
outsb
push
xor
dec
dec
das
aas
out
adc
loope
add
mov
imul
pusha
mov
aad
shl
jns
push
in
jle
test
add
jno
js
cmp
cmc
jg
mov
inc
stos
aam
push
pop
aas
mov
test
orl
icebp
ret
push
bound
leave
sbb
and
test
mov
mov
adc
inc
je
xlat
movsb
out
or
dec
add
adc
sub
fnstsw
maxps
dec
fsubl
xor
sbb
sub
into
insl
rcrb
mov
cmp
lret
popa
pop
adc
pop
shlb
stc
and
bound
scas
in
or
xor
test
mov
inc
cmpsb
addr16
lcall
imul
loope
push
jne
push
pop
stos
les
or
aam
cmp
xchg
in
mov
adc
test
aad
iret
ja
lods
bound
add
leave
jnp
mov
shlb
icebp
movsl
sub
adc
shlb
xor
mov
jl
sbb
adc
in
ret
or
jmp
scas
dec
push
xchg
test
out
in
fisttps
and
test
stos
xor
xchg
mov
loope
adcl
mov
xor
cmp
or
jl
mov
mov
stos
xchg
test
das
addl
lds
lock
out
sbb
mov
add
mov
dec
shl
fmuls
aaa
mov
xor
es
lds
fwait
xchg
test
aaa
and
push
xchg
push
test
ret
movsb
mov
push
mov
and
icebp
and
jno
inc
aaa
ds
push
jge
ljmp
rclb
popf
aaa
or
gs
fs
cmp
cmp
outsl
fidivl
cmp
popf
add
std
js
add
imul
push
cmp
das
jmp
jmp
cmpsb
mov
jecxz
xor
pop
pop
mov
add
lahf
je
sahf
ja
xchg
push
inc
ds
push
mov
and
cmp
outsl
and
jmp
sbb
cmp
fmulp
cmc
adc
jnp
push
stc
lahf
ja
mov
stc
mov
mov
push
jmp
jl
sahf
inc
dec
mov
mov
mov
call
mov
mov
cs
inc
mov
jmp
ja
push
mov
cld
pop
dec
ud2
aad
adc
mov
insl
adc
popf
fcmovnbe
jae
pop
or
adc
dec
pop
add
mov
mov
notl
movsb
mov
cmpb
mov
ret
adc
sbb
cltd
sbb
test
es
cltd
sub
adc
push
cmp
push
mov
imul
movnti
ljmp
loope
mov
push
stos
in
push
test
je
dec
mov
cwtl
xchg
rorl
popf
add
jmp
jne
lahf
xor
jmp
rcrb
pusha
stos
ret
sbb
loope
and
cwtl
aas
lods
cwtl
pop
or
add
or
sbb
push
scas
push
xor
test
mov
and
fs
mov
pop
add
and
or
inc
sbb
ljmp
loop
test
mov
and
test
push
sbb
cmp
arpl
dec
push
nop
inc
xor
bound
imul
lock
int3
push
incl
pop
scas
lcall
mov
sub
lcall
cmp
leave
leave
jbe
dec
and
sar
or
jo
stos
inc
pop
in
xchg
xor
sbb
inc
jo
fs
loope
leave
lea
test
test
or
push
subl
js
aas
adc
rcll
data16
pop
xchg
bound
orl
mov
test
dec
adc
jnp
je
push
inc
setp
test
push
and
fldcw
add
adc
pop
jl
popl
xchg
aad
pop
add
cmpl
cmp
sbb
sub
cwtl
jl
jno
pop
adc
mov
test
xchg
cmp
inc
mov
mov
mov
movl
leave
lock
sbb
ja
jns
cmc
cmp
leave
mov
cld
ret
ret
out
pop
daa
fbld
idivl
outsl
icebp
sahf
clc
mov
jl
mov
adc
pop
sti
test
loopne
fwait
xor
popa
cs
loop
mov
jp
add
shlb
sbb
push
xlat
pop
cmc
fnsave
dec
mov
lret
xchg
xlat
push
adcl
repnz
dec
mov
xorl
cmp
cmp
outsb
and
iret
and
movsl
outsl
je
jp,pt
in
test
js
outsb
push
add
ja
xchg
aam
xor
sub
test
inc
sub
lea
call
jge
add
loopne
pop
xchg
sbb
fstpl
gs
mov
fistl
adc
aam
mov
ret
jbe
pop
cld
lock
mov
loope
mov
xor
pop
mov
nop
dec
add
gs
cmp
jns
loopne
mulb
mov
push
or
lcall
bound
cltd
dec
mov
fistps
inc
inc
cmp
adc
jb
mov
jb
cld
sbb
outsl
sbb
lds
popf
or
pop
popf
inc
lahf
add
mov
mov
inc
dec
in
cmp
sbb
xor
ja
jl
sbb
push
mov
push
jne
movsl
loopne
stc
push
ja
fisttpl
cmp
push
test
cvttps2pi
pop
inc
shrl
les
in
test
adc
add
add
mov
xchg
pop
mov
lea
and
lret
repz
sbb
mov
lods
sbb
outsl
push
lods
aas
fwait
xchg
push
dec
inc
or
das
push
sub
xchg
xchg
mov
xchg
push
in
pop
push
mov
mov
out
sbb
push
rcll
rorl
sbb
cmpl
add
mov
enter
add
test
adcl
pop
mov
xlat
cmpsb
popf
xchg
icebp
ret
clc
pop
pop
and
mov
test
fmul
mov
push
inc
add
adc
insl
out
shlb
dec
popf
adc
pop
xchg
jne
xor
dec
xor
nop
test
mov
dec
jo
test
imul
adc
adc
adc
dec
rcll
arpl
sbb
lahf
les
sbb
adc
push
lds
jl
xchg
mov
loopne
adc
push
bound
xor
pop
rcl
cltd
ret
fs
in
push
jmp
call
pop
inc
popa
fsubrl
aaa
xor
cmc
sarb
les
dec
mov
jo
outsb
stos
and
repnz
push
movl
jmp
jae
sub
mov
aad
icebp
cmp
inc
push
adc
js
push
gs
test
clc
das
idiv
sub
lds
xchg
bound
cmpsl
cmp
pop
and
mov
scas
addb
das
lahf
out
add
or
or
mov
hlt
mov
push
dec
mov
sbb
add
and
pop
lcall
add
aam
stos
dec
dec
jno
fisubs
lcall
mov
jne
repz
je
addr16
test
mov
fimuls
jge
xor
stos
imul
and
scas
imul
push
sub
ds
mov
nop
push
cmc
xchg
sub
or
movsb
adc
in
ja
sarl
xchg
test
xlat
mov
mov
pusha
lock
rclb
outsl
sbb
inc
sbb
bndstx
popa
dec
or
dec
cmp
sub
push
mov
cltd
dec
sub
mov
dec
pop
les
pop
les
push
mov
cmp
outsb
push
rcl
inc
loopne
jb
push
into
cmp
or
push
add
xor
lret
add
push
stc
jae
push
jmp
pop
and
orl
das
in
scas
mov
mov
gs
xchg
cmpsl
or
push
fidivrl
or
lods
xchg
iret
out
xor
mov
sbb
leave
inc
sbb
and
imul
test
push
xor
sbb
shlw
mov
add
pop
mov
test
stos
icebp
adc
mov
orb
mov
lods
stc
adc
or
inc
push
jno
cmp
cmpsb
xchg
je
hlt
adc
cltd
pusha
aad
add
or
popa
loop
aas
cmp
push
xor
jno
popf
jno
pusha
mov
push
lods
cmp
inc
push
push
popf
dec
jcxz
je
in
sbbb
and
rcrb
icebp
or
out
sbb
jp
and
xlat
push
scas
dec
pop
jmp
test
mov
or
cmp
jle
xor
and
sbb
xor
orl
aas
sbb
adc
add
sub
pop
jmp
mov
js
movsl
test
sbb
cmp
imul
hlt
jns
mov
mov
shl
nop
pop
jge
shrl
cli
sbb
or
or
jmp
xchg
daa
adc
dec
cmp
adc
imul
ja
loope
cmp
inc
inc
jl
pop
lods
dec
orl
in
jmp
cltd
add
jno
les
add
repz
or
test
ret
mov
add
test
push
xchg
daa
cmp
or
call
sbb
push
out
sbb
sbb
lcall
aam
loop
and
lods
cld
js
cmpsb
shll
roll
pop
jle
dec
add
sbb
test
call
xchg
xlat
xchg
ja
xchg
xchg
xchg
lcall
pop
cld
jge
lock
adc
iret
push
push
pusha
jp
js
pop
push
cmp
jl
pop
adc
insb
icebp
sbb
mov
add
push
dec
shlb
xchg
or
jns
push
insl
imul
add
xchg
adc
ja
fldl
test
push
test
jno
adc
pop
pop
and
xchg
mov
jg
loope
stos
mov
insb
sbb
adc
mov
mov
sbb
mov
pushf
dec
mov
pop
test
sbb
adc
ficoms
pop
test
inc
lea
add
test
dec
sbb
in
rorl
jno
sub
inc
jl
int
mov
and
and
inc
jnp
fs
dec
shrb
je
in
shrl
lds
in
ds
sbb
movsb
inc
pusha
xchg
clc
sbb
push
test
subb
pop
sub
cmc
dec
rorl
sub
pop
daa
xlat
pop
add
push
fcoml
jl
jnp
lahf
fwait
sbb
lret
aas
ja
mov
cmpsb
test
dec
jp
aad
shl
sbb
inc
mov
mov
xor
cltd
test
sbb
add
andb
xchg
sub
aam
xacquire
mov
xor
push
mov
in
scas
pop
daa
mov
jae
shlb
push
mov
sbb
cmp
sub
sub
pop
popa
and
rorl
pusha
inc
sbb
int
jmp
push
inc
mov
pusha
mov
test
push
sub
stc
push
add
inc
rcrl
inc
sbb
push
cltd
jno
out
loop
pushf
flds
or
inc
out
lahf
cmp
inc
mov
ret
xchg
movsl
popa
mov
jo
fwait
cmpsl
xchg
popa
add
dec
stos
xor
dec
push
pop
cwtl
nop
out
ljmp
loopne
add
jne
or
and
ds
mov
jl
mov
test
cmpsb
or
or
xlat
in
xor
lret
add
aad
movsb
dec
adc
dec
sarl
sub
leave
pop
xchg
xor
fmuls
daa
mov
cwtl
jg
sti
mov
jp
dec
fisttps
jmp
push
popf
pop
mov
inc
mov
cmp
int3
into
addr16
jnp
mov
jb
fs
xor
xchg
sub
scas
nop
mov
push
call
imul
aas
rcll
jecxz
jg
mov
jno
dec
test
jl
fcos
dec
add
pushf
mov
mov
jle
xchg
mov
adc
es
sbb
and
pop
shlb
fcompl
das
test
fmull
cmp
lock
js
shl
xchg
inc
xchg
push
push
stc
mov
pop
js
dec
jb
xchg
les
push
adc
pop
sti
imul
popf
gs
push
push
add
rorb
xchg
rcrl
pop
push
jae
pop
cmpsl
mov
outsb
pop
lcall
in
ss
sub
pop
pop
das
cmc
es
mov
ds
ret
xchg
cmp
test
mov
leave
xchg
cmp
cmp
test
xchg
les
out
push
dec
movsl
and
push
flds
pop
fidivs
iret
xchg
push
cltd
lret
hlt
mov
inc
mov
aam
jecxz
fs
js
sbb
cli
orb
aas
add
push
cs
data16
xchg
mov
mov
inc
cli
add
xchg
daa
roll
lea
ja
dec
adc
add
aam
push
int
lahf
inc
sub
cltd
lea
push
mov
push
mov
push
mov
cmp
int
or
subb
add
lret
jae
mov
push
ja
into
xor
mov
adc
or
cli
cmc
pusha
mov
ljmp
or
jnp
cmpsl
addl
bound
dec
pop
xor
xchg
inc
adc
jp
push
cmpsb
jns
test
mov
xchg
fiadds
adc
gs
divb
cmpl
pop
jl
rolb
mov
mov
icebp
add
stos
mov
jno
jne
xchg
stos
adc
bound
imul
addr16
adc
xchg
sbb
mov
dec
jg
sbb
movsl
or
jmp
lret
mov
pop
pop
mov
repnz
and
ret
test
js
pop
cmp
sub
mov
lahf
add
and
mov
mov
lods
ja
iret
jp
cld
lea
push
mov
and
adc
aaa
mov
push
dec
sbb
push
xorb
out
rcrl
push
mov
pop
rcrb
jns
ficomps
sub
push
xchg
dec
cmc
and
lahf
cmp
pop
jmp
ror
movsb
cmpsl
jmp
aad
inc
adcl
adc
fsubrs
imul
mov
fimuls
sbb
cs
pop
shlb
adc
test
push
pop
lahf
sbb
jbe
lds
mov
sahf
mov
mov
aas
enter
inc
cmp
and
xchg
push
lods
leave
cltd
jle
pop
imul
ljmp
sbb
outsl
ljmp
shr
pop
lods
lea
int3
test
adc
xchg
loop
aaa
pop
sub
adc
and
jecxz
push
inc
stc
dec
rcll
mov
push
loop
mov
enter
lock
dec
aad
inc
cmp
mov
lds
test
sub
push
jne
dec
xchg
movsb
adc
cmpsb
fwait
xor
test
xor
arpl
lock
push
inc
shrb
sbb
shlb
ja
fists
lods
sbb
cmp
inc
inc
and
push
sbb
add
sub
and
jmp
sbb
mov
lret
mov
sbb
jl
test
mov
mov
imul
sahf
pop
mov
pop
push
xor
adc
out
lds
and
cmpsb
jbe
imul
xchg
popf
push
cs
cmp
outsl
sbb
lock
jmp
jne
push
or
cltd
ret
or
mov
mov
xor
in
test
loopne
push
cmpsb
fcomip
cmp
inc
mov
or
scas
lock
or
adc
cmp
stc
sub
test
and
sbb
ret
xchg
pop
pop
enter
push
inc
inc
pop
xchg
jo
mov
movsl
loop
ficompl
jecxz
xchg
mov
add
outsb
cwtl
inc
mov
lock
sbb
pop
mov
mov
icebp
lock
adc
pop
dec
lahf
dec
pop
mov
inc
jne
stos
sbb
adc
addr16
jno
sub
xor
lcall
pop
iret
dec
cmp
xrelease
fistl
or
sbb
mov
scas
aad
loop
dec
cmc
xor
iret
roll
sbb
sub
in
arpl
movsb
je
ret
mov
mov
jne
or
push
mov
xlat
adc
imul
sub
out
std
arpl
mov
sub
int
and
cmc
call
inc
jl
in
add
cmp
sub
and
out
ss
test
mov
ja
pop
dec
adc
dec
shlb
adcb
into
arpl
lret
jecxz
out
cmp
push
fistl
xor
ja
jae
or
mov
sub
add
loopne
jo
jne
pushf
mov
jb
jg
sbb
inc
pop
push
cmp
jecxz
mov
xor
add
adc
push
stc
cmp
pop
ss
xlat
xor
imul
or
add
jbe
lock
cmp
sub
clc
add
loopne
mov
sub
popa
inc
jge
je
das
or
clc
and
mov
or
jne
inc
lods
cmp
dec
mov
adc
lret
push
dec
pop
mov
es
icebp
push
sbb
es
adc
fpatan
ret
mov
movsb
add
dec
adc
test
mov
hlt
into
dec
or
shll
mov
movsb
mov
pop
push
scas
add
nop
lods
sbb
mov
scas
jecxz
sbb
xadd
mov
mov
cmp
test
adc
sar
adc
fists
add
xor
dec
std
cmp
xchg
sub
pop
sub
int3
imul
cwtl
or
pusha
jmp
aam
imul
test
mov
icebp
push
add
xor
mov
testl
push
shr
push
push
gs
ss
push
sbb
adc
mov
icebp
xchg
sahf
sbb
xor
rcr
aaa
inc
push
mov
int
mov
or
ret
mov
adc
xchg
cltd
cmp
stos
fstl
insb
out
icebp
mov
aam
push
shrl
mov
daa
sti
mov
in
pop
mov
mov
pop
pop
ss
inc
std
iret
add
xchg
sub
jg
jle
call
push
test
repnz
cs
sub
jo
pop
stos
pop
xchg
arpl
mov
lret
mov
push
xchg
fs
push
mov
clc
mov
mov
xchg
jo
sub
inc
xor
movsl
in
sahf
xchg
xchg
shrb
insl
sub
xchg
inc
add
cmp
adc
mov
inc
pop
or
inc
mov
mov
mov
les
ror
push
inc
js
xchg
addl
or
mov
cld
pop
mov
xor
mov
out
dec
icebp
es
daa
insl
pop
xchg
mov
sbb
push
frstpm(287
add
push
fdivl
cltd
cmpsl
jecxz
pop
pop
jne
push
sarl
outsb
inc
mov
sbb
jo
mov
ds
jle
adc
lds
or
jl
cwtl
xchg
gs
test
stc
or
je
push
int
clc
movsl
push
push
push
adc
pop
sahf
push
lea
pusha
pop
aad
arpl
adc
push
push
xor
cmp
fnsave
pop
fxam
jmp
dec
mov
cmp
jmp
jmp
mov
test
jae
rolb
fsubrs
rcll
movsb
fwait
lock
push
add
jno
nop
mov
aaa
addr16
test
ror
ret
jmp
mov
mov
cmp
stos
js
xor
push
pushf
pop
pop
ljmp
sub
test
ss
sub
insl
adc
les
sbb
adc
sub
xchg
addr16
xchg
mov
rorb
and
push
lea
and
jo
aad
sbb
loope
pop
add
mov
push
mov
dec
jmp
lods
iret
sbb
test
lock
std
cmc
or
bswap
inc
cmp
pop
and
add
out
js
shlb
sti
sbb
test
mov
mov
mov
xor
sub
jne
fildll
scas
ret
lcall
adc
mov
in
mov
mov
jg
int
inc
and
push
mov
pusha
mov
ljmp
cmp
stos
sub
lock
fstpt
call
push
pop
mov
sub
leave
mov
push
loopne
in
sbb
loope
inc
pop
and
sbb
mov
sub
pop
int
fs
pop
mov
lds
jb
in
xor
push
adc
xorl
ss
mov
loope
xor
ljmp
sarb
jmp
cmp
add
xor
sub
clc
movsl
repz
daa
shlb
ficoms
push
movsb
dec
mov
imul
out
add
adc
das
dec
outsl
addb
pop
lock
test
sbb
incl
mov
or
push
jecxz
pop
sbb
lods
ds
test
mov
test
xor
mov
mov
jns
fs
pop
sub
inc
hlt
les
lahf
sub
mov
push
lea
xchg
jns
test
loop
mov
fsubrs
fidivs
daa
cmp
orb
jae
mov
mov
movsl
lea
daa
faddp
push
sbb
xor
push
das
mov
cld
sbb
insl
icebp
add
push
test
jbe
push
adc
sbb
xlat
test
inc
sub
out
or
int3
mov
inc
insb
add
or
cmp
ja
outsl
cwtl
loope
pop
stos
xchg
rcrb
mov
mov
loop
sub
and
adcl
ljmp
aas
sub
pop
jno
es
inc
adc
lcall
jbe
incl
push
cs
or
pop
andl
xchg
xor
cmpsb
cli
shlb
out
aam
dec
push
push
fs
shl
sub
mov
add
mov
imul
jmp
stc
pop
sahf
mov
mov
jge
movsl
push
pop
xor
mov
mov
mov
push
shrl
push
mov
ljmp
popf
dec
imul
out
rclb
mov
push
sbb
and
pop
add
addb
inc
imull
xor
ds
ja
inc
mov
xchg
jecxz
sti
or
call
push
bound
repnz
pop
and
leave
xor
and
addr16
fidivs
pop
dec
push
lock
push
pusha
lret
push
add
push
lea
mov
inc
stos
cltd
mov
outsb
mov
mov
xor
or
iret
insl
xor
add
pop
jnp
cmpsl
sbb
in
sbb
or
adc
adc
add
imul
xor
add
fdivrl
jmp
imul
adc
rorb
sbb
sub
mov
in
adc
rcrb
adc
fldl2t
jl
mov
cmp
mov
ret
or
inc
lds
push
pop
jge
imul
dec
sub
or
sub
out
sar
push
in
adc
mov
and
push
scas
cmp
push
sbb
cs
clc
add
mov
inc
cmpsb
or
xchg
inc
mov
stos
scas
or
outsb
stc
pop
xor
dec
sahf
jbe
jne
pop
loopne
xor
inc
stos
mov
xor
or
xchg
gs
mov
mov
imul
imul
aad
jecxz
ret
ja
jmp
imul
adcb
lea
jns
jmp
push
test
cmpsb
xchg
lahf
ret
fisubl
xor
stos
or
ret
jmp
jne
mov
lea
out
xor
xchg
and
pop
repnz
add
nop
jp
xchg
aad
jnp
push
inc
xor
outsl
leave
icebp
sub
adc
scas
add
cltd
sbb
rorb
lds
jae
call
test
sbbb
decl
cmp
push
dec
push
pop
pop
std
push
in
xlat
popa
addr16
imul
and
addl
jecxz
lcall
pop
jmp
cmp
imul
addr16
inc
xchg
pop
mov
and
xchg
sti
pop
inc
lahf
or
mov
xor
inc
push
test
gs
lods
sbb
shll
add
cmc
inc
jl
sbb
sbb
sarb
std
add
movsb
pop
sbb
adc
pop
cwtl
in
fwait
adcl
push
cmpl
movsl
aas
and
cmp
pop
and
push
dec
popa
cs
aam
push
in
insl
and
sub
add
or
arpl
pushf
push
sbb
xchg
push
cmp
outsl
out
jae
loop
mov
enter
loop
xor
push
push
shlb
cs
adc
fidivrs
test
or
cmpsl
fisubrl
ret
sbb
ret
js
mov
scas
pop
das
leave
or
adc
pop
rol
pop
pxor
lods
or
inc
test
movsl
xchg
aad
mov
xor
inc
add
lahf
inc
sbb
add
add
push
je
aas
loopne
dec
fadds
pop
sti
ror
mov
gs
jo
inc
inc
cltd
cmp
inc
xchg
pop
ljmpw
test
movsl
fst
pop
cmpsb
inc
call
push
and
sbb
mov
stc
or
fwait
xor
stos
in
cld
mov
xchg
dec
sbb
call
jne
adc
pop
insl
mov
add
inc
fwait
scas
sti
push
jg
ljmp
cmp
repnz
sbb
daa
int
or
call
adc
lock
mov
xchg
in
addr16
iret
ds
sar
pusha
add
mov
mov
mov
or
push
sbb
jmp
stos
cmp
sbb
imul
mov
or
dec
data16
maxps
stos
mov
das
outsb
sbb
xor
push
push
or
test
clc
or
fmull
add
dec
out
mov
and
bound
inc
sbb
mov
lea
pop
sarb
xor
mov
cmpsb
mov
dec
sub
and
movsl
mov
insb
pop
cmp
or
ret
jnp
test
sub
gs
mov
push
cltd
gs
cmpsl
push
rcll
cmp
jnp
pop
inc
add
pop
repz
sbb
pop
xchg
sub
add
in
mov
jns
insb
lods
ret
jo
dec
xchg
jmp
es
xchg
sarl
es
test
push
mov
inc
outsb
and
mov
lea
pop
es
bound
in
inc
cmp
or
push
fwait
push
xor
std
rorl
rorl
inc
ret
dec
ljmp
xchg
fcom
sub
mov
xchg
mov
sbb
sbb
rcrb
sbb
clc
es
out
or
sbb
aas
jo
cmp
dec
jno
addb
xchg
xchg
movsl
mov
cmpb
sbb
loope
subb
jne
clc
fistpl
xchg
pusha
repz
daa
jg
mov
outsb
push
sbb
stc
add
rclb
cmc
in
shrl
and
xchg
add
sarl
in
push
test
cmp
andl
fs
inc
xchg
mull
and
push
push
fs
leave
inc
pushf
xchg
orl
lods
push
aad
sub
mov
fisttpll
adc
and
addr16
sti
fucomi
sub
xchg
pop
adc
xchg
dec
xchg
pop
inc
pop
mov
xor
mov
jg
clc
jno
mov
cmpsl
sub
lahf
mov
pusha
iret
cmc
cmp
ds
sub
cmp
xchg
mov
xor
or
sub
inc
or
stc
outsl
jnp
xchg
stc
leave
loop
dec
sbb
pop
mov
mov
pop
sub
add
std
mov
rclb
shrl
mov
lea
outsl
mov
push
and
pop
nop
mov
ret
clc
repnz
jl
jl
add
out
or
inc
clc
push
mov
inc
sub
ljmp
xlat
ror
popa
les
sbb
notb
and
cmp
add
test
or
pop
dec
jne
pop
push
iret
insl
in
shrb
sahf
add
push
mov
int
or
daa
xchg
add
hlt
rolb
push
sub
out
dec
shll
gs
and
out
jo
dec
jae
adc
and
add
cmp
mov
jle
xor
loopne
pop
and
push
js
aaa
push
add
push
or
pop
or
push
aam
test
sbb
dec
fwait
lret
jae
das
ret
fs
addr16
adc
out
lds
in
sti
xchg
push
sbb
cltd
fnstsw
push
push
mov
push
mov
cmp
dec
mov
jecxz
sbb
dec
xchg
test
dec
stc
cmpb
inc
or
stos
adc
ja
mov
xor
sbb
xor
xor
jmp
fsubs
pmullw
and
or
nop
jo
in
mov
mov
inc
mov
mov
pop
cmp
dec
iret
cmp
add
xchg
mov
lea
roll
aad
jns
stos
jae
pop
xor
or
bound
push
sub
ljmp
aam
mov
cmp
mov
scas
add
je
lods
jo
lret
dec
xchg
loop
test
fs
xchg
jb
les
es
fs
shlb
add
repz
and
aaa
imul
stos
dec
cli
addb
cmc
int
test
mov
in
cmp
call
cmpsl
ja
dec
push
es
jmp
jg
dec
push
divl
loope
andl
fbld
lds
jb
push
sub
imul
addb
sarl
mov
fwait
mov
push
stos
out
dec
jb
or
or
lea
lods
movsl
push
sarb
sbb
movsl
jmp
lods
rorl
sbb
icebp
clc
push
dec
ljmp
push
push
loop
inc
adc
enter
dec
gs
pop
movsb
ljmp
jp
mov
mov
ss
out
adc
xor
mov
aam
jmp
in
loop
data16
daa
pushf
out
sub
popf
xor
div
mov
cmp
xor
cmp
mov
test
xchg
pop
inc
pop
lods
cs
mov
push
bound
aad
xor
scas
mov
mov
jmp
sbbl
hlt
imul
xchg
in
leave
clc
shrb
test
pop
push
cmp
rcr
je
xchg
or
ds
movsb
enter
nop
and
add
ljmp
mov
xor
cltd
loope
add
ret
pop
cwtl
es
in
lea
subl
insl
notb
cmp
test
rcll
sbb
jno
inc
cld
cltd
xlat
jecxz
mov
lret
and
jnp
scas
aad
sbbl
pop
leave
divl
je
pop
repz
inc
icebp
andb
movsb
dec
dec
push
adc
adc
cmpsl
xchg
cmp
clc
gs
rorl
cmp
sbb
sahf
or
cmp
clc
cmpsb
jecxz
pop
lret
mov
fs
lahf
aaa
adc
xchg
and
sub
js
xadd
pop
aas
imull
mov
or
iret
cmp
mov
imul
jb
clc
ret
mov
aad
sbb
inc
or
in
dec
cmp
scas
stos
and
out
adc
or
mov
lret
push
add
movsb
sub
push
ficompl
les
stos
int3
iret
mov
dec
jl
jge
inc
movsl
fwait
dec
mov
push
or
sbb
or
fstps
js
aad
int
std
icebp
dec
es
jge
dec
add
xor
sbb
test
xchg
lods
dec
mov
add
cs
aam
out
test
filds
popf
inc
add
jbe
lahf
clc
loop
rcrl
int
adc
pop
jl
rolb
fists
lods
sbb
dec
das
nop
dec
icebp
jecxz
inc
sub
scas
sarl
mov
jmp
in
xchg
and
call
cmpsl
pop
sub
lret
pop
push
xchg
int3
xchg
aam
js
mov
mov
adcb
cmp
inc
shlb
ret
leave
dec
rclb
mov
test
cs
rolb
mov
adc
and
or
dec
fs
mov
lret
xlat
pop
lret
call
in
test
xchg
xchg
jg
inc
jl
inc
jne
repz
jmp
sbb
lahf
pop
mov
push
and
cs
rcr
inc
daa
push
inc
pop
adc
out
fadds
add
cmp
push
loop
sbb
adc
cmp
int
adc
les
or
lods
stos
sub
mov
jb
xor
add
pop
loopne
dec
popf
sbb
xorl
xor
xchg
jb
ror
pushf
mov
dec
jl
in
adc
mov
lds
mov
push
xchg
movl
jp
lea
outsb
pop
shl
jecxz
and
cmp
pop
inc
jmp
push
neg
adc
push
shlb
inc
jo
mov
mov
fildl
push
mov
andps
adc
lea
mov
dec
jp
lods
fs
dec
lret
ret
stos
xor
imul
pop
mov
dec
mov
lahf
mov
or
loopne
jno
mov
jmp
mov
push
mov
mov
fmull
stos
inc
pop
je
jbe
push
or
movsb
mov
cmp
sub
sarl
push
adc
lock
loopne
fld
cli
aam
mov
bound
idivl
mov
xor
cmp
cld
les
movsl
adc
shll
sub
push
int
pop
dec
imul
jmp
test
add
adc
mov
inc
and
fildl
mov
int3
cli
or
arpl
xchg
cmpsb
add
in
adc
cmp
cmp
dec
dec
mov
mov
popa
test
xchg
ret
lret
movsb
dec
int
jae
push
sbb
mov
js
popa
inc
jo
add
sti
adc
shlb
inc
add
loop
sbb
shll
adc
mov
mov
cmp
adc
popa
lock
dec
push
and
sbb
jnp
jge
aad
xor
jbe
cmp
cmp
rorl
outsb
mov
or
jp
ss
or
sbb
xor
dec
dec
and
cmp
push
sahf
into
or
push
jge
mov
mov
pop
mov
ret
shlb
jbe
pop
adc
fistl
lods
push
gs
xchg
inc
sbb
mov
mov
dec
dec
popf
cmp
jbe
das
scas
cmp
add
push
lahf
lahf
or
adc
push
addr16
pusha
ja
jg
cmp
adc
fisubs
cmpb
mov
bound
xchg
and
or
inc
imul
inc
jnp
jb
sub
pop
lock
in
fidivl
insb
rorl
jo
mov
jo
icebp
push
dec
xchg
aad
push
pop
imul
pop
movl
pop
imul
ss
lea
pop
cmp
or
testb
imul
fldt
rclb
ljmp
sbb
test
fsts
aas
xchg
push
cmp
mov
cmp
lahf
xor
push
iret
es
add
out
in
adc
adc
add
mov
inc
cmp
insl
sbb
out
mov
add
push
xchg
add
adc
add
xchg
pop
in
scas
or
sarb
adc
add
add
xchg
sbb
in
adc
dec
xchg
mov
inc
out
sbb
mov
test
xor
sbb
lods
lock
repnz
adc
and
jl
cmp
mov
fiaddl
cmp
sub
sbb
mov
mov
rcl
pop
ret
jmp
in
lds
cmc
cmpsl
sbb
mov
negb
lahf
and
mov
inc
in
insl
push
cmpsb
sub
cmp
loop
push
mov
inc
fisubs
scas
repz
mov
cld
ljmp
xchg
dec
inc
rclb
sbb
xor
loopne
rol
jecxz
or
mov
cld
sub
add
and
cwtl
cmp
sarb
repz
pop
sub
sbb
inc
test
arpl
sub
add
mov
js
data16
subl
dec
cmp
scas
jb
loop
lock
add
lahf
scas
loope
rclb
push
cmp
sbb
inc
sbbb
add
sub
jo
or
lock
or
pop
push
mov
dec
push
jmp
cs
movsl
xor
push
ret
sub
jecxz
aas
sbb
mov
int
popa
push
or
inc
xor
and
sahf
bswap
test
dec
lds
mov
pop
dec
lds
aad
and
mov
in
or
xchg
push
push
or
dec
lret
lds
jge
mov
gs
pop
call
mov
loope
outsb
pop
xchg
or
test
adc
je
mov
inc
push
push
fsubrl
sbb
mov
sub
pop
mov
dec
pushf
ljmp
call
and
mov
fucomp
popf
cmp
fs
mov
lret
inc
push
pop
cli
and
cmp
cmpsb
jmp
shll
push
cmp
sbb
mov
push
jbe
data16
daa
dec
sbb
loop
dec
call
or
lahf
bound
push
dec
les
movl
lods
lcall
hlt
mov
cmp
jbe
mov
popf
pop
cmpsl
lock
ss
lret
push
stos
or
xor
jns
cmc
enter
adc
pmuludq
out
or
mov
or
movsl
test
and
xchg
iret
jg
push
js
push
adc
add
mov
rcrl
imul
imul
sbb
aas
push
cmpsl
add
in
or
push
mov
inc
jecxz
aam
std
pop
clc
jge
in
and
loopne
add
cmp
pop
hlt
scas
scas
stc
fldt
dec
xchg
lds
fstpl
mov
aad
sub
dec
scas
ret
mov
sbb
dec
movsb
dec
sbb
jo
xchg
xchg
xor
mov
mov
scas
call
mov
xor
ds
add
stos
dec
pop
mov
inc
lds
or
mov
cld
push
loope
xor
movsb
cld
lcall
sub
fs
test
fldenv
mov
pop
int
and
stc
pop
jg
mov
xor
addb
mov
sub
iret
shrb
jo
daa
fcomps
rorb
inc
mov
pop
enter
xor
jae
xchg
or
dec
dec
xchg
sti
loopne
cld
and
or
lret
data16
mov
mov
inc
xlat
je
dec
dec
inc
rcll
inc
les
pop
cmpsb
out
jge
icebp
adc
xlat
inc
sub
adc
or
mov
gs
or
sbbl
shll
ret
inc
imul
je
push
mov
test
cld
sbb
repz
je
int
pop
add
jae
jbe
pextrw
scas
dec
mov
jge
xchg
shll
test
dec
lcall
dec
ret
jb
iret
sbb
ja
push
popa
shrl
mov
cmp
bound
jge
inc
popf
loopne
das
dec
pop
sbb
ja
hlt
jle
dec
lock
xchg
sar
repz
movsb
dec
mov
int
jnp
mov
mov
jmp
loop
jmp
idivl
lcall
testl
test
outsl
sbb
popa
or
or
cmc
stos
jno
inc
test
cltd
push
leave
adc
shrl
jns
push
nop
adc
out
jmp
test
sbb
xchg
or
aad
xchg
lods
adc
js
cld
or
fsubr
icebp
or
mov
xor
popa
jge
outsb
push
and
mov
xor
test
les
mov
pop
jl
jp
jmp
fadds
mov
iret
fwait
or
das
cltd
adc
add
flds
popf
lds
cltd
and
pop
andl
pand
pop
add
adc
out
adc
dec
mov
xor
stos
adcl
add
fmuls
pop
jmp
mov
sub
xchg
test
mov
notl
mov
xchg
mov
mov
mov
pop
mov
lock
mov
je
sbb
sbb
shlb
push
fsubrl
mov
arpl
cmp
jbe
les
jl
outsb
sbb
dec
cmp
jne
rorl
insb
push
lcall
stos
outsb
pop
jle
sahf
rol
popf
inc
xchg
mov
icebp
xor
inc
test
pusha
arpl
cmc
sub
and
and
lds
testb
and
test
movsl
jbe
mov
cmp
push
mov
aad
xor
in
sbb
pop
repnz
test
f2xm1
jnp
and
inc
shl
popf
sub
je
les
pushf
adc
dec
jo
add
aam
insb
mov
push
or
pushf
or
popa
jbe
test
es
call
inc
mov
popl
fwait
and
sahf
jmp
loop,pn
es
and
xchg
aas
icebp
mov
jg
ficompl
iret
mov
dec
loopne
pop
cmp
and
add
cmp
bound
mov
mov
cmp
repz
adc
test
mov
inc
push
lock
arpl
es
xor
lcall
sub
dec
lret
cmpsl
mov
mov
test
inc
ja
xlat
pop
cmpsb
jmp
stos
add
cwtl
jmp
adc
adc
sbb
sub
jno
loope
lea
jmp
adc
loopne
xchg
je
xor
or
cmp
dec
jmp
push
int
stos
test
mov
mov
inc
stos
and
lock
inc
mov
pop
mov
call
shlb
cmpsl
cmc
xor
sbb
stos
repz
sub
sbb
out
xor
iret
rorl
roll
test
xchg
aam
pop
mov
push
push
mov
sbb
jnp
dec
call
aaa
xchg
inc
mov
cmpsl
mov
xor
flds
rorb
adc
imul
mov
out
xchg
adc
fidivs
mov
sbb
cmp
leave
adc
adc
push
cmp
mov
pop
sbb
ss
inc
test
pop
jae
push
jge
inc
push
orb
arpl
xor
dec
push
das
adc
xor
outsl
dec
cmp
loopne
jb
cli
or
fdivrs
add
in
push
call
scas
test
push
xor
lahf
dec
mov
push
aad
in
pop
add
leave
pop
pop
sbb
cmp
addr16
rclb
add
mov
sbb
stos
pop
jle
xor
mov
adc
mov
mov
mov
or
test
fisubrl
rol
mov
jg
inc
pop
xchg
lods
out
cs
mov
xor
sbb
push
imul
push
outsl
sbb
sbb
int
pop
mov
push
sub
clc
adc
out
fldcw
and
xchg
jmp
or
rcrl
sti
add
add
mov
popf
out
adc
dec
adc
fwait
inc
test
in
sbb
test
dec
adc
xchg
lahf
xor
scas
mov
adc
dec
test
aad
inc
fincstp
xor
fildl
dec
push
or
add
adcl
jb
inc
lret
aaa
scas
jae
jp
cmc
adc
sub
jp
inc
pop
dec
add
jnp
xchg
and
or
jb
rorl
into
adc
fstpl
mov
sbb
imul
mov
pop
stos
xchg
adc
clc
iret
loopne
add
and
mov
or
mov
popf
xor
jp
add
sub
jno
aaa
fdivl
mov
sbb
repz
clc
sub
inc
add
insb
mov
and
addr16
ret
adc
mov
out
rolb
decb
imul
pop
push
pop
adc
jle
cmpsl
sub
xlat
mov
mov
or
mov
push
push
adc
fimuls
out
mov
or
data16
push
popf
or
imul
pushf
insl
push
insb
sbb
inc
imul
imul
dec
sarl
pusha
lods
cmp
pop
stos
and
pop
dec
ret
add
cmpl
sbb
andl
leave
int3
sub
inc
or
lock
in
xchg
pop
add
les
test
addb
dec
cltd
popf
dec
add
fdivs
unpckhps
push
inc
xchg
push
jns
inc
sbb
imul
add
xor
or
sub
cmp
sarl
insl
in
sub
shlb
out
mov
dec
mov
cli
nop
shrl
xchg
loopne
push
movl
jns
lahf
jecxz
push
rcpps
icebp
adc
mov
dec
xchg
test
mov
movd
xchg
inc
pop
adc
lea
xor
rclb
add
movsb
es
xor
gs
sbb
cmpsb
mov
lcall
inc
jbe
push
jbe
frstor
repnz
popa
mov
arpl
pop
jmp
mov
mov
jno
lret
or
inc
adc
xor
roll
aaa
jae
add
inc
scas
sbb
add
push
sti
sar
lock
pop
mov
cmc
pusha
or
pop
jmp
test
push
or
mov
cmpsb
mov
loopne
bound
jne
adc
test
das
sub
mov
sbb
cmp
cmp
lahf
es
jae
insb
add
ret
rcrb
scas
push
shll
mov
cmp
mov
les
lret
mov
jge
daa
mov
xor
movsl
outsb
jmp
jle
enter
and
es
add
push
test
mov
and
cmp
das
dec
mov
add
mov
loopne
lock
movsl
mov
loope
test
sarl
pop
je
sbb
mov
ds
movsb
popl
lret
mov
cmc
xor
loop
das
and
add
pop
rcrb
cmpsb
loope
cmpsb
dec
push
and
inc
mov
pusha
pop
add
data16
sbbb
test
and
imul
dec
rorb
iret
xlat
cmp
inc
push
add
or
dec
insb
lcall
dec
faddl
sbb
push
push
cli
mov
cli
xor
push
sub
int3
sub
mov
shlb
adc
xchg
mov
xor
fnstenv
pop
cld
cmpb
inc
pop
fcoml
data16
stc
and
jp
push
scas
mov
cmp
sbb
dec
shl
mov
dec
xchg
inc
stos
out
xchg
sub
popf
jl
subb
loop
mov
mov
addr16
fisubrl
aad
jmp
shrl
pop
push
jae
push
test
pop
jnp
pop
mov
leave
sub
xchg
arpl
push
fs
popa
insb
pusha
dec
mov
js
sub
cmpsl
ja
xchg
mov
inc
inc
mov
cmc
je
dec
in
add
fisttpll
in
pop
lock
daa
jle
mov
sub
xor
mov
loopne
jae
test
clc
mov
movsb
aaa
lcall
ret
out
scas
pusha
cmp
jmp
push
outsb
shlb
xlat
jmp
mov
cmc
test
ret
push
mov
mov
clc
outsb
cld
ja
sbb
fisttpl
mov
xor
popa
daa
std
in
testb
and
leave
fxch
push
call
fimull
ror
in
push
mov
pop
mov
xchg
sbb
repnz
xor
cmpsb
scas
jmp
adc
mov
sti
adc
push
add
fs
fsubrl
ljmp
sub
sbb
and
clc
icebp
pop
add
and
sub
lret
push
mov
mov
repz
xchg
test
sbb
or
mov
nop
xor
and
pop
icebp
sbb
xor
pushf
ljmp
push
cwtl
ret
mov
mov
cmp
inc
jbe
mov
test
jg
pop
daa
leave
loope
add
dec
stos
add
xor
inc
and
fisubrl
add
sbb
sbb
ror
xor
inc
mov
mov
jo,pn
inc
mov
jo
jle
pop
and
lea
push
loopne
dec
jbe
inc
ret
outsb
fwait
push
mov
out
out
shr
insb
mov
sub
loop
sbbb
test
mov
cmp
int
pop
mov
cmp
or
mov
mov
dec
push
jmp
aad
sbb
icebp
dec
cmp
xor
or
xchg
dec
mov
lods
lds
popf
add
mov
std
xor
das
loope
or
jl
jbe
add
sub
sbbl
push
ds
repz
mov
and
mov
push
lds
xchg
jns
pop
pop
in
add
fsubs
xorl
out
add
xchg
or
xchg
adcb
pop
test
pop
std
xchg
stos
popf
pop
xor
sub
shl
hlt
in
push
sbb
outsl
inc
jp,pn
adc
bsr
cmp
pop
inc
pop
mov
in
jns
lahf
cmp
push
adc
pop
das
dec
mov
les
cmp
xor
adc
add
cwtl
das
leave
les
xchg
out
stc
stos
mov
xchg
cmp
push
cli
aad
mov
movsl
add
mov
jo
sub
mov
jno
sbb
cld
je
mov
adc
pop
add
jg
push
das
adc
cmc
cwtl
and
stc
mov
mov
mov
push
js
xchg
xor
das
jmp
iret
inc
xor
push
jns
int3
sbb
rcrl
add
bound
mov
movsb
int3
rorl
dec
adc
ds
or
iret
cmp
pop
mov
xor
jp
push
mov
enter
sub
es
xchg
outsl
dec
insl
int
jl
lds
jecxz
inc
shl
push
ljmp
mov
scas
push
xor
repz
jbe
xor
lock
push
cli
cmp
mov
and
enter
rcrl
add
jmp
je
and
mov
xchg
dec
movsl
aad
sbbl
jp
sbb
js
lods
lcall
dec
adc
push
jl
sarl
sub
jns
lret
xchg
mov
mov
sahf
sahf
imul
jg
add
pusha
lock
pop
and
scas
and
stc
push
pop
mov
das
xchg
cmp
push
or
pop
scas
and
xor
jp
jl
jne
jne
out
inc
fiadds
lahf
dec
hlt
adc
call
icebp
dec
cmp
rorl
out
add
loop
and
jp
mov
ror
out
pop
pusha
mov
outsl
cld
pop
sbb
dec
scas
sbb
xchg
sahf
pop
adc
dec
mov
cli
dec
sub
adc
dec
daa
divb
or
data16
xchg
fdivrl
mov
ret
jge
movsl
jo
sbb
ss
and
bound
loop
push
pop
jg
dec
ficoms
mov
addr16
sbb
mov
ss
lock
xor
dec
dec
jae
stos
mov
hlt
jno
call
jmp
xchg
xchg
mov
aam
jnp
push
adc
aam
jl
lret
fisttps
sbb
cmp
xlat
jg
pop
push
jmp
std
or
dec
les
test
push
and
repnz
push
push
mov
dec
xchg
rcr
aaa
pop
rolb
sbb
daa
push
cli
add
mov
push
cli
cmc
in
jnp
into
movsb
cmc
in
out
insl
adc
sub
sbb
add
mov
adc
mov
outsb
call
ror
adcb
adc
push
mov
loop
push
jge
push
int
mov
shl
add
fsubs
or
clc
push
push
shrl
pusha
pushf
pop
aam
testl
and
mov
psubb
mov
ficomps
pusha
inc
cld
push
shlb
dec
and
mov
cmpsb
and
xor
ja
jno
add
std
xchg
das
xchg
jne
rorb
inc
mov
pop
popa
adc
scas
rcl
pop
dec
movsl
adc
lahf
sbb
andl
adc
cmp
lds
sbb
push
out
xchg
sbb
stos
test
ret
call
and
xor
aas
and
xor
xchg
mov
inc
ds
dec
xlat
mov
cmc
in
push
or
cmp
pop
mov
push
sbb
aam
mov
dec
add
lahf
pop
jmp
test
or
or
add
fstl
mov
mov
sub
gs
enter
mov
in
testb
or
insb
andl
push
jecxz
das
xorb
aaa
in
jmp
addl
add
jb
ret
jmp
sbb
je
jle
out
xorb
inc
mov
add
lea
aaa
fisubl
ret
xchg
add
dec
out
sbb
pop
xor
xor
aam
clc
add
enter
inc
popa
nop
sub
rorl
xchg
cmp
or
push
cli
cmp
iret
pop
jge
test
loop
movsb
mov
xchg
jnp
or
fwait
pop
pop
jns
and
or
and
xchg
mov
sub
xchg
and
jp
jmp
inc
in
pusha
jmp
outsl
jnp
imul
ljmp
mov
or
mov
sarb
enter
dec
insl
rorl
inc
or
mov
sarl
call
test
nop
lcall
leave
pop
je
scas
mov
push
mov
mov
fst
les
fisttpll
gs
insl
adc
out
xor
inc
daa
jl
mov
or
std
jmp
ljmp
bound
mov
cwtl
lods
lcall
pusha
call
bnd
dec
adc
and
cmp
and
inc
repnz
and
pusha
mov
mov
aaa
stos
lcall
inc
into
leave
sbb
arpl
fiadds
inc
stos
or
pop
cmp
pop
lds
or
mov
dec
or
inc
and
in
xlat
xchg
loopne
and
clc
mov
jno
cmove
out
push
adc
or
or
imul
js
push
inc
mov
movsl
out
xchg
outsl
stos
add
xor
je
push
sbb
mov
mov
js
adc
pushf
adc
sbb
mov
pop
add
mov
adc
or
add
sbb
adc
test
arpl
dec
aas
es
adcl
ljmp
ds
sub
sahf
push
test
cld
mov
jno
push
jo
mov
pop
sbbl
jl
and
bound
roll
mov
hlt
aad
scas
lcall
push
lldt
mov
call
inc
lea
sbb
or
mov
add
and
push
fbstp
pop
test
mov
push
and
test
and
add
lods
stos
es
nopl
decl
daa
pop
fiaddl
int
sbb
push
jo
inc
dec
jl
xchg
inc
pop
pusha
outsl
or
adc
in
mov
or
jp
sbb
movsb
fcmovu
clc
jl
inc
mul
call
std
push
mov
ljmp
inc
jmp
sub
jbe
mov
jmp
cmp
mov
sbb
mov
insb
popf
cmc
jl,pt
adcl
shll
xorb
les
jne
push
sub
pushf
insb
aam
lea
data16
jno
int3
jmp
sub
jp
xchg
test
cs
dec
inc
dec
mov
add
lock
icebp
scas
leave
fnstcw
sbb
repz
add
mov
out
scas
cmc
enter
aaa
fisubrl
adc
mov
aad
pop
xor
and
arpl
and
cmp
sbb
imulb
sbb
lcall
mov
pop
and
sub
dec
adc
pop
cwtl
filds
cmpb
mov
xchg
scas
outsb
sub
push
xlat
xchg
mul
shll
pop
sbb
repz
adc
pop
xor
sbb
insl
aad
dec
dec
mov
enter
dec
dec
pusha
roll
xchg
cmpsb
dec
in
imul
sbb
xlat
push
add
push
rolb
xor
xchg
repnz
mov
or
mov
mov
mov
or
or
add
jne
dec
sbb
dec
pop
movsl
arpl
loop
popa
dec
outsl
xor
hlt
adc
mov
jb
sbb
in
stos
aas
mov
setle
mov
push
and
mov
or
lock
test
mov
mov
or
or
jg
jl
pusha
and
out
mov
mov
pop
cmp
je
xor
cmp
shll
mov
jns
ficompl
daa
outsl
pop
call
pusha
test
dec
shll
rcll
mov
jg
adc
ljmp
or
xchg
xor
enter
xor
fisubrl
pop
adc
cmp
fcom
sbb
cli
push
fisubs
jmp
cwtl
out
or
test
mov
hlt
es
cmp
inc
push
fdivl
orl
fnstenv
add
sbbb
iret
or
addb
pop
pop
cmp
arpl
pop
xchg
inc
push
mov
ret
cmp
loop
pop
mov
sub
shlb
rol
pusha
fisttps
loope
cmp
incb
xlat
imul
inc
add
jae
push
add
jg
and
in
and
mov
push
xchg
inc
addl
mov
iret
lods
stos
test
and
nop
orb
jne
sbb
icebp
fwait
lcall
pushf
and
xchg
or
scas
packssdw
or
xchg
pop
gs
cmp
sbb
in
xor
lahf
push
movsl
push
and
xchg
pushf
cmpsb
inc
dec
divb
das
dec
pop
push
lcall
mov
out
push
scas
ret
pop
xchg
rorb
adc
adc
pushf
jg
ljmp
push
mov
mov
inc
shll
sbb
imul
mov
adc
cli
push
test
and
sar
outsb
dec
pop
xchg
outsb
call
mov
push
js
dec
adc
sbb
jno
mov
mov
scas
rorl
aas
inc
sbb
pop
or
mov
mov
shll
gs
std
arpl
dec
stc
adc
inc
outsb
jmp
mov
dec
sti
xchg
mov
xchg
add
pop
mov
mov
popa
mov
sub
mulb
out
repz
jno
adc
jecxz
lea
cmp
jae
test
mov
cmpsl
scas
dec
pop
imul
add
loope
pop
pop
mov
pop
leave
int3
mov
jp
into
lods
in
sub
pop
js
aam
mov
xchg
rclb
push
loope
jg
std
mov
mov
push
jge
add
movsl
push
repz
mov
or
and
sub
push
das
leave
and
cld
xchg
paddb
pop
fcmovnb
int3
xor
lret
aad
shll
mov
xchg
sbb
mov
jne
fs
push
xor
mov
fs
and
movsl
mov
jne
addl
call
xchg
mov
pop
xor
in
jmp
imul
dec
clc
data16
sub
pushf
imulb
iret
dec
out
mov
lds
inc
int
inc
add
mov
xchg
mov
sub
nop
mov
jge
in
pop
lods
dec
push
inc
pop
shll
loopne
shlb
pop
mov
insl
mov
sbb
and
ljmp
movsb
cmc
je
cmp
cmpl
in
inc
mov
out
rclb
imul
sbb
sub
add
insb
test
pop
jp
ljmp
mov
sub
and
in
or
adc
in
lock
aam
sbb
add
mov
xchg
push
push
lods
mov
cmc
mov
cmpsb
rol
or
jne
inc
es
outsl
pop
cmp
je
xor
pop
inc
stc
pop
movsb
fdivr
adc
jae
jb
addb
arpl
icebp
cmp
int3
add
stc
mov
mov
imul
test
ret
mov
cmp
adc
mov
test
out
scas
dec
adcl
mov
out
sub
pop
sbb
pop
outsl
or
adc
xchg
insb
out
mov
lcall
pop
mov
rcll
inc
das
insb
pop
stos
mov
push
sbb
icebp
call
imul
jecxz
mov
movsl
daa
les
andb
rcll
gs
test
mov
ljmp
sarl
mov
out
ss
mov
ds
inc
fisttpll
sbb
cmp
nop
push
mov
and
les
cmpsl
mov
imul
mov
lods
pop
fsincos
pushf
jne
clc
cmp
and
in
cmpsl
push
lods
scas
test
dec
inc
fisubrs
jp
cmp
push
aas
ret
sti
or
inc
test
sti
jmp
xor
mov
lea
lret
lea
or
test
push
fistl
jns
test
dec
jl
xor
dec
aad
or
and
inc
pop
and
push
bound
or
xor
outsb
pop
incl
inc
in
or
std
mov
movsl
push
inc
mov
dec
shll
cmp
or
stos
mov
pop
test
jno
xor
pop
sbb
mov
test
push
int
xchg
or
mov
mov
movsl
dec
aam
int
push
js
mov
mov
xchg
ljmp
push
fisttpl
cld
xor
daa
xchg
add
mov
loopne
stc
xor
or
push
sub
xchg
aas
stc
leave
adc
aam
inc
and
mov
mov
pop
outsb
ds
call
sub
lock
lahf
je
lret
mov
inc
clc
data16
add
jge
push
in
scas
je
adc
mov
rolb
sbb
pop
or
mov
outsl
stos
push
jp
jo
adc
dec
cs
test
repnz
ret
cmpsl
xchg
cmp
mov
mov
mov
aam
test
rcll
enter
adc
push
push
call
les
dec
fcompl
add
push
xor
jne
adc
mov
orl
push
pop
fyl2xp1
mov
repz
test
or
inc
pushf
inc
fwait
sbb
adc
and
jns
sysenter
mov
out
orb
mov
sbb
and
test
pop
in
fnstsw
icebp
inc
icebp
insl
xorb
enter
pusha
and
pop
cmp
divb
inc
shrb
xchg
les
mov
adc
push
ss
outsl
lods
rcll
sbb
imul
mov
cmp
mov
aam
pop
push
mov
sbb
imul
jmp
sbb
push
sub
mov
fs
cli
push
jmp
test
push
mov
aaa
dec
or
jbe
enter
je
push
test
push
orb
cmp
ficoml
ret
scas
out
push
cwtl
adc
rcr
mov
mov
arpl
stos
cmp
and
lods
jmp
sbb
scas
adc
iret
mov
jge
ljmp
jb
fisubs
sbb
xor
push
ror
inc
in
xor
test
pop
xor
cwtl
and
adc
push
add
and
inc
out
arpl
mov
dec
inc
scas
pop
or
inc
add
pop
je,pt
shr
fists
lods
icebp
jg
incl
jns
insl
mov
lods
cmp
jne
pop
subl
push
sbb
sub
inc
xor
pop
inc
lock
or
jl
jge
inc
pusha
push
shlb
fcoml
mov
or
cmpsl
popa
scas
andb
ret
and
nopl
mov
mov
jg
xchg
jo
sbbl
popa
and
aad
mov
test
out
add
xchg
cltd
mov
hlt
mov
out
adc
push
cmp
fcmovnbe
jmp
aas
movsb
mov
or
dec
add
pop
outsb
sbb
std
pop
int3
fiadds
imul
iret
call
push
shrl
daa
cmc
mov
adc
test
push
or
adc
jno
xchg
pop
sub
bound
mov
cld
xor
aas
pop
cmp
popf
xor
pop
mov
mov
or
and
je
outsb
mov
fcmovu
or
or
push
jmp
imul
cmp
negb
jne
mov
dec
pop
leave
cmp
jle
les
push
clc
or
mov
mov
lds
hlt
pop
out
test
pop
adc
cmp
stos
lds
shll
or
xchg
push
push
hlt
xchg
push
cld
cmp
js
push
daa
test
rdmsr
hlt
mov
test
inc
cmp
ret
or
mov
push
in
dec
or
addb
xor
out
insl
mov
in
add
mov
loopne
stos
cwtl
cmpb
aam
xor
push
sahf
xchg
adc
xor
pop
pusha
notl
movsb
dec
or
adc
xor
aad
loope
or
pop
jae
js
fildl
pop
es
je
or
xor
shl
fsubrs
xchg
pop
adc
and
dec
shll
sbb
xchg
stos
xor
mulb
setns
sbb
mov
test
nop
adc
xchg
pop
add
loope
pop
push
xchg
inc
sub
adc
fwait
ss
pop
cmp
add
push
and
adc
shll
sbb
lcall
lods
cmpsl
adc
dec
and
lcall
adc
daa
pop
loopne
mov
movsl
or
loopne
ret
push
outsb
jns
mov
clc
xor
or
xor
ret
mull
clc
das
aam
jno
out
div
xor
repnz
dec
test
xor
repz
lock
mov
jns
push
and
fprem
ja
in
xchg
mov
add
pop
cld
xor
sub
push
out
enter
scas
jge
imul
mov
outsl
call
or
mov
mov
pop
shrb
dec
in
xchg
sbb
nop
inc
adc
push
mov
fdivrl
or
push
test
cmpsl
inc
or
ficompl
xchg
add
fs
add
lret
mov
sub
and
mov
dec
jmp
xor
or
add
leave
mov
stc
icebp
leave
sbb
pop
popa
enter
addl
add
dec
or
mov
imulb
pop
adc
cmc
and
insb
sub
or
stos
add
or
std
mov
cmp
in
push
call
sub
lret
daa
or
leave
enter
daa
inc
cmp
sbb
push
pop
bound
inc
and
jae
jns
pusha
shlb
inc
loop
mov
add
outsl
scas
clc
mov
sbb
addr16
push
push
pusha
mov
cmp
push
inc
pop
jo
sub
fadds
cli
fisubl
in
xchg
sti
push
pop
sub
inc
enter
loope
fimuls
out
adcb
pop
xchg
mov
aaa
pop
pop
lcall
adc
int
xor
fdivs
adc
shlb
xchg
sub
stos
jne
xor
jg
sub
rcr
fsubr
rcl
cmc
repnz
test
scas
aas
aad
ret
inc
jmp
push
lahf
xor
int3
insb
fldt
inc
sub
jb
mov
add
lea
pop
xlat
xchg
xor
rcr
cld
lock
sub
dec
cmp
lds
dec
aaa
pushf
ror
push
ja
push
inc
mov
xchg
and
dec
jae
jno
xor
mov
jo
xchg
sbb
loop
imul
mov
punpcklwd
pop
mov
jb
mov
mov
test
sahf
dec
xor
mov
ja
xchg
pop
xchg
push
and
push
mov
and
lret
stc
cmp
xorl
test
mov
loopne
or
xchg
jae
sbb
and
das
add
push
jno
cs
jmp
sub
xor
ror
xorb
add
mov
ds
iretw
aam
std
cmp
mov
es
fsts
push
lret
mov
xor
clc
xchg
push
fcmove
jno
mov
cmc
call
inc
outsb
sbb
sbb
imul
inc
dec
mov
les
rcll
push
pand
push
aam
jge
inc
callw
das
xchg
outsb
push
inc
push
aaa
nop
test
sbb
jp
mov
jl
cmp
shr
dec
andb
xor
lock
ljmp
push
sbb
mov
negb
pop
ljmp
insb
xchg
push
add
popa
pop
repz
adc
mov
fwait
lea
push
sbb
push
ljmp
lock
xchg
mov
pop
or
mov
clc
xchg
cmp
in
outsb
ljmp
aad
xchg
test
pop
add
gs
clc
test
and
and
push
add
sbb
sbb
push
pop
dec
or
loopne
jne
icebp
or
push
clc
mov
nop
lock
shl
mov
push
dec
adc
xchg
lock
mov
inc
sti
dec
ret
push
pop
dec
mov
in
imul
xor
fidivl
arpl
adc
pop
fcoms
dec
cmc
add
adc
gs
ljmp
aaa
mov
mov
jge
in
hlt
mov
sbb
add
inc
les
push
add
shrb
jle
jne
pushf
push
jecxz
clc
test
in
mov
xchg
js
add
xor
sbb
ret
aam
fs
daa
pop
and
inc
cli
test
loopne
insb
sbb
js
insl
push
ss
int3
nop
jmp
xchg
dec
inc
add
add
popa
dec
iret
pop
lds
pop
pop
jno
xor
cld
rolb
and
rorb
sahf
or
test
dec
fildll
jmp
dec
adc
fldt
std
cmp
or
out
add
mov
sbb
push
push
jl
ja
out
dec
mov
sub
jecxz
scas
jmp
mov
and
sub
sub
cmp
xchg
or
adc
loope
jne
imul
or
addb
jo
cwtl
out
sbb
rorl
dec
xchg
jnp
out
inc
jl
lret
in
cmc
adc
repz
xor
into
sbb
fldcw
popaw
int3
jge
sbb
aaa
stc
gs
pop
or
cmp
out
dec
pop
imul
mov
subl
push
and
jno
imul
add
and
aaa
imul
cmp
mov
push
cmpsb
or
popa
mov
lahf
cmc
leave
and
adc
push
mov
pop
mov
in
add
inc
pop
pop
lret
aam
cmp
or
hlt
inc
cmpsb
mov
mov
test
je
mov
xchg
enter
div
cs
push
lahf
jo
adc
mov
xorb
inc
xchg
repnz
test
es
test
adc
jle
push
inc
int
lock
adc
nop
jo
popfw
or
data16
adc
mov
xor
aaa
cmp
xlat
cld
adc
cmpsl
jp
loopne
sti
bound
push
cmp
or
sbb
fwait
xchg
xchg
mov
sub
mov
and
sub
pop
dec
push
and
dec
inc
das
fs
mov
xor
sbb
jge
add
sub
xchg
xchg
pop
shrl
sub
mov
jno
iret
loope
imul
sbb
mov
data16
fimuls
sbb
clc
icebp
in
adc
das
cmc
xchg
mov
das
repnz
dec
out
mov
pop
mov
shl
push
insb
insb
adc
stos
mov
or
outsl
sub
daa
ffree
jmp
imul
mov
sub
pushf
sbb
sbb
leave
mov
pop
or
into
xchg
adc
mov
fisttpl
pop
xchg
sbb
xor
push
lock
dec
pop
inc
rorl
sub
test
lahf
sbb
test
test
xor
jno
fsubrs
mov
not
jb
xor
icebp
lods
dec
sarb
movsl
jg
jge
cmp
mov
roll
cmp
push
ljmp
dec
cwtl
pop
shll
out
sti
mov
mov
mov
fidivrs
shlb
mov
xchg
loopne
or
mov
push
and
ret
add
mov
adc
outsb
xchg
psadbw
mov
daa
mov
ds
mov
inc
push
int
decb
cmp
hlt
dec
ret
mov
sub
add
push
sub
test
cs
aad
lcall
addr16
in
or
arpl
or
ret
inc
rcrl
in
push
std
and
add
insl
cmp
add
xor
inc
nop
popl
stos
pop
lcall
or
lea
jae
sub
stos
mov
push
push
lret
rcrb
hlt
inc
xchg
rolb
fistpl
mov
pop
sub
cmp
xor
xor
icebp
dec
test
mov
cmpsl
out
aam
and
pop
lods
ret
sbb
mov
mov
push
push
pop
jecxz
movb
push
loope
xlat
dec
insb
dec
rcll
cmc
and
sti
leave
cmp
xchg
xchg
add
cwtl
inc
xabort
cmpsb
mov
mov
loope
sub
add
cmpxchg
inc
leave
add
test
loop
loopne
aam
lahf
cmc
scas
add
gs
mov
fldl
mov
fsts
xor
sbb
clc
test
sub
mov
inc
jl,pn
jb
pop
loope
jge
aam
mov
push
sbb
das
inc
pop
add
cmp
cmp
loopne
hlt
xor
push
gs
or
and
pop
jo
and
jl
mov
push
int
add
xor
add
lahf
cli
andb
mov
insb
es
lea
pop
mov
adc
mov
rcrl
inc
clc
xor
sbb
xor
inc
data16
ja
mov
and
mov
aam
popf
roll
add
imul
adc
sub
shlb
loopne
icebp
insb
lcall
mov
imul
orl
stos
rol
cmp
mov
out
mov
pop
sbb
or
cmp
push
mov
mov
stc
ret
cmpsb
sub
cmp
fiadds
mov
jp
in
loopne
inc
outsb
dec
ret
cmc
or
mov
sbb
pop
add
mov
inc
fidivrs
ret
in
testl
push
cli
inc
jmp
mov
test
in
scas
insl
rclb
mov
pop
mov
mov
loop
std
sbb
add
cmp
das
shlb
pop
dec
iret
mov
jge
repz
push
sar
cli
ja
in
or
push
push
add
jae
rol
push
dec
mov
dec
jecxz
test
cwtl
loope
mov
pop
push
cli
aaa
in
call
pop
cmc
adc
xor
fisttpll
cmp
pop
mov
dec
xchg
js
mov
dec
movl
mov
mov
sbb
stos
jle
testb
ret
imul
push
cli
rclb
and
and
push
adc
and
nop
out
test
fcmovu
shrb
out
sbb
ljmp
or
dec
aaa
mov
lahf
jp
add
lods
xchg
push
adc
and
daa
stos
les
fs
loop
add
insb
lock
mov
mov
ljmp
cmp
xchg
addr16
jne
rcl
mov
aas
in
add
mov
cmp
ret
test
inc
or
push
lds
adc
in
lahf
mov
ret
sub
sbb
inc
aaa
inc
pop
push
popa
mov
in
mov
cwtl
fiadds
and
and
jno
loope
pop
fistl
rcrl
rcl
ljmp
stc
imul
int3
shlb
push
xchg
scas
fisubs
xchg
dec
xchg
mov
sbb
pop
cmp
cmp
mov
sub
mov
lock
inc
das
scas
call
xchg
mov
mov
pop
rclb
loope
jo
sar
xchg
cmp
fs
mov
cmp
jle
add
mov
jl
les
pop
push
scas
jp
xchg
mov
inc
jg
and
push
sti
dec
jbe
fwait
mov
mov
sub
clc
pop
lret
sub
js
or
xor
stos
out
cmp
xchg
stos
roll
sti
xor
fdivrs
xor
push
mov
lock
out
dec
mov
mov
xor
testl
sarl
fstl
nop
imul
mov
fcmovb
and
fwait
jle
shld
or
pop
xor
sub
mov
rol
push
inc
push
push
xor
jbe
adc
ret
add
lea
je
aad
lret
sbb
push
sbb
stos
inc
cli
dec
add
nop
fimull
push
ret
pop
lcall
xor
jp
xorb
mov
push
mov
mov
push
mov
xchg
and
mov
xor
push
mov
loopne
outsb
ljmp
aam
dec
hlt
call
mov
movsb
xchg
loop
adc
mov
xor
ret
and
push
call
ret
jg
pop
push
scas
jae
mov
test
loop
inc
cld
push
or
mov
je
mov
popf
push
repnz
cs
jns
ret
das
mov
dec
fdivr
push
in
das
daa
adc
push
dec
leave
xor
dec
sub
jmp
sub
adc
mov
mov
jns
inc
push
rcll
sete
push
cwtl
pop
test
dec
mov
add
cmp
cltd
dec
movsb
sbb
scas
fadds
out
adc
test
lock
pop
in
pop
push
sbb
cmp
jp
nop
cmpsl
dec
int
cmp
xchg
fmull
test
ja
mov
adc
movsb
jo
fiaddl
push
cmp
xor
mov
mov
ret
popa
cltd
mov
push
push
and
push
add
call
rcrb
add
add
out
popa
stc
sahf
pop
pop
aam
in
push
test
movl
mov
ret
stos
fdivl
or
mov
ljmp
stos
xchg
fdivr
dec
cmp
testl
insl
clc
mov
sub
sub
js
fwait
in
jge
fwait
leave
and
mov
cmp
and
fwait
push
jnp
sarl
stc
loop
lods
mov
mov
mov
and
pop
clc
mov
inc
cwtl
cmp
lahf
adc
cmpsl
xchg
pop
jno
dec
loop
mov
lods
stos
adc
loop
dec
sbb
pushf
push
and
or
aad
adc
mov
mov
mov
rcr
xor
lea
xor
sbb
jns
movsb
pop
and
call
inc
fwait
lock
in
jae
dec
sub
insl
icebp
sub
mov
push
daa
lcall
mov
sub
push
inc
aaa
push
adc
add
pusha
lock
and
cld
clc
mov
mov
lods
sub
or
jle
test
xor
sbb
loop
pop
mov
or
push
movsb
fwait
hlt
push
lret
inc
fs
push
inc
jmp
or
ja
push
mov
inc
jle
outsl
pushf
sbb
jne
or
insl
cli
int
and
dec
sub
rol
sar
xchg
inc
sbb
mov
cmpsb
cmpl
pop
jl
in
insl
dec
xor
dec
mov
cmp
dec
popl
mov
inc
in
inc
sbb
pop
rcl
mov
aaa
mov
xchg
movsl
call
loopne
mov
out
fdivrs
or
fcmovnbe
adc
push
insb
addb
push
cmp
or
sub
daa
mov
dec
xor
je
mov
pushf
popl
ss
ljmp
mov
sarb
shlb
shl
push
fmull
mov
out
add
enter
pop
xor
pop
push
lcall
xchg
push
testl
ljmp
inc
lds
std
cmp
scas
cmp
movsl
xchg
pop
loopne
fwait
mov
loopne
sysexit
push
mov
adc
or
mov
xor
popa
xchg
fisubl
push
adc
ret
mov
pushl
ficomps
hlt
mov
pop
jge
add
jne
push
and
jp
xchg
int
adcl
add
bound
jl
mov
pop
jge
jecxz
std
dec
push
jl
imul
outsb
push
fists
pop
xor
es
test
push
or
loop
cmp
lods
scas
cmc
add
mov
sub
lahf
xchg
push
adc
and
movsl
sub
lahf
jo
outsb
mov
scas
add
pushf
movsb
xchg
push
out
sub
test
xchg
inc
hlt
and
ja
dec
fldenv
sub
mov
sbb
add
sbb
sbb
or
mov
imul
dec
xchg
xlat
les
push
jns
stc
xor
sbb
pop
push
mov
xor
jg
sbb
dec
inc
jns
xchg
adc
lcall
inc
lahf
addr16
adcb
repnz
push
pop
insl
sbb
popa
cli
mov
clc
lods
push
sub
vpmaxsd
and
cmp
in
push
gs
lock
jo
xor
mov
hlt
loope
cmp
jl
rol
inc
mov
xchg
push
and
xchg
lock
pop
xchg
test
mov
cmp
cmp
ds
stos
addb
orb
cmp
daa
sarb
dec
add
add
fstl
lcall
icebp
jae
cmp
xchg
es
pop
adc
sti
jle
push
mov
ret
add
andl
sbb
mov
xor
push
sub
inc
stos
popf
add
mov
rol
jl
aaa
ss
dec
mov
xor
je,pt
cmpsl
pop
pop
ss
cmc
push
inc
lcall
loope
dec
lcall
pop
test
ror
mov
fwait
sbb
sbb
push
sbb
mov
mov
mov
mov
and
lds
dec
or
cmp
sar
je
inc
inc
idivl
mov
clc
cld
lods
repz
loop
out
or
or
mov
add
adc
xor
mov
mov
stos
ret
sub
pop
loope
sarl
mov
test
mov
outsl
bnd
and
jp
dec
iret
mov
xchg
bound
call
stos
jle
scas
pop
cld
hlt
push
mov
into
add
lock
cltd
les
dec
sub
pop
rol
inc
adc
mov
inc
jmp
insb
push
lds
mov
clc
push
in
shll
test
daa
mov
setge
mov
and
xchg
sub
sbb
mov
test
mov
cmpsl
subl
sbb
sbb
lea
icebp
or
or
sub
gs
fisubs
cmp
ds
inc
jo
in
fistpl
repnz
or
add
hlt
test
loop
incl
movsl
push
das
or
lea
and
jnp
icebp
cli
push
push
jmp
jmp
and
lods
jne
xchg
lahf
insl
ljmp
fsubl
andb
pusha
iret
mov
std
mov
mov
xor
mov
xchg
mov
arpl
jo
inc
mov
fidivs
mov
jno
or
sbb
movsl
arpl
insl
pop
pop
or
in
or
subb
mov
xchg
xchg
dec
mov
xchg
or
mov
imul
lret
jge
cmp
cmpsb
fisttpll
sbb
stc
mov
push
loopne
jbe
ja
and
inc
cmp
cli
xchg
mov
dec
and
rcl
mov
hlt
xchg
int
xor
adc
dec
clc
and
jo
push
leave
shll
hlt
lahf
inc
jmp
les
or
add
cmp
mov
int3
mov
push
out
jg
adc
lahf
add
add
cmp
popa
daa
hlt
dec
lcall
mov
jns
jbe
jno
fwait
jmp
movsl
incb
imul
xlat
lds
jo
adc
out
js
mov
or
testb
add
or
adc
rorl
int
inc
shll
test
clc
mov
jp
cmp
cmp
dec
mov
mov
outsl
dec
out
sub
aad
arpl
cwtl
clc
and
sti
repnz
mov
adc
cmp
adc
pusha
mov
js
pusha
fldenv
mov
movsl
and
pop
ficoml
inc
scas
push
dec
and
mov
stc
data16
jp
and
popf
push
sbb
push
jno
popa
push
and
and
sub
rorl
or
icebp
fs
js
push
dec
cmp
jle
cmc
lock
pop
cmp
inc
pop
mov
add
shll
xchg
int3
cmp
sbb
lcall
imul
inc
lret
add
adc
inc
fstpl
jl
movsl
inc
sbb
es
mov
or
pop
sarl
add
outsb
and
and
cld
lods
xor
sub
jge
push
xlat
mov
icebp
stos
cmp
jg
das
sub
push
mov
or
or
lods
jno
aaa
lock
addr16
mov
push
mov
hlt
sub
inc
movsl
jne
cmp
iret
xchg
or
jg
psllw
sahf
hlt
xorl
and
mov
jae
and
mov
push
inc
jae
test
lods
jb
lock
mov
mov
mov
jge
pop
mov
dec
xor
push
add
xor
cmpsb
mov
mov
mov
in
fs
cwtl
ds
jg
sti
xor
mov
push
insb
cmp
xchg
mov
push
sub
addl
fcompl
in
ret
xchg
sbb
lea
outsl
fsubrs
scas
xchg
cmp
loope
fstl
loopne
jno
fcomi
sahf
int
sti
jne
mov
shrb
jae
or
push
inc
mov
sbb
mov
mov
subl
jecxz
mov
sbb
lods
inc
ret
lods
lcall
icebp
imul
cmp
xchg
pop
mov
and
ret
or
popf
sub
loopne
mov
xor
mov
inc
pop
nop
nop
xchg
add
jecxz
push
gs
jnp
xor
sub
lret
in
jmp
movsl
ds
insl
sub
inc
cmpsb
aaa
jns
aad
mov
faddl
xor
addl
test
aas
mov
xor
xorl
pop
dec
shlb
jecxz
lret
sbb
gs
jle
enter
aas
mov
sbb
ds
cs
popa
pop
adc
inc
cmp
sahf
xchg
pop
and
push
cli
jns
sbb
rcl
or
mov
sbb
or
or
jo
lock
movsb
aam
data16
dec
lock
scas
pop
movsb
pop
push
jo
and
aam
bound
jae
jp
sbb
js
ficompl
adc
jns
xorb
add
jae
and
cmp
inc
and
divl
adc
outsl
and
push
xor
add
dec
mov
aas
and
pxor
sbb
cwtl
sub
int3
cmp
in
js
jle
dec
lock
pop
or
sub
or
test
adc
dec
adc
or
add
clc
in
jg
cmp
adc
inc
call
dec
jle
pop
aam
and
cld
xchg
gs
add
scas
mov
push
inc
mov
out
mov
pop
inc
pop
pop
sbb
adc
cmp
inc
cld
xor
mov
push
add
and
xor
mov
icebp
popa
dec
mov
push
and
leave
pop
push
or
inc
and
xchg
jbe
cmp
xchg
addb
pop
out
inc
push
add
insl
mov
aaa
inc
lret
loopne
aad
movsb
es
add
les
inc
mov
dec
push
adc
mov
sub
pop
mov
cmp
insb
orb
mov
shrb
ja
mov
dec
inc
inc
out
loop
andl
jecxz
jecxz
cmp
or
hlt
lea
rolb
inc
inc
incb
xor
pop
in
push
cmp
in
not
icebp
icebp
loopne
popa
imull
cmpsl
mov
push
pop
cld
loope
push
mov
dec
sub
icebp
int
imul
push
stos
enter
or
icebp
pop
xlat
jo
enter
lods
pop
jae
jecxz
sbb
mov
or
int
mov
mov
pop
fnstcw
inc
nop
shlb
xor
push
lds
push
loope
add
jno
jle
sahf
into
jp
sub
rcll
pop
or
mov
xchg
das
mov
mov
repz
sub
mov
outsb
cmpsl
push
into
lret
out
xor
loop
sub
or
into
subb
pop
inc
mov
mov
mov
js
xchg
ret
push
ljmp
cmpsb
fldt
cmp
mov
jp
ret
xchg
imul
lea
lods
lock
aad
je
add
clc
adcl
cltd
xchg
iret
xchg
loope
scas
jmp
xchg
es
mov
ret
cmpsb
sbb
pop
jbe
mov
dec
sarl
call
pop
jge
and
xor
hlt
rorb
sbb
add
jne
sub
adc
sub
cld
pop
xchg
shll
jno
jo
test
lds
int
js
or
pop
xor
xchg
lahf
movsb
sbb
and
xor
pop
loopne
fs
inc
adc
movsl
sub
mov
adc
inc
das
mov
popf
fldenv
ret
xchg
andb
xchg
adc
lock
or
adc
pop
or
pop
xchg
icebp
cmp
jno
mov
js
scas
push
or
jno
adc
cmp
and
lret
pop
push
jle
setg
push
pushf
icebp
pop
stos
daa
mov
jecxz
out
cltd
dec
mov
and
movsb
imul
decl
push
xor
xor
adcl
inc
or
mov
es
jnp
jmp
shl
sbb
and
push
sbb
jmp
mov
push
mov
lahf
mov
push
add
subb
xor
adc
subl
in
dec
js
jl
sbb
test
mov
jg
movl
rclb
xchg
rcll
popf
inc
repnz
adc
xchg
das
scas
popf
mov
cmpsl
fildll
or
dec
push
add
push
mov
xchg
sbb
mov
jnp
addr16
std
adc
loopne
lods
pop
outsl
popf
cmp
xchg
ss
je
arpl
mov
mov
xlat
addl
fs
and
sbb
repz
mov
js
movsb
jnp
sbb
cmpsl
jbe
mov
outsb
and
dec
mov
fimuls
lods
mov
inc
into
inc
push
xchg
cmp
mov
cwtl
pop
adc
test
mov
enter
nop
push
cld
loope
je
shll
lahf
into
dec
in
xlat
jge
clc
sub
aam
roll
push
repnz
mov
dec
sbb
movl
push
sub
dec
or
and
and
xchg
rorl
dec
pushf
mov
mov
gs
popf
inc
fdivs
fistps
xor
into
jge
pop
rclb
std
aad
jne
jns
cld
imul
ja
into
mov
int
imul
test
mov
pop
cmc
inc
push
sahf
jge
push
test
stos
stos
orb
inc
xchg
pop
aaa
roll
test
jne
loope
dec
push
add
add
add
pop
xor
sbb
push
pop
arpl
add
jp
ja
inc
fucomip
or
sbb
push
push
test
sub
outsb
inc
jg
das
jge
mov
inc
lcall
into
xor
mov
enter
mov
es
add
and
cwtl
filds
add
pop
and
xchg
movsl
sub
adc
xor
subl
aam
sarl
sub
stos
data16
int
lahf
fabs
rol
adc
movsl
scas
or
hlt
das
sbbb
jo
push
cs
scas
aaa
xchg
je
cltd
sub
clc
scas
cs
xlat
jo
inc
cmp
data16
movsl
push
imul
pop
loope
adc
add
pop
and
imul
jno
outsb
mov
adc
int
xor
xor
mov
mov
jnp
inc
imul
mov
fidivrs
add
push
xchg
add
lret
fstps
shll
sub
jae
or
cmp
push
into
xchg
je,pn
push
jp
and
out
mov
bound
xor
jnp
fcoml
inc
dec
cmp
mov
or
sub
lock
in
mov
xchg
inc
pusha
dec
sbb
shrb
xchg
aam
ss
aam
sub
and
xorb
fiadds
int
or
movsb
cltd
lock
or
pop
cs
test
adc
cmp
push
shlb
jno
jns
pop
add
pop
das
movsb
popa
aad
lret
add
daa
push
cmc
scas
ss
jns
addr16
jle
pop
jmp
shlb
mov
or
push
mov
ljmp
cmp
push
mov
bound
jbe
xchg
enter
adc
les
cmc
je
lods
enter
mov
push
cwtl
and
mov
add
jo
cmp
pop
rorl
jo
pop
jb
lock
mov
or
shl
jo
and
xchg
jmp
or
inc
out
mov
and
or
into
add
dec
insb
mov
or
in
enter
das
sbb
rcll
dec
lcall
or
and
ljmp
and
or
in
push
and
je
stos
inc
shll
or
fisubs
xchg
sbb
sub
movsl
sbb
add
adc
test
dec
mov
sahf
cmp
inc
xchg
xchg
jle
aad
mov
stos
unpckhps
stos
pop
push
cld
clc
dec
mov
in
inc
mov
in
push
aas
in
xchg
lcallw
les
movsb
popa
xchg
jns
mov
test
nop
adc
hlt
icebp
fldl
mov
jmp
cmp
mov
insb
cmp
aaa
cmp
shlb
sarl
dec
jg
sub
rolb
pop
out
mov
xchg
fs
aas
mov
call
and
into
cwtl
call
cwtl
dec
jg
filds
push
dec
loopne
inc
sbb
pusha
clc
inc
sub
pop
mov
mov
mov
dec
negl
iret
adcl
cmp
push
pop
push
mov
xor
add
dec
movsb
xchg
out
stos
sbbb
dec
jecxz
jg
andb
icebp
sbb
adc
imul
sarl
out
in
sub
iret
and
ljmp
jb
add
mov
addl
in
dec
sahf
sar
inc
mov
pop
xor
pop
sbb
iret
ror
cmpsl
inc
fadd
pop
mov
rolb
sbb
push
jno
cld
es
add
addr16
and
mov
fisubl
jo
popa
fisubrs
jb
cmp
jo
sbbl
dec
scas
push
add
icebp
lret
cltd
add
push
cmp
nop
xchg
daa
sbb
mov
sbb
fsubs
andl
and
cmp
jmp
loopne
mov
add
cmp
xchg
ljmp
cs
mov
mov
imul
loopne
lock
push
out
xchg
jl
je
mov
adc
jmp
shrb
sahf
xchg
and
mov
je
dec
inc
dec
mov
shl
add
pop
pop
outsl
movsb
xchg
add
outsb
xlat
add
inc
in
aad
imul
scas
les
mov
movsb
test
jo
mov
add
add
rorl
pop
pop
mov
dec
adcb
clc
in
cmpsb
push
icebp
addb
lahf
xchg
push
ljmp
imul
jmp
ror
sbb
jp
jecxz
jo
mov
sbb
sbb
and
inc
mov
sti
xor
pop
inc
jnp
add
clc
sbb
jbe
shl
mov
enter
pop
shll
ficoms
std
orb
push
test
mov
jae
sbb
aaa
testb
fsubr
cmp
pop
xchg
sbb
ret
pop
orl
sahf
testb
and
addl
cmp
test
inc
xor
jp
shl
rorl
fists
fcmovb
jl
mov
sets
leave
add
test
sar
es
outsl
and
aad
push
loope
push
addr16
add
in
sbb
jle
mov
xor
cmp
adc
stc
pop
popf
gs
test
pop
movsb
sbb
lea
or
mov
call
add
push
test
xchg
adc
add
in
jbe
push
adc
orl
sahf
loop
call
mov
test
sub
ror
xlat
mov
jp
cmp
add
mov
aas
jne
sbb
lds
cld
cmp
cmp
cmp
cltd
sbb
add
lds
push
xor
data16
repz
out
cmp
pop
add
pusha
sbb
pop
pop
or
cli
adc
cmp
mov
sub
fdivs
imul
popa
xchg
add
mov
and
xchg
pushf
pop
lahf
push
js
jno
repnz
cmp
dec
or
dec
xor
pop
or
adc
xchg
xor
hlt
add
sbb
loope
test
clc
jb
jge
jmp
into
insl
cwtl
out
les
dec
cmp
and
or
push
hlt
or
and
sub
sub
mov
xor
pop
mov
dec
mov
test
popf
jp
pop
in
imul
jge
call
add
pop
dec
mov
shrl
sbb
add
in
stos
filds
fucomi
mov
push
pop
jnp
jo
cmp
jmp
rcr
ja
push
add
sbb
les
push
insb
mov
dec
push
int
xor
mov
jge
mov
xchg
xor
es
xor
je
sahf
lock
or
icebp
dec
test
leave
in
jno
dec
inc
or
cwtl
jo
test
fcom
arpl
pop
mov
orl
test
fdiv
hlt
jl
cltd
js
xor
pop
test
adc
mov
adc
pop
cmp
subb
int
fsubrl
js
mov
nop
js
inc
lcall
mov
imul
lret
bound
shlb
aam
lods
shrl
and
xlat
fldl
sub
cwtl
pop
push
mov
sbb
adc
cmp
mov
push
aas
mov
inc
add
dec
rcll
out
inc
or
mov
in
mov
mov
addr16
mov
push
pop
movsl
rolb
inc
jmp
stos
enter
adc
mov
shll
test
lods
pop
or
add
ljmp
xchg
mov
add
lahf
addl
outsb
daa
jns
lock
out
es
test
dec
sbb
mov
mov
subb
pavgb
push
cld
test
test
stos
popa
xchg
cmpsb
mov
inc
shlb
dec
ljmp
js
push
xor
push
dec
cmpsb
lea
or
clc
mov
inc
out
push
pop
cli
clc
inc
cmp
cmp
jb
jle
dec
dec
testl
stos
jo
xchg
jno
push
jbe
scas
and
rol
andb
call
jl
outsl
aad
rcll
mov
cld
add
or
lods
arpl
jmp
adc
xorb
nop
insb
gs
jp
xchg
nop
mov
push
rorl
jns
xlat
test
lret
and
adc
mov
jo
popl
gs
push
shll
cmp
jl
pop
movsb
adc
mov
sub
outsb
repz
mov
test
rcll
mov
mov
mov
test
in
xor
test
adc
add
cli
pop
jns
enter
cmp
insl
aad
pop
pop
inc
push
data16
push
mov
into
dec
xor
jecxz
out
jnp
cmp
adc
arpl
int
cmp
mov
aam
xchg
inc
out
movsb
pusha
insl
xor
cmc
rol
loope
push
or
lods
icebp
jno
dec
jl
je
sub
push
bound
js
mov
shlb
in
pop
dec
dec
dec
repnz
or
lahf
sbb
cmpsl
pusha
mov
popf
or
subl
in
adc
cli
or
hlt
xor
fistl
mov
xchg
jo
mov
xchg
dec
sbb
jmp
mov
lret
or
pop
in
arpl
daa
std
jno
enter
jp
add
ljmp
add
mov
sub
fsub
adc
sub
test
xchg
lock
mov
add
sub
iret
dec
movsb
and
push
subl
push
dec
lods
test
dec
test
push
ljmp
test
push
cmp
and
repnz
scas
inc
adc
je
sub
shrl
jp
shll
or
xor
pop
loopne
jb
inc
es
mov
cmp
xlat
cmp
fs
inc
jae
movsb
add
ss
jle
xchg
ret
cmp
stc
cs
cmp
or
mov
pop
outsb
bound
clc
daa
into
orb
jnp
mov
xchg
dec
shlb
cmp
cld
jo
addr16
lret
out
jo
popf
or
arpl
dec
adc
push
das
mov
sbb
push
inc
jbe
jp
testb
mov
ja
dec
cmp
ret
push
popa
and
insb
pop
iret
mov
popa
xlat
roll
pop
mov
lret
cmc
push
fidivrl
cmpb
push
xchg
shlw
xor
imulb
scas
dec
lock
lcall
mov
or
cmpsl
js
adc
stos
and
sbb
or
sbb
rcrl
rolb
fistl
push
fiaddl
lods
adc
adc
add
insb
sbb
adc
adc
cli
in
xorl
lret
iret
mov
pop
cli
leave
pop
lods
daa
pop
cmp
cmp
sbb
or
and
pop
loop
mov
mov
sti
bound
mov
cmpb
and
pop
jge
pop
imull
scas
nop
ret
ja
cmpsl
xchg
cld
fnstsw
pop
xchg
or
or
mov
movsb
mov
cmp
xchg
mov
ret
roll
jnp
mov
push
mov
mov
add
mov
inc
lahf
pop
adc
nop
lock
inc
in
pop
mov
xchg
out
or
movsl
call
sahf
nop
ficoml
jp
mov
addb
fsubs
push
fcoml
and
cmp
mov
addb
sbb
jp
shr
es
sub
andl
nop
mov
xor
pushl
and
in
add
js
cmpl
ja
xor
push
xor
jg
add
rorl
pop
test
sbbl
mov
inc
fcoms
mov
ffree
repnz
pop
jae
adc
jp
add
mov
pop
cmp
lret
movsb
mov
mov
out
shr
push
push
jge
fbstp
adc
sub
out
push
das
push
xchg
dec
out
sub
in
xchg
jmp
cmp
iret
cmc
mov
adc
cmc
mov
frstpm(287
aaa
push
int
fwait
xchg
fildll
xlat
pop
imul
scas
dec
mov
push
mov
dec
jg
andb
add
shlb
pop
cld
push
adc
jns
xchg
mov
lock
daa
mov
in
sbb
mov
xchg
inc
es
jbe
pop
lcall
stos
cli
xchg
inc
jp
imul
mov
jnp
test
mov
pop
icebp
or
fsubrs
les
icebp
orl
jp
sub
imul
dec
lds
adcb
and
rolb
test
and
cmp
repnz
fpatan
inc
sub
push
add
scas
jo
push
xlat
sbb
push
bound
cmpsb
insl
repz
and
inc
cmp
cli
adc
outsb
push
shlb
xchg
and
xor
loopne
loope
int
or
mov
push
in
cs
bound
ds
adc
jecxz
xor
and
inc
ljmp
pop
xor
adcb
test
aam
shlb
or
and
stos
sub
xchg
sub
mov
xchg
lret
sbb
jbe
adc
aam
mov
sub
dec
decl
ljmp
push
clc
dec
ret
xor
lods
sub
adc
xor
sbb
cwtl
repnz
push
cmp
div
pop
sbb
dec
sti
mov
pop
xor
xchg
pushf
pop
jge
inc
loopne
or
mov
int3
les
push
inc
xchg
cli
dec
mov
jns
push
clc
cmpsl
test
ret
aaa
cmpb
enter
and
adc
stos
test
push
pusha
imul
xchg
sbb
xor
inc
iretw
mov
push
push
push
mov
mov
and
mov
xchg
jp
in
clc
pop
inc
lahf
sub
cmpsb
mov
leave
pop
adc
aad
mov
shr
push
jecxz
xchg
mov
cmc
cmpsl
pop
xchg
ss
daa
lret
test
lahf
ja
imul
addl
int
call
add
test
std
js
push
and
nop
outsb
js
scas
push
lahf
mulb
jns
mov
sbb
cmp
and
shl
imul
adc
subb
push
pop
jg
mov
sahf
or
push
sahf
adc
push
leave
adc
clc
cmp
push
pushf
je
movb
mov
out
jb
adc
lock
rorl
stc
scas
adcb
ja
popf
xor
mov
and
jns
js
pop
loope
or
addr16
pop
fs
add
cmpsb
pop
out
nop
aam
stos
adc
idivl
movsl
mov
pop
mov
mov
mov
repnz
test
add
add
xchg
lods
lock
es
pop
dec
mov
add
testb
icebp
aad
fsts
addb
add
mov
cmp
testb
icebp
adc
mov
addr16
pop
aaa
repnz
hlt
jne
lock
adc
mov
pop
movl
das
or
lods
aaa
jno
lods
fwait
mov
push
mov
andl
pop
jns
imul
pop
int
lods
pop
push
mov
pusha
out
inc
cmc
fs
and
into
jne
mov
loope
dec
jecxz
ds
rcrb
add
sub
aas
popa
cmp
movsl
call
and
pop
mov
push
test
cmpsb
pop
mov
push
ja
cs
lock
cwtl
adc
mov
movsb
or
lods
inc
adc
push
std
or
adc
jo
xor
in
cmc
mov
rolb
cmp
adc
int3
lds
les
int3
add
and
movsl
adc
mov
pop
je
int3
int3
or
call
repnz
cmp
push
shrl
popf
inc
push
data16
inc
popf
loope
jns
adc
int3
fisubrs
pop
pop
push
xlat
xchg
icebp
loopne
mov
jne
xlat
loope
iret
xchg
iret
adc
sahf
jne
fstpl
and
pusha
xchg
loop,pn
sub
mov
xor
xlat
enter
and
xchg
jl
sub
das
push
fs
cmp
add
push
rcl
cli
hlt
syscall
sub
cmp
adcb
sti
movsb
loopne
jno
movsb
fsubl
xchg
and
int3
xor
pop
fsubs
arpl
daa
sub
pop
in
or
mov
pop
sub
pop
scas
mov
inc
jns
cmp
adc
jnp
push
sarb
mov
xadd
sbbl
cmpsl
or
inc
inc
cmp
fcmovnbe
jo
icebp
aad
mul
cs
mov
and
bound
cmpsl
mov
data16
cwtl
add
add
mov
push
imul
testb
xor
cmp
sub
xchg
xchg
push
sbb
shld
adc
cmp
lock
pop
gs
in
shl
hlt
xor
enter
cmp
adc
nop
je
in
inc
mov
fcomps
sbb
lret
call
adc
or
test
cmp
mov
adc
int3
in
mov
sbb
icebp
outsb
inc
leave
push
pop
or
fucomp
mov
sbb
fistl
nopl
shlb
lods
adc
dec
cmp
or
xchg
mov
loop
inc
mov
fs
loop
dec
pop
xchg
test
loope
loopne
push
push
xor
mov
and
int
add
jge
xchg
movsb
fnsave
pop
ret
xor
xchg
mov
push
bound
ret
insl
add
fs
pop
iret
pusha
xor
adc
lock
cmp
repz
ret
lcall
ljmp
cld
lock
mov
mov
and
jecxz
jle
addb
push
scas
sub
sbb
sub
roll
mov
jmp
and
cmp
addb
int3
jo
and
and
push
adc
push
and
pop
dec
loope
iret
sbb
and
jge
and
add
loop
loop
xor
dec
jle
fisubl
fisttpll
or
push
jno
loop
leave
xchg
mov
inc
aam
dec
jge
pop
add
cmp
push
cmp
pop
fwait
push
stos
sti
data16
popf
mov
push
cltd
jbe
repnz
jb
mov
ret
test
inc
jle
mov
push
loope
cmpsl
iret
sbb
ja
aad
dec
fisttpll
imull
xor
jmp
inc
fcoms
test
fsubr
jbe
mov
ffreep
cs
jb
pop
dec
insl
add
push
push
lea
dec
popf
inc
daa
xchg
inc
ds
cmpsl
loope
insl
adc
jne
fmuls
aam
scas
cmpsl
out
mov
imul
push
inc
inc
mov
je
je
ljmp
iret
fcmovbe
mov
dec
movsb
sahf
jmp
pop
inc
xchg
pop
fisttpl
mov
adc
pop
cmp
jle
pop
test
lea
inc
push
sbbb
sub
shl
aas
sbb
pop
test
sub
popf
ret
mov
push
inc
aas
sbb
or
int
fwait
mov
xor
cltd
sbb
mov
xchg
inc
jmp
or
push
dec
fbstp
xchg
push
cmp
or
adcb
adc
stos
sub
fimull
pop
dec
sub
fidivrl
adc
js
rcrb
rorb
xchg
mov
jno
adcb
test
mov
dec
adc
hlt
loop
sub
mov
mov
inc
bound
sbb
loop
je,pn
and
shll
popa
daa
pushf
pop
jecxz
xchg
test
data16
jg
push
jg
sub
adc
ljmp
push
inc
cwtl
mov
mov
xor
xchg
xchg
lods
lock
das
fldl
int
daa
pop
inc
arpl
aad
mov
hlt
pop
adc
stos
test
xchg
jp
repnz
cltd
push
xor
inc
sub
pop
xchg
adc
in
push
inc
pop
clc
ficompl
loopne
sub
int
adc
sbb
lds
mov
mov
out
pop
dec
clc
xor
mov
sub
imul
inc
inc
mov
movsl
sub
cmp
shlb
ret
dec
mov
mov
push
fdecstp
jno
loope
mov
jae
inc
sbb
arpl
sub
mov
xor
mov
sub
pop
xor
out
push
mov
dec
shll
fcomps
mov
pop
ret
or
and
in
outsb
cltd
cmpb
nop
push
or
test
mov
push
fs
lods
cmp
mov
cld
sahf
addr16
ljmp
repz
pushf
dec
js
add
jno
sub
leave
jp
dec
xchg
mov
ret
ljmp
mov
cmp
inc
cmp
cs
mov
loopne
sahf
mov
data16
add
or
imul
mov
pop
or
std
cmp
sbb
int3
xor
mov
insl
push
ja
pop
adcb
add
xchg
and
xchg
pop
dec
adc
jle
add
add
mov
in
inc
in
notl
and
and
inc
arpl
sbb
out
push
inc
test
jmp
scas
hlt
cmc
xchg
enter
ja
ficoml
xchg
pop
das
in
ljmp
mov
inc
dec
mov
jo
stos
popa
or
les
mov
call
adc
mov
xchg
lds
push
jns
pop
loopne
out
pop
mov
fnstenvs
mov
fmul
push
loopne
pop
mov
lock
test
and
xor
push
sbb
xlat
inc
xor
mov
lcall
adc
mov
cmp
movsl
loope
notb
dec
fwait
movsb
jo
aas
add
cmp
js
imull
dec
mov
push
cmc
inc
js
nopl
mov
daa
iret
lods
jbe
adc
push
dec
xchg
sub
sub
nop
dec
sti
mov
pop
sub
jp
cmp
or
lret
vcvttps2dq
arpl
bound
lret
mov
js
pop
cs
and
ljmp
pushf
push
insl
push
cmp
pop
pop
rcll
nop
outsl
jae
iret
ficoms
sti
cli
dec
js
dec
mov
and
out
pop
fsubs
test
repnz
testl
and
xor
push
pop
push
mov
ljmp
push
cmc
aam
lods
xchg
dec
pusha
jmp
popf
loop
sbb
jp
sbb
imul
mov
jnp
fwait
or
shll
loop
stos
int3
push
clc
fprem
movsl
jnp
lea
inc
shrl
adc
mov
and
insl
shl
push
fwait
and
stos
push
leave
insl
pop
fwait
in
loope
sub
add
sbb
out
nop
shl
mov
xor
mov
jns
jle
sti
insb
aam
dec
leave
lret
xor
sub
inc
addr16
mov
sub
pop
psrlw
jecxz
jbe
inc
sti
jg
or
fs
out
call
cmc
loope
lahf
dec
sbb
push
cld
dec
out
mov
mov
loope
pop
mov
sbb
mov
lea
jmp
shr
or
pop
push
jmp
pushf
or
xchg
stos
rcrl
mov
insl
ds
jb
arpl
into
scas
hlt
lret
jb
cs
push
push
push
xor
and
pop
test
xchg
cli
sbb
test
mov
xchg
call
inc
cmp
rorl
sbb
lea
lea
fnstcw
push
adc
pop
and
push
adc
mov
rorb
int
shrb
and
adc
cltd
jg
lcall
xorl
cmp
mov
sbb
push
stos
and
test
dec
pop
xchg
xlat
xchg
into
xchg
mov
call
and
int3
jno
lock
clc
adc
adc
jmp
popa
in
movb
and
and
add
and
aad
adc
aam
test
push
nop
repnz
and
popf
xlat
dec
outsb
fisubrl
cwtl
ret
int3
push
pop
inc
mov
adc
fchs
mov
sub
mov
mov
popf
icebp
arpl
adc
push
ret
sbb
mov
in
add
adc
jg
jmpw
push
sub
pop
sbb
cli
xchg
mov
pop
icebp
mov
and
clc
out
xchg
cmp
repnz
aaa
fcoms
mov
clc
call
pop
movsb
adc
or
lods
and
jle
sub
push
jo
sbb
in
stos
ljmp
adc
sbb
pop
test
xor
push
xlat
call
call
data16
je
xor
clc
jmp
cmp
sbb
push
cld
bound
and
mov
cmc
dec
js
mov
and
xorb
jns
or
ss
xchg
cld
inc
lock
jo
dec
push
fwait
aam
mov
fadds
and
call
mov
fisubrl
push
out
out
push
ret
aad
outsb
shl
or
or
add
xorl
mov
ret
dec
outsl
push
pop
or
cmpsl
test
dec
xchg
or
in
sahf
int
aaa
dec
pop
testb
lds
pusha
mov
loope
pop
and
adc
push
add
pusha
jl
ds
add
pop
ret
xchg
push
jno
rolb
or
rorl
pop
test
pop
cmp
xchg
mov
ja
push
jnp
push
fwait
or
pop
pop
sbb
pop
mov
ljmp
or
pop
rorl
dec
adc
xorl
ds
subl
outsl
mov
fcmovbe
js
mov
aad
roll
test
out
adc
inc
dec
ret
imul
ret
jbe
xor
mov
negb
adc
inc
xchg
jbe
in
adc
or
and
scas
pop
cmpsl
xchg
pop
push
js
push
sahf
inc
cmpsb
jge
adc
or
sahf
ret
mov
inc
push
push
dec
roll
dec
insb
sbb
popf
lods
add
mov
loop
adc
mov
and
cltd
dec
or
pop
les
dec
cmp
arpl
das
mov
test
add
rcrb
xorl
push
and
addb
mov
dec
fwait
ds
add
jo
mov
inc
push
inc
cmp
call
icebp
adc
sahf
mov
je
insl
test
inc
clc
stos
adc
call
xchg
inc
je
rcrl
or
inc
fs
mov
arpl
jnp
mov
mov
and
dec
xchg
aam
add
movsl
movsb
or
add
sub
cli
lods
hlt
or
lds
sub
mov
dec
loop
xor
icebp
lock
sbb
imull
xor
or
pop
push
cmp
adc
xchg
push
or
in
sub
pop
stos
pushf
cmpsb
pop
cmpsl
sub
mov
sahf
fisubs
clc
jg
out
xlat
xchg
cmpl
fbstp
dec
add
in
add
sub
imul
or
inc
lcall
jnp
out
hlt
aam
call
jecxz
stos
inc
mov
cmp
pop
and
addb
in
cmpsb
push
sub
push
ficoml
test
lret
adc
gs
adc
bound
ss
mov
inc
push
add
dec
int3
mov
movsb
pop
and
andl
mov
or
shlb
push
push
xor
mov
add
add
ljmp
cmpsl
nop
push
ja
xchg
or
add
pop
dec
les
das
dec
jmp
push
dec
lret
fs
std
mov
add
fwait
add
jge
pop
in
outsb
mov
mov
dec
push
lret
sbb
test
std
xchg
pop
shrl
daa
es
sub
mov
data16
imul
sbb
ljmp
xchg
pop
mov
xorb
mov
xor
lahf
sub
cmpsl
xor
std
movsb
sub
cs
daa
xor
dec
add
scas
jecxz
setb
test
add
adc
cmp
arpl
pop
ss
pop
dec
xchg
bound
cmc
xor
movsb
fcompl
xor
sub
add
outsb
pop
cmp
les
pusha
ds
push
xchg
or
mov
inc
and
pop
je
or
mov
pusha
add
nop
scas
xor
ficoml
and
outsb
in
push
mov
aad
popa
cs
mov
inc
notb
inc
dec
mov
punpcklbw
add
in
sbb
leave
sbb
xchg
cmc
sub
mov
cmc
aam
fldt
jl
xor
arpl
adc
das
lret
aad
rclb
sbb
mov
mov
subb
addr16
enter
pop
cmp
jg
faddl
ficompl
imul
mov
fcomip
dec
mov
mov
sub
outsl
stos
jbe
push
adc
xor
sub
aad
xchg
pop
xorl
pushl
test
jmp
push
shrb
in
mov
test
adcb
xchg
rcrb
mov
mov
shlb
push
lock
stc
xchg
into
das
in
and
dec
int
ret
inc
or
jno
dec
lret
mov
or
push
pop
cli
xor
jl
js
fdivr
arpl
jle
mov
push
mov
pop
in
js
test
mov
add
xchg
pop
and
dec
sbb
cmc
jp
mov
or
out
rcrb
ja
push
scas
lcall
lods
aaa
dec
test
iret
inc
jns
adc
hlt
or
ds
stos
fs
add
jecxz
aam
sub
rol
mov
fldl
loopne
dec
emms
or
arpl
xor
or
mov
bound
mov
adc
add
pop
mov
sbb
jp
sbb
insb
stc
lahf
mov
mov
ljmp
mov
mov
jmp
sbb
and
push
and
sbb
ds
sub
xchg
rcrl
mov
mov
movsb
adc
in
sti
inc
cli
orps
outsl
xor
xchg
jecxz
lock
es
addr16
push
cmp
mov
stc
sbb
addl
or
cld
push
push
ja
mov
xlat
shlb
inc
sub
test
inc
mov
push
jno
cmp
cmp
push
dec
dec
mov
and
jle
dec
or
clc
xchg
into
mov
or
gs
jmp
call
popa
inc
cmp
and
icebp
cmpsb
xchg
fcmovb
and
push
in
mov
shl
xchg
lds
push
jbe
sbbl
mov
cmpb
xor
xchg
insb
loop
imul
lret
cmp
roll
stc
hlt
push
jo
dec
sbb
jle
jecxz
insb
and
xchg
hlt
test
push
adc
stos
bnd
mov
jne
or
mov
inc
dec
ljmp
xor
or
push
dec
inc
mov
adc
stos
loop
sahf
and
in
gs
inc
movsl
inc
inc
cmp
or
pop
push
sbb
mov
imul
or
ljmp
mov
sarl
pop
jg
test
fcoml
pop
movsb
sbb
cli
dec
push
adc
cmc
stos
pop
pop
jmp
dec
mov
inc
flds
mov
out
sbb
xor
fadds
fbstp
jge
cmp
and
pop
xor
pop
jae
std
inc
add
loope
xor
mov
insb
dec
lret
hlt
inc
inc
adc
fdiv
dec
aas
inc
shrl
and
bound
testb
sbb
mov
loopne
push
dec
cmp
lahf
cli
aam
xchg
or
lods
pop
cmc
lret
insl
shl
lea
and
push
mov
mov
sbbb
push
scas
cmc
adc
xchg
movsb
lock
mov
jmp
in
dec
adc
imul
xor
insl
cmp
ret
clc
sbbl
push
add
pushf
sub
shll
cmpsl
mov
or
mov
idivb
jl
outsb
push
mov
mov
push
adc
sub
xor
stos
sub
mov
jl
pop
cmpsb
test
out
je
lock
pop
lcall
jmp
dec
mov
aad
roll
and
dec
loopne
lea
dec
mov
sub
pop
and
xchg
mov
sbb
add
fisubs
push
and
xchg
cltd
inc
adc
pop
std
inc
addl
test
loope
mov
in
push
cmp
les
and
jl
fisubrl
pop
rorl
and
add
int3
add
push
mov
mov
adc
sub
scas
xchg
iret
in
arpl
jb
jl
hlt
dec
or
gs
mov
lds
pop
cwtl
and
dec
sub
sub
jmp
sbb
mov
stc
je
xchg
pop
dec
into
mov
pop
icebp
cmp
enter
jmp
xchg
push
out
mov
imul
and
or
fnsave
mov
rcll
pusha
mov
inc
outsl
cmp
ficoml
outsb
test
xchg
imul
mov
cmp
adc
jns
shrb
push
xor
or
es
xchg
addl
pop
stos
orl
aaa
or
push
sbb
mov
jl
lret
ljmp
call
arpl
push
hlt
cmpsl
in
inc
js
or
dec
ds
fldl
mov
pop
icebp
sbb
cmp
adc
sahf
test
inc
pop
xor
mov
jmp
mov
shll
mov
stos
pop
lea
push
push
cld
mov
jne
sbb
or
xchg
dec
jecxz
push
fidivrl
ficompl
add
xchg
jnp
sti
pop
std
testl
stos
lea
lret
xchg
or
ffreep
stos
rcll
mov
into
sarl
adc
sbb
rol
cwtl
dec
testl
hlt
adc
inc
jnp
insl
jg
pop
dec
sbb
ds
add
mov
aaa
push
mov
cmp
or
add
lea
sahf
xor
add
cmc
lock
daa
shl
icebp
outsl
jmp
pusha
inc
testb
add
mov
cld
inc
rcll
xor
pop
aam
test
jbe
stc
inc
sub
sub
sbb
cmpl
sbb
mov
inc
or
clc
mov
push
fisubl
test
lods
mov
sub
sbb
andb
js
add
add
sbb
das
mov
xchg
or
xchg
aad
sti
fwait
shlb
insb
and
mov
inc
scas
jg
and
leave
aaa
lahf
dec
nop
inc
aaa
ret
call
fisubrl
add
stos
cmc
pushf
pop
and
and
aaa
and
cmc
repnz
rcr
inc
jecxz
loopne,pn
adc
push
call
push
xor
out
hlt
or
loopne
cmp
arpl
hlt
repnz
jp
test
cmp
dec
jmp
inc
xchg
aas
inc
call
addb
inc
inc
mov
inc
sub
cltd
pop
xlat
mov
cmp
mov
dec
or
cwtl
cmpsb
jp
loop
out
mov
lods
push
xchg
lret
pop
lods
and
call
loope
or
rcll
aad
pop
popf
ds
xchg
adc
movl
add
rorb
lock
daa
cmpb
mov
stos
mov
push
std
mov
push
daa
les
jbe
sbb
jecxz
shlb
andb
and
es
popl
popf
mov
xor
pop
dec
and
xor
pop
icebp
ljmp
inc
xchg
push
push
push
xor
mov
sub
push
mov
repnz
hlt
adc
or
loopne
or
jo
inc
pop
inc
ss
sub
shlb
sbb
imul
inc
sti
add
cmpsl
gs
add
inc
pop
test
mov
inc
dec
xchg
cmc
out
push
cmp
xor
push
push
shlb
test
pushf
jge
ret
push
mov
cmpsb
adc
sub
mov
imul
inc
pop
popa
or
sub
mov
js
jl
pop
lods
call
push
xor
push
mov
pop
xchg
jge
jno
clc
int3
enter
sbb
dec
xor
jne
mov
sahf
loop
mov
in
js
or
and
bnd
mov
mov
into
cli
shll
jo
xor
xchg
iret
sub
shrb
push
adc
lock
add
subb
fs
pop
lret
clc
fdivrs
dec
cltd
loop
dec
and
leave
lods
xchg
jge
dec
xchg
cs
push
fcmovbe
mov
shr
or
js
addb
test
add
push
cwtl
mov
je
psubusb
mov
cmp
cmp
out
sbbb
or
cmp
add
and
cld
gs
mov
mov
push
nop
and
sahf
sbb
popa
jae
clc
cs
adc
les
rorb
push
adc
lods
in
js
mov
xchg
add
shll
ljmp
adc
push
jne
push
rolb
push
pop
pop
mov
and
cwtl
into
pop
adc
cmp
adc
fildl
jl
and
jno
dec
daa
or
inc
movsl
or
inc
pop
lock
int3
mov
cli
xor
jg
sbb
int3
jne
jg
mov
pop
jo
inc
add
mov
pop
out
dec
xor
push
jg
test
insb
sub
cmpl
loopne
test
daa
arpl
push
je
andb
clc
jp
movsl
sbbl
sub
insb
stos
sbb
xchg
cwtl
jo
cmpsl
jnp
push
sbb
cmp
xor
dec
cmp
fcompl
imul
and
jne
pop
adc
loope
cltd
jo
ljmp
jbe
mov
shl
sub
cld
imul
cld
jo
mov
inc
rep
push
shl
iret
subl
inc
pop
lock
sbb
jp
push
cmpsb
pop
scas
mov
xor
rclb
cmp
js
fs
faddl
imul
ds
or
shlb
test
mov
push
sub
adc
push
lahf
sbb
adc
or
in
jp
jl
sub
mov
xchg
arpl
nop
pop
cs
add
popa
mov
jg
pop
xor
arpl
fwait
inc
jo
in
lods
lcall
and
or
xchg
repnz
loopne
and
std
leave
sub
or
divl
push
and
fs
cmpsl
inc
pop
xor
jne
sub
push
popf
dec
cli
orl
je
ror
outsb
and
sub
jae
pop
xor
pop
sbb
mov
lods
push
push
jg
movsl
adc
cmc
lods
aam
test
cmp
dec
aam
inc
outsl
inc
or
shl
lret
xchg
ljmp
jle
scas
cmp
nop
pop
sub
dec
inc
mov
dec
fwait
pop
adc
sub
sbb
call
mov
std
into
jb
dec
inc
std
push
pop
sti
add
add
in
ljmp
pop
mov
cltd
adc
cltd
test
mov
in
adc
xor
inc
popa
dec
adc
inc
daa
jbe
push
push
mov
scas
push
adc
idiv
in
inc
pop
mov
call
lds
aas
xchg
lea
sbb
xchg
clc
lret
push
xchg
rclb
dec
ret
dec
add
popa
mov
sub
fimull
xchg
push
jl
pop
mov
xor
movsl
stc
dec
loopne
ret
sub
aas
and
orl
push
pop
mov
divl
add
ret
jmp
adc
adc
lods
add
stc
add
shrb
lcall
ret
gs
push
lock
repnz
popa
fs
dec
cli
lods
jbe
shr
add
das
adc
or
popf
subb
jecxz
notl
sbb
lock
hlt
pop
jb
mov
js
sbb
out
pop
ror
repz
dec
shr
adc
stos
iret
clc
mov
cmp
push
adc
std
les
mov
cmpsb
jg
xor
sub
pop
push
call
push
inc
repz
aam
xchg
out
dec
pop
mov
faddp
js
aad
andb
pop
mov
xchg
adcb
scas
xchg
fidivs
int
int
call
fldenv
leave
add
fstl
insb
cmc
sbb
xchg
inc
xchg
mov
mov
les
mov
xlat
andb
push
mov
dec
insl
push
out
and
sarb
rorl
clc
test
popa
cmp
loop
outsb
lock
fidivs
sub
clc
xor
push
les
pop
rcrl
pop
jmp
xor
in
inc
movsl
rorb
call
jae
lds
and
mov
pop
les
sti
cmc
add
incb
mull
loopne
sub
or
ret
subl
iret
adc
f2xm1
mov
pmaxub
fnsave
cld
and
sti
pop
xor
mov
jmp
pop
and
add
hlt
and
jl
jns
movl
cs
shrd
mov
lahf
xchg
mov
sub
sbb
jb
bound
scas
adc
adc
dec
sub
cmpsb
mov
and
dec
mov
rcrl
and
loopne
adc
sub
fcomps
fisubl
mov
test
cmp
rclb
pop
push
xchg
call
or
pop
cmp
ficomps
mov
lods
std
xchg
mov
in
lds
mov
push
inc
jae
bound
mov
loope
hlt
insl
sub
or
push
das
iret
and
pop
scas
shlb
push
repnz
cmpb
stos
push
scas
inc
ret
mov
cmp
or
sub
out
dec
into
imul
pushf
add
mov
fbld
xor
xchg
xchg
sbb
cmp
lods
fsubrs
mov
out
pop
adc
cmpl
push
cmp
push
lock
sahf
and
mov
pop
mov
mov
imul
adcb
fistps
or
push
add
bound
or
aas
push
xor
dec
pusha
inc
les
adc
add
xchg
cltd
adc
imul
dec
adc
fcompl
cwtl
xor
mov
adc
inc
cmp
jmp
ds
pusha
mov
inc
sbb
std
rorl
inc
adc
inc
cmp
movsb
andb
fs
jle
arpl
xchg
rclb
jp
outsb
sub
clc
push
cmc
mov
sub
pop
push
jl
cmc
leave
cmp
lock
fisubl
sub
aam
fldt
scas
scas
lahf
sbb
pop
in
mov
test
sarb
cli
sbb
jge
popa
mov
xrelease
pop
add
loop
loopne
mov
cltd
mov
movb
shr
dec
lock
mov
jbe
test
xchg
cmp
add
mov
mov
and
nop
pop
jmp
sbbb
xchg
or
in
clc
jl
jl
mov
shl
mov
nop
mov
jge
repnz
mov
jo
jge
jge
mov
inc
repnz
or
add
loop
loopne
xor
stos
push
xchg
outsb
notl
rolb
mov
pop
icebp
nop
xlat
sbb
shrb
push
sbbl
sbb
aas
add
test
cmpsl
lods
mov
sub
ljmp
add
sub
or
xchg
xchg
pop
xchg
aad
nop
sub
dec
xchg
mov
js
mov
or
mov
lret
dec
lds
sbb
data16
cmpsl
or
bound
mov
fsub
and
movsl
xchg
fidivrs
pop
cltd
loopne
call
aam
jo
xchg
mov
jp
orb
iret
dec
movsb
cmp
stc
mov
xchg
sbb
and
xchg
nop
ret
xor
push
push
cli
loope
sti
testb
das
mov
dec
xor
daa
sbb
negl
sbb
push
cmp
dec
rol
or
xor
mov
enter
mov
call
add
cmp
sarw
lock
or
inc
inc
pop
cld
arpl
pop
arpl
mov
rcrl
and
mov
icebp
jmp
and
orl
sbbl
mov
jp
mov
ds
jns
pusha
movb
push
iret
push
pop
push
mov
cmc
xchg
dec
jno
sbb
pop
ds
mov
xchg
cli
mov
mov
cmp
mov
sub
pop
pop
mov
lea
add
xchg
or
cmc
loopne
shll
mov
roll
popa
jo
stos
adc
lret
jge
insl
add
inc
repz
xchg
sub
xor
mov
and
add
pushf
mov
sbb
jo
or
cs
jne
mov
adc
jp
daa
pop
pushf
and
adc
inc
pop
and
xor
scas
dec
lock
sub
insb
sub
les
rcrl
je
jl
loopne
or
jl
cmc
jno
lret
push
pusha
sbb
ja
xchg
repz
mov
data16
nop
fisttpll
js
insb
fldcw
out
push
mov
pop
in
cmpsb
mov
jae
icebp
dec
mov
fimull
push
adc
roll
mov
pop
dec
inc
mov
aas
rolb
or
push
gs
rcl
ja
push
gs
pop
pop
in
in
mov
and
mov
pop
arpl
cld
stos
ljmp
or
gs
loop
mulb
pop
jle
add
das
jp
loope
outsl
loope
push
add
into
movsl
inc
add
adc
mov
mov
push
scas
xchg
loop
fisttpl
sbb
inc
dec
pop
pop
jecxz
loopne
cmp
pop
pop
ljmp
outsb
pop
pop
leave
xchg
inc
loope
sti
ficoml
sub
jecxz
or
add
cmp
stos
push
mov
jbe
iret
stos
or
adc
pop
stos
push
sbb
push
jl
loopne
push
mov
jecxz
sahf
in
stos
inc
into
in
loop
push
lahf
ds
lock
out
push
lea
test
pop
mov
and
das
mov
dec
sub
mov
test
out
clc
pop
add
int
and
pop
xor
or
ljmp
mov
pushf
jo
jge
ret
loope
and
push
rorl
popa
nop
ljmp
in
in
enter
cmc
hlt
aas
xor
repnz
mov
lock
js
pop
lcall
out
pushf
dec
bound
popa
cld
or
xchg
daa
popf
jbe
cmp
into
mov
cmpsb
add
outsb
std
popf
icebp
scas
mov
ret
inc
imul
and
or
mov
insb
push
pop
xor
inc
imull
loop
add
inc
sub
push
sti
outsb
mov
cs
add
nop
cmp
jecxz
and
mov
mov
cmp
and
xchg
mov
sbb
pop
xor
cmp
int
pusha
fisttpll
ss
cltd
inc
jge
add
loopne
push
pop
and
or
cmc
inc
testl
cli
xor
je
lcall
sbbl
inc
mov
adc
sarl
jl
sahf
lcall
aad
xlat
push
nop
add
or
adcb
and
dec
out
or
xchg
mov
js
cmp
mov
add
out
jb
jae
mov
in
arpl
jne
in
cmp
push
idivl
lcall
testl
cmpsb
dec
icebp
mov
lods
loop
sbb
pop
std
jp
cmp
inc
inc
repz
jge
add
inc
lods
xchg
sub
ret
jbe,pn
leave
loop
fdivs
or
or
inc
or
fcmovb
mov
leave
dec
les
dec
mov
cmp
pusha
mov
sub
in
dec
popf
pop
mov
mov
adc
and
in
lods
cmp
daa
std
gs
dec
add
das
and
pop
sbb
lea
ret
add
push
adc
inc
lret
in
notb
inc
xorb
inc
cmp
sub
mov
mov
xchg
jmp
les
inc
xchg
jg
ret
dec
inc
cmpsb
lcall
adc
in
lock
ret
push
mov
mov
mov
test
add
cltd
inc
aad
or
push
push
aad
stos
jl
mov
lods
xchg
xchg
aam
test
les
xchg
rclb
or
pushf
cmpsb
ret
cmp
or
in
imul
sub
loope
fisubrs
ret
xchg
mov
mov
addl
insl
jb
jp
pop
sub
xchg
add
rol
andps
fwait
ret
pop
pop
adc
sti
mov
je
lea
adc
and
xor
xchg
test
outsb
in
adc
out
jp
push
ds
pushf
sbb
fs
mov
adcb
mov
mov
jg
and
mov
movsb
mov
jg
bound
or
jae
cwtl
or
mov
mov
inc
rclb
adc
dec
fdivl
movsl
rorl
mov
imul
jp
push
and
sbbl
loopne
addb
pop
je
es
mov
loopne
fidivrl
mov
out
stos
insw
cmp
push
bswap
iret
aam
cmp
insl
aas
xchg
ret
scas
out
lret
in
in
inc
ss
lods
dec
sbb
xchg
mov
push
xchg
adc
sub
int3
das
pushf
stos
stos
test
mov
dec
push
lock
lods
clc
pop
fabs
test
sub
lock
adc
lods
andnps
mov
in
dec
inc
fdivp
adcb
pop
loopne
mov
xor
sub
sbbl
into
inc
mov
jl
jo
sbb
pop
xor
mov
or
or
xchg
notl
icebp
sbb
mov
dec
fdivs
mov
xchg
and
lea
add
imul
std
xchg
and
and
out
repnz
andb
shll
ret
stos
lods
add
pusha
sub
dec
push
and
xor
insl
mov
scas
push
xor
fimuls
cmp
loopne
out
push
incl
pop
xchg
pop
pop
cld
scas
xorl
mov
ret
mov
inc
jae
inc
pop
call
fnstenv
xchg
pop
mov
rcr
call
adc
lcall
fs
mov
sahf
clts
sbb
push
sub
fbld
fstpl
mov
out
xchg
and
testb
sbb
push
cmp
test
jo
imul
fcomp
jl
test
cs
add
clc
sbb
movsl
icebp
sub
es
xor
int3
inc
adc
push
vmread
cs
int
fwait
scas
mov
imul
test
mov
push
dec
jl
call
stos
mov
in
inc
xchg
pop
adc
jmp
fbld
insb
add
lods
or
mov
xlat
mov
xchg
mov
cmp
pop
hlt
and
pusha
repnz
bound
mov
and
lods
inc
or
in
gs
jle
pushf
and
aaa
mov
push
repnz
mov
inc
out
les
inc
xchg
mov
push
call
sti
je
dec
cmc
gs
xor
cld
xchg
inc
inc
mov
fsts
cs
push
lods
pop
xlat
adc
loop
test
scas
push
cmp
imul
xorl
inc
adc
or
out
dec
and
adcl
movsl
cmpsl
js
dec
aam
add
jmp
or
or
sub
outsb
xchg
scas
push
sbb
rclb
fcomps
ja
lods
push
dec
add
daa
mov
call
inc
mov
fidivrl
ret
shl
dec
mov
xchg
aad
cmp
inc
inc
loop
sbb
xchg
pop
mov
mov
and
sub
or
and
adc
mov
imul
push
pop
mov
adc
sar
or
adc
fdivrl
minps
hlt
cmovs
mov
test
std
or
ljmp
pop
xchg
popa
leave
push
or
loope
mov
xor
cltd
enter
popl
dec
aaa
jb
pop
aas
outsl
gs
jmp
jnp
inc
xchg
test
xchg
lcall
movsl
in
shrb
push
push
mov
les
shrl
xor
je
mov
scas
lock
mov
sub
pop
mov
aas
and
lahf
imul
mov
fcoml
dec
imul
dec
add
inc
jg
test
aad
cmpsl
lock
cltd
mov
cmc
inc
lock
dec
enter
imul
xor
std
popf
xchg
jmp
ja
sti
fcomps
cmp
mov
push
mov
cmpsb
mov
dec
xlat
jp
nop
or
fildll
inc
les
movb
icebp
popa
adc
je
mov
and
int
lock
imul
cmpsb
jns
vorpd
xchg
fs
rorl
sub
lds
xchg
adc
divl
mov
loop
addl
ds
clc
push
mov
and
lods
clc
jle
je
xchg
mov
sub
xorb
daa
cmc
ret
pop
jb
dec
mov
xchg
sbb
xor
mov
popl
pushf
lods
rcr
icebp
mov
pop
mov
push
arpl
call
xlat
scas
cmc
and
loop
cmpl
mov
pop
fdivl
sub
sbb
fimull
insl
push
mov
push
arpl
adc
scas
mov
shrb
sub
pushf
pushf
scas
rol
pushl
movsl
aam
sbb
ds
push
loop
cmpsl
fsub
wbinvd
pushf
addr16
arpl
sub
in
repz
inc
dec
sar
call
jbe
push
xor
push
pushf
xor
loope
add
push
jecxz
pop
adc
loopne
dec
mov
cmpsl
lret
into
cmp
nop
adc
mov
jp
inc
loope
or
lea
mov
das
fistpl
mov
dec
idiv
push
xchg
cwtl
mov
add
or
int
lret
test
add
lock
cmpsb
andb
sbb
xor
pop
clc
pop
cmp
inc
jp
adc
add
or
enter
and
testl
daa
lcall
or
push
outsb
ficompl
mov
in
or
pop
out
imul
rcr
push
adc
push
popf
rorb
push
pop
and
add
in
stos
cmpb
call
lret
fisubrs
push
mov
cmc
js
lret
sub
sbb
sbb
lock
test
das
sti
fstp
negb
pop
mov
or
jecxz
jae
filds
mov
sub
xchg
inc
call
ret
xchg
jecxz
sub
push
jmp
inc
sub
and
xor
fimuls
pop
xchg
xchg
mov
bound
movsb
and
sbb
and
add
sub
jne
loope
es
out
pop
pop
jno
dec
pop
sub
adc
clc
inc
cltd
imull
mulb
inc
test
mov
mov
adc
or
mov
call
or
movsl
js
mov
or
sahf
jge
push
lahf
xchg
add
lods
xor
pop
cmp
mov
fwait
add
dec
mov
push
das
jge
pop
push
sub
jp
mov
dec
push
daa
mov
sub
push
sahf
out
sbb
aad
xor
xchg
out
mov
cmp
lahf
push
mov
and
loop
je
ret
add
mov
loop
mov
mov
aam
mov
sub
das
fs
inc
lock
lods
rcl
sub
jb
sbb
fildl
into
mov
mov
in
nop
pusha
or
mov
imul
ja
ljmp
push
adc
add
not
bound
shl
add
fdivs
cmp
fbld
and
sbb
and
push
and
ror
out
push
sub
ret
or
les
add
stos
ljmp
pop
add
movsb
adc
shll
popf
or
add
in
mov
cmpsl
aas
and
jg
daa
xor
or
mov
int3
jae
sbb
pop
je
mov
xor
inc
push
js
dec
xchg
pop
push
pop
aam
insb
in
je
movsb
popa
scas
adc
mov
xor
ds
sbb
ds
lcall
ljmp
pop
xor
in
sub
cmp
inc
pop
addr16
inc
mov
cmp
push
mov
iret
cmpsb
cmpsl
pop
lret
lret
or
mov
and
in
sub
insl
mov
xor
xchg
enter
cmpb
loope
adc
aad
dec
cmova
enter
jl
insl
fsubl
cwtl
dec
xor
inc
cmp
push
or
cwtl
ljmp
jne
sbb
add
movsb
stc
out
pop
and
and
scas
mov
scas
cmp
add
mov
mov
push
jp
jne
adc
aaa
ret
and
test
xor
xchg
dec
xlat
xchg
aad
cmp
pop
in
in
mov
cmpl
rorl
aas
push
cld
clc
add
movsl
icebp
mov
orl
or
sub
cmp
gs
jecxz
fsts
add
inc
cmp
je
test
jecxz
jl
iret
outsl
pop
cmp
incl
or
mov
dec
inc
pop
call
cwtl
or
fdiv
ret
mov
ret
shrl
mov
xor
data16
addr16
mov
xor
pop
adc
hlt
or
les
add
push
sbb
xorb
or
jmp
das
jecxz
inc
xchg
jo
les
xchg
mov
jno
mov
test
ss
jle
fstps
and
sbb
mov
es
insb
sbb
add
jg
loopne
mov
cmpsb
mov
divl
push
pop
jb
pop
add
add
or
cwtl
jg
sbb
xor
imul
jecxz
scas
jle
mov
repz
ret
and
add
mov
out
xor
sub
popf
jmp
icebp
jp
push
push
add
mov
bndstx
out
scas
lods
sbb
xor
jbe
sub
mov
push
push
push
jl
push
rolb
out
lock
lock
jmp
sbbb
add
mov
cs
outsl
jmp
lahf
or
scas
imul
jp
ja
pop
mov
ss
hlt
mov
clc
dec
or
jp
addr16
neg
aas
jo
std
push
cwtl
adcb
pop
cmp
sbb
inc
shlb
mov
test
nop
shl
jmp
mov
pop
mov
xchg
push
shrb
push
inc
and
mov
mov
cmp
jl
jl
loopne
inc
push
mov
xchg
xchg
les
cmpsl
insl
sub
add
push
cmp
mov
mov
jns
pusha
dec
push
cmpsb
push
push
hlt
call
es
xchg
push
loopne
fdiv
ds
aaa
jb
icebp
fadds
mov
mov
in
aam
lret
cmp
add
xchg
cmp
sarb
mov
mov
ss
cmpsb
dec
lock
insb
add
xor
rol
sub
sub
pop
xchg
jbe
xor
enter
pop
shrb
cltd
dec
and
outsl
bound
ljmp
inc
movsl
xchg
js
aam
test
call
mov
mov
out
jbe
roll
scas
push
xchg
dec
lds
test
call
fwait
or
and
inc
js
or
fcoml
in
sbb
add
ds
xchg
dec
sarl
cmpsl
adc
ret
push
subb
test
add
in
jecxz
and
daa
popa
xchg
mov
inc
add
cmp
cmp
mov
test
loope
mov
xchg
or
jb
mov
aam
ret
int3
pusha
sub
mov
sub
nopl
adc
mov
pop
dec
lahf
fs
adc
cmpsb
inc
push
jae
jno
and
mov
push
subb
out
mov
dec
bound
cmp
sahf
push
in
jb
dec
pusha
pop
testl
int3
xchg
cwtl
push
mov
push
push
das
inc
mov
test
loope
push
and
adc
nop
inc
add
mov
xchg
cli
mov
xor
pusha
out
loop
add
sahf
sub
testl
push
mov
lock
add
test
hlt
jo
orl
push
mov
movsb
pusha
out
sarb
xchg
jb
jl
mov
ljmp
loop
adc
push
mov
sub
dec
mov
add
test
xchg
pop
pop
inc
scas
or
jp
pop
prefetch
cmp
dec
int3
cmp
lods
scas
pop
sbb
or
stos
pop
dec
bound
xchg
cmp
es
inc
test
mov
dec
scas
mov
stos
xorl
mov
mov
xchg
imul
push
pop
aam
push
sti
sub
jo
int
pop
lock
insl
xchg
dec
cmp
icebp
lahf
stos
xchg
cmpsb
test
in
sbb
xchg
add
add
fcomps
loopne
pushf
outsl
jecxz
js
movl
mov
xchg
nop
ficoms
xchg
mov
dec
das
mov
inc
das
pop
push
push
loope
imul
xchg
cli
loop
loop
sub
push
mov
jg
jno
stc
dec
add
sub
pushf
movq
add
stos
xor
scas
dec
fistpll
adc
jno
sbb
ljmp
xchg
cli
pop
mov
ds
ljmp
dec
inc
popf
setle
and
xor
xchg
sbbb
adc
test
fmuls
shll
loop
std
push
cld
add
in
or
in
out
mov
scas
push
pop
push
sti
cmp
fisttps
pop
clc
ds
push
mov
lods
adc
lods
cld
loopne
roll
xor
xchg
add
leave
cmpl
std
roll
sarl
adc
push
fnsave
push
add
push
or
icebp
test
cmpsb
inc
fadds
push
cmpsb
dec
and
xchg
lret
jecxz
outsl
movsl
popf
sbb
sbb
dec
and
dec
fldl
sub
pushf
dec
or
dec
mov
inc
flds
cmpsb
fiaddl
push
xchg
movsb
pop
mov
mov
outsb
mov
cwtl
mov
add
or
cmpsb
dec
add
mov
call
adc
outsl
arpl
ljmp
pusha
sti
push
sbbb
push
nop
jg
outsl
jbe
dec
jmp
add
sbb
xlat
aad
dec
fildl
test
addb
icebp
insb
push
mov
fdivr
out
mov
cwtl
xchg
sub
jb
lods
or
std
mov
mov
aaa
push
loopne
mov
push
jge
dec
sub
mov
int
jno
insb
pop
daa
aas
dec
lea
dec
add
jno
push
inc
ror
fimull
pusha
scas
test
pop
lock
mov
xchg
push
adc
inc
mov
sahf
adc
pop
push
adc
jmp
imul
in
ljmp
cmp
add
hlt
mov
cmpsl
mov
and
adc
rcrb
dec
loope
cmp
imul
and
aam
mov
push
dec
xor
mov
std
xchg
mov
cs
xchg
inc
sub
daa
jl
scas
jl
adc
jmp
xor
outsb
fstl
cmp
dec
popf
cltd
outsb
ss
ret
xor
sbb
stos
inc
inc
cmp
jns
into
fldenv
bound
outsl
jbe
inc
out
jb
imul
lret
int
ret
fwait
loopne
mov
mov
daa
sti
add
imul
mov
ficoms
shrb
mov
aam
shrb
cmpsb
sti
ljmp
xchg
scas
int
or
int
inc
dec
inc
push
or
dec
roll
outsl
fs
aad
push
sbb
cli
mov
lea
sub
pop
xor
adc
fisttps
fistl
adc
jecxz
je
fiadds
in
ret
rolb
test
xor
fnstsw
in
push
out
inc
xor
lock
or
insl
fiadds
jbe
lock
mov
push
push
sub
inc
mov
lret
dec
mov
dec
out
xchg
mov
xchg
addr16
outsb
sub
nop
leave
pusha
nop
xor
loope
mov
push
and
clc
or
add
scas
adc
sar
in
orb
mov
cmp
js
sbb
jnp
add
sbb
mov
int
ljmp
test
arpl
movsb
ja
arpl
inc
xchg
jo
pop
inc
xchg
fisubrs
lcall
mov
xor
rcll
pop
std
dec
mov
mov
xlat
movsl
repnz
push
fidivl
mov
pop
push
ljmp
stos
fmull
fs
jno
push
jp
out
stc
repz
stos
pop
orl
sbb
and
pop
repnz
xor
pop
incl
add
mov
or
xchg
jp
js
les
loop
and
xchg
jbe
mov
pop
aaa
dec
mov
push
cld
je
inc
lret
inc
in
xchg
jmp
js
push
sbb
sbb
mov
scas
pop
mov
jo
scas
pop
sub
dec
fisubrl
sub
add
ret
rcll
mov
pop
xchg
mov
add
xchg
fsubrl
xchg
mov
lret
dec
outsb
mov
and
or
sub
aaa
lret
or
leave
mov
hlt
cmp
fists
clc
pop
xor
sahf
scas
test
ret
fisttpll
sub
iret
mov
inc
cld
and
bound
icebp
jge
and
mov
inc
xchg
xor
leave
dec
pop
in
or
enter
cmp
jmp
testb
je
pusha
push
add
lahf
ss
sub
adc
mov
mov
and
pop
add
loopne
pop
lea
insl
pop
cmpsb
cs
pop
repz
pop
pop
or
addl
fiaddl
movb
jg
dec
cli
sbb
adc
add
sahf
push
ret
aaa
lds
jne
jne
sbb
mov
test
pop
sbb
lret
cs
fwait
shll
popa
aas
fdivrs
cmc
es
rclb
inc
cmp
fmuls
cmp
sub
not
ds
cmp
or
call
inc
les
flds
jbe
push
and
mov
test
jbe
sbb
push
popa
mov
jl
add
xchg
leave
daa
cld
inc
xor
adc
fabs
mov
loop
xor
cltd
adcl
xor
fsubp
sub
add
les
mov
sbb
lods
cmpb
add
rol
mov
popf
jmp
js
and
or
add
out
out
sbb
mov
lret
ret
repnz
xor
ret
pop
or
mov
pop
push
outsb
call
adc
scas
test
je
push
movb
cwtl
mov
jno
mov
push
cli
les
inc
divb
enter
lret
jbe
je
and
cmp
adc
popf
and
pop
lock
adc
push
call
in
shr
imul
je
out
pop
test
xor
add
sahf
mov
mov
insl
mov
pop
sub
xchg
push
test
leave
jo
es
imul
pushf
cmpsb
and
int3
loopne
push
inc
ds
shl
cmp
adc
sbbb
mov
imul
into
xor
test
loope
mov
push
push
adc
fimuls
sbbb
adc
fwait
add
lock
shrb
shll
mov
xchg
xor
int
movb
sbb
mov
mov
and
in
mov
sub
mov
mov
sub
ljmp
mov
pop
popa
int
or
nop
push
add
mov
cmp
jmp
add
adc
adc
ss
cmpb
fadd
pop
loope
jmp
xor
je
adc
jb
mov
sbb
xor
mov
int3
jo
insb
mov
jne
cmp
lods
mov
test
es
pop
icebp
adc
push
mov
por
shrl
xchg
loope
leave
cmp
loopne
inc
jbe
and
pop
xlat
std
pop
add
and
add
fldt
xchg
orb
jmp
mov
add
cmp
aad
jo
mov
rolb
jle
addl
fmull
fs
or
vmaxpd
popf
mov
loopne
lcall
es
sbb
hlt
xor
dec
cltd
jae
test
popf
mov
dec
push
cmovle
movsb
call
dec
enterw
and
mov
jno
iret
or
add
les
inc
xchg
cmove
push
adc
xchg
orl
test
popf
or
inc
sahf
add
insb
inc
pop
jl
mov
jmp
push
cmp
inc
xchg
xor
ret
mov
mov
dec
push
popf
shlb
xor
inc
mov
into
sbb
cld
cmp
nop
dec
mov
setae
lret
sbb
dec
insb
popf
pusha
test
pop
sbb
ds
dec
sbb
cmp
mov
xor
push
js
pop
test
mov
jbe
aas
ficompl
movsb
jo
cmp
fiaddl
rorb
push
inc
jl
sti
call
rorl
inc
inc
inc
fistpll
pop
mov
pop
arpl
adc
push
sar
xchg
mov
test
xor
adcl
imul
movsl
test
fidivl
push
cli
loop
inc
repnz
or
mov
test
push
repz
adc
mov
inc
mov
jecxz
ret
aas
fidivl
and
or
aam
push
pop
movsl
mov
ds
mov
push
or
cmp
out
mov
inc
xor
rorl
mov
subb
sub
fiaddl
out
negl
push
or
dec
addb
std
or
mov
jne
mov
clc
dec
inc
cmp
inc
sbb
dec
test
je
arpl
jecxz
mov
adc
dec
aam
jmp
mov
or
dec
addb
add
or
lea
sub
cmp
jne
xchg
mov
jb
loop
adc
js
mov
jbe
aad
cmp
sub
add
push
fdivrp
cmp
dec
outsl
jg
stos
jmp
aaa
in
adc
add
hlt
cmpb
xor
mov
cmpsl
push
fdivs
sub
aaa
fimull
xor
mov
aam
fsubs
add
pop
mov
pop
repnz
xchg
sahf
xchg
stos
dec
test
mulb
sub
or
add
jg
dec
push
pop
add
scas
loop
imul
cmp
rcrb
es
scas
nop
in
pop
aad
popa
sbb
mov
rcrb
sub
inc
or
mov
rcrb
ret
clc
adc
mov
test
or
sbb
nop
xchg
mov
js
mov
mov
and
mov
les
push
clc
nop
sub
push
aam
out
push
adc
lds
mov
jo
dec
pop
jl
inc
sub
jp
in
std
sub
pop
push
mov
orl
cmp
es
sub
sub
nop
fimull
sub
xor
mov
xchg
pushf
cmpw
adc
cmc
mov
sub
sbb
add
cli
xorb
dec
xor
adc
scas
jg
loop
pop
jp
js
jo
inc
fwait
adc
cmp
sub
sub
cmpsl
jo
xchg
mov
or
mov
add
sbb
test
or
lea
cmpsl
dec
call
inc
loope
aad
test
or
sub
pop
xor
stc
cmp
in
cmp
adc
fcoml
stos
enter
data16
sub
test
dec
lret
or
cmp
fadds
sub
sbbb
movsb
xchg
bound
repnz
xchg
in
push
pop
or
cmp
pop
insl
pushf
data16
adc
inc
dec
or
xchg
xor
sarl
loope
dec
out
and
add
adc
fucomp
xchg
mov
and
lods
jbe
rcll
cmpb
js
adc
push
xor
js
repnz
addr16
pop
xor
jge
xlat
cltd
stos
in
js
les
fldenv
xor
jle
or
mov
rclb
add
mov
jecxz
jp
mov
enter
test
adc
inc
mov
mov
or
sub
add
mov
out
push
pop
loop
add
sub
inc
fisttpll
sbb
sahf
xchg
mov
cmpb
cmc
stos
pop
je
xorb
sbb
cld
sub
adc
mov
out
adc
sub
mov
sbb
cvttps2pi
jg
sub
sub
popa
scas
out
push
es
call
lds
xor
xchg
push
mov
or
shrl
out
xchg
add
xchg
inc
inc
mov
in
dec
call
sub
sbb
xchg
popa
inc
into
ds
mov
mov
dec
in
dec
ljmp
dec
jae
push
push
dec
jl
dec
jle
pop
int
push
ja
stc
js
add
or
addb
icebp
jns
lock
pop
cmpsb
adc
add
adc
sbb
cli
scas
inc
mov
xor
shlb
mov
jecxz
mov
jb
fiadds
sarb
int
and
sti
fisubrs
add
push
push
cmp
or
mov
jns
sbb
out
loopne
scas
fsubrp
pop
test
in
xchg
mov
cmpb
into
mov
fnstsw
into
pusha
or
insl
inc
clc
ret
and
jmp
add
pop
test
xorl
fsubl
cmp
jge
mov
or
xor
adcb
push
repnz
mov
test
and
xor
add
jle
and
cmp
inc
jecxz
aaa
decb
mov
ss
or
jbe
inc
pop
or
jge
cmp
mov
xor
jb
lds
adcb
insb
call
push
inc
mov
hlt
fisttps
adc
jnp
clc
roll
jae
xor
mov
sub
adc
push
pop
sub
ficomps
or
mov
or
adc
mov
mov
cmp
adc
pushf
push
sub
mov
je
sub
mov
mov
pop
fnstsw
sbb
aaa
ret
imul
add
test
and
sbb
ss
sub
adc
jp
jge
test
lret
adc
cmpsb
int3
ds
mov
ret
ljmp
xor
add
lret
int
xor
cli
aaa
mov
mov
pushf
out
popf
popf
inc
jg
push
js
mov
fstpl
lret
sbb
sub
xor
push
push
adc
out
stc
cs
repz
push
sub
xlat
std
xor
int
cmp
jae
add
push
data16
dec
mov
pop
movsb
cwtl
loop
fcmovu
sub
in
and
ss
pop
jb
clc
ss
int
add
movsb
notb
clc
adc
lods
xchg
and
jmp
jmp
pop
xor
stc
mov
cmc
jbe
inc
xchg
mov
mov
adc
cmp
mov
and
flds
lea
gs
push
sub
inc
jno
mov
int
sarb
sub
inc
sbb
adc
inc
cli
jl
dec
xchg
testb
mov
lods
xchg
xor
mov
and
in
and
adcl
lea
add
or
ficoml
mov
sub
aad
mov
jmp
cld
mov
inc
sub
int3
loope
and
cld
lock
lahf
cmpb
xor
mov
adc
mov
insb
push
push
push
add
jmp
pop
fadd
add
sub
jo
sub
inc
mov
enter
dec
adc
cld
or
add
add
mov
mov
xchg
jle
push
fs
mov
test
stos
shlb
cli
inc
push
ja
mov
mov
push
data16
xor
mov
mov
xchg
pop
stos
and
jl
add
mov
pop
add
and
jp
cmp
mov
and
or
fs
pop
push
loop
clc
mov
push
jge
pop
sbb
mov
and
dec
roll
xlat
cmp
aas
fwait
notl
dec
ljmp
inc
roll
call
adc
gs
loope
jbe
fwait
xchg
sahf
add
cmpsl
subb
cmpsl
adc
inc
test
aam
stos
les
xchg
add
lahf
or
pcmpeqb
dec
cmc
and
add
cmp
push
faddp
jnp
xlat
out
lock
mov
inc
cs
scas
aas
jp
inc
dec
ret
push
aam
in
push
scas
pop
pop
sti
lret
lock
jg
pusha
inc
sbb
enter
and
outsb
jmp
bound
mov
cld
in
sub
push
pop
fcmovnu
dec
fnstcw
lock
stos
jne
into
cli
pusha
movsl
jg
call
fmull
xchg
lods
mov
je
stos
sub
sarb
mov
jbe
imul
push
inc
test
push
inc
pop
mov
sti
ss
loop
add
out
mov
cld
pop
xchg
lcall
addr16
roll
dec
sbb
out
rcrb
mov
add
scas
or
push
cmp
inc
jp
sub
mov
rolb
ret
scas
mov
push
dec
mov
inc
les
in
pop
fsubr
insb
dec
inc
sub
adc
repz
adc
pusha
fsubrl
adc
mov
lahf
inc
dec
mov
or
jp
cld
lret
hlt
adc
popf
jmp
scas
mov
js
mov
out
in
aad
subb
pop
aas
mov
and
not
or
xchg
insb
data16
push
cmp
add
xchg
or
cmp
mov
and
add
out
sti
js
jge
sbb
adc
jecxz
mov
cmp
mov
xchg
out
ja
sbb
nop
push
sub
ret
dec
jne
jnp
sbb
jbe
loop
jnp
inc
push
sub
rclb
push
mov
jl
cmp
hlt
add
adcb
orl
jne
inc
fmull
hlt
push
inc
add
fdivrl
pop
shrl
rorb
out
pop
dec
movsl
inc
fidivs
xchg
push
les
mov
mov
fisttps
dec
test
or
inc
pop
insb
pop
inc
daa
shlb
insl
inc
adc
pop
shl
lret
xor
movsb
jg
mov
fwait
ljmp
loopne
mov
stos
ret
fbstp
and
mov
stos
mov
pop
xor
jns
mov
movsb
sbb
cwtl
clc
xchg
push
popa
add
xor
and
ret
or
fxam
iret
idivb
add
pushf
sub
or
mov
notl
push
decb
outsb
or
sbbb
test
mov
push
adcb
rolb
mov
push
ja
inc
lcall
lea
fcomip
sub
adc
or
je
and
leave
xchg
adc
es
test
push
mov
scas
jp
mov
sbb
jb
js
and
and
hlt
push
les
in
dec
and
xchg
aaa
xchg
push
jl
inc
or
loopne
mov
imull
fmull
push
sar
lock
cmp
or
loopne
les
push
rcr
jmp
mov
js
inc
movsb
fwait
ljmp
mov
push
sub
mov
xchg
add
jns
add
or
jl
test
or
add
lock
cmp
cmp
xlat
xchg
out
repnz
das
mov
clc
pop
pop
cli
push
fsubrp
or
fildll
sti
inc
int
fucompp
sbb
cltd
mul
dec
cwtl
lcall
add
or
sbbb
mov
xor
adc
mov
in
mulb
rcl
or
rolb
dec
and
jmp
ljmp
mov
mov
push
les
xor
sbb
jae
xchg
insl
xor
jg
add
cmp
mov
inc
stos
xchg
mov
push
xorl
sbb
pop
push
out
add
in
ljmp
enter
jge
test
dec
cmp
mov
mov
sbb
in
mov
and
ret
or
adc
mov
call
popa
je
sbb
mov
and
cmp
jle
xor
lods
fcom
jecxz
mov
xchg
das
adc
mov
fcoms
push
sub
test
cld
clc
es
das
sarl
stos
jo
mov
pushf
lret
data16
xor
pop
mov
inc
filds
pop
lods
fwait
jmp
push
cmpsb
aaa
mov
push
shlb
pushf
or
adc
xchg
push
rdmsr
and
movsl
inc
pop
pop
inc
les
adc
movb
icebp
sarl
pushf
push
mov
or
xlat
mov
mov
test
or
loope
sahf
hlt
fadd
repnz
mov
add
cmc
pop
add
or
and
sub
inc
push
icebp
pop
cmp
lock
scas
ss
divl
js
jne
dec
gs
data16
jo
ljmp
out
push
je
fistpll
and
das
in
data16
jbe
dec
loopne
cmp
fisubrl
aad
stos
lret
mov
mov
jmp
jmp
aas
test
subb
je
push
xor
out
out
ss
not
mov
push
cmp
fcmovnbe
inc
mov
xor
push
xor
in
inc
inc
outsl
fildl
leave
icebp
mov
fists
mov
mov
and
mov
sbb
addb
jns
mov
add
jb
xchg
and
fadds
mov
lods
or
or
out
mov
or
push
frstor
in
out
adcb
or
dec
jl
fstp
or
fcom
mov
hlt
je
push
cmc
jmp
add
mov
test
es
outsl
push
les
ret
add
ret
fcoml
push
insl
pop
test
xor
ja
add
popl
push
dec
adc
bound
mov
jno
ljmp
int3
xor
rcl
or
js
mov
fbstp
sbb
adc
jl
mov
dec
inc
pop
frstor
clc
or
mov
sahf
scas
jge
hlt
in
mov
mov
inc
adc
movsb
rcr
fisttps
push
les
addb
pop
das
push
mov
pop
les
adcb
or
sbb
mov
add
pop
arpl
mov
mov
pop
push
cmp
mov
sbb
pop
cmp
inc
insl
shrb
and
psubsb
xchg
push
dec
cmp
adc
xor
xor
in
or
imul
stc
jle
fnstcw
jo
sub
mov
push
fistl
mov
into
negl
jne
lods
clc
adc
lcall
les
sub
sub
stos
pusha
jb
sub
sahf
cwtl
loope
fimull
sbb
dec
sbb
add
ret
icebp
loopne
jbe
push
push
ja
adc
add
mov
std
lea
shll
aas
pop
outsb
int3
imul
push
sbb
or
inc
and
jle
inc
ja
jbe
jl
sbb
and
mov
mull
fnstenv
sahf
aam
and
js
adc
lock
inc
outsl
test
jbe
xchg
sbb
rorb
pop
mov
outsb
int
mov
divl
cmp
in
inc
in
mov
mov
add
js
cld
mov
pop
ficoml
ljmp
mov
mul
adc
xor
or
outsb
imul
push
je,pt
sub
addr16
fistpl
sbb
mov
inc
int
fs
dec
call
into
xor
mov
push
fisubs
xorl
lock
stos
dec
push
pop
jbe
cmp
mov
dec
jnp
or
sahf
test
mov
mov
cli
fdivr
aas
loope
fsubrl
xchg
pop
push
dec
cmp
pusha
repz
fs
xor
loopne
lock
std
dec
fs
popf
xor
sbb
aaa
cltd
dec
fiadds
les
das
jle
or
push
push
mov
adc
mov
push
sbb
adc
sub
lcall
test
es
xchg
inc
or
mov
cli
adc
lock
and
jge
mov
or
xor
push
inc
jl
mov
push
jne
out
mov
cmp
icebp
mov
cli
pop
jb
mov
daa
lahf
lret
jo
imul
jno
shl
and
inc
mov
inc
aas
mov
xor
mov
pop
mov
mov
cwtl
adc
fists
xchg
push
subb
popa
mov
outsl
jo
movl
stc
push
orb
mov
lcall
xchg
fsubr
xor
jp
mov
lcall
fimull
das
int3
mov
xchg
lahf
call
jp
jmp
cld
adc
or
das
rorb
stos
cld
dec
lock
call
mov
icebp
imul
jp
sbb
into
flds
and
xor
push
jmp
push
mov
push
fbstp
mov
cwtl
cltd
or
gs
loopne
mov
cmp
mov
and
add
es
add
cwtl
mov
and
adc
sub
pusha
mov
test
lock
mov
pop
or
mov
add
cltd
clc
jecxz
cmp
arpl
aad
or
xor
jl
cltd
push
adc
sub
mov
and
xchg
and
out
sbb
inc
mov
mov
ficomps
jle
adcb
adc
mov
mov
mov
xlat
push
stos
mov
xlat
sbb
loope
test
roll
inc
movb
stos
dec
adc
lret
and
inc
jp
hlt
cmp
xlat
pop
pop
lahf
clc
ljmp
mov
xor
push
mov
xchg
xor
jmp
lock
mov
or
loop
clc
push
inc
cmp
inc
je
pushf
mov
mov
pusha
sbb
shrl
outsb
pop
adc
ss
fcompl
cmp
out
xor
subb
lahf
shrb
daa
pop
cmp
hlt
ficomps
mov
push
add
xchg
add
lahf
mov
push
inc
cmpl
inc
mov
push
mov
fisubs
rolb
mov
orl
in
push
mov
out
sbb
or
je
mov
andl
imul
fiaddl
fwait
add
insl
mov
sbb
insb
mov
cmpsl
xor
pusha
mov
jge
adc
popa
sahf
cs
outsl
cmpsl
mov
mov
jge
cmp
shrl
inc
cmc
or
fcoms
sub
mov
popa
add
cmc
push
xorb
add
add
cld
insl
out
mov
pop
rol
push
xor
push
dec
enter
pop
ss
adc
pushw
sbb
loopne
dec
dec
sub
adc
jecxz
cmp
scas
lahf
push
mov
rcrl
out
jg
xor
iret
xor
js
std
xor
jns
sub
mov
cmp
je
mov
mov
sub
stc
dec
testb
lds
adcb
push
cmc
addb
or
scas
lods
mov
adc
lods
andl
rol
sti
aas
cmp
inc
mov
test
jmp
bound
cmpsb
pop
sbb
loop
adc
add
mov
aas
adc
sahf
jg
cmpsl
adc
cmpb
arpl
outsl
pop
pop
push
sub
push
aad
outsb
or
jae
mov
insb
sti
cmp
bound
lock
xlat
inc
std
je
movsb
daa
push
push
mov
fadds
lahf
scas
push
mov
imul
enter
lods
push
outsb
ljmp
mov
ss
inc
popf
fs
sub
jg
adc
mov
sub
xor
sarb
pusha
dec
pop
loope
stos
movsb
flds
mov
xchg
shll
mov
dec
lea
test
push
push
jge
and
mov
nop
push
sbb
shlb
out
jmp
pop
adc
push
bound
in
cmp
repnz
add
inc
daa
repnz
fcoms
js
sub
push
push
add
in
mov
popa
cmpsl
jl
jne
inc
into
stc
in
stos
sub
add
pushf
push
daa
fisubs
outsb
xor
jae
mov
sbbb
cmc
xor
stos
xor
inc
scas
or
mulb
xchg
jnp
or
pop
dec
cmp
aas
movsl
cmpb
in
movsb
jmp
rclb
insb
hlt
aad
inc
loope
push
and
push
out
and
dec
cmpsb
jl
rorb
inc
sub
fdivrs
aaa
dec
inc
loopne
add
shrb
cmp
add
mov
iret
fbld
lahf
mov
inc
push
clc
and
mov
pop
lods
mov
jecxz
daa
loop
sbb
ds
add
bound
nop
dec
andb
push
mov
xor
or
cmp
jle
inc
std
pop
clc
adc
test
aas
add
xor
dec
cltd
or
push
mov
xchg
nop
inc
and
mov
xchg
xor
mov
and
cwtl
xchg
hlt
xchg
scas
add
xchg
int
sbb
pusha
mov
dec
in
dec
mov
shr
xor
inc
pop
js
leave
push
add
fiaddl
scas
sbb
repnz
xlat
fiadds
mov
dec
mov
adc
mov
mov
add
push
leave
fnclex
popf
jb
shl
cld
adc
push
cmc
cmp
icebp
mov
nop
pop
in
and
mov
or
adc
push
lcall
inc
jns
push
xor
les
adc
cmp
pop
lock
pop
or
push
js
and
or
add
movsl
hlt
inc
sti
dec
aam
bound
or
and
insb
sbb
push
mov
mov
adc
cmpsb
mov
sub
pop
loope
ljmp
pop
jb
mov
js
std
call
mov
xchg
lret
mov
sbb
mov
roll
xlat
ss
xlat
or
sub
push
pusha
cmpsl
mov
aaa
and
xor
mov
rol
xchg
out
dec
and
lock
adc
bound
cmp
cli
pusha
aam
jecxz
sti
add
test
cli
pop
or
mov
mov
pop
push
jno
fstpt
sub
in
das
rorb
ud1
push
call
sub
test
push
pop
cltd
xchg
call
cmp
add
jbe
dec
jmp
inc
xor
in
push
sub
pop
add
push
xor
jb
xchg
outsb
movsb
insb
frstor
call
mov
insb
js
sbb
and
rclb
call
mov
ror
pop
pop
pop
and
sub
xchg
scas
mov
add
inc
sub
data16
shlb
sub
dec
push
out
pop
jo
sub
test
jp
adc
mov
stos
adc
cld
xor
jo
xchg
ret
jo
mov
int
pop
add
mov
sbb
in
imul
inc
fidivrl
ficomps
test
es
imul
mov
into
xchg
dec
xlat
and
push
cmp
dec
inc
or
cld
sahf
adcl
ljmp
fisubrl
inc
lahf
jae
mov
cli
sbb
cmp
cld
or
fisubrs
jecxz
push
mov
ljmp
data16
in
outsl
je
xchg
pop
adc
repnz
fcoml
xchg
std
xor
pop
sbb
mov
jno
shll
push
and
adc
loop
push
loop
pop
test
xor
add
cwtl
popa
fildll
cmc
cmc
out
or
dec
xor
push
les
sub
test
rolb
jo
rep
mov
mov
mov
mov
adcl
jmp
aam
iret
stc
ror
xorb
or
sbb
dec
add
bnd
mov
popa
sbb
xor
push
mov
test
jl
mov
push
fcoms
jb
mov
rcll
add
ret
add
js
adcb
out
or
xlat
and
fwait
push
sub
frstor
pop
xor
mov
loope
das
popa
ss
mov
js
sub
dec
push
lods
rorl
xor
inc
push
sti
jle
xor
jb
cmp
push
ds
lods
cmp
sti
mov
out
xor
in
dec
adc
mov
outsl
ds
enter
cli
aas
mov
or
or
inc
fs
scas
push
inc
cwtl
fimull
mov
inc
ljmp
mov
inc
out
lahf
rclb
rcr
stc
xor
or
mov
out
repz
push
mov
lret
jle
dec
sub
jne
push
stos
jge
stos
add
dec
sbb
mov
push
inc
out
or
mov
push
xchg
push
stos
mov
in
shr
sbb
xchg
jecxz
cwtl
leave
sbb
lods
out
jb,pt
inc
mov
mov
aam
mov
enter
mov
mov
cld
call
inc
lea
std
or
std
mov
jb
aas
dec
fdivs
dec
and
mov
mov
sub
mov
shrl
mov
insb
cwtl
mov
cmpb
icebp
mov
repnz
pop
dec
sub
pop
mov
dec
in
int3
adc
stos
fisubs
xlat
sbb
clc
inc
testl
loop
jo
sbb
jo
sbb
inc
push
jo
daa
mov
and
out
xchg
fs
jmp
mov
ss
sub
mov
popf
jbe
in
inc
pushf
xchg
nop
pop
mov
adc
mov
cmp
fiadds
subl
ss
mov
cli
in
mov
pusha
stos
test
xchg
cwtl
jge
mov
or
addr16
aas
pusha
jl
clc
mov
pusha
mov
js
sbb
adcl
push
lea
xor
cwtl
inc
fistpl
test
sbb
movsb
xlat
and
ret
scas
or
xor
dec
sub
inc
pushf
test
in
push
mov
arpl
test
add
pop
aas
inc
xor
push
out
sbb
gs
jo
bound
push
fisttpl
and
sub
nop
mov
inc
add
sarl
push
sbb
jmp
imull
lods
pop
push
and
adc
fs
push
test
lods
stos
jp
test
dec
or
push
xorl
pushf
imul
sub
mov
sub
ja
or
push
orb
orl
fs
sahf
push
mov
stos
mov
jbe
mov
pop
cmpsb
inc
outsl
fwait
pop
and
in
dec
scas
lahf
dec
pop
enter
mov
in
int
push
pop
push
mov
pop
mov
sbb
enter
pop
sub
fidivrs
lock
mov
aaa
les
pop
jecxz
pushf
scas
sti
fmulp
jp
rolb
pop
push
sbb
mov
xor
inc
call
out
loope
fucomp
cmc
cmpsb
or
adc
inc
aaa
sbb
dec
arpl
js
cld
cwtl
jle
cmp
pop
fstpt
pop
xlat
je
std
add
push
mov
fucomp
sbb
loop
push
dec
loop
dec
cmpsb
gs
scas
std
xchg
sub
dec
jl
outsb
add
leavew
pop
mov
aad
pushf
mov
cs
push
push
add
push
sbb
ss
mov
adcb
pop
mov
sbb
and
push
shlb
mov
fcmovnbe
fsubs
jo
push
or
xchg
fisubrl
mov
leave
dec
insb
int3
aad
xor
add
js
fdivr
mov
cmpsb
stos
dec
push
idivb
dec
mov
imul
mov
add
mov
loop
pop
icebp
mov
or
ret
fistpl
sub
xchg
mov
loop
inc
or
cli
jmp
jb
das
dec
push
inc
pop
inc
or
lods
int3
pop
jle
mov
xchg
dec
add
test
push
pop
cmpsl
push
sbb
stos
xor
nop
in
mov
sbb
cmp
or
or
ficoms
fadds
cs
mov
stc
daa
add
add
sub
inc
add
inc
push
out
push
sub
in
sti
push
and
sbb
leave
loopne
shlb
cmp
push
dec
jo
add
cwtl
pop
xor
mov
xchg
add
jmp
rolb
push
and
and
stos
ret
jle
ds
mov
shl
sbb
pop
je
arpl
fcom
ss
fists
sbb
xchg
test
or
cmp
addb
pop
sub
addr16
pop
add
mov
sbb
cmp
out
movsb
leave
scas
rolb
sbb
in
push
mov
loopne
pop
icebp
inc
xor
sbb
mov
enter
lahf
push
mov
pop
mov
adc
sub
xchg
mov
push
loopne
xchg
jne
adc
jae
ret
test
loope
icebp
adc
repz
mov
inc
test
ret
sub
addr16
aad
push
add
pop
lds
push
das
mov
mov
jo
or
push
sub
mov
and
mov
faddp
mov
in
and
je
fsubp
pop
and
cmp
push
mulb
sub
mov
inc
int
xchg
leave
and
add
sahf
jp
in
xor
and
mov
lahf
inc
add
pop
shrl
lock
mov
data16
and
data16
cmp
movsl
ret
into
std
jae
ficoms
jl
testb
and
mov
inc
insb
bound
bound
scas
faddl
or
inc
xchg
cwtl
dec
cmp
add
cmpsb
fs
adc
nop
loop
insb
and
adcl
imul
push
in
and
mov
leave
cmc
nop
mov
jno
xchg
movsl
aaa
pop
faddp
xchg
imul
call
lock
push
mov
lea
push
adc
ret
dec
mov
addb
xor
test
nop
mov
add
sub
or
jb
sbb
sti
mov
xchg
push
cmp
mov
jo
add
icebp
dec
inc
mov
into
in
and
dec
pusha
sub
js
push
cmp
or
loop
inc
mov
mov
clc
inc
repnz
js
test
bound
inc
xor
cmp
jp
int3
insl
xorl
les
stos
sar
mov
xor
inc
scas
call
dec
jl
enter
in
cmp
ljmp
lret
xchg
adc
pop
lods
orb
out
and
xchg
fldcw
and
xor
rorl
or
es
pop
mov
jmp
adc
mov
lods
xlat
push
scas
test
fwait
repz
xor
inc
sahf
xchg
lret
push
inc
push
adcl
push
adc
push
jecxz
ljmp
fwait
ds
fld
sbb
pop
push
adc
in
mov
or
ljmp
arpl
add
adc
movsb
ds
xchg
cmpsb
jl
or
pop
dec
add
jecxz
je
xchg
enter
leave
call
call
das
mov
cld
xor
icebp
mov
mov
jp
adc
fstps
add
sarb
icebp
es
lock
sbb
test
jmp
int
cmp
sarb
shlb
add
scas
and
jno
in
icebp
lods
inc
lea
push
cltd
dec
xor
mov
mov
or
out
fcomps
aad
mulb
sbb
pop
add
push
pop
ds
cmp
and
mov
dec
inc
xchg
adc
adc
lock
imul
insl
or
cmpsb
ss
sbb
sbb
inc
inc
pop
inc
adc
add
cmp
popa
mov
mov
add
clc
or
mov
test
outsl
test
push
xor
xor
fwait
mov
xor
adc
pop
mov
das
mov
cmp
sbbl
mov
mov
cs
inc
adc
pushf
dec
push
das
or
cmp
shll
das
mov
add
ds
fadds
jl
ljmp
adc
test
cmc
aam
jle
inc
cmp
sbb
fadds
popf
cmp
sub
mov
dec
cld
sub
mov
int3
loopne
fsub
inc
dec
into
mov
sub
cmp
lock
sbb
add
push
iret
inc
decl
repz
inc
add
lret
popf
test
mov
xchg
mov
insb
popf
adc
sub
dec
cmp
or
not
daa
jle
cmp
test
jecxz
aam
xchg
stc
or
sbb
xchg
imul
loop
shll
jns
pop
or
jmp
fiaddl
push
andb
dec
or
gs
push
add
sbb
xor
repnz
enter
rcrb
les
and
scas
or
sub
push
jnp
in
sub
dec
push
nop
lods
aaa
jl
jge
pop
out
je
stos
mov
sub
fidivrs
and
orl
push
daa
loop
mov
sti
adc
jbe
scas
adc
sbb
mov
or
cmp
fimull
rclb
lar
inc
add
sub
loopne
pop
sbb
jmp
repnz
clc
out
es
sbb
out
adc
mov
out
bound
add
fldl
dec
pop
sub
scas
xchg
movsl
jb
push
daa
std
pop
mov
mov
hlt
xorb
loope
inc
mov
loop
lods
push
or
jge
mov
adc
xor
pop
sbb
pop
or
cmp
pop
js
cmpsl
into
shlb
and
into
negb
cmp
jnp
ret
pop
mov
out
aas
push
mov
inc
stc
push
hlt
es
std
inc
pop
mov
mov
sub
lds
data16
push
cmp
fwait
das
sub
pop
pop
ret
lret
fildll
or
mov
loop
push
xor
enter
shlb
dec
lahf
mov
mov
and
aaa
push
mov
mov
add
out
outsb
outsb
js
call
mov
sub
mov
jle
cmpsb
push
inc
outsl
cwtl
or
out
fisttps
push
out
push
and
cwtl
aam
lods
xchg
inc
jae
call
add
imul
add
mov
int3
add
movb
scas
push
xchg
lods
adc
jae
fcmovb
lcall
mov
in
lods
frstor
test
xchg
and
cmc
push
aas
icebp
xchg
clc
jne
sbb
pop
xchg
jl
mov
mov
add
cwtl
push
push
shrl
cmp
pop
xchg
mov
push
mov
dec
mov
vpackuswb
mov
xor
fidivl
rcrb
adc
fs
ljmp
daa
inc
iret
mov
les
pusha
rorb
jl
sub
dec
mov
movsl
sub
lods
xor
fistpl
xchg
xchg
xor
xchg
cmp
leave
daa
or
push
mov
pop
add
int3
pop
sub
pop
icebp
dec
test
sub
fistpll
and
aas
ljmp
add
call
mov
xlat
adcl
mov
jmp
or
dec
loopne
push
dec
ficoml
cs
loop
xor
xor
andl
cmp
nop
jle
mov
inc
sbb
daa
js
in
out
mov
icebp
gs
clc
inc
rcll
mov
mov
andb
data16
and
addr16
das
mov
cmp
cmovo
mov
iret
mov
sahf
pop
jmp
in
enter
cs
mov
and
mov
icebp
push
xlat
fwait
shl
adcb
push
xlat
inc
mov
xor
mov
xor
ret
mov
lock
ljmp
mov
pusha
adc
sub
ds
push
add
xchg
mov
mov
xchg
jle
fs
push
out
fsub
stos
lods
sub
mov
aad
rcl
mov
pop
call
insb
lret
lfs
in
lods
or
push
push
jl
xchg
push
mov
mov
int
scas
mov
adc
mov
dec
cltd
push
sbb
xlat
stos
popf
pushf
lods
aas
push
es
jg
out
ds
fistps
and
jmp
je
jo
test
add
xor
mulb
dec
nop
int3
pop
push
mov
xadd
cltd
sub
aam
pop
movsl
inc
aam
sub
roll
clc
jmp
je
ret
in
or
pop
mov
sbb
cs
jno
frstor
add
add
inc
xor
cmc
loope
push
mov
mov
xchg
inc
fimuls
add
cwtl
rcl
and
arpl
in
adc
cli
adc
adc
push
clc
sahf
push
mov
sub
adc
pop
mov
mov
mov
pop
int
mov
pop
mov
cmp
mov
ss
inc
add
dec
outsb
test
inc
aam
cmp
daa
sbb
and
pop
stc
hlt
jo
adc
dec
mov
testl
mov
cmp
shr
sbb
pushf
int
adc
mov
or
cli
or
xchg
scas
test
mov
bound
fdivs
jns
push
or
inc
cmpsl
or
xor
cmpsl
loope
mov
inc
push
inc
pop
push
add
lock
dec
sbb
mov
and
mov
js
pop
mov
inc
cmpsb
call
pop
cs
jl
push
nop
adc
mov
mov
jmp
loopne
cmc
push
dec
stc
sub
int
mov
inc
inc
mov
inc
std
and
icebp
stos
pop
adc
nop
ljmp
int
xchg
mov
test
mov
sbb
lcall
lods
mov
incb
inc
mov
mov
lods
das
dec
rorb
push
inc
scas
or
dec
clc
mov
cmc
mov
push
int
std
mov
out
xor
jp
ljmp
inc
lea
or
lods
push
mov
sbb
mov
das
out
fisttps
lods
push
xchg
mov
inc
mov
pop
les
sub
movsl
lret
dec
adc
add
jmp
xor
adc
outsl
and
fs
sub
jl
or
testb
sarb
inc
lret
ss
pop
lock
inc
push
cmp
adcb
jae
call
mov
out
inc
xchg
sbb
stos
push
xor
cmp
test
test
mov
pushl
mov
sbb
rclb
pmaxub
sbb
fs
or
incb
pop
sub
xchg
inc
movsl
add
mov
inc
push
psubsw
add
pop
sub
test
push
lcall
push
shlb
mov
cwtl
push
pop
scas
fadds
xchg
rcrb
push
mov
dec
movsl
push
mov
mov
sbb
mov
stos
jl
or
pop
sub
mov
sub
inc
push
mov
xor
into
es
xor
mov
loop
mov
loope
lcall
jl
sbb
xchg
xor
lcall
mov
adc
push
pusha
movsb
bound
xor
rol
ds
cmp
rcrb
dec
mov
cmp
repz
fsubrs
pusha
mov
shrl
push
icebp
push
adc
loope
sahf
and
add
xchg
hlt
outsb
push
dec
gs
pop
notl
xchg
sbb
enter
xor
mov
leave
push
in
lods
lods
pop
ds
ljmp
jl
bnd
pop
xor
jmp
push
nop
loopne
mov
cwtl
cmpb
std
sub
xor
adc
mov
push
mov
in
aad
dec
out
ret
cli
jle
insl
rolb
mov
pop
call
hlt
test
mov
sbb
lods
inc
push
idivb
in
jnp
push
mov
loope
clc
lcall
adc
cmp
or
cmp
loop
loopne
imul
sbb
cmp
out
cld
clc
and
sahf
imul
cmp
sti
fbld
loopne
add
push
mov
add
sbb
pop
jno
mov
cmp
dec
shl
inc
xor
add
mov
cmpsl
push
jmp
mov
push
sbb
call
push
clc
icebp
pop
and
push
xor
test
push
sbb
sarb
push
js
sahf
fs
aas
icebp
or
pusha
ret
ds
mov
xor
sarb
ftst
ret
sub
or
mov
fst
pop
ds
fs
fnsave
sbb
or
shl
push
push
mov
sub
pop
xor
stos
mov
inc
inc
fs
mov
test
fldl
xchg
cmpsb
push
ds
adc
enter
mov
jbe
and
jge
cmp
mov
adc
push
stos
and
or
pop
stos
fdivr
adc
sbbl
mov
out
push
jl
icebp
sub
mov
push
cmp
inc
pop
mov
xchg
les
sbb
pop
push
xor
or
mov
mov
or
mov
push
movsl
jne
jo
sub
ss
cmp
aas
mov
pop
cs
outsb
or
push
or
sub
in
jnp
lock
adc
imul
rcr
push
xchg
inc
mov
pop
test
shll
pop
loope
mov
shrb
inc
in
lret
push
loop
test
movsl
test
sub
jnp
xchg
mov
mov
pusha
rcrl
pop
loop
xlat
imul
stos
pop
es
inc
stos
dec
mov
les
and
out
out
shl
mov
jbe
fbld
push
sbb
push
push
xor
push
jns
sti
hlt
incb
jne
jl
jp
xchg
pop
xor
cmp
rclb
stos
add
cmp
aam
xchg
add
add
int3
addr16
lods
icebp
xlat
xchg
dec
push
test
jne
pop
jle
sar
mov
push
lock
int
pop
mov
and
and
and
pop
dec
ret
ja
mov
lods
and
mov
xchg
or
lock
gs
adc
bound
enter
sbb
test
xchg
scas
sub
adc
pop
int
or
push
aaa
fists
add
mov
lds
inc
push
mov
or
jecxz
nop
or
loope
hlt
mov
cmp
clc
push
push
cs
loopne
sti
dec
push
mov
xor
jb
add
inc
pusha
adc
pop
inc
push
inc
jne
sub
test
cmp
repz
jmp
js
mov
dec
adc
fbstp
xchg
rcll
dec
fndisi(8087
mov
pop
in
aad
jecxz
das
push
mov
mov
sub
jno
std
mov
inc
pop
loop
enter
and
inc
jl
call
jle
jbe
cmp
aad
sbb
push
loopne
or
add
adc
add
in
in
inc
rcrb
sbb
mov
mov
movsl
cmp
add
ret
rol
dec
sbb
fscale
inc
jnp
loop
mov
and
imul
push
sbb
jb
dec
or
scas
ret
ljmp
pop
mov
adcb
mov
nop
sub
fldt
dec
dec
sbb
loop
and
ret
push
jge
mov
cmp
out
lahf
test
dec
push
les
inc
test
shll
mov
in
rcrl
addl
sub
into
inc
repnz
dec
ret
or
or
es
xchg
cmp
cmp
das
sub
push
xchg
clc
rcll
cltd
dec
sbbl
mov
xor
adcb
xlat
adc
js
xchg
dec
mov
xchg
call
jo
loop
stc
fildll
lret
mov
cwtl
aam
stos
mov
nop
idiv
pop
orl
stos
or
push
push
jnp
stos
mov
inc
call
mov
aas
cwtl
fsts
adc
or
pop
mov
add
cmpb
rcr
cmpb
les
lahf
pusha
inc
sbbb
popf
cmp
xor
mov
xor
popa
push
jle
pop
ds
out
shl
jg
loopne
mov
xrelease
imul
aas
lods
add
dec
sbbl
iret
pop
cmpb
pop
mov
pop
pop
cmp
sub
mov
or
sbbl
ljmp
call
add
cld
sub
es
and
dec
mov
jge
in
pop
nop
dec
rcrb
lret
mul
mov
cltd
xor
cmp
and
mov
xor
imul
fistps
mov
add
xchg
cwtl
shll
ret
mov
sbb
mov
xchg
and
shl
in
xchg
sar
insb
lret
push
or
pop
mov
aas
addb
fcomp
iret
sub
imul
test
xchg
les
call
lahf
push
sbb
inc
jle
dec
pusha
mov
mov
mov
cld
jecxz
add
mov
sub
mov
int
pop
xor
sbb
inc
add
test
mov
js
pop
mov
pop
or
repnz
icebp
imul
jl
outsb
push
cld
sbb
int
xor
pop
pop
dec
pushf
enter
es
loop
xchg
call
mov
push
clc
adc
rcl
cmpsb
mov
sbb
xor
and
push
sbb
mov
mov
pop
out
leave
cwtl
out
sub
jmp
add
xor
iret
or
jle
adc
mov
push
inc
lds
cmpsl
dec
es
sub
fadds
xchg
mov
inc
mov
test
lock
shlb
scas
or
jmp
xor
cld
mov
jle
and
testb
fcmovbe
push
push
pop
sbb
push
cmpsl
pop
xorb
or
jmp
mov
mov
fiaddl
cltd
popa
inc
mov
inc
jo
inc
adc
mov
xlat
push
aad
adc
or
out
push
inc
jnp
mov
in
icebp
xchg
jmp
xchg
adc
cmpsb
insl
out
adc
mov
fs
cmc
insb
adc
mov
es
jge
xor
or
push
mov
or
cli
xor
pop
loop
push
rcrb
cld
ret
nop
push
lods
mov
repz
mov
push
inc
das
dec
cmp
dec
sbb
test
adc
pop
addb
das
jle
pushf
loope
mov
ret
dec
mov
xor
sub
movsb
mov
out
dec
mov
sbb
dec
jg
or
shr
in
call
mov
push
mov
scas
or
popl
xor
insb
subb
dec
push
and
popa
shl
inc
lock
enter
mov
inc
cltd
das
inc
push
xchg
stos
or
loop
cli
fwait
inc
jge
mov
call
jne
jb
scas
adc
aas
xor
movsb
scas
invd
jl
cmp
and
out
jno
xchg
push
sbb
xchg
xor
ljmp
stc
mov
push
inc
movsl
idivb
lret
iret
sti
rolb
jl
adc
sbb
mov
pop
or
std
addr16
lods
mov
mov
pop
pusha
repnz
inc
lea
inc
out
sub
pop
cmpsb
clc
xor
xchg
add
lods
add
push
add
in
push
push
sahf
sbbb
mov
xor
jmp
xchg
add
mov
insl
xor
push
jns
sahf
xor
and
not
push
aas
adc
push
xlat
push
mov
in
aas
jmp
mov
lock
or
lret
insl
pop
jo
xchg
sbb
xor
stos
mov
xchg
push
repnz
inc
inc
adc
sub
loopne
add
les
addr16
push
push
movsl
mov
lock
xor
push
inc
enter
out
hlt
push
pop
loopne
xchg
xor
dec
and
sbb
mov
leave
data16
pop
test
inc
add
mov
movzbl
mov
pop
in
xor
clc
fisubrl
mov
mov
push
cld
xor
ljmp
pop
lock
rolb
stc
popf
sub
aas
jbe
cwtl
mov
aad
adc
cli
mov
adc
inc
adc
inc
jle
pop
mov
add
bound
mov
cmc
xchg
lcall
add
stos
mov
fsubs
sarl
xor
sbb
xor
movsb
xor
push
push
jg
push
xor
dec
mov
or
xchg
push
and
add
add
sbbb
add
rclb
int
rcrb
sbb
push
js
adc
sub
add
ja
and
adc
mov
pop
adc
inc
adc
mov
push
lods
hlt
into
jo
fs
fs
in
inc
cld
insb
rcrb
fs
adc
cli
mov
cmp
push
add
xchg
push
test
cmp
popf
adc
or
dec
xor
icebp
aam
dec
gs
cli
incl
test
inc
movsl
add
sbbb
sbb
inc
mov
mov
movb
inc
xor
cmp
test
mov
mov
jb
inc
fldt
test
ret
ficoms
cmp
mov
rorb
sub
adc
mov
push
les
int
sahf
sub
xchg
clc
adc
aad
inc
test
dec
sahf
into
push
cmp
push
or
inc
pushf
fsubrl
test
adc
sbb
inc
mov
jecxz
fsubl
xor
sbb
mov
pop
mov
movsb
mov
aad
rclb
adc
add
inc
and
sub
inc
sub
adc
mov
pusha
mov
mov
add
stc
cmp
lock
push
cmp
inc
sbb
and
jl
cs
xchg
add
aad
push
aaa
push
pop
lcall
cmp
adc
add
dec
ficomps
sbb
and
insl
cmp
repnz
mov
pop
add
jno
enter
loopne
mov
daa
cli
das
movsl
mov
add
data16
mov
inc
loop
adc
xchg
adc
jp
enter
outsb
int
and
sahf
add
cmpsb
pop
push
mov
mov
enter
not
movsb
and
rcl
mov
lock
cmp
insb
xor
inc
jmp
pop
jle
jecxz
jbe
mov
push
xchg
mov
mov
std
mov
jmp
inc
sbb
jns
scas
or
xlat
les
jbe
outsl
mov
in
loopne
fcmovb
cwtl
mov
popa
mov
jle
pop
sarb
stos
mov
sbb
add
sub
sbb
fadds
push
dec
xor
push
outsb
and
imull
test
test
test
jb
adc
movsl
jo
add
hlt
push
pop
lret
push
fldt
int3
leave
adc
push
inc
pop
mov
in
inc
pop
das
push
mov
aas
pusha
inc
mov
xchg
add
sub
adc
in
sbb
push
push
pop
pop
xchg
and
mov
imul
sbb
js
cbtw
test
xchg
xchg
mov
mov
test
and
mov
push
sbb
imul
aaa
or
add
and
in
and
xchg
xor
sbb
mov
ficoml
mov
cmp
sti
fs
mul
jmp
out
or
stos
pop
rcrb
inc
call
sub
popaw
jmp
or
pop
push
cld
in
cmp
insb
push
mov
jne
mov
add
adc
xchg
pop
shlb
cs
add
sbb
rep
lods
mov
xchg
aam
fnstenv
mov
cwtl
inc
jmp
fs
in
sbb
cltd
out
mov
cmp
pop
pushf
rcll
test
outsb
xor
xor
or
js
add
mov
dec
lcall
test
pop
pop
js
mov
add
adcl
mov
in
out
decl
add
cmp
add
ds
ss
cltd
mov
mov
sahf
or
sub
sti
cmpsl
pop
xchg
mov
pop
movsb
add
push
lret
test
int3
sbb
jl
or
lret
mov
adc
dec
adc
sub
pop
fisttpl
lcall
mov
movsl
loope
mov
push
call
popa
loopne
test
mov
inc
push
call
sub
cltd
mov
cs
sbb
and
ja
inc
jne
inc
push
push
mov
lock
and
lea
adc
ret
pop
push
fidivs
mov
ja
adc
cmp
xchg
jmp
test
dec
mov
scas
xor
cmpsb
test
pop
aas
gs
dec
push
mov
ljmp
dec
adc
sbbl
jbe
cmc
sub
mov
xor
mov
xorl
mulb
sub
pop
mov
add
or
pop
mov
movsb
fnstcw
or
cmp
dec
lock
jl
mov
jo
adc
shlb
sbbl
push
xchg
nop
or
lea
xor
test
jbe
mov
imul
cli
add
mov
and
and
or
push
testb
dec
jge
push
dec
cmp
shrl
fisubrs
out
icebp
jp
in
leave
add
pushf
jmp
cmpl
sub
pop
mov
and
shlb
movsb
lds
cs
lea
xchg
dec
xlat
fiadds
xor
aad
ficompl
clc
ss
insb
les
dec
jns
je
lret
or
gs
mov
test
dec
ss
js
lcall
lret
add
mov
adc
sar
push
fcomp
jnp
shlb
cmp
lahf
mov
xchg
out
mov
inc
in
xchg
mov
and
mov
icebp
inc
sub
jo
pop
push
ret
inc
xchg
dec
xchg
mov
popa
dec
pop
es
push
adc
sarb
xchg
or
dec
dec
inc
jb
shlb
or
adc
cmp
mov
or
mov
aam
out
and
stos
or
fdivr
bound
mov
in
xor
mov
push
cmp
test
adc
mov
sub
gs
jmp
shl
xor
lds
stc
xor
scas
dec
mov
pop
pop
add
pop
pop
sub
mov
push
aaa
cmp
pop
add
adc
add
bound
sub
dec
jns
aam
push
push
inc
imul
inc
in
push
mov
xor
sub
jo
push
incl
adc
data16
mov
cli
inc
mov
mov
push
sub
enter
fimuls
gs
sub
inc
test
lods
ja
sbb
stos
repnz
into
cwtl
ss
daa
xor
js
test
adc
dec
mov
mov
cmp
jbe
push
icebp
hlt
aas
mov
cmp
jmp
ret
andb
clc
ljmp
pop
jno
dec
in
fistpl
icebp
ljmp
dec
rcrb
cs
mov
stc
ljmp
test
xchg
pop
mov
sub
std
xchg
ret
add
pop
sbb
test
ffreep
xor
sub
jbe
jg
jl
hlt
mov
movmskps
jmp
adc
les
push
into
out
pop
aas
loope
dec
mov
lea
pop
scas
ss
adc
dec
or
and
xor
insb
inc
mov
jle
cld
cwtl
stos
addr16
cwtl
mov
std
ret
push
adc
jl
or
je
rorl
imul
rolb
xchg
push
call
mov
xlat
xor
jae
mov
and
sub
rorl
cwtl
push
clc
int
mov
iret
xchg
cmp
repz
push
jle
sbb
or
xor
loopne
push
loopne
push
cltd
cmc
or
pop
sub
dec
fs
out
mov
fs
sbb
les
inc
jp
xor
mov
dec
cmp
xor
dec
pop
inc
mov
mov
pop
sbb
dec
and
jns
lahf
sub
sbb
jns
clc
jns
gs
fnsave
sahf
xchg
jns
ss
jo
loop
ss
add
cmpsl
lret
nop
in
xchg
sbb
pushf
pop
movsl
jne
adc
outsl
cmp
mov
orl
repz
or
jecxz
push
xlat
dec
add
int3
cmp
or
add
test
jmp
xchg
test
and
lods
inc
and
aaa
or
adc
insl
jecxz
xchg
jne
pushf
sti
call
dec
xor
xchg
jb
sub
sarl
call
xchg
jp
or
leave
fdivl
clc
mov
cli
test
lret
movsb
cmpsl
adc
lock
cmp
mov
fmulp
jo
icebp
pop
hlt
mov
in
dec
add
mov
je
clc
loopne
mov
mov
jno
sahf
rclb
dec
push
inc
test
mov
push
mov
dec
sbb
ret
loopne
xchg
sti
mov
fadd
jae
jle
aad
mov
inc
jecxz
xchg
pop
cmpsl
sub
ja
in
sbb
inc
mov
add
enter
rol
out
fincstp
fmuls
test
push
rcrb
cmovbe
bound
sti
mov
rorb
icebp
fistps
xor
dec
or
push
ljmp
inc
rcrb
ror
loopne
divl
ss
dec
adc
lcall
andb
pop
mov
cmp
mov
mov
fidivs
cmp
pushf
out
mov
dec
loopne
fldt
mov
mov
cmp
stos
lcall
dec
gs
sarl
adc
mov
xor
aam
mov
clc
dec
or
lea
in
dec
jp
mov
and
dec
xor
iret
mov
mov
sar
stos
push
xchg
ficomps
xor
cs
mov
in
loope
xchg
mov
call
daa
xor
pop
mov
insl
xor
iret
xor
jae
insl
mov
sarl
mov
push
mov
cs
adc
pop
xor
ljmp
cmpsl
push
push
pop
cmp
or
out
push
test
shl
test
mov
adc
dec
ds
pop
mov
jne
dec
adc
jno
lods
or
aad
xlat
loopne
rorl
in
outsb
and
jl
inc
push
fisttpl
inc
leave
clc
inc
loop
push
add
enter
adc
push
faddl
jge
sbb
push
cmc
xor
mov
fwait
add
lds
lods
sub
bound
pop
jnp
idivb
enter
add
jb
lock
dec
push
ror
fs
and
lock
insl
loop
test
sarb
mov
filds
cs
imul
adc
mov
movb
test
dec
and
cmp
rolb
pop
xor
sub
lods
xor
mov
andb
sub
mov
push
dec
push
push
in
add
nop
inc
vmwrite
add
pop
and
mov
ss
mov
adc
stos
in
ret
inc
push
icebp
cli
mov
pop
les
sarl
and
inc
sub
push
aam
lds
insl
je
fcomps
or
dec
sahf
cwtl
lret
jns
addb
jge
sub
xor
or
scas
add
pop
add
mov
mov
pop
add
rcr
es
es
mov
cmc
add
pop
dec
filds
xchg
xor
cmp
pop
xlat
mov
into
dec
jecxz
xchg
pop
and
jl
push
jnp
dec
es
pop
cli
xchg
mov
add
adc
sub
inc
mov
xor
test
aam
lods
inc
fsubr
fisubs
mov
test
outsl
aam
mov
cmp
icebp
cwtl
pop
xchg
movsb
test
sbb
add
call
sub
sub
adc
fcoms
lea
inc
shl
inc
mov
ficoml
adc
pop
sbb
pop
inc
pop
jl
pop
popf
jecxz
pusha
xor
aad
pop
test
sbb
mov
scas
sahf
dec
es
cs
rcl
aaa
fwait
repnz
or
push
mov
push
push
shrb
int
sub
adc
push
jne
movsl
sbb
insl
adc
fisubs
fdivrs
and
mov
adc
sub
mov
sarl
mov
ret
cli
adc
ds
test
dec
ljmp
cwtl
fisubrs
xor
aad
fwait
ss
scas
mov
mov
pop
push
ret
xchg
loopne
push
add
add
popf
sbb
inc
mov
loopne
adc
dec
imul
mov
repz
imul
xor
cmpsb
movsl
sub
test
movb
in
jmp
inc
dec
pop
pop
repnz
sbb
test
insb
aas
adc
cwtl
js
sahf
subl
xchg
pop
jns
or
mov
iret
inc
aaa
cmp
popa
sahf
push
rcll
ret
lock
jo
push
xchg
enter
mov
mov
xchg
pop
ret
push
pusha
loop
sbb
cmpb
or
in
out
scas
mov
push
jb
aaa
mov
inc
inc
arpl
xor
pop
pop
sub
sbb
scas
inc
add
fs
jb
xchg
lock
enter
call
push
pop
mov
sub
lahf
and
push
dec
ss
clc
cmp
cmc
call
mov
ss
lds
push
ljmp
scas
rorl
sbb
jge
add
loopne
ss
mov
sbb
mov
sbb
shrb
pop
hlt
ja
dec
scas
pop
movsb
add
shlb
cmpsb
sub
and
lret
pop
cli
mov
sbb
and
cltd
pusha
dec
popf
icebp
adc
cmp
xor
cmp
sub
sub
cmpsb
mov
pop
inc
xchg
adc
mov
mov
stos
add
fisubrs
xchg
test
filds
mov
or
sub
jb
inc
ljmp
inc
adc
pop
dec
cli
in
sbb
mov
or
push
add
push
int
pusha
cmp
fldt
out
std
clc
int3
fbld
xor
clc
in
adc
and
mov
inc
and
jle
xor
imul
das
jo
sti
push
push
movsl
ljmp
ret
pop
or
sub
in
and
mov
iret
stos
aaa
add
push
mov
sbb
dec
sbb
cwtl
popf
movsb
inc
insl
add
orb
loop
test
cld
shr
test
mov
loop
in
pop
dec
minps
daa
repnz
cmpsb
lock
push
out
sbb
ja
rol
cmpl
push
enter
es
mov
and
dec
xor
ds
cmpsb
int3
sub
mov
push
xchg
cmp
rcrl
push
in
push
cmp
into
cli
cmpsb
xlat
test
sbb
insb
mov
shl
shl
mov
push
mov
cmp
mov
jmp
int
arpl
adc
push
aas
cwtl
bound
add
test
test
mov
lcall
cmp
jl
inc
ret
mov
jns
out
repz
cmp
inc
popa
sbb
loopne
lea
shrl
or
jne
sbb
lcall
mov
sbb
pop
pusha
pop
gs
jae
inc
sar
push
leave
jno
aam
fsubl
sbb
outsb
pop
ljmp
xor
mov
shll
or
jo
xor
in
into
insb
stos
push
fwait
sbb
mov
adc
cwtl
imul
pop
xchg
xlat
inc
outsb
loope,pt
mov
pop
scas
inc
xor
mov
pusha
sbb
addr16
mov
stos
xlat
add
dec
sbb
aaa
push
lds
test
push
sbb
mov
mov
xchg
inc
inc
outsl
mov
sarl
mov
inc
cmp
movsl
cmp
or
adc
loopne
mov
ffreep
inc
xchg
dec
ljmp
pusha
and
ljmp
adc
imul
xchg
adc
filds
mov
mov
pop
fisttpl
add
or
and
mov
adc
dec
sbb
xor
cs
loope
xchg
adc
inc
xchg
mov
push
adc
jle
mov
movsb
inc
or
xor
add
je
inc
call
mov
mov
adcl
or
out
or
sti
pop
scas
add
mov
incb
imul
addb
fiadds
jbe
in
cmc
loop
stc
bound
insb
aam
sbb
popf
and
ja
mov
push
loop
dec
sub
cltd
or
xchg
pusha
cmpsb
outsb
insb
inc
sub
leave
or
adc
div
jo
fs
sub
xchg
insl
insb
add
pop
adc
add
push
xchg
hlt
jno
call
or
pop
jo
cli
stos
cld
mov
add
sub
sahf
cs
scas
push
test
pop
jb
inc
int3
lods
push
lret
movsb
js
fst
mov
push
in
cs
js
cld
mov
adc
jmp
adc
lock
call
fwait
cwtl
rcr
xchg
rcrb
sti
push
xchg
mov
jge
lock
inc
fildll
inc
add
or
scas
add
jg
int
inc
mov
arpl
dec
mov
pushf
add
rol
sbb
loope
push
cld
xchg
add
pusha
ret
leave
xor
insb
pushf
je
push
inc
fistps
xchg
add
add
ficomps
adc
test
xor
data16
cld
test
xchg
insb
pop
repnz
sbb
fsubrs
jmp
movsb
mov
inc
or
shrb
lea
xchg
add
inc
testl
ja
sbb
jne
cld
movsb
dec
inc
pop
pushf
mov
jb
pop
push
sbb
hlt
mov
push
cltd
test
loop
ficompl
adc
or
or
mov
popf
mov
jl
mov
jae
add
call
pusha
into
nop
cmp
add
cld
lcall
aam
lods
jp
scas
stc
or
cmp
insl
out
fimuls
iret
shl
mov
cmp
dec
inc
or
ret
sahf
test
push
jo
repnz
rorb
push
xchg
push
sbb
inc
loopne
std
mov
adc
pop
dec
xor
fdiv
jo
pop
movsb
mov
je
add
ds
movsl
popfw
fsubs
pop
mov
imul
insl
push
test
sub
les
push
loop
arpl
sub
repz
clc
cmp
pop
insb
outsl
or
cmp
add
and
sbb
fstp
jp
adc
sar
jnp
jb
lea
cli
dec
jb
clc
movsb
adc
daa
je
push
loop
mov
mov
dec
rorb
and
pop
push
shrd
ret
outsl
jo
sub
sar
inc
sti
sub
xchg
add
pop
mov
pop
rcl
test
lock
inc
pop
stos
add
sarl
shl
popa
inc
cmp
sbb
ds
or
jg
push
rclb
jns
je
push
je
outsb
xlat
inc
adc
jbe
push
jl
fs
pop
cmp
adc
out
sbbl
mov
sti
jbe
cmpb
test
mov
pop
add
or
add
jb
mov
adc
ss
jle
adc
jl
mov
xchg
out
push
jb
cli
pop
scas
inc
add
dec
ret
cmp
mov
test
and
push
sbb
jnp
aas
lret
and
pushf
subb
sahf
fmuls
mov
mov
and
lea
es
xchg
out
cwtl
dec
push
mov
stos
pop
sub
fiaddl
loop
outsl
inc
popa
int
insb
bnd
cmpsb
pop
enter
xorb
lret
jne
adc
imul
roll
pop
and
into
outsl
fadds
add
int
add
rorb
xorl
jns
js
outsl
outsl
call
sub
loope
and
lds
movsl
das
adc
into
aam
ret
rol
and
dec
pop
adc
cmp
mov
or
into
notl
nop
adc
sub
fsubl
cmp
push
pop
xlat
add
xor
test
inc
test
jle
push
es
ljmp
pushf
scas
lds
xchg
mov
mov
add
jno
mov
jle
pop
sub
push
movsl
and
rcrb
mov
push
adc
sbb
push
mov
fidivrs
mov
fists
sub
push
mov
ljmp
sub
enter
push
jmp
adcb
push
lods
cmp
sub
les
add
adc
cmpsb
mov
aam
xchg
lods
sub
xchg
je
jbe
outsl
ss
mov
popa
sub
int3
inc
repz
jl
inc
out
jnp
insl
leave
mov
inc
jg
cmc
test
repnz
sub
cli
dec
pop
test
push
and
push
jbe
push
mov
adc
out
cmp
mov
push
ror
test
push
test
add
test
push
lret
leave
pop
pop
xor
pop
mov
aaa
mov
pop
or
mov
dec
mov
push
jge
call
in
sahf
sbb
adc
popa
orb
mov
rcrl
inc
sub
add
ficompl
sbb
mov
neg
loop
or
or
mov
mov
inc
jae
push
rcrb
lock
ds
mulb
sub
imul
out
push
dec
ja
das
fld1
lods
or
adc
shl
mov
xchg
psrad
adc
push
popf
mov
jmp
mov
add
cmp
mov
in
sub
cs
leave
shrb
jnp
mov
scas
cmpsb
adc
cwtl
push
jge
insb
mov
sub
imul
jo
dec
out
mov
inc
outsb
mov
sub
jle
mov
dec
jno
jo
incl
sbb
mov
xorb
inc
jge
movsb
pop
daa
cmc
and
or
nop
ss
cmp
push
cmp
fcoml
add
loopne
push
cmp
sub
movl
shr
sahf
cli
fucomp
sbb
inc
lret
inc
cmc
loop
popf
sub
mov
ds
lea
mov
mov
clc
setbe
ljmp
xchg
dec
notb
cmpsl
fwait
sub
inc
mov
rolb
addr16
cmpsb
xchg
addb
fwait
dec
rorl
rclb
pop
cmc
cmp
dec
push
sub
push
mov
lds
inc
mov
push
or
setb
fsubs
push
add
dec
push
insl
add
add
adc
stc
add
addr16
inc
cs
mov
repz
adc
xchg
add
pusha
cwtl
inc
pop
ss
add
scas
icebp
sub
mov
pop
dec
mov
xchg
or
iret
ret
mov
lock
add
cs
jb
dec
in
mov
or
mov
sub
mov
dec
adc
mov
and
dec
xlat
mov
mov
sub
sub
addb
nop
sbb
mov
mov
loop
loope
pop
jl
ror
sbb
dec
loopne
les
cmp
jg
aam
cmp
sbb
mov
cli
testl
pop
push
out
cli
jl
and
add
insb
js
scas
lock
ficoms
cmpsb
mov
ja
out
xor
stos
inc
pop
inc
stos
cmp
test
or
jmp
xor
cmpsb
mov
shlb
jb
add
mov
ret
les
push
adc
scas
rcrl
xor
mov
sub
inc
mov
push
fisttpll
mov
and
add
pop
add
inc
adc
or
xchg
push
clc
sbb
loope
loopne
mov
add
jge
sarb
mov
mov
sub
or
sub
insl
cmp
pushf
push
faddp
xchg
out
scas
jg
cli
aam
cmp
and
xchg
into
sbb
push
mov
mov
inc
rclb
push
adc
sbb
cmp
cmp
mov
js
clc
dec
pop
adc
xchg
ret
sub
fildl
xor
cmp
enter
jmp
imul
dec
in
leave
mov
mov
add
test
xlat
test
adc
loop
jo
push
loopne
xor
lods
rcr
jo
movsb
cmp
leave
test
aam
scas
and
mov
inc
pusha
jl
ljmp
adc
cs
mov
pop
pop
and
pusha
pop
xor
ljmp
rolb
bound
movsl
inc
cmpsb
enter
mov
dec
dec
gs
add
rcll
popa
adc
or
pop
or
ja
push
lea
sbb
push
xchg
pop
adc
sbb
or
stc
fsubs
pusha
cld
pop
mov
in
and
dec
test
movsb
inc
iret
xchg
add
cmp
in
or
adc
lods
lahf
fidivl
jecxz
xchg
jp
mov
mov
pop
push
add
push
and
arpl
aam
sbb
stos
arpl
stos
xor
mov
iret
clc
sub
rcrb
aas
or
mov
inc
inc
xor
push
or
mov
push
pushf
mov
adc
js
mov
lods
scas
jle,pn
cmp
aam
adc
sub
xchg
sbb
adc
icebp
out
xor
adc
add
gs
dec
lret
pop
lcall
xchg
xchg
dec
out
cmp
insl
das
scas
jo
cmpsb
aaa
mov
fcom
push
je
sbb
sub
pop
adc
sub
add
fs
lods
push
cli
push
lret
push
lods
stc
cmp
mov
cld
and
jno
ret
mov
mov
mov
jp
mov
or
dec
subl
mov
dec
sbb
sub
sub
and
pop
aaa
mov
repnz
jno,pt
rol
sub
lret
adc
adc
cmp
mov
mov
xlat
sahf
jp
test
cmp
adc
fbstp
pop
xor
in
cltd
daa
mov
hlt
adc
sbbb
testb
and
fildll
xchg
ja
test
sbb
lds
mov
cld
pop
and
push
mov
frstor
cmpsl
popf
xchg
lahf
inc
test
outsb
mov
and
jl
cmpsb
add
in
push
aaa
pop
adc
push
data16
pop
jp
cmp
jl
loopne
adc
cs
add
loopne
popa
xlat
pop
and
clc
jno
mov
pop
dec
sbb
iret
cmp
in
movsl
adc
shl
sbb
cli
rolb
insb
push
subb
cmp
add
and
lock
imull
loopne
xchg
test
xchg
or
or
fdivrs
adc
inc
xchg
add
repnz
lds
dec
test
loop
sub
dec
push
loop
sub
xchg
cmp
mov
adcb
mov
paddsb
adcl
inc
insl
movsl
gs
cmp
mov
aam
pop
mov
jecxz
outsb
mov
aas
mov
jb
xor
push
inc
lods
mov
aas
jecxz
xchg
adc
jne
movsb
mull
leave
or
and
int3
mov
mov
jl
dec
push
stos
test
ret
les
push
cmp
inc
mov
adcl
sub
movsl
mov
and
sub
push
and
lds
sbb
repz
outsl
mov
std
jmp
cld
mov
inc
sbb
sbb
outsb
hlt
pushf
fdivl
sbb
into
and
pusha
push
sarb
arpl
ljmp
icebp
sbb
mov
xlat
push
pop
cmc
sbb
rolb
jp
xchg
mov
mov
sbb
insl
jbe
cmp
loopne
xor
or
stos
ficoml
bound
add
dec
fcoms
pop
cmp
subl
icebp
xchg
inc
stos
sbb
stos
and
stos
xlat
or
outsl
ret
ljmp
xchg
xor
and
pop
movsl
adc
adc
in
jo
inc
rol
mov
lret
rcrl
sbbl
xchg
cli
add
adcb
aas
adc
ss
insb
fisubrl
test
inc
jb
loop
bound
lock
popf
jnp
mov
out
inc
push
jo
cmp
daa
push
jb
lock
push
mov
mov
mov
data16
decb
adc
cmp
push
scas
push
cld
stos
push
out
jo
dec
movsb
sub
sbb
dec
mov
ds
push
pop
xor
mov
imul
shrb
test
and
xchg
pushf
xor
push
mov
xchg
loope
popa
ss
push
inc
sbb
sub
dec
cmp
nop
fisttps
mov
mov
add
mov
cmp
inc
clc
subps
pushf
aam
sbb
xlat
xor
stos
jle
loop
push
jo
or
or
into
jb
lods
mov
shll
mov
lods
movsl
cmp
mov
xchg
adc
and
pop
jmp
rcrb
hlt
mov
xchg
rcr
outsl
lds
mov
and
mov
adc
sub
push
push
sarb
cmc
mov
pop
scas
push
pop
cmc
mov
or
jl
dec
sbb
pop
sbb
push
shl
cmp
mov
pop
mov
mov
cmp
stos
ds
inc
cmp
les
in
icebp
lock
addb
adc
xchg
pusha
pop
and
lock
ss
xchg
out
add
xchg
push
mov
jg
cld
add
lods
xchg
or
mov
mov
cmp
and
test
nop
out
lcall
loop
mov
lcall
orl
hlt
mov
mov
adcb
fmul
xchg
popa
hlt
cltd
fucompp
adc
push
lock
jno
sub
psubusw
roll
sbbb
jl
lret
mov
mov
das
push
inc
add
add
xchg
adc
fdivrs
clc
or
xchg
je
hlt
pop
das
and
push
sub
inc
notl
gs
xchg
jl
std
dec
sbb
mov
mov
sbb
cwtl
push
push
xchg
cli
loopne
mov
inc
pusha
sub
arpl
dec
adc
pushf
jno
jge
mov
movsl
and
sbb
mov
mov
and
mov
xor
mov
xchg
hlt
cmpsl
fcmovb
sbb
lahf
sub
mov
test
and
mov
cmc
rclb
outsb
inc
fnstsw
pop
fildll
mov
xchg
adc
jecxz
out
push
jecxz
insl
xor
inc
cli
mov
cmp
sub
sbb
xchg
addr16
sub
sbb
add
push
dec
jno
sahf
rolb
stos
sti
or
jno
gs
rorb
clc
in
in
inc
repnz
dec
xor
jl
sub
mov
inc
push
data16
add
mov
cmp
mov
sbb
enter
sahf
les
insb
ficomps
in
sub
mov
lahf
rcll
mov
hlt
insl
sub
cmp
mov
pusha
pop
jge
sbb
and
add
mull
divb
cmpsl
test
xchg
mov
add
mov
sti
lret
jmp
test
xchg
jge
arpl
test
das
sahf
int3
add
push
nop
dec
pop
xchg
outsl
fcomp
out
jmp
and
test
inc
jge
mov
lock
out
lcall
adc
in
add
jmp
cmp
arpl
sub
cmpsb
addl
repnz
stos
clc
stos
xchg
ds
or
imul
scas
mov
rolb
ret
sbb
adc
daa
shl
mov
cmpsb
mov
jg
iret
and
pop
in
nop
cs
and
sahf
cs
jo
lods
dec
push
scas
and
cmp
dec
js
jle
or
push
inc
or
fwait
jle
inc
pop
nop
add
jg
cmc
movsl
dec
mov
and
push
fcomip
jbe
mov
stos
test
fsubs
mov
ficoml
shlb
adc
sub
out
mov
sub
cmp
mov
mov
inc
loopne
push
in
inc
and
arpl
mov
test
movsb
xor
push
lock
arpl
idivl
sbb
les
inc
repnz
jne
inc
sysret
push
pop
push
sbb
add
sbb
iret
out
xor
fidivl
or
xor
mov
jge
cmpsl
sub
lret
mov
and
fcomps
orb
shll
call
push
pop
pop
stos
pop
test
addr16
cli
ret
push
sbb
movsb
inc
cld
loopne
xchg
pop
lock
add
and
push
pop
shl
add
sbb
push
pushf
roll
jp
adc
mov
add
mov
jp
jne
inc
test
cld
test
es
inc
in
mov
add
pop
rclb
in
xchg
push
push
jl
icebp
fsubs
in
pop
test
ds
dec
call
mov
mov
aaa
mov
daa
int3
and
jecxz
arpl
add
mov
adc
shll
fdivrl
hlt
pusha
dec
in
dec
xchg
push
inc
fldl
aas
insb
mov
jo
pop
mov
lds
cmp
repnz
inc
fsubl
pop
rorb
xor
xchg
add
fidivrs
push
hlt
pusha
jae
cmpb
pusha
or
jns
es
fs
sbb
inc
loopne
cmpsl
push
mov
cld
aam
mov
sbb
je
sbb
inc
cmp
inc
mov
sti
mov
ds
cmp
cltd
data16
xor
nop
mov
stos
sbb
test
sbb
scas
or
fiadds
push
in
xchg
or
jnp
adc
and
sahf
push
cltd
and
mov
jl
shlb
pop
pop
sbb
scas
jmp
lock
xchg
mov
adc
lret
xchg
mov
mov
daa
add
fsub
ret
jle
jle
iret
repnz
mov
and
cld
mov
jno
push
mov
cs
out
mov
cmp
inc
adc
sti
enter
inc
xchg
imul
inc
pop
xor
lret
adc
jb
in
subb
or
fimuls
clc
mov
mov
cmpsb
sar
cli
adc
rcrb
dec
mov
lock
cmp
loop
test
jecxz
call
xorb
sub
mov
loope
inc
flds
add
leave
leave
xchg
pusha
sub
and
mov
xchg
scas
xchg
cmp
push
and
mov
jle
rcrb
clc
pop
mov
ret
lea
arpl
mov
push
push
loop
push
gs
xor
push
imul
mov
ljmp
out
and
jnp
xor
push
push
inc
xlat
mov
push
cwtl
stos
inc
sbb
pusha
jns
jge
fcomi
fdecstp
add
out
jge
or
mov
pop
xchg
nop
lret
and
xchg
cmc
jmp
cmp
adc
movsl
sbb
cmp
bound
imul
lds
test
mov
inc
xchg
jno
pop
push
xchg
pop
clc
ss
scas
or
mov
stc
jno
jl
and
mov
xchg
push
call
mov
cmpsb
dec
push
inc
pusha
ret
push
fnstenv
and
test
mov
push
pop
push
push
clc
adc
subb
adc
int3
push
iret
adc
pop
lret
sti
mov
pop
pop
add
enter
mov
fcmovnbe
movsb
inc
push
inc
arpl
xchg
and
sbb
push
mov
pop
mov
int
cld
js
push
call
rclb
ljmp
or
cmp
movsl
xchg
push
subps
push
or
into
inc
pusha
in
std
clc
lds
hlt
pop
dec
scas
out
js
notl
leave
push
outsl
dec
cwtl
cli
jb
fisubl
and
nop
js
out
mov
pop
in
push
movsb
scas
mov
and
rorl
test
sbb
lret
stc
sub
fs
dec
push
and
aam
pop
mov
sub
insl
cvttps2pi
movsl
jmp
ljmp
xchg
push
mov
inc
or
ret
fmulp
and
js
enter
pop
cmp
icebp
pusha
xor
push
push
jmp
mov
scas
daa
test
push
mov
mov
xchg
mov
lods
js
inc
mov
dec
call
negb
push
int3
mov
mov
add
mov
sub
fs
pop
or
mov
in
je
stos
mov
xchg
sub
and
out
test
mov
movsb
icebp
xor
gs
mov
mov
sbb
scas
adc
sbb
in
pop
adc
inc
fildll
inc
jno
lret
call
fadds
xor
add
out
insb
mov
packuswb
addr16
ret
mov
inc
shrb
cmp
scas
dec
ljmp
fdivs
and
jbe
in
mov
rorb
push
mov
in
xchg
roll
mov
ret
xchg
dec
arpl
aaa
push
jl
mov
add
cmp
jno
lret
mov
pop
fdiv
cmp
push
in
sub
pop
out
or
das
lret
dec
push
sbb
imul
fisubrl
adc
bound
mov
cmp
sbb
pusha
push
mov
in
xchg
add
sbb
xchg
xor
cmp
xor
jno
aaa
or
das
mov
jecxz
push
mov
lcall
clc
dec
mov
fidivs
pop
fistps
jle
push
std
mov
sub
jbe
out
cmp
jb
in
cmp
lods
aad
iret
aam
mov
and
xor
mov
mov
insb
hlt
xchg
pop
jno
rcl
xor
in
mov
ds
inc
aaa
sbb
stos
mov
mov
jp
xchg
out
aam
orl
decb
mov
out
push
ret
mov
mov
scas
jl
enter
sar
or
xchg
mov
es
mov
mov
jnp
out
jns
push
fcoms
push
dec
push
std
arpl
or
fnsave
xchg
stos
push
xor
pop
ljmp
add
fldcw
pop
mov
or
int
fwait
jno
mov
popa
jae
aam
aam
xchg
push
stos
push
mov
insl
pop
push
shl
fwait
aad
mov
push
pop
lea
das
aas
fisubrl
cs
ljmp
jo
adc
movsb
ja
ret
rcll
js
dec
bound
cmp
cmc
ss
push
adc
dec
das
sub
lcall
push
xchg
gs
les
or
dec
mov
or
cmp
gs
push
mov
or
fdivs
inc
xchg
int
fisubl
push
jne
cli
fwait
mov
xchg
mov
cli
sub
jecxz
xchg
xchg
pushl
cmpsl
adc
xchg
mov
dec
push
cs
sahf
jbe
lret
inc
aam
cmp
mov
push
je
bound
push
xor
xor
adc
pushf
cmpsl
clc
xor
icebp
or
jecxz
cmpsb
pop
roll
aad
lahf
xor
hlt
gs
sysenter
and
cmp
jnp
inc
les
fnclex
aas
mov
jb
std
or
add
mov
mov
push
xor
push
add
loope
mov
add
add
add
orl
adc
loopne
ds
pop
lret
fimull
xchg
stos
sub
popf
scas
jp
jp
cmp
adc
inc
in
and
subb
sub
jp
sbb
cld
jmp
loop
sub
push
push
movsl
add
or
xchg
call
cmp
or
pop
xchg
icebp
jno
bound
jb
iret
rolb
and
cmpb
xlat
add
insb
mov
sarw
int3
out
enter
leave
sbb
int3
adc
sbb
in
xchg
mov
jg
ds
das
mov
sub
inc
mov
loop
jp
or
cmp
xchg
loopne
mov
xchg
cmp
in
aad
mov
push
insb
lret
test
fsubrs
push
popa
xor
fdiv
jb
js
test
lods
jle
xor
stc
in
jne
js
lcall
fwait
aam
push
js
nop
jle
inc
shl
push
andl
int3
or
and
add
mov
pop
loope
fimuls
jne
mov
mov
inc
mov
cld
inc
pusha
push
fiadds
adcb
into
mov
ds
aas
outsb
sbb
or
jo
pop
fdivl
mov
dec
aas
in
lock
packssdw
push
or
ss
mov
mov
cwtl
in
or
and
mov
sbbb
mov
jae
push
adcb
daa
fcom
loop
aas
jecxz
mov
loope
and
mov
or
mov
adc
lret
cli
movsb
lret
mov
pusha
lds
xor
loop
or
fisubrl
add
push
add
jne
xchg
cmp
out
mov
sub
xor
divb
mov
add
sub
adc
inc
adc
cmc
cmpsl
pushf
imul
test
outsl
adcb
add
mov
adc
inc
hlt
popa
push
add
ljmp
scas
lods
push
int
pop
loopne
scas
arpl
je
mov
jecxz
lea
dec
cmp
outsl
andb
aaa
mov
xchg
enter
pop
and
xor
xor
fs
pop
bound
data16
cmpl
push
and
dec
test
pop
push
pop
mov
lds
lea
push
and
jnp
fs
or
add
pop
inc
adc
pop
inc
stos
js
addr16
mov
inc
or
cmpsl
stos
jge
enter
xor
daa
lahf
jmp
dec
in
adc
pop
mov
cwtl
aam
mov
scas
js
cmp
add
mov
mov
aad
sti
call
push
out
sub
in
fwait
stos
call
mov
cli
cmpsl
ljmp
bound
mov
mov
icebp
bound
jbe
rol
mov
sbb
test
add
insl
pop
mov
mov
xor
lcall
data16
mov
jo
cli
fadds
xchg
mov
inc
popl
push
xor
mov
inc
sub
pop
mov
orb
cld
xlat
es
pusha
adc
into
xchg
idiv
pop
add
arpl
push
loopne
sbb
pusha
mov
insl
inc
rorl
jb
pop
addl
orl
jno
pop
cmp
repz
inc
pop
cmp
adc
or
and
nop
add
loop
lods
pusha
push
repz
dec
mov
jae
lds
dec
push
repz
outsb
mov
fnsave
andl
mulb
mov
popa
pop
mov
test
cli
dec
xor
insl
jb
or
xchg
or
rorl
add
xorb
out
mov
xor
popf
outsl
inc
mov
mov
push
mov
and
mov
cmp
adc
fidivrs
and
gs
cmp
into
mov
inc
das
push
int3
clc
pop
pop
sub
neg
push
lock
movsl
ds
sub
ljmp
push
push
pushl
scas
and
out
adc
sbb
sbb
add
out
xor
xor
out
mov
mov
fidivl
add
add
add
enter
pop
or
sbb
mov
mov
jg
cmp
std
es
test
out
push
shll
lea
pusha
jg
push
cmp
and
or
clc
inc
shlb
jle
xchg
jmp
ret
xchg
mov
testb
pushf
xchg
mov
in
test
std
sbb
call
add
or
andl
pusha
jnp
adc
jno
push
je
adc
repnz
in
adc
xorl
test
notl
ror
mov
ficoms
or
scas
neg
lods
imul
fs
fiaddl
cmp
xor
xchg
pop
ds
add
add
pop
ret
fs
rcrb
mov
lahf
sbb
rolb
shlb
xor
sub
test
adc
jo
repz
inc
jb
adc
jmp
rcrl
or
sub
mov
mov
ficompl
mov
test
rolb
adc
and
rorl
js
push
inc
scas
movsb
adc
inc
filds
sbb
dec
out
movsb
or
push
outsl
loope
add
push
mov
jg
mov
sub
popa
inc
push
inc
lods
push
dec
loope
lret
mov
insb
test
bound
je
out
js
ljmp
in
pop
and
mov
or
add
jg
jle
xchg
push
mov
lahf
pop
cld
or
and
add
mov
rolb
stos
pop
jp
rcrl
xchg
loopne
scas
mov
and
sub
mov
jg
pop
sbb
dec
xor
dec
sub
xorps
sbb
push
pushf
hlt
icebp
xchg
mov
insb
cmp
xor
mov
shlb
cmpsb
mov
scas
into
stos
les
push
pushf
lcall
nop
sahf
add
pop
adc
test
mov
lea
mov
xor
aam
shlb
ret
es
jle
rolb
xor
insb
xor
xor
jl
adc
lds
and
mov
cmc
jo
mov
andb
loop
xor
inc
cmp
clc
adc
adc
call
cmpl
ret
fldt
add
movsb
sti
inc
cwtl
and
fcomps
sti
dec
lret
jbe
or
mov
bound
js
jg
out
or
jb
mov
rclb
push
aas
andl
or
in
mov
sbb
or
pusha
mov
subl
xchg
xchg
xorb
push
fstpt
push
mov
rorb
xor
mov
lods
push
scas
aad
xchg
mov
ficoms
sbb
shll
dec
jge
jb
add
popf
mov
pop
add
push
lods
and
lds
loopne
mov
mov
pop
into
rcll
ljmp
movsb
mov
movsl
and
jne
cmp
hlt
stos
inc
and
cs
out
mov
fiaddl
mov
dec
mov
mov
add
loope
and
jo,pt
aad
pop
test
xor
insl
jp
jmp
push
ljmp
mov
pusha
inc
cmp
fldenv
loope
xchg
stos
pop
mov
cwtl
clc
ret
jmp
rclb
in
stc
je
push
lods
add
sbb
or
ja
hlt
bound
lret
jb
mov
insb
inc
daa
jmp
mov
inc
test
out
sub
loope
loopne
clc
hlt
sub
rolb
repz
jle
clc
mov
cmc
movsl
jno
sahf
addr16
jl
add
outsb
scas
cs
cmp
mov
add
adc
call
or
dec
xchg
mov
adc
inc
call
sub
mov
push
jbe
pop
mov
mov
mov
orb
cld
scas
xchg
xchg
push
jnp
pop
add
lds
jbe
nop
mov
mov
adc
cmc
xchg
mov
pop
nop
jb
lahf
lcall
movsb
sbb
int3
jp
and
loope
mov
mov
je
cld
push
mov
int3
push
add
ss
lds
jbe
test
out
fbld
fldenv
push
push
push
or
mov
call
push
insb
loop
cli
jp
clc
jecxz
jmp
mov
adc
dec
ret
inc
jbe
adc
inc
cmp
imul
and
mov
jecxz
and
sbb
mov
inc
cmpsb
ret
cmp
mov
cmp
test
mov
push
mov
push
jnp
jg
ja
cld
js
adc
andl
push
lods
dec
arpl
cmp
clc
jp
inc
xchg
mov
lods
sbb
or
and
mov
push
testb
push
pandn
cs
adc
pushf
lret
xor
or
pusha
push
lds
cld
pop
hlt
pop
add
cmp
jp
imul
lds
faddl
and
in
loopne
and
dec
sub
sbbb
loop
xchg
shr
and
sahf
rorb
loopne
mov
push
sbbl
stos
addr16
dec
push
dec
dec
push
pop
jge
lods
xchg
cmp
xchg
dec
ja
or
and
cmp
dec
lcall
out
mov
out
cld
add
rol
sub
cmp
pusha
cld
test
push
jge
int
or
nop
jmp
imul
inc
ret
and
out
fucomi
pop
jbe
jge
jmp
sub
stos
mov
lea
fmuls
inc
cli
mov
je
push
sub
mov
nop
mov
xchg
mov
mov
xor
add
pusha
stos
sub
mov
sbb
mov
in
ret
je
fwait
popa
or
shll
mov
pop
jb
xor
pop
hlt
fucomi
mov
jb
and
inc
mov
shlb
jge
lock
subl
rclb
bound
add
jle
sbb
mov
adc
jnp
mov
addb
sbb
fisubs
andl
pop
add
push
inc
ret
cmc
or
push
push
adc
ficoms
sbb
cli
adc
cmpsl
idivb
or
loop
pop
sbb
sub
dec
outsb
jno
loop
mov
repz
in
imul
and
mov
test
jo
lock
fbstp
cmp
out
cmp
dec
nop
lock
and
inc
sub
sbb
push
lods
je
xchg
push
mov
adc
lds
inc
cmp
dec
mov
mov
add
add
xor
mov
or
mov
adc
mov
les
mov
dec
out
pop
ret
and
pusha
xchg
das
or
push
testb
pop
int3
pop
hlt
push
imul
add
divl
mov
pushf
movsb
clc
test
add
and
movsl
icebp
in
repnz
hlt
fistps
xlat
in
stos
ret
mov
mov
mov
call
dec
xchg
movsb
fincstp
add
stos
faddl
mov
push
push
and
dec
add
mov
imul
call
js
jbe
clc
or
mov
stos
mov
sub
mov
aad
popf
test
outsl
leave
adc
jbe
clc
pop
inc
mov
add
ds
idivb
into
fwait
mov
mov
mov
out
ljmp
ljmp
mov
fwait
pop
cmpsl
gs
call
rcr
pop
inc
imul
inc
rolb
pop
lea
dec
int
shll
or
loop
or
cmp
jecxz
jnp
or
lcall
hlt
sub
jne
push
ds
xchg
pop
adcb
add
or
mov
jg
mov
adc
cmc
push
test
lcall
mov
push
orb
push
mov
orb
pusha
movsl
mov
jecxz
in
mov
jns
jbe
and
push
push
das
fwait
lcall
push
and
adc
mov
or
mov
stc
mov
push
hlt
sbb
xchg
lahf
mov
rcr
xchg
pop
dec
or
cmp
mov
add
jle
scas
pop
adc
and
xor
sub
std
push
clc
fidivrl
pusha
xchg
mov
mov
dec
or
mov
in
mov
repz
xor
pop
or
mov
dec
into
js
rorl
add
lods
push
push
loop
and
jb
jo
jg
test
inc
idivl
lods
xor
push
inc
loop
rclb
xchg
daa
push
fsubs
xor
push
dec
add
xchg
test
leave
mov
or
stos
lcall
jbe
test
or
cltd
imull
xor
and
mov
jbe
imul
jo
xor
loopne
cmp
test
mov
ljmp
push
add
bound
inc
or
fbld
adc
mov
inc
mov
cld
pop
or
push
pop
rorb
inc
lcall
in
push
xchg
xchg
xchg
rclb
movsb
mov
xchg
jle
cmp
scas
cmc
inc
adc
and
push
and
jns
ret
ss
pop
push
enter
fs
cmpsl
mov
lret
aam
or
hlt
jecxz
repnz
dec
adc
sbb
shlb
jmp
paddsw
les
cmp
sbb
add
push
dec
or
test
push
xor
or
or
sbb
xchg
or
loope
cwtl
sbb
pop
dec
dec
lods
adc
xchg
in
ss
cmp
mov
testb
pop
jecxz
js
xchg
leave
leave
inc
loop
cmc
jp
xchg
test
inc
xchg
and
clc
cmp
shlb
adc
pop
jne
xchg
xor
mov
mov
inc
shrl
mov
jno
push
and
and
test
dec
add
cmp
jae
sbb
sub
add
dec
xor
in
fwait
mov
inc
insb
push
jo
lock
pop
and
xchg
add
adc
bnd
sti
or
lea
mov
sbb
mov
lods
inc
add
mov
jp
rclb
and
test
adc
add
jo
movsl
jne
je
subl
ds
mov
out
in
into
into
push
adc
dec
add
in
mov
adc
inc
inc
pushf
cmp
sbb
xchg
je
fldcw
gs
sub
xor
ljmp
aaa
push
push
mov
cltd
pushf
adc
pop
bound
shlb
jecxz
test
popa
add
cli
aad
lahf
xchg
adc
dec
mov
jg
or
push
std
dec
mov
cli
pusha
loopne
mov
cld
add
fsts
ret
push
popa
mov
fwait
lret
push
mov
std
ljmp
mov
xor
cmc
insb
loopne
pop
pusha
inc
push
aas
jmp
mov
push
sarl
movsb
dec
mov
in
cmc
pop
cmc
jg
push
addr16
sub
roll
or
add
sub
test
dec
test
insl
cmpsl
sub
add
jns
fadd
lea
or
lahf
cli
pop
adc
imul
pusha
add
stos
mov
xorb
mov
out
push
jmp
mov
adc
sub
leave
shll
js
sar
jo
fwait
add
int3
enter
and
rcll
mov
lahf
push
sbb
loop
cmp
sub
hlt
push
jle
mov
xchg
and
pop
pop
cmp
adc
xor
addl
ret
insb
sbbl
mov
adc
shll
es
mov
es
xchg
cmp
mov
dec
jae
fucom
in
hlt
insb
ljmp
arpl
ljmp
jecxz
fistpl
inc
cmpb
adcl
push
push
popa
icebp
adc
fisubs
aam
mov
push
ret
adc
shlb
cmp
inc
xchg
xor
jbe
xor
or
adc
jne
pop
xor
mov
xor
sahf
cld
lcall
aaa
mov
pop
mov
sbb
inc
cmp
sbb
push
aam
or
pop
les
add
clc
jae
cmpsl
cs
pop
inc
repnz
mov
inc
fisubrs
dec
insl
push
sub
inc
in
jmp
jo
dec
test
or
cmpsb
inc
ljmp
push
mov
adc
pop
ss
lock
jae
stos
sub
mov
mov
insb
add
add
fninit
jne
xchg
pushw
lcall
pop
mov
in
notl
lods
cmp
mov
es
cs
adc
xor
add
ds
bound
or
in
les
mov
sarb
inc
nop
ljmp
pop
cmp
sbb
flds
clc
bnd
adc
mov
and
aas
mov
hlt
nop
rcrl
les
sbb
je
out
ds
or
dec
loopne
pop
sahf
shrb
add
cmc
push
mov
lcall
lods
xsaves
xchg
and
jbe
stc
jb
fnstcw
xchg
fimuls
push
or
in
jo
push
lcall
pop
pop
push
insb
jno
lcall
push
jo
mov
fidivrl
xchg
jbe
scas
stc
xchg
popf
inc
loopne
xor
movsl
and
imul
ja
xor
je
cs
scas
xchg
add
out
pop
movsl
sub
mov
push
addr16
fists
lret
xchg
mov
scas
mov
sbbb
pop
ret
mov
popf
sbb
mov
popa
pop
js
cmpl
jo
inc
insl
shrl
mov
dec
int
xchg
popa
repnz
loopne
rcr
cli
movsb
dec
add
call
push
fs
mov
insl
nop
notb
inc
dec
mov
and
xchg
jbe
cmp
xchg
cltd
mov
push
hlt
inc
jo
mov
push
rol
out
mov
jecxz
pop
adc
xor
leave
daa
callw
and
or
push
subl
xchg
fldcw
pop
dec
orb
cld
sbb
sbb
add
ret
ret
mov
sbb
movsl
mov
adc
sbb
and
call
push
dec
mov
cmp
cmpsb
mov
xor
insl
inc
daa
mov
mov
decl
sub
cld
xchg
enter
sbb
cmp
push
sub
pop
ss
push
addb
xchg
mov
inc
mov
mov
enter
loopne
and
repnz
dec
sahf
mov
and
ret
aas
mov
out
es
popa
lds
lods
add
mov
mov
jl
fwait
nop
les
popa
arpl
call
cmp
int
cltd
inc
mov
mov
inc
mov
test
subb
andl
outsb
add
cli
mov
loop
movsl
addb
lods
addr16
and
rcr
jl,pn
push
lock
mov
lods
mov
push
xchg
or
pop
dec
pusha
arpl
mov
cmp
mov
cs
cmpsb
sub
add
shr
imulb
fdivrl
xchg
mov
mov
adc
mov
and
lods
pop
fcomi
roll
pop
icebp
pop
repnz
repz
sahf
cltd
fmuls
int3
sbb
pop
adc
js
mov
lahf
pop
push
fsubrs
push
xchg
dec
fcoml
cmp
or
loop
imul
ss
mul
stos
mov
out
jmp
outsl
inc
pop
mov
ret
imul
add
outsb
dec
mov
daa
or
adc
into
outsl
sub
sub
push
push
rcll
adc
xor
fldenv
iret
push
mov
fs
push
cmp
xor
scas
cli
inc
push
nop
dec
mov
mov
enter
jle
push
fildll
out
push
xchg
into
add
addl
scas
xor
ret
cmp
rcrl
fstp
mov
dec
fwait
inc
mov
mov
popa
adc
inc
inc
push
fbstp
adc
movl
add
dec
loopne
jge
jbe
test
jb
push
rcl
dec
sub
mov
pusha
mov
jo
popf
nop
adc
data16
xchg
sbb
jp
stos
stos
push
mov
adc
movsb
inc
inc
int
insb
xor
loopew
cld
push
cmp
or
in
sub
mov
add
pop
int
mov
sub
std
test
inc
std
adc
push
inc
add
ljmp
jp
jb
push
mov
daa
in
cmc
cs
mov
int
jnp
cmp
adc
and
subb
lahf
andb
fidivs
les
dec
jle
into
outsb
adc
jl
fwait
xchg
lods
cld
ret
bound
movsb
lods
cltd
and
test
pop
aam
jp
or
jecxz
mov
es
add
lret
daa
xor
test
inc
movsl
jmp
jg
push
icebp
or
adc
jmp
add
test
add
adc
test
les
sarb
call
into
lock
xchg
repnz
in
test
nop
sub
xchg
stos
dec
pop
xchg
cmpsl
and
dec
idivb
ret
mov
inc
imul
lods
cmpsl
stos
push
adc
pusha
mov
and
xlat
fimull
pop
sahf
mov
sahf
js
adc
jg
dec
sbb
or
mov
call
mov
push
push
mov
test
sub
lock
add
pusha
push
loopne
getsec
iret
jp
mov
xchg
movsl
test
mov
sub
dec
mov
pushw
adc
xadd
popf
or
fidivrl
cmp
xchg
mov
sbb
je
fnstsw
int3
shl
iret
mov
in
xor
push
in
sub
jmp
stos
stc
dec
loop
sub
xchg
sbb
lahf
and
xor
jp
scas
mov
lret
adc
icebp
pop
add
jmp
aam
inc
sbb
idivb
fnstenv
fisubs
add
or
enter
push
jbe
in
fcmovbe
mov
mov
jge
pop
mov
inc
fimull
or
dec
jge
add
xchg
add
mov
cmp
subb
ret
test
daa
es
xchg
lock
test
xchg
xor
push
and
push
imulb
mov
loopne
push
data16
bswap
pop
pop
cmpsl
inc
jp
ret
push
xchg
jmp
dec
and
dec
push
push
xchg
rcrb
pcmpeqb
movsl
add
cmpsl
loopne
pop
dec
enter
mov
sbb
dec
movsb
sub
dec
sarb
icebp
in
pop
inc
cltd
rclb
outsl
sbb
jge
aad
dec
push
loop
xchg
sbb
rcll
test
mov
ss
dec
outsb
test
cmpsl
jbe
pop
into
hlt
int3
loopne
push
ficoms
mov
testb
lods
pop
test
pop
jns
loope
push
add
mov
cmp
xchg
inc
daa
ljmp
mov
mov
dec
hlt
outsb
push
xchg
inc
loopne
data16
mov
pop
dec
out
incb
test
adc
icebp
aas
pop
mov
xchg
xchg
hlt
lahf
mov
mov
push
fnsave
jmp
rolb
sub
cmpsb
je
lods
mov
js
mov
push
es
out
inc
add
nop
hlt
jmp
dec
sahf
fs
mov
xchg
mov
ret
call
shlb
add
ret
sub
insb
js
mov
daa
neg
mov
and
enter
pop
loopne
scas
push
bound
cmp
fsub
pop
dec
mov
insl
mov
xor
push
fwait
adc
adc
pop
adc
dec
fs
add
fwait
rorb
adc
cmp
cld
mov
arpl
leave
adc
cmp
cmp
loopne
andl
and
jnp
flds
into
lods
mov
xchg
jmp
aam
cmpsl
adcl
push
mov
xchg
mov
cmp
pop
push
inc
arpl
xchg
add
or
mov
mov
hlt
es
or
xchg
xor
xlat
add
aas
js
out
mov
and
sbb
cmp
mov
test
stc
sub
mov
js
adc
shll
xor
dec
cld
xor
jecxz
inc
xchg
stos
push
ljmp
das
mov
mov
fwait
mov
adc
cli
dec
stos
jae
leave
push
jecxz
loop
mov
dec
inc
mov
sbb
out
insl
loopne
pop
cs
ror
jns
aas
push
mov
scas
mov
enter
imul
adc
and
cmp
push
clc
mov
dec
xor
adc
xchg
fistpll
cmp
ljmp
jne
mov
and
jmp
push
inc
into
jge
adc
loope
ss
ret
sub
dec
inc
jb
insl
sbb
xchg
int3
sub
fdivrs
inc
xor
mov
into
fstl
dec
lock
dec
push
cmpsl
mov
in
fldenv
fwait
pop
jo
in
rcrb
push
xchg
pop
jnp
mov
xor
test
xchg
adc
mov
rcrl
or
sbb
aam
pop
mov
sub
push
adc
and
xchg
or
iret
push
movsb
ficompl
push
dec
pop
popf
mov
popf
push
imul
mov
add
and
jb
arpl
push
cmpl
xchg
mov
sbb
mov
mov
dec
mov
roll
inc
push
inc
jle
dec
mov
push
lret
shrb
xchg
and
dec
mov
mov
mov
rorb
pop
aas
pop
mov
push
js
fdivrs
cs
ja
jl
xor
lcall
xchg
je
nop
inc
adc
sar
jmp
mov
psrld
out
ss
pop
sbb
mov
jnp
into
test
loopne
roll
lret
js
sub
sbb
fwait
dec
mov
lock
outsl
dec
add
push
inc
fs
dec
xchg
sarl
or
add
adc
lods
fdivrs
xchg
sub
and
push
inc
test
fadd
xchg
stos
js
xchg
xor
jae
mov
pusha
shl
xchg
jbe
cmp
int
inc
jp
jne
or
repz
stc
mov
pop
inc
sub
dec
fs
pop
stos
int3
pop
mov
sub
xor
insb
push
xor
clc
mov
jle
dec
push
test
push
jo
sbb
pop
insb
mov
pop
ja
bound
hlt
movsl
sbbl
mov
jo
xchg
jmp
pop
fsubl
mov
or
adc
adc
pop
and
cmc
in
popf
sti
jo
adc
fisubl
test
adc
mov
imul
repz
inc
adc
mov
xor
cmp
or
mov
and
dec
and
cmp
insb
sbb
sbb
jl
add
and
add
cmp
inc
fsubr
inc
push
xlat
cld
repnz
jg
clc
mov
pop
add
cs
adc
and
adc
dec
add
sahf
adc
sub
and
push
mov
sub
push
into
imul
int3
call
ffree
mov
adc
loopne
lcall
add
sbb
mov
push
mov
in
push
push
pmulhuw
sbb
rolb
jl
jl
cmovno
inc
shll
jle
call
nop
jbe
rclb
sbb
pusha
and
mull
or
mov
and
sahf
nop
mov
outsl
aad
push
jnp
mov
mov
jb
pop
push
inc
lret
mov
xchg
dec
xchg
dec
mov
bound
test
adc
out
or
adc
jbe
faddl
and
adcl
popl
mov
cmp
imul
loope
adc
sti
dec
and
adc
mov
dec
mov
cmc
xor
push
das
aas
mov
inc
inc
sti
xchg
scas
push
jo
sub
jg
or
pusha
or
and
push
sbb
adc
or
mov
scas
push
ret
jnp
lock
or
adc
cwtl
fidivl
mov
cmpsl
mov
imull
je
mov
add
ds
push
pop
inc
inc
dec
inc
out
rolb
cld
inc
inc
sbb
shlb
jp
mov
dec
lcall
in
mov
and
inc
push
mov
mov
test
adc
ljmp
pusha
or
rol
lds
cmc
ljmp
inc
dec
fstps
add
xchg
push
cmp
ficompl
out
imul
clc
notl
sar
mov
xor
push
lcall
mov
adc
test
inc
lret
mov
mov
mov
xchg
dec
test
xor
lods
dec
cwtl
mov
lcall
jnp
xchg
lods
push
mov
fiadds
push
sti
adc
insb
js
pop
and
jg
pop
call
cmpsb
mov
or
xchg
mov
cmpsb
aad
dec
xchg
inc
dec
push
pop
mov
pop
jno
nop
mov
dec
scas
sahf
and
sbb
fidivl
es
nop
push
mov
lods
sbb
and
mov
adc
dec
jbe
hlt
xchg
mov
cltd
add
movsb
in
fstpt
mov
mov
mov
push
cmc
mov
lods
fdivrs
std
aam
cmovb
fwait
push
push
xchg
xor
and
xor
xor
cmpl
mull
movsl
adc
mov
les
add
cmp
cmp
fcom
repnz
xlat
shl
mov
incl
jp
pushf
jecxz
enter
clc
fstps
dec
js
imul
jo
mov
xor
sbbb
cmp
jnp
fdivr
push
inc
jno
mov
dec
ljmp
inc
lret
cld
jle
outsl
inc
outsl
inc
in
fadd
push
fs
nop
bound
sub
rclb
ret
insb
je
mov
outsb
sbbb
adc
cmc
sbb
jbe
mov
sub
and
jns
loope
addr16
jle
pop
push
inc
jno
and
or
scas
ss
sbb
inc
cmpsb
lods
ljmp
adc
jmp
pop
into
inc
call
jb
cld
pop
pushf
lea
lods
mov
mov
mov
xor
push
xchg
jmp
out
es
dec
sub
pop
jp
xlat
jl
sbb
push
orl
or
lock
mov
dec
adc
push
cmovb
pop
add
dec
sbb
push
fimull
fdivrs
and
adc
cmp
jno
mov
orl
out
sub
xchg
xlat
mov
cli
test
mov
push
imulb
push
xor
mov
or
jp
cmp
in
jae
cmp
pop
adc
mov
fiaddl
jne
cmc
or
mov
test
mov
inc
insl
mov
cmpl
inc
jp
cmp
add
push
or
add
hlt
aam
add
xchg
inc
push
dec
test
test
jne
xorl
sbb
push
test
and
inc
mov
test
mov
inc
daa
aas
or
aaa
cmpb
inc
dec
cltd
arpl
add
mov
jecxz
jnp
mov
jne
mov
outsl
adc
xchg
call
push
push
orl
lret
imul
xor
sbb
movsl
rclb
imul
in
subb
enter
mov
cmc
sahf
xorb
jnp
pop
inc
ds
scas
xor
int3
xor
mov
ret
mov
std
push
pop
push
push
sbb
sub
mov
loope
sub
adc
popf
cmp
imul
inc
std
push
or
ljmp
into
std
push
or
lods
push
add
push
adc
into
jg
mov
cmovb
adc
xor
xlat
add
call
clc
out
cmp
push
orl
rorl
fwait
lcall
push
cli
enter
or
inc
lea
and
enter
idivb
pusha
mov
movsl
xorl
std
les
adc
stos
xchg
fabs
and
inc
js
sub
push
push
mov
in
in
cmp
pop
xchg
movsb
dec
cltd
inc
pop
adc
out
jle
test
fists
adc
add
jg
xchg
popf
jo
loopne
lods
rolb
xor
js
inc
push
sub
pop
mov
orl
jle
xchg
cli
cli
push
arpl
into
adc
stc
cmp
fucomi
inc
or
xor
sbb
push
xchg
push
jae
scas
sarb
pop
cltd
xorb
adc
mov
or
test
jo
or
clc
and
ret
inc
dec
sub
test
pop
sub
inc
cli
pushf
mov
cmpsl
inc
push
xor
dec
mov
xor
xchg
clc
call
mov
push
jp
fiaddl
mov
ds
ds
dec
rol
or
sti
das
xchg
or
inc
and
sbb
add
add
repnz
cmp
mov
pusha
loope
in
fbld
jbe
cmp
sbb
ds
pop
cs
jecxz
mov
and
js
inc
icebp
ljmp
daa
cmp
ss
sbb
pop
pop
lods
xchg
lret
inc
stos
fs
push
sbb
popa
mov
lcall
mov
addl
arpl
mov
mov
rcpps
inc
jp
mov
popa
aam
xchg
mov
cmp
inc
cs
movsl
dec
lods
bound
ror
stos
shll
inc
mov
jno
mov
dec
pusha
sbb
add
push
adc
dec
pop
sarb
addb
push
push
pop
ljmp
inc
enter
icebp
jo
rorb
jo
in
lods
ljmp
repnz
pop
cmp
lock
push
adc
pop
inc
jnp
ss
fldenv
nop
mov
ret
mov
xor
xlat
nop
insl
jo
xchg
addb
and
loopne
inc
dec
insb
mov
jo
pop
sub
mov
sub
mov
cmp
xor
enter
cmp
lahf
cmp
inc
push
test
das
push
add
inc
cmpsl
aaa
and
add
push
cltd
ljmp
hlt
lea
rclb
mov
push
push
xlat
out
rcl
add
push
insb
add
aam
push
cmc
cwtl
andl
cld
jle
pop
push
mov
hlt
fs
dec
call
mov
ret
pop
adc
adc
jbe
xchg
dec
xor
frstor
push
inc
push
test
insb
cmpsb
shl
or
test
dec
dec
mov
lcall
pop
fists
outsl
pop
addr16
adc
stos
xchg
jp
iret
popf
outsb
jb
lock
or
call
das
nop
bound
mov
pop
push
cld
jg
cmp
inc
cs
aas
dec
js
popa
lods
fcoml
mov
rolb
sbb
fdivs
push
mov
outsl
mov
ds
inc
outsl
inc
aam
add
sub
daa
clc
lahf
push
pusha
addr16
jge
cmp
test
mov
popf
inc
sahf
dec
adc
xor
inc
jb
push
push
and
adc
dec
and
and
lock
sub
or
aam
pop
push
jp
or
mov
fiadds
jle
in
jmp
mov
mov
lret
rcll
movntq
loope
sbbb
pop
loop
dec
xchg
out
xchg
lret
fwait
test
jns
inc
xchg
std
lock
test
ret
ret
jge
push
mov
add
push
and
add
shll
xor
jg
push
ret
out
pop
fs
repnz
push
inc
loopne,pt
sbb
ja
mov
mov
sub
cmp
sub
sbb
test
xchg
sti
mov
sbb
movsl
les
inc
inc
jnp
mov
jge
adc
pop
lods
pop
loopne
rol
insb
sahf
cmc
sbb
jo
movsb
or
mov
scas
push
dec
fdiv
test
mov
sub
mov
lea
xor
dec
in
sbb
sbb
out
adc
jne
pop
push
sahf
rcrb
sbb
cmp
add
dec
pop
ljmp
xchg
jbe
rcrb
and
and
je
add
lock
test
lock
jmp
add
jae
jp
jge
lahf
cmc
mov
mov
and
hlt
inc
mov
fisttps
adc
jmp
lock
mov
jp
jno
pop
ds
fwait
outsb
inc
adc
sub
add
jnp
or
xor
icebp
xor
scas
and
jno
les
and
je
inc
pushf
nop
icebp
ret
pop
cld
inc
xchg
add
cmpsb
ja
lods
shll
cmp
outsb
loopne
mov
sbb
arpl
cmc
adc
pop
sub
add
adc
insb
pop
dec
xlat
mov
add
jle
lcall
cmp
bound
mov
dec
rcrl
div
push
mov
add
xchg
hlt
dec
data16
cmp
mov
adc
jge
daa
sbb
pop
xchg
cwtl
add
sub
push
push
shlb
call
mov
inc
sbb
push
xchg
movsb
cs
lds
bound
mov
jg
jl
mov
mov
mov
fwait
mov
dec
negb
mov
insl
mov
cmovg
mov
fisubrs
sti
outsl
sti
pop
shrd
in
out
mov
shl
cltd
xor
jae
lods
clc
jmp
daa
push
cmp
out
inc
dec
mov
sub
inc
dec
cltd
lds
inc
jmp
xchg
xor
mul
fwait
sbb
jno
enter
mov
test
lcall
test
gs
arpl
aad
adc
gs
shr
test
pop
dec
cmp
jg
ret
hlt
dec
lods
ret
xchg
incb
add
mulb
add
mov
sbb
mov
dec
and
mov
addb
fs
xchg
xlat
adcl
data16
mov
xor
cmp
mov
cmpl
or
cmp
clc
sub
hlt
das
push
aas
xchg
ret
in
dec
or
imul
xor
insb
adc
or
stos
dec
nop
lret
xchg
cltd
or
push
cmp
mov
fadd
sahf
dec
xor
ljmp
xchg
push
lods
mov
sar
ret
xchg
enter
loopne
jmp
push
hlt
scas
mov
push
jo
pop
sub
mov
es
adc
roll
jo
adc
pop
jl
sbb
jbe
mov
xchg
movsb
cmpl
dec
insl
cwtl
sub
shr
xor
xor
dec
inc
test
orl
sarb
inc
pop
scas
add
vmread
repnz
add
xchg
out
inc
movsl
mov
int
add
or
into
fdivs
mov
and
cwtl
in
test
mov
aaa
repz
cld
mov
out
lcall
adc
hlt
sbb
inc
movsl
fwait
shrb
sar
cmp
les
or
ret
int
add
pop
sub
pcmpgtd
adc
mov
call
mov
cmp
sti
sub
pop
or
lods
add
adc
push
sbb
mov
pop
sbb
mov
inc
cmp
sar
incl
xor
mov
sub
sub
ret
and
rcrl
movsb
and
mov
mov
shrb
fisttps
fnstenv
sbb
cld
and
in
pop
fnstsw
sub
or
lock
in
push
adc
xchg
in
loopne
call
push
pop
aam
sbbb
insb
mov
xor
fs
out
or
dec
mov
mov
lret
inc
inc
sbb
je
mov
insb
rcl
mov
push
stos
pop
cs
adc
or
std
pop
ss
mov
push
bnd
leave
adc
and
mov
sti
pop
imulb
and
pop
or
sub
ja
fs
lock
cmp
cmp
xor
xorb
ret
xchg
xor
jl
incb
pop
rcll
dec
dec
fisttps
jae
jge
ja
jl
idivb
lods
xor
sub
clc
cmp
addr16
mov
jnp
or
sub
dec
aad
mov
out
push
clc
outsl
add
mov
pop
and
hlt
jle
mov
jne
icebp
mov
fs
lea
stos
cld
sbb
xchg
pop
lahf
fs
test
cmc
rol
inc
loopne
mov
pop
lods
push
mov
mov
bound
dec
add
hlt
pop
sub
sub
adc
insl
shl
and
pop
lcall
loop
inc
movsl
imul
push
mov
mov
push
adc
push
sbb
mov
inc
mov
add
cmp
mov
fcomps
sub
and
xchg
inc
cltd
dec
or
rcrb
mov
pop
jp
rorl
xchg
or
push
icebp
dec
push
int
add
sub
psrld
movsl
cld
xorl
or
xor
ja
xor
inc
out
xchg
popf
faddl
mov
lcall
pop
dec
adc
sub
ss
adc
inc
cwtl
inc
es
xchg
or
pop
adc
jae
popf
lock
call
jno
lds
jl
rolb
fiaddl
sti
jecxz
add
sbb
enter
adc
mov
xor
negl
mov
push
xor
andb
cs
or
and
sub
adc
dec
dec
jmp
out
out
inc
cmp
pop
jo
dec
mulb
insb
pusha
idivl
push
and
and
hlt
push
or
je
mov
inc
fwait
mov
pop
cmp
xchg
adc
mov
in
cmp
movntq
out
test
dec
mov
sbb
cmp
and
xor
add
js
pop
mov
and
mov
inc
pop
ds
shl
jne
aad
mov
out
or
inc
jmp
nop
fidivrs
or
cld
push
cmp
or
js
sbb
aam
out
or
push
imul
loop
inc
in
xchg
adc
jecxz
sbb
out
push
or
pop
test
mul
adc
pop
mov
loopne
add
ds
cwtl
hlt
add
mov
and
fmul
mov
sub
xchg
aad
jns
push
inc
jge
adc
adc
ljmp
jge
add
int3
sub
push
push
mov
pop
loopne
inc
push
mov
adc
outsl
hlt
mov
aam
sbb
hlt
in
pop
adc
mov
sti
xchg
out
jecxz
mov
sub
inc
loop
dec
jno
ret
or
mov
movsl
fisubrl
hlt
iret
add
into
and
enter
push
das
repnz
mov
push
test
imul
mov
cwtl
ds
lock
dec
add
lcall
xchg
add
push
and
in
cld
pop
cmpl
daa
add
orl
test
dec
test
xlat
xor
imul
cli
daa
push
inc
mov
cmp
mov
cmp
movsl
hlt
fwait
mov
repz
xor
mov
adcl
orb
orl
notl
mov
sub
cmp
scas
fwait
or
mov
mov
jmp
xor
mov
cwtl
adc
push
sub
inc
fiaddl
pop
or
shll
nop
mov
loop
dec
or
sub
out
pop
ds
jl
in
scas
decl
sbb
push
sbb
pop
push
mov
mulb
pop
push
sti
push
pusha
clc
xchg
adc
cmp
hlt
push
sar
sarb
mov
mov
lds
and
xchg
mov
sahf
fwait
movsl
dec
jl
push
test
call
sbb
mov
sub
rorb
divl
sbb
orb
in
lods
mov
rcl
sub
dec
adc
push
add
jl
out
loopne
dec
xor
and
ss
pop
sbb
inc
adc
jno
scas
push
es
pop
test
cmp
or
cmp
mov
test
cmp
adc
test
xor
ss
clc
stos
call
out
inc
sbb
pop
out
pop
sub
push
lea
xor
jg
mov
rcl
inc
test
movsb
mov
movsb
int3
jle
mov
mov
call
inc
popf
mov
dec
loopne
lds
xchg
stos
arpl
and
lds
dec
je
popf
testl
fwait
sbb
add
insl
push
rcll
les
add
aas
les
mov
inc
dec
enter
out
cld
addr16
inc
adc
xchg
mov
ljmp
jecxz
mov
push
mov
and
pop
adc
sbb
push
imul
fcmovnu
orl
jbe
mov
sub
cmp
imulb
add
fists
in
and
mov
dec
shll
and
rolb
mov
xchg
ret
mov
jecxz
stos
dec
add
jecxz
cltd
das
mov
pop
data16
xchg
out
stc
shll
mov
sub
pop
pop
mov
shlb
enter
sub
daa
iret
daa
xor
xchg
or
jp
rcll
ret
int
add
stc
imul
cwtl
push
inc
add
mov
xchg
inc
daa
jns
cmp
or
mov
sub
std
sbb
jl
jp
pop
psraw
testb
dec
ljmp
pop
lea
stos
test
call
enter
xorb
dec
mov
in
xor
mov
push
adc
movb
or
and
push
je
daa
mov
cs
xor
dec
mov
mov
inc
mov
or
daa
outsl
dec
popf
pop
lods
hlt
shlb
cltd
xor
pop
stos
daa
sbb
mov
pop
sbb
push
xchg
and
cmp
in
pushf
out
out
test
adc
pop
lock
cmpsl
pop
subb
int3
lock
dec
inc
mov
mov
sub
or
in
ror
idivb
dec
cmpsb
inc
adc
out
or
push
push
shll
dec
adc
shlb
fisubl
push
sbb
psubusb
ss
xchg
out
push
xchg
loopne
mov
fidivrl
out
inc
lods
daa
ficomps
call
test
test
fcomip
ds
push
enter
xor
ds
scas
movsb
mov
arpl
cmp
std
pop
das
mov
lods
push
xchg
and
push
pop
or
push
xchg
imul
in
push
mov
decb
sub
dec
push
aas
cmpsb
aam
mov
mov
cli
insb
fstpl
push
cmp
insl
push
insb
bound
pop
decl
adc
scas
xor
orb
sar
test
cmp
pushf
cmp
ret
mov
mov
adc
test
adc
testl
stc
mov
fwait
xor
loope
js
add
rcrl
jecxz
mov
jae
shll
sbb
xchg
sbb
ret
dec
mul
add
adc
inc
jg
shrl
enter
sub
aad
adc
cmp
roll
sbb
xor
cmp
sahf
xchg
gs
int3
mov
movsb
push
ja
fs
adc
add
xor
sbb
call
xchg
xor
or
enter
sub
and
cmpsb
dec
aam
push
imul
add
sbb
mov
aaa
scas
xchg
mov
or
xchg
into
ds
sbb
scas
dec
jge
jbe
and
mov
mov
xor
ss
push
cmp
pop
jp
dec
fbld
mov
popa
cmc
shr
addr16
ljmp
sub
push
call
pop
adc
nop
mov
and
jmp
dec
mov
inc
repz
mov
sub
jbe
cld
inc
xchg
pop
imul
in
mov
add
in
sub
push
popa
xchg
test
xchg
out
dec
or
cmp
mov
push
pop
js,pn
inc
adc
pop
jae
es
pop
lcall
dec
hlt
and
sbb
sbb
fs
mov
mov
not
je
rep
push
loopne
sbb
fcomps
or
int3
or
cmp
cli
lea
dec
jl
mov
or
test
lahf
clc
jp
xor
adc
mull
xchg
pop
xor
inc
add
aam
loop
xlat
mov
ret
add
outsl
mov
mov
xor
into
ds
add
or
insb
mov
adc
push
pop
cmp
and
in
xchg
add
jmp
rolb
test
jle
clc
popf
dec
inc
push
clc
hlt
stos
xchg
push
mov
pop
and
arpl
punpckhqdq
push
icebp
sub
ss
ficomps
dec
rcrb
inc
stos
xchg
into
xorb
stos
aas
dec
mov
pop
dec
pop
mov
sbb
xchg
rcll
mov
incl
xchg
jecxz
outsb
mov
pop
adc
inc
mov
aaa
jno
adc
pop
sbb
call
test
scas
dec
fiaddl
inc
dec
in
sub
cli
mov
cmp
mov
cltd
cmp
outsl
pop
shrb
jno
jbe
pop
je
xchg
adc
cmp
scas
clc
mov
out
sub
daa
mov
pop
inc
xor
scas
pusha
addr16
andl
xchg
mov
cmc
jnp
leave
nop
inc
les
addr16
inc
repnz
sub
pushf
into
dec
cmp
mov
cs
pop
jnp
and
adc
mov
cmp
mov
dec
loopne
pop
repnz
sbb
dec
adc
popl
adc
lods
mov
pop
jecxz
iret
jns
lods
cmp
jg
push
jge
jne
inc
push
jns
push
add
mov
aaa
dec
pop
popa
movd
cmp
cmp
add
sbb
push
push
lahf
je
adc
subb
outsb
movsl
jge
dec
dec
and
pop
clc
out
rcrb
jl
sbbl
fs
inc
jecxz
lcall
cmp
fldl
pop
mov
ds
push
xchg
pop
add
adc
xchg
dec
pop
cmp
push
fists
jnp
sbb
pop
and
cmpsb
xor
enter
mov
sbb
ret
cltd
pushf
cmc
bound
test
xor
inc
mov
sub
and
lods
sub
xchg
dec
add
fidivrl
jmp
xchg
stos
iret
fdivrs
jo
xchg
cld
outsl
loop,pt
popf
clc
sbb
jecxz
or
clc
mov
pop
das
shll
push
nop
hlt
inc
inc
mov
xor
or
lahf
mov
mov
dec
mov
sbb
std
ss
rol
movsl
test
inc
sub
jmp
xor
sbb
test
sub
pop
jg
aad
jge
and
repz
sbb
mov
mov
sarl
sbb
inc
outsl
or
or
mov
ret
inc
int3
es
jmp
pop
aaa
lcall
cmc
cmpl
cmp
pop
shr
mov
pop
sbb
jno
add
mov
lret
loope
xchg
cmpsb
fnstsw
pop
jae
loopne
shl
lret
adc
inc
ja
dec
mov
stc
mov
fdiv
push
jg
dec
stos
mov
enter
iret
insl
sub
clc
out
pop
aaa
adc
rorb
or
mov
jae
leave
jle
pop
mov
cld
and
pop
iret
lock
xor
pop
iret
je
jae
in
push
push
outsl
insb
fbstp
loopne
or
orl
xchg
pusha
test
cmpsl
cmp
shrl
dec
mov
sub
adc
mov
cltd
adc
inc
inc
clc
mov
cmp
test
sbb
adc
xor
lock
mov
js
sbb
test
and
jecxz
int
xchg
or
inc
pop
mov
je
mov
mov
add
lods
or
inc
loope
jbe
xor
jo
es
add
jo
or
cmp
sbb
jno
add
mov
int3
test
je
dec
bound
cs
aaa
and
pop
push
cs
xchg
enter
xchg
mov
rcr
inc
mov
inc
push
sbb
xlat
fwait
incb
jg
xchg
dec
insb
ret
movsl
sbb
cmp
cmpsb
add
jno
push
adc
scas
into
sti
iret
xor
xor
mov
scas
fs
out
push
lret
ror
enter
outsb
adc
sbb
stos
inc
cmpsl
sub
jl
aas
imul
test
call
arpl
and
xor
sub
xchg
xchg
fldcw
insb
scas
cmp
sti
aaa
jbe
xor
mov
dec
daa
ss
das
pop
aam
push
mov
cmp
xorl
pop
addl
mov
aam
loope
jnp
in
ja
mov
int
push
add
mov
rclb
push
dec
dec
jmp
sub
rcrl
cld
jle
cmp
xor
dec
or
lods
inc
sbb
rorb
add
jae
or
or
xor
jae
int
mov
mov
test
xchg
es
dec
or
cmc
inc
mov
subl
ret
xlat
xchg
mov
push
addr16
aad
rclb
ds
mov
xchg
and
scas
xor
call
daa
adc
fwait
lock
iret
and
sbbl
mov
or
rol
xchg
jns
adc
sub
xor
inc
or
or
mov
add
xor
or
call
out
daa
jle
call
xchg
notb
test
xor
stc
scas
push
cmp
ficoml
dec
cli
lock
call
add
jne
orl
mov
jmp
xchg
mov
cmp
mov
loopne
mov
dec
fstpl
addl
pop
cmp
mov
mov
xlat
xadd
inc
inc
sbb
fstl
fsubl
insb
repnz
pop
cmp
shll
push
push
mov
or
frstor
subb
jge
int3
lods
cmp
adc
adc
ss
and
shll
stc
imul
andb
cwtl
jae
cmp
pushf
add
int3
in
push
xchg
lahf
dec
sbb
add
repz
sub
ror
sub
cltd
incb
lds
andnps
cs
jb
popa
push
cli
inc
and
jmp
adc
sbb
popa
cs
repnz
cmp
cs
xchg
push
jle
inc
cmp
ret
aas
pushf
push
lcall
shr
sbb
push
add
cld
fcomi
push
pop
dec
dec
aad
and
dec
fs
cmp
fiadds
ja
pop
clc
sub
jmp
or
and
scas
leave
iret
mov
std
pop
adc
push
mov
xchg
sbb
or
in
nop
add
cltd
inc
repz
sub
dec
cld
xor
shll
rcll
je
mov
inc
mov
test
xchg
arpl
daa
iretw
shlb
xor
sub
cmp
sbb
fcmovne
loope
mov
jns
add
cmpsl
leave
addb
sarb
out
lds
sahf
xchg
clc
rolb
ds
and
mov
sub
cmpsb
in
clc
in
mov
jl
cli
pop
xchg
adc
cmp
sub
jns
mov
aam
pushf
in
imul
arpl
xor
leave
xor
xor
std
rcl
cmp
test
mov
les
nop
dec
inc
xlat
fmuls
dec
xchg
icebp
insb
js
inc
stos
add
adc
ret
push
icebp
ss
mov
in
pop
xchg
mov
repnz
out
sbb
mov
jbe
inc
add
stc
adc
xor
sbb
sub
cmp
xor
fimull
xchg
js
incl
adc
imulb
xchg
ss
pop
movb
pop
adc
xor
rolb
lcall
pop
shlb
fstp
pop
fildl
jae
insl
jmp
in
pop
mov
ss
mov
adc
outsl
inc
call
lods
adc
fs
sbb
dec
inc
out
dec
xchg
stc
repnz
mov
add
mov
dec
xorb
push
push
xchg
daa
sub
inc
movsl
std
inc
test
mov
sbb
mov
stos
mov
pop
addr16
sub
and
adc
cs
push
xor
pop
push
ja
int
imul
in
mov
fbld
inc
dec
and
stc
ljmp
xor
sbb
enter
jne
xor
cltd
loopne
lahf
cmpl
push
mov
adc
loop
pop
shlb
adc
ljmp
xor
lahf
pop
adc
mov
aaa
cwtl
testl
repz
sti
movsb
xor
ja
movlps
decl
ds
test
bound
out
out
test
paddd
mov
out
lret
mov
pop
ljmp
mov
pop
es
jp
dec
ja
adc
push
jmp
in
add
push
fcmovb
hlt
xor
sub
add
ficoml
xchg
rclb
popl
inc
lock
cmp
ds
mov
scas
aas
push
lret
adc
inc
pop
sub
pop
ds
add
into
cli
add
cmp
pop
xchg
enter
movsl
jle
or
andb
fimull
mov
pop
and
je
leave
jno
std
cmp
sub
lea
outsb
mov
add
cwtl
rsm
xchg
testl
inc
cli
adcb
push
xor
adc
sub
ds
sub
sub
dec
mov
lds
fisttpll
add
mov
mov
in
clc
xchg
inc
out
xchg
cmp
sti
dec
xchg
inc
aam
xchg
loopne
ror
dec
aam
sti
push
pop
aam
lds
mov
push
test
aas
fadd
pop
fstl
rcl
push
cmp
rolb
das
inc
aaa
push
mov
adc
std
ljmp
icebp
aad
add
and
xlat
insl
lds
shlb
xchg
movsl
loop
xlat
and
jno
mov
cli
ret
pop
stos
mov
idivl
rorl
mov
xchg
ret
cltd
xor
adc
daa
std
mov
push
mov
out
aad
pop
sub
nop
mov
enter
cmpsb
gs
pop
mov
jmp
push
je
pop
adc
testb
js
adc
cmp
cltd
ret
icebp
mov
push
add
int
adc
mov
mov
shl
mov
inc
mov
jno
mov
push
scas
push
jecxz
push
loopne
outsb
inc
cmp
rcrl
adc
test
pop
or
fsubs
ret
imul
xchg
mov
scas
mov
ficoml
subb
dec
cld
jge
aam
mov
add
cmpb
xchg
cmpsb
xlat
cmpsb
shlb
int
mov
xchg
inc
push
add
cmp
cs
xchg
test
mov
or
jbe
testl
aad
pop
outsb
jo
cmp
rep
aad
stc
cmp
pop
and
ficompl
jo,pt
roll
sar
fnstcw
loop
sahf
cmp
cmpsb
cmp
dec
mov
add
push
test
mov
jl
add
inc
mov
xorl
lret
aaa
mov
adc
and
mov
add
jbe
decl
clc
daa
mov
jne
cmc
mov
add
fs
xor
mov
ret
adc
fld
add
jbe
fadds
mov
cmp
and
subl
es
dec
xchg
repnz
xor
lcall
dec
xchg
into
add
pop
enter
cmc
mov
bound
and
mov
cmp
pop
lods
insl
xchg
addr16
gs
movsb
fisttpl
and
cwtl
xor
mov
loopne
xchg
adc
icebp
test
pop
loope
je
repz
mov
je
das
es
and
mov
insl
cmpsl
je
cld
xor
rorl
mov
or
sbbb
mov
rep
inc
cmp
loopne
mov
out
bound
push
pop
adc
add
pusha
jnp
rclb
mov
and
pop
jo
xchg
pop
dec
loope
add
mov
imul
jae
js
adc
adc
cwtl
lods
or
adc
xchg
push
mov
ret
cmp
inc
std
clc
mov
sahf
cmp
add
pushf
push
sub
addb
xor
push
xor
in
sbb
dec
push
aad
dec
mov
gs
rclb
adc
xchg
sub
lea
push
sub
sub
push
orb
in
and
in
jo
adc
movsl
and
pop
inc
les
or
orb
dec
test
cmp
jmp
shrl
insl
mov
cltd
rclb
push
sbb
inc
add
inc
adc
into
cwtl
mov
sbb
sbb
enter
push
adc
xchg
ljmp
rorl
insl
les
outsl
mov
cltd
ficoml
andb
inc
cmc
not
cmpsl
mov
xchg
js
mov
pop
fisubl
dec
inc
testb
pusha
sub
inc
sub
inc
mov
bound
adc
pop
mov
xchg
mov
push
das
jl
mov
push
mov
movsl
xchg
leave
fadd
mov
and
adcb
icebp
frstor
cltd
dec
hlt
mov
sbb
sub
pop
movsl
loopne
push
push
jmp
pop
jge
push
aas
idiv
repz
loope
adc
lahf
add
adc
fbstp
jns
sub
sbb
ret
sysret
push
cmp
jb
dec
xor
jle
repz
lock
adcl
scas
push
mov
mov
mov
out
rcrb
adc
xor
icebp
sbb
xchg
or
mov
aas
xor
lds
cli
pop
lea
hlt
call
test
dec
lea
jae
aaa
mov
sbb
in
pop
scas
push
outsl
loopne
pop
mov
aam
imul
adc
jmp
ret
cwtl
cmpsl
fstl
psubd
add
mov
and
subb
popa
add
jne
orl
push
lea
fmul
inc
xchg
mov
xchg
jno
dec
mov
adc
pushf
cmpsb
xchg
jle
sarb
mov
scas
xchg
and
sbb
push
pop
ja
dec
std
xorl
mov
orb
shlb
or
inc
push
fucom
idiv
add
jg
loope
dec
cld
out
mov
das
movsl
sbb
sub
mov
pop
mov
adc
jle
pop
pop
fdivrs
mov
or
pushf
movsb
hlt
aam
xor
mov
dec
sahf
sbbb
push
add
cmp
push
popf
inc
mov
fcomps
sub
cmp
decb
cmc
stc
jp
sbb
sub
loop
push
imul
adc
push
cli
mov
fidivrl
sub
sub
jl,pn
mov
fiadds
loopne
mov
jg
inc
pop
add
mov
jmp
int
dec
and
jmp
ret
jmp
fdivl
cmpsl
daa
out
sub
or
lods
aad
testb
adc
loopne
mov
pop
sahf
shlb
aam
adcb
sbb
scas
cmpsb
sbb
mov
xlat
push
xchg
loopne
sarl
push
cmp
cmpsb
sbb
orb
aaa
or
sbb
repnz
loopne
mov
clc
cltd
test
call
cmp
add
in
xchg
loopne
or
lahf
push
cli
loopne
ja
ljmp
mov
ret
ja
js
out
inc
add
add
inc
je
cmp
lret
sar
lock
push
cmc
add
and
jns
adc
pop
ror
icebp
and
testl
mov
movsb
ret
lret
pop
ret
cmp
sbb
jmp
dec
in
sbb
clc
fsubrp
clc
int3
mov
popf
xorl
lahf
xor
sub
pushf
sbb
and
jmp
jb
test
cld
jo
orl
loop
stos
xchg
dec
test
fimuls
cld
push
adc
or
inc
mov
popf
mov
pop
pop
insb
arpl
pop
loop
and
sbb
mov
push
loopne
loope
es
outsl
loopne
icebp
jmp
sub
xor
faddl
sub
dec
sarb
dec
inc
leave
fimuls
test
sbb
mov
adc
repz
sbb
or
jl
inc
mov
orb
inc
adc
loop
mov
mov
or
adc
xchg
stos
mov
out
scas
test
jo
or
movsb
xor
xchg
push
jl
push
rclb
jbe
jno
mov
decl
scas
mov
xchg
test
mov
push
or
add
sbb
call
loop
sysexit
push
xchg
push
loopne
push
insb
int3
xor
pop
or
sbb
testl
int3
out
hlt
or
iret
inc
mov
add
idivl
shlb
add
cmp
xchg
add
out
lods
scas
xlat
and
test
fdivr
popf
pushf
cltd
fs
xchg
mov
mov
pusha
push
mov
or
mov
in
js
pop
subb
orl
or
negb
sub
inc
push
dec
jecxz
cs
inc
and
dec
inc
arpl
dec
movsl
insb
dec
mov
push
ficomps
pusha
and
dec
in
add
sub
sbb
jecxz
pop
sbb
cmpsl
ds
insb
mov
push
sub
imul
add
mov
lahf
rorl
sbb
ss
and
in
lcall
push
mov
dec
pop
add
jb
sbb
adc
shll
imul
push
stos
add
lret
and
test
mov
jle
mov
mov
das
in
xor
mov
push
xchg
lods
jbe
and
lret
and
dec
dec
leave
int
data16
popa
pop
pop
jne
mov
mov
jge
pop
sbb
add
ljmp
pop
movhps
jnp
pop
movsl
nop
out
fs
sub
and
or
or
sbb
adcb
or
jl
pop
push
ficoms
pop
jbe
in
daa
lahf
in
mov
rorl
movb
in
cmpsl
shrl
inc
movsl
inc
cmp
cmp
cltd
fwait
or
call
sbbl
or
cld
jg
mov
andb
xor
xchg
pop
sarb
cmp
call
roll
jo
icebp
push
loope
and
inc
test
arpl
pop
dec
pop
sbb
push
and
icebp
push
dec
pop
and
ja
or
sarl
test
sub
jecxz
aas
jne
add
call
adc
test
jl
fabs
mov
in
or
xlat
xchg
daa
ret
imul
subl
inc
xchg
push
fidivrs
dec
sbb
sbb
loop
xchg
add
fs
lds
cmp
push
jns,pt
sub
and
pop
xchg
adc
and
in
or
xor
push
mov
lahf
out
sbb
mov
push
mov
insl
cli
in
push
push
xchg
mov
mov
jmp
out
sbb
pop
fidivrs
jae
inc
loopne
sub
leave
or
clc
cmpl
mov
movsb
xlat
mov
and
test
pop
idivl
pop
aad
and
push
dec
pop
loop
je
stos
gs
push
xchg
jno
jbe
add
mov
lods
and
mov
mov
jo
inc
and
sbb
daa
les
inc
fdivs
in
push
mov
push
movsl
test
shl
add
mov
dec
adc
lods
addr16
or
stos
or
adc
in
test
lahf
aaa
inc
inc
add
push
mov
mov
push
ds
scas
mull
push
in
gs
mov
sbb
dec
adc
pushf
xchg
les
imul
dec
jbe
jmp
mov
shrl
and
mov
icebp
movsl
pop
xor
mov
imul
mov
push
inc
inc
fwait
and
stos
xor
mov
fwait
out
sti
cs
cmp
or
cli
out
clc
sub
test
test
add
hlt
cmc
sbb
cmp
sub
popa
sbb
movb
adcw
mov
pop
push
int
add
fidivl
mov
inc
inc
addr16
push
push
inc
mov
aad
insb
fildll
sub
or
lods
test
sbb
daa
sbb
mov
addb
sub
popa
cmp
mov
std
cwtl
std
test
push
mov
lds
lret
lcall
inc
orb
dec
jbe
mov
push
icebp
pop
cmp
insl
scas
jle
xor
aaa
sub
mov
test
je
imulb
out
arpl
test
mov
jno
ret
into
pop
adc
xor
mov
mov
push
pushf
jp
pop
cmp
mov
push
cmp
icebp
sub
sbb
lock
out
ret
scas
or
inc
lahf
cmp
mov
sbbl
in
int3
clc
push
xchg
or
iret
jb
cld
push
pop
fwait
inc
dec
popf
fisubrl
mov
cltd
push
lea
jnp
test
aam
adc
mov
lret
dec
mov
cli
hlt
fwait
xchg
xor
fadds
jmp
adc
xor
aas
xchg
lods
push
mov
outsb
scas
adc
push
dec
pop
inc
pop
mov
sbbl
pusha
jmp
or
ss
add
and
mov
pop
maxps
pop
adc
pop
sbb
push
fldcw
mov
ret
loop
ret
push
addr16
arpl
add
pop
and
out
dec
mov
das
insb
push
lea
pop
lods
sub
pop
jne
pop
jp
jnp
popf
cltd
cmp
mov
pushf
push
push
dec
adc
lods
hlt
mov
mov
fmul
leave
repnz
fsub
js
cmp
xor
out
loope
jmp
pop
push
sub
push
fimuls
enter
pop
dec
add
repz
dec
or
cs
pop
xor
bound
xor
cmp
xchg
add
sarb
mov
adc
test
pushf
fisubrs
add
and
mov
dec
lds
rclb
lea
imul
mov
fildl
push
scas
jb
lcall
addl
ret
clc
xchg
fs
cmp
inc
out
adc
mov
adc
or
ljmp
ljmp
arpl
add
std
mov
bound
xor
daa
je
push
inc
sahf
cmp
in
pop
mov
lods
ret
inc
and
ljmp
testb
xor
jbe
dec
test
mov
enter
lea
loop
mov
repnz
out
sarb
ja
add
adcb
imul
and
dec
dec
sub
mov
mov
mov
mov
sub
testb
jbe
idiv
push
mov
sub
mov
pop
mov
ret
pop
sbb
das
out
incl
mov
pushl
call
sub
ret
xor
aad
inc
add
or
daa
dec
scas
jl
mov
and
nop
jo
hlt
lea
push
js
xchg
fcmovu
lds
inc
in
push
pop
cld
jg
in
sti
push
sbb
adc
push
push
dec
push
dec
outsl
lcall
in
mov
nopl
push
clc
lock
push
lea
push
lods
in
lock
cmp
inc
shrb
pop
inc
ja
mov
mov
call
push
loopne
dec
je
paddusb
xor
test
mov
push
loopne
clc
sbb
pop
or
sbb
mov
mov
sub
cmpsb
or
sbbb
or
cld
orl
push
push
add
push
push
incl
out
orb
mov
xor
clc
add
idiv
push
mov
xor
pop
sbb
dec
cli
jl
add
push
push
and
inc
call
mov
sub
push
push
jo
sahf
xor
adc
or
jmp
out
outsl
addr16
sbb
sub
push
loopne
push
insl
jae
or
push
popa
addr16
mov
mov
cmp
or
lea
inc
inc
mov
hlt
movsb
clc
insb
sbb
mov
xor
add
int
mov
jb
popa
push
push
aaa
push
das
adc
bound
push
or
cmpsb
add
jl
xor
push
push
pop
rcrb
xor
rorl
add
xchg
ret
icebp
lds
adc
pop
xor
lds
jo
sub
loope
inc
and
mov
or
and
xorb
push
adc
add
movnti
push
sub
adc
rcll
clc
nop
je
mov
and
in
push
push
inc
adc
sbb
movsb
clc
push
nop
pop
mov
push
or
mov
insb
arpl
enter
lock
test
add
and
sbb
fsub
pop
cld
push
test
imul
das
and
mov
or
cs
and
push
sarl
ljmp
fs
push
push
insl
mov
sti
cmpsl
add
pop
or
ja
or
push
adc
mov
loopne
cmp
add
xor
add
sbb
xlat
test
fists
rolb
inc
cld
push
xchg
jge
iret
mov
les
aad
ucomiss
xor
imul
cwtl
hlt
push
movsl
rcll
add
inc
orl
mov
add
daa
and
hlt
shrl
adc
dec
push
mov
je
dec
push
fwait
and
mov
in
out
xchg
sbb
push
adc
adc
pop
xchg
jbe
popa
and
sub
lods
fstps
push
das
ds
push
mov
call
or
cmp
add
in
sbb
testl
leave
sbb
cmpsb
xchg
adc
adc
daa
mov
mov
dec
fs
in
leave
enter
sbb
push
cwtl
clc
imul
js,pn
cmp
and
sbb
push
dec
sub
inc
gs
push
hlt
jmp
dec
enter
push
push
insl
push
xchg
push
jmp
mov
push
or
jp
paddd
inc
or
adc
inc
imul
fistpll
push
mov
pop
out
push
mov
cmp
sbb
js
pushf
cmpsl
push
add
sbb
pop
mov
sti
mov
or
repz
mov
xor
cmp
rcrb
inc
mov
pop
add
push
sbb
rolb
loop
push
push
mov
mov
rorl
inc
mov
cs
daa
in
test
and
ds
mov
sbb
ss
push
scas
sbb
stc
mov
inc
addl
cltd
add
test
adc
scas
or
jg
xor
add
or
jnp
mov
inc
inc
lcall
dec
cmpsl
les
xor
and
push
xor
inc
pop
scas
xchg
cmpsl
inc
shl
add
add
cwtl
mov
in
pop
aad
gs
xchg
mov
cmc
insl
jecxz
dec
sub
call
adc
sub
cmp
dec
jo
xchg
jnp
into
scas
and
push
dec
enter
repz
jno
enter
push
push
push
add
jne
push
sbbb
negl
and
pop
repnz
fldt
or
test
arpl
call
pop
in
push
lods
popf
mov
push
push
sub
xchg
add
xchg
and
mov
inc
inc
adc
mov
int
jecxz
jle
lock
jae
xlat
inc
adc
cmp
inc
adc
addl
xor
mov
or
out
test
insl
in
dec
jne
out
push
inc
je
push
dec
pop
inc
add
fwait
xor
std
pop
imul
es
inc
push
subl
mov
push
push
cmp
ret
sbbl
inc
inc
mov
mov
adc
jne
mov
or
je
test
jns
fs
xchg
fwait
nop
pop
aas
imul
insb
and
xor
cmp
aaa
outsb
gs
add
leave
enter
and
push
dec
lock
ja
or
rorb
add
ds
aas
adc
and
dec
aaa
addr16
in
rcll
and
lock
dec
scas
in
push
dec
adc
dec
addl
nop
pop
pop
mov
xor
out
or
das
sub
repz
mov
fs
test
sub
push
das
cmp
xor
pop
rorb
in
xor
push
fsub
push
add
push
xor
shr
pop
mov
iret
mov
or
es
bound
push
push
dec
stos
xchg
jae
lret
adc
add
inc
push
xor
mov
jg
movl
add
mov
data16
jl
xor
and
push
or
jnp
and
jmp
lods
scas
outsb
push
addr16
jne
cmp
pop
loop
or
and
pop
cld
jp
shrl
pop
leave
out
push
push
add
flds
shll
mov
cmp
pusha
jno
mov
or
push
out
pop
push
mov
aam
stc
loop
sbb
outsb
push
dec
sbb
cli
lds
scas
inc
ds
xor
movl
push
fsubrs
pop
adc
cmp
aas
adc
ljmp
push
popa
stos
pop
rorb
push
push
or
mov
inc
push
inc
or
push
stos
mov
jmp
in
or
incb
pop
cld
push
mov
leave
shll
aas
and
repnz
push
pusha
or
push
les
sbb
out
pop
sbb
inc
jns
inc
clc
cld
ljmp
add
out
push
add
xor
not
aaa
pop
lds
and
out
mov
rcll
rcrb
nop
int
xor
test
movsb
sbb
push
adc
push
dec
insb
xchg
ja
loope
imul
push
push
or
or
dec
push
fisubrs
and
cvtps2pi
mov
push
and
loopne
push
sub
mov
jae
dec
out
shrb
std
loop
sbb
dec
push
mov
push
mov
nop
lods
or
cltd
or
loop
fs
jg
inc
mov
inc
or
sub
push
mov
xorl
dec
lods
add
adc
mov
push
mov
push
test
dec
push
cld
lcall
push
or
mov
mov
inc
inc
dec
or
jne
pop
adc
orl
icebp
es
or
mov
xor
dec
cmp
adc
or
or
xor
bound
xchg
and
inc
mov
pop
sti
xchg
shll
add
mov
dec
xor
mov
or
arpl
push
sub
mov
mov
sti
out
xor
lcall
mov
sbb
push
cmc
push
xor
push
pushf
std
cltd
add
sbb
in
cmp
push
pop
jno
adc
mov
cld
addl
jg
mov
mov
inc
daa
adc
je
pop
xorb
mov
and
arpl
stos
xorl
dec
dec
add
or
outsl
ljmp
cli
pushf
add
mov
lahf
add
inc
lcall
pop
jns
sbb
imul
adc
push
sub
add
push
mov
test
sub
lcall
jo
and
in
cmpb
imul
adc
sub
pop
push
or
sbb
pusha
xor
int3
das
mov
push
mov
scas
adc
gs
add
push
dec
jno
pop
mov
jl
push
jne
shrl
xchg
outsl
bound
push
aas
xchg
lcall
and
punpckhbw
dec
push
repnz
dec
push
test
js
dec
dec
lret
lea
pushf
insl
adc
addr16
mov
push
push
jbe
mov
outsl
inc
mov
adc
hlt
clc
loop
xor
pop
cmp
lods
adc
out
xor
loopne
inc
test
decb
in
orb
adc
cs
adc
xlat
inc
enter
pusha
push
push
or
cmp
bound
andl
dec
daa
pop
add
add
aad
inc
push
pop
mov
arpl
push
inc
adc
or
dec
mov
add
stos
mov
sbb
idivl
repnz
cmp
sbbb
xorl
push
test
aaa
sbb
aad
xlat
inc
stos
or
adc
nop
inc
push
push
in
dec
fsubrl
push
add
fstl
popa
and
ja
lods
add
pop
repnz
fs
insl
rcrb
pop
xlat
or
inc
pop
xchg
pusha
pop
and
add
enter
insb
pop
jne
push
adc
js
imul
mov
cmp
mov
sbb
rcrl
fcom
fistpl
push
push
push
or
in
pop
dec
and
pop
call
loop
ljmp
gs
xchg
push
adc
lods
adc
aad
push
dec
leave
push
xor
dec
xchg
or
push
in
mov
dec
push
sub
fbstp
or
mov
sbb
or
push
xchg
adc
int
push
call
ret
loopne
cmp
push
or
xchg
cmpsb
daa
cmpsl
or
and
add
test
out
sti
sbb
or
sbb
and
pop
jp
je
rcrl
insb
xor
inc
jae
xchg
pusha
cmp
rcr
in
aad
lods
xchg
loope
dec
hlt
outsb
xor
ret
test
bound
andl
je
push
repnz
dec
lcall
popa
push
sub
cld
pop
orb
push
std
lods
adc
ljmp
add
mov
imul
js
sbbb
mov
push
aam
inc
leave
dec
mov
bound
pop
sbb
fistps
adc
sbb
or
shl
cmp
ss
sbb
xchg
insl
arpl
cmp
or
hlt
add
jno
imul
and
add
adc
addl
jne
lcall
dec
insb
sbb
repz
push
or
insb
add
sub
pop
push
cwtl
jl
lock
mov
add
adc
cmp
mov
push
cs
xchg
loop
test
or
dec
adc
mov
cltd
or
in
push
adcb
pop
sbb
call
lds
mov
cmp
ja
mov
inc
inc
je
fsubl
daa
jb
inc
jb
push
push
xchg
mov
pop
inc
sbb
push
aas
sbb
adc
lods
pop
pusha
pop
lcall
mov
adc
adc
loopne
push
stos
or
in
test
inc
jle
imul
aaa
pop
cmp
js
jo
push
bound
outsb
daa
cs
jns
push
pop
sbb
fimuls
mov
and
sub
sbbl
mov
inc
adc
or
rorb
ficompl
mov
adcb
mov
sub
inc
mov
icebp
and
jno
cmp
sbb
in
add
adc
push
in
test
enter
adc
and
add
popw
push
mov
jl
aam
xor
pop
adc
or
add
fs
dec
enter
je
xchg
or
test
daa
scas
int3
call
jbe
or
int
lods
and
ljmp
xchg
or
sbb
test
adc
and
pusha
mov
or
jp
insl
inc
push
or
pop
fcmovu
or
mov
fidivl
and
mov
jno
push
ja
ret
dec
pusha
add
inc
hlt
add
loope
jl
dec
pusha
arpl
je
std
mov
pusha
mov
jl
gs
inc
sub
dec
jne
bound
pop
addr16
inc
push
mov
das
push
push
imul
jns
mov
sbb
mov
push
dec
adc
pop
fimuls
mov
and
sbb
loop
outsl
adc
test
out
sub
push
inc
jo
pop
mov
xor
inc
sub
insl
dec
into
add
pcmpeqd
ret
rorl
add
xor
in
and
enter
cmp
and
dec
jae
or
sbb
adc
jae
pop
adc
add
dec
adc
cmp
xor
xor
aaa
xor
xor
je
ss
ja
jns
cmp
imul
add
jbe
inc
push
js
add
xor
js
ljmp
xor
push
inc
inc
inc
pop
push
inc
push
add
js
insb
push
inc
insb
xor
inc
fisttpl
jp
add
arpl
je
jbe
popa
jno
push
push
dec
dec
dec
call
inc
dec
inc
inc
dec
dec
add
ret
and
or
pusha
sbb
push
lcall
call
fcoms
out
sbb
sbb
aad
ljmp
xlat
jp
icebp
mov
call
xor
movsb
andb
popf
xor
push
and
std
out
sbb
pushl
out
lcall
rcrl
iret
lods
addb
icebp
mov
jmp
push
call
stos
gs
fwait
jecxz
mov
das
adc
repnz
xor
pushl
out
xchg
add
xchg
lds
ljmp
pop
sbb
incl
pop
ja
in
dec
call
pop
and
inc
outsb
sub
xlat
stc
or
ljmp
sti
inc
jne
and
xchg
push
pushf
bound
sbb
jp
sbbb
jns
cmc
mov
in
pop
pop
adc
repz
pop
adc
dec
xchg
dec
push
xor
pusha
jle
jecxz
std
lcall
mov
test
mov
repz
icebp
mov
jle
and
je
cld
pop
out
daa
jo
bswap
add
and
gs
mov
call
dec
jecxz
pop
lret
xor
test
mov
mov
cmp
mov
lcall
test
cltd
loope
popf
mov
xor
call
cmc
cmc
push
inc
rcr
insb
dec
jno
clc
ds
popf
loopne
icebp
cmp
ret
cmp
lcall
or
fisubs
mov
call
xchg
push
lock
in
adc
sbb
and
jb
mov
cltd
lock
mov
insb
out
clc
add
incl
dec
fcomi
cmp
jmp
leave
mov
je
jmp
sub
shll
or
outsl
mov
pop
lds
scas
push
lds
sbb
fsubl
mov
call
mov
sbb
jmp
push
xchg
xor
mov
outsl
roll
pop
out
pop
cs
movsl
ja
cli
inc
je
es
dec
cmpsb
aaa
pop
call
or
push
les
lahf
jmp
add
xlat
push
adc
adc
cmpsb
xchg
ljmp
lds
and
sti
inc
lea
stos
stos
mov
sbb
notl
std
aad
call
andl
movsb
mov
pop
lods
jmp
aad
sarb
iret
jg
mov
mov
xchg
xchg
icebp
outsl
clc
inc
dec
jbe
pushl
rcr
and
push
dec
mov
daa
mov
sbb
mov
xchg
push
adc
push
pop
test
mov
das
bound
test
jno
inc
inc
loopne
mov
pop
pusha
pop
mov
cwtl
jae
jmp
sbb
mov
pusha
in
mov
lret
lods
in
xor
or
push
adc
and
or
scas
clc
pop
rclb
jae
and
lods
in
mov
lods
mov
incl
inc
push
pop
das
xchg
stos
repz
pop
and
clc
cli
ret
push
pop
cmp
incl
iret
add
test
in
lret
and
sti
fcmovnbe
pop
fsubl
cmp
dec
lret
sbb
aam
mov
mov
xor
mov
decl
push
iret
movsb
push
push
mov
jl
aad
data16
adc
push
sub
jmp
xlat
fcoms
pusha
adc
mov
sbb
or
out
inc
repnz
mov
add
or
cld
mov
and
xchg
inc
mov
mov
out
aas
test
movsb
test
popf
pop
mov
or
pushl
pop
arpl
push
cwtl
xchg
stos
movsl
xchg
cmpsl
xchg
lds
inc
push
aas
decl
daa
hlt
cmp
jp
leave
test
cmp
xlat
shl
test
call
js
pop
sub
push
sub
xchg
fildll
pop
roll
cmpsl
test
pushl
or
inc
jae
pop
arpl
imul
mov
mov
jl
inc
cmc
fwait
movsl
out
add
add
clc
jecxz
dec
xchg
movl
fwait
sub
xchg
inc
mov
js
jno
inc
jno
adc
lret
rcll
mov
incl
adc
jmp
jnp
int
mov
adcb
jns
dec
inc
xchg
cmpsl
out
cli
gs
cmc
xchg
test
xchg
jns
xchg
out
xchg
push
sar
out
scas
push
lret
decl
jge
sahf
mov
loope
xlat
cmp
insb
dec
or
adc
ljmp
in
popf
dec
lahf
sub
cltd
insb
dec
mov
push
xor
hlt
cmp
push
push
popa
cmpsl
out
je
dec
adc
outsb
sub
cld
jmp
les
xchg
xor
pop
mov
or
fcomip
add
neg
mov
xchg
setns
dec
jle
mov
subl
ljmp
jecxz
je
xchg
test
rol
out
cmp
int3
xor
loopne
insl
outsl
in
les
loopne
enter
je
push
lods
hlt
adc
push
addr16
mov
out
cli
pop
stc
aam
jle
shll
push
sub
push
add
stos
fnstsw
fwait
scas
sub
xor
enter
nop
cmp
lcall
and
rclb
cmp
cli
xchg
test
or
popf
jne
outsl
daa
insl
inc
pop
mov
mov
loopne
and
lods
adc
fidivl
clc
test
cmp
inc
in
xor
mov
das
sarb
sub
popa
lahf
loopne
pop
sbb
les
mov
call
push
fdiv
inc
mov
pop
cld
addl
mov
push
lcall
sbb
out
mov
in
add
in
mov
jne
outsl
mov
mov
lcall
ljmp
cltd
pop
ret
ret
hlt
mov
stos
repnz
loopne
sbb
decb
lock
pop
mov
push
pushf
into
movsl
jl
cmp
fldt
inc
adc
scas
lahf
mov
xlat
or
cmpsl
cmp
data16
cli
repnz
and
pop
or
jnp
sbbl
sarl
mov
jb
add
lock
add
jle
cwtl
je
cld
lods
aas
ljmp
cltd
stos
inc
jbe
dec
add
stc
ficompl
out
lahf
xor
mov
mov
ss
mulb
pop
dec
cltd
lret
shl
aam
outsb
mov
addb
mov
iret
js
cmp
cmc
test
test
std
lcall
cmp
pop
fidivs
dec
push
sbb
into
pop
incl
and
add
jecxz
sbb
push
sbb
stos
mov
sbb
out
icebp
fs
lea
out
sbb
int
inc
xor
fists
je
das
sub
out
fcoms
mov
decl
xor
inc
jnp
and
dec
call
mov
mov
add
test
cmp
push
adc
loopne
pop
cmpsl
push
mov
mov
pop
cmc
outsl
mov
ljmp
mov
ds
sub
xor
shll
imul
xor
mov
daa
fwait
rcrb
popa
stc
fnstcw
sub
xor
pushl
movsb
xor
int
loopne
movsb
and
mov
sub
inc
add
pop
stos
scas
ljmp
inc
push
sub
mov
and
insl
stos
lock
or
jne
dec
lea
mov
sbb
push
hlt
sbb
pop
sbb
sub
mov
xchg
outsl
mov
popf
fistpl
fcomip
in
mov
enter
data16
repz
xlat
lea
cmpsb
out
adc
incl
in
pusha
jo
push
clc
in
scas
and
shll
imul
or
cmc
lret
sbb
and
adc
cmp
pop
mov
push
clc
ja
ljmp
les
push
aad
cmp
add
or
jae
movsb
shlb
jmp
outsl
cmp
out
xchg
pop
adc
loop
rcrb
pop
jl
xor
lahf
lcall
das
data16
je
lods
cmc
jno
orb
out
out
adc
incl
dec
movsb
arpl
insb
mov
mov
mov
inc
aad
jmp
in
out
cmp
ja
cld
outsl
clc
test
cmp
xor
xor
out
icebp
add
push
pushf
lcall
add
inc
imul
pop
and
dec
js
sbb
sbb
mov
or
jg
push
pop
nop
pop
fidivrl
decl
cltd
push
incl
cmp
mov
out
jne
dec
push
and
sti
or
loopne
aas
fistpl
mov
out
mov
mov
jg
leave
test
aaa
inc
rcll
scas
sub
loop
popf
in
lret
xchg
cmpsb
test
push
mov
and
mov
lahf
sbb
into
cmp
icebp
or
pop
std
mov
xchg
cld
faddl
andl
and
outsl
decl
rcrl
cld
xor
addl
xchg
jmp
adc
cmp
lods
mov
push
mov
ret
xor
lret
sub
add
add
push
xor
in
jbe
xor
in
idiv
decl
lock
or
and
jbe
lea
stc
or
in
cmp
and
sbb
pop
sbb
cmp
movsl
push
std
incl
sti
inc
pop
cmp
cli
xchg
dec
rolb
jo
adc
fdivrl
mov
out
dec
pushl
mov
pop
cmc
jae
std
xchg
cmpsl
test
pop
fcompl
pop
jo
push
dec
ljmp
stc
push
test
and
sbb
fstps
add
cmpsl
cmp
data16
pop
push
sahf
jmp
mov
sub
xchg
fnsave
push
sar
mov
mov
sbb
cmp
push
jno
adc
nop
iret
adc
test
adc
mov
mov
ret
or
sbb
sub
dec
dec
inc
call
mov
pop
cmc
jge
cmp
push
xor
in
add
fcomip
xchg
in
lret
outsb
xor
data16
lcall
sbb
rcl
pop
and
pop
and
cmp
in
mov
rcr
cld
jns
je
scas
test
sub
cmp
int
outsb
cs
sub
mov
fwait
inc
or
mov
push
loope
dec
mov
cmc
push
push
out
sub
lock
ret
cmp
unpckhps
pushl
lret
lahf
mov
push
fiaddl
fidivs
jp
mov
pusha
mov
idiv
mov
jmp
pop
rolb
loop
mov
icebp
sbbl
mov
adc
sbb
out
cmp
cmp
or
pushl
cs
pop
cmp
lret
push
xlat
sbb
mov
and
or
int
cld
push
aas
fsubl
jno
pop
cld
loopne,pt
call
mov
push
push
mov
incl
sub
jbe
enter
jge
sbb
cmpb
out
add
incl
int3
xchg
je
test
xchg
fwait
inc
mov
rcrl
lahf
ljmp
jg
out
inc
insl
arpl
push
fwait
repz
mov
cmp
dec
xchg
loope
out
mov
adc
mov
into
sbb
jge
clc
add
mov
mov
out
xchg
xchg
xlat
xchg
mov
movsl
mov
xchg
mov
inc
push
dec
dec
jp
or
add
incl
and
fwait
cltd
push
mov
jecxz
in
xor
mov
setne
jne
in
pop
cltd
mov
jge
in
pusha
mov
and
js
push
inc
in
hlt
clc
push
sub
int3
mov
mov
or
adc
jle
mov
in
mov
lods
int
loope
sbb
bound
hlt
mov
dec
enter
outsl
push
call
add
addr16
stos
xor
shll
test
aaa
xchg
jbe,pn
jmp
shll
and
xchg
cmp
or
in
pop
test
inc
popa
fs
jl
sub
push
xor
jb
lcall
cmpl
ljmp
ss
adc
in
dec
pop
pusha
sub
pop
decl
leave
lcall
cmp
fwait
aam
inc
dec
filds
push
hlt
imul
and
out
fcomip
sub
sub
jecxz
fstps
xchg
clc
iret
xchg
out
cld
pushl
inc
lcall
dec
sbb
jp
jmp
mov
ja
mov
jb
test
mov
dec
or
adc
outsl
jg
push
cmp
jnp
bswap
movsl
jno
xchg
test
sub
in
movsl
xchg
fdivrl
pop
mov
shll
ljmp
mov
cmp
cli
xor
mov
add
fistps
fsqrt
jne
add
jp
insb
mov
jle
push
sar
or
jg
mov
adc
push
adc
cmp
incb
js
jno
rcl
pop
push
std
jg
decb
je
movl
sbb
jb
mov
inc
and
enter
mov
push
xchg
ljmp
cli
cmpb
loop
jle
stos
mov
push
dec
dec
inc
push
dec
inc
add
inc
jb
icebp
decl
pop
ja
bound
push
outsb
insb
jne
inc
jns
insl
push
pop
add
push
lcall
pushl
popa
arpl
xor
push
xor
pushf
add
push
push
dec
push
inc
pop
inc
inc
dec
outsl
lcall
add
xor
pushw
add
js
jno
outsl
jbe
push
ja
popa
dec
mov
push
mov
mov
jbe
push
dec
popa
jb
add
jo
push
outsl
dec
inc
add
popa
ss
mov
jae
inc
inc
dec
inc
inc
cli
dec
adc
add
cs
mov
dec
push
inc
inc
push
dec
dec
push
push
jb
jbe
arpl
mov
outsb
gs
push
dec
inc
inc
outsl
jno
bound
fidivs
js
outsb
lock
sahf
push
aaa
jb
xor
inc
inc
push
inc
push
inc
push
inc
dec
dec
dec
dec
ljmp
pop
sub
aaa
dec
inc
push
jne
jae
je
push
xor
jne
jg
pushl
push
inc
dec
push
push
xor
cmp
xor
outsl
in
testb
imul
inc
inc
dec
add
dec
push
dec
push
ljmp
dec
dec
inc
inc
dec
push
dec
push
sbb
push
dec
xor
jb
dec
add
inc
inc
push
push
sti
xchg
jne
dec
add
push
je
add
aaa
xor
flds
repz
popa
outsb
jae
imul
aaa
xor
lcall
popa
insl
mov
jae
pop
cld
mov
push
dec
inc
dec
inc
hlt
push
add
ja
jno
pop
cld
pop
insb
test
jbe
outsl
xor
push
je
jno
ja
mov
divb
jae
mov
dec
dec
pop
jb
pop
xor
loopne
fisubrs
xor
jl
mov
pusha
push
dec
add
js
insl
jo
xor
imul
outsl
outsb
jns
pop
pop
push
dec
push
or
sbb
adc
dec
xor
lcall
insl
ja
arpl
data16
imul
imul
ja
xor
ds
imul
std
fbstp
push
jae
jno
dec
jns
bound
xor
inc
xor
data16
add
lock
dec
xor
inc
dec
xor
adc
xor
jno
js
inc
xor
dec
dec
ja
movsb
sbb
stos
loop
xor
push
dec
inc
inc
scas
inc
pop
and
mov
fs
push
inc
push
mov
push
push
popa
dec
imul
clc
aaa
adc
je
je
insb
inc
push
bound
mov
das
cwtl
push
jno
js
pop
inc
dec
dec
push
dec
inc
push
push
push
dec
jne
or
push
je
fcompl
mov
call
jno
xor
ja
addr16
gs
push
addr16
pop
dec
dec
xchg
mov
inc
push
inc
push
aaa
imul
dec
push
cmp
out
cmp
add
loope
std
fistl
xor
imul
dec
push
push
push
dec
bound
dec
push
jae
jg
xchg
push
call
dec
ja
xor
imul
inc
imul
push
jbe
push
bound
jo
mov
push
jns
jbe
pop
bound
outsl
jo
mov
push
inc
mov
rcrl
inc
in
cmp
jae
mov
jb
aam
scas
loop
xor
xor
xor
dec
ret
icebp
adc
popa
push
dec
je
xor
xor
insb
outsb
add
fnstsw
arpl
push
sub
push
add
jg
ret
mov
ja
push
shl
sbb
je
push
insl
imul
inc
xchg
push
int
jl
xor
aaa
ss
sub
push
cmp
sbb
adc
je
jb
inc
pop
adc
xchg
inc
jbe
cmp
push
mov
insb
imul
js
js
popa
pop
hlt
sbb
addr16
pushw
add
jo
push
dec
xor
jp
dec
data16
push
ja
push
jns
push
insl
push
sbb
popa
inc
data16
dec
push
dec
push
cmc
sbb
dec
outsb
dec
push
imul
xor
jbe
aaa
mov
xor
dec
push
lods
push
inc
dec
pop
inc
insb
inc
pusha
xor
or
aam
xor
sub
dec
adc
sbbl
out
js
add
jae
bound
jo
ja
je
pop
add
pop
pusha
push
popa
adc
imul
push
bound
inc
and
pop
dec
inc
dec
pop
cmc
stos
sub
popa
addr16
inc
dec
dec
push
inc
cmp
inc
push
push
sti
ja
push
jae
imul
insb
dec
subb
lods
loop
bound
ja
adc
push
popa
jno
or
add
dec
ja
jbe
jo
ret
mov
sub
dec
push
jb
cmp
stos
pop
push
cwtl
ss
push
mov
push
push
dec
pop
xchg
imul
push
dec
push
cmp
cli
lcall
into
pushf
or
add
mov
outsb
pop
arpl
inc
inc
adc
out
push
dec
push
dec
push
mov
inc
popa
mov
inc
dec
sub
ret
jl
xor
jle
outsl
mov
cwtl
popa
ss
imul
jbe
dec
inc
pop
stos
push
xor
mov
add
insb
arpl
or
fidivs
dec
cmp
js
cli
push
sti
xor
loopne
js
inc
arpl
xchg
sub
dec
inc
push
inc
outsl
outsb
jp
shlb
sub
mov
cmp
push
mov
fiadds
adc
and
inc
dec
insl
inc
or
gs
xchg
dec
pop
dec
inc
inc
dec
push
hlt
and
out
dec
lock
dec
push
repnz
mov
mov
enter
pop
inc
xchg
sub
dec
xlat
sub
or
push
dec
jno
dec
adc
push
jne
inc
push
dec
and
add
out
add
insl
popa
cmp
nop
aam
add
dec
pop
dec
pop
in
test
inc
out
les
push
push
cmp
les
sbb
xlat
sbb
in
inc
lods
and
mov
insl
popl
fs
inc
lret
shll
data16
aaa
xor
rolb
xor
push
or
into
imul
jle
das
sbb
fs
jae
jne
jns
insl
outsl
sbb
pop
xchg
xor
cwtl
shlb
push
scas
das
xor
cmp
inc
dec
push
pop
cmpb
push
loope
xchg
inc
and
ja
loopne
rcrb
jo
inc
fisubs
bound
push
push
inc
pop
jns
push
mov
imul
imul
scas
cmpsb
ljmp
or
test
js
adc
add
outsl
stos
and
sbb
popa
outsl
ja
test
inc
adc
in
scas
push
inc
and
xlat
jg
push
jb
xor
ja
dec
nop
xor
addr16
js
jne
loopne
dec
inc
sbb
fsubrl
jns
insl
cmp
dec
and
inc
push
movsb
pop
push
sbb
sub
mov
pop
dec
testb
outsl
xchg
inc
push
inc
push
inc
push
movsb
jl
push
inc
push
xor
inc
ss
insb
out
outsb
xor
outsl
decb
mov
sub
dec
cmp
or
jle
inc
inc
push
xchg
mov
mov
movsb
divb
clc
pop
lock
inc
inc
pop
push
mov
dec
and
imul
xchg
add
gs
ja
gs
xchg
push
pop
dec
adc
mov
mov
dec
andb
push
je
push
add
es
into
dec
adc
inc
dec
dec
dec
addb
sub
sub
pop
jl
je
arpl
push
aaa
clc
popa
pop
push
or
outsb
xor
jns
or
push
dec
dec
dec
dec
ja
xor
push
push
push
jns
mov
push
fsubr
inc
addr16
int3
sahf
add
hlt
mov
insl
and
pushf
push
push
dec
dec
mov
push
inc
inc
push
inc
pop
sbb
mov
xor
push
arpl
cli
mov
clc
pop
xor
sbb
jbe
push
dec
push
push
fs
mov
sbb
push
dec
dec
dec
dec
jno
fs
aad
mov
pop
insb
inc
in
inc
loope
and
push
dec
and
bound
sub
outsl
jns
inc
pop
push
pop
and
dec
jb
jo
dec
and
dec
jb
or
mov
ds
push
sub
push
inc
movsb
dec
add
push
insl
inc
jns
js
jno,pt
mov
push
cmp
imulb
sbbb
add
lret
inc
inc
dec
inc
cmp
adc
fdiv
inc
push
sub
push
dec
fs
pop
dec
mov
sub
mov
add
insl
fs
popa
jo
addr16
out
add
fwait
inc
iret
inc
xor
fs
adc
sub
sub
loop
es
dec
lods
les
xchg
mov
fwait
inc
call
jbe
arpl
mov
push
js
ss
mov
mov
test
jns
dec
jae
pop
add
lret
dec
imul
push
xchg
lods
jo
jb
dec
imul
scas
or
mov
xchg
inc
mov
xor
lock
divb
outsl
outsb
xor
sbb
push
aam
mov
inc
pop
inc
push
jns
inc
incl
or
mov
add
jbe
push
jne
inc
xchg
aad
insl
call
xor
push
jno
outsl
lock
lret
mov
pop
lods
push
cmp
xor
mov
ds
push
dec
insl
ja
and
outsl
stos
popa
arpl
fs
push
push
push
fs
fwait
addl
adc
add
and
inc
xchg
dec
push
push
push
inc
popa
addb
inc
cmpsb
stos
jle
adcl
jne
dec
arpl
fs
push
cwtl
inc
pushf
push
push
bound
mov
movsb
clc
push
dec
pop
je
mov
ret
scas
pop
in
dec
je
xor
push
push
xor
mov
adc
add
fcom
adc
jb
je
jb
js
ds
ret
stos
xor
push
cmp
outsb
mov
cmpsb
adc
jne
cli
sub
pop
addr16
add
jns
outsb
dec
fs
mov
pop
inc
mov
jb
pop
sub
sub
cmpsb
or
je
push
call
add
ror
mov
jno
cmp
xor
dec
xor
mov
rol
in
fcomps
lods
pop
insb
dec
adc
jle
cs
inc
dec
mov
inc
push
dec
push
pop
loop
inc
pop
mov
mov
inc
adc
movsb
dec
stos
outsl
xchg
push
dec
cmp
jno
jae
bound
inc
xchg
sbb
jb
push
in
adc
popa
xor
inc
dec
mov
dec
insb
bound
dec
outsl
stos
mov
xor
bound
mov
incl
jns
imul
out
jb
je
je
cli
or
mov
or
ret
pop
ja
mov
push
lock
sbb
push
push
inc
bound
loop
push
inc
data16
mov
push
mov
lcall
bound
roll
or
cwtl
sbb
xor
dec
jo
dec
gs
cmpsb
and
push
outsb
inc
jae
push
fnsave
cmp
dec
fcoms
xor
loopne
lods
mov
adc
push
mov
fs
outsl
addr16
inc
pop
icebp
lcall
shrb
push
data16
arpl
push
dec
push
inc
push
inc
stos
lods
ljmp
insb
jae,pn
mov
add
inc
arpl
push
jbe
adc
push
insl
or
jbe
js
xor
sub
fimull
cmp
jo
and
js
stos
lcall
push
sbb
or
jne
push
inc
push
push
mov
roll
adc
push
inc
faddl
inc
imul
push
jns
xor
in
imul
sub
insb
insb
outsl
out
inc
bound
jae
rol
xor
loop
ss
addb
lret
push
dec
jno
or
sbb
repnz
xchg
insb
or
pusha
test
cmp
and
jo
outsb
push
sbb
mov
pop
loop
push
insl
outsb
inc
push
dec
push
je
imul
dec
adc
aam
jp
pop
sbb
inc
inc
in
mov
ljmp
pop
xor
push
xor
js
es
pop
lcall
imul
cld
adc
lods
int3
or
push
push
mov
jle
adc
jae
push
aaa
dec
inc
sahf
call
jge
inc
jbe
push
inc
push
jbe
arpl
jo
js
imul
cld
sub
inc
dec
bound
pop
movsb
nop
push
rorb
push
es
jne
add
jbe
or
jbe
add
mov
mov
xor
inc
rorb
dec
dec
fsub
pop
push
lods
push
pop
push
inc
jl
dec
push
fs
cmpsb
jb
stos
push
aaa
ja
ds
ljmp
jb
mov
and
dec
jecxz
or
ja
imul
inc
xchg
inc
fs
mov
add
je
sbb
mov
jecxz
arpl
jns
bound
dec
dec
push
jl
imul
jns
lods
mov
mov
jbe
shrb
call
into
push
pusha
pop
inc
js
aaa
shlb
shrb
sub
bound
fidivl
push
jno
adc
mov
jno
arpl
inc
push
rcrb
mov
dec
push
or
inc
inc
sub
push
dec
pop
or
pop
mov
call
push
ret
sub
mov
cld
xor
push
and
inc
add
ja
inc
js
fs
add
outsb
stos
add
add
jbe
dec
xchg
dec
push
imul
push
push
inc
inc
jne
lods
test
test
data16
push
jo
jae
push
add
mov
push
xor
xchg
rcl
add
mov
repnz
and
mov
and
les
mov
inc
lahf
mov
orl
int3
lock
and
orl
cs
adc
mov
je,pt
movsl
sbb
or
or
push
imul
pop
dec
insb
sbb
xor
add
mov
adc
push
imul
adc
cmp
mov
sbb
out
inc
mov
push
jmp
xchg
fadds
mov
ss
rcll
pop
sbb
rcrl
pop
or
mov
xchg
add
insb
fisubrl
mov
dec
pushf
lods
push
pop
cmp
jge
scas
clc
jb
cmp
imul
inc
mov
arpl
push
ret
insl
inc
jae
notb
daa
pop
das
push
xchg
setb
or
sbb
out
sbbb
dec
xor
faddp
add
or
xor
cmp
inc
cld
adc
push
add
out
xchg
dec
or
lea
pop
test
fwait
dec
mov
scas
or
dec
lods
nop
sub
sbb
jecxz
fmul
in
pop
psubsb
fcmovnbe
and
jl
sbb
ror
mov
cmpb
pop
insl
int
sub
popa
test
nop
cmp
ja
and
inc
aas
cmc
xchg
push
divb
jns
add
stos
mov
xchg
ljmp
sub
pop
repnz
sbb
cmc
sub
pop
sbbb
and
jo
adc
fistl
or
adc
lahf
xlat
xchg
fbld
cmp
add
cltd
add
popa
add
add
mov
mov
mov
pop
aaa
cmp
insl
jbe
sub
mov
xchg
and
stos
in
sbb
repnz
push
push
mov
pop
and
adc
roll
jne
cs
fs
inc
mov
shl
or
movsl
dec
add
out
mov
fwait
stos
jns,pn
jns
xor
ffreep
aam
pop
lret
insb
notl
sbb
icebp
mov
xchg
push
add
pop
inc
cmp
or
pop
or
mov
call
add
je
insb
xor
add
loope
mov
sti
sbb
ficomps
inc
mov
decl
mov
add
add
xchg
out
sbb
dec
into
popa
mov
in
sub
push
out
pusha
mov
xor
jne
lret
aaa
jle
xchg
dec
add
mov
cmpsb
sti
xchg
ja
fwait
je
sbb
sbb
adc
jne
pop
scas
push
push
repz
xchg
outsl
minps
pop
in
pusha
dec
jb
add
sbb
pop
sub
mov
mov
dec
aad
rcrb
ljmp
dec
push
iret
dec
sub
xchg
inc
imul
adc
addr16
jne
pop
mov
xor
ret
stos
add
mov
leave
std
add
popl
pop
xor
xchg
add
push
mov
ret
inc
or
push
mov
rcll
ja
push
or
xor
jb
jbe
imul
shlb
sbb
add
push
fisttpl
stc
popf
or
loop
mov
inc
xor
andb
fs
xor
xor
xor
mov
stos
or
insl
mov
and
loope
int
adc
rorl
add
test
inc
enter
stos
inc
pushf
cmpsl
inc
aad
sbb
adc
shl
dec
mov
bound
sbb
inc
or
js
out
fdiv
call
sahf
jne
subl
jle
inc
aas
pop
ret
mov
or
cwtl
and
mov
popf
mov
dec
sub
mov
mov
test
xor
mov
bound
add
cmc
je
bound
pop
jl
lods
add
adc
sub
and
inc
mov
pop
loopne
inc
adcl
xorb
inc
sbb
mov
nop
test
ja
idivl
and
mov
fldcw
inc
jns
loopne
xchg
pop
cmovo
in
or
loopne
jge
out
push
xor
data16
jecxz
lods
sbb
pop
adc
push
ret
or
stos
icebp
mov
or
mov
xor
adc
cmp
popa
push
enter
xchg
out
cmp
and
aad
add
leave
add
arpl
popf
daa
jns
push
and
es
es
ret
movsb
loopne
dec
fsts
add
dec
xlat
js
sbb
ror
mov
sub
inc
or
dec
pop
add
pop
or
or
es
inc
insl
inc
or
shrd
and
pop
mov
mov
cmp
mov
add
mov
push
fadd
push
mov
mov
cmp
je
push
mov
cmpsb
add
sahf
in
xor
push
das
int3
in
sbb
jns
xchg
movsl
loopne
push
insl
pop
and
es
leave
or
sahf
aad
enter
jne
jg
je
stc
in
cmc
jecxz
mov
leave
leave
push
dec
cmp
enter
add
cmpsl
mov
fwait
mov
nop
testb
cmpsl
fstpl
pop
imul
shll
dec
jns
aad
pop
imul
iret
lcall
cld
push
pop
mov
popa
popa
enter
mov
push
subb
adc
sbb
push
imul
leave
pushl
xchg
adc
adc
push
bound
pusha
and
xchg
cld
push
push
xchg
std
int3
stos
jmp
scas
out
pop
ds
cmc
pop
arpl
jp
add
aas
jge
dec
xchg
cltd
xor
inc
shl
outsl
sti
gs
ret
dec
imul
cli
imul
mov
xchg
int3
jns
jne
fmuls
ficoml
movsl
jae
jb
insl
ret
cmc
sarb
mov
mov
sbb
push
bound
or
pop
shll
sub
rolb
outsl
add
cld
xchg
outsb
mov
or
nop
push
lea
filds
in
sbb
sub
jno
movsb
int3
dec
sub
out
xchg
mov
aam
add
addr16
mov
push
mov
das
inc
inc
stos
or
addl
dec
mov
mov
jo
and
inc
fstpl
negb
shrl
inc
out
sbb
jmp
xor
shll
ss
dec
mov
xchg
pop
fsubrl
sub
add
mov
jmp
ja
loope
xchg
jecxz
adc
mov
imul
xor
loope
or
out
movsb
sbb
sbb
call
clc
inc
rcll
push
shlb
in
enter
inc
sbb
xchg
dec
jbe
sbb
sahf
jnp
in
cs
and
mov
enter
or
mov
sub
dec
lods
dec
js
jns
lods
mov
inc
cs
or
std
leave
push
sbb
or
repz
sub
and
inc
sbb
adc
in
rcr
jecxz
cmp
imul
insl
pop
daa
es
out
cmpsl
xor
adc
cltd
test
and
pop
mov
sbb
xchg
xor
pusha
add
sub
jle
in
mov
xchg
sbb
or
xchg
stos
dec
mov
xchg
addr16
add
in
enter
push
mov
jmp
adc
jle
xchg
cmp
enter
idivb
add
dec
cmp
cmpsl
or
inc
mov
pop
clc
outsb
lods
or
das
xchg
pop
stos
stos
out
cmp
in
das
dec
movsb
add
push
test
ja
roll
ret
shrb
movsb
jns
mov
test
pop
push
add
test
sub
les
je
xor
pop
sbb
push
ja
test
sbb
mov
insl
sbb
xor
adc
pop
mov
xor
loop
mov
dec
test
or
imul
lds
lcall
add
loopne
dec
cmpl
add
or
inc
mov
adc
inc
mov
addr16
sub
pop
add
cmp
test
xchg
sub
icebp
xchg
push
mov
mov
test
jbe
enter
pop
xor
sarl
lods
or
sub
leave
sbb
pusha
jmp
rcll
pop
push
add
repnz
lahf
jecxz
cmp
mov
inc
push
imul
jno
xchg
add
mov
jae
sbb
jmp
dec
push
xchg
push
xchg
cwtl
mov
and
pop
andl
inc
cmp
inc
push
gs
icebp
loope
popf
cwtl
sub
lret
test
lret
or
imul
movsb
mov
add
stos
roll
and
inc
push
adc
fildl
loope
es
mov
xor
es
xchg
lods
test
xchg
aam
aaa
adc
and
sbb
es
mov
enter
notl
add
lods
dec
imul
xchg
inc
je
add
imul
adc
out
mov
mov
sub
cmpsl
cs
sub
mov
lods
icebp
sbb
sbb
dec
jb
or
out
ret
pop
pop
jns
fldcw
ret
mov
inc
loop
cmpsl
cmpsb
xchg
hlt
lahf
ja
cwtl
repnz
mov
cmc
mov
leave
or
ret
push
jmp
dec
rcrl
fnstsw
jecxz
lock
xchg
sbb
ret
imul
inc
push
nop
xchg
fiaddl
pop
mov
pop
mov
popa
mov
movsb
cltd
sub
pop
arpl
add
add
mov
enter
das
and
sbb
xchg
out
sub
or
sub
fcmovnbe
mov
into
xor
adc
mov
adc
push
sysret
aaa
bound
push
xchg
mov
jo
pop
sub
dec
sub
mov
cmovge
jns
sbb
push
mov
xor
lods
pop
cmp
xor
lds
ss
arpl
jnp
imul
cmp
jne
push
mov
mov
mov
ja
std
push
es
push
push
aad
enter
pop
mov
and
xchg
mov
dec
xor
add
jnp
mov
xlat
dec
les
cmc
cld
lea
mov
sbb
roll
cld
in
push
xor
push
stc
leave
pop
jmp
shl
lock
sub
add
loop
mov
das
xchg
jns
testb
pop
mov
das
adc
mov
pushf
or
shlb
xchg
jb
cwtl
je
xor
clc
shlb
pop
fmuls
inc
add
jns
and
jecxz
or
cmp
dec
lcall
dec
aaa
push
repz
add
push
imul
movsb
ljmp
ficoml
dec
dec
adc
xor
jmp
xorb
inc
add
test
fiaddl
lock
adc
push
dec
cmp
push
aas
out
movsb
pop
fstps
nop
jge
push
push
sub
in
xor
xor
add
leave
cmp
and
aam
in
pop
adc
test
rolb
pop
mov
test
fildl
daa
in
push
mov
or
scas
sbb
fisttpll
cmp
repz
adcl
pusha
pusha
enter
jno
mov
adc
repz
or
mov
test
mov
xchg
mov
insl
sbb
cmc
adc
rcll
or
cli
cs
push
popf
adc
mov
es
sbb
mov
jne
mov
sbb
imulb
aaa
add
add
sbb
cltd
ja
dec
mov
add
adc
push
insl
or
fwait
and
dec
int3
or
and
icebp
and
fadds
mov
xor
cld
mov
push
cmp
jecxz
jle
mov
cltd
dec
sbb
jg
and
cmp
nop
pop
andl
mov
scas
sbb
xor
or
adc
repnz
scas
es
xchg
ret
push
adc
popa
jb
inc
dec
arpl
xor
inc
and
or
ret
sub
loop
es
xchg
out
es
sti
inc
add
jae
call
add
mov
dec
es
adc
sub
jae
or
cmp
ret
mov
vmovupd
push
sbb
sbb
movsl
ret
xchg
out
idivb
and
inc
test
icebp
sub
mov
sbb
dec
aaa
dec
jno
int
or
sbb
push
gs
and
shl
xor
ret
imul
loop
cmpb
clc
mov
xor
xor
into
push
jo
mov
std
pop
jo
dec
add
xchg
push
xchg
inc
sbb
add
push
scas
pop
shl
fcoml
sarl
pop
sub
test
dec
inc
ja
fiaddl
mov
and
cmp
pop
lcall
pusha
cmp
in
repz
out
push
or
jecxz
mov
int
int
push
shll
out
lret
arpl
adc
push
rcr
adc
dec
aaa
sbb
arpl
xchg
sub
iret
mov
pop
xor
adc
rorl
cmpsb
sbb
dec
cmp
stc
cmpsb
cmp
mov
jb
bound
xor
stc
mov
jmp
sti
mov
cmp
push
mov
jne
fnstenv
roll
stc
rorl
test
daa
stos
push
sbb
dec
aam
sbb
fidivrs
dec
loope
imul
or
mov
adc
pop
xchg
jl
or
jno
bound
adc
xchg
or
shrl
in
pop
and
pop
ret
shl
imul
cs
push
insl
adc
jno
pop
or
pop
cwtl
sub
sub
adc
sub
inc
pop
lea
xchg
mov
in
sbb
stc
add
push
in
xchg
stos
out
or
sub
push
pop
push
xchg
push
push
cltd
loope
mov
xorl
jl
xlat
inc
rcll
incl
in
xor
push
jne
mov
orb
arpl
mov
add
sub
sbb
lock
dec
jg
cs
xor
mov
fcomip
in
add
add
sbb
ret
inc
jb
fldl
fs
cmp
jl
pop
in
or
add
push
sarl
dec
movsl
fnstsw
jb
ja
xchg
orl
jmp
or
cmp
movsb
addr16
out
and
out
test
pop
clts
int3
sub
cmp
scas
xor
xchg
outsb
sub
sahf
imul
or
ror
int
orb
rcl
xlat
inc
add
push
ret
cmpsl
lea
nop
cmp
sbb
call
pop
sub
push
mov
mov
sub
subb
inc
xchg
cmp
sub
adc
ret
ret
arpl
js
popf
xor
pop
or
xor
xchg
mov
or
movsb
imul
mov
cmp
call
jae
and
xchg
shl
sbb
ss
inc
mov
mov
jmp
js
pop
sub
andb
or
ret
aaa
or
add
push
mov
test
pop
les
sub
ds
xlat
mov
push
ljmp
rclb
xchg
cmp
repnz
icebp
inc
std
pushf
jbe
sbb
sbb
and
std
or
add
mov
push
add
add
call
sbb
cmp
fadd
mov
inc
push
daa
jno
sbb
popa
std
dec
fdivrp
popf
xchg
clc
mov
lcall
or
fcomps
xchg
xor
shll
es
push
shrb
popa
rcrl
stos
insl
xchg
js
test
sub
dec
lcall
orl
jns
mov
add
add
scas
lea
or
ret
fimull
xor
jo
jae
add
test
cli
adc
adc
dec
mov
mov
cmpsb
jecxz
mov
lods
dec
mov
push
inc
aad
xlat
or
cmp
ljmp
notb
jnp
popa
mov
daa
xchg
adc
pop
frstor
adc
lods
cli
or
inc
cmpsb
or
sbb
push
loop
inc
xor
aad
dec
pop
cmp
pop
mov
pusha
rcl
jae
leave
mov
inc
loopne
andl
scas
push
and
jg
cmpsl
add
sub
les
push
xor
jne
xchg
movsl
mov
or
enter
mov
or
or
cmp
add
push
sub
mov
adc
in
sbb
int3
test
push
movsb
popa
sub
xor
cmp
rorb
pop
sbb
mov
cmp
loop
sbb
push
inc
leave
arpl
mov
dec
xor
push
aad
sub
add
lret
lea
xchg
add
sbb
test
daa
je
push
jmp
xchg
ja
pusha
mov
push
inc
push
xor
xchg
dec
jmp
mov
sahf
dec
add
test
scas
lcall
out
xchg
push
mov
mov
xor
aas
out
mov
push
fistpl
rol
pop
leave
xlat
and
popf
jp
leave
shrl
and
pop
ljmp
mov
xor
xorb
push
jg
push
addl
je
sub
and
push
sbb
push
mov
nop
cmpsb
sbb
dec
stos
sbb
cmp
xchg
mov
dec
sbb
aaa
je
icebp
std
jbe
push
bound
jecxz
inc
enter
cmp
add
fs
sti
shlb
popa
xor
push
and
inc
in
loop
mov
mov
dec
in
lods
cltd
aas
sub
loope
lods
test
push
mov
ljmp
mov
lcall
pop
ret
inc
out
or
pop
std
rorb
cltd
xchg
imul
sbb
xchg
pop
sti
pop
sbb
and
mov
mov
mov
dec
cmp
xchg
sarl
and
mov
ret
scas
jl
out
sbb
and
sbb
inc
add
jno
movl
mov
push
xorb
cmpsb
adc
xchg
xor
fimull
push
fchs
xchg
pop
lcall
sbb
xchg
loop
arpl
sub
pusha
cmp
shll
loopne
jp
mov
sbb
lods
sub
leave
adc
pop
pop
xor
popf
push
cmp
dec
lret
mov
push
lds
pop
push
insl
and
and
enter
notb
push
jae
iret
and
mov
sub
mov
lret
and
loop
out
incl
les
cmpsb
imul
out
mov
cmc
inc
mov
sbb
jmp
hlt
pop
push
add
xchg
and
add
pusha
dec
and
pusha
dec
mov
mov
cmp
push
adc
jo
pop
dec
arpl
mov
sub
inc
xchg
icebp
and
data16
femms
cmp
mov
repnz
idivb
pop
lea
sahf
xchg
xchg
or
cmpsb
push
cmpsb
daa
sarl
or
cmp
push
iret
test
dec
and
test
sbb
test
fs
jne
xchg
stc
sbb
xor
loopne
xor
stos
jne
test
add
cmp
popf
ficoml
push
cmp
push
sti
inc
or
adc
mov
insb
jne
shll
inc
xchg
adc
or
push
adc
mov
lock
sub
xorb
imul
imul
mov
ret
sub
stc
jge
jl
lahf
arpl
test
sub
cmp
and
mov
filds
push
popa
cmp
add
jno
in
leave
orb
mov
and
repz
ret
imul
cmc
or
mov
mov
mov
xorb
sbb
pop
nop
mov
pop
xchg
fstl
cmp
xchg
jo
push
push
in
jns
mov
sbb
mov
stos
xor
aam
xchg
push
pusha
jo
xchg
and
mov
push
pop
pop
cmp
xchg
rcl
add
ljmp
mov
fnstcw
sarl
movsl
ljmp
mov
addl
rorl
sub
ljmp
loope
pop
mov
adcb
lea
xor
push
pop
popa
int3
gs
push
or
xor
mov
xchg
mov
xchg
mov
xor
inc
rcr
add
out
pusha
lds
sbb
or
popa
sub
out
gs
fs
les
in
or
cmp
pop
fiaddl
push
adc
xchg
xchg
ficomps
daa
cmpsb
scas
xchg
fwait
imul
push
movsl
pop
dec
out
xchg
push
cmp
adc
cltd
or
fld
cli
dec
cwtl
bound
aad
fldcw
mov
shrb
lea
mov
sub
pop
adc
aad
pop
pusha
push
shl
or
jne
movsl
es
frstor
ds
mov
out
dec
push
adc
adc
sbbl
or
in
mov
xor
je
sbb
push
cmp
sbb
andl
mov
push
push
stc
adc
movsl
dec
enter
clc
cmc
es
mov
test
hlt
xor
add
test
leave
aas
lods
pusha
inc
testb
xor
mov
lahf
adc
dec
add
movsb
iret
pusha
shrl
cmp
shr
jge
mov
xchg
xor
xlat
shrb
and
pop
push
int
jb
xor
dec
lea
ficoms
daa
add
mov
popa
adc
mov
push
dec
xor
inc
insb
mov
pop
ret
inc
test
das
shll
pop
xlat
xchg
scas
mov
pop
jno
jno
rcrb
sarb
cld
sub
add
es
jmp
insb
add
adc
jge
push
inc
aam
daa
dec
ret
mov
adc
pop
cmpsl
stc
test
jb
jae
push
xor
popa
xor
xor
scas
jecxz
mov
rcrl
pop
xchg
rorl
cmp
adc
outsl
and
add
nop
inc
in
bound
cmpsb
in
add
add
pop
arpl
push
insl
xchg
loop
dec
cmp
jecxz
fiaddl
ja
push
arpl
dec
pop
add
add
dec
push
movsl
xlat
test
mov
xchg
xchg
cmp
scas
movsb
jnp
call
jg
pop
xor
psrlw
rolb
xlat
cwtl
scas
fwait
xor
mov
lods
imul
nop
push
push
arpl
cli
and
or
sbb
cmp
xor
or
inc
out
mov
ljmp
dec
addb
cmc
pop
icebp
insb
xor
mov
pop
shlb
fwait
into
das
ss
or
adc
inc
and
add
and
mov
sbb
or
and
push
popa
fadd
xchg
outsl
dec
cmp
dec
fstpl
mov
jo
jne
inc
xlat
mov
pop
pop
fsub
addr16
dec
lret
repz
xor
inc
pop
mov
je
inc
pop
out
or
dec
ret
test
jecxz
lret
loope
push
fstpl
sub
jmp
or
jecxz
imul
stos
shrb
push
xlat
pop
popf
rol
cmp
rcrb
sbb
cmpsl
stc
std
mov
call
cmpsl
inc
xor
mov
or
jmp
mov
push
out
xor
sbb
lret
mov
adc
ret
fldenv
add
push
std
aad
stos
pop
in
mov
out
cmp
push
dec
rol
scas
xor
inc
add
pop
mov
inc
test
xchg
push
stos
mov
push
and
inc
mov
test
imul
push
cwtl
data16
mov
dec
int
mov
and
adc
or
lds
push
mov
arpl
arpl
xor
dec
xchg
loopne
lods
arpl
xchg
leave
adc
inc
movsl
int
incl
pop
jecxz
inc
and
sbb
popa
fisubs
rclb
mov
cmp
inc
mov
cmpsl
mov
or
and
xchg
xor
push
insb
sub
aam
cmp
les
inc
mov
cs
shl
gs
xchg
mov
push
arpl
sub
data16
mov
push
jge
pop
push
add
xor
dec
or
popf
iret
iret
ret
and
das
stc
aas
pop
cli
in
stos
pop
cmp
lret
inc
adc
inc
xor
xor
and
out
sahf
or
mov
sub
mov
sub
mov
or
xor
mov
pop
xor
ret
or
or
test
jo
jl
je
add
adc
push
jp
push
test
mov
leave
dec
sbb
sbb
push
popa
cmpb
push
xor
cmp
and
les
popa
arpl
nop
inc
pop
cmc
xchg
sar
pop
sbb
movsb
and
inc
pop
xchg
jp
add
ljmp
cmc
loope
add
pop
add
dec
frstor
dec
jmp
fists
pop
daa
sti
sbb
add
xor
adc
ss
mov
mov
dec
aaa
loopne
xchg
call
xor
mov
adc
icebp
or
scas
cmpsb
movl
dec
movsb
cmp
inc
aad
fstl
test
shll
mov
xor
sub
pop
stos
sbb
inc
pop
pop
and
mov
sahf
sbb
aam
addr16
or
addb
cmc
scas
adc
xor
jae
jp
test
cmp
pop
aad
pop
and
adc
sub
push
std
aad
sbb
lea
pushf
sbb
jl
dec
lcall
add
cmpsb
call
les
test
lea
in
cmp
mov
lock
mov
enter
test
mov
lea
xchg
or
add
push
xchg
push
data16
fistpl
push
push
ljmp
sub
mov
insl
fcmovb
adc
inc
cmp
sbb
into
mov
int
add
mov
cld
and
int3
adc
inc
inc
adc
jl
mov
loope
enter
add
loope
push
push
nop
sbb
rolb
mov
inc
sbb
push
jl
add
or
mov
aam
std
sbb
cmpsb
mov
mov
dec
repnz
mov
jmp
jl
ret
enter
sbb
adc
jo
mov
stos
xchg
xor
or
mov
ret
mov
or
jg
pop
rcl
orl
xchg
jle
push
imul
mov
xchg
pop
mov
sbb
std
arpl
les
sub
aaa
out
enter
fwait
push
or
push
mov
ffree
push
loope
mov
or
lds
jp
aam
mov
sub
ljmp
ljmp
clc
mov
test
mov
push
inc
xchg
xchg
rorl
mov
mov
popf
inc
or
adc
pop
loop
shll
push
dec
inc
icebp
inc
in
leave
mov
sti
xlat
pop
cmp
pop
ret
jnp
xor
orb
mov
imul
or
xor
pop
hlt
add
fists
arpl
mov
or
mov
lds
and
cmp
repz
cmp
stos
mov
pop
fwait
or
inc
add
jmp
mov
inc
mov
sbb
lahf
add
ret
daa
add
lcall
arpl
mov
stos
jmp
lods
or
xorb
aaa
inc
inc
add
pop
mov
dec
enter
lds
icebp
xlat
xor
loopne
mov
les
mov
roll
mov
popa
jmp
in
js
icebp
imul
push
rorl
test
lea
cmc
ljmp
xchg
xchg
pop
lock
mov
add
loope
adc
popa
nop
dec
js
push
imul
xchg
rorl
sbbl
mov
stc
pop
dec
xor
adc
or
adc
je
dec
xor
or
shlb
mov
stc
inc
repz
andl
xchg
mov
jno
rol
aam
outsl
in
cmp
pop
xchg
cmpsb
sub
rcll
adc
in
mov
cmpsl
add
push
loopne
leave
push
cmpl
fidivrs
jo
loopne
jmp
push
mov
xchg
orl
inc
movsl
xchg
das
add
dec
inc
mov
xor
aad
cmc
fs
pop
or
test
lods
sbb
dec
scas
adc
or
jmp
push
mov
lahf
mov
cmp
dec
or
add
cmp
xchg
dec
shll
test
cmpsl
dec
sbb
rol
xor
add
ljmp
in
push
shll
rorl
outsb
imul
or
mov
stos
mov
sub
jmp
loope
mov
mov
bound
or
jmp
xchg
fisubrs
sbb
cs
cwtl
es
xor
pop
enter
test
adc
decb
lods
mov
lods
aaa
jns
inc
push
out
dec
jae
xchg
cld
addr16
cmp
clc
mov
dec
dec
inc
sub
lahf
loopne
es
xchg
sbb
cmp
daa
or
popf
arpl
popa
ss
sbb
push
xor
ljmp
loope
and
sbb
ds
add
inc
dec
nop
pusha
cmp
test
xchg
test
enter
cmp
repz
insl
cmpsb
icebp
or
out
lock
push
fidivl
cli
fmuls
adc
jge
sbb
push
jnp
xchg
or
loope
jecxz
adc
inc
xchg
cmp
or
inc
jmp
stos
mov
aad
xor
dec
in
adc
sub
xchg
fisttps
arpl
mov
addb
jnp
xchg
dec
scas
xchg
mov
cmpsb
adc
orl
and
hlt
push
popf
mov
addr16
jo
lds
mov
cmp
or
ds
sar
out
inc
xchg
mov
or
testb
pop
adc
add
ja
sbb
push
lea
and
leave
push
rorl
push
dec
scas
cmpsb
pop
push
pop
jns
xor
in
jle
cmpb
dec
stos
popf
addl
mov
mov
test
jmp
adc
lahf
pop
pop
jo
das
in
cmc
lea
lods
retw
mov
iret
add
push
pop
inc
sti
jnp
pop
arpl
insl
inc
xchg
subb
push
rorl
loop
dec
xlat
adc
xchg
pop
fsub
mov
es
jp
sbbl
arpl
or
and
movsb
push
xchg
repz
sbb
jae
xchg
jbe
jno
fstpt
push
dec
mov
add
and
movsl
sti
mov
roll
dec
jg
pop
lds
sbb
scas
sete
ljmp
or
push
orl
out
sub
mov
xchg
mov
movsl
mov
shr
jno
rorl
lahf
ficoms
push
cmp
pop
aad
lret
std
xchg
popl
aaa
jne
test
roll
std
push
jno
imul
inc
add
mov
ret
mov
popf
inc
pop
push
dec
in
lahf
or
stc
rolb
fsubl
aad
fadds
mov
in
push
rorb
popa
pop
or
add
bound
inc
test
push
negb
sub
jne
pop
pop
xlat
scas
mov
pop
sbb
daa
mov
and
aam
mov
sub
adc
sbb
xor
add
test
je
cmpsb
popf
adc
add
lds
xchg
mov
sti
xchg
push
and
cmp
ret
push
insb
cmp
out
ror
or
stc
leave
xchg
sbb
sbb
testl
out
pop
roll
dec
popf
lock
inc
and
cwtl
push
xor
push
and
adc
pop
dec
sbb
dec
xor
adc
cmp
cs
cmp
cwtl
test
imul
mov
fildl
push
xor
aad
and
or
jmp
cmc
sub
sub
adc
and
xchg
xor
ja
add
mov
addr16
cmc
sti
mov
or
cmp
test
inc
and
xor
popf
push
fwait
sbb
mov
mov
xchg
arpl
mov
xchg
cmpsb
fst
filds
push
cmp
pop
rcrl
mov
sbb
scas
xchg
dec
out
imul
iret
mov
jmp
or
repz
popf
sbb
mov
push
outsl
pop
shl
repz
loopne
stc
in
and
push
aaa
fsubs
cwtl
xchg
sbb
popf
xchg
and
mov
mov
and
jg
lahf
or
pop
mov
mov
sub
dec
xlat
pop
or
rol
push
xor
lods
fldcw
pop
xchg
cmp
cwtl
jae
ret
rorb
imul
cmpsl
add
xchg
dec
jmp
aaa
pop
bound
dec
mov
adc
pushl
stc
dec
jb
icebp
popa
in
iret
jmp
pop
stos
jg
js
cmp
daa
push
push
mov
popa
xor
sbb
mov
sub
stos
and
sbb
les
cmovs
addl
jp
sbb
mov
nop
or
or
inc
sbb
mov
hlt
mov
subl
rcrb
andb
cmp
xchg
cmc
jne
icebp
mov
push
aaa
push
mov
roll
imul
jne
mov
mov
jecxz
sbb
xorl
push
in
adc
fucomp
cmp
sbb
sub
cs
and
push
out
jae
adc
bound
daa
pop
cmp
adc
clc
sbb
inc
inc
ret
xchg
mov
push
xor
mov
inc
xchg
mov
lods
push
mov
pusha
inc
sbb
and
jne
inc
xchg
pop
js
inc
dec
mov
inc
xchg
scas
icebp
daa
cmpsl
dec
mov
pusha
test
das
xchg
adc
add
insl
mov
test
faddl
adc
cmpsl
mov
mov
push
xor
ret
mov
mov
xchg
fmulp
push
dec
js
or
sbbl
inc
push
jne
fistps
or
jp
adc
add
and
nop
cli
pop
stos
pop
dec
push
or
andb
pusha
loop
mov
sub
cmpsb
xchg
mov
xchg
xlat
mov
xor
mov
nop
cmp
lea
or
cmc
into
test
sub
add
movsb
bound
rol
mov
jge
mov
fldl
cltd
loope
xlat
lahf
popa
sub
arpl
sub
pop
jo
add
shlb
sbb
test
mov
mov
jne
ja
or
mov
pusha
and
cmp
test
push
cwtl
pusha
dec
xor
inc
adc
xor
and
jo
xlat
jmp
xlat
jne
cwtl
xor
dec
mov
cmp
mov
jp
inc
jo
xor
sbb
add
dec
sub
dec
jmp
push
mov
test
repnz
icebp
adcl
cld
add
mov
push
out
or
xor
cwtl
ret
mov
loopne
pop
mov
sbb
or
aad
cmpsl
xchg
xor
mov
xchg
lea
dec
outsb
push
and
jo
repnz
sbb
movsl
mov
fmull
or
pop
mov
adc
popa
jo
ret
inc
adcl
repnz
sbb
fs
adc
sub
mov
inc
add
mov
data16
mov
lods
mov
cmp
mov
test
nop
inc
pop
dec
arpl
pop
xchg
push
adc
out
pop
dec
mov
push
imul
push
inc
cmp
or
sahf
mov
sbb
add
xor
or
adc
fstl
jl
lock
ret
add
cmp
les
ret
xor
repz
push
mov
xchg
push
pushf
cmp
inc
jle
adc
test
xor
xor
dec
addr16
ja
call
in
sbb
cmp
js
adc
jb
je
inc
scas
hlt
repz
jae
cmp
int
es
jbe
jno
or
and
mov
or
xchg
xor
adc
popa
cmp
push
sbb
and
or
adc
scas
xchg
xor
bound
pop
mov
call
pop
dec
xor
js
add
add
mov
sbb
fs
enter
push
xchg
mov
stos
mov
sub
cmp
mov
fisubs
scas
lahf
push
push
add
push
push
mov
mov
orl
cmp
movsl
inc
clc
mov
or
adc
subl
jae
arpl
adc
mov
adc
test
clc
and
loop
sbbb
mov
mov
test
shrl
pop
push
push
and
jle
ds
jbe
inc
cmp
or
in
test
mov
xor
jge
les
push
sbb
mov
movsl
sub
xor
lahf
jecxz
inc
mov
pop
jge
mov
push
xor
pop
jne
enter
jge
jmp
adc
pusha
aaa
and
lock
sbb
lods
pop
je
jmp
ja
cltd
jge
sbb
adc
das
jno
xchg
xchg
into
ror
aad
xchg
jns
jmp
xchg
sarl
inc
jmp
jns,pn
sti
add
push
inc
lods
or
shl
xor
mov
aaa
pop
test
shrl
scas
add
rorb
popa
aam
repnz
or
lods
aam
lds
aaa
hlt
sbb
mov
mov
dec
mov
push
or
loope
push
mov
jnp
push
jl
mov
fstl
jg
xor
xchg
ret
jg
popa
mov
test
aam
push
jmp
jp
mov
dec
sub
inc
in
or
sar
cwtl
dec
inc
cltd
dec
ja
pop
xchg
mov
subb
pop
jae
fdivl
ds
and
repnz
rcl
pop
and
fnsave
push
flds
fnsave
std
scas
es
je
xor
mov
or
jns
and
sbb
xchg
dec
xchg
add
rol
inc
jle
add
pusha
leave
ja
lcall
test
jbe
test
scas
rolb
setae
or
sahf
push
mov
xchg
dec
call
dec
inc
adc
pop
cmpsb
inc
in
xchg
cmpsl
push
xor
sbb
jmp
imul
xor
cld
inc
bound
enter
add
sbb
inc
lock
mov
sbb
push
dec
rolb
add
insl
out
test
adc
xor
inc
jge
insl
dec
push
movsl
call
cld
cmp
in
test
stos
jle
and
jecxz
cwtl
test
jmp
mov
pop
mov
and
int
call
loopne
push
int3
loop
inc
lods
icebp
mov
sbb
jle
jecxz
les
pusha
cs
out
push
pop
das
subb
add
aad
and
adc
dec
stos
lds
xchg
pop
out
push
sbb
jne
pop
xor
mov
push
jb
cmp
xorl
mov
or
adcl
out
or
orl
ud2
push
or
out
add
nop
xchg
ds
inc
xorl
imul
or
mov
jns
insl
test
mov
shlb
jmp
arpl
cmp
push
dec
inc
insl
cmp
js
dec
pop
daa
pop
aad
inc
jmp
iret
movsl
and
cltd
inc
and
xchg
pop
pop
pop
sbb
sbb
cmp
int3
movsl
lds
aad
push
cltd
adc
dec
mov
das
xor
insl
cmpsl
xchg
cltd
les
xor
or
pop
xor
out
in
stos
xchg
sti
cltd
mov
cmp
cmp
daa
fmul
pop
ficompl
insb
cmp
cmpsb
xor
sbb
mov
cwtl
test
test
ret
ret
insl
dec
aad
mov
pop
xchg
lds
push
inc
mov
jne
in
enter
movsl
dec
mov
js
inc
shll
pop
mov
adc
jg
andb
xor
push
jge
or
pop
push
push
xor
sub
add
out
ljmp
sub
sbb
and
gs
inc
push
push
enter
push
dec
test
xchg
cmp
test
cmc
jne
outsb
test
dec
dec
lret
in
dec
push
xchg
lea
and
arpl
icebp
lods
in
insl
push
into
shlb
imul
sbb
pop
lods
and
cli
sub
scas
xchg
repnz
jo
inc
push
xchg
inc
loop
mov
or
stos
orb
ret
lods
mul
std
xor
or
cmp
fldt
lods
sub
cmp
and
adc
mov
push
jge
sub
xchg
push
pop
xlat
or
pusha
aad
sbbl
adc
sbb
mov
stos
mov
mov
inc
mov
ret
xor
sbb
in
lahf
add
mov
pop
enter
sbb
vcvtsi2sdl
loop
push
jnp
pop
ds
xor
mov
push
push
and
adc
mov
jne
stc
fistl
mov
scas
mov
rcl
adc
lret
js
inc
movsl
sbb
les
test
adc
mov
cmpsl
add
mov
pop
icebp
and
sub
and
roll
jecxz
or
scas
popa
adc
rol
scas
push
imul
cmc
xchg
sbb
dec
aad
je
daa
pop
stos
loop
test
js
loop
inc
cmp
rcl
je
pop
loop
sbb
mov
and
out
xor
mov
xchg
cmp
adc
in
dec
sti
adcl
mov
fistpll
std
insl
xlat
fsts
clc
xchg
cwtl
popaw
add
insl
pop
adc
mov
sub
adc
xchg
mov
add
shlb
sti
cmp
dec
pop
loope
push
cmp
lds
mov
dec
fnstenv
dec
and
mov
mov
enter
cmpsl
idivl
out
push
popf
xor
inc
ljmp
inc
sub
stc
cmc
mov
pop
cmc
rcll
inc
scas
push
dec
clc
in
les
mov
lea
push
lds
or
sub
sbb
jl
aad
shl
adc
jl
cld
fstps
sbb
pusha
xlat
and
mov
and
movsb
add
mov
add
cmpsb
mov
adc
or
mov
sbb
sbb
lret
les
mov
jle
jne
shll
xor
bound
aaa
dec
jmp
mov
cmp
movsb
xchg
jae
inc
sub
repnz
push
jge
pusha
subb
mov
adc
bound
das
cmp
dec
sti
lcall
adc
xor
mov
hlt
add
mov
aad
sti
dec
dec
mov
or
adc
pushf
cmp
sub
jne
mov
mov
or
sub
lods
sbb
arpl
imul
mov
sbb
call
and
fdivs
fldl
enter
fildll
scas
aam
jb
cmp
adc
pop
jmp
xor
push
jae
jno
xchg
and
mov
or
pop
ficoml
xchg
and
and
loopne
dec
lds
insl
sbb
scas
pop
lods
xor
mov
dec
in
test
shrl
sahf
or
rcll
xor
gs
dec
popa
add
jo
out
push
aad
bound
lea
in
push
hlt
or
iret
shlb
dec
movsl
pop
shll
outsb
sub
clc
push
loopne
test
dec
lods
fdivrs
xlat
nop
jbe
mov
push
loope
cli
jg
pop
movsb
xor
inc
lahf
dec
sahf
inc
test
cwtl
cmp
add
fdivr
xor
jecxz
fldt
pop
rolb
adc
jecxz
jne
push
cwtl
sub
xchg
sbb
mov
cmp
inc
daa
test
dec
loopne
jb
or
inc
jmp
orl
frstor
sub
xor
add
inc
cmp
mov
sti
or
leave
insb
rclb
lods
and
sub
push
test
lahf
adc
sbb
call
or
xor
lret
mov
shlb
inc
mov
jmp
xor
cmpl
or
jmp
in
mov
scas
insl
imul
xchg
xchg
mov
dec
xchg
xchg
xor
lods
mov
es
jecxz
je
inc
mov
adc
scas
lds
xor
aad
inc
sub
jmp
xchg
scas
push
xor
dec
push
or
add
pop
inc
or
inc
fisubrs
or
add
jno
dec
pushl
mov
push
add
and
dec
sahf
pavgw
jo,pt
adc
mov
or
test
pusha
in
cmp
jp
aam
fsts
mov
inc
pop
xor
js
cmp
adc
mov
dec
and
add
push
bts
dec
roll
lods
push
xor
fwait
add
jno
test
xchg
outsl
call
sbb
stc
xchg
mov
push
cmpsl
and
jno
xor
out
out
jecxz
dec
push
xor
dec
and
adc
cmp
jo
lcall
stos
and
cmpsb
lar
les
call
arpl
add
loope
xchg
sub
nop
out
or
mov
nop
testb
sub
xchg
sbb
filds
adc
lods
rolb
movsl
inc
movsl
je
pop
fnsave
and
mov
dec
or
xlat
pop
out
lret
jmp
leave
xchg
outsl
frstor
cltd
pop
cwtl
scas
les
or
fimull
les
inc
aad
xchg
or
sub
cmp
lds
push
adc
sbb
aas
std
fcoml
xchg
cmp
push
mov
cmp
gs
push
xchg
mov
orl
je
lods
jnp
roll
xchg
sbbb
aam
inc
adc
pop
jno
aad
pop
jg
push
sbb
mov
mov
pop
pop
cmp
jge
cmpsl
adcl
ret
lods
sub
sbb
arpl
stc
gs
inc
adc
inc
daa
sbb
test
das
and
shrl
repz
adc
xchg
je
dec
pushf
inc
jge
iret
pusha
push
pop
inc
mov
fisttpll
jecxz
mov
jo
or
dec
loop
or
sbb
add
nop
outsl
clc
adcl
push
ds
mov
ret
or
sub
and
push
test
xor
icebp
mov
int3
sbb
aas
jb
aad
cmpsl
and
mov
movsb
add
or
ljmp
addr16
fbstp
xor
addl
mov
cmpsb
sbb
push
seta
jns
fists
loope
rorl
xor
xchg
cmp
dec
xchg
cmpsb
repnz
clc
in
enter
jmp
sub
add
sub
mov
dec
cmc
sub
jo
inc
pop
arpl
xor
cmp
js
hlt
jne
orps
push
dec
stos
and
ds
mov
inc
inc
inc
jp
sahf
sub
mov
or
in
xlat
mov
int
shll
ds
mov
mov
xor
pop
aad
xchg
testb
negb
dec
adc
or
loopne
xor
iret
and
xor
jg
jge
imul
sbb
mov
cmc
iret
dec
jmp
daa
mov
ds
das
mov
sub
sbb
subb
sbb
inc
ja
dec
not
sub
adc
add
inc
and
lea
rorl
mov
imul
mov
test
pushf
or
push
xor
inc
pop
popl
xchg
push
repnz
inc
push
scas
loope
and
pop
icebp
adc
outsb
sbb
shll
pop
xor
add
addr16
dec
mov
mov
test
push
push
insl
adc
adc
adc
enter
pop
pop
dec
inc
add
mov
inc
cmp
enter
mov
pop
imul
js
dec
xor
lds
loopne
mov
pop
push
inc
pop
sbb
xor
aad
sbb
and
test
pop
rolb
pop
js
jmp
inc
arpl
outsl
inc
cmp
xor
cmp
dec
das
dec
and
and
jp
and
jmp
cmp
aaa
ret
cmpsl
adc
sub
test
or
insl
adc
fbstp
imul
inc
icebp
sbb
xchg
je
ror
push
fs
push
cmp
leave
fs
call
cmp
dec
and
sub
dec
sbb
xchg
jae
inc
jne
pop
frstor
push
jo
or
cmp
and
pop
cmp
jmp
xor
outsb
fnstcw
daa
hlt
mov
xor
or
jo
pop
pop
xchg
mov
imul
fwait
and
jl
fdivrp
mov
jge
pop
cmp
pop
and
shr
sbb
add
inc
dec
imul
dec
push
clc
add
xor
mov
popf
lock
ret
inc
or
test
lcall
in
shll
pop
clc
dec
inc
jno
dec
inc
lcall
ss
inc
scas
sarb
cld
sti
add
aad
mov
jg
enter
inc
sbb
sbb
arpl
imul
ja
loopne
test
mov
add
sbb
mov
xor
jnp
push
xchg
dec
cmp
out
cwtl
lds
rcll
jno
mov
push
inc
adc
outsb
jp
push
stc
loope
mov
imul
in
mov
outsl
fwait
aam
dec
sbb
test
jnp
and
adc
adc
add
or
dec
push
add
stos
jae
rcrl
add
mov
mov
add
xorl
div
mov
inc
jns
xchg
push
stos
add
ljmp
inc
pop
push
pop
xorl
cli
inc
dec
dec
jns
mov
adc
ljmp
divl
cmc
pop
movsl
push
jecxz
add
loopne
xchg
loop
in
add
jmp
lods
notl
lret
cmp
orb
mov
fsubrp
aaa
push
das
push
and
data16
mov
mov
shll
shrb
xchg
xchg
dec
xor
sbb
pop
dec
rclb
sbb
leave
sbb
test
nop
jno
xchg
push
mov
adc
icebp
in
and
lock
mov
or
test
adc
push
ds
imul
mov
push
xlat
sti
jle
insb
loopne
subb
negl
out
add
fldl
jg
xor
dec
cmpsl
lock
sbb
xlat
shlb
mov
daa
add
push
lods
adc
orl
repz
xor
mov
dec
or
dec
xchg
bound
adc
cmp
out
sbb
shlb
ja
adc
and
dec
sbb
adc
add
aaa
push
sub
shr
adc
dec
and
fdiv
push
cmpsl
sub
mov
add
jg
aaa
and
xchg
mov
or
jmp
out
lcall
cltd
push
dec
cmp
popf
mov
iret
pushf
movsb
add
pop
sub
jle
inc
sub
adc
stos
stos
lcall
push
out
inc
icebp
add
jmp
movsb
jmp
aas
sbb
loop
popf
and
pop
pusha
or
loope
aad
inc
sbb
aam
movb
jg
or
jno
shlb
lock
mov
jae
imul
push
movsb
sti
cmp
or
pop
rol
pop
mov
sbb
xchg
popa
cmpl
jge
fsts
loop
or
push
add
xor
xchg
xchg
dec
inc
das
xchg
and
xchg
mov
adc
xchg
into
mov
loop
jnp
pop
and
push
scas
stos
addb
jne
scas
inc
sbb
jg
outsl
test
andl
sub
sbb
ficoml
lret
lea
lahf
fstps
dec
ds
in
mov
or
shlb
sbb
test
sbb
xor
and
pop
cld
push
and
int3
cmpxchg8b
iret
push
dec
addr16
lcall
repnz
mov
mov
aad
stos
shr
daa
lret
addr16
cmp
jmp
cmpsl
dec
or
ret
iret
mov
sarl
xchg
fucom
pop
or
out
or
push
arpl
movsb
dec
inc
inc
mov
jecxz
jmp
test
insl
mov
push
pusha
outsl
pop
mov
xor
fwait
sbbb
imul
and
cwtl
das
adc
addr16
xor
sub
js
mov
in
adc
pop
and
adc
xor
xor
ficomps
add
adc
pop
daa
aaa
push
lds
cs
popf
mov
push
enter
data16
es
sub
mov
mov
arpl
adcl
daa
scas
dec
jge
or
jne
mov
push
jecxz
ss
je
lds
popa
lock
jl
sub
xchg
dec
enter
dec
sub
jns
sbbb
sbb
xor
stos
dec
out
in
push
shr
pushf
pop
or
xchg
mov
ror
push
call
rolb
and
xor
jp
test
lods
sarb
mov
jo
cmpsb
stos
pop
sbb
mov
pop
xor
enter
dec
inc
rorb
fisttpll
fcoms
mov
addl
stos
mov
xchg
mov
pusha
mov
insl
sahf
pop
adc
sub
push
sarl
mov
sbb
dec
add
fcomps
das
out
xor
lcall
lods
mov
cmpsb
ret
cwtl
in
pusha
repnz
into
xchg
inc
add
xor
and
and
ret
inc
movsb
in
sbb
jge
push
mov
xchg
inc
insl
dec
insb
outsb
jmp
das
or
pop
pop
sbb
mov
mov
lret
mov
sarl
mov
add
addb
mov
cmpsb
jmp
bound
rolb
hlt
xor
test
clc
lea
out
out
pushf
aam
sti
mov
mov
scas
push
pop
clc
mov
adc
mov
arpl
lcall
xlat
adc
sbb
shll
cmp
pop
out
and
push
sub
lea
xor
cmp
adc
mov
add
insb
movsl
cmpsl
out
mov
sub
outsl
int3
dec
cmp
push
cmp
jp
fldcw
add
add
push
push
cmp
pop
lcall
mov
in
and
test
repnz
pusha
sbb
repz
shl
mov
mov
inc
das
lcall
aaa
xchg
aam
call
js
hlt
and
dec
push
add
pushf
or
jae
inc
sbb
mull
or
jno
push
mov
enter
bound
adc
fsqrt
lret
push
add
jo
mov
adc
add
jno
neg
nop
data16
xchg
jmp
jne
loopne
sbb
xor
mov
xor
test
adc
add
cmp
push
or
lods
xor
inc
cmpsb
cmp
aaa
adc
pop
test
es
sub
cmp
repz
adc
fldl
dec
xchg
dec
adc
pop
dec
test
sbb
les
mov
add
repz
pop
jbe
shl
dec
or
xchg
stos
daa
pop
shrl
icebp
or
or
in
cmp
vmwrite
mov
ja
cmp
leave
xor
shl
lds
push
lret
mov
in
subl
nop
mov
push
and
pop
aad
iret
repnz
subl
call
cld
mov
xor
push
inc
fidivs
lea
push
xchg
push
adc
push
push
fists
test
mov
pusha
jge
fs
or
addb
jecxz
ret
mov
jne
loopne
xor
lds
cs
xor
push
pushf
push
mov
sbb
sarl
hlt
test
inc
outsb
mov
mov
mov
scas
mov
icebp
dec
js
shll
aad
ror
pop
out
sub
cli
rorb
push
popf
orb
out
xchg
and
stc
mov
add
adc
push
or
lea
xor
xor
gs
add
mov
xor
xchg
mov
adc
push
cld
xchg
mov
sti
arpl
or
das
xchg
lock
jno
pusha
adc
out
js
les
xor
sub
mov
jl
push
cwtl
sbb
test
pop
movsb
jns
lds
jl
sbb
xorl
or
gs
inc
mov
sti
sub
out
mov
cmpsl
push
jmp
jg,pn
enter
add
add
out
adc
stos
jne
int
ret
loop
lds
xor
xchg
adc
inc
loope
outsl
pop
cld
and
mov
dec
mov
loopne
cmp
xchg
mov
mov
cld
sub
bound
push
arpl
mov
scas
mov
lds
or
iret
test
pushf
stc
jl
in
xor
ja
cmp
dec
nop
rclb
xor
push
loop
cmp
adc
sub
inc
imul
jle
sbb
mov
and
inc
add
mov
xor
sbb
pushf
adc
outsl
loope
xchg
daa
lods
adc
stos
xchg
dec
adc
or
loope
push
mov
sub
lcall
xor
stos
lret
shrb
ds
scas
mov
pop
or
pushf
or
push
scas
xchg
push
sub
adc
pop
stos
or
cwtl
push
test
jns
inc
inc
add
hlt
xlat
adc
call
fildll
sub
jb
xor
cmp
ret
into
mov
inc
ljmp
fs
test
cmp
cltd
pusha
inc
mov
lea
ret
icebp
cld
or
stos
or
jecxz
push
lret
mov
xor
mov
mov
je
adc
adc
scas
or
mov
sbb
std
rol
sbb
test
subl
test
and
xchg
les
xor
rorl
shlb
dec
inc
pop
inc
data16
ja
mov
pop
jae
jl
icebp
bound
shll
iret
xchg
pop
lret
jns
dec
xor
dec
icebp
lcall
rcrl
into
inc
xor
outsl
jg
test
push
pop
mov
negb
pop
sbb
aaa
xor
inc
and
fadds
and
xor
jnp
mov
sbb
adc
and
mov
aad
mov
into
pop
mov
jae
inc
xor
je
loop
iret
sahf
ds
out
sbb
cmpb
push
jle
adc
icebp
mov
pop
and
push
enter
lret
enter
sbb
lock
loopne
call
in
lcall
pop
sbb
push
outsb
mov
push
push
sbb
xor
repz
dec
test
jns
mov
sbb
outsb
push
xor
dec
dec
das
aas
out
adc
loope
add
mov
imul
pusha
mov
aad
shl
jns
push
in
jle
test
add
jno
js
cmp
cmc
jg
mov
inc
stos
aam
push
pop
aas
mov
test
orl
icebp
ret
push
bound
leave
sbb
and
test
mov
mov
adc
inc
je
xlat
movsb
out
or
dec
add
adc
sub
fnstsw
maxps
dec
fsubl
xor
sbb
sub
into
insl
rcrb
mov
cmp
lret
popa
pop
adc
pop
shlb
stc
and
bound
scas
in
or
xor
test
mov
inc
cmpsb
addr16
lcall
imul
loope
push
jne
push
pop
stos
les
or
aam
cmp
xchg
in
mov
adc
test
aad
iret
ja
lods
bound
add
leave
jnp
mov
shlb
icebp
movsl
sub
adc
shlb
xor
mov
jl
sbb
adc
in
ret
or
jmp
scas
dec
push
xchg
test
out
in
fisttps
and
test
stos
xor
xchg
mov
loope
adcl
mov
xor
cmp
or
jl
mov
mov
stos
xchg
test
das
addl
lds
lock
out
sbb
mov
add
mov
dec
shl
fmuls
aaa
mov
xor
es
lds
fwait
xchg
test
aaa
and
push
xchg
push
test
ret
movsb
mov
push
mov
and
icebp
and
jno
inc
aaa
ds
push
jge
ljmp
rclb
popf
aaa
or
gs
fs
cmp
cmp
outsl
fidivl
cmp
popf
add
std
js
add
imul
push
cmp
das
jmp
jmp
cmpsb
mov
jecxz
xor
pop
pop
mov
add
lahf
je
sahf
ja
xchg
push
inc
ds
push
mov
and
cmp
outsl
and
jmp
sbb
cmp
fmulp
cmc
adc
jnp
push
stc
lahf
ja
mov
stc
mov
mov
push
jmp
jl
sahf
inc
dec
mov
mov
mov
call
mov
mov
cs
inc
mov
jmp
ja
push
mov
cld
pop
dec
ud2
aad
adc
mov
insl
adc
popf
fcmovnbe
jae
pop
or
adc
dec
pop
add
mov
mov
notl
movsb
mov
cmpb
mov
ret
adc
sbb
cltd
sbb
test
es
cltd
sub
adc
push
cmp
push
mov
imul
movnti
ljmp
loope
mov
push
stos
in
push
test
je
dec
mov
cwtl
xchg
rorl
popf
add
jmp
jne
lahf
xor
jmp
rcrb
pusha
stos
ret
sbb
loope
and
cwtl
aas
lods
cwtl
pop
or
add
or
sbb
push
scas
push
xor
test
mov
and
fs
mov
pop
add
and
or
inc
sbb
ljmp
loop
test
mov
and
test
push
sbb
cmp
arpl
dec
push
nop
inc
xor
bound
imul
lock
int3
push
incl
pop
scas
lcall
mov
sub
lcall
cmp
leave
leave
jbe
dec
and
sar
or
jo
stos
inc
pop
in
xchg
xor
sbb
inc
jo
fs
loope
leave
lea
test
test
or
push
subl
js
aas
adc
rcll
data16
pop
xchg
bound
orl
mov
test
dec
adc
jnp
je
push
inc
setp
test
push
and
fldcw
add
adc
pop
jl
popl
xchg
aad
pop
add
cmpl
cmp
sbb
sub
cwtl
jl
jno
pop
adc
mov
test
xchg
cmp
inc
mov
mov
mov
movl
leave
lock
sbb
ja
jns
cmc
cmp
leave
mov
cld
ret
ret
out
pop
daa
fbld
idivl
outsl
icebp
sahf
clc
mov
jl
mov
adc
pop
sti
test
loopne
fwait
xor
popa
cs
loop
mov
jp
add
shlb
sbb
push
xlat
pop
cmc
fnsave
dec
mov
lret
xchg
xlat
push
adcl
repnz
dec
mov
xorl
cmp
cmp
outsb
and
iret
and
movsl
outsl
je
jp,pt
in
test
js
outsb
push
add
ja
xchg
aam
xor
sub
test
inc
sub
lea
call
jge
add
loopne
pop
xchg
sbb
fstpl
gs
mov
fistl
adc
aam
mov
ret
jbe
pop
cld
lock
mov
loope
mov
xor
pop
mov
nop
dec
add
gs
cmp
jns
loopne
mulb
mov
push
or
lcall
bound
cltd
dec
mov
fistps
inc
inc
cmp
adc
jb
mov
jb
cld
sbb
outsl
sbb
lds
popf
or
pop
popf
inc
lahf
add
mov
mov
inc
dec
in
cmp
sbb
xor
ja
jl
sbb
push
mov
push
jne
movsl
loopne
stc
push
ja
fisttpl
cmp
push
test
cvttps2pi
pop
inc
shrl
les
in
test
adc
add
add
mov
xchg
pop
mov
lea
and
lret
repz
sbb
mov
lods
sbb
outsl
push
lods
aas
fwait
xchg
push
dec
inc
or
das
push
sub
xchg
xchg
mov
xchg
push
in
pop
push
mov
mov
out
sbb
push
rcll
rorl
sbb
cmpl
add
mov
enter
add
test
adcl
pop
mov
xlat
cmpsb
popf
xchg
icebp
ret
clc
pop
pop
and
mov
test
fmul
mov
push
inc
add
adc
insl
out
shlb
dec
popf
adc
pop
xchg
jne
xor
dec
xor
nop
test
mov
dec
jo
test
imul
adc
adc
adc
dec
rcll
arpl
sbb
lahf
les
sbb
adc
push
lds
jl
xchg
mov
loopne
adc
push
bound
xor
pop
rcl
cltd
ret
fs
in
push
jmp
call
pop
inc
popa
fsubrl
aaa
xor
cmc
sarb
les
dec
mov
jo
outsb
stos
and
repnz
push
movl
jmp
jae
sub
mov
aad
icebp
cmp
inc
push
adc
js
push
gs
test
clc
das
idiv
sub
lds
xchg
bound
cmpsl
cmp
pop
and
mov
scas
addb
das
lahf
out
add
or
or
mov
hlt
mov
push
dec
mov
sbb
add
and
pop
lcall
add
aam
stos
dec
dec
jno
fisubs
lcall
mov
jne
repz
je
addr16
test
mov
fimuls
jge
xor
stos
imul
and
scas
imul
push
sub
ds
mov
nop
push
cmc
xchg
sub
or
movsb
adc
in
ja
sarl
xchg
test
xlat
mov
mov
pusha
lock
rclb
outsl
sbb
inc
sbb
bndstx
popa
dec
or
dec
cmp
sub
push
mov
cltd
dec
sub
mov
dec
pop
les
pop
les
push
mov
cmp
outsb
push
rcl
inc
loopne
jb
push
into
cmp
or
push
add
xor
lret
add
push
stc
jae
push
jmp
pop
and
orl
das
in
scas
mov
mov
gs
xchg
cmpsl
or
push
fidivrl
or
lods
xchg
iret
out
xor
mov
sbb
leave
inc
sbb
and
imul
test
push
xor
sbb
shlw
mov
add
pop
mov
test
stos
icebp
adc
mov
orb
mov
lods
stc
adc
or
inc
push
jno
cmp
cmpsb
xchg
je
hlt
adc
cltd
pusha
aad
add
or
popa
loop
aas
cmp
push
xor
jno
popf
jno
pusha
mov
push
lods
cmp
inc
push
push
popf
dec
jcxz
je
in
sbbb
and
rcrb
icebp
or
out
sbb
jp
and
xlat
push
scas
dec
pop
jmp
test
mov
or
cmp
jle
xor
and
sbb
xor
orl
aas
sbb
adc
add
sub
pop
jmp
mov
js
movsl
test
sbb
cmp
imul
hlt
jns
mov
mov
shl
nop
pop
jge
shrl
cli
sbb
or
or
jmp
xchg
daa
adc
dec
cmp
adc
imul
ja
loope
cmp
inc
inc
jl
pop
lods
dec
orl
in
jmp
cltd
add
jno
les
add
repz
or
test
ret
mov
add
test
push
xchg
daa
cmp
or
call
sbb
push
out
sbb
sbb
lcall
aam
loop
and
lods
cld
js
cmpsb
shll
roll
pop
jle
dec
add
sbb
test
call
xchg
xlat
xchg
ja
xchg
xchg
xchg
lcall
pop
cld
jge
lock
adc
iret
push
push
pusha
jp
js
pop
push
cmp
jl
pop
adc
insb
icebp
sbb
mov
add
push
dec
shlb
xchg
or
jns
push
insl
imul
add
xchg
adc
ja
fldl
test
push
test
jno
adc
pop
pop
and
xchg
mov
jg
loope
stos
mov
insb
sbb
adc
mov
mov
sbb
mov
pushf
dec
mov
pop
test
sbb
adc
ficoms
pop
test
inc
lea
add
test
dec
sbb
in
rorl
jno
sub
inc
jl
int
mov
and
and
inc
jnp
fs
dec
shrb
je
in
shrl
lds
in
ds
sbb
movsb
inc
pusha
xchg
clc
sbb
push
test
subb
pop
sub
cmc
dec
rorl
sub
pop
daa
xlat
pop
add
push
fcoml
jl
jnp
lahf
fwait
sbb
lret
aas
ja
mov
cmpsb
test
dec
jp
aad
shl
sbb
inc
mov
mov
xor
cltd
test
sbb
add
andb
xchg
sub
aam
xacquire
mov
xor
push
mov
in
scas
pop
daa
mov
jae
shlb
push
mov
sbb
cmp
sub
sub
pop
popa
and
rorl
pusha
inc
sbb
int
jmp
push
inc
mov
pusha
mov
test
push
sub
stc
push
add
inc
rcrl
inc
sbb
push
cltd
jno
out
loop
pushf
flds
or
inc
out
lahf
cmp
inc
mov
ret
xchg
movsl
popa
mov
jo
fwait
cmpsl
xchg
popa
add
dec
stos
xor
dec
push
pop
cwtl
nop
out
ljmp
loopne
add
jne
or
and
ds
mov
jl
mov
test
cmpsb
or
or
xlat
in
xor
lret
add
aad
movsb
dec
adc
dec
sarl
sub
leave
pop
xchg
xor
fmuls
daa
mov
cwtl
jg
sti
mov
jp
dec
fisttps
jmp
push
popf
pop
mov
inc
mov
cmp
int3
into
addr16
jnp
mov
jb
fs
xor
xchg
sub
scas
nop
mov
push
call
imul
aas
rcll
jecxz
jg
mov
jno
dec
test
jl
fcos
dec
add
pushf
mov
mov
jle
xchg
mov
adc
es
sbb
and
pop
shlb
fcompl
das
test
fmull
cmp
lock
js
shl
xchg
inc
xchg
push
push
stc
mov
pop
js
dec
jb
xchg
les
push
adc
pop
sti
imul
popf
gs
push
push
add
rorb
xchg
rcrl
pop
push
jae
pop
cmpsl
mov
outsb
pop
lcall
in
ss
sub
pop
pop
das
cmc
es
mov
ds
ret
xchg
cmp
test
mov
leave
xchg
cmp
cmp
test
xchg
les
out
push
dec
movsl
and
push
flds
pop
fidivs
iret
xchg
push
cltd
lret
hlt
mov
inc
mov
aam
jecxz
fs
js
sbb
cli
orb
aas
add
push
cs
data16
xchg
mov
mov
inc
cli
add
xchg
daa
roll
lea
ja
dec
adc
add
aam
push
int
lahf
inc
sub
cltd
lea
push
mov
push
mov
push
mov
cmp
int
or
subb
add
lret
jae
mov
push
ja
into
xor
mov
adc
or
cli
cmc
pusha
mov
ljmp
or
jnp
cmpsl
addl
bound
dec
pop
xor
xchg
inc
adc
jp
push
cmpsb
jns
test
mov
xchg
fiadds
adc
gs
divb
cmpl
pop
jl
rolb
mov
mov
icebp
add
stos
mov
jno
jne
xchg
stos
adc
bound
imul
addr16
adc
xchg
sbb
mov
dec
jg
sbb
movsl
or
jmp
lret
mov
pop
pop
mov
repnz
and
ret
test
js
pop
cmp
sub
mov
lahf
add
and
mov
mov
lods
ja
iret
jp
cld
lea
push
mov
and
adc
aaa
mov
push
dec
sbb
push
xorb
out
rcrl
push
mov
pop
rcrb
jns
ficomps
sub
push
xchg
dec
cmc
and
lahf
cmp
pop
jmp
ror
movsb
cmpsl
jmp
aad
inc
adcl
adc
fsubrs
imul
mov
fimuls
sbb
cs
pop
shlb
adc
test
push
pop
lahf
sbb
jbe
lds
mov
sahf
mov
mov
aas
enter
inc
cmp
and
xchg
push
lods
leave
cltd
jle
pop
imul
ljmp
sbb
outsl
ljmp
shr
pop
lods
lea
int3
test
adc
xchg
loop
aaa
pop
sub
adc
and
jecxz
push
inc
stc
dec
rcll
mov
push
loop
mov
enter
lock
dec
aad
inc
cmp
mov
lds
test
sub
push
jne
dec
xchg
movsb
adc
cmpsb
fwait
xor
test
xor
arpl
lock
push
inc
shrb
sbb
shlb
ja
fists
lods
sbb
cmp
inc
inc
and
push
sbb
add
sub
and
jmp
sbb
mov
lret
mov
sbb
jl
test
mov
mov
imul
sahf
pop
mov
pop
push
xor
adc
out
lds
and
cmpsb
jbe
imul
xchg
popf
push
cs
cmp
outsl
sbb
lock
jmp
jne
push
or
cltd
ret
or
mov
mov
xor
in
test
loopne
push
cmpsb
fcomip
cmp
inc
mov
or
scas
lock
or
adc
cmp
stc
sub
test
and
sbb
ret
xchg
pop
pop
enter
push
inc
inc
pop
xchg
jo
mov
movsl
loop
ficompl
jecxz
xchg
mov
add
outsb
cwtl
inc
mov
lock
sbb
pop
mov
mov
icebp
lock
adc
pop
dec
lahf
dec
pop
mov
inc
jne
stos
sbb
adc
addr16
jno
sub
xor
lcall
pop
iret
dec
cmp
xrelease
fistl
or
sbb
mov
scas
aad
loop
dec
cmc
xor
iret
roll
sbb
sub
in
arpl
movsb
je
ret
mov
mov
jne
or
push
mov
xlat
adc
imul
sub
out
std
arpl
mov
sub
int
and
cmc
call
inc
jl
in
add
cmp
sub
and
out
ss
test
mov
ja
pop
dec
adc
dec
shlb
adcb
into
arpl
lret
jecxz
out
cmp
push
fistl
xor
ja
jae
or
mov
sub
add
loopne
jo
jne
pushf
mov
jb
jg
sbb
inc
pop
push
cmp
jecxz
mov
xor
add
adc
push
stc
cmp
pop
ss
xlat
xor
imul
or
add
jbe
lock
cmp
sub
clc
add
loopne
mov
sub
popa
inc
jge
je
das
or
clc
and
mov
or
jne
inc
lods
cmp
dec
mov
adc
lret
push
dec
pop
mov
es
icebp
push
sbb
es
adc
fpatan
ret
mov
movsb
add
dec
adc
test
mov
hlt
into
dec
or
shll
mov
movsb
mov
pop
push
scas
add
nop
lods
sbb
mov
scas
jecxz
sbb
xadd
mov
mov
cmp
test
adc
sar
adc
fists
add
xor
dec
std
cmp
xchg
sub
pop
sub
int3
imul
cwtl
or
pusha
jmp
aam
imul
test
mov
icebp
push
add
xor
mov
testl
push
shr
push
push
gs
ss
push
sbb
adc
mov
icebp
xchg
sahf
sbb
xor
rcr
aaa
inc
push
mov
int
mov
or
ret
mov
adc
xchg
cltd
cmp
stos
fstl
insb
out
icebp
mov
aam
push
shrl
mov
daa
sti
mov
in
pop
mov
mov
pop
pop
ss
inc
std
iret
add
xchg
sub
jg
jle
call
push
test
repnz
cs
sub
jo
pop
stos
pop
xchg
arpl
mov
lret
mov
push
xchg
fs
push
mov
clc
mov
mov
xchg
jo
sub
inc
xor
movsl
in
sahf
xchg
xchg
shrb
insl
sub
xchg
inc
add
cmp
adc
mov
inc
pop
or
inc
mov
mov
mov
les
ror
push
inc
js
xchg
addl
or
mov
cld
pop
mov
xor
mov
out
dec
icebp
es
daa
insl
pop
xchg
mov
sbb
push
frstpm(287
add
push
fdivl
cltd
cmpsl
jecxz
pop
pop
jne
push
sarl
outsb
inc
mov
sbb
jo
mov
ds
jle
adc
lds
or
jl
cwtl
xchg
gs
test
stc
or
je
push
int
clc
movsl
push
push
push
adc
pop
sahf
push
lea
pusha
pop
aad
arpl
adc
push
push
xor
cmp
fnsave
pop
fxam
jmp
dec
mov
cmp
jmp
jmp
mov
test
jae
rolb
fsubrs
rcll
movsb
fwait
lock
push
add
jno
nop
mov
aaa
addr16
test
ror
ret
jmp
mov
mov
cmp
stos
js
xor
push
pushf
pop
pop
ljmp
sub
test
ss
sub
insl
adc
les
sbb
adc
sub
xchg
addr16
xchg
mov
rorb
and
push
lea
and
jo
aad
sbb
loope
pop
add
mov
push
mov
dec
jmp
lods
iret
sbb
test
lock
std
cmc
or
bswap
inc
cmp
pop
and
add
out
js
shlb
sti
sbb
test
mov
mov
mov
xor
sub
jne
fildll
scas
ret
lcall
adc
mov
in
mov
mov
jg
int
inc
and
push
mov
pusha
mov
ljmp
cmp
stos
sub
lock
fstpt
call
push
pop
mov
sub
leave
mov
push
loopne
in
sbb
loope
inc
pop
and
sbb
mov
sub
pop
int
fs
pop
mov
lds
jb
in
xor
push
adc
xorl
ss
mov
loope
xor
ljmp
sarb
jmp
cmp
add
xor
sub
clc
movsl
repz
daa
shlb
ficoms
push
movsb
dec
mov
imul
out
add
adc
das
dec
outsl
addb
pop
lock
test
sbb
incl
mov
or
push
jecxz
pop
sbb
lods
ds
test
mov
test
xor
mov
mov
jns
fs
pop
sub
inc
hlt
les
lahf
sub
mov
push
lea
xchg
jns
test
loop
mov
fsubrs
fidivs
daa
cmp
orb
jae
mov
mov
movsl
lea
daa
faddp
push
sbb
xor
push
das
mov
cld
sbb
insl
icebp
add
push
test
jbe
push
adc
sbb
xlat
test
inc
sub
out
or
int3
mov
inc
insb
add
or
cmp
ja
outsl
cwtl
loope
pop
stos
xchg
rcrb
mov
mov
loop
sub
and
adcl
ljmp
aas
sub
pop
jno
es
inc
adc
lcall
jbe
incl
push
cs
or
pop
andl
xchg
xor
cmpsb
cli
shlb
out
aam
dec
push
push
fs
shl
sub
mov
add
mov
imul
jmp
stc
pop
sahf
mov
mov
jge
movsl
push
pop
xor
mov
mov
mov
push
shrl
push
mov
ljmp
popf
dec
imul
out
rclb
mov
push
sbb
and
pop
add
addb
inc
imull
xor
ds
ja
inc
mov
xchg
jecxz
sti
or
call
push
bound
repnz
pop
and
leave
xor
and
addr16
fidivs
pop
dec
push
lock
push
pusha
lret
push
add
push
lea
mov
inc
stos
cltd
mov
outsb
mov
mov
xor
or
iret
insl
xor
add
pop
jnp
cmpsl
sbb
in
sbb
or
adc
adc
add
imul
xor
add
fdivrl
jmp
imul
adc
rorb
sbb
sub
mov
in
adc
rcrb
adc
fldl2t
jl
mov
cmp
mov
ret
or
inc
lds
push
pop
jge
imul
dec
sub
or
sub
out
sar
push
in
adc
mov
and
push
scas
cmp
push
sbb
cs
clc
add
mov
inc
cmpsb
or
xchg
inc
mov
stos
scas
or
outsb
stc
pop
xor
dec
sahf
jbe
jne
pop
loopne
xor
inc
stos
mov
xor
or
xchg
gs
mov
mov
imul
imul
aad
jecxz
ret
ja
jmp
imul
adcb
lea
jns
jmp
push
test
cmpsb
xchg
lahf
ret
fisubl
xor
stos
or
ret
jmp
jne
mov
lea
out
xor
xchg
and
pop
repnz
add
nop
jp
xchg
aad
jnp
push
inc
xor
outsl
leave
icebp
sub
adc
scas
add
cltd
sbb
rorb
lds
jae
call
test
sbbb
decl
cmp
push
dec
push
pop
pop
std
push
in
xlat
popa
addr16
imul
and
addl
jecxz
lcall
pop
jmp
cmp
imul
addr16
inc
xchg
pop
mov
and
xchg
sti
pop
inc
lahf
or
mov
xor
inc
push
test
gs
lods
sbb
shll
add
cmc
inc
jl
sbb
sbb
sarb
std
add
movsb
pop
sbb
adc
pop
cwtl
in
fwait
adcl
push
cmpl
movsl
aas
and
cmp
pop
and
push
dec
popa
cs
aam
push
in
insl
and
sub
add
or
arpl
pushf
push
sbb
xchg
push
cmp
outsl
out
jae
loop
mov
enter
loop
xor
push
push
shlb
cs
adc
fidivrs
test
or
cmpsl
fisubrl
ret
sbb
ret
js
mov
scas
pop
das
leave
or
adc
pop
rol
pop
pxor
lods
or
inc
test
movsl
xchg
aad
mov
xor
inc
add
lahf
inc
sbb
add
add
push
je
aas
loopne
dec
fadds
pop
sti
ror
mov
gs
jo
inc
inc
cltd
cmp
inc
xchg
pop
ljmpw
test
movsl
fst
pop
cmpsb
inc
call
push
and
sbb
mov
stc
or
fwait
xor
stos
in
cld
mov
xchg
dec
sbb
call
jne
adc
pop
insl
mov
add
inc
fwait
scas
sti
push
jg
ljmp
cmp
repnz
sbb
daa
int
or
call
adc
lock
mov
xchg
in
addr16
iret
ds
sar
pusha
add
mov
mov
mov
or
push
sbb
jmp
stos
cmp
sbb
imul
mov
or
dec
data16
maxps
stos
mov
das
outsb
sbb
xor
push
push
or
test
clc
or
fmull
add
dec
out
mov
and
bound
inc
sbb
mov
lea
pop
sarb
xor
mov
cmpsb
mov
dec
sub
and
movsl
mov
insb
pop
cmp
or
ret
jnp
test
sub
gs
mov
push
cltd
gs
cmpsl
push
rcll
cmp
jnp
pop
inc
add
pop
repz
sbb
pop
xchg
sub
add
in
mov
jns
insb
lods
ret
jo
dec
xchg
jmp
es
xchg
sarl
es
test
push
mov
inc
outsb
and
mov
lea
pop
es
bound
in
inc
cmp
or
push
fwait
push
xor
std
rorl
rorl
inc
ret
dec
ljmp
xchg
fcom
sub
mov
xchg
mov
sbb
sbb
rcrb
sbb
clc
es
out
or
sbb
aas
jo
cmp
dec
jno
addb
xchg
xchg
movsl
mov
cmpb
sbb
loope
subb
jne
clc
fistpl
xchg
pusha
repz
daa
jg
mov
outsb
push
sbb
stc
add
rclb
cmc
in
shrl
and
xchg
add
sarl
in
push
test
cmp
andl
fs
inc
xchg
mull
and
push
push
fs
leave
inc
pushf
xchg
orl
lods
push
aad
sub
mov
fisttpll
adc
and
addr16
sti
fucomi
sub
xchg
pop
adc
xchg
dec
xchg
pop
inc
pop
mov
xor
mov
jg
clc
jno
mov
cmpsl
sub
lahf
mov
pusha
iret
cmc
cmp
ds
sub
cmp
xchg
mov
xor
or
sub
inc
or
stc
outsl
jnp
xchg
stc
leave
loop
dec
sbb
pop
mov
mov
pop
sub
add
std
mov
rclb
shrl
mov
lea
outsl
mov
push
and
pop
nop
mov
ret
clc
repnz
jl
jl
add
out
or
inc
clc
push
mov
inc
sub
ljmp
xlat
ror
popa
les
sbb
notb
and
cmp
add
test
or
pop
dec
jne
pop
push
iret
insl
in
shrb
sahf
add
push
mov
int
or
daa
xchg
add
hlt
rolb
push
sub
out
dec
shll
gs
and
out
jo
dec
jae
adc
and
add
cmp
mov
jle
xor
loopne
pop
and
push
js
aaa
push
add
push
or
pop
or
push
aam
test
sbb
dec
fwait
lret
jae
das
ret
fs
addr16
adc
out
lds
in
sti
xchg
push
sbb
cltd
fnstsw
push
push
mov
push
mov
cmp
dec
mov
jecxz
sbb
dec
xchg
test
dec
stc
cmpb
inc
or
stos
adc
ja
mov
xor
sbb
xor
xor
jmp
fsubs
pmullw
and
or
nop
jo
in
mov
mov
inc
mov
mov
pop
cmp
dec
iret
cmp
add
xchg
mov
lea
roll
aad
jns
stos
jae
pop
xor
or
bound
push
sub
ljmp
aam
mov
cmp
mov
scas
add
je
lods
jo
lret
dec
xchg
loop
test
fs
xchg
jb
les
es
fs
shlb
add
repz
and
aaa
imul
stos
dec
cli
addb
cmc
int
test
mov
in
cmp
call
cmpsl
ja
dec
push
es
jmp
jg
dec
push
divl
loope
andl
fbld
lds
jb
push
sub
imul
addb
sarl
mov
fwait
mov
push
stos
out
dec
jb
or
or
lea
lods
movsl
push
sarb
sbb
movsl
jmp
lods
rorl
sbb
icebp
clc
push
dec
ljmp
push
push
loop
inc
adc
enter
dec
gs
pop
movsb
ljmp
jp
mov
mov
ss
out
adc
xor
mov
aam
jmp
in
loop
data16
daa
pushf
out
sub
popf
xor
div
mov
cmp
xor
cmp
mov
test
xchg
pop
inc
pop
lods
cs
mov
push
bound
aad
xor
scas
mov
mov
jmp
sbbl
hlt
imul
xchg
in
leave
clc
shrb
test
pop
push
cmp
rcr
je
xchg
or
ds
movsb
enter
nop
and
add
ljmp
mov
xor
cltd
loope
add
ret
pop
cwtl
es
in
lea
subl
insl
notb
cmp
test
rcll
sbb
jno
inc
cld
cltd
xlat
jecxz
mov
lret
and
jnp
scas
aad
sbbl
pop
leave
divl
je
pop
repz
inc
icebp
andb
movsb
dec
dec
push
adc
adc
cmpsl
xchg
cmp
clc
gs
rorl
cmp
sbb
sahf
or
cmp
clc
cmpsb
jecxz
pop
lret
mov
fs
lahf
aaa
adc
xchg
and
sub
js
xadd
pop
aas
imull
mov
or
iret
cmp
mov
imul
jb
clc
ret
mov
aad
sbb
inc
or
in
dec
cmp
scas
stos
and
out
adc
or
mov
lret
push
add
movsb
sub
push
ficompl
les
stos
int3
iret
mov
dec
jl
jge
inc
movsl
fwait
dec
mov
push
or
sbb
or
fstps
js
aad
int
std
icebp
dec
es
jge
dec
add
xor
sbb
test
xchg
lods
dec
mov
add
cs
aam
out
test
filds
popf
inc
add
jbe
lahf
clc
loop
rcrl
int
adc
pop
jl
rolb
fists
lods
sbb
dec
das
nop
dec
icebp
jecxz
inc
sub
scas
sarl
mov
jmp
in
xchg
and
call
cmpsl
pop
sub
lret
pop
push
xchg
int3
xchg
aam
js
mov
mov
adcb
cmp
inc
shlb
ret
leave
dec
rclb
mov
test
cs
rolb
mov
adc
and
or
dec
fs
mov
lret
xlat
pop
lret
call
in
test
xchg
xchg
jg
inc
jl
inc
jne
repz
jmp
sbb
lahf
pop
mov
push
and
cs
rcr
inc
daa
push
inc
pop
adc
out
fadds
add
cmp
push
loop
sbb
adc
cmp
int
adc
les
or
lods
stos
sub
mov
jb
xor
add
pop
loopne
dec
popf
sbb
xorl
xor
xchg
jb
ror
pushf
mov
dec
jl
in
adc
mov
lds
mov
push
xchg
movl
jp
lea
outsb
pop
shl
jecxz
and
cmp
pop
inc
jmp
push
neg
adc
push
shlb
inc
jo
mov
mov
fildl
push
mov
andps
adc
lea
mov
dec
jp
lods
fs
dec
lret
ret
stos
xor
imul
pop
mov
dec
mov
lahf
mov
or
loopne
jno
mov
jmp
mov
push
mov
mov
fmull
stos
inc
pop
je
jbe
push
or
movsb
mov
cmp
sub
sarl
push
adc
lock
loopne
fld
cli
aam
mov
bound
idivl
mov
xor
cmp
cld
les
movsl
adc
shll
sub
push
int
pop
dec
imul
jmp
test
add
adc
mov
inc
and
fildl
mov
int3
cli
or
arpl
xchg
cmpsb
add
in
adc
cmp
cmp
dec
dec
mov
mov
popa
test
xchg
ret
lret
movsb
dec
int
jae
push
sbb
mov
js
popa
inc
jo
add
sti
adc
shlb
inc
add
loop
sbb
shll
adc
mov
mov
cmp
adc
popa
lock
dec
push
and
sbb
jnp
jge
aad
xor
jbe
cmp
cmp
rorl
outsb
mov
or
jp
ss
or
sbb
xor
dec
dec
and
cmp
push
sahf
into
or
push
jge
mov
mov
pop
mov
ret
shlb
jbe
pop
adc
fistl
lods
push
gs
xchg
inc
sbb
mov
mov
dec
dec
popf
cmp
jbe
das
scas
cmp
add
push
lahf
lahf
or
adc
push
addr16
pusha
ja
jg
cmp
adc
fisubs
cmpb
mov
bound
xchg
and
or
inc
imul
inc
jnp
jb
sub
pop
lock
in
fidivl
insb
rorl
jo
mov
jo
icebp
push
dec
xchg
aad
push
pop
imul
pop
movl
pop
imul
ss
lea
pop
cmp
or
testb
imul
fldt
rclb
ljmp
sbb
test
fsts
aas
xchg
push
cmp
mov
cmp
lahf
xor
push
iret
es
add
out
in
adc
adc
add
mov
inc
cmp
insl
sbb
out
mov
add
push
xchg
add
adc
add
xchg
pop
in
scas
or
sarb
adc
add
add
xchg
sbb
in
adc
dec
xchg
mov
inc
out
sbb
mov
test
xor
sbb
lods
lock
repnz
adc
and
jl
cmp
mov
fiaddl
cmp
sub
sbb
mov
mov
rcl
pop
ret
jmp
in
lds
cmc
cmpsl
sbb
mov
negb
lahf
and
mov
inc
in
insl
push
cmpsb
sub
cmp
loop
push
mov
inc
fisubs
scas
repz
mov
cld
ljmp
xchg
dec
inc
rclb
sbb
xor
loopne
rol
jecxz
or
mov
cld
sub
add
and
cwtl
cmp
sarb
repz
pop
sub
sbb
inc
test
arpl
sub
add
mov
js
data16
subl
dec
cmp
scas
jb
loop
lock
add
lahf
scas
loope
rclb
push
cmp
sbb
inc
sbbb
add
sub
jo
or
lock
or
pop
push
mov
dec
push
jmp
cs
movsl
xor
push
ret
sub
jecxz
aas
sbb
mov
int
popa
push
or
inc
xor
and
sahf
bswap
test
dec
lds
mov
pop
dec
lds
aad
and
mov
in
or
xchg
push
push
or
dec
lret
lds
jge
mov
gs
pop
call
mov
loope
outsb
pop
xchg
or
test
adc
je
mov
inc
push
push
fsubrl
sbb
mov
sub
pop
mov
dec
pushf
ljmp
call
and
mov
fucomp
popf
cmp
fs
mov
lret
inc
push
pop
cli
and
cmp
cmpsb
jmp
shll
push
cmp
sbb
mov
push
jbe
data16
daa
dec
sbb
loop
dec
call
or
lahf
bound
push
dec
les
movl
lods
lcall
hlt
mov
cmp
jbe
mov
popf
pop
cmpsl
lock
ss
lret
push
stos
or
xor
jns
cmc
enter
adc
pmuludq
out
or
mov
or
movsl
test
and
xchg
iret
jg
push
js
push
adc
add
mov
rcrl
imul
imul
sbb
aas
push
cmpsl
add
in
or
push
mov
inc
jecxz
aam
std
pop
clc
jge
in
and
loopne
add
cmp
pop
hlt
scas
scas
stc
fldt
dec
xchg
lds
fstpl
mov
aad
sub
dec
scas
ret
mov
sbb
dec
movsb
dec
sbb
jo
xchg
xchg
xor
mov
mov
scas
call
mov
xor
ds
add
stos
dec
pop
mov
inc
lds
or
mov
cld
push
loope
xor
movsb
cld
lcall
sub
fs
test
fldenv
mov
pop
int
and
stc
pop
jg
mov
xor
addb
mov
sub
iret
shrb
jo
daa
fcomps
rorb
inc
mov
pop
enter
xor
jae
xchg
or
dec
dec
xchg
sti
loopne
cld
and
or
lret
data16
mov
mov
inc
xlat
je
dec
dec
inc
rcll
inc
les
pop
cmpsb
out
jge
icebp
adc
xlat
inc
sub
adc
or
mov
gs
or
sbbl
shll
ret
inc
imul
je
push
mov
test
cld
sbb
repz
je
int
pop
add
jae
jbe
pextrw
scas
dec
mov
jge
xchg
shll
test
dec
lcall
dec
ret
jb
iret
sbb
ja
push
popa
shrl
mov
cmp
bound
jge
inc
popf
loopne
das
dec
pop
sbb
ja
hlt
jle
dec
lock
xchg
sar
repz
movsb
dec
mov
int
jnp
mov
mov
jmp
loop
jmp
idivl
lcall
testl
test
outsl
sbb
popa
or
or
cmc
stos
jno
inc
test
cltd
push
leave
adc
shrl
jns
push
nop
adc
out
jmp
test
sbb
xchg
or
aad
xchg
lods
adc
js
cld
or
fsubr
icebp
or
mov
xor
popa
jge
outsb
push
and
mov
xor
test
les
mov
pop
jl
jp
jmp
fadds
mov
iret
fwait
or
das
cltd
adc
add
flds
popf
lds
cltd
and
pop
andl
pand
pop
add
adc
out
adc
dec
mov
xor
stos
adcl
add
fmuls
pop
jmp
mov
sub
xchg
test
mov
notl
mov
xchg
mov
mov
mov
pop
mov
lock
mov
je
sbb
sbb
shlb
push
fsubrl
mov
arpl
cmp
jbe
les
jl
outsb
sbb
dec
cmp
jne
rorl
insb
push
lcall
stos
outsb
pop
jle
sahf
rol
popf
inc
xchg
mov
icebp
xor
inc
test
pusha
arpl
cmc
sub
and
and
lds
testb
and
test
movsl
jbe
mov
cmp
push
mov
aad
xor
in
sbb
pop
repnz
test
f2xm1
jnp
and
inc
shl
popf
sub
je
les
pushf
adc
dec
jo
add
aam
insb
mov
push
or
pushf
or
popa
jbe
test
es
call
inc
mov
popl
fwait
and
sahf
jmp
loop,pn
es
and
xchg
aas
icebp
mov
jg
ficompl
iret
mov
dec
loopne
pop
cmp
and
add
cmp
bound
mov
mov
cmp
repz
adc
test
mov
inc
push
lock
arpl
es
xor
lcall
sub
dec
lret
cmpsl
mov
mov
test
inc
ja
xlat
pop
cmpsb
jmp
stos
add
cwtl
jmp
adc
adc
sbb
sub
jno
loope
lea
jmp
adc
loopne
xchg
je
xor
or
cmp
dec
jmp
push
int
stos
test
mov
mov
inc
stos
and
lock
inc
mov
pop
mov
call
shlb
cmpsl
cmc
xor
sbb
stos
repz
sub
sbb
out
xor
iret
rorl
roll
test
xchg
aam
pop
mov
push
push
mov
sbb
jnp
dec
call
aaa
xchg
inc
mov
cmpsl
mov
xor
flds
rorb
adc
imul
mov
out
xchg
adc
fidivs
mov
sbb
cmp
leave
adc
adc
push
cmp
mov
pop
sbb
ss
inc
test
pop
jae
push
jge
inc
push
orb
arpl
xor
dec
push
das
adc
xor
outsl
dec
cmp
loopne
jb
cli
or
fdivrs
add
in
push
call
scas
test
push
xor
lahf
dec
mov
push
aad
in
pop
add
leave
pop
pop
sbb
cmp
addr16
rclb
add
mov
sbb
stos
pop
jle
xor
mov
adc
mov
mov
mov
or
test
fisubrl
rol
mov
jg
inc
pop
xchg
lods
out
cs
mov
xor
sbb
push
imul
push
outsl
sbb
sbb
int
pop
mov
push
sub
clc
adc
out
fldcw
and
xchg
jmp
or
rcrl
sti
add
add
mov
popf
out
adc
dec
adc
fwait
inc
test
in
sbb
test
dec
adc
xchg
lahf
xor
scas
mov
adc
dec
test
aad
inc
fincstp
xor
fildl
dec
push
or
add
adcl
jb
inc
lret
aaa
scas
jae
jp
cmc
adc
sub
jp
inc
pop
dec
add
jnp
xchg
and
or
jb
rorl
into
adc
fstpl
mov
sbb
imul
mov
pop
stos
xchg
adc
clc
iret
loopne
add
and
mov
or
mov
popf
xor
jp
add
sub
jno
aaa
fdivl
mov
sbb
repz
clc
sub
inc
add
insb
mov
and
addr16
ret
adc
mov
out
rolb
decb
imul
pop
push
pop
adc
jle
cmpsl
sub
xlat
mov
mov
or
mov
push
push
adc
fimuls
out
mov
or
data16
push
popf
or
imul
pushf
insl
push
insb
sbb
inc
imul
imul
dec
sarl
pusha
lods
cmp
pop
stos
and
pop
dec
ret
add
cmpl
sbb
andl
leave
int3
sub
inc
or
lock
in
xchg
pop
add
les
test
addb
dec
cltd
popf
dec
add
fdivs
unpckhps
push
inc
xchg
push
jns
inc
sbb
imul
add
xor
or
sub
cmp
sarl
insl
in
sub
shlb
out
mov
dec
mov
cli
nop
shrl
xchg
loopne
push
movl
jns
lahf
jecxz
push
rcpps
icebp
adc
mov
dec
xchg
test
mov
movd
xchg
inc
pop
adc
lea
xor
rclb
add
movsb
es
xor
gs
sbb
cmpsb
mov
lcall
inc
jbe
push
jbe
frstor
repnz
popa
mov
arpl
pop
jmp
mov
mov
jno
lret
or
inc
adc
xor
roll
aaa
jae
add
inc
scas
sbb
add
push
sti
sar
lock
pop
mov
cmc
pusha
or
pop
jmp
test
push
or
mov
cmpsb
mov
loopne
bound
jne
adc
test
das
sub
mov
sbb
cmp
cmp
lahf
es
jae
insb
add
ret
rcrb
scas
push
shll
mov
cmp
mov
les
lret
mov
jge
daa
mov
xor
movsl
outsb
jmp
jle
enter
and
es
add
push
test
mov
and
cmp
das
dec
mov
add
mov
loopne
lock
movsl
mov
loope
test
sarl
pop
je
sbb
mov
ds
movsb
popl
lret
mov
cmc
xor
loop
das
and
add
pop
rcrb
cmpsb
loope
cmpsb
dec
push
and
inc
mov
pusha
pop
add
data16
sbbb
test
and
imul
dec
rorb
iret
xlat
cmp
inc
push
add
or
dec
insb
lcall
dec
faddl
sbb
push
push
cli
mov
cli
xor
push
sub
int3
sub
mov
shlb
adc
xchg
mov
xor
fnstenv
pop
cld
cmpb
inc
pop
fcoml
data16
stc
and
jp
push
scas
mov
cmp
sbb
dec
shl
mov
dec
xchg
inc
stos
out
xchg
sub
popf
jl
subb
loop
mov
mov
addr16
fisubrl
aad
jmp
shrl
pop
push
jae
push
test
pop
jnp
pop
mov
leave
sub
xchg
arpl
push
fs
popa
insb
pusha
dec
mov
js
sub
cmpsl
ja
xchg
mov
inc
inc
mov
cmc
je
dec
in
add
fisttpll
in
pop
lock
daa
jle
mov
sub
xor
mov
loopne
jae
test
clc
mov
movsb
aaa
lcall
ret
out
scas
pusha
cmp
jmp
push
outsb
shlb
xlat
jmp
mov
cmc
test
ret
push
mov
mov
clc
outsb
cld
ja
sbb
fisttpl
mov
xor
popa
daa
std
in
testb
and
leave
fxch
push
call
fimull
ror
in
push
mov
pop
mov
xchg
sbb
repnz
xor
cmpsb
scas
jmp
adc
mov
sti
adc
push
add
fs
fsubrl
ljmp
sub
sbb
and
clc
icebp
pop
add
and
sub
lret
push
mov
mov
repz
xchg
test
sbb
or
mov
nop
xor
and
pop
icebp
sbb
xor
pushf
ljmp
push
cwtl
ret
mov
mov
cmp
inc
jbe
mov
test
jg
pop
daa
leave
loope
add
dec
stos
add
xor
inc
and
fisubrl
add
sbb
sbb
ror
xor
inc
mov
mov
jo,pn
inc
mov
jo
jle
pop
and
lea
push
loopne
dec
jbe
inc
ret
outsb
fwait
push
mov
out
out
shr
insb
mov
sub
loop
sbbb
test
mov
cmp
int
pop
mov
cmp
or
mov
mov
dec
push
jmp
aad
sbb
icebp
dec
cmp
xor
or
xchg
dec
mov
lods
lds
popf
add
mov
std
xor
das
loope
or
jl
jbe
add
sub
sbbl
push
ds
repz
mov
and
mov
push
lds
xchg
jns
pop
pop
in
add
fsubs
xorl
out
add
xchg
or
xchg
adcb
pop
test
pop
std
xchg
stos
popf
pop
xor
sub
shl
hlt
in
push
sbb
outsl
inc
jp,pn
adc
bsr
cmp
pop
inc
pop
mov
in
jns
lahf
cmp
push
adc
pop
das
dec
mov
les
cmp
xor
adc
add
cwtl
das
leave
les
xchg
out
stc
stos
mov
xchg
cmp
push
cli
aad
mov
movsl
add
mov
jo
sub
mov
jno
sbb
cld
je
mov
adc
pop
add
jg
push
das
adc
cmc
cwtl
and
stc
mov
mov
mov
push
js
xchg
xor
das
jmp
iret
inc
xor
push
jns
int3
sbb
rcrl
add
bound
mov
movsb
int3
rorl
dec
adc
ds
or
iret
cmp
pop
mov
xor
jp
push
mov
enter
sub
es
xchg
outsl
dec
insl
int
jl
lds
jecxz
inc
shl
push
ljmp
mov
scas
push
xor
repz
jbe
xor
lock
push
cli
cmp
mov
and
enter
rcrl
add
jmp
je
and
mov
xchg
dec
movsl
aad
sbbl
jp
sbb
js
lods
lcall
dec
adc
push
jl
sarl
sub
jns
lret
xchg
mov
mov
sahf
sahf
imul
jg
add
pusha
lock
pop
and
scas
and
stc
push
pop
mov
das
xchg
cmp
push
or
pop
scas
and
xor
jp
jl
jne
jne
out
inc
fiadds
lahf
dec
hlt
adc
call
icebp
dec
cmp
rorl
out
add
loop
and
jp
mov
ror
out
pop
pusha
mov
outsl
cld
pop
sbb
dec
scas
sbb
xchg
sahf
pop
adc
dec
mov
cli
dec
sub
adc
dec
daa
divb
or
data16
xchg
fdivrl
mov
ret
jge
movsl
jo
sbb
ss
and
bound
loop
push
pop
jg
dec
ficoms
mov
addr16
sbb
mov
ss
lock
xor
dec
dec
jae
stos
mov
hlt
jno
call
jmp
xchg
xchg
mov
aam
jnp
push
adc
aam
jl
lret
fisttps
sbb
cmp
xlat
jg
pop
push
jmp
std
or
dec
les
test
push
and
repnz
push
push
mov
dec
xchg
rcr
aaa
pop
rolb
sbb
daa
push
cli
add
mov
push
cli
cmc
in
jnp
into
movsb
cmc
in
out
insl
adc
sub
sbb
add
mov
adc
mov
outsb
call
ror
adcb
adc
push
mov
loop
push
jge
push
int
mov
shl
add
fsubs
or
clc
push
push
shrl
pusha
pushf
pop
aam
testl
and
mov
psubb
mov
ficomps
pusha
inc
cld
push
shlb
dec
and
mov
cmpsb
and
xor
ja
jno
add
std
xchg
das
xchg
jne
rorb
inc
mov
pop
popa
adc
scas
rcl
pop
dec
movsl
adc
lahf
sbb
andl
adc
cmp
lds
sbb
push
out
xchg
sbb
stos
test
ret
call
and
xor
aas
and
xor
xchg
mov
inc
ds
dec
xlat
mov
cmc
in
push
or
cmp
pop
mov
push
sbb
aam
mov
dec
add
lahf
pop
jmp
test
or
or
add
fstl
mov
mov
sub
gs
enter
mov
in
testb
or
insb
andl
push
jecxz
das
xorb
aaa
in
jmp
addl
add
jb
ret
jmp
sbb
je
jle
out
xorb
inc
mov
add
lea
aaa
fisubl
ret
xchg
add
dec
out
sbb
pop
xor
xor
aam
clc
add
enter
inc
popa
nop
sub
rorl
xchg
cmp
or
push
cli
cmp
iret
pop
jge
test
loop
movsb
mov
xchg
jnp
or
fwait
pop
pop
jns
and
or
and
xchg
mov
sub
xchg
and
jp
jmp
inc
in
pusha
jmp
outsl
jnp
imul
ljmp
mov
or
mov
sarb
enter
dec
insl
rorl
inc
or
mov
sarl
call
test
nop
lcall
leave
pop
je
scas
mov
push
mov
mov
fst
les
fisttpll
gs
insl
adc
out
xor
inc
daa
jl
mov
or
std
jmp
ljmp
bound
mov
cwtl
lods
lcall
pusha
call
bnd
dec
adc
and
cmp
and
inc
repnz
and
pusha
mov
mov
aaa
stos
lcall
inc
into
leave
sbb
arpl
fiadds
inc
stos
or
pop
cmp
pop
lds
or
mov
dec
or
inc
and
in
xlat
xchg
loopne
and
clc
mov
jno
cmove
out
push
adc
or
or
imul
js
push
inc
mov
movsl
out
xchg
outsl
stos
add
xor
je
push
sbb
mov
mov
js
adc
pushf
adc
sbb
mov
pop
add
mov
adc
or
add
sbb
adc
test
arpl
dec
aas
es
adcl
ljmp
ds
sub
sahf
push
test
cld
mov
jno
push
jo
mov
pop
sbbl
jl
and
bound
roll
mov
hlt
aad
scas
lcall
push
lldt
mov
call
inc
lea
sbb
or
mov
add
and
push
fbstp
pop
test
mov
push
and
test
and
add
lods
stos
es
nopl
decl
daa
pop
fiaddl
int
sbb
push
jo
inc
dec
jl
xchg
inc
pop
pusha
outsl
or
adc
in
mov
or
jp
sbb
movsb
fcmovu
clc
jl
inc
mul
call
std
push
mov
ljmp
inc
jmp
sub
jbe
mov
jmp
cmp
mov
sbb
mov
insb
popf
cmc
jl,pt
adcl
shll
xorb
les
jne
push
sub
pushf
insb
aam
lea
data16
jno
int3
jmp
sub
jp
xchg
test
cs
dec
inc
dec
mov
add
lock
icebp
scas
leave
fnstcw
sbb
repz
add
mov
out
scas
cmc
enter
aaa
fisubrl
adc
mov
aad
pop
xor
and
arpl
and
cmp
sbb
imulb
sbb
lcall
mov
pop
and
sub
dec
adc
pop
cwtl
filds
cmpb
mov
xchg
scas
outsb
sub
push
xlat
xchg
mul
shll
pop
sbb
repz
adc
pop
xor
sbb
insl
aad
dec
dec
mov
enter
dec
dec
pusha
roll
xchg
cmpsb
dec
in
imul
sbb
xlat
push
add
push
rolb
xor
xchg
repnz
mov
or
mov
mov
mov
or
or
add
jne
dec
sbb
dec
pop
movsl
arpl
loop
popa
dec
outsl
xor
hlt
adc
mov
jb
sbb
in
stos
aas
mov
setle
mov
push
and
mov
or
lock
test
mov
mov
or
or
jg
jl
pusha
and
out
mov
mov
pop
cmp
je
xor
cmp
shll
mov
jns
ficompl
daa
outsl
pop
call
pusha
test
dec
shll
rcll
mov
jg
adc
ljmp
or
xchg
xor
enter
xor
fisubrl
pop
adc
cmp
fcom
sbb
cli
push
fisubs
jmp
cwtl
out
or
test
mov
hlt
es
cmp
inc
push
fdivl
orl
fnstenv
add
sbbb
iret
or
addb
pop
pop
cmp
arpl
pop
xchg
inc
push
mov
ret
cmp
loop
pop
mov
sub
shlb
rol
pusha
fisttps
loope
cmp
incb
xlat
imul
inc
add
jae
push
add
jg
and
in
and
mov
push
xchg
inc
addl
mov
iret
lods
stos
test
and
nop
orb
jne
sbb
icebp
fwait
lcall
pushf
and
xchg
or
scas
packssdw
or
xchg
pop
gs
cmp
sbb
in
xor
lahf
push
movsl
push
and
xchg
pushf
cmpsb
inc
dec
divb
das
dec
pop
push
lcall
mov
out
push
scas
ret
pop
xchg
rorb
adc
adc
pushf
jg
ljmp
push
mov
mov
inc
shll
sbb
imul
mov
adc
cli
push
test
and
sar
outsb
dec
pop
xchg
outsb
call
mov
push
js
dec
adc
sbb
jno
mov
mov
scas
rorl
aas
inc
sbb
pop
or
mov
mov
shll
gs
std
arpl
dec
stc
adc
inc
outsb
jmp
mov
dec
sti
xchg
mov
xchg
add
pop
mov
mov
popa
mov
sub
mulb
out
repz
jno
adc
jecxz
lea
cmp
jae
test
mov
cmpsl
scas
dec
pop
imul
add
loope
pop
pop
mov
pop
leave
int3
mov
jp
into
lods
in
sub
pop
js
aam
mov
xchg
rclb
push
loope
jg
std
mov
mov
push
jge
add
movsl
push
repz
mov
or
and
sub
push
das
leave
and
cld
xchg
paddb
pop
fcmovnb
int3
xor
lret
aad
shll
mov
xchg
sbb
mov
jne
fs
push
xor
mov
fs
and
movsl
mov
jne
addl
call
xchg
mov
pop
xor
in
jmp
imul
dec
clc
data16
sub
pushf
imulb
iret
dec
out
mov
lds
inc
int
inc
add
mov
xchg
mov
sub
nop
mov
jge
in
pop
lods
dec
push
inc
pop
shll
loopne
shlb
pop
mov
insl
mov
sbb
and
ljmp
movsb
cmc
je
cmp
cmpl
in
inc
mov
out
rclb
imul
sbb
sub
add
insb
test
pop
jp
ljmp
mov
sub
and
in
or
adc
in
lock
aam
sbb
add
mov
xchg
push
push
lods
mov
cmc
mov
cmpsb
rol
or
jne
inc
es
outsl
pop
cmp
je
xor
pop
inc
stc
pop
movsb
fdivr
adc
jae
jb
addb
arpl
icebp
cmp
int3
add
stc
mov
mov
imul
test
ret
mov
cmp
adc
mov
test
out
scas
dec
adcl
mov
out
sub
pop
sbb
pop
outsl
or
adc
xchg
insb
out
mov
lcall
pop
mov
rcll
inc
das
insb
pop
stos
mov
push
sbb
icebp
call
imul
jecxz
mov
movsl
daa
les
andb
rcll
gs
test
mov
ljmp
sarl
mov
out
ss
mov
ds
inc
fisttpll
sbb
cmp
nop
push
mov
and
les
cmpsl
mov
imul
mov
lods
pop
fsincos
pushf
jne
clc
cmp
and
in
cmpsl
push
lods
scas
test
dec
inc
fisubrs
jp
cmp
push
aas
ret
sti
or
inc
test
sti
jmp
xor
mov
lea
lret
lea
or
test
push
fistl
jns
test
dec
jl
xor
dec
aad
or
and
inc
pop
and
push
bound
or
xor
outsb
pop
incl
inc
in
or
std
mov
movsl
push
inc
mov
dec
shll
cmp
or
stos
mov
pop
test
jno
xor
pop
sbb
mov
test
push
int
xchg
or
mov
mov
movsl
dec
aam
int
push
js
mov
mov
xchg
ljmp
push
fisttpl
cld
xor
daa
xchg
add
mov
loopne
stc
xor
or
push
sub
xchg
aas
stc
leave
adc
aam
inc
and
mov
mov
pop
outsb
ds
call
sub
lock
lahf
je
lret
mov
inc
clc
data16
add
jge
push
in
scas
je
adc
mov
rolb
sbb
pop
or
mov
outsl
stos
push
jp
jo
adc
dec
cs
test
repnz
ret
cmpsl
xchg
cmp
mov
mov
mov
aam
test
rcll
enter
adc
push
push
call
les
dec
fcompl
add
push
xor
jne
adc
mov
orl
push
pop
fyl2xp1
mov
repz
test
or
inc
pushf
inc
fwait
sbb
adc
and
jns
sysenter
mov
out
orb
mov
sbb
and
test
pop
in
fnstsw
icebp
inc
icebp
insl
xorb
enter
pusha
and
pop
cmp
divb
inc
shrb
xchg
les
mov
adc
push
ss
outsl
lods
rcll
sbb
imul
mov
cmp
mov
aam
pop
push
mov
sbb
imul
jmp
sbb
push
sub
mov
fs
cli
push
jmp
test
push
mov
aaa
dec
or
jbe
enter
je
push
test
push
orb
cmp
ficoml
ret
scas
out
push
cwtl
adc
rcr
mov
mov
arpl
stos
cmp
and
lods
jmp
sbb
scas
adc
iret
mov
jge
ljmp
jb
fisubs
sbb
xor
push
ror
inc
in
xor
test
pop
xor
cwtl
and
adc
push
add
and
inc
out
arpl
mov
dec
inc
scas
pop
or
inc
add
pop
je,pt
shr
fists
lods
icebp
jg
incl
jns
insl
mov
lods
cmp
jne
pop
subl
push
sbb
sub
inc
xor
pop
inc
lock
or
jl
jge
inc
pusha
push
shlb
fcoml
mov
or
cmpsl
popa
scas
andb
ret
and
nopl
mov
mov
jg
xchg
jo
sbbl
popa
and
aad
mov
test
out
add
xchg
cltd
mov
hlt
mov
out
adc
push
cmp
fcmovnbe
jmp
aas
movsb
mov
or
dec
add
pop
outsb
sbb
std
pop
int3
fiadds
imul
iret
call
push
shrl
daa
cmc
mov
adc
test
push
or
adc
jno
xchg
pop
sub
bound
mov
cld
xor
aas
pop
cmp
popf
xor
pop
mov
mov
or
and
je
outsb
mov
fcmovu
or
or
push
jmp
imul
cmp
negb
jne
mov
dec
pop
leave
cmp
jle
les
push
clc
or
mov
mov
lds
hlt
pop
out
test
pop
adc
cmp
stos
lds
shll
or
xchg
push
push
hlt
xchg
push
cld
cmp
js
push
daa
test
rdmsr
hlt
mov
test
inc
cmp
ret
or
mov
push
in
dec
or
addb
xor
out
insl
mov
in
add
mov
loopne
stos
cwtl
cmpb
aam
xor
push
sahf
xchg
adc
xor
pop
pusha
notl
movsb
dec
or
adc
xor
aad
loope
or
pop
jae
js
fildl
pop
es
je
or
xor
shl
fsubrs
xchg
pop
adc
and
dec
shll
sbb
xchg
stos
xor
mulb
setns
sbb
mov
test
nop
adc
xchg
pop
add
loope
pop
push
xchg
inc
sub
adc
fwait
ss
pop
cmp
add
push
and
adc
shll
sbb
lcall
lods
cmpsl
adc
dec
and
lcall
adc
daa
pop
loopne
mov
movsl
or
loopne
ret
push
outsb
jns
mov
clc
xor
or
xor
ret
mull
clc
das
aam
jno
out
div
xor
repnz
dec
test
xor
repz
lock
mov
jns
push
and
fprem
ja
in
xchg
mov
add
pop
cld
xor
sub
push
out
enter
scas
jge
imul
mov
outsl
call
or
mov
mov
pop
shrb
dec
in
xchg
sbb
nop
inc
adc
push
mov
fdivrl
or
push
test
cmpsl
inc
or
ficompl
xchg
add
fs
add
lret
mov
sub
and
mov
dec
jmp
xor
or
add
leave
mov
stc
icebp
leave
sbb
pop
popa
enter
addl
add
dec
or
mov
imulb
pop
adc
cmc
and
insb
sub
or
stos
add
or
std
mov
cmp
in
push
call
sub
lret
daa
or
leave
enter
daa
inc
cmp
sbb
push
pop
bound
inc
and
jae
jns
pusha
shlb
inc
loop
mov
add
outsl
scas
clc
mov
sbb
addr16
push
push
pusha
mov
cmp
push
inc
pop
jo
sub
fadds
cli
fisubl
in
xchg
sti
push
pop
sub
inc
enter
loope
fimuls
out
adcb
pop
xchg
mov
aaa
pop
pop
lcall
adc
int
xor
fdivs
adc
shlb
xchg
sub
stos
jne
xor
jg
sub
rcr
fsubr
rcl
cmc
repnz
test
scas
aas
aad
ret
inc
jmp
push
lahf
xor
int3
insb
fldt
inc
sub
jb
mov
add
lea
pop
xlat
xchg
xor
rcr
cld
lock
sub
dec
cmp
lds
dec
aaa
pushf
ror
push
ja
push
inc
mov
xchg
and
dec
jae
jno
xor
mov
jo
xchg
sbb
loop
imul
mov
punpcklwd
pop
mov
jb
mov
mov
test
sahf
dec
xor
mov
ja
xchg
pop
xchg
push
and
push
mov
and
lret
stc
cmp
xorl
test
mov
loopne
or
xchg
jae
sbb
and
das
add
push
jno
cs
jmp
sub
xor
ror
xorb
add
mov
ds
iretw
aam
std
cmp
mov
es
fsts
push
lret
mov
xor
clc
xchg
push
fcmove
jno
mov
cmc
call
inc
outsb
sbb
sbb
imul
inc
dec
mov
les
rcll
push
pand
push
aam
jge
inc
callw
das
xchg
outsb
push
inc
push
aaa
nop
test
sbb
jp
mov
jl
cmp
shr
dec
andb
xor
lock
ljmp
push
sbb
mov
negb
pop
ljmp
insb
xchg
push
add
popa
pop
repz
adc
mov
fwait
lea
push
sbb
push
ljmp
lock
xchg
mov
pop
or
mov
clc
xchg
cmp
in
outsb
ljmp
aad
xchg
test
pop
add
gs
clc
test
and
and
push
add
sbb
sbb
push
pop
dec
or
loopne
jne
icebp
or
push
clc
mov
nop
lock
shl
mov
push
dec
adc
xchg
lock
mov
inc
sti
dec
ret
push
pop
dec
mov
in
imul
xor
fidivl
arpl
adc
pop
fcoms
dec
cmc
add
adc
gs
ljmp
aaa
mov
mov
jge
in
hlt
mov
sbb
add
inc
les
push
add
shrb
jle
jne
pushf
push
jecxz
clc
test
in
mov
xchg
js
add
xor
sbb
ret
aam
fs
daa
pop
and
inc
cli
test
loopne
insb
sbb
js
insl
push
ss
int3
nop
jmp
xchg
dec
inc
add
add
popa
dec
iret
pop
lds
pop
pop
jno
xor
cld
rolb
and
rorb
sahf
or
test
dec
fildll
jmp
dec
adc
fldt
std
cmp
or
out
add
mov
sbb
push
push
jl
ja
out
dec
mov
sub
jecxz
scas
jmp
mov
and
sub
sub
cmp
xchg
or
adc
loope
jne
imul
or
addb
jo
cwtl
out
sbb
rorl
dec
xchg
jnp
out
inc
jl
lret
in
cmc
adc
repz
xor
into
sbb
fldcw
popaw
int3
jge
sbb
aaa
stc
gs
pop
or
cmp
out
dec
pop
imul
mov
subl
push
and
jno
imul
add
and
aaa
imul
cmp
mov
push
cmpsb
or
popa
mov
lahf
cmc
leave
and
adc
push
mov
pop
mov
in
add
inc
pop
pop
lret
aam
cmp
or
hlt
inc
cmpsb
mov
mov
test
je
mov
xchg
enter
div
cs
push
lahf
jo
adc
mov
xorb
inc
xchg
repnz
test
es
test
adc
jle
push
inc
int
lock
adc
nop
jo
popfw
or
data16
adc
mov
xor
aaa
cmp
xlat
cld
adc
cmpsl
jp
loopne
sti
bound
push
cmp
or
sbb
fwait
xchg
xchg
mov
sub
mov
and
sub
pop
dec
push
and
dec
inc
das
fs
mov
xor
sbb
jge
add
sub
xchg
xchg
pop
shrl
sub
mov
jno
iret
loope
imul
sbb
mov
data16
fimuls
sbb
clc
icebp
in
adc
das
cmc
xchg
mov
das
repnz
dec
out
mov
pop
mov
shl
push
insb
insb
adc
stos
mov
or
outsl
sub
daa
ffree
jmp
imul
mov
sub
pushf
sbb
sbb
leave
mov
pop
or
into
xchg
adc
mov
fisttpl
pop
xchg
sbb
xor
push
lock
dec
pop
inc
rorl
sub
test
lahf
sbb
test
test
xor
jno
fsubrs
mov
not
jb
xor
icebp
lods
dec
sarb
movsl
jg
jge
cmp
mov
roll
cmp
push
ljmp
dec
cwtl
pop
shll
out
sti
mov
mov
mov
fidivrs
shlb
mov
xchg
loopne
or
mov
push
and
ret
add
mov
adc
outsb
xchg
psadbw
mov
daa
mov
ds
mov
inc
push
int
decb
cmp
hlt
dec
ret
mov
sub
add
push
sub
test
cs
aad
lcall
addr16
in
or
arpl
or
ret
inc
rcrl
in
push
std
and
add
insl
cmp
add
xor
inc
nop
popl
stos
pop
lcall
or
lea
jae
sub
stos
mov
push
push
lret
rcrb
hlt
inc
xchg
rolb
fistpl
mov
pop
sub
cmp
xor
xor
icebp
dec
test
mov
cmpsl
out
aam
and
pop
lods
ret
sbb
mov
mov
push
push
pop
jecxz
movb
push
loope
xlat
dec
insb
dec
rcll
cmc
and
sti
leave
cmp
xchg
xchg
add
cwtl
inc
xabort
cmpsb
mov
mov
loope
sub
add
cmpxchg
inc
leave
add
test
loop
loopne
aam
lahf
cmc
scas
add
gs
mov
fldl
mov
fsts
xor
sbb
clc
test
sub
mov
inc
jl,pn
jb
pop
loope
jge
aam
mov
push
sbb
das
inc
pop
add
cmp
cmp
loopne
hlt
xor
push
gs
or
and
pop
jo
and
jl
mov
push
int
add
xor
add
lahf
cli
andb
mov
insb
es
lea
pop
mov
adc
mov
rcrl
inc
clc
xor
sbb
xor
inc
data16
ja
mov
and
mov
aam
popf
roll
add
imul
adc
sub
shlb
loopne
icebp
insb
lcall
mov
imul
orl
stos
rol
cmp
mov
out
mov
pop
sbb
or
cmp
push
mov
mov
stc
ret
cmpsb
sub
cmp
fiadds
mov
jp
in
loopne
inc
outsb
dec
ret
cmc
or
mov
sbb
pop
add
mov
inc
fidivrs
ret
in
testl
push
cli
inc
jmp
mov
test
in
scas
insl
rclb
mov
pop
mov
mov
loop
std
sbb
add
cmp
das
shlb
pop
dec
iret
mov
jge
repz
push
sar
cli
ja
in
or
push
push
add
jae
rol
push
dec
mov
dec
jecxz
test
cwtl
loope
mov
pop
push
cli
aaa
in
call
pop
cmc
adc
xor
fisttpll
cmp
pop
mov
dec
xchg
js
mov
dec
movl
mov
mov
sbb
stos
jle
testb
ret
imul
push
cli
rclb
and
and
push
adc
and
nop
out
test
fcmovu
shrb
out
sbb
ljmp
or
dec
aaa
mov
lahf
jp
add
lods
xchg
push
adc
and
daa
stos
les
fs
loop
add
insb
lock
mov
mov
ljmp
cmp
xchg
addr16
jne
rcl
mov
aas
in
add
mov
cmp
ret
test
inc
or
push
lds
adc
in
lahf
mov
ret
sub
sbb
inc
aaa
inc
pop
push
popa
mov
in
mov
cwtl
fiadds
and
and
jno
loope
pop
fistl
rcrl
rcl
ljmp
stc
imul
int3
shlb
push
xchg
scas
fisubs
xchg
dec
xchg
mov
sbb
pop
cmp
cmp
mov
sub
mov
lock
inc
das
scas
call
xchg
mov
mov
pop
rclb
loope
jo
sar
xchg
cmp
fs
mov
cmp
jle
add
mov
jl
les
pop
push
scas
jp
xchg
mov
inc
jg
and
push
sti
dec
jbe
fwait
mov
mov
sub
clc
pop
lret
sub
js
or
xor
stos
out
cmp
xchg
stos
roll
sti
xor
fdivrs
xor
push
mov
lock
out
dec
mov
mov
xor
testl
sarl
fstl
nop
imul
mov
fcmovb
and
fwait
jle
shld
or
pop
xor
sub
mov
rol
push
inc
push
push
xor
jbe
adc
ret
add
lea
je
aad
lret
sbb
push
sbb
stos
inc
cli
dec
add
nop
fimull
push
ret
pop
lcall
xor
jp
xorb
mov
push
mov
mov
push
mov
xchg
and
mov
xor
push
mov
loopne
outsb
ljmp
aam
dec
hlt
call
mov
movsb
xchg
loop
adc
mov
xor
ret
and
push
call
ret
jg
pop
push
scas
jae
mov
test
loop
inc
cld
push
or
mov
je
mov
popf
push
repnz
cs
jns
ret
das
mov
dec
fdivr
push
in
das
daa
adc
push
dec
leave
xor
dec
sub
jmp
sub
adc
mov
mov
jns
inc
push
rcll
sete
push
cwtl
pop
test
dec
mov
add
cmp
cltd
dec
movsb
sbb
scas
fadds
out
adc
test
lock
pop
in
pop
push
sbb
cmp
jp
nop
cmpsl
dec
int
cmp
xchg
fmull
test
ja
mov
adc
movsb
jo
fiaddl
push
cmp
xor
mov
mov
ret
popa
cltd
mov
push
push
and
push
add
call
rcrb
add
add
out
popa
stc
sahf
pop
pop
aam
in
push
test
movl
mov
ret
stos
fdivl
or
mov
ljmp
stos
xchg
fdivr
dec
cmp
testl
insl
clc
mov
sub
sub
js
fwait
in
jge
fwait
leave
and
mov
cmp
and
fwait
push
jnp
sarl
stc
loop
lods
mov
mov
mov
and
pop
clc
mov
inc
cwtl
cmp
lahf
adc
cmpsl
xchg
pop
jno
dec
loop
mov
lods
stos
adc
loop
dec
sbb
pushf
push
and
or
aad
adc
mov
mov
mov
rcr
xor
lea
xor
sbb
jns
movsb
pop
and
call
inc
fwait
lock
in
jae
dec
sub
insl
icebp
sub
mov
push
daa
lcall
mov
sub
push
inc
aaa
push
adc
add
pusha
lock
and
cld
clc
mov
mov
lods
sub
or
jle
test
xor
sbb
loop
pop
mov
or
push
movsb
fwait
hlt
push
lret
inc
fs
push
inc
jmp
or
ja
push
mov
inc
jle
outsl
pushf
sbb
jne
or
insl
cli
int
and
dec
sub
rol
sar
xchg
inc
sbb
mov
cmpsb
cmpl
pop
jl
in
insl
dec
xor
dec
mov
cmp
dec
popl
mov
inc
in
inc
sbb
pop
rcl
mov
aaa
mov
xchg
movsl
call
loopne
mov
out
fdivrs
or
fcmovnbe
adc
push
insb
addb
push
cmp
or
sub
daa
mov
dec
xor
je
mov
pushf
popl
ss
ljmp
mov
sarb
shlb
shl
push
fmull
mov
out
add
enter
pop
xor
pop
push
lcall
xchg
push
testl
ljmp
inc
lds
std
cmp
scas
cmp
movsl
xchg
pop
loopne
fwait
mov
loopne
sysexit
push
mov
adc
or
mov
xor
popa
xchg
fisubl
push
adc
ret
mov
pushl
ficomps
hlt
mov
pop
jge
add
jne
push
and
jp
xchg
int
adcl
add
bound
jl
mov
pop
jge
jecxz
std
dec
push
jl
imul
outsb
push
fists
pop
xor
es
test
push
or
loop
cmp
lods
scas
cmc
add
mov
sub
lahf
xchg
push
adc
and
movsl
sub
lahf
jo
outsb
mov
scas
add
pushf
movsb
xchg
push
out
sub
test
xchg
inc
hlt
and
ja
dec
fldenv
sub
mov
sbb
add
sbb
sbb
or
mov
imul
dec
xchg
xlat
les
push
jns
stc
xor
sbb
pop
push
mov
xor
jg
sbb
dec
inc
jns
xchg
adc
lcall
inc
lahf
addr16
adcb
repnz
push
pop
insl
sbb
popa
cli
mov
clc
lods
push
sub
vpmaxsd
and
cmp
in
push
gs
lock
jo
xor
mov
hlt
loope
cmp
jl
rol
inc
mov
xchg
push
and
xchg
lock
pop
xchg
test
mov
cmp
cmp
ds
stos
addb
orb
cmp
daa
sarb
dec
add
add
fstl
lcall
icebp
jae
cmp
xchg
es
pop
adc
sti
jle
push
mov
ret
add
andl
sbb
mov
xor
push
sub
inc
stos
popf
add
mov
rol
jl
aaa
ss
dec
mov
xor
je,pt
cmpsl
pop
pop
ss
cmc
push
inc
lcall
loope
dec
lcall
pop
test
ror
mov
fwait
sbb
sbb
push
sbb
mov
mov
mov
mov
and
lds
dec
or
cmp
sar
je
inc
inc
idivl
mov
clc
cld
lods
repz
loop
out
or
or
mov
add
adc
xor
mov
mov
stos
ret
sub
pop
loope
sarl
mov
test
mov
outsl
bnd
and
jp
dec
iret
mov
xchg
bound
call
stos
jle
scas
pop
cld
hlt
push
mov
into
add
lock
cltd
les
dec
sub
pop
rol
inc
adc
mov
inc
jmp
insb
push
lds
mov
clc
push
in
shll
test
daa
mov
setge
mov
and
xchg
sub
sbb
mov
test
mov
cmpsl
subl
sbb
sbb
lea
icebp
or
or
sub
gs
fisubs
cmp
ds
inc
jo
in
fistpl
repnz
or
add
hlt
test
loop
incl
movsl
push
das
or
lea
and
jnp
icebp
cli
push
push
jmp
jmp
and
lods
jne
xchg
lahf
insl
ljmp
fsubl
andb
pusha
iret
mov
std
mov
mov
xor
mov
xchg
mov
arpl
jo
inc
mov
fidivs
mov
jno
or
sbb
movsl
arpl
insl
pop
pop
or
in
or
subb
mov
xchg
xchg
dec
mov
xchg
or
mov
imul
lret
jge
cmp
cmpsb
fisttpll
sbb
stc
mov
push
loopne
jbe
ja
and
inc
cmp
cli
xchg
mov
dec
and
rcl
mov
hlt
xchg
int
xor
adc
dec
clc
and
jo
push
leave
shll
hlt
lahf
inc
jmp
les
or
add
cmp
mov
int3
mov
push
out
jg
adc
lahf
add
add
cmp
popa
daa
hlt
dec
lcall
mov
jns
jbe
jno
fwait
jmp
movsl
incb
imul
xlat
lds
jo
adc
out
js
mov
or
testb
add
or
adc
rorl
int
inc
shll
test
clc
mov
jp
cmp
cmp
dec
mov
mov
outsl
dec
out
sub
aad
arpl
cwtl
clc
and
sti
repnz
mov
adc
cmp
adc
pusha
mov
js
pusha
fldenv
mov
movsl
and
pop
ficoml
inc
scas
push
dec
and
mov
stc
data16
jp
and
popf
push
sbb
push
jno
popa
push
and
and
sub
rorl
or
icebp
fs
js
push
dec
cmp
jle
cmc
lock
pop
cmp
inc
pop
mov
add
shll
xchg
int3
cmp
sbb
lcall
imul
inc
lret
add
adc
inc
fstpl
jl
movsl
inc
sbb
es
mov
or
pop
sarl
add
outsb
and
and
cld
lods
xor
sub
jge
push
xlat
mov
icebp
stos
cmp
jg
das
sub
push
mov
or
or
lods
jno
aaa
lock
addr16
mov
push
mov
hlt
sub
inc
movsl
jne
cmp
iret
xchg
or
jg
psllw
sahf
hlt
xorl
and
mov
jae
and
mov
push
inc
jae
test
lods
jb
lock
mov
mov
mov
jge
pop
mov
dec
xor
push
add
xor
cmpsb
mov
mov
mov
in
fs
cwtl
ds
jg
sti
xor
mov
push
insb
cmp
xchg
mov
push
sub
addl
fcompl
in
ret
xchg
sbb
lea
outsl
fsubrs
scas
xchg
cmp
loope
fstl
loopne
jno
fcomi
sahf
int
sti
jne
mov
shrb
jae
or
push
inc
mov
sbb
mov
mov
subl
jecxz
mov
sbb
lods
inc
ret
lods
lcall
icebp
imul
cmp
xchg
pop
mov
and
ret
or
popf
sub
loopne
mov
xor
mov
inc
pop
nop
nop
xchg
add
jecxz
push
gs
jnp
xor
sub
lret
in
jmp
movsl
ds
insl
sub
inc
cmpsb
aaa
jns
aad
mov
faddl
xor
addl
test
aas
mov
xor
xorl
pop
dec
shlb
jecxz
lret
sbb
gs
jle
enter
aas
mov
sbb
ds
cs
popa
pop
adc
inc
cmp
sahf
xchg
pop
and
push
cli
jns
sbb
rcl
or
mov
sbb
or
or
jo
lock
movsb
aam
data16
dec
lock
scas
pop
movsb
pop
push
jo
and
aam
bound
jae
jp
sbb
js
ficompl
adc
jns
xorb
add
jae
and
cmp
inc
and
divl
adc
outsl
and
push
xor
add
dec
mov
aas
and
pxor
sbb
cwtl
sub
int3
cmp
in
js
jle
dec
lock
pop
or
sub
or
test
adc
dec
adc
or
add
clc
in
jg
cmp
adc
inc
call
dec
jle
pop
aam
and
cld
xchg
gs
add
scas
mov
push
inc
mov
out
mov
pop
inc
pop
pop
sbb
adc
cmp
inc
cld
xor
mov
push
add
and
xor
mov
icebp
popa
dec
mov
push
and
leave
pop
push
or
inc
and
xchg
jbe
cmp
xchg
addb
pop
out
inc
push
add
insl
mov
aaa
inc
lret
loopne
aad
movsb
es
add
les
inc
mov
dec
push
adc
mov
sub
pop
mov
cmp
insb
orb
mov
shrb
ja
mov
dec
inc
inc
out
loop
andl
jecxz
jecxz
cmp
or
hlt
lea
rolb
inc
inc
incb
xor
pop
in
push
cmp
in
not
icebp
icebp
loopne
popa
imull
cmpsl
mov
push
pop
cld
loope
push
mov
dec
sub
icebp
int
imul
push
stos
enter
or
icebp
pop
xlat
jo
enter
lods
pop
jae
jecxz
sbb
mov
or
int
mov
mov
pop
fnstcw
inc
nop
shlb
xor
push
lds
push
loope
add
jno
jle
sahf
into
jp
sub
rcll
pop
or
mov
xchg
das
mov
mov
repz
sub
mov
outsb
cmpsl
push
into
lret
out
xor
loop
sub
or
into
subb
pop
inc
mov
mov
mov
js
xchg
ret
push
ljmp
cmpsb
fldt
cmp
mov
jp
ret
xchg
imul
lea
lods
lock
aad
je
add
clc
adcl
cltd
xchg
iret
xchg
loope
scas
jmp
xchg
es
mov
ret
cmpsb
sbb
pop
jbe
mov
dec
sarl
call
pop
jge
and
xor
hlt
rorb
sbb
add
jne
sub
adc
sub
cld
pop
xchg
shll
jno
jo
test
lds
int
js
or
pop
xor
xchg
lahf
movsb
sbb
and
xor
pop
loopne
fs
inc
adc
movsl
sub
mov
adc
inc
das
mov
popf
fldenv
ret
xchg
andb
xchg
adc
lock
or
adc
pop
or
pop
xchg
icebp
cmp
jno
mov
js
scas
push
or
jno
adc
cmp
and
lret
pop
push
jle
setg
push
pushf
icebp
pop
stos
daa
mov
jecxz
out
cltd
dec
mov
and
movsb
imul
decl
push
xor
xor
adcl
inc
or
mov
es
jnp
jmp
shl
sbb
and
push
sbb
jmp
mov
push
mov
lahf
mov
push
add
subb
xor
adc
subl
in
dec
js
jl
sbb
test
mov
jg
movl
rclb
xchg
rcll
popf
inc
repnz
adc
xchg
das
scas
popf
mov
cmpsl
fildll
or
dec
push
add
push
mov
xchg
sbb
mov
jnp
addr16
std
adc
loopne
lods
pop
outsl
popf
cmp
xchg
ss
je
arpl
mov
mov
xlat
addl
fs
and
sbb
repz
mov
js
movsb
jnp
sbb
cmpsl
jbe
mov
outsb
and
dec
mov
fimuls
lods
mov
inc
into
inc
push
xchg
cmp
mov
cwtl
pop
adc
test
mov
enter
nop
push
cld
loope
je
shll
lahf
into
dec
in
xlat
jge
clc
sub
aam
roll
push
repnz
mov
dec
sbb
movl
push
sub
dec
or
and
and
xchg
rorl
dec
pushf
mov
mov
gs
popf
inc
fdivs
fistps
xor
into
jge
pop
rclb
std
aad
jne
jns
cld
imul
ja
into
mov
int
imul
test
mov
pop
cmc
inc
push
sahf
jge
push
test
stos
stos
orb
inc
xchg
pop
aaa
roll
test
jne
loope
dec
push
add
add
add
pop
xor
sbb
push
pop
arpl
add
jp
ja
inc
fucomip
or
sbb
push
push
test
sub
outsb
inc
jg
das
jge
mov
inc
lcall
into
xor
mov
enter
mov
es
add
and
cwtl
filds
add
pop
and
xchg
movsl
sub
adc
xor
subl
aam
sarl
sub
stos
data16
int
lahf
fabs
rol
adc
movsl
scas
or
hlt
das
sbbb
jo
push
cs
scas
aaa
xchg
je
cltd
sub
clc
scas
cs
xlat
jo
inc
cmp
data16
movsl
push
imul
pop
loope
adc
add
pop
and
imul
jno
outsb
mov
adc
int
xor
xor
mov
mov
jnp
inc
imul
mov
fidivrs
add
push
xchg
add
lret
fstps
shll
sub
jae
or
cmp
push
into
xchg
je,pn
push
jp
and
out
mov
bound
xor
jnp
fcoml
inc
dec
cmp
mov
or
sub
lock
in
mov
xchg
inc
pusha
dec
sbb
shrb
xchg
aam
ss
aam
sub
and
xorb
fiadds
int
or
movsb
cltd
lock
or
pop
cs
test
adc
cmp
push
shlb
jno
jns
pop
add
pop
das
movsb
popa
aad
lret
add
daa
push
cmc
scas
ss
jns
addr16
jle
pop
jmp
shlb
mov
or
push
mov
ljmp
cmp
push
mov
bound
jbe
xchg
enter
adc
les
cmc
je
lods
enter
mov
push
cwtl
and
mov
add
jo
cmp
pop
rorl
jo
pop
jb
lock
mov
or
shl
jo
and
xchg
jmp
or
inc
out
mov
and
or
into
add
dec
insb
mov
or
in
enter
das
sbb
rcll
dec
lcall
or
and
ljmp
and
or
in
push
and
je
stos
inc
shll
or
fisubs
xchg
sbb
sub
movsl
sbb
add
adc
test
dec
mov
sahf
cmp
inc
xchg
xchg
jle
aad
mov
stos
unpckhps
stos
pop
push
cld
clc
dec
mov
in
inc
mov
in
push
aas
in
xchg
lcallw
les
movsb
popa
xchg
jns
mov
test
nop
adc
hlt
icebp
fldl
mov
jmp
cmp
mov
insb
cmp
aaa
cmp
shlb
sarl
dec
jg
sub
rolb
pop
out
mov
xchg
fs
aas
mov
call
and
into
cwtl
call
cwtl
dec
jg
filds
push
dec
loopne
inc
sbb
pusha
clc
inc
sub
pop
mov
mov
mov
dec
negl
iret
adcl
cmp
push
pop
push
mov
xor
add
dec
movsb
xchg
out
stos
sbbb
dec
jecxz
jg
andb
icebp
sbb
adc
imul
sarl
out
in
sub
iret
and
ljmp
jb
add
mov
addl
in
dec
sahf
sar
inc
mov
pop
xor
pop
sbb
iret
ror
cmpsl
inc
fadd
pop
mov
rolb
sbb
push
jno
cld
es
add
addr16
and
mov
fisubl
jo
popa
fisubrs
jb
cmp
jo
sbbl
dec
scas
push
add
icebp
lret
cltd
add
push
cmp
nop
xchg
daa
sbb
mov
sbb
fsubs
andl
and
cmp
jmp
loopne
mov
add
cmp
xchg
ljmp
cs
mov
mov
imul
loopne
lock
push
out
xchg
jl
je
mov
adc
jmp
shrb
sahf
xchg
and
mov
je
dec
inc
dec
mov
shl
add
pop
pop
outsl
movsb
xchg
add
outsb
xlat
add
inc
in
aad
imul
scas
les
mov
movsb
test
jo
mov
add
add
rorl
pop
pop
mov
dec
adcb
clc
in
cmpsb
push
icebp
addb
lahf
xchg
push
ljmp
imul
jmp
ror
sbb
jp
jecxz
jo
mov
sbb
sbb
and
inc
mov
sti
xor
pop
inc
jnp
add
clc
sbb
jbe
shl
mov
enter
pop
shll
ficoms
std
orb
push
test
mov
jae
sbb
aaa
testb
fsubr
cmp
pop
xchg
sbb
ret
pop
orl
sahf
testb
and
addl
cmp
test
inc
xor
jp
shl
rorl
fists
fcmovb
jl
mov
sets
leave
add
test
sar
es
outsl
and
aad
push
loope
push
addr16
add
in
sbb
jle
mov
xor
cmp
adc
stc
pop
popf
gs
test
pop
movsb
sbb
lea
or
mov
call
add
push
test
xchg
adc
add
in
jbe
push
adc
orl
sahf
loop
call
mov
test
sub
ror
xlat
mov
jp
cmp
add
mov
aas
jne
sbb
lds
cld
cmp
cmp
cmp
cltd
sbb
add
lds
push
xor
data16
repz
out
cmp
pop
add
pusha
sbb
pop
pop
or
cli
adc
cmp
mov
sub
fdivs
imul
popa
xchg
add
mov
and
xchg
pushf
pop
lahf
push
js
jno
repnz
cmp
dec
or
dec
xor
pop
or
adc
xchg
xor
hlt
add
sbb
loope
test
clc
jb
jge
jmp
into
insl
cwtl
out
les
dec
cmp
and
or
push
hlt
or
and
sub
sub
mov
xor
pop
mov
dec
mov
test
popf
jp
pop
in
imul
jge
call
add
pop
dec
mov
shrl
sbb
add
in
stos
filds
fucomi
mov
push
pop
jnp
jo
cmp
jmp
rcr
ja
push
add
sbb
les
push
insb
mov
dec
push
int
xor
mov
jge
mov
xchg
xor
es
xor
je
sahf
lock
or
icebp
dec
test
leave
in
jno
dec
inc
or
cwtl
jo
test
fcom
arpl
pop
mov
orl
test
fdiv
hlt
jl
cltd
js
xor
pop
test
adc
mov
adc
pop
cmp
subb
int
fsubrl
js
mov
nop
js
inc
lcall
mov
imul
lret
bound
shlb
aam
lods
shrl
and
xlat
fldl
sub
cwtl
pop
push
mov
sbb
adc
cmp
mov
push
aas
mov
inc
add
dec
rcll
out
inc
or
mov
in
mov
mov
addr16
mov
push
pop
movsl
rolb
inc
jmp
stos
enter
adc
mov
shll
test
lods
pop
or
add
ljmp
xchg
mov
add
lahf
addl
outsb
daa
jns
lock
out
es
test
dec
sbb
mov
mov
subb
pavgb
push
cld
test
test
stos
popa
xchg
cmpsb
mov
inc
shlb
dec
ljmp
js
push
xor
push
dec
cmpsb
lea
or
clc
mov
inc
out
push
pop
cli
clc
inc
cmp
cmp
jb
jle
dec
dec
testl
stos
jo
xchg
jno
push
jbe
scas
and
rol
andb
call
jl
outsl
aad
rcll
mov
cld
add
or
lods
arpl
jmp
adc
xorb
nop
insb
gs
jp
xchg
nop
mov
push
rorl
jns
xlat
test
lret
and
adc
mov
jo
popl
gs
push
shll
cmp
jl
pop
movsb
adc
mov
sub
outsb
repz
mov
test
rcll
mov
mov
mov
test
in
xor
test
adc
add
cli
pop
jns
enter
cmp
insl
aad
pop
pop
inc
push
data16
push
mov
into
dec
xor
jecxz
out
jnp
cmp
adc
arpl
int
cmp
mov
aam
xchg
inc
out
movsb
pusha
insl
xor
cmc
rol
loope
push
or
lods
icebp
jno
dec
jl
je
sub
push
bound
js
mov
shlb
in
pop
dec
dec
dec
repnz
or
lahf
sbb
cmpsl
pusha
mov
popf
or
subl
in
adc
cli
or
hlt
xor
fistl
mov
xchg
jo
mov
xchg
dec
sbb
jmp
mov
lret
or
pop
in
arpl
daa
std
jno
enter
jp
add
ljmp
add
mov
sub
fsub
adc
sub
test
xchg
lock
mov
add
sub
iret
dec
movsb
and
push
subl
push
dec
lods
test
dec
test
push
ljmp
test
push
cmp
and
repnz
scas
inc
adc
je
sub
shrl
jp
shll
or
xor
pop
loopne
jb
inc
es
mov
cmp
xlat
cmp
fs
inc
jae
movsb
add
ss
jle
xchg
ret
cmp
stc
cs
cmp
or
mov
pop
outsb
bound
clc
daa
into
orb
jnp
mov
xchg
dec
shlb
cmp
cld
jo
addr16
lret
out
jo
popf
or
arpl
dec
adc
push
das
mov
sbb
push
inc
jbe
jp
testb
mov
ja
dec
cmp
ret
push
popa
and
insb
pop
iret
mov
popa
xlat
roll
pop
mov
lret
cmc
push
fidivrl
cmpb
push
xchg
shlw
xor
imulb
scas
dec
lock
lcall
mov
or
cmpsl
js
adc
stos
and
sbb
or
sbb
rcrl
rolb
fistl
push
fiaddl
lods
adc
adc
add
insb
sbb
adc
adc
cli
in
xorl
lret
iret
mov
pop
cli
leave
pop
lods
daa
pop
cmp
cmp
sbb
or
and
pop
loop
mov
mov
sti
bound
mov
cmpb
and
pop
jge
pop
imull
scas
nop
ret
ja
cmpsl
xchg
cld
fnstsw
pop
xchg
or
or
mov
movsb
mov
cmp
xchg
mov
ret
roll
jnp
mov
push
mov
mov
add
mov
inc
lahf
pop
adc
nop
lock
inc
in
pop
mov
xchg
out
or
movsl
call
sahf
nop
ficoml
jp
mov
addb
fsubs
push
fcoml
and
cmp
mov
addb
sbb
jp
shr
es
sub
andl
nop
mov
xor
pushl
and
in
add
js
cmpl
ja
xor
push
xor
jg
add
rorl
pop
test
sbbl
mov
inc
fcoms
mov
ffree
repnz
pop
jae
adc
jp
add
mov
pop
cmp
lret
movsb
mov
mov
out
shr
push
push
jge
fbstp
adc
sub
out
push
das
push
xchg
dec
out
sub
in
xchg
jmp
cmp
iret
cmc
mov
adc
cmc
mov
frstpm(287
aaa
push
int
fwait
xchg
fildll
xlat
pop
imul
scas
dec
mov
push
mov
dec
jg
andb
add
shlb
pop
cld
push
adc
jns
xchg
mov
lock
daa
mov
in
sbb
mov
xchg
inc
es
jbe
pop
lcall
stos
cli
xchg
inc
jp
imul
mov
jnp
test
mov
pop
icebp
or
fsubrs
les
icebp
orl
jp
sub
imul
dec
lds
adcb
and
rolb
test
and
cmp
repnz
fpatan
inc
sub
push
add
scas
jo
push
xlat
sbb
push
bound
cmpsb
insl
repz
and
inc
cmp
cli
adc
outsb
push
shlb
xchg
and
xor
loopne
loope
int
or
mov
push
in
cs
bound
ds
adc
jecxz
xor
and
inc
ljmp
pop
xor
adcb
test
aam
shlb
or
and
stos
sub
xchg
sub
mov
xchg
lret
sbb
jbe
adc
aam
mov
sub
dec
decl
ljmp
push
clc
dec
ret
xor
lods
sub
adc
xor
sbb
cwtl
repnz
push
cmp
div
pop
sbb
dec
sti
mov
pop
xor
xchg
pushf
pop
jge
inc
loopne
or
mov
int3
les
push
inc
xchg
cli
dec
mov
jns
push
clc
cmpsl
test
ret
aaa
cmpb
enter
and
adc
stos
test
push
pusha
imul
xchg
sbb
xor
inc
iretw
mov
push
push
push
mov
mov
and
mov
xchg
jp
in
clc
pop
inc
lahf
sub
cmpsb
mov
leave
pop
adc
aad
mov
shr
push
jecxz
xchg
mov
cmc
cmpsl
pop
xchg
ss
daa
lret
test
lahf
ja
imul
addl
int
call
add
test
std
js
push
and
nop
outsb
js
scas
push
lahf
mulb
jns
mov
sbb
cmp
and
shl
imul
adc
subb
push
pop
jg
mov
sahf
or
push
sahf
adc
push
leave
adc
clc
cmp
push
pushf
je
movb
mov
out
jb
adc
lock
rorl
stc
scas
adcb
ja
popf
xor
mov
and
jns
js
pop
loope
or
addr16
pop
fs
add
cmpsb
pop
out
nop
aam
stos
adc
idivl
movsl
mov
pop
mov
mov
mov
repnz
test
add
add
xchg
lods
lock
es
pop
dec
mov
add
testb
icebp
aad
fsts
addb
add
mov
cmp
testb
icebp
adc
mov
addr16
pop
aaa
repnz
hlt
jne
lock
adc
mov
pop
movl
das
or
lods
aaa
jno
lods
fwait
mov
push
mov
andl
pop
jns
imul
pop
int
lods
pop
push
mov
pusha
out
inc
cmc
fs
and
into
jne
mov
loope
dec
jecxz
ds
rcrb
add
sub
aas
popa
cmp
movsl
call
and
pop
mov
push
test
cmpsb
pop
mov
push
ja
cs
lock
cwtl
adc
mov
movsb
or
lods
inc
adc
push
std
or
adc
jo
xor
in
cmc
mov
rolb
cmp
adc
int3
lds
les
int3
add
and
movsl
adc
mov
pop
je
int3
int3
or
call
repnz
cmp
push
shrl
popf
inc
push
data16
inc
popf
loope
jns
adc
int3
fisubrs
pop
pop
push
xlat
xchg
icebp
loopne
mov
jne
xlat
loope
iret
xchg
iret
adc
sahf
jne
fstpl
and
pusha
xchg
loop,pn
sub
mov
xor
xlat
enter
and
xchg
jl
sub
das
push
fs
cmp
add
push
rcl
cli
hlt
syscall
sub
cmp
adcb
sti
movsb
loopne
jno
movsb
fsubl
xchg
and
int3
xor
pop
fsubs
arpl
daa
sub
pop
in
or
mov
pop
sub
pop
scas
mov
inc
jns
cmp
adc
jnp
push
sarb
mov
xadd
sbbl
cmpsl
or
inc
inc
cmp
fcmovnbe
jo
icebp
aad
mul
cs
mov
and
bound
cmpsl
mov
data16
cwtl
add
add
mov
push
imul
testb
xor
cmp
sub
xchg
xchg
push
sbb
shld
adc
cmp
lock
pop
gs
in
shl
hlt
xor
enter
cmp
adc
nop
je
in
inc
mov
fcomps
sbb
lret
call
adc
or
test
cmp
mov
adc
int3
in
mov
sbb
icebp
outsb
inc
leave
push
pop
or
fucomp
mov
sbb
fistl
nopl
shlb
lods
adc
dec
cmp
or
xchg
mov
loop
inc
mov
fs
loop
dec
pop
xchg
test
loope
loopne
push
push
xor
mov
and
int
add
jge
xchg
movsb
fnsave
pop
ret
xor
xchg
mov
push
bound
ret
insl
add
fs
pop
iret
pusha
xor
adc
lock
cmp
repz
ret
lcall
ljmp
cld
lock
mov
mov
and
jecxz
jle
addb
push
scas
sub
sbb
sub
roll
mov
jmp
and
cmp
addb
int3
jo
and
and
push
adc
push
and
pop
dec
loope
iret
sbb
and
jge
and
add
loop
loop
xor
dec
jle
fisubl
fisttpll
or
push
jno
loop
leave
xchg
mov
inc
aam
dec
jge
pop
add
cmp
push
cmp
pop
fwait
push
stos
sti
data16
popf
mov
push
cltd
jbe
repnz
jb
mov
ret
test
inc
jle
mov
push
loope
cmpsl
iret
sbb
ja
aad
dec
fisttpll
imull
xor
jmp
inc
fcoms
test
fsubr
jbe
mov
ffreep
cs
jb
pop
dec
insl
add
push
push
lea
dec
popf
inc
daa
xchg
inc
ds
cmpsl
loope
insl
adc
jne
fmuls
aam
scas
cmpsl
out
mov
imul
push
inc
inc
mov
je
je
ljmp
iret
fcmovbe
mov
dec
movsb
sahf
jmp
pop
inc
xchg
pop
fisttpl
mov
adc
pop
cmp
jle
pop
test
lea
inc
push
sbbb
sub
shl
aas
sbb
pop
test
sub
popf
ret
mov
push
inc
aas
sbb
or
int
fwait
mov
xor
cltd
sbb
mov
xchg
inc
jmp
or
push
dec
fbstp
xchg
push
cmp
or
adcb
adc
stos
sub
fimull
pop
dec
sub
fidivrl
adc
js
rcrb
rorb
xchg
mov
jno
adcb
test
mov
dec
adc
hlt
loop
sub
mov
mov
inc
bound
sbb
loop
je,pn
and
shll
popa
daa
pushf
pop
jecxz
xchg
test
data16
jg
push
jg
sub
adc
ljmp
push
inc
cwtl
mov
mov
xor
xchg
xchg
lods
lock
das
fldl
int
daa
pop
inc
arpl
aad
mov
hlt
pop
adc
stos
test
xchg
jp
repnz
cltd
push
xor
inc
sub
pop
xchg
adc
in
push
inc
pop
clc
ficompl
loopne
sub
int
adc
sbb
lds
mov
mov
out
pop
dec
clc
xor
mov
sub
imul
inc
inc
mov
movsl
sub
cmp
shlb
ret
dec
mov
mov
push
fdecstp
jno
loope
mov
jae
inc
sbb
arpl
sub
mov
xor
mov
sub
pop
xor
out
push
mov
dec
shll
fcomps
mov
pop
ret
or
and
in
outsb
cltd
cmpb
nop
push
or
test
mov
push
fs
lods
cmp
mov
cld
sahf
addr16
ljmp
repz
pushf
dec
js
add
jno
sub
leave
jp
dec
xchg
mov
ret
ljmp
mov
cmp
inc
cmp
cs
mov
loopne
sahf
mov
data16
add
or
imul
mov
pop
or
std
cmp
sbb
int3
xor
mov
insl
push
ja
pop
adcb
add
xchg
and
xchg
pop
dec
adc
jle
add
add
mov
in
inc
in
notl
and
and
inc
arpl
sbb
out
push
inc
test
jmp
scas
hlt
cmc
xchg
enter
ja
ficoml
xchg
pop
das
in
ljmp
mov
inc
dec
mov
jo
stos
popa
or
les
mov
call
adc
mov
xchg
lds
push
jns
pop
loopne
out
pop
mov
fnstenvs
mov
fmul
push
loopne
pop
mov
lock
test
and
xor
push
sbb
xlat
inc
xor
mov
lcall
adc
mov
cmp
movsl
loope
notb
dec
fwait
movsb
jo
aas
add
cmp
js
imull
dec
mov
push
cmc
inc
js
nopl
mov
daa
iret
lods
jbe
adc
push
dec
xchg
sub
sub
nop
dec
sti
mov
pop
sub
jp
cmp
or
lret
vcvttps2dq
arpl
bound
lret
mov
js
pop
cs
and
ljmp
pushf
push
insl
push
cmp
pop
pop
rcll
nop
outsl
jae
iret
ficoms
sti
cli
dec
js
dec
mov
and
out
pop
fsubs
test
repnz
testl
and
xor
push
pop
push
mov
ljmp
push
cmc
aam
lods
xchg
dec
pusha
jmp
popf
loop
sbb
jp
sbb
imul
mov
jnp
fwait
or
shll
loop
stos
int3
push
clc
fprem
movsl
jnp
lea
inc
shrl
adc
mov
and
insl
shl
push
fwait
and
stos
push
leave
insl
pop
fwait
in
loope
sub
add
sbb
out
nop
shl
mov
xor
mov
jns
jle
sti
insb
aam
dec
leave
lret
xor
sub
inc
addr16
mov
sub
pop
psrlw
jecxz
jbe
inc
sti
jg
or
fs
out
call
cmc
loope
lahf
dec
sbb
push
cld
dec
out
mov
mov
loope
pop
mov
sbb
mov
lea
jmp
shr
or
pop
push
jmp
pushf
or
xchg
stos
rcrl
mov
insl
ds
jb
arpl
into
scas
hlt
lret
jb
cs
push
push
push
xor
and
pop
test
xchg
cli
sbb
test
mov
xchg
call
inc
cmp
rorl
sbb
lea
lea
fnstcw
push
adc
pop
and
push
adc
mov
rorb
int
shrb
and
adc
cltd
jg
lcall
xorl
cmp
mov
sbb
push
stos
and
test
dec
pop
xchg
xlat
xchg
into
xchg
mov
call
and
int3
jno
lock
clc
adc
adc
jmp
popa
in
movb
and
and
add
and
aad
adc
aam
test
push
nop
repnz
and
popf
xlat
dec
outsb
fisubrl
cwtl
ret
int3
push
pop
inc
mov
adc
fchs
mov
sub
mov
mov
popf
icebp
arpl
adc
push
ret
sbb
mov
in
add
adc
jg
jmpw
push
sub
pop
sbb
cli
xchg
mov
pop
icebp
mov
and
clc
out
xchg
cmp
repnz
aaa
fcoms
mov
clc
call
pop
movsb
adc
or
lods
and
jle
sub
push
jo
sbb
in
stos
ljmp
adc
sbb
pop
test
xor
push
xlat
call
call
data16
je
xor
clc
jmp
cmp
sbb
push
cld
bound
and
mov
cmc
dec
js
mov
and
xorb
jns
or
ss
xchg
cld
inc
lock
jo
dec
push
fwait
aam
mov
fadds
and
call
mov
fisubrl
push
out
out
push
ret
aad
outsb
shl
or
or
add
xorl
mov
ret
dec
outsl
push
pop
or
cmpsl
test
dec
xchg
or
in
sahf
int
aaa
dec
pop
testb
lds
pusha
mov
loope
pop
and
adc
push
add
pusha
jl
ds
add
pop
ret
xchg
push
jno
rolb
or
rorl
pop
test
pop
cmp
xchg
mov
ja
push
jnp
push
fwait
or
pop
pop
sbb
pop
mov
ljmp
or
pop
rorl
dec
adc
xorl
ds
subl
outsl
mov
fcmovbe
js
mov
aad
roll
test
out
adc
inc
dec
ret
imul
ret
jbe
xor
mov
negb
adc
inc
xchg
jbe
in
adc
or
and
scas
pop
cmpsl
xchg
pop
push
js
push
sahf
inc
cmpsb
jge
adc
or
sahf
ret
mov
inc
push
push
dec
roll
dec
insb
sbb
popf
lods
add
mov
loop
adc
mov
and
cltd
dec
or
pop
les
dec
cmp
arpl
das
mov
test
add
rcrb
xorl
push
and
addb
mov
dec
fwait
ds
add
jo
mov
inc
push
inc
cmp
call
icebp
adc
sahf
mov
je
insl
test
inc
clc
stos
adc
call
xchg
inc
je
rcrl
or
inc
fs
mov
arpl
jnp
mov
mov
and
dec
xchg
aam
add
movsl
movsb
or
add
sub
cli
lods
hlt
or
lds
sub
mov
dec
loop
xor
icebp
lock
sbb
imull
xor
or
pop
push
cmp
adc
xchg
push
or
in
sub
pop
stos
pushf
cmpsb
pop
cmpsl
sub
mov
sahf
fisubs
clc
jg
out
xlat
xchg
cmpl
fbstp
dec
add
in
add
sub
imul
or
inc
lcall
jnp
out
hlt
aam
call
jecxz
stos
inc
mov
cmp
pop
and
addb
in
cmpsb
push
sub
push
ficoml
test
lret
adc
gs
adc
bound
ss
mov
inc
push
add
dec
int3
mov
movsb
pop
and
andl
mov
or
shlb
push
push
xor
mov
add
add
ljmp
cmpsl
nop
push
ja
xchg
or
add
pop
dec
les
das
dec
jmp
push
dec
lret
fs
std
mov
add
fwait
add
jge
pop
in
outsb
mov
mov
dec
push
lret
sbb
test
std
xchg
pop
shrl
daa
es
sub
mov
data16
imul
sbb
ljmp
xchg
pop
mov
xorb
mov
xor
lahf
sub
cmpsl
xor
std
movsb
sub
cs
daa
xor
dec
add
scas
jecxz
setb
test
add
adc
cmp
arpl
pop
ss
pop
dec
xchg
bound
cmc
xor
movsb
fcompl
xor
sub
add
outsb
pop
cmp
les
pusha
ds
push
xchg
or
mov
inc
and
pop
je
or
mov
pusha
add
nop
scas
xor
ficoml
and
outsb
in
push
mov
aad
popa
cs
mov
inc
notb
inc
dec
mov
punpcklbw
add
in
sbb
leave
sbb
xchg
cmc
sub
mov
cmc
aam
fldt
jl
xor
arpl
adc
das
lret
aad
rclb
sbb
mov
mov
subb
addr16
enter
pop
cmp
jg
faddl
ficompl
imul
mov
fcomip
dec
mov
mov
sub
outsl
stos
jbe
push
adc
xor
sub
aad
xchg
pop
xorl
pushl
test
jmp
push
shrb
in
mov
test
adcb
xchg
rcrb
mov
mov
shlb
push
lock
stc
xchg
into
das
in
and
dec
int
ret
inc
or
jno
dec
lret
mov
or
push
pop
cli
xor
jl
js
fdivr
arpl
jle
mov
push
mov
pop
in
js
test
mov
add
xchg
pop
and
dec
sbb
cmc
jp
mov
or
out
rcrb
ja
push
scas
lcall
lods
aaa
dec
test
iret
inc
jns
adc
hlt
or
ds
stos
fs
add
jecxz
aam
sub
rol
mov
fldl
loopne
dec
emms
or
arpl
xor
or
mov
bound
mov
adc
add
pop
mov
sbb
jp
sbb
insb
stc
lahf
mov
mov
ljmp
mov
mov
jmp
sbb
and
push
and
sbb
ds
sub
xchg
rcrl
mov
mov
movsb
adc
in
sti
inc
cli
orps
outsl
xor
xchg
jecxz
lock
es
addr16
push
cmp
mov
stc
sbb
addl
or
cld
push
push
ja
mov
xlat
shlb
inc
sub
test
inc
mov
push
jno
cmp
cmp
push
dec
dec
mov
and
jle
dec
or
clc
xchg
into
mov
or
gs
jmp
call
popa
inc
cmp
and
icebp
cmpsb
xchg
fcmovb
and
push
in
mov
shl
xchg
lds
push
jbe
sbbl
mov
cmpb
xor
xchg
insb
loop
imul
lret
cmp
roll
stc
hlt
push
jo
dec
sbb
jle
jecxz
insb
and
xchg
hlt
test
push
adc
stos
bnd
mov
jne
or
mov
inc
dec
ljmp
xor
or
push
dec
inc
mov
adc
stos
loop
sahf
and
in
gs
inc
movsl
inc
inc
cmp
or
pop
push
sbb
mov
imul
or
ljmp
mov
sarl
pop
jg
test
fcoml
pop
movsb
sbb
cli
dec
push
adc
cmc
stos
pop
pop
jmp
dec
mov
inc
flds
mov
out
sbb
xor
fadds
fbstp
jge
cmp
and
pop
xor
pop
jae
std
inc
add
loope
xor
mov
insb
dec
lret
hlt
inc
inc
adc
fdiv
dec
aas
inc
shrl
and
bound
testb
sbb
mov
loopne
push
dec
cmp
lahf
cli
aam
xchg
or
lods
pop
cmc
lret
insl
shl
lea
and
push
mov
mov
sbbb
push
scas
cmc
adc
xchg
movsb
lock
mov
jmp
in
dec
adc
imul
xor
insl
cmp
ret
clc
sbbl
push
add
pushf
sub
shll
cmpsl
mov
or
mov
idivb
jl
outsb
push
mov
mov
push
adc
sub
xor
stos
sub
mov
jl
pop
cmpsb
test
out
je
lock
pop
lcall
jmp
dec
mov
aad
roll
and
dec
loopne
lea
dec
mov
sub
pop
and
xchg
mov
sbb
add
fisubs
push
and
xchg
cltd
inc
adc
pop
std
inc
addl
test
loope
mov
in
push
cmp
les
and
jl
fisubrl
pop
rorl
and
add
int3
add
push
mov
mov
adc
sub
scas
xchg
iret
in
arpl
jb
jl
hlt
dec
or
gs
mov
lds
pop
cwtl
and
dec
sub
sub
jmp
sbb
mov
stc
je
xchg
pop
dec
into
mov
pop
icebp
cmp
enter
jmp
xchg
push
out
mov
imul
and
or
fnsave
mov
rcll
pusha
mov
inc
outsl
cmp
ficoml
outsb
test
xchg
imul
mov
cmp
adc
jns
shrb
push
xor
or
es
xchg
addl
pop
stos
orl
aaa
or
push
sbb
mov
jl
lret
ljmp
call
arpl
push
hlt
cmpsl
in
inc
js
or
dec
ds
fldl
mov
pop
icebp
sbb
cmp
adc
sahf
test
inc
pop
xor
mov
jmp
mov
shll
mov
stos
pop
lea
push
push
cld
mov
jne
sbb
or
xchg
dec
jecxz
push
fidivrl
ficompl
add
xchg
jnp
sti
pop
std
testl
stos
lea
lret
xchg
or
ffreep
stos
rcll
mov
into
sarl
adc
sbb
rol
cwtl
dec
testl
hlt
adc
inc
jnp
insl
jg
pop
dec
sbb
ds
add
mov
aaa
push
mov
cmp
or
add
lea
sahf
xor
add
cmc
lock
daa
shl
icebp
outsl
jmp
pusha
inc
testb
add
mov
cld
inc
rcll
xor
pop
aam
test
jbe
stc
inc
sub
sub
sbb
cmpl
sbb
mov
inc
or
clc
mov
push
fisubl
test
lods
mov
sub
sbb
andb
js
add
add
sbb
das
mov
xchg
or
xchg
aad
sti
fwait
shlb
insb
and
mov
inc
scas
jg
and
leave
aaa
lahf
dec
nop
inc
aaa
ret
call
fisubrl
add
stos
cmc
pushf
pop
and
and
aaa
and
cmc
repnz
rcr
inc
jecxz
loopne,pn
adc
push
call
push
xor
out
hlt
or
loopne
cmp
arpl
hlt
repnz
jp
test
cmp
dec
jmp
inc
xchg
aas
inc
call
addb
inc
inc
mov
inc
sub
cltd
pop
xlat
mov
cmp
mov
dec
or
cwtl
cmpsb
jp
loop
out
mov
lods
push
xchg
lret
pop
lods
and
call
loope
or
rcll
aad
pop
popf
ds
xchg
adc
movl
add
rorb
lock
daa
cmpb
mov
stos
mov
push
std
mov
push
daa
les
jbe
sbb
jecxz
shlb
andb
and
es
popl
popf
mov
xor
pop
dec
and
xor
pop
icebp
ljmp
inc
xchg
push
push
push
xor
mov
sub
push
mov
repnz
hlt
adc
or
loopne
or
jo
inc
pop
inc
ss
sub
shlb
sbb
imul
inc
sti
add
cmpsl
gs
add
inc
pop
test
mov
inc
dec
xchg
cmc
out
push
cmp
xor
push
push
shlb
test
pushf
jge
ret
push
mov
cmpsb
adc
sub
mov
imul
inc
pop
popa
or
sub
mov
js
jl
pop
lods
call
push
xor
push
mov
pop
xchg
jge
jno
clc
int3
enter
sbb
dec
xor
jne
mov
sahf
loop
mov
in
js
or
and
bnd
mov
mov
into
cli
shll
jo
xor
xchg
iret
sub
shrb
push
adc
lock
add
subb
fs
pop
lret
clc
fdivrs
dec
cltd
loop
dec
and
leave
lods
xchg
jge
dec
xchg
cs
push
fcmovbe
mov
shr
or
js
addb
test
add
push
cwtl
mov
je
psubusb
mov
cmp
cmp
out
sbbb
or
cmp
add
and
cld
gs
mov
mov
push
nop
and
sahf
sbb
popa
jae
clc
cs
adc
les
rorb
push
adc
lods
in
js
mov
xchg
add
shll
ljmp
adc
push
jne
push
rolb
push
pop
pop
mov
and
cwtl
into
pop
adc
cmp
adc
fildl
jl
and
jno
dec
daa
or
inc
movsl
or
inc
pop
lock
int3
mov
cli
xor
jg
sbb
int3
jne
jg
mov
pop
jo
inc
add
mov
pop
out
dec
xor
push
jg
test
insb
sub
cmpl
loopne
test
daa
arpl
push
je
andb
clc
jp
movsl
sbbl
sub
insb
stos
sbb
xchg
cwtl
jo
cmpsl
jnp
push
sbb
cmp
xor
dec
cmp
fcompl
imul
and
jne
pop
adc
loope
cltd
jo
ljmp
jbe
mov
shl
sub
cld
imul
cld
jo
mov
inc
rep
push
shl
iret
subl
inc
pop
lock
sbb
jp
push
cmpsb
pop
scas
mov
xor
rclb
cmp
js
fs
faddl
imul
ds
or
shlb
test
mov
push
sub
adc
push
lahf
sbb
adc
or
in
jp
jl
sub
mov
xchg
arpl
nop
pop
cs
add
popa
mov
jg
pop
xor
arpl
fwait
inc
jo
in
lods
lcall
and
or
xchg
repnz
loopne
and
std
leave
sub
or
divl
push
and
fs
cmpsl
inc
pop
xor
jne
sub
push
popf
dec
cli
orl
je
ror
outsb
and
sub
jae
pop
xor
pop
sbb
mov
lods
push
push
jg
movsl
adc
cmc
lods
aam
test
cmp
dec
aam
inc
outsl
inc
or
shl
lret
xchg
ljmp
jle
scas
cmp
nop
pop
sub
dec
inc
mov
dec
fwait
pop
adc
sub
sbb
call
mov
std
into
jb
dec
inc
std
push
pop
sti
add
add
in
ljmp
pop
mov
cltd
adc
cltd
test
mov
in
adc
xor
inc
popa
dec
adc
inc
daa
jbe
push
push
mov
scas
push
adc
idiv
in
inc
pop
mov
call
lds
aas
xchg
lea
sbb
xchg
clc
lret
push
xchg
rclb
dec
ret
dec
add
popa
mov
sub
fimull
xchg
push
jl
pop
mov
xor
movsl
stc
dec
loopne
ret
sub
aas
and
orl
push
pop
mov
divl
add
ret
jmp
adc
adc
lods
add
stc
add
shrb
lcall
ret
gs
push
lock
repnz
popa
fs
dec
cli
lods
jbe
shr
add
das
adc
or
popf
subb
jecxz
notl
sbb
lock
hlt
pop
jb
mov
js
sbb
out
pop
ror
repz
dec
shr
adc
stos
iret
clc
mov
cmp
push
adc
std
les
mov
cmpsb
jg
xor
sub
pop
push
call
push
inc
repz
aam
xchg
out
dec
pop
mov
faddp
js
aad
andb
pop
mov
xchg
adcb
scas
xchg
fidivs
int
int
call
fldenv
leave
add
fstl
insb
cmc
sbb
xchg
inc
xchg
mov
mov
les
mov
xlat
andb
push
mov
dec
insl
push
out
and
sarb
rorl
clc
test
popa
cmp
loop
outsb
lock
fidivs
sub
clc
xor
push
les
pop
rcrl
pop
jmp
xor
in
inc
movsl
rorb
call
jae
lds
and
mov
pop
les
sti
cmc
add
incb
mull
loopne
sub
or
ret
subl
iret
adc
f2xm1
mov
pmaxub
fnsave
cld
and
sti
pop
xor
mov
jmp
pop
and
add
hlt
and
jl
jns
movl
cs
shrd
mov
lahf
xchg
mov
sub
sbb
jb
bound
scas
adc
adc
dec
sub
cmpsb
mov
and
dec
mov
rcrl
and
loopne
adc
sub
fcomps
fisubl
mov
test
cmp
rclb
pop
push
xchg
call
or
pop
cmp
ficomps
mov
lods
std
xchg
mov
in
lds
mov
push
inc
jae
bound
mov
loope
hlt
insl
sub
or
push
das
iret
and
pop
scas
shlb
push
repnz
cmpb
stos
push
scas
inc
ret
mov
cmp
or
sub
out
dec
into
imul
pushf
add
mov
fbld
xor
xchg
xchg
sbb
cmp
lods
fsubrs
mov
out
pop
adc
cmpl
push
cmp
push
lock
sahf
and
mov
pop
mov
mov
imul
adcb
fistps
or
push
add
bound
or
aas
push
xor
dec
pusha
inc
les
adc
add
xchg
cltd
adc
imul
dec
adc
fcompl
cwtl
xor
mov
adc
inc
cmp
jmp
ds
pusha
mov
inc
sbb
std
rorl
inc
adc
inc
cmp
movsb
andb
fs
jle
arpl
xchg
rclb
jp
outsb
sub
clc
push
cmc
mov
sub
pop
push
jl
cmc
leave
cmp
lock
fisubl
sub
aam
fldt
scas
scas
lahf
sbb
pop
in
mov
test
sarb
cli
sbb
jge
popa
mov
xrelease
pop
add
loop
loopne
mov
cltd
mov
movb
shr
dec
lock
mov
jbe
test
xchg
cmp
add
mov
mov
and
nop
pop
jmp
sbbb
xchg
or
in
clc
jl
jl
mov
shl
mov
nop
mov
jge
repnz
mov
jo
jge
jge
mov
inc
repnz
or
add
loop
loopne
xor
stos
push
xchg
outsb
notl
rolb
mov
pop
icebp
nop
xlat
sbb
shrb
push
sbbl
sbb
aas
add
test
cmpsl
lods
mov
sub
ljmp
add
sub
or
xchg
xchg
pop
xchg
aad
nop
sub
dec
xchg
mov
js
mov
or
mov
lret
dec
lds
sbb
data16
cmpsl
or
bound
mov
fsub
and
movsl
xchg
fidivrs
pop
cltd
loopne
call
aam
jo
xchg
mov
jp
orb
iret
dec
movsb
cmp
stc
mov
xchg
sbb
and
xchg
nop
ret
xor
push
push
cli
loope
sti
testb
das
mov
dec
xor
daa
sbb
negl
sbb
push
cmp
dec
rol
or
xor
mov
enter
mov
call
add
cmp
sarw
lock
or
inc
inc
pop
cld
arpl
pop
arpl
mov
rcrl
and
mov
icebp
jmp
and
orl
sbbl
mov
jp
mov
ds
jns
pusha
movb
push
iret
push
pop
push
mov
cmc
xchg
dec
jno
sbb
pop
ds
mov
xchg
cli
mov
mov
cmp
mov
sub
pop
pop
mov
lea
add
xchg
or
cmc
loopne
shll
mov
roll
popa
jo
stos
adc
lret
jge
insl
add
inc
repz
xchg
sub
xor
mov
and
add
pushf
mov
sbb
jo
or
cs
jne
mov
adc
jp
daa
pop
pushf
and
adc
inc
pop
and
xor
scas
dec
lock
sub
insb
sub
les
rcrl
je
jl
loopne
or
jl
cmc
jno
lret
push
pusha
sbb
ja
xchg
repz
mov
data16
nop
fisttpll
js
insb
fldcw
out
push
mov
pop
in
cmpsb
mov
jae
icebp
dec
mov
fimull
push
adc
roll
mov
pop
dec
inc
mov
aas
rolb
or
push
gs
rcl
ja
push
gs
pop
pop
in
in
mov
and
mov
pop
arpl
cld
stos
ljmp
or
gs
loop
mulb
pop
jle
add
das
jp
loope
outsl
loope
push
add
into
movsl
inc
add
adc
mov
mov
push
scas
xchg
loop
fisttpl
sbb
inc
dec
pop
pop
jecxz
loopne
cmp
pop
pop
ljmp
outsb
pop
pop
leave
xchg
inc
loope
sti
ficoml
sub
jecxz
or
add
cmp
stos
push
mov
jbe
iret
stos
or
adc
pop
stos
push
sbb
push
jl
loopne
push
mov
jecxz
sahf
in
stos
inc
into
in
loop
push
lahf
ds
lock
out
push
lea
test
pop
mov
and
das
mov
dec
sub
mov
test
out
clc
pop
add
int
and
pop
xor
or
ljmp
mov
pushf
jo
jge
ret
loope
and
push
rorl
popa
nop
ljmp
in
in
enter
cmc
hlt
aas
xor
repnz
mov
lock
js
pop
lcall
out
pushf
dec
bound
popa
cld
or
xchg
daa
popf
jbe
cmp
into
mov
cmpsb
add
outsb
std
popf
icebp
scas
mov
ret
inc
imul
and
or
mov
insb
push
pop
xor
inc
imull
loop
add
inc
sub
push
sti
outsb
mov
cs
add
nop
cmp
jecxz
and
mov
mov
cmp
and
xchg
mov
sbb
pop
xor
cmp
int
pusha
fisttpll
ss
cltd
inc
jge
add
loopne
push
pop
and
or
cmc
inc
testl
cli
xor
je
lcall
sbbl
inc
mov
adc
sarl
jl
sahf
lcall
aad
xlat
push
nop
add
or
adcb
and
dec
out
or
xchg
mov
js
cmp
mov
add
out
jb
jae
mov
in
arpl
jne
in
cmp
push
idivl
lcall
testl
cmpsb
dec
icebp
mov
lods
loop
sbb
pop
std
jp
cmp
inc
inc
repz
jge
add
inc
lods
xchg
sub
ret
jbe,pn
leave
loop
fdivs
or
or
inc
or
fcmovb
mov
leave
dec
les
dec
mov
cmp
pusha
mov
sub
in
dec
popf
pop
mov
mov
adc
and
in
lods
cmp
daa
std
gs
dec
add
das
and
pop
sbb
lea
ret
add
push
adc
inc
lret
in
notb
inc
xorb
inc
cmp
sub
mov
mov
xchg
jmp
les
inc
xchg
jg
ret
dec
inc
cmpsb
lcall
adc
in
lock
ret
push
mov
mov
mov
test
add
cltd
inc
aad
or
push
push
aad
stos
jl
mov
lods
xchg
xchg
aam
test
les
xchg
rclb
or
pushf
cmpsb
ret
cmp
or
in
imul
sub
loope
fisubrs
ret
xchg
mov
mov
addl
insl
jb
jp
pop
sub
xchg
add
rol
andps
fwait
ret
pop
pop
adc
sti
mov
je
lea
adc
and
xor
xchg
test
outsb
in
adc
out
jp
push
ds
pushf
sbb
fs
mov
adcb
mov
mov
jg
and
mov
movsb
mov
jg
bound
or
jae
cwtl
or
mov
mov
inc
rclb
adc
dec
fdivl
movsl
rorl
mov
imul
jp
push
and
sbbl
loopne
addb
pop
je
es
mov
loopne
fidivrl
mov
out
stos
insw
cmp
push
bswap
iret
aam
cmp
insl
aas
xchg
ret
scas
out
lret
in
in
inc
ss
lods
dec
sbb
xchg
mov
push
xchg
adc
sub
int3
das
pushf
stos
stos
test
mov
dec
push
lock
lods
clc
pop
fabs
test
sub
lock
adc
lods
andnps
mov
in
dec
inc
fdivp
adcb
pop
loopne
mov
xor
sub
sbbl
into
inc
mov
jl
jo
sbb
pop
xor
mov
or
or
xchg
notl
icebp
sbb
mov
dec
fdivs
mov
xchg
and
lea
add
imul
std
xchg
and
and
out
repnz
andb
shll
ret
stos
lods
add
pusha
sub
dec
push
and
xor
insl
mov
scas
push
xor
fimuls
cmp
loopne
out
push
incl
pop
xchg
pop
pop
cld
scas
xorl
mov
ret
mov
inc
jae
inc
pop
call
fnstenv
xchg
pop
mov
rcr
call
adc
lcall
fs
mov
sahf
clts
sbb
push
sub
fbld
fstpl
mov
out
xchg
and
testb
sbb
push
cmp
test
jo
imul
fcomp
jl
test
cs
add
clc
sbb
movsl
icebp
sub
es
xor
int3
inc
adc
push
vmread
cs
int
fwait
scas
mov
imul
test
mov
push
dec
jl
call
stos
mov
in
inc
xchg
pop
adc
jmp
fbld
insb
add
lods
or
mov
xlat
mov
xchg
mov
cmp
pop
hlt
and
pusha
repnz
bound
mov
and
lods
inc
or
in
gs
jle
pushf
and
aaa
mov
push
repnz
mov
inc
out
les
inc
xchg
mov
push
call
sti
je
dec
cmc
gs
xor
cld
xchg
inc
inc
mov
fsts
cs
push
lods
pop
xlat
adc
loop
test
scas
push
cmp
imul
xorl
inc
adc
or
out
dec
and
adcl
movsl
cmpsl
js
dec
aam
add
jmp
or
or
sub
outsb
xchg
scas
push
sbb
rclb
fcomps
ja
lods
push
dec
add
daa
mov
call
inc
mov
fidivrl
ret
shl
dec
mov
xchg
aad
cmp
inc
inc
loop
sbb
xchg
pop
mov
mov
and
sub
or
and
adc
mov
imul
push
pop
mov
adc
sar
or
adc
fdivrl
minps
hlt
cmovs
mov
test
std
or
ljmp
pop
xchg
popa
leave
push
or
loope
mov
xor
cltd
enter
popl
dec
aaa
jb
pop
aas
outsl
gs
jmp
jnp
inc
xchg
test
xchg
lcall
movsl
in
shrb
push
push
mov
les
shrl
xor
je
mov
scas
lock
mov
sub
pop
mov
aas
and
lahf
imul
mov
fcoml
dec
imul
dec
add
inc
jg
test
aad
cmpsl
lock
cltd
mov
cmc
inc
lock
dec
enter
imul
xor
std
popf
xchg
jmp
ja
sti
fcomps
cmp
mov
push
mov
cmpsb
mov
dec
xlat
jp
nop
or
fildll
inc
les
movb
icebp
popa
adc
je
mov
and
int
lock
imul
cmpsb
jns
vorpd
xchg
fs
rorl
sub
lds
xchg
adc
divl
mov
loop
addl
ds
clc
push
mov
and
lods
clc
jle
je
xchg
mov
sub
xorb
daa
cmc
ret
pop
jb
dec
mov
xchg
sbb
xor
mov
popl
pushf
lods
rcr
icebp
mov
pop
mov
push
arpl
call
xlat
scas
cmc
and
loop
cmpl
mov
pop
fdivl
sub
sbb
fimull
insl
push
mov
push
arpl
adc
scas
mov
shrb
sub
pushf
pushf
scas
rol
pushl
movsl
aam
sbb
ds
push
loop
cmpsl
fsub
wbinvd
pushf
addr16
arpl
sub
in
repz
inc
dec
sar
call
jbe
push
xor
push
pushf
xor
loope
add
push
jecxz
pop
adc
loopne
dec
mov
cmpsl
lret
into
cmp
nop
adc
mov
jp
inc
loope
or
lea
mov
das
fistpl
mov
dec
idiv
push
xchg
cwtl
mov
add
or
int
lret
test
add
lock
cmpsb
andb
sbb
xor
pop
clc
pop
cmp
inc
jp
adc
add
or
enter
and
testl
daa
lcall
or
push
outsb
ficompl
mov
in
or
pop
out
imul
rcr
push
adc
push
popf
rorb
push
pop
and
add
in
stos
cmpb
call
lret
fisubrs
push
mov
cmc
js
lret
sub
sbb
sbb
lock
test
das
sti
fstp
negb
pop
mov
or
jecxz
jae
filds
mov
sub
xchg
inc
call
ret
xchg
jecxz
sub
push
jmp
inc
sub
and
xor
fimuls
pop
xchg
xchg
mov
bound
movsb
and
sbb
and
add
sub
jne
loope
es
out
pop
pop
jno
dec
pop
sub
adc
clc
inc
cltd
imull
mulb
inc
test
mov
mov
adc
or
mov
call
or
movsl
js
mov
or
sahf
jge
push
lahf
xchg
add
lods
xor
pop
cmp
mov
fwait
add
dec
mov
push
das
jge
pop
push
sub
jp
mov
dec
push
daa
mov
sub
push
sahf
out
sbb
aad
xor
xchg
out
mov
cmp
lahf
push
mov
and
loop
je
ret
add
mov
loop
mov
mov
aam
mov
sub
das
fs
inc
lock
lods
rcl
sub
jb
sbb
fildl
into
mov
mov
in
nop
pusha
or
mov
imul
ja
ljmp
push
adc
add
not
bound
shl
add
fdivs
cmp
fbld
and
sbb
and
push
and
ror
out
push
sub
ret
or
les
add
stos
ljmp
pop
add
movsb
adc
shll
popf
or
add
in
mov
cmpsl
aas
and
jg
daa
xor
or
mov
int3
jae
sbb
pop
je
mov
xor
inc
push
js
dec
xchg
pop
push
pop
aam
insb
in
je
movsb
popa
scas
adc
mov
xor
ds
sbb
ds
lcall
ljmp
pop
xor
in
sub
cmp
inc
pop
addr16
inc
mov
cmp
push
mov
iret
cmpsb
cmpsl
pop
lret
lret
or
mov
and
in
sub
insl
mov
xor
xchg
enter
cmpb
loope
adc
aad
dec
cmova
enter
jl
insl
fsubl
cwtl
dec
xor
inc
cmp
push
or
cwtl
ljmp
jne
sbb
add
movsb
stc
out
pop
and
and
scas
mov
scas
cmp
add
mov
mov
push
jp
jne
adc
aaa
ret
and
test
xor
xchg
dec
xlat
xchg
aad
cmp
pop
in
in
mov
cmpl
rorl
aas
push
cld
clc
add
movsl
icebp
mov
orl
or
sub
cmp
gs
jecxz
fsts
add
inc
cmp
je
test
jecxz
jl
iret
outsl
pop
cmp
incl
or
mov
dec
inc
pop
call
cwtl
or
fdiv
ret
mov
ret
shrl
mov
xor
data16
addr16
mov
xor
pop
adc
hlt
or
les
add
push
sbb
xorb
or
jmp
das
jecxz
inc
xchg
jo
les
xchg
mov
jno
mov
test
ss
jle
fstps
and
sbb
mov
es
insb
sbb
add
jg
loopne
mov
cmpsb
mov
divl
push
pop
jb
pop
add
add
or
cwtl
jg
sbb
xor
imul
jecxz
scas
jle
mov
repz
ret
and
add
mov
out
xor
sub
popf
jmp
icebp
jp
push
push
add
mov
bndstx
out
scas
lods
sbb
xor
jbe
sub
mov
push
push
push
jl
push
rolb
out
lock
lock
jmp
sbbb
add
mov
cs
outsl
jmp
lahf
or
scas
imul
jp
ja
pop
mov
ss
hlt
mov
clc
dec
or
jp
addr16
neg
aas
jo
std
push
cwtl
adcb
pop
cmp
sbb
inc
shlb
mov
test
nop
shl
jmp
mov
pop
mov
xchg
push
shrb
push
inc
and
mov
mov
cmp
jl
jl
loopne
inc
push
mov
xchg
xchg
les
cmpsl
insl
sub
add
push
cmp
mov
mov
jns
pusha
dec
push
cmpsb
push
push
hlt
call
es
xchg
push
loopne
fdiv
ds
aaa
jb
icebp
fadds
mov
mov
in
aam
lret
cmp
add
xchg
cmp
sarb
mov
mov
ss
cmpsb
dec
lock
insb
add
xor
rol
sub
sub
pop
xchg
jbe
xor
enter
pop
shrb
cltd
dec
and
outsl
bound
ljmp
inc
movsl
xchg
js
aam
test
call
mov
mov
out
jbe
roll
scas
push
xchg
dec
lds
test
call
fwait
or
and
inc
js
or
fcoml
in
sbb
add
ds
xchg
dec
sarl
cmpsl
adc
ret
push
subb
test
add
in
jecxz
and
daa
popa
xchg
mov
inc
add
cmp
cmp
mov
test
loope
mov
xchg
or
jb
mov
aam
ret
int3
pusha
sub
mov
sub
nopl
adc
mov
pop
dec
lahf
fs
adc
cmpsb
inc
push
jae
jno
and
mov
push
subb
out
mov
dec
bound
cmp
sahf
push
in
jb
dec
pusha
pop
testl
int3
xchg
cwtl
push
mov
push
push
das
inc
mov
test
loope
push
and
adc
nop
inc
add
mov
xchg
cli
mov
xor
pusha
out
loop
add
sahf
sub
testl
push
mov
lock
add
test
hlt
jo
orl
push
mov
movsb
pusha
out
sarb
xchg
jb
jl
mov
ljmp
loop
adc
push
mov
sub
dec
mov
add
test
xchg
pop
pop
inc
scas
or
jp
pop
prefetch
cmp
dec
int3
cmp
lods
scas
pop
sbb
or
stos
pop
dec
bound
xchg
cmp
es
inc
test
mov
dec
scas
mov
stos
xorl
mov
mov
xchg
imul
push
pop
aam
push
sti
sub
jo
int
pop
lock
insl
xchg
dec
cmp
icebp
lahf
stos
xchg
cmpsb
test
in
sbb
xchg
add
add
fcomps
loopne
pushf
outsl
jecxz
js
movl
mov
xchg
nop
ficoms
xchg
mov
dec
das
mov
inc
das
pop
push
push
loope
imul
xchg
cli
loop
loop
sub
push
mov
jg
jno
stc
dec
add
sub
pushf
movq
add
stos
xor
scas
dec
fistpll
adc
jno
sbb
ljmp
xchg
cli
pop
mov
ds
ljmp
dec
inc
popf
setle
and
xor
xchg
sbbb
adc
test
fmuls
shll
loop
std
push
cld
add
in
or
in
out
mov
scas
push
pop
push
sti
cmp
fisttps
pop
clc
ds
push
mov
lods
adc
lods
cld
loopne
roll
xor
xchg
add
leave
cmpl
std
roll
sarl
adc
push
fnsave
push
add
push
or
icebp
test
cmpsb
inc
fadds
push
cmpsb
dec
and
xchg
lret
jecxz
outsl
movsl
popf
sbb
sbb
dec
and
dec
fldl
sub
pushf
dec
or
dec
mov
inc
flds
cmpsb
fiaddl
push
xchg
movsb
pop
mov
mov
outsb
mov
cwtl
mov
add
or
cmpsb
dec
add
mov
call
adc
outsl
arpl
ljmp
pusha
sti
push
sbbb
push
nop
jg
outsl
jbe
dec
jmp
add
sbb
xlat
aad
dec
fildl
test
addb
icebp
insb
push
mov
fdivr
out
mov
cwtl
xchg
sub
jb
lods
or
std
mov
mov
aaa
push
loopne
mov
push
jge
dec
sub
mov
int
jno
insb
pop
daa
aas
dec
lea
dec
add
jno
push
inc
ror
fimull
pusha
scas
test
pop
lock
mov
xchg
push
adc
inc
mov
sahf
adc
pop
push
adc
jmp
imul
in
ljmp
cmp
add
hlt
mov
cmpsl
mov
and
adc
rcrb
dec
loope
cmp
imul
and
aam
mov
push
dec
xor
mov
std
xchg
mov
cs
xchg
inc
sub
daa
jl
scas
jl
adc
jmp
xor
outsb
fstl
cmp
dec
popf
cltd
outsb
ss
ret
xor
sbb
stos
inc
inc
cmp
jns
into
fldenv
bound
outsl
jbe
inc
out
jb
imul
lret
int
ret
fwait
loopne
mov
mov
daa
sti
add
imul
mov
ficoms
shrb
mov
aam
shrb
cmpsb
sti
ljmp
xchg
scas
int
or
int
inc
dec
inc
push
or
dec
roll
outsl
fs
aad
push
sbb
cli
mov
lea
sub
pop
xor
adc
fisttps
fistl
adc
jecxz
je
fiadds
in
ret
rolb
test
xor
fnstsw
in
push
out
inc
xor
lock
or
insl
fiadds
jbe
lock
mov
push
push
sub
inc
mov
lret
dec
mov
dec
out
xchg
mov
xchg
addr16
outsb
sub
nop
leave
pusha
nop
xor
loope
mov
push
and
clc
or
add
scas
adc
sar
in
orb
mov
cmp
js
sbb
jnp
add
sbb
mov
int
ljmp
test
arpl
movsb
ja
arpl
inc
xchg
jo
pop
inc
xchg
fisubrs
lcall
mov
xor
rcll
pop
std
dec
mov
mov
xlat
movsl
repnz
push
fidivl
mov
pop
push
ljmp
stos
fmull
fs
jno
push
jp
out
stc
repz
stos
pop
orl
sbb
and
pop
repnz
xor
pop
incl
add
mov
or
xchg
jp
js
les
loop
and
xchg
jbe
mov
pop
aaa
dec
mov
push
cld
je
inc
lret
inc
in
xchg
jmp
js
push
sbb
sbb
mov
scas
pop
mov
jo
scas
pop
sub
dec
fisubrl
sub
add
ret
rcll
mov
pop
xchg
mov
add
xchg
fsubrl
xchg
mov
lret
dec
outsb
mov
and
or
sub
aaa
lret
or
leave
mov
hlt
cmp
fists
clc
pop
xor
sahf
scas
test
ret
fisttpll
sub
iret
mov
inc
cld
and
bound
icebp
jge
and
mov
inc
xchg
xor
leave
dec
pop
in
or
enter
cmp
jmp
testb
je
pusha
push
add
lahf
ss
sub
adc
mov
mov
and
pop
add
loopne
pop
lea
insl
pop
cmpsb
cs
pop
repz
pop
pop
or
addl
fiaddl
movb
jg
dec
cli
sbb
adc
add
sahf
push
ret
aaa
lds
jne
jne
sbb
mov
test
pop
sbb
lret
cs
fwait
shll
popa
aas
fdivrs
cmc
es
rclb
inc
cmp
fmuls
cmp
sub
not
ds
cmp
or
call
inc
les
flds
jbe
push
and
mov
test
jbe
sbb
push
popa
mov
jl
add
xchg
leave
daa
cld
inc
xor
adc
fabs
mov
loop
xor
cltd
adcl
xor
fsubp
sub
add
les
mov
sbb
lods
cmpb
add
rol
mov
popf
jmp
js
and
or
add
out
out
sbb
mov
lret
ret
repnz
xor
ret
pop
or
mov
pop
push
outsb
call
adc
scas
test
je
push
movb
cwtl
mov
jno
mov
push
cli
les
inc
divb
enter
lret
jbe
je
and
cmp
adc
popf
and
pop
lock
adc
push
call
in
shr
imul
je
out
pop
test
xor
add
sahf
mov
mov
insl
mov
pop
sub
xchg
push
test
leave
jo
es
imul
pushf
cmpsb
and
int3
loopne
push
inc
ds
shl
cmp
adc
sbbb
mov
imul
into
xor
test
loope
mov
push
push
adc
fimuls
sbbb
adc
fwait
add
lock
shrb
shll
mov
xchg
xor
int
movb
sbb
mov
mov
and
in
mov
sub
mov
mov
sub
ljmp
mov
pop
popa
int
or
nop
push
add
mov
cmp
jmp
add
adc
adc
ss
cmpb
fadd
pop
loope
jmp
xor
je
adc
jb
mov
sbb
xor
mov
int3
jo
insb
mov
jne
cmp
lods
mov
test
es
pop
icebp
adc
push
mov
por
shrl
xchg
loope
leave
cmp
loopne
inc
jbe
and
pop
xlat
std
pop
add
and
add
fldt
xchg
orb
jmp
mov
add
cmp
aad
jo
mov
rolb
jle
addl
fmull
fs
or
vmaxpd
popf
mov
loopne
lcall
es
sbb
hlt
xor
dec
cltd
jae
test
popf
mov
dec
push
cmovle
movsb
call
dec
enterw
and
mov
jno
iret
or
add
les
inc
xchg
cmove
push
adc
xchg
orl
test
popf
or
inc
sahf
add
insb
inc
pop
jl
mov
jmp
push
cmp
inc
xchg
xor
ret
mov
mov
dec
push
popf
shlb
xor
inc
mov
into
sbb
cld
cmp
nop
dec
mov
setae
lret
sbb
dec
insb
popf
pusha
test
pop
sbb
ds
dec
sbb
cmp
mov
xor
push
js
pop
test
mov
jbe
aas
ficompl
movsb
jo
cmp
fiaddl
rorb
push
inc
jl
sti
call
rorl
inc
inc
inc
fistpll
pop
mov
pop
arpl
adc
push
sar
xchg
mov
test
xor
adcl
imul
movsl
test
fidivl
push
cli
loop
inc
repnz
or
mov
test
push
repz
adc
mov
inc
mov
jecxz
ret
aas
fidivl
and
or
aam
push
pop
movsl
mov
ds
mov
push
or
cmp
out
mov
inc
xor
rorl
mov
subb
sub
fiaddl
out
negl
push
or
dec
addb
std
or
mov
jne
mov
clc
dec
inc
cmp
inc
sbb
dec
test
je
arpl
jecxz
mov
adc
dec
aam
jmp
mov
or
dec
addb
add
or
lea
sub
cmp
jne
xchg
mov
jb
loop
adc
js
mov
jbe
aad
cmp
sub
add
push
fdivrp
cmp
dec
outsl
jg
stos
jmp
aaa
in
adc
add
hlt
cmpb
xor
mov
cmpsl
push
fdivs
sub
aaa
fimull
xor
mov
aam
fsubs
add
pop
mov
pop
repnz
xchg
sahf
xchg
stos
dec
test
mulb
sub
or
add
jg
dec
push
pop
add
scas
loop
imul
cmp
rcrb
es
scas
nop
in
pop
aad
popa
sbb
mov
rcrb
sub
inc
or
mov
rcrb
ret
clc
adc
mov
test
or
sbb
nop
xchg
mov
js
mov
mov
and
mov
les
push
clc
nop
sub
push
aam
out
push
adc
lds
mov
jo
dec
pop
jl
inc
sub
jp
in
std
sub
pop
push
mov
orl
cmp
es
sub
sub
nop
fimull
sub
xor
mov
xchg
pushf
cmpw
adc
cmc
mov
sub
sbb
add
cli
xorb
dec
xor
adc
scas
jg
loop
pop
jp
js
jo
inc
fwait
adc
cmp
sub
sub
cmpsl
jo
xchg
mov
or
mov
add
sbb
test
or
lea
cmpsl
dec
call
inc
loope
aad
test
or
sub
pop
xor
stc
cmp
in
cmp
adc
fcoml
stos
enter
data16
sub
test
dec
lret
or
cmp
fadds
sub
sbbb
movsb
xchg
bound
repnz
xchg
in
push
pop
or
cmp
pop
insl
pushf
data16
adc
inc
dec
or
xchg
xor
sarl
loope
dec
out
and
add
adc
fucomp
xchg
mov
and
lods
jbe
rcll
cmpb
js
adc
push
xor
js
repnz
addr16
pop
xor
jge
xlat
cltd
stos
in
js
les
fldenv
xor
jle
or
mov
rclb
add
mov
jecxz
jp
mov
enter
test
adc
inc
mov
mov
or
sub
add
mov
out
push
pop
loop
add
sub
inc
fisttpll
sbb
sahf
xchg
mov
cmpb
cmc
stos
pop
je
xorb
sbb
cld
sub
adc
mov
out
adc
sub
mov
sbb
cvttps2pi
jg
sub
sub
popa
scas
out
push
es
call
lds
xor
xchg
push
mov
or
shrl
out
xchg
add
xchg
inc
inc
mov
in
dec
call
sub
sbb
xchg
popa
inc
into
ds
mov
mov
dec
in
dec
ljmp
dec
jae
push
push
dec
jl
dec
jle
pop
int
push
ja
stc
js
add
or
addb
icebp
jns
lock
pop
cmpsb
adc
add
adc
sbb
cli
scas
inc
mov
xor
shlb
mov
jecxz
mov
jb
fiadds
sarb
int
and
sti
fisubrs
add
push
push
cmp
or
mov
jns
sbb
out
loopne
scas
fsubrp
pop
test
in
xchg
mov
cmpb
into
mov
fnstsw
into
pusha
or
insl
inc
clc
ret
and
jmp
add
pop
test
xorl
fsubl
cmp
jge
mov
or
xor
adcb
push
repnz
mov
test
and
xor
add
jle
and
cmp
inc
jecxz
aaa
decb
mov
ss
or
jbe
inc
pop
or
jge
cmp
mov
xor
jb
lds
adcb
insb
call
push
inc
mov
hlt
fisttps
adc
jnp
clc
roll
jae
xor
mov
sub
adc
push
pop
sub
ficomps
or
mov
or
adc
mov
mov
cmp
adc
pushf
push
sub
mov
je
sub
mov
mov
pop
fnstsw
sbb
aaa
ret
imul
add
test
and
sbb
ss
sub
adc
jp
jge
test
lret
adc
cmpsb
int3
ds
mov
ret
ljmp
xor
add
lret
int
xor
cli
aaa
mov
mov
pushf
out
popf
popf
inc
jg
push
js
mov
fstpl
lret
sbb
sub
xor
push
push
adc
out
stc
cs
repz
push
sub
xlat
std
xor
int
cmp
jae
add
push
data16
dec
mov
pop
movsb
cwtl
loop
fcmovu
sub
in
and
ss
pop
jb
clc
ss
int
add
movsb
notb
clc
adc
lods
xchg
and
jmp
jmp
pop
xor
stc
mov
cmc
jbe
inc
xchg
mov
mov
adc
cmp
mov
and
flds
lea
gs
push
sub
inc
jno
mov
int
sarb
sub
inc
sbb
adc
inc
cli
jl
dec
xchg
testb
mov
lods
xchg
xor
mov
and
in
and
adcl
lea
add
or
ficoml
mov
sub
aad
mov
jmp
cld
mov
inc
sub
int3
loope
and
cld
lock
lahf
cmpb
xor
mov
adc
mov
insb
push
push
push
add
jmp
pop
fadd
add
sub
jo
sub
inc
mov
enter
dec
adc
cld
or
add
add
mov
mov
xchg
jle
push
fs
mov
test
stos
shlb
cli
inc
push
ja
mov
mov
push
data16
xor
mov
mov
xchg
pop
stos
and
jl
add
mov
pop
add
and
jp
cmp
mov
and
or
fs
pop
push
loop
clc
mov
push
jge
pop
sbb
mov
and
dec
roll
xlat
cmp
aas
fwait
notl
dec
ljmp
inc
roll
call
adc
gs
loope
jbe
fwait
xchg
sahf
add
cmpsl
subb
cmpsl
adc
inc
test
aam
stos
les
xchg
add
lahf
or
pcmpeqb
dec
cmc
and
add
cmp
push
faddp
jnp
xlat
out
lock
mov
inc
cs
scas
aas
jp
inc
dec
ret
push
aam
in
push
scas
pop
pop
sti
lret
lock
jg
pusha
inc
sbb
enter
and
outsb
jmp
bound
mov
cld
in
sub
push
pop
fcmovnu
dec
fnstcw
lock
stos
jne
into
cli
pusha
movsl
jg
call
fmull
xchg
lods
mov
je
stos
sub
sarb
mov
jbe
imul
push
inc
test
push
inc
pop
mov
sti
ss
loop
add
out
mov
cld
pop
xchg
lcall
addr16
roll
dec
sbb
out
rcrb
mov
add
scas
or
push
cmp
inc
jp
sub
mov
rolb
ret
scas
mov
push
dec
mov
inc
les
in
pop
fsubr
insb
dec
inc
sub
adc
repz
adc
pusha
fsubrl
adc
mov
lahf
inc
dec
mov
or
jp
cld
lret
hlt
adc
popf
jmp
scas
mov
js
mov
out
in
aad
subb
pop
aas
mov
and
not
or
xchg
insb
data16
push
cmp
add
xchg
or
cmp
mov
and
add
out
sti
js
jge
sbb
adc
jecxz
mov
cmp
mov
xchg
out
ja
sbb
nop
push
sub
ret
dec
jne
jnp
sbb
jbe
loop
jnp
inc
push
sub
rclb
push
mov
jl
cmp
hlt
add
adcb
orl
jne
inc
fmull
hlt
push
inc
add
fdivrl
pop
shrl
rorb
out
pop
dec
movsl
inc
fidivs
xchg
push
les
mov
mov
fisttps
dec
test
or
inc
pop
insb
pop
inc
daa
shlb
insl
inc
adc
pop
shl
lret
xor
movsb
jg
mov
fwait
ljmp
loopne
mov
stos
ret
fbstp
and
mov
stos
mov
pop
xor
jns
mov
movsb
sbb
cwtl
clc
xchg
push
popa
add
xor
and
ret
or
fxam
iret
idivb
add
pushf
sub
or
mov
notl
push
decb
outsb
or
sbbb
test
mov
push
adcb
rolb
mov
push
ja
inc
lcall
lea
fcomip
sub
adc
or
je
and
leave
xchg
adc
es
test
push
mov
scas
jp
mov
sbb
jb
js
and
and
hlt
push
les
in
dec
and
xchg
aaa
xchg
push
jl
inc
or
loopne
mov
imull
fmull
push
sar
lock
cmp
or
loopne
les
push
rcr
jmp
mov
js
inc
movsb
fwait
ljmp
mov
push
sub
mov
xchg
add
jns
add
or
jl
test
or
add
lock
cmp
cmp
xlat
xchg
out
repnz
das
mov
clc
pop
pop
cli
push
fsubrp
or
fildll
sti
inc
int
fucompp
sbb
cltd
mul
dec
cwtl
lcall
add
or
sbbb
mov
xor
adc
mov
in
mulb
rcl
or
rolb
dec
and
jmp
ljmp
mov
mov
push
les
xor
sbb
jae
xchg
insl
xor
jg
add
cmp
mov
inc
stos
xchg
mov
push
xorl
sbb
pop
push
out
add
in
ljmp
enter
jge
test
dec
cmp
mov
mov
sbb
in
mov
and
ret
or
adc
mov
call
popa
je
sbb
mov
and
cmp
jle
xor
lods
fcom
jecxz
mov
xchg
das
adc
mov
fcoms
push
sub
test
cld
clc
es
das
sarl
stos
jo
mov
pushf
lret
data16
xor
pop
mov
inc
filds
pop
lods
fwait
jmp
push
cmpsb
aaa
mov
push
shlb
pushf
or
adc
xchg
push
rdmsr
and
movsl
inc
pop
pop
inc
les
adc
movb
icebp
sarl
pushf
push
mov
or
xlat
mov
mov
test
or
loope
sahf
hlt
fadd
repnz
mov
add
cmc
pop
add
or
and
sub
inc
push
icebp
pop
cmp
lock
scas
ss
divl
js
jne
dec
gs
data16
jo
ljmp
out
push
je
fistpll
and
das
in
data16
jbe
dec
loopne
cmp
fisubrl
aad
stos
lret
mov
mov
jmp
jmp
aas
test
subb
je
push
xor
out
out
ss
not
mov
push
cmp
fcmovnbe
inc
mov
xor
push
xor
in
inc
inc
outsl
fildl
leave
icebp
mov
fists
mov
mov
and
mov
sbb
addb
jns
mov
add
jb
xchg
and
fadds
mov
lods
or
or
out
mov
or
push
frstor
in
out
adcb
or
dec
jl
fstp
or
fcom
mov
hlt
je
push
cmc
jmp
add
mov
test
es
outsl
push
les
ret
add
ret
fcoml
push
insl
pop
test
xor
ja
add
popl
push
dec
adc
bound
mov
jno
ljmp
int3
xor
rcl
or
js
mov
fbstp
sbb
adc
jl
mov
dec
inc
pop
frstor
clc
or
mov
sahf
scas
jge
hlt
in
mov
mov
inc
adc
movsb
rcr
fisttps
push
les
addb
pop
das
push
mov
pop
les
adcb
or
sbb
mov
add
pop
arpl
mov
mov
pop
push
cmp
mov
sbb
pop
cmp
inc
insl
shrb
and
psubsb
xchg
push
dec
cmp
adc
xor
xor
in
or
imul
stc
jle
fnstcw
jo
sub
mov
push
fistl
mov
into
negl
jne
lods
clc
adc
lcall
les
sub
sub
stos
pusha
jb
sub
sahf
cwtl
loope
fimull
sbb
dec
sbb
add
ret
icebp
loopne
jbe
push
push
ja
adc
add
mov
std
lea
shll
aas
pop
outsb
int3
imul
push
sbb
or
inc
and
jle
inc
ja
jbe
jl
sbb
and
mov
mull
fnstenv
sahf
aam
and
js
adc
lock
inc
outsl
test
jbe
xchg
sbb
rorb
pop
mov
outsb
int
mov
divl
cmp
in
inc
in
mov
mov
add
js
cld
mov
pop
ficoml
ljmp
mov
mul
adc
xor
or
outsb
imul
push
je,pt
sub
addr16
fistpl
sbb
mov
inc
int
fs
dec
call
into
xor
mov
push
fisubs
xorl
lock
stos
dec
push
pop
jbe
cmp
mov
dec
jnp
or
sahf
test
mov
mov
cli
fdivr
aas
loope
fsubrl
xchg
pop
push
dec
cmp
pusha
repz
fs
xor
loopne
lock
std
dec
fs
popf
xor
sbb
aaa
cltd
dec
fiadds
les
das
jle
or
push
push
mov
adc
mov
push
sbb
adc
sub
lcall
test
es
xchg
inc
or
mov
cli
adc
lock
and
jge
mov
or
xor
push
inc
jl
mov
push
jne
out
mov
cmp
icebp
mov
cli
pop
jb
mov
daa
lahf
lret
jo
imul
jno
shl
and
inc
mov
inc
aas
mov
xor
mov
pop
mov
mov
cwtl
adc
fists
xchg
push
subb
popa
mov
outsl
jo
movl
stc
push
orb
mov
lcall
xchg
fsubr
xor
jp
mov
lcall
fimull
das
int3
mov
xchg
lahf
call
jp
jmp
cld
adc
or
das
rorb
stos
cld
dec
lock
call
mov
icebp
imul
jp
sbb
into
flds
and
xor
push
jmp
push
mov
push
fbstp
mov
cwtl
cltd
or
gs
loopne
mov
cmp
mov
and
add
es
add
cwtl
mov
and
adc
sub
pusha
mov
test
lock
mov
pop
or
mov
add
cltd
clc
jecxz
cmp
arpl
aad
or
xor
jl
cltd
push
adc
sub
mov
and
xchg
and
out
sbb
inc
mov
mov
ficomps
jle
adcb
adc
mov
mov
mov
xlat
push
stos
mov
xlat
sbb
loope
test
roll
inc
movb
stos
dec
adc
lret
and
inc
jp
hlt
cmp
xlat
pop
pop
lahf
clc
ljmp
mov
xor
push
mov
xchg
xor
jmp
lock
mov
or
loop
clc
push
inc
cmp
inc
je
pushf
mov
mov
pusha
sbb
shrl
outsb
pop
adc
ss
fcompl
cmp
out
xor
subb
lahf
shrb
daa
pop
cmp
hlt
ficomps
mov
push
add
xchg
add
lahf
mov
push
inc
cmpl
inc
mov
push
mov
fisubs
rolb
mov
orl
in
push
mov
out
sbb
or
je
mov
andl
imul
fiaddl
fwait
add
insl
mov
sbb
insb
mov
cmpsl
xor
pusha
mov
jge
adc
popa
sahf
cs
outsl
cmpsl
mov
mov
jge
cmp
shrl
inc
cmc
or
fcoms
sub
mov
popa
add
cmc
push
xorb
add
add
cld
insl
out
mov
pop
rol
push
xor
push
dec
enter
pop
ss
adc
pushw
sbb
loopne
dec
dec
sub
adc
jecxz
cmp
scas
lahf
push
mov
rcrl
out
jg
xor
iret
xor
js
std
xor
jns
sub
mov
cmp
je
mov
mov
sub
stc
dec
testb
lds
adcb
push
cmc
addb
or
scas
lods
mov
adc
lods
andl
rol
sti
aas
cmp
inc
mov
test
jmp
bound
cmpsb
pop
sbb
loop
adc
add
mov
aas
adc
sahf
jg
cmpsl
adc
cmpb
arpl
outsl
pop
pop
push
sub
push
aad
outsb
or
jae
mov
insb
sti
cmp
bound
lock
xlat
inc
std
je
movsb
daa
push
push
mov
fadds
lahf
scas
push
mov
imul
enter
lods
push
outsb
ljmp
mov
ss
inc
popf
fs
sub
jg
adc
mov
sub
xor
sarb
pusha
dec
pop
loope
stos
movsb
flds
mov
xchg
shll
mov
dec
lea
test
push
push
jge
and
mov
nop
push
sbb
shlb
out
jmp
pop
adc
push
bound
in
cmp
repnz
add
inc
daa
repnz
fcoms
js
sub
push
push
add
in
mov
popa
cmpsl
jl
jne
inc
into
stc
in
stos
sub
add
pushf
push
daa
fisubs
outsb
xor
jae
mov
sbbb
cmc
xor
stos
xor
inc
scas
or
mulb
xchg
jnp
or
pop
dec
cmp
aas
movsl
cmpb
in
movsb
jmp
rclb
insb
hlt
aad
inc
loope
push
and
push
out
and
dec
cmpsb
jl
rorb
inc
sub
fdivrs
aaa
dec
inc
loopne
add
shrb
cmp
add
mov
iret
fbld
lahf
mov
inc
push
clc
and
mov
pop
lods
mov
jecxz
daa
loop
sbb
ds
add
bound
nop
dec
andb
push
mov
xor
or
cmp
jle
inc
std
pop
clc
adc
test
aas
add
xor
dec
cltd
or
push
mov
xchg
nop
inc
and
mov
xchg
xor
mov
and
cwtl
xchg
hlt
xchg
scas
add
xchg
int
sbb
pusha
mov
dec
in
dec
mov
shr
xor
inc
pop
js
leave
push
add
fiaddl
scas
sbb
repnz
xlat
fiadds
mov
dec
mov
adc
mov
mov
add
push
leave
fnclex
popf
jb
shl
cld
adc
push
cmc
cmp
icebp
mov
nop
pop
in
and
mov
or
adc
push
lcall
inc
jns
push
xor
les
adc
cmp
pop
lock
pop
or
push
js
and
or
add
movsl
hlt
inc
sti
dec
aam
bound
or
and
insb
sbb
push
mov
mov
adc
cmpsb
mov
sub
pop
loope
ljmp
pop
jb
mov
js
std
call
mov
xchg
lret
mov
sbb
mov
roll
xlat
ss
xlat
or
sub
push
pusha
cmpsl
mov
aaa
and
xor
mov
rol
xchg
out
dec
and
lock
adc
bound
cmp
cli
pusha
aam
jecxz
sti
add
test
cli
pop
or
mov
mov
pop
push
jno
fstpt
sub
in
das
rorb
ud1
push
call
sub
test
push
pop
cltd
xchg
call
cmp
add
jbe
dec
jmp
inc
xor
in
push
sub
pop
add
push
xor
jb
xchg
outsb
movsb
insb
frstor
call
mov
insb
js
sbb
and
rclb
call
mov
ror
pop
pop
pop
and
sub
xchg
scas
mov
add
inc
sub
data16
shlb
sub
dec
push
out
pop
jo
sub
test
jp
adc
mov
stos
adc
cld
xor
jo
xchg
ret
jo
mov
int
pop
add
mov
sbb
in
imul
inc
fidivrl
ficomps
test
es
imul
mov
into
xchg
dec
xlat
and
push
cmp
dec
inc
or
cld
sahf
adcl
ljmp
fisubrl
inc
lahf
jae
mov
cli
sbb
cmp
cld
or
fisubrs
jecxz
push
mov
ljmp
data16
in
outsl
je
xchg
pop
adc
repnz
fcoml
xchg
std
xor
pop
sbb
mov
jno
shll
push
and
adc
loop
push
loop
pop
test
xor
add
cwtl
popa
fildll
cmc
cmc
out
or
dec
xor
push
les
sub
test
rolb
jo
rep
mov
mov
mov
mov
adcl
jmp
aam
iret
stc
ror
xorb
or
sbb
dec
add
bnd
mov
popa
sbb
xor
push
mov
test
jl
mov
push
fcoms
jb
mov
rcll
add
ret
add
js
adcb
out
or
xlat
and
fwait
push
sub
frstor
pop
xor
mov
loope
das
popa
ss
mov
js
sub
dec
push
lods
rorl
xor
inc
push
sti
jle
xor
jb
cmp
push
ds
lods
cmp
sti
mov
out
xor
in
dec
adc
mov
outsl
ds
enter
cli
aas
mov
or
or
inc
fs
scas
push
inc
cwtl
fimull
mov
inc
ljmp
mov
inc
out
lahf
rclb
rcr
stc
xor
or
mov
out
repz
push
mov
lret
jle
dec
sub
jne
push
stos
jge
stos
add
dec
sbb
mov
push
inc
out
or
mov
push
xchg
push
stos
mov
in
shr
sbb
xchg
jecxz
cwtl
leave
sbb
lods
out
jb,pt
inc
mov
mov
aam
mov
enter
mov
mov
cld
call
inc
lea
std
or
std
mov
jb
aas
dec
fdivs
dec
and
mov
mov
sub
mov
shrl
mov
insb
cwtl
mov
cmpb
icebp
mov
repnz
pop
dec
sub
pop
mov
dec
in
int3
adc
stos
fisubs
xlat
sbb
clc
inc
testl
loop
jo
sbb
jo
sbb
inc
push
jo
daa
mov
and
out
xchg
fs
jmp
mov
ss
sub
mov
popf
jbe
in
inc
pushf
xchg
nop
pop
mov
adc
mov
cmp
fiadds
subl
ss
mov
cli
in
mov
pusha
stos
test
xchg
cwtl
jge
mov
or
addr16
aas
pusha
jl
clc
mov
pusha
mov
js
sbb
adcl
push
lea
xor
cwtl
inc
fistpl
test
sbb
movsb
xlat
and
ret
scas
or
xor
dec
sub
inc
pushf
test
in
push
mov
arpl
test
add
pop
aas
inc
xor
push
out
sbb
gs
jo
bound
push
fisttpl
and
sub
nop
mov
inc
add
sarl
push
sbb
jmp
imull
lods
pop
push
and
adc
fs
push
test
lods
stos
jp
test
dec
or
push
xorl
pushf
imul
sub
mov
sub
ja
or
push
orb
orl
fs
sahf
push
mov
stos
mov
jbe
mov
pop
cmpsb
inc
outsl
fwait
pop
and
in
dec
scas
lahf
dec
pop
enter
mov
in
int
push
pop
push
mov
pop
mov
sbb
enter
pop
sub
fidivrs
lock
mov
aaa
les
pop
jecxz
pushf
scas
sti
fmulp
jp
rolb
pop
push
sbb
mov
xor
inc
call
out
loope
fucomp
cmc
cmpsb
or
adc
inc
aaa
sbb
dec
arpl
js
cld
cwtl
jle
cmp
pop
fstpt
pop
xlat
je
std
add
push
mov
fucomp
sbb
loop
push
dec
loop
dec
cmpsb
gs
scas
std
xchg
sub
dec
jl
outsb
add
leavew
pop
mov
aad
pushf
mov
cs
push
push
add
push
sbb
ss
mov
adcb
pop
mov
sbb
and
push
shlb
mov
fcmovnbe
fsubs
jo
push
or
xchg
fisubrl
mov
leave
dec
insb
int3
aad
xor
add
js
fdivr
mov
cmpsb
stos
dec
push
idivb
dec
mov
imul
mov
add
mov
loop
pop
icebp
mov
or
ret
fistpl
sub
xchg
mov
loop
inc
or
cli
jmp
jb
das
dec
push
inc
pop
inc
or
lods
int3
pop
jle
mov
xchg
dec
add
test
push
pop
cmpsl
push
sbb
stos
xor
nop
in
mov
sbb
cmp
or
or
ficoms
fadds
cs
mov
stc
daa
add
add
sub
inc
add
inc
push
out
push
sub
in
sti
push
and
sbb
leave
loopne
shlb
cmp
push
dec
jo
add
cwtl
pop
xor
mov
xchg
add
jmp
rolb
push
and
and
stos
ret
jle
ds
mov
shl
sbb
pop
je
arpl
fcom
ss
fists
sbb
xchg
test
or
cmp
addb
pop
sub
addr16
pop
add
mov
sbb
cmp
out
movsb
leave
scas
rolb
sbb
in
push
mov
loopne
pop
icebp
inc
xor
sbb
mov
enter
lahf
push
mov
pop
mov
adc
sub
xchg
mov
push
loopne
xchg
jne
adc
jae
ret
test
loope
icebp
adc
repz
mov
inc
test
ret
sub
addr16
aad
push
add
pop
lds
push
das
mov
mov
jo
or
push
sub
mov
and
mov
faddp
mov
in
and
je
fsubp
pop
and
cmp
push
mulb
sub
mov
inc
int
xchg
leave
and
add
sahf
jp
in
xor
and
mov
lahf
inc
add
pop
shrl
lock
mov
data16
and
data16
cmp
movsl
ret
into
std
jae
ficoms
jl
testb
and
mov
inc
insb
bound
bound
scas
faddl
or
inc
xchg
cwtl
dec
cmp
add
cmpsb
fs
adc
nop
loop
insb
and
adcl
imul
push
in
and
mov
leave
cmc
nop
mov
jno
xchg
movsl
aaa
pop
faddp
xchg
imul
call
lock
push
mov
lea
push
adc
ret
dec
mov
addb
xor
test
nop
mov
add
sub
or
jb
sbb
sti
mov
xchg
push
cmp
mov
jo
add
icebp
dec
inc
mov
into
in
and
dec
pusha
sub
js
push
cmp
or
loop
inc
mov
mov
clc
inc
repnz
js
test
bound
inc
xor
cmp
jp
int3
insl
xorl
les
stos
sar
mov
xor
inc
scas
call
dec
jl
enter
in
cmp
ljmp
lret
xchg
adc
pop
lods
orb
out
and
xchg
fldcw
and
xor
rorl
or
es
pop
mov
jmp
adc
mov
lods
xlat
push
scas
test
fwait
repz
xor
inc
sahf
xchg
lret
push
inc
push
adcl
push
adc
push
jecxz
ljmp
fwait
ds
fld
sbb
pop
push
adc
in
mov
or
ljmp
arpl
add
adc
movsb
ds
xchg
cmpsb
jl
or
pop
dec
add
jecxz
je
xchg
enter
leave
call
call
das
mov
cld
xor
icebp
mov
mov
jp
adc
fstps
add
sarb
icebp
es
lock
sbb
test
jmp
int
cmp
sarb
shlb
add
scas
and
jno
in
icebp
lods
inc
lea
push
cltd
dec
xor
mov
mov
or
out
fcomps
aad
mulb
sbb
pop
add
push
pop
ds
cmp
and
mov
dec
inc
xchg
adc
adc
lock
imul
insl
or
cmpsb
ss
sbb
sbb
inc
inc
pop
inc
adc
add
cmp
popa
mov
mov
add
clc
or
mov
test
outsl
test
push
xor
xor
fwait
mov
xor
adc
pop
mov
das
mov
cmp
sbbl
mov
mov
cs
inc
adc
pushf
dec
push
das
or
cmp
shll
das
mov
add
ds
fadds
jl
ljmp
adc
test
cmc
aam
jle
inc
cmp
sbb
fadds
popf
cmp
sub
mov
dec
cld
sub
mov
int3
loopne
fsub
inc
dec
into
mov
sub
cmp
lock
sbb
add
push
iret
inc
decl
repz
inc
add
lret
popf
test
mov
xchg
mov
insb
popf
adc
sub
dec
cmp
or
not
daa
jle
cmp
test
jecxz
aam
xchg
stc
or
sbb
xchg
imul
loop
shll
jns
pop
or
jmp
fiaddl
push
andb
dec
or
gs
push
add
sbb
xor
repnz
enter
rcrb
les
and
scas
or
sub
push
jnp
in
sub
dec
push
nop
lods
aaa
jl
jge
pop
out
je
stos
mov
sub
fidivrs
and
orl
push
daa
loop
mov
sti
adc
jbe
scas
adc
sbb
mov
or
cmp
fimull
rclb
lar
inc
add
sub
loopne
pop
sbb
jmp
repnz
clc
out
es
sbb
out
adc
mov
out
bound
add
fldl
dec
pop
sub
scas
xchg
movsl
jb
push
daa
std
pop
mov
mov
hlt
xorb
loope
inc
mov
loop
lods
push
or
jge
mov
adc
xor
pop
sbb
pop
or
cmp
pop
js
cmpsl
into
shlb
and
into
negb
cmp
jnp
ret
pop
mov
out
aas
push
mov
inc
stc
push
hlt
es
std
inc
pop
mov
mov
sub
lds
data16
push
cmp
fwait
das
sub
pop
pop
ret
lret
fildll
or
mov
loop
push
xor
enter
shlb
dec
lahf
mov
mov
and
aaa
push
mov
mov
add
out
outsb
outsb
js
call
mov
sub
mov
jle
cmpsb
push
inc
outsl
cwtl
or
out
fisttps
push
out
push
and
cwtl
aam
lods
xchg
inc
jae
call
add
imul
add
mov
int3
add
movb
scas
push
xchg
lods
adc
jae
fcmovb
lcall
mov
in
lods
frstor
test
xchg
and
cmc
push
aas
icebp
xchg
clc
jne
sbb
pop
xchg
jl
mov
mov
add
cwtl
push
push
shrl
cmp
pop
xchg
mov
push
mov
dec
mov
vpackuswb
mov
xor
fidivl
rcrb
adc
fs
ljmp
daa
inc
iret
mov
les
pusha
rorb
jl
sub
dec
mov
movsl
sub
lods
xor
fistpl
xchg
xchg
xor
xchg
cmp
leave
daa
or
push
mov
pop
add
int3
pop
sub
pop
icebp
dec
test
sub
fistpll
and
aas
ljmp
add
call
mov
xlat
adcl
mov
jmp
or
dec
loopne
push
dec
ficoml
cs
loop
xor
xor
andl
cmp
nop
jle
mov
inc
sbb
daa
js
in
out
mov
icebp
gs
clc
inc
rcll
mov
mov
andb
data16
and
addr16
das
mov
cmp
cmovo
mov
iret
mov
sahf
pop
jmp
in
enter
cs
mov
and
mov
icebp
push
xlat
fwait
shl
adcb
push
xlat
inc
mov
xor
mov
xor
ret
mov
lock
ljmp
mov
pusha
adc
sub
ds
push
add
xchg
mov
mov
xchg
jle
fs
push
out
fsub
stos
lods
sub
mov
aad
rcl
mov
pop
call
insb
lret
lfs
in
lods
or
push
push
jl
xchg
push
mov
mov
int
scas
mov
adc
mov
dec
cltd
push
sbb
xlat
stos
popf
pushf
lods
aas
push
es
jg
out
ds
fistps
and
jmp
je
jo
test
add
xor
mulb
dec
nop
int3
pop
push
mov
xadd
cltd
sub
aam
pop
movsl
inc
aam
sub
roll
clc
jmp
je
ret
in
or
pop
mov
sbb
cs
jno
frstor
add
add
inc
xor
cmc
loope
push
mov
mov
xchg
inc
fimuls
add
cwtl
rcl
and
arpl
in
adc
cli
adc
adc
push
clc
sahf
push
mov
sub
adc
pop
mov
mov
mov
pop
int
mov
pop
mov
cmp
mov
ss
inc
add
dec
outsb
test
inc
aam
cmp
daa
sbb
and
pop
stc
hlt
jo
adc
dec
mov
testl
mov
cmp
shr
sbb
pushf
int
adc
mov
or
cli
or
xchg
scas
test
mov
bound
fdivs
jns
push
or
inc
cmpsl
or
xor
cmpsl
loope
mov
inc
push
inc
pop
push
add
lock
dec
sbb
mov
and
mov
js
pop
mov
inc
cmpsb
call
pop
cs
jl
push
nop
adc
mov
mov
jmp
loopne
cmc
push
dec
stc
sub
int
mov
inc
inc
mov
inc
std
and
icebp
stos
pop
adc
nop
ljmp
int
xchg
mov
test
mov
sbb
lcall
lods
mov
incb
inc
mov
mov
lods
das
dec
rorb
push
inc
scas
or
dec
clc
mov
cmc
mov
push
int
std
mov
out
xor
jp
ljmp
inc
lea
or
lods
push
mov
sbb
mov
das
out
fisttps
lods
push
xchg
mov
inc
mov
pop
les
sub
movsl
lret
dec
adc
add
jmp
xor
adc
outsl
and
fs
sub
jl
or
testb
sarb
inc
lret
ss
pop
lock
inc
push
cmp
adcb
jae
call
mov
out
inc
xchg
sbb
stos
push
xor
cmp
test
test
mov
pushl
mov
sbb
rclb
pmaxub
sbb
fs
or
incb
pop
sub
xchg
inc
movsl
add
mov
inc
push
psubsw
add
pop
sub
test
push
lcall
push
shlb
mov
cwtl
push
pop
scas
fadds
xchg
rcrb
push
mov
dec
movsl
push
mov
mov
sbb
mov
stos
jl
or
pop
sub
mov
sub
inc
push
mov
xor
into
es
xor
mov
loop
mov
loope
lcall
jl
sbb
xchg
xor
lcall
mov
adc
push
pusha
movsb
bound
xor
rol
ds
cmp
rcrb
dec
mov
cmp
repz
fsubrs
pusha
mov
shrl
push
icebp
push
adc
loope
sahf
and
add
xchg
hlt
outsb
push
dec
gs
pop
notl
xchg
sbb
enter
xor
mov
leave
push
in
lods
lods
pop
ds
ljmp
jl
bnd
pop
xor
jmp
push
nop
loopne
mov
cwtl
cmpb
std
sub
xor
adc
mov
push
mov
in
aad
dec
out
ret
cli
jle
insl
rolb
mov
pop
call
hlt
test
mov
sbb
lods
inc
push
idivb
in
jnp
push
mov
loope
clc
lcall
adc
cmp
or
cmp
loop
loopne
imul
sbb
cmp
out
cld
clc
and
sahf
imul
cmp
sti
fbld
loopne
add
push
mov
add
sbb
pop
jno
mov
cmp
dec
shl
inc
xor
add
mov
cmpsl
push
jmp
mov
push
sbb
call
push
clc
icebp
pop
and
push
xor
test
push
sbb
sarb
push
js
sahf
fs
aas
icebp
or
pusha
ret
ds
mov
xor
sarb
ftst
ret
sub
or
mov
fst
pop
ds
fs
fnsave
sbb
or
shl
push
push
mov
sub
pop
xor
stos
mov
inc
inc
fs
mov
test
fldl
xchg
cmpsb
push
ds
adc
enter
mov
jbe
and
jge
cmp
mov
adc
push
stos
and
or
pop
stos
fdivr
adc
sbbl
mov
out
push
jl
icebp
sub
mov
push
cmp
inc
pop
mov
xchg
les
sbb
pop
push
xor
or
mov
mov
or
mov
push
movsl
jne
jo
sub
ss
cmp
aas
mov
pop
cs
outsb
or
push
or
sub
in
jnp
lock
adc
imul
rcr
push
xchg
inc
mov
pop
test
shll
pop
loope
mov
shrb
inc
in
lret
push
loop
test
movsl
test
sub
jnp
xchg
mov
mov
pusha
rcrl
pop
loop
xlat
imul
stos
pop
es
inc
stos
dec
mov
les
and
out
out
shl
mov
jbe
fbld
push
sbb
push
push
xor
push
jns
sti
hlt
incb
jne
jl
jp
xchg
pop
xor
cmp
rclb
stos
add
cmp
aam
xchg
add
add
int3
addr16
lods
icebp
xlat
xchg
dec
push
test
jne
pop
jle
sar
mov
push
lock
int
pop
mov
and
and
and
pop
dec
ret
ja
mov
lods
and
mov
xchg
or
lock
gs
adc
bound
enter
sbb
test
xchg
scas
sub
adc
pop
int
or
push
aaa
fists
add
mov
lds
inc
push
mov
or
jecxz
nop
or
loope
hlt
mov
cmp
clc
push
push
cs
loopne
sti
dec
push
mov
xor
jb
add
inc
pusha
adc
pop
inc
push
inc
jne
sub
test
cmp
repz
jmp
js
mov
dec
adc
fbstp
xchg
rcll
dec
fndisi(8087
mov
pop
in
aad
jecxz
das
push
mov
mov
sub
jno
std
mov
inc
pop
loop
enter
and
inc
jl
call
jle
jbe
cmp
aad
sbb
push
loopne
or
add
adc
add
in
in
inc
rcrb
sbb
mov
mov
movsl
cmp
add
ret
rol
dec
sbb
fscale
inc
jnp
loop
mov
and
imul
push
sbb
jb
dec
or
scas
ret
ljmp
pop
mov
adcb
mov
nop
sub
fldt
dec
dec
sbb
loop
and
ret
push
jge
mov
cmp
out
lahf
test
dec
push
les
inc
test
shll
mov
in
rcrl
addl
sub
into
inc
repnz
dec
ret
or
or
es
xchg
cmp
cmp
das
sub
push
xchg
clc
rcll
cltd
dec
sbbl
mov
xor
adcb
xlat
adc
js
xchg
dec
mov
xchg
call
jo
loop
stc
fildll
lret
mov
cwtl
aam
stos
mov
nop
idiv
pop
orl
stos
or
push
push
jnp
stos
mov
inc
call
mov
aas
cwtl
fsts
adc
or
pop
mov
add
cmpb
rcr
cmpb
les
lahf
pusha
inc
sbbb
popf
cmp
xor
mov
xor
popa
push
jle
pop
ds
out
shl
jg
loopne
mov
xrelease
imul
aas
lods
add
dec
sbbl
iret
pop
cmpb
pop
mov
pop
pop
cmp
sub
mov
or
sbbl
ljmp
call
add
cld
sub
es
and
dec
mov
jge
in
pop
nop
dec
rcrb
lret
mul
mov
cltd
xor
cmp
and
mov
xor
imul
fistps
mov
add
xchg
cwtl
shll
ret
mov
sbb
mov
xchg
and
shl
in
xchg
sar
insb
lret
push
or
pop
mov
aas
addb
fcomp
iret
sub
imul
test
xchg
les
call
lahf
push
sbb
inc
jle
dec
pusha
mov
mov
mov
cld
jecxz
add
mov
sub
mov
int
pop
xor
sbb
inc
add
test
mov
js
pop
mov
pop
or
repnz
icebp
imul
jl
outsb
push
cld
sbb
int
xor
pop
pop
dec
pushf
enter
es
loop
xchg
call
mov
push
clc
adc
rcl
cmpsb
mov
sbb
xor
and
push
sbb
mov
mov
pop
out
leave
cwtl
out
sub
jmp
add
xor
iret
or
jle
adc
mov
push
inc
lds
cmpsl
dec
es
sub
fadds
xchg
mov
inc
mov
test
lock
shlb
scas
or
jmp
xor
cld
mov
jle
and
testb
fcmovbe
push
push
pop
sbb
push
cmpsl
pop
xorb
or
jmp
mov
mov
fiaddl
cltd
popa
inc
mov
inc
jo
inc
adc
mov
xlat
push
aad
adc
or
out
push
inc
jnp
mov
in
icebp
xchg
jmp
xchg
adc
cmpsb
insl
out
adc
mov
fs
cmc
insb
adc
mov
es
jge
xor
or
push
mov
or
cli
xor
pop
loop
push
rcrb
cld
ret
nop
push
lods
mov
repz
mov
push
inc
das
dec
cmp
dec
sbb
test
adc
pop
addb
das
jle
pushf
loope
mov
ret
dec
mov
xor
sub
movsb
mov
out
dec
mov
sbb
dec
jg
or
shr
in
call
mov
push
mov
scas
or
popl
xor
insb
subb
dec
push
and
popa
shl
inc
lock
enter
mov
inc
cltd
das
inc
push
xchg
stos
or
loop
cli
fwait
inc
jge
mov
call
jne
jb
scas
adc
aas
xor
movsb
scas
invd
jl
cmp
and
out
jno
xchg
push
sbb
xchg
xor
ljmp
stc
mov
push
inc
movsl
idivb
lret
iret
sti
rolb
jl
adc
sbb
mov
pop
or
std
addr16
lods
mov
mov
pop
pusha
repnz
inc
lea
inc
out
sub
pop
cmpsb
clc
xor
xchg
add
lods
add
push
add
in
push
push
sahf
sbbb
mov
xor
jmp
xchg
add
mov
insl
xor
push
jns
sahf
xor
and
not
push
aas
adc
push
xlat
push
mov
in
aas
jmp
mov
lock
or
lret
insl
pop
jo
xchg
sbb
xor
stos
mov
xchg
push
repnz
inc
inc
adc
sub
loopne
add
les
addr16
push
push
movsl
mov
lock
xor
push
inc
enter
out
hlt
push
pop
loopne
xchg
xor
dec
and
sbb
mov
leave
data16
pop
test
inc
add
mov
movzbl
mov
pop
in
xor
clc
fisubrl
mov
mov
push
cld
xor
ljmp
pop
lock
rolb
stc
popf
sub
aas
jbe
cwtl
mov
aad
adc
cli
mov
adc
inc
adc
inc
jle
pop
mov
add
bound
mov
cmc
xchg
lcall
add
stos
mov
fsubs
sarl
xor
sbb
xor
movsb
xor
push
push
jg
push
xor
dec
mov
or
xchg
push
and
add
add
sbbb
add
rclb
int
rcrb
sbb
push
js
adc
sub
add
ja
and
adc
mov
pop
adc
inc
adc
mov
push
lods
hlt
into
jo
fs
fs
in
inc
cld
insb
rcrb
fs
adc
cli
mov
cmp
push
add
xchg
push
test
cmp
popf
adc
or
dec
xor
icebp
aam
dec
gs
cli
incl
test
inc
movsl
add
sbbb
sbb
inc
mov
mov
movb
inc
xor
cmp
test
mov
mov
jb
inc
fldt
test
ret
ficoms
cmp
mov
rorb
sub
adc
mov
push
les
int
sahf
sub
xchg
clc
adc
aad
inc
test
dec
sahf
into
push
cmp
push
or
inc
pushf
fsubrl
test
adc
sbb
inc
mov
jecxz
fsubl
xor
sbb
mov
pop
mov
movsb
mov
aad
rclb
adc
add
inc
and
sub
inc
sub
adc
mov
pusha
mov
mov
add
stc
cmp
lock
push
cmp
inc
sbb
and
jl
cs
xchg
add
aad
push
aaa
push
pop
lcall
cmp
adc
add
dec
ficomps
sbb
and
insl
cmp
repnz
mov
pop
add
jno
enter
loopne
mov
daa
cli
das
movsl
mov
add
data16
mov
inc
loop
adc
xchg
adc
jp
enter
outsb
int
and
sahf
add
cmpsb
pop
push
mov
mov
enter
not
movsb
and
rcl
mov
lock
cmp
insb
xor
inc
jmp
pop
jle
jecxz
jbe
mov
push
xchg
mov
mov
std
mov
jmp
inc
sbb
jns
scas
or
xlat
les
jbe
outsl
mov
in
loopne
fcmovb
cwtl
mov
popa
mov
jle
pop
sarb
stos
mov
sbb
add
sub
sbb
fadds
push
dec
xor
push
outsb
and
imull
test
test
test
jb
adc
movsl
jo
add
hlt
push
pop
lret
push
fldt
int3
leave
adc
push
inc
pop
mov
in
inc
pop
das
push
mov
aas
pusha
inc
mov
xchg
add
sub
adc
in
sbb
push
push
pop
pop
xchg
and
mov
imul
sbb
js
cbtw
test
xchg
xchg
mov
mov
test
and
mov
push
sbb
imul
aaa
or
add
and
in
and
xchg
xor
sbb
mov
ficoml
mov
cmp
sti
fs
mul
jmp
out
or
stos
pop
rcrb
inc
call
sub
popaw
jmp
or
pop
push
cld
in
cmp
insb
push
mov
jne
mov
add
adc
xchg
pop
shlb
cs
add
sbb
rep
lods
mov
xchg
aam
fnstenv
mov
cwtl
inc
jmp
fs
in
sbb
cltd
out
mov
cmp
pop
pushf
rcll
test
outsb
xor
xor
or
js
add
mov
dec
lcall
test
pop
pop
js
mov
add
adcl
mov
in
out
decl
add
cmp
add
ds
ss
cltd
mov
mov
sahf
or
sub
sti
cmpsl
pop
xchg
mov
pop
movsb
add
push
lret
test
int3
sbb
jl
or
lret
mov
adc
dec
adc
sub
pop
fisttpl
lcall
mov
movsl
loope
mov
push
call
popa
loopne
test
mov
inc
push
call
sub
cltd
mov
cs
sbb
and
ja
inc
jne
inc
push
push
mov
lock
and
lea
adc
ret
pop
push
fidivs
mov
ja
adc
cmp
xchg
jmp
test
dec
mov
scas
xor
cmpsb
test
pop
aas
gs
dec
push
mov
ljmp
dec
adc
sbbl
jbe
cmc
sub
mov
xor
mov
xorl
mulb
sub
pop
mov
add
or
pop
mov
movsb
fnstcw
or
cmp
dec
lock
jl
mov
jo
adc
shlb
sbbl
push
xchg
nop
or
lea
xor
test
jbe
mov
imul
cli
add
mov
and
and
or
push
testb
dec
jge
push
dec
cmp
shrl
fisubrs
out
icebp
jp
in
leave
add
pushf
jmp
cmpl
sub
pop
mov
and
shlb
movsb
lds
cs
lea
xchg
dec
xlat
fiadds
xor
aad
ficompl
clc
ss
insb
les
dec
jns
je
lret
or
gs
mov
test
dec
ss
js
lcall
lret
add
mov
adc
sar
push
fcomp
jnp
shlb
cmp
lahf
mov
xchg
out
mov
inc
in
xchg
mov
and
mov
icebp
inc
sub
jo
pop
push
ret
inc
xchg
dec
xchg
mov
popa
dec
pop
es
push
adc
sarb
xchg
or
dec
dec
inc
jb
shlb
or
adc
cmp
mov
or
mov
aam
out
and
stos
or
fdivr
bound
mov
in
xor
mov
push
cmp
test
adc
mov
sub
gs
jmp
shl
xor
lds
stc
xor
scas
dec
mov
pop
pop
add
pop
pop
sub
mov
push
aaa
cmp
pop
add
adc
add
bound
sub
dec
jns
aam
push
push
inc
imul
inc
in
push
mov
xor
sub
jo
push
incl
adc
data16
mov
cli
inc
mov
mov
push
sub
enter
fimuls
gs
sub
inc
test
lods
ja
sbb
stos
repnz
into
cwtl
ss
daa
xor
js
test
adc
dec
mov
mov
cmp
jbe
push
icebp
hlt
aas
mov
cmp
jmp
ret
andb
clc
ljmp
pop
jno
dec
in
fistpl
icebp
ljmp
dec
rcrb
cs
mov
stc
ljmp
test
xchg
pop
mov
sub
std
xchg
ret
add
pop
sbb
test
ffreep
xor
sub
jbe
jg
jl
hlt
mov
movmskps
jmp
adc
les
push
into
out
pop
aas
loope
dec
mov
lea
pop
scas
ss
adc
dec
or
and
xor
insb
inc
mov
jle
cld
cwtl
stos
addr16
cwtl
mov
std
ret
push
adc
jl
or
je
rorl
imul
rolb
xchg
push
call
mov
xlat
xor
jae
mov
and
sub
rorl
cwtl
push
clc
int
mov
iret
xchg
cmp
repz
push
jle
sbb
or
xor
loopne
push
loopne
push
cltd
cmc
or
pop
sub
dec
fs
out
mov
fs
sbb
les
inc
jp
xor
mov
dec
cmp
xor
dec
pop
inc
mov
mov
pop
sbb
dec
and
jns
lahf
sub
sbb
jns
clc
jns
gs
fnsave
sahf
xchg
jns
ss
jo
loop
ss
add
cmpsl
lret
nop
in
xchg
sbb
pushf
pop
movsl
jne
adc
outsl
cmp
mov
orl
repz
or
jecxz
push
xlat
dec
add
int3
cmp
or
add
test
jmp
xchg
test
and
lods
inc
and
aaa
or
adc
insl
jecxz
xchg
jne
pushf
sti
call
dec
xor
xchg
jb
sub
sarl
call
xchg
jp
or
leave
fdivl
clc
mov
cli
test
lret
movsb
cmpsl
adc
lock
cmp
mov
fmulp
jo
icebp
pop
hlt
mov
in
dec
add
mov
je
clc
loopne
mov
mov
jno
sahf
rclb
dec
push
inc
test
mov
push
mov
dec
sbb
ret
loopne
xchg
sti
mov
fadd
jae
jle
aad
mov
inc
jecxz
xchg
pop
cmpsl
sub
ja
in
sbb
inc
mov
add
enter
rol
out
fincstp
fmuls
test
push
rcrb
cmovbe
bound
sti
mov
rorb
icebp
fistps
xor
dec
or
push
ljmp
inc
rcrb
ror
loopne
divl
ss
dec
adc
lcall
andb
pop
mov
cmp
mov
mov
fidivs
cmp
pushf
out
mov
dec
loopne
fldt
mov
mov
cmp
stos
lcall
dec
gs
sarl
adc
mov
xor
aam
mov
clc
dec
or
lea
in
dec
jp
mov
and
dec
xor
iret
mov
mov
sar
stos
push
xchg
ficomps
xor
cs
mov
in
loope
xchg
mov
call
daa
xor
pop
mov
insl
xor
iret
xor
jae
insl
mov
sarl
mov
push
mov
cs
adc
pop
xor
ljmp
cmpsl
push
push
pop
cmp
or
out
push
test
shl
test
mov
adc
dec
ds
pop
mov
jne
dec
adc
jno
lods
or
aad
xlat
loopne
rorl
in
outsb
and
jl
inc
push
fisttpl
inc
leave
clc
inc
loop
push
add
enter
adc
push
faddl
jge
sbb
push
cmc
xor
mov
fwait
add
lds
lods
sub
bound
pop
jnp
idivb
enter
add
jb
lock
dec
push
ror
fs
and
lock
insl
loop
test
sarb
mov
filds
cs
imul
adc
mov
movb
test
dec
and
cmp
rolb
pop
xor
sub
lods
xor
mov
andb
sub
mov
push
dec
push
push
in
add
nop
inc
vmwrite
add
pop
and
mov
ss
mov
adc
stos
in
ret
inc
push
icebp
cli
mov
pop
les
sarl
and
inc
sub
push
aam
lds
insl
je
fcomps
or
dec
sahf
cwtl
lret
jns
addb
jge
sub
xor
or
scas
add
pop
add
mov
mov
pop
add
rcr
es
es
mov
cmc
add
pop
dec
filds
xchg
xor
cmp
pop
xlat
mov
into
dec
jecxz
xchg
pop
and
jl
push
jnp
dec
es
pop
cli
xchg
mov
add
adc
sub
inc
mov
xor
test
aam
lods
inc
fsubr
fisubs
mov
test
outsl
aam
mov
cmp
icebp
cwtl
pop
xchg
movsb
test
sbb
add
call
sub
sub
adc
fcoms
lea
inc
shl
inc
mov
ficoml
adc
pop
sbb
pop
inc
pop
jl
pop
popf
jecxz
pusha
xor
aad
pop
test
sbb
mov
scas
sahf
dec
es
cs
rcl
aaa
fwait
repnz
or
push
mov
push
push
shrb
int
sub
adc
push
jne
movsl
sbb
insl
adc
fisubs
fdivrs
and
mov
adc
sub
mov
sarl
mov
ret
cli
adc
ds
test
dec
ljmp
cwtl
fisubrs
xor
aad
fwait
ss
scas
mov
mov
pop
push
ret
xchg
loopne
push
add
add
popf
sbb
inc
mov
loopne
adc
dec
imul
mov
repz
imul
xor
cmpsb
movsl
sub
test
movb
in
jmp
inc
dec
pop
pop
repnz
sbb
test
insb
aas
adc
cwtl
js
sahf
subl
xchg
pop
jns
or
mov
iret
inc
aaa
cmp
popa
sahf
push
rcll
ret
lock
jo
push
xchg
enter
mov
mov
xchg
pop
ret
push
pusha
loop
sbb
cmpb
or
in
out
scas
mov
push
jb
aaa
mov
inc
inc
arpl
xor
pop
pop
sub
sbb
scas
inc
add
fs
jb
xchg
lock
enter
call
push
pop
mov
sub
lahf
and
push
dec
ss
clc
cmp
cmc
call
mov
ss
lds
push
ljmp
scas
rorl
sbb
jge
add
loopne
ss
mov
sbb
mov
sbb
shrb
pop
hlt
ja
dec
scas
pop
movsb
add
shlb
cmpsb
sub
and
lret
pop
cli
mov
sbb
and
cltd
pusha
dec
popf
icebp
adc
cmp
xor
cmp
sub
sub
cmpsb
mov
pop
inc
xchg
adc
mov
mov
stos
add
fisubrs
xchg
test
filds
mov
or
sub
jb
inc
ljmp
inc
adc
pop
dec
cli
in
sbb
mov
or
push
add
push
int
pusha
cmp
fldt
out
std
clc
int3
fbld
xor
clc
in
adc
and
mov
inc
and
jle
xor
imul
das
jo
sti
push
push
movsl
ljmp
ret
pop
or
sub
in
and
mov
iret
stos
aaa
add
push
mov
sbb
dec
sbb
cwtl
popf
movsb
inc
insl
add
orb
loop
test
cld
shr
test
mov
loop
in
pop
dec
minps
daa
repnz
cmpsb
lock
push
out
sbb
ja
rol
cmpl
push
enter
es
mov
and
dec
xor
ds
cmpsb
int3
sub
mov
push
xchg
cmp
rcrl
push
in
push
cmp
into
cli
cmpsb
xlat
test
sbb
insb
mov
shl
shl
mov
push
mov
cmp
mov
jmp
int
arpl
adc
push
aas
cwtl
bound
add
test
test
mov
lcall
cmp
jl
inc
ret
mov
jns
out
repz
cmp
inc
popa
sbb
loopne
lea
shrl
or
jne
sbb
lcall
mov
sbb
pop
pusha
pop
gs
jae
inc
sar
push
leave
jno
aam
fsubl
sbb
outsb
pop
ljmp
xor
mov
shll
or
jo
xor
in
into
insb
stos
push
fwait
sbb
mov
adc
cwtl
imul
pop
xchg
xlat
inc
outsb
loope,pt
mov
pop
scas
inc
xor
mov
pusha
sbb
addr16
mov
stos
xlat
add
dec
sbb
aaa
push
lds
test
push
sbb
mov
mov
xchg
inc
inc
outsl
mov
sarl
mov
inc
cmp
movsl
cmp
or
adc
loopne
mov
ffreep
inc
xchg
dec
ljmp
pusha
and
ljmp
adc
imul
xchg
adc
filds
mov
mov
pop
fisttpl
add
or
and
mov
adc
dec
sbb
xor
cs
loope
xchg
adc
inc
xchg
mov
push
adc
jle
mov
movsb
inc
or
xor
add
je
inc
call
mov
mov
adcl
or
out
or
sti
pop
scas
add
mov
incb
imul
addb
fiadds
jbe
in
cmc
loop
stc
bound
insb
aam
sbb
popf
and
ja
mov
push
loop
dec
sub
cltd
or
xchg
pusha
cmpsb
outsb
insb
inc
sub
leave
or
adc
div
jo
fs
sub
xchg
insl
insb
add
pop
adc
add
push
xchg
hlt
jno
call
or
pop
jo
cli
stos
cld
mov
add
sub
sahf
cs
scas
push
test
pop
jb
inc
int3
lods
push
lret
movsb
js
fst
mov
push
in
cs
js
cld
mov
adc
jmp
adc
lock
call
fwait
cwtl
rcr
xchg
rcrb
sti
push
xchg
mov
jge
lock
inc
fildll
inc
add
or
scas
add
jg
int
inc
mov
arpl
dec
mov
pushf
add
rol
sbb
loope
push
cld
xchg
add
pusha
ret
leave
xor
insb
pushf
je
push
inc
fistps
xchg
add
add
ficomps
adc
test
xor
data16
cld
test
xchg
insb
pop
repnz
sbb
fsubrs
jmp
movsb
mov
inc
or
shrb
lea
xchg
add
inc
testl
ja
sbb
jne
cld
movsb
dec
inc
pop
pushf
mov
jb
pop
push
sbb
hlt
mov
push
cltd
test
loop
ficompl
adc
or
or
mov
popf
mov
jl
mov
jae
add
call
pusha
into
nop
cmp
add
cld
lcall
aam
lods
jp
scas
stc
or
cmp
insl
out
fimuls
iret
shl
mov
cmp
dec
inc
or
ret
sahf
test
push
jo
repnz
rorb
push
xchg
push
sbb
inc
loopne
std
mov
adc
pop
dec
xor
fdiv
jo
pop
movsb
mov
je
add
ds
movsl
popfw
fsubs
pop
mov
imul
insl
push
test
sub
les
push
loop
arpl
sub
repz
clc
cmp
pop
insb
outsl
or
cmp
add
and
sbb
fstp
jp
adc
sar
jnp
jb
lea
cli
dec
jb
clc
movsb
adc
daa
je
push
loop
mov
mov
dec
rorb
and
pop
push
shrd
ret
outsl
jo
sub
sar
inc
sti
sub
xchg
add
pop
mov
pop
rcl
test
lock
inc
pop
stos
add
sarl
shl
popa
inc
cmp
sbb
ds
or
jg
push
rclb
jns
je
push
je
outsb
xlat
inc
adc
jbe
push
jl
fs
pop
cmp
adc
out
sbbl
mov
sti
jbe
cmpb
test
mov
pop
add
or
add
jb
mov
adc
ss
jle
adc
jl
mov
xchg
out
push
jb
cli
pop
scas
inc
add
dec
ret
cmp
mov
test
and
push
sbb
jnp
aas
lret
and
pushf
subb
sahf
fmuls
mov
mov
and
lea
es
xchg
out
cwtl
dec
push
mov
stos
pop
sub
fiaddl
loop
outsl
inc
popa
int
insb
bnd
cmpsb
pop
enter
xorb
lret
jne
adc
imul
roll
pop
and
into
outsl
fadds
add
int
add
rorb
xorl
jns
js
outsl
outsl
call
sub
loope
and
lds
movsl
das
adc
into
aam
ret
rol
and
dec
pop
adc
cmp
mov
or
into
notl
nop
adc
sub
fsubl
cmp
push
pop
xlat
add
xor
test
inc
test
jle
push
es
ljmp
pushf
scas
lds
xchg
mov
mov
add
jno
mov
jle
pop
sub
push
movsl
and
rcrb
mov
push
adc
sbb
push
mov
fidivrs
mov
fists
sub
push
mov
ljmp
sub
enter
push
jmp
adcb
push
lods
cmp
sub
les
add
adc
cmpsb
mov
aam
xchg
lods
sub
xchg
je
jbe
outsl
ss
mov
popa
sub
int3
inc
repz
jl
inc
out
jnp
insl
leave
mov
inc
jg
cmc
test
repnz
sub
cli
dec
pop
test
push
and
push
jbe
push
mov
adc
out
cmp
mov
push
ror
test
push
test
add
test
push
lret
leave
pop
pop
xor
pop
mov
aaa
mov
pop
or
mov
dec
mov
push
jge
call
in
sahf
sbb
adc
popa
orb
mov
rcrl
inc
sub
add
ficompl
sbb
mov
neg
loop
or
or
mov
mov
inc
jae
push
rcrb
lock
ds
mulb
sub
imul
out
push
dec
ja
das
fld1
lods
or
adc
shl
mov
xchg
psrad
adc
push
popf
mov
jmp
mov
add
cmp
mov
in
sub
cs
leave
shrb
jnp
mov
scas
cmpsb
adc
cwtl
push
jge
insb
mov
sub
imul
jo
dec
out
mov
inc
outsb
mov
sub
jle
mov
dec
jno
jo
incl
sbb
mov
xorb
inc
jge
movsb
pop
daa
cmc
and
or
nop
ss
cmp
push
cmp
fcoml
add
loopne
push
cmp
sub
movl
shr
sahf
cli
fucomp
sbb
inc
lret
inc
cmc
loop
popf
sub
mov
ds
lea
mov
mov
clc
setbe
ljmp
xchg
dec
notb
cmpsl
fwait
sub
inc
mov
rolb
addr16
cmpsb
xchg
addb
fwait
dec
rorl
rclb
pop
cmc
cmp
dec
push
sub
push
mov
lds
inc
mov
push
or
setb
fsubs
push
add
dec
push
insl
add
add
adc
stc
add
addr16
inc
cs
mov
repz
adc
xchg
add
pusha
cwtl
inc
pop
ss
add
scas
icebp
sub
mov
pop
dec
mov
xchg
or
iret
ret
mov
lock
add
cs
jb
dec
in
mov
or
mov
sub
mov
dec
adc
mov
and
dec
xlat
mov
mov
sub
sub
addb
nop
sbb
mov
mov
loop
loope
pop
jl
ror
sbb
dec
loopne
les
cmp
jg
aam
cmp
sbb
mov
cli
testl
pop
push
out
cli
jl
and
add
insb
js
scas
lock
ficoms
cmpsb
mov
ja
out
xor
stos
inc
pop
inc
stos
cmp
test
or
jmp
xor
cmpsb
mov
shlb
jb
add
mov
ret
les
push
adc
scas
rcrl
xor
mov
sub
inc
mov
push
fisttpll
mov
and
add
pop
add
inc
adc
or
xchg
push
clc
sbb
loope
loopne
mov
add
jge
sarb
mov
mov
sub
or
sub
insl
cmp
pushf
push
faddp
xchg
out
scas
jg
cli
aam
cmp
and
xchg
into
sbb
push
mov
mov
inc
rclb
push
adc
sbb
cmp
cmp
mov
js
clc
dec
pop
adc
xchg
ret
sub
fildl
xor
cmp
enter
jmp
imul
dec
in
leave
mov
mov
add
test
xlat
test
adc
loop
jo
push
loopne
xor
lods
rcr
jo
movsb
cmp
leave
test
aam
scas
and
mov
inc
pusha
jl
ljmp
adc
cs
mov
pop
pop
and
pusha
pop
xor
ljmp
rolb
bound
movsl
inc
cmpsb
enter
mov
dec
dec
gs
add
rcll
popa
adc
or
pop
or
ja
push
lea
sbb
push
xchg
pop
adc
sbb
or
stc
fsubs
pusha
cld
pop
mov
in
and
dec
test
movsb
inc
iret
xchg
add
cmp
in
or
adc
lods
lahf
fidivl
jecxz
xchg
jp
mov
mov
pop
push
add
push
and
arpl
aam
sbb
stos
arpl
stos
xor
mov
iret
clc
sub
rcrb
aas
or
mov
inc
inc
xor
push
or
mov
push
pushf
mov
adc
js
mov
lods
scas
jle,pn
cmp
aam
adc
sub
xchg
sbb
adc
icebp
out
xor
adc
add
gs
dec
lret
pop
lcall
xchg
xchg
dec
out
cmp
insl
das
scas
jo
cmpsb
aaa
mov
fcom
push
je
sbb
sub
pop
adc
sub
add
fs
lods
push
cli
push
lret
push
lods
stc
cmp
mov
cld
and
jno
ret
mov
mov
mov
jp
mov
or
dec
subl
mov
dec
sbb
sub
sub
and
pop
aaa
mov
repnz
jno,pt
rol
sub
lret
adc
adc
cmp
mov
mov
xlat
sahf
jp
test
cmp
adc
fbstp
pop
xor
in
cltd
daa
mov
hlt
adc
sbbb
testb
and
fildll
xchg
ja
test
sbb
lds
mov
cld
pop
and
push
mov
frstor
cmpsl
popf
xchg
lahf
inc
test
outsb
mov
and
jl
cmpsb
add
in
push
aaa
pop
adc
push
data16
pop
jp
cmp
jl
loopne
adc
cs
add
loopne
popa
xlat
pop
and
clc
jno
mov
pop
dec
sbb
iret
cmp
in
movsl
adc
shl
sbb
cli
rolb
insb
push
subb
cmp
add
and
lock
imull
loopne
xchg
test
xchg
or
or
fdivrs
adc
inc
xchg
add
repnz
lds
dec
test
loop
sub
dec
push
loop
sub
xchg
cmp
mov
adcb
mov
paddsb
adcl
inc
insl
movsl
gs
cmp
mov
aam
pop
mov
jecxz
outsb
mov
aas
mov
jb
xor
push
inc
lods
mov
aas
jecxz
xchg
adc
jne
movsb
mull
leave
or
and
int3
mov
mov
jl
dec
push
stos
test
ret
les
push
cmp
inc
mov
adcl
sub
movsl
mov
and
sub
push
and
lds
sbb
repz
outsl
mov
std
jmp
cld
mov
inc
sbb
sbb
outsb
hlt
pushf
fdivl
sbb
into
and
pusha
push
sarb
arpl
ljmp
icebp
sbb
mov
xlat
push
pop
cmc
sbb
rolb
jp
xchg
mov
mov
sbb
insl
jbe
cmp
loopne
xor
or
stos
ficoml
bound
add
dec
fcoms
pop
cmp
subl
icebp
xchg
inc
stos
sbb
stos
and
stos
xlat
or
outsl
ret
ljmp
xchg
xor
and
pop
movsl
adc
adc
in
jo
inc
rol
mov
lret
rcrl
sbbl
xchg
cli
add
adcb
aas
adc
ss
insb
fisubrl
test
inc
jb
loop
bound
lock
popf
jnp
mov
out
inc
push
jo
cmp
daa
push
jb
lock
push
mov
mov
mov
data16
decb
adc
cmp
push
scas
push
cld
stos
push
out
jo
dec
movsb
sub
sbb
dec
mov
ds
push
pop
xor
mov
imul
shrb
test
and
xchg
pushf
xor
push
mov
xchg
loope
popa
ss
push
inc
sbb
sub
dec
cmp
nop
fisttps
mov
mov
add
mov
cmp
inc
clc
subps
pushf
aam
sbb
xlat
xor
stos
jle
loop
push
jo
or
or
into
jb
lods
mov
shll
mov
lods
movsl
cmp
mov
xchg
adc
and
pop
jmp
rcrb
hlt
mov
xchg
rcr
outsl
lds
mov
and
mov
adc
sub
push
push
sarb
cmc
mov
pop
scas
push
pop
cmc
mov
or
jl
dec
sbb
pop
sbb
push
shl
cmp
mov
pop
mov
mov
cmp
stos
ds
inc
cmp
les
in
icebp
lock
addb
adc
xchg
pusha
pop
and
lock
ss
xchg
out
add
xchg
push
mov
jg
cld
add
lods
xchg
or
mov
mov
cmp
and
test
nop
out
lcall
loop
mov
lcall
orl
hlt
mov
mov
adcb
fmul
xchg
popa
hlt
cltd
fucompp
adc
push
lock
jno
sub
psubusw
roll
sbbb
jl
lret
mov
mov
das
push
inc
add
add
xchg
adc
fdivrs
clc
or
xchg
je
hlt
pop
das
and
push
sub
inc
notl
gs
xchg
jl
std
dec
sbb
mov
mov
sbb
cwtl
push
push
xchg
cli
loopne
mov
inc
pusha
sub
arpl
dec
adc
pushf
jno
jge
mov
movsl
and
sbb
mov
mov
and
mov
xor
mov
xchg
hlt
cmpsl
fcmovb
sbb
lahf
sub
mov
test
and
mov
cmc
rclb
outsb
inc
fnstsw
pop
fildll
mov
xchg
adc
jecxz
out
push
jecxz
insl
xor
inc
cli
mov
cmp
sub
sbb
xchg
addr16
sub
sbb
add
push
dec
jno
sahf
rolb
stos
sti
or
jno
gs
rorb
clc
in
in
inc
repnz
dec
xor
jl
sub
mov
inc
push
data16
add
mov
cmp
mov
sbb
enter
sahf
les
insb
ficomps
in
sub
mov
lahf
rcll
mov
hlt
insl
sub
cmp
mov
pusha
pop
jge
sbb
and
add
mull
divb
cmpsl
test
xchg
mov
add
mov
sti
lret
jmp
test
xchg
jge
arpl
test
das
sahf
int3
add
push
nop
dec
pop
xchg
outsl
fcomp
out
jmp
and
test
inc
jge
mov
lock
out
lcall
adc
in
add
jmp
cmp
arpl
sub
cmpsb
addl
repnz
stos
clc
stos
xchg
ds
or
imul
scas
mov
rolb
ret
sbb
adc
daa
shl
mov
cmpsb
mov
jg
iret
and
pop
in
nop
cs
and
sahf
cs
jo
lods
dec
push
scas
and
cmp
dec
js
jle
or
push
inc
or
fwait
jle
inc
pop
nop
add
jg
cmc
movsl
dec
mov
and
push
fcomip
jbe
mov
stos
test
fsubs
mov
ficoml
shlb
adc
sub
out
mov
sub
cmp
mov
mov
inc
loopne
push
in
inc
and
arpl
mov
test
movsb
xor
push
lock
arpl
idivl
sbb
les
inc
repnz
jne
inc
sysret
push
pop
push
sbb
add
sbb
iret
out
xor
fidivl
or
xor
mov
jge
cmpsl
sub
lret
mov
and
fcomps
orb
shll
call
push
pop
pop
stos
pop
test
addr16
cli
ret
push
sbb
movsb
inc
cld
loopne
xchg
pop
lock
add
and
push
pop
shl
add
sbb
push
pushf
roll
jp
adc
mov
add
mov
jp
jne
inc
test
cld
test
es
inc
in
mov
add
pop
rclb
in
xchg
push
push
jl
icebp
fsubs
in
pop
test
ds
dec
call
mov
mov
aaa
mov
daa
int3
and
jecxz
arpl
add
mov
adc
shll
fdivrl
hlt
pusha
dec
in
dec
xchg
push
inc
fldl
aas
insb
mov
jo
pop
mov
lds
cmp
repnz
inc
fsubl
pop
rorb
xor
xchg
add
fidivrs
push
hlt
pusha
jae
cmpb
pusha
or
jns
es
fs
sbb
inc
loopne
cmpsl
push
mov
cld
aam
mov
sbb
je
sbb
inc
cmp
inc
mov
sti
mov
ds
cmp
cltd
data16
xor
nop
mov
stos
sbb
test
sbb
scas
or
fiadds
push
in
xchg
or
jnp
adc
and
sahf
push
cltd
and
mov
jl
shlb
pop
pop
sbb
scas
jmp
lock
xchg
mov
adc
lret
xchg
mov
mov
daa
add
fsub
ret
jle
jle
iret
repnz
mov
and
cld
mov
jno
push
mov
cs
out
mov
cmp
inc
adc
sti
enter
inc
xchg
imul
inc
pop
xor
lret
adc
jb
in
subb
or
fimuls
clc
mov
mov
cmpsb
sar
cli
adc
rcrb
dec
mov
lock
cmp
loop
test
jecxz
call
xorb
sub
mov
loope
inc
flds
add
leave
leave
xchg
pusha
sub
and
mov
xchg
scas
xchg
cmp
push
and
mov
jle
rcrb
clc
pop
mov
ret
lea
arpl
mov
push
push
loop
push
gs
xor
push
imul
mov
ljmp
out
and
jnp
xor
push
push
inc
xlat
mov
push
cwtl
stos
inc
sbb
pusha
jns
jge
fcomi
fdecstp
add
out
jge
or
mov
pop
xchg
nop
lret
and
xchg
cmc
jmp
cmp
adc
movsl
sbb
cmp
bound
imul
lds
test
mov
inc
xchg
jno
pop
push
xchg
pop
clc
ss
scas
or
mov
stc
jno
jl
and
mov
xchg
push
call
mov
cmpsb
dec
push
inc
pusha
ret
push
fnstenv
and
test
mov
push
pop
push
push
clc
adc
subb
adc
int3
push
iret
adc
pop
lret
sti
mov
pop
pop
add
enter
mov
fcmovnbe
movsb
inc
push
inc
arpl
xchg
and
sbb
push
mov
pop
mov
int
cld
js
push
call
rclb
ljmp
or
cmp
movsl
xchg
push
subps
push
or
into
inc
pusha
in
std
clc
lds
hlt
pop
dec
scas
out
js
notl
leave
push
outsl
dec
cwtl
cli
jb
fisubl
and
nop
js
out
mov
pop
in
push
movsb
scas
mov
and
rorl
test
sbb
lret
stc
sub
fs
dec
push
and
aam
pop
mov
sub
insl
cvttps2pi
movsl
jmp
ljmp
xchg
push
mov
inc
or
ret
fmulp
and
js
enter
pop
cmp
icebp
pusha
xor
push
push
jmp
mov
scas
daa
test
push
mov
mov
xchg
mov
lods
js
inc
mov
dec
call
negb
push
int3
mov
mov
add
mov
sub
fs
pop
or
mov
in
je
stos
mov
xchg
sub
and
out
test
mov
movsb
icebp
xor
gs
mov
mov
sbb
scas
adc
sbb
in
pop
adc
inc
fildll
inc
jno
lret
call
fadds
xor
add
out
insb
mov
packuswb
addr16
ret
mov
inc
shrb
cmp
scas
dec
ljmp
fdivs
and
jbe
in
mov
rorb
push
mov
in
xchg
roll
mov
ret
xchg
dec
arpl
aaa
push
jl
mov
add
cmp
jno
lret
mov
pop
fdiv
cmp
push
in
sub
pop
out
or
das
lret
dec
push
sbb
imul
fisubrl
adc
bound
mov
cmp
sbb
pusha
push
mov
in
xchg
add
sbb
xchg
xor
cmp
xor
jno
aaa
or
das
mov
jecxz
push
mov
lcall
clc
dec
mov
fidivs
pop
fistps
jle
push
std
mov
sub
jbe
out
cmp
jb
in
cmp
lods
aad
iret
aam
mov
and
xor
mov
mov
insb
hlt
xchg
pop
jno
rcl
xor
in
mov
ds
inc
aaa
sbb
stos
mov
mov
jp
xchg
out
aam
orl
decb
mov
out
push
ret
mov
mov
scas
jl
enter
sar
or
xchg
mov
es
mov
mov
jnp
out
jns
push
fcoms
push
dec
push
std
arpl
or
fnsave
xchg
stos
push
xor
pop
ljmp
add
fldcw
pop
mov
or
int
fwait
jno
mov
popa
jae
aam
aam
xchg
push
stos
push
mov
insl
pop
push
shl
fwait
aad
mov
push
pop
lea
das
aas
fisubrl
cs
ljmp
jo
adc
movsb
ja
ret
rcll
js
dec
bound
cmp
cmc
ss
push
adc
dec
das
sub
lcall
push
xchg
gs
les
or
dec
mov
or
cmp
gs
push
mov
or
fdivs
inc
xchg
int
fisubl
push
jne
cli
fwait
mov
xchg
mov
cli
sub
jecxz
xchg
xchg
pushl
cmpsl
adc
xchg
mov
dec
push
cs
sahf
jbe
lret
inc
aam
cmp
mov
push
je
bound
push
xor
xor
adc
pushf
cmpsl
clc
xor
icebp
or
jecxz
cmpsb
pop
roll
aad
lahf
xor
hlt
gs
sysenter
and
cmp
jnp
inc
les
fnclex
aas
mov
jb
std
or
add
mov
mov
push
xor
push
add
loope
mov
add
add
add
orl
adc
loopne
ds
pop
lret
fimull
xchg
stos
sub
popf
scas
jp
jp
cmp
adc
inc
in
and
subb
sub
jp
sbb
cld
jmp
loop
sub
push
push
movsl
add
or
xchg
call
cmp
or
pop
xchg
icebp
jno
bound
jb
iret
rolb
and
cmpb
xlat
add
insb
mov
sarw
int3
out
enter
leave
sbb
int3
adc
sbb
in
xchg
mov
jg
ds
das
mov
sub
inc
mov
loop
jp
or
cmp
xchg
loopne
mov
xchg
cmp
in
aad
mov
push
insb
lret
test
fsubrs
push
popa
xor
fdiv
jb
js
test
lods
jle
xor
stc
in
jne
js
lcall
fwait
aam
push
js
nop
jle
inc
shl
push
andl
int3
or
and
add
mov
pop
loope
fimuls
jne
mov
mov
inc
mov
cld
inc
pusha
push
fiadds
adcb
into
mov
ds
aas
outsb
sbb
or
jo
pop
fdivl
mov
dec
aas
in
lock
packssdw
push
or
ss
mov
mov
cwtl
in
or
and
mov
sbbb
mov
jae
push
adcb
daa
fcom
loop
aas
jecxz
mov
loope
and
mov
or
mov
adc
lret
cli
movsb
lret
mov
pusha
lds
xor
loop
or
fisubrl
add
push
add
jne
xchg
cmp
out
mov
sub
xor
divb
mov
add
sub
adc
inc
adc
cmc
cmpsl
pushf
imul
test
outsl
adcb
add
mov
adc
inc
hlt
popa
push
add
ljmp
scas
lods
push
int
pop
loopne
scas
arpl
je
mov
jecxz
lea
dec
cmp
outsl
andb
aaa
mov
xchg
enter
pop
and
xor
xor
fs
pop
bound
data16
cmpl
push
and
dec
test
pop
push
pop
mov
lds
lea
push
and
jnp
fs
or
add
pop
inc
adc
pop
inc
stos
js
addr16
mov
inc
or
cmpsl
stos
jge
enter
xor
daa
lahf
jmp
dec
in
adc
pop
mov
cwtl
aam
mov
scas
js
cmp
add
mov
mov
aad
sti
call
push
out
sub
in
fwait
stos
call
mov
cli
cmpsl
ljmp
bound
mov
mov
icebp
bound
jbe
rol
mov
sbb
test
add
insl
pop
mov
mov
xor
lcall
data16
mov
jo
cli
fadds
xchg
mov
inc
popl
push
xor
mov
inc
sub
pop
mov
orb
cld
xlat
es
pusha
adc
into
xchg
idiv
pop
add
arpl
push
loopne
sbb
pusha
mov
insl
inc
rorl
jb
pop
addl
orl
jno
pop
cmp
repz
inc
pop
cmp
adc
or
and
nop
add
loop
lods
pusha
push
repz
dec
mov
jae
lds
dec
push
repz
outsb
mov
fnsave
andl
mulb
mov
popa
pop
mov
test
cli
dec
xor
insl
jb
or
xchg
or
rorl
add
xorb
out
mov
xor
popf
outsl
inc
mov
mov
push
mov
and
mov
cmp
adc
fidivrs
and
gs
cmp
into
mov
inc
das
push
int3
clc
pop
pop
sub
neg
push
lock
movsl
ds
sub
ljmp
push
push
pushl
scas
and
out
adc
sbb
sbb
add
out
xor
xor
out
mov
mov
fidivl
add
add
add
enter
pop
or
sbb
mov
mov
jg
cmp
std
es
test
out
push
shll
lea
pusha
jg
push
cmp
and
or
clc
inc
shlb
jle
xchg
jmp
ret
xchg
mov
testb
pushf
xchg
mov
in
test
std
sbb
call
add
or
andl
pusha
jnp
adc
jno
push
je
adc
repnz
in
adc
xorl
test
notl
ror
mov
ficoms
or
scas
neg
lods
imul
fs
fiaddl
cmp
xor
xchg
pop
ds
add
add
pop
ret
fs
rcrb
mov
lahf
sbb
rolb
shlb
xor
sub
test
adc
jo
repz
inc
jb
adc
jmp
rcrl
or
sub
mov
mov
ficompl
mov
test
rolb
adc
and
rorl
js
push
inc
scas
movsb
adc
inc
filds
sbb
dec
out
movsb
or
push
outsl
loope
add
push
mov
jg
mov
sub
popa
inc
push
inc
lods
push
dec
loope
lret
mov
insb
test
bound
je
out
js
ljmp
in
pop
and
mov
or
add
jg
jle
xchg
push
mov
lahf
pop
cld
or
and
add
mov
rolb
stos
pop
jp
rcrl
xchg
loopne
scas
mov
and
sub
mov
jg
pop
sbb
dec
xor
dec
sub
xorps
sbb
push
pushf
hlt
icebp
xchg
mov
insb
cmp
xor
mov
shlb
cmpsb
mov
scas
into
stos
les
push
pushf
lcall
nop
sahf
add
pop
adc
test
mov
lea
mov
xor
aam
shlb
ret
es
jle
rolb
xor
insb
xor
xor
jl
adc
lds
and
mov
cmc
jo
mov
andb
loop
xor
inc
cmp
clc
adc
adc
call
cmpl
ret
fldt
add
movsb
sti
inc
cwtl
and
fcomps
sti
dec
lret
jbe
or
mov
bound
js
jg
out
or
jb
mov
rclb
push
aas
andl
or
in
mov
sbb
or
pusha
mov
subl
xchg
xchg
xorb
push
fstpt
push
mov
rorb
xor
mov
lods
push
scas
aad
xchg
mov
ficoms
sbb
shll
dec
jge
jb
add
popf
mov
pop
add
push
lods
and
lds
loopne
mov
mov
pop
into
rcll
ljmp
movsb
mov
movsl
and
jne
cmp
hlt
stos
inc
and
cs
out
mov
fiaddl
mov
dec
mov
mov
add
loope
and
jo,pt
aad
pop
test
xor
insl
jp
jmp
push
ljmp
mov
pusha
inc
cmp
fldenv
loope
xchg
stos
pop
mov
cwtl
clc
ret
jmp
rclb
in
stc
je
push
lods
add
sbb
or
ja
hlt
bound
lret
jb
mov
insb
inc
daa
jmp
mov
inc
test
out
sub
loope
loopne
clc
hlt
sub
rolb
repz
jle
clc
mov
cmc
movsl
jno
sahf
addr16
jl
add
outsb
scas
cs
cmp
mov
add
adc
call
or
dec
xchg
mov
adc
inc
call
sub
mov
push
jbe
pop
mov
mov
mov
orb
cld
scas
xchg
xchg
push
jnp
pop
add
lds
jbe
nop
mov
mov
adc
cmc
xchg
mov
pop
nop
jb
lahf
lcall
movsb
sbb
int3
jp
and
loope
mov
mov
je
cld
push
mov
int3
push
add
ss
lds
jbe
test
out
fbld
fldenv
push
push
push
or
mov
call
push
insb
loop
cli
jp
clc
jecxz
jmp
mov
adc
dec
ret
inc
jbe
adc
inc
cmp
imul
and
mov
jecxz
and
sbb
mov
inc
cmpsb
ret
cmp
mov
cmp
test
mov
push
mov
push
jnp
jg
ja
cld
js
adc
andl
push
lods
dec
arpl
cmp
clc
jp
inc
xchg
mov
lods
sbb
or
and
mov
push
testb
push
pandn
cs
adc
pushf
lret
xor
or
pusha
push
lds
cld
pop
hlt
pop
add
cmp
jp
imul
lds
faddl
and
in
loopne
and
dec
sub
sbbb
loop
xchg
shr
and
sahf
rorb
loopne
mov
push
sbbl
stos
addr16
dec
push
dec
dec
push
pop
jge
lods
xchg
cmp
xchg
dec
ja
or
and
cmp
dec
lcall
out
mov
out
cld
add
rol
sub
cmp
pusha
cld
test
push
jge
int
or
nop
jmp
imul
inc
ret
and
out
fucomi
pop
jbe
jge
jmp
sub
stos
mov
lea
fmuls
inc
cli
mov
je
push
sub
mov
nop
mov
xchg
mov
mov
xor
add
pusha
stos
sub
mov
sbb
mov
in
ret
je
fwait
popa
or
shll
mov
pop
jb
xor
pop
hlt
fucomi
mov
jb
and
inc
mov
shlb
jge
lock
subl
rclb
bound
add
jle
sbb
mov
adc
jnp
mov
addb
sbb
fisubs
andl
pop
add
push
inc
ret
cmc
or
push
push
adc
ficoms
sbb
cli
adc
cmpsl
idivb
or
loop
pop
sbb
sub
dec
outsb
jno
loop
mov
repz
in
imul
and
mov
test
jo
lock
fbstp
cmp
out
cmp
dec
nop
lock
and
inc
sub
sbb
push
lods
je
xchg
push
mov
adc
lds
inc
cmp
dec
mov
mov
add
add
xor
mov
or
mov
adc
mov
les
mov
dec
out
pop
ret
and
pusha
xchg
das
or
push
testb
pop
int3
pop
hlt
push
imul
add
divl
mov
pushf
movsb
clc
test
add
and
movsl
icebp
in
repnz
hlt
fistps
xlat
in
stos
ret
mov
mov
mov
call
dec
xchg
movsb
fincstp
add
stos
faddl
mov
push
push
and
dec
add
mov
imul
call
js
jbe
clc
or
mov
stos
mov
sub
mov
aad
popf
test
outsl
leave
adc
jbe
clc
pop
inc
mov
add
ds
idivb
into
fwait
mov
mov
mov
out
ljmp
ljmp
mov
fwait
pop
cmpsl
gs
call
rcr
pop
inc
imul
inc
rolb
pop
lea
dec
int
shll
or
loop
or
cmp
jecxz
jnp
or
lcall
hlt
sub
jne
push
ds
xchg
pop
adcb
add
or
mov
jg
mov
adc
cmc
push
test
lcall
mov
push
orb
push
mov
orb
pusha
movsl
mov
jecxz
in
mov
jns
jbe
and
push
push
das
fwait
lcall
push
and
adc
mov
or
mov
stc
mov
push
hlt
sbb
xchg
lahf
mov
rcr
xchg
pop
dec
or
cmp
mov
add
jle
scas
pop
adc
and
xor
sub
std
push
clc
fidivrl
pusha
xchg
mov
mov
dec
or
mov
in
mov
repz
xor
pop
or
mov
dec
into
js
rorl
add
lods
push
push
loop
and
jb
jo
jg
test
inc
idivl
lods
xor
push
inc
loop
rclb
xchg
daa
push
fsubs
xor
push
dec
add
xchg
test
leave
mov
or
stos
lcall
jbe
test
or
cltd
imull
xor
and
mov
jbe
imul
jo
xor
loopne
cmp
test
mov
ljmp
push
add
bound
inc
or
fbld
adc
mov
inc
mov
cld
pop
or
push
pop
rorb
inc
lcall
in
push
xchg
xchg
xchg
rclb
movsb
mov
xchg
jle
cmp
scas
cmc
inc
adc
and
push
and
jns
ret
ss
pop
push
enter
fs
cmpsl
mov
lret
aam
or
hlt
jecxz
repnz
dec
adc
sbb
shlb
jmp
paddsw
les
cmp
sbb
add
push
dec
or
test
push
xor
or
or
sbb
xchg
or
loope
cwtl
sbb
pop
dec
dec
lods
adc
xchg
in
ss
cmp
mov
testb
pop
jecxz
js
xchg
leave
leave
inc
loop
cmc
jp
xchg
test
inc
xchg
and
clc
cmp
shlb
adc
pop
jne
xchg
xor
mov
mov
inc
shrl
mov
jno
push
and
and
test
dec
add
cmp
jae
sbb
sub
add
dec
xor
in
fwait
mov
inc
insb
push
jo
lock
pop
and
xchg
add
adc
bnd
sti
or
lea
mov
sbb
mov
lods
inc
add
mov
jp
rclb
and
test
adc
add
jo
movsl
jne
je
subl
ds
mov
out
in
into
into
push
adc
dec
add
in
mov
adc
inc
inc
pushf
cmp
sbb
xchg
je
fldcw
gs
sub
xor
ljmp
aaa
push
push
mov
cltd
pushf
adc
pop
bound
shlb
jecxz
test
popa
add
cli
aad
lahf
xchg
adc
dec
mov
jg
or
push
std
dec
mov
cli
pusha
loopne
mov
cld
add
fsts
ret
push
popa
mov
fwait
lret
push
mov
std
ljmp
mov
xor
cmc
insb
loopne
pop
pusha
inc
push
aas
jmp
mov
push
sarl
movsb
dec
mov
in
cmc
pop
cmc
jg
push
addr16
sub
roll
or
add
sub
test
dec
test
insl
cmpsl
sub
add
jns
fadd
lea
or
lahf
cli
pop
adc
imul
pusha
add
stos
mov
xorb
mov
out
push
jmp
mov
adc
sub
leave
shll
js
sar
jo
fwait
add
int3
enter
and
rcll
mov
lahf
push
sbb
loop
cmp
sub
hlt
push
jle
mov
xchg
and
pop
pop
cmp
adc
xor
addl
ret
insb
sbbl
mov
adc
shll
es
mov
es
xchg
cmp
mov
dec
jae
fucom
in
hlt
insb
ljmp
arpl
ljmp
jecxz
fistpl
inc
cmpb
adcl
push
push
popa
icebp
adc
fisubs
aam
mov
push
ret
adc
shlb
cmp
inc
xchg
xor
jbe
xor
or
adc
jne
pop
xor
mov
xor
sahf
cld
lcall
aaa
mov
pop
mov
sbb
inc
cmp
sbb
push
aam
or
pop
les
add
clc
jae
cmpsl
cs
pop
inc
repnz
mov
inc
fisubrs
dec
insl
push
sub
inc
in
jmp
jo
dec
test
or
cmpsb
inc
ljmp
push
mov
adc
pop
ss
lock
jae
stos
sub
mov
mov
insb
add
add
fninit
jne
xchg
pushw
lcall
pop
mov
in
notl
lods
cmp
mov
es
cs
adc
xor
add
ds
bound
or
in
les
mov
sarb
inc
nop
ljmp
pop
cmp
sbb
flds
clc
bnd
adc
mov
and
aas
mov
hlt
nop
rcrl
les
sbb
je
out
ds
or
dec
loopne
pop
sahf
shrb
add
cmc
push
mov
lcall
lods
xsaves
xchg
and
jbe
stc
jb
fnstcw
xchg
fimuls
push
or
in
jo
push
lcall
pop
pop
push
insb
jno
lcall
push
jo
mov
fidivrl
xchg
jbe
scas
stc
xchg
popf
inc
loopne
xor
movsl
and
imul
ja
xor
je
cs
scas
xchg
add
out
pop
movsl
sub
mov
push
addr16
fists
lret
xchg
mov
scas
mov
sbbb
pop
ret
mov
popf
sbb
mov
popa
pop
js
cmpl
jo
inc
insl
shrl
mov
dec
int
xchg
popa
repnz
loopne
rcr
cli
movsb
dec
add
call
push
fs
mov
insl
nop
notb
inc
dec
mov
and
xchg
jbe
cmp
xchg
cltd
mov
push
hlt
inc
jo
mov
push
rol
out
mov
jecxz
pop
adc
xor
leave
daa
callw
and
or
push
subl
xchg
fldcw
pop
dec
orb
cld
sbb
sbb
add
ret
ret
mov
sbb
movsl
mov
adc
sbb
and
call
push
dec
mov
cmp
cmpsb
mov
xor
insl
inc
daa
mov
mov
decl
sub
cld
xchg
enter
sbb
cmp
push
sub
pop
ss
push
addb
xchg
mov
inc
mov
mov
enter
loopne
and
repnz
dec
sahf
mov
and
ret
aas
mov
out
es
popa
lds
lods
add
mov
mov
jl
fwait
nop
les
popa
arpl
call
cmp
int
cltd
inc
mov
mov
inc
mov
test
subb
andl
outsb
add
cli
mov
loop
movsl
addb
lods
addr16
and
rcr
jl,pn
push
lock
mov
lods
mov
push
xchg
or
pop
dec
pusha
arpl
mov
cmp
mov
cs
cmpsb
sub
add
shr
imulb
fdivrl
xchg
mov
mov
adc
mov
and
lods
pop
fcomi
roll
pop
icebp
pop
repnz
repz
sahf
cltd
fmuls
int3
sbb
pop
adc
js
mov
lahf
pop
push
fsubrs
push
xchg
dec
fcoml
cmp
or
loop
imul
ss
mul
stos
mov
out
jmp
outsl
inc
pop
mov
ret
imul
add
outsb
dec
mov
daa
or
adc
into
outsl
sub
sub
push
push
rcll
adc
xor
fldenv
iret
push
mov
fs
push
cmp
xor
scas
cli
inc
push
nop
dec
mov
mov
enter
jle
push
fildll
out
push
xchg
into
add
addl
scas
xor
ret
cmp
rcrl
fstp
mov
dec
fwait
inc
mov
mov
popa
adc
inc
inc
push
fbstp
adc
movl
add
dec
loopne
jge
jbe
test
jb
push
rcl
dec
sub
mov
pusha
mov
jo
popf
nop
adc
data16
xchg
sbb
jp
stos
stos
push
mov
adc
movsb
inc
inc
int
insb
xor
loopew
cld
push
cmp
or
in
sub
mov
add
pop
int
mov
sub
std
test
inc
std
adc
push
inc
add
ljmp
jp
jb
push
mov
daa
in
cmc
cs
mov
int
jnp
cmp
adc
and
subb
lahf
andb
fidivs
les
dec
jle
into
outsb
adc
jl
fwait
xchg
lods
cld
ret
bound
movsb
lods
cltd
and
test
pop
aam
jp
or
jecxz
mov
es
add
lret
daa
xor
test
inc
movsl
jmp
jg
push
icebp
or
adc
jmp
add
test
add
adc
test
les
sarb
call
into
lock
xchg
repnz
in
test
nop
sub
xchg
stos
dec
pop
xchg
cmpsl
and
dec
idivb
ret
mov
inc
imul
lods
cmpsl
stos
push
adc
pusha
mov
and
xlat
fimull
pop
sahf
mov
sahf
js
adc
jg
dec
sbb
or
mov
call
mov
push
push
mov
test
sub
lock
add
pusha
push
loopne
getsec
iret
jp
mov
xchg
movsl
test
mov
sub
dec
mov
pushw
adc
xadd
popf
or
fidivrl
cmp
xchg
mov
sbb
je
fnstsw
int3
shl
iret
mov
in
xor
push
in
sub
jmp
stos
stc
dec
loop
sub
xchg
sbb
lahf
and
xor
jp
scas
mov
lret
adc
icebp
pop
add
jmp
aam
inc
sbb
idivb
fnstenv
fisubs
add
or
enter
push
jbe
in
fcmovbe
mov
mov
jge
pop
mov
inc
fimull
or
dec
jge
add
xchg
add
mov
cmp
subb
ret
test
daa
es
xchg
lock
test
xchg
xor
push
and
push
imulb
mov
loopne
push
data16
bswap
pop
pop
cmpsl
inc
jp
ret
push
xchg
jmp
dec
and
dec
push
push
xchg
rcrb
pcmpeqb
movsl
add
cmpsl
loopne
pop
dec
enter
mov
sbb
dec
movsb
sub
dec
sarb
icebp
in
pop
inc
cltd
rclb
outsl
sbb
jge
aad
dec
push
loop
xchg
sbb
rcll
test
mov
ss
dec
outsb
test
cmpsl
jbe
pop
into
hlt
int3
loopne
push
ficoms
mov
testb
lods
pop
test
pop
jns
loope
push
add
mov
cmp
xchg
inc
daa
ljmp
mov
mov
dec
hlt
outsb
push
xchg
inc
loopne
data16
mov
pop
dec
out
incb
test
adc
icebp
aas
pop
mov
xchg
xchg
hlt
lahf
mov
mov
push
fnsave
jmp
rolb
sub
cmpsb
je
lods
mov
js
mov
push
es
out
inc
add
nop
hlt
jmp
dec
sahf
fs
mov
xchg
mov
ret
call
shlb
add
ret
sub
insb
js
mov
daa
neg
mov
and
enter
pop
loopne
scas
push
bound
cmp
fsub
pop
dec
mov
insl
mov
xor
push
fwait
adc
adc
pop
adc
dec
fs
add
fwait
rorb
adc
cmp
cld
mov
arpl
leave
adc
cmp
cmp
loopne
andl
and
jnp
flds
into
lods
mov
xchg
jmp
aam
cmpsl
adcl
push
mov
xchg
mov
cmp
pop
push
inc
arpl
xchg
add
or
mov
mov
hlt
es
or
xchg
xor
xlat
add
aas
js
out
mov
and
sbb
cmp
mov
test
stc
sub
mov
js
adc
shll
xor
dec
cld
xor
jecxz
inc
xchg
stos
push
ljmp
das
mov
mov
fwait
mov
adc
cli
dec
stos
jae
leave
push
jecxz
loop
mov
dec
inc
mov
sbb
out
insl
loopne
pop
cs
ror
jns
aas
push
mov
scas
mov
enter
imul
adc
and
cmp
push
clc
mov
dec
xor
adc
xchg
fistpll
cmp
ljmp
jne
mov
and
jmp
push
inc
into
jge
adc
loope
ss
ret
sub
dec
inc
jb
insl
sbb
xchg
int3
sub
fdivrs
inc
xor
mov
into
fstl
dec
lock
dec
push
cmpsl
mov
in
fldenv
fwait
pop
jo
in
rcrb
push
xchg
pop
jnp
mov
xor
test
xchg
adc
mov
rcrl
or
sbb
aam
pop
mov
sub
push
adc
and
xchg
or
iret
push
movsb
ficompl
push
dec
pop
popf
mov
popf
push
imul
mov
add
and
jb
arpl
push
cmpl
xchg
mov
sbb
mov
mov
dec
mov
roll
inc
push
inc
jle
dec
mov
push
lret
shrb
xchg
and
dec
mov
mov
mov
rorb
pop
aas
pop
mov
push
js
fdivrs
cs
ja
jl
xor
lcall
xchg
je
nop
inc
adc
sar
jmp
mov
psrld
out
ss
pop
sbb
mov
jnp
into
test
loopne
roll
lret
js
sub
sbb
fwait
dec
mov
lock
outsl
dec
add
push
inc
fs
dec
xchg
sarl
or
add
adc
lods
fdivrs
xchg
sub
and
push
inc
test
fadd
xchg
stos
js
xchg
xor
jae
mov
pusha
shl
xchg
jbe
cmp
int
inc
jp
jne
or
repz
stc
mov
pop
inc
sub
dec
fs
pop
stos
int3
pop
mov
sub
xor
insb
push
xor
clc
mov
jle
dec
push
test
push
jo
sbb
pop
insb
mov
pop
ja
bound
hlt
movsl
sbbl
mov
jo
xchg
jmp
pop
fsubl
mov
or
adc
adc
pop
and
cmc
in
popf
sti
jo
adc
fisubl
test
adc
mov
imul
repz
inc
adc
mov
xor
cmp
or
mov
and
dec
and
cmp
insb
sbb
sbb
jl
add
and
add
cmp
inc
fsubr
inc
push
xlat
cld
repnz
jg
clc
mov
pop
add
cs
adc
and
adc
dec
add
sahf
adc
sub
and
push
mov
sub
push
into
imul
int3
call
ffree
mov
adc
loopne
lcall
add
sbb
mov
push
mov
in
push
push
pmulhuw
sbb
rolb
jl
jl
cmovno
inc
shll
jle
call
nop
jbe
rclb
sbb
pusha
and
mull
or
mov
and
sahf
nop
mov
outsl
aad
push
jnp
mov
mov
jb
pop
push
inc
lret
mov
xchg
dec
xchg
dec
mov
bound
test
adc
out
or
adc
jbe
faddl
and
adcl
popl
mov
cmp
imul
loope
adc
sti
dec
and
adc
mov
dec
mov
cmc
xor
push
das
aas
mov
inc
inc
sti
xchg
scas
push
jo
sub
jg
or
pusha
or
and
push
sbb
adc
or
mov
scas
push
ret
jnp
lock
or
adc
cwtl
fidivl
mov
cmpsl
mov
imull
je
mov
add
ds
push
pop
inc
inc
dec
inc
out
rolb
cld
inc
inc
sbb
shlb
jp
mov
dec
lcall
in
mov
and
inc
push
mov
mov
test
adc
ljmp
pusha
or
rol
lds
cmc
ljmp
inc
dec
fstps
add
xchg
push
cmp
ficompl
out
imul
clc
notl
sar
mov
xor
push
lcall
mov
adc
test
inc
lret
mov
mov
mov
xchg
dec
test
xor
lods
dec
cwtl
mov
lcall
jnp
xchg
lods
push
mov
fiadds
push
sti
adc
insb
js
pop
and
jg
pop
call
cmpsb
mov
or
xchg
mov
cmpsb
aad
dec
xchg
inc
dec
push
pop
mov
pop
jno
nop
mov
dec
scas
sahf
and
sbb
fidivl
es
nop
push
mov
lods
sbb
and
mov
adc
dec
jbe
hlt
xchg
mov
cltd
add
movsb
in
fstpt
mov
mov
mov
push
cmc
mov
lods
fdivrs
std
aam
cmovb
fwait
push
push
xchg
xor
and
xor
xor
cmpl
mull
movsl
adc
mov
les
add
cmp
cmp
fcom
repnz
xlat
shl
mov
incl
jp
pushf
jecxz
enter
clc
fstps
dec
js
imul
jo
mov
xor
sbbb
cmp
jnp
fdivr
push
inc
jno
mov
dec
ljmp
inc
lret
cld
jle
outsl
inc
outsl
inc
in
fadd
push
fs
nop
bound
sub
rclb
ret
insb
je
mov
outsb
sbbb
adc
cmc
sbb
jbe
mov
sub
and
jns
loope
addr16
jle
pop
push
inc
jno
and
or
scas
ss
sbb
inc
cmpsb
lods
ljmp
adc
jmp
pop
into
inc
call
jb
cld
pop
pushf
lea
lods
mov
mov
mov
xor
push
xchg
jmp
out
es
dec
sub
pop
jp
xlat
jl
sbb
push
orl
or
lock
mov
dec
adc
push
cmovb
pop
add
dec
sbb
push
fimull
fdivrs
and
adc
cmp
jno
mov
orl
out
sub
xchg
xlat
mov
cli
test
mov
push
imulb
push
xor
mov
or
jp
cmp
in
jae
cmp
pop
adc
mov
fiaddl
jne
cmc
or
mov
test
mov
inc
insl
mov
cmpl
inc
jp
cmp
add
push
or
add
hlt
aam
add
xchg
inc
push
dec
test
test
jne
xorl
sbb
push
test
and
inc
mov
test
mov
inc
daa
aas
or
aaa
cmpb
inc
dec
cltd
arpl
add
mov
jecxz
jnp
mov
jne
mov
outsl
adc
xchg
call
push
push
orl
lret
imul
xor
sbb
movsl
rclb
imul
in
subb
enter
mov
cmc
sahf
xorb
jnp
pop
inc
ds
scas
xor
int3
xor
mov
ret
mov
std
push
pop
push
push
sbb
sub
mov
loope
sub
adc
popf
cmp
imul
inc
std
push
or
ljmp
into
std
push
or
lods
push
add
push
adc
into
jg
mov
cmovb
adc
xor
xlat
add
call
clc
out
cmp
push
orl
rorl
fwait
lcall
push
cli
enter
or
inc
lea
and
enter
idivb
pusha
mov
movsl
xorl
std
les
adc
stos
xchg
fabs
and
inc
js
sub
push
push
mov
in
in
cmp
pop
xchg
movsb
dec
cltd
inc
pop
adc
out
jle
test
fists
adc
add
jg
xchg
popf
jo
loopne
lods
rolb
xor
js
inc
push
sub
pop
mov
orl
jle
xchg
cli
cli
push
arpl
into
adc
stc
cmp
fucomi
inc
or
xor
sbb
push
xchg
push
jae
scas
sarb
pop
cltd
xorb
adc
mov
or
test
jo
or
clc
and
ret
inc
dec
sub
test
pop
sub
inc
cli
pushf
mov
cmpsl
inc
push
xor
dec
mov
xor
xchg
clc
call
mov
push
jp
fiaddl
mov
ds
ds
dec
rol
or
sti
das
xchg
or
inc
and
sbb
add
add
repnz
cmp
mov
pusha
loope
in
fbld
jbe
cmp
sbb
ds
pop
cs
jecxz
mov
and
js
inc
icebp
ljmp
daa
cmp
ss
sbb
pop
pop
lods
xchg
lret
inc
stos
fs
push
sbb
popa
mov
lcall
mov
addl
arpl
mov
mov
rcpps
inc
jp
mov
popa
aam
xchg
mov
cmp
inc
cs
movsl
dec
lods
bound
ror
stos
shll
inc
mov
jno
mov
dec
pusha
sbb
add
push
adc
dec
pop
sarb
addb
push
push
pop
ljmp
inc
enter
icebp
jo
rorb
jo
in
lods
ljmp
repnz
pop
cmp
lock
push
adc
pop
inc
jnp
ss
fldenv
nop
mov
ret
mov
xor
xlat
nop
insl
jo
xchg
addb
and
loopne
inc
dec
insb
mov
jo
pop
sub
mov
sub
mov
cmp
xor
enter
cmp
lahf
cmp
inc
push
test
das
push
add
inc
cmpsl
aaa
and
add
push
cltd
ljmp
hlt
lea
rclb
mov
push
push
xlat
out
rcl
add
push
insb
add
aam
push
cmc
cwtl
andl
cld
jle
pop
push
mov
hlt
fs
dec
call
mov
ret
pop
adc
adc
jbe
xchg
dec
xor
frstor
push
inc
push
test
insb
cmpsb
shl
or
test
dec
dec
mov
lcall
pop
fists
outsl
pop
addr16
adc
stos
xchg
jp
iret
popf
outsb
jb
lock
or
call
das
nop
bound
mov
pop
push
cld
jg
cmp
inc
cs
aas
dec
js
popa
lods
fcoml
mov
rolb
sbb
fdivs
push
mov
outsl
mov
ds
inc
outsl
inc
aam
add
sub
daa
clc
lahf
push
pusha
addr16
jge
cmp
test
mov
popf
inc
sahf
dec
adc
xor
inc
jb
push
push
and
adc
dec
and
and
lock
sub
or
aam
pop
push
jp
or
mov
fiadds
jle
in
jmp
mov
mov
lret
rcll
movntq
loope
sbbb
pop
loop
dec
xchg
out
xchg
lret
fwait
test
jns
inc
xchg
std
lock
test
ret
ret
jge
push
mov
add
push
and
add
shll
xor
jg
push
ret
out
pop
fs
repnz
push
inc
loopne,pt
sbb
ja
mov
mov
sub
cmp
sub
sbb
test
xchg
sti
mov
sbb
movsl
les
inc
inc
jnp
mov
jge
adc
pop
lods
pop
loopne
rol
insb
sahf
cmc
sbb
jo
movsb
or
mov
scas
push
dec
fdiv
test
mov
sub
mov
lea
xor
dec
in
sbb
sbb
out
adc
jne
pop
push
sahf
rcrb
sbb
cmp
add
dec
pop
ljmp
xchg
jbe
rcrb
and
and
je
add
lock
test
lock
jmp
add
jae
jp
jge
lahf
cmc
mov
mov
and
hlt
inc
mov
fisttps
adc
jmp
lock
mov
jp
jno
pop
ds
fwait
outsb
inc
adc
sub
add
jnp
or
xor
icebp
xor
scas
and
jno
les
and
je
inc
pushf
nop
icebp
ret
pop
cld
inc
xchg
add
cmpsb
ja
lods
shll
cmp
outsb
loopne
mov
sbb
arpl
cmc
adc
pop
sub
add
adc
insb
pop
dec
xlat
mov
add
jle
lcall
cmp
bound
mov
dec
rcrl
div
push
mov
add
xchg
hlt
dec
data16
cmp
mov
adc
jge
daa
sbb
pop
xchg
cwtl
add
sub
push
push
shlb
call
mov
inc
sbb
push
xchg
movsb
cs
lds
bound
mov
jg
jl
mov
mov
mov
fwait
mov
dec
negb
mov
insl
mov
cmovg
mov
fisubrs
sti
outsl
sti
pop
shrd
in
out
mov
shl
cltd
xor
jae
lods
clc
jmp
daa
push
cmp
out
inc
dec
mov
sub
inc
dec
cltd
lds
inc
jmp
xchg
xor
mul
fwait
sbb
jno
enter
mov
test
lcall
test
gs
arpl
aad
adc
gs
shr
test
pop
dec
cmp
jg
ret
hlt
dec
lods
ret
xchg
incb
add
mulb
add
mov
sbb
mov
dec
and
mov
addb
fs
xchg
xlat
adcl
data16
mov
xor
cmp
mov
cmpl
or
cmp
clc
sub
hlt
das
push
aas
xchg
ret
in
dec
or
imul
xor
insb
adc
or
stos
dec
nop
lret
xchg
cltd
or
push
cmp
mov
fadd
sahf
dec
xor
ljmp
xchg
push
lods
mov
sar
ret
xchg
enter
loopne
jmp
push
hlt
scas
mov
push
jo
pop
sub
mov
es
adc
roll
jo
adc
pop
jl
sbb
jbe
mov
xchg
movsb
cmpl
dec
insl
cwtl
sub
shr
xor
xor
dec
inc
test
orl
sarb
inc
pop
scas
add
vmread
repnz
add
xchg
out
inc
movsl
mov
int
add
or
into
fdivs
mov
and
cwtl
in
test
mov
aaa
repz
cld
mov
out
lcall
adc
hlt
sbb
inc
movsl
fwait
shrb
sar
cmp
les
or
ret
int
add
pop
sub
pcmpgtd
adc
mov
call
mov
cmp
sti
sub
pop
or
lods
add
adc
push
sbb
mov
pop
sbb
mov
inc
cmp
sar
incl
xor
mov
sub
sub
ret
and
rcrl
movsb
and
mov
mov
shrb
fisttps
fnstenv
sbb
cld
and
in
pop
fnstsw
sub
or
lock
in
push
adc
xchg
in
loopne
call
push
pop
aam
sbbb
insb
mov
xor
fs
out
or
dec
mov
mov
lret
inc
inc
sbb
je
mov
insb
rcl
mov
push
stos
pop
cs
adc
or
std
pop
ss
mov
push
bnd
leave
adc
and
mov
sti
pop
imulb
and
pop
or
sub
ja
fs
lock
cmp
cmp
xor
xorb
ret
xchg
xor
jl
incb
pop
rcll
dec
dec
fisttps
jae
jge
ja
jl
idivb
lods
xor
sub
clc
cmp
addr16
mov
jnp
or
sub
dec
aad
mov
out
push
clc
outsl
add
mov
pop
and
hlt
jle
mov
jne
icebp
mov
fs
lea
stos
cld
sbb
xchg
pop
lahf
fs
test
cmc
rol
inc
loopne
mov
pop
lods
push
mov
mov
bound
dec
add
hlt
pop
sub
sub
adc
insl
shl
and
pop
lcall
loop
inc
movsl
imul
push
mov
mov
push
adc
push
sbb
mov
inc
mov
add
cmp
mov
fcomps
sub
and
xchg
inc
cltd
dec
or
rcrb
mov
pop
jp
rorl
xchg
or
push
icebp
dec
push
int
add
sub
psrld
movsl
cld
xorl
or
xor
ja
xor
inc
out
xchg
popf
faddl
mov
lcall
pop
dec
adc
sub
ss
adc
inc
cwtl
inc
es
xchg
or
pop
adc
jae
popf
lock
call
jno
lds
jl
rolb
fiaddl
sti
jecxz
add
sbb
enter
adc
mov
xor
negl
mov
push
xor
andb
cs
or
and
sub
adc
dec
dec
jmp
out
out
inc
cmp
pop
jo
dec
mulb
insb
pusha
idivl
push
and
and
hlt
push
or
je
mov
inc
fwait
mov
pop
cmp
xchg
adc
mov
in
cmp
movntq
out
test
dec
mov
sbb
cmp
and
xor
add
js
pop
mov
and
mov
inc
pop
ds
shl
jne
aad
mov
out
or
inc
jmp
nop
fidivrs
or
cld
push
cmp
or
js
sbb
aam
out
or
push
imul
loop
inc
in
xchg
adc
jecxz
sbb
out
push
or
pop
test
mul
adc
pop
mov
loopne
add
ds
cwtl
hlt
add
mov
and
fmul
mov
sub
xchg
aad
jns
push
inc
jge
adc
adc
ljmp
jge
add
int3
sub
push
push
mov
pop
loopne
inc
push
mov
adc
outsl
hlt
mov
aam
sbb
hlt
in
pop
adc
mov
sti
xchg
out
jecxz
mov
sub
inc
loop
dec
jno
ret
or
mov
movsl
fisubrl
hlt
iret
add
into
and
enter
push
das
repnz
mov
push
test
imul
mov
cwtl
ds
lock
dec
add
lcall
xchg
add
push
and
in
cld
pop
cmpl
daa
add
orl
test
dec
test
xlat
xor
imul
cli
daa
push
inc
mov
cmp
mov
cmp
movsl
hlt
fwait
mov
repz
xor
mov
adcl
orb
orl
notl
mov
sub
cmp
scas
fwait
or
mov
mov
jmp
xor
mov
cwtl
adc
push
sub
inc
fiaddl
pop
or
shll
nop
mov
loop
dec
or
sub
out
pop
ds
jl
in
scas
decl
sbb
push
sbb
pop
push
mov
mulb
pop
push
sti
push
pusha
clc
xchg
adc
cmp
hlt
push
sar
sarb
mov
mov
lds
and
xchg
mov
sahf
fwait
movsl
dec
jl
push
test
call
sbb
mov
sub
rorb
divl
sbb
orb
in
lods
mov
rcl
sub
dec
adc
push
add
jl
out
loopne
dec
xor
and
ss
pop
sbb
inc
adc
jno
scas
push
es
pop
test
cmp
or
cmp
mov
test
cmp
adc
test
xor
ss
clc
stos
call
out
inc
sbb
pop
out
pop
sub
push
lea
xor
jg
mov
rcl
inc
test
movsb
mov
movsb
int3
jle
mov
mov
call
inc
popf
mov
dec
loopne
lds
xchg
stos
arpl
and
lds
dec
je
popf
testl
fwait
sbb
add
insl
push
rcll
les
add
aas
les
mov
inc
dec
enter
out
cld
addr16
inc
adc
xchg
mov
ljmp
jecxz
mov
push
mov
and
pop
adc
sbb
push
imul
fcmovnu
orl
jbe
mov
sub
cmp
imulb
add
fists
in
and
mov
dec
shll
and
rolb
mov
xchg
ret
mov
jecxz
stos
dec
add
jecxz
cltd
das
mov
pop
data16
xchg
out
stc
shll
mov
sub
pop
pop
mov
shlb
enter
sub
daa
iret
daa
xor
xchg
or
jp
rcll
ret
int
add
stc
imul
cwtl
push
inc
add
mov
xchg
inc
daa
jns
cmp
or
mov
sub
std
sbb
jl
jp
pop
psraw
testb
dec
ljmp
pop
lea
stos
test
call
enter
xorb
dec
mov
in
xor
mov
push
adc
movb
or
and
push
je
daa
mov
cs
xor
dec
mov
mov
inc
mov
or
daa
outsl
dec
popf
pop
lods
hlt
shlb
cltd
xor
pop
stos
daa
sbb
mov
pop
sbb
push
xchg
and
cmp
in
pushf
out
out
test
adc
pop
lock
cmpsl
pop
subb
int3
lock
dec
inc
mov
mov
sub
or
in
ror
idivb
dec
cmpsb
inc
adc
out
or
push
push
shll
dec
adc
shlb
fisubl
push
sbb
psubusb
ss
xchg
out
push
xchg
loopne
mov
fidivrl
out
inc
lods
daa
ficomps
call
test
test
fcomip
ds
push
enter
xor
ds
scas
movsb
mov
arpl
cmp
std
pop
das
mov
lods
push
xchg
and
push
pop
or
push
xchg
imul
in
push
mov
decb
sub
dec
push
aas
cmpsb
aam
mov
mov
cli
insb
fstpl
push
cmp
insl
push
insb
bound
pop
decl
adc
scas
xor
orb
sar
test
cmp
pushf
cmp
ret
mov
mov
adc
test
adc
testl
stc
mov
fwait
xor
loope
js
add
rcrl
jecxz
mov
jae
shll
sbb
xchg
sbb
ret
dec
mul
add
adc
inc
jg
shrl
enter
sub
aad
adc
cmp
roll
sbb
xor
cmp
sahf
xchg
gs
int3
mov
movsb
push
ja
fs
adc
add
xor
sbb
call
xchg
xor
or
enter
sub
and
cmpsb
dec
aam
push
imul
add
sbb
mov
aaa
scas
xchg
mov
or
xchg
into
ds
sbb
scas
dec
jge
jbe
and
mov
mov
xor
ss
push
cmp
pop
jp
dec
fbld
mov
popa
cmc
shr
addr16
ljmp
sub
push
call
pop
adc
nop
mov
and
jmp
dec
mov
inc
repz
mov
sub
jbe
cld
inc
xchg
pop
imul
in
mov
add
in
sub
push
popa
xchg
test
xchg
out
dec
or
cmp
mov
push
pop
js,pn
inc
adc
pop
jae
es
pop
lcall
dec
hlt
and
sbb
sbb
fs
mov
mov
not
je
rep
push
loopne
sbb
fcomps
or
int3
or
cmp
cli
lea
dec
jl
mov
or
test
lahf
clc
jp
xor
adc
mull
xchg
pop
xor
inc
add
aam
loop
xlat
mov
ret
add
outsl
mov
mov
xor
into
ds
add
or
insb
mov
adc
push
pop
cmp
and
in
xchg
add
jmp
rolb
test
jle
clc
popf
dec
inc
push
clc
hlt
stos
xchg
push
mov
pop
and
arpl
punpckhqdq
push
icebp
sub
ss
ficomps
dec
rcrb
inc
stos
xchg
into
xorb
stos
aas
dec
mov
pop
dec
pop
mov
sbb
xchg
rcll
mov
incl
xchg
jecxz
outsb
mov
pop
adc
inc
mov
aaa
jno
adc
pop
sbb
call
test
scas
dec
fiaddl
inc
dec
in
sub
cli
mov
cmp
mov
cltd
cmp
outsl
pop
shrb
jno
jbe
pop
je
xchg
adc
cmp
scas
clc
mov
out
sub
daa
mov
pop
inc
xor
scas
pusha
addr16
andl
xchg
mov
cmc
jnp
leave
nop
inc
les
addr16
inc
repnz
sub
pushf
into
dec
cmp
mov
cs
pop
jnp
and
adc
mov
cmp
mov
dec
loopne
pop
repnz
sbb
dec
adc
popl
adc
lods
mov
pop
jecxz
iret
jns
lods
cmp
jg
push
jge
jne
inc
push
jns
push
add
mov
aaa
dec
pop
popa
movd
cmp
cmp
add
sbb
push
push
lahf
je
adc
subb
outsb
movsl
jge
dec
dec
and
pop
clc
out
rcrb
jl
sbbl
fs
inc
jecxz
lcall
cmp
fldl
pop
mov
ds
push
xchg
pop
add
adc
xchg
dec
pop
cmp
push
fists
jnp
sbb
pop
and
cmpsb
xor
enter
mov
sbb
ret
cltd
pushf
cmc
bound
test
xor
inc
mov
sub
and
lods
sub
xchg
dec
add
fidivrl
jmp
xchg
stos
iret
fdivrs
jo
xchg
cld
outsl
loop,pt
popf
clc
sbb
jecxz
or
clc
mov
pop
das
shll
push
nop
hlt
inc
inc
mov
xor
or
lahf
mov
mov
dec
mov
sbb
std
ss
rol
movsl
test
inc
sub
jmp
xor
sbb
test
sub
pop
jg
aad
jge
and
repz
sbb
mov
mov
sarl
sbb
inc
outsl
or
or
mov
ret
inc
int3
es
jmp
pop
aaa
lcall
cmc
cmpl
cmp
pop
shr
mov
pop
sbb
jno
add
mov
lret
loope
xchg
cmpsb
fnstsw
pop
jae
loopne
shl
lret
adc
inc
ja
dec
mov
stc
mov
fdiv
push
jg
dec
stos
mov
enter
iret
insl
sub
clc
out
pop
aaa
adc
rorb
or
mov
jae
leave
jle
pop
mov
cld
and
pop
iret
lock
xor
pop
iret
je
jae
in
push
push
outsl
insb
fbstp
loopne
or
orl
xchg
pusha
test
cmpsl
cmp
shrl
dec
mov
sub
adc
mov
cltd
adc
inc
inc
clc
mov
cmp
test
sbb
adc
xor
lock
mov
js
sbb
test
and
jecxz
int
xchg
or
inc
pop
mov
je
mov
mov
add
lods
or
inc
loope
jbe
xor
jo
es
add
jo
or
cmp
sbb
jno
add
mov
int3
test
je
dec
bound
cs
aaa
and
pop
push
cs
xchg
enter
xchg
mov
rcr
inc
mov
inc
push
sbb
xlat
fwait
incb
jg
xchg
dec
insb
ret
movsl
sbb
cmp
cmpsb
add
jno
push
adc
scas
into
sti
iret
xor
xor
mov
scas
fs
out
push
lret
ror
enter
outsb
adc
sbb
stos
inc
cmpsl
sub
jl
aas
imul
test
call
arpl
and
xor
sub
xchg
xchg
fldcw
insb
scas
cmp
sti
aaa
jbe
xor
mov
dec
daa
ss
das
pop
aam
push
mov
cmp
xorl
pop
addl
mov
aam
loope
jnp
in
ja
mov
int
push
add
mov
rclb
push
dec
dec
jmp
sub
rcrl
cld
jle
cmp
xor
dec
or
lods
inc
sbb
rorb
add
jae
or
or
xor
jae
int
mov
mov
test
xchg
es
dec
or
cmc
inc
mov
subl
ret
xlat
xchg
mov
push
addr16
aad
rclb
ds
mov
xchg
and
scas
xor
call
daa
adc
fwait
lock
iret
and
sbbl
mov
or
rol
xchg
jns
adc
sub
xor
inc
or
or
mov
add
xor
or
call
out
daa
jle
call
xchg
notb
test
xor
stc
scas
push
cmp
ficoml
dec
cli
lock
call
add
jne
orl
mov
jmp
xchg
mov
cmp
mov
loopne
mov
dec
fstpl
addl
pop
cmp
mov
mov
xlat
xadd
inc
inc
sbb
fstl
fsubl
insb
repnz
pop
cmp
shll
push
push
mov
or
frstor
subb
jge
int3
lods
cmp
adc
adc
ss
and
shll
stc
imul
andb
cwtl
jae
cmp
pushf
add
int3
in
push
xchg
lahf
dec
sbb
add
repz
sub
ror
sub
cltd
incb
lds
andnps
cs
jb
popa
push
cli
inc
and
jmp
adc
sbb
popa
cs
repnz
cmp
cs
xchg
push
jle
inc
cmp
ret
aas
pushf
push
lcall
shr
sbb
push
add
cld
fcomi
push
pop
dec
dec
aad
and
dec
fs
cmp
fiadds
ja
pop
clc
sub
jmp
or
and
scas
leave
iret
mov
std
pop
adc
push
mov
xchg
sbb
or
in
nop
add
cltd
inc
repz
sub
dec
cld
xor
shll
rcll
je
mov
inc
mov
test
xchg
arpl
daa
iretw
shlb
xor
sub
cmp
sbb
fcmovne
loope
mov
jns
add
cmpsl
leave
addb
sarb
out
lds
sahf
xchg
clc
rolb
ds
and
mov
sub
cmpsb
in
clc
in
mov
jl
cli
pop
xchg
adc
cmp
sub
jns
mov
aam
pushf
in
imul
arpl
xor
leave
xor
xor
std
rcl
cmp
test
mov
les
nop
dec
inc
xlat
fmuls
dec
xchg
icebp
insb
js
inc
stos
add
adc
ret
push
icebp
ss
mov
in
pop
xchg
mov
repnz
out
sbb
mov
jbe
inc
add
stc
adc
xor
sbb
sub
cmp
xor
fimull
xchg
js
incl
adc
imulb
xchg
ss
pop
movb
pop
adc
xor
rolb
lcall
pop
shlb
fstp
pop
fildl
jae
insl
jmp
in
pop
mov
ss
mov
adc
outsl
inc
call
lods
adc
fs
sbb
dec
inc
out
dec
xchg
stc
repnz
mov
add
mov
dec
xorb
push
push
xchg
daa
sub
inc
movsl
std
inc
test
mov
sbb
mov
stos
mov
pop
addr16
sub
and
adc
cs
push
xor
pop
push
ja
int
imul
in
mov
fbld
inc
dec
and
stc
ljmp
xor
sbb
enter
jne
xor
cltd
loopne
lahf
cmpl
push
mov
adc
loop
pop
shlb
adc
ljmp
xor
lahf
pop
adc
mov
aaa
cwtl
testl
repz
sti
movsb
xor
ja
movlps
decl
ds
test
bound
out
out
test
paddd
mov
out
lret
mov
pop
ljmp
mov
pop
es
jp
dec
ja
adc
push
jmp
in
add
push
fcmovb
hlt
xor
sub
add
ficoml
xchg
rclb
popl
inc
lock
cmp
ds
mov
scas
aas
push
lret
adc
inc
pop
sub
pop
ds
add
into
cli
add
cmp
pop
xchg
enter
movsl
jle
or
andb
fimull
mov
pop
and
je
leave
jno
std
cmp
sub
lea
outsb
mov
add
cwtl
rsm
xchg
testl
inc
cli
adcb
push
xor
adc
sub
ds
sub
sub
dec
mov
lds
fisttpll
add
mov
mov
in
clc
xchg
inc
out
xchg
cmp
sti
dec
xchg
inc
aam
xchg
loopne
ror
dec
aam
sti
push
pop
aam
lds
mov
push
test
aas
fadd
pop
fstl
rcl
push
cmp
rolb
das
inc
aaa
push
mov
adc
std
ljmp
icebp
aad
add
and
xlat
insl
lds
shlb
xchg
movsl
loop
xlat
and
jno
mov
cli
ret
pop
stos
mov
idivl
rorl
mov
xchg
ret
cltd
xor
adc
daa
std
mov
push
mov
out
aad
pop
sub
nop
mov
enter
cmpsb
gs
pop
mov
jmp
push
je
pop
adc
testb
js
adc
cmp
cltd
ret
icebp
mov
push
add
int
adc
mov
mov
shl
mov
inc
mov
jno
mov
push
scas
push
jecxz
push
loopne
outsb
inc
cmp
rcrl
adc
test
pop
or
fsubs
ret
imul
xchg
mov
scas
mov
ficoml
subb
dec
cld
jge
aam
mov
add
cmpb
xchg
cmpsb
xlat
cmpsb
shlb
int
mov
xchg
inc
push
add
cmp
cs
xchg
test
mov
or
jbe
testl
aad
pop
outsb
jo
cmp
rep
aad
stc
cmp
pop
and
ficompl
jo,pt
roll
sar
fnstcw
loop
sahf
cmp
cmpsb
cmp
dec
mov
add
push
test
mov
jl
add
inc
mov
xorl
lret
aaa
mov
adc
and
mov
add
jbe
decl
clc
daa
mov
jne
cmc
mov
add
fs
xor
mov
ret
adc
fld
add
jbe
fadds
mov
cmp
and
subl
es
dec
xchg
repnz
xor
lcall
dec
xchg
into
add
pop
enter
cmc
mov
bound
and
mov
cmp
pop
lods
insl
xchg
addr16
gs
movsb
fisttpl
and
cwtl
xor
mov
loopne
xchg
adc
icebp
test
pop
loope
je
repz
mov
je
das
es
and
mov
insl
cmpsl
je
cld
xor
rorl
mov
or
sbbb
mov
rep
inc
cmp
loopne
mov
out
bound
push
pop
adc
add
pusha
jnp
rclb
mov
and
pop
jo
xchg
pop
dec
loope
add
mov
imul
jae
js
adc
adc
cwtl
lods
or
adc
xchg
push
mov
ret
cmp
inc
std
clc
mov
sahf
cmp
add
pushf
push
sub
addb
xor
push
xor
in
sbb
dec
push
aad
dec
mov
gs
rclb
adc
xchg
sub
lea
push
sub
sub
push
orb
in
and
in
jo
adc
movsl
and
pop
inc
les
or
orb
dec
test
cmp
jmp
shrl
insl
mov
cltd
rclb
push
sbb
inc
add
inc
adc
into
cwtl
mov
sbb
sbb
enter
push
adc
xchg
ljmp
rorl
insl
les
outsl
mov
cltd
ficoml
andb
inc
cmc
not
cmpsl
mov
xchg
js
mov
pop
fisubl
dec
inc
testb
pusha
sub
inc
sub
inc
mov
bound
adc
pop
mov
xchg
mov
push
das
jl
mov
push
mov
movsl
xchg
leave
fadd
mov
and
adcb
icebp
frstor
cltd
dec
hlt
mov
sbb
sub
pop
movsl
loopne
push
push
jmp
pop
jge
push
aas
idiv
repz
loope
adc
lahf
add
adc
fbstp
jns
sub
sbb
ret
sysret
push
cmp
jb
dec
xor
jle
repz
lock
adcl
scas
push
mov
mov
mov
out
rcrb
adc
xor
icebp
sbb
xchg
or
mov
aas
xor
lds
cli
pop
lea
hlt
call
test
dec
lea
jae
aaa
mov
sbb
in
pop
scas
push
outsl
loopne
pop
mov
aam
imul
adc
jmp
ret
cwtl
cmpsl
fstl
psubd
add
mov
and
subb
popa
add
jne
orl
push
lea
fmul
inc
xchg
mov
xchg
jno
dec
mov
adc
pushf
cmpsb
xchg
jle
sarb
mov
scas
xchg
and
sbb
push
pop
ja
dec
std
xorl
mov
orb
shlb
or
inc
push
fucom
idiv
add
jg
loope
dec
cld
out
mov
das
movsl
sbb
sub
mov
pop
mov
adc
jle
pop
pop
fdivrs
mov
or
pushf
movsb
hlt
aam
xor
mov
dec
sahf
sbbb
push
add
cmp
push
popf
inc
mov
fcomps
sub
cmp
decb
cmc
stc
jp
sbb
sub
loop
push
imul
adc
push
cli
mov
fidivrl
sub
sub
jl,pn
mov
fiadds
loopne
mov
jg
inc
pop
add
mov
jmp
int
dec
and
jmp
ret
jmp
fdivl
cmpsl
daa
out
sub
or
lods
aad
testb
adc
loopne
mov
pop
sahf
shlb
aam
adcb
sbb
scas
cmpsb
sbb
mov
xlat
push
xchg
loopne
sarl
push
cmp
cmpsb
sbb
orb
aaa
or
sbb
repnz
loopne
mov
clc
cltd
test
call
cmp
add
in
xchg
loopne
or
lahf
push
cli
loopne
ja
ljmp
mov
ret
ja
js
out
inc
add
add
inc
je
cmp
lret
sar
lock
push
cmc
add
and
jns
adc
pop
ror
icebp
and
testl
mov
movsb
ret
lret
pop
ret
cmp
sbb
jmp
dec
in
sbb
clc
fsubrp
clc
int3
mov
popf
xorl
lahf
xor
sub
pushf
sbb
and
jmp
jb
test
cld
jo
orl
loop
stos
xchg
dec
test
fimuls
cld
push
adc
or
inc
mov
popf
mov
pop
pop
insb
arpl
pop
loop
and
sbb
mov
push
loopne
loope
es
outsl
loopne
icebp
jmp
sub
xor
faddl
sub
dec
sarb
dec
inc
leave
fimuls
test
sbb
mov
adc
repz
sbb
or
jl
inc
mov
orb
inc
adc
loop
mov
mov
or
adc
xchg
stos
mov
out
scas
test
jo
or
movsb
xor
xchg
push
jl
push
rclb
jbe
jno
mov
decl
scas
mov
xchg
test
mov
push
or
add
sbb
call
loop
sysexit
push
xchg
push
loopne
push
insb
int3
xor
pop
or
sbb
testl
int3
out
hlt
or
iret
inc
mov
add
idivl
shlb
add
cmp
xchg
add
out
lods
scas
xlat
and
test
fdivr
popf
pushf
cltd
fs
xchg
mov
mov
pusha
push
mov
or
mov
in
js
pop
subb
orl
or
negb
sub
inc
push
dec
jecxz
cs
inc
and
dec
inc
arpl
dec
movsl
insb
dec
mov
push
ficomps
pusha
and
dec
in
add
sub
sbb
jecxz
pop
sbb
cmpsl
ds
insb
mov
push
sub
imul
add
mov
lahf
rorl
sbb
ss
and
in
lcall
push
mov
dec
pop
add
jb
sbb
adc
shll
imul
push
stos
add
lret
and
test
mov
jle
mov
mov
das
in
xor
mov
push
xchg
lods
jbe
and
lret
and
dec
dec
leave
int
data16
popa
pop
pop
jne
mov
mov
jge
pop
sbb
add
ljmp
pop
movhps
jnp
pop
movsl
nop
out
fs
sub
and
or
or
sbb
adcb
or
jl
pop
push
ficoms
pop
jbe
in
daa
lahf
in
mov
rorl
movb
in
cmpsl
shrl
inc
movsl
inc
cmp
cmp
cltd
fwait
or
call
sbbl
or
cld
jg
mov
andb
xor
xchg
pop
sarb
cmp
call
roll
jo
icebp
push
loope
and
inc
test
arpl
pop
dec
pop
sbb
push
and
icebp
push
dec
pop
and
ja
or
sarl
test
sub
jecxz
aas
jne
add
call
adc
test
jl
fabs
mov
in
or
xlat
xchg
daa
ret
imul
subl
inc
xchg
push
fidivrs
dec
sbb
sbb
loop
xchg
add
fs
lds
cmp
push
jns,pt
sub
and
pop
xchg
adc
and
in
or
xor
push
mov
lahf
out
sbb
mov
push
mov
insl
cli
in
push
push
xchg
mov
mov
jmp
out
sbb
pop
fidivrs
jae
inc
loopne
sub
leave
or
clc
cmpl
mov
movsb
xlat
mov
and
test
pop
idivl
pop
aad
and
push
dec
pop
loop
je
stos
gs
push
xchg
jno
jbe
add
mov
lods
and
mov
mov
jo
inc
and
sbb
daa
les
inc
fdivs
in
push
mov
push
movsl
test
shl
add
mov
dec
adc
lods
addr16
or
stos
or
adc
in
test
lahf
aaa
inc
inc
add
push
mov
mov
push
ds
scas
mull
push
in
gs
mov
sbb
dec
adc
pushf
xchg
les
imul
dec
jbe
jmp
mov
shrl
and
mov
icebp
movsl
pop
xor
mov
imul
mov
push
inc
inc
fwait
and
stos
xor
mov
fwait
out
sti
cs
cmp
or
cli
out
clc
sub
test
test
add
hlt
cmc
sbb
cmp
sub
popa
sbb
movb
adcw
mov
pop
push
int
add
fidivl
mov
inc
inc
addr16
push
push
inc
mov
aad
insb
fildll
sub
or
lods
test
sbb
daa
sbb
mov
addb
sub
popa
cmp
mov
std
cwtl
std
test
push
mov
lds
lret
lcall
inc
orb
dec
jbe
mov
push
icebp
pop
cmp
insl
scas
jle
xor
aaa
sub
mov
test
je
imulb
out
arpl
test
mov
jno
ret
into
pop
adc
xor
mov
mov
push
pushf
jp
pop
cmp
mov
push
cmp
icebp
sub
sbb
lock
out
ret
scas
or
inc
lahf
cmp
mov
sbbl
in
int3
clc
push
xchg
or
iret
jb
cld
push
pop
fwait
inc
dec
popf
fisubrl
mov
cltd
push
lea
jnp
test
aam
adc
mov
lret
dec
mov
cli
hlt
fwait
xchg
xor
fadds
jmp
adc
xor
aas
xchg
lods
push
mov
outsb
scas
adc
push
dec
pop
inc
pop
mov
sbbl
pusha
jmp
or
ss
add
and
mov
pop
maxps
pop
adc
pop
sbb
push
fldcw
mov
ret
loop
ret
push
addr16
arpl
add
pop
and
out
dec
mov
das
insb
push
lea
pop
lods
sub
pop
jne
pop
jp
jnp
popf
cltd
cmp
mov
pushf
push
push
dec
adc
lods
hlt
mov
mov
fmul
leave
repnz
fsub
js
cmp
xor
out
loope
jmp
pop
push
sub
push
fimuls
enter
pop
dec
add
repz
dec
or
cs
pop
xor
bound
xor
cmp
xchg
add
sarb
mov
adc
test
pushf
fisubrs
add
and
mov
dec
lds
rclb
lea
imul
mov
fildl
push
scas
jb
lcall
addl
ret
clc
xchg
fs
cmp
inc
out
adc
mov
adc
or
ljmp
ljmp
arpl
add
std
mov
bound
xor
daa
je
push
inc
sahf
cmp
in
pop
mov
lods
ret
inc
and
ljmp
testb
xor
jbe
dec
test
mov
enter
lea
loop
mov
repnz
out
sarb
ja
add
adcb
imul
and
dec
dec
sub
mov
mov
mov
mov
sub
testb
pop
movd
adc
pop
xor
xchg
xlat
push
movl
in
sbb
push
in
pop
les
cmp
mov
imul
fiadds
mov
repz
sahf
pop
and
cli
ljmp
sbb
int3
xchg
mov
filds
pop
or
lahf
aaa
push
sarb
stc
fadds
add
sbb
xchg
je
sub
xor
xor
xchg
sub
in
cwtl
jo
mov
jge
jns
mov
sbb
xchg
imul
sahf
lret
sub
jo
and
sti
les
mov
in
call
push
addb
mov
pop
jg
xchg
xor
jo
push
add
cmpl
dec
sbb
dec
mov
xor
mov
lret
cli
daa
je
leave
xchg
xchg
push
xchg
mov
ret
sbbl
hlt
and
adc
movsb
test
jp
add
and
dec
or
or
mov
test
xchg
xor
add
push
push
addr16
rclb
movl
icebp
push
incl
stos
mov
pop
or
or
into
movsb
in
hlt
push
test
popf
in
inc
scas
push
mov
inc
jae,pt
mov
daa
loopne
nop
addb
sahf
or
roll
aas
sbb
or
mov
jp
clc
out
loopne
ss
out
fs
xchg
ret
ja
xchg
push
cmp
orl
xchg
cli
jmp
mov
jb
add
clc
adc
add
rclb
inc
dec
sub
hlt
je
cmp
cmp
push
cmc
push
adc
jg
add
mov
push
shrl
ret
sub
into
jecxz
pop
xchg
mov
xor
imul
dec
popa
cltd
js
pop
insb
pusha
or
insl
push
pop
mov
mov
lock
sahf
orb
movsl
rorb
and
push
cli
mov
push
inc
pop
jne
sbb
mov
sub
cmpsb
push
lret
and
ret
xchg
push
dec
jmp
add
adc
lock
fcmovbe
in
xchg
mov
add
call
push
aas
xor
rcll
mov
xor
out
lcall
gs
mov
and
lods
cmp
gs
lret
inc
outsl
mov
pop
sbb
mov
adc
aaa
test
dec
loope
icebp
cmc
ret
lds
aad
mov
clc
sub
jge
push
adc
push
add
jne
popa
xor
out
stos
or
sub
shr
mov
cwtl
sahf
add
test
loope
adc
push
xchg
jbe
cmp
sub
or
adc
sub
pop
xor
xor
inc
pop
lods
inc
hlt
xchg
cmp
imul
adc
dec
pop
adc
lahf
lret
xchg
cmpxchg
xchg
add
jae
pop
test
push
pop
push
adc
fnstcw
sbb
mov
push
push
enter
inc
frstor
add
fisubrl
cli
dec
mov
cmc
xor
fdivp
pop
fwait
sub
xlat
neg
sub
loopne
fistpl
stos
icebp
lock
dec
in
mov
cwtl
jp
movsb
subl
test
mov
fsubl
lock
sub
loope
pop
add
addr16
jp
lds
clc
xchg
or
call
sub
sahf
sarb
add
sahf
sub
lock
add
xchg
add
or
and
cmp
inc
mov
leave
clc
cs
pop
inc
sbbl
mov
cs
and
les
xchg
loop
adc
xor
mov
push
shrl
add
push
enter
fmuls
cmp
movsb
rorl
pop
data16
xor
mov
addb
sbb
jae
push
loope
pushf
mov
inc
lock
adc
add
jne
paddusb
pop
test
cmp
cs
fcmovbe
ss
inc
out
ret
loopne
mov
jge
cli
or
or
stos
fwait
aam
sbbl
xchg
imul
andl
shll
call
dec
addl
cmp
xor
outsl
add
fucomi
xlat
or
mov
xchg
cs
xchg
push
icebp
lods
dec
xchg
sub
cmpsl
outsb
jecxz
or
test
sbb
cmpsl
mov
int
sbb
pusha
fimull
mov
mov
pop
rorb
cmp
adc
adc
icebp
dec
jl
mov
mov
jb
cmp
cmpsl
adcl
xchg
mov
shll
leave
xchg
adc
orb
bound
lea
xor
je
sub
addl
in
inc
jo
ds
and
ss
shlb
jg
inc
dec
adc
jge
repz
btl
add
and
jo
mov
pop
inc
mov
aam
xor
xchg
mov
testb
dec
rolb
ret
vmwrite
scas
out
xchg
shrl
int
add
xor
push
fists
sub
mov
sbb
dec
xor
call
lods
sbb
cmpl
cmp
incb
scas
into
shll
pop
adc
add
fdivl
in
cmp
cmp
xor
stc
call
push
lret
add
xor
jle
js
cmp
in
scas
stos
or
sbb
rolb
add
sbb
jl
lahf
mov
mov
jl
mov
icebp
xchg
sbb
adc
aam
sbb
jg
enter
xlat
stc
inc
dec
add
aad
shlb
loope
mov
cmp
shll
test
addr16
loopne
push
jb
test
shll
jl
adc
je
pop
lds
clc
jne
fwait
adcb
aam
imul
sbb
mov
and
mov
repz
pop
mov
mov
sarl
mov
lea
jge
or
test
outsb
sbb
clc
sbb
adc
sub
adc
mov
pop
es
push
lock
scas
stos
scas
push
jbe
xorb
out
mov
mov
sahf
inc
and
cmp
call
cli
pop
cmpleps
cmp
inc
mov
inc
test
mov
cmpsl
cld
lcall
push
mov
clc
roll
inc
push
pop
mov
lea
in
cmp
das
rorb
push
mov
xchg
adc
cmp
sbb
lcall
sbb
dec
or
push
clc
mull
xchg
hlt
das
cli
mov
or
add
orb
mov
inc
lock
fadd
sub
cmp
fadds
test
adc
and
push
pop
lret
sub
or
aaa
or
xor
pop
add
sbb
subb
pop
flds
outsb
jg
cmp
or
jns
ds
iret
mov
mov
in
push
adc
pop
mov
sbb
cmc
js
sarl
mov
popf
cs
movsl
cs
pop
add
sub
jg
add
jmp
add
push
mov
leave
fsubrl
insl
pop
test
lock
mov
and
push
xchg
mov
sub
aam
outsb
mov
lahf
mov
out
sub
adc
scas
dec
sbb
add
ffree
insb
int3
cmp
mov
lods
aam
popf
pop
xor
test
cmp
xchg
sub
lret
lcall
sbb
out
dec
fxch
icebp
add
inc
push
ret
je
jno
mov
movsl
test
jmp
mov
dec
stos
movsb
shrl
xor
adc
outsl
jae
dec
and
sahf
jge
jns
movsl
sarl
sbb
fbstp
jl
inc
dec
dec
clc
sbb
aaa
mov
ds
jmp
int3
xchg
loopne
fsubl
xchg
pop
xor
cmp
add
test
jg
inc
xor
and
pop
pop
push
cmc
mov
push
movsb
add
stos
test
in
test
inc
lcall
fxam
push
divb
ja
pop
scas
jle
lcall
push
repnz
or
mov
and
icebp
xor
lock
idiv
ljmp
js
jmp
mov
inc
clc
call
or
cltd
pop
ret
fdivr
js
or
sub
daa
mov
mov
clc
jns
add
push
filds
adc
testl
lds
negl
loopne
add
add
les
xchg
fbld
mov
inc
ds
ret
or
add
xchg
fwait
cmpsb
fisttps
pop
or
orb
mov
xchg
jbe
scas
pop
xor
push
or
iret
outsl
mov
test
outsb
sbb
arpl
jl
jle
cmp
adc
test
int
pop
stos
and
lock
mov
sahf
push
mov
in
negb
fwait
cmpsl
mov
pop
stc
inc
inc
mov
cld
icebp
mov
mov
dec
pop
sub
push
lahf
pusha
mov
jl
mov
jno
inc
imul
int3
adc
es
pop
ljmp
jmp
jne
push
add
inc
mov
into
test
or
adc
shll
loopne
imul
add
cmp
ds
movsl
lds
dec
ljmp
movsb
mov
lods
test
adc
adc
push
hlt
call
enter
xchg
and
test
inc
mov
bound
dec
push
and
dec
xlat
jp
mov
dec
insl
sbb
lahf
in
das
test
icebp
sbb
sbb
and
je
lcall
adc
subb
loop
or
lahf
mov
fcoms
mov
add
bswap
fcomps
les
xchg
and
dec
mov
and
sbb
andl
pop
xor
push
ret
insb
add
mov
push
push
cmp
iret
jno
pop
pop
push
lods
mov
jbe
rcrb
and
outsl
push
addr16
movsl
stc
pop
mov
dec
dec
xchg
lret
pop
shl
pushf
loop
adc
jnp
ss
mov
sub
push
mov
aas
rorb
add
cmpsl
pusha
lea
xchg
out
into
cwtl
cmp
scas
out
sbb
je
mul
rorl
mov
movsb
ret
cmovs
rcrb
fwait
inc
stc
cltd
adc
fsub
and
ret
xchg
xchg
cmpb
hlt
movsl
fldcw
mov
mov
aaa
enter
xor
dec
stos
out
call
js
pop
sub
sub
xor
test
cmp
decb
fistpl
xchg
cmovae
mov
sub
jge
mov
lock
xor
js
cli
test
cmp
lods
mov
lock
loopne
ret
js
inc
ljmp
mov
out
or
pop
push
cmp
pop
push
cs
jmp
adc
aaa
out
imul
test
shlb
mov
xchg
cli
js
sarb
xor
lret
or
mov
rcrb
scas
jb
scas
inc
push
stos
adc
add
mov
stos
cmpsl
test
icebp
mov
and
mov
cli
scas
mov
sub
call
jbe
mov
mov
inc
bound
inc
call
jne
mov
or
jp
stos
xor
sub
xchg
mov
push
jle
outsl
testb
lds
movsl
rclb
mov
pop
bndldx
xchg
icebp
push
call
jl
and
inc
js
xor
dec
pop
or
push
lock
fs
loopne
mulb
or
sub
dec
lahf
mov
nop
test
sti
jl
jb
mov
insb
lods
push
shrl
mov
cmp
sub
mov
pop
push
push
jo
pop
adc
jbe
xchg
out
test
pop
xor
pop
test
lcall
cwtl
bound
rcr
rcl
and
cmp
push
std
add
mov
adc
das
sub
add
mov
aad
mov
mov
repz
jnp
xor
inc
add
loopne
add
in
mov
adc
les
idivl
pop
ret
fwait
pop
add
or
pusha
fldcw
pop
in
xchg
hlt
xor
push
or
imul
mov
imul
stos
mov
into
shrb
pop
test
les
outsb
mov
mov
mov
decb
insl
fcom
lcall
dec
or
jmp
ljmp
xchg
mov
pop
cmpl
jnp
and
movsb
stc
jp
test
pop
push
and
xor
addl
pop
jge
loope
mov
pop
outsb
imul
or
negw
adc
pushf
sub
sub
adc
or
dec
js
rcl
cmc
and
rcrl
divl
mov
lds
cmp
dec
push
fadds
int
pusha
pop
push
test
lods
insl
imul
cmp
aaa
mov
lret
mov
xor
dec
dec
pop
sub
pushf
or
fs
mov
ja
cmc
xchg
xor
cmp
and
mov
mov
pop
xor
lods
xlat
sti
mov
cli
mov
adc
insb
pop
cld
loope
add
scas
fldenv
mov
mov
xor
inc
jp
ret
or
testb
das
test
xor
cmp
push
cmpsl
testb
pop
cmp
ja
nopl
stos
add
xor
and
addr16
adc
sarl
xor
xor
cmp
icebp
sahf
and
push
cld
lret
xor
test
dec
cld
sub
xlat
fwait
rorl
and
fs
adcb
add
push
rclb
xchg
addr16
and
jo
push
mov
push
mov
das
xchg
aas
test
push
fdivrl
andl
push
jecxz
roll
cmc
and
jg
je
rol
call
addr16
sbb
mov
xchg
jp
mov
pop
pop
mov
fistl
mov
pop
pusha
xchg
inc
xor
cs
xchg
arpl
das
and
mov
in
sbb
test
mov
inc
fs
dec
outsl
jmp
sti
mov
addr16
sub
shrb
fsubs
cli
xor
inc
xchg
outsb
pop
or
pop
mov
fildll
rorl
push
inc
inc
test
in
call
in
inc
push
js
sbb
ja
jnp
clc
sub
or
cmp
push
jle
pop
mov
aad
adc
dec
inc
ja
mov
adc
xchg
inc
mov
push
out
push
mov
outsb
lcall
jle
movsl
fildll
mov
sub
mov
xlat
fwait
mov
sahf
out
inc
loope
xchg
hlt
adc
adcl
test
rclb
jae
test
sbb
xor
and
ja
ljmp
aas
mov
mov
arpl
les
cli
pop
icebp
inc
inc
cwtl
sbb
in
pop
xor
jle
cmpl
jecxz
cmc
loope
add
adc
inc
jmp
lock
jg
xchg
iret
test
or
sti
push
xchg
into
lock
hlt
or
aad
sti
hlt
sbb
int
jecxz
aas
movsl
xchg
dec
cmp
sub
movsl
dec
push
xor
adc
fcomip
stos
or
inc
bound
loope
insb
stos
add
sub
shlb
orb
push
movsl
xchg
mov
stos
test
neg
imulb
mov
jmp
vmaxpd
pop
test
mov
pop
pop
lcall
mov
mov
cmp
xlat
cltd
loopne
jp
mov
mov
ficompl
jmp
test
data16
mov
dec
add
repnz
ret
inc
loop
cmp
sbb
repz
clc
fcoml
sub
xor
push
ret
inc
testl
mov
lret
and
add
cmp
loopne
xchg
sbb
jne
mov
addr16
mov
mov
divl
movb
jns
push
iret
pop
push
mov
mov
add
pop
dec
cmp
push
push
or
sub
enter
int3
dec
dec
sbb
pushf
push
jle
bound
add
enter
rolb
insl
decl
push
jecxz
shlb
jl
sbb
andb
int3
test
xor
push
mov
imul
aaa
push
das
ret
dec
inc
shl
cli
sbb
loopne
mov
mov
pop
imul
mov
xlat
xchg
lods
xchg
sbb
divb
pushl
push
cmpsb
fsubs
push
push
jo
lock
cmp
in
hlt
rcrl
and
aas
cmp
push
shll
aam
jp
repz
mov
mov
aam
pop
pop
fcomps
call
or
movsb
cmp
jp
adc
lock
test
ret
or
inc
fcmove
dec
ficompl
outsb
sbb
test
aad
dec
imul
cmp
or
cmp
xor
xchg
dec
or
inc
cmc
pop
lock
pop
pop
jecxz
mov
popa
add
mov
mov
daa
enter
nop
xor
cli
add
stos
fwait
out
jbe
call
mov
mov
or
ljmp
sub
adcl
fs
and
ret
jp
andb
jmp
xchg
cs
int3
inc
inc
jnp
imul
dec
xchg
mov
movups
cmp
xchg
mov
lods
fwait
or
push
xor
std
cmp
pop
inc
pop
ljmp
sbb
mov
jecxz
add
ret
into
jmp
bound
and
lret
fdivr
push
mov
test
out
adcb
inc
call
mov
add
inc
iret
cmpsb
mov
pop
dec
or
scas
daa
cmp
popf
inc
xor
pop
cmp
dec
mov
rorl
popf
and
test
mov
lret
fdivrl
dec
mov
int
adc
push
mov
pop
ja
daa
push
xchg
dec
add
sbb
imul
adc
xchg
data16
or
sub
inc
mov
pop
or
lock
and
or
fiadds
mov
fst
mov
lods
shrb
fisubl
mov
pop
sbb
or
loop
hlt
inc
leave
lret
es
lods
idivb
aas
insb
stos
loopne
push
lock
sbb
xlat
rcrl
mov
dec
sbb
insb
fwait
inc
bound
pop
mov
aad
inc
adcl
rolb
nop
adc
js
adc
loop
les
pop
cwtl
rcll
or
lds
lret
sbb
or
cmpsb
rcrl
push
jo
ret
xchg
mov
push
pop
mov
stc
sbb
jmp
cmp
or
cmp
push
push
sub
adc
inc
rcr
add
mov
out
repnz
das
test
aaa
loop
js
xor
add
push
aaa
cmc
cmpsb
cmc
imul
dec
flds
or
lea
inc
sahf
adc
call
fucom
pop
loope
daa
scas
pop
jnp
ds
cs
ss
loop
pop
pop
xchg
stos
in
pop
sub
aam
call
mov
inc
mov
mov
imul
cli
enter
jno
aam
test
call
jb
xchg
enter
cmp
scas
insb
inc
add
mov
jmp
or
and
add
lahf
adc
push
push
aam
pop
orb
addl
xchg
iret
inc
add
inc
xchg
push
shlb
or
or
push
es
xor
jecxz
add
cli
int3
ja
insl
cmpsb
cmc
imul
or
mov
ret
and
lcall
pushf
lock
or
sti
les
cmpxchg
outsl
xor
dec
add
cmp
lock
sbb
movsb
and
xchg
pop
test
lcall
sbb
lea
mov
mov
pushf
aaa
pop
adc
mov
insb
and
test
xor
mov
shlb
call
jle
imul
sbb
dec
xor
add
cli
mov
bnd
add
jb
add
mov
mov
xor
hlt
xchg
mov
stos
dec
push
lcall
shll
sbb
push
jno
adc
divl
pop
arpl
popa
push
mov
jno
les
dec
and
or
sbb
push
dec
xchg
sahf
fisubs
mov
fcompp
ret
push
scas
nop
cmpsl
or
or
lcall
xor
scas
aad
fs
fstpl
sub
test
jecxz
lret
outsl
je
push
mov
jns
pop
loopne
lcall
int
cmpsl
mov
fs
insl
test
dec
call
xchg
and
and
orl
xor
pop
pop
or
xor
and
add
or
out
mov
push
cmpsl
sbb
sahf
or
and
rolb
fildl
das
test
loopne
jae
xchg
cltd
inc
pop
sbb
push
mov
rcl
imul
push
fstl
sbb
cmp
mov
mov
cmp
pushf
hlt
leave
jb
push
mov
inc
push
push
dec
leave
test
rcrl
aam
clc
mov
sbb
jle
jecxz
xchg
add
or
fucomip
or
sbb
mov
cld
add
les
aam
aad
inc
mov
jge
jle
sbb
insb
mov
or
in
fisttps
mov
int
ficoms
xor
es
and
test
jg
xor
add
std
push
clc
and
rclb
shrl
jmp
aaa
ds
cmp
jle
popf
int
out
stc
mov
adc
rcrb
or
or
inc
inc
or
ljmp
xor
or
pop
hlt
ds
lahf
jge
sbb
iret
dec
outsl
sub
outsb
mov
mov
adcb
mov
in
repnz
test
cmpsl
cmp
mov
lret
add
sahf
lea
incl
inc
add
dec
or
leave
data16
add
xor
decb
cmp
filds
push
lock
mov
mov
pusha
xor
push
add
push
push
and
je
or
mov
mov
lret
jo
mov
dec
imul
jp
jl
mov
shlb
sub
movsb
sbb
scas
hlt
xor
popf
movsb
adc
jp
push
add
xorl
cmpsw
dec
test
cmp
scas
xchg
mov
not
mov
call
jmp
xchg
loope
in
jne
sbb
test
pop
data16
hlt
xchg
or
test
test
mov
xorb
daa
mov
add
pop
xchg
aas
xchg
push
scas
add
inc
outsl
sahf
movb
cmp
pop
cmp
add
lock
imul
push
ljmp
pop
sub
pop
aam
pop
add
sub
shlb
mov
mov
jecxz
add
hlt
shlb
ret
jecxz
fwait
adc
push
popa
jnp
push
pop
je
fwait
dec
jl
cwtl
sbbl
int3
nop
fiadds
xchg
les
sahf
sahf
inc
jo
push
loop
xor
mov
lahf
jp
pop
pop
push
lcall
adc
fsubr
inc
popa
test
bnd
inc
mov
add
sbb
or
cmp
or
cmp
mov
push
dec
je
daa
lods
xchg
nop
sahf
pushf
fsubrl
int
xor
stos
xor
lret
inc
ss
cmc
push
jp
xor
addr16
sbb
ror
pop
and
or
in
jbe
test
mov
xor
adc
dec
ret
jmp
pop
nop
pop
mov
sub
cmp
mov
xchg
mov
fiadds
push
lahf
add
and
imul
and
and
repz
pop
and
es
mov
xchg
adc
mov
mov
insb
fdiv
push
in
sub
mov
and
add
jge
cmpb
lret
mov
pusha
sub
jmp
test
fnstcw
cmp
push
dec
daa
jne
cmp
cld
sbb
inc
shll
loopne
dec
arpl
mov
ss
shrl
or
inc
imul
sub
in
je
or
push
pop
cmpb
in
fs
loopne
or
in
mov
inc
fimull
mov
dec
mov
sbb
sarb
cmp
xchg
xchg
test
xchg
lret
jecxz
adc
or
in
or
mov
sbb
jge
out
xchg
dec
imul
mov
arpl
andl
nop
and
mov
scas
cmp
repz
fadds
push
pop
ja
scas
negl
adc
xchg
addb
testb
pushf
mov
arpl
sub
cli
out
add
dec
xor
cmp
popl
cli
pop
sbb
jns
add
push
incb
and
test
cli
mov
adc
cmp
clc
stos
or
es
imul
sub
enter
adc
fdivs
pushf
lret
xchg
stc
sub
add
mov
bound
mov
out
sub
or
cmp
in
fcompl
push
mov
int
xchg
or
shlb
pushf
and
movsl
xchg
out
pop
lea
popf
push
push
inc
mov
mov
sbb
sbb
adc
mov
aad
jmp
daa
dec
int3
jo
add
gs
mov
jns
scas
cmp
js
int
pop
sub
call
popa
pcmpgtw
push
sbb
mov
pop
cmpsl
je
mov
sbb
mov
pop
stos
adc
cmp
pusha
xchg
sub
imul
cmp
loopne
shl
fiadds
push
jp
daa
adc
mov
pop
pusha
out
in
xlat
jns
test
mov
xor
inc
aam
pusha
gs
push
mov
andb
enter
sbb
inc
sbbb
addr16
pcmpeqb
sarb
imull
mull
cmp
adc
and
adc
loope
lods
stos
xor
js
sub
or
mov
adc
notl
es
rorb
jbe
sub
inc
out
out
add
xlat
testb
stc
cmpsb
jp
sbb
lcall
xorb
iret
stos
fimuls
mov
pop
popl
dec
mov
insb
es
xor
jecxz
xchg
sbb
lods
stos
fwait
push
mov
es
xchg
mov
cwtl
or
jmp
lds
ret
mov
insb
cmp
nop
push
adcb
popf
lds
or
cli
pop
xor
fiadds
inc
js
sbb
sub
mov
cmp
and
jo
es
pusha
xor
repz
ror
mov
or
sbb
rol
push
adc
fldl
cmp
add
call
lods
mov
fnsave
push
or
je
test
push
aad
scas
pusha
lahf
cwtl
shrb
test
icebp
jmp
lods
icebp
loopne
add
lret
mov
xchg
scas
and
aam
xchg
cmp
pushf
sbb
pop
or
enter
enter
push
pop
or
inc
push
aad
sub
jl
mov
push
cmp
cmp
ss
in
pop
fs
shl
call
adc
mov
scas
pop
sbb
cmc
mov
aas
fcmovnb
xor
xor
xchg
loope
mov
cmp
popa
mov
ret
pop
lock
sti
pop
ljmp
lret
add
dec
in
fmull
ds
and
mov
es
clc
mov
aad
cmp
inc
stos
mov
imul
setnp
aas
je
fwait
push
sbb
shrb
popl
inc
jmp
push
enter
js
sbb
int
aad
jnp
rolb
call
mov
xchg
xor
pop
test
andb
inc
mov
rolb
sbb
pop
fmuls
outsb
adc
shrb
orl
test
mov
test
imul
movsl
sbb
cmp
xchg
sub
xlat
pop
push
aas
or
and
push
push
sbb
xor
gs
or
arpl
mov
sahf
loop
mov
popa
outsl
or
arpl
fimull
imul
jo
shll
arpl
pop
mov
cs
xorl
and
test
movsb
insb
xor
in
sub
sub
test
mov
or
jb
add
imul
pop
mov
mov
in
xor
push
inc
sub
lret
add
fdivr
scas
push
stos
fmulp
fiaddl
xor
cmp
loope
std
scas
cmpsl
mov
push
in
mov
scas
push
sahf
cltd
jns
mov
dec
adc
aaa
lcall
dec
sti
jecxz
push
sub
mov
xchg
es
mov
outsl
cmc
pop
fmuls
dec
stc
jae
inc
cli
cmpsl
out
insb
xor
jne
xor
ror
adc
out
xchg
and
cmc
inc
mov
inc
or
hlt
xor
dec
jno
cmpsl
lds
mov
push
loope
adc
stos
push
mov
je
adc
mov
jno
adc
push
push
js
leave
sbb
pop
lds
pop
nop
mov
arpl
aad
andl
cmp
sub
mov
push
or
loope
mov
jge
fwait
rorb
lret
and
adc
into
inc
fcomps
in
xor
les
jno
mov
mov
add
cli
push
rol
push
imul
pop
repnz
xchg
call
aaa
sub
mov
mov
lods
jmp
mov
fs
lahf
imul
je
mov
xchg
imulb
mov
dec
xor
mov
or
andl
fistl
inc
push
push
jne
lds
jge
mov
mov
jle
inc
cltd
adc
insb
sub
icebp
mov
cmpsb
or
shr
loopne
imul
inc
jbe
ficoml
out
icebp
shrb
sbb
sarl
fxch
insl
mov
pop
or
inc
stos
inc
out
lds
cld
pop
scas
clc
stos
jb
sbb
sub
cmp
fiaddl
loope
aam
or
cmpsl
pop
add
mov
add
aad
sub
dec
add
repnz
into
rcrb
mov
cwtl
in
out
dec
aam
lahf
lock
mov
xlat
jecxz
mov
inc
pop
leave
mov
lock
mov
movsb
fwait
xor
test
mov
test
rolb
dec
out
jp
pop
jge
mov
push
cmpsb
jle
and
and
in
fcmovnb
test
in
dec
movsl
sbb
jge
cmpsb
mov
fisttpl
in
clc
mov
push
enter
clc
popa
andl
adcb
shl
adc
sti
aas
cmp
and
mov
loop
pop
xor
repnz
sub
bound
test
ret
mov
mov
popf
xor
mov
push
fucomip
cld
cmp
jmp
adc
xor
inc
xchg
xor
sub
ja
out
es
pop
shl
dec
or
push
jl
jo
push
aam
ret
sbb
or
and
inc
enter
cmc
add
inc
fwait
xchg
inc
xorl
or
fucomip
sbb
mov
mov
js
push
addb
cmp
mov
out
adc
or
dec
cwtl
subb
and
test
dec
xlat
imul
lss
rol
add
pop
xor
and
mov
cmp
js,pn
mov
cld
lret
ret
mov
cmp
aam
outsl
pop
mov
mov
dec
test
xor
push
sub
or
dec
and
pop
je
mul
jmp
repnz
mov
inc
fcmove
ljmp
mov
les
or
icebp
and
mov
addr16
das
mov
mov
shll
test
adc
mov
adc
cmpsb
sahf
mov
mov
inc
jge
shr
pusha
adc
dec
and
mov
cvtps2pd
sub
sbb
mov
mov
fnsave
and
cli
es
push
jle
push
mov
dec
xor
xor
mov
mov
push
cmpsl
mov
ret
and
xchg
inc
fucomi
andb
aas
dec
bound
in
cmp
iret
mov
and
xor
adc
pop
fwait
imul
int
jns
addr16
add
ret
in
int
loope
loope
mov
pop
inc
cmp
test
xor
push
mov
pop
jl
sbb
mov
or
aad
cli
cs
ret
adc
fsubr
test
and
iret
dec
xlat
loopne
xor
adc
cli
mov
mov
es
pop
movsb
cmp
ljmp
test
ret
repnz
cli
mov
xor
popf
xlat
add
insl
mov
or
pop
sahf
dec
mov
insb
hlt
repz
pop
es
std
xor
lahf
or
or
pop
and
ficomps
push
and
sbbb
loopne
nop
sub
sti
ret
aas
push
std
push
pop
xchg
jne
add
pop
pop
jecxz
mov
pop
push
mov
lea
es
push
outsb
jnp
mov
test
jge
push
mov
ja
pop
stos
lcall
in
int3
fwait
or
rclb
insl
mov
and
js
pop
xchg
add
outsl
push
or
cltd
shrl
sub
jl
cwtl
insl
mov
cmp
dec
and
inc
add
or
jp
pop
ja
jge
pop
hlt
lret
aas
push
js
addr16
jne
jge
mov
out
push
and
jmp
call
or
sbb
mov
push
pinsrw
lock
rcrb
ds
push
pop
and
or
sub
cmp
inc
incl
out
lds
cmp
outsb
push
sbbl
rclb
xchg
les
pop
in
mov
mov
pop
sbb
inc
add
or
jmp
das
adc
xchg
add
mov
hlt
adc
shlb
int3
push
jns
or
pushf
sub
outsb
cli
movsb
pop
fidivrs
icebp
jg
cs
lock
bound
js
in
test
std
dec
cmp
clc
mov
loop
sbb
dec
push
dec
rol
sbb
stos
sbbb
insb
mov
jg
in
fcmovnbe
cmp
je
fs
adc
sbb
ds
sbbl
out
push
jnp
out
andl
js
pop
push
rorb
push
and
mov
adc
and
outsb
jg
movsb
cltd
mov
shlb
out
push
or
fimuls
xor
and
mov
dec
sbb
push
shl
or
fsub
into
fiadds
call
pop
jmp
cs
popf
pop
es
jnp
push
popf
sbb
or
mov
cmpsl
fisttpll
mov
stos
mov
push
jge
mov
and
lret
je
test
fwait
jmp
dec
test
popw
inc
cmp
dec
cltd
clc
mov
mov
xor
jae
in
stos
je
inc
lahf
ljmp
xor
outsb
rorl
and
aad
pop
jmp
aaa
stos
lods
dec
mov
jb
je,pt
mov
jmp
enter
jg
xchg
in
int3
push
adc
jl
inc
or
sti
cmp
jl
aaa
cmp
xchg
xor
loopne
sub
jns
cmp
push
cmp
ja
pushf
call
dec
outsl
and
je
lds
jb
lods
data16
mov
pushf
xor
in
xor
cmp
jl
loope
pop
cmp
testb
addl
and
lods
cs
push
lea
jnp
mov
lock
int3
push
jl
aaa
neg
cli
push
test
jl
inc
sbb
sbb
out
rcrl
out
pop
mov
mov
lods
sub
sub
add
lods
shl
sbb
das
inc
notb
inc
pop
or
dec
outsl
fs
jl
mov
in
fbld
inc
aad
adc
or
hlt
repz
sbb
cmpsb
repnz
inc
and
mov
or
add
jae
rolb
imul
cmp
jl
inc
sbb
mov
cmp
or
jmp
push
flds
scas
loope
pusha
mov
jmp
pop
pop
loopne
les
test
and
pop
outsl
je
fldcw
ds
pop
cwtl
fs
cmp
test
lock
dec
mov
cmp
shll
xchg
push
pop
leave
cmp
pop
repz
loop
mov
xor
hlt
mov
bound
test
push
mov
mov
mov
lods
daa
or
adc
rclb
cmp
ljmp
xor
imul
jp
mov
jmp
imulb
loop
inc
loope
int
mov
and
inc
mov
inc
add
test
jae
cmp
fisubrl
or
push
sbb
inc
xor
or
rcl
pop
inc
pushf
cmpsl
mov
out
cmpsb
sbb
sub
push
data16
pop
mov
sub
jne
ss
les
push
cmp
ss
aad
mov
inc
dec
push
inc
nop
cwtl
add
mov
mov
xchg
loopne
clc
add
xor
jb
lds
mov
add
imul
mov
lahf
push
add
mov
nop
shr
dec
jecxz
push
pop
rclb
sbb
sar
pop
rol
or
inc
rcll
scas
and
hlt
push
or
push
push
add
sub
mov
add
and
add
imul
pop
pop
out
jo
sbb
mov
push
scas
js
fcoml
pop
mov
in
or
pushl
sti
dec
mov
or
fcoms
sub
in
sub
punpckldq
mov
pop
inc
adc
or
push
jbe
cmp
xchg
jo
arpl
addl
les
lds
cmp
or
lcall
notb
adc
insb
lds
fcompl
popa
inc
insl
and
add
pop
popf
cmp
xchg
imul
mov
popf
pop
adc
inc
aam
js
cmp
pop
movsb
and
jo
sbb
dec
mov
popa
stos
test
lcall
addb
xchg
mov
lods
fidivrs
cmp
lret
fsubrl
shrl
cmp
jnp
mov
push
cwtl
pop
scas
mov
mov
add
jae
add
mov
les
adc
mov
jbe
in
leave
or
sub
andb
icebp
arpl
inc
xor
adcb
cmp
xor
xchg
push
rorb
jl
cld
push
mov
pushf
pop
lods
and
lods
test
xchg
cmc
add
inc
aas
test
int3
imul
jb
push
push
jmp
and
pop
jl
sbb
pop
imul
seto
sbb
xor
xor
test
pushf
lea
inc
and
call
and
orb
adc
aad
xorb
inc
xchg
pusha
int
fisubs
das
stos
inc
jo
push
mov
mov
jns
or
adc
into
jne
rcll
mov
sbb
jle
enter
push
and
leave
sub
shrl
mov
mov
add
fs
mov
es
dec
das
std
jl
add
or
mov
mov
mov
div
fiaddl
ret
xor
fcom
inc
js
popa
mov
or
jle
mov
in
sbb
pop
jle
test
add
test
rcrl
or
loop
jle
jne
mov
std
ja
pop
or
fiaddl
rcrb
in
dec
sarb
sub
jp
xchg
xchg
jl
jbe
loope
inc
jae
flds
rorb
rclb
lock
and
loop
jp
jge
dec
push
xor
aaa
xor
repnz
mov
dec
or
testl
cmp
les
jno
pop
sub
adcb
mov
shrb
or
inc
aas
adc
lret
inc
pop
hlt
xchg
dec
cmp
loop
dec
pop
add
adc
jg
add
fdivp
dec
mov
mov
lahf
mov
loopne
roll
aad
fwait
cmp
cvttps2pi
or
push
inc
mov
xchg
cltd
pop
enter
loopne
fimuls
sti
sbb
lock
add
lods
test
fdiv
and
les
adc
scas
xor
int3
pop
and
mov
loop
mov
ss
imul
add
adcl
gs
add
or
xchg
into
es
incl
fsubrp
dec
stos
loopne
je
loopne
test
int3
stos
mov
mov
rcl
fstl
mov
fwait
orl
orb
lret
xor
or
xchg
cmc
dec
jle
push
loop
rolb
xorb
mov
call
push
jp
mov
push
inc
adc
adc
adc
jecxz
sti
orl
push
or
mov
push
lahf
rcr
loop
push
push
sbb
cltd
xor
cmp
xor
mov
sbb
sahf
mov
das
clc
xor
mov
inc
orl
sbb
nop
pop
dec
xor
adc
xchg
xorl
nop
cli
push
push
or
jb
push
mov
addr16
loope
mov
xchg
test
orl
imul
ret
pop
jmp
daa
jo
add
outsl
rcrl
inc
sub
jnp
pop
dec
jecxz
adc
inc
adc
pop
mov
iret
sub
dec
je
js
push
test
mov
out
test
xor
cltd
lods
mov
dec
add
and
aad
gs
insl
push
outsb
nop
cmpsb
mov
cmp
mov
stos
leave
mov
jl
out
adc
lock
or
pop
inc
xchg
push
out
cltd
xor
mov
inc
mov
jbe
es
out
js
mov
js
cmp
imul
insl
inc
mov
jle
xor
mov
pop
mov
rcrl
adc
ss
mov
dec
cmp
test
scas
icebp
out
adc
fstpl
lea
movsb
scas
shlb
loope
fwait
add
adc
or
mov
test
mov
cmpsb
mov
adc
icebp
clc
mov
stos
je
xchg
xlat
inc
pop
mov
adc
sarb
pusha
mov
fsubrs
jae
or
pop
popf
loopne
push
cmp
sub
and
cmp
sbb
loop
mov
xor
mov
popf
jle
cmc
in
mov
sar
or
jl
xlat
or
call
sub
add
sbb
xor
add
mov
gs
repz
inc
or
or
jo
dec
xchg
cltd
clc
mov
addr16
dec
pop
adc
add
adc
xor
and
xchg
add
jg
test
cs
insb
shrl
inc
mov
pop
jle
sbb
or
push
lods
lcall
pop
movl
outsb
insb
outsl
scas
mov
xchg
mov
jge
mov
sub
push
into
fucomp
inc
cwtl
aas
pop
cmp
pusha
adc
inc
jo
test
push
es
sub
clc
xor
leave
jp
push
imul
movsb
std
negb
test
inc
es
adc
lahf
repz
aam
ret
loopne
xor
push
loope
and
jge
mov
push
mov
cld
cs
rorb
and
mov
lea
sub
dec
jle
sub
mov
lods
mov
jo
jbe
js
stos
lds
addr16
sub
cmp
aam
aaa
jmp
imul
push
dec
push
js
call
out
push
xor
loope
sbb
cmp
cmpsl
data16
push
push
inc
shl
jp
sbb
mov
test
push
into
mov
push
fstl
fldcw
loopne
sub
inc
xchg
das
fidivrl
sbb
or
dec
hlt
xchg
and
mov
sub
or
push
es
loope
mov
push
lea
aas
add
mov
sbb
or
push
adc
out
popl
cltd
mov
lods
repnz
cmp
loope
sbb
rcrb
rcrb
dec
test
jns
xchg
fmuls
test
mov
popa
push
popl
scas
test
sti
xchg
cld
ds
lret
inc
inc
bound
jecxz
jbe
add
cmpsb
or
test
or
mov
jl
or
jmp
add
xchg
adc
imul
ud0
push
adc
and
and
dec
push
pop
cld
sbb
sbb
mov
dec
jl
mov
ss
pop
add
mov
je
or
mov
int3
cmp
ds
xchg
mov
cmc
adc
cltd
mov
ficompl
lock
push
fcmovnb
cltd
cmp
mov
xor
sbb
nop
fisubs
xor
mov
dec
mov
inc
andnps
gs
xchg
aad
lods
in
xor
test
xor
xor
xor
loopne
pop
sub
test
cmp
ljmp
lods
leave
or
nop
and
mov
sub
push
icebp
or
je
icebp
jle
inc
clc
test
movsb
sti
mov
pop
gs
mov
aaa
aaa
pop
das
sub
inc
cmp
jecxz
inc
adc
lcall
jo
mov
sti
rorl
push
rorb
clc
push
xor
sahf
sub
xor
adc
jo
daa
mov
je
js
inc
cmp
pop
lret
mov
nop
out
out
sbb
xorl
push
xchg
cltd
or
inc
fistps
imul
sahf
imulb
jge
inc
jne
cmp
xor
flds
dec
sbb
jns
dec
cmp
jns
pop
jl
les
mov
inc
pop
cmc
xor
nop
pushf
lret
rcr
mov
pop
xor
aam
popa
push
and
inc
pop
shrl
mov
js
imul
inc
loopne
js
iret
mov
inc
sbb
jne
shll
loopne
mov
fisubs
fdivs
and
jmp
inc
test
jl
xlat
add
dec
jno
adc
xchg
cmp
cmp
add
sub
lock
xchg
and
jmp
dec
push
jg
push
hlt
arpl
xor
mov
xor
inc
and
lea
add
aas
pop
sub
xchg
fwait
movsb
xor
cmc
ja
add
push
dec
add
jo
xchg
mov
mov
lcall
sub
int3
inc
mov
icebp
clc
iret
dec
push
jg
push
jle
mov
lods
inc
repnz
notb
ds
call
movsl
fisttpll
sbb
xor
and
int3
hlt
pop
cmp
imul
push
gs
push
outsl
dec
add
or
aam
in
mov
add
mov
stos
pop
mov
mov
shlb
push
testl
xor
jle
cmpsb
fcmovbe
icebp
hlt
and
cmc
inc
in
repz
cmp
fdivs
fadds
xor
out
push
push
and
xlat
aas
fnsave
lock
push
or
jo
jns
fwait
inc
call
cmpsb
js
jbe
loope
adc
mov
push
jne
jl
add
or
lock
test
push
insb
rcr
or
xor
inc
dec
jb
icebp
dec
ljmp
sub
popf
stc
mov
lods
adcl
daa
push
clc
add
and
mov
cmp
jmp
mov
cvttps2pi
fstpt
mov
inc
subb
xlat
stc
cwtl
xchg
mov
fldenv
sub
sbb
int3
sbb
cmp
loop
inc
mov
hlt
jae
xchg
mul
shll
xorb
cltd
push
inc
sbbb
cwtl
loop
sbb
push
pop
xor
out
adc
jge
pop
mov
push
mov
and
inc
out
jmp
push
xor
add
icebp
inc
sub
sbb
cmp
movsb
loopne
aaa
adc
out
insb
xlat
arpl
sbb
push
lock
inc
bound
xor
mov
mov
in
test
ja
stos
sbb
sub
add
inc
adc
inc
xor
fidivrs
into
adc
mov
jg
add
mov
hlt
inc
pop
roll
icebp
arpl
cwtl
push
js
pushf
fadd
insl
sbbl
cld
push
int
or
mov
mov
in
or
or
dec
push
lds
aam
push
pop
mov
ds
jb
call
xchg
xor
testb
push
sub
repnz
xchg
inc
aad
add
out
in
sbb
pop
inc
pop
mov
lahf
dec
out
push
mov
flds
aad
stos
add
fsubl
xchg
jge
cmp
in
mov
shll
aas
cmc
xor
cmp
in
test
sarb
sub
pop
inc
pop
call
movaps
xor
lcall
cmp
adc
pusha
and
daa
rcll
inc
jmp
sarb
mov
ss
mov
les
mov
and
lock
jbe
clc
imul
push
xchg
mov
dec
cs
aas
inc
xor
jne
jbe
push
mov
into
test
fwait
add
pop
js
xor
cs
loop
hlt
sub
call
int
rorb
cmp
jp
ret
pop
and
push
mov
divb
inc
jae
cwtl
mov
push
mov
jg
mov
repnz
cmp
cmp
fdivl
push
inc
fimuls
cwtl
movsb
dec
into
fildll
mov
cmovp
inc
cmp
adc
je
test
adc
or
mov
mov
push
mov
xor
das
mov
mov
jl
jnp
call
dec
xchg
push
icebp
add
in
dec
mov
sti
xor
jecxz
fwait
pushf
dec
insl
loope
or
mov
fimuls
sbb
nop
sbb
push
dec
jl
xchg
jnp
outsb
ret
add
sbb
out
xor
and
pop
clc
clc
adc
subb
into
sar
cmp
mov
jle
out
outsb
mov
fwait
sub
sbb
jmp
lock
cli
add
push
adc
rorl
imul
iret
add
into
jo
lds
xchg
cmp
push
mov
sbb
or
dec
in
fsubrp
pop
in
sarb
insl
dec
ret
jmp
jecxz
push
pop
aad
ret
push
fisubl
adc
xchg
loopne
push
add
jno
mov
les
aaa
add
adc
or
or
in
and
les
movb
shrl
push
or
ds
inc
pop
push
pop
cmpsl
ja
inc
loopne
sub
icebp
fdivrl
int
jl
movsl
dec
cmp
jp
or
enter
push
je
xchg
cmpl
cmp
pop
js
add
pushf
je
or
and
repnz
es
lahf
and
and
movsb
pop
incb
sahf
addl
pop
mov
and
dec
adc
js
hlt
pushf
cmp
pop
bound
pop
sbb
bound
nop
into
cli
dec
mov
push
idivb
inc
pop
pusha
fcmovnb
cmp
hlt
mov
lea
jge
or
push
shrb
add
mov
test
jns
xchg
pop
xor
push
outsb
into
es
test
das
hlt
dec
jae
mov
pop
cmp
insb
push
inc
roll
jmp
js
pusha
mulb
add
insl
mov
jb
jp
movsb
shlb
enter
adc
js
cmp
sarb
pop
pusha
es
adc
add
adc
hlt
push
sub
cmp
ljmp
out
add
and
add
cmp
fwait
ljmp
add
in
or
adc
jp
outsb
scas
push
pop
push
or
or
dec
pop
add
mov
flds
xor
out
cmp
test
dec
adc
inc
insl
loop
mov
and
push
sbb
ja
aas
lock
cmp
xchg
lahf
dec
loop
es
loop
xor
mov
orl
dec
fmuls
clc
inc
clc
mov
mov
pop
dec
add
sbb
pop
clc
add
insb
hlt
sub
xor
lret
inc
xor
push
xchg
scas
clc
popf
push
das
inc
push
in
es
jle
in
rolb
test
push
in
add
sbb
jmp
rorl
pop
idiv
icebp
sub
xor
jle
shlb
and
cwtl
adc
mov
pop
push
sub
mov
sar
push
adc
aas
pop
bound
inc
or
lea
push
adc
sbb
xchg
decb
cmp
ret
sti
cmpsl
xchg
out
sbb
push
sarb
push
xchg
sbb
cmpsb
lahf
lods
cmpsl
jnp
mov
aas
mov
adc
push
out
in
hlt
add
std
adc
mov
pushf
ret
in
cwtl
mov
ret
lock
jno
inc
add
cmp
add
xor
scas
orb
cmp
testl
dec
insl
incl
or
pop
out
cmc
push
xchg
mov
add
xor
and
int
push
inc
xchg
pop
push
jmp
mov
fnstenv
add
js
es
and
jecxz
or
push
insb
lods
mov
notrack
pop
cmpsl
insb
xchg
cmpb
loop
leave
adc
lods
lcall
scas
cs
mov
and
rcl
push
repnz
cs
push
icebp
imul
dec
mulb
sbb
test
jne
and
xlat
jae
repnz
outsb
mov
int3
inc
out
or
mov
pop
icebp
nop
outsl
cli
xchg
fisttpl
call
cmpsl
mov
push
mov
pop
pop
shr
adc
scas
loop
js
clc
add
cmp
adc
push
mov
sbb
push
loop
test
bound
add
or
push
cs
adc
int3
dec
sarl
adc
out
dec
fs
or
and
cmp
add
xchg
push
mov
cld
dec
lods
aas
push
test
lods
mov
mov
inc
push
pusha
inc
je
arpl
add
and
push
cmp
cmp
nop
dec
js
mov
pop
mov
and
mov
jnp
sub
sbb
xchg
cwtl
or
pusha
sub
pop
push
pop
pop
xlat
loopne
addl
scas
imul
rorl
mov
aam
mov
mov
adc
sbb
or
mov
cltd
aaa
imul
pop
addl
xchg
setb
inc
dec
pop
push
loop
or
inc
inc
xchg
xor
push
icebp
sub
fnsave
mov
repz
pop
jno
add
daa
adc
scas
pop
jle
movsb
inc
sub
in
stos
cwtl
shl
fisubrl
inc
addl
sbb
movsl
adc
cwtl
sarb
shrl
and
inc
dec
icebp
mov
test
out
mov
stc
mov
subl
jmp
xor
fs
insb
sarb
popa
jb
push
jae
insl
mov
push
nop
dec
xchg
jbe
imul
xor
mov
je
arpl
jo
fdivrs
xor
inc
data16
lock
and
push
arpl
add
imul
or
fiadds
outsl
push
movsl
add
push
es
aaa
push
inc
push
dec
pop
dec
js
jns
push
jne
gs
imul
mov
inc
jbe
imul
add
gs
gs
aaa
insb
push
enter
outsb
into
jno
and
inc
fistpl
loop
inc
dec
inc
bound
bound
inc
mov
push
jg
incl
jb
gs
push
aaa
push
pop
push
inc
push
jae
outsl
arpl
or
inc
testl
push
or
add
push
push
cmp
dec
push
insb
das
clc
push
dec
jb
push
mov
inc
inc
bound
xor
sbb
mov
push
dec
push
inc
push
push
pop
inc
push
cs
outsb
bound
mov
adcb
jno
js
int3
push
inc
lods
dec
jns
add
dec
insl
loopne
push
inc
pop
dec
inc
dec
inc
inc
jo
std
mov
xor
push
insb
ss
xor
xor
cltd
xor
inc
sbb
jmp
aaa
fs
imul
dec
jae
inc
dec
inc
inc
sub
dec
std
jbe
clc
inc
arpl
dec
mov
imul
addr16
pop
es
shrb
push
dec
push
fadds
sti
outsl
xor
bound
outsl
jb
pop
rol
ja
push
fmuls
xor
jo
dec
xor
xor
ret
int
jbe
insb
je
ljmp
ss
mov
dec
push
fs
scas
cli
dec
push
out
push
bound
inc
cmp
outsl
jbe
clc
inc
dec
push
dec
push
inc
push
dec
enter
bound
push
dec
js
xor
aaa
push
outsb
sbb
aaa
enter
mov
push
daa
adc
push
inc
dec
stos
dec
dec
dec
push
inc
inc
pop
sbb
call
addr16
xor
inc
inc
inc
pop
push
xor
jbe
cld
aaa
adcb
push
inc
inc
inc
dec
dec
dec
pop
clc
dec
push
sub
sbb
push
fmuls
stos
dec
dec
fs
cli
or
push
jae
outsl
gs
jo
inc
outsl
popa
ss
jae
insb
add
stos
inc
enter
lock
shll
jne
inc
dec
inc
push
push
cld
pop
mov
push
mov
fs
dec
mulb
inc
jno
scas
push
outsb
insl
je
dec
bound
pop
inc
test
push
movsb
insb
mov
test
inc
inc
inc
adc
aaa
xor
ja
pop
dec
pop
and
cs
push
xor
arpl
push
pop
push
dec
or
or
inc
loop
push
addr16
insl
insl
inc
imul
outsb
das
adc
push
push
cmp
dec
dec
rolb
mov
or
inc
repnz
jb
dec
loopne
inc
int
push
push
imul
gs
jo
dec
les
dec
in
jo
outsl
fs
outsl
dec
js
insl
inc
outsb
push
bound
mov
dec
data16
adc
jle
bound
xchg
popa
fimuls
cwtl
test
js
aaa
scas
add
jecxz
movsb
cmp
enter
push
dec
push
jg
and
cmp
jns
push
je
dec
cmp
movsb
clc
icebp
pop
add
xor
xor
cltd
lock
inc
push
in
sbb
mov
imul
pop
xor
cmpsl
mov
xor
mov
dec
inc
imul
pushf
outsb
dec
mov
insb
jbe
lret
xor
mov
mov
mov
inc
push
push
jns
bound
js
jle
push
push
xor
aaa
xor
add
shll
adc
stos
sub
inc
sbb
pop
fucom
fadds
mov
sbb
lods
test
data16
dec
dec
xor
arpl
push
inc
jo
ljmp
mov
push
add
push
insb
bound
and
sbb
pop
je
mov
out
fsubrs
inc
fs
or
dec
pop
push
pop
and
jae
pusha
pusha
mov
inc
addr16
dec
out
jb
push
and
push
jb
push
push
dec
jo
inc
or
aas
cmp
insb
jo
bound
fs
mov
mov
push
dec
inc
inc
fs
stos
mov
arpl
data16
dec
adc
imul
inc
fs
fisttpl
rcrl
lcall
dec
mov
rorl
xor
rorb
hlt
ja
xchg
add
pop
pop
sub
mov
add
sub
sub
pop
and
add
js
incb
jo
inc
push
dec
dec
push
dec
sbb
dec
inc
dec
flds
push
jbe
dec
add
sub
movsl
les
movb
inc
arpl
aas
and
dec
call
cwtl
jmp
push
dec
daa
call
cmp
push
jmp
adc
imul
mov
lret
aam
ljmp
call
or
fisubrl
mov
or
cmc
and
push
std
jne
test
fdivs
add
call
jmp
jecxz
push
outsl
sub
test
pusha
gs
decl
pop
pop
lcall
jmp
sbb
jmp
dec
dec
pop
cmp
mov
cmp
mov
pushl
mov
leave
pushl
pop
add
es
mov
push
inc
mov
or
pop
sub
dec
dec
mov
decl
cmc
std
in
ljmp
aaa
xor
repnz
ljmp
adc
incl
mov
push
pop
jbe
mov
fstpt
lahf
adc
xchg
mov
lcall
mov
test
incl
mov
mov
incl
testb
pushf
lods
and
xchg
mov
inc
mov
jno
mov
xchg
xlat
sub
adc
dec
in
push
fs
sub
movsl
sub
incl
push
bound
push
inc
xchg
fcom
pushl
lahf
fcmovnbe
sarb
inc
insl
ss
mov
fcompl
jg
loope
mov
in
mov
jns
cmp
or
in
int
sbb
ret
xchg
outsl
cmc
ljmp
inc
mov
call
aaa
es
aas
mov
push
mov
ja
sub
or
pop
lock
insl
push
jo
and
cmp
stos
mov
sbb
imul
out
outsl
fistpll
cli
mov
pushl
push
shr
arpl
jmp
pushf
ret
pop
insb
clc
pop
fsubrs
xor
ja
dec
cmp
inc
lock
leave
iret
lcall
pushl
xchg
ljmp
jmp
sub
mov
sub
ret
jle
lock
or
leave
pushf
out
loope
mov
cmpxchg8b
sub
and
call
clc
test
jmp
add
arpl
push
je
nop
stos
push
mov
mov
outsb
ljmp
mov
inc
int
sbb
push
lods
and
inc
fdivrp
push
or
mov
adc
mov
and
in
fdivrs
movsl
push
es
out
xlat
pop
mov
push
adc
inc
scas
lea
out
fdivrs
cld
fcompl
fs
jp
outsb
cld
adc
cmp
mov
lcall
fistpll
jns
out
adc
ljmp
or
jp
in
das
clc
fistps
mov
and
jmp
inc
xor
aaa
adc
sub
out
fldt
pop
mov
sbb
and
xchg
mov
js
test
cli
ret
cmp
movb
mov
push
stc
out
mov
cmp
mov
mov
daa
outsl
fdivrl
mov
jo
aaa
or
jle
cmp
jbe
xchg
add
jnp
inc
fstpt
sbb
add
gs
dec
add
iret
mov
add
daa
xchg
and
jp
pop
cwtl
mov
std
lds
mov
mov
pop
sub
xor
dec
pop
pop
pop
push
push
and
mov
jp
sub
push
fsubrl
xchg
imul
pop
xor
incl
push
call
or
bound
decl
xchg
scas
dec
push
mov
into
pop
jns
add
adc
das
clc
or
mov
ljmp
push
jbe
loopne
pop
jnp
aaa
std
push
mov
jbe
testb
scas
mov
adc
fcoms
or
idiv
pop
dec
repz
sahf
pop
sbb
inc
cld
int3
mov
dec
out
pop
xchg
mov
scas
cmp
fdivrl
inc
mov
rorb
cmpsb
cli
add
push
xchg
jmp
sub
stos
mov
stos
adc
in
jbe
lds
pushf
dec
push
mov
stos
lcall
sub
imul
mov
adc
test
adc
or
mov
into
iret
das
ljmp
in
ds
sti
cli
jle
pop
mov
das
test
mov
testb
movb
push
xor
movsb
push
push
pop
pop
fs
mov
pop
pop
mov
aas
jo
cmp
aaa
mov
push
xchg
data16
stc
xchg
aad
xchg
mov
data16
sbb
enter
pusha
cmc
mov
stos
adc
cmp
add
cmpb
clc
insb
pop
sbb
outsl
clc
jg
aas
mov
les
fcmovne
ljmp
sbb
dec
scas
fs
cld
or
cld
mov
push
mov
pushf
dec
inc
outsl
adc
sub
push
shlb
test
jae
jmp
push
in
xor
enter
mov
or
andb
jg
inc
inc
sbb
fdivr
jbe
xor
jg
jecxz
pop
xchg
push
out
cld
into
xor
sbb
scas
fs
push
pop
fdiv
and
lret
mov
es
lock
loopne
jl
out
xchg
mov
inc
cld
mov
mov
into
jge
dec
cmp
scas
mul
fbld
mov
clc
pusha
inc
pop
push
int3
pop
ljmp
push
insb
xchg
cmp
jl
stc
mov
loop
into
mov
outsb
ss
dec
pop
gs
lcall
xchg
lods
insl
push
pushf
sbb
mov
movb
and
mov
stos
mov
cwtl
push
adc
or
inc
pop
fisubl
mov
test
add
jno
movsb
xor
movsb
je
push
inc
fs
inc
cltd
les
sti
in
leave
mov
jl
inc
lahf
call
mov
push
and
add
mov
xor
inc
push
jo
mov
decb
jne
cs
mov
inc
call
stc
lret
mov
jge
push
xchg
cmp
mov
xorb
cld
sbb
sahf
inc
and
iret
lds
xchg
rolb
pusha
in
push
shr
mov
mov
mov
loopne
shrb
or
sbb
jo
push
adc
pop
icebp
shrl
sub
push
add
push
cld
xchg
ja
in
ljmp
add
rsqrtps
jmp
into
jnp
jae
ret
sbb
test
icebp
push
ret
pusha
movsb
lock
mov
fimull
rcrl
mov
repnz
fbstp
dec
adc
dec
mov
fs
cmp
addl
lcall
data16
cs
in
xor
aad
push
and
stos
cmp
scas
jle
inc
jbe
cld
nop
mov
sub
pop
cmc
fildl
lret
ror
les
call
sbb
movb
movsb
jle
pop
add
mov
jb
mov
stos
ret
sub
mov
je
and
or
lret
pop
mov
fdivs
popl
jo
je
addl
je
mov
jbe
sub
push
testb
in
shrb
notl
jb
sarl
or
dec
mov
jmp
decl
jmp
xchg
mov
sbb
jne
xchg
mov
ss
popf
xor
aad
shll
push
add
add
test
pop
sbb
insl
inc
mov
hlt
jnp
mov
dec
inc
mov
pushl
jl
stos
mov
or
add
adcb
push
int
dec
push
or
dec
pusha
dec
jb
sahf
and
push
mov
pop
incl
lret
adc
push
imulb
adc
imul
adc
jo
lock
mov
rcrl
jmp
addl
or
mov
mov
lds
pop
movsl
rolb
inc
bnd
mov
rorb
out
and
jecxz
fs
mov
or
inc
fistpl
lret
cmp
std
dec
dec
adc
mov
ss
adc
sbb
jmp
sub
sbb
add
shl
push
addb
popa
sub
jae
pusha
or
aaa
xchg
cmp
icebp
cmpsb
pop
pusha
test
aad
inc
jl
jle
dec
pushl
ret
xchg
pusha
mov
push
mov
push
loop
push
sbb
lahf
inc
mov
and
shrb
xchg
call
inc
or
pop
mov
aad
xor
ljmp
clc
scas
out
fnstsw
rorb
push
mov
jl
mov
ficoms
mov
dec
mov
mov
pop
sub
xchg
inc
dec
mov
loopne
clc
push
push
jb
jecxz
idiv
out
mov
jbe
jle
jne
mov
push
les
cli
jg
sub
push
scas
jo
xchg
add
arpl
gs
roll
lret
mov
popa
xlat
jb
dec
jmp
inc
roll
xor
cli
or
cld
mov
ds
cs
push
jnp
sti
into
dec
push
or
out
pop
sbb
add
dec
inc
js
out
ret
sub
pop
sbb
imul
out
cli
mov
push
lret
push
ds
dec
sub
pop
cmp
int3
jl
and
push
mov
and
loop
shr
data16
mov
dec
je
lock
outsl
jp
adc
adc
dec
bound
xchg
imul
dec
pop
lock
sbb
push
lret
or
int
add
pop
xchg
into
pop
cmp
push
lock
lea
nop
imul
xlat
lea
or
jg
mov
stos
jl
jae
push
mov
in
inc
sarl
movsb
jle
mov
out
js
jno
fcoml
push
pop
iret
cmp
out
fdivr
in
pop
fisttps
push
lea
es
xchg
mov
ja
jbe
inc
ljmp
cmp
stos
rolb
inc
lret
mov
rcrl
aas
aam
clc
je
pusha
pop
xor
das
mov
sub
inc
ror
sar
jg
pop
or
outsb
add
mov
test
ror
inc
push
sbb
sub
sbb
push
push
push
inc
jbe
nop
xchg
mov
je
test
fimull
inc
mov
call
je
int3
adc
arpl
lret
cmp
inc
jae
gs
push
fildl
mov
adc
sub
test
into
adc
push
lcall
sbb
dec
adc
add
rclb
loope
cmp
or
stc
call
loopne
mulb
popf
adc
loop
ljmp
push
cli
sbb
lcall
ja
call
jae
bound
jle
mov
xchg
ss
mov
adc
mov
mov
std
xor
stos
push
xchg
or
xor
stos
cmp
leave
les
mov
pop
stos
sub
lret
fidivs
inc
pushl
scas
movb
lcall
or
mov
imul
or
pushf
mov
std
call
adc
xchg
jo
xor
cld
insl
ljmp
lret
jns
or
or
mov
push
fildll
stos
scas
jbe
loope
xchg
adc
ret
and
into
pop
ljmp
aas
movsb
pop
jecxz
inc
js
dec
xchg
cmp
mov
ss
and
inc
sbbb
dec
jge
je
test
sub
clc
push
mov
xchg
xor
dec
scas
push
jb
jbe
pop
and
lods
clc
sbb
mov
into
push
push
pusha
or
je
fidivrs
mov
insl
push
pop
fwait
jbe
cmc
mov
int3
jmp
dec
shl
add
and
outsl
lcall
test
sbb
in
xchg
ret
push
mov
dec
xchg
jecxz
fidivrs
jp
or
insb
push
pop
mov
fcoml
sbb
mov
add
push
dec
mov
lock
inc
ret
repnz
pop
cli
xor
mov
mov
sahf
jmp
xchg
xchg
xor
cmp
inc
out
rcrl
lods
pop
mov
inc
adc
mov
mov
test
cmp
test
sti
lcall
adc
dec
pusha
cmpsl
rclb
ss
and
mov
cmp
adc
ljmp
pop
pushf
dec
lock
adc
jbe
sub
xor
cs
push
mov
inc
in
mov
mov
cmp
or
sbb
test
dec
neg
sub
icebp
lds
ja
outsb
shr
jb
les
mov
cmp
cmp
inc
cli
movsb
pop
test
inc
int3
test
mov
or
dec
repnz
and
or
or
inc
fimuls
mov
inc
enter
push
sub
dec
or
repz
test
inc
xchg
mov
sub
xor
mov
dec
repz
jb
xchg
push
rcl
xchg
inc
mov
scas
int3
inc
sub
shl
jmp
cld
cld
dec
adc
jae
pop
jb
addr16
lret
leave
cli
jle
subb
mov
bound
les
sbb
mov
lods
cmp
or
out
fisubl
clc
or
jp
ds
ret
inc
push
jge
ja
pop
and
xorb
loope
cmp
add
mov
mov
jge
int
add
xchg
push
aam
and
pop
jmp
scas
xor
mov
enter
pop
shrb
loopne
mov
add
hlt
inc
pop
outsb
ljmp
xor
xchg
insl
rcrl
cli
cli
mov
cmpsb
out
pop
xchg
mov
sahf
inc
neg
mov
push
shr
fs
push
scas
cli
mov
xlat
adc
adc
fisubl
xchg
dec
lods
adc
fldl
insl
push
jg
shl
lcall
push
push
loopne
pop
cmp
fmul
dec
into
jg
scas
lods
adc
ret
sbb
inc
dec
fmuls
add
fsubrs
or
nop
lcall
ror
fwait
pop
mov
in
push
test
loopne
xor
outsl
mov
fildll
add
sbb
int3
mov
add
les
sahf
xchg
bound
lock
mov
data16
stos
xor
movl
insb
sub
bound
ret
pop
sub
mov
pusha
xchg
lcall
add
xor
pop
loope
test
lds
add
loop
mov
or
sub
mov
or
repnz
sub
ja
xor
sbb
aad
pop
jl
push
mov
rsqrtps
cmp
pop
rcrb
aaa
js
mov
ljmp
mov
enter
mov
xor
aaa
cld
mov
call
jecxz
mov
mov
mov
mov
nop
dec
pop
push
pushf
js
add
outsb
jb
stc
loopne
and
and
data16
jmp
out
cmpsb
das
xor
sbb
pusha
sub
lock
inc
push
inc
fcmovbe
ret
xchg
loop
dec
fcomip
incl
and
push
out
lock
dec
loopne
insl
inc
ja
dec
mov
hlt
loopne
cmpsl
push
mov
lds
mov
gs
and
dec
sub
in
or
and
dec
fisubrl
cmc
add
hlt
fisttpl
push
mov
nop
mov
call
mov
fmuls
pop
movsl
mov
ret
popw
es
pop
push
sub
and
lret
shll
scas
sbb
cwtl
sbb
mov
loopne
hlt
cmp
cmp
mov
mov
ljmp
pop
inc
roll
jl
sbb
xchg
cld
in
shrb
sbb
popf
and
mov
add
mov
scas
stc
jecxz
int
mov
pop
hlt
inc
jp
push
xchg
jmp
push
jnp
andb
sub
scas
fistpl
or
xchg
out
call
and
fwait
in
adc
sbb
or
mov
aam
push
push
cmp
call
xchg
push
xor
xor
fsubrs
mov
sub
fadd
aam
addl
push
movsb
sbb
sub
push
call
inc
push
pushf
adc
pop
mov
test
addr16
add
std
lahf
push
ljmp
mov
les
sbb
ljmp
fadds
fs
pop
das
sub
scas
mov
repnz
and
cs
push
jb
fiaddl
jp
mov
inc
xor
mov
arpl
bound
cmp
xchg
xchg
add
pusha
mov
dec
incl
add
adc
inc
jbe
stos
repnz
sub
inc
jl
fimuls
push
pop
dec
in
sbb
jge
inc
cmc
lock
mov
xor
push
lods
insl
xlat
stos
xchg
nop
dec
dec
mov
pop
in
test
mov
dec
dec
dec
les
adc
pop
fld
sub
adc
pop
mov
lcall
popa
mov
xchg
push
rclb
shrl
loopne
idivb
cmpsl
ljmp
xchg
mov
fidivrs
xchg
mov
jns
bound
shr
or
cwtl
push
pusha
mov
dec
nop
and
and
stos
and
repz
dec
inc
in
xor
mov
jmp
fs
mov
ljmp
sahf
mov
push
pop
jnp
jo
cmp
push
push
sar
mov
adc
jl
cli
mov
push
or
and
cmp
xorb
adc
fidivs
inc
hlt
movsl
sub
test
ja
fsubrs
push
ret
int
lcall
mov
leave
sbb
mov
jg
cs
pop
mov
mov
adc
push
xorb
test
jmp
shlb
lods
test
loope
xor
loop
sub
outsl
or
push
idivl
pop
icebp
fiaddl
icebp
ja
in
or
dec
call
daa
subl
fsub
mov
mov
test
pop
insl
sbb
jb
les
xlat
mov
push
cmp
test
and
into
dec
push
mov
xchg
je
dec
loop
movsb
xor
outsl
cmpsb
pop
in
or
push
cmpsb
ljmp
sti
mov
test
rorl
xor
mov
cs
dec
xchg
pop
adc
ret
arpl
das
mov
fidivrl
pop
jae
mov
mov
das
loop
xchg
shlb
inc
scas
sub
push
or
push
add
inc
cmp
xor
mov
or
xchg
jo
and
lock
xor
push
std
fiadds
fdivrl
js
xlat
cli
ret
jbe
add
ret
dec
into
xor
jl
lods
mov
and
and
outsb
adc
xor
fwait
mov
mov
push
sub
jne
lcall
mov
xlat
pop
push
sub
push
mov
test
xor
lods
fcompl
insl
ret
ret
in
add
xor
pop
popf
xor
pop
out
jmp
mov
out
push
jo
mov
push
in
pop
push
out
orl
test
mov
dec
pop
popa
neg
out
test
inc
add
loope
xchg
pushf
call
push
shl
dec
movsb
je
jmp
sbb
bound
push
cmp
jecxz
dec
add
fstl
outsb
add
hlt
outsb
lea
add
dec
test
fbstp
test
mov
add
mov
call
dec
loopne
xchg
ficoml
nop
xchg
lods
pop
push
insl
sub
ret
sub
sub
test
mov
ds
add
imul
xor
movsl
scas
clc
lock
add
mov
add
xchg
xchg
lock
test
push
nop
add
fcompl
rorb
fcoms
sbb
push
jl
stos
xchg
js
mov
pop
movsb
mov
fucom
aas
or
lahf
or
idivl
movsb
testb
mov
adcl
mov
pop
addr16
jnp
adc
fs
ljmp
inc
cmpsb
cltd
fsubrl
sub
call
jmp
decl
and
loope
xchg
lret
in
je
xor
pop
rcll
sarl
pop
hlt
pop
call
push
insl
adc
les
pop
orb
push
push
or
pop
gs
cmpsb
cmp
inc
jl
out
xchg
cmp
adc
push
or
pop
push
jo
cwtl
gs
clc
es
jp
rcr
mov
push
fidivs
inc
icebp
adc
lock
dec
in
incl
rclb
cmpl
mov
arpl
sbb
pop
mov
add
lahf
ljmp
inc
jno
xchg
ss
inc
xchg
out
pusha
pop
clc
mov
cmp
jl
xor
jne
mov
mov
sub
sbb
pusha
sub
mov
jge
je
jbe
mov
or
mov
mov
test
or
lods
imul
pop
mov
out
jo
or
dec
jp
adc
lods
dec
add
jbe
or
inc
jp
or
and
jmp
rcll
mov
adc
scas
mov
push
mov
adc
or
sbb
push
shlb
mov
mov
test
aam
test
mov
in
gs
push
mov
push
add
mov
loopne
aad
xchg
ljmp
pop
or
iret
jmp
dec
jp,pt
fdivrs
mov
mov
jmp
adc
js
imul
lahf
mov
cwtl
jg
xor
lahf
xchg
mov
and
cli
push
mov
pushl
mov
inc
cmc
sub
lods
mov
mov
pop
xor
call
ss
xchg
dec
or
cli
add
hlt
add
fisubl
inc
mov
mov
mov
cmc
dec
rclb
mov
push
ret
nop
xor
in
mov
mov
and
decl
ss
roll
cmp
int
jbe
call
js
incl
sub
inc
mov
stos
jno
cltd
jge
xor
pop
sarb
gs
pop
push
ret
mov
pop
fcoms
ss
xchg
outsb
cli
mov
push
dec
mov
les
fdiv
jmp
or
in
push
jno
ds
lcall
rcrl
sub
mov
cltd
fistpll
out
adc
les
push
xlat
cmpsb
xorb
pop
mov
mov
int3
data16
outsl
push
mov
loop
mov
fidivl
mov
mov
cld
mov
mov
sub
fmuls
mov
incl
mov
popf
inc
inc
inc
jbe
jns
mov
cwtl
js
mov
mov
dec
rorb
repnz
rclb
repz
movsl
add
pop
jno
pop
pop
cmp
jge
or
sub
pushf
popf
or
mov
jl
xor
adc
jge
daa
push
mov
stos
cmpsb
add
xchg
or
loop
push
or
lret
xchg
pop
fcmovu
mov
pop
push
aad
inc
sbb
aad
fs
sbb
mov
push
sbb
xlat
into
neg
rcll
cld
aam
pop
sub
sbb
test
jne
add
xchg
add
sbb
ss
jbe
icebp
in
dec
mov
or
icebp
data16
jb
fdivp
or
call
push
das
and
loope
push
push
jb
sub
lds
shl
dec
fs
xor
in
pop
xor
js
nop
cmp
push
mov
sbb
fldcw
or
pop
mov
cmp
int3
push
out
mov
sub
inc
xchg
lea
pop
fdivrl
mov
push
sbb
xchg
push
or
xchg
movb
fbld
pop
stos
and
jecxz
dec
jb
lcall
sub
xchg
pusha
enter
dec
mov
cwtl
or
push
adc
lock
lcall
mov
adc
ret
popa
xchg
inc
jle
neg
xchg
pop
rorb
in
jge
movsb
dec
mov
push
inc
add
decl
mov
mov
jbe
xlat
les
int3
inc
imul
mov
or
stos
rolb
cmp
cmp
mov
js
mov
sub
adc
xchg
push
lea
jbe
cwtl
outsb
cmpsl
sbb
push
xchg
jne
add
xchg
cmc
leave
inc
mov
pushf
je
ljmp
lcall
jo
push
fs
inc
subl
inc
pop
movsb
insb
fstl
or
insb
icebp
mov
and
repnz
fidivrs
mov
mov
call
notb
and
fsubs
es
ret
orl
outsl
cs
pop
mov
lcall
sub
js
cmp
sub
jl
addb
mov
mov
stos
or
mov
pop
adc
and
inc
sub
add
lcall
out
arpl
jo
dec
sub
adc
mov
shll
movsb
mov
icebp
and
fnstsw
test
sub
or
mov
test
in
and
pop
sbb
test
mov
mov
test
mov
mov
xchg
bound
adc
xor
mov
stos
scas
mov
push
outsl
clc
pop
lock
push
aaa
jmp
pop
mov
adc
mov
jecxz
xchg
out
pop
or
adc
loope
sbb
pop
jmp
push
popa
cs
or
arpl
fsubrl
incl
adc
adc
outsb
leave
and
sbb
fs
lret
cmc
pop
je
iret
lods
ud2
mov
cmp
js
lods
mov
pop
pop
push
clc
mov
fimuls
push
mov
insl
xor
mov
adc
sub
out
push
bound
fcmovb
pop
pop
xchg
imul
lock
xchg
movsb
je
icebp
push
shlb
pop
push
push
sub
lret
aam
pusha
js
sarb
mov
or
sbb
sub
cmc
push
cmpsl
cmp
les
movsb
sbb
fs
cwtl
xor
jb
push
jmp
push
movsl
push
mov
mov
inc
mov
into
jo
adc
repz
sub
mov
lock
mov
dec
fcompl
test
mov
repnz
add
mov
dec
push
jmp
sbb
adc
add
loopne
push
dec
add
xchg
das
std
in
and
insb
xor
stos
fnstcw
lock
std
sbb
call
jae
or
lods
fcomp
fs
rcrl
cwtl
mov
or
pushf
pop
sti
jmp
les
sbb
pop
into
or
cmpsb
xchg
rorl
shr
cld
popa
add
imul
jmp
sub
mov
outsb
xchg
out
cmpsl
dec
int3
push
add
movsl
ss
xor
scas
or
or
sub
lds
mov
daa
jae
shlb
pop
cmp
aam
lea
mov
lret
loope
lret
mov
leave
adc
stos
outsb
sahf
call
loop
nop
adc
inc
mov
lahf
mov
sbb
ljmp
mov
mov
test
inc
mov
ljmp
inc
ds
mov
icebp
add
je
ss
sbb
jo
cmp
sub
js
fs
aaa
xor
mov
incl
nop
mov
jb
lcall
mov
fcompl
inc
repnz
es
cwtl
push
dec
dec
mov
imul
dec
lahf
cmovg
xchg
xlat
stos
sbb
jecxz
clc
xchg
cmc
or
data16
adc
inc
cld
mov
pop
add
push
insb
add
sub
sub
mov
jle
mov
mov
and
pop
insb
and
fisubrl
sbb
dec
sub
sbbb
jg,pt
scas
ljmp
into
dec
ss
jl
icebp
push
sub
jo
xchg
jnp
fildll
push
cmp
mov
cmp
sub
pusha
je
in
rcr
mov
lods
cmp
fs
mov
pop
hlt
pop
bound
lock
fiadds
push
xchg
dec
jp
pop
js
jo
add
lahf
out
and
jno
pop
ljmp
pop
fs
and
lcall
shrb
dec
mov
push
js
aad
inc
dec
ds
pop
lods
cld
jbe
lcall
lods
mov
pop
inc
stc
adc
and
in
jmp
pop
inc
fistps
add
iret
mov
inc
adc
fdivr
scas
pop
enter
fisubs
sub
stos
push
outsl
ds
or
mov
push
xor
pop
push
add
arpl
mov
andb
jmp
push
or
pop
sub
push
cmp
out
adc
cmp
shrb
js
jo
gs
imul
movsb
divl
pop
fs
sbb
nop
xor
cwtl
push
fistl
outsb
fs
push
xchg
scas
pusha
cmpsb
mov
shrb
add
xchg
add
jmp
jno
mov
push
adc
and
mov
xor
shlb
push
and
fsubrs
xchg
fdivrs
hlt
adc
adc
call
in
sbb
mov
adc
cmp
in
jg
mov
mov
and
pop
ja
loope
adc
push
fdivp
roll
adc
adc
lods
jp
outsl
mov
gs
xchg
adc
add
and
push
cmpsl
adc
push
pop
ljmp
mov
pusha
mov
jp
es
xchg
sbb
test
pop
pop
mov
ret
jb
call
outsb
and
sbb
jae
in
das
mov
iret
icebp
scas
test
sbb
dec
jae
data16
dec
pop
mov
loop
mov
push
je
test
outsl
mov
inc
adc
mov
cmpsb
mov
push
mov
push
pop
or
or
jge
js
push
mov
inc
xchg
xchg
cmpsb
jle
int
fwait
push
add
push
push
jbe
mov
xor
or
mov
movsl
mov
fsubrp
cmc
ja
inc
push
and
and
data16
sub
call
insl
enter
leave
add
shlb
insl
mov
imul
inc
fs
sub
pusha
xor
les
dec
cmc
pop
mov
pop
sub
add
xchg
jmp
inc
adc
mov
fidivrs
ret
mov
xor
daa
cmp
fcmovnb
out
sahf
popa
push
adc
mov
sub
adc
into
xchg
incl
ficomps
mov
arpl
loopne
xchg
and
mov
mov
mov
loopne
sbb
decl
mov
xor
mov
icebp
scas
outsl
push
adc
push
enter
ficoml
inc
push
inc
loopne
pushf
mov
ljmp
sarl
fs
cmp
sub
dec
push
lahf
push
mov
xor
sbb
lahf
shrl
cld
or
popa
ret
jo
adc
ret
aas
mov
xlat
enter
in
test
sub
fs
fildll
jmp
bound
stos
xor
push
imul
les
call
fsubs
insb
lcall
xor
test
xor
mov
popf
daa
test
pop
jmp
lahf
cmpsb
cmp
push
inc
das
mov
jbe
popa
in
imull
inc
inc
movsb
ss
push
stos
stos
das
pusha
mov
lds
shl
push
cmp
cmp
idiv
inc
xchg
pushf
sbb
jns
lods
sbbb
add
inc
mov
scas
test
dec
push
loope
or
rclb
shl
sub
dec
lods
push
mov
and
xchg
inc
cli
into
out
pusha
cmp
cmc
sbb
adc
mov
xor
pushf
ficoms
fwait
mov
push
dec
aad
scas
mov
dec
call
outsl
fbld
adc
sub
orl
stos
enter
push
push
push
decl
mov
jns
or
sub
in
out
mov
loope
mov
jp
xorb
fildl
mov
xchg
cld
xchg
jle
pusha
sti
xor
pushl
xchg
mov
rcrl
jp
in
sub
push
and
out
jae
jp
mov
sbb
pushf
dec
xor
cwtl
add
in
call
pop
pop
jne
js
cld
cld
xlat
mov
pusha
push
popa
mov
cli
enter
lds
push
cld
add
jg
fstl
jmp
pop
insb
or
add
loop
dec
or
mov
lods
loopne
push
cwtl
jmp
mov
mov
add
and
jl
and
adc
inc
pop
adc
adc
jo
ds
dec
jne
or
or
loope
lret
cmp
mov
mov
fwait
daa
les
ret
icebp
push
inc
pop
jo
lret
cwtl
decl
adc
pop
xor
jo
and
inc
fnsave
rcrl
test
sbb
pop
and
stos
sbb
sbb
cmp
in
fwait
push
fistpll
pop
push
pop
cmp
xchg
imul
movsb
jb
or
mov
aam
xor
and
mov
int3
enter
test
pop
je
test
rorb
pop
push
into
les
inc
cltd
inc
or
and
fcomps
and
inc
pop
and
imulb
jnp
sub
rolb
push
xchg
in
push
xchg
push
je
decl
adc
cmpsl
mov
fnsave
pop
sbb
or
dec
sub
pop
cs
aam
push
xchg
stos
movsb
mov
fmull
addb
jae
jo
fildll
cltd
dec
in
sbb
push
push
add
mov
sub
push
mov
js
in
iret
or
je
aas
mov
ss
dec
scas
int3
or
icebp
add
test
cmp
popf
ficoml
ss
mov
stos
pushl
or
nop
sahf
mov
adc
mov
xor
xor
mov
sbbl
iret
xchg
fildl
loopne
xchg
xchg
push
enter
scas
push
push
and
inc
in
inc
sub
xlat
push
mov
repz
aam
push
jo
mov
js
push
xor
pop
clc
jg
ret
mov
xor
out
jecxz
adc
in
jecxz
cld
push
or
pop
mov
loop
adc
ret
jb
mov
push
sbb
out
xor
add
pusha
add
sahf
ficoms
and
push
cmp
fdiv
mov
sahf
lcall
pop
mov
mov
in
repz
dec
insl
or
add
mov
mov
xchg
aam
lods
lret
test
cs
mov
outsl
adc
jbe
add
mov
fwait
imul
mov
adc
aad
lods
mov
mov
cli
push
loop
ja
mov
decl
add
push
mov
aas
cmp
enter
cmp
xor
stos
in
push
sub
pop
pop
push
outsb
pop
fildll
popa
test
adc
push
sub
inc
xor
sub
mov
sbb
or
and
xchg
push
push
ljmp
or
xor
pop
jb
rclb
outsl
mov
xchg
sbb
hlt
pop
imul
movsl
mov
sub
and
arpl
add
ffree
push
out
mov
pop
lea
orl
adc
in
xchg
add
sub
cld
es
sbb
js
outsb
xor
inc
mov
mov
imul
cld
inc
pop
sar
mov
push
mov
decl
jl
jmp
push
fwait
dec
out
cs
mov
or
mov
arpl
adc
xor
mov
adc
jmp
push
push
insl
outsb
push
or
and
in
rcrb
sarl
cmp
lock
data16
fidivrs
dec
ret
ja
or
jl
dec
stos
add
mov
std
testl
into
jnp
push
mov
xchg
rcrb
popa
iret
push
ja,pt
xor
mov
cwtl
push
pop
sbb
cmc
call
cli
xor
test
sbbb
mov
in
mov
fildll
sar
adc
xor
add
push
enter
incl
sub
test
bnd
jecxz
loopne
add
jbe
test
jbe
xchg
daa
mov
popa
push
xchg
pop
sub
pop
xor
sub
lods
scas
mov
add
scas
stos
stos
push
jo
pop
adc
mov
add
mov
je
loop
xor
cmp
roll
and
int3
out
clc
movsl
fstpt
dec
cmpsl
sbb
frstor
enterw
push
je
stos
cwtl
mov
jbe
mov
jecxz
inc
aad
fildll
test
mov
dec
mov
xor
jb
jno
scas
xor
xor
jo,pn
sbb
int
es
testb
cmpsl
or
xchg
jecxz
and
mov
sahf
mov
fldenv
dec
test
ret
test
ret
inc
fistpll
cld
fisubl
rorb
pop
loop
jo
jnp
shl
sub
scas
lahf
pop
into
lock
adc
inc
xor
xor
xchg
sub
add
push
push
pop
push
divb
call
call
aam
mov
sbb
push
mov
mov
or
mov
xchg
cmp
mov
dec
inc
shl
leave
sub
test
add
incl
cmp
enter
and
sti
insb
sti
stos
jle
jg
push
push
imul
sub
sub
cmpsl
into
dec
xchg
cmp
fbstp
and
and
mov
lods
dec
lds
push
ljmp
fwait
cmp
dec
aas
push
mov
add
jmp
cmpsb
enter
andl
les
movsl
mov
push
fwait
sub
sbb
cli
mov
dec
cmpsb
xor
scas
xor
push
test
inc
test
pop
fistpll
aad
push
lret
xchg
xchg
cmp
or
mov
add
pop
lods
fcoms
add
mov
cld
or
jmp
mov
and
add
insb
mov
fldl2e
lock
ss
int3
outsb
into
je
inc
pushl
les
inc
xor
mov
xor
cmp
outsb
xor
ret
jb
pusha
scas
iret
xor
add
push
and
add
mov
and
mov
mov
adc
mov
mov
mov
add
cmp
loop
jne
stos
cmp
sbb
and
dec
push
mov
dec
scas
add
call
shll
push
and
cmpsb
push
leave
xchg
clc
jne
add
mov
xor
jae
push
in
ljmp
cmpsl
popf
mov
pushf
addl
pop
lcall
sub
popa
xor
out
xor
pop
dec
test
loop
insl
aad
inc
lcall
dec
lret
add
xchg
add
out
inc
inc
inc
dec
lds
cwtl
cmp
in
test
andb
pop
xor
inc
mov
mov
sub
shlb
mov
mov
mov
mov
mov
adc
jbe
in
je
push
xor
xchg
stc
test
sub
adc
ud0
stos
ljmp
idivl
les
sub
outsb
clc
pop
lods
fwait
adc
inc
mov
or
loopne
shl
aas
psllq
pushl
cwtl
mov
leave
in
mov
pushf
xlat
sbb
stos
out
adc
mov
dec
or
ret
es
push
pop
xor
mov
cli
lret
mov
mov
xor
dec
and
aaa
adc
nop
test
pop
daa
jo
mov
outsl
inc
in
add
sbb
sub
inc
xchg
aaa
mov
mov
in
test
and
pushf
aad
pusha
lds
xor
or
or
push
inc
sbb
js
shrb
push
jl
fucomi
in
sbb
cmpsl
adc
fcmovnu
inc
push
add
mov
in
stos
push
inc
lret
call
mov
adc
fstpt
mov
add
push
in
fs
or
and
adc
daa
xlat
cmpb
fiaddl
neg
pop
insl
mov
and
push
cmpsb
aam
push
lods
pop
mov
into
mov
and
mov
and
dec
ljmp
iret
jl
mov
cld
cmpsb
scas
push
out
mov
jmp
movsb
sahf
into
cmp
mov
pusha
push
in
dec
stc
and
and
fsubs
pop
push
lahf
mov
pop
fiadds
or
stos
ljmp
clc
mov
sahf
ds
jg
xchg
fldt
mov
das
js
add
cmc
inc
sbb
lret
hlt
jo
jge
jecxz
xchg
xchg
outsb
fidivl
pushf
popf
dec
addb
inc
loop
mov
stos
lret
in
gs
xchg
mov
cmc
add
mov
insb
and
xor
bound
loopne
cwtl
enter
rcll
mov
sti
sub
push
jl
out
stos
int3
ja
cmp
fstp
lea
xor
pop
std
push
nop
inc
sbb
movsb
jmp
or
test
mov
stc
push
mov
in
adc
mov
pusha
push
mov
loopne
ds
fsubr
mov
jmp
les
sub
fwait
outsl
cmc
lods
ret
aad
sub
sar
ljmp
or
sbb
mov
adc
xor
push
int3
stos
popf
add
and
push
or
mov
insl
popf
xchg
data16
mov
lds
ljmp
mov
mov
jnp
xchg
add
dec
push
aas
aas
mov
jg
inc
call
das
and
cmc
add
jmp
je
and
loope,pt
inc
in
out
and
adc
inc
push
push
pop
sbb
fmulp
mov
jl
clc
ja
cmpsl
xor
adc
cmpsb
notb
fcompl
mov
mov
ret
mov
idiv
jns
add
pop
ljmp
loope
pusha
and
gs
xor
rorl
pop
xchg
test
negb
stos
ljmp
cmpsb
and
stc
or
xchg
cmp
dec
sbb
mov
cmp
mov
sub
aaa
sub
popf
mov
cwtl
arpl
int3
dec
mov
mov
cmp
fisubl
mov
dec
xor
push
ljmp
popf
iret
sahf
out
mov
int3
dec
sbb
sub
jle
cmpb
or
add
scas
cmpsb
jl
and
jno
inc
pop
sub
test
incb
ret
ret
cmp
sbb
push
or
faddl
mov
mov
mov
push
idivb
jmp
fildl
and
inc
adc
incl
mov
cmp
or
jecxz
insl
push
jne
add
jnp
push
test
mov
or
clc
xchg
daa
mov
xchg
inc
cwtl
sbb
test
push
sbb
stc
dec
cltd
mov
push
xor
lods
sub
xchg
dec
or
jbe
push
add
jne
sar
fs
pop
mov
adc
push
inc
xchg
mov
mov
ljmp
add
loop
cs
fcomps
movsb
cmp
xor
and
mov
scas
adc
test
mov
fistpl
lods
dec
js
jle
jp
jb
out
ret
movq
jns
xor
push
or
sbbb
shll
out
mov
pop
sub
test
sbb
sub
dec
sarb
ja,pt
push
sbb
ss
mov
mov
or
jbe
cmpsl
dec
mov
push
mov
cld
cmpl
sarb
sahf
xorb
vpcmpgtq
jbe
in
sbb
sbb
lcall
jp
lods
sbb
fsubrl
popf
out
pop
sbb
aaa
jl
jle
or
insb
xor
je
xchg
daa
mov
fstpt
xor
or
xor
shlb
ds
data16
in
add
xchg
cmpsb
xchg
or
push
repz
stos
data16
jmp
cmp
or
pop
testl
push
xor
or
mov
mov
cmp
xchg
lcall
sbb
mov
fcmovne
sbb
push
mov
and
and
fisubl
dec
mov
outsl
push
pusha
jl
and
in
mov
fdivp
outsb
mov
bound
movsb
aas
cmc
mov
sbb
sub
out
or
std
mov
mov
xchg
repz
addr16
js
or
xor
pop
ss
push
xchg
sub
sub
pop
icebp
adc
int3
jmp
enter
inc
pusha
push
push
insb
mov
mov
out
push
push
add
divb
mov
daa
push
jle
push
rorl
dec
sub
mul
imul
cmpsb
xchg
into
xlat
lret
bound
pop
test
sub
outsb
push
mov
aad
push
and
lods
jg
adc
pushf
mov
pop
repnz
clc
subl
andb
lods
mov
les
sbbl
and
or
mov
int3
fidivs
add
mov
push
xchg
fwait
add
shlb
call
sbb
int
sbb
ljmp
sahf
scas
and
insb
cmpsl
lods
xchg
addr16
jo
fcmovb
ret
repnz
adcl
lret
lcall
fisttpl
mov
arpl
dec
fs
inc
xor
cli
xor
or
dec
push
movsb
add
rorl
cmp
fiaddl
clc
dec
incl
out
divb
push
xlat
int3
dec
pop
jns
mov
js
lcall
imul
std
push
faddl
jb
mov
dec
sbbl
fnstcw
inc
cli
push
cli
sub
xchg
xor
xlat
push
sbbl
fiadds
out
mov
fbstp
in
ljmp
lock
and
inc
xlat
pop
sub
adc
jb
insb
mov
inc
ljmp
push
popa
and
push
jle
sbb
and
nop
sub
loopne
fiaddl
lds
sti
cmp
out
loopne
push
js
movsl
adc
jno
mov
push
test
jae
stos
fildll
jnp
cmp
adc
jmp
divb
lock
jmp
xchg
shll
pop
cld
inc
adc
fucomp
gs
jb
rcl
xor
shll
or
jmp
clc
lock
dec
mov
lods
in
sahf
ficompl
popf
or
push
inc
xchg
mov
cmp
adc
mov
push
sti
dec
inc
mov
or
cmp
mov
or
ljmp
pop
fcompl
add
in
incl
cmp
pop
or
mov
mov
xchg
mov
icebp
sbbb
sbb
xor
pop
lcallw
shl
push
add
inc
rcll
aam
cltd
mov
mov
hlt
jecxz
jle
xchg
xchg
pop
xchg
pop
inc
pop
icebp
idivb
clc
or
or
bound
lds
out
xabort
sarb
lods
enter
cmp
loopne
in
add
sub
das
mov
nop
and
call
mov
mov
call
jl
ret
inc
pop
push
decl
cmpsb
out
les
inc
out
shrb
jmp
add
test
pushl
clc
outsb
pop
cmpb
insl
and
enter
sub
hlt
and
out
lods
loopne
sbb
arpl
mov
push
xchg
push
fldl
sbb
sti
xor
in
and
shrl
std
shlb
test
mov
dec
mov
aaa
sub
jp
cld
jbe
or
push
aas
in
bound
fidivrl
or
adc
movsl
xor
dec
testb
gs
hlt
sub
dec
test
and
xor
mov
fildll
jl
fidivs
sarl
dec
push
sub
es
push
test
fisubrl
cmp
push
sbb
push
std
xor
mov
icebp
cmp
loope
fwait
adc
add
jne
xorb
pusha
bound
mov
sahf
or
push
and
pop
ss
add
sahf
mov
fcmovb
xor
nop
in
xchg
shrb
push
dec
mov
out
ds
dec
xchg
icebp
adc
or
add
or
iret
xchg
sub
pop
mov
fsubs
dec
xor
pusha
mov
mov
push
insb
bound
cmp
jae
inc
sbb
frstor
push
push
imul
mov
cmp
dec
cs
test
bound
pushf
sub
push
sbb
mov
je
enter
repz
inc
mov
inc
call
sti
addr16
mov
dec
in
fsubs
loope
adc
mov
adc
loop
rorb
sbb
aam
pusha
nop
mov
sbb
mov
arpl
lret
jo
int3
mov
pop
sbb
xor
pop
fidivs
sub
push
fadds
adc
insb
testb
movb
addl
mov
daa
inc
jg
cmp
jb
adc
mov
push
fs
les
inc
mov
imulb
jmp
fs
mov
xchg
cmp
popf
mov
test
jmp
into
add
sbb
push
cld
or
mov
xor
add
sbb
mov
mulb
xchg
pop
inc
sbb
inc
push
push
and
or
and
mov
mov
std
inc
icebp
sub
sub
mov
testl
sbb
int
add
iret
jne
loop
xor
jp
popf
mov
lods
call
dec
pop
xchg
lods
xchg
xor
mov
push
les
ficoml
scas
mov
ss
push
jb
cmp
pop
rcl
push
xor
xorb
pop
sub
mov
mov
lock
fdivrs
rol
cmp
sarb
fnstsw
push
jne
jl
jge
pop
cmp
sbb
ret
push
stos
lock
mov
stos
popf
add
mov
out
push
nop
cmpl
arpl
pop
push
loopne
jg
shll
movl
inc
push
or
mov
out
jnp
and
ret
call
mov
xchg
mov
addl
fdivs
mov
fmull
sbb
out
mov
push
mov
cmp
loopne
shrb
mov
xor
inc
adc
jmp
adc
xor
aad
std
mov
ljmp
lods
mov
ja
mov
adc
lret
jg
push
push
js
xchg
dec
cmp
push
xor
pusha
push
shl
ljmp
fbld
insb
pop
cmpsl
outsl
fwait
mov
loopne
shrl
push
mov
loope
xor
mov
push
xchg
ss
push
imul
inc
jb
and
add
rolb
int3
pop
mov
fisttpl
data16
pop
dec
ljmp
fnsave
mov
pusha
test
pop
inc
and
shlb
bound
mov
pop
in
or
test
sbb
inc
push
cld
xlat
rcr
pop
js
les
add
shlb
xor
mov
cmp
or
loopne
ljmp
ret
cli
inc
xchg
ret
inc
clc
jge
or
pop
out
aas
call
mov
mov
into
movsl
xchg
out
insb
adc
repz
int
mov
sbb
lahf
xchg
mov
es
aaa
scas
xor
lret
call
sbb
and
and
sbb
pop
test
sub
or
sub
in
fistpl
js
jge
ret
push
out
sub
adc
inc
add
mov
xor
or
scas
lock
das
lcall
dec
test
push
sti
call
mov
cltd
rorl
insb
inc
add
mov
push
sbb
inc
cwtl
stos
dec
pop
js
decl
lret
dec
hlt
adc
xorl
int3
aaa
sbb
mov
cmp
fdivrl
mov
shll
je
jg
in
push
movsb
insb
lcall
jl
mov
das
xchg
sarl
add
aas
jae
dec
mov
fdivp
enter
call
pop
mov
push
push
mov
and
jnp
test
mov
add
mov
rclb
in
or
faddl
add
mov
scas
test
cmp
repnz
add
inc
ss
fcomp
push
mov
push
cmp
or
lods
inc
xchg
pop
xchg
filds
negb
fiadds
test
insb
clc
pop
ret
mov
sbb
xchg
jbe
bound
push
add
mov
pop
or
sub
mov
xchg
push
scas
lods
jae
rol
ss
mov
enter
mov
subb
dec
push
fwait
jle
mov
test
loop
adc
leave
or
outsb
lds
xor
mov
jo
mov
or
ret
push
sbb
loope
mov
cs
xchg
lret
adc
into
into
orb
imul
push
stc
mov
pushf
jbe
sbb
jnp
adc
into
lea
stos
scas
push
pop
mov
pop
cmpsb
dec
and
sbb
inc
mov
in
test
mov
xchg
xchg
push
sub
and
inc
xlat
xor
js
lock
cld
cmpsb
xchg
fs
ljmp
outsl
bound
leave
mov
cmp
push
dec
mov
sub
push
cmp
aaa
call
ljmp
and
fnstsw
jmp
in
mov
fidivs
push
add
out
sub
sbb
mov
cli
dec
xchg
fadd
fists
clc
mov
cltd
pop
dec
mov
mov
mov
push
push
jl
inc
mov
sbb
rorb
pop
movsl
xorb
pop
stc
sbb
cmp
mov
cld
call
cli
aam
js
call
test
dec
into
aad
push
jnp
ret
shlb
jbe
push
mov
sbb
stos
sbb
out
push
subl
test
fsubr
les
ret
add
inc
add
adc
outsb
inc
mov
dec
ficomps
cld
ja
xor
lods
or
or
jbe
inc
cltd
cld
fistpl
data16
or
je
xor
jnp
enter
xor
daa
jmp
jp
fcomip
push
xor
ja,pn
in
xor
pop
sbb
ljmp
popf
out
jo
cli
filds
push
mov
jp
mov
ljmp
mov
ss
jl
mov
cmp
js
stos
inc
incl
adc
mov
hlt
in
jo
idivb
mov
rorb
shl
adcb
mov
jle
arpl
loope
clc
sbbb
sub
xchg
ja
mov
inc
ret
push
adc
pop
and
in
gs
add
hlt
lret
js
xor
sahf
mov
mov
push
lahf
jge
hlt
or
lret
scas
push
sti
cmp
add
xor
ja
out
fidivrl
out
add
sbb
mov
add
subb
jo
sub
xor
mov
test
mov
mov
mov
or
pop
cwtl
xor
in
scas
sbb
es
sub
mov
mov
outsl
mulb
sub
ljmp
cs
out
xor
xor
xchg
cmp
mov
add
inc
sbb
out
adc
mov
jo
adc
fsub
add
push
inc
or
lret
push
ficoms
add
mov
sbb
sbb
xor
stos
jle
outsl
mov
pop
cwtd
movsl
cwtl
xor
imul
adc
push
mov
je
cmc
mov
lret
jo
shll
dec
jmp
dec
jbe
sbb
mov
stos
jl
xor
mov
nop
jl
mov
mov
data16
and
addr16
inc
ss
jmp
xchg
cwtl
add
jg
out
push
push
push
jb
or
add
lcall
pop
jl
lar
push
scas
fcompl
cmc
or
cwtl
fsubrp
pop
je
jg
xchg
in
dec
idivb
imul
das
insb
jbe
incb
scas
jo
ljmp
cwtl
dec
outsl
sbb
add
fwait
or
add
mov
sarb
into
pop
mov
fldt
pusha
jbe
pop
xor
xlat
cmp
dec
xor
xorb
in
sbb
rcll
sbb
and
jp
jp
xchg
ret
stos
enter
loopne
das
lcall
and
pop
pop
push
jbe
add
push
outsb
lcall
shrl
mov
xchg
jb,pn
movsb
jae
xor
lods
dec
mov
and
fiadds
mov
inc
out
test
mov
icebp
ret
test
sbb
mov
sub
jmp
fs
push
mov
js
insb
scas
js
xor
scas
inc
jno
xor
call
mov
jb
sbb
into
aaa
nop
int
or
or
inc
push
sbb
or
xor
push
sub
insb
xchg
lods
flds
mov
mov
adc
cbtw
incl
pop
jo
stos
popa
jo
shll
js
cmp
outsb
jno
fcmovnu
xlat
sbb
pop
push
xor
fwait
mov
inc
add
sbb
push
sbb
sbb
sub
or
aam
pop
dec
add
mov
dec
mov
sbb
roll
cmp
cwtl
addb
rclb
mov
sti
xchg
sub
mov
int
add
mov
sbb
lods
lret
jbe
incl
sub
andb
pop
ds
and
and
mov
test
inc
xor
call
push
mov
push
lret
xchg
movsbl
lock
fidivrl
dec
icebp
lret
fisubrl
dec
call
lods
jmp
or
mov
add
and
pop
test
xchg
or
jmp
push
add
clc
xchg
fdivrs
mov
mov
push
imul
dec
add
xchg
xor
sti
hlt
scas
scas
aam
inc
mov
out
popa
dec
js
shlb
adc
lret
enter
adc
xor
addb
call
mov
rorb
mov
aaa
or
lcall
and
and
xchg
popf
mov
inc
popa
lds
jecxz
orb
daa
sbb
mov
in
shll
adc
outsb
ss
ljmp
in
mov
mov
fcoms
lcall
jo
icebp
or
adc
outsb
fmull
loopne
icebp
shrb
or
adc
xchg
js
jmp
xor
or
adc
les
ret
inc
jmp
in
popl
inc
mov
sti
mov
ljmp
popa
or
dec
push
push
jle
jg
out
sbb
mov
clc
xchg
cmpsb
mov
jne
cmp
push
sbb
mov
lea
jl
movsb
call
xor
test
xchg
call
mov
push
jno
pop
fsubrl
adc
pop
fdivp
pop
lock
lock
call
push
mov
add
iret
push
xor
mov
pop
sbb
clc
shlb
mov
lea
mov
stos
rolb
movsb
lods
xchg
jle
mov
sarb
fsubrs
inc
jle
call
shll
lcall
mov
xorb
lock
shl
xchg
mov
cs
nop
cmc
and
int3
mov
sti
pop
subb
and
dec
push
int3
cmp
sbb
sub
scas
mov
ds
sahf
xchg
sbb
outsb
js
int
ljmp
sbb
lret
sub
add
cld
mov
mov
push
mov
movsb
lods
loopne
jmp
and
inc
dec
fst
pop
sub
data16
sahf
push
jb
sub
test
fisubrs
mov
pop
popa
inc
lret
dec
push
xorl
lcall
jmp
sub
ss
pop
sub
add
andb
dec
adc
push
mov
fs
repnz
add
out
inc
inc
inc
fisttpl
xchg
in
cmp
dec
shrl
stos
insl
ss
fs
movsb
mov
sbb
or
inc
xchg
stc
pushf
pop
rclb
fs
mov
aas
mov
stos
fnstenv
mov
push
rorl
incb
push
pop
data16
dec
sbb
insb
addl
push
enter
push
decl
in
les
pop
push
cmp
sbb
adcl
out
push
pop
jne
mov
outsb
or
dec
mov
or
or
ret
xor
popf
std
jo
mov
hlt
mov
mov
push
sti
mov
mov
fldt
mov
fnstsw
mov
sbb
sbb
adcl
pop
xchg
add
jb
push
sbb
jecxz
add
xchg
mov
and
mov
lock
inc
or
loopne
adc
enter
pop
inc
fcoms
push
test
mov
mov
inc
je
mov
ficomps
or
adc
lock
cmp
sub
xchg
adc
out
cmp
mov
add
xchg
fldenv
sahf
mov
mov
sbb
and
sti
and
add
mov
dec
and
add
cmp
jecxz
xchg
pop
cmp
cmp
mov
mov
mov
adc
int
mov
insb
or
push
mov
pop
mov
ss
ljmp
inc
cmp
lcall
sahf
push
aaa
jne
lods
rcrb
adc
lcall
in
lods
cli
xchg
pop
dec
stos
push
inc
ret
scas
inc
mov
mov
int3
es
lret
jl
cmp
aad
je
inc
xchg
aaa
outsb
into
xchg
push
sbb
ret
stc
outsl
xor
sbb
je
sarb
test
mov
fistpll
int3
pop
lcall
decl
push
adc
cltd
nop
adc
iret
or
xor
pop
or
loopne
jl
sub
xor
mov
push
into
loop
adc
sbb
daa
mov
push
daa
dec
xchg
fstl
mov
icebp
insl
push
pop
pop
adc
xchg
fdivrl
js,pn
lds
ljmp
mov
in
mov
lds
add
xor
push
xchg
pop
js
scas
stos
mov
rorb
mov
dec
xlat
stos
test
imul
xchg
pop
into
mov
data16
pop
scas
dec
mov
call
mov
add
push
out
fs
stc
pop
sbb
push
aas
jo
mov
rcl
lcall
int3
sub
cmp
mov
fldl
pop
repnz
out
pop
jb
out
xchg
lock
insl
fiaddl
mov
imull
jo
lea
push
sbb
pop
movsl
add
aad
scas
xchg
test
add
add
dec
sub
push
jno
sbb
pusha
cs
cmp
or
cmp
nop
inc
lret
arpl
fbstp
mov
lock
ret
andl
orb
pop
dec
lods
js
inc
mov
adc
push
inc
add
loopne,pt
lret
out
notb
loope
lcall
mov
out
cmp
jge
hlt
pop
test
inc
hlt
or
xor
mov
xchg
jnp
mov
mov
nop
xchg
or
mov
jne
cs
pop
adc
setl
xor
inc
subb
fsubl
ss
cs
inc
data16
lcall
cwtl
or
fwait
cld
xor
shll
out
mov
mov
js
in
xchg
gs
push
or
sbb
sbb
mov
xor
and
je
fwait
inc
mov
int3
jp
and
add
push
lahf
test
aaa
inc
inc
pop
adc
enter
fs
push
pop
call
xor
pop
movsb
sbb
and
mov
int3
sti
cmp
int
push
push
mov
ret
push
push
or
jo
ror
push
mov
pop
dec
loope
stos
mov
adcl
sub
jle
mov
aad
sbb
popa
mov
push
out
addb
sbb
mov
aaa
push
ds
lock
xchg
das
dec
test
mov
inc
in
mov
push
ret
mov
in
call
adc
mov
mov
je
cmp
ret
pop
pop
sub
imulb
jecxz
inc
jl
mov
lock
mov
cs
cli
aaa
cmp
lcall
and
sbb
aaa
insl
mov
shl
push
sahf
sbb
mov
or
inc
test
addr16
jb
je
lock
xor
and
and
pop
incl
xchg
sarl
xchg
stos
push
std
inc
ljmp
out
sub
xchg
lods
lock
in
jmp
mov
neg
je
flds
scas
cli
mov
pop
in
push
adc
push
add
jb
add
jle
rorl
test
out
mov
push
lea
subl
inc
sar
outsb
cld
xor
adc
sbbb
fisubl
nop
mov
pushl
and
popf
sub
in
inc
xor
xlat
fisubl
inc
ret
shll
sbb
jle
cltd
push
lods
lods
sbb
aam
jl
fwait
incb
cld
ljmp
cmp
sahf
mov
sbb
call
ret
cs
clc
out
xchg
mov
rclb
inc
ret
stos
imul
outsb
call
jge
test
jno
add
sarl
push
push
mov
mov
fs
sahf
pop
cmp
sbbb
add
int3
xchg
push
ja
lcall
add
sub
inc
scas
in
pop
cld
addb
adc
icebp
xchg
xchg
loopne
cmp
mov
dec
dec
outsl
data16
int
data16
gs
xor
push
shrl
cmp
mov
mov
mov
jo
inc
mov
mov
add
inc
std
out
repz
ret
mov
int3
jbe
mov
arpl
lea
jecxz
fwait
mov
push
cs
clc
in
xchg
cli
mov
mov
ret
sbb
mov
sarb
out
fcomps
mov
ret
mov
mov
add
push
arpl
je
fcompl
inc
sbb
lods
aaa
jmp
fdivr
lret
xchg
xchg
shlb
sbb
lods
mov
add
scas
and
pushl
xchg
add
jne
stos
sbb
mov
inc
in
push
stos
fildll
adc
fsubl
sar
mov
mov
test
out
mov
jo
add
stc
pushf
outsb
xchg
mov
jge
jp
or
sub
push
mov
sbb
and
sub
or
andl
xchg
mov
xchg
sub
xchg
call
xchg
fs
fmull
in
cwtl
ficoms
xchg
adcb
push
jp
mov
inc
aaa
or
mov
jmp
jle
sti
fcoms
sbb
sbb
fstpt
and
mov
jp
cwtl
in
sbbb
int
push
mov
shrb
lock
push
pminsw
sahf
pop
cmc
pop
and
aam
in
daa
lods
in
ljmp
ret
inc
andb
inc
mov
stos
lods
xchg
mov
push
je
xchg
push
gs
nop
lcall
jb
push
jmp
and
sbb
cmp
scas
stos
lcall
or
das
outsb
fistps
aas
movsl
fs
testl
fs
add
lock
cmp
call
or
mov
mov
push
mov
xor
dec
cmp
std
add
pop
cmpsl
lcall
rolb
in
insb
sub
mov
mov
sbb
movb
and
dec
jo
out
stos
mov
sar
lock
cmpsl
inc
push
incl
mov
sbb
lock
lds
xchg
aam
pop
lods
pop
push
lret
test
sarb
ret
arpl
mov
out
fadds
icebp
enter
xchg
hlt
test
push
xor
jns
repz
movsb
seto
lcall
cmp
scas
dec
sahf
outsl
xchg
cmc
or
mov
sub
or
and
out
xchg
xchg
dec
add
incl
cmp
repz
aas
and
lods
enter
mov
or
mov
clc
cmpsb
cmp
jecxz
push
adc
mov
outsb
out
add
and
add
pop
cli
js
incb
mov
imul
sub
xchg
cli
sbb
jmp
je
mov
dec
push
ja
out
sub
cltd
and
dec
jno
mov
in
mov
les
mov
cmp
adc
loopne
ds
inc
dec
mov
fsubr
mov
xor
push
xchg
adc
jg
mov
push
or
push
adc
cli
cmp
push
test
in
lea
int
in
sarl
inc
outsb
pop
test
inc
add
fsubl
ljmp
xor
scas
mov
mov
in
stos
mov
ret
mov
xchg
in
lds
pop
arpl
jb
outsl
mov
fidivl
mov
mov
js
sbb
ljmp
js
pop
xorl
and
ja
sub
into
into
movsb
mov
adc
incl
or
pop
mov
push
inc
repz
js
push
es
adc
loopne
sbb
jp
stc
mov
lds
cli
arpl
loope
out
rorb
jp
aaa
xor
jbe
and
mov
and
mov
add
mov
jmp
sub
es
daa
lcall
lret
push
cmp
mov
add
in
ljmp
dec
mov
cmp
xchg
sub
xor
ljmp
in
std
mov
push
test
xlat
insb
sub
pusha
data16
lret
incl
mov
jb
pop
xchg
incl
and
pop
xlat
jg
xor
add
inc
xchg
andb
aaa
push
ljmp
push
cmc
push
fs
shlb
mov
mov
in
xor
pop
cmp
je
loop
mov
mov
iret
faddl
and
xor
push
mov
sbb
lcall
push
or
inc
in
leave
push
mov
pop
js
ret
fbld
in
xchg
ds
lahf
jmp
aad
decb
jmp
mov
fstpl
cmp
std
adc
test
call
xchg
push
roll
jb
xor
mov
pmullw
imull
adc
jne
insl
imul
outsb
cmc
inc
mov
and
adc
mov
sti
add
sub
rcll
hlt
sub
data16
cmp
pop
in
xchg
idivb
pop
hlt
pusha
in
push
sub
dec
mov
out
imulb
out
adc
pusha
sbbl
add
outsl
popw
push
adc
inc
dec
mov
and
add
push
cmp
ret
lods
jg
ljmp
subl
cmpsb
in
clc
shll
test
jecxz
push
imul
nop
rolb
xchg
incb
pop
cs
sbb
dec
jmp
int
call
cld
test
mov
dec
pop
je
insl
out
adc
in
cmp
cmp
and
and
fildl
jo
icebp
dec
fistps
add
adc
and
das
inc
je
pop
and
fidivl
push
je
fldl
mov
ja
test
jns
mov
xchg
push
dec
sub
fucomip
les
pop
repnz
sbb
jg
cli
mov
dec
out
arpl
jb
add
bndstx
push
cmc
mov
icebp
data16
js
pop
hlt
cmpsb
cld
mov
rcr
ljmp
icebp
cltd
stos
add
sub
pop
cltd
ljmp
jp
jecxz
jecxz
pop
cmpb
fcmovb
loopne
scas
cmpsl
sub
fs
inc
roll
sti
dec
xchg
pop
pop
mov
cmp
fiadds
ljmp
mov
inc
mov
aas
dec
scas
dec
loopne
insl
insb
lret
mov
push
std
ss
push
cld
idivb
ss
push
addl
iret
or
mov
hlt
add
push
xchg
adc
stos
mov
lea
or
add
clc
mov
fs
jecxz
jp
inc
pop
xor
bound
xchg
push
and
sbb
fistl
out
mull
into
dec
sub
aam
cs
jmp
dec
stos
pop
pushf
adc
pop
push
jl
mov
test
pop
jp
mov
inc
jmp
or
es
out
outsb
clc
ljmp
cltd
fnstenv
fadd
or
inc
rcll
ljmp
ljmp
add
pop
push
sub
pop
or
inc
fs
shl
mov
repz
fdivs
andb
xor
ds
mov
push
call
sub
pusha
jo
mov
rcrb
fwait
clc
adc
dec
fwait
scas
mov
shrw
aaa
lods
ret
xor
punpckldq
inc
mov
lahf
cmp
push
mov
push
fdivp
sub
mov
adc
mov
rorb
mov
pop
mov
popa
fdivr
pushl
incl
xchg
xchg
jl
xchg
push
clc
pop
shrl
pop
sbb
cmp
addb
subl
cmp
pushf
loop
sahf
jge
adc
xchg
jle
lods
lcall
cwtl
mov
shlb
arpl
fisubl
es
loope
sub
aam
rol
cwtl
mov
pop
sub
ljmp
js
push
popa
inc
adc
aam
sbb
loopne
test
push
int3
xchg
mov
roll
mov
and
in
stos
mov
sub
fcompl
sub
mov
inc
outsl
push
pop
aaa
add
cwtl
jo
es
dec
insb
and
cltd
mov
repnz
lods
arpl
push
or
shr
xchg
cmp
rcll
sbb
mov
sar
es
and
or
mov
int3
dec
mov
sub
xchg
mov
test
and
mov
add
add
lods
push
lods
push
dec
or
icebp
add
jg
push
cmc
lcall
push
add
mov
push
decl
pop
push
fsubl
sbb
pop
addb
and
cmp
xchg
int3
dec
lock
out
adc
lret
xor
ffree
mov
xchg
cmp
adc
lods
xor
xchg
dec
cli
cli
or
bound
add
out
lcall
add
lock
addb
dec
outsl
out
fdivs
pusha
mov
loop
dec
lock
pop
sbb
xor
loopne
pop
sub
adc
data16
jl
add
jae
loopne
mov
f2xm1
scas
sbb
cs
mov
sbb
and
ljmp
push
push
sbb
sub
lcall
aam
loope
or
xchg
push
dec
ljmp
iret
sbb
add
adc
push
push
push
cmpsb
fs
pop
add
bound
inc
sarl
nop
and
out
dec
jb
sub
adc
in
add
and
xchg
mov
sbbl
adc
dec
dec
sub
mov
ja
mov
pop
cmp
push
xchg
or
or
into
ret
scas
fcoms
mov
adc
popa
testl
inc
outsl
push
push
out
in
decl
pop
xchg
or
dec
out
movsb
lcall
fcoml
arpl
mov
enter
call
rcrb
jb
add
pop
jl
lods
movb
jp
stos
rcrb
data16
fs
jg
push
sub
sbb
dec
fadds
orb
pop
out
pop
and
mov
stc
add
push
push
jae
fists
push
xor
lock
jbe
daa
cmp
das
fsubs
fcompl
call
test
jns
adc
scas
ss
pushl
call
sub
pop
pushl
pushf
clc
jno
decl
jmp
mov
rclb
das
pop
add
out
test
cmpsb
std
ss
xor
xor
jns
mov
cmp
pop
pop
lahf
fidivs
or
nop
jo
dec
mov
aam
adc
mov
mov
dec
pop
push
mov
mov
jge
cs
cmp
scas
movsb
repz
or
jg
sub
jl
imul
nop
or
test
push
cmp
pushf
cmpsl
cmp
cmp
lcall
jmp
out
or
lods
test
insb
clc
loope
dec
push
jp
sahf
ret
cmpsb
and
cmpsb
pop
mov
ret
push
faddl
js
mov
sbb
or
xorl
jo
push
pop
divb
push
lods
cmc
xchg
popa
fsubs
inc
imull
clc
jmp
faddl
inc
out
cmp
or
pop
ret
add
clc
push
icebp
xchg
or
fdivr
cmp
mov
loopne
and
pushf
test
sbb
dec
jb
push
push
sub
push
test
jl
mov
add
call
inc
add
rclb
mov
aad
fldln2
lahf
je
adc
mov
fdiv
inc
inc
mov
push
js
mov
pop
or
bound
ds
cmp
lds
jnp
adc
inc
cmc
in
dec
ljmp
out
push
pop
clc
pop
pop
mov
dec
cld
fmulp
mov
hlt
stc
mov
push
mov
pusha
jmp
xchg
inc
inc
jge
faddl
call
push
mov
xchg
pop
movsl
mov
lods
adc
and
jae
imull
gs
and
mov
dec
jl
in
ja
scas
mov
mov
adc
mov
xlat
xchg
cli
int
dec
loopne
push
push
pop
or
mov
mov
push
lods
lock
mov
sub
mov
das
sbb
mov
insl
leave
aad
dec
jle
xchg
sub
movsb
mov
xor
jl
stos
mov
pop
dec
cli
cli
roll
je
popa
mov
daa
scas
call
data16
scas
jae
dec
push
loopne
popa
inc
jnp
test
in
outsb
cli
fmull
jl
jle
push
mov
ljmp
notl
xchg
adc
test
jb
divb
sub
in
cmp
xchg
ljmp
stos
nop
add
mov
movsl
mov
stc
push
push
fcmovb
and
ss
loopne
mov
shrl
je
fwait
jge
fmull
lock
jne
rcrb
sbb
mov
fdivr
adc
xlat
jne
jle
jb
cli
cltd
mov
sub
inc
xor
xchg
mov
stc
cmp
xchg
push
jp
shll
mov
and
mov
sub
push
xor
scas
inc
push
mov
faddl
inc
xorb
xlat
scas
pop
add
fdivrs
loope
clc
inc
mov
ret
cmp
sbb
pop
lock
and
push
mov
lock
call
pop
or
mov
sahf
dec
mov
mov
lcall
fisttps
add
and
mov
xlat
push
sub
ss
repz
jle
add
cmpsb
cmpsb
out
cmp
daa
sbb
inc
loopne
out
mov
cmp
adc
movsl
movsl
push
std
and
lods
mov
inc
jecxz
pop
mov
mov
pop
pop
cmpsl
jmp
ss
add
call
mov
push
adc
insl
mov
je
jb
push
mov
in
in
mov
lods
and
push
mov
adc
lods
mov
clc
xchg
pop
cs
imul
pushf
mov
sbb
push
loopne
les
dec
in
orb
jg
sbb
decl
mov
push
cmc
push
jno
bound
add
negb
push
mov
movsl
hlt
insl
sub
mov
scas
or
hlt
xchg
inc
nop
mov
xchg
and
xchg
cmp
imul
mov
clc
test
xlat
mov
and
xchg
int
add
adc
push
dec
mov
mov
jae
or
call
pop
dec
sub
adc
push
sbb
lods
xchg
movsb
mov
testb
mov
loopne
or
data16
push
xor
sub
rcrb
in
aam
leave
shr
push
push
pusha
lcall
out
lret
rolb
push
jne
test
mov
add
mov
mov
lods
inc
inc
mov
mov
cs
pop
push
mov
mov
mov
mov
fwait
cmp
ficompl
push
insb
push
jbe
add
stos
out
push
xor
mov
pop
ss
add
cli
imul
or
push
imulb
sbb
xor
mov
les
out
and
test
mov
inc
xchg
jecxz
mov
cwtl
sbb
mov
or
lcall
ja
fucomp
das
repnz
rclb
dec
addr16
jmp
cmp
gs
mov
mov
filds
inc
jno
gs
adc
and
pusha
inc
std
ljmp
and
rol
and
adc
sub
and
cld
ljmp
data16
pushw
in
nop
inc
sub
pop
adc
ds
mov
imull
lds
nop
mov
imul
pop
cmc
xchg
or
pop
adc
dec
fadds
rcll
call
loop
cmc
sub
adc
aaa
fsubrs
mov
jbe
xchg
or
adc
scas
fwait
test
push
adc
out
sti
fs
mov
push
aaa
push
out
pop
mov
inc
jmp
test
mov
lret
ljmp
scas
and
fistl
push
add
inc
rolb
xchg
mov
ss
ret
jl
dec
cmpsb
incb
loop
adc
adc
icebp
mov
orb
xor
sub
mov
sub
dec
clc
push
test
sbb
dec
jg
cmpsb
rclb
or
ret
push
fmul
lods
dec
shrb
or
push
mov
push
out
pop
ss
mov
mov
lahf
ss
xorb
mov
ljmp
mov
test
push
insb
out
leave
addr16
mov
sarl
pusha
and
hlt
mov
mov
push
or
aaa
fsubrl
push
mov
sbb
mov
push
xor
out
in
lock
inc
dec
adc
or
shl
ds
clc
sub
outsl
insb
loope
ljmp
outsb
ficomps
push
jb
dec
daa
pop
ljmp
or
jo
adc
xor
adc
arpl
push
std
stos
inc
xor
or
incl
sub
sub
fwait
call
lods
mov
stos
pop
out
int3
je
cld
inc
jl
aaa
adc
and
mov
sbb
aad
and
enter
xchg
push
add
pop
pop
pop
imul
leave
fs
xor
jge
push
jno
mov
cs
mov
int3
xchg
pop
add
mov
jl
dec
push
push
add
mov
xchg
aaa
add
push
cli
pop
loopne
mov
les
lds
push
test
lock
jae
sbb
lret
mov
aam
mov
mov
xor
out
push
and
fs
nop
lods
mov
mov
insb
and
or
or
or
or
push
je
push
mov
add
movsb
nop
sub
movsb
mov
inc
les
cmp
cltd
mov
fsts
dec
fldl
dec
insb
mov
add
jmp
add
inc
mov
xor
popf
stos
mov
ret
push
and
inc
mov
int
data16
outsl
out
xchg
cmpsb
stos
dec
jbe
ss
int
ss
inc
mov
mov
dec
cmp
sbb
mov
test
adc
add
fbstp
test
xchg
test
xor
adc
push
jg
mov
xor
sbb
adc
jmp
clc
push
rclb
xchg
aas
out
lods
jne
push
push
int
addb
aad
shlb
sub
loop
dec
test
int3
add
jp
adc
xchg
push
sub
mov
mov
and
sti
ret
nop
stos
cmp
out
mov
int
orb
mov
sbb
lret
add
jecxz
pop
sbb
arpl
xchg
or
cmpsl
or
jl
sbb
aam
testl
loopne
aaa
sahf
hlt
mov
mov
push
nop
xchg
xor
pop
jb
test
pusha
xlat
dec
es
jne
in
or
mov
rol
test
mov
xchg
imul
cmpsb
or
mov
jl
jle
mov
inc
movsb
xor
icebp
fists
imul
cld
push
divb
add
mov
enter
mov
cld
clc
bound
dec
call
stos
mov
xlat
jp
mov
xor
fwait
ss
xor
jns
xor
lcall
inc
xor
mov
aad
cmp
mov
es
and
lods
movsl
sub
pusha
push
repnz
cmp
sbb
imul
sbb
ja
outsl
pop
mov
mov
mov
pop
xchg
repnz
enter
or
gs
adc
notb
cmp
push
loope,pn
inc
inc
scas
add
mov
pop
add
je
js
sub
loopne
js
mov
jg
sbb
loope
wrmsr
xchg
orb
jmp
inc
pop
lods
aaa
xor
scas
jo
repz
cmp
cmc
or
insl
mov
jne
js
xor
test
pop
hlt
add
lods
lock
or
mov
cmp
pop
int3
push
gs
sub
movsl
bound
aas
das
aad
mov
push
jp
cs
mov
and
push
loopne
jbe
nop
scas
mov
and
or
sub
mov
add
push
aas
and
push
adc
insb
clc
scas
add
fdivs
bound
enter
sub
and
testb
outsl
push
outsb
or
mov
lahf
mov
pop
inc
adc
mov
ss
jp
jecxz
aam
mov
sbb
cmc
cmpb
lret
inc
xchg
dec
negb
aas
lds
mov
dec
jp
sub
les
ret
push
mov
insl
imul
adc
dec
pop
jl
push
sarl
cmpl
mov
cmp
pushf
or
xchg
inc
dec
xchg
push
sbb
sarb
lock
jmp
movsb
sbb
jg
rcrb
mov
pop
leave
clc
cmp
xchg
call
jmp
sub
js
xor
push
addb
cmpb
outsl
mov
add
roll
rorb
in
jg
lods
push
push
sbb
fcoms
movsb
mov
lret
and
add
in
shrb
dec
sahf
mov
inc
or
cmp
push
lods
js
fwait
add
lcall
mov
jg
scas
jo
shl
testl
mov
or
sub
jbe
cmp
inc
rcl
lcall
jo
xchg
mov
mov
add
mov
push
or
into
or
mov
inc
ret
xor
lea
rcl
mov
mov
mov
mov
mov
sbb
cmp
and
mov
mov
sahf
int3
inc
imul
pop
jecxz
add
jae
jo
fs
mov
ljmp
xchg
or
popf
mov
leave
or
scas
movsb
pop
adc
adc
mov
mov
movswl
push
mov
mov
mov
add
cmp
inc
sahf
adc
fidivl
inc
jnp
std
scas
jo
lret
sbb
nop
mov
insb
inc
mov
js
filds
lret
divb
fdivr
imul
jo
pusha
mov
xchg
pop
mov
leave
je
push
xchg
je
daa
mov
mov
pop
mov
std
sub
cli
jbe
fwait
pop
sti
inc
xor
imulb
ret
stc
scas
cmp
icebp
mov
in
pop
loop
push
mov
gs
sub
mov
sub
dec
push
outsl
push
ljmp
push
xchg
aam
dec
sub
insb
sub
pop
push
test
jns
mov
aaa
decl
xchg
xor
mov
subb
lcall
xchg
jbe
cmp
out
cmpsb
or
mov
loopne
lcall
std
repnz
inc
push
shll
inc
push
or
loop
dec
mov
xchg
in
arpl
aaa
cmpsl
inc
inc
jno
jmp
cs
push
push
push
mov
faddl
xchg
jb
loopne
push
mov
dec
jecxz
lea
mov
sub
dec
call
mov
push
xchg
in
sbbb
inc
pusha
imul
stos
push
call
dec
mov
push
lock
inc
sbb
test
outsb
adc
mov
mov
lcall
pusha
xor
scas
dec
test
out
js
jecxz
mov
call
push
jbe
dec
adcl
inc
lods
pop
push
push
lock
or
in
loope
cmpsl
mov
out
adc
mov
xchg
je
push
notb
insl
mov
in
cmp
aad
add
add
ret
mov
xchg
and
xchg
mov
mov
or
js
add
mov
add
xchg
fisubs
ret
and
push
adc
adc
adc
xchg
cld
vrsqrtps
outsb
int
sbb
xor
fwait
mov
je
xchg
mov
test
bound
fdiv
xchg
jno
xor
jle
loopne
sbb
movsb
mov
stos
test
dec
andb
aaa
je
es
cmp
jo
cmp
test
pop
sbb
mov
in
cmp
sbb
xchg
subb
push
add
test
inc
aad
sbb
cmp
jge
or
mov
fs
cmp
mov
xor
xchg
pop
lods
cmpsb
das
cli
aaa
and
stos
decl
sub
es
inc
jg
mov
enter
out
mov
inc
loope
sub
in
push
adc
bound
icebp
cmp
push
dec
mov
lret
add
xchg
jmp
out
xor
pop
popa
dec
cld
mov
jle
push
fdivr
or
sbb
pop
jl
enter
adc
sbb
fcompl
loopne
pop
push
les
mov
stc
push
cmp
sub
cmp
repnz
ret
icebp
xor
cld
call
aas
enter
shrb
out
jmp
jb
sbb
pop
bound
cs
and
xor
fs
mov
cmp
push
add
loop
es
lcall
pop
dec
jnp
mov
inc
cmp
mov
mov
xchg
fdivp
rolb
adc
push
pop
pop
and
push
shlb
cmp
scas
adc
xchg
fcoml
inc
decb
push
mov
adc
or
insl
test
mov
sbb
mov
push
sub
les
rorl
sub
aad
mov
mov
adc
inc
movsb
int3
loope
xor
mov
and
xchg
dec
push
jl
push
mov
icebp
pop
test
mov
or
pop
es
iret
aaa
adc
lret
fsubl
push
in
mov
and
decb
sbb
ljmp
add
out
sub
mov
popl
insl
dec
dec
insl
lahf
pushf
cmpb
mov
pop
int
ljmp
cmp
adc
sbb
and
push
cwtl
jae
mov
cld
sub
cmp
xor
cmp
lahf
lcall
sbb
ret
or
test
out
jns
mov
push
ja
daa
adc
cmp
arpl
adc
mov
push
call
daa
clc
mov
cmp
mov
xor
jbe
inc
subl
mov
inc
loope
das
pop
fmuls
mov
arpl
and
sti
pop
imul
inc
shlb
or
shlw
arpl
lock
sbb
pop
xchg
cmp
pop
fdivl
push
loop
loop
mov
rcrl
inc
add
in
sub
inc
orl
repnz
bound
mov
mov
jo
inc
jo
fsub
lods
aaa
call
jp
cmp
frstor
inc
cmp
add
adc
rorl
movsb
mov
movsl
and
sarl
popf
xor
xchg
push
adcb
mov
or
push
les
aas
xorl
rorl
push
or
xchg
or
roll
repnz
andb
dec
test
rolb
inc
ds
sbb
fisttpl
mov
mov
jbe
int3
or
sub
jbe
xchg
fadd
adc
jmp
aaa
rorb
repz
out
mov
mov
es
cmpsb
lret
or
and
xchg
shlb
sub
mov
push
add
xor
fisubl
fisttpl
cmp
lock
push
jecxz
cs
jle
and
rol
push
fcmovb
xor
mov
jmp
loopne
stos
int3
push
shrl
inc
cmpsl
popf
loop
push
into
pop
jb
repz
dec
test
add
jl
in
cmc
mov
adc
lock
popf
rolb
dec
jge
mov
fdivrp
int
into
in
fmuls
shlb
sbb
jg
add
mov
mov
add
xor
insb
push
sub
pop
add
mov
push
push
inc
aad
push
xchg
push
insb
sbb
or
xor
sbb
inc
stos
in
or
cmp
dec
or
and
inc
xchg
bound
loop
scas
movsb
fbld
adc
aas
daa
scas
loop
pop
xor
outsl
sbbb
movsb
gs
and
test
pop
mov
sub
cltd
repnz
sub
clc
xchg
mov
jg
mov
lods
mov
pop
sbb
in
std
mov
sar
nop
orb
rclb
ss
ret
add
sbb
push
lret
xchg
leave
test
and
fsubr
cld
or
imul
aas
sbb
repz
std
test
pop
cmp
xchg
leave
lock
sub
cltd
sbb
mov
jecxz
mov
pushf
andl
sub
insl
push
jl
xor
int3
rolb
pop
std
xor
iret
mov
pop
jmp
mov
adc
lock
pop
gs
imul
cmpb
jmp
lock
roll
push
lods
xchg
orb
mov
push
ljmp
fistpll
out
sarb
bound
stc
xor
xchg
xchg
nop
ljmp
incb
mov
jb
cmp
idivb
sub
cli
into
es
push
cmp
fisubrl
xor
jg
push
rcrb
ret
or
scas
cmc
push
fstps
shlb
mov
scas
sarl
push
pop
mov
insb
sbb
pop
mov
andb
add
jmp
das
push
inc
mov
sbb
add
pop
clc
js
cli
cwtl
loop
add
and
popa
cmc
shrl
mov
imulb
in
xor
ficoms
cld
jnp
aad
aaa
inc
gs
push
push
jg
fadds
mov
push
cmc
in
ret
shrb
jle
data16
pop
cmp
cmc
adc
mov
pushf
push
cli
pop
outsl
jmp
mov
push
enter
dec
loope
sbb
decl
ret
cmc
xchg
jl
sbb
inc
or
out
cmp
enter
dec
nop
inc
xor
pusha
je
push
pop
push
fbstp
lods
push
stos
jle
jnp
cmp
mov
mov
cwtl
mov
pusha
cs
enter
or
adc
xchg
loope
lock
cmpb
imul
jecxz
xor
push
shlb
in
add
mov
mov
inc
or
in
hlt
inc
and
jbe
out
cmpsl
shlb
pusha
sub
pushl
mov
cmc
fwait
cmc
add
bound
cmp
fwait
stos
mov
mov
mov
sbb
arpl
aaa
repz
sbb
sub
xchg
sub
in
cs
pop
mull
jg
mov
mov
fdivrl
call
inc
push
scas
xchg
test
mov
add
dec
idiv
mov
xorl
mov
push
jmp
xchg
mov
insl
sbb
mov
xor
mov
clc
repz
cli
push
js
mov
add
mov
push
pop
and
add
push
cltd
inc
dec
ret
sarb
in
adc
and
leave
inc
loop
mov
xor
jge
lea
mov
clc
fisubs
into
cmp
push
rolb
fimull
sahf
adcb
ret
mov
xchg
mov
mov
loope
aad
out
and
and
adc
xchg
in
das
xchg
inc
andl
adc
xchg
jg
aas
insb
mov
inc
jp
fstps
sub
fucomi
test
repnz
stos
clc
cmp
fiaddl
push
mov
mov
inc
fists
push
jo
loopne
push
jmp
adc
out
into
xchg
mov
lea
add
sub
pop
xor
aaa
sbb
addps
rorb
mov
and
test
cld
dec
repz
mov
shl
adc
fmuls
xchg
mov
repnz
test
xchg
ljmp
ret
clc
mov
js
or
cmc
in
pop
les
sti
mov
aas
pop
pop
aas
xorl
jo
into
jnp
mov
sbb
push
inc
or
ss
loop
ja
adc
in
cmpsl
ds
ficoms
outsl
push
ret
loop
fs
lock
scas
push
mov
cmpsb
pusha
and
rcl
push
jge
out
movsb
mov
into
xor
cmp
dec
lret
mov
leave
mov
inc
mov
add
sbb
ss
stc
fisubrl
fcoml
inc
jb
out
or
pushl
test
or
shrb
je
jb
inc
icebp
outsl
push
add
mov
sbb
pop
cld
popf
ja
adc
xlat
das
add
sbb
inc
and
outsl
shrb
push
or
mov
add
mov
aaa
loop
loope
mov
imul
clc
mov
sti
jb
call
mov
dec
in
push
popa
pop
push
popa
add
je
push
cmp
dec
push
fbld
dec
mov
xlat
mov
inc
xchg
lahf
enter
and
fdivrs
fsubl
mov
rcll
xchg
mov
sbbb
or
scas
int
sbb
aas
cmc
push
and
es
cli
fcomip
xchg
int
or
sub
shl
xchg
imulb
add
ret
pop
lret
xchg
cmp
mov
push
test
subb
dec
adc
cmp
aaa
clc
les
fsubrs
jl
cmpb
cltd
and
mov
call
scas
js
or
and
xor
test
dec
mov
mov
xchg
add
in
jp
lods
stc
push
in
imul
dec
push
adc
pop
inc
mov
push
lods
push
addr16
imul
out
pop
mov
cmp
xchg
sbb
ret
jl
and
dec
aam
and
mov
fs
add
adc
arpl
mov
fmuls
loop
orl
inc
incl
jecxz
mov
add
repnz
adc
sub
rcrl
notb
mov
mov
js
push
cld
dec
mov
and
cli
outsl
jle
mov
pusha
xor
jne
out
je
and
rclb
imul
filds
sbb
data16
insb
inc
and
cmp
push
les
push
or
dec
fmul
ret
jo
push
push
mov
shlb
push
scas
hlt
xchg
push
rcr
push
add
and
nop
cmp
push
jge
popf
mov
push
bound
xor
mov
jb
inc
mov
movb
push
inc
shrl
or
clc
mov
sarb
ja
push
in
pusha
movb
jmp
mov
xchg
or
outsl
xchg
mov
loopne
lahf
pop
cmp
add
dec
or
dec
ljmp
xchg
xchg
mov
test
fwait
sub
rorb
mov
push
push
xor
pop
or
inc
cmp
shlb
cmp
mov
pop
and
or
sbb
in
ret
mov
into
int
pop
xchg
sti
test
data16
mov
sbb
push
push
fldenv
stos
ljmp
push
call
mov
sbb
adc
out
cltd
pop
lret
mov
stos
loopne
or
adc
push
out
xor
call
subb
adc
es
aad
jnp
or
hlt
pop
lret
in
push
cmp
mov
cld
decl
pop
pushf
ja
ljmp
mov
dec
inc
add
add
sahf
test
es
mov
mov
dec
leave
sub
cli
mov
adc
scas
mov
cmp
nop
sub
xchg
outsb
sub
mov
add
ficoml
jmp
inc
nop
mov
lods
pushf
inc
lcall
ja
adc
ss
inc
stc
mov
add
hlt
notl
jnp
aaa
mov
nop
insl
mov
aas
push
ljmp
inc
or
lds
call
std
mov
push
ljmp
add
xor
push
gs
sub
add
fmuls
loope
pusha
sti
popa
ret
decl
jne
repnz
push
adc
mov
cmp
xchg
shll
mov
int3
jecxz
and
cli
sbb
and
pushf
and
fcmovne
mov
test
jmp
test
sub
aam
test
fildll
pop
and
fstps
xchg
cltd
jbe
pop
mov
push
je
pop
push
push
ret
hlt
enter
jg
or
ja
sbb
dec
mov
ficomps
lods
cwtl
fildll
cmpb
sbb
fstl
mov
fnstcw
or
xor
add
push
shlb
xchg
in
push
mov
jbe
cld
int
fdiv
mov
jne
xor
mov
pushf
pop
mov
inc
loop
mov
clc
xor
mov
xor
adc
jle
xchg
mov
pushl
incl
sbb
call
cmc
pushf
xchg
int3
lahf
mov
loope
mov
shlb
mov
mov
dec
popf
lcall
sbb
cltd
xchg
push
push
in
and
dec
insl
pop
int3
pop
lea
insl
push
push
into
push
frstor
icebp
sbbb
push
cs
or
int3
es
sbb
jl
js
xchg
or
fwait
lods
sbb
mov
hlt
pop
jge
pop
push
mov
or
cmp
pop
std
cltd
pop
cmp
push
mov
bound
push
jge
pop
rorl
or
jo
push
push
pushl
jle
fistpll
mov
std
or
mov
dec
int3
inc
sub
nop
dec
in
and
fsubs
inc
test
sbb
pop
jp
stos
cmp
lahf
xor
outsb
cmp
pop
xchg
aas
int3
mov
xor
jmp
xchg
add
jb
inc
es
lds
jo
mov
negb
or
test
jno
cld
or
push
jne
xchg
int
pop
mov
cmp
clc
stos
pop
mov
sbb
mov
cli
popf
xchg
mov
pop
subb
push
mov
in
sbb
insb
pop
rcl
and
xor
into
pop
int3
xchg
fcomi
lds
jbe
cmp
fisubrs
sbb
pop
lods
pop
cld
cmpsb
xchg
call
std
adc
in
push
add
mov
add
push
je
lahf
ss
rep
les
in
repz
test
jmp
xchg
jle
lret
cmp
loop
sub
out
inc
dec
adc
stos
mov
jecxz
jl
lcall
shlb
sbb
stos
xchg
mov
and
push
push
test
nop
fsubrp
mov
or
sub
add
xor
push
sub
andb
int3
fs
je
or
flds
lcall
pop
cmp
xchg
daa
enter
jne
in
cmpsb
jo
sbb
inc
jbe
test
push
mov
or
in
js
xchg
adc
cmpl
jbe
rorb
into
cltd
sub
loope
fstpl
sub
xchg
loopne
movb
fdivrl
push
cmp
inc
xchg
jecxz
jecxz
outsl
push
mov
je
inc
or
pop
int
out
xlat
cwtl
add
sub
jo
test
dec
dec
enter
cli
mov
decl
sbb
fdivs
add
push
sub
jbe
into
gs
mov
js
movsl
test
or
jnp
push
sbb
loope
test
xor
pop
lock
pop
dec
jne
pop
mov
movsb
sub
out
adc
lea
jge
xchg
jns
inc
pushf
mov
dec
loope
ja
pop
out
xchg
cmp
fisubrl
in
jb
cmp
out
scas
adc
das
clc
aas
fs
les
hlt
push
dec
icebp
lret
sub
out
pop
or
adc
les
pop
push
jl
fdivs
xchg
into
in
das
insb
in
or
outsb
push
push
inc
std
mov
cmp
popa
cmc
fs
push
sbb
dec
add
cld
pop
into
inc
sub
or
sbb
add
dec
movsb
test
cmp
mov
add
pop
lahf
addl
xchg
sbb
aad
pushf
add
mov
adc
sbb
adc
test
out
into
addr16
add
push
in
outsb
push
les
dec
sbb
lret
call
inc
sbb
add
test
jbe
adc
cmpsb
mov
or
dec
sub
in
data16
xchg
lods
or
ror
fcoml
pop
stos
push
add
and
pop
jo
pop
shrb
shll
imul
sub
xchg
xchg
movsb
outsb
sti
jbe
mov
out
test
movaps
or
xrelease
js
lock
rcll
adc
push
pop
jl
in
fcomps
push
repz
lock
and
push
movsb
fmull
scas
hlt
add
xor
add
push
cmp
nop
add
cmp
aaa
stos
flds
repnz
lods
out
add
mov
loop
jle
stos
push
jg
fucomip
sbb
push
lods
push
sbb
inc
jg
sbb
jecxz
pop
sbb
pop
insl
adc
cmp
or
out
in
sbb
mov
mov
movsb
jle
hlt
stos
xchg
lcall
push
das
daa
sbb
test
in
fs
or
nop
jne
jge
mov
pop
ficoms
sbb
out
cli
decl
adc
movl
fists
lahf
mov
or
or
decl
rolb
mov
sbb
mov
int3
ficoml
inc
pop
mov
mov
sub
xorb
int
push
pop
jae
fimuls
out
lods
add
mov
fstps
xor
dec
or
repnz
decl
sti
aaa
add
aaa
mov
xlat
sub
mov
mov
mov
inc
add
push
ficompl
bound
jmp
cmpsl
pushl
dec
scas
sbb
mov
xor
imul
int3
mov
fsts
lds
in
insb
mov
mov
inc
mov
xchg
push
pusha
jmp
call
mov
cwtl
pushf
push
sbb
pushl
pop
add
sarb
popf
mov
sahf
push
sbb
mov
imul
mov
adc
addr16
shlb
stos
push
cld
jo
sbb
pop
dec
add
lcall
xlat
stos
pop
out
ret
insl
jb
mov
lret
shll
rolb
inc
rcrl
push
add
shr
nop
cmpsb
mov
int3
shll
mov
decb
lcall
jg
hlt
outsb
js
dec
rorb
and
xor
fs
pushf
sub
sbb
add
mov
outsb
aaa
fldl
lret
or
push
scas
mov
in
in
mov
dec
cmp
xor
add
aaa
dec
call
jne
mov
addr16
jnp
jne
lods
dec
jb
test
push
xchg
scas
lock
mov
in
or
jb
ss
ja
fcomps
and
dec
popa
lcall
push
testb
adc
ret
leave
mov
and
add
incl
sarl
enter
and
lods
das
jp
push
stos
cmp
jnp
pop
mov
mov
xor
fstpt
sbb
add
push
std
cld
cwtl
mov
xchg
mov
aad
push
dec
mov
sbb
pusha
xchg
push
fwait
or
xchg
push
xchg
mov
mov
clc
lret
aad
or
add
nop
mov
out
sub
mov
mov
adc
or
call
push
mov
xchg
call
adc
pop
loopne
adc
in
ret
fisttpll
lcall
out
nop
add
mov
into
adc
rcl
mov
and
xchg
add
lods
adc
add
mov
and
or
mov
inc
xchg
mov
pop
and
xor
sub
cmp
push
xchg
xor
push
movsl
pushf
in
add
mov
dec
pop
addb
movsl
add
enter
jne
mov
mov
cmpsb
dec
in
sbb
dec
add
repnz
xorl
inc
mov
pusha
aam
lret
cmp
je
out
fs
add
sahf
imul
data16
adc
fbstp
das
incl
call
sub
lock
insb
pcmpeqd
dec
shrl
repz
ss
push
xchg
push
sub
shrb
adc
cs
mov
test
cmp
lods
xchg
insl
dec
pop
or
push
repnz
xchg
pop
sbbb
jb
in
hlt
test
int
stc
push
fsubs
mov
adc
shr
mov
add
mov
push
mov
xchg
movsl
sub
nop
sub
sahf
push
pusha
xchg
mov
pop
rorb
xor
mov
mov
mov
sub
xchg
mov
cmp
aad
adc
movsb
adc
test
int3
add
push
shrb
mov
adc
outsb
insb
sbb
cmpb
mov
in
repz
sub
jp
dec
repz
dec
adc
sub
pop
mov
pop
mov
jbe
sbb
neg
jmp
sub
stc
sub
mov
mov
dec
rol
push
jle
in
jp
xlat
xchg
lods
xor
test
andb
enter
sub
dec
test
xchg
xchg
dec
sub
daa
dec
js
subb
lods
scas
mov
int3
ret
inc
and
push
not
movsl
push
sbb
xchg
mul
xorb
sbb
mov
sub
pop
fnstcw
add
mov
lea
shl
dec
aam
pop
dec
push
pop
sub
aad
cld
cmp
sub
add
mov
icebp
shlb
sub
out
add
gs
outsb
mov
cmp
or
and
pusha
cmp
lods
add
movsb
push
push
push
jbe
cmp
or
lret
cwtl
mov
jbe
push
or
jmp
sub
push
mov
mov
repnz
std
or
adc
lea
mov
insl
mov
roll
scas
sub
pop
les
pop
inc
fdivrp
jne
cmp
sub
add
xchg
nop
pusha
fiadds
je
and
stos
js
shlb
mov
xchg
stos
sbb
nop
stos
lods
loop
xlat
rcrl
int3
pop
movsb
fisttpl
imul
das
ljmp
lock
mov
sbb
pop
scas
push
xchg
repnz
pop
jb
mov
jnp
or
loopne
jmp
push
cmpsb
and
cmpsb
insl
orl
outsb
out
or
jb
sub
adc
jbe
mov
dec
jp
or
push
pop
mov
push
loope
mov
dec
out
xchg
fidivs
sahf
lds
rcrl
decl
mov
sub
lods
push
jl
data16
jo
mov
ss
mov
push
sahf
loop
push
fsubr
push
adc
aaa
out
sub
inc
jb
pop
lcall
dec
nop
or
xor
and
and
fldl
dec
mov
pop
enter
xchg
lods
dec
aaa
and
mov
or
ret
lcall
or
cmp
inc
adc
cmc
call
mov
out
ret
jne
pop
enter
in
sub
or
sub
cmp
je
scas
push
push
sub
dec
jmp
dec
les
jns
cwtl
pop
dec
sbb
push
dec
mov
inc
adc
jle
push
jg
test
mov
push
add
push
inc
inc
orb
sbb
mov
sbb
pop
fcomi
add
mov
mov
call
jp
mov
out
mov
and
loopne
scas
pop
fcom
ja
push
fsubrs
ss
ja
inc
lea
or
pop
aaa
mov
loop
mov
mov
decb
jle
adc
pop
lods
les
mov
sub
std
xchg
pushf
push
inc
aaa
or
push
stc
ja
lahf
ficompl
sub
jbe
stos
lock
push
add
and
xor
ss
incl
lahf
movsb
ret
cmp
ret
sub
inc
push
decl
outsb
enter
lcall
sbbb
xor
or
add
ja
xor
jecxz
xchg
lock
mov
stos
in
rolb
scas
jb
push
push
out
hlt
test
adc
into
push
or
mov
dec
scas
and
sarb
jg
es
push
xor
movb
inc
outsw
rolb
popf
ret
sub
fs
js
adc
mov
or
inc
jl
or
outsl
jle
inc
nop
ret
decl
sub
lds
xor
xor
imul
jae
sbb
in
fadds
js
cmp
lcall
mov
fisubs
rolb
frstor
mov
inc
xchg
dec
in
sbb
pop
das
loop
ss
out
sub
out
test
frstor
imul
shrl
clc
mov
faddl
fidivrl
mov
aam
dec
sub
jo
jb
enter
pop
cwtl
cmp
sub
cmpsb
push
push
push
or
test
int
pop
aam
sbb
in
cli
rcrl
cmp
inc
push
mov
dec
ds
pop
xchg
and
cli
in
bound
pop
lods
fmull
aam
mov
mov
hlt
jo
out
out
ds
mov
inc
push
cwtl
rcr
sbb
push
jle
ja
pop
mov
mov
mov
inc
xor
js
cmp
adc
es
loopne
clc
lcall
jb
dec
adc
dec
pop
push
hlt
push
or
fdivrs
cmp
jge
dec
mov
aas
jb
adcb
out
xchg
or
adc
jns
nop
add
xchg
call
adc
mov
out
mov
jp
push
jge
sbbl
add
or
lods
inc
mov
mov
sub
lock
mov
aaa
mov
test
cmp
xchg
xor
or
pop
cwtl
xchg
shll
jecxz
inc
xor
sub
and
sbb
xor
loopne
and
int3
lds
jp
pusha
out
mov
icebp
outsl
xchg
js
jmp
xor
inc
negl
lea
inc
es
fimuls
add
sub
sbb
xor
cs
aam
fimuls
mov
dec
ret
ss
lock
mov
dec
out
push
dec
popf
in
cmp
cld
scas
lcall
jb
jecxz
imul
stos
push
adc
cmp
add
add
add
fcmovnbe
cld
daa
inc
mov
mov
cwtl
mov
or
je
lcall
pop
loope
inc
arpl
popf
outsl
scas
call
rclb
dec
lods
stos
repz
pop
ds
cmp
xchg
jmp
repz
adc
cltd
mov
add
dec
sbb
inc
pusha
adc
adc
cmp
repnz
push
movsl
sbb
push
popa
mov
jns
xor
sbbb
loope
stos
adc
popl
movsb
repz
mov
add
mov
lcall
test
sbb
fbld
xchg
into
fcoms
mov
shlb
xor
xchg
push
add
mov
stos
jg
sar
imul
in
mov
xor
xchg
mov
rcrl
aam
add
cli
xor
test
mov
mov
test
clc
add
test
dec
xchg
sarl
stos
stos
push
or
arpl
lret
sbb
popa
data16
mov
add
push
inc
jmp
imul
push
ss
ds
jno
lock
add
loop
jmp
cmp
mov
sub
pop
ds
or
sbb
out
pop
mov
je
push
cwtl
fisubrl
je
out
sbb
xchg
push
test
mov
push
in
or
addr16
add
adc
inc
pop
jnp
xlat
dec
dec
adc
sub
xor
or
push
sub
js
cltd
dec
sub
faddl
scas
add
enter
lock
inc
or
loopne
fdiv
sbb
pop
sbb
out
inc
ljmp
outsl
rclb
adc
test
pop
lcall
xchg
xlat
outsl
ja
loopne
mov
dec
jo
pushf
lcall
sahf
sub
mov
je
testb
pop
push
mov
out
outsl
pop
sub
fucom
cmp
leave
repz
fiadds
and
push
xchg
addl
or
lret
stc
ss
mov
mov
sbb
rolb
pop
and
sti
lods
mov
movsl
loopne
lcall
out
stos
add
push
je
jp
in
cli
movsl
sbb
adc
subl
or
lcall
das
sti
jo
xchg
aam
add
or
in
aaa
add
pop
sbb
ljmp
arpl
ds
loop
xchg
mov
fs
lret
scas
das
push
mov
mov
data16
xchg
mov
lret
fstpt
js
push
mov
shrb
push
add
or
push
addr16
or
lods
mov
mov
nop
cs
push
call
or
std
fbld
or
test
jbe
test
sub
jp
jl
adc
lods
clc
or
mov
int
stc
mov
add
add
lret
call
ret
cmp
outsb
scas
repnz
push
cmp
adc
inc
clc
lret
data16
xchg
push
incl
jbe
lcall
out
pop
push
popa
je
push
and
ja
dec
cmpsb
sub
pop
push
push
mov
xlat
xchg
rorb
lret
roll
pop
jl
xchg
dec
pop
icebp
mov
xchg
dec
mov
test
mov
aad
shll
jle
mov
push
js
pop
jecxz
out
scas
enter
pop
fsubrl
cmpsb
lods
mov
dec
jge
xlat
pop
jb
imul
dec
sub
icebp
jns
mov
push
gs
xorb
jnp
inc
outsl
xor
push
enter
mov
shll
stos
lods
movsb
push
repz
pandn
pusha
xor
push
out
sbb
popa
shl
push
mov
push
adc
in
push
in
jo
cmpsl
cmp
xchg
fs
test
inc
sbb
or
aam
idivb
sbb
clc
cld
add
push
mov
mov
mov
shrb
icebp
xchg
arpl
call
fistpll
icebp
jae
mov
mov
stos
pop
orl
jg
push
or
jmp
cld
in
xor
xchg
lret
test
es
push
sub
aad
hlt
push
mov
sarl
in
push
jb
push
pop
rorb
inc
leave
add
call
cmp
les
scas
xchg
push
pop
sub
or
pop
sahf
cmpsb
insl
sbb
mov
rcr
push
adc
or
dec
xchg
ljmp
fdivrl
gs
push
loop
sub
loopne
push
dec
dec
mov
lahf
cmp
ss
pusha
mov
cltd
rclb
les
adc
adc
cmc
jo
jp
add
cwtl
pop
add
push
test
leave
mov
mov
push
call
ss
push
aad
jl
std
and
call
sbb
clc
xor
clc
mov
sub
shrl
hlt
xchg
scas
add
pop
push
dec
repnz
xlat
push
rclb
fcoms
je
jge
mov
jecxz
mov
out
fistpl
jbe
inc
into
mov
mov
mov
pop
push
jmp
mov
and
push
xchg
or
push
movsb
jae
push
dec
push
add
pusha
add
push
xchg
lds
in
call
rol
ds
ljmp
aaa
dec
adcl
sbb
mov
add
pop
ret
aaa
mov
incb
mov
push
mov
inc
rcr
pop
ret
push
adc
cmc
shl
cld
cltd
jp
push
jmp
adc
mov
and
push
clc
divl
loope
adc
out
adc
lock
jbe
mov
cmp
mov
shlb
pop
sahf
push
mov
enter
shlb
pusha
cltd
push
mov
out
sub
shl
mov
inc
test
inc
adc
cmc
pop
sub
sahf
or
mov
fstps
jmp
mov
stc
lret
dec
fadd
mov
stos
jns
inc
test
lods
push
xor
notb
into
mov
out
shll
and
pop
mov
mov
push
adc
mov
mov
ret
cmp
ficoml
popf
rcrb
fisubrs
jmp
stc
add
daa
pop
sbb
inc
fcmove
js
fmulp
call
push
xchg
out
test
fwait
mov
aaa
xor
insl
addr16
ret
sbb
mov
push
test
push
jb
or
jb
ds
adc
fsubrs
pop
and
sbb
push
sbb
xor
cmp
push
jbe
loope
dec
incl
cli
xorl
mov
ret
cs
mov
mov
out
cmpsb
pop
popf
sahf
sbb
sub
jl
dec
jmp
mov
adc
lods
aad
push
push
mov
mov
sahf
stos
add
jb
ret
mov
xor
pushf
test
push
push
inc
jae
xchg
push
mov
sahf
aad
adc
sub
inc
jbe
jecxz
shll
add
and
mov
pop
addr16
inc
sub
xor
xchg
jp
xchg
hlt
pop
test
jle
subl
cmpsb
add
loop
fcompl
nop
pushf
cmp
movsb
int
outsl
adc
pop
mov
add
xchg
ljmp
out
aad
pop
dec
jmp
dec
lea
jg
clc
mov
cld
xor
mov
pop
adc
sub
les
inc
rolb
xorl
es
mov
adc
lds
jge
pop
mov
fisubrs
add
mov
add
mov
gs
aaa
and
push
aaa
outsb
icebp
adc
mov
cmpsb
cmpsl
loope
test
inc
mov
call
mov
cwtl
popa
or
xlat
stos
and
dec
mov
push
dec
iret
cwtl
mov
xor
sbb
lret
mov
loop
and
sub
jecxz
mov
cmc
sub
inc
pop
stos
call
mov
notl
mov
js
fs
jecxz
cmp
aaa
repnz
jle
jg
in
push
je
mov
dec
test
inc
out
bound
imul
sbb
stos
cld
outsb
sub
xor
mov
cmc
popf
ret
cli
and
mov
pop
dec
cld
pop
xor
xor
or
cld
push
dec
repz
xchg
pop
test
aas
add
decl
das
test
cmpsb
pushf
aad
sub
mov
shlb
clc
fdivr
or
mov
xor
lock
add
add
jge
rclb
add
enter
mov
decb
push
cmpsb
and
iret
rclb
mov
push
and
push
add
dec
mov
mov
mov
or
mov
mov
insb
ja
pop
mov
mov
jno
mov
mov
or
pop
fldt
adc
xlat
aas
mov
rcrw
sub
xorb
sbb
mov
mov
fisubrl
jge
jo
inc
fs
cwtl
inc
xchg
lods
gs
adc
ret
lods
push
arpl
int3
cmpsb
mov
mov
mov
push
rorl
pop
std
or
and
sub
shll
or
mov
inc
rcrl
mov
call
push
ret
loope
insl
hlt
andb
inc
int
lcall
fisttpl
scas
js
adc
pusha
lds
loope,pn
mov
push
adc
xchg
hlt
sub
fwait
rcll
or
enter
out
fs
cmp
push
aas
call
loopne
jp
xchg
loop
xor
sahf
push
adc
mov
mov
cmp
inc
or
cld
call
pop
lods
xchg
mov
addb
repz
mov
and
enter
mov
clc
rclb
into
xor
adc
enter
and
fdivs
fcomp
add
jnp
stc
mov
or
stos
mov
pop
ljmp
adc
fwait
mov
test
lahf
cld
es
shll
movsb
cwtl
mov
pop
sub
addr16
ja
cmp
push
xor
cli
aaa
sub
outsb
inc
lods
mov
hlt
in
pop
mov
push
stos
rorb
jb
push
lahf
sbb
dec
xchg
sbb
push
mov
jb
in
test
cmp
cmp
mov
outsb
or
jmp
dec
mov
fcoms
pop
js
in
sarb
std
pop
out
aam
int3
js
lcall
jmp
cwtl
imul
aam
sub
xor
aas
adc
and
adc
push
dec
mov
aam
data16
ficoml
subb
pusha
xchg
xchg
ds
push
sub
scas
stos
adc
and
jo
mov
jmp
mov
fdivrp
das
lods
cmp
sbb
xchg
ljmp
mov
rcrb
add
test
pop
pop
je
jo
pop
cmp
enter
pop
jno
add
mov
ss
push
mov
shrb
cmpsb
jmp
jmp
movsl
sarb
inc
lret
js
stc
push
push
jnp
sbb
or
jmp
jb
jbe
jg
ja
pop
rclb
insl
les
mov
jbe
jbe
xchg
sub
and
sub
mov
fdivrs
mov
push
pop
sbb
add
mov
fmull
cmpsb
rorb
mov
mov
sub
mov
cli
test
sti
js
xchg
pop
jb
cli
aad
sbbb
shl
negl
push
adc
inc
int3
fadd
int3
inc
xchg
fcomi
xchg
adc
or
adc
rcl
mov
or
std
push
pop
lret
dec
mov
lret
push
loopne
clc
cmpsb
pushaw
ljmp
sub
jecxz
rcl
pusha
shr
add
scas
sub
or
mov
ljmp
push
dec
out
test
xchg
jge
mov
dec
adc
sbb
nop
lret
push
stc
push
or
decl
pop
insl
dec
mov
cltd
cmpsl
jg
testl
loopne
stos
pop
xchg
subb
aaa
add
and
enter
mov
cld
imul
and
ds
and
mov
test
mov
mov
stos
sub
add
repz
decl
arpl
cmpxchg
pop
iret
loope
pop
outsl
cmovb
jg
sbb
leave
mov
pop
shr
adc
filds
sbb
movsl
dec
mov
das
add
mov
adc
dec
xchg
xorb
push
scas
mov
aam
pop
icebp
dec
testl
cwtl
adc
or
repnz
sub
das
cmc
into
inc
fmuls
fdivl
and
fcomip
mov
inc
mov
fnstsw
les
movsb
sti
push
repnz
inc
jbe
shll
mov
xor
xchg
mov
aam
adc
or
push
and
gs
ret
subl
aaa
outsl
rolb
adc
fsubrp
cmp
push
and
or
in
jb
adcb
sub
outsb
push
inc
adc
push
jle
mov
pop
pushf
aas
xor
stos
hlt
mov
insl
mov
cmp
mov
cmp
dec
out
cli
add
les
push
add
sbb
and
pop
lock
in
jb
cmp
or
or
mov
add
call
nop
pop
pop
sbb
outsl
loopne
mov
mov
push
pop
mov
mov
aaa
and
fists
aad
arpl
sub
andb
jl
inc
adc
test
int3
adc
dec
fwait
mov
les
inc
inc
lock
pop
inc
insb
pop
stos
insb
xchg
iret
mov
cmpb
add
xor
inc
pushl
mov
jg
shrb
cwtl
test
push
lock
mov
lahf
mov
fcoml
lods
inc
fistpl
shll
stos
ja
in
and
out
lcall
jmp
outsl
ss
adc
data16
push
hlt
dec
xor
divl
xlat
loope
sbb
lahf
cmp
push
cmp
push
sub
loopne
sahf
push
in
out
fnsave
or
push
int
jmp
pop
icebp
les
mov
mov
mov
mov
ds
out
and
test
pop
movsl
inc
dec
xor
rorb
stos
dec
sub
cmp
pop
into
scas
loope
scas
push
inc
ds
rcl
outsb
pop
roll
lods
sbb
adc
push
xor
add
flds
sbb
mov
scas
mov
out
bound
fcmovb
or
cld
repz
out
push
movl
sub
ljmp
and
inc
fwait
call
add
out
cmpsl
xchg
sbb
sbb
fsubr
scas
push
scas
cltd
adc
push
in
mov
movl
sbb
cld
pop
aam
pusha
mov
dec
dec
xor
push
fcomi
push
mov
sbb
or
mov
lret
aaa
sbb
je
mov
aaa
add
push
les
fbld
jne
lahf
mov
xchg
jmp
ror
ds
jg
jp
and
jl
mov
adc
push
pop
or
mov
jnp
int
and
mov
pop
dec
mov
lds
jbe
xor
sub
mov
mov
dec
sarl
sbb
int3
and
icebp
mov
dec
roll
ficomps
subb
in
testb
dec
movsl
add
ret
jne
arpl
test
or
rcll
sti
push
gs
jp
mov
loope
xchg
pop
inc
incl
out
shl
mov
test
fisttpl
mov
incl
dec
sub
into
sbb
jmp
test
clc
dec
jne
push
sub
es
test
sar
xchg
jo
inc
jle
mov
mov
test
adc
inc
loopne
cmp
inc
mov
lcall
cld
jno
pop
mov
xlat
sub
cmpsb
or
push
fnstsw
and
mov
xor
xor
sub
add
ss
mov
clc
xor
and
adc
and
loopne
add
sarl
imul
sbb
jl
pop
into
loopne
inc
adc
decl
adc
andb
aam
mov
ret
and
mov
mov
in
mov
das
jecxz
cs
mov
mov
les
pop
mov
push
adc
sub
iret
cltd
ret
inc
fwait
repnz
sbb
rorb
xchg
arpl
test
and
fidivl
cli
jb
sarl
aam
and
rcl
pusha
sub
and
mov
lods
movb
and
mov
and
mov
xor
scas
xor
lcall
stos
push
int3
inc
adc
pop
nop
outsb
push
pop
mov
xor
adc
fs
insb
cmp
call
inc
mov
scas
addr16
pop
femms
cmp
sub
push
add
ds
rorb
sti
jg
cwtl
sbb
cmc
in
enter
push
sahf
mov
adc
ljmp
lock
fstl
sbb
lret
inc
daa
push
pushf
adc
pusha
jle
mov
rcll
in
jg
dec
cli
add
mov
lods
mov
cmp
movsl
imul
pop
jecxz
push
pushf
mov
sub
es
xor
mov
adc
icebp
push
mov
dec
call
lcall
dec
mov
cld
inc
lret
lods
call
mov
mov
pusha
lock
les
mov
cs
and
shll
jmp
bound
xchg
mov
push
lcall
adc
icebp
xchg
popa
rcrb
inc
cmp
repnz
fwait
mov
xlat
pusha
mov
stos
and
inc
adc
fidivrs
insl
xchg
testb
push
inc
loope
xor
cmp
stos
clc
fimull
mov
loopne
sbb
push
mov
add
ds
pop
xchg
push
shr
icebp
cmpsl
data16
sub
out
sub
add
popa
shrl
rcl
jp
fidivrs
mov
in
or
shlb
cmp
bound
int
sbb
es
inc
dec
jb
outsl
push
nop
in
imul
test
rcll
loope
fistl
popf
push
ss
sub
mov
loopne
ss
mov
sahf
jnp
xchg
add
dec
mov
add
jp
or
push
into
cs
in
mov
push
fcomps
mov
lret
dec
mov
push
fldt
hlt
orb
mov
sub
aaa
sub
cmp
dec
jbe
sbb
cli
xchg
and
aam
fildl
mov
test
fwait
mov
outsb
dec
cld
das
mov
dec
adc
stos
scas
insb
cwtl
inc
mov
xchg
xlat
pop
gs
lcall
push
cmpsb
xchg
stos
mov
mov
subb
sbb
mov
jge
sub
mov
and
jnp
and
cld
dec
mov
nop
and
and
ret
mov
cmc
sti
test
inc
shlb
pop
dec
add
das
pop
mov
fadds
inc
add
mov
decl
stos
fsubs
sbb
cmp
stc
or
int
in
fcmovb
outsl
push
incl
or
in
decl
xor
pop
sub
dec
jae
mov
inc
push
push
adc
shlb
repz
sub
pop
test
mov
mov
in
les
push
nop
mov
or
dec
fistl
inc
add
pushf
jle
add
int3
sub
cmp
not
aad
xchg
dec
pop
jo
decb
hlt
stc
pop
insb
nop
out
imul
mov
outsb
cmpsl
cmp
add
shlb
stos
mov
aaa
fs
mov
sahf
sub
xor
cmp
call
xor
push
addb
test
incb
mov
cld
pushf
pop
or
xchg
jno
inc
rcr
roll
popa
mov
icebp
inc
call
data16
push
add
inc
jbe
rorb
xchg
seto
out
mov
or
hlt
clc
test
add
inc
out
push
inc
ss
call
iret
add
mov
mov
int
int3
movsl
orb
outsb
insb
mov
cld
out
pop
pop
cmp
pop
dec
lock
adc
push
shrb
sbb
icebp
inc
les
iret
arpl
test
in
push
jge
jne
or
adc
jl
mov
sub
fcmove
add
ret
popa
ret
mov
jle
in
outsl
push
add
out
inc
popf
mov
adc
loop
dec
enter
and
xor
stos
hlt
sub
sub
xadd
inc
or
lock
sbbl
inc
pop
lret
mov
hlt
movsl
test
ljmp
or
inc
mov
inc
jb
arpl
push
sbb
xor
mov
stc
outsl
xchg
inc
push
bound
stc
stc
cwtl
outsl
clc
mov
call
lods
inc
push
jno
pop
xor
jno
dec
cmc
pusha
add
mov
nop
insb
mov
jno
jge
leave
cmpb
scas
inc
and
xor
xchg
test
in
mov
jb
mov
mov
sarb
nop
and
push
mov
fildll
push
cmp
test
icebp
inc
cmp
push
mov
in
lret
dec
or
pop
sbb
dec
jne
out
psubusw
icebp
add
pop
fcmovnu
stc
ds
mov
fcmovnu
je
mov
in
es
inc
mov
out
int
pop
ja
popf
sub
inc
adcb
mov
ss
sbb
adc
xchg
scas
je
add
mov
dec
data16
fidivl
pusha
pushf
in
test
mov
loopne
or
push
test
mov
test
mov
mov
xor
push
clc
sub
pop
jnp
fidivrl
xchg
mov
movaps
in
mov
pop
in
aam
scas
or
clc
clc
pop
icebp
sbb
xlat
or
mov
std
push
sbb
and
movsb
fcoml
sbb
pop
js
ret
mov
inc
or
jne
cmp
jb
sub
sbb
inc
mov
pop
jp
jmp
ja
outsb
shrb
aam
sub
clc
add
jnp
sub
pop
movsb
lahf
test
xchg
fimuls
fadd
jb
movsb
pop
lds
rcrb
mov
sub
test
and
test
inc
lods
cmp
sub
inc
int
adc
inc
push
xor
inc
outsl
push
add
mov
stos
repz
mov
mov
or
fs
stos
outsl
clc
into
pop
and
lret
aad
pop
loopne
addr16
or
int
in
lods
les
ljmp
lods
fldt
outsl
andb
sbb
or
cmp
or
cmpsb
xor
aaa
cld
sub
xor
bswap
cmp
push
xor
das
clc
xchg
pop
and
inc
repz
popa
adc
jo
push
addb
mov
test
pop
rolb
xchg
inc
pusha
pushf
adc
mov
ljmp
loop
jp
mov
lods
cld
addb
ds
xchg
daa
sub
js
pusha
clc
dec
imulb
add
lret
mov
sbb
inc
mov
mov
adc
sub
mov
mov
push
mov
mov
lock
pop
mov
cmp
js
bound
sbb
shl
adc
dec
imul
push
cld
or
lds
mov
lods
sahf
mov
push
push
add
out
pop
push
aam
add
cltd
incl
arpl
shrb
xchg
das
pop
sub
addb
ret
rcr
pusha
inc
add
fdivl
xchg
mov
ret
inc
clc
pop
cwtl
iret
fdivp
add
xor
ds
es
push
clc
stos
ljmp
aas
mov
jbe
call
xor
sbbb
mov
loopne
movsl
fsubr
out
aad
in
xor
push
add
sub
hlt
bound
lret
fistl
movsl
push
adc
sub
mov
xor
les
stc
shll
fsubl
in
rclb
jae
mov
lcall
jbe
and
lock
hlt
push
pop
aaa
pop
movsb
or
xchg
call
fiaddl
test
inc
hlt
sub
xchg
gs
jb
aaa
decl
enter
mov
test
orb
ss
inc
stos
xchg
xchg
in
inc
or
outsl
push
cli
xor
rolb
sub
lcall
push
ljmp
fnstsw
jp
loop
cmp
jo
int
shll
pop
dec
ret
cld
mov
cmp
in
decl
push
daa
adc
push
mov
mov
sbb
sar
pop
jmp
mov
loop
fiaddl
sub
bound
adc
gs
xor
push
cmp
cmp
sbb
ret
lea
xor
movsb
pop
gs
in
adcl
in
adc
adc
sub
xor
std
imul
pop
es
outsl
sub
push
xchg
adc
bound
loope
orb
mov
test
push
xchg
sub
push
dec
pop
roll
dec
in
adc
mov
xor
insb
dec
jb
enter
cmpsl
mov
enter
sarl
pop
push
push
push
push
adc
adc
dec
dec
inc
pushf
pop
xchg
push
pop
push
rorl
push
sbb
push
pop
icebp
subb
or
mov
in
mov
rcrl
mov
inc
push
pop
add
mov
mov
cli
or
push
inc
test
arpl
icebp
aaa
xchg
mov
xor
sbb
sub
mov
jg
gs
xor
incl
or
ja
orb
jp
stos
outsb
outsb
push
and
lock
push
or
xchg
mov
mov
lea
ret
ja
test
stos
and
mov
dec
mov
pop
test
push
inc
pop
icebp
jg
xor
loopne
cmp
push
daa
in
jnp
idivb
sarb
loopne
ljmp
pop
stos
enter
mov
call
sub
imulb
adc
mov
pushl
out
stos
xchg
ljmp
ss
aad
outsb
pushf
push
mov
push
jl
ret
ss
xchg
je
xchg
push
push
scas
mov
stc
mov
push
mov
and
cs
adc
in
push
hlt
add
xor
daa
jbe
ficoms
xor
shlb
dec
fsubrl
jecxz
mov
and
add
cmp
pop
pop
pop
push
rorb
callw
ljmp
fstps
jl
subb
sti
icebp
lock
cmp
sbb
push
inc
insb
mov
lock
repnz
pop
pushl
mul
addb
outsl
push
or
cs
jmp
cmp
adc
mov
push
sti
stos
das
mov
push
aaa
xor
add
jns
aaa
loop
ljmp
scas
add
pop
pusha
inc
jnp
and
jo
fs
aam
mov
xor
cmpsl
hlt
jae
call
jecxz
push
fisttps
add
out
lods
jbe
aaa
cld
das
ljmp
orb
out
orl
jmp
data16
jg
fs
jnp
inc
lock
ficomps
add
loop
inc
cmpsb
fnstsw
lods
sahf
mov
mov
xchg
je
shrb
push
adc
adc
test
or
add
idivb
gs
jb
outsb
inc
mov
adc
imul
inc
gs
jb
arpl
fs
jae
pop
dec
outsl
fs
int3
lcall
or
imul
int3
cmpsl
cmp
push
lret
je
je
mov
arpl
ja
jge
push
push
sahf
je
sarb
push
mov
hlt
push
orb
add
or
or
dec
add
daa
mov
add
mov
add
fwait
gs
das
rolb
fildl
or
sub
push
push
mov
aam
sbb
inc
xchg
fadds
sub
xchg
fs
je
negb
mull
sub
inc
cs
rcr
enter
add
sub
rcrb
sahf
shrb
stos
ljmp
test
xlat
xchg
adc
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
mov
mov
xor
push
pop
fstpt
xor
negb
mov
arpl
pop
jg
test
insl
nop
repnz
sub
idivl
loop
int3
mov
jno
pop
push
dec
adc
out
jbe
adc
test
and
xchg
shll
add
cmp
inc
add
xchg
jns
fidivl
xchg
rcll
pop
xchg
stos
fisttps
gs
cmp
shrl
aam
imul
xchg
pop
outsb
test
jl
wrmsr
add
sbb
xor
push
jmp
pop
out
jl
mov
aas
push
add
dec
sbb
fisttpl
jo
adc
fucomp
test
adc
js
cmp
push
jle
imul
push
cmpsl
jbe
push
mov
js
imul
xlat
mov
mov
in
add
mov
cli
or
and
xchg
pop
xor
cmpsl
sti
addr16
mov
in
stc
loope
shll
insb
dec
daa
or
les
xor
loope
lea
jle
mov
lahf
mov
push
into
rorb
dec
into
pop
adc
out
popf
push
push
inc
pop
movsl
fldt
rolb
mov
das
jnp
jo
filds
cmp
jno
sarb
outsl
cmp
fildl
lock
or
mov
flds
mov
or
mov
out
add
adc
out
stos
xchg
add
scas
xchg
adc
out
jmp
push
jbe
outsl
out
push
sbb
es
inc
xor
movsb
cmp
adc
pop
hlt
stos
or
push
mov
imul
or
int
add
fsub
sbb
sbb
out
push
inc
inc
lods
rorb
add
add
add
add
sbb
add
add
add
add
add
cmp
add
pusha
add
addb
add
sbb
add
add
mov
add
adc
add
sbb
add
add
pushf
push
add
cmp
add
add
fdiv
add
es
add
xor
add
inc
icebp
add
push
icebp
add
icebp
add
add
add
jle
add
add
add
mov
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
je
arpl
bound
arpl
push
push
jb
je
