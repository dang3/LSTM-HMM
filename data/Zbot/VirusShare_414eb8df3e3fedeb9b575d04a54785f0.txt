pushl
shlb
pop
add
call
add
pop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
in
inc
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
add
test
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
.byte
repnz
add
and
add
add
out
add
inc
and
add
add
fsubs
add
add
add
jle
add
mulb
add
push
and
add
and
add
add
call
and
add
and
add
add
mov
and
add
add
add
add
add
cld
and
add
and
add
add
add
lods
and
add
add
mov
add
aam
add
push
and
add
add
add
add
add
insb
and
add
add
sub
add
add
add
nop
and
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
and
add
add
out
add
inc
and
add
add
fsubs
add
add
add
jle
add
mulb
add
push
and
add
and
add
add
call
and
add
and
add
add
mov
and
add
add
add
add
add
cld
and
add
and
add
add
add
lods
and
add
add
mov
add
aam
add
push
and
add
add
add
add
add
insb
and
add
add
sub
add
add
add
nop
and
add
add
add
dec
outsl
arpl
dec
outsl
arpl
data16
je
je
dec
popa
outsb
fs
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
popa
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
push
jns
gs
add
inc
jne
jb
outsb
je
push
add
dec
add
insb
outsb
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
popa
jo
gs
jb
jns
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
gs
inc
imul
outsl
popa
fs
imul
add
out
inc
gs
imul
bound
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
push
push
je
imul
inc
add
jge
dec
jo
outsb
dec
jne
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
insb
outsl
jb
jl
inc
gs
push
gs
dec
gs
imul
insb
outsl
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
gs
push
outsl
outsl
insb
add
aaa
add
ja
push
fs
jae
push
arpl
add
jae
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
push
imul
gs
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
inc
gs
push
jns
push
imul
gs
imul
gs
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jl
lods
lods
lods
add
test
mov
mov
mov
ret
les
int3
int3
into
rcl
in
rcl
shl
iret
rcl
hlt
into
int3
int
leave
leave
repz
enter
mov
mov
lods
stos
lods
lea
cltd
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
not
rcl
cld
xlat
fdivr
xlat
fcom
xlat
aam
dec
rcl
dec
int
aam
aam
iret
rcl
inc
std
mov
mov
scas
iret
movsl
mov
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
call
iret
sar
aam
xlat
fcom
call
aad
dec
int3
int
into
int
call
aad
dec
int
inc
rol
mov
mov
lods
std
test
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
dec
add
pop
add
push
or
or
sbb
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
dec
into
into
call
rcl
call
xlat
call
fcom
call
aad
dec
int
dec
lret
into
into
int
mov
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
push
push
das
femms
sub
push
xor
cmp
aaa
cmp
cmp
and
and
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
rcl
call
aad
call
aad
call
rcl
dec
leave
enter
inc
mov
mov
scas
lods
lods
jmp
pushf
sahf
cwtl
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jge
jge
jge
jg
jb
jno
bound
mov
cmp
cmp
pop
pop
pop
stos
outsl
outsb
outsl
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
leave
leave
inc
ret
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
xchg
xchg
lcall
lahf
ds
ds
femms
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
jo
pop
pop
pop
or
pusha
nop
fcoms
addl
jl
jp
outsl
outsl
jo
push
addr16
jne
jge
jle
jns
jp
gs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
xchg
incl
test
xchg
xchg
xchg
lahf
lahf
sahf
sti
mov
xchg
cwtl
mov
js
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
cmpb
lahf
lcall
mov
cmp
xchg
std
mov
jle
jno
jo
jne
jae
jle
jge
test
jnp
addr16
cmp
and
jle
cmp
mov
stos
test
stos
lods
lods
sti
stos
lods
lods
lods
stos
lods
test
stos
std
movsb
mov
lcall
xchg
jns
jp
jl
jns
mov
cwtl
movsb
mov
mov
mov
mov
mov
mov
mov
lods
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
lods
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
push
push
femms
push
xor
inc
dec
insl
insl
insb
jl
xchg
leave
cltd
lcall
lcall
std
mov
mov
mov
mov
mov
cltd
jmp
lods
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
test
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
pushf
sahf
popf
std
mov
mov
xchg
in
nop
nop
xchg
in
xchg
push
jne
cmovp
or
inc
es
es
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
std
mov
nop
call
lahf
lahf
jmp
stos
pushl
cmpsl
lods
mov
xchg
test
std
les
mov
ljmp
mov
add
pop
adc
scas
mov
lcall
mov
decl
xchg
call
xchg
xchg
pushf
pushf
pushf
mov
test
movsb
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
popa
popa
jne
jb
mov
lahf
test
mov
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
ss
mov
jbe
mov
movsl
mov
mov
mov
stos
lods
stos
mov
mov
add
pop
pop
adc
mov
lcall
mov
call
xchg
xchg
call
cwtl
xchg
fwait
fwait
cltd
pushf
popf
sahf
sahf
lahf
mov
std
mov
cwtl
cltd
out
xchg
xchg
xchg
xchg
les
cltd
fwait
in
xchg
cwtl
out
mov
xchg
stc
xchg
test
std
xchg
je
fwait
push
test
movsb
dec
cmp
inc
jl
mov
jns
mov
je
mov
outsl
ljmp
adc
stos
or
stos
or
mov
jg
mov
mov
lods
pushf
movsb
movsl
movsl
and
add
add
mov
add
pop
adc
mov
jmp
xchg
xchg
call
cltd
lcall
sahf
lcall
fwait
call
xchg
xchg
decb
xchg
xchg
xchg
cwtl
cltd
cld
xchg
cwtl
sahf
stc
lahf
fwait
mov
cld
popf
mov
xchg
insb
mov
xchg
push
jge
xchg
dec
jns
lcall
popf
and
mov
adc
ljmp
adc
lods
adc
scas
adc
mov
push
mov
imul
adc
mov
lcall
lods
scas
lods
scas
movsb
mov
mov
add
pop
pop
adc
mov
ljmp
pushf
call
popf
sahf
lcall
movsb
movsb
jmp
mov
xchg
decl
mov
decl
jbe
cltd
jb
fwait
bound
call
cs
decl
pop
call
add
pop
lcall
push
pop
jmp
sbb
mov
insl
pushl
push
jo
mov
and
and
shll
inc
aas
cmp
xchg
lods
mov
scas
scas
mov
lahf
lahf
lahf
add
add
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
jmp
cmpsb
cmpsl
ljmp
cmpsl
cmpsl
lcall
orb
mov
decl
sub
mov
pop
incl
add
incl
add
mov
pop
call
add
fwait
add
mov
or
pushl
es
mov
sub
sub
inc
sub
sub
cmp
das
cmp
inc
mov
leave
lea
cld
scas
mov
lret
movsl
dec
mov
mov
add
add
add
lods
movsb
test
adc
cmpsl
scas
ljmp
lahf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
xchg
incl
or
incl
add
push
incl
add
mov
push
decl
pop
call
pop
jmp
add
ljmp
sub
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
mov
roll
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
test
mov
mov
lahf
cltd
sahf
jmp
lods
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
mov
add
stos
add
jno
ret
dec
inc
mov
int
call
inc
call
dec
nop
call
dec
xchg
fmuls
fisttpll
fsts
call
xchg
std
mov
mov
movsl
movsb
mov
or
add
add
add
add
dec
dec
adc
jl
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
outsl
decl
decl
adc
decl
or
lea
push
call
add
popf
add
mov
add
test
pop
arpl
mov
inc
mov
aam
cltd
call
push
cltd
fsts
fistl
jmp
pop
pushf
fistps
jmp
pop
mov
jmp
pop
lahf
call
test
mov
mov
jne
sahf
mov
add
inc
inc
adc
jns
lahf
lcall
sahf
cltd
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
call
pop
call
or
popl
push
call
pop
jmp
add
lods
add
mov
data16
mov
xor
fisubl
jmp
arpl
jmp
cmpsl
jmp
cmpsw
jmp
cmpsl
jmp
test
test
test
mov
cmpsb
test
mov
lahf
sahf
add
inc
inc
adc
jae
fwait
xchg
cwtl
call
lahf
pushf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
xor
lcall
call
or
xchg
add
fwait
add
mov
add
lods
add
mov
pushl
movq
roll
fsubrl
jmp
jo
jmp
jno
jmp
jo
call
jne
in
jne
out
je
out
jne
out
je
jmp
xchg
mov
cmpsb
test
lahf
sahf
sahf
pop
mov
add
add
add
add
jg
cmp
imul
lea
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
outsb
lcall
aaa
jae
mov
push
call
call
add
movsl
add
stos
add
mov
popa
pushl
add
sbb
ficoml
in
mov
call
jge
in
cmpl
push
test
push
test
ljmp
inc
mov
stos
cmpsl
pushf
pushf
popf
daa
lahf
mov
lahf
add
add
add
add
xor
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
pushl
insl
mov
lcall
jmp
cmp
fwait
pop
arpl
xchg
add
sahf
add
movsl
add
test
add
add
mov
add
shll
movsl
jmp
mov
lock
push
nop
sar
xchg
push
nop
push
xchg
in
nop
mov
inc
ret
clc
lods
stos
stos
mov
popf
sahf
xor
pushf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
inc
mov
jle
lcall
dec
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
enter
xor
mov
in
xchg
ret
push
fwait
push
cltd
push
cltd
pushf
enter
enter
lret
popf
int3
sti
popf
int3
sti
cltd
leave
push
xchg
sar
mov
dec
mov
mov
lahf
lahf
lahf
aas
xchg
nop
add
add
add
das
sub
outsb
push
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
inc
mov
lahf
lcall
push
xchg
lods
dec
mov
movsl
sub
cltd
or
add
movsb
add
stos
add
mov
popa
mov
add
movl
jbe
fiadds
in
lea
push
movsl
into
push
cmpsb
int
imull
sar
cli
cmpsl
iret
cld
test
iret
cld
stos
iret
cld
cmpsl
iret
push
lahf
mov
dec
enter
mov
into
sahf
lahf
sahf
dec
xchg
xchg
xchg
add
lcall
xor
add
sub
or
inc
bound
pop
xlat
je
jb
mov
mov
ret
mov
ret
ret
leave
enter
ret
mov
cmpsl
jmp
push
mov
scas
dec
xchg
mov
add
jmp
add
mov
mov
add
into
add
add
fists
jge
out
pop
cmpsb
push
popf
lret
lods
sar
cli
mov
sti
mov
sti
scas
sar
cld
mov
mov
cld
mov
cld
mov
pushl
sar
mull
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
dec
dec
outsl
outsl
jo
cwtl
fwait
lcall
xlat
fsubr
aad
fdiv
iret
rcl
std
int3
int3
int3
dec
lret
leave
leave
lret
dec
lret
leave
inc
leave
mov
lods
jmp
push
mov
lods
cmp
lcall
add
lods
add
mov
mov
add
rolb
outsl
call
add
loopne
jae
call
jb
sti
scas
aam
std
mov
cld
mov
fcos
cld
mov
mov
fdivr
inc
fcos
std
mov
int
out
call
lret
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
enter
jecxz
out
jmp
test
in
leave
fsub
fcmovnu
fdiv
xlat
cli
std
int3
ror
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
lret
add
aad
jno
faddl
ja
jecxz
js
in
xor
cli
mov
inc
inc
loopne
std
inc
fdivrp
dec
fdivrp
dec
std
enter
enter
lret
cli
mov
leave
call
lret
sar
mov
mov
xchg
adc
add
add
std
add
incb
std
incl
repnz
or
in
in
pop
in
out
in
sub
in
out
dec
call
jmp
out
jecxz
out
fcmovu
fsubr
ret
stc
stos
jo
cmpsb
cmp
movsb
push
jmpw
add
mov
fs
mov
add
int
outsl
fadds
jb
filds
jbe
ljmp
sti
mov
loop
std
int3
in
dec
out
dec
in
std
int
dec
loop
dec
loope
std
shl
std
iret
jecxz
shl
call
jecxz
cld
fcos
out
mov
fdivr
cmpsb
test
xchg
xchg
xchg
sbb
lcall
incb
std
incb
idiv
testl
lock
in
repnz
out
lock
cmp
out
in
pop
loope
mov
xchg
sti
mov
push
pop
jmp
add
mov
inc
add
enter
rolb
jb
fildl
je
jecxz
jp
in
push
jge
negl
sti
mov
dec
in
cld
shl
std
shr
std
shr
call
in
call
out
xlat
jmp
fucompp
std
cld
shl
push
ret
aam
in
lret
rep
test
xchg
and
cwtl
xchg
add
cli
add
std
stc
add
cld
clc
add
div
or
aam
xor
mov
xchg
negb
add
add
lods
add
mov
add
leave
add
roll
jno
fildl
jne
out
ja
in
sbb
sti
ret
cld
fld1
fucompp
fldl2t
fucomi
fucomp
std
fsubr
fucomp
fsubrp
loopne
std
fsubrp
aam
push
ret
out
rcl
sar
lods
lods
stos
lods
xchg
xchg
xchg
outsb
outsb
jo
xchg
xchg
xchg
add
loop
add
mov
xchg
repnz
and
lahf
add
cmpsb
add
mov
popa
mov
add
int3
add
aam
jae
filds
jne
call
sub
shl
std
fucomip
std
fucomp
std
xlat
out
cld
aad
cld
shl
cli
shl
sti
shl
stc
into
test
aad
out
mov
fcomp
xlat
sti
mov
mov
cltd
cltd
fwait
cmp
cltd
lcall
add
add
add
leave
lds
scas
mov
lcall
add
mov
fs
mov
add
iret
add
add
loope
js
ljmp
cli
cwtl
sti
leave
loope
cld
lret
cli
fdivrp
test
sar
repnz
sar
repnz
into
ljmp
ljmp
cli
ljmp
cmc
loopne
mov
mov
xchg
add
add
add
into
int
mov
rol
mov
cmpsl
loopne
xor
jmp
add
mov
data16
mov
add
dec
or
rorb
jmp
sbb
call
scas
int3
ljmp
std
loope
ret
cld
loopne
ret
mov
neg
mov
lret
int3
in
enter
into
xlat
shl
xlat
fcmovnb
out
loope
in
in
test
in
out
popf
ljmp
push
lods
lods
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
mov
ret
ret
pop
mov
stos
aam
dec
cmp
cmpsl
sbb
scas
and
mov
js
mov
inc
xchg
ret
stc
lret
fs
test
mov
out
mov
mov
lret
lret
rcl
lret
mov
int
mov
xlat
aam
jg
fcmovnu
jb
loopne
gs
in
out
jmp
xor
cmc
cmc
cmc
and
repnz
sbb
or
mov
into
add
add
add
mov
inc
mov
test
lock
jbe
ljmp
mov
sarb
mov
les
rcrl
lret
jp
int
addr16
rcl
push
rcl
rorb
xlat
inc
rcl
xor
daa
xlat
sbb
loopne
adc
in
push
jecxz
out
jmp
in
lock
add
sti
cmc
add
std
cld
add
incl
std
incb
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
enter
int3
lret
rcl
and
aam
sbb
aam
adc
aam
rcr
aad
rcr
fadds
add
add
in
add
in
ljmp
std
incl
mov
mov
add
ret
ret
sub
ret
ret
sub
mov
mov
push
ret
or
enter
enter
lret
aad
add
add
xlat
add
add
aad
add
xlat
loop
aam
add
loop
add
add
out
add
repnz
add
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
into
iret
jmp
aad
cmc
rcl
aam
into
iret
sar
lret
lret
lret
stc
lret
hlt
mov
mov
iret
lods
stos
stos
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
mov
rol
leave
enter
iret
sar
xlat
call
xlat
call
iret
iret
dec
int
dec
lret
lret
mov
mov
lods
icebp
cltd
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jne
je
fs
inc
inc
dec
cmp
sub
sub
ss
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
lret
rcl
call
rcl
dec
lret
mov
sar
mov
ljmp
lahf
popf
cwtl
xchg
xchg
jmp
jno
xchg
adc
add
xor
add
add
add
add
cmpl
addl
aam
push
mov
push
push
push
stos
push
outsb
insl
push
pop
pop
cmp
aaa
aaa
pop
jno
outsl
adc
mov
fstpt
mov
ret
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
xchg
cltd
fcoml
addb
jl
jl
jns
js
jns
jns
jnp
jns
jae
jae
push
push
push
cmp
je
popf
popf
popf
mov
scas
scas
rep
scas
scas
sti
scas
scas
lods
std
cmpsl
test
std
popf
popf
sahf
call
test
call
mov
lods
jmp
scas
scas
leave
cmpsb
cmpsb
movsl
cltd
jae
je
adc
adc
add
add
add
add
insl
outsl
outsb
pop
nop
mov
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
jo
outsl
orl
lcall
lea
call
popf
lahf
ljmp
test
mov
mov
mov
xlat
movsl
mov
addl
add
add
pop
pusha
pusha
or
lods
mov
movsl
lahf
movsl
decl
lea
call
lahf
sahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
insl
insl
outsb
xchg
subl
nop
xchg
lock
nop
lcall
popf
pushl
outsb
xchg
mov
push
mov
mov
mov
out
lods
stos
insl
stos
test
add
add
add
popa
pusha
pusha
or
mov
in
mov
xchg
call
cwtl
cwtl
lcall
cltd
cltd
lcall
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
push
cld
xchg
pop
jle
popf
dec
jp
mov
ss
mov
jae
mov
outsl
pushl
sbb
mov
mov
mov
mov
jle
movsb
mov
add
add
add
pusha
or
mov
in
mov
cltd
lcall
mov
mov
decl
addl
xchg
jb
cld
cwtl
pop
test
xchg
dec
jp
nop
cmp
nop
sub
xchg
sbb
lcall
push
ljmp
sbb
mov
insl
pushl
push
jno
mov
pop
mov
scas
scas
xchg
lahf
lahf
sahf
adc
add
add
pop
pop
pusha
or
lods
mov
test
lahf
lahf
jmp
test
test
cltd
xchg
lcall
cmp
mov
decl
adc
test
push
decl
add
xchg
add
popf
add
cmpsl
or
pushl
sub
inc
jge,pn
les
jge
enter
lret
xor
cwtl
inc
test
mov
test
cmpsl
sbb
add
add
pop
popa
popa
or
movsb
stos
in
mov
cmpsb
ljmp
mov
pushl
mov
decl
push
pop
incl
push
push
decl
add
xchg
add
lahf
add
cmpsb
add
mov
outsb
inc
ss
lret
inc
mov
into
inc
call
inc
nop
call
inc
xchg
fadds
call
arpl
stc
mov
mov
movsb
movsl
movsb
daa
std
std
incb
add
add
pop
popa
pop
or
lahf
mov
ljmp
mov
pushl
mov
stos
call
push
popa
call
push
pop
decl
add
xchg
add
mov
add
scas
add
mov
dec
nop
fstps
fcompl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jle
jp
pushf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
jmp
cs
lcall
and
call
push
lcall
add
scas
add
mov
addr16
xor
jmp
insb
test
jmp
jno
out
jae
jmp
test
std
mov
cmpsl
test
addb
add
dec
pop
outsb
outsl
imul
xchg
lcall
mov
mov
sar
mov
jmp
jne
lahf
cmp
popf
sub
xchg
or
fwait
add
movsb
add
lods
add
mov
gs
or
call
dec
xchg
jmp
jns
jmp
test
push
xchg
push
xchg
mov
cmpsb
cmpsl
push
lcall
add
sub
push
push
dec
pop
gs
xchg
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
jg
mov
pop
pop
jmp
add
mov
arpl
mov
adc
jmp
popa
mov
push
xchg
cwtl
push
cltd
stc
lcall
notl
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
mov
test
cmpsb
pop
mov
lods
dec
test
mov
add
add
mov
mov
add
and
push
mov
iret
clc
test
sti
stos
sar
std
stos
sar
std
lods
sar
cli
cmpsb
int
out
inc
rol
stos
stos
stos
jne
sahf
popf
or
add
add
push
dec
dec
aaa
jb
jae
stos
test
int
lret
cmc
lret
int3
lret
lret
enter
mov
popa
ljmp
ljmp
add
add
iret
add
fiaddl
push
xchg
mov
std
mov
cld
mov
fdivr
std
mov
fdivr
cld
mov
ljmp
repz
lods
lods
mov
add
add
add
add
or
rcl
dec
loope
jecxz
fsubp
loope
ffree
aad
out
shlb
cmpsl
sub
pop
ljmp
add
leave
add
xlat
add
loop
jp
icebp
dec
mov
cld
ret
loope
inc
loop
inc
loopne
dec
loopne
dec
loopne
std
leave
loope
sti
out
mov
lret
divb
sahf
sahf
sbb
add
add
std
incb
incl
jmp
out
sbb
jmp
xor
loop
jecxz
les
mov
mov
add
mov
inc
add
into
add
fildl
je
call
outsb
mov
sti
std
shl
call
out
std
shl
aam
out
std
xlat
call
push
xlat
fmul
sar
mov
mov
add
std
std
add
incl
cld
cld
cld
pop
aad
aad
mov
pop
xchg
lahf
or
stos
add
mov
fs
add
rolb
jno
loopne
ja
out
and
shl
fsubr
std
fsubr
fld1
fsubr
sti
fld1
std
sti
aam
push
jmp
rcl
sti
mov
lahf
lahf
das
add
add
int
int
mov
bound
ljmp
add
movb
call
add
loopne
ja
in
xor
sti
lret
loop
clc
lret
test
repz
bnd
aam
out
ret
out
aad
out
shl
ljmp
ljmp
test
add
add
add
aam
push
mov
jb
or
insl
inc
pop
jno
int3
and
sub
sti
fists
clc
in
mov
out
jecxz
leave
jmp
fnstsw
leave
loopne
iret
mov
jecxz
ficompl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
andb
int3
mov
ret
nop
aam
enter
lret
insl
aam
int
aam
rorb
fcomp
cmp
loopne
das
in
fsubl
jecxz
icebp
adc
in
in
or
incl
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
mov
rclb
mov
rcl
or
loope
or
int3
int
lods
stos
stos
add
std
incb
std
incb
cltd
fwait
fwait
add
or
int3
into
into
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
mov
rol
mov
mov
scas
insb
stos
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
mov
jmp
aad
aad
rcl
sar
into
into
iret
std
mov
mov
roll
push
add
add
add
add
add
add
add
add
jae
jb
data16
dec
dec
das
cs
sub
and
add
add
mov
mov
cmpl
ret
int3
int3
call
rcl
dec
int
dec
enter
mov
lcall
mov
push
add
add
add
add
je
jae
xchg
adc
arpl
mov
data16
outsl
outsb
insl
jb
bound
pusha
pusha
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
xchg
xchg
lds
jno
es
pop
add
add
jb
jae
pushf
xchg
pushf
mov
xchg
mov
xchg
or
test
push
dec
push
inc
mov
fwait
into
movsb
mov
lahf
sti
xchg
xchg
xchg
decb
mov
lods
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
mov
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
popf
cmc
cltd
lcall
push
push
push
imul
jg
mov
xchg
notl
mov
pushl
push
mov
test
scas
push
stos
lods
lods
add
add
add
mov
scas
cmpsb
lods
cld
xchg
xchg
xchg
call
cltd
lcall
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
bound
std
fwait
inc
jbe
cmpsb
ss
scas
sub
outsl
pushl
cmp
mov
mov
imul
int
add
add
xchg
pop
scas
cmpsb
stos
test
lahf
sahf
lahf
jmp
mov
xchg
decl
ja
popl
decb
push
arpl
xchg
adc
cwtl
or
or
scas
sbb
mov
es
shrl
inc
aas
xchg
mov
mov
subl
jne
push
mov
movsb
test
ljmp
mov
jmp
sub
mov
pop
decl
add
add
xchg
add
mov
adc
shlb
lret
aas
mov
roll
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
movsb
movsl
movsb
push
add
add
push
push
xchg
xchg
xchg
test
mov
lods
pushl
mov
ljmp
outsl
call
pop
pop
decl
add
mov
add
mov
push
xchg
fstpl
loope
mov
jmp
data16
call
lcall
cmpsb
test
pop
add
add
bound
adc
popf
pushf
fwait
cld
mov
mov
mov
mov
scas
lcall
jb
lcall
jmp
add
mov
xor
jmp
jo
jmp
js
in
jl
out
jle
out
jle
fstps
mov
and
add
add
adc
imul
mov
mov
mov
rol
mov
fs
cmpsb
inc
jge
sahf
and
pushf
add
pop
pushl
or
dec
xchg
out
mov
push
xchg
push
cwtl
leave
clc
xchg
jmp
cmpsb
mov
movsl
sub
aas
inc
inc
adc
push
xchg
mov
mov
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
fs
add
aad
ja
in
insb
scas
push
cmpsl
iret
clc
lods
sar
cld
lods
sar
cld
lods
sar
std
scas
sar
jmp
leave
inc
mov
cmpsb
ds
incb
xor
xor
inc
scas
mov
mov
aam
rcl
aam
rcl
shr
lret
enter
mov
jmp
add
add
add
out
xchg
stc
pop
std
mov
fdivr
inc
inc
std
ret
out
mov
shl
test
addb
add
add
in
jmp
jmp
jmp
in
fcomp
fldenv
movsl
daa
outsl
ljmp
add
int3
add
faddl
jne
lock
dec
out
dec
in
std
shl
call
out
shl
push
fcos
ror
int
scas
lods
lods
popa
jg
addb
add
std
incb
std
incb
lret
int3
shrl
lahf
sbb
stos
add
mov
add
loope
jns
hlt
push
movsl
inc
loop
std
jmp
std
aam
std
shl
stc
aam
push
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
scas
add
insb
dec
or
cmp
insb
stos
cld
out
mov
shl
jmp
ror
out
shl
in
aad
call
scas
push
lcall
add
mov
stos
xchg
dec
and
shll
jbe
mov
mov
lret
int3
outsl
fmul
rcrb
rcl
dec
in
fistpll
call
out
out
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
les
int3
sbb
bswap
into
int
aam
push
std
add
std
std
add
add
add
sarl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
daa
jmp
push
test
mov
lods
fisubs
xor
aas
in
sbb
mov
fimull
ret
xchg
loop
and
adcb
jns
popa
mov
pop
jo
push
xlat
stc
cltd
cmp
nop
nop
pop
out
or
std
xchg
js
or
call
xchg
rorb
sbb
pop
ds
in
and
xor
icebp
dec
nop
scas
lds
into
push
lret
icebp
cmpsb
inc
xchg
cmp
xchg
jo
repnz
sub
andb
mov
jg
test
and
and
xor
mov
lret
mov
inc
lods
ret
daa
inc
and
inc
pop
xor
ljmp
sub
mov
or
inc
arpl
inc
xor
js
lahf
in
mov
outsb
es
lock
stos
add
sti
cmpsl
adc
iret
cwtl
mov
rorl
lret
dec
pusha
xlat
fwait
das
mov
sarb
sub
imull
xchg
adc
pop
pop
sbb
adc
aad
out
fldcw
js
and
inc
or
int
mov
int
cmc
pushf
cmpsb
add
push
xchg
dec
faddl
ss
sti
add
fisubl
push
mov
cmpl
leave
mov
adcb
mov
push
dec
xor
je
dec
or
jle
pop
ss
test
inc
mov
mov
dec
add
push
movsl
icebp
inc
push
cmp
jle
ljmp
push
repz
push
dec
adc
cltd
inc
movl
push
roll
and
add
pop
popa
pop
push
test
testl
or
into
popl
push
jb
pop
sub
sub
nop
out
ds
dec
xchg
push
mov
popaw
inc
lock
movsb
dec
cmp
mov
lcall
xor
jbe
movsb
loop
and
ror
cmp
popa
das
push
xchg
call
xchg
notl
and
add
nop
fidivrl
jae
cli
enter
int3
adc
jge
lahf
mov
xlat
adc
out
das
adc
call
jmp
adc
scas
sub
icebp
mov
cwtl
jo
xor
jbe
fisubrl
cmp
testb
jns
nop
cmp
push
sarl
ljmp
cmpsb
push
xor
sti
lret
mov
js
data16
pop
adc
call
fisubrl
call
push
sub
jmp
adc
std
popf
pop
or
fisubl
pop
int3
push
movsl
jmp
cmp
icebp
loope
sbb
jnp
in
cmp
pop
push
dec
or
sbb
cltd
call
fldl
pushf
jle
out
fisubrl
push
mov
sub
jne
dec
push
add
inc
push
cmpsl
xor
nop
adc
lret
xchg
out
lea
js
inc
cmc
or
pop
cmc
fcmovnu
mov
test
adc
pop
cli
mov
mov
aad
test
and
sbb
push
sbb
add
bound
mov
int
lret
and
call
arpl
jecxz
sbb
sub
and
mov
scas
adc
and
pop
loopne
in
xchg
pop
les
fwait
pop
xchg
inc
sbb
mov
mov
fnstsw
cwtl
jg
cmp
mov
mov
imul
xor
push
jl
dec
dec
cmc
push
cwtl
inc
fmuls
xchg
lahf
fnstcw
push
ficompl
jecxz
pop
or
int
xchg
gs
ds
mov
mov
or
andb
or
stos
jmp
shl
sti
pop
mov
mov
imul
lcall
cli
out
insb
cmp
lcall
es
push
dec
aad
cltd
jno
mov
inc
xchg
xor
mov
mov
dec
test
aad
inc
adc
das
sub
mov
loope
lea
and
lahf
or
cmp
mov
dec
mov
shlb
mov
cmp
mov
or
sbbb
cmp
jmp
pop
and
aaa
xor
push
loopne
scas
dec
addb
fiaddl
sbb
pop
out
lret
dec
mov
scas
sbb
pop
popa
jne
jb
lea
add
fidivrl
aaa
les
mov
sub
dec
adc
add
out
mov
aad
jmp
fdiv
subl
test
daa
dec
pop
mov
mov
shlb
ljmp
pop
test
cmp
mov
lahf
push
iret
xchg
aaa
jl
es
sbb
lret
push
aas
xchg
cmp
int
cmp
jb
pop
adcl
out
bound
test
mov
popa
bound
repz
aad
cmp
cmc
enter
and
adc
cwtl
pop
sarb
or
jb
mov
imul
dec
out
adc
bnd
mov
jmp
addr16
cmp
movsb
fimuls
es
loopne
cld
repz
sub
test
loopne
dec
jno
cmp
add
inc
mov
jnp
push
test
xchg
sub
pop
cmp
dec
mov
jns
dec
movsb
shlb
cmpsb
cltd
loop
addr16
dec
jecxz
mov
inc
push
adc
lds
jg
inc
fnstcw
xchg
inc
sub
cmp
sub
mov
aam
or
stc
das
or
iret
add
inc
pusha
push
insl
fistpl
jno
jle
or
popf
mov
push
push
lcall
arpl
fbstp
loopne
fwait
movsb
cmp
iret
data16
mov
lahf
fadd
dec
loope
and
push
mov
pop
fidivl
mov
lock
es
sub
jl
xchg
adc
subl
jno
sbb
mov
push
clc
add
xor
dec
pop
mov
lea
mov
in
test
flds
or
xchg
mov
shr
jle
out
dec
fistpll
or
fmull
jg
adc
push
jb
jb
mov
mov
or
insb
adc
xchg
mov
and
jo
cmp
xor
jno
sarl
and
nop
inc
lret
mov
js
push
rorl
andl
pusha
adc
sbbl
insb
adc
pop
add
out
push
cmc
adc
test
lret
sti
cltd
dec
in
sbb
fmuls
imul
outsl
pop
mulb
sarl
xchg
cmpsl
ds
adc
xor
lds
mov
jp
mov
add
inc
fcompl
mov
bound
aam
mov
lret
pop
repnz
push
jmp
add
jo
mov
mov
mov
push
push
inc
add
add
and
adc
adc
rdpmc
arpl
cmp
clc
and
sub
or
adc
inc
arpl
movsb
xchg
outsl
daa
int
xor
push
pop
ljmp
outsb
sub
xchg
pop
cmp
xchg
stos
cmp
mov
scas
push
in
inc
ret
outsl
ret
cmp
into
shlb
sub
mov
sbb
rclb
out
push
sbb
out
cmp
or
ret
pop
mov
loope
js
sub
call
mov
sbb
test
daa
or
pop
jns
shrb
inc
fdivrp
rcll
std
dec
and
dec
push
jo
sbb
ret
mov
xchg
push
rcrl
push
movsl
dec
imul
ret
mov
rorl
xor
lods
mov
pop
andb
jo
mov
testl
repz
jle
cmp
test
dec
pop
int
mov
pop
sub
fnsave
shrl
xchg
in
addl
cmp
es
cwtl
movsl
int
jmp
addr16
fimull
into
cmp
in
test
dec
lret
bound
sbbl
dec
and
cmc
in
pushf
xor
mov
icebp
out
stos
call
iret
cmp
cmpsb
cmp
shll
push
loop
aas
aam
ljmp
les
testl
push
mov
fwait
and
mov
mov
shlb
shrl
hlt
testb
xchg
sub
cli
lds
sub
out
fidivs
xor
mov
push
call
xorl
xor
hlt
mov
fxam
jl
enter
in
xchg
sub
movsl
ss
add
iret
jno
mov
rcll
fstps
pop
out
addr16
enter
push
inc
dec
cltd
xor
loop
pop
pop
pop
pop
mov
mov
cmp
outsl
shrb
stc
nop
mov
pop
dec
loop
adc
push
xchg
inc
fcoml
je
sbb
aas
sbb
sub
lods
mov
cmp
pop
mov
pop
push
in
mov
arpl
jecxz
sti
xchg
pop
add
shlb
mov
push
or
mov
nop
gs
int3
mov
mov
mov
mov
inc
push
sbb
in
push
sub
bound
xchg
sub
repnz
aad
leave
aaa
into
icebp
sbb
test
xchg
pop
lock
stos
dec
loopne
imul
cmp
dec
loopne
shrb
ret
mov
movsb
rcrl
inc
xlat
call
or
jnp
shrl
pushf
and
inc
jbe,pn
mov
ret
mov
sbb
or
stos
loop
jmp
mov
mov
in
data16
cmpsl
push
imul
push
jl
jne
or
xor
and
loop
mov
fnop
addr16
popa
movsl
cmp
in
lea
dec
aaa
into
inc
pop
icebp
sub
jo
adc
test
dec
jecxz
movsl
lock
sbb
sub
stos
mov
lret
fmul
jnp
mov
fsubrp
test
inc
enter
jp
jecxz
xchg
jge
inc
xlat
jne
push
call
or
adc
fwait
mov
clc
mov
push
or
inc
xor
push
push
or
cmpsl
cmp
shlb
testb
mov
fwait
xor
scas
jns
and
jnp
inc
pop
xor
movsl
jbe
cmp
sarb
mov
pop
rcrl
adc
push
insb
mov
pop
repz
xor
mov
jnp
push
inc
in
xorl
leave
pusha
and
fwait
dec
leave
mov
fcomps
push
lret
aaa
outsl
popa
cmpsl
ds
nop
pop
repz
int
outsl
and
adcb
sbb
loopne
movsl
and
shlb
xor
push
fldcw
jne
je
shll
mov
test
sbbl
sbb
js
cmp
stos
fisubrs
clc
mov
fiadds
cltd
iret
xchg
jp
fabs
outsl
add
je
outsb
add
pop
adc
call
sbb
pop
lock
xchg
sub
lret
push
push
bound
inc
cmp
jae
or
inc
sbb
sub
scas
mov
and
mov
outsl
push
gs
inc
imul
xchg
imul
cmp
mov
dec
push
jnp
xor
std
sbb
test
push
pop
repz
xadd
mov
xor
fnsave
and
ss
push
call
inc
ret
push
cmc
pop
outsl
int3
arpl
add
inc
mov
enter
lock
and
mov
pop
lods
inc
mov
cmp
and
add
clc
leave
cmp
test
and
out
outsl
iret
scas
inc
cld
nop
jg
add
sub
xchg
imul
inc
daa
xor
push
dec
lds
loop
sub
dec
lock
outsl
jo
popa
fwait
cs
int
hlt
outsl
je
mov
dec
shrb
cmpsl
pop
repnz
xchg
sub
cmp
jne
fadd
pop
adc
mov
inc
out
loopne
mov
orl
jecxz
icebp
mov
cmp
lret
and
push
pushf
int
outsb
or
sbb
inc
xchg
ret
jle
push
jl
adc
jbe
or
dec
iret
data16
data16
cli
adc
cli
mov
in
push
scas
dec
in
mov
pop
divb
je
stos
push
adc
inc
inc
loop
jnp
cmp
push
adc
stc
addr16
data16
mov
mov
ficompl
ret
jbe
inc
mov
arpl
push
inc
in
test
xor
shrb
mov
ret
and
mov
in
xchg
jmp
int
ljmp
std
jge
cmp
ljmp
leave
leave
xor
pop
mov
les
or
leave
ss
popa
ljmp
dec
std
lds
sbb
add
push
add
mov
loopne
fnstenv
xchg
es
dec
push
in
cltd
jbe
sub
ds
jl
jecxz
mov
std
add
inc
jbe
mov
rorb
jae
je
sub
lea
mov
push
cli
dec
pop
mov
mov
popa
xchg
mov
gs
mov
pop
xchg
cmp
xchg
and
cld
xchg
mov
fs
ljmp
sbb
xor
scas
inc
inc
aad
add
pop
mov
cmp
jp
sahf
imul
mov
addr16
xor
and
jns
mov
cmp
adc
push
and
xchg
shrl
imul
movsb
ja
loope
or
rclb
call
xchg
sub
je
mov
lea
pop
sub
inc
dec
inc
fdivrl
icebp
mov
adc
pop
dec
mov
shrb
outsl
dec
loope
subl
xchg
adc
aaa
xchg
mov
cmpsl
lahf
sbb
std
xchg
lods
cli
testl
aad
leave
pusha
shlb
xchg
pushf
repz
cs
mov
out
ja
daa
mov
or
mov
xchg
xsha1
cmpsb
lret
das
sbbb
inc
imul
arpl
add
test
mov
push
sub
rcrl
pop
adc
fidivl
jnp
mov
or
sti
icebp
cmp
and
es
mov
fdivr
jo
test
push
pusha
imull
int3
sbb
ret
js
outsl
push
jl
or
or
js
cwtl
cs
test
mov
jle
nop
and
addr16
mov
xlat
xor
pop
call
or
jnp
iret
jecxz
sarl
sub
cmp
out
out
lahf
sub
test
bound
lods
inc
adc
sub
xor
jge
cltd
add
pop
in
dec
out
sub
popa
jbe
push
lods
xchg
mov
sub
inc
fidivrs
fists
xor
jo
mov
lret
es
mov
rolb
xchg
ss
aad
les
mov
pop
stos
cmp
sahf
imul
and
sbb
fmul
cmp
jb
jp
stc
imul
dec
sbb
stc
nop
sub
sbb
ds
lock
sbb
cmp
outsl
push
cwtl
pop
inc
fimuls
mov
test
in
imul
mov
sub
xor
in
mov
ss
movsb
cmp
pop
inc
fldenv
push
test
adc
andb
orb
pop
repnz
adc
mov
push
test
jns
inc
push
and
dec
gs
xor
mov
push
fnsave
cmp
cwtl
cmpsb
in
fdivrs
add
pop
repnz
sbb
fisttpll
addb
into
cmp
mov
fisttpll
sahf
jg
out
imul
add
cmpsb
mov
sub
loop
iret
shll
or
jmp
sbb
pop
andb
mov
push
sub
inc
in
ds
jmp
mov
adc
stos
xchg
add
xor
xchg
test
outsl
sub
fsubrs
xchg
push
mov
in
mov
add
mov
notb
mov
mov
mov
push
call
jns
in
xchg
jno
sahf
mov
xchg
and
and
imull
xor
lcall
addl
xor
arpl
mov
clc
ja
cmp
mov
dec
cli
inc
cmp
xchg
or
adc
jns
aaa
dec
jne
sub
xlat
push
pop
inc
leave
push
fs
movb
test
jp
mov
xor
mov
mov
ds
fnsave
mov
aaa
sub
pop
lcallw
lock
ss
push
cs
jl
mov
jb
rclb
xor
fimuls
std
sub
cli
xchg
sub
jecxz
jmp
mov
ret
dec
arpl
mov
cmp
fcmovnb
pop
int3
fwait
call
scas
sub
loopne
fists
cmpsb
cmp
addr16
xchg
lds
dec
rorb
or
cli
push
jo
mov
cmp
lods
aad
and
lret
xchg
mov
call
out
cli
aad
xor
sbb
lds
and
adc
pusha
test
in
or
fst
sub
mov
fidivrs
lret
lods
xchg
jmp
xchg
shll
adcb
and
cmpsl
inc
cld
mov
mov
xlat
cld
xchg
loope
or
mov
push
out
xor
push
out
jmp
or
cltd
cmpsb
push
ljmp
jno
ja
mov
xchg
lret
lcall
mov
sub
aaa
into
repnz
pop
xlat
outsb
dec
rol
pop
lds
adc
das
test
mov
mov
mov
loopne
clc
fs
ljmp
adc
push
mov
scas
scas
fisubrl
int
roll
std
in
daa
mov
insl
cmp
ret
lret
jg
in
insl
add
push
into
cmpsb
out
dec
sbb
popf
xor
cmp
mov
cltd
xor
leave
mov
mov
sub
push
test
mov
lea
nop
daa
in
or
test
jg
jg
out
cltd
xor
in
es
xchg
push
jge
dec
outsb
or
repz
clc
jecxz
aaa
into
fsubrs
popf
stc
push
jmp
ja
jg
inc
cld
xchg
xor
imul
and
mov
insb
out
inc
fmul
std
xchg
mov
addl
xchg
sub
xor
mov
fwait
stos
push
call
and
sbb
ja
pop
repz
mov
in
adc
xchg
lock
cltd
xor
pop
xchg
sub
adc
jmp
xchg
jo
pop
pusha
leave
pusha
push
in
sub
ffree
and
mov
cmp
xor
push
pop
mov
xchg
adc
adc
xchg
sub
mov
gs
add
add
int3
data16
add
test
leave
aaa
les
filds
add
inc
out
push
int3
arpl
in
jbe
gs
push
inc
push
in
xor
xchg
test
or
lea
dec
shrl
cmp
imul
xchg
xlat
jge
js
push
pop
scas
inc
push
and
xchg
daa
dec
loopne
repz
loop
inc
fucom
fwait
push
call
mov
inc
and
lods
pushf
mov
adc
push
mov
add
or
ljmp
loope
cmpsl
lods
add
daa
addl
movsb
mov
insl
adc
push
adc
lahf
ss
xor
mov
jg
rol
pop
ljmp
push
cmp
pop
mov
insl
sbb
inc
sub
lds
pop
push
sbb
pop
dec
mov
mov
pusha
jae
mov
sub
sub
pusha
pop
jnp
ds
jns
sub
fidivs
bound
cs
gs
inc
dec
sbb
jbe
imul
cmp
pop
ret
pop
gs
mov
pop
xor
in
push
fistl
sub
add
leave
pusha
fwait
mov
sub
mov
iret
lods
sbb
jne
into
mov
fisubl
shlb
sti
shrl
mov
mov
movsl
call
nop
daa
aad
pop
in
out
sub
out
mov
ret
call
or
jne
mov
std
xchg
mov
roll
fcomip
out
sub
ret
pop
movsl
dec
xchg
sub
mov
popa
dec
hlt
lods
inc
ret
outsl
insl
cmp
ret
pop
push
pop
hlt
mov
mov
jae
outsb
add
es
lock
mov
jns
push
movsl
push
lcall
lea
inc
push
sbb
icebp
add
xchg
adc
out
jb
je
sbb
or
pop
repz
popa
pushf
pop
sahf
pop
orl
inc
aaa
into
push
cmp
mov
jbe
in
dec
mov
das
push
mov
adcl
push
repz
fnsave
addr16
sub
repz
mov
in
test
sbb
test
test
lret
sbb
int3
loop
repnz
mov
repz
sahf
mov
fnstcw
ljmp
sahf
cltd
push
mov
xchg
or
add
fbld
or
add
xor
add
adc
je
cwtl
xlat
sbbl
cltd
cmp
or
sarb
push
jnp
frstor
imul
adc
mov
inc
imul
jnp,pt
mov
or
or
lods
popf
xor
sub
pop
repz
xor
js
jns
cs
add
out
xchg
sub
sub
jle
sbb
bound
popf
xor
lahf
xchg
sub
push
in
dec
add
lcall
ror
pusha
add
mov
xchg
lods
shrl
mov
pop
pop
inc
fiadds
fisubrl
gs
nop
shl
jge
mov
call
mov
outsl
push
push
lods
repnz
daa
lea
add
test
sbb
xchg
icebp
jbe
in
pop
sahf
aas
fs
in
mov
add
andl
xor
idiv
mov
in
pop
fsubrs
jle
add
out
test
add
enter
fcomps
push
in
std
flds
lcall
pop
lock
je
negb
pop
iret
sbbw
in
andb
sarb
imul
mov
mov
in
push
mov
sbb
mov
xor
push
inc
or
mov
aas
mov
and
pop
jle
mov
inc
lahf
xchg
sub
shrl
cmp
pusha
lea
sub
mov
inc
jecxz
mov
xor
push
push
lret
bound
jns
subl
fs
fadd
pop
into
jb
andb
mov
inc
add
mov
leave
jge
or
jbe
push
movsl
adc
mov
popa
clc
rorl
dec
in
cmp
sbb
insb
imul
sub
lods
xchg
inc
int
js
sbbb
mov
nop
pop
jecxz
test
mov
push
icebp
mov
lahf
ss
mov
mov
and
jp
push
into
dec
loope
daa
inc
mov
add
or
adc
jo
es
ss
inc
push
pop
pushf
jbe
repz
and
andl
mov
cltd
insl
mov
popa
clc
addr16
sbb
cmp
dec
pop
insl
lea
mov
in
add
test
and
add
ffree
xchg
xchg
jno
stos
sbb
mov
imul
cmp
push
repnz
xchg
cmp
pop
icebp
aaa
into
in
cmp
mov
or
jae
imull
push
pushl
lock
aaa
and
dec
mov
inc
roll
pop
popa
cmpsb
mov
ret
fisttpll
cs
aam
adc
lock
pusha
and
fwait
addb
sub
inc
xor
pop
movsl
int3
arpl
jg
push
dec
enter
dec
out
pop
insb
fcomp
jne
sub
or
add
xchg
subl
mov
bnd
int
inc
cmpsl
sbb
cmp
add
xor
shlb
fnstcw
push
cmp
imul
and
jg
lret
ljmp
test
das
sbb
adc
lods
jg
test
sbb
cltd
es
rolb
push
inc
mov
sbb
inc
ficomps
pop
stc
jmp
ja
cmpsl
inc
movl
nop
sbb
xor
jl
jecxz
cmpb
sub
icebp
dec
ret
mov
fsub
mov
push
pop
movsb
fiaddl
cwtl
mov
xor
sbb
jle
mov
movsl
ss
push
test
inc
or
call
and
jecxz
inc
mov
jbe
inc
lds
pop
cmp
jo
xchg
jge
pop
sahf
xor
je
test
loop
pop
cmpsb
mov
mov
xchg
sub
lods
loop
sti
fwait
ja
push
mov
pusha
or
mov
in
sbb
jno
inc
sti
sub
mov
or
out
inc
sub
test
jp
mov
pop
movsl
pusha
cmpsb
mov
sub
mov
iret
add
xlat
in
or
test
test
loop
or
add
lea
scas
pop
aaa
mov
xchg
inc
fsubrl
cwtl
cmp
repnz
xchg
mov
cmp
andb
aas
adc
cmp
pop
cmpsb
cmp
andb
cmp
xlat
outsb
pop
pop
adc
inc
or
aad
dec
xchg
push
push
jmp
xor
or
sbb
adc
ja
sub
pop
push
inc
ret
icebp
pop
mov
loop
jne
pop
adc
dec
jge
pop
inc
and
add
pop
push
icebp
xor
mov
sti
sbb
push
addr16
jmp
or
adc
adc
mov
dec
pop
stos
mov
ss
loope
sbb
stc
add
orb
pop
mov
in
orl
cmp
mov
loop
push
jmp
mov
mov
sub
xchg
test
and
inc
mov
jnp
jle
cld
jo
insb
add
fsubr
test
cmp
stos
and
pop
repnz
fdivl
push
and
orb
mov
pop
neg
jae
loop
movsl
or
mov
shlb
es
ss
push
jp
cmpl
adc
mov
mov
and
xor
pop
and
es
and
dec
xor
xchg
cs
lods
js
iret
xchg
mov
in
push
push
bound
xor
nop
pop
jp
ret
js
push
jns
cmp
sbbl
leave
in
out
push
pop
pop
dec
lcall
dec
pop
inc
loope
pop
dec
outsb
inc
je
js
xor
movsb
aam
or
clc
add
enter
in
ficompl
mov
mov
push
push
test
and
aam
dec
cmc
cs
or
les
loope
js
sbb
shrl
loope
pop
hlt
jg
mov
js
sub
popa
pop
es
inc
inc
lods
jns
fwait
mov
and
xlat
fmul
pop
push
stc
xchg
jbe
arpl
add
test
pop
push
xchg
fwait
jp
sbb
int
out
lcall
add
jle
mov
mov
insl
add
aad
xchg
xchg
pop
test
mov
jl
mov
mov
mov
in
mov
divb
mov
mov
les
cwtl
fisttpl
adc
aas
jae
jno
jecxz
ret
sbb
call
or
sub
ret
imul
push
loopne
cmp
inc
ja
call
into
mov
mov
test
lcall
icebp
mov
dec
jmp
rcrl
push
push
pop
lcall
or
cmp
dec
and
xor
dec
aaa
stos
in
loopne
aas
popa
dec
dec
sar
jge
loop
mov
pop
mov
mov
jae
mov
or
inc
fisubl
pop
popa
addr16
jmp
dec
mov
cmovp
push
in
push
insb
adc
ss
shl
push
inc
sub
enter
pop
push
adc
push
cmp
aad
push
push
mov
out
add
test
mov
fsubrs
sbb
add
adc
jp
jnp
inc
out
and
sub
xchg
push
jae
jo
pop
xchg
xlat
andps
or
jp
jne
xor
push
xor
mov
ss
push
add
ss
rcll
xchg
lret
in
cli
fiadds
jbe
clc
out
sti
sbb
sub
shlb
push
jae
push
movsl
jb
loop
dec
test
pushl
add
cmp
add
dec
call
adc
inc
fidivrl
or
call
push
pop
fadds
xchg
or
stc
std
leave
lea
push
sbbl
rol
jo
fs
xor
jb
rcrb
push
xchg
testb
into
adc
movsl
divb
sti
mov
mov
pop
fbstp
loope
add
xchg
dec
stc
nop
orb
mov
out
call
mov
xchg
imul
inc
loop
scas
ja
rcrb
inc
rclb
call
mov
sbb
iret
mov
sub
lret
sub
push
inc
cwtl
or
in
loope
in
or
out
mov
xchg
arpl
and
pop
mov
stos
pop
ss
mov
aaa
or
sub
adc
ja
inc
lods
jb
dec
xchg
fdiv
xchg
cmpsb
repz
fnstenv
sbb
popa
add
aaa
movsl
jge
xor
xchg
inc
ffree
xchg
adc
mov
jmp
add
in
in
fldl
mov
sub
xorl
xor
lahf
sbbl
subl
test
push
rcll
dec
inc
fiadds
iret
pop
add
movsb
orl
cmpsb
ss
sar
sub
push
jg
loopne
gs
jmp
push
inc
xchg
push
aaa
loope
xchg
push
mov
xchg
mov
dec
mov
mov
jg
pop
lods
ljmp
or
sahf
xchg
sbb
push
pop
out
cmpsl
pop
out
lret
pushf
pushf
repz
xchg
repz
mov
loope
test
push
ficompl
imul
addr16
testb
pop
hlt
lcall
icebp
or
std
insb
imul
dec
xchg
sbb
inc
shrb
imul
mov
addr16
loop
jge
ja
sbb
out
scas
push
jmp
pop
stc
cmp
aam
dec
push
jbe
mov
pop
xchg
test
xchg
sbb
sub
fs
lea
jge
clc
lea
pusha
fsubl
stos
dec
sbb
test
out
loop
pop
clc
lcall
sbb
push
mov
int3
arpl
aad
and
enter
fnstenv
idivb
sub
loop
dec
adc
pop
jo
mov
popl
or
xchg
sbb
add
push
adc
push
mov
pop
xchg
cltd
xor
mov
jg
pushf
lods
mov
jbe
dec
repnz
lds
lcall
clc
lock
ja,pn
pusha
sti
movsb
popa
fisttpl
or
sub
adc
in
jns
int
mov
pop
mov
adc
adc
xlat
jo
stos
cmp
popa
add
mov
sub
das
out
dec
xchg
int
inc
jmp
jecxz
movsl
xor
adc
xchg
jmp
insl
lret
ljmp
pop
inc
xor
stos
int3
repz
mov
pop
xchg
adc
clc
push
xlat
je
xor
shll
sub
jne
push
cmpsl
sbb
and
dec
mov
jl
dec
mov
test
jb
in
ret
or
xor
stc
or
outsb
dec
insl
pop
xchg
cmpsl
cmp
mov
push
bound
stc
int
out
outsb
jnp
repz
fsubl
je
std
or
mov
hlt
out
shrb
fdivl
mov
mov
vcvtsd2si
add
xor
xor
mov
cmovns
inc
ljmp
lret
scas
dec
mov
mov
jb
sbb
test
or
push
adc
push
leave
jp
and
jg
ret
frstor
iret
mov
mov
leave
mov
ret
pop
mov
mov
or
leave
aas
dec
in
pop
push
dec
mov
fidivs
enter
ret
jmp
idivl
cmpsl
loopne
in
clc
dec
test
adc
and
xor
adc
sbb
aad
push
sahf
jno
clc
cmp
sub
mov
xchg
mov
xlat
decl
pushf
stc
nop
into
aad
xchg
call
mov
add
cli
or
jne
aaa
into
cmpsl
mov
jle
mov
mov
fsubrs
and
mov
es
popf
pop
mov
jns
xchg
ret
pushf
out
sbb
cmp
bound
mov
push
pop
popf
into
jno
and
arpl
aad
or
jecxz
adc
sarb
adc
fbstp
movsb
cltd
xchg
clc
jge
jb,pt
inc
fstpl
fsubs
adcb
lea
sbb
push
and
dec
dec
stc
nop
jle
outsl
cmp
add
xor
les
jbe
test
xchg
stos
sub
andl
fdivrl
cmc
inc
xchg
movsb
pop
sti
mov
jmp
cmc
adc
repnz
call
fcoml
add
lds
daa
lret
in
ljmp
aam
sbb
es
push
dec
mov
mov
icebp
scas
and
jmp
lret
cmp
test
aaa
insb
sbb
cmp
sbb
dec
test
add
js
push
lds
mul
push
aam
adcb
cmc
mov
outsb
subl
sub
xchg
ret
cld
jo
or
fisubrs
and
fwait
mov
or
xchg
mov
push
jns
scas
and
mov
pushf
sbb
into
xchg
icebp
ss
ljmp
movsl
mov
xchg
pop
mov
loope
mov
shll
popf
in
mov
popf
xchg
mov
popf
fcompl
test
xchg
lea
lods
out
daa
cmpsb
mov
sub
sbb
stos
sbb
fcmovb
xchg
ds
cmp
cmp
pop
jns
aaa
jns
push
lahf
mov
mov
fs
mov
cmp
add
bound
test
adc
in
jl
icebp
ds
cmc
in
movsb
cmp
pop
jns
mov
sbb
xor
pushf
lcall
fiaddl
dec
add
mov
data16
mov
jae
sti
test
adc
jge
pusha
scas
adc
in
ja
cmpsl
jno
mov
call
mov
insb
jne
push
jmp
and
pop
cs
sarl
in
push
adc
push
movsb
cmp
ret
push
and
cmp
sti
xchg
test
bound
popf
xchg
mov
or
or
addr16
mov
xchg
xchg
pushf
out
xchg
push
push
test
pop
jmp
into
pop
cmp
xchg
and
mov
pop
sbb
push
dec
rcrb
or
dec
cmpsl
ds
shl
cmp
push
insl
std
psubb
mov
clc
popl
sbb
test
inc
fxch
inc
out
dec
mov
in
pop
push
shlb
mov
add
scas
mov
add
xchg
mov
aam
icebp
ds
cmp
xor
roll
jnp
cs
sub
push
pop
mov
inc
gs
push
in
bound
addr16
sbb
ret
mov
inc
out
push
or
xchg
cs
enter
loope
push
xchg
and
dec
push
out
insl
push
test
pop
test
daa
cwtl
and
xchg
push
mov
scas
mov
mov
mov
xchg
or
out
mov
hlt
enter
iret
les
fldenv
adc
fisubrl
fimuls
in
sbb
inc
or
push
cmc
push
daa
icebp
mov
jl
jmp
cmpsl
lret
mov
xor
les
in
gs
hlt
dec
jecxz
cmp
dec
fwait
xchg
adc
fiaddl
push
jecxz
add
cmp
es
ss
jl
xor
xchg
rorb
pop
in
out
inc
pop
enter
lods
xchg
dec
scas
xor
arpl
shrb
les
push
mov
dec
and
shlb
mov
enter
and
dec
pop
in
ja
mov
addb
dec
lea
mov
hlt
in
incl
add
adc
daa
jno
mov
sub
outsl
pop
cmp
adc
adc
adc
dec
out
popa
cmp
xchg
dec
loopne
mov
xchg
jae
andl
cmp
rcrl
das
fsubp
jle
dec
inc
jmp
adc
cli
js
int3
bound
push
and
mov
mov
lret
imul
mov
arpl
arpl
or
fwait
xor
std
or
mov
je
xor
mov
outsb
mov
jb
xor
lcall
ficomps
push
inc
scas
and
in
ficoml
mov
sbb
aaa
into
jle
adc
inc
mov
bound
ja
xchg
pusha
shrb
mov
int3
insb
sbb
dec
hlt
dec
inc
incb
lahf
imul
jecxz
js
sub
leave
insl
mov
or
js
xchg
andb
mov
pop
adc
js
jne
xchg
pop
lods
test
out
sub
xchg
les
xor
out
sbb
or
lds
adc
pop
sub
lock
inc
dec
dec
jno
jecxz
xor
push
mov
mov
dec
push
or
push
mov
jge
loop
movsl
pop
jecxz
cmp
cltd
popf
inc
repz
jge
sbb
cmp
mov
pop
sahf
stos
push
stc
add
test
mov
add
scas
dec
cs
and
sti
lds
sbb
add
adc
and
and
add
test
imul
push
dec
popa
jg
cmp
scas
outsb
and
ljmp
pusha
mov
dec
popa
pop
inc
sbb
dec
popa
mov
ljmp
int
int3
xor
shr
adc
orl
inc
push
adc
or
das
push
inc
cmp
dec
cmpsl
adc
loope
inc
pusha
xor
sub
clc
xor
mov
xchg
jp
push
out
daa
add
push
je
out
out
hlt
aam
xchg
sar
pushf
inc
inc
jg
cmp
jnp
iret
pop
push
gs
pop
sbb
push
hlt
or
pop
cmc
mov
mov
shll
pushf
xchg
iret
fdivs
sahf
les
cmp
js
inc
fistpl
sub
lods
sbb
sbb
test
and
xchg
cs
iret
in
add
in
adc
xor
insb
ss
dec
jns
in
sub
jns
pop
pop
je
add
jle
mov
mov
fcompl
dec
mov
or
cli
jns
and
in
xlat
rcll
daa
and
shlb
xchg
imul
rcll
popa
dec
add
cltd
out
adc
adc
dec
fcmovne
mov
jbe
mov
out
cwtl
and
sub
sub
adc
pop
repz
push
or
mov
push
fbstp
mov
pop
xchg
leave
montmul
cmpsb
inc
mov
mov
sbb
cmp
test
inc
psubw
mov
in
fisubrs
sbb
and
fidivrs
out
mov
stos
test
mov
in
loope
icebp
cmp
jbe
pop
les
jmp
fistpll
jns
and
ljmp
mov
out
mov
fwait
sub
test
or
data16
or
sub
adc
fld
sub
movsl
pushf
jne
insl
cmp
in
xor
adc
inc
xchg
aas
daa
pop
adcb
dec
or
dec
cmp
sbb
imul
ds
rclb
test
icebp
jge
les
sbb
pop
xor
popa
inc
test
and
pop
pop
xchg
jnp
push
orb
lods
stos
dec
imul
mov
jno
fcmovne
and
mov
mov
movb
mov
push
sbbb
sbb
inc
xchg
into
icebp
push
jecxz
mov
dec
pushf
ret
mov
jb
cmpsb
sbbb
mov
les
dec
stos
adc
je
xchg
aad
mov
cmp
ret
test
adcb
in
insb
adcl
xchg
hlt
add
js
subb
mov
lock
pop
add
test
cld
sub
lock
jecxz
imul
pop
pop
mov
mull
dec
ret
xor
icebp
cmp
sbb
jle
push
popf
in
loopne
push
mov
insb
pushl
fidivrl
orb
pop
and
out
dec
outsl
jnp
mov
into
and
shlb
icebp
cmpsl
sbb
fidivrs
lcall
inc
mov
or
lcall
sub
arpl
pop
icebp
movsb
test
mov
sbb
jmp
imul
jecxz
xchg
sbb
mov
push
movsl
push
sahf
dec
mov
jnp
push
aam
cmp
clc
jns
inc
pushf
push
pop
inc
into
pusha
inc
adcb
cmp
mov
sub
and
pop
pushf
daa
mov
imulb
inc
fcompl
icebp
mov
arpl
mov
fwait
rolb
out
and
dec
jecxz
js
push
stos
popa
push
xchg
lret
mov
pop
out
cli
xchg
push
pop
cmpsl
cmp
scas
mov
shll
add
es
das
popa
dec
mov
outsb
cmp
sub
and
sti
ret
inc
test
repnz
pop
sub
cld
or
dec
xor
jbe
push
aaa
inc
push
xor
xor
rclb
mov
pop
sbb
js
cli
notb
adc
add
xor
daa
in
ljmp
fwait
nop
aas
loope
jecxz
inc
int3
adc
std
mov
mov
fwait
mov
addr16
aaa
jl
xchg
lret
mov
mov
mov
jle
pushf
outsl
mov
lea
repz
stc
shrb
sbb
ret
mov
cmp
cwtl
stos
test
mov
cmpsl
cli
cs
jnp
sub
push
push
pusha
andl
jns
add
lock
mov
xor
cld
push
enter
xchg
mov
adc
mov
pop
push
mov
imul
mov
jp
rcll
xchg
mov
loope
push
imull
sbb
pop
loopne
cmp
mov
into
pushf
jg
pop
repz
sti
xchg
mov
addr16
gs
inc
and
je
loopne
fstpl
dec
add
in
push
mov
fdivrp
inc
sub
cmp
mov
pop
mov
add
pop
push
mov
loop
in
xor
imul
mov
ja
scas
push
das
add
xchg
add
arpl
lret
cld
jg
pop
mov
std
jo
pop
and
xchg
js
jle
dec
dec
sbb
or
xchg
test
les
fsts
mov
mov
test
jecxz
sbb
les
or
loopne
fucomp
add
cs
pusha
in
and
and
or
aaa
loop
push
frstor
push
loope
push
in
fcmovne
xor
fsubrs
push
and
enter
in
aaa
movsb
lcall
out
cmp
push
mov
or
jp
shll
mov
sub
addb
mov
xchg
fs
adc
out
test
ss
pop
push
mov
test
out
data16
leave
iret
aad
jno
cmp
sub
push
or
mov
test
push
pop
sahf
jnp
or
fdiv
push
xlat
cmp
stos
cmp
shll
add
and
push
sbb
pop
enter
pop
mov
jo
sub
sbb
cli
dec
shlb
sbbb
mov
in
test
call
or
lret
mov
mov
addr16
dec
lods
add
cmc
mov
mov
insb
sub
mov
or
jno
and
cmp
hlt
jb
dec
mov
and
push
xchg
mov
mov
fdivrp
inc
je
push
js
or
jle
xor
leave
inc
jecxz
arpl
adc
gs
mov
je
scas
inc
fstpl
scas
leave
insb
mov
insb
jo
jns
sub
or
inc
loop
jge
mov
add
movsl
test
jbe
fildll
xchg
push
jbe
out
adc
or
and
push
nop
xchg
sub
adc
fwait
iret
aas
cld
nop
or
mov
sub
mov
cmp
add
pusha
cmp
xchg
cmp
push
push
test
sub
daa
int
fstl
lret
jne
add
repz
sti
insb
ja
in
aad
fcmovbe
in
stc
aas
hlt
lock
ss
push
inc
jns
inc
pop
mov
adc
cmpps
lock
pop
lock
xchg
sahf
out
ja
aam
inc
cld
xchg
jge
push
or
jb
and
out
sub
hlt
cmpsl
jge
fimull
out
sti
cs
adc
xchg
ss
push
jbe
and
lock
xor
sub
jmp
subb
call
loopne
mov
sahf
imul
jno
fldl2t
inc
and
xor
pop
sbb
or
and
test
cmp
mov
loop
in
mov
ds
or
push
jno
rcrl
xorl
sbb
mov
cmp
or
mov
push
xor
jo
imul
xor
mov
aam
ss
inc
pop
ja
les
icebp
mov
das
aaa
fldcw
shrb
pop
out
mov
jge
inc
bnd
ja
loope
xchg
mov
call
and
scas
test
sub
and
imul
add
mov
adc
cmp
cmp
ret
sub
jl
aas
mov
sarb
sbb
push
cmp
rcrb
aad
push
push
cmpb
cmp
mov
subl
fnstenv
repnz
fcmovne
and
scas
cmc
mov
stos
mov
je
std
adc
inc
dec
pop
xchg
push
movsb
aaa
inc
or
xchg
loop
rcll
mov
fiadds
xchg
xor
outsb
aad
mov
push
mov
cwtl
push
or
pop
adc
sbb
inc
and
jbe
cmc
cmp
lahf
test
popf
xorl
push
push
pop
jmp
aam
xor
stc
shrl
sbb
inc
std
aas
add
inc
cmc
and
push
daa
ds
jae
xchg
daa
rcrb
mov
inc
jns
int
in
push
mov
ret
rorb
sbb
imul
out
mov
xchg
test
test
ret
insb
out
test
test
sbb
mov
push
ljmp
cltd
scas
xchg
sbb
jne
les
scas
pop
mov
fs
pop
cmpb
jg
mov
mov
push
add
rorl
cmp
xor
and
arpl
in
cmp
cmpsb
pop
call
mov
pop
or
mov
xchg
js
sub
or
add
push
int
ljmp
lock
mov
mov
push
movsl
jbe
sahf
push
and
or
inc
add
push
shll
popf
leave
push
out
fsts
xor
mov
mov
jno
add
iret
xor
nop
iret
mov
fsubr
mov
shrl
aad
scas
outsb
sub
pop
popl
jecxz
jae
xchg
movsl
pop
imul
cmp
jle
xchg
push
pop
cmpsb
mov
divb
repnz
mov
jo
aad
cmp
add
inc
out
fistpl
bound
rcrb
and
xor
adc
sub
pop
aas
mov
inc
sub
adc
and
push
arpl
icebp
jmp
push
push
ret
ret
out
jb
lahf
loopne
ljmp
adc
insb
leave
in
dec
sbbl
jmp
and
adcb
pop
xor
daa
dec
pop
daa
adc
fstps
or
jno
sbb
and
nop
sub
popa
mov
test
bound
mov
xor
inc
xchg
mov
int3
pop
add
push
data16
fs
arpl
lcall
popa
cmp
imul
pop
cmpsb
imul
subb
mov
dec
repz
sbb
fisubl
push
or
dec
lcall
iret
arpl
int3
stos
daa
cmp
push
outsb
mov
mov
popf
or
cmp
popa
jo
sub
data16
int3
xchg
popf
in
int3
mov
xchg
adc
shl
jge
and
and
cli
out
jmp
inc
cwtl
jb
sahf
loopne
shlb
adc
adc
lret
insl
incl
clc
jno
fwait
push
fidivl
xchg
mov
lret
pop
hlt
cld
int
add
jl
inc
lea
mov
sbb
jmp
or
mov
fsubr
or
jno
pop
mov
xor
xor
aam
xchg
xchg
fcomps
adc
push
push
ljmp
notb
addb
xchg
inc
flds
inc
inc
iret
push
mov
pop
mov
push
icebp
sbb
pop
ficoms
xchg
jl
mov
int
sahf
jg
lods
outsl
xor
sbb
mov
jmp
loop
sbb
rorb
ror
test
add
inc
push
fistl
or
daa
daa
add
fldl
mov
xlat
mov
js
mov
inc
inc
jno
adc
mov
sahf
pop
nop
push
addr16
jns
or
and
jl
lret
push
stos
jb
nop
jns
outsl
cmp
dec
repz
dec
jmp
adc
push
or
inc
sbb
hlt
mov
clc
repnz
add
das
insl
jge
rcl
imul
pop
sub
mov
mov
sbb
or
push
xchg
out
fcom
test
out
adc
dec
cli
push
fnstenv
sbb
pop
jne
mov
sub
jmp
xchg
out
push
hlt
push
lea
xor
mov
mov
lahf
mov
bound
adc
inc
lret
jae
pop
mov
and
inc
xor
ja
sub
or
das
fstpl
pop
cmc
insl
adc
jae
jl
aas
out
mov
repnz
jle
mov
lea
cmpsb
les
fwait
nop
pop
les
scas
jo
mov
jmp
loop
dec
xchg
adc
shrb
cli
sub
movsl
aas
icebp
mov
cltd
das
lret
jns
cmp
dec
popf
cmp
insb
and
sub
dec
pop
scas
orb
push
pop
in
les
repnz
pop
lahf
rorb
shl
xrelease
dec
fwait
add
fisubs
pop
xlat
cmpsb
mov
js
imul
imul
std
lods
enter
and
fnstenv
outsw
dec
xchg
and
xchg
outsl
jae
fwait
add
inc
aaa
adc
test
push
imul
cmpsb
jl
fwait
sub
mov
sti
pop
cmp
push
add
aam
lods
mov
divl
mov
jbe
cld
xchg
jge
test
outsl
push
testb
repz
imul
sbbl
push
add
testb
fstpl
push
hlt
das
paddq
dec
xlat
sti
leave
or
cmc
cmp
lret
insl
adc
xchg
sub
sbb
icebp
imul
into
fadd
xlat
inc
adc
dec
lcall
push
or
out
push
push
in
mov
cmp
push
mov
xor
dec
rorl
pop
inc
stos
inc
mov
mov
xchg
jno
es
xchg
push
call
xor
imul
adc
out
js
std
test
pushf
sbb
ret
cmp
fwait
xchg
mov
xchg
ljmp
inc
popa
sbb
mov
arpl
pop
xor
pop
ljmp
les
mov
pushl
inc
sub
dec
push
out
xchg
dec
xorb
insl
pop
fwait
addr16
je
jp
dec
fists
pusha
pop
and
adc
gs
jmp
inc
cs
mov
mov
pop
insb
fsubrs
or
pop
cmp
repz
sub
lds
aam
sbb
sbb
loope
cli
sub
lds
push
in
push
out
add
ficoml
sbb
add
aas
jbe
jo
adc
sbb
cs
pop
xor
lret
popf
outsb
jmp
roll
xor
pop
icebp
cltd
mov
ret
or
pop
cmp
popf
mov
sub
movl
daa
push
in
adc
xor
cmpsb
jl
test
dec
xor
dec
push
adc
fiaddl
jae
iret
sub
popa
shll
jb
cmpsl
ss
cmp
ja
shlb
into
fidivrl
mov
adc
dec
gs
cmp
into
sti
aam
add
xor
add
add
mov
push
lcall
stc
je
popa
mov
mov
cmp
ret
sub
pop
mov
jle
test
fldcw
pop
test
xor
xchg
jnp
jg
mov
pop
push
ljmp
call
jnp
pop
inc
pop
jle
lods
dec
jno
and
inc
pop
inc
cwtl
mov
mov
repnz
sarl
push
leave
mov
xor
dec
lea
cmpsb
sub
mov
in
and
xor
sub
dec
and
dec
subl
pop
test
stos
adc
int3
ret
fdivl
cmpb
hlt
inc
aaa
xor
cmp
in
pop
dec
dec
les
addr16
cmp
sub
cmpsb
int
adc
pusha
add
mov
ficoml
repnz
mov
inc
fwait
add
lods
xchg
outsb
leave
dec
call
xchg
sti
into
data16
inc
dec
mov
push
out
mov
cmp
scas
out
out
mov
movsb
movsl
mov
push
mov
xor
gs
xor
add
dec
push
push
jl
movsb
arpl
aam
sub
out
jp
imul
fnstenv
scas
inc
jns
jmp
mov
test
mov
aas
push
inc
lods
lock
cmpsl
out
bound
xchg
loope
cmp
je
xor
lds
mov
jle
xor
push
push
jge
mov
ja
ljmp
mov
lahf
mov
scas
fucomp
xor
adc
pop
stc
stos
test
shrb
shl
sub
pushf
dec
je
mov
sub
repz
mov
mov
inc
stc
ret
push
sbbl
imul
jno
pop
hlt
scas
xchg
sub
mov
sub
push
sub
aam
push
mov
aad
movl
push
rcrb
sub
test
jmp
ljmp
out
sahf
imul
adc
lods
fcomi
js
ja
sahf
push
fsubr
incl
mov
pop
cmpsb
testb
dec
loop
xchg
dec
pop
ret
sarb
loop
movb
lret
and
add
or
das
test
ja
cwtl
and
pop
xchg
or
add
test
fdiv
bound
and
test
mov
add
out
popf
ljmp
push
dec
out
cmp
cltd
mov
fisubrl
push
mov
pop
sbbl
mov
in
fdiv
in
imul
add
lods
xor
pop
out
inc
sbb
dec
lods
cmp
mov
mov
mov
and
rcl
mov
jo
data16
mov
cs
mov
mov
test
hlt
pushf
movsw
xrelease
lahf
jb
js
imul
pop
push
addr16
sti
and
enter
mov
fdivl
andl
rcrb
push
arpl
inc
mov
cmpsl
aaa
and
movsb
mov
push
sbb
daa
ja
add
insb
xor
xchg
adc
jbe
cltd
pop
mov
pusha
aas
test
lods
fisttpll
sub
pop
pushf
mov
es
push
jle
stos
shl
push
cltd
sub
lret
loop
mov
ljmp
jno
jns
push
inc
call
xchg
and
inc
in
push
push
cmp
xchg
xchg
cmp
insl
jmp
fnstenv
dec
mov
in
mov
xor
sahf
inc
cld
mov
lahf
jge
inc
lock
xchg
or
ds
lock
addb
shll
jecxz
daa
rcr
test
fscale
jl
mov
pop
andl
insb
xor
dec
pop
out
xchg
adc
adc
jecxz
cmpsl
jae
push
ret
hlt
jecxz
or
adc
scas
ret
addr16
xchg
mov
test
aas
jne
cld
push
pusha
aaa
int
xchg
lcall
mov
mov
clc
sbb
test
adc
fstl
pop
stc
jno
pop
and
in
lret
jmp
pop
lods
cld
leave
int
into
cmpsb
lea
mov
sbbl
and
sti
xchg
stos
test
mov
xor
dec
add
push
scas
arpl
adc
or
lods
inc
in
test
int3
out
xchg
insb
add
pop
xor
xchg
dec
mov
push
in
push
mov
push
popf
xchg
mov
xchg
cmp
mov
or
mov
push
enter
mov
xchg
mov
pop
int3
fcoms
and
stos
movsb
inc
push
lea
fcoml
pop
pop
jno
popa
aaa
pop
mov
cmp
addl
pop
rcrb
mov
mov
mov
out
pop
pop
or
insb
sbb
mov
adc
roll
cmc
or
mov
inc
pop
dec
hlt
ljmp
cwtl
dec
ja
ret
and
xchg
les
cmc
cmp
pop
dec
push
shll
pusha
fnstcw
das
push
sub
push
out
test
pop
cmc
mov
lret
adc
dec
test
cmpsb
adc
cmp
inc
stos
jae
jo
jne
mov
pop
pop
or
adc
pop
cmc
sub
sahf
xor
clc
and
in
mov
std
decb
inc
adc
int
pop
inc
add
jne
in
sub
dec
sti
jbe
fs
scas
xchg
adc
xchg
cmc
sub
je
test
push
inc
loopne
mov
push
and
push
or
cmp
sub
xchg
js
sub
and
pop
testb
lods
mov
rolb
inc
out
ja
and
jno
aas
xchg
xchg
scas
enter
lret
iret
mov
enter
mov
ds
or
pop
cmc
lret
jnp
outsl
adc
sbb
ja
adc
inc
xlat
jmp
test
mov
xor
pop
incl
pop
fnsave
dec
mov
sar
inc
popa
mov
xlat
fidivrl
push
test
or
mov
cs
loope
or
inc
sub
cmp
cs
insb
loope
push
xchg
push
xor
xlat
popa
popf
jecxz
dec
or
cmp
lcall
inc
xor
or
fucomp
mov
jl
add
push
push
and
pop
mov
pop
sub
gs
lcall
add
mov
dec
icebp
mov
stos
fidivl
jnp
xor
pop
push
in
cmp
arpl
mov
or
sub
push
inc
imul
sbbb
mov
cmp
xchg
pop
sub
jge
movsb
mov
dec
sub
xchg
shlb
add
lds
pop
pushf
or
cmp
xlat
mov
jno
push
mov
add
ja
pop
pop
push
cmp
mov
scas
shll
mov
jmp
aam
outsl
add
outsb
je
push
aad
je
out
inc
mov
sbb
pop
xchg
sub
jg
adc
push
push
shl
andl
scas
push
inc
ret
pop
dec
data16
mov
pushf
scas
inc
pop
test
xor
in
js
push
dec
loope
jne
lock
push
call
pusha
cmp
loop
mov
xchg
inc
out
mov
or
mov
scas
xor
fildll
jecxz
mov
call
sbb
push
inc
pop
mov
xor
xor
shr
pop
into
jo
sbb
push
inc
inc
xor
cld
stos
sahf
jo
int
pop
inc
jnp
pop
test
fisubrs
popl
jno
cli
or
jge
jo
lods
mov
inc
jmp
jp
sub
xchg
pusha
inc
mov
pop
aaa
add
sbb
fucom
js
mov
idivb
fnstsw
shrb
xchg
pop
lods
pop
or
add
cmpsb
sbb
ds
cmp
mov
data16
lret
aad
adc
xor
test
adc
cld
rol
daa
lcall
push
pop
push
movsb
pop
push
lret
inc
mov
jo
inc
fwait
lcall
lods
sbb
cmp
fidivs
cmp
int
les
push
fidivs
push
addl
mov
je
fistpl
cli
cmc
es
mov
fildll
xor
iret
mov
bound
dec
xor
pop
pushf
xor
cmpsb
cld
mov
or
ret
mov
jmp
jecxz
out
shlb
aam
add
imul
pushf
scas
mov
shlb
cli
cmpb
imul
pop
in
movsb
loope
mov
mov
adc
hlt
sub
pop
mov
lcall
mov
int3
out
pop
push
mov
xor
js
push
xorb
xchg
push
inc
mov
add
or
cmpsb
scas
push
sub
inc
jo
addr16
cltd
jno
xor
fisubrs
mov
add
int3
xor
xchg
enter
xchg
jo
jns
inc
ret
mov
cmc
call
mov
cmp
xor
dec
mov
xchg
in
aaa
aas
in
fsts
andb
popa
cld
xor
cmp
jbe
sbb
xchg
fxch
cmp
cli
dec
frstor
mov
push
lret
dec
lcall
inc
pop
xor
ljmp
mov
push
das
xor
lret
inc
sub
leave
push
jbe
stos
cmpl
int
push
jmp
mov
popfw
subl
div
push
scas
pop
push
jnp
xlat
cwtl
mov
push
xor
push
adc
fwait
js
mov
push
lds
push
loop
arpl
lret
and
adc
mov
lods
addr16
cmp
add
aas
push
mov
shl
into
cmc
cmp
jns
subps
popa
and
mov
dec
or
imul
jbe
mov
dec
aas
xchg
js
in
and
pop
sub
test
hlt
mov
and
adc
adc
xor
sub
cmp
sub
out
out
test
adc
std
ja
sti
iret
xchg
xor
mov
xor
insb
xlat
gs
jo
or
bound
xchg
pop
mov
in
cs
je
adc
sub
or
popf
shrb
inc
outsl
out
jb
and
cltd
push
pop
lret
jae
shrl
rolb
mov
sub
lret
jnp
mov
push
xor
negb
jne
jecxz
pop
xorl
lcall
xlat
jns
jp
jge
in
xchg
sub
push
jp
jp
xor
fldt
sbb
adc
jo
not
hlt
fidivs
adc
lods
cmpsl
cmp
mov
movsl
data16
push
sub
fidivs
test
out
jbe
xchg
idiv
push
imul
stc
dec
adc
scas
jae
dec
out
sti
jle
ds
cmpsb
xchg
and
xchg
cwtl
push
pop
push
ds
mov
out
adc
xor
insl
hlt
aaa
mov
loope
mov
mov
ret
addb
popf
push
lods
int
add
fwait
cs
pusha
mov
push
lods
jae
insl
sub
faddl
jo
xchg
xor
sbb
inc
fcmovnb
pop
and
mov
xchg
testb
xchg
jbe
pop
lods
nop
enter
out
out
lock
push
imul
jge
add
popf
cmpsl
data16
push
movsl
fs
lock
cmpsb
push
ret
ds
or
fcmove
ljmp
adc
les
xor
call
dec
jnp
movsl
loope
imul
rcrb
pop
and
push
out
imul
jno
and
icebp
inc
cli
or
sub
call
scas
push
mov
lock
push
xchg
sub
stos
data16
shrl
cmp
adc
mov
add
push
stc
mov
fucomip
xor
dec
std
cmpsb
cmc
loope
scas
mov
das
inc
sbbl
cmp
lahf
or
sbb
mov
lods
outsl
sbb
int
lods
push
push
movsl
cltd
cwtl
dec
cmp
cmc
loop
push
pop
movsb
xchg
call
push
cmpsb
les
mov
mov
jbe
leave
iret
incl
pop
ljmp
ret
xor
mov
es
mov
pop
dec
jb
push
repnz
mov
notl
add
cmpsl
imul
mov
clc
sarb
pop
dec
cwtl
sub
repz
jp
out
xor
mov
jmp
rorb
push
das
nop
mov
push
and
aas
mov
adc
mov
adc
dec
mov
inc
test
popa
inc
test
imul
pushf
or
and
pop
jns
test
stos
icebp
nop
cmc
outsl
loop
nop
fldt
jne
lds
repz
loope
arpl
xor
xchg
enter
cmp
push
mov
push
sbb
jnp
out
dec
cmp
aaa
mov
adc
js
dec
out
in
cmp
xorl
orl
fbld
outsl
push
movsb
jbe
cmp
jecxz
das
addr16
mov
push
inc
sub
add
xor
test
push
inc
sti
jge
cmp
xlat
pop
rcrb
aaa
add
loope
aam
int
xchg
insl
add
outsl
popa
mov
les
inc
aaa
or
xor
sbb
lds
cld
ja
pusha
cmp
flds
sbb
xor
jecxz
lods
cld
and
int
sub
addr16
inc
fimuls
xchg
lret
imul
cmc
sub
cli
pop
fnstenv
push
push
scas
jle
push
mov
dec
mov
in
xchg
fsub
stc
xchg
sbb
repz
sbb
dec
sarl
jp
mov
movsl
enter
sub
or
bound
and
adc
and
xlat
insb
xor
mov
mov
lods
roll
pusha
jbe
popf
dec
push
xor
and
jle
dec
iret
in
pop
shrb
jnp
xor
clc
outsb
clc
inc
fists
repz
push
in
xchg
mov
add
inc
pusha
test
lret
add
jne
rcrl
sub
xlat
repnz
jl
xchg
mov
pop
or
ss
sti
adc
fsubs
lds
roll
ds
xor
adc
ficoml
mov
cmc
call
xchg
das
jg
pop
jbe
sahf
rol
mov
cld
ja
stos
xchg
pop
imul
cld
lahf
sub
sbb
xchg
add
stos
sub
nop
xlat
jb
xor
in
inc
sbbb
sub
xor
scas
sahf
jb
hlt
nop
arpl
es
int3
cltd
movsl
cmp
rcrl
test
popw
scas
xchg
mov
test
stos
xchg
lcall
xchg
dec
inc
inc
fidivs
cmpsl
inc
mov
faddl
dec
scas
in
in
inc
aad
inc
pop
aam
cmp
pop
mov
decb
push
ret
mov
push
into
aas
pop
mov
in
lahf
out
dec
mov
insl
test
lcall
in
in
mov
jae
orb
and
inc
dec
dec
out
sub
jmp
xor
jo
dec
dec
inc
mov
stos
rcrl
xor
xor
sbb
dec
ret
lock
fdivs
pop
movsb
test
mov
movsl
xchg
xor
dec
adc
repz
mov
pop
xorb
push
mov
fwait
pop
mov
push
sub
xchg
add
popf
lret
daa
mov
fnsave
shll
pop
adc
xlat
adc
inc
push
cmpsl
mov
mov
lds
lea
pushf
bound
push
add
pop
xor
aad
sahf
clc
es
dec
stc
shll
pop
lea
leave
jecxz
scas
loopne
lock
pushf
and
in
add
mov
sbb
add
fbstp
xchg
inc
arpl
or
negb
jge
shrb
sbb
in
xchg
pop
in
jns
cmp
cltd
push
test
add
mov
adcb
inc
mov
pop
notb
hlt
js
je
adc
inc
test
arpl
movsb
testl
icebp
xor
sub
gs
sub
ret
pop
adc
ja
ficomps
inc
pcmpgtd
dec
movsl
cmp
popf
lock
pop
sbb
fimuls
movl
or
jne
inc
ja
gs
stc
mov
loopne
push
bound
cmc
je
add
shlb
jne
and
fwait
push
xor
ficoms
std
pop
xchg
das
jne
ljmp
negb
cli
fadd
sub
aad
add
movsl
and
xchg
mov
sub
pop
imulb
push
aam
mov
mov
add
pop
sti
fwait
aam
and
cmp
testl
push
in
inc
sub
sahf
or
iret
dec
and
mov
pop
cmp
push
scas
sarl
test
push
icebp
dec
ss
mov
imul
test
fstl
mov
sarb
test
movsb
cmp
adc
sbb
sub
dec
sahf
push
aas
mov
out
adc
or
adc
scas
std
das
lret
fistl
cmp
dec
mov
push
inc
cmp
dec
stos
jo
xor
mov
in
call
in
enter
push
mov
and
xchg
or
mov
out
jmp
fiaddl
xchg
sbb
rorb
push
stos
pop
lahf
data16
xor
and
mov
sbb
pop
aaa
push
nop
int3
mov
mov
sub
fwait
push
xchg
rdmsr
ror
fucomip
mov
inc
fucomp
clc
push
lock
mov
xchg
cmc
mov
popf
push
fs
imul
adc
stos
xchg
sub
aam
push
sub
mov
mov
dec
xor
les
or
mov
jp
mov
add
mov
xlat
jno
insb
dec
out
popf
test
aas
sub
cmc
push
gs
push
inc
jne
add
sbb
jae
dec
xor
push
lock
push
and
dec
add
pushf
cmc
and
repz
mov
adc
in
jo
push
jge
in
ret
repz
adcl
fwait
push
cld
ret
push
push
push
inc
frstor
pop
jne
scas
mov
loope
xor
aas
push
lods
outsb
mov
int
jne
sub
pop
js
push
scas
xor
push
xor
and
flds
sbb
sub
push
inc
pop
cs
ret
jnp
loopne
xor
push
mov
mov
push
xchg
aaa
pushf
push
jne
pop
add
lods
jle
imul
shrb
shld
negl
adc
push
inc
int
jae
scas
sbbl
pop
sub
mov
dec
sub
xchg
pop
out
jne
idiv
dec
lock
ss
fwait
adc
rcr
mov
push
jb
je
punpckhbw
popa
fsubrl
popa
dec
ret
fs
mov
push
leave
test
and
push
pushf
flds
or
xor
xchg
mov
les
pop
shll
jno
or
cmp
jge
cmc
mov
lahf
arpl
data16
ficompl
shll
mov
sbb
xchg
stos
mov
sub
or
in
lods
xchg
sub
cmp
lcall
test
mov
imul
into
popa
cmp
aas
pop
hlt
jo
xchg
adc
mov
ficomps
jo
loop
push
addl
and
scas
cwtl
das
cld
cmp
add
aad
std
ficoml
or
push
stos
jo
cmp
push
jge
lock
adc
aaa
sbb
jp
mov
push
or
dec
ss
xor
pushf
scas
add
sub
sbbl
and
add
aaa
into
out
inc
cmpsl
mov
jp
mov
jbe
stos
cmp
js
lods
lea
lret
jae
xor
mov
mov
mov
sub
test
shll
xor
mov
cmpsb
test
stos
mov
and
mov
xorl
cmp
fiadds
and
adc
cmp
jecxz
into
xchg
adc
fidivl
jmp
shll
xor
sub
sub
dec
iret
mov
pop
dec
and
mov
xchg
insb
int
je
fbld
mov
fnstenv
push
movsb
out
int3
jno
fldl2t
lds
adc
cltd
cltd
inc
inc
scas
sub
sbb
into
sti
sbb
mov
xor
insb
cltd
js
test
dec
in
seto
insb
pop
dec
xor
outsb
mov
decl
inc
mov
in
lahf
cwtl
adcb
jg
sub
inc
rcrb
inc
pushf
sub
andl
adc
stc
push
add
inc
mov
add
pop
enter
xchg
in
pop
cmp
push
rorb
ret
jno
inc
cli
xor
adc
sbb
and
hlt
or
push
add
jns
lret
adc
mov
mov
test
jbe
cmpl
imul
mov
subl
shll
jb
jbe
bound
repnz
test
and
dec
add
addr16
repz
lret
mov
mov
in
loopne
pop
and
rorb
flds
rcr
pop
hlt
dec
aas
ss
mov
shrb
mov
mov
push
leave
lcall
and
inc
and
pop
ss
sub
sbb
cmp
inc
mov
inc
das
mov
lret
push
out
xchg
pop
aaa
xchg
inc
outsl
mov
dec
mov
shr
ja
push
repz
fldcw
outsl
jb
inc
je
and
jno
stos
jmp
and
xor
inc
data16
dec
stc
or
pusha
pop
dec
push
into
loope
push
setne
inc
lret
call
or
fucomip
xchg
ljmp
pop
imul
mov
fidivl
int
adcl
dec
stc
mov
adc
js
cltd
push
lcall
or
aaa
bound
mov
mov
sti
pop
int3
rorl
push
shlb
or
lock
outsl
pop
inc
inc
rorl
xor
gs
pushf
fcmovne
test
in
cmp
ret
pusha
mov
xchg
push
pop
xor
push
mulb
xchg
jne
aad
mov
add
xor
addr16
daa
dec
xchg
sbb
push
mov
adc
loop
or
test
push
dec
fldl
mov
ret
mov
and
xchg
popf
pop
inc
dec
fs
popf
fisttps
rorl
adcl
test
xchg
push
sub
dec
lods
fildl
outsl
fisubrs
sbb
inc
push
sub
mov
enter
jle
dec
xor
ficomps
out
cltd
loope
sti
outsb
mov
pop
dec
and
jge
out
cmpl
sub
cmp
fimull
loope
jmp
push
out
push
sbb
dec
mov
lcall
inc
mov
or
int3
pop
adc
adc
loop
pop
sbb
fwait
xor
mov
pop
cmp
pop
cmp
insb
out
mov
mov
ljmp
arpl
aad
insb
pop
std
pop
loopne
lcall
icebp
int
pop
call
clc
adc
adc
or
out
sub
gs
ss
lods
fildl
lea
pop
out
mov
js
xchg
and
dec
push
popf
sbb
ret
fisubrs
and
mov
ret
push
mov
cmp
sbb
ds
aaa
or
cwtl
or
pop
repz
mov
cmpsb
adc
push
push
dec
cmp
ss
cmp
pop
repz
in
add
push
inc
fldenv
xor
push
icebp
dec
pusha
divl
std
icebp
bound
js
mov
mov
repnz
push
rcrl
sub
jae
cmp
scas
and
je
add
aaa
into
add
cli
shll
push
je
repnz
icebp
adc
mov
mov
jne
adc
repz
clc
or
inc
sbb
aad
aaa
mov
adc
push
insl
incb
imul
xor
aaa
fisubl
cmp
jp
stc
push
push
or
push
fidivrl
into
push
mov
push
repnz
inc
or
mov
and
popf
jbe
cmp
out
subl
int
icebp
adc
push
cltd
arpl
bound
or
nop
sarl
or
divl
arpl
adc
push
aas
cmp
into
sbbl
and
fsubrs
cmpsb
inc
mov
aam
pop
outsb
call
xchg
pop
rclb
sbb
lret
push
fdivrp
pop
push
movsb
cmpsb
nop
mov
mov
ret
aad
negb
or
in
xorb
clc
mov
cwtl
je
punpcklwd
scas
jmp
sub
aam
mov
in
sub
cwtl
leave
adcb
push
inc
cmc
stos
add
ja
dec
sbb
mov
dec
fwait
mov
pop
xlat
out
pushf
adc
es
mov
mov
push
xchg
insb
fildll
mov
mov
pushf
xchg
stos
imul
mov
xor
mov
loopne
lock
xchg
push
push
mov
fisubs
sbb
cmpsl
jo
sub
or
daa
jp
dec
mov
mov
sub
jl
push
scas
enter
xorl
jl
sub
pop
mov
subb
xlat
or
xor
sub
mov
divl
es
and
mov
lds
stos
dec
dec
push
popa
movsb
push
lds
in
sub
shlb
enter
mov
push
movsl
sub
cmpsb
mov
loop
push
fwait
dec
adc
repnz
add
pusha
dec
pop
xchg
scas
sub
inc
les
pop
mov
out
scas
push
inc
loop
fwait
shll
push
pushf
lds
popa
scas
aad
cs
cltd
ret
xor
push
ljmp
mov
adc
jae
push
sub
icebp
dec
repnz
mov
fildl
aam
push
and
dec
hlt
mov
xchg
fadd
aas
loopne
mov
or
mov
pop
aad
sahf
ljmp
jl
inc
scas
xchg
cwtl
mov
mov
jg
and
adc
in
out
push
repz
stc
pusha
push
push
adc
lods
clc
cmpsb
out
jge
sub
dec
outsl
mov
adc
es
pop
insl
ss
mov
lret
push
push
jae
out
sbb
outsb
les
mov
pop
data16
jle
push
es
es
lds
adc
popa
and
mov
inc
inc
ror
add
arpl
push
int
lock
cmp
push
mov
jbe
push
and
inc
add
fstpt
inc
dec
inc
into
cmp
in
mov
sbb
mov
int
sbb
jo
mov
ss
mov
or
mov
jl
imul
popf
frstor
fiadds
sub
xlat
out
lods
sbb
pop
repz
push
divb
call
inc
mov
cli
inc
sub
xchg
xchg
pop
cs
sbbb
bound
push
mov
pop
pushf
and
idivb
test
mov
jp
int3
and
loope
cmc
shrb
pop
ret
fdivl
sahf
movsl
movsb
jg
cld
inc
rcr
xchg
push
loope
adc
cli
sbb
repz
adc
sbb
xor
dec
test
in
fwait
iret
inc
shrl
mov
push
or
sbb
cmpsb
fistpl
and
inc
imul
bound
push
mov
adc
xorl
outsb
push
adc
and
and
inc
stos
mov
dec
mov
int3
push
dec
and
out
or
mov
mov
inc
je
in
xor
push
testl
bound
in
sbb
jge
shll
dec
out
loope
mov
adc
insl
xor
jp
adc
mov
push
gs
xchg
stos
test
pop
out
mov
icebp
fldl
int3
arpl
outsb
pop
sahf
adc
setle
and
push
ljmp
mov
sub
xor
xchg
inc
sub
add
inc
pop
aaa
jnp
push
inc
jecxz
test
or
sbbb
mov
enter
pop
and
pop
pusha
and
pop
push
dec
inc
cmc
ja
cmp
divl
or
mov
cli
pushf
mov
push
xor
adc
shr
out
jo
or
push
adc
test
sbb
jno
dec
cmp
jmp
test
mov
mov
cmp
subb
ret
bound
fidivl
jae
pop
cwtl
mov
cld
jl
cmpsb
cltd
stc
adc
mov
out
xchg
shlb
ljmp
ret
call
int
jmp
rcll
push
sbb
cwtl
fnstcw
pop
mov
inc
jg
and
mov
ret
repz
pop
in
pop
out
imul
hlt
cmp
mov
addr16
into
inc
mov
xor
or
lock
int
icebp
cmp
out
das
mov
xor
adc
pop
dec
cli
mov
in
sbb
aad
pusha
mov
out
cmp
cmpb
adc
xor
les
fsubs
ret
fldcw
sbb
dec
cmpsl
jg,pt
movsb
dec
sub
cmpl
pop
ja
cmp
jge
jno
mov
aad
cld
sahf
sbbl
imul
sub
mov
divb
cld
fmuls
sbb
cmp
jmp
mov
test
adc
push
dec
fsubr
mov
mov
test
xchg
stos
and
mov
mov
sub
cmp
fwait
insb
xor
mov
inc
das
fistpll
iret
add
arpl
inc
xor
lds
or
sub
loop
pusha
testl
movsl
jae
xchg
and
xchg
mov
inc
out
lcall
xchg
cmp
mul
xchg
sub
mov
fiaddl
dec
call
sbb
adcl
js
or
pusha
test
lcall
in
and
add
mov
aas
add
cmpsb
add
sbb
inc
add
rorb
push
lods
xor
hlt
je
gs
lods
jnp
std
or
lods
addb
dec
inc
loope
rorb
pop
jnp
dec
fdivs
out
cwtl
pusha
and
movsl
push
insl
adc
mov
pusha
aaa
mov
dec
mov
insb
xchg
jle
pop
mov
lret
out
mov
out
stc
adc
or
fs
xchg
sbb
push
adc
push
sub
outsb
adc
xor
out
daa
test
cmc
les
fsubrs
sbb
fcmovb
pop
sti
cltd
add
mov
roll
jno
mov
mov
mov
sub
dec
cmp
mov
pushf
sbb
icebp
adc
imul
mov
mov
sub
lret
leave
hlt
push
push
mov
inc
lret
mov
dec
mov
jne
pusha
and
divb
mov
cs
dec
repz
das
lock
add
xchg
jge
mov
add
cmp
xchg
test
lcall
mov
mov
sbb
dec
fbld
xchg
scas
out
xor
fcomps
imul
aam
test
insb
mov
loopne
fstpt
sahf
cmp
in
or
fwait
or
inc
jmp
jns
test
ficomps
je
inc
sbb
int3
push
shll
pop
je
mov
int
mov
mov
jo
test
pop
ljmp
and
iret
hlt
mov
inc
adc
shlb
bound
sbb
sbb
push
insl
xor
adc
sub
add
fwait
ja
fbstp
sub
shrb
and
xor
data16
xchg
jcxz
mov
sub
pop
inc
sbb
stc
pop
in
inc
fcmovbe
repnz
cmc
xchg
faddl
sub
int
jle
popa
icebp
popa
pop
fidivrl
dec
xor
je
sub
mov
adc
push
dec
sahf
add
xchg
stos
and
jne
cmpb
xchg
inc
jmp
jns
mov
lea
or
xchg
xor
lods
jge
js
jb
pop
pop
push
fldl
jo
repnz
xor
sbbb
inc
fisttpl
adc
xchg
ss
adc
pop
inc
sbb
test
xchg
sub
pushf
fwait
leave
in
xor
dec
fimuls
hlt
mov
test
xor
lret
push
stos
inc
sbb
add
test
and
push
sub
into
xor
pop
cmp
clc
rclb
jmp
je
in
shr
adc
mov
pop
icebp
inc
fisubs
mov
gs
imul
sub
lds
mov
sub
int3
outsl
or
adc
stos
ficompl
mov
sub
dec
adc
testb
jae
shrb
insl
adc
pop
mov
push
or
pop
leave
jp
aas
push
sub
lcall
stos
in
dec
loopne
movsl
push
sahf
xchg
fs
ret
xchg
or
push
push
add
ret
enter
push
inc
jl
cs
jge
mov
shl
xchg
sti
leave
sbb
inc
out
scas
mov
inc
icebp
addb
sbb
cltd
testb
mov
ljmp
sub
xchg
jp
pop
jnp
pop
mov
pop
es
aad
adc
loope
test
jne
jno
push
inc
and
rorb
sbb
test
sub
fbstp
fwait
cmp
aaa
or
lods
cmp
push
mov
mov
cmp
das
cld
icebp
test
mov
roll
stos
pop
mov
fwait
cli
icebp
xlat
xchg
lret
cld
lock
movsb
lods
adc
pop
mov
push
fs
mov
orl
push
negb
aas
lea
jmp
jmp
out
dec
or
shrb
sti
dec
loope
fisttpl
adc
jbe
cs
pop
pop
fdivrs
ljmp
in
mov
add
loope
sub
adcl
inc
cs
movsb
aas
outsl
mov
inc
or
sub
pop
es
loop
out
xor
xor
push
mov
or
mov
stos
fcoml
aas
cmc
jmp
jbe
lahf
lock
shrl
and
pop
bound
xchg
jge
sbb
pop
mov
mov
push
stos
xchg
adc
push
sub
add
mov
mov
jge
dec
sub
cmp
xchg
mov
adc
aas
cmp
fcoml
xor
js
lret
push
popa
mov
jae
cmp
cld
into
mov
out
outsl
insl
mov
lock
cmp
stc
mov
pop
jge
test
dec
push
movsl
jo
mov
aaa
mov
push
lods
add
cmpsl
sbb
pop
testb
lods
jae
xor
add
mov
divb
pop
aas
repnz
je
sub
in
dec
push
lds
jno
xchg
pop
mov
out
xor
jmp
sub
popf
cmpb
xchg
xchg
push
inc
cltd
sub
dec
pop
jb
mov
rol
xor
test
push
dec
sbb
sub
or
mov
fucomi
push
movsl
mov
push
jns
jno
jb
xor
mov
call
or
dec
test
sbb
inc
loop
sbb
popa
mov
test
lock
stos
cs
loopne
jno
or
pop
pusha
or
std
push
pop
xchg
cmpsb
push
mov
mov
cmp
mulb
ret
pop
inc
sub
pop
iret
loope
js
cwtl
cs
les
cs
idivl
lods
cmp
inc
bound
shl
push
shrl
inc
push
and
push
vpxor
cmpsl
leave
cmp
xchg
jecxz
or
push
fsubrl
shr
and
pop
lcall
imul
cld
popa
lahf
adcb
inc
sub
clc
adc
push
out
repnz
sbb
push
movsl
jge
aam
cmpsb
jne
fwait
pop
out
jns
es
fstl
xchg
xlat
subb
push
mov
movsb
addr16
mov
sub
push
or
mov
pop
cli
adc
repz
in
cmp
ficomps
popa
cld
push
push
push
iret
inc
xor
test
mov
sub
nop
test
mov
xchg
pcmpeqb
iret
adc
adc
inc
or
lock
pusha
int
push
int3
push
aaa
jecxz
fcoml
imul
or
sti
xchg
aas
mov
adc
jp
xorb
orps
out
cmp
aam
addr16
lock
or
mov
push
test
arpl
push
ljmp
jge
pop
sub
mov
inc
repz
lods
cmp
push
out
dec
jp
dec
aaa
add
outsb
add
in
stos
dec
rdtsc
dec
jne
mov
fldt
and
xor
xor
enter
add
mov
fnstenv
std
ljmp
dec
xchg
or
hlt
call
pop
in
jo,pn
ja
inc
adc
mov
ret
in
push
mov
mov
stos
stc
fdiv
xor
xchg
mov
xor
inc
sahf
popa
enter
pop
aas
in
or
dec
push
daa
cmp
mov
jge
in
into
ss
scas
cs
xchg
mov
test
push
and
or
cmp
pop
imul
dec
adc
and
and
aaa
iret
fdivr
std
push
and
pop
sahf
pop
daa
lds
pop
lret
stos
aad
fsubr
jno
sbb
mov
testb
and
jge
sbb
xor
ljmp
cmpsl
inc
mov
call
arpl
lods
cli
roll
std
mov
cwtl
std
or
addb
cli
mov
js
pop
insb
mov
and
mov
pushf
pop
movsb
shr
xchg
mov
repz
adc
popf
nop
xorb
es
imul
xchg
mov
xor
in
lret
dec
jb
and
push
out
dec
sub
test
or
fmulp
jle
lods
inc
xchg
fs
jecxz
mov
pop
fstpl
mov
movsb
nop
scas
std
clc
aaa
pop
sub
inc
xchg
xor
icebp
pushf
in
push
mov
adc
aad
mov
pop
outsb
mov
imul
test
mov
shrb
gs
mov
loopne
jne
notl
ds
ret
adc
inc
sub
and
outsl
loop
cld
push
sub
push
or
jns
daa
xchg
scas
aam
mov
push
mov
fidivrs
push
push
xchg
stc
mov
ficompl
jae
push
sub
mov
sub
sub
imul
jns
and
pusha
pushf
imul
or
jno
jge
in
das
xchg
ss
and
incl
data16
mov
jnp
stos
adc
icebp
icebp
pop
fadds
push
fldcw
cmpsb
sbb
pop
adc
fadds
lahf
xchg
mov
adc
cld
popf
hlt
jmp
addb
lahf
adc
or
pop
cmp
daa
xchg
scas
fidivrs
pop
adc
movsb
pop
push
out
loopne
neg
ret
pop
int
mov
mov
sbb
inc
loop
xchg
mov
subb
sub
sub
mov
clc
shlb
xlat
fstpt
loop
imul
sahf
cmp
adc
mov
mov
mov
insl
aas
sarb
repnz
ja
mov
or
push
inc
clc
mov
addl
sti
test
inc
push
mov
aaa
testw
pop
mov
mov
aaa
out
clc
cmp
cmp
sti
push
cltd
fistps
push
or
or
mov
js
insl
xlat
and
xlat
fisubs
lock
fcmovne
pop
add
mov
iret
out
mov
xor
push
popa
fdivrl
jnp
pop
mov
psubusb
or
fsub
adc
ud0
out
pushf
jg
mov
and
sub
pop
lret
nop
xchg
lds
cmp
int3
lret
jbe
push
dec
lcall
loope
mov
xchg
add
cwtl
xor
mov
sub
mov
mov
int3
insl
nop
daa
or
adc
imul
sub
cmp
dec
imul
mov
fcom
inc
inc
gs
pop
imul
shl
ss
jb
mov
jp
dec
mov
ficomps
mov
mov
pop
scas
push
mov
xor
mov
out
or
pop
fucom
xchg
test
lods
add
movsl
outsl
add
cltd
js
push
push
scas
fimuls
mov
cmpsl
cli
imul
mov
sbbb
pop
repz
pusha
fdivrs
cmpsl
push
jmp
push
lds
inc
das
push
call
int
or
inc
std
ja
das
daa
adcl
in
mov
adc
push
mov
aaa
adc
addr16
jecxz
aaa
or
aad
pop
int3
mov
int3
int3
nop
jmp
out
int3
pop
pop
cmp
fldcw
cmpb
repz
jae
cli
fsubl
xlat
ja
lea
arpl
sbb
xlat
sarb
mov
inc
push
daa
jno
dec
lcall
stos
pop
pop
cld
dec
cmpsl
fcomi
rcrl
and
cmp
into
gs
aad
cmc
vpcmpeqb
mov
add
rcrb
push
pop
cmp
testl
cli
gs
xchg
add
sbb
pusha
fcom
les
cmp
sbbb
xchg
dec
push
in
out
mov
jb
adc
int
rcrl
push
xorl
std
popf
add
ljmp
loop
jmp
pushf
mov
in
mov
jno
ljmp
shll
mov
dec
in
fnstenv
sbb
inc
sbb
push
lods
test
repnz
in
adc
rcrw
rorl
nop
mov
push
aas
add
mov
lea
pop
aas
bound
and
mov
pop
icebp
repz
sahf
lods
jmp
aad
sub
mov
jle
push
jns
push
jae
fnstcw
lods
push
jb
lea
orb
and
orb
sub
ret
mov
dec
insl
dec
pop
mov
and
clc
cmp
cmpsb
loope
in
dec
in
jo
xchg
mov
cmp
adcl
and
and
xchg
mov
addb
pusha
add
cld
inc
pop
es
rorl
lcall
xchg
imul
ret
cmp
sbb
jl
pop
inc
xor
fistpll
insl
inc
pop
or
lds
mov
sbb
sti
stos
pop
idivb
orl
sar
inc
das
and
lcall
dec
clc
inc
andb
popf
and
scas
js
fwait
xor
int
movsl
cli
mov
sar
rorl
sbb
cli
and
push
push
mov
pop
mov
xor
push
movsb
lret
int
sbb
mov
pop
cmp
sar
shrb
loop
fstpt
fisubrl
xor
aam
mov
dec
xchg
dec
dec
rol
loope
jecxz
sub
je
xor
mulb
aas
lcall
mov
jo
test
rcll
repnz
rclb
jp
push
movsb
leave
inc
jae
jge,pn
push
mov
lods
jae
pop
imul
sbbb
test
iret
dec
xor
adc
cmp
arpl
xlat
pop
mov
and
and
mov
test
shl
js
andl
popf
sub
adc
lret
dec
pop
imul
les
int
push
je
lock
test
xchg
push
test
jl
fcmove
popf
orb
pop
lcall
mov
cmp
mov
mov
add
imul
in
ljmp
push
sbb
mov
lcall
xchg
loopne
adc
sub
lea
dec
pop
sbb
scas
sub
mov
or
or
cmp
ds
or
out
sub
mov
pop
pop
loop
mov
int3
cmp
stos
imul
jle
shll
xchg
mov
lods
fsub
xchg
imul
test
xor
mov
sub
pop
push
sub
mov
push
arpl
ss
inc
dec
push
rcrl
rcrl
cli
pop
test
add
push
cmpsb
enter
mov
sbb
les
adcl
mov
jbe
scas
jbe
test
push
addl
jb
inc
adc
inc
hlt
sub
sahf
sub
filds
xor
xor
jmp
push
dec
sbb
dec
loopne
stc
push
jne
xchg
ljmp
mov
js
in
stos
adc
lds
dec
cmp
decb
movsb
bound
rorb
mov
adc
sbb
push
and
mov
or
inc
sub
js
pop
test
cmpsb
add
loope
adc
pop
add
and
and
sbb
int3
pop
daa
mov
sub
leave
push
push
push
outsl
sbb
ret
xlat
cmp
dec
dec
cmc
movsl
xchg
add
sbb
aad
inc
push
cmpl
pop
cmc
sub
and
ss
cli
sbb
jecxz
leave
int
lea
push
push
or
fisttps
test
xor
mov
or
adc
xor
je
je
repz
adc
hlt
mov
jo
out
insb
xchg
lret
addr16
sbb
mov
sbb
insl
inc
rcrb
inc
sbb
in
xor
ss
cmpsb
jge
xchg
add
inc
lret
mov
and
pop
fdiv
jbe
scas
lds
sbb
mov
movsb
cmp
loopne
rcrl
pop
pop
cwtl
test
mov
adc
xchg
pop
pop
xor
sti
mov
ljmp
adc
cli
jne
pop
ljmp
pop
mov
inc
and
mov
push
icebp
jg
inc
mov
sar
cmp
jp
icebp
lods
int3
pop
cmpsb
mov
stos
mov
fistl
insb
rorb
push
imul
out
xchg
shlb
sahf
or
inc
mov
push
ret
mov
stos
mov
cmovb
xchg
and
mov
pop
cmp
jo
adcb
pop
scas
cmpsb
cmp
fildll
shufps
je
push
test
sub
iret
dec
stos
rcrb
xor
pop
popa
adc
cs
push
xor
insb
jl
sub
dec
cmp
not
jae
or
loope
jl
in
and
add
in
jno
fnstenv
jno
xor
andl
xchg
add
fwait
out
sbb
in
das
divl
ret
roll
xlat
call
imul
sarl
sbb
inc
adc
pop
ss
xorb
push
mov
xchg
cmp
das
mov
scas
out
das
repnz
jno
jns
rclb
add
add
mov
lcall
lods
sarl
into
mov
shr
into
gs
mov
sub
pushf
mov
push
pop
cmp
cmp
arpl
ds
dec
pop
pusha
or
imul
in
cmp
push
add
xor
gs
add
rcrb
cmpsb
mov
or
iret
cbtw
movsl
pop
xchg
xlat
stc
cld
xchg
out
sbb
xchg
fwait
movnti
fistps
or
mov
sub
mov
add
cmp
push
mov
mov
and
push
xor
or
inc
in
jle
sub
mov
jge
or
lock
push
mov
aad
mov
in
fwait
cs
cmp
pxor
xor
cmp
fisttpll
pop
push
fst
adcb
icebp
in
test
sarb
adcl
mov
jns
jl
pop
jg
lods
stos
addl
adc
sub
jno
mov
xor
dec
inc
andl
jp
sub
movb
mov
sbbb
xor
push
jno
dec
out
xchg
sbb
outsl
das
movsb
pop
push
mov
dec
stos
clc
inc
gs
imul
push
out
fsubs
ret
fstpl
mov
sub
jns
add
dec
jns
dec
dec
cld
push
mov
mov
cmpsb
xadd
lret
mov
push
insl
xor
fmul
jb
or
xchg
mov
mov
int3
xor
mov
leave
ret
cmp
sti
dec
test
xor
cmp
mov
push
mov
dec
out
insl
fnstenv
leave
arpl
push
mov
pop
icebp
mov
loopne
pop
dec
add
inc
inc
xchg
jnp
call
jbe
fs
mov
shll
mov
decl
adc
mov
xchg
mov
vmovd
inc
lcall
push
mov
xchg
out
rcrb
lds
out
xchg
popf
jb
push
mov
add
jmp
cwtl
pop
mov
adc
pop
cwtl
or
sbbb
jae
jbe
sub
pop
jae
cmp
cmp
scas
into
and
push
add
mov
pusha
cmpsb
adc
shl
pop
ljmp
pop
sbb
jno
es
xor
mov
movsb
push
jmp
jge
cmpsb
xor
pop
loopne,pt
repz
andl
neg
mov
ja
lcall
xchg
xor
pusha
paddq
mov
mov
inc
pusha
add
loope,pt
jge
std
dec
es
rorl
lods
pop
bnd
sub
dec
imul
movsl
pushf
inc
xchg
jb
push
movsb
outsl
mov
loop
cwtl
pop
cmpsb
in
or
jge
mov
outsl
ljmp
enter
jo
pop
lret
sub
and
pop
xor
inc
int3
cld
cmpl
dec
jno
mov
adc
shrb
pop
inc
or
adc
loop
lahf
gs
mulb
rorb
test
and
jmp
icebp
fisubrs
je
repz
and
inc
fs
cld
mov
movsb
pushf
aas
push
into
lds
pop
sub
test
pop
pop
sub
adc
sub
adc
inc
sahf
negl
inc
es
sub
popa
in
xchg
mov
push
call
add
mov
inc
in
inc
push
movsl
jno
push
in
pop
mov
adc
idiv
jp
and
dec
outsl
xor
fdivrl
testb
sub
pop
scas
jb
jo
jns
xchg
lcall
cmp
pop
add
outsl
cmpsl
mov
sub
fiadds
sub
cmc
bnd
jmp
repnz
imul
out
loopne
imul
xor
sub
or
fwait
pop
fsubs
test
repz
mov
clc
sarb
push
jle
dec
testl
sbb
leave
mov
sbb
sti
loopne
mov
inc
mov
sti
aas
or
outsl
and
mov
test
adc
mov
out
mov
pop
arpl
jns
mov
icebp
add
mov
jns
mov
mulb
into
movsl
inc
inc
jl
jge
movsl
pop
lock
mov
push
mov
add
push
ljmp
jno
jae
or
push
dec
mov
push
outsl
push
push
test
adc
fidivs
hlt
mov
shlb
mov
push
or
cmp
arpl
jns
mov
mov
adc
mov
fcoms
bound
jmp
movsl
mov
adc
lods
mov
adc
cmpsb
mov
pop
cmp
rorl
pop
pop
cwtl
leave
shll
push
sub
mov
repnz
lret
mov
pop
cmc
sub
ss
idivb
cltd
mov
push
outsb
jge
cmp
ficoms
cs
jle
in
jno
in
dec
or
xlat
aas
mov
dec
sub
push
test
shlb
call
sti
aas
add
mov
xlat
into
movsl
xorl
sub
call
sub
mov
adc
popf
inc
repnz
cmp
sub
rcrb
push
and
mov
fucomip
data16
inc
sbb
mov
or
nop
addr16
addr16
dec
mov
cmp
imul
jb
mov
sbb
add
sbb
jle
test
mov
cli
fxch
pusha
or
movl
and
aas
pop
aaa
mov
xchg
pop
jg
jae
push
jge
jmp
decl
inc
or
add
xchg
arpl
cltd
outsb
add
push
sub
mov
dec
in
inc
mov
xchg
test
arpl
scas
add
test
and
mov
and
imulb
in
cmp
int
xchg
mov
fidivl
lock
push
adc
test
jmp
test
mov
jo
fmul
hlt
mov
jo
jmp
adc
ror
mov
pop
shll
movsl
loop
cli
push
xchg
fwait
mov
ret
or
call
loop
cld
loope
xchg
jl
test
in
adc
push
cltd
movsb
jns,pt
push
mov
lea
mov
adc
fs
jbe
mov
cmc
push
insl
sub
bound
xor
mov
or
and
cld
popa
fisubs
es
mov
cmpsb
test
mov
das
add
ret
rcrb
cmp
mov
ret
and
jb
cwtl
mov
jno
dec
jbe
push
loopne
dec
popa
add
shrl
inc
arpl
hlt
in
addr16
push
test
inc
push
cmp
jne
int3
xor
jb
ds
sub
cmc
dec
adc
mov
lods
push
andb
sbb
or
jle
mov
jb
cmp
push
iret
jmp
pop
push
call
addr16
daa
out
adc
push
test
inc
jbe
faddl
sub
fisubs
cmp
in
enter
pop
icebp
mov
fidivrs
adc
xchg
sub
dec
pop
dec
hlt
mov
rolb
adc
push
cmp
add
sbb
adc
dec
mov
lods
sbb
lods
jg
loope
lret
jl
mov
ret
imul
pop
scas
and
and
mov
sbbb
cmp
jnp
pop
sub
mov
sbb
fs
inc
mov
out
mov
and
int3
lock
cmp
out
das
lcall
in
outsl
cmp
pop
pop
ret
xor
hlt
frstor
or
ss
pop
orb
stc
jmp
mov
pop
outsb
lods
and
jns
sbb
adc
ds
dec
aaa
in
jae
ljmp
mov
xor
adc
push
mov
inc
mov
fidivrs
jp
in
cmp
lret
mov
sub
lods
aad
pop
xchg
movq
data16
leave
js
inc
out
jbe
repnz
inc
arpl
loope
sub
jbe
sub
xor
imull
jns
inc
jmp
fidivrl
mov
inc
mov
jg
test
jecxz
pop
jbe
or
mov
lahf
push
push
ret
shufps
test
sar
ret
lods
adc
dec
pop
iret
dec
enter
pop
mov
mov
pop
mov
lahf
pop
pushf
and
mov
das
lahf
ds
pop
scas
test
sbb
outsb
sti
jbe
fsts
xchg
imulb
es
pop
lock
xor
add
sbbb
cmp
mov
fs
shrb
cs
cmp
outsb
jo
mov
shll
psubsw
inc
cmp
and
xchg
ret
hlt
pushf
mov
ret
stc
mov
into
loopne
jo
mov
sbb
lret
bound
or
fnstenv
ja
shlb
pop
bound
scas
xchg
mov
ret
mov
push
aas
outsb
loope
outsb
add
adc
pop
loope
daa
mov
test
rcl
repz
xlat
mov
dec
call
lcall
ror
push
cmp
les
aam
daa
lret
mov
push
pop
imul
adc
insl
mov
push
xor
loopne
imul
or
gs
add
dec
dec
jno
insb
push
jmp
roll
pusha
push
mov
mov
mov
and
xlat
in
lds
mov
add
and
push
mov
xor
lcall
ljmp
pop
mov
ljmp
inc
inc
pusha
adc
idivl
sub
call
insb
div
or
dec
xchg
jns
ss
jg
fwait
sti
mov
addr16
das
push
leave
xchg
add
test
icebp
and
loopne
vsubss
leave
jecxz
pop
loope
xchg
ljmp
daa
mov
pushf
and
fsubl
dec
xchg
sar
lahf
lret
daa
mov
mov
push
int
mov
add
nop
sub
idivb
push
es
add
stos
jecxz
fcoml
ret
push
xchg
xor
cmpsb
notl
cmp
int
ret
dec
lret
or
pop
pop
loop
or
call
rcl
je
mov
pusha
fdivrl
fisttpl
pop
jecxz
xor
push
inc
hlt
sbbb
sbb
icebp
jecxz
and
xor
mull
adc
fdivs
sarl
mov
push
mov
mov
dec
test
pop
push
cmp
jge
outsl
movsb
scas
inc
xlat
ffreep
push
pop
mov
jb
push
mov
dec
arpl
gs
mov
inc
inc
addl
adc
xchg
scas
out
add
push
sub
ds
mov
ret
js
subl
pusha
sarb
adc
addl
outsl
aam
add
dec
pop
scas
out
loope,pt
xorl
out
popa
and
inc
data16
pop
fldpi
and
push
mov
fldl
fldcw
ja
push
mov
lret
fs
hlt
mov
rcl
in
ret
add
pop
mov
addr16
add
mov
mov
xchg
mov
sbb
cli
pop
mov
imul
xchg
mov
cmp
jp
movsb
pop
jge
mov
cltd
or
mov
inc
int
and
int3
lods
inc
lret
jne
andl
xchg
fnsave
fs
push
inc
pop
sub
cwtl
cmpsl
imul
outsl
jns
sbb
push
pop
jl
inc
aas
dec
cmp
sbb
pop
movl
and
stos
aas
xchg
pop
mov
xchg
jnp
add
adcb
sbb
mov
lahf
je
hlt
ret
lahf
cmp
mov
test
ljmp
in
jg
inc
push
negb
mov
push
pop
fisttpll
sti
mov
lods
js
mov
faddl
dec
ret
daa
sahf
jne
mov
std
xchg
jge,pt
or
ret
xor
xchg
jbe
and
add
mov
test
sub
hlt
inc
adcb
pop
sarl
adc
or
std
mov
dec
fsubr
arpl
jno
aaa
mov
mov
repz
mov
les
mov
inc
leave
sbb
fs
data16
cmpsl
int
div
inc
leave
bound
push
enter
or
rcrb
rorb
out
mov
into
ret
pop
popf
mov
or
outsl
cmp
mov
and
loop
mov
pop
xor
ficompl
or
adc
clc
inc
mov
ds
in
notl
add
aad
mov
mov
in
or
paddq
add
pop
popa
xor
jl
add
push
pop
jns
mov
pop
cs
incl
testb
js
jg
sbb
mov
dec
mov
fisubs
push
push
rolb
test
in
mov
je
adc
push
aas
adc
ljmp
popa
sbb
xchg
ljmp
lock
pop
adc
xchg
out
jecxz
push
cmp
xchg
or
xchg
jnp
lods
mov
adc
pop
sbbl
mov
add
mov
cmp
sub
add
cld
xchg
call
fnsave
sbb
pusha
outsl
aad
push
pop
xchg
out
out
sbb
or
mov
repz
repz
xor
dec
mov
idiv
and
sub
mov
in
or
mov
sbbl
cmpb
enter
or
test
inc
gs
xor
xchg
pusha
out
hlt
xchg
cltd
push
mov
repz
fidivs
stos
xchg
test
mov
mov
mov
and
or
cmp
pop
insb
mov
and
cmp
push
mov
or
xor
xorl
dec
add
cwtl
lock
stc
addr16
out
mov
inc
imul
adc
pusha
dec
scas
arpl
cmp
add
lcall
in
gs
cld
pop
mov
mov
aas
lcall
push
call
inc
xlat
repz
sbb
dec
loope
or
je
push
in
jno
or
lods
cmc
mov
imul
loope
mov
rorl
sub
mov
in
sbb
jg
cmp
inc
push
sbbl
or
adc
jg
enter
out
aam
pop
aaa
fstpl
lock
add
or
jle
mov
aas
mov
lock
outsb
mov
or
dec
enter
in
repnz
icebp
fadd
sub
mov
lds
mov
fidivs
dec
xchg
push
sbb
push
cmp
cmp
addl
jo
fisttpl
in
fwait
xor
sbb
jmp
xor
mov
pop
add
mov
pop
mov
adc
add
negl
and
stos
fsubs
movsb
jmp
bound
mov
mov
mov
cmp
js
mov
jge
lods
pop
cmp
jge
or
mov
div
loope
mov
adc
jne
movsl
out
into
xchg
int
clc
mov
or
and
cli
pop
lds
sbb
sahf
es
mov
int3
xor
scas
push
popl
sub
pop
cltd
sub
mov
pop
cmpsl
inc
aas
jae
fsubl
sbb
les
jo
stc
cmc
inc
or
push
mov
out
jl
fs
push
popf
xor
mov
sahf
mov
loopne
xlat
test
sbb
xor
outsb
jnp
fucomp
cltd
mov
push
mov
mov
test
lods
pop
adc
inc
rcrb
add
fwait
cmp
mov
fsubr
xchg
sbb
paddb
notb
into
scas
push
das
hlt
das
fsubl
sahf
fmuls
insb
test
inc
pop
int3
sti
incb
xor
out
test
cld
rcrb
push
mov
pop
and
add
enter
xchg
push
and
jbe
mov
shl
jl
xchg
and
adc
adc
call
out
loop
add
sub
mov
pop
cmp
xchg
rcrl
and
and
dec
mov
mov
dec
shrl
inc
jecxz
mov
fldl
arpl
out
test
jne
lret
outsl
repz
cmp
dec
jne
cld
paddd
push
jmp
cli
jb
popa
movsb
sbb
push
inc
fcoml
sbb
scas
mov
xchg
bound
notb
sub
fnstenv
gs
jle
or
cmpsl
sub
or
sub
fbstp
add
dec
cmp
out
dec
pop
rcll
dec
jmp
lahf
mov
jbe
pop
xor
lcall
add
mov
mov
mov
mov
lock
rcll
pop
xchg
push
pop
repnz
jg
dec
and
xor
in
inc
sbb
xchg
repz
xlat
mov
fstps
sarb
push
pop
test
jl
sbb
xchg
loope
fisubs
insb
std
lcall
pop
ficompl
loopne
sbb
dec
popa
jns
mov
ficoms
push
aam
mov
dec
popf
in
mov
pushf
lods
mov
ficoms
xchg
dec
stos
cli
xchg
fildl
arpl
xchg
mov
ljmp
push
xchg
mov
or
loope
adc
mov
insl
fisubs
int3
aam
scas
stc
or
sbb
pop
pop
xchg
mov
mul
pop
aam
loopne
addr16
nop
cmp
cmp
mov
loopne
sbb
mov
adc
adcb
sbb
into
fisubrl
stos
adc
mov
in
aam
fs
cmpsb
push
pop
lods
js
pop
xor
cltd
xor
mov
ljmp
add
or
add
add
dec
xchg
sub
cs
fiadds
sub
push
pop
jae
popf
out
pop
push
xor
enter
ja
sub
jle
mov
mov
iret
xchg
push
popf
in
or
push
or
daa
scas
push
sti
xchg
jno
aam
inc
sbb
pop
orl
cmp
sahf
xor
xchg
mov
xchg
and
mov
jp
mov
jp
mov
push
inc
inc
std
inc
stc
stos
nop
and
movzwl
in
imul
xorb
aad
in
mov
sarl
push
je
scas
jae
in
nop
xchg
jns
stc
addl
data16
icebp
mov
xchg
mov
fs
fs
out
bound
jg
sub
fidivl
fsubrs
fsubrp
jl
mov
sub
and
push
pushf
jecxz
into
daa
je
add
js
push
and
xchg
mov
inc
rcrl
rcl
jo
out
jle
in
out
imul
subl
scas
sbb
add
mov
xchg
ds
or
je
cmc
push
fs
adc
sub
addr16
sbb
arpl
outsb
in
lret
cwtl
std
cs
in
push
inc
js
push
ljmp
push
mov
xchg
push
mov
cmpsl
adc
xlat
push
das
arpl
not
lret
in
icebp
cmpb
mov
sub
jg
into
xor
mov
bound
loop
mov
xchg
fsubrs
cmp
ds
stos
addr16
pop
nop
cmpb
data16
fmuls
pop
lret
and
jge
popa
aad
dec
jle
inc
lea
cltd
cmpb
mull
mov
nop
icebp
aas
add
bnd
bsf
roll
lret
pop
orb
xchg
cmp
enterw
sub
cmpsb
enter
scas
add
idivb
cmp
adc
icebp
or
bound
fs
jmp
jl
xlat
jmp
outsl
xchg
jo
adc
repz
daa
ds
test
cmp
xchg
mov
jp
out
scas
int
push
mov
pop
dec
imul
mov
popf
iret
fcmovnb
adc
scas
mov
adc
xchg
sub
sub
jno
out
aaa
sbb
mov
cmovb
scas
lds
push
xchg
adc
gs
mov
iret
adc
je
out
test
out
push
rcrb
add
pop
push
adc
lods
jae
fbstp
pop
movsl
dec
mov
sub
int3
arpl
dec
fdivrl
sbb
mov
shlb
out
push
xchg
std
aad
mov
cmp
push
les
ja
int3
cmpsl
cmpsb
xor
mov
ljmp
call
or
push
popf
outsb
cwtl
and
jmp
jg
inc
pusha
cmp
dec
pop
jo
inc
jne
das
js
pusha
clc
mov
dec
pop
sub
repnz
imul
jne
arpl
sbb
cmp
mov
jl
sub
cmpsb
out
int3
xchg
jb
pop
or
lds
inc
and
push
jae
push
ljmp
and
into
mov
cmp
add
cs
add
xor
es
repz
fldenv
cmp
add
xor
test
dec
data16
test
xor
movsl
push
cmpl
arpl
xor
enter
inc
cmp
out
leave
or
jne
dec
dec
in
dec
gs
add
shlb
hlt
mov
loope
add
test
jmp
shll
rorb
test
mov
fcmovnu
cmc
or
loop
sbb
add
cltd
fs
adc
mov
repz
jnp
push
xor
mov
nop
push
movsb
jmp
insl
and
push
outsl
mov
loopne
pop
sub
lea
stos
inc
out
mov
sbb
mov
add
das
adc
cmpsb
dec
mov
jg
repnz
insl
cmpsb
ret
fsubr
inc
stos
sbb
inc
in
scas
inc
mov
fxch
filds
adc
addb
cmpsl
xor
xchg
sub
jb
add
pushf
iret
je
out
repz
add
aas
mov
outsb
cmp
mov
popa
aas
insl
test
xor
inc
ret
cmpsl
loop,pt
dec
gs
aam
outsl
enter
pop
mov
jno
in
push
es
data16
test
das
pop
add
int
jne
fildll
or
add
addb
cmp
in
add
and
xchg
cmp
mov
jle
sub
lahf
pop
sbb
jl
cltd
or
sbb
inc
mov
rol
in
lcall
cmp
cmpsl
lcall
aam
les
aaa
cld
pushf
xchg
mull
enter
shlb
stos
xchg
cmp
rcll
pop
inc
dec
mov
mov
cltd
push
nop
push
loope
inc
ds
aam
xor
ds
ds
jecxz
jl
bound
cli
negl
sub
arpl
or
xchg
jecxz
xchg
xor
arpl
mov
scas
adc
push
push
ds
push
dec
and
push
and
xlat
out
sub
inc
imul
inc
pop
scas
xchg
sbb
mov
sub
sbbb
pop
sarb
andl
loope
lahf
xchg
fiadds
repnz
adcb
and
fsubs
mov
daa
mov
mov
imul
and
test
popf
push
stos
daa
sub
sbb
and
xchg
mov
je
jge
pop
cmp
scas
or
rclb
cmp
sub
jge
int3
or
adcb
lea
sub
test
jle
push
xor
jnp
dec
push
clc
add
es
mov
jnp
mov
dec
pop
mov
push
cmp
aas
stos
dec
loope
sbb
movsl
adc
sbb
pusha
pop
push
in
mov
bound
cmc
adc
xchg
pop
lcall
push
add
sub
mov
mov
dec
dec
rcrl
and
idivl
test
shll
or
cmp
fsubrs
pop
idivb
mov
icebp
cmpb
xor
push
inc
xor
xchg
lcall
icebp
mov
xchg
sub
arpl
fbstp
repnz
sbb
icebp
adc
sub
adc
add
sbb
jecxz
mov
and
sub
lods
int
push
dec
movsl
sbb
ret
shll
dec
adc
pop
nop
sbb
iret
imul
jnp
pusha
cmp
dec
push
ror
push
outsb
icebp
fcoms
cli
jge
test
popa
sti
test
lret
cmpsl
popf
sub
jne
and
mov
inc
in
inc
repz
adc
inc
lahf
xchg
pop
lds
mov
movsb
lock
scas
add
push
inc
xchg
jb
or
fxch
adc
repz
push
adc
jmp
aaa
out
push
mov
pop
andb
mov
fisubrl
call
mov
mov
clc
sbb
dec
add
aaa
push
das
in
lea
push
call
xchg
jo
je
xchg
pop
lods
inc
jp
and
cmpsb
inc
mov
cltd
add
out
fcompl
inc
xchg
inc
hlt
addr16
cmp
pop
test
enter
push
inc
pop
in
jnp
cwtl
jp
sbb
leave
jno
sti
out
int3
mov
dec
out
aad
adcb
xchg
dec
sarl
sti
or
mov
adc
xlat
cwtl
das
leave
aam
subw
adc
call
and
repnz
cmp
dec
test
repnz
cmp
and
sti
push
or
push
ja
fnstenv
scas
out
test
popa
pusha
mov
jno
add
je
test
inc
sub
push
fisttpll
popa
pop
cmp
test
mov
arpl
sub
movsb
fldenv
xchg
xchg
cli
mov
outsl
hlt
rcr
xchg
mov
clc
call
or
fcoml
cwtl
pop
aaa
xchg
pop
ds
pop
dec
push
push
pop
ss
sub
pop
pusha
testl
sub
cmp
pop
rcll
mov
adc
iret
enter
pop
push
sahf
out
add
hlt
mov
test
mov
mov
sub
push
inc
pop
push
out
adcb
push
aad
lret
push
pop
divl
sub
out
push
popa
cs
add
mov
mov
cmc
aad
repz
insb
dec
adc
cmp
aad
jge
cmpsl
sbb
daa
aam
cmp
sub
xor
das
arpl
cmp
inc
or
fidivs
mov
cld
inc
jno
hlt
cmp
scas
enter
inc
xchg
cs
fiadds
sub
fisubrs
and
pop
fidivl
push
cmp
rcrl
adc
test
data16
sahf
xchg
shlb
hlt
jecxz
sbb
imul
incl
popa
push
mov
sbb
stos
dec
sub
mov
lret
out
adc
test
dec
outsb
inc
xchg
out
repz
xchg
fsubrp
and
das
cmc
aas
out
and
mov
mov
sbb
ss
fs
push
insl
sahf
stos
outsb
add
push
imul
xchg
ja
scas
lcall
mov
inc
into
stos
das
add
jbe
jo
mov
pop
adc
pop
adc
jmp
inc
lea
mov
scas
lret
xlat
inc
arpl
scas
dec
aas
imul
xchg
arpl
jns
ss
cmp
adc
lahf
pop
sub
aas
mov
iret
mov
inc
push
rcrb
scas
jno
rol
jnp
out
xor
mov
rolb
xchg
mov
cmp
test
fbstp
mov
mov
add
adc
movsb
fs
sub
rdmsr
mov
adc
sbb
fnstcw
jle
sbb
jle
pushf
mov
dec
ljmp
dec
add
lea
adc
inc
das
stos
jmp
cld
add
std
jmp
and
and
fs
arpl
pop
adc
inc
jg
sarb
push
dec
adc
inc
repz
fxch
mov
pop
hlt
sub
int
pushf
dec
jnp
jecxz
fidivl
lret
xchg
mov
insb
add
cwtl
pop
orb
or
and
std
xchg
cli
pop
jp
push
in
mov
cmc
cltd
jae
xchg
cmp
jne
sbb
push
inc
cwtl
or
movsl
mov
pusha
pop
subl
subb
dec
popa
jns
cld
sub
popf
data16
ljmp
xchg
fidivrs
ljmp
std
xchg
mov
dec
sbb
cmp
and
sbb
dec
jae
out
insb
sar
pop
push
inc
xchg
mov
cs
orl
pop
in
test
inc
or
ljmp
test
sub
stos
inc
aam
add
aaa
out
or
pop
cltd
cmp
push
jmp
and
inc
mov
in
fsubr
out
cmp
out
jae
clc
add
cmpsb
fildll
les
mov
out
pxor
inc
repnz
das
movsb
xor
aad
add
sbb
inc
cmp
xor
out
mov
roll
cmp
ss
jbe
sub
clc
cli
std
xchg
sub
jne
push
nop
mov
mov
or
and
aad
popf
cmpsl
push
push
stos
xchg
pop
cwtl
jb
dec
test
int
xchg
xchg
adc
dec
xlat
mov
mov
iret
frstor
mov
dec
fbld
xlat
sub
movsb
xchg
xor
sub
out
xchg
cltd
sbb
stos
sahf
xchg
and
xchg
xlat
outsl
mov
adc
cwtl
sbb
out
push
rcrl
dec
hlt
xor
pop
repz
insb
mov
inc
mov
fisttps
xchg
inc
cmpsl
stc
sahf
xchg
dec
add
jle
pop
loop
jmp
js
pop
mov
mov
mov
push
insl
js
xchg
notl
mov
int
jge
push
mov
fidivl
or
aas
rolb
add
popa
mov
cmp
mov
pop
mov
mov
xor
push
fs
ret
xchg
cmp
sub
cmpsb
mov
test
push
mov
mov
or
lods
xor
dec
test
loopne
inc
pusha
xorb
jmp
inc
mov
cwtl
mov
shll
repz
mov
add
ja
inc
push
fucomp
push
addr16
int
sub
jmp
scas
jg
pusha
shrb
sbb
push
xchg
insl
je
test
adc
or
xchg
jnp
lcall
xchg
pop
lods
out
jb
je
and
and
je
aas
xor
pop
rcl
out
mov
scas
shrb
mov
sbb
adc
or
ss
push
adc
push
sbb
mov
sub
pop
mov
stos
ret
sub
iret
xor
or
cmp
jnp
js
lods
dec
mov
mov
rcrl
cmpsl
ret
cmp
data16
popl
mov
cltd
pop
ret
cmpsb
sbb
xchg
arpl
les
push
scas
push
sub
xchg
sbb
jae
xor
in
fucomip
push
out
shlb
mov
jns
cmp
or
mov
push
bound
cmpsb
aad
pop
add
mov
hlt
jle
kmovb
pop
sarl
daa
or
push
shl
decb
call
push
adc
pop
inc
fsubs
xor
hlt
inc
cmpsl
cmp
mov
fdivs
add
mov
adc
rcrl
shr
fcmove
cmpsb
nop
cli
mov
sub
sbb
and
cs
add
mov
out
or
or
mov
in
call
cmp
xchg
add
pop
ss
inc
pushf
sahf
iret
iret
mov
add
repz
aam
or
xor
out
mov
hlt
or
loope
sahf
xchg
es
cmp
mov
mov
aas
dec
and
outsl
in
mov
movl
test
inc
aas
fs
mov
outsb
test
mov
sub
call
arpl
mov
or
clc
ret
lret
shrb
xchg
insb
and
sbb
mov
ljmp
mov
mov
mov
rcrl
fcom
jmp
jns
cltd
test
fisttpl
inc
test
cmc
mov
mov
mov
push
xor
js
jp
fdivl
jp
aaa
ret
push
push
nop
rolb
addr16
pop
mulb
fdivrs
mov
or
pop
sbb
loope
dec
je
pusha
cltd
pop
pop
sbb
push
imul
mov
push
nop
mov
fldcw
adc
pop
pop
sbb
mov
js
pop
ljmp
out
xchg
lret
pop
mov
pop
je
adc
or
mov
in
sub
outsb
clc
sahf
int
push
jb
lds
push
sub
les
push
push
pushf
dec
pop
movb
hlt
jecxz
mov
pop
mov
out
les
hlt
lea
xchg
xor
enter
mov
mov
pusha
incl
xor
loope
jle,pn
pop
cli
in
aad
call
xchg
and
std
push
mov
pushf
dec
int
cmpsl
pop
aad
mov
sub
lcall
push
cmp
mov
ret
cmp
int3
imul
std
dec
inc
shlb
sbb
mov
and
sbb
sub
into
sub
leave
scas
mov
push
sub
rcrb
pop
outsl
roll
das
or
ja
sbb
lahf
fdivrs
decb
cmp
pop
stos
and
test
sub
pop
pop
inc
inc
pusha
mov
cmpsl
jmp
in
roll
push
adc
add
js
ret
enter
insb
sarl
sbb
dec
out
test
sbb
adc
lcall
sbb
add
inc
orl
xchg
enter
cmp
push
push
sbb
pop
ja
lods
test
cmp
loope
or
test
pop
add
adc
test
pop
push
pop
cmp
push
out
jne
pop
cmpsl
adc
mov
movsb
mov
cmp
xlat
inc
mov
mov
test
nop
push
icebp
xlat
out
rcll
add
mov
jne
bound
and
push
jno
xchg
mov
or
dec
inc
mov
xor
mov
xchg
movsb
fcomip
xchg
inc
test
mov
cwtl
xor
push
lds
dec
mov
jge
fbstp
loopne
imul
fisubrl
or
mov
stos
aam
adc
or
pop
call
test
jno
jo
sahf
mov
mov
xor
mov
mov
fiaddl
mov
push
cmc
jne
inc
sbb
test
jb
hlt
aas
in
inc
pop
insl
inc
sbb
into
jae
mov
sub
movsl
sub
jmp
mov
pop
adc
mov
adc
sub
dec
test
adc
mov
mov
sbb
xlat
outsb
push
jbe
test
fldt
mov
daa
cli
jb
cmc
push
shlb
into
mov
test
stc
fst
xor
imul
popf
push
ror
rcrl
jns
push
dec
push
mov
pop
xchg
mov
sub
jg
sub
orl
pop
hlt
mov
xor
mov
jne
push
fwait
adc
leave
and
mov
pop
ss
scas
stc
fwait
cwtl
mov
mov
js
shll
std
insl
sbbl
jno
mov
add
cmp
pusha
popf
cmp
scas
je
iret
sbb
push
ljmp
xor
mov
push
movsb
fbld
xchg
lret
iret
cmp
pop
push
fdivp
addb
scas
mov
cwtl
pushf
mov
or
jge
pop
push
fidivrs
mov
loope
mov
cmp
data16
adc
sub
pop
pop
adc
xchg
add
and
and
inc
stos
inc
mov
std
or
add
std
shl
jne
jns
subl
jmp
lret
adc
sbb
cli
or
sahf
cmp
hlt
orl
xor
jmp
dec
ret
cmp
mov
inc
fisttpl
jp
xor
xor
cmpsl
xchg
mov
cmp
cltd
jnp
out
mov
imul
shrb
mov
fistl
cmpsb
add
call
cwtl
dec
movsb
orl
jle
push
je
subl
lds
mov
outsl
shlb
fistpll
les
rorl
jnp
sti
xchg
cs
clc
push
or
mov
sbb
push
into
dec
xchg
jbe
pop
stos
sub
test
out
push
or
test
cmp
xchg
aaa
sub
jmp
hlt
xchg
ja
andb
sbb
sbb
sahf
mov
out
lahf
aas
hlt
push
movsl
or
lcall
or
mov
xchg
pop
cmp
cwtl
xor
xchg
xor
lods
roll
mov
fadds
stos
sbb
xchg
int3
pop
aam
sub
mov
loopne
inc
mov
xor
or
xchg
std
xchg
ss
inc
add
mov
in
sub
pop
push
pop
dec
pop
jb
lock
test
sbb
repz
xor
repnz
out
hlt
rcrl
jae
ficomps
fcmovnbe
ja
sub
lcall
out
pop
daa
xchg
ds
xorl
xor
inc
pusha
in
les
mov
xlat
or
cltd
scas
out
sub
push
fstpt
stos
jbe
popl
and
ret
sti
inc
inc
dec
imul
lret
sti
xor
test
aam
adc
shll
inc
fimull
or
repnz
dec
pop
mov
cmp
or
ss
test
hlt
mov
out
mov
ds
leave
jbe
jns
sub
xor
pop
mov
out
mov
jb
xlat
movsb
mov
leave
push
jo
sti
orb
nop
push
dec
fldcw
in
je
and
jno
aaa
jb
into
sub
dec
lahf
jecxz
std
cmp
mov
mov
adc
dec
sub
fsubrs
int
or
fcmove
jnp
push
inc
xchg
mov
push
lcall
cwtl
xor
inc
mov
cli
and
xchg
adc
jbe
movsb
sbb
push
jae
es
xchg
loope
sbb
insl
fs
cld
xchg
xor
jge
pushf
mov
fldt
shr
cmp
push
jo
aad
shlb
or
aam
aas
movsl
push
je
fisubl
or
repnz
cwtl
push
loope
in
pop
sahf
push
cmp
pmaxsw
xchg
dec
mov
sbb
push
mov
mov
push
jl
jg
shll
adc
push
jne
cmp
mov
ret
mov
je
cs
push
sub
mov
pop
andb
jns
addr16
pusha
ja
hlt
loop
adc
stos
or
jo
pmulhw
mov
leave
mov
xor
sbb
cld
pushl
ljmp
fwait
mov
push
dec
and
out
test
push
cmpsl
cmp
jle
popa
daa
mov
xchg
scas
out
add
xchg
mov
adc
sbb
ja
mov
push
outsl
and
in
je
add
pop
xchg
sahf
jns
or
sub
lods
fidivs
je
cmp
roll
cs
test
mov
je
divl
sbb
scas
inc
test
and
repnz
push
popa
add
and
fisttps
adcb
call
orl
arpl
movsb
in
sbb
fimull
repz
dec
loope
push
inc
fidivs
out
nop
cmp
divl
cmc
push
insl
rclb
mov
sbb
or
add
lret
sub
daa
dec
enter
dec
mov
imul
mov
jns
inc
xchg
les
and
add
mov
dec
pop
mov
dec
cmp
mov
xor
jae
movsl
sub
jecxz
push
add
loop
or
aam
js
pop
pop
mov
xchg
sub
out
in
in
stc
adc
cli
sub
daa
or
cmp
cli
nop
fdivr
jbe
in
fdivs
and
test
outsb
push
sahf
inc
xchg
inc
mov
pop
lret
ds
or
adc
daa
outsl
cmp
fldcw
pusha
inc
lods
add
push
mov
rclb
loopnew
rcrb
lret
mov
imul
inc
cld
js
jbe
xchg
xchg
push
jne
push
xchg
clc
les
cld
stc
inc
add
mov
xlat
mov
aas
adc
das
or
sub
jp
inc
ret
out
cltd
dec
sub
push
adc
nop
dec
fists
repz
cmpsb
push
loope
lret
mov
gs
movsb
cmp
ficompl
les
pop
inc
fs
mov
scas
sahf
nop
mov
mov
in
in
inc
in
or
xchg
jo
into
aas
pop
add
test
cwtl
je
and
cwtl
rclb
ds
fwait
bound
aaa
orl
repnz
inc
lret
push
push
punpckhbw
sti
add
mov
push
stos
push
mov
xor
or
arpl
push
adcb
jbe
ja
xor
fwait
js
icebp
pop
xor
insl
in
das
test
pop
inc
push
popf
je
movsb
mov
push
dec
xlat
pop
mov
push
imul
ficomps
and
in
push
dec
mov
pop
add
andl
pop
push
shlb
jecxz
push
pusha
and
sbb
mov
bound
pop
stc
fmull
pushf
sub
mov
and
dec
xchg
in
std
in
pop
mov
sti
sbb
adc
ds
xchg
push
pop
cmpsb
aad
iret
outsl
add
ja
adc
inc
jnp
xchg
mov
pop
faddl
adcl
aam
imul
jbe
push
orl
and
outsb
repz
dec
push
adc
cmp
ds
pop
insb
ret
pop
push
jecxz
push
xor
test
imul
adc
pop
inc
cmp
cmpb
cli
test
js
mov
push
das
addr16
clc
cmp
ss
scas
nopl
dec
stos
fwait
cld
pop
ja
adcb
fs
pop
xchg
mov
xlat
daa
scas
pop
cmp
add
mov
cli
data16
pop
adc
xchg
ret
mov
push
jae
mov
ljmp
and
push
add
repz
lcall
outsb
out
icebp
mov
nop
test
lods
aas
nopl
adc
pushf
mov
fisubrl
or
out
sub
mov
mov
inc
out
or
mov
and
fidivl
push
rcrb
sbb
pop
push
repnz
jl
aas
movsl
xchg
cmp
mov
mov
fidivl
dec
mov
dec
mov
fisttps
arpl
mov
lock
nop
mov
add
les
dec
push
sbb
xchg
scas
aam
orl
push
fwait
addb
push
push
mulb
mov
jne
jbe
xchg
in
ret
test
pop
xlat
dec
pop
repz
shl
sbb
notl
lds
andb
fldlg2
aas
test
push
sub
jmp
js
xchg
aaa
adc
dec
jne
mov
lret
jb
aam
inc
xchg
pop
cli
adc
pushf
dec
leave
in
xor
and
xchg
shrb
enter
sbb
das
int3
pop
mov
push
or
sub
js
mulb
sub
sarb
dec
test
ljmp
sti
xor
mov
fidivrl
test
push
das
loopne
loop
lods
sarb
mov
pop
nop
mov
push
push
push
jo
cmpsl
ds
pop
insb
push
repnz
fwait
mov
or
jle
sahf
and
jecxz
and
cmp
sub
sbb
les
ret
inc
pop
fsubp
hlt
pop
cmp
xor
dec
aaa
rcrb
in
rcrl
mov
push
push
mov
inc
fldl
mov
sarl
sub
shll
insl
xor
outsb
add
and
fstl
andl
ss
mov
push
outsb
xchg
out
test
aas
fisubrs
mov
lock
fcomps
cmp
js
aam
mov
addb
enter
push
mov
fdivs
in
push
adc
adcb
fstpt
push
xorb
loopne
add
and
lret
es
test
lods
mov
inc
in
adc
cmc
or
insl
push
pop
in
xchg
sub
scas
inc
int
or
out
int3
xchg
mov
cmp
or
add
scas
dec
aas
jmp
xchg
daa
fdivs
push
movsl
jge
and
xchg
sahf
sub
or
sti
mov
loopne
pop
das
fstl
mov
mov
cmp
in
jbe
out
arpl
or
xchg
xacquire
mov
filds
stos
xor
pop
mov
outsl
push
push
push
daa
mov
and
sub
sbb
add
push
daa
mov
daa
out
push
ljmp
es
add
inc
pop
les
mov
jno
ljmp
mov
jne
xor
jg
xchg
mov
mov
sub
inc
mov
pop
xor
in
add
movb
aad
push
or
data16
scas
pushf
pop
fldt
sbb
xlat
shr
mov
in
cli
ret
cmpsb
js
int
and
cmp
push
mov
cltd
lcall
sub
sahf
or
jg
jg
push
mov
inc
mov
xlat
cmpsl
mov
out
or
pop
jp
lret
es
push
lcall
addb
clc
jb
xchg
inc
fiaddl
int3
sub
add
lcall
in
push
sahf
xchg
cmpsb
loope
xchg
bound
or
js
adc
jbe
stc
iret
fdiv
rorl
jns
imul
xchg
sbb
mov
xor
pop
jbe
sarl
pop
repnz
je
jmp
leave
cmp
sub
pop
pop
testb
mov
mov
jbe
and
fistpl
icebp
shrl
js
dec
orl
lcall
pop
jmp
arpl
out
jns
mov
push
push
and
insl
add
xorl
test
repnz
inc
mov
aad
cmp
or
xchg
sbb
or
mov
sarl
insb
mov
in
cmp
jle
stos
fidivs
in
popa
mov
int3
xor
push
addr16
sbb
mov
rol
sub
imul
pop
nop
or
je
int3
push
mov
loopne
xchg
or
test
pop
lret
in
dec
sbb
jp
xor
cmp
xchg
jle
mov
push
lcall
movsb
cmp
xchg
std
test
pop
and
or
data16
cs
xor
mov
jecxz
sbb
pop
ret
sbb
mov
mov
sbb
cmp
notb
sbb
mov
out
sahf
shlb
push
and
mov
out
jns
out
fbstp
cmc
int3
call
lea
sbb
adc
outsb
std
xchg
cmpsb
jo
es
sbb
push
fnstsw
clc
sub
push
jne
arpl
ds
idivl
xchg
cmpb
loopne
dec
cwtl
jae
adc
pop
imul
mov
insb
lret
mov
push
adc
or
mov
test
fst
call
lahf
aas
mov
sub
lret
addr16
call
and
push
out
mov
lahf
mov
dec
inc
lds
int
lahf
frstor
mov
mov
mov
jmp
push
call
fnstcw
jb
inc
leave
addr16
mov
fucom
mov
aaa
xchg
sbb
xor
mov
xchg
iret
inc
jmp
mov
je
add
cmp
xor
dec
pop
xchg
dec
push
roll
push
ja
cltd
orl
sbb
mov
ljmp
xlat
push
rorl
mov
into
push
cmpsl
mov
fwait
mov
cmp
into
push
clc
xchg
jb
fmull
mov
lods
pop
cwtl
enter
jmp
pop
xor
jle
sti
or
imul
ss
jle
mov
adc
ja
push
ja
repnz
push
out
lods
and
xchg
outsb
rcrb
jecxz
cmpsl
cmp
out
sahf
mov
mov
mov
and
inc
push
jo
and
push
addr16
cwtl
test
mov
inc
mov
ljmp
sbb
cld
dec
outsl
sbb
data16
pop
xor
jae
inc
mov
cmp
aas
dec
dec
outsb
ds
out
mov
inc
inc
or
jbe
sti
fcomp
cmpsl
dec
ds
pop
fistpll
mov
adc
negl
jle
dec
push
enter
add
dec
dec
mov
lret
sti
das
adcb
sub
sbb
push
imul
test
xor
and
push
xchg
cs
sahf
dec
sbb
cmp
or
inc
pop
mov
push
dec
imul
sub
mov
sahf
mov
adc
subb
jo
sahf
jl
or
cmp
lcall
ret
mov
adc
fistps
mov
addb
lock
in
ja
jo
loop
sti
test
sub
shrl
xchg
js
negl
ret
or
sbb
out
dec
jle
cmpsl
ret
rorb
jge
out
mov
push
outsb
sbb
push
lret
cmp
dec
jo
es
mov
lret
push
cmp
push
imul
and
mov
adcb
adc
jno
adc
rorb
cmp
lcall
jne
xor
and
jnp
cmpsl
out
loopne
jg
pop
xchg
rorl
sbbl
xchg
ror
sbb
icebp
or
popa
sub
jp
mov
popa
jg
push
xchg
pushf
cmp
insb
jp
adc
loope
outsb
test
shrb
mov
enter
jns
rol
push
hlt
xlat
outsb
loop
xor
in
mov
cmp
sbb
les
cmpsb
xchg
sub
ret
pop
cmp
pushf
pop
test
xchg
xchg
cmp
mov
sarl
iret
xor
iret
loope
push
push
movsl
jl
or
js
cwtl
aam
mov
fnsave
jo
arpl
dec
fistps
mov
js
shlb
movl
mov
lock
movsb
add
and
sub
xchg
cmp
out
xor
stos
xchg
push
push
jg
in
ret
dec
mov
push
xor
mov
mov
xlat
sub
daa
icebp
push
fsubl
xor
outsl
xor
sbb
mov
jns
push
repz
popa
dec
add
stos
add
sti
and
jg
cld
fnstsw
push
fbstp
dec
mov
out
out
jno
sub
dec
xchg
sbbl
jge
or
sub
xchg
xor
adc
mov
inc
fcomi
shll
sbb
clc
adc
stc
shlb
fisubrl
ret
pusha
and
sub
pop
es
inc
ret
loope
xor
dec
lods
sbb
jns
sub
das
mov
lcall
xchg
xchg
mov
adc
add
xchg
xor
mov
test
and
xorl
repnz
dec
imul
mov
adc
xlat
outsb
shrl
cmpsl
jns
popf
mov
data16
sbb
shrb
mov
in
xchg
jne
ret
aam
bound
xor
outsl
add
push
xor
loop
pop
mov
jno
push
push
mov
push
jp
jl
lret
jns
and
push
jle
push
mov
hlt
mov
fucomi
orb
jecxz
and
and
rcll
mov
xchg
add
jbe
adc
cmp
jge
push
jge
mov
fdivs
into
mov
lret
sarb
and
mov
adc
dec
movsb
insl
pop
cmpsb
mov
cmp
popa
sbbb
mov
jae
push
rcl
insl
add
stos
hlt
mov
inc
or
mov
arpl
gs
pop
mov
daa
notb
test
push
xor
daa
repnz
repz
aaa
into
add
test
add
lret
xchg
adc
out
pop
hlt
pushf
pop
mov
scas
jb
insl
or
sbb
loope
and
aad
loopne
scas
inc
incl
xchg
lahf
push
xchg
push
push
ja
mov
in
cmpsb
ret
mov
mov
dec
jle
or
mov
jbe
mov
mov
leave
or
mov
and
inc
xchg
xchg
cmpsb
adc
arpl
cmpsl
ds
push
test
mov
aaa
adc
jl
sti
xor
ljmp
fsts
ss
adc
je
or
lcall
sahf
imul
dec
aam
mov
les
stos
sbb
iret
lods
pop
push
mov
into
push
jb
loop,pt
cmp
dec
mov
scas
mov
in
stos
ret
int3
push
fwait
and
rolb
je
pop
icebp
jp
xchg
adc
int
pop
jno
sub
xor
shlb
sbb
pop
data16
pop
lods
jmp
cmp
pop
out
or
jbe,pn
cmpsl
fcoml
pop
int
pop
insb
sti
fxam
arpl
xor
sti
or
aam
jno
aas
inc
arpl
push
fmull
add
test
in
and
cmpsl
jmp
lds
sbbb
clc
jg
and
jge
js
lods
mov
cltd
mov
lret
mov
mov
mov
in
jp
push
cld
xchg
mov
lea
fsubs
popa
mov
fsub
test
mov
lahf
sbb
pop
sbb
insb
inc
xchg
inc
aaa
add
mov
inc
and
mov
push
cmp
scas
std
push
arpl
loopne
xor
add
dec
xchg
scas
add
push
mov
mov
jmp
jg
jbe
mov
divl
fwait
bound
cmp
out
mov
adc
lea
jl
xor
and
pop
rcrb
mov
mov
inc
jge
nop
dec
sub
mul
sub
cmc
mov
cmpsl
shll
data16
and
enter
cmpsb
cmp
sub
jno
aaa
or
jle
out
inc
mov
out
int3
outsb
add
pushf
lahf
or
aas
mov
daa
mov
sub
outsl
xor
fstpl
mov
or
jbe
xchg
js
mov
mov
add
negl
fstl
cmpsl
and
hlt
repnz
add
mov
push
or
fnstcw
adc
jne
xor
pop
in
and
pop
int3
xchg
lods
ret
sbb
dec
xor
jge
fcmovnu
pop
and
out
test
and
adc
push
lcall
test
cltd
mov
xchg
xchg
pop
xor
pop
lea
mov
mov
testl
cmp
mov
jmp
inc
test
mov
mov
dec
jecxz
ror
jecxz
push
fldenv
fistpl
sarb
bound
test
into
fdivrs
jecxz
out
xor
imul
int3
sbb
out
sub
in
pop
hlt
mov
push
mov
leave
jp
lea
mov
std
loope
pop
or
jge
jge
shl
int3
xor
enter
and
cwtl
fs
push
mov
pop
cmc
aas
shlb
insb
cmp
push
sub
pop
scas
andb
or
dec
push
aas
test
jg
adc
xor
iret
test
adc
cld
or
imul
xchg
sub
mov
test
and
inc
sbb
and
in
push
push
xchg
cs
cltd
ret
mov
mov
xor
add
xor
xor
enter
rorb
adc
ret
je
dec
cli
aas
ret
fldt
xchg
cld
push
loope
mov
mov
push
aam
and
push
inc
pop
lret
jmp
xchg
andl
push
add
xchg
cmp
roll
repz
imul
inc
sub
dec
rorb
lds
ss
arpl
and
cs
cmpsb
inc
fisttpl
out
ja
xchg
pop
aaa
into
dec
fsub
bound
bound
pop
mov
loopne
ror
shrl
sahf
fstpt
lds
mov
mov
inc
mov
push
xchg
inc
in
cmp
movsl
lds
cmpsb
mov
cltd
ret
lret
lret
mov
js
mov
jno
inc
pop
dec
mov
andl
lea
pop
shl
sub
scas
je
add
fidivrs
cmp
inc
sahf
jne
iret
push
dec
and
mull
loop
or
jle
add
sbb
mov
sub
fs
mov
es
fstpt
jecxz
xor
jbe
shll
enter
and
popa
clc
push
inc
sbb
push
mov
mov
mov
mov
out
cmpl
cmp
mov
sub
mov
arpl
mov
or
popa
mov
rcrl
insl
imul
fs
add
cmp
insb
xor
jl
fs
xchg
cmp
sbb
mov
lret
cs
test
bound
pop
inc
arpl
mov
sbb
lcall
int3
mov
js
dec
aas
frstor
cmpb
dec
and
xchg
cmpl
stc
dec
loop
fbstp
sub
jne
pop
fsts
cwtl
test
or
push
incl
testl
jge
mov
sbb
dec
inc
les
sahf
fistpll
in
shrb
clc
jle
mov
jg
adc
jne
jg
cmp
lods
lahf
pop
add
push
add
xor
mov
jo
or
inc
mov
jle
ret
xlat
dec
sbb
mov
sub
mov
cmpsb
xor
adc
arpl
in
push
ss
sbbl
pop
bound
das
cld
minps
sub
inc
in
into
pop
not
pop
cli
push
loopne
repz
adcl
fs
push
jo
gs
fimull
clc
repz
test
add
aas
fldt
fdivrp
jbe
rolb
shlb
or
mov
into
push
and
xchg
dec
ret
cmp
push
andb
jecxz
sub
jecxz
jge
ret
hlt
add
mov
dec
and
movsb
popf
and
aaa
mov
mov
pop
or
dec
loop
jo
stos
push
ljmp
mov
dec
mov
push
imul
rcll
loopne
push
adc
jbe
insl
test
push
mov
pop
mov
sbb
paddusb
mov
daa
into
pop
pop
push
pop
jo
out
fs
pop
lret
loopne
les
push
push
xchg
sub
xchg
xor
lahf
pusha
and
adc
add
paddsw
jo
or
and
jp
jecxz
std
push
mov
pop
stos
xchg
sub
idivb
adc
or
xchg
dec
rcrl
bound
js
jg
jo
and
ss
sar
sbb
ret
or
les
rcll
pop
aaa
hlt
inc
jecxz
cmp
inc
sbb
call
mov
pushf
iret
lea
add
cmpsb
sub
popa
sbb
hlt
movsl
jns
lods
xchg
adc
outsl
jg
mov
loop
mov
jb
dec
mov
push
out
xchg
jg
add
add
jge
mov
ljmp
dec
pop
jmp
clc
inc
dec
pop
ds
loop
sbb
cmp
imul
adc
pop
mov
mov
ret
pop
mov
pop
push
and
xor
mov
adc
inc
leave
ret
enter
out
xchg
push
jmp
pusha
cmp
xchg
push
subb
aaa
mov
ret
fchs
aaa
cld
lcall
mov
frstor
or
cmpl
mov
xchg
outsl
mov
mov
notb
out
std
cltd
ss
adc
xor
or
cmp
sub
push
push
push
pop
fildll
mov
adc
and
cmp
shl
jl
in
lods
dec
insb
rorl
out
dec
icebp
aas
rcr
arpl
mov
or
sbbb
cmp
imul
xor
ret
fnstsw
dec
adc
les
cmp
or
out
mov
daa
loopne
mov
imul
xchg
lcall
pop
jno
or
adc
stos
in
sub
cld
into
push
dec
aas
push
add
mov
repz
push
jno
mov
sti
imulb
inc
add
pop
or
pop
enter
pusha
testl
imul
mov
mov
xchg
out
stos
cmp
lcall
xor
mov
pop
scas
sbb
sub
push
cmp
mov
jmp
inc
sbb
or
repz
and
xchg
jecxz
xchg
push
les
cmp
clc
cmpsb
add
pop
out
sbb
out
mov
aaa
cmp
inc
int3
and
rcll
rorb
or
or
popa
jecxz
xchg
mov
icebp
loope
insb
lea
mov
je
mov
push
xor
inc
repnz
push
mov
cmp
pop
mov
cli
pop
fxam
loop
in
cmpsl
es
lea
adc
jo
push
adc
xor
call
hlt
orb
adc
dec
sub
daa
negl
push
xor
add
xchg
cli
and
fisttpl
rcrb
push
ret
pop
nop
adc
jns
out
add
pop
jl
add
es
dec
pushf
arpl
pop
inc
adc
mov
dec
mov
dec
cmp
pop
or
dec
in
cli
fwait
pop
jb
xor
fsub
add
pop
jae
adcl
subl
scas
pop
and
inc
push
sub
subps
add
xor
inc
in
pop
mov
call
nop
add
lahf
aaa
fnsave
mov
shr
leave
in
xor
pop
loop
adc
cmp
je
fs
sbb
loope
sbb
movsb
pusha
loopne
xchg
jno
andl
dec
push
mov
shll
push
insb
ds
shll
sti
in
in
xchg
adc
add
mov
push
push
xchg
repz
push
pop
adc
mov
daa
cld
inc
sbb
loop
dec
icebp
mov
scas
mov
ss
push
aas
pop
or
pop
push
or
andb
xchg
sti
paddd
adc
mov
dec
in
repz
pushf
das
lds
cmp
popf
or
sub
pop
add
xchg
mov
mov
je
jnp
in
push
fcmovnb
push
xor
mov
je
or
mov
cmp
das
stc
out
dec
adc
xor
add
push
pusha
xchg
sbb
arpl
mov
pop
fs
fstpt
bound
cmp
stos
inc
rclb
pop
movsl
sbbb
mov
xor
push
pop
cld
xchg
std
ljmp
mov
mov
loop
sbb
dec
cmpsl
push
add
mov
rclb
aad
push
jg
mov
into
loop
sbb
lret
int3
or
mov
or
mov
montmul
cmpsb
xchg
cwtl
push
call
aad
outsb
sbb
sub
es
and
add
inc
and
test
idivl
lahf
jb
popf
adc
and
cltd
aad
loope
ljmp
lods
jp
sub
push
stc
gs
xlat
push
xchg
fisubs
sbb
popa
mov
fwait
int3
inc
cmpsl
cmc
xor
pop
push
push
fstl
sub
adc
or
pop
rcr
mov
push
shlb
outsb
jle
dec
pusha
ljmp
mov
mov
mov
mov
test
insb
or
xchg
sub
loop
pop
push
dec
cwtl
lods
lahf
xchg
mov
push
fstpl
mov
dec
cmc
dec
not
cmpsb
les
push
hlt
jle
mov
roll
pop
dec
stos
sbbl
mov
dec
inc
xchg
aaa
push
les
dec
mov
mov
add
repz
std
dec
test
mov
or
mov
idivb
movq
outsb
mov
in
daa
fisubl
arpl
or
or
cmpsl
mov
out
push
andl
cmp
fisubrl
cmp
dec
inc
dec
fidivs
repnz
les
or
into
leave
stos
pop
mov
sbbl
xor
jg
or
lock
sub
xchg
lock
sahf
and
and
xchg
or
mov
dec
add
xchg
or
cmpl
pop
ret
mov
stc
das
pushf
mov
mov
stos
icebp
rcrb
xchg
push
out
lcall
mov
repnz
inc
pop
stc
shrb
js
jecxz
push
lock
dec
decb
jnp
and
xchg
xchg
push
cmp
ss
mov
out
sbb
sub
mov
lret
cmp
orb
jecxz
inc
pusha
cmpb
jp
mov
jae
xor
insb
xchg
inc
les
or
fisubl
rcrb
lods
ja
das
sub
insl
fs
popa
insb
push
pop
xor
jno
xor
mov
addr16
fimull
fwait
or
test
cwtl
lcall
adcl
int3
mov
out
mov
lret
arpl
negl
jo
sbb
jne
cmpb
fdivrs
or
test
outsl
push
fnsave
mov
mov
ret
and
js,pn
stos
sbb
lret
sub
pop
mov
jmp
xor
repz
inc
xchg
and
jo
es
or
push
pushf
lods
mov
mov
test
dec
push
shll
mov
div
push
sahf
adc
repz
and
pushl
into
inc
xchg
loope,pn
pusha
mov
sub
pop
mov
in
jecxz
push
sarb
cmp
xchg
ret
sti
das
mov
loopne
inc
cwtl
sub
pop
inc
fidivrl
fldpi
mov
ss
mov
aam
sbb
data16
out
xchg
aad
mov
pop
hlt
cmp
jnp
adcl
mov
inc
sahf
and
scas
jno
enter
ja
ljmp
daa
inc
fstps
leave
sbb
or
mov
push
xlat
int
push
jae
bound
pop
mov
adcl
dec
and
pusha
mull
adc
ret
pop
mov
xchg
inc
sbb
lret
jbe
jmp
bound
sbb
gs
jno
leave
je
push
clc
jae
jecxz
jle
xor
loope
push
adc
mov
xchg
icebp
push
insl
mov
dec
lret
movsl
pop
inc
xchg
insl
sti
cmp
cmp
filds
or
addl
xchg
into
enter
fcmovbe
jle
ret
jo
stc
xchg
mov
dec
cli
inc
xor
ja
enter
push
stc
pop
xlat
xor
push
insl
and
ret
icebp
shlb
scas
data16
shlb
int
ret
mov
or
mov
fwait
push
xor
xor
inc
fidivrl
lock
cmp
loop
cmp
rclb
inc
cmp
jl
sub
sbb
popa
pop
xchg
cwtl
xchg
xlat
lret
xor
xor
enter
insl
fimuls
jmp
push
fnsave
dec
cmpb
xchg
cmc
push
fadds
jb
add
or
std
testb
enter
dec
sub
push
stc
adc
sarl
testb
add
scas
push
jns
add
ss
sbb
lea
fdivs
pusha
js
cmc
xchg
sub
push
sbb
mov
imul
shl
js
sub
sbb
out
fidivl
popl
xor
scas
fldcw
popa
aaa
iret
ret
pop
cs
xchg
xlat
push
imull
test
rcr
jno
jae
sbb
or
inc
push
lcall
sbb
sahf
jp
mov
aas
fwait
push
pop
pushf
cli
orb
jns
adc
dec
xor
jmp
subl
or
jle
jae
adc
mov
ja
hlt
rcrb
cmp
cs
js,pn
push
inc
mov
rclb
inc
fildl
sbb
push
push
pop
insl
mov
scas
sbb
insl
cld
divb
aam
andl
dec
push
jle
loopne
and
mov
js
fdivrs
sbb
mov
out
icebp
pop
pop
scas
push
nop
xchg
mov
daa
mov
mov
mov
xchg
outsb
jl
les
xchg
arpl
shrb
leave
test
dec
js
pop
sbb
test
sub
inc
or
in
pop
push
adc
lods
fimuls
inc
lods
iret
sbb
pop
dec
frstor
jns
mov
int
inc
in
push
ja
and
or
sub
adc
lcall
lcall
cmp
and
or
test
imul
push
ret
mov
nop
adc
pop
lret
lods
sub
jae
xor
loop
out
ss
sub
dec
loop
dec
and
daa
xchg
push
sbb
jmp
jns
daa
inc
in
ret
ja
lret
gs
pop
xor
add
dec
shlb
fwait
xor
jle
pusha
lcall
fnstenv
cmpsb
lock
mov
fildl
popf
fbstp
push
cmc
push
gs
push
fsubs
repz
xor
and
mov
and
lret
fucomi
push
lea
xchg
inc
popa
mov
push
inc
add
lea
jle
jmp
adc
jp
leave
and
mov
xor
ret
cltd
and
push
inc
push
or
ss
and
test
push
movsb
pop
in
mov
adc
test
push
mov
nop
test
mov
mov
jne
aad
mov
loopne
ret
add
scas
inc
and
jo
repnz
sbb
jecxz
inc
clc
aas
xchg
xor
stos
jmp
mov
mov
jecxz
daa
stc
rol
add
repz
and
fst
xor
test
inc
stos
test
xchg
aaa
or
arpl
mov
add
jae
sub
rcl
ficomps
push
rcll
loope
shll
outsb
inc
mov
adc
xchg
mov
mov
adc
xchg
sbbb
aaa
je
or
pop
mov
in
jae
sub
gs
mov
xor
cmp
sub
mov
mov
frstor
mov
xchg
jl
or
dec
into
lea
icebp
cmp
movsl
sbbl
dec
sub
jbe
cmp
push
jbe
add
sbb
stos
scas
stc
je
inc
push
push
xor
out
aam
movsl
cmp
adc
cwtl
lods
jb
jl
je
shrl
stos
mov
xor
out
mov
sbb
scas
into
mov
adc
inc
repz
enter
dec
cmp
pop
lods
inc
xchg
in
out
lret
inc
fs
and
scas
add
jmp
inc
insb
inc
imul
mov
scas
sbb
lds
or
mov
push
adc
nop
cmpb
xchg
cs
push
xchg
scas
jp
push
popf
js
xchg
ret
decb
pop
fwait
push
scas
shr
fcmovu
fsubr
push
push
mov
xchg
pop
add
jae
sbb
dec
ss
mov
dec
pop
sbb
pop
icebp
fdivl
sti
outsb
je
mov
in
aam
jb
mov
mov
lcall
pop
sahf
mov
hlt
dec
mov
int
jge
inc
enter
loope
mov
sbb
shll
iret
mov
push
imul
xchg
adc
scas
mov
mov
add
inc
jns
notb
lret
push
popf
cmpb
cmp
fcoms
push
add
add
sbb
js
loop
mov
inc
xor
push
or
test
xchg
les
aam
mov
sub
out
pop
and
ret
sub
out
xchg
xlat
jmp
icebp
jp
cmpsb
lock
call
into
pop
out
addr16
and
lods
xchg
mov
mov
mov
jp
inc
push
pusha
inc
pushf
jp
push
or
push
mov
and
push
cmp
repz
outsb
sub
push
pushf
dec
dec
mov
sbb
sbb
or
clc
iret
daa
in
dec
lahf
inc
call
jecxz
cmp
push
mov
inc
dec
inc
fdivrs
ljmp
inc
shlb
fistl
cmp
xor
dec
in
sti
mov
lods
out
mov
into
in
movb
add
int3
int3
outsl
sbb
xor
mov
sub
cli
jmp
dec
jg
pop
lahf
pop
sbb
mov
nop
xrelease
xchg
pop
lret
pop
cmp
popa
jmp
add
mov
cwtl
scas
movsl
dec
pop
sahf
mov
xchg
outsb
push
push
aas
mov
xor
shrb
ja
adc
xchg
cltd
std
pop
scas
movsl
ret
andl
pop
inc
jb
mov
out
out
xor
sbb
mov
nop
fs
adc
jg
or
call
xchg
andl
nop
shlb
pop
setne
popa
cmp
xor
movsb
pushf
dec
jecxz
mov
insl
mov
cmpsl
sti
jne
sub
pop
xor
arpl
cld
gs
push
iret
int3
lods
std
lock
sbb
fistps
sbb
daa
outsl
push
cmc
jp
in
pop
xchg
addr16
leave
int
mov
rclb
mov
movsb
movb
test
or
xor
jmp
nop
xor
out
out
dec
nop
outsb
adc
sbb
call
es
xchg
mov
mov
cld
or
jg
or
xchg
and
or
cmp
cmp
repz
and
push
leave
dec
mov
lods
sarl
mov
jmp
mov
jl
sbb
mov
shll
out
mov
es
push
pop
sub
and
cmp
repz
pop
and
sub
mov
pop
mov
dec
push
lock
insl
dec
cmp
mov
xchg
xchg
imul
push
mov
jno
jecxz
add
nop
daa
mov
mov
popf
or
jns
mov
lock
push
ds
push
test
mov
jecxz
mov
outsl
ret
movsb
test
jae
sbb
jne
adc
sbbb
mov
pop
xor
mov
mov
mov
divb
mov
xor
mov
sbb
popa
cmp
jno
pushf
sti
rorb
cmp
lret
cmpxchg8b
mov
sarl
cmp
test
jle
inc
inc
and
insl
and
gs
xor
inc
jnp
daa
or
jge
movsl
sbb
data16
push
xor
mov
inc
adc
xor
dec
lock
cmc
ja
out
mov
cmpsl
repnz
fnstsw
push
fcomps
daa
test
jbe
adc
mov
rcll
sbb
jae
loop
xchg
jnp
fsubrs
enter
add
icebp
cmp
or
mov
call
loopne
jmp
dec
mov
shl
pusha
dec
jnp
sbb
ljmp
or
popf
popa
jmp
cmp
pop
fistpll
jnp
push
cmpsl
or
test
xor
sbb
in
sub
inc
arpl
mov
loope
les
roll
push
pop
cmp
lods
sbb
test
imul
hlt
cltd
jb
xchg
addl
test
sbb
pop
mov
dec
xchg
mov
mov
mov
stos
mov
sbb
je
shlb
int
mov
pusha
pusha
and
cmp
lret
mov
outsb
movsl
addr16
pop
sar
adc
mov
pop
mov
adc
pop
lahf
mov
adc
add
mov
movsl
mov
decl
add
icebp
je
mov
pop
xor
inc
and
lret
pop
push
popf
mov
sbb
jl
insl
add
imul
adc
jge
in
dec
dec
mov
cwtl
add
cmp
mov
inc
andb
xchg
pop
int3
jecxz
push
mov
cmpsl
mov
test
mov
out
je
inc
scas
fprem1
mov
js
sbb
mov
ret
mov
idivb
daa
es
scas
mov
movsb
outsl
inc
movsb
adc
sbb
and
pusha
inc
mov
pop
xchg
push
cltd
xorl
stc
push
cmp
inc
popa
push
inc
ljmp
js
dec
stos
in
outsl
in
punpckldq
mov
jmp
pop
mov
sub
jnp
add
push
call
andl
xchg
jo
shlb
mov
leave
popa
cmp
rcrl
sub
jnp
out
pushf
dec
testl
xchg
sbb
fwait
les
inc
in
popa
daa
test
xchg
mov
arpl
cbtw
sahf
imul
aam
test
std
scas
das
sub
test
pop
cmpsb
dec
in
cmp
call
and
pop
push
lea
inc
mov
insl
jecxz
xchg
mov
hlt
mov
xchg
test
pop
lods
push
mov
adc
xor
bound
mov
mov
lcall
popa
clc
sub
cmp
mov
int3
sub
das
inc
pop
dec
psrad
mov
rcl
pop
jmp
scas
inc
sbb
jl
arpl
xchg
sbb
hlt
rol
push
mov
mov
sub
dec
imul
or
mov
or
out
jmp
adc
xor
ret
jb
pusha
fsubr
popa
int
test
outsb
stos
push
pop
loopne
push
or
cwtl
addr16
jge
jno
lcall
cli
push
shr
cmp
sahf
bound
mov
fs
xor
mov
jae
movb
dec
in
test
gs
cwtl
xchg
hlt
push
aaa
pop
mov
add
push
mov
lea
test
mov
add
mov
dec
imul
arpl
sahf
bound
mov
mov
fwait
mov
int
out
sahf
jne
das
cld
jge
mov
and
sti
jo
push
xchg
push
lods
stos
dec
loop
test
jae
mov
or
inc
stc
out
inc
adc
inc
dec
push
or
mov
mov
mull
pop
scas
push
or
into
xchg
jp
mov
pop
mulb
pop
es
clc
enter
hlt
test
add
xchg
call
dec
or
mov
outsl
insl
cld
nop
aam
rcr
push
inc
sbb
xchg
dec
and
pop
out
xorl
and
cs
andb
push
jecxz
dec
testb
adc
mov
aam
andl
mov
fimull
testb
imul
fldl
push
jle
add
cmp
xor
lds
xchg
ljmp
xor
outsl
cmp
adc
es
int
incb
jb
or
ret
fbld
repnz
scas
jb
jp
test
push
test
xor
jmp
pop
lea
test
sbb
loope
and
into
outsl
push
push
cmp
add
xorl
dec
cmp
lret
rclb
mov
mov
pusha
pop
inc
fisttpl
outsb
xlat
stos
push
pusha
test
mov
in
push
fidivs
push
and
and
or
sbb
add
sbb
mov
xchg
push
adc
mov
xchg
sbb
mov
ret
push
cwtl
sub
pop
loopne
pop
out
mov
andl
outsl
xchg
jb
mov
in
popa
xor
daa
inc
dec
fidivrl
fsubrs
fnstenv
lea
xor
cmp
stos
pop
fdivrs
cmp
sub
pushf
scas
inc
fdivs
or
pushf
dec
shr
nop
daa
sbb
outsb
std
jg
scas
hlt
mov
stc
adcb
jmp
sahf
mov
adc
int3
lret
test
cmc
cmp
aas
ret
mov
cltd
jge
cli
insb
fcomps
add
and
cmp
out
push
cmp
mov
cmp
and
lahf
sbb
dec
in
pop
fsubs
inc
ss
test
mov
test
cmp
setp
imul
fstps
mov
mov
mov
and
jnp
jg
mov
push
mov
or
inc
test
std
sahf
xchg
xchg
and
sub
cmp
pop
cmpl
mov
lcall
fidivl
loope
pop
push
fdivrl
add
je
xor
gs
sahf
es
pop
sti
pop
mov
xchg
pop
jns
dec
jecxz
mov
mov
mov
inc
xchg
jne
mov
call
mov
mov
fucomp
std
mov
pusha
xchg
sub
ja
mov
push
rcrl
pushf
imulb
sbb
cmp
dec
sub
dec
scas
cmp
aaa
pusha
addr16
enter
stos
pop
mov
mov
arpl
inc
repnz
inc
ret
addl
shll
gs
int
pusha
testl
sti
aaa
sub
mov
mulb
and
test
sbb
mov
inc
popf
mov
xchg
sbb
es
adc
fs
mov
inc
cmp
pop
daa
xchg
mov
mov
test
lock
sub
xchg
test
mov
adc
jl
xor
aas
ret
add
xor
sub
enter
mov
inc
pop
sbb
clc
jae
mov
dec
sub
cmp
xor
scas
xchg
xor
jmp
xor
push
mov
sahf
xor
sbb
add
mov
cltd
in
mov
pop
cmp
mov
aad
int3
push
fsubr
xchg
add
rolb
xchg
sbb
xchg
sbb
xor
or
das
cmc
fsubrl
lods
ficoml
xchg
mov
mov
jb
pop
push
adc
pop
jnp
stos
cmp
int3
ljmp
cmp
xchg
jo
pushf
movsb
inc
push
es
into
pop
int
aaa
xchg
test
pop
int3
pop
jbe
mov
and
fcoms
out
xchg
addr16
and
ret
pop
ljmp
cmp
in
aam
and
in
call
xor
scas
pop
fidivs
add
adc
mov
dec
pop
cmp
int
leave
orb
cs
jb
cmc
inc
out
pop
cmp
pop
insl
cld
cmp
sub
jb
inc
test
kmovb
popf
adc
movsl
sbb
fwait
xchg
pushf
cwtl
jne
xor
enter
aas
sahf
inc
in
mov
dec
and
fdivs
iret
imul
sub
pop
repnz
repnz
in
pop
flds
mov
xor
call
inc
adc
aas
gs
cmpsb
movsb
jecxz
push
enter
fwait
repnz
movsl
cmp
add
or
aaa
int3
loop
xor
cmp
or
je
lret
pop
cmpsb
repz
xor
pop
fdivr
jns
mov
cltd
test
lret
stos
inc
inc
pop
dec
cmpsb
cmp
pop
dec
cmc
repnz
push
into
or
lods
cmp
inc
fdivs
mov
mov
adc
adc
imul
xlat
cltd
xor
fistps
shrl
mov
pavgw
insl
clc
shrb
unpcklps
lret
mov
sub
sub
push
iret
xor
inc
fnop
jg
fs
popa
jbe
push
out
fists
mov
push
mov
movsl
mov
cmp
pop
mov
cmp
cmpsb
imul
sti
fwait
daa
inc
jno
loope
cwtl
mov
add
push
jecxz
out
stos
xlat
pop
lods
mov
xor
adc
out
pop
psubusb
inc
jg
push
mov
or
cmp
pushf
in
xchg
dec
xor
enter
int3
pop
jo
pop
in
fcomi
push
and
hlt
dec
test
movsb
jo
mov
dec
clc
cmp
enter
scas
pop
xor
test
sub
rcrl
add
sub
and
adc
clc
loop
mov
inc
add
in
push
dec
sbb
xor
and
mov
fnsave
xchg
xor
movsl
cmp
sbb
mov
adc
mov
andl
jns
movsb
out
test
dec
bswap
add
arpl
adc
lea
and
fisubrl
les
fisubs
mov
jo
mov
cmpb
pop
mov
sbb
es
mov
shl
xlat
roll
ds
xor
leave
pusha
and
out
cld
out
pop
andb
fbld
jg
inc
lods
pop
lds
mov
pop
in
jno
push
mov
fbstp
mov
mov
sbbb
pop
mov
ljmp
mov
cmp
adc
imul
scas
inc
xor
xor
nop
cmp
sub
dec
aas
fst
in
ret
sahf
stc
pusha
lea
sarb
jp
dec
sub
addb
cmp
les
xchg
xlat
xor
loop
shll
test
pop
push
dec
test
ds
test
cwtl
je
add
mov
call
dec
roll
pop
sbb
mov
xchg
and
or
ret
xchg
das
xor
cmp
cmp
adc
xor
add
call
bndstx
xor
push
mov
add
ror
fmuls
enter
sub
int
xor
js
push
push
pop
adc
negb
ss
adc
mov
jo
ja
mov
add
inc
fbld
jbe
ror
cmp
fistpll
dec
arpl
adc
inc
fcmovb
movsb
pushf
scas
fsubrl
lret
bound
aas
or
jbe
dec
mov
popf
sub
fdivp
mov
sbb
dec
popl
rorl
insb
shlb
mov
push
push
out
mov
mov
ljmp
notl
cmpsl
mov
and
iret
jmp
enter
out
xchg
sub
fistpll
mov
jnp
add
xor
aam
lcall
lret
jb
leave
pop
addr16
loope,pt
add
and
cmpb
xorb
in
xchg
repnz
pop
pop
cmpsb
out
add
mov
loopne
or
out
rol
jmp
jecxz
cmp
jno
add
divl
in
js
inc
icebp
mov
xchg
scas
mov
jge
ljmp
outsl
push
int3
xor
mov
out
test
xchg
sub
xor
or
fsubrl
gs
or
jg
mov
jne
scas
mov
mov
js
add
out
mov
fdivrs
mov
scas
test
adc
jmp
lahf
insl
sbb
adc
mov
push
inc
inc
pop
into
sbb
into
push
sbb
xor
pcmpgtb
mov
jb
in
subl
lods
pusha
btc
pop
or
jmp
dec
mov
jge
das
in
shll
scas
mov
sbb
cmp
fstps
xchg
sbb
mov
sub
cmpl
xchg
cmpsl
mov
xlat
out
sbb
repnz
and
ljmp
popf
jmp
cwtl
mov
rol
jle
iret
or
lds
sub
fidivl
fidivs
aam
clc
sahf
jmp
sbb
inc
sub
cmp
aaa
fdiv
push
mov
aam
out
xchg
mov
test
call
es
pusha
mov
mov
das
xchg
inc
test
and
dec
loop
mov
cmpsb
mov
xchg
adc
xor
push
nop
inc
mov
ret
mov
insl
mov
lret
mov
mov
xor
into
jmp
push
stos
mov
cwtl
ret
shll
mov
xor
mov
lock
stos
fs
rorl
push
cmp
inc
leave
mov
dec
or
add
sub
rcrb
cmp
or
sub
cmp
loopne
ss
loop
mov
push
cmp
cmpsb
fiaddl
nop
or
push
and
mov
dec
scas
test
cmc
stos
xchg
and
in
stos
push
aaa
dec
and
addl
fsubrl
lock
push
cmp
push
or
imulb
push
std
ss
jae
and
rcll
xchg
add
lcall
loope
not
push
xor
movsl
call
cmpsb
fstps
cmpl
mov
aad
mov
cmp
xor
bound
xchg
mov
and
mov
xchg
push
mov
sbb
xchg
iret
mov
xchg
aaa
dec
xor
add
in
push
iret
mov
mov
cmp
test
lods
loopne
inc
fisttps
out
mov
inc
push
xchg
sbb
dec
fbld
xchg
jae
rcrl
cmc
fildl
orb
sbb
fstl
add
and
add
insb
xor
pop
in
and
icebp
pusha
test
adc
jp
xlat
scas
jae
push
inc
dec
in
lcall
movsl
into
sbb
int
lret
jbe
insl
dec
push
lahf
jge
popf
mov
pop
movsl
testl
or
scas
sbb
mov
jle
aam
xchg
inc
std
cltd
ljmp
je
jne
sub
push
jns
adc
ret
add
pushf
sub
hlt
ljmp
jae
dec
mov
arpl
shll
inc
pop
cmc
inc
outsl
mov
adc
sub
or
out
stos
push
iret
call
je
pop
mov
xor
nop
xchg
sub
sbb
sbb
not
ret
pop
std
jae
pusha
ret
leave
stos
pop
cmp
mov
insb
dec
loop
or
outsl
lea
mov
out
jo
shl
mov
mov
mov
xchg
jne
pop
in
sub
inc
xor
push
fwait
call
fidivrl
xchg
and
out
pop
das
ds
sbb
mov
pop
pop
xor
shll
mov
push
xchg
cmp
sbb
jb
stc
xor
dec
fisttpl
out
push
outsl
ljmp
icebp
push
stos
inc
cltd
out
pushf
jmp
movsb
cmp
lds
mov
adc
sub
leave
jp
fcomps
xor
lock
xchg
add
mov
mov
daa
cltd
xor
repnz
and
mov
aaa
leave
pop
daa
fldl
cmpsb
std
mov
lods
jo
cmpsb
adc
pop
dec
fistl
testl
js
mov
pushf
adc
xchg
aas
fnstenv
or
xor
mov
adc
ret
mov
xchg
cmpsl
in
loope
adc
testb
dec
shr
pop
shll
add
es
fs
mov
test
jecxz
mov
cmc
into
in
call
outsb
mulb
sbb
cltd
sub
push
push
enter
cmc
mov
jo
jle
cld
lcall
outsl
and
mov
int3
dec
mov
int
in
lret
movsb
xchg
stos
nop
ljmp
inc
xor
insb
inc
rcrl
cli
push
pusha
mov
adc
adc
cmp
adc
scas
std
xor
and
add
lret
pop
dec
inc
fs
iret
sub
dec
sub
push
loopne
jnp
sti
lret
push
ss
sub
and
ds
fwait
test
xchg
push
test
adc
xchg
fsubs
lods
mov
fidivs
in
jbe
insb
test
mov
cmp
push
inc
or
jb
pop
xor
push
ljmp
pop
repnz
cmp
pop
jns
xlat
xor
in
ror
add
aam
ret
push
pushf
jl
jle
cmp
xchg
dec
int
xlat
outsl
and
cs
sbb
ret
dec
aaa
xchg
cld
rcr
jb
jbe
std
sub
push
test
adc
outsb
sbb
js
mov
push
insl
in
icebp
jmp
mov
pop
or
mov
leave
je
jmp
mov
pop
shrb
fsubrs
lret
sub
fwait
jae
or
ljmp
icebp
in
arpl
jmp
mov
xor
or
sub
movsl
sub
in
sbb
lahf
rep
xor
fwait
or
dec
daa
mov
lods
pushf
ds
cld
aas
adc
or
fdivl
sti
fwait
loop
sub
sbb
xor
sbb
lcall
stos
jns
mov
mov
imul
or
add
push
ss
xchg
out
push
sub
pop
cwtl
pop
notb
adcb
dec
in
pop
xchg
adc
adc
subb
mov
dec
xor
mov
stos
int3
pop
pop
inc
lret
xor
js
pop
jno
cltd
push
test
xor
lahf
mov
fdivs
pop
pusha
jl
stos
jge
aad
cmp
push
rcl
cmc
loopne
mov
lret
ds
rcrl
pop
push
lcall
jnp
outsl
add
push
xchg
inc
imul
push
testl
dec
mov
pop
pop
imul
dec
mov
jb
scas
sub
cmc
les
mov
mov
and
add
or
sub
sahf
jmp
in
xchg
ja
fmull
sub
xlat
scas
adc
call
fdivrl
adc
shll
xor
pop
cmpsl
je
adc
mov
push
sub
xchg
daa
pop
out
mov
fwait
cli
or
mov
mov
or
and
fnstsw
jno
data16
sbb
lea
call
imul
xchg
inc
lret
dec
cmpsb
cmp
pop
sbb
sub
stc
or
dec
pushl
insb
jg
adc
shl
mov
push
jmp
movsb
fldt
shrl
add
lock
xchg
into
aam
mov
push
in
out
adc
lods
into
pop
or
mov
pop
lds
out
cmp
loope
lahf
fwait
pop
pop
lahf
pop
mov
and
sub
ja
aaa
or
fdivrs
push
dec
insb
push
mov
mov
push
adc
in
mov
imul
gs
lea
loop
arpl
xchg
or
adc
ret
sbbl
int
test
push
rcrb
mov
pop
mov
xchg
mov
xchg
xor
cmpsb
xchg
add
jge
pop
inc
adc
mov
cmpsb
out
mov
sub
sti
sub
out
and
xor
ds
inc
mov
dec
enter
sub
pushf
cmp
push
sbb
mov
inc
inc
pop
out
es
sahf
popf
inc
jbe
js
fwait
xor
aam
cmp
movl
repz
movsb
pop
xchg
movsb
in
shlb
push
lods
mov
or
mov
jmp
or
nop
push
cmp
leave
stos
mov
aad
or
jmp
scas
jmp
mov
add
or
lock
push
pop
mov
cmp
jmp
fucomip
xchg
inc
pop
rcl
fmull
sub
push
popf
ret
mov
clc
fwait
jno
xchg
jmp
enter
mov
das
lods
sbb
iret
imul
lret
bound
jge
mov
imul
add
mov
push
inc
and
mov
mov
mov
sub
xlat
cmp
outsl
xchg
push
mov
shrl
pop
lods
ret
pop
test
pop
sbb
loope
int
call
xchg
mov
in
adc
movsb
sbb
sub
and
sub
xor
mov
scas
in
inc
pop
adc
mov
push
fs
scas
loop
stos
mov
ljmp
jl
das
jne
cmp
jl
int
pop
shl
mov
lods
clc
sbb
sbb
test
or
fnstcw
fucomp
xchg
push
fldcw
dec
cld
shll
aaa
fmul
outsb
pop
adc
addr16
sub
mull
add
mov
lret
adc
pop
jne
xor
shrl
test
or
push
push
clc
cmp
xchg
aas
lock
rcrl
pop
sarb
dec
cwtl
and
jl
aas
xchg
jmp
pop
jb
mov
mov
and
cmp
mov
sti
insb
imul
pop
push
cmc
lret
jae
ficoml
mov
flds
adc
cmpsl
mov
push
adc
aas
insl
mov
loope
movsl
mov
push
enter
xrelease
inc
mov
pop
ljmp
push
shlb
imul
jo
lea
stos
jbe
push
push
repz
aaa
fdivs
cs
sbb
mov
jecxz
xor
sub
paddsw
pop
cmp
out
xchg
push
movsb
push
xchg
inc
cmp
mov
add
add
push
sbb
lods
adc
pusha
aad
mov
pop
ljmp
aad
mov
mov
cmpsl
pop
cmpsl
ret
pop
xchg
jp
cmp
dec
xor
inc
addr16
xchg
loop
lea
mov
push
xor
mov
and
loopne
push
out
test
test
lea
idivl
lock
cmp
leave
dec
pop
push
inc
inc
out
dec
and
ljmp
out
sbbl
in
jp
shll
push
adc
adc
dec
fs
insb
mov
jns
adc
insl
mov
xchg
and
and
popa
xchg
xor
push
xchg
aad
int
rclb
leave
sub
mov
out
sbb
push
and
idiv
mov
lcall
fcmovb
stos
sub
test
inc
xchg
jge
push
or
sbb
les
out
adc
and
mov
imul
mov
sbb
sub
std
xorl
sbb
or
jp
push
and
cld
mov
push
push
pop
cwtl
jmp
inc
xor
push
add
cmp
sub
mov
leave
cmp
test
imul
dec
fisubl
out
pop
sarb
adc
or
scas
jb
mov
paddusw
cmp
imul
sbb
mov
sub
mov
mov
cmp
fs
xor
sbb
xchg
inc
stos
adcb
test
insl
stos
fwait
cmp
ret
sub
sub
sarl
inc
cltd
mov
dec
in
mov
andb
pop
pop
fsubrl
mov
out
sti
cltd
sub
sbb
jecxz
pextrw
inc
out
add
xchg
int3
xor
cwtl
sub
loopne
mov
mov
mov
pop
data16
xlat
pop
adc
xchg
gs
cld
out
sbb
push
fdivs
pop
xchg
int
mov
mov
push
xorb
mov
inc
mov
jbe
out
dec
sbb
ja
daa
jp
adc
daa
lcall
adc
jle
sub
dec
push
fildl
and
fxtract
xchg
jmp
divb
and
xchg
dec
fldenv
aaa
cs
fcmove
inc
xor
cmpsb
jmp
jne
push
push
xchg
pop
cmp
sub
jge
mov
sbbl
add
pop
dec
mov
negb
jg
out
rorl
push
adc
add
movb
daa
push
mov
cmpsl
outsl
add
lcall
shld
or
imul
push
in
out
sti
fcmovu
mov
pop
scas
xchg
mov
sbb
aam
push
pop
in
jge
insl
xor
shlb
inc
rolb
jns
mov
movsb
push
pop
mov
movb
into
adcl
xor
dec
movsb
jns
or
cltd
xchg
aaa
mov
mov
out
bound
scas
fnstenv
pop
sbbb
cmp
mov
test
mov
dec
mov
ror
fadds
jns
or
push
cmc
cmc
repz
cs
jge
shll
push
adc
fsubr
outsb
out
mov
and
cli
jge
gs
or
popa
cld
pop
movsl
cmp
test
popf
cli
and
push
add
pop
fisubrs
lods
xor
mov
mov
push
loope
or
fisttpll
and
push
mov
pop
das
cmpsb
jle
cmpsl
sarl
sub
jg
cmp
outsl
sub
test
test
add
dec
push
nop
loop
mov
inc
imulb
mov
repnz
cmp
shrb
sbbl
daa
push
mov
add
sbb
inc
sbb
fcomi
pusha
adc
mov
mov
movsl
xchg
jbe
add
dec
or
dec
arpl
mov
adc
push
das
insl
cld
mov
inc
xchg
cs
fistpl
pop
sub
mov
enter
fidivl
in
cmp
push
mov
andl
dec
lea
adcl
xchg
and
dec
pop
add
cmp
dec
lahf
pop
jp
shrb
pusha
jnp
or
std
mov
mov
sub
js
sub
sbb
xor
loop
mov
repz
int
jecxz
cmp
push
jne
inc
mov
scas
mov
ss
push
jbe
repnz
sub
cmp
xchg
scas
adc
popa
rcrb
sbb
jl
sbb
lock
cmp
stos
xor
push
xchg
sbb
shll
pushf
sti
sub
pop
loope,pt
mov
dec
jecxz
mov
out
aam
es
cli
mov
clc
or
cltd
xlat
jnp
inc
fldl
push
sbb
int3
scas
lret
jnp
std
xor
sahf
jmp
or
or
fistps
popa
xchg
xor
or
jmp
ret
shrb
ret
pop
loope
inc
xchg
mov
mov
xor
push
rol
pop
inc
push
mov
mov
stos
fcoml
adc
and
test
dec
pop
cwtl
out
push
imul
adc
mov
es
iret
jno
cmp
add
test
jmp
sbb
faddp
das
push
mov
ret
push
das
stos
push
popa
pushf
sbb
push
sbbb
movsb
lea
pop
loopne
mov
es
inc
dec
repz
imul
lds
insb
mov
mov
nop
sub
sbbl
mov
addr16
jp
mov
rorl
pop
mov
fildl
fidivs
dec
rolb
or
lcall
fidivrs
out
imul
orl
out
mov
pushf
mov
insb
add
jnp
cmpsl
fcomp
jle
mov
outsl
jnp
cmp
push
mov
out
xor
or
cwtl
xor
cs
lret
mov
shr
adc
je
xchg
dec
cmpsb
movsb
jp
xor
sub
cmpsl
fcmovnu
pop
imul
mov
mov
add
aad
into
mov
cmpsl
xchg
fs
test
lret
arpl
les
add
mov
loop
enter
pop
stos
inc
fldenv
arpl
jge
adc
xchg
cltd
test
movsb
cmp
je
fwait
dec
aaa
mov
dec
sub
sub
xchg
add
adc
jmp
add
or
sbb
sub
pop
ds
sub
mov
sub
sahf
aad
sbb
push
sbb
xchg
jo
xchg
scas
jns
pop
cmp
jge
push
scas
sti
outsl
jns
aam
fcoms
sbb
inc
pop
xor
cmpsl
cmp
xchg
subb
xor
pop
pop
push
shrl
ret
repz
add
test
push
fldt
addl
xor
adc
insl
fisttps
mov
sbb
push
dec
jns
rcrl
decl
sbb
shr
loop
test
mov
sub
int
lds
in
dec
ja
or
lret
or
cs
insl
xchg
sub
lock
or
and
mov
inc
jmp
dec
gs
aas
jmp
add
dec
pop
sub
add
cmp
addr16
pop
add
stc
mov
dec
jo
mov
ret
pop
cmpl
push
mov
test
mov
cmpsb
cmp
jle
cmp
mov
leave
mov
aaa
pop
xor
mov
sarb
mov
fdivl
xchg
dec
das
sbb
add
ss
outsl
fnsave
adc
cs
xchg
jmp
test
imul
fsubr
push
mov
adc
pop
lods
mov
data16
mov
icebp
imul
mov
notl
and
aam
adcl
cmc
popa
fcoms
xor
push
daa
and
mov
add
popa
lods
inc
iret
adcl
ss
popa
adc
mov
mov
xchg
outsl
mov
divl
pop
pop
dec
in
test
xor
xor
mov
cmp
les
in
rcl
push
out
stos
divl
test
fnstenv
scas
aas
iret
or
mov
aas
bound
xchg
push
pusha
das
outsb
cmp
testl
data16
in
fs
inc
xchg
mov
hlt
push
jb
loopne
test
ds
sub
flds
cmp
or
call
jnp
add
in
shll
int
xchg
bnd
adc
arpl
rclb
adc
daa
shrb
rclb
lcall
dec
add
test
pop
ret
popa
scas
leave
push
addl
aas
inc
sahf
and
mov
cmp
mov
mov
into
jbe
ret
sub
jns
fldcw
inc
xor
jmp
and
xor
xchg
add
sbb
inc
int
in
into
aad
mov
inc
stos
addr16
add
loop
rorb
mov
insl
add
xchg
loop
push
cmp
xchg
mov
mov
dec
or
dec
stos
fs
add
push
icebp
movsl
aaa
push
in
inc
ja
aaa
xchg
push
mov
cmp
ret
or
movsl
insb
fs
sub
lea
movsb
xchg
dec
loope
outsb
sbb
insb
jns
or
pop
xorb
adc
mov
cs
inc
je
enter
xor
dec
cmp
cmp
cmp
xchg
mov
sbb
mov
or
jge
inc
bound
sub
test
lret
cli
jle
cmp
add
or
mov
shll
xor
cmpsb
js
fcmovne
cmp
cld
cld
nop
pop
xor
int3
pop
rcll
xor
ret
push
push
in
andl
sbb
or
push
lahf
aaa
pop
adc
pop
bound
shr
ret
mov
lds
jecxz
sbb
mov
iret
gs
sub
daa
test
pop
repz
xor
jnp
pop
jb
bound
pop
push
dec
lahf
mov
adc
lods
xchg
cmpb
testl
xlat
test
jo
pop
jno
mov
mov
int3
pop
lods
movsb
pop
pop
pop
cmp
test
inc
jp
cmpsl
js,pt
enter
cmp
pop
shlb
sub
incb
sbb
jbe
fwait
sti
mov
jne
ret
mov
adc
jbe
out
out
movl
mov
sub
lcall
lcall
in
in
xchg
in
imul
and
in
test
adc
pop
loop
lock
enter
rcll
fs
cltd
hlt
out
add
fs
insb
push
pusha
les
mov
mov
call
cwtl
ja
mov
mov
fbld
xchg
insb
sbb
push
lea
pop
push
jp
jle
jge
dec
lahf
leave
pusha
or
sub
dec
push
jns
sub
aas
cmp
stc
and
push
shll
inc
imul
cmp
pop
dec
cmpsl
mov
ds
fiaddl
and
pop
cmp
out
in
mov
fimuls
push
and
mov
mov
sub
mov
mov
adc
sbbb
arpl
icebp
loope
iret
xchg
out
or
jns
stos
and
pop
cmp
lret
cmpsb
dec
rclb
push
stc
push
xor
imul
mov
stos
shrb
pop
test
mov
jae
mov
lods
leave
sbb
jae
in
mov
inc
test
hlt
jl
lret
push
add
or
xchg
pop
xor
mov
mov
sub
mov
push
or
or
inc
push
lea
jno
pop
fsubr
insb
lret
lods
outsl
lock
imul
aam
mov
out
jp
lds
xor
pop
or
fwait
jbe
in
fildll
xchg
push
fnstenv
stos
xchg
cmp
lock
dec
movsl
xchg
pop
cmp
or
mov
inc
addr16
cs
daa
xor
test
test
jmp
adcl
bound
aaa
pop
or
jnp
fs
pusha
sbb
dec
inc
imul
pop
aam
xor
fsubr
and
add
shll
jg
lds
fildll
hlt
jmp
out
aaa
std
cwtl
test
setnp
sub
popa
mov
xchg
ja
inc
aad
clc
rcll
lret
mov
cmp
lea
adc
lea
adc
fs
or
jbe
cmpsb
lahf
or
jle
outsb
sub
inc
push
mov
xlat
bound
xchg
pusha
jecxz
jmp
icebp
int
pusha
cmpsb
jns
lods
jo
push
in
or
test
dec
sbb
xchg
cmp
cs
cmpsl
mov
call
push
dec
pop
push
adc
and
enter
daa
bound
cli
leave
nop
adc
popa
in
dec
lahf
das
loopne
jb
testb
mov
aad
ds
fsubrs
dec
inc
or
out
sbb
push
hlt
fs
or
std
sbb
test
addr16
gs
jae
lret
xor
and
push
stos
iret
js
add
addr16
push
push
mov
mov
fidivrs
aad
sbb
test
pop
add
cmp
pusha
sub
mov
pop
mov
dec
out
inc
inc
or
mov
fsubl
mov
andl
cmc
push
xlat
shlb
gs
loope
push
dec
mov
fcmovu
scas
inc
clc
sbb
stos
out
jae
mov
ss
das
pop
mulb
or
cmpsb
loop
dec
pop
hlt
mov
jo
sahf
mov
dec
in
imul
jl
sub
ret
jb
arpl
lret
ljmp
xchg
xor
and
rclb
mov
pop
jg
nop
dec
dec
jecxz
xchg
add
testb
aam
adc
jne
adc
test
push
in
jg
addb
outsb
mov
mov
hlt
daa
stos
cmp
gs
inc
dec
mov
adc
mov
popf
movsb
or
inc
repz
xor
cmpsl
ja
orb
repnz
push
in
data16
mov
or
push
cmpsl
lds
popf
dec
outsl
jge
adc
mov
fstps
je
lea
stos
aam
push
adc
xchg
inc
mov
add
out
push
rcr
iret
fwait
push
mov
lar
bound
mov
andl
cmp
adc
xchg
int3
lret
add
sbb
imul
icebp
jnp
pop
popf
mov
jbe
mov
movsb
push
or
or
mov
push
mov
incb
ret
sbb
push
inc
add
cmpsl
inc
bound
out
xor
dec
cmp
and
mov
xor
push
add
and
es
jecxz
and
cmpsb
sub
int
out
or
leave
sti
sub
sub
mov
aaa
pushf
or
mov
ljmp
shll
cmpsl
pop
add
xchg
or
jno
in
mov
dec
mulb
clc
xchg
mov
inc
push
testb
pop
dec
bswap
and
push
dec
rolb
andb
push
lock
clc
or
sbb
lods
pop
addr16
lock
xchg
ja
and
mov
jnp
aaa
add
add
sub
sbb
arpl
adc
adc
dec
pusha
push
imul
vpcmpgtd
fs
and
push
pmaxub
push
jmp
mov
fdivrs
push
stos
inc
sbbb
notl
incl
dec
test
cltd
push
sbb
inc
out
pop
or
add
xor
xor
xlat
push
roll
xchg
stos
rcrl
xor
lods
testb
in
add
fs
int3
pop
fwait
jo
ss
jo
dec
push
push
insl
ret
pop
sahf
pop
inc
mov
jle
sub
nop
jae
ret
xchg
and
fdivp
mull
in
inc
lret
mov
xor
stos
test
inc
add
or
xchg
loopne
cmp
cmp
ret
mov
sbb
xor
les
cltd
cmp
jns
dec
loopne
fsubl
fistpll
sbb
and
xchg
mov
jbe
scas
xchg
aam
leave
fnstenv
sahf
cmc
stos
jp
cmp
sbbl
dec
sbb
cltd
in
pushf
adc
cmp
jne
push
shrb
vmovntps
push
inc
inc
ljmp
jmp
mov
sahf
loope
fidivl
jb
inc
xor
cli
je
orl
jns
mov
or
sbbl
xlat
ss
sbb
and
jns,pt
repz
mov
pop
xor
imul
scas
insb
pop
inc
push
clc
clc
xor
or
rcrb
leave
dec
rcll
das
aas
pop
pop
jne
push
aaa
mov
push
xlat
jmp
pop
xor
push
mov
fidivl
push
sub
adc
mov
cmpsl
push
ret
in
xchg
test
jb
out
ret
add
fisubl
dec
cmp
mov
jmp
js
movsl
and
push
cmp
push
bndstx
dec
sbb
std
inc
js
in
adc
popf
ret
out
xchg
daa
mov
jg
sbb
aas
shlb
pop
mov
pop
inc
mov
cli
inc
mov
repz
stc
icebp
or
cltd
pop
movsl
push
jbe
cmpsb
xor
adc
push
clc
or
test
sub
je
pop
stos
flds
cld
xchg
cmp
mov
xchg
popf
mov
xor
aaa
dec
in
or
xchg
mov
call
pop
call
or
jmp
and
sub
out
lret
mov
cmp
cmpsl
aaa
ficompl
mov
sub
test
cmpsb
out
add
sbb
into
pop
lret
inc
mov
jle
testb
daa
movsb
sbb
push
ret
ss
cmp
add
mov
andl
mov
or
sub
mov
lahf
cmpsl
out
xchg
ja
push
roll
insb
sbb
mov
iret
call
dec
sbbl
lret
mov
xchg
sbb
into
shl
adc
loope
inc
push
ja
repz
push
out
out
jmp
xchg
xor
jmp
mov
aam
lcall
xlat
and
inc
cmp
pop
or
cld
out
push
and
xchg
loopne
jmp
sub
imul
mov
sub
outsl
loopne
dec
dec
dec
cmp
test
adc
or
cli
xchg
stos
mov
sbb
lret
ja
inc
repnz
icebp
decl
push
cmpsb
add
sub
or
cmpsl
dec
dec
fmul
cmp
ret
test
jl
and
mov
in
cld
shll
lods
insl
mov
add
jns
das
sub
sbbl
outsl
das
add
aaa
jae
sub
decb
cs
push
dec
mov
dec
loop
cli
sahf
pushl
cmc
mov
mov
lea
lret
call
or
out
stos
je
imul
lods
xor
jle
test
or
clc
cmp
lahf
test
rorl
sbb
dec
and
call
stos
test
insb
mov
dec
lock
xor
xchg
sub
fsubs
lret
ret
sar
test
fcomps
add
nop
pop
sbb
jge
mov
sub
shlb
movsb
pop
das
enter
ljmp
in
ds
mov
jno
xchg
add
or
lods
inc
sarb
int
dec
add
push
fidivl
sbb
sbb
fldcw
test
sahf
cli
and
push
imul
inc
cli
adc
sub
jmp
scas
mov
pop
push
cmpsl
loope
das
out
sbb
lods
mov
je
bound
ficomps
mov
sub
adc
push
or
aam
push
into
xlat
lock
add
adc
aas
jle
dec
out
push
in
push
push
mov
inc
ret
xchg
daa
pop
push
push
pushf
jge
add
or
fistpll
fbld
adc
pushf
jg
push
pop
ja
repz
adc
jmp
gs
or
fwait
jo
dec
loope
cmpsl
movsl
mov
pop
mov
repnz
jo
adc
stos
out
out
xchg
or
sbb
setne
mov
orl
shl
cmc
mov
scas
inc
push
pushf
ret
pop
pushf
inc
call
xchg
or
in
mov
pusha
test
add
xchg
leave
in
sbbl
inc
scas
repnz
mov
mov
fmul
aaa
push
cmpsl
adcl
lods
mov
movsl
lret
in
inc
sbb
add
xchg
cs
cmpsb
outsl
scas
xlat
push
mov
mov
fnstsw
fimull
mov
sar
dec
xchg
sbb
cmpsb
sarb
pop
icebp
loope
loope
out
js
push
add
popf
sub
pop
xlat
testl
cmp
or
stos
loopne
xor
mov
mov
mov
pop
aam
int
sti
mov
ljmp
loopne
xor
jns
popa
test
mov
xorl
lods
xor
loope
adc
sbb
and
mov
imul
test
insb
add
aam
push
mov
shll
cmpsb
cmpsb
insl
je
dec
sahf
clc
jg
in
das
cwtl
sbb
inc
sub
mov
das
pop
ja
push
jnp
out
out
in
push
outsb
mov
icebp
mov
divl
shl
inc
xchg
loopne
sbb
mov
lret
adc
inc
rclb
je
jne
dec
gs
nop
adc
je
ljmp
sub
or
stc
mov
loop
jo
enter
jp
xlat
mov
enter
dec
cmp
ja
and
sub
and
adc
jg
aas
or
sti
jge
xlat
jmp
mov
pop
jns
or
push
into
sbb
mov
mov
jl
xor
pop
loop
jge
test
push
mov
popf
mov
enter
cmpsl
xchg
add
mov
ds
sbb
int
mov
shrl
lds
inc
dec
jecxz
leave
mov
fildl
sub
mov
xchg
jge
fcmovu
andl
jmp
test
test
mov
inc
in
add
ret
push
addr16
cmp
sub
and
sub
stos
inc
out
pop
hlt
lahf
mov
xorb
jnp
or
jno
jo
lret
shl
adc
jmp
dec
mov
jne
cltd
xchg
fwait
out
ret
jnp
pop
add
pop
push
or
push
push
mov
xor
je
add
sbb
mov
sbb
or
dec
aad
xor
lcall
lds
dec
xor
idivb
cmpsb
pop
int3
fadds
jp
loopne
movsb
fwait
mov
int
jge
outsl
and
daa
push
adc
sub
pop
jno
cld
popa
clc
sub
push
and
sbb
aam
sub
dec
cmc
stos
jne
out
push
inc
mov
or
jbe
mov
push
bound
or
or
jns
stos
lret
data16
pop
mov
pop
bound
push
cmpl
add
jecxz
repz
xlat
mov
fistl
push
jbe
shr
mov
fdivr
fxch
push
ja
into
push
daa
pusha
or
lods
inc
fstps
cli
loope
gs
inc
fisttpll
sbb
test
fnstenv
add
mov
inc
stos
loope
fistpl
rorl
pop
xor
add
cmp
aam
pop
mov
pop
mov
add
jmp
push
mov
test
das
mov
arpl
andl
xchg
repz
arpl
or
loopne
cld
adc
xor
or
inc
ss
mov
mov
jge
mov
into
scas
adc
jae
rcrb
push
in
mov
add
mov
int
push
sbb
pusha
xor
jb
stos
sbb
jb
mov
dec
addl
mov
cs
and
lods
xorl
cwtl
xor
incl
and
and
das
and
fisubl
mov
test
jg
daa
push
mov
insb
icebp
xlat
sub
pushf
xor
mov
in
es
xchg
mov
add
fwait
data16
dec
dec
icebp
cld
or
jns
lret
out
out
test
and
dec
fidivs
mov
xor
sbbb
rcll
dec
add
mov
lret
leave
loope
inc
mov
inc
lret
mov
and
ret
stos
sub
flds
add
mov
lods
fistpl
in
push
inc
fldenv
push
stos
and
jecxz
nop
sub
add
mov
dec
mov
mov
and
jg
push
test
or
rorl
or
adc
clc
cmp
cmp
dec
push
xor
mov
jae
sahf
pop
int3
cmpsl
test
jmp
jns
jp
adc
fwait
add
test
sub
and
fs
test
cmp
sbb
cli
dec
imul
sbb
sbbl
mov
negl
fwait
aad
mov
xor
mov
outsb
dec
jbe
out
arpl
dec
lahf
fwait
push
jp
xor
sbbb
aas
int
pop
mov
sahf
jno
pop
cmp
add
push
inc
scas
iret
push
mov
cld
pop
adc
rcrl
add
cwtl
test
pand
ror
mov
icebp
push
leave
int
in
add
mov
mov
js
imul
popa
pushf
xor
mov
push
jne
shl
add
add
aaa
sub
adc
push
inc
sub
jb
jecxz
pop
xchg
dec
pusha
int
arpl
gs
push
inc
lods
push
sbb
xlat
adc
ja
pop
das
xchg
cwtl
jmp
mov
pop
cmc
jne
negl
mov
push
ror
leave
lock
and
into
or
push
mov
inc
xchg
jno
cld
xchg
mov
dec
add
jecxz
mov
into
sarb
and
xchg
dec
mov
jne
sub
jne
xor
push
xchg
cs
pusha
pop
or
mov
cli
ret
xchg
sub
dec
stos
ss
jle
rorb
movsl
xchg
mov
ja
inc
mov
push
lcall
xor
cmp
fwait
cmp
mov
jmp
adc
mov
dec
fldl
adc
pop
jne
jmp
sub
fwait
pop
cmp
pushf
pop
lahf
or
push
push
jle
cltd
xor
xor
ljmp
cmp
xchg
aaa
les
aaa
push
jbe
inc
loop
jns
ja
mov
pushf
inc
fmul
int3
sub
inc
pop
imul
xor
add
push
pop
fisubl
xchg
movsb
cli
aam
sub
mov
clc
inc
ss
jp
push
in
mov
or
jne
xchg
adc
jns
lea
or
xchg
out
mov
insl
add
dec
lds
mov
addr16
mov
adc
stos
cld
adc
sub
rcll
repnz
and
mov
jle
sub
lret
dec
jl
frstor
mov
mov
add
fmull
fwait
xchg
pop
negb
mov
movsl
shr
sahf
add
xchg
cltd
and
mov
inc
mov
leave
call
sub
push
mov
add
mov
repz
cs
leave
add
cli
out
std
xchg
sub
out
ljmp
insl
jge
sub
adc
jns
mov
les
or
inc
rclb
or
data16
xchg
push
call
in
fdivl
fdivr
enter
lea
hlt
les
push
xchg
or
pop
scas
mov
xor
lods
pop
ljmp
jb
insb
xchg
fs
dec
xchg
sub
or
hlt
push
xor
dec
int3
add
fnsave
in
negl
mov
adc
sub
inc
pop
pop
dec
dec
xchg
jl
and
loope
out
sti
inc
mov
xor
gs
mov
les
in
subl
pop
ds
push
ljmp
jbe
mov
mov
adc
int
pop
mov
and
pop
xor
cwtl
fldt
pushf
repnz
scas
cmp
aam
xchg
add
lea
push
fs
xchg
pusha
inc
fsubs
jg
mov
jecxz
not
stos
push
and
js
sub
cs
stos
and
push
out
mov
enter
mov
dec
dec
mov
mov
cmpsl
in
sub
pop
jbe
mov
iret
movsb
in
das
fidivs
mov
icebp
lods
sahf
xor
orb
mov
fcmovne
scas
xlat
or
mov
loop
xchg
mov
mov
lahf
ret
dec
das
mov
imul
sub
or
xchg
out
pop
mov
rcl
xchg
subl
mov
roll
les
loop
int3
add
gs
dec
add
outsl
mov
daa
int
xchg
lock
movsl
push
movups
cmpsl
pop
out
sbb
cwtl
push
fnstsw
inc
xor
fldcw
test
mov
les
jo
jmp
lds
dec
push
ds
jle
mov
mov
mov
nop
mov
loop
incl
iret
jg
popa
sub
out
stos
xor
xchg
add
mov
roll
mov
stc
les
sahf
es
pop
mov
test
and
xlat
imul
movsl
movsl
out
push
mov
cmp
xor
mov
inc
call
arpl
xlat
sbb
push
sbb
aas
arpl
push
movsl
fistl
scas
addr16
loop
dec
outsb
add
arpl
fistpl
xchg
pop
xchg
lods
addb
repz
dec
pop
push
aad
sbb
aam
out
mov
movsb
mov
fistpl
and
cmc
and
xchg
lods
loopne
out
pop
sahf
adc
push
jb
lret
divl
lds
push
dec
jae
dec
add
mov
pop
out
xchg
orl
aaa
out
cmp
mov
fildl
iret
mov
mov
lret
sbb
pusha
lock
fwait
inc
fldenv
cld
pop
stos
movsl
xor
inc
mov
inc
sti
push
inc
pop
xchg
gs
add
sti
data16
pop
in
arpl
or
xchg
cmpsb
lock
testl
pop
in
mov
push
rclb
mov
cmp
xlat
les
out
mov
mov
mov
inc
push
xchg
add
mov
into
xor
les
leave
add
jmp
inc
mov
lea
imul
movsb
sub
stos
test
mov
sbb
push
fiadds
ljmp
jno
popa
int3
sub
push
into
jne
test
lods
mov
xor
movsl
loop
add
cmp
mov
into
or
cmpsl
mov
addl
lock
jle
in
imul
pop
mov
cmpb
push
xor
jno
cmp
adc
shl
loop
push
jg
cmpsb
jno
nop
cli
dec
dec
mov
aad
repnz
pop
mov
shll
xlat
push
stos
jle
xchg
dec
stos
inc
sub
mov
cwtl
pop
out
fldcw
pushf
or
add
push
adc
fs
xorb
cmp
cmc
mov
push
jl
xchg
pop
data16
dec
dec
arpl
imul
in
mov
sbb
mov
mov
add
mov
aas
stos
fidivl
sbb
std
into
vxorps
adc
xor
xchg
mov
dec
mov
push
pop
dec
jbe
mov
imulb
dec
lea
negb
ret
lret
mov
mov
inc
pop
jl
sub
add
xchg
sub
pop
in
mov
push
gs
pop
xchg
mov
sbb
ljmp
nop
fisubrs
mov
jecxz
inc
or
mov
es
dec
mov
in
cmp
xchg
or
popf
pusha
hlt
lock
xchg
cmp
fwait
dec
inc
repz
icebp
imul
fwait
dec
dec
inc
test
mov
insb
xchg
je
ret
dec
pop
cmc
ret
xor
outsb
jns
ja
mov
je
lods
aad
lock
insb
sub
lds
insl
cmpsb
mov
or
mov
adc
inc
push
mov
jno
test
push
inc
cmp
cwtl
xorl
notl
push
jb
ss
inc
in
mov
adc
iret
jbe
inc
pop
repz
jl
movsb
movsl
or
mov
fimull
adc
addr16
mov
hlt
mov
or
mov
xchg
mov
jbe
test
and
pop
mov
mov
push
test
lret
lods
inc
ficoms
paddsw
cmc
nop
push
jge
and
ja
xchg
jg
inc
mov
sbb
sahf
and
loopne
jge
cltd
lcall
jnp
arpl
nop
lret
add
cltd
es
pushf
xchg
push
in
push
punpckhwd
insb
mov
fwait
sbb
mov
push
mov
fcomi
sbb
xchg
xor
cmp
dec
fildl
lods
jns
mov
and
jmp
bound
cmp
lods
inc
and
pushf
lret
fdivr
xor
or
icebp
push
mov
subb
aad
xchg
cmpsl
out
stos
sahf
clc
xchg
or
sub
rorl
mulb
scas
cmp
fdivl
adc
js
xor
sbbb
in
or
test
jl
sbb
nop
jmp
out
ret
in
push
outsb
push
out
xor
out
cld
xor
cmpsb
xchg
pop
scas
out
mov
add
sbb
mov
int3
lock
xchg
xlat
mov
mov
subb
aad
dec
or
push
pop
daa
mov
pop
popf
adc
jl
add
xor
sub
push
inc
pop
mov
mov
outsb
movsl
xor
pop
jp
pop
pop
push
jne
jle
iret
lods
push
fsubs
push
and
jns
aaa
xor
sti
push
dec
in
dec
push
out
movsb
out
dec
mov
je
push
outsb
add
adc
dec
leave
loope
mov
clc
add
push
jbe
jge
ficoml
pop
call
mov
call
loop
mov
cwtl
out
mov
call
cmpsl
push
rcrl
js
dec
or
adc
popf
push
jne
jl
fimull
sbb
add
mov
and
cmpsb
xor
xchg
or
divb
mov
adc
aam
sub
aad
add
mov
cmpsl
shll
and
shrl
scas
cmpsb
sub
jne
xor
mov
mov
ljmp
jno
jne
fisubl
inc
cmp
and
xor
std
jne
ret
cwtl
jle
inc
mov
add
lret
cmp
stos
mov
inc
sub
fcmovne
lcall
or
xor
sub
popa
pop
xchg
adc
dec
in
jmp
fcoml
jg
ljmp
hlt
into
bound
mov
das
movsl
mov
push
sbbl
lods
outsl
sbb
mov
cmpsl
ljmp
cmp
test
mov
ret
ljmp
cmp
mov
outsl
push
adc
pop
call
jnp
outsl
jp
dec
lds
in
sbb
push
mov
leave
mov
jne
and
movsl
and
cs
test
jo
jno
fs
dec
push
inc
out
loopne
add
sahf
lea
negl
outsb
jle
cmp
cmp
mov
mov
jl
mov
and
xchg
mov
movsl
cld
mov
rclb
lret
xchg
cmp
mov
loope
and
push
and
mov
ret
pop
push
jmp
jl
jo
jae
mov
fcompl
sub
ljmp
hlt
inc
out
popa
mov
sub
push
or
xor
pop
repnz
adc
adc
jo
mov
or
fstpt
nop
mov
mov
mov
dec
pop
leave
cmpsl
scas
ret
lea
push
sahf
xchg
lds
mov
fldenv
xor
in
xchg
addr16
andl
mov
nop
sahf
inc
xlat
rclb
lods
mov
fnstenv
lods
cli
xchg
fiadds
popa
cmp
sbb
xor
cmpsl
cmpb
test
movsl
xchg
mov
and
sub
ja
in
xchg
pop
or
and
enter
mov
repz
popa
fcoml
lcall
int3
lret
mov
std
xchg
mov
xchg
push
or
xor
mov
push
xor
dec
loop
fstp
daa
fldt
out
xchg
inc
push
push
lea
jmp
fsubs
inc
pop
pop
mov
sbb
jnp
inc
mov
dec
or
cld
push
or
les
mov
push
inc
sti
jae
cmp
lds
outsl
loop
and
outsl
dec
mov
sti
lds
pushf
out
icebp
mov
adc
fiadds
cwtl
cli
mov
inc
jge
jge
into
xchg
add
rolb
out
jo
sub
test
cmp
xchg
and
mov
mov
jo
and
leave
sbb
and
push
push
mov
sbb
mov
pop
jmp
adcb
sbb
sbb
dec
cmp
adc
and
pop
sahf
xlat
and
and
and
push
ret
or
push
and
les
test
push
fildl
fcompl
cli
in
cs
int
clc
scas
dec
add
jg
nop
ds
int
orb
mov
fdivs
push
pop
aas
mov
cli
xchg
cwtl
ljmp
std
add
mov
movsb
js
lea
dec
mov
out
loope
jl
mov
xchg
xchg
in
add
ja
stos
push
fmull
push
decl
test
inc
stos
je
shrl
xchg
dec
scas
enter
and
xlat
scas
stos
inc
ret
int
mov
mov
inc
test
gs
test
adc
std
add
cmpsl
test
and
lods
inc
inc
xchg
adc
aad
pushf
mov
mov
add
ljmp
jno
test
push
adc
pop
cmp
push
push
or
dec
out
mov
mov
sub
sub
fiaddl
push
mov
cwtl
hlt
mov
mov
or
push
lahf
and
pushf
xor
andb
in
xchg
sbb
dec
hlt
iret
repnz
bound
sahf
jg
add
test
add
dec
icebp
mov
xlat
out
neg
jnp
and
jb
adc
and
lods
push
xor
lret
stos
jp
xchg
jnp
jbe
or
push
xlat
cmp
or
ljmp
push
inc
mov
and
and
mov
pop
test
mov
fcomps
lret
inc
jecxz
mov
mov
out
and
ret
enter
sbb
and
aaa
ret
sti
push
jb
pop
jp
mov
pop
std
test
in
fdivp
pusha
clc
out
sbb
mov
std
mov
jne
stos
mov
mov
jno
enter
aad
jbe
cmp
and
neg
push
ljmp
icebp
sbb
out
or
pop
push
sbb
and
jns
jl
add
shll
add
andb
nop
sub
pop
add
dec
stos
imul
shll
in
ljmp
inc
xlat
idivl
mov
fidivrl
jge
shrl
fidivl
data16
adc
jb
pop
jno
pop
xchg
fsubs
and
pop
jo
ja
mov
outsl
add
sub
fistl
xchg
lods
int3
das
addb
sbb
xchg
out
and
lods
cmp
cmp
xor
fidivrs
add
mov
movsl
loop
fisubl
sbbb
fdivs
adc
pop
pusha
mov
cmpsb
out
or
dec
movsl
icebp
loop
cmp
test
jp
lcall
xor
xor
fdivrs
loop
lcall
xor
cli
fsts
rolb
jbe
fsubs
add
imul
mov
mov
jmp
sbb
cmp
insb
xchg
pop
xor
or
inc
aad
out
mov
push
cmpsl
add
stos
repnz
xchg
scas
and
inc
pop
push
add
sbb
add
mov
shl
jge
rcr
mov
rcrb
ja
jne
push
imul
mov
adc
mov
mov
push
shr
test
test
push
mov
xchg
adc
mov
or
mov
inc
into
cs
xorl
outsl
test
mov
in
bound
lcall
xor
mov
and
fcomps
xchg
sub
add
mov
mov
cmp
daa
xchg
insb
xchg
xor
cs
insb
jle
pushf
sub
int
cmc
jo
in
adcl
leave
xchg
jp
or
push
orl
stos
scas
jb
lods
mov
cld
pushf
xchg
pusha
lret
push
mov
xchg
lahf
in
dec
lcall
cwtl
cmpsl
es
jge
imul
aam
test
insb
sub
cmc
mov
addr16
sbb
ss
ret
lcall
sbb
fdivrs
pop
test
mov
sbb
scas
popa
jmp
insb
and
lahf
rol
into
pop
cmp
mov
jno
cld
inc
nop
inc
mov
cli
nop
clc
xchg
ret
loopne
push
imul
mov
pop
and
pop
jne
leave
movsb
xor
fs
or
shlb
insl
repz
mov
or
push
sbb
add
xchg
add
lods
lcall
popa
jne
shl
jecxz
sbb
in
mov
xor
call
push
enter
jmp
sbb
rolb
loop
adc
mov
push
jb
fwait
jne
insl
add
inc
jmp
inc
push
jae
out
inc
xor
jbe
lahf
hlt
pop
xchg
nop
jge
adc
jle
jmp
mov
out
ret
fsubrs
pop
pusha
add
addr16
push
fwait
inc
xchg
xchg
pop
pop
test
idiv
lcall
aas
inc
jp
in
aad
pop
imul
jge
adc
ss
sub
sub
scas
sbb
add
aaa
and
inc
fldenv
mov
gs
adc
sahf
xor
sbb
push
sub
xor
jne
jl
ret
xorl
ds
in
call
sbb
rcll
sub
dec
subl
arpl
mov
es
sub
mov
sub
push
insb
or
jae
loop
mov
jecxz
lret
jae
imul
jmp
mov
aam
out
jns
jns
popf
and
popf
pop
mov
leave
xor
mov
mov
inc
mov
jbe
les
out
stc
add
loop
push
fadds
xchg
ljmp
jno
push
test
test
xchg
and
or
mov
jae
mov
popf
pop
cld
mov
movl
stos
push
rcl
sbb
xchg
mov
sti
xchg
push
in
testl
pop
stc
sbb
mov
mov
ror
inc
dec
mov
mov
ret
lahf
or
bnd
cmp
xchg
ds
les
sbbl
aas
pop
mov
dec
xor
int
or
xor
fwait
sti
lcall
adcb
inc
mov
lret
fmuls
xor
mov
stc
orl
cmpsb
fcmovnu
jae
loop,pn
sbb
sbb
imul
xor
mov
ret
adc
gs
int
cwtl
in
addr16
and
pop
notb
cwtl
mov
lock
rcrb
pop
mov
jae
hlt
sub
stos
sbb
xor
cmp
jle
inc
lock
fcomip
pop
add
addr16
cs
mov
loopne
mov
adc
push
mov
fwait
xchg
sbb
cwtl
push
jecxz
mov
mov
inc
push
pop
aaa
ficoml
adc
mov
stc
lea
mov
shrb
mov
ds
add
lret
jecxz
jno
nop
call
sub
push
rolb
ljmp
ljmp
cs
sub
pop
adc
cmp
repnz
hlt
loop
or
adc
mov
jnp
xchg
daa
cmp
push
fisttps
mov
sub
pop
xor
pushf
call
add
inc
fwait
cmp
fucomp
jl
lret
jp
aad
mov
loopne
push
stos
add
sbb
testb
xor
insb
jge
pop
dec
adc
xchg
rorl
sbbb
jmp
sub
inc
add
xchg
mov
psubusw
xchg
or
and
pop
je
jmp
sbb
sub
fmull
cmc
xchg
sti
jp
je
xor
jg
lods
inc
xchg
rcll
pop
loopne
into
and
in
inc
movsl
inc
dec
or
mov
mov
movsb
idivb
sarl
shrl
dec
pop
mov
popf
xchg
call
push
pop
sbb
call
test
jnp
pop
insl
add
dec
push
cltd
or
pop
cli
sarb
movsl
or
out
lret
or
xor
loopne
xchg
mov
fistps
inc
xchg
movsl
mov
mov
mov
push
xlat
cmpl
leave
test
xor
ss
mov
adc
jbe
les
insb
lods
inc
push
lcall
add
pop
pop
and
xchg
or
fidivs
cmp
xor
mov
cli
mov
jg
sub
or
jmp
sub
addr16
mov
xchg
out
rcrb
pusha
or
pop
fisttpll
sub
mov
stos
inc
sbb
lods
or
lret
repnz
mov
mov
loopne
dec
adc
and
pop
or
dec
mov
outsl
mov
mov
jle
insl
pusha
sarb
rolb
pop
fsubr
roll
cs
push
xor
addl
les
cmc
lds
icebp
fisttps
fdivs
sti
xchg
pusha
shlb
mov
cmp
mov
insb
inc
xchg
popf
call
jle
add
sub
ret
mov
push
int
xchg
test
or
icebp
or
rcrl
cld
mov
sub
xchg
jge
jge
pop
pop
add
xchg
subb
pop
aad
sbb
faddp
and
push
push
data16
lods
mov
and
mov
movsb
push
cmp
add
aad
lds
xchg
adc
jno
pop
ret
adcl
adc
clc
mov
or
insb
cmp
sub
fcoms
mov
push
fimull
test
inc
call
ret
mov
dec
xchg
dec
pop
shrb
sti
sbb
push
hlt
xchg
mov
jmp
mov
adc
addl
mov
pushf
insb
jp
mov
push
dec
fldl
test
nop
das
xor
out
xor
leave
es
mov
out
ja
repnz
repnz
jle
das
xchg
dec
or
icebp
sahf
xor
jnp
add
mov
popf
idivb
xchg
sbb
push
rcrl
std
ret
clc
inc
push
mov
insl
xor
sub
cltd
push
outsb
push
jb
jl
adc
lds
fwait
push
int3
pop
or
test
cmp
cmp
add
ljmp
inc
push
mulb
int3
roll
sub
in
push
or
push
in
sbb
out
cmp
stc
mov
scas
xor
sub
push
sub
xchg
dec
orb
mov
imul
mov
sarl
les
sbb
lea
or
jnp
shrb
cwtl
das
outsb
dec
fidivl
xor
stc
cwtl
in
fldenv
pop
cwtl
cli
jle
mov
fistpll
adc
inc
fcoml
leave
insl
fsubrs
cld
ljmp
sti
xor
test
pop
mov
adc
push
andb
xchg
adc
inc
inc
mov
cld
ljmp
stos
mov
sub
inc
pop
mov
in
cmp
and
es
shrb
mov
xor
jg
mov
mov
aad
insl
mov
or
push
jns
inc
lods
fistpl
mov
nop
pushf
adc
lods
sub
xchg
mov
gs
or
xchg
cmpsl
out
add
mov
and
jno
sbb
add
int3
loop
aad
or
hlt
push
or
in
push
push
adc
rcrb
push
sahf
cmp
fdivr
imul
dec
lods
arpl
sub
fnstsw
std
cmp
addr16
cli
pop
addb
stos
dec
push
push
jle
or
hlt
push
and
addr16
je
inc
cwtl
test
lods
cmc
cmc
push
sbb
aas
hlt
push
andb
mov
fiadds
pop
adc
lea
in
xchg
rcr
out
xchg
sarl
push
ror
push
push
movsb
jae
or
test
xchg
mov
cwtl
popf
mov
das
adc
imul
sbb
cmp
cwtl
jl
pop
icebp
adc
clc
popa
sub
jb
inc
fwait
inc
fmuls
inc
enter
loop
pop
cmp
cltd
jns
lret
fdiv
push
out
sbbb
ja
jnp
aaa
loop
jmp
add
sti
ds
cli
lcall
mov
fstl
mov
xchg
and
inc
push
add
mov
fstpl
cmpsb
dec
push
scas
stos
inc
and
stc
jns
add
scas
lcall
clc
xor
jmp
test
xchg
lahf
loope
xchg
adc
mov
jl
push
push
aam
pop
push
sub
jecxz
xchg
pop
jne
mov
lods
decb
xor
ja
pop
fildll
test
or
in
ds
rcll
rcrb
lock
leave
adc
es
insl
xchg
dec
push
repnz
sbb
dec
jne
push
jns
stc
jo
cmpsl
sbb
mov
push
movsl
pushf
add
xchg
push
or
stos
adc
in
dec
jno
leave
jne
mov
lea
cmp
fldt
or
cmp
outsb
jl
cmp
jl
jae
repz
cmc
outsl
daa
outsb
jns
pop
adc
sub
sub
bsf
in
pop
mov
add
ja
fmul
lcall
lret
jno
or
jb
and
xlat
lock
test
ret
push
inc
faddl
sub
mov
lods
popa
adc
jne
das
stc
std
outsl
test
adc
std
in
out
mov
mov
aam
jne
cmp
adc
push
test
fdivrs
push
or
call
test
orl
imul
mov
or
pop
mov
and
sar
cmp
dec
inc
pop
jnp
xchg
cmpsb
sbb
jle
inc
sub
outsl
test
lahf
mov
pop
dec
test
cmp
aaa
bound
push
sub
enter
push
leave
or
clc
imul
dec
mov
popf
mov
add
add
outsl
pushf
mov
inc
decl
shl
xor
sbb
mov
xchg
stos
lock
jae
cmpsb
cmpsb
mov
insl
xchg
mov
int
jae
jnp
push
rcr
xor
or
sbb
in
cmc
cmp
movsb
adcb
push
and
push
movsb
xchg
jmp
cli
or
cli
ror
push
fs
cli
pop
sub
mulb
pop
rcrl
data16
mov
stos
jp
jp
xchg
sub
insb
icebp
nop
lods
imul
cli
or
xchg
jbe
inc
mov
mov
pusha
lea
sbb
loop
stos
aad
faddl
mov
xor
das
push
stc
xchg
aas
lock
icebp
cmp
push
cmp
lsl
and
outsb
lds
dec
push
out
out
cmp
xor
push
xor
push
test
cmpsw
pmaxub
pushf
cmp
cmpsl
jne
fs
jle
stos
jbe
lahf
add
add
add
xor
mov
adc
arpl
dec
xor
gs
xor
add
scas
insb
xor
mov
movsb
push
and
jl
shrl
inc
scas
call
push
dec
ljmp
jnp
js
sbb
out
outsb
cmpsb
loope
and
test
inc
sub
inc
and
sbb
mov
data16
mov
sbb
jne
stos
add
mov
cwtl
pop
push
fldenv
jle
lahf
scas
sub
cmpsl
repnz
sub
stos
mov
sbb
mov
or
loopne
sub
addr16
sbb
sbb
aam
cwtl
mov
call
lods
dec
xchg
inc
roll
pop
outsb
stc
movsb
incl
sbb
add
fstl
lock
stos
incb
popa
and
mov
in
mov
cs
fdiv
inc
pusha
push
mov
cltd
sbb
insl
lret
mov
ret
in
insb
lea
ret
xor
ds
insb
jge
dec
cmp
cwtl
outsb
jl
fidivrs
lods
adc
xlat
xchg
loopne
leave
lods
mov
jl
push
push
rcll
mov
xor
xor
push
sti
push
cli
xor
out
movsb
aaa
cmp
dec
popw
xlat
push
cwtl
repnz
inc
jbe
cmc
arpl
sub
sub
in
addr16
mov
xchg
ja
shrb
shrl
popf
sub
lea
stc
sti
nop
inc
pop
les
cmp
jns
les
stos
xchg
bound
movsb
mov
dec
sbb
fsubp
insl
xor
rolb
sbb
ds
ss
das
repnz
xchg
push
lret
jecxz
sbbl
leave
outsb
cmp
or
xor
xchg
call
sub
in
push
mov
insb
or
aam
lcall
mov
in
mov
stos
adc
xchg
sbb
jmp
xchg
xchg
add
xor
push
push
cmp
inc
popf
xor
into
ret
cmp
pop
out
scas
in
mov
fisubl
and
repz
hlt
xchg
sub
pfnacc
shlb
ret
daa
mov
pushf
jae
fsubl
mov
fs
test
xor
adc
int3
add
xchg
rcrl
pop
cmpsb
mov
and
shr
push
and
daa
pop
inc
mov
jle
data16
mov
mov
sbb
in
inc
xchg
lret
mov
test
xchg
lock
data16
add
lret
jno
inc
sarl
outsb
loop
loopne
lods
xchg
test
sbb
jl
icebp
mov
xor
out
mov
and
cmp
nopl
sbb
pop
sahf
xor
data16
aas
nop
pop
xchg
sub
push
and
sbb
decb
adc
pushf
lea
js
push
inc
push
pop
popf
mov
cmp
mov
in
andl
dec
sti
inc
xchg
jnp
and
or
sbb
jecxz
mov
sub
adc
shld
cld
pop
mov
xor
add
adc
lret
xor
inc
fs
fsts
ret
xor
in
ret
jmp
push
aad
jge
push
xchg
xor
mov
cs
lcall
out
mov
mov
insl
repz
push
ds
xchg
jnp
or
or
mov
cltd
cmpsb
cmp
xor
xor
jmp
test
out
push
ds
sbbl
hlt
addr16
shrl
push
jns
scas
mov
mov
bound
pop
daa
push
sbb
mov
push
pushf
or
mov
add
stos
bound
mov
push
push
pop
xor
pop
push
sbb
pop
push
fistpll
mov
in
stos
fiaddl
inc
xlat
mov
mul
xchg
xchg
xchg
orl
sub
lcall
gs
jge
out
out
push
repnz
xchg
loopne
cmp
sbb
lock
mov
imul
sbb
inc
push
xor
aam
push
sarl
inc
pop
xor
mov
mov
jae
mov
push
xlat
orb
jmp
sub
in
jnp
push
mov
cmp
icebp
popa
decl
cmp
movsb
sti
pop
jl
imul
fbld
incb
xchg
xor
cmpsb
or
jg
subb
and
test
push
rorl
arpl
mov
mov
cmp
std
insb
sbb
jge
pop
add
call
sbb
test
into
mov
jge
cmp
xor
xor
pushf
ja
aad
ljmp
add
sub
fbld
fucomi
mov
shr
xorl
or
sub
xor
dec
dec
fsubrs
cmp
pop
inc
and
out
roll
mov
xchg
pop
fadds
daa
inc
pushf
bnd
loop
cmp
arpl
cmpsb
std
mov
mov
lods
ljmp
addb
push
inc
cmp
test
aaa
mul
insb
flds
loop
lret
jns
insl
push
movsb
jg
in
sbb
scas
and
sub
or
xor
sub
xchg
test
lock
rcrb
adc
rolb
and
pusha
cmpsl
inc
dec
inc
out
fisttpl
sbb
es
in
cmpsl
sti
jecxz
sub
jae
and
sbb
sbb
mov
mov
imul
adc
fidivrl
cmp
mov
popa
int3
jp
enter
ds
rorb
adc
or
pop
cmpl
jno
sub
out
xchg
mov
mov
xlat
movsb
dec
pop
push
outsb
add
lods
movsb
or
pop
or
movsl
add
or
pop
loop
push
daa
dec
xor
repz
test
repnz
shl
in
xchg
clc
jae
push
sub
push
pop
adc
jns
out
shrb
push
mov
rolb
mov
add
repz
mov
xchg
movsl
into
push
cmp
in
dec
cmp
adc
pop
inc
xchg
insb
pmulhuw
adc
push
test
cwtl
fsts
add
push
je
ja
adc
jbe
or
jbe
lret
lds
xor
gs
loope
dec
in
sub
cltd
fistps
or
dec
nop
dec
inc
decl
out
repnz
int
fisubl
int3
dec
lds
jle
cmc
outsl
call
aad
out
adc
mov
sbb
test
mov
std
mov
adc
xor
rorb
xor
pop
cmp
sbb
mov
test
mov
jns
hlt
leave
outsl
daa
push
shll
imul
sbb
pop
fstpt
inc
ss
test
inc
mov
cmp
and
rol
inc
pop
enter
mov
xor
leave
cmpsl
inc
repz
or
gs
hlt
inc
push
or
adc
into
aam
outsl
rcrb
push
das
mov
jge
shl
dec
add
jnp
jl
test
lcall
sbb
pop
cld
or
cltd
sti
xchg
lret
and
xor
xorl
int3
inc
jg
int
mov
mov
ss
mov
mov
es
sub
push
xchg
in
cli
dec
add
mov
cmp
mov
inc
aas
add
xchg
and
leave
test
subb
sbb
fistpll
insl
add
fisubrl
or
in
dec
pusha
jnp
aad
xchg
or
pop
repz
stc
popf
xchg
add
int3
stos
jmp
lods
jmp
sbbl
xchg
cmp
push
sub
or
dec
pop
xor
cmp
cmp
sub
mov
clc
add
mov
es
sahf
fsubp
or
or
inc
stos
mov
adcb
movsb
fiadds
mov
lock
cmp
stc
add
mov
push
idivb
push
inc
mov
rcrl
out
int
mov
xor
ret
xlat
or
dec
pop
outsb
lcall
popf
fsts
mov
aam
sub
xchg
scas
popf
jge
hlt
stos
repz
cwtl
jae
lret
lods
lret
pop
repz
sub
and
enter
mov
test
xor
icebp
xor
mov
jmp
pop
pop
test
or
pop
jle
cmp
cmpsb
jo
pusha
daa
not
add
xchg
and
stc
pop
outsl
sub
daa
lea
dec
jmp
xchg
mov
inc
addl
lcall
sti
push
movsl
jp
xchg
insl
cmp
or
xchg
rcl
mov
pop
xchg
pop
xor
inc
sub
pop
xchg
adc
pop
not
lock
fsubrs
mov
add
cld
xchg
dec
or
xor
push
mov
or
or
sub
outsl
loop
pop
nop
dec
lods
test
repnz
adc
and
ljmp
push
xorb
iret
movsl
sbb
pop
xchg
jl
cmpl
mov
lds
lahf
pop
cltd
out
push
mov
jnp
je
mov
jae
movsb
lds
mov
dec
daa
and
cmp
jmp
dec
cmp
test
mov
scas
ss
lea
data16
cmp
scas
inc
clc
pop
add
scas
cmp
xlat
adc
lahf
stos
das
adc
cmp
mov
add
pop
sahf
push
stc
test
sbb
outsl
subl
jecxz
add
adc
xchg
fsubs
aas
pop
push
add
je
aad
cltd
mul
mov
xchg
inc
pop
xchg
push
pop
mov
stos
mov
arpl
aad
or
aas
je
xlat
jnp,pn
mov
jg
mov
lahf
loopne
cli
sub
dec
lret
pushf
scas
lcall
adc
rorb
mov
out
stos
jb
cmovns
outsb
sbb
xchg
int3
mov
rcrl
mov
lea
pop
push
dec
mov
jge
jge
mov
cmp
sub
xchg
movl
xor
lods
adc
xchg
imul
cmovs
pop
loope
aad
mov
jmp
rol
inc
repz
in
stos
bound
mov
les
dec
inc
ljmp
cmpsl
and
mov
test
pop
inc
adc
mov
adc
dec
lret
into
test
andl
cld
stos
xlat
insb
mov
lahf
leave
xchg
sub
mov
pusha
cmp
mov
scas
aam
jne
shrb
xor
inc
int
scas
leave
ljmp
jae
mov
iret
lods
xchg
or
push
in
inc
inc
test
fs
fwait
dec
rcrb
xor
cs
push
ljmp
popa
cmp
and
icebp
sbb
inc
xchg
jle
mov
ljmp
ret
rorb
dec
adc
sub
es
rcrl
bound
arpl
test
repz
inc
mov
inc
orb
sub
stos
xlat
mov
push
jno
jl
xor
nop
pop
mov
jmp
sahf
adc
ss
push
aaa
sub
pop
flds
pop
stos
aam
jbe
adc
mov
test
lahf
test
cs
stc
nop
clc
lea
add
sub
ret
int
mov
add
xor
mov
mov
mov
sbb
fimull
movsb
ljmp
jno
outsl
xchg
setp
stos
in
xor
push
lods
fs
adc
xor
inc
lret
jl
hlt
arpl
mov
andb
jb
lcall
cmpsb
sbb
popf
lods
or
add
jb
and
push
jne
mov
outsb
push
int
sarl
mov
inc
mov
or
dec
add
andb
and
xchg
jmp
loopne
out
int3
and
dec
repz
or
adc
cmpb
imul
adc
or
xchg
clc
std
faddl
je
jb
sbb
and
sti
jno
dec
lahf
outsl
jne
stc
out
pop
ss
imulb
mov
xchg
sub
lcall
xor
call
xchg
xchg
clc
pushf
sub
pop
sub
stc
xchg
sub
add
gs
pop
movsb
fisubs
sub
mov
shl
lods
sub
hlt
dec
mov
mov
nop
inc
sbb
scas
fstpt
mov
in
dec
iret
test
jae
les
pop
inc
jg
icebp
ret
or
test
mov
jbe
add
cs
adc
pushf
andb
cmp
loopne
mov
xchg
pop
repnz
js
in
out
in
xchg
and
cmp
pop
outsb
xchg
mov
inc
fcmovnu
in
mov
mov
xor
iret
dec
mov
js
stos
rcl
push
lock
loop
adc
cmp
xchg
push
les
sub
xchg
ja
pop
lcall
and
dec
add
mov
add
dec
mov
push
call
dec
sbb
xorb
test
lea
insb
mov
jmp
movsl
or
andl
jle
or
inc
mov
fsubrl
or
insl
rcr
ja
pop
mov
ror
fadds
mov
scas
or
and
mov
fidivs
sub
nop
orb
aas
sbb
cmp
add
cmove
jbe
adc
inc
loop
das
mov
loop,pn
pop
fstpl
bnd
fstpt
int
insb
sub
sbb
aas
enter
fstl
es
stc
insb
ret
in
cmc
ljmp
xor
jnp
insb
inc
jb
in
mov
push
fldt
lahf
pop
neg
in
daa
inc
es
xor
pop
mov
inc
sub
sbb
xchg
inc
lahf
loope
shll
jno
enter
in
dec
cmpsl
adc
jbe
nop
stos
and
and
mov
mov
adc
ss
adcb
xor
cmc
stos
mov
loope
loop
enter
xor
aam
mov
movsl
stos
and
lds
sti
es
or
pushf
arpl
bound
aad
xor
popf
xor
push
aaa
dec
test
jle
jne
das
cmp
movsl
add
jle
and
sub
sbbb
sub
aam
mov
mov
xor
sub
inc
arpl
adc
cli
or
mov
insb
and
ret
mov
loop
shl
push
stc
cli
popa
jns
fcmovne
mov
xchg
or
mov
rcr
in
stos
xchg
add
mov
incw
inc
fistl
clc
xlat
insl
jp
sub
pcmpgtd
and
lds
mov
jnp
adc
pop
movsl
sbb
repz
adc
loope
aaa
inc
rorb
mov
mull
cltd
in
mov
dec
into
mov
scas
jae
movsb
daa
xchg
out
das
mov
jbe
mov
inc
and
mov
pop
outsb
out
aad
int
in
jp
ret
imul
push
add
xchg
jns
add
jmp
add
mov
mov
out
insl
and
or
ds
cwtl
das
insb
pop
push
inc
mov
sub
mov
inc
push
dec
sbb
fsubs
sub
jno
push
sub
push
add
fs
test
pop
decb
aam
dec
imul
sub
movsl
cwtl
mov
cwtl
ss
xchg
je
cltd
mov
and
or
push
xor
xchg
clc
nop
popa
les
adc
imul
repz
les
repnz
sub
cltd
popa
aaa
mov
ja
push
mov
icebp
mov
rolb
xor
arpl
inc
sbbb
fists
mov
mov
out
adc
shll
mov
push
lods
mov
xchg
xor
or
lahf
sub
sbb
in
test
adc
ja
in
arpl
in
or
mov
mov
sahf
out
cli
jne
nop
cmc
sbb
cmp
lock
and
dec
xor
int
push
iret
push
mov
or
out
clc
nop
into
test
out
out
pop
lods
testl
push
mov
mov
cmpsb
aam
pushf
jnp
mov
mov
push
jo
cli
or
dec
xchg
lret
jbe
jae
xchg
fs
insb
dec
ljmp
faddp
mov
sub
mov
cmc
cmp
push
push
arpl
ficomps
out
jo
pusha
xor
scas
pop
cmp
fmul
bound
shrl
sahf
xchg
es
icebp
test
daa
jmp
or
sub
add
lods
xchg
es
jg
sbb
ret
push
nop
sbb
adc
test
jmp
xor
push
or
in
dec
pushw
test
nop
jb
sub
scas
imul
and
pop
jns
inc
std
iret
cmpsl
sub
xchg
aas
rcrl
pusha
cmp
mov
mov
imulb
mov
mov
in
in
hlt
push
pop
add
out
or
ss
test
or
repnz
jl
in
adc
inc
loop
pop
jne
add
sbb
shll
push
test
cmp
mov
sbb
xor
jg
cmp
cli
mov
test
cmp
divl
cltd
leave
xchg
mov
jae
mov
sbb
ret
ds
dec
dec
jg
fcompl
dec
jecxz
jnp
jmp
les
xchg
pop
aad
jl
stos
test
out
inc
xlat
icebp
lahf
jo
fldl2t
push
jecxz
scas
adc
add
jecxz
les
xchg
int3
or
inc
in
int3
fs
stos
xor
fwait
in
std
push
adc
push
push
inc
sti
pop
int3
push
or
enter
aaa
stos
mov
xchg
insl
jnp
sahf
pop
stos
dec
push
repz
xchg
pop
inc
inc
xchg
inc
dec
sub
pop
cs
dec
rcrl
flds
stc
mov
sub
rcl
ret
lds
or
sti
adc
mov
mov
adc
sub
pop
cmp
dec
jmp
mov
mov
cmp
aas
mov
mov
in
push
and
jnp
sub
lea
pushf
ja
mov
xchg
sub
repnz
leave
mov
pop
nop
rcll
xor
mov
add
ja
daa
clc
shlb
int
add
dec
and
fcompl
mov
adc
stos
mov
push
and
jnp
mov
xorl
cmp
popf
add
outsl
jp
je
mov
xchg
pop
scas
out
fdivl
push
fidivl
int
push
into
movsb
xor
sub
lcall
jns
cmpsb
xor
jo
cli
push
movsl
out
xchg
pop
mov
jns
arpl
shl
dec
sarb
lods
cmp
nop
das
mov
testb
lret
mov
mov
cli
fistl
dec
sbb
cmp
inc
fcmovne
pop
outsl
push
mov
bound
mov
ds
mov
adc
adc
idivl
daa
loope
sbb
or
xor
fcomps
sub
push
mov
cmp
vcvtss2sd
rol
push
pop
jns
or
push
popf
cmpsb
lock
or
pushf
out
dec
pop
and
mov
jge,pt
call
mov
pop
es
mov
outsl
ficoml
adc
imul
xchg
repnz
push
push
lock
jne
push
decl
dec
and
mov
lods
jns
cmp
xlat
push
mov
loope
aaa
cmp
fistpll
mull
adcb
or
scas
xor
out
sbb
push
and
scas
sti
xor
push
pop
fs
xor
std
xor
dec
es
aam
into
loope
dec
icebp
mov
idivb
and
adc
dec
and
pushf
fidivl
dec
mov
cmp
dec
inc
aam
dec
rcr
outsl
mov
pop
jae
inc
push
add
movsb
jns
test
aad
shl
mov
stc
imul
into
addl
int3
fidivs
and
mov
inc
add
sahf
push
inc
mov
xchg
popf
subl
dec
pop
jl
sub
fs
dec
pusha
add
push
jbe
xor
mulb
pusha
test
frstor
jge
pusha
scas
inc
pop
rcrl
add
pop
pusha
addr16
sub
adc
xchg
sbb
jo
int3
stos
or
in
or
mov
mov
adc
sbb
imul
dec
cwtl
lods
inc
int3
das
cmp
add
dec
push
push
push
mov
xchg
mov
loop
add
or
gs
shlb
imul
inc
orb
clc
sahf
dec
loop
mov
jbe
sub
adcb
xor
jo
jle
pop
rol
mov
push
xor
movl
jno
dec
andb
jb
lock
lods
aam
sub
cmpb
clc
nop
fwait
and
or
mov
cli
icebp
rorb
scas
inc
fmull
cmp
fnstenv
fsubs
push
xchg
cli
in
push
out
cmp
cmp
sti
xchg
mov
xchg
dec
test
sbb
mov
fbld
int
pop
xor
pop
test
in
add
push
out
xchg
sbb
cmpsl
xor
in
lock
inc
les
cmp
jg
mov
pop
dec
sub
push
outsl
push
xchg
or
sbb
shll
popa
stc
inc
or
dec
stos
inc
popa
shrl
push
leave
test
pop
cmpsb
sub
repz
or
pop
stos
data16
mov
fildll
movsb
clc
int
cmp
sbbb
out
fadd
out
loope
in
dec
andb
mov
je
lds
pop
repnz
orb
sub
pop
mov
ja
or
xor
and
cmc
and
cmpl
bound
iret
push
sub
aaa
xor
pop
arpl
push
stc
pusha
push
cmpsb
sbb
shll
or
psrld
stos
or
int
xchg
arpl
mov
fwait
xchg
sub
pop
mov
inc
push
ss
frstpm(287
add
es
enter
ds
sub
sbb
ret
fdivl
jp
sbb
push
mov
push
xor
aas
dec
add
cwtl
mov
inc
nop
fwait
jp
rorl
ror
push
ffree
sbb
inc
outsb
mov
dec
enter
cwtl
mov
ret
push
xchg
or
stos
int3
ret
loop
dec
fxch
jp
imul
cmp
in
pushf
fadds
dec
out
ja
or
push
popf
decl
iret
jne
jb
or
stc
sbbl
dec
and
outsb
push
mov
mov
mov
ficoms
or
sti
pop
outsl
mov
je
xchg
shrb
dec
shll
addr16
outsb
lret
fs
sarl
dec
int
fs
inc
leave
mov
nop
outsl
mov
cmp
push
and
rcll
repz
dec
or
lods
js
lea
push
fistps
mov
push
popa
in
and
cmp
sahf
cltd
in
test
xor
dec
or
inc
arpl
pop
jno
jb
imul
mov
pop
sub
imul
mov
jmp
scas
jnp
mov
sub
ja
add
add
inc
setle
pop
movsb
jnp
xchg
sahf
and
mov
stc
jns
sti
xchg
or
cwtl
jne
loop
xchg
sub
jle
sub
jbe
ja
data16
nop
mov
sub
test
sub
push
repnz
stc
out
jecxz
fiaddl
in
xor
outsl
jns
push
cltd
test
cmp
je
std
mov
mov
ss
rcr
adc
fnstsw
jnp
dec
push
aas
xor
shl
loopne
push
ret
jnp
outsb
xchg
lret
cld
mov
loopne
push
push
xor
xchg
clc
inc
dec
bnd
and
js
nop
rol
dec
outsl
pop
scas
loopne
ret
clc
mov
shl
pop
cmp
test
icebp
xchg
fs
out
mulb
outsl
stos
mov
les
mov
daa
inc
push
push
inc
lds
dec
dec
iret
cwtl
push
cmpb
dec
xchg
cmpsl
jp
loopne
call
mov
mov
in
or
addr16
inc
es
fistpl
pusha
ja
pop
jo
gs
push
call
add
and
dec
jmp
sbb
in
mov
mov
add
shrb
bound
lcall
mov
inc
push
add
addl
lret
xchg
sbb
push
inc
cmpb
std
push
gs
cmp
ja
cmpsl
dec
cwtl
inc
sbb
mov
xchg
mov
sbb
dec
mov
lcall
in
test
xchg
mov
push
pop
push
sub
imul
test
and
mov
gs
mov
loopne
int
je
pop
in
pop
scas
rclb
pop
andl
lods
add
test
cmc
inc
addr16
lock
inc
adc
aad
push
xchg
and
inc
repz
lret
loop
rol
daa
cld
adc
add
popa
repz
es
mull
adc
ds
mov
fldl
mov
leave
ret
jp
and
call
pop
aad
inc
pop
scas
adc
shl
add
mov
xchg
rcrl
sbb
adc
pop
pop
ret
ret
ss
outsb
mov
push
cltd
pop
or
out
int
ljmp
or
icebp
xchg
sbb
je
iret
pminub
adc
andl
and
aam
test
or
lret
cltd
mov
scas
clc
jae
arpl
rol
cwtl
jmp
jge
ret
push
repnz
shl
xor
mov
ret
or
dec
mov
pop
outsb
aad
lahf
ds
push
pop
fdivrl
aad
jnp
adc
add
repnz
loope
aam
movsb
insl
fimull
mov
jbe
repz
loop
shll
pusha
negb
enter
rcr
xchg
and
lods
sbb
xchg
ret
movsl
lahf
push
mov
adcb
cmp
and
ret
inc
iret
push
mov
ret
xchg
hlt
into
jb
push
xchg
sub
add
and
outsb
fldcw
les
xor
sar
mov
mov
in
xchg
mov
inc
add
mov
arpl
jne
insl
add
xchg
loope
movsb
lcall
jo
seta
fisubs
cmp
jns
lret
xlat
roll
enter
leave
int
push
repz
shl
mov
test
loop
dec
mov
ljmp
jno
jl
or
repz
mov
jmp
or
and
jbe
xchg
inc
into
pushf
sub
and
pop
dec
and
inc
xchg
in
lahf
xchg
daa
dec
ret
lahf
cmc
cwtl
in
xchg
xchg
xchg
dec
fwait
aad
inc
jo
jns
mov
pop
sub
push
or
dec
sarb
dec
lcall
pop
push
push
sbb
fs
jecxz
fldz
xchg
and
push
lock
lods
push
jge
adc
loop
gs
push
in
pushf
scas
mov
cmc
int3
fwait
jecxz
pop
cwtl
mov
leave
mov
pop
or
inc
fdivrs
daa
negb
mov
mov
loope
mov
mov
lret
fisttpl
popa
sbb
sbb
aas
mov
or
iret
mov
push
jge
iret
inc
push
bound
jno
xchg
ret
pop
loop
clc
fsubrl
mov
rclb
in
pushf
mov
cmp
or
fstpl
jno
jl
adcl
pop
inc
mull
je
lret
sbb
punpckhdq
in
inc
xchg
out
test
into
and
lret
mov
inc
imul
jg
les
xchg
sub
ja
push
enter
je
scas
mov
cs
in
in
lcall
mov
inc
scas
jnp
addr16
les
lcall
mov
decb
cmp
cmp
xchg
nop
pop
adc
add
mov
xchg
add
leave
adc
jo
clc
in
lds
ss
popa
cli
addr16
and
es
repnz
int3
testl
cwtl
xchg
push
pop
mov
push
sub
or
cmp
jecxz
or
mov
lods
jmp
jnp
popa
sub
jnp
aas
vpcmpgtq
mov
test
jle
cmp
cmpsl
out
mov
sbb
dec
roll
roll
scas
and
cwtl
jg
lods
push
or
popf
mov
test
and
std
cmpsl
sbb
out
lea
lods
dec
dec
pop
ljmp
and
lods
cs
test
sahf
loopne
sti
es
shrl
cltd
cmp
out
aas
sub
xchg
dec
or
pop
push
sub
pop
add
mov
aaa
push
jne
mov
aam
inc
mov
mulb
adc
shlb
push
aam
pop
scas
jecxz
sub
jne
idiv
sub
jne
cmp
mov
bound
adc
or
mov
jbe
mov
les
cs
jb
cmp
daa
out
pop
rcrb
nop
das
clc
dec
mov
cwtl
ds
jmp
lock
mov
scas
mov
and
jle
adc
and
cmp
mov
mov
and
fcoms
scas
mov
jge
pushl
push
push
mov
jb
dec
jne
pop
jo
shlb
push
mov
ret
cmp
and
push
ljmp
inc
or
jae
out
inc
push
mov
pop
test
pop
icebp
xchg
cs
inc
xor
jmp
loopne
mov
pop
inc
push
push
mov
mov
bnd
fsubs
in
test
je
outsl
inc
aam
and
popf
data16
into
arpl
xchg
mov
shll
cmp
pop
dec
sub
cld
pop
dec
inc
push
sbb
mov
pop
jp
js
shlb
in
mov
xchg
cs
cwtl
das
fsubrp
int
int
jbe
add
sub
and
lcall
mov
cld
pop
pop
xchg
and
aam
movb
add
cltd
out
lret
es
testl
sbb
sub
scas
push
dec
sub
xchg
push
xor
mov
adc
cmp
cmpl
sbb
lcall
jb
fildl
les
test
jbe
xchg
xor
in
pop
cmp
mov
dec
loop
dec
js
mov
clc
xor
or
test
adc
ljmp
and
pusha
inc
scas
dec
push
or
mov
cmp
stos
decb
mov
mov
orl
push
pop
add
and
andb
fcom
jbe
mov
adc
cld
pop
out
and
jne
mov
cs
mov
mov
fcmovne
js
test
fiaddl
adc
sbb
mov
out
fwait
cmpb
mov
jmp
xchg
sub
gs
pop
rorl
jp
outsb
jmp
pop
xchg
sub
cmc
pop
repnz
push
push
jb
aaa
into
fisubl
in
cmp
sub
mov
mov
cltd
faddp
loopne
mov
sub
or
cs
cli
add
rorb
mov
lret
jne
push
icebp
test
int3
xchg
or
inc
mov
into
and
fucomi
decl
aam
sub
loopne
fucom
sub
sub
hlt
and
fldenv
xlat
xchg
cld
aaa
mov
roll
pop
fs
xchg
push
mov
or
dec
mov
or
rol
ja
mov
dec
cmpsl
push
and
jmp
dec
dec
xchg
mov
call
in
lods
in
mov
add
movsb
mov
push
sub
mov
repnz
lcall
or
mov
inc
sbbb
stos
into
or
mov
repnz
push
xlat
rorl
repnz
push
test
icebp
mov
rorl
roll
inc
or
es
mov
movsb
push
shll
je
popf
mov
divl
xchg
pusha
sti
xchg
xor
rolb
dec
shrl
dec
lea
jb
ljmp
adc
fwait
lods
dec
and
popa
push
sbb
or
pop
sub
push
jmp
orl
sbb
fidivrs
ss
xor
pusha
push
mov
test
cli
lods
add
xchg
mov
add
outsb
enter
push
cs
inc
dec
out
jae
xor
loop
adc
jle
xor
cmpsb
and
push
sub
rorb
mov
aam
sub
inc
add
sbb
and
bound
hlt
jbe
dec
iret
lcall
sub
lea
out
es
mov
outsl
jne
mov
xchg
popa
xchg
ret
fxch
xchg
cmpsl
mov
fmull
dec
mov
loopne
inc
or
inc
lcall
cmpsb
mov
xor
fsub
inc
leave
pop
cli
dec
add
mov
adc
std
push
xlat
sbb
ss
ret
in
sub
mov
outsl
daa
ja
scas
cmpl
or
addr16
pop
pop
xor
push
sub
fimuls
stos
gs
rcr
dec
xchg
call
rcrb
cld
test
jmp
xchg
pop
into
cmp
mov
int3
push
mov
scas
mov
rorb
mov
test
pop
jbe
cmp
sbb
fisubl
cmp
and
inc
es
std
inc
jg
push
fistl
mov
and
sub
sub
mov
daa
sti
movsl
lock
cmp
jp
out
pop
push
cmc
add
sub
loope
call
add
sbb
ds
dec
jnp
outsb
lods
insb
dec
push
or
cmpsb
sub
push
cmp
jb
loopne
jp
clc
inc
out
xor
adcl
fists
stos
xchg
lret
addr16
movsb
jecxz
leave
loope
dec
out
add
movsb
mov
nop
outsl
ret
mov
pop
pop
inc
shufps
testl
outsb
ficoms
adc
inc
xchg
jb
inc
push
add
ljmp
xor
fisttpl
mov
shl
adc
cmp
or
cmp
mov
adc
inc
sub
jb
imul
popf
cltd
cli
test
push
imul
dec
jbe
outsb
mov
xor
es
mov
in
add
popf
cld
sbb
cltd
cwtl
cmpsb
subl
lds
add
jbe
or
mov
dec
push
scas
test
out
es
out
stc
adc
les
fidivrs
sahf
mov
leave
pusha
mov
aaa
negb
leave
inc
sbb
loopne
ljmp
mov
push
pusha
jmp
add
divl
mov
stc
loopne
inc
push
cmp
xor
mov
sbb
fs
pop
xchg
pop
fldcw
add
cmp
imul
jnp
test
jle
xor
flds
hlt
or
int3
xchg
das
mov
iret
mov
enter
adc
fs
xor
popa
and
mov
add
adc
test
inc
std
test
xor
add
jle
sub
insl
xchg
add
cmp
adc
test
mov
loopne
scas
lcall
addr16
mov
add
nop
mov
lds
dec
hlt
xor
mov
sub
inc
fimull
jge
dec
ja
cmp
mov
xchg
jl
movsl
mov
adc
stos
dec
dec
cli
cmpsl
cmp
mov
das
xlat
dec
inc
lods
mov
divb
push
or
mov
std
scas
int
icebp
cli
test
iret
lock
mov
outsb
adc
enter
out
fnstenv
xchg
jle
leave
jo
xchg
stos
fimuls
add
gs
mov
clc
jmp
add
add
sub
fbstp
imul
jnp
mov
jns
imul
dec
shr
xchg
and
push
mov
fbstp
add
cmp
or
mov
in
aam
lods
xchg
sbb
repz
outsl
push
xchg
enter
and
mov
and
sti
cmc
test
inc
mov
add
jb
jbe
mov
adc
lret
aam
nop
in
rorb
test
loopne
insl
imul
jle
outsl
int3
cmp
enter
mov
pushf
xor
and
clc
and
lds
cmp
sarb
dec
cmp
push
cwtl
stos
mov
mov
dec
sbb
jp
loope
rclb
int3
arpl
pop
dec
inc
sub
pop
inc
lods
cmp
push
aas
clc
mov
xchg
sub
nop
dec
mov
shll
punpckhdq
jle
push
mov
js
jmp
adc
xchg
fidivl
cmp
aam
sbb
mov
mov
mov
punpckhwd
mov
aad
xchg
insl
mov
push
xor
sbb
leave
js
leave
add
fs
mov
icebp
push
sbb
inc
leave
bound
imul
loope
je
push
out
push
jge
jno
iret
mov
dec
pop
cmc
xchg
lods
fwait
dec
stc
mov
cmp
in
push
sbb
test
xor
adc
mov
and
jbe
jne
xchg
pop
dec
scas
pop
or
dec
in
addb
js
into
test
loope
pop
mov
sbb
add
div
ss
negb
out
rcrb
imul
out
shrl
push
sbbb
aad
roll
mov
loope
dec
pop
lret
pop
icebp
inc
push
mov
iret
clc
pop
inc
scas
pusha
lcall
shll
or
insl
sub
mov
xor
lods
and
out
into
test
push
into
cmp
sarb
mov
sbb
dec
dec
addb
daa
pushf
mov
xchg
and
test
push
fstps
push
inc
js
outsl
daa
loop
mov
jmp
loopne
lods
rcrl
sub
mov
adc
repz
pushf
data16
add
jb
fistl
add
repnz
popa
mov
stos
and
adc
dec
int3
and
jmp
test
cmpsl
mov
in
push
add
pop
test
xor
test
add
ds
and
in
imul
orb
incb
push
inc
fcoms
jecxz
insl
mov
adc
xor
sbb
add
out
mov
lcall
fisubs
gs
fldl
test
ss
sbb
sbb
jg
inc
mov
mov
cli
lods
sbb
jle
pop
lock
data16
add
repz
lods
cmp
pusha
test
fs
lcall
sbb
leave
xchg
ds
inc
lods
mov
ds
ret
rcr
mov
dec
fcoms
push
out
mov
xchg
ret
addr16
movsl
cmp
xor
add
adcl
out
mov
push
leave
or
pop
ret
pop
test
mov
repnz
mov
std
xchg
outsb
xor
loop
lret
es
mov
test
xor
fists
stos
psubq
mov
cmp
loope
ss
push
push
push
outsl
flds
mov
out
int3
pop
popa
jg
out
mov
data16
pop
cwtl
and
dec
jecxz
out
sbb
test
pop
cmp
jmp
pop
cs
xor
lret
pop
fidivl
popa
into
popa
xchg
and
notl
mov
mov
insl
insb
and
sbb
cmp
test
int3
pop
loope
sbb
xchg
ss
hlt
lret
xchg
out
xor
cli
mov
movsl
xchg
or
lods
xchg
mov
ficoml
es
add
xchg
scas
jmp
or
mov
aaa
cmp
push
dec
loop
insl
loope
lcall
shrb
imul
loop
clc
imull
cli
mov
jl
cmp
jns
dec
addl
fidivs
inc
jmp
loopne
sbbl
mov
test
sub
shrl
aam
adc
roll
mov
jg
fisubl
lea
cmp
mov
xchg
insb
scas
lds
outsl
dec
xor
nop
jp
std
cmp
movsl
sub
fadd
mov
sub
and
xor
adc
loope
adcb
xlat
cmp
mov
mov
fwait
and
pop
fnstcw
jo
mov
test
xor
insl
scas
or
lcall
dec
icebp
add
add
sbb
mov
mov
enter
int3
lret
pop
stc
mov
inc
out
xchg
jl
push
pushf
mov
lds
mov
repz
orl
pop
jnp
cmp
pop
sbb
mov
mov
xchg
pop
mov
das
out
push
jl
push
scas
cmp
addr16
and
gs
arpl
ja
stc
test
outsl
inc
jae
pop
cmp
cmp
scas
and
pop
mov
aaa
das
int
popf
dec
and
ljmp
adc
stos
adc
pop
push
and
mov
jnp
cmp
popa
jl
pop
lahf
testl
mov
mov
xlat
arpl
frstor
jecxz
xchg
push
adc
lret
ret
out
push
push
mov
ret
jp
xlat
push
xor
daa
int3
enter
jb
and
arpl
jb
sub
aam
jg
and
into
xchg
cld
js
out
test
pushf
xchg
sahf
repnz
mov
push
sub
test
test
call
push
and
mov
les
shrb
xor
sbb
push
push
and
adc
jmp
aam
mov
in
pushf
dec
in
jmp
xlat
ljmp
mov
int
xor
inc
push
stc
insl
int3
mov
ffreep
adc
xchg
insb
out
scas
out
mov
mov
lds
pop
push
repz
lock
jle
mov
jg
lss
mov
pop
stc
push
sti
subb
hlt
dec
lret
hlt
pop
xchg
xor
ds
sub
fwait
cmp
int3
aam
and
push
nop
call
stos
ret
sub
mov
sbb
sub
jbe
jns
add
ss
lcall
pop
mov
mov
push
push
add
jnp
jge
dec
lods
rolb
or
push
xlat
mov
sbb
fistl
mov
cmpsb
outsl
dec
push
or
adc
dec
add
mov
xorl
push
fwait
int3
mov
fisttpll
or
sti
inc
add
insl
cmp
or
lds
fidivrs
push
or
mov
outsb
mov
insb
mov
cmp
cmp
insb
les
negl
mov
rol
cmp
cltd
call
std
inc
cmpsl
pop
stc
sub
lods
push
xor
nop
pop
ss
jbe
push
popl
cmp
fnstcw
inc
bnd
adc
adc
mov
movsl
sub
shl
and
xchg
loope
xorl
add
popf
sbb
add
xor
push
lret
bound
call
xchg
sub
data16
or
test
bound
insl
cwtl
mov
decb
ret
push
add
test
or
push
dec
xlat
mov
popa
clc
push
lock
mov
mov
cli
push
inc
es
sub
inc
int
and
inc
push
or
lods
add
jbe
into
cmp
add
fwait
xor
adc
das
ss
push
lret
out
in
cmp
pop
shll
jns
sub
and
and
or
shl
cld
add
sbb
add
neg
inc
cmp
in
subl
les
not
popa
add
sbb
jno
mov
jmp
out
lock
mov
or
mov
insb
or
psrld
in
xchg
dec
dec
sub
pop
loopne
cs
xchg
cmpsb
inc
and
pop
sbb
cmc
inc
hlt
push
sub
add
or
sbb
push
icebp
outsb
and
mov
inc
and
fdivl
adc
std
es
cmpsl
loop
push
fwait
movsb
pop
cmp
and
cmp
or
mov
xchg
push
sbb
and
movsb
pop
adc
pop
nop
mov
xchg
mov
movsl
cmp
dec
push
nop
jecxz
arpl
fcmove
jp
mov
sar
jno
xchg
testb
xchg
add
sahf
out
adcl
fistl
aas
enter
dec
pop
push
xorl
imul
out
xchg
test
jne
leave
daa
in
shll
push
out
mov
jne
test
xchg
sti
or
ret
xchg
xlat
loope
or
push
or
xor
mov
adc
mov
sub
test
adc
fmull
and
addr16
nop
xor
or
mov
scas
mov
mov
lret
sub
nop
pop
mov
icebp
cli
imul
aaa
in
mov
push
loope
xchg
mul
clc
cmp
pop
out
cld
cmp
ja
inc
fwait
les
push
rclb
inc
test
adc
mulb
rorl
sub
fmull
imul
xchg
jo
add
cmpl
cmp
dec
in
dec
mov
add
lods
inc
push
in
xchg
cli
lret
jbe
mov
aas
pusha
xor
ds
sub
stos
cld
out
dec
sub
pop
loop
cmpsl
adc
sub
dec
ss
in
cs
push
adc
and
push
lahf
sub
fnstsw
pop
cmp
aam
test
cld
jg
cwtl
iret
jbe
jo
popf
popf
addl
and
je
cs
les
orb
mov
sub
pop
jae
or
repnz
push
xchg
cmp
enter
and
push
push
js
lds
dec
out
sbb
ret
in
sarl
dec
ljmp
movsb
addr16
rcl
imul
mov
pop
pushf
sbb
mov
push
inc
inc
pop
mov
sub
sbb
into
mov
push
mov
les
movsl
cmp
scas
xchg
cli
xchg
add
lahf
es
mov
pop
push
in
jmp
aaa
adc
adc
fstpl
pop
repz
xor
lcall
add
adc
pop
lods
test
adc
movsl
das
icebp
xchg
pop
jb
ret
les
rclb
ljmp
adc
sbb
imul
aas
mov
add
pop
lock
mov
dec
add
jl
pop
cmc
mov
inc
clc
in
sub
mov
push
jg
cmp
loopne
jno
fimull
dec
notb
and
mov
jmp
aad
arpl
xchg
sbb
dec
movsb
insl
out
aam
mov
jg
fcomps
icebp
pop
push
enter
js
lods
push
outsl
xor
gs
insl
cltd
inc
cmp
cld
mov
xorl
dec
dec
or
add
add
jne
addr16
les
xor
inc
fdivs
push
pusha
ss
adc
inc
push
out
sub
mov
scas
or
sub
pop
push
adc
sbb
out
cld
dec
cmp
jg
mov
pop
sbb
cmp
pop
repz
sbb
sub
mov
push
adc
filds
jo
xchg
das
in
imul
icebp
and
dec
add
pop
sub
dec
stos
or
sub
lods
fcomp
push
stos
mov
sub
or
jmp
test
test
mov
or
in
mov
push
in
push
xchg
aad
out
notl
cwtl
jge
es
imul
call
stos
mov
lret
sbb
lcall
sbb
inc
xchg
xor
cltd
cmp
lret
add
aad
jl
roll
cmp
inc
inc
inc
adc
cmp
out
mov
push
je
fnstcw
ret
xlat
mov
js
and
movsl
inc
call
rorb
inc
pushf
arpl
sbb
jno
inc
pop
cmp
les
lods
ret
inc
adc
mov
sbb
lock
push
xchg
fcoms
or
mov
outsl
popa
les
testb
mov
sub
pop
jle
sub
mov
dec
mov
jle
xor
pop
sbb
xchg
mov
mov
orb
sahf
addr16
jmp
xchg
cmp
add
ljmp
pop
add
es
or
into
mov
inc
aas
mov
pop
jp
add
cld
fldenv
push
push
cmp
notb
mov
add
mov
push
clc
and
push
sti
in
sub
test
loop
shll
mov
push
adc
negl
pushf
mov
jns
mov
xlat
pop
in
xchg
push
mov
out
test
push
gs
adc
hlt
push
lret
stos
and
push
rcrb
sub
ret
jecxz
mov
push
inc
sub
repz
stc
jo
into
lret
xor
in
push
test
movsl
rcll
insb
stos
test
xchg
jb
adc
dec
orl
idivb
imul
and
test
push
pop
mov
repnz
sbb
cwtl
inc
inc
lret
insl
cmpsb
sbb
popa
mov
mov
fadd
push
addl
push
popf
mov
jo
or
mov
call
sbb
test
ret
scas
std
test
inc
inc
xor
cmp
xchg
imul
mov
mov
ja
jp
rcrb
data16
repnz
pop
cmp
out
inc
inc
jmp
leave
int
pop
cmp
dec
jmp
cmp
add
xor
adc
ds
ljmp
mov
push
pop
dec
iret
insl
fwait
loopne
dec
lock
hlt
shlb
dec
insl
xor
movsl
hlt
aad
cmp
shlb
fcmovnu
loope
ljmp
push
xlat
mov
push
outsb
or
cmp
cltd
xor
ljmp
xchg
push
and
adc
mov
and
cmpsl
xchg
mov
stos
mov
scas
push
test
aad
cli
adc
and
test
pushf
fidivl
dec
sub
cs
addr16
pop
aas
add
push
cli
mov
shrb
jp
shrd
lods
mov
cmp
not
mov
dec
test
pop
jnp
es
fidivrs
std
mov
sbb
xchg
insl
dec
pop
outsb
loope
xchg
mov
mov
in
add
sub
push
sbb
mov
dec
lret
cld
shll
mov
mov
sub
in
mov
stos
stos
and
or
adc
mov
pusha
call
ja
stos
gs
popa
fidivrs
push
in
pop
in
cs
mov
xchg
jae
pusha
sub
je
lea
out
cltd
pop
add
inc
xor
gs
es
scas
adc
pop
out
xor
stos
into
hlt
jae
and
fwait
shlb
and
outsl
push
lea
mov
pop
mov
mov
mov
orl
testb
mov
es
dec
js
jb
shlb
daa
lcall
adc
push
xor
clc
jb
xchg
clc
push
aaa
adc
aam
push
push
or
dec
rorb
lea
lret
hlt
jecxz
mov
xchg
je
fwait
mov
sub
lods
fucomp
imul
pop
std
or
in
dec
jnp
jg
imul
cmp
stc
sbb
insl
sbb
add
inc
add
aad
sahf
pop
cmp
mov
mov
xchg
adc
xor
bound
mov
stos
jns
mov
lret
je
ret
ret
loope
adc
in
cmc
xor
add
int
out
loopne
fcomip
test
add
stc
mov
sub
pusha
push
lods
decb
xor
mov
cld
mov
fistpl
inc
lret
sub
cmpsb
sbb
mov
sbb
loopne
mov
xlat
mov
xor
sub
test
cmp
push
inc
stos
xor
inc
push
fcomp
push
mov
je
lcall
fmull
mov
int
mov
mov
xchg
popf
cmpsl
js
dec
cmp
mov
cmp
shll
lea
xchg
sbb
push
jb
xor
jb
adc
int
inc
cmc
mov
sarb
pushf
adc
bound
jmp
inc
lock
or
dec
push
fcompl
lods
mov
call
imul
test
loope
mulb
sub
in
dec
push
mov
cwtl
es
adc
jge
add
xor
aaa
lods
fstpt
push
jge
cmp
mov
fwait
xchg
push
call
cwtl
das
sbb
jae
xchg
cmp
ja
clc
lods
and
cld
cwtl
inc
in
mov
mov
sarl
sub
mov
or
es
ret
push
mov
hlt
stos
pop
jecxz
pop
sbb
xlat
jns
pop
mov
dec
dec
mov
dec
and
adc
out
loopne
decl
pusha
testl
sub
xlat
adc
pop
inc
clc
fdivrs
adc
into
pop
or
jge
xchg
pop
adc
mov
jp
lahf
daa
ret
roll
mov
mov
dec
cmc
in
daa
jno
mov
int3
jge
std
cmpsl
cmp
fsubr
mov
pusha
pop
pushf
or
jo
xor
cmp
popf
sbb
insb
add
xchg
mov
inc
sahf
jg
xchg
xchg
mov
int
push
pop
cmp
nop
ss
push
insl
add
pushf
xchg
dec
in
cmp
loop
imul
dec
sbb
ja
fs
jns
dec
fists
lahf
xchg
in
test
lods
inc
or
lret
xchg
movb
fistl
add
jne
push
push
fisubs
add
gs
pop
pop
add
ret
pop
mov
pop
rclb
fwait
outsb
ficomps
into
shl
bound
push
mov
jae
or
mov
push
outsl
rorl
repz
mov
icebp
and
jns
jecxz
nop
xchg
pop
dec
fnstenv
push
jns
sub
fsubs
pop
iret
adc
mov
adc
out
sbb
ret
insl
int3
and
sbb
jp
imul
iret
lahf
pusha
add
sbb
shl
repnz
mov
xchg
iret
mov
mov
or
add
push
adc
inc
mov
add
mov
cmp
nop
inc
xchg
cmpsl
fstpt
sbb
adc
sbb
mov
cli
mov
sub
sbb
movsb
push
aad
insl
lds
add
cmpsb
pop
aas
pop
rorb
cmp
cmpsl
mov
push
sub
ss
bound
push
jmp
inc
xor
mov
andb
mov
xlat
jbe
and
nop
stos
nop
icebp
imul
shl
pop
mov
in
out
mov
iret
in
in
sub
mov
fs
or
mov
mov
sub
movsb
fwait
repz
iret
sbb
mov
fisttps
inc
mov
fstpt
fcmovne
out
in
std
jmp
mov
adc
mov
fs
pop
xchg
dec
cmp
mov
fistl
and
xchg
mov
aad
jmp
mov
dec
std
imul
and
mov
adcl
jmp
and
dec
and
dec
lods
inc
pop
push
loope
cmpb
aaa
sbb
fstpl
fdivs
and
mov
push
lret
lret
cmc
daa
inc
fcompl
inc
adc
sbb
das
test
mov
inc
aad
mov
ds
xchg
ret
cwtl
add
xor
dec
dec
xchg
cmp
sbb
sbb
mov
mov
jae
cwtl
adc
push
dec
add
add
movsl
lds
and
sti
ret
mov
aas
xchg
xchg
sub
xchg
pop
push
inc
cmp
adc
xchg
xchg
lds
or
dec
jmp
jecxz
mov
inc
loopne
shr
push
in
or
mov
push
push
mov
popl
int3
test
mov
imul
mov
enter
shrb
lods
lods
cmpsb
les
lret
loopne
aam
mov
ds
movsl
inc
xchg
mov
push
mov
in
sub
addr16
cld
lcall
jmp
sbb
lret
mov
shll
movsl
cmp
sub
xor
and
aam
xor
lods
pop
ret
dec
lods
into
sub
mov
outsl
jle
push
push
inc
movsb
sbb
les
push
inc
push
push
fisubrs
inc
gs
cli
adcb
xchg
ss
adc
popa
cli
inc
mov
gs
outsl
pop
push
jmp
incl
cli
sbb
ljmp
out
outsb
xchg
cmp
lods
pop
push
pop
js
ds
sub
inc
adc
pop
fcmovnu
imul
imul
sbb
mov
jns
dec
pop
call
xor
lahf
in
jp
jge
xchg
dec
sbb
lahf
and
adc
stos
xor
fstpt
or
mov
ficomps
fs
stos
inc
mov
adc
add
pop
mov
out
dec
lahf
adc
mov
psrlq
addr16
add
mov
mov
push
cmp
push
add
mov
adc
adc
pop
cmp
gs
mov
sub
nop
ret
jb
repz
andb
pop
arpl
xor
cmp
mov
pop
mov
pop
sbb
add
into
xor
jmp
inc
std
cs
out
sbb
jmp
ret
imul
adc
test
ret
pusha
lock
clc
and
xchg
pop
inc
inc
sbb
cltd
mov
ss
jae
inc
out
mov
repnz
push
scas
inc
mov
dec
fsubrs
and
lods
je
fisttpll
into
dec
out
cmp
sub
pop
mov
xor
dec
jg
lret
pop
or
sbb
ret
or
popf
jae
pop
xchg
lods
cli
xchg
push
movsl
xchg
xchg
adc
mov
jae
sarl
jp
punpcklwd
fstp
mov
fs
test
fnsave
or
clc
sbb
scas
loopne
sbb
decl
jecxz
aaa
into
mov
mov
xchg
dec
xorl
push
stos
fdivs
fstps
inc
push
jno
pop
arpl
int
mov
fstps
sub
push
pusha
xor
mov
fdiv
or
mov
jmp
cmp
jo
sub
lret
dec
push
jno
pop
inc
inc
idiv
nop
adc
aas
imul
xorl
mov
push
mov
dec
jge
scas
mov
add
cmpsl
ss
fldenv
mov
push
rcr
sub
jbe
lods
pop
testb
jle
sbb
std
pop
pop
cmpsl
pop
int3
insl
ja
or
and
xor
loopne
mov
cmp
xlat
jge
adc
mov
call
shll
inc
dec
js
fstpt
push
pop
cmp
mov
int3
arpl
mov
out
push
out
ret
and
in
fdiv
ret
bound
aas
repnz
ss
aas
push
imul
cwtl
leave
ja
cwtl
mov
sbb
mov
mov
adc
pop
fiaddl
fiaddl
or
int
lahf
pop
pop
fdivs
mov
cmp
das
sub
and
push
iret
xor
push
hlt
out
mov
icebp
xchg
push
popf
fs
push
adc
push
shrl
dec
dec
pop
xchg
adc
inc
adc
lcall
mov
imul
pop
scas
jmp
lahf
push
cmp
cmc
dec
lret
js
inc
roll
cmc
xchg
je
leave
shlb
pop
pop
jns
test
pop
adc
sbb
enter
sbb
or
ljmp
fadds
stos
jecxz
mov
and
adc
jecxz
xor
adcb
dec
and
mov
sbb
mov
inc
xor
ljmp
into
sub
xbegin
into
xlat
test
cld
adc
xchg
jno
mov
pop
xchg
sbb
inc
movsb
cmp
pushl
sbb
lret
daa
adc
and
xchg
cmp
pop
hlt
fwait
in
ss
sub
mov
aad
xchg
pop
insl
subb
lret
fisubrl
mov
lock
mov
divb
pop
das
test
stos
repnz
das
lret
data16
sub
mov
jno
notl
rcrl
aam
mov
jge
rorl
xchg
xchg
inc
testb
mov
xchg
sub
xlat
mov
cmc
xor
aaa
fiadds
aad
mov
pop
notb
xchg
or
dec
mov
inc
cs
cld
fwait
out
out
xchg
in
pop
aaa
out
fisubs
sub
outsb
clc
outsl
xor
pop
lock
imul
bound
sbb
xchg
icebp
inc
cmp
mov
or
or
pop
and
out
push
pop
pushf
pop
repnz
cmp
cmp
loop
mov
leave
lahf
ss
mov
in
sub
mov
stos
xor
pushf
mov
idiv
ss
mov
add
pusha
cmp
cmp
xchg
jle
sbb
or
loope
inc
test
decb
mov
xchg
outsl
test
mov
test
shrb
rol
pop
je
or
rcll
add
cmp
mov
push
push
pop
pop
cmpsl
fnsave
cmpsl
ljmp
popf
ret
repz
cs
lock
insl
adcl
ret
in
sbb
lea
mov
cld
pop
jb
clc
mov
or
adc
xor
roll
clc
lcall
pop
ret
dec
lcall
or
mov
iret
fistpl
mov
repz
jnp
fbstp
adc
iret
inc
push
test
sahf
mov
add
repz
rep
icebp
sbb
lds
aad
ret
xor
loopne
call
mov
cmpsb
repz
cmp
clc
mov
add
das
insb
out
in
push
cmc
push
mov
subb
mov
inc
call
jae
ljmp
mov
xchg
daa
push
lea
ret
push
imull
jae
decb
mov
cmc
orl
lret
inc
cmp
fiaddl
sti
mov
rcll
mov
aad
sub
push
nop
cmc
add
cmpb
or
cwtl
jecxz
fidivl
mov
adc
push
loopne
push
mov
nop
addl
sub
jbe
push
mov
mov
adc
pop
lret
aaa
shlb
in
test
lock
enter
out
jmp
fsub
mov
dec
addr16
fnsave
push
hlt
mov
sahf
sti
xchg
rol
pop
repz
jno
sub
popf
jp
or
clc
jae
test
repz
divl
cmp
sbb
cmp
mov
add
jp
push
xchg
pop
push
add
jbe
nop
cmpsl
push
pop
add
sbb
movsb
pop
pop
lods
inc
dec
and
in
lods
dec
jp
mov
jne
ret
jge
data16
outsb
test
xor
gs
cmp
mov
inc
fstpt
mov
mov
loope
xchg
push
inc
fwait
popf
push
fucomp
test
mov
pop
mov
das
lcall
cwtl
pop
dec
sbb
jnp
stos
jmp
mov
out
xchg
and
mov
imul
pop
test
fcom
xchg
popa
sbb
movsl
ret
add
insb
add
inc
into
and
dec
mov
adc
stos
inc
imul
enter
aas
stos
ret
int
cwtl
sbb
out
popf
xor
mov
pop
and
xchg
cmp
test
pop
xor
fiadds
pop
pop
add
jne
dec
dec
repnz
adc
sbb
aad
mov
adc
jns
rep
in
mov
xchg
cwtl
xchg
ret
jle
ret
flds
xor
jo
iret
gs
shlb
sub
pop
fsubrs
repz
fwait
scas
addl
push
hlt
sbb
das
dec
pop
ffreep
push
idiv
add
and
aad
mov
ret
pop
adc
mov
je
jne
pop
cmp
mov
fcoms
and
cmp
jne
xchg
inc
jne
mov
xor
sub
jmp
ss
dec
in
adc
push
imul
jne
mov
int
mov
pop
mov
and
mov
in
mov
mov
adc
in
push
fsts
push
mov
sbb
cld
jmp
cmp
sbb
push
out
imul
jmp
imull
popf
sbb
ret
xlat
outsb
icebp
or
jle
call
mov
mov
xchg
test
stc
dec
out
and
fldt
pop
repz
cmpsl
rcl
dec
scas
inc
adc
xchg
dec
add
cmc
addr16
adc
adc
jae
xor
sub
jne
mov
add
add
and
sbb
fisubs
iret
sbb
sub
movsl
cld
xchg
and
jl
xor
ret
jnp
sbb
or
mov
dec
mov
lret
jl
test
push
or
sub
shr
sahf
lea
cmpsb
or
xchg
dec
shll
aad
mov
andl
aas
jns
mov
mov
xchg
sub
jnp
pusha
rcll
sti
jg
xchg
scas
popa
jl
pop
movsl
mov
out
sbb
ds
mov
jle
sub
ret
dec
cltd
jns
mov
sahf
pop
inc
pusha
inc
fldt
push
jmp
dec
lods
inc
jge
fucom
jnp
out
cmpsl
mov
mov
sarb
cmp
jnp
shlb
loopne
cltd
das
loop
int3
mov
nop
adc
lret
mov
repz
int
adc
sbb
daa
cmp
testl
inc
inc
push
out
je
out
add
jbe
xchg
scas
adc
mov
loopne
and
cmp
cmc
dec
not
lahf
jg
xlat
xlat
xor
shl
adc
add
xchg
dec
stos
adc
fcoml
dec
cmp
mov
cwtl
lret
push
scas
out
push
push
sti
aas
and
cwtl
xlat
sbbb
loope
jmp
or
out
push
lea
lea
mov
pop
aad
jno
push
dec
ja
mov
mov
dec
mov
loopne
cmp
mov
sub
nop
pop
pop
test
or
inc
fisubs
inc
std
push
cld
adc
mov
mov
ret
inc
in
repnz
fs
in
aad
test
sub
inc
std
xchg
int
cmp
inc
push
popf
xchg
and
cmpsb
in
sti
sub
mov
mov
or
and
push
push
and
aam
js
loope
cwtl
jge
test
test
jo
lock
mov
mov
sbb
xchg
xor
mov
stos
xor
push
jb
rol
cmp
adcb
pop
pushf
sub
rcl
xor
lahf
ljmp
push
push
dec
in
mov
enter
ret
cmp
lahf
jnp
rcll
pop
cmp
pop
mov
test
into
test
xor
push
lcall
xor
aad
and
dec
adc
lcall
xchg
sbb
int
enter
subb
repz
mov
lods
arpl
in
or
lea
cmp
pop
dec
fwait
lea
icebp
out
adc
inc
imul
int3
jg
lahf
cld
xchg
rcll
repz
cmp
iret
call
std
jb
inc
cld
ds
xor
xlat
add
xchg
jl
xchg
mov
shrb
cwtl
pop
dec
sarl
mov
std
lret
popa
subb
rcrl
verw
mov
mov
mov
jg
jge
adc
adc
xor
pushf
sub
fcompl
mov
xchg
dec
push
xchg
add
xlat
jecxz
xor
movsl
popa
test
pop
stos
push
or
test
and
orb
fstpt
stos
es
inc
inc
gs
xlat
dec
adc
shll
xchg
mov
cltd
std
ljmp
jo
sbb
cmp
pop
scas
in
andl
cs
int3
lret
add
add
dec
inc
and
cmp
dec
or
push
and
and
icebp
adc
jns
sti
fwait
in
xchg
mov
mov
pusha
enter
movsl
mov
cld
leave
insb
pop
imul
sbb
xchg
pop
or
mov
icebp
mov
cltd
push
sbb
and
jo
lcall
enter
dec
xor
push
or
inc
in
loopne
or
inc
adc
jmp
out
test
jg
push
cs
jmp
jbe
out
cs
scas
ljmp
outsl
mov
jae
mov
inc
pop
mov
movsb
adc
rcll
aaa
js
cmc
and
adc
push
add
cmpsb
ss
mov
sbb
push
insl
inc
dec
gs
cmpsl
rorl
inc
data16
push
orl
popf
lret
in
in
in
sub
lods
jnp
cmc
mov
ficompl
sbb
xchg
mov
sub
lock
in
jl
insl
dec
in
cmpsb
push
cltd
hlt
adc
nop
lret
jno
dec
dec
in
in
or
cs
ljmp
lock
mov
mov
shrb
mov
mov
mov
es
mov
cmp
call
ret
push
xchg
fcoml
repz
mov
es
inc
cli
sbb
je,pt
dec
ret
cmp
insb
sbb
movsl
pop
mov
rcrl
jp
xor
out
das
push
call
arpl
sbb
repnz
scas
add
xchg
cmp
mov
imul
jmp
dec
movsl
fdivrl
cltd
pop
enter
mov
mov
inc
fstps
iret
pusha
mov
fidivrs
fadd
loop
mov
pop
pop
and
pop
std
or
xor
iret
and
mov
xchg
and
lods
test
add
push
loop
shl
jb
insl
loope
shl
inc
mov
hlt
add
or
faddl
mov
mov
push
jno
in
cmp
imul
mov
dec
ja
pop
xor
fdivrl
sahf
sti
ds
mov
movsl
add
pcmpeqw
or
andb
int3
arpl
xchg
insl
or
cmp
mov
mov
xor
xchg
aas
faddl
sub
adc
xchg
cmpsb
cmpsl
xlat
sub
lods
xchg
mov
xor
pop
mov
xlat
out
aaa
pop
or
bound
pop
push
aad
and
push
notl
rol
pop
cmpsb
sbb
ret
jle
or
in
mov
fisubl
fnstcw
fldl2t
mov
mov
mov
out
addr16
sbb
test
push
dec
in
out
push
jno
jecxz
pop
fstl
xchg
add
fsubl
stos
push
in
rorb
jno
out
mov
js
hlt
mov
jecxz
or
cltd
and
mov
xorl
outsl
aaa
cmp
adc
rcrb
jg
adc
and
test
jnp
pop
sub
test
mov
rcrb
push
mov
jo
gs
push
and
jbe
jne
jb
fdivrs
pusha
jmp
sbb
and
add
jbe
insl
mov
in
push
lock
cltd
insb
outsl
out
daa
sahf
xchg
iret
stc
pop
push
insb
mov
mov
lcall
dec
aaa
sbb
lods
cmp
xchg
inc
stc
sbb
movsb
mov
lret
pushf
call
fucomip
loopne
fs
or
push
pop
sub
scas
cwtl
dec
decl
sub
mov
inc
pop
imul
jae
cmpsb
push
shl
rorb
pop
mov
pushf
je
inc
stos
or
mov
mov
xor
arpl
repz
out
aam
mov
outsb
idivb
iret
and
sub
jo
out
jns
adc
xlat
jge
fwait
cmpsl
mov
in
les
sub
fcoml
aas
mov
cli
sub
pop
sahf
scas
imul
xchg
js
inc
cmpsb
je
and
xor
inc
scas
jl
jmp
imul
repnz
jne
lods
sub
pushf
or
inc
jmp
or
js
add
jp
sbb
jl
add
insl
mov
dec
mov
stc
or
stc
cwtl
cltd
adc
xor
dec
std
cltd
jnp
addr16
ret
bound
in
push
mov
shl
jbe
frstpm(287
fisttps
stos
test
mov
xor
adc
push
loopne
sbb
stos
outsl
and
sbb
mov
in
test
icebp
or
in
jnp
or
pop
das
sub
sbb
in
xchg
cmpsl
adc
or
push
jne
pop
sbb
push
push
leave
jecxz
fidivl
add
xor
out
add
jnp
push
mov
jge
iret
pop
adc
inc
pop
out
fisubrl
iret
mov
mov
push
cmpsb
in
sub
mov
into
hlt
sub
int3
lret
cld
cmpb
imul
nop
pop
xchg
jmp
shll
daa
lods
adc
fldl
sarl
mov
jge
fwait
clc
stc
bswap
sub
and
ja
add
jle
movsb
jmp
xchg
and
outsl
out
cmp
mov
in
or
je
or
in
in
rol
or
pop
pop
loop
bound
scas
add
push
cmpsl
mov
xor
jl
test
in
popf
mov
xor
enter
mov
adc
or
test
test
or
add
retw
jp
mov
mov
adc
ret
push
sub
mov
dec
xor
mov
pusha
adc
rcll
flds
jae
out
mov
dec
jbe
das
mov
xchg
enter
dec
cmp
mov
int3
mov
in
sbb
xor
xor
jb
xor
clc
movsl
or
call
loop
fnstenv
sarl
stos
pop
mov
scas
mov
loopne
cmp
movsl
es
or
lock
dec
push
in
repz
das
ret
test
and
ljmp
sub
jp
insb
imul
adc
xorb
jmp
mov
adc
mov
and
shrl
shll
mov
clc
cwtl
loop
and
aad
push
pop
call
fldlg2
orl
call
mov
popa
push
sub
or
sub
jle
inc
mov
in
sbb
inc
rcll
test
pushf
mov
mov
jo
dec
scas
lods
inc
and
cmpsl
cmovne
idiv
lock
movsb
lret
lds
jno
jb
inc
xchg
cs
adc
imul
cmpsb
cmc
adc
mov
xlat
mov
ret
pusha
sub
in
xor
or
xchg
ss
push
stos
push
mov
adc
call
testb
mov
sbb
lahf
rorl
cmpsb
and
shrd
fcmovne
aas
inc
loop
in
cld
aam
sbbb
lret
xorl
lahf
adc
sbb
cld
iret
int3
pop
in
and
add
mov
pop
mov
out
scas
les
jae
push
idivl
pop
enter
xor
lds
sti
pop
mov
inc
mov
jno
push
and
and
popf
pop
or
cltd
xchg
inc
sub
lahf
sbb
fstps
stc
mov
sub
nop
push
pop
inc
pop
mov
fwait
pop
dec
mov
nop
pop
jle
add
cs
repnz
fdivr
lahf
mov
jmp
and
in
cli
das
sub
arpl
xchg
or
fdivrs
in
adc
inc
xchg
fwait
imul
int3
mov
aad
sub
aas
mov
dec
mov
and
ficoms
lds
or
push
jae
jae
adc
sbb
sbb
sub
stos
jmp
stos
bound
push
repnz
lock
fcoms
lods
or
jne
pop
test
call
test
lret
push
sub
scas
inc
and
mov
push
or
fidivrs
dec
hlt
push
dec
jmp
ljmp
mov
push
jnp
xlat
jge
repnz
daa
int3
inc
xchg
adc
push
stc
or
inc
xchg
call
test
and
fcoml
and
out
imul
rclb
cmp
rclb
insb
daa
mov
mov
xchg
stos
enter
xor
lea
jo
pop
out
es
std
xchg
dec
dec
mov
imull
push
mov
stos
stc
test
nop
lods
daa
mov
in
add
jo
push
inc
jmp
out
movsb
xlat
add
push
scas
ficoml
ljmp
cmc
cmp
sbb
push
add
and
and
and
sub
pop
push
mov
icebp
pop
cmpb
jecxz
add
xor
aaa
and
add
lods
mov
jle
sbb
pop
movsl
loope
add
and
add
dec
test
lock
call
les
mov
rorl
add
shrb
into
arpl
repnz
fadd
add
sti
mov
jg
mov
rol
pop
ljmp
loop
sti
pop
mov
inc
lea
jle
fisubl
insb
outsb
jl
pop
shrb
testb
cmpsl
adc
or
test
insl
adc
pop
js
push
and
lock
xor
xchg
sub
cmpsb
ljmp
mov
bound
xchg
jge
out
push
aaa
out
jge
mov
shl
daa
mov
stos
jns
jl
add
mov
xor
ja
mov
mov
insl
cmpsl
add
shrl
lods
and
inc
popl
jmp
nop
cmp
mov
xor
pop
sar
pop
lods
xor
jl
xor
repnz
pop
adc
pushl
enter
leave
jns,pn
popa
stos
popa
xor
pop
inc
or
stc
jnp
filds
xchg
pushf
arpl
aad
movsl
sub
jbe
sub
dec
xor
subl
jo
incb
adc
loopne
or
jle
jecxz
add
mov
mov
cwtl
inc
push
mov
lds
loope
insl
pop
ss
scas
push
shrl
inc
push
pop
sub
and
push
in
pop
daa
adc
xor
mov
ficoms
xor
xor
mov
pop
adc
arpl
cmp
mov
rcll
sbb
inc
je
mov
xorl
mov
out
clc
add
cmpsb
call
andb
addr16
xchg
pop
mov
xchg
fs
mov
jg
pop
sub
dec
loopne
imulb
stos
jne
dec
inc
add
fsubs
orl
adc
mov
sub
lret
pop
or
push
sbb
stc
sbb
rorl
nop
out
jmp
imul
lock
sbb
push
loope
aas
lahf
push
jg
dec
jge
xor
add
sti
rorl
ljmp
fs
icebp
movsl
dec
lods
push
in
ja
loope
adc
push
adc
mov
add
and
scas
mov
sbb
stc
inc
cmc
pop
iret
jg
cwtl
xor
mov
inc
int
cmp
arpl
cmpsl
fwait
sbb
adc
scas
jb
shrd
sub
je
out
xchg
inc
sub
hlt
pop
insb
test
fs
or
in
ja
push
out
mov
inc
sub
hlt
mov
add
leave
add
xchg
jl
jne
or
xchg
mov
jp
ret
fwait
hlt
jl
in
sbb
lock
lret
adc
les
xchg
test
xchg
int
mov
data16
lods
pavgb
ret
ret
arpl
gs
shll
sti
sbb
mov
cmp
or
xchg
loop
inc
in
jne
fucom
xchg
movsl
dec
loop
adc
add
loope
jnp
xchg
xchg
popf
lcall
pop
mov
mov
jne
and
cmp
jae
loop
mov
dec
aam
stos
insl
fsubs
cmp
fdiv
pop
dec
orb
subb
incl
in
jne
xor
jecxz
inc
mov
push
cmp
mov
movsb
jmp
inc
idiv
cli
add
stc
or
stc
sar
push
hlt
inc
into
xlat
xchg
fstps
rorb
mov
gs
lret
rolb
pop
call
mov
js
ret
sbb
andb
dec
fcmove
loop
in
insl
xor
push
or
mov
push
lret
mov
cmpsl
cmp
rol
ljmp
sbb
addr16
call
and
xchg
xchg
das
sbb
mov
imul
repnz
loopne
push
leave
in
ds
outsb
xchg
fcoms
daa
lea
mov
xlat
or
or
adc
mov
and
scas
mov
pop
popa
mov
pop
hlt
fisttps
sub
dec
push
cmc
xchg
loopne
roll
pop
push
scas
out
jnp
shlb
inc
inc
shrl
imul
sbb
imulb
dec
pop
push
xlat
leave
push
clc
rol
inc
cmp
push
pop
xchg
pop
and
movsl
icebp
or
dec
cmp
cmpsb
xchg
add
push
aad
and
jmp
std
cli
aad
lods
ja
push
mov
mov
xor
dec
out
aas
ljmp
insb
and
mov
add
jge
test
movsl
mov
popa
stc
jbe
mov
ret
ljmp
inc
fisubl
sbb
add
adc
repnz
sub
js
into
fstpl
mov
subl
sub
xor
sbb
out
cmp
out
ja
jge
jmp
and
mov
mov
jl
pop
lods
jge,pn
mov
je
repz
jbe
mov
es
fsts
jb
cli
sahf
and
push
ds
out
inc
fwait
lods
jae
negb
sub
cmp
adc
inc
lea
mov
repnz
jecxz
dec
inc
jecxz
inc
jecxz
roll
hlt
lahf
aaa
scas
dec
shrb
cmp
lods
inc
shrb
mov
xchg
pop
cltd
cli
in
dec
sub
test
imulb
sbb
push
fcompl
mov
ficoms
in
sbb
push
inc
idivb
fldt
test
lret
fwait
ret
fimull
movsl
sub
popa
fsubrp
loop
add
lock
imul
je
push
sbb
dec
jl
push
cmp
cmp
sbb
cltd
ret
jo
and
mov
pushf
add
mov
pop
mov
ja
aaa
and
dec
leave
insb
lahf
push
or
lock
loop
inc
jl
test
sub
repz
pop
mov
std
jbe
sarl
adc
sub
push
mov
int
xor
lret
addr16
fimuls
xor
test
into
enter
adc
inc
cmpsb
xchg
xchg
outsl
es
pop
cmp
sub
inc
test
test
loope
mov
jmp
lods
jmp
jns
out
cmp
int
sahf
cmp
nop
inc
and
jno
cs
xchg
pop
jmp
inc
jecxz
cld
adc
loope
xchg
sub
out
push
negb
xchg
ljmp
jg
sbb
xchg
adc
popf
xor
gs
mov
les
test
les
mov
decb
inc
int
push
js
xor
sub
adc
les
inc
aam
fucomip
mov
mov
xchg
push
jg
repz
pop
mov
outsl
sbbb
test
inc
sarl
or
add
repz
inc
out
cld
xchg
dec
xorb
sahf
int
mov
fwait
add
or
jp
les
push
cmpsb
jne
subb
ret
lret
mov
xor
mov
or
xor
loop
out
dec
cmp
mov
js
mov
add
sub
mov
fs
xchg
ljmp
lods
push
lcall
fcoms
or
shrb
add
test
je
lret
jns
ret
cmpsb
dec
outsb
push
rcrl
or
sbb
mov
std
lea
adc
mov
cld
mov
and
jae
and
sub
jg
sbbb
cld
ret
aam
cltd
push
pop
sub
sbb
arpl
push
add
and
xor
das
cmp
int
pushf
pop
xchg
pop
repz
xlat
movsb
mov
add
cs
jo
inc
pusha
or
jne
adc
ret
and
cltd
xchg
dec
xor
test
jl
call
xchg
fidivrs
and
mov
pop
enter
ds
es
pop
leave
and
in
xor
test
lret
inc
inc
jmp
int
loopne
test
xchg
movsb
mov
out
cld
repz
xor
dec
lcall
insl
mov
pop
aaa
jle
test
test
std
movsl
push
xchg
mov
ljmp
sbb
jnp
into
sub
leave
push
sbb
ljmp
arpl
setle
in
insb
insl
inc
or
mov
mov
test
fidivs
jne
push
ficoml
fildll
lods
pop
out
push
adc
xor
mov
les
or
lods
stos
push
mov
jno
jae
mov
pop
mov
fucomp
lret
inc
or
sub
sti
push
pop
push
jnp
push
adc
rolb
mov
sbb
jbe
sub
das
ror
gs
fwait
jbe
or
fnstenv
ja
jno
rclb
jne
adc
andl
sbb
mov
dec
dec
inc
push
stos
insb
push
adc
pop
popa
xor
adc
push
insb
test
xchg
cmp
jno
out
clc
xlat
or
test
jo
mov
xchg
dec
cmp
jnp
lahf
or
loopne
add
loopne
lret
push
cmp
pop
xchg
ds
jmp
nopl
movsl
in
imul
xor
fcmove
and
xor
faddp
push
push
jb
mov
mov
push
icebp
xchg
pop
sbb
mov
sub
hlt
loopne
lea
divl
inc
mov
mov
jle
push
dec
pop
sarb
stc
outsb
loope
fadds
inc
mov
xchg
mov
dec
adc
cltd
clc
sub
sub
daa
loop
and
xchg
lret
in
push
dec
push
dec
or
gs
inc
cmc
movsl
push
pushf
std
cmp
rcrl
and
jecxz
lret
xchg
ljmp
add
xor
pop
lret
adc
mov
decb
mov
and
pusha
and
enter
adc
pushf
lea
xor
pop
repz
movsl
and
xor
ja
sub
rcll
inc
pop
das
in
mov
lea
outsl
js
gs
cmp
xor
inc
pop
mov
mov
push
mov
sbb
cmp
in
in
pop
inc
inc
loope
adc
or
mov
dec
stos
gs
and
mov
hlt
je
sub
out
pop
and
lret
sub
cltd
addr16
insl
imul
xor
sbb
mov
addb
xor
add
inc
pop
inc
or
rolb
shlb
xor
inc
dec
cltd
cld
popa
jg
push
cwtl
sbb
pop
rcll
test
sbbb
in
add
pop
int3
imul
test
mov
arpl
insb
add
dec
shll
cmc
pop
jmp
push
jmp
adc
rolb
ja
adc
popa
call
aad
in
test
out
xor
std
or
ljmp
cmpb
cmc
js
mov
pop
xchg
ret
popf
outsb
add
push
pusha
adc
jmp
push
jns
xor
mov
fwait
mov
xor
adc
movsl
leave
ljmp
sbb
add
fs
cs
jle
insb
sub
mov
sbb
and
cmpsb
mov
cmp
mov
arpl
push
mov
enter
adc
lret
sub
xchg
cli
inc
lods
and
addl
lock
cmpsb
clc
adc
dec
ja
mov
fnstenv
mov
mov
push
jle
mov
or
adcb
cmp
dec
xchg
adc
lock
test
inc
jbe
push
pop
inc
jmp
mov
ret
sub
scas
cmp
divb
jns
cmc
pop
dec
loope
add
push
sarl
sbb
negl
jne
adc
out
leave
rcrl
iret
arpl
sti
ja
lods
rcrb
sub
sbb
mov
ja
clc
dec
jo
jo
out
repnz
test
sub
int3
xchg
inc
pushf
add
pop
insb
lret
mov
jmp
scas
stos
mov
sahf
cmp
mov
cltd
cmp
pop
and
jl
rcll
xor
inc
fisubs
add
aam
negb
dec
dec
xlat
mov
ds
sbb
leave
cld
xchg
ret
gs
cli
push
outsl
dec
pushf
adc
ficoms
out
pop
push
mov
mov
cmp
mov
inc
fsubrs
nop
fucomp
enter
test
pop
aaa
xlat
jecxz
push
subb
mov
lds
hlt
xor
scas
shll
jmp
ret
pushl
add
lods
adc
sub
lods
hlt
into
fisttpll
int
adc
jns
and
xchg
cli
jne
insl
std
dec
adc
add
push
mov
cwtl
inc
mov
dec
repz
push
icebp
cld
rorb
and
fwait
fwait
adc
mov
shlb
dec
out
bound
adc
inc
lcall
sbbb
mov
in
xlat
sbb
add
test
leave
addr16
xchg
push
test
jo
fbld
jecxz
mov
add
test
fidivs
sub
sub
push
js
mov
xchg
popl
movsl
push
cli
aaa
loope
inc
fbld
and
fistps
movsb
push
lret
jmp
adc
mov
or
dec
fcompl
nop
filds
fadd
push
imul
gs
call
xor
sbbl
sbb
or
mov
cwtl
cmpsb
test
cmc
push
jae
inc
cwtl
or
cmp
fdivrl
cmp
hlt
addr16
mov
daa
test
xchg
pop
pushf
jecxz
inc
dec
in
popl
out
mov
add
stos
jne
sti
xchg
pop
test
push
loop
ret
popf
lods
cmp
shll
adc
pop
mov
daa
add
es
add
and
negl
loop
push
leave
pop
mov
jo
cs
pop
mov
out
cmpsl
call
dec
test
mov
xlat
fsubrl
leave
push
add
xor
dec
dec
imul
ds
mov
or
mov
xchg
sbb
addb
dec
leave
lret
fcoms
mov
ljmp
mov
mov
cmp
ror
and
xchg
aam
loopne
inc
jp
xchg
mov
fstps
cmc
bound
sarl
cmpsb
xchg
sbb
sbb
mov
arpl
addr16
inc
and
loope
and
mov
xchg
cmp
popa
mov
sub
xchg
lock
lret
and
cmp
mov
cmp
cmpsb
mov
push
xchg
out
mov
or
rol
sbb
or
adc
jns
push
jmp
jmp
and
xor
or
xchg
mov
mov
mov
inc
sbb
rcr
add
dec
mov
out
scas
dec
dec
pop
stos
stos
bound
les
std
jmp
add
xor
lods
add
push
cmp
and
mov
fwait
mov
sub
jnp
add
clc
mov
xchg
mov
dec
mov
jecxz
xor
call
fwait
sub
and
inc
or
sub
test
aas
aad
fwait
jnp
xchg
test
scas
pop
inc
loope
xchg
imul
inc
and
mov
pop
xchg
mov
add
int
pusha
dec
lret
out
pop
insb
xor
and
add
adc
xor
mov
xchg
mov
movsb
testl
xor
jmp
cmp
and
test
push
dec
push
test
and
pop
push
cmpsl
push
xlat
mov
ss
fwait
xor
dec
mov
jnp
inc
push
cmpsl
pushf
add
pop
pop
xchg
cmp
jp
fsubrl
adc
jl
andb
fdivl
pop
test
jle
stos
in
int3
xor
pusha
mov
lds
rcrl
pop
addr16
in
mov
cwtl
out
dec
adc
lea
pop
jae
fs
movsl
andb
lea
adc
stos
xchg
xor
outsl
push
push
xchg
movsb
dec
in
push
lds
stc
xchg
adc
push
in
popf
xor
jae
aas
lret
bound
inc
jmp
mov
shlb
and
dec
add
int3
pushf
sbb
inc
out
into
pop
cmc
call
and
xchg
pop
mov
mov
aaa
fnstsw
fwait
mov
scas
inc
in
ror
or
mov
cld
lcall
in
or
jb
out
mov
xorps
rcll
xchg
mov
fdivr
sub
ficoms
stos
lods
inc
jmp
jp
or
pop
cmp
xlat
or
jp
or
jp
pop
mov
xor
lods
test
mov
stos
adc
lret
mov
mov
movsl
cmp
sbb
push
arpl
adc
aaa
mov
test
xchg
sub
push
scas
test
mov
push
call
mov
outsl
push
lods
rcll
xor
sarb
and
dec
out
outsl
jmp
jle
decb
mov
ret
push
shrl
int3
xchg
add
pop
mov
fisubl
and
sub
mov
cld
test
sbb
inc
addb
repz
gs
repz
stc
nop
inc
or
dec
pop
sub
aam
shrl
loope
xchg
xchg
repz
sbb
dec
push
jnp
js
testl
or
jg
xchg
push
call
movsl
imul
sub
dec
sti
xchg
inc
and
dec
popf
dec
in
idivb
xor
icebp
jecxz
pop
insl
int3
sub
outsb
push
xlat
push
in
push
dec
push
iret
jb
cwtl
roll
pop
cmp
fnstsw
repnz
and
push
out
mov
bound
xchg
sub
xor
cs
mov
imul
mov
pop
xchg
lahf
subb
loop
mov
or
gs
addr16
cmp
pushf
xor
insb
mov
ss
push
and
in
xchg
fnsave
jge
xor
mov
pop
add
notb
daa
testb
and
test
aas
sti
jae
daa
fs
scas
and
inc
or
out
test
pop
mov
pop
out
int3
xchg
sti
std
mov
nop
push
bswap
inc
adc
outsl
sub
mov
add
mov
xchg
add
add
mov
cmpsl
xor
xchg
leave
rol
mov
test
fmul
or
jmp
push
int3
movsb
dec
jo
push
mov
add
jle
movsl
cwtl
in
lret
cmp
lods
inc
ret
fstl
mov
xchg
shrb
orb
cli
xorl
xchg
movsb
jbe
gs
sub
push
arpl
mov
mov
sahf
in
pushf
pop
test
in
js
sub
out
jg
add
push
rolb
gs
clc
adc
popa
adc
sub
stos
add
lods
mov
cmp
int3
lret
push
sub
in
push
jg
sbbl
jo
jl
popa
mov
pop
cli
pushf
repz
in
dec
sub
out
add
loopne
dec
and
pop
idivb
movsl
lods
iret
pop
sub
xor
xor
loop
push
mov
das
cmp
and
mov
or
push
or
pop
mov
add
mov
fwait
nop
and
push
jge
adc
nop
sbb
stos
loopne
cltd
cmp
int3
ret
fsubp
adc
push
cmpsb
daa
push
in
or
add
xchg
jmp
rclb
adc
les
xor
loope
jb
mov
sub
lds
mov
insl
add
mov
adc
in
push
inc
mov
mov
mov
mov
mov
jg
mov
loopne
sbbb
mov
mov
adc
into
orl
in
int
pop
fdivrs
shll
scas
call
shlb
pop
xchg
jnp
inc
dec
xor
dec
sbb
mov
xor
mov
push
lret
mov
lds
cmpsl
stc
nop
sbb
testb
fwait
add
pop
cmp
sub
aad
inc
and
mov
xchg
sbb
lret
jb
inc
sub
loope
push
mov
push
out
and
or
aaa
cmp
stc
mov
outsl
xor
jmp
push
mov
push
out
cmp
test
std
jbe
ja
flds
lret
xchg
out
jmp
add
outsl
jns
js
in
popf
pusha
fsubs
or
or
or
adc
xchg
add
push
jecxz
jp
xchg
push
sub
or
pusha
test
pop
jmp
fmull
out
mov
cs
cmp
clc
orb
stc
mov
xchg
jg
jno
lcall
mov
inc
fcmovnu
out
and
lds
mov
cmp
test
cmp
xlat
nop
stos
xchg
adc
out
xchg
rolb
ret
jge
adc
mov
jmp
jp
mov
ret
adc
es
shll
pusha
sti
and
xchg
sbbb
pop
cld
andl
push
insl
imul
push
push
mov
sub
aaa
cmc
jo
ljmp
sbb
cltd
sahf
cmpsb
clc
daa
fbstp
push
fisubrs
adc
outsb
mov
dec
cmc
xchg
jl
xchg
jns
popf
push
js
lods
lock
push
xchg
xchg
js
insb
jno
imull
or
cmp
std
adcl
jae
cmp
aas
jmp
repnz
in
mov
jl
add
pushl
cs
aad
test
mov
add
loop
or
stos
mov
into
data16
pushl
test
push
nopl
loopne
out
out
scas
pop
inc
or
xchg
scas
mov
fwait
pop
sbb
mov
aaa
repnz
sub
adc
fadds
mov
push
rcrl
inc
aam
push
mov
push
jmp
insb
sbb
adc
inc
hlt
enter
fsubr
sbb
cmp
sub
cmc
shrl
jno
mov
fisttps
add
xchg
mov
gs
inc
cmp
cmp
lods
hlt
mov
iret
mov
js
xchg
in
fistpl
cmp
fcomps
cmp
daa
dec
seto
dec
loop
jp
sub
cwtl
sbb
lods
and
add
popf
push
mov
mov
push
icebp
xchg
lds
and
jg
inc
stos
and
jbe
pop
dec
and
mov
movl
es
ljmp
sbb
popa
testb
jle
popf
scas
push
scas
or
jmp
mov
outsb
sahf
cmpsl
mov
outsb
out
cmp
pop
lcall
push
repnz
and
aad
notb
es
pop
mov
out
rcrb
xchg
mov
sahf
add
sarl
cld
pop
and
mov
xor
repz
inc
push
inc
fs
ret
test
inc
xlat
dec
mov
xchg
lret
ds
cmp
call
inc
mov
mulb
leave
jge
stc
dec
or
xchg
cs
int
aad
mov
dec
mov
scas
mov
xor
xor
out
ds
ret
incl
xor
push
imul
mov
incl
jl
hlt
mov
sahf
clc
movsb
pop
sub
xor
or
adc
sub
das
xchg
loopne
sbb
test
aad
jns
adc
and
push
repnz
test
dec
and
shrb
inc
test
mov
cmp
adc
inc
inc
addr16
lock
sub
dec
stos
ljmp
aaa
push
movnti
sub
push
lods
incb
and
xor
xchg
mov
into
mov
or
sbb
test
sub
xlat
out
add
sti
les
bswap
lahf
mov
and
push
inc
add
sti
adc
inc
insb
pop
test
aaa
jno
in
adc
xchg
scas
aad
aam
loop
jmp
push
push
or
cmpsb
xchg
add
outsl
jge
sbb
cmp
iret
sub
pop
mov
mov
or
lret
out
xchg
cmp
sub
lea
adc
ja
sbb
jae
je
jecxz
jmp
cmpsb
inc
aam
retw
shlb
sub
loopne
push
push
mov
dec
in
scas
push
cwtl
div
test
mov
addb
jge
adc
fimuls
out
jae
or
add
or
xchg
int
loopne
pop
insb
lods
aam
xchg
std
out
loopne
pop
sbb
enter
push
xchg
adc
ds
pop
cmp
inc
lret
jbe
orb
ds
repnz
shl
jnp,pn
adc
adcl
fs
xor
xchg
loopne
dec
xor
cmp
cli
sarl
fidivs
inc
mov
xlat
mov
and
shll
repnz
mov
int3
lret
lock
loope
out
and
hlt
mov
je
pop
mov
push
mov
inc
addb
jno
pop
popa
xchg
fsubr
hlt
and
cs
mov
cmp
jle
out
xchg
lock
int
loopne
xor
inc
pop
add
mov
movsl
xchg
push
xchg
dec
sbb
mov
mov
out
mov
mov
cmp
in
dec
mov
out
sub
push
xor
rcrb
mov
push
jo
push
xchg
xchg
movsl
ja
aaa
loop
in
daa
adc
pushl
aam
push
enter
clc
mov
mov
stos
mov
jg
test
push
sahf
stc
into
fisubs
cmp
xorl
inc
sub
mov
adc
fwait
and
addr16
lods
aas
popf
mov
add
mov
js
test
cmp
cs
ss
mov
sbb
jle
jno
lret
mov
or
adc
jecxz
outsl
sti
xchg
mov
test
test
out
das
sub
clc
mov
repnz
les
imul
xchg
push
mov
movsb
mov
sbb
dec
dec
mov
pop
test
gs
scas
inc
xchg
sti
sub
adc
mov
sbb
subl
xchg
out
testl
mov
les
outsb
jno
mov
int
sbb
sbb
mov
push
subl
lods
repz
dec
mov
cmp
jg
pop
inc
pop
fists
sti
es
sub
out
mov
fstl
sahf
push
ret
icebp
shl
jbe
adc
push
push
jae
stc
aaa
fldcw
adc
insl
sub
cmp
push
mov
xor
lret
sti
push
adc
fnstcw
fbld
sub
jb
and
bound
fdivrl
fidivl
es
stc
inc
out
or
xchg
dec
add
out
sbb
add
push
mov
jl
aad
imul
ficoms
xor
push
lret
loop
dec
stc
and
pusha
aam
inc
mov
fst
xchg
cmp
cmc
movsb
pop
xchg
add
test
cli
xor
and
jb
popf
and
leave
loope
jmp
cs
hlt
mov
cmp
scas
daa
jg
shlb
mov
psubusw
add
dec
fbld
push
xchg
push
push
ret
dec
arpl
jns
int3
gs
popa
and
repz
adc
cmp
jp
leave
mov
add
ja
fstl
push
sbb
stos
jne
cwtl
mov
mov
aam
out
cmpb
sti
les
or
jle
sub
pushf
cli
jne
mov
inc
sbb
jge
pop
arpl
cwtl
xor
and
repnz
sub
mov
loopne
or
stos
push
push
adc
push
lods
mov
leave
jbe
xchg
cwtl
decb
push
mov
mov
outsl
inc
xchg
pop
insl
incl
sub
pop
mov
lods
jl
jns
or
incl
push
movsl
xor
pop
into
push
out
sub
and
inc
inc
mov
popa
jmp
stos
jp
cmpsl
sub
add
cs
dec
out
pop
cmp
jb
cwtl
fs
cli
jbe
sub
or
mov
cmc
nop
mulb
cmp
and
mov
mov
aad
push
jne
inc
or
xorl
add
mov
cmp
push
xchg
pusha
adc
outsl
dec
or
cmpsb
sbb
sub
pop
cmp
push
add
cmp
xorl
push
and
mov
idiv
test
or
xchg
sub
fcom
inc
fstpl
push
je
add
je
add
call
push
aad
xchg
outsl
jns
test
lea
mov
call
add
lods
lret
and
pop
mov
jle
inc
popf
mov
iret
mov
cmpsb
mov
filds
je
pop
inc
dec
cld
lcall
push
loopne
sbbb
repnz
mov
int
adc
mov
xorb
rorb
mov
xor
lcall
movsl
adc
mov
push
cld
pop
pop
idivb
outsl
mov
push
jecxz
inc
dec
or
mov
popf
pop
iret
sbb
outsl
lock
adc
movsb
daa
fwait
and
sub
sti
push
cmpsb
pop
push
stos
fadds
xchg
in
orb
lret
and
gs
inc
fmull
cltd
mov
jl
loopne
and
mov
cmp
mov
int
in
orb
adc
aaa
push
icebp
in
mov
pop
test
cli
test
cmpsl
xchg
inc
and
aam
call
sbb
insl
cmp
test
pop
cmpsb
sbbb
sub
ja
shlb
mov
push
jno
add
js
mov
xlat
out
xchg
pop
and
insb
inc
out
jns
movsb
jecxz
adc
inc
mov
fcomip
or
dec
adc
icebp
and
std
cli
push
imul
cmp
push
jg
fsubl
js
out
pop
push
jg
pop
and
int
cmp
or
popf
loopne
stc
call
movsb
inc
popa
es
sub
inc
pop
lock
mov
or
cwtl
icebp
mov
mov
popa
lods
dec
imul
adcb
ret
inc
cmp
out
aaa
ret
jmp
xchg
jle
inc
adc
lret
leave
sbb
pop
push
not
and
enter
mov
jmp
mov
ret
pusha
mov
enter
cmp
sub
mov
push
enter
push
xchg
arpl
dec
sbb
lret
xor
out
clc
dec
dec
iret
cmpsb
cmp
mov
adc
bound
hlt
faddp
dec
data16
jnp
sbb
push
scas
sbb
fbstp
popa
test
mov
in
push
push
test
rcl
xchg
push
jae
movsl
or
sbb
pop
cmp
add
adc
dec
dec
rorb
les
xor
mov
repnz
add
leave
jb
or
mov
fwait
sub
or
in
inc
jmp
cmp
push
ss
add
or
rcl
xchg
add
rcrl
cmp
xor
dec
dec
test
mov
cmp
test
in
jno
cld
sahf
or
mov
or
pop
mov
stc
js
mov
xor
insb
shrl
jp
inc
and
ficoms
add
outsb
call
and
scas
push
insl
nop
data16
stos
jne
mov
add
outsl
ficoms
push
jge
je
cli
subb
sbb
and
xchg
jecxz
adc
xlat
mov
gs
int3
cmova
cmp
filds
sub
adc
inc
cmp
jne
repnz
mov
pusha
mov
or
fldl
push
out
mov
das
arpl
pop
push
js
sub
adc
repnz
push
add
lds
jp
repz
sub
fld1
pusha
rorl
inc
ljmp
jbe
adc
je
jno
repz
pushf
imul
es
inc
xchg
mov
arpl
xchg
sub
scas
inc
pop
cmpsb
xor
das
mov
lcall
adc
dec
test
lcall
aas
shr
cltd
and
movl
mov
jb
and
mov
aas
mov
jle
into
enter
dec
ss
push
pop
xor
std
jge
imul
push
js
inc
in
scas
xchg
in
xchg
sub
mov
push
ret
jnp
cmp
sti
test
sub
lahf
push
push
ret
jns
test
dec
push
jp
pop
xor
fwait
xor
push
shrb
test
inc
popa
ror
scas
mov
rep
es
push
xchg
dec
dec
mov
mov
dec
mov
lcall
and
leave
sbb
bnd
sbbl
pop
adc
jns
mov
xlat
cmp
xchg
es
push
test
popf
and
jl
aas
movsl
mov
and
data16
add
cmp
and
mov
into
mov
and
pusha
xlat
ljmp
push
jae
mov
ret
cmc
jmp
int3
mov
mov
mov
dec
lea
fs
dec
adc
xchg
jp
xor
inc
sti
inc
in
jns
enter
mov
pop
jae
or
addr16
popf
cld
jbe
mov
add
sbb
mov
fdivl
mov
mov
sbb
xchg
shlb
out
aam
mov
outsb
scas
mov
shll
jb
addl
xadd
xchg
cs
pop
test
add
push
pusha
mov
aam
push
xchg
dec
add
into
cmpsb
xor
int
scas
scas
and
in
xor
xchg
arpl
push
mov
sub
pusha
sarl
cltd
push
sub
test
pop
sbb
adc
mov
mov
add
js
and
mov
xchg
xor
std
xchg
sub
mov
dec
sbb
std
out
aaa
sbb
sbb
jp
cmp
jle
sub
je
inc
xor
jb
les
mov
ds
fnsave
sarl
jg
fldt
inc
inc
gs
cld
popf
subb
sub
es
mov
sbb
dec
push
data16
sahf
push
xor
sbb
and
jmp
test
inc
and
xchg
out
in
icebp
nop
movsl
sbb
pushf
mull
push
mov
mov
mov
rsm
xchg
add
notl
scas
lcall
pusha
pop
push
fsubp
lea
xchg
sub
jecxz
inc
lcall
inc
xchg
xchg
cmp
mov
mov
out
jg
sbb
sti
into
sti
sbb
inc
ret
ss
sahf
out
inc
in
popl
in
pusha
mov
cmp
jb
xor
add
shll
sbb
outsl
loop
mov
dec
and
orb
mov
enter
jae
mov
add
pop
push
rorl
outsl
fisubl
or
out
mov
push
add
shrb
adcb
das
cltd
ret
enter
out
popa
cmc
fisttps
and
jbe
xchg
arpl
es
clc
mov
lods
js
mov
jecxz
clc
and
xchg
fs
arpl
mov
aas
add
test
lock
jne
and
xor
sti
xchg
sub
shr
fcompl
scas
sub
test
data16
mov
xor
dec
push
bound
lcall
test
xor
aad
dec
nop
les
movsb
jp
pop
jbe
xchg
int3
pop
sbb
sub
fwait
push
xchg
sub
ja
stc
je
sbb
xlat
sbb
notb
cwtl
pop
dec
jecxz
mov
out
add
cmp
inc
test
ret
adc
mov
adc
xor
lret
sbb
push
jbe
adc
cmc
inc
pop
mov
test
imul
fwait
jo
cmp
sbbl
xchg
jmp
aad
cmp
cmova
daa
lcall
sub
rcr
sahf
push
xor
adc
xlat
jno
clc
test
scas
lea
jnp
adc
out
ds
xor
mov
int3
jns
ja
pop
pop
iret
push
data16
and
insl
mov
daa
lcall
cwtl
push
mov
or
mov
inc
mov
mov
push
in
leave
in
pop
out
xchg
cmp
cmc
pop
int
ja
adc
ficoml
sub
lahf
es
mov
cmpsl
cmpsb
std
rcl
add
cmp
mov
stc
je
mov
mov
or
push
outsl
ret
inc
test
cmp
dec
push
cmc
add
inc
aaa
lahf
cltd
test
adc
xchg
outsl
jg
xor
stos
sub
xlat
mov
insb
sbb
rcrb
push
push
rol
ret
movsl
push
push
and
mov
shll
pop
xchg
hlt
arpl
mov
cmp
shlb
bnd
cmp
fcomps
jmp
and
add
xchg
mov
sub
sbb
add
insl
jge
fwait
mov
cmpsl
cmpsb
mov
in
add
dec
sarb
pop
pop
push
in
scas
jg
lret
enter
add
das
and
pop
cltd
xor
push
pop
mov
mov
mov
cltd
les
lock
out
into
xchg
or
loopne
mov
data16
and
decb
cs
mov
mov
dec
lea
xor
dec
stos
push
mov
dec
mov
mov
daa
gs
dec
mov
mov
clc
dec
jecxz
xchg
ficoml
nop
or
and
add
pop
xor
mov
cli
in
lods
and
cmp
dec
cltd
push
cmpsb
out
loope
cmc
adc
das
aas
jo
push
clc
push
dec
lahf
sbb
fsubs
sti
and
sub
aaa
ss
andl
mov
outsl
sbb
jmp
mov
lods
movsl
pop
cmp
jb
adc
loopne
and
std
or
xchg
dec
adcb
sbb
movsb
cltd
or
jns
jbe
mov
cmp
movsb
imul
pop
scas
insb
dec
iret
les
push
lahf
test
js
cmpsb
jno
leave
add
leave
cmp
rol
push
loope
fiaddl
stc
push
jnp
and
pop
dec
mov
dec
call
mov
cmp
ret
aam
mov
ds
repz
mov
and
lods
xor
or
iret
push
mov
xchg
icebp
push
inc
xlat
test
jmp
xor
pop
in
pop
lods
jle
xlat
insl
gs
mov
mov
mov
jge
or
sbb
mov
mov
imul
fwait
sbb
mov
lret
pop
jp
iret
dec
sbb
jnp
paddd
adc
dec
test
push
jmp
rcll
jb
lea
ret
pop
push
cmp
shrl
dec
loope
jge
cwtl
lock
int
dec
sub
and
and
sub
mov
mov
sub
addr16
add
dec
xchg
mov
fcompl
or
and
or
add
ds
mov
pop
inc
mov
jb
sub
fistl
test
lahf
jmp
inc
insb
ds
sbb
dec
mov
lret
pop
movsl
cmp
push
add
and
push
lret
mov
sti
xchg
fistps
lret
inc
sbb
xor
test
push
nop
sahf
inc
push
test
ja
lret
pop
jg
dec
jno
push
jb
jbe
mov
aam
cmp
mov
stos
call
in
cmpsb
lock
imul
lock
push
inc
fisttps
or
bound
rorb
andb
jne
push
mov
das
mov
dec
pop
call
lcall
mov
dec
out
adc
adc
test
in
ljmp
enter
or
insl
enter
xchg
inc
stos
ss
mov
inc
fdivrs
stos
fwait
ja
xchg
mov
lds
insl
inc
fstpl
gs
inc
imulb
jmp
int
mov
inc
mov
mov
pop
inc
xor
sub
fwait
cld
xchg
lods
xchg
mov
xchg
pop
push
ss
push
test
stos
addr16
sub
pushf
arpl
pop
test
cmp
lods
or
sub
sub
lret
into
testl
es
insb
add
pushf
xchg
mov
mov
push
dec
pop
xchg
xor
cltd
pushf
push
jne
pop
in
mov
lock
fisubl
push
addb
clc
fstpl
rolb
inc
cld
push
in
mov
mov
push
dec
or
out
fs
fists
fsubs
popf
loop
iret
push
loopne
movsl
pushf
cmp
fldcw
or
mov
notb
xor
mov
aas
and
adc
cs
lods
and
sub
bound
stos
aam
sbb
ficoml
ret
arpl
dec
fldcw
nop
not
int3
movsb
pop
std
push
ds
insl
add
xor
push
inc
jo
xor
add
out
push
mov
incb
cltd
rorl
and
push
xchg
dec
test
cld
or
enter
push
inc
cmpsb
dec
popa
mov
jp
mov
stos
in
test
inc
lods
xor
dec
data16
hlt
aaa
push
movsb
lret
les
scas
mul
jno
adc
aas
sub
adcb
mov
lcall
inc
fdivrs
adc
and
repz
mov
mov
lcall
cmp
push
inc
mov
aaa
test
pop
sbb
xchg
push
jg
cmp
sbb
pusha
shll
add
es
rorl
shrl
out
gs
xchg
dec
aas
xor
inc
sbb
mov
imul
dec
pop
add
fcom
loopne
arpl
jle
cmc
mov
dec
mov
clc
mov
adc
and
jp
in
mov
jl
adc
push
ljmp
ljmp
mov
jno
out
sti
es
xchg
in
jg
xor
cmp
xchg
sub
mov
xchg
scas
inc
cmpsb
push
jno
jp
sti
cmpsl
pop
adc
call
add
pop
cmpsb
or
mov
inc
add
add
ret
jg
and
push
gs
pop
aam
aad
icebp
xor
fwait
enter
inc
mov
xchg
jbe
lret
stos
rol
xchg
xchg
out
lcall
mov
movsb
cmp
insb
pop
adc
lods
repz
xor
repnz
into
and
mov
dec
mov
sbb
push
outsb
pop
hlt
lahf
add
add
jns
xchg
push
jnp
aam
js
xor
fdivs
or
mov
sti
enter
lahf
addl
ja
cmpsl
test
repz
clc
mov
out
push
leave
xor
sbb
insl
testb
in
imul
xor
lods
sub
adc
xchg
jns
int3
lods
nop
xchg
rclb
mov
popf
adc
popf
scas
aaa
xchg
add
pop
divb
and
cmpb
cmpsb
les
mov
push
and
jnp
ror
in
sub
orb
std
or
inc
ret
pop
daa
leave
mov
sti
sbbl
add
cmp
call
gs
push
jle
push
lret
fidivl
xchg
stos
out
add
ljmp
mov
jmp
cmp
rcl
sbb
lahf
sbb
mov
insl
ljmp
jl
mov
push
out
push
outsl
inc
cltd
enter
rorl
inc
mov
xor
js
and
inc
jecxz
hlt
popf
jmp
iret
adc
movsl
xor
mov
jge
out
sub
daa
movsb
sub
rcll
dec
scas
mov
xchg
insl
jge
mov
mov
mov
gs
and
xchg
mov
inc
rorl
pusha
mov
sbb
xchg
je
mov
aas
call
adc
popf
dec
or
cmp
push
mov
aaa
aas
clc
into
fsubrl
popa
mov
jl
and
vaddss
daa
andb
and
je
push
and
loopne
and
daa
cmp
sub
mov
dec
push
add
xchg
lods
mov
dec
adcl
or
dec
cmp
mov
cmp
jae
cld
gs
stc
outsb
fists
inc
xchg
sbb
out
and
pusha
xor
mov
ds
orb
mov
adc
enter
mov
js
out
out
add
test
lock
mov
loopne
test
and
neg
or
lock
mov
mov
fwait
add
sbb
fidivrs
dec
cltd
rol
pop
ret
in
fistpll
mov
rcrl
idivb
push
pop
push
repnz
dec
adc
mov
das
sarl
cmp
jo
xor
mov
dec
push
push
leave
stos
sbb
out
adc
loop
mov
or
add
push
and
jnp
adc
jns
jge
mov
jg
pushf
cmp
pusha
inc
outsl
pop
and
iret
add
push
inc
xchg
cmp
inc
scas
rcll
test
push
scas
in
int
incb
ss
pushl
push
mov
jnp
enter
cmp
push
push
mov
fidivs
lret
rep
fnstcw
hlt
ja
scas
inc
sahf
in
or
fidivrs
fnstcw
adc
sahf
inc
xchg
addr16
jecxz
mov
and
dec
xchg
sub
xchg
mov
fmull
test
cmp
bound
jnp,pt
test
push
popf
adc
fcomps
loop
in
mov
sarl
aaa
push
xor
test
pop
mov
pop
rcrb
mov
adc
push
into
or
push
popf
or
lcall
jns
faddl
or
sbb
fdivp
pop
dec
push
mov
mov
int3
repnz
cmp
std
test
pushl
xchg
pop
jmp
and
mov
dec
insb
outsb
push
scas
insl
rol
ret
jno
push
mov
jo
and
and
mov
dec
mov
std
sbb
xchg
and
and
mov
xor
cs
add
lahf
fisubl
mov
add
jnp
negb
fistps
sub
add
lock
or
test
enter
fsubrl
stos
push
into
repnz
jnp
fsubrs
adc
push
add
jae
pop
mov
mov
gs
das
inc
mov
test
inc
or
cli
cltd
add
push
rcr
jo
adc
rorb
and
ficoml
int3
popa
jl
cld
add
dec
into
xor
jl
push
or
mov
ja
mov
aas
add
fmuls
cmp
sub
mov
dec
enter
cwtl
shr
enter
sbb
lock
cmp
mov
xor
and
fs
int
sar
jecxz
mov
into
sbb
movsl
movhps
and
pop
lods
mov
negl
ds
std
jne
sub
loop
inc
pop
sub
adc
test
aaa
call
cmp
push
cltd
xor
mov
push
mov
jl
push
in
push
mov
cmpsl
stos
inc
xor
aad
sbb
jecxz,pt
repnz
xchg
jmp
ja
mov
pop
pushf
xor
jmp
mov
inc
mov
aam
out
xchg
pop
adc
adc
jle
sti
mov
imul
sub
jle
cmp
push
xor
jns
loope
adc
out
jecxz
stc
xchg
add
test
pop
rcl
sbb
and
xor
mov
fsubs
pop
or
aaa
int
dec
pop
dec
flds
cmpsl
cwtl
imul
or
cltd
icebp
rorl
jg
pop
outsb
loopne
shrb
or
outsb
jnp
xchg
ja
push
in
outsl
pop
and
test
rcl
xorl
cmp
mov
aam
push
movsb
ret
xchg
in
dec
les
test
mov
into
push
pop
push
shrb
mov
inc
mov
outsb
movsl
idiv
fildl
xlat
cmp
insb
push
mov
call
aaa
or
cld
push
cmp
push
outsb
sub
imul
pusha
cmp
cld
mov
or
rorb
mov
jo
icebp
pop
ret
lcall
into
das
mov
je
insl
sbbb
hlt
rsm
adc
out
mov
dec
sub
les
fiaddl
sbb
mov
jmp
ret
or
mov
cld
sbbb
and
fwait
rcr
ja
adc
bndstx
push
dec
pop
test
scas
xchg
push
stc
sub
sub
test
xchg
je
adc
in
add
adc
sbb
mov
xchg
sub
sbb
xchg
cmp
xchg
lcall
ds
movsb
out
cs
repnz
add
lahf
mov
in
xor
sbb
pop
pop
and
sbb
add
or
push
ljmp
and
mov
andb
mov
cli
rcrl
sub
out
xlat
shlb
jnp
jo
or
hlt
adc
add
sahf
pop
xlat
mov
mov
lahf
in
push
push
imul
sbb
lea
out
fisttpll
nop
cs
shll
inc
fsubrl
flds
mov
movsb
sti
enter
push
repnz
xchg
arpl
mov
int
mov
push
pushl
notb
push
sahf
out
mov
sahf
mov
gs
shrl
int
stos
loope
scas
fstpl
icebp
dec
test
ret
push
jmp
or
cmpl
sub
push
xorl
cs
add
cs
rcrl
les
jnp
jns
in
mov
mov
fidivrl
rolb
jbe
adc
fs
xchg
xor
cmc
imul
mov
inc
inc
mov
xorl
daa
pusha
subb
lock
and
fs
jnp
jecxz
fwait
xacquire
push
imul
inc
data16
repz
mov
jno
cmp
mov
push
mov
mov
xchg
add
xor
adc
arpl
lcall
jo
push
and
cli
xchg
std
fimuls
xchg
test
call
and
test
fildll
sbbb
lret
mov
popa
nop
sbb
and
jno
push
xor
cmp
or
and
xchg
mov
mov
sar
out
push
lcall
movsl
ret
and
push
jno,pn
push
jne
jbe
xchg
pushf
push
cwtl
aas
les
mov
out
pop
push
dec
pop
imul
mov
call
movsl
add
mov
mov
andl
pop
clc
test
out
ja
lods
inc
mov
hlt
and
xchg
out
xchg
insb
out
inc
rcl
jbe
ljmp
aas
nop
daa
pop
in
insb
pop
cmc
scas
sub
sahf
scas
lods
inc
sub
xor
push
cmp
test
addr16
scas
xchg
pushf
mov
cmp
or
sbb
xchg
dec
jecxz
jne
inc
arpl
in
add
add
push
inc
enter
divb
add
popw
movsb
jnp
xchg
fs
movsb
cld
xchg
xlat
lock
iret
push
jge
mov
xchg
add
repz
stos
cmp
adcb
sbb
js
add
mov
testb
cmp
cmpsl
sbb
sub
pop
cmpsb
cmp
adc
loopne
xor
int3
push
inc
dec
dec
iret
lea
outsl
push
pop
push
inc
fmul
mov
scas
dec
setb
inc
imul
mov
and
add
das
popa
or
shll
insl
imul
sub
dec
cmp
lds
adc
inc
pop
inc
stc
lcall
insl
push
adc
xor
cmp
mov
or
fdivl
ja
cmc
pop
pop
sti
xchg
mov
ficompl
aam
cmp
jnp
inc
js
jmp
sbb
jp
and
mov
jno,pn
shll
or
rcrb
xchg
scas
mov
fbld
xor
jb
stos
lock
dec
pop
mov
cmp
jl
push
mov
pusha
in
cmp
nop
mov
ret
adc
or
cmpl
das
loopne
cmp
mov
scas
mov
ret
inc
mov
arpl
xchg
cmpsl
ret
and
repz
mov
insl
bound
xchg
iret
mov
jge
mov
mov
popa
fstl
loop
enter
xchg
xor
mov
rclb
mov
inc
sbb
inc
mov
jle
adc
xor
pop
inc
ficoms
mov
mov
shll
xchg
xlat
cmpl
dec
test
and
leave
mov
pop
mov
push
jle
aam
lret
ret
outsl
dec
loope
mov
sahf
jmp
xchg
mov
cld
sbb
adcl
aaa
push
cmp
or
cwtl
outsl
xor
clc
adc
insb
jl
push
popa
pop
mov
xchg
and
add
lahf
inc
xchg
or
in
adc
out
cmpsb
jp
inc
bound
inc
xchg
mov
mov
mov
movsb
add
cmp
sahf
aas
jmp
push
push
test
sbb
jno
xor
insb
push
test
loopne
test
mov
das
adc
mov
xor
jmp
xor
mov
sbb
iret
mov
stos
inc
es
push
cmc
mov
push
jo
aam
stos
stos
das
mov
sbb
arpl
ret
mov
loopne
bound
imul
mov
call
ljmp
dec
sbbb
push
out
add
lahf
add
mov
push
add
mov
ss
xor
dec
ret
dec
push
pop
std
in
test
pop
pop
loop
cmp
cwtl
mov
scas
push
daa
lcall
inc
aam
in
xchg
dec
xchg
mov
xchg
sbb
shlb
cmpsb
and
dec
sub
xor
cmp
cmp
xor
sti
jbe
cmp
test
mov
rcr
sub
jb
mov
fwait
dec
lea
xchg
imul
jb
ljmp
fnstenv
adc
mov
or
cmp
cwtl
adc
xchg
mov
pop
out
xchg
ret
loop
outsl
or
subb
dec
ror
jmp
mov
sub
sub
scas
mov
jge
pop
outsl
dec
lds
jp
in
dec
aaa
cmc
mov
clc
push
xchg
add
ret
bnd
repnz
cmpsl
stos
out
and
fisttps
enter
imul
nop
movsb
pop
sbb
inc
adc
push
les
mov
jmp
fdivrs
xor
jae
decb
or
sub
push
cltd
outsl
xchg
rol
outsb
jl
shl
xchg
popf
mov
shrb
mov
fs
sbb
sbb
gs
sub
mov
mov
in
push
pop
fisubl
frstor
or
mov
ret
adc
inc
pop
lahf
jb
xchg
int3
add
fwait
mov
sbb
cld
push
lods
ljmp
push
cld
pop
cld
call
in
daa
lret
std
sbb
stos
push
je
adc
test
xlat
sub
or
add
xchg
adcl
adc
ljmp
in
sbb
icebp
shll
imul
ss
xor
aam
pusha
push
lcall
inc
pop
dec
mov
pop
cmpsl
lahf
movsb
cmpsb
sti
cwtl
jae
jmp
xor
inc
jbe
test
notb
xchg
cmc
mov
in
std
and
mov
shrl
jns
sbb
xchg
and
push
sub
pusha
xlat
push
std
insl
lods
jae
push
dec
les
jae
jno
nop
xchg
rorl
mov
xlat
add
xor
popf
push
mov
sahf
movsl
lods
mov
pop
int
mov
hlt
pop
pop
mov
push
and
fwait
jl
sbb
add
adc
ljmp
ljmp
dec
addb
inc
mov
iret
cmp
jnp
hlt
pop
mov
sbb
inc
pushf
outsl
sti
fiaddl
adc
jae
ficoml
add
push
xor
lea
jns
push
test
pop
je
jns
je
mov
test
push
cwtl
fsub
mov
inc
pop
pushf
sub
js
imulb
dec
insb
ret
jbe
add
jbe
std
and
data16
pop
adc
adc
or
lea
xor
mov
sub
in
jl
inc
mov
push
sub
scas
rorl
inc
pop
mov
mov
cmp
fsub
mov
jo
enter
imul
stos
add
mov
dec
pop
jle
pop
push
add
lret
push
mov
test
jl
add
xor
inc
cmc
dec
mov
cld
jg
out
dec
mov
lods
lret
loopne
call
imul
mov
or
pop
jecxz
mov
test
push
mov
push
mov
inc
push
jg
fcomp
xchg
jecxz
ret
bound
add
cs
pop
mov
mov
jne
mov
test
add
popf
mov
sti
int3
add
popa
pop
test
loope
fdivr
mov
leave
movsb
lret
mov
lock
cmp
mov
icebp
adc
cwtl
inc
adc
icebp
xchg
test
pop
out
sub
sarb
dec
aam
lock
movsl
cmp
xor
dec
dec
push
jecxz
or
add
adc
int3
inc
pop
and
mov
inc
in
xchg
add
fdivrs
jns
add
push
push
dec
mov
test
cmpsb
sub
inc
imull
or
jp
push
imul
pusha
sbb
sub
mov
mov
inc
fldt
mov
mov
mov
and
lahf
jnp
inc
std
add
push
pop
jo
enter
xlat
mov
xchg
pushf
movsb
daa
or
test
add
jmp
and
push
cltd
jo
mov
mov
out
sub
xor
into
test
or
cmp
xlat
xor
mov
stos
dec
sub
ja
ljmp
addr16
dec
push
js
sbb
fbstp
es
and
std
jo
lock
andb
iret
xchg
jne
popf
dec
out
jnp
push
pop
cmpsb
inc
jecxz
imul
push
sub
incb
cmp
or
mov
fwait
aaa
mov
jge
inc
mov
scas
sub
xor
loope
or
popfw
push
sti
dec
mov
mov
mov
and
cwtl
push
popf
mov
jp
das
lods
mov
sub
jle
jecxz
in
data16
fbld
outsb
enter
jg
sub
mov
cmp
daa
sub
lods
inc
push
pop
test
push
cli
lret
movsl
xor
push
imul
imul
xchg
inc
pop
lret
inc
ss
mov
push
mov
sbb
xchg
ss
mov
cmpsb
daa
sbb
imul
sub
pop
popf
mov
mov
loop
and
mov
fistpl
pop
xchg
cld
sub
inc
aam
jnp
outsl
add
mov
inc
cmp
sub
xor
pushw
inc
popa
jb
push
add
sbb
inc
js
mov
push
ja
jbe
outsb
or
mov
cmp
mov
fwait
jnp
inc
sahf
out
pop
loop
jns
or
mov
inc
xchg
in
add
jo
orps
cltd
test
cmp
pop
aad
nop
jg
int3
rolb
mov
jns
loope
aad
ja
movsb
push
insl
fimull
mov
adc
sub
push
add
jp
out
repnz
xlat
and
dec
add
sub
sub
cmp
sub
test
inc
aaa
mov
in
in
pop
pop
push
icebp
pop
pop
jl
loopne
and
inc
cli
push
sbb
xchg
xlat
repz
sbb
insl
mov
hlt
or
pop
mov
sbb
lods
mov
repz
mov
sbb
jg
aad
mov
push
in
int
add
adcb
jb
pop
adc
fndisi(8087
inc
pop
and
mov
pop
add
sbb
test
sub
clc
shll
pop
out
rolb
nop
ss
aad
inc
imul
add
xor
out
cmpsl
enter
ret
std
push
xor
daa
cld
int3
fwait
push
mov
pop
sti
in
std
adc
mov
jmp
add
insl
popf
insb
cli
out
mov
xchg
jp
add
pop
cwtl
inc
and
xchg
out
leave
mov
push
pusha
shl
ror
jnp
and
inc
sarl
or
push
ja
aad
or
sti
lcall
inc
fnstenv
rcrl
ret
lahf
out
adc
adc
cld
cmpsl
jns
cltd
add
aad
loope
dec
ficoml
xchg
xchg
test
ds
fdivrs
sbb
xchg
xchg
mov
inc
mov
cmc
adc
nop
ret
loop
pop
cmc
mov
ss
cmpsb
mov
mull
test
testl
das
addr16
mov
pmulhuw
cmp
jg
xor
xlat
ds
xchg
mov
enter
loop
cmp
adc
or
mov
xchg
sbb
pop
pop
mov
outsl
repnz
scas
inc
mov
mov
inc
jns
adc
pushf
lsl
adc
inc
push
addr16
loope
bound
rcll
mov
ret
cwtl
xor
aam
push
pop
xchg
cmp
xor
xlat
imul
or
mov
adcl
imul
push
push
pusha
in
sbbb
outsb
std
imul
xchg
movsb
mov
test
lret
push
fwait
fs
leavew
gs
push
lret
adc
push
movsl
stos
mov
and
iret
push
mov
scas
sbb
inc
pushf
in
add
push
fldcw
stc
popa
scas
jp
cmpb
sbb
imul
lret
push
fwait
sub
adc
add
ljmp
aad
lret
xlat
insl
mov
fcomip
xchg
push
pop
jge
dec
inc
stos
mov
repz
add
push
fistpl
stos
add
push
imul
fwait
das
xchg
or
repnz
enter
add
pop
xchg
inc
mov
jb
push
testl
xor
push
sahf
cmc
push
shlb
pop
lock
fsubs
ss
sbb
jo
mov
sbb
lahf
mov
add
adc
movsl
inc
iret
scas
call
loope
and
dec
jbe
and
lods
sbb
push
mov
je
mov
out
dec
dec
enter
imul
push
mov
stos
jmp
mov
es
adc
or
mov
jo
mov
testb
pop
in
test
inc
in
test
in
stc
leave
pusha
sub
out
jecxz
inc
sbb
push
das
icebp
subb
sub
pop
scas
mov
lock
mov
push
adc
dec
ja
rcll
pop
hlt
fs
out
out
int
jnp
adc
pop
mov
inc
imulb
shll
and
popa
dec
xchg
add
bound
test
sbb
cli
pop
aaa
aaa
out
sbb
or
mov
fstp
jno
rolb
test
iret
mov
mov
cs
daa
and
pop
pop
out
inc
aad
sbb
sti
jbe
jmp
inc
ret
xchg
rcll
mov
popf
les
sbbb
popf
dec
cwtl
mov
mov
mov
out
lock
fisubs
inc
xlat
cmp
pop
pop
adc
sub
pop
xchg
push
jge
sub
pop
mov
ss
lahf
clc
nop
cmc
push
or
pop
sbb
fildll
testl
sub
sub
xor
adc
pusha
and
mov
fdivl
jmp
xchg
fimuls
jmp
std
xchg
push
inc
mov
in
mov
enter
xor
mov
dec
in
push
leave
pop
jo
insl
jg
pusha
pop
cmp
jne
mov
jo
out
sbb
fistl
pop
cmp
popf
xor
push
cmpb
mov
fstps
mov
and
pushf
push
call
sahf
scas
and
mov
fstpt
or
inc
xchg
insl
mov
add
pop
mov
xchg
pop
test
loope
jmp
out
pop
push
pop
aaa
pop
jae
adc
iret
inc
xchg
ss
loop
sbb
dec
sub
add
fnsave
sbb
test
push
divps
push
into
adc
jp
in
leave
push
fsub
je
push
sub
lods
mov
jbe
jecxz
mov
aad
lock
mov
scas
aam
xor
or
cmp
add
sub
lock
jg
lea
dec
jne
inc
cltd
inc
jle
shll
jbe
shlb
xor
ficomps
inc
push
mov
mov
sbb
ret
mov
addl
pop
mov
data16
sub
out
dec
test
sub
lret
jg
xchg
pop
icebp
pop
int
ret
mov
leave
fwait
inc
xlat
clc
push
jge
and
pop
testb
mov
jge
jb
fnstsw
gs
int3
pop
adc
cmp
inc
ret
mov
adcb
inc
sbb
test
outsb
add
mov
fsubr
scas
push
int3
mov
push
fiaddl
fimull
adc
aam
fistpl
mov
in
aad
js
sahf
sub
in
pusha
lea
iret
fimull
je
push
xchg
xor
pop
cmp
or
sub
sub
add
or
enter
push
pop
jb
out
inc
out
sbb
add
mov
sbbb
mov
ret
outsl
mov
and
push
jo
clc
adc
bound
pop
jp
jmp
xchg
hlt
push
mov
arpl
jnp
scas
xchg
cli
mov
xlat
mov
mov
add
sbb
sbb
xor
ret
jg
mov
shrb
pushf
lods
lret
push
and
aas
fwait
jecxz
pusha
push
dec
in
stc
or
scas
mov
and
mov
lds
inc
cli
cmp
imul
dec
mov
aam
pop
bound
mov
lcall
and
loopne
jmp
outsb
je
mov
sub
cwtl
pop
xor
lcall
sbb
pop
adc
fsubl
push
loop
xchg
add
mov
loop
xchg
rcl
repnz
cmp
cmp
inc
xchg
stc
nop
enter
out
adc
jge
mov
fnsave
pop
pop
lock
inc
js
icebp
jbe
mov
lods
xchg
scas
and
or
fiadds
fidivrs
sbb
cmp
jl
push
pop
mov
cmpsl
xchg
clc
pop
sub
sbb
mov
aad
xor
cmp
insl
sbb
sbb
and
cmpsb
xchg
sbb
js
stc
cmp
bnd
adc
dec
cmp
js
imul
int3
fildl
pop
and
cmp
popf
lods
cmp
cmp
mov
test
insb
add
notb
and
xchg
cmp
push
xlat
fs
or
cmp
mov
ret
dec
inc
push
and
mov
pop
test
out
aam
sbb
cmp
dec
cmp
xor
adc
or
lock
adc
inc
xor
mov
insl
inc
or
mov
ret
xor
lret
mov
sti
pop
adc
mov
adc
lret
jo
xor
gs
fistl
xchg
mov
ljmp
pushf
and
adc
cli
push
pop
jp
dec
jno
cmp
loope
sbb
jne
aas
sub
mov
dec
rcr
imul
mul
shr
testb
inc
cmp
sub
cltd
push
or
gs
lea
mov
push
xchg
data16
out
sub
out
xchg
es
imul
or
xchg
pop
ljmp
sbb
aam
lcall
push
test
mov
out
mov
es
jo
cmpsl
and
push
pop
and
inc
std
jno
and
xor
mov
mulps
xchg
dec
out
es
push
outsl
jns
xchg
rcrb
cmc
mov
xchg
mov
rclb
jge
xor
xchg
sub
fbstp
xor
fidivl
inc
jp
cmc
dec
scas
mov
pop
popf
xchg
jae
pop
movsl
insb
fsubrl
mov
arpl
jg
rclb
xchg
rcrb
cmp
sbb
sub
loopne
cltd
sub
ss
int
icebp
lahf
xchg
sub
adc
mov
mov
cmp
mov
ja
dec
shlb
lcall
sbb
fxch
in
ds
jmp
negl
test
sarb
ss
out
cwtl
negb
or
cmp
mov
xchg
addb
dec
aam
pop
mov
pop
shrb
pop
add
inc
in
test
and
sbb
int3
movsb
lea
inc
jne
xlat
stos
imul
scas
scas
in
popf
loopne
out
jno
mov
mov
in
shr
xchg
sbb
mov
xchg
mov
dec
sbbb
or
dec
pop
das
add
mov
adc
sbb
cs
pop
jne
movsl
cmp
mov
movsb
sub
mov
mov
incl
sbb
test
ds
imul
dec
dec
daa
mov
mov
inc
inc
mov
test
pop
in
orl
jecxz
je
into
push
add
fbstp
adc
adc
mov
sub
mov
xor
jp
mov
testb
mov
push
cmpb
cmp
dec
filds
adc
add
add
mov
mov
mov
xchg
inc
in
in
pop
pop
test
outsl
es
jne
mov
dec
push
aad
jl
and
imul
mov
jbe
mov
fcomp
jge
in
scas
ffree
stos
insb
sub
ja
imul
idiv
push
scas
cs
mov
inc
fld1
jns
mov
test
add
jbe
lods
jo
xchg
icebp
insb
add
scas
decl
push
stos
push
scas
mov
jl
and
mov
out
jecxz
data16
xor
mov
push
outsb
dec
pushf
push
mov
or
push
cmp
mov
mov
subl
pop
cmp
xlat
cli
js
sti
clc
xchg
incl
sub
push
pop
sub
repz
pusha
out
or
ss
bound
jbe
sbbl
stos
push
mull
cmp
push
popf
pop
xchg
sbb
add
imul
or
out
or
lret
push
mov
inc
out
call
push
repz
or
push
push
jno
cmpsb
add
mov
mov
aaa
push
std
pop
dec
add
and
dec
cmp
sub
aaa
scas
cmp
loopne
xchg
pop
cmpsb
in
xor
xchg
dec
mov
imul
mov
std
cltd
ja
push
inc
push
and
test
mov
inc
pop
sub
pop
xor
mull
scas
lret
sub
cltd
stos
fidivs
ds
cmp
cld
lcall
lcall
insb
addr16
popa
mov
and
shlb
cmc
mov
mov
fbstp
imul
jmp
stos
shll
shrl
and
mov
dec
testl
xchg
cmp
shll
fidivl
shll
es
repz
and
cmp
lods
inc
or
adc
and
xor
fdivr
js
fisubrl
lret
pop
xor
stc
outsl
shlb
dec
shll
lock
cmp
imul
fldcw
pop
jp
sbbl
ds
mov
dec
fidivs
add
cmp
mov
pop
or
push
mov
add
sbb
mov
inc
lds
xchg
jae
mov
mov
jb
sub
fucomip
cltd
adc
in
push
stc
cmp
xor
mov
les
imul
dec
mov
lret
push
cli
mov
add
aad
fadds
daa
pop
lcall
and
jae
inc
daa
cli
mov
pop
inc
ljmp
push
pop
xchg
pop
mov
iret
shld
repz
js
out
adc
push
mov
cmpsb
lea
mov
sbb
mov
lcall
mov
mov
mov
fwait
loop
stos
arpl
shlb
xchg
loope
cmp
mov
xchg
fldl2t
sti
push
mov
push
popf
lods
xor
scas
stos
hlt
mov
lods
push
sahf
sbb
lret
cld
shrb
fimull
mov
and
fldcw
xor
mov
fisubrl
insl
mov
mov
xchg
icebp
arpl
rolb
or
cwtl
jle
lret
lret
jg
pushf
scas
xchg
mov
out
add
mov
mov
sbb
xchg
mov
sahf
add
ret
fiaddl
add
int
sbb
dec
jb
jle
ds
jno
loop
add
inc
xchg
cltd
int
jns
mov
lods
or
mov
loope
pop
xchg
movsl
mov
push
ljmp
roll
rcrb
fs
sbbl
xchg
inc
push
mov
loop,pt
add
xor
imul
lcall
mov
xor
xor
nop
pop
iret
and
repnz
lods
push
loopne
add
xor
inc
lret
decb
fwait
repz
imul
mov
adc
lret
add
jno
imul
cli
inc
int3
fs
xor
das
push
inc
add
ficompl
cltd
mov
xchg
dec
repz
rsm
insl
pop
hlt
popf
pop
mov
movsl
aaa
jnp
movsb
dec
cmc
mov
dec
sbb
out
cmp
pusha
or
sarl
sub
jb
push
dec
jge
sahf
xor
pop
inc
jmp
fildl
xchg
sub
xchg
mov
sub
push
in
ja
jne
mov
inc
in
andb
lock
pusha
ss
sub
push
adc
je
popa
lods
loop
inc
adc
dec
dec
gs
fmull
mov
sub
sbb
icebp
sbb
pextrw
pop
inc
cli
xchg
pop
adc
pop
movsl
push
adc
pop
addr16
loope
xorb
push
mov
pop
scas
outsl
xchg
shlb
xchg
sub
and
pop
sub
into
divb
mov
adc
addr16
loopne
dec
mov
lds
jecxz
xchg
and
addl
add
shll
mov
mov
cmp
add
cs
or
pop
xchg
lcall
in
aaa
push
lock
stos
cmp
mov
or
cmp
subl
mov
lret
das
sub
dec
inc
sahf
pop
inc
push
int
jae
iret
inc
push
outsl
les
cli
cmp
mov
lcall
ss
rcrl
aad
cs
mov
mov
fs
mov
mov
inc
xchg
inc
addr16
scas
mov
cltd
xor
iret
push
jns
outsb
popf
mov
stos
rorb
dec
jae
xor
pop
imul
arpl
or
ljmp
dec
sbb
xor
lahf
push
clc
test
fisubrl
lcall
mov
std
fidivs
adc
adc
daa
sub
ret
imul
pop
dec
lahf
jno
jb
jmp
pop
dec
movsb
jo
adcb
sub
mov
xor
flds
dec
mul
cmp
push
jmp
fstpt
enter
cmc
cmp
push
test
mov
push
pop
mov
mov
cmp
dec
lahf
adc
shrb
adcl
mov
fisubl
xlat
sub
sahf
adc
mov
pmulhuw
push
insb
lds
sbb
or
dec
in
adcl
push
maxps
andl
cmpsb
mov
dec
fcom
sbb
sub
or
js
aaa
lods
cmpl
lret
pop
or
pop
je
cmpsb
and
mov
mov
mov
adc
sbbl
mov
in
pop
adc
dec
or
mov
cmpsl
xor
sbb
xchg
addr16
xor
aam
cmpsl
jl
xchg
loope
sub
fadds
imul
lahf
in
mov
mov
sub
or
insb
push
mov
repz
mov
jmp
and
inc
leave
and
fsubrs
loope
mov
push
ret
dec
mov
pop
jle
add
mov
jecxz
push
inc
es
xor
mov
and
popa
mov
subl
pop
jb
mov
insb
dec
mov
jle
sub
int
sub
fdiv
xchg
loope
bound
add
cmp
jmp
xchg
mull
lret
stos
sbb
mov
cmpsb
jnp
ja,pt
inc
add
imul
outsl
push
lea
push
jb
or
jns
push
loopnew
pop
icebp
xchg
jb
ret
out
insl
mov
mov
outsb
shlb
imul
out
pushf
loope
rolb
in
inc
cmp
shll
mov
ljmp
loop
push
popf
push
rcll
shrl
imull
sbb
inc
incb
xor
jle
and
pushf
xor
pop
cmpl
xchg
mov
sbb
jne
xor
inc
rclb
push
rcr
sbb
dec
in
xor
mov
addl
inc
cltd
push
in
ret
inc
outsl
pop
and
push
dec
into
or
add
mov
adc
fnstsw
add
fadds
sub
sbb
and
in
hlt
inc
std
xchg
cmpsl
insb
add
mov
int
aaa
bndstx
ret
jle
add
sbb
cwtl
sub
leave
mov
shl
scas
in
fs
enter
jnp
push
int
into
xchg
das
stos
add
mov
inc
pop
xchg
or
cmp
add
add
mov
push
cwtl
dec
out
mov
cwtl
pop
push
jo
aas
bound
and
je
rcr
xchg
mov
sti
xchg
sub
push
fwait
rol
shl
and
lods
cmpl
mov
dec
pop
or
dec
gs
arpl
and
cmp
xor
loop
inc
or
sub
testb
jge
in
and
lahf
add
nop
inc
call
sbb
arpl
and
fldl
xchg
out
mov
lods
xchg
cmp
pop
dec
aad
adcb
dec
sub
push
pop
mov
lods
inc
dec
test
lret
fsubl
outsl
stos
sbb
cmp
adc
lods
inc
sahf
repz
into
xor
in
testb
cmp
mov
ja
sub
cltd
stos
mov
sbb
xchg
jge
imul
jmp
ret
push
or
mov
lea
adc
in
stos
cs
mov
pop
fs
dec
rorl
sarl
xchg
sub
pop
out
push
adc
cltd
scas
push
fidivl
or
inc
dec
mov
inc
sahf
mov
dec
fisubs
mov
pop
mov
xchg
scas
negl
mov
fbstp
adc
dec
shl
and
dec
push
in
push
mov
test
loope
lock
pusha
sbb
test
stos
popf
stc
test
jne
xor
fwait
movsb
rorb
adc
outsl
sbb
nop
jp
ret
sbb
lret
stc
bound
add
sahf
ds
sbb
fxch
stc
xor
sub
pop
mov
loope
sub
rcrb
sub
dec
in
pop
push
mov
dec
fidivs
cmp
ss
sbb
loopne
imul
pop
movsl
ss
jg
sbb
insl
jge
pusha
pop
int3
fmuls
bound
rcr
es
lods
push
pop
imulb
mov
jbe
pop
nop
clts
es
mov
inc
notb
sub
xchg
aaa
sub
pop
dec
pop
rorb
inc
dec
jb
popf
dec
jbe
mov
ret
xchg
mov
cmc
push
mov
pop
sbb
push
xchg
inc
clc
add
push
idivb
sub
dec
jl
orl
pop
mov
cmp
lds
fst
lods
daa
enter
mov
lret
and
pop
add
or
jge
fistps
jge
aas
std
cli
xor
test
sti
rorb
negl
ret
sbb
in
or
imul
add
lahf
hlt
es
add
add
pop
cmpsl
lods
insb
adc
pop
loope
ret
ljmp
jns
hlt
cmpsl
fs
popf
sarb
imul
scas
lods
iret
mov
shlb
test
divl
outsb
fidivrl
lahf
ss
cmc
clc
mov
ss
jnp
fistl
das
icebp
or
test
inc
je
sti
dec
xchg
int
scas
xchg
leave
pop
mov
pop
sub
dec
popa
sbbl
pop
xchg
cltd
jl
pop
test
sub
mov
call
add
rolb
push
lcall
pop
pop
inc
xchg
fs
ret
jns
ljmp
push
jne
cltd
xlat
repz
rclb
out
icebp
insb
fdivrl
movsb
lret
lock
sbb
fdivrp
adcl
mov
jmp
lods
mov
dec
aam
xor
popa
inc
push
or
or
repz
push
out
pop
rorl
mov
adc
stos
mov
mov
and
dec
daa
mov
xchg
xchg
test
xchg
xchg
iret
imul
enter
rcll
push
test
insb
lock
repz
and
adc
cwtl
mov
lret
xor
and
inc
mov
xchg
loope
jg
mov
sbb
les
mov
sbb
out
outsb
xorb
es
add
mov
ret
test
push
addr16
sti
pushf
jecxz
push
leave
iret
mov
ss
xor
mov
and
ja
test
push
test
mov
in
mov
sub
inc
in
jns
fldt
inc
pop
rclb
cmp
imul
inc
mov
jno
or
xchg
subb
add
in
pop
arpl
push
xchg
push
outsb
adc
lcall
and
lahf
dec
sbb
pushf
sub
les
imulb
clc
das
out
pop
mov
adc
cli
imul
test
lea
imul
ss
xchg
sub
pop
divl
sub
jle
jg
ret
ffree
jae
and
iret
fwait
cmp
sbb
jne
push
push
sahf
xorb
int3
xchg
jae
mov
cmpsb
cmp
lock
ja
pushf
test
lret
rolb
and
mov
cwtl
out
test
adc
jno
mov
dec
repnz
xor
fcompl
pushf
iret
xchg
or
and
sub
mov
pop
sbb
xchg
mov
mov
jbe
mov
sti
insb
test
push
add
shrb
jb
arpl
stos
fsubrs
xlat
repz
lcall
cld
lcall
rcl
mov
pop
imul
or
mov
push
imul
lds
inc
leave
or
insb
fists
add
sti
andb
jb
pushf
mov
lahf
mov
sbb
mov
fstl
pushf
test
fcmovne
loopne
jne
arpl
pop
mov
in
jae
aaa
sub
add
pop
sbb
push
or
ds
xchg
mov
pop
mov
data16
scas
xchg
clc
inc
stos
ftst
mov
xchg
fbstp
sbb
enter
xor
data16
and
dec
and
test
cmp
xlat
sbb
push
xchg
mov
inc
push
aas
ficomps
jnp
in
in
pop
xchg
sub
in
add
lock
mov
push
push
jns
orl
xchg
cmp
popa
mov
adc
imul
je
or
mov
jp
stos
adc
mov
dec
loopne
outsb
stos
mov
sbb
data16
sbb
imul
movsb
dec
add
es
jl
inc
cmp
in
push
sti
cmpsl
mov
or
test
imul
ss
and
xor
ljmp
mov
jb
outsl
int
test
cmc
add
sbb
jge,pn
mov
add
mov
push
xor
cmpsl
out
ret
repz
decb
adc
loope
jnp
lods
and
push
sbb
aaa
repnz
ficoml
adc
cmp
xchg
je
dec
daa
lock
and
inc
jp
add
add
push
cwtl
aad
jp
addb
testl
xchg
cmc
sbbb
pop
mov
sub
jae
nop
aaa
push
ret
xchg
mov
push
cmp
in
xor
in
pusha
push
adc
jmp
or
stos
gs
int
mov
pop
cltd
mov
dec
sti
dec
clc
lahf
adc
sbb
enter
dec
dec
loop
inc
fisubl
sbb
xlat
sub
push
xor
cltd
xor
movlps
and
or
fwait
fs
push
scas
mov
push
cmovp
mov
movsl
inc
inc
pushf
ljmp
jno
jno
bound
lea
jge
iret
inc
fnstcw
jmp
popa
out
mov
testb
xor
loop,pt
cltd
lcall
adc
das
jl
fs
imul
push
cmp
pusha
jecxz
mov
push
mov
mov
test
pop
addr16
sbb
insb
sbb
sahf
hlt
in
std
add
inc
xchg
pop
fdivrl
dec
es
fchs
and
mov
pusha
insb
repz
test
pop
mov
add
cmp
jbe
jb
scas
xor
adc
mov
cmp
lds
or
int3
outsl
rorb
push
sub
mov
lods
stos
aaa
jbe
into
pop
bound
cmp
cmc
mov
push
cmp
shrl
or
xchg
pop
pushf
movsl
fcoml
xor
scas
les
adc
addr16
maskmovq
negl
push
das
or
jns
xor
push
call
cmp
outsl
push
cli
scas
pop
lahf
loopne
xchg
adc
test
fwait
xor
xchg
xor
lret
popa
mov
lret
push
pop
nop
xlat
sub
lret
pusha
mov
fcomps
pop
stc
scas
dec
jecxz
loop
das
adc
dec
jl
inc
call
loope
pop
loope
in
clc
or
sar
iret
sbb
shll
scas
mov
movsb
repnz
or
aad
leave
std
push
in
pop
mov
mov
test
roll
in
cli
outsl
cmp
xor
jmp
rorb
mov
xchg
sub
int
fs
dec
test
ret
mov
or
xchg
jl
into
fdivrl
fwait
pop
xor
push
in
je
mov
mov
jne
mov
lods
fsubl
mov
loopne
sbb
pushf
xor
jno
out
sub
inc
pop
hlt
push
sub
fxch
jmp
in
mov
in
mov
ja
mov
rcrl
andl
out
inc
movsb
data16
aad
or
arpl
xor
lods
mov
add
je
clc
movsl
mov
xor
dec
jge
xchg
cli
jns
mov
lret
loop
repz
nop
outsb
sub
adc
les
sar
aad
push
mov
aad
pop
movsl
or
ss
sbb
sub
stos
shl
sub
sbb
mov
addr16
push
mov
add
in
es
test
lods
mov
inc
jecxz
je
jns
shl
mov
xor
fsubl
fsubrl
lds
adcb
add
cwtl
xchg
daa
retw
enter
pop
push
sahf
decb
in
pop
out
xchg
add
ret
jbe
stos
lahf
pop
lock
mov
push
xor
add
nop
xor
adc
pop
lds
outsl
bound
sbb
sub
movsl
outsb
ret
adc
mov
sbb
in
fwait
cmp
jl
lea
fcmovbe
jle
mov
mov
cli
roll
fs
imul
sbb
rcrb
fbstp
test
xchg
out
aaa
cwtl
out
mov
cs
xchg
inc
pop
das
inc
and
lds
enter
lds
mov
dec
push
dec
test
inc
inc
mov
iret
push
fstl
dec
decb
jmp
mov
ljmp
fcmovb
xchg
push
and
push
xor
fmulp
cmpl
stos
mov
or
jge
loopne
push
sbb
xchg
dec
pop
mov
out
mov
das
lret
jbe
test
adc
push
mov
xchg
pop
push
inc
jp
outsl
mov
pop
enter
cmp
dec
dec
push
cmp
in
call
sbb
mov
cmpsb
dec
outsl
fcmovnb
enter
ss
xor
inc
outsl
and
or
shlb
xor
mov
sbb
dec
insl
popa
stos
sahf
jnp
dec
out
ss
adc
loopne
or
lahf
cmp
cmp
cwtl
repz
dec
fs
insl
cmp
aas
sahf
fcompl
lcall
add
fsubrs
pop
testb
in
in
add
pop
mov
inc
aad
in
push
cmpsb
adc
in
shr
nop
pop
xchg
xchg
sub
cltd
sahf
xor
sti
out
sub
mov
cmp
testl
add
cmp
fwait
in
or
fnstcw
pushf
pusha
mov
int
es
imul
mov
ret
mov
in
gs
inc
jecxz
ja
clc
cwtl
outsb
icebp
clc
mov
insb
ret
sub
lods
inc
movsb
xor
outsl
imul
in
addr16
fnstcw
push
divb
mov
add
push
mov
lea
inc
flds
rcrb
mov
mov
fisubs
push
mov
mov
and
into
rorl
xchg
fsts
in
mov
and
psubusb
pop
or
jle
push
dec
mov
mov
inc
pop
es
stos
clc
ficoml
xchg
leave
lahf
jb
ja
insb
xor
mov
add
decl
ds
and
movsl
push
push
cwtl
iret
push
into
daa
hlt
xchg
arpl
inc
pop
add
and
popa
cmpsb
pop
loop
ds
shr
mov
shr
pop
jecxz
cmp
pop
shlb
adc
repz
enter
xor
std
not
cmc
divl
sub
xchg
adc
or
mov
pop
inc
push
jb
cmp
iret
and
inc
adc
stc
adc
pop
iret
push
sbbl
cld
mov
sbb
push
jns
pop
icebp
push
mov
divl
subl
into
popa
leave
call
pushw
lret
adc
mov
movsb
mov
rolb
add
mov
scas
mov
ljmp
pop
or
rorl
rcr
sub
loopne
movsl
stos
cltd
lret
mov
out
add
mov
fs
jb
jl
push
sbb
xchg
adc
xchg
xchg
cmp
fsubl
inc
pop
cmpsb
incb
mov
xor
pop
lcall
pop
in
push
lea
fisubs
xor
sbb
add
adc
fmull
dec
xor
xchg
add
sbbl
and
sub
mov
stos
scas
imul
aam
arpl
mov
pop
les
sbb
xchg
shr
ret
stos
push
mov
sub
mov
adc
sub
fnsetpm(287
jg
and
scas
aas
adc
adc
sahf
stos
xchg
js
movsb
addr16
sbb
sub
hlt
cmp
sbb
push
call
mov
pop
dec
mov
or
inc
sub
sarl
test
das
fcoml
rdrand
mov
bound
jnp
rcl
jnp
or
gs
mov
sub
popa
xor
cmp
dec
sub
mov
in
stos
popf
sbb
scas
jnp
xor
dec
xchg
lds
popf
pop
sahf
dec
aas
test
std
inc
sarl
sbb
inc
out
sbb
cmp
mov
fstl
mov
fs
mov
enter
xchg
sbb
dec
inc
pop
fsubl
push
in
jmp
ret
fnstenv
repnz
cmp
ljmp
adc
cmc
mov
jge
pop
repnz
sub
lcall
loopne
inc
loopne
jnp
fbstp
mov
mov
pop
arpl
inc
fidivl
test
sahf
pop
fpatan
adc
mov
jge
lret
addr16
mov
rclb
stos
scas
inc
or
jp
inc
std
mov
pusha
sbbb
push
outsl
mov
shlb
andl
lret
cmp
push
ljmp
data16
enter
and
bound
insl
mov
mov
jge
or
sahf
enter
push
imul
mov
dec
or
mov
sub
xor
fwait
jb
out
inc
pusha
sar
jno
leave
pusha
testl
xchg
sub
pop
xorl
pusha
sbb
xchg
cmpsb
ret
pop
mov
jne
dec
aam
stos
stc
or
mov
push
dec
fwait
int
je
cmp
cwtl
out
sbb
call
cmp
mov
mov
sbb
inc
stos
and
scas
xchg
cli
or
dec
dec
es
pop
das
in
pop
dec
pop
sahf
push
jo
mov
xor
pop
mov
jns
or
fcmovnbe
rcl
mov
je
fidivs
add
jb
cli
or
ds
nop
mov
mov
or
leave
push
cmc
cmp
xchg
aam
mov
adc
xchg
and
cwtl
out
push
mov
and
fdivr
mov
mov
sbbl
popf
loopne
xlat
fnsave
fstpl
sub
pop
dec
pop
mov
pop
imul
in
inc
add
xor
stc
orl
sarb
push
push
mov
xchg
in
pop
dec
in
inc
adc
cmc
fsubrl
push
sub
ret
out
or
out
mov
and
add
in
xor
sub
xchg
test
xor
movsb
bnd
or
pushf
aad
repnz
enterw
pop
push
jle
push
push
cltd
mov
test
or
push
mov
cmp
cmp
jle
inc
sbb
pop
subw
fsubrs
xor
insl
lret
jno
std
mov
mov
je
adc
add
movsb
data16
inc
xchg
aad
sbb
jno
push
pop
xor
fsubrl
cli
std
mov
and
lods
adc
repnz
mov
cmp
push
mov
cmp
insl
push
or
and
jmp
ret
jp
and
mov
out
divl
in
sbb
mov
gs
repnz
dec
xchg
ljmp
div
out
out
popf
add
fxtract
aad
ljmp
jnp
cmpb
fnstsw
push
add
fmuls
mov
loop
imul
loop
stos
xchg
outsl
jmp
int3
or
sbb
repnz
cmpsb
inc
cs
je
jb
adc
or
es
inc
cltd
jbe
lods
mov
mov
mov
jnp
dec
loop
push
pop
jbe
push
cmp
mov
mov
jmp
decb
mov
dec
lock
xor
shr
jns
stos
repz
mov
sahf
pop
in
mov
sbb
jmp
and
and
iret
adc
and
fmull
fstl
lcall
lcall
insw
int
pop
add
push
sbb
mov
jg
or
setno
sub
mov
aam
or
xchg
cmc
push
mov
movsl
int3
fiaddl
rorb
dec
outsb
pop
cmpsb
push
xchg
lock
jmp
scas
jb
adc
enter
mov
mov
xlat
mov
sbb
mov
aam
xlat
push
or
cmp
test
leave
testb
loop
lea
inc
add
in
push
ljmp
fbstp
jne
xor
xchg
mov
loope
and
lds
mov
jne
popa
test
mov
call
cmpsb
cld
cmp
cmp
shlb
fidivrs
jns
into
cmpsl
dec
loopne
jle
dec
fsubrs
add
insb
jne
scas
mov
imul
mov
movsb
mov
add
adc
das
pushf
sub
pop
sub
add
gs
sbb
jne
mov
lahf
and
xchg
inc
inc
int3
mov
or
ficoml
jmp
ljmp
inc
movsb
ds
in
fincstp
daa
jle
cli
je
jl
xchg
sub
jmp
pop
xor
cmp
pop
sbb
mov
test
sbb
int3
or
jne
mov
dec
insb
inc
cld
lcall
imul
stc
sub
movsb
decb
movsb
adc
rorl
or
cli
xchg
cltd
cltd
arpl
jge
mov
or
sbb
je
lock
scas
out
jmp
push
xchg
pop
cmp
out
dec
sbb
std
addb
daa
pop
xor
or
inc
fisubl
dec
jnp
jl
lods
add
or
mov
adc
push
push
hlt
mov
push
popa
xor
xlat
dec
cmpsl
inc
mov
outsb
enter
insl
add
xchg
aaa
hlt
or
push
mov
jle
or
pop
insl
insb
sub
or
adc
jg
fisttps
lds
add
aam
cmpsl
shrb
add
jb
add
dec
stos
negl
clc
xchg
cmp
pop
cmp
pushf
mov
push
mov
sbb
icebp
test
sti
mov
dec
loope
mov
jl
imul
js
dec
fildl
jmp
lcall
outsb
mov
pop
imul
clc
stos
mov
pop
sub
fbld
xchg
push
jne
js
xor
mov
xchg
cmp
mov
mov
mov
adc
add
aaa
gs
cmp
push
jae
outsb
stos
mov
pushf
or
push
pop
cmovle
sbbb
mov
idivl
cmpsl
in
imul
les
loopne
mov
ret
mov
je
test
dec
jle
ret
sub
adc
or
fidivrs
adcb
and
add
and
mov
enter
push
or
xchg
push
dec
sub
stos
lods
jmp
test
inc
fcomip
inc
pop
sub
pop
cmp
ds
test
je
push
push
xchg
cmp
add
leave
xor
lahf
lods
xchg
lea
cmp
xchg
pop
sti
mov
sub
cmpsb
jne
sbb
jo
mov
and
add
loopne
jae
frstor
inc
enter
pop
fs
mov
js
mov
pop
scas
dec
pop
roll
addr16
mov
and
aad
js
xchg
pop
sbb
pop
stos
pop
loope
jl
mov
cwtl
jp
hlt
mov
or
mov
test
lret
xor
idivl
jnp
jbe
cmp
je
or
xor
cld
pop
add
lret
sti
lcall
cltd
pop
lods
push
adcl
test
test
cwtl
test
lahf
adc
pop
rorb
push
xor
or
cs
pushf
clc
mov
jg
loope
cs
int3
out
es
dec
sbb
lods
jns
mov
mov
lret
sbbl
push
xchg
sub
shlb
sbb
cmp
jmp
mov
je
test
lret
repz
xchg
mov
cltd
mov
mov
inc
arpl
xlat
scas
push
push
xchg
fsubl
fldl
repnz
andl
adc
jne
ret
fwait
sti
dec
outsb
js
mov
dec
xchg
aas
int3
into
js
inc
repnz
sub
jge
call
insl
xor
adc
cli
hlt
mov
fdivs
sub
mov
push
mov
jne
push
fadd
jo
fs
cwtl
test
jp
sub
xchg
rclb
hlt
mov
insb
cmpsl
add
jns
mov
cmp
push
dec
mov
cmp
popa
into
dec
adc
cmc
sbb
pop
sub
push
fisubrl
pop
pop
lds
test
jmp
dec
lahf
jns
push
cs
pusha
test
pop
sbb
sbb
xchg
pop
sub
push
divb
xor
pop
and
jmp
in
cmp
in
mov
sub
cli
xchg
mov
sbb
add
jl
cmp
repnz
call
fsubl
add
mov
add
lods
into
jb
mov
jne
mov
adcl
out
cs
sbb
jg
jns
repz
jp
bound
push
fwait
inc
addr16
fcmovne
xchg
jmp
or
push
test
add
scas
inc
pop
and
xchg
push
aas
mov
gs
mov
stc
jecxz
loope
push
out
mov
or
add
mov
hlt
aam
jns
push
das
cmp
xor
inc
fisubrl
loopne
leave
sbb
pop
dec
xchg
xor
ror
xchg
retw
lods
ss
xchg
mov
push
or
jecxz
sub
pop
sbb
xchg
das
mov
fnsave
repz
ds
dec
adc
lds
movsb
test
pushf
ret
jo
or
pop
cli
sbb
mov
pop
cmp
insl
mov
movl
xchg
pop
jecxz
les
inc
faddl
test
cmp
xor
inc
pop
fbstp
adc
or
ja
pop
or
mov
gs
jno
fsubrp
push
sub
scas
fidivl
add
cmp
cli
call
cmp
stc
mov
mov
mov
push
out
into
mov
ds
outsl
fiadds
sub
outsl
stos
push
insb
femms
and
jae
in
adc
ljmp
adc
xchg
mov
sbb
int
pop
cmp
pop
test
lret
jp
leave
mov
sub
stos
pusha
dec
mov
sub
xor
cwtl
dec
stos
inc
cltd
and
lds
push
nop
pop
fadds
pushf
jecxz
pop
clc
ljmp
pop
dec
je
jne
outsl
movsl
cmp
sarl
mov
jae
loop
push
test
out
andb
mov
pushf
daa
push
outsl
xchg
aad
and
mov
inc
inc
xchg
lods
push
mov
mov
nop
push
and
sti
aad
in
cmpb
mov
xlat
mov
or
mov
xor
xchg
jae
movsl
sbb
push
cld
mov
pushf
mov
movsl
push
fsubl
insb
cltd
std
jnp
sub
imul
add
aaa
mov
push
in
dec
mov
inc
aaa
or
cmp
test
sub
cmp
je
sub
mov
push
inc
psubusw
sti
sub
aas
sub
sub
leave
andnps
mov
stos
mov
mov
int3
aad
popf
repnz
mov
xor
push
cmp
fsubrl
ret
mov
adc
ja
jbe
push
xchg
pusha
jmp
std
or
dec
xchg
outsl
daa
lcall
arpl
aaa
leave
mov
mov
sub
mov
pop
lock
inc
pop
sub
xor
push
stc
out
scas
jnp
loopne
lret
fs
aas
loope
outsl
jmp
dec
outsl
lahf
movsl
mov
fldenv
and
cmp
test
mov
lds
lods
nop
dec
mov
movsl
dec
sub
mov
ret
fucomip
les
lods
add
cmp
dec
lods
divl
hlt
xor
xchg
ss
mov
add
jbe
clc
cmpsl
popf
jae
jmp
sbb
ds
loope
add
push
fdivl
or
out
sub
xchg
add
cmp
pop
sub
push
add
lock
xchg
sahf
adc
xor
testb
add
leave
lock
es
in
fwait
cltd
jmp
inc
arpl
jle
shrl
stos
les
outsl
in
repnz
xor
ret
test
cld
or
in
fs
sub
cmp
jge
jl
xchg
pop
xor
cmp
das
xlat
or
mov
ret
push
stos
js
dec
and
adc
push
adc
les
mov
scas
jo
inc
push
iret
outsl
loop
add
test
inc
fadd
addr16
pop
dec
arpl
jnp
sub
xchg
ret
je
xorb
movsl
sub
fstps
xchg
in
test
cmp
outsb
lock
push
scas
pop
mov
inc
or
xchg
cli
test
and
rolb
test
lret
pop
mov
pop
es
mov
mov
sub
mov
fidivl
incl
or
xor
loopne
jo
or
pop
test
dec
cmp
lods
push
xchg
sub
mov
shl
out
pusha
test
xchg
int
push
shlb
mov
cwtd
lret
xchg
mov
pop
adc
dec
xor
fists
jl
call
nop
or
imul
std
or
es
cmp
loopne
mov
push
adc
jns
cltd
ret
jns
pop
and
popa
inc
mov
pushf
or
mov
push
xchg
push
fucomi
dec
js
lock
push
add
sahf
int3
hlt
adc
or
daa
fistpll
ja
cmpsl
adc
and
sbb
loopne
pop
mov
out
push
push
fmull
mov
pmaxub
hlt
daa
iret
test
xor
xchg
push
into
mov
adc
insl
fildl
dec
pop
adcb
rcrb
shrb
and
dec
push
fildl
push
xchg
inc
dec
mov
ret
mov
cmc
jmp
push
test
xor
push
nop
mov
cmp
inc
fsubl
lds
fisubrs
into
test
xorb
mov
adc
outsl
pop
lods
pop
jbe
and
jbe
ds
pop
inc
or
test
mov
lret
lret
jo
push
cltd
mov
push
jecxz
jbe
test
repnz
hlt
lret
das
pop
test
dec
add
mov
jmp
nop
loopne
dec
out
mov
jge
sub
jbe
or
inc
adc
jg
cmp
aam
mov
hlt
es
jl
mov
cmp
push
or
mov
pop
movsb
outsl
adc
dec
and
sti
into
and
fisttpl
jp
add
fdivs
cwtl
pop
out
pop
jae
arpl
jno
push
es
outsb
imul
xchg
movsl
arpl
aad
xor
ss
mov
add
mov
into
cli
clc
push
xor
mov
les
inc
pop
outsb
inc
scas
call
mov
inc
adc
or
push
stos
pop
adcl
cli
mull
imul
iret
inc
out
jp
out
and
adc
movb
in
fcmovnb
mov
sub
push
repnz
mov
xchg
adc
push
cmp
jecxz
jno
jp
cmc
mov
push
xchg
mov
ds
xlat
jl
rol
outsb
adc
cs
mov
data16
add
iret
xlat
push
adc
repnz
and
jl
clc
inc
mov
notl
stos
jo
fsubrl
frstor
mov
fidivrl
imul
pop
arpl
out
push
leave
xorb
loopne
and
jecxz
aad
ret
dec
add
and
or
inc
lret
jle
out
sbb
xlat
jecxz
nop
imul
mov
pop
pop
or
pop
mov
pop
pop
negb
or
jge
clc
sub
stos
fs
fwait
scas
popf
jg
pop
fstpt
cltd
xchg
lret
xlat
mov
movsl
sbb
stos
pop
enter
and
and
sti
jecxz
ss
lods
jg
mov
add
adc
xchg
jnp
ss
test
aad
enter
cli
dec
outsb
inc
imul
sub
enter
xchg
sbb
movsb
mov
outsb
dec
outsl
mov
mov
repnz
mov
rol
mov
ret
ret
imul
sbbl
iret
bound
jge
js
outsb
lods
jae
cpuid
sbb
add
sti
sbb
inc
xchg
or
fstl
mov
cwtl
mov
out
and
inc
notl
sub
jl
push
out
dec
cmpl
jb
xor
xchg
inc
pop
dec
out
ja
hlt
cmp
push
and
rclb
out
push
cmp
popa
push
insl
andps
in
xor
cltd
arpl
cmp
xor
cmp
cmpl
or
or
adc
cwtl
push
mov
dec
lret
push
rorb
stc
loopne
sub
hlt
mov
inc
aad
rcrl
jnp
nop
lods
pop
push
sbb
mov
outsl
adc
sbb
adc
stos
pop
and
loopne
arpl
mov
dec
mov
add
mov
sub
fs
mov
sti
mov
inc
inc
pop
jo
gs
inc
cltd
adc
xchg
hlt
fwait
push
jmp
cmpsb
pop
popf
xchg
testl
push
xlat
lcall
js
ret
popf
sbbl
cs
lods
in
cmpsl
mov
adc
aam
mov
fidivl
fs
or
cmp
push
mov
in
mov
pop
ja
and
mov
mov
and
jecxz
out
testl
ret
sub
movsl
mov
lcall
and
mov
jae
aaa
dec
daa
lods
add
outsl
shlb
and
std
dec
dec
adcl
mov
lret
jae
adc
jge
xor
int
cmp
enter
sub
mov
gs
cmp
xchg
sbb
sub
lods
dec
je
or
push
xchg
add
ljmp
mov
mov
iret
loope
jae
loope
push
sahf
call
pop
and
movsl
add
inc
pop
call
outsl
sbb
les
lcall
xor
test
sbb
jp
xor
cwtl
mov
adc
mov
cmpb
mov
dec
dec
sbb
xor
adc
enter
push
sub
dec
in
inc
aad
scas
pop
jbe
add
imull
aad
paddusb
cmp
imul
aad
mov
sub
mov
test
test
inc
inc
mov
jne
mov
push
movsl
mov
and
mov
out
push
stc
nop
lea
pop
adc
pop
mov
or
out
mov
mov
push
xchg
push
movb
repz
aad
scas
adc
pop
jne
cmp
adc
xchg
ja
pop
cmc
testb
daa
push
std
js
mov
sbb
clc
pop
imul
xchg
and
fldenv
testb
jno
out
loope
icebp
inc
ret
lret
xchg
sub
pop
adc
inc
fnsave
std
or
cmp
test
fldt
jne
jbe
jmp
xchg
mov
add
scas
xchg
xor
sbb
sub
lds
sbb
mov
cmp
imul
jbe
jae
sbb
les
cli
mov
and
rcll
mulb
xchg
push
addl
or
loop
or
and
dec
stc
enter
sbb
sub
negb
cmp
pop
pop
dec
dec
and
push
mov
daa
ljmp
outsb
sub
das
jp
pop
jb
cmpsb
pop
ds
and
or
mov
xlat
hlt
cmc
mov
jle
inc
add
imul
call
insl
nop
inc
sbb
test
xchg
hlt
cmp
jno
btr
cmp
dec
jge
xchg
push
popf
sbb
incl
aaa
into
pop
popf
pop
xor
jnp
aas
inc
inc
ds
cmp
ds
mul
imul
xchg
xor
rcl
mov
push
jl
movsb
mov
adc
in
mov
cmpsb
xchg
push
mov
lret
xor
sbb
cmp
push
adc
cli
jp
xor
xor
pop
push
leave
std
adc
cmpsb
mov
push
cmpb
cmpsb
and
fsubs
lret
sub
mov
loope
dec
xlat
shl
jo
enter
or
das
stos
stos
inc
jmp
sbb
push
mov
pop
insb
imul
mov
or
je
add
cld
xor
xor
jnp
leave
lods
pop
out
cmp
sbb
cmp
cmp
push
mov
sarl
xchg
popf
xchg
pop
iret
hlt
pop
in
cld
sub
mov
sbb
mov
jge
pop
ja
xchg
mov
sbb
add
cmp
fldt
jbe
inc
mov
inc
cli
movsl
inc
sti
leave
test
inc
faddl
rorl
mov
push
jno
test
lcall
pushl
out
mov
push
mov
bound
inc
call
jmp
nop
daa
ss
fidivrs
fcmovbe
cmpsb
cmpsb
andl
and
sbb
popa
into
push
std
mov
xor
or
sub
sbb
sbb
shl
icebp
sbb
cs
mov
sbb
mov
or
or
in
repnz
in
push
insl
test
or
lea
inc
sbb
lods
mov
outsl
scas
js
adcl
inc
fistpl
or
call
jb
sbb
adc
movsb
adc
jle
mov
fstl
mov
push
cmpsl
test
sub
hlt
dec
mov
addr16
cwtl
dec
test
sarb
xor
cs
clc
out
aam
add
and
leave
cmp
sahf
cmp
mov
xchg
mov
inc
je
jne
ds
sub
les
mov
jl
pop
sbb
fldl
cltd
push
call
js
aas
pop
popf
stc
mov
dec
bound
leave
dec
push
sub
js
jb
sub
lahf
imul
fistps
call
leave
push
pop
mov
dec
mov
xlat
repnz
loope
add
mov
in
or
push
mov
and
cmc
mov
loop
xor
shrb
or
cli
popa
xor
std
insl
xchg
aaa
mov
pop
cmpsl
cmp
pop
push
pop
pop
jl
push
add
cmp
jno
sahf
loop
jno
mov
and
and
or
cld
inc
mov
dec
in
sbbl
les
mov
and
lea
or
imul
mov
out
lret
and
mov
ljmp
jno
and
xor
add
lcall
sub
in
and
jp
xchg
inc
faddl
in
pop
stos
adc
adc
mov
mov
add
mov
leave
push
push
add
xchg
iret
xor
dec
sub
dec
mov
data16
lods
xchg
inc
inc
enter
jno
movsl
push
mov
and
or
push
pop
lock
pushl
fwait
sub
mov
rcll
repz
xor
mov
inc
stc
jae
loop
xchg
lods
lea
stc
mov
jge
insb
dec
fildl
pop
inc
cmpsl
cmp
jae
or
sbb
cmp
std
sub
dec
mov
inc
add
cmp
sbb
add
dec
loope
sbb
jns
outsl
insl
lock
dec
mov
faddp
rclb
mov
insb
sti
mov
xor
lods
xchg
and
xchg
aas
iret
in
cmp
sub
fistl
loopne
cmp
jp
mov
pop
int3
test
and
xor
or
test
sbb
sbb
int
pop
cmc
cmp
mov
ret
sbb
sbb
add
cmc
test
push
pusha
movsl
push
xchg
sub
sub
enter
test
hlt
xor
and
rcrb
iret
test
cld
mov
xorl
lock
out
and
imul
out
add
dec
push
aas
push
roll
ljmp
jl
jge
addr16
pop
jl
ja
push
sub
lods
xchg
mov
shl
inc
rcr
dec
dec
mov
aam
dec
test
cs
pop
add
nop
mov
jae
cmpsb
lcall
out
sbb
or
movsl
fwait
sbb
jo
xchg
call
out
mov
rcr
xchg
xchg
sar
fistpll
cmp
jl
les
aam
repz
push
das
lcall
lods
testb
ret
aas
push
add
add
jle
xor
es
cmp
fdivl
fcoms
in
imul
pop
lahf
inc
sbbl
cmp
cmpl
sub
mov
loope
mov
loop
xchg
mov
stos
inc
jecxz
mov
test
cld
xor
inc
inc
push
out
addr16
or
repnz
mov
js
cmp
ret
inc
dec
cmp
popf
loop
sbb
in
notb
pop
data16
mov
push
outsb
mov
xchg
mov
mov
fcoms
dec
data16
dec
hlt
sbb
mov
shlb
and
mov
pop
imul
imul
mov
in
aam
sbb
jmp
ss
mov
push
inc
pop
and
jnp,pt
inc
hlt
ljmp
cmp
int3
jo
imul
ss
hlt
mulb
jle
inc
mov
cmpsl
mov
xor
dec
add
icebp
add
inc
inc
mov
cmpsb
je
push
push
negb
jle
dec
pop
adc
shlb
int
insl
sbb
push
in
test
xchg
test
sbb
dec
fwait
aaa
xlat
jbe
add
fwait
cltd
mov
lret
cmp
xlat
jne
and
inc
or
ja
das
jmp
or
bound
pop
cmp
insb
xor
fmuls
out
inc
icebp
push
shll
pop
adc
xor
out
sti
and
popf
rcll
and
mov
sarl
xchg
push
popa
xor
fwait
and
mov
and
lods
and
out
repz
add
or
or
loopne
test
add
shr
popa
jns
cmp
jecxz
cwtl
sbb
pop
mov
out
xor
lcall
xchg
add
pop
loop
aam
jp
jnp
mov
insl
jle
add
int3
mov
push
mov
je
xchg
and
testl
and
fwait
std
push
sbb
adc
mov
sbb
and
mov
mov
mov
mov
daa
mov
mov
test
xchg
shrb
int3
pop
daa
xor
push
mov
adc
mov
and
sub
loopne
bound
and
ja
out
rorl
aas
push
out
jo
push
cmp
jne
push
xor
or
xor
outsb
push
pop
ja
gs
xlat
stos
nop
pusha
stos
add
out
dec
cwtl
or
xchg
inc
cmp
jl
cmc
sub
jp
sahf
sub
filds
xlat
data16
adc
arpl
loopne
inc
or
jecxz
cmovns
aas
popf
sbb
loop
outsl
call
in
push
inc
stos
or
inc
sti
mov
mov
lcall
repnz
popf
js
dec
jl
shrb
je
inc
mov
adc
sub
fistps
rorb
or
dec
nop
sub
mov
jecxz
lock
cmpsb
fistpll
mov
xor
dec
pop
icebp
jns
cmp
lcall
mov
shlb
fsub
js
std
xchg
xchg
orb
repz
mov
push
stos
xor
shlb
xchg
add
jge
in
out
pushf
cmc
cmp
in
das
add
add
or
repnz
cmpsl
jecxz
ja
xchg
imul
and
pop
and
push
mov
ss
mov
ret
in
dec
adcl
mov
clc
xor
mov
fisttpl
sbb
scas
outsl
shr
cmp
lcall
sbb
lock
mov
icebp
or
repnz
xor
outsb
xchg
mov
mov
mov
mov
mov
xchg
aaa
je
imul
stos
and
lret
std
mov
jae
push
cld
mov
pop
ja
dec
insl
outsl
mov
mov
lods
repnz
xlat
sbb
adc
cmp
push
sub
pop
adc
jmp
lahf
cmp
nop
fwait
pop
movsl
in
cmp
mov
mov
cmp
dec
xor
sbb
outsb
jno
and
mov
aad
push
push
aas
dec
dec
sub
mov
or
scas
sbb
xor
cld
sahf
fidivs
adc
movsb
lahf
pusha
shlb
push
popa
sarb
loope
lock
inc
sub
int3
ss
push
imul
mov
mov
mov
sub
repnz
fcompp
xlat
cs
mov
ret
mov
into
popl
es
mov
mov
flds
and
pop
push
outsl
inc
fcoml
in
pop
pop
lcall
sub
and
sub
jne
mov
stos
jmp
jns
ret
fwait
pop
jmp
cld
mov
fucomi
mov
rorl
inc
adc
test
mov
repz
inc
cld
lcall
cmpsb
rorl
call
divb
mov
inc
pop
fucomip
jmp
jmp
xchg
cmp
ljmp
jno
fldcw
dec
mov
mov
or
lret
in
jmp
or
xchg
xchg
adc
lcall
mov
mov
sbb
and
xlat
scas
jno
test
in
fwait
pop
loopne
or
ja
aas
xor
mov
push
jge
movsl
or
and
andb
and
rcr
sbb
mov
inc
aam
mov
aaa
std
or
adc
and
das
jns
push
jb
dec
mov
rcrl
test
xchg
xor
mov
cmp
pop
mov
pop
fdivrs
xor
push
sbb
xor
dec
cmp
xor
dec
sbb
cmp
insb
fbstp
in
dec
adc
fstpt
test
sbb
and
int
adc
xor
cmp
fdivrl
negb
add
sub
push
stos
push
lahf
pop
jb
adc
mov
out
push
dec
adc
sub
cs
aam
push
mov
push
roll
cmp
inc
xchg
ja
pop
lcall
loopne
aas
jp
je
insb
ret
mov
cli
stos
faddl
mov
or
scas
add
mov
cltd
notl
test
lock
and
push
lods
or
xchg
sbb
mov
imul
xchg
ror
cmpsb
les
push
int
aas
popf
mov
inc
mov
xor
ss
dec
adc
cli
lods
push
in
add
or
lcall
mov
scas
xchg
jnp
leave
mov
or
ds
daa
out
xchg
xor
stc
sbb
les
inc
ret
pop
rcl
sbb
popa
sub
pop
shlb
and
push
iret
scas
nop
cld
mov
inc
push
shll
nop
sub
pop
push
pop
daa
movb
movsb
ljmp
dec
push
jb
dec
push
sub
out
pop
ljmp
cs
mov
sahf
notb
out
scas
lock
outsb
jl
shll
mov
or
pop
mov
push
xlat
dec
add
push
inc
sub
enter
movsl
mov
jo
adc
loopne
in
push
sbb
xchg
add
out
mov
clc
or
or
pop
insb
cmpl
xchg
rolb
dec
pop
insl
les
test
aas
aam
inc
or
sbb
pop
push
jmp
and
inc
xchg
dec
arpl
fdivl
movsb
jecxz
pop
test
dec
add
ja
call
push
jno
iret
push
mov
inc
inc
ss
or
sub
xchg
mov
daa
mov
ret
mov
data16
rolb
aaa
push
pusha
cmpsl
fcmovb
lds
test
out
dec
fcoml
jns
ja
int3
dec
add
mov
enter
dec
ds
sbb
sub
negb
add
incb
sub
insl
mov
das
in
cmp
test
out
js
flds
pop
jnp
jbe
push
hlt
fwait
ja
lods
mov
add
push
cmpsb
jbe
daa
outsl
test
mov
pop
xchg
cmp
cpuid
lods
in
popa
push
jno
mov
stc
test
mov
dec
out
xor
loop
mov
dec
icebp
dec
lahf
xor
adc
iret
data16
adc
sti
mov
out
xor
xchg
inc
push
stos
std
mov
adc
icebp
dec
pop
xor
xorb
xchg
sti
lahf
cmp
repnz
leave
cmp
push
lahf
ljmp
inc
int
sbb
push
sbb
leave
and
dec
mov
and
and
xor
lahf
jmp
cmp
das
jecxz
lret
adc
or
add
cmp
pushf
inc
jp
xor
xchg
nop
pop
fbstp
leave
mov
lcall
in
in
push
mov
or
loopne
push
cmp
aas
cmp
cs
sub
sbbb
mov
inc
xchg
push
mov
cmp
pop
cmc
fnstenv
inc
fsubr
jae
andb
pop
arpl
lds
jge
pop
mov
outsl
or
cmp
sub
mov
push
scas
cli
enter
ret
fcmovnu
pop
adc
arpl
mov
test
das
and
outsl
aas
and
hlt
sub
out
icebp
add
cmpsl
sub
jbe
cmp
js
pop
mov
outsl
test
mov
nop
cwtl
das
jg,pt
pop
add
inc
inc
loop
loop
and
cltd
fwait
cmp
ljmp
out
loope
int
sbb
push
jbe
cs
sarb
add
inc
mov
push
cli
pop
mov
fld
out
pushf
cmc
cli
enter
cs
sarl
adc
pop
cltd
popl
lret
inc
jne
xlat
pop
pop
cmpsl
xchg
clc
xchg
mov
iret
fs
pop
mov
push
fisubs
pop
mov
iret
fistpll
mov
addr16
cwtl
lret
or
cmp
sub
ja
out
mov
xchg
jmp
repz
push
or
push
jp
int3
jne
xchg
push
js
xchg
sbb
in
mov
cmp
xchg
mov
sub
pop
dec
pop
lea
out
insl
add
pop
test
ds
aaa
std
lcall
int3
fists
fistps
sbb
int3
aad
ds
mov
cmpsl
sti
shll
xorl
mov
icebp
inc
pop
cmc
xor
popa
xchg
pop
fistpl
movsb
sti
into
cld
fisubrs
xchg
xor
pusha
lods
adc
rcrb
jno
pop
std
iret
dec
jno
xchg
mov
push
inc
mov
mov
or
xchg
xor
scas
pop
jbe
cmpsl
test
fsubr
xchg
out
cmpsl
add
push
insl
add
int3
jo
jns
push
in
dec
jmp
inc
sbb
pop
add
adc
and
adc
jnp
and
fisubrs
sti
inc
xlat
insb
in
pusha
lret
andl
ljmp
sub
jae
lods
in
mov
enter
dec
mov
ja
mov
inc
outsl
rorl
adc
sub
pop
test
mov
xor
aaa
push
mov
xorb
test
adc
mov
in
pop
stc
notl
fbld
push
or
jl
pop
jecxz
mov
imul
mov
mov
loop
mov
mov
movsl
addr16
xchg
add
or
mov
shrb
addl
sbb
xor
sahf
popa
jns
sarb
ficoms
dec
cmpsb
cmp
fisttpll
mov
pmulhw
fisubs
inc
fs
and
bound
and
hlt
lret
in
aas
mov
enter
cmp
shrb
in
dec
jecxz
sbb
xchg
loopne
mov
js
sub
inc
push
xchg
test
inc
jbe
sbb
js
mov
inc
shll
mov
fbstp
xor
sbb
mov
inc
jge
sbb
daa
xor
int3
xor
sbb
xor
test
add
int3
lret
in
test
sub
lods
adc
xchg
jae
sbb
orb
xorl
scas
sbb
js
pop
fldt
mov
sub
repz
mov
push
call
lcall
ds
dec
stos
testl
mov
call
adc
in
das
inc
mov
push
jmp
and
out
and
pop
cmpsb
lds
in
cwtl
shl
mov
xchg
inc
inc
dec
push
in
xchg
ret
repz
adc
scas
fidivrl
adc
push
mov
push
jmp
in
and
inc
loope
pop
pop
mov
jmp
pop
fstpl
arpl
dec
sbb
sbb
loopne
jo
loopne
xchg
sbb
orb
pop
fimull
jae
out
addb
jle
imull
mov
mov
mov
or
std
cmp
hlt
mov
je
xor
and
add
lods
fsubr
xchg
movsb
mov
loope
push
mov
adc
js
dec
out
clc
dec
mov
adc
mov
into
sub
in
inc
in
std
cltd
jg
xor
or
das
ret
sbbl
jge
or
enter
repnz
popa
cli
pushf
shr
decl
jmp
mov
loope
call
cltd
add
std
or
cmp
dec
and
sbb
jle
lods
outsl
dec
sbb
ljmp
mov
inc
orb
xor
pop
call
enter
xchg
jnp
and
push
push
popf
sub
adc
fwait
lds
inc
fsub
out
jne
xchg
add
xchg
shrb
sub
sub
das
adc
test
outsb
or
lods
fimull
and
js
inc
arpl
or
adc
stos
cmp
bswap
dec
in
and
jecxz
je
loopne
pop
mov
shl
jo
cmp
and
aam
xor
movsl
bnd
xor
or
iret
push
mov
sbb
xchg
dec
pop
dec
out
mov
insl
icebp
cltd
mov
test
cwtl
xor
adc
repnz
popf
adc
fsubl
fsin
dec
add
or
and
stos
fidivl
dec
push
out
xlat
jne
or
test
jae
inc
add
or
movsl
jle
lock
and
lahf
hlt
mov
cld
sti
push
cmpsl
xor
pushf
lahf
inc
add
push
fwait
stc
cmpsl
add
loope
cltd
outsl
orb
xchg
subl
jl
fwait
out
gs
lret
flds
jae
sbb
jnp
loopne
cs
movsl
shll
add
sub
ss
loopne
cmp
xchg
cmp
xchg
lods
mov
cltd
test
adc
cld
gs
es
xchg
inc
fadd
jg
mov
arpl
lds
inc
negb
jecxz
push
jp
fwait
inc
shlb
mov
dec
out
jle
jns
lods
ss
outsl
mov
push
je
jne
jl
xor
mov
repz
loope
add
addl
and
into
fldt
outsb
sbb
adc
inc
or
in
sub
cld
add
mov
xchg
pop
xchg
lock
mull
mov
outsb
sbb
or
out
mov
cld
inc
cmpsb
addr16
inc
in
push
divl
fnstsw
rorb
and
or
loopne
movsb
xchg
aad
cltd
in
cwtl
and
mov
dec
iret
xor
subb
dec
or
in
pop
daa
sbbb
xchg
insb
mov
shlb
mov
loopne
stos
pop
mov
mov
sarl
jb
pop
jl
stos
lods
sbbl
into
lods
push
sbbb
repz
daa
add
mov
jae
int
mov
mov
xor
jbe
repz
inc
pop
mov
in
pushf
aas
outsb
lds
shll
xchg
mov
enter
or
xor
je
or
dec
sbb
lahf
dec
loope
inc
jp
cmp
push
mov
push
in
mov
xchg
sub
add
mov
xor
jo
mull
and
and
sub
xchg
inc
pop
repz
test
adc
dec
lock
cltd
cwtl
loope
xor
insl
arpl
stc
es
push
rol
sahf
clc
ds
and
push
loop
nop
or
jb
lcall
jns
mov
rorl
pop
push
fisubs
push
jb
add
cwtl
data16
outsl
push
or
jbe
daa
pop
and
mov
mov
mov
mov
lret
jnp
xchg
movsl
arpl
sti
push
add
fsubrp
fcomp
push
or
jne
daa
and
push
inc
jle
jne
mov
js
mov
push
adc
pop
out
xchg
and
enter
add
sbb
sub
add
xor
adc
xor
or
mov
sub
imul
ljmp
sbb
cli
andb
test
adc
adc
je
fbld
jo
cs
jns
enter
mov
jo
pusha
insb
popf
test
inc
and
icebp
mov
montmul
cmpsb
inc
int
dec
sti
leave
sub
xchg
cli
jge
add
lcall
cmpsb
push
cwtl
pushf
xchg
mov
call
mov
mov
pop
mov
stc
adc
loope
pop
adc
lea
pop
or
lods
pop
dec
scas
pop
mov
mov
jle
pop
mov
das
push
fsubp
and
adc
fucomp
dec
push
mov
sbb
jge
int
je
aas
gs
and
imul
dec
dec
mov
pop
push
xchg
adc
push
push
repnz
push
cmp
mov
test
jbe
cli
push
dec
pushf
int3
lret
xchg
ficoms
push
inc
lret
or
and
out
dec
sbb
or
xchg
xor
mov
xchg
push
xor
cmp
cmp
mov
push
out
adcl
fldl
outsb
loope
jne
cmpsl
mov
pop
das
mov
sub
dec
cwtl
sub
fstps
jo
stos
push
in
fsubr
dec
mov
fdiv
rcrb
dec
pop
cs
pop
sbb
cmpl
jnp
lahf
idivl
fisubrs
sbb
andb
insb
and
push
xorb
stos
fildll
inc
lock
rclb
fisttpl
data16
faddl
pop
mov
iret
iret
jns
mov
lahf
cmpxchg
leave
xor
rorl
jmp
enter
stc
and
or
out
addl
and
scas
imul
cmp
lcall
nop
push
pushf
pop
sbbl
adc
lahf
call
push
inc
ficoms
fnstenv
pop
rorl
sub
in
push
xchg
cltd
inc
sbb
pop
nop
lea
cmp
cld
addl
xor
mov
add
pop
into
dec
jae
sub
push
lds
imul
push
nop
xlat
push
cmpsl
sbb
jnp
scas
lods
sbb
ret
leave
int3
pop
jbe
jo
fimull
mov
sti
and
xor
push
ret
icebp
ds
leave
mov
mov
push
push
push
jmp
or
jo
sub
shlb
inc
mov
mov
sbb
outsl
or
mov
push
incl
ret
sub
sbb
jp
addr16
popa
push
insl
lods
pop
pop
sahf
sbbl
sub
sbb
hlt
pop
and
mov
and
or
repnz
fimull
push
fidivrl
mov
pop
jmp
sbb
outsb
jecxz
movsb
into
mov
xchg
jae
add
mov
in
repz
and
add
aad
push
popf
jo
jb
insl
mov
testl
push
sub
aad
andb
cmp
mov
sub
xor
pop
aas
fisttps
roll
andb
aaa
jbe
aam
pop
push
pop
jmp
mov
mov
cmpsl
inc
push
sub
lret
popa
xchg
loope
sub
jmp
dec
rol
push
and
call
jecxz
mov
jge
jge
cmp
mov
out
add
cmc
ss
xor
dec
mov
lret
adcb
out
xlat
icebp
faddp
dec
clc
imul
aaa
add
test
mov
stc
sahf
jbe
dec
cmpsl
dec
jns
jle
shrl
data16
mov
inc
xchg
lret
jp
xlat
dec
xor
cmp
push
ss
lods
outsl
loop
xchg
enter
mov
jecxz
insl
iret
loop
ret
xchg
sub
mov
icebp
popa
sbb
cmp
js
cld
jle
push
nop
adc
adc
mov
sbb
shrl
ret
dec
pop
outsb
adc
sub
enter
xchg
das
jo
cmp
mov
jnp
adc
call
dec
mov
imul
hlt
outsb
fistps
outsl
mov
mov
xchg
jbe
cmpsb
mov
or
mov
xor
push
mov
aam
int
loop
enter
jbe
adc
data16
iret
and
xchg
mov
cld
mov
xor
inc
les
mov
test
mov
lods
inc
and
pop
les
std
dec
fabs
leave
pop
cmp
stos
mov
dec
push
movsb
test
push
ret
icebp
and
mov
add
adc
sahf
les
loopne
push
sub
xlat
add
or
pop
cmc
lods
movsb
imul
dec
addl
out
pushf
sub
inc
stos
inc
jae
xor
icebp
imul
mov
cmp
xchg
cld
pop
adc
ds
fdivr
pop
ret
lcall
sbb
sbb
jg
lret
xor
mov
bound
xchg
push
icebp
or
je
insl
cmpsb
scas
out
sbb
in
xchg
pop
hlt
mov
jnp
leave
fmull
adc
seta
stos
add
out
test
hlt
xchg
push
popf
fst
jb
xor
mov
lds
inc
fcmovne
xchg
jp
bound
in
test
mov
jo,pn
repnz
add
xchg
sub
cs
push
sub
cmpsl
or
in
mov
testb
ret
xor
push
jmp
and
mov
add
mov
fidivrs
movsb
insl
fwait
mov
cmpsl
jae
lods
cld
dec
xchg
or
inc
lds
fidivl
mov
fstps
cmc
adc
icebp
add
sti
sbb
xchg
mov
cmp
adc
outsb
loope
jmp
in
dec
add
jb
mov
into
xchg
mov
dec
and
lock
or
push
push
or
mov
enter
pop
repnz
mov
bound
sbb
pusha
std
movsl
add
sbb
xor
add
sub
leave
inc
sahf
mov
or
out
sarb
jmp
aas
xor
sti
cld
loop
cmp
stos
cmpsb
les
xchg
je
pop
inc
cltd
call
cmp
inc
dec
or
push
test
sub
pusha
cmp
jb
add
ret
stc
dec
dec
insl
cmp
mov
out
push
scas
push
in
cltd
and
daa
mov
adc
in
lods
sbb
fcmove
xlat
or
lea
push
inc
dec
clc
rorl
add
jnp
std
lock
inc
cmpsl
jno
sub
jge
cwtl
daa
sub
mov
dec
dec
pop
lret
icebp
mov
push
adc
mov
jge
mov
std
fnstsw
xchg
mov
mov
sarl
pop
xor
or
dec
out
sbb
movsl
lahf
cmp
inc
jbe
insb
and
inc
sbb
dec
lahf
jbe
jecxz
cmp
add
je
push
cmpsb
pusha
insl
add
fisubs
and
rcr
outsb
add
push
scas
sub
xchg
dec
stc
dec
in
jno
sub
jmp
ret
imul
cld
fsubrl
lret
arpl
movntps
inc
mov
mov
mov
sbb
or
das
test
mov
out
cmp
or
out
push
or
aas
push
jl
add
dec
mov
jp
stos
loope
push
inc
sti
mov
in
jmp
add
xor
add
out
popf
jb
mov
out
fistpl
inc
mov
adc
xchg
fmuls
pop
outsl
dec
pop
xor
scas
cmp
mov
divb
xor
lret
lods
cld
lcall
in
pop
cmpsb
or
xchg
cmp
shrb
das
adc
add
xchg
mov
cli
aas
sub
fs
cmp
repz
dec
jo
mov
fwait
insb
add
xchg
sub
out
mov
lret
or
jl
push
fsubrl
popf
fisttps
arpl
mov
into
add
xchg
mov
orl
add
repz
cs
push
or
xchg
sub
fcomi
mov
daa
lret
jbe
jmp
cmp
dec
std
and
and
data16
xor
rol
inc
add
jne
dec
gs
cmpsl
push
enter
pop
or
repz
les
ss
out
mov
nop
test
mov
fcmovne
arpl
test
and
jo
jo
movsb
lds
sbb
rcll
xchg
je
stc
fs
xchg
js
or
sub
dec
mov
mov
out
push
jne
je
hlt
mov
xor
mov
jmp
cmp
sbb
xchg
lea
cmpsl
and
xor
lahf
pop
stos
adc
pusha
add
clc
lret
sti
rorb
dec
sbb
add
inc
dec
ljmp
jae
popl
inc
cmp
mov
add
mov
sarb
push
add
jnp
ret
sub
xchg
mov
negb
iret
bswap
shll
sub
rorl
sub
loope
je
or
mov
call
add
stos
lahf
mov
xor
jns
add
pop
adc
mov
mov
xchg
sub
imul
xor
xchg
sahf
cmc
fcomi
push
scas
mov
sub
pop
push
mov
lods
ljmp
out
test
or
mov
sbb
pop
mov
addr16
cwtl
pop
cmp
cmpb
ret
jno
dec
iret
inc
push
jg
mov
sbb
inc
dec
je
pop
xchg
pusha
or
xchg
mov
pmulhw
xchg
cmp
ds
cmp
lahf
pop
aas
aas
mov
negb
loope
cmp
addr16
movsl
inc
adc
repz
test
les
rcrl
xor
rcll
pop
push
push
mov
cltd
lea
and
jecxz
pop
push
popa
xor
outsl
mov
fsub
nop
mov
or
fsts
jg
sub
lcall
adc
popf
sahf
or
sti
xchg
xchg
dec
ss
push
out
iret
dec
jb
push
and
rolb
lahf
stc
gs
sub
xchg
add
pushf
pop
cmp
fwait
mov
mov
rolb
mov
stc
and
xchg
stos
lock
das
inc
movsl
faddl
mov
fwait
xor
jns
dec
aaa
sarb
push
mov
fidivl
push
cmc
jg
adcb
mull
xchg
jo
fsubl
mov
test
push
ja
mov
xchg
roll
repz
jmp
cmp
js
sub
aaa
dec
pop
jo
xor
jne
stos
insb
push
call
sbb
dec
mov
xchg
rorb
add
rorb
out
mov
loopne
lcall
mov
outsb
imul
fildll
dec
rolb
hlt
loop
xchg
pop
shl
aaa
pop
je
xchg
xchg
add
cmp
test
xchg
sbb
push
adc
mov
and
das
adc
mov
sbb
aad
dec
aam
cli
push
push
adc
idivb
out
sahf
test
fildl
xchg
repnz
fucomi
or
mov
stos
xchg
pop
lcall
adc
cmc
add
xor
xlat
jae
aam
inc
and
add
pop
pushf
mov
sbb
divb
in
inc
fistpl
dec
test
xlat
pop
jnp
out
hlt
mov
add
hlt
mov
push
adc
stc
jge
mov
pop
div
ror
pop
outsl
cwtl
mov
lods
outsb
notl
add
aad
insb
push
je
into
repz
jg
or
ljmp
leave
aaa
add
arpl
xchg
lret
loop
pop
xchg
in
popa
pop
mov
mov
bnd
pop
adc
dec
dec
mov
sub
repnz
clc
add
sub
clc
cmpsb
insl
adc
pop
or
enter
int
sarb
mov
mov
iret
test
mov
pop
jle
and
lods
mov
push
fiadds
add
daa
inc
ljmp
inc
dec
mov
pusha
pop
ds
shrd
lods
inc
in
or
sbb
dec
add
cli
cmc
test
lds
lret
jcxz
xchg
shl
jl
fwait
cmpsl
xor
sbb
addr16
test
loope
fnstcw
cld
je
xor
xor
ljmp
mov
or
dec
das
fs
lods
aad
sahf
mov
mov
inc
test
and
ret
dec
push
jmp
mov
ret
sbb
ret
arpl
xchg
imul
aaa
mov
lods
lret
mov
int
pop
pmaxsw
out
es
loopne
or
xchg
inc
pusha
das
pop
adc
or
xchg
cltd
push
cmpsl
jmp
shl
xor
xchg
xor
mov
cmp
idiv
mov
test
out
inc
test
and
pusha
insl
rcrb
or
push
imul
inc
mov
xchg
insb
and
sub
out
xlat
jl
add
add
repz
mov
mov
xchg
into
mov
pushf
xor
inc
pop
jle
mov
test
adc
cmp
or
mov
jne
imul
pop
xorb
cltd
mov
cmc
cli
adc
mov
pop
scas
push
mov
adc
scas
cmpsb
adc
sub
jmp
adc
lods
das
nop
ljmp
dec
jnp
sahf
enter
mov
repnz
push
les
dec
insb
fsubl
mov
cmpsl
out
push
aad
rorb
insl
aad
adc
and
outsl
movsb
inc
arpl
xchg
add
js
mov
jnp
inc
fcmovnu
pop
pop
dec
stos
jl
and
int3
shlb
outsb
mov
cld
mov
dec
bound
jo
mov
or
jnp
pop
jmp
lods
inc
ja
frstor
jecxz
mov
out
xor
popf
xor
ss
mov
and
aaa
sub
pop
and
daa
adc
push
test
lahf
mov
int
mov
mov
sti
sub
repnz
mov
shll
push
fs
mov
cmp
jl
leave
sbb
cmp
cmc
mov
sbb
pop
ret
insb
mov
sarl
push
test
aas
daa
mov
inc
inc
and
or
mov
sbb
dec
mov
jnp
jno
pop
jmp
jne
pop
add
jl
cmp
sub
mov
pusha
adc
mov
mov
mov
out
push
cld
into
fbld
push
fimuls
cmp
addr16
lret
mov
sub
lods
mov
or
jp
pop
add
inc
add
mov
imul
mov
push
imul
mov
sbbb
imul
hlt
out
icebp
in
jns
int3
xor
jb
add
or
mov
fcoml
daa
lcall
pop
mov
popa
outsl
enter
push
push
sbb
xchg
rol
imull
insb
or
sbb
lret
push
pusha
cmpb
xor
inc
cwtl
inc
mov
mov
pop
pop
push
pop
push
sub
inc
jmp
adc
dec
or
and
sub
subb
scas
imul
jb
pop
stos
movsl
ss
ja
sub
nop
mov
cltd
hlt
jae
mov
push
pop
fimuls
cmp
dec
in
sbb
fiadds
mov
add
cmc
or
and
adc
imul
pop
out
inc
or
mov
fsts
xor
stos
scas
mov
scas
inc
test
mov
adc
xor
adcl
cmp
ds
pop
cmp
jmp
clc
xchg
nop
repnz
xchg
test
push
push
int3
add
xor
fs
cli
dec
adc
inc
jnp
and
mov
dec
and
xchg
outsl
sub
sbb
mov
popf
scas
mov
mov
mov
cmpsl
aad
or
loope
fs
sub
pop
js
divl
push
pop
lahf
test
mov
push
cwtl
jo
aad
and
sbb
inc
mov
add
inc
mov
push
les
xchg
pop
jp
jae
stos
fwait
inc
push
js
or
push
lods
xchg
add
sbbb
scas
loope
js
iret
dec
and
lods
inc
push
fidivrs
dec
cmp
hlt
mov
pop
push
or
cltd
int3
out
fldl
out
xor
repz
popf
push
push
das
push
cmpsl
stc
or
push
cld
and
xor
into
and
aad
sbb
xrelease
push
and
mov
shlb
lds
jp
sub
stos
sbb
mov
es
pop
cmp
jl
in
stos
cmp
xor
jmp
sub
or
in
cmp
sbb
xchg
mov
sub
mov
pushf
adc
jmp
into
aad
in
scas
adcb
popa
mov
sbb
fistl
pop
pop
pop
shl
shlb
xchg
mov
push
popf
push
dec
adc
add
repz
add
pop
mov
stc
adc
aad
xchg
sbb
adc
pop
push
xchg
dec
push
mov
add
lahf
ja
mov
insb
xchg
jno
inc
in
popl
js
dec
add
sbb
pop
lret
jns
out
cmpsl
repz
pushf
sub
push
int
inc
add
adc
mov
pop
pop
jne
dec
arpl
dec
or
mov
sbb
lock
ss
xchg
cmp
stos
sti
ds
pop
sub
aad
hlt
pop
push
pushf
mov
xchg
ljmp
out
push
cld
cmp
lods
int
pop
adc
addr16
fcmovu
jae
mov
jae
sub
pop
xor
es
mov
xor
fs
popf
cmp
negl
sbb
dec
jle
movsl
mov
xchg
pop
lds
lcall
in
stos
adc
inc
mov
insb
cmc
mov
gs
test
jo
xlat
sub
clc
mov
in
cmp
jge
shlb
fistpll
push
lcall
jl
mov
movsl
mov
jmp
sbb
sub
pop
imul
sbb
int3
xchg
std
testb
rorl
cmc
fcompl
mov
jmp
pop
add
test
sbb
add
push
lret
jp
clc
or
out
inc
mov
fsub
mov
pop
imul
inc
push
push
insb
loop
pop
enter
dec
pop
ret
jl
mov
fcmovnbe
cmc
or
lcall
les
iret
adc
notl
mov
sub
sarb
ret
daa
mov
imul
mulb
pop
dec
rcl
sub
daa
outsb
nop
stos
xchg
push
call
out
lahf
pushf
xor
dec
test
dec
stos
sbb
dec
xor
inc
inc
jns
jmp
rcl
out
cwtl
imul
mov
push
push
xor
outsl
xor
into
insl
xchg
jle
fldl2t
pushf
push
leave
sbb
mov
mov
inc
popa
push
lea
push
out
push
xor
jmp
lcall
fdivl
in
clc
dec
pop
push
ljmp
mov
push
ljmp
jno
test
mov
sahf
mov
ljmp
or
dec
jmp
inc
jnp
fwait
and
es
popa
adc
aad
or
les
dec
in
pop
jmp
inc
andb
or
adc
rcr
movsl
sbb
jne
mov
xchg
cmpsl
inc
bnd
movsl
mov
and
iret
std
dec
addr16
cltd
test
xor
jl
cs
sub
mov
popa
xor
xchg
arpl
add
ds
push
sbb
or
shll
fistpl
push
movsl
fdivp
pop
cmp
aam
or
cmpsl
mov
mov
mov
push
sarl
xchg
jne
test
pusha
jmp
jne
and
aas
lcall
icebp
arpl
adc
sub
inc
or
leave
xor
push
mov
push
push
push
fldenv
push
mov
scas
lea
stos
sub
jae
or
cltd
leave
int
sub
xchg
dec
jo
xlat
insb
mov
jle
adc
ficompl
std
cmp
xorl
cmp
fistl
push
mov
nop
mov
test
inc
sub
adcl
pop
repnz
clc
jecxz
int3
ss
stos
dec
mov
lret
push
scas
jae
sbb
sbb
push
movsb
cmp
lods
add
sub
mov
dec
stos
movsb
sbb
das
ret
mov
xchg
xchg
and
aaa
mov
cltd
xor
icebp
insb
test
mov
sbb
jecxz
scas
aad
addl
jne
push
add
mov
add
fisubrl
add
shll
and
pop
loope
dec
jmp
out
mov
sub
mov
cltd
cmp
or
mov
mov
inc
clc
cld
mov
jns
xor
or
ljmp
jno
pop
inc
pop
out
fbstp
icebp
dec
shrl
bound
popf
jo
push
xchg
out
add
mov
testl
and
rorb
jns
pop
sub
mov
stos
mov
sbb
pop
add
or
jno
lods
adc
push
sahf
testl
or
dec
fdivl
mov
xchg
jmp
add
loop
and
testb
and
andl
xchg
roll
mov
sub
inc
pushf
mov
rcrl
fbstp
fstpt
shl
sarb
int
push
popf
das
scas
ljmp
inc
add
enter
pop
sysenter
adc
push
leave
pop
mov
clc
add
xor
ja
jle
test
jl
cs
xchg
mov
fldl2t
clc
rcrl
adcb
adc
roll
sub
pop
xchg
mov
adc
sahf
sbb
dec
dec
fs
in
outsl
rcr
xchg
sahf
mov
xlat
notl
faddp
jp
mov
gs
stc
adc
mov
cwtl
out
addr16
mov
iret
data16
jb
mov
popl
mov
xor
cs
stos
fwait
add
sbb
cmp
push
mov
lock
popa
in
adc
rorb
aas
adc
mov
imulb
inc
jge
in
int
in
ret
rorl
insl
jnp
xchg
orl
andb
adc
sub
outsb
leave
mov
stc
pop
cmp
gs
jle
rolb
fnstenv
add
idivl
pop
mov
sub
iret
loop
dec
loopne
add
rclb
jae
push
jno
mov
mov
jecxz
push
xchg
mull
push
jns
cs
lea
and
adc
mov
sub
rcrb
sbb
xchg
cltd
fsts
enter
in
and
cli
mov
pop
add
call
movsl
rcl
jnp
nop
call
sub
mov
loope
jb
nop
push
sbb
pop
xchg
cmp
dec
popa
roll
addl
nop
lret
gs
inc
push
in
aaa
aad
mov
pop
fadds
test
lret
pop
push
ljmp
inc
dec
add
sahf
shlb
pop
mov
sti
dec
mov
pop
sbb
lret
aas
inc
jmp
or
add
dec
jbe
outsl
test
inc
notb
mov
pop
xchg
pusha
jnp
sbb
lret
cld
mov
aas
fisubl
pusha
push
inc
push
test
test
lds
mov
sti
lods
adc
or
adc
insb
scas
pop
mov
sub
popa
cmpsl
cmp
jmp
sub
inc
scas
cmp
or
aam
fimuls
or
in
mov
pop
cmp
cmp
int
rorl
dec
jae
insl
pop
xor
dec
push
fptan
mull
scas
iret
test
xchg
imulb
mov
std
insb
cmp
arpl
pop
xor
movsb
cmp
out
lds
lods
ret
jne
mov
jl
outsl
lock
mov
test
dec
jns
pop
scas
inc
xor
mov
xchg
dec
iret
andb
call
ja
and
mov
pop
mov
sub
popa
into
xchg
sub
xchg
mov
cmp
psadbw
sbb
push
lret
xorl
xchg
jl
stos
or
sbb
inc
subl
pushl
lret
mov
fwait
sub
mov
lods
sbb
and
xchg
add
in
mov
jmp
xchg
int
js
xor
pop
xlat
push
bound
ja
jecxz
mov
lods
jmp
dec
ds
sbb
lahf
cmp
pop
cmp
sub
sub
iret
sbbl
aad
jo
pop
pop
inc
lcall
push
shlb
sti
pop
lret
inc
aas
inc
pop
repnz
or
popa
fidivrl
mov
lret
popaw
mov
mov
arpl
pop
pop
or
push
jp
sbb
pop
mov
jle
jg
mov
addr16
mov
xor
pop
inc
adc
pop
push
dec
push
out
popa
out
mov
fidivl
rolb
xchg
mov
in
lods
icebp
inc
loopne
push
jbe
scas
cmp
xchg
out
jno
cmp
xor
push
hlt
clc
adc
cs
add
pop
push
mov
mov
mov
bound
clc
jbe
jo
scas
das
incb
jle
fs
bt
and
icebp
iret
push
inc
inc
fmul
js
loopne
in
cmpsl
dec
stc
inc
mov
pop
faddl
fildl
cltd
xor
fisubl
arpl
filds
adc
and
xorl
mov
or
inc
lea
xor
clc
sub
push
sbb
mov
loope
mov
fdivrl
cmpb
aas
test
addl
lret
xor
pop
outsl
arpl
stc
add
lea
dec
mov
aam
dec
push
popf
and
push
loopne
aad
lods
rcl
mov
adc
dec
sub
ror
testl
ljmp
stos
das
mov
xchg
mov
sub
cmp
cmp
pop
dec
pop
mov
outsl
enter
int3
in
xchg
xor
or
clc
push
xchg
mov
fildll
mov
push
daa
and
scas
jns
inc
fidivrl
push
data16
sub
push
dec
add
mov
pop
fistpl
adc
fnstsw
sti
jle
ret
jns
jl
xchg
push
pushf
jns
es
pop
jne
xor
fwait
gs
cmp
cmp
mov
lcall
aam
jmp
andl
mov
loopne
call
stc
push
pop
leave
pop
arpl
add
aaa
fldenv
bound
and
push
inc
and
add
addr16
and
inc
ljmp
and
enter
bound
xchg
cmp
mov
push
jno
pushf
mov
mov
mov
out
lods
test
adc
or
outsl
repnz
out
pop
xchg
clc
add
loope
out
imull
sub
rorb
divb
push
push
vmovdqu
mov
mov
std
rcrb
call
pop
out
xchg
lds
dec
mov
sub
scas
adc
inc
into
mov
dec
push
test
hlt
pushf
loopne
lcall
xorb
sarl
push
jbe
repnz
dec
pop
ret
insl
jae
sahf
leave
inc
mov
dec
and
je
add
lods
inc
mov
dec
mov
outsb
iret
pop
dec
sbb
iret
dec
xchg
les
push
sub
mov
dec
data16
xchg
or
sub
xor
jno
jle
insl
lock
dec
rcrb
inc
dec
outsl
add
push
push
leave
push
mov
lret
mov
push
mov
addr16
dec
pop
or
fadds
jns
outsb
sbb
inc
ret
xchg
fisttpl
cmpsb
stos
cmp
add
ss
xor
sahf
mov
mov
mov
out
icebp
inc
lods
lods
and
cmp
sub
cmpsb
cld
xor
inc
out
fnstenv
or
jmp
je
mov
jg
arpl
fists
shl
inc
cmp
jle
mov
ret
cmpsb
std
outsb
andb
into
lahf
arpl
shl
inc
pop
out
into
cmp
setno
dec
jne
push
jle
shrb
cmp
sub
sub
cwtl
daa
push
popf
pop
ffree
push
mov
call
add
mov
mov
ds
out
sbb
mov
mov
stos
cmp
push
out
mov
pop
pop
in
stos
sbb
inc
inc
push
out
xchg
jle
add
jecxz
std
sbb
inc
andl
xor
xchg
out
xor
xor
dec
in
movsb
and
out
nop
gs
bound
ds
pop
in
insl
push
addl
out
dec
jecxz
or
shll
or
xchg
dec
xor
es
jo
xor
pop
clc
jl
inc
lds
adc
mov
sbb
andb
push
mov
adcl
xchg
mov
iret
pop
out
cmp
lock
push
and
fisubs
or
mov
outsb
sub
mov
jb
jge
mov
pop
push
ljmp
repnz
sub
push
arpl
into
add
roll
adc
fsubrl
dec
pop
das
or
fsubrl
iret
xchg
push
out
sub
cmp
test
add
cmp
xchg
in
jp
aam
sbb
mov
lret
fcmove
xchg
not
in
dec
mov
or
mov
lcall
and
dec
or
xor
scas
push
clc
push
add
les
insb
xchg
xor
mov
or
dec
bound
mov
inc
mov
scas
mov
and
mov
pop
ss
stos
ss
jns
dec
sub
lods
lods
push
ja
adc
cltd
test
add
notl
lcall
sbb
loop
in
movsb
les
pop
sub
fldl2t
add
xor
inc
add
ds
push
sbb
pusha
call
jbe
in
cmpl
repnz
inc
xchg
inc
mov
cld
ror
shl
insb
imul
cmpsb
ds
in
jmp
aas
scas
push
or
mov
lods
insl
cmpsb
aas
lcall
inc
adc
xor
popa
jno
mov
mov
mov
mov
jbe
inc
sbb
enter
lret
pop
mov
filds
repnz
xor
xor
shl
cli
mov
jno
sbb
lock
aam
rcr
leave
fimull
repz
testl
cmpsb
jg
pop
sbb
and
cld
fwait
xor
cld
cs
loopne
mov
add
add
sarl
fcomps
or
loopne
push
inc
aad
js
fsubl
mov
mov
and
mov
adc
in
dec
mov
add
mov
xchg
out
pop
mov
sub
mov
pop
add
mov
clc
or
jns
cmp
mov
dec
insl
pop
or
lahf
lock
decb
idivb
lds
loop
mov
or
dec
xor
sub
popf
add
mov
cmp
pop
cs
pop
sub
pop
subb
roll
and
dec
stos
popa
sub
xchg
inc
mov
cmpordps
pop
aaa
sub
add
mov
lock
stos
xor
pop
pop
aas
imul
or
and
adc
pop
pop
jmp
mov
jmp
mov
xor
lret
xor
mov
cmp
imul
sub
in
cmc
cmp
xchg
testb
cmp
add
lret
mov
jnp
pop
aam
sbb
sub
mov
bswap
dec
mov
cmp
iret
mov
mov
orl
aam
lcall
or
in
xchg
sub
popa
mov
popf
or
mov
lret
aaa
mov
or
icebp
dec
cmc
push
jne
shll
rcr
dec
add
mov
jae
call
jns
incb
loop
fcomp
js
adc
xchg
pop
scas
pop
ja
call
imul
imul
icebp
jmp
xor
push
cli
or
mov
and
add
scas
shrb
push
and
int3
lret
pop
mov
cmp
sbb
mov
clc
clc
xor
cli
or
mov
addl
add
cmp
xchg
adc
dec
sbbl
imul
pop
jno
jp
pop
lods
and
cmpsb
pop
in
or
aas
test
lds
mov
and
and
popa
clc
sbb
xor
or
xlat
push
outsl
mov
aaa
mov
popa
xchg
mov
adc
mov
sbb
mov
cmp
mov
inc
push
adc
sub
gs
sbb
adcl
ss
fs
fsubr
rorl
xchg
outsl
ds
sbb
outsb
stc
test
inc
sub
jnp
pop
inc
fimull
push
and
sub
daa
fsub
in
inc
popf
inc
stos
cmp
bound
test
sar
stos
push
mov
sbb
sbb
adc
sub
xchg
cli
add
lods
inc
dec
out
das
fisubrl
test
fld
and
adc
into
jb
mov
test
dec
dec
in
pop
xchg
jle
repz
jp
pop
repz
int
mov
frstor
int
or
in
pop
xor
std
jns
mov
and
xchg
push
sub
xor
add
in
je
or
push
fwait
pop
pop
rcrb
mov
mov
pop
dec
and
push
ljmp
pushf
jae
jo
repz
cli
test
hlt
jle
and
push
dec
fmulp
adc
pop
pop
lods
pop
in
cmpxchg
jno
cmpl
sub
xchg
aas
mov
fsts
cmp
lock
push
add
dec
scas
pop
repnz
sti
iret
push
sub
hlt
imul
push
icebp
push
cmpsb
and
lahf
ss
or
int3
subl
bound
pop
sbb
jno
pop
mov
fbstp
adc
lret
inc
xor
leave
mov
test
les
lahf
ret
xchg
mov
addl
mov
fdivs
rcrl
sbb
jp
andb
les
xchg
xor
ljmp
xlat
or
in
or
in
inc
pop
mov
sbb
aaa
push
or
lds
jno
and
mov
xor
pusha
jo
push
dec
ret
insl
mov
ret
mov
push
ds
and
pushf
in
inc
test
inc
mov
mov
data16
pop
mov
sub
cltd
pop
aaa
push
cmpl
icebp
hlt
enter
mov
sbb
and
xor
lret
scas
call
lock
rol
cmp
fldl
scas
xor
in
das
pusha
cs
int
cmpb
jge
int
leave
xor
sbb
inc
pop
inc
add
test
push
pop
mov
add
jae
pop
rcll
pop
xor
rep
jb
rcrb
and
dec
mov
cmp
test
mov
adc
xor
jne
test
les
push
lcall
in
push
sbb
call
es
mov
and
scas
mov
in
loope
mov
lret
xor
inc
in
cmc
cmp
sbb
push
pusha
mov
inc
lret
mov
out
xchg
mov
cwtl
movsb
addr16
inc
pop
repnz
iret
imull
mov
subl
loope
daa
pop
sub
pop
xor
push
push
mov
mov
jl
bound
jne
sbb
sarb
jge
mov
jge
jns
adc
scas
divb
push
aad
out
imul
gs
mov
add
xor
data16
mov
inc
in
push
mov
xor
hlt
idivb
or
add
inc
pop
mov
inc
fistpl
jge
mov
mull
push
xchg
sbb
and
xor
sbb
xchg
dec
jecxz
insl
and
mov
data16
xchg
mov
setnp
mov
imul
cmpsb
mov
lahf
aaa
mov
je
out
cmp
aad
pop
lods
xchg
cmp
subb
push
in
into
inc
add
sbb
cli
insl
sub
cmpsl
lods
inc
add
sbb
cs
sub
xchg
dec
imul
cs
mov
jbe
and
test
mov
adc
faddl
mov
mov
fs
mov
test
jnp
test
mov
sbb
cmp
fiadds
cmp
lret
cmp
push
dec
nop
pop
ja
dec
out
push
cmpsl
xchg
lret
into
add
xchg
push
dec
iret
repz
sub
dec
dec
mov
seto
or
aad
ja
movsb
xchg
pop
inc
mov
pop
sub
movsb
je
daa
out
dec
sbb
shlb
lret
rep
gs
jmp
leave
xchg
xchg
mov
int3
cmc
jp
stos
insl
cmp
xchg
sbb
stos
cmp
repnz
jle
fistpll
shr
pop
push
in
xor
dec
lock
insl
mov
push
lret
push
fnstcw
add
push
fdivl
and
repz
jp
and
sbb
and
cmp
pop
pusha
lock
subb
ret
imul
push
xchg
arpl
test
inc
pop
daa
mov
pop
cld
fidivl
ret
leave
mov
jl
jle
repz
loop
adc
daa
rcll
xlat
mov
repnz
ds
sbb
jg
leave
shl
jge
or
pop
mov
es
xor
xchg
mov
or
arpl
fdivs
mov
jmp
pop
inc
pushf
aam
test
std
xchg
sbb
mov
inc
mov
inc
pop
xchg
rcr
mov
push
and
cwtl
shl
outsb
loop
push
inc
sar
dec
aam
loop
push
vmaxps
jns
xor
and
popa
test
call
std
xor
fstps
test
shl
sub
inc
mov
fldl
leave
pop
stos
cmp
ffreep
sub
ss
push
call
stc
in
and
pop
jecxz
outsl
call
push
push
jae
int
inc
lea
dec
loope
cwtl
fsubp
sarl
filds
es
xchg
popf
in
sbbb
addr16
leave
addb
cli
ljmp
inc
fs
cmp
dec
loop
orl
adc
sbb
dec
fbstp
xchg
imul
cmpsl
push
jne
jl
in
and
xchg
lods
test
mov
mov
adc
test
sbb
aam
in
cmp
xchg
mov
in
cmc
mov
insb
mov
sub
repz
stos
jbe
stc
test
jo
mov
mov
jns
negl
or
xchg
push
fwait
adc
and
mov
push
out
inc
call
dec
cld
lahf
or
sub
je
in
out
lret
mov
pop
jle
mov
mov
sbb
pop
dec
adc
sub
pop
push
dec
sbb
imulb
mov
popf
sahf
xchg
jmp
mov
es
sahf
jb
ds
test
add
jb
nop
sbb
inc
inc
fidivl
orb
clc
decl
notl
fdivr
inc
loop
cmp
adc
cltd
fisttps
fcmovnb
xchg
call
fs
mov
in
ljmp
sub
fs
adc
or
scas
es
dec
dec
mov
stos
jmp
xlat
lds
lret
mov
pop
ss
outsl
push
ljmp
xchg
xlat
adc
adc
xchg
and
xchg
aaa
mov
imul
pop
push
imul
xlat
push
pusha
std
jge
ret
pop
xor
inc
data16
pop
imul
sahf
scas
xor
out
sbbb
dec
pop
das
xchg
adc
jo
movsl
and
sub
sarl
cld
rcll
jmp
in
or
cmpsl
sbb
or
mov
jns
dec
pop
and
push
cmp
das
sub
dec
cmp
arpl
addr16
movsb
test
jae
mov
cs
ds
cmp
out
cs
mov
pop
jp
jae
xor
jge
pop
lods
xchg
je
sarb
dec
mov
mov
popa
sub
mov
push
int
cmc
or
sarl
jl
push
cmp
icebp
jbe
movsb
mov
incb
rcrl
jmp
iret
push
cmpsb
fsubl
xchg
push
bound
fcomps
push
dec
jb
sbb
adc
cmp
add
add
push
jecxz
cmpsb
jmp
sbb
push
sbbb
or
mov
sahf
mov
mov
scas
and
and
and
mov
cmpsb
jb
mov
popa
enter
lret
es
imul
test
adc
les
popa
inc
add
pushf
mov
sub
cmp
fwait
pop
push
ret
ss
push
jne
pop
stos
lea
lea
xchg
push
sbbl
out
test
ds
out
push
jmp
dec
jb
inc
xlat
sbb
lret
fadds
out
es
mov
jmp
jo
out
cmp
fdivs
and
aam
popa
jg
testb
jno
mov
xor
ret
hlt
aas
adc
fwait
cmp
fcoml
mov
add
and
rorl
cmp
enterw
scas
test
and
mov
enter
mov
xorb
cmpsl
cmp
add
push
sub
mov
xlat
inc
mov
in
jne
xor
fsub
cmp
or
add
in
add
icebp
sbb
pop
mov
pop
inc
sahf
add
jbe
mov
or
mov
cmp
sbb
cmp
lcall
sub
mov
xchg
xchg
arpl
mov
daa
insl
inc
hlt
jo
aad
insl
add
out
or
adc
cltd
pop
icebp
xor
lds
add
enter
dec
test
stc
push
jne
sbbb
in
jnp
es
mov
in
mov
jno
mov
inc
add
xor
dec
mov
ja
xlat
mov
sti
dec
scas
movsb
jp
mov
or
xchg
sub
adc
clc
stos
xor
or
push
xor
lret
subl
mov
icebp
jp
mov
jge
and
leave
xor
push
imul
push
test
mov
inc
and
scas
mov
loopne
stc
and
xor
cmp
in
sbb
jo
xchg
fnsave
out
bound
cltd
and
mov
lahf
out
fwait
mov
popa
inc
pusha
xchg
test
pop
in
fistpll
sub
data16
pop
test
in
es
push
sbb
xchg
lods
adc
mov
enter
ss
dec
ds
xchg
scas
test
mov
sarl
dec
mov
mov
jns
daa
dec
enter
sub
mov
rclb
lds
xchg
or
iret
dec
lret
dec
push
leave
xchg
jbe
sub
fnstsw
movsb
jo
jmp
iret
cmp
pop
test
scas
mov
add
shrl
aad
push
adc
cmp
lods
cmp
xchg
jg
fst
xchg
mov
dec
loopne
hlt
cltd
mov
mov
test
xchg
add
cltd
xlat
rol
in
sbb
cmp
jae
lods
gs
mov
jmp
imul
pop
sub
ret
adc
xchg
cmp
or
mov
add
int3
repnz
lret
push
bound
daa
push
push
mov
hlt
dec
push
cmp
xor
jbe
aam
inc
in
xchg
add
add
pusha
outsb
mov
push
cmpsb
xor
lret
jp
fildll
cmc
cmpsb
cmp
notl
jg
mov
les
hlt
js
aas
add
call
mov
stos
mov
fsubl
lahf
jmp
mov
push
lahf
neg
mov
stc
and
and
mov
test
int
mov
gs
inc
xchg
xchg
mov
adc
lods
addl
fidivrl
lea
sub
scas
xchg
mov
push
test
push
scas
jmp
shrl
mov
and
lds
jmp
adc
mov
sub
cli
xor
scas
aad
inc
jmp
mov
push
enter
mov
fnstenv
mov
stc
jp
clc
popl
fwait
push
lods
int3
nop
dec
cmc
in
fnstcw
inc
setno
push
pop
rclb
mov
pusha
jo
pop
repnz
xchg
in
nop
call
or
scas
dec
mov
ss
pop
jle
dec
adc
clc
xchg
mov
sahf
clc
addr16
sub
stos
add
cmp
pop
mov
or
in
arpl
lcall
jmp
pop
repnz
sbb
push
fsts
xorb
loop
xchg
sub
sbb
js
repz
sti
jge
pop
pop
push
lods
fildl
mov
mov
aas
lret
or
arpl
and
dec
cmpsl
sub
ds
mov
fsubrl
lds
mov
push
jle
dec
loop
xor
ror
mov
sti
repnz
mov
adc
adc
sbb
pushf
out
iret
lods
mov
arpl
into
std
jno
dec
mov
test
gs
dec
dec
jge
in
add
cmovs
inc
and
mov
enter
xor
inc
mov
xor
cmp
call
test
lret
fxch
jno
subb
cs
mov
sarl
lcall
dec
in
xchg
dec
scas
les
jge
jo
jmp
push
test
mov
scas
imul
in
aam
stos
lcall
xchg
mov
imul
cmp
je
sub
in
inc
adc
daa
push
cmovne
data16
rcr
sub
and
scas
mov
loopne
xchg
sbbl
inc
dec
fistl
jae
jge
cmc
xor
mov
jg
dec
aad
inc
pop
in
les
int3
outsl
loop
jne
push
cmpsl
les
xor
jmp
out
push
cli
jne
jns
ja
fstl
push
fistps
mov
mov
aas
lock
movsl
cmp
jnp
inc
xchg
add
add
aaa
addr16
add
pusha
into
fwait
pop
sbb
fimuls
call
outsb
loope
xor
jns
cs
mov
xchg
jecxz
adc
push
shl
test
outsb
xchg
jae
popf
shlb
cli
loope
xlat
mov
stc
insb
lahf
push
dec
dec
xchg
cmc
mov
les
inc
add
xchg
xor
loopne
loop
imul
movsl
stos
sbb
loope
pop
mov
mov
lds
dec
pop
outsl
call
ss
addl
cltd
push
push
jmp
in
fs
push
enter
mov
add
iret
and
fsubs
or
xorb
mov
out
cmpsl
lock
adc
push
jmp
xor
fcompl
mov
push
stos
mov
repnz
add
inc
xlat
mov
sbb
jbe
push
fsubl
mov
sti
push
push
xor
mov
sub
jle
mov
xor
and
repnz
shrb
adc
add
js
outsl
mov
lcall
loope
adc
fs
out
pop
in
jo
xor
xchg
mov
cs
mov
push
mov
xchg
push
mov
pop
mov
dec
lock
sub
or
sbb
ja
sbb
sbb
xchg
sbb
dec
ret
pop
push
loope
ja
ja
jo
push
scas
inc
and
lds
xor
movsb
dec
jecxz
aad
adc
ficomps
pushf
sbb
iret
mov
sbb
and
xchg
add
in
jle
std
sbb
mov
mov
les
add
iret
adc
jle
adc
movsl
dec
and
into
shrl
lods
jo
pusha
aam
rolb
xor
out
or
cmc
mov
pop
add
aaa
mov
stos
outsl
mov
ret
xchg
mov
rol
pop
and
or
mov
insb
sub
mov
jecxz
lret
mov
in
das
js
stos
fdivrs
imul
cltd
jbe
and
out
subl
cs
das
imul
xchg
mov
stos
jo
adc
xchg
outsb
sub
lahf
loop
pop
adc
xor
and
mov
lret
and
test
bound
sahf
inc
inc
dec
into
shl
ljmp
bound
cmp
xchg
hlt
cmc
inc
xor
inc
bound
push
mov
inc
inc
fldl
in
fnstenv
pop
and
cmc
pop
pop
hlt
ret
daa
sub
arpl
fs
cld
sbbb
jl
inc
aas
inc
ljmp
inc
and
push
and
mov
jne
cmp
outsl
and
inc
arpl
add
jp
push
xchg
xor
fidivrs
add
push
push
lods
insb
das
jg
adc
shlb
movsb
cmp
ljmp
xchg
cmp
fwait
and
or
push
xor
mov
push
mov
mov
ret
in
imul
mov
and
mov
mov
lds
jne
push
adc
imul
push
cmp
pop
add
in
cmc
cmp
inc
pop
push
mov
cwtl
das
inc
or
mov
in
arpl
popa
xchg
sahf
pop
cmp
lcall
jle
jecxz
push
and
push
dec
jp
lds
xchg
jns
xchg
std
add
testl
push
std
leave
bound
xor
and
xor
scas
pop
adc
jge
jl
and
jne
fwait
cmpsb
pop
push
push
dec
jno
mov
mov
mov
aam
xor
pop
xor
push
out
inc
mov
jmp
test
add
mov
push
fcomi
mov
adc
jmp
sbb
int
mov
jb
bound
ljmp
mov
outsb
ret
repnz
leave
cmp
mov
je
hlt
dec
adc
inc
dec
pop
inc
and
xchg
lcall
jg
ficomps
dec
xchg
iret
mov
mov
scas
movl
fwait
pop
pop
xor
mov
cmp
xor
aaa
jmp
adc
xchg
xor
cmpsb
aam
aaa
iret
mov
and
jae
mov
cmc
js
mov
cltd
xlat
dec
mov
jle
and
dec
inc
push
movsl
push
lds
ret
or
stos
or
sbb
adc
or
xchg
lret
adc
adc
push
sub
push
cmp
dec
jae
xchg
ja
xlat
cs
or
lret
sbb
roll
jbe
daa
test
pop
data16
jbe
jp
mov
cmp
add
and
in
aas
sbb
mov
insb
ss
cmp
jl
out
and
test
out
xchg
out
popf
mov
into
nop
icebp
dec
lcall
mov
mov
cmp
cmpsl
xchg
cmp
loope
add
mov
pusha
pop
fs
inc
mov
jmp
or
popa
pop
mov
xchg
push
fwait
or
stos
cmp
push
pushf
mov
sbbb
jecxz
stos
ret
add
pop
dec
mov
lcall
dec
loope
dec
jle
cld
push
repnz
movl
cmc
jl
push
jnp
dec
add
subb
push
xchg
xchg
and
lahf
das
addr16
sti
out
insl
cmp
push
or
and
add
mov
and
push
mov
in
or
and
iret
es
cs
mov
sahf
sub
arpl
jb
dec
movsb
mov
shll
lds
movsl
ja
nop
lret
xchg
es
jnp
inc
repz
fidivs
int
inc
mul
push
sub
mov
fs
cmpsb
sub
imul
lods
xchg
cmp
push
mov
pop
cmpsb
sti
out
adc
or
add
or
jo
dec
test
xor
jmp
mov
lret
mov
push
sbb
jnp
cld
leave
push
mov
mov
dec
xor
leave
pop
inc
inc
inc
icebp
xor
pusha
data16
sub
sub
fwait
cmpsl
mov
mov
popa
mov
insl
scas
cld
adc
cmp
inc
icebp
or
pusha
jle
cltd
jno
fildll
std
jns
repz
cmp
mov
dec
mov
and
mov
mov
leave
daa
fiadds
hlt
and
imul
pop
das
int
test
and
inc
pop
lret
push
inc
loopne
adc
inc
push
mov
add
jl
lods
sbb
push
jl
psubsb
int
loope
clc
jecxz
mov
sbb
xor
push
scas
je
sbb
inc
filds
std
insl
push
shrl
jb
add
sbb
iret
mov
mov
and
and
push
pop
arpl
lcall
push
mov
mov
imul
or
test
push
inc
mov
or
test
mov
sbb
inc
sub
mov
fs
jbe
dec
cmp
pop
pop
cmp
movsb
inc
out
mov
ds
sub
in
adcl
xchg
insl
pop
popf
fimuls
dec
movsb
dec
pusha
popa
mov
arpl
adc
adc
adc
insb
and
icebp
push
add
cli
xchg
dec
shll
call
push
addr16
or
stos
cmp
pop
aas
jle,pt
jo
pop
sti
pop
and
xchg
push
push
push
mov
mov
daa
out
test
addr16
shll
cwtl
push
inc
hlt
in
jae
jecxz
jl
sub
rcrl
pop
cmp
or
push
mov
jg
cmpsl
and
cld
ret
cld
sbb
push
cmpsl
push
jne
push
add
jnp
pop
mov
pop
push
testb
xor
sbb
aas
xor
jg
adc
outsl
sub
dec
call
cltd
sub
rorb
fadds
lahf
xchg
push
add
inc
jecxz
pop
xchg
jge
icebp
cmp
push
push
data16
push
push
push
enter
sub
es
push
pop
cmp
xlat
insl
jl
jno
xlat
imul
inc
sbb
pop
divb
add
mov
rep
cmp
jp
imul
lahf
imul
sbb
and
inc
insl
or
mov
out
push
data16
mov
mov
or
pop
scas
jg
dec
insb
inc
cltd
jb
movsb
repnz
arpl
jecxz
dec
gs
les
add
sub
and
or
testb
adc
xor
fldl
pop
ds
push
mov
mov
add
adc
cmp
mov
icebp
xor
cmp
les
xor
js
insb
popf
rcrb
sub
faddp
and
or
pop
push
incb
icebp
cld
lcall
adc
push
fldl2t
jno
xchg
cs
adc
test
add
or
daa
mov
sub
xor
in
fistl
push
pop
adc
or
lahf
insl
cltd
gs
jns
xchg
cmp
outsl
pop
gs
movsl
icebp
mov
xchg
cli
xchg
stos
mov
mov
add
pop
hlt
into
xchg
push
add
cmp
xor
cmp
ja
mov
adc
mov
incl
imul
add
dec
fnsave
sbb
push
aas
xchg
add
js
ficoms
cwtl
clc
pop
repz
and
add
adc
outsl
loopne
lcall
cmovo
xchg
pop
sbb
inc
push
sahf
pop
icebp
ret
dec
mov
in
loop
fistpll
sbb
test
int3
ja
cli
mov
mov
jb
sbb
int3
call
das
in
mov
jp
push
ret
roll
lds
xchg
ja
jg
outsl
lahf
sti
fwait
out
test
divps
jmp
mov
mov
jecxz
sbb
pop
mov
aas
mov
stos
xor
adc
lret
int3
jp
mov
xor
cmpsb
mov
shll
lea
mov
aas
ret
lret
sbb
mov
jb
mov
xor
lods
jmp
out
jecxz
ljmp
fdivs
movsb
test
sbb
insb
stc
movsb
inc
or
mov
aad
mov
and
iret
je
ja
xor
shlb
hlt
push
and
ja
aas
insb
ret
outsb
pop
pop
cwtl
lret
dec
add
enter
cmp
jns
sub
jl
mov
adc
ret
in
mov
and
loop
rclb
cmpsl
jns
and
jl
or
pop
adc
test
cli
xchg
inc
fisubrl
test
xor
sbb
loop
je
cmp
sub
mov
je
dec
lahf
dec
push
sbb
out
clc
add
mov
or
adc
pop
and
or
adc
rol
xchg
mov
enter
push
mov
out
mov
dec
and
push
subl
fwait
jo
int
push
sahf
gs
xchg
call
insb
loop
push
call
cltd
and
cmpsb
sahf
xor
sarl
stos
inc
pop
add
enter
mov
push
adc
push
mov
ss
sbb
pushf
and
ret
or
sub
or
push
jo
jecxz
subl
push
das
jg
and
inc
minps
mov
mov
inc
push
cmp
pop
loope
pop
decb
fsub
call
in
scas
jo
pop
pop
adc
jae
pop
sub
or
xor
lock
inc
sbb
addb
js
push
xchg
pop
dec
dec
loope
push
cmp
nop
punpckhbw
sub
mov
adc
mov
mov
dec
cmpsl
scas
cmp
outsb
hlt
cmc
mov
mov
call
imul
pushf
repnz
std
loop
sbb
out
dec
xchg
repnz
fisttpll
pcmpeqd
mov
pushf
and
daa
sbb
inc
jno
push
mov
insl
fnsave
jl
cltd
and
pop
lret
rclb
mov
mov
inc
js
xor
jmp
insb
sbb
outsb
jmp
setno
inc
push
adc
shl
icebp
aam
jnp
pop
ds
adc
or
and
push
jno
jbe
lahf
xchg
out
pop
lahf
mov
mov
scas
mov
adc
cmp
xchg
adc
inc
dec
gs
out
enter
lds
sbb
mov
fstl
mov
daa
es
test
inc
shrb
test
repz
cmc
fidivrs
lret
js
scas
xchg
lock
jae
mov
popa
std
je
ljmp
pop
jbe
iret
lahf
stos
jae
in
scas
bound
jmp
pushl
sbb
mov
jle
repz
ret
jp
stc
add
int3
rcrl
add
icebp
mov
and
pop
frstor
push
mov
inc
and
jnp
push
or
pop
imul
mov
mov
cltd
imul
add
divl
jae
stos
lods
movsl
icebp
xor
imul
mov
stc
je
pop
xchg
mov
jcxz
jge
jl
adc
mov
xor
adc
xor
mov
roll
test
stos
push
inc
notl
inc
arpl
mov
pop
inc
inc
out
shrb
shrb
mov
sarb
add
fdivs
adc
and
sahf
or
mov
fld
roll
out
ret
adc
test
sub
or
or
mov
mov
hlt
imul
lods
icebp
and
pop
inc
outsb
jns
scas
stc
xchg
shrb
or
mov
dec
es
dec
dec
jle
mov
push
inc
clc
xor
or
das
repnz
subb
mov
ror
fisttpl
fdivrp
cld
jmp
test
inc
mov
in
mov
scas
inc
call
push
mov
push
mov
sbb
testb
jo
xor
jg
aad
jmp
sub
lahf
cmp
add
mov
adc
idivb
push
sub
ja
test
cmp
in
movsl
js
add
xor
pop
lock
fs
or
push
scas
fwait
sub
cmpsl
mov
fldcw
cmp
hlt
stos
xor
or
sbb
daa
sub
add
jne
push
sub
xor
jl
fwait
ret
xor
adc
xchg
ds
ret
cld
add
mov
inc
push
ljmp
loop
xchg
js
lea
mov
xchg
lods
or
pusha
movsb
shll
xchg
jp
push
sarb
adc
cmp
call
loope
in
fists
cli
jae
fwait
sub
sub
jbe
inc
inc
cltd
jnp
cmp
inc
pop
je
or
sarb
xor
popf
mov
je
jne
push
mov
inc
push
sbb
mov
jl
adc
or
or
jl
add
mov
loopne
out
cmpsl
stos
es
popf
rcrl
pop
scas
jns
fisttps
jmp
jae
cmp
iret
ss
lods
push
cmp
and
cmp
add
ss
divl
mov
iret
jb
stc
ret
lods
adcb
mov
add
loope
or
sub
adc
lcall
in
mov
push
mov
adc
sbb
pop
add
inc
mov
xchg
ss
js
sub
fwait
mov
or
mov
push
lea
mov
mov
push
pop
insb
xchg
hlt
lea
push
sbb
xor
int3
ret
cltd
addb
addr16
enter
into
mov
arpl
test
test
or
mov
cwtl
jns
fwait
dec
push
cmpsb
adc
mov
sahf
mov
fiadds
gs
lret
ljmp
push
inc
adc
out
xchg
inc
xchg
popa
sub
xor
sub
arpl
jnp
in
ljmp
mov
int3
decb
inc
fmull
dec
es
gs
lret
push
sub
ljmp
pushf
xor
movsb
cmp
jmp
inc
test
orb
int3
arpl
fcmovb
cwtl
sahf
sti
ljmp
popa
pop
xor
dec
mov
and
enter
pop
jmp
scas
xor
pop
sti
hlt
addr16
icebp
movsb
repz
testb
cltd
jns
cmp
in
xchg
outsl
and
cltd
out
in
push
out
lods
xchg
repnz
mov
cs
cmp
test
test
cltd
dec
lahf
mov
push
es
mov
cs
test
push
add
in
dec
and
inc
cmc
cmp
xor
icebp
sbb
cmp
cltd
repz
aas
insb
push
xor
cmp
adc
cli
dec
lahf
hlt
inc
lds
jg
xorl
mov
add
xlat
sarl
add
mov
mov
or
loopne
ljmp
jne
lods
inc
cmpsl
add
roll
iret
outsl
add
dec
xor
jnp
mov
sbb
jge
imul
les
or
jle
mov
pop
mov
dec
fcmovne
jae
subb
sub
inc
rclb
loop
push
ljmp
xchg
jo
push
push
imul
mov
push
xchg
test
and
or
outsb
add
dec
xor
cmp
test
movsb
adc
jp
cmp
pop
push
stos
add
sarb
sub
lea
clc
lods
fimuls
sbb
cmp
nop
test
pop
mov
out
cld
jnp
dec
lods
cld
repz
hlt
mov
movsl
and
shlb
inc
out
sbb
outsl
jnp
jl
sti
mov
movb
inc
scas
sbb
xlat
sbb
std
sbb
inc
fldt
sbb
pop
or
jg
xchg
mov
cmc
push
cmpsb
jo
mov
cmc
mov
je
cmp
dec
sbb
dec
inc
sub
jo
je
or
das
clc
mov
fisttps
stos
in
movsb
icebp
cmc
dec
adc
cmpb
mov
aas
loopne
inc
lock
in
xchg
jo
push
xor
fistpll
stos
inc
adc
aam
rcrl
xor
bound
pop
mov
out
sahf
adc
pop
out
mov
cld
or
mov
jmp
xchg
adc
push
insb
add
mov
jg
xchg
call
out
jae
xchg
fcoms
pop
xchg
fstps
test
shrb
int3
xchg
fldl
loope
mov
push
add
cmp
das
cmp
mov
mov
push
push
nop
push
or
daa
aaa
movsb
cmp
cmp
jmp
mov
fisttpl
or
loop
push
outsl
jle
dec
aaa
and
sub
fwait
rcll
mov
mov
stos
inc
pop
in
jns
jl
ret
aaa
push
dec
movsl
rclb
popa
cmp
mov
flds
jbe
dec
adc
mov
fdiv
shr
cpuid
mov
popf
mov
xlat
xchg
loope
lods
mov
xor
xor
inc
js
adc
in
lret
push
mov
cmc
pop
flds
sub
int
xor
sub
mov
mov
into
es
push
jmp
pop
in
adc
leave
adcl
push
xchg
cmp
int
rcrb
arpl
mov
mov
cmpsb
add
ja
cwtl
cmp
leave
mov
ss
push
xor
data16
pop
adc
or
ja
arpl
push
arpl
lock
js
insl
add
push
inc
mov
dec
loope
mov
sarb
fistpll
mov
gs
rorb
cltd
pop
fnstcw
int3
fsubr
xor
test
xchg
fwait
pop
int3
je
cld
xchg
lret
cs
bound
sub
call
fistpl
imul
dec
fstl
ret
mov
in
mov
pop
imul
add
notl
out
sahf
xchg
rorb
je
sbb
inc
orb
cmp
fnsave
xlat
cmpsb
push
push
mov
and
shll
push
out
sarl
sarb
inc
leave
shl
imul
mov
aaa
push
dec
add
mov
adc
test
inc
nop
fs
add
xor
pop
jecxz
insl
adc
xchg
pop
xchg
lahf
xor
testb
cld
adc
pop
pop
mov
sbb
mov
shlb
push
daa
cmp
js
or
pop
fnstcw
rcr
adc
lret
aad
fs
lret
addr16
sub
pushf
push
fucomi
out
sbb
pop
xor
int3
or
push
notb
push
jecxz
mov
cmp
js
aaa
cmpsb
idivb
inc
sahf
fidivl
outsb
fdivrs
int
and
and
outsl
inc
pusha
addl
adc
jbe
dec
js
test
xchg
lcall
push
test
je
insl
scas
vcmppd
sub
pop
dec
inc
inc
fdivrs
leave
ss
mov
push
daa
xchg
mov
sub
and
jne
mov
repz
jp
sub
mov
dec
add
cmp
pushf
or
sbb
shr
xor
pop
es
clc
jnp
sbbl
add
in
and
mov
ret
lcall
mov
adc
sub
negl
lret
negb
pusha
or
repnz
mov
jp
inc
fmuls
cmp
repnz
jns
dec
aaa
loop
jecxz
rclb
jecxz
ss
mov
out
inc
xor
jge
and
fdiv
aad
bound
hlt
cmp
or
es
mov
jp
je
stos
in
fndisi(8087
mov
xor
pushf
lock
les
pop
sbb
shrl
lea
ficompl
ss
enter
pop
inc
and
es
ret
push
or
adc
mov
mov
mov
js
and
ficompl
sub
add
mov
lods
ds
add
mov
add
or
pop
pop
xorb
ret
hlt
pop
stos
in
push
sbb
inc
mov
xlat
add
data16
or
push
sub
in
mov
dec
cmp
addl
fsts
mov
jge
enter
pop
lret
or
dec
xchg
add
mov
cmp
test
mov
fsubp
das
inc
push
add
pop
fwait
xor
inc
xlat
adc
fnstenv
cmp
mov
movsb
or
lock
adc
mov
test
push
xor
bound
cmpsb
push
in
mov
add
lock
popa
mov
aas
adcl
daa
rclb
adc
mov
push
test
jmp
iret
cmpsb
xchg
lcall
fcomip
add
fdivrl
loopne
xor
out
andl
or
inc
dec
push
jle
push
inc
and
inc
pop
aad
mov
mov
into
loop
imul
out
into
loop
in
push
or
sbb
xchg
cmp
divb
scas
lret
lahf
sub
jp
je
xlat
dec
fstl
adc
lret
and
rolb
fwait
add
lods
enter
adc
movsb
cli
dec
shlb
mov
jns
pop
and
mov
push
ss
sub
ret
dec
ljmp
inc
bound
pushl
in
sub
lahf
aas
push
in
aam
pusha
mov
sbb
inc
mov
and
or
and
jb
cmc
adc
ja
adc
jbe
mov
mov
adc
inc
fwait
arpl
add
mov
push
outsl
or
shl
sbb
mov
cmp
cmp
js
jmp
push
add
hlt
cmpsl
and
cli
enter
loopne
inc
sbb
xchg
inc
xchg
mov
inc
jmp
fnsave
add
sub
xor
scas
jno
inc
fbstp
adc
or
push
popf
repnz
mov
fdivrl
iret
push
push
test
daa
scas
idiv
and
and
add
inc
fidivs
addr16
push
lcall
xor
sub
fs
ja
jns
fildll
fcmovnb
lods
mov
aaa
aad
adc
push
jl
cmpsb
sub
pop
call
fdiv
mov
and
ds
push
adcb
rorb
das
icebp
mov
int
lods
rorl
lea
cmp
repz
xchg
aaa
mov
jne
jl
repnz
test
dec
xchg
mov
inc
inc
arpl
adc
cmpb
mov
mov
and
shrl
jb
aaa
in
addr16
adc
dec
add
out
daa
fcos
mov
rcl
fldcw
sub
leave
fxch
loopne
sbb
push
fwait
push
jo
mov
outsb
add
sbb
mov
jl
push
outsl
and
mov
lock
or
or
push
xchg
xor
inc
and
gs
cmp
sar
rorb
mov
pop
xlat
testb
inc
popa
xchg
aam
xchg
stos
sub
inc
fmuls
sbb
outsb
mov
cmp
jle
mov
mov
adc
ret
add
sbb
cmpsl
cmp
je
pushf
adc
repnz
das
or
mov
imul
mov
adc
sub
int
cld
decb
sarb
xchg
mov
push
mov
enter
add
call
xor
xor
test
dec
or
insl
mov
or
shll
insb
aaa
sub
push
test
lock
scas
mov
adcl
outsl
and
xchg
mov
call
mov
call
pop
or
dec
or
cmp
cmpl
inc
stos
inc
repnz
sub
push
les
mov
icebp
push
aaa
inc
fnstenv
xchg
push
aaa
loope
inc
mov
out
or
popa
fdivrs
push
movsl
iret
pop
pusha
jp
mov
and
cwtl
inc
lods
dec
xchg
std
ljmp
cmpsl
int3
inc
mov
push
push
sbb
dec
ret
es
stc
dec
xchg
adc
loop
enter
adc
es
or
mov
fwait
repnz
jg
aad
cmpsb
aaa
into
xlat
pop
xlat
pop
inc
orps
iret
loope
sub
icebp
je
cmpsb
mov
jbe
push
adc
sbb
inc
add
add
int3
jo
dec
iret
sub
push
hlt
out
nop
cmp
sub
push
je
and
fidivrl
push
or
lea
mov
imul
std
xchg
mov
iret
push
cs
ljmp
xor
xor
pop
pusha
push
scas
sub
pop
nop
js
adc
add
pop
jp
inc
int
pop
aad
or
push
sbb
pop
mov
jo
notb
sarl
shrb
sub
cmp
insb
inc
add
mov
jb
adc
add
fstpt
cmpsb
fs
fbld
test
imul
dec
mov
jne
add
push
pop
cs
les
xchg
cs
and
insl
loopne
mov
xchg
call
or
cmpsb
or
scas
jae
je
mov
jecxz
stos
cmp
int3
add
cmovo
cli
jns
inc
and
pop
lods
mov
and
xor
arpl
ljmp
xchg
xchg
cmp
add
shr
arpl
decb
sbb
lock
push
mov
pop
adc
pusha
add
test
adc
push
sbb
jb
cmp
xor
xor
mov
adc
out
mov
ret
xor
jecxz
inc
das
mov
arpl
jnp
inc
xor
test
and
mov
fwait
cwtl
mov
mov
pop
data16
test
leave
mov
out
inc
add
andl
jb
jns
add
aas
fwait
out
mov
mov
arpl
xor
loop
scas
inc
push
sub
adc
push
aaa
pop
pop
repz
dec
imul
repz
sub
or
dec
jmp
adc
add
gs
cli
dec
shll
js
fwait
or
mov
pop
adc
popf
mov
repz
lock
push
push
sbb
cli
lds
sbbl
fidivrl
enter
mov
cmp
cmp
pop
test
push
xor
test
sahf
gs
cmpsl
sbb
mov
mov
mov
inc
test
sbbb
pop
push
jecxz
and
cld
in
out
mov
sbb
xchg
les
cli
inc
inc
notl
sti
add
cmp
movsb
inc
sbb
pop
xchg
into
and
movsb
lods
and
mov
hlt
stos
shl
mov
stc
scas
scas
aad
loopne
jg
je
mov
xor
movsl
inc
rcrb
loope
push
jo
add
repz
cmp
jmp
inc
in
or
leave
pop
adc
push
sbb
mov
jns
ret
cld
loope
xor
lock
stos
xlat
inc
push
int
popf
iret
mov
jmp
jae
dec
popa
clc
jns
ficoms
push
int3
adc
jb
es
jl
push
or
pop
pushf
stc
popf
insl
loopne
sbb
lea
mov
dec
dec
adcb
cmp
lods
pop
mov
lret
ljmp
and
cmp
lahf
add
sbb
out
movsb
mov
shll
fisubrs
add
xchg
lock
xchg
mov
rorl
push
cmpsb
enter
sbb
pusha
push
out
dec
fistps
mov
lock
adc
and
sub
add
lcall
insb
pop
imul
dec
xchg
or
cmp
mov
stos
lret
pop
push
adc
adcl
jecxz
ss
out
cmp
fucomi
mov
dec
add
in
negl
je
scas
loop
sbb
decl
in
popa
sub
sub
std
or
jl
popa
js
dec
pop
sbbb
jp
mov
cmp
pusha
or
lret
xchg
sbb
in
les
rclb
push
lods
add
cs
mov
dec
dec
test
jp
sbb
cwtl
ss
scas
sbb
in
add
ss
test
stc
ror
cmp
cmp
in
divb
xchg
arpl
mov
inc
dec
and
ja
xor
or
aaa
push
sbb
jae
mov
lea
mov
cmpsl
aaa
mov
cwtl
enter
cmp
push
loopne
mov
outsl
xor
gs
rcr
xchg
out
sti
sbb
outsb
aad
mov
stos
div
mov
mov
cs
rcrl
shl
jbe
arpl
sbb
inc
scas
aaa
push
pop
jo
pop
mov
dec
cmpsb
arpl
lret
add
adc
cmp
mov
xchg
in
pop
out
lods
test
and
jo
jle
mov
gs
sub
dec
xchg
push
scas
outsb
dec
test
xor
fbstp
out
push
jmp
ficoml
dec
out
inc
pop
cltd
pop
cmp
add
aas
pop
pop
and
push
pop
ret
scas
pop
and
pop
or
ds
inc
fimuls
sti
gs
sub
in
pop
cmc
xor
orl
mov
movsl
add
push
lcall
adcl
mov
imul
dec
rorb
or
push
mov
add
rcl
cs
and
sub
lds
dec
call
and
inc
andl
repnz
mov
xor
loope
shrl
add
mov
inc
shrl
dec
aam
jecxz
sub
or
pop
adc
xchg
fwait
shlb
lret
ljmp
xchg
mov
jb
mov
sbb
or
mov
mov
xor
cmp
dec
add
inc
xchg
sub
test
dec
loope
gs
int
dec
int3
fnstcw
inc
adc
popf
xor
enter
dec
push
pop
aam
aas
mov
jmp
dec
sti
jbe
test
inc
fcmovnu
and
insb
test
ljmp
push
or
push
daa
dec
sub
mov
test
mov
xor
inc
fnstenv
fs
xchg
mov
sub
pop
cmpsb
les
mov
and
xchg
sub
cmpl
lea
mov
test
inc
sbb
imul
jp
popf
mov
sbb
fsubrl
adc
in
jg
sti
pop
fcompl
or
jo
inc
push
mov
cmp
das
adc
mov
or
mov
xlat
outsb
roll
sub
mov
xor
pop
movsl
xor
mov
jno
xor
mov
lret
or
lret
add
push
xor
pop
mov
jecxz
mov
loopne
fcmovbe
cltd
push
fwait
aad
bound
out
inc
fistpl
fdivs
insb
add
or
icebp
rcrl
adc
ret
pop
cltd
jle
jnp
jg
outsb
mov
fists
adc
xchg
sbb
lret
push
out
shrb
movsb
push
xchg
jb
addr16
out
cmp
inc
xrelease
outsb
mov
mov
inc
adc
lock
sbb
adc
jmp
mov
xor
xchg
cmp
cmpsl
adc
jp
sub
testb
mov
mov
int
and
add
mov
sbb
aas
in
xor
mov
push
push
mov
shrb
mov
adc
lahf
cmpl
mov
xchg
push
cmp
push
lea
insl
add
outsl
daa
pop
std
or
insl
hlt
pop
out
mov
inc
icebp
call
inc
mov
inc
add
xor
add
out
leave
ror
out
scas
jb
adcl
dec
gs
pop
imul
outsl
jp
xchg
add
sbb
jecxz
mov
ljmp
inc
pop
fldl
cmpsb
mov
dec
or
pop
icebp
icebp
cs
scas
stos
adc
bound
inc
jg
out
adc
jbe
inc
and
dec
sti
inc
push
mov
sarb
ror
dec
fcomps
ja
js
sbb
jecxz
cmp
xchg
imul
lock
mov
mov
sarb
aas
jge
xor
cltd
push
inc
cwtl
ficomps
push
and
out
pop
dec
push
ljmp
pushf
cli
xchg
sbb
cmp
clc
cmp
cmc
daa
scas
es
mov
mov
mov
dec
fistpll
pop
scas
ret
in
jecxz
jno
shlb
test
aaa
rcrb
arpl
sbbb
enter
pop
pop
ljmp
jle
int3
jg
mov
negb
repz
out
xor
out
in
or
ljmp
aaa
pop
adc
sub
pop
pop
testl
dec
cmp
jne
ret
ret
adc
mov
je
cs
stc
mov
or
cmp
nop
nop
xchg
ss
js
xchg
cmp
ds
outsl
pop
mov
lea
outsb
adc
cmp
stos
in
ss
orl
out
test
mov
or
jl
test
aam
adc
pushf
test
dec
pop
ret
sarb
jle
dec
pop
in
push
adc
inc
mov
push
lret
sub
add
in
mov
xchg
sbb
iret
loop
jnp
jo
pop
and
jnp
mov
dec
add
rcrb
inc
sbb
xchg
push
mov
dec
test
stc
push
or
cmpsl
cmpsb
mov
fdivr
mov
mov
js
sbb
hlt
and
inc
sbb
fcoml
inc
pop
lahf
insb
gs
cld
add
add
or
test
xor
cltd
cld
mov
jp
psubusw
pop
xchg
lahf
sahf
jae
roll
xchg
adc
pop
cmpsb
out
cwtl
cmpb
lret
xchg
jmp
dec
jo
push
xor
ja
aaa
outsl
push
push
pop
push
ss
call
inc
jnp
outsl
push
lahf
in
sbb
xor
xchg
sbb
fdivr
fnstenv
xor
andl
outsb
imul
fimull
call
jb
dec
sub
es
outsl
and
hlt
bound
pop
sbb
push
popf
lcall
stos
mov
cwtl
jne
stc
push
inc
lcall
aad
jns
call
adc
mov
loope
pop
les
std
mov
clc
decb
sbb
sbb
xchg
mov
dec
jo
mov
jo
jmp
rcl
mov
mov
lds
aad
mov
rorl
dec
rcll
dec
fsincos
mov
addr16
jns
and
jle
pop
pop
cwtl
push
icebp
push
mov
mov
cmp
xlat
sbb
add
repnz
iret
sbb
enter
cld
dec
fistpll
add
scas
mov
fldt
push
fbstp
inc
push
sti
popf
orb
addr16
es
dec
sarl
or
push
shrb
sub
mov
dec
call
mov
dec
dec
rorb
and
data16
xor
fsubs
add
jbe
dec
rol
push
insb
mov
out
test
jg
sub
dec
notb
ret
mov
arpl
stc
jns
stos
fimull
icebp
add
add
imul
or
push
pop
cmp
mov
out
cmp
sub
mov
sar
xchg
add
and
enter
cli
mov
or
jo
jp
cli
mov
cltd
push
movsb
lods
add
notb
mov
or
cmpsl
sbb
inc
dec
pusha
pop
lcall
stc
inc
ljmp
scas
xchg
inc
inc
mov
ret
in
aas
sbb
bound
fs
leave
into
movsl
cmp
in
add
loop
jae
int
pop
sub
pop
rcrb
jle
scas
mov
test
aas
dec
pop
stc
xor
mov
push
dec
adc
mov
add
insb
int
mov
shl
aas
adc
icebp
jecxz
pop
pushf
or
jmp
je
or
shll
daa
mov
cmp
mov
pop
xchg
push
jge
inc
scas
test
aad
imul
fistps
jmp
lds
lods
jbe
fs
push
lods
jg
mov
fwait
and
adcl
stos
movsb
lods
jne
xchg
mov
shr
lock
or
loopne
enter
aad
lcall
fiaddl
loopne
mov
mov
adc
adc
xchg
xlat
mov
sahf
shl
repnz
popf
stc
xor
mov
or
add
ret
daa
jno
in
push
fistpll
popa
jbe
adc
jb
adc
test
xchg
mov
xor
cs
pop
dec
pop
enter
inc
mov
push
xchg
les
fnsave
ss
add
sub
jecxz
sbb
sbb
fiadds
in
je
xor
repz
fiaddl
cwtl
loopne
into
push
imul
mov
andb
mov
mov
mov
sub
fidivl
in
mov
adc
addr16
imul
sahf
pusha
call
ficoml
inc
pop
sub
xchg
dec
jmp
sbb
notb
fnsave
ss
mov
mov
pushf
shrb
pushf
aas
mov
cld
or
push
inc
sarl
repnz
sbb
dec
dec
lea
xchg
cmpsb
dec
scas
mov
ja
adc
or
aas
scas
lods
mov
and
inc
lods
inc
test
or
cs
mov
nop
sub
push
rorl
mov
xchg
loope
xor
cmp
inc
adc
in
jnp
or
cltd
xor
lfs
int
outsb
rcr
mov
loop
lods
fildl
jecxz
sub
pop
fadds
jecxz
leave
fadds
xchg
cmc
inc
push
ds
rcll
iret
xor
cltd
xor
pop
std
push
pusha
jo
xchg
cli
xchg
leave
fadds
lds
pop
das
ja
mov
xchg
neg
mov
or
test
jb
adc
mov
cmp
sub
mov
mov
xor
adc
js
jge
xchg
push
lret
pop
cmpsb
or
das
and
sub
pop
adc
and
les
xchg
cwtl
fnsave
fiadds
mov
sbb
mov
pop
not
cwtl
or
dec
mov
jae
xchg
xchg
std
jnp
fcom
cltd
pop
stos
add
pop
and
insb
sti
jnp
shrb
mov
negb
xor
sub
pushf
and
sti
jmp
mov
shrl
xlat
push
pop
sbbl
popa
loope
jns
sbb
pop
sub
fcompl
jo
lret
jp
sbb
mov
dec
or
outsb
not
in
push
jb
mov
scas
cmp
xchg
inc
inc
out
cmp
jo
lea
push
inc
sbb
mull
mov
and
fistpl
cmp
mov
and
mov
pop
add
adc
scas
popf
and
icebp
inc
lods
lds
pusha
testl
sti
or
sub
lods
sbb
out
popf
push
lcall
pop
sub
ret
mov
sti
pop
mov
xchg
test
inc
fidivrs
lahf
loop
rcrl
adc
nopl
inc
negb
outsb
or
add
movsb
inc
rcrl
shll
or
lahf
idivl
sub
ss
pop
jle
stos
outsl
push
cmc
adc
or
mov
out
js
mov
scas
xchg
sub
mov
ret
jge
lea
movsb
insl
or
movsl
andb
enter
dec
insb
test
dec
mov
lds
stos
jnp
pop
mov
jp
cld
shl
mov
and
fdivs
xor
cmpsb
cmp
adc
idivl
cmovg
inc
stc
and
loopne
ficoms
mov
mov
xor
lods
mov
hlt
mov
repz
mov
pop
and
pushf
test
subb
jne
pop
cld
and
jp
inc
mov
push
insb
mov
out
xor
orl
cmpsb
jne
fsubrp
int3
jb
cmpsl
sub
inc
lahf
lcall
lods
mov
fsubrl
xchg
pop
scas
push
test
jle
xlat
pop
jo
mov
cmp
rcrl
jp
cmp
cmp
aam
xchg
mov
xchg
stc
bts
lods
fwait
testl
hlt
out
andb
inc
xor
pop
pop
imul
inc
mov
lret
dec
pop
and
jbe
subl
test
dec
lds
bound
push
xchg
xchg
sub
loop
add
dec
dec
xchg
lcall
lods
jmp
and
ret
loop
jne
mov
xchg
cli
fwait
loope,pn
cs
clc
int
ret
jmp
int
lock
sbb
mov
in
cmpsb
les
xchg
outsb
dec
lods
cmp
sub
into
add
sti
cmp
idivb
sub
mov
sub
mov
mov
mov
enterw
imul
mov
mov
hlt
mov
dec
mov
pop
xchg
inc
jno
jns
out
arpl
jne
adcb
loopne
push
nop
pop
mov
push
mov
push
lret
and
daa
sbb
fldenv
cmp
xor
test
mov
cmp
rcr
sub
fists
ds
jg
push
mov
mov
idivl
fdivrl
xor
push
pop
sbb
or
adc
fwait
mov
scas
mov
repz
jl
fisubrs
les
mov
mov
sub
xor
bound
mov
xor
test
fldln2
cmp
pop
jae
outsl
push
mov
imul
inc
pop
pop
push
push
mov
addr16
mov
in
pushf
pop
inc
sti
xchg
loopne
mov
jno
inc
fwait
xor
jno
pop
fiadds
fldt
jb
cmc
lret
fsubrs
in
bound
sub
fcmovnu
mov
in
and
lock
popf
call
mov
inc
orl
push
sbb
loope
mov
ljmp
mov
fnstenv
rorb
inc
jb
pop
sbb
inc
lcall
push
ljmp
adc
jle
xor
inc
pop
inc
cld
jnp
add
push
into
das
xchg
bound
pop
mov
inc
push
shlb
mov
inc
aad
lods
fstl
sarb
sti
adc
negl
lahf
fdivrs
loope
sub
jno
push
xchg
je
hlt
imul
jecxz
cmpsl
lds
aam
xor
push
pop
pushf
aam
xchg
add
xor
popf
call
add
loope
mov
sub
popf
loope
mov
cmpl
push
dec
popa
xor
aaa
sub
ss
dec
pop
fisttpll
dec
sti
das
sub
dec
subl
int3
jno
cmp
jl
mov
je
push
mov
jmp
negb
stos
test
lret
jmp
and
pop
addr16
add
dec
pop
imul
rcll
ds
jmp
stc
test
or
push
jb
mov
and
adc
xchg
inc
test
mov
mov
sub
mov
lahf
mov
mulb
mov
xchg
dec
inc
test
mov
fiaddl
fstp
mov
mov
fwait
ret
stc
sub
jbe
icebp
add
ja
lock
imul
cmp
fsubp
mov
cmp
lret
mov
lods
loopne
js
dec
int
and
or
shlb
outsb
jp
jb
push
xchg
pop
mov
call
aaa
jle
and
insl
mov
mov
push
mov
loopne
enter
mov
jb
lods
dec
mov
xlat
adc
rolb
addr16
mov
subl
sbb
adc
fmulp
arpl
out
pop
cltd
mov
test
cmpsl
lods
pop
imul
xchg
cmc
add
mov
repnz
and
xor
jo
out
and
fs
std
and
les
jle
lret
cmpsl
or
mov
push
or
mov
xchg
sub
ret
pop
imul
ret
pop
push
add
mov
mov
shrb
jnp
or
sahf
fcomps
add
xchg
or
pop
and
inc
jecxz
repz
sti
adc
and
insl
insb
rcll
mov
or
dec
pop
adcb
jo
mov
out
rol
adc
or
ja
iret
xchg
xchg
or
add
fbld
push
mov
or
adc
dec
and
jmp
fbstp
pop
repnz
sbb
clc
pop
xlat
insl
gs
pusha
or
cmp
mov
fisttpl
dec
orb
pop
loopne
lahf
add
les
std
mov
jne,pt
repz
push
in
adc
dec
sub
jns
or
test
lods
sbb
bound
xlat
and
or
mov
inc
aad
push
jae
pop
fisubrl
aas
rcll
iret
popa
or
push
mov
fstpt
loop
test
and
push
push
mov
icebp
aam
mov
clc
xorb
and
stos
into
fld1
stos
mov
data16
and
popa
push
fsts
mov
into
fsubrl
lcall
pop
inc
cwtl
xchg
icebp
mov
movb
es
sbb
pop
iret
sub
imul
dec
pop
popf
out
adcb
xchg
push
mov
fsubrs
lods
dec
mov
jl
mov
push
mov
push
ljmp
mov
pop
pop
lret
fidivrl
mov
out
jmp
mov
sbb
mov
popa
sub
dec
or
arpl
add
icebp
pmuludq
jns
mov
push
scas
mov
or
int3
fisttps
xchg
in
fstpt
jp
test
push
mov
test
movsb
icebp
and
lcall
xchg
leave
xchg
cld
xchg
push
push
or
inc
add
mov
mov
andl
pop
scas
pop
mov
scas
arpl
mov
pop
xor
iret
pushf
sub
mov
test
xor
adc
xchg
and
scas
ja
fs
scas
lahf
push
sub
lock
leave
outsb
jnp,pn
xchg
jbe
jmp
jns
or
xchg
add
cli
sub
std
int3
es
pop
mov
mov
into
and
jae
mov
testl
mov
into
adcl
lods
mov
in
iretw
cltd
je
lea
mov
xlat
mov
out
pop
jns
add
mov
enter
int3
push
cmp
movsl
cmp
shrb
sar
xchg
sub
pop
lock
sbb
push
insl
test
push
popf
lahf
mov
ret
mov
rcll
inc
push
test
xlat
ret
lock
gs
and
into
push
sahf
clc
pop
rcrl
mov
pop
xor
push
jmp
adcl
lea
ss
inc
sub
mov
testb
fs
jae
dec
call
sbb
stos
insb
dec
fs
cmpsb
out
add
inc
jbe
mov
cmpsl
inc
cli
adc
add
imul
popf
mov
mov
and
mov
mov
nop
ret
or
sbb
shll
popf
mov
fistpll
jmp
xchg
mov
adc
xor
sbb
pop
lea
xor
add
jge
cmpsl
mov
es
scas
inc
dec
sub
icebp
push
repz
fbstp
inc
std
xchg
cmp
std
pop
or
cs
lods
pushf
inc
fldt
or
fildll
and
dec
cmp
sub
sbbl
int3
sbb
jnp
mov
fstps
xchg
imul
mov
cs
pop
push
loope
push
hlt
or
mov
inc
les
std
int
pop
and
xor
rcrl
cs
xorb
push
cmp
lret
lods
negb
push
movsb
std
and
rcrl
jp
xchg
push
add
hlt
mov
iret
push
out
add
cltd
popf
hlt
mov
and
sbb
mov
lret
cmp
iret
cmp
or
ja
mov
mov
in
push
and
jnp
incb
mov
pop
pop
push
out
dec
pop
cmpsl
pop
xchg
adc
fwait
push
and
sahf
push
mov
push
jo
lock
loopne
test
push
ret
add
ds
fsubrl
stc
scas
dec
fwait
sbb
or
push
lods
xchg
sub
pop
mov
add
lahf
ds
mov
mov
jge
adc
ss
and
das
sub
xchg
push
jge
xchg
pop
dec
pop
sbb
jmp
sbb
ljmp
cmpsl
inc
pop
fisubl
sub
add
rcll
cmpsb
les
pop
push
orl
adc
lods
cmpl
xchg
add
andb
push
mov
iret
popf
fbld
jno
stc
push
int3
outsl
xchg
inc
lods
js
xchg
fsubrs
pop
dec
mov
pop
mov
sbb
test
fldt
lds
scas
dec
jp
aad
inc
aam
fisubs
cmp
fsubr
jmp
jecxz
adc
mov
jno
adc
decl
inc
daa
adc
bound
xchg
push
ret
scas
pop
mov
adc
cmp
cmp
pop
sub
addr16
enter
stos
pusha
fldt
xchg
gs
add
in
jle
sub
jmp
pop
mov
adc
jnp
movsl
das
push
loop
dec
push
xor
outsb
test
ret
xchg
inc
cmpsb
pop
cmp
insl
dec
dec
push
cwtl
fdivl
nop
sbb
and
sti
arpl
cli
mov
or
stc
push
xor
jns
loope
xchg
lcall
in
icebp
movsl
jmp
xchg
fs
loope
ficoms
adc
test
adc
js
add
xchg
fdivr
outsl
push
aaa
push
jg
repnz
lret
lahf
mov
mov
cmp
lock
mov
out
sbb
loop
ffree
cwtl
test
xor
dec
xor
sub
push
inc
adc
data16
fwait
pop
add
cmp
jae
add
mov
pop
dec
loopne
ja
out
test
fwait
insl
jge
jbe
mov
push
cltd
insb
mov
jbe
cmpsl
iret
enter
mov
mov
cmpsl
gs
out
dec
sbb
cmp
fdivl
repnz
or
push
mov
mov
dec
mov
sbb
insb
cmp
movsl
mov
outsb
out
out
fsubl
mov
ds
push
push
lcall
and
add
add
and
ja
lock
cmpsb
lods
xor
mov
das
inc
fcomip
mov
data16
lret
pop
pop
lods
fistpll
or
in
and
stc
insb
dec
xlat
aaa
push
inc
fs
cs
mov
std
scas
out
inc
mov
ss
mov
cmp
out
and
xchg
xor
std
andl
and
push
push
sub
fucom
push
or
rcrb
movsb
dec
jecxz
movaps
shlb
aam
or
pop
jp
add
push
inc
lea
inc
loop
mov
xchg
ss
pop
and
rcl
decl
lods
out
jg
jae
je
jge
fcmovnb
mov
pop
jmp
mov
call
fisttps
movsl
and
xlat
mov
movsl
jp
leave
cwtl
jne
filds
xor
sti
adc
fistpll
insb
xchg
pop
repnz
mov
add
fsts
adc
andl
mov
sub
pusha
aaa
fimull
mov
es
movsb
mov
push
jmp
inc
push
cmp
fsubrl
call
jbe
test
popa
nop
add
xor
fnstenv
cmp
ja
mov
jl
mov
mov
and
adc
out
push
jne
hlt
and
xchg
sahf
add
adc
sbb
xchg
fwait
mov
int3
cltd
mov
push
pusha
arpl
popf
scas
lcall
rcrl
shlb
dec
lock
scas
xorl
arpl
or
out
mov
push
aam
xchg
mov
out
and
test
int3
inc
add
push
adc
mov
out
gs
insl
mov
jp
xor
jbe
push
cld
xor
xchg
test
bound
jnp
sbb
inc
and
shlb
pop
fs
xor
pop
mov
mov
mov
sbb
mov
or
icebp
jp
mov
mov
and
sbb
fwait
ds
add
fwait
rcrb
ljmp
mov
jl
sarl
pop
pop
mov
xorb
int3
mul
cmp
jno
push
insb
cmp
cs
mov
mov
dec
inc
mov
jmp
out
mov
xchg
repz
xor
add
scas
test
enter
mov
sbb
rcll
adc
pop
sbb
mov
cmpsl
ss
adc
adc
pop
emms
mov
jae
cmp
sbb
adcl
into
dec
fisubl
jae
xchg
add
mov
mov
jno
sti
cmp
insb
lgdtl
or
icebp
xchg
inc
scas
popf
stc
xchg
es
sub
mov
xlat
jecxz
sbb
je
push
es
insb
scas
push
dec
mov
sub
pop
and
mov
test
mov
sub
mov
enter
pop
xchg
sub
cmp
inc
hlt
mov
dec
aad
xchg
push
mov
js
fnstsw
mul
imull
fcomp
outsl
or
mov
add
pavgb
add
xlat
imul
mov
mov
enter
jle
lock
sbb
xchg
in
or
fisubrs
loopne
and
mov
lods
add
das
pop
shlb
outsl
xchg
daa
aam
push
lahf
jbe
or
jl
ss
sahf
clc
xlat
repz
ljmp
push
test
xchg
sbb
shrw
lods
es
mov
je
mov
call
adc
fsubp
and
cmp
push
xchg
es
imul
push
push
mov
mov
clc
push
add
and
aas
xchg
inc
xchg
sub
mov
dec
xchg
mov
inc
popa
imul
adc
je
jge
pop
outsl
cld
xlat
inc
add
stc
mov
sbb
lock
mov
inc
adc
jmp
mov
loop
imul
add
or
or
inc
mov
xchg
jb
out
mov
sub
ret
hlt
push
sbb
js
aas
imul
pop
dec
gs
xchg
sub
xchg
rcll
bound
dec
xor
push
pop
pop
xchg
jmp
sub
movsb
push
mov
pop
ds
jae
push
mov
lds
sti
xor
push
add
mov
les
push
mov
mov
add
cmp
cmp
cmp
mov
push
xor
and
inc
mov
cmpl
inc
cmpsb
in
cli
cltd
xor
and
rorb
mov
xchg
aad
cmpsl
inc
ja
ljmp
test
sti
pop
imul
and
cmpb
dec
and
je
movsl
addl
js
rolb
mov
mov
in
shrl
adc
sub
inc
test
iret
adc
negb
lcall
pop
pop
in
xlat
dec
inc
push
std
call
jecxz
xorps
push
adc
and
adc
rolb
out
jbe
add
ljmp
popl
rclb
adc
mov
mov
leave
fdivl
mov
sbb
jle
or
pop
pop
aad
or
xchg
push
mov
or
scas
jns
and
fmul
lret
pop
push
mov
inc
adc
mov
ds
in
outsl
inc
aaa
jne
xor
movsl
inc
or
int
loope
mov
push
sub
xchg
lret
inc
mov
js
sbb
add
push
repz
jge
mov
popf
fwait
add
popf
aaa
arpl
cmpl
shrl
mov
and
lods
pop
das
fisttpll
les
lahf
sbb
out
cmp
ss
sbb
cld
sahf
add
cmpsl
lock
cmpsb
js
insb
mov
fnstenv
fnstcw
out
jno
xchg
push
enter
sub
lcall
jle
pop
pop
fprem1
lcall
in
roll
daa
imul
popa
add
pop
in
pop
xchg
push
pop
adcl
test
mov
fcomi
jg
outsl
enter
aaa
jmp
fnstenv
sbb
inc
outsl
jnp
mov
cmp
gs
rorb
jns
xchg
sub
clc
inc
xor
ljmp
pop
cmp
lcall
fcompl
scas
sub
and
lcall
mov
in
test
js
call
cmpsb
lret
push
loop
insb
leave
cmp
insl
addl
sbb
or
cmp
push
out
cmp
sbb
loopne
sbb
cmp
xor
test
js
and
scas
and
bound
sub
xor
lock
xor
dec
stc
popf
out
ds
sbb
ljmp
mov
out
dec
jecxz
fcompl
pop
ja
xchg
xor
das
fisubrl
cmp
fidivs
lcall
sbb
mov
adc
pop
mov
cmpsl
lret
add
mov
test
mov
lret
jb
fiaddl
xchg
mov
jns
fs
addr16
add
cmp
leave
sub
xchg
jecxz
xchg
dec
sbb
test
xlat
andl
sarl
pop
mov
lock
cmpsl
xchg
jo
or
movsb
push
scas
pop
push
lret
jnp
add
lods
lds
loopne
mov
push
inc
push
inc
call
cwtl
xor
cmpsl
cmc
mov
nop
and
roll
lds
push
adc
lods
in
flds
jl
mov
pop
cmp
rcl
sbb
mov
sbb
and
ds
sub
push
xchg
lds
cli
and
cwtl
sbb
stos
addl
or
dec
push
and
fdivrl
xchg
mov
lret
jno
pop
inc
popa
xchg
adc
fwait
add
aas
inc
movsb
in
sbbb
pop
gs
fwait
jecxz
xorl
inc
jmp
aam
js
aad
jp
jle
notl
fcoml
and
and
fdivr
cmp
push
pop
and
sub
mov
inc
sbb
std
test
aad
push
pop
mov
aam
aaa
xchg
cmp
jae
ret
push
mov
mov
push
fdivs
cli
leave
into
in
sbb
jo
call
pop
js
dec
movsb
dec
shr
cltd
aam
outsb
mov
add
mov
pop
scas
daa
rcr
mov
lahf
cmc
lret
cmp
and
dec
sbb
add
cmp
adc
shrb
scas
jle
in
jbe
cwtl
and
or
cmp
mov
sub
mov
jg
cmp
les
or
stos
xor
xchg
popa
xor
test
adc
jns
or
xchg
test
mov
sahf
cmp
incl
fiadds
loopne
fwait
xlat
in
sarb
int3
lret
aas
cmpsb
inc
dec
arpl
cmpsb
xchg
sub
inc
add
pop
dec
out
cmp
or
lcall
lock
push
add
fidivrs
xor
xlat
mov
sbb
fidivrs
jl,pt
xlat
mov
adc
adc
cltd
mov
addb
repnz
jo
lcall
or
adc
and
lods
int3
pop
cmp
in
dec
dec
dec
push
sub
mov
aam
outsl
orl
mov
jle
ret
or
mov
sub
repz
inc
and
popl
sbb
lock
inc
xlat
aaa
cmc
daa
ljmp
push
scas
push
push
das
or
sbb
or
daa
out
mov
lret
pop
aaa
cmpsb
nop
lret
add
inc
outsl
loop
xlat
xlat
mov
push
push
pop
and
dec
cmpsl
push
adc
push
mov
stc
xor
xchg
push
loop
out
pop
mov
stos
pop
sbb
mov
stos
and
xchg
out
push
andb
pop
adc
xchg
enter
imull
lds
pop
inc
call
push
lds
sub
add
in
pop
or
jo
pop
sub
fcmovnb
xchg
add
icebp
or
stc
pop
retw
sar
jno
mov
das
push
rol
push
sub
dec
lcall
push
and
pusha
outsl
sbb
mov
loopne
rol
ljmp
inc
jno
or
xchg
stc
scas
jg
mov
add
stos
adc
idiv
inc
rcrb
xchg
shll
jg
cmp
inc
or
lcall
pmaxsw
or
cmpsb
mov
popa
ret
mov
push
jae
or
cmp
jne
mov
xchg
mov
testb
imulb
roll
dec
and
lret
clc
ljmp
rcr
sbb
xchg
and
scas
nop
imul
ljmp
mov
test
rorb
iret
leave
cmp
dec
std
mov
repnz
dec
fsubr
cmpb
loopne
mov
pop
jnp
bound
ficoms
pushf
leave
jp
push
fs
xchg
aas
or
pop
pop
scas
mov
xchg
sbb
and
push
mov
negl
popa
or
fsubrs
pop
jae
mov
sti
mov
fwait
sbb
ret
test
cmp
fildl
jmp
pop
push
js
cld
scas
jne
and
add
push
icebp
pop
stos
jo
push
sub
cltd
mov
sar
push
rcrb
les
stc
fwait
popa
aam
ficoml
xorl
sub
dec
pop
enter
les
insl
enter
into
push
inc
arpl
aas
gs
push
je
mov
inc
xchg
mov
inc
jae
nop
adc
or
js
ja
and
mulb
sbb
mov
adc
imul
insl
xlat
inc
dec
in
pop
cltd
xor
mov
icebp
ret
mov
repnz
popa
dec
loope
mov
sbb
pusha
shrb
mov
mov
mov
adcb
addr16
push
stos
push
call
mov
jo
pushf
arpl
lahf
and
stc
nop
jg
cmp
loope
mov
and
arpl
jl
adc
xor
pop
mov
jae
call
ja
inc
fisubs
movsl
adc
out
jg
xorl
mov
push
mov
mov
add
testb
pusha
int
push
mov
ret
pop
shll
xchg
dec
or
repnz
push
leave
cmp
sub
adc
int
pop
mulb
dec
pop
sahf
cmp
mov
pop
jecxz
lods
inc
scas
aaa
mov
and
mov
fsubrs
mov
gs
jmp
inc
or
lods
out
clc
aad
jl
sub
xor
es
and
fdivrs
in
mov
cmp
pop
ret
pop
iret
lret
mov
jnp
pop
cmp
jle
outsb
mov
ficoms
inc
mov
cmpb
bnd
xchg
pop
loop
movl
pop
sub
fcompl
scas
add
test
jns
dec
pop
test
imul
in
mov
or
inc
mov
sbb
mov
roll
cwtl
or
or
xchg
and
add
out
sub
std
add
call
mov
and
pop
out
stos
les
mov
int3
mov
jecxz
pop
inc
sub
gs
xchg
insb
test
fistpll
fcompl
data16
outsl
jb
pop
stc
pop
adc
pushf
les
sub
rcrb
das
dec
aad
add
inc
hlt
or
inc
and
mov
jns
testb
xor
jns
jo,pt
repz
sub
sbb
out
outsb
dec
fldenv
idiv
inc
in
and
stc
orb
sub
mov
xchg
xchg
push
fwait
jns
push
sub
pop
cmpb
in
sti
flds
adc
dec
fnstenv
jae
jo
out
jge
mov
int
and
iret
fidivl
sub
push
adcl
aas
in
pusha
mul
jecxz
mov
scas
push
scas
inc
inc
je
sbb
ja
lret
jecxz
pop
pop
testb
lock
xorl
sbb
cmp
and
cmpsb
jno
lods
stos
mov
ds
sti
mov
push
scas
mov
xchg
int3
and
mov
sbb
pushf
xchg
loop
mov
jge
shl
notl
inc
pop
dec
pop
cmpsb
cmp
arpl
mov
push
mov
push
aad
lods
mov
cmp
push
inc
fidivrs
inc
or
push
lret
out
sub
leave
inc
add
add
inc
mov
repz
insb
mov
test
mov
xor
sti
imul
fistpl
pushf
movsb
pop
mov
popa
sahf
out
xchg
out
lret
and
rcl
mov
pop
and
inc
pop
sub
mov
dec
sub
jnp
mov
ficompl
mov
mov
mov
pop
fistl
or
xor
or
jae
fbstp
pop
stc
add
loope
cmp
cmp
xor
xchg
movsl
cmp
aam
cmp
cmp
hlt
pop
cs
dec
xchg
push
cmpsl
jne
popf
mov
mov
mov
cs
shl
inc
stc
adc
into
popl
mov
std
cwtl
jmp
dec
mov
jl
cmp
push
mov
mov
pop
lret
inc
jecxz
cmc
fsubl
xor
add
outsb
in
xor
xor
cli
incb
jb
sbb
arpl
andb
inc
sub
push
cmp
sub
insb
jle
pop
sub
xchg
cmp
mov
cmp
mov
pop
fwait
push
push
cmp
and
popf
pushf
sub
sbb
in
daa
xchg
push
mov
insb
std
cmp
repnz
sbb
pop
cmp
iret
rcr
or
or
mov
stos
jle
sbb
pop
inc
jnp
jg
adc
jecxz
aad
lcall
push
out
xor
push
fs
pusha
in
roll
and
xor
mov
cld
and
sbb
mov
inc
adc
mov
int3
dec
push
sbb
aad
or
ret
sub
cld
dec
mov
test
mov
jp
cmp
xchg
mov
xchg
test
xor
cmp
daa
pop
call
frstor
xchg
lret
sub
jno
dec
pop
out
subb
mov
cmpsl
and
sub
mov
call
int3
in
dec
sbb
jbe
sti
cmpsl
fwait
mov
or
je
mov
les
mov
aad
aam
inc
jns
mov
fld
xor
ljmp
inc
bound
insb
pusha
sub
shll
cmp
xchg
hlt
push
les
out
aad
pop
ss
dec
pop
cmp
lret
into
mov
add
adc
mov
aaa
rorl
xlat
outsb
mov
adc
adc
dec
daa
mov
pop
adc
inc
int3
dec
loope
dec
jne
clc
sbb
jl
jae
cmp
or
cli
push
xchg
lret
notb
pop
push
pusha
scas
popf
frstor
fdivrl
xor
cmp
mov
and
movsb
pop
pop
in
leave
push
cmc
shll
mov
inc
icebp
and
and
shlb
cmp
jnp
scas
jle
call
lret
lret
or
ds
ja
pop
cmpsl
or
iret
data16
test
jb
das
push
pop
ret
lret
cld
xor
push
and
hlt
fdivr
shrl
rorb
clc
dec
cmpsl
jb
icebp
bound
fisubs
mov
or
push
loopne
jecxz
fdivs
lret
xor
jno
mov
jge
aam
lret
ja
test
push
test
xor
stc
add
jnp
pop
pop
jnp
inc
and
stc
jp
jmp
add
int3
loopne
insl
mov
mov
test
andb
data16
cltd
xchg
out
dec
mov
rorb
mov
sub
bswap
test
jmp
dec
cmp
in
loop
sub
push
imul
jb
shrl
repnz
inc
ljmp
outsl
jno
pop
cmp
sbb
cmp
iret
jno
nop
add
xor
mov
in
mov
stos
inc
sub
jbe,pn
mov
test
adc
addr16
pop
or
int3
jecxz
pushf
push
and
stc
mov
push
test
jne
cmpsb
push
faddl
fistpl
iret
mov
sbb
pop
ret
and
repnz
les
es
or
mov
add
int3
or
mulb
fnstenv
dec
arpl
and
sbb
dec
lods
xchg
jp
bound
loop
mov
xchg
pop
pop
rcrb
sbb
sub
mov
inc
cmpb
jno
hlt
fldenv
mov
cli
hlt
sub
in
orl
enter
movsb
loop
mov
mov
int3
loopne
pop
sub
cmp
cmpsl
sbb
outsb
jbe
ret
mov
xor
lods
mov
dec
test
loopne
jp
mov
jbe
test
in
xchg
mov
fistps
push
add
sub
enter
add
and
mov
hlt
or
cmp
jbe
mov
out
mov
rclb
loope
dec
shrb
pop
fbstp
gs
imul
jne
adc
das
leave
mov
adc
mov
dec
xor
sbb
fsubs
sub
hlt
arpl
jnp
mov
sahf
sub
xor
test
and
lds
testb
iret
jb
mov
adc
inc
adc
mov
enter
jb
adc
sbb
les
or
xor
inc
xchg
inc
inc
push
xchg
hlt
push
sbb
call
daa
mov
cmpsl
push
mov
in
adc
mov
aam
xchg
mov
movsb
insb
mov
in
adc
loop
mov
mov
add
pop
or
pop
xor
lahf
pop
mov
sbb
mov
aam
push
add
dec
in
jnp
jo
push
data16
inc
cmp
aam
sbbb
jge
scas
mov
in
popf
js
or
pop
jae
imul
or
inc
sti
lahf
pop
call
mov
add
lods
push
and
mov
scas
push
insl
loopne
pop
jecxz
mov
inc
lock
mull
push
pushf
push
or
or
mov
imul
cmp
mov
pop
adc
loopne
push
xchg
pop
mov
sub
mov
cltd
into
add
mov
xchg
pop
sub
shr
hlt
repnz
lock
pushf
scas
inc
popl
jb
jbe
mov
sub
and
lock
test
and
data16
rcrl
sbbb
ds
fadds
sbb
adc
mov
sbb
mov
or
adc
ja
icebp
and
dec
addr16
ret
int
push
leave
outsb
mov
sbb
push
fsubs
enter
add
movsl
jno,pt
repnz
jle
lds
fcmovnb
in
insl
cmc
cld
xchg
pop
stos
sbb
inc
dec
lret
loope
std
dec
or
and
sub
inc
or
xor
mov
mov
jmp
inc
es
daa
test
mov
sbb
push
push
mov
push
loope
mov
cmp
int
pushl
mov
push
cld
mov
test
icebp
cmp
aas
sbb
jbe
ljmp
aad
fidivrl
filds
rcrl
icebp
sbb
mov
cli
in
js
andb
cli
mov
sub
scas
sub
and
sti
jp
xchg
lods
sbb
pop
mov
and
shrl
scas
dec
mov
and
sbb
push
push
fs
jle
inc
iret
aam
clc
sbb
jmp
cmp
out
sub
lret
cld
out
mov
in
in
jecxz
cltd
adc
mov
add
jne
shrl
pop
dec
out
sbb
jnp
lea
and
into
push
out
inc
adc
jns
jbe
jecxz
or
push
add
and
adc
sub
sub
dec
xor
xor
jp
cmp
into
addr16
push
sub
push
icebp
jp
leave
pusha
sti
movsl
cld
or
into
sbb
and
jecxz
push
fs
nop
popf
jnp
outsl
popa
xor
xchg
mov
sbb
das
addr16
or
xor
sub
fnstenv
cmp
out
testl
lock
out
fcomi
jg
dec
cld
add
filds
movsb
test
nop
mov
mov
addr16
mov
dec
test
mov
shr
xor
loope
bound
pop
test
mov
aaa
stos
push
ljmp
pop
out
je
divb
sub
push
in
mov
push
jecxz
sbb
push
ds
push
pushf
lahf
int3
cmp
or
mov
fildll
jb
repz
mov
push
not
imulb
jne
mov
push
dec
enter
xchg
mov
pusha
inc
cmpsl
test
jge
jmp
das
outsl
or
gs
test
jo
xlat
and
not
mov
ret
pop
or
bound
es
inc
add
adc
xor
iret
xor
fs
mov
xor
push
es
cmp
cltd
or
sub
test
push
ljmp
jno
out
mov
in
les
inc
fwait
movsl
movsl
jle
int
inc
nop
jnp
cmp
mov
lret
lret
pop
cld
insb
int3
arpl
xor
mov
xor
shr
adc
and
arpl
arpl
dec
add
jp
dec
nop
mov
sub
push
and
mov
gs
mov
rcrb
fiadds
scas
das
inc
cmpl
in
stos
sbb
ffree
fsubl
jmp
sti
orb
sarb
fdivrl
mov
call
testb
push
aad
dec
inc
fmuls
pop
sbb
outsl
cmp
jno
xlat
sbb
and
mov
fidivs
fbld
sbb
mov
test
or
lret
sub
mov
jbe
cltd
or
xchg
xchg
pop
hlt
mov
jmp
data16
data16
fisubs
and
aaa
cmpsb
lods
add
xor
ljmp
insl
cmp
dec
sbb
mov
mov
ret
lds
jg
test
fs
rclb
inc
adc
adc
xor
and
push
cli
lods
mov
adc
cmpsb
push
xchg
xlat
dec
dec
ret
inc
dec
shll
push
push
cmp
sti
adc
cmp
std
inc
cltd
sti
stos
inc
popa
inc
push
mov
ret
out
and
int3
cmp
jmp
shrd
mov
or
add
pop
sub
xchg
inc
cmc
mov
push
je
cli
xchg
cwtl
repnz
mov
icebp
shrb
stos
lcall
cmp
stos
xchg
sbb
add
hlt
mov
mov
in
mov
pusha
mov
in
sbb
mov
xchg
cmpsb
imul
jmp
aaa
imul
mov
dec
lock
cltd
lock
cli
icebp
add
jne
push
sarw
insb
add
mov
sub
loop
xor
jne
in
leave
xor
pop
sub
repnz
pop
mov
xchg
dec
pop
push
jno
out
sub
incb
sbb
ret
imul
inc
mov
mov
flds
fdivr
lea
cli
xchg
pop
aaa
mov
test
dec
mov
and
push
mov
mov
and
xchg
cli
push
enter
cmpsb
fstpl
daa
movsb
mov
lahf
and
shl
adcl
daa
mov
scas
out
int
inc
sub
lea
mov
fs
mov
repz
fwait
pop
fs
inc
les
dec
pop
inc
dec
mov
xchg
pop
cmpsl
imul
negb
sub
ja
imulb
pop
inc
dec
pop
nop
push
sbb
push
fwait
hlt
movb
loope
xor
je
cmp
cmp
mov
xchg
add
pop
lahf
jbe
enter
adc
popf
pop
mov
jo
adc
les
xchg
sbb
push
das
dec
test
inc
nop
insl
jae
fbld
jmp
aaa
clc
adc
push
lret
cmp
push
sub
das
daa
test
adc
fidivl
js
jns
out
es
comiss
pop
xchg
adc
hlt
lret
fimuls
mov
cld
mov
cmpxchg
insl
sbb
lret
push
mov
andb
mov
stos
fcmovne
or
nop
push
mov
lcall
lea
sbb
rcrb
adc
mov
push
xor
jns
movsl
in
adc
inc
push
cmp
lret
adc
pop
stc
aas
out
les
xor
cmc
xchg
out
test
jmp
sbb
repz
jo
in
cmp
fldenv
fidivrl
movsl
add
cmp
dec
aad
sar
or
inc
and
mov
mov
fimuls
fcmovu
stos
hlt
lahf
pop
jbe
mov
andb
rcl
push
call
add
mov
jnp
adc
in
mov
pop
ja
mov
enter
fcomi
or
inc
outsb
sub
pop
ds
aad
cltd
push
mov
jp
and
shr
hlt
sbb
xor
xlat
test
int
inc
ss
ss
lcall
fchs
mov
jb
xor
das
sub
xchg
lcall
gs
out
sub
lock
and
xor
cmpl
out
xlat
pop
jecxz
loope
aam
xchg
rorb
xchg
mov
push
cld
and
sbb
faddp
sub
or
add
es
and
pop
lea
pop
js
cmp
shr
mov
sub
test
push
daa
dec
mov
aas
jns
in
and
push
lret
cltd
sbb
or
and
push
mov
je
mov
mov
test
aaa
pop
repz
push
pop
aas
push
jge
dec
pop
inc
jp
sbbl
sbbl
cwtl
cmp
lret
jb
xchg
pop
add
mov
sahf
sub
pop
mov
stos
push
or
and
add
js
fsubrs
xlat
add
pop
push
bswap
idiv
xorb
jge
push
push
addb
dec
xchg
fiaddl
test
shlb
in
mov
or
popf
je
pop
or
inc
sar
fwait
pusha
xchg
push
lods
mov
adc
adcb
subl
pop
sbb
rol
inc
add
jo
cmpsb
or
pop
repnz
jae
outsl
or
movsb
jns
out
ja
sbb
jp
vorps
sbb
mov
pop
lahf
mov
in
faddl
lods
adcb
leave
popa
sub
cmp
add
inc
lock
pop
adc
add
ds
mov
movsl
mov
mov
movsl
adc
add
cwtl
push
aas
xchg
xor
and
out
push
cmc
push
pop
push
lahf
mov
and
inc
cwtl
mov
sbb
mov
push
jae
js
cmp
mov
push
mov
aaa
cmp
hlt
pop
mov
scas
mov
inc
rorb
ss
cmpb
push
data16
mov
imul
ret
mov
and
mov
enter
ss
dec
pop
movsb
jno
mov
rcrl
dec
rolb
clc
gs
jmp
int
into
testl
lcall
cs
stos
add
frstor
push
inc
pop
or
out
mov
cmova
adc
push
repz
xchg
outsb
sbb
jecxz,pt
adc
sbb
xor
pop
cmp
repnz
fldt
orb
push
cli
adc
xchg
repz
or
ja
mov
inc
cmp
sbb
jnp
sub
fidivl
or
call
jge
out
cmpsl
jmp
jle
push
mov
insb
and
push
addr16
ret
push
inc
movsl
lcall
jmp
fs
bound
test
push
test
fisttpll
adcl
dec
and
mov
je
scas
ljmp
pushf
xor
in
ljmp
cltd
aam
sub
call
pop
mov
cmc
and
mov
sbb
fs
xchg
cmp
popf
pop
stos
inc
dec
lods
fwait
xor
cwtl
xchg
imul
xchg
push
inc
inc
xchg
xor
stos
sbb
daa
enter
xor
es
ret
add
xor
push
cmp
or
scas
out
mov
fidivrl
adc
pop
ja
dec
ja
jmp
jo
pusha
cmp
jmp
push
aas
orl
clc
fmul
sbb
faddl
cmpsl
arpl
arpl
add
mov
into
gs
daa
jnp
fs
mov
jnp
lret
repz
add
test
outsl
ret
cmpsb
std
jge
dec
sub
mov
data16
dec
push
inc
inc
in
test
int
fstpl
and
subb
in
cmpsb
xchg
cmpsl
je
adc
and
mov
adc
or
or
aam
sahf
add
inc
and
orl
or
sub
mov
jp
mov
std
jg
xlat
cmp
enter
cli
mov
and
adc
stos
lds
xchg
mov
shll
lock
pop
xor
sbb
lea
in
test
dec
or
cwtl
imul
push
clc
test
sub
xchg
fisubl
js
iret
pop
scas
rclb
cmp
int3
lret
int3
pop
xchg
xor
jbe
leave
loopne
lret
pop
imul
xor
fsts
in
aas
bound
fwait
or
pushf
out
dec
mov
push
out
mov
sbb
lods
and
push
pushw
lret
notl
mov
dec
mov
scas
movsl
sub
xchg
inc
pop
addr16
ja
sbb
inc
insb
addb
orb
ffreep
out
jo
cmc
mov
inc
adc
mov
push
andb
dec
jmp
subb
cwtl
push
dec
jmp
xchg
lcall
push
cld
jmp
out
lods
mov
dec
mov
xchg
cmp
enter
add
or
pop
mov
out
scas
push
adc
or
movl
ret
sub
test
jle
mov
addr16
ljmp
jns
jmp
fsubs
lock
cmp
out
inc
add
cltd
das
add
andb
loope
ss
shlb
call
xchg
sub
mov
shrb
call
daa
inc
outsl
push
xor
test
loopne
inc
popf
xor
sbb
test
mov
ds
popf
or
outsb
adc
push
pop
and
shrb
pusha
or
iret
stos
jno
jbe
add
and
sub
decb
in
inc
add
or
push
popf
sub
or
lret
pop
mov
stos
dec
mov
loopne
sub
push
outsl
add
icebp
ja
dec
test
dec
mov
in
adc
xchg
jae
fbstp
jb
cld
lret
xchg
inc
test
xchg
push
fistl
pop
aaa
movsb
cmp
jle
push
lods
pushf
jl
mov
iret
add
mov
or
dec
aas
aad
jl
jae
jae
loope
pop
dec
clc
mov
adc
hlt
sbb
cmp
outsl
popa
pop
call
cmc
xchg
or
push
fnstcw
lods
mov
xchg
jbe
cmpsl
add
cmpb
cmp
cmp
das
mov
jo
jecxz
xchg
add
mov
mov
pop
mov
shl
clc
shlb
xchg
mov
sbb
mov
fiadds
lret
mov
mov
ret
push
xor
stos
inc
aad
gs
gs
movsl
out
idivb
xlat
sub
enter
clc
xor
nop
ss
dec
sbb
cmp
sbb
leave
insl
cmp
add
out
cmp
add
pop
xchg
lock
jle
icebp
cli
imul
fneni(8087
cld
or
dec
mov
or
inc
pop
das
push
xchg
enter
pushw
mov
sysexit
psubb
and
in
addl
add
es
test
lret
push
loope
lret
fwait
and
mov
in
data16
jmp
testl
pop
ss
sub
xbegin
js
lods
cmp
aad
jle
mov
inc
mov
add
lahf
jne
dec
fcmovne
stos
push
sub
stos
je,pt
lods
xchg
sub
lds
lea
in
xchg
push
stos
inc
je
notb
mov
fisubs
xor
std
lods
jae
dec
cmc
cmp
or
lods
or
sti
subb
mov
lock
cld
jmp
jno
xchg
mov
out
loope
rorl
insl
int
or
dec
jbe
jno
jecxz
dec
lcall
jl
pop
test
shl
add
movsl
mov
movsb
data16
dec
int
cmp
cld
enter
mov
xchg
adc
or
daa
jnp
or
je
test
call
xchg
cmp
xor
and
push
pop
cmp
mov
loop
dec
sub
add
popf
shlb
repz
test
outsb
stos
outsb
pop
mov
adc
outsb
sub
mov
pop
scas
rcr
jp
mov
xchg
shr
lahf
not
or
iret
cmp
inc
addl
mov
cli
adc
dec
leave
pop
mov
dec
shr
cs
fwait
andl
in
bound
mov
mov
clc
cmp
nop
jo
mov
push
sbb
mov
mov
lahf
xchg
push
dec
imul
ljmp
test
int
call
xchg
dec
loop
pop
inc
insl
pop
sbb
test
lds
popa
aad
pop
push
js
mov
or
outsl
mov
pop
movsl
dec
dec
aad
bound
in
mov
and
sub
clc
mov
inc
adc
xor
aad
shl
dec
loope
jge
inc
cmpsb
int
jg
jmp
ss
jecxz
or
mov
cmpsb
mov
movsl
jne
push
jne
and
cmpsb
and
push
pop
sahf
scas
ja
cmp
addr16
out
push
sub
int3
push
and
pop
loop
xor
dec
sbb
in
sub
addb
lret
add
rorl
adc
sbb
sar
inc
lea
mov
adc
jmp
and
fidivrl
mov
jecxz
scas
pop
push
and
bound
cltd
jo
jecxz
mov
jnp
push
jmp
xlat
cmpsl
sarb
mov
mov
or
pusha
mov
sbbl
clc
sbb
fstps
pop
xchg
dec
mov
lods
pop
flds
imul
add
in
pop
and
ret
xchg
imul
mov
xor
stc
lcall
pop
outsl
sub
ss
fdiv
push
rolb
push
xor
lock
add
jl
add
dec
aam
addb
push
ljmp
cmp
ja
pop
xor
inc
push
fdiv
sar
xchg
ret
add
fsts
xchg
stos
cld
xchg
sbb
mov
popf
dec
sbb
sub
imul
cmc
int3
dec
in
ret
es
xor
add
mov
mov
xor
arpl
mov
xchg
popf
nop
mov
jno
stc
sub
std
mov
orb
sti
dec
negb
loop
jno
xor
lds
loop
fldt
negl
xchg
or
cmc
and
xchg
enter
ds
and
fwait
enter
lcall
cs
stos
push
cwtl
mov
push
cmpsl
call
sub
ja
aad
in
and
pop
fmuls
mov
and
cmpsl
es
rol
push
lret
push
add
pop
xor
call
nop
dec
outsl
cmpsb
push
mov
inc
xlat
pop
pop
outsb
test
stos
mov
or
les
mov
add
nop
mov
movsb
mov
mov
sarb
pop
test
push
sahf
mov
into
call
dec
jmp
fdivl
xchg
xchg
xor
bound
mov
out
mov
mov
sbb
in
lds
add
repz
adc
pop
inc
sub
cli
jns
outsl
notl
mov
cmpsl
out
mov
aad
cmp
push
scas
pop
push
js
fisttps
xchg
out
pusha
stc
aam
sbb
insb
cmc
subb
xsha1
cmpsb
dec
dec
mov
push
cmp
popf
hlt
mov
pop
xor
push
xchg
movsb
jl,pt
outsl
mov
ja
in
mov
andb
xchg
bound
jp
movsb
fldenv
mov
rolb
stc
subb
fwait
lods
orl
ljmp
imul
adcb
lret
or
xor
lods
jmp
loopne
ljmp
shll
mov
sub
jno
faddl
add
bound
mov
sub
icebp
add
mov
adc
stos
lods
in
nop
pop
lcall
lods
inc
cmp
cmp
fcmovne
fldcw
movsb
orl
mov
jge
pop
pusha
jl
cmp
xchg
insl
into
cmp
sar
adc
push
imul
sub
bnd
aas
push
mov
pop
idivb
pop
jge
add
cmc
scas
jns
mov
stos
lahf
add
aad
gs
push
fs
mov
sti
test
lret
out
and
jl
push
rcrb
insl
add
loope
mov
push
int3
push
push
jb
push
mov
jo
adcl
push
xor
mov
cmc
in
div
lret
addl
iret
lock
hlt
add
sbb
mov
cmp
pop
nop
ljmp
rol
push
ret
pop
jl
imul
and
insl
add
dec
dec
les
sbb
lahf
es
shl
adc
mov
jnp
mov
sti
fwait
add
scas
adc
sub
cmpsl
mov
sahf
gs
fucomip
mov
sti
push
jmp
cmc
cwtl
mov
sub
inc
in
xchg
jle
jp
add
test
jl
scas
jne
xor
lea
push
adc
adc
test
lea
sbb
addr16
in
jae
mov
enter
rcrl
fidivs
sbb
or
lea
mov
fwait
repz
mov
nop
in
xchg
les
pop
lods
iret
pop
ret
or
sub
add
jo
or
shr
and
ds
repz
push
xchg
movsb
mov
sbb
int3
xchg
inc
and
xchg
out
lds
push
dec
enter
cmp
cmpsl
cmp
xor
rcrl
ljmp
loop
je
lahf
movsl
mov
lods
inc
notb
icebp
dec
and
repz
xchg
imul
and
or
repnz
out
data16
jo
pushl
into
adc
ret
mov
push
or
dec
scas
xchg
orl
lea
arpl
cs
fdivrs
lods
fstl
xchg
shll
push
outsb
or
adc
ja
and
inc
dec
fbstp
cmp
cwtl
shl
mov
cmpsl
push
inc
fdivrp
outsl
lcall
gs
pushf
iret
push
loopne
mov
pusha
mov
mov
push
adc
ss
addr16
cmpsl
inc
mov
push
add
sub
repz
jnp
push
xchg
test
or
pusha
fistl
movsb
scas
testl
scas
pop
mov
jmp
dec
push
jp
pop
jecxz
adc
sub
mov
mov
adc
inc
sbb
popa
clc
pop
in
lret
pushf
cwtl
inc
jg
jnp
cld
xchg
xorl
mov
mov
in
push
mov
mov
ret
push
push
mov
pop
mov
jg
jae
mov
adc
pop
inc
mov
xchg
push
popa
lods
test
jbe
popa
stc
subl
rcll
ss
imul
lods
ss
test
dec
push
sbb
mov
repz
pop
icebp
shr
and
push
imul
xlat
and
lea
or
xchg
and
pop
sub
sbb
dec
andb
pop
mov
repz
fldt
lret
bound
shll
mov
cmp
ja
push
xchg
shl
je
dec
cs
mov
cli
repnz
and
sub
sub
in
push
cs
jns
push
jne
mov
dec
lods
lods
jge
jbe
sub
cld
xchg
jg
leave
xchg
or
aaa
add
sub
sbb
shld
push
mov
pop
inc
rclb
cmpsl
jnp
fisubrs
cmp
ror
inc
enter
lcall
ljmp
pop
xchg
hlt
mov
or
test
jbe
int3
fidivrs
push
scas
mov
sbb
xchg
out
lea
mov
loop
fidivrs
data16
mov
xchg
sbb
dec
mov
cmp
inc
push
mov
fs
imul
ss
sub
je
sahf
sysret
aam
stc
lods
call
cmp
cmp
fsubrp
aad
lcall
cwtl
je
fldt
lret
and
mov
push
jne
jge
dec
mov
test
ret
imul
cltd
mov
push
ss
insl
add
xor
inc
cmpsl
xchg
mov
ja,pn
pusha
ret
mov
or
add
inc
and
je
cmp
or
rol
insb
mov
sbb
fs
aam
scas
pop
testl
aam
xor
stos
pop
sbb
ja
aas
int
pop
jns
out
pop
and
out
xor
pushf
dec
pop
iret
jle
and
push
fsubs
in
roll
inc
in
movsl
stos
es
xchg
mov
out
inc
int
andl
dec
jae
mov
mov
mov
rcrb
mov
pop
sbb
mov
cmp
iret
jmp
lea
jo
mov
adc
cmp
loope
fwait
mov
jmp
enter
ljmp
push
mov
bound
flds
cmpl
pop
outsb
or
cs
in
xor
push
lds
imul
adc
cld
sub
sbbb
rcl
dec
loope
push
aad
sahf
dec
push
push
mov
jge
inc
mov
inc
lods
ljmp
frstor
aaa
pop
cmp
pop
movsb
jl
jnp
or
cmp
sbb
jne
in
fcmovb
mov
sbb
enter
mov
popa
cmp
jle
push
pop
jl
add
orl
out
adc
adc
xor
mov
aad
pop
ss
sub
daa
clc
sub
dec
mov
dec
cmp
and
out
shrb
mov
pop
scas
mov
jbe
fsubl
ds
rcrl
lahf
pop
jns
pop
xchg
cs
stc
js
call
int
xchg
aaa
or
dec
and
mov
fidivs
ja
xor
add
xchg
mov
and
sahf
push
js
test
mov
test
stos
jg
and
cmpsb
push
into
mov
cmp
dec
xchg
xchg
ja
pop
orl
jle
jp
push
in
mov
js
xor
xor
lret
fwait
mov
cmp
shlb
test
push
pop
repz
je
mov
or
sbb
test
test
mov
add
test
jno
push
sbb
mov
out
nop
xchg
mov
push
adc
imul
xor
mov
cmp
adc
push
jg
adc
cmp
xchg
cmp
cs
rolb
sub
push
mov
mov
ss
fcmove
fs
call
push
lods
mov
xchg
std
dec
scas
ds
stos
mov
and
stos
data16
ficoml
push
pop
cmp
cwtl
fildl
rcrl
cwtl
in
mov
fbstp
or
pusha
mov
and
mov
mov
adc
shlb
pop
adc
mov
adc
mov
arpl
pusha
movsb
xchg
into
and
mov
cmpsl
aad
dec
das
mov
or
imul
sub
add
ja
aas
jle
mov
shll
sub
shrb
dec
out
cli
adc
mov
jmp
stos
sbb
jno
adc
sub
scas
popf
jbe
dec
aam
repnz
and
adc
inc
and
ret
or
movsl
js
mov
bound
inc
pop
iret
push
mov
push
lahf
inc
int
add
aad
cmp
sti
dec
movsl
xchg
dec
mov
data16
jbe
iret
sub
pop
fildl
aad
fidivs
adc
push
sub
sub
sub
cmpb
mov
orb
add
scas
arpl
stos
inc
add
mov
insb
and
xchg
mov
mov
sahf
arpl
lcall
pop
mov
push
sahf
and
arpl
and
cli
or
std
es
cmp
adcb
add
xor
test
addl
ret
movsb
and
in
testl
lahf
fstpl
in
lret
das
aaa
xchg
and
popf
jmp
xchg
les
sahf
xor
fcmovnb
mov
loop
mov
pusha
xchg
add
xor
push
sarl
insb
jle
mov
mov
and
push
adc
or
sbb
adc
jnp
shlb
inc
and
rclb
pop
cmp
push
inc
dec
mov
test
ljmp
stc
nop
mov
fbstp
pop
push
add
gs
negb
movsl
in
in
jg
ret
enter
push
sbb
mov
mov
inc
add
int
fistpl
xor
push
xchg
dec
test
push
push
sub
or
lock
popf
pusha
or
in
test
mov
mov
jle
add
pop
xor
imul
dec
outsl
aaa
hlt
mov
pop
jns
data16
adc
inc
cmp
jp
mov
cmovg
out
cmpsb
lock
in
lds
jns
into
lahf
dec
jecxz
out
mov
movsl
sbbb
shrb
shr
or
scas
lock
lods
xor
jl
test
scas
jge
popf
mov
lahf
jge
push
sbb
shlw
testl
sbb
imulb
jo
notb
int
aam
sub
lret
and
push
push
popf
jae
xchg
push
montmul
cmpsb
xchg
jae
lret
cs
in
xor
je
inc
push
in
jno
ret
add
sbbb
or
ljmp
mov
cmp
lods
rolb
and
xchg
sub
imul
leave
ljmp
sub
mov
call
popf
shll
or
arpl
insl
mov
fisttps
pop
outsb
iret
mov
movsb
inc
dec
push
mov
mov
sub
inc
sbb
push
cmp
adc
repnz
or
cmp
push
jo
imul
ljmp
xor
in
push
out
cmpsl
mov
xor
fstl
fiaddl
xor
bound
loopne
cmovae
inc
xchg
mov
popa
jg
jno
lods
mov
stos
xor
mov
rcll
mov
mov
call
test
imul
iret
iret
and
push
mov
in
lret
sub
test
leave
pop
ljmp
mov
imul
push
mov
cmp
cmp
mov
jne
mov
jae
and
pop
movsb
repnz
fdivp
mov
push
cmpsb
lods
lret
inc
stos
jno
call
mov
dec
out
add
insl
mov
sar
adc
xchg
pop
rcrl
test
fwait
or
das
aad
popa
and
add
andl
cltd
mov
out
popa
cmpb
mov
les
add
mov
sub
hlt
pop
andb
sbb
push
sbb
in
test
jno
pop
cld
adcb
pop
or
sbbl
addl
pop
and
out
sbb
out
test
mov
pusha
clc
push
outsb
ret
xchg
sub
cmp
adc
sub
fdiv
das
mov
hlt
call
fnstsw
push
xchg
hlt
lock
aad
ficompl
adc
jecxz
repz
jmp
pop
mov
mov
dec
sub
dec
or
xchg
cli
fcompl
les
push
dec
mov
xchg
xor
xlat
mov
in
aaa
add
cwtl
and
mov
out
inc
insb
addb
aad
xchg
aas
pop
jecxz
mov
lods
cmp
sub
mov
pusha
cmpsl
pop
test
or
jle
xorb
mov
mov
shr
and
ficomps
fdivl
cmp
ja
enter
mov
xchg
mov
popf
push
cwtl
mov
shl
add
arpl
movups
into
popf
xor
sbb
dec
inc
push
cmp
aas
outsb
sbbl
js
dec
movsb
ficomps
mov
pop
idivb
jge
cmp
jae
xor
popf
std
push
inc
loop
cltd
sbb
xor
aaa
stos
js
mov
add
rolb
or
mov
fistpll
les
movsb
test
stos
adc
jp
add
sub
in
pop
xor
xchg
mov
mov
repz
pop
in
repz
test
lret
fsubr
int3
imul
leave
sub
sti
test
dec
in
aad
xorb
mov
out
inc
and
add
call
cmp
push
push
and
pop
mov
mov
mov
nop
or
dec
stos
jne
stos
cmp
adc
rol
popa
lods
aam
dec
pop
xor
jmp
ret
je
add
mov
add
sti
out
mov
jbe
call
int3
mov
cli
pop
movsb
pop
movzbl
push
jmp
adc
xor
idivb
es
rcl
inc
dec
xchg
clc
or
es
sub
call
loop
and
xchg
jno
imul
or
inc
cld
cwtl
aad
cmp
mov
scas
jno
into
mov
cmp
add
cmp
fdivrs
jo
addl
add
push
mov
push
test
cmpsb
loope,pt
pop
js
das
insb
dec
mov
stos
mov
pop
xchg
xlat
mov
cmp
mov
push
sbbb
jl
pop
repnz
pop
cmp
dec
jnp
ret
test
push
mov
or
inc
xchg
mov
loopne
or
dec
int
scas
jle
lret
push
out
daa
out
inc
sahf
and
sti
jnp
mov
addb
mov
pop
lret
out
les
dec
jns
cmp
jge
pop
ljmp
cmp
push
cltd
cmpsl
sub
hlt
xchg
mov
add
sahf
insb
jnp
dec
inc
scas
repnz
push
iret
cmp
pop
fwait
ret
xchg
push
cmp
dec
loopne
loopne
dec
push
mov
sti
gs
sub
mov
into
imul
and
dec
pusha
jg
iret
mov
sbb
out
lahf
lret
mov
jb
jge
dec
dec
cmpsb
sahf
arpl
into
shrl
xor
data16
xchg
icebp
int3
outsl
adcl
mov
and
lds
cltd
and
loopew
shll
mov
push
out
ds
pop
fsubrp
push
repnz
es
shlb
pop
cmc
inc
or
hlt
xor
in
lock
push
push
test
jne
loop
dec
jge
jp
movsb
cld
cmc
fnstcw
enter
mov
push
iret
cmp
jo
jle
pop
jmp
pcmpgtw
adc
mov
mov
imul
fistpll
aad
inc
ret
adc
daa
push
lea
xor
scas
daa
pop
or
mov
pop
inc
and
int3
add
dec
and
mov
pop
iret
insb
mov
or
inc
ficoms
cs
in
ds
mov
call
push
dec
jecxz
lods
xor
das
push
loopne
test
dec
and
jns
leave
inc
fdivl
mov
xor
fistl
das
push
cmp
mov
jae
movsb
loope
and
fnstcw
loop
xchg
jae
sub
in
aam
jmp
add
cmp
shlb
mov
shlb
cmp
test
movsb
cmp
jb
dec
jnp
mov
flds
stos
lods
mov
xlat
adc
pop
nopl
or
insb
jle
add
mov
adcb
pop
lahf
notl
bound
les
scas
cli
sbb
shrl
push
xchg
les
divb
xchg
ja
jl
scas
dec
jmp
and
pop
callw
das
cmp
ljmp
mov
ljmp
mov
mov
push
jle
push
call
inc
xchg
outsl
fcomi
mov
fldcw
mov
adc
push
fimuls
adc
test
sub
and
shrb
and
scas
in
iret
cmp
cmp
pushf
pop
push
in
fnstsw
pop
lock
fistpll
idivl
push
adcb
jb
cmp
xchg
pop
and
mov
aas
dec
shll
jmp
decb
cltd
jp
js
lods
das
andb
andl
jle
jo
mov
push
xor
fcmovne
and
hlt
icebp
enter
scas
shrl
pop
fstps
sti
std
inc
xchg
pop
iret
and
xor
push
pop
int
call
aaa
sub
icebp
and
adc
fidivs
movsb
mov
push
pop
js
inc
call
mov
and
movb
xor
xchg
pop
pop
adcl
imul
mov
mov
lods
rcrl
loope
test
shrb
aad
mov
xchg
je
mov
jmp
ds
ret
gs
mov
and
mov
cli
and
loop
mov
adc
sbb
cmp
push
mov
pop
xor
int
jnp
push
cmp
or
scas
std
stos
aad
pop
xor
loope
cld
or
mov
repnz
popl
mov
jmp
pop
xor
push
gs
dec
mov
clc
cmp
mov
mov
push
mov
jo
insl
cmp
je
mov
loopne
adc
jg
mov
jle
jno
xchg
push
jmp
lds
pop
into
and
mov
mov
pop
push
add
pusha
mov
sub
dec
out
cwtl
push
mov
push
push
jne
mov
mov
mov
aaa
pop
scas
test
bound
addl
jg
jno
cmp
orb
pop
adcl
pop
or
sub
int
pop
cwtl
jae
mov
fisubs
sub
test
icebp
ret
lods
jge
xchg
repz
sahf
je
fidivrs
mov
ss
mov
cmpsl
sarb
bound
inc
sti
stos
mov
stos
jecxz
pop
into
pop
notb
jmp
add
dec
jle
cmc
fwait
adcb
ss
aam
inc
push
lock
leave
enter
ret
push
out
loop
or
ret
insb
mov
inc
xor
mov
adc
pop
inc
sbb
shrl
jg
or
popa
sbb
lds
jns
sbb
push
cs
sub
ljmp
lock
das
sub
imul
stos
dec
jmp
into
push
lods
sbb
fwait
pop
sbb
fldcw
adc
cmp
insb
fidivl
jae
mov
mov
je
mov
adcl
pop
or
adc
lods
push
mulb
add
inc
movsl
or
insb
mov
iret
lahf
push
sbb
cmp
outsb
sbb
popa
inc
int
imul
xchg
xor
xchg
pop
cltd
mov
out
xor
loop
mov
je
dec
push
dec
ds
imul
sbb
push
jae
jbe
insb
es
imul
jb
aaa
movsl
iret
mov
mov
loopne
out
sub
jae
imul
jge
mov
adc
add
mov
sbb
xlat
cmc
dec
nop
daa
mov
cmpsb
mov
subb
jbe
and
sbb
adc
test
mov
pop
test
push
fadds
xor
inc
push
out
add
mov
push
out
jp
leave
inc
cs
fistps
jns
lcall
pop
and
or
adc
mov
jne
jle
mov
push
adc
xchg
sbb
cmpsb
fildll
std
pusha
stos
out
loopne
ss
cmp
add
imul
scas
pop
in
mov
dec
aaa
out
mov
in
sbb
movsb
xchg
sub
ja
mov
push
lea
inc
rorl
sbb
subl
imul
aam
pop
lcall
jne
adcb
push
aaa
cld
imul
lret
mov
les
pop
mov
xor
cli
xchg
mov
and
jl
hlt
inc
cmp
pop
lahf
dec
pop
or
add
in
jbe
jo
pop
lods
addl
push
loope
stos
dec
sub
mov
pop
nop
xor
and
adc
add
mov
cld
adc
push
loope
xchg
sub
jnp
mov
fcmove
xlat
push
loopne
imul
fucom
push
cmc
sub
inc
cmpsl
jno
mov
or
stc
sbb
jnp
outsb
sti
jle
cmp
mov
sahf
push
scas
ret
inc
ss
jmp
insl
pop
push
ljmp
inc
mov
outsb
xor
dec
repnz
sub
cmp
or
adc
test
inc
mov
inc
andl
xor
adc
pop
adc
add
lods
jl
jae
dec
movsl
pop
icebp
mov
test
fsub
stc
pop
insl
cltd
gs
xchg
xor
push
inc
pop
adc
jbe
rolb
adc
and
dec
mov
lea
dec
out
rol
push
insl
cmp
les
mov
xchg
dec
fisubl
out
sti
es
sub
mov
mov
and
xor
or
out
out
or
and
dec
xchg
inc
inc
scas
loope
dec
push
jno
sbb
cwtl
sbb
jae
cmpsl
dec
dec
pop
and
push
dec
dec
push
insl
lds
outsl
mov
dec
int
pop
push
orl
pop
scas
fstl
jl
out
adc
push
mov
andb
mov
jecxz
cmc
lcall
sbb
dec
add
bound
popl
fs
mov
push
adc
pop
lret
mov
dec
cmp
or
mov
pop
adc
push
xchg
add
and
mov
icebp
fsub
bound
gs
sub
lret
imul
dec
dec
loope
add
insb
js
clc
inc
repnz
inc
aaa
das
subb
or
cmc
xor
sarb
pop
push
in
lea
into
mov
ret
clc
incb
sbb
xchg
pop
scas
pop
pop
adc
pop
inc
dec
or
cmp
pushf
or
cs
dec
imul
inc
out
lds
leave
shlb
bound
dec
pushf
inc
xchg
xchg
stos
fs
push
fldenv
mov
inc
fwait
inc
lods
mov
outsb
mov
nop
dec
in
es
jp
hlt
mov
pop
pop
shll
pop
pop
dec
mov
sub
adc
fstpt
xchg
mov
dec
in
jmp
pop
cmpl
sbb
mov
push
sub
test
daa
outsl
mov
sbb
sub
or
mov
adc
scas
add
or
jmp
insb
fcomip
xor
pop
rorb
xchg
xchg
pop
dec
loop
hlt
push
mov
sbb
andb
hlt
ss
ss
sub
mov
add
std
pop
dec
loope
dec
aas
push
leave
fcmove
fnstsw
lcall
stos
push
call
dec
test
insb
jb
dec
fcoms
mov
mov
pop
cmp
and
inc
shrb
or
pop
mov
icebp
subb
mov
mov
or
lock
aaa
pusha
sub
std
and
enter
cmp
xlat
lock
sbb
loopne
push
lods
adc
fs
pop
addr16
stos
mov
jns
fcoms
xor
movsb
mov
adc
in
push
fwait
or
sbb
cmp
call
lock
push
test
fldpi
ret
arpl
cwtl
das
mov
insl
jge
pop
mov
pop
xor
pop
xchg
data16
xchg
mov
adcl
test
jnp
cmp
xor
pop
xchg
mov
jmp
add
jne
mov
add
push
test
daa
lret
cmp
insl
pop
shlb
mov
mov
push
je
test
mov
mov
cld
les
into
sbb
jae
rcl
or
dec
inc
stos
dec
cmp
fldt
push
push
mov
xor
and
sti
push
xor
or
xor
out
cmp
or
sub
out
lock
or
xchg
mov
out
push
neg
xchg
xor
enter
mov
xchg
and
enter
insb
or
outsl
inc
sub
aad
mov
arpl
jo
inc
insb
and
into
stos
and
xchg
std
mov
leave
fistpll
sub
and
addr16
test
mov
mov
lret
xchg
sbb
xchg
push
dec
arpl
jmp
push
inc
ljmp
mov
testl
dec
dec
outsl
daa
in
inc
mov
fdivr
aam
gs
jecxz
mov
movsb
push
int3
std
jmp
repnz
xchg
dec
cs
fisubrs
je
scas
je
adc
push
fwait
cmpb
adc
adc
xchg
stos
nop
jge
mov
call
mov
stos
adc
test
leave
int
leave
in
mov
lods
cmp
daa
xor
and
cli
mov
mov
add
cli
add
sbbb
push
sub
iret
inc
popa
and
and
cs
outsl
push
ret
dec
mov
xor
addr16
mov
sti
clc
push
jge
insb
mov
sub
dec
lea
ljmp
insb
add
pushf
cmp
push
or
jle
in
inc
mov
fsubrs
push
pop
mov
pop
stos
push
lret
int
push
shrl
and
and
int3
aad
push
jno
mov
inc
cmpsb
rcrb
pusha
ljmp
mov
imul
inc
mov
jns
inc
test
xor
popf
inc
inc
test
mov
shlb
jb
mov
add
inc
mov
lods
or
stc
sub
clc
mov
imulb
xlat
sub
lcall
cmp
adc
and
bndstx
rcrl
xorl
xchg
insl
fsubrs
addr16
scas
xor
sub
inc
push
inc
inc
add
pop
test
mov
jge
mov
push
adcl
rolb
xchg
inc
ljmp
icebp
addl
dec
outsl
loop
add
or
xchg
adc
push
inc
mov
push
daa
and
mov
dec
popf
or
add
data16
sbb
jl
mov
mov
insl
mov
pop
jb
sub
add
cwtl
mov
inc
jbe
pusha
and
leavew
pusha
cwtl
push
movsb
mov
pop
imul
pop
test
pop
insl
mov
sub
jg
mov
leave
and
dec
cmpsl
jge,pt
jle
pop
sahf
mov
dec
in
iret
push
lea
in
sub
mov
cmpsb
stos
in
das
addr16
sti
aad
data16
ja
out
test
mov
pusha
repz
dec
aaa
divl
cld
leave
js
popl
inc
test
rorb
push
and
test
js
fnstsw
xlat
test
in
clc
stc
xor
arpl
pop
clc
shlb
and
dec
push
sub
mov
and
push
pop
ja
add
clc
dec
jl
pushf
std
jbe
or
aad
sub
xor
or
cmp
hlt
icebp
addl
add
or
aam
mov
cmp
negl
out
ret
sbb
jno,pn
cmp
repz
pop
in
popf
adc
jp
pop
daa
shlb
out
mov
lahf
jno
gs
cmpsb
lock
dec
adc
call
popf
sub
cmc
pop
mov
cmp
or
xchg
pop
lcall
aam
pop
and
push
jmp
lods
orl
jp
mov
xlat
add
lea
scas
fcmovbe
mov
pusha
dec
cmpsb
xchg
adc
out
cli
mov
ss
pop
cmc
std
pop
imul
mov
push
add
in
xor
mov
ljmp
popf
mov
icebp
xchg
test
hlt
mov
xor
shr
xchg
hlt
dec
and
cwtl
int3
adc
stos
inc
jnp
stc
inc
mov
popa
sub
xlat
scas
lds
insb
rclb
adc
je
jp
push
fsubs
ss
jp
push
popf
dec
pop
inc
or
pop
gs
dec
fwait
shr
xchg
and
lcall
xchg
mov
pop
mov
stc
pop
stos
sub
cwtl
test
sbb
popf
dec
push
mov
mov
jge
es
jg
inc
dec
pop
imul
mov
jge
sbb
and
jge
xlat
cld
inc
pop
or
cmpsb
insb
ds
jb
scas
xchg
cld
stc
scas
stos
sbb
sbb
lea
jg
and
push
jae
loopne
ja
lret
scas
mov
and
cmp
mov
xor
ret
xchg
adc
mov
or
cmp
out
sbb
xchg
pop
fsubs
and
xchg
jle
xor
shr
and
pushf
test
fidivs
push
ljmp
mov
out
nop
out
inc
dec
xor
inc
or
test
or
mov
sarl
pop
insl
lea
call
sbb
sbb
outsl
outsb
jl
dec
cmp
arpl
mov
dec
cmpsb
lock
jmp
mov
xchg
pop
outsl
pop
stc
push
pop
xchg
cmp
pop
xor
mov
push
fildll
ds
cs
push
mov
mov
push
mov
outsb
dec
dec
ret
outsl
test
mov
pop
pop
jo
fdivrp
inc
mov
push
fwait
push
push
pusha
sub
fcoms
cmp
icebp
outsb
pop
xor
pop
in
jne
or
xor
adc
enter
inc
ficomps
xor
cli
popa
and
in
cmp
sbb
pushf
es
adc
cwtl
sbbl
incl
mov
push
fstpl
sub
mov
adc
jl
mov
dec
push
cmpsl
cmpps
dec
cmc
iret
jne
in
popf
loop
orl
and
rorl
mov
call
xchg
or
jl
mov
sbb
push
and
rol
cld
xor
or
xor
lret
push
inc
sub
loope
iret
push
cwtl
jne
dec
sbb
addb
adc
inc
pop
js
cmp
mov
jns
or
adc
test
mov
andl
imul
insl
stos
cmp
insl
aaa
pop
les
xchg
test
jmp
ret
sbb
in
sbb
imul
test
in
mov
pop
or
sub
fistps
pop
jmp
out
xchg
jmp
enter
test
sbb
dec
sbbl
dec
imul
je
js
push
mov
cmpsb
shll
push
repz
cld
jmp
out
neg
cld
mov
jge
pop
jle
inc
cmp
push
stc
jg
jmp
sub
and
mov
stc
test
jmp
fildl
lcall
inc
je
popa
fildll
xor
rcrb
out
inc
js
cld
or
jo
cmp
adcl
adc
std
pop
jno
pop
ret
jg
bound
cmc
sbb
mov
cmp
sbb
out
push
in
shrb
gs
repz
sub
aas
testl
xor
sub
xor
cmp
cmpl
fisttps
mov
xchg
enter
inc
and
fs
outsl
daa
pop
xor
inc
icebp
leave
stc
mov
das
insl
popa
jne
ja
or
dec
mov
int
cmp
je
jae
out
xor
cwtl
in
js
mov
sarb
mov
cmp
fistps
jno
lds
test
push
push
xchg
outsb
mov
sub
xlat
mov
push
or
outsb
jle
dec
cmp
xchg
jecxz
push
sti
std
fldl
mov
xchg
or
cltd
addb
mov
imul
sbb
dec
mov
mov
sahf
push
cmp
xchg
pop
mov
sub
out
in
dec
pop
bndldx
imul
mov
add
xor
aad
cmpsb
lea
loopne
mov
clc
cmc
add
cmp
adc
pop
push
mov
mov
push
rolb
int
mov
jne
cmpsl
inc
push
and
lods
pop
add
dec
xchg
out
cmp
aad
mov
jmp
push
sarl
cmpsl
shrb
jno
loopne
repnz
xchg
add
jg
popf
sti
mov
cli
test
movsl
into
mov
fs
test
in
nop
pop
and
xor
inc
cmp
xor
xchg
mov
iret
push
cwtl
sti
fwait
mov
into
jne
leave
xor
jae
adc
mov
cmp
pop
std
xchg
xor
sti
pop
outsb
imul
test
jo
nop
ss
insb
pop
xor
js
pop
test
jb
imul
mov
orb
mov
mov
roll
cltd
add
fcoms
xchg
and
xchg
mov
mov
stos
enter
mov
fsub
jmp
lods
cmp
pop
aam
mov
repnz
subl
add
and
push
dec
arpl
sub
lret
or
mov
inc
arpl
mov
push
mov
push
sbb
pop
mov
sub
out
push
jmp
fnsave
push
addr16
rclb
or
or
in
loope
cmp
adc
rorl
shlb
and
cmp
stc
leave
xor
das
int
mov
mov
movsl
in
stos
subb
pop
outsl
daa
addb
cwtl
push
lock
or
test
fwait
push
outsl
out
lods
mov
hlt
cli
or
sub
insl
sub
and
pop
cmpsb
fisubrl
cmp
scas
jp
mov
cmpsb
dec
cmp
stc
fstl
dec
push
daa
xchg
inc
shrl
and
imul
jbe
or
sti
pop
push
fwait
sti
cltd
fldl
sub
notl
das
mov
and
fs
xor
test
or
dec
out
jecxz
test
jnp
hlt
adc
lret
lds
les
push
es
mov
fldenv
xchg
dec
xor
jo
dec
fisubrl
mov
push
jge
xchg
cs
shrb
and
shlb
arpl
add
xlat
aam
dec
in
insb
cmpsl
mov
or
or
loope
aam
scas
mov
mov
sbbl
decl
mov
pushf
hlt
xchg
xorl
es
jg
ret
in
jl
call
cli
pop
and
pop
sbb
xor
jmp
push
xchg
inc
leave
or
or
rolb
sbb
insb
inc
dec
ret
mov
bound
lods
sbbl
cli
repnz
daa
cmpl
xor
mov
push
hlt
xchg
flds
iret
adc
je
adc
lret
popa
cmp
cli
adc
adc
or
cwtl
cli
dec
rcrl
pop
jns
jns
ret
or
push
jns
sbbl
pop
pop
mov
sbb
dec
ret
cld
cmp
cmpsl
pop
inc
mov
out
cmp
sbbb
adc
jl
hlt
std
pop
aam
jbe
adc
xor
adc
insb
and
push
or
cmpsl
sbb
xchg
mov
shll
add
loopne
lcall
or
or
fnstenv
fwait
bound
mov
outsl
xor
ss
test
sahf
xor
adc
sbb
in
adc
div
imul
mov
push
in
mov
or
aas
cmp
cmp
pop
idivb
xchg
and
dec
lods
sbb
mov
stos
mov
jl
cmp
call
adc
stc
or
lods
cmp
mov
cltd
jo
ret
xchg
loope
addr16
xchg
int
stc
sub
aas
push
mov
jp
xchg
pusha
das
js
lahf
out
inc
lods
push
mov
aad
or
adc
inc
cmp
sbbb
stos
push
sbb
fcom
ret
cld
adc
jmp
or
movsb
push
int
call
pusha
or
pop
jae
cmp
mov
push
cmpsl
fisubl
aam
mov
adc
mov
arpl
in
enter
push
jle
jae
or
cld
push
cmp
push
sub
dec
xchg
dec
clc
xor
sub
xchg
fsts
testl
pop
mov
mov
popa
andl
and
adc
jmp
and
jb
add
mov
dec
push
insb
scas
fucomip
shl
jge
mov
cmpsl
imul
lahf
arpl
je
xchg
adc
and
out
jo
pop
scas
xchg
cwtl
out
mov
pop
cld
cmc
daa
outsl
cmp
sbb
inc
imul
mov
idiv
inc
add
xchg
inc
scas
out
dec
scas
pop
mov
test
js
lcall
mov
jo
and
movsl
inc
cmc
in
mov
cs
shr
jo
push
dec
and
and
mov
ss
and
jne
xor
sarb
sahf
xor
fnstsw
cmp
mov
cmc
ret
jbe
xor
jnp
test
cwtl
xchg
cltd
add
lcall
out
dec
rcr
and
pop
out
test
sti
sub
int
mov
sbb
mov
dec
and
test
and
fistl
shrl
pop
imul
loop
movsl
xor
aad
popa
daa
out
sub
lock
pop
mov
test
cli
and
cmp
jne
orb
xchg
jecxz
jb
adc
rcl
xchg
stos
push
fnstenv
dec
inc
fstpt
negl
pop
push
arpl
lret
int
in
in
subl
xor
cmpsb
ljmp
lock
loopne
push
js
adc
jge
xchg
mov
bound
inc
xor
gs
stos
jnp
xchg
addr16
sbb
into
xchg
outsl
ret
int3
jb
dec
into
gs
and
notb
in
adc
jbe
lea
push
int3
fiadds
ret
sbb
or
scas
xchg
cmpl
arpl
lcall
mov
xor
xchg
call
adc
jle
lods
dec
sbb
nop
mov
jb
cmp
aad
mov
arpl
dec
sbb
adc
fldl
pop
sub
sbb
leave
ss
insl
xor
ljmp
movsb
in
cmp
jnp
cmp
cmc
test
add
stos
sub
ljmp
inc
add
jne
jmp
or
adc
cmp
scas
out
cmp
sbb
jmp
mov
jp
or
pop
in
mov
pop
movsl
mov
inc
in
jl
mov
ret
ds
clc
pop
pop
inc
pop
cmp
aam
sub
arpl
arpl
js
and
mov
or
sbb
or
imul
loop
mov
lahf
rcrb
movsl
lret
jnp
into
adc
sub
dec
inc
xorl
mov
insl
lock
pop
or
push
jo
push
pushf
cmpb
test
mov
push
insl
sub
stos
and
jb
outsl
cld
jb
mov
in
mov
xchg
stos
cmp
repz
add
pop
lahf
mov
pop
mov
sbb
dec
sbb
inc
or
mov
loopne
and
adc
cmpsl
jp,pt
jle
lods
xor
add
hlt
xchg
frstor
pusha
enter
mov
push
pusha
jecxz
sbb
roll
bound
push
mov
shl
jg
test
insl
jmp
loope
divl
cld
push
mov
or
pop
negb
cmp
testb
sbb
and
pop
jmp
in
jae
repnz
adcb
sarl
xor
jnp
mov
mov
mov
add
jp
or
fs
jnp
add
rorb
ljmp
mov
xlat
dec
sub
sbb
or
or
jae
outsl
imul
cmp
and
loopne
fidivrl
push
pop
imul
ret
push
mov
subps
int
push
jae
leave
xlat
rcll
call
fistpll
loopne
xor
out
xchg
push
out
xor
decl
mov
sahf
or
jecxz
adc
cld
dec
jbe
and
iret
cld
popa
and
arpl
fmull
xchg
xchg
cmc
jnp
mov
arpl
rclb
sub
inc
cmc
outsb
fidivrs
pop
mov
push
fadds
mov
cmp
inc
gs
movsb
jecxz
adc
aam
jnp
ljmp
xor
shl
faddl
adc
stos
push
inc
jl
addb
adc
pop
in
fdivp
in
sub
or
addr16
leave
test
xor
mov
ljmp
fidivrs
fwait
and
mov
xchg
dec
jecxz
dec
mov
cmp
xor
mov
bnd
xlat
push
out
cs
outsl
sub
mov
shrl
sub
push
mov
cmc
mov
dec
loope
aam
pusha
out
lcall
push
imul
in
xor
pushf
cmp
mov
imul
jae
addr16
cmp
mov
and
repz
icebp
les
das
repz
orl
add
out
push
push
fidivrs
jle
mov
pop
pop
mov
pop
test
adc
fdivrl
cld
xchg
xor
sbbl
jecxz
adc
pusha
add
or
and
pop
nop
mov
cmpb
push
sub
dec
aaa
adc
mov
push
mov
addr16
mov
loopne
sbb
pop
mov
xchg
mov
inc
int3
or
cmp
daa
cmp
push
in
cwtl
insl
sbbl
and
imul
mov
mov
pop
iret
xchg
test
cmpsl
in
add
cmpsb
inc
pop
fcomps
inc
ret
cmc
ds
movsb
xor
out
jnp
jns
adc
in
jno
test
pusha
fbld
dec
pop
lahf
rcrb
mov
cmp
cwtl
sbb
scas
xchg
sbb
jae
jge
cmp
aam
iret
shll
jmp
mull
shl
inc
rcl
add
mov
xor
push
xor
mov
call
xchg
loopne
jne
inc
jnp
dec
lds
sub
pop
leave
loope
loopne
rcrl
inc
or
or
in
jae
jae
fimuls
popf
jne
movsb
mov
mov
decl
fcompl
stos
sbb
mov
xor
xor
sbb
cmp
loop
inc
inc
pop
out
imul
cmpsl
aaa
stc
push
dec
fs
or
push
lock
or
mov
lret
adcb
or
into
xchg
repz
inc
xor
call
sub
cmp
sar
lret
xchg
push
inc
mov
mov
mov
subl
lock
movsl
inc
adc
push
out
and
gs
repz
lds
mov
add
out
pop
hlt
xchg
sub
fistl
dec
aad
push
fldenv
icebp
addl
cmp
pop
mov
cmp
sub
pop
adc
pop
not
rorl
cmp
inc
mov
xor
imul
sbb
xchg
cmp
aas
push
incl
push
sub
pop
jno
cwtl
lret
jne
jmp
cs
cmpsb
mov
sbb
xor
cld
dec
out
and
mov
stos
sti
in
mov
pop
cmp
insb
out
arpl
aas
dec
adc
addr16
mov
and
jg
test
mov
stc
shr
xchg
cmp
push
or
adc
shrl
or
pushf
inc
lret
popa
arpl
shrl
test
fistl
xchg
sub
ds
and
mov
add
pop
jo
push
or
sub
sahf
mov
mul
mov
sbb
inc
sbb
xchg
rcrl
mov
scas
call
call
mov
sbb
add
jno
ret
in
repnz
stc
lahf
cld
push
int3
scas
test
pop
sub
xor
push
and
push
mov
lods
mov
pop
in
pop
dec
sbb
push
stc
jmp
fsubrp
leave
mov
mov
gs
cld
in
ror
lret
icebp
das
fistpl
mov
dec
add
push
push
xor
outsb
jnp
jnp
inc
hlt
les
dec
popf
loope
out
mov
stos
vhsubps
lea
repz
lret
int3
les
push
xor
jmp
xor
aaa
cmc
jo
mov
pop
xlat
cmp
adc
cmp
std
jecxz
popf
out
and
xor
push
fistpl
cmp
pop
scas
repz
lods
mov
push
cmp
daa
push
inc
or
and
dec
adcb
xor
and
push
push
icebp
into
dec
push
or
outsb
xchg
scas
lods
ss
pop
addr16
data16
aad
or
lock
in
mov
mull
out
and
cmpsb
cmpsb
lea
fiaddl
arpl
bound
movsb
bnd
adc
inc
dec
xchg
out
repz
insb
xor
stos
push
jno
and
and
sahf
xchg
in
out
cmpsl
mov
jg
cmp
das
jnp
pop
jge
pushf
mov
into
or
sbb
pop
and
cmp
inc
push
adc
jle
pushf
dec
ret
loopne
sub
stos
in
fstl
ret
in
cltd
sbb
movsb
gs
mov
loope
lcall
lret
ss
mov
adc
cmpsl
cld
aas
in
cmpsl
out
adc
adc
nop
lods
pop
adc
loope
enter
jmp
or
mov
cmp
imul
fimuls
sub
iret
mov
test
sub
and
es
or
xor
jle
pop
test
jle
lods
dec
dec
mov
inc
cmp
jb
inc
inc
pop
sarb
xlat
out
fsubs
mov
imul
push
jne
mov
inc
and
cld
into
push
push
xor
add
pop
jae
fs
arpl
xchg
jae
inc
jg
or
cmpsl
mov
leave
fs
adc
stos
or
jl
or
pop
pop
mov
movsl
pop
iret
dec
int
pushf
jg
mov
jecxz
and
idivb
adc
outsb
adc
mov
pop
mov
fsubs
dec
jle
clc
fucomip
mov
iret
call
addr16
push
mov
sub
jecxz
das
or
jne
fdivrs
outsw
push
pop
lods
les
xlat
pop
jnp
sub
fimull
into
push
repnz
lcall
es
je
mov
push
lods
inc
cwtl
pop
and
jb
lcall
jecxz
repz
push
push
ds
dec
in
push
mov
shll
pop
mov
pop
ret
imul
popf
fcoms
shll
dec
fldcw
sbb
into
or
inc
xor
out
cld
xor
sets
icebp
mov
inc
out
repnz
add
cs
cwtl
cld
je
add
sbb
icebp
xchg
sbb
int3
xchg
stos
mov
cli
xchg
push
sbb
sub
das
sbb
mov
sbb
add
stc
repz
push
mov
rolb
xlat
shll
scas
out
fwait
pop
add
es
rolb
add
cli
cmpsb
ja
adc
lret
sub
jo
leave
pop
test
mov
mov
lret
pusha
mov
push
jno
fidivrs
imul
jno
aad
adc
push
ret
hlt
and
movsl
sbb
push
cmpsb
test
mov
imul
sbb
ljmp
push
sub
andb
sbb
ret
mov
in
dec
cmpsb
ss
adc
sbb
push
inc
sub
in
push
icebp
mov
outsl
sub
arpl
dec
fstpt
cmpsl
stos
hlt
daa
jbe
inc
cs
cmpsl
shlb
mov
mov
xchg
inc
add
lea
scas
mov
xchg
test
jbe
fistl
mov
aad
test
jns
fidivrs
add
sub
add
mov
pop
lds
iret
mov
imul
sub
ja
dec
jbe
dec
jmp
inc
mov
fs
outsb
aad
pop
cmpsl
cmp
rol
sbb
pop
sub
or
or
repnz
push
dec
xchg
fimull
mov
or
mov
push
adc
repnz
and
enter
pop
jmp
jl
inc
fsts
push
daa
sahf
ja
idivb
pop
mov
sbb
lcall
outsl
or
dec
mov
imul
fwait
repnz
cld
xorb
je
fisubrl
rcll
mov
push
and
cmp
mov
adc
cmp
adc
xchg
aaa
cwtl
mov
std
cmpsl
mov
jge
xchg
nop
arpl
scas
loope
iret
scas
inc
andb
jb
xchg
mov
clc
fisubs
adc
adc
push
mov
cmpsl
pop
xchg
sbb
sbb
jne
in
xor
imul
xlat
push
mov
mov
leave
js
aas
dec
ret
dec
out
in
insb
add
scas
in
cs
cmp
xorl
aaa
xor
mov
test
dec
lods
aam
adc
loopne
jmp
push
andl
incl
int
dec
mov
xlat
int3
adc
add
outsb
jbe
jp
mov
repnz
test
cltd
xchg
inc
js
shrb
dec
adc
add
xor
enter
and
popa
cs
lods
in
outsb
cmp
ret
lret
and
mov
lahf
in
sbb
cs
addr16
xchg
int
scas
icebp
cmp
cmp
fdiv
sbb
mov
repz
ucomiss
rorl
enter
sbb
ret
mov
repnz
xchg
lds
pop
cli
dec
jmp
cmp
stc
out
inc
ret
mov
xor
data16
sub
jge
jp
sbb
add
xor
jp
push
xchg
pop
scas
ret
repz
mov
dec
add
cmpsl
int
pop
mov
xchg
imul
sub
add
mov
jo
adc
test
sbbl
cld
je
es
sbb
mov
xlat
out
decb
cmpsb
jne
mov
lods
andl
das
mov
std
gs
popf
insl
in
xchg
push
lcall
and
inc
fdivr
mov
pop
inc
jae
cmp
add
fimull
stos
mov
sbb
cmp
movsb
mov
faddp
ret
pushl
xor
xchg
lock
and
lds
sub
es
pop
cli
jnp
insb
push
test
pop
xchg
lds
jo
push
push
sub
arpl
inc
add
enter
std
fidivs
lahf
pusha
decl
enter
in
ljmp
call
cmpsl
insb
pop
jle
lds
dec
out
pusha
mov
mov
dec
les
cli
xchg
int
aad
ret
fbld
enter
mov
insl
out
push
fisttpl
test
sbbb
outsl
pop
out
cwtl
add
jbe
fcompl
sbb
sub
stos
aad
rol
imul
xor
mov
dec
xchg
lock
sub
in
xchg
call
mov
hlt
xor
fidivl
leave
lret
sub
lods
lret
bound
sub
mov
js
das
fwait
aas
pop
adc
cmp
xchg
lret
repz
or
jb
movsl
cmp
xchg
lahf
mov
sbb
dec
ss
adc
fistl
xchg
mov
fsubs
mov
push
aas
push
jns
psrlq
pop
xchg
or
cmp
aaa
xchg
push
sub
mov
rorl
fnstenv
lods
inc
scas
inc
xchg
dec
jl
lret
mov
and
pop
push
and
call
cmp
cmp
lahf
xchg
add
inc
stos
sub
and
jbe
std
cs
xchg
jle
daa
lea
mov
enter
ljmp
pop
adc
push
test
lods
mov
setg
out
test
enter
inc
jg
mov
pushf
sbb
jne
dec
add
cmp
inc
cmp
stc
mov
stos
sub
mov
cwtl
jle
movsl
mov
ljmp
outsl
jnp
jge
push
and
xor
repz
hlt
pop
imul
add
mov
push
outsb
hlt
sbb
pop
pushf
arpl
sahf
adc
mov
pop
and
repz
sti
cmp
push
push
es
inc
leave
enter
popa
cmp
mov
pushf
xor
inc
bound
nop
mov
pop
mov
movsl
mov
ds
or
push
xor
incb
adc
jle
xor
aam
mov
sahf
fs
mov
gs
paddd
mov
popa
in
sbb
jp
test
push
jae
mov
cmp
sbb
inc
repnz
xor
cmp
cwtl
les
jecxz
pop
das
inc
jle
call
jnp
lods
jp
push
stc
ds
pop
je
jae
movb
sbb
pop
pop
sub
mov
adc
fwait
pushf
testb
cmp
or
dec
push
cs
and
jne
pop
cld
inc
into
mov
push
in
xorb
scas
push
adc
push
mov
jl
add
js
stc
addr16
pop
push
or
insb
scas
xchg
cs
icebp
into
xor
inc
lea
mov
mov
and
iret
jl
gs
stos
jg
xchg
xor
shll
lret
bound
adc
daa
in
or
jns
je
negb
lock
cmp
xchg
inc
mov
cmp
xchg
addr16
push
mov
fstl
cltd
gs
fldcw
dec
jle
mov
addl
incl
imull
or
gs
test
stc
xchg
and
add
stos
ljmp
notb
pop
adcb
cmp
jb
sub
lret
cmpsb
inc
mov
ds
ss
cmpsb
sbb
mov
mov
jb
add
aaa
sbb
andb
push
cltd
fisttpl
push
insl
in
in
sub
sbb
xor
push
jns
ret
cmc
mov
dec
pushfw
es
push
fldt
movsb
daa
jle
xor
mov
dec
mov
dec
jge
jns
loop
jmp
mov
inc
jnp
sets
idiv
jle
outsl
xchg
jmp
mov
add
and
push
arpl
xor
jns
mov
aas
lds
mov
jmp
fldenv
mov
icebp
mov
loope
ret
lea
xchg
imul
and
push
pop
xor
inc
xor
jne
clc
push
cmpsl
xchg
push
jb
jns
lea
fiaddl
adc
add
andb
push
test
int
sbb
sahf
stc
movsb
aas
push
in
xor
cmp
ret
outsl
sti
push
ljmp
and
cmp
jmp
pop
lcall
std
inc
cli
addr16
and
xchg
sbb
aaa
xchg
fwait
imul
jmp
push
sbb
mov
imulb
sub
dec
filds
out
rcrl
jnp
lahf
lods
aad
sub
decb
negl
mov
aaa
dec
jo
popf
cmpsl
cwtl
es
xchg
js
lds
inc
xchg
in
adc
jns
js
insb
addr16
scas
jmp
insl
nop
inc
sbb
lods
out
mov
xchg
xchg
mov
jl
dec
xchg
aaa
jbe
pop
sbb
lods
test
sbb
enter
and
imul
lret
in
addr16
xchg
repz
stos
mov
cmp
mov
lds
in
pop
push
xor
in
test
inc
push
nop
lock
psraw
lcall
cmpsl
jl
lret
sub
add
imul
push
pop
dec
cmpsl
xor
enter
mov
out
scas
inc
je
or
aas
mov
xchg
insl
pop
cwtl
dec
mov
out
int
and
mov
cmp
push
pop
pop
repz
cs
pop
lock
es
sti
pop
jae
cwtl
adc
dec
dec
sbb
pushf
pop
xorb
popa
jo,pn
or
or
cmp
adc
add
out
stc
cmp
mov
fsts
divl
cmp
fcomps
inc
mov
mov
jb
imul
mov
mull
lret
mov
scas
clc
leave
ds
or
es
jb
inc
mov
or
cmp
in
sbb
gs
mov
cld
adc
or
test
fisttpll
insl
add
cld
into
push
cmp
push
mov
and
insb
push
fidivrl
movd
rcrl
jne
add
bnd
fbld
push
in
pop
inc
data16
jb
negb
fldenv
rorl
movsb
fbstp
int
insb
sub
enter
pop
sub
mov
or
dec
xchg
in
xchg
stos
push
xchg
lods
pop
mov
inc
jecxz
xor
rolb
je
jbe,pt
out
mov
and
mov
pop
jne
cmp
push
jnp
cmp
test
mov
test
pop
jle
roll
inc
popa
lahf
fsub
mov
cmp
dec
push
lea
lea
sub
out
xorl
scas
jne
mov
insb
add
inc
adc
or
and
sbb
or
imul
lcall
mov
push
call
sub
jmp
into
in
icebp
in
mov
sub
stc
lret
decl
lret
ret
fldl
imulb
jo
rol
outsb
movsl
sbb
dec
inc
sub
addl
jp
in
stos
das
mov
inc
int
xchg
cmp
and
mov
lods
fsubrl
fisubrs
or
and
xchg
and
mov
scas
loope
push
loop
or
jmp
xor
mov
enter
lock
repnz
popa
inc
icebp
add
jbe
sub
pop
movsb
inc
fisttpll
scas
fs
dec
enter
scas
fdivrl
rcll
aas
fsubs
call
dec
gs
mov
mov
or
in
jmp
push
push
lods
adc
and
mov
pop
mov
push
pusha
andb
mov
cmp
dec
pop
aas
outsb
lret
inc
inc
push
jo
stos
addr16
and
inc
lahf
xor
jae
xor
ret
scas
mov
out
and
js
xchg
inc
xlat
ret
cs
imul
out
aas
xchg
push
not
jmp
paddq
fsts
loop
mulb
pop
das
cmp
mov
jecxz
xor
pop
jecxz
cmpsb
dec
int
fidivs
rcll
setge
pop
shrl
fwait
jle
divl
sbb
clc
cmpsl
dec
xor
pop
gs
ret
test
aas
cli
mov
mov
xchg
jae
push
jecxz
jg
jl
cmp
push
test
test
fisttpll
jne
mov
mov
or
scas
jb
dec
aam
mov
jg
sbb
jp
jle
in
scas
stc
test
sbb
dec
test
out
pop
add
imull
lds
repz
insl
xor
xor
and
aad
adc
int3
dec
cli
jmp
add
sarb
sbb
mov
es
movsb
add
add
fcmovu
icebp
or
adc
ja
rclb
adc
sbb
or
cmp
push
push
cmpsb
sbb
xchg
mov
push
pop
testb
rclb
lcall
sbb
sbb
inc
jnp
jmp
clc
pop
int
adc
es
cli
or
and
and
mull
xchg
test
sahf
inc
fs
mov
jp
je
push
xchg
pushf
cmp
xor
dec
out
add
sahf
nop
in
rcrl
jl
or
test
jo
mov
popa
sbb
dec
pusha
jmp
rclb
mov
dec
dec
inc
les
ficompl
sbb
or
push
mov
pop
cmp
jecxz
mov
sbb
jbe
lock
js
dec
shll
and
sti
sub
or
pop
ficompl
xchg
test
ss
inc
pop
fwait
insb
sub
pop
jle
jmp
cmp
mov
repnz
mov
rcrb
pop
adc
aas
loop
mov
ret
outsl
sarl
mov
push
cmp
xor
and
push
ss
push
lret
outsl
xchg
mov
enter
dec
xchg
out
push
fcomps
std
mov
fs
ret
rol
mov
xlat
jmp
mov
cmpsl
into
ret
iret
repz
jae
sub
or
ja
pop
dec
push
stos
repz
lds
push
mov
sbb
aam
adc
in
add
ds
fs
aaa
jbe
je
fidivrl
loopne
lret
aaa
dec
push
mov
std
pop
loopne
es
int3
loopne
mov
inc
out
cmpsl
jns
cmp
fwait
sub
js
mov
test
jp
mov
out
pop
cs
mov
or
push
arpl
sbb
add
ja
sbbl
pop
sbb
push
leave
lds
xor
adcl
and
add
cmpsl
stos
xchg
fbstp
out
ret
je
enter
aas
out
xchg
test
jg
loope
and
incb
mov
xor
push
or
sbbb
sub
xchg
cmp
jne
sub
cmp
jo
cs
or
test
cmpsb
icebp
pop
sub
push
fwait
jge
movsl
mov
sti
shrb
xchg
sahf
in
inc
dec
sub
bound
rclb
jo
jge
test
fwait
aad
dec
inc
js
cmp
rcrl
pop
mov
scas
xchg
mov
xor
fbstp
dec
pop
dec
dec
dec
out
mov
xor
fnsave
mov
nop
mov
jl
sub
xchg
test
loop
xor
adc
movsl
mov
xchg
xor
aam
in
sbb
orl
aas
sub
xchg
jp
into
movsl
lock
mov
add
lock
pusha
enter
add
in
sti
cmovnp
pushf
mov
or
clc
popa
clc
adc
std
mov
int3
gs
and
lcall
scas
js
out
bound
shrb
imul
mov
dec
aad
clc
sti
sahf
out
xchg
push
xor
std
fsubl
arpl
rorb
sbb
push
popa
lret
fsubl
pop
or
and
test
insl
push
clc
lret
push
cmp
mov
cmp
ret
in
pop
push
dec
fdivrl
loopne
mov
loope
or
mov
add
jae
cmp
stos
pop
lock
or
movsl
add
jnp
mov
pop
xchg
aas
jg
in
pop
bound
iret
mov
or
mov
loopne
repnz
jle
xchg
shrb
fiadds
sub
sub
mov
xchg
xchg
stos
add
fbstp
nop
popf
lods
ret
data16
in
dec
popa
stc
push
push
pop
jae
popa
push
mov
loopne
or
sbb
sar
test
rcr
mov
daa
in
push
sahf
imul
adc
test
inc
sub
enter
pop
xchg
lret
inc
xchg
clc
punpcklwd
xchg
add
jnp
cwtl
mov
mov
cmpsb
lods
test
jno
cmc
cmp
in
fnstsw
adc
mov
push
scas
sub
sub
mov
in
xchg
sti
cmpsl
rorl
cmp
ljmp
jae
and
push
sub
and
fstpl
ljmp
imul
cltd
out
int3
dec
cmp
jmp
insl
mov
mov
mov
cltd
in
xor
pop
inc
inc
dec
jo
inc
fwait
mov
daa
jb
push
notb
nop
stc
sub
test
ljmp
xor
scas
dec
sbb
imul
mov
push
popf
int
iret
pop
sti
cmpsb
push
add
ja
mov
loop
decb
sbb
mov
leave
movsb
inc
test
xchg
jmp
cmp
xchg
and
sbbb
jne
andl
add
adc
xor
aam
loope
in
cld
or
cmp
out
in
push
loop
jl
mov
aaa
push
push
inc
xor
sbb
stos
mov
and
fwait
and
test
inc
pop
arpl
nop
cmp
sub
inc
dec
pop
fwait
dec
call
jae
push
sar
and
and
jb
mov
in
jp
and
leave
cmp
ret
flds
insl
cmp
xchg
jb
xor
fsubr
dec
loopne
scas
fs
jo
je
fwait
mov
popa
cmp
les
fisubs
jmp
sub
stos
fwait
or
and
in
jo
in
jae
mov
in
add
in
or
les
mov
repnz
sbb
and
mov
adc
lock
xor
leave
fs
fwait
mov
jp
mov
push
dec
fistps
fldt
sbb
lret
lds
jbe
jmp
dec
cwtl
cmp
and
aad
jmp
cmp
adc
repz
mov
fidivs
dec
xor
inc
cmc
jge
xlat
and
bound
add
je
ret
push
call
fdivl
fsub
push
jo
dec
out
xor
push
push
jae
popa
subl
jns
mov
es
inc
jno
mov
push
mov
adc
addb
clc
jbe
push
mov
mov
jecxz
adc
cmp
int3
jbe
push
xor
xchg
mov
xchg
pop
dec
add
inc
rorl
xlat
pop
jle
adc
mov
das
jno
ljmp
call
sbb
dec
sbb
out
add
push
cwtl
call
cmc
test
loopne
lcall
xchg
in
mov
cmp
test
pop
mov
jge
xor
jge
pop
adc
int3
enter
sub
fsubs
insl
stos
mov
je
xor
lods
das
xchg
adc
cmp
xchg
icebp
adc
and
mov
aaa
bound
aam
std
mov
mov
fwait
mov
leave
jnp
xor
pop
mov
mov
ret
lods
out
jbe
in
push
aad
adc
repz
adc
out
in
xchg
rcl
mov
mov
xor
mov
icebp
iret
leave
push
pop
and
sub
xchg
sub
fidivl
pop
out
jmp
out
cld
pushf
into
in
mov
xchg
mov
cmp
out
xchg
call
shlb
fwait
sti
xchg
ret
jns
push
insl
push
xchg
pusha
push
mov
out
and
add
jno
in
mov
dec
mov
pop
ds
addr16
popa
xchg
mov
pop
out
sub
clc
js
push
sub
mov
pop
insb
or
hlt
mov
lret
sti
push
and
adc
dec
fdivl
mov
cwtl
add
xchg
xchg
popa
rorl
pusha
sti
sub
dec
iret
popa
add
mov
sbb
filds
pop
popa
mov
test
cmp
popf
sub
add
sbb
fidivrs
or
jg
lods
out
mov
cld
pop
insl
mov
jmp
ljmp
and
out
mov
add
xchg
adc
sub
icebp
and
rolb
sbb
in
jae
or
fs
in
ss
call
andb
dec
lods
insb
incl
pop
aam
scas
dec
vpmaxub
jle
shll
mov
inc
leavew
push
xchg
loop
cli
ret
mov
xchg
insb
scas
iret
data16
push
jbe
mov
shrl
sarl
test
add
xor
sbb
adc
cmp
shll
hlt
ror
and
pop
pop
lret
adc
inc
xchg
hlt
jnp
insl
add
imul
mov
pop
pop
in
push
xorb
adc
or
cs
daa
pusha
jbe
data16
xor
adc
xchg
leave
mov
adc
ljmp
jle
and
mov
and
stc
pop
adc
jne
stc
push
rcll
popf
and
adc
repz
outsl
xchg
xchg
cmp
or
dec
js
sub
fsts
or
repz
fwait
xor
repnz
pop
mov
imul
sbb
roll
mov
add
pop
outsb
push
jae
jb
jl
xchg
mov
mov
jle
inc
fistl
xor
cld
into
int
adc
adc
adc
mov
mov
jnp
jg
out
daa
aaa
lds
stos
or
xchg
arpl
sbb
out
or
iret
lcall
dec
adc
and
dec
add
das
daa
adc
ljmp
fcmovnb
pop
add
imul
lock
jp
jo
ror
mov
push
jno
in
xor
pushf
out
pop
sbb
sbb
mov
stos
data16
sti
push
lods
jecxz
scas
mov
push
sub
sbb
push
sbb
inc
int3
jl
in
sub
js
cmp
xchg
jne
arpl
dec
fs
aas
out
arpl
ljmp
movsl
sbb
aad
adc
sbb
imul
xchg
push
jge
sbb
mov
add
jno
sahf
sub
sbbl
dec
test
aad
xlat
dec
pop
dec
je
mov
out
pop
int3
bound
cmp
push
cwtl
xor
sub
outsl
push
mov
xor
lods
lea
shll
push
pop
popf
pop
testb
cmp
jo
adc
inc
inc
jno
shr
jg
into
inc
movsl
jbe
xchg
jl
outsb
pop
fwait
adc
je
rclb
test
add
add
ss
and
add
xor
push
adc
rcrl
sub
cmp
incl
ja
xor
pop
push
push
xchg
out
aas
or
xchg
stc
pusha
jno
ficoms
stos
lret
xor
xor
xchg
ds
into
cltd
out
inc
nop
mov
fdivrs
push
incb
xchg
mov
gs
frstor
fdivs
movsl
cmp
sbb
push
mov
and
mov
iret
data16
popf
add
test
into
pop
repz
data16
aam
dec
mov
lock
int
xchg
dec
dec
and
iret
les
jmp
shll
mov
aad
inc
fcoml
jne
cld
cmpsl
pop
enter
mov
mov
sbb
les
push
int
sub
test
std
imulb
cwtl
mov
mov
cs
cmpsl
xchg
inc
pop
inc
jns
out
ljmp
mov
dec
dec
mov
scas
pop
cs
pusha
xchg
xchg
scas
inc
pop
jbe
jle
std
inc
dec
xor
orb
fidivl
pop
mov
into
fstl
xchg
cmpsl
xchg
subl
iret
mov
or
ret
sub
ret
xlat
cmp
ss
pop
lcall
mov
or
data16
pop
xchg
pop
scas
and
pop
xor
add
sub
repz
ds
outsl
xor
aad
mov
and
ja
push
add
xor
xor
fisttps
pop
xor
clc
test
push
sub
or
in
ret
test
aaa
xchg
fbld
repz
stc
xchg
jecxz
fwait
aad
or
out
dec
jnp
jno
and
add
fbstp
xchg
mov
xor
psllw
ja
sbb
lea
lret
punpckldq
stc
and
and
test
or
mov
cmpsl
pusha
ret
dec
in
mov
iret
pop
or
cli
cmp
mul
mov
adc
sti
mov
popa
cmp
inc
mov
bound
jp
sub
pop
pusha
add
and
aam
mov
xchg
mov
imul
xor
out
cmpb
gs
mov
xchg
out
ja
sub
adc
insb
mov
bound
adc
sub
cwtl
mov
inc
arpl
mov
xor
popa
xchg
std
sbb
add
jne
or
sub
loopne
adc
lock
andl
fwait
ss
sub
ljmp
nop
les
jb
dec
pop
cmc
scas
mov
push
out
or
adc
mov
fistl
sub
xor
inc
inc
in
inc
lock
xor
in
rorl
xchg
mov
lcall
sti
lods
xlat
sbb
and
fistps
lods
and
mov
xor
jp
cld
cmpsb
iret
push
mov
fdivp
adc
pop
cmpsb
sbb
mov
loop
inc
cmc
or
inc
or
xor
push
push
pushf
enter
mov
subb
or
mov
inc
cs
adc
mov
leave
int
pushf
scas
inc
mov
dec
pop
lds
pop
jbe
pop
cwtl
outsb
fnstcw
pop
xchg
leave
int
add
mov
cmp
inc
stc
arpl
int
cmp
inc
ret
pop
xchg
xchg
jae
xchg
test
add
arpl
movsl
push
mov
sub
fwait
mov
xchg
inc
mov
xchg
test
cmp
aaa
pop
les
daa
push
sarl
cld
rol
inc
mov
cli
mov
sbb
pushf
push
dec
sar
test
cmp
mov
popf
jge
adc
bound
dec
dec
lods
pop
adc
cld
inc
cmp
and
testl
popf
mov
push
fwait
in
out
adc
mov
aas
cmc
dec
add
xchg
adc
inc
push
nop
cmc
out
outsb
inc
push
int
xchg
mov
mov
outsb
push
dec
mov
mov
je
dec
popa
sub
or
test
hlt
jo
outsb
or
push
sub
adc
clc
inc
xchg
mov
dec
repnz
les
mov
jae
fisubs
syscall
and
incl
jecxz
xchg
push
jl
addl
repz
pop
xchg
pop
in
xchg
push
xor
add
test
pop
pop
rcrl
mov
push
sub
mov
pop
pop
cltd
repz
lret
cmp
jecxz
dec
inc
push
xor
pop
fcmovbe
repnz
leave
pop
test
and
daa
iret
insl
mov
lcall
lds
shlb
sbb
add
cmc
fmull
mov
inc
dec
cli
popa
mov
sbb
add
aad
aad
shll
adc
hlt
inc
fidivrl
adc
jbe
pusha
pop
jle
push
std
and
cmc
lods
mov
push
fucom
js
andl
push
sti
stos
lds
mov
push
icebp
jge
or
jge
dec
pop
repnz
inc
into
pop
sbb
add
mov
inc
adc
cltd
jno
in
add
imul
clc
dec
dec
lcall
ja
in
dec
out
test
pop
mov
jl
rcr
fnstcw
clc
ret
loopne
xorl
movsb
push
filds
adc
stos
and
out
add
mov
jge
rolb
in
or
nop
mov
xlat
in
mov
cmp
push
jmp
pop
lahf
ss
pop
call
push
repnz
and
or
mov
pop
scas
inc
push
aad
jmp
int
in
cmp
addl
mov
bound
mov
lods
or
lret
xchg
sub
jp
fisubl
mov
push
inc
jmp
fbld
sti
or
cmp
cmp
mov
sub
ret
pop
and
mov
ja
push
lods
out
cwtl
dec
pop
mov
stos
inc
out
pop
call
out
fisubl
dec
cmpsb
inc
jo
adc
clc
data16
xchg
dec
es
mov
scas
push
mov
ss
xor
stc
nop
add
adc
es
ss
fsubs
lock
jne
mulb
jge
or
jae
and
fucomi
popa
jnp
add
sub
iret
int3
add
out
std
fisubrl
mov
push
push
jp
or
xchg
push
es
jb
leave
xchg
jns
jl
lahf
lcall
cli
test
adc
xor
mov
xchg
and
jb
out
testb
sbb
pop
scas
lock
push
testl
xchg
enter
pop
cmp
mov
pop
adc
mov
jb
int3
sub
cmp
mov
add
sub
jmp
push
or
cmpsl
cmc
mov
jns
inc
movsl
shrl
aaa
dec
loope
and
mov
jne
sub
add
and
xchg
xor
lret
loopne
std
movd
mov
call
xorl
out
jnp
das
or
xchg
cmp
sbb
pop
sahf
aaa
into
iret
jl
jbe
jo
in
mov
enter
bound
push
cwtl
test
orb
lods
xchg
data16
adcb
gs
stos
insb
add
mov
mov
jo
dec
sbb
aam
dec
sbb
or
lahf
negl
adc
jg
inc
push
mov
jae
pop
mov
dec
hlt
lds
sbbb
into
cld
out
cmpsb
jmp
jmp
add
lods
imull
sub
cmp
cmc
int
mov
pop
pop
xchg
inc
es
fldt
cmp
rcrb
ja
jno
nop
lds
jnp
outsl
xchg
arpl
jecxz
mov
pop
out
mov
sub
inc
lcall
jl
mov
aaa
xchg
test
inc
dec
fldenv
xor
leave
jno
jo
ja
lcall
loope
lahf
xchg
shll
insl
aam
dec
lret
ss
dec
pop
sub
test
out
adc
mov
addr16
jno
xchg
mov
sti
into
push
sahf
sub
mov
mov
ja
rcrb
ljmp
or
sahf
pop
stc
aaa
push
fldt
jo
dec
fwait
bound
sub
aam
add
xchg
popf
je
lret
inc
clc
fs
sti
rclb
cmc
loop
int
mov
mov
sub
sbbb
jecxz
pop
out
iret
data16
mov
int
out
mov
mov
lock
dec
ror
inc
mulb
pop
or
jne
cmpsl
pop
int3
rcr
mov
mov
subb
test
xchg
or
test
inc
dec
inc
cli
push
and
push
leave
loope
mov
es
xor
mov
out
mov
in
test
and
mov
lret
push
mov
adc
test
outsb
mov
mov
cltd
gs
inc
test
insb
sub
repnz
int
mov
outsb
gs
sbb
loope
dec
enter
mov
jg
aam
inc
cmpsl
inc
andb
inc
add
dec
push
std
and
out
out
inc
mov
icebp
xor
sti
push
sbb
jp
in
adc
cmc
jp
stos
mov
ret
sbb
add
mov
xchg
mov
cmp
jb
into
sbb
jns
and
leave
iret
test
push
sub
in
xor
sub
jo
lock
jne
movsl
adc
xchg
cmp
mov
imul
mov
insl
inc
pop
dec
ret
inc
mov
rcrl
jae
lcall
lock
test
in
stos
rol
mov
jmp
jle
fldl
jns
add
mov
jp
adc
mov
decl
fistps
pop
cmp
pushf
cmp
aas
movl
push
int3
fstl
hlt
in
or
push
in
nop
nopl
jne
ficoml
xchg
shl
ret
fcmovnbe
adc
push
sub
dec
into
daa
inc
imul
movsb
fwait
pop
xchg
push
test
xor
test
insl
xor
jnp
cmp
cli
fcomi
movsl
xlat
push
bound
jb
push
fisubl
mov
mov
push
ret
gs
jmp
xor
aad
jb
mov
inc
in
jae
cwtl
jae
xchg
cmp
idivl
inc
dec
icebp
lods
add
pop
cli
les
hlt
dec
cmp
or
lods
jno
in
inc
jmp
inc
xor
mov
scas
mov
dec
fidivs
inc
mov
and
dec
popa
jnp
and
arpl
lcall
mov
testl
dec
push
xchg
scas
scas
pop
xor
ret
outsl
adc
ja
mov
in
sti
nop
test
lret
data16
fnstcw
popf
hlt
lods
add
pop
fdivrs
lahf
in
dec
ja
jne
in
inc
mov
mov
dec
stc
mov
fwait
scas
pop
cltd
xor
inc
cmp
dec
lods
jmp
push
lcall
cwtl
rep
mov
push
push
sbbl
cmp
push
sahf
xlat
icebp
movsl
mov
pop
sti
pop
jb
je
lock
into
pop
ret
jl
cmp
cmpsl
out
mov
rclb
sub
pop
in
push
dec
mov
push
cmp
mov
sub
inc
xor
ret
xor
iret
int
inc
scas
out
incl
inc
fisubs
xchg
mov
rcl
shrb
or
out
or
xor
fdivrs
or
push
mov
mov
xor
movsl
sub
imul
xchg
or
lock
pushf
add
arpl
fwait
out
push
int
dec
test
out
fwait
aas
inc
adc
dec
push
arpl
pop
sbbb
push
sub
and
xor
ds
push
xor
push
fnsave
push
jmp
dec
lock
sbb
cmp
cmp
movsl
imul
add
rcrl
sar
mov
jecxz
add
rorl
pop
adc
filds
xchg
pop
out
ret
test
pop
dec
aad
or
inc
into
bswap
inc
jae
shl
push
push
shl
lcall
imul
mov
pop
cmpsb
push
or
fs
push
shrb
fdivrs
push
pop
or
pusha
xor
ficompl
add
or
adc
lea
sbb
mov
imul
iret
divb
adcb
mov
ret
je
ficoms
cltd
jmp
sbb
jns
pop
fs
xchg
jb
or
sub
add
loopne
lret
outsl
testl
xchg
popa
clc
pop
pop
mov
lret
xchg
sub
sbb
mov
test
pop
outsl
test
cmp
shlb
jle
loop
mov
mov
lea
inc
loopne
subb
popf
fnsave
lock
in
push
and
scas
and
outsb
shll
pop
push
dec
pop
jo
lods
mov
rcl
push
jmp
xlat
add
push
shlb
push
aad
stc
push
sub
cwtl
ret
adc
pop
repz
jg
jbe
stc
jp
in
lret
cld
jmp
icebp
fsubrs
cmc
loopne
daa
mov
cmp
jmp
inc
sbb
sub
jmp
repnz
and
outsb
adc
mov
jle
les
into
dec
loop
pop
roll
xor
mov
push
sti
sub
xlat
loope
imul
cs
in
repnz
dec
dec
pop
jp
cmpb
in
ret
sahf
xor
ret
cli
movsl
jmp
loop
pop
or
call
scas
lods
loope
mov
mov
shll
push
out
jb
addr16
outsb
sbb
dec
dec
adc
push
aam
jne
int
loopne
jg
es
cmpsb
icebp
cmp
pop
lahf
add
fwait
or
jae
jge
sbb
add
movsb
cltd
test
mov
lea
lea
adc
loope
sti
cmp
add
jl
lret
pushf
push
push
jg
xchg
nop
rep
fldenv
fdivrp
pop
xchg
inc
test
arpl
and
into
fdivrp
add
pop
xor
jle
lods
or
jno
dec
jp
cmp
cmp
mov
pop
addr16
arpl
mov
cmp
or
add
jg
mov
lahf
fs
sub
leave
aas
jo
scas
inc
pop
cwtl
cli
jno
sti
xchg
mov
jnp
xchg
or
jp
xchg
xlat
cmp
outsl
push
jmp
xor
push
repz
cld
pop
dec
and
push
rorb
inc
pop
stos
loopne
sbb
in
mov
lahf
divb
sbb
dec
incl
dec
bound
stos
pop
xchg
sub
dec
mov
icebp
pop
lret
add
mov
xor
mov
cmp
mov
mov
pop
jnp
push
pop
lods
xchg
out
pop
andb
clc
test
xor
mov
adc
add
arpl
xchg
and
inc
cmpl
mov
and
xor
xchg
fs
cwtl
adc
lcall
stos
leave
int
xchg
inc
lret
add
mov
xchg
push
xor
outsl
gs
push
lods
dec
jb
rorb
jge
pop
stos
sbbl
popa
shlb
push
jb
dec
loop
int3
and
xor
sub
cmp
mov
fdivrs
test
fldcw
push
test
or
mov
push
out
loop
pmaxub
mov
in
mov
push
or
testb
push
pop
imul
sahf
dec
xor
les
dec
mov
mov
or
jae
mov
popf
lret
idiv
adc
sbb
mov
xor
inc
fwait
and
loopne
fcomps
xor
fbstp
push
jmp
idiv
js
loopne
seto
mov
adcl
test
movsl
out
push
es
negl
adc
lcall
in
mov
sahf
adc
jg
mov
in
hlt
popf
shrl
dec
inc
inc
es
pusha
pop
push
ljmp
insb
mov
push
popa
daa
inc
xchg
daa
jne
arpl
dec
sub
lret
out
inc
arpl
xchg
jae
das
sub
loop
fs
xchg
or
and
cmc
inc
xor
sbb
ljmp
pop
mov
xchg
dec
mov
fcoms
ss
fadd
or
js
les
jo
adcb
insl
jbe
push
xor
mov
pop
xor
nop
cmpsl
push
or
jno
sbb
xor
daa
push
ficoml
test
xor
bound
or
xchg
test
xchg
mov
inc
stos
in
mov
int3
das
int
pop
int
sbb
das
lods
pop
push
dec
mov
subb
cld
aaa
inc
dec
ss
mov
jb
iret
fcomps
stos
pop
in
loop
icebp
and
dec
js
add
gs
and
mov
pop
xchg
push
mov
mov
mov
fdivl
scas
out
mov
jecxz
mov
mov
out
or
test
xchg
mov
subb
repnz
imul
sub
repz
int
cmp
movsb
gs
int3
cmpsb
mov
xchg
add
dec
sub
sti
pop
stos
xchg
cmp
inc
scas
frstor
cmpsl
and
inc
cs
and
adc
mov
js
jmp
xor
test
add
dec
pop
shrl
outsb
gs
movsb
leave
ss
mov
dec
aaa
fdiv
mov
outsb
inc
push
push
out
xor
push
jge
jnp
daa
xorb
lret
xchg
ja
faddl
fdivl
dec
cli
mov
popa
lahf
cli
mov
adc
fnsave
psrad
outsl
inc
cmpl
data16
mov
repnz
and
lret
aaa
sbb
mov
sbb
int3
ss
fsub
jle
int
ja
sub
sbb
lods
imul
je
xlat
xor
sub
add
addl
int
js,pn
inc
stos
dec
aaa
lret
out
or
repnz
inc
scas
mov
xor
sub
lods
jecxz
ds
aaa
cmp
test
mov
adc
lea
add
fwait
ror
and
xor
addr16
add
jns
push
push
jmp
cmpl
jmp
jno
sti
insb
adc
push
int3
sub
stos
jnp
sbbl
mov
out
in
test
mov
jp
je
fdivl
imul
outsl
or
adc
jge
fs
cmp
inc
data16
inc
daa
mov
push
scas
inc
mov
jb
push
into
jbe
imul
cmp
test
lcall
mov
xor
rcrl
dec
fbstp
xchg
push
jno
test
scas
jg
xchg
test
icebp
mov
sbb
pop
mov
push
push
out
test
jmp
push
xchg
rorb
jle
fsubr
jno
fdivl
or
pop
cmp
mov
lret
cmpsb
xchg
rclb
repnz
lahf
fists
push
jg
imull
in
lahf
sbb
popf
mov
out
and
add
pop
jbe
mov
push
xor
ljmp
xor
cmpl
xlat
sti
call
pop
rcrb
and
push
int
mov
in
jae
pusha
dec
cmp
add
lds
or
aad
out
std
mov
jecxz
popf
lock
cmpsl
pop
pop
into
jo
and
adc
aas
mov
repz
repnz
into
jl
out
push
in
cmp
fistl
test
add
pushf
lcall
and
mov
push
lret
lret
mov
fsubrl
popa
add
ret
insl
and
pop
xor
xchg
mov
add
icebp
nop
and
ret
dec
inc
pop
ss
inc
mov
clc
adc
inc
ret
sbb
push
jmp
shl
or
out
jl
push
sahf
popf
in
lods
cmpsb
jecxz
stos
dec
jp
data16
inc
sbbb
divb
lahf
js
xlat
xor
xchg
or
call
insb
push
pop
sbb
jg
cmp
aam
jb
call
fwait
and
mov
lea
inc
scas
fwait
mov
ret
int3
push
call
gs
int
mov
mov
xchg
ss
cmp
cmp
and
mov
fs
xor
out
mov
jno
mov
hlt
xchg
cmp
adc
ret
andl
sahf
mov
rcll
mov
clc
mov
inc
cmpsb
jecxz
sti
inc
xchg
test
mov
imul
xchg
jno
cli
xor
jno
and
pop
mov
cmpsl
js
sub
stc
fs
sbb
push
pop
cmpl
nop
lea
xlat
int3
xchg
mov
scas
xchg
ds
fildll
pcmpgtw
rcr
jg
xchg
mov
mov
mov
xor
mov
int
mov
clc
in
push
jmp
ds
jno
pusha
xor
xchg
andl
pop
test
cmp
lea
lods
push
out
sti
or
cmp
imul
sahf
add
seta
faddl
outsb
push
xchg
jle
pop
clc
xor
sub
push
xor
adc
xchg
inc
mov
cwtl
int
and
dec
mov
pop
xlat
sub
pop
sbb
or
jns
push
out
and
jg
and
fsubs
mov
xchg
icebp
adc
cli
les
ror
fisubl
push
jnp
adc
lcall
mov
in
decb
lds
mov
arpl
int
orb
or
jmp
mov
stos
xor
mov
std
test
xlat
push
pusha
pop
into
stc
cltd
test
cmpsb
addr16
and
add
and
pop
fists
adc
sub
push
pushf
xchg
pusha
push
sbb
and
cmp
xchg
mov
fimuls
outsb
add
cmpsl
movsb
xchg
jnp
mov
mov
sbb
cmp
leave
pop
add
movsl
jl
jle
icebp
cmp
iret
gs
stos
test
lods
mov
adc
xor
movsl
xor
loop
pop
adc
out
icebp
mov
popf
popa
jg
jmp
rclb
xchg
fdivl
fimuls
psrlq
fisubrs
push
mov
cli
dec
push
xlat
sbb
pop
outsb
mov
jmp
fnstenv
pop
rcrl
sbbb
mov
push
jl
and
cld
sahf
inc
test
dec
movsbl
mov
fcmovu
int
lds
xor
cli
or
inc
or
mov
mov
and
pop
sarl
jle
sub
jae
and
stos
ficompl
mov
xchg
sub
jge
dec
mov
mov
ffreep
loope
adc
pop
cmp
add
push
sub
sbb
ret
or
jecxz
out
sub
cs
pop
ljmp
aas
or
push
mov
sbb
out
jecxz
add
xchg
out
out
jns
adc
std
dec
mov
mov
testb
aad
adc
pop
pop
aas
adc
jge
pusha
jne
add
push
xchg
jno
fiadds
mov
imul
in
push
movntps
mov
aad
test
int3
in
hlt
or
into
fdivr
es
and
and
ja
cwtl
dec
jg
rcrl
pushf
sbb
and
xor
or
ljmp
cmp
jae
mov
mov
pop
inc
pop
rorb
addr16
icebp
xor
decl
mov
or
std
test
pop
adc
mov
fwait
sub
sbb
icebp
popf
cmp
inc
adcb
idivl
fstpt
icebp
out
xchg
pop
std
inc
add
and
scas
jl
icebp
cmp
adc
and
sti
idivb
movsl
vminps
pop
fimull
inc
jle
jns
fistps
lcall
cmp
mov
adcb
clc
out
aam
mov
adc
mov
rclb
inc
out
test
jae
mov
add
aam
mov
or
dec
jecxz
ret
xchg
nop
mov
imul
mov
loop
out
pop
rcll
add
mov
addl
and
pop
mov
jl
mov
enter
cwtl
inc
insl
cli
sti
mov
popf
leave
mov
sbb
add
mov
test
fdiv
pop
jle
xchg
scas
xor
arpl
add
mov
les
or
jae
jo
add
dec
das
lods
aaa
or
pushf
dec
iret
pop
xor
sub
adc
xor
fisubl
jge
fldt
cld
jnp
fucomip
mov
or
cmpsl
dec
loop
daa
ljmp
pop
testb
lds
insb
add
lahf
in
mov
xor
pushf
or
shll
push
out
pop
mov
into
icebp
mov
stos
cmp
jl
mov
fists
adcl
xor
ret
inc
mov
lcall
push
inc
mov
jg
cmp
add
sbbl
push
stc
pop
cs
cmp
xlat
push
rorb
dec
out
push
insb
dec
stc
insl
subb
jo
or
popa
adc
mov
leave
mov
test
mov
dec
and
punpcklbw
aas
nop
test
mov
push
adc
addb
xor
dec
sub
cltd
pop
imul
mov
xor
fcoms
in
lods
loopne
mov
inc
fnstenv
aaa
outsl
inc
push
sbb
es
fsubs
inc
push
pop
adc
stos
push
fwait
xor
push
out
mov
adc
mov
xor
sbb
pop
xrstors
arpl
and
xor
insb
dec
movsl
inc
ja
xor
dec
int3
sbb
es
sub
les
scas
in
mov
sbb
and
lds
or
outsb
cmp
dec
mov
dec
mov
test
imul
mov
or
imul
pop
jecxz
push
adc
xor
lock
pop
add
nop
das
and
outsb
cld
shll
out
or
cwtl
mov
xor
jb
jge
jb
cmp
pusha
cwtl
inc
fs
lock
mov
jp
lret
cmp
push
push
xchg
stc
nop
xchg
mov
imul
jg
test
xchg
and
xchg
data16
xor
jmp
divb
jp
adc
add
into
xor
je
lcall
arpl
and
push
outsl
lods
jl
and
xchg
jecxz
push
cltd
js
push
cwtl
fistps
and
mov
stos
mov
aas
pop
mov
mov
ret
mov
out
sbb
in
xor
pop
jne
aas
into
sbbb
stos
cmp
push
in
loope,pn
aaa
loope
je
add
cmp
push
es
lock
rolb
push
ja
loopne
lods
cs
clc
xchg
lock
int
jge
sbb
stc
in
cs
fstps
mov
jno
scas
addb
pop
out
cmpsl
and
sbb
insl
les
and
in
pushaw
out
cmp
mov
aam
adc
push
and
mov
cld
gs
jg
xchg
mov
adc
hlt
jne
fistl
add
sbb
and
xchg
inc
jp
je
shr
mov
and
loopne
and
loop
mov
dec
imul
into
gs
js
mov
in
addl
es
sub
lcall
xchg
cmp
nop
int3
popa
mov
mov
mov
and
xor
inc
bound
lahf
mov
jne
mov
jno
jae
xchg
push
enter
cmpsl
fs
mov
les
push
lret
mov
mov
mov
imul
movl
dec
cmp
pop
iret
bound
xor
scas
fimuls
push
aam
pushf
or
movsl
cmp
sub
mov
stos
cld
mov
adc
arpl
dec
sti
push
and
inc
or
leave
push
pop
fldl
pop
cmp
fsubs
aas
bound
movsb
mov
pop
test
lods
aas
and
in
xchg
stos
push
sbb
cmp
sar
adcb
dec
push
bnd
je
or
jp
mov
fsubr
pusha
add
inc
and
out
imul
push
lods
adc
sbb
mov
jmp
xor
dec
lahf
cmc
jns
nop
push
clc
push
add
popa
ljmp
jp
mov
mov
ret
xchg
adc
or
arpl
xchg
sub
cmp
push
daa
mov
nop
sub
insl
lods
cmp
sbbb
imulb
add
jb
xor
cld
jmp
fwait
lock
push
mov
mov
or
mov
les
test
push
adc
xor
call
movd
enter
gs
add
jb
pop
xor
mov
push
adc
in
call
aad
xor
hlt
push
dec
mov
sub
stc
and
clc
inc
out
pop
stos
adc
inc
xlat
js
push
mov
lret
mov
cltd
push
fs
jmp
xchg
adc
leave
mov
push
mul
add
das
or
call
sahf
inc
mov
ret
adc
cmp
cmp
dec
pop
adc
add
inc
fistpl
mov
das
xor
popf
ds
les
mov
lock
xchg
andl
inc
sbbl
and
dec
jae
js
push
xchg
inc
lret
pop
push
sbb
or
lahf
sti
mov
jbe
mov
adc
popa
inc
xchg
cli
push
fsubs
outsl
aas
push
into
push
jmp
je
adc
mov
sbb
push
fcompl
out
pop
push
sti
out
mov
dec
sbb
mov
sahf
hlt
cltd
sbb
out
ljmp
add
and
mov
pop
inc
pop
ret
fs
outsl
test
cmpsl
imull
cs
mov
jne
xor
ljmp
scas
ds
int3
dec
inc
cmp
jb
sub
push
sub
rcrl
pop
test
inc
fcoml
sub
inc
pop
ja
hlt
outsl
jp
movl
pop
xchg
out
enter
pop
xchg
add
lcall
test
lahf
adc
daa
mov
push
xor
mov
faddl
mov
es
mov
and
push
cmc
loop
mov
xchg
lret
inc
cmp
jno
cli
divl
clc
mov
xchg
jl
ret
push
xchg
mov
push
popa
pushf
sub
fstps
imul
mov
pop
jg
ss
and
pop
and
push
scas
inc
mov
sub
out
mov
mov
mov
sahf
xchg
jle
movsl
mov
fcmovnu
test
data16
jns
jbe
or
pop
adc
sbb
mov
add
clc
fdiv
into
adc
in
pushf
jno
inc
fnstenv
outsl
sbb
xor
jb
dec
xchg
sub
faddl
pop
xchg
or
xor
divb
data16
pop
mov
mov
cmp
add
in
cwtl
pop
ljmp
push
adc
mov
ljmp
lret
iret
loopne
adc
jae
xchg
mov
add
lret
daa
push
cwtl
push
movups
js
sbb
mov
xor
inc
int3
push
adc
dec
xchg
enter
inc
gs
in
mov
cs
or
jne
xchg
mov
xchg
mov
dec
push
imul
and
push
push
fisttps
push
mov
mov
les
repnz
inc
xchg
dec
mov
and
jne
push
push
mov
sub
jne
imul
add
add
xor
ljmp
test
movsl
sarb
mov
aas
into
iret
sub
push
cld
int
and
push
int3
pop
push
mov
sub
mov
sub
repz
push
sub
sub
ss
pop
cmp
stos
mov
es
dec
adc
je
es
orl
push
mov
jp
pop
lea
xchg
movsb
enter
sbb
inc
adc
inc
inc
sbb
out
insl
lcall
cmp
cmp
outsb
xor
xor
or
scas
inc
ds
lds
add
xchg
sbb
ret
repnz
dec
repnz
cmc
adc
mov
rorb
rcrb
xchg
arpl
and
cmp
push
jmp
xchg
es
je
inc
movsl
adc
lret
inc
mov
ja
loop
fwait
push
xchg
nop
daa
jne
xchg
shlb
mov
sbb
js
add
aad
fs
inc
push
push
rcll
mov
xchg
sub
cmp
inc
stos
rol
fmull
sub
ss
and
gs
jae
les
adc
pop
cmp
leave
das
push
ficoml
or
mov
mov
fisubrs
and
cli
fcoms
xor
data16
les
cmpsl
mov
test
idivl
mov
dec
in
sub
icebp
sahf
icebp
dec
adc
movsl
mov
jbe
xchg
lock
mov
push
mov
sbb
daa
dec
ljmp
clc
aas
nop
xchg
push
sarb
mov
mov
stos
test
out
cmp
inc
rcrl
dec
add
cmp
rol
repnz
outsb
lcall
dec
sub
mov
fwait
push
out
jbe
out
test
dec
or
jp
shl
jnp
mov
adc
testb
fdivrs
loop
lea
add
cmpsb
jbe
stos
jbe
inc
mov
outsb
mov
fsubrs
cmp
imull
sub
xchg
pop
push
pushf
xor
xrelease
push
cwtl
sub
int
push
call
stc
push
sub
xchg
sub
or
xor
pop
xchg
aam
xchg
add
xorb
movl
push
and
popf
je
pop
and
sbb
je,pt
sub
test
sbb
ja
jnp
shrb
jmp
leave
fstenv
pop
sbb
inc
inc
shlb
cmp
insl
cli
pusha
insl
daa
sti
sbb
cwtl
push
lret
daa
test
xor
popa
jnp
pop
clc
and
mov
mov
xor
shl
punpckhdq
jle
cmpsl
dec
push
fstpl
movsl
add
lods
and
ljmp
and
stc
jns
add
pop
push
xchg
pop
cmp
cltd
inc
mov
jle
lds
jb
pop
loop
dec
pop
aad
in
mov
bound
test
push
in
outsl
mov
call
nopl
inc
aam
dec
shll
pushf
out
mov
mov
xor
pop
int3
loopne
movsb
shrl
out
icebp
inc
cmpsl
rcll
mov
repz
ds
fdivs
icebp
push
scas
stc
adc
pop
rcrb
mov
les
adc
test
mov
je
or
push
inc
or
inc
cmpsb
jle
test
ret
mov
out
test
dec
pop
dec
fwait
out
daa
outsl
inc
test
xchg
insb
and
lock
adc
xchg
jno
pop
data16
sbb
or
or
ret
xchg
sbb
xor
xor
pushf
mov
shll
xchg
jp
insb
push
or
push
push
xchg
add
mov
andl
cbtw
sarl
mov
mov
cmpsb
stc
pushf
dec
mov
ljmp
enter
xchg
ret
ret
pop
cmp
nop
cmp
dec
adc
pop
nop
out
stos
dec
loope
call
loope
xor
sub
mov
dec
repz
dec
push
popa
mov
jp
mov
add
sahf
sub
jle
repnz
movsb
jecxz
add
jl
es
cld
xchg
mov
adc
inc
leave
cmpsl
jne
arpl
imul
shl
jge
pop
mov
sbb
jns
add
mov
sub
iret
insb
xchg
bound
fsubs
clc
ja
je
popa
dec
jns
xchg
cmp
fs
cmpb
jno
push
seto
or
mov
sbb
daa
mov
jl
mov
dec
filds
push
mov
int
sub
repnz
iret
jae
lcall
sbb
and
flds
decl
cli
pop
out
outsl
pop
cmp
pop
mov
pop
in
ds
pop
fwait
cli
xchg
push
fucomp
push
out
sbb
insb
in
sub
jnp
int3
and
xchg
fdivl
cmp
cmp
cld
shl
test
push
sbb
mov
fldl
lods
dec
pop
scas
jg
mov
xchg
push
popa
sub
pop
mov
xor
sub
and
iret
or
jbe
test
adc
xor
inc
fstpt
fwait
mov
jecxz
mov
out
xchg
icebp
gs
xchg
insb
mov
cmc
mov
sub
cmc
shr
movsl
dec
aad
movsb
mov
jge
mov
mov
add
outsl
adc
adc
xor
sub
pusha
inc
xor
hlt
gs
fists
mov
xchg
or
jnp
movsl
mov
int3
fs
adc
test
negl
and
popf
flds
pop
js
aad
add
daa
jbe
xchg
push
inc
xchg
test
in
orb
das
out
mov
xchg
dec
ficompl
jg
add
mov
ds
jle
push
and
xchg
test
cmpsb
ds
jne
js
lds
jmp
cmc
nop
in
or
mov
shll
jns
stc
outsl
cmpsb
mov
mov
cmp
xchg
cmp
mov
mov
outsb
cmp
jno
xchg
insb
cmp
sbb
dec
outsb
jmp
pop
addr16
lret
loop
push
ljmp
jno
pusha
jo
cli
ret
clc
xor
push
cli
pop
shlb
loop
inc
adc
ss
pop
mov
mov
mov
inc
test
dec
xchg
mov
pop
es
popa
mov
cmpsl
insl
lcall
and
push
cmpsl
stc
push
inc
sbb
push
sbb
jb
jge
add
mov
adcb
test
fcmovnu
add
les
stos
dec
push
mov
lret
jl
inc
cmpsb
mov
xchg
jecxz
pushf
test
dec
loop
jae
es
aad
inc
testb
outsb
imul
orb
int3
pop
call
xchg
xor
testb
sub
mov
xor
inc
mov
push
nop
das
in
fxam
inc
xchg
int
jle
xor
push
mov
repz
jno
notb
cmp
inc
adc
sub
mov
mov
xlat
and
or
lahf
imul
sbb
mov
dec
add
cmpsb
scas
cmp
pop
cmpsl
push
lahf
pop
subb
leave
and
cmc
push
jbe
outsb
inc
loope
shrb
hlt
jae
cmp
notl
adc
ds
pop
jecxz
jae
jae
int3
pop
scas
push
roll
mov
out
int
aad
jmp
nop
repz
xor
or
rcl
cmp
jno
std
es
subb
jns
call
test
idivb
mov
test
jl
push
pop
lahf
test
push
xor
or
je
daa
sahf
inc
and
daa
sbb
push
mov
popl
fadds
das
popa
xor
push
dec
in
imul
mulb
dec
aam
jmp
mov
adc
imul
movsl
movsb
mov
gs
loope
pop
data16
and
mov
sarb
dec
or
movsb
insl
xor
fistpll
push
shrl
or
pop
sbb
pop
lahf
subl
or
movsb
incb
ja
xor
sbb
jo
and
push
mov
jnp
js
ljmp
adc
add
cmp
xor
iret
mov
push
push
sub
je
xchg
pop
insb
add
pop
and
push
adc
cmpsb
cmp
iret
enter
imul
flds
sbb
cmp
sbb
insb
pop
lods
sbb
inc
pusha
jle
sub
mov
lret
lret
ljmp
subb
xchg
cmp
sub
ret
outsl
das
add
jae
xor
mov
cli
or
mov
test
sbb
mov
sbb
sbb
push
aas
movl
test
adc
je
mov
inc
les
enter
daa
mov
jp
ret
sbb
shll
push
data16
mov
or
cmc
xor
imul
dec
sub
clc
cld
lock
adc
inc
rcrb
lock
pop
call
sbb
sbb
sub
faddp
mov
inc
int
out
subl
out
cli
scas
jns
sbb
dec
adc
sbbb
in
adc
cmp
out
in
imul
jmp
orl
das
xchg
xor
mov
ror
testb
xchg
sub
mov
fisubs
cmp
aam
arpl
into
aas
outsl
stc
out
fs
pop
mov
sbbl
xor
sahf
add
fldt
sub
ljmp
imul
adc
mov
mov
sbb
add
mov
outsw
adc
inc
into
pop
push
test
inc
hlt
dec
cmp
mov
xchg
adcb
xor
outsl
aad
xchg
sbb
mov
or
ja
sarb
adc
sbb
cli
sbb
mov
dec
mov
stc
sub
mov
jl
cmp
sub
gs
dec
pop
loopne
sub
sbb
inc
cmpl
sbb
aam
bound
subl
push
daa
loope
dec
imul
or
jno
add
mov
or
loopne
ret
add
xchg
sub
out
mov
out
sahf
inc
jmp
aam
jo
mov
loopne
lret
mov
sbb
pusha
dec
and
pop
arpl
into
std
pusha
mov
or
iret
data16
sti
mov
lock
xchg
cmp
outsl
dec
das
sbb
sub
push
dec
sub
shll
jae
fldl
inc
call
les
xchg
cmp
sbb
test
xor
shld
mov
ret
lea
mov
loopne
loopne
and
push
pop
push
lods
add
dec
adc
cmp
jbe
sbb
lds
xor
out
lea
jbe
push
scas
loope
sub
dec
mov
mov
push
sub
mov
icebp
push
inc
pop
dec
adc
push
adc
iret
data16
mov
cmp
lock
push
rcrl
sbb
fildll
pop
out
fcoms
outsl
add
jge
ja
out
rcrb
sahf
fsubrs
dec
xor
mov
inc
lret
xchg
mov
cltd
xor
int3
mov
fcompl
mov
mov
outsl
ja
int
lahf
cwtl
testb
insb
es
sub
notl
or
and
xor
xchg
repnz
adc
filds
in
push
push
sub
pop
and
adc
dec
leave
mov
mov
test
jecxz
xor
je
repnz
bound
iret
and
fs
movsb
repnz
add
mov
in
mov
pop
push
mov
ja
fsubrl
test
stc
loopne
and
cmp
sbbl
fcompl
mov
cmp
sub
dec
out
daa
movsl
lock
and
mov
mov
imul
pop
leave
leave
arpl
mov
outsl
test
popa
cli
movsl
pop
fdivrs
push
sub
adc
sbb
cli
push
rcrl
add
in
stos
loop
flds
lods
jmp
inc
sti
in
rclb
std
xchg
cmp
and
push
pop
outsl
sub
mov
dec
lods
sub
inc
ljmp
xchg
mov
or
and
imul
leave
adc
in
cmpsl
add
pop
adc
cmpsb
mov
je
sub
or
js
pop
iret
inc
dec
aad
xchg
test
inc
push
lret
and
xor
xchg
push
jo
test
out
sbb
ret
jg
inc
fsubl
cld
out
mov
ja
lcall
push
jne
inc
adc
xor
push
jge
mov
lods
jno
movsb
arpl
dec
sahf
in
pop
adc
cld
shlb
and
popa
pop
mov
sbb
and
in
lods
shr
ss
daa
or
dec
bound
pop
adc
sub
mov
push
dec
push
repz
es
leave
movsb
jns
stos
add
in
inc
out
jnp
ficompl
pop
testb
add
jmp
out
stc
popa
insb
add
insl
push
inc
faddl
movsb
arpl
add
es
inc
pop
out
mov
lahf
rcrl
imul
test
sub
sahf
mov
dec
es
std
xchg
dec
das
cs
test
mov
push
pop
jne
mov
arpl
fimuls
adc
add
pop
xor
adc
fistps
out
mov
xor
jmp
aas
mov
cmp
jo
loopne
lds
rcrl
cmp
sub
int
jne
std
jecxz
cmpsb
pop
dec
aam
mov
pushf
jo
ret
lcall
mov
adc
pop
scas
jp
adc
xor
mov
jmp
mov
fistps
lds
cwtl
pop
cli
movsl
mov
mov
cmp
adc
sti
pop
mov
jge
jmp
cld
cmp
daa
loopne
pop
scas
jmp
xor
testl
lds
push
jge
rclb
out
aad
repnz
cmpsb
push
jle
mov
sbbb
or
push
jbe
popf
mov
push
ret
xchg
fdivl
xor
aas
push
add
add
jno
mov
dec
fbld
test
push
and
jmp
inc
sar
pop
mov
movsl
lret
fs
lea
test
lea
in
and
mov
or
add
sub
jae
inc
sub
xor
clc
xlat
ds
xor
xchg
mov
gs
in
sbb
lods
dec
push
pop
jmp
aad
pushf
xlat
mov
pop
sbb
add
add
lods
jp
adc
rcrb
popa
mov
outsb
pop
cld
ja
xor
fisttps
inc
mov
rcrl
cli
leave
push
pop
sbb
cmpsb
jecxz
mov
push
scas
mov
and
ja
jg
push
lock
push
sub
push
rclb
pop
pop
push
sub
pop
fdivp
xchg
lcall
mov
shrl
add
push
dec
mov
loopne
cmc
inc
negl
xlat
bound
fnstenv
movsb
ret
pusha
mov
xchg
decb
ja
cmp
pushf
xchg
or
mov
push
lcall
lahf
test
loopne
jne
push
add
rorb
stos
xlat
das
xor
aaa
inc
and
in
adc
add
sbbb
imul
adcb
mov
scas
xchg
sub
mov
xchg
sub
ret
jo
test
jae
push
and
and
xor
cld
jno
xchg
js
jb
in
add
adc
mov
fs
data16
test
sub
std
push
mov
cmp
inc
or
add
cwtl
mov
test
adc
imul
je
into
imul
inc
test
adc
cmp
dec
test
and
nop
testl
jne
stc
or
cltd
sub
cmp
idivl
out
movsb
repnz
lcall
cli
xor
cmp
sbb
mov
mov
fs
mov
je
mov
xchg
std
xchg
dec
out
loopne
int3
lea
jle
cli
lret
and
xchg
add
shlb
inc
xchg
test
repz
movsl
sbb
xlat
repnz
lods
js
pop
call
inc
cmc
jb
sar
dec
mov
jnp
pop
push
adcl
fildl
ret
shrb
aam
sbbl
in
push
ret
outsl
shlb
xchg
jmp
cmp
pop
shrb
and
ja
adc
push
addr16
loopne
mov
dec
add
lds
adc
cmp
xchg
in
movsb
xlat
fnstcw
insl
add
sarl
xchg
cmp
dec
mov
push
fidivl
dec
insb
ljmp
adc
sub
ror
pop
insb
sub
cld
sbb
sbb
inc
jae
mov
mov
fbstp
push
out
iret
inc
mov
xchg
stos
pop
dec
fistpll
packuswb
je
inc
aas
mov
sbb
ret
pusha
mov
inc
and
mov
sbb
ret
xchg
add
testb
sub
pop
scas
mov
fistpll
aam
cld
bound
adc
dec
and
add
int3
mov
pop
jmp
inc
jae
ds
push
in
push
pop
pushf
jb
jne
sahf
out
rorl
pusha
fisttpl
lods
stc
orl
bound
sahf
stc
inc
inc
mov
mov
push
mov
xchg
mov
dec
data16
cltd
sbb
std
mov
ret
sbb
xchg
push
out
test
mov
pop
aam
mov
xor
loopne
inc
dec
add
shll
adc
or
test
aas
fwait
in
mov
jae
mov
lock
pop
xor
loop
dec
xor
cmpsb
lds
xor
movsl
pop
and
mov
imul
insb
mov
shl
or
sti
dec
loope
sub
mov
je
xchg
jecxz
lds
out
and
mov
or
pop
cmpsl
les
scas
pushf
mov
add
xlat
mov
pop
icebp
lahf
lock
or
lock
shll
pop
and
xchg
mov
clc
lock
sbb
push
aad
pop
sub
push
cmp
sub
js
aas
arpl
rorb
mov
xor
aad
sbb
cmpl
or
lods
and
imul
mov
sahf
jmp
pop
pop
push
fdiv
xchg
data16
jne
repnz
sti
out
mov
adc
addr16
pop
push
aaa
sbb
jbe
push
xchg
push
mov
cmpsb
and
or
cmp
mov
sbb
outsb
lcall
mov
ret
add
rcll
jo
out
cs
lcall
xchg
and
push
add
sbb
or
je
add
mov
loopne
fistps
test
pushf
xchg
out
gs
insl
in
mov
test
adc
hlt
js
es
sbb
sbb
cmp
cmp
mov
cmovae
jb
movsl
shl
xchg
loopne
inc
jecxz
xchg
cli
xor
mul
mov
imul
lock
xchg
loope
or
dec
jmp
sub
stos
cmp
jns
cmpsl
ret
stos
mov
pop
lret
das
and
icebp
dec
ljmp
pop
push
cltd
add
leave
push
and
xor
nop
insb
loop
in
jne
aaa
mov
cld
jmp
outsl
fiadds
xchg
inc
jbe
cli
cs
inc
cwtl
push
leave
cltd
dec
dec
jl
outsb
daa
leave
mov
repnz
inc
fcom
mov
fidivl
fs
or
movsb
in
loope
jb
or
dec
add
cmp
inc
fld
loop
insl
adc
lahf
scas
push
push
cwtl
icebp
dec
ret
mov
test
imul
leave
dec
loop
or
adc
lret
cltd
mov
jb
push
or
add
push
xchg
mov
xchg
mov
sbb
pushf
adc
sarl
lret
and
adc
dec
in
jp
push
lods
fisubrs
int
iret
jge
cs
jge
dec
jge
push
add
outsl
fadds
rcrl
out
sub
adc
nop
mov
add
pop
cld
mov
xchg
dec
inc
sarl
aaa
xchg
mov
add
adcb
jae
push
push
add
es
lods
sbb
inc
repnz
cli
in
inc
repz
loopne
mov
push
mov
test
mov
fadds
or
adc
andb
dec
or
mov
imul
loope
inc
mov
fiadds
adc
outsl
ficompl
xorl
cmp
pop
shlb
and
adc
xchg
xchg
push
push
pop
lea
shrb
mov
and
test
cmp
data16
xorl
test
fs
jecxz
mov
and
outsb
adc
dec
cmc
addb
pop
sahf
shl
nop
cmp
and
in
nop
ret
jp
xor
and
fistpll
loopne
mov
push
stc
pop
xlat
xor
pop
pop
testb
std
jle
inc
cwtl
jl
aas
mov
sbb
or
pop
push
repz
fdivp
in
cmp
mov
aad
rcl
mov
xchg
subl
int
insl
inc
jge
ss
adc
mov
sti
mov
loopne
nop
cs
jbe
fs
enter
loop
and
movsb
test
lea
stos
jns
test
bound
lods
mov
adc
mov
pop
xor
nop
test
aas
push
test
xchg
xor
sbb
xchg
dec
cmp
cmpl
int
mov
int3
aad
sbb
dec
push
clc
rcll
cmp
mov
ret
inc
sub
ret
icebp
ret
mov
hlt
pusha
xor
fstpl
xchg
or
adc
and
or
lcall
test
lcall
in
subl
add
sub
stc
xor
repz
movsb
cmp
inc
mov
adc
test
xchg
push
xchg
adc
repz
cmp
jnp
loopne
jge
sub
js
cwtl
push
jmp
dec
leave
scas
inc
mov
cmp
test
das
call
daa
pop
jb
dec
scas
mov
dec
ja
shrl
or
jp
sub
sbb
shll
out
push
aaa
sti
add
mov
dec
sub
les
pop
inc
or
out
jl
ficoml
ror
std
mov
pop
push
or
or
cmp
dec
scas
mov
imul
repz
shll
jp
leave
pop
mov
push
das
out
cld
lock
push
mov
xchg
mov
pop
out
jle
or
add
sub
push
xor
push
addr16
xor
call
leave
testb
hlt
pop
or
mov
adc
and
lods
mov
aas
mov
arpl
shl
push
int
into
dec
mov
lods
push
cld
jns
insl
mov
inc
lods
inc
je
jmp
push
in
push
sbb
lahf
mov
push
mov
mov
fs
inc
pop
fdivrl
cmpsb
cmp
cmp
and
add
test
mov
stos
xor
mov
mov
pop
je
pop
push
fstps
sub
data16
push
pop
xchg
lock
dec
cmp
addr16
fsts
mov
std
movsl
mov
outsl
xchg
cmp
mov
mov
push
ja
or
hlt
aad
out
dec
pop
and
xchg
stos
es
addr16
xchg
shrl
xor
loopne
lea
add
test
shrb
pop
loopne
mov
adc
jg
stos
nop
push
sbb
je
ss
mov
rol
sbbb
xor
pop
lea
aad
push
scas
sub
insl
push
sarl
addr16
filds
mov
cmp
ja
inc
sbb
push
pop
pop
lahf
pop
and
je
and
sti
jne
repz
fs
jecxz
aam
arpl
xchg
add
mov
mov
test
add
mov
sarl
mov
in
mov
out
arpl
rolw
scas
mov
pop
repz
xlat
outsb
pop
sbb
test
jg
dec
mov
push
or
mov
push
dec
mov
mov
push
sete
mov
jae
dec
test
lods
je
sahf
mov
inc
lds
push
adc
int
out
fwait
inc
sub
fidivrl
imul
lahf
nop
mov
inc
mov
jns
cwtl
ret
imulb
dec
sti
pop
push
stos
jl
xor
dec
movsl
sub
test
shll
jno
jo
xchg
out
test
and
sbb
xor
cmc
jnp
imul
dec
fldcw
into
adc
inc
pop
and
sti
inc
jo
mov
push
push
sub
inc
shrb
and
push
repnz
add
das
outsl
xor
out
dec
gs
enter
pushf
adc
push
outsl
es
mov
inc
fwait
clc
dec
stos
in
fstpl
jae
ja
xor
mov
mov
ja
cmp
mov
xor
add
push
stos
add
cmp
pop
dec
hlt
jo
es
sahf
push
inc
sbb
mov
mov
mov
hlt
mov
incl
jg
sbb
fmull
out
test
add
sbb
and
adc
jl
pop
mov
xor
push
insb
sbb
cld
push
mov
leave
inc
sbb
add
or
or
leave
sbb
inc
dec
stos
in
jl
mov
mov
mov
aas
push
mov
push
popf
cmp
push
sub
fldl
lods
movsb
decb
add
mov
cli
test
hlt
mov
and
repnz
adc
fdivs
mov
fbstp
decl
hlt
xor
mov
in
pop
scas
inc
bound
lea
sarl
aas
xlat
repz
lret
and
push
mov
mov
int3
mov
jbe
stos
fisubl
jp
xor
rcrb
adc
mov
and
iret
pop
popf
jg
in
adcb
ret
repz
mov
dec
mov
add
mov
lea
sbb
int3
das
add
clc
ja
mov
mov
into
adc
xor
popf
test
add
mov
sub
pushf
stos
adc
sub
aas
mulb
sub
sbb
inc
push
mov
xchg
testb
adc
dec
testl
adc
mov
ffree
test
stos
nop
push
xor
push
cmp
pushf
bound
mov
in
ss
add
imull
sub
loopne
aad
cld
mov
cmp
cwtl
cmovnp
fmull
and
dec
sub
je
sub
fs
mov
xchg
shll
jmp
inc
cmpl
mov
jnp
cmp
fs
lds
adc
test
mov
jnp
neg
out
test
jle
das
cmp
ds
or
repz
mov
mov
and
push
dec
or
dec
xchg
pop
dec
sbb
jnp
and
arpl
sbb
add
mov
adc
jns
pushf
jg
jb
ja
push
cwtl
popa
movl
jbe
sbb
dec
in
stos
add
inc
and
push
add
test
xchg
xor
je
ds
and
lea
sti
bound
rcrb
mov
test
or
or
or
fldenv
inc
mov
shll
cmp
sub
pop
adc
adc
inc
rcl
cli
call
or
idiv
sbbb
movsb
fldcw
inc
sahf
add
into
mov
jb
mov
jno
xor
imul
stos
inc
mov
test
pop
mov
popa
xchg
mov
push
clc
bound
ficomps
pop
add
dec
jb
clc
xchg
push
mov
mov
int
inc
jae
jmp
push
popf
nop
add
xchg
sub
pop
inc
push
pop
mov
cmc
movsl
dec
pop
aaa
jl
aaa
push
cmp
pop
cmc
and
pusha
repz
mov
jg
es
cwtl
mov
or
and
dec
add
arpl
xchg
cmp
ja
or
sbb
rcrb
ss
daa
push
mov
scas
scas
or
stos
mov
aaa
adc
fldl
inc
out
dec
dec
insb
repz
insl
add
adc
mov
adc
ja
mov
adc
push
popf
js
test
pop
push
cli
jp
repz
push
das
or
cmpsl
mov
push
mov
mov
test
cltd
jge
xchg
popf
xor
in
mov
xor
pop
xor
insb
jl
insl
arpl
ss
sub
rorb
cmp
aas
xor
add
sub
add
push
shrb
pop
outsl
dec
sbb
jl
sub
pop
mov
mov
sub
andb
stc
shrl
mov
lret
out
stos
in
adc
mov
hlt
push
mov
add
push
xchg
rcrb
inc
outsb
dec
testl
inc
xchg
idiv
push
repz
xchg
jns
fcomi
pop
inc
es
jmp
inc
fldt
xor
fwait
mov
in
fsubrl
fs
mov
xor
cmp
add
dec
cmp
jmp
mov
in
adc
jo
mov
loop
and
cmp
loope
call
fistpll
jp
rorl
xor
dec
push
sub
aas
mov
ds
leave
int
push
xor
cmp
mov
jl
mov
mov
xchg
sar
jnp
mov
ljmp
jno
sbbb
testb
jge
push
repz
pop
and
inc
es
mov
sub
mov
push
sub
push
sahf
sbb
mov
nop
cli
int
cs
pop
sbb
adc
pusha
fldt
iret
bound
mov
aas
in
sahf
pop
sahf
lea
ret
cmpsb
and
mov
je
jp
mov
and
ret
push
cmp
pop
mov
and
mov
ds
outsb
jge
aad
adc
pop
push
je
and
mov
int3
mov
jge
scas
or
xchg
add
fdivr
sub
xchg
lcall
pusha
mov
adc
in
ljmp
mov
in
movsl
mov
add
pop
out
ja
pop
sahf
clc
adc
jp
push
sbb
xor
imul
mov
pushf
je
mov
out
cmp
aaa
test
xlat
pop
adc
stos
inc
lahf
jp
pusha
xchg
inc
idivl
pop
cld
loopne
dec
arpl
jl
cld
fwait
bound
inc
std
or
add
and
dec
push
std
fwait
inc
addr16
push
cmpsl
ds
jbe
test
cmp
pop
push
lea
dec
inc
fsubrs
jecxz
mov
push
das
cmp
inc
mov
fmul
mov
push
mov
fld1
mov
sti
cmpsb
mov
and
add
xchg
adc
jnp
dec
sub
fistpll
std
adc
xchg
stos
xlat
int
and
orb
adc
mov
push
les
push
jb
sbb
jb
lock
sub
pop
adc
lcall
and
fiaddl
push
sbb
pop
xchg
mov
stos
pop
fldl
jg
pop
rorb
ja
outsb
add
cmp
cmpsl
mov
repnz
mov
adc
test
aam
fnstenv
daa
mov
adc
mov
ljmp
cmp
inc
xor
push
aas
or
or
add
iret
addr16
pop
add
sbb
xchg
adc
jno
loop
adc
mov
jnp
mov
movsl
inc
pop
cltd
test
dec
pop
rol
out
pop
and
dec
adc
sbb
push
rcr
mov
mov
ret
aad
hlt
mov
shrl
or
or
aad
daa
aad
sti
fsubrl
out
call
pop
ja
jnp
jae
fistl
into
bound
loopne
rorb
sbb
mov
push
in
or
adc
iret
das
cmp
out
loop
and
push
test
cmc
clc
test
jb
leave
push
or
out
xchg
ret
sub
int3
xor
stos
mov
mov
jo
adc
ja
es
shl
inc
cld
dec
repnz
and
sbb
xchg
sub
jno
jns
imul
repz
faddl
mov
pop
movsl
dec
testl
lock
andl
mov
cmp
xor
shrb
adc
mov
and
scas
aad
outsl
loopne
mov
or
push
ss
ss
push
test
xor
mov
mov
xchg
sub
enter
and
stos
push
add
scas
inc
out
mov
add
xchg
movsb
and
and
dec
bnd
xor
add
jne
je
arpl
mov
pop
sbb
inc
test
mov
test
add
scas
inc
lea
into
cmp
data16
push
sbb
aad
sti
lods
push
movsl
sub
dec
out
orl
add
iret
scas
jecxz
scas
lret
arpl
shlb
mov
xchg
bswap
cmp
xor
in
mov
and
and
out
in
test
jo
negb
ret
jl
loop
inc
popf
int
dec
fadd
fbstp
jg
mov
push
pop
aam
dec
shrb
fs
push
dec
hlt
jecxz
test
sbb
or
and
mov
test
and
in
pusha
pop
xchg
sub
add
xor
repz
adc
cmp
and
jl
and
pusha
sti
or
sbb
xor
ja
popa
inc
mov
lock
adc
out
inc
pop
xor
popa
sbb
lahf
clc
out
fwait
sub
mov
mov
insl
xchg
sarl
dec
fbld
add
xorl
or
faddl
shlb
or
adcb
lods
mov
outsl
inc
jp
ja
bound
test
cltd
test
jecxz
and
shlb
out
in
adcl
or
xor
lcall
jle
push
stc
lret
aas
jb
fsubrl
sbb
mov
xlat
mov
mov
scas
pop
stc
faddl
dec
jmp
jnp
push
fmulp
push
xor
lcall
sbb
add
imul
push
pushf
mov
addr16
pop
mov
insl
repz
sub
cltd
imul
cli
roll
xor
mov
cs
das
loopne
fsts
mov
jp
icebp
jle
or
add
pop
aam
mov
sbb
shrl
xor
sub
push
addl
cs
add
mov
mov
inc
push
inc
insb
bound
lock
sti
out
push
or
sbbl
jecxz
cmpsl
mov
mov
rclb
dec
mov
mov
and
mov
or
jbe
push
test
and
je
pop
push
repnz
scas
xchg
sbb
ret
mov
dec
and
outsl
jge
add
inc
push
jae
roll
or
call
outsb
jg
cli
cmpsb
cmp
cld
push
inc
fisttpll
push
add
loope
xchg
adc
cmpsb
inc
xchg
into
pop
repz
pop
mov
dec
xchg
enter
fstl
push
rcrb
aaa
loop
imul
cld
mov
jecxz
xchg
and
mov
adc
pop
icebp
jne
aam
mov
jns
dec
add
sbb
paddusb
mov
xchg
lds
das
jg
and
dec
jl
sti
movsl
cmp
ficoml
xor
js
lods
popf
xchg
adcb
inc
loope
and
add
or
fbld
lods
stos
jns
sbb
sub
stc
dec
sub
or
dec
xor
cli
xchg
popa
fstpl
dec
or
jge
xlat
stc
mov
sahf
test
push
aad
mov
int
mov
jbe
pop
or
adcb
mov
sahf
xor
decb
inc
fisttpll
out
xchg
arpl
xchg
pop
out
es
dec
sbb
hlt
mov
call
sub
fs
mov
push
hlt
lret
adc
mov
push
jnp
cmp
and
iret
es
push
pop
shlb
mov
arpl
insb
imul
add
mov
inc
xchg
inc
xchg
inc
adc
gs
popa
or
sbb
lcall
adc
xor
addr16
pop
push
cmp
insb
add
bound
mov
mov
push
pop
push
add
mov
mov
adc
aas
ja
xchg
test
push
fistl
inc
mov
loopne
dec
shll
cmpb
push
jae
jne
rcl
pushf
imul
mov
mov
adc
repz
hlt
imul
mov
repz
movswl
lret
pushw
enter
dec
cmp
dec
cmp
xor
sbb
dec
lds
orl
mov
test
sbbl
adc
inc
xchg
imul
data16
cmc
fnstsw
mov
xchg
add
xchg
mov
filds
mov
mov
std
push
movsl
rcll
mov
fcoml
and
or
movsb
mov
das
aad
or
mov
popa
in
sbb
cmp
jns
inc
and
mov
xor
mov
xor
lds
rcll
imul
mov
sbb
xchg
or
or
jge
xchg
js
call
test
ljmp
sbb
fdivr
inc
enter
sub
in
insb
adc
mov
pop
arpl
cltd
dec
cmp
pop
loope
in
decb
mov
aam
std
jl
jge
pop
repnz
out
xlat
dec
adc
in
shll
loope
out
out
pop
add
test
push
adc
call
inc
sahf
add
jmp
andl
gs
cmp
fldl
movsl
xchg
arpl
ror
xchg
sub
sub
mov
mov
push
dec
lahf
insl
dec
xchg
or
addr16
pushf
mov
add
mov
adc
movsb
in
dec
out
into
mov
dec
aaa
adc
fdivrs
push
loope
xor
test
fmull
icebp
iret
mov
sti
or
aad
jns
mull
inc
sbb
js
or
adc
out
ficompl
in
leave
xor
jb
jne
lret
test
add
mov
adc
adc
out
outsb
mov
bsr
xchg
or
nop
mov
imul
pop
rorb
stos
lds
or
xor
roll
push
sbb
or
cmp
movsb
or
cld
sbb
jg
pop
pop
mov
xchg
push
ret
bound
mov
xor
dec
mov
or
call
jl
cmp
int
pop
mov
inc
and
es
jb
inc
faddl
push
rcr
out
dec
addb
add
es
or
xor
xchg
push
icebp
call
push
jbe
call
std
dec
jno
arpl
outsl
cmp
mov
pop
stos
xor
xor
jns
loop
adc
and
cmp
fisubrs
pop
cld
mov
cmc
sub
jg
cmp
je
bound
enter
iret
aad
add
jae
loope
mov
ja
lahf
mov
fldcw
dec
pop
imulb
or
mov
mov
loope
sbb
imul
mov
cs
lods
dec
ljmp
fadd
movsb
inc
movb
stos
out
nop
dec
aad
dec
mov
leave
cmp
sbbl
dec
movsb
mov
jnp
aas
cltd
or
jg
cli
inc
call
xchg
xchg
outsl
idivb
inc
push
pop
or
into
imul
push
xor
xor
pusha
test
push
or
out
and
cwtl
dec
out
sbb
cld
cmpsb
movsb
jnp
sbb
mulb
mov
dec
test
rol
lahf
push
or
idivl
mov
xchg
imul
push
sbb
sub
xor
or
inc
mov
cmpsl
mov
ljmp
and
xor
mov
xlat
bound
lock
or
mov
shlw
jl,pn
dec
scas
dec
loope
mov
adc
fiaddl
cs
xor
pop
js
cli
loop
xchg
es
je
in
shll
stos
push
in
cld
inc
mov
fs
in
push
out
xor
pop
out
sub
add
shrb
mov
inc
jecxz
bnd
mov
lret
orl
mov
test
fwait
and
inc
loope
imul
in
mov
mov
cmpl
pop
sub
test
xchg
stos
jp
push
out
mov
pop
ljmp
sub
aas
xor
hlt
cmp
and
add
dec
outsl
cmpsl
mov
rol
gs
pop
sahf
sbb
aas
popa
clc
jo
mov
outsb
insl
jb
repz
mov
push
fs
sub
jbe
and
sbb
or
daa
ret
mov
inc
mov
inc
sbb
ja
pop
dec
mov
xchg
mov
sub
or
neg
xchg
fwait
jp
addb
inc
mov
je
popa
movb
cwtl
cmpsl
xor
out
sbb
movsl
inc
mov
jmp
jae
or
mov
ss
sub
dec
movsl
jnp
fucomip
leave
dec
xor
cmp
push
jae
idivl
cld
aam
mov
xchg
dec
repz
addr16
xchg
adc
out
test
es
ficoms
inc
or
lret
cmp
movsb
dec
loopne
sbb
ds
mov
fmuls
push
lds
inc
out
mov
inc
pop
xchg
add
dec
lea
add
jle
mov
mov
and
jl
xchg
jge
mov
pushf
test
es
mov
jecxz
icebp
leave
inc
and
imul
fnstenv
rolb
add
pusha
divl
dec
roll
jg
aam
pop
jo
neg
outsl
sub
jae
in
sub
test
mov
xlat
add
inc
inc
pop
xor
mov
add
sti
xchg
fnstsw
sub
neg
mov
das
enter
ret
xor
hlt
mov
shl
push
inc
int3
arpl
imull
in
jmp
inc
push
lods
push
mov
cmp
mov
pushf
loopne
into
jnp
jg
lcall
xchg
outsb
pop
bound
mov
push
or
pop
pop
ljmp
test
push
adc
add
xor
or
jecxz
add
sub
insl
pop
sub
imull
aad
sub
dec
roll
pop
hlt
inc
lods
shrl
out
sbb
imul
addl
sahf
rcl
mov
rcl
test
in
mov
fstpl
mov
cmp
push
mov
loopne
and
imul
or
sbb
scas
shr
pop
adc
test
mov
xchg
dec
daa
js
mov
rorb
fs
add
dec
mov
push
xchg
repnz
stc
jbe
addr16
mov
outsl
mov
inc
push
mov
movsl
mov
adc
loope
loope
xchg
add
cmp
adc
add
sbb
inc
mov
repnz
xor
call
aam
jl
cmp
pop
loope
repnz
jmp
mov
push
fcoms
or
mov
in
push
ret
icebp
jge
stos
xchg
loop
enter
mov
pop
mov
aad
adc
dec
mov
out
add
sarl
jmp
mov
icebp
fdivrs
and
sbb
popa
sub
dec
call
repz
mov
xchg
enter
cmpxchg
test
fdivs
mov
test
jp
ret
xlat
mov
dec
jbe
adc
out
fstps
lods
in
sub
movd
rolb
out
sub
jmp
shr
movsb
das
fwait
incl
add
mov
mov
es
dec
dec
jae
jae
pop
movsl
add
jge
push
das
loopne
mov
push
xor
mov
push
test
mov
imul
cwtl
movsl
imul
loopne
mov
push
addr16
in
xlat
clc
sub
jne
in
cmp
jl
inc
scas
call
push
inc
sbbl
inc
and
mov
pop
mov
outsl
cmp
sahf
sbb
dec
jge
aam
mov
inc
xor
inc
and
adc
daa
adc
or
cmp
iret
das
mov
push
out
add
es
iret
clc
jbe
lods
lock
dec
lahf
ret
call
jo
push
jmp
test
dec
out
in
inc
or
jle
jmp
xchg
xor
imull
jmp
iret
mov
sahf
in
sti
sahf
sub
loope
cmp
jo
push
loope
cmp
mov
jge
sub
sub
stc
mov
ja
cmp
fs
data16
adc
pop
mov
stos
inc
cmp
sbb
pop
or
dec
lock
gs
add
in
enter
mov
stos
inc
inc
stos
or
dec
das
mov
int
imul
add
lcall
push
shll
int3
mov
mov
ret
int3
lret
loop
lcall
repz
sbb
or
loopne,pn
ljmp
fisttpll
mov
insb
add
stos
mov
fimull
addr16
push
and
filds
es
cmp
adc
mov
mov
or
cmp
loope
push
loope
je
icebp
xchg
mov
in
cmpsl
and
lods
cwtl
push
mov
movsl
hlt
sbb
testl
cmp
outsb
push
push
je
inc
jecxz
aaa
and
int
dec
out
fisubs
cmpsb
mov
sub
jmp
arpl
xor
cmp
das
aaa
into
pusha
mov
push
in
mov
popf
pop
cmc
into
pop
cld
adcl
or
in
mov
mov
fwait
mov
roll
and
lcall
xchg
inc
sahf
fwait
scas
jge
dec
mov
test
jle
pop
pushf
shrl
fs
leave
inc
test
pop
inc
into
sbb
ret
xchg
mov
scas
dec
loopne
sub
add
lock
sbb
pop
repnz
inc
add
inc
xorl
sub
or
repz
ljmp
out
cli
bound
cld
ror
adc
shrb
push
jmp
jns
dec
sub
loope
stc
les
fwait
in
pop
cmc
scas
mov
adc
push
ficomps
dec
xchg
fnstenv
popa
pop
in
push
xchg
in
icebp
lret
out
mull
xchg
idivb
int3
jle
idivb
xchg
or
mov
push
roll
popf
inc
mov
repz
xchg
push
js
stos
and
dec
cmc
cltd
jmp
push
xchg
enter
sbb
sub
sub
adc
scas
inc
inc
je
pop
push
add
pop
sub
or
pop
adc
mov
mov
mov
pop
cmp
cwtl
add
mov
int3
lods
jle
xor
cmpsl
ret
loop
pop
inc
rcl
pusha
in
adc
pop
insl
outsl
cmpb
mov
fnstsw
inc
fnstenv
dec
mov
out
clc
daa
cmp
lods
mov
push
xor
cmpsl
movsb
std
sub
js
cli
das
pusha
mov
subb
push
movsl
dec
loopne
les
push
pop
imul
popf
cmp
jb
dec
fistpll
aam
jle
sbb
dec
jae
pushf
xor
inc
mov
cs
stc
jo
jmp
xor
pop
push
jmp
test
fs
mov
jmp
popf
add
fcoml
xchg
loope
subb
add
call
gs
sbbl
adc
push
fwait
mov
rcrl
and
movsb
mov
add
sbb
aas
pop
mov
fstps
xor
lret
sbbl
movsl
mov
cmpsb
lret
lret
gs
test
lret
lods
xchg
scas
int
cltd
gs
or
iret
mov
int3
inc
fldenv
call
xor
movl
fcomps
rolb
mov
ret
enter
loope
mov
dec
adc
je
inc
gs
out
sub
mov
or
in
adc
cmp
inc
mov
mov
jg
mov
fwait
sti
and
push
dec
pop
xchg
imul
inc
mov
ds
aad
xor
mov
xorb
jle
aam
or
sbb
gs
xor
pop
mov
fwait
mov
les
out
pop
xchg
aad
jae
test
in
xor
ljmp
leave
jp
mov
movsl
cmp
xchg
pop
jle
aam
sbb
cmp
gs
ss
jb
call
xor
lock
mov
adc
mov
mov
hlt
outsl
or
inc
adc
rolb
clc
xchg
cmpsb
ficoms
loope
stc
xor
mov
shrl
pop
xchg
sbb
jae
mov
xchg
popf
bound
sti
jo
sbb
jmp
mov
stos
shrb
enter
fildll
xorl
push
lods
inc
mov
sub
pop
inc
dec
cmpsl
out
mov
mov
inc
jmp
mov
pop
jp
arpl
sbb
mov
sub
dec
loopne
dec
sub
push
bound
andl
shr
insl
jnp
stc
loope
mov
icebp
popa
loop
xchg
mov
rolb
mov
push
jne
jno
stc
inc
adc
xchg
pushl
in
loopne
fidivl
shl
xor
push
leave
mov
cmp
pop
aas
fwait
add
jp
lock
xchg
fwait
and
insb
xchg
inc
bound
daa
popa
or
cltd
cmpsl
or
xor
push
jp
xor
lcall
jmp
or
aaa
lcall
sbb
or
add
and
int
ja
loop,pt
je
or
pop
or
or
inc
push
scas
cmp
xor
stos
in
push
cmp
mov
outsb
mov
push
xchg
aaa
test
scas
insl
fdivrs
outsl
cmpl
or
and
inc
inc
adc
mov
push
xor
mov
add
cmp
sub
add
scas
push
aaa
notl
push
push
repz
jmp
jg
addr16
mov
dec
in
xorl
jle
aaa
sarb
out
push
mov
push
scas
sahf
scas
pop
xchg
andl
and
xchg
out
mov
cmp
mov
inc
icebp
and
sub
or
adc
movsb
mov
xor
pop
das
imul
add
pop
mov
dec
es
cmp
hlt
cmp
pop
imul
jnp
addr16
cwtl
fucomip
adcb
jne
in
xor
aas
xchg
mov
loopne
sbb
mov
imul
or
or
inc
test
jb
jp
adc
or
ds
test
jg
jns
das
mov
jbe
rclb
loopne
jns
roll
push
dec
ja
loop
xchg
add
jg
icebp
pop
push
xchg
adc
ljmp
std
jo
inc
jnp
push
mov
inc
pop
cld
push
mov
subl
sbb
cmpsl
shll
pop
outsb
scas
cmp
lods
pop
xor
and
adcb
mov
mov
dec
push
les
fldl
mov
pop
mov
sbb
rorb
cmp
push
sub
sbb
lret
cmp
pop
rorb
es
insl
dec
adc
leave
popf
shll
and
dec
adc
jns
sub
mov
fistps
or
gs
push
mov
call
dec
jns
sahf
or
mov
or
shrb
dec
pop
das
scas
lods
mov
cmp
out
sub
rclb
enter
or
lcall
cltd
mov
testl
pop
sbb
jmp
pop
add
sbb
push
push
bswap
inc
xchg
push
sbb
pusha
pop
xchg
sub
cmpl
mov
xchg
aas
xchg
sub
xor
jne
dec
aaa
mov
pop
xchg
mov
mov
jle
xchg
mov
jno
inc
push
lods
add
cltd
cld
jbe
popa
stos
pusha
or
lods
and
cli
mov
pusha
pop
scas
cli
pop
adc
repnz
push
in
push
dec
jl
jae
push
mov
int3
pop
jp
in
cmp
mov
xchg
lods
in
sub
iret
loop
jmp
popf
sbbb
mov
lahf
and
pop
std
test
add
fidivs
scas
lahf
jecxz
inc
std
mov
dec
jl
loop
mov
dec
adc
lds
pop
in
xchg
adc
in
and
stc
and
insl
inc
iret
jne
iret
xor
xor
push
insl
adc
in
adcb
jge
fisubrl
mov
cmp
jl
insl
lahf
pushf
imul
sub
out
and
adc
cmpsl
stc
jmp
jns
push
xor
mov
loop
outsb
clc
mov
inc
mov
fdivl
pop
frstor
jecxz
and
cmc
fucomp
daa
xor
outsl
rorb
sub
pop
push
popf
icebp
add
sbb
dec
pop
jg
mov
cmpl
cmc
jge
jae
popf
sbb
pusha
leave
mov
js
mov
mov
ret
adc
adc
and
jbe
xor
cld
mov
ret
lret
sbb
xor
pop
push
mov
add
pop
cmp
loop
sub
xchg
xchg
adcb
pushf
js
jbe
jmp
test
xchg
nop
lret
and
fbld
cmp
lock
rol
dec
add
and
dec
icebp
insb
aas
cwtl
pop
ret
mov
sub
sbb
fsubr
pop
or
push
cltd
movsb
pop
bswap
test
and
loope
shll
scas
ljmp
icebp
repnz
repz
ja
nop
movsb
mov
insl
in
sahf
shlb
inc
add
hlt
adc
loope
ja
mov
pop
aas
insb
ret
pop
shll
and
pop
and
lcall
and
in
cltd
js
pop
lds
mov
dec
add
push
aas
lret
mov
add
mov
orb
sub
mov
push
scas
jge
pop
mov
movsl
mov
in
arpl
fwait
popf
sub
and
inc
stos
stc
pop
addr16
notb
pop
dec
dec
or
aas
jp
inc
lods
pop
push
stos
inc
aaa
jmp
push
lret
test
cmp
dec
cmp
out
loope
fwait
or
mov
int
cli
shlb
jmp
xchg
jns
pop
out
lret
aas
fisubrs
cmp
lea
cmp
cmp
xchg
jecxz
pop
push
push
cmp
idivl
push
xchg
jnp
mov
out
pop
dec
test
out
sbb
mov
mov
push
in
xchg
push
stc
mov
xchg
pop
mov
adc
pop
arpl
adc
lods
inc
and
inc
popf
mov
cmp
scas
ret
add
sub
or
cmpl
push
imul
jbe
or
sub
pop
cmc
jge
or
popa
and
loope
out
lcall
pop
bound
inc
push
cmp
das
addr16
in
inc
sbb
ds
aad
and
push
inc
push
xchg
sub
mov
push
scas
or
insl
mov
js
mov
dec
in
rol
gs
out
daa
clc
repnz
add
sbb
push
test
or
mov
in
lret
sbb
xchg
lret
sti
icebp
add
lods
xorb
cld
dec
mov
sub
ss
push
push
mov
popf
push
in
sub
dec
adc
aaa
call
gs
repz
sub
jmp
sbb
cmp
mov
jno
test
sbb
cld
mov
clc
negb
adc
das
mov
roll
dec
mov
mov
enter
sub
mov
out
cmc
stos
lods
rolb
push
cmp
mov
jae
gs
pop
push
inc
fdivrp
ja
push
mov
cwtl
push
ret
jbe
outsb
mov
pop
nop
sub
lods
cmp
dec
loop
add
dec
mov
lock
ret
sbb
fs
adc
mov
arpl
into
insl
insb
mov
imul
pusha
cwtl
sub
add
mov
ror
pop
mov
icebp
in
xor
dec
lods
pusha
jnp
cmp
lret
fsubrs
outsb
js
pop
adc
gs
loopne
int
adc
ja
out
call
and
not
xchg
sub
sbb
xchg
cmp
mov
pop
xor
mov
sbb
mov
loop
jg
bound
aam
repz
cmp
sub
in
pop
xchg
dec
flds
jo
xchg
xchg
test
fisttpl
sar
inc
arpl
push
lods
lods
inc
or
ljmp
shll
fistpl
ret
fcmovnbe
jg
cmp
sub
gs
aas
pop
mov
xchg
pop
sahf
or
ret
mov
pop
fcomp
nop
mov
inc
fnsave
aaa
int
adc
lret
mov
mov
or
sbb
scas
cmpsb
mov
adc
jno
test
mov
cs
icebp
movsl
cmp
push
std
call
pop
lea
sub
jns
in
stos
rclb
lahf
bound
sbb
dec
sub
pop
mov
push
leave
mov
stos
in
xor
push
push
cmpsb
adcb
or
andl
xchg
jl,pt
ret
sub
stos
out
push
sbb
pop
arpl
add
mov
cmp
rorb
gs
mov
int
jno
sbbl
negl
sub
cmp
ret
shlb
jle
sbb
and
cmc
sbb
add
push
mov
icebp
arpl
insl
dec
inc
push
stos
test
xor
ljmp
and
sub
out
sahf
xchg
in
add
lcall
sub
or
dec
and
sti
cmp
xlat
out
test
in
ror
fmuls
test
cmp
fidivrs
movsl
mov
pop
fidivs
sbb
lret
dec
outsb
pop
test
pop
mov
stc
mov
in
shlb
mov
cli
xchg
cmp
les
inc
dec
cltd
xor
pop
repz
rep
or
mov
jle
in
addr16
notl
in
xlat
insl
insl
mov
out
lahf
or
pusha
mov
inc
sbb
shlb
stos
mov
out
dec
sbb
push
cs
pushl
push
mov
jnp
sub
ja
mov
stc
nop
dec
adc
mov
jge
lret
ret
mov
dec
push
xchg
adc
push
fisttpll
and
add
leave
dec
outsb
movsl
nop
lods
sub
adc
dec
pop
inc
sti
loopne
mov
cmp
sbb
inc
sub
dec
cmp
dec
push
push
push
aaa
into
xchg
ljmp
xor
cmpsb
or
push
mov
movsl
xchg
jnp
js
or
sbb
lock
es
jb
push
sub
and
inc
gs
bound
std
xchg
negl
adc
jge
es
sbb
pushf
popf
jmp
scas
push
cmp
out
loop
xor
inc
xor
mov
mov
jle
js
add
cwtl
xchg
aam
imul
ss
push
lret
mov
jmp
xchg
pushf
or
xor
push
sub
fnstenv
adc
bound
and
dec
push
mov
inc
enter
sbb
in
inc
push
jnp
dec
and
pushf
pop
imul
mov
push
pop
imul
lcall
fmulp
dec
loop
jle
mov
mov
mov
push
xor
in
setns
lcall
shll
loop
push
add
mov
fcmovnbe
xchg
sbb
adc
loop
dec
push
sbb
push
mov
mov
mov
fsubs
xor
xchg
leave
push
test
hlt
jne
pop
jns
inc
and
pop
push
sahf
lret
push
pmaddwd
cmp
fcomp
sbb
xchg
xchg
jmp
sbb
push
jns
sbb
mov
xchg
into
or
push
daa
xlat
rclb
in
popa
clc
push
aaa
mov
loopne
lock
add
add
insb
sub
lret
mov
cmp
mov
push
or
and
outsl
jp
aad
in
clc
leave
dec
push
adc
mov
orl
fists
pop
movsl
out
lret
xchg
push
xchg
fcoml
or
xchg
push
adc
sbb
ss
xchg
lods
pop
push
hlt
mov
push
mov
stos
inc
mov
cmpsb
jmp
aad
fucompp
dec
and
jl
sbb
hlt
fnsave
outsb
cmp
rcrl
ret
jp
sbb
call
xchg
mov
mov
inc
dec
std
test
jo
dec
aaa
pusha
inc
inc
xchg
pop
adc
push
pop
cwtl
scas
jno
inc
sub
test
test
stos
mov
cs
or
push
xor
fcmovnu
cmpsl
dec
dec
jg
mov
repnz
lcall
jno,pt
pop
sub
dec
das
clc
mov
and
push
pop
dec
cmp
movsb
cmp
add
scas
and
inc
fiadds
jnp
xchg
mov
adc
push
bound
sub
mov
iret
jbe
lods
cmp
cmpl
and
xchg
popf
call
adc
jle
ljmp
dec
mov
push
mov
ret
fistpll
add
jg
push
mov
xlat
mov
dec
or
inc
pop
cmpsb
in
xor
hlt
or
jmp
movsb
xor
aad
xchg
jmp
loopne
adc
gs
ljmp
jg
mov
iret
movsl
jecxz
cmp
jne
mov
js
and
stos
pop
dec
mov
adc
inc
out
xor
and
daa
push
jne
fdivr
dec
test
cmp
arpl
gs
sbb
and
mov
fcomps
dec
loopne
jg
insl
mov
icebp
add
outsb
xchg
mov
mov
mov
pop
out
push
mov
lcall
push
daa
stos
cli
jecxz
ss
xchg
roll
enter
mov
and
js
or
out
jo
mov
stc
inc
int
jl
sub
lahf
pop
sub
cmp
fwait
xchg
ss
imul
xchg
xor
and
mov
std
lock
fisttps
jp
bnd
movsb
push
or
cs
std
repnz
xor
mov
xchg
es
cld
mov
sbb
cmp
or
testl
jne
push
cmp
ds
xor
inc
xchg
sbb
add
jnp
dec
jecxz
pop
ljmp
jno
loope
xor
dec
idivb
test
stos
adc
rcrb
sub
faddl
repz
fwait
sbb
inc
in
inc
test
xchg
inc
xchg
shll
insb
push
push
jge
roll
sbb
dec
loop
nop
insl
ljmp
jle
xor
outsl
popa
jecxz
imul
lea
mov
inc
fdivs
ja
sbb
xchg
idivb
adc
mov
pop
sbb
popf
outsl
cmpsl
and
mov
clc
lea
mov
inc
jae
gs
std
cltd
bound
cmp
jb
pop
icebp
xchg
push
fldl
leave
mov
out
add
scas
mov
add
mov
out
pushf
xchg
xchg
bound
adc
xor
imul
fs
mov
repnz
xchg
shrb
lock
dec
ffree
cmp
xchg
mov
cmc
lret
jge
sbb
pop
xor
jl
les
jae
shll
test
fsubp
mov
int3
test
sti
rcrl
fsubrl
mov
xchg
adc
std
pop
mov
loopne
ja
loop
xchg
or
xor
jecxz
into
lcall
sub
add
aaa
adc
mov
arpl
pop
lods
mov
loope
add
adc
jns
aas
pop
cmp
jle
adc
ds
or
push
adc
inc
clc
mov
arpl
mov
xchg
push
lahf
lcall
push
xchg
xlat
and
ret
shr
inc
sbb
nop
rol
xchg
lock
ret
lcall
dec
pop
lock
outsb
xor
fwait
bound
inc
lcall
add
movd
repz
ds
inc
bound
sbb
add
ret
push
jno
imul
call
cmp
addl
push
push
xchg
lcall
out
lcall
enter
dec
stos
hlt
jb
mov
dec
inc
inc
lock
xchg
dec
jb
je
push
jg
cmp
sub
into
pop
inc
cltd
rcr
sub
js
inc
push
scas
stc
jb
dec
incb
inc
add
cli
test
xchg
xchg
andl
in
sti
mov
add
xor
fnstenv
xchg
cli
out
sahf
push
sbb
popa
pop
or
fistpl
mov
fbstp
dec
mov
push
mov
push
adc
pusha
inc
pop
xchg
dec
mov
adc
shll
cwtl
fildl
and
inc
fwait
push
or
xchg
and
mov
pusha
hlt
add
and
xor
mov
push
sub
or
xor
xchg
insb
adc
aaa
fs
inc
adc
xchg
sub
pop
lock
adc
je
add
dec
xchg
jmp
dec
sbb
loope
cmp
jne
pop
xor
repz
fcoml
inc
lret
out
clc
push
mov
aam
xor
xor
cltd
aas
dec
mov
rclb
arpl
arpl
sub
or
ljmp
cmpsl
and
mov
test
das
push
push
xchg
dec
std
mov
call
dec
stc
or
out
outsl
mov
dec
imulb
lcall
dec
flds
loop
jp
xchg
mov
fwait
add
movsl
mov
ret
cmc
out
fstpl
push
dec
mov
cmp
jnp
jmp
sbb
cmp
xor
mov
mov
push
mov
scas
jge
cmpsl
mov
mov
jp
push
inc
xorps
xor
inc
shrb
sbb
dec
les
pusha
xor
xchg
sbb
jge
jae
jb
cmpb
popf
jae
cmc
int3
dec
pop
push
xchg
ljmp
jne
add
enter
mov
add
stos
mov
pop
push
or
push
fbstp
sub
or
push
sbb
test
orl
mov
pop
adc
push
in
sbb
sub
mov
adc
inc
addl
jmp
jnp
ret
push
pop
sub
outsl
insl
cmp
mov
cmp
stc
mov
xchg
lds
sub
pop
push
dec
pop
imul
loope
in
adc
pop
inc
pop
cmpsl
cld
js
mov
xor
adc
xchg
pusha
movsb
mov
insb
sbb
jp
push
mov
aad
pop
ret
mov
or
sub
pop
pop
test
jnp
insb
pop
insl
stos
aam
into
cmc
pop
mov
or
adc
adc
jne
xchg
shlb
shlb
xor
mov
sbb
mov
add
and
jmp
adc
cmp
and
dec
mov
lods
adc
repz
mov
nop
or
or
outsl
sbb
or
pop
adc
data16
xor
rorb
enter
fsts
push
sub
dec
loope
cmp
in
jo
nop
sub
mov
lret
xor
lcall
jno
jle
or
std
data16
ret
xor
xchg
ds
out
aam
int3
jne
xchg
bound
in
push
movsl
cmp
push
inc
fmull
push
orl
jne
gs
cmp
mov
jbe
inc
and
loop
adc
jno
and
xor
cmp
cmpsl
push
xor
loop
maxps
stos
pop
rorl
addr16
xor
jns
mov
jecxz
fcomp
xchg
into
xchg
mov
hlt
sahf
in
movl
sub
mov
mov
out
jmp
test
cld
mov
outsl
mov
pop
inc
sti
test
add
mov
in
jne
sbb
inc
jno
mov
in
orb
jle
and
iret
hlt
push
or
leave
scas
adc
sti
jg
push
ds
int
jnp
fwait
push
je
insb
cmpsb
sbb
inc
xlat
out
mov
mov
xchg
shl
movsl
xor
add
clc
rorl
push
stos
sarl
dec
inc
in
lds
push
lock
pop
je
pushf
add
out
xchg
push
stos
dec
adc
xchg
pusha
mov
adc
outsb
stos
inc
les
push
add
sub
jo
pop
ret
hlt
jl
sti
mov
ret
pop
push
and
cmp
pop
in
or
add
mov
push
mov
or
in
inc
ds
add
repnz
mov
pop
push
out
adc
mov
pushf
daa
lods
rorb
add
mov
aas
push
jp
mov
mov
push
out
sub
inc
or
mov
sbb
or
dec
aam
or
hlt
popa
jge
sahf
scas
sub
imul
lock
sub
mov
inc
in
rcrb
push
mov
fsubr
sub
inc
pop
or
stc
cld
adc
jmp
add
subb
jbe
sub
cmp
cmp
push
cmp
inc
in
loope
push
or
aaa
out
cltd
mov
jecxz
dec
xchg
mov
add
inc
mov
xchg
icebp
xor
mov
mov
test
adc
mov
outsb
push
fadds
fcoml
aad
or
dec
out
ja
stc
es
mov
nop
jnp
jns
mov
in
mov
xor
daa
mov
mov
push
std
or
xchg
add
add
out
pushf
xor
adc
mov
mov
cltd
pop
mov
or
mov
xorb
push
xchg
testb
fsubr
fnsave
xor
fildll
arpl
std
popa
mov
cltd
xor
movd
sbbb
inc
adc
pop
add
or
fstpl
daa
dec
inc
out
push
ljmp
cmpsl
mov
push
or
stc
mov
stc
dec
sub
pop
out
mov
fdivs
leave
mov
dec
addr16
popf
mov
jg
pop
stc
xchg
dec
pop
jnp
rcll
xor
xchg
fwait
adc
adc
clc
inc
xor
sbb
pushf
xor
shl
dec
add
adc
and
sahf
cs
sbb
loope
js
in
push
inc
jae
cli
lcall
adc
mov
cmp
popa
cmp
rcr
cmp
push
fiaddl
lret
es
in
fisttpll
push
add
fisttpl
hlt
leave
sahf
sbb
inc
and
loop
out
xor
pop
sbbb
mov
inc
das
das
mov
sub
and
scas
icebp
xor
stos
std
mov
int
push
xor
adc
mov
insl
incb
bnd
add
jecxz
les
test
outsb
sub
sub
mov
popf
adcl
enter
jns
sahf
add
push
sub
mov
stos
mov
lahf
test
sub
sub
and
ret
in
sbb
mov
mov
or
std
repz
cmpl
dec
pop
repz
cltd
xor
lds
cli
cs
scas
inc
jmp
or
je
cli
push
adc
test
cmp
and
incb
dec
jbe
es
push
dec
dec
fstpl
pusha
cmp
addr16
sbb
mov
mov
xor
fimull
popf
call
pop
xor
xchg
sub
addr16
or
std
mov
cltd
je
enter
sub
cmpsb
sar
inc
loopne
mov
insl
sbb
out
enter
fwait
mov
xchg
ret
lock
test
gs
cld
inc
call
xchg
and
adc
leave
add
imul
jp
mov
or
push
mov
xchg
fcoml
fistpl
daa
push
lods
push
cmp
fstl
inc
ret
sbb
inc
dec
add
lock
inc
aad
sbb
stos
mov
mov
inc
aad
lcall
data16
and
push
rolb
inc
dec
lea
es
xorb
dec
repnz
mov
sbb
lret
insl
xchg
sub
cmp
jg
scas
out
mov
nop
daa
out
inc
fcmovb
or
inc
push
outsb
fs
pusha
push
add
xchg
jmp
or
lods
jecxz
fbld
int
or
xor
lret
pusha
sarb
inc
scas
sbb
iret
mov
xchg
cmp
push
lods
pop
pop
sbb
jo
jno
and
push
jp
addl
or
pop
mov
out
in
insl
fdivrs
cmpsl
jge
leave
insl
pop
mov
inc
mov
pop
push
mov
mov
cmp
shll
jecxz
orb
pop
lea
imul
xchg
sub
push
mov
xchg
add
xor
mov
pusha
mov
xchg
sbb
jo
data16
ljmp
ret
mov
leave
int
imul
pop
mov
add
stc
nop
adc
or
mov
addr16
and
test
in
jmp
mov
ss
stos
in
fnstcw
jno
xchg
pop
stc
nop
dec
mov
testb
inc
ret
pop
jbe
mov
js
rcrl
movsl
cmp
xchg
xchg
cs
data16
jecxz
dec
adc
push
mov
inc
jae
mov
ret
adc
push
mov
mov
fidivl
pusha
imull
cmp
jle
mov
pushf
xor
testl
jae
inc
fadds
cmpsb
pop
not
or
mov
dec
jge
jnp
jg
test
lret
cld
or
mov
and
mov
int3
arpl
out
push
popf
ljmp
lock
mov
imul
sbb
cmp
and
leave
into
inc
ljmp
push
cmp
xchg
insl
arpl
mov
mov
mov
and
mov
xchg
stos
push
movsl
fisttpl
jns
mov
sub
push
cmp
xor
sbb
arpl
sahf
xor
push
std
mov
scas
push
mov
sbb
fdivp
push
sub
loop
cltd
adc
mov
repz
movsl
vcvtpd2ps
sbb
sub
sbb
punpckhdq
cmpsb
cmp
ret
pop
and
inc
loop
jns
sbb
cmpsb
cmp
mov
insl
jp
lds
cmp
mov
mov
jns
push
mov
cmpsb
sbb
mov
gs
nop
daa
jg
sbbb
movsl
loopne
fdivs
mov
jns
push
out
mov
xchg
jns
je
bound
in
inc
rclb
int3
arpl
dec
loope
mov
sbb
jno
and
loope
sbbb
cmp
push
jno
mov
loope
fs
jmp
xor
in
fidivl
push
lods
inc
xor
nop
daa
or
inc
mov
mov
sbb
rclb
std
xchg
xor
or
mov
rclb
lds
mov
movsb
add
repz
mov
xchg
mov
fsubs
movsb
cwtl
std
stos
inc
das
mov
push
das
cmp
cwtl
push
push
out
mov
outsb
add
imul
dec
xor
mov
imul
mov
ljmp
push
push
aam
cmp
push
lods
sbb
mov
push
xor
inc
mov
jno
add
call
inc
cmpsb
push
ljmp
sbb
stos
inc
lods
fwait
xor
fsubs
adc
je
dec
mov
sbb
fists
xor
sbb
sub
lea
clc
inc
add
pop
mov
repz
dec
daa
mov
dec
stos
add
sqrtps
jle
sbb
dec
xchg
fbstp
fidivs
pop
xchg
cwtl
das
dec
xchg
mov
ja
push
pop
hlt
test
jae
dec
xchg
int
leave
ficoms
push
popa
or
xor
mov
cwtl
das
adc
push
xchg
pop
repz
test
bound
jno
movsb
push
adc
test
pop
adc
insl
add
fs
cltd
lock
out
and
addr16
std
imul
pop
arpl
mov
mov
fcmove
shrd
fbstp
in
mov
push
iret
rep
cmp
pop
pop
mov
dec
fildll
mov
xchg
sub
inc
in
test
and
mov
pop
cmp
mov
xor
push
cltd
xor
lcall
adc
xchg
add
movsb
mov
or
cltd
add
mov
insb
inc
fisubl
jno
stos
mov
jne
mov
and
cmp
or
rcrw
jno
push
lcall
inc
inc
mov
cltd
mov
push
arpl
in
loopne
or
push
fs
insl
loope
inc
fldcw
xor
xchg
mov
jno
sbb
dec
das
pop
repz
or
add
je
push
push
mov
jmp
mov
hlt
or
pop
inc
sbb
rorb
pop
mov
outsb
push
outsb
mov
shl
repz
in
adc
and
insb
add
xchg
dec
jecxz
adc
inc
out
add
fidivl
or
xchg
lods
inc
popa
fwait
xor
cltd
xor
sbb
mov
lea
ljmp
xchg
sub
xchg
sbb
dec
pop
testl
int3
push
mov
dec
sbb
jbe
mov
sahf
xor
jge
xchg
add
and
decb
sub
subl
adc
test
subl
lcall
sub
inc
mov
je
iret
xchg
scas
cltd
xor
mov
js
inc
mov
or
mov
mov
stc
nop
mov
push
jne
out
int
mov
popa
test
mov
push
out
daa
mov
je
out
lcall
dec
in
out
push
adc
lea
pop
mov
mov
fisubs
dec
xor
je
xchg
mov
add
icebp
mov
sub
xor
mov
rcl
inc
fiadds
repz
and
inc
lahf
mov
jnp
push
lods
cwtl
sub
into
xchg
and
fistl
or
cmpsl
xchg
test
and
in
mov
pop
mov
mov
mov
mov
in
cmp
xchg
xor
cmpsl
ds
push
insl
cmpl
mov
loopne
aad
push
xor
sub
adc
jl
mov
movsl
popf
scas
into
fs
out
push
imul
inc
lea
xchg
sub
sarl
rclb
pop
xor
inc
cmp
jbe
popa
out
xchg
mov
shll
adc
aad
xor
push
cmp
cld
shlb
adc
shrl
sbb
ds
int3
arpl
ljmp
sub
addr16
jg
pop
scas
les
push
mov
jge
stos
ja
and
test
mov
ljmp
sbb
mov
add
mov
mov
or
lods
cmp
pushf
pop
dec
push
jne
pop
daa
sbb
xchg
lock
xchg
and
pop
lods
add
cmc
lcall
sbb
xor
pushf
out
and
into
ja
imul
mov
xchg
mov
imul
xorb
ret
jns
lcall
push
adc
adc
test
cli
sub
int3
cmp
mov
mov
add
push
lcall
xchg
pop
xor
mov
es
mov
jp
lods
dec
imul
inc
dec
rolb
movhlps
daa
xor
xchg
stos
xor
add
hlt
cmpb
mov
and
aad
xor
jb
faddl
out
jmp
xor
das
notl
mov
sbb
in
je
fsubl
dec
les
out
or
testb
xor
mov
add
xchg
jnp
xchg
out
test
add
xor
dec
mov
sub
lods
orl
push
adc
inc
xor
or
in
sub
inc
scas
inc
je
sarb
mov
out
fldl
mov
mov
xchg
stos
xlat
cmpl
leave
cwtl
xchg
int3
punpckhwd
sbb
fs
das
lahf
cmpb
add
push
push
adc
insb
jb
das
movsb
pop
std
sub
pop
std
call
iret
sbb
lahf
or
xchg
repz
sbb
std
mov
adc
and
mov
sub
push
jmp
push
or
inc
sub
xchg
add
scas
cmp
jb
mov
lds
push
and
xchg
xchg
fisubrl
xchg
jge
js
sarb
aad
shrl
repz
inc
enter
mov
dec
out
decb
dec
lds
les
add
pop
into
stos
fistps
popf
jnp
mov
xchg
adc
add
xchg
cwtl
pop
mov
or
adc
nop
dec
in
mov
sub
iret
test
mov
push
data16
jns
inc
fnstcw
jns
stos
mov
addr16
dec
enter
dec
dec
les
inc
xlat
sti
aas
xor
test
or
ljmp
inc
fstl
ds
jmp
mov
hlt
add
adc
movsb
sub
push
adc
in
and
clc
fnstenv
mov
lea
ja
lahf
aaa
cmp
jge
popa
cmpsb
data16
sbb
xchg
cli
pop
jle
sub
ret
xchg
mov
ljmp
mov
sub
loopne
movsb
pop
fisubs
mov
xchg
leave
loopne
mov
jmp
inc
jbe
jmp
lods
inc
mov
sbb
push
push
or
cli
sub
stos
outsl
push
fmul
jmp
jg
int3
int3
arpl
mov
je
cwtl
outsl
pushf
jno
or
mov
inc
lahf
xor
add
inc
mov
repnz
pop
push
loop
test
loope
mov
dec
je
fildl
subb
add
pop
jge
jb
fmuls
rcrl
mov
jle
pusha
cmp
fwait
xor
pop
ret
pop
insl
stos
jb
xchg
aad
and
sub
rol
lret
inc
out
xchg
mov
shrb
shlb
cmc
cmp
loope
popf
das
push
add
mov
lock
outsb
loopne
dec
mov
loopne
sbb
ss
int3
clc
dec
fisttpl
inc
xchg
fisubrs
leave
inc
sarl
loope
stos
mov
jns
sahf
stos
jne
nop
fs
mov
in
push
imul
inc
jl
push
mov
cmp
jp
je
bound
arpl
and
push
mov
imul
stos
dec
xchg
fbld
push
pop
push
shrl
lret
sub
fcompl
xor
add
xchg
jle
or
es
inc
fadds
push
or
push
test
aaa
push
popf
adc
rol
movsb
rorb
leave
cmp
mov
ffreep
add
sbb
ljmp
and
loopne
xchg
mov
add
mov
imul
xchg
xchg
insl
xchg
pushf
mov
cmpb
xor
fmull
and
test
inc
xor
mov
inc
fs
cmp
push
movsb
pop
mov
push
stos
jns
sahf
xchg
and
dec
loop
ja
stos
push
nop
bound
js
dec
ret
dec
aaa
pop
icebp
push
mov
aas
sub
popf
fidivl
push
and
inc
out
flds
sub
fdivl
mov
fsubs
adc
mov
dec
mov
rolb
cmpb
inc
ret
sub
sub
xchg
mov
mov
ljmp
subb
mov
push
in
out
xchg
mov
jp
fmuls
aaa
fidivrl
ss
adc
pop
stos
outsl
popa
lret
jmp
xlat
and
std
xor
push
rcrl
mov
lret
addr16
mov
es
fnstsw
cmp
rcrb
jb
mov
mov
mov
sbbb
push
movb
cmp
popf
and
cld
movsl
inc
insb
add
adc
in
push
leave
call
fwait
ljmp
ret
cmc
jmp
sub
mov
in
dec
leave
push
or
xchg
shl
adc
mov
jle
aaa
shll
jns
sbb
loopne
stc
call
or
ljmp
push
cli
ret
daa
jne
adc
pushw
mov
mov
xor
dec
loopne
push
sbb
nop
cmp
xor
push
popf
xchg
xor
sub
add
inc
lcall
jp
addr16
lret
test
push
hlt
lret
scas
inc
std
mov
cmp
ja
sarb
daa
dec
iret
data16
ficoml
fwait
mov
push
cwtl
adc
xchg
mov
outsl
mov
xchg
loope
repnz
rcrl
pushf
popa
mov
push
push
mov
jg
shll
adc
push
ret
cli
js
les
out
xor
daa
push
mov
or
inc
push
test
mov
xchg
xsha1
cmpsb
int
imul
cmp
cmp
repnz
fs
negl
ljmp
or
mov
jae
pop
testb
outsb
sbb
loope
xchg
mov
inc
nop
push
xchg
pop
xchg
ds
jnp
icebp
cmp
or
push
movsl
or
add
lcall
in
mov
call
lock
sarl
and
imul
in
push
mov
mov
fildl
lock
and
mov
sub
icebp
pop
jns
cmpsl
stos
sub
sti
popf
lret
fsubl
sbb
jg
popa
lods
mov
out
push
jmp
push
out
and
fstl
dec
cmpsl
push
fidivrl
scas
jp
mov
shll
xchg
jge
xchg
cmp
pop
pop
popf
xchg
pusha
gs
push
es
xor
cld
aaa
js
push
aas
jl
adc
insl
sub
add
data16
xor
fstpl
aad
push
pop
cmp
outsl
inc
testl
mov
sti
push
out
xor
mov
popa
sub
inc
push
push
pushf
xor
fstl
push
cmp
xchg
push
or
jnp
pop
or
sbb
mov
test
mov
insb
sahf
adc
xlat
xchg
loope
nopl
je
cmp
mov
negl
adcl
cmp
mov
scas
and
jge
iret
cmpsb
pop
out
movsl
scas
jb
test
cmp
pushf
sahf
xor
data16
test
mov
or
push
cmpsl
pusha
cltd
rolb
movsl
fisttpll
lahf
in
jle
jecxz
pop
lret
xor
icebp
xlat
ss
jmp
or
cld
mov
subl
test
adc
xchg
daa
test
out
out
mov
stc
lret
js
arpl
mov
xor
xchg
ss
mov
sahf
arpl
cmp
jae
xchg
pusha
gs
xor
les
and
jb
fcoms
popa
movsl
xchg
pop
and
or
lods
pusha
xchg
pop
adcb
test
sbb
xor
fadds
add
mov
mov
adc
gs
cmp
xor
arpl
push
add
scas
mov
pop
and
outsl
adcl
cmp
out
cmc
cmp
stos
insb
add
int3
fcoms
faddl
sbb
pop
cmpsl
dec
test
cmp
sbb
add
or
daa
jge
mov
push
fs
xchg
mov
aaa
ret
inc
mov
jg
lret
adc
subb
or
icebp
fnstsw
repnz
clc
dec
or
and
or
cmp
cs
imull
pop
popa
and
aas
push
loop
fs
idivb
sub
inc
js
and
sub
jge
bound
pop
arpl
lds
cmpsl
push
add
mov
jmp
cmc
cwtl
ss
inc
lcall
jp
inc
jns
gs
sub
push
xor
popa
xorl
ljmp
dec
lds
mov
mov
mov
fwait
adc
subl
dec
hlt
sbb
add
outsl
mov
and
dec
aad
fsubrl
jge
sub
sub
aam
pop
jl
mov
dec
inc
push
mov
xchg
xor
xchg
nop
nop
xchg
add
lds
enter
fistpl
paddusw
out
fmull
movsb
popa
into
mov
mov
shrl
lds
sarl
out
pop
dec
iret
pusha
mov
and
aaa
xlat
xor
adc
stc
jmp
daa
xlat
mov
outsb
call
or
xorb
popa
cmp
jp
push
mov
cmp
outsl
mov
and
cmp
cmpb
push
jae
mov
push
into
loope
pop
mov
dec
mov
push
dec
test
sbb
dec
dec
test
hlt
jo
or
fsubs
push
fdivrl
xchg
stos
shr
and
int3
mov
add
push
in
and
cmc
cmp
rcrb
jl
outsb
inc
pushf
xchg
jae
popf
ss
movsb
out
out
repz
test
sar
mov
clc
es
data16
iret
gs
in
cmp
jo
je
xlat
in
lock
xorb
insb
lcall
push
rclb
sbb
popa
jbe
xor
bound
fstpl
adc
dec
nop
orl
pop
cmp
fwait
pop
loopne
test
imul
sbbl
lahf
aaa
iret
push
test
int
lock
cld
aad
mov
in
mov
sbb
fadds
in
cmp
and
or
cmc
xchg
outsl
int
cmp
pop
mov
gs
xchg
jne
dec
addr16
xor
dec
loop
push
addr16
popw
cmp
jb
xor
mov
ja
sub
inc
aaa
call
cmp
in
xor
in
cmp
out
jg,pn
xchg
pop
insb
loop
popa
jnp
and
in
stos
push
int3
push
imul
pusha
cwtl
outsl
fisubrs
dec
or
dec
insl
hlt
movsl
cmp
mov
cmp
cmp
or
mov
inc
adc
add
push
mov
mov
jns
cmpsl
insb
std
xchg
sbb
outsb
add
or
mov
and
mov
xor
pop
icebp
lahf
test
jecxz
shlb
std
stos
cmpsb
pusha
sbb
xchg
sub
xor
sub
shlb
cmp
inc
movsl
icebp
add
in
mov
or
jnp
adc
sub
loope
xor
inc
rcll
rcl
insl
xchg
jg
dec
dec
and
dec
cmp
pop
sbbb
dec
sbb
js
jge
inc
xor
cmpb
cmp
jbe
push
dec
xchg
outsl
push
inc
push
dec
ss
int3
ss
mov
ds
inc
mov
mov
cltd
dec
add
scas
pop
sbb
test
or
pushf
outsl
sbb
and
push
in
fadds
xchg
jmp
je
jae
pop
cmp
movsb
pop
mov
fidivrl
push
push
adc
fcompl
testb
sub
fwait
xchg
jbe
mov
xlat
push
aas
cld
addl
lds
or
inc
dec
lcall
pop
jne
add
insb
arpl
stos
dec
cmpsb
imul
mov
push
repz
and
js
jle
mov
xchg
lea
sahf
ss
push
xor
inc
lret
xor
int
dec
jl
fdivl
insl
pop
aas
xor
lods
jns
lahf
ds
inc
mov
insl
push
scas
dec
loope
rol
cmp
mov
fisubrs
fldl
cmp
cmp
xchg
dec
js
push
dec
cmp
sahf
dec
ljmp
push
dec
outsl
mov
jo
pusha
stos
gs
mov
data16
jne
xor
jecxz
mov
pushl
cmp
ret
mov
pop
rolb
mov
into
inc
lock
lea
pop
scas
cmpsl
sub
out
outsb
in
or
mov
mov
outsb
mov
repz
arpl
xor
int
add
dec
fisubrs
nop
imul
push
cwtl
push
sub
push
in
rcrl
or
lret
sahf
jecxz
xor
and
sub
pop
cmp
dec
int
mov
icebp
mov
mov
mov
push
int3
mov
ds
cmc
es
jecxz
lea
insl
mov
sbb
arpl
ficoms
loope
or
xchg
mov
out
adc
push
mov
xchg
jl
mov
adc
inc
jge
push
pusha
data16
cmp
mov
xor
sub
push
lret
pop
push
push
pop
fisttpll
stos
fs
js
pop
rolb
arpl
push
imul
cltd
pop
lret
fnstenv
test
pop
int3
bound
cli
cmp
or
ds
dec
jle
sysexit
repz
mov
divb
sub
adc
fsubrs
je
and
loopne
imul
cmpb
and
popa
xor
dec
or
stc
xchg
pop
sub
cmp
and
xchg
push
cmp
xor
cmpsb
imul
test
sarb
jg
insl
xchg
dec
xchg
or
stos
inc
mov
fists
iret
adc
test
sub
outsb
mov
cmp
shrl
and
xchg
test
cld
sbb
cmp
fbld
out
in
sbbl
data16
and
mov
insl
push
int3
push
dec
popa
clc
jle
inc
shrb
lock
pop
icebp
pop
clc
or
out
js
sahf
jnp
sbb
mov
xor
enter
xchg
cmpsl
and
pop
xor
repnz
mov
sbb
mov
or
push
loop
pushf
pop
shll
in
movsl
adc
ss
cld
pop
out
pop
or
fcoml
xor
pop
out
jp,pt
sbb
cltd
mov
push
xchg
orb
mov
cwtl
jae
jno
jecxz
ror
push
lds
sub
xchg
lds
out
cmpsl
mov
iret
test
xor
ret
test
shll
scas
jno
xchg
push
sub
lahf
xchg
into
push
icebp
dec
fdivrl
push
push
or
inc
das
out
js
cmp
push
cmp
push
mov
pop
scas
pop
rcr
dec
mov
je
push
add
inc
js
push
lret
pop
aaa
scas
inc
loope
inc
mov
sbb
rcrl
lds
push
and
mov
and
cmp
push
insl
or
es
sbb
flds
popf
out
mov
out
mov
sub
mov
mov
sbb
adc
lds
xorl
icebp
mov
mov
sbb
ss
pop
mov
loope
cmpsl
adc
xor
sub
jno
in
pop
xor
lret
add
cmp
jmp
jno
jg
sbb
xor
nop
push
data16
xor
or
xchg
fimuls
cmpsb
cmpsb
imul
sbb
fdivl
cs
cmpb
mov
pop
push
dec
loop
push
js
bound
inc
mov
loop
pop
mov
test
pop
movsl
and
sub
xor
out
es
xlat
rorl
fnstsw
push
mov
fisubl
dec
cmc
clc
sub
cmpsb
jecxz
sbb
push
mov
xchg
fadds
or
mov
aas
and
hlt
xor
ja
jns
loopne
and
jae
outsl
cmp
in
dec
out
js
orb
imul
jns
nop
test
jmp
scas
add
sub
mov
outsl
push
lea
mov
dec
xor
mov
cmp
loopne
dec
rcr
inc
out
dec
rorl
lods
lcall
jmp
les
adc
in
movsl
cltd
mov
jecxz
in
int3
aas
mov
add
cmp
push
shrb
and
lds
push
jmp
cmp
sbb
pop
shrb
sub
daa
cmpb
pop
mov
pop
into
jnp
fsubrs
pushf
push
mov
pop
fs
roll
gs
push
sub
xchg
xchg
xor
insl
lahf
dec
cltd
dec
rcrb
arpl
das
inc
jge
pusha
popa
jo
inc
xor
iret
fwait
gs
dec
pop
adc
lods
pop
sbb
pop
test
xlat
push
in
push
imul
fadds
test
jg
jo
sub
ret
lea
outsl
cmpl
dec
nop
jnp
shll
lret
push
movsl
outsb
jno
push
jge
mov
testb
fildl
jp
jae
mov
ljmp
xor
and
inc
pop
outsb
or
cli
jp
jne
mov
out
out
adc
sbb
and
out
leave
pop
adc
popa
sbb
push
push
cltd
inc
mov
lds
cli
xchg
jle
xor
pop
xor
mov
or
cwtl
sbb
and
nop
cmp
sbb
adc
jmp
ja
sbb
push
pop
push
into
inc
inc
repnz
inc
daa
jmp
pop
out
push
xor
lds
jl
jle
movsb
pop
xor
xchg
mov
das
or
rorl
xchg
sub
ret
loop
mov
mov
push
out
testb
pop
or
stos
fwait
out
and
incl
repnz
outsl
cwtl
pop
adc
adc
or
pusha
mov
add
test
cmpsl
dec
out
mov
cmp
gs
cltd
pop
pop
lds
cmp
pushf
xor
sti
jno
inc
cltd
lahf
and
out
sub
jg
sub
or
sub
mov
les
jmp
cltd
adc
cli
cmpsb
imul
mov
jmp
mov
mov
sbb
mov
add
xlat
jo
lret
push
cmp
shrl
int
mov
out
mov
shl
dec
rol
mov
in
idivb
je
popf
xchg
xchg
ja
push
inc
int
test
test
js
outsb
ret
sbb
or
orl
mov
and
stos
addb
iret
add
ret
bound
cs
jle
pop
out
lahf
jnp
add
xor
lahf
pushf
xchg
inc
repz
mov
xor
scas
cltd
cli
pop
add
sbbb
lret
push
ret
movsl
and
jge
sbb
push
dec
xor
cmp
cmp
fwait
and
das
sti
adc
addr16
xor
loope
in
cmp
xor
rolb
cltd
mov
cli
pop
pop
hlt
dec
in
mov
xor
inc
xchg
andl
jnp
xchg
add
hlt
sub
popa
lods
xchg
xor
negb
mov
std
sub
out
inc
jp
cmpsb
inc
dec
push
stc
outsl
arpl
loopne
sub
addr16
jle
and
cmc
fs
enter
dec
sub
mov
sub
jp
jle
mov
jecxz
lret
xlat
fwait
adc
xor
or
loope
iret
cltd
es
fdiv
mov
cmpsb
cmp
and
xchg
cmp
es
cmp
inc
pusha
mov
cltd
das
dec
jnp
pop
dec
pushf
pop
les
pop
popf
push
mov
add
inc
je
pusha
mov
xchg
mov
fiaddl
stos
pop
mov
mov
adcl
and
mov
aam
xlat
xchg
lock
mov
in
jecxz
lock
mov
lock
sbbl
aam
data16
fnsave
sti
idiv
movsl
pop
mov
sub
repnz
jb
mov
jo
jmp
dec
push
ret
pop
test
lods
sahf
movsl
loope
xlat
mov
call
inc
dec
sbb
or
mov
es
or
push
jae
int3
arpl
mov
and
add
shrl
push
daa
mov
mov
loopne
movsb
adc
arpl
sub
nop
xchg
sub
pop
ljmp
pop
es
imul
aad
jle
jae
xor
mov
test
pop
scas
jecxz
or
cmp
shrb
push
call
mov
jge
cli
repz
push
adc
xor
fidivrl
or
pop
adc
add
ds
movsl
dec
xchg
cltd
xor
imul
popf
in
pop
dec
addl
mov
ret
hlt
sub
pusha
pop
adc
out
mov
or
add
decl
mov
sbb
push
mov
mov
inc
cmp
aaa
push
lcall
sbb
cmp
sbb
or
pop
push
jl
inc
jp
subl
clc
outsl
cld
test
xchg
jecxz
pop
icebp
xchg
add
imul
test
out
mov
push
in
lcall
push
pop
enter
mov
sarb
push
dec
fbld
testl
imul
js
mov
aam
mov
xorl
xor
roll
cmp
add
sub
lods
or
idivl
and
pop
mov
in
out
adcl
subb
ja
testb
out
fdivl
sbb
mov
insb
and
mov
in
hlt
push
ds
enter
mov
cmp
enter
aaa
or
insl
clc
push
push
mov
adc
insl
popa
cmp
mov
and
add
nop
fs
enter
cmpsb
loopne
data16
loop
pop
xor
inc
cwtl
arpl
push
sbb
gs
imul
or
jl
fwait
sub
push
pop
movsb
xor
adc
ficoml
dec
mov
adc
andl
shrl
out
movsb
jne
roll
roll
pop
mov
adcb
cli
mov
xor
or
int3
xor
setg
enter
inc
push
mov
adc
push
sub
sbb
iret
or
jns
data16
sub
adc
sbb
lret
pushf
mov
arpl
push
add
int
xor
test
rolb
fidivs
push
fs
pop
insl
jno
imul
add
or
push
cmpsl
jno
cmp
repz
xchg
jge
rcrb
xchg
in
sub
sahf
sbb
push
test
sbb
push
push
shrl
mov
pop
leave
addr16
jno
test
mov
mov
cmp
mov
dec
scas
add
push
aam
test
xor
xor
ret
add
out
jmp
jge
xchg
cs
jecxz
xor
imul
fmuls
cmpsl
inc
sti
std
cmp
cmp
insl
into
stos
xchg
out
call
stos
jge
hlt
dec
add
cmp
enter
ret
push
test
add
shll
push
call
jo
jo
inc
loope
jge
pop
xchg
nop
mov
pushf
mov
inc
jnp
ss
jo
xlat
jmp
and
imul
and
sbb
outsb
mov
scas
inc
add
call
push
jmp
push
ljmp
lds
movsb
cmp
and
xchg
out
mov
loopne
insb
add
inc
cmpsb
cmp
or
xchg
sub
xchg
cmp
or
push
enter
or
pop
out
leave
cwtl
outsl
push
or
mov
clc
push
xlat
cmp
enter
or
ret
xchg
pop
hlt
pop
xor
pop
sub
pop
sub
pop
insb
cltd
xor
enter
xor
mov
cmpsl
mov
cli
into
pop
mov
lahf
xor
mov
out
cmc
jmp
scas
add
outsb
lds
adcb
idiv
mov
lods
mov
loop
push
stos
pop
negl
ja
inc
mov
insb
push
lcall
ja
xchg
aas
xchg
sub
fldenv
push
test
jnp
pop
cli
lds
cmp
movb
outsl
pop
xchg
jns
or
mov
or
mov
push
je
add
mov
jge
cmp
mov
pop
sbb
xor
pop
add
mov
sub
mov
ds
aaa
inc
adc
bound
mov
lea
push
gs
fiadds
sub
dec
and
scas
shll
fidivrl
mov
sub
rclb
pop
cmc
aas
movsb
sub
aaa
pushf
inc
scas
cmc
pop
les
mov
in
gs
jne
les
fwait
xchg
aaa
cmp
xlat
jl
sub
mov
or
mov
call
sti
jo
sub
push
std
inc
mov
push
mov
scas
fwait
aas
and
aaa
loop
jge
jo
aaa
outsl
jae
and
aad
mov
mov
cli
lods
cmpsb
sub
test
jo
or
add
stos
pop
push
stc
cmpsb
mov
push
divl
mov
sub
jno
dec
adc
addr16
rol
cmp
aam
push
in
jo
movsl
xchg
cmp
shlb
repz
xchg
xor
fstl
ret
orb
out
scas
and
inc
push
add
mov
lret
add
push
out
das
leave
cwtl
inc
cmpsl
cmp
sub
es
mov
fs
pop
push
nop
jae
sub
cltd
inc
sbb
dec
stc
data16
mov
sub
fnsave
pushf
jb
cltd
inc
cs
cmp
daa
pop
imul
xor
cmp
rol
mov
imul
fisubs
shlb
jno
xchg
adcb
and
ds
adc
fs
repnz
scas
cs
sti
mov
jp
call
mov
test
mov
cwtl
xchg
out
clc
sbb
out
in
ret
jecxz
into
cld
and
xor
mov
inc
adc
cld
clc
inc
adc
lcall
jle
jmp
adc
sahf
cmp
lcall
bnd
push
loope
sahf
cmp
cld
loope
lret
imul
cmp
inc
adc
js
stos
std
idivl
pushf
fs
xlat
test
jne
jmp
sbb
bound
sahf
cmp
xchg
cmc
gs
cmpsl
xor
add
xorl
push
push
cmp
lahf
cmp
test
jne
shll
inc
repz
cmp
in
xchg
jne
lret
mov
icebp
fs
stos
mov
push
in
mov
adc
mov
fisttpl
and
ret
xchg
repnz
faddl
jp
jo
xchg
addr16
add
cmpl
daa
aam
cmc
movsb
sbb
pop
mov
inc
cmp
push
ds
pop
idiv
and
and
cmpsb
mov
xchg
mov
xchg
inc
and
in
lods
aas
imul
out
sahf
aaa
sub
dec
pop
adc
mov
ds
mov
cmp
and
pop
jb
cli
pop
add
sbb
scas
daa
es
push
mov
cmp
rclb
pop
aaa
mov
das
in
aam
xor
push
js
xor
shll
cmpsl
gs
pop
iret
movsb
jnp
push
inc
mov
scas
daa
cmp
and
adc
pop
or
rcrb
xor
es
aad
cmp
shrb
inc
iret
sub
ficomps
in
sub
addb
push
push
or
pop
stc
out
push
xchg
aas
sub
xchg
inc
xor
mov
dec
das
jmp
cmp
fwait
scas
sub
push
mulb
out
or
pushf
aaa
xor
mov
sub
imul
out
mov
xchg
aas
test
cltd
fsubrl
call
inc
mov
ljmp
inc
xchg
aas
add
or
xchg
pop
sub
inc
xchg
aas
lds
imul
insb
into
gs
inc
sahf
xor
inc
xchg
push
into
mov
mov
fdivrs
scas
and
inc
xor
cld
jns
cmp
sub
dec
adc
test
add
mov
hlt
jl
push
test
sbb
push
jp
adc
adc
dec
outsl
filds
dec
xchg
mov
lcall
enter
in
sbb
movsl
inc
ljmp
lret
push
mov
lods
std
retw
loop
adc
cmpsb
inc
outsb
shlb
xchg
pop
add
jp
cmp
sbb
mov
pop
mov
cmp
mov
int
sub
fs
mov
addl
cmp
xor
daa
cmp
push
add
xchg
cmp
nop
push
insl
cmp
pop
cmpsb
mov
loop
loope
push
rorl
sarb
pop
jl
inc
ljmp
cs
je
mov
push
sti
call
std
negb
jae
xor
fnstenv
push
jle
mov
mov
dec
jle
sub
movaps
addb
jmp
test
inc
add
in
pop
jns
xchg
pop
xchg
add
outsb
inc
mov
popa
jecxz
outsb
repnz
cmp
inc
inc
popf
inc
jb
fildl
sbb
adc
mov
scas
adc
pop
dec
test
mov
movsl
mov
clc
push
adc
and
mov
cmpsl
gs
ret
xchg
cwtl
pop
adc
or
cwtl
cmp
fcoml
lcall
out
xchg
inc
adc
stos
cli
push
pusha
in
insb
xchg
dec
cmc
ficomps
dec
lock
imul
dec
or
add
outsl
in
jbe
scas
sub
insl
fwait
aaa
fwait
icebp
mov
das
ret
or
xchg
inc
lods
push
arpl
xor
ds
jns
fidivrs
jnp
push
nop
xchg
aas
push
mov
jl
mov
enter
fwait
out
mov
std
test
and
xchg
sahf
jecxz
cwtl
int
leave
inc
sbb
and
cmp
dec
xor
jb
dec
or
pop
dec
clc
pop
clc
inc
cmpsb
das
add
pop
std
mov
shr
fwait
xor
xchg
mov
dec
push
sub
mov
stos
inc
outsl
out
mov
incb
xchg
inc
adc
pop
and
jg
dec
push
ss
mov
sbb
adc
les
mov
add
cmpsb
pop
repz
std
pop
jmp
or
fstl
flds
out
pop
inc
pop
test
and
mov
addb
lods
xor
push
inc
lods
das
mov
xchg
cmp
add
xor
xchg
sub
not
lock
sub
add
popf
inc
pop
add
lret
push
pop
add
enter
mov
popa
inc
pop
fidivrs
lahf
pop
cld
icebp
out
test
pop
sub
fimuls
scas
daa
mov
mov
inc
push
lcall
push
dec
adc
and
ret
int
adc
inc
into
xchg
xchg
push
jbe
cltd
enter
int
or
adc
out
outsl
sbb
lea
dec
inc
adc
enter
jmp
fxch
out
push
adc
aas
jbe
xchg
sbb
mov
dec
dec
xor
sub
test
rorb
je
xor
jns
mov
divb
sbb
sbbb
aad
into
scas
pusha
mov
mov
inc
or
gs
cmp
mov
rorb
call
mov
cld
stc
mov
ljmp
xchg
fidivs
ds
jno
push
sti
sar
mov
test
out
scas
xor
sub
mov
mov
sub
sub
jnp
mov
stos
loope
test
adc
aam
push
lds
leave
xchg
mov
popa
nop
xchg
aas
jns
cmc
mov
insl
out
cld
scas
insb
in
ret
adc
sbb
mov
mov
xchg
es
das
in
js
ja
lcall
sub
rcl
adc
movsl
xor
or
insl
call
stc
sub
pop
in
or
nop
cli
jns
dec
into
lahf
cmp
mov
aas
cmp
pusha
xor
and
push
xor
fwait
pop
push
sub
and
xchg
inc
cmc
mov
mov
push
mov
sbb
adc
inc
mov
hlt
adc
and
out
jle
clc
rorl
jb
jg
je
push
mov
scas
in
aas
cmp
sbb
inc
or
jl
xchg
adc
adc
sarl
xchg
rorl
rorl
ss
cld
pop
and
cmpsl
xor
and
jge
sbb
in
outsb
fadds
fwait
push
je
xor
xchg
jbe
pop
dec
or
mov
test
xchg
mov
aaa
into
push
push
std
rorb
mul
pushf
cmp
popa
clc
pop
pop
pop
add
insl
xchg
and
adcl
int
xor
push
out
fs
xorl
lods
xor
pusha
orl
jp
arpl
daa
lods
stos
jb
push
xchg
out
or
xchg
gs
nop
std
bound
lods
jmp
xchg
mov
xor
xchg
inc
pop
sub
mov
xchg
jge
and
mov
hlt
into
mov
ret
jle
int3
icebp
pop
cld
leave
pop
inc
adc
adc
mov
sbb
pusha
hlt
lret
je
or
jb
das
andl
mov
xlat
mov
mov
sub
lods
adc
cmpsb
out
fldl
gs
dec
fwait
mov
jg
jne
push
fs
mov
sbb
call
std
xor
mov
adc
dec
dec
adc
sub
sbb
mov
cmp
mov
cmp
loop
and
or
cltd
dec
or
imul
out
mov
cmp
push
stos
fwait
ds
dec
test
jl
jns
lahf
add
data16
loopne
std
inc
fldcw
lahf
xchg
rorl
mov
add
mov
mov
lss
call
icebp
andb
adc
je
inc
dec
int
fwait
xchg
data16
cmp
out
insl
inc
and
je
popf
adc
das
mov
and
ljmp
cltd
out
sbbl
cmp
andb
scas
rcll
cmp
dec
adc
mov
push
out
mov
xchg
mov
and
cmpsl
adc
jle
inc
adc
loopne
insl
inc
inc
mov
mov
jbe
sub
pop
adc
loop
test
push
sub
xchg
inc
nop
push
add
stos
cli
dec
mov
adc
fcmovnb
sub
sub
jg
mov
lret
jg
lods
mov
jp
mov
push
lods
jno
or
cmpsb
mov
lds
mov
mov
data16
test
pop
decl
cmpsl
sub
xor
test
adc
fsubl
dec
adc
loope
add
push
sarb
ret
jmp
jmp
mov
lcall
pusha
jae
es
insb
add
add
pop
dec
or
notl
ss
ret
nop
push
dec
orb
adc
sti
ret
loop
ret
lret
cmp
movsl
sub
inc
mov
jbe
ret
shlb
push
int3
cli
fmull
leave
mov
sub
mov
mov
adc
mov
adcb
mov
nop
mov
mov
roll
das
cld
dec
pop
push
xor
jbe
nop
jnp
das
sahf
lret
xor
jns
and
dec
or
ds
stc
jo
xchg
sub
ffreep
mov
stos
cmp
mov
pushf
aas
mov
push
jno
gs
gs
xor
fabs
imul
add
sub
movsb
bound
push
and
add
jle
cli
pop
insb
in
adc
stos
sub
dec
std
sbb
stc
pusha
jb
xchg
ljmp
das
dec
mov
inc
push
stc
and
cmpsl
divb
push
push
scas
xor
mov
xor
xchg
test
pop
insl
cmc
xchg
cmp
cmp
stos
hlt
add
loope
dec
adc
sbb
pop
add
push
orb
into
popl
push
mov
sbb
xchg
leave
xchg
orl
add
and
sub
xchg
cmp
lahf
into
mov
sar
shll
in
xchg
in
sbb
dec
sbb
out
sub
repnz
cmp
adc
rorl
imul
push
push
mov
xchg
sarb
push
push
xor
lods
lea
adc
sub
addr16
loop
mov
mov
repz
dec
insb
ljmp
jno
jecxz
rorl
mov
inc
mov
scas
lcall
jge,pn
xor
sbb
xchg
and
insl
adc
repz
sub
pop
stos
cmp
imul
lret
xchg
pop
aad
fs
xchg
aaa
outsl
cmp
orb
jp
mov
loop
cld
adc
or
pop
inc
or
inc
pop
aad
adc
pop
jno
jo
inc
aam
xchg
mov
mov
adc
jne
and
lcall
loopne
pop
inc
adc
jno
lahf
cmp
outsl
and
outsl
sub
adc
or
dec
loop
repz
data16
mov
jne
fisubrl
mov
cli
gs
mov
xchg
cmp
je
mov
nop
lret
jnp
dec
mov
xchg
loope
jle
jae
icebp
xchg
adc
dec
mov
xchg
push
sbb
leave
and
push
mov
orb
pop
inc
xor
cs
pop
das
fnstcw
xchg
popf
xorl
or
and
push
add
jmp
mov
fdivrl
sub
jo
popf
mov
insl
shrb
insb
subb
data16
cs
ja
push
arpl
or
js
xor
dec
out
add
mov
aam
fwait
adc
lret
dec
test
loope
push
inc
push
xor
gs
mov
bound
push
jmp
orb
mov
or
dec
test
push
fwait
push
std
push
jl
inc
gs
decl
fcmovne
xchg
pop
sbb
add
mov
jo
inc
lea
stos
add
out
push
mov
mov
sahf
mov
mov
adc
call
mov
mov
les
sub
sbb
lcall
jnp
jb
sub
mov
mov
lds
mov
mov
jnp
jle
insb
call
add
repz
pusha
aaa
into
xchg
pop
inc
xlat
nop
and
push
mov
movsl
js
call
in
ficoml
jne
jge
mov
cli
arpl
add
pop
mov
mov
hlt
arpl
int3
push
add
cmc
push
add
mulb
mov
xchg
inc
roll
leave
lcall
push
cmp
ja
dec
enter
push
ljmp
sbb
xor
or
aam
inc
xchg
add
mov
adc
jb
sbb
push
dec
sahf
cmp
int3
iret
jmp
push
hlt
stos
sub
test
sti
adc
cmpsb
pop
jo
ret
shl
pop
sbb
mov
arpl
jbe
jecxz
or
aas
fwait
cmp
and
mov
mov
inc
sub
inc
fadds
cmp
mov
or
aas
movsl
out
inc
or
cmc
pop
add
sarb
mov
ja
sub
or
xchg
cmp
pop
test
jmp
xchg
notb
movl
ret
mov
fwait
push
inc
in
fidivl
orl
pop
outsb
out
loop
cwtl
cmp
sti
pop
std
xorl
lods
mov
mov
mov
jp
int3
arpl
fwait
push
clc
mov
iret
xchg
movsb
cmp
inc
adc
out
xchg
jmp
imull
mov
in
in
mov
jae
cld
pusha
in
dec
push
xchg
cmp
mov
xor
mov
and
out
add
arpl
cld
pop
inc
inc
dec
or
mov
xorl
sub
mov
insb
and
enter
push
lods
or
mov
pop
inc
or
les
stos
enter
xor
mov
into
and
sub
cmp
sub
insl
repnz
test
orb
mov
frstor
jbe
jmp
cmpsb
xor
icebp
mov
push
mov
sbb
ret
inc
mov
jne
sub
mov
test
mov
add
cwtl
mov
gs
and
test
xor
inc
aam
and
mov
loop
mov
mov
and
mov
mov
imul
enter
inc
pop
mov
push
in
stos
sub
nop
xchg
inc
stos
push
std
pop
shll
std
push
cwtl
sbbl
roll
in
cmp
dec
mov
inc
or
and
in
jne
out
fsubs
mov
daa
push
fiadds
push
adcl
pop
and
iret
push
jmp
pop
jnp
in
pop
mov
add
daa
stos
inc
push
push
les
pop
mov
and
addr16
xor
mov
lods
pop
push
cmpsb
sub
mov
and
jg
jl
add
repnz
inc
push
test
cwtl
cli
gs
cli
gs
mov
aaa
mov
cld
pop
and
pop
xchg
xlat
stos
xor
inc
loopne
lock
in
cmpsb
gs
test
xor
or
pop
sub
jbe
out
movsb
fs
jl
dec
adc
mov
xor
out
push
sub
into
pop
inc
orl
int3
sti
fisubrl
dec
adc
or
and
push
push
out
and
mov
mov
imul
and
ljmp
das
stos
xor
pop
cld
shrb
call
dec
incl
sbb
iret
add
dec
or
test
mov
mov
out
lcall
movsb
pop
xchg
inc
sarb
jnp
repz
pop
and
ss
jae
cvtpi2ps
inc
and
push
xchg
negb
push
jne
cmp
in
jne
sub
movsl
ret
cmpsb
dec
adc
adc
xchg
clc
inc
aas
mov
push
sahf
out
jo
mov
hlt
call
test
sub
pop
cmp
movsl
push
icebp
pop
cli
and
js
imul
cmp
insl
xchg
sub
pop
rcl
jnp
mov
rol
pop
cmc
inc
pop
ja
dec
xchg
jl
lds
xor
inc
pop
add
mov
xchg
cmp
xor
push
mov
lods
push
xchg
xchg
or
jbe
and
dec
popa
mov
mov
aaa
cwtl
test
mov
pop
and
xchg
pop
push
out
jb
and
adc
movsl
imul
jb
bswap
jne
je
pop
arpl
pop
nop
es
lea
scas
add
push
jns
imul
iret
xor
and
movsl
fcmovnb
callw
mov
aam
lret
or
in
mov
pop
xor
and
arpl
arpl
inc
cmpsb
sub
or
cwtl
push
adc
mov
mov
cmp
sbb
mov
mov
adc
jmp
jmp
push
hlt
in
insb
ja
dec
or
loop
aaa
cmpsb
jle
mov
pop
addr16
lock
jmp
lds
imul
pushf
pop
das
lods
test
hlt
fs
daa
mov
push
clc
pop
mov
cmpsl
gs
je
in
idiv
popa
cmpsl
mov
or
dec
adc
mov
inc
daa
mov
mov
cmc
into
lret
loop
dec
popf
add
mov
lret
adcl
sbb
les
inc
pop
int3
call
sti
pop
call
repnz
push
and
add
or
sbb
dec
push
dec
mov
add
adcb
sbb
lret
mov
sti
frstor
inc
adc
inc
out
push
lcall
push
mov
sarl
hlt
jecxz
fmulp
mov
push
cli
inc
xchg
std
mov
xor
fldt
outsl
out
call
repnz
mov
sahf
inc
adc
negl
sub
fiadds
cmp
std
lcallw
leave
adc
add
push
xchg
sub
faddp
stc
popa
fimull
push
sub
test
push
les
roll
outsb
pop
mov
dec
fisubrl
jp
cmp
lds
jl
orb
inc
or
jne
cli
jmp
inc
push
pusha
in
ret
jne
out
int3
js
pop
mov
lods
in
mov
lods
jp
icebp
push
ret
cmp
sar
aas
mov
dec
jns
fs
pushf
loopne
stos
adcl
mov
and
cmp
test
es
sub
and
stc
aam
lahf
cmpsb
in
xchg
mov
mov
cmp
push
add
daa
inc
adc
stos
daa
cltd
sub
je
ret
or
sbb
push
leave
ljmp
fldl
fdivl
pushf
test
xchg
test
addr16
push
mov
cmp
aam
cmc
pop
adc
inc
insb
cmc
into
mov
mov
subl
jge
mov
and
movsb
mov
jl
stos
and
push
add
adc
aaa
mov
scas
shlb
add
sahf
stos
lock
mov
jp
stos
jecxz
xchg
push
sbb
addr16
jg
jp
movsl
outsb
jle
nop
push
jno
fimuls
jl
cmp
ficompl
mov
clc
sub
flds
pop
cltd
push
add
pushf
inc
sub
dec
movb
ret
xchg
dec
or
pop
push
lcall
sub
mov
fldl2e
inc
or
or
negb
les
int
mov
xor
jnp
push
std
in
insl
outsl
out
xchg
cmpsb
add
loop
mov
pop
mov
xchg
mov
int
ds
clc
inc
adc
inc
adc
push
cwtl
das
push
sub
pop
adc
cwtl
adcb
dec
lahf
mov
xchg
cmp
out
shrb
and
pusha
fwait
aas
xchg
movsb
imul
nop
push
sub
int3
or
leave
mov
stos
in
cmp
mov
pop
cs
out
push
push
mov
dec
mov
adc
mov
lods
sub
xlat
sbb
adc
enter
push
dec
sahf
cmp
aaa
imul
mov
int
push
outsb
ljmp
lock
test
aad
fcmovne
mov
test
jmp
int
sbb
jbe
jp
sub
pop
cmp
cwtl
push
sbb
mov
lds
fisubl
scas
mov
jle
in
jbe
insl
sub
in
xor
and
mov
leave
add
sub
xlat
test
das
aam
mov
mov
fsubrs
jns
aad
fistpll
or
adc
mov
xor
movl
mov
add
es
dec
pushf
mov
jp
dec
sub
xchg
adc
xchg
jecxz
addr16
icebp
and
and
xor
lea
mov
cmp
or
lcall
cwtl
add
lahf
aad
int
leave
jecxz
ljmp
dec
sub
dec
or
mov
into
gs
orb
mov
fisubrs
lahf
inc
mov
stos
pusha
in
rcrl
nop
pop
or
lea
mov
ja
jmp
or
xor
pop
adc
xor
cs
cli
jge
and
in
inc
xor
outsb
sub
pop
jbe
divl
int3
xchg
dec
or
lcall
loop
in
push
test
mov
orl
mov
sub
les
inc
xor
movsb
mov
call
sbb
nop
cmc
mov
out
lret
xchg
je
and
sbb
jecxz
pop
das
sbb
push
cmp
jb
test
dec
push
fcmovbe
popf
xor
out
mov
into
enter
mov
mov
pop
cli
jne
mov
pop
inc
sub
movsb
mov
popa
neg
scas
sub
fisttpll
adc
incb
dec
dec
daa
pop
add
lcall
adc
test
dec
fdivrl
scas
lods
cs
lea
popa
xor
push
rolb
push
or
push
mov
es
fwait
aaa
jnp
sub
mov
push
test
xchg
inc
or
cmp
inc
pop
and
aad
mul
jbe
mov
adc
and
int3
mov
add
mov
pushf
aaa
jle
add
mov
xchg
inc
pop
lods
sbb
inc
add
pop
mov
les
outsb
in
dec
cmp
sahf
js
sahf
aaa
mov
cmpsb
mov
shrb
mov
xchg
inc
pop
push
lods
push
jnp
pop
lods
daa
pushf
inc
cli
mov
enter
lahf
inc
idivl
imul
cltd
sbb
mov
orl
addr16
cli
pop
arpl
lods
jecxz
mov
in
into
mov
sarb
js
lock
cmp
insb
sbb
dec
adc
dec
repz
ficoms
sub
xchg
shlb
rcll
mov
and
cmp
jge
inc
push
add
rcl
jg
test
sti
shll
push
jl
test
arpl
pop
push
in
icebp
adc
push
pop
rorl
pop
and
jp
mov
add
mov
out
cltd
daa
sarb
leave
std
arpl
mov
insl
jno
negb
add
push
mov
sub
shll
push
mov
pop
add
and
int
adc
insl
lods
mov
sbb
daa
clc
xchg
cmp
int3
and
es
mov
jb
sub
cmp
outsl
add
add
mov
and
insl
push
dec
adc
jns
ret
push
cmpsl
fildl
and
mov
test
push
mov
fsubrl
inc
adc
je
orl
ds
jle
mov
jge
scas
dec
or
leave
test
dec
adc
gs
jge
cli
cmpb
shl
jmp
repz
pop
outsl
les
rcrl
jne
jb
pop
pop
icebp
mov
mov
push
sbb
dec
addr16
pop
std
jge
pop
clc
inc
data16
jae
scas
jno
ret
jmp
jbe
sbb
stos
xchg
test
das
imul
ret
je
cmpsb
jns
lods
sbb
lds
xchg
cmp
ret
jb
orb
or
jp
fmuls
rclb
sbb
lahf
inc
aad
imul
movsb
jp
jg
dec
outsl
mov
sahf
add
jmp
lahf
cmp
popa
test
mov
mov
lret
pop
ljmp
fwait
or
cmp
and
push
vsubpd
ss
sub
sbb
xchg
stos
xor
mov
mov
pop
mov
leave
loope
sub
cld
pop
jno
data16
or
addr16
push
lods
cs
fs
ja
aad
add
movl
mov
jmp
mov
lahf
fcoml
xor
test
arpl
or
jge
adc
rolb
sbb
or
dec
jecxz
xchg
lcall
daa
out
xor
mov
jno
xchg
jnp,pt
mov
inc
outsl
jmp
xchg
sti
xor
cmp
lcall
push
inc
icebp
rorb
jns
addr16
push
fiaddl
pop
aam
bnd
and
jmp
subl
pop
iret
mov
call
xor
inc
xlat
pop
test
sub
sub
loop
jae
push
push
mov
stos
ret
push
xchg
adc
sbb
inc
or
dec
pop
sub
sub
sahf
leave
xchg
out
mov
adc
int
mov
push
cmp
add
je
dec
cmpsb
xchg
lahf
inc
mov
scas
mulb
enter
dec
and
jge
hlt
mov
inc
fidivrl
xchg
xor
jb
orb
aas
dec
adc
iret
inc
xchg
or
pop
iret
inc
push
out
lock
fdivs
adc
pop
lds
sti
pop
mov
jle
cwtl
shrl
jae
shrb
test
loopne
jmp
bound
orl
cmp
fsubrl
hlt
lcall
cmpsl
xor
insl
mov
add
jb
mov
add
add
inc
lock
cli
pop
sub
leave
mov
out
adc
scas
sbb
or
mov
push
cmp
std
jo
leave
push
in
lcall
nop
inc
dec
jns
es
xchg
sub
ret
cmp
inc
outsb
in
negb
lods
daa
lods
orb
mov
inc
adc
add
jp
and
out
sbb
int3
cltd
lea
adc
in
test
push
dec
loop
and
sub
dec
adc
cmp
mov
ss
lock
add
into
bound
push
pop
adcl
stc
push
xor
sub
pop
je
popa
test
lret
pop
lcall
imul
push
shll
jge
push
and
xor
jae
mov
sub
cmp
push
into
shrb
xor
xor
out
jae
daa
and
cmp
test
and
mov
in
fldenv
lea
sub
mov
jne
mov
fs
or
sbb
pop
popa
lods
xor
test
xchg
pop
out
inc
enter
repz
lds
js
sahf
aas
fisubrl
xor
or
test
pop
push
fistpl
xor
dec
sbb
imul
es
out
inc
push
sbb
dec
mov
sub
cld
data16
xchg
cmp
aam
xchg
mov
or
js
and
cmc
imul
mov
dec
sbb
int3
sti
cltd
mov
inc
cmp
out
sub
mov
stos
xchg
sub
pop
pop
mov
scas
inc
xor
int
addl
fwait
xor
mov
sub
daa
mov
sub
adc
cli
pop
sahf
lcall
icebp
mov
movb
out
push
sbb
jmp
test
sarb
scas
adc
xor
add
push
ljmp
jno
or
es
fadd
pop
push
jg
inc
mov
in
popa
ror
bound
add
push
aad
mov
jns
sahf
stos
daa
ds
lret
and
rep
sbb
jp
std
outsl
stc
mov
roll
mov
aad
mulb
push
cltd
pop
hlt
mov
push
test
aas
mov
sbb
aas
mov
int
pusha
insl
add
add
in
xor
push
jae
mov
stos
inc
cmp
enter
scas
inc
lods
out
fisttps
addl
jmp
aam
and
movsl
inc
fcom
inc
daa
mov
sub
jge
jnp
arpl
sbb
sbbl
and
xlat
outsb
jne
mov
mov
cmp
jb
ljmp
mov
fists
scas
adc
xor
add
test
mov
mov
data16
jno
or
es
fcmovnb
pop
or
cs
pusha
ror
bound
addb
mov
jmp
mov
test
aas
push
leave
and
hlt
test
lret
cld
insl
stc
sahf
sbb
adcb
jo
dec
mov
ret
insl
cmc
gs
mov
imul
xchg
cmp
pop
sbb
ds
int
pop
outsb
add
xor
jae
xchg
xchg
sub
pop
leave
pusha
mov
scas
inc
sub
out
fimuls
fs
add
adc
and
and
inc
daa
mov
daa
cltd
inc
fmul
dec
jge
jp
arpl
sbb
fwait
xor
cmp
mov
ss
inc
xlat
outsb
je
mov
mov
aaa
jmp
stc
nop
mov
ficoms
scas
jle
xor
add
adcl
xor
or
xchg
es
fcmovb
pop
or
lods
inc
scas
sub
lret
bound
addl
adcb
add
pop
sahf
cmpsl
and
and
hlt
test
inc
fisttpl
jnp
sti
insb
stc
popf
sbb
xor
adcb
outsl
mov
ss
ret
hlt
fs
mov
push
cli
xchg
cmp
xor
jmp
sbb
cmp
pop
outsb
add
xor
jae
test
inc
cmpsb
xchg
sub
push
leave
pusha
mov
scas
inc
sub
int
jle
add
adc
and
and
inc
fcom
inc
daa
mov
es
inc
fmul
inc
jge
jns
arpl
sbb
sbbl
and
xlat
outsb
jae
mov
mov
call
stc
nop
mov
fstl
scas
push
lea
mov
fildll
adc
mov
fs
or
xchg
es
fld
pop
or
inc
lods
sub
jl
into
lret
bound
addb
mov
jmp
mov
cmpsb
and
push
and
hlt
cmpsl
sbb
enter
imul
sbb
pop
out
outsb
mov
ss
rcl
repz
mov
adc
cli
xchg
cmp
sbb
cmp
ss
pop
outsb
add
xor
jae
test
stos
inc
xor
push
leave
pusha
mov
scas
inc
sub
int
jge
add
adc
and
and
daa
mov
and
inc
jge
js
arpl
sbb
sbbl
pop
lahf
roll
jb
mov
mov
xor
adc
mov
fcoml
scas
or
cs
add
adcl
arpl
jno
add
es
es
fadd
pop
or
inc
lods
sub
jl
int
jle
lcall
and
movsl
and
push
es
movsl
sbb
dec
jnp
clc
push
cli
fwait
sbb
sbb
insb
mov
aaa
inc
mov
mov
mov
jae
adc
cmp
sbb
cmp
outsb
add
xor
jae
addl
inc
xor
xchg
sub
push
leave
pusha
xchg
scas
inc
sub
int
jl
add
adc
and
and
daa
mov
and
inc
fadd
inc
jge
ja
arpl
sbb
sbbl
push
mov
outsb
jno
mov
mov
xor
jb
out
stos
pop
mov
nop
mov
fistl
scas
or
dec
out
sub
insl
add
adcb
xor
or
test
es
xlat
pop
or
inc
stos
sub
jl
int3
lret
jge
lcall
and
movsb
and
push
lds
mov
movsb
pop
inc
fmull
jnp
imull
cli
lcall
sbb
imul
inc
mov
mov
mov
fdivl
adc
cmp
sbb
cmp
add
das
scas
mov
loopne
jae
addb
inc
xor
leave
pusha
xchg
scas
inc
sub
int
jnp
add
or
and
and
daa
mov
and
jge
jbe
arpl
sbb
sbbl
sbb
xlat
outsb
jo
mov
mov
xor
jb
in
stos
push
xchg
nop
mov
ficoml
scas
or
xor
add
jg
ljmp
jno
add
es
pop
or
inc
stos
sub
jl
lret
lret
std
jl
lcall
and
mov
ret
es
mov
les
addr16
cwtl
pop
fwait
xor
sbbl
pushf
or
aaa
ds
mov
lea
fdivl
arpl
xchg
add
xor
out
sbb
cmp
outsl
push
mov
push
in
sub
dec
jae
addb
inc
xor
lret
hlt
scas
inc
cmpsl
call
fs
push
popf
sub
and
jge
or
rolb
mov
and
jle
jne
arpl
push
xchg
pushf
xor
aaa
sbbl
sbb
lahf
ss
fidivrs
ret
xor
jb
in
stos
adc
ss
fcoms
scas
or
xor
add
scas
mov
pusha
iret
jno
add
es
aad
pop
pop
jbe
inc
test
out
pop
leave
lret
sti
jnp
fwait
lods
sbb
orl
or
push
shll
bnd
mulb
ret
jge
cmc
gs
xchg
push
pushf
xor
sbbl
fwait
or
outsl
out
pop
mov
mov
fdivl
bound
xchg
xor
push
sbb
aaa
test
into
fstps
pop
mov
push
in
sub
or
lods
inc
xor
lret
repz
inc
and
inc
int
js
push
popf
sub
and
jl
or
iret
aas
daa
mov
and
jle
je
arpl
adc
sbbl
sbb
fsubrs
fnstsw
ret
jb
jecxz
stos
adc
stc
nop
mov
xor
data16
pop
scas
or
xor
add
lods
sub
jno
add
es
aam
pop
push
jne
inc
cmpsl
daa
out
pop
enter
jp
fwait
stos
sbb
orl
or
dec
shlb
icebp
jo
mulb
ret
hlt
fs
xchg
adc
sbbl
lcall
outsl
in
pop
mov
mov
fdivl
popa
adc
xchg
xor
xor
in
sbb
cmpsl
aaa
into
fcoms
pop
mov
push
in
sub
jae
jge
lods
inc
xor
lret
repnz
inc
and
call
fs
push
popf
sub
and
jnp
or
into
ds
mov
and
jle
jae
arpl
adc
pushf
xor
xor
mov
ss
fdivrl
shrl
jb
loop
stos
adc
xor
gs
pop
scas
pop
xchg
mov
fldcw
or
ljmp
jno
jg
inc
mov
nop
daa
push
ror
pop
add
scas
inc
cmpsb
and
int3
arpl
js
fwait
test
lret
sti
insl
or
dec
mov
pop
negb
sarb
arpl
adc
out
mov
cmp
mov
mov
mov
scas
fnsave
adc
xchg
xor
sbb
xor
cmp
xlat
push
jo
xchg
push
in
sub
je
jl
lods
inc
cs
xchg
sub
dec
lret
icebp
mov
and
into
gs
push
popf
daa
cwtl
in
or
and
jns
or
int3
cmp
pusha
negl
nop
inc
ffree
aas
jle
jno
fs
adc
sbbb
out
push
sbb
fsubrs
fstpt
lea
loopne
stos
adc
xor
arpl
sbb
mov
ss
xlat
outsb
add
stos
sub
jge
inc
scas
pop
xchg
sub
enter
scas
inc
movsl
and
jge
int
clc
jbe
fwait
cmpsl
sbb
orl
mov
popf
sbb
dec
mov
pop
negb
mov
gs
xchg
adc
out
mov
cmp
mov
outsl
jmp
or
mov
adc
xchg
xor
sbb
xor
jo
test
push
out
sub
jne
jnp
lods
inc
sub
xchg
sub
dec
lret
lock
and
iret
data16
push
popf
and
inc
and
ja
or
lret
shrb
negl
inc
faddp
cmp
gs
adc
sbbl
in
push
push
xchg
outsl
imul
testb
ficoms
jno
xor
popa
aam
mov
adcl
es
into
push
aad
add
stos
sub
std
jnp
inc
lods
push
xchg
sub
enter
mov
movsb
and
jge
divl
movsl
sbb
test
and
pushf
sbb
dec
mov
pop
negb
mov
data16
xchg
setl
inc
mov
sbb
bound
cmp
mov
outsl
out
rcrl
testl
mov
std
xchg
xor
sbb
xor
pop
test
push
out
daa
cmpsb
mov
jp
lods
inc
sub
popa
jle
mov
and
iret
data16
push
popf
and
in
test
inc
and
jbe
or
leave
cmp
shrb
sbb
jle
outsb
loopne
cld
adc
sbbl
jecxz
push
adc
fsubrs
fnstcw
lea
adc
push
cmp
mov
xor
pusha
rcrl
mov
adcb
and
outsb
add
test
lret
cld
jp
inc
lods
sbb
enter
mov
mov
ret
into
gs
jae
pushf
movsb
push
in
test
and
lcall
shr
pusha
negl
mov
data16
nop
push
popf
xor
mov
sbb
popa
mov
cmp
mov
jo
push
rcrl
clc
cmp
push
lods
mov
std
xchg
das
lods
xor
ficoms
mov
call
xor
jo
xor
out
movsl
mov
jns
lods
inc
sub
lret
out
mov
and
iret
data16
push
popf
and
and
jne
or
enter
imul
negl
lea
mov
fbld
adc
sbbl
loop
push
adc
mov
outsl
fdivrs
mov
lea
fcoml
or
cs
pop
rcrb
mov
adcl
push
shrl
add
mov
pop
leave
jae
sti
jns
inc
stos
sbb
sub
enter
mov
mov
ret
hlt
jb
pushf
mov
les
mov
cltd
push
inc
flds
sub
jmp
pusha
negl
mov
data16
or
test
loop
mov
cmp
push
rcrl
clc
cmp
push
lods
mov
std
xchg
lods
xor
fisttpll
mov
push
jmp
rcll
pop
xor
out
and
inc
jne
js
lods
inc
sub
lret
in
mov
pop
sahf
call
data16
push
popf
and
mov
sbb
sub
push
pusha
negl
mov
mov
fisubs
jle
sbbl
loope
push
adc
outsl
data16
mov
lea
fistl
or
sti
xchg
mov
xor
pop
rcrl
mov
adcb
and
into
push
shrb
add
push
in
cmpsl
and
jae
cli
js
inc
stos
sbb
pop
std
outsb
mov
mov
ror
repz
pushf
mov
ret
and
cwtl
adc
sub
ljmp
fistpll
jle
jmp
data16
mov
sbb
pop
mov
cmp
fnstenv
push
rcrl
clc
aaa
test
jbe
pop
push
lods
mov
std
xchg
sub
dec
sbb
mov
jo
xor
mov
ja
lods
inc
sub
lret
in
mov
push
popf
call
data16
push
popf
and
and
jae
or
cmp
shrb
negl
mov
mov
frstor
push
lea
popa
loopne
push
adc
fsubrs
mov
lea
ficoml
or
xchg
scas
sub
leave
pop
rcrb
mov
jg
out
and
into
push
shrl
add
in
cmpsb
and
and
jae
stc
ja
inc
test
lret
cld
insl
mov
lahf
sbb
into
gs
pushf
mov
ret
repz
inc
mov
pusha
notl
mov
data16
lea
popf
xor
scas
test
loopne
mov
cmp
mov
jo
push
rcrl
clc
cmpsl
fbstp
push
push
lods
mov
std
xchg
sub
xor
fisttpl
mov
cld
push
jmp
rorl
pop
xor
out
and
jne
jbe
lods
inc
daa
cwtl
xchg
sub
dec
lret
jmp
dec
sbb
ds
data16
push
popf
and
and
jb
or
lds
sub
push
mov
mov
fsubl
or
sbbl
fistpll
cmp
mov
lea
fsts
or
scas
sub
leave
pop
iret
sbb
scas
and
into
push
shrb
add
movsl
and
clc
jbe
inc
test
xchg
sub
enter
mov
sahf
sbb
jle
mov
add
test
mov
xchg
adc
inc
mov
shr
pusha
notl
mov
adc
mov
popf
xor
lods
test
fistps
push
popl
mov
jo
push
rcrl
clc
xor
push
push
lods
xchg
std
xchg
sub
sbb
sub
cmp
rorb
pop
jg
push
out
and
jne
jne
lods
inc
es
xchg
sub
inc
lret
ljmp
int
iret
outsw
out
push
popf
pop
xchg
in
test
inc
and
jno
or
les
sub
addr16
notl
mov
mov
or
pushf
xor
fidivrs
cmp
aam
push
push
test
lea
fcoms
or
xchg
lods
sub
leave
pop
into
sbb
lods
and
iret
push
into
outsb
add
movsb
and
divl
cmpsb
sbb
pop
stc
imul
dec
mov
add
test
and
xchg
adc
inc
mov
shl
pusha
notl
jle
out
decb
xor
lods
test
pop
mov
cmp
scas
fldpi
loope
mov
aaa
adc
adc
int3
mov
hlt
sarl
jl
les
ds
add
jecxz
or
je
test
xor
xchg
sub
cmp
add
sahf
jbe
xchg
sti
adc
cmc
daa
xor
cs
mov
pop
iret
sbb
shrl
rcll
jbe
jnp
xchg
and
jne
add
lahf
add
stc
mov
dec
and
nop
pop
mov
mov
jg
sahf
sub
sbb
and
cli
test
inc
sub
or
push
jle
xchg
cltd
jge
insl
cmpsb
dec
ret
add
mov
xor
and
sbb
or
xlat
ror
push
pop
pop
outsl
inc
jge
inc
outsb
mov
mov
stos
sub
sbb
xchg
aam
test
int3
ljmp
out
movsb
pop
fcomip
pop
push
insl
pop
adc
or
lock
jo
jp
loop
test
push
jno
sahf
pop
cs
ljmp
movsl
stos
rcrl
mov
sbb
ljmp
mov
test
bound
inc
adc
push
fucomip
into
sarb
xor
sub
fisubrl
cmpl
gs
cmp
jne
sti
ss
mov
push
xchg
jb
les
cmpsb
cwtl
inc
cmp
aad
in
jle
dec
popf
jno
jmp
pusha
mov
mov
mov
pop
je
sbb
subl
testl
test
cmp
pop
jae
scas
or
test
sbb
push
jbe
mov
push
push
sbb
sahf
test
inc
and
leave
cltd
dec
fcmovnbe
jbe
cmp
insb
insb
adc
testl
pop
pop
jb
jl
mov
cmp
rolb
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
inc
loopne
xchg
repnz
adc
int3
pop
push
mov
test
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
inc
jnp
mov
scas
sbb
ror
fst
testb
ljmp
mull
cld
pop
lea
add
aam
lea
xor
sbb
pop
dec
push
push
int3
add
fadd
dec
dec
mov
call
test
xchg
mov
inc
dec
mov
xchg
call
sahf
outsl
inc
cmpsb
in
mov
adc
fcompl
fsubr
movsb
roll
flds
or
mov
inc
push
les
dec
addr16
adc
insl
sbb
outsl
jp
inc
popa
lret
stos
rclb
jne
call
imul
std
or
cmp
or
push
inc
leave
bnd
out
and
ds
adc
push
xchg
jmp
and
roll
test
dec
inc
pop
es
in
xor
fstpl
push
and
inc
int3
out
fiaddl
insl
pop
stc
idivl
xlat
fadd
hlt
mov
loopne
and
stos
loopew
mov
sbbl
fabs
xchg
fs
shrl
pop
pop
std
cvtps2pd
jmp
loop
mov
pop
iret
jo
mov
and
sahf
in
adc
push
loope
js
adcb
clc
add
cmp
or
je
mov
xchg
inc
push
outsb
lods
mov
and
movsb
mov
imulb
mov
cmp
lods
daa
ljmp
or
lahf
xchg
and
jmp
pop
stos
mov
mov
jmp
aam
insl
xor
lret
ret
pop
mov
and
mov
xchg
pop
dec
dec
inc
adc
add
mov
addr16
jne
out
and
jno
repnz
fst
sbb
push
stos
test
inc
daa
push
add
sub
rorb
inc
xchg
pusha
testl
sbb
hlt
fstpt
scas
wrmsr
jno
inc
push
fidivs
inc
outsl
jp
or
